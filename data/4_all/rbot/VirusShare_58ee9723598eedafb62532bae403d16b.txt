lahf
jb
mov
pop
sub
mov
jo
mov
fsubrl
lret
test
mov
and
sub
lock
sub
mov
lods
cld
or
insl
mov
fs
xchg
and
cmp
int3
pushf
mov
add
cld
rcrb
mov
out
adc
rclb
dec
int
push
inc
lock
cmp
xchg
push
xchg
fcomps
mov
xor
sbb
add
cld
or
lds
mov
dec
sbb
clc
xchg
mov
popa
mov
cmp
mov
dec
sbb
and
adc
scas
dec
pushf
dec
lcall
ret
mov
jl
pop
jns
push
jecxz
movsb
or
insb
jns
pushf
sub
mov
rcll
sub
in
sbb
mov
enter
jg
aam
dec
sbb
mov
mov
lock
das
int3
sbb
sbb
fstp
nop
dec
sbb
dec
bound
sub
push
movsl
dec
sbb
mov
icebp
fisubrs
dec
or
cmp
adc
jle
sub
pop
push
out
add
aas
or
mov
push
js
jnp
mov
cld
mov
or
pop
xor
or
cmp
cmp
stos
cld
or
mov
test
xor
cld
dec
fdivr
inc
test
sub
jmp
stos
dec
hlt
jmp
mov
fsubr
jno
dec
sbb
mov
sbb
cwtl
cmp
das
rcrb
mov
mov
pop
jl
dec
mov
das
cmp
adc
mov
loopne
mov
add
xchg
mov
pop
scas
mov
xchg
xchg
scas
mov
dec
insb
cmp
ficomps
inc
dec
mov
sub
or
decl
ret
xchg
push
mov
icebp
rcll
add
js
pop
xchg
mov
or
lahf
jl
pop
fidivrs
pop
push
cmpl
rorb
push
fdivrl
mov
xor
sub
mov
mov
call
xchg
jl
mov
inc
mov
fsubrl
jp
pop
cmp
ror
test
or
jmp
rcll
leave
ror
test
or
flds
popf
sub
push
insb
xlat
inc
mov
mov
or
sub
sbb
cwtl
cmp
add
push
setl
jl
in
push
xchg
enter
pushf
sub
sbb
in
cmp
jae
mov
insb
jp
pushf
sub
mov
hlt
xchg
call
sbb
mov
pop
pop
jmp
dec
sub
cld
pop
les
je
and
rorl
add
fsubrl
sbb
mov
sbb
rcrl
mov
or
mov
jl
jmp
stos
pushfw
sub
push
add
mov
mov
in
adc
rcrb
add
lods
cld
or
stos
inc
inc
cwtl
xchg
lods
sbb
call
dec
pop
gs
mov
pusha
jge
mov
sarl
sti
jbe
mov
jl
loope
or
add
mov
int3
je
and
cmp
xor
push
mov
xor
mov
pushf
sub
add
stc
adc
lods
cld
jle
mov
mov
iret
fnstenv
fsubrl
aad
xor
call
and
add
dec
sub
mov
loopne
or
xor
pop
and
imul
lods
fs
cld
scas
mov
lea
fldenv
aam
out
fisubrs
je
and
jmp
imul
sub
mov
loopne
or
sub
pushf
sub
enter
mov
orb
mov
mov
pop
push
sub
and
dec
sub
cmp
testl
dec
mov
insl
inc
xor
lock
sbb
inc
cmp
cmc
inc
rorb
sub
sbb
inc
cmp
cmc
inc
fmuls
sub
sbb
inc
cmp
cmc
inc
dec
mov
jnp
loope
sub
sbb
inc
cmp
cmc
inc
dec
mov
jnp
loope
sub
sbb
inc
cmp
cmc
inc
jl
sub
loope
sub
sbb
inc
cmp
cmc
inc
orb
dec
sbb
inc
cmp
cmc
inc
cwtl
mov
jnp
loope
sub
cmp
stc
xor
repnz
adc
jmp
xor
fdivrp
or
xor
push
je
out
scas
aam
jle
lods
mov
repz
je
pop
cmp
or
insb
aas
nop
mov
mov
pop
inc
fwait
stos
in
push
xchg
enter
pushf
sub
int3
xchg
in
cmp
fsts
fsubrl
mov
jecxz
jno
dec
sbb
mov
mov
fs
jmp
movsl
mov
mov
int3
pushf
mov
rcll
sti
je
xchg
dec
in
adc
ret
mov
cltd
popa
xor
lret
fwait
jg
or
in
cmp
pop
jmp
inc
insb
mov
mov
movsl
icebp
clc
aam
dec
adc
cmp
add
mov
shll
and
loope
int3
or
sbb
sub
push
jns
pop
insl
add
lods
cld
inc
lahf
cmc
add
adc
cmp
add
sub
and
andb
cmp
loopne
mov
sub
repz
sub
fdivl
in
sbb
fsubrl
enter
mov
mov
test
in
sub
jl
popa
xor
xchg
test
and
insb
dec
and
icebp
lods
mov
test
sbb
push
and
popf
sub
in
popa
cmp
in
dec
fdivr
add
test
mov
addl
loope
lret
mov
jl
pop
jmp
inc
cmpsl
movsb
in
adc
and
xchg
dec
xchg
test
and
dec
sub
faddl
dec
sbb
sti
or
popf
sub
jne
in
cmp
test
mov
jl
dec
inc
mov
nop
aam
mov
negb
ds
xor
js
fsubr
mov
and
lret
cmp
sbb
or
and
sbb
lods
lea
pop
xorb
fisubrs
inc
sub
mov
aam
pop
lods
bound
test
jnp
xor
dec
movsl
icebp
fcompl
mov
and
mov
clc
dec
sbb
cmp
adc
xchg
cmp
jo
or
insb
idivl
popa
jmp
dec
pop
and
mov
stc
add
pop
add
add
loope
and
push
jl
pop
lods
push
or
push
aaa
setl
cli
dec
sub
cld
pop
imul
rcr
mov
push
cld
xchg
out
cld
pop
fndisi(8087
mov
adc
mov
mov
sbb
hlt
or
mov
fucomip
jno
cmp
stos
push
pop
xor
jl
outsl
jl
shl
mov
hlt
loop
mov
mov
dec
insb
in
fsubrl
mov
mov
sub
or
mov
sbb
mov
mov
movsb
push
inc
out
cld
pop
les
inc
cwtl
loop
shl
test
or
and
pushf
sub
dec
mov
dec
mov
mov
in
int3
fisubrs
cvtps2pd
mov
test
adc
sbb
mov
dec
sbb
mov
fcompl
inc
xor
add
or
xor
pop
and
js
pop
cmp
mov
cld
xchg
popa
sbb
int3
pushf
test
dec
cwtl
jns
cld
or
cld
or
lahf
jl
sti
mov
push
pop
inc
cmp
insb
mov
pop
jb
insb
jns
cmp
cld
in
or
dec
pusha
cmp
shrl
add
fildl
add
xchg
dec
out
cld
pop
fildl
shl
pop
push
ds
icebp
out
or
cmpb
pushf
mov
xorps
dec
rcr
lods
cld
or
mov
lods
jl
mov
mov
sbb
hlt
or
lock
int3
pushf
sub
sbb
dec
ss
sbb
adc
insb
or
fwait
inc
sub
lahf
in
cli
fmull
imul
test
mov
fcompl
mov
push
pushf
mov
cmp
mov
add
pop
jmp
mov
cld
in
mov
in
pop
jmp
pushf
outsl
stos
adc
push
scas
mov
rol
loopne
dec
sbb
adc
scas
mov
into
pop
jns
lods
sbb
insb
lcall
jns
lods
sbb
movsb
lock
sub
shrl
shll
push
jmp
push
dec
insb
out
inc
insb
dec
push
cld
es
in
inc
dec
sbb
dec
or
sbb
setl
mov
int3
lods
pop
push
xor
xor
in
cmp
pop
or
fsubr
push
pushf
jg
rorl
jl
lods
test
ret
test
int3
sbb
out
cld
pop
lret
pushf
scas
inc
cwtl
pop
outsl
or
clc
add
or
leave
lcall
dec
sbb
cmp
jmp
dec
test
daa
dec
fdivrl
sbb
fdivrp
or
sub
pop
and
jp
pop
cmp
rcrl
push
icebp
cli
popf
sub
push
js
adcl
pop
scas
mov
lea
shlb
sti
or
mov
jl
mov
fdivrp
or
xchg
int
in
add
pop
jns
dec
insb
cmp
sbb
push
test
adc
push
sub
cmp
popa
stos
dec
cltd
popa
in
lret
fwait
jl
pop
mov
cmp
mov
out
cmp
sub
xorl
mov
je
pop
lods
in
or
dec
pusha
cmp
dec
sub
fisttpl
insb
jnp
test
sub
dec
sbb
fs
fsubrl
test
lea
adc
lods
cld
jbe
xlat
jl
sub
xchg
or
mov
in
adc
mov
inc
out
cld
repnz
int
jl
adc
in
or
mov
jmp
mov
fdivrl
or
push
icebp
stc
popf
sub
nop
jmp
stos
sti
or
sub
xchg
xor
or
stc
inc
xor
aam
jns
lods
jg
in
lahf
jl
sub
mov
call
fcomi
dec
adc
daa
add
add
sub
insb
dec
push
call
push
insl
pushf
movsb
dec
push
imul
jnp
inc
pop
push
xchg
add
mov
je
sbb
divl
aam
rcrl
cmp
cmp
or
mov
jl
in
jle
jb
lds
mov
mov
fdivr
or
mov
sbb
fisubrs
or
mov
in
adc
mov
dec
out
cld
mov
and
mov
adc
andl
fs
in
cmp
sti
xchg
cltd
xor
fildll
pop
fldt
sbb
sub
iret
adc
jno
push
sub
je
sub
dec
pushf
repnz
outsl
cmp
and
cmpl
addr16
outsl
push
fs
xchg
dec
repz
iret
adc
jo
das
stc
inc
mov
cmp
daa
aas
or
aam
int3
pushf
sub
movsb
mov
cmp
sbb
loopne
pop
insb
aas
les
jno
inc
sbb
sarl
jl
stc
mov
dec
sbb
xorb
mov
cmp
push
popa
negl
mov
pop
or
mov
jnp
lods
aam
ja
lods
data16
icebp
loopne
fwait
sub
aam
cs
add
daa
or
sub
mov
cmp
sbb
mov
dec
sbb
mov
add
stos
into
pop
cmp
cwtl
inc
lods
cld
mov
mov
cmp
dec
arpl
andl
dec
sbb
js
fwait
sub
fdivl
out
cld
pop
inc
dec
lret
int3
pushf
mov
cmp
jb
js
popa
les
mov
pop
std
or
icebp
test
fwait
sub
pop
arpl
cmp
test
imul
push
jge
les
sbb
xorl
lods
aam
jbe
lods
jg
add
pop
sbb
sbb
inc
cmovnp
jmp
insb
mov
jo
das
cmp
adc
or
add
jge
pop
jmp
jl
out
cld
enter
pushf
mov
xchg
xlat
sbb
mov
mov
or
inc
mov
icebp
mov
or
sbb
push
arpl
imul
sub
jecxz
jne
dec
add
and
fsubrs
jno
repnz
sub
cld
sti
and
loope
mov
xchg
or
adc
xchg
jge
pop
push
lds
pop
scas
mov
mov
fisttpl
mov
int3
sbb
sub
iret
adc
or
repz
add
insb
inc
out
cld
pop
fildl
incl
mov
or
stc
inc
js
sub
lods
aas
cmp
daa
aas
or
aam
int3
pushf
sub
cmp
cs
sbb
loopne
pop
insb
aas
les
jno
inc
sbb
sarl
jl
lret
sbb
pop
ss
insb
bswap
mov
test
nop
lret
push
cltd
popa
sbb
fistps
in
pop
lods
or
popa
pop
mov
fwait
scas
fs
and
mov
int3
repz
mov
cmp
lods
cld
or
loope
ss
test
mov
and
push
stos
sti
lea
mov
add
cmp
enter
pushf
xchg
stos
in
call
testb
in
adcb
pusha
inc
adc
std
or
insb
bswap
mov
clc
iret
pop
outsl
mov
jbe
stc
inc
mov
adc
push
clc
mov
neg
pop
in
leave
rorl
test
in
pushf
sub
adc
cmp
lahf
jo
ja
test
dec
dec
sbb
or
or
movsl
das
adc
jge
loop
jns
push
popf
cwtl
mov
push
inc
sub
mov
push
xchg
fcomps
mov
ss
sbb
shll
int3
daa
sub
mov
call
in
out
mov
xchg
mov
shl
lods
cld
leave
cwtl
mov
mov
and
lods
cld
lea
mov
add
cld
shll
inc
or
out
mov
mov
out
scas
or
pop
mov
push
popf
in
add
push
xchg
test
mov
or
in
insl
mov
lods
mov
imul
sbb
and
dec
xchg
push
and
push
xchg
enter
out
mov
pop
test
call
loop
pushf
mov
in
loop
jp
push
cld
les
jecxz
pushf
sub
cwtl
pop
popa
inc
mov
fsubrl
loopne
jno
and
mov
insb
xchg
aad
shlb
xlat
fisttps
push
imul
lods
mov
insb
xchg
and
add
jl
sub
movq
xchg
xor
add
fldcw
jnp
pop
imul
jmp
jg
clc
inc
jge
pop
cmp
mov
aam
inc
lret
adc
scas
dec
inc
ds
xchg
and
adc
mov
iret
pop
lods
jno
data16
push
mov
add
push
sahf
aaa
inc
adc
sub
orl
decl
push
jo
add
adc
mov
in
mov
hlt
adcb
in
sub
dec
jnp
push
iret
xor
test
in
addb
mov
mov
add
adc
mov
mov
dec
sbb
dec
add
ret
mov
mov
cld
xchg
aam
inc
lret
adc
scas
dec
inc
sub
xchg
sbb
dec
jbe
ret
movsb
push
ret
push
arpl
cmp
sbb
inc
or
test
mov
cmpsl
jp
or
imul
push
sub
mov
push
lret
dec
sub
xchg
xlat
or
dec
bound
mov
test
inc
dec
xchg
mov
inc
in
lret
fwait
mov
je
ljmp
loop
add
and
dec
add
xchg
int
xor
movsb
adc
mov
in
xchg
pushf
cmpsl
jp
addb
movsb
jg
sub
push
lock
nop
rolb
push
nop
les
hlt
cmp
cmpsl
cwtl
dec
pop
xor
lods
mov
sub
loopne
mov
sbb
add
push
sub
cmp
sub
movsb
sub
in
push
cmpsl
icebp
clc
xchg
and
int
cmc
aas
loop
fnstsw
rolb
addb
movsb
jo
sub
sbb
inc
xlat
ljmp
mov
sub
stc
or
stos
inc
push
sbb
xor
out
lahf
sub
pop
mov
out
sbb
mov
fldcw
cwtl
dec
sbb
adc
fwait
sub
mov
stos
mov
push
add
fwait
sub
fstps
js
sbb
lock
fwait
sub
fnstenv
push
adc
push
pushf
mov
cmp
push
pushl
dec
sub
je
ljmp
sbb
lret
sub
je
jmp
dec
fisubrl
je
sub
mov
sar
or
xor
pop
jmp
fs
mov
test
fldt
pop
jmp
aam
dec
sbb
mov
roll
leave
rol
mov
and
fwait
sub
fnstcw
push
dec
sbb
mov
cvtps2pd
cmp
imul
sub
cmpsb
nop
insb
xchg
test
test
add
jmp
fldcw
fs
insb
mov
mov
mov
add
stc
or
imul
sub
mov
xchg
and
sbb
movsb
mov
jmp
stos
dec
sub
add
popf
sub
push
push
lods
mov
push
aam
fwait
sub
nop
les
sbb
dec
hlt
les
lret
fwait
sub
pushf
jmp
mov
mov
adc
cmp
stc
in
sub
jo
fwait
sub
flds
dec
sbb
or
jmp
mov
sub
inc
dec
adc
mov
leave
cltd
fcoml
sbb
leave
cltd
int3
xchg
pop
or
imul
pop
popa
sbb
xlat
test
nop
pop
jmp
aam
dec
sbb
or
jmp
hlt
subl
sub
je
call
int3
hlt
sti
push
cmp
jae
cmp
cmp
fnstsw
jg
cmp
loopne
mov
sub
hlt
pop
lock
insb
xchg
add
fldt
sbb
mov
cmpsb
dec
test
or
jmp
sbb
xor
add
les
sbb
movsb
mov
fsubl
pop
stos
sti
cltd
sub
xchg
sub
ror
leave
cltd
or
jno
les
lret
fwait
mov
aaa
dec
sbb
dec
in
cli
mov
fwait
xchg
test
sahf
in
leave
cltd
adc
enter
mov
test
sub
imull
mov
and
jnp
jmp
cmpsl
sti
or
push
pushf
mov
cmp
stos
jno
imul
cmp
imul
les
cmp
mov
jnp
pop
popa
xor
imul
fsts
inc
sbb
leave
fwait
sub
orb
in
fsubrs
lret
adc
or
adc
mov
add
clc
or
stc
or
test
jbe
pop
dec
xchg
and
dec
les
movl
movsb
lock
enter
pushf
addb
fs
inc
jae
mov
pop
xchg
js
lods
jns
inc
sbb
mov
shrl
sti
xchg
cltd
pusha
mov
sbbb
aad
pushf
stc
or
xor
les
add
dec
pop
lods
aaa
rcll
dec
push
nop
sub
lods
inc
and
out
cld
xchg
pushf
loope
lcall
mov
add
shrl
sbb
imul
pop
outsl
jl
mov
cwtl
dec
or
mov
mov
xor
mov
cmp
inc
jo
lret
adc
mov
lahf
movsb
add
pop
xchg
jl
sar
cmp
sub
mov
shrl
addr16
imull
mov
mov
cmp
xor
xlat
or
addl
test
jl
pop
aas
cmpsb
dec
jb
inc
sub
add
lods
into
pop
inc
and
cmp
stc
add
add
lods
into
pop
cmp
aad
fnsetpm(287
xchg
std
insl
mov
mov
clc
mov
hlt
push
lea
imul
pop
sbb
in
std
insl
mov
mov
test
stos
jno
les
inc
aam
lods
mov
dec
xchg
dec
fwait
insb
mov
sbb
call
dec
or
movsb
popa
lcall
dec
xchg
mov
adc
imul
sarb
clc
or
imul
fwait
mov
cmp
jo
mov
shrb
stos
ja
mov
mov
movsb
push
pushf
jge
lods
sti
and
outsb
jl
push
xor
push
lods
mov
fcompl
mov
cmp
jo
aam
xor
sbb
pop
push
shl
outsb
or
outsl
sti
sub
mov
cmp
jo
aad
roll
jge
shll
dec
sbb
fmull
gs
stos
or
cltd
jl
jle
add
and
pushf
mov
test
pop
xor
insl
mov
mov
sub
test
aam
jno
lods
fmul
xor
adc
mov
in
jl
fbld
sbb
sub
mov
pop
dec
inc
adc
je
adc
scas
add
imul
iret
pop
mov
into
sbb
adc
sbb
lods
cld
inc
pop
jl
dec
test
add
jns
jg
in
outsl
roll
das
xlat
ja
outsl
mov
jbe
push
scas
dec
sbb
movsl
or
xchg
pop
dec
fwait
cmp
push
sbb
sbb
les
aad
inc
adc
push
shl
push
adc
pop
push
out
leave
leave
or
in
iret
adc
pop
or
cmp
imul
or
out
les
pushf
rorb
jmp
push
jbe
popa
int
or
push
repnz
sbb
dec
mov
mov
les
pop
dec
sti
pop
arpl
xchg
add
mov
sbb
cmp
cs
xchg
mov
incb
mov
or
movsb
xor
jns
adc
and
hlt
and
int3
and
dec
jne
add
push
aaa
push
push
or
sub
or
sbb
dec
or
mov
mov
outsl
daa
pop
aaa
jno
data16
and
cli
add
inc
mov
sti
cltd
and
sbb
cli
fs
in
cmp
jns
jl
fsubrs
jmp
in
cmp
imul
jl
pop
in
add
dec
fcoml
popf
sub
js
aas
xchg
mov
fdivr
add
aaa
jne
dec
sbb
or
mov
test
cmp
adc
std
cltd
push
insl
repnz
xor
loopne
aaa
pop
push
jo
cmpsl
xchg
flds
dec
pop
lods
aaa
xlat
push
outsb
inc
xchg
aad
xchg
add
andl
mov
scas
pop
in
mov
arpl
loope
lret
mov
test
and
xlat
neg
pop
mov
lea
mov
lods
or
mov
mov
cmp
dec
xchg
cltd
iret
pushf
sub
fsts
pop
pusha
xchg
jmp
cmc
aas
loope
fdivrs
or
adc
mov
cmc
dec
sbb
cld
aas
pushf
stc
jns
xchg
sub
jmp
cmp
xorps
xchg
inc
lods
xchg
sub
mov
xchg
lds
test
or
sahf
in
mov
aad
int3
cmc
jl
mov
cs
mov
aam
rcrb
cmp
or
mov
jnp
lods
push
mov
push
aam
mov
fisubrs
je
jecxz
dec
dec
mov
xor
adc
scas
dec
inc
adc
add
lret
push
lcall
dec
xchg
dec
daa
add
xchg
rcrb
lods
cld
aas
pushf
stc
cmp
pop
in
cmp
adc
into
pushf
sub
mov
icebp
loop
and
lret
mov
test
test
mov
test
sub
jge
fsubrl
inc
sub
mov
cld
or
out
test
daa
and
xlat
ljmp
int3
sub
faddl
dec
sbb
dec
cltd
and
push
push
dec
mov
rcrl
jno
das
push
ret
sub
push
js
jno
fsts
fdiv
mov
mov
call
in
xlat
imul
pop
in
cmp
sbb
imul
fwait
mov
ss
sbb
rcrb
and
lahf
in
roll
fs
fildll
mov
jl
pop
jmp
inc
lahf
sub
push
jmp
mov
fwait
sub
fsts
inc
sbb
dec
push
jl
jnp
lods
aam
insb
sbb
push
xchg
mov
out
out
inc
repnz
sbb
push
xchg
enter
pop
hlt
jnp
xchg
inc
xchg
jae
les
jge
pushf
scas
stc
xchg
pop
bound
lcall
push
push
ficomps
cmp
fsubl
sbb
lret
adc
pop
mov
cld
in
imull
push
loop
call
jne
push
pushf
rolb
or
xor
sub
out
test
popf
jg
fcmovnb
out
movsb
rcrl
mov
lods
cld
pop
js
inc
iret
mov
xchg
in
aas
leave
sub
lret
fs
add
mov
cmpsl
repnz
and
inc
movsb
jl
sub
in
cmp
bound
cmp
sbb
orl
add
xor
test
loope
iret
pop
mov
movsl
xor
mov
out
jge
out
inc
xlat
imul
jg
sar
ja
xchg
std
inc
imul
imul
pop
in
cmp
sub
lret
jbe
push
ss
sub
or
loop
mov
jno
scas
rclb
addl
sti
or
es
sti
fs
in
cmp
pop
mov
int3
push
jno
cld
sahf
outsb
jl
mov
xor
enter
jp
pop
xlat
jne
sbb
movsb
mov
add
in
add
int3
cs
mov
push
jo
mov
mov
xor
ret
repz
mov
pop
sbb
push
xchg
pop
nop
enter
jnp
shl
and
fsubrl
out
sahf
xlat
out
lock
out
cmp
aad
xor
xlat
es
pop
sarl
cmp
insb
mov
push
popa
push
test
or
loop
mov
push
pusha
and
jb
test
dec
hlt
and
cmp
mov
adc
jae
pop
xor
in
sub
cmp
sbb
add
js
aam
cli
shll
cmp
int3
lods
pop
push
je
dec
sbb
mov
aaa
inc
adc
xor
in
test
and
stos
jo
fidivl
in
adc
mov
in
xchg
iret
xorb
dec
add
jl
push
lock
jae
js
in
mov
mov
fsubl
push
arpl
loopne
fcompl
add
add
movsb
lods
mov
stos
jp
add
das
ret
sarb
pop
push
and
in
popf
insl
mov
lea
xchg
and
pop
xor
xchg
addb
lahf
jle
xor
pop
ret
dec
adc
das
mov
movsl
lods
cmp
cld
xchg
push
je
nop
test
outsl
pop
sub
mov
fcomi
jl
cmpsb
mov
nop
in
inc
int3
inc
mov
xchg
mov
xor
inc
mov
jge
add
and
out
adc
fxtract
mov
fldt
xor
leave
and
popa
or
stc
add
and
stc
mov
sar
or
cmc
add
xchg
shll
xor
insb
xchg
pushf
jmp
fs
sub
aad
mov
lcall
out
and
bound
xchg
adc
pop
push
lods
ja
push
sbb
add
mov
push
push
lods
xchg
les
mov
xchg
pushf
jne
push
pushf
or
or
dec
inc
dec
test
jle
push
ja
push
cmpsl
stc
lock
pop
je
lock
jne
dec
sbb
cld
movsl
cs
addl
out
inc
rcll
and
xchg
and
mov
inc
mov
dec
add
cli
or
ret
mov
inc
sbb
cli
or
lret
sbb
mov
sub
in
mov
int
sub
mov
cmp
lods
in
add
and
lods
inc
xchg
int
push
xor
arpl
stc
dec
sbb
cmp
adc
xchg
pop
in
cmpsb
jnp
and
pushf
sub
lea
dec
movsl
icebp
clc
incl
sub
push
sbb
cmp
lahf
sub
or
jo
mov
das
scas
dec
pushf
dec
lcall
nop
les
addb
cmp
nop
inc
mov
sbb
idivb
jge
cmp
pusha
insb
std
lea
in
test
xor
add
popf
outsb
mov
cmp
sub
push
xchg
enter
sbb
mov
mov
pushf
stc
or
stos
sub
jmp
test
jecxz
dec
jmp
pop
cmp
pop
les
adc
xor
fcoml
adc
sti
repz
xor
test
push
sbb
popf
sub
dec
mov
xorl
shrb
mov
das
icebp
cmpsl
sub
xchg
push
nop
adc
inc
rcr
inc
cmp
sbb
rcrb
mov
ss
jl
add
mov
sbb
add
icebp
test
push
pushf
sub
mov
lods
mov
add
push
or
test
mov
xor
out
fwait
mov
mov
outsl
add
hlt
ret
sub
fs
xor
stos
sti
or
call
jmp
inc
add
les
mov
lea
daa
jb
push
cltd
and
test
mov
pop
inc
mov
xchg
pop
jo
int3
add
jmp
pop
jmp
pop
add
pop
or
lds
and
dec
sbb
dec
hlt
ja
mov
push
insb
daa
add
popa
movsb
or
add
orb
sti
arpl
loope
popf
sub
cmp
cmp
mov
ret
or
scas
inc
jge
les
sbb
cmpl
adc
mov
sub
lret
fwait
xchg
mov
dec
sbb
jno
inc
jno
mov
xchg
pushf
ret
rcrb
cmp
fisubrs
dec
sbb
or
test
lea
fldenv
aam
add
sub
je
add
cltd
popa
fdivl
adc
in
dec
sbb
hlt
pop
les
fwait
mov
cmp
mov
jnp
lods
jns
push
adc
ror
pushf
mov
cmp
in
pusha
shll
outsl
add
bound
xchg
clc
rcll
js
mov
sbb
leave
int3
pushf
sahf
arpl
mov
repz
icebp
sub
fwait
sub
mov
pushf
add
push
or
or
jnp
pop
or
dec
insb
cmp
sbb
hlt
mov
pop
test
adc
jl
and
rorl
mov
mov
jl
loope
add
sub
insb
or
mov
mov
or
rcll
movsb
mov
loope
add
sub
dec
test
cmp
fldenv
mov
mov
pushf
test
inc
cmp
sub
pop
or
dec
insb
xchg
mov
nop
lods
mov
cmp
inc
outsl
and
pushf
sub
fcompl
orb
add
cmc
add
adc
shl
inc
ds
sbb
inc
cltd
and
sbb
mov
in
push
or
mov
jno
fsubr
xor
mov
repz
xor
cmpsw
repnz
push
add
gs
loop
mov
jae
mov
jl
dec
dec
mov
cmp
jne
add
icebp
mov
gs
test
cld
leave
xchg
call
insb
or
loope
jle
pop
in
and
xor
dec
push
adc
jnp
mov
leave
xchg
mov
inc
pop
fndisi(8087
mov
into
pop
jno
sarb
or
sbb
xchg
lahf
lea
test
mov
jg
adc
cld
dec
loopne
jle
sbb
decl
or
jnp
lods
aam
outsl
sbb
scas
lret
insb
and
shl
mov
nop
adc
decl
mov
push
aam
mov
popf
sub
fs
sbb
sub
hlt
int3
fisubrs
dec
xchg
movsb
push
pop
ror
int
xchg
xor
and
outsl
xchg
mov
or
mov
cmp
push
je
push
mov
nop
jmp
stos
dec
cltd
pop
jl
mov
jge,pt
jmp
stos
dec
hlt
pushf
mov
sahf
fbstp
inc
adc
je
je
mov
mov
or
loopne
mov
and
insb
xchg
push
pop
test
rcll
sti
pop
jmp
int
mov
xchg
pushf
jne
gs
js
loopne
shl
in
mov
mov
or
aaa
or
test
lea
lret
pop
les
leave
xchg
fbstp
mov
cmc
add
adc
xor
popa
aaa
aad
mov
adc
das
adc
mov
adcl
cmp
and
mov
aad
out
inc
xor
in
sub
movsb
jmp
xchg
gs
jge
cld
icebp
ds
outsl
or
jo
dec
sysexit
hlt
pop
and
mov
bound
xchg
xchg
add
or
pop
pop
aam
call
cmp
adc
add
xor
scas
lahf
test
inc
cld
cmp
sbb
clc
or
inc
adc
out
dec
lahf
jo
nop
pushf
imul
adc
mov
outsl
xchg
les
pushf
xchg
jl
sarl
popa
sbb
aas
or
sub
negb
in
xor
sar
xor
sub
sbb
cmp
pop
lods
mov
in
adc
mov
jne
pop
push
xor
or
cmp
cmp
lods
cld
or
fwait
adc
jg
aam
inc
sbb
jo
push
les
jbe
pop
popa
mov
es
fnsave
or
adc
scas
dec
pushf
dec
lcall
loopne
fcompl
in
cmpsb
jnp
aaa
clc
jbe
pop
popa
mov
es
fbstp
enter
inc
movsb
push
pop
aad
pop
push
cmp
rcll
pop
sub
mov
lods
mov
mov
sub
sub
xchg
loope
fdivrs
or
mov
and
in
mov
cmp
imul
arpl
dec
sbb
sti
and
insb
dec
in
adc
lods
pop
in
leave
rcll
stc
inc
inc
fwait
sub
jmp
stos
dec
cltd
popa
loopne
lret
fwait
jl
and
cmp
test
imul
outsb
jl
inc
loop
dec
sbb
repnz
mov
mov
test
sbb
dec
push
nop
sub
lods
jmp
mov
dec
mov
nop
sbb
pop
aaa
dec
sbb
in
icebp
insb
mov
mov
xorb
lods
push
xor
adc
outsb
jl
mov
cwtl
orb
insb
mov
cmp
stc
sti
or
hlt
pop
sbb
push
out
test
imul
jl,pn
pop
add
pop
lods
or
test
jle
pop
pop
cmp
fldt
push
das
out
pop
add
lods
jg
fcomi
add
in
xchg
fldcw
data16
mov
dec
pop
add
fstpt
inc
sahf
sub
mov
add
or
adcl
push
fs
icebp
cmpsb
xchg
push
sbb
mov
sbb
adc
mov
xor
dec
push
adc
jl
and
xor
enter
daa
aas
or
cmc
add
pop
sti
repz
gs
adc
insb
mov
out
sub
mov
add
push
inc
cmc
add
lahf
in
movsb
mov
and
lods
adc
lods
pop
in
xchg
rcr
add
mov
loope
jle
mov
test
push
shr
popf
sub
adc
lock
gs
mov
xchg
mov
shrl
sub
insb
adc
mov
xchg
pop
dec
sbb
jmp
icebp
and
in
cmp
push
inc
push
add
arpl
lcall
cld
dec
fsubrl
xchg
jl
mov
xorb
sbb
mov
mov
dec
dec
dec
xor
cld
dec
fdivr
add
pop
cs
xchg
push
mov
je
or
dec
pop
icebp
loopne
lock
test
add
movsl
or
hlt
push
mov
pop
in
xor
outsb
in
fsubrl
mov
test
or
les
mov
cmp
or
add
setl
xor
sub
popa
mov
mov
mov
xor
popa
mov
and
inc
sub
rcrl
out
cld
jb
mov
push
loope
add
aam
int3
dec
cltd
popa
mov
fs
in
cmp
popa
cwtl
push
pop
imul
int3
je
cli
cmp
or
imul
in
adc
out
in
mov
push
test
or
and
mov
and
sub
adc
mov
mov
mov
mov
dec
push
adc
jnp
scas
cmp
cmp
lods
cld
mov
sub
adc
xor
push
cld
or
cmc
add
lods
jns
cwtl
sbb
lret
scas
inc
mov
sub
dec
cltd
popa
mov
movsb
fcompl
sbb
xor
lret
adc
insb
jns
xor
pop
fsubrl
mov
and
dec
pop
test
cli
or
testl
fisubrs
pop
sbb
loope
lret
mov
clc
iret
pop
dec
cmp
daa
aas
or
das
sbb
gs
jnp
nop
addr16
insb
cmp
xor
je
mov
mov
in
adc
popf
pop
in
mov
pop
xor
mov
mov
nop
rclb
int3
push
lock
sub
add
aad
or
sub
mov
movsl
cmp
sbb
push
add
mov
or
mov
cmp
hlt
popa
push
pushf
adc
cmp
paddusb
xor
inc
jmp
cwtl
outsl
mov
fbstp
xchg
int3
stc
jns
lcall
dec
pop
push
incl
enter
jmp
pusha
cwtl
out
cld
aam
inc
adc
and
xchg
and
lret
add
vsubss
adc
sbb
test
leave
shll
sti
or
loope
sbb
mov
mov
mov
lock
or
push
cli
pushf
sub
push
jo
rcll
push
int3
int3
pushf
sub
push
inc
add
arpl
addl
push
push
inc
popf
dec
stos
pushw
xor
add
das
cmp
adc
jno
fildl
int3
sbb
xor
dec
sbb
push
push
insb
or
out
jge
fbstp
jno
xor
inc
adc
les
fstpt
mov
dec
sbb
shlb
icebp
add
fwait
sub
je
cld
cmp
sbb
hlt
jp
mov
mov
cmp
sbb
adcl
push
pop
lahf
in
mov
cltd
popa
mov
lret
fwait
xchg
js
sahf
in
mov
mov
cwtl
and
jmp
stos
sti
xorl
icebp
nop
sbb
mov
sbb
xor
dec
sbb
in
in
insb
mov
ret
cmp
cmp
jne
sti
and
dec
push
cmp
roll
mov
mov
or
xor
xor
pusha
mov
popa
mov
aas
or
cmc
add
pop
jmp
dec
xor
icebp
sbb
stos
rclb
popf
sub
hlt
js
cmp
loop
hlt
sub
mov
test
orb
pop
insb
and
sub
mov
int
or
jno
out
fildll
adc
in
pop
sbb
test
mov
int3
adc
jbe
cmp
hlt
insl
fists
mov
push
dec
aas
hlt
and
lods
cld
lfs
xchg
lea
aad
mov
dec
fcompl
jnp
mov
imul
mov
test
pop
lods
xchg
pinsrw
sub
xchg
jbe
cmp
aad
std
or
arpl
iret
pop
aam
gs
insl
mov
mov
add
adc
mov
pop
lock
adc
fimuls
pushf
xchg
add
dec
pop
adc
int3
test
xchg
lea
dec
sbb
cld
add
mov
jl
mov
cmp
cltd
and
fsubr
and
pusha
in
cmp
adc
aas
or
loope
lret
mov
test
sub
fwait
or
insb
mov
mov
in
xor
lods
cld
aas
scas
arpl
adc
ljmp
icebp
cwtl
cmp
pushf
mov
xchg
mov
int
jbe
inc
insb
in
mov
fs
sti
or
loope
sbb
mov
mov
mov
mov
aam
adc
sub
je
stc
cmp
inc
pop
dec
xor
repz
cmp
test
mov
lret
fwait
jl
inc
mov
movntps
out
and
mov
mov
mov
mov
test
inc
xchg
dec
xor
cld
dec
fsubrl
enter
or
daa
aas
or
stc
inc
adc
sub
shl
mov
icebp
add
fwait
sub
mov
cmp
add
or
aad
pop
add
shll
sti
or
loope
sbb
mov
mov
mov
lock
or
push
stos
cli
pushf
sub
push
jo
rcll
add
icebp
push
inc
mov
dec
sbb
push
arpl
addl
dec
movsb
pop
dec
sbb
insl
mov
loop
push
test
or
mov
cwtl
push
lret
shrl
insb
sbb
cwtl
aaa
setl
jl
sbb
aaa
setl
cld
iret
sbb
cld
lret
fwait
sub
mov
mov
and
cmp
fwait
mov
cmp
cld
mov
add
vsubss
add
lods
cld
mov
mov
clc
dec
sbb
dec
push
pop
sub
lods
jmp
or
stos
sti
hlt
or
mov
sbb
test
dec
sbb
in
call
cld
fs
cmp
cmp
jne
sti
and
dec
xlat
out
lock
out
dec
xlat
sbb
cld
xchg
and
iret
and
jns
sub
cld
in
in
mov
inc
cmp
cmp
lahf
jo
inc
and
cmp
and
mov
dec
movsl
sub
aas
shlb
jnp
and
subl
icebp
pushf
enter
add
cmp
rcrl
jno
fildl
ret
lods
mov
or
mov
setl
cmp
imul
outsb
jl
inc
rolb
sbb
rcrb
leave
xchg
inc
mov
call
rcrb
jl
fwait
sub
mov
test
dec
sbb
nop
mov
add
jmp
pushf
add
or
imul
test
mov
lahf
sbb
inc
or
insb
adc
in
pop
in
and
lods
cld
xchg
and
repz
lds
dec
inc
leave
or
stos
sti
or
adc
ret
sub
pop
in
cmp
xor
cld
dec
fdivrl
in
std
cmpsb
dec
xchg
dec
daa
add
mov
cld
leave
xchg
or
dec
hlt
repz
int3
pop
lock
loope
cmp
adc
push
int3
outsb
mov
pop
lahf
in
mov
adc
loope
push
in
sub
lods
jmp
fs
out
cld
inc
mov
jl
mov
leave
shr
test
or
push
pushf
jl
xchg
addr16
cmp
loopne
xor
and
mov
mov
cmp
add
mov
in
sub
pop
pop
jmp
xor
fdivr
or
xor
pop
and
js
pop
cmp
jnp
lods
cld
or
movsb
daa
ja
jl
mov
cmp
lods
ds
lods
enter
jg
mov
sub
xchg
and
fldl
cmc
sub
lods
cld
add
scas
push
mov
sub
push
pop
lods
xor
adc
enter
lods
cld
inc
and
iret
and
mov
repz
loope
icebp
in
adc
adc
jns
pop
fisubs
adc
mov
nop
push
xor
mov
mov
pop
lods
sub
jno
imulb
xor
sar
inc
jbe
and
xor
pushf
test
imul
inc
je
lahf
in
cmp
hlt
stos
adc
scas
mov
or
popa
push
xor
sar
jne
cwtl
lret
pushf
sub
test
daa
aas
or
cmc
add
add
mov
xor
imul
clc
js
pop
push
add
pop
lods
dec
hlt
stos
jne
int3
pop
lock
mov
jae
sbb
adc
int3
sbb
mov
sti
shrl
cmpsl
mov
pusha
test
imul
xor
sbb
ds
or
lds
lret
mov
jl
pop
inc
cmp
insb
inc
adc
cmp
cmpsl
pushf
mov
enter
roll
insb
out
cmp
sbb
icebp
lods
lret
int3
sbb
pop
cmp
cld
mov
in
adc
pop
in
mov
mov
aam
push
fisubrs
je
cmc
cmp
shl
movsl
xor
adc
loope
aaa
dec
sbb
inc
cmp
sub
pop
mov
in
push
insb
mov
adc
cmp
xchg
pop
adc
mov
gs
in
xchg
movsl
jb
adc
mov
js
fadd
dec
sbb
dec
arpl
out
cmpsl
cmc
pop
cmp
sbb
cmp
xor
pop
fldt
mov
jmp
stos
dec
je
outsb
mov
pop
lahf
in
rorl
das
int3
lds
jnp
mov
mov
lods
cld
or
outsl
es
fwait
inc
mov
lahf
in
mov
add
lock
into
pushf
sub
sbb
push
pop
sub
cmp
in
mov
add
insb
mov
cmp
cmp
js
lods
cld
mov
fdivrl
pop
popa
dec
dec
xor
fdiv
xor
push
push
loop
mov
jb
in
and
fs
outsl
jl
sar
mov
xchg
pop
push
and
adc
inc
insb
add
cmp
inc
mov
xchg
and
das
cmp
sbb
cld
or
cmc
add
mov
test
or
add
setl
orl
cmc
sbb
fwait
inc
rorb
cld
sti
and
dec
fwait
mov
aad
xchg
insb
dec
pop
les
int
das
roll
inc
mov
cmc
sbb
pop
test
xor
aad
jle
lahf
sub
ficomps
aam
pop
lods
bound
scas
sub
and
push
or
fwait
inc
adc
lahf
in
dec
add
xor
enter
int3
mov
mov
sbb
adc
mov
les
loop
shll
jl
in
into
xlat
popa
cwtl
test
stc
add
int3
sbb
cmp
dec
sbb
in
fildll
pop
loope
rcr
jmp
stos
dec
hlt
xor
int3
sub
cmpsb
subb
fsubrl
loope
or
cmp
mov
mov
mov
jl
mov
xor
imul
das
jge
lock
rcll
mov
jl
and
leave
shrl
sti
or
or
stos
jnp
mov
jne
ss
stc
inc
sbb
fidivrl
dec
sbb
shlb
mov
lods
jl
sbb
cmp
dec
sbb
and
fndisi(8087
mov
mov
test
nop
jmp
push
in
stc
add
in
sub
xlat
popa
test
rcrb
lret
pop
sub
out
xor
popa
push
or
daa
mov
dec
sub
or
imul
pop
outsl
jl
pop
dec
xchg
adc
push
scas
mov
mov
movsb
test
cld
pop
les
add
add
add
out
sbb
in
iret
loop
jmp
jo
xchg
clc
pop
fsubrl
rolb
jmp
jo
cld
notl
out
and
sub
insb
mov
test
lods
cld
or
ret
cltd
sub
and
rorl
cmp
xchg
push
mov
and
ja
push
xchg
enter
mov
hlt
mov
int3
lds
pop
sub
dec
xchg
outsl
inc
xchg
insb
push
lods
leave
or
sti
or
lret
fwait
sub
ret
xlat
pop
clc
cld
dec
fsubrl
sbb
decl
sbb
cld
jbe
mov
iret
pop
outsl
xor
movsl
icebp
clc
addl
jl
jmp
stos
fs
daa
scas
mov
lea
pop
push
dec
push
or
imul
out
mov
cmp
add
or
mov
jnp
lods
jmp
or
stos
sti
hlt
mov
lock
sbb
lods
aaa
dec
sbb
in
loope
mov
mov
lock
push
gs
imul
pushf
outsb
jl
test
push
pop
sub
xor
lahf
in
mov
or
mov
or
sbb
cmp
int3
inc
dec
fdivrl
mov
jne
je
sti
or
mulps
in
ja
pop
jmp
mov
imul
int3
mov
lods
cmp
xchg
pop
xor
insb
aas
nop
mov
add
cmp
imul
sub
xchg
sarl
add
mov
push
pop
jmp
pushf
sbb
rolb
fwait
mov
aaa
dec
sbb
push
push
insb
or
pop
xor
xchg
mov
push
mulps
in
ja
pop
jmp
mov
imul
int3
mov
lods
cmp
xchg
out
xor
insb
aas
nop
mov
add
cmp
imul
sub
and
cmp
jne
dec
or
mov
push
pushf
xchg
mov
mov
xchg
sti
or
out
sbb
repz
dec
xor
inc
adc
add
jmp
pushf
sbb
rolb
pop
mov
xchg
pop
ret
lds
fsubrl
bound
rcrl
aam
pop
lods
xor
lret
add
mov
xorb
dec
bound
xchg
ret
sub
insl
mov
xchg
inc
in
dec
sbb
in
int
je
mov
dec
lods
and
or
adc
andb
stc
or
push
and
pushf
sub
fcompl
adc
pop
lods
test
testl
mov
lds
mov
int3
xor
in
xor
xchg
add
xchg
mov
lret
fwait
sub
mov
icebp
out
outsb
jp
int3
xor
in
xor
stos
adc
xorb
sbb
nop
xchg
insb
inc
adc
jmp
mov
idivl
or
push
rcr
sub
adc
in
shlb
popa
mov
rcrb
cmp
push
mov
adc
in
shlb
popa
int3
mov
mov
cmp
push
sbb
sbb
mov
add
or
cmc
and
mov
and
sub
adc
cmpsb
cs
push
pop
push
jge
popa
rcl
mov
rcll
cmp
daa
aas
or
cmc
add
daa
jno
adc
add
adc
leave
mov
and
mov
test
loop
shll
jl
in
loop
popa
dec
data16
stc
inc
sub
sub
inc
jp
dec
sbb
inc
hlt
inc
orb
lods
int3
je
ljmp
fldt
add
adc
pop
in
mov
push
mov
rcrb
mov
mov
mov
stos
cld
or
mov
ss
or
shr
cmp
xchg
inc
or
insb
shrb
jno
fildll
jg
and
inc
sub
sub
test
test
cld
jb
mov
pop
loope
out
lods
jns
lods
sbb
mov
mov
sub
dec
cltd
popa
int3
mov
fcompl
cmp
movsb
ja
fsubr
mov
stos
mov
mov
xchg
and
shll
and
mov
mov
jnp
xchg
call
aas
or
mov
ljmp
cmp
out
std
xor
mov
mov
fsubr
jno
dec
sbb
dec
push
loopne
jnp
lods
jns
or
stos
sti
je
mov
int3
in
adc
lea
mov
fldt
inc
mov
out
dec
sbb
or
imul
lock
pop
cmp
add
test
fmulp
pushf
scas
inc
mov
sbb
mov
mov
and
in
lods
cld
gs
sub
mov
cmp
fdivrs
fsubrl
add
outsl
jl
jmp
stos
sti
and
outsb
jl
loope
aaa
dec
sbb
push
fsubrl
pop
sub
push
test
loope
pop
sub
cmp
jo
sti
or
inc
nop
lcall
dec
sbb
mov
adc
cmp
xchg
or
loopne
jnp
inc
and
pop
fildl
rcll
dec
cmp
push
arpl
jmp
mov
mov
sbb
push
je
mov
cmp
mov
cld
movsl
nop
mov
mov
lcall
aaa
pop
aaa
jno
das
aad
test
leave
ljmp
ror
pushf
sub
mov
add
or
pushf
sub
adc
jg
sbb
or
lret
scas
inc
mov
icebp
je
pop
lods
push
xchg
and
sub
rcll
dec
insl
sub
cld
bound
mov
sbb
cs
xchg
mov
pop
in
pushf
sub
push
jo
cmp
mov
stos
mov
movsb
lods
inc
xchg
mov
idivl
or
icebp
mov
mov
cmp
add
cld
or
and
mov
mov
insb
stos
jno
fndisi(8087
les
mov
int
fs
or
mov
lret
mov
stos
in
push
xchg
enter
out
orb
dec
inc
mov
add
dec
fsubl
aam
fildll
or
in
cmp
xor
aas
or
cmpsl
mov
sbb
insb
cmp
sbb
dec
hlt
mov
mov
mov
daa
sbb
mov
xor
in
cmp
rcll
dec
add
dec
sbb
jecxz
subb
lods
daa
scas
mov
mov
mov
movsl
das
adc
lods
push
fldenv
dec
cltd
and
mov
mov
xor
mov
cmp
test
add
outsl
mov
add
test
pop
les
fsubr
scas
add
sbb
adc
loopne
loopne
sub
mov
jmp
jo
xchg
outsb
sub
insb
aas
nop
mov
fs
pop
jmp
movsl
jp
push
lret
dec
sbb
jl
insb
jmp
jo
add
fwait
or
in
aad
outsb
insl
add
sbb
cld
fiaddl
mov
fmull
cmp
xor
test
mov
mov
push
jb
push
xor
adc
pop
pop
push
aas
rcr
shll
fs
pushf
sub
lds
xor
mov
adc
dec
sbb
call
int3
in
sub
jo
jmp
xor
lret
cld
or
xor
dec
pop
xchg
jnp
pop
in
mov
test
imul
cmp
loope
xchg
aad
test
pcmpgtw
jl
je
jg
cmpsl
icebp
add
and
sbb
jl
cwtl
insb
stc
mov
stos
sti
or
test
dec
cwtl
sub
lahf
jmp
stos
dec
les
in
int3
pushf
test
dec
mov
push
mov
fldt
inc
mov
cmp
xchg
outsb
sub
insb
aas
nop
mov
rcll
jge
hlt
sar
int3
sbb
or
inc
call
inc
dec
fdivrl
mov
or
jno
xor
inc
mov
sub
rcr
mov
mov
mov
jnp
inc
adc
sbb
shlb
icebp
mov
je
jmp
in
fidivrl
mov
mov
cmp
sbb
pop
popa
addr16
or
mov
out
cld
cltd
and
sbb
xchg
mov
mov
sub
enter
push
pushf
xchg
out
cld
inc
pop
je
call
fucomi
cmp
jne
sti
and
sub
mov
clc
pop
lods
out
das
imul
fwait
inc
mov
lahf
in
cmp
sbb
mov
mov
stos
jp
loopne
rolb
cmp
fildl
addr16
inc
pusha
push
jb
xchg
fwait
mov
add
cmp
dec
xchg
fdivp
lcall
lods
sub
addl
lret
add
adc
int3
push
mov
iret
je
jecxz
dec
jecxz
and
sub
nop
pop
dec
aam
pop
sbb
icebp
mov
dec
inc
das
jg
jb
popa
sbb
insb
inc
mov
rcr
xchg
mov
cmp
fcmovnbe
mov
lea
pop
adc
or
inc
pop
pop
repnz
mov
xchg
xlat
hlt
xchg
aam
fsubrl
lea
jge
fbstp
pop
addr16
roll
sbb
sbb
cmpb
pushf
mov
cvtpi2ps
ja
nop
or
imul
cmp
loopne
and
fwait
mov
mov
sbb
jno
inc
cmc
add
lahf
in
ja
xchg
sar
in
shl
sbb
adc
pop
xlat
pop
mov
inc
adc
cld
mov
pop
insb
notl
jno
mov
neg
testl
add
addr16
fbstp
pushf
push
cltd
cltd
mov
and
bound
mov
mov
and
sbb
aas
fwait
test
fsubrp
jno
cmp
stos
mov
scas
mov
mov
movsl
push
sub
gs
xchg
pop
and
mov
mov
insb
cmp
sbb
adc
test
in
mov
pop
lret
sbb
mov
mov
mov
add
or
lds
mov
out
cld
pop
les
int3
pushf
test
test
mov
test
imul
outsb
jl
inc
loop
dec
sbb
sti
gs
inc
rcrl
loope
sub
stos
jno
sub
inc
cmp
aam
push
lock
inc
sbb
or
dec
or
cwtl
cmp
pushf
sub
jl
xor
dec
sbb
push
or
mov
push
pushf
xchg
loopne
jno
cmp
sbb
sti
lret
mov
fmuls
cmp
fsubrl
test
add
dec
jmp
mov
icebp
sbb
setl
rcrl
mov
mov
shrl
sti
or
mov
pushf
sub
push
push
push
pusha
or
pushf
mov
je
mov
dec
mov
stc
inc
sbb
cmp
insb
xchg
sub
dec
xchg
test
add
leave
shrl
sti
or
loope
sbb
mov
mov
mov
fsubr
and
mov
jp
jmp
xor
cmpsb
sti
or
test
mov
sub
sahf
jbe
or
ret
mov
mov
mov
or
testl
test
sub
test
imul
lahf
inc
mov
xor
mov
add
mov
sbb
adc
pop
sub
mov
test
dec
fcoml
int
sub
pushf
jmp
xchg
push
add
insb
aas
nop
test
inc
shrl
cmp
sbb
xchg
xchg
insb
and
decb
shrl
dec
pushf
jae
jno
fildl
add
movsb
mov
out
cld
cmc
push
insl
mov
push
mov
lods
dec
cltd
and
and
in
cmp
out
stos
adc
push
scas
mov
adc
dec
insb
xor
mov
pushf
test
fldenv
pop
cmp
sti
or
mov
roll
mov
ja
sti
cli
or
xor
or
imul
pop
sub
in
aad
mov
add
aas
xchg
dec
xor
fdiv
jl
cmpsb
xchg
cld
fcomps
lods
cld
bound
mov
lods
pop
jmp
mov
lods
cld
mov
rcll
pushf
outsb
jl
push
jmp
xchg
adc
push
je
mov
jl
pop
inc
mov
or
dec
fdiv
add
in
cmp
rcrl
cmp
and
cld
int3
pushf
test
mov
mov
sbb
sti
and
dec
in
mov
cmp
imul
outsb
jl
inc
bound
sbb
mov
bnd
adc
stos
mov
fisubrl
mov
inc
jl
fbstp
ret
push
movsb
test
int3
pushf
mov
pop
lods
inc
leave
rcrl
sti
or
mov
ja
pop
jne
dec
pop
stos
sti
or
in
aaa
setl
leave
roll
sti
or
loope
xor
jns
mov
sti
hlt
mov
jge
pop
jns
cmp
icebp
call
sbb
jno
fdivl
out
cld
aam
inc
push
movsb
sub
roll
inc
push
jo
lret
fwait
jl
fs
in
cmp
jne
ljmp
pop
clc
iret
pop
and
sahf
or
insb
jnp
mov
hlt
out
mov
cmc
add
repz
cmp
fsubrl
movsb
scas
inc
cwtl
push
les
adc
outsb
jl
mov
xor
add
imul
push
jmp
sbbb
bound
mov
add
cmp
and
sti
or
andl
dec
popa
pushf
mov
repz
inc
fs
icebp
sbb
setl
fwait
call
aaa
inc
or
das
lret
pop
cmp
xor
adc
or
idivl
mov
mov
cmp
sbb
jno
fndisi(8087
lods
mov
xor
mov
int3
cli
or
mov
xchg
lods
fsubrs
cmp
test
imul
outsb
jl
inc
shlb
dec
sbb
shlb
loope
inc
mov
call
test
imul
int3
mov
lock
xchg
pop
and
insb
aas
nop
mov
add
add
repz
cmpsl
mov
mov
mov
adc
imul
pop
jmp
hlt
add
ret
or
lds
lret
mov
jl
pop
inc
cli
in
push
sbb
shrb
mov
stos
sti
or
jnp
int3
pushf
andb
cmp
loopne
sti
shl
mov
or
xchg
fsubrl
fwait
inc
les
shlb
insb
movsb
jo
sub
pop
mov
push
imul
dec
xchg
outsl
inc
dec
xchg
loopne
mov
lea
rcrl
sti
or
loopne
sahf
in
leave
sarl
sti
or
inc
or
jno
dec
sbb
mov
mov
pop
test
imul
sbb
jl
out
mov
sbb
mov
mov
in
shll
xor
insb
cmpsl
adc
sub
fldenv
aam
sbb
sub
je
cmc
cmp
gs
inc
mov
in
daa
push
and
cltd
popa
mov
lret
fwait
jl
loop
jmp
movsl
lahf
movsb
sti
gs
inc
mov
fstps
cmpsl
sti
or
sub
pushf
sub
in
out
dec
sbb
cld
sbb
insb
adc
push
mov
popf
cld
or
xor
pop
and
mov
xchg
pushf
sbb
add
icebp
sbb
setl
shl
lods
cld
fldt
add
sub
dec
sbb
or
xchg
aad
sub
or
pop
sbb
hlt
or
add
setl
addl
je
loope
cmpsl
mov
rcrl
sti
or
push
pushf
jl
je
in
cmp
test
imul
mov
stos
mov
fisubrl
mov
inc
jl
jmp
stos
dec
hlt
mulb
lret
fwait
mov
cmp
or
mov
mov
and
jno
or
mov
into
pop
ja
inc
mov
dec
hlt
jae
mov
call
test
imul
push
in
pop
lods
dec
hlt
dec
pusha
mov
lds
cmp
lret
adc
sbb
dec
cmp
cld
sti
rcrl
lret
test
xchg
mov
pusha
test
imul
and
xchg
dec
cmp
fcoms
popf
sub
lds
and
icebp
cwtl
cmp
pushf
sub
jo
xchg
add
dec
or
mov
push
pushf
addl
push
sbb
xchg
mov
jl
pop
ja
loopne
or
pop
popa
lcall
jne
lock
lods
cld
bound
stc
inc
test
jmp
cwtl
xchg
out
cld
or
and
setl
adc
dec
mov
or
ret
repnz
adc
cmp
lods
cld
or
mov
mov
xchg
cld
pop
pop
cltd
popa
and
lret
fwait
jl
adc
dec
test
movsb
pop
sub
mov
jne
in
and
imul
jnp
xor
rcll
or
jno
cltd
sub
add
lahf
jo
cltd
popa
pop
mov
fwait
jl
aas
dec
jmp
dec
xchg
fs
lahf
insb
mov
mov
dec
stos
sti
and
insb
dec
push
sub
xchg
pop
jne
dec
outsl
xchg
cmp
fsubrl
loope
in
pop
in
cmp
mov
ret
jg
jl
fbstp
dec
cltd
popa
pop
mov
fwait
xchg
jl
pop
in
mov
xchg
sti
and
dec
add
mov
test
imul
das
jl
mov
leave
xchg
clc
add
pop
mov
fwait
sub
xchg
lods
jmp
sub
sarl
push
insb
test
xchg
call
and
mov
xchg
add
stos
int3
pushf
scas
inc
cwtl
pop
imul
jmp
inc
dec
inc
testb
mov
cmp
pop
in
cmp
cmp
aas
or
jmp
in
stos
cs
and
pop
push
insb
or
pop
push
jl
fbstp
or
aad
inc
push
mov
lods
jo
pop
jmp
icebp
push
jmp
stos
test
jmp
jl
inc
and
dec
sbb
mov
fwait
mov
je
sbb
mov
lahf
pop
in
leave
rorl
sti
or
and
fwait
sub
push
test
push
cwtl
sbb
cld
aaa
and
sahf
push
adc
mov
sub
popf
das
fisubs
inc
xchg
frstor
insl
pop
xor
push
test
cld
or
movsb
aas
lea
xchg
shlb
fisubrl
sbb
push
jno
pop
daa
adcl
jl
adc
dec
test
dec
fdivrl
loop
jno
inc
sbb
dec
push
aam
jnp
lods
jmp
sbbb
sti
hlt
or
mov
xchg
mov
popf
sti
or
in
adc
mov
mov
cmp
lahf
sub
test
jo
dec
sbb
test
cmc
xor
jnp
je
ftst
mov
inc
loop
mov
stc
push
cmp
popf
test
imul
cmp
pusha
mov
sti
ds
push
jmp
push
js
mov
xchg
int3
push
cltd
popa
pop
mov
fwait
sub
pusha
lods
jns
test
stos
sti
pop
lock
fwait
sub
in
cmp
loopne
mov
in
adc
jge
jmp
leave
fsubrl
mov
loop
jno
dec
sbb
or
pushf
cmpb
addr16
push
and
sbb
mov
inc
pop
jmp
pushf
test
imul
outsb
jl
inc
mov
mov
fwait
mov
je
sbb
mov
sahf
pop
in
leave
rorl
sti
or
movsb
mov
adc
dec
sbb
test
cmc
xor
jnp
je
ftst
mov
inc
loop
mov
stc
push
cmp
popf
test
imul
cmp
pusha
mov
cli
ds
push
or
and
push
cltd
popa
pop
mov
fwait
sub
pusha
lods
jns
test
stos
sti
pop
lock
fwait
sub
in
cmp
loopne
mov
in
adc
jl
jmp
pop
test
push
xchg
mov
sub
shr
jno
dec
sbb
movsb
nop
xchg
mov
leave
xchg
or
mov
lcall
call
push
jbe
ret
and
jp
pop
inc
sbbl
mov
adc
sbb
test
cld
imul
adc
out
int3
test
cmp
lods
ds
icebp
je
fwait
sub
hlt
in
cmp
pop
mov
mov
ficompl
cmpsb
sti
or
cmp
push
int3
push
cltd
popa
pop
mov
fwait
sub
pusha
lods
jns
test
stos
sti
pop
lock
fwait
sub
in
cmp
loopne
mov
in
adc
jnp
jmp
dec
xchg
xchg
sti
and
xor
and
sti
and
dec
daa
jo
nop
mov
cwtl
inc
mov
sbb
xor
mov
inc
mov
cld
lahf
imul
movsb
sub
mov
aam
push
sbb
xor
adc
lods
jmp
adc
and
pushf
jg
jecxz
push
sti
fs
jbe
ret
movsb
jo
sub
pop
mov
cmp
inc
insb
es
fwait
mov
inc
dec
sbb
cld
jbe
imul
mov
aas
and
and
jle
icebp
cmp
mov
pop
aaa
inc
or
icebp
push
and
push
rol
jno
fisubl
mov
xchg
insb
inc
xchg
sti
mov
push
pop
jmp
jo
stos
adc
push
scas
mov
shlb
push
push
test
stos
je
xchg
adc
mov
sub
mov
into
pop
scas
hlt
xchg
insb
out
cld
iret
xchg
lods
or
pushf
out
xor
lods
cs
aam
dec
dec
fsubrl
adc
scas
push
aad
xchg
test
cmc
add
in
xchg
sbb
xchg
insb
inc
mov
cmp
leave
cltd
adc
mov
mov
dec
pop
mov
mov
cltd
push
push
inc
les
scas
xchg
xlat
or
mov
cwtl
jmp
dec
sti
or
lds
cmc
mov
xchg
aas
shll
hlt
pushl
mov
add
cmp
cmpsl
icebp
in
das
and
les
in
cmp
popa
movsb
pop
push
fsubr
mov
stos
mov
mov
pop
sbb
cld
or
insb
bswap
adc
jnp
inc
aam
push
sbb
repnz
fcompl
lods
cld
or
stc
inc
xor
sub
lods
aam
cmp
jg
hlt
mov
mov
fsubl
and
adc
fwait
sub
jecxz
jno
dec
sbb
stos
int3
pushf
scas
inc
movsb
in
dec
xchg
test
adc
sub
faddl
dec
sbb
push
cltd
popa
aam
lret
fwait
or
inc
fnstcw
lahf
jo
addr16
fwait
jp
in
outsb
jl
loope
cmp
add
pop
mov
mov
xchg
pushf
add
call
xor
sub
lods
aam
cmp
jg
hlt
testl
sbb
push
cmp
aaa
hlt
incl
addl
push
sbb
dec
xchg
cmp
jl
pop
jmp
pushf
add
cli
or
sbb
mov
cmp
push
data16
imul
aad
sbb
sbb
inc
mov
push
pushf
pop
and
inc
cli
xor
sbb
sub
lock
jg
mov
cmp
push
insb
dec
push
pushf
daa
jnp
in
ds
sbb
in
leave
insb
mov
shr
mov
cltd
popa
insb
mov
rcr
cmp
lahf
add
stc
or
lds
or
mov
inc
sbb
mov
mov
insb
xchg
mov
fcompl
dec
dec
xchg
mov
mov
and
mov
and
or
sbb
div
aas
loope
fmuls
and
mov
pushf
pop
popa
dec
dec
xchg
mov
push
fldt
dec
pusha
cmp
jmp
inc
lahf
sbb
adc
sahf
andb
cmp
cmpsl
movsb
push
fildl
mov
out
mov
test
movsb
add
xchg
shrb
sti
sub
mov
cmp
jo
les
int3
pushf
mov
je
xchg
jp
hlt
repnz
mov
out
scas
xchg
xlat
or
mov
rorl
sub
push
sub
mov
mov
sbb
adc
push
scas
mov
into
pop
push
mov
jbe
stc
add
in
cmp
pusha
cmp
cmp
adc
push
bound
and
int3
sub
xchg
pushf
jecxz
mov
std
scas
mov
mov
aad
mov
and
dec
sub
xchg
pushf
jae
adc
mov
sbb
push
stc
or
mov
jge
jmp
stos
push
pop
xor
cmp
push
mov
stos
iret
or
inc
add
sub
mov
cmp
adc
orl
mov
mov
jo
insb
mov
xchg
mov
push
mov
out
cld
imul
adc
lods
push
xlat
popa
mov
bound
and
pop
jl
test
out
mov
in
push
into
pushf
sub
mov
rorl
stos
sti
or
jno
pushf
sub
fsubrl
sbb
rcrb
sbb
pop
cmp
call
fs
mov
sub
loope
cmp
cld
fs
scas
mov
mov
cmp
sbb
dec
hlt
into
push
mov
lds
cmp
lret
adc
int3
sbb
push
cmp
cld
sti
roll
lret
test
xchg
xor
or
imul
sub
mov
mov
imul
in
sub
lock
jmp
xor
lods
cld
or
stc
inc
xor
cmp
dec
insb
xchg
mov
nop
shlb
rorl
fldenv
imul
in
mov
cmp
imul
add
roll
push
movsb
mov
sub
dec
aam
push
sbb
push
gs
imul
pushf
outsb
jl
mov
sub
mov
nop
pop
in
cmp
xchg
les
lret
add
int
pop
inc
mov
xchg
cld
or
test
call
jns
or
stos
sti
pop
imul
int3
mov
outsl
xor
movsl
icebp
clc
sbb
jb
sbb
cmp
and
cltd
push
mov
sahf
fsubrl
cld
sbbb
jns
lcall
roll
sti
or
inc
sbbb
mov
fsubrl
mov
jmp
pushf
sbb
adc
push
jl
inc
test
icebp
xchg
inc
dec
cmp
das
sarb
mov
pop
and
jp
pop
cmp
rcrl
adc
mov
cmp
lods
ds
loope
pop
and
jns
pop
jmp
outsl
add
push
mov
sbb
test
dec
sbb
mov
in
sub
dec
outsl
cmp
sti
mov
fwait
jno
fsubr
jno
inc
sbb
call
mov
cmp
add
in
mov
mov
mov
insb
stos
jno
fndisi(8087
les
mov
fldenv
mov
jl
pop
jno
ror
sti
and
dec
daa
jno
jmp
inc
add
enter
pushf
mov
xchg
mov
cmpsb
jno
aaa
in
cltd
cltd
sarb
mov
lods
lods
cld
or
sbb
int3
pushf
addr16
adc
lahf
movsb
incb
fisubrs
mov
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
mov
cmpsl
loope
or
insb
inc
les
into
into
pop
inc
vunpcklpd
dec
repz
fadds
in
cmp
test
fadd
pop
sbb
outsl
jl
xor
pop
lods
push
scas
cmp
dec
fwait
add
cld
scas
cs
mov
imul
inc
or
mov
push
sub
jl
out
rorb
or
insb
mov
mov
out
cld
or
outsl
jl
les
mov
pop
push
mov
shll
popa
push
fsubrl
test
orb
ds
sbb
setl
lods
scas
inc
cmp
and
xorl
jge
mov
in
ds
sbb
in
ret
insb
mov
mov
sbb
add
jecxz
scas
rcrb
inc
dec
sbb
dec
imul
aam
sbb
les
mov
xorl
mulb
pop
inc
xchg
mov
adc
pop
push
insb
movsb
or
sub
in
jmp
inc
sbb
jl
push
insb
pop
mov
xchg
enter
leave
roll
push
pop
mov
sub
in
loop
rorl
bound
and
fwait
sub
dec
cmp
roll
jno
fwait
sub
je
cmp
lahf
jo
cltd
popa
sarb
dec
inc
jmp
dec
xchg
xchg
in
xchg
insb
mov
mov
jnp
jg
hlt
out
and
mov
push
xor
lahf
jno
xchg
insb
dec
push
sub
mov
mov
stos
rclb
pushf
jl
arpl
aam
nop
inc
rorb
int3
lret
mov
hlt
iret
pop
inc
cmpsb
dec
sbb
mov
mov
push
inc
dec
repnz
sti
jecxz
push
inc
adc
inc
or
orb
nop
inc
enter
int3
lret
mov
hlt
iret
pop
jno
rcrl
movsb
shlb
pop
outsl
adc
popf
cmc
or
lods
sahf
loopne
fbld
push
xchg
cld
data16
insb
mov
mov
in
mov
stos
outsl
adc
sbbl
rcll
xchg
jl
pop
pop
push
insb
inc
adc
push
or
fsubr
cmp
insb
xchg
das
or
insb
adc
mov
or
and
xchg
fneni(8087
ret
and
in
nop
inc
les
in
imul
lods
shlb
add
fildl
lret
mov
jl
pop
ja
stos
jp
push
mov
push
xchg
mov
push
pop
cltd
arpl
mov
mov
insl
xorb
std
or
aam
pop
fisubrs
add
lods
cld
gs
sarl
inc
mov
test
dec
dec
fsubrl
lock
daa
mov
pushf
add
out
or
lds
cmc
mov
lds
add
rolb
stos
jo
xor
and
outsl
jl
fcoms
pusha
xor
cvttps2pi
loope
fdivrs
add
loope
push
adc
hlt
insb
lock
sbb
lods
or
insb
notl
arpl
cld
xor
addr16
pop
repz
sbb
pop
cld
dec
fsubrl
insb
and
test
sbb
add
mov
stc
pusha
pushf
outsb
jl
pop
ret
leave
cltd
adc
sbb
jno
mov
mov
fndisi(8087
mov
add
xor
imul
lods
sbb
clc
or
adc
loopne
cmp
sbb
dec
fcoml
inc
and
shll
lods
cld
add
inc
mov
mov
sbb
imul
lods
ja
push
sbb
enter
adc
or
jnp
pop
jmp
rcr
mov
mov
iret
pop
aam
aad
lods
push
xchg
pushf
lds
jecxz
mov
mov
mov
sbb
or
into
inc
int
test
dec
mov
dec
xlat
popa
js
pop
shlb
je
xlat
stos
rcrl
and
and
pop
and
mov
popa
mov
sub
out
sub
fsubr
xor
pushf
sbb
cwtl
or
insb
inc
mov
cmp
adc
stc
or
out
pushf
dec
and
sbb
sbb
insb
xchg
insb
inc
adc
cmp
cmpsl
in
adc
and
push
aam
orb
cld
scas
inc
out
int3
and
in
cmp
and
cld
or
sub
mov
popa
sub
xchg
test
and
dec
sti
mov
out
mov
mov
sub
aam
sub
pushf
pusha
in
cmp
xor
fdiv
jl
loope
icebp
mov
call
pop
mov
jno
cmp
sbb
pop
enter
pop
je
roll
lods
xchg
insb
dec
sub
idivb
dec
xchg
mov
and
in
lock
inc
and
imul
lahf
pop
xchg
mov
jmp
movsb
sub
pop
add
dec
pop
lods
xchg
imul
and
fildl
add
movsb
pushf
test
cld
les
int
test
dec
mov
push
fldenv
aam
cmp
sub
je
jae
dec
jne
mov
ss
sub
pop
add
dec
pop
lods
out
addr16
push
loope
jg
pop
daa
cltd
inc
sub
pop
or
imul
fwait
mov
cmp
sbb
ret
movl
rcrb
cld
or
xor
mov
sbb
add
loope
add
adc
dec
xchg
movsb
xchg
lahf
mov
and
ja
popf
insl
dec
pusha
xchg
insb
adc
les
inc
leave
pop
sbb
inc
or
rolb
xchg
xchg
add
or
push
add
mov
mov
mov
stc
mov
push
fsubrs
sbb
lahf
in
mov
mov
or
xor
pop
loope
int3
sub
data16
insb
stos
adc
scas
mov
in
aam
cmp
insb
adc
or
mov
icebp
xchg
les
sbb
cld
push
fsubrl
ljmp
dec
xchg
test
or
inc
or
mov
jl
pop
ja
stos
jp
mov
mov
lahf
in
mov
imul
mov
arpl
xor
mov
loopne
out
cld
popl
mov
fmul
das
cmp
sbb
cld
or
mov
loopne
lahf
in
aas
or
stos
xor
scas
mov
mov
loopne
mov
mov
xchg
loopne
das
cmp
andb
or
shrl
mov
lods
or
xchg
sub
std
rcrb
add
xor
xor
or
or
push
lahf
adc
or
jmp
push
push
in
jge
sbb
in
inc
and
pop
test
cmp
or
je
insb
bswap
adc
cld
scas
cs
jb
pusha
in
fsubrl
mov
push
jg
outsl
stos
jno
inc
xor
push
pushf
adc
cmpsb
int
dec
lahf
jo
or
pusha
cmp
mov
xchg
sbb
es
fwait
inc
adc
sahf
in
mov
cmp
dec
fdiv
subb
xchg
mov
sub
punpckldq
dec
mov
jnp
jns
mov
cmpsl
icebp
add
mov
adc
test
adc
xor
sbb
scas
dec
mov
lods
out
xor
test
lods
dec
jl
inc
pop
sbb
inc
sbb
mov
inc
enter
movsb
pop
cld
stos
jp
mov
fistps
push
and
inc
int3
pushf
scas
inc
cwtl
push
les
lahf
mov
divl
xchg
jle
jno
mov
stos
imul
and
aas
outsl
daa
xchg
mov
pop
jl
fbstp
in
push
inc
int3
pushf
sub
mov
sbb
add
gs
mov
push
jl
mov
addl
mov
test
mov
mov
ror
pop
inc
cmp
daa
aas
or
xor
push
inc
sub
mov
in
pop
dec
sbb
mov
bnd
add
push
cld
xchg
out
cld
inc
mov
sub
or
ficomps
dec
sbb
aam
adc
dec
dec
xor
addl
or
dec
lret
cmp
cld
sti
sub
outsl
jl
dec
daa
xor
insb
sub
mov
jae
pushf
les
sbb
cmp
in
adc
mov
mov
sub
mov
fwait
stc
scas
jg
cmp
or
add
int3
sub
xchg
pushf
add
cli
or
out
sbb
add
dec
aas
xlat
hlt
stos
jno
fildl
pop
dec
mov
jmp
xchg
enter
sahf
sub
sbb
lods
cli
or
imul
add
jle
pop
cmp
or
push
pushf
sub
in
mov
mov
or
mov
jnp
lods
jmp
push
sbb
loopne
pop
insb
test
dec
in
inc
dec
sbb
jns
fadd
adc
shl
sti
adc
out
cld
arpl
add
cwtl
sbb
cmp
hlt
arpl
int3
fwait
mov
rorl
je
sar
bnd
ja
in
cmp
mov
mov
jnp
pop
popa
dec
mov
fdivrl
mov
leave
rcrl
sti
or
or
fisttps
jl
mov
leave
rcrl
sti
or
xor
fwait
inc
pusha
pop
lahf
in
mov
push
ja
pushf
mov
sbb
mov
jmp
loop
push
inc
test
addr16
fisubrs
test
xor
or
insb
and
clc
outsb
jl
pop
ret
js
cld
arpl
cmp
pushf
sub
sub
dec
jae
mov
pop
insb
mov
into
pop
inc
fucomip
xchg
out
cld
or
sub
das
and
jg
sbb
mov
iret
pop
jmp
mov
or
or
punpcklbw
sub
les
sbb
lahf
and
mov
call
adc
aas
or
inc
and
clc
outsb
jl
cmp
je
enter
iret
push
push
lahf
in
cmp
push
leave
cmp
pop
insb
pop
mov
outsl
jl
mov
out
cld
sbbb
fldcw
outsl
jl
nop
and
cld
orb
fnstenv
outsl
jl
andb
cmp
fld
pop
outsl
jl
jo
pop
cwtl
cwtl
out
cld
sub
fldenv
pusha
daa
inc
es
pop
pop
scas
mov
hlt
je
jle
jae
rolb
js
test
in
dec
in
xchg
adc
icebp
and
lahf
in
add
sub
or
insb
mov
into
pop
jmp
fcomps
cld
xchg
aam
mov
and
jl
pop
push
cmp
mov
lods
daa
fisubrs
das
dec
addr16
sbb
mov
iret
pop
jmp
mov
pop
ds
psubb
sub
les
lahf
push
pop
scas
mov
out
in
xchg
out
test
aas
or
inc
and
imull
jecxz
je
sbb
shlb
dec
repz
fs
lahf
in
cmp
push
leave
in
xchg
insb
pop
mov
popf
and
cld
adcb
jl
lea
cld
addb
jl
jge
pop
aam
out
cld
xor
fnstenv
daa
inc
xor
mov
or
sub
or
insb
mov
into
pop
jmp
xlat
adc
negl
pusha
idivb
out
in
xchg
dec
repnz
addr16
insb
adc
test
mov
movsb
pushf
ja
cld
arpl
aaa
setl
push
hlt
cwtl
inc
jle
jae
mov
mov
pop
inc
filds
xchg
out
cld
or
sub
das
insb
addr16
sbb
dec
aas
mov
pusha
test
cld
ja
fsub
fadds
pop
pusha
push
test
pusha
jbe
fsub
enter
test
fbld
push
shl
int3
cmp
pushf
sub
dec
cmpsl
pop
lods
push
or
sub
das
fsubs
dec
sbb
mov
iret
pop
jmp
test
sub
fmull
mov
cwtl
xchg
or
pop
das
xor
arpl
fmull
lahf
in
cmp
fdivs
scas
mov
dec
mov
cmp
mov
imul
mov
int3
pop
lods
sti
loop
or
push
pushf
sbbl
das
cmp
repnz
pushw
insb
adc
cmpsb
mov
les
cld
arpl
setl
push
hlt
rolb
jae
test
pop
insb
mov
into
pop
inc
fildll
mov
fstps
outsl
jl
clc
data16
nop
loopne
sub
int3
adc
test
nop
shlb
int3
adc
test
nop
shlb
adc
mov
mov
mov
iret
push
jbe
sar
test
mov
cmp
test
push
dec
fadd
mov
and
das
cmp
xor
mov
or
sub
or
insb
mov
into
pop
jmp
xlat
adc
negl
pusha
daa
mov
out
in
xchg
dec
repnz
pushw
insb
adc
cmpsl
mov
inc
jne
cld
arpl
aaa
setl
push
hlt
inc
inc
jle
jae
faddl
add
aad
pop
inc
fucomip
xchg
out
cld
or
sub
das
xor
jg
sbb
mov
iret
pop
jmp
mov
add
cwtl
inc
fildll
les
adcb
lret
jb
cltd
adc
das
cmp
and
aas
or
mov
jmp
shrb
aas
or
movsl
cmc
jmp
rcrb
aas
or
xchg
cmc
jmp
rorb
aas
or
test
jmp
sar
ja
xchg
ret
out
fildl
pop
clc
fsubrs
cmp
and
dec
fsubrl
int3
pushf
mov
sbb
mov
add
inc
xlat
daa
mov
add
cmp
test
mov
pop
inc
fildll
out
cld
or
sub
das
xchg
push
fs
aas
lock
jmp
mov
add
pop
inc
fildll
les
push
push
scas
mov
in
in
xchg
out
push
daa
aas
or
inc
and
cmc
outsb
jl
push
mov
sbb
shlb
dec
repz
nop
or
les
fadd
pop
cld
sbb
mov
push
dec
movsl
pop
lods
push
scas
and
dec
fwait
add
mov
int3
js
fsubrl
xor
test
pop
lods
sti
loop
pop
adc
pushf
sbbl
xlat
das
cmp
repnz
fs
insb
adc
cmpsl
mov
sub
out
cld
arpl
setl
push
hlt
xor
jle
jae
fadds
add
aam
pop
inc
fbstp
xchg
out
cld
or
sub
das
push
addr16
sbb
mov
iret
pop
jmp
out
mov
aas
or
and
pushf
cmpl
cwtl
xchg
mov
lahf
rclb
mov
in
in
xchg
out
pushf
daa
aas
or
inc
and
hlt
outsb
jl
ljmp
je
dec
repz
movsb
or
xor
ret
pop
inc
pop
outsl
jl
xor
pop
lods
push
scas
sbb
dec
fwait
add
hlt
mov
cmp
mov
imul
mov
push
enter
loop
mov
pop
loopne
das
cmp
repnz
fs
insb
adc
cmpsl
mov
imul
cwtl
cmp
pushf
cmp
popf
pop
in
cmp
cmp
js
fdivrl
rcrl
mov
sbb
addb
je
iret
pop
sti
sarb
lods
cld
inc
stc
mov
add
in
cmp
cmp
inc
mov
jns
mov
aad
insb
mov
iret
pop
sti
rorb
lods
cld
inc
stc
mov
setl
add
cmp
js
fdivrl
jno
sub
lds
mov
sbb
andb
test
sbb
cld
inc
stc
add
setl
add
cmp
xor
iret
pop
pusha
lods
test
movsb
ja
fsub
and
iret
pop
pusha
popf
test
sbb
dec
fsub
adc
iret
pop
pusha
lea
fsub
add
iret
pop
pusha
jge
cmp
js
fsub
cmc
add
pop
pusha
insl
test
in
ja
fsub
in
mov
pusha
pop
test
les
fsub
aad
mov
pusha
dec
xchg
and
mul
imul
pushf
outsb
jl
shrb
dec
jecxz
insb
mov
insb
mov
shlb
inc
xlat
jnp
rcrb
dec
jae
shlb
dec
repz
push
and
pop
dec
push
outsl
jl
xor
pop
lods
push
scas
inc
out
int3
fwait
add
dec
mov
cmp
mov
imul
mov
test
pop
lods
sti
loop
or
push
pushf
sbbl
xlat
das
cmp
repnz
arpl
insb
adc
cmpsb
mov
shlb
arpl
setl
push
hlt
mov
dec
mov
mov
lahf
in
pop
push
daa
aas
or
xor
setl
mov
sbb
xor
stc
shlb
setl
mov
sbb
and
stc
fdivs
setl
pop
test
fs
fsub
rolb
pop
pusha
dec
test
insb
jbe
fsub
rolb
mov
mov
or
cmpsl
xchg
jg
fildll
lods
sti
fstl
das
pop
sbb
outsl
jl
jns
push
dec
xor
dec
fmull
cmp
sub
xchg
aam
jg
sbb
mov
inc
fildll
les
aaa
hlt
inc
xlat
loopne
xor
cmpl
xor
ds
psubsb
sub
hlt
xchg
mov
lahf
push
pop
scas
mov
mov
call
test
jmp
sar
ja
xchg
ret
out
fildl
pop
adc
das
cmp
and
dec
fsubrl
int3
pushf
xchg
je
sahf
in
cmp
cmpsl
movsb
aaa
pop
jmp
mov
js
cs
sbb
mov
iret
pop
jmp
mov
add
or
cmovo
sub
les
lahf
add
mov
loop
in
xchg
out
inc
daa
aas
or
inc
and
repnz
jl
call
mov
je
ret
repz
pop
push
lahf
in
cmp
test
dec
fadd
pop
pop
push
outsl
jl
xor
pop
lods
push
scas
pop
out
int3
fwait
add
lock
cmp
mov
imul
mov
sub
pop
lods
sti
loop
mov
sub
xor
das
cmp
jne
sbb
in
gs
adc
cmp
gs
xor
mov
mov
das
cmp
push
in
in
push
scas
mov
sbb
das
cmp
inc
in
mov
mov
cwtl
xlat
das
cmp
xor
scas
mov
add
inc
dec
xor
dec
fmull
dec
dec
fildll
xchg
in
jg
sbb
lods
adc
pushf
sub
push
daa
aaa
rolb
push
insb
adc
jb
test
sahf
in
xchg
out
in
es
or
inc
cmc
jmp
jl
sbb
or
mov
sub
out
mov
aas
or
jno
dec
fildll
inc
jno
cld
or
mov
jle
jae
shlb
dec
repz
mov
lahf
in
cmp
push
leave
or
pop
insb
pop
fcomps
outsl
jl
insl
daa
inc
xor
mov
or
sub
or
insb
mov
into
pop
jmp
xlat
adc
testl
xor
pop
lods
push
scas
sbb
dec
fwait
add
sbb
loopne
dec
fsubrl
xor
cmpl
loop
mov
dec
fildll
je
das
cmp
cmp
scas
mov
mov
das
cmp
sub
push
lret
mov
jl
pop
loopne
pop
lods
ret
adc
int3
popf
sub
mov
push
xchg
mov
rcll
les
dec
repnz
popa
push
insb
adc
cmpsl
mov
imul
cmp
pushf
mov
push
aaa
daa
stos
adc
fsubrl
mov
enter
or
insb
and
icebp
outsb
jl
xor
xchg
and
add
dec
repz
je
jle
jae
int3
xchg
insb
mov
into
pop
inc
fildll
out
cld
or
sub
das
mov
andb
mov
iret
pop
jmp
mov
add
or
pshufw
jnp
xchg
or
pop
lods
lahf
cmp
scas
mov
test
das
cmp
inc
in
insb
push
scas
mov
mov
das
cmp
xor
scas
mov
add
inc
dec
xor
dec
fmull
jo
fildll
xchg
or
jg
sbb
lahf
jl
stc
insb
xlat
dec
mov
sub
or
sub
and
pop
jl
clc
fwait
popa
rorb
lahf
in
leave
rcrl
sti
or
push
pushf
jl
xor
in
cmp
test
imul
out
sub
xchg
inc
and
dec
sbb
shrb
lock
pop
lods
mov
add
fcmove
pop
cmp
shr
cld
bound
mov
fsubrl
scas
out
or
out
sub
popa
fmull
lahf
in
mov
sbb
pusha
mov
insb
dec
push
pushf
sub
les
mov
in
lods
insb
mov
mov
xchg
pushf
outsl
stos
jno
les
scas
lret
fwait
scas
inc
lods
xchg
and
or
pop
ljmp
fdivrl
loop
jno
dec
sbb
xor
test
outsb
mov
add
insb
mov
insb
xor
fwait
popa
lock
stos
sti
or
push
pushf
jl
fs
cmp
test
imul
out
sub
xchg
inc
push
cs
sbb
shrb
lock
pop
lods
mov
add
fcmove
pop
cmp
lock
lods
cld
bound
mov
fsubrl
fucomip
or
out
sub
popa
cld
or
loope
mov
insb
dec
push
pushf
sub
fcomps
jl
insb
mov
mov
xchg
pushf
outsl
stos
jno
les
lret
fwait
scas
inc
lods
xchg
and
enter
cmp
mov
or
pop
ljmp
fdivrl
loop
jno
dec
sbb
xor
test
insl
mov
add
mov
fwait
popa
adc
lahf
in
leave
rcrl
sti
or
push
pushf
jl
xchg
sub
cmp
test
imul
out
sub
xchg
inc
subl
adc
sub
mov
pop
lods
mov
add
fxch
pop
cmp
and
lods
cld
bound
mov
fsubrl
paddsw
fucomi
sub
popa
sbb
lahf
in
mov
sbb
mov
push
pushf
sub
les
mov
in
stos
insb
mov
mov
xchg
pushf
outsl
stos
jno
les
inc
lods
xchg
and
enter
cmp
mov
or
pop
ljmp
fdivrl
loop
jno
dec
sbb
xor
test
insb
mov
add
lods
mov
insb
xor
fwait
popa
xor
lahf
in
leave
rcrl
sti
or
push
pushf
jl
les
in
cmp
test
imul
out
sub
xchg
inc
mov
dec
sbb
shrb
lock
pop
lods
mov
add
fxch
pop
cmp
push
jmp
cld
bound
mov
fsubrl
aas
in
or
out
sub
mov
mov
movsb
fs
cld
pop
les
int3
pushf
gs
mov
jb
orl
jg
add
cmp
stos
jg
lock
inc
int3
lcall
dec
sbb
jg
daa
sbb
jecxz
imul
testl
add
sub
or
fmuls
and
adc
mov
loope
and
sub
mov
xchg
sbbl
fs
cmp
cmp
xchg
mov
cmp
int3
sub
cmp
in
cmp
sbb
or
les
icebp
cwtl
inc
mov
dec
sbb
ret
push
shrl
inc
ljmp
arpl
mov
stc
jl
mov
add
cmp
sbb
dec
mov
push
arpl
inc
and
mov
sbb
dec
sbb
dec
hlt
mov
mov
or
sti
mov
test
daa
mov
jne
iret
gs
les
add
push
mov
adc
inc
lahf
mov
mov
pop
inc
lahf
ljmp
jmp
lds
pop
imul
in
stc
jl
stos
sti
push
push
cmpsl
mov
fstps
dec
movsb
sti
or
int3
pushf
jl
add
jmp
shr
testl
push
jb
xchg
popf
sub
mov
xchg
stos
orl
jnp
shlb
xchg
push
or
insb
adc
movsb
in
mov
icebp
aaa
lret
sbb
pusha
cmp
fwait
add
xlat
fsubs
cld
iret
add
mov
push
mov
mov
lods
cld
pop
xor
mov
pop
pop
in
cmp
sub
mov
pushf
mov
sbb
loopne
dec
sbb
push
or
inc
inc
nop
adc
mov
mov
or
fiadds
test
cmp
add
aam
ljmp
sbb
push
inc
lahf
lds
sbb
mov
nop
stos
sti
or
mov
and
xchg
xlat
out
lret
ljmp
fld1
mov
cltd
dec
imul
mov
sarb
sub
sub
shll
inc
xchg
xlat
imul
push
out
inc
dec
jecxz
pop
movsl
das
out
mov
insl
sub
cld
fildl
pop
jl
in
leave
rcrl
sti
or
int3
pushf
jl
mov
cmp
xchg
lret
mov
jl
pop
jns
dec
sbb
mov
sbb
cld
test
aas
mov
popf
jl
fdivl
mov
mov
add
xchg
dec
clc
jb
jno
dec
sbb
cmp
pushf
sub
xchg
les
push
fsubrl
dec
clc
jl
fbstp
mov
iret
pop
jno
rolb
or
hlt
aaa
setl
pop
mov
fsubrl
jnp
sbb
jle
sbb
in
pop
insb
inc
xchg
sti
mov
mov
jb
das
add
adc
jno
mov
sbb
in
lret
pop
repz
jl
pop
in
xchg
mov
add
fildl
shl
out
xchg
mov
lods
or
imul
pushf
outsb
jl
rclb
push
xlat
hlt
jmp
pop
cmpsl
insb
mov
les
and
out
int3
repnz
jge
and
stos
adc
push
scas
mov
mov
in
dec
fcompl
jle
sbb
lcall
pop
fmul
pushf
sub
loop
loop
fldenv
ret
mov
push
clc
stos
pop
lods
push
or
mov
cmp
iret
stos
mov
arpl
adc
jo
into
pop
push
cmp
or
aam
int3
pushf
lods
int3
mov
ja
iret
pop
stos
jo
imul
sub
outsl
stos
adc
fsubrl
mov
sahf
in
cmp
xchg
ss
xchg
jl
pop
sub
shll
xchg
int3
out
mov
roll
xchg
adc
mov
mov
jl
pop
inc
cmp
jnp
push
aad
mov
mov
dec
sbb
push
je
insb
ror
xor
dec
data16
adc
and
sbb
js
repz
jb
repnz
adc
lock
xchg
and
xor
fwait
sub
je
test
test
imul
xor
add
pop
lods
mov
in
mov
cmp
push
mov
push
push
stos
sti
bound
mov
mov
dec
xor
cld
dec
fdiv
mov
lcall
fldenv
mov
jnp
in
mov
in
movsl
insb
mov
rcrl
mov
mov
mov
jl
lods
jns
call
xor
or
je
pop
lods
data16
mov
and
adc
push
pop
in
cmpsb
nop
test
ret
fcomip
jl
fbstp
mov
pop
and
jp
pop
inc
mov
std
scas
mov
mov
aad
test
and
xchg
cld
pop
cs
mov
mov
mov
shrb
xorl
lods
jmp
sub
out
cld
cltd
popa
adc
adc
jmp
subl
lods
aam
adc
in
stc
inc
push
lods
jns
call
fildl
or
dec
cmp
xchg
cld
push
bound
int3
pushf
xchg
jge
jmp
stos
push
pop
xor
cmp
decl
clc
cld
dec
fdivrl
in
in
dec
sbb
xrelease
jo
mov
shlb
rorb
fneni(8087
adc
insb
out
sbb
stos
mov
cmp
fimuls
xor
call
jl
sbb
push
insb
push
insb
adc
mov
aaa
push
cld
in
fsubrl
repz
jl
cld
les
inc
mov
pop
push
xchg
pop
insb
mov
into
pop
push
dec
lods
pop
lods
push
hlt
or
int3
pop
lock
and
aaa
call
and
pop
in
pop
sti
cmp
outsl
stos
adc
xchg
addr16
data16
add
cld
xchg
mov
xor
add
jge
pop
jmp
pop
jae
adc
outsl
add
push
add
cld
xchg
mov
or
xor
test
addr16
adc
jo
pop
mov
scas
sbb
mov
setl
xchg
mov
add
shll
sti
and
int3
xchg
rorb
sbb
mov
sbbb
popa
enter
xor
js
outsl
jl
out
fwait
cmpsl
in
xchg
jo
in
mov
sti
ret
lock
cld
sbb
mov
xchg
cli
xchg
pop
push
mov
add
xchg
dec
sub
movsl
lock
mov
mov
inc
sub
cmc
mov
mov
into
pop
aad
dec
sbb
rolb
mov
sub
mov
insb
mov
or
insb
and
add
jne
in
cmp
test
int3
pushf
sub
push
fst
pop
push
sbb
jo
and
cmp
cmp
sbb
loopne
push
insb
movsl
push
pushf
sub
hlt
adc
dec
pop
sub
scas
mov
out
sahf
in
daa
mov
fcoml
test
xor
lods
mov
nop
add
xchg
mov
and
repnz
xor
fistl
jl
or
jle
pop
jmp
mov
out
sahf
in
daa
jnp
cwtl
pop
dec
fcoml
xor
lea
mov
out
cld
div
aam
sub
int3
pushf
mov
or
dec
xchg
in
mov
sub
or
lret
pushf
test
ja
cmp
sarb
pushf
ljmp
pop
outsl
add
insb
jp
fsubrl
std
push
fsubrl
adc
pusha
xchg
sbb
call
adc
push
xchg
sbb
out
push
fsubrl
adc
call
mov
cmc
inc
push
jno
call
int3
pushf
jg
jecxz
movsb
mov
cld
pop
das
cmc
sbb
fwait
inc
or
lahf
in
aad
mov
dec
xor
sub
add
mov
add
jecxz
fucomi
and
jno
fsubr
xor
pushf
test
icebp
xor
fwait
sub
hlt
pop
in
cmp
xchg
mov
mov
test
sub
scas
mov
mov
repz
sbb
das
or
iret
jl
pop
jns
les
stos
sti
xchg
and
loop
lock
xchg
nop
aam
cmp
xor
in
shrl
int3
sub
xor
fisubrs
mov
push
mov
je
sar
int3
xchg
fadd
cs
das
adc
jno
insb
cmpsl
fadds
loope
pop
xlat
inc
mov
adc
or
mov
sbb
push
inc
mov
xchg
cld
add
mov
mov
movsb
insb
sub
or
loope
cmp
stos
jno
sub
xor
fwait
mov
cmp
jo
push
pop
xor
pop
sbb
mov
mov
or
sbb
mov
sbbb
pop
lods
das
int3
cmp
xchg
dec
push
les
bound
idivl
fsubs
sub
dec
cmpsl
and
mov
cmp
add
pop
std
or
lds
pushf
pop
popa
je
inc
add
xchg
mov
in
aad
xchg
movsb
insb
xchg
push
adc
mov
insl
jg
sbb
adcl
mov
adc
jg
hlt
push
push
lret
adc
negb
dec
sbb
jg
call
mov
int
lods
sti
inc
popa
mov
pop
icebp
sahf
in
xchg
xor
jo
or
xor
mov
mov
xchg
sbb
sbb
add
inc
adc
outsb
jl
sbb
dec
jb
or
nop
test
inc
jmp
dec
jmp
add
iret
in
fimull
inc
xchg
mov
enter
repnz
jnp
pop
lock
sbb
and
ret
xchg
xor
lahf
in
cmp
mov
hlt
aas
setl
and
ljmp
setl
pop
int
lods
or
loopne
hlt
out
cmpb
or
sbb
pop
cmp
adc
scas
push
push
add
cld
or
imul
daa
and
ficomps
mov
xor
enter
jl
pop
popa
dec
adc
jnp
fsubrl
mov
push
inc
in
mov
jno
insb
loope
pushf
sub
adc
sbb
cld
mov
scas
loope
pop
jns
push
insb
cmp
sub
mov
push
lahf
in
fwait
adc
add
xlat
adc
mov
loope
or
insb
adc
xchg
jnp
in
mov
aaa
hlt
cltd
and
dec
mov
and
jmp
xor
mov
jmp
scas
lcall
nop
les
pusha
pusha
pop
cmpsl
pushf
in
fldt
and
mov
push
rclb
roll
sbb
jae
jno
hlt
mov
adc
xchg
sar
in
cmc
xor
and
push
jle
sbb
or
push
je
or
add
xchg
or
mov
mov
or
pop
push
cmp
imul
fwait
inc
jo
lahf
in
and
mov
pop
cmpsb
int3
pushf
sub
shrl
cld
gs
inc
mov
cwtl
push
jle
insb
xchg
dec
into
fsubrl
and
mov
mov
insb
stos
jno
fndisi(8087
les
mov
aaa
mov
sti
push
adc
mov
mov
pop
push
dec
xchg
mov
dec
and
xor
ret
shll
xor
insb
or
and
mov
jb
xchg
mov
or
fdivs
fisubrs
je
lods
cmp
xchg
mov
fcompl
dec
dec
xchg
mov
lea
pop
call
xor
xor
test
shrb
enter
or
lods
cld
or
lock
fwait
sub
stos
sub
movsl
das
adc
jg
jmp
sbb
fistpl
pusha
std
mov
xchg
out
adc
xor
xor
fwait
mov
cmp
xor
push
hlt
lock
mov
ja
aas
xchg
xor
lods
cld
or
lds
add
mov
outsl
add
xchg
insb
mov
pop
inc
xchg
xchg
and
loopne
jp
pop
and
cwtl
jnp
cld
je
sar
int3
repnz
dec
pop
in
mov
pop
les
int3
pushf
jl
nop
sarb
cli
fcompl
icebp
add
fisubrs
dec
ret
mov
fsubr
and
dec
pop
shll
iret
pop
lods
mov
sbb
lock
in
mov
mov
in
pushf
insb
mov
push
mov
add
dec
add
jl
pop
popa
inc
xor
test
enter
jns
sub
inc
call
fwait
scas
inc
cwtl
fists
dec
lahf
adc
or
shll
mov
cmp
sbb
or
and
loopne
dec
sbb
out
int3
sti
cmc
aas
loop
pusha
pusha
push
add
stc
or
imul
lods
mov
je
jmp
dec
fildl
fimull
ja
int
mov
or
out
and
pushf
cmpb
aam
dec
sbb
lods
mov
sub
mov
leave
cltd
sbb
popw
sub
mov
mov
lods
lds
fildll
loope
add
mov
arpl
pushf
dec
push
cwtl
sub
les
sbb
insb
mov
or
cltd
pop
xchg
mov
filds
dec
sbb
inc
or
fmul
pop
and
jns
pop
push
les
sub
pop
jmp
push
pop
fistpl
mov
mov
dec
mov
lret
add
in
pop
cmp
add
lods
cld
jbe
stc
inc
enter
loop
inc
xor
sti
or
mov
adc
cmp
adc
dec
fdivrl
negb
rorl
sti
bound
lfs
xor
iret
loopne
xchg
movsb
int3
adc
add
mov
aam
dec
dec
fcoml
test
xchg
mov
pushf
test
cld
mul
and
xor
sub
sbb
call
xor
or
xlat
jmp
mov
in
leave
rcrl
test
adc
test
pop
mov
orl
push
mov
xor
imul
inc
insl
dec
push
cwtl
sub
mov
xchg
lahf
add
fmull
fcomi
add
pop
lock
rcrl
test
and
pushf
jl
je
in
cmp
sbb
imul
aam
cmp
icebp
clc
or
push
cwtl
sub
in
movsb
mov
in
lcall
mov
cmp
sub
mov
mov
cmp
imul
lods
aam
or
or
mov
fdivl
stos
sti
xchg
and
cmp
mov
cmp
push
sub
jmp
stos
push
pop
xor
jnp
mov
stos
insb
cmp
icebp
mov
dec
ret
cs
add
mov
pop
and
jns
pop
inc
mov
fldt
adc
jno
dec
sbb
mov
mov
fldenv
ret
out
adc
imul
xchg
sbb
rorb
pop
and
jns
pop
push
fdivs
lret
sub
pop
jmp
push
pop
jmp
lret
fwait
mov
mov
jo
mov
aam
xor
sub
je
test
mov
bnd
filds
dec
sbb
inc
or
cld
lret
or
or
pop
jmp
arpl
mov
jl
pop
jns
dec
sbb
enter
out
cmp
in
xchg
fsubrs
lret
add
jecxz
pop
cmp
rcr
cld
jbe
stc
inc
enter
loop
inc
xor
mov
or
mov
cld
test
rorl
sti
je
sar
int3
in
adc
dec
pop
in
cmpsb
dec
test
imul
repz
gs
cmp
popa
test
jl
stc
inc
enter
hlt
xchg
push
jle
insb
xchg
sbb
int
mov
mov
xchg
pushf
jae
in
mov
sub
push
pushf
jmp
nop
test
imul
outsb
jl
inc
loop
dec
sbb
std
cltd
popa
push
int3
jecxz
aam
sub
stos
jg
cld
lret
pop
mov
jl
adc
cmp
mov
dec
fdivrl
negb
dec
sbb
or
adc
add
sub
stos
jg
cld
out
cmp
pushf
mov
cmp
sub
or
mov
sub
rcll
dec
insl
sub
cld
pop
xor
out
ret
nop
adc
adc
mov
lret
adc
xor
and
je
aad
int3
and
clc
cmp
and
ljmp
sarl
xor
cmp
sub
add
push
sub
negb
cmp
or
mov
adc
jns
sbb
cld
adcb
or
mov
cmp
roll
sti
or
push
pushf
jl
movsb
sbb
cmp
test
imul
push
dec
fucomi
xor
popf
pop
or
cmp
cltd
inc
push
xorb
xlat
sub
adc
dec
nop
loope
inc
inc
push
and
pushf
jl
fs
in
cmp
sbb
imul
sar
cmp
and
pop
jmp
mov
xor
push
or
jle
push
loopne
pop
xchg
mov
pop
sbb
push
cltd
popa
push
mov
pushf
lods
jmp
pop
sbb
add
or
mov
pop
fld1
ja
nop
mov
cmp
pushf
pop
jnp
fld1
mov
or
jnp
ficompl
pusha
inc
mov
pop
insb
mov
je
jmp
mov
adc
or
push
or
loope
cmp
stos
jno
sub
xor
fwait
mov
cmp
jo
aas
pushf
movsl
xor
sti
mov
lock
xchg
int3
pushf
addr16
dec
sbb
andb
cmpsl
repz
cmp
aam
xor
pop
and
add
xor
nop
mov
inc
xchg
pushf
sub
hlt
inc
push
jle
add
aam
aaa
fisubrs
mov
pop
ds
xor
or
sahf
in
and
je
xlat
dec
test
jl
pop
push
movsb
mov
lods
in
fsubrl
test
inc
dec
sbb
push
push
push
jns
inc
adc
int3
negl
lods
cld
je
xlat
dec
test
inc
mov
lods
out
inc
pop
es
pushf
pop
repz
adc
jle
pop
sbb
shl
insb
mov
add
lods
jo
and
xor
in
xchg
movsb
popa
outsb
mov
push
ds
mov
jl
mov
lods
out
inc
xor
push
pushf
pop
mov
es
cmp
nop
xlat
jg
repz
dec
test
lahf
shlb
test
push
insb
cmpsl
out
mov
dec
mov
adc
and
add
push
jo
pop
lods
fs
scas
mov
mov
lods
push
iret
xor
test
mov
pop
inc
movsb
dec
push
lods
cld
or
dec
push
test
mov
jg
call
xor
mov
rcll
sti
or
insb
mov
stos
sti
or
mov
jnp
lods
aam
adc
mov
in
adc
push
pop
in
mov
pop
imul
int3
sbb
aam
dec
sbb
cld
pop
inc
insb
mov
mov
lods
mov
fcmove
jnp
fdivrl
fisubrs
je
movsl
cmp
jne
out
imul
int
jmp
std
dec
hlt
add
mov
or
pop
ds
push
stc
test
add
add
loope
cmpsl
mov
shll
shl
sbb
adc
inc
iret
in
mov
int3
daa
sub
pop
imul
lret
jge
rcll
dec
insl
sub
sbb
cld
pop
cmova
psllq
pushf
jae
repnz
pop
fs
sub
das
cmp
in
lret
cmpb
movsl
stos
mov
mov
xor
jecxz
mov
cmp
push
imul
sbb
or
mov
inc
xchg
adc
aas
pop
in
cmp
adc
in
arpl
push
adc
insb
daa
xor
inc
cmp
das
mov
clc
iret
pop
daa
add
shl
cmp
out
sub
xchg
lahf
outsl
adc
sbb
lods
mov
xchg
in
clc
sahf
in
leave
rcll
or
jno
dec
sbb
movsb
arpl
in
aam
add
xchg
lds
sub
cmc
aas
hlt
mov
js
xchg
enter
repnz
mov
in
cmp
mov
jl
and
leave
xchg
sbb
mov
mov
xchg
int3
xlat
das
cmp
shl
out
pop
lcall
rorl
dec
add
dec
sbb
adc
into
pop
inc
and
shrl
xchg
cli
cmc
aas
pop
test
inc
jg
das
cmc
or
rcrl
sub
cmp
mov
lock
xor
pop
ret
adcb
jo
inc
shlb
shl
dec
add
scas
int3
xchg
cmpsb
in
sahf
lret
fwait
sub
dec
inc
cld
aas
push
jp
mov
lea
fdivrs
or
in
mov
jl
pop
cmp
popa
cwtl
daa
aas
or
sub
into
gs
or
dec
inc
mov
stos
jno
xor
and
outsl
jl
sbb
test
insl
mov
pop
in
aaa
and
popa
add
ret
loope
rcr
mov
mov
sbb
cld
mov
insb
inc
mov
jno
cmp
sbb
ret
das
adc
lods
push
lahf
jb
push
cmova
inc
xlat
das
cmp
flds
mov
pop
movsl
les
mov
nop
push
sub
pop
jmp
imull
xor
jmp
imul
sbb
xor
int3
stos
mov
lea
dec
test
in
lret
fwait
sub
in
push
dec
dec
xor
fdiv
mov
fwait
sub
mov
lods
cld
cltd
popa
inc
mov
pusha
pop
jmp
je
lods
cld
pop
xor
push
xchg
and
mov
mov
int3
pushf
mov
cmp
scas
mov
mov
in
cmp
cmp
fcompl
lock
mov
mov
in
sub
rcr
and
mov
sahf
pop
jne
in
cmp
sbb
or
imul
add
mov
adc
sti
sbb
mov
jecxz
add
pop
lods
or
pushf
sub
mov
aad
dec
sbb
xor
push
pushf
sub
vpsubb
mov
cld
or
and
xchg
pop
add
pop
lods
jg
clc
insb
inc
les
sub
pop
jmp
dec
sbb
jo
imul
int3
jecxz
add
mov
in
lock
out
cwtl
lret
or
push
ljmp
imul
lods
aam
add
jg
in
stc
inc
jl
sub
pop
jmp
pop
insb
stos
jno
fndisi(8087
les
mov
xor
fndisi(8087
rcrb
and
mov
and
inc
iret
mov
cmp
xor
setl
cmp
or
mov
fistps
stos
sti
gs
xchg
pop
mov
data16
imul
pushf
sub
shr
movl
ror
pushf
outsb
jl
sbb
inc
mov
cvttps2pi
mov
addl
dec
sbb
xchg
ret
ret
jl
test
fs
scas
mov
and
dec
sbb
cld
cltd
popa
aam
lret
fwait
jl
inc
adc
cmp
adc
xor
repnz
cmp
mov
mov
inc
jmp
dec
add
rorb
fucomi
and
mov
cmp
add
push
pusha
or
push
xchg
jnp
pop
aam
dec
sbb
jl
and
mov
sbb
or
jno
test
outsb
jl
inc
inc
lock
sbb
jno
xor
mov
cmp
mov
mov
inc
jmp
dec
add
rorl
fucomi
and
mov
mov
mov
pusha
sti
or
loope
mov
mov
mov
hlt
cld
dec
fmul
sbb
repz
mov
pop
cmp
jmp
mov
into
pop
ja
rcll
and
jbe
ret
pushf
sub
mov
lods
mov
jb
sti
or
movsb
mov
jmp
scas
xchg
jg
push
std
bound
ret
test
js
pop
outsl
add
hlt
js
insb
mov
mov
xchg
xlat
or
mov
jecxz
dec
xor
jns
ret
push
ror
sbb
pushf
sub
add
jno
sbb
cld
jo
xchg
mov
shrl
das
ficoms
and
jl
orl
mov
popa
pop
jmp
dec
sbb
cmp
pop
insb
and
adc
hlt
movsb
pop
jle
outsl
sti
and
insl
dec
in
sub
mov
lods
cld
or
je
int
inc
in
sahf
in
leave
rcll
mov
mov
push
outsl
test
jnp
mov
xor
scas
or
iret
in
push
adc
jecxz
dec
pop
scas
or
pop
xor
pop
jns
pop
sbb
shll
pushf
outsb
jl
loope
cmp
add
xorl
pop
cmp
sbb
adcl
jmp
lahf
test
imul
test
dec
mov
push
adc
icebp
fwait
sub
hlt
mov
xor
fldt
sbb
cltd
das
mov
pop
sbb
int3
leave
fwait
sub
je
lods
cmp
lahf
jo
xchg
pushf
jnp
jne
sub
lds
add
sbb
mov
insb
xor
repnz
jnp
sbb
add
movsb
imul
divb
xchg
inc
adc
hlt
push
pop
or
roll
dec
sbb
in
xor
mov
cmp
fisubrl
xor
jge
mov
jg
in
stc
inc
loopne
sub
pop
add
dec
pop
lods
jg
fneni(8087
into
pop
and
mov
mov
or
dec
mov
xchg
pop
cs
sbb
mov
add
mov
add
loope
lcall
in
orl
cld
dec
fdivr
inc
loopne
sub
lods
jns
pop
sbb
inc
mov
cmc
or
jo
cmp
xchg
xchg
repnz
pop
and
mov
inc
pushf
sbb
fmull
insb
fsubrl
jno
fildll
push
imul
scas
cmp
cwtl
leave
lods
cld
xchg
xchg
test
rcr
mov
adc
push
fisttpll
pushf
mov
rcrb
cmp
fldt
loope
sub
movsb
dec
sbb
cld
or
sbb
push
pushf
mov
cmp
fisubrl
sbb
mov
sbbb
les
lcall
jmp
xor
fldt
pop
and
js
pop
cmp
mov
add
popa
loopne
lret
fwait
jg
sbb
add
dec
sbb
sti
and
dec
and
lock
mov
dec
sbb
adc
scas
mov
rcll
cmpl
cmp
lods
ds
test
jle
lahf
lea
and
loopne
push
mov
cmp
push
insb
adc
mov
jl
pop
lea
and
in
aad
insb
xor
add
lods
popf
shlb
xor
mov
push
leave
xor
insb
xor
aad
fmull
lahf
in
mov
test
imul
fistpll
mov
shrl
in
int3
in
adc
cmp
in
fldenv
mov
jl
jmp
stos
dec
hlt
jbe
mov
mov
in
mov
pop
mov
mov
movsb
mov
mov
jg
adc
lods
dec
hlt
fs
mov
push
ja
dec
sbb
cld
cltd
and
out
xchg
jnp
pushf
in
lahf
sbb
mov
adc
sti
and
mov
cmp
push
mov
sub
push
push
stos
sti
pop
les
add
pop
jmp
adc
rcr
test
insb
or
inc
fstpt
jns
test
stos
sti
jbe
mov
jl
and
movl
and
movsb
insl
jl
scas
jmp
mov
loopne
or
cmpsl
jg
and
iret
pop
popa
push
dec
xor
dec
fdivrl
mov
nop
mov
sbb
in
mov
pusha
cmp
adc
xchg
test
fldt
push
clc
sub
and
pusha
int3
xchg
out
cld
pop
les
or
mov
lods
dec
hlt
test
mov
pop
push
jns
inc
insb
cmp
pop
in
xchg
popa
ficompl
or
outsb
mov
adc
sti
and
mov
cmp
push
test
push
push
stos
sti
pop
les
cwtl
inc
pop
in
cmpsb
lret
lahf
mov
je
int3
add
inc
rcrl
adc
lods
in
cltd
insb
mov
mov
sub
clc
jecxz
cld
je
int3
repz
clc
push
mov
lods
cld
jbe
sub
adc
cs
add
mov
hlt
and
in
lds
pop
scas
mov
js
cmp
popa
or
aas
or
sub
roll
icebp
mov
mov
jae
or
mov
loope
fs
in
cmp
adc
test
jnp
mov
add
sbb
decl
sub
test
sbb
mov
inc
or
mov
or
dec
shlb
leave
lods
inc
fcoml
jle
test
ret
push
fcoml
pushf
sub
movsb
lret
cs
pop
adc
jnp
insb
adc
hlt
rorl
cmp
dec
repnz
dec
pop
in
mov
cld
lret
fwait
fs
sbb
mov
cmp
sbb
xchg
sbb
and
call
fwait
push
into
adc
lods
push
scas
pop
xor
int3
test
cmp
je
or
push
rorl
mov
cmp
lods
cld
or
jno
lret
fwait
adc
or
popa
and
aas
or
lret
div
ds
pop
inc
cmp
insb
inc
adc
cmp
imul
lods
fmull
sbb
data16
mov
ss
jl
pushf
add
mov
mov
mov
mov
sbb
test
stc
inc
inc
lcall
dec
sbb
mov
jge,pn
pop
push
pop
fldenv
data16
push
xchg
je
sub
mov
xor
dec
push
lock
icebp
or
outsb
jl
inc
out
dec
sbb
hlt
xchg
and
and
mov
pop
inc
test
push
add
test
mov
push
decb
icebp
cmpb
pushf
mov
pop
mov
scas
cld
or
jl
jl
sarl
jb
adc
scas
mov
test
jmp
js
out
cld
hlt
outsl
pop
mov
mov
jl
out
cld
cmc
push
imul
pop
jmp
mov
and
imul
jmp
stos
dec
cltd
popa
loopne
lret
fwait
jl
adc
popa
insb
or
imul
sub
mov
fsubr
xor
and
mov
mov
sbb
mov
shl
movsb
in
xlat
mov
mov
mov
cmp
call
insb
adc
push
push
lock
fcoml
je
mov
jl
lret
xchg
cmp
outsl
add
mov
mov
adc
adc
pop
insb
mov
les
add
sbb
adc
add
add
cmc
into
pop
jmp
push
add
leave
or
out
sbb
mov
lahf
xchg
mov
fsubr
jno
dec
sbb
pop
inc
fisubrs
je
xchg
cmp
lahf
jo
cltd
popa
int3
mov
je
xchg
cmp
jne
mov
in
sub
xchg
pop
add
pop
lods
jg
fndisi(8087
xlat
lret
adc
mov
test
or
imul
pushf
outsb
jl
sbb
lcall
insb
mov
mov
pushf
add
mov
fsubrs
mov
jno
jmp
mov
fildl
add
leave
rorl
inc
cmp
sub
inc
repz
add
add
and
jns
mov
shlb
roll
sti
or
inc
or
sub
pop
popa
pop
dec
xchg
sar
in
imul
fwait
mov
mov
jg
or
cltd
les
cmp
scas
mov
mov
adc
sbb
jmp
jnp
pop
xor
iret
jecxz
xchg
cmpsl
add
sbb
gs
pop
jmp
jg
in
in
fldt
ss
test
pop
jmp
mov
out
insb
mov
mov
lods
cld
arpl
inc
adc
push
jns
pop
aas
mov
mov
outsl
mov
jl
mov
aam
sbb
and
jmp
push
idiv
inc
add
sub
roll
xor
fs
or
xor
add
push
out
cmp
jb
andl
insl
xor
fldenv
ret
movsb
jl
or
in
cmp
mov
aam
fisubrs
je
mov
lock
popa
les
sbb
inc
sub
cld
in
xchg
insb
mov
mov
jno
cmp
stos
push
pop
incb
mov
stos
sti
or
ret
sbb
jl
in
stc
mov
xor
test
pop
adc
dec
sbb
out
sbb
mov
cld
pop
jmp
pop
mov
aam
int
sub
adc
loope
dec
outsl
cld
in
subl
mov
enter
sti
or
testl
je
jno
jmp
sub
and
je
dec
sbb
mov
in
je
dec
and
jnp
shr
vunpcklpd
cltd
add
imul
in
cmp
pop
mov
inc
inc
jmp
push
movsb
and
mov
and
shrl
jecxz
mov
cmp
stc
inc
clc
fwait
sub
in
test
insb
xchg
mov
fsubrl
mov
cs
xchg
popa
cld
or
icebp
jl
adc
int3
jmp
dec
loop
std
pop
inc
call
icebp
cwtl
inc
sbb
inc
xor
xor
add
pop
in
cmp
xchg
sar
in
aam
fisubrs
add
dec
push
sbb
pusha
int3
pushf
sub
inc
int3
jmp
dec
jb
movsb
push
insb
movsb
lock
sub
in
lods
xchg
pop
mov
ret
xor
jl
imul
gs
dec
sbb
jle
add
mov
fadd
inc
mov
mov
jle
sbb
or
imul
scas
xchg
shrb
stos
fsubrl
fwait
mov
cmp
lahf
jo
notl
outsb
jl
sbb
mov
lret
shll
into
pop
jmp
mov
test
roll
cwtl
mov
cld
or
movsb
xor
jnp
and
adc
divl
in
arpl
aas
dec
sbb
mov
pop
and
mov
xchg
xor
pusha
cld
or
icebp
jl
adc
inc
adc
cld
or
arpl
mov
mov
add
fs
adc
cmp
mov
xor
and
push
inc
cli
loopne
sbb
cmp
fsubrl
test
sbb
jmp
sarb
test
imul
pop
cmp
dec
iret
lods
cld
gs
sub
inc
loopne
add
cmp
mov
add
adc
pop
cmp
mov
popa
nop
mov
adc
adc
movsb
push
insb
mov
push
pop
jmp
roll
sti
or
inc
jae
sub
push
jl
xor
fmuls
xchg
push
imul
pop
jmp
shll
mov
pop
test
dec
sbb
adc
lods
mov
hlt
enter
sbb
or
es
lret
test
movsb
pop
mov
cld
hlt
inc
pop
mov
in
jno
dec
sbb
xchg
daa
mov
inc
dec
sbb
cld
xchg
and
jnp
lods
inc
and
iret
lods
cld
gs
sub
inc
mov
cmp
popf
insb
mov
adc
sbb
sub
mov
mov
sbb
sti
addl
sub
mov
sti
int3
sbb
cld
psrlq
aam
fdivs
dec
xchg
les
lret
in
adc
ds
in
xchg
rcr
add
mov
movsb
inc
lcall
cvttps2pi
sub
xchg
out
pop
jg
in
sub
inc
aam
sub
mov
jmp
xchg
pushf
lds
lods
inc
or
in
cmp
sbb
dec
push
movsb
and
or
cld
or
cmpsl
jg
and
cmp
cwtl
ret
or
inc
les
xor
lahf
stos
jp
push
or
xchg
pop
popa
push
adc
scas
mov
mov
roll
or
mov
icebp
cwtl
inc
inc
add
das
shlb
xlat
mov
mov
cs
inc
pop
cld
or
icebp
jl
adc
jle
add
scas
or
lds
cmc
mov
outsl
inc
push
lret
jo
sub
fwait
sub
je
popf
cmp
jne
mov
dec
arpl
dec
cwtl
mov
rorl
add
adc
pop
aam
std
sbb
push
xchg
pushf
vsqrtsd
sub
mov
mov
sub
sub
adc
and
fsubrl
int3
pushf
sub
or
cmp
xchg
push
int3
pushf
mov
lods
sbb
mov
xchg
or
lret
in
mov
cmp
push
mov
adc
xchg
dec
mov
imul
in
aam
sbb
gs
mov
cmp
loope
cmp
cmp
sbb
mov
mov
jl
test
xchg
dec
fcoml
leave
fwait
sub
int3
jmp
dec
fidivl
fadd
movsb
add
jl
sbb
gs
movsb
mov
mov
lods
push
xchg
pushf
lds
repnz
loope
mov
movsb
add
sbb
cmp
imul
sbb
xor
int3
stos
mov
rcrl
add
mov
adc
cld
or
and
fwait
sub
je
pushf
cmp
jne
mov
int
sub
adc
jmp
dec
sbb
js
fldt
push
loopne
jnp
pusha
in
cmp
movsl
xor
fldt
push
loopne
jnp
out
std
xor
cmp
lret
daa
xor
hlt
or
and
arpl
int3
cmc
mov
in
jno
dec
sbb
sti
rclb
mov
and
lods
cld
gs
sub
mov
pop
and
sti
sbb
mov
rcl
cmp
jo
dec
fdivr
inc
pop
xchg
sub
lods
aam
out
sbb
sti
rclb
mov
add
jmp
mov
fsubrl
shrl
test
sbb
test
daa
jno
adc
sbb
cmpl
sbb
in
call
aad
fsubrl
cwtl
mov
movsb
pop
jmp
xlat
popa
movsb
test
sub
mov
mov
mov
jnp
les
sbb
in
jg
mov
mov
cmpsb
pop
insb
xchg
cmpsb
jl
insb
aas
nop
loopne
add
popa
pushf
dec
cltd
popa
fdivl
hlt
jmp
jl
outsl
sti
and
insb
dec
daa
mov
movsl
adc
pop
das
inc
dec
rol
mov
dec
sbb
in
push
pushf
jnp
pop
inc
and
lret
lods
cld
gs
sub
inc
mov
in
cmp
push
dec
jo
fldt
push
and
jnp
fsubrl
sbb
mov
fldt
mov
fdivrl
jno
movsl
nop
mov
imul
pop
jnp
pop
jne
rcrb
sti
inc
jns
mov
loope
jmp
dec
mov
loopne
add
jmp
stos
dec
hlt
mov
mov
les
cmp
and
or
mov
jl
and
xor
insb
jg
loopne
inc
adc
ja
nop
sbb
mov
clc
pop
jmp
xchg
mov
mov
into
pop
aam
cli
sbb
push
xchg
pushf
vsqrtsd
jns
dec
sbb
fsubrs
hlt
rorl
cld
inc
hlt
loopne
sbb
xchg
int3
and
stos
sti
arpl
push
pushf
adc
cmp
rcr
add
mov
cld
pop
jmp
xchg
mov
mov
mov
je
sub
lods
or
imul
add
adc
pop
aad
inc
sbb
in
int3
fisubrs
dec
nop
pushf
in
add
loopne
into
pop
cmp
inc
mov
cld
cmc
aad
mov
mov
mov
mov
imul
sub
les
mov
mov
insl
test
cmp
shl
insb
or
imul
outsb
jl
dec
cltd
cmp
jne
mov
int
sub
sub
cld
or
test
in
mov
movsl
sub
fisttpl
insb
mov
mov
rol
stos
sti
je
sar
in
adc
sub
push
sub
or
push
mov
pushf
sub
adc
dec
cmpsl
icebp
or
fwait
mov
cmp
insb
push
fnstsw
pop
in
xchg
sbb
mov
adc
cmp
xor
or
imul
push
jns
pop
push
shl
pop
lods
dec
hlt
stos
or
int3
out
mov
cmp
dec
insb
mov
adc
cmp
icebp
in
pop
imul
iret
fadd
sbb
icebp
push
or
in
decb
cmpsl
jg
sbb
popa
push
dec
xor
dec
fdivrl
jne
adc
xchg
sti
and
dec
aad
pushf
mov
mov
add
stc
inc
clc
fwait
sub
les
rorb
fsubrl
enter
lods
push
inc
loop
lods
in
add
loope
or
pop
jbe
xchg
in
dec
fdiv
lret
adc
pop
ja
mov
fdiv
cmp
test
sub
mov
mov
into
pop
aam
clc
sbb
push
xchg
pushf
sub
mov
stos
jno
sub
fwait
sub
inc
repz
xchg
or
icebp
jl
stos
mov
iret
pop
in
jne
dec
mov
mov
iret
cs
stos
cmp
or
xor
fdivrl
mov
dec
xchg
mov
mov
add
sbbl
stc
add
outsb
jl
cmp
pushf
dec
sbb
movsb
je
mov
cld
or
cmp
push
outsl
push
sbb
mov
fwait
mov
lret
cs
sbb
fdiv
add
cmp
pop
cmp
xor
sub
mov
lods
inc
popf
insb
xchg
mov
fsubrl
cmp
mov
adc
or
insb
inc
adc
jmp
pop
test
imul
outsb
jl
inc
adc
dec
sbb
sbbl
mov
cmp
lahf
jo
xchg
pushf
loopne
add
roll
and
mov
pusha
adc
mov
xor
pop
cld
or
cmpsl
jg
adc
sbb
cmp
dec
sbb
sti
and
sub
push
push
and
cltd
popa
mov
jle
jmp
test
mov
jmp
stos
dec
or
movsb
enter
mov
cmp
adc
mov
pop
jns
or
insb
mov
add
cwtl
sbb
dec
in
adc
sub
shrl
sti
or
xor
test
mov
pusha
mov
jae
adc
int3
sbb
cmp
dec
sbb
sti
and
sub
push
push
fwait
add
jl
jle
mov
mov
cmp
push
add
mov
into
pop
pusha
dec
test
jnp
lods
popf
sub
mov
add
leave
and
in
mov
idiv
jnp
jmp
stos
dec
je
add
int3
repz
pop
pop
jmp
add
dec
push
push
pushf
andl
cmp
fldt
ss
jl
imul
ret
movsb
call
and
sarl
enter
adc
mov
mov
sti
and
sub
push
jo
and
push
or
movsb
push
inc
sub
adc
and
add
or
fwait
sub
je
xchg
cmp
test
imul
outsb
jl
inc
push
cmc
dec
sbb
shrb
sub
lret
fwait
sub
sbb
es
sub
movsb
or
and
pushf
scas
inc
cwtl
jmp
stos
dec
hlt
repnz
mov
or
rcrl
jno
int3
pushf
test
dec
xlat
dec
xor
push
cld
or
int3
push
and
jl
xchg
cmp
imul
fs
stc
in
cmp
popa
mov
or
fwait
sub
faddl
dec
sbb
inc
sbb
sub
sbb
mov
mov
cmp
xor
in
xchg
loope
int3
sbb
cmp
dec
sbb
sti
and
sub
mov
hlt
and
lods
cld
mov
mov
mov
sti
dec
sbb
les
add
pop
lods
cld
cltd
popa
les
sbb
inc
sub
cld
in
xchg
xor
mov
cmp
stos
push
pop
les
inc
lods
in
test
sbb
mov
je
movsb
cmp
jne
xchg
imul
pop
test
leave
mov
sar
add
sub
out
ja
sub
cli
add
imul
lahf
mov
pop
sbb
test
sbb
dec
test
and
pop
inc
rorl
mov
into
pop
aam
hlt
sbb
push
xchg
pushf
vmovmskps
imul
call
xchg
test
and
aad
loopne
jnp
sbb
fs
scas
mov
mov
xor
dec
fsubrl
cmp
mov
dec
sbb
or
fisubrl
jecxz
mov
mov
inc
mov
insb
adc
adc
cmp
jae
nop
mov
inc
sub
in
lods
xchg
pop
mov
ret
and
xor
je
xchg
cmp
jne
mov
or
jle
add
movsb
or
lds
cmc
cmp
sbb
in
cmp
test
xchg
dec
fcoml
pushf
sub
adc
cld
or
aam
popa
fisubrs
insb
add
cmp
mov
sar
int3
pushf
and
icebp
cs
out
cld
or
icebp
jl
stos
mov
enter
mov
inc
ds
and
pushf
test
dec
mov
shlb
cld
arpl
push
pushf
adc
xor
rcr
add
mov
and
lods
cld
gs
sub
inc
mov
xor
int3
jmp
dec
xchg
xor
sarl
sbb
fs
jno
mov
mov
sti
rclb
mov
hlt
lods
cmpl
fcoml
push
pushf
sub
hlt
jl
jle
add
mov
mov
mov
lods
dec
sbb
push
push
pushf
xchg
xchg
and
lods
cld
arpl
push
pushf
adc
xor
rcr
add
icebp
cmp
sub
je
inc
loope
lods
or
mov
mov
lods
in
subb
in
aad
je
lock
jl
sub
jle
add
ret
and
xor
je
xchg
cmp
jne
mov
adc
jnp
pop
push
inc
mov
inc
ds
sbb
push
pushf
adc
xchg
mov
inc
ds
add
pushf
test
dec
mov
push
dec
shl
insb
or
imul
add
adc
pop
push
shl
pop
lods
in
adc
mov
test
xchg
pushf
lds
in
loopne
cld
pop
jmp
mov
adc
mov
xor
jne
and
push
adc
jl
loope
xchg
shll
inc
dec
imul
lock
je
ds
in
int3
pushf
and
lock
aaa
push
cld
or
icebp
jl
adc
xchg
pop
cmp
push
add
dec
add
adc
pop
aad
test
push
je
add
int3
test
and
mov
mov
into
pop
aam
icebp
sbb
push
xchg
pushf
scas
gs
mov
pop
loopne
lods
in
subl
loopne
je
sbb
fs
scas
mov
mov
xor
inc
fsubrl
test
mov
dec
sbb
or
push
popa
in
mov
cmpsb
bound
mov
fisubrs
mov
fcoml
pushf
sub
adc
xor
mov
pop
sahf
in
movsb
sub
movsb
mov
pop
sahf
in
and
shrl
and
movsb
adc
out
cld
hlt
adc
mov
in
jo
test
push
je
dec
test
mov
or
mov
mov
into
pop
aam
icebp
sbb
push
xchg
pushf
nop
arpl
push
call
add
insb
mov
fwait
loopne
jae
sbb
fs
scas
mov
mov
xor
cmp
loopne
sbb
or
shrl
jecxz
sub
mov
insb
adc
adc
and
jae
nop
lahf
push
insb
movsb
jo
sub
in
lods
xchg
pop
mov
ret
and
das
outsb
jl
jmp
cmp
jne
mov
add
jle
add
mov
mov
cmp
xor
xor
jo
sub
adc
cld
or
aam
pop
fisubrs
faddl
in
cmp
mov
mov
int3
pushf
and
out
cs
push
push
cld
or
icebp
jl
stos
mov
ret
xchg
mov
aas
ds
xchg
pusha
int3
pushf
test
dec
mov
jge
cmp
sub
and
outsb
jl
popa
movsb
jo
pop
lods
dec
cltd
popa
nop
mov
add
in
cmp
test
imul
shr
cmp
and
hlt
fsubl
cwtl
jne
or
jae
sub
aas
sub
in
lods
xchg
pop
mov
ret
and
das
outsb
jl
sbb
mov
add
jle
add
lahf
or
lds
cmc
cmp
sbb
enter
push
push
outsl
pushf
sub
adc
cld
or
aam
pop
fisubrs
or
in
cmp
mov
loope
int3
pushf
and
out
cs
xchg
or
icebp
jl
stos
mov
mov
and
ds
ret
pushf
test
dec
mov
sarb
cld
arpl
push
pushf
adc
das
pop
in
xchg
rcr
add
mov
push
sahf
in
and
mov
sub
imull
inc
scas
out
cld
hlt
tzcnt
cmc
mov
in
jo
jle
lods
push
je
dec
test
pop
mov
or
mov
mov
into
pop
aam
out
sbb
push
xchg
pushf
vmovmskps
pop
jl
mov
and
pop
lods
in
jle
mov
fwait
loopne
outsb
dec
sbb
fs
outsb
scas
mov
mov
xor
cmp
je
mov
dec
sbb
or
int3
sub
jecxz
ror
sbb
xchg
scas
fsubrl
pop
test
dec
jae
enter
movsb
push
ds
in
lods
xchg
pop
mov
ret
and
outsb
jl
lret
mov
jne
mov
cld
pushf
sub
hlt
sbb
dec
add
sahf
or
lds
cmc
cmp
pop
mov
cmp
test
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
mov
mov
imul
int3
pushf
and
out
cs
aaa
dec
cld
or
icebp
jl
stos
mov
mov
mov
jb
int3
pushf
test
dec
mov
shlb
cld
arpl
push
pushf
adc
sub
faddl
mov
push
sahf
in
and
mov
sub
inc
mov
xor
int3
jmp
dec
xchg
mov
mov
jno
sbb
subb
mov
int
mov
and
pop
fwait
mov
jle
sbb
or
imul
pop
jmp
adc
aaa
jns
punpckldq
jmp
jae
add
cwtl
ficomps
dec
bound
loopne
fwait
sub
loopne
cs
add
nop
or
mov
mov
mov
insb
stos
mov
fldt
lret
adc
fs
adc
cmp
loopne
inc
lea
scas
jp
fsubs
cmc
cltd
nop
mov
push
sahf
in
and
mov
sub
sub
je
out
cld
hlt
repz
cmp
imul
sbb
push
je
dec
test
sbb
or
mov
mov
into
pop
aam
in
sbb
push
xchg
pushf
xor
mov
lods
in
jl
mov
fwait
loopne
imul
mov
mov
xor
cmp
insb
adc
mov
fmull
or
enter
fmul
mov
xchg
lods
fsubrl
pop
test
dec
jae
fcompl
cmp
jl
loope
xchg
pop
mov
ret
and
sub
mov
jne
mov
negl
jle
add
pushf
or
lds
cmc
cmp
push
test
cmp
test
dec
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
mov
mov
ret
in
pushf
and
in
cs
aaa
dec
cld
or
icebp
jl
stos
mov
mov
in
xchg
mov
cmp
pop
int3
pushf
test
dec
mov
xchg
fldenv
aam
pop
fisubrs
je
jg
dec
push
or
gs
mov
mov
cmp
sbb
sti
rcll
lret
fwait
mov
cmp
jo
cltd
popa
nop
mov
pop
out
jmp
adc
shlb
shrl
xor
xor
inc
pop
fisubrs
sub
in
cmp
mov
jecxz
pushf
and
in
cs
cmpsl
dec
cld
or
icebp
jl
stos
mov
mov
in
rclb
sti
or
cmpsl
jg
loope
mov
add
cmp
adc
popf
push
insb
movsb
xor
sub
in
lods
xchg
pop
mov
ret
and
sub
mov
jne
mov
repnz
sub
hlt
enter
add
fwait
or
lds
cmc
cmp
incb
adc
dec
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
pushf
sti
in
cmp
mov
lcall
in
cs
pop
dec
cld
or
icebp
jl
stos
mov
mov
in
xchg
mov
cmp
pop
int3
pushf
test
dec
mov
rcrb
lods
cld
arpl
push
pushf
adc
sub
rcr
add
mov
sbb
mov
sub
push
mov
xchg
lods
out
cld
hlt
orl
int3
cmc
mov
in
jo
jo
lods
push
je
std
dec
test
rorl
mov
into
pop
aam
ljmp
lret
push
ss
jl
mov
pop
fwait
pop
lods
in
jp
mov
fwait
loopne
pusha
dec
sbb
fs
insl
scas
mov
mov
xor
xor
insb
adc
mov
fimull
or
shrb
les
int
sbb
and
push
pop
test
dec
jae
sub
push
insb
movsb
loopne
sub
in
lods
xchg
pop
mov
ret
and
sub
mov
jne
mov
out
pushf
sub
hlt
jl
jle
add
cltd
or
lds
cmc
cmp
movsb
jg
cmp
test
lea
push
xchg
imul
cld
or
aam
pop
fisubrs
dec
stc
in
cmp
mov
sti
fmulp
pushf
and
in
cs
dec
cld
or
icebp
jl
stos
mov
scas
pop
in
xchg
mov
cmp
pop
int3
pushf
test
dec
mov
shlb
cld
arpl
push
pushf
adc
sub
rcr
add
mov
sbb
mov
sub
push
popf
mov
dec
lods
out
cld
hlt
xor
mov
in
jo
insl
sbb
push
je
cld
dec
test
mov
or
mov
mov
into
pop
aam
jmp
pushf
bound
mov
and
pop
lods
in
jns
mov
fwait
loopne
pop
dec
sbb
fs
scas
mov
mov
xor
xor
mov
fmuls
or
mov
ror
sbb
aad
fsubrl
pop
test
dec
jae
int3
pushf
push
insb
movsb
nop
cmp
in
lods
xchg
pop
mov
ret
and
sub
jl
or
mov
ljmp
jle
add
cwtl
or
lds
cmc
cmp
mov
test
dec
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
cld
clc
in
cmp
mov
add
in
fsubrs
cmp
cs
xchg
pop
scas
mov
sbb
in
and
inc
cmp
push
stos
inc
jl
out
jno
sbb
test
shl
and
mov
mov
and
fdivrs
add
cwtl
or
lds
cmc
mov
pusha
dec
xchg
mov
pinsrw
fwait
jl
adc
jo
dec
fdivrl
mov
and
or
mov
mov
dec
xor
jne
or
enter
add
es
pushf
push
insb
movsl
sub
sub
hlt
pushf
jl
dec
add
imul
add
or
pop
aam
out
lods
push
xchg
pushf
lds
rcrl
xlat
rorl
les
scas
mov
mov
mov
and
sub
pop
popa
push
mov
cmp
or
loop
int3
pushf
test
dec
mov
inc
dec
xchg
mov
adc
mov
movsb
hlt
int
sbb
push
cmpsl
fsubrl
pop
test
xchg
pop
popa
inc
mov
xchg
cmp
fldt
inc
mov
cwtl
sbb
in
and
mov
cld
gs
sub
inc
or
add
stos
sti
and
adc
popf
pop
test
sbb
test
fwait
jl
adc
jo
dec
fdivrl
mov
and
pop
fndisi(8087
mov
mov
mov
add
or
out
sbb
in
or
sub
dec
nop
mov
or
mov
mov
int3
lret
mov
mov
add
lods
cld
gs
sub
mov
mov
shrb
or
test
fwait
sub
shr
cmp
and
and
adc
popf
pop
nop
pop
adc
mov
sbb
adc
out
pop
sbb
push
ds
js
or
inc
lock
sub
and
dec
insb
xchg
fstpl
rclb
dec
xchg
test
rcll
lret
fwait
mov
cmp
jo
xchg
pushf
stc
inc
lock
sub
push
add
pop
lods
in
clc
insb
mov
mov
pop
dec
sbb
jno
inc
inc
adc
pushf
adc
es
in
xchg
rcr
add
xor
fwait
mov
cmp
stos
jno
fndisi(8087
les
jns
jo
stos
sti
je
sar
in
adc
sbb
adc
xchg
mov
fsubrl
sub
ja
push
lods
fistpl
mov
test
movsb
mov
out
cld
hlt
mov
mov
in
jo
data16
push
je
sti
dec
test
adc
or
mov
mov
mov
ja
movsl
icebp
sbb
pusha
aaa
mov
in
cs
cmpsl
inc
cld
or
icebp
jl
stos
mov
movsl
pop
in
xchg
mov
cmp
or
loop
int3
pushf
test
dec
mov
rcrb
lods
cld
arpl
push
pushf
adc
and
faddl
mov
sbb
lods
cld
gs
sub
jbe
mov
mov
add
cmp
imul
sbb
push
je
sti
dec
test
mov
or
mov
mov
into
pop
aam
in
lods
push
xchg
pushf
vmovmskps
inc
jl
mov
insb
fistpl
in
je
mov
fwait
loopne
push
dec
sbb
fs
scas
mov
mov
xor
and
insb
adc
mov
aam
sbb
or
mov
jl
les
lret
mov
mov
fsubrl
pop
test
dec
jae
adc
push
insb
movsb
jo
sub
in
lods
xchg
pop
mov
ret
and
sub
je
test
jne
mov
loope
sub
hlt
push
es
or
lds
cmc
cmp
pop
jno
cmp
test
and
aad
sbb
dec
shlb
cld
or
aam
pop
fisubrs
fdiv
in
cmp
mov
pop
iret
int3
pushf
and
ljmp
or
icebp
jl
stos
mov
lahf
pop
in
xchg
mov
cmp
or
xchg
push
int3
pushf
test
dec
mov
shlb
cld
arpl
push
pushf
adc
and
in
xchg
rcr
add
mov
sbb
lods
cld
gs
sub
or
sub
out
cld
hlt
ret
add
imul
sbb
push
je
cli
dec
test
adc
mov
mov
into
pop
aam
jecxz
lods
push
xchg
pushf
vmovmskps
cmp
mov
lods
in
jae
mov
fwait
loopne
dec
dec
sbb
addb
mov
shll
or
inc
rolb
adc
and
rcr
add
mov
aam
in
and
mov
cld
gs
sub
loopne
mov
mov
hlt
xor
mov
in
jo
pop
sbb
push
je
cli
dec
test
mov
or
mov
mov
into
pop
aam
jecxz
lods
push
xchg
pushf
cmp
push
in
ficompl
in
jae
mov
fwait
loopne
dec
dec
sbb
fs
lahf
ret
jl
mov
cld
movsl
sub
push
sbb
insb
adc
mov
rorb
or
cmpsl
sub
jecxz
mov
mov
aad
fsubrl
pop
test
dec
jae
nop
lcall
jl
loope
xchg
pop
mov
ret
and
sub
je
cmpb
xor
pushf
sub
adc
out
xchg
and
fs
mov
lods
in
jb
mov
fwait
loopne
inc
dec
sbb
fs
push
mov
mov
xor
fsubrl
adc
mov
dec
sbb
or
mov
pusha
lret
xchg
inc
mov
pop
test
dec
jae
insb
lcall
jl
loope
xchg
pop
mov
ret
and
sub
je
cmpb
xor
pushf
sub
hlt
mov
mov
or
lds
cmc
cmp
adc
test
dec
fcoml
pushf
sub
adc
cld
or
aam
pop
fisubrs
insb
icebp
in
cmp
mov
and
int3
pushf
and
ljmp
or
icebp
jl
stos
mov
lea
rclb
jmp
cmpsb
scas
fwait
sub
hlt
pushf
jp
dec
add
xchg
or
lds
cmc
cmp
xor
add
or
mov
add
out
cld
cltd
popa
nop
mov
test
in
cmp
loopne
xor
pop
sub
cmp
sbb
sti
rcll
lret
fwait
mov
cmp
jo
cltd
popa
nop
mov
scas
in
cmp
fildl
int3
je
jg
dec
jne
lock
fsubrl
xor
aam
fistps
outsw
jne
mov
out
adc
pop
pop
in
aad
add
dec
push
mov
cmp
shll
dec
push
pushf
jl
add
in
cmp
mov
aam
pop
fisubrs
je
mov
cmpsl
movsb
jg
cld
cmpsl
mov
and
mov
cmp
sub
jno
fndisi(8087
fmul
adc
jmp
movsl
or
ret
movsb
mov
loope
xor
cld
mov
add
or
pop
cmp
jo
lods
cld
mov
es
scas
aas
mov
mov
push
pushf
jg
mov
sbb
adc
pushf
ret
add
or
pop
xlat
inc
mov
cmp
or
pop
inc
int3
pushf
scas
inc
cwtl
xchg
dec
xor
cmp
mov
fwait
mov
mov
sbb
sub
sub
push
jo
shll
sti
pop
les
mov
loope
xor
cld
in
test
and
pushf
add
xchg
or
out
sbb
in
icebp
imul
dec
sbb
mov
xchg
pop
jmp
mov
fsubrl
movsb
sub
lods
push
cmp
pop
lods
in
outsl
insb
mov
push
jo
cld
rclb
fsubrs
sbb
sub
into
pop
aam
fistps
push
xchg
pushf
lds
in
sub
mov
xor
pushf
test
dec
mov
inc
mov
cmp
or
mov
int3
pushf
sub
pushf
inc
jmp
mov
leave
fwait
sub
dec
sbb
adc
popa
je
lret
fwait
or
ss
dec
sbb
sbb
popa
hlt
mov
fwait
or
es
dec
sbb
add
mov
loope
mov
vmovapd
hlt
imul
stos
sti
sbb
inc
push
mov
jnp
jmp
stos
dec
hlt
outsb
repz
mov
jne
xor
aam
fwait
sub
rcll
push
cmp
dec
adc
xor
jmp
mov
xor
fwait
mov
leave
mov
xorl
pushf
jl,pn
lods
aam
rcrl
dec
cltd
popa
nop
mov
faddl
dec
sbb
sarb
icebp
leave
fwait
sub
rorl
shll
mov
jl
scas
jmp
dec
sbb
cld
xchg
imul
pop
in
cmp
fbstp
mov
inc
pop
cs
test
lock
sub
inc
add
dec
sbb
rcrb
ja
int3
pushf
xchg
scas
mov
cmp
sbb
cltd
sub
imul
pop
in
movsb
or
ja
int3
aad
cld
or
mov
mov
or
push
aad
enter
testl
mov
leave
shll
push
loope
pushf
sub
add
fistps
sti
and
sub
fidivrl
dec
sbb
or
popa
je
lret
fwait
adc
pop
pop
in
cmpsb
lret
movsl
xor
or
imul
jmp
stos
dec
hlt
ret
mov
mov
leave
shll
and
fs
xorl
push
xor
pop
push
mov
pop
lods
dec
hlt
sub
mov
mov
jmp
mov
cld
in
cs
mov
adc
cmp
icebp
in
pop
imul
iret
fadd
xchg
jp
sbb
dec
or
push
or
in
decb
cmpsl
jg
sbb
popa
pop
dec
xor
dec
fdivrl
mov
xor
mov
in
pusha
insb
mov
mov
cmp
sbb
cltd
sub
imul
pop
in
cmp
test
imul
outsb
jl
inc
sbb
dec
sbb
rcrb
leave
mov
and
ja
pop
aas
cmp
sbb
inc
adc
test
aam
and
stc
sbb
dec
int3
pushf
sub
lods
inc
dec
into
dec
sbb
jno
gs
ror
sub
in
cmp
xchg
mov
mov
mov
sbbl
jnp
sar
xchg
xor
ds
or
cmc
inc
fcompl
jne
pop
sbb
inc
rcrb
pusha
cmp
cld
in
outsb
insb
mov
mov
mov
test
imul
sub
pop
mov
dec
cltd
popa
nop
mov
nop
pop
jmp
mov
aaa
ds
push
mov
sbb
adc
dec
sbb
or
or
mov
sbb
dec
push
pushf
sub
scas
cmp
sbbl
das
imul
pushf
outsb
jl
jmp
adc
mov
shl
cmp
xor
scas
mov
into
pop
aad
push
sbb
data16
mov
jl
cmp
pushf
in
in
mov
fistps
sarl
hlt
xor
mov
leave
mov
cmp
jne
sub
imul
in
out
cmp
add
jg
fdivrl
jnp
pop
popa
cmp
imul
pop
jmp
jb
lods
cld
or
movsb
fildll
or
rorl
test
or
jno
int3
pushf
sub
xchg
in
inc
dec
sbb
mov
test
sarl
sti
jg
shll
cmpsb
mov
mov
mov
sar
and
lods
lods
cld
xchg
popa
pusha
mov
mov
in
jne
adc
ret
and
pop
outsl
leave
push
sbb
fs
insb
pusha
jns
les
aam
jecxz
int3
je
jnp
dec
jne
mov
adc
mov
pop
movb
and
mov
add
cli
push
insb
inc
pop
mov
jnp
xchg
mov
dec
sbb
inc
push
pushf
adc
enter
pop
gs
mov
fldenv
int3
sbb
pop
decl
negb
loopne
add
dec
push
test
mov
jne
jmp
shll
cltd
not
imul
push
jmp
shll
adc
push
insb
movsl
ret
jl
insb
jns
push
jnp
mov
in
mov
xchg
pop
popa
dec
dec
xor
ja
fdiv
inc
mov
sub
push
les
adc
or
pushf
dec
add
push
jmp
dec
rcll
testl
sbb
fsubr
jno
inc
sbb
mov
stc
out
dec
sbb
push
aas
pushf
movsb
pop
mov
sub
mov
rorl
in
xchg
icebp
xchg
fwait
sub
je
mov
jne
mull
leave
jmp
mov
mov
les
imul
in
adc
cs
in
cmp
lcall
push
loope
cmp
lods
cld
or
push
ret
inc
jns
pop
ja
pop
sbb
or
imul
sub
out
cmp
mov
testl
mov
sti
int3
sbb
cld
cltd
popa
push
mov
fwait
or
data16
cmp
cmpsl
and
nop
pop
xor
pop
mov
movsb
dec
sbb
cmp
cwtl
inc
pop
xchg
cmp
mov
out
adc
int3
ja
stos
adc
pop
lods
fs
scas
mov
mov
or
and
xchg
jns
mov
movsb
pop
jmp
add
aaa
ds
jno
shlb
outsb
jl
adc
cmp
cmp
lret
push
and
pop
jmp
cmp
stos
sti
or
jge
sbb
adc
dec
sbb
xchg
push
insb
or
inc
lods
jl
scas
jns
jo
stos
sti
jbe
mov
jl
and
vunpcklpd
lods
sbb
mov
xchg
pushf
test
ds
fdivrl
jl
pop
ja
inc
sbb
mov
adc
sbb
adc
push
pushf
jl
hlt
out
cmp
imul
loope
sub
mov
stos
jo
lds
icebp
movsb
pop
add
pop
lods
sti
cmp
sub
pop
jns
dec
sbb
add
popa
xorb
pop
in
mov
xchg
loopne
lret
fwait
mov
movsb
push
jmp
fldenv
cmc
jno
xchg
sub
inc
dec
lret
das
shlb
jmp
add
dec
sbb
pop
fldt
push
enter
pop
mov
sti
sar
mov
or
sar
or
aam
push
fisubrs
je
imul
cmp
mov
in
cmp
loopne
test
sub
fsubr
jno
inc
sbb
add
jno
cmp
sbb
mov
xlat
imul
pop
daa
call
popf
loopne
dec
fsub
aad
mov
jl
pop
cmp
mov
out
cld
cmc
cmc
jo
int3
push
pop
jnp
mov
jle
push
dec
sub
fldt
mov
pop
jmp
fs
mov
cmp
xor
mov
mov
test
imul
mov
inc
xor
cmp
or
and
lret
fwait
sub
add
rcll
sti
cltd
popa
lock
mov
aad
test
or
push
mov
sub
rcll
insb
cmpsl
sub
xchg
popa
test
nop
pop
jmp
fldenv
cmc
jns
cltd
sub
pop
mov
push
hlt
xchg
mov
adc
movsb
test
mov
jl
jmp
stos
sbb
loop
pushf
sub
push
xorb
sbb
or
and
ja
pop
aas
mov
mov
mov
dec
sbb
mov
or
xchg
nop
insb
dec
in
xchg
xor
sahf
in
and
jbe
imul
pushf
outsb
jl
stc
or
dec
sbb
in
cmc
hlt
outsl
mov
mov
pop
adc
sti
arpl
loope
sbb
into
or
movsl
sti
or
loope
sbb
mov
mov
movsl
dec
adc
fldt
mov
loope
ss
sbb
addb
mov
pop
pusha
push
mov
decl
or
loope
ss
sbb
mov
fwait
mov
rcr
das
shrb
in
insb
mov
xchg
daa
push
movsl
dec
sbb
fldt
andb
jno
pop
ja
pop
xchg
sti
rcll
lret
and
jmp
shrl
dec
ret
fwait
sub
je
js
dec
sbb
sbb
and
cwtl
mov
mov
jmp
dec
xchg
les
lret
and
jmp
fsubl
ljmp
sub
dec
xchg
dec
hlt
les
movsb
adc
sbb
inc
cld
sub
inc
pop
xchg
sub
lods
push
push
mov
fildl
pop
sbb
dec
test
push
fsubrl
and
in
mov
sbb
mov
push
insb
or
lock
mov
cmp
or
pushf
mov
mov
or
or
sub
lcall
rolb
pushf
orb
add
cmp
and
pushf
orb
and
dec
sbb
add
les
or
add
cmp
popa
jo
fldt
mov
mov
mov
inc
xlat
popa
movsb
xchg
fwait
mov
ss
sbb
xorl
pop
push
jbe
pop
jmp
movsl
popa
sbb
fldt
hlt
and
cmpb
imul
iret
mulb
and
lods
cld
mov
es
jmp
xor
fldt
sbb
jp
int3
pop
aas
dec
xor
dec
lock
sub
and
out
xchg
pop
mov
xchg
mov
cmp
sbb
add
mov
sub
mov
push
cmp
lods
ds
or
fwait
sub
jl
fstpt
sbb
jnp
popa
adc
lret
fwait
mov
mov
add
xor
ss
or
stc
inc
hlt
xchg
sub
rorl
xor
ss
or
stc
inc
je
sub
shl
mov
ss
or
stc
inc
hlt
xchg
sub
adc
dec
sbb
in
data16
mov
xor
jmp
mov
fsubrl
movsb
mov
test
imul
cmp
sub
loope
cmp
xor
mov
inc
cld
jecxz
dec
test
fdivrl
mov
leave
roll
sti
or
les
das
lds
xor
adc
cmp
cld
mov
lods
mov
mov
xlat
test
aad
add
jne
xorb
roll
les
xorl
test
mov
pop
push
or
sbb
scas
lret
fwait
jg
sbb
adc
dec
sbb
sti
rcll
lret
repnz
cmpsb
jle
shrl
insb
cmc
imul
fsubl
sbb
and
mov
mov
pop
inc
test
xchg
int3
pushf
sub
add
dec
sbb
mov
bnd
aaa
xlat
in
cmp
shll
sti
or
lahf
jl
cmp
jno
pop
jne
rclb
stos
sti
jmp
jl
and
mov
rcl
stos
sti
pop
in
aaa
int3
pushf
mov
mov
pop
aad
stc
or
testl
adc
sbb
xorl
or
dec
sbb
in
push
insb
mov
mov
cmpsb
pop
insb
xchg
out
fsubrl
aam
add
pushf
dec
cltd
popa
lock
fwait
jg
hlt
sbb
jl
outsl
sti
and
insb
dec
daa
mov
movsl
adc
pop
das
inc
dec
rol
mov
popa
shrb
push
fisubrs
mov
stos
adc
scas
mov
mov
sub
das
adc
xchg
push
insb
dec
push
shrb
mov
push
gs
push
insl
mov
leave
roll
sti
or
loope
sbb
loope
mov
xchg
xor
fndisi(8087
fmul
adc
jo
jle
mov
loope
pop
and
mov
mov
test
mov
je
data16
lahf
jo
cmc
xchg
pop
mov
into
pop
aam
stc
sbb
mov
mov
xor
es
or
xor
mov
sbb
mov
push
fldenv
aam
int
sub
je
data16
lahf
jo
inc
cmp
in
fwait
mov
and
mov
das
adc
adc
dec
insb
xchg
dec
test
insb
adc
mov
leave
sarl
in
mov
xchg
in
cmp
popa
mov
mov
adc
sbb
inc
add
icebp
call
adc
dec
insb
cmp
sbb
faddl
into
pop
jns
jo
stos
sti
je
outsb
mov
add
mov
rcrl
pop
mov
js
xor
push
fldt
adc
cmp
cld
fs
cmp
sub
xlat
test
aad
add
jne
xorb
roll
les
sbb
xorl
test
hlt
mov
pop
dec
mov
mov
outsl
aam
cmp
scas
imul
pop
cs
mov
loopne
mov
xchg
rcrb
xor
dec
sbb
push
pop
sub
loope
pushf
sub
add
xchg
movsl
popa
inc
add
imul
and
ret
les
stos
sti
hlt
repnz
and
mov
xor
imul
aad
jo
loopne
push
dec
sbb
jno
fndisi(8087
mov
lahf
mov
mov
fcoml
nop
sbb
faddl
mov
mov
rcr
scas
inc
dec
xor
cld
dec
fdiv
jl
and
mov
dec
mov
xor
or
push
cltd
inc
pushf
sub
in
lock
dec
sbb
fs
arpl
jl
pop
popa
pop
mov
sbb
or
mov
int3
pushf
mov
cwtl
mov
cld
movsl
sub
bound
shlb
jnp
lods
push
inc
dec
sbb
sti
and
insb
dec
add
jl
pop
jns
pop
adc
sti
or
or
mov
mov
jno
inc
sbb
mov
rclb
pushf
test
imul
outsb
jl
inc
push
mov
sbb
addb
mov
pop
mov
pusha
push
stos
sti
or
cmp
pop
pusha
push
mov
decl
add
int3
pop
lock
sbb
mov
fwait
mov
rcr
cmp
lahf
jo
xor
pushf
sub
adc
sbb
mov
fwait
cmp
adc
cmp
sub
lret
fwait
loope
mov
leave
shrl
dec
ret
fwait
sub
je
jno
dec
cmpsl
icebp
clc
or
inc
push
enter
out
xor
mov
stc
inc
lock
sub
push
xchg
mov
pop
and
mov
push
pushf
add
inc
or
out
xor
mov
xchg
leave
xchg
or
mov
out
jl
push
mov
cmp
outsl
stos
adc
fsubrl
jbe
pop
push
add
inc
lahf
cmc
cmp
add
out
cld
pop
imul
in
loop
cmp
add
jb
fsubr
sbb
push
out
pop
add
lods
xor
lret
adc
lahf
jmp
stos
fs
bound
repnz
test
or
out
mov
cmp
test
or
andl
in
cmp
rcrl
or
aam
arpl
sub
sbb
in
cmp
mov
daa
mov
flds
sbb
xor
test
decl
test
xor
fwait
sub
int3
jmp
dec
sbb
or
imul
outsb
jl
inc
mov
dec
sbb
xorl
fwait
sub
mov
add
orb
xor
test
add
jp
fndisi(8087
aam
push
scas
jl
lds
pop
fildl
in
loop
cmp
cli
and
or
call
pop
pop
jmp
add
push
push
pushf
adc
or
faddl
mov
fwait
loopne
push
dec
sbb
jns
xor
rolb
push
addr16
movsb
nop
sbb
cld
rorl
xorl
movntps
add
cmp
sbb
or
imul
sub
fdivs
dec
insb
xchg
or
push
shrb
mov
jmp
dec
sbb
sti
and
sub
sbb
adc
dec
sbb
xchg
push
insb
or
xchg
pusha
dec
sbb
mov
je
outsb
cmp
lahf
jo
xchg
pushf
jnp
and
sub
mov
add
out
lods
cld
mov
adc
mov
adc
mov
in
push
insb
mov
jmp
and
leave
fwait
sub
pop
cmp
add
loope
mov
ret
fbstp
cld
or
leave
mov
and
xchg
mov
sbb
lock
xor
mov
dec
inc
dec
rorb
ret
cld
or
aam
push
fisubrs
add
in
loope
stos
push
je
repnz
test
pop
jmp
mov
nop
add
int3
test
cld
mov
or
mov
mov
test
cs
xchg
mov
mov
jnp
in
cmp
fcoml
fsubr
sub
dec
shl
je
fldt
inc
mov
in
cmp
sub
mov
outsb
jl
sahf
pusha
cmp
cltd
add
movsl
sbb
stos
mov
mov
xor
and
push
mov
xchg
adc
in
into
in
adc
or
lahf
jo
inc
iret
jnp
add
sub
loop
jno
dec
sbb
mov
mov
roll
sti
or
mov
icebp
cwtl
inc
adc
dec
sbb
sti
xor
sub
rcl
jmp
iret
loopne
in
repnz
mov
adc
cmp
sbb
adc
xchg
fistpll
or
dec
pop
icebp
lock
dec
adc
cs
je
insl
cmp
cmpsl
pushf
jg
in
cmpsl
scas
repnz
mov
mov
push
js
cltd
xor
jnp
pop
popa
push
mov
xor
or
pop
das
lret
fwait
scas
inc
lods
inc
mov
sbb
pop
add
lock
jl
mov
add
jl
fadd
testl
sbb
adc
fidivrs
sbb
adc
dec
sbb
xchg
push
insb
or
ja
jl
inc
or
and
loope
mov
lods
jl
mov
cld
movsl
sub
dec
and
insb
inc
adc
jnp
pop
daa
das
rclb
push
dec
pushf
sub
jl
daa
das
movsl
test
imul
repnz
add
cmp
sbb
or
imul
sub
fdivs
dec
insb
xchg
jge
fsubrl
shrb
mov
jmp
dec
sbb
sti
and
sub
sbb
adc
dec
sbb
inc
push
pushf
jl
in
in
cmp
loopne
sti
push
or
into
pushf
sub
enter
pushf
add
outsb
or
lds
mov
stos
sti
or
mov
mov
aam
mov
jg
call
sub
pop
popa
dec
xor
aas
sti
or
loope
pop
and
mov
pusha
rcrl
fs
insb
mov
mov
jo
movsl
std
or
aam
pop
fisubrs
add
rcrl
xchg
mov
mov
mov
fisubrl
sbb
or
pop
outsl
add
xlat
or
loopne
fwait
sub
pop
cmp
add
loope
mov
mov
shll
sti
bound
repnz
pushf
sub
push
jl
cld
shr
in
pop
insb
mov
adc
mov
dec
fdivrl
mov
and
or
and
and
jne
call
lock
ror
pushf
sub
movsb
pop
popa
xor
sub
or
pop
adc
adc
add
test
dec
dec
fadd
movsb
loopne
sub
loop
rclb
das
rcrb
sub
push
shrb
mov
rep
or
ret
and
jne
in
cmp
push
or
sbb
ror
pushf
sub
movsb
pop
popa
xor
sub
or
cmpsl
jg
stos
mov
mov
ja
sti
or
adc
mov
inc
mov
xor
or
jno
inc
and
faddl
dec
sbb
push
cmc
push
or
lock
dec
sbb
adc
les
xor
shr
cmp
jo
inc
iret
loopne
sbb
cmp
fsubrl
test
sti
sbb
cmpb
sbb
mov
mov
pop
sbb
adc
popa
cld
mov
fwait
mov
test
jno
dec
sbb
inc
call
loope
cmp
adc
nop
push
insb
or
negl
jo
stos
sti
jbe
mov
jl
and
test
lods
sbb
mov
xchg
pushf
test
dec
fdivrl
jl
pop
ja
pusha
sbb
mov
adc
sbb
xor
icebp
and
loopne
cmp
mov
mov
jl
and
leave
roll
sti
or
add
fwait
sub
jne
cmp
xchg
sti
and
dec
aad
pushf
mov
mov
pop
mov
xchg
loopne
lret
fwait
sub
cwtl
pop
popa
push
xor
stc
cld
or
loope
xor
mov
mov
dec
sbb
es
mov
xchg
pushf
add
addr16
imul
sub
movsb
adc
cld
pop
cli
sub
pushf
mov
cwtl
in
lods
inc
sbb
mov
sbb
jmp
mov
lods
cld
or
push
cld
cmp
sub
rcrl
shll
xchg
and
mov
jno
dec
sbb
mov
fwait
jl
adc
pushf
jg
fdivrl
fucomip
jno
dec
sbb
bound
pushf
sub
push
pushf
jne
pusha
sbb
or
and
mov
std
cmp
das
mov
mov
dec
sbb
mov
or
sub
cmp
aam
pop
jnp
mov
jle
push
dec
sbb
fldt
mov
pop
jmp
fs
cld
or
adc
jnp
je
adc
pop
lods
out
inc
dec
inc
push
pushf
adc
cs
jmp
fldenv
aam
into
pushf
sub
je
pop
cmp
lahf
jo
cmc
test
mov
cmp
insb
xchg
jge
fldt
ret
aad
roll
adc
imul
add
dec
pop
xlat
inc
mov
das
ds
push
sub
pushf
sub
push
push
xor
add
imul
and
mov
mov
insb
stos
mov
fldt
lret
adc
fs
jmp
iret
loopne
in
shrl
pop
out
sub
movsb
pop
popa
cmp
cli
and
andps
cmp
xor
push
je
out
dec
test
mov
iret
pop
lods
in
in
insb
mov
mov
mov
sbb
hlt
or
les
xchg
jle
mov
stos
adc
scas
mov
mov
sti
or
push
pushf
jl
fs
in
cmp
dec
stos
sti
or
imul
sbb
pop
pusha
dec
xlat
pop
mov
mov
mov
ds
icebp
loopne
fwait
sub
push
jmp
mov
stos
jno
fndisi(8087
fdivs
popa
push
fldenv
aam
dec
fisubrs
je
pop
cmp
lahf
jo
cmc
dec
jl
int3
push
xor
fistps
push
mov
sti
ds
imul
pop
outsl
jl
roll
or
mov
aam
scas
mov
mov
xchg
mov
sbb
insb
inc
adc
stos
mov
mov
dec
fisubrs
dec
xchg
les
scas
mov
mov
lret
sbb
pop
stos
xchg
les
mov
and
push
outsb
jl
cmp
xor
fldt
cmp
pop
call
dec
sbb
xchg
fwait
sub
je
data16
insb
xchg
xchg
inc
fsubrl
and
rcrl
loope
cmp
and
je
out
dec
xchg
in
cmp
add
push
fcom
mov
aas
leave
roll
sti
or
loope
sbb
loope
mov
cmp
sub
nop
mov
add
add
push
dec
lcall
dec
sbb
pop
add
lock
sub
add
inc
add
jbe
fdiv
lods
and
loopne
dec
dec
sbb
fs
or
mov
aas
jmp
test
fcoml
lret
adc
loope
cmp
xchg
mov
mov
inc
cmp
pop
stos
mov
push
imul
enter
sbb
or
push
stc
mov
hlt
hlt
insl
jle
add
imul
add
adc
pop
jmp
pop
add
mov
fldt
in
movsb
std
into
pop
aam
mov
lock
xor
inc
shr
cmp
xor
fldt
dec
pushf
sub
faddl
dec
sbb
inc
sbb
push
pushf
mov
in
jmp
xlat
popa
test
push
mov
jno
sbb
adc
dec
sbb
push
fsubrl
sbb
shll
sti
jbe
mov
jl
and
lds
sub
inc
and
sub
lods
push
in
scas
pop
lods
dec
pop
fildl
pop
fnstcw
push
add
inc
lahf
cmc
cmp
add
push
add
cld
pop
inc
mov
jle
jmp
jle
shrl
insb
cmc
sub
cmp
mov
pop
push
insb
mov
movsb
jmp
stos
fs
scas
mov
mov
xor
addr16
cmp
sub
pusha
in
cmp
push
outsl
jo
sub
inc
pusha
xchg
sub
lods
aam
mov
lods
jg
call
shlb
inc
mov
push
insb
inc
adc
jnp
pop
daa
das
shll
mov
insb
adc
les
inc
mov
pop
cld
or
nop
sub
pushf
xchg
sti
mov
pusha
cmp
xor
mov
sub
in
dec
movsl
xor
inc
and
dec
lds
xchg
cmc
inc
hlt
xchg
sub
mov
cmpsb
sti
or
push
les
xorb
sbb
mov
fwait
loope
test
movsb
adc
es
pushf
jg
adc
mov
hlt
mov
mov
adc
sbb
inc
cld
sub
inc
pop
xchg
sub
lods
push
xchg
fildl
pop
sbb
in
dec
test
push
fsubrl
and
in
mov
sbb
mov
push
insb
or
sub
mov
dec
sbb
cs
pushf
mov
mov
or
lock
insb
inc
mov
pushf
jnp
pop
daa
aaa
shlb
in
push
insb
mov
xchg
mov
clc
ret
sbb
push
mul
or
pop
inc
xchg
pusha
cmp
xor
mov
js
jmp
pop
mov
aaa
jmp
mov
popf
jmp
stos
push
pop
les
and
ja
jns
adcb
sti
je
insl
mov
lock
cs
outsl
cmp
pop
in
mov
cmp
out
and
mov
jg
jmp
xor
adc
shrl
popa
push
fldenv
mov
jl
in
inc
das
bts
or
mov
cwtl
jmp
stos
test
xor
mov
mov
push
xchg
dec
cwtl
scas
inc
cwtl
in
xor
sbb
mov
sbbb
dec
rcll
mov
sub
lods
jns
jo
stos
sti
je
in
dec
in
adc
hlt
pop
in
fldenv
mov
mov
insb
movsl
xor
add
imul
jl
adc
fs
cld
lods
mov
mov
xlat
test
aad
add
jne
xorb
roll
les
mov
xorl
test
in
pop
outsl
add
or
sbb
stos
lret
fwait
jg
adc
cld
sti
rcll
lret
repnz
cmpsb
jle
shrl
insb
cmc
imul
push
mov
jecxz
sbb
gs
jne
mov
mov
inc
in
dec
sbb
or
icebp
aam
fwait
sub
adc
out
and
sub
jmp
stos
dec
sub
lods
xor
sub
inc
xchg
cmp
das
rcrb
pop
xor
pop
adc
shll
mov
push
in
cmp
shll
sti
or
stc
inc
and
sub
fsubr
cmp
insb
xchg
mov
fsubrl
xchg
mov
cwtl
out
cmp
loopne
test
sub
mov
roll
hlt
or
imul
sub
sbb
dec
sbb
in
mov
and
pop
jmp
mov
sub
or
push
pop
xor
cmp
push
add
icebp
int3
pushf
scas
inc
lods
in
pop
inc
sbb
dec
push
lock
mov
in
cld
pop
das
imul
pushf
outsb
jl
jmp
adc
mov
shl
cmp
xor
scas
mov
into
pop
aad
dec
sbb
in
int3
fisubrs
dec
nop
pushf
in
fisubrl
push
push
popa
in
mov
ja
nop
mov
hlt
shl
mov
xchg
inc
fdivl
sbb
mov
pushf
sub
mov
call
sti
or
loope
mov
cmpl
inc
dec
sbb
int3
xchg
insb
testl
inc
test
and
sbb
ja
push
movsb
lret
pop
lods
out
inc
lods
cmp
pushf
mov
cmp
xor
mov
mov
mov
mov
test
jnp
mov
je
push
cmp
add
aam
dec
fisubrs
jne
dec
xor
ss
sti
sbb
sub
inc
shr
cmp
and
hlt
cld
hlt
mov
fistps
cmp
inc
sti
or
jno
fwait
sub
sar
and
movsb
stos
sti
je
ljmp
pop
push
inc
xor
loop
or
sub
dec
mov
in
daa
insl
sbb
or
imul
pop
in
xchg
iret
adc
push
and
sub
xchg
les
mov
xorl
test
mov
xor
fndisi(8087
mov
adc
jnp
shr
cmp
and
hlt
add
mov
mov
orl
jnp
pop
jmp
pop
add
jne
fistl
into
pushf
sub
pop
pop
jmp
cwtl
sbb
cld
aas
scas
and
jae
out
jno
sbb
add
adc
cmp
jne
hlt
xchg
and
push
lods
int
pop
jecxz
xchg
pop
add
push
ret
xor
xor
lods
dec
cltd
popa
nop
mov
or
adc
or
stc
inc
lock
sub
shr
mov
and
or
imul
test
add
sbb
and
fwait
scas
inc
mov
into
inc
dec
sbb
push
hlt
out
mov
or
cli
lret
bswap
adc
in
fisubrl
cmp
shll
sti
or
imul
test
add
add
imul
sub
loope
xor
adc
or
insb
or
jp
jl
out
dec
xlat
shl
insb
or
imul
and
out
cmp
mov
testl
dec
jne
rclb
stos
sti
xchg
jns
mov
fwait
mov
mov
jge
insb
adc
xchg
and
inc
sbb
dec
push
shrb
mov
add
mov
sub
cmpsb
data16
xchg
push
fsubrl
mov
add
jmp
fldenv
dec
cltd
popa
pusha
mov
fwait
jg
hlt
inc
cmpb
sti
and
insb
dec
daa
mov
movsl
adc
pop
das
inc
dec
rol
mov
popa
shrb
lock
sub
cmp
dec
insb
xchg
dec
jo
insb
aas
nop
test
icebp
addr16
jmp
jle
shrl
insb
cmc
imul
and
inc
cmp
out
sub
mov
mov
mov
mov
fldt
lret
adc
fs
loope
cmp
loopne
sti
sub
outsl
jl
jno
mov
sbb
lods
movsl
fldt
lret
mov
jl
pop
aas
leave
roll
sti
or
loope
lret
adc
int3
je
sbb
jne
dec
or
sub
cwtl
inc
arpl
dec
sbb
mov
insb
cmpsl
stc
out
mov
cmp
test
sub
adc
mov
sub
sti
rcll
lret
fwait
mov
cmp
inc
jns
fcoml
fwait
sub
push
je
pop
push
sbb
sti
adc
loope
mov
cmp
sub
nop
lods
adc
jne
adc
mov
shlb
cmp
lahf
jo
xor
rolb
pcmpeqw
push
pop
inc
xor
push
pushf
mov
cmp
push
int3
xor
icebp
rcrb
sti
cltd
popa
cmpb
pop
in
mov
paddb
mov
xor
test
dec
dec
sbb
inc
in
sub
mov
test
loopne
fwait
sub
je
dec
cmp
outsl
cmp
ss
fs
mov
cmp
loopne
test
sub
fsubr
jno
dec
sbb
or
jg
mov
cmp
sbb
mov
fldcw
xor
pop
daa
call
popf
loopne
dec
fsub
aad
mov
jl
pop
cmp
cwtl
cltd
out
cld
cmc
xorb
push
pop
jnp
mov
jle
push
dec
sbb
fldt
mov
pop
jmp
dec
sbb
or
imul
pop
jmp
test
into
mov
jne
icebp
cmp
sbb
or
imul
es
les
sbb
in
aas
insb
mov
inc
xchg
pop
cmp
xor
mov
adc
icebp
hlt
mov
mov
xchg
mov
test
jns
fadd
movsb
jo
sub
xorl
movsl
pop
add
mov
sub
and
fldt
in
outsb
jl
inc
loop
dec
sbb
mov
push
inc
int3
je
sbb
lahf
jo
xchg
popa
nop
mov
fwait
mov
shr
stos
sti
pop
sub
js
fistps
cmp
xchg
add
in
ja
movsl
sub
xor
fwait
inc
xor
sar
or
aam
dec
fisubrs
je
dec
cmp
lahf
jo
cmc
mov
pop
jnp
mov
jle
push
dec
xor
fldt
mov
pop
push
test
add
lret
add
clc
into
pop
cmp
mov
lods
cld
pop
imul
jnp
pop
cmp
add
loope
mov
scas
jnp
fbstp
cld
or
mov
and
xor
or
imul
outsb
jl
inc
adc
xchg
add
lret
fwait
mov
mov
sbb
push
fwait
sub
push
adc
dec
sbb
xchg
adc
mov
add
fstl
push
pusha
movsb
mov
xchg
scas
xchg
sarb
movsb
pop
scas
mov
mov
loopne
out
inc
hlt
cmp
pushf
sub
cwtl
inc
or
push
jbe
les
mov
call
sti
or
loope
mov
push
jl
inc
inc
movsb
mov
push
js
ret
sbb
push
pop
or
out
sbb
hlt
jnp
mov
in
js
fsubrl
fadds
fs
xlat
cmp
mov
dec
inc
adc
dec
sbb
xor
fwait
sub
push
lods
jg
call
sub
inc
xchg
pop
cmp
push
push
je
call
clc
into
pop
xlat
dec
dec
shl
insb
or
imul
add
clc
into
pop
push
xor
pop
lods
sti
adc
loope
mov
cmp
sub
nop
mov
jmp
or
sti
or
cmpsl
mov
mov
fs
leave
in
cmp
faddl
cmpb
sub
ja
lea
lods
xchg
adc
mov
test
jmp
xchg
and
bound
enter
out
lods
aam
lods
sbb
jg
call
adc
inc
fldenv
mov
mov
sbb
mov
adc
hlt
je
insb
mov
xchg
leave
shrl
cmc
jno
xchg
sub
cmpsb
dec
cmp
lahf
jo
or
andb
cmp
fldcw
xor
cmpsl
mov
stos
sbb
dec
cltd
popa
nop
mov
faddl
dec
sbb
shrb
icebp
fadd
fwait
sub
rorl
shll
and
int3
insl
jl
scas
jmp
dec
sbb
cld
xchg
imul
xchg
xor
mov
inc
pop
cs
test
dec
fcoml
rcrb
insb
dec
pop
lods
xor
lret
adc
mov
fcoml
pushf
sub
adc
andb
sub
in
mov
int3
xor
test
mov
cmp
sbb
mov
fldt
pop
and
mov
mov
hlt
dec
lret
mov
mov
jne
cwtl
mov
mov
fwait
sub
rcrl
ror
stos
sti
xchg
and
and
jnp
adc
mov
sbb
add
pusha
out
int3
in
xchg
call
roll
sti
or
int3
pushf
jl
mov
in
cmp
test
imul
in
adc
mov
in
mov
test
imul
loope
xor
decl
outsb
std
int3
out
jg
mov
cmpsl
cmp
imul
xchg
scas
inc
aas
or
test
mov
in
shrl
into
sub
test
loopne
mov
adc
les
mov
pop
xchg
insb
dec
push
shrb
mov
jg
call
dec
iret
sbb
adc
dec
sbb
jno
fwait
sub
sar
and
fwait
stos
sti
mov
adc
movl
fs
in
cmp
filds
mov
lods
out
std
sub
adc
xor
sub
fsubr
jno
dec
sbb
mov
mov
aaa
jb
fs
push
scas
mov
pushf
xlat
cs
push
aaa
jns
punpckldq
mov
lods
push
xchg
pushf
lds
lods
inc
or
in
cmp
sbb
inc
adc
inc
fldenv
mov
jl
loope
cmp
cld
in
cmp
pusha
cmp
mov
imul
jnp
pop
cmp
add
loope
mov
stos
jnp
fbstp
sti
or
and
fwait
sub
inc
repz
ja
cld
or
icebp
jl
adc
cmp
sbb
fs
insb
mov
mov
cld
test
jnp
mov
mov
cmp
in
imul
movsb
insl
scas
sub
sbb
and
dec
sbb
fs
je
mov
outsl
fldpi
cmp
mov
mov
jl
mov
jo
xchg
and
jnp
adc
lods
dec
sbb
aam
and
mov
fsts
ja
lret
fwait
xchg
or
sahf
in
cmp
mov
xor
pushf
mov
hlt
dec
or
in
push
insb
mov
mov
sti
xor
fwait
mov
dec
sbb
shrb
xor
sub
xchg
pushf
test
imul
cmpsb
mov
xor
sub
or
call
hlt
hlt
data16
sbb
or
push
jmp
in
cs
mov
mov
jl
and
xchg
cmp
jnp
pop
pop
jle
add
sub
lds
cmc
mov
inc
iret
cltd
fadds
jle
stc
inc
clc
fwait
sub
lods
jns
js
stos
sti
pop
inc
mov
push
pushf
sub
cwtl
inc
int
dec
sbb
cmpl
add
test
jmp
pop
add
js
fcmovnb
adc
cmpsb
mov
leave
cmp
repnz
sti
loope
lret
adc
lret
cs
notl
cld
or
icebp
jl
adc
cmp
sbb
cli
addps
lds
jnp
inc
repz
sarl
adc
imul
jmp
cmp
lahf
jo
inc
cmp
out
sub
mov
lock
sbb
mov
fldt
lret
adc
fs
loopne
mov
in
xchg
fs
ja
sti
gs
sub
je
adc
pop
lods
sti
sub
sub
pop
lret
cs
xchg
les
scas
mov
scas
fsubr
cmp
sar
in
aam
fisubrs
add
dec
enter
rorb
cmc
stc
pusha
fs
jne
sahf
cmp
aaa
call
int3
pushf
mov
xchg
mov
cmpsb
xchg
jne
in
cltd
cltd
sbb
lret
fwait
xchg
mov
dec
add
cmp
cld
or
insb
mov
sbb
out
or
out
sbb
repz
cmp
fsubrs
mov
negb
lds
gs
clc
iret
pop
outsl
xor
movsl
icebp
add
pusha
outsb
mov
dec
in
movsl
adc
inc
insl
ror
or
fstpl
rorl
push
scas
mov
fcompl
inc
dec
xor
dec
fdiv
jl
and
jl
pop
push
inc
dec
xchg
mov
and
mov
pop
in
cmp
test
mov
sbb
mov
mov
fldt
mov
jecxz
pop
popa
cld
aad
pusha
cli
or
cmc
xor
add
lods
dec
cltd
popa
sbb
lret
fwait
xchg
push
and
in
mov
add
inc
jl
sub
imul
inc
lods
cld
xchg
and
and
mov
cmp
iret
loopne
test
jno
fsubr
jno
dec
sbb
scas
or
adc
jno
cmp
sbb
dec
rolb
lock
pushf
sub
push
in
jo
pop
lods
jno
fildl
int3
hlt
clc
test
add
push
or
lds
mov
cmp
sbb
jno
push
pop
movsl
adc
hlt
xchg
dec
xor
js
fsubrl
aam
inc
test
lahf
in
cmp
fcoml
and
in
fwait
stos
jno
call
int3
test
adcl
lods
and
pop
jmp
icebp
cmpsl
or
aas
movsl
lods
es
xchg
jle
in
cmp
or
adc
jl
jmp
dec
sbb
aad
pushf
sub
pushf
jmp
xchg
test
insb
aas
nop
test
inc
roll
dec
xchg
jo
and
int3
add
add
stos
dec
or
inc
aaa
setl
xor
sub
adc
fwait
inc
xchg
or
scas
mov
rcrb
rolb
lahf
in
ja
sub
mov
or
xchg
mov
pop
ja
aad
cwtl
mov
mov
test
sub
cltd
or
insb
lret
and
jnp
sub
sub
stos
jno
fildl
int3
sbb
test
dec
sbb
movsl
push
insb
or
movl
jbe
mov
jl
aaa
and
dec
sbb
inc
faddl
lock
pushf
sub
fldcw
jns
js
out
cld
xchg
fs
push
setl
inc
aas
or
mov
sbb
mov
mov
xchg
pushf
test
dec
fadd
adc
mov
jl
pop
ja
sbb
jne
push
fsubrl
and
in
mov
sbb
mov
push
insb
or
mov
jno
dec
sbb
and
mov
push
and
call
test
sbb
jno
les
rorl
sbb
pop
addr16
sahf
mov
mov
addr16
sbb
insb
mulps
call
mov
cld
or
xor
pop
and
push
pushf
sbb
sti
and
cli
and
cwtl
sti
or
xor
fwait
inc
pusha
pop
lahf
in
mov
cmc
push
imul
test
cmp
add
push
or
testl
mov
sub
flds
push
adc
inc
or
in
cmp
sbb
lock
pushf
sub
mov
mov
fldt
int3
in
adc
ficomps
adc
cmp
ss
or
adc
sbb
adc
stos
xchg
negb
shl
lcall
xor
mov
mov
sbb
hlt
or
mov
mov
push
or
sub
negb
xchg
sbb
cld
imul
pop
xchg
loope
rclb
xchg
and
mov
hlt
or
or
jb
and
mov
and
pop
fildl
push
push
jmp
dec
insb
stos
shrb
roll
sub
xchg
inc
lcall
fdivr
or
push
sub
fcompl
inc
dec
push
push
les
imul
pushf
outsb
jl
sbb
inc
xor
stos
sti
or
sub
iret
in
mov
cmp
insb
and
mov
clc
and
jle
cld
gs
sub
inc
ret
xchg
dec
xchg
pop
in
cmp
lods
ds
loope
pop
and
mov
mov
test
fdivrl
mov
daa
arpl
and
popa
insb
mov
loopne
in
mov
add
or
xor
pop
and
mov
cmp
add
push
or
lds
and
mov
cmp
and
adc
push
scas
mov
je
jmp
dec
dec
insb
imull
mov
mov
fcompl
rorl
sti
arpl
add
push
add
pusha
mov
mov
stos
adc
add
pop
in
cmp
cltd
test
aaa
imul
cmp
lods
ds
sub
fstps
in
cmp
mov
lret
mov
jl
pop
xlat
fnstcw
in
or
cmp
mov
divb
or
inc
inc
cwtl
orb
push
jmp
in
sub
mov
rcll
mov
test
xchg
shrb
lret
in
sub
dec
xor
cld
dec
fdiv
jl
or
cmp
mov
mov
sub
fbstp
sti
or
in
cmc
cs
sbb
and
lcall
jg
lods
cld
mov
inc
les
stos
sti
je
add
mov
and
cmp
jne
sti
or
loope
mov
push
jl
fbstp
inc
or
insb
and
xor
and
popa
lods
in
fisubrl
lret
adc
jae
in
cmp
loopne
push
or
mov
push
pushf
addl
dec
sbb
dec
bound
push
addr16
fwait
sub
dec
sbb
mov
add
cs
sbb
dec
mov
insb
inc
mov
in
leave
xchg
add
cmp
roll
pushf
aas
pop
mov
sub
adc
add
rcll
pushf
sub
sbb
icebp
hlt
pop
imul
mov
dec
shrb
push
das
shl
les
rcrl
mov
jae
jnp
jl
jle
mov
jl
adc
int3
je
cmp
xchg
mov
lret
adc
in
adc
fistpl
xchg
sbb
shlb
add
sbb
clc
or
loope
int3
loop
inc
mov
fadd
dec
push
and
jnp
scas
cmp
xchg
aam
std
or
rolb
pop
sub
rcr
and
movsb
imul
shr
mov
or
inc
inc
adc
add
sbb
inc
add
adc
adc
add
sbb
rcll
test
pop
push
mov
and
neg
mov
jl
arpl
cmp
jne
push
jbe
aam
data16
std
jl
cmp
adc
dec
call
pushf
sub
push
push
out
cld
cltd
sub
sbbb
or
insb
notl
lahf
in
mov
sbb
mov
push
insb
or
and
out
lods
dec
hlt
mov
add
pop
jmp
xor
sti
or
int3
lcall
out
scas
xchg
xlat
or
mov
loop
push
mov
testl
mov
sub
fs
xchg
lds
mov
iret
sub
push
or
sbb
jns
addr16
imul
stos
mov
mov
jp
pop
inc
mov
pop
insb
inc
mov
inc
jnp
pop
add
pop
lods
sti
and
sub
jecxz
add
and
nopl
addr16
test
mov
jge
pop
jns
add
push
adc
adc
dec
xchg
dec
or
push
add
push
cmpb
jecxz
clc
sbb
insb
mov
fcompl
cmp
daa
aas
or
sub
out
fwait
inc
mov
lahf
in
mov
jmp
icebp
xchg
inc
and
sbb
rcrb
imul
pushf
outsb
jl
pop
jns
xor
mov
or
shlb
pushf
addr16
add
xor
rcrl
insb
or
and
pop
cmp
shrb
imul
imul
and
pop
cmp
js
lods
cld
gs
dec
mov
popa
add
aas
or
test
icebp
aad
popa
and
mov
mov
jnp
lods
jns
and
or
insb
aas
nop
lods
mov
add
xchg
dec
fsubrl
lret
mov
test
xor
js
fsubrl
aam
lds
dec
xor
cld
dec
fdivr
inc
sbb
sub
jmp
js
dec
fcoml
fwait
sub
fs
pop
sbb
jg
in
icebp
jl
mov
cs
test
dec
fcoml
fwait
sub
fs
insl
sbb
jg
call
sub
mov
jno
dec
sbb
or
sbb
mov
dec
sbb
pushf
scas
inc
pushf
mov
push
xchg
sbb
cld
popa
addr16
adc
cmp
mov
xor
sbb
imul
pop
outsl
jl
push
in
mov
cmpsb
icebp
or
mov
pop
jg
in
pop
imul
jmp
movsl
dec
insb
out
fneni(8087
loopne
fwait
mov
cwtl
dec
sbb
or
adc
mov
adc
inc
ds
imul
lods
jg
in
mov
mov
out
inc
mov
addr16
dec
mov
xchg
outsl
dec
arpl
mov
mov
movsb
dec
push
lods
cld
or
mov
setl
and
pushf
test
fcoml
fwait
sub
adc
mov
shr
ret
mov
mov
lods
sti
and
icebp
mov
add
dec
pop
lods
dec
je
or
int3
test
xchg
dec
xor
xor
pop
inc
xchg
dec
xor
cld
dec
fdivrl
pop
loop
aam
xchg
sbb
jg
call
jl,pn
rcrl
or
jb
ss
xchg
add
xor
rcll
pop
insb
inc
movsb
pop
daa
jnp
loopne
cmp
rolb
mov
jl,pn
in
push
push
mov
lock
mov
aam
lret
fwait
stos
iret
mov
mov
sbb
mov
int3
pushf
xchg
mov
sahf
in
add
fdiv
xor
and
cmp
dec
jne
jns
imul
mov
popa
js
pop
fildl
pop
test
jmp
pop
mov
imul
sub
fadd
hlt
movsb
dec
sbb
inc
fildll
test
add
icebp
lret
and
fs
add
push
insb
cwtl
out
cld
pop
imul
in
imull
cmp
add
dec
or
stc
inc
mov
inc
fisttpll
xchg
enter
push
xor
je
or
movsl
icebp
mov
pushf
mov
leave
inc
fbstp
xchg
dec
fdivr
add
pop
jmp
mov
sbb
dec
adc
cmp
sbb
dec
les
lock
pushf
sub
push
in
jo
pop
lods
jno
fildl
int3
hlt
sbb
dec
or
lds
mov
cmp
sbb
jno
push
pop
movsl
in
sub
fxtract
cmp
daa
aas
or
stc
inc
mov
in
jle
insb
xchg
std
pop
fsubrl
test
icebp
push
rorl
fldenv
imul
in
mov
cmp
imul
add
rorl
cmpsl
sti
or
in
fwait
sub
jecxz
add
pop
lods
dec
or
cwtl
cmp
pushf
sub
dec
xchg
pusha
in
cli
insb
mov
aam
cs
dec
insb
xor
pusha
pop
out
shl
pop
add
hlt
movsb
les
pop
pop
push
add
rcrl
dec
sarb
icebp
cmp
mov
shlb
es
pop
in
outsl
inc
lahf
jo
inc
adc
mov
dec
xchg
push
and
push
into
pop
push
pop
mov
fsubr
and
addr16
lret
cs
divb
ret
imul
adc
fwait
inc
enter
mov
add
or
call
mov
mov
add
or
mov
mov
jns
mov
in
dec
dec
scas
mov
in
in
cmpsb
push
mov
repz
jne
jl
js
and
imul
into
pop
push
pop
iret
das
ret
mov
jl
pop
cmp
dec
jae
cld
les
int3
pushf
xchg
jg
mov
add
imull
into
pop
jno
lret
loopne
fsubrl
xor
scas
popf
aam
lret
inc
inc
cmpsb
dec
rorb
out
lcall
ret
loope
jl
pop
in
cmp
lods
ds
push
bound
pushf
sub
sbb
out
cld
pop
xor
mov
fxtract
xchg
mov
add
das
sub
xchg
scas
inc
cwtl
xchg
and
pop
lods
jp
in
adc
pushf
xchg
xchg
jae
movsb
in
insb
es
pop
in
mov
inc
sbb
dec
sbb
pop
push
mov
aaa
call
and
in
mov
add
or
stc
add
push
ss
mulb
cmp
sbb
sti
and
insl
dec
daa
test
mov
mov
mov
js
mov
in
dec
dec
scas
mov
jecxz
in
cmpsb
push
mov
repz
jne
jl
js
and
push
addb
shrl
into
pop
push
pop
aad
roll
sbb
mov
fldenv
ret
or
orb
and
dec
sbb
mov
mov
mov
dec
hlt
test
mov
mov
inc
movsl
xchg
repz
push
imul
sbb
dec
sbb
xchg
push
pushf
scas
cmp
pop
jmp
dec
xchg
bt
scas
mov
add
cmp
mov
loopne
scas
mov
add
cmp
mov
mov
cld
pop
jmp
push
xchg
fidivrl
push
imul
sub
jle
pop
iret
jg
push
imul
and
jle
pop
mov
mov
gs
in
mov
fisubrl
fdiv
cmp
repnz
xor
sahf
in
cmpsb
push
fsubrl
pop
lock
xchg
sub
hlt
faddp
mov
in
in
mov
fsubs
test
add
out
dec
dec
scas
mov
jmp
mov
mov
clc
ret
call
mov
add
int
mov
mov
fdivrl
popa
shlb
or
push
inc
shll
dec
xchg
mov
lock
scas
mov
gs
in
leave
xchg
add
sbb
pop
int3
pushf
scas
inc
mov
aam
aad
fsub
roll
xorl
fsubrl
sub
faddl
dec
sbb
jg
fmulp
xor
push
dec
or
inc
jmp
push
insb
xchg
add
adc
popa
inc
xor
add
or
xor
push
loope
inc
dec
mov
sub
shr
cmp
pushf
mov
fmuls
lock
and
pushf
sub
fs
cld
movsl
pop
xchg
or
pushf
pop
cmp
test
xor
jecxz
jp
into
mov
pop
sbb
add
loopne
mov
into
pop
inc
mov
push
ja
inc
movsb
adc
mov
xchg
test
cmp
adc
lods
push
xlat
popa
mov
arpl
adc
hlt
pop
jmp
aas
rorl
or
aas
dec
mov
or
in
cmp
sbb
icebp
sub
fwait
sub
push
cmp
add
movsb
out
sub
ja
aam
dec
sbb
jg
in
imul
test
xchg
mov
dec
sbb
inc
or
insb
adc
lods
push
mov
sbb
cmp
pushf
cmp
movsl
pop
in
cmp
popa
test
push
fsubrl
add
jl
pop
inc
movsb
les
rorb
add
mov
or
cmc
add
sub
faddl
dec
sbb
dec
cltd
and
ss
and
cmp
cmp
xchg
test
and
in
or
dec
jmp
fs
mov
xchg
cwtl
push
iret
hlt
cld
or
lds
add
das
cmp
das
cmp
xor
pop
mov
xchg
sbb
push
gs
xchg
jge
loope
cmp
stos
jno
sub
xor
fwait
mov
cmp
jo
cltd
popa
pop
mov
dec
movsb
jmp
movsl
test
stos
mov
sbb
cs
sbb
add
adc
rcll
pushf
xchg
dec
fwait
mov
cmp
and
in
or
dec
jmp
fs
scas
mov
addr16
in
mov
hlt
cld
or
lds
add
das
cmp
ss
out
insb
cmpsl
roll
push
into
pop
jns
cmp
stos
sti
pop
les
int3
pushf
test
mov
xchg
mov
fcompl
dec
dec
xchg
mov
jge
imul
dec
jmp
sbb
cmc
or
mov
mov
lods
cld
pop
gs
add
inc
insb
cmp
sub
add
in
mov
mov
imul
push
outsl
jl
and
cmp
es
fsubrl
maxps
adc
adc
xchg
mov
jl
cs
fdivrl
cmp
mov
in
daa
push
test
mov
je
xor
dec
lahf
jo
inc
pop
xorb
push
sub
cmp
and
fndisi(8087
enter
fs
jmp
iret
loopne
mov
in
adc
rcrl
mov
or
ficoms
xor
jl
out
xor
imul
xor
dec
pushf
sub
pop
lcall
jb
call
icebp
lock
sbb
sbb
movsb
dec
fwait
sub
push
push
cmp
inc
mov
in
daa
push
test
dec
mov
je
xor
lahf
jo
pop
cmpb
fdivrs
dec
sbb
xor
fwait
mov
cmp
jo
cltd
popa
pop
mov
outsl
mov
jb
dec
pop
leave
mov
mov
in
popa
inc
sub
or
jmp
jl
loopne
cmp
cmp
xor
push
mov
xchg
sbb
push
gs
push
iret
pop
and
jns
pop
push
insb
es
lods
dec
hlt
sbb
mov
jo
push
mov
fldt
inc
lods
jl
add
mov
add
arpl
fucomi
and
mov
mov
mov
repnz
or
mov
mov
sub
or
decb
mov
fmull
lahf
in
xchg
pop
mov
stc
add
pop
jl,pn
fdivrl
imul
pop
inc
in
push
pushf
cmpb
push
jno
inc
or
loop
mov
cld
in
and
in
mov
cmp
dec
fsubrl
enter
pop
lahf
in
rorl
fmull
fldt
roll
pop
into
pop
xlat
inc
mov
mov
or
push
dec
adc
cmp
and
fcoml
pop
and
mov
sub
pop
lods
dec
hlt
dec
mov
int3
cmc
test
mov
cmp
lret
adc
mov
clc
cmp
and
out
jb
imul
mov
add
cmp
lds
cwtl
jl
lret
pop
sti
cmp
test
dec
fadd
mov
mov
lods
mov
test
mov
pop
addr16
in
cmp
sbb
js
fildll
dec
jmp
stos
jo
inc
lods
cltd
push
pushf
pop
xor
insb
xchg
in
push
fsubrl
fwait
mov
mov
sbb
push
je
dec
dec
xchg
in
aaa
cs
mov
mov
jl
mov
cltd
pusha
xchg
or
pushf
leave
fwait
sub
insb
cmp
shrl
jno
les
inc
mov
sbb
mov
or
or
or
ret
out
ret
jle
pop
jmp
inc
cmc
out
cld
or
jg
arpl
jmp
iret
loopne
sti
ret
dec
and
or
cmp
cmp
mov
les
xchg
adc
in
xchg
pushf
add
inc
or
out
sbb
mov
fldenv
imul
in
sub
cwtl
pop
popa
inc
xor
adc
or
rcrb
or
mov
and
pusha
stos
sti
mov
cmp
sbb
pop
lods
or
fnstsw
add
in
cmp
popa
test
in
jl
pop
insb
aaa
lea
xor
mov
cs
popa
cwtl
pushw
sub
insb
adc
jle
test
mov
jl
and
xchg
cld
cld
sti
and
out
int3
pop
and
add
cmp
sub
mov
mov
mov
rcr
cmp
sub
inc
lods
cltd
sub
arpl
pop
lods
out
inc
add
je
xor
lahf
jo
pop
cmpb
int3
cmp
stos
jno
sub
xor
fwait
mov
cmp
jo
cltd
popa
dec
mov
aas
lahf
jmp
movsl
sbb
jns
jnp
adc
int3
cmp
adc
call
xlat
outsl
jl
mov
pop
movsl
jnp
setns
mov
data16
in
mov
out
cld
or
vmovapd
jno
dec
sbb
mov
xchg
inc
xchg
mov
and
pushf
leave
fwait
sub
je
das
cmp
fistpll
push
sub
cmpsb
dec
add
cmc
or
out
sbb
popa
push
popa
dec
lods
ds
dec
adc
scas
push
xlat
cltd
mov
hlt
pop
insl
mov
mov
cmp
xchg
int3
arpl
cwtl
pop
in
cmp
jns
test
cmc
add
daa
imul
popa
mov
pop
xor
ljmp
aas
mov
out
xchg
and
fwait
inc
xor
mov
or
test
lret
inc
outsl
or
mov
or
stc
add
in
jg
hlt
sub
jge
test
imul
rcll
popa
shrb
test
lahf
jmp
movsl
lahf
cli
or
xor
sub
jg
xchg
pushf
or
insb
inc
adc
xchg
xor
les
sbb
roll
mov
stos
adc
mov
aam
sbb
fsubrl
pop
into
pop
aam
mov
stos
push
gs
fwait
inc
or
sub
mov
sbb
mov
mov
cld
daa
push
outsl
stos
jb
fildl
out
pop
bound
lods
cld
dec
fsubrl
fsubl
imul
mov
xor
fwait
add
pop
ret
cmp
and
mov
mov
lods
das
int3
sbb
sbb
div
aas
loope
fdivrs
arpl
imul
and
in
mov
int3
stos
mov
mov
imul
test
in
mov
mov
lcall
int3
pushf
sub
or
inc
sbb
aas
inc
or
sub
mov
lods
mov
sbb
mov
push
insb
or
sub
mov
xchg
or
cld
pop
imul
rorl
sti
and
xchg
int3
push
in
and
pop
stos
sti
gs
lcall
pop
popa
cmp
lods
cld
or
xor
push
loop
jnp
pop
jmp
dec
xchg
movsb
sti
jecxz
ljmp
cmp
cmp
cmp
sti
or
mov
mov
call
hlt
or
jno
inc
xchg
sub
bound
rcrb
sti
jecxz
mov
push
pop
mov
xchg
xor
in
cld
or
lahf
jl
mov
ja
stos
jp
imull
loop
push
subb
adc
sbb
mov
cmp
xchg
mov
push
inc
xlat
jns
jg
hlt
cmc
add
xchg
mov
lods
ds
mov
add
jne
add
xor
pop
mov
dec
in
hlt
mov
and
xchg
push
dec
and
push
inc
shll
in
cmp
lock
pop
fwait
add
mov
cmp
clc
sub
add
shl
in
xchg
mov
fadd
mov
mov
lods
mov
cmpsl
icebp
or
sub
mov
jl,pn
pop
popa
sub
xchg
cwtl
test
inc
mov
sahf
in
daa
bound
shll
or
dec
sbb
jno
xor
mov
push
pop
inc
cmp
insb
xorps
inc
xchg
xlat
cltd
mov
pop
cvttps2pi
sahf
iret
and
test
xor
fldt
lds
stc
mov
loop
add
mov
xchg
lods
ljmp
pop
loope
jb,pt
jl
jmp
stos
dec
or
mov
mov
lods
mov
jbe
mov
jnp
les
inc
fstpt
inc
mov
movb
adc
jle
sbb
lret
lret
jb
in
cmp
cmp
jmp
or
cmc
aas
loope
fdivrs
or
ret
repz
xchg
loop
test
fsubrl
mov
and
xchg
and
mov
mov
pop
mov
test
push
stc
and
jecxz
imul
das
mov
mov
popa
xchg
lret
mov
jno
in
xor
movsb
loop
mull
mov
xchg
repnz
orb
nop
adc
mov
inc
xchg
rol
nop
adc
inc
rcll
xorb
loop
sbb
je
and
xor
adc
outsl
adc
loopne
pop
insb
inc
mov
addl
rcll
clc
das
mov
jnp
mov
cmp
and
mov
mov
jns
jno
mov
sub
ja
mov
cmp
lods
cld
or
leave
mov
sub
negb
cmp
sub
mov
xchg
pop
jmp
stos
jp
imul
movsb
adc
lret
cmp
inc
mov
cli
int3
pushf
test
adc
add
test
fwait
mov
and
sbb
adc
add
cld
adc
fndisi(8087
int3
mov
push
mov
push
xlat
or
cmc
dec
fsubrl
daa
mov
cs
shr
push
insb
dec
adc
in
leave
xchg
xor
jmp
insb
adc
adc
hlt
int3
lret
jle
outsl
dec
in
push
insb
movsb
pusha
aad
jl
jmp
mov
mov
mulb
and
pop
lods
mov
cli
mov
jl
and
xchg
dec
xchg
rorb
aad
jl
push
push
dec
mov
mov
or
jo
sbb
jle
mov
nop
lahf
jb
arpl
fcmove
adc
je
and
inc
fistps
lds
jl
inc
sbb
sbb
inc
or
aam
cli
xchg
pop
pusha
pusha
push
sbb
and
addr16
std
pop
in
cmp
loopne
mov
push
stc
cmp
pop
flds
xchg
lahf
add
sti
or
cmpsl
add
cmc
test
xchg
cltd
jmp
dec
sbb
add
pushf
push
add
repz
push
pop
jmp
push
sbb
push
js
pushf
sub
push
push
add
mov
lret
cmc
test
loop
scas
cmp
cld
push
or
mov
mov
xlat
adc
adc
fsubrl
shlb
clc
and
pusha
xor
jnp
pop
in
ja
aaa
insb
jg
fsubrp
jl
lahf
in
aas
loope
fmuls
push
out
lret
cmp
xchg
fsub
cwtl
shlb
into
and
cmpb
pop
in
cmp
repnz
xchg
sahf
sub
lock
cwtl
stc
mov
pop
or
pusha
sub
aad
out
jl
pop
in
lds
fldt
pop
loope
aad
mov
stos
sti
or
loop
lcall
mov
cmp
and
test
pop
and
cs
push
js
adc
cltd
shl
js
xchg
mov
iret
sysexit
std
pop
data16
pusha
xor
in
cld
cmp
shll
or
aam
adc
dec
fdiv
fnstenv
sub
cmp
lahf
jo
jbe
push
fnsave
mov
mov
shll
and
dec
dec
and
iret
imul
cld
mov
in
aad
mov
add
adc
fcom
pop
inc
adc
bnd
popa
shrb
mov
sub
mov
mov
sub
or
dec
bound
imul
test
mov
pop
stos
cmp
push
inc
mov
sub
imulb
and
lods
dec
hlt
shll
test
and
adc
sbb
call
nop
lods
mov
push
lods
lods
cld
or
mov
mov
dec
xchg
mov
mov
in
aad
test
nop
dec
insl
mov
imulb
dec
xor
ja
fsubr
mov
stos
mov
lea
dec
cmp
cld
hlt
sub
enter
and
xor
or
nop
jno
mov
dec
sbb
repz
das
jl
pop
aas
dec
or
xchg
gs
fsubrl
mov
aam
sbbb
hlt
ret
cmpsb
mov
pop
ja
xor
icebp
cld
or
imull
cmp
cmp
add
ss
imul
repnz
ficompl
cmp
cld
les
inc
int3
mov
jmp
in
cmc
sbb
pop
cld
shl
xor
inc
sub
in
daa
dec
cmpsl
icebp
add
sub
hlt
jg
xchg
mov
push
sbb
lock
mov
jnp
inc
addr16
lahf
movsb
sti
adcb
aam
mov
mov
push
leave
or
xchg
push
sub
jb
int3
jne
test
inc
mov
faddl
mov
adc
jmp
sbb
sub
xchg
adc
lds
xor
in
or
mov
dec
add
jl
mov
xchg
push
in
je
fchs
xor
push
pop
lods
in
pop
insb
mov
dec
pop
popa
cmp
fdivrs
fsubrl
les
and
push
lods
cld
gs
addl
dec
sbb
dec
bound
les
pop
in
add
fdivl
add
xor
nop
out
cld
shll
cmp
scas
fisubrs
shll
adc
mov
inc
in
dec
dec
arpl
nop
ds
popa
mov
in
push
insb
adcl
adc
into
pop
mov
in
lea
or
mov
nop
jge
jl
mov
lods
ret
push
adcb
lock
dec
jecxz
test
mov
fdiv
insl
sahf
in
add
fdivl
add
xor
mov
out
cld
shll
sub
lods
fisubrs
roll
sbb
hlt
loopne
dec
arpl
cmpb
adc
loopne
push
insb
adcl
add
into
pop
mov
inc
loopne
ds
push
sub
fwait
sub
adc
aam
dec
sbb
movsb
mov
shlb
xor
test
int3
push
xchg
mov
inc
fnstcw
fmul
test
cs
fs
clc
mov
push
mov
sub
xabort
inc
add
imul
imul
xor
mov
mov
sub
jl
mov
fisubl
push
cmpsl
mov
rolb
mov
add
shlb
and
in
lret
jmp
dec
nop
xor
hlt
mov
lock
pop
pusha
dec
rcr
and
cltd
call
xor
pop
inc
out
adc
insb
and
cwtl
mov
ja
push
ds
mov
xor
add
std
aaa
sbb
arpl
lock
fmull
mov
jl
pop
jns
loopne
stos
sti
or
or
adc
jnp
fs
movsl
sbb
mov
les
mov
movsl
das
adc
fwait
inc
enter
outsl
push
aad
decl
arpl
fstpl
cli
pop
sub
adc
cmp
out
push
dec
jle
add
inc
mov
jae
lods
inc
lea
pusha
test
pushf
xchg
scas
loop
adc
shlb
sbb
pop
addl
dec
sbb
mov
bnd
andb
test
sbb
mov
mov
lods
mov
lahf
imul
xor
pop
jmp
shll
mov
imul
sbb
dec
sbb
add
pop
jmp
push
xchg
mov
push
mov
jnp
mov
push
jl
imul
shr
cmp
mov
push
imul
pop
xlat
inc
iret
fldenv
sti
or
outsb
xor
push
xor
pop
and
movq
push
lret
sbb
lret
int3
stos
pop
in
pop
in
cmp
divb
in
or
pushf
mov
mov
push
cmp
out
add
les
or
pushf
mov
pop
xor
xor
repz
add
jecxz
ss
xchg
loopne
scas
aam
cwtl
sbb
xchg
inc
shr
sahf
daa
and
push
mov
xchg
mov
dec
jno
pop
iret
aam
and
das
sti
push
dec
jno
push
iret
aam
and
das
sti
inc
dec
jno
dec
aam
and
das
sti
xor
es
iret
aam
and
das
sti
sub
es
aam
and
das
sti
push
dec
jo
mov
cmpsl
push
mov
mov
adc
lods
push
lahf
jb
addl
repz
xor
or
imul
sub
mov
dec
xchg
adc
mov
vmovapd
dec
sbb
and
fwait
sub
cmp
cmc
out
cld
cltd
mov
lret
fwait
mov
add
cmp
jecxz
clc
in
scas
mov
enter
push
xchg
mov
push
fadds
push
pushf
pop
rorl
sbb
cmp
push
jno
mov
outsb
jl
lahf
outsl
stc
test
stos
sti
adc
cmc
imul
cmc
add
fcoml
dec
pop
push
mov
jecxz
clc
aam
scas
mov
enter
dec
jecxz
clc
pop
push
scas
mov
mov
inc
or
imul
pop
jmp
rolb
push
fldt
sbb
mov
mov
cmp
sbb
out
push
insb
or
cmpsl
popa
jl
jmp
stos
jg
in
cmc
add
add
fcomp
sahf
in
cmpsb
mov
imul
add
cmp
push
bound
pushf
repz
jo
imul
lea
stos
jno
les
int3
mov
mov
sbb
inc
add
dec
adc
add
iret
push
jo
cld
xchg
in
aas
cs
mov
mov
jl
jmp
stos
push
je
insl
mov
lock
cs
mov
add
nop
pop
into
pop
aas
cli
push
and
sbb
nop
cmp
push
inc
pop
inc
les
loop
add
imul
mov
aam
imul
popf
outsb
jl
scas
jns
xor
cld
mov
in
adc
fstpl
xchg
add
mov
in
adc
rcrb
cmpsb
lods
cmpsl
pushf
push
cltd
cltd
test
mov
stos
sti
imul
outsl
xor
stos
jg
cld
mov
jnp
lods
jns
cmp
stos
sti
pop
imul
int3
mov
clc
and
xchg
stos
sti
gs
inc
call
jmp
stos
dec
cltd
popa
test
int3
pop
jmp
dec
shr
sti
or
imul
sub
shr
mov
mov
mov
fs
scas
cmp
fsubs
sti
gs
in
fs
scas
cmp
enter
gs
sub
lods
push
mov
or
insb
mov
mov
in
cmp
popa
mov
shrb
sbb
gs
rcll
dec
insl
sub
sbb
cld
bound
orb
shr
cmp
lods
dec
hlt
rcrl
mov
cltd
fs
push
inc
insb
dec
push
adc
jnp
mov
leave
xchg
adc
sti
and
dec
and
icebp
lahf
jmp
stos
fs
mov
es
mov
inc
popa
mov
xor
add
pop
into
pop
cmp
xor
cld
gs
movsbl
out
cld
cltd
and
test
scas
mov
rcrb
sti
bound
jns
pushf
sub
push
insb
jmp
pop
sbb
or
data16
lret
cmc
jl
adc
jmp
dec
insb
cmp
sub
dec
scas
fisubrs
mov
cmp
xchg
mov
outsl
mov
push
js
add
cld
dec
sbb
jl
imul
dec
sbb
inc
dec
cld
xor
int3
sbb
xlat
mov
xor
mov
add
aas
aas
or
push
jno
pushf
sub
rolb
inc
aas
or
out
hlt
xor
mov
jb
loope
lods
xchg
mov
nop
test
and
icebp
das
cmp
movsl
xor
mov
arpl
mov
or
mov
and
xchg
mov
or
mov
and
dec
sbb
cld
cltd
popa
fdivrs
subb
hlt
icebp
insb
mov
je
out
cmp
lahf
jo
jbe
imul
pushf
outsb
jl
mov
cwtl
cld
push
fsubrl
push
sub
add
das
pop
lods
sti
sub
ja
mov
add
stos
mov
dec
fisubrl
enter
dec
xchg
mov
lret
mov
loop
jns
dec
sbb
dec
in
adc
mov
test
imul
push
scas
dec
or
out
xor
repnz
pop
in
or
int3
ret
push
fsubr
insb
sub
cmc
aas
fbstp
mov
idivl
pop
in
cmp
cltd
pop
add
outsb
mov
dec
nop
cmpl
sbb
int3
aad
lock
aam
dec
fdiv
pop
in
xor
adc
sbb
add
loop
sbb
push
clc
mov
lds
push
mov
mov
mov
lods
sti
inc
fildl
or
cmpl
fildl
add
stos
jns
mov
cmpsl
iret
sub
lods
out
das
cmp
pop
lods
jo
xor
fwait
sub
dec
mov
cmp
push
fsubrl
lcall
stos
cmpsl
outsl
pop
addr16
roll
jg
mov
sub
push
setl
inc
shll
sti
mov
movsl
cli
inc
mov
aas
and
sbb
xor
fwait
jno
or
sbb
jge
add
pop
rcrl
lcall
mov
pushf
mov
mov
inc
rcrl
mov
push
mov
fistpll
fildll
pop
lea
mov
and
or
int3
pushf
outsb
std
test
dec
cwtl
xchg
pop
iret
sbb
push
dec
sbb
mov
aad
mov
cmp
jne
sti
cmp
sub
adc
orl
dec
jnp
je
push
xor
dec
hlt
fwait
fwait
mov
ja
jmp
push
fldt
inc
mov
jl
sahf
in
mov
or
xor
dec
sbb
add
cmp
mov
imul
in
sub
cwtl
pop
popa
inc
xor
std
sti
or
rcrb
sub
mov
and
dec
stos
sti
movsl
das
inc
adc
xor
dec
sbb
test
mov
and
inc
aas
or
hlt
in
fildll
dec
movsl
xor
mov
mov
je
loope
lods
mov
mov
out
inc
lahf
jb
data16
pop
adc
mov
loope
adc
or
insb
add
ja
sub
pop
in
cmp
test
imul
and
call
loopne
fcoml
pushf
sub
sbb
and
dec
sbb
dec
hlt
adcl
les
cmp
fsubrl
popf
sub
sbb
nop
xor
hlt
arpl
or
adc
xchg
lahf
insb
xchg
jne
fsubrl
fdivrs
hlt
aad
js
cltd
popa
adc
lret
fwait
jg
adc
cld
xor
ljmp
xchg
cmp
cld
sti
and
mov
aas
in
cmp
push
or
xor
xor
pop
jmp
shl
in
sbb
pusha
cmp
shr
adc
push
inc
dec
push
aam
jnp
pop
popa
adc
out
sbb
mov
jmp
sub
xor
fldt
inc
js
fs
in
cmp
loopne
xor
lret
adc
adc
in
dec
sbb
loopne
pushf
scas
inc
cwtl
scas
aas
leave
rcll
or
or
and
pop
cmp
rcl
stos
sti
or
mov
mov
pop
lods
xchg
pop
pop
xor
in
ds
sbb
mov
in
mov
cmp
icebp
shlb
setl
adc
outsl
decl
sub
shr
pop
outsl
jl
sbb
shl
stos
sti
and
mov
mov
sbb
and
popa
adc
jo
in
mov
frndint
or
loope
mov
xchg
call
push
test
loopne
fdivr
inc
jo
sub
inc
push
imul
mov
fucomip
jno
inc
sbb
mov
xor
jmp
pushf
sbb
or
imul
add
rol
cmpsb
sti
or
inc
stc
fwait
sub
loop
add
pop
lods
sti
sbb
outsl
jl
adc
dec
sbb
pop
fwait
inc
les
add
push
adc
ja
outsl
xor
xchg
push
xchg
test
outsb
mov
mov
pushf
movsl
cmp
adc
scas
dec
xchg
mov
loopne
stos
inc
sbb
xchg
dec
adc
hlt
mov
xchg
mov
pop
fsubrl
adc
popf
jmp
icebp
add
les
int3
pushf
mov
xchg
stos
inc
xchg
xchg
movsl
and
ljmp
andps
mov
bound
out
mov
xchg
sub
or
jbe
or
daa
dec
dec
insb
pop
imul
inc
outsl
dec
dec
insb
xchg
std
jmp
popf
adc
pop
xor
mov
ss
movsl
fsub
cltd
shll
inc
or
inc
lret
adc
xchg
lods
xchg
test
fs
push
test
leave
enter
xchg
xor
sub
loope
pop
mov
stos
inc
or
out
and
pushf
pop
cmp
inc
xchg
jne
adc
push
and
mov
push
popa
inc
xlat
popa
mov
sbb
lods
aas
xchg
xlat
xchg
mov
xchg
pop
js
adc
jmp
jg
xchg
adc
adc
cld
xchg
jmp
nop
lret
lret
mov
and
sar
decl
cmp
mov
dec
xchg
and
inc
hlt
loopne
lcall
das
popa
inc
test
add
pushf
lods
cmpsl
sub
jl
pop
jmp
movsl
mov
imul
mov
inc
mov
push
jg
sbb
mov
gs
roll
adc
in
mov
jp
pop
jecxz
movsl
aaa
insb
push
dec
jno
sub
popa
add
and
adc
jmp
mov
cmp
push
fmul
sbb
gs
rcll
dec
movsb
sub
sbb
in
push
insb
mov
loop
movsl
sub
xchg
imul
scas
addr16
xchg
outsl
inc
xchg
iret
pushf
sub
sarl
cmp
rorl
movsl
xor
insb
aas
nop
test
inc
sarl
out
cmp
rcll
or
imul
pop
outsl
jl
mov
ds
icebp
ficoml
mov
mov
dec
sbb
adc
pushf
sub
adc
jmp
gs
adc
int3
and
in
leave
xchg
clc
cld
push
or
xor
setl
push
sbb
fs
imul
fwait
inc
cmp
lahf
in
mov
and
loope
int3
hlt
ficoml
int3
jae
adc
scas
mov
adc
dec
cmpsl
mov
lret
and
jmp
leave
sbb
cmp
xorl
fldenv
mov
cmp
push
dec
or
in
aaa
setl
cmc
dec
sbb
das
or
les
cmp
mov
xchg
dec
xor
fdiv
jl
and
mov
push
shlb
add
lods
sub
mov
sti
pop
fndisi(8087
mov
mov
clc
iret
pop
outsl
xor
sub
pop
push
fsubrl
and
repnz
sti
and
notl
roll
adc
fwait
sub
sub
cmp
xor
mov
adc
icebp
clc
cmc
cli
outsb
mov
mov
pop
rep
sti
bound
or
fists
mov
stos
sti
jbe
mov
jl
and
shrl
sti
or
adc
sub
rcr
sub
fildl
scas
dec
loope
dec
shr
lods
cld
or
sub
lcall
jle
insb
mov
mov
mov
or
negl
lcall
xchg
push
loopne
or
pop
in
cmp
adc
or
pusha
sub
mov
and
inc
lods
cld
cltd
popa
jl
lret
fwait
pop
jnp
inc
sub
sbb
rcrb
lret
push
push
sub
jns
rep
sti
dec
out
inc
add
int3
dec
sbb
mov
pop
and
mov
mov
loop
or
icebp
jl
adc
insb
sarl
dec
insb
xchg
cmc
xor
insb
aas
les
adc
sbb
dec
cltd
popa
jl
lret
fwait
or
lret
and
jne
dec
hlt
inc
mov
int3
je
xor
insb
cmp
sbb
pop
mov
pop
pop
ret
mov
add
pop
into
pop
cmp
sub
cld
gs
sub
inc
rcll
shrl
sti
or
or
lahf
push
jl
fbstp
mov
jecxz
ret
adc
dec
push
movsb
push
sbb
mov
mov
or
xchg
addr16
inc
test
sub
test
out
jle
push
fists
mov
mov
mov
or
negl
lcall
xchg
push
loopne
or
cld
call
and
mov
pop
jmp
xor
aam
or
pop
adc
mov
mov
mov
sbb
stos
loop
fsubr
mov
sbb
sub
pop
insb
mov
mov
jno
dec
sbb
mov
sub
jmp
pushf
sbb
add
lock
mov
ja
jmp
push
sbb
sub
movsb
jae
or
mov
or
imul
ftst
outsl
daa
sbb
xor
and
mov
cmp
pop
lods
dec
hlt
sbb
mov
stc
mov
pop
pop
imul
jnp
or
cmp
cmp
sbb
loope
xchg
and
fs
sti
mov
and
lods
aam
jae
stos
push
arpl
sub
inc
or
cmp
sub
bswap
mov
jl
pop
dec
lcall
cmpb
ja
push
jb
mov
fsubrl
mov
cmp
shll
fildll
pushf
sub
sbb
and
dec
sbb
mov
in
adc
mov
in
leave
rcrl
sti
or
inc
js
sub
inc
andb
mov
sub
jmp
stos
jo
inc
mov
xor
insb
xchg
insl
xor
insb
adc
dec
gs
xchg
dec
je
push
dec
repz
jno
cmp
in
inc
mov
hlt
movsbl
hlt
std
dec
fdivr
add
jmp
pushf
test
mov
sbb
jno
fsubr
xor
test
icebp
and
fwait
sub
mov
add
push
dec
in
adc
mov
in
mov
or
jl
adc
aad
dec
test
loope
fdivrl
mov
leave
ror
xchg
sti
or
mov
jl
lods
jns
clc
add
and
fwait
sub
inc
addr16
push
imul
sub
mov
pusha
testl
pushf
sub
in
or
ror
movsl
sti
or
mov
mov
jno
inc
sbb
mov
mov
mov
adc
pop
scas
mov
mov
inc
inc
sbb
add
fisubrs
ljmp
add
fdivrl
in
pop
in
cmp
mov
ret
or
sbb
fs
jge
cmp
popa
mov
hlt
sti
in
mov
jle
pop
mov
or
aam
and
sub
adc
cmp
xchg
sbb
nop
test
add
adc
xlat
pop
shl
int3
pushf
mov
in
arpl
xchg
sub
cld
or
stc
inc
rcrb
popa
dec
sbb
inc
sbb
fucomip
dec
pop
popa
jo
pop
jmp
roll
inc
shrl
lret
into
mov
xor
stos
sub
in
mov
push
mov
or
iret
popa
mov
inc
add
sbb
neg
jnp
mov
cltd
jl
jmp
fldenv
mov
adc
cmp
push
pushf
push
jle
stc
inc
mov
jmp
stos
sti
sub
sub
je
adc
test
imul
outsb
jl
inc
push
jl
sbb
shlb
test
fwait
sub
mov
cmp
sbb
repnz
pop
fs
inc
cmpsb
scas
je
shl
cmp
and
jnp
push
push
jns
pop
dec
mov
movsl
and
xchg
cmp
cwtl
mov
enter
aad
xchg
clc
or
loopne
add
jmp
stos
fs
scas
mov
mov
cmp
stos
sti
pop
imul
int3
je
dec
test
imul
xor
mov
jno
dec
sbb
mov
fwait
jl
fs
cmp
loopne
jg
lods
push
xor
jmp
aaa
ja
sti
and
call
jl
pop
inc
xchg
mov
add
popa
pop
mov
mov
dec
xor
cld
dec
fdiv
lods
dec
lcall
dec
sbb
mov
fwait
jl
adc
in
cmp
movsl
imul
and
sub
mov
fldt
loope
sub
mov
popa
push
fldenv
ret
subl
inc
inc
pop
dec
sbb
mov
push
das
int3
je
fdivrl
dec
movsl
xor
or
imul
fbstp
xchg
dec
fdivr
add
in
mov
cmp
sbb
inc
js
sahf
in
f2xm1
test
or
lock
pushf
sub
push
in
jo
pop
lods
jno
das
imul
sbb
mov
cmp
sbb
mov
add
arpl
pop
cmp
xor
lods
cld
cltd
popa
test
lret
fwait
jl
mov
loopne
pop
push
sub
xchg
pop
xchg
orl
fsubrs
inc
mov
arpl
out
mov
or
ret
ja
orb
cmpsb
sti
or
mov
flds
aaa
jns
inc
mov
fs
iret
loopne
xor
out
fwait
mov
cmp
test
imul
outsb
jl
lods
aam
outsl
sbb
jg
lock
mov
jmp
sbb
cld
hlt
orl
mov
lods
fs
scas
mov
mov
mov
iret
cld
or
xor
pop
and
jns
pop
aas
mov
into
cld
or
mov
jnp
lods
jmp
pop
sbb
loopne
pop
insb
adc
pop
mov
dec
sbb
fmulp
pushf
scas
inc
pushf
jmp
stos
dec
pop
les
int3
sbb
movsb
cmp
cld
sti
sub
outsl
jl
inc
sbb
sbb
cmp
mov
mov
sarb
sbb
hlt
negb
insb
dec
push
push
sub
mov
and
lods
cld
mov
sub
scas
cmp
dec
cmp
stc
inc
test
popa
dec
dec
xor
test
adc
cmp
cld
in
insb
mov
cmpsb
sbb
ds
sbb
mov
push
insb
dec
push
push
sub
mov
and
lods
cld
mov
sub
scas
cmp
clc
cmp
stc
inc
test
popa
dec
dec
xor
sbb
adc
leave
insl
sbb
jg
faddp
xor
fwait
mov
cmp
lahf
xchg
jmp
js
sbb
pusha
aas
xchg
xchg
mov
sub
fwait
sub
jo
and
dec
lods
cld
cltd
popa
fdivs
in
inc
cs
mov
ret
pop
dec
jl
fbstp
stc
or
mov
jl
mov
leave
rcl
test
xor
fwait
inc
pusha
pop
lahf
in
leave
rcll
mov
mov
jns
dec
sbb
or
mov
jl
pop
jno
pop
mov
sub
sub
call
mov
push
inc
sub
les
mov
in
or
and
aad
loopne
aas
dec
sbb
xorl
lods
aam
js
lods
push
xchg
pushf
or
xor
test
imul
int3
jl
pop
jns
xor
cmp
sub
shrl
outsb
jl
out
sub
je
ds
test
add
mov
xchg
sub
fistl
outsb
or
and
fistl
data16
xor
mov
xchg
ds
push
mov
push
jl
rol
stos
sti
sbb
lock
int
sub
rcll
pop
nop
cld
mov
in
xchg
test
sahf
in
leave
rorl
mov
daa
jl
cmp
popa
fs
cltd
popa
fdivl
adc
cmp
and
in
push
dec
bnd
pop
jl
cmp
loopne
in
fisubrs
push
in
pushl
mov
sbb
inc
lods
pushf
sub
hlt
inc
in
cmp
test
test
aam
insb
sbb
jg
in
stc
inc
test
aam
imul
pop
imul
int3
mov
clc
cmp
daa
aas
or
icebp
pusha
enter
sbb
movsb
cmp
stos
jno
inc
push
movsl
push
pushf
or
data16
dec
lahf
jo
cltd
popa
and
lret
fwait
jg
je
or
jne
mov
in
sub
cwtl
pop
add
pop
lods
mov
in
adc
stos
pop
in
mov
xchg
subb
in
mov
cmp
and
cmc
push
insb
cmpsl
roll
gs
pop
inc
mov
lret
cld
or
xor
pop
and
jns
pop
aas
mov
lret
cld
or
mov
jnp
lods
jmp
pop
sbb
loopne
pop
insb
dec
adc
fadd
cmpb
adc
cmc
push
insb
adc
jmp
stos
dec
je
push
dec
sub
movsb
push
sbb
int
int3
pushf
mov
sarl
movsl
push
pushf
mov
cmp
fsubrl
rclb
xchg
sbb
pop
sbb
mov
lret
push
les
pop
aam
jnp
stos
dec
cltd
and
pop
and
js
pop
cmp
shrl
cmc
push
insb
cmpsl
aad
nop
fwait
loopne
cmp
sbb
loop
fsubrl
test
sbb
movsb
cmp
add
mov
loope
cmp
decl
mov
adc
cmp
stos
jno
fildl
or
add
cmp
cmp
lret
adc
in
stos
cs
insb
xchg
mov
fsubrl
mov
add
cmp
fsubrl
sub
mov
mov
dec
sub
mov
lret
pop
pop
jmp
fldenv
loop
xor
adc
mov
movsb
and
out
cld
arpl
sbb
pushf
sub
push
insb
jns
add
stos
sti
pop
sub
xchg
jmp
jmp
stos
dec
or
mov
mov
jno
dec
sbb
dec
adc
fadd
cmpb
adc
hlt
push
insb
dec
push
push
sub
mov
and
cmp
repnz
loope
mov
leave
xchg
aam
mov
in
xchg
int3
je
in
xchg
fldenv
mov
jl
and
rcl
test
movsb
xor
jns
add
stos
sti
pop
fndisi(8087
enter
test
nop
mov
fsub
insb
mov
into
pop
jns
les
stos
sti
pop
fndisi(8087
lret
mov
jl
pop
jno
pop
mov
imul
fwait
inc
lock
and
xchg
and
in
adc
mov
insb
aaa
inc
or
or
dec
pop
jnp
mov
mov
mov
imul
add
fs
pop
cmp
loopne
lods
cld
mov
mov
dec
sbb
or
dec
in
adc
test
in
xchg
movsl
pop
sar
aam
xor
add
arpl
pop
cmp
mov
lods
cld
mov
sub
scas
cmp
clc
cmp
test
popa
dec
dec
xor
sbb
pop
xchg
mov
sub
or
adc
xchg
adc
out
xchg
mov
adc
or
in
mov
nop
pop
in
stos
adc
scas
mov
mov
mov
pop
fildl
mov
in
dec
rorb
dec
push
cwtl
daa
jnp
mov
and
xor
dec
test
jg
fprem
xchg
sub
incb
mov
or
fwait
inc
fmuls
add
push
int3
fistps
jo
pop
lods
push
cltd
popa
push
int3
mov
hlt
cmp
daa
aas
or
fs
rcl
cmp
dec
sar
or
jae
mov
jno
add
aas
cmp
lods
ds
lret
pop
adc
fcoms
dec
jg
add
aam
insb
mov
mov
xchg
mov
adc
fwait
adc
test
xchg
mov
movsl
mov
jg
daa
sbb
js
out
cmp
cmpsl
icebp
add
xor
fsubl
sbb
sbb
adc
dec
sbb
sub
inc
pop
jnp
push
xor
or
stc
add
jb
cmp
loopne
and
int3
fwait
mov
mov
sbb
add
outsb
and
sbb
pusha
cwtl
out
cld
xchg
aam
add
in
aad
fcoms
mov
and
dec
mov
insl
mov
mov
mov
sbb
mov
int3
pushf
sub
dec
pop
mov
in
imul
pop
jmp
mov
daa
ds
push
pop
out
sub
push
insb
and
push
cltd
popa
xchg
mov
push
lods
jns
js
stos
sti
pop
in
fwait
sub
jmp
iret
loopne
mov
in
adc
cmpsb
pop
jmp
fldenv
dec
cltd
and
fwait
inc
movsb
or
xor
add
pop
popa
sbb
int3
js
fdivrl
mov
je
mov
in
imulb
adc
adc
in
ret
imul
nop
out
cmp
cmpsl
stc
mov
push
rol
mov
xor
test
imul
add
scas
int
inc
xchg
dec
xor
or
pop
in
ja
movsl
sub
xor
fwait
inc
xor
aam
or
aam
mov
and
or
imul
mov
jle
push
and
or
hlt
lret
fwait
sub
mov
mov
enter
leave
fwait
sub
lods
dec
cs
add
adc
fcom
mov
leave
roll
or
loope
sbb
mov
mov
mov
aam
or
push
lret
sub
push
jo
shll
pop
les
icebp
dec
inc
shll
fildl
fucomi
mov
cmp
insb
inc
adc
cmp
cmp
mov
jmp
shll
adc
loop
and
lods
cld
or
inc
inc
shlb
je
pop
in
cmp
mov
stc
add
in
jg
adc
cld
dec
xchg
cmp
mov
es
pop
add
push
test
or
xchg
pop
cmc
fldt
pop
fwait
inc
les
fdiv
or
aam
rcrb
push
cld
xchg
out
cld
xchg
pushf
jmp
lret
shrb
xchg
mov
xchg
mov
cmp
imul
pop
cs
testl
mov
insl
inc
sbb
mov
dec
shlb
xchg
fdivr
mov
in
adc
mov
in
xchg
rcr
add
js
sub
mov
mov
lret
fwait
xchg
jl
pop
in
leave
rcll
or
mov
jnp
and
inc
sbb
mov
sbb
sbb
dec
sbb
data16
imul
mov
test
xor
js
fsubrl
aam
lds
inc
dec
xor
cld
dec
int3
pop
loope
iret
faddl
dec
sbb
xchg
pop
lock
in
xlat
mov
ret
loop,pn
mov
icebp
call
setl
mov
sbb
xor
movsb
sbb
dec
sbb
adc
insb
dec
push
aam
jnp
scas
cmp
jmp
mov
sub
je
cmp
lahf
jo
cltd
popa
pushf
mov
fwait
jg
xchg
lods
jmp
dec
xor
repnz
mov
clc
iret
pop
jmp
push
add
in
fcmovnb
bswap
mov
jl
pop
jns
xor
mov
add
sub
test
cltd
dec
xor
ja
fdivrl
je
add
dec
test
add
sub
lods
je
jl
stos
sti
shlb
mov
fwait
xchg
in
cmp
loopne
mov
out
xchg
test
pop
and
popa
add
aas
or
mov
mov
xor
xchg
sti
or
sub
mov
in
inc
dec
sbb
addl
sbb
or
movsb
jo
sub
mov
leave
rorl
or
les
bound
inc
addr16
sbb
push
hlt
adc
test
mov
mov
or
cwtl
cmp
pushf
sub
xchg
inc
and
dec
sbb
mov
mov
mov
adc
mov
mov
cmp
sbb
xchg
pop
pop
rcl
sub
pop
mov
stos
mov
jmp
sbb
insb
test
daa
addl
sbb
jge
mov
add
push
sbb
mov
mov
rcrl
cmpsb
sti
or
mov
jl
and
leave
rcrl
stos
sti
or
ret
adc
sub
fldenv
mov
test
jno
rorb
xchg
fsubs
lret
bnd
mov
mov
sbb
hlt
or
adc
mov
xchg
mov
mov
and
out
int3
pop
and
add
sti
pop
fndisi(8087
lret
mov
test
jno
pop
mov
ret
dec
push
cwtl
es
mov
cmp
and
adc
sub
movsl
mov
leave
rcrl
cmpsb
sti
or
mov
mov
in
pop
mov
lret
sbb
gs
rcll
dec
insl
sub
and
cld
pop
xor
inc
and
leave
leave
add
mov
inc
out
mov
jl
pop
ja
xor
or
mov
and
sbb
xchg
and
dec
cmp
jl
pop
add
pop
lods
xchg
imul
les
sbb
adc
scas
mov
iret
pop
cmp
rcrl
stos
push
pushf
jl
movsb
jno
cmp
loopne
xor
lret
adc
sbb
insb
xor
sbb
mov
mov
mov
xor
or
push
dec
add
jns
int3
adc
sti
pop
les
xor
jmp
xor
xchg
sti
or
je
into
pop
ja
fcompl
stos
sti
jbe
aad
add
movsb
push
push
cwtl
mov
jl
and
mov
or
and
sub
hlt
addr16
xorb
lods
jl
adc
loopne
aas
or
fs
lahf
pop
in
cmp
lods
ds
stc
push
lret
jnp
fs
dec
sbb
mov
add
enter
and
inc
lods
cld
gs
das
adc
lock
sbb
adc
scas
mov
mov
leave
rcrl
stos
push
pushf
jl
mov
in
cmp
test
imul
lods
jns
call
inc
enter
xor
mov
mov
jnp
adc
sbb
nop
les
mov
fisubrl
aam
les
pop
in
dec
rolb
scas
cld
or
sub
fwait
sub
or
in
cmp
test
imul
arpl
xchg
pop
in
cmp
popa
jl
pop
fsubrl
sbb
jnp
pop
in
cmp
add
or
out
sbb
jno
fsubrl
stos
sti
pop
sub
mov
mov
lods
dec
fisubrl
push
fisttpll
pushf
mov
adc
insb
ss
sbb
mov
lret
fwait
repz
push
bound
sub
fsubr
xor
pushf
outsl
cmp
xor
sub
mov
aas
or
loope
push
loope
jnp
jl
jg
insb
cmp
sub
jmp
sub
or
sbb
movsl
mov
cmp
or
stc
inc
pop
cltd
sub
inc
dec
dec
dec
sbb
adcb
imul
loope
cmp
cld
in
out
insb
mov
mov
mov
mov
mov
jl
and
rorl
iret
or
insb
dec
adc
in
cmp
test
pop
or
punpcklbw
mov
rcr
mov
mov
test
dec
sbb
jno
imul
add
fsub
cmp
xor
fldt
and
sub
ss
sbb
imul
pop
outsl
add
stc
rclb
mov
aas
mov
mov
mov
test
sbb
fs
and
pop
jns
int3
adc
sti
pop
les
inc
pushf
xchg
mov
stos
jno
das
stc
inc
dec
xchg
sub
adc
cmp
cld
mov
in
sub
adc
cmp
or
rcrb
lods
je
pop
cmp
stos
cs
sti
lds
int3
pushf
sub
mov
xor
pushf
outsl
push
pcmpeqb
xchg
test
das
cmp
mov
mov
or
test
cmp
push
movsb
cwtl
lods
sub
sbb
adc
dec
sbb
in
out
imul
pop
in
cmp
sti
or
jo
push
cmp
jns
dec
sbb
mov
adc
insb
ss
sbb
imul
mov
sti
or
je
lea
incl
sahf
cmpsb
sti
or
jnp
mov
hlt
aas
or
mov
adc
mov
adc
adcl
scas
or
sbb
and
call
dec
pop
imul
int3
mov
fdivrl
popa
adc
aas
or
addr16
sub
mov
popa
push
dec
je
pop
dec
test
jp
pop
jmp
dec
test
lds
sbb
inc
xchg
out
cld
inc
cmp
dec
mov
or
sbb
sub
xchg
adc
lods
pop
in
mov
fisubrl
and
pop
in
mov
sbb
or
imul
jmp
xchg
sbb
cld
je
outsl
mov
mov
cmpsl
sti
or
lret
pop
xor
fdivrs
or
ret
dec
push
pushf
sub
les
mov
das
out
ljmp
dec
cs
jne
cld
push
fsubrl
repnz
pop
test
inc
or
and
mov
push
ds
lods
dec
hlt
sub
sub
xchg
pushf
test
imul
push
jl
fbstp
jg
aam
xor
and
cmp
sahf
test
or
dec
push
pushf
sub
lock
in
in
insb
mov
mov
mov
mov
mov
jl
pop
jns
dec
sbb
or
adc
jnp
fs
jge
stos
mov
in
adc
pushf
pop
jmp
adc
aad
roll
sbb
in
cmpsb
push
add
fisttpl
fcomi
jl
sbb
shll
jo
inc
jne
or
sbb
sbb
in
cmp
adc
push
insb
or
aaa
cmp
mov
aaa
das
cmp
xor
push
mov
pop
sbb
push
gs
insb
dec
push
pushf
sub
pop
popa
dec
pushf
sbb
or
push
je
fxch
sub
loope
cmp
cld
in
jmp
mov
dec
mov
sub
or
inc
add
sub
in
mov
fsubrl
fcomps
sub
mov
jmp
or
mov
mov
mov
lods
fs
insb
mov
arpl
addl
subl
pop
in
cmp
adc
inc
or
cld
sub
pushf
andb
cmp
mov
out
sbb
leave
adc
pop
in
fistpll
icebp
cld
xchg
popa
lods
mov
das
in
orl
and
jae
jl
jnp
cmp
jecxz
mov
and
pushf
sub
mov
sbb
dec
je
inc
add
test
cltd
mov
fdiv
icebp
cld
mov
sub
mov
cmp
inc
xor
pushf
jl
add
in
cmp
test
imul
in
adc
addr16
jmp
adc
clc
loop
insb
dec
adc
rolb
fdivrl
jl
pop
ja
dec
repnz
cld
imul
into
pushf
sub
dec
in
jo
pop
lods
jno
fildl
int3
hlt
add
jle
add
out
lret
mov
jl
pop
and
cld
or
mov
and
fidivrl
sub
std
or
test
pop
mov
cld
movsl
sub
in
or
insb
jp
outsl
jno
hlt
pusha
in
cmp
jb
sti
and
int3
push
mov
je
sbb
jne
mov
in
push
jmp
pop
jne
xor
icebp
cld
scas
lods
inc
add
sub
fadd
xor
sbb
insb
inc
push
mov
jl
mov
fisttps
lods
mov
shrl
dec
movsl
mov
inc
pop
loopne
jl
lods
jne
sub
icebp
cld
hlt
sarl
pop
jmp
jl
fdivrl
fucomip
jno
dec
sbb
xchg
cmpsb
fwait
sub
push
jl
adc
popa
lods
mov
mov
rorl
dec
or
push
mov
cmp
in
decb
cmpsl
jg
sbb
popa
jo
xor
dec
fdivrl
sbb
call
in
jmp
cmp
adc
cmp
xchg
pop
sbb
imul
mov
push
jl
out
cld
inc
stc
pop
nop
adc
cmp
jo
add
inc
rcrl
push
jb
in
in
mov
add
sub
cmc
add
fwait
inc
adc
lahf
in
lds
inc
jo
and
inc
iret
loopne
pop
imul
mov
test
and
fsubl
sub
inc
mov
jns
cmp
cmp
sub
add
in
mov
and
pop
lods
sti
and
sub
push
je
mov
xchg
mov
lahf
rep
mov
add
xor
ret
cld
or
mov
add
inc
gs
dec
sbb
inc
or
lods
pop
bound
cmp
fisttpll
sbb
xor
addr16
movsb
push
mov
add
int
sub
loop
pop
cmp
repz
arpl
inc
dec
cwtl
sub
xlat
or
cli
or
out
mov
jmp
pop
xorb
fisubrs
test
xchg
and
das
cmp
movsl
icebp
loop
and
xor
xchg
orb
push
jl
out
cld
cltd
and
fsubr
cmpb
addr16
cmpsl
icebp
or
cmp
nop
mov
shrl
sti
pop
sub
andnps
jp
pop
jne
sub
stos
sti
or
in
aaa
setl
push
int3
pop
addr16
imul
and
sub
mov
loop
push
xlat
or
mov
mov
lret
roll
add
mov
xchg
sbb
insb
mov
add
adcl
or
add
mov
lret
mul
decb
push
popa
int
sub
or
shrb
cmpl
inc
daa
push
add
cli
or
lds
fwait
mov
rorl
xor
in
sbb
fsubr
jno
dec
sbb
mov
mov
rcrb
sti
pop
imul
int3
je
idivb
sbb
les
push
xor
mov
sub
fbstp
or
pop
test
movsb
je
icebp
cld
or
sarb
mov
push
insb
cwtl
out
cld
pop
imul
in
dec
cs
add
push
or
out
sbb
test
mov
or
mov
adc
jmp
orl
add
cmp
xchg
mov
sbb
pusha
cmp
cld
in
out
mov
pop
mov
lods
ds
pop
mov
mov
insb
cmp
sbb
inc
xchg
insb
cmp
pop
pop
dec
in
mov
cmp
out
sbb
jmp
cmp
mov
loope
pop
and
jp
pop
cmp
shll
sti
or
cltd
aad
sub
rcrl
sti
or
movsb
push
and
jp
pop
ja
cmp
imul
mov
and
cmp
popa
mov
popa
or
enter
dec
sbb
test
je
mov
mov
cmpsb
jnp
aaa
clc
incl
outsb
jl
shr
mov
or
cmp
int3
pushf
sub
xlat
lahf
rclb
xchg
enter
pop
sti
rcll
pop
xchg
lret
fwait
test
mov
test
push
xchg
enter
popf
sub
pop
mov
push
dec
aas
mov
inc
mov
pop
jmp
aas
shll
pop
and
jp
pop
cmp
popa
lock
aas
or
mov
jge
pop
jns
add
stos
sti
jbe
cmc
rcrb
ja
aas
rcll
test
push
mov
add
loope
mov
std
rorl
cld
je
jo
dec
repnz
rcr
and
popa
mov
dec
jg
in
mov
mov
or
inc
adc
add
leave
rcll
sti
or
loope
sbb
mov
mov
mov
jo
dec
push
imul
nop
ljmp
fldt
sub
pop
cmp
and
icebp
rclb
pushf
mov
adc
popa
lods
das
out
jmp
and
pusha
cli
or
imul
and
mov
fldenv
aam
mov
mov
cmp
mov
jmp
aad
test
adc
int3
daa
jns
mov
inc
aas
or
icebp
jo
fwait
sub
fildll
dec
pop
fildl
pop
fnstenv
cld
inc
lahf
cmc
cmp
add
out
cld
pop
imul
in
dec
cs
add
add
stc
inc
add
sbb
rcrb
mov
insb
imul
sbb
fcoml
cld
in
mov
stos
shl
sti
fcmove
jb
test
fsubrl
push
loope
dec
and
add
clc
fndisi(8087
mov
add
and
inc
adc
or
imul
sbb
fsubr
jno
dec
sbb
mov
mov
pusha
push
or
cmp
sub
pop
popa
sub
imul
lock
jmp
iret
loopne
mov
in
adc
xchg
pop
jmp
xchg
lock
xor
inc
mov
repnz
add
mov
mov
in
mull
icebp
enter
sub
pusha
inc
adcl
or
mov
push
pushf
addl
dec
sbb
xchg
ret
movb
dec
sbb
out
ret
ret
nop
cmp
sbb
inc
cld
sub
push
into
pushf
sub
push
push
scas
cld
or
mov
mov
jne
cmpsl
icebp
aam
loop
es
and
add
fisubrl
sub
jno
imulb
dec
xor
ja
fdiv
or
pop
in
mov
cmp
mov
pop
pop
popa
adc
xor
js
fdivrl
hlt
pop
fistpll
jae
pop
adc
insb
es
sub
cmp
cld
add
mov
lret
fwait
adc
mov
jmp
xor
mov
or
in
fwait
inc
test
lahf
in
fwait
jg
or
into
loopne
adc
lods
push
lahf
cmpsl
or
xor
out
popl
cmp
push
xchg
insb
dec
arpl
cmp
or
loope
lret
adc
mov
insb
cmp
xor
and
push
sbb
mov
add
jge
pop
cmp
xchg
clc
adc
mov
mov
jg
clc
stc
add
in
mov
cmp
sbb
inc
js
sahf
in
ja
movsl
icebp
clc
and
shlb
sub
fchs
mov
sbb
clc
or
movsb
mov
adc
in
cmp
xlat
push
cld
or
imul
lods
jns
push
insb
xchg
xchg
or
test
icebp
xchg
pop
add
pop
lods
cmp
gs
lret
mov
test
test
mov
fs
pop
in
cmp
loopne
in
fldt
push
loopne
adcb
push
mov
dec
sbb
mov
inc
mov
gs
std
or
push
popa
sub
xor
testl
pop
insl
jns
dec
xorb
sahf
adc
loop
insl
push
lds
repnz
cmp
mov
mov
pusha
push
add
cld
or
lds
nop
cmp
pop
dec
nop
rolb
hlt
clc
insb
mov
add
xorb
or
push
nop
shlb
xchg
sar
mov
adc
mov
inc
adc
loop
cli
push
sbb
mov
pop
and
add
xor
pop
adc
push
dec
stos
push
loope
and
insb
xor
daa
repnz
lret
push
lods
cld
xchg
pushf
lds
ljmp
cmpsb
dec
jp
ret
push
lods
and
sub
shll
nop
or
insb
sbb
sub
or
outsb
mov
xorb
xchg
leave
and
cmp
jge
adc
mov
daa
hlt
cmp
xlat
in
fcompl
sub
jg
inc
out
mov
xorps
shl
jbe
xchg
xor
jnp
xchg
jo
cwtl
push
mov
push
bound
enter
pop
or
xlat
in
scas
ret
loop
pop
xchg
cmp
add
in
cmp
jecxz
cld
or
loope
lea
outsl
xor
mov
nop
push
adc
insl
jl
and
jg
loopne
enter
jg
pop
adc
lods
fs
cld
or
stc
adc
mov
lods
mov
mov
dec
movsb
sub
add
jae
push
mov
xor
push
pop
xor
test
aas
shrl
int3
sub
scas
sub
ss
or
jecxz
call
outsl
add
movsl
add
sbbb
rol
aad
in
int3
outsl
in
add
jae
test
aas
shrl
int3
sub
lret
movsl
sub
cld
xor
insl
jl
movsl
sub
cld
adc
insl
jl
mov
cmp
xchg
and
movsb
push
loopne
fs
mov
cmp
xchg
and
lods
push
loopne
insb
pop
mov
cmp
xchg
and
mov
loopne
je
mov
cmp
cltd
loopne
mov
jl
in
jo
hlt
inc
dec
fdiv
mov
in
movsl
sub
cld
mov
xor
jmp
scas
int3
and
xchg
and
gs
or
bound
bound
add
cli
mov
jmp
xor
xchg
and
adc
xor
xlat
popa
mov
imul
js
fsubs
cld
or
loope
lea
outsl
xor
incl
or
int
ja
inc
cmc
stos
and
sub
pop
and
jg
loopne
enter
cmpsl
push
pop
adc
xor
in
cld
or
stc
pushf
push
test
in
cld
dec
lods
mov
pop
in
aas
lcall
les
push
sub
pop
jmp
loope
idivb
push
loop
lahf
pop
in
aas
bound
add
pop
sbb
dec
out
mov
or
adc
popf
in
int3
bound
mov
rcrl
orb
xchg
and
mov
inc
pop
sahf
push
sti
or
imul
dec
test
lods
mov
xor
in
cld
shlb
mov
push
cmpsb
sub
cld
xchg
and
fcoms
mov
push
aad
cmp
and
rclb
mov
dec
aad
cmp
and
enter
mov
mov
cmp
and
rclb
sbbb
jns
dec
sbb
cld
fbld
xor
int
ja
cmp
in
cld
add
lods
mov
test
sub
pop
imul
add
pop
ja
push
jp
mov
push
loop
add
pop
jbe
dec
movsb
repz
xchg
and
gs
or
mov
ss
push
fs
push
loop
add
pop
ja
push
jp
cmp
pop
sub
or
fdivr
or
movsb
sahf
nop
or
sbb
cld
sbb
insb
inc
int
sub
mov
ja
aaa
rclb
mov
nop
lods
scas
xchg
xlat
or
push
xchg
push
je
ret
sbb
iret
adc
jno
xor
pushf
sub
adc
mov
insb
xchg
mov
fsubrl
xchg
test
fldenv
dec
cltd
and
and
add
insb
jo
sub
xor
fwait
mov
cmp
lahf
jo
imul
ret
fwait
popa
sarb
cmp
lods
ds
xor
js
ja
push
jb
inc
hlt
gs
pop
loope
inc
rorl
cmp
sbb
mov
imul
arpl
mov
mov
or
out
sbb
jns
pop
dec
fs
xlat
popa
mov
push
leave
pop
loope
int3
negb
sbbl
xor
xchg
pop
clc
dec
pop
sub
add
popf
outsl
mov
push
pop
sub
repz
insb
mov
mov
xlat
sbb
ljmp
push
outsl
std
push
lds
push
add
shlb
shlb
inc
scas
aad
mov
dec
pop
jns
dec
fcomi
or
mov
sub
add
popf
das
dec
or
pusha
pop
std
pop
in
clc
xchg
sub
rcll
dec
outsl
sub
add
gs
push
loope
pop
shrl
cmpl
gs
pop
loope
int3
sbb
cld
in
adc
mov
flds
sub
and
inc
in
pop
mov
lods
push
cmp
out
loop
or
lds
cli
cmc
aas
loope
fmuls
or
insb
mov
sbbb
cld
jmp
je
rcrl
sub
sbb
mov
xchg
orb
int3
xor
cs
cmpsb
aas
sarl
inc
adc
mov
out
inc
cmpl
fcoml
pop
test
ret
mov
push
jne
out
mov
jl
into
pop
aas
lea
and
jns
mov
aaa
pop
xchg
adc
insb
cltd
sub
inc
movsl
jne
fsubrl
test
addl
faddl
or
test
rcr
push
in
or
xchg
cld
and
pop
lods
cld
mov
out
fs
pop
in
cmp
pop
hlt
cld
or
or
rcrl
fildll
shlb
mov
iret
pop
inc
rorb
pop
insb
adc
inc
mov
dec
jecxz
lock
insb
mov
xchg
push
add
lds
or
push
dec
loope
fdivrs
mov
pop
and
sub
pop
push
test
mov
sub
rcll
xchg
inc
in
push
xchg
enter
repnz
push
adc
dec
fcoml
pushf
sub
shll
and
icebp
or
shl
mov
dec
imul
inc
and
cmp
cmp
ficompl
mov
aam
xor
jns
test
lods
cmp
or
sub
mov
inc
xor
repnz
or
mov
and
mov
mov
or
mov
pop
shll
sub
shlb
inc
je
or
cltd
inc
stc
icebp
hlt
call
jnp
sbb
push
xor
repnz
or
mov
and
pop
or
cmp
icebp
hlt
pop
sub
or
xchg
lods
cmp
or
push
jmp
pushf
sub
push
js
xchg
adc
sub
jno
nop
lds
fsubrl
daa
das
loopne
pop
in
cmp
cmpsl
icebp
add
cmp
das
cwtl
mov
mov
fwait
stos
ja
mov
push
mov
inc
ret
push
inc
stos
fsubl
pop
or
lock
in
cmp
sbb
inc
add
mov
dec
jmp
jl
pop
jmp
pop
sbb
clc
or
movsb
push
cmp
clc
mov
sar
xchg
sub
or
pop
in
cmp
jns
test
inc
cmc
fxch
pushf
sub
jmp
inc
add
xchg
enter
out
adc
in
cmp
cld
dec
pop
fndisi(8087
mov
add
pop
sbb
add
dec
mov
int3
pop
lock
adc
ja
inc
and
sbb
dec
add
xchg
sub
popa
clc
fdiv
or
and
add
xchg
or
dec
dec
fsubrl
mov
lea
sbb
test
stc
inc
mov
in
cmp
sbb
jno
sub
dec
into
mov
xlat
popa
cwtl
pusha
scas
fsubrl
daa
in
inc
dec
mov
sub
icebp
or
mov
in
xchg
in
cmp
sub
insb
sbb
loope
mov
jne
mov
mov
test
pop
pop
lock
repnz
xor
add
fdiv
add
and
clc
lds
gs
push
loope
add
cmp
das
popa
add
out
and
pushf
scas
loope
pop
mov
cmp
cld
cmp
push
or
sub
movsl
icebp
aam
popa
inc
mov
mov
adc
std
or
insb
inc
adc
dec
aad
orb
movsb
sub
sbb
push
popl
mov
add
imul
inc
sub
lock
cmp
sbb
out
addr16
xor
sub
mov
sbb
push
aad
roll
adc
out
inc
xlat
pop
mov
in
inc
icebp
jl
stos
mov
cwtl
and
dec
sbb
cld
jbe
les
shrl
lods
pusha
cmpsl
icebp
or
dec
jl
adc
in
cmp
sub
inc
sbb
fmul
lret
adc
js
in
cmp
loopne
xchg
out
xor
pushf
mov
cmp
sub
sub
push
pop
dec
jg
or
sbb
stc
out
rcll
dec
cmp
or
idivl
aam
mov
adc
push
jnp
popa
aam
popf
sbb
xchg
mov
enter
inc
iret
cltd
mov
push
in
rorl
icebp
cwtl
out
inc
dec
imul
mov
aaa
dec
and
cmc
in
push
jmp
xor
and
in
and
mov
pushf
sub
nop
adc
fldenv
das
push
aad
cmp
loop
inc
cmpsb
dec
xchg
lret
adc
dec
cli
in
cmp
jnp
push
xchg
ror
push
call
lock
dec
sbb
mov
fsubrl
stos
mov
mov
ja
jo
xor
mov
jecxz
xor
insb
push
cli
je
mov
mov
pop
in
cmp
movsl
sar
or
insb
inc
adc
dec
pop
in
ja
pop
lahf
stos
sti
orb
xor
shlb
pop
iret
xor
add
pop
test
nop
pop
popa
dec
mov
lods
cld
or
mov
aam
insb
jl
pop
jmp
jmp
mov
int3
pushf
sub
push
push
fistpll
pushf
sub
add
sbb
or
sub
gs
shl
hlt
dec
sbb
cld
iret
das
mov
jl
data16
lea
mov
les
xor
iret
pusha
jne
pop
jne
mov
ss
jl
sub
insb
aaa
inc
xor
rolb
pushf
sub
mov
pop
pusha
pop
test
das
mov
jmp
jmp
movsl
fistpll
fsubrs
clc
dec
pop
sub
push
bound
enter
pop
or
xlat
in
scas
ret
loop
pop
xchg
cmp
add
in
cmp
jecxz
cld
or
loope
lea
outsl
xor
mov
nop
push
xor
insl
jl
and
jg
loopne
enter
jg
pop
adc
int3
outsl
in
cld
or
stc
xor
mov
lods
mov
insl
jl
scas
sub
add
jae
push
mov
xor
push
pop
xor
test
aas
shrl
int3
sub
scas
sub
ss
or
jecxz
call
outsl
add
movsl
add
sbbb
rol
loopne
in
int3
outsl
in
add
jae
test
aas
shrl
int3
sub
jmp
sub
cld
push
xor
jl
mov
cmp
jo
cld
xor
lods
mov
pop
mov
cmp
xchg
and
movsb
push
loopne
fs
mov
cmp
xchg
and
lods
push
loopne
insb
pop
mov
cmp
xchg
and
mov
loopne
je
mov
cmp
cltd
loopne
mov
jl
in
jo
adc
dec
fdiv
mov
or
sub
cld
lods
xor
and
xor
xchg
and
gs
or
bound
bound
add
cli
mov
jmp
xor
xchg
and
adc
xor
xlat
popa
mov
imul
js
fsubs
cld
or
loope
lea
outsl
xor
incl
sub
int
ja
inc
cmc
stos
and
sub
pop
and
jg
loopne
enter
cmpsl
push
pop
adc
push
jno
cld
or
stc
mov
movsb
mov
cmp
jno
cld
insb
xor
lahf
pop
in
aas
lcall
les
push
sub
pop
jmp
loope
add
push
loop
lahf
pop
in
aas
bound
add
pop
sbb
dec
out
mov
or
adc
loop
in
int3
bound
mov
rcrl
orb
xchg
and
mov
inc
pop
sahf
push
sti
or
imul
dec
test
lods
mov
push
mov
cmp
jno
cld
loopne
lods
mov
jo
sub
cld
xchg
and
fcoms
mov
push
aad
cmp
and
rclb
mov
dec
aad
cmp
and
enter
mov
mov
cmp
and
rclb
sbbb
jns
dec
sbb
cld
fbld
xor
int
ja
pop
jb
cld
and
lods
mov
enter
xlat
popa
mov
imul
add
pop
ja
push
jp
mov
push
loop
add
pop
jbe
dec
movsb
repz
xchg
and
gs
or
mov
ss
push
fs
push
loop
add
pop
ja
push
jp
insl
mov
and
jne
push
or
enter
adc
fcomps
popa
js
inc
or
test
pop
dec
pop
cs
loop
aaa
sarb
fcomip
push
test
enter
cld
pop
insb
stos
xor
mov
mov
xor
mov
rcr
and
iret
addr16
mov
mov
or
push
fsubrl
add
imul
loopne
mov
rcrl
dec
nop
rolb
hlt
imul
mov
adc
fists
or
insb
movsb
mov
jnp
sbb
fildll
jmp
inc
jl
std
dec
sub
fmull
pop
in
xor
cmpsl
lock
jg
mov
pushf
out
sbb
mov
test
jg
ret
or
cs
adc
and
pop
insb
mov
nop
ret
dec
test
rolb
fsubrl
cs
xor
jge
push
lahf
roll
addl
jmp
je
pushf
sub
or
pop
mov
movsl
icebp
cld
jbe
jl
test
cmp
jbe
or
testl
fwait
adc
xor
int3
pushf
sub
into
sahf
daa
add
fsubrl
test
mov
pop
cs
outsb
push
sti
pop
inc
jne
add
push
rorl
test
insb
mov
mov
in
shrb
add
pushf
sub
mov
daa
mov
lahf
cmc
or
es
push
rorb
popa
xor
aas
or
and
or
in
jl
imul
shll
insb
jmp
jnp
loope
mov
pop
pop
xor
int3
adc
jnp
push
stos
push
div
ret
fwait
sub
cwtl
cmc
cmp
fildl
mov
shrb
stos
jp
pop
iret
test
mov
sub
add
pop
das
jl
pop
popa
js
push
out
orl
data16
nop
leave
mov
into
adc
dec
sar
jbe
pop
and
popf
jo
mov
ja
jg
outsl
mov
pushf
cmp
jnp
push
in
cmp
sbb
adc
adc
sbb
fisubrs
xor
decl
es
andb
xchg
lods
mov
fsubrs
clc
dec
pop
sub
add
sub
enter
inc
xlat
pusha
rolb
add
and
xor
xorb
pusha
xor
outsl
xchg
push
loopne
test
fidivrs
push
sbb
setns
push
sbb
jp
jmp
ret
movsb
jl
in
in
cmp
jne
or
xchg
jae
fnstenv
jge
cld
mov
int3
push
outsl
add
mov
lcall
mov
pop
pop
iret
pop
rclb
fsubrl
fadds
xor
je
ss
jne
out
jge
rorb
pushf
mov
cld
inc
rcr
and
cltd
loopne
dec
sub
cld
mov
xor
sbb
loope
ret
je
fucompp
mov
cmp
inc
mov
js
imul
sub
add
das
ret
daa
test
pushf
loopne
mov
cmpsb
sbb
or
mov
mov
jbe
xchg
push
jl
and
xor
es
les
inc
rcr
and
push
lret
out
mov
adc
fdivl
xchg
cmp
push
push
xchg
fbstp
rclb
inc
push
repnz
outsl
std
dec
push
mov
sbb
fistl
push
aad
pop
sbb
mov
lret
pop
mov
ljmp
or
xor
pop
gs
pusha
pusha
adc
or
insb
inc
dec
sarb
sbb
xchg
sbb
shl
jne
mov
lods
mov
adc
or
insb
xor
pop
popa
iret
ljmp
add
add
xchg
getsec
inc
xor
sbb
pop
and
pop
in
cmp
cs
push
and
sub
andl
cmp
sbb
ljmp
cwtl
add
mov
or
and
xor
cli
or
ret
scas
insb
mov
jb
mov
insl
mov
pop
rcrb
rolb
repz
fsubrl
adc
jae
pop
in
cmp
xchg
jb
and
test
mov
add
pop
popf
mov
or
insb
inc
jecxz
xor
adc
fistpll
and
xor
incl
lods
xchg
jmp
inc
cmp
je
lret
adc
roll
sub
icebp
or
push
jl
adc
xor
mov
cld
pop
int3
pushf
scas
inc
cwtl
pop
cmp
xlat
or
add
and
pushf
pop
mov
mov
xchg
cmp
and
pop
inc
mov
stos
imul
aam
add
add
pop
out
push
mov
jl
mov
xor
sub
cld
or
loop
mov
je
mov
mov
rcr
sub
stos
imul
sbb
inc
pushf
add
jmp
fucomi
and
pushf
test
push
fists
dec
jnp
mov
pop
repnz
push
aaa
pop
adc
cmp
and
hlt
mov
dec
insb
in
fsubrl
adc
andl
xchg
cmc
add
xchg
inc
shll
dec
dec
sbb
call
loop
mov
and
mov
push
xchg
sahf
jle
push
inc
cmp
fldt
dec
movsb
push
cli
nop
pop
sub
xchg
pop
push
nop
decb
aaa
mov
ret
adc
dec
xchg
or
xor
lock
sbb
jb
adc
jo
add
pop
xchg
loop
push
test
hlt
or
mov
movsb
lahf
jmp
push
movsl
icebp
adc
and
sbbl
or
lods
pop
orb
clc
pop
xlat
jecxz
into
aaa
and
test
popa
loope
fmuls
pop
xor
xor
fwait
mov
cmp
xchg
jl
fsubrl
test
jb
push
mov
add
ljmp
sub
sub
lahf
movsb
lcall
popa
outsb
mov
cvtps2pd
dec
shr
lods
cld
or
loope
mov
inc
jl
out
xchg
shl
mov
mov
rcrl
xlat
cltd
mov
arpl
push
xchg
pushf
sub
push
push
add
adc
insb
mov
mov
sbb
test
and
cmpb
mov
fsubrl
stos
sti
pop
ror
pushf
sub
xchg
out
xor
sar
pop
xor
push
fwait
mov
aas
mov
or
jmp
mov
mov
stos
adc
xchg
mov
add
mov
clc
push
pop
xor
into
daa
repnz
fnsave
stos
sti
and
sub
mov
shll
int
add
es
scas
inc
sub
sbb
add
fsubrl
adc
push
cmp
xchg
fndisi(8087
sub
pop
in
mov
jb
int3
sbb
cmc
cmp
xchg
pop
jmp
xor
xor
sub
andps
dec
shrl
lods
cld
or
push
inc
stos
mov
add
pop
lahf
xchg
in
neg
int3
sub
sub
mov
ret
and
cld
cltd
and
pop
loope
int3
mov
hlt
and
cmp
out
sbb
pop
mov
clc
in
cmp
push
loope
and
insb
das
and
sub
dec
xchg
mov
jo
pushf
sub
push
insb
jno
shlb
jns
sahf
adc
in
rcrl
and
sbb
addr16
pop
ja
pushf
sbb
add
shlb
add
mov
add
sbb
in
sub
dec
jb
cld
or
mov
adc
cmp
adc
sti
sbbb
jb
pop
or
and
xlat
loop
sti
and
sub
pop
popa
dec
dec
xchg
test
sar
insb
mov
mov
xchg
int3
fwait
inc
loopne
sahf
in
movl
mov
mov
fwait
cli
or
ret
lods
sub
adc
sti
or
stos
out
mov
sub
jno
rcrl
std
push
xor
dec
sbbb
shl
cmpsb
dec
sbb
inc
sti
and
add
mov
lahf
jmp
mov
rep
in
cmp
faddl
sbb
div
aas
je
ss
mov
mov
jnp
cmp
rolb
dec
and
cmp
negb
jo
call
sub
push
push
sub
adc
dec
jo
sub
mov
xlat
push
sub
lock
out
jge
fsubl
aaa
add
mov
cmp
sub
fcompl
mov
nop
add
and
xchg
sbb
dec
add
push
in
sbb
cld
sub
mov
mov
leave
lds
xchg
or
sub
mov
cmpsl
clc
and
shrl
lock
out
jge
out
and
repz
lea
fisubl
push
movsl
ret
jg
loopne
mov
lea
mov
xchg
in
out
jge
inc
sub
frstor
shr
and
nop
shl
jecxz
pop
sub
mov
inc
fisubrs
mov
mov
pop
mov
adc
aam
jae
mov
aaa
inc
xor
lret
jg
mov
shlb
cwtl
dec
pop
xor
inc
dec
test
sub
insb
ja
push
movsl
sub
xchg
fcomi
add
daa
or
xchg
lods
and
xchg
push
andb
loop
mov
xor
inc
and
jae
adc
ja
pop
popf
lea
daa
jb
adc
pop
xchg
aaa
idivl
divl
xchg
aam
xor
stos
and
dec
pusha
cmp
aaa
out
and
inc
xchg
adc
shlb
cmp
mov
out
cmp
pushf
mov
push
inc
xchg
rolb
daa
daa
rorl
sub
jne
fsubrl
test
je
shlb
cmp
inc
mov
sub
out
inc
mov
fcmovu
int3
pushf
test
test
mov
sbb
add
and
dec
fcomi
add
fdiv
xchg
jl
mov
sbbl
or
mov
out
adc
das
loope
mov
sub
mov
jmp
xor
cld
aam
xor
fwait
inc
xor
idiv
or
out
test
pop
aam
add
xorb
jo
mov
sub
mov
push
les
mov
dec
pop
mov
inc
xor
ja
inc
mov
enter
xorb
into
add
notl
dec
ja
aaa
pop
aaa
les
lock
mov
mov
jge
ffree
cmp
jo
dec
ja
inc
adc
xchg
movsb
testl
sub
rorb
in
ret
pop
loopne
mov
pop
cmp
cmpsl
jb
addr16
jl
cwtl
push
mov
and
out
xor
daa
js
pushf
out
pusha
pop
dec
jle
std
addr16
aam
sbb
daa
pushf
cmpsl
je
push
sarb
rolb
xchg
imulb
and
out
xor
inc
nop
int3
iret
insl
sahf
mov
mov
dec
ret
and
or
nop
les
push
shlb
xlat
inc
xor
xchg
lock
push
xorl
dec
ja
or
test
mov
sub
das
or
loopne
cmpsl
in
stc
mov
sub
aam
mov
xchg
int3
and
inc
pusha
pop
cmpsl
lock
out
cmp
jecxz
shlb
imulb
aam
gs
call
lods
mov
cmpsl
clc
and
mov
loopne
jae
out
nop
inc
mov
cmpsl
or
addb
inc
rolb
insl
add
inc
daa
xchg
mov
mov
rorb
out
pusha
adc
mull
rolb
into
repz
inc
mov
mov
jnp
xchg
push
xor
xchg
addr16
jle
pushf
addl
es
lods
dec
aas
mov
jg
stc
sub
lods
out
inc
xlat
in
in
sbbb
dec
xchg
clc
xchg
fsub
mov
and
add
mov
xchg
mov
decl
inc
imul
sub
mov
hlt
xchg
pushf
add
inc
or
divl
shlb
xor
sti
or
das
adc
mov
in
mov
push
je
lret
rcrl
pop
aam
xchg
sbb
jg
cld
icebp
jl
test
popa
inc
xor
cmpsl
sti
or
adc
jae
jmp
xchg
and
pop
push
xor
dec
pop
sub
or
lock
and
ja
xlat
cwtl
rorb
mov
sahf
iret
adc
lea
shlb
or
loope
adc
je
test
push
jge
push
mov
repz
mov
push
pop
push
mov
dec
out
mov
push
push
xchg
scas
jae
push
pop
ficompl
xchg
dec
push
jge
sbb
popa
xor
pop
adc
je
xchg
scas
xor
xchg
insb
mov
jmp
les
stos
fbstp
mov
push
stos
fs
add
mov
push
lcall
jge
jl
pop
insl
push
dec
sbb
cld
inc
lods
loope
adc
mov
pop
sub
or
xor
jl
out
pusha
push
jb
ret
paddusb
adc
push
xchg
mov
mov
mov
inc
pop
ljmp
fistpl
and
rolb
or
xor
and
lock
sbb
push
mov
insb
mov
ja
outsl
sub
mov
sti
fists
dec
mov
pop
add
lods
cld
or
jne
movsl
pop
adc
pop
xor
sbb
lahf
inc
jecxz
jne
scas
push
mov
dec
sbb
jno
addr16
jge
sahf
mov
sbb
and
hlt
rcll
and
lock
movsl
popa
das
aam
pop
pop
xchg
and
xchg
pop
mov
or
shl
mov
cmp
cmpsl
mov
fcompl
mov
mov
in
sbb
lock
mov
add
stos
cld
sub
jle
pushf
sub
add
jne
xlat
pusha
rorb
cmp
jg
and
xor
movsb
add
addr16
jg
and
cld
xchg
stos
jnp
push
xchg
enter
int3
push
rorl
xchg
out
mov
stos
mov
mov
lods
fsubrl
pop
dec
gs
jns
mov
ss
addr16
ljmp
aas
or
ja
pop
test
xchg
aaa
es
adc
pop
insb
inc
shl
dec
inc
adc
inc
xlat
fists
rorb
pushf
mov
dec
push
hlt
dec
add
mov
xor
sbb
xchg
xor
adc
add
adc
cld
cltd
sub
iret
in
jl
shll
dec
push
push
fcoml
pushf
sub
push
jl
cld
ror
ret
jnp
adc
xor
pop
sar
clc
int
je
sti
mov
push
pop
mov
push
iret
imul
jl
rclb
jg
ss
xor
mov
test
mov
inc
inc
fisubrs
iret
push
cmpsb
outsb
mov
sarb
repz
fildll
adc
xchg
decl
mov
mov
lods
movl
gs
mov
mov
add
sbb
in
cmp
or
insl
mov
mov
shl
pop
cvttps2pi
fisubrs
mov
shlb
rorb
xor
push
xchg
inc
mov
adc
shlb
mov
inc
mov
xlat
shrb
aaa
das
dec
push
lcall
dec
jp
push
iret
imul
mov
xchg
push
js
movsb
pop
cmp
jmp
push
add
subb
loop
pop
sbb
scas
into
out
imul
and
jno
sbb
cmp
rorl
in
xchg
stos
fistps
pop
jbe
cmp
lock
lahf
outsb
insb
out
dec
mov
and
sub
fstpl
pushf
push
pop
mov
mov
iret
cmp
xchg
dec
in
fsubl
aaa
xor
mov
dec
sbb
cld
scas
mov
mov
dec
sbb
or
insb
and
mov
in
cmp
lahf
jo
iret
inc
insb
es
fwait
mov
cmp
sbb
rcrb
mov
mov
aam
dec
sbb
jg
call
mov
dec
xchg
mov
mov
mov
cld
pop
nop
enter
fdivs
cmc
icebp
cld
xchg
stc
push
xchg
adc
orl
adc
loope
rcrb
int
ja
mov
xor
fwait
cld
jp
daa
jno
or
cld
jg
lret
mov
or
dec
add
cld
or
lds
mov
and
xchg
adc
and
insb
jmp
jo
xor
mov
into
pop
dec
jmp
pop
loopne
fmuls
cmp
xchg
loope
mov
sbb
loopne
test
js
outsl
mov
imul
push
pop
mov
xor
jne
sbb
inc
mov
icebp
cwtl
loope
mov
xchg
add
cwtl
fcoml
dec
pop
out
out
addr16
push
pop
mov
mov
inc
fdiv
jg
fwait
sub
mov
xor
ss
xchg
cmp
rorl
jl
or
lret
dec
xchg
mov
xchg
fsub
push
daa
xor
dec
adc
mov
cwtl
pushf
insb
je
xchg
jnp
mov
cmc
add
and
lock
imul
push
into
daa
sub
fistps
dec
xor
cmc
cld
or
mov
dec
pusha
cmp
mov
in
xchg
and
pop
sbb
jbe
sbb
pop
dec
cmpsl
sub
xchg
fneni(8087
or
xchg
sahf
les
flds
cmp
cmp
testl
or
roll
and
lods
cld
xchg
and
mov
push
cmpsl
sub
fneni(8087
add
loope
mov
iret
out
cmp
stos
jno
xor
pushf
sub
push
push
xchg
and
pop
addb
inc
cmpsl
dec
xchg
mov
dec
cmpsl
pushf
push
pop
xor
pushf
sub
push
push
aaa
inc
and
sub
iret
sbb
jl
mov
aaa
call
pop
daa
mov
dec
insb
out
fstpt
pop
add
push
xchg
mov
sbb
and
xchg
mov
xchg
xchg
push
aam
xor
and
ret
enter
dec
imul
mov
and
aas
mov
lods
ss
sub
mov
jmp
jo
stos
jo
in
push
ror
sub
push
insb
scas
xchg
xlat
or
call
les
imul
aas
or
inc
mov
pop
shrb
adc
push
dec
add
sub
in
sti
pop
xor
aas
or
and
mov
jno
shlb
sbb
cmp
leave
mov
mov
repnz
adc
inc
mov
popa
cmp
popa
mov
dec
int
sub
test
ror
lods
cld
aam
lret
pop
push
sub
rorl
xor
arpl
xchg
pop
in
cmp
dec
add
loopne
or
mov
inc
dec
sbb
out
gs
icebp
mov
cs
loopne
or
mov
adcb
imul
xchg
mov
cmp
movsl
icebp
lock
sbb
mov
push
mov
add
fstl
insb
mov
sub
cmpsb
mov
mov
xor
dec
daa
outsl
and
dec
add
jecxz
aam
sbbl
gs
ja
in
outsl
jl
out
lods
outsl
jecxz
mov
in
adc
rcrl
xlat
in
in
pop
mov
icebp
test
cmp
push
and
jle
loope
dec
sub
xchg
and
mov
cmp
add
aad
movsb
xchg
imul
es
gs
jmp
xlat
imul
adc
xchg
in
test
insb
jno
shlb
inc
adc
mov
dec
add
ja
loop
push
aam
sti
or
fadd
pop
sub
shlb
mov
push
rcrl
jne
adc
and
and
push
rcrl
dec
sbb
add
lods
mov
mov
cmc
mov
push
jmp
icebp
xchg
sbb
mov
test
lds
ja
adc
jne
jg
or
movsl
das
es
mov
pusha
pop
sbb
and
push
mov
pushf
pop
mov
push
xchg
pop
je
mov
cmc
jnp
or
inc
sbb
pop
push
aam
lock
lods
daa
dec
cmpsl
jae
imul
jnp
pop
in
jle
mov
xorl
lods
rorl
dec
hlt
lock
mov
mov
pop
cld
aaa
call
aam
pop
ret
ja
fldenv
dec
or
mov
mov
and
hlt
enter
scas
inc
movsb
out
fwait
stos
jns
enter
mov
sub
push
bound
testl
gs
inc
xlat
adc
mov
iret
addr16
pop
sar
das
repnz
repnz
aas
movsl
cmpsb
add
adc
lock
movsl
xor
push
push
xor
mov
pop
les
jo
addr16
lock
fucomip
cmp
push
push
leave
loopne
pop
sub
mov
xchg
mov
fsubrl
rolb
pop
inc
and
push
lods
cld
xchg
and
je
mov
sbbb
movsb
or
adc
jb
pusha
popa
inc
adc
cld
push
fsubrl
adc
mov
cld
and
bound
xchg
pop
and
fwait
icebp
lods
test
fstl
xchg
adc
add
jnp
mov
mov
and
sub
gs
push
loope
fs
cmp
cmp
popa
nop
mov
mov
icebp
cwtl
lods
aam
xchg
sbb
jg
in
xor
pop
nop
mov
jmp
nop
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
repnz
sbb
notb
rcrl
int
stos
cld
or
cmc
leave
test
jl
cmp
mov
jge
lods
iret
sub
mov
xchg
insb
push
fsubrl
pop
mov
in
dec
sbb
push
xchg
push
push
jl
jno
cmp
sti
and
repz
das
dec
lds
or
push
xor
pushf
sub
xchg
push
jmp
aad
jl
push
cmpb
inc
hlt
nop
dec
sbb
inc
test
mov
int
xor
dec
xchg
pop
and
sub
pushf
add
and
fcomi
add
jb
pop
jmp
xchg
or
add
in
or
shrb
outsl
xchg
imul
test
mov
jns
cmc
icebp
cld
or
imulb
mov
adc
sbb
cld
or
imul
cs
jne
jg
aam
add
popf
mov
cmp
sbb
and
les
int3
pushf
test
mov
dec
xor
dec
fsubrl
pop
int3
jbe
jl
sbb
dec
dec
nop
rolb
or
out
mov
outsl
or
add
int3
pop
push
jl
jno
cmp
sbb
jge
sub
xor
daa
je
adc
ss
es
or
mov
lea
sub
fsubrl
ja
jnp
loope
cmp
decl
aam
lret
fwait
sarb
push
jl
out
cld
xchg
pushf
loopne
dec
pop
movsb
jnp
pop
out
mov
lahf
imul
movsb
xchg
jge
inc
out
cmp
loopne
imul
lods
push
mov
and
dec
and
mov
sub
cmp
dec
xchg
lret
aam
push
jns
jmp
pop
cmpsb
lods
cmp
je
inc
sbb
test
in
jge
xor
inc
test
fadd
push
inc
mov
in
fldt
nop
test
cmp
fs
and
stos
sti
mull
sub
pusha
in
cmp
insb
sti
and
int3
aam
loopne
pop
jmp
flds
jg
int
clc
xchg
cwtl
mov
int3
test
mov
cmp
imul
adc
mov
ljmp
fwait
sub
pop
inc
mov
pop
aaa
les
lret
addr16
nop
in
daa
dec
pop
in
or
adc
test
mov
push
push
mov
les
in
mov
test
add
lret
fwait
lods
stc
mov
push
or
insb
jmp
das
out
mov
sub
rolb
lods
cld
sbb
or
mov
jge
pop
jno
out
pusha
fwait
inc
or
mov
jnp
push
out
fists
aam
iret
pushf
sub
mov
in
cmp
pop
mov
add
loope
mov
aaa
jl
loope
mov
sbb
inc
sti
and
adc
mov
mov
add
je
insl
mov
shll
nop
or
insb
inc
mov
push
cmp
adc
lock
andl
or
pushf
mov
int3
dec
xor
and
jmp
fdivrl
pushf
test
sub
test
pop
add
sub
add
sbb
rolb
aaa
sub
cmp
mov
repz
aas
pushf
das
adc
scas
push
lahf
jb
jno
lods
int3
and
sub
push
pop
pop
mov
fstpl
test
sahf
sub
sbb
in
orb
test
test
adc
add
in
pop
mov
ja
dec
movsl
add
xchg
xor
mov
push
inc
and
jg
sbb
mov
xlat
pusha
daa
xchg
jg
cld
xchg
getsec
test
aas
push
jo
xchg
rcll
cltd
and
adc
lods
push
sub
mov
mov
add
scas
lea
pusha
sub
mov
mov
cmpsl
stc
add
xor
mov
cwtl
inc
out
cltd
sbb
dec
adc
mov
out
ja
pop
movsl
stc
clc
xchg
ss
push
movsb
mov
xchg
out
std
inc
and
jg
sbb
mov
jmp
movsl
or
sbb
mov
test
dec
xor
pop
mov
dec
gs
pop
cli
addr16
add
sbb
movsb
xchg
gs
mov
bound
xlat
repnz
cmpb
or
daa
popf
add
hlt
mov
lahf
cmpsl
sbb
clc
sub
das
fidivl
and
mov
pop
fldenv
aaa
cmp
inc
in
lcall
xorl
lock
lods
cld
or
mov
pop
fldenv
push
cmpsl
stc
or
mov
cmp
lea
or
daa
mov
cltd
push
lahf
sub
or
je
cmpsb
stos
mov
mov
cltd
or
pop
fucom
stc
enter
adcb
aaa
dec
adc
les
xor
push
mov
sub
mov
fsub
lret
sub
or
mov
aaa
cmpsl
stc
add
cmc
daa
mov
push
das
xlat
leave
nop
aam
add
dec
stos
sub
pushf
jmp
lods
cld
mov
xor
sbb
sbb
cld
mov
lock
pop
cmc
dec
xlat
popa
test
adc
in
enter
mov
inc
sbb
cld
lods
adc
int3
and
mov
cmp
cmp
cmpsl
mov
inc
add
dec
dec
fs
mov
mov
mov
pop
add
in
cmp
out
xchg
add
mov
mov
orl
or
sub
sub
cmpsl
in
or
and
pop
add
cld
mov
adc
cmp
outsl
mov
sbb
gs
inc
insb
mov
sub
sbb
jbe
imul
mov
mov
cmp
sbb
xor
and
fcomps
rorl
xchg
jge
stos
adc
sub
sub
shrl
outsl
add
mov
not
rcrb
rorl
popf
dec
lret
mov
outsl
int3
sbb
mov
xor
fsubr
push
fmull
lock
mov
jmp
lock
pop
mov
outsl
add
or
mov
xchg
in
cmp
fs
jg
int3
cmc
or
in
leave
sub
lret
pop
aas
sbb
dec
iret
fisttpll
lahf
test
xor
dec
fwait
inc
or
inc
imull
jne
xchg
out
pop
aam
mov
nopl
ja
sbb
imull
cwtl
mov
adc
jns
outsl
and
rclb
leave
test
inc
sbb
push
mov
mov
daa
add
push
je
mov
fsts
and
xchg
mov
xchg
push
stc
xor
cltd
fbld
dec
xchg
mov
iret
lock
stos
pop
je
mov
cmp
cmpsl
test
inc
mov
fs
in
cmp
cmpsl
testl
arpl
cld
xor
gs
mov
insb
ja
iret
push
stos
test
loopne
push
sub
enter
pop
aam
mov
pop
in
mov
dec
sbb
insb
push
inc
mov
adc
push
pop
in
leave
xchg
pusha
mov
xchg
push
pusha
xor
daa
mov
cmp
pop
sub
mov
xor
xlat
jno
xchg
packssdw
mov
js
nop
sbb
pusha
inc
sbb
lahf
pop
sar
fsubrs
fsubr
jmp
push
out
addr16
adcb
pop
mov
popf
test
sub
jp
cmpsb
mov
repz
mov
nop
xchg
ss
sarl
sub
xchg
ja
pushf
sub
pop
sub
mov
and
je
aad
xor
or
loope
push
stc
xor
inc
aaa
dec
cmp
xchg
insb
mov
pop
test
mov
cwtl
xor
jne
dec
aad
cwtl
jno
addr16
les
sbb
xlat
jns
xchg
divl
rcrb
test
inc
xlat
data16
xchg
cmc
xor
mov
cltd
adc
js
loopne
enter
adcb
aaa
inc
adc
les
xor
push
mov
test
mov
adc
loope
mov
and
insb
cmp
push
imul
call
out
fisubrl
add
lock
test
insb
mov
pop
pusha
ja
dec
test
insb
mov
mov
pop
or
inc
xchg
adc
add
dec
pop
scas
xchg
divl
mov
pop
jne
aad
fdivrp
xchg
push
pusha
inc
fisubl
cmc
or
ss
inc
lret
mov
inc
scas
mov
mov
lods
jno
pop
xchg
lock
test
out
add
movl
je
icebp
cld
bound
lahf
mov
sbb
scas
dec
or
test
adc
orl
notl
test
orl
pop
add
jno
pop
imul
rorb
es
xor
mov
cmp
fildl
mov
in
dec
rolb
je
mov
pop
inc
cmp
lods
ds
xor
test
nop
mov
cld
xchg
dec
push
lock
fsubrl
pop
pushf
outsb
jl
sbb
push
iret
push
sti
xchg
sbb
cmp
fwait
xor
sub
add
xor
sub
pop
js
ja
push
outsl
add
dec
jl
or
sbb
inc
sbb
addr16
or
in
xchg
fldenv
insb
inc
adc
sub
iret
fdivl
mov
gs
mov
mov
cmp
pushf
cmpl
in
jle
mov
xor
mov
sub
mov
cmpl
lods
aaa
push
push
test
adc
les
sub
fistpl
dec
dec
sbb
add
fs
les
sbb
in
sbb
insb
ror
sub
sbb
xchg
stc
or
mov
push
cmp
xchg
sbb
mov
xchg
in
inc
iret
orb
sub
pushf
sub
push
mov
insl
or
mov
push
ljmp
push
sbb
cld
mov
mov
popf
fsubl
stos
jp
imull
fldenv
pop
outsl
add
pop
js
mov
lods
clc
lea
loop
popf
push
lret
push
xchg
inc
nop
pop
in
cmp
test
inc
or
nop
mov
mov
mov
dec
dec
aad
add
stos
sbb
insl
lret
push
jmp
jl
pop
lds
sub
inc
or
cwtl
in
jne
movsl
outsl
xor
and
sti
and
mov
and
mov
jmp
sub
mov
mov
mov
jo
lahf
mov
cmc
mov
cmpsl
stc
add
cmc
push
loopne
pop
or
mov
pop
pop
aaa
dec
add
mov
popf
sub
mov
dec
sbb
add
aam
test
stos
and
rclb
add
pop
inc
jp
pop
fsubr
cmp
pushf
cmp
ss
in
cmp
cltd
test
pop
call
mov
cmp
cmp
sbb
sub
adc
and
int3
push
cmc
xor
xlat
pusha
ja
push
movsl
testl
movsb
mov
inc
iret
sbb
test
push
push
call
insb
mov
fsubrl
daa
sti
dec
ja
cmp
cmp
and
mov
pop
inc
adc
imul
cltd
and
push
adc
dec
nop
pushf
sub
sbb
lods
jl
jne
push
icebp
cmp
fstps
cmpb
add
sub
mov
mov
cwtl
jmp
test
push
push
movsl
adc
aad
dec
sbb
or
daa
mov
lcall
out
enter
adc
and
test
out
mov
lret
mov
mov
mov
mov
mov
jbe
lret
mov
xor
fsubrl
daa
cli
dec
ja
pusha
inc
push
adc
push
adc
fs
dec
in
xchg
insb
mov
sbb
int
pushf
mov
xor
inc
insl
jne
xchg
testl
adc
and
jae
gs
push
adc
add
mov
sti
inc
lahf
xchg
mov
xlat
cwtl
popf
add
mov
inc
inc
xlat
addr16
gs
pop
rcl
ja
add
das
cli
sub
mov
enter
pop
int3
cltd
mov
mov
pop
das
fcmovnb
cltd
and
xor
xchg
daa
jno
sub
or
jl
sbb
mov
cmp
jo
push
sub
jl
pop
jns
sub
lods
cld
or
aas
cmpsb
aad
mov
pushf
in
lds
xor
sbb
gs
dec
or
jle
sbb
push
bound
loope
mov
mov
insb
cmp
cld
jbe
imul
mov
mov
cmp
sbb
in
xchg
sarb
fcomps
jo
mov
add
mov
int3
pop
push
cmp
icebp
aaa
hlt
xchg
fstpt
mov
pusha
cmpsl
cmp
sbb
insb
mov
adc
sar
lods
cld
les
int3
xlat
sbb
stos
fildll
faddl
lods
cld
and
sub
leave
add
jle
sbb
sbb
xchg
xchg
std
nop
xor
mov
pop
shlb
insb
fldenv
stc
dec
fs
sub
adc
xor
dec
sbb
int3
push
loop
scas
jns
fnstsw
sbb
into
fnstcw
pop
jbe
pop
cmpsb
xor
pop
movsl
hlt
add
pushf
xor
iret
mov
add
les
cmp
shrb
xchg
pop
mov
mov
shll
adc
in
or
insb
cmp
mov
adc
shll
insb
mov
mov
popf
stos
pushf
add
insb
xor
repnz
jl
xchg
xor
xchg
sbb
adc
mov
jmp
nop
rolb
fsubr
mov
add
int3
sbb
sub
setl
fisttps
out
cld
fimull
push
pushf
mov
pop
jb
cld
xchg
in
ret
xor
nop
or
cld
or
cld
mov
punpckhwd
iret
xor
test
out
addb
add
jle
jae
jp
fstpt
pusha
pushf
sub
xadd
cmp
fidivrl
mov
dec
in
cmp
xchg
in
iret
inc
insb
cld
int3
pushf
das
ret
in
dec
dec
sbb
sti
and
int3
and
lock
cmp
mov
push
fdiv
add
and
lock
xchg
mov
dec
movsl
sub
or
push
mov
sbb
jmp
popa
inc
cmp
test
mov
push
test
sbb
stos
jno
push
out
jl
sbb
in
mov
adc
insb
xor
in
adc
mov
xchg
xchg
lock
fsub
dec
sbb
fwait
jmp
cmp
or
movsl
das
inc
adc
xor
sub
cs
cmpsl
jbe
dec
in
loop
pop
fldl
xchg
out
ja
nop
jecxz
cli
test
std
daa
sbb
mov
cmp
add
scas
ds
jne
xlat
nop
rorb
movsb
sarb
dec
in
addr16
jp
hlt
adc
aam
pop
cmp
pop
ja
jo
aaa
dec
xor
xchg
add
pop
and
push
xlat
push
jge
fcompl
cmp
sbb
cmp
int
mov
xchg
pusha
movb
and
movsb
xchg
mov
cmp
outsl
push
xchg
enter
repnz
dec
jo
cmp
cmpsl
add
imul
cmp
mov
push
fldcw
testl
or
pop
gs
adc
ja
push
push
ja
es
jg
faddl
dec
sbb
rcrb
sub
inc
daa
jno
adc
and
mov
insb
mov
mov
push
neg
negl
aam
jb
pop
stos
cld
leave
lret
inc
add
fs
sbb
daa
dec
xor
orb
fwait
mov
cmp
lahf
jo
xchg
pushf
loope
push
sti
xor
rcrl
dec
dec
sbb
ret
adc
jmp
jg
mov
loope
and
insb
xor
test
mov
jno
xor
cld
xor
test
pop
movsb
faddl
lods
xchg
jmp
lret
adc
decl
push
jmp
add
lock
int3
pushf
sub
je
dec
dec
iret
subl
push
sbb
mov
test
pop
cld
mov
or
push
imul
call
or
mov
rcll
rcrb
jnp
test
mov
jb
push
rcr
imul
scas
inc
cwtl
loope
pop
lcall
enter
mov
fldcw
pop
fsubs
lods
int3
pushf
sub
pushf
in
add
fdivl
fcompl
mov
addb
sub
ja
mov
rorl
addr16
mov
or
insl
test
testl
adc
inc
repnz
and
aaa
push
xchg
xor
fldt
mov
push
pop
aam
je
push
test
sub
setl
cmp
inc
jg
pop
loopne
jb
lds
fucomp
cmp
aas
pushf
lret
sbb
gs
rcll
dec
cmp
push
sbb
ret
mov
test
sbb
aaa
gs
fsts
xor
inc
lahf
ffreep
int
push
int
inc
cmc
mov
dec
in
mov
pop
pop
in
cmp
adc
or
outsb
inc
xchg
sub
dec
pop
jg
xor
xlat
orl
fimull
in
mov
pop
repnz
pop
pop
das
sbb
jno
add
lods
push
pop
mov
adc
stos
scas
adc
leave
sbb
mov
mov
insb
daa
mov
mov
jge
cmpsl
mov
sbb
inc
mov
pushf
loope
ss
mov
ja
xchg
sarl
dec
arpl
lods
fsts
movsl
lds
dec
std
xor
hlt
lds
mov
repnz
pop
lahf
mov
clc
jne
sub
xor
push
in
jg
inc
xchg
leave
push
dec
jne
mov
xlat
inc
iret
jge
cld
cltd
sbb
inc
or
fs
add
aaa
popf
push
mov
out
scas
xchg
xlat
or
xchg
mov
mov
inc
leave
and
popa
or
idivl
jecxz
cmp
pusha
test
jle
adc
in
dec
adc
in
or
insb
cmpsl
sub
xchg
pop
shll
jo
test
insb
notl
insl
daa
add
push
outsl
cld
mov
addr16
add
scas
xchg
pop
cmp
not
sbb
mov
outsl
xor
sbb
aaa
cld
dec
sub
and
repz
pop
mov
adc
call
xchg
leave
and
pushl
sub
js
pop
in
cmp
popa
test
push
xor
iret
loop
popa
dec
xlat
bound
pop
jl
pop
xchg
jl
mov
adc
inc
mov
loop
pop
xchg
dec
pop
mov
testl
lcall
jg
loopne
aas
xor
out
mov
push
call
or
iret
pop
pusha
inc
int
lods
sbb
loope
pop
test
ret
mov
movsl
xchg
mov
hlt
xchg
jae
push
adc
notl
lcall
rorb
int3
filds
dec
sbb
rcrb
mov
mov
scas
ja
rolb
ja
add
out
popf
jmp
xor
mov
cmp
and
xchg
xchg
xlat
setl
mov
mov
push
cld
pop
in
int3
pushf
scas
inc
cwtl
out
inc
imul
jmp
cmp
xor
sar
or
xor
push
loope
mov
push
cli
or
jnp
adc
daa
push
sub
test
out
test
cli
xchg
dec
mov
sub
or
decb
mov
mov
mov
cmc
xor
loopne
inc
dec
sbb
dec
cld
cmpsl
aam
jns
pop
sarl
sbb
ret
lods
ja
fdivr
mov
sbb
xor
aaa
push
fistpll
mov
lock
fsubr
repz
rcrb
lea
dec
cld
fcomi
adc
mov
lds
rcrl
imul
inc
pop
push
mov
xchg
rorb
test
jnp
and
test
mov
or
mov
orb
cmp
fsubrl
cwtl
lods
shll
iret
imul
cmpsb
add
sbbl
inc
mov
mov
insb
imul
sbb
jg
fdivs
movsb
and
repnz
cmpsl
icebp
fcompl
lcall
int
xlat
and
stc
loope
mov
stos
jmp
bound
or
icebp
jl
and
mov
dec
cld
fistl
rcrl
cli
pop
test
mov
mov
xor
out
rorb
je
mov
or
dec
sarl
mov
mov
dec
sub
mov
fsubrl
cwtl
dec
adc
cmp
pop
loop
and
add
cmp
rcr
cmp
int3
movsl
sub
cmc
dec
jno
int3
and
add
sbb
push
call
loopne
jge
rolb
sti
and
adc
xchg
pop
in
imul
enter
int3
mov
hlt
dec
or
cld
in
loope
mov
mov
in
cmp
fisubrl
add
jnp
call
push
push
dec
fnstenv
fs
sub
jl
pop
sti
rol
lods
cld
pop
scas
lret
push
cmp
mov
jo
pop
push
enter
jg
pop
push
xor
loopne
or
movsb
mov
jl
ljmp
fucomi
dec
adc
cmp
adc
clc
sbb
lds
and
ljmp
in
leave
cwtl
mov
jl
test
lods
cld
or
idivl
jb
add
jo
dec
sbb
bound
sub
pushf
sub
xor
icebp
enter
mov
fstps
leave
or
test
inc
dec
xchg
cmp
pop
pop
in
cmp
popa
pushf
add
insb
movsl
popf
pushf
sub
repnz
xor
jl
and
mov
imul
pushf
fs
pop
insb
and
hlt
or
mov
inc
pop
jmp
pushf
add
inc
or
out
sbb
jno
adc
outsb
adc
std
or
insb
cmpsl
cmc
pop
adc
add
jno
sbb
mov
pop
in
and
and
leave
fwait
sub
push
in
cmp
sbb
add
loope
gs
in
cmp
popa
mov
mov
add
jne
cmp
mov
aam
inc
mov
mov
test
xor
test
sub
mov
ds
sbb
popa
call
stos
jmp
jne
out
cmp
mov
cmc
add
in
adc
mov
pushf
cmpsl
arpl
popf
sub
mov
xor
js
int3
in
add
fwait
mov
lds
gs
fistpl
int3
sbb
movsb
cmp
cld
mov
mov
mov
iret
loopne
jge
pop
insb
mov
or
pop
test
imul
and
inc
andl
xchg
shl
lret
in
mov
cmp
sarl
xor
sub
sar
mov
leave
xchg
imul
dec
sbb
mov
adc
xchg
add
pusha
or
loopne
cmp
and
les
push
cltd
sub
movsb
xor
ror
lods
cld
or
push
mov
mov
and
cld
or
test
lea
gs
pop
in
cmp
in
add
setl
and
into
and
hlt
int3
adc
mov
xor
mov
sub
push
mov
lods
repnz
fsubr
adcl
cmp
mov
popa
add
pushf
rcrb
in
cmp
popa
xchg
out
shlb
jo
pop
in
cmp
push
sub
or
push
icebp
pop
loope
int3
je
out
cmp
adc
clc
sub
loopne
xor
jns
repnz
daa
push
cmpsl
stc
call
movsb
popf
sub
mov
ds
sbb
dec
or
add
cmpsb
sub
mov
cmp
nop
mov
movsb
mov
inc
sub
jo
shlb
mov
sar
and
push
lods
cld
gs
jl
xchg
dec
pop
in
cmp
sub
test
mov
inc
xor
scas
cld
or
push
pushf
mov
jl,pn
mov
push
inc
popa
test
xor
mov
test
adc
dec
inc
hlt
das
into
or
pop
mov
sbb
jns
out
daa
push
cmpsl
pushf
xchg
shlb
pushl
outsl
mov
shll
pop
mov
nop
fists
inc
cmpsl
jb
rcll
aas
xor
jne
inc
cmpsl
icebp
in
or
pop
inc
mov
xor
push
addr16
xchg
mov
cmp
mov
and
rep
sti
or
inc
movsb
pop
out
lods
mov
lods
xchg
mov
fucomi
mov
daa
sbb
xchg
out
aas
test
fstpt
xor
mov
stos
inc
add
mov
into
and
ja
inc
pushf
in
and
sub
test
sub
and
dec
je
mov
push
in
cmp
cmpsl
or
add
repz
bound
adc
lahf
insl
xor
bound
mov
cmc
xor
push
and
shlb
push
fcoml
pop
in
mov
pop
loope
ret
icebp
sahf
jmp
and
inc
mov
and
leave
xchg
or
mov
imul
fwait
mov
cmp
sbb
das
les
and
nop
sar
leave
xchg
or
sti
and
adc
outsl
add
fmuls
lods
aas
dec
nop
sub
out
xor
jns
mov
jl
shll
jg
mov
cld
or
icebp
jl
sbb
cmp
and
mov
mov
jl
and
adc
mov
pop
loope
int3
mov
hlt
cmp
adc
mov
pushf
push
xor
push
nop
mov
mov
lods
inc
pop
cmp
sbb
rcrb
enter
add
imul
fcomi
add
pop
push
orl
in
int
fadd
lea
orl
in
add
pop
inc
cmp
jo
fisubl
cmp
ds
sbb
ja
lret
adc
adc
jmp
movsl
jne
hlt
or
int3
inc
mov
scas
cmp
push
arpl
loopne
daa
repz
adc
pop
xlat
nop
rclb
fneni(8087
loopne
fwait
mov
cmp
das
rcrb
stos
mov
fndisi(8087
lods
mov
pop
addr16
out
loop
jno
lret
js
clc
divl
lock
cmp
xchg
mov
cmp
inc
enter
imul
fwait
jmp
push
cmpsl
outsl
inc
xchg
pushf
jmp
sub
xchg
pop
mov
mov
or
lods
mov
nop
fucomip
inc
xlat
and
cmp
daa
jo
nop
fucomip
inc
xlat
sbb
xchg
adc
scas
mov
dec
xchg
aad
xor
jge
test
cmp
sbb
mov
or
mov
xchg
adcl
rorb
dec
jecxz
mov
int3
pushf
sub
add
sbb
lods
fsts
lds
js
fcoms
hlt
mov
mov
pop
in
mov
cmp
xchg
pop
mov
inc
sub
loope
lret
adc
sbb
lods
cld
or
xor
lret
adc
jnp
in
cmp
pop
in
sbb
insb
adc
add
adc
sub
jge
jp
or
popa
mov
loopne
adc
int3
je
lock
lahf
jo
aad
mov
jl
pusha
adc
dec
sbb
sti
cmp
sub
shll
adc
addr16
rclb
and
or
les
xor
adc
sub
mov
adc
cmp
and
outsb
xor
daa
jno
push
mov
insb
jg
loopne
inc
xchg
adc
pop
shll
pop
lods
lods
cld
int3
pop
mov
rclb
ja
push
jecxz
or
fsubrl
in
test
cmpsl
icebp
add
and
pushf
in
call
pusha
cld
mov
inc
outsb
inc
fisubl
jl
subl
mov
sub
ja
push
adc
pop
in
popf
shrb
ljmp
testl
sbb
int3
xchg
sub
das
fiadds
out
inc
adc
mov
pop
mov
cld
add
lds
fwait
pop
push
jns
es
push
cmpsl
mov
lea
xor
jne
sysret
iret
stos
pop
gs
mov
xor
scas
mov
cmpsl
stc
add
and
mov
mov
adc
jae
sbb
dec
shlb
dec
adc
in
je
mov
inc
movsb
sub
add
fdivrl
int3
mov
in
inc
dec
sbb
sbb
je
int3
adc
mov
rcll
xchg
and
add
mov
movsb
mov
ljmp
in
les
sub
push
cmpsl
icebp
add
cld
push
jg
pop
paddw
cmp
cld
push
fsubrl
xlat
in
icebp
scas
out
inc
iret
cmp
out
addr16
push
movsb
scas
pop
jae
mov
aaa
daa
aaa
inc
adc
je
lods
xchg
xchg
and
dec
and
mov
pushf
sbb
lret
cld
or
ja
push
movsb
mov
xchg
gs
pop
xlat
popa
mov
push
cld
out
popf
scas
cmpsl
sti
add
fs
lods
xchg
dec
adc
daa
jno
xchg
mov
xchg
and
inc
pop
pop
dec
lahf
xlat
imul
xlat
popa
mov
adc
xor
xor
push
cld
or
mov
mov
xor
mov
sbb
loop
xchg
insb
test
mov
mov
int3
fs
mov
lahf
shr
nop
xor
xor
pop
push
pop
pop
cmpsb
cmp
sbb
movsl
int3
adc
add
mov
and
mov
insl
enter
mov
out
sbb
add
ljmp
adc
xor
add
lds
lods
mov
incl
and
andb
fdivrl
or
cmpsb
in
mov
and
leave
pop
stos
jp
pop
iret
xor
test
mov
pop
shll
xlat
adc
jecxz
inc
insl
fs
mov
mov
outsl
xchg
xchg
fsubrl
andl
push
pop
in
cmp
and
adc
and
lods
xchg
xorb
dec
jne
jecxz
lds
fwait
loopne
cmp
sbb
inc
sbb
jnp
xchg
pushf
sub
mulb
push
sbb
push
fdivrl
int3
daa
jns
scas
and
rcl
lods
cld
aad
ror
mov
inc
dec
sbb
and
movsb
jnp
pop
pushf
sub
pop
test
leave
mov
push
insb
cltd
rcll
mov
int3
fcmovb
push
test
jmp
nop
pop
ljmp
leave
mov
push
insb
fwait
lods
cmp
push
sbb
add
loope
rorl
pushf
add
sbb
sub
int
dec
xor
sahf
in
sbb
and
loope
rorl
pushf
pop
test
xchg
push
sbb
fsubr
cmp
adc
clc
sbb
leave
mov
push
insb
cltd
roll
mov
int3
fcmovb
push
test
jmp
nop
or
and
cld
mov
jnp
lcall
dec
pop
mov
ret
inc
cmp
mov
ffreep
xchg
sub
cltd
adc
cs
cld
dec
or
jns
jo
mov
mov
xor
mov
int3
pushf
mov
mov
mov
sub
mov
and
mov
mov
or
cmpb
hlt
push
pop
lods
fucomi
jp
rclb
jle
jbe,pn
inc
lahf
mov
sbb
rolb
xchg
in
mov
ja
cltd
lret
daa
int
leave
mov
mov
ja
sbb
aam
rorb
pop
leave
in
sar
into
and
add
jne
pop
jmp
cmpsl
icebp
or
hlt
push
mov
ljmp
decb
lds
mov
and
xchg
insb
pusha
dec
inc
popa
mov
fdivl
outsl
and
dec
insb
orl
pop
cmc
aas
loope
fdivrs
sbb
or
int3
pushf
mov
in
xor
shlb
sbb
cmc
add
fadd
xchg
xor
jno
gs
push
loope
in
pop
in
cmp
xchg
aam
push
shl
add
and
in
xchg
inc
xor
mov
insb
lods
aam
xchg
jg
call
andb
cmp
stc
icebp
hlt
push
das
and
fwait
sub
mov
adc
inc
sbb
je
aam
sub
imul
nop
rorb
lock
fiaddl
mov
shl
adc
mov
push
rolb
int3
pop
pop
inc
inc
sub
jg
cmpsl
mov
xor
pop
in
test
cltd
xchg
push
sbb
jmp
shrb
nop
iret
pop
scas
nop
inc
mov
sub
jo
roll
lock
dec
pop
mov
es
xchg
and
shl
cmpsb
dec
je
or
pushf
out
pushf
into
insl
or
loope
fmuls
in
dec
sbb
jns
je
pop
inc
cmp
xchg
testl
xchg
pop
out
cmp
subb
les
adcb
mov
movsl
das
adc
pop
dec
or
or
jno
adc
xchg
jge
cwtl
insl
mov
or
cmc
and
data16
imul
mov
shl
cmpsb
dec
pop
ret
bound
scas
and
cwtl
pop
jmp
dec
xchg
mov
popa
in
shll
test
dec
lods
cltd
aaa
call
aam
dec
xor
sahf
in
xchg
sub
dec
jno
mov
out
ret
je
repnz
cmp
dec
jne
add
jp
dec
adc
cmp
and
inc
sub
jns
test
movsb
inc
mov
decl
fldt
lods
cmp
daa
dec
dec
insb
repnz
ljmp
andb
dec
sbb
cmp
arpl
fstl
cmp
out
and
or
sbb
rcll
in
fisubrl
test
push
mov
pop
sub
or
mov
sbbl
fs
mov
sti
sti
cmp
lcall
lods
or
test
sbb
adc
sub
cmp
rcrl
jmp
pop
push
scas
stos
jmp
mov
std
xchg
in
push
inc
scas
mov
stc
clc
pop
movsb
cmc
or
jne
mov
filds
xchg
sub
and
jns
sarl
mov
les
in
test
insb
xchg
sub
fxch
and
insb
cltd
sub
std
pop
nop
mov
cmp
mov
lods
inc
shlb
lods
test
jl
inc
and
ja
jg
pushf
sub
mov
in
cmp
sbb
or
fsubrl
pop
addl
sub
je
dec
fmull
les
cmp
sahf
in
sbb
mov
and
stc
dec
leave
cltd
xor
icebp
in
stc
mov
pop
sub
icebp
cmpsb
dec
je
mov
xor
xor
dec
pop
lods
or
mov
add
dec
pop
lods
or
fwait
cld
aas
jne
jmp
dec
jb
jo
in
jp
in
adc
pop
pop
jmp
inc
addl
jl
dec
or
push
add
leave
int3
pushf
test
ja
sti
cli
push
cmpsl
mov
inc
rcr
scas
pop
nop
loope
mov
cmpsb
mov
inc
shlb
ret
je
fnsave
or
xor
pop
rolb
les
or
je
xchg
adc
mov
shl
xchg
sbb
pusha
inc
aam
mov
add
and
mov
shll
aam
and
daa
cmp
pushf
xor
aam
icebp
lea
into
xchg
in
loope
daa
jo
nop
cmp
sbb
mov
or
dec
pop
mov
pop
cld
aaa
call
aam
sub
pushf
rolb
leave
xchg
adc
in
pop
insb
mov
in
cmp
gs
xchg
pop
mov
loopne
sbb
xchg
lds
xchg
and
sub
sbb
xor
out
dec
in
and
inc
or
xor
mov
sbb
in
sbb
mov
jae
in
cmp
jne
xor
and
jns
pop
test
aam
xchg
xchg
imull
lahf
in
mov
das
cmp
jmp
jl
gs
fwait
sti
lods
aas
sbb
jbe
hlt
aaa
cmpsl
mov
setp
xchg
sub
add
fcompl
nop
push
movsb
in
xchg
fsts
in
fildll
push
mov
adc
adc
insb
hlt
fldcw
cmp
in
pop
les
lret
fwait
scas
stc
mov
in
call
fnsave
cld
les
inc
test
arpl
xorps
pop
cmpsl
outsl
data16
lret
pushf
sub
cmp
imul
jg
out
int
pop
xchg
xchg
sbb
push
cmpsb
pushf
test
mov
outsl
jl
call
jg
pop
enter
jae
lods
in
inc
add
daa
mov
es
lods
aaa
iret
push
mov
xchg
pop
push
fwait
lock
aas
adc
jns
int
insb
in
dec
cld
sub
xorb
dec
jmp
test
mov
pop
ja
jo
aaa
in
bound
ror
jl
dec
fildll
imul
push
adc
push
jo
jp
cmpsl
test
mov
pop
mov
mov
dec
int
sub
push
arpl
add
inc
cmp
shr
cmp
mov
lds
mov
xor
inc
sub
sbb
xor
inc
repnz
push
mov
addr16
mov
jne
mov
jl
xchg
lds
mov
pop
push
mov
aaa
call
dec
movsb
jge
imul
ss
pinsrw
xor
or
mov
jmp
mov
lods
aas
dec
loopne
scas
dec
sbb
adc
hlt
push
xchg
sbb
shlb
mov
adc
mov
xor
and
xor
andps
fistps
cld
mov
cmpsl
jg
mov
jbe
xchg
mov
mov
pop
fwait
mov
cmp
sbb
rcrb
jl
inc
mov
jnp
push
lods
cld
mov
mov
mov
adc
mov
mov
add
mov
mov
rcrl
adc
sti
addb
adc
push
rorl
jo
call
sub
mov
movb
lahf
roll
test
mov
cmp
int3
xor
aas
jnp
jo
mov
sbb
add
imulb
lret
pop
lock
pop
jmp
sbb
adc
push
js
inc
movsb
adc
mov
daa
pop
sbb
adc
push
cmpb
inc
fnstcw
dec
sbb
rcrb
adc
push
mov
pop
pusha
push
mov
xor
fwait
sub
add
mov
fucomi
sbb
mov
loope
fcoms
lret
cld
jno
in
push
xchg
inc
jl
dec
sbb
inc
adc
lods
shlb
dec
decl
pusha
in
mov
lahf
sub
or
aad
lret
repnz
mov
sub
int3
mov
scas
cli
cwtl
pop
pusha
mov
push
movq
loope
add
out
pop
xlat
gs
aad
mov
xor
into
mov
or
sarl
sti
xor
mov
mov
or
mov
mov
jmp
pusha
sbb
or
push
js
mov
sub
mov
mov
mov
add
push
das
adc
scas
push
int3
sbbl
sarl
cltd
xor
cmp
mov
sub
fbstp
movq
ret
jnp
mov
sti
rorl
jl
inc
repnz
mov
cmp
cmpsb
loope
add
sbb
popf
sub
addb
sbb
insb
adc
xchg
inc
jl
dec
sbb
sbb
popa
gs
pushf
pop
popa
dec
test
ljmp
arpl
cmp
cmp
mov
fwait
loope
cmp
sbb
jp
jmp
test
pushf
sub
or
xor
cmp
sub
mov
movsb
inc
sbb
shlb
inc
inc
adc
outsl
dec
sbb
xor
inc
mov
cld
lds
popa
sub
adc
or
mov
cmp
insb
inc
mov
jmp
push
in
test
push
stos
dec
add
xor
add
pop
cmp
iret
popa
mov
pop
pusha
mov
mov
fdivrs
roll
sub
imul
adc
add
pusha
sbb
or
push
js
mov
jl,pn
fbstp
sti
push
fsubr
jg
test
mov
jbe
ret
mov
dec
lcall
insb
xor
fwait
mov
cmp
or
jno
fndisi(8087
ror
adc
add
and
sbb
cld
mov
cmp
cmp
jg
cld
inc
add
pushf
adc
jge
mov
sbb
sbb
push
test
pushf
pop
popa
dec
dec
xchg
mov
mov
imul
rcrl
leave
cmp
inc
add
stc
add
in
cmpl
jmp
fs
mov
fucomi
and
sbb
rcrl
addl
testl
clc
lcall
inc
adc
mov
add
mov
sbb
and
out
jl
fwait
mov
xchg
mov
cld
sti
xor
mov
cmp
and
sbb
fsubrl
enter
fbstp
pop
aad
ret
sbb
pop
mov
idivb
insb
dec
sbb
mov
dec
xlat
push
aaa
int
jl
lea
cmp
xor
sahf
mov
mov
cmpsl
lock
insb
fs
xor
pop
pusha
inc
hlt
push
and
ror
in
addr16
in
xchg
stos
jp
push
xchg
enter
pushf
xor
mov
insb
add
or
insb
mov
mov
iret
or
and
hlt
aaa
jns
pop
loope
inc
icebp
scas
jp
ja
and
add
cmc
jno
int3
pop
xchg
js
out
inc
xlat
pusha
pushf
add
lahf
sub
and
and
mov
sub
js
sbb
sbb
mov
sbb
ja
push
cmpsl
and
xchg
and
mov
lds
inc
cmc
leave
int3
pushf
sub
jmp
inc
add
adc
cmp
insb
shr
outsl
or
xchg
push
adc
insb
adc
scas
stc
lods
pop
aas
test
pop
js
fcompl
jmp
push
add
std
or
out
sbb
test
inc
rcrl
out
fndisi(8087
call
mov
popa
pusha
dec
push
stos
jno
fndisi(8087
shlb
test
jnp
pop
ja
push
test
hlt
fdivl
dec
dec
xchg
sti
sub
adc
mov
adc
mov
mov
fdivrl
mov
add
fsubl
jge
orb
fsubrl
and
in
mov
arpl
movsb
push
loope
add
aad
mov
enter
pop
imul
lock
cmpsb
loope
add
push
movsl
jmp
inc
sbb
cmp
jns
ret
push
fsubrs
int3
pushf
sub
lods
pop
popa
pop
pushf
sbb
adc
sbb
scas
inc
mov
jns
jg
fsubrs
or
cltd
or
test
fsubrl
sti
mov
push
pop
jmp
cmp
cld
or
lds
add
icebp
xor
cmpsb
dec
test
cmp
lret
fwait
test
mov
divl
jno
addr16
add
xor
testl
rcrl
scas
sbb
addl
mov
pop
push
scas
lds
adc
fldenv
cli
and
into
stos
sti
pop
xor
pushf
sub
in
ja
jo
aaa
cld
lea
das
cmp
paddq
aas
shrl
je
cld
jno
in
incl
in
mov
xchg
jg
daa
sbb
mov
adc
mov
jl
sbb
sub
mov
cld
or
pop
enter
add
pop
cmpsl
in
add
popf
sub
or
hlt
cmp
mov
idiv
aam
in
mov
mov
add
cltd
pop
jl
dec
add
jl
pop
hlt
mov
cmpsl
and
in
mov
xchg
rcr
mov
mov
or
xor
pushf
mov
movsb
in
cltd
xor
mov
arpl
jne
xor
loopew
ret
lock
dec
inc
mov
stos
outsl
and
xchg
lock
pushf
test
adc
shlb
lods
cld
jbe
ret
movsb
shrb
in
jno
pop
mov
imul
fwait
lahf
xchg
jecxz
dec
out
dec
sbb
rcrb
ljmp
pop
in
push
mov
insb
mov
loop
cmpl
in
mov
movb
sbb
push
xchg
pushf
jnp
pop
pushf
sub
negb
and
dec
lods
cld
gs
sub
mov
sbb
adc
insb
mov
jecxz
ljmp
shlb
mov
cld
shlb
arpl
adc
int3
pushf
test
adc
test
in
mov
push
repnz
sarb
std
cltd
and
cmove
in
cmp
jne
sti
xor
movsb
lods
dec
sub
jnp
adcb
and
add
aad
pop
bound
insb
test
mov
sub
cmp
stc
in
jo
jns
int3
pushf
sub
ljmp
mov
lods
pushf
sub
loope
fsubs
dec
cmp
sub
insb
adc
int3
in
jge
loop
jne
xor
icebp
add
pushf
loopne
push
in
pop
aad
jno
shrb
mov
cmp
mov
pop
int3
rolb
pushf
sub
mov
fistpll
pop
out
pop
icebp
inc
aad
dec
sbb
xchg
je
push
adc
pop
pop
ja
push
pop
jb
ficomps
inc
add
mov
xchg
out
dec
dec
out
mov
cwtl
push
mov
jg
loopne
or
dec
push
icebp
add
fndisi(8087
int3
push
jmp
aam
cld
sbb
sbb
daa
or
pop
test
sub
mov
mov
xor
pop
sti
or
lds
xchg
pop
cmp
fsubs
dec
cmp
sub
insb
adc
int3
in
jge
loop
jne
xor
adc
or
nop
xchg
adc
orl
cmp
roll
sub
and
subl
jl
inc
sbb
dec
sbb
xchg
inc
imul
outsb
jl
fdivl
cld
or
insb
or
and
in
lea
inc
push
aas
xor
das
cmp
fsubl
adc
and
int3
pushf
sub
pop
inc
repz
dec
je
xchg
out
and
pushf
scas
leave
mov
cmp
sbb
in
fldt
and
sbb
xor
xchg
sbb
jg
aad
adc
je
mov
push
and
add
pop
adc
ja
inc
daa
jae
movsb
incb
in
mov
mov
add
xlat
or
out
sbb
in
lock
imul
sbb
pushf
sub
dec
xor
icebp
mov
fucom
xor
lods
jge
fsubrl
int3
adc
pop
cltd
je
jg
sub
dec
mov
mov
jb
cmp
adc
bound
and
insb
mov
or
ss
pop
test
jmp
or
or
push
sub
lea
insl
movsb
stc
int
jl
and
rorl
and
mov
aas
xchg
mov
lock
stc
int3
mov
fbstp
dec
sbb
ret
xchg
shrl
fwait
sbb
cmp
popa
lods
mov
ret
orb
or
fs
mov
inc
iret
sbb
movsb
push
pop
ja
xor
or
cmpsl
andl
jne
sti
and
dec
and
icebp
xchg
pop
add
dec
pop
lods
xchg
outsb
out
mov
pop
in
dec
jne
pusha
cmp
insb
inc
mov
sbb
cmp
jne
adc
pushf
push
rorb
aam
rcrl
push
rolb
int3
pop
hlt
jnp
mov
aaa
jo
in
add
inc
scas
lock
sbb
add
jb
mov
cwtl
push
out
or
xor
inc
adc
pusha
pusha
push
mov
push
dec
int3
pushf
sub
ljmp
cld
xchg
pushf
lds
rcrl
hlt
jnp
pop
loop
pop
pop
and
or
movsb
in
sub
xorl
int3
cmp
mov
mov
xchg
xlat
bound
mov
ret
ret
dec
nop
fldl
notl
mov
mov
mov
push
sar
xchg
sub
ljmp
xchg
fistpll
dec
insb
lahf
ja
xchg
and
mov
ja
stos
ja
or
mov
fbstp
xchg
or
sub
fscale
enter
aaa
add
je
sbbb
and
pop
jnp
pop
outsl
xor
jne
sbb
xchg
dec
sarb
outsl
loop
dec
nop
mov
mov
in
out
inc
inc
out
in
mov
dec
dec
scas
clc
mov
in
seto
pop
repnz
mov
ja
pop
les
or
inc
insb
mov
sbb
cmp
les
inc
adc
in
dec
dec
adcb
gs
inc
movsl
andb
cmp
pop
mov
push
in
ret
inc
jnp
fs
pop
add
cld
or
out
sbb
jb
adc
test
adc
jo
addr16
pop
scas
icebp
shl
dec
mov
lock
insl
jnp
js
sbb
inc
or
test
mov
jmp
cmpsl
lahf
in
fwait
and
jl
pop
in
mov
adc
cld
pop
jl
xchg
pop
popf
sub
fisubrs
mov
lret
lods
inc
shrb
rcll
jae
adc
dec
xchg
movsl
repnz
xchg
insl
std
push
stos
mov
xorl
iret
cld
mov
add
pop
xchg
orb
xchg
pop
pop
enter
icebp
xchg
mov
jno
or
cld
sbb
mov
cmovb
std
inc
and
punpckhwd
jl
pusha
jno
cmp
call
mov
pop
sub
cmp
lahf
adc
or
jmp
jl
sub
inc
fisubrs
add
mov
divb
xchg
jecxz
mov
rcll
dec
sbb
inc
cmp
jbe
adc
out
cmp
sub
sti
inc
or
roll
pushf
outsb
jl
sbb
jbe
xor
dec
shll
icebp
loopne
popa
lods
add
flds
mov
cmp
jns
jae
mov
cmp
adc
lds
jg
mov
cmp
cmp
testb
mov
in
dec
sbb
into
and
sti
adc
mov
movsb
lods
xchg
testl
and
std
aad
movsb
or
daa
jno
push
pop
sub
mov
test
inc
cmpsl
mov
rcrl
dec
xor
and
inc
pop
shrl
test
and
and
cli
repnz
pop
mov
mov
sbb
aaa
decl
adc
mov
lods
mov
sbb
mov
push
insb
inc
mov
jae
or
mov
cmpsl
scas
repnz
or
add
scas
mov
mov
mov
xchg
out
inc
adc
xor
xchg
imul
out
rcll
in
cmpsb
dec
sbb
add
jbe
mov
or
jmp
shlb
add
and
or
aad
mov
sbb
xor
mov
popa
inc
pop
push
xor
aaa
pop
js
dec
xchg
mov
test
mov
or
xor
jo
jno
xchg
pop
in
cmp
in
pop
push
xor
int
scas
inc
movl
iret
pop
add
dec
cmpsb
mov
insl
push
xchg
adc
mov
dec
sbb
mov
fildll
test
inc
cvtpi2ps
daa
push
aad
std
or
out
mov
push
sub
addl
insb
mov
addr16
in
cmp
fisubrl
xor
cs
cld
scas
fs
xor
pop
jp
call
pop
in
cmp
jns
or
arpl
lea
iret
in
out
adc
mov
orl
xor
cmp
adc
popf
outsb
xor
pop
or
mov
mov
insb
mov
pushf
pop
in
rcll
pop
aam
fidivrs
out
shlb
rorb
pop
push
jle
mov
mov
mov
pushf
jns
cmc
das
imul
mov
cld
or
push
mov
enter
test
jno
mov
sub
or
sbb
and
fldt
xchg
pop
mov
push
dec
sbb
int
fwait
sub
xor
cmp
xchg
mov
movsb
dec
lret
pop
and
add
jns
cvttps2pi
mov
pop
xchg
sbb
insb
sbb
rclb
aam
in
pop
aad
mov
jg
mov
rcrl
xchg
mov
cvttps2pi
mov
jns
pop
xchg
sbb
notl
mov
mov
mov
call
mov
inc
adc
inc
xchg
mov
push
imul
add
jge
xchg
adc
mov
cmpsl
mov
aas
sbb
stos
pop
movsl
sbb
daa
repnz
mov
cwtl
jge
lock
int3
daa
jns
fists
lods
push
arpl
out
xor
dec
out
std
inc
and
loop
imul
dec
cmpsb
lock
test
push
repz
jne
sub
jns
gs
cmp
mov
cmp
int3
jo
inc
outsb
adc
pop
outsl
add
scas
call
shrb
mov
xchg
sub
jns
gs
push
sbb
adc
cmp
test
imul
push
leave
cwtl
xchg
cmp
aaa
dec
or
mov
push
movsl
lods
jne
shl
cmp
sbb
les
hlt
or
dec
out
dec
inc
jbe
add
sbb
pop
test
jno
inc
sbb
mov
pushf
jl
adc
cmp
cld
xchg
jl
pop
jno
rcrb
add
mov
pop
arpl
addr16
sub
inc
sbb
imul
lret
daa
jno
and
rcl
lods
cld
inc
pop
je
sub
xor
lds
mov
in
insb
sub
xor
xor
fildl
add
fldcw
push
pop
fndisi(8087
int3
lret
adc
jnp
pop
add
pop
lods
or
nop
mov
xchg
in
xor
ret
stos
adc
fsubrl
sub
inc
xor
lods
cld
or
push
stc
push
lahf
and
mov
cmpsl
icebp
or
sub
and
loopne
popa
lods
sbb
insb
inc
or
mov
addr16
or
adc
pushf
sub
xchg
add
orl
mov
dec
out
pusha
push
dec
jle
sbb
xchg
iret
pop
daa
inc
sarb
adc
test
clc
jge
in
mov
push
test
mov
cmp
fbstp
add
adc
rcrl
inc
fsubrs
lds
jl
and
loopne
popa
lods
add
fsubrl
arpl
and
in
push
dec
sbb
mov
lret
add
test
pop
push
mov
lods
fsubrl
in
nop
add
dec
lahf
cwtl
sbb
ret
inc
xor
push
xchg
sbb
inc
arpl
mov
xchg
sahf
in
cli
dec
sbb
imul
popf
outsb
jl
sbb
inc
aad
hlt
push
fcoml
and
jg
jl
das
cmp
jae
adc
pop
cmp
scas
pop
in
cmp
and
push
fsubrl
int3
pushf
gs
mov
xor
mov
adc
div
cld
aam
xor
fwait
mov
cmp
xor
enter
jnp
lock
jle
add
out
mov
stos
mov
mov
leave
cmp
add
sbb
add
and
jmp
pusha
sbb
or
and
ljmp
mov
int3
sti
and
insb
dec
daa
add
jmp
mov
cmc
cmp
sub
xchg
nop
pusha
dec
add
cltd
or
cmc
and
outsl
mov
xchg
pcmpeqd
les
add
mov
imul
xchg
cmp
dec
js
loop
pop
popa
sbb
sar
in
mov
mov
mov
ret
bswap
adc
jnp
push
rcll
mov
outsb
inc
popa
mov
cmp
stos
mov
mov
sarl
sbb
push
mov
add
jmp
pop
sbb
add
icebp
add
push
pushf
mov
fwait
loope
cmp
sbb
mov
sbb
cmp
jnp
push
aad
xor
enter
mov
lock
fsubrl
pop
lret
fwait
mov
je
enter
das
dec
or
push
into
ss
test
pop
rcl
dec
dec
xchg
fsubrs
inc
je
pop
add
inc
dec
xchg
nop
sti
cmpl
test
cmpb
call
mov
daa
push
sbb
sbb
push
test
pop
add
jle
pop
jmp
insb
sbb
call
mov
int
cmp
jb
js
imul
mov
add
dec
aam
lock
pushf
ja
xchg
mov
movsb
mov
rolb
outsl
push
xchg
enter
out
adc
shl
and
sbb
mov
popa
inc
pop
mov
lahf
xchg
pop
cmp
loop
in
cmp
out
fs
and
adc
jns
ss
cld
mov
stc
add
in
jle
lahf
movsb
std
sbb
mov
mov
or
cld
pop
push
mov
rcrl
mulb
insb
lret
push
mov
mov
imul
or
insb
dec
sbb
sti
sar
lods
cld
sbb
mov
imul
sbb
jl
std
pop
add
mov
sub
or
imul
insb
scas
ja
pusha
into
adc
and
stos
mov
jl
daa
pusha
push
ficoms
lret
sbbb
mov
cmpsl
add
xchg
outsb
add
setl
lods
dec
xor
push
jae
add
mov
mov
or
fidivrs
loope
inc
xchg
js
orl
sarb
in
cmp
rclb
dec
fsubrl
int3
mov
mov
pusha
cmp
mov
dec
adc
xor
dec
sbb
std
fs
hlt
fnstsw
cltd
jmp
dec
sbb
in
clc
mov
mov
xor
and
jmp
int3
pushf
pop
adcb
fistpll
inc
xlat
daa
ja
and
cld
sub
dec
int3
pushf
sub
ds
in
cmp
fcoml
sbb
div
aas
pop
mov
clc
push
fsubrl
lcall
xchg
sbb
cld
or
imul
popf
outsb
jl
push
jmp
dec
out
insb
mov
mov
in
jle
lahf
movsb
clc
sub
sub
xchg
test
orl
add
mov
in
mov
lahf
xchg
add
adc
les
pop
pop
cld
paddq
je
mov
lock
dec
sbb
mov
loopne
mov
in
lods
sti
insb
or
cld
incl
cmp
rcrl
cmp
lahf
sub
mov
outsl
rcrb
mov
xchg
out
filds
xchg
pop
pop
rcl
pushf
sub
rorl
mov
mov
push
fsubrl
push
push
in
dec
shll
lods
cld
or
sub
int3
popf
sub
adc
icebp
sub
stos
cmp
mov
push
inc
adc
cmp
xor
icebp
pop
mov
sti
repnz
insl
jae
pop
xor
mov
sub
sbb
mov
movsl
into
xlat
pop
push
aas
aas
out
ds
push
imul
cld
in
leave
rorl
cmpsb
sti
or
mov
jnp
pusha
flds
clc
fisubrl
and
xchg
jge
xchg
dec
xchg
lret
fwait
popa
cmpb
xchg
pushf
test
imul
repnz
xor
cmpsb
sti
or
dec
push
mov
jnp
pop
and
popa
lods
push
pop
imul
rcr
in
ds
sbb
xor
lret
mov
mov
es
fbstp
mov
imul
pop
pusha
push
int3
movsb
int
push
fdivrl
mov
je
insb
or
cld
idiv
bound
adc
adc
fiaddl
adc
push
cld
sub
flds
dec
pop
xor
mov
in
cmp
dec
dec
test
mulb
sub
pop
sub
imul
adc
outsb
pop
pop
fs
stos
lods
add
dec
xor
cmpsb
je
cmc
cld
push
pushf
dec
cmp
imul
loop
mov
or
sbb
mov
mov
xchg
sub
fldt
xchg
mov
in
cmp
sbb
push
xchg
enter
mov
mov
sub
in
imul
fwait
mov
jecxz
sbb
rcrb
iret
inc
and
cltd
sub
std
push
jmp
lods
ret
push
pop
lock
mov
xor
es
jge
fsubl
adc
loop
std
push
pop
mov
push
aaa
es
or
push
rorb
pop
push
rorl
setns
insl
out
mov
std
cmp
xlat
out
fisttpll
iret
push
inc
adc
sub
and
adc
shll
lods
sub
stos
or
insb
aas
les
cmp
xor
iret
add
in
fsubrl
stc
xor
xchg
dec
cltd
aam
dec
add
negb
and
or
insl
mov
mov
iret
cld
scas
or
xchg
jg
cmpsl
outsl
mov
xchg
xchg
jo
fsubl
int3
xorl
jle
gs
mov
adc
insl
adc
jmp
in
cmpsb
dec
insl
cld
mov
mov
jl
xchg
sbb
xchg
sbb
cltd
add
imul
mov
outsl
xor
xchg
mov
ret
cmpsl
fldcw
mov
add
popf
movl
pop
add
adc
icebp
jl
adc
jg
xchg
mov
int3
ja
lret
mov
dec
je
add
mov
cwtl
pop
popa
mov
pop
xor
insb
mov
adc
or
fsub
fcompl
test
mov
cld
movsl
movsl
mov
pop
imul
xchg
aad
les
push
inc
aad
xor
or
sahf
cmp
xchg
stos
mov
lock
ja
jo
mov
in
test
mov
mov
and
out
loop
pop
xchg
test
rorb
add
int3
inc
mov
jmp
movsl
jp
xchg
jo
pop
mov
inc
xchg
mov
int3
sub
fwait
sbb
lods
mov
ret
orb
into
cld
or
fs
xchg
add
orl
mov
mov
pusha
push
fsubrl
ja
shl
cmp
lods
ds
outsb
out
mov
in
lock
lods
aam
inc
sbb
ret
dec
add
jmp
outsl
out
pop
xchg
movsl
loope
jl
popa
nop
adc
or
out
test
sti
mov
dec
mov
sub
or
cmp
iret
pop
pop
add
push
movsl
and
mov
cmc
sbb
push
sub
cmp
das
rcrb
das
inc
adc
clc
mov
and
jge,pt
pop
ja
xlat
imul
lahf
mov
test
adc
mov
jmp
inc
adc
xchg
mov
inc
popf
xlat
cld
out
scas
fsubl
inc
rcrl
inc
add
push
lods
ret
icebp
sahf
and
loopne
popa
lods
adc
insb
aas
xchg
fwait
adc
mov
adc
mov
mov
sub
mov
dec
dec
sub
popf
or
insb
inc
and
or
cld
or
xchg
jge
pop
mov
xchg
out
std
inc
and
loop
imul
dec
adc
add
pop
loopne
ss
xchg
jl
shl
and
sbb
notl
cwtl
mov
cltd
and
les
ffreep
dec
aam
icebp
pop
xor
popf
repnz
jmp
sub
add
mov
add
cli
or
and
into
pushf
sub
push
push
mov
jge
adc
jb
pusha
pusha
aas
xlat
arpl
test
idivl
nop
shr
cmp
add
and
fstps
std
stos
jp
imull
mov
aaa
sbb
push
xchg
push
js
cmpsl
repz
adc
movsl
or
sbb
mov
xchg
inc
icebp
leave
and
xlat
sbb
cli
fwait
imul
pop
enter
cmc
pop
mov
imul
int3
data16
dec
jl
mov
shlb
cmp
fadd
or
shll
mov
mov
or
and
int
jl
sbb
mov
lret
and
ret
addr16
dec
sbb
out
pop
stos
loope
and
mov
hlt
fsubr
and
pop
insb
mov
neg
lahf
mov
adc
cld
xor
scas
int
mov
dec
cmp
and
insb
mov
dec
lock
xchg
sti
or
cmp
fbstp
add
dec
rclb
mov
mov
cmp
mov
lcall
outsl
aaa
lcall
out
into
scas
ja
rolb
inc
and
xlat
mov
outsl
ja
insb
mov
mov
lock
loop
icebp
scas
pop
xor
addl
mov
cmpsl
fs
mov
adc
incl
popa
popf
out
fidivl
addr16
pop
cmp
dec
imul
jnp
fsubrl
dec
movsl
and
sub
jno
nop
lds
gs
dec
add
cmp
xor
add
loopne
or
mov
cmp
and
pop
sbb
stos
loop
cvtpi2ps
dec
mov
aas
lret
nop
cvtps2pd
pop
sbb
add
and
mov
xor
mov
mov
push
fcoms
pushf
sub
adc
push
icebp
faddl
stos
mov
xchg
pop
in
mov
push
insb
mov
mov
scas
sub
sub
fsubrl
add
add
push
decb
out
mov
mov
pusha
push
iret
sbb
or
sbb
outsb
mov
imul
or
push
fst
pushf
sub
lock
cmpsl
sub
popa
ljmp
pop
aad
dec
sbb
xchg
stc
jno
lcall
pop
movsb
dec
cmp
fldt
sbb
icebp
mov
xchg
pop
je
sbb
aam
push
sbb
xchg
xor
das
pop
or
sub
and
int
sub
xchg
and
xor
sbb
cli
cwtl
lock
xor
xchg
sti
or
inc
xchg
iret
pop
jbe
movsb
lahf
mov
xchg
pushf
loopne
push
loope
jnp
push
jno
shlb
inc
lock
lret
loope
shll
cmp
cmpsl
test
cmp
xchg
dec
movsb
movsb
lahf
in
mov
cmpsl
icebp
lock
pusha
inc
mov
mov
pop
inc
and
and
in
sub
xchg
mov
cltd
cmp
cmp
hlt
scas
mov
nop
scas
aam
xor
ja
in
outsl
jl
pusha
inc
mov
cmp
add
fwait
jns
adc
push
dec
popa
nop
test
and
enter
xchg
pop
in
and
xor
aas
dec
subb
ljmp
and
mov
stos
mov
mov
xchg
adc
xor
xor
rcrb
cmp
fdiv
xchg
and
mov
mov
mul
out
mov
adc
rcll
mov
insb
jno
std
mov
mov
sub
mov
lods
xchg
xor
imul
pop
les
movsb
lret
fwait
test
ja
lea
lods
xchg
xor
pushf
shlb
in
lock
out
xor
mov
mov
rolb
cmp
dec
jb
int3
pop
test
dec
rclb
mov
or
jmp
leave
xchg
pop
in
cmp
imul
int3
fwait
sbb
das
dec
xchg
addb
lods
loope
sub
push
push
lods
xor
lret
loope
inc
sarl
jns
fsubr
rclb
push
jg
add
testl
dec
lahf
xchg
lcall
pusha
push
mov
fwait
loopne
ds
sbb
in
jmp
jg
fwait
sub
je
pusha
pusha
pop
shrb
inc
or
xlat
mov
xchg
lahf
jo
int3
daa
jno
adc
and
dec
mov
ja
pop
arpl
sbb
and
jl
pop
ja
fsts
mov
scas
pop
cmp
shrl
jns
fsub
ret
sbb
mov
sbb
clc
hlt
inc
jno
int3
daa
add
adc
dec
mov
mov
rcrl
mov
lods
xchg
xor
mov
mov
nop
jg
push
xor
mov
sub
mov
hlt
cmpsb
mov
fsubrl
movsb
sub
mov
lods
push
gs
pushf
pop
mov
sub
inc
dec
popa
test
adc
daa
add
jmp
jmp
jns
fsubr
rclb
push
jg
pushf
stc
in
inc
mov
cmp
dec
sbb
rcrb
jmp
cld
lret
mov
repz
mov
push
arpl
cltd
sarb
cmp
inc
sahf
adc
fsub
cltd
rclb
fisttpll
inc
lea
mov
or
scas
jnp
mov
es
iret
std
mov
or
jg
rclb
and
ds
push
jo
push
hlt
push
pop
out
mov
int
outsl
mov
fs
out
jmp
sbb
ror
scas
stc
push
xlat
popa
aas
aad
mov
xor
pop
popa
sub
xchg
jl
pop
loopne
mov
insb
pop
pusha
dec
xlat
popa
mov
jl
and
jl
pop
jmp
dec
jae
push
adc
insb
aas
les
pusha
mov
mov
mov
ja
or
sub
jmp
dec
add
dec
mov
mov
movsb
jb
cmp
popa
je
ret
add
pop
xor
mov
fadd
inc
adc
mov
je
cmp
popa
je
cltd
and
or
xor
jl
ret
push
lahf
jo
jb
jb
adc
jne
and
imul
test
mov
cld
in
fildll
cmc
gs
pop
imul
sbb
jl
into
insb
lret
push
sbb
jl
pop
xor
iret
cltd
jo
sbb
mov
jbe
ja
and
insb
movsl
sub
sub
or
in
and
shlb
pop
mov
xchg
xchg
std
mul
out
mov
adc
fsts
dec
iret
cltd
mov
and
add
shl
cmp
fsubrl
je
fnstcw
imul
fsubrl
lea
adc
in
cmp
lahf
stos
je
sub
stc
lock
jl
movsb
int3
sbb
cld
pop
les
aad
imul
cmp
pushf
sub
dec
imul
sbb
xchg
notl
test
xor
je
or
outsl
xor
cwtl
mov
jl,pn
out
xchg
aad
cwtl
out
pop
test
jge
push
jg
or
lds
mov
je
fcoml
popa
sub
sub
sub
add
aaa
test
notl
test
das
aad
stos
or
pop
mov
mov
fs
fcmovbe
dec
sbb
cwtl
lret
loope
or
sub
cmp
call
adc
jnp
push
pusha
pusha
dec
xchg
mov
push
fcoms
pushf
sub
fs
cltd
cmp
imul
fwait
jns
filds
dec
sbb
push
mov
mov
mov
and
stc
fadds
mov
int3
and
jne
sub
in
cmp
pop
in
cmp
sbb
dec
pop
push
inc
scas
mov
dec
lcall
mov
sub
in
neg
fs
cld
xchg
loopne
aas
lods
mov
outsl
cmp
adc
sub
jmp
xchg
xor
sbb
cli
fwait
les
sbb
in
mov
pop
mov
cmpsb
mov
xor
int3
and
lock
scas
lods
and
lock
or
notl
mov
lods
mov
fwait
jns
add
icebp
clc
hlt
xor
mov
adc
sbb
mov
out
in
cmp
jne
jns
fsub
mov
rcl
lock
mov
insb
lret
push
push
jl
fsubrl
dec
xchg
aad
push
test
cmp
rol
hlt
xor
inc
adc
pop
mov
fistpll
popa
xorb
movsb
cmpsl
iret
add
cmp
scas
mov
insl
pop
in
cmp
hlt
add
testl
cmpsl
mov
lret
sbbb
int
insb
mov
sbb
clc
arpl
and
push
ja
movsl
and
sbbl
test
mov
xchg
and
inc
popf
lcall
mov
bound
add
dec
sbb
call
enter
pop
pop
in
cmp
jne
adc
sub
sbb
test
mov
jmp
jg
insb
mov
or
mov
cmpsl
icebp
enter
leave
add
pop
icebp
xchg
fbstp
fdivrs
lret
pop
scas
mov
dec
jb
or
push
nop
les
mov
jmp
movsl
jne
or
mov
mov
iret
cld
mov
int3
push
jb
mov
scas
push
out
lcall
mov
inc
movsl
mov
fwait
adc
jge
outsl
dec
hlt
pop
push
mov
or
stos
jo
in
xor
movsb
adc
cmpsb
pop
in
xchg
movsl
filds
xchg
adc
mov
cli
dec
sbb
push
out
sub
adc
pop
push
roll
sub
xchg
inc
and
gs
fmul
pushf
sub
in
jno
pop
mov
out
mov
adc
in
fs
cmpsb
dec
je
or
popf
cmp
sbbb
sub
push
fdiv
or
daa
jns
adc
sbb
inc
adc
hlt
jl
pop
ja
fs
out
cld
xchg
icebp
mov
setl
dec
loop
mov
popa
test
stc
lock
iret
loop
inc
adc
push
xchg
iret
pop
sub
dec
sbb
jno
mov
sub
mov
mov
pushf
loope
xchg
mov
insl
cmp
sbb
pop
dec
insl
insb
mov
xchg
addb
dec
mov
mov
pop
pushf
sub
add
inc
jo
out
cld
xchg
fsubrl
shrl
mov
pop
jecxz
and
pop
insb
ds
pushf
sub
mov
jnp
dec
fsubl
or
loope
xlat
setl
dec
mov
jbe
rol
inc
mov
dec
sbb
and
pop
insb
es
call
adc
sbb
pop
mul
out
sbb
pushf
jge
pop
mov
adcl
test
xchg
push
hlt
sbb
das
inc
and
xor
cltd
jl
jg
push
rcrl
inc
mov
andb
sarl
pop
in
mov
and
test
icebp
cltd
call
mov
ja
mov
sbb
outsb
out
mov
mov
dec
xchg
mov
fwait
lret
imul
mov
into
jno
data16
adc
dec
lock
sub
pop
iret
aad
pushf
mov
in
rolb
cs
jns
mov
push
mov
xchg
loop
jl
mov
ja
stos
das
out
mov
mov
shl
and
or
xchg
adc
inc
cs
adc
jns
push
sbb
sub
int3
pushf
sub
je
outsl
cmp
pushf
push
inc
iret
cmc
icebp
cwtl
jne
jl
fs
inc
xor
push
sti
or
jno
les
jne
jae
xor
mov
jno
lret
cltd
pusha
pop
mov
icebp
xchg
cmc
and
stos
sti
xor
mov
jnp
mov
add
scas
stc
inc
sti
loope
sub
in
and
mov
mov
mov
fwait
inc
or
insb
mov
pop
dec
cmp
xor
int3
repnz
inc
popa
sub
push
out
insb
and
popf
sub
loop
jmp
mov
sub
int3
and
in
dec
push
les
addr16
adc
lahf
jae
dec
or
insb
inc
adc
les
imull
shl
cmpsb
push
add
cmpsb
or
lds
xchg
jl
rcrl
xchg
sbb
add
mov
jl
out
cmp
loopne
inc
xchg
adc
xchg
adc
orl
inc
sbb
mov
sbb
idivl
fsubs
jge
pop
in
xchg
and
sti
and
repz
arpl
add
outsb
xchg
lock
cmp
mov
pusha
popa
pop
sarb
mov
pop
add
mov
jno
shlb
or
repnz
lret
popf
mov
add
jbe
aam
repnz
fldt
ret
cld
mov
xor
scas
mov
xchg
out
les
ss
jmp
xchg
ret
push
pop
lock
sbb
inc
in
dec
ret
out
shlb
mov
adc
add
out
test
and
repnz
and
pushf
scas
loope
pop
insb
je
sub
fmull
insb
inc
fcompl
pushf
add
ss
xchg
scas
cmp
int
hlt
int3
stos
mov
mov
dec
nop
mov
inc
pop
xor
push
sbb
pop
loope
jmp
adc
std
or
insb
out
cmpsl
sbb
fadds
pusha
sub
aaa
adc
cs
cwtl
mov
popf
mov
mov
test
mov
popf
mov
aas
aad
mov
mov
lahf
mov
push
jne
fs
xchg
xchg
daa
icebp
mov
outsl
add
js
sti
or
lods
mov
add
and
mov
mov
or
test
xchg
outsl
mov
xchg
shl
aad
push
push
jb
jge
orl
cld
lret
popf
mov
adc
xor
pop
sub
add
stos
adc
cmp
fldt
push
xchg
mov
orb
adc
fldt
lret
adc
pushl
jnp
push
or
leave
jg
in
int
addr16
mov
push
insb
adc
iret
pop
scas
orb
sti
loope
pop
idivl
mov
lods
cld
or
xchg
mov
mov
in
inc
sub
out
fsubrl
cld
pop
rorl
cld
or
out
mov
stos
mov
mov
aas
xchg
mov
idivl
pop
in
mov
sub
cld
xor
inc
icebp
test
out
aaa
mov
outsb
jl
push
aas
mov
dec
bound
mov
jnp
out
ja
nop
ficoms
mov
mov
adc
aas
decl
sub
xor
rolb
or
mov
movsb
fbld
sub
in
pusha
pop
cmpsl
or
sbb
imul
popf
outsb
jl
pop
xlat
iret
adc
jno
pop
addr16
fwait
inc
xor
push
cmpsl
jo
adc
inc
xchg
adc
mov
mov
add
xor
push
test
cmp
or
aaa
call
out
ret
shl
mov
mov
sbb
mov
mov
mov
dec
dec
insb
pop
push
adc
shrb
lods
std
or
push
enter
pop
jl
jno
shll
hlt
jno
mov
mov
cmp
and
int3
pushf
mov
cmp
or
push
mov
mov
shlb
fisttpll
cld
mov
sub
ja
jns
jo
cld
sti
and
int3
add
dec
shl
lods
cld
or
mov
adc
in
mov
adc
fmull
aam
sub
jl
or
push
aaa
in
inc
adc
pushf
test
orl
cmp
sub
dec
mov
je
and
shrl
mov
lea
or
loopne
aas
aam
repnz
iret
fdivl
int3
xchg
call
and
cld
mov
sub
rcrl
rcll
sub
fucomip
mov
adc
fstps
dec
nop
int
loope
sbb
inc
mov
or
lret
cmp
mov
lock
cltd
loopne
inc
xlat
and
je
push
arpl
jg
loopne
mov
sub
lahf
call
xchg
inc
jmp
lock
fs
jbe
in
push
cmpsl
sbb
cld
inc
insb
stos
adc
scas
mov
mov
add
dec
fdiv
jl
test
jnp
pop
in
lds
loop
or
fcoml
mov
push
out
mov
pushf
cli
add
jo
sbb
out
mov
stc
and
pop
sub
cltd
cmpsl
lahf
jo
iret
test
mov
fistps
in
sbb
mov
in
adc
icebp
sub
jmp
adc
add
fsubrl
and
addl
dec
adc
dec
xlat
xchg
mov
or
loopne
pop
test
decl
jmp
cmp
popa
add
inc
jl
and
xor
ljmp
das
test
divl
aam
adc
adc
jmp
adc
cmp
xor
jnp
and
leave
pop
xchg
push
std
xchg
and
les
lock
aad
mov
inc
inc
movsb
mov
lret
aaa
mov
insb
cmpsl
call
pop
xlat
push
mov
fstpt
jnp
and
cltd
add
lods
cld
or
lret
sbb
daa
adc
dec
mov
mov
aaa
and
push
fldl
inc
jae
dec
lahf
jo
imul
in
shrb
mov
pusha
nop
outsb
jl
rorl
cld
hlt
hlt
insb
mov
rcrl
or
scas
sti
faddl
int3
pushf
adc
mov
aaa
call
int3
pushf
mov
xchg
mov
jl
out
cld
inc
in
loopne
dec
pop
xor
leave
sbb
jg
cwtl
popf
push
xchg
int
mov
cmpsl
lahf
in
dec
sarl
lods
cld
or
fs
adc
and
sbb
or
xor
mov
and
cld
push
add
in
cmp
mov
aam
int
sub
negb
mov
pushf
loope
pop
and
test
pop
lods
dec
hlt
arpl
mov
adc
cld
mov
cmp
lret
test
std
mov
xchg
iret
adc
jb
imul
int3
je
insb
cmp
movsb
mov
pop
adc
negb
xor
test
mov
push
insb
jns
lods
sbb
dec
in
adc
and
leave
sarl
or
mov
jnp
loope
cmp
adc
pop
push
insb
or
mov
mov
mov
in
adc
and
movsb
pop
cmp
cld
cltd
popa
int3
mov
xchg
sahf
in
mov
mov
call
shll
xorb
cld
jbe
mov
cld
mov
mov
push
lock
xchg
mov
mov
jp
mov
adc
and
xchg
stos
sti
gs
add
iret
gs
mov
popf
fbstp
adc
mov
jl
pop
ja
push
lahf
or
jg
loopne
add
in
sub
pushf
das
inc
xchg
pop
or
dec
push
icebp
pop
test
testb
mov
lea
popa
lods
push
jbe
icebp
jl
adc
xor
pop
in
cmp
and
ret
testl
xor
mov
cwtl
cmpsl
loope
add
pop
mov
add
int3
test
lea
icebp
cld
xchg
pushf
lds
aam
inc
fs
jmp
movsl
dec
jne
int3
imull
push
rcrl
pop
lahf
insb
sbb
popf
jo
or
outsl
jl
inc
pop
push
add
addr16
mov
inc
or
push
mov
test
add
cld
rcrl
add
push
sbb
in
mov
xchg
mov
mov
rcrl
push
add
das
adc
mov
xchg
loope
mov
jns
jg
or
add
pushf
mov
dec
mov
movsl
sti
or
movsl
es
xor
jmp
lahf
adc
sub
push
xchg
iret
pop
cmp
xchg
sub
std
pop
inc
mov
int3
xor
xor
jl
mov
pusha
dec
adc
push
aad
fcoml
inc
mov
add
movsl
sbb
jnp
pop
aam
dec
sbb
xchg
addr16
ret
insb
dec
insb
pop
mov
mov
les
mov
shrl
adc
push
das
inc
adc
xor
mov
cmp
and
lret
fwait
test
dec
scas
ja
jo
fistpll
adc
out
mov
call
scas
or
das
les
cmp
dec
sub
mov
mov
icebp
dec
dec
sbb
cld
sbb
ljmp
pop
lods
cld
das
mov
mov
stos
fucom
cmp
sbb
jo
pop
mov
sub
xchg
xchg
ret
daa
jae
adc
xor
scas
sub
push
push
jns
sbb
insb
mov
cltd
pop
in
ds
jnp
repnz
xor
test
scas
xlat
js
add
pushf
ret
lods
mov
xor
and
sbb
bound
adc
mov
mov
xor
test
jae
pop
in
inc
dec
nop
scas
or
addr16
jbe
lahf
sub
scas
es
cmp
sbb
jo
pop
gs
sahf
xchg
mov
jno
pop
cmp
mov
lods
dec
xchg
inc
out
mov
lea
mov
cmp
sbb
add
mov
mov
pop
in
inc
dec
ja
decl
push
test
or
movsl
adc
inc
adc
cmp
adcl
nop
inc
mov
pop
ss
adc
mov
bound
cli
mulps
rorb
mov
cli
or
mov
or
call
fimull
lods
lcall
ret
mov
test
xchg
and
or
cmovae
fs
ss
lods
in
sub
dec
lahf
jo
pop
push
mov
dec
mov
add
cmpsb
dec
sbb
in
jmp
mov
cmovnp
roll
pop
push
das
adc
jge
pop
mov
cmp
mov
sbb
outsl
pop
movsl
shll
jmp
hlt
pop
dec
cmc
jecxz
xlat
popa
mov
jbe
cmc
or
sub
add
mov
aaa
lret
icebp
int3
inc
mov
hlt
and
sbb
adc
add
dec
sbb
adc
push
pop
ja
pop
push
jmp
jl
adc
mov
sbb
out
mov
dec
lcall
je
sbb
xor
negb
add
cmpsl
faddl
shl
mov
enter
int3
xchg
sub
shlb
lods
jno
sbb
and
cmp
iret
xor
test
mov
pop
shrl
xchg
mov
in
aas
lcall
cmp
lods
cld
add
cmc
add
daa
jno
and
sub
cmpsb
xchg
add
xchg
out
pop
sbb
aas
movsb
xlat
loope
add
xlat
out
ret
adc
mov
cwtl
ror
leave
adc
addr16
in
bound
cmpsl
add
popf
xchg
adcb
add
xlat
popa
mov
xor
insb
pop
dec
test
cmc
insb
mov
add
push
loope
iret
loop
sti
repz
es
aad
mov
mov
xchg
out
inc
aad
mov
jae
daa
test
mov
or
insb
mov
insb
insb
insl
aaa
dec
fsubrl
xor
sub
mov
sbb
lret
push
insl
sub
mov
xor
pushf
add
cli
or
lds
into
hlt
adc
leave
xchg
adc
mov
mov
jnp
shl
leave
xchg
adc
in
fisubrl
dec
pusha
cmp
dec
shr
jg
arpl
les
jne
mov
mov
stos
sti
or
stos
mov
fldenv
dec
cltd
and
mov
sub
jmp
xchg
stos
or
imul
lods
aam
dec
sbb
or
loope
int3
je
ljmp
rclb
lret
fwait
sub
xchg
adc
in
fisubrl
lret
adc
cld
fsts
leave
xchg
adc
in
fisubrl
push
adc
push
push
xchg
dec
or
imul
fcoml
lret
test
pop
movsb
adc
mov
cld
mov
add
cmp
outsl
adc
fldenv
addr16
fisttpll
insb
cmp
lea
icebp
sbb
jl
sub
dec
sbb
mov
or
idivb
xchg
sub
std
sti
mov
push
pop
push
test
lods
sti
addb
mov
push
pop
jmp
iret
loopne
mov
int3
fwait
mov
pusha
pop
add
cli
or
out
sbb
addl
jg
cld
dec
pop
sub
xor
sub
fsubr
xor
pushf
add
or
imul
sub
faddl
dec
sbb
shlb
das
adc
scas
push
pushf
insb
cld
sti
sub
mov
lret
pop
sbb
sti
and
adc
mov
mov
popa
addr16
inc
and
mov
xor
cmp
bound
lods
adc
ja
lret
pop
adc
inc
inc
frstor
lock
imul
cmp
hlt
int3
or
jns
add
xchg
pop
pushf
int3
cld
xchg
mov
into
dec
aad
clc
cltd
movsb
insb
je
xchg
mov
or
push
mov
pushf
lods
mov
mov
xchg
push
arpl
jb
lret
fwait
insb
int3
jecxz
aam
lret
sbb
sbb
stc
out
rcll
dec
outsl
sub
cmp
xor
fistpl
movsl
test
fcoml
imulb
sub
test
mov
adc
hlt
movl
cmpsl
loope
pop
sbb
xor
sub
jl
mov
outsl
xor
rorl
jo
and
ja
jl
and
std
xchg
mov
mov
dec
sbb
les
fsubr
mov
scas
sub
pop
cmpsl
out
add
pop
sub
mov
adc
dec
sub
inc
scas
addr16
add
dec
pop
lods
cld
testl
lods
pop
ja
xchg
mov
inc
adc
mov
push
imul
push
or
out
test
xor
fstps
push
push
movsl
hlt
add
mov
ja
or
imul
nop
fnsave
xchg
dec
inc
sbb
xor
stos
jp
outsb
movsb
out
aaa
sub
pop
inc
mov
pop
movsb
pop
aas
or
mov
xchg
mov
rcrl
xorl
dec
xlat
push
fdiv
jl
mov
negb
rcr
add
shrl
jl
pop
pop
cld
stos
fidivs
std
int3
fwait
inc
pushf
mov
icebp
cld
iret
jnp
jl
jle
filds
or
xor
test
lock
jmp
push
pushf
loopne
call
inc
cmpsb
dec
jp
jo
call
sub
rcr
and
aas
shl
subb
and
mov
stos
adc
scas
mov
mov
fists
push
hlt
push
popa
mov
adc
cmp
jne
push
sbb
mov
negb
les
lods
mov
sub
mov
aad
lods
cld
or
out
test
out
adc
rcl
lock
cld
aas
mov
jg
fidivrl
cmp
adc
insb
adc
mov
jl
pop
jno
shlb
ret
stc
add
jge
cmp
outsl
stos
adc
fsubrl
add
in
cmp
push
add
mov
mov
dec
xchg
cs
mov
xor
fbld
add
fwait
mov
cmp
sub
shl
pushf
outsb
jl
sti
in
cmp
lahf
movsb
std
sbb
mov
movsb
shl
fisttpll
test
pop
fwait
mov
xchg
cmp
aam
pushf
out
pushf
aam
jl
add
js
out
cld
xchg
and
adc
js
cmpsl
jae
int3
fists
jnp
in
and
adc
adc
mov
aaa
daa
push
std
fs
mull
mov
pop
scas
sbb
cmp
lahf
jo
fndisi(8087
pushf
and
clc
cmpsb
dec
sbb
adc
icebp
cwtl
mov
add
pusha
insb
add
and
outsb
jl
pop
pop
cld
flds
rolb
pushf
sub
mov
call
pop
aaa
mov
inc
pop
fadds
int3
push
mov
jl
xchg
scas
scas
push
push
jno
mov
addr16
frstor
dec
xchg
sub
loopne
lods
inc
xchg
lahf
jb
aad
test
ja
stos
cmp
sbb
push
hlt
cli
fdivrl
add
icebp
cld
sub
js
int3
mov
sbb
in
cmp
inc
sahf
dec
cld
xor
jmp
mov
mov
sbb
jb
fs
inc
icebp
sub
mov
adc
xor
popa
in
sub
addr16
mov
inc
or
mov
sub
dec
jmp
sbbb
mov
mov
sbb
or
push
je
inc
scas
jg
addb
mov
xchg
lcall
bound
mov
repz
fistpll
inc
add
inc
lock
icebp
cld
adc
fs
ljmp
aaa
sbb
pop
add
repz
rcll
sbb
mov
repnz
stc
clc
push
pushf
sbb
mov
scas
ret
jo
inc
shrl
mov
or
loope
lcall
add
push
and
pop
inc
pusha
cmpsl
aam
xchg
jno
pop
cmp
inc
sbb
or
insb
inc
rcrl
cmp
lahf
shll
mov
cmc
cmp
sbb
les
cmp
jg
loopne
add
in
sub
movsb
out
pushf
jmp
and
cmp
popa
lods
repnz
popf
jo
pop
mov
in
dec
inc
push
aad
fsubrl
inc
add
cmp
lahf
je
iret
addr16
rcl
xor
in
scas
mov
rorl
pop
cwtl
jmp
mov
xor
in
adc
mov
xchg
pushf
sbb
add
push
insb
inc
mov
xor
mov
pop
scas
das
int3
popa
sub
fidivrs
aam
rcrl
lock
icebp
cld
adc
sub
loope
fdivrs
sbb
lahf
xchg
and
xor
pop
sbb
cld
xchg
cmp
and
jmp
aaa
daa
sub
or
xor
mov
adc
mov
sub
xor
xchg
sub
orl
es
daa
in
fisubrl
dec
hlt
jo
and
rcll
pop
add
sbb
sbb
jl,pn
and
xor
mov
rcrb
xchg
adc
fcompl
and
add
les
or
dec
xchg
insb
icebp
inc
in
sub
xor
cld
fisubrs
xchg
inc
rorl
dec
sbb
call
mov
lock
aas
jbe
or
insb
mov
add
out
cmp
mov
sahf
sub
add
lods
cld
sbb
mov
test
cmp
pop
jecxz
push
aam
mov
adc
popf
movsl
cld
adc
insb
xor
sbb
in
mov
push
jbe
sbb
stos
mov
test
cmp
pop
mov
push
aam
mov
cwtl
sbb
sbb
ret
sub
leave
js
jno
subl
jl
mov
xchg
fnstsw
jl
shrb
nop
lods
mov
pop
shlb
mov
aam
add
or
or
inc
push
lcall
daa
sbb
das
das
and
xor
mov
lods
out
inc
insb
adc
adc
roll
cmp
or
jno
fndisi(8087
lret
mov
jl
pop
ja
xchg
and
fildl
add
xchg
dec
xor
cld
dec
fsubrl
sbbb
dec
sbb
mov
mov
repnz
adc
mov
inc
xor
test
or
mov
pop
daa
clc
cmp
repnz
hlt
add
sub
mov
cmp
add
adc
jo
nop
shll
nop
and
push
call
cs
scas
aam
sbb
mov
and
insl
jns
cmc
icebp
cld
fsubrl
jmp
cmp
popa
mov
movsb
mov
sub
and
rorl
jl
out
xchg
fcompl
add
sbb
jg
fcmovnb
xor
push
sub
mov
stos
jg
call
cmp
je
mov
dec
jne
les
movl
dec
push
nop
mov
adc
sarb
ljmp
xor
test
repnz
cwtl
pop
ja
nop
shll
mov
ja
push
push
outsl
jo
inc
cmc
aam
pop
mov
jmp
div
cld
sub
div
xchg
ret
or
xor
cmpsl
lods
daa
cmp
fsubl
xor
cmp
outsl
xor
lcall
jmp
fsts
and
xor
insb
push
rcrl
js
out
cld
xchg
pushf
or
icebp
sub
in
or
inc
add
cmp
lahf
je
mull
jl
stc
xor
and
cmp
and
std
bound
mov
mov
push
int3
jmp
xor
push
fildll
pusha
fs
lods
std
mov
lret
adc
je
mov
dec
jne
mov
push
test
jbe
lea
cmp
pop
sub
outsl
and
aas
mov
int3
call
in
fistpll
pop
pop
cmp
cs
xlat
js
add
xlat
imul
fnsave
sbbb
jno
test
xor
inc
cs
mov
xchg
mov
hlt
aaa
pop
mov
mov
sub
or
cmp
mov
pusha
dec
dec
sub
add
lret
or
xor
push
pop
dec
xchg
bndstx
inc
adc
fisttpl
movsl
repnz
pushf
sub
insl
lock
dec
sbb
and
les
int3
pushf
scas
inc
cwtl
pop
sti
repnz
inc
mov
pop
add
push
mov
or
sub
jae
loope
xchg
iret
pop
jo
aas
pushf
icebp
jl
popf
out
out
mov
jg
in
mov
repz
jle
sbb
mov
insb
inc
xlat
daa
lock
les
fs
out
mov
dec
lcall
dec
je
ja
int3
repz
lock
jae
lods
out
insb
mov
rcrl
daa
popa
lods
or
daa
add
addr16
fldl
div
cld
xchg
pushf
loopne
pop
fwait
cld
pop
fs
pusha
pusha
sbb
and
loopne
in
sub
stos
jp
mov
and
sbb
pop
shl
dec
sti
xchg
mov
inc
inc
movsb
mov
aas
mov
or
jmp
mov
mov
xchg
in
fs
inc
or
fs
xchg
xchg
icebp
jl
popa
lods
jae
sub
xor
sub
test
xchg
sbb
xlat
popa
inc
mov
cmpsl
jb
hlt
loopne
movsb
ret
cmp
inc
rorl
push
jbe
imul
mov
mov
cmp
sbb
hlt
xchg
fndisi(8087
loopne
fldcw
push
rcrl
addr16
pushf
popf
fldt
mov
mov
mov
xchg
lret
pop
lock
and
test
cvttps2pi
jmp
test
out
fsubr
add
pop
rorl
sub
sbb
aas
inc
test
jmp
iret
adc
push
sbb
aas
lret
xchg
sub
sbb
lods
hlt
ret
lret
cmp
inc
mov
inc
adc
pushf
test
pop
and
xstore-rng
cmpsl
add
adc
divl
lock
cmp
push
mov
fimull
es
mov
mov
dec
lds
add
push
sbb
loop
and
addb
or
out
sbb
in
lock
xchg
mov
cwtl
loope
mov
sbb
add
and
lret
adc
jnp
inc
mov
dec
sbb
rcrb
sub
iret
fwait
jb
sbb
mov
cmp
repz
cwtl
mov
rolb
bound
imul
push
adc
pop
pop
pop
loop
jl
loopne
int
mov
mov
xor
push
fstl
xchg
and
ja
jo
add
sub
inc
adc
mov
pop
push
lods
and
xchg
pop
fisubl
rclb
arpl
daa
jnp
xchg
sub
inc
aam
out
rcll
dec
outsl
sub
or
leave
int3
ljmp
loop,pt
xor
lcall
and
inc
lds
pop
pop
popa
jno
shll
jmp
lahf
add
sti
or
stc
add
jmp
lahf
add
sti
or
testl
mov
push
xor
sub
xchg
and
mov
cmp
jo
or
je
sbb
jne
and
and
daa
jo
lea
mov
cmpsl
pushf
mov
fsubl
insl
orl
ffreep
push
lahf
pop
dec
dec
pop
insb
cmp
mov
mov
jnp
mov
lods
push
test
mov
adc
filds
xchg
pop
pop
sbb
repnz
insb
jns
lock
jl
and
aam
xchg
sbb
cwtl
push
loope
add
sbb
icebp
loopne
and
mov
mov
mov
jne
sbb
xchg
popa
insb
xor
test
dec
ret
andps
dec
rcll
nop
inc
scas
subb
push
sbb
xor
mov
jl,pn
xchg
or
lods
jno
inc
jno
adc
scas
mov
push
and
lret
das
mov
xor
cmp
add
mov
or
in
xchg
aaa
ret
das
popa
in
mov
xchg
mov
pop
adc
push
xchg
iret
pop
sti
rorb
lods
cld
mov
xchg
xor
sbb
test
jl
jl
pop
jnp
push
sahf
sub
or
xor
sbb
mov
icebp
imul
sbb
data16
xor
int3
pushf
jnp
xchg
inc
lods
cmp
cmp
aad
or
pop
jmp
xchg
aam
dec
fdivrl
and
push
sbb
rcl
lods
cld
or
movsl
jmp
mov
jne
inc
les
or
jge
sbbb
je
scas
cmp
add
lret
inc
xchg
iret
pop
sti
repnz
mov
das
mov
scas
stc
mov
dec
xlat
popa
mov
cmpsl
cld
fwait
jno
adc
xlat
aas
dec
popa
movsb
xchg
and
push
mov
popa
mov
or
imul
cwtl
sub
loope
jne
sub
loope
lret
jmp
xlat
das
test
rclb
fsubr
int
push
out
rcr
inc
cmp
sbb
cmpsl
fisubl
cmp
fbstp
add
xor
adc
or
scas
pop
cmpsl
icebp
lock
push
roll
sbb
and
add
pop
nop
lret
test
jp
pop
and
cld
xchg
xor
aam
or
inc
insl
push
mov
mov
movsb
jb
cmp
shrb
adc
cmp
ss
in
cmp
loop
push
cltd
sub
int
leave
pushf
fdiv
mov
sbb
mov
mov
xchg
jmp
mov
icebp
in
sbb
pop
fdivl
mov
mov
lods
ja
imul
sbb
jl
adc
sub
ja
insb
aaa
jge
mov
lds
movsl
test
jne
jmp
sub
and
dec
sbb
xchg
cli
pop
sti
sti
pop
xchg
inc
sbb
roll
lods
cld
mov
jmp
mov
add
fldcw
cmpsb
jnp
andps
dec
shlb
fstpt
pushf
inc
je
dec
sbb
inc
in
iret
and
leave
addb
sbb
das
es
adc
dec
pop
jmp
movsl
pop
mov
dec
stos
loop
push
pusha
sub
mov
xchg
sub
xor
shrb
adc
jmp
push
mov
cmp
jno
pop
test
jge
imul
jbe
sub
lret
cmc
test
out
push
bound
or
lahf
test
pop
or
adc
inc
cmp
out
sub
push
xchg
mov
cwtl
fildll
dec
movsl
in
nop
mov
mov
lds
sub
adc
rorl
icebp
hlt
neg
testl
mov
loope
sbb
inc
mov
xor
fwait
jns
mov
icebp
mov
lret
adc
int3
je
out
dec
cmpsl
icebp
loopne
movsl
out
sbb
jns
or
adc
popa
movsb
xor
iret
loope
mov
cmp
ja
enter
insb
mov
pusha
pop
in
cmp
cmpsl
or
push
jl
adc
adc
das
out
imul
pushf
ljmp
jecxz
call
mov
imul
jecxz
int3
or
arpl
icebp
mov
insb
xchg
repz
insb
inc
and
dec
out
add
popa
jbe
shr
push
jno
outsb
pop
cmp
push
pop
pop
aaa
aas
pushf
lahf
mov
ja
sarl
cmp
pop
sarl
insb
xor
iret
scas
dec
loop
daa
jecxz
call
push
jmp
dec
lds
inc
cmc
std
daa
jno
ljmp
test
sbb
sub
insl
popf
in
mov
in
sbb
sub
outsb
popf
in
or
pop
lods
test
scas
outsl
popf
in
and
pop
lods
push
xchg
enter
daa
jno
dec
pop
mov
pop
insb
mov
mov
mov
jne
shlb
push
mov
mov
xchg
enter
mov
mov
xchg
enter
mov
mov
fwait
cmp
and
int3
pushf
sub
pop
shl
add
mov
test
mov
mov
jmp
ljmp
cmp
aas
paddusw
call
int3
adc
mov
fsubrl
add
jg
pop
daa
xor
and
jns
fsub
lret
ret
arpl
mov
ds
mov
push
mov
cmp
fsubl
or
lret
xchg
sahf
in
daa
pop
push
movsb
jno
pop
jmp
in
addr16
pop
mov
hlt
and
lret
cmc
repnz
mov
lods
in
pusha
aaa
mov
pushf
add
jne
fcmovnb
orb
xor
ja
sti
repz
cmpsl
jnp
cld
popf
push
aam
pop
cmp
mov
push
subb
cld
mov
adc
imul
push
dec
sub
inc
jmp
add
jl
rorl
data16
dec
sbb
jnp
into
cld
leave
xchg
add
dec
cltd
and
jge
jl
mov
xor
pavgb
push
sbb
dec
and
xor
sbb
add
int
mov
cvtdq2ps
mov
sbb
sub
mov
lods
ret
push
clc
je
int3
pushf
mov
cltd
inc
sbb
xor
push
lret
sbb
adc
cmp
sub
push
mov
adc
movsl
stc
adc
movsb
shll
sbb
hlt
or
stc
add
jmp
xchg
and
mov
mov
jnp
mov
mov
mov
jmp
in
mov
or
mov
add
ja
push
and
mov
sub
or
xor
push
jb
int3
int3
je
jge
lods
scas
push
pop
adc
pminub
enter
pop
sti
cli
or
adc
fdiv
add
sti
mov
push
pop
daa
std
mov
push
outsl
add
nop
addr16
outsl
sbb
aas
push
cld
xor
iret
popf
bnd
fmull
dec
xchg
inc
mov
fs
xchg
and
and
add
xor
int
aam
rcrb
adc
aas
mov
mov
mov
or
insb
inc
add
mov
pop
xchg
sbb
xor
pushf
in
addr16
jae
loope
out
insb
je
ja
jl
jbe
and
sbb
cld
xchg
dec
je
mov
hlt
daa
popa
lods
mov
mov
mov
xchg
lods
and
xchg
shl
ret
ss
adc
or
jmp
mov
add
aas
lret
cmpsl
mov
mov
cmpsl
leave
push
out
insb
aas
icebp
hlt
push
rorl
adc
imull
xchg
iret
pop
js
dec
sbb
push
adc
outsl
inc
sub
push
addr16
lods
xchg
clc
xchg
int3
lahf
hlt
mov
leave
pusha
pop
xlat
les
fildll
scas
pop
outsl
pop
gs
mul
out
fmul
xlat
and
pusha
addr16
lods
data16
inc
adc
mov
outsl
cmp
and
fistps
sub
sbb
add
and
mov
jl
sbb
fwait
stos
jns
xchg
jo
fnstcw
loopne
pop
lods
push
les
int3
adc
shlb
aas
or
sub
pop
bound
mov
test
js
insb
mov
jl
sbb
mov
push
cvttps2pi
daa
sbb
insb
in
cmp
aaa
push
sti
or
negl
aam
pop
jb
jns
sub
pop
mov
dec
push
icebp
mov
xchg
fcompl
int3
xchg
jo
nop
pop
sti
rolb
cld
jbe
ret
push
idivl
fbstp
test
jnp
mov
sub
negb
xor
ja
or
enter
mov
xor
cmp
jae
jns
pop
fs
lret
sbb
cmp
mov
ret
lahf
mov
in
mov
pop
fildll
pusha
inc
add
pop
sbb
aaa
add
outsb
inc
xchg
in
mov
cmp
imul
test
je
shl
addr16
mov
inc
aas
or
mov
inc
adc
push
aad
fdivrl
int3
pushf
scas
dec
mov
dec
lahf
add
decl
lds
negb
pop
outsl
xchg
or
fldt
mov
sbb
fbstp
add
insb
inc
mov
push
lret
sbb
pusha
movsl
loope
mov
lods
ds
adc
adc
xor
jbe
or
enter
addr16
and
loopne
popa
lods
add
xchg
fwait
mov
push
pop
inc
cmp
leave
enter
test
out
inc
jg
add
test
jno
adc
bound
cmp
pushf
pop
je
push
clts
int
lods
jl
stc
lret
sbb
inc
pop
lahf
fs
or
sarb
wbinvd
in
cmp
subb
outsb
popf
sub
repnz
sti
mov
cmpsb
and
out
mov
mov
sbb
add
xor
iret
in
mov
pusha
popa
inc
test
and
cmc
dec
insl
mov
and
pop
dec
popa
mov
pop
in
rolb
xchg
out
mov
movsl
repnz
and
rolb
jne
cmp
icebp
fcoml
test
jl
pop
ja
cmp
insb
jg
call
repnz
fs
inc
cmpsl
icebp
or
test
xor
lods
or
in
imul
call
in
iret
imul
shl
xchg
sbb
sti
or
mov
into
pop
cltd
jo
pop
cmp
in
inc
or
imul
fwait
jns
psubusw
cmp
mov
sub
int3
add
popa
inc
popa
xchg
jl
hlt
stc
add
pop
jmp
xchg
and
sti
or
lds
dec
sbb
or
push
mov
inc
pop
mov
lret
fwait
sub
repnz
dec
cltd
xlat
or
and
popf
jno
pop
xor
subl
and
adc
fs
dec
jmp
xchg
jne
out
pop
pop
mov
push
clc
lods
jl
jmp
add
pop
sub
sbb
jmp
push
cmp
mov
sub
sahf
int3
add
mov
sbb
add
mov
pop
mov
pop
xor
aaa
and
inc
out
outsl
mov
xchg
ret
lret
pop
bound
add
lds
gs
xchg
push
xor
aaa
stos
jg
loopne
cmp
or
mov
int3
sbb
jg
fdiv
cmp
sti
mov
push
pop
inc
cmp
in
fimull
pushf
pop
inc
cmova
sub
pop
mov
testl
iret
pop
jecxz
aad
mov
or
adc
pop
shll
push
push
stc
or
loope
decl
lods
mov
adc
sub
mov
dec
pushf
cmp
dec
js
dec
nop
shll
xor
xor
xchg
mov
movsb
ds
sub
mov
add
iret
cmp
pop
xchg
pop
mov
mov
inc
ja
sbb
inc
or
movb
or
dec
push
icebp
pop
test
stc
adc
pusha
loop
dec
nop
ljmp
pushf
push
cld
mov
rolb
adc
mov
lods
clc
mov
in
jl
sbb
or
movsb
mov
add
ret
or
jb
iret
mov
sub
mov
push
jecxz
mov
int3
pushf
sub
push
pop
dec
incl
movsb
cmp
lret
fwait
scas
push
mov
mov
mov
stos
xor
lods
push
hlt
jae
mov
sbb
stos
sti
popl
mov
sbb
lods
cld
cltd
and
and
stos
outsb
jl
and
add
out
cld
hlt
and
int3
cli
in
test
stos
sti
pop
sub
sbb
pop
dec
cmp
rorl
inc
cld
rorb
mov
push
lahf
adc
or
ljmp
sub
fucomip
cli
or
mov
pop
pop
in
xor
ljmp
mov
ja
stos
jp
pusha
xchg
jmp
cmc
ds
pop
ja
pop
mov
pushf
mov
pop
dec
outsl
sub
cmp
sarl
les
ret
mov
mov
dec
sbb
push
xchg
int
xor
in
mov
or
out
jp
fistpll
cmp
jp
loopne,pt
mov
lock
cmp
sbb
imull
mov
pusha
push
sbb
leave
and
fwait
test
push
mov
push
hlt
dec
fcoml
fwait
sub
dec
inc
mov
gs
mov
das
jl
out
dec
iret
subl
jl
sub
ljmp
fisubrs
pop
in
xor
jmp
mov
mov
ja
stos
jp
pusha
xchg
jmp
cmc
ds
pop
movsb
clc
inc
pop
lods
in
aas
imul
rcr
add
mov
mov
fisubrl
rorl
fsubrs
lcall
mov
adc
int3
gs
rcll
dec
outsl
sub
cmp
les
shll
dec
mov
in
fildll
daa
sbb
cmp
rolb
es
jnp
mov
add
addr16
mov
lods
pop
jmp
adc
xchg
pop
dec
fdiv
subb
xor
in
dec
add
pop
or
out
test
es
loop
in
leave
cltd
cld
xor
in
les
lret
movsb
cwtl
sahf
in
xchg
xor
or
or
or
mov
subl
fs
jmp
fldenv
fs
scas
mov
test
cs
xor
and
je
jmp
popf
jb
in
xchg
push
pop
adc
cmp
dec
xchg
imul
pop
jmp
sbb
decb
testl
cltd
pop
in
cmp
in
push
xchg
enter
in
mov
cmp
sbb
inc
lock
in
push
pushf
jl
dec
pop
in
cmp
cmpsl
popf
in
fldt
ret
test
mov
testl
rolb
inc
fisubrl
xchg
mov
ja
stos
fidivs
xchg
adc
adc
popa
lods
std
hlt
icebp
insb
mov
jnp
in
cmp
insb
lret
mov
int
cmp
push
add
imul
popf
in
and
subb
lret
sar
into
pop
jmp
lods
sbb
cmp
pop
sub
push
bound
divl
fsubs
test
push
xchg
sbb
je
fsub
idivl
jnp
sbb
push
and
xchg
and
enter
int3
std
int3
dec
loopne
inc
lods
enter
jbe
mov
adc
inc
cmp
pop
sti
cli
or
loopne
or
insb
mov
xchg
sbb
arpl
and
xchg
and
je
pusha
cmp
test
loopne
push
inc
fwait
sub
push
pusha
and
shl
mov
sub
cmc
aas
setns
xchg
sbb
dec
sbbl
mov
mov
push
subb
push
jne
dec
xchg
insl
out
fildll
bound
insb
xor
add
mov
out
mov
dec
push
rolb
adc
xor
or
dec
add
push
sbb
repnz
sbbb
inc
movsb
add
and
sbb
icebp
xchg
and
xor
sbb
jmp
jg
pop
xchg
loop
pusha
pusha
push
mov
push
icebp
es
sub
sbb
and
adc
stc
pop
jmp
movsl
jp
das
int3
cmp
adc
adc
mov
nop
inc
mov
and
movsb
cmpsl
cld
sub
out
lcall
call
inc
xchg
mov
jecxz
hlt
xor
adc
lock
jmp
aad
mov
int3
xor
jl
int3
leave
jmp
movsl
jne
inc
adc
insb
mov
ljmp
js
call
jo
into
pop
ja
push
mov
loopne
lret
adc
fs
jmp
mov
outsl
fldt
push
loop
add
dec
dec
xchg
mov
hlt
rcr
mov
xchg
out
inc
aad
mov
sarb
lret
pushf
scas
cmc
xchg
pop
mov
nop
sub
cld
and
sub
mov
call
pop
mov
int3
push
jno
sbb
in
mov
push
loopne
test
jge
or
xchg
les
lret
fwait
and
mov
in
mov
jb
cld
insb
fldt
push
bound
cmp
je
and
xor
dec
clc
jle
test
cmc
add
daa
jno
adc
adc
sti
or
mov
cmp
aad
je
and
sbb
pop
mov
stos
jno
inc
ja
xchg
pop
scas
mov
dec
xchg
mov
cs
add
mov
cmp
jb
insb
mov
faddl
dec
sbb
or
daa
jno
push
pop
push
cmp
popa
stos
or
add
push
sub
cmp
sbb
sub
and
pushf
sub
mov
rorl
inc
adc
jo
push
loope
inc
dec
mov
sub
push
insb
and
gs
jl
std
in
cmp
sbb
pusha
xchg
add
pushf
scas
push
aad
xchg
das
add
sub
shlb
jmp
scas
mov
mov
lods
ds
sub
aam
dec
dec
addr16
outsb
jb
dec
je
dec
repz
in
jle
mov
insl
mov
addr16
dec
sbb
xor
lret
adc
add
dec
sbb
push
gs
insl
insb
pop
rorl
jno
fndisi(8087
aam
adc
add
pop
sbb
add
icebp
add
push
pushf
adc
mov
inc
adc
std
sub
xchg
sbb
inc
sub
ret
fwait
mov
movsb
insb
push
lods
cld
or
mov
mov
xor
loop
adcb
insb
mov
dec
pop
adc
xor
add
or
movsb
push
pusha
mov
jo
clc
cmpsb
dec
je
xchg
lahf
mov
adc
fstps
jne
add
mov
insb
pop
popa
and
sar
in
aam
into
pushf
sub
add
cmp
cld
xchg
pushf
jnp
sbbb
sub
and
or
mov
and
cmp
adc
jns
pop
push
push
xor
mov
xor
dec
sbb
cld
pushf
outsl
loopne
test
rorb
cmpsl
mov
enter
negb
call
adcl
or
daa
sbb
jl
dec
or
mov
cwtl
pop
popa
inc
dec
xor
dec
fdiv
jl
in
rcrl
enter
mov
pop
push
lods
aas
cmp
xor
mov
fldt
nop
test
sahf
mov
jb
out
fndisi(8087
fmul
adc
in
cmp
cmp
adc
fsubrl
jp
pusha
ja
aaa
push
fistpll
mov
cmp
jnp
push
aad
notl
lock
mov
mov
jno
mov
jmp
aas
add
mov
jl
mov
out
hlt
int3
cli
mov
inc
sbb
lahf
roll
xchg
std
or
rclb
mov
insb
mov
shll
push
addr16
mov
xchg
jl
mov
cmp
inc
insl
or
popf
adc
mov
adc
mov
xchg
pop
mov
mov
mov
arpl
daa
sbb
mov
mov
sbb
jl
sbb
sub
mov
cld
or
pop
fcomps
repnz
popa
lods
das
or
xor
or
jno
fadd
in
lcall
ret
lods
sub
mov
lods
mov
cmpsl
jb
sub
mov
lods
lahf
in
xchg
mov
push
insb
inc
mov
in
cmpsb
dec
je
shl
and
popf
mov
cmp
sub
jno
fndisi(8087
lret
mov
jl
pop
aad
dec
sbb
jg
fidivrs
jmp
flds
push
mov
cmc
add
repz
pop
popa
dec
dec
xchg
mov
mov
mov
cmpsl
pushf
test
and
jl
pop
jne
dec
lahf
insb
pushl
fcoms
fwait
sub
aad
adcb
push
xor
sub
push
push
xchg
pcmpeqd
les
add
mov
imul
xchg
push
inc
cmc
dec
jo
add
jae
sti
xorl
out
cmp
sbb
adc
icebp
pop
mov
fwait
loopne
cmp
sbb
inc
or
insb
mov
mov
lods
aas
jo
xchg
mov
fldt
xor
daa
push
xchg
movsb
lcall
call
push
xchg
and
sbb
xlat
imul
mov
mov
pop
fndisi(8087
xchg
lret
adc
jnp
fs
popa
xor
xor
pusha
push
mov
ljmp
fwait
mov
cmp
jo
xchg
and
iret
in
or
and
mov
xor
mov
dec
sub
in
punpckhdq
insb
pop
jno
pop
mov
testl
mov
hlt
xchg
sub
cld
cmc
inc
ret
mov
sbb
stos
sti
cltd
sub
cmp
sub
sar
jle
add
cmp
mov
xchg
dec
sbb
cltd
sub
iret
sub
mov
fsts
fstpt
mov
sbb
push
jmp
add
mov
adc
fwait
clc
dec
pop
test
stos
sti
les
rorl
imul
mov
xchg
dec
sbb
xchg
sub
xchg
sub
jl
jle
add
cmp
ja
ljmp
lds
dec
pop
test
stos
sti
les
.byte
.byte
pop
dec
sbb
cld
xchg
or
mov
dec
sbb
cld
out
xor
jl
sub
cld
or
insb
mov
jg
sub
cld
or
insb
mov
mov
push
sbb
lcall
insb
mov
or
sbb
jl
or
insb
mov
lea
in
sbb
insb
mov
mov
dec
sbb
cld
adc
hlt
inc
mov
cmc
lea
inc
hlt
cmp
sub
pop
push
fsubrl
pushf
sub
mov
push
sbb
lcall
insb
mov
jno
in
cmp
pop
lods
cld
or
pushf
xor
in
cmp
sbb
cld
ds
mov
cmp
leave
ljmp
jns
int
sub
mov
mov
fsubrl
cli
cmp
in
cmp
sbb
cld
mov
lods
imul
cli
lea
in
pop
sti
mov
lock
insb
mov
lea
dec
sbb
cld
sbb
sbb
pushf
sub
xor
idivl
pop
lods
cld
insb
fildll
loope
rcll
sbb
insb
mov
mov
test
lods
cld
or
insb
mov
mov
dec
sbb
cld
cmp
insb
mov
mov
dec
sub
cld
fsubrs
sub
fldenv
lods
cld
in
insb
mov
mov
push
sbb
cld
or
insb
mov
mov
dec
sbb
cld
rolb
mov
mov
push
sbb
cld
vpunpcklqdq
pop
in
cmp
sbb
inc
mov
insb
mov
dec
pop
in
cmp
sbb
inc
mov
insb
mov
dec
pop
in
cmp
sbb
inc
mov
insb
mov
dec
pop
in
cmp
sbb
inc
mov
insb
mov
dec
pop
in
cmp
sbb
inc
mov
pushf
sub
dec
pop
in
cmp
sbb
inc
mov
insb
mov
dec
pop
in
cmp
sbb
inc
adc
insb
mov
in
in
cmp
sbb
cld
dec
fsubrl
pushf
sub
add
in
cmp
sbb
cld
or
lods
xor
pop
sub
cld
pop
xchg
hlt
fmul
fwait
sub
pop
in
cmp
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
pop
sub
cld
adc
sarb
pop
in
cmp
sbb
cld
or
insb
add
pushf
sub
mov
dec
sbb
cld
or
pushf
sub
add
clc
cmp
sbb
cld
adc
jb
int
sub
cld
xor
iret
in
jle
mov
sub
jle
sub
mov
sub
cld
fsubrs
sub
cltd
dec
cltd
testb
or
insb
mov
mov
fs
sar
fsubrl
pushf
sub
in
pop
in
cmp
popa
sti
push
adc
insb
mov
mov
or
lods
cld
or
insb
add
lahf
sub
mov
or
lods
cld
or
insb
add
pushf
sub
mov
sbb
cld
lea
adc
pushf
mov
orl
pushf
sub
mov
dec
sbb
cld
or
insb
mov
lea
dec
sub
cld
fsubrs
sub
add
pop
cmp
sbb
cld
in
jns
int3
pushf
sub
mov
insb
dec
mov
mov
pop
in
cmp
sbb
cld
paddusb
pushf
test
in
cmp
sub
cld
fsubrs
sub
mov
sbb
cld
or
insb
mov
mov
dec
sub
cld
fsubrs
sub
lcall
cld
push
fsubrl
pushf
sub
mov
dec
sbb
cld
sub
insb
mov
lods
pop
in
cmp
sbb
cld
or
insb
mov
mov
dec
cmp
sbb
cld
aas
fsubl
jl
pop
sbb
cld
cmp
pushf
pop
jl
pop
sbb
cld
cmp
pushf
pop
jl
pop
pop
cmp
sbb
cld
or
insb
mov
pop
sub
cld
cmp
cltd
mov
adc
clc
cmp
sbb
cld
or
sub
jl
pop
in
cmp
sbb
cld
or
insb
mov
rcrb
lcall
mov
ficompl
xchg
sbb
cld
push
fadd
mov
rcrb
dec
sbb
cmp
pop
in
cmp
lods
cmp
pushf
insb
cld
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
dec
pop
sub
or
in
jl
fsubrl
mov
sub
cmp
pop
sbb
mov
pop
repz
shlb
xchg
cmc
enter
test
mov
fimuls
xor
ficoml
repz
into
mov
xchg
xorb
inc
xor
in
mov
mov
mov
adc
mov
lret
mov
decl
xor
fisttpl
repz
in
mov
mov
mov
xor
sbb
dec
inc
fdivl
xchg
gs
xor
in
repz
mov
pop
push
xor
call
lea
or
insb
mov
fcompl
jo
lods
cld
xor
stc
pushfw
rol
pop
mov
jp
shlb
ds
pop
mov
jnp
mov
push
mov
in
cmp
js
outsl
push
clc
xchg
in
stc
mov
lods
cld
or
insb
mov
mov
sbb
dec
mov
mov
jmp
scas
mov
xchg
rcr
movsb
gs
and
popf
out
fisubrl
and
or
pop
stos
mov
repnz
bnd
lods
aas
mov
add
icebp
xchg
hlt
test
sbb
rorb
push
xor
jnp
push
sbb
les
cmc
mov
aam
rorb
pop
dec
out
dec
mov
sti
mov
loope
loopne
jmp
mov
jnp
mov
mov
inc
dec
sub
mov
cltd
mov
mov
in
je
sti
test
fwait
cmp
sarl
push
in
jmp
jb
icebp
and
cmp
xchg
pop
cmpsl
jle
test
cwtl
fsubrl
jo
js
mov
mov
jg
mov
xchg
enter
pop
jmp
rcrl
outsl
andl
sbb
lods
in
adc
mov
xor
pushf
mov
pop
push
rcrl
sub
mov
mov
or
or
insb
mov
mov
sbb
dec
mov
mov
jmp
loope
inc
xchg
iret
fldenv
gs
and
popf
out
lods
into
mov
imul
add
outsb
out
inc
dec
jbe
sti
dec
push
outsb
xchg
scas
cs
out
mov
sub
mov
mov
out
ror
pop
aam
xchg
out
dec
inc
data16
mov
push
outsl
out
fcmovbe
sub
lds
lods
lods
push
inc
xchg
cmp
xchg
outsb
sub
jmp
xchg
gs
outsl
and
xchg
push
pop
push
imul
mov
aad
jbe
fiaddl
push
xchg
add
jmp
sbb
inc
es
dec
into
cmp
outsl
adc
xchg
push
or
jge
mov
sti
push
mov
rcr
movsl
cmp
fs
inc
jg
mov
stos
cli
push
testb
add
inc
repnz
mov
adc
jb
roll
in
or
pop
testl
xchg
adc
mov
and
pop
jmp
xchg
out
push
adcb
ss
inc
fsubr
int3
pop
mov
cmc
shll
sbb
cmpsl
lods
je
push
pop
mov
divl
bound
and
mov
in
test
mov
xchg
es
inc
inc
adc
mov
cwtl
sbb
dec
sbb
orl
pushf
sub
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
shll
int3
dec
pop
sub
lods
mov
pop
cli
dec
dec
sub
shl
lret
ret
int3
bound
mov
cmp
xchg
jecxz
lret
popa
lods
mov
cmp
pop
stos
mov
sbb
dec
dec
sub
lods
mov
nop
insb
push
popf
out
int3
pushf
sub
mov
dec
sbb
mov
aas
pushf
sub
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
sbb
insb
pusha
int3
mov
in
cmp
sbb
sbb
fsubrl
jo
jl
mov
sub
mov
push
fs
cmp
sbb
cld
or
insb
mov
mov
mov
mov
lcall
jle
fdivr
cmp
pushf
mov
mov
sbb
cld
arpl
aad
cmp
cmp
sbb
cld
fcompl
lods
pop
and
sbb
cld
or
insb
mov
mov
dec
sbb
or
mov
jl
je
add
sbb
cld
or
insb
mov
mov
dec
and
cld
sbb
insb
xchg
int3
mov
in
cmp
sbb
push
or
insb
mov
or
in
mov
sub
mov
mov
orb
or
insb
add
pushf
sub
mov
dec
sbb
cld
or
insb
cld
int3
pushf
sub
mov
jl
sbb
or
in
insb
add
pushf
sub
push
in
test
inc
or
in
aad
push
push
pusha
aad
adc
jl
and
das
ret
mov
lock
pop
cmp
sbb
cld
sub
sahf
mov
mov
sbb
cld
inc
fsubl
jl
pop
pop
cmp
sbb
cld
sbb
mov
mov
sbb
cld
inc
fcompl
jl
pop
in
cmp
sbb
pop
or
mov
jl
je
add
sbb
cld
or
insb
mov
mov
dec
and
cld
adc
insb
sbb
movsb
sub
mov
or
cmp
pushf
pop
jl
pop
and
sbb
cld
cmp
pushf
pop
jl
pop
dec
cmp
sbb
cld
dec
fcoml
mov
dec
sbb
cld
or
insb
mov
mov
lods
cld
or
jae
int3
pushf
sub
mov
dec
sbb
cld
or
dec
ror
insb
jl
pop
in
sbb
sbb
cld
and
insb
mov
sub
cmp
sbb
cld
or
insb
mov
pop
in
cmp
sbb
cld
dec
fsubrl
pushf
sub
insl
in
cmp
sbb
cld
jg
int
ds
pushf
jl
pop
in
cmp
sbb
cld
or
insb
mov
mov
lods
cld
or
jae
int3
pushf
sub
mov
dec
sbb
cld
or
dec
ror
jl
pushf
pop
in
test
cld
adc
insb
mov
mov
dec
jo
inc
or
insb
mov
int3
mov
dec
test
cld
cld
push
fdivrl
mov
push
sbb
lcall
insb
mov
lea
add
fs
fsubrl
pushf
sub
mov
mov
lds
addr16
sub
lods
cld
adc
hlt
inc
mov
cmc
lea
inc
hlt
cmp
sub
pop
push
fsubrl
pushf
sub
mov
dec
sbb
lock
mov
jl
je
add
sbb
cld
or
insb
mov
mov
dec
and
cld
sbb
insb
pop
fcomps
cmp
sbb
cld
or
insb
mov
cwtl
mov
ds
inc
lods
cld
dec
lea
sub
cmp
sbb
cld
or
insb
mov
pushf
pop
in
cmp
sub
push
test
jl
pop
cmc
cmp
pop
lods
cld
or
insb
mov
mov
loope
in
cld
paddusb
or
jl
pop
in
cmp
sbb
cld
or
pushf
sub
lea
dec
sbb
cld
or
pushf
sub
lea
dec
sbb
cld
or
pushf
sub
lea
dec
sbb
cld
or
pushf
sub
or
sub
dec
sbb
cld
or
insb
mov
mov
enter
or
pushf
sub
lea
dec
sbb
cld
mov
int
sub
mov
dec
sbb
cld
or
insb
mov
aaa
mov
and
or
insb
mov
mov
lods
cld
or
jae
int3
pushf
sub
mov
dec
sbb
cld
or
imul
pop
in
sbb
sbb
cld
or
insb
mov
mov
cmp
aam
cmp
fsubrl
push
cmp
xchg
pop
in
cmp
in
insb
mov
cwtl
jl
cmp
sbb
cld
mov
pushf
sub
cmp
cmp
sbb
cld
or
insb
mov
mov
lods
cld
or
jae
int3
pushf
sub
mov
dec
sbb
cld
or
test
pushf
pop
in
rcrb
cld
adc
insb
mov
mov
dec
jo
sbbb
insb
mov
int3
icebp
sti
cmp
sbb
cld
push
fdivrl
mov
push
sbb
sbb
insb
mov
lea
mov
fdivl
int3
pushf
sub
mov
dec
sbb
cld
cmpsb
test
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
lea
dec
sbb
cld
or
pushf
sub
es
cmp
sbb
cld
or
insb
mov
mov
out
in
cld
or
pushf
sub
lea
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
arpl
adc
mov
push
scas
mov
dec
mov
in
mov
bound
imul
lahf
stos
icebp
aam
pop
dec
sbb
cld
or
insb
mov
lea
mov
cld
mov
out
inc
pop
stos
lods
mov
sbb
cld
xor
add
dec
test
cmp
popa
orb
cli
add
cmp
sbb
cld
dec
out
xorl
jecxz
pop
outsb
mov
in
pusha
cmpb
iret
icebp
into
bound
pop
adc
fsubr
mov
pop
mov
cmp
sub
pushf
sub
mov
mov
enter
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
jno
mov
mov
lods
mov
jno
int3
arpl
mov
aas
test
xlat
inc
dec
sbb
cld
push
add
in
cmp
popf
cwtl
sbb
fistl
pop
fidivrs
dec
sbb
cld
add
insl
mov
test
cmp
or
jnp
fsubrl
out
jns
pop
in
cmp
xor
les
insb
mov
mov
dec
sbb
fsubrl
sub
fcompl
add
daa
mov
jmp
into
int
or
jp
lods
pop
sbb
pop
stos
mov
mov
imul
dec
sar
into
push
mov
jg
lahf
ljmp
sbb
sub
fsubrl
or
mov
insl
dec
push
cli
push
sub
mov
scas
mov
dec
outsl
stc
jg,pt
insb
mov
mov
dec
sbb
cld
or
insb
mov
mov
pop
sbb
int3
pushf
sub
mov
dec
sbb
cld
loopne
insb
cmp
pushf
sub
mov
int
lods
inc
sub
mov
adc
jp
iret
mov
out
inc
push
and
mov
lea
aas
dec
fmull
int
sub
aas
dec
pop
lods
decl
lahf
sub
aas
dec
sbb
sub
mov
lea
inc
push
and
enter
mov
xor
adc
testb
mov
adc
sub
or
out
call
popa
mov
xchg
and
out
add
bound
dec
sbb
cld
or
insb
mov
or
add
add
xor
test
push
pop
int3
pushf
sub
add
cmpsl
sbb
jbe
out
fsubrl
loop
fs
pop
in
cmp
xchg
mov
push
jae
or
movsb
pop
and
repnz
pushf
in
cmc
pop
and
mov
jl
fildll
inc
adc
in
orb
out
int3
pushf
xor
lods
cld
or
mov
fsubrs
test
setg
inc
int
aam
sbb
insb
cmp
mov
inc
jo
jo
pop
or
nop
jnp
shlb
mull
insb
scas
in
xchg
dec
cs
dec
pop
xchg
out
xchg
pop
jl
pop
sahf
test
dec
mov
sub
push
mov
mov
dec
sbb
test
daa
xor
jne
and
add
and
mov
dec
sbb
pop
mov
pop
mov
lds
lods
xchg
add
pop
mov
clc
adcb
pop
aaa
push
adc
push
out
pop
out
in
daa
das
push
cmc
xchg
insl
stos
std
fwait
pop
cmp
or
shlb
lret
sbb
xor
mov
int
cmpsb
inc
lods
out
addr16
push
testb
out
dec
add
inc
xor
int
aam
pop
jp
pop
in
cmp
loopne
out
or
push
jl
mov
and
sti
addr16
jge
aas
sbb
cli
or
in
lock
sbb
xchg
lock
xor
sub
xchg
insl
cmpsl
push
mov
dec
pusha
push
mov
push
pop
movsb
mov
pushf
clc
mov
in
int3
pushf
sub
int3
nop
icebp
mov
je
lret
in
ret
addr16
fisttpl
sub
adc
or
adc
adcl
pop
jmp
outsl
sbb
cld
insb
fsubrl
mov
icebp
ds
sbb
cld
cmp
insb
mov
pop
in
cmp
pop
out
aas
or
insb
mov
sbb
jl
dec
sbb
cld
outsl
dec
rcr
sti
decl
rcrb
test
and
mov
and
mov
mov
sbb
dec
xchg
and
jl
pop
in
cmp
jo
aas
pusha
and
adc
add
mov
jg
fs
push
push
pop
rolb
je
loopne
das
nop
xchg
pop
add
mov
and
outsl
rcl
lahf
inc
test
and
adc
add
mov
jg
fs
push
push
pop
rolb
je
loopne
das
nop
xchg
pop
add
mov
and
outsl
rcl
lahf
inc
test
jp
je
lods
pop
pop
ljmp
push
std
js
out
outsl
adc
popf
movsb
mov
adc
xor
inc
cli
ret
adc
ja
shlb
push
icebp
add
mulb
push
mov
or
mov
xor
fwait
push
mov
mov
mov
push
adc
test
push
inc
stos
sub
sbb
cli
cmp
test
or
cmpb
mov
inc
mov
pusha
call
mov
mov
loope
push
push
das
insb
cmp
xor
inc
jno
sbb
inc
rcr
inc
shll
jge
loopne
inc
pop
in
mov
sbb
xlat
out
sub
jecxz
xchg
test
jnp,pt
imul
fisubrs
hlt
popf
mov
dec
cmpsb
ss
mov
push
lahf
mov
cmp
js
mov
divps
cmp
and
neg
jno
movsb
lods
or
int3
xchg
in
mov
aaa
cld
dec
pop
cmp
adc
pop
xor
jb
aaa
scas
add
sbb
add
imul
shl
repz
lods
out
aad
cmpsb
ss
pushf
sub
cmc
in
cmp
popf
cwtl
int3
adc
insb
mov
mov
les
insb
mov
fistps
aam
dec
sbb
mov
pop
pop
cld
jl
dec
in
dec
cmp
pop
push
inc
dec
lock
int3
or
mov
lea
xchg
jge
scas
add
mov
mov
iret
lea
cld
or
jecxz
jl
lea
or
jecxz
jl
jnp
mov
and
and
outsb
jl
jnp
mov
and
or
outsb
jl
jnp
mov
and
clc
jecxz
jl
jge
mov
and
in
outsb
jl
jge
mov
and
shl
outsb
jl
jge
mov
and
mov
jle
mov
and
test
outsb
jl
jle
mov
and
xchg
loop
jl
jle
mov
and
and
jl
test
cld
or
loop
jl
test
cld
or
loop
jl
test
cld
or
loop
jl
test
cld
or
loop
jl
xchg
cld
or
loop
jl
mov
cld
or
loop
jl
mov
cld
or
loop
jl
mov
cld
or
loop
jl
mov
cld
or
loop
jl
mov
cld
or
loope
jl
lea
cld
or
loope
jl
lea
cld
or
loope
jl
nop
test
cld
or
loope
jl
nop
test
cld
or
loope
jl
stos
inc
mov
or
loope
jl
jnp
mov
and
xor
outsb
jl
jnp
mov
and
sbb
outsb
jl
jnp
mov
and
add
outsb
jl
jge
mov
and
call
jge
mov
and
shl
outsb
jl
jge
mov
and
mov
jle
mov
and
mov
jle
mov
and
mov
outsb
jl
jle
mov
and
insb
loopne
jl
test
or
loopne
jl
test
or
loopne
jl
test
or
loopne
jl
test
or
loopne
jl
xchg
or
loopne
jl
xchg
or
fildll
stc
mov
or
fildll
aas
mov
or
fildll
dec
mov
or
fildll
imul
insb
mov
cmp
cld
or
fildll
mov
lods
mov
and
sbb
outsb
jl
lea
or
fildll
in
lea
or
fildll
es
lods
mov
and
enter
jo
lods
mov
and
mov
outsb
jl
jl
mov
and
cwtl
fisubrs
test
movsl
mov
and
sbb
jl
jge
mov
and
push
jg
mov
and
push
fisubrs
mov
movsl
mov
and
cmp
outsb
jl
jg
mov
and
and
outsb
jl
jg
mov
and
or
outsb
jl
jg
mov
and
lock
aam
movsl
mov
and
aam
outsb
jl
xchg
cld
or
xor
lods
cld
or
outsl
xchg
cld
or
jg
movsl
mov
and
mov
lods
cld
or
add
movsl
mov
and
sub
outsb
jl
mov
cld
or
jnp
movsl
mov
and
hlt
cltd
lea
cld
or
cwtl
movsl
mov
and
mov
movsl
mov
and
mov
movsl
mov
and
test
outsb
jl
movsl
mov
and
push
xchg
movsl
mov
and
dec
fsubrl
push
xchg
movsl
mov
and
xor
outsb
jl
jl
mov
and
sbb
outsb
jl
jge
mov
and
add
outsb
jl
jge
mov
and
in
fsubrl
cwtl
jg
mov
and
aam
outsb
jl
jg
mov
and
mov
jg
mov
and
movsb
fldt
movq
cld
or
fldt
inc
jg
mov
and
je
outsb
jl
andb
or
fldt
xchg
cld
or
fldt
xor
lods
cld
or
fldt
outsl
xchg
cld
or
fldt
jg
movsl
mov
and
call
xchg
cld
or
fldt
add
movsl
mov
and
mov
outsb
jl
mov
cld
or
fisubrl
jnp
movsl
mov
and
js
outsb
jl
lea
cld
or
fisubrl
cwtl
movsl
mov
and
inc
fisubrl
adc
movsl
mov
and
and
outsb
jl
movsl
mov
and
or
outsb
jl
movsl
mov
and
in
fisubrl
leave
xchg
movsl
mov
and
rcr
outsb
jl
xchg
movsl
mov
and
fldcw
int
sub
cld
or
fldcw
mov
int
dec
and
xchg
fldcw
fsubs
iret
mov
and
jl
outsb
jl
mov
mov
and
fldcw
loop
iret
mov
and
dec
fldcw
push
or
mov
and
xor
outsb
jl
movsl
into
mov
and
sbb
outsb
jl
pop
shlb
or
fldcw
fstps
lods
cld
or
add
aas
mov
outsb
jnp
mov
std
adc
jl
cmp
test
cs
cld
mov
out
sti
leave
or
mov
add
cld
sahf
mov
xlat
jl
mov
repnz
jnp
mov
std
adc
jl
cmp
test
cs
cld
mov
out
sti
leave
or
mov
add
cld
popf
mov
xlat
jl
mov
dec
mov
std
adc
jl
cmp
test
cs
cld
mov
out
sti
leave
or
mov
add
cld
sahf
mov
xlat
jl
mov
repnz
jnp
mov
std
adc
jl
cmp
test
cs
cld
mov
out
sti
leave
or
mov
add
cld
popf
mov
in
or
cwtl
push
fisubl
cmp
lahf
pushf
add
or
mov
int3
popa
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
sahf
out
int3
pushf
sub
jecxz
pop
mov
addl
loope
jl
lods
jl
fisubrs
or
insb
mov
sti
rcrl
roll
and
mov
push
insl
dec
sbb
cld
arpl
and
adc
outsb
mov
int3
popa
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
popf
cmc
int3
pushf
sub
jecxz
pop
mov
addl
loope
jl
lods
jl
fnsave
fsubrl
add
pop
pop
roll
and
mov
sbb
cld
arpl
and
adc
outsb
mov
int3
popa
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
popf
icebp
int3
pushf
sub
jecxz
pop
mov
addl
loope
jl
lods
jl
fnsave
or
insb
mov
sti
rcrl
roll
and
mov
sbb
cld
arpl
and
adc
outsb
mov
int3
popa
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
popf
in
int3
pushf
sub
jecxz
pop
mov
addl
loope
jl
lods
jl
fsubrl
add
pop
pop
roll
and
mov
and
pusha
jnp
inc
pop
dec
scas
testl
movsb
mov
sti
rcrl
roll
and
mov
and
test
pusha
jnp
inc
pop
dec
scas
testl
mov
loopne
rcrl
roll
and
mov
and
test
pusha
jnp
inc
pop
dec
scas
testl
mov
loopne
rcrl
roll
and
mov
pop
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
sahf
mov
sti
rcrl
roll
and
mov
sbb
pusha
jnp
inc
pop
dec
scas
testl
sahf
lock
pushf
sub
jecxz
pop
mov
addl
out
icebp
jl
lods
jl
fisubrs
or
insb
mov
sti
rcrl
roll
das
xor
outsb
dec
sbb
cld
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
sahf
in
int3
pushf
sub
jecxz
pop
mov
addl
out
icebp
jl
lods
jl
fnsave
and
pop
pop
roll
das
xor
je
sbb
cld
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
popf
repnz
pushf
sub
jecxz
pop
mov
addl
out
icebp
jl
lods
jl
fnsave
or
insb
mov
sti
rcrl
roll
das
xor
jo
sbb
cld
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
in
cmp
test
pusha
jnp
inc
pop
dec
scas
testl
popf
out
int3
pushf
sub
jecxz
pop
mov
addl
out
icebp
jl
lods
jl
and
pop
pop
roll
das
xor
insb
dec
sbb
cld
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
pop
mov
addl
out
icebp
jl
lods
jl
in
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
pop
mov
addl
out
icebp
jl
lods
jl
loop
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
pop
mov
addl
out
icebp
jl
lods
jl
loopne
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
pop
mov
addl
out
icebp
jl
lods
jl
fdivrp
arpl
and
adc
outsb
mov
int3
outsl
jno
fildll
mov
pop
mov
addl
out
sti
jl
lods
jge
fidivs
or
insb
mov
sti
rcrl
roll
cmp
jo
sbb
cld
arpl
and
adc
mov
cmp
outsb
jnp
fildll
pop
in
cmp
test
pusha
jnp
inc
pop
dec
hlt
cld
jl
scas
mov
cld
sahf
out
int3
pushf
sub
jecxz
pop
mov
addl
out
sti
jl
lods
jge
fisubrs
and
pop
pop
roll
cmp
insb
dec
sbb
cld
arpl
and
adc
mov
cmp
outsb
jnp
fildll
pop
in
cmp
test
pusha
jnp
inc
pop
dec
hlt
cld
jl
scas
mov
cld
popf
hlt
int3
pushf
sub
jecxz
pop
mov
addl
out
sti
jl
lods
jge
fnsave
or
insb
mov
sti
rcrl
roll
cmp
jb
sbb
cld
arpl
and
adc
mov
cmp
outsb
jnp
fildll
pop
in
cmp
test
pusha
jnp
inc
pop
dec
hlt
cld
jl
scas
mov
cld
popf
lock
pushf
sub
jecxz
pop
mov
addl
out
sti
jl
lods
jge
or
insb
mov
sti
rcrl
roll
cmp
outsb
dec
sbb
cld
arpl
and
adc
mov
cmp
outsb
jnp
fildll
pop
in
cmp
test
pusha
jnp
inc
pop
dec
hlt
cld
jl
scas
mov
cld
popf
in
int3
pushf
sub
jecxz
pop
mov
addl
out
sti
jl
lods
jge
in
arpl
and
adc
mov
cmp
outsb
jnp
fildll
lds
mov
inc
mov
mov
pop
lods
jge
jecxz
arpl
and
adc
mov
cmp
outsb
jnp
fildll
lds
mov
inc
mov
mov
pop
lods
jge
loope
arpl
and
adc
mov
cmp
outsb
jnp
fildll
lds
mov
inc
mov
mov
pop
lods
jge
arpl
and
adc
mov
cmp
outsb
jnp
fildll
lds
mov
inc
mov
mov
pop
lods
jge
arpl
and
adc
insb
insb
outsl
cld
xor
mov
in
loop
sarb
test
pusha
jnp
cmp
dec
out
cld
lea
jg
lods
cld
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
jp
mov
cmp
dec
scas
mov
test
pusha
jnp
cmp
dec
out
cld
lea
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
jp
mov
cmp
dec
lods
ret
cmp
test
pusha
jnp
cmp
dec
out
cld
lea
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
jp
mov
cmp
dec
lods
mov
test
pusha
jnp
cmp
dec
out
cld
lea
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
jp
mov
cmp
dec
mov
pop
in
cmp
test
pusha
jnp
cmp
dec
out
cld
lea
dec
sbb
cld
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
jp
mov
cmp
dec
mov
pop
in
cmp
test
pusha
jnp
cmp
dec
out
cld
lea
dec
sbb
cld
arpl
and
adc
scas
mov
fsubrl
add
pop
pop
mov
or
sub
jecxz
pop
mov
fs
nop
push
lods
lods
mov
lods
cld
arpl
and
adc
pushf
dec
xlat
sub
imul
js
aad
pop
sbbb
hlt
inc
mov
cmc
lea
inc
hlt
cmp
sub
pop
or
insb
mov
sahf
std
cld
jb
dec
repnz
int3
pushf
sub
call
mov
daa
aas
cpuid
fisttps
lods
cld
push
pushf
sub
out
xor
push
dec
fisubl
in
adc
test
mov
sbb
add
pop
push
lret
lahf
loope
test
cmp
pusha
lock
fcompl
add
scas
mov
add
cli
cli
pushf
sub
lock
mov
mov
mov
sbb
cld
jo
fldt
cli
shld
mov
cmpsl
gs
dec
pop
cmp
jmp
jl
mov
jae
fcompl
jl
stos
insb
gs
ss
fucomip
in
in
fcomip
shll
adc
push
mov
xor
dec
into
icebp
shlb
mov
sbb
jl
pop
in
cmp
gs
dec
pop
cmp
loope
rcll
mov
shrl
inc
fsubrs
cmp
dec
lock
jl
mov
cld
mov
pushf
mov
or
lods
jg
popa
addb
in
fmull
cmpsl
imul
rorb
push
lds
out
das
mov
loop
cmp
pop
mov
pop
or
in
leave
fdivrl
push
imul
das
xor
lahf
jmp
pop
lods
rolb
cmp
pop
pushf
inc
pusha
mov
mov
pusha
inc
cld
test
xor
pop
jl
movsl
das
mov
fisubrs
ds
dec
out
sti
mov
aad
jb
aad
xor
pop
pushf
inc
pusha
mov
mov
pusha
inc
cld
test
xor
pop
jl
lods
xor
sbb
inc
fisubl
lods
iret
push
stos
mov
sbb
dec
aad
xor
dec
lock
jl
scas
jp
lods
cld
addr16
or
stc
pushfw
ror
pop
stos
mov
inc
aad
xor
pop
rorb
mov
jmp
mov
fdivrl
add
pop
mov
push
inc
or
mov
cmp
jno
dec
imul
fwait
out
lods
iret
push
stos
mov
sbb
dec
aad
xor
dec
lock
jl
scas
jp
lods
cld
addr16
lds
sub
dec
sar
push
pop
ret
test
fs
fsubrs
cmp
dec
movsb
mov
aaa
jle
adc
or
out
test
jmp
mov
sbb
dec
fisubrs
ds
dec
mov
dec
sbb
cld
or
insb
mov
jmp
mov
outsb
sub
shrl
xor
dec
lahf
mov
and
push
fcmovnu
adc
iret
sbb
packuswb
aas
add
mov
adcb
xor
pushfw
enter
jp
lods
cld
or
insb
mov
jmp
mov
sbb
inc
loopne
in
rcrl
mov
and
and
lahf
stos
lods
scas
push
stos
rclb
jo
fcompl
mov
adc
pusha
push
push
fwait
das
xor
dec
movsb
mov
cmp
dec
lods
cld
jle
fisubl
cmp
sub
in
mov
sbb
xor
dec
dec
test
or
insl
dec
shll
inc
mov
in
cmp
jo
dec
imul
fwait
out
jl
mov
ja
fdivl
hlt
lds
lds
mov
int3
outsb
jno
loope
cmp
nop
mov
cwtl
adc
xor
dec
sar
pop
scas
xchg
imul
xor
lds
lds
mov
int3
outsb
jno
loope
cmp
nop
mov
cwtl
adc
xor
fdiv
cmovl
jns
in
push
sbb
in
cmp
inc
fisubrl
jo
xchg
ljmp
or
jp
adc
xor
sahf
and
rcrl
mov
lods
cld
sub
stc
pushfw
iret
enter
adcl
mov
jmp
and
dec
fldcw
add
cmp
push
mov
xor
xchg
ljmp
lods
cld
push
fsubrl
or
jl
pop
in
mov
or
or
jl
mov
out
aas
imul
cwtl
loope
jl
stos
insb
adc
cld
loopne
in
out
xchg
jmp
scas
mov
imul
xchg
call
push
sbb
cld
and
dec
ret
pop
mov
sub
fsubl
cmp
mov
jns
fisubl
in
sete
clc
enter
pusha
out
aas
imul
cwtl
loope
jl
stos
insb
mov
jp
fildll
das
pop
xchg
lock
pusha
out
aas
imul
xchg
loope
jl
scas
mov
fsubrl
loopne
mov
mov
inc
das
or
mov
push
sub
fdiv
addps
jge
popa
inc
cld
xchg
das
in
les
lods
mov
aad
or
insb
mov
jmp
jge
push
in
or
scas
xchg
jo
fsubrl
loopne
mov
mov
adc
inc
fldenv
cmp
mov
cmp
pusha
out
aas
sub
mov
adc
pop
jno
int3
and
insb
mov
jmp
mov
sbb
dec
shrl
cmp
mov
scas
rorb
and
dec
ret
pop
mov
sub
aad
xor
lahf
mov
and
or
insb
mov
jmp
test
popa
jo
loopne
in
lcall
pop
mov
push
lcall
xchg
or
mov
inc
das
or
mov
jns
mov
push
mov
xor
jns
cmpsb
fdiv
cmovl
nop
adc
or
loopne
mov
mov
dec
fsubl
cmp
pop
lahf
mov
and
or
insb
mov
jmp
mov
outsb
sub
fsubl
cmp
push
test
cmp
imul
cs
mov
cmp
inc
push
cld
and
dec
sar
pop
scas
insb
xchg
sbb
dec
rcr
inc
or
lds
insb
adcb
in
add
cmp
shrl
fsubrl
loopne
rcr
test
jge
jns
sbb
cmp
js
lods
lret
pop
pop
nop
push
sbb
dec
fisubrs
ds
dec
mov
cmpsl
pusha
sti
push
pop
sub
pushf
loope
push
popf
rolb
and
dec
sar
pop
scas
insb
andl
cmp
dec
loop
enter
inc
pop
sub
insb
mov
fisubrl
out
push
dec
jecxz
cmp
loopne
rorb
dec
adc
cld
loopne
in
rcrl
jge
idivl
cmp
pop
cli
mov
pusha
movsl
mov
and
mov
fwait
mov
push
inc
cmpsb
fdiv
cvtps2pd
push
stos
dec
sbb
cld
and
call
es
nop
mov
push
dec
int
xor
dec
mov
xchg
pop
int3
jo
cld
xchg
das
in
fmull
lea
xchg
pop
fldt
aas
lcall
test
jge
jns
sbb
cs
fcoml
std
xchg
call
jno
int3
sbb
cmc
lret
out
cmp
push
cmp
loope
lds
insb
test
sbb
dec
iret
sub
push
xchg
filds
xchg
or
jno
int3
sbb
cmc
lret
out
cmp
push
cmp
fldl
shll
jno
int3
and
inc
mov
in
adc
mov
xor
loopne
rcr
test
jge
jns
sbb
inc
fsubs
in
add
popf
mov
int3
and
xchg
loope
out
pushf
add
dec
stos
mov
inc
shl
cli
pushf
sub
out
cmp
push
cmp
call
insb
mov
jp
shlb
mov
sbb
mov
push
push
fidivrl
lds
nop
test
addr16
insb
mov
sti
into
push
cmp
sbbb
jns
insb
mov
lret
pop
in
cmp
jge
push
icebp
emms
mov
cmpsl
imul
fdiv
cmovl
inc
bound
xor
mov
pop
push
jb
shll
clc
mov
bound
js
lcall
mov
int3
inc
jle
loop
in
les
mov
or
lods
test
popa
jo
loopne
in
push
fldl
mov
mov
adc
sub
sahf
loope
shlb
sbb
cld
dec
push
enter
jne
shlb
out
push
inc
fsubs
aas
mov
push
jbe
inc
adc
or
insb
mov
shlb
out
pop
inc
int
das
add
ljmp
adc
inc
cmpsb
fdiv
cvtps2pd
pop
mov
and
xor
loope
pushf
sub
mov
dec
popa
mov
dec
enter
sub
out
xor
dec
pop
cmp
call
mov
fsubs
in
loopne
fiadds
ret
or
mov
inc
shll
cli
pushf
sub
out
xor
dec
pop
cmp
fdivrp
rorl
cmp
gs
mov
xor
lret
pop
pop
pushf
mov
pop
jno
adc
mov
in
dec
pop
cmp
fdivrp
rorl
cmp
gs
mov
xor
dec
in
in
iret
pop
mov
mov
sbb
dec
mov
xor
fwait
out
add
cmc
dec
push
sub
nop
pushfw
loopne
push
pop
mov
push
cmp
xchg
jmp
jl
mov
add
cli
cmc
mov
pop
test
jp
aad
push
mov
push
stos
xchg
pop
xor
cwtl
fsubl
setno
jl
popa
lahf
dec
aam
jnp
fcompl
inc
adc
cld
popa
fdivrl
jl
pop
cmp
sbb
cld
push
fdivrl
jl
pop
aas
cmp
sbb
cld
pop
fsubrl
jl
pop
in
cmp
nop
sbb
dec
mov
das
or
lahf
mov
dec
aad
xor
xorb
mov
shl
popa
mov
jno
insb
mov
add
pop
mov
mov
pop
jno
filds
xor
mov
stos
mov
dec
fidivrl
rorl
insl
and
push
mov
adc
mov
pop
push
mov
iret
add
sbb
dec
fstps
mov
lcall
or
pushf
sub
ffreep
xor
jle
loop
cmp
xchg
loope
pop
in
cmp
cmc
dec
push
sub
nop
pushfw
fcmovne
pop
mov
and
fidivs
xor
dec
jmp
jl
movsl
mov
cld
mov
lods
mov
outsl
repz
pop
sbb
jae
ficompl
cli
dec
pop
and
jl
pop
in
cmp
cmc
dec
push
sub
nop
pushfw
loopne
push
pop
mov
push
cmp
xchg
jmp
jl
mov
add
cli
cmc
mov
pop
test
jp
aad
push
mov
push
stos
xchg
pop
xor
cwtl
fsubl
setno
jl
popa
lahf
dec
rorl
or
loop
lret
sub
sbb
inc
rcr
and
pop
pop
mov
cld
xchg
or
add
enter
jne
adc
sub
jl
scas
xchg
imul
sub
mov
sbb
adc
cld
xchg
loope
lret
push
lret
adc
cld
or
insb
mov
pushf
pop
in
cmp
sbb
cld
or
mov
xchg
mov
dec
sbb
cld
or
insl
mov
push
fnstenv
cld
aaa
in
xchg
inc
int
sub
nop
mov
jne
stos
les
lods
je
mov
dec
sbb
cld
adc
insb
mov
movsb
pop
in
cmp
sbb
cld
or
insb
mov
mov
cld
sbb
cmp
je
sub
push
imul
xchg
rcr
pop
icebp
ret
dec
lret
jbe
xchg
gs
insb
mov
jl
popa
mov
dec
insb
mov
fldcw
add
and
in
js
cmc
iret
dec
stos
mov
fsubrl
in
js
inc
push
test
fsubrl
in
js
clc
enter
jge
pusha
js
insb
mov
add
dec
xorb
insb
mov
icebp
shlb
stos
ret
jo
fsubrl
in
js
inc
bound
jp
iret
xor
pushf
sub
sti
rorb
dec
fisubl
dec
insb
mov
in
lret
lcall
mov
clc
mov
and
fsubrl
add
call
mov
sbb
arpl
shll
paddw
stos
mov
inc
fldt
repz
jecxz
push
mov
jge
pop
jno
scas
sub
or
stos
jle
lods
cld
arpl
shll
or
lret
scas
nop
adc
mov
int
push
jg
mov
popa
outsl
push
aad
cmp
insl
jl
int3
pop
push
mov
cld
push
inc
fsubs
inc
add
fcmovb
pusha
cmpl
add
mov
jge
push
xor
mov
sbb
fsubrl
or
movsb
sahf
sbbl
paddw
mov
xchg
or
adc
lahf
ret
pop
movsb
sahf
sbbl
paddw
cmp
mov
pop
jl
lcall
shll
pop
pop
jae
scas
xor
add
mov
pop
inc
loopne
aas
add
stos
mov
lods
cld
pop
inc
loopne
aas
add
cmp
andl
add
or
fcmovb
pusha
xchg
mov
inc
insb
mov
icebp
leave
pop
mov
jo
inc
or
insb
mov
cld
lds
mov
adcb
push
dec
shll
int3
pushf
sub
fcmovb
pusha
scas
test
pusha
orl
loopne
pop
in
cmp
andl
and
or
cmp
andl
and
add
mov
push
popa
dec
inc
sarb
lds
outsb
jp
sbb
fsubrl
lcall
mov
or
insb
mov
iret
enter
fs
mov
iret
into
push
popf
rolb
mov
mov
sbb
cld
pop
dec
out
cmp
lea
je
sbb
cmp
xchg
movsl
mov
xchg
mov
popa
jle
shll
invd
fwait
out
icebp
movsb
dec
stos
mov
adc
push
dec
loopne
or
mov
or
insb
mov
dec
push
mov
mov
sub
lret
mov
dec
shrl
and
cwtl
mov
xchg
mov
popa
jle
shll
sbb
ljmp
and
dec
shll
ud2
lcall
sbb
cld
push
push
loopne
pop
add
mov
and
adc
mov
stos
sahf
sbbl
jl
lret
mov
inc
loopne
cmp
lcall
nop
or
mov
dec
push
mov
andl
and
adc
mov
sbb
cld
addl
cmp
mov
cmp
mov
outsl
jno
fistpl
aaa
add
lods
mov
push
push
dec
sarl
iret
pusha
sahf
lds
pusha
jle
insb
mov
sti
iret
pusha
sahf
lds
insb
mov
sti
iret
pusha
stos
lods
mov
cld
jae
loopne
cmp
xchg
ljmp
and
aas
xlat
sub
sub
in
mov
lods
cld
js
fbstp
xor
sub
inc
pop
mov
outsb
inc
fisubl
int3
pushf
sub
inc
dec
mov
mov
imul
repnz
mov
dec
insb
mov
mov
mov
fsubrl
adc
cmp
nop
sbb
fsubrl
adc
cmp
mov
jo
cmp
sub
cmc
lret
stos
mov
imul
mov
icebp
mov
pshufw
pop
aaa
add
cmpsl
mov
lods
cld
arpl
lods
cmp
ljmp
in
inc
jno
mov
out
dec
pop
cmp
outsl
in
inc
jnp
loopne
int3
pushf
sub
jmp
inc
lea
inc
jg
shll
int3
pushf
sub
jecxz
sub
pop
pop
inc
fsubs
das
adc
jecxz
sub
popa
sbbb
iret
add
lods
cld
orl
dec
pop
loopne
enter
sbbl
push
add
cmp
sbbl
dec
pushf
sub
into
lds
mov
inc
fsubs
das
adc
test
mov
sbb
cld
push
inc
loopne
adc
lret
pop
nop
lods
jle
popa
or
insb
mov
icebp
rclb
mov
or
mov
add
das
stos
mov
fsubs
adc
sub
iret
into
push
popf
rolb
pop
inc
add
in
cmp
mov
pop
addb
or
rclb
dec
adc
fsubrl
add
mov
fsubrl
jb
mov
and
push
in
xor
out
cmc
int3
pusha
stos
mov
dec
loope
pop
add
scas
lahf
nop
or
mov
icebp
scas
push
scas
ret
popa
push
cmp
sub
rol
pop
mov
jle
aad
xor
mov
mov
dec
jno
loop
das
add
dec
scas
shrb
addb
or
int3
push
stos
lahf
sbbl
std
int3
pushf
sub
fcmovne
push
stos
lahf
pop
stc
pop
jp
shll
int
push
mov
nop
add
inc
fimull
add
push
mov
pop
dec
inc
or
out
cmc
rclb
mov
adc
dec
loope
or
int3
push
stos
pushf
mov
pop
jno
fists
cmp
xchg
ljmp
adc
js
fbld
pop
add
xorb
int
inc
add
faddp
push
roll
xor
loope
mov
sahf
adcl
sbb
add
in
cmp
adcl
xor
out
cmc
rcl
sub
dec
jl
fiaddl
xor
in
cmp
andb
jl
lahf
out
cli
add
cmp
xchg
adc
and
adc
cmp
mov
outsl
jno
fsubs
inc
in
cmp
andl
push
cmp
sahf
loopne
mov
lods
cld
pop
dec
shrl
invd
xchg
in
out
lret
dec
scas
mov
lods
cld
push
inc
fbstp
or
stos
ret
sbb
cld
push
dec
ret
and
mov
xchg
test
pusha
arpl
and
adc
ffreep
pop
mov
insl
inc
sar
int3
pushf
sub
add
push
scas
jg
fisubl
dec
insb
mov
call
push
scas
lahf
sbbl
or
or
cmp
xchg
adc
sub
xor
sahf
jmp
xchg
mov
insl
addl
jl
rcll
lds
jb
fisubrs
sub
lret
popa
stos
rolb
cs
add
fldl
les
inc
jle
loop
and
in
cmp
andl
pop
sub
rclb
rorb
mov
cmc
iret
push
cmpb
iret
and
adc
jl
lret
push
mov
sbb
das
inc
pushf
sub
fmul
pop
lahf
mov
pop
das
ds
xor
pushf
sub
fmul
pop
lahf
mov
pop
das
ds
cs
adc
iret
into
push
popf
rolb
and
or
scas
dec
lods
mov
fsubrl
add
scas
cltd
mov
popa
or
insb
mov
icebp
enter
sbbb
or
insb
mov
fidivrl
clc
sbb
inc
fbstp
in
lcall
mov
dec
lods
cld
dec
push
aad
sub
rcrb
orb
in
fcoms
lret
cmp
orb
aas
push
lcall
lds
mov
int3
cmp
inc
stos
mov
clc
push
push
mov
sbb
cmp
pop
pushf
enter
dec
sbb
cld
pop
dec
fsubrp
dec
nop
call
mov
adc
cld
test
xor
sub
aad
push
test
jge
cmp
sub
add
push
pop
shll
fsubrl
or
mov
insl
inc
fsubs
xor
dec
mov
lcall
out
cli
add
movsl
mov
sbb
jl
mov
sbb
inc
int
cmp
nop
stos
lods
cwtl
adc
arpl
and
lock
jge
push
or
nop
mov
mov
push
lcall
lds
mov
int3
cmp
inc
stos
mov
mov
cmp
pop
jne
shll
cli
mov
in
cmp
andb
jl
lahf
out
cli
add
movsl
mov
sbb
jl
iret
push
scas
jg
fisubl
dec
mov
sub
mov
jno
ljmp
or
mov
orb
in
fcoms
lret
cmp
int3
inc
jle
fldt
push
mov
adc
jns
mov
jl
aam
test
mov
outsb
cmp
and
pushf
sub
ffreep
aas
movsb
rcll
cs
ret
push
cmp
inc
packssdw
fsubl
das
rcll
mov
shrl
fsubrl
add
mov
jle
fsubl
sub
rcrl
inc
shrl
xor
pop
outsb
inc
shrl
inc
or
int3
push
popf
shrb
pusha
jno
mov
icebp
cmovle
push
mov
sbb
mov
nop
mov
lods
cld
or
scas
mov
mov
cmp
cld
lock
jl
mov
out
cld
or
insb
mov
push
mov
lods
cld
enter
cmp
jl
pop
in
cmp
jnp
cld
test
scas
mov
iret
lret
pop
mov
mov
popa
jo
insb
mov
cmc
lret
dec
sbb
cld
pop
cmp
sub
fdivrl
lods
cld
pop
push
fldt
add
lods
dec
sbb
cld
pop
push
int
inc
add
scas
rcrb
pop
inc
fbstp
xor
sub
fadd
pop
mov
sbb
cld
push
inc
fsubs
inc
add
mov
dec
inc
shlb
xor
cmp
push
push
imul
dec
lret
pop
mov
jno
fildll
call
push
sbb
cld
sub
dec
sar
pop
scas
insb
xchg
adc
and
adc
arpl
shrl
sub
fistpll
xchg
or
mov
push
aad
xor
dec
mov
dec
sbb
cld
dec
dec
mov
cmp
lcall
mov
outsb
sub
iret
pop
inc
push
sahf
loope
xchg
or
jno
adc
or
insb
mov
call
pop
mov
mov
gs
fbld
adc
mov
or
insb
mov
inc
pop
mov
jg
sbb
cmp
mov
stos
insb
and
push
shll
cli
pushf
sub
mov
mov
inc
fnsave
xor
mov
stos
mov
cld
iret
sub
add
lret
sarb
sub
shrl
inc
mov
push
mov
addb
in
xchg
fucomip
rcrl
insb
nop
adc
sub
loopne
inc
add
jl
movsb
mov
pop
popa
jle
aad
xor
sub
loopne
push
pop
mov
aas
rcr
xor
lahf
pushf
out
rcll
mov
fdivl
or
mov
cmp
insb
mov
inc
pop
mov
jg
sbb
dec
loope
xor
mov
jae
rcr
cmp
pop
pushf
loopne
push
pop
lods
jg
imul
xchg
out
lods
lret
insb
test
and
mov
push
lahf
sarb
in
push
xchg
jecxz
rcrb
dec
sbb
cld
pusha
inc
rcr
aas
or
fcomip
ret
mov
pop
popa
jle
aad
xor
stos
mov
inc
fbstp
cli
pushf
sub
loopne
push
pop
mov
aas
rcr
xor
lahf
pushf
out
rcll
adcb
xor
sub
mov
mov
inc
fidivs
xor
rcrl
pop
sbb
dec
mov
icebp
into
or
mov
and
inc
mov
xor
mov
pop
mov
adc
xor
mov
pusha
push
sbb
cld
or
insb
mov
inc
pop
mov
jg
sbb
inc
fsubl
cmp
lahf
pushf
sti
lret
insb
adc
inc
iret
and
adc
mov
int3
push
push
mov
inc
add
pop
pop
mov
pop
sbb
inc
shrl
in
or
pop
mov
push
sbb
inc
fsubs
inc
add
in
cmp
test
sbb
dec
rcrl
xor
jl
popf
sarb
jg
mov
cmp
lahf
pushf
cli
lret
pusha
pop
mov
adc
mov
cli
iret
pusha
popf
mov
inc
mov
xor
dec
out
icebp
into
bound
jg
int
add
mov
mov
mov
inc
pop
mov
and
cld
iret
sub
adc
stos
mov
int3
gs
fisubrl
inc
mov
push
push
jne
mov
in
mov
or
xor
mov
pop
mov
jno
insb
mov
cld
into
pop
lahf
mov
pop
sbb
dec
inc
add
pushf
inc
pop
mov
jg
sbb
cmp
out
add
push
push
sub
loopne
xor
pusha
pop
scas
jge
push
adc
rclb
mov
and
and
das
cmp
mov
push
sbb
cld
dec
cld
loopne
add
mov
or
jnp
mov
xor
mov
jle
loopne
xor
lahf
mov
lods
cld
pusha
inc
rcr
xor
mov
mov
js
iret
daa
xor
pop
jl
pop
in
cmp
test
sbb
inc
fidivs
xor
mov
int3
pop
jno
fbstp
cmp
loope
jl
mov
jno
xor
sahf
pushf
rcrl
mov
adc
inc
fidivs
xor
mov
adc
shlb
cmp
dec
jmp
jl
mov
sbb
cld
pusha
inc
rcr
aas
add
pop
scas
test
pop
jle
mov
xor
lret
popa
test
cmp
imul
fwait
icebp
cli
rcrb
mov
cmp
dec
loopne
rcrl
mov
sbb
cmp
xchg
loope
into
push
lods
roll
pop
das
add
mov
pusha
inc
rcr
xor
lcall
cmp
push
cmp
sub
loopne
push
pop
mov
dec
loopne
xor
stos
mov
inc
mov
lock
adcl
mov
dec
push
lahf
mov
adc
and
adc
popf
mov
cld
aad
inc
std
cwtl
in
mov
cmp
out
xor
in
andnps
or
lahf
nop
sbb
sarb
mov
adc
sub
mov
pop
adc
cmp
cmp
sbb
push
fisubrl
xor
lahf
pop
stos
rolb
mov
fdivrl
adc
sub
mov
in
in
icebp
inc
push
cmp
cmp
sbb
dec
xlat
sub
adc
pop
mov
sbb
push
aad
xor
mov
cmp
popa
jle
aad
xor
dec
rorl
adcl
xor
sub
out
xor
jg
mov
cmp
pop
mov
inc
aad
xor
sub
out
xor
jg
fbld
adcl
jae
lods
cld
sub
dec
mov
mov
push
aad
xor
lahf
in
into
push
jbe
inc
shrl
or
mov
sbb
sub
adc
icebp
lods
sbbl
cld
pop
dec
insb
mov
out
xor
je
fisubs
in
or
scas
mov
add
fmull
rcrl
lahf
test
sbb
lods
jl
mov
aas
shl
in
mov
or
insb
cmp
sbb
cld
mov
and
xchg
out
jl
xorb
insb
mov
jmp
push
int3
dec
jnp
loope
xor
lcall
orl
and
pushf
sub
out
xor
jg
mov
ds
fwait
out
lods
rcll
mov
and
dec
ficompl
mov
pop
arpl
shrl
fsubrl
ljmp
mov
dec
ficompl
mov
pop
arpl
lods
cld
sub
dec
sar
rcrl
mov
imul
cmp
pushfw
enter
mov
cld
popa
dec
aad
aas
mov
inc
mov
xor
mov
lods
scas
pusha
stos
mov
cld
xchg
and
pushf
sub
loope
push
scas
jae
int3
dec
insl
dec
shll
sub
adcl
orb
ud2
nop
loope
jl
mov
arpl
daa
aas
adc
scas
xchg
dec
or
insb
mov
cli
jl
mov
inc
cld
xchg
bswap
pushf
sub
fdivrs
sbb
inc
shl
in
rcll
insb
push
cmpsb
fdiv
add
fcmovbe
pop
sahf
mov
int3
imul
sub
add
adc
dec
cmp
lahf
out
add
pop
mov
jp
cmpsb
fdiv
add
fdivrl
push
pusha
sub
shll
push
mov
in
cmp
jge
pop
jns
loopne
pcmpgtd
mov
popa
sub
aad
xor
mov
pop
jno
lods
cld
dec
push
loopne
in
loop
iret
es
jno
lods
cld
pop
dec
aad
xor
jl
mov
sub
fistpll
pop
in
cmp
adc
fsubrl
add
mov
jge
imul
mov
icebp
lret
insb
inc
cld
popa
dec
shrl
in
fistps
mov
cmp
dec
or
insb
mov
lods
stos
dec
test
pop
fsubrl
decl
jbe
inc
cld
pusha
dec
loopne
cmp
pop
mov
and
push
mov
xor
sub
out
xor
jp
int
das
add
stos
mov
dec
mov
mov
sub
xchg
bswap
pushf
sub
out
xor
jg
cmp
pop
scas
mov
dec
mov
icebp
or
cmp
adc
cmp
rcrl
mov
cld
fsubrs
das
std
cwtl
pushf
call
pop
mov
mov
cld
pop
inc
loopne
cmp
xchg
pushf
out
lret
pop
stos
mov
and
dec
mov
cmp
dec
loop
rcrl
jp
lods
cld
pusha
inc
rcr
inc
setno
lods
lret
mov
packssdw
or
mov
cmp
insb
mov
icebp
jl
stos
sarb
orl
jl
les
scas
mov
insb
adcl
jmp
insb
test
jb
dec
aad
cli
pushf
sub
int
or
mov
dec
mov
ds
fwait
out
lods
lret
dec
lahf
rorl
mov
cld
mov
push
pusha
sub
aas
add
out
add
pop
pop
rolb
inc
add
adc
mov
dec
mov
cmp
dec
jmp
rolb
inc
or
test
jg
sbb
inc
fnsave
xor
lret
jne
lods
cld
pusha
inc
rcr
xor
fwait
icebp
cld
jl
test
orl
out
mov
test
sbb
dec
shrl
in
std
rcrl
insb
jge
outsb
jno
shlb
call
pop
push
sbb
cld
or
insb
mov
sti
int3
push
scas
lods
nop
adc
das
in
std
cwtl
call
insb
mov
push
in
adc
mov
inc
fldt
sub
lret
pop
mov
mov
push
xor
stos
mov
fsubrl
mov
pop
popf
mov
dec
loope
xor
scas
mov
int3
gs
loopne
xor
scas
mov
adc
jle
jecxz
add
fadd
bound
jle
fldenv
inc
add
movsl
mov
inc
lcall
rorl
cmp
gs
iret
xor
push
movsl
pushf
lock
push
scas
insb
mov
jo
inc
in
aas
adc
aad
bound
jb
add
mov
or
jno
notrack
cmp
xchg
sbb
jne
int
xor
pop
mov
fsubrl
add
pushf
cli
mov
pop
sbb
dec
loop
cmp
in
cmp
jg
popa
jg
mov
xor
xchg
loope
mov
cmp
mov
sbb
dec
xor
jmp
lds
cld
pusha
inc
aad
in
or
cmpsl
insb
mov
insl
addl
pushf
cli
lret
pusha
pop
mov
dec
loopne
xor
sub
ffreep
pop
mov
mov
push
dec
rcr
cmp
mov
stos
mov
lods
cld
push
dec
loop
cmp
pop
popf
mov
or
ljmp
mov
dec
loop
ds
dec
mov
cltd
sbbl
imul
sarl
pop
in
cmp
push
push
imul
lahf
rorl
mov
sbb
push
iret
pop
xor
lahf
loop
enter
sbb
cld
and
in
lret
es
lcall
sub
push
mov
mov
nop
adc
jg
fbstp
mov
clc
push
pop
and
or
stc
pushfw
loope
dec
sahf
mov
cld
int
cmp
fldl
lds
insb
pop
decb
int
xor
pop
jl
mov
lock
pop
cmp
pushf
out
mov
adc
sub
adc
cmp
pop
cmp
jmp
jl
mov
jae
lods
push
sbb
fucomp
les
insb
pop
shll
or
add
lock
mov
or
insb
mov
mov
in
mov
cld
pushf
dec
scas
mov
add
cs
mov
cld
insb
dec
scas
mov
int3
lret
je
out
cld
and
mov
mov
cs
mov
cld
lock
scas
mov
pop
leave
cs
mov
cld
mov
or
and
cs
mov
cld
mov
mov
in
leave
cs
dec
adc
lock
add
mov
and
or
xor
pushf
sub
lock
push
mov
orb
xor
mov
or
insb
mov
icebp
mov
mov
lods
cld
addl
inc
cvtps2pd
add
in
cmp
test
jno
inc
lcall
aad
mov
inc
in
int3
pushf
sub
out
mov
adc
jno
sarl
push
push
xchg
adc
addb
xor
aam
cmp
outsl
out
dec
dec
das
shr
adc
jl
iret
dec
mov
dec
fisubrs
jno
sarl
ret
mov
adc
pop
cmp
add
ret
push
stos
mov
adc
insb
mov
bnd
pop
outsb
jp
and
cmpb
stos
icebp
aam
cmp
mov
popa
insl
dec
int
cmp
xchg
hlt
icebp
pop
in
cmp
jge
pop
jl
lahf
out
cli
add
mov
push
lcall
mov
adc
insb
mov
in
iret
pusha
push
xchg
adc
jp
loopne
inc
std
mov
cmp
packssdw
aad
cli
add
mov
inc
loopne
xor
jl
sbbl
or
insb
mov
iret
mov
sbb
dec
cmp
dec
movsl
mov
fsubrl
in
jle
iret
mov
sbb
dec
cmp
pop
test
jno
lcall
mov
pop
jo
dec
rcr
cmp
fcomip
iret
pop
mov
or
insb
mov
xchg
jbe
cmp
push
lods
cld
push
fsubrl
mov
in
cmp
sbb
cld
or
pushf
sub
nop
pop
in
cmp
sbb
cld
or
out
jl
sti
test
lods
cld
pop
das
mov
ljmp
lods
cld
jb
out
cmp
sub
repz
adc
ljmp
dec
scas
dec
sbb
cld
jae
cmp
cltd
loope
lds
mov
push
shr
xor
jl
iret
push
test
dec
and
insb
mov
sti
rcrl
cltd
jge
pop
jae
fldenv
cmp
dec
iret
add
sbb
cld
jp
cltd
mov
add
jns
xlat
ds
insb
mov
clc
lret
push
mov
sbb
cld
das
inc
in
cmp
xchg
lock
outsl
andl
int3
pushf
sub
rcl
cmp
xchg
out
cld
add
mov
inc
shrl
cmp
mov
jo
cmp
xchg
lret
pop
stos
mov
or
dec
shrb
inc
js
mov
jle
aad
cmp
jle
cli
pop
in
cmp
mov
jo
cmp
xchg
lret
pop
stos
mov
or
dec
shrb
inc
js
mov
jle
aad
cmp
jle
cli
scas
push
scas
ret
popa
jg
insb
mov
add
adc
sub
adc
cmp
jne
push
push
sub
incl
sahf
loope
shrb
stos
mov
das
shll
sub
fwait
ljmp
pop
pop
or
insb
mov
and
cs
xchg
out
cld
test
mov
hlt
shrl
cmp
xchg
out
cld
fs
scas
mov
rcl
cs
xchg
out
cld
inc
push
scas
mov
lods
shrl
cmp
xchg
out
cld
sbb
mov
mov
cs
xchg
out
cld
or
insb
mov
xor
cs
xchg
out
cld
nop
push
scas
mov
cld
shrl
cmp
xchg
out
cld
add
scas
mov
insb
shrb
cmp
xchg
out
cld
fcoms
mov
dec
shrb
cmp
xchg
out
cld
les
mov
cmp
cs
xchg
out
cld
lods
push
scas
mov
sbb
cs
xchg
out
cld
test
mov
lock
cmp
xchg
out
cld
pusha
push
scas
mov
rcl
cs
xchg
out
cld
sub
scas
mov
mov
xchg
out
cld
sub
mov
movsb
shrl
cmp
xchg
out
cld
or
scas
mov
test
cs
xchg
out
cld
hlt
push
scas
mov
push
xchg
out
cld
fcoms
mov
inc
shrl
cmp
xchg
out
cld
lods
push
scas
mov
and
cs
xchg
out
cld
mov
mov
cld
shrl
cmp
xchg
out
cld
insb
push
scas
mov
cs
xchg
out
cld
push
push
scas
mov
int3
shrl
cmp
xchg
out
cld
inc
push
scas
mov
mov
xchg
out
cld
sub
mov
cwtl
shrl
cmp
xchg
out
cld
or
scas
mov
adc
cmp
xchg
out
cld
clc
push
scas
mov
insb
shrb
cmp
nop
out
cld
loopne
scas
mov
push
shrb
cmp
nop
out
cld
dec
push
scas
mov
cmp
cs
nop
out
cld
movsb
push
scas
mov
adc
cs
nop
out
cld
jl
scas
mov
in
shrb
cmp
nop
out
cld
fs
scas
mov
aam
cs
nop
out
cld
inc
push
scas
mov
cwtl
shrl
cmp
nop
out
cld
and
mov
test
cs
out
cld
call
movd
cs
out
cld
fmuls
mov
inc
iret
cs
out
cld
or
scas
mov
sub
cs
out
cld
cwtl
dec
scas
mov
or
cs
out
cld
orb
cmp
outsb
jl
iret
cs
out
cld
pusha
dec
scas
mov
aam
cs
xchg
out
cld
dec
dec
scas
mov
rcl
cmp
xchg
out
cld
or
insb
mov
cmc
lret
lods
mov
jo
fsubrl
std
lcall
sbb
cld
addl
sub
enter
sbb
cld
jnp
shlb
out
lret
pop
mov
mov
cld
test
cmp
xchg
in
pop
in
cmp
mov
xor
lahf
jl
lret
pop
lods
lods
lea
int3
pushf
sub
out
lds
mov
fnstcw
iret
pusha
popf
mov
dec
fsubrs
lds
sarb
or
insb
mov
mov
aas
adc
pop
jl
mov
pop
popa
jl
fildll
inc
or
cmp
jge
pop
or
insb
mov
out
mov
pop
outsl
or
insb
mov
dec
arpl
jo
fcompl
in
mov
lods
cld
jo
fstps
dec
arpl
jo
fstps
dec
in
cmp
mov
pop
jne
insb
mov
sti
pop
in
cmp
sbbl
mov
inc
fs
mov
jo
fsubrl
add
in
cmp
xchg
packuswb
insb
mov
in
lret
dec
sbb
cld
outsb
cmp
sub
add
dec
movsb
mov
fsubrl
or
scas
mov
dec
shll
stc
mov
lods
cld
ja
loopne
xor
mov
jae
fldt
xor
sub
icebp
into
push
lahf
dec
sbb
cld
outsl
inc
fisubs
cmc
mov
adc
mov
out
into
push
popf
mov
push
fistps
call
push
cmp
jge
cld
js
xlat
and
pushf
sub
cld
shll
sbb
cld
jbe
aam
int3
pushf
sub
stc
lds
dec
sbb
cld
outsb
inc
fsubrs
int3
pushf
sub
repnz
push
mov
jbe
sarl
lret
dec
cmp
xchg
adc
xchg
sub
mov
sbb
cmp
pushf
mov
add
ret
test
je
fsubrl
add
in
cmp
test
xor
inc
add
pop
cmp
sbbl
sbb
sti
rcrl
sbbl
mov
mov
mov
sbb
dec
shrl
int3
pushf
sub
hlt
lret
pop
mov
insl
aas
iret
sub
mov
cmp
jg
imul
sub
cmc
lret
mov
fsubrl
adc
cmp
xchg
and
dec
xlat
mov
mov
mov
push
insb
mov
mov
mov
dec
insb
mov
icebp
leave
in
cmp
test
and
pushf
sub
clc
lds
les
cld
orl
jl
rcrl
sbb
cld
jp
fisubl
int3
pushf
sub
add
pop
mov
sbb
cld
ds
lock
pushf
sub
mov
sbb
cld
ds
out
int3
pushf
sub
mov
sbb
cld
ds
in
int3
pushf
sub
mov
push
jecxz
inc
or
mov
rcll
cld
cmp
shlb
mov
jge
fbstp
inc
adc
mov
xchg
in
cmp
dec
fbstp
inc
fsubrl
into
pop
mov
pop
in
cmp
dec
cmp
pushf
sub
mov
xchg
adc
jl
fildll
int3
pushf
sub
cld
mov
fbstp
or
insb
mov
add
in
cmp
jge
outsl
orl
int3
pushf
sub
cld
mov
push
pusha
cmp
add
cmp
mov
mov
lock
pop
popa
or
insb
mov
add
pusha
cmp
xchg
adc
fsubrl
adc
stos
dec
sbb
cld
addb
xor
sahf
jl
shlb
mov
and
jnp
fisubl
ds
sub
out
lret
pop
lods
rcll
mov
mov
mov
fsubrl
add
cmp
sbbb
jp
insb
mov
cli
lds
mov
inc
fldenv
mov
lods
cld
insl
inc
fldenv
mov
lods
cld
insl
inc
fldenv
mov
lods
cld
jns
mov
stos
mov
jge
popa
jo
mov
jmp
dec
sbb
cld
jns
mov
stos
mov
jge
popa
jo
mov
jmp
dec
sbb
cld
jns
mov
stos
mov
jge
popa
jo
mov
jmp
dec
sbb
cld
jns
mov
stos
mov
jge
popa
jo
mov
jmp
dec
sbb
cld
outsl
dec
shlb
cld
fcoml
stos
jp
adc
fsubrl
out
jno
loope
xor
jne
shll
in
adc
scas
sarb
jae
fbstp
ds
push
popf
mov
int3
popa
jle
fldt
push
mov
sbb
outsl
icebp
aas
popa
cs
push
mov
pop
mov
xchg
int3
imul
dec
fucomp
rclb
mov
lods
cld
addr16
mov
and
jno
jl
popf
mov
adc
push
fcmovnu
aas
adc
mov
sub
aam
xor
nop
test
rcrl
mov
sbb
add
cli
cli
pushf
sub
out
xor
outsb
icebp
pop
inc
cld
mov
jmp
rorl
and
in
mov
addr16
or
out
mov
mov
dec
mov
inc
std
sahf
lock
popf
inc
imul
fsubs
ds
dec
mov
jle
fdivp
in
fcoms
lret
cmp
insb
decb
das
leave
imul
fldl
xchg
cld
int
inc
add
in
cmp
imul
fmull
or
scas
rolb
mov
lock
popa
mov
sub
pushf
iret
lret
pop
stos
mov
and
cld
loopne
in
rcrl
lcall
leave
icebp
jg
fidivrs
insb
dec
int3
sub
push
xchg
das
fldenv
aas
insb
inc
pop
or
fsubrl
jmp
shrl
push
or
insb
mov
aam
aas
nop
insb
inc
pop
or
fsubrl
jmp
es
mov
cld
xchg
das
in
or
pop
mov
sub
stc
pushfw
fdivrl
push
pusha
sub
iret
pop
xor
loope
mov
cmp
imul
fdiv
loop
in
rcll
mov
jo
cmp
mov
jl
popa
mov
or
jmp
or
mov
dec
loopne
or
ret
mov
add
andnps
cmpsl
imul
fdiv
loop
in
rcll
jge
outsl
sub
loope
xor
mov
jl
popa
mov
or
jmp
or
mov
push
sub
int3
pusha
pop
mov
pop
sbb
inc
shrl
in
or
push
lods
cld
pop
sub
add
jl
mov
push
loopne
in
add
pop
je
pop
sbb
fldenv
in
cmp
imul
fcompl
std
lcall
jg
sbb
inc
int
xor
pushfw
mov
in
cmp
imul
fcoml
lds
mov
cld
fildll
cmp
dec
ljmp
int3
and
insb
mov
fidivrl
int3
jno
inc
cmp
xchg
jecxz
rorb
dec
fsubrs
inc
dec
mov
cmpsl
imul
fdiv
cvttps2pi
xor
outsb
icebp
pop
inc
cld
xchg
das
in
shld
add
pop
push
sbb
cld
popa
dec
fbld
das
adc
cmp
orl
and
pushf
sub
out
cmp
outsl
loopne
inc
cld
mov
xor
rcrb
mov
cld
fbld
adc
scas
mov
adc
sub
fisubrs
cmp
pushfw
enter
jp
lods
cld
addr16
mov
fld
jl
mov
sub
loopne
adc
jbe
inc
pop
xor
mov
shlb
lods
cld
push
inc
fisubl
in
add
cmp
insb
decb
cmp
push
fcomip
iret
pop
pop
mov
fsubrl
jmp
es
sahf
orl
pop
inc
add
in
cmp
jno
push
sub
fisubs
das
or
movsl
mov
fsubrl
jmp
es
nop
test
pop
jnp
fisubl
das
adc
cmp
jno
push
sub
shlb
cli
rorl
mov
or
fsubrl
icebp
jne
lods
xchg
pop
popf
rolb
mov
lods
xchg
adc
sub
stc
pushfw
dec
mov
out
pop
inc
int
inc
lret
sti
rorb
mov
push
mov
aas
lret
out
sub
sbb
dec
loopne
adc
iret
sbb
jo
dec
push
sbb
dec
ret
pop
mov
sub
loopne
adc
iret
pusha
pop
rolb
xor
sahf
jmp
xchg
or
jno
ljmp
lock
rcrl
int3
dec
jne
loopne
inc
add
loope
rcrb
sbb
cld
jg
into
mov
fidivrl
adc
and
out
cmp
insl
inc
fsubs
xor
popf
mov
dec
loopne
cmp
dec
lock
into
push
popf
mov
int3
popa
jle
fldt
push
mov
sbb
push
mov
xor
ret
or
mov
sub
pushf
fcmovb
pusha
mov
mov
sbb
dec
shrb
cli
pushf
sub
out
sub
sbb
push
fbstp
xor
dec
vcmpss
sbb
cld
sub
stc
pushfw
faddp
pop
stos
ret
arpl
cli
pushf
sub
out
mov
and
and
add
or
sarb
sub
aad
inc
add
push
scas
mov
adc
sub
fisubrs
cmp
pushfw
enter
jp
lods
cld
addr16
or
out
mov
scas
jg
outsl
jg
fsubs
repnz
dec
sbb
cld
addr16
or
stc
pushfw
int
pop
mov
jle
fisubrl
xor
pop
in
cmp
imul
fsubl
or
in
shll
jno
addr16
mov
into
icebp
leave
pop
mov
cmp
fs
fcomp
add
cmp
pop
stc
inc
imul
cwtl
loopne
andl
mov
push
dec
shrl
cmp
xchg
pushf
inc
push
test
dec
lods
cld
addr16
mov
into
icebp
leave
pop
mov
cmp
fs
fcomp
sub
shlb
xchg
sbb
dec
shr
int3
pushf
sub
out
sub
sbb
inc
loopne
invd
xchg
in
out
lret
dec
scas
mov
lods
cld
cmp
scas
sub
into
push
pop
nop
jge
pop
imul
js
fbld
sbb
cmp
dec
lock
jl
test
adc
dec
cs
in
mov
cmp
clc
push
pop
and
or
stc
pushfw
int
cmp
scas
jge
fs
shrb
inc
sete
lock
cmp
clc
push
pop
and
or
stc
pushfw
sarb
int3
jo
cld
fsubrs
sub
iret
dec
lods
mov
adc
or
loop
rcr
movsb
xor
push
cmp
dec
lock
jl
test
adc
push
sub
in
mov
cmp
clc
push
pop
and
or
stc
pushfw
shrb
pcmpgtb
shrb
inc
sete
lock
cmp
outsb
clc
dec
push
and
dec
ret
pop
mov
sub
loopne
adc
into
bound
jle
int
clc
mov
pop
jbe
pop
shll
or
out
js
shll
int3
dec
jno
loop
ds
push
stos
mov
adc
dec
mov
call
add
dec
ficompl
mov
sbb
add
and
imul
loop
in
rcll
mov
outsl
cmpb
out
add
pop
pop
rolb
xor
sahf
jmp
xchg
or
jno
ljmp
in
rcr
mov
adc
inc
cmp
push
stos
mov
sbb
and
lahf
mov
rcrb
nop
test
popa
outsl
push
fldt
inc
dec
mov
cmpsl
jo
push
pop
cmp
call
mov
dec
loopne
aas
add
mov
mov
pop
jo
mov
ds
fwait
out
jl
popa
mov
xor
stc
pushfw
ffreep
pop
mov
mov
outsl
cmpb
jmp
jl
stos
mov
inc
cwtl
fcoml
add
adc
jge
shrl
inc
dec
mov
cmpsl
jo
push
pop
cmp
loope
shlb
xchg
sbb
dec
shr
int3
pushf
sub
out
xor
dec
pop
cmp
call
mov
dec
loopne
aas
add
mov
mov
pop
jo
mov
ds
fwait
out
jl
popa
mov
and
in
insl
iret
fistpll
or
sub
mov
pop
popf
mov
inc
lcall
mov
packuswb
aam
cmp
xchg
loopne
rcrb
insb
inc
shrl
or
jmp
es
xchg
mov
pop
xor
lcall
inc
pop
and
fsubrl
jmp
es
pushf
jge
jo
inc
mov
xor
lcall
inc
pop
and
fsubrl
jmp
es
xchg
outsb
out
sbb
cmp
lahf
stos
mov
cmpsl
jo
dec
push
sbb
dec
ret
pop
mov
sub
aad
cmp
mov
cmp
insb
mov
rcrl
int3
inc
jne
fsubs
xor
mov
cmp
insb
mov
rcrl
int3
dec
jnp
int
inc
add
push
scas
mov
adc
inc
cmp
pop
jl
mov
mov
push
mov
inc
or
jno
int3
jo
dec
rcrl
mov
mov
cld
sub
stc
pushfw
fmul
push
mov
je
fisubl
xor
dec
lock
xchg
or
jno
shrl
or
insb
mov
fsubrs
sbb
inc
inc
mov
or
mov
adc
sub
fistpll
test
jbe
bound
sub
or
scas
dec
sbb
cld
sub
stc
pushfw
ffreep
pop
mov
mov
pop
je
fisubl
xor
dec
lock
xchg
or
jno
shrl
or
insb
mov
jmp
xchg
sbb
add
fdivrl
add
pop
mov
pop
jo
cmp
sub
out
cmp
jnp
xlat
xor
dec
mov
insb
inc
pop
sub
insb
mov
iret
mov
adc
xor
mov
push
stos
lods
nop
adc
dec
fistpl
xor
lahf
mov
sbbl
dec
cmp
fcomip
iret
pop
pop
mov
sbb
inc
cmpsb
fdiv
cvttps2pi
mov
cmp
dec
lock
jl
mov
insl
push
rcr
cmp
fcomip
iret
pop
pop
xchg
pusha
out
xor
mov
iret
mov
sbb
dec
aaa
add
or
nop
push
int3
and
insb
mov
sarl
sbb
inc
rcr
repz
cmpsl
pusha
out
aas
imul
nop
pushf
rol
pop
mov
cmp
shrl
push
pushfw
mov
sbb
cmc
dec
push
cmp
lock
jl
scas
dec
sbb
cld
xor
lock
mov
dec
mov
inc
std
sahf
lock
mov
pshufw
faddl
sahf
loope
rcrb
mov
push
imul
clc
icebp
add
mov
cmpsl
jb
dec
push
xor
imul
icebp
jle
jl
scas
jp
lods
cld
addr16
mov
psubw
iret
lret
pop
test
jg
fidivl
cli
pushf
sub
out
xor
sbb
dec
aad
cmp
dec
ljmp
sbb
or
insb
mov
jmp
mov
pop
jp
fcomip
in
rcrl
test
dec
fldt
in
setno
lock
insb
nop
sbb
inc
fldcw
inc
add
rcrl
sbb
cld
sub
stc
pushfw
faddp
dec
mov
jno
rcrb
jl
scas
dec
sbb
cld
sub
stc
pushfw
faddp
dec
mov
jno
iret
sub
or
loope
shll
jno
lods
cld
sub
stc
pushfw
rol
pusha
movsb
mov
add
ljmp
sub
sbb
dec
int
cmp
dec
lock
jl
mov
mov
and
fwait
out
add
mov
or
jmp
es
xchg
andl
imul
rcrl
mov
cld
xchg
das
int3
pushf
sub
out
sub
sbb
dec
aad
aas
mov
push
jbe
inc
pop
sub
insb
mov
fidivrl
adc
imul
rcrl
dec
sbb
cld
sub
stc
pushfw
int
pusha
movsl
mov
dec
cmpsb
fdiv
cvtps2pd
das
nop
xchg
imul
xor
mov
fidivrl
punpckhbw
insb
mov
lods
sbbl
sub
stc
pushfw
fxch
push
mov
jp
shl
in
rcrl
insb
inc
pop
or
fsubrl
jmp
es
sahf
sbbl
cmp
dec
enter
or
jp
iret
sub
or
movsl
mov
dec
insb
mov
fidivrl
sbb
insl
push
cmpsb
fdiv
cvttps2pi
sub
sbb
inc
fcomps
mov
or
mov
push
xchg
das
int3
pushf
sub
mov
cmpsl
jno
inc
dec
xor
jmp
jl
subb
cmp
and
add
mov
je
fcmovu
das
adc
pop
mov
dec
rcr
cmp
fcomip
iret
pop
push
sbb
cld
xor
lock
jl
popf
mov
adc
push
fcmovnu
aas
adc
stos
ret
mov
imul
xor
xchg
mov
mov
cld
test
xor
pop
jl
mov
orb
mov
inc
or
stos
mov
and
loopne
in
add
popa
mov
dec
xchg
das
cli
add
cmpsl
popa
add
dec
cmp
jmp
xchg
outsl
or
insb
mov
iret
mov
and
dec
xchg
xor
add
insb
adcb
daa
loop
lret
xor
sbb
cmp
dec
lock
jl
mov
mov
sbb
inc
int
das
add
lock
into
push
popf
mov
int3
popa
jle
fldt
push
mov
sbb
cmc
dec
push
and
pushf
ffreep
dec
scas
scas
test
sub
mov
es
jno
int3
gs
mov
aas
lret
out
xor
cld
and
stc
pushfw
faddp
pop
popf
mov
add
jecxz
adc
scas
jae
lods
cld
addr16
pushfw
aad
bound
jb
fldt
xor
test
outsb
inc
mov
add
mov
jge
sbb
or
in
leave
fdivrl
adc
xor
mov
pusha
pop
mov
sbb
cld
loopne
add
scas
mov
sbb
jl
movsl
das
mov
fldt
xor
adc
mov
dec
mov
aas
mov
pop
mov
and
stc
pushfw
sarb
int3
jo
cld
fbstp
sub
enter
cmp
fs
int
clc
mov
pop
jbe
pop
shll
or
loopne
jmp
mov
sbb
inc
fisubl
push
mov
adc
jle
xchg
das
in
setno
sti
lret
jp
lods
cld
addr16
lds
sub
dec
ret
pop
mov
sub
loopne
adc
lret
pop
mov
jno
shr
in
add
pop
mov
cmp
fsubrl
out
test
jmp
mov
pusha
jne
shl
in
les
movb
outsb
sub
aas
add
push
sbb
cld
and
call
es
xchg
jge
push
cmp
pop
rorb
cs
adc
insb
sbbl
fmull
rcll
cmpsl
pusha
sti
push
pop
sub
pushf
ror
arpl
jne
rcr
and
js
lods
sbbl
xor
mov
aad
xor
jns
sbb
cmp
dec
lock
jl
mov
mov
sbb
inc
shlb
cmc
lret
pop
pop
rolb
xor
sahf
jmp
xchg
or
jno
ljmp
out
jno
aad
xor
jns
sbb
pop
mov
in
rorl
jg
popa
insl
push
shll
in
add
popa
mov
push
fcomi
in
rcrl
cmpsl
outsl
out
cmp
sbb
sahf
lock
iret
dec
popf
mov
dec
loopne
xor
dec
mov
insb
xchg
adc
and
std
movsl
mov
adcl
or
insb
mov
fidivrl
adc
xor
mov
pusha
pop
mov
push
aam
xor
nop
test
rcrl
mov
sbb
add
cli
cli
pushf
sub
mov
cmpsl
outsl
out
cmp
icebp
cmovl
sti
into
pusha
pop
lahf
jg
push
dec
loopne
adc
pop
jno
out
jo
jecxz
inc
add
int3
imul
and
setno
sti
lret
insb
sbbb
sub
rcr
cmp
pop
pop
rorl
and
adc
jp
lods
cld
pop
inc
fnsave
xor
mov
cmp
jge
pusha
jnp
insb
mov
fidivrl
adc
xor
mov
pusha
pop
mov
cld
fisubrl
in
in
pushf
dec
push
lahf
mov
adc
mov
fidivrl
adc
xor
mov
pusha
pop
mov
cld
fsubrl
adc
jl
stos
ret
gs
insb
mov
fidivrl
push
popa
insl
inc
in
icebp
add
mov
adc
inc
fisubs
sub
mov
stos
insb
mov
sub
call
push
sbb
cld
xor
dec
ret
pop
mov
sub
loopne
adc
lret
pop
mov
jno
shr
in
add
pop
mov
cmp
fsubrl
icebp
jo
jmp
mov
gs
mov
xor
mov
cmp
imul
das
cli
mov
push
mov
adc
loope
enter
enter
cmp
pusha
xor
cli
pushf
sub
aad
cmp
dec
in
std
mov
sahf
mov
sub
or
stc
pushfw
sarb
int3
jo
cld
fbstp
sub
enter
cmp
fs
int
clc
mov
pop
jbe
pop
shll
or
in
jne
sarl
sbb
dec
rcr
icebp
add
lret
insb
nop
sbb
dec
lcall
rorb
mov
adc
sub
shr
in
adc
mov
cmp
pusha
xor
cli
pushf
sub
out
das
mov
push
int
xor
lret
pop
mov
jno
fnstenv
aas
adc
jl
scas
mov
and
cld
loopne
sub
pop
in
cmp
jo
dec
imul
cwtl
loope
jl
stos
insb
and
push
mov
cmp
fwait
loopne
rclb
jge
sub
fisubrs
cmp
pushfw
enter
jp
lods
cld
xor
dec
mov
insb
sbbb
jnp
aad
xor
dec
movsb
mov
es
mov
dec
mov
aas
mov
pop
mov
pop
dec
fisubrs
sub
int3
pop
stos
mov
adc
xor
dec
dec
test
or
js
in
adc
lods
mov
adc
ljmp
inc
mov
dec
fistpl
lods
ret
mov
int3
and
loopne
push
mov
dec
movsl
mov
fsubrl
loop
int3
jmp
mov
pop
jo
fisubl
in
add
popa
mov
cld
xchg
das
int3
pushf
sub
repnz
xchg
adc
cmp
loope
pushf
sub
sti
int3
push
stos
insb
inc
pop
or
add
leave
rcrl
push
mov
jo
add
leave
movsl
loope
data16
cmp
jle
cld
xor
loope
rcll
mov
and
or
dec
ret
push
pop
mov
dec
loope
xor
dec
mov
rorl
inc
lcall
mov
fsubrl
pushf
sub
cld
lds
dec
sbb
cld
jl
fisubl
xor
fwait
jmp
pop
in
cmp
sbb
cld
addl
loop
lret
pop
mov
insl
dec
iret
mov
out
mov
lods
cld
jg
int
int3
pushf
sub
inc
in
cmp
adcl
xor
pushf
sub
lock
mov
push
dec
int
int3
pushf
sub
call
pop
mov
or
insb
mov
mov
mov
sbb
fldt
xor
cmp
sbbl
mov
repnz
mov
sbb
fsubrl
pushf
sub
icebp
aam
lahf
rcll
sbb
lock
mov
sbb
fsubrl
or
jl
rcrl
lods
cld
jns
insb
mov
mov
scas
xchg
lods
cld
outsl
push
iret
sub
pushf
sub
in
pop
in
cmp
jg
gs
insb
mov
cld
into
push
mov
adc
insl
cmp
nop
lds
dec
sbb
cld
jae
insb
mov
sti
iret
pusha
cmp
push
push
imul
cltd
rorb
xchg
imul
jno
jmp
cmp
popa
jg
int
xor
mov
or
insb
mov
jmp
sbbl
xor
add
push
sbb
cld
sub
dec
sar
rcrl
test
jo
aas
fldt
cmp
xchg
lock
rcrb
cmpsl
push
push
imul
sahf
loope
enter
cmp
pop
jne
shll
cli
pushf
sub
out
xor
je
fisubs
in
or
stos
mov
inc
shr
int3
pushf
sub
inc
dec
scas
mov
lods
cld
outsl
dec
fidivl
xor
pop
in
cmp
jge
outsl
jno
insb
mov
mov
cmpsl
push
push
imul
mov
test
and
cmp
pop
jl
stos
xor
jno
loop
das
add
iret
pusha
pop
scas
mov
insb
js
loopne
xor
sub
call
dec
scas
rcrb
sub
dec
ret
pop
mov
sub
fistpl
add
fisubl
dec
mov
ds
pop
movsl
jg
fisubl
dec
lcall
ret
mov
inc
fsubs
int3
pushf
sub
out
leave
in
cmp
mov
cld
jns
ficomps
int3
pushf
sub
stc
lds
scas
mov
cld
sbb
mov
add
mov
inc
fbstp
int3
pushf
sub
repz
cmp
andl
mov
add
in
cmp
test
int3
pushf
sub
test
sbb
dec
fistpl
int3
pushf
sub
lock
mov
pop
cld
jg
insb
mov
cld
into
in
cmp
mov
bound
insb
mov
test
push
popa
insl
inc
insb
mov
cld
shr
cmp
jge
jo
fsubrl
pushf
sub
test
stos
dec
sbb
cld
jp
insb
mov
mov
mov
lods
cld
jb
fisubl
cmp
lahf
out
mov
cmpsl
imul
fmull
push
out
hlt
lds
insb
jle
jo
fsubrl
push
out
hlt
pop
in
cmp
andb
or
insb
mov
inc
pop
mov
mov
int3
pushf
sub
hlt
shlb
mov
dec
insb
mov
cmc
lret
mov
dec
fbld
adc
cmp
test
outsl
push
fisubrs
xor
mov
cmp
sbbb
or
insb
mov
hlt
rcrb
sbb
cld
jb
fisubrs
pushf
sub
repnz
jge
insb
or
insb
mov
repz
test
sub
stc
pushfw
fmul
push
movsl
mov
push
mov
cmp
pushf
call
dec
sbb
cld
xor
fdiv
cvttps2pi
pop
lods
rclb
sub
add
pop
mov
dec
lods
cld
addl
fistpll
jmp
sbbl
das
xor
cwtl
call
scas
mov
outsl
orb
cmp
cltd
loopne
pop
in
cmp
mov
push
dec
sarb
rcrl
mov
outsl
or
insb
mov
lock
push
mov
test
bound
insb
mov
add
pusha
movsl
mov
dec
insb
mov
lcall
mov
inc
fldcw
inc
add
inc
in
cmp
xchg
pop
gs
fstpt
shll
sbbb
outsl
dec
sarl
enter
sbb
cld
js
insb
mov
in
enter
mov
mov
add
pop
mov
sub
stc
pushfw
sarb
int3
jo
cld
fisubs
or
scas
rolb
mov
fidivrl
push
imul
sub
mov
push
test
jle
into
sub
adc
cmc
pop
in
cmp
subb
adc
cmp
sbb
cld
jge
aad
int3
pushf
sub
dec
push
mov
sbb
mov
lock
mov
push
insb
mov
inc
dec
stos
mov
fsubrl
adc
cmp
jg
push
push
int
aas
pushf
sub
out
das
jge
jns
cld
pop
aas
int
int3
pushf
sub
mov
sbb
insb
mov
loope
xor
pop
inc
iret
xor
add
inc
dec
mov
sbbl
mov
sti
int3
in
cmp
mov
pop
jg
loopne
cmp
sub
bnd
mov
inc
fisubl
xor
pop
lods
dec
sbb
cld
xor
stc
sub
add
pusha
lods
mov
fsubrl
in
jne
sarl
sbb
inc
fsubrs
cmp
sub
cld
lds
mov
fsubrl
icebp
jl
jmp
pusha
cld
sbb
dec
fldt
xor
scas
rorb
or
pushf
sub
pop
pop
mov
sbb
fsubrl
adc
pop
cmp
pusha
lock
mov
lods
ret
mov
inc
fldt
cli
push
jmp
pop
in
cmp
outsb
icebp
inc
push
cs
and
sub
loopne
cmp
mov
inc
iret
xor
pushf
sub
inc
push
movsl
mov
push
fldt
pushf
sub
out
cmp
pop
dec
rcr
cmp
in
cmp
mov
outsl
orb
daa
in
rcr
mov
and
fldt
pushf
sub
out
cmp
imul
fwait
jecxz
lret
mov
das
mov
push
jb
dec
insb
mov
call
lods
cld
jg
insb
mov
call
pop
popa
outsl
fsubrl
or
mov
jg
iret
mov
inc
in
cmp
sbbl
das
xor
lret
in
cmp
mov
imul
sub
lock
mov
dec
shrb
xor
in
cmp
sbb
cld
xor
aam
hlt
pushf
sub
mov
push
scas
ret
cld
xor
and
add
in
cmp
jg
pop
jp
insb
mov
pop
in
cmp
mov
cld
xor
sarb
pop
in
cmp
sbb
cld
and
dec
mov
mov
adc
push
inc
mov
pusha
movsb
mov
inc
mov
aas
add
push
sbb
cld
and
dec
mov
lods
mov
popa
insl
inc
in
sub
rorl
nop
adc
orl
out
mov
pusha
out
aas
imul
cwtl
loope
jl
stos
insb
and
push
mov
xor
mov
mov
jno
fisubrs
ds
dec
mov
dec
sbb
cld
and
dec
mov
mov
sbb
push
fbld
ds
dec
mov
fs
push
or
insb
mov
jmp
jg
addb
xor
adcl
jae
adc
dec
shll
in
add
stos
lods
xchg
and
aad
xor
dec
icebp
inc
pop
jbe
inc
pop
sub
insb
mov
jmp
test
popa
jo
loopne
in
push
rorb
mov
inc
inc
add
loope
rcrb
mov
push
imul
clc
icebp
add
mov
lcall
loope
mov
cmp
sbb
insb
mov
rcrl
lcall
loope
mov
ds
xchg
imul
xor
leave
pushf
sub
lea
sti
dec
or
loopne
mov
mov
adc
inc
mov
xor
adcl
jae
adc
dec
mov
aas
add
push
sbb
cld
pop
and
jl
mov
lods
cld
aas
setle
mov
adc
cld
xchg
das
in
or
pop
mov
fsubrl
jmp
es
xchg
mov
pop
xor
lcall
aas
adc
rorb
push
or
insb
mov
lcall
lcall
mov
iret
mov
out
jg
jbe
daa
jmp
es
mov
add
fdivrl
or
stos
rcll
pop
int3
pushf
sub
fisubl
pop
or
fsubrl
iret
pop
jl
pop
in
cmp
dec
fdivrp
cmp
mov
jl
stos
xor
sbb
dec
jns
int3
pushf
sub
fsubrl
pop
or
fsubrl
in
ret
mov
insl
sbb
cld
sub
insb
mov
out
xor
pusha
cmp
call
mov
dec
loopne
das
or
mov
mov
pop
jo
mov
ds
fwait
out
jl
popa
mov
or
insb
mov
aad
xor
jns
sbb
dec
aad
cmp
dec
lret
scas
nop
adc
cmp
dec
or
mov
cld
mov
out
lods
rclb
jge
ss
shr
int3
pushf
sub
out
xor
pusha
cmp
call
mov
dec
loopne
das
or
movsl
mov
dec
rcrl
dec
pop
scas
xchg
and
lcall
scas
xor
jns
sbb
dec
aad
cmp
dec
lret
scas
nop
adc
sub
in
mov
sbbl
pop
inc
fidivs
xor
dec
lock
into
push
popf
mov
int3
and
insb
mov
fldcw
int3
xor
mov
jmp
xchg
sbb
dec
in
push
xchg
jl
popf
sarb
jle
cmp
fucomip
rcrl
sub
add
dec
int3
dec
dec
lahf
mov
pop
sbb
cmp
sahf
jmp
mov
fimull
push
fsubrl
fistpll
jmp
xchg
sbb
dec
in
push
xchg
jl
popf
sarb
jle
cmp
fucomip
rcrl
lods
cld
addr16
mov
ret
pop
mov
sub
loopne
adc
jl
movsb
mov
cld
shrl
or
mov
addr16
mov
into
icebp
leave
pop
mov
cmp
imul
sub
mov
pop
mov
sbb
cld
outsl
dec
shr
xor
jl
scas
cmp
imul
sahf
pushf
clc
lret
push
mov
adcl
mov
dec
sbb
cld
addr16
shr
or
mov
cld
mov
jmp
scas
popa
stos
je
out
dec
add
cli
cli
pushf
sub
out
cmp
imul
sahf
pushf
clc
lret
push
mov
jp
mov
icebp
mov
pushf
sbbl
and
icebp
lret
mov
lods
cld
addr16
shr
or
mov
cld
shll
inc
or
loope
lret
mov
aad
sub
xchg
and
lret
out
cmp
imul
mov
pop
mov
inc
mov
cmp
dec
call
dec
sbb
cld
addr16
shr
or
mov
dec
shll
xor
mov
mov
cld
loope
xor
pushfw
enter
jno
ljmp
out
js
shll
int3
inc
jle
fldt
push
mov
push
scas
insb
orb
in
push
xchg
lock
pop
mov
xor
ljmp
cmp
imul
cwtl
loope
jl
stos
insb
and
push
mov
cmp
pusha
movsb
mov
cld
shrl
or
mov
or
insb
mov
shll
int3
aas
js
shrl
inc
mov
push
lahf
rolb
sub
mov
adc
sub
shrl
inc
add
mov
xor
mov
shll
int3
dec
jno
shlb
lods
rorl
rolb
cs
add
push
stos
mov
packssdw
rcrl
inc
add
in
cmp
outsb
clc
dec
push
and
dec
ret
pop
mov
sub
fisubrl
inc
std
cwtl
call
rorb
and
or
pop
mov
push
imul
clc
icebp
add
mov
cmpsl
outsb
clc
dec
push
and
dec
sar
pop
scas
xchg
dec
dec
das
loopne
adc
pop
mov
cmp
fsubrl
add
cmp
sbb
cld
or
insb
mov
out
lret
pop
scas
rcrb
or
insb
mov
xor
cmp
andl
mov
mov
push
sbb
cld
outsl
dec
fldcw
pushf
sub
mov
dec
sbb
cld
pop
fldt
add
gs
sbb
cld
adc
insb
mov
sti
iret
in
cmp
sbb
cld
or
insb
mov
ret
cmp
cmc
out
cld
pushf
mov
mov
or
cs
cmc
out
cld
js
scas
mov
call
cmc
out
cld
pop
mov
mov
enter
xor
cld
cmp
outsb
jl
xor
out
cld
or
scas
mov
js
cs
hlt
out
cld
call
je
jl
xor
cmp
hlt
out
cld
les
jl
xor
cmp
hlt
out
cld
mov
je
jl
xor
cmp
hlt
out
cld
js
scas
mov
call
hlt
out
cld
push
mov
mov
shlb
je
out
cld
sub
scas
mov
pushf
xor
cmp
hlt
out
cld
or
outsb
jl
xor
cmp
repz
cld
call
jae
jl
xor
cmp
repz
cld
shlb
jl
xor
cmp
repz
cld
pushf
mov
mov
or
cs
repz
cld
je
scas
mov
fdivl
cs
repz
cld
dec
mov
mov
mov
cs
repz
cld
and
outsb
jl
xor
cmp
repnz
cld
lock
mov
pusha
xor
cmp
repnz
cld
shlb
outsb
jl
xor
cmp
repnz
cld
mov
scas
mov
sbb
cs
repnz
cld
mov
outsb
jl
xor
cmp
repnz
cld
pop
mov
mov
shlb
cmp
repnz
cld
sub
outsb
jl
xor
cmp
icebp
out
cld
hlt
mov
mov
xor
cmp
icebp
out
cld
shlb
outsb
jl
xor
cmp
icebp
out
cld
mov
scas
mov
sbb
cs
icebp
out
cld
mov
outsb
jl
xor
cmp
icebp
out
cld
push
jno
jl
xor
cmp
icebp
out
cld
inc
mov
mov
mov
cs
icebp
out
cld
sbb
scas
mov
mov
cs
lock
cld
hlt
mov
mov
pusha
xor
cmp
lock
cld
int3
mov
mov
cmp
cs
lock
cld
lods
mov
mov
sbb
cs
lock
cld
mov
outsb
jl
xor
cmp
lock
cld
fs
mov
aam
cs
lock
cld
inc
mov
mov
mov
cs
lock
cld
and
outsb
jl
xor
cmp
out
out
cld
or
outsb
jl
das
cs
out
out
cld
in
scas
mov
push
das
cs
out
out
cld
les
outsb
jl
das
cs
out
out
cld
movsb
scas
scas
mov
adc
cs
out
out
cld
subb
jl
das
cs
out
out
cld
pusha
scas
scas
mov
int3
das
cs
out
out
cld
cmp
outsb
jl
das
cs
out
out
cld
or
scas
mov
js
cs
out
out
cld
fsubrl
outsb
jl
cs
out
out
cld
mov
outsb
outsb
jl
cs
out
out
cld
xchg
scas
scas
mov
add
cs
out
out
cld
insb
scas
scas
mov
fsubrs
cs
out
out
cld
dec
scas
scas
mov
mov
out
out
cld
and
scas
mov
nop
cs
in
out
cld
cld
lods
scas
mov
push
in
out
cld
shrb
outsb
jl
sub
out
cld
test
scas
mov
adc
cs
in
out
cld
subb
jl
sub
out
cld
pop
lods
scas
mov
int3
sub
out
cld
cmp
scas
mov
lods
sub
out
cld
sbb
scas
mov
mov
out
cld
add
jl
sub
cmp
in
out
cld
fsubrl
jl
sub
cmp
in
out
cld
mov
insb
outsb
jl
sub
cmp
in
out
cld
xchg
lods
scas
mov
or
cmp
in
out
cld
js
scas
mov
call
in
out
cld
push
lods
scas
mov
les
cmp
in
out
cld
xor
scas
mov
mov
in
out
cld
adc
jl
sub
cmp
jmp
cld
in
stos
scas
mov
push
sub
cmp
jmp
cld
shrb
jl
sub
cmp
jmp
cld
nop
stos
scas
mov
cld
sub
cmp
jmp
cld
push
imul
sub
cmp
jmp
cld
dec
stos
scas
mov
mov
cs
jmp
cld
and
scas
mov
nop
sub
cmp
ljmp
lods
push
jl
sub
cmp
ljmp
mov
jl
sub
cmp
ljmp
insb
push
jl
sub
cmp
ljmp
dec
push
jl
sub
cmp
ljmp
sub
jl
sub
cmp
ljmp
add
outsb
jl
sub
cmp
ljmp
in
outsb
jl
sub
cmp
ljmp
mov
outsb
jl
sub
cmp
jmp
scas
mov
dec
sub
cmp
jmp
scas
mov
sub
cs
jmp
scas
mov
add
cs
jmp
scas
mov
fsubrl
cs
jmp
scas
mov
mov
jmp
scas
mov
cwtl
sub
cmp
jmp
scas
mov
jo
cs
call
scas
mov
dec
sub
cmp
call
scas
mov
and
cs
call
scas
mov
add
cs
call
scas
mov
fsubrl
cs
call
scas
mov
mov
cs
call
scas
mov
test
cs
out
cld
lock
scas
mov
pusha
daa
cs
out
cld
int3
cmpsl
scas
mov
cmp
cs
out
cld
test
scas
mov
adc
cs
out
cld
jl
scas
mov
call
out
cld
pop
cmpsl
scas
mov
les
cs
out
cld
xor
scas
mov
movsb
daa
cs
out
cld
adc
scas
mov
test
cs
out
cld
lock
scas
mov
pusha
es
out
cld
int3
cmpsb
scas
mov
cmp
cs
out
cld
movsb
cmpsb
scas
mov
adc
cs
out
cld
jl
scas
mov
in
cs
out
cld
push
cmpsb
scas
mov
mov
out
cld
xor
outsb
jl
es
out
cld
adc
outsb
jl
and
out
cld
in
movsl
scas
mov
push
and
out
cld
shlb
jl
and
out
cld
pushf
movsl
scas
mov
or
out
cld
jo
scas
mov
fsubl
out
cld
dec
movsl
scas
mov
mov
in
cld
and
scas
mov
xchg
and
out
cld
add
jl
and
cmp
in
cld
aam
scas
mov
inc
and
cmp
in
cld
mov
scas
mov
and
cmp
in
cld
mov
jl
and
cmp
in
cld
insb
movsb
scas
mov
fsubs
cmp
in
cld
dec
movsb
scas
mov
mov
in
cld
sub
jl
and
cmp
in
cld
or
outsb
jl
and
cmp
jecxz
cld
in
mov
outsb
jl
and
cmp
jecxz
cld
shlb
jl
and
cmp
jecxz
cld
xchg
mov
outsb
jl
and
cmp
jecxz
cld
insb
mov
outsb
jl
and
cmp
jecxz
cld
inc
mov
outsb
jl
and
cmp
jecxz
cld
and
scas
mov
xchg
and
cmp
jecxz
cld
add
scas
mov
insb
and
cmp
loop
cld
loopne
scas
mov
push
and
cmp
loop
cld
mov
bound
sub
cs
loop
cld
xchg
mov
outsb
jl
and
cmp
loop
cld
jo
scas
mov
loopne
cs
loop
cld
dec
mov
outsb
jl
and
cmp
loop
cld
and
outsb
jl
and
cmp
loope
cld
cld
mov
outsb
jl
and
cmp
loope
cld
fsubl
outsb
jl
and
cmp
loope
cld
mov
popa
outsb
jl
and
cmp
loope
cld
pushf
mov
outsb
jl
and
cmp
loope
cld
jl
scas
mov
in
and
cmp
loope
cld
pop
mov
outsb
jl
and
cmp
loope
cld
sub
scas
mov
cwtl
and
cmp
loope
cld
add
scas
mov
jo
cs
loopne
cld
loopne
scas
mov
push
and
cmp
loopne
cld
mov
pusha
outsb
jl
and
cmp
loopne
cld
xchg
mov
outsb
jl
and
cmp
loopne
cld
je
scas
mov
in
cs
loopne
cld
push
mov
outsb
jl
and
cmp
loopne
cld
xor
outsb
jl
and
cmp
loopne
cld
adc
scas
mov
sbbb
cmp
fucomip
cld
in
lahf
scas
mov
pop
pop
cs
fucomip
cld
int3
lahf
scas
mov
cmp
cs
fucomip
cld
test
scas
mov
adc
cs
fucomip
cld
test
outsb
jl
pop
cs
fucomip
cld
fs
scas
mov
aam
cs
fucomip
cld
inc
lahf
scas
mov
mov
cs
fucomip
cld
and
scas
mov
mov
cs
fsubrp
cld
cld
sahf
scas
mov
push
fsubrp
cld
fcomps
outsb
jl
push
cs
fsubrp
cld
mov
scas
mov
sbb
cs
fsubrp
cld
mov
outsb
jl
push
cs
fsubrp
cld
insb
sahf
scas
mov
fcompl
cs
fsubrp
cld
dec
sahf
scas
mov
mov
fsubrp
cld
and
outsb
jl
sbb
out
cld
hlt
popf
scas
mov
fs
out
cld
aam
scas
mov
cmp
cs
fucomp
cld
test
scas
mov
sbb
out
cld
test
outsb
jl
sbb
out
cld
pop
popf
scas
mov
les
out
cld
xor
outsb
jl
sbb
out
cld
or
jl
sbb
cmp
fsubr
cld
loopne
scas
mov
push
sbb
cmp
fsubr
cld
rcrb
sub
cs
fsubr
cld
cwtl
pushf
scas
mov
add
cs
fsubr
cld
jo
scas
mov
fcompl
cmp
fsubr
cld
dec
pushf
scas
mov
mov
fsubr
cld
sub
jl
sbb
cmp
fucomi
cld
cld
fwait
scas
mov
push
fucomi
cld
fcomps
outsb
jl
sbb
cmp
fucomi
cld
mov
scas
mov
and
cs
fucomi
cld
nop
fwait
scas
mov
cld
sbb
cmp
fucomi
cld
fs
scas
mov
aam
cs
fucomi
cld
inc
fwait
scas
mov
lods
sbb
cmp
fucomi
cld
sbb
outsb
jl
sbb
cmp
cld
lock
pop
sbb
cmp
cld
int3
lcall
cmp
cs
cld
test
scas
mov
sbb
cs
cld
mov
outsb
jl
sbb
cmp
cld
pusha
lcall
rcrb
cs
cld
inc
lcall
mov
cs
cld
and
outsb
jl
sbb
cmp
cld
add
scas
mov
insb
sbb
cmp
fldz
cld
fcomps
outsb
jl
sbb
cmp
fldz
cld
mov
pop
outsb
jl
sbb
cmp
fldz
cld
pushf
cltd
scas
mov
add
cs
fldz
cld
je
scas
mov
in
cs
fldz
cld
push
cltd
scas
mov
rcrb
cmp
fldz
cld
sub
scas
mov
pushf
sbb
cmp
fldz
cld
add
scas
mov
jo
cs
fsubr
cld
fcompl
outsb
jl
sbb
cmp
fsubr
cld
lods
cwtl
scas
mov
sbb
cs
fsubr
cld
sbbb
jl
sbb
cmp
fsubr
cld
pop
cwtl
scas
mov
les
cs
fsubr
cld
xor
scas
mov
pushf
sbb
cmp
fsubr
cld
or
scas
mov
jl
cs
xlat
out
cld
in
xchg
scas
mov
pop
pop
cs
xlat
out
cld
enter
jl
outsb
jl
pop
cs
xlat
out
cld
mov
push
outsb
jl
pop
cs
xlat
out
cld
adcb
jl
pop
cs
xlat
out
cld
pusha
xchg
scas
mov
int3
pop
cs
xlat
out
cld
cmp
scas
mov
lods
pop
cs
xlat
out
cld
sbb
scas
mov
mov
cs
out
cld
cld
xchg
scas
mov
push
out
cld
int3
xchg
scas
mov
cmp
cs
out
cld
lods
xchg
scas
mov
sbb
cs
out
cld
mov
outsb
jl
push
cs
out
cld
push
push
outsb
jl
push
cs
out
cld
cmp
scas
mov
test
cs
out
cld
sbb
outsb
jl
adc
out
cld
hlt
xchg
scas
mov
fs
out
cld
aam
scas
mov
inc
adc
out
cld
mov
scas
mov
and
out
cld
xchg
xchg
scas
mov
or
out
cld
jo
scas
mov
in
cs
aad
cld
push
xchg
scas
mov
rclb
cld
xor
outsb
jl
adc
out
cld
or
jl
adc
cmp
aam
cld
call
push
outsb
jl
adc
cmp
aam
cld
mov
push
outsb
jl
adc
cmp
aam
cld
xchg
xchg
scas
mov
add
cmp
aam
cld
insb
xchg
scas
mov
aam
cs
aam
cld
inc
xchg
scas
mov
lods
adc
cmp
aam
cld
sbb
scas
mov
mov
cmp
shr
cld
cld
xchg
scas
mov
jo
cs
shr
cld
fcoml
outsb
jl
adc
cmp
shr
cld
mov
push
outsb
jl
adc
cmp
shr
cld
cwtl
xchg
scas
mov
add
cs
shr
cld
jo
scas
mov
fcoms
cs
shr
cld
dec
xchg
scas
mov
mov
shr
cld
sub
outsb
jl
adc
cmp
shr
cld
add
outsb
jl
adc
cmp
shr
cld
fcoml
outsb
jl
adc
cmp
shr
cld
mov
push
outsb
jl
adc
cmp
shr
cld
cwtl
xchg
scas
mov
or
cs
shr
cld
jo
scas
mov
loopne
cs
shr
cld
push
xchg
scas
mov
mov
shr
cld
sub
outsb
jl
adc
cmp
shr
cld
or
outsb
jl
adc
cmp
shr
cld
fcoms
outsb
jl
adc
cmp
shr
cld
mov
scas
mov
sbb
cs
shr
cld
mov
outsb
jl
adc
cmp
shr
cld
pop
xchg
scas
mov
les
cs
shr
cld
sub
scas
mov
cwtl
adc
cmp
shr
cld
or
outsb
jl
adc
cmp
shr
cld
in
scas
mov
push
adc
cmp
shr
cld
les
outsb
jl
adc
cmp
shr
cld
pushf
nop
scas
mov
or
cs
shr
cld
jl
scas
mov
call
shr
cld
pop
nop
scas
mov
les
cs
shr
cld
xor
scas
mov
mov
shr
cld
or
outsb
jl
ucomiss
iret
out
cld
in
scas
mov
push
ucomiss
iret
out
cld
les
outsb
jl
ucomiss
iret
out
cld
pushf
scas
mov
or
cs
iret
out
cld
jl
scas
mov
in
ucomiss
iret
out
cld
pop
scas
mov
enter
jl
out
cld
xor
scas
mov
movsb
ucomiss
iret
out
cld
adc
outsb
jl
push
cs
into
out
cld
in
mov
jl
push
cs
into
out
cld
int3
mov
jl
push
cs
into
out
cld
movsb
mov
jl
push
cs
into
out
cld
jl
scas
mov
in
push
cs
into
out
cld
pop
mov
jl
push
cs
into
out
cld
xor
outsb
jl
push
cs
into
out
cld
add
outsb
jl
or
out
cld
fmuls
outsb
jl
or
out
cld
test
scas
mov
adc
cs
int
cld
test
outsb
jl
or
out
cld
pusha
lea
jl
or
out
cld
inc
lea
jl
or
out
cld
sbb
outsb
jl
or
cmp
int3
out
cld
clc
mov
jl
or
cmp
int3
out
cld
aam
scas
mov
cmp
cs
int3
out
cld
lods
mov
jl
or
cmp
int3
out
cld
mov
jl
or
cmp
int3
out
cld
mov
jl
or
cmp
int3
out
cld
inc
mov
jl
or
cmp
int3
out
cld
and
scas
mov
xchg
or
cmp
int3
out
cld
add
scas
mov
je
cs
lret
out
cld
call
dec
outsb
jl
or
cmp
lret
out
cld
les
outsb
jl
or
cmp
lret
out
cld
movsb
mov
jl
aad
stos
ret
pop
gs
insb
mov
dec
in
cmp
xchg
push
push
fsubrl
adc
cmp
mov
pusha
insl
inc
insb
mov
cmc
lret
cmpsb
adcl
mov
add
pop
test
sbb
cld
cmp
xor
dec
movsb
lods
mov
mov
mov
sbb
cld
gs
fstpt
pop
in
cmp
andl
mov
sti
lret
movsl
adcl
mov
mov
and
fsubrl
std
sahf
fcomip
rcll
movsl
jge
addr16
insb
mov
cli
shr
movsl
jge
imul
mov
add
mov
fs
push
fistpll
mov
ret
sbbl
mov
lcall
mov
dec
insb
mov
loop
pop
test
dec
insb
mov
mov
mov
fsubrl
add
push
cmp
test
pop
js
insb
mov
sti
lret
mov
push
int
inc
add
test
mov
popa
insl
dec
insb
mov
cmc
lret
mov
inc
fsubs
xor
lds
dec
sbb
cld
arpl
and
or
mov
bound
sub
or
stos
mov
inc
shrl
xor
sub
jecxz
push
mov
jno
fnstcw
pop
in
cmp
test
mov
add
lods
cld
arpl
cmp
sub
jecxz
push
mov
sbb
cld
arpl
inc
or
mov
mov
xor
sub
jecxz
pop
lahf
mov
inc
fisubs
xor
lahf
loope
pop
in
cmp
sbbl
mov
inc
pusha
cmp
sbbl
mov
icebp
iret
in
cmp
sbbl
and
sub
jecxz
push
scas
mov
fsubrl
add
mov
subb
std
mov
cmp
adcl
jl
rcll
jge
jo
fsubrl
std
mov
cmp
jge
insl
addl
jmp
iret
push
popf
dec
sbb
cld
arpl
xchg
out
not
in
cmp
jge
fs
iret
daa
xor
xchg
ljmp
sbb
dec
into
and
add
loop
pop
xchg
ret
andl
std
cmp
xchg
ljmp
sbb
dec
insb
mov
icebp
lret
mov
cmp
sub
loop
pop
mov
or
insb
mov
icebp
into
push
cmp
jge
jo
fsubrl
std
fucomip
pop
in
cmp
xchg
and
dec
insb
mov
cli
pop
in
cmp
mov
pop
jp
cltd
or
cmp
mov
pop
jp
insb
mov
icebp
enter
mov
popa
jle
shll
loope
pop
test
pusha
push
int
sub
pop
in
cmp
xchg
adc
dec
insb
mov
clc
shr
mov
fsubrl
adc
cmp
xchg
pop
pop
jp
insb
mov
icebp
pop
in
cmp
xchg
packuswb
insb
mov
add
pop
mov
sbb
cld
pusha
dec
fldt
xor
pop
in
cmp
adc
mov
lcall
mov
fsubrl
push
fwait
in
lret
mov
cmp
sub
loopne
push
mov
mov
xor
sub
loopne
dec
mov
or
insb
mov
mov
mov
dec
insb
mov
test
push
outsb
jno
aad
and
pushf
icebp
clc
lret
pop
cmp
mov
imul
cltd
loop
into
push
cmp
mov
imul
cwtl
call
mov
dec
loopne
inc
or
jl
lret
push
popf
mov
fsubrl
add
pop
cmp
test
push
and
gs
test
imul
mov
inc
pop
cmp
test
mov
in
rcrl
dec
sbb
cld
pusha
inc
shrl
xor
lahf
jl
les
lods
mov
outsl
cmpl
jl
les
dec
sbb
cld
pusha
inc
fisubrs
sub
pop
in
cmp
sbbl
mov
icebp
into
in
cmp
sbbl
mov
add
in
cmp
jg
popa
jle
fsubrl
xor
mov
lods
cld
pusha
cmp
lahf
jl
mov
lods
cld
pusha
cmp
mov
cmp
jge
pusha
js
fidivrs
mov
sbb
inc
fldt
int3
pushf
sub
loopne
push
cmp
jge
orl
ljmp
adc
dec
shrl
int3
pushf
sub
push
mov
or
insb
mov
in
leave
in
cmp
xchg
sbb
pop
push
fldcw
xor
sub
pop
test
xchg
or
mov
cli
ret
push
scas
dec
sbb
cld
pop
push
fisubs
xor
rcrb
sarl
pop
push
ficomps
pop
mov
sbb
cld
pop
push
fldt
xor
sub
pop
stos
mov
adc
pop
push
fldt
inc
add
cmp
nop
sbb
push
shrl
cmp
lahf
mov
sbb
fsubrl
adc
cmp
nop
adc
sub
pushf
sub
push
mov
or
insb
mov
in
into
pusha
imul
adc
mov
xchg
sub
std
lcall
nop
adc
inc
fidivrs
lret
lahf
nop
or
and
push
sub
dec
mov
lods
cld
pop
push
int
aas
add
pop
mov
sbb
cld
pop
push
int
xor
test
pop
push
int
inc
add
popf
mov
fsubrl
or
ljmp
adc
and
push
mov
insl
dec
loopne
ds
sub
push
lahf
mov
lods
cld
pop
dec
shrl
add
stos
scas
subl
dec
mov
adcb
pop
or
out
dec
arpl
mov
mov
add
lods
cld
pop
dec
loope
xor
cmpsl
rorl
sub
lret
pop
mov
pop
dec
ficomps
in
pop
in
cmp
mov
imul
sub
pop
mov
pop
dec
fsubrs
cmp
stos
mov
dec
xor
out
lcall
lahf
mov
mov
sti
shr
cmp
mov
jae
fsubrl
or
cmp
xchg
pusha
insl
fsubrl
pop
xchg
out
aad
cmp
xchg
mov
lcall
lahf
test
gs
aad
pop
add
dec
mov
test
xor
mov
cmp
test
jb
dec
fstps
ffreep
push
stos
lods
sbb
cld
pop
inc
shll
ffreep
push
popf
mov
inc
shrl
inc
or
ffreep
push
test
pop
inc
aad
sub
les
dec
sbb
cld
pop
inc
shrl
aaa
or
ffreep
push
lods
mov
fsubrl
add
in
cld
mov
lods
cld
pop
inc
shrl
add
cmp
test
pop
orb
pop
add
fisttpll
or
sub
pushf
sub
ffreep
dec
mov
mov
cld
pop
inc
int
int3
pushf
sub
ffreep
dec
stos
mov
inc
int
aaa
or
cmp
test
mov
test
and
mov
sti
lret
lahf
andl
and
pushf
sub
ffreep
pop
stos
mov
and
pop
inc
fidivrl
ret
push
cmp
adcl
mov
clc
pop
in
cmp
adcl
mov
sti
lret
lahf
jg
pusha
jo
fidivrs
enter
jg
jae
aas
xlat
cs
mov
lods
cld
pop
aas
aam
inc
or
cmp
jg
jno
push
sarl
mov
adc
jg
into
and
add
cmp
jg
imul
xchg
in
enter
sbb
cld
pop
aas
aam
xor
in
cmp
jg
gs
dec
fstpt
lret
dec
sbb
cld
pop
aas
aam
or
cmp
jg
pop
jle
insb
mov
in
lret
lahf
jg
outsb
jl
fisubl
fistpll
lods
cld
pop
cmp
cwtl
jl
mov
and
aad
xor
mov
sbb
cld
pop
cmp
sub
fistpll
lods
cld
pop
cmp
xchg
jl
mov
lods
cld
pop
cmp
sub
fistpll
lods
cld
pop
cmp
cmpsb
test
mov
cmp
sub
fistpll
lods
cld
pop
cmp
sub
fistpll
lods
cld
pop
cmp
sub
fistpll
sbb
fsubrl
adc
pop
movsb
dec
sbb
cld
pop
push
shrl
das
add
out
mov
sahf
xchg
adc
dec
int
int3
pushf
sub
dec
stos
dec
sbb
cld
pop
push
insb
mov
clc
pop
in
cmp
mov
cld
pop
dec
fisubl
cmp
mov
pop
dec
shrl
cmp
sahf
jl
lret
dec
movsb
lods
sbb
cld
pop
dec
into
and
mov
sahf
test
popa
jle
insb
mov
mov
sahf
test
popa
jno
insb
mov
sti
iret
in
cmp
test
push
push
add
pop
mov
pop
inc
rcrl
faddp
pop
stos
mov
lods
cld
pop
inc
fsubl
inc
adc
movsl
scas
xchg
aaa
pushf
sub
faddp
push
stos
mov
push
fisubrl
xor
leave
in
cmp
adcl
das
inc
pushf
sub
faddp
push
mov
test
cs
pushf
sub
fidivrs
and
pop
cmp
sub
fidivrs
lods
cld
pop
cmp
sub
fidivrs
lods
cld
pop
cmp
pushf
mov
adc
inc
insb
mov
cmc
lret
sahf
jge
popa
or
insb
mov
cmc
lret
popf
xchg
or
mov
hlt
lret
pop
cmp
xchg
adc
insb
mov
cmc
mov
sbb
dec
stc
out
mov
cmp
mov
gs
loopne
int3
pushf
sub
fmul
push
mov
sbb
cld
pop
dec
aad
das
add
out
lock
in
cmp
mov
jb
dec
loopne
sbb
xchg
icebp
out
rcrl
mov
outsl
jl
fidivrs
iret
in
cmp
mov
push
sbb
cltd
fisttpll
sbb
inc
fistpll
aad
cmp
mov
pop
ja
insb
mov
cmc
rcrl
mov
mov
out
mov
lods
cld
pop
dec
iret
sub
add
cmp
mov
aas
pushf
sub
fmul
dec
scas
mov
and
pop
dec
int
inc
pushf
sub
fmul
dec
stos
scas
mov
cld
pop
inc
fisubrl
inc
pushf
sub
fadd
pop
sahf
mov
sbb
pop
inc
aad
inc
add
mov
nop
lods
cld
pop
inc
loopne
xor
pop
in
cmp
andl
sub
or
fadd
pusha
mov
pop
inc
fisubrs
xor
pop
in
cmp
sbbl
mov
in
pop
in
cmp
sbbl
mov
in
in
cmp
sbbl
mov
cmc
into
dec
cmp
sbbl
mov
hlt
rcrl
adcl
sub
pushf
sub
fadd
dec
scas
mov
fsubrl
add
cmp
jge
push
inc
fidivrs
iret
push
movsl
dec
sbb
cld
pop
cmp
sub
fdivrl
adc
xor
cwtl
jmp
pop
in
cmp
jge
outsb
jne
xlat
mov
repnz
mov
lods
cld
pop
cmp
in
pop
in
cmp
jge
jo
inc
shlb
xor
scas
mov
lods
cld
pop
cmp
xchg
in
lret
pushf
jge
push
int3
pushf
sub
fdivrl
sbb
fsubrl
std
lcall
sbb
cld
pop
cmp
sahf
jmp
pop
in
cmp
jge
imul
sub
fdivrl
or
and
sub
fdivrl
sbb
fsubrl
std
xchg
ljmp
adc
inc
int
cmp
xchg
loopne
pop
in
cmp
xchg
adc
mov
cmc
rorb
nop
and
fsubrl
adc
stos
mov
lods
cld
pop
dec
loopne
cmp
lahf
out
pop
in
cmp
sbb
jp
insb
mov
mov
fwait
mov
gs
sarb
pop
in
cmp
mov
push
sbb
cltd
loope
into
dec
cmp
mov
mov
clc
enter
sbb
cld
pop
dec
fbstp
xor
lahf
out
pop
in
cmp
mov
imul
mov
cli
pop
in
cmp
mov
bound
sarb
mov
lods
cld
pop
inc
int
sub
mov
adc
pop
push
out
cmp
test
pop
inc
loopne
cs
in
pop
in
cmp
test
popa
jp
fldt
int3
pushf
sub
fcmovb
dec
cmpsl
mov
fsubrl
add
pop
stos
mov
inc
insb
mov
fcmovb
arpl
pop
inc
jecxz
xor
nop
jl
shll
mov
xor
rcrl
sbb
cld
pop
inc
fsubrs
cmp
sub
fidivrl
adc
pop
cmp
movsb
jl
mov
adc
pop
cmp
sub
fidivrl
and
dec
insb
mov
icebp
lret
in
cmp
xchg
pop
outsl
insl
aas
aam
cmp
mov
pop
push
fsubrs
cmp
pop
cmpsl
mov
sbb
pop
push
shrl
sub
rcll
mov
push
rcrb
fxch
pusha
stos
mov
dec
fbstp
sub
pop
in
cmp
mov
push
sbb
lahf
in
into
in
cmp
mov
jo
dec
shrl
int3
pushf
sub
fxch
pop
scas
mov
dec
fisubrs
xor
pop
in
cmp
mov
popa
orb
sbb
sahf
cltd
mov
outsb
jno
sar
xor
sub
fxch
pop
mov
mov
mov
add
in
cmp
mov
and
fxch
push
scas
dec
sbb
cld
pop
dec
shrl
cmp
sahf
jl
lret
push
mov
jnp
insb
mov
sti
ret
cltd
test
jo
dec
insb
mov
sti
int3
pop
mov
mov
cld
push
dec
fidivl
sub
pop
in
cmp
test
outsl
inc
aad
cmp
fwait
jl
lds
dec
sbb
cld
pop
inc
fisubl
pushf
sub
fld
pop
test
sbb
cld
pop
inc
shll
push
sub
fld
push
mov
pop
inc
iret
and
or
cmp
andl
mov
sti
int3
pop
test
lods
cld
pop
inc
loopne
cmp
lea
pop
mov
sbb
cld
pop
inc
fisubrs
xor
xchg
jl
rcrl
mov
pusha
or
insb
mov
in
lret
cltd
sbbl
daa
xor
rcrl
sbbl
and
add
cltd
orl
and
or
mov
nop
and
and
mov
sbb
pop
aas
fcomps
fnstcw
or
sub
lahf
in
pop
in
cmp
jg
push
sbb
xchg
jmp
rcrb
xchg
xor
sub
fnstcw
adc
fsubrl
call
cmp
jg
imul
sub
fnstcw
push
push
fsubrl
decl
cmp
jg
pop
jb
shrl
inc
pushf
sub
fnstcw
adc
pop
cmp
mov
cmp
jge
jbe
dec
aad
sbb
movsl
jl
mov
lods
cld
pop
cmp
lcall
xchg
mov
mov
lods
cld
pop
cmp
lea
pop
scas
dec
sbb
cld
pop
cmp
lcall
jge
jo
dec
insb
mov
sti
mov
lods
cld
pop
cmp
xchg
testb
insl
addl
jecxz
shlb
dec
sbb
cld
pop
cmp
xchg
lock
cltd
jge
pop
orl
fcomip
mov
lods
cld
pop
cmp
sub
fnstcw
or
mov
in
lret
mov
cmp
sub
fnstcw
pop
cld
pop
cmp
sub
fnstcw
lods
cld
pop
cmp
lahf
lock
pop
in
cmp
jge
outsl
insl
dec
fstpt
mov
mov
fsubrl
std
xchg
loope
pop
in
cmp
jge
imul
mov
cmc
lret
in
cmp
jge
gs
fidivrl
pop
in
cmp
jge
dec
jne
fcomps
fnstcw
sbb
fsubrl
std
in
shlb
mov
lods
cld
pop
cmp
xchg
loope
lret
cltd
jge
pusha
jnp
int
xor
lahf
mov
fsubrl
std
sub
fcom
popfw
mov
push
cld
pop
push
loopne
sub
pop
in
cmp
xchg
pop
outsl
jne
fidivrs
pop
in
cmp
xchg
sbb
push
int
sbb
xchg
fcomip
shr
cwtl
xchg
pcmpeqd
jecxz
sbb
in
lret
cwtl
xchg
minps
insb
mov
cli
pop
in
cmp
mov
pop
or
insb
mov
cli
iret
pusha
mov
pop
dec
loop
cmp
lcall
sbb
cld
pop
dec
fisubl
inc
or
cmp
mov
pop
addb
xor
lds
mov
inc
loop
cmp
xchg
jl
lds
dec
sbb
cld
pop
inc
loop
or
cmp
test
jb
inc
insb
mov
clc
shr
cwtl
test
jnp
shrl
int3
pushf
sub
fadd
pop
lods
mov
fsubrl
add
in
cmp
test
popa
je
fidivrl
pop
in
cmp
test
pusha
jno
insb
mov
in
pop
in
cmp
test
pop
jle
fistpll
lds
rolb
mov
add
cwtl
test
imul
nop
lret
in
cmp
test
mov
cmc
pop
in
cmp
sbbl
mov
out
enter
sbb
cld
pop
inc
ficompl
fadd
push
mov
sbb
cld
pop
inc
iret
sub
push
in
mov
cwtl
orl
mov
pop
in
cmp
jge
push
sbb
lahf
in
shll
jge
popa
jle
int
sbb
lcall
jge
jo
inc
fisubs
fdivrs
lods
cld
pop
cmp
sub
fdivrs
or
mov
repz
in
cmp
jge
push
sbb
mov
cli
dec
cmp
jge
cld
push
push
jecxz
cs
sahf
fisttpll
pop
imul
cltd
pop
in
cmp
xchg
adc
dec
aad
pop
push
movsl
out
cmc
mov
sbb
inc
fidivrs
pop
in
cmp
mov
mov
clc
lret
in
cmp
mov
mov
test
and
dec
insb
mov
add
sbb
cld
push
dec
fldt
int3
pushf
sub
xlat
lret
pop
scas
lods
subb
push
xchg
out
mov
xchg
mov
imul
xchg
repnz
dec
cmpsl
mov
lods
cld
push
dec
aam
int3
pushf
sub
xlat
lret
dec
movsb
dec
sbb
cld
push
dec
into
cs
lret
mov
lods
cld
push
dec
aad
inc
pushf
sub
xlat
enter
sbbl
mov
repz
in
cmp
mov
imul
jl
enter
adcb
jo
fidivrs
mov
adc
dec
shrl
int3
pushf
sub
xlat
lds
mov
fsubrl
add
pusha
cmp
test
jno
into
and
add
cmp
test
outsl
js
in
pop
add
pop
cmp
test
jno
cmp
cltd
jmp
xchg
test
imul
fwait
ljmp
and
fsubrl
add
cmp
sbbl
mov
clc
shll
sbbl
mov
icebp
aad
cmp
sbbl
mov
hlt
pop
in
cmp
adcl
mov
in
lret
xchg
adcl
sbb
xlat
mov
lods
cld
push
cmp
xchg
out
mov
xchg
jge
insb
jnp
out
aas
pushf
sub
xlat
mov
lods
cld
push
cmp
sub
xlat
mov
lods
cld
push
cmp
mov
cmp
jge
gs
insb
mov
repz
dec
sbb
cld
push
cmp
xchg
in
mov
adc
cmp
mov
sti
enter
sbb
cld
push
cmp
xchg
jl
rcrl
mov
push
fsubs
rorl
mov
dec
fisubs
xor
lahf
loope
pop
in
cmp
mov
push
push
or
xchg
mov
cmp
popf
mov
dec
fidivrl
shr
cmp
sbbl
and
pushf
sub
rcrl
mov
cld
push
inc
fsubrs
xor
rcll
mov
cld
push
cmp
sahf
out
icebp
enter
jge
push
inc
aad
int3
pushf
sub
mov
adc
mov
clc
pop
in
cmp
jge
push
fsubrl
std
xchg
jmp
pop
in
cmp
jge
arpl
insb
mov
dec
in
cmp
jge
addr16
fidivrl
pop
cmp
xchg
adc
fsubrl
setg
dec
dec
stos
dec
sbb
cld
push
dec
into
and
aad
dec
movsl
mov
and
mov
out
pop
in
cmp
mov
gs
insb
mov
add
dec
cmp
orl
int3
pushf
sub
aad
push
movsl
mov
and
fsubrl
std
popf
icebp
cmc
lret
dec
sbb
cld
push
push
shlb
int3
pushf
sub
aam
pusha
lahf
mov
sbb
fsubrl
adc
scas
mov
lods
cld
push
push
fsubrl
pushf
sub
aam
pop
mov
mov
jo
dec
insb
mov
icebp
into
push
stos
mov
push
aad
xor
fwait
in
icebp
into
in
cmp
xchg
adc
fsubrl
or
popf
mov
dec
loopne
cmp
sub
aam
pop
mov
adcl
push
dec
fbld
lret
pop
scas
mov
dec
fsubl
xor
lret
pop
cmpsl
mov
lods
cld
push
dec
fdivs
cmp
lcall
xchg
lods
cld
push
dec
fdivs
xor
sub
aam
pop
stos
mov
sbb
push
dec
fsubrs
xor
sub
aam
push
stos
mov
lods
cld
push
dec
xlat
sbb
mov
xchg
mov
bound
fidivrl
into
in
cmp
mov
addr16
insb
mov
repz
in
cmp
test
pop
je
fistpl
aaa
pushf
sub
aam
pop
scas
rcrb
push
inc
fisubl
int3
pushf
sub
aam
pop
test
jle
insb
mov
out
in
cmp
andl
mov
icebp
into
in
cmp
sbbl
mov
in
lret
sbb
cld
push
inc
fisubrl
xor
pop
in
cmp
sbbl
mov
hlt
lds
dec
sbb
cld
push
inc
fsubrs
add
pop
test
test
outsl
or
insb
mov
stc
mov
adc
mov
mov
xchg
adcl
das
int3
pushf
sub
aam
data16
xchg
sbb
fsubrl
std
movsl
ljmp
and
mov
icebp
iret
in
cmp
jge
gs
dec
int
int3
pushf
sub
aam
pop
mov
mov
cld
push
cmp
mov
cmp
jge
jo
cmp
sub
aam
pop
mov
jge
cld
push
cmp
ljmp
push
push
adc
sahf
jecxz
mov
lods
cld
push
cmp
xchg
jl
mov
sbb
push
cmp
sub
aam
pop
test
jg
insb
mov
pop
in
cmp
jge
pop
insl
dec
out
cmp
ljmp
sbb
loopne
adc
cwtl
call
mov
cmp
lahf
jl
mov
lods
cld
push
cmp
repz
xchg
jge
addr16
fidivrl
pop
in
cmp
jge
cld
push
push
fstpt
pop
in
cmp
xchg
adc
inc
int
inc
pushf
sub
ror
popa
lods
mov
dec
loope
xor
sub
ror
popa
test
or
insb
mov
sti
enter
mov
xor
in
cmp
mov
popa
jp
shrl
xor
mov
jae
insb
mov
icebp
enter
mov
jbe
fsubrl
or
cmp
mov
pusha
jno
fisubrs
int3
pushf
sub
ror
pop
mov
push
dec
ficompl
sub
pop
in
cmp
mov
pusha
jb
ficomps
int3
pushf
sub
ror
push
stos
mov
sbb
push
dec
shll
xor
popf
mov
inc
fbstp
int3
pushf
sub
rol
pop
test
sbb
jno
insb
mov
mov
xchg
test
gs
insb
mov
icebp
into
pusha
cmp
test
outsl
jnp
insb
mov
icebp
lret
xchg
test
outsb
insl
inc
insb
mov
icebp
shlb
xchg
sbbl
mov
icebp
into
pop
movsl
mov
inc
fsubrs
xor
sub
sarl
or
sub
mov
sbb
fsubrl
std
cltd
fdivp
lret
xchg
jge
jae
push
insb
mov
sti
shlb
dec
sbb
cld
push
cmp
mov
cmp
jge
outsb
jne
fsubrs
xor
rcrl
mov
push
fidivs
xor
sub
rcl
pop
test
mov
xor
pop
in
cmp
mov
mov
icebp
into
push
mov
push
dec
xor
into
push
scas
mov
sbb
push
dec
aad
xor
ljmp
adc
mov
cli
rcrb
test
xor
mov
sbbl
and
ror
dec
stos
sbb
cld
push
dec
int
aaa
or
stos
mov
lods
cld
push
dec
int
das
add
in
cmp
mov
outsl
jne
insb
mov
icebp
aad
cmp
mov
jo
inc
fidivrs
iret
in
cmp
mov
popa
jg
shrl
int3
pushf
sub
ror
pop
cmpsl
mov
dec
fldt
xor
sub
ror
push
mov
push
inc
loopne
cmp
mov
cmp
test
addr16
insb
mov
cmc
lret
xchg
test
push
inc
int
int3
pushf
sub
rol
pop
cmpsl
mov
pop
jo
inc
fidivrl
pop
in
cmp
test
push
adc
in
cmp
andl
mov
cmc
rcrl
sbb
cld
push
inc
fisubrs
sub
pop
in
cmp
sbbl
and
pushf
sub
rol
pop
stos
lods
mov
cld
push
inc
fsubs
cmp
lcall
sbb
cld
push
inc
aad
xor
mov
add
in
cmp
jge
popa
jg
insb
mov
sti
sub
xchg
jge
outsb
jno
insb
mov
cli
shr
xchg
jge
gs
insb
mov
dec
push
cmp
jge
pop
jnp
lods
pop
cmp
mov
cmp
jge
imul
mov
cli
pop
in
cmp
jge
pop
jle
fistpll
shlb
xchg
xchg
push
gs
shlb
aas
pushf
sub
rcl
pusha
mov
push
dec
loopne
aas
pushf
sub
ror
pop
movsl
mov
fsubrl
push
xchg
testb
imul
mov
in
lret
xchg
mov
pop
outsl
inc
insb
mov
cmc
lret
xchg
mov
mov
cli
mov
and
fsubrl
or
cmpsl
dec
sbb
cld
push
dec
fldenv
cmp
fwait
out
repnz
in
cmp
mov
sub
pushf
sub
rol
dec
cmpsl
mov
adc
jle
loopne
adc
mov
cmp
sbbb
jle
insb
mov
add
jg
popa
js
insb
mov
cmc
lret
xchg
jge
pusha
js
in
adc
movsl
loope
pop
in
cmp
xchg
pop
outsl
insl
push
fdivs
int3
pushf
sub
rcl
pop
scas
mov
and
push
push
shlb
xor
sbbl
xchg
or
sub
add
scas
mov
fsubrl
or
cmp
mov
jne
fsubrl
or
cmp
mov
bound
insb
mov
mov
nop
mov
push
dec
insb
mov
icebp
into
in
cmp
mov
pop
je
sarl
shlb
nop
mov
addr16
in
adc
pop
cmp
test
push
dec
aad
aas
pushf
sub
rol
pop
mov
mov
fs
insb
mov
sti
lret
dec
sbb
cld
push
inc
rcrb
rol
push
mov
outsl
inc
insb
mov
lcall
nop
inc
adc
inc
insb
mov
mov
pop
imul
and
pushf
sub
rol
pop
movsl
mov
inc
fisubl
rcrl
mov
cld
push
inc
fnstenv
aas
push
sub
rol
pop
lods
mov
fsubrl
add
cmp
sbbl
sub
rol
pop
mov
push
inc
fsubs
cmp
pop
into
icebp
lret
mov
inc
fcomps
mov
nop
adcl
sub
rcll
sbb
cld
push
inc
into
cmp
xchg
jl
sarl
rorl
mov
ror
dec
test
lods
cld
push
inc
mov
fisttpll
repz
jp
int
cmp
cmpsl
mov
pop
cld
push
cmp
sub
sarb
and
push
cmp
mov
cmp
jge
cld
push
add
cs
std
lcall
jge
outsl
inc
insb
mov
icebp
pop
in
cmp
jge
gs
aad
adc
insl
jmp
nop
jge
jne
fsubrl
std
cwtl
loopne
enter
sbb
cld
jo
mov
jl
aad
mov
dec
push
shll
int3
pushf
sub
iret
shll
mov
lods
cld
dec
push
fisubrs
xor
rcll
mov
je
dec
fidivrl
lret
mov
outsl
je
jecxz
femms
fcomip
rcrl
mov
and
pushf
sub
iret
lret
popa
mov
xchg
and
dec
dec
loope
inc
add
test
or
insb
mov
cmc
iret
push
cmp
mov
popa
test
insb
mov
sti
into
pop
cmp
mov
pusha
jnp
aad
sub
lret
pop
lahf
mov
sbb
dec
dec
fldcw
inc
or
cmp
mov
insb
orb
ud2
cwtl
call
mov
push
ud2
cwtl
loope
enter
mov
pusha
jle
fidivrl
pop
in
cmp
mov
push
invd
fwait
repz
orb
invd
xchg
jmp
ja
insb
mov
out
aad
cmp
mov
mov
inc
pop
test
sbb
cld
dec
inc
iret
and
or
iret
lds
mov
cmp
mov
cmp
test
insb
insl
dec
xlat
sub
pushf
sub
iret
les
popl
sub
add
movsl
mov
fsubrl
add
in
rclb
mov
inc
fisubs
cli
pop
in
cmp
test
gs
shrl
aas
or
stos
mov
inc
aad
xor
mov
adc
mov
lock
push
scas
mov
inc
aad
cmp
popf
mov
fsubrl
add
out
add
pop
scas
mov
lods
cld
dec
inc
shrl
ds
push
popf
mov
inc
int
cmp
lahf
jl
les
mov
inc
fisubs
iret
rcrl
sbbl
mov
clc
enter
jge
pop
jp
shll
pushf
sub
iret
mov
adc
fsubrl
std
lahf
in
in
into
in
cmp
jge
popa
or
insb
mov
cmc
lret
in
cmp
jge
jo
inc
fsubrs
int3
pushf
sub
iret
mov
lods
cld
dec
cmp
sub
iret
mov
adc
jno
insb
mov
add
jge
push
paddw
cmp
jge
pop
test
fwait
icebp
clc
lret
pop
cmp
jge
pop
orb
cmp
fwait
jl
mov
adc
sub
decl
cmp
jge
imul
xor
sub
iret
mov
maxps
insb
mov
rcrb
dec
sbb
cld
dec
cmp
xchg
jl
mov
lods
cld
dec
cmp
cwtl
loope
jge
imul
sub
iret
mov
lods
cld
dec
cmp
sub
into
aad
mov
dec
push
shrl
cmp
dec
mov
sbb
cld
dec
push
fbld
inc
adc
scas
mov
adc
fsubrl
adc
cmp
xchg
push
pusha
xchg
mov
icebp
lret
mov
insb
mov
in
into
push
cmp
xchg
adc
dec
sarl
lret
mov
aad
push
push
fwait
jmp
pop
in
cmp
mov
pop
insl
fsubrl
push
xchg
lock
pop
in
cmp
mov
mov
repz
mov
sbb
into
into
push
mov
mov
cmp
lcall
mov
xor
lahf
mov
lods
cld
dec
dec
int
sub
into
dec
mov
dec
dec
int
sub
shr
mov
insb
mov
mov
mov
sarb
pop
in
cmp
mov
sub
pushf
sub
into
lret
mov
dec
dec
jecxz
cvttps2pi
popa
scas
mov
fsubrl
or
cmp
mov
pusha
jne
insb
mov
inc
in
cmp
mov
fs
fidivrl
pop
in
cmp
mov
pusha
jno
insb
mov
out
in
cmp
mov
outsb
jg
aad
int3
pushf
sub
into
lret
pop
stos
mov
lods
cld
dec
dec
cs
in
cmp
mov
addr16
insb
mov
icebp
leave
pop
stos
dec
sbb
cld
dec
dec
fisubl
mov
mov
insb
mov
pop
in
cmp
mov
imul
mov
cmc
lret
mov
dec
fsubs
into
lret
pop
mov
dec
dec
in
xor
sub
into
enter
jge
cld
dec
dec
cmp
loop
pop
in
cmp
mov
popa
jns
shrl
xor
lcall
sbb
cld
dec
dec
aad
sub
enter
sbb
cld
dec
dec
int
aaa
add
into
enter
mov
outsb
jno
insb
mov
repz
in
cmp
mov
sub
pushf
sub
into
enter
jle
jno
dec
insb
mov
sti
pop
in
cmp
test
popa
jns
insb
mov
into
lds
mov
inc
iret
daa
xor
sub
into
lds
mov
sbb
fsubrl
add
cmp
andl
mov
cmc
dec
mov
or
insb
mov
call
pop
stos
dec
sbb
cld
dec
inc
fisubrs
sub
mov
push
push
dec
shrb
int3
pushf
sub
into
rcrl
dec
mulb
inc
aad
aas
pushf
sub
into
rcrl
mov
cld
dec
inc
fisubl
xor
mov
dec
inc
fsubrs
cmp
sub
into
rcrl
mov
sub
mov
cmp
sbbl
sub
add
into
rcrl
dec
out
imul
cs
pushf
sub
into
rcrl
mov
cmp
lahf
out
sti
ret
mov
shrl
int3
pushf
sub
into
rcll
or
and
push
nop
jl
rcll
sbb
cld
dec
inc
iret
daa
cmp
lcall
sbb
cld
dec
inc
int
int3
pushf
sub
into
rorl
mov
int3
pushf
sub
into
mov
lods
cld
dec
cmp
cwtl
loope
pop
in
cmp
jge
pop
je
fsubs
xor
sub
into
mov
adc
mov
add
lods
cld
dec
cmp
sub
into
mov
sbb
fsubrl
std
sahf
lock
lret
pop
stos
mov
cmp
sub
into
mov
sbb
fsubrl
std
sahf
ljmp
push
push
dec
fldt
int3
pushf
sub
into
mov
and
fsubrl
std
sahf
fdivp
into
push
cmp
jge
pop
jp
jecxz
aaa
std
sub
into
mov
es
ja
insb
mov
idivb
push
pop
outsb
inc
fbld
into
mov
lods
cld
dec
cmp
sub
into
mov
lods
cld
dec
cmp
fwait
out
cmc
pop
in
cmp
jge
popa
jbe
insb
mov
cli
lret
arpl
dec
cmp
sub
into
mov
adc
dec
cmp
fwait
jl
mov
lods
cld
dec
cmp
sub
into
mov
and
insb
mov
in
pop
in
cmp
xchg
sbb
inc
insb
mov
sti
aad
cmp
xchg
adc
mov
rclb
sbb
cld
dec
push
shrl
or
mov
or
insb
mov
call
popa
scas
dec
sbb
cld
dec
push
xlat
and
int
push
mov
sbb
cld
dec
dec
sbb
int
push
scas
rorb
mov
clc
mov
lods
cld
dec
dec
shlb
xor
into
dec
movsl
lods
sbb
cld
dec
dec
loopne
aas
pushf
sub
int
pusha
movsb
mov
dec
fildll
xor
push
movsl
mov
fsubrl
or
cmp
mov
outsb
jno
loope
int3
pushf
sub
int
push
stos
dec
sbb
cld
dec
dec
shlb
cmp
stos
mov
lods
cld
dec
dec
fbld
xor
sub
int
push
mov
dec
dec
int
sub
lret
in
cmp
mov
mov
cli
les
mov
lods
cld
dec
dec
loopne
cmp
xchg
out
repz
mov
pop
addb
sub
enter
test
aas
or
cmpsl
mov
dec
rcrb
int
dec
stos
mov
dec
int
xor
les
mov
inc
fldt
cmp
sub
int
push
sahf
mov
lods
cld
dec
inc
shrl
aas
adc
cmp
adcb
jg
fidivrl
pop
in
cmp
jg
popa
jle
int
int3
pushf
sub
int
push
mov
mov
mov
mov
pushf
pop
lods
cld
xor
mov
or
mov
cld
ds
lahf
mov
mov
popa
lods
cld
inc
adc
mov
lds
adc
dec
insb
mov
dec
xor
cmp
imul
cld
or
insb
mov
mov
push
mov
mov
pushf
ss
push
or
push
add
mov
in
cmp
pusha
stc
inc
pop
add
in
outsl
mov
cmpsl
outsl
icebp
aas
popa
cs
push
mov
pop
movsl
jg
fisubl
dec
mov
cmp
cwtl
loopne
andl
or
and
lret
out
xor
outsb
icebp
pop
inc
cld
mov
out
idivl
lods
mov
outsl
sub
shrl
xor
xchg
loopne
pop
in
cmp
outsl
icebp
aas
popa
cs
push
mov
push
mov
jo
fsubs
inc
add
scas
adc
or
mov
loope
xor
insl
dec
rcr
repz
rclb
nop
adc
fsubrl
out
jno
loope
xor
jne
shll
in
adc
mov
xor
fdivrl
add
out
icebp
mov
cmp
outsl
icebp
aas
popa
cs
push
mov
push
pop
jae
pop
and
shrl
xor
xchg
loopne
pop
in
cmp
outsl
icebp
aas
popa
cs
push
mov
pop
movsl
jg
fisubl
dec
mov
cmp
cwtl
loopne
andl
or
and
lret
out
xor
outsb
icebp
pop
inc
cld
mov
xor
rcrb
mov
and
jle
call
pop
movsl
scas
nop
adc
and
add
or
mov
addr16
mov
and
jno
jl
mov
outsl
push
shll
in
std
fcomip
iret
pop
pop
rorb
add
ffreep
dec
scas
mov
lods
cld
addr16
mov
and
jno
jl
popf
mov
adc
push
fcmovnu
add
mov
jge
pop
jno
inc
or
rorl
inc
int
xor
sub
inc
pop
mov
test
jo
dec
fldt
inc
or
cmp
outsl
icebp
aas
popa
cs
push
mov
push
mov
jnp
shrl
in
loopne
lret
fnstcw
mov
pop
jo
push
mov
xor
xor
outsb
icebp
pop
inc
cld
mov
sbb
dec
loopne
iret
dec
sahf
mov
fsubrl
out
jno
loope
xor
jg
into
sub
mov
or
lods
test
popa
jo
insb
mov
clc
shll
fwait
imul
loope
xor
adcb
aaa
mov
push
scas
insb
jge
pusha
jno
lcall
pop
in
cmp
jg
cld
addr16
mov
and
jno
jl
popf
mov
adc
push
fcmovnu
sub
sbbl
jle
lcall
scas
xor
insl
dec
rcr
repz
mov
addr16
mov
and
jno
jl
popf
mov
adc
push
fcmovnu
cmp
ljmp
push
popa
jg
fisubs
cli
jl
mov
jle
mov
xor
xor
outsb
icebp
pop
inc
cld
shrl
add
mov
or
outsl
aas
shrl
aas
mov
push
mov
xor
mov
stos
mov
cmpsl
outsl
icebp
aas
popa
cs
push
mov
push
mov
orl
in
rorb
jg
loopne
in
adc
jo
jmp
shr
int3
pushf
sub
out
xor
outsb
icebp
pop
inc
cld
mov
sbb
dec
loope
mov
addr16
mov
and
jno
jl
stos
lods
jle
popa
sub
scas
or
mov
push
mov
fsubrl
out
js
shll
int3
push
insl
inc
loopne
cmp
jns
clc
rclb
mov
inc
iret
xor
mov
pop
jbe
pop
shll
or
out
js
shll
int3
inc
insl
inc
fsubs
xor
mov
pop
inc
int
pop
add
call
mov
cld
loopne
add
scas
mov
sbb
jl
scas
cmp
imul
cwtl
loope
jl
stos
insb
andl
in
sete
clc
enter
outsb
clc
dec
push
and
dec
ret
pop
mov
sub
fisubs
sub
les
mov
inc
fcmovu
cmp
pushf
loope
jl
scas
mov
sbb
jl
scas
cmp
imul
cwtl
loope
jl
stos
insb
jg
popa
insl
push
rcr
aas
add
call
mov
and
dec
aad
xor
dec
loope
into
pop
scas
xchg
and
lcall
movsl
cmp
insl
inc
fsubs
xor
mov
sub
aam
cmp
pop
pushf
icebp
into
pop
stos
mov
inc
stos
ljmp
push
pop
jnp
lods
cld
addr16
shr
or
mov
pop
gs
mov
in
enter
mov
pop
jo
shll
jl
scas
mov
sbb
jl
pop
in
cmp
push
xchg
add
aad
mov
repnz
mov
mov
je
jmp
dec
ja
lds
fwait
outsl
pop
test
jg
adc
dec
or
enter
pop
cld
js
mov
add
or
mov
enter
mov
mov
inc
or
mov
outsl
dec
dec
mov
mov
xchg
rcrl
xchg
scas
xchg
pop
in
inc
lock
out
add
ja
fdivl
mov
ja
jnp
xor
cs
push
add
push
fsubrl
add
mov
sub
shll
in
pushf
xchg
jl
jae
cmp
xchg
lods
mov
int3
pushf
xchg
jl
arpl
cmp
sub
jmp
and
mov
cmovs
or
test
push
sbb
xchg
mov
mov
lea
sub
add
push
mov
cld
nopl
sbb
jg
lods
mov
mov
or
add
mov
jnp
loopne
cmp
pop
enter
mov
push
int3
and
jbe
pushf
sub
mov
cmpsl
outsl
cld
inc
push
and
add
lock
mov
inc
mov
cs
or
lahf
pop
pop
and
xlat
push
xor
jl
scas
mov
pop
and
xlat
push
xor
jl
mov
mov
and
pop
mov
add
lods
cld
adcl
xor
fwait
jecxz
rcrl
mov
fsubrl
std
xchg
jmp
mov
jp
sbb
adcl
cmp
dec
stos
mov
push
jecxz
xor
out
cmc
mov
lods
cld
adcl
aas
adc
cmc
mov
sbb
insl
aas
lcall
shll
mov
push
aam
cli
add
cmp
xchg
and
jae
cmp
pop
leave
in
cmp
xchg
and
jno
fbstp
mov
sbb
cld
adcl
sub
mov
rcrb
adcl
cmp
mov
lahf
mov
inc
loopne
cmp
mov
mov
adcl
adc
mov
adcl
das
or
stos
jp
sbb
fsubrl
adc
push
andb
adcl
cmp
out
add
pop
push
mov
cld
adcl
inc
add
stos
mov
push
jecxz
aas
adc
mov
or
insb
mov
add
sbb
adcl
xor
fwait
jecxz
rcrl
rcrb
jo
lcall
mov
lods
cld
adcl
add
mov
adcl
aas
adc
lahf
mov
lods
cld
adcl
std
adc
mov
addb
cmp
xchg
out
mov
ret
xchg
and
adcl
stos
cli
enter
xchg
and
jg
aam
inc
or
cmp
adcb
xor
fdiv
add
cmp
outsl
add
or
dec
xlat
iret
lods
inc
cltd
xchg
inc
inc
adc
or
pop
pushf
out
sub
and
scas
faddl
mov
popa
mov
dec
shll
cli
mov
push
cltd
xchg
outsl
sub
sub
iret
or
mov
aaa
mov
shl
lret
ret
int3
and
xchg
loope
lret
mov
mov
sbb
inc
xchg
ljmp
push
scas
test
or
cli
mov
int3
and
xchg
loope
lds
out
popa
scas
mov
xor
and
stc
pushfw
mov
sbb
or
fdiv
cvtps2pd
jns
sbb
dec
lcall
leave
push
cltd
xchg
outsl
cmp
insb
mov
stc
xchg
pop
scas
dec
sbb
cld
jo
cmpsb
or
jmp
gs
mov
push
in
push
xchg
out
sti
enter
test
outsl
sbb
mov
mov
adc
push
push
sub
xlat
loopne
pop
mov
jg
xchg
loope
lds
out
cmp
lea
fistps
push
mov
inc
test
dec
rcrl
push
mov
in
cmp
dec
in
cld
pop
sbb
call
lcall
sub
jmp
cmp
ja
fs
int
in
call
sbb
out
pop
dec
mov
aas
mov
dec
mov
jp
lcall
iret
or
rorb
fdiv
rcll
lods
adc
xor
or
loope
mov
dec
push
xor
imul
loop
in
rcll
mov
pop
jnp
fisubl
das
adc
jl
nop
mov
dec
loop
ds
out
xor
ss
cmp
dec
ljmp
sbb
or
stos
jp
lods
cld
xor
lock
lods
mov
or
pushf
sub
out
xor
ss
int
cmp
nop
pushf
add
or
mov
int3
outsb
jno
loope
aas
adc
mov
imul
adc
in
dec
out
icebp
into
bound
xor
lock
insb
xchg
adc
and
pushf
sub
mov
push
cmp
add
and
imul
loope
out
sti
into
es
mov
dec
mov
sub
mov
mov
and
inc
shl
in
fcoms
lret
cmp
popa
add
fsubrl
lock
lea
insb
insb
dec
fsubrl
sub
out
add
pop
jbe
mov
paddw
stos
mov
push
mov
cmp
fucomp
les
mov
dec
fisubs
clc
or
mov
jl
int
cmp
pushfw
cli
lret
sbb
sbb
scas
sub
adc
mov
and
ud2
lcall
sbbl
fdiv
add
dec
mov
insl
dec
shll
aas
dec
fiadds
es
addb
icebp
cmovl
mov
dec
loopne
sbb
nop
in
lds
xchg
outsl
sub
adc
orb
dec
add
pop
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
jb
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
mov
and
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
push
mov
mov
test
jne
pop
ret
cmpl
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
andl
push
push
pushl
push
lea
push
push
push
pushl
call
test
je
cmpl
je
movl
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
cmpl
jne
call
incl
ret
push
push
push
push
push
xor
or
push
xor
mov
mov
mov
call
mov
pop
cmp
jne
push
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
push
inc
pop
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmp
je
neg
mov
movsbl
cmp
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
pop
pop
pop
pop
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
push
call
pop
ret
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
pushl
call
pop
jmp
mov
test
jne
pushl
call
pop
jmp
mov
cmp
jne
xor
cmp
ja
pushl
call
mov
pop
test
je
cmp
ja
mov
push
push
push
call
add
test
jne
push
call
mov
pop
test
je
mov
mov
dec
cmp
jb
mov
push
push
push
call
push
call
pushl
mov
push
call
add
test
jne
test
jne
push
pop
add
and
push
push
pushl
call
mov
test
je
mov
mov
dec
cmp
jb
mov
push
push
push
call
pushl
push
call
add
test
jne
test
jne
push
pop
add
and
push
pushl
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
cmp
jne
cmp
ja
test
jbe
add
and
jmp
push
pop
xor
cmp
ja
lea
push
lea
push
pushl
call
mov
add
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
jmp
push
call
mov
pop
test
je
movzbl
shl
cmp
jb
mov
push
pushl
push
call
push
pushl
pushl
call
add
test
jne
push
push
pushl
call
mov
test
je
movzbl
shl
cmp
jb
mov
push
pushl
push
call
push
pushl
pushl
call
add
jmp
push
pushl
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
xor
cmp
ja
test
jne
push
pop
add
and
push
pushl
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
leave
ret
push
mov
cmpl
jne
pushl
pushl
call
pop
pop
pop
ret
mov
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
xor
pop
ret
lea
pop
ret
movzwl
mov
sub
neg
sbb
not
and
pop
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
