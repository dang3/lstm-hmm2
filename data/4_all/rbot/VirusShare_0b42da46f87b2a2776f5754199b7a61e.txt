pop
lock
add
push
add
push
add
push
add
add
add
lock
add
add
lock
add
lock
add
add
addb
add
test
lock
add
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
addb
inc
sub
add
jo
add
addb
cmpsl
and
add
adc
add
add
or
add
add
add
ds
add
faddl
add
add
addl
add
add
addb
add
les
add
add
addb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
fs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
add
add
add
add
add
sahf
outsb
add
add
add
add
add
mov
add
add
add
leave
ret
push
jno
ret
inc
pop
xchg
push
add
movsl
fildl
add
fld
push
add
rol
push
pmaddwd
push
pop
insl
ret
inc
adc
cmc
ret
push
fistl
in
push
and
in
push
add
in
push
and
aad
push
aas
out
add
aas
sbb
add
push
and
sahf
iret
push
add
call
fistl
add
das
in
push
and
mov
push
add
cmc
fistl
in
push
add
std
fistl
push
adc
mov
push
add
in
add
in
in
nop
push
add
and
je
mov
mov
cld
add
jb
add
lock
add
bound
jle
xchg
dec
push
nop
in
shl
adc
add
sti
call
push
les
push
add
and
push
gs
add
les
sub
xchg
add
aas
dec
popa
xor
sahf
dec
fadds
sahf
push
add
adc
icebp
mov
mov
sub
or
jle
lods
clc
fmul
push
sub
push
faddl
pop
int
mov
mov
or
clc
pop
xchg
stos
rcr
pop
shll
mov
push
xchg
pop
inc
xor
push
sub
push
lea
push
add
sti
push
push
jge
cli
inc
or
inc
add
leave
and
add
xor
sti
cmpsl
adc
popa
mov
fldl
shl
push
add
cwtl
and
sub
dec
push
mov
fidivrl
adcb
push
adc
adc
mov
mov
lahf
xor
shrb
mov
xor
or
jnp
push
cmp
add
push
add
pop
inc
or
mov
arpl
push
jb
pop
xchg
or
push
add
pusha
xchg
push
add
lret
ja
add
or
pop
add
cli
lahf
inc
mov
push
fildl
cld
jg
addr16
in
imul
cli
lcall
imul
push
push
mov
adc
imul
cld
lret
clc
dec
mov
mov
sub
out
loop
push
fst
xchg
test
sub
mov
pop
js
xchg
in
and
xchg
adc
aaa
das
dec
sbbl
fnstsw
ds
aam
faddl
push
push
test
sub
rclb
js
loopne
test
pop
inc
imul
and
push
or
mov
mov
cmp
filds
dec
or
push
test
or
sub
insl
adc
mov
push
je
pop
cwtl
sub
jmp
gs
pop
inc
and
push
inc
xor
and
dec
lock
sbb
inc
arpl
in
les
icebp
push
nop
jge
ja
sbb
iret
std
mov
and
or
add
push
lds
mov
dec
lahf
mov
fcmovbe
jl
add
xchg
cmp
fisttpl
adc
aaa
pop
cld
push
ja
push
pop
jbe
sti
lahf
rorb
push
mov
mov
xlat
mov
aad
cld
jne
pop
mov
test
add
fldl
push
jb
or
or
jp
nop
cmp
jb
push
add
ffree
xchg
int
mov
repz
nop
mov
add
or
imul
std
pop
push
in
xor
fcmovb
push
insb
adc
setae
sbb
inc
push
jb
pop
js
push
push
xchg
jae
test
out
pop
ja
xchg
enter
fnstsw
cmpsb
inc
inc
pop
insb
push
mov
fidivrs
push
push
nop
int3
inc
or
jbe
push
xlat
xchg
mov
add
xchg
sub
sti
fcoml
sbb
push
rorb
xchg
fdiv
jne,pn
cwtl
repz
mov
jns
orl
jmp
adc
dec
push
pop
push
pushf
and
arpl
call
outsb
dec
sbb
ss
and
cmp
xchg
sbb
inc
xchg
add
aaa
rcll
cmc
mov
inc
fstps
sub
nop
nop
push
push
nop
add
sbb
fsub
push
add
xchg
sub
xchg
xchg
nop
data16
insl
inc
inc
dec
adc
jb
adc
repnz
ret
cltd
mov
sub
imulb
jmp
call
dec
inc
push
push
out
cld
fnstsw
jle
add
in
jb
xor
mov
push
cwtl
test
or
cwtl
mov
push
cwtl
dec
aaa
pop
xchg
or
cwtl
jns
inc
jg
les
push
inc
jns
in
out
es
cmc
push
and
fucom
call
pusha
sahf
cmp
push
pop
cwtl
pop
and
sti
imul
jnp
lods
xor
pop
add
mov
xchg
in
dec
add
repz
dec
add
adc
or
jge
ja
add
leave
jle
jb
cli
jp
adc
sbb
ja
bound
in
js
rcr
int3
inc
ja
rolb
mov
add
mov
dec
xorb
loop
sub
out
jae
les
push
mov
xor
jne
add
jmp
mov
dec
inc
push
fwait
inc
mov
jbe
and
and
or
popf
add
jno
xor
jns
add
pop
pushf
or
jb
pusha
cld
cmp
cmp
sub
xor
add
dec
sti
jge
es
adc
mov
fcmovne
fsts
sbb
rcrl
push
cmp
lock
rol
lret
push
pop
mov
mov
aaa
jae
jne
jne
popf
rcrb
sbb
inc
push
insb
cmc
fistl
cmp
test
mov
jl
jb
and
or
mov
add
inc
dec
pop
insl
xchg
test
into
mov
push
add
into
lock
fisttpl
mov
out
push
jg
pop
pop
mov
add
push
inc
jno
sub
fbstp
pop
int
les
mov
xchg
xchg
imul
mov
stos
out
pop
jge
cmp
or
push
dec
aas
je
lods
or
pop
cs
xchg
push
rcr
rclb
push
test
out
cs
push
aam
inc
pop
inc
lods
mov
adc
in
or
rcl
xchg
pop
es
mov
mov
lds
xor
push
enter
xchg
inc
sbb
movsb
jbe
add
dec
lret
sub
mov
iret
fstl
cmp
add
addr16
or
jns
ret
rcrl
mov
ret
data16
or
ja
sub
sub
inc
in
dec
mov
lods
out
lock
dec
adc
jb
adc
mov
push
divb
cwtl
cmp
or
fistpll
add
jne
cs
ja
std
add
ret
insb
sub
psubw
or
lea
jno,pt
sbb
or
hlt
and
jl
sbb
dec
lcall
sbb
mov
sbb
iret
sti
or
cmp
test
xor
lahf
cmp
pop
sbb
daa
mov
xor
repnz
sbb
or
into
push
ficomps
mov
jae
movl
shl
scas
pop
push
lahf
hlt
bswap
sahf
aaa
sub
popa
or
xlat
mov
stos
add
lahf
push
ficoms
enter
dec
push
shll
add
or
jg
aaa
inc
js
pop
dec
pop
add
pushf
in
add
or
jns
push
int
mov
jbe
sti
push
test
int
clc
mov
xor
out
dec
es
fwait
insl
lock
in
jp
pop
pop
aaa
mov
sahf
sub
add
dec
cwtl
jge
mov
jp
inc
xchg
and
push
pop
cmpsl
sbb
dec
mov
push
incb
mov
xchg
sbb
mov
xor
add
rcrl
fidivs
shrb
xchg
jmp
xor
out
dec
popa
icebp
push
arpl
push
or
loopne
nop
push
jp
stc
mov
cmp
sbb
add
bound
cli
pmaxsw
jmp
lds
jb
insb
or
leave
xor
repz
iret
inc
jl
ss
in
rclb
stos
fdivp
inc
mov
pop
lret
lods
xor
cmp
adc
sahf
fs
popf
mov
inc
subb
call
ja
xchg
sub
pop
inc
insb
lods
pop
pop
sbb
dec
inc
sub
rorb
sbb
adc
add
stos
insl
or
test
sbb
popf
dec
adc
dec
daa
fs
sub
adc
rcr
into
fisttps
stos
adc
xchg
dec
testl
adc
mov
inc
dec
in
adc
jmp
xchg
pop
mov
cmpsl
mov
gs
xor
inc
jle
add
out
xchg
adc
and
add
sub
cltd
call
repz
cwtl
sbb
xchg
rcrl
xchg
sbb
mov
shrl
cmp
int3
xor
pushf
ret
mov
call
enter
pop
pop
pop
jmp
in
inc
shrb
std
sub
ja
js
add
pop
adc
sahf
in
cwtl
xor
jecxz
push
inc
mov
xlat
out
inc
outsb
popf
push
jbe
sbb
and
mov
fsubrl
jbe
bnd
sbb
fwait
in
jno
stos
testl
xchg
add
sub
dec
or
or
clc
bound
in
jge
loope
gs
jmp
mov
ret
in
inc
push
sbb
ror
xor
xchg
fwait
pop
dec
xchg
ret
aaa
daa
in
jp
pop
push
adc
mov
jl
js,pn
insb
mov
xor
push
push
jno
mov
or
out
mov
lcall
aam
fidivs
dec
sub
pop
mov
push
rclb
adc
jae
inc
pop
jge
jmp
pop
shl
add
cmp
sbb
in
aad
clc
xchg
sbb
enter
sub
adc
dec
fs
cmp
repnz
xor
fldenv
sub
xchg
inc
mov
fdivr
adc
insl
incb
out
out
or
lock
pminsw
adc
xor
ja
mov
push
test
dec
enter
mulb
push
add
js
jbe
inc
sub
and
int3
jno
sub
pusha
repnz
repnz
cmp
sbb
sti
push
clc
ja
mov
sub
jg
inc
test
test
push
jb
mov
fnstsw
sub
mov
popa
and
push
or
jl
int3
pop
lea
and
push
fildl
cwtl
push
pop
out
and
cmpsb
aad
ret
pop
and
arpl
rcll
pusha
cmp
sub
lahf
sbb
or
and
out
sbb
loope
shlb
cmp
iret
enter
js
and
inc
cs
hlt
push
aaa
push
clc
cmp
mov
orb
jl
rclb
lahf
push
sbb
outsl
outsl
push
scas
rolb
sbb
hlt
int
insb
dec
jl
inc
ja
aam
xor
pop
decl
sub
cmp
mov
push
enter
imul
aas
imul
cmc
adc
std
hlt
xchg
and
push
nop
xchg
jmp
int3
cmp
in
inc
inc
xchg
xchg
adc
jg
lret
test
cmp
jge
movsb
int
das
lret
adc
lock
jmp
rol
add
xor
fidivl
mov
cmp
adc
pop
pushf
jp
or
cmp
push
jb
lods
mov
das
jl
xchg
aam
sub
out
and
bound
repz
sahf
cmpsl
sbb
xor
lds
aad
pop
cmp
sbb
in
inc
sub
jae
inc
fdivr
lds
test
jge
dec
push
fnstsw
xchg
orl
mov
pop
sbb
inc
push
movsl
ficompl
mov
xchg
and
xor
je
adc
mov
add
imull
push
push
mov
add
imul
loop
dec
lahf
movsb
and
jbe
pop
mov
lret
mov
cwtl
fdivrs
enter
and
fxch
pop
mov
out
mov
std
mov
out
sub
mov
sub
ds
out
push
and
sub
scas
jecxz
aaa
ja
adcb
imul
xchg
mov
lea
insl
mov
xchg
iret
and
add
pop
xchg
mov
test
lret
mov
xchg
lret
dec
clc
pusha
add
push
fsubp
mov
ja
mov
stc
add
movswl
addr16
int3
repnz
cmpsl
aaa
hlt
jle
push
xchg
push
push
insl
sahf
loope
bnd
xorl
or
int3
push
lret
dec
test
daa
sbb
in
hlt
or
jp
xchg
sub
lock
sub
dec
dec
pop
in
test
mov
mov
inc
mov
inc
push
or
pop
leave
int3
push
das
push
mov
push
cmp
pop
mov
adc
push
fistpll
jmp
pop
movsl
adc
scas
mov
rorl
or
push
mov
in
aad
outsb
push
and
test
movl
sbb
test
mov
js
xchg
and
lock
push
cs
mov
pop
stos
mov
push
clc
or
sbb
xor
sbb
push
push
pop
dec
out
adc
das
inc
xor
loopne
shlb
push
mov
test
push
in
aaa
add
dec
in
dec
cmp
mov
jmp
stc
fldl
mov
cltd
xchg
inc
sub
cmp
and
xchg
hlt
fstpl
mov
scas
push
pusha
dec
ret
testb
insb
out
xchg
inc
sub
punpcklbw
stos
test
inc
es
adc
sbb
inc
dec
jns
pusha
xor
icebp
cmovs
dec
out
adc
out
call
popa
xchg
int
pmaxub
adc
rcll
sub
std
lahf
sbb
jnp
rep
ret
out
xchg
pop
adc
mov
sub
fsubr
jae
dec
out
lea
stos
fdivrl
or
cmp
ds
push
sarl
xor
mov
xchg
xchg
cld
xor
mov
shl
jae
pusha
fdiv
cmc
mov
popa
fwait
insb
xor
push
fnstsw
mov
mov
dec
cmp
and
adc
dec
lea
push
pop
adc
cmc
incl
xor
negb
add
or
jl
adc
dec
mov
lods
and
in
xchg
cmp
xchg
mov
push
pop
cmpsb
mov
loopne
mov
cmp
nop
out
lret
mov
mov
mov
mov
andb
ret
adc
inc
mov
push
loopne
ds
sbb
xor
jge
xor
jmp
xchg
ja
aas
inc
jp
sbb
xchg
mov
test
adc
aas
scas
dec
or
addr16
mov
jge
fs
data16
pop
push
sbb
into
fidivl
mov
mov
mov
jnp
xchg
aas
pop
dec
dec
fildll
rcl
adc
test
call
fidivrs
push
cmp
cmpsb
sub
loop
orl
das
sbb
cmpsb
fcmovnb
xor
mov
push
ret
sbb
add
pop
mov
pop
flds
mov
imul
adc
push
fcomip
and
ret
nopl
and
andb
sbb
jp
cmp
jno
xor
xchg
lahf
and
fwait
inc
cmp
nop
push
add
addr16
sub
arpl
hlt
popa
push
push
push
jne
and
aas
lret
xchg
dec
pop
mov
call
push
and
jnp
pop
sub
sbb
add
xor
dec
and
push
xor
xor
and
mov
aas
dec
cmp
out
stc
dec
aas
push
push
push
imul
sarl
cmp
or
aas
sbb
cmp
push
mov
pop
sub
rcll
mov
push
add
sbb
add
xor
xchg
popa
inc
adc
pop
add
scas
mov
nop
es
push
sub
insl
push
push
rcll
xor
adc
mov
in
lds
ds
jb
push
pop
lea
jmp
cmp
adc
sub
mov
sbbl
adc
and
inc
loope
sahf
imul
and
adc
adc
xor
sbb
adc
or
fwait
cmp
movsl
repz
adc
gs
xor
inc
sbb
pushf
movhps
das
dec
mov
xchg
push
xlat
sti
imul
loope
pop
in
dec
cld
mov
jb
in
jecxz
push
add
jl
and
sbb
and
adc
adc
and
sbb
push
in
mov
add
roll
push
add
arpl
cmpsl
add
in
pop
in
addr16
add
xchg
in
adc
push
add
rorl
push
add
add
xor
or
ljmp
es
call
ret
push
add
adc
and
and
in
popf
dec
aad
in
push
add
jne
xor
adc
aad
in
push
add
fmull
jge
and
ret
push
mov
push
rol
ret
xor
rcrl
and
in
pop
add
in
push
test
push
add
jne
pop
fwait
add
clc
ret
jge
incl
add
in
push
add
in
xchg
sbb
nopl
and
push
cmp
ret
push
and
pushf
add
ret
xchg
pop
in
xlat
jae
jl
xchg
cld
cli
or
call
jae
add
in
test
mov
sti
pop
ret
or
xor
mov
add
push
clc
in
loope
in
push
clc
mov
xchg
out
inc
xchg
mov
jae
add
jmp
loopne
jp
imul
add
pop
lahf
ljmp
xchg
mov
xchg
adc
jns
call
mov
je
or
mul
xchg
cs
pop
ljmp
and
or
jmp
inc
in
sahf
imul
test
jp
call
imul
nop
clc
mov
xchg
scas
pop
xchg
mov
test
scas
sahf
pop
imul
lock
pop
xor
mov
jl
or
stos
pop
das
jb
les
mov
xor
add
ljmp
and
mov
cmp
jmp
inc
adc
fwait
or
mov
xor
jmp
sbb
sahf
sub
jmp
mov
mov
in
cmp
sarl
or
adc
add
adc
add
lods
call
add
loope
lods
call
add
jmp
inc
in
sahf
mov
jecxz
jmp
inc
in
sahf
inc
loope
xchg
push
xor
adc
cs
jnp
jo
mov
bound
ljmp
sahf
fwait
popf
add
and
loop
cmp
or
xchg
ljmp
jae
cld
pop
adc
jp
call
inc
inc
adc
dec
or
les
pop
ss
xchg
in
adcb
cmp
jmp
call
call
push
inc
and
cmp
lahf
ljmp
and
adc
adc
loopne
jle
ljmp
pushf
ljmp
pushf
ljmp
pushf
mov
inc
out
push
insl
add
or
inc
in
pushf
pop
loope
test
jp
call
mov
lods
call
mov
lods
call
ds
fstp
ljmp
cs
cmp
inc
in
cs
in
sahf
mov
mov
lahf
pop
inc
or
xchg
add
fwait
jge
aas
imul
test
je
or
lods
sahf
sbb
jp
call
addr16
jg
sub
jmp
imul
lock
jb
or
pop
pop
push
scas
pop
cmp
dec
mov
scas
scas
jg
jae
in
ds
test
aam
or
jmp
xlat
fbld
cmp
jmp
loop
call
out
pop
inc
in
cmp
movsb
jbe
addr16
pop
adc
adc
cld
rclb
movsl
jbe
ljmp
pushf
imul
lock
add
push
sbb
push
or
jno
or
jp
call
test
scas
in
shr
xchg
lea
lods
call
xor
scas
and
ror
pop
sub
inc
xchg
mov
outsl
fsub
jp
call
mov
sahf
adc
stos
pop
xchg
imul
test
jb
or
or
add
push
or
jp
call
call
lret
call
lret
push
test
out
adc
cli
cld
out
lret
lcall
pop
stos
call
cmpsl
jge
aaa
sbb
loop
pop
and
sarl
lods
xor
out
xchg
jecxz
or
and
lret
inc
push
fstl
call
fimull
adc
add
hlt
call
mov
jp
call
mov
jp
call
jmp
inc
in
sahf
imul
test
adc
ret
pop
pop
sbb
imul
or
in
jae
add
or
push
popf
movsl
rcll
loope
and
daa
jl
push
push
mov
pop
imul
mov
jp
call
data16
scas
ljmp
out
jge
cli
out
sub
mov
icebp
push
push
jle
xchg
lret
ljmp
xchg
mov
xchg
inc
mov
xchg
sbb
mov
int
mov
aas
imul
or
xchg
sbb
mov
pop
pop
ljmp
sahf
xor
jecxz
cmp
adc
icebp
or
sbb
imul
or
inc
in
je
adc
xlat
loopne
push
inc
ljmp
sahf
imul
test
jp
call
adc
xor
xor
in
bound
and
mov
fidivs
int3
push
inc
outsl
pop
pusha
xchg
nop
cli
push
in
in
bound
mov
shrb
imul
mov
fcoml
out
in
loopne
mov
stc
mov
js
fildl
test
scas
xor
xchg
jmp
adc
jnp
imul
mov
iret
adc
imul
mov
fiadds
int3
mov
shl
jnp
arpl
arpl
mov
adc
xor
add
call
pusha
xor
imul
push
imul
adc
mov
out
ret
mov
pusha
inc
jmp
or
add
in
in
bound
mov
mov
mov
mov
fcompl
int3
push
arpl
loopne
jnp
arpl
fdivl
imul
nop
sbb
xor
call
out
fcompl
out
in
loopne
or
arpl
in
in
push
in
in
bound
das
out
inc
add
fmul
in
in
mov
decl
sub
in
in
pusha
repz
xor
arpl
fdivl
imul
xchg
pop
inc
imulb
icebp
lret
mov
adc
in
xor
mov
mov
stc
mov
push
arpl
in
push
arpl
mov
filds
sub
adc
sub
or
fs
mov
jnp
mov
sbb
test
out
mov
ficomps
int3
mov
ret
addr16
call
das
arpl
in
mov
es
mov
lret
out
clc
lock
add
arpl
jg
sbb
int3
mov
or
mov
adc
and
filds
sub
fmull
int3
push
decb
out
andl
arpl
arpl
pop
arpl
mov
cmpsl
jmp
in
or
mov
jmp
imul
dec
and
xlat
inc
push
push
in
daa
adc
push
add
mov
cmp
push
inc
stc
imul
pop
mov
fidivs
int3
lods
sbb
icebp
and
lret
dec
stos
pop
pop
mov
adc
mov
movsb
imul
xchg
nop
sbb
fs
push
inc
mov
out
cmp
pop
arpl
nop
bound
mov
shlb
imul
mov
arpl
in
in
push
adc
add
pop
cmp
addr16
adc
sbb
in
pop
mov
or
call
mov
jl
add
xchg
sub
mov
push
addr16
arpl
inc
mov
adc
call
mov
mov
iret
fcompl
int3
push
mov
or
mov
or
jmp
mov
fcompl
out
in
loopne
dec
and
inc
mov
adc
imul
push
mov
out
xor
mov
pop
push
lods
pop
call
imul
iret
or
hlt
iret
in
in
pusha
or
in
push
in
in
mov
sbb
loopne
jnp
arpl
sbb
in
jmp
mov
iret
push
cmp
arpl
in
pop
mov
push
fdivl
imul
push
mov
out
inc
pop
mov
loope
or
add
cmp
div
cmp
rcpps
out
jmp
jo
arpl
out
xchg
adc
push
inc
add
pop
push
mov
iret
in
in
mov
push
dec
pop
cmp
les
pop
dec
jmp
rcpps
pop
dec
jmp
jo
arpl
add
mov
xor
add
add
pop
arpl
jecxz
pop
adc
pop
cltd
ljmp
imul
jns
repz
inc
mov
iret
in
in
push
fsubl
imul
push
mov
out
inc
push
test
pop
push
imul
pop
mov
bound
imul
ds
popa
lahf
inc
stc
imul
nop
hlt
iret
in
in
push
push
lock
xchg
mov
je
test
pop
push
popa
testl
mov
imul
andl
jmp
xor
push
in
in
mov
cltd
inc
sub
dec
and
arpl
out
inc
inc
push
fs
xchg
jmp
ret
mov
xchg
mov
dec
add
int3
push
in
loopne
jnp
arpl
or
mov
shl
jnp
arpl
and
repnz
add
shl
pusha
mov
jmp
lock
add
jmp
mov
stc
imul
mov
fcompl
out
in
loopne
sbb
addr16
arpl
fdivrl
das
arpl
les
add
pop
inc
dec
ficomps
int3
dec
insl
jmp
inc
mov
loopne
insb
pop
arpl
sub
inc
mov
push
pop
popa
out
inc
push
mov
jmp
mov
fdivl
int3
push
cmp
addl
jae
and
jae
and
lods
add
les
sbb
rol
sub
subl
add
add
mov
push
pop
imul
push
ds
add
push
push
pop
push
mov
push
pop
adc
add
sub
jae
and
js
push
pop
ds
inc
adc
xor
adc
cmp
inc
test
add
jge
cld
test
inc
push
add
lock
pusha
popa
sbb
and
imul
subl
subl
add
in
cmp
lds
inc
jno
and
imul
mov
and
or
test
add
jecxz
adc
sub
sub
mov
pop
jg
enter
orb
in
push
mov
mov
imul
subl
and
sub
pop
mov
subl
hlt
nop
popa
jae
and
lods
add
leave
dec
imul
mov
sub
push
mov
jmp
add
mov
imul
push
cmpsb
adc
or
sub
mov
and
adc
imul
shll
xor
jmp
and
jae
and
lods
add
subb
xor
test
add
ljmp
call
ljmp
or
push
pop
jmp
in
add
cmpsb
inc
js
in
sub
sub
push
pop
imul
in
and
add
add
add
jne
cld
js
push
subl
mov
and
rclb
out
out
adc
imul
mov
and
lock
jae
and
jae
mov
imul
push
cmp
pop
jmp
ror
rol
sbb
mov
test
add
lds
adc
mov
nop
nop
and
xchg
outsl
stc
jne
dec
xor
popa
rcll
add
xchg
xchg
push
pop
adc
not
push
push
sub
imul
push
jmp
and
lods
add
add
rolb
add
call
or
sub
imul
mov
sub
subl
imul
mov
add
lods
add
xorl
nop
add
and
cmp
nop
add
xor
pop
inc
dec
imul
pushl
imul
popl
out
push
pop
imul
push
jno
and
les
sbb
mov
mov
test
add
pop
add
sub
jno
and
ds
sub
out
sub
imul
pop
ds
sub
out
add
imul
pop
aas
push
pop
mov
add
call
pusha
sub
mov
add
mov
push
add
add
sub
jae
and
imul
sub
jmp
add
mov
imul
push
ds
add
sbb
jg
shr
add
sub
jae
and
sbb
in
add
pop
and
imul
jmp
testl
add
push
mov
test
add
cld
push
sub
hlt
pop
push
jmp
and
lods
add
movb
add
xchg
pop
push
mov
add
sbb
not
push
in
jmp
mov
imul
push
adc
idivl
add
add
add
jae
and
lods
add
push
inc
pop
mov
imul
adc
mov
push
push
inc
add
push
loope
adc
sub
jno
and
jno
and
rolb
add
call
add
je
pop
add
add
add
call
fs
add
in
push
jb
jae
jmp
jae
mov
imul
adc
pop
pop
cmp
in
push
mov
test
add
sbb
mov
movb
mov
imul
popa
cmp
mov
and
add
add
cmpsb
or
mov
mov
mov
add
sub
add
sub
mov
pusha
add
sub
sub
mov
push
mov
push
sub
pop
add
sub
pop
pop
push
push
xor
pop
sub
add
mov
sub
add
mov
sub
mov
add
mov
mov
add
call
push
push
add
add
sub
mov
add
push
mov
push
mov
add
sub
mov
push
incl
pop
sub
add
dec
push
mov
xor
push
pop
push
push
pop
xor
mov
pop
add
nop
push
push
add
mov
movl
add
mov
ror
rol
push
sub
pop
add
add
sub
mov
sub
mov
add
mov
push
pop
sub
sub
add
mov
sub
add
push
push
add
mov
push
pop
sub
inc
dec
push
mov
xor
add
mov
mov
mov
add
push
add
pop
nop
sub
add
not
push
mov
add
push
push
add
push
sub
add
pop
call
add
mov
add
push
sub
add
pop
add
sub
mov
push
mov
mov
mov
add
sub
push
push
xor
pop
push
push
add
mov
push
add
pop
add
sub
sub
mov
push
push
xor
pop
push
mov
sub
mov
pop
mov
sub
pop
pop
call
add
mov
add
push
mov
add
sub
sub
mov
add
mov
push
push
pop
add
mov
pop
push
mov
add
mov
mov
add
ror
rol
push
cmp
sub
pop
call
add
mov
add
cmp
je
jne
cmp
nop
nop
jne
jle
jg
call
sti
jnp
jmp
jmp
nop
nop
push
add
add
push
push
add
mov
push
push
add
pop
add
push
push
mov
pop
mov
mov
mov
add
push
sub
add
push
lea
sub
xchg
pop
push
push
pop
sub
pop
push
push
add
push
push
add
mov
mov
mov
add
mov
add
mov
mov
add
push
push
add
mov
push
push
add
add
push
mov
add
sub
pop
push
mov
sub
add
pop
mov
sub
call
add
mov
add
push
push
add
pop
push
mov
sub
mov
pop
push
subl
pop
add
mov
add
add
sub
sub
mov
mov
mov
add
add
sub
mov
push
push
add
mov
pushl
push
push
pop
add
push
add
pop
add
sub
sub
mov
decl
add
sub
mov
mov
call
add
mov
add
push
push
add
sub
add
mov
sub
mov
mov
add
pushl
mov
mov
add
push
pop
sub
add
sub
sub
mov
sub
mov
add
push
mov
inc
xchg
pop
push
mov
call
add
mov
add
sub
mov
add
mov
mov
mov
add
push
pop
sub
sub
add
mov
sub
sub
mov
pop
add
sub
mov
push
push
add
push
mov
xor
add
push
add
pop
add
sub
sub
mov
push
mov
sub
xor
pop
push
or
not
pop
not
sub
mov
pop
push
mov
sub
pushl
sub
add
pop
sub
pop
pop
push
push
pop
push
mov
mov
add
pushl
xorl
popl
subl
push
push
pop
mov
add
mov
pop
push
pushl
push
pop
add
popl
pop
mov
add
pushl
push
push
pop
mov
xor
mov
pop
popl
pushl
subl
popl
mov
add
push
push
add
pop
push
push
pop
add
pushl
push
sub
mov
add
xor
popl
add
mov
jmp
push
push
pop
pop
call
add
mov
add
push
push
add
pop
add
add
add
push
add
add
push
push
add
mov
push
push
add
mov
push
movl
pop
push
sub
pop
xor
xor
not
add
mov
sub
add
not
mov
call
add
mov
add
push
mov
push
push
pop
add
je
jne
jmp
add
add
pusha
sub
sub
popa
mov
mov
add
push
lea
sub
xchg
pop
push
mov
sub
add
pop
mov
sub
push
push
push
add
pop
add
add
mov
sub
sub
add
mov
sub
add
add
mov
movb
add
mov
popa
push
push
pop
push
push
xor
pop
add
mov
mov
ret
movsl
popf
sahf
pop
adc
xchg
inc
jns
lcall
mov
ret
incb
sbb
mov
pop
sub
mov
movsl
jnp
xchg
sub
nop
clc
cmp
lahf
mov
ret
and
jne
outsb
clc
call
or
dec
lahf
jmp
stos
push
add
cmp
out
sti
les
push
cld
adc
cmpsl
movsb
inc
and
pop
mov
data16
jmp
cmp
xchg
push
ja
push
aaa
jge
add
push
ljmp
popa
push
push
mov
dec
loop
mov
loope
or
jo
loopne
scas
unpcklps
cmp
xchg
test
mov
jns
je
mov
add
jge
push
xor
jmp
cmp
xchg
mov
jno
pop
push
cmp
in
rolb
popa
xor
pop
xchg
ficompl
and
jp
add
xchg
jbe
inc
stos
xor
inc
adc
mov
mov
mov
push
aam
jg
adc
shrl
lahf
adc
xchg
iret
pop
mov
push
pop
fwait
das
push
and
and
bound
or
es
or
insl
jle
loopne
jge
dec
int3
shrl
inc
scas
aas
sub
and
dec
pop
fisubl
getsec
cmp
js
inc
orl
inc
ret
mov
xor
jge
mov
xor
enter
pop
pop
clc
xchg
and
int
nop
or
inc
mov
jl
xor
aad
lds
cwtl
lods
dec
ret
cmpsl
in
repz
mov
jnp
out
or
aas
inc
adcl
mov
stc
cmp
xor
cmp
mov
dec
out
adc
testl
aas
fwait
xor
cmpsb
aam
inc
xorb
insb
cmp
xchg
repnz
mov
rcrl
pushf
xchg
mov
mov
push
xor
add
notb
push
daa
xchg
xor
dec
enter
cmpsl
adc
mov
pop
mov
imul
loope
in
test
xchg
xchg
or
lock
stos
sub
cmp
or
or
xchg
ss
mov
jbe
popa
clc
cmp
add
sbb
pop
inc
test
xor
inc
sub
mov
scas
mov
into
insl
imulb
test
test
fldt
lret
and
clc
decl
jle
stos
lret
cmp
add
inc
loope
ret
scas
dec
inc
cs
inc
push
dec
inc
and
mov
push
sbb
orl
inc
hlt
push
out
xor
push
cmp
loope
shll
hlt
pop
lret
or
pushf
lcall
mov
loop
xor
cmp
add
leave
mov
aas
fdivrs
mov
xchg
lahf
adc
xchg
or
jecxz
add
xor
dec
cmc
movsb
mov
push
xchg
sub
dec
ss
int
mov
add
test
or
or
sbb
roll
sub
les
jge
push
inc
dec
inc
xor
sahf
sub
jmp
les
sub
mov
push
push
mov
shll
rorl
xchg
push
or
cmp
cmpsl
aas
dec
mov
mov
or
vpmulhw
push
cmpsl
or
and
mov
fldenv
ret
add
mov
into
xchg
or
and
lock
rolb
jg
orl
xrelease
dec
aad
push
repnz
int
or
jecxz
xchg
push
jge
dec
ss
or
xor
out
ret
mov
loope
je
inc
jo
cmpsb
push
xchg
fsubl
xor
jmp
sbb
mov
jno
push
orl
pop
sbb
push
lahf
outsb
mov
push
addr16
jmp
jle
dec
mov
dec
imul
jl
xor
xchg
sbb
dec
add
das
mov
xchg
mov
imul
lret
push
ds
gs
pushf
rolb
lahf
gs
loope
xchg
pop
add
dec
call
shr
cmp
mov
aaa
shrb
iret
cltd
adc
hlt
imul
sub
xlat
xchg
and
push
cmc
ss
sbb
pop
addr16
outsl
inc
mov
xor
lds
cmp
aas
push
stc
mov
adc
pusha
dec
xadd
or
int3
addr16
cmp
jle
mulb
bound
mov
out
fbstp
xchg
pop
jo
mov
mov
xchg
push
adc
mov
cld
jmp
js
sahf
inc
mov
insl
sti
cmp
dec
or
cmpsl
adc
cmp
int3
mov
mov
data16
xchg
sub
iret
jbe
neg
mov
push
int3
pop
js
pop
arpl
inc
popa
push
push
in
out
outsl
jno
sub
jle,pn
aaa
adc
or
std
and
cmpsl
jae
xlat
mov
pusha
lods
enter
jo
fsubrs
mov
jo
push
pop
add
in
cmp
and
ljmp
cmp
inc
cmp
mov
jmp
lods
sub
and
cmp
in
rclb
je
add
lea
inc
fs
jns
inc
fsubl
divb
push
idivb
fwait
cli
insl
add
jecxz
jb
dec
sub
pop
adc
xor
add
aam
jl
test
subl
xchg
repnz
xor
shll
push
xor
cmp
ljmp
dec
add
or
push
pop
cmc
mov
icebp
dec
mov
jl
xchg
mov
lods
mov
testl
int3
mov
sub
cs
dec
jnp
in
dec
mov
or
mov
sbb
mov
repnz
cmp
ret
jno
add
aaa
cmpsb
mov
iret
testb
call
and
movsb
mov
lds
es
iret
jns
les
pop
movsb
fistps
nop
fistpl
add
fldt
jnp
gs
rol
notb
xchg
push
or
jns
xor
jb
push
pop
xchg
repz
jmp
scas
pushf
mov
test
in
jecxz
and
test
inc
imul
pop
aad
dec
ja
jns
hlt
imul
xor
testl
inc
jle
and
fsub
mov
ljmp
js
adc
stc
cmp
and
fimuls
pusha
dec
mov
scas
jmp
lahf
inc
jbe
adc
inc
into
scas
mov
fstpl
pop
jb
jns
mov
std
dec
out
mov
std
cltd
or
ds
test
xor
cmpsl
pop
loop
push
or
std
cmp
jmp
aad
mov
popf
jo
and
mov
cmp
pop
adc
cld
mov
dec
sbb
icebp
cmp
inc
divb
jmp
arpl
test
or
jbe
xlat
andb
nop
es
cld
mulb
pop
inc
pop
pop
adc
jge
sbb
xor
sahf
leave
arpl
stc
add
call
push
push
pop
test
pop
pop
mov
lret
adc
dec
sub
mov
je
or
and
or
inc
lahf
sbb
hlt
jge
mov
jl
clc
pop
cmp
std
stos
jno
sbb
sti
xchg
sub
fidivs
push
adcl
rcl
jge
je
push
jae
ficompl
xor
ja
out
lods
add
insl
mov
inc
out
test
xlat
xchg
push
pop
in
or
jge
push
inc
jae
fmuls
outsl
ficompl
sbb
add
or
push
jmp
add
adc
cmpsb
mov
sti
pop
movsb
iret
cmp
xorl
daa
mov
pop
jb
mov
push
lods
or
mov
lods
sbb
sbb
jp
call
pusha
push
test
dec
jno
inc
rcll
loope
and
add
ja
inc
adc
pop
adc
push
push
in
push
and
cli
hlt
shrb
stos
rcrb
xor
mov
fbstp
popa
inc
shl
jmp
inc
cmc
mov
cmpb
pop
sub
iret
mov
pop
int
aad
pop
or
ret
inc
in
fdivl
aam
jne
pop
mov
pop
ss
pushf
in
outsl
pop
lock
movb
frstor
pusha
push
pop
nop
les
daa
aam
sbb
out
cmc
psraw
xchg
repnz
test
dec
mov
sarb
test
outsb
push
scas
or
xchg
or
pushf
pop
cmp
xchg
mov
inc
jl
sub
ret
adc
sbb
fdivrp
test
lds
in
in
xor
push
fidivs
dec
fdivrs
mov
pop
fs
clc
mov
jl
and
xor
add
and
pop
and
mov
insb
mov
int3
test
sbb
rcll
sub
jnp
rol
stos
rclb
adc
push
sbb
lret
and
loopne
pop
test
dec
test
push
sub
data16
sub
adc
dec
push
jmp
pop
imul
and
jns
insl
pop
jns
clc
sub
sub
lea
outsb
loope
mov
fwait
cltd
xor
xor
cmp
sub
pusha
or
xor
fisubl
inc
pop
inc
fwait
in
push
daa
pop
xchg
pushl
call
rolb
jge
sbb
lret
loopne
cwtl
shlb
lods
aam
adc
aaa
orb
int3
push
out
xchg
mov
mov
clc
cld
jl
idivb
js
xchg
js
jp
jg
mov
push
xchg
fists
nop
or
pop
cmpsl
repnz
dec
cmp
vrcpss
mov
mov
arpl
cmc
pop
xchg
nop
paddw
shrl
ret
add
dec
ds
dec
pop
cltd
cmpsl
clc
sti
push
lret
repz
dec
mov
xor
repnz
inc
icebp
mov
mov
test
and
sub
sti
fisubrl
dec
iret
fistl
sbb
icebp
xchg
fwait
js
jge
dec
mov
pop
add
cld
push
pop
mov
movsb
lods
movsb
addl
inc
mov
mov
pusha
lods
lcall
and
ret
jl
out
xor
dec
cmp
xor
dec
adc
xchg
enter
rcll
sbb
mov
dec
dec
jecxz
test
repz
pop
lcall
mov
push
fldl
dec
pop
mov
adc
cld
fsubrl
stc
ficompl
lods
mov
loope
int
jle
xor
pop
movsl
mov
stos
enter
sar
loop
sbb
roll
push
push
cmp
fidivs
cltd
mov
add
lahf
xchg
adc
js
insl
pusha
into
mov
pushf
icebp
ss
in
add
sti
sub
mov
jns
xchg
pop
lret
cwtl
out
push
pop
icebp
inc
mov
adc
fucomip
inc
dec
es
lods
push
bound
inc
and
arpl
test
data16
xor
outsl
jecxz
dec
icebp
jns
sbb
sub
jno
lods
cmc
mov
mov
mov
cmp
cmp
movsl
pop
mov
cs
inc
fwait
dec
or
xchg
nop
outsl
idivl
fcoms
dec
rorb
test
lea
mov
imul
movsb
out
mov
repnz
push
ljmp
test
fisubrl
fidivrs
push
and
pop
cmp
aas
mov
int3
es
mov
pop
adcb
outsl
insb
test
ds
push
rcr
ret
and
dec
push
adc
add
sti
cmp
pop
lahf
adc
roll
xchg
or
arpl
adcb
mov
in
scas
pusha
cli
mov
jl
insb
cmp
dec
add
mov
sub
and
inc
push
sub
addr16
lret
lcall
add
sub
jae
js
xor
xchg
push
dec
lods
inc
imul
dec
in
jo
ja
xchg
sbb
xor
xchg
mov
lahf
sbb
int
push
in
dec
pop
jno
movsb
popa
jnp
loop
push
jns
mov
dec
sub
or
mov
jne
jmp
out
jae
xor
mov
pop
cmp
jbe
add
sbb
inc
xchg
pop
dec
add
and
popa
ss
das
je
ret
out
fsubrs
jg
adc
push
jecxz
mov
insl
test
mov
add
imul
stc
push
repnz
ret
push
xchg
pop
sbb
adc
loopne
mov
push
sarb
mov
or
jns
hlt
mov
insb
jno
xor
imul
dec
pop
jno
dec
jnp
inc
jle
bound
inc
mov
dec
pop
pop
jmp
jbe
leave
and
cwtl
mov
enter
pop
pop
lock
adc
dec
sbb
adc
fwait
cmp
sub
testl
ret
cmp
loopne
cltd
andb
adc
ss
rclb
mov
aaa
mov
inc
or
movsl
in
push
into
inc
clc
out
push
jb
ss
ret
adc
sti
hlt
outsb
pop
lock
push
scas
ss
jbe
jl
jge
fyl2x
call
jns
lcall
fs
les
or
fdivs
xchg
test
mov
mov
xchg
mov
pop
fidivs
in
mov
fdiv
xor
cli
inc
insl
and
xchg
mov
cwtl
add
int3
rclb
pusha
mov
jge
mov
dec
push
popa
sti
cmp
ss
es
adc
in
bt
fsubrs
sarb
out
mov
movsb
loope
and
test
sbb
xchg
jge
sub
lcall
repnz
jno
push
pop
add
mov
pushl
rorl
push
int3
cwtl
and
jecxz
addr16
xlat
daa
test
cmpsl
mov
dec
out
stos
adc
jno
mov
lret
or
fadds
xchg
sub
stc
in
mov
sub
popf
sbb
xor
jbe
push
das
fnstcw
cmp
ds
fisubs
inc
add
pop
cmpsl
insb
mov
pop
push
pop
pop
or
aad
dec
mov
and
or
lock
mov
mov
enter
pop
sub
rcrb
pusha
or
mov
cmp
mov
es
jb
out
mov
ja
imul
cmp
mov
push
push
push
sti
dec
pop
shrl
shll
es
xchg
enter
shll
andl
or
int
lret
lea
add
push
fldl
or
inc
stos
loope
jbe
jp
loope
dec
push
inc
shrb
icebp
outsl
aad
popf
int3
icebp
sarl
shlb
aas
inc
rorl
mov
insb
pop
push
andb
pop
jns
mov
mov
cltd
adc
pmullw
mov
fnstsw
out
mov
pop
out
dec
jl
adc
jmp
mov
pop
jmp
cmpsb
or
std
mov
fsts
pop
push
cmc
mov
and
adc
xchg
sti
pop
lods
pop
sub
jbe
pusha
ljmp
nop
pop
insl
push
cs
lret
fstpl
mov
xchg
mov
pop
scas
scas
cmpl
js
shll
adc
sbb
test
xchg
pop
test
cld
adc
pop
mov
or
xchg
scas
xor
and
not
xchg
mov
arpl
imul
movsl
xchg
push
sbb
cli
fwait
inc
cld
jo
cmove
push
mov
xor
js
shlb
fs
lea
pop
push
xlat
pop
mov
and
xchg
cmp
fsubr
cmc
add
mov
xorl
shrb
mov
adc
xlat
xchg
add
ss
cmp
out
push
mov
push
leave
enter
movb
dec
insb
cmp
sbb
pop
sub
hlt
les
sub
mov
lock
mov
movsb
outsb
aad
aas
jg
imull
stos
rorb
push
es
or
cli
mov
jb
xor
lods
pop
jne
out
out
scas
aad
mov
je
sbb
frstor
repz
xchg
mov
push
sub
mov
xorl
aad
xchg
stc
out
xchg
imul
pop
test
ja
xchg
mov
cmpsl
ja
sbbb
fiaddl
test
rcrl
shll
and
mov
mov
out
mov
sub
loope
fidivl
dec
dec
jbe
pop
pop
jge
loopne
stos
mov
call
jne
popf
enter
or
leave
mov
mov
in
pop
sbb
add
push
and
in
jp
adc
ja
push
push
jae
inc
and
ss
arpl
jecxz
mov
fstps
stos
mov
fnstsw
adc
push
mov
cmp
ret
inc
ljmp
or
enter
add
mov
scas
mov
sub
insl
cs
js,pt
leave
rorb
addr16
test
jbe
lds
or
push
test
sub
call
div
lret
setge
popf
pop
in
clc
aaa
in
mov
mov
cmp
movsl
mov
mov
jb
and
iret
and
xchg
shll
stos
shlb
adc
push
mov
push
adc
mov
cmpsl
jmp
mov
bound
jno
dec
or
std
rcrl
add
sbb
and
dec
sbb
xor
aas
fidivrs
dec
adc
xlat
inc
pop
mov
test
jle
inc
push
mov
imul
cmp
pop
ficompl
ds
and
mov
jae
xor
pop
hlt
lods
push
cmp
hlt
arpl
jmp
pop
test
shl
ljmp
push
ja
rolb
sbb
dec
es
iret
loop
out
or
xchg
mov
loop
jb
lea
sbb
add
mov
jno
cmp
rcrl
add
jb
fstpt
add
std
xor
daa
aaa
loopne
pop
or
scas
rclb
das
cmp
fiaddl
fcompl
lds
insl
jmp
out
loope
xor
daa
repnz
stos
cmc
test
imul
mov
mov
jecxz
in
pop
xchg
pop
jecxz
sbb
adc
lahf
sbb
das
aaa
mov
cmp
dec
roll
sbb
loop
ds
test
arpl
mov
and
ror
loopne
mov
jae
cmp
push
adc
fnop
cwtl
fdivrs
out
out
pusha
adc
or
add
in
icebp
jo
adc
xchg
push
das
xor
aaa
add
mov
shlb
push
lret
ret
lods
dec
xor
xor
shrl
sbb
or
scas
xchg
ret
adc
dec
mov
hlt
cli
push
stos
pop
pop
sbb
pop
mov
add
xor
xor
mov
mov
outsb
mov
xor
mov
dec
daa
stc
sub
std
xor
sar
pusha
lret
jp
and
xchg
aad
inc
xchg
xchg
mov
push
adc
shrl
lret
xchg
imul
pop
cli
loop
add
cmp
fnclex
int
out
or
mov
leave
pop
mov
mov
dec
arpl
jne
mov
outsb
sbb
xchg
imul
js
push
sub
fldenv
sub
mov
jmp
xchg
xor
mov
sub
xor
jle
mov
jbe
shll
fucomip
mov
jecxz
out
cmp
das
std
rcr
and
add
cmp
lds
mov
loope
icebp
lock
add
mov
mov
mov
idivb
es
je
dec
out
push
pop
jne
jmp
fstl
int3
xchg
cmp
cmp
sahf
inc
push
ffreep
add
dec
mov
dec
repnz
fiaddl
push
jg
cwtl
movsb
push
rclb
mov
or
sbbl
out
or
sahf
aad
mov
mov
or
push
icebp
sbb
add
xlat
mov
sub
dec
add
pop
cld
mov
ds
push
cmpsb
pop
mov
ja
aam
jnp
mov
adc
dec
jg
and
cmp
shrl
scas
cmpsb
sti
pop
jmp
cwtl
arpl
imul
out
sub
cmp
or
fcompl
sbb
mov
testb
adc
stos
xchg
push
jge
push
aas
add
fs
stos
mov
shll
repnz
clc
adc
sbb
popf
pop
in
icebp
hlt
ss
or
int
js
pop
mov
lods
xlat
push
mov
divl
loope
xchg
imul
mov
aaa
cli
and
gs
xchg
and
pop
data16
pop
cmpsb
stos
in
push
add
lret
push
mov
push
sbb
scas
and
mov
testl
inc
repz
fsubr
insb
insb
or
or
mov
das
xor
fsubr
mov
das
cmpsb
jns
rclb
sbb
mov
add
xor
sbb
mov
mov
sbb
subl
sub
rolb
push
or
mov
cmp
jno
bound
fs
dec
mov
lcall
jle
inc
adc
jo
fwait
scas
lock
out
push
mov
mov
push
ja
stos
hlt
js
or
xor
lahf
cmpsl
pop
nop
inc
sbb
out
out
mov
jmp
movsb
fidivl
mov
loop
out
popf
inc
popa
mov
push
jg
sub
push
inc
and
inc
fsubrp
push
xor
andb
insb
xor
jae
in
xor
mov
ds
add
lret
fs
js
dec
adc
popa
outsl
lret
dec
enter
mov
rclb
gs
rcrb
aas
lea
es
shr
sub
and
jae
hlt
ljmp
fstpl
movsb
jbe
fisttpl
inc
mov
enter
mov
ljmp
jecxz
mov
mov
mov
jecxz
fisubs
adc
cwtl
mov
gs
mov
sub
int
imul
lret
js
lock
pop
icebp
lahf
mov
outsb
sub
lds
pop
sbb
or
cmp
mov
aaa
clc
pop
cmp
rcl
sbbb
imul
rorl
sub
sbb
addr16
pop
sti
shl
and
jne
push
std
push
lds
lea
mov
push
addb
movsb
sub
outsl
mov
inc
jecxz
sti
movsl
ss
xor
jl
lcall
cmp
and
popf
mov
cmpsl
in
daa
arpl
sbb
notb
xchg
sbb
movsw
jl
int
adc
js
dec
popf
xchg
jecxz
push
add
daa
imul
xor
sti
add
pushf
jle
ljmp
or
imul
mov
daa
pop
sbb
fs
jmp
cmpb
jns
lret
adc
mov
shl
dec
jnp,pn
insl
cmp
imul
imul
inc
inc
out
push
imul
xor
and
sbb
outsl
pop
lds
icebp
cli
dec
adc
outsb
std
in
cmp
ret
or
inc
sbb
xchg
xor
xor
mov
adc
adc
cmpsb
mov
lods
outsb
outsb
xchg
test
mov
aas
into
inc
in
or
lea
out
shlb
ret
mov
push
xor
test
cmpb
mov
fstpl
sub
xchg
mov
cmp
push
pop
lods
mov
ret
mov
shrl
mov
adc
mov
xor
out
push
push
dec
lods
mov
gs
sub
clc
addr16
dec
jl
iret
jl
mov
inc
imull
scas
fadds
fnsave
push
mulb
push
push
faddl
aas
fcmovne
bound
dec
test
jo
int3
fwait
cmp
adc
ds
cmpsl
pop
pop
mov
and
in
cld
outsl
jmp
jb
mov
inc
mov
test
lcall
icebp
arpl
xlat
mov
lret
jge
fstps
loope
mov
xchg
out
cs
das
inc
jo
fsubs
insl
out
mov
or
cmp
push
popa
lock
push
fs
filds
xor
cmp
adc
out
sub
pop
bound
invd
pop
mov
mov
and
cmc
icebp
movsb
adc
aam
xchg
mov
aas
clc
xor
mov
lret
push
inc
jl
push
inc
jg
cli
jl
pop
sahf
ficomps
fnstcw
test
mov
fdivl
loopne
out
scas
mov
jmp
test
imul
mov
lahf
dec
movsb
jb
or
roll
out
ja
push
daa
lods
test
mov
scas
dec
mov
pop
xchg
cs
mov
inc
push
pop
sbbl
jmp
sbbb
mov
jle
sarl
dec
repz
adc
test
xor
jne
mov
rol
mov
out
sbb
sub
addr16
xlat
clc
bswap
jno
sbb
les
and
or
pop
stos
push
enter
inc
jns
dec
cld
fdivl
and
faddl
pushf
dec
xor
lret
in
xor
cmp
int
in
lcall
jge
xor
adc
lds
cli
or
cmp
adc
add
jg
adc
jno
pusha
add
xchg
movl
fld
sbb
flds
idivb
fsubl
inc
in
ja
popa
movsl
out
jmp
xchg
cmc
sbb
xchg
cltd
jl
das
pusha
scas
ljmp
xor
adcb
cltd
push
addr16
ja
sbb
outsl
fnsave
pop
pop
test
inc
shrl
mov
pop
andl
popa
lret
add
mov
sub
mov
aas
dec
jbe
imul
dec
rol
sub
xchg
test
jp
leave
lods
and
and
cmpsl
push
movsb
jo
xchg
repz
add
rcr
popa
les
xchg
rcrb
adc
mov
push
lods
mov
pop
sbb
pop
xchg
cmp
ljmp
xor
fwait
test
test
mov
push
push
stos
icebp
or
cwtl
fisttpl
addb
iret
call
scas
mov
divl
stc
adc
dec
je
sub
pop
pop
push
inc
push
insb
aas
xlat
addr16
pop
in
daa
sahf
dec
jae
add
jne
lods
cmp
lea
sbbl
xchg
nop
dec
or
in
in
insb
in
jge
push
jae
xor
pusha
stos
xchg
iret
loop
enter
mov
mov
fldenv
inc
adcl
pusha
xchg
mov
xchg
imull
outsl
ret
ret
lods
jb
push
rcl
aas
gs
push
insl
add
fwait
testb
lar
lea
sub
xor
mov
xor
or
pop
push
leave
or
jmp
jecxz
int3
and
jnp
add
jp
shll
stos
sbb
test
cmp
in
lret
ficomps
test
stos
shll
out
inc
mov
dec
cs
nop
adc
mov
mov
cmp
add
pop
lea
cmp
in
and
mov
dec
fsubp
or
lods
add
in
cmc
jno
xchg
mov
outsl
push
ja
or
push
cmp
popa
sub
pop
xlat
xor
rcll
inc
popa
add
fdivrl
notb
pushf
xchg
test
scas
push
push
xorb
jmp
mov
inc
push
mov
xor
push
push
mov
mov
dec
cwtl
lahf
leave
pusha
movsb
sub
cmp
loop
xchg
pop
stc
adc
push
push
fs
and
jmp
push
roll
icebp
idivb
sbb
pop
into
pop
test
xchg
roll
xor
jle
in
push
sbb
xor
shll
sub
lock
decl
jnp
lcall
xchg
sahf
out
outsb
sub
sbb
cmpb
loop
sbbb
ret
jnp
js
xchg
rol
xor
and
xor
xor
sahf
js
imul
sub
mov
lahf
imul
aam
xor
xor
lahf
jo
dec
in
cli
jo
pop
rol
dec
pop
sahf
hlt
xor
int3
inc
dec
cltd
push
out
push
ds
test
test
ljmp
into
sbb
pop
adc
mov
pop
push
shll
jbe
sahf
imul
testb
push
lcall
or
out
jns
call
mov
pop
xchg
gs
cltd
adc
jmp
test
mov
add
or
cmp
sub
andl
je
dec
sub
adc
inc
dec
les
mov
or
sub
out
jbe
dec
push
movsb
sub
lods
inc
adc
outsl
jp
add
push
jecxz
inc
cmp
sub
or
addr16
into
leave
push
in
sub
adc
lds
leave
and
inc
mov
cmpl
or
shrl
inc
push
cli
cmp
fwait
dec
xor
and
adcl
push
xor
inc
fs
sub
fistpll
insb
xchg
jp
xor
inc
lods
mov
loop
jo
ja
test
sbb
dec
paddusw
add
push
add
test
xadd
jne
scas
fnstsw
and
int3
jbe
fwait
clc
mov
adc
mov
enter
and
sub
stos
sbb
mov
mov
dec
xor
pop
push
push
shlb
es
adc
ror
pop
and
out
or
call
jnp
out
push
cmpsl
loop
dec
dec
call
les
sub
outsl
scas
movsb
xor
mov
sbb
sti
mov
pop
push
mov
fdivrl
cmp
aaa
push
dec
or
and
inc
ret
js
lods
ja
std
bound
and
nop
sahf
mov
test
out
ss
add
lcall
or
mov
scas
int3
xchg
loope
fistpll
xor
jno
lret
bound
cmc
fstp
scas
lahf
stc
add
lea
stos
cwtl
sbb
or
out
adc
movb
sahf
adcl
mov
jg
filds
pop
outsl
lret
loopne
es
sub
or
push
xor
jns
inc
ror
jno
hlt
inc
xchg
jge
fcompl
or
iret
mov
dec
push
inc
add
insl
call
stos
daa
and
test
xchg
into
add
fcomps
jecxz
lahf
and
out
enter
push
mov
add
out
in
frstor
or
jp
sbb
and
aad
xor
cmp
std
insl
mov
nop
xchg
addr16
mov
and
ss
sub
sbb
push
mov
pushf
and
inc
int
popf
lds
pop
jg
mov
fistps
ror
lods
popf
cmpsb
push
in
sbb
jae
outsl
jmp
div
mov
insl
cmp
ja
ds
jb
sti
mov
adc
pushf
jns
shlb
lret
xchg
repnz
sbb
shlb
jmp
xchg
pop
sbb
ret
cli
rorb
push
pushf
xor
xchg
or
add
int
mov
repnz
in
sarl
rol
mov
roll
fstp
mov
cmp
sub
pop
mov
push
aas
scas
ljmp
lds
inc
outsl
and
lret
fwait
jb
out
add
test
jmp
repz
jo
inc
sbb
cmpsl
pop
mov
or
and
ss
das
bound
int
sub
mov
cmp
insl
cli
lcall
pop
cmp
repz
and
mov
stos
jne
adc
mov
mov
push
into
mov
mov
add
inc
push
adcl
inc
fcmovu
add
fwait
dec
inc
into
or
and
lahf
inc
or
mov
repz
movzbl
xor
adc
cmp
cwtl
or
sub
mov
xchg
test
je
jne
das
ds
cli
dec
xor
sti
xchg
shrl
add
mov
pop
aam
cmp
jecxz
shll
mov
jmp
sbb
push
repnz
rcrl
jnp
stc
sub
mov
inc
sbb
fdivrl
leave
les
adc
xchg
ret
addr16
cmp
ret
mov
cmp
sbb
es
rcll
arpl
loope
push
adc
mov
cltd
push
test
and
pop
adc
push
cmp
sbb
aam
decb
aas
mov
cmp
inc
cltd
loop
push
jbe
sbb
cmpsb
and
popa
fcmovnbe
addr16
shll
xchg
ss
stos
jl
mov
test
hlt
lret
cmp
jns
cwtl
into
xchg
mov
pop
push
fs
clc
fimuls
add
mov
xor
pusha
mov
pop
inc
popf
pushf
adc
xor
push
cmc
inc
lock
and
and
sub
add
xchg
cmp
call
mov
cmp
cmovle
sahf
movsl
add
fucom
inc
fdivrl
test
push
outsl
jmp
int
lods
xchg
push
sar
shll
icebp
roll
push
shll
das
jno
push
stos
arpl
iret
iret
shrb
fsubl
push
dec
inc
mov
mov
sti
in
mov
dec
mov
sarl
mov
sub
lret
jge
mov
pop
imul
popf
mov
icebp
loope
cmp
stos
xchg
mov
je
adc
out
push
jecxz
and
cltd
jecxz
in
clc
mov
add
pop
mov
lds
or
jbe
xor
pushf
jg
cmp
test
mov
mov
sub
lods
cmp
adc
jbe
and
in
adc
push
ds
mov
add
cltd
dec
lcall
jno
adc
sbb
mov
test
add
sbb
and
scas
outsl
mov
add
mov
cmpl
cli
mov
xor
mov
mov
adc
pop
pop
negb
and
js
mov
js
pop
and
testl
outsb
in
popf
cmp
jp
xchg
aam
push
push
xchg
and
jge
push
dec
inc
mov
fisubrl
xor
xor
sbb
cmp
das
sub
dec
add
add
cs
sub
dec
insl
out
lods
push
inc
cmpsb
mov
mov
cmpl
call
aad
repnz
movsl
mov
mov
mov
jmp
arpl
test
enter
divl
mov
lods
pop
push
jo
scas
lret
aas
mov
shl
xor
inc
in
movsl
rorl
mov
aaa
jb
je
mov
ljmp
sbb
xlat
adc
or
push
popa
ret
mov
inc
testl
push
push
xor
or
jge
mov
and
xor
inc
test
jb
sti
jnp
pop
outsl
test
jnp
mov
fistpll
jns
xchg
inc
bound
sbb
push
mov
or
pop
adc
cltd
add
out
pop
push
cmp
in
nop
fbstp
pop
mov
mov
lret
jnp
mov
inc
inc
push
out
pop
outsl
pop
mov
sub
mov
mov
insb
pop
leave
sti
clc
mov
aaa
fcompl
adc
pushf
lock
loope
fwait
adc
xor
sti
aaa
mov
js
loopne
jo
pushf
addr16
ficompl
push
jo
adc
testl
out
or
cs
pop
clc
ss
nop
aas
push
mov
es
push
lret
inc
jp
sub
push
xchg
or
mov
mov
out
fidivl
lock
pop
pop
adc
and
inc
inc
divb
and
dec
adc
or
cmp
cli
sbb
je
xor
sbb
loope
and
test
aaa
sti
stc
cli
cmp
pop
or
cmp
xor
jb
popf
jge
mov
je
mov
mov
cmp
xor
incb
cs
push
push
push
push
jmp
push
movsl
push
cltd
inc
mov
aad
rolb
shl
dec
xchg
xchg
pop
scas
push
sti
sub
push
or
xchg
inc
jecxz
out
fcoml
push
jl
or
cs
dec
pop
ret
push
add
test
cmpl
mov
dec
inc
adc
outsl
out
lcall
rclb
push
jno
push
mov
movsb
jns
add
outsb
sarb
lock
shrb
ret
jno
sub
xor
cmp
and
jle
lods
sbb
movsb
add
andl
out
push
push
mov
int
dec
stos
fidivrs
and
sub
mov
cmp
add
dec
dec
mov
in
inc
jp
test
mov
scas
lods
mov
test
sub
gs
jnp
cmp
in
loopne
push
je
lods
outsb
loopne
fildll
fistl
push
or
and
in
les
stos
das
jnp
aas
jge
je
cs
mov
xchg
lods
scas
dec
test
jbe
enter
mov
mov
sbb
dec
adc
add
stos
add
idivl
pushf
out
mull
test
imull
addb
aaa
pop
shl
fdivp
cmp
cld
fcoms
test
sti
in
outsl
add
insl
inc
mov
dec
popf
dec
pop
jp
cltd
aas
push
mov
cli
js
imul
lock
dec
mov
pusha
repnz
stos
pop
pop
inc
or
cwtl
bound
and
mov
into
pop
dec
ja
jle
insl
jp
imul
sbb
mov
inc
sbb
cltd
and
cmpsb
scas
lods
bound
or
cli
imul
adc
xor
jo
jno
mov
lret
cmp
pop
xor
into
fdiv
inc
mov
hlt
xor
pop
inc
cmc
cmp
cs
rcll
cmpsb
xor
jns
mov
in
jg
out
mov
mov
les
mov
cmc
push
mov
testl
pop
jmp
pop
sahf
in
mov
out
dec
sti
pop
pop
aas
shll
outsb
test
mov
push
aad
scas
or
dec
lret
ds
or
ss
fs
shlb
sub
mov
mov
xor
lret
in
negl
jg
pushf
into
subl
xor
mov
arpl
cli
loopne
dec
jl
psubq
leave
aaa
pop
xor
mov
mov
adc
dec
movsl
inc
cld
test
fdivl
cmp
or
inc
pop
and
out
testb
lds
out
fcompl
mov
roll
xor
ljmp
jne
pushf
pop
lahf
xchg
std
and
or
enter
lret
push
lods
mov
or
loopne
test
repz
adc
or
pop
mov
test
sub
call
lea
and
pop
loop
daa
mov
aaa
icebp
in
les
orb
or
insl
adc
subb
clc
inc
dec
jns
jns
stos
adc
sbb
ljmp
insb
fs
subb
and
faddl
stc
xor
fucomp
mov
mov
popa
inc
ljmp
sbb
fisubl
call
je
out
sti
mov
xchg
ret
pop
ret
or
mov
in
test
jno
push
lcall
cwtl
xor
add
je
inc
pop
psllw
jecxz
mov
pusha
xor
adc
jne
testl
or
shrl
push
insb
push
push
les
loope
pop
add
in
pop
xor
js
std
jmp
push
jae
test
rcl
sti
jge
ret
mov
xor
mov
std
or
xchg
and
mov
movsl
fsts
adc
dec
movsl
and
lds
cmp
jb
xor
dec
scas
or
fdivrl
pop
push
cmp
sti
mov
test
dec
div
fisubrl
sbb
mov
icebp
rcrl
lret
mov
and
aaa
repnz
daa
add
mov
adc
stos
mov
xor
mov
pop
cltd
add
sbb
add
adc
jns
dec
mov
into
adc
rclb
mov
and
inc
jmp
aas
aaa
xchg
into
pop
das
std
jne
mov
pop
fsubrl
or
jbe
repnz
jmp
sarl
pop
sbb
xchg
aad
loopne
sbb
sub
sti
popa
dec
push
loopw
mov
jns
jg
outsb
int
pusha
adc
in
mov
popf
xchg
pop
xchg
dec
fmull
fs
jecxz
movl
je
paddw
sub
pop
ljmp
or
mov
movsb
sbb
add
or
lea
out
fsubr
inc
mov
sub
stos
mov
rorb
addb
adc
lds
inc
xor
or
push
sbb
les
inc
inc
inc
rcrl
jg
adc
je
push
mov
sub
leave
imul
push
add
data16
push
stos
test
mov
mov
cmpsb
cwtl
icebp
and
push
xchg
ss
lods
nop
negl
dec
ror
out
xchg
mov
cmp
jge
std
mov
cltd
and
mov
ret
add
or
in
fs
dec
push
in
std
jg
adc
sbb
test
rorl
push
clc
adc
stos
stos
mov
sti
pusha
sbb
fwait
mov
mov
in
cltd
pop
popf
aam
mov
mov
jge
loop
daa
mov
mov
or
push
push
cwtl
cld
dec
cltd
setge
pop
and
addr16
mov
cmp
sub
icebp
jge
mov
xchg
aaa
ror
pusha
jecxz
je
dec
test
push
mov
mov
cmpb
hlt
or
or
or
mov
subb
in
adc
lret
repz
pop
fldenv
std
xchg
push
cs
imul
mov
ret
inc
sub
sbb
adc
jno
in
fwait
dec
lcall
cmp
out
mov
mov
adc
inc
fiadds
sub
lods
sub
ja
nop
notl
cmpsl
inc
repnz
fcmovnb
jnp
and
addr16
mov
pop
mov
or
xchg
popf
and
lods
and
lahf
dec
hlt
sub
fiadds
gs
xor
gs
jl
cmp
jg
imul
pop
lock
jno
mov
mov
lea
dec
adc
shr
push
mov
jle
fwait
xchg
jb
pop
insb
dec
xchg
cmc
push
mov
mov
dec
imul
push
or
mov
push
mulb
and
insb
lods
jns
cmc
sbb
arpl
xor
cwtl
adc
or
es
cwtl
or
rol
jecxz
jno
ljmp
dec
push
dec
aaa
pop
gs
imul
and
out
fnsave
pop
dec
out
xchg
inc
leave
addr16
jg
jae
lcall
cmp
lods
out
movsl
imul
and
fists
mov
lahf
mov
or
dec
mov
adc
inc
lock
jns
pop
or
or
adc
xor
sti
test
cs
scas
pop
fs
and
xchg
out
pop
mov
sbb
pop
adc
jg
inc
scas
jnp
cmp
jmp
pop
adc
repnz
push
push
jae
ljmp
and
inc
fcoms
push
add
loopne
sub
xchg
leave
mov
repnz
enter
cmp
pop
or
loopne
sub
fcompl
mov
push
fstpt
push
dec
fbstp
movsb
sub
insb
aad
pop
mov
js
mov
or
out
pop
lcall
and
jno
xchg
es
bound
add
push
pusha
jge
fisubs
loopne
pop
mov
mov
push
scas
cmp
hlt
fadd
mov
push
mov
push
xor
clc
int
push
jo
scas
sbb
sub
sbb
xor
xorb
iret
inc
inc
aaa
or
xchg
das
enter
mov
xor
mov
out
lods
cwtl
push
inc
test
popa
test
inc
mov
jae
mov
imul
outsl
insl
add
int
xor
xor
call
imul
jne
stos
or
jecxz
ret
cmp
lods
mov
rclb
inc
lret
and
cmp
fucomi
test
cwtl
mov
dec
dec
add
dec
and
fmul
dec
add
shrl
add
jge
insl
je
mov
lea
jb
mov
xchg
jae
out
aam
out
sbb
mov
add
mov
repz
lock
add
and
adc
jp
and
shl
mov
hlt
and
clc
stos
push
int3
lds
add
jns
stc
jecxz
push
sub
mov
lret
pop
int3
sahf
fwait
lock
das
push
xor
and
les
es
adc
fcmovnb
test
jae
stc
ja
adc
jge
in
loopne
xor
popa
pop
or
call
or
push
in
pop
enter
add
leave
scas
jb
and
sub
jmp
pop
mov
aaa
lock
dec
jg
sarl
icebp
dec
pop
mov
aas
out
add
mov
jge
cmp
mov
and
pop
adcb
sbb
push
arpl
sahf
and
xor
fsubl
cmp
aam
aaa
adcl
xor
inc
outsb
add
mov
mov
fisubrl
sbb
adc
pop
mov
popa
push
addl
arpl
push
fcoms
inc
cli
jmp
dec
push
jnp
clc
jg
lea
cmp
divb
imul
push
lahf
pcmpeqb
dec
pop
sbb
leave
dec
fcmovnbe
mov
dec
addb
imul
or
stos
jle
addr16
jmp
jbe
mov
bound
pop
mov
jp,pt
lcall
daa
jae
pop
shrl
ficoms
jl
pop
inc
pop
xor
out
mov
stos
pop
insb
out
in
adc
and
or
adc
jnp
repz
in
into
repnz
push
add
subl
fwait
cmp
stc
mov
icebp
in
rcrb
push
ds
subl
add
pop
fdivrl
addl
rcll
gs
lret
or
mov
iret
cmp
jl
hlt
lcall
jp
or
adc
pusha
cmc
mov
imul
mov
cmp
jmp
test
and
mov
mov
rclb
sbb
mov
adc
pop
xor
sbb
scas
stos
repz
jb
mov
mov
fstpl
dec
dec
sub
add
pop
xchg
sub
test
cwtl
cmp
cmp
mov
push
popa
nop
mov
xor
xchg
pop
test
pop
jge
pop
lods
sbb
mov
push
mov
sbb
popf
push
adc
mov
xchg
sub
lahf
loopne
jecxz
movsb
pop
jns
loop
lcall
xor
push
pusha
pmullw
push
or
rcrb
xchg
sbb
inc
xlat
fwait
pop
jp
hlt
jl
fsubs
int3
and
pop
lds
inc
pop
insl
lods
inc
xchg
pop
mov
sti
sbb
xor
fs
out
sub
cmp
and
or
xchg
ljmp
mov
jp
mov
outsl
inc
lret
sbb
cmpsl
xor
fmuls
push
adc
inc
aaa
stos
mov
outsl
add
sub
insl
pushf
xor
sbb
mov
rorl
pop
rolb
push
mov
aas
fprem
mov
jmp
xchg
mov
xchg
in
add
mov
pop
stos
neg
and
mov
fwait
jno
repz
add
test
pop
rcr
jne
mov
cmpl
and
dec
popa
sub
push
outsl
add
ljmp
fnstsw
cld
dec
pop
fmuls
cmp
inc
fisubrs
pushf
xor
pop
pusha
mov
sub
and
aaa
sbb
pop
movsb
pop
xorb
mov
jmp
push
mov
call
mov
push
loope
inc
mov
add
gs
jno
sbb
inc
popa
daa
movsl
jae
or
ja
mov
mov
jno
lahf
mov
jecxz
mov
fsubs
pop
fisttpll
lahf
out
pop
inc
mov
in
je
popf
xor
cmpsb
stos
je
mov
ljmp
adc
xor
or
add
xchg
in
repnz
adc
ljmp
sbb
repnz
push
mov
call
ja
je
cmp
mov
xchg
sbb
mov
gs
xchg
mov
sub
insb
sbb
jb
jmp
adc
jnp
call
fimull
aas
xlat
dec
sahf
push
inc
cld
in
mov
adc
sbb
xor
movsl
mov
dec
jb
cmp
mov
pusha
sarl
sbb
sub
pop
lods
push
pusha
adc
jg
add
fwait
scas
pop
mov
xchg
shl
cmp
xchg
sti
xor
addr16
nop
mov
imul
mov
data16
fisubs
lret
rcll
repnz
xor
sbb
or
and
aad
mov
xchg
inc
aaa
inc
pop
sti
outsl
add
cmp
andl
pop
add
mov
lods
inc
mov
lcall
decl
jo
fldl
test
pop
sbb
nop
inc
jg
push
xchg
test
pop
adc
mov
rolb
out
dec
mov
add
loope
mov
js
fs
mull
add
jg
xor
mov
in
leave
jmp
xchg
and
es
mov
sub
mov
sbb
jno
sbb
inc
iret
mov
cmp
mov
fidivl
daa
jae
sbb
imul
fmuls
adc
scas
pop
sbb
jg
nop
xchg
ljmp
mov
imul
jo
xchg
pop
mov
cmpsl
popl
ss
lods
mov
stos
xchg
or
outsb
xor
clc
mov
xor
out
cwtl
mov
cmp
adc
mov
adc
outsb
loope
sbb
adc
fldl
add
rcll
xchg
iret
je
mov
jmp
lret
push
mov
push
sub
addr16
cmp
fsincos
lret
addb
fldenv
arpl
mov
add
dec
mull
call
cmp
sub
inc
and
sub
int3
addl
xor
fstpt
aaa
pop
orb
push
add
or
cmc
jae
in
testl
js
ficoml
inc
movsb
mov
outsb
xor
jge
sub
inc
fiaddl
xchg
fistpll
scas
sbb
add
adcb
cmp
push
lcall
xchg
in
xchg
cmp
shrb
into
xchg
das
cmp
jmp
fimull
xchg
es
jecxz
cmpsl
jg
icebp
insl
mov
andl
sub
outsb
jp
and
mov
in
cmp
idiv
popa
push
sbb
mov
fists
jmp
cltd
or
inc
push
insb
jl
cs
jg
lcall
jno
mov
lahf
push
cmp
nop
pop
mov
xor
in
cmp
faddl
sub
mov
test
lds
addr16
cs
rol
xor
and
mov
lahf
pop
mov
cltd
sub
fxch
xchg
cmc
mov
mov
outsl
adc
dec
add
jbe
push
in
mov
fs
jle
addr16
mov
mov
mov
test
mov
cmp
or
dec
insl
sub
dec
add
cmp
xor
enter
ror
push
sbb
pop
add
and
cmpb
push
inc
xor
es
xchg
dec
jl
insb
push
mov
cmpsl
and
ljmp
sub
sub
in
and
jb
movsl
testl
add
sbbl
jle
push
stc
mov
dec
test
and
jg
orb
out
xchg
pusha
and
scas
std
test
inc
repz
mov
sbb
pop
shll
outsb
insl
adc
or
call
int3
mov
rolb
mov
xor
push
mov
sub
inc
lea
addb
push
aas
fwait
imul
popf
pusha
jo
jnp
test
mov
sahf
cli
pop
lock
test
sbb
cmp
lds
jae
aad
out
pop
xchg
ret
adc
xor
adc
sub
mov
repz
fwait
add
sarl
fbld
loop
fistl
lods
sub
pop
mov
cld
dec
movsb
mov
sub
pop
xor
js
pop
imul
lcall
mov
push
cmp
sbb
in
js
std
mov
dec
clc
sbb
jae
call
mov
cmp
ja
enter
es
adc
insl
xchg
sbb
or
mov
jecxz
push
ja
jmp
push
aam
ljmp
lods
gs
or
push
je
scas
mov
cltd
pop
push
dec
ret
sbb
movsb
movsl
sbb
push
scas
fxch
js
add
iret
lds
mov
and
sahf
mov
lea
add
insb
push
add
mov
cmc
sbb
or
push
lods
mov
dec
cwtl
jne
addb
ja
sbb
cs
paddsw
pop
sbb
sub
aad
mov
or
sbb
bound
inc
or
cmp
loope
mov
push
imul
mov
push
mov
jb
mov
imul
sahf
pop
rep
test
cli
add
inc
push
sbb
push
out
cmp
add
mov
cwtl
into
arpl
fsubl
leave
push
dec
jge
addl
xor
enter
and
lahf
ljmp
rcll
mov
test
fdivp
sub
jae
aam
xchg
in
mov
in
scas
push
mov
cs
adc
cltd
mov
imul
jg
incl
hlt
popa
in
mov
push
cwtl
mov
lcall
mov
cmp
das
xor
mov
scas
push
out
add
push
push
mov
cs
cmpsl
mov
xchg
pop
push
inc
enter
xorl
add
cmp
out
in
sti
dec
dec
sbb
mul
sbb
xchg
nop
pop
sbb
je
push
sub
les
pop
jp
pop
shlb
insb
mov
mov
push
add
insl
inc
shlb
leave
cmpsl
xor
pop
mov
stos
cwtl
shrl
inc
mov
dec
xchg
fstl
aad
movsl
insl
mov
mov
cltd
in
xchg
push
ret
add
xchg
int
fs
out
sub
cltd
mov
sbb
imul
aam
mov
cld
xchg
push
cmp
pop
or
cmp
outsl
fwait
jne
sbb
movsl
jne
fisttpll
xchg
sbb
rclb
aam
les
add
push
xor
js
pushf
jo
dec
push
cwtl
cwtl
and
lret
sbb
movsl
bound
jae
pop
das
in
shll
inc
mov
mov
add
or
xchg
sub
movsb
xchg
and
out
cmpsb
cmp
call
sub
gs
fidivrs
fsubrl
push
arpl
movsl
enter
sti
push
mov
cmpsb
sbb
clc
shrl
call
rcrb
pop
jp
dec
dec
ret
fdiv
and
mov
pop
mov
cmp
cmp
push
lcall
add
mov
das
and
add
mov
aad
data16
cmp
lock
scas
pop
je
add
lret
sub
call
aam
ror
inc
movsl
jnp
jmp
jp
call
mov
pushf
push
add
daa
lcall
mov
cmp
imul
repnz
push
ret
inc
les
mov
ljmp
jp
push
cmp
aas
pushf
adc
movb
cmp
push
push
xchg
xchg
std
cmp
add
and
cs
test
jnp
fs
mov
push
adc
ljmp
xchg
aam
push
dec
sub
lret
or
xlat
lods
ljmp
push
in
push
int
shrb
jno
mov
xorl
ljmp
xor
mov
xchg
arpl
or
loopne
das
and
cmp
push
sub
xchg
mov
add
inc
out
clc
js
pusha
cmp
cmp
ret
xchg
cmp
movsb
push
push
cmp
jns
dec
mov
fistps
jmp
addr16
cs
lea
pop
aam
shll
xchg
jb
lret
mov
mov
lcall
or
cwtl
jge
out
jbe
std
nop
repz
daa
ret
daa
stc
pop
ljmp
inc
xor
mov
xor
stos
xchg
jns
sahf
popa
inc
jecxz
cmp
sub
push
mov
cmp
pushf
outsb
dec
sbb
sub
ficoml
sub
add
aaa
je
movsb
push
pop
ljmp
ljmp
or
jge
leave
nop
sub
dec
cmp
aad
inc
jg
jo
adc
ret
push
inc
out
js
mov
icebp
aas
pop
sub
jne
gs
fisubrs
pushf
repz
sbb
test
push
inc
lods
mov
loop
mov
adc
dec
bound
jp
into
cmp
in
xchg
ljmp
jb
xor
sub
and
ja
dec
adc
gs
push
pop
sbb
sbb
or
inc
push
xchg
test
xlat
pop
outsl
js
mov
cmpb
fsubl
pop
sbb
lock
jecxz
dec
cmp
or
lcall
ret
sbb
nop
mov
or
inc
push
out
outsl
sub
insb
popa
cmp
sub
mov
js
xlat
sarl
popf
jo
mov
sub
push
pushf
ljmp
sti
xor
in
pop
lea
in
ret
inc
xlat
add
mov
mov
push
add
pop
icebp
mov
out
pusha
out
dec
in
mov
push
lods
mov
pop
mov
jle
stc
inc
sbb
mov
mov
pop
and
jns
fcomip
mov
push
push
or
add
sub
js
pop
adc
divb
into
hlt
inc
jg
fdiv
push
push
xor
gs
add
mov
add
sub
popf
xchg
jne
xor
jl
push
cmpsl
loope
xor
jbe
sub
fcoml
mov
inc
inc
push
stos
and
stc
adc
jnp
outsb
lods
cwtl
enter
sub
loopne
sahf
iret
negl
aam
xchg
jne
je
mov
cmp
dec
adc
adc
adc
pop
out
add
xchg
in
popf
mov
repz
push
lret
jo
xchg
sbb
cmpsl
gs
cmp
aam
sbb
mov
fwait
test
test
mov
popf
lds
jl
mov
enter
sbb
ljmp
sbb
shrb
xor
mov
pop
es
mov
je
pop
movl
or
hlt
sub
cmpsb
or
and
sub
mov
movsl
sbbb
rcll
imul
jno
lods
sarb
inc
sar
inc
leave
add
ror
bnd
repnz
xor
stos
mov
sbb
ret
inc
push
mov
rorl
cld
sarb
mov
hlt
adc
fsubr
pop
repnz
jle
and
inc
jnp
inc
adc
push
mov
xor
xor
sti
xchg
popf
adc
and
xor
mov
mov
aad
ret
adc
es
adc
hlt
cmpsl
lock
pop
xchg
mov
scas
dec
xor
add
sbb
cmp
test
out
sub
push
cmpsb
pop
adc
mov
fwait
aaa
cmp
or
negl
sbb
xchg
xor
outsl
sbb
dec
mov
je
push
or
sbb
push
push
testb
jno
push
repnz
jns
loop
ret
push
bound
or
xor
in
imul
insb
and
jne
inc
cmpsb
sub
mov
cs
pop
cmpsb
repnz
stos
dec
jmp
sbb
jne
sbb
xor
shr
cmp
lods
adcl
and
divb
jl
dec
and
or
xchg
outsb
iret
mov
inc
leave
sbb
jbe
arpl
sti
push
push
jbe
push
leave
fucompp
movsb
push
outsb
fisttpl
cmp
mov
jge
inc
rorb
xor
in
imul
or
ret
stos
sbb
xchg
xchg
push
andps
fucomp
lret
adc
xchg
out
pop
push
xchg
jmp
push
xchg
addl
push
pop
lcall
jb
lea
jmp
xchg
testb
sub
mov
pusha
cmp
or
jno
sbb
aad
out
cld
fucomp
fldt
sub
mov
add
xor
arpl
fnstenv
pop
into
sub
in
add
sbb
gs
in
scas
fsubrl
pop
stc
addl
inc
outsl
pop
loope
loop
cmc
lock
pop
pop
cmc
mov
ss
jbe
cltd
or
test
daa
imul
push
out
lods
add
enter
rorl
nop
leave
xchg
lret
dec
mov
sahf
inc
lock
cs
pusha
std
and
mov
mov
xor
sbb
pusha
imul
xchg
xor
rcll
cs
ficomps
test
adc
in
shrl
pop
add
fildll
push
sub
fstpt
clc
mov
lea
jno
jne
mov
and
cmp
test
jmp
inc
pop
pop
inc
push
or
rclb
sbb
xchg
test
inc
sub
push
mov
xchg
mov
rorb
mov
pop
addr16
jge
mov
pusha
stos
push
prefetch
negb
mov
mov
in
and
mov
pop
dec
and
add
into
jnp
negl
mov
mov
inc
loopne
stc
dec
mov
push
cld
xorl
push
adc
sbb
arpl
scas
flds
sbb
fstl
nop
in
pop
jno
in
adc
lea
ret
js
jbe
lcall
bound
addr16
mov
outsl
int3
add
xor
fnstcw
sbb
jecxz
sbb
mov
add
push
cmp
mov
or
jae
call
pop
sbb
mov
lahf
dec
ljmp
xlat
popf
mov
sub
aas
pop
dec
mov
push
cmc
loope
xor
fcompl
pop
mov
aam
lds
out
lds
add
ja
in
sub
jns
xchg
andl
cmp
jge
fadds
xor
sahf
pop
pop
xor
dec
push
fbld
xchg
stc
jo
fstl
or
out
xchg
insl
cltd
xchg
test
and
repz
fwait
mov
das
jns
lahf
imul
cmc
push
outsl
push
push
xor
mov
jge
add
xor
mov
push
push
push
inc
repnz
mov
adc
fs
sub
mov
jbe
mov
sub
mov
jae
mov
call
lds
repnz
push
in
mov
mov
movsb
pop
in
lea
dec
sbb
or
and
xchg
lods
adc
loop
and
lods
inc
pop
or
cmp
test
stos
jp
mov
je
jno
pushf
pop
andl
clc
in
popf
aaa
stc
popf
pop
sbb
pop
dec
inc
mov
pop
mov
push
movsb
inc
xchg
loope
repz
lock
hlt
cmp
jns
add
or
nop
push
imul
mov
sti
imul
insb
pusha
mov
or
pop
xor
mov
loope
cmp
out
jbe
or
test
cmp
lahf
cmc
jae
aam
dec
sub
or
lods
scas
adc
int
jne
adc
pusha
xchg
inc
cltd
ficoml
push
out
pop
mov
mov
popf
fs
xchg
sbb
adc
mov
testb
addr16
in
push
lcall
push
stos
mov
shrl
jge
clc
xor
sub
cmpsl
xor
pusha
in
mov
fstps
mov
lret
lock
rorb
lods
mov
add
movsl
dec
pushf
add
daa
fs
popf
push
mov
mov
lahf
dec
xor
lods
pop
mov
adc
lret
enter
clc
jns
sub
dec
jmp
cld
xchg
push
cs
out
or
lret
mov
push
gs
dec
in
and
adc
lcall
mov
xor
je
loopne
ljmp
pop
dec
cmc
mov
cli
sub
mov
arpl
xor
jb
movsl
in
sbb
or
test
imul
inc
in
rol
adcl
push
mov
int
lock
enter
xor
jle
scas
int
andl
aad
or
js
test
mov
aam
inc
loope
shll
aas
sbb
movsb
cmp
sbb
push
mov
movsb
jl
mov
push
dec
and
arpl
xor
push
jecxz
mov
or
and
sub
loop
daa
mov
dec
sarl
sub
jmp
pop
sbb
cmp
or
xchg
stc
xchg
popa
pop
push
loopne
mov
sbb
out
jmp
pop
add
mov
jge
mov
push
inc
scas
cmp
lret
out
sbb
in
xchg
xchg
sub
je
adc
mov
sub
xchg
imul
out
and
ja
sbb
sub
xchg
test
cmp
or
inc
adc
popf
icebp
mov
push
mov
push
int3
jb
push
push
mov
sub
pop
mov
add
test
movsl
mov
xor
fbstp
xor
lods
adc
sbb
bound
fsubrl
xchg
push
test
pop
sahf
int3
dec
mov
call
lods
and
mov
xchg
aad
imul
mov
fdivrl
addr16
popf
pushf
xchg
insb
cmp
inc
sub
cmp
mov
jmp
xor
arpl
pop
or
pop
stos
test
in
and
in
clc
mov
push
and
loopne
adc
call
mov
sub
lods
sub
int3
inc
bound
sub
pop
scas
pxor
push
mov
mov
lret
ds
dec
aas
loop
in
xchg
cwtl
and
insl
and
sub
cld
lcall
dec
pop
icebp
in
in
adc
push
jge
lret
clc
lcall
ja
dec
int
mov
inc
jl
jp
mov
js
mov
xchg
out
mov
mov
mov
ret
inc
cld
cmpsb
loop
scas
mov
pop
mov
mov
mov
in
iret
mov
pop
divl
fwait
mov
mov
inc
pop
rcl
loopne
cmp
fadds
xor
cmpsb
out
int3
stc
adc
clc
arpl
xor
lret
insl
dec
adc
pop
mov
imul
xor
fidivrs
mov
aad
mov
inc
daa
and
inc
ret
push
sub
add
sbb
ret
push
emms
rcl
mov
xor
lods
sbb
sbb
cmc
cltd
fwait
lea
adc
iret
call
push
adc
xchg
dec
adc
lahf
pop
cmp
add
dec
imul
mov
xchg
aad
jp
pop
pop
fst
loopne
adc
cmc
inc
sahf
mov
divl
xchg
mov
enter
mov
mov
lds
mov
imulb
xchg
adc
mov
mov
and
pop
int3
jno
and
cld
rcrl
lock
push
pushf
push
scas
imul
fldenv
fwait
or
push
dec
jns
jae
sahf
sbb
fs
fildl
sti
or
adc
pop
pop
push
sti
xor
lret
xchg
std
popl
in
jo
pop
in
jecxz
insb
aam
cld
subl
mov
cmp
cli
es
out
shr
addr16
jmp
cli
and
inc
fdivr
jne
shrl
pop
ljmp
inc
dec
hlt
adc
fsubr
repz
fistpll
sbbb
mov
das
xchg
pop
stos
mov
das
jns
inc
cld
test
adc
push
shll
push
imul
xor
addr16
popl
adc
sti
outsb
mov
loope
xor
sub
xchg
je
xchg
adc
mov
out
push
minps
sub
mov
jnp
sbb
stos
push
xor
in
repnz
inc
dec
aam
nop
adc
dec
loopne
mov
and
lret
ja
xor
jno
jp
cs
cmpsl
aad
xor
mov
and
andb
jmp
addr16
aam
sbb
dec
dec
cmpsb
add
aas
xlat
and
adcl
in
cmp
cwtl
hlt
or
cli
adc
imulb
outsl
sbb
mov
xor
call
inc
push
pop
lret
add
popf
push
xor
jecxz
sbb
sbb
mov
inc
cmc
jle
jmp
or
inc
sbb
mov
icebp
jnp
cmpl
mov
movsb
xchg
mov
dec
push
xlat
rcrb
and
sbb
sub
ja
mov
aaa
das
cmp
cli
sbb
mov
popa
jne
imul
aaa
int
shlb
pop
fisttpl
mov
ja
dec
mov
mov
divb
imul
cwtl
mov
test
out
dec
fisttps
inc
sbb
ja
mov
ficoml
setae
xchg
sub
lods
xor
jns
sbb
jecxz
rorl
lea
pop
xchg
mov
add
push
stos
enter
xchg
int
in
cmpsl
in
push
mov
add
je
pop
outsl
lods
mov
mov
loop
pop
dec
cltd
loop
inc
inc
xchg
les
lds
jge
stos
add
mov
test
jl
xchg
cmpsb
mov
and
mov
cmpsb
lahf
push
push
into
mov
inc
xchg
js
roll
imul
stc
xchg
psubusb
mov
call
test
test
ja
adc
leave
aad
cmp
sub
bound
adc
adc
push
data16
ljmp
push
stc
adc
inc
jmp
aad
jge
cmp
mov
je
add
lods
shl
lods
sub
adc
jp
stos
ret
jns
mov
in
je
cs
rolb
push
stc
add
in
sysret
clc
fisubrs
push
or
push
stos
mov
inc
or
das
push
cmp
dec
into
loopne
or
xor
aas
add
and
jg
testl
or
aas
ret
arpl
push
push
cltd
std
jle
daa
nop
xchg
popf
je
cltd
pop
sbb
sbb
addb
cld
cmp
test
push
lock
mov
stc
les
xor
cmp
mov
sub
mov
xchg
lret
push
xor
hlt
dec
test
jbe
out
movsl
push
test
inc
dec
mov
fcoml
hlt
bound
fstpt
cmp
mov
scas
xchg
pop
mov
insl
lods
ljmp
add
adc
sub
imul
sub
mov
fdivrs
xchg
pop
les
lock
mov
mov
dec
pop
pop
cmpxchg
js
push
sub
dec
pushf
roll
in
inc
dec
sbb
test
add
pop
lret
cmp
or
mov
cmp
xor
test
push
mov
rclb
shrl
adc
fincstp
dec
push
cltd
sbb
pop
and
and
fs
mov
dec
pop
push
daa
fsubl
clc
dec
lods
lds
enter
xchg
push
mov
push
pop
inc
lretw
xchg
mov
in
push
fidivrs
repnz
push
rcr
xor
test
or
rol
rcll
sti
in
adcl
xchg
sub
shrb
jmp
scas
add
movsb
xor
cmpb
and
mov
cmp
mov
jno
pop
pop
push
dec
dec
xlat
hlt
jne
push
fnstcw
xor
push
js
cli
mov
paddsw
xchg
por
inc
subl
jmp
fisubrl
sahf
pop
rcrl
sub
push
xor
pop
mov
cli
repz
push
mov
inc
mov
xchg
jno
insl
xor
jns
js
in
push
aad
mov
lock
mov
loope
aaa
icebp
xchg
in
cld
or
mov
das
cli
mov
and
cli
cmp
rclb
cld
pop
rclb
sub
loopne
pop
ror
adc
movsb
mov
pop
lods
and
dec
aaa
jnp
jg
push
push
add
sub
mov
sbb
sub
cltd
mov
lcall
pop
arpl
shl
insb
out
loope
mov
mov
add
enter
stos
fimuls
dec
push
or
test
mov
aaa
daa
push
movl
stos
adc
lea
iret
sbb
repz
scas
in
push
inc
jg
pop
out
push
hlt
push
xor
jmp
imulb
sub
dec
imul
mov
faddl
mov
es
xor
and
fidivs
xlat
sub
mov
sub
mov
mov
mov
dec
pusha
adc
aad
out
shll
cs
pop
into
push
adc
xor
in
insb
push
dec
or
scas
and
add
add
dec
inc
or
loop
jbe
cmp
jmp
repnz
loopne
ljmp
push
test
ja
aaa
shll
cmp
dec
jg
cmp
cmpsl
xchg
les
dec
mov
push
cmp
cmpsl
fstl
xchg
jo
or
mov
outsb
mov
arpl
inc
mov
mov
movsb
inc
ret
mov
nop
dec
pop
movsb
mov
pop
jne
pop
add
je
add
dec
cli
push
pop
mov
sub
lret
and
pop
sti
lcall
and
inc
pop
cwtl
je
clc
xchg
jp
dec
pop
mov
ss
scas
push
call
push
mov
testl
rolb
in
iret
jae
cmp
pop
shll
and
inc
xor
lea
lret
mov
add
push
cmp
in
nop
imul
stc
cld
jecxz
mov
iret
cmpsb
fldl
mov
lock
rorl
repnz
mov
data16
or
int3
xchg
add
mov
add
stos
lahf
imul
inc
test
dec
mov
es
or
push
scas
sbb
mov
inc
loope
lret
and
pop
out
adc
inc
jb
dec
cltd
insb
mov
mov
ss
frndint
dec
xor
sbb
sub
outsb
outsb
outsb
flds
push
xchg
imul
push
fadds
inc
cmp
outsl
leave
jmp
xor
mov
dec
lods
xor
lahf
xlat
lods
pop
das
add
into
xor
test
adc
mov
jo
xchg
mov
pop
addr16
cmp
cmpsb
jmp
sub
inc
cmp
mov
adc
loopne
div
xor
dec
out
sbb
xchg
sub
jnp
xor
or
fcoms
pop
fwait
xchg
das
adc
and
jb
push
fimull
popa
les
stos
cltd
mov
repz
mov
mov
mov
sahf
loop
aad
loop
mov
addb
cmp
test
and
or
add
stos
add
sub
add
mov
mov
and
push
imul
xchg
cli
rorb
fnstenv
xchg
ds
ret
jo
mov
cmp
je
adc
sub
test
nop
pop
or
orl
cmc
js
cmp
scas
jmp
and
aas
mov
iret
sbb
sahf
iret
mov
shlb
outsl
jl
fiaddl
and
cmpsb
pop
mov
mov
loopne
xorb
cmp
mov
cld
fbstp
or
rcrb
mov
daa
cmpsl
xor
rcrl
push
sahf
pop
xchg
cltd
addb
int3
movl
xchg
or
jo
mov
out
cmc
outsb
movsb
fsubs
jmp
cmpsl
sub
and
enter
add
xchg
out
loopne
rcrb
popa
imul
or
leave
les
jg
std
pusha
and
dec
cmpsl
fsubs
sarb
mov
test
ljmp
out
xor
mov
stos
adc
mov
push
pop
scas
scas
stos
adc
or
stc
cmpsb
shll
and
pop
mov
frstor
mov
lods
lret
and
popf
pop
add
loop
and
or
xor
movsb
ss
inc
jno
in
shr
mov
jnp
mov
lcall
jge
int3
leave
xchg
dec
add
shll
mov
ret
lea
lods
cmp
pop
cs
mov
mov
cmp
jmp
inc
loope
push
test
inc
ret
adc
scas
mov
rcr
test
mov
mov
enter
mov
adc
ss
pop
lock
lcall
mov
xchg
jne
add
sbb
cmp
lret
enter
adc
hlt
scas
test
sbb
mov
icebp
push
and
cmp
sahf
cmp
ljmp
mov
or
jae
dec
ss
aam
inc
mov
and
nop
lahf
sbb
pop
and
mov
sbb
call
dec
and
xchg
jne
hlt
sub
or
das
jle
cld
adc
sub
stc
mov
jle
push
aaa
shlb
enter
add
mov
xor
aad
cs
dec
push
mov
in
pop
add
push
in
scas
pop
push
sbb
daa
std
ficomps
pushf
push
testw
imul
mov
pop
xor
fcmovne
les
dec
push
imul
pop
adc
das
mov
add
mov
hlt
lret
lds
push
ret
pop
lock
mov
lds
sub
xchg
dec
mov
xor
dec
cwtl
je
mov
ret
mov
idivl
pop
rorb
faddl
sti
pop
js
gs
iret
daa
lcall
push
inc
out
push
mov
filds
std
icebp
xor
mov
dec
jg
cmp
or
into
iret
aad
outsb
popf
mov
jmp
sub
jle
cmp
jno
in
jge
xchg
sbb
pop
dec
pop
sti
sub
rclb
popf
enter
movsb
mov
pop
sub
inc
cmpl
cmp
cmp
mov
js
dec
mov
lods
shlb
dec
and
push
cmp
cvtdq2ps
xor
mov
mov
je
push
push
lea
emms
aas
sahf
insl
jge
mov
std
int
sub
rcrb
aas
pop
mov
jns
fldenv
sub
mull
loop
out
or
cmp
inc
jmp
fstpl
stos
and
pop
inc
or
iret
in
das
fs
orb
pop
jl
dec
pusha
inc
es
daa
mov
and
das
movsl
fsubs
mov
into
dec
fyl2x
and
mov
inc
pop
jg
xchg
pop
dec
adc
je
or
or
adc
stos
sub
clc
les
stos
jb
adcb
jl
dec
push
jp
push
leave
mov
js
or
sub
out
xchg
stc
fisttpll
pop
mov
xor
repz
xor
mov
cli
dec
xor
inc
popa
hlt
cmp
ret
in
xchg
cmp
loopne
and
ds
adc
mov
push
mov
icebp
push
fcoms
jecxz
inc
adc
inc
mov
inc
push
xor
stc
sbb
cli
pusha
jl
addr16
cmpsb
iret
add
jp
adc
push
test
inc
sbb
lahf
fcoml
daa
sbb
int3
shll
mov
and
inc
or
shrl
or
jo
add
jecxz
dec
pop
add
push
mov
inc
out
subl
mov
cmpsb
popf
xchg
pop
dec
rcl
xor
stos
in
dec
addb
cmpsb
add
mov
push
xor
es
mov
rol
cli
sahf
loop
jnp
or
addr16
jmp
cltd
and
aas
sub
pop
inc
jns
flds
idiv
pop
lcall
cli
sbb
pop
xor
and
mov
pop
test
jg
mov
test
and
adc
cmp
inc
test
shll
cmp
cmp
xor
jbe
push
daa
scas
jle
in
in
fcomp
jae
pop
ficoms
dec
sub
loopne
decl
into
insl
popl
mov
or
fcomps
fmulp
mov
test
fldenv
mov
in
sub
or
xor
sub
xchg
xchg
out
mov
jbe
push
cmpsl
pop
mov
pop
or
test
psubsb
add
aad
ret
ret
fcomi
push
push
xchg
mov
insl
imul
das
cmp
stos
scas
andl
adc
xor
xchg
popa
adc
stos
movsb
sbbl
sti
mov
mov
mov
adcl
mov
or
dec
adc
xlat
test
or
mov
ss
add
lret
neg
je
daa
sub
outsl
jecxz
adc
inc
mov
icebp
jge
pop
ss
sbb
shrb
test
sub
add
inc
mov
add
loop
lret
push
lds
pop
xor
ljmp
lcall
movsl
test
cmp
mov
xchg
jg
inc
jnp
inc
ret
inc
xchg
adc
insl
es
std
iret
cmp
lock
lret
shlb
inc
pushf
out
xlat
cli
fmull
sub
pop
or
pop
jle
push
push
movsb
push
xchg
add
jle
loopne
and
sub
xlat
out
adc
das
clc
hlt
mov
jne
xrelease
xchg
or
ret
jbe
pop
adc
rcrl
push
push
push
fs
ret
test
idivb
lds
rcll
mov
lret
data16
pop
in
push
lods
outsb
push
mov
iret
fmull
inc
rorb
test
aas
pusha
decl
filds
test
xor
sub
rcll
pop
cmp
mov
rclb
sbb
fnstcw
push
or
test
dec
in
out
in
pop
rorl
adc
fildll
orl
popa
xlat
shll
cltd
pop
dec
push
mov
icebp
pop
jns
xor
insb
dec
out
ret
test
push
cmp
sbb
pusha
mov
push
andl
loop
add
adc
add
ret
orl
mov
test
ja
mov
add
xchg
sbb
dec
dec
bound
cld
icebp
cmp
cmpsl
push
or
insb
push
cltd
cli
pop
repnz
lret
fnsave
lret
mov
or
in
inc
andl
inc
add
data16
call
mov
fldl
fwait
ds
push
hlt
xchg
or
pop
lcall
sub
out
bound
pusha
cmp
ror
mov
sub
sbb
gs
ss
sbb
mov
dec
jo
aas
pop
mov
mov
ja
rep
lret
adc
shl
sbb
adcb
add
mov
mov
sbb
insl
aam
je
lods
push
insl
push
stc
add
popa
mov
pop
mov
orb
movsb
push
nop
sub
jbe
cmp
push
arpl
imul
jo
hlt
jecxz
push
and
mov
movsl
in
dec
repnz
addr16
cmp
xchg
mov
ret
and
dec
shrb
js
cmp
js
xchg
pop
dec
int3
lahf
dec
pusha
daa
pusha
mov
inc
and
inc
lret
cmpsl
add
adc
push
gs
popf
cmp
adc
into
jge
lock
fs
dec
pop
es
decl
xorl
xor
pop
sub
movsb
iret
mov
bts
adc
fwait
stc
rcrl
inc
icebp
nop
push
es
add
fcmovu
add
jp
inc
dec
mov
repz
stc
xchg
push
andl
jnp
lea
dec
push
jo
fcoms
sbb
sbb
cld
cmc
jne
pop
loop
jle
stc
adc
cmpsl
pop
mov
or
sub
or
cld
jbe
inc
mov
inc
cld
fisttpl
sub
imull
or
cwtl
lret
js
sbb
mov
fsubs
lret
xor
and
sub
add
mov
jae
mov
pop
xor
aad
adc
push
movsb
scas
shlb
imul
test
rorb
xchg
or
adc
inc
jae
jb
stos
push
inc
fsubl
enter
dec
cld
sbb
ss
montmul
cmpsb
and
mov
inc
xlat
mov
insl
mov
popl
fwait
mov
pop
pop
popa
inc
cmpsl
and
imul
call
mov
push
push
add
dec
subb
lcall
mov
sahf
dec
scas
pop
call
adc
cs
dec
aad
jg
mov
dec
xlat
or
outsl
jns
mov
dec
mov
and
bound
movb
jmp
imul
or
roll
sbb
notb
imul
test
sahf
sbb
add
inc
stos
jae
mov
dec
and
mov
rolb
push
andl
mov
ret
cwtl
scas
incb
in
rcrl
sbb
in
std
mov
ret
test
dec
or
sbb
xor
cmp
mov
shlb
cmp
sbb
imul
es
mov
jge
xchg
jle
jno
xor
sbb
push
inc
lahf
dec
cmp
or
push
jne
frstor
shll
out
inc
loopne
cld
cmpsl
lods
andps
inc
jnp
jns
das
xor
sub
pop
jl
cwtl
jns
push
sbb
xor
mov
shll
cli
enter
test
aas
add
aam
fsubr
in
stos
sub
xchg
push
push
sbb
out
ret
xor
sub
repz
fstpl
in
pop
sahf
fistps
dec
mov
jns
data16
andl
sti
ljmp
xchg
mov
mov
adc
or
fsubs
in
inc
std
pop
inc
fdivrs
and
and
lret
jo
mov
push
test
das
es
je
test
in
lods
lret
xchg
popa
jecxz
adc
fbld
or
jp
push
repnz
and
cmpsb
insb
out
repz
imulb
add
loope
out
stos
loopne
ja
pushf
fidivrl
insb
std
imul
lret
enter
cmp
call
and
xchg
sti
scas
sub
fdivrs
sub
imulb
vmulss
pop
xor
fnsave
xchg
rcl
xchg
xchg
mov
inc
mov
and
pop
adc
pop
jbe
ret
cmp
int
lea
push
addr16
rorb
bound
out
popf
sbb
scas
mov
imul
push
repz
pop
int3
sti
test
cs
gs
imul
pop
push
fstl
dec
mov
xchg
fstpt
movsb
or
pop
pop
mov
lods
sub
add
sub
fiaddl
jecxz
sbb
adc
imulb
cmp
ja
xchg
and
dec
xchg
dec
mov
aaa
pop
aam
mov
xor
push
mov
sbb
adc
sti
push
xor
mov
cs
mov
mov
outsl
push
cmpsl
ds
xchg
push
enter
and
pop
lods
retw
jle
insb
out
adc
bound
sub
jb
push
adc
lret
lock
stc
imulb
lods
jg
xchg
push
shlb
std
mov
sti
fnstenv
shll
jo
sahf
testl
mov
and
lock
adc
push
aam
mov
ficomps
xor
mov
pop
mov
icebp
dec
repnz
rorl
out
cmp
out
sub
lock
adc
sbb
xchg
into
dec
adc
js
movsb
sarb
sub
sub
les
mov
jl
jp
daa
scas
mov
ja
clc
xchg
test
adc
mov
out
cmp
inc
sti
cmp
popa
xlat
pushf
shlb
pusha
out
pop
pop
push
stos
int3
or
sub
mov
jmp
and
cmp
fs
inc
mov
mov
mov
push
push
mov
mov
and
bnd
testl
test
das
popw
fwait
push
inc
dec
xchg
popf
sbb
pop
mov
addr16
je
cmp
or
push
iret
dec
inc
sbb
push
call
mov
or
lds
sub
mov
cmpsl
pop
cmc
shrl
cld
inc
les
addl
scas
outsb
dec
leave
sbb
or
pusha
lea
sbb
xor
adc
mov
mov
stos
orl
out
add
lret
test
imul
adc
push
add
ja
popa
dec
inc
push
ds
test
shlb
gs
mov
mov
dec
daa
aaa
mov
cmp
lock
jne
test
adc
push
cmp
out
mov
andl
pop
rcrl
scas
sbb
pop
mov
or
fsubs
mov
aaa
fcom
dec
in
cmpb
pop
loopne
insb
inc
cmpsb
push
xor
scas
jge
out
clc
sbb
dec
lods
fnstsw
mov
push
test
adc
pop
jbe
push
dec
test
jb
sbb
jne
mov
lea
dec
out
sbb
out
aaa
imul
adc
lahf
mov
push
stos
pop
mov
data16
shrb
popf
std
mov
push
lods
ret
adc
insb
add
jnp
xor
pop
pop
out
cmp
pop
push
sbb
test
jns
aaa
out
imul
imul
sbb
jnp
add
clc
xchg
cmp
je
add
adc
pusha
nop
push
scas
or
fisttpll
dec
in
gs
sub
xchg
mov
sub
aaa
xlat
push
js
fstl
stos
fistpll
int3
call
xor
sub
push
lods
scas
mov
inc
scas
sar
and
mov
mov
mov
mov
or
adc
or
ret
les
fistl
mov
scas
inc
stc
fisubrs
pop
into
incl
stos
mov
icebp
pusha
in
aaa
jbe
sbb
sub
fnstenv
enter
or
xchg
pop
or
pop
test
cmp
lahf
pop
clc
mov
data16
pusha
cmp
lods
cmp
stos
jg
and
div
testl
iret
sub
std
test
jae
imul
xchg
jecxz
rorl
fs
adc
dec
add
fnstsw
call
jle
loopne
push
imul
mov
xchg
stc
dec
into
mov
adc
dec
out
scas
adc
sub
sub
inc
leave
in
and
in
cmp
mov
xor
cmp
adc
and
push
cmp
push
inc
aad
adc
ja
push
fldl
gs
inc
dec
pop
lods
adc
movsl
xor
jno
jge
ret
cmp
mov
mov
mov
test
test
or
mov
add
adc
jecxz
rclb
scas
outsl
dec
jg
push
xlat
xor
out
dec
mov
hlt
insl
adc
cmp
insl
mov
aas
aaa
in
mov
or
cmp
cmc
sbb
inc
test
cwtl
push
js
sbb
mov
xor
xor
sbb
dec
mov
cmp
mov
imul
daa
inc
push
stc
mov
mov
test
or
popl
test
out
and
sbb
jmp
adc
cmpsb
xchg
into
cli
fmul
pop
adc
aaa
ficoms
jne
insb
pop
mov
rclb
push
cmpsb
mov
dec
fisubl
lods
into
stos
ja
lock
and
inc
leave
pop
scas
loope
inc
rcrl
xor
lret
test
inc
stos
and
push
xchg
mov
and
mov
into
xor
pop
mov
jle
ss
cmpsb
inc
rcrl
add
inc
dec
jge
push
loop
hlt
daa
test
pop
outsb
stc
cmp
imul
lahf
cmp
xor
and
rolb
pushf
arpl
sbb
ret
movsb
push
ds
cltd
test
inc
cmpsl
roll
out
inc
push
arpl
fcmovb
pop
push
daa
jns
imul
and
dec
popa
mov
nop
clc
pop
cmpsb
scas
shlb
jns
sub
test
mov
es
and
shlb
rclb
dec
xchg
mov
inc
xorb
mov
out
sbb
push
stos
dec
xchg
cmp
sbb
lret
adc
loop
cmpsb
imull
test
or
ljmp
jnp
jb
xorl
mov
in
fwait
dec
adc
data16
mov
loope
adc
into
movsl
cmp
inc
adcl
je
mov
adc
sub
dec
mov
sub
dec
pop
lds
test
mov
int
and
sbb
sub
repz
add
cmp
in
xlat
and
and
stos
jle
inc
or
jne
or
imul
cmp
mov
xor
pop
fwait
sbb
test
insb
popf
push
dec
adcl
lahf
fdivrl
mov
sub
out
call
ljmp
ficoml
inc
leave
or
xchg
mov
mov
sbb
mov
mov
mov
pusha
cwtl
jl
push
dec
jns
cmp
dec
adc
lahf
push
sti
lcall
lret
push
sbb
add
inc
inc
ja
pop
ficoms
xor
daa
pop
inc
int
lcall
loopne
clc
lcall
and
push
sbb
mov
sbb
es
subb
das
vunpckhpd
das
xchg
mov
jecxz
pop
push
inc
lods
pop
dec
mov
aad
imul
push
sbb
stc
xor
in
mov
add
xlat
insb
mov
jmp
loopne
leave
adc
sub
icebp
push
push
daa
or
pop
add
jns
jne
test
inc
add
cmpsb
lahf
cli
sbb
movsb
icebp
sub
repz
std
mov
or
push
or
mov
cmpsl
imul
jae
fnstcw
sub
int
xor
sub
xorl
mov
outsb
imul
in
adcb
mov
mov
mov
daa
fcmovbe
mov
loopne
mov
inc
pop
mov
cmp
xchg
mov
mulb
pop
daa
sbb
mov
xchg
adc
js
xlat
pop
mov
cltd
fcomip
inc
in
mov
out
mov
int
mov
and
pop
mov
xchg
inc
sbb
shll
decl
xchg
xchg
cmc
xor
cwtl
js
jecxz
rcrb
jge
int3
and
jbe
push
and
jne,pn
jne
xor
loopne
push
bound
cld
std
mov
jg
or
xlat
add
mov
push
xchg
enter
or
jp
popf
jecxz
or
add
andb
ret
jmp
push
add
iret
std
xor
push
insl
inc
xor
fs
out
mov
jb
stos
loopne
xchg
push
icebp
pusha
fnsetpm(287
shr
or
xor
into
out
inc
adc
iret
jb
repnz
mov
sbb
cmpsl
mov
test
push
add
or
xchg
cmp
scas
adc
xchg
mov
adc
insb
fimull
cmc
imul
mov
cld
ljmp
stos
mov
aaa
cld
mov
out
dec
test
sub
jl
inc
push
mov
add
dec
movl
xlat
jmp
or
arpl
cltd
shlb
mov
je
push
xchg
push
and
pop
out
mov
mov
dec
jnp
hlt
cmp
jl
stos
rorl
popa
aaa
insb
aas
mov
rcrl
xchg
cmp
and
into
xchg
into
lds
adc
rolb
jg
mov
or
jle
xchg
sahf
mov
lcall
pop
rorb
jbe
inc
xlat
js
out
dec
xor
xchg
sub
imul
xor
sub
inc
or
out
or
mov
mov
lea
ret
popf
aaa
aad
fidivrl
fcmove
sbb
xor
call
jl
cmp
pop
push
xchg
fisubl
out
dec
cli
pop
ss
xchg
push
push
daa
imul
es
mov
imul
leave
xchg
mov
mov
adcb
pop
stos
xchg
inc
je
pop
std
lahf
jmp
inc
dec
fmull
sub
cmpb
cmpsl
popf
sbb
add
aaa
sbb
aas
jmp
popa
mov
inc
add
inc
movsb
loopne
adc
and
mov
sbb
add
ljmp
mov
mov
cli
adc
push
insb
mov
clc
ret
jmp
std
adc
xchg
lock
or
pop
outsl
fucompp
sub
push
push
add
jb
push
sub
sbbb
scas
xor
leave
lcall
mov
cmp
inc
push
jp
lods
in
mov
mov
push
mov
adc
inc
push
fldln2
adc
cmp
inc
in
mov
mov
or
ret
mov
pushf
sbb
xchg
into
imul
jne
lcall
cmpsl
xor
idivl
xor
dec
enter
mov
ja
push
out
xchg
pushl
and
jmp
aam
int
mov
roll
add
sbb
jne
out
into
pop
in
jbe
adc
push
pop
and
mov
add
mov
sahf
or
scas
adc
xor
jns
orl
xorl
outsb
jae
mov
push
inc
adc
rorl
pusha
xor
push
xchg
or
mov
and
add
mov
or
icebp
cli
mov
mov
push
in
push
and
fincstp
dec
fsubrs
ja
out
clc
jge
arpl
xchg
and
enter
ljmp
fbld
add
pushf
ja
xchg
fidivs
les
mov
pop
mov
mov
xorb
inc
ret
inc
dec
and
enter
mov
inc
movsl
sbb
and
adc
inc
mov
jg
jl
test
cld
subl
or
aas
or
cmpsb
loopne
sbb
sbb
or
pop
mov
pop
and
cmp
popf
ljmp
sub
sub
mov
xchg
lret
mov
insb
gs
fimuls
mov
stos
pop
add
outsl
dec
pusha
outsl
rcll
mov
and
mov
push
and
inc
cmp
repz
lcall
daa
ret
sti
stos
loope
adc
fisubs
mul
js
mov
ret
and
jne
jge
push
pop
mov
cmp
cmpsb
int
lea
lods
popa
or
mov
fwait
xlat
cmpsl
popa
pop
mov
loop
jmp
sbb
xchg
lds
xorl
arpl
jns
xlat
mov
and
xor
popf
pop
mov
add
ljmp
pop
sbb
and
xor
mov
jae
aaa
cmp
in
sar
lods
mov
mov
mov
push
jo
sbb
push
andb
xchg
test
fs
fmull
sbb
and
imul
movsl
and
addr16
aas
insb
mov
mov
pop
xor
es
scas
insb
dec
mov
jnp
cmp
out
lea
sbb
dec
lret
fsubrs
cmpsl
push
call
sub
and
push
sub
icebp
call
js
and
xor
sbb
push
mov
dec
xor
stos
mov
lea
in
and
rolb
sbb
rol
push
fwait
into
or
mov
xor
idivb
mov
add
loopne
push
mov
lods
repnz
insb
jno
rcrb
cmp
xor
addr16
in
xchg
lock
jl
lret
and
add
jl
pop
sub
or
xchg
movsl
and
mov
cmpsb
call
sub
or
ja
sbb
pushf
mov
rclb
in
xor
outsl
push
jbe
aaa
and
dec
xchg
push
mov
data16
addl
shll
push
or
sarl
jnp
adc
ljmp
stos
jb
xor
in
sbb
xor
sahf
aas
aaa
jbe
fdivrl
xor
call
dec
mov
dec
repz
clc
mov
mov
cmpsl
adc
dec
sbb
je
cmp
mov
push
insl
mov
jmp
test
add
rcrl
mov
movsl
addr16
sub
mov
fistl
aad
popf
push
in
push
lea
in
mov
repz
stos
stc
pop
movsl
pop
stos
sub
into
and
les
fs
ja
pop
jg
pop
cmp
dec
mov
nop
jg
out
fisubrl
ljmp
mov
insb
mov
ds
sub
dec
jge
xchg
daa
dec
push
movsl
dec
lret
cwtl
ficoml
out
pop
cmp
lods
stc
mov
fwait
loope
lret
or
or
mov
nop
sub
jb
les
inc
cmp
in
add
mov
mov
loop
loopne
push
cs
xorb
leave
mov
loopne
cmp
in
nop
ret
dec
dec
pop
sbb
jecxz
jo
xor
mov
jecxz
xor
mov
rcll
cmp
or
shll
inc
sti
jmp
rcll
shrl
rol
idiv
ljmp
jno
xor
lds
sahf
add
out
pop
mov
ret
mov
and
lret
push
inc
fdivrs
xchg
cwtl
sub
and
icebp
or
add
das
std
mov
jl
push
inc
iret
sbb
xchg
jnp
or
test
push
mov
std
dec
add
inc
pop
aas
psadbw
ljmp
add
jns
adc
mov
scas
add
inc
or
and
dec
lahf
mov
aaa
push
sub
fimull
sbb
sahf
push
lret
pop
in
sbbb
mov
hlt
sbb
dec
jmp
and
cltd
jg
mov
jb
cld
imul
add
mov
insl
int3
push
dec
movsb
push
adc
cld
or
sub
popf
dec
mov
and
fisttpll
popf
not
aaa
cmp
jo
lods
sub
mov
neg
jns
mov
cmp
rcr
or
ja
int
jge
sub
push
stc
lea
push
add
jle
sbb
and
in
xor
lret
add
dec
mov
in
pop
sub
sbb
aad
shrl
xchg
adc
call
loopne
mov
inc
in
leave
scas
daa
jo
pop
add
aaa
xchg
mov
sti
imul
and
sub
xor
cmpsl
adc
jb
xchg
cmc
push
insb
seta
push
imul
movsl
out
sub
and
and
loopne,pt
xchg
cmc
xchg
fistl
icebp
sub
sub
negl
jno
fiaddl
ljmp
hlt
adc
pop
pusha
add
push
shl
sub
aaa
mov
incl
inc
and
test
xor
sarl
push
lds
jecxz
inc
jl
mov
cltd
xor
js
insl
lock
jae
and
add
fcmovnb
cmc
lock
mov
pop
into
pop
xlat
popa
hlt
jnp
mov
movsl
lcall
push
dec
stc
push
sub
dec
imul
jne
jmp
sub
filds
or
gs
out
xor
xchg
in
sar
add
in
inc
mov
mov
mov
pop
mov
cmp
pop
dec
cltd
lods
xor
push
cmc
jnp
in
lcall
sub
cmp
jae
rorl
js
pop
xchg
ficoms
push
pop
arpl
push
cmc
adc
loop
and
xor
lock
mov
xor
ret
xlat
dec
mov
in
mov
jge
pusha
or
cmpb
jbe
call
cmpsb
insl
xor
mov
inc
sti
outsl
lahf
add
das
cmp
adc
inc
mov
clc
or
pop
cltd
pushf
jnp
or
cld
je
cld
sbb
xchg
shlb
sub
sub
fisubs
mov
mov
pushf
inc
add
pop
fadds
add
aaa
sbb
xchg
add
add
xchg
mov
pop
cmc
int3
int
scas
dec
ja
mov
push
andl
out
ljmp
lods
rcll
sub
movsb
int
inc
mov
inc
or
and
lods
aam
movsl
pop
insl
pop
out
andl
dec
pop
mov
add
movl
pop
rolb
pushf
test
stos
jmp
es
popa
dec
cmp
aaa
pusha
outsb
scas
cmp
int
arpl
dec
addr16
lds
jmp
int
inc
push
fimull
lock
jmp
inc
cmpl
mov
xchg
mov
sbb
push
mov
dec
aaa
cmpsl
push
xor
adc
mov
mov
test
xchg
cmp
sarb
jle
movsb
lods
xorb
int
insb
push
xor
lcall
add
jne
ret
aas
xor
lock
mov
call
jg
insb
pop
push
inc
repz
call
jmp
jl
mov
mov
int3
inc
push
inc
out
arpl
pop
cmc
adc
sbb
push
sbb
movsb
bound
sbb
daa
mov
iret
aas
aad
cmc
lret
jp
test
pusha
cmp
pop
clc
cs
push
jmp
push
push
xchg
pushf
lock
ficoml
push
pop
jno
inc
lcall
out
test
sbb
push
xchg
jge
nop
test
xchg
mov
mov
lcall
jecxz
daa
outsb
inc
inc
out
outsb
add
or
call
xor
and
fwait
ja
outsb
outsl
pushf
shl
call
fsub
loop
adc
inc
cmp
repz
mov
xchg
jl
cld
adc
loopne
lock
sbb
lods
icebp
enter
inc
jl
enter
addr16
in
sub
aam
std
add
adc
xor
add
insb
adc
fwait
ss
cmc
xchg
mov
and
sbb
movsl
push
enter
mov
mov
imul
and
je
or
or
js
pop
fwait
mov
mov
shl
insl
repnz
ss
dec
mov
movsb
incl
ds
cmp
sti
lahf
add
add
mov
in
push
negb
jle
data16
pop
xor
out
je
add
cmc
jle
mov
jp
sub
inc
or
xchg
sub
adc
loop
aam
ss
push
fwait
test
ss
popf
jno
mov
dec
xor
or
and
xor
jae
push
test
jo
ficompl
in
xchg
imul
jl
sarb
shl
push
fstl
cltd
mov
lret
jbe
loop
mov
mov
mov
or
pop
ffree
aad
or
add
dec
sbb
mov
cltd
adc
daa
cmp
xlat
pop
dec
fidivrl
test
sub
jno
push
pop
out
or
adc
test
pop
sub
xchg
jle
lock
dec
scas
jecxz
addb
aam
push
ljmp
stos
aam
push
sahf
jg
mov
mov
or
cmpsb
or
pop
pop
cmpb
pop
mov
ret
sub
push
cwtl
cmpsl
and
faddl
es
das
sub
adc
xor
icebp
mov
in
notb
xchg
imul
sbb
sub
push
hlt
int3
loopne
sub
leave
popa
cmpsb
add
stos
ss
mov
push
cmp
mov
sti
xor
repz
rol
fiaddl
jne
negl
adc
out
pop
repnz
ret
jge
roll
pop
add
psadbw
jnp
call
fwait
xlat
mov
pop
xor
jo
in
and
fldcw
push
idivb
or
fsubrl
lret
cmc
jmp
aas
push
fidivrl
or
sub
inc
mov
es
mov
sti
loope
xchg
mov
cld
test
push
sbb
adc
fs
imul
mov
repz
xor
push
cwtl
cmp
xchg
mov
mov
arpl
push
mov
incb
dec
mov
dec
sub
sbb
adc
fdivl
push
pop
dec
pop
adc
outsl
xchg
nop
jle
push
cmp
add
mov
repnz
xchg
scas
jmp
addl
mov
mov
add
sbb
das
mov
mov
xchg
cmp
or
lcall
pushf
sarl
xchg
mov
jle
xorl
cmp
ds
mov
inc
jnp
push
dec
fbld
fidivrl
inc
push
dec
xchg
add
pop
into
shrl
jmp
orb
jp
mov
sub
adcb
push
inc
out
daa
xor
ja
inc
das
push
mov
sub
xor
sub
and
add
cmp
aaa
pop
mov
push
repnz
mov
dec
pop
mov
insl
push
incb
scas
sub
int
inc
call
adcl
ds
nop
mov
ljmp
xor
call
lret
insb
dec
jo
sub
mov
push
pushf
out
das
mov
pushf
and
jno
jbe
xor
mov
movsl
jecxz
inc
cmp
std
or
inc
rorl
push
sar
pop
xor
cmpsb
and
push
sbbl
movsl
loop
fwait
cwtl
mov
clc
addb
ss
aaa
jmp
cltd
jno
jg
jp
dec
mov
out
or
popa
sub
enter
pop
stc
jle
pop
dec
pop
mov
inc
fs
cmp
sti
adc
cmp
xchg
sub
addl
stos
mov
xchg
xlat
cmp
pushf
outsb
insl
imul
sub
repnz
in
push
mov
out
aas
fcomp
pop
lods
cltd
lcall
push
or
sub
shll
xchg
sbb
cs
jo
lahf
jge
es
pushl
adc
sbb
cmpsb
loop
mov
popa
stos
shll
xchg
add
mov
cmp
cmp
and
stos
addr16
dec
mov
inc
xor
dec
insb
repz
movsl
add
insl
cmp
aam
fiadds
push
fwait
cld
cmp
imul
es
pusha
mov
pop
repz
xchg
pop
enter
out
push
cld
stc
jle
movsl
loopne
sub
repnz
or
out
xor
ret
push
mov
data16
idivl
jns
mov
cmpsb
sarl
lods
mov
sar
push
dec
mov
scas
jp
jnp
scas
push
xchg
rclb
in
mov
pop
sbb
test
adc
scas
das
int3
dec
or
mov
nop
lds
sub
sub
pushf
ds
insb
outsl
jns
sbb
xor
popf
sub
rorl
stc
aas
mov
mov
popf
orl
test
mov
cmp
jp
stos
les
inc
sti
pop
and
and
pop
jle
jno
mov
xor
in
pop
ljmp
stos
inc
push
std
or
ret
xor
movsb
rorl
lods
unpcklps
xor
xor
lret
test
sbb
imul
inc
inc
sti
adc
clc
jno
test
insl
jmp
pusha
mov
in
lcall
nop
fwait
in
repz
imull
dec
adc
xor
xor
pusha
dec
pop
cmpsl
into
mov
xchg
fsubs
sbb
sti
xchg
in
jmp
in
sub
int3
adc
mov
inc
jae
aaa
xchg
arpl
test
aam
mov
arpl
loop
xchg
jge
mov
stos
idivl
or
add
test
add
xchg
dec
pop
fs
sub
rorb
adcl
dec
lods
pop
mov
pop
imul
lods
scas
xor
or
popf
shll
mov
mov
add
mov
imul
fidivs
insl
push
mov
std
xor
push
mov
sub
sahf
jb
lods
push
or
test
sbb
and
test
int3
pop
out
sbbl
dec
mov
rcrb
cld
shll
mov
lcall
fcomp
inc
jge
mov
in
mov
fwait
out
adc
test
ja
cltd
test
xor
xchg
jecxz
mov
gs
repnz
movsl
loopne
or
ja
lock
dec
insb
packuswb
sub
xor
test
pusha
mov
pop
mov
mov
bound
push
push
xor
pusha
fs
sub
ja
mov
mov
bound
ret
sub
jg
jo
xchg
xorl
inc
lret
cmp
push
push
in
jne
adc
in
faddl
insl
outsb
daa
mov
xchg
mov
sub
dec
popf
imulb
stos
stos
pop
jle
sub
rclb
jns
xor
ds
loopne
push
ret
cmc
ror
or
add
mov
sbb
sub
mov
int
stos
lods
cmpl
setne
sub
push
addb
cmp
push
nop
filds
ret
shll
xorb
inc
shl
neg
or
xchg
out
push
mov
cmp
or
jg
movsb
inc
xor
xchg
insb
pop
sub
xlat
pop
cmp
push
es
pushf
lds
es
pop
in
add
rcll
insb
cwtl
lahf
faddl
pusha
lock
jbe
and
in
mov
jg
cmp
dec
mov
in
xor
dec
or
sbb
cs
popa
push
pop
mov
sbb
sbb
es
pushf
sti
push
inc
jmp
jns
pusha
jbe
ds
inc
inc
cld
psllq
pop
push
fdivl
xor
ljmp
and
mov
mov
imulb
pusha
enter
neg
or
mov
outsb
xor
dec
out
pop
lea
pusha
nop
inc
push
pop
jl
sbb
jg
and
cmpsb
sahf
mov
sub
jnp
in
std
js
jmp
movsb
lds
sti
insl
push
stc
cmpsb
sbb
mov
and
mov
push
adcb
sbb
jnp
idivb
aas
lret
sub
pop
mov
cmp
push
je
pop
fwait
xlat
fwait
loope
xchg
lock
xor
out
mov
cs
push
out
mov
or
sbb
sti
fidivl
faddl
push
jl
rcll
mov
jns
andl
jno
out
loope
mov
aam
sub
lods
shlb
int
popf
push
jb
mov
js
fiaddl
jno
pop
popa
xchg
pop
stos
push
fmuls
dec
dec
push
mov
sub
sbb
fadd
add
sbb
xchg
xchg
arpl
popa
pop
jns
ss
add
enter
dec
jbe
jno
mov
xchg
adc
in
data16
push
xor
lret
int
xor
inc
int
cmp
cltd
mov
or
shr
in
mov
notb
addl
lret
sub
repnz
ret
push
out
out
mov
adc
notl
loopne
mov
stos
test
mov
sbb
imul
xchg
out
add
push
xchg
repz
stos
pop
nop
pop
cld
and
clc
adc
xchg
in
in
ds
rcll
push
jge
shll
sub
mov
pushf
fisttps
mov
mov
es
or
dec
sbb
xchg
iret
inc
ja
ficoms
rcrl
mov
xor
dec
push
test
add
pop
cs
mov
arpl
lods
push
add
loopne
shrl
mov
mov
in
add
scas
mov
pop
push
lcall
std
xor
imul
stos
fwait
cltd
jmp
pop
das
push
push
jmp
cmpsb
lret
test
icebp
pop
push
and
dec
mov
ss
add
add
mov
jns
push
mov
aad
lods
ss
push
js
xchg
adc
inc
pop
paddq
mov
int
pop
push
clc
xchg
cmp
loopne
repnz
or
dec
push
fwait
and
sbb
fcomps
push
inc
push
test
sub
push
cmc
rcll
rcrl
adc
fadds
cmp
popf
cmp
mov
sub
mov
or
test
dec
or
sbb
pop
or
mov
std
lea
frstor
mov
jg
hlt
fistl
mov
jne
push
icebp
jmp
adc
add
lret
cmp
push
sub
jecxz
push
or
lret
mov
inc
sbb
je
imulb
xlat
mov
ret
test
fistpl
idivl
daa
xor
jne
xor
xchg
cmpsl
mov
ror
test
xor
push
aad
inc
insb
pop
mov
sub
xor
pop
lret
pop
cs
icebp
icebp
sarb
nop
cmp
out
push
sbb
out
mov
mov
mov
xlat
add
mov
lea
pop
lahf
aas
scas
rcl
movsb
jnp
into
xchg
cmp
inc
jne
aaa
daa
xchg
mov
jl
int3
aad
clc
ljmp
xchg
inc
cmp
fmuls
mov
push
imul
pminsw
inc
std
or
add
and
xor
jb
inc
lods
mov
jo
cmp
loopne
stos
sbb
movsl
mov
jle
or
repnz
stos
lock
scas
aas
add
sbb
mov
int
mov
add
inc
mov
fs
iret
cmp
adc
xlat
test
jbe
lahf
jecxz
jmp
fcoml
jnp
xchg
pop
js
sahf
mov
jmp
arpl
dec
ret
sub
mov
and
pop
dec
flds
inc
stc
test
das
lods
cmpsl
mov
in
arpl
mov
mov
xor
out
and
mov
adc
aad
testl
mov
mov
jo
jp
mov
jne
cli
inc
xorl
dec
sub
shl
mov
movsb
sbb
mov
fsubl
jo
mov
and
mov
dec
sbb
jnp
or
aas
mov
or
loopne
cmp
rorl
push
jno
lcall
jo
xchg
out
ficoml
xor
lock
sbb
fdivrl
xchg
rcll
out
xchg
push
aaa
test
xor
pop
jg
in
loop
jae
sti
xor
pop
iret
loope
fnstsw
mov
cmp
test
fcmovu
hlt
push
adc
sub
pop
adc
xchg
lahf
cld
in
xor
push
movsb
push
js
lcall
mov
lea
sub
cmp
loop
xor
test
sbb
shl
and
int
mull
push
add
sub
add
inc
push
add
add
and
in
addr16
push
iret
pop
das
jb
push
mov
xchg
shlb
adc
sarl
sbb
jecxz
push
rorb
push
dec
ret
pop
sub
ljmp
leave
movsb
nop
call
pop
jp
sub
sub
jno
arpl
int3
xchg
xchg
add
mov
call
adc
mov
mov
or
in
pop
lret
sub
mov
dec
mov
xor
inc
or
mov
mov
jmp
lods
jmp
bound
icebp
dec
mov
loopne
xor
lods
adc
addr16
sub
inc
jp
or
dec
xor
jle
pop
pop
jnp
or
inc
inc
pushf
cmpsl
sub
xor
sarl
ja
mov
jnp
insb
test
fidivrl
cmp
aaa
test
jne
mov
js
pop
mov
xlat
jno
ljmp
cmpsb
adc
sub
pusha
ror
imul
subb
sub
out
mov
repz
sub
repnz
pop
xchg
and
push
add
xor
stos
sub
nop
ret
sbb
jae
jo
pop
and
in
fisttpl
jo
pushl
popa
scas
and
insl
fimull
jl
sbb
jecxz
pop
pop
or
inc
inc
sbb
dec
push
and
mov
add
cmp
jge
mov
mov
push
les
bound
das
add
pop
pop
xchg
sbb
inc
fisubrs
mov
sti
int3
sbb
out
in
out
rol
sub
cmpsb
rcrl
into
dec
sbb
mov
lcall
jnp
lret
fs
push
cli
mov
sbb
scas
gs
fs
mov
in
int
bound
cmc
icebp
or
cmpl
inc
popf
push
repnz
or
or
mov
pop
adc
cmp
dec
pop
leave
lods
out
outsl
push
sbb
and
push
int
aam
jns
push
and
outsl
fnstcw
jmp
pushf
inc
iret
gs
push
inc
movsb
mov
std
add
push
jno
mov
mov
jbe
adc
sbb
ficoml
ja
inc
arpl
jecxz
add
scas
jmp
sbb
test
pop
iret
mov
inc
rolb
scas
test
mov
cs
je
mov
jo
jle
addr16
lods
cmp
lcall
repz
cmpsl
cmp
fidivl
xor
lahf
sub
stos
sbb
ret
or
in
add
icebp
inc
fwait
lods
pop
cltd
xor
pop
fcomps
inc
jb
es
pop
xchg
ror
xchg
dec
in
sbb
out
pusha
or
jns
mov
adc
mov
pop
fcmove
hlt
mov
and
test
adc
mov
fidivl
or
push
xor
jae
int3
adc
xchg
adc
std
aad
mov
xor
push
mov
push
arpl
stos
jge
mov
aas
je
jo
ret
leave
or
and
leave
fcoml
and
jg
lods
jg
mov
das
pop
pop
xchg
adc
sub
sub
or
iret
mov
pusha
or
or
mov
rorb
sbb
sub
mov
sbb
pop
cmp
int3
in
push
add
sarb
xchg
rorl
test
mov
aaa
insb
adc
divb
xor
dec
sub
cltd
dec
pop
inc
nop
in
cmpsb
loopne
mov
in
in
cs
jle
adcb
dec
jae
sub
fabs
fbld
adc
movsb
mov
inc
fisttps
mov
push
frstor
sub
mov
push
sub
je
scas
mov
push
mov
inc
mov
mov
std
dec
pop
xchg
jge
das
enter
dec
pop
xchg
or
pop
mov
test
adc
cmpl
out
pop
jmp
mov
inc
pop
xchg
xor
fucom
push
cltd
or
imul
mov
dec
mov
xor
cli
insb
dec
adc
aad
or
std
adc
jne
xlat
jle
push
jmp
popf
addr16
rorl
pop
mov
adc
mov
pusha
inc
test
idivb
adc
dec
or
out
dec
sub
cmp
xlat
stc
scas
pop
into
or
je
and
jbe
and
xor
fstp
push
sub
movsl
jge
push
push
inc
mov
sbb
push
inc
push
mov
sbb
icebp
daa
push
push
lcall
roll
test
pop
pop
loope
lret
lock
mov
iret
pop
in
jecxz
mov
fcoml
sub
fstl
push
pop
outsl
fldt
pop
popf
jno
dec
aaa
daa
and
inc
mov
mov
je
in
push
xchg
rorl
loopne
push
push
mov
jo
es
dec
cmp
ret
insb
into
or
sbb
xchg
inc
mov
test
cltd
lret
adc
jmp
push
jle
sub
mov
call
imul
insb
fsubrs
mov
int3
fcompl
outsb
sub
mov
jns
xchg
xchg
cmp
xchg
loop
pushf
out
cmp
popf
test
cmc
jb
pop
fidivs
or
arpl
cmp
xor
stos
test
jecxz
sub
shlb
addr16
xor
mov
pop
hlt
leave
xor
push
out
cli
mov
out
xor
and
xchg
inc
movsb
fwait
out
or
loop
lock
xor
je
rcr
movsb
jecxz
jge
sbb
fadd
int
and
inc
jno
imul
sbb
lds
hlt
push
push
cltd
nop
pop
imulb
movsb
repz
int3
or
inc
ficomps
jp
lock
test
jae
sub
or
adc
lods
adcb
fbstp
mov
stc
outsl
sbbl
push
mov
scas
rorl
mov
fisubrl
lods
pop
in
xor
inc
mov
mov
jno
scas
pop
negl
xor
cmpsb
in
outsl
jne
mov
xchg
inc
and
mov
addr16
int3
lods
aaa
push
dec
shll
xchg
shl
mov
xchg
pushf
jbe
test
addr16
orb
push
mov
shrb
push
rorb
cmp
dec
sbb
push
xor
xor
shl
lret
and
in
insl
stos
adc
lret
mov
ss
cli
sub
fbstp
inc
dec
out
sar
test
cmpsb
in
and
dec
lods
inc
or
or
ljmp
cmc
push
fcomi
test
push
mov
xchg
outsl
dec
ret
enter
push
adc
test
test
cmp
orb
popa
loope
xchg
sbb
jbe
int
pop
jecxz
push
dec
out
inc
jo
pop
sbb
pop
jge
es
sti
test
hlt
sub
mov
inc
add
pusha
mov
mov
dec
push
jge
fdivs
xor
jno
hlt
rcr
scas
outsb
aaa
faddl
or
ffreep
js
ja
push
frstor
mov
nop
sbb
sbb
loopne
dec
xchg
adc
adc
mov
jmp
pop
outsl
fs
cmpsb
or
insl
add
xchg
ja
sub
lods
test
mov
pop
sbb
cli
mov
pusha
push
mov
addb
lret
mov
mov
and
inc
fisubs
mov
lds
repz
inc
insl
mov
sbb
shll
test
mov
or
inc
rolb
adc
fsubrs
cli
push
or
std
push
dec
cmp
cmpsl
loopne
aaa
pop
inc
aaa
repz
sahf
xchg
imul
push
fmuls
inc
xlat
ds
aaa
aam
pop
fwait
cmp
pop
loopne
repz
or
stos
enter
adc
aad
and
mov
add
adc
lahf
in
push
cld
mov
stos
adc
sbb
bound
xchg
or
lock
stos
sub
repz
inc
cmp
mov
aad
addb
pop
shlb
push
add
inc
js
clc
mov
jo
lds
xor
pop
repz
xchg
adc
cmpb
ss
push
or
iret
lods
aas
mov
loopne
sub
pop
or
orl
mov
test
mov
sbb
xor
dec
insb
ror
out
cmpsl
mov
adc
mov
es
and
xchg
jle
mov
cmp
loop
sub
push
or
faddl
aaa
mov
and
xchg
jns
cld
push
push
mov
lret
lret
sbb
imul
outsl
cmpb
xlat
push
mov
and
mov
sub
xlat
sub
mov
addr16
hlt
rorl
lds
int
sub
mov
dec
push
xlat
popa
pushf
mov
ret
ret
fsubl
repnz
incl
lahf
fimull
mov
imul
mov
and
ss
push
inc
sub
mov
popa
jb
mov
pop
pop
mov
rcrl
and
jae
into
jne
sub
jge
pop
out
test
mov
je
adc
outsl
inc
mov
aaa
iret
lea
dec
push
hlt
and
adc
fists
cltd
mov
xchg
addb
jg
jo
daa
ss
call
insb
mov
cld
dec
mov
nop
ds
sub
mov
sub
cmpsb
scas
aas
pop
ljmp
ljmp
and
or
rcrb
pop
cli
sub
push
insb
mov
repz
pop
lret
ret
loope
mov
lock
hlt
and
hlt
pop
out
sub
les
jle
mov
mov
xchg
dec
push
push
ljmp
or
cmpsb
mov
adc
inc
mov
mov
stc
lret
cld
cli
pusha
push
mov
mov
leave
ror
je
js
sbb
addl
jle
ljmp
int3
mov
sub
mov
xor
xchg
xchg
mov
inc
dec
pop
lahf
adc
insl
jl
cmpsl
jae
test
and
rclb
jne
xchg
xchg
lods
dec
jo
sbb
fdivl
lds
enter
xor
aad
pop
sub
xchg
and
ret
mov
pushf
outsb
sahf
loope
push
bound
add
mov
mov
outsl
pop
aaa
cmp
out
ret
in
in
pop
inc
loop
outsl
inc
sub
cli
and
mov
mov
push
repnz
daa
roll
mov
add
daa
cmp
outsb
jmp
push
in
daa
fisttpll
test
sahf
ja
insb
fwait
jmp
mov
shrl
insl
push
sbb
cltd
in
pop
mov
cwtl
out
outsb
hlt
or
inc
mov
loopne
push
pop
mov
ljmp
sarb
xlat
aas
das
mov
mov
loop
fadds
js
sbb
jg
repnz
inc
dec
fdivp
dec
pop
scas
popa
or
jne
addr16
std
arpl
adcb
out
adc
lret
inc
dec
xchg
and
inc
xchg
addr16
js
jns
addb
icebp
cmpsl
inc
pop
jecxz
xchg
mov
and
pop
shll
adc
cmp
jge,pt
sarl
jnp
pop
push
pop
sbb
imul
das
or
adc
aas
jl
and
sbb
dec
mov
scas
xor
mov
lock
sar
dec
addr16
or
sbb
inc
mov
push
ja
in
sbb
lret
jmp
test
xor
les
movsb
ds
push
sbb
jmp
sub
les
jmp
addr16
and
jno
xchg
adc
sub
out
sub
ljmp
adc
and
add
mov
loop
sbb
sbb
sbb
es
mov
mov
andb
ss
sti
dec
push
popa
cmpsb
push
inc
arpl
jp
enter
scas
test
lahf
cmp
mov
xor
cmp
xchg
push
in
jl
inc
mov
stc
mov
inc
cmc
insb
jmp
adc
out
insb
sbb
in
sbb
mov
jno
mov
jecxz
fldenv
pop
push
inc
cwtl
add
lcall
xor
and
not
std
pop
dec
nop
mov
cmp
jg
mov
sbb
xchg
out
inc
and
cmp
xor
andl
inc
out
pushf
bound
sub
mov
xchg
dec
cmp
adc
lcall
mov
push
pop
icebp
outsl
adc
sbb
ret
adc
pop
pop
aam
hlt
loopne
icebp
out
nop
aad
lahf
outsl
inc
inc
fwait
pop
adc
ror
pop
cmpsb
out
mov
fadd
cmp
hlt
test
jns
stc
push
inc
pop
pop
lds
aaa
movsb
sub
test
mov
inc
insl
imul
add
out
sbb
popl
cmp
pop
outsb
pop
xchg
xchg
sbb
jp
lahf
add
mov
fwait
mov
pusha
testl
mov
stc
add
fucomi
xor
pusha
lds
pop
inc
test
movsl
pusha
cmp
out
fadds
js
pop
ficoml
ficoml
testl
fucom
inc
dec
jmp
pop
adc
sub
icebp
aad
inc
shrl
loope
stc
sub
and
mov
cmpsb
inc
xchg
pop
cli
xchg
sbb
push
andb
fldl
mov
pop
add
pop
push
jae
add
add
and
sbb
mov
rorb
lock
and
sbb
jp
fidivs
xor
loop
xchg
loopne
call
inc
mov
xchg
and
mov
pop
push
fcomps
adc
adc
mov
imul
push
imul
loop
sbb
lret
addr16
shl
ljmp
pop
cld
fcompl
sti
cwtl
xor
loopne
jl
jl
mov
mov
xchg
test
shll
insl
aas
xchg
lea
cmovge
mov
mov
pop
pop
call
jge
jle
and
leave
jg
stc
xor
rorb
push
inc
and
mov
or
fcompl
and
stc
adc
sub
shl
insl
jl
gs
push
iret
out
cli
sti
loop
mov
jns
or
popa
push
mov
jmp
push
pop
jo
cli
xchg
inc
shlb
push
cs
xchg
out
mov
sti
sarl
adc
dec
fs
mov
dec
cli
dec
lods
stc
insb
xchg
aaa
jle
js
sti
pop
aad
adc
jo
int
rcrl
xor
push
pop
pop
mov
fstpl
xor
dec
and
stos
cmp
push
push
rolb
scas
loope
cs
jmp
lcall
scas
mov
test
mov
imul
fcmovne
lret
rcl
clc
scas
inc
push
cmp
jnp
fdivrl
inc
sbb
stc
xchg
dec
sbb
test
pop
into
mov
scas
xchg
xlat
addr16
pop
repnz
sahf
out
sti
iret
xor
outsb
pushf
arpl
nop
mov
scas
mov
pushf
outsl
mov
sarl
dec
test
pop
xor
or
mull
in
add
pop
cld
shlb
mov
sub
cli
lret
and
inc
mov
push
stos
jbe
xchg
mov
pop
jg
rorl
rolb
int
jbe
sahf
repz
cmpsb
inc
adc
xchg
js
jl
push
mov
sub
jecxz
scas
movsb
push
mov
aaa
pop
je
daa
push
fcompl
cmp
in
cmpsl
dec
je
xchg
pop
xchg
push
jae
insb
icebp
fs
sbb
mov
dec
test
insl
notl
mov
in
dec
mov
inc
inc
cmc
inc
dec
stos
or
mov
push
add
dec
jnp
leave
mov
mov
adc
ret
cmpsl
iret
lods
adc
push
in
add
mov
mov
rorb
xchg
push
fistl
pop
test
test
mov
mov
mov
xor
inc
ret
mov
sbb
das
lods
cs
pop
clc
xchg
jne
mov
lcall
lret
add
scas
xor
pop
push
adc
cmp
ss
pop
rcll
xchg
jmp
jle
push
fstl
arpl
popf
hlt
mov
xor
dec
jmp
sub
xlat
sbb
loopne
sub
jge
xchg
pop
xlat
push
lock
push
fld
xchg
dec
xchg
out
mov
imulb
shlb
sub
test
insl
stos
cmp
jge
push
in
adc
test
xchg
xor
in
xchg
jae
repnz
mov
pop
leave
or
cmpsb
pop
mov
int
loop
lods
je
push
out
scas
in
pushw
mov
adc
pushl
rclb
fdivr
out
and
mov
fidivrs
push
scas
mov
or
imul
jns
out
int3
arpl
arpl
fwait
test
jle
loopne
jnp
xchg
adc
pushl
cmp
adc
push
xor
push
aam
xchg
or
cwtl
les
out
adc
ja
mov
or
xchg
add
dec
lcall
sub
sbb
inc
mov
jae
adc
pop
jle
int
jns
cld
mov
xchg
stos
mov
xchg
jecxz
fidivrs
cs
and
xor
cs
clc
or
push
cmp
in
ret
shlb
popf
dec
aad
sub
mov
xchg
into
xor
out
xor
jnp
cmp
gs
inc
test
or
roll
icebp
mov
lret
lret
pop
jo
add
jb
test
test
pop
lahf
push
add
push
cli
jge
add
les
into
inc
pop
int
mov
xor
and
cwtl
mov
out
mov
sbb
int
pop
das
jge
push
fsubl
leave
jo
jmp
xchg
inc
xchg
js
outsl
xor
movsb
jle
push
sub
jg
mov
das
out
mov
aaa
xchg
pop
lock
xchg
inc
sti
or
jnp
std
stos
aas
int
rorb
in
ds
dec
inc
dec
ss
test
or
jmp
or
out
dec
mov
jmp
dec
scas
test
xor
inc
push
pop
imul
cmp
popa
testb
dec
mov
aas
or
ljmp
add
mov
es
xor
jo
jae
movsl
xor
ja
push
adc
nop
arpl
test
xlat
pop
pop
hlt
add
into
and
pop
push
out
enter
jle
and
out
and
mov
loop
leave
xchg
lock
mov
xchg
pop
fucomi
pop
add
out
js
testl
repnz
mov
and
testl
imul
andb
xchg
lods
ds
mov
les
jnp
xor
pop
and
jecxz
das
push
xchg
mov
loopne
bound
popa
mov
mov
in
sbbl
jg
in
bound
fwait
mov
shrb
dec
mov
js
jb
sbb
push
inc
xor
xor
xor
inc
lods
and
leave
out
xchg
daa
ret
add
mov
jecxz
in
jge
mov
aad
jl
cwtl
cmp
insb
mov
inc
ja
xor
icebp
repnz
test
sbb
push
faddp
inc
aad
sbb
mov
xor
push
xlat
mov
std
dec
mov
dec
push
je
sub
iret
movl
movsb
mov
das
add
inc
push
push
xlat
imul
push
mov
or
mov
rcl
xchg
pop
adc
aam
mov
out
push
or
and
pop
idivl
push
and
xchg
and
jne
lds
push
out
pusha
jmp
adc
and
lret
imul
popa
push
fs
aam
scas
jl
imul
mov
xchg
push
add
sti
gs
cld
insb
scas
inc
cltd
mov
inc
ja
fistl
sti
cs
xchg
mov
push
adc
lret
int
add
cltd
jge
into
inc
jmp
int3
test
shrl
hlt
mov
mov
mov
icebp
jo
and
inc
jb
add
scas
xor
sub
lock
pop
inc
xor
xor
lcall
int
stos
mov
and
dec
mov
pop
fidivrs
cmc
dec
int3
cmpsb
push
lret
push
mov
out
imul
push
xchg
es
scas
and
test
ja
aas
into
adc
xor
fistpl
lods
and
movsb
lahf
pop
sbb
rcll
fdivrs
or
jecxz
jne
es
jo
lods
dec
loope
pop
mov
push
repz
out
cmp
cmp
xor
popf
push
out
outsl
pop
aam
fldenv
imul
enter
stc
pop
add
pushf
xor
mov
fcoml
rcrl
fs
and
jmp
jmp
xor
xchg
es
push
xor
sbb
lret
sub
imul
mov
add
int3
xchg
setle
mov
les
or
push
xor
testb
xorb
je
frstor
rcrl
divb
jne
mov
mov
mov
or
mov
xor
dec
push
test
fisttps
sbb
mov
mov
jnp
mov
add
xlat
xchg
sub
ret
pop
cmp
push
cs
das
iret
loopne
int
std
aam
mov
cld
test
xchg
popf
pop
add
mov
or
xor
fs
imul
jmp
jno
cmp
dec
imul
sbb
inc
out
movsb
jno
int3
add
mov
stos
xchg
sbb
or
sub
push
adc
dec
daa
add
mov
and
sbb
xor
push
push
push
fnsave
insb
push
jns
icebp
loope
dec
push
dec
jp
mov
bound
nop
mov
negl
xchg
push
mov
ret
mov
das
aas
mov
test
cmp
xlat
sbbb
jle
dec
mov
inc
dec
cmp
std
push
lods
ds
ljmp
and
imul
mov
pusha
cwtl
pop
in
pop
loopne
inc
pop
adc
jmp
mov
out
mov
pop
sub
out
insb
pop
cli
nop
orl
and
pop
out
aas
jo
mov
out
dec
pop
and
xor
pop
in
sub
xor
and
xchg
repnz
jmp
adc
insb
test
cmpsb
scas
push
mov
movsl
je
mov
push
dec
mov
dec
je
outsb
outsl
pop
jle
scas
add
aam
ret
ss
xchg
sub
sbb
leave
mov
decb
xchg
orb
inc
mov
and
add
mov
xor
sete
push
out
aaa
pop
sbb
jge
mov
mov
mov
or
cmp
push
adc
mov
popa
or
mov
push
sbb
push
push
jecxz
xchg
in
popl
xor
fcoms
iret
adc
sbb
and
gs
movsb
cmp
xchg
adcb
pushf
push
sub
inc
imul
lock
cmp
ret
mov
fs
or
sub
add
fs
push
cmp
iret
adc
jns
adc
inc
imul
xor
cld
adc
xchg
rcl
mov
loope
dec
pusha
xchg
imul
aad
and
mov
mov
push
arpl
xor
cmp
test
cmp
fcomi
mov
xchg
fsubr
rcl
pop
jmp
mov
rorl
jno
jmp
jo
out
pop
negb
lock
mov
fnsave
push
push
dec
dec
mov
jbe
dec
cmpsb
inc
push
jle
mov
cs
jle
stc
mov
add
adc
mov
jg
orl
mov
jb
jmp
gs
inc
adc
rcll
xchg
adc
jecxz
fwait
jno
and
stos
jne
pop
idivb
stc
popf
mov
sbb
inc
push
cmp
test
cwtl
fwait
jb
adc
xor
xchg
insl
inc
add
inc
test
or
sub
adc
int
sub
mov
mov
or
lock
push
in
adc
pop
pop
pop
jge
inc
xchg
mov
fcoml
mov
repz
inc
pop
je
mov
test
test
ret
mov
pushf
jge
addr16
sbb
fisttpll
xor
and
lcall
dec
cltd
mov
dec
bnd
xchg
int
and
repnz
int3
test
adc
imul
mov
in
stc
or
pushw
les
orl
in
pushf
dec
mov
es
push
sub
cli
push
mov
mov
jl
in
mov
or
aaa
inc
mov
push
stc
xchg
sbb
inc
pop
push
je
push
cmp
or
js
fists
sbb
arpl
es
inc
mov
inc
lds
nop
xor
mov
sub
lea
xchg
inc
sbb
add
sahf
les
mov
jg
sahf
stos
pusha
sub
cmp
ja
cmc
jo
add
and
lret
lods
cmp
sbb
adc
sti
mov
jbe
cmp
mov
in
push
fnstcw
dec
sbb
pop
or
lods
popa
movsl
test
xchg
sub
addr16
arpl
daa
insb
lahf
and
jo
jne
pop
out
mov
loop
loop
popf
mov
xchg
dec
push
data16
bound
xor
cwtl
cwtl
adc
jb
inc
je
mov
or
jle
into
out
fwait
dec
scas
and
movsb
mov
mov
inc
in
xchg
sbb
loope
add
jbe
fcomps
fwait
xchg
mov
and
mov
mov
mov
dec
cli
pop
adc
fimull
mov
scas
mov
xor
shlb
mov
jno
cld
test
fsubrs
fnsave
mov
lcall
movsl
repz
iret
stos
jecxz
cld
xor
dec
or
cwtl
dec
loop,pn
in
notl
sahf
dec
pop
fiadds
and
mov
dec
add
mov
jecxz
stc
xchg
addb
pushf
movsb
outsl
pop
mov
aas
cmp
or
mov
pop
cmp
jns
rorl
pusha
lret
and
fmull
sbb
or
arpl
ljmp
mov
cmp
arpl
and
push
mov
and
loop
adc
push
pop
cmp
ds
aad
push
test
in
jge
rcll
jns
jp
sub
xor
out
std
mov
push
xlat
mov
dec
decb
lret
xchg
das
pop
ss
das
cmc
xchg
aaa
sbb
mov
jns
pop
or
cmpxchg
dec
test
rcrl
jge
addr16
sbb
sbb
ror
mov
xchg
loope
mov
aas
mov
dec
lret
inc
data16
push
jo
fidivrs
clc
sub
es
fimull
shrl
lock
rolb
add
out
push
inc
stc
fwait
add
xchg
pop
pop
inc
sbb
dec
fisubrl
rcpps
pop
sub
lret
lret
cmpsl
psrld
dec
or
jne
mov
insb
out
pusha
xchg
adc
mov
mov
test
pusha
mov
xchg
aad
enter
xor
lods
mov
cmp
add
aad
cmpl
daa
sbb
clc
cmp
dec
popf
lds
push
jnp
push
add
out
or
sub
loop
pop
movb
decl
pushf
sub
add
cmp
or
cmp
idivl
lock
and
shll
int3
xor
data16
dec
in
jge
fnstcw
cmp
jno
mov
rcrl
rorl
xchg
loopne
jmp
cmp
rcrb
jo
jo
andl
cmp
xchg
shl
add
loope
test
ret
inc
int
xchg
sub
and
mov
xchg
mov
add
les
stc
inc
and
lds
pusha
jmp
xchg
sub
dec
cli
push
adc
push
cmp
and
jne
mov
mov
xor
mov
or
mov
mov
push
push
fsubr
push
fldln2
mov
dec
jmp
loopne
ljmp
jo
loope
mov
in
xor
lcall
dec
lds
xor
faddl
lahf
lock
push
in
xchg
outsb
inc
outsb
inc
jne
dec
push
mov
lods
and
or
fcomip
dec
mov
xlat
imul
int
sbb
out
fldcw
jo
cwtl
xchg
or
ds
lret
mov
or
add
adc
enter
pop
inc
push
adc
xlat
cs
push
cltd
movsb
cmpsb
sub
mov
ds
in
mov
ds
or
jbe
or
push
xchg
pop
test
mov
test
jmp
jae
sbb
daa
lret
sti
mov
addr16
sub
xchg
data16
mov
xchg
push
test
in
testb
push
push
mov
nop
or
push
shll
pop
popa
jno
das
mov
daa
mov
dec
jl
icebp
add
out
testb
mov
sbb
fwait
and
call
cmpsl
push
outsl
leave
sahf
pusha
das
int
push
push
fcoms
aaa
fdivrl
pop
fldenv
pop
xchg
into
and
sub
or
fiadds
mov
or
xor
mov
in
outsb
rorb
push
pop
xchg
lahf
mov
mov
shl
mov
inc
arpl
sahf
in
clc
sarl
rcr
fisubrl
xor
jg
orb
lds
clc
mov
ss
test
cltd
fwait
push
test
fs
popf
pop
push
imul
mov
push
sub
pop
stc
jl
inc
sahf
clc
sub
dec
popf
clc
rclb
xor
jl
sti
pop
loope
mov
cs
les
push
lds
loope
jnp
sbb
test
mov
pushw
add
shll
push
mov
lock
in
out
lldt
xchg
jne
outsb
push
fwait
push
popf
sub
cmpsb
xchg
jmp
hlt
lcall
jnp
jns
out
mov
cld
mov
ret
adc
ds
sbb
jns
imul
cld
sbb
push
pop
popa
push
sub
bound
repnz
mov
ret
bound
cmc
flds
and
xor
fdivs
imul
sbb
outsl
jp
les
test
scas
xor
xchg
mov
popf
int
pop
inc
mov
push
add
pop
sub
push
adc
test
fidivl
into
les
dec
int
pop
andb
cmp
mov
cmpsl
mov
lret
and
add
shll
jno
xlat
scas
push
sbb
js
adc
cltd
push
push
xchg
enter
mov
sub
sbb
fdivl
int3
pop
push
sti
bound
in
outsb
call
jle
pop
fnsave
test
push
mov
pop
xchg
push
ja
or
rclb
mov
ss
cltd
lea
negb
outsl
or
jp
ja
adc
jp
dec
in
fwait
xlat
addl
rol
jae
stos
pusha
inc
daa
xchg
lea
cltd
dec
movsl
je
xchg
repnz
cmpl
push
xchg
out
lods
mov
loope
inc
aad
adc
lock
je
or
pop
add
fstps
jo
fidivs
movsl
sub
inc
push
adc
sbb
sahf
rcll
test
clc
mov
inc
in
imul
mov
xchg
push
adcb
lods
popa
sub
or
aad
or
sbb
xchg
lret
jmp
sbb
mov
cmp
or
sub
dec
fwait
cmpsb
loop
or
jp
push
bnd
xchg
shrl
or
or
out
rorb
cmp
mov
xor
ljmp
and
in
pop
jne
push
out
xor
jg
add
leave
iret
jb
bound
insl
jg
leave
into
fstpl
setnp
call
hlt
in
mov
outsl
gs
popf
xchg
int
icebp
aaa
out
loopne
jl
inc
and
mov
mul
xchg
adc
jnp
mov
mov
dec
sub
sbb
negb
cmpsb
dec
rcrl
push
loope
and
inc
cmp
lods
int3
sub
fdiv
sbb
stos
pop
and
mov
ljmp
jno
mov
cmpsl
xchg
jne
push
mov
xor
mov
mov
dec
add
loop
xor
xchg
dec
insl
xor
jae
mov
enter
inc
mov
divl
lret
sub
cmp
rcrl
fdivl
ljmp
sbb
xchg
adc
sbb
mov
or
lahf
sbbl
in
loopne
sbb
mov
or
pushf
adc
xchg
insb
ss
cmpsl
stos
cmc
in
call
in
dec
mov
cmc
sbb
and
xchg
jge
les
sbb
lds
das
roll
and
sbb
sub
loop
adc
out
cli
xor
lods
add
sub
inc
js
sbb
fsubr
stc
ljmp
sbb
lret
icebp
shll
push
pusha
testb
fisttps
ret
mov
fsubrl
xor
xor
and
cmpsb
inc
sbb
das
dec
inc
mov
mov
pop
testb
dec
shlb
je
mov
mov
wbinvd
sbb
nop
rolb
stos
jl
loopne
in
jle
xchg
mov
fimuls
popf
test
xchg
cmp
jge
les
cmpsl
pop
ret
repnz
xor
dec
fistpl
jnp
lods
cmpsb
imul
and
xchg
das
jmp
adc
ja
sbb
into
subb
lret
shlb
sbb
negl
mov
push
mov
mov
into
xchg
and
sbb
enter
dec
pushl
aam
mov
cmp
sub
test
insl
fsubrs
xchg
inc
mov
scas
fs
std
cli
mov
imul
lods
jns
sbb
pop
cmp
outsl
mov
outsl
inc
out
mov
inc
std
aaa
mov
movsl
inc
ret
pop
mov
lret
inc
mov
scas
xchg
lock
out
sub
mov
xor
shr
test
and
pop
scas
inc
test
cld
mov
jg
dec
mov
and
lods
rcl
add
pop
xchg
ror
mov
sbb
inc
xchg
cmp
mov
adc
dec
dec
mov
xlat
xchg
dec
outsl
push
push
jl
sti
jns
addr16
shll
lret
lods
cltd
inc
cmp
pop
and
or
dec
inc
es
cmpsl
cmp
sbb
ds
mov
std
xchg
inc
push
lock
out
push
xchg
jl
stos
pop
inc
icebp
sbb
dec
dec
loopne
imul
jecxz
test
fs
push
xchg
or
fwait
mov
ret
ret
leave
mov
pusha
mov
sub
insl
arpl
mov
sbb
sub
xchg
outsb
inc
push
xchg
es
sub
jg
mov
mov
xor
dec
pop
jp
push
fsubrl
fnsave
sahf
orl
jb
add
cmp
dec
testl
xchg
jnp
and
cmp
in
push
or
mov
icebp
dec
sbb
mov
jnp
and
mov
stc
cmp
xchg
xchg
and
cmp
out
negl
enter
mov
dec
fnsave
lods
inc
and
popf
ret
outsl
bound
inc
cs
mulb
xor
outsl
cltd
scas
in
lret
jp
mov
mov
or
inc
lds
inc
lahf
pop
dec
fistpll
pusha
sub
sub
out
xchg
xchg
testl
mov
xchg
les
ret
hlt
mov
int3
add
push
adc
jge
out
movsb
push
inc
bound
stos
jmp
mov
xor
stos
adcl
ds
enter
mov
xchg
and
cmc
pop
in
in
push
jmp
std
loopne
cmp
dec
mov
mov
pop
ljmp
mov
cli
cbtw
ss
mov
lods
fcom
into
mov
mov
test
and
sub
pop
sbb
sti
iret
in
sub
mov
sbb
and
push
loopne
rcl
and
sub
call
mov
mov
popf
test
cltd
test
leave
jbe
and
out
frstor
inc
mov
loop
push
int3
xchg
cli
sti
xchg
popf
stos
jne
pop
fdivs
cmpsb
sub
and
fdivs
in
sarl
mov
push
rcll
cmp
shrl
pop
inc
inc
ret
js
hlt
and
pop
lds
mov
fstpt
add
lret
repz
and
xor
pop
mov
lret
push
int
shl
cmp
inc
pop
pop
push
xlat
adc
int
mov
inc
push
in
outsl
inc
sbb
jecxz
mov
and
inc
imul
mov
sahf
lret
xchg
in
cmp
test
xor
pushf
add
daa
int3
xchg
pusha
call
scas
mov
arpl
sub
fs
fwait
lahf
gs
push
lahf
negb
sbb
scas
push
xlat
in
xlat
inc
mov
aad
mov
ljmp
test
mov
fcoms
in
lret
ds
stc
xor
sbb
popa
cmp
test
fimuls
push
mov
js
sub
jnp
pusha
cmpb
pop
dec
push
lahf
repnz
data16
enter
fistl
add
insb
mov
sub
push
enter
xlat
out
dec
out
fisttpl
in
test
pop
pop
lock
mov
lds
xchg
adc
mov
lock
test
aad
xchg
sbbb
mov
stos
jnp
daa
jb
mov
subb
pop
insl
iret
sbb
jo
jmp
inc
mov
inc
ficompl
mov
inc
jecxz
add
xchg
ret
sbb
and
mov
inc
fs
daa
sub
in
push
cs
sub
mov
pushf
push
cmpsl
jmp
push
mov
or
add
add
sbbb
sbb
fld1
jmp
jns
add
dec
dec
and
cmp
and
aam
cwtl
daa
inc
fistps
insl
loopne
add
ds
push
xchg
pushf
ds
and
mov
shll
add
cwtl
mov
hlt
repnz
lret
popf
lret
shr
loope
cs
push
inc
dec
cltd
gs
test
jl
mov
sub
rcr
add
decl
cmp
test
mov
cmp
in
adc
xchg
cs
mov
mov
inc
cwtl
sub
scas
pop
push
test
inc
jae
test
inc
sbb
negl
leave
addr16
js
push
in
aaa
inc
cld
and
pop
jge
jmp
sbb
enter
sub
leave
enter
xchg
xchg
bound
cmpsl
lock
ljmp
mov
push
mov
inc
sub
hlt
add
add
fs
jg
adcb
sarl
imul
jge
lods
dec
mov
bound
ds
movsb
nop
rcrl
out
cmp
incl
and
incl
aas
fldenv
mov
jnp
push
mov
mov
adc
sub
xor
mov
in
cmp
mov
mov
lods
mov
lcall
mov
imulb
xor
lret
mov
mov
test
sbb
mov
mulb
stos
mov
pusha
mov
fiadds
cmp
das
adc
jle
xlat
xor
and
sti
loop
dec
xchg
iret
sbb
xlat
push
mov
fcompl
loopne
dec
inc
rcrl
or
add
pusha
push
aam
xchg
sbb
inc
cmp
pop
dec
jae
sbb
inc
mov
add
in
fldz
dec
mov
xchg
sub
in
divl
outsb
insl
arpl
sub
gs
call
lret
jg
icebp
pop
test
mov
pop
pop
jge
jno
fadds
jae
sbb
aaa
icebp
cmpsl
sbb
inc
ljmp
adc
xor
xlat
fisubs
inc
movb
cmp
loop
mov
mov
xchg
sarl
mov
inc
stc
jle
or
nop
mov
aaa
and
rorb
jnp
movsl
push
mov
cld
frstor
in
sarl
xorl
out
pop
xchg
xchg
inc
or
or
mov
or
jne
aam
sub
jno
pop
outsl
aad
dec
gs
and
xor
dec
jle
pop
repz
jnp
pop
jns
mov
or
jle
cmpsl
imul
cmp
lret
shrb
jge
fwait
mov
shlb
xor
pop
pop
vmovlps
xlat
andl
inc
test
shll
sub
cs
aad
mov
enter
mov
mov
and
rcll
push
dec
movsl
adc
and
mov
xchg
test
int3
mov
shll
outsl
xor
mov
scas
cmp
push
push
push
inc
mov
mov
adc
cmp
dec
sub
scas
mov
sbb
movsl
scas
and
mov
push
outsl
push
cmp
clc
outsl
sub
mov
enter
jmp
loope
dec
push
xor
cwtl
mov
cmc
xor
cmp
cs
or
sub
sub
mov
hlt
mov
cld
add
xchg
test
pop
insl
ljmp
sti
push
push
aas
stos
js
dec
push
int3
xchg
cmp
jbe
jae
outsl
jle
jmp
add
call
mov
sub
cmp
jns
fdivrs
adc
inc
push
dec
outsl
cmp
or
outsl
cmpsb
mov
mov
out
sbb
mov
aas
xor
out
fistps
push
les
jge
lcall
xor
jl
cwtl
loopne
adc
loope
sbb
dec
je
test
pop
or
jmp
ljmp
arpl
cltd
inc
lret
cmp
sbb
loop
sbb
xchg
dec
sub
pop
sub
test
gs
sbb
fisttpl
nop
adc
loopne
into
out
lahf
ljmp
adc
cmpsb
jno
pop
clc
pushf
xchg
in
cld
lods
test
fisttps
xor
aas
das
roll
xor
xor
in
call
fdivrl
jb
das
fucomp
arpl
push
mov
xor
and
mov
dec
add
lods
jle
sbb
sti
xchg
pop
cmp
aaa
pop
push
dec
mov
and
pop
xlat
ss
jle
lret
nop
test
faddp
movl
dec
sub
inc
dec
pop
das
jbe
mov
enter
aad
jl
out
and
mov
sub
pusha
aam
popf
jne
sbb
adc
subl
idivb
in
dec
add
push
js
fwait
xor
imul
daa
jmp
jbe
mov
push
xlat
or
and
pop
xchg
mov
lds
movsb
ja
xchg
fistps
fldt
cmp
loope
out
jbe
ret
push
mov
sub
jecxz
xchg
orl
jecxz
jb
stc
jne
jle
jbe
imul
push
ljmp
rorb
lcall
test
push
add
lahf
jmp
cmp
or
mov
mov
jne
jns
mov
fcmovnb
pop
sub
fs
int
add
jo
mov
sarl
jno
gs
std
pusha
and
and
push
push
dec
in
into
pop
out
mov
and
stos
data16
aam
lret
sbb
xchg
sbb
inc
fsubrs
pop
adc
adc
and
ret
icebp
jmp
mov
and
and
popf
imul
popf
in
mov
push
xabort
mov
cmpsb
aam
enter
lds
jmp
cmpsl
aam
test
sub
mov
jp
fisubs
pop
pop
xchg
xor
fdivl
sahf
outsl
pop
jae
bound
push
popf
adc
dec
sahf
ret
pusha
xchg
jl
ja
xor
leave
mov
inc
test
leave
dec
fs
in
addr16
fwait
nop
add
out
lcall
sbb
inc
and
andb
outsl
add
pusha
mov
xor
decb
out
repz
sahf
addl
add
addr16
scas
push
sub
push
lods
jnp
adc
in
stos
aam
dec
push
ret
ljmp
ja
gs
xchg
lea
enter
pop
jo
or
loopne
adc
mov
adc
sub
mov
pusha
nop
test
cmp
mov
out
sub
mov
out
repz
push
sub
add
jbe
out
fldt
and
xchg
shrb
jle
shlb
mov
sub
shrl
cmp
test
jns
xchg
push
aas
stos
sub
jne
jle
psllw
xor
xor
and
mov
gs
push
and
clc
jmp
es
popa
inc
cmp
cmp
mov
xlat
xchg
mov
sarl
cmpsl
daa
push
or
sbb
push
sbb
fwait
mov
mov
movsl
cmpsl
jecxz
push
mov
jg
data16
cmp
loopne
pushf
hlt
add
mov
ficoms
pop
add
xor
call
pop
mov
dec
fidivs
enter
les
leave
outsb
jae
hlt
xor
int
pop
cmpb
inc
add
push
mov
cmp
push
fsubrp
js
inc
imul
mov
repnz
and
pop
scas
mov
xchg
cmp
adc
gs
sub
mov
mov
test
test
roll
fwait
stc
jp
pushl
test
xchg
dec
std
jge
pushf
lcall
add
push
push
adc
pop
cmpsl
ss
stos
or
sub
ud0
pmulhuw
inc
daa
into
cmpsl
push
enter
dec
xor
orb
sahf
aaa
jmp
testb
adc
sbb
add
jbe
cld
scas
pop
into
sbb
loop
loopne
in
sub
jge
or
std
add
repnz
dec
movsb
popf
test
mov
mov
aam
outsb
inc
clc
loopne
subl
and
jno
mov
inc
daa
or
push
jne
pop
adc
inc
inc
dec
add
aad
inc
push
mov
clc
xchg
add
pop
gs
and
aas
push
enter
call
adc
mov
das
test
push
xor
in
adc
push
push
mov
imul
push
pop
sbb
aas
and
ds
add
inc
gs
add
add
xchg
pop
mov
sbb
cld
inc
cmc
push
mov
insl
xchg
xor
xor
adc
out
js,pn
and
dec
rclb
outsb
or
push
mov
inc
jge
mov
inc
cmpsb
xlat
jg
push
xor
bound
inc
pop
dec
pop
inc
push
pop
adc
scas
inc
data16
sbb
ja
insl
and
gs
das
leave
cld
fisubs
jo
gs
scas
mov
daa
into
lds
xchg
inc
jo
adc
pop
mov
test
mov
sbb
nop
fs
decl
push
hlt
and
or
enter
divb
mov
pop
xor
aam
movsl
subl
shlb
iret
inc
shrl
sub
xor
fsubs
fcoms
xchg
test
jbe
lea
or
out
xchg
cmc
push
or
dec
mov
pop
xchg
jmp
imul
cmc
movsl
in
out
push
jecxz
xchg
sbb
sbb
pop
mov
push
mul
or
movsl
call
xor
xchg
rcll
in
push
filds
jae
daa
divl
mov
sahf
dec
int3
or
sub
lcall
lret
popf
mov
lods
outsb
lods
cmpsl
out
in
mov
jle
push
into
cs
dec
bnd
roll
xchg
inc
dec
test
into
inc
cmc
and
sahf
movsl
mov
inc
pop
jecxz
dec
cmp
push
cli
push
shlb
xchg
leave
lods
pop
fistps
cmpsl
pop
js
sbb
aas
dec
ret
call
ret
loope
mov
sarl
fbld
outsb
and
fbstp
xor
dec
pop
mov
testb
push
push
xor
jns
or
rcr
and
fadd
cs
xchg
sub
cmpsb
and
xchg
pop
jg
cmpsb
rcrl
loope
or
inc
je
mov
ror
dec
xchg
jp
in
cmpsb
scas
shrl
loopne
pushf
mov
push
add
and
xchg
push
in
pcmpgtw
xor
and
dec
fdivl
fdivl
jnp
cld
int
add
push
insb
mov
imul
addb
mov
shr
lock
xchg
pop
xor
push
xor
stos
rolb
cwtl
mov
dec
add
inc
fildll
enter
jle
daa
add
mov
es
cmpsb
test
mov
dec
jle
movsb
cwtl
sbb
popa
aas
xchg
sub
inc
dec
jb
pop
jbe
adc
mov
xor
jmp
jo
fcmovbe
je
aam
icebp
test
jl
pop
and
stc
pushf
cmpsb
jecxz
repz
lods
sub
push
adc
data16
insl
or
dec
sti
mov
js
mov
outsb
lret
es
pushf
adc
push
jge
clc
adc
cmpsb
dec
sarb
movsl
into
movsl
inc
ja
daa
js
push
repz
rcrl
xchg
lock
sbb
scas
mov
jg
loop
xchg
fmuls
or
jb
ret
mov
out
jns
inc
andl
lds
jge
das
dec
inc
mov
jecxz
mov
cli
in
xchg
imul
out
jbe
jg
inc
iret
out
lods
mov
enter
add
dec
xchg
loope
xchg
xor
aaa
ret
scas
dec
or
cmp
cmp
mov
fnstsw
enter
jnp
fmul
xchg
add
out
mov
out
outsl
dec
call
add
shrb
xchg
mov
mov
les
pop
mov
in
sbb
and
fs
xchg
inc
push
jp
cltd
mov
xchg
sub
mov
insl
xlat
mov
push
adc
pushf
jg
dec
and
jae
push
test
inc
iret
out
call
fidivrl
cmp
subb
fldenv
sti
sub
add
fs
outsl
loopne
push
cld
int
dec
ret
test
sti
cmc
repnz
push
adc
data16
cltd
lds
push
fdivrl
mov
jmp
mov
xchg
dec
and
in
fcos
jmp
add
int3
dec
cmp
fstps
fcmove
shrl
test
pop
call
lock
and
inc
jae
jne
rolb
cmp
push
jb
push
clc
pusha
sarb
mov
sbb
das
push
fsubs
jle
aad
adc
xchg
mov
mov
pop
mov
test
ficomps
bound
push
sti
movsl
xor
xchg
or
push
popa
dec
sub
dec
loop
dec
push
inc
xchg
fs
push
inc
lods
sub
rcr
notl
jmp
push
addr16
mov
add
repnz
push
sub
imul
sbb
and
xlat
push
adc
imul
ljmp
lods
xlat
sbb
cmp
and
push
or
mov
sbb
jmp
imul
dec
data16
sub
or
cmp
pop
jle
xor
int3
dec
fisubrs
test
add
fs
xor
inc
pop
sbb
lret
adc
in
cmc
xchg
sub
jb
xchg
cmpsb
addr16
call
mov
or
xor
jnp
out
imul
pop
adc
mov
repnz
jnp
sbb
jnp
jl
pusha
clc
sub
in
out
popf
mov
loop
int3
mov
pop
repz
sbb
idivl
ret
arpl
aad
inc
push
repz
mov
inc
add
mov
sar
cmc
insl
in
xchg
repnz
data16
in
fstpt
or
push
adc
loope
mul
sbb
out
inc
add
xor
pusha
sub
int
flds
int
std
int
rorb
fs
push
add
mov
sub
mov
pop
and
cmp
jno
repz
lds
push
loop
imul
testb
cmpb
cmp
ja
out
push
je
in
sarb
iret
xchg
jle
push
in
das
xor
sub
mov
xchg
xchg
xchg
xor
pop
pusha
stos
das
jns
dec
mov
jbe
xchg
pop
lahf
add
add
aam
unpcklps
or
xor
inc
arpl
jne
lea
bound
push
cmp
adc
jns
push
cmp
or
fdivrs
fiadds
xor
enter
popa
loopne
add
pop
jp
inc
cmpsb
aas
sbb
inc
adc
mov
mov
ret
jl
pop
lods
fldcw
loope
ss
push
ret
std
push
movsb
mov
add
cmp
int
call
inc
dec
mov
pop
out
scas
pop
ljmp
and
fdecstp
pop
shlb
mov
mov
stos
pop
popa
push
fdivrl
add
push
lods
cmp
mov
inc
pop
cmp
lahf
cwtl
mov
push
dec
shll
inc
jb
jo
call
lock
dec
movsb
ret
jecxz
inc
stos
imul
jle
adc
dec
jecxz
test
xchg
push
enter
xchg
mov
lret
inc
pop
ret
add
jae,pt
pop
outsl
scas
dec
into
sahf
ja
dec
and
jbe
dec
rol
or
jne
or
mov
sbb
xchg
or
mov
add
and
addr16
inc
xlat
sub
sbb
ffreep
shll
mov
imul
out
outsb
ret
pop
out
xchg
xchg
movsb
shrl
insl
stc
mov
mov
pop
std
movsb
jae
push
fwait
in
icebp
rorb
sub
sub
sub
adc
push
cli
pop
outsb
rclb
push
adc
dec
cmp
fs
or
xor
add
imul
xchg
add
jbe
lock
out
jae
jb
mov
sbb
and
mov
lock
daa
jns
loope
push
lret
cwtl
pop
lea
adc
xchg
sub
mov
sti
ret
cwtl
test
das
jno
fisttpll
call
add
nop
movsb
jle
or
mov
cmpsl
inc
sti
pop
add
dec
xchg
sub
jo
test
in
aaa
cmpb
sub
mov
xor
mov
xorl
inc
sub
insl
dec
cmpl
mov
mov
dec
fstpt
popf
cld
pop
nop
sbb
push
clc
and
lods
ds
ficompl
add
into
cmc
push
dec
bnd
clc
sbbb
push
addb
loopne,pt
cs
bound
sub
pop
xchg
decl
aam
mov
aad
xor
mov
dec
mov
stos
sub
es
and
test
je
mov
sarb
lock
inc
cmc
test
and
in
jg
ljmp
xor
push
test
dec
dec
hlt
cli
repz
or
push
fsubp
rcrl
adc
popa
dec
xchg
pop
bound
ljmp
dec
insl
add
cmp
enter
jmp
jnp
xor
repnz
push
push
out
daa
jmp
out
or
rorl
mov
inc
jbe
and
xchg
in
sbb
push
test
fistps
xor
push
add
mov
or
cmp
fmuls
adc
insl
clc
test
xor
push
les
xchg
jo
jnp
and
mov
mov
mov
xor
inc
out
cmp
test
lahf
nop
inc
mov
mov
push
mov
push
sbb
xlat
je
sarb
dec
xor
mov
mov
xor
mov
push
ficomps
test
sbb
lods
aas
stos
into
or
jmp
push
adc
fistl
sbb
inc
inc
push
sub
je
inc
and
ja
adcl
or
adc
out
aas
lret
insb
xchg
mov
sub
add
mov
int
inc
inc
and
rorl
xor
aas
or
outsb
stc
cmp
dec
out
in
js
xchg
sub
cmp
and
jb
mov
ret
jle
push
lea
scas
sbb
ret
add
xchg
sbb
and
sub
fsubrs
dec
dec
dec
jnp
or
cmp
rcr
mov
pushf
mov
cmp
pushf
xchg
xor
aad
push
jbe
lcall
jg
push
stos
pop
lods
sahf
stc
daa
cmp
aam
leave
outsl
int
loopne
dec
mov
push
rolb
lcall
test
sub
xor
dec
out
cmp
dec
fsubrs
imul
jnp
sub
fnstcw
pusha
jge
mov
push
sub
rcrb
js
out
or
sbb
hlt
pusha
shlb
mov
or
or
xchg
pushl
movsb
arpl
lea
loopne
ror
add
pop
shrl
pop
adc
mov
jp
or
aas
in
leave
xchg
push
cmp
addr16
test
aas
xchg
pop
pop
sbb
nop
xor
pop
xor
inc
sub
pop
mov
dec
xchg
mov
fsubs
ds
adc
mov
rcll
pop
fstpl
jp
hlt
jge
xor
ret
adc
cmp
lahf
stc
out
cmpsl
adc
dec
jl
addr16
fs
jb
idivb
fistpl
mov
pop
adc
sbb
sbb
mov
mov
cmpb
push
inc
jns
ss
out
jb
std
or
mov
sbb
xor
inc
mov
ljmp
fs
clc
out
lock
sub
int
js
jp
mov
dec
stos
xor
clc
jb
pop
imul
pushf
mov
adc
dec
insb
ds
pop
test
inc
clc
dec
jb
clc
pop
jnp
int3
stos
inc
adc
cmp
insl
xlat
inc
push
mov
in
jmp
jo
testl
jmp
push
jne
xlat
movl
xchg
cli
adc
jg
test
push
dec
jg
imul
push
jmp
cmp
repnz
and
adc
pop
jle
test
push
mov
jg
loopne
or
inc
rclb
or
add
std
dec
imul
and
das
popf
sub
dec
mov
jg
subb
out
inc
mov
push
pop
mov
and
fsubrp
push
jae
cmpsb
adc
inc
repz
sbb
push
loop
ret
add
lods
int3
cmp
or
les
arpl
adc
stos
push
outsb
push
outsb
aaa
and
loope
notb
jecxz
jmp
mov
addr16
inc
ljmp
jg
fwait
pusha
stos
xchg
lret
cmpsb
xor
inc
loope
cli
or
pop
es
test
sub
or
decb
jbe
in
call
pop
sbb
push
add
outsb
bound
jmp
in
pop
pop
xlat
nop
xor
mov
xchg
sahf
outsl
xchg
mov
mov
xor
insl
jne
ret
sbb
push
sub
adc
jge
sbb
outsl
mov
inc
sti
lcall
cmp
mov
and
mov
adc
faddl
inc
fwait
ds
cmp
sahf
adc
lcall
jmp
xchg
imul
xchg
and
dec
add
push
mov
cmp
inc
das
add
xor
into
out
ja
jbe
cmpsb
and
mov
push
negb
in
int
in
lock
fnstsw
mov
sub
jmp
imull
xorl
mov
repz
jmp
adc
mov
and
xchg
stc
cltd
inc
mov
cld
cmpsl
adc
lds
push
cmp
lret
sbbl
xchg
fsubrs
push
xor
sti
mov
sbb
jo
stos
rclb
dec
jae
dec
pop
push
mov
xchg
adc
mov
stc
mov
imul
jae
push
out
dec
mov
shrb
or
out
ds
jns
das
cmp
popa
iret
adc
and
fimuls
and
lret
aad
subl
xor
loop
es
sti
test
imul
push
sbbb
insb
push
pop
std
gs
mov
sub
cmp
mov
test
in
outsl
add
inc
and
lods
loope
ja
pop
icebp
xchg
sub
xchg
add
or
jnp
cmp
mov
cs
push
xchg
mov
xchg
iret
nop
imul
mov
fwait
add
imul
inc
cmp
mov
xchg
loop
js
test
testb
mov
mov
mov
in
sbb
fnstsw
push
rcll
adc
adc
jnp
inc
or
popf
mov
sbb
mov
sbb
add
add
cmp
mov
push
adc
test
lods
iret
mov
mov
mov
scas
out
shl
ljmp
fidivl
and
out
mov
pop
insl
pusha
jmp
das
mov
jle
stos
adc
mov
imulb
xor
mov
sbb
incb
gs
in
cli
push
in
in
mov
negl
sbb
add
ja
sti
pusha
js
lcall
jge
dec
nop
xor
mov
pop
rcll
or
sub
popa
gs
sub
mov
mov
jp
pop
or
push
dec
pop
sbb
dec
fcomp
sub
cs
fwait
sti
mov
mov
jp
cmc
dec
sti
xor
ljmp
leave
cmp
cs
adc
mov
fs
repz
jo
inc
in
mov
in
xor
lret
dec
jp
aam
shr
out
mov
out
into
and
es
sub
push
jae
orl
rclb
pop
pop
fmuls
inc
adc
push
mov
lds
adc
imul
hlt
mov
ret
cmc
scas
popf
call
aad
sbbl
into
push
or
data16
lea
test
clc
push
or
icebp
cmp
xchg
in
mov
add
jecxz
sub
mov
mov
in
add
movsl
mov
xor
or
imull
mov
iret
ds
cmc
repz
dec
sbb
out
dec
mov
fnstenv
lods
mov
jnp
inc
xor
les
dec
lods
add
xchg
add
int
scas
jb
or
add
aam
pushf
lahf
or
int3
inc
add
stc
pop
test
pop
sub
add
push
aaa
add
lea
xchg
or
cld
loopne
push
fidivl
jbe
shll
jo
lea
mov
call
add
imull
sbb
aas
fsub
pop
mov
fstpt
loopne
and
aad
xor
popf
repz
jg
shrb
mov
sahf
jnp
cli
repz
mov
xchg
scas
xchg
jge
pop
loope
sub
ja
jp
stos
ja
test
scas
pop
in
sbb
or
jmp
lds
cmp
add
jmp
xor
add
inc
outsb
scas
mov
xorl
adc
leave
jae
cwtl
ret
dec
pop
insl
lods
fwait
or
inc
pushf
out
aaa
je
inc
lods
pop
xchg
clc
mov
out
je
and
ret
movsl
mov
ret
pop
cmp
push
stc
je
adcb
aam
shlb
cmpsb
jecxz,pn
mov
sbb
dec
and
xor
sub
adc
inc
pop
ja
inc
jne
xor
sub
adc
movsl
push
das
push
dec
xchg
notb
pop
cmp
stos
cmc
mov
imull
cli
pop
fcmovnb
sahf
sbb
enter
int
mov
lea
push
cmp
cmp
or
shll
mov
bound
and
jae
lods
pusha
push
popf
mov
icebp
mov
jg
out
or
das
sti
push
xchg
xchg
adc
ficoms
repnz
fmuls
xor
xor
mov
rorb
adc
jecxz
cwtl
movl
cmp
jg
mov
je
dec
hlt
enter
pop
sbb
es
pop
jmp
mov
subb
cltd
bound
dec
xchg
icebp
mov
pop
gs
popf
pop
mov
xor
addb
cmp
dec
pushf
xchg
sbb
pop
movsw
cmpsb
lods
inc
hlt
push
or
clc
sbb
jle
mov
pop
lods
inc
ficoml
std
mov
or
dec
xchg
sbb
jmp
popf
call
fbstp
addr16
xchg
std
adc
jp
nop
pop
outsb
cs
jp
pop
xchg
in
ss
xor
inc
imul
fcompl
je,pt
in
aad
jb
mov
scas
pop
adc
adc
xchg
lea
js
add
mov
cmp
movsl
push
leave
mov
sub
aaa
inc
aaa
mov
jns
cmc
mov
dec
jno
jl
das
or
loopne
test
stos
shl
pop
mov
pushf
cmp
idivl
jl
and
push
sub
test
and
xchg
daa
lret
jmp
insb
out
mov
pop
cmc
or
popa
sbb
sbb
push
cmp
jmp
lods
in
xchg
mov
pop
int3
push
pop
in
in
clc
or
mov
sub
push
push
test
dec
cmp
out
sub
add
test
inc
or
and
shll
loope
dec
and
mov
and
adc
xor
out
pop
push
mov
pop
inc
jecxz
xor
hlt
loope
popa
in
orl
add
notb
adc
xor
enter
lds
lea
push
imul
sub
mov
sub
stc
out
in
daa
cmp
rep
iret
and
mov
rolb
inc
push
xor
lods
vdivpd
push
pop
and
outsl
stc
add
lods
cmpsb
adc
and
les
cld
ret
test
pusha
stos
inc
ljmp
icebp
mov
dec
mov
sbb
fldt
out
shll
clc
in
or
xlat
or
adc
cmp
sub
inc
loop
add
addr16
sbb
fcompl
subb
das
fildll
xor
cmovs
or
mov
sub
adc
icebp
hlt
sarl
cmp
or
lods
mov
jae
movsb
adc
aas
add
aas
test
insl
enter
dec
sbb
mov
cmp
mov
xor
test
shrl
xor
fistpl
xchg
cld
movsb
push
xor
inc
mov
adc
pop
rorl
out
lret
inc
fisubl
cmp
jle
leave
loope
cmp
repnz
gs
sub
popf
mov
xor
adc
pop
sbb
cmp
ss
inc
inc
inc
ja
lcall
cmc
jmp
mov
pop
daa
shrl
in
dec
adcb
mov
jp
and
jae
fs
add
push
subl
ja
inc
ret
repnz
clc
cmovne
xchg
xlat
add
cmp
mov
jb
add
fdivp
xchg
mov
cmp
xchg
mov
mov
test
pop
out
idivl
jl
loope
cwtl
ljmp
icebp
push
push
xlat
movsb
inc
fildl
mov
cli
push
mov
mov
call
test
int3
daa
or
int
shlb
sbb
fidivrl
mov
inc
jne
push
stos
pop
and
sahf
inc
jae
add
mov
push
js
subb
sarb
add
das
adc
out
xor
mov
fld
rolb
fldenv
mov
lahf
push
push
xor
push
dec
xchg
movsl
inc
inc
popa
fdivl
fstps
jb
int
pop
add
mov
jge
xlat
push
mov
pop
in
fisubrl
out
in
mov
dec
mov
push
fnsave
clc
icebp
ret
mov
lea
int3
mov
and
popf
mov
xor
push
loopne
fildll
xchg
imul
mov
inc
pop
sbb
and
mov
pop
int
push
xchg
mov
sub
rolb
call
cmp
xor
xorl
xor
dec
repnz
pop
jmp
or
mov
xchg
test
mov
and
out
jg
or
je
jl
pop
lea
dec
in
xor
sub
dec
ss
or
cmpl
leave
pop
or
jmp
adc
xor
test
into
fs
insb
inc
jne
sti
cld
jp
add
sar
popl
mov
sbb
inc
lcall
pushl
insb
jno
nop
sbb
mov
lods
inc
jg
sbb
sub
mov
jmp
out
xchg
pop
bswap
aas
insb
int3
jge
push
stos
aaa
push
lods
jno
sub
enter
sub
push
inc
arpl
jp
in
xchg
cltd
std
lret
test
lret
iret
fstpt
push
sub
ficompl
push
hlt
mov
scas
test
mov
out
sbb
pop
aad
mov
subl
jle
loope
icebp
push
cmp
jbe
andb
iret
cmp
and
push
mov
das
movsb
pop
js
lock
push
insl
fstl
sbb
and
push
insb
or
xchg
es
sub
in
jb
imul
adc
pop
ja
insb
arpl
lahf
adcl
iret
rcl
loope
das
pop
setnp
orl
sub
xchg
inc
push
pop
shlb
loop,pn
xchg
insl
out
loopne
bound
popa
xor
xchg
push
sbb
jp
mov
push
fwait
test
jmp
stos
add
hlt
jle
mov
and
test
out
adc
pop
dec
je
fisttpll
mov
rcll
bound
jo
push
stc
lods
push
inc
les
jmp
cmp
jae
rcr
xorb
bound
sub
mov
ret
outsl
pusha
mov
div
xor
mov
mov
cmp
daa
notl
cmp
adc
rcll
ds
pop
loope
cmpl
dec
jp
test
jne
mov
lret
daa
xlat
cli
add
cwtl
or
push
dec
adc
inc
js
popf
push
jmp
adc
cmc
mov
lahf
pop
into
rol
addr16
lock
int
sbb
xor
cwtl
adc
insl
call
repz
imul
sub
xchg
pop
or
ja
jecxz
inc
jne
pop
push
push
pop
jo
push
jmp
xor
push
fcompl
repz
enter
outsl
jmp
aaa
xor
mov
sbb
mov
xchg
pop
mov
jmp
jl
cmp
mov
lock
cmp
push
mov
cli
push
stc
jo
fdivrs
ss
mov
adc
leave
loopne
pop
xchg
xor
pop
pop
xchg
jae
adc
mov
sbb
cltd
xchg
and
and
out
xlat
xor
mov
cltd
mov
and
repnz
bound
xor
sbb
xor
dec
push
fiaddl
aad
and
xor
lods
jb
xlat
out
ja
lret
lahf
cmp
popf
push
mov
adc
pop
fwait
add
sbb
pushf
es
in
adc
xor
mov
adc
inc
mov
ds
add
lret
test
sub
push
sbb
cmpl
and
cmp
repnz
mov
jae
ljmp
call
loop
shlb
popa
test
mov
adc
sub
int
jo
out
jbe
sbb
sti
add
les
mov
push
adc
insb
int3
cmpsb
cwtl
mov
and
ret
imul
xor
mov
out
push
test
and
mov
sub
lret
or
push
cli
outsl
push
push
adc
sub
pop
sbb
je
jecxz
sbb
xor
ljmp
ss
ret
xchg
mov
inc
fucomip
popa
stc
mov
outsl
inc
mov
hlt
es
push
js
jo
bound
loopne
pop
scas
xchg
sbbb
addr16
testb
fisubrl
push
pop
test
fmulp
and
cwtl
xor
pop
hlt
lds
and
jae
outsl
dec
hlt
aad
jno
stc
mov
addr16
negb
xlat
rorl
mov
loop
add
pop
adc
adc
mov
in
outsb
loope
push
sub
and
das
jl
stos
clc
push
and
mov
cwtl
daa
nop
movsb
arpl
xchg
dec
into
aas
fcomps
inc
cld
sti
ret
hlt
and
shll
scas
loop
pushf
or
inc
push
popa
test
shll
jo
ja
pop
popa
leave
jae
mov
push
xchg
test
sub
push
andb
aam
mov
pop
sub
les
aam
movsl
xchg
dec
pop
cmpsl
sbb
cmp
dec
out
icebp
mov
dec
cmp
arpl
call
and
and
out
push
stc
lret
adc
ret
push
rolb
call
cld
ret
and
xchg
jg
clc
xchg
jae
jl
sbb
dec
fimull
adc
pushf
negb
repz
jb
sar
fnsave
mov
imul
cmpsl
push
js
jecxz
xchg
mov
mov
mov
inc
push
jno
pop
jb
adc
add
es
or
out
jge
leave
push
mov
clc
movsl
sbb
std
out
fistl
negb
clc
dec
jbe
out
or
ret
xchg
jbe
rcr
and
pop
or
xor
sbb
dec
xor
push
lret
scas
cltd
mov
adc
mov
std
pop
pop
push
sarb
jno
jmp
gs
addr16
mov
add
stos
aam
lods
shlb
divl
popf
push
loop
jl
das
xor
cmpsl
inc
pop
repnz
mov
add
test
and
loopne
inc
dec
add
dec
cld
and
int
inc
orb
mov
ret
inc
scas
mov
lds
or
and
mov
xchg
insb
jae
popf
ret
sub
int
les
cmp
cltd
dec
leave
cmpl
ret
arpl
inc
outsl
fwait
and
push
in
mov
inc
sub
enter
enter
pusha
lea
sub
popa
jle
xor
dec
and
sti
push
jnp
jl
stc
adc
sbb
sbb
repz
ficoms
mov
mov
cmp
hlt
adc
bound
add
push
rol
mov
sub
sub
test
or
cmp
test
pushf
adc
cmpsl
xor
sbb
stos
xor
into
int3
loope
jmp
and
rcl
test
stos
inc
jge
leave
lock
in
daa
pop
jbe
mov
sub
push
or
pushf
add
mov
jnp
mov
sbb
arpl
cmp
pop
in
sub
scas
adc
ret
and
xchg
icebp
daa
adc
xchg
or
lods
jg
cltd
outsb
pop
mov
aam
es
ljmp
xor
les
repnz
scas
ret
ficoms
add
pop
mov
jmp
jo
testb
add
enter
clc
sbb
cmp
adc
push
insl
mov
int3
data16
push
jae
adc
dec
dec
cmpsl
dec
xor
inc
mov
orb
test
xlat
jne
add
xor
gs
add
mov
pop
ss
mov
ss
push
cmp
mov
loop
cld
in
pop
jle
test
adc
lea
push
pop
out
aad
mov
lret
jle
or
test
pop
xchg
add
data16
lock
lret
sti
jle
xor
sub
ja
or
sbb
sahf
lcall
jp
add
mov
imul
inc
rcrb
or
push
dec
cmp
xor
icebp
cwtl
mov
mov
stos
jmp
imul
mov
fld
or
mov
out
sahf
rcrl
hlt
push
or
ss
push
pop
mov
sbb
mov
insl
aas
outsb
pushf
gs
mov
scas
mov
nop
pop
jae
imul
scas
repz
xor
xor
mov
roll
dec
insb
fisubl
mov
sub
adc
gs
mov
in
sbb
cltd
cli
aaa
out
clc
mov
xchg
xor
push
push
dec
movsl
sub
sti
outsb
mov
lret
lods
sbb
fsubrp
mov
jp
hlt
shr
cmp
jle
fimuls
mov
mov
movsl
cmc
xor
jp
xlat
cmp
inc
sbb
mov
sub
repnz
stc
or
and
or
out
pusha
jno
aas
mov
xchg
sahf
mov
inc
mov
push
bound
cmpsb
cmp
xor
mov
test
xchg
pop
push
mov
xchg
fdivrs
and
incl
and
jecxz
push
dec
test
imul
cmp
sub
jecxz
cld
sti
pop
jnp
and
in
inc
pushf
jge
cmp
push
push
in
arpl
push
enter
cmp
sar
mov
lret
lea
mov
ja
inc
lods
inc
adc
gs
jae
lods
insb
movsb
icebp
dec
mov
test
push
xor
stc
ds
ljmp
mov
add
xchg
sbb
mov
popf
bound
sub
or
pop
jno
fwait
repz
mov
in
enter
pop
cmp
mov
scas
cwtl
mov
in
mul
cld
lcall
xchg
aas
mov
scas
and
hlt
mov
clc
xchg
push
repz
xchg
movsb
call
inc
mov
sbb
cmpsb
cmp
iret
out
push
pop
or
xor
cmp
mov
test
int
push
and
pop
jl
push
out
sub
mov
add
movups
mov
adc
or
outsl
jg
dec
push
xor
cwtl
pop
fistps
pop
lods
repz
stos
add
ljmp
das
sbb
pusha
push
cwtl
sub
dec
dec
or
fs
pop
or
add
or
test
cmc
pop
test
mov
aas
adc
mov
rorb
or
jl
add
pop
addl
stc
into
fnsave
and
pop
inc
scas
sub
push
push
dec
into
push
cmp
int
xor
xlat
ret
mov
into
scas
ljmp
lcall
lahf
pop
lcall
adc
insl
cld
ret
cmpsl
push
push
adc
aas
sub
jne
pop
ljmp
adc
mov
adc
data16
sbbb
xlat
lret
pop
ror
aad
sub
mov
push
sahf
cmp
into
sahf
adc
xor
push
adc
mov
jmp
mov
and
sbb
mov
push
repz
bound
inc
xchg
in
mov
pop
pop
in
sbb
arpl
and
in
or
lea
aam
loopew
popa
bound
dec
cli
xchg
jl
lcall
pop
sub
out
pusha
xchg
pop
lret
cmpsl
sub
sbb
mov
push
jge
adc
xchg
mov
dec
sahf
stos
sti
adc
push
into
push
push
scas
ljmp
pusha
inc
ds
call
addl
test
daa
cmp
in
popf
xchg
lcall
andb
popl
cmc
adc
jb
pop
movsl
jo
aam
pusha
jns
pop
jae
adc
dec
pushf
mov
les
xabort
inc
fidivrs
xor
aas
xchg
push
jl
lahf
add
sti
xor
jbe
cmc
rorb
pop
in
lahf
jl
xchg
push
mov
xchg
jbe
jp
fiadds
add
mov
cmpsb
mov
inc
sbb
xchg
mov
push
js
push
cs
xchg
ret
xchg
and
pushf
jmp
mov
shrb
cmp
cmp
ja
lea
andl
in
push
sub
xchg
pop
leave
mov
lcall
mov
xchg
pop
dec
je
out
jmp
hlt
popf
mov
repnz
dec
sub
push
movsb
lahf
xor
xor
sbb
test
mov
cmpb
xchg
sbb
fadds
je
or
or
aam
clc
lret
xor
cmp
xchg
rcl
add
stos
push
fmul
sub
sbb
inc
dec
mov
xchg
add
fwait
nop
inc
push
mul
add
leave
push
out
dec
or
aad
mov
push
sub
das
mov
xchg
addr16
cmpsl
gs
adc
aas
pop
in
mov
hlt
bound
mov
nop
cs
inc
out
push
imul
mov
mov
jne
mov
push
adc
xchg
rorb
stc
pop
jmp
sbb
lods
dec
loopne
push
ret
pop
daa
stos
in
frstor
jp
cmpsl
imul
mov
inc
or
aaa
dec
stos
and
int
pop
arpl
outsl
loope
clc
sub
es
or
pop
and
data16
adc
mov
or
fwait
cmc
jge
mov
push
xlat
out
daa
iret
lret
add
fdivp
adc
mov
stos
rolb
nop
pop
xchg
pop
arpl
dec
inc
mov
sbb
cmp
hlt
mov
push
movsb
lods
loop
mov
call
dec
ss
adc
cld
test
or
in
push
and
cltd
adc
dec
cmp
sub
add
int3
sbb
cmp
fs
pop
stc
push
inc
xor
ret
mov
xor
push
push
orb
rorl
mov
clc
lret
insl
movsb
fisttpl
dec
loope
insb
lods
pushf
dec
gs
mov
xchg
aas
pop
dec
test
icebp
xchg
loop
mov
test
out
mov
sarb
sbb
sbb
mov
pushf
add
adcb
mov
sub
es
sbb
out
add
mov
in
loopne
dec
cmpl
dec
push
adc
sahf
lods
pushf
add
push
insl
inc
mov
fidivrl
ds
push
shr
test
stos
xchg
dec
inc
test
fsubr
mov
sub
add
adc
insb
lcall
pushf
aad
pop
mov
inc
popa
xchg
jnp
xchg
mov
pop
dec
out
out
sbb
stos
jb
or
mov
repz
fildll
mov
mov
cli
popa
scas
out
lahf
sbb
jo
outsl
jp
scas
mov
sub
or
pop
out
jmp
pop
cs
loop
xor
out
shr
pop
subb
pop
sub
jecxz
lds
fisubs
in
jns
add
in
roll
lock
or
out
add
mov
push
mov
nop
inc
adc
outsb
cmp
ret
in
pop
jno,pn
das
xchg
es
or
imul
mov
inc
cs
sub
pusha
aam
jnp
ds
ret
add
loopne
mov
xchg
sti
push
jns
sub
pop
xchg
xchg
and
cmpl
fbld
mov
mov
push
push
sub
mov
not
mov
mov
pop
cld
in
jo
lods
in
jo
xor
add
dec
int3
js
pop
or
lret
sbb
cmp
xor
adc
imul
lds
pushf
aaa
cmc
into
ds
movsl
pop
cld
mov
imul
pusha
mov
adc
fisttps
test
es
dec
pop
or
adc
push
xor
mov
jg
sub
cltd
bound
xchg
dec
rcll
adc
imul
mov
fwait
pop
sbb
out
dec
xlat
shlb
repz
jg
popa
aam
test
lea
jp
mov
push
lret
xor
or
pop
mov
div
stc
adc
or
or
jo
stos
cmp
inc
and
jbe
popa
imull
mov
cltd
mov
push
or
pusha
fs
jg
pop
fdivl
or
push
jno
sbb
mov
push
nop
push
pop
lods
and
dec
imulb
jmp
insl
mov
sub
jnp
lahf
ds
test
data16
dec
lcall
add
andb
and
gs
cmp
rorb
jge
add
adc
int
add
test
dec
dec
jns
add
bound
in
cmp
dec
fwait
out
xor
imul
cltd
push
insb
stc
je
and
daa
xchg
push
add
fcmovnbe
cmp
adc
shl
adc
mov
pushf
sbb
movsl
adc
xor
hlt
add
out
daa
shl
add
xchg
xor
lock
jae
aad
movsl
xor
mov
sbbb
xorl
or
outsl
addb
or
sbb
pushf
cmp
adc
imul
add
lock
cmpl
rcr
lods
dec
pusha
ret
sub
insb
push
sub
shl
into
jge
cwtl
sarl
in
or
mov
jne
cltd
xchg
int
fistl
fst
pop
xchg
pushf
fistpl
shl
sbb
or
cmpsb
leave
fwait
push
repz
xchg
mov
mov
fsub
scas
inc
fsubr
fnclex
xchg
aad
add
xor
sub
scas
gs
mov
fcmove
inc
jb
cmp
daa
fcmovnbe
mov
xor
lods
hlt
mov
fmuls
push
inc
cltd
adc
xchg
dec
imul
adc
loop
mov
pop
out
in
aas
mov
xor
push
pushf
jne
mov
sahf
jl
xor
addr16
dec
bound
or
dec
mov
les
sahf
test
insl
sbb
scas
fisubrs
mov
xor
mov
and
jl
leave
jne
sahf
test
loope
nop
imul
push
pop
push
sub
jge
in
push
adc
push
in
mov
lret
scas
int
movsl
xchg
je
jne
xor
dec
push
das
mov
cmp
xchg
inc
push
mov
stos
and
inc
inc
loope
push
or
mov
push
lea
std
ror
dec
pop
mov
lcall
ror
roll
and
sti
adc
dec
xchg
pop
rcl
inc
sarl
cmpsl
sbb
mov
jecxz
out
fstpt
pop
sub
fidivrl
mov
cs
incb
loop
jmp
mov
mov
sahf
cwtl
sbb
and
insb
cmp
insl
jne
mov
adc
int
das
in
in
jb
repz
inc
adcb
pop
mov
lcall
jmp
std
ja
jae
add
iret
or
inc
jo
push
je
push
xor
mov
outsl
cmpsb
push
pushf
mov
divb
test
int3
or
add
mov
inc
icebp
xchg
add
into
in
dec
sbb
fisubrs
sbb
movsl
hlt
jmp
fs
and
cmp
movsb
xchg
scas
repz
xchg
inc
sub
mov
sbb
push
xchg
mov
and
or
pop
push
int3
push
ret
inc
jmp
jbe
jl
and
mov
fwait
mov
sahf
inc
lcall
leave
pop
nop
mov
sub
sub
mov
mull
inc
test
test
push
popl
sub
inc
jmp
shrl
dec
mov
mov
ja
sbb
orb
arpl
addb
sbbb
jae
div
cmp
into
or
ljmp
sbb
add
jl
xchg
cmp
mov
pop
push
jle
xchg
cs
inc
in
mov
and
lods
lods
aad
es
cltd
orb
mov
pop
aad
repz
cmp
cmp
mov
dec
lahf
sbb
sti
aad
lret
xor
mov
add
mov
jl
jns
mov
insl
loop
push
inc
cmc
push
mov
xor
jo
nop
sub
aas
roll
jmp
call
icebp
mov
lret
mov
inc
cmpsl
out
mov
jp
cmp
sbb
test
test
add
out
loopne
push
inc
in
aad
xor
or
sub
push
pop
pop
orb
xchg
jne
xchg
mov
sub
in
mov
outsb
mov
cld
mov
pop
sbb
sti
pop
xor
movsb
inc
inc
arpl
add
pushf
or
rcrb
loop
and
cmp
mov
jb
push
cmp
or
and
dec
lock
xor
sub
push
into
js
scas
movsl
rorl
lock
jecxz
pusha
sbb
je
pop
lret
call
notl
out
gs
pop
or
cmp
mov
adc
lods
insb
or
inc
mov
sti
mov
in
sti
stos
clc
inc
ret
push
gs
test
lods
sahf
mov
clc
inc
test
test
pop
xor
adc
xor
test
inc
sbb
or
test
or
push
mov
repz
iret
leave
pop
add
sbb
scas
lret
push
in
subl
mov
dec
fldt
leave
push
sahf
es
shl
jp
ja
dec
arpl
fcoms
dec
int3
xor
pop
test
mov
outsl
outsb
and
stos
subl
push
testb
push
sbb
xchg
ja
xor
xlat
test
test
jae
lds
clc
pop
loop
shrb
ljmp
ja
pop
jle
add
pusha
cmpb
call
inc
frstor
mov
jae
pop
lods
icebp
adc
cli
sti
pop
movsl
dec
in
cld
sbb
or
add
and
jne
rcr
sub
add
gs
popa
or
adc
stos
nop
and
iret
sub
dec
xorb
scas
hlt
cld
mov
sbb
or
in
adc
mov
sub
mov
pushl
sbb
cmp
shll
ret
lea
pop
gs
rcl
dec
shr
dec
cmp
push
clc
cmp
inc
mov
mov
cld
pop
cmp
cs
lea
outsl
push
pop
js
dec
es
and
pop
mov
inc
inc
mov
sub
jne
leave
repnz
xor
dec
adc
icebp
movsl
into
and
scas
lahf
mov
fs
rclb
dec
cwtl
adcb
mov
pop
mov
ret
repnz
hlt
aaa
or
jne
cmp
push
cwtl
adc
and
orb
js
call
fidivl
push
rorl
lds
mov
sub
dec
xor
in
loop
push
pop
sbb
les
pop
xchg
loop
icebp
test
in
gs
out
pop
push
push
cwtl
loopne
filds
add
nop
es
jns
popl
je
push
xchg
mov
sub
adc
inc
pop
int3
add
mov
jp
loope
das
push
inc
lahf
sti
dec
mov
adc
sbb
ja
sbb
ret
stos
fnstsw
shlb
add
jae
mov
mov
sbb
int3
dec
out
mov
and
pusha
xchg
imul
jnp
fbstp
and
cmc
roll
cmp
int
lcallw
pusha
mov
jae
cli
sub
pushf
inc
lods
pop
out
jns
jb
out
cmp
sahf
adc
sbb
imul
pop
stos
das
pop
add
gs
mulb
pop
inc
jecxz
add
fisttps
ret
sbb
inc
jmp
jne
xor
xchg
lea
mov
mov
xor
out
in
push
sbb
punpckhdq
xor
sti
lahf
and
mov
lret
fisttpl
test
adc
rcrl
mov
out
insl
fisubl
out
orl
fistps
int3
xor
cmp
add
jg
js
mov
mov
outsb
jmp
int3
cmp
scas
daa
je
in
imul
jae
scas
hlt
cs
sub
popf
test
negb
dec
fiaddl
pop
icebp
mov
mov
add
lret
call
shlb
rclb
clc
stos
mov
lea
or
mov
ret
mov
cmp
inc
mov
lret
mov
aam
sbb
in
pop
xchg
pop
dec
cmp
ds
test
out
movsl
xchg
in
enter
sub
mov
xchg
and
sub
test
xor
sbb
cmp
int3
or
cs
dec
aad
xabort
push
adc
mov
cmp
sbb
mov
hlt
inc
dec
inc
adc
push
outsl
push
jo
sbb
shlb
push
push
cmc
pop
into
jecxz
sahf
sti
into
sbb
outsl
cmp
loop
xchg
xchg
inc
aad
pop
pop
sahf
cmp
push
ror
sub
xor
cmp
cs
jb
dec
xor
fidivrl
jmp
dec
pop
insl
and
into
fwait
lcall
mov
xor
clc
sub
scas
std
push
rcll
push
and
xlat
decb
jmp
xor
cmp
or
pop
adc
adc
xchg
mov
call
aaa
fstl
ss
jo
gs
or
push
dec
cmp
sahf
sub
fs
mov
stos
pop
cmpsb
outsb
mov
cwtl
leave
push
sub
mov
and
prefetch
mov
dec
xlat
jno
int
mov
lret
mov
aam
lret
pop
inc
lahf
in
sub
fldcw
push
cld
push
fsubp
imul
jmp
dec
add
gs
mov
pop
push
out
dec
imul
push
pop
jne
inc
scas
mov
inc
xchg
stos
add
daa
in
dec
pusha
push
sub
in
imul
xor
scas
fs
repz
pusha
pop
or
leave
popa
movsb
fisubrs
movsl
pop
arpl
mov
or
cmp
jnp
cmp
jbe
out
pop
rcll
shl
dec
icebp
xchg
cmp
adc
push
push
idivl
adc
xchg
dec
rclb
jp
adc
test
jl
notl
push
cmp
repnz
aaa
push
rcll
lret
jns
jmp
inc
lock
fs
call
ja
std
sub
out
outsb
or
in
rolb
iret
out
fisubrl
test
or
lcall
pushf
mov
stc
mov
test
fstp
jle
mov
sub
pop
xchg
mov
inc
fnstsw
mov
loope
movsl
decl
push
enter
pop
inc
std
inc
push
xchg
cmp
lahf
pop
push
push
mov
pop
push
jg
insb
lock
and
xchg
mov
nop
push
xchg
cli
fmulp
cltd
hlt
sub
push
ja
xchg
cmp
movsb
in
rclb
fcompl
jb
dec
jg
lea
push
push
sub
ds
add
mov
rorb
out
mov
shr
dec
jb
fstp
loop
xor
inc
dec
push
mov
mov
inc
subl
insl
pop
cmc
fucomp
aam
andl
cwtl
mov
loop
pop
lcall
or
daa
popf
shll
dec
cmp
stos
das
mov
push
es
sbb
mov
xor
fwait
push
and
cli
repz
cmp
movsl
add
or
xchg
mov
pop
fwait
mov
das
dec
jg
cmp
in
xchg
sbb
or
pusha
jno
das
mov
mov
insl
sub
mov
and
xor
test
loope
adc
jle
fistl
pop
movsb
cld
xchg
xchg
sbb
inc
aad
rclb
adc
dec
mov
popa
cli
movsl
movsb
rcrb
imul
insl
push
dec
jno
inc
cwtl
cli
adc
aaa
cmp
add
add
in
push
inc
xlat
push
mov
cmp
mov
icebp
sahf
or
int3
shr
int
lret
add
loopne
out
xchg
sub
outsl
jns
ljmp
fmul
addr16
jbe
or
je
or
xor
adc
in
call
cmpsb
sub
repz
xchg
adc
incl
mov
pop
pop
dec
inc
lea
test
push
jp
push
mov
fadds
cli
push
int
jg
push
repnz
cld
pop
xlat
push
sbb
mov
lods
pop
cmpsl
insb
fldt
inc
cmpl
out
das
dec
sti
xchg
jecxz
into
fbstp
out
stos
pop
aaa
pop
out
popf
sbb
inc
loop
xlat
cli
and
inc
jne
add
enter
test
inc
test
test
hlt
inc
push
push
fsubl
sub
add
adc
add
imull
lahf
xchg
iret
rcrl
cmp
dec
out
xor
lret
icebp
cmpsb
mov
dec
lahf
or
jecxz
mov
xchg
icebp
daa
push
fstps
mov
cwtl
pop
push
cli
push
sub
shlb
xor
inc
adc
inc
insb
fs
pop
sub
mov
cmp
jmp
clc
nop
lret
test
lock
mov
loope
test
xchg
xor
sub
js
and
addr16
lahf
and
lret
fwait
pop
fisubrl
pushf
aaa
xchg
out
test
adc
into
stc
push
mov
push
in
scas
mov
add
mull
in
inc
repnz
andb
repnz
leave
cmpsb
add
sub
cmp
sub
mov
mov
adc
cmp
mov
stos
cmpb
cmp
or
add
stc
jge
sbb
cmp
cmp
dec
dec
xor
mov
orb
and
xor
lock
mov
fidivrl
dec
cmp
push
sub
pop
insl
cmc
sub
cmp
xlat
dec
jecxz
pop
push
in
ret
adc
dec
dec
mov
sub
js
jbe
pop
xor
ret
fcomps
sub
shll
fcoml
cli
xchg
test
push
or
mov
out
mov
scas
sbb
sbb
mov
mov
sub
fcmovu
stos
stos
popa
add
jp
jne
dec
xchg
fistps
scas
add
pop
fbld
je
mov
pop
mov
add
mov
mov
xchg
in
and
pop
lret
inc
or
cs
push
push
mov
push
mov
xor
lret
or
mov
xchg
vunpckhps
lds
push
jg
dec
popf
mov
inc
push
rorb
notb
loopne
mov
cs
add
xchg
xlat
popa
lods
xor
sbb
bound
std
pusha
imul
and
mov
push
bnd
or
cld
sub
gs
stc
jo
movsb
lret
adc
aas
mov
xchg
ja
inc
fiaddl
fsubrl
xor
popa
push
rorl
jno,pt
shl
fxch
and
rol
pop
jmp
push
or
dec
jl
repz
stos
jle
lods
fwait
push
or
sub
movsb
mov
pop
out
mov
sub
stc
push
in
imul
xchg
insb
in
aam
jge
mov
pop
jnp
jp
in
xor
pop
into
inc
in
adc
cmpsl
in
loop
repz
and
push
in
push
xor
lret
sbb
lds
sub
std
mov
mov
inc
cmp
gs
or
and
xchg
roll
fnstsw
sti
pop
inc
add
inc
lods
sub
test
pusha
inc
dec
xor
loopne
out
dec
inc
adc
js
ljmp
lods
loope
jo
push
sti
mov
jnp
jnp
mov
test
nop
je
xchg
jo
js
out
out
xorl
clc
rolb
lret
lcall
push
inc
ret
insb
subl
lea
and
sbb
sahf
ret
push
sbb
repnz
xlat
adc
jp
pop
mov
sarl
jp
mov
add
rolb
sbb
test
xchg
andb
fldcw
outsl
aam
mov
das
shlb
cmc
jnp
mov
add
pop
ja
xchg
or
pop
test
aam
push
xchg
shr
mov
pop
lret
xor
mov
std
jo
pop
pop
fistl
mov
movsl
dec
sub
xor
gs
daa
sahf
test
rorl
and
and
ret
xor
sar
add
inc
sbb
lea
insl
in
scas
sbb
pop
xchg
jp
fmuls
and
call
mov
xchg
add
repnz
push
inc
test
pop
sbb
mov
sub
push
mov
cmp
or
or
mov
sub
and
adc
mov
jl
add
inc
dec
mov
fwait
in
out
adc
dec
out
cmp
lcall
cmc
cmpsb
sbb
outsl
jmp
in
push
rcrl
xchg
sarb
push
add
fisubl
pop
sarb
sbb
mov
aad
rcll
xchg
outsl
xchg
movsl
mov
push
and
xchg
lock
lret
mov
and
daa
enter
loope
cmp
jg
and
push
pusha
popf
push
in
into
push
call
ret
gs
sti
ja
cmp
cmp
jmp
jbe
js
das
mov
gs
test
pop
mov
xchg
jle
cmc
popf
or
test
js
adc
cld
mov
add
sub
ret
scas
repnz
jae
pop
xor
cmpsl
xchg
daa
ret
sub
stos
xor
iret
push
in
scas
xchg
and
ss
loopnew
insl
push
mov
xchg
test
repz
adc
sti
sbb
mov
stos
lea
das
inc
cmp
stos
xchg
sub
mov
mov
fidivrl
lds
out
mov
push
ds
mov
or
dec
popa
setp
adc
fsubl
dec
das
lock
jo
jp
andb
inc
pop
out
xchg
je
gs
xchg
xchg
fcoms
pop
pop
inc
cmc
mov
mov
pop
or
mov
popa
jne
mov
scas
pop
std
pusha
aam
int
inc
mov
mov
cmp
pop
mov
rclb
dec
jmp
aad
cmp
mov
mov
xchg
inc
or
jl
mov
cltd
enter
mul
fcoml
mov
cmp
lret
or
xchg
xor
mov
and
in
repz
dec
push
imull
cs
xorb
insb
mov
push
fbld
fs
xchg
popf
andl
mov
outsl
fs
fsts
fbld
push
inc
in
fneni(8087
and
jp
push
lea
add
dec
push
sbb
lods
jp
fnstsw
data16
xchg
or
stc
aas
pop
jl
and
cmpsb
sbb
sbb
xchg
in
and
por
cli
and
pop
aas
pop
pusha
aam
stos
xchg
mov
mov
xchg
test
sub
cld
ljmp
jne
pusha
mov
sub
sub
sub
cmc
lds
js
jl
jecxz
mov
lds
out
ja
aas
xchg
adcb
loopne
pop
popf
cmp
ljmp
repnz
mov
call
dec
popa
stos
scas
xor
insb
in
push
mov
lcall
inc
mov
ret
adc
outsb
sub
arpl
dec
push
jns
mov
jg
lds
mov
in
nop
mov
cmpsl
fistpl
or
jmp
nop
and
lret
shrl
or
xchg
mov
insb
add
fidivs
pop
int3
sbb
add
xchg
shrb
dec
rclb
out
mov
icebp
out
xchg
mov
pop
jge
loope
test
jmp
or
or
rcll
stos
pop
incl
pusha
sub
xchg
nop
sub
add
push
repz
imul
inc
or
arpl
popf
cwtl
mov
cmp
dec
push
jecxz
pop
cltd
fneni(8087
movsb
add
adcb
out
pop
adc
mov
int3
jbe
jbe
adc
push
bound
nop
inc
es
lods
ret
xor
popf
cmpsl
adc
jp
mov
cs
mov
mov
pop
rorb
xlat
cmpsb
icebp
pop
rorl
in
test
and
in
nop
sub
adc
jbe
mov
mov
inc
nop
jnp
nop
inc
mov
inc
pop
jnp
mulb
mov
imul
cmc
leave
shll
enter
dec
sbb
mov
lcall
out
adc
cltd
test
dec
sbb
in
test
pushl
mov
test
test
ja
sub
cld
xor
xchg
aam
add
sahf
aaa
sub
jg
mov
adc
fwait
adc
lcall
orl
dec
sbb
adc
in
daa
test
mov
mov
rcrl
push
sub
mov
mov
and
aad
sub
loop
dec
xchg
test
and
fildl
push
movsl
lea
ljmp
dec
pop
adcb
shlb
push
mov
jmp
fstpt
in
mov
in
in
xor
sarl
xchg
dec
fwait
test
xchg
repnz
rclb
fsts
mov
shlb
xor
xchg
cmp
inc
adc
xchg
lods
mov
jmp
nop
call
and
in
adc
clc
ret
push
dec
orb
stos
adc
or
test
xchg
jl
push
fcmovb
roll
sbbl
inc
xchg
rorl
inc
inc
add
dec
mov
pop
fcomp
push
das
sub
fldenv
mov
lea
mov
xchg
inc
lds
test
dec
jnp
mov
imul
jne
aam
fs
aas
adc
cmp
inc
sarb
dec
sub
xchg
dec
lahf
test
mov
push
mov
lock
push
push
insb
rclb
ret
cmp
cmpsl
jl
sti
outsl
and
xlat
or
outsl
popl
or
lea
xchg
xchg
fldenv
cmp
stos
push
fsubrs
or
into
cld
pop
or
cmovge
js
adc
pop
sub
xor
xchg
cli
xchg
fldt
and
mov
mov
dec
jns
sbb
ja
daa
outsb
arpl
ds
fadds
add
push
fldl
and
cld
dec
adc
jp
lea
test
or
addl
fcompl
gs
add
out
clc
adc
cmp
mov
stc
jmp
lcall
adc
pop
xor
in
mov
adc
xor
mov
test
arpl
and
inc
scas
mov
aam
mov
cmc
xor
cs
insl
cmp
lahf
and
les
inc
add
andl
push
mov
arpl
mov
ret
cmp
sbb
dec
frstor
ja
shrl
and
mov
pop
pop
ret
mov
popf
and
cmp
sub
sub
adc
jnp
mov
xchg
sarl
int
ja
dec
sbb
aaa
jae
les
xor
enter
cmpb
mov
cld
push
add
ret
xchg
xchg
es
or
jg
adcb
dec
cmp
pop
cmp
cmp
push
int3
repz
jge
cmp
sti
pop
sub
test
or
ljmp
and
nop
mov
inc
and
jne
aaa
mov
pushl
dec
bound
or
xor
call
xchg
sbb
dec
dec
repz
imul
icebp
mov
or
xchg
les
mov
inc
sub
mov
adc
faddl
arpl
push
js
test
push
cli
sub
xorb
outsl
jnp
addr16
push
mov
mov
inc
adc
ret
add
mov
dec
fsubp
push
cmp
pop
xor
dec
repz
insl
lret
cwtl
pop
jle
mov
sbb
mov
dec
mov
adc
divl
aam
mov
inc
push
jle
shlb
out
jge
inc
cs
stc
jle
jmp
leave
sub
inc
inc
pop
pusha
mov
imul
mov
pop
pop
mov
pop
mov
push
shll
dec
mov
xor
or
and
clc
cmovno
imul
mov
inc
movsl
and
adc
fstl
add
pop
subl
data16
sub
enter
push
pop
mov
sarb
lret
or
jne
pop
sbb
push
stc
mov
sbb
pushl
addl
mov
xchg
push
jae
repz
call
or
or
adc
movsb
vmread
sub
fst
and
sub
mov
loopne
mov
popa
popf
pop
maskmovq
imull
add
cmp
int
xchg
ror
ja
loopne
push
mov
jmp
and
push
push
mov
js
mov
aaa
cmp
inc
pop
cmp
mov
push
in
inc
pop
popa
aad
test
fs
pop
lds
scas
xlat
fiaddl
mov
inc
out
popf
xor
mov
loope
mov
ret
sbb
dec
sub
jmp
mov
dec
dec
dec
or
loop
sbb
movsb
mov
xor
into
push
es
lret
fadd
sahf
push
lahf
out
mov
cli
ficomps
sbb
xor
sub
jo
lretw
jmp
imul
dec
out
mov
divl
push
aad
dec
out
lock
mov
in
inc
scas
sbbb
imul
imul
idivl
imul
scas
lahf
rcl
shrl
add
add
and
xlat
clc
sarb
hlt
dec
mov
int
fwait
sub
clc
xchg
mov
rclb
movsb
pop
out
gs
xchg
in
mov
je
imul
xchg
add
pop
call
dec
xor
insb
mov
jns
push
repnz
or
sbb
sub
movsb
mov
imul
repz
jmp
push
imull
int3
xchg
hlt
push
ljmp
sbb
dec
sahf
mov
or
shll
xchg
movl
ficompl
mov
cs
xchg
add
mov
inc
lods
je
pop
adc
sub
xor
jnp
lods
out
sbb
jp
cmp
and
add
inc
xchg
xchg
bound
pop
add
mov
stos
in
jecxz
mov
pop
dec
xchg
ffree
out
mov
cmc
lahf
or
ret
imull
popa
jne
or
test
sbb
cwtl
scas
subl
mov
jp
int
mov
cwtl
xor
pop
inc
dec
mov
pop
pop
ljmp
fdivr
jae
add
pop
in
push
or
inc
dec
das
adc
int
push
rcll
repnz
jecxz
mov
mov
mov
daa
push
aaa
mov
pop
int3
and
sub
and
leave
outsb
aad
in
lock
lods
push
repz
cmp
mov
pop
call
jg
test
pop
movsb
lret
pop
ds
jnp
jmp
outsl
data16
inc
cs
pop
lret
cmp
cmp
imul
add
jecxz
sbb
jl
sub
or
dec
rorl
xor
mov
push
xor
pop
shrl
popf
in
and
or
inc
sub
enter
shll
scas
adc
icebp
pop
mov
or
test
in
lock
adc
les
mov
mov
sbb
addl
inc
leave
popa
dec
push
xchg
leave
mov
push
enter
xlat
cld
ffreep
and
out
ret
sbb
call
push
leave
and
test
iret
mov
inc
push
add
jl
sbb
jo
jbe
push
imul
dec
pop
ss
js
jns
adc
hlt
adc
and
das
popf
and
or
call
hlt
dec
pop
xchg
push
xor
sarb
sub
mov
call
xor
adc
mov
mov
push
int3
push
push
inc
scas
loope
das
or
repnz
stc
or
pop
dec
ret
jns
imul
cli
pop
pop
dec
push
sub
cmp
inc
dec
xchg
push
sub
pop
adc
rcrb
les
jb
int
lret
inc
aaa
mov
cli
daa
mul
sysret
loope
cmp
cli
xchg
fcmovnu
outsl
push
loopne
outsb
dec
push
stos
push
sti
shll
xchg
ss
fisubl
scas
insb
cmpsb
xchg
cwtl
cwtl
repnz
out
jne
add
inc
pop
pop
cmp
negb
mov
push
push
push
lods
pop
push
or
push
xchg
out
jne
fimull
push
jge
xchg
push
adc
push
mov
pop
daa
and
sub
nop
fcoms
jg
cs
add
push
jp
cmc
out
or
jmp
pop
pop
repz
add
fst
cmpsl
fstps
fcomps
add
mov
mov
scas
inc
or
dec
lret
hlt
jl
inc
in
xchg
xlat
mov
cs
mov
mov
pop
negb
cmpsb
cmpsb
inc
daa
inc
add
out
dec
push
shr
pop
mov
out
or
js
enter
shlb
pop
inc
jg
dec
fiadds
and
push
inc
mov
add
js
fldt
mov
xorl
sub
mov
int3
call
dec
adc
loopne
push
test
or
xchg
movsl
mov
inc
fstl
icebp
inc
mov
scas
stos
jmp
dec
fldt
inc
pop
iret
cmp
or
in
dec
sbb
in
test
std
xchg
ret
fcompl
inc
mov
pushf
pushf
jnp
xchg
iret
ret
cs
test
out
xchg
xchg
cwtl
cmp
mov
or
push
lea
out
add
sub
cwtl
repnz
mov
push
int
popf
out
push
mov
imul
sub
pop
add
or
pushf
scas
lcall
jno
int
push
mov
shrb
cmp
sub
xchg
and
into
cwtl
scas
loopne
pusha
push
mov
add
call
pop
xchg
ja
sahf
mov
sub
clc
jmp
push
inc
mov
in
adc
dec
xchg
jl
pop
and
mov
cwtl
pop
movsb
mov
and
pop
cmp
ret
rclb
mov
lret
cmp
jbe
jnp
cwtl
cmp
xchg
inc
xor
jne
adc
push
push
outsl
sti
mov
test
mov
std
into
sub
add
add
js
in
inc
shl
dec
addr16
cmpsb
pusha
xchg
or
repz
jae
out
jnp
cmp
test
lahf
fucomi
xchg
cmp
jno
pop
jp
dec
jmp
push
arpl
mov
inc
in
cmp
xchg
or
cmp
pusha
cmpsb
pop
or
mov
in
inc
popa
pop
xchg
jnp
lock
icebp
shl
add
daa
sbb
jnp
sub
outsb
mov
sub
or
jnp
cmp
pop
push
es
push
jmp
mov
pop
adc
call
push
add
daa
mov
cmpsl
sahf
out
in
add
sbb
adc
push
inc
sbb
adc
imul
sbb
jbe
sub
adcb
xchg
inc
inc
adc
out
repz
popa
pminub
jecxz
push
mov
cld
pop
xor
mov
push
add
fstpl
jnp
ret
push
test
cmp
cltd
mov
daa
and
popw
cmpsl
std
bound
mov
ret
adc
xchg
jo
ja
jp,pn
mov
sub
nop
das
or
or
fcmove
dec
ficompl
in
inc
xor
xor
adc
movsl
fdivl
lods
pop
cmp
incb
cmc
push
in
insb
mov
mov
lock
adc
in
xchg
ret
sbb
je
sbb
mov
orb
sbb
jmp
dec
lea
and
ljmp
faddl
jae
jl
clc
pop
data16
push
mov
jbe
and
sbb
pop
aaa
add
mov
lret
je
sub
or
jae
mov
mov
mov
mov
fsts
cmp
xchg
pushf
xor
jg
aad
lods
sbbb
jne
pop
sub
xchg
push
mov
imul
cmp
dec
xor
mov
xlat
out
cmp
xor
jecxz
sti
and
mov
dec
cmp
int3
add
xchg
jmp
cmp
pop
adc
push
jns
mov
jmp
jg
push
mov
jo
inc
rcrb
fistpl
arpl
pop
jl
or
sbb
and
mov
mov
pop
outsb
mov
testl
or
cmpsb
or
sahf
imul
jne
ds
ja
dec
ret
aaa
jle
daa
insl
cltd
ret
in
adc
dec
push
mov
pusha
inc
cli
stc
je
ret
dec
test
clc
cld
xchg
fmull
sbb
bnd
inc
loopne
xor
cltd
sahf
pop
sarb
cmp
sbb
xchg
push
and
scas
add
repz
cmp
mov
loopne
adc
dec
or
mov
xlat
pause
cmp
push
inc
xchg
pop
nop
pop
mov
data16
cmp
push
mov
mov
test
push
jb
lock
or
int3
push
rorl
xor
mov
cmpsl
push
lret
test
lret
mov
dec
mov
pop
popf
arpl
dec
in
iret
mov
jnp
mov
sbb
stc
sbb
sbb
pop
jle
in
xor
mov
jg
sbb
icebp
push
and
jno
sub
adc
fimuls
push
inc
xor
loop
into
imul
add
in
in
leave
jmp
jne
shrb
outsb
std
lahf
cld
stos
jmp
lcall
jbe
inc
mov
xor
sti
mov
pop
xor
sbb
xchg
inc
mov
cs
lcall
push
in
mov
cmp
ja
dec
mov
add
sbb
loopne
dec
cld
jl
imul
leave
mul
cmp
push
icebp
loope
mov
inc
fsubrs
and
inc
adc
lock
test
xchg
sub
dec
cmp
and
xor
xchg
std
faddl
cltd
in
enter
mov
push
add
xlat
insb
sub
loopne,pn
jno
cmc
lods
aas
and
lcall
mov
mov
sub
add
in
and
test
lods
out
sarl
jp
out
and
shrl
fcoml
mov
inc
xchg
in
call
xchg
leave
addl
inc
mov
mov
sbbb
jle
stc
repnz
movsb
pop
xor
mov
jns
shrl
pusha
cmp
jmp
lods
sbb
lcall
sahf
clc
fisubrs
and
adc
mov
daa
mov
sti
jl
push
fnstsw
fsub
xchg
mov
and
inc
add
adc
addr16
loopne
and
xchg
push
inc
xor
roll
sbbb
inc
xchg
cmp
mulb
insb
sbb
sbb
sub
inc
dec
jbe
pop
xchg
test
mov
int3
shrb
and
xchg
push
lcall
lcall
pop
or
pop
add
push
inc
and
push
cmp
add
push
and
fcompl
sbb
xor
and
cwtl
adc
xor
xor
lret
aad
mov
in
clc
loope
push
dec
or
shll
ljmp
dec
xor
fstl
mov
pop
mov
test
loope
jmp
aaa
sub
sub
jge
icebp
test
dec
lds
or
dec
cmpsb
mov
rolb
jge
push
addl
xor
lret
push
mov
outsb
shll
std
into
cmp
insl
jmp
stos
and
flds
push
enter
push
cmp
push
ja
fwait
push
inc
inc
stc
data16
jmp
dec
xor
pop
pop
cmpsb
pop
sub
add
in
sbb
in
jns
fildl
ss
pop
cmp
lds
cli
push
ja
fldcw
and
mov
sub
movsb
mov
add
mov
lds
in
pop
ret
cmc
sub
cs
xchg
pop
rcrb
or
cs
inc
adc
jno
xchg
hlt
mov
sub
enter
mov
lret
cltd
add
test
imul
cmpsl
sahf
pop
add
stc
fiadds
mov
push
adc
add
jl
into
dec
xchg
in
cmp
cmp
inc
mov
arpl
fs
mov
je
adc
scas
mov
arpl
sbb
test
add
je
mov
sbb
adc
xchg
mov
xor
push
mov
fnstenv
mov
js
push
inc
pop
pop
sbb
out
pop
mov
mov
pop
xchg
xchg
sbb
sub
and
xor
shr
call
mov
cmp
pop
cmp
xor
jne
gs
xor
sub
mov
cmp
in
xor
jns
sub
stc
popf
xchg
lcall
fwait
cltd
or
ss
mov
push
dec
ds
mov
adcb
jne
loop
xchg
stos
rclb
lods
cs
fcomps
mov
mov
fcomps
pop
mov
lea
inc
gs
jbe
fmul
movsl
sahf
repnz
xor
xor
dec
dec
scas
push
sbb
cmp
xchg
inc
jle
shl
jle
push
fadd
cld
clc
sbb
mov
outsl
mull
mov
push
fldcw
lcall
add
jle
inc
xor
pop
xlat
add
gs
pop
aaa
mov
pop
jg
test
xchg
pop
fs
adc
ss
xor
inc
lea
cmpsb
sbb
fdivrs
hlt
xor
fwait
gs
pop
inc
hlt
je
dec
jl
lock
jbe
cltd
jb
mov
fwait
sbb
push
arpl
test
loopne
sub
call
mov
out
xchg
mov
add
push
xor
orb
clc
mov
aam
add
mov
inc
sub
insl
cltd
sub
adc
xchg
and
cs
enter
repnz
sysexit
jmp
mov
jbe
inc
mov
loop
push
iret
push
xchg
out
xchg
int
sbb
mov
adc
repnz
pop
cmp
push
and
ret
mov
pop
xor
jl
test
mov
jmp
fists
fistps
mov
sub
sub
fisubrs
sbb
sub
lcall
dec
mov
scas
and
and
out
in
test
pop
sub
gs
les
sarb
mov
dec
pop
jnp
addb
pop
fwait
or
pop
jo
decl
mov
std
mov
sbbl
movsb
mov
pop
repnz
cmp
outsb
pop
pushl
xchg
mov
lret
xchg
int3
and
xor
xchg
add
and
popa
jbe
push
adcl
and
cmp
xor
push
orb
subb
flds
stos
cmp
push
cmpsl
sub
pop
mov
jle
loop
addr16
xchg
stc
ret
arpl
jno
aad
jns
jns
xchg
mov
jg
mov
push
add
neg
mov
mov
ret
in
lahf
xchg
jns
sub
das
mov
pop
add
cmpsb
in
cmp
cmpsl
xchg
xorl
push
scas
push
xchg
xchg
int3
mov
sbb
fimull
mov
mov
jae
mov
cmpsb
push
ret
lahf
cmp
pop
mov
push
xchg
in
cmp
sub
cli
pop
std
jne
cli
je
xchg
fistpll
push
fs
stos
addb
aad
js
ljmp
jnp
push
add
mov
jl
adc
ret
pop
jecxz
jne
shlb
jge
iret
push
mov
cmpsl
push
iret
mov
mov
jo
lods
cli
ljmp
inc
pop
mov
add
std
pop
insb
dec
stc
pop
add
push
pop
rorb
call
in
repnz
mov
mov
bound
andl
outsl
xor
aas
adcl
fcmovbe
ja
xchg
pop
fwait
jb
iret
xor
aam
mov
dec
sbb
shlb
mov
mov
sub
sub
mov
out
jl
insl
sarb
adc
cmpsl
jne
lret
xor
jg
mov
ljmp
push
cwtl
jp
adc
add
mov
sub
arpl
mov
ja
in
fmul
xchg
cmp
mov
lds
jle
aam
push
in
jne
adc
lods
fmuls
outsb
sbb
push
jo
in
andl
gs
lahf
jbe
shlb
ja
pop
mov
cmp
sahf
rcll
ret
xlat
movsb
and
dec
mov
inc
mov
pop
jmp
out
dec
aas
inc
jb
inc
dec
xchg
jbe
stos
lret
loopne
dec
in
jmp
push
nop
outsl
call
negl
rorl
adc
or
push
jns
out
into
add
jp
cmp
ljmp
jb
fisubrs
sti
xchg
inc
cmp
sbb
push
jg
sub
out
jl
mov
lret
nop
outsb
add
jns
pop
in
mov
push
pop
xor
imul
rol
pop
fisubl
xor
jl
inc
xchg
jmp
lods
sbb
push
sbb
out
jmp
jae
xor
insl
xchg
pop
xchg
adc
jmp
xor
dec
lds
jne
adc
jge
mov
adc
testl
sub
and
mov
add
arpl
repz
cmovb
mov
xchg
sbb
add
scas
mov
in
push
daa
dec
into
cmp
lock
movsb
jae
pop
repz
pop
mov
add
dec
mov
mov
jp
test
push
mov
pop
pop
sarb
lahf
sub
adc
flds
mov
cmp
pop
fadd
xchg
stos
jl
xchg
out
jecxz
addr16
pop
xchg
sub
mov
dec
pop
jmp
int
out
or
rcrl
add
push
inc
popa
scas
mov
outsl
andb
jl
add
test
mov
dec
adc
test
cmp
and
rcrb
sbb
mov
mov
ficompl
dec
cmpb
jnp
jle
fcompl
leave
test
pusha
inc
pop
ror
jb
int3
lret
xchg
enter
repz
clc
add
xor
repnz
mov
cmp
pop
push
dec
inc
es
push
ds
int
cs
gs
pop
adc
fcoms
push
jno
rclb
movsw
lea
in
mov
nop
je
fistpl
out
fstpt
aam
push
xlat
pop
push
sub
jo
adc
pop
dec
xchg
add
daa
pushf
fwait
dec
or
lods
sahf
push
ror
mov
int3
inc
bnd
arpl
mov
adc
mov
inc
sub
decb
imull
popa
sub
out
pop
mov
mov
inc
loop
stc
into
sub
nop
sub
pop
je
or
decl
jbe
or
dec
sbb
add
xchg
pop
popf
comiss
fisubs
insb
xchg
loop
mov
push
aad
repz
xlat
adc
lea
aas
js
fstpl
popa
cltd
jmp
cmp
sarb
inc
movsb
aas
adc
lret
dec
test
push
int
das
outsl
cmp
cltd
mov
dec
jb
faddl
test
pop
push
out
dec
gs
xor
mov
imul
out
insb
nop
les
jecxz
sti
pop
adc
in
pop
inc
or
fisubs
sbb
or
jno
sub
stos
std
divb
insb
cmp
cmp
fsubr
pop
fcom
divl
sbb
adc
xor
xchg
lahf
in
jnp
add
xor
and
cmpsl
push
xor
or
outsb
push
pop
stos
fiaddl
addr16
jge
mov
test
mov
mov
lret
mov
cld
dec
lds
cmp
popa
iret
rcrl
aaa
pop
enter
mov
cmp
adc
push
mov
inc
inc
lods
in
jmp
es
inc
mov
xchg
dec
and
inc
cmp
jmp
das
hlt
stc
xchg
pop
into
stc
les
les
mov
inc
fwait
loopne
enter
lods
popa
push
mov
pop
ljmp
jle
lcall
test
pushf
repnz
int
scas
les
xchg
and
jg
pop
cmpsl
stos
add
pop
ja
mov
push
mov
inc
mov
mov
or
subb
scas
jle
hlt
call
gs
js,pt
mov
jns
xor
mov
add
in
mov
inc
pop
rcll
cmp
sbb
mov
popf
scas
fstp
xchg
xor
sub
js
dec
xor
mov
xor
mov
insl
into
orb
fisubrs
inc
push
push
mov
ljmp
loopne
ja
push
jg
add
or
mov
cwtl
mov
push
repz
sbb
sub
jbe
jne
mov
xor
dec
cmp
lret
clc
or
jle
xlat
push
fisubrl
mov
hlt
test
pop
int
xchg
jge
xchg
je
and
pop
enter
pushf
cld
push
cmp
pop
popf
xchg
mov
in
jb
pop
cmp
adc
cs
cmp
jno
add
mov
dec
jl
fsubrp
andb
bound
icebp
pop
aam
mov
pusha
sbb
in
inc
js
call
lds
aas
dec
dec
test
js
inc
rorb
jo
das
hlt
jg
clc
mov
dec
or
pop
nop
js
in
fs
aam
cwtl
shrl
cltd
pushf
xchg
imul
jne
xor
out
jge
push
adc
in
xchg
enter
lea
fisttps
ja
int
sahf
and
add
jmp
imul
pop
xor
js
mov
repz
stos
push
push
dec
stc
xor
loope
jle
xchg
jl
xor
int3
bound
and
imul
insl
fcompl
and
adc
bound
push
inc
lahf
inc
hlt
lret
adc
xchg
xchg
fsub
push
mov
jg
add
jp
inc
test
xor
adc
lcall
jge
in
jle
or
fistl
push
loopne
fistpll
xor
mov
test
adc
cmp
faddl
lods
adc
stos
lcall
cs
sbbb
mov
xor
mov
adc
mov
in
sbb
push
mov
adc
jbe
cmp
jns
inc
inc
push
add
jbe
mov
or
jp
mov
pop
pop
push
xchg
mov
sbb
or
ss
inc
ja
mov
jl
push
mov
fidivs
std
sahf
cld
pop
jns
or
lods
pop
or
pop
arpl
cs
dec
sub
mov
rcrl
stos
pop
jmp
add
adc
ljmp
xchg
cmpsl
xchg
dec
pop
rcr
es
add
xchg
sub
lea
pushf
xchg
repz
loop
outsb
stc
jo
lods
je
adc
or
pop
aad
in
cmp
xor
data16
in
sarb
movsl
ds
pop
test
sub
cmpsb
mov
adc
and
mov
xchg
pop
add
clc
sub
jge
or
loopne
lcall
imulb
push
xchg
mov
mov
inc
out
add
add
add
add
add
add
add
add
add
inc
or
mov
push
add
add
add
sar
lock
add
les
add
push
add
add
rcrb
rcrb
rclb
add
push
mov
xor
jne
ret
pop
add
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
pop
pop
pop
pop
push
push
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
ret
