push
or
add
add
add
addb
add
add
xchg
xchg
push
add
adc
add
add
add
add
add
add
adc
add
add
add
jo
add
add
add
add
add
testl
add
push
add
xchg
push
add
push
add
push
add
add
push
add
add
add
add
addb
add
cld
nop
push
add
add
or
push
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
sbb
add
adc
add
add
add
sbb
add
xor
add
imul
lret
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
out
add
add
mov
leave
out
or
jae
fnstcw
popf
adc
pop
lahf
cmpsl
out
mov
mov
movsl
iret
rcll
sub
cltd
stos
jl
sti
adc
les
sti
cmp
addr16
sbb
test
dec
lods
push
jnp
rcrl
in
push
enter
repz
clc
fucomi
bound
or
ds
push
add
mov
fwait
mov
test
lds
cmp
outsl
inc
sbb
jae
fildl
mov
inc
jecxz
arpl
andb
sub
imul
ljmp
mov
sbbb
dec
adc
jae
shrb
mov
cmpb
xchg
movsl
pop
jne
rcll
jmp
xchg
pop
cmpsl
lcall
adc
andb
repz
arpl
mov
jmp
in
daa
xlat
popa
jmp
les
lock
cs
dec
loop
mov
mov
push
inc
dec
cmpsl
int
adc
add
xchg
mov
lock
in
jo
mov
pop
pop
push
inc
push
cltd
dec
leave
push
mov
movsb
shlb
aam
andb
pop
call
call
sub
xor
outsl
pop
je
mov
shrl
xchg
cmp
inc
or
add
and
lcall
adcl
jnp
push
lahf
xchg
rorb
insb
sbb
unpckhpd
mulb
jbe
scas
pop
cmp
jo
flds
inc
movsl
lcall
mov
aad
jle
sub
inc
fidivl
idiv
fisubs
mov
mov
hlt
fsubl
stos
mov
pushf
pop
sub
add
scas
jg
shll
cltd
mov
xor
mov
mov
cmp
pop
lret
cmp
dec
popf
pop
xlat
pop
flds
aas
mov
data16
repz
dec
das
sub
jmp
ret
or
scas
enter
pop
sub
dec
xchg
inc
adc
xchg
stos
test
dec
dec
cs
pop
push
xchg
shlb
jmp
imul
ss
js
dec
stc
arpl
repnz
xchg
push
xchg
stos
sbb
negl
push
insb
dec
push
cmp
jle
push
ja
inc
in
js
scas
xor
pusha
add
sbb
test
jl
pop
fiadds
or
sti
aad
pop
sbb
pop
fdivrl
lret
sub
mov
or
or
xchg
fimuls
mov
in
mov
push
jg
xchg
and
std
bnd
hlt
inc
pusha
test
daa
xor
or
cmp
addl
mov
jns
dec
cmp
jb
fstp
xchg
mov
shlb
pusha
imul
icebp
sbb
test
mov
inc
and
ljmp
int
jecxz
add
dec
data16
lahf
push
mov
and
mov
aad
xor
mov
cmp
cmpsb
xchg
shll
and
shl
ds
in
xchg
sbb
ss
sahf
push
sub
dec
mov
jo
lret
imul
cmp
lcall
push
nop
pop
pushf
imul
call
jecxz
leave
mov
lret
addr16
pop
stos
mov
add
xchg
push
loop
out
push
out
test
dec
push
sub
push
ds
mov
loope
dec
jne
xchg
cs
imul
ret
mov
mov
jb,pn
inc
pop
cmp
cltd
jae
icebp
jle
jnp
call
imul
outsb
mov
scas
mov
imul
pusha
jg
shll
cltd
mov
adc
xchg
fldt
insl
lods
mov
push
adc
pop
sub
std
cwtl
push
pop
out
fistpl
mov
jg
xchg
pop
or
lcall
mov
je
push
cmp
idivb
aam
cmc
xor
push
inc
sub
or
decb
sub
sarb
lret
cmp
or
cmp
add
shlb
rcl
jle
dec
cmpsl
stos
mov
mov
shll
les
jno
addr16
test
out
inc
fsubrl
int
mov
lock
pop
sub
pop
pop
popf
sub
pop
dec
jns
pushf
mov
push
int
jne
xchg
scas
adc
mov
movb
xor
mov
sbb
movl
loopne
mov
subb
sbb
sub
and
jmp
push
aas
or
imul
outsb
andb
pushf
orl
pop
sub
inc
cltd
xchg
push
fidivrs
xchg
mov
fs
arpl
dec
jns
push
jns
and
xor
in
jae
pop
insl
test
popf
andb
shrl
or
gs
bnd
push
mov
dec
sti
mov
imul
rcl
jmp
xor
test
xchg
jns
in
es
dec
int3
movsb
mov
js
mov
xchg
addr16
js
push
loop
fldenv
push
jp
mov
sbb
rolb
mov
test
adc
jge
icebp
enter
sub
cmp
or
inc
jnp
lahf
mov
in
out
cltd
das
dec
addr16
jb
fs
push
stos
mov
stos
iret
or
or
clc
inc
lea
sti
jno
ds
es
fsubs
inc
cmc
cwtl
dec
lret
cmpsb
shlb
push
pop
mov
pop
nop
out
pop
push
daa
sar
outsb
pop
push
rolb
out
pusha
das
sar
pop
jno
pop
jecxz
cwtl
in
or
jg
xchg
jle
ds
divb
xor
pop
pusha
fmuls
jno
dec
pop
inc
sbb
repnz
xlat
sub
cmp
sti
out
ds
sbb
lret
jge
lds
andb
je
mov
cmp
xchg
jne
test
int3
sahf
movsb
filds
pushf
test
ja
push
cmp
sahf
imul
or
pop
mov
pop
cmp
aad
push
jle
xchg
sahf
lahf
out
test
cmpsb
mov
jns
fistpl
stos
adc
dec
add
sub
out
cltd
xor
outsb
lods
nop
sbb
cmp
cmc
jg
clc
inc
push
push
jae
or
push
pop
fwait
jno
xchg
xlat
ret
shrl
add
mov
ret
out
cmc
scas
dec
xchg
movsb
repnz
insb
outsl
div
bound
lock
pop
pop
addr16
xchg
cli
jo
lds
imulb
shrl
add
push
xor
mov
pop
push
je
cwtl
adc
out
cltd
mov
xor
outsl
push
iret
aaa
scas
pusha
pop
sub
ss
dec
data16
jmp
sub
hlt
jae
data16
mov
lock
push
lock
inc
in
dec
fadd
test
cmp
gs
test
dec
mov
lock
ret
in
xchg
dec
xorb
cmp
xchg
mov
and
xor
sbb
dec
pop
mov
push
and
fwait
jns
mov
pop
mov
lock
xor
lret
imul
out
inc
daa
enter
subb
jle
and
fnstcw
xchg
lods
aad
sub
sbb
mov
call
stc
or
xor
dec
xchg
repz
push
int3
insl
shrl
jle
mov
rcrb
pop
popf
push
xchg
inc
or
or
dec
push
clc
out
in
mov
lret
cmp
and
mov
pop
lods
mov
inc
xchg
ja
pushf
push
loopne
push
js
or
cli
js
out
xor
inc
push
add
add
adc
dec
out
lret
mov
mov
add
ret
stos
inc
mov
and
pop
dec
rcrb
es
pop
adc
and
mov
xchg
aas
cwtl
test
std
xor
dec
in
je
sub
inc
sbb
data16
arpl
repz
ljmp
addr16
ret
pop
lahf
and
sbb
loop
pusha
arpl
sub
int3
not
out
jp
repnz
lcall
jecxz
pop
inc
cmp
js
cltd
fstl
jnp
repnz
popa
loop
jmp
push
enter
cwtl
cmc
jle
pop
dec
inc
outsl
cltd
add
fwait
jne
mov
xor
pushf
and
inc
arpl
testb
jmp
jle
sbbl
cmp
scas
jecxz
shlb
sub
test
aad
mov
icebp
jae
push
push
les
repz
enter
cmp
jo
popa
xchg
pop
in
stc
fs
xlat
lock
movsb
or
sub
ljmp
mov
enter
jl
test
stos
sbb
das
jbe
pusha
push
jmpw
dec
push
xchg
jmp
or
ds
outsb
mov
adcl
xadd
bound
cld
daa
popa
das
lock
mov
cwtl
push
mov
sbb
inc
xchg
test
cld
inc
shrl
and
scas
scas
push
outsl
mov
ret
pop
shl
jecxz
mov
bound
gs
rorl
xchg
mov
cmc
xchg
xor
pop
sbb
data16
or
mov
pop
fldenv
cs
loope
mov
push
xor
aad
scas
sub
dec
pop
aam
sbb
sbbl
inc
rcrl
fidivl
cmp
jns
fisttps
xchg
jae
and
or
aaa
out
adc
pop
xchg
inc
push
pop
pop
xor
lods
xchg
stos
inc
cmc
test
fdiv
jbe
push
out
fmull
jl
pop
repz
test
out
push
gs
jecxz
ljmp
ret
xor
stos
leave
sub
mov
mov
cs
mov
test
pusha
jno
sub
mov
imul
pop
xor
lret
jl
pop
and
stc
cld
mov
mov
cmp
sub
mov
loop
xlat
scas
outsl
cmp
dec
mov
dec
mov
leave
arpl
shlb
lds
mov
xor
mov
pop
subb
jecxz
pop
scas
bound
xchg
pop
aaa
aaa
pop
xchg
leave
hlt
adcl
xchg
imul
daa
mov
scas
filds
add
mov
incl
jge
dec
ret
pop
lea
fwait
mov
addr16
sahf
mov
jb
jae
inc
inc
push
sub
imul
and
cltd
outsl
lahf
jmp
rcrl
inc
xchg
shl
mov
xor
dec
push
ret
xchg
push
push
sbb
sub
dec
mov
add
push
cmp
sahf
jle
aad
sahf
push
jg
adc
testl
mov
movsl
mov
pop
and
mov
mov
or
dec
pop
inc
jl
jge
xchg
or
sbb
adc
pop
jg
inc
int
or
imul
mov
ds
aas
andb
out
mov
pop
imul
adc
dec
push
insb
xchg
xchg
xor
lret
pop
les
aad
movsb
mov
pop
dec
xchg
sti
das
popf
or
mov
dec
mov
insb
out
xchg
sbb
pushw
push
js
sbb
mov
movsl
push
pop
sub
xor
push
mov
test
rolb
xor
cmp
or
into
jne
push
cmp
adc
leave
push
mov
rcrl
fsubrs
cli
dec
jno
inc
xchg
xchg
and
mov
push
sub
rclb
iret
push
pop
sarb
out
flds
xor
jp
xlat
jmp
cmp
call
nop
cmp
xchg
fcomps
aam
add
loope
clc
mov
in
jl
loope
std
call
loope
push
push
or
xchg
ret
sbb
jo
clc
lahf
mov
outsl
pop
xor
cmp
mov
int
mov
ljmp
movsl
test
jae
mov
dec
inc
and
loopne
fsubs
lret
ret
movsb
add
jne
cmp
add
jns
ds
add
cs
stc
shlb
push
lock
add
add
cmp
stos
mov
xor
int
sti
mov
gs
fsubl
clc
sahf
ljmp
dec
test
add
iret
sub
xor
sbb
outsl
and
scas
insl
xchg
inc
jb
push
pusha
cmp
scas
inc
sbb
xor
test
dec
aam
hlt
nop
popa
xchg
rorl
fs
iret
enter
roll
pusha
cmp
testb
mov
pusha
push
dec
add
and
sbb
dec
mov
lods
data16
xchg
jmp
pop
cmp
subl
cmpsb
lret
mov
pop
fisubrs
ja
int
push
cmc
dec
outsb
push
cmpsb
scas
and
dec
test
ret
fisttpl
push
imul
xor
mov
jne
jmp
sbb
xchg
or
inc
das
lcall
mov
jne
rol
add
je
cld
and
std
mov
test
dec
addr16
dec
push
test
ret
in
jge
mov
test
fs
fimuls
jl
aaa
test
addr16
sbb
sub
out
pop
mov
or
gs
push
cmp
mov
jne
pop
rorl
inc
sub
or
imul
cmp
in
das
out
mov
add
sbb
lods
pop
arpl
cld
into
das
shll
push
lds
mov
sub
lret
loop
xor
in
mov
jb
and
mov
hlt
xchg
notl
xor
mov
and
enter
inc
bound
adc
push
or
and
jne
sbbb
nop
jecxz
mov
xor
sbb
jg
outsb
andl
into
test
insb
and
add
sbb
cmp
dec
stc
data16
sarl
jnp
xchg
push
repnz
bound
lds
sahf
add
cmp
inc
mov
repz
shll
push
xchg
jno
and
push
stc
push
stos
icebp
leave
rclb
pop
xor
jne
pop
cld
xchg
arpl
ds
cmp
in
mov
push
pop
pop
outsl
inc
pop
std
lret
mov
or
sti
andl
int
xor
xchg
or
pop
addr16
fwait
ds
jne
data16
xor
xchg
les
jns
xor
mov
je
insl
push
xchg
lock
cltd
jns
sub
lahf
inc
arpl
into
mov
lods
mov
push
arpl
xlat
sbb
jmp
adc
shlb
inc
push
subb
int
daa
lock
scas
cmp
aas
popa
std
inc
test
mov
jge
push
adc
xor
ret
inc
xor
jl
popa
jbe
inc
fsubp
ja
fiadds
scas
and
fdiv
out
inc
cmp
ret
xor
mov
lret
jge
arpl
xor
mov
stos
sub
cwtl
ja
dec
pop
call
inc
and
or
sub
loope
imul
mov
setb
mov
mov
pop
sub
les
jnp
jp
or
repz
std
es
sub
cld
mov
aad
pop
adc
rcl
hlt
cltd
test
imul
loop
and
dec
xlat
fnop
insl
shll
movsb
mov
cmpsl
inc
mov
mov
sbb
negb
mov
cmp
or
fidivrl
daa
fsubrp
sbb
add
pop
jp
jmp
and
lods
repnz
pushf
lahf
and
fadds
xchg
add
bound
daa
fistl
jno
out
mov
adc
cmp
pop
test
scas
ss
shl
out
mov
orb
imul
mov
and
cmp
notl
jnp
dec
jg
cs
cmp
inc
call
cmp
enter
cmpsl
rcrl
jg
rorb
cld
popa
inc
and
imull
dec
add
les
mov
xchg
jge
and
push
inc
xlat
or
push
pop
popf
mov
movsb
jno
cmp
ja
stos
dec
sahf
xchg
pop
xchg
insl
aam
xchg
mov
cli
xor
leave
jg
nop
push
push
bound
out
rcll
inc
mov
jecxz
in
mov
mov
test
imul
lock
sar
jne
xchg
dec
mov
fnstsw
in
addb
adc
mov
loopne
dec
ror
dec
and
inc
nop
pop
jo
out
in
pop
pop
pop
pusha
pop
cwtl
adc
ljmp
scas
outsl
test
lret
mov
push
cs
mov
cmc
pushf
mov
jmp
aam
outsl
shlb
loope
push
fstpl
xor
sub
push
xchg
adc
lcall
add
cmp
pop
push
sti
sbb
mov
dec
or
mov
or
xchg
xchg
lahf
xlat
imulb
orl
mov
dec
cmc
mov
not
and
xchg
bnd
pop
aam
mov
aad
mov
mov
in
sahf
pop
adc
xchg
push
xchg
repnz
daa
loope
stc
sti
or
jp,pn
xor
std
cmp
cwtl
push
cmp
je
test
adc
xchg
addr16
notb
shr
adc
popa
clc
xchg
or
adc
push
mov
pop
push
ss
adc
sbbl
test
xor
sub
scas
push
ss
add
jns
daa
aam
adc
inc
jmp
or
jmp
adc
cli
and
sti
push
sahf
das
test
into
jmp
sbb
mov
xchg
bsr
aam
sbb
mov
push
jns
xchg
cmc
mov
pop
jp
mov
or
pop
daa
inc
out
push
movsb
pop
or
mov
adc
test
mov
xchg
jns
fwait
pop
outsb
push
jle
cld
je
mov
call
stos
loopne
mov
xchg
and
push
inc
cmc
xchg
xchg
movsb
movsl
xlat
pop
loop
lret
repnz
xor
xor
imul
xchg
or
pop
fldcw
lods
rclb
xor
push
pop
or
add
test
shl
adc
xchg
scas
mov
sub
push
push
outsb
jbe
adc
imul
subl
cli
stc
sub
repz
mov
cmpsb
inc
inc
inc
sub
cltd
cmc
dec
sbb
ja
sub
scas
das
xor
les
ja
lds
cld
shlb
cmc
aas
push
mov
call
mov
int3
add
imulb
mov
xor
sbb
jp
in
xchg
cld
or
xchg
imul
push
pushf
inc
mov
ljmp
xor
adc
add
push
inc
mov
aaa
lock
mov
loopne
jbe
test
pusha
fbld
push
scas
mov
call
lss
in
xor
pop
mov
cwtl
adcl
movsb
mov
cld
mov
mov
sbb
ss
jge
enter
call
fmull
shrl
scas
add
sbb
mov
iret
es
scas
jno
outsb
cmp
dec
or
roll
push
outsb
dec
push
arpl
or
xor
or
xor
mov
and
mov
jge,pn
push
ret
lcall
lods
shll
cld
or
inc
dec
or
loope
xchg
out
cwtl
imul
jb
into
xchg
lahf
jno
mov
outsb
aam
pushf
ret
popf
ret
xor
imul
push
imul
test
insl
add
inc
dec
adc
arpl
cmp
icebp
add
cli
pop
nop
out
cmp
cmp
stos
adc
lcall
fs
rcr
mov
jb
and
add
jnp
loopne
andb
sub
add
movsb
push
mov
js
push
push
in
xchg
mov
repnz
js
das
lods
vsubps
iret
adcl
shl
jmp
dec
test
clc
in
adc
add
or
rcrb
push
aam
push
or
xchg
dec
loope
jl
mov
sahf
inc
pushf
ds
and
jge
xor
or
nop
push
cmp
mov
or
mov
sti
xchg
clc
and
jae
insl
repz
or
mov
dec
mov
test
inc
mov
inc
sub
out
sbb
xchg
xor
mov
ret
add
xor
cmp
adc
xchg
mov
jb
pop
cs
jnp
push
js
ja
mov
xchg
adc
and
sub
or
ss
cs
aad
xchg
inc
scas
insb
xor
arpl
push
cmpsl
insl
cmc
outsb
mov
popl
rcrl
cli
pushl
sbb
adc
setae
mov
fisubs
sub
shll
xlat
les
add
adc
sbb
dec
and
push
jecxz
mov
add
push
daa
stos
sub
add
jbe
shrb
shrl
jbe
adc
pop
push
stc
xor
xor
xor
add
lods
xchg
jnp
mov
ljmp
pop
outsl
pop
adc
cmp
popf
dec
push
je
icebp
lret
cld
dec
mov
fistpl
pop
sub
jno
mov
sahf
rcrb
xor
pop
inc
xor
outsl
mov
sbb
or
sbb
leave
ljmp
sub
insl
jmp
jbe
mov
fcom
sarb
jnp
or
cmp
mov
test
mov
cli
ss
in
mov
adc
icebp
push
mov
jle
sub
sbb
dec
sarb
shrb
jmp
pop
jmp
jl,pn
sub
lahf
xchg
add
fnstcw
jl
call
outsl
push
pusha
mov
sbb
push
ficoms
dec
sbb
movsb
pop
pop
inc
repz
sarb
or
adc
ffree
push
push
push
fsubl
jbe
adc
push
call
cmp
pushf
out
push
aas
jo
cmpsb
fdivp
inc
mov
push
mov
call
aas
sahf
xchg
cwtl
xchg
lods
add
sbb
ret
cmp
mov
sub
xor
imul
jnp
jl
mov
fstpt
pop
cmp
sub
cmpsb
xchg
aam
dec
pop
pop
push
cmpsl
ja
push
pop
mov
or
repz
cmpsb
hlt
mov
xor
ja
xchg
inc
mov
or
push
jo
adc
int3
loop
cmpsl
outsl
lods
int3
lcall
divl
push
or
movsb
dec
lods
aam
stc
inc
test
mov
stos
sbb
mov
and
and
lea
insl
jle
cmpsl
mov
add
cmp
mov
mov
or
mov
mov
xor
imul
inc
add
fdivr
dec
pop
xlat
in
xor
sahf
xor
mov
clc
add
bound
inc
inc
add
aaa
pop
subl
das
xor
insl
int3
or
jae
push
nop
push
out
in
test
fcomp
rol
int
js
and
jno
mov
and
movsb
lret
nop
pop
fimuls
jmp
jno
jmp
xor
lahf
sarl
test
xlat
imul
loopne
dec
imul
scas
xor
scas
push
or
xor
push
testl
stos
sbb
xchg
cmp
cwtl
pop
cli
hlt
inc
mov
cmpsb
cmc
fnsave
push
xor
jnp
out
sahf
fsubrs
push
push
pushf
jge
pushf
rep
inc
pop
xor
adc
daa
and
cwtl
sahf
adc
sub
inc
jmp
fsubrl
lret
lods
inc
or
push
jle
push
out
ja
adc
dec
mov
mov
adc
pop
push
outsl
jnp
sub
push
and
dec
call
xor
int
mov
inc
mov
sub
jle
out
int
into
add
rclb
setne
cmp
int3
movsb
dec
pop
mov
add
push
push
push
lods
push
pshufw
in
mov
dec
push
mov
mov
and
ljmp
ljmp
jl
push
rorb
pop
jg
jnp
and
jno
jle
add
xor
adc
push
mov
dec
mov
pop
test
add
leave
pop
push
enter
loop
mov
fidivl
sti
ss
jnp
dec
aad
push
push
sub
xor
imul
mov
shl
cmp
push
mov
jo
xchg
sbb
push
pop
cmp
or
xchg
jge
ss
fwait
je
daa
push
mov
jmp
push
nop
inc
gs
ret
jbe
mov
sbb
push
inc
and
jo
sarb
cs
and
sti
adc
in
or
imulb
imul
addl
rolb
in
lods
add
mov
lock
scas
jnp
xrelease
mov
mov
xor
pop
stos
inc
fistl
inc
js
in
mov
inc
out
orb
push
push
mov
dec
or
jmp
cmp
lahf
jae
dec
push
je
shlb
aam
inc
movsb
push
sub
or
xchg
xchg
js
pop
mov
cli
add
in
cli
aad
jne
dec
scas
push
xchg
lret
sub
outsb
inc
fs
inc
je
and
fidivl
fmull
dec
inc
mov
mov
pop
daa
outsb
nop
mov
aaa
or
push
inc
rcrb
or
mov
pop
leave
out
mov
aam
mov
and
loope
pop
mov
add
or
or
mov
adc
sbb
jne
je
pop
sub
mov
push
arpl
cwtl
bound
inc
test
pop
and
mov
mov
loope
mov
cmp
iret
cmpsl
add
push
ret
push
in
test
sbb
insb
xchg
mov
or
loopne
cmp
mov
popa
sub
xchg
sub
jl
push
sub
push
jbe
test
je
push
sbb
and
xchg
mov
stc
in
outsl
loop
add
in
mov
aas
iret
popf
jbe
mov
addl
pushl
insl
dec
stos
adc
or
rclb
out
jg
lds
xchg
out
repz
or
mov
dec
cwtl
imul
xchg
or
lock
shrl
cmp
sub
out
out
mov
pop
mov
jno
push
and
ret
and
in
div
fcoms
add
sub
bound
in
cmp
jge
inc
adc
sti
pop
pop
imul
ret
stc
xchg
or
mov
and
pusha
dec
hlt
cmc
andl
out
imul
les
jg
cld
pop
rorb
xchg
insb
lods
insl
js
adc
sarb
into
xor
or
push
call
cmp
push
pop
lcall
pop
insb
pop
out
pusha
mov
scas
pop
ss
add
xor
sub
push
add
push
mov
inc
push
mov
adc
rorb
xor
aaa
imull
or
cmp
ds
add
scas
rorl
add
shlb
add
mov
sti
sti
fmull
ficoml
add
insl
mov
push
movsl
ret
sbb
addr16
xor
cmp
add
dec
sbb
jae
mov
ds
aaa
cs
inc
call
popa
pop
not
push
pop
xlat
jecxz
das
js
push
iret
sub
dec
cmp
push
ror
nop
into
incl
push
sub
decb
mov
test
fstpl
mov
ret
loop
aam
push
xlat
test
and
sub
and
incb
push
lret
bound
js
mov
fidivs
bound
add
jmp
leave
es
repz
mov
cli
sub
or
hlt
jecxz
test
cltd
push
add
cmc
jp
leave
imul
das
or
mov
cpuid
fildl
mov
push
ja
xor
testb
in
inc
or
lock
pushf
stc
lods
jle
jecxz
jg
pop
mov
mov
jecxz
mov
leave
fdivrl
insl
popf
loop
mov
add
test
xor
ds
movsb
add
cmpsl
ja
xchg
inc
jae
mov
pop
add
xchg
pop
subb
in
fcoml
inc
dec
mov
cli
cli
push
sti
fwait
pop
xchg
add
stc
add
aaa
xchg
inc
lcall
lds
fsubrp
push
pop
mov
mov
cmp
xchg
xor
push
mov
pop
daa
lret
adc
push
jge
inc
inc
test
sub
ss
lea
cmp
mov
adc
jmp
lcall
sub
pop
mov
xor
test
mov
es
in
in
xchg
sahf
sub
negl
fs
and
jns
dec
lret
shll
push
push
stos
lret
mov
jnp
insb
inc
lods
push
pop
mov
or
push
shl
in
add
icebp
or
mov
daa
jbe
jle
xchg
mov
dec
jae
xchg
cli
arpl
aad
jl
aad
cmp
dec
pop
cmpsb
cmpxchg
mov
repz
inc
outsl
out
dec
cmp
pop
imul
and
push
scas
bound
or
pop
xchg
rclb
sbb
jmp
icebp
add
jo
sbb
mov
or
test
mov
ds
mov
pusha
and
jno
repnz
pop
add
cmp
jmp
lahf
cltd
div
dec
int3
das
in
test
sti
ss
mov
aam
test
xchg
dec
repz
jae
or
repz
or
xlat
inc
push
mov
in
fsubl
sbb
lods
push
sbb
mov
xchg
stc
dec
insb
jmp
nopl
pop
add
mov
stc
sbb
mov
lock
push
aad
repz
std
pop
and
xor
rclb
xchg
jb
add
outsb
sbb
int3
mov
or
repz
mov
mov
bnd
lahf
shll
pop
shl
lret
imul
sbb
push
pop
cwtl
sahf
pop
js
dec
mov
add
and
xlat
hlt
dec
xor
jmp
push
pop
insb
fs
xchg
imul
sub
orl
jecxz
icebp
inc
mov
add
jecxz
sti
push
inc
mov
cmpsl
inc
cwtl
dec
aad
sti
movsb
adc
jle
movsl
inc
dec
call
jg
test
mov
dec
mov
icebp
enter
fldt
or
dec
sub
jl
mov
cmpb
es
pusha
or
daa
jl
cmpsb
adc
int
and
ss
sub
adc
add
fcompl
xchg
jnp
cmpb
adc
push
jl
rcr
loopne
sbb
cmc
adc
cmpsl
push
and
pop
fisubrl
jno
fyl2xp1
test
and
loop
and
lahf
or
std
faddp
sub
add
jmp
mov
std
popf
ds
addb
test
test
xchg
mov
adcl
push
pop
xchg
stc
aam
push
cltd
mov
or
mov
fcoml
dec
jae
mov
out
jp
mov
mov
insl
in
in
push
pop
sar
loopne
xchg
dec
stos
push
mov
inc
gs
and
xlat
in
pop
loopne
outsl
jne
sub
movsb
stc
stos
cld
jge
dec
cmp
xor
flds
or
mov
jns
lods
add
fildl
cmp
pop
inc
sbb
push
add
dec
xchg
xchg
pop
jge
scas
test
add
add
or
out
add
jle
jmp
xchg
insl
sbb
test
clc
lods
ja
inc
ja
aam
xchg
xor
stos
in
es
inc
add
lock
and
mov
cmpsl
jge
int3
pop
insb
je
outsb
out
lods
xlat
lret
xor
sbb
cmp
mov
inc
add
repz
mov
pop
in
fsubrp
pushf
lret
aaa
push
sub
ja
pop
repz
out
ds
mov
cli
add
sub
pop
scas
jns
push
or
sbb
add
mov
mov
and
stos
les
outsl
ds
in
inc
jno
cmp
jmp
je
and
shl
xchg
imull
ljmpw
jo
mov
sbb
pushf
popa
cwtl
out
pop
mov
inc
loopne
xor
mov
cmp
lods
jbe
jecxz
lock
adc
push
push
sahf
loopne
push
test
into
pop
jae
mov
dec
mov
jne
into
mov
add
or
and
pop
daa
lret
aad
sbb
cmp
lds
xorb
sbb
or
stos
mov
notb
nop
mov
cltd
xchg
incl
inc
push
and
mov
dec
into
jae
jl
aam
add
call
lcall
insl
cwtl
sbb
ss
or
mov
fdivs
pop
mov
enter
jle
mov
rcll
imul
sub
std
mov
mov
mov
pop
cmp
iret
arpl
add
ret
adc
mov
sbb
xor
mov
scas
push
cmpsb
out
push
add
pop
mov
push
mov
add
stc
testb
iret
idiv
lret
inc
int
out
roll
out
mov
mov
imul
les
xchg
es
scas
vaesenc
jb
adc
leave
pushf
sahf
add
dec
pop
mov
add
cld
mov
outsb
sub
xchg
cmpsl
jle
sahf
add
mov
push
jle
imul
test
lods
pop
xchg
loopne
scas
adc
loop
cmpsb
sbb
mov
popa
inc
or
sahf
dec
add
test
xchg
fsubl
adc
ljmp
fists
ret
jle
jmp
sub
imul
ja
inc
push
aas
pop
jl
mov
add
add
inc
sti
jb
xchg
les
insl
fldcw
lea
sbbl
dec
xor
add
xchg
mov
inc
or
mov
sbb
movsl
mov
out
aad
mov
xor
dec
mov
and
and
mov
jg
xchg
cmc
mov
cwtl
dec
xchg
sub
jne
rcr
dec
cmp
sarl
adc
js
mov
les
into
adc
scas
in
loopne
arpl
push
les
cmp
sbb
fldt
arpl
sbb
jp
insb
ret
adc
cmp
imul
jmp
das
call
adc
int
lock
insl
mov
and
mov
cwtl
insb
testb
std
icebp
imul
call
dec
pop
shll
mov
inc
pop
add
negl
cli
iret
lock
pop
or
dec
jns
sahf
shrl
mov
sbb
lahf
in
lds
xchg
xchg
ret
adc
add
jns
mov
int3
insb
out
not
jl
insb
popa
lds
popf
in
or
or
push
adc
lds
gs
loopne
sub
testb
loop
lcall
das
jns
je
test
xchg
rorb
inc
les
outsl
or
mov
xchg
cmp
pop
jmp
inc
loope
jg
jle
xor
pop
aad
jne
sub
push
arpl
int3
push
lea
fdivs
sarb
jmp
imul
or
gs
rorl
repnz
loop
addr16
scas
xor
adc
or
xor
fistps
mov
push
lock
das
jmp
cli
dec
add
sub
in
adc
jge
add
jae
mov
mov
lret
dec
xor
sahf
adcb
rorb
push
loopne
mov
cmp
and
adc
and
test
enter
icebp
les
lcall
inc
mov
aam
mov
add
out
xchg
xchg
dec
push
movsl
pop
sub
lods
mov
cmpsl
bound
popa
jo
arpl
sub
popf
cmp
subl
mov
xchg
sbb
xchg
in
test
rorl
out
icebp
push
fbld
inc
sahf
loopne
cltd
mov
ja
fisttps
pop
nop
sub
outsb
xchg
sub
test
nop
nop
pop
mov
subl
sti
cmp
mov
lret
movl
push
test
mov
test
mov
hlt
mov
popf
mov
arpl
inc
repnz
dec
leave
xchg
xchg
push
stos
push
pop
xlat
cld
mov
cmpsl
andb
popf
dec
fdivrs
enter
jae
fcompl
xor
clc
ja
mov
iret
adcl
lret
cli
stos
daa
notb
nop
subb
les
jp
stos
adc
xchg
sbb
mov
mov
cs
scas
scas
leave
inc
dec
add
mov
lods
mov
ljmp
jo
test
or
loopne
inc
xchg
stc
insb
xor
mov
dec
cmpsl
lcall
test
xchg
fsubs
icebp
call
sub
xor
xor
ret
or
cli
push
in
in
mov
adc
pop
ficoms
cmp
add
xchg
addl
popf
into
aam
and
pop
jp
xchg
and
push
push
outsb
pop
sub
popa
inc
mov
rolb
fwait
incb
xchg
jle
mov
and
pushf
cmp
ljmp
inc
stc
adc
and
lcall
fucomi
jnp
ret
inc
lret
jae
mov
jno
or
push
cmp
int
cmc
mov
or
and
mov
aaa
popf
ficoml
andl
das
fidivrs
pop
mov
push
xlat
scas
mov
insb
mov
lret
pop
aaa
gs
mov
lcall
mov
mov
iret
loope
xchg
mull
movups
xchg
les
mov
aam
cmp
sbb
aas
mov
add
in
cltd
mov
or
sbb
js
movsb
scas
gs
int3
cmp
sbb
xchg
fwait
stc
lea
mov
rol
lcall
lret
pop
push
sbb
mov
sub
pop
int3
or
mov
ljmp
divb
imul
sbbl
pop
and
loop
add
mov
cmp
xor
mov
cmp
sahf
loope
jnp
adc
rcll
pop
jb
les
mov
cltd
cld
pop
push
add
mov
push
imul
xor
push
dec
in
lcall
enter
roll
add
dec
mov
jnp
outsl
adc
idivb
add
frstor
xchg
cmp
or
sub
imul
jb
pop
or
adc
and
jp
xchg
dec
aad
inc
inc
outsl
hlt
hlt
and
xchg
das
sub
xchg
adc
or
mov
test
xor
scas
push
jl
mov
and
cmpsl
sub
outsl
int
sbb
adc
mov
cmp
pop
xor
or
add
xchg
jecxz
inc
arpl
popa
mov
in
fcmove
mov
xchg
dec
movb
push
packssdw
and
loopne
inc
lds
lret
orb
test
sbb
cmpsl
incl
inc
leave
xchg
push
or
mov
or
xchg
popa
nop
xchg
addl
add
xor
and
cwtl
in
jp
neg
mov
and
imul
fcmovb
test
outsb
or
and
sub
ja
jp
ret
pop
or
aaa
add
adc
and
mov
out
repnz
shlb
cld
push
hlt
push
aaa
and
outsl
repnz
xor
sbb
and
sar
adc
movzbl
stc
sbb
fstl
mov
test
or
push
fldt
mov
mov
out
jno
push
aad
cmp
push
lods
mov
shll
mov
int
push
jp
sub
cmp
pop
pushf
jle
test
test
ljmp
cmp
stos
loopne
ljmp
test
ss
push
test
loope
push
out
mov
dec
fs
jno
xchg
call
loope
lret
jmp
inc
adc
icebp
icebp
inc
popaw
lcall
xchg
push
aam
sub
or
adc
les
mov
mov
cli
lock
enter
enter
je
mov
xor
xchg
inc
cli
leave
jnp
xlat
jno
adc
fdivrl
cmpsb
and
jp
test
in
mov
pop
sbb
xchg
test
dec
pop
jae
lea
sub
push
or
cmc
mov
push
mov
pop
sbb
ds
jmp
inc
outsl
sarb
adc
ret
mov
xchg
out
push
and
adc
jbe
sbb
mov
pop
add
push
aas
push
inc
jbe
das
xor
mov
imul
and
mov
xor
cmp
sbb
inc
push
pop
and
adc
psubsw
mov
or
test
int3
daa
fwait
inc
dec
fmuls
test
mov
sbb
xchg
cld
repz
movsl
das
scas
lods
test
xchg
loope
pop
adc
and
test
notl
and
js
and
repnz
push
icebp
mov
or
cltd
jge
xor
call
cmp
subl
imul
or
xchg
adc
scas
pop
dec
xor
call
rcrl
push
sbb
das
jmp
mov
sub
sbb
jb
mov
push
mov
aaa
push
sub
mov
decb
loopne
repnz
ret
imul
xchg
sbb
mov
cltd
dec
lahf
test
js
lods
icebp
out
mov
mov
lret
popf
call
and
mov
fisttps
mov
out
cwtl
jle
push
test
adc
or
ja
dec
cmpb
or
shrb
aam
jae
mov
leave
add
sub
bound
dec
fnsave
cmp
adc
out
mov
jp
sbb
push
idiv
popf
mov
adc
imul
and
push
mov
dec
adc
mov
jns
loope
mov
and
mov
add
add
sbb
inc
dec
add
nop
jg
ret
js
xlat
xchg
pop
mov
jle
lahf
dec
mov
hlt
xchg
pop
xor
repnz
cmp
stos
xorb
push
inc
dec
push
bound
cld
subb
push
push
mov
or
jle
insb
sarl
pop
sbb
mov
leave
pop
xchg
lock
add
in
dec
scas
jl
stc
xor
ret
inc
pop
jecxz
aas
mov
xchg
or
jge
mov
pop
fistpl
xor
dec
add
out
mov
pop
sub
or
cs
lret
iret
ljmp
or
shl
push
nop
je
sub
pop
rcrb
je
lret
inc
xchg
les
inc
loopne
sub
sbb
cltd
loop
call
cmpsb
xchg
sbb
lret
pop
add
test
xor
aad
int3
loop
pop
lods
test
sub
sbb
mov
fwait
add
daa
dec
mov
dec
mov
push
test
adc
stos
popf
mov
add
dec
push
test
or
repz
jbe
push
sbb
in
cmp
lods
mov
cwtl
push
insl
inc
ljmp
testb
ret
nop
in
cltd
movsl
adc
mov
sbb
jmp
add
stos
adc
cmp
shlb
mov
dec
push
jnp
mov
sti
or
mov
push
scas
enter
sbb
in
std
mov
xchg
out
inc
adc
cmp
imulb
push
add
dec
mov
sbb
aad
ljmp
jmp
sbb
in
lods
pop
aam
cltd
loopne
data16
aas
xchg
shrl
xor
add
xchg
nop
and
aas
jg
pop
addb
cmpsb
and
fwait
inc
dec
or
pop
sbb
js
dec
hlt
jns
cmp
dec
roll
cmp
les
mov
add
push
imul
and
js
popl
rolb
cmp
add
icebp
pop
in
xor
or
lahf
jae
ret
hlt
pop
fisttpll
mov
mov
lret
xchg
push
lret
or
cmp
fbstp
lds
sub
push
cmp
lret
divl
ret
in
outsl
jno
jae
fldt
test
pusha
pushf
sbb
mov
adc
sbb
insl
je
int3
imul
xchg
push
inc
ficoml
xorb
mov
pop
stos
adcb
pop
pop
mov
add
push
in
lret
cmp
lcall
jno
aad
testb
sub
dec
jb
push
xchg
sub
fists
test
shl
mov
stos
push
popf
js
dec
mov
adc
and
mov
mov
mov
fs
xchg
imul
bound
sub
mov
or
lods
jae
mov
mov
jmp
int3
xchg
add
clc
adc
std
mov
clc
imul
inc
xchg
popa
and
test
mov
push
and
repz
sub
sub
test
or
jecxz
jp
std
adc
inc
inc
adc
mov
in
pop
mov
cmpsb
pop
daa
testl
jg
shrb
gs
jp
outsb
jmp
or
and
stos
inc
push
rclb
lret
mov
cmp
inc
pop
das
adcb
xchg
stos
mov
jno
push
in
add
pop
or
lods
and
outsb
imul
xchg
dec
mov
dec
add
xchg
cmpsl
jne
mov
dec
stc
movsl
xor
mov
push
jmp
das
fwait
fs
dec
aaa
rolb
or
in
dec
add
bnd
pop
and
sub
icebp
fstl
push
enter
in
pop
jp
mov
lods
dec
fs
dec
adc
sub
enter
add
lock
inc
test
je
imul
jp
adc
push
aaa
add
nop
sti
pop
jl
adc
xchg
enter
sub
inc
xchg
mov
xchg
cmp
push
dec
or
pop
pop
stc
out
dec
mov
adc
xor
lea
sbb
outsb
xlat
in
ret
add
pop
push
scas
sub
pop
xchg
mov
aam
or
imul
and
xchg
or
mov
xlat
xor
call
daa
jne
cmc
xor
addr16
sub
cmp
sbb
leave
daa
xchg
lods
cli
dec
hlt
scas
fsts
and
sti
adc
mov
and
lret
scas
icebp
and
cmpsl
dec
inc
jbe
aas
mov
and
push
push
imul
test
add
or
adc
push
scas
fwait
shr
jp
outsl
pop
mov
pop
inc
push
pusha
les
or
stc
xchg
push
sbb
bound
js
roll
cmp
and
inc
xor
scas
aaa
testl
mov
sub
cmp
stc
das
pop
fisttpll
rcrb
add
in
ljmp
and
cli
mov
mov
xchg
jae
mov
es
insb
xchg
shl
call
shl
ficoml
cmp
adc
scas
inc
pusha
adc
imul
mov
test
xor
insb
and
lret
dec
adc
pushw
cli
mov
lret
fnstsw
call
mov
popa
insb
mov
fisubs
jbe
movsl
inc
es
enter
xor
pop
mov
push
lock
dec
inc
aaa
sub
lods
adc
push
daa
inc
inc
push
inc
rclb
aam
aaa
insl
push
cwtl
and
ret
aaa
xlat
ret
scas
and
adc
and
jb
ficoms
lock
and
sbbl
push
cld
leave
enter
xchg
adc
push
movsl
inc
outsb
push
xor
xor
mov
lahf
inc
das
enter
xchg
mov
xlat
dec
dec
sbb
imul
loop
test
adc
inc
into
cltd
inc
mov
adc
jo
ret
rorb
sbb
mov
shrl
cmp
adc
lcall
fimuls
icebp
aam
cmp
pop
dec
cli
sbb
out
lahf
frstor
sub
int
cmp
add
dec
pop
sahf
nop
cmp
xchg
mov
aaa
push
cmp
xchg
pushf
sarb
fstl
jecxz
jecxz
xor
xchg
std
repz
lods
xor
daa
imul
pop
dec
test
fcmovnbe
dec
daa
cwtl
and
cmc
lret
stc
mov
shlb
jecxz
shr
xchg
jo
pop
mov
in
push
pop
adc
js
loopne
inc
mov
mov
mov
lcall
sarb
mov
test
mov
pop
pusha
jbe
ljmp
inc
xor
inc
fadds
pop
divl
stos
gs
cmp
ret
out
jecxz
inc
sub
xor
lds
adc
push
out
mov
sbb
add
mov
popa
xchg
cltd
lea
jb
rolb
jbe
test
push
addr16
adc
pop
cltd
dec
add
pushf
sbb
mov
shr
test
lds
pop
fs
in
adc
fs
bound
adc
inc
xor
add
push
movsl
loope
stc
mov
cmp
fwait
aas
mov
xchg
xor
mov
loopne
pop
rcll
mov
mov
mov
ds
jnp
jmp
js
sub
mov
arpl
jp
mov
insl
shlb
inc
sub
cmp
dec
and
stc
add
xchg
dec
gs
jb
cmp
jns
jnp
xor
es
pop
pop
pop
push
pushf
push
cltd
push
int3
imul
or
gs
leave
pop
xchg
add
cli
pop
adc
inc
in
cmp
lret
inc
jae
push
mov
push
aas
jle
xor
mov
js
inc
dec
xor
jmp
hlt
loopne
xchg
ret
mov
clc
out
and
orl
pusha
addr16
and
in
jecxz
data16
and
or
fisttps
push
mov
jno
or
cld
mov
sub
ss
daa
pop
push
in
push
sub
stc
xchg
cmp
or
add
dec
repz
push
push
out
pop
inc
daa
jne
cli
or
push
test
stos
or
in
inc
movsb
mov
mov
scas
pop
stos
nop
push
divl
inc
les
inc
mov
lods
pop
xor
mov
or
cwtl
lahf
xchg
inc
mov
cld
add
cmp
xor
cmp
mov
push
and
rcrl
mov
jmp
js
sbb
mov
and
ja
data16
xor
fld
pop
stos
fdivs
enter
int3
test
insb
xor
jo
lock
push
adc
mov
sarb
mov
fs
std
sub
popa
jno
jns
in
gs
xchg
icebp
mov
daa
jge
in
dec
daa
mov
fistpll
and
xchg
mov
sub
cwtl
push
xor
test
mov
fidivl
repz
insb
cmp
add
mov
or
xor
or
jle
mov
mov
and
sub
sub
inc
or
je
mov
jg
int3
push
cmpsl
test
or
xor
pop
mov
push
dec
push
mulb
adc
sub
dec
std
sub
adc
loopne
stos
int
adc
sbb
mov
dec
dec
in
lds
mov
push
rclb
pusha
or
add
shlb
stos
cli
popf
adc
and
pop
rcll
shlb
stos
aad
ret
push
nop
add
gs
adc
xchg
xchg
arpl
repnz
add
shll
mov
mov
adc
jne
dec
bound
aas
sub
cli
xor
xor
fdivl
mov
mov
daa
fcoms
ss
sub
repz
sbb
mov
mov
mov
mov
clc
insb
inc
push
gs
lcall
jp
popa
fsubrp
rorl
lock
push
rcrb
jle
or
push
subb
sub
pushf
fwait
xchg
bnd
sti
cmpsb
insl
lock
test
pushf
cmp
test
in
sbb
jno
in
adc
movsl
add
push
insb
out
movsb
int
jge
fsubrl
mov
pop
call
lds
add
jecxz
daa
mov
xchg
push
lret
xchg
ja
sbb
pop
adc
jne
mov
lds
rcl
add
testb
rcl
jne
xchg
or
ss
jbe
rcrb
divl
ja
mov
and
insb
je
xor
xchg
sbb
add
test
adc
mov
push
push
jae
gs
push
cmp
pushf
sub
dec
mov
pop
fsubp
loope
arpl
enter
test
sti
iret
pop
fdivs
cmc
neg
test
adc
jns
lods
push
jns
cmpsb
stc
rorb
pop
pop
jmp
xchg
fdivrl
mov
ret
popl
daa
xlat
dec
in
ljmp
push
fimull
mov
dec
adc
lods
pop
nop
inc
lea
add
imul
ja
push
push
in
mov
mov
xchg
jecxz
jg
jns
das
add
aam
push
inc
xor
xchg
push
int
jns
fidivrl
jp
fs
pop
sbb
outsb
mov
cmpl
in
cs
fcmovnbe
push
add
pop
and
mov
mov
iret
outsb
add
sbb
xor
mov
loope
int3
es
pop
push
sbb
out
jbe
mov
pop
xchg
cmpb
int
ljmp
and
lods
fldt
repnz
in
mov
addr16
adc
mov
xchg
inc
dec
mov
aad
jnp
addr16
mov
je,pt
dec
mov
fs
adc
and
add
jl
fwait
in
loope
stos
xchg
jno
insb
xchg
subb
call
xchg
jbe
cmp
pop
lea
movsb
fimuls
xor
popa
leave
stos
psubusb
faddp
in
cmp
push
pop
jmp
movsl
fsts
cld
fs
sub
repz
pushf
mov
addl
mov
and
mov
adc
dec
jecxz
sbb
and
sahf
pop
or
push
jge
popf
add
std
popf
lods
and
push
js
arpl
xor
cmpsl
lods
ret
aaa
sbb
pop
test
sti
xchg
jp
xchg
and
sub
cwtl
push
and
adc
arpl
movsb
div
cmp
insb
xor
pushf
cmp
or
cmp
mov
inc
ss
add
adc
mov
push
and
imul
push
sbb
inc
cli
mov
fcmovnbe
hlt
into
in
xor
adc
sub
lret
stos
adc
negl
inc
insb
sub
and
or
stos
inc
pop
adc
xchg
jne
fwait
daa
daa
sbb
and
testl
push
xor
xchg
lret
inc
mov
movsl
icebp
ret
xchg
orb
scas
sbb
inc
dec
daa
and
xor
pop
mov
mov
xorl
inc
mov
imul
push
adc
push
movsl
in
xchg
rcrl
fdivrl
sbbl
int3
in
inc
and
sub
aad
pop
push
int3
rorb
es
xchg
nop
adc
je
push
mov
mov
sub
mov
faddl
xlat
fisubrs
stos
mov
pop
mov
fistpl
rcll
shl
mov
xchg
jecxz
adc
adc
or
xchg
mov
xchg
dec
push
shrb
int3
lock
pop
testl
int3
je
adc
ret
jb
inc
movsl
nop
mov
add
jg
aas
mov
sub
sbb
les
sub
shr
mov
sti
mov
les
sbb
pop
aad
je
negl
jl
enter
scas
mov
shll
xchg
cli
outsb
cmp
add
icebp
push
int
jecxz
ret
push
jnp
pop
data16
mov
inc
and
test
jecxz
mov
mov
rcrb
aas
jmp
mov
lds
decl
mov
mov
in
adc
cs
adc
insb
push
stc
mov
and
dec
and
sbb
ret
es
or
std
cld
mov
dec
sub
inc
mov
mov
push
arpl
and
dec
es
sub
cwtl
add
add
mov
into
xchg
add
stos
sub
xor
jl
mov
imul
jb
repz
jne
adcb
jne
pop
jb
out
imul
and
popa
cli
iret
sahf
outsl
aam
ret
mov
sahf
xlat
outsb
movsl
test
adc
jge
cmp
mov
jae
inc
sbb
push
cmp
fistpl
and
imul
daa
push
or
mov
stos
movsl
nop
jno
xor
pop
xchg
jns
cmp
mov
or
fdiv
mov
inc
nop
sbbl
enter
pop
in
jae
adc
inc
gs
inc
push
and
insl
pop
pop
xchg
in
sbb
cmp
rorb
cwtl
mov
ds
rorl
cmc
mov
xchg
add
push
clc
adc
popa
or
std
jae
push
call
rcll
mov
jmp
jbe
test
inc
push
mov
dec
pop
pop
mov
stc
enter
sub
or
sbb
xor
xor
dec
dec
push
repnz
das
lret
fildll
int3
test
push
inc
sti
pop
adc
dec
das
lds
pushf
fcomps
jns
jl
mov
xchg
inc
sti
ret
inc
inc
stos
add
pop
std
push
sarb
lret
push
add
pop
mov
cmp
inc
push
and
inc
or
jp
xchg
rorb
inc
jnp
xor
cmp
into
pop
shl
jnp
test
cmp
ds
sub
jbe
mov
xchg
orb
mov
fsubrp
pusha
cmp
add
push
repnz
inc
mov
xchg
aad
inc
dec
enter
je
inc
fadd
xchg
xchg
mov
mov
aaa
fstps
mov
add
sbb
cmpsb
cs
leave
xor
rclb
xchg
imul
add
or
add
jbe
pushf
dec
mov
sahf
mov
aas
lods
fldcw
dec
inc
decl
dec
jge
repnz
adc
jecxz
mov
inc
aam
mov
insb
mov
adc
addps
cmp
xor
inc
pusha
mov
stos
fldl
push
sbb
sub
pop
int
fidivs
push
gs
pop
fisubrl
cmp
mov
jecxz
into
js
mov
fmuls
push
pop
iret
xor
inc
push
ret
nop
cmp
sub
sbb
xor
xchg
pop
lcall
adc
testb
push
add
lret
adc
scas
or
add
pop
int
cmpsl
dec
arpl
fbstp
adc
pushf
bound
dec
pop
cmp
dec
jbe
add
and
rcrb
adc
cmp
popa
dec
in
jo
xchg
into
dec
mov
arpl
dec
decb
pop
lret
ja
or
adc
mov
call
or
push
icebp
loop
pop
cltd
and
imulb
pop
cmp
cli
rorl
clc
adc
push
sub
adc
inc
mov
jns
pop
fldenv
outsb
mov
cwtl
lds
in
es
xchg
jne
pop
outsl
imul
imul
stos
sbbl
xchg
push
jp
or
fwait
inc
bound
arpl
aad
mov
bound
fdivl
cmpb
jno
inc
popf
sub
movsb
mov
imul
repnz
js
mov
mov
xchg
test
shlb
add
sti
cmpl
or
test
cmp
repnz
in
jo
sub
and
mov
sbb
dec
pop
mov
cmp
loopne
xchg
mov
cmpsl
shlb
push
adc
and
out
out
mov
stos
mov
xchg
sarb
xchg
iret
mov
mov
mov
fdivl
dec
imul
lea
clc
inc
pop
imul
push
pop
pop
lretw
xchg
sahf
xor
push
and
scas
or
ret
or
out
rclb
cmp
push
popf
add
loop
push
loop
inc
lods
pop
lods
sbbl
sub
sbb
mov
mov
test
adcb
aad
or
jns
sbb
sarb
loop
cmp
test
cltd
mov
mov
ds
mov
dec
lds
loope
in
xor
or
lods
cld
mov
sbb
iret
stos
test
scas
icebp
mov
or
rcll
sarl
lock
xorb
leave
jmp
dec
aad
xchg
in
pop
bound
inc
call
adc
jnp
mov
sbb
cmpsl
jns
sbb
test
push
xor
add
iret
jo
push
adc
or
push
sbb
xor
sub
pop
rclb
in
lret
mov
shlb
xchg
cmc
lods
and
pop
cmpl
lcall
leave
sbb
push
xchg
xor
dec
push
jb
repnz
add
or
and
xor
inc
rcrl
xor
das
adc
sbb
rcr
std
sub
and
mov
dec
lock
inc
and
ss
mov
dec
daa
clc
inc
sbb
into
xor
mov
sti
and
std
scas
and
mov
out
ss
push
outsb
or
xchg
push
mov
repnz
push
push
je
je
inc
pusha
cltd
mov
xchg
mov
add
std
out
shrl
dec
pushf
xor
std
mov
push
mov
push
shll
cmp
icebp
xor
adc
popa
movsl
pop
sbb
cld
add
jp
loope
icebp
xor
jl
jmp
push
sarb
and
xor
stos
out
aaa
fistpll
cs
cwtl
push
sub
cli
adc
xchg
and
adc
xchg
jle
push
or
mov
fldl
ret
sbb
aam
sbb
fs
xchg
sbb
gs
lock
ja
inc
ljmp
mov
mov
xchg
adc
dec
out
or
shlb
mov
aad
cwtl
std
out
push
ficompl
in
sbb
xor
insb
jge
pop
mov
xor
mov
push
ds
inc
xchg
mov
dec
lahf
fisubs
add
adc
fcmovne
and
shl
stos
sti
loopne
mov
adc
scas
and
add
push
pop
pop
mov
or
sub
rclb
jbe
mov
and
dec
mov
fdivr
xor
loop
stc
jnp
sahf
mov
mov
push
xchg
pop
aaa
pushf
ja
in
sbb
sub
add
xor
mov
and
push
cli
sbb
dec
jne
mov
jge
inc
test
mov
xchg
in
jmp
repnz
fdivs
xor
ret
fstpt
test
and
xchg
push
shlb
adc
push
shll
mov
inc
fdivs
jecxz
scas
movsl
decb
js
add
int3
ja
in
sub
push
push
push
popa
mov
cmp
jo
jb
add
dec
xor
sub
pusha
xchg
mov
cmpsb
repnz
dec
sub
fisubs
push
mov
clc
testb
enter
loope
rcrb
mov
and
jl
mov
movb
dec
mov
pop
rcl
jp
cmpsl
cld
jge
imul
bound
xchg
fists
add
mov
lret
adc
sbb
mov
sub
mov
out
cs
ljmp
cmp
jae
push
mov
jmp
lcall
push
fbstp
lock
movsb
jnp
jae
ret
fstps
adc
lcall
enter
and
test
inc
push
pop
imul
fisubrs
mov
jno
out
sbb
in
mov
sub
push
call
negb
je
ja
mov
inc
xchg
push
push
push
fidivrl
lds
insl
clc
bound
push
js
fldenv
mov
clc
push
dec
divb
cld
pop
mov
test
andl
sub
xchg
popa
add
pushf
mov
push
xor
inc
add
pop
lods
cmpsb
mov
xchg
mov
mov
and
test
adc
mov
dec
cmp
jb
aad
aam
les
into
dec
testl
jg
mov
jns
mov
lods
fiaddl
dec
ror
add
xorb
ss
mov
jbe
mov
adc
mov
aam
xchg
adcb
dec
mov
inc
push
enter
pop
jp
pop
add
inc
ret
popf
stos
aas
push
inc
call
jle
in
sbb
mov
stc
clc
sbb
fbstp
mov
lods
xchg
jns
adc
mov
pop
aad
leave
pop
mov
add
movsb
cmp
lock
cmp
cs
push
shlb
xchg
popa
cmp
cmp
push
push
cltd
sbb
cmp
inc
xor
out
xchg
pop
cwtl
dec
std
mov
lods
xor
ret
inc
jo
mov
xor
jl
bound
ja
fsub
pop
sbb
call
enter
sbb
and
mov
pop
add
inc
lret
imul
insl
into
lretw
call
adc
cs
test
inc
push
and
pop
lahf
hlt
push
push
mov
bound
cmp
aam
movsb
cmpsb
cld
stc
mov
add
in
adc
nop
cmp
inc
mov
mov
sub
cltd
mov
cmp
pop
mov
push
notrack
icebp
inc
dec
outsb
sarb
adc
and
push
out
jb
ret
dec
sub
loope
lret
test
insb
nop
jbe
push
pop
and
xchg
aam
popf
add
icebp
mov
pop
cmc
addr16
int
dec
or
mov
enter
jno
out
pop
mov
jmp
pushf
imul
movsb
loope
out
shrl
add
out
fcmovne
pop
cs
adc
scas
mov
sbb
xchg
js
lahf
sahf
stos
and
push
into
push
testb
rorb
ljmp
imul
les
leave
lret
and
inc
in
pop
mov
cmp
sbb
xchg
adc
cmp
pop
or
xor
lea
mov
and
clc
mov
and
adc
stos
and
push
outsl
pop
shrb
scas
jno
pop
mov
and
push
push
mov
jns
jle
sbb
das
arpl
leave
ds
aas
out
jno
mov
bnd
pop
cmp
xor
ret
sub
adc
or
nop
xor
adc
call
add
sbb
xor
dec
movsb
sbb
imul
ret
push
or
shrb
pop
mov
les
sbb
sub
lar
push
adc
pop
mov
outsb
in
sbb
push
or
pop
sar
mov
iret
shufps
fwait
jno
cmpsb
and
imul
lcall
aad
sbb
sub
and
dec
stos
pop
dec
cld
adc
test
xlat
loop
sub
shl
pop
repnz
xchg
rcl
addr16
call
adc
aaa
mov
pushf
imul
jbe
push
pop
negb
mov
jbe
push
icebp
enter
cmc
stos
inc
shll
xchg
and
cmp
sbb
and
xor
xchg
enter
sub
push
pop
ds
mov
adc
aam
sbb
xor
dec
mov
test
enter
jno
cmpsb
jge
loop
jb
add
aaa
inc
into
cltd
popa
sub
push
les
in
inc
add
loop
test
pop
ficompl
enter
jg
jle
mov
shlb
test
sub
addl
adc
nop
lahf
pushf
hlt
aaa
je
test
into
sub
lea
scas
cmp
std
loope
stos
pusha
movsl
imul
push
and
sbb
mov
lds
in
xorb
sbb
arpl
adc
sbb
sub
movzbl
cs
add
imul
jecxz
jo
out
pop
test
mov
out
repnz
das
les
std
and
jle
mov
mov
fwait
xchg
call
and
mov
jnp
fdivrl
inc
jl
or
sbb
or
jmp
mov
rclb
sbbb
pop
daa
mov
aas
xchg
sbb
popf
and
or
cmpb
cmp
push
or
clc
out
idiv
test
cmp
test
pop
xor
cmp
xor
std
inc
inc
fistl
outsl
jae
aad
ljmp
shl
lret
or
addr16
popf
rorl
dec
dec
cmp
xchg
aad
inc
cmp
mov
in
mov
mov
xchg
sub
jecxz,pn
loopne
xchg
jecxz
dec
jb
push
out
leave
sub
das
pushf
ds
adc
rorl
push
shll
outsl
stos
xchg
mov
mov
dec
int
push
in
mov
jmp
mov
aam
mov
add
and
mov
popf
pop
test
test
cmp
cmp
cmp
fildll
ficompl
pop
pop
mov
inc
stc
repnz
addr16
jecxz
xor
pop
xchg
sbb
scas
jb
inc
adc
xor
push
into
sbb
out
test
sub
lods
ret
aas
pop
lret
bnd
into
hlt
sbb
mov
cld
sahf
addb
mov
inc
mov
in
gs
sbb
clc
inc
push
push
xchg
nop
mov
shl
push
mov
loop
fidivrs
push
dec
inc
clc
push
cwtl
popa
mov
ret
in
out
stos
rcrb
mov
insl
aad
sbb
cmp
movsl
dec
mov
mov
flds
xor
cmpsb
addl
sub
pop
gs
call
xor
cltd
mov
mov
add
ret
inc
pop
les
inc
xchg
out
iret
xor
mov
js
push
inc
into
lods
or
lret
xchg
fwait
and
mov
mov
push
cmp
inc
loopne
ffree
pop
add
and
out
fdivl
or
adc
in
shll
pop
or
jae
cmp
sbb
cmp
lods
jo
or
mov
lahf
outsb
lcall
cli
add
jp
stos
or
add
jo
lock
inc
outsb
cli
push
adc
test
adcb
mov
xorl
fcoml
sarl
or
lds
mov
enter
cltd
cltd
negl
dec
jbe
adc
out
add
movsb
stc
add
xor
mov
sahf
fidivrl
mov
cmp
and
xor
stos
dec
inc
adc
filds
or
je
xor
les
and
imul
stos
out
and
rolb
push
fmull
fbld
divb
xor
clc
xor
idiv
lock
sbb
jno
int
in
jno
inc
jbe
mov
movsl
jl
ss
cvtdq2ps
movsl
in
xor
push
stc
addr16
sub
fsubr
dec
mov
inc
and
lods
cmpsb
cmp
repz
pop
cmp
lock
mov
fisubrs
lret
sti
leave
stc
inc
mov
insb
cmc
xchg
push
inc
mov
add
cmp
xor
comiss
rclb
andl
or
mov
loope
cmc
js
sbb
test
divb
pop
inc
movsl
add
pop
and
loop
aad
fbstp
arpl
add
mov
and
xchg
add
mov
jge
push
test
pusha
xchg
dec
xchg
inc
shlb
addb
out
cwtl
je
cmp
cs
sub
imul
jecxz
mov
mov
dec
add
pop
rclb
sub
dec
xchg
jb
adc
push
and
fadds
inc
lcall
pushf
jmp
cmp
in
and
cmp
jmp
jne
pop
pop
pop
xlat
sub
adc
cltd
push
push
fldt
inc
mov
idiv
orb
xchg
popf
jecxz
sub
rcl
mov
cmp
jae,pt
sbbl
adc
cmpsb
addb
add
cmp
dec
pusha
or
arpl
pop
xchg
pop
sti
cwtl
xor
pop
push
adc
adc
into
stc
pop
add
mov
repnz
push
pop
cmpsl
cmc
mov
fidivs
scas
mov
hlt
outsb
pop
aam
movsb
movnti
shll
jl
fdivp
add
pop
rol
and
in
mov
pop
imul
push
std
pop
std
dec
movsb
insb
adc
jb
jae
lret
inc
lea
pusha
es
clc
jb
xor
pop
insl
in
aad
jp
inc
es
jns
jns
adc
push
in
jge
jg
jno
dec
movl
push
or
mov
mov
mov
jbe
xlat
les
add
or
sarl
repnz
sub
pushf
lds
fiadds
scas
pop
mov
loope
sub
pop
cmp
movsb
jno
dec
mov
lods
rolb
ret
sub
mov
ljmp
out
pop
mov
mov
inc
mov
jl
hlt
test
cmp
insb
data16
ss
cmp
add
std
icebp
cmp
cs
mov
jecxz
mov
inc
mov
mov
rcll
push
imul
adcb
add
aaa
pushl
lret
pop
inc
movsb
mov
cld
mov
pop
mov
mov
out
jge
xchg
hlt
mov
and
add
and
in
push
pop
fcom
clc
sub
xchg
clc
iret
jp
andl
rcrb
adcl
out
sbb
pop
notb
add
xlat
and
loope
loopne
push
jnp
inc
nop
mov
push
test
mov
pop
mov
add
je
stos
mov
xchg
ret
add
pop
popf
jae
loop
pop
xchg
cli
sbb
bound
je
mov
orl
test
stc
leave
pop
adc
inc
lods
ret
sbbb
pop
loope
cmp
dec
inc
push
mov
push
xchg
and
or
icebp
mov
hlt
pop
pop
mov
cld
in
fadds
sbb
push
cmp
repz
or
in
or
xchg
inc
sub
adc
add
test
arpl
or
jle
cmp
adcl
jecxz
add
mov
sbb
int3
pop
sub
cmpl
orl
xor
jle
xlat
jmp
mov
mov
lock
cld
scas
test
sub
jl
sub
mov
xor
dec
pop
fs
pop
push
mov
rorl
xchg
mov
mov
pop
fistl
adc
testb
lret
dec
mov
imulb
call
test
sub
in
and
xor
xor
shlb
call
imul
sarl
dec
addr16
mov
jno
inc
insb
fsubrs
subb
ret
adc
lret
adc
fldenv
adc
xchg
cmp
xor
loope
cmpl
ret
fwait
dec
cmp
pop
je
ret
aas
lock
pusha
mov
cwtl
faddl
mov
stos
pop
push
jns
pop
stos
pop
pusha
or
xor
add
fnsetpm(287
inc
call
lds
aaa
insl
dec
mov
bound
loope
jb
jmp
pushf
push
sub
add
push
cltd
jmp
aas
in
cmpsl
mov
and
mov
sahf
aad
sti
ljmp
add
lret
sti
mov
adc
cltd
xchg
mov
mov
inc
add
sub
lods
push
data16
adc
repnz
adc
sahf
lcall
xchg
xor
in
add
mov
mov
mov
mov
aas
xor
cmp
movsl
xlat
dec
call
dec
cmp
mov
and
insl
in
push
bound
outsb
cld
jmp
add
es
mov
jle
push
or
movsb
or
cmc
inc
xchg
nop
dec
sub
je
pop
adc
jl
out
jp
ds
sub
scas
inc
fimull
leave
mov
xchg
sub
leave
ja
scas
imul
xchg
popa
test
nop
mov
fistpll
dec
adc
jle
mov
mov
mov
jne
and
sbb
xchg
lds
mov
popf
xchg
xor
dec
out
mov
jle
rolb
lds
stos
sub
test
mull
xor
mov
mov
in
jle
das
fsubr
lods
std
dec
mov
popf
aam
js
mov
pop
arpl
je
sbb
dec
cmp
sub
ficomps
inc
xchg
xchg
ljmp
xor
and
xchg
hlt
adc
jg
in
jecxz
fs
mov
stos
xchg
movsl
cmpsl
jle
icebp
scas
pushf
adc
loope
and
push
data16
pop
adc
loope
adc
sbbl
rclb
sub
fs
out
mov
mov
push
fcomps
fisubrl
sub
stc
iret
int
sub
cmpsl
xor
sbb
sahf
imul
xor
cs
mov
popf
pop
pop
sbb
pop
mov
mov
inc
or
out
adc
cwtl
rorl
outsb
mov
pop
lock
in
loopne
push
mov
mov
jp
test
sbb
out
cld
fldt
stc
cmc
sar
pop
mov
jge
in
pop
lea
sbb
push
dec
or
and
and
dec
ficoms
movsl
xchg
fs
sub
fs
fisttps
movsb
xchg
testb
js
mov
jl
add
xchg
movsb
ja
xchg
dec
sahf
cli
push
bound
mov
repz
adc
push
sti
cmp
cs
cld
call
cmpsb
in
xor
push
push
dec
push
or
aam
push
imul
jg
and
sbb
jo
sahf
adc
or
jmp
jecxz
roll
and
inc
inc
jbe
pop
int
or
es
push
sbb
adc
insl
cmp
test
push
jb
repnz
lret
cmpb
scas
xor
add
push
push
lcall
xor
jecxz
add
sahf
sbb
in
cld
icebp
in
sbb
rolb
mov
aad
std
cmp
jecxz
imul
pop
and
and
in
imul
adc
popf
xchg
inc
jns
in
iret
lock
push
or
cmp
fcomi
mov
jno
xchg
inc
dec
mov
call
notb
cmp
mov
push
rcrl
mov
or
stc
push
push
xor
ljmp
adc
inc
es
mov
and
lods
mov
adc
dec
push
mov
mov
imul
leave
ret
jp
cmp
lods
mov
xchg
cwtl
jne
pop
dec
and
dec
mov
test
lods
aad
jge
clc
mov
les
shrl
mov
pop
repz
inc
mov
push
into
cmc
inc
test
pop
pop
stos
ret
stc
ljmp
clc
xor
fnstcw
push
cli
pop
cmp
sub
cltd
cld
jle
inc
xchg
mov
jae
xchg
sbb
lcall
xor
loop
aam
bound
dec
xor
dec
in
rol
mov
xchg
dec
push
pop
jl
aaa
ss
in
or
fwait
push
das
test
aam
xlat
jnp
iret
push
push
push
xchg
sbb
mov
nop
hlt
inc
cld
jp
sahf
lock
xchg
adc
test
inc
cltd
test
push
popa
pop
add
stos
outsb
or
xchg
mov
adc
idiv
dec
inc
xor
lock
ret
dec
xor
jmp
inc
dec
dec
fs
xchg
inc
imul
leave
jp
dec
cmp
adc
mov
add
add
inc
ss
aaa
iret
inc
fimuls
and
loop
jno
mov
std
pop
loop
cltd
scas
ror
adc
pop
lret
dec
cmp
inc
mov
ja
push
imul
xor
mov
sbb
cld
mov
cs
cmpb
ret
push
lea
mov
lods
push
jnp
int3
out
xchg
add
adc
xchg
mull
ret
movsl
rclb
jg
pop
outsl
je
fimull
rcr
sub
dec
mov
xor
xchg
and
inc
mov
ss
pop
pop
mov
stc
mov
fistl
mov
or
mov
jle
push
add
daa
sbb
lret
inc
add
adc
sub
mov
popf
iret
mov
or
imul
cmp
mov
lods
into
add
movsl
dec
fisubs
out
sti
pop
push
push
add
and
dec
cs
cmp
sahf
out
add
dec
or
cmpsb
cwtl
stos
gs
jae
test
repz
jne
enter
roll
push
insl
add
fstpl
test
insl
in
cmpsl
das
jno
scas
xor
lret
jmp
arpl
add
xchg
lods
sub
lds
and
dec
fs
mov
push
and
ja
xchg
divl
mov
or
mov
jecxz
and
pop
iret
pop
jnp
sbb
outsl
sbb
jge
fiaddl
lods
icebp
mov
repnz
sub
fisubs
pusha
mov
or
or
ret
arpl
sub
inc
add
in
push
pop
pop
xor
mov
mov
ds
cld
jns
sbb
ja
pop
cmp
test
pop
test
mov
mov
xor
inc
aad
xor
cmpsb
sti
fdivs
lods
out
test
loopne
push
sbb
pop
jmp
cmp
andb
mov
iret
jns
adc
insb
adc
cmp
jo
jne
add
scas
aam
dec
ljmpw
mov
fimull
mov
sub
push
scas
clc
sub
das
in
xchg
dec
jnp
pop
or
imul
push
daa
shrb
add
dec
out
inc
inc
hlt
popf
dec
jne
jbe
jno
mov
fcompl
lret
or
ret
push
sbb
imul
pop
and
enter
jnp
into
outsl
lret
dec
xor
fmul
inc
leave
lods
xlat
stos
or
or
subl
movsl
pop
jg
xchg
rorl
dec
in
pop
adc
adc
push
test
aas
fwait
nop
aaa
xor
shlb
icebp
lahf
nop
les
pop
lret
jno
aam
mov
fcoml
mov
pop
cltd
fdivrs
pop
pop
sbb
or
cs
stos
and
push
fcoml
fwait
inc
pop
cmpsl
repz
dec
jg
repz
cmp
xchg
lcall
cmpsl
mov
push
pop
lods
es
gs
or
pop
fadds
scas
into
dec
dec
pop
loop
jb
add
in
dec
sbb
lcall
dec
pop
sbb
inc
test
insl
movsl
fistpll
fnsave
pusha
fsts
test
mov
int
inc
xchg
dec
jb
jb
das
push
flds
jl
int
stc
pop
push
sub
sbb
xor
mov
cmp
loopne
scas
inc
add
movsl
daa
iret
cmp
jg
je
inc
pop
sbb
js
mov
mov
rcrb
push
shll
mov
leave
mov
es
add
jmp
nop
dec
ret
cmpxchg
mov
xchg
cmp
out
mov
inc
shrl
mov
inc
mov
out
mov
pmulhuw
dec
push
sub
cwtl
dec
lahf
test
push
orl
adc
inc
push
mov
fcom
popf
cmc
mov
xor
inc
adc
fnsave
xchg
xor
cmc
aaa
shl
data16
mov
pop
cmp
dec
jns
repnz
dec
or
inc
stos
andl
adc
dec
scas
xchg
int3
xchg
pop
cld
pop
test
insl
jno
pop
cmp
dec
jle
pop
sbb
cltd
mov
inc
in
or
dec
jo
out
add
sbb
icebp
pop
int3
hlt
cmpsb
pop
push
mov
xor
cli
mov
jo
imulb
pop
out
test
sbb
sahf
clc
cmp
add
int3
jns
mov
mov
in
ret
or
lods
loop
push
nop
ficompl
and
pop
push
leave
dec
in
stos
push
lods
outsl
sub
loop
mov
aam
pushf
xchg
lods
or
add
pusha
jnp
insb
out
testb
sbb
dec
cmpl
and
push
fsubrl
jp
fwait
ret
imul
jmp
push
push
push
mov
into
ret
or
movsl
int3
out
outsl
mov
enter
inc
cmp
cmp
out
push
out
or
mov
fstpl
xchg
icebp
mov
mov
int3
test
test
xchg
pop
sbb
in
xor
jecxz
aam
pop
in
inc
fistpl
dec
std
mov
mov
xchg
lret
sbb
dec
into
in
fdivrl
repz
dec
repnz
into
movsb
adc
jl
mov
dec
icebp
aaa
pop
and
mov
push
xchg
sbb
cmp
adc
inc
and
mov
add
add
mov
enter
aaa
cmp
adc
fadd
xchg
add
lcall
jne
add
and
out
cmp
sahf
cmp
sub
sahf
sti
add
xor
insb
cmpsb
jp
sbb
cli
call
push
mov
push
and
aam
mov
xchg
mov
fmuls
sbb
aas
dec
pop
jno
cmp
jg
incb
mov
mov
sbb
or
sti
mov
or
mov
in
jmp
outsl
inc
in
cmp
nop
sahf
ljmp
jl
test
popf
push
sub
or
lahf
push
pop
arpl
sub
push
out
mov
movsb
sub
das
rorb
add
out
loopne
fisttpll
mov
push
gs
outsb
push
aam
ret
test
int
mov
sub
stos
lods
add
jmp
repnz
mov
ss
mov
sbb
adc
adc
push
or
cmp
scas
mov
push
hlt
andl
pop
pop
cmpsl
adc
mov
adc
sub
xor
adc
aad
ret
movsl
and
fbstp
lcall
stos
adc
cmp
subb
mov
fwait
or
outsb
sub
icebp
int3
subb
cmp
adc
outsb
or
xor
pop
sti
push
cs
xchg
or
test
bound
or
subb
xchg
stos
fistpll
xchg
shl
adcb
mov
and
sbb
and
and
arpl
pusha
mov
ljmp
fisubs
push
inc
movb
fldt
mov
lcall
sub
outsb
leave
ss
sub
jne
loope
mov
loop
addr16
arpl
push
mov
sub
jg
push
iret
xor
mov
xchg
jg
inc
and
xchg
dec
movsl
lret
cmp
scas
mov
mov
push
push
test
out
sbb
xor
cwtl
xchg
and
jne
xchg
js
loope
cli
sub
push
mov
add
nop
inc
xchg
ljmp
inc
movsl
and
inc
test
out
xlat
pop
xchg
aaa
mov
and
lret
hlt
je
inc
aad
hlt
pushf
mov
out
and
iret
xchg
sub
mov
pop
mov
sub
mov
xchg
enter
add
faddl
inc
lods
sbb
sbb
iret
add
push
jb
mov
out
push
xchg
inc
or
xchg
mov
adc
sub
shrl
mov
sub
pusha
int
pushf
loop
sub
test
or
movsb
xchg
sbb
clc
imul
sbb
sub
inc
jl
std
push
mov
data16
sub
loop
cmc
push
add
xchg
rcll
xchg
sub
xchg
lods
mov
pop
cmpsl
dec
in
xchg
daa
xchg
push
rolb
inc
mov
rorl
stos
inc
in
es
push
test
push
rorl
sub
jb
lcall
jl
pusha
iret
and
cmp
mov
nop
sub
int3
or
adcb
lahf
dec
dec
inc
adc
in
pop
or
mov
pop
sub
in
test
xchg
pop
loopnew
cltd
loope
enter
xor
test
fwait
dec
stc
mov
or
sub
mov
fldl
addr16
inc
ret
dec
add
lret
pop
sub
in
pop
inc
ret
ret
test
test
dec
movsl
je
or
test
or
sbb
mov
mov
out
out
pop
ss
sbb
sbb
mov
roll
xlat
rolb
outsl
lock
jmp
lods
inc
decl
jg
fdivp
jp
nop
cld
fwait
cmpsb
jg
mov
sub
mov
inc
cmp
movsb
jae
imul
pop
lret
jno
sub
popa
popf
push
jo
fisttpl
adc
sahf
rclb
aaa
xor
pop
mov
xchg
mov
dec
mov
jg
fiaddl
popf
call
xchg
enter
xchg
or
inc
push
dec
ret
push
add
and
popw
imul
imul
cmp
cli
clc
insl
rorl
lods
pop
jae
push
jmp
cmp
fwait
adc
sub
mov
add
ds
adc
sub
nop
mov
and
mov
jne
inc
xor
outsl
pop
adc
aad
cmp
cmpsl
movsb
and
jl
push
leave
popa
sbb
cmc
dec
mov
xchg
cmc
adcl
das
mov
mov
pushf
mov
outsb
mov
adc
leave
pushf
mov
cld
xorl
into
lock
das
bnd
xchg
test
cmovge
mov
xor
fisttpll
pop
xor
add
mov
jb
pop
push
call
push
outsb
lea
adc
repz
jno
aaa
cmpsb
inc
shlb
arpl
mov
out
aas
cmp
scas
mov
sbb
negl
aas
xor
mov
push
push
cmp
in
push
mov
in
dec
in
out
into
pop
mov
pop
jecxz,pt
decb
sbb
xor
jmp
pushf
push
xchg
incb
or
mov
push
and
xor
push
enter
or
xor
or
mov
test
pop
pop
inc
in
adc
jecxz
lea
xchg
loopne
push
lods
lret
rclb
xchg
int
sahf
sbb
jg
iret
ljmp
das
insl
push
lret
add
fs
push
repnz
mov
movsb
rcr
testb
inc
cltd
sbb
push
outsb
fildl
test
adc
testl
inc
jge
in
dec
jecxz
sbb
mov
shrl
ja
sub
fnsave
fisttpl
clc
jp
sub
daa
orl
movsl
insl
or
testb
inc
add
mov
pop
lahf
stos
xchg
mov
data16
ds
fistpl
pop
adc
pop
xchg
xchg
jle
sbb
jg
push
sub
cmp
clc
inc
mov
mov
and
outsl
pop
cltd
pop
and
pushf
mov
xchg
adc
decl
pop
icebp
cwtl
mov
sub
cltd
lock
xor
fldt
or
lahf
repnz
mov
mov
add
ljmp
add
inc
dec
mov
sbb
mov
push
jl
jns
and
aad
rclb
and
loop
cmp
enter
adc
aam
xlat
out
push
repnz
rolb
dec
mov
pop
imul
loope
test
sub
and
outsl
adc
xchg
xor
dec
jle
ret
sub
fbstp
pop
mov
out
pop
insl
js
adc
mov
sbb
mov
fst
xor
pop
stos
lds
dec
mov
and
test
adc
xor
lods
mov
enter
push
mov
dec
andb
push
pop
imul
jmp
jns
xor
lcall
mov
or
andb
inc
jno
push
pusha
std
lcall
loope
dec
cwtl
adcl
rclb
xor
pop
sbb
or
mov
popa
sahf
jae
popa
clc
mov
dec
hlt
adc
in
out
dec
pop
int3
inc
or
inc
xor
jle
add
cltd
pop
je
mov
mov
jmp
insb
fcmovbe
into
lods
pop
test
mov
gs
scas
xchg
sub
pushf
test
pop
lret
push
addr16
popa
add
sub
lds
lock
bound
lds
xchg
mov
or
test
sub
pop
dec
jmp
jmp
lds
cs
cmc
enter
stos
ret
mov
into
shll
inc
mov
cmc
jno
imul
cmpsl
popf
mov
jl
insb
jne
insb
push
and
repz
outsl
or
repz
lahf
shll
les
out
or
add
mov
faddp
add
out
add
pop
incb
int
jns
xor
arpl
scas
xor
and
push
lock
iret
and
dec
shll
add
inc
xchg
xor
push
popa
fldln2
arpl
ret
mov
out
int
cmp
mov
push
add
sbb
cmc
cmp
xchg
push
sub
xchg
in
negb
movsb
xchg
movsl
mov
out
dec
adc
mov
stc
dec
adcb
sbb
int
jnp
dec
pop
cmc
cli
mov
pop
push
sbb
sbb
dec
test
in
mov
push
scas
mov
or
pop
orb
push
dec
mov
ja
xchg
jno
lret
cmp
and
jnp
mov
push
inc
mov
xchg
fwait
mov
mov
lods
mov
or
mov
xchg
pop
push
cld
push
pusha
into
lods
call
mov
cs
xchg
leave
test
adc
incb
mov
inc
jns
movsb
cs
es
sub
sub
adc
jo
out
popa
in
mov
dec
jecxz
shlb
xor
jnp
and
mov
jp
pushf
add
lods
cmpsb
rol
mov
mov
cmp
das
clc
dec
fistl
popa
mov
test
loope
shrb
inc
jb
ret
clc
test
lea
mov
cld
jl
scas
pop
push
pop
inc
pop
pop
sahf
sbb
adc
xchg
andb
mov
cs
add
sub
dec
pop
jo
push
cli
or
jl
adc
pop
push
sbb
stos
in
and
arpl
sub
add
stc
push
mov
subl
pop
iret
ret
popf
inc
ljmp
push
push
inc
xor
daa
xchg
cld
sbb
xor
dec
mov
push
leave
xlat
cmp
mov
push
or
loope
nop
sub
sub
out
sbb
mov
mov
enter
mov
lea
cmpsb
pop
ljmp
call
loopne
fdiv
scas
dec
mov
push
lret
je
push
out
and
scas
push
call
enter
in
sbb
add
mov
push
xchg
push
fdivl
jns
fildl
xor
adc
arpl
mov
sti
fidivl
daa
cld
xchg
pusha
cmpsl
mov
mov
sub
mov
cwtl
movsb
sbb
and
popf
xor
or
loop
test
xor
ret
push
outsb
sahf
push
inc
pop
out
and
hlt
fsub
mov
scas
push
test
test
lret
fs
mov
cmp
xor
aad
repnz
fsubs
mov
cmp
outsb
enter
cmp
ss
push
inc
rorb
push
test
cmpsb
mov
push
imul
imul
sti
test
in
dec
jno
lret
cwtl
pop
mov
sub
fidivrl
loopne
xorl
xchg
adc
mov
repz
call
jnp
cmp
or
int
mov
push
add
fwait
or
or
and
aam
adc
push
push
push
mov
rcrb
pop
inc
mov
mov
inc
mov
out
cwtl
mov
push
sub
and
push
pop
xchg
xchg
stos
mov
fildl
lcall
add
popa
iret
in
xchg
enter
test
add
loopne
rcl
repnz
lock
cltd
mov
mov
sub
loopne
pop
pop
negb
inc
xchg
aam
push
sbb
sbb
and
gs
inc
js
push
mov
push
frstor
adc
es
cltd
add
and
xor
in
test
xchg
dec
jecxz
dec
scas
jae
std
idivb
test
sub
lahf
stos
mov
aas
add
jae
insb
sub
inc
in
repz
pusha
add
or
mov
xor
xor
test
nop
push
aaa
or
mov
out
adc
int
xchg
push
xor
dec
jae
ret
push
dec
clc
and
pop
jl
stc
fs
ds
and
lahf
jo
lock
ds
sbb
out
mov
adcl
les
add
or
hlt
sub
mov
xor
jno
lods
cmp
push
movsl
test
out
pop
inc
sub
pop
push
add
into
imul
push
das
mov
sbbb
rol
sbb
or
lcall
lds
arpl
sbb
cmp
and
sar
fnstcw
mov
lret
loopne
sbb
pop
popf
add
sub
mov
sub
xchg
mov
imul
lods
xchg
mov
repz
cmpb
jmp
jnp
or
daa
mov
data16
mov
pop
aam
jmp
sbb
ljmp
adc
mov
xchg
fsubl
push
test
test
add
insl
xchg
hlt
rorb
dec
test
xchg
cmp
dec
push
daa
or
xchg
mov
stc
mov
lods
in
test
aas
cmpsl
mov
in
mov
inc
aam
jle
add
insb
sbb
xchg
mov
popf
lcall
sub
gs
clc
test
sbb
sub
arpl
das
dec
cld
xor
or
xchg
xor
aaa
incb
inc
in
repnz
mov
push
fidivl
and
adc
repnz
cmpsl
push
jp
sub
push
sbb
pop
cwtl
out
stc
shrb
iret
mov
xor
stos
es
roll
aas
call
mov
in
or
mov
push
mov
pop
pop
xchg
inc
inc
cmp
mov
mov
jp
cmp
lock
xchg
add
mov
loopne
push
enter
sbb
shl
test
jecxz
xchg
xchg
js
int
ret
xchg
xor
stc
cli
ljmp
in
cmp
in
add
stc
inc
mov
fisubrs
mov
jnp
cmpb
pushf
push
das
nop/reserved
incl
sbb
jmp
div
les
lock
jg
jns
leave
or
bound
sahf
les
add
das
jge
lret
js
aam
sti
scas
push
mov
adc
imull
add
pop
dec
or
adc
mov
gs
jg
mov
insl
daa
jecxz
jae
pop
xchg
stos
sub
add
push
lods
ss
dec
lret
rolb
shl
push
lds
pop
out
lock
mov
and
sbb
xchg
cli
dec
mov
sbbl
aam
and
repz
mov
shlb
cmpsl
sbb
cwtl
pop
pop
jae
cltd
cmp
js
xor
add
and
lcall
leave
and
mov
mov
jae
ljmp
dec
mov
test
es
jae
lret
mov
mov
sub
inc
cmp
rcr
push
sbb
shr
adcl
ja
xchg
jnp
jnp
out
decl
push
scas
repnz
call
pop
int3
push
int
adc
inc
jge
mov
pop
stos
xchg
shlb
xchg
jg
ret
outsl
in
mov
jge
imull
mov
mov
pop
int3
jmp
xor
hlt
movsb
mov
push
cli
mov
call
sbb
dec
or
fbld
repnz
pop
mov
sub
mov
gs
stc
add
inc
add
roll
sbb
lcall
jmp
inc
stc
fsubrl
pop
dec
into
jbe
lahf
and
push
jecxz
in
addr16
sbb
jmp
ret
push
jmp
iret
jp
adc
aad
sub
pop
xchg
movsl
mov
cwtl
add
xchg
mov
clc
in
jae
ret
push
dec
movsb
mov
call
lea
jecxz
icebp
testl
dec
xchg
xchg
xchg
jne
and
jge
mov
lods
fld
xor
in
pop
mov
cld
fiadds
pop
cwtl
mov
out
cmp
xor
insl
std
insb
fbstp
fldcw
cs
frndint
jae
fadds
or
loope
or
das
push
inc
fcompl
xchg
lea
lods
ljmp
mov
out
dec
sbb
outsl
icebp
test
js
aam
jbe
xchg
mov
pop
outsb
in
cmp
xor
pop
pushf
adc
fmulp
insl
fwait
rorl
or
in
mov
hlt
dec
mov
adc
jnp
jp
cmpl
insb
fwait
cmpsl
add
pop
or
scas
jnp
lods
mov
cltd
lret
sarl
push
push
outsl
sub
lahf
shrl
adcb
cwtl
leave
pusha
and
test
mov
in
das
in
mov
and
mov
das
inc
push
cwtl
insb
dec
arpl
roll
pop
inc
cmp
fildll
jne
cld
inc
adc
mov
mov
fwait
pop
sbb
sbb
sar
mov
push
adc
and
adc
jno
data16
jecxz
das
mov
mov
mov
pop
mov
add
test
daa
sbb
sbb
sbb
cmp
sarb
sub
adc
dec
sysexit
sbb
xor
inc
lret
dec
imul
cli
cli
inc
scas
out
adc
mov
push
movsl
pop
adc
outsb
movsl
popa
shlb
imulb
jg
lahf
xchg
inc
dec
push
inc
shrb
sub
mov
js
scas
dec
jae
addb
dec
inc
ret
mov
adc
or
mov
pop
push
and
xchg
dec
and
or
lret
dec
mov
cmp
mov
fwait
idiv
js
pop
xor
loope
push
iret
out
adc
xor
addr16
in
dec
leave
ror
xchg
aad
insb
dec
push
loopne
push
outsl
push
cmpsl
jle
push
dec
dec
inc
mov
out
and
and
dec
dec
aam
fucom
and
xchg
rcll
push
in
scas
mov
sub
inc
xchg
stos
cmp
jg
movsl
dec
mov
push
cmp
arpl
pop
lock
pop
inc
pop
dec
push
mov
and
jns
mov
jb
insb
and
dec
fidivrl
inc
lock
mov
jae
scas
pop
xchg
xchg
cmpsb
nop
cmp
sub
icebp
push
lret
mov
sub
mov
push
xor
mov
xchg
xor
or
movsl
xor
subl
sbb
xor
or
test
fnsave
lods
cmp
adc
sub
lock
loop
aad
adc
add
mov
sti
xchg
insl
popa
ljmp
and
enter
test
aaa
add
ja
or
adcl
jge
or
daa
call
cs
les
pushf
add
or
in
mov
or
and
xor
jns
pusha
mov
gs
inc
loopne
cmp
mov
std
cmp
aaa
ss
fildl
bound
or
xlat
repz
jle
add
jg
arpl
imul
xchg
in
xchg
lds
sbb
stc
lock
or
scas
daa
adc
dec
adc
inc
es
pop
push
adc
jg
cmp
and
lock
jbe
adc
arpl
outsl
mov
fisubrs
mov
stc
push
in
movsb
and
push
imul
adc
daa
adcb
dec
fidivrl
aaa
push
mov
repnz
lret
sub
out
mov
xor
popa
pop
xor
push
mov
and
pushf
xchg
fistl
es
push
and
sbb
pop
lea
daa
data16
xchg
mov
jecxz
shl
cs
shll
insl
xchg
sub
mov
int3
jg
mov
lds
xor
xor
loope
fdivrl
mov
mov
xchg
jb
inc
or
int
mov
mov
in
jl
sub
loope
and
and
cwtl
dec
dec
pop
mov
cmp
ja
mov
repz
xor
sbb
daa
push
pusha
cs
sub
pop
xlat
es
dec
xchg
xchg
push
jae
insb
ss
ss
out
mov
sub
cmc
fldt
pop
and
rcll
xchg
xor
push
cmp
in
and
in
fstpt
dec
movsb
lret
mov
cltd
imul
daa
loope
sbb
mov
mov
mov
pop
gs
lods
pop
or
jl
lcall
cltd
ret
cmpb
test
sbb
adc
push
repz
aad
inc
add
mov
dec
je
cld
aam
out
pop
lret
inc
inc
sub
lea
cltd
aaa
mov
pop
mov
leave
xchg
icebp
jne
jae
xor
in
dec
mov
jb
das
pop
lods
repz
jmp
cmpsb
ret
pop
xchg
mov
xchg
mov
xor
xchg
sub
xchg
test
and
out
into
rclb
sbb
adc
and
or
dec
icebp
sbb
pop
fadds
out
and
and
andb
pop
int
cmp
add
into
in
cmp
icebp
mov
mov
out
jno
push
aas
divb
stos
outsl
pop
fucomp
or
jl
xor
cmp
xchg
xor
pop
cmc
adc
mov
ror
rorb
stos
jg
sti
jns
push
mov
cltd
addr16
scas
movsb
fisttps
mov
into
inc
push
xchg
std
rcr
das
mov
andb
sahf
push
cltd
frstor
mov
mov
loop
and
loop
repz
out
clc
ljmp
jp
and
mov
xchg
add
ret
dec
jae
xchg
lfs
xchg
rcll
jle
loopne
xchg
mov
sti
mov
testl
pusha
xor
sub
cmp
pop
mov
xchg
adc
dec
xchg
add
push
int3
imul
xchg
loope
gs
push
iret
inc
add
sbb
pop
int3
push
pop
pop
or
loopne
adc
mov
push
xchg
pushf
and
sub
sarb
push
movsl
hlt
dec
aaa
stc
fisubrs
scas
rcrb
jge
xchg
jl
insb
stos
xor
jo
sbb
loope
mov
ret
sub
dec
bound
cmc
loope
jnp
mov
add
jg
gs
dec
nop
ret
mov
pop
or
push
push
push
fcomps
push
xor
dec
mov
pop
arpl
sahf
push
gs
cmc
sub
mov
sbb
test
push
lahf
dec
adc
inc
fdivr
sub
cli
or
into
ds
xchg
fs
or
sahf
cmp
dec
add
jp
inc
leave
mov
push
sti
cwtl
ja
test
decb
mov
xlat
jp
popf
fiadds
arpl
push
in
ljmp
pop
cpuid
mov
pop
xor
push
decb
rcll
ljmp
mov
sbb
cltd
and
cmp
pop
fistpll
imul
and
and
andl
loop
mov
test
mov
xchg
jmp
push
pop
dec
sub
addr16
jg
arpl
js
in
ffreep
icebp
in
lret
inc
sbb
pop
lock
mov
call
or
sahf
push
ljmp
mov
xchg
push
sub
inc
and
mov
sarb
aaa
fcomp
pusha
ss
jb
ja
lock
sbb
in
mov
fstpl
inc
inc
xchg
xchg
test
lcall
add
mov
fldenv
jg
cmpb
mov
pop
mov
adc
pop
or
sti
pushf
jecxz
mov
inc
or
in
fsubrl
stos
sbb
jb
addr16
or
pop
push
inc
int3
inc
xchg
std
xchg
jae
roll
push
and
icebp
sbb
fimull
daa
and
push
insl
pop
je
xchg
hlt
les
add
adcl
les
mov
sub
pop
fsubl
out
loop
int
cmpl
xor
xchg
cmp
lds
ret
popa
mov
push
aam
jmp
fldln2
pop
hlt
push
push
fmull
pushf
sbb
pop
add
and
fcom
pop
lds
leave
cmpsb
subl
fdivrs
test
cmp
push
mov
addr16
jns
jb
mov
mov
xchg
test
and
lret
out
sbb
jb
sbb
xor
push
jo
test
jne
lock
insb
movb
cmp
adc
dec
sbb
cmp
popf
xor
sbb
xchg
pop
int3
jns
mov
call
insl
pop
into
sbb
mov
lds
sub
in
pop
pop
lahf
or
daa
push
jno
sub
sub
xor
mov
dec
rclb
cmp
add
pop
or
pop
enter
outsb
punpcklwd
adc
aad
cmpsl
gs
mov
arpl
jae
inc
xor
mov
sbb
dec
adc
mov
mov
cmovge
mov
fcmovbe
stos
push
inc
faddl
bound
or
lahf
rorl
mov
xor
cmp
loopne
pop
dec
fdivp
stos
out
adc
scas
xor
test
ljmp
xchg
xchg
xor
mov
fisubrl
out
jle
or
nop
out
xor
xor
ljmp
and
sbb
dec
inc
add
rcll
pop
or
mov
push
pop
lret
xchg
xchg
pop
stos
imul
pop
popf
cmpl
xchg
dec
cmpsl
nop
jnp
fbstp
popa
in
orl
into
xchg
lret
fwait
mov
mov
jno
jae
push
cmp
ret
std
xchg
jo
fs
adc
mov
shlb
and
into
scas
cmp
leave
sub
cmp
rcrl
fcomps
pop
inc
inc
hlt
adc
nop
rcl
jbe
dec
push
or
lods
dec
mov
cwtl
jno
fdivl
jb
test
loope
aaa
or
les
or
scas
arpl
inc
push
jmp
sub
or
inc
push
out
mov
pushf
imul
mov
mov
sbb
roll
jno
mov
lahf
and
xchg
push
outsl
ret
mov
cmp
mov
bound
mov
adc
call
mov
xchg
cmc
lahf
inc
or
ficoms
cwtl
clc
in
or
in
lahf
test
push
cmp
notb
push
adc
mov
mov
lcall
test
lock
sub
std
jp
stos
lds
xchg
out
ljmp
mov
iret
jae
mov
xor
inc
addr16
lea
pop
jg
push
cltd
testb
mov
gs
jbe
push
mov
push
stc
sub
mov
mov
push
cmp
rorb
fs
or
or
dec
je
jecxz
adc
pop
jbe
cli
add
or
add
jg
add
inc
cmp
add
stos
lock
andl
lea
nop
cmpsb
gs
ljmp
push
popf
es
in
or
lock
icebp
cltd
dec
test
mov
dec
adcl
dec
lahf
aam
adc
jo
lcall
test
fbld
add
or
adc
xor
aad
jo
mov
ljmp
in
and
jg
or
nop
pop
mov
jl
dec
jmp
loopne
sahf
dec
mov
push
sbb
pop
pop
bound
decb
out
add
fbstp
xchg
mov
xchg
data16
stos
adc
pop
mov
icebp
jb
cwtl
push
das
or
push
rcll
bound
sbb
push
aad
stos
or
test
cmp
push
jbe
mov
aas
pusha
sub
adc
push
sbb
lods
and
gs
ja
ja
ljmp
pop
nop
scas
mov
mov
inc
or
fs
pop
in
add
orl
xlat
outsb
or
aas
int
jns
cmp
aad
dec
aas
out
jns
imul
cmp
lcall
add
xchg
enter
cmp
div
jmp
adc
mov
outsb
out
outsl
xchg
imul
push
mov
mov
mov
xchg
aas
xor
push
stc
push
pop
cmc
xor
jne
sbb
lods
out
fsts
repnz
mull
in
pop
dec
xchg
mov
imul
and
loopne
les
shrb
popw
ffree
fsub
bound
add
fwait
lock
fucomi
dec
loope
mov
shrb
xor
xchg
insb
jne
test
shlb
cmp
cmp
mov
dec
pop
stos
mull
into
push
mov
pop
out
mov
xchg
jp
inc
add
mov
test
cmpsb
mov
into
leave
pop
mov
jmp
arpl
out
addb
repnz
out
jecxz
rclb
incl
xor
push
cmpsb
icebp
jge
pusha
in
adc
pop
daa
mov
mov
pop
pop
aas
stc
jae
sbb
sub
xor
and
pushf
jp
mov
xchg
sbb
xorl
shr
sahf
lea
pop
push
test
cmp
nop
fisttpl
mov
mov
cmp
adc
test
sbb
push
lods
cmp
test
mov
push
dec
scas
loope
subb
inc
jne
rorl
stos
xor
push
test
aaa
repz
repnz
jnp
hlt
lret
inc
out
mov
jl
lods
adc
mov
adc
rorb
push
mov
inc
mov
cs
lcall
imul
xor
sahf
adc
test
fwait
sub
pop
je
xlat
ret
pop
sub
and
rclb
incb
mov
data16
sbb
enter
adc
lahf
fidivs
and
mov
mov
jp
dec
stos
pop
fnstenv
xor
dec
and
dec
fs
cwtl
jle
pop
hlt
fwait
pop
nop
ds
and
and
jo
js
repnz
mov
push
pop
pusha
outsb
in
push
dec
sub
clc
ret
test
adc
cwtl
addr16
push
pop
or
mov
cli
pop
jecxz
inc
fmul
adc
xchg
mov
push
mov
das
pop
or
jnp
xor
pop
jmp
iret
rcll
lret
lret
lea
lods
jno
bound
test
sub
shrl
dec
and
dec
xchg
mov
gs
add
xlat
stos
movsl
jmp
imul
dec
push
sbb
fwait
ds
aaa
lods
orl
in
push
cmp
ret
loope
mov
call
fwait
or
cmp
lcall
and
adc
push
push
neg
mov
fs
cld
inc
mov
xor
cmp
test
mulb
call
mov
push
xchg
or
jae
lea
je
push
cmpsb
push
push
stos
outsl
shll
or
jp
or
test
and
inc
pop
out
mov
push
xchg
push
add
sub
fs
mov
shll
stc
iret
in
fistl
mov
movsl
frndint
pop
imul
sbb
pop
inc
arpl
bound
jmp
push
mov
in
in
loop
xchg
je
pop
jecxz
push
and
jmp
scas
dec
neg
sarb
out
push
lret
pop
bound
add
jae
pop
fimull
and
mov
sti
mov
dec
dec
push
test
fisttpl
imull
ljmp
popf
enter
fnstsw
es
adc
xchg
jmp
pop
in
push
ret
mov
mov
pop
adc
sbb
movb
add
inc
xor
cmp
dec
ret
push
inc
push
sar
push
or
std
ret
data16
jns
aam
mov
cmp
adc
mov
data16
cli
sbb
xor
xor
jg
je
idivl
insl
dec
stc
sub
filds
push
jp
or
sub
sarb
fwait
les
dec
xorl
addr16
roll
push
xlat
lret
cli
dec
cld
cmp
roll
pop
int
repnz
xchg
pop
dec
fnstenv
int
dec
insb
adc
and
pushf
jg
push
fiadds
shr
lahf
mov
or
dec
cmp
pop
pop
loopne
xor
inc
mov
mov
and
mov
push
in
sbb
ljmp
cmpsb
xchg
inc
push
pop
insb
mov
mov
xchg
ljmp
xor
jp
xlat
sarl
insb
mull
pop
jg
jmp
test
cmpsl
insb
das
ret
pop
loopne
adc
sbb
adc
cmp
or
psadbw
mov
xor
mov
insb
add
insl
xchg
jp
inc
fwait
lock
cltd
inc
cmc
jb
loop
ljmp
add
mov
leave
sahf
fdivrs
arpl
mov
sub
daa
icebp
js
jno
sahf
push
andl
sti
shll
xchg
add
push
cmp
mov
dec
mov
mov
outsb
lods
loopne
cmpsl
add
cmovne
stos
aam
hlt
out
pop
movsb
mov
mov
dec
jmp
outsb
in
jb
push
cld
inc
add
push
arpl
xchg
insb
mov
fdivrl
xchg
sub
mov
inc
dec
or
jle
jg
lods
mov
mov
cmpsl
jp
push
mov
push
call
iret
xchg
in
inc
pop
mov
out
pop
xor
dec
lret
jmp
into
pop
fisttpl
or
shlb
dec
scas
or
in
sub
cmp
cmpsl
out
push
es
jp
pop
into
jnp
sub
push
popf
fistl
mov
and
add
call
add
in
movsb
and
sahf
dec
out
pop
dec
gs
and
and
mov
push
xchg
shrb
sub
pop
cmp
clc
dec
popa
jecxz
cmp
int3
pmuludq
and
inc
addr16
cwtl
in
sbb
rolb
popa
inc
shlb
sub
xchg
mov
mov
xchg
jge
cli
stos
pusha
or
xchg
mov
subl
lcall
sub
pop
call
out
data16
dec
fstpt
jp
mov
push
push
jno
fldcw
fs
fisttpll
not
mov
mov
adc
and
xchg
mov
mov
and
in
movsb
call
lcall
push
icebp
popa
or
lods
dec
xor
sbb
pop
dec
xor
xchg
add
stc
pop
cs
cltd
inc
pop
repnz
add
push
jge
and
rcrb
xor
sbb
ljmp
dec
arpl
mov
js
sub
je
orb
fwait
aaa
mov
pop
xor
loop
sub
mov
out
test
or
dec
shlb
xor
ret
dec
jnp
cmp
pop
or
xchg
adc
cld
mov
movsb
sbb
xchg
sub
and
lcall
scas
dec
add
pop
xchg
lcall
fucomip
mov
xor
jb
test
repnz
aaa
push
pushf
stos
adc
add
jle
shrb
jnp
xchg
mov
push
push
scas
icebp
sbb
xor
sub
pop
or
add
aad
pushf
addr16
dec
mov
lcall
jmp
insl
inc
loopne
or
pop
mov
out
clc
sbb
add
outsl
inc
enter
movsl
sub
push
cmp
inc
in
mov
push
xchg
and
mov
shll
mov
push
ret
int
jg
push
xchg
push
xchg
sbb
popf
int
pop
xor
xchg
mov
cmp
cmpl
cmpsl
rolb
mov
ficoml
xor
mov
add
cmpsl
adc
cmp
ret
xlat
push
stos
mov
push
pop
pop
add
xlat
fsubr
add
sub
sub
mov
pop
es
xchg
lock
cmp
inc
mov
call
lock
gs
scas
fidivl
jnp
mov
test
ret
shrb
xchg
or
cmp
stos
repnz
push
ljmp
aaa
dec
rcrl
loop
icebp
js
les
dec
and
xor
out
mov
mov
ds
lret
or
mov
lea
mov
into
frndint
ret
mov
inc
int
sub
shlb
pop
sub
adc
pop
insl
sbb
test
out
jecxz
test
outsl
dec
ja
mov
sub
jmp
push
stc
popa
mov
and
sarb
movsl
cmp
rcll
sub
jae
bound
scas
fcmovu
and
dec
xchg
cwtl
sub
shlb
lock
pmaddwd
mov
adc
mov
insl
push
pop
scas
out
jp
push
xchg
mov
jmp
fwait
or
inc
loope
sbb
mov
adc
hlt
fwait
call
xor
js
cli
xchg
int
mov
mov
bound
mov
mov
adc
repz
and
sub
subb
push
inc
fidivl
inc
lcall
mov
addr16
in
mov
adc
and
or
push
imul
xchg
cmp
clc
outsl
xchg
xchg
jmp
push
loope
je
jno
and
inc
or
repnz
mov
mull
adc
xchg
out
adc
fistpll
cmp
or
dec
lock
stc
mov
push
sub
mov
jmp
jnp
mov
hlt
cld
push
loope
js
adc
xlat
clc
lret
shrb
mov
es
push
daa
sahf
fnstcw
outsb
dec
adc
imul
outsb
stos
inc
dec
punpcklbw
add
lock
orb
and
out
icebp
dec
xchg
cwtl
and
inc
popa
lds
mov
int3
mov
sbb
cs
xchg
das
xchg
inc
mull
mov
push
cmp
test
std
add
mov
insb
adc
jecxz
add
aam
mov
call
cmp
je
cli
mov
stc
out
dec
fwait
jp
mov
ret
call
lret
mov
jp
call
loop,pt
xor
jecxz
sub
xchg
nop
lea
jmp
pop
xor
cvtpi2ps
mov
test
gs
pop
jne
ja
jo
sar
jmp
mov
mov
roll
jecxz
adc
cmp
aas
dec
outsb
nop
in
mov
inc
popf
xchg
cmp
pop
jne
nop
shlb
loopne
popa
out
stos
sub
xor
loop
mov
sub
mov
ret
pop
sbb
stc
int
sub
cwtl
add
pop
nop
lods
repz
popf
push
cmp
xchg
push
loopne
pop
lahf
push
fldcw
or
or
xor
out
add
aaa
inc
and
int3
and
leave
repz
xchg
and
mov
jnp
js
mov
adc
jo
pop
loopne
scas
lods
lahf
push
sbb
sbb
pop
cmc
sub
adc
inc
xchg
mov
mov
adc
cltd
push
mov
pushf
in
cli
out
arpl
cld
push
arpl
repnz
adc
lea
mov
cli
cmp
imul
add
fcmovne
movsb
jecxz
movsl
sub
pusha
fcmovu
fnsave
jne
xchg
cld
mov
ljmp
std
xor
jle
movsb
cs
and
stc
stos
jne
scas
fwait
lret
xor
enter
xlat
cmp
xchg
xchg
jae
jb
leave
jg
sbb
mov
cmp
mov
mov
or
and
addb
cmp
cld
stos
pop
xor
lods
int
mov
xor
aad
adc
mulb
mov
ret
cmpl
popa
mov
dec
lret
sti
iret
mov
mov
cmp
ret
xchg
rcr
push
pop
mov
das
pop
dec
lret
add
adc
scas
sbb
popl
or
shl
push
cmc
pop
jne
pushf
pop
aam
addb
xchg
or
mov
mov
lret
pop
sbb
mov
gs
out
pop
in
mov
ljmp
cld
pushf
aam
aas
inc
divb
add
pushf
jge
mov
ljmp
cmp
xor
push
dec
cli
sti
jo
lahf
xor
out
jmp
sbb
rcll
and
idivl
pop
xchg
adc
jae
mov
arpl
add
dec
xchg
sub
ret
sbb
dec
mov
mov
loope
cs
pop
fistps
insb
inc
lahf
sub
dec
or
arpl
adc
cmp
mov
lret
cmp
mov
cs
addl
enter
dec
bswap
cs
xor
jno
mov
sub
pop
loope
out
lcall
andl
mov
imulb
xchg
aam
test
shll
mov
dec
xchg
lret
subl
xchg
push
sbb
inc
xchg
into
inc
xchg
cmp
movsl
jb
xor
roll
nop
mov
stc
outsl
imul
push
std
mov
pop
test
push
push
inc
cltd
cltd
ret
pop
pop
leave
or
sbb
pushf
test
pop
mov
sub
fistps
jecxz
lcall
push
and
orb
mov
in
jne
aad
xlat
mov
nop
pop
sahf
sbb
in
scas
in
loop
arpl
bound
int
ret
aam
inc
addr16
inc
jne
std
add
ljmp
xor
and
push
test
push
sti
or
xor
pop
pop
out
cmp
pushf
orb
leave
bound
shll
sub
lahf
push
mov
cmp
int
lcall
or
ds
and
push
push
inc
dec
lret
in
jb
cli
jg
aad
idivl
imul
popf
push
push
inc
enter
inc
repz
mov
negl
insb
aam
fs
cmp
orb
movsl
lds
js
and
pop
loope
jmp
jle
pop
dec
add
jnp
insl
sarl
sub
pusha
test
xor
jns
xor
in
call
pop
lret
pop
mov
jle
sbb
testl
aam
iret
cmp
sub
push
push
mov
std
cli
fistpll
pop
inc
imul
test
push
insb
sbb
fwait
xchg
out
out
sub
push
xor
loope
iret
mov
push
outsb
bound
mov
test
xchg
pop
iret
add
xchg
ljmp
adc
stos
adc
outsb
mov
dec
xchg
int3
js
or
int
cmp
addr16
clc
lds
jp
cld
add
lahf
xorb
push
add
xchg
fisttpl
inc
int
inc
fistps
ds
push
sbb
adc
dec
std
mov
add
repz
xchg
shrb
addb
add
jns
pop
fnstenv
or
xchg
shll
nop
mov
ficomps
xor
adc
outsl
test
xor
iret
xor
jge
outsl
xor
js
lahf
sub
into
dec
and
mov
xorb
inc
arpl
and
cs
out
jl
dec
filds
adc
pop
mov
movsb
shrb
push
pushf
es
in
mov
scas
jge
pop
push
cltd
jmp
nop
das
add
fistpl
lea
lret
jne
negb
or
repz
fsubrs
mov
imul
outsl
mov
jnp
and
sahf
dec
xchg
rcl
adc
mov
inc
ficoms
hlt
out
lock
mov
mov
cmpsb
fistpl
xchg
je
sbb
pop
pushf
out
cmc
sbb
sbb
mov
dec
cltd
addr16
add
jecxz
push
mov
ja
or
dec
stos
fstl
xchg
inc
in
pusha
stc
movsb
nop
mov
dec
imul
cmp
test
imul
aad
sub
push
pop
icebp
hlt
int3
ja
das
pop
jge
in
je
enter
push
loope
je
sbb
ret
mov
push
mov
jb
stos
out
mov
adc
out
adc
adc
adc
mov
sbb
sub
mov
icebp
sub
push
leave
adc
popa
insl
popf
lahf
adc
mov
js
out
mov
loop
test
ss
sbbb
pop
jmp
lods
lea
rorl
jge
dec
jge
inc
fidivs
loopne
or
loop
sbb
push
push
adc
mov
cmpsb
adc
fldl
ficompl
shll
pusha
mov
mov
hlt
push
ret
jle
jl
outsb
xchg
jo
and
mov
ja
add
es
jecxz
lods
xchg
jo
jp
push
in
xchg
daa
popa
and
pushf
mov
jl
push
push
data16
sub
int
xor
hlt
clc
mov
lods
mov
adc
jg
lds
fucomp
cmpb
push
lds
sbb
inc
mov
insl
addr16
cmp
fs
cmpsb
xchg
mov
mov
cmp
std
in
lock
mov
jns
daa
ljmp
push
push
test
inc
sbb
pop
shr
daa
jl
jg
lahf
push
and
dec
adc
inc
fwait
sbb
cmp
inc
jecxz
cltd
jae
push
mov
cmp
cmp
ret
outsb
push
jge
das
fisubrs
sahf
in
mov
ljmp
lock
in
push
out
adc
xor
stos
fstpt
sbb
sbb
test
or
data16
dec
int
repnz
fstps
pop
mov
mov
push
lock
ret
mov
add
cmovns
ffreep
cmp
test
mov
fs
stos
push
jecxz
mov
add
scas
xchg
mov
dec
cmpsb
mov
xchg
sti
inc
loop
xchg
inc
inc
nop
fildll
xor
bound
cmp
test
jge
es
int3
popa
imul
add
mov
fidivrs
xchg
loopne
mov
in
mov
dec
pushl
jmp
arpl
fdivs
pop
in
sub
push
and
dec
cmp
out
mov
lods
imul
out
and
mov
in
or
cltd
and
mov
push
ss
add
or
iret
sub
add
jno
push
pop
mov
add
adc
pop
push
sbb
pop
and
push
fcoms
cld
out
xchg
loopne
add
shll
mov
add
call
jno
xor
shll
xor
and
xlat
outsl
adc
mov
mov
insl
jge
adc
imul
mov
mov
push
xchg
lret
nop
fdivr
imul
pop
xor
cwtl
stos
les
mov
les
les
bound
adc
adc
push
aam
mov
add
push
xor
jbe
dec
scas
arpl
push
dec
mov
in
out
ret
daa
adc
jo
pop
cld
fs
inc
aaa
std
xchg
test
stos
insb
xor
lods
cwtl
movsb
fdivs
or
inc
pushf
inc
xchg
scas
mov
inc
cmp
movsb
jns,pt
xchg
imul
in
jg
fwait
mov
je,pt
pop
add
cmpsl
cmpb
pop
in
stc
and
fsts
and
dec
mov
sbbl
cli
pop
push
dec
xchg
sbb
dec
aaa
mov
lods
mov
fistpll
mov
dec
sub
push
inc
mov
inc
jbe
sub
xchg
testb
out
mov
js
in
push
mov
xchg
fabs
xor
mov
mov
adcl
jno
add
shlb
fisttps
imul
jnp
repnz
imul
fildll
sub
mov
ret
add
inc
js
push
mov
sub
mov
and
mov
lods
pop
ja
xchg
xor
mov
inc
sbb
adc
jp
dec
stc
pop
call
pop
xchg
adc
stos
push
jbe
xorb
imul
aas
mov
sti
and
cli
pop
sub
lods
imul
sahf
dec
and
testl
mov
aam
jmp
push
push
popa
pushf
push
adc
xchg
xor
sub
jbe
push
mov
mov
cwtl
cmp
push
lods
aad
mov
imul
pusha
mov
xor
xor
jp
mov
fcompl
es
mov
enter
xchg
leave
mov
or
pop
mov
ss
mov
cs
push
mov
test
inc
xor
insb
arpl
jb
mov
stos
mov
es
addr16
lock
loope
push
fsubs
dec
aad
sbb
add
iret
mov
push
stc
inc
testl
repz
cwtl
pushf
repz
or
call
jle
mov
ja
inc
fsubrl
mov
add
popa
push
mov
mov
and
xor
mov
cmp
dec
add
sub
roll
xorl
cltd
repnz
in
daa
out
pop
sbb
cmp
popa
pop
jl
add
jge
arpl
xchg
outsb
das
aaa
push
in
jbe
xor
test
fwait
mov
lods
mov
sahf
mov
mulb
dec
push
fmul
cs
mov
mov
jne
imul
mov
gs
int
jl
mov
jp
lods
sbb
cli
jg
pop
dec
cmp
adc
andl
cmp
xor
enter
and
test
pusha
out
pop
out
fistps
mov
mov
sub
pop
test
shll
scas
mov
cli
scas
lock
pop
mov
les
push
add
mov
lahf
mov
sbb
sarl
int3
mov
out
icebp
add
jmp
testl
mov
test
outsb
es
stos
push
shlb
stos
push
ja
xlat
or
lret
lret
loopne
and
clc
xorl
inc
mov
push
mov
je
xor
mov
mov
sbb
lock
mov
int3
aad
fstps
popf
mov
adc
cmp
or
cli
cwtl
mov
mov
pop
jecxz
push
cwtl
cmc
pop
sbb
pop
bound
ljmp
stos
cmpsb
fstpl
sar
repz
stos
pop
mov
jno
imul
jo
mov
pop
xor
jno
outsl
popf
xorl
leave
mov
jnp
xor
popa
cmp
jae
stos
jge
insl
mov
imul
push
push
pop
xchg
mov
or
adc
dec
lea
inc
enter
push
ret
mov
push
dec
lods
fnsave
rol
inc
nop
mov
jp
lret
ret
inc
dec
pop
adc
sbb
mov
adc
call
cli
mov
jle
outsl
xchg
call
cmpsl
xor
daa
test
sub
sbb
mov
loop
mov
mov
lret
imul
dec
mov
jb
outsl
add
scas
add
inc
cmpsb
pop
int3
sbb
rorb
xor
sti
test
stos
arpl
outsl
data16
outsl
push
pop
mov
cmpsb
sub
cmp
xchg
into
inc
xchg
in
add
fistpl
add
rcrb
ret
pop
idivl
neg
loopne
sub
ja
pop
ljmp
mov
adc
mov
push
inc
fistl
call
add
lret
decl
outsl
stos
cmp
ds
mov
jl
push
mov
xor
mov
xchg
leave
in
lea
or
xchg
mov
in
ret
pop
cld
decb
lcall
lods
stos
cmp
int
mov
adc
xlat
adc
cmp
popa
aam
ss
sub
add
xchg
pop
mov
fstpl
cltd
add
cwtl
xchg
lret
add
dec
sub
in
hlt
sbb
fwait
jbe
out
jo
cwtl
stos
xchg
and
outsl
fwait
push
aas
xchg
sub
in
aad
dec
aaa
shlb
loop
and
imul
das
fnstenv
jl
pop
and
mov
mov
or
fimuls
je
lods
sbb
and
sub
out
jg
sbb
adc
fmuls
cmp
das
scas
cmp
faddp
js
push
cmpsb
jp,pn
mov
int3
push
sbb
push
sub
inc
or
and
sbb
push
jae
psrlq
mov
shlb
mov
sbb
pop
mov
xor
into
imul
pushf
pop
bound
lret
shlb
mov
clc
xor
xchg
inc
sub
insl
jp
popl
mov
loop
lods
scas
cmp
cmpsl
gs
lret
mov
aaa
mov
lret
xchg
xor
mov
adc
std
mov
lret
popf
in
decl
or
cmc
push
adc
outsb
xor
pop
imul
mov
repz
sub
mov
mov
pop
jecxz
in
cmp
xchg
sbb
push
push
insb
lret
mov
cmp
lret
pop
lret
mov
loop
xchg
dec
mov
lea
mov
adc
adc
mov
cmp
jno
or
fsts
push
xor
xor
adc
jno
push
sbb
pushf
adc
add
xor
and
jne
loope
lds
or
lahf
xlat
lods
dec
adc
adc
ret
adc
pop
hlt
add
fisubrs
xchg
push
adc
das
adc
test
lods
mov
inc
lock
leave
les
pop
xor
in
push
xor
pop
sub
xlat
cld
jbe
jg
js
xor
sbb
in
pop
inc
in
aam
push
pop
xlat
xchg
divb
xor
pushf
push
in
dec
or
es
imul
push
or
aad
repz
sub
mov
adc
nop
in
lock
sarb
inc
and
movsb
and
aad
in
out
mov
out
call
jo
hlt
enter
loop
leave
clc
loopne
pop
sbb
sbb
sbb
das
in
fidivs
or
in
push
outsl
out
push
dec
in
mov
les
pushl
in
cwtl
mov
icebp
or
add
dec
pop
ja
inc
ret
mov
dec
std
mov
iret
or
push
jg
mov
out
mov
shlb
or
in
xlat
push
and
pop
shll
jg
push
and
jb
xchg
into
rcrb
bound
out
aam
mov
jl
inc
cmp
xchg
out
lcall
mov
xchg
lret
jmp
pop
test
and
or
push
pop
fdivl
cmp
mov
int3
mov
sarl
push
in
adc
imull
testb
xor
mov
call
adc
lcall
insb
movsl
cli
outsb
mov
and
pop
push
xor
mov
xor
sbb
nop
pop
loop
mov
fistps
inc
enter
jne
dec
cld
jmp
adc
push
test
out
insb
add
mov
dec
stos
fdivl
lods
movzbl
stc
divb
ret
or
fcmovnbe
rcll
xchg
push
mov
adc
lret
push
jle
jp
enter
mov
pop
stos
in
repnz
clc
cmc
scas
cmpsl
popf
push
cmc
xchg
mov
rolb
dec
sub
lds
movsb
imul
insl
lds
std
subl
insl
xchg
clc
adc
xor
enter
jbe
pusha
in
lds
push
in
test
dec
mov
push
out
enter
push
mov
push
xor
mov
dec
pusha
std
lcall
rorb
dec
or
mov
mov
pop
cmp
clc
cmpsb
cltd
leave
adc
inc
cwtl
jbe
push
and
test
fidivl
lods
icebp
loopne
and
jp
jmp
cmp
test
fldenv
fsubrs
int3
stc
sbb
add
ret
inc
add
jne
sbb
lods
jo
jns
mov
sbb
jp
lods
fwait
mov
ss
divl
inc
scas
mov
push
hlt
jg
imul
sub
add
stos
int3
push
push
into
mov
adc
leave
mov
cmp
push
sbb
pop
mov
movsb
jne
jmp
mov
jne
stos
mov
xchg
popf
cmp
or
and
pop
or
repz
cs
roll
or
sub
int3
xchg
and
xor
jmp
pop
cmp
cmp
scas
outsl
pop
pusha
or
rorl
in
sbb
xchg
in
fstl
scas
xchg
inc
jl
ss
and
xor
inc
cmp
andl
inc
mov
mov
dec
shl
pop
nop
dec
pop
pop
repnz
xor
sbb
jnp
add
js
inc
push
rclb
leave
xchg
sbb
popl
es
incl
daa
sbbl
jne
pop
pop
addr16
dec
aad
jns
insl
inc
in
pusha
shrb
mov
aam
dec
insl
push
jb
rcr
pusha
lods
loope
pop
mov
xchg
cmp
jge
add
sahf
decb
test
enter
les
insl
push
xor
jbe
jecxz
jae
pop
nop
jmp
ljmp
add
daa
mov
dec
popa
mov
xchg
outsb
js
xchg
push
add
bound
jge
daa
sbb
sub
fbstp
call
ret
aaa
cmpsl
bound
mov
xor
jo
adc
or
xor
jns
mov
sub
mov
push
inc
into
jo
fwait
xor
cmp
in
dec
or
stc
jmp
pop
xchg
xor
and
pop
out
in
sub
outsb
adc
push
adc
push
mov
fistl
insl
arpl
jb
xchg
out
inc
sub
shlb
sti
adc
adc
test
jge
push
faddl
ljmp
cmp
pop
movl
cmp
rclb
outsb
xchg
xor
adc
and
mov
inc
in
mov
fnstsw
imul
ds
iret
scas
js
xor
ljmp
push
sub
shll
pusha
mov
adcb
add
xor
adc
mov
jne
mov
scas
fisubs
mov
add
pop
jge
dec
mov
mov
decb
xor
testl
pop
outsb
insb
orl
mov
sbb
inc
mov
pop
xorb
ljmp
fcmovne
or
jbe
xor
inc
sahf
ja
jbe
iret
mov
sub
adc
xor
cmpsb
loopne
hlt
out
pushl
push
popa
shrb
movsb
pop
out
and
je
fldcw
jb
idivb
pop
scas
jbe
mov
lock
inc
add
lock
loop
xor
xchg
insl
pushf
popa
sarb
mov
mov
pop
es
and
mov
inc
jb
xlat
mov
outsl
inc
aam
pop
cmp
out
or
adc
insb
inc
dec
daa
test
or
pop
mov
rorb
adc
mov
sub
xchg
lds
pop
out
js
test
xchg
je
jno
hlt
xchg
add
xchg
pop
cmova
mov
sub
lcall
push
add
mov
cmp
mov
or
adc
push
pop
es
mov
jno
arpl
sub
iret
cmp
pop
int3
mov
hlt
sbb
fstpl
ret
push
jb
push
fsubl
cs
in
or
mov
popf
nop
sar
adc
cmp
out
push
out
adc
testb
mov
enter
inc
inc
cli
loopne
or
fs
sbb
and
sbb
mov
andb
rorb
hlt
cmc
lahf
xchg
adc
sbb
das
inc
sbb
xchg
push
adc
sub
movsl
call
out
lret
insb
scas
pop
inc
dec
sbb
rclb
add
pop
fildll
inc
mov
add
lods
and
dec
or
lods
xchg
xor
mov
or
or
fstpt
stc
pusha
xlat
xchg
imul
movsb
and
outsl
mov
sbb
push
or
call
in
out
lds
lcall
dec
adc
sahf
jp
push
sti
push
jge
or
jno
dec
nop
aas
adc
insb
test
cmp
arpl
push
push
js
stos
test
xor
popf
cmp
dec
out
inc
orl
sub
clc
adc
test
mov
adcb
mov
ss
addl
or
sbbb
pop
mov
push
adc
dec
int
sub
adc
adc
stos
cli
in
dec
mov
aam
aaa
cmpl
lcall
stos
aam
add
lock
mov
sbb
jae
fsts
movsl
lret
orb
in
push
dec
repnz
xor
and
push
arpl
sub
sahf
mov
das
sub
pop
mov
fistpl
pop
or
pop
aas
pop
loopne
and
push
add
mov
jle
inc
test
sahf
mov
dec
mov
test
add
or
ret
push
shll
sahf
ret
and
ljmp
ljmp
adc
fistpll
movl
xor
or
outsl
jno
sbb
or
inc
cmpl
out
push
mov
orb
leave
ljmp
adc
dec
push
mov
add
sub
sub
notb
ss
lahf
jbe
pop
lahf
dec
bound
nop
and
cmp
rclb
test
xor
outsb
jae
mov
jle
jae
pop
and
inc
cltd
pop
mov
scas
test
testl
add
pop
dec
inc
ficompl
mov
pop
fimuls
shr
dec
outsb
xchg
lret
xchg
mov
xchg
lcall
jge
mov
stc
addl
mov
push
sahf
adc
pushf
mov
dec
xor
dec
pop
push
xchg
push
enter
xchg
push
mov
mov
jb
and
push
and
inc
cmpsl
test
outsl
jb
and
pop
ja
leave
ljmp
test
rolb
add
in
lds
call
adc
cmp
xor
adc
jb
int3
jecxz
in
loopne
fidivrs
cltd
nop
mov
lea
scas
cli
push
insl
adc
sbb
mov
popa
mov
mov
fwait
inc
pop
fsts
roll
es
add
and
outsb
xchg
xor
lcall
aam
xlat
pop
out
xchg
and
popa
mov
mov
dec
jne
movsl
inc
xchg
mov
inc
adc
enter
cltd
xor
les
pop
sbb
jo
mov
sub
in
adc
loopne
inc
sbb
xor
imul
pop
mov
orl
out
jp
mov
outsl
adc
repz
std
add
dec
xor
pushf
gs
in
rcrl
push
test
inc
lock
mov
xchg
push
mov
sbb
dec
cmp
cmp
push
movsl
int
push
cmpsl
push
xor
dec
cmp
sarl
imul
and
rcrl
jg
cltd
test
mov
push
ja
repz
push
fwait
jl
stc
cmovl
mov
adcl
mov
out
repnz
pop
sub
xlat
push
pop
lcall
mov
or
xor
mov
aas
mov
add
inc
push
shll
pop
cmpb
rcrb
rcrb
jmp
fs
scas
mov
jbe
pop
jge
pop
push
mov
inc
push
mov
mov
ds
and
xor
icebp
jg
mov
and
mov
mov
mov
sahf
out
pcmpgtb
rep
xchg
pusha
or
roll
inc
xchg
xor
xchg
pop
mov
dec
mov
leave
inc
lock
pop
push
test
jmp
fmul
js
stos
add
in
xchg
jne
sbb
pop
data16
loopne
imul
cli
bound
cli
pusha
outsl
lock
scas
cmp
stc
scas
push
mov
or
repnz
or
shr
fidivrl
popa
addr16
ja
inc
push
pop
gs
out
sahf
xor
xchg
mov
dec
imul
add
jl
adc
pusha
dec
push
popa
push
push
insb
stc
mov
test
cmp
pop
lcall
rcl
mov
ds
adc
cmp
mov
push
xor
cmp
cli
cmc
je
pop
std
adc
add
negl
push
mov
adc
inc
xchg
movsb
mov
mov
jp
push
inc
out
sub
xchg
aam
sub
xor
scas
push
gs
dec
mov
js
sub
push
adc
fdivl
xlat
pop
andb
pusha
adc
push
rcl
cs
push
xor
int
fistps
push
scas
push
mov
and
and
pop
add
fnstsw
aam
cmp
or
ja
pop
inc
pop
out
push
adc
fs
test
and
bound
cs
ljmp
shrl
loopne
inc
out
mov
pop
repz
test
xlat
loop
sbb
xlat
test
sub
dec
incb
test
sub
add
pop
out
jne
ss
push
push
inc
mov
jo
stos
cmp
jno
cmp
or
pop
mov
iret
movlps
or
inc
mov
jne
sbb
sub
fldt
lahf
mov
add
pushf
mov
inc
sarl
mov
filds
addr16
fidivrs
insb
lahf
jecxz
jne
insb
mov
out
loopne
or
fiaddl
push
xchg
fs
sbb
jl
jecxz
outsb
test
int
insb
sbb
and
mov
cli
jns
ljmp
lret
push
rorb
mov
push
fcompl
ficoml
add
jno
xor
call
push
mov
inc
pop
sbb
push
in
xchg
jae
sub
push
fbstp
adc
push
ds
fwait
cmp
or
ja
bound
mov
arpl
ds
mov
sarb
push
int3
xchg
pop
ljmp
icebp
xor
sbb
es
scas
fdivrl
inc
je
jns
lret
negb
lret
cmp
mov
mov
mov
push
sarl
add
dec
xor
mov
into
daa
and
dec
jne
in
stos
adc
adc
jmp
repnz
pop
mov
hlt
inc
cltd
jge
push
fwait
sbb
push
rcrb
sub
mov
mov
dec
pop
jge
loop
push
push
jecxz
andb
jle
fldl
xchg
jnp
dec
out
and
data16
mov
aam
push
mov
scas
and
mov
cmp
js
fldenv
jne
cltd
stos
lds
and
dec
aaa
lock
dec
xchg
stos
inc
stos
ja
test
repnz
loopne
test
mov
je
int3
mov
hlt
mov
out
mov
leave
repz
shr
dec
cmp
insl
xchg
enter
jmp
and
xor
rolb
fnstenv
add
pop
xor
mov
dec
inc
add
sub
fldlg2
pop
mov
mov
inc
and
test
icebp
jg
xor
sub
dec
test
cwtl
and
pushf
mov
mov
xor
dec
cmpsl
jle
mov
pusha
frstor
int
mov
in
and
jo
cmp
inc
fldenv
hlt
and
out
mov
lsl
lahf
xor
lock
add
scas
dec
jae
pop
sub
jns
out
lahf
xor
int3
in
stos
jns
jne
data16
cmp
cmp
xor
sbb
lds
sbb
out
inc
mov
je
pop
jmp
add
cld
aad
adc
add
mov
daa
aas
jo
inc
aad
movsl
cmp
aas
dec
dec
ret
dec
ja
pop
sbb
out
pushf
inc
xchg
test
add
jne
mov
inc
leave
xchg
gs
scas
mov
loopne
dec
jecxz
xor
pop
and
mov
push
mov
cmp
ljmp
pop
xchg
xlat
adc
lcall
mov
loop
sub
cmpb
loope
call
mov
adc
pop
stos
pop
fstpt
pop
cmp
add
and
push
repnz
mov
and
mov
imul
cs
sbb
add
popf
mov
int
adc
cmp
mov
out
insb
or
loopne
out
add
imulb
sub
ds
sub
scas
cmp
test
mov
and
rcl
sub
stc
fiaddl
jg
dec
xor
movsb
or
fmull
mov
stc
insl
rcrb
leave
clc
das
push
imulb
lods
adc
xchg
sarl
sbbl
scas
jo
inc
push
dec
stos
mov
sbb
xor
mov
sbb
inc
jg
jbe
lret
xor
adc
adc
and
mov
mov
dec
sub
addr16
fnstsw
out
push
rcrb
mov
push
xchg
nop
sub
mov
lock
push
aad
push
btr
jnp
pop
mov
nop
int
sbb
inc
out
das
inc
ret
pop
mov
fidivl
fisubl
or
aam
test
mov
pop
lods
adc
add
jge
mov
pop
dec
mov
dec
mov
cmp
sbb
aam
js
dec
addl
push
hlt
mov
ss
cld
and
in
mov
cs
cmpsl
xchg
call
out
outsb
nop
mov
rcrb
popl
pop
movsb
enter
jbe
test
cmc
inc
bound
out
inc
mov
sbb
mov
adc
xor
adc
out
in
and
sar
push
popf
and
mov
icebp
rcll
sub
add
xchg
push
sbb
addr16
xor
xor
cmp
sub
sbb
sti
sub
stc
push
pop
push
mov
incb
xor
icebp
addl
nop
mov
mov
aas
test
xchg
jne
ret
adc
ret
flds
mov
popa
hlt
dec
push
and
cli
popl
jnp
cmpsb
xchg
test
stos
stc
pop
fs
and
sub
add
inc
test
mov
and
fistpl
pop
cmpl
add
adc
mov
push
arpl
mulb
mov
jmp
push
js
cs
xchg
pop
stc
pushfw
xchg
scas
flds
inc
popf
push
stos
sahf
jne
std
and
push
mov
cmp
cwtl
mov
lds
dec
mov
and
push
orb
jg
nopl
and
inc
jb
sbb
add
adc
out
xor
adcl
addr16
cmp
rcrb
add
or
sti
scas
movb
xor
dec
xor
std
mov
js
les
adc
adc
push
push
mov
mov
test
dec
pusha
sbb
fisubl
enter
lock
pop
int
je
js
daa
adc
js,pn
mov
sti
les
or
insb
ds
loopne
xchg
add
sbb
int3
xorb
aas
inc
mov
imul
addb
call
or
icebp
std
repnz
adc
movsb
movsl
add
mov
je
adc
push
outsb
pop
xchg
pop
inc
inc
pcmpeqb
mov
stc
xor
les
inc
xor
fmulp
mov
out
add
pop
push
out
sbb
mov
aad
lret
and
in
aad
scas
xor
mov
inc
xor
gs
das
mov
arpl
adc
mov
cmp
pop
dec
ds
xor
mov
arpl
mov
dec
push
mov
push
mov
mov
mov
pusha
js
das
scas
sbb
stos
nop
pop
jo
cltd
aas
aaa
push
mov
js
mov
ret
mov
leave
xchg
xchg
dec
pop
pop
push
cwtl
cmp
mov
outsb
ss
ret
daa
iret
xorb
add
ret
jnp
cmp
mov
ror
repz
loop
repz
adc
mov
push
iret
out
mov
or
mov
das
add
xchg
xor
lods
popf
rorl
sub
push
inc
jns
imul
out
rcll
pop
fwait
movsb
mov
frndint
xchg
out
ja
mov
dec
xorl
outsl
cs
loop
clc
mov
add
push
add
dec
mov
sub
pop
xor
aas
inc
cmp
loop
in
push
les
xor
push
mov
das
jb
jno
jae
cltd
mov
sub
icebp
mov
cmp
adc
aad
shrl
or
mov
push
out
leave
add
bound
mov
dec
push
dec
adc
mov
es
popf
lea
sbb
jnp
xchg
xchg
cmc
jnp
popf
pop
scas
dec
pop
mov
jo
push
mov
xchg
sarb
dec
ljmp
sbb
add
sub
into
xchg
cld
movsb
pop
jae
adc
adc
mov
ja
subl
inc
push
mov
lds
jb
mov
scas
outsb
push
mov
cmp
sub
movsl
stc
insb
mov
xchg
les
sub
adc
inc
inc
sarb
shll
xor
sbb
jmp
js
jecxz
push
mov
dec
inc
je
or
test
sub
mov
in
mull
sub
lods
mov
or
test
lret
xchg
xlat
or
inc
mov
icebp
add
jbe
leave
mov
stos
mov
dec
outsl
and
xorb
ljmp
aad
inc
outsb
push
in
ret
pop
inc
inc
dec
rol
adc
das
lods
dec
xchg
loope
dec
movsl
xor
mov
pushf
fidivl
iret
cmp
lds
dec
add
inc
fldcw
fisttps
aam
mov
adc
mov
or
jnp
lahf
add
pushf
mov
faddl
faddl
sbb
push
pusha
or
addb
js
hlt
rorl
pop
dec
loop
mov
xchg
push
ss
cmpsl
mov
imul
aad
scas
ljmp
test
in
arpl
inc
mov
in
movsb
inc
adc
and
pop
mov
sub
repnz
fstps
int
test
lds
xchg
mov
sub
int3
addr16
scas
pop
rorl
out
and
rolb
rolb
sub
cmpsl
fidivs
aaa
icebp
mov
popf
jnp
cwtl
das
cwtl
dec
mov
call
lods
lahf
mov
xchg
xor
adc
dec
inc
loopne
sbb
or
or
push
repz
push
or
xorl
lcall
in
adc
jecxz
push
cmp
sbb
out
les
sarl
aam
dec
push
jmp
cs
adcb
mov
push
pop
fistl
movsb
xlat
jne
sub
inc
icebp
ljmp
scas
mov
push
xor
sub
and
test
sub
hlt
cld
leave
testb
pop
xchg
push
mov
addr16
or
sahf
dec
es
js
insb
dec
rclb
push
or
inc
std
xor
mov
push
ret
mov
dec
or
mov
mov
cmpb
clc
cwtl
out
test
cmpl
out
cli
jo
fcoms
dec
lcall
sti
push
cmc
jnp
push
dec
cmp
ret
cmpsb
scas
mov
addb
mov
jo
inc
jle
je
jmp
dec
adc
roll
adc
cmp
mov
rol
and
fdivp
call
mov
xchg
fimuls
pop
dec
in
gs
mov
sarl
or
push
mov
aam
lcall
jmp
sub
push
and
sub
cltd
cli
or
xlat
cltd
mov
mov
xor
aaa
xor
dec
push
cmovle
mov
mov
dec
repz
mov
icebp
lahf
arpl
into
or
jbe
ret
jle
adc
popa
adc
nop
out
cltd
daa
add
andl
jge
jmp
ficoms
pushf
adc
loope
stos
insl
ja
inc
dec
ss
pop
jge
push
sbb
test
popa
in
hlt
jmp
xlat
pusha
popa
pop
icebp
jns
pop
cmpsl
out
mov
jnp
ja
inc
mov
inc
imul
cmp
idivl
in
push
jecxz
shlb
add
mov
fnstsw
inc
adc
je
xor
sub
outsl
mov
mov
pop
sbb
pop
sub
jno
pop
mov
fimuls
sub
out
and
jne
incl
bnd
frstor
jo
cld
xor
mov
jnp
dec
neg
ss
divl
mov
dec
jns
or
clc
icebp
jbe
cmp
xor
xchg
fldcw
sbb
js
add
stos
ret
xor
je
mov
in
jmp
je
call
mov
aad
mov
adc
or
xorl
aad
fwait
pop
cmp
xchg
pop
add
mov
sbb
inc
xchg
orb
shrl
pop
pop
aam
mov
jecxz
jno
int
enter
mov
jno
mov
add
in
mov
cmp
fists
les
mov
push
sahf
mov
cmp
scas
sub
inc
loope
inc
scas
jo
lcall
call
sbb
xor
stos
cld
mov
sahf
cmpsl
dec
push
out
and
test
jge
jae
push
xchg
cmp
out
add
jle
insl
pop
enter
mov
jle
clc
xchg
ficomps
pushf
pop
jae
inc
and
scas
sbb
insl
cmp
jne
and
sbb
mov
subl
shlb
cs
fidivs
pop
xchg
lods
hlt
mov
inc
push
mov
imul
xchg
mov
inc
mov
sti
dec
or
out
or
mov
mov
jae
pop
lcall
mov
xchg
je
dec
enter
xchg
pop
bound
pop
out
cmc
pushf
in
cltd
sub
mov
inc
xor
mov
jle
add
push
or
cmp
push
stos
subb
mov
pop
sbb
add
scas
inc
test
insl
pop
pop
fxch
call
adc
sti
rcrb
into
cmp
gs
rclb
andb
adc
das
stos
jge
clc
mov
cwtl
scas
test
add
filds
cmpsl
adc
inc
test
jge
sub
stc
adc
pop
and
mov
hlt
leave
push
rclb
mov
inc
add
jb
insl
ficoms
push
mov
adc
push
div
hlt
mov
push
sub
mov
push
roll
cs
sbb
fimuls
ljmp
test
aas
arpl
lea
dec
cmp
push
push
aad
jmp
pop
mov
xchg
int3
bound
mov
jg
test
xlat
mov
imul
sub
das
data16
push
or
pop
in
adc
push
mov
or
jo
mov
lcall
shrb
outsl
lahf
jmp
mov
xlat
adc
and
dec
dec
lock
andb
xchg
jno
sbbb
sahf
fisttps
mov
xchg
in
data16
xor
movsl
scas
into
int
call
adc
fsubrl
fldl
mov
sahf
cmp
push
dec
dec
lcall
mov
icebp
mov
test
xchg
xor
inc
cwtl
dec
mov
clc
ss
popf
pop
add
inc
sarl
das
into
sbb
inc
addr16
mov
ss
inc
scas
out
cmpb
jae
gs
fstl
or
inc
bsr
xlat
xlat
cmp
xor
xchg
ss
push
cmpsl
dec
les
xchg
push
in
and
adc
pop
inc
cmp
inc
mov
xlat
movsb
outsb
push
test
dec
xor
and
add
rcl
xchg
mov
pop
divl
add
inc
push
stos
aas
xor
cmpsl
jecxz
outsb
add
enter
push
in
lret
andl
mov
sahf
jge
inc
mov
xlat
lret
fnstenv
cmp
dec
mov
xchg
add
push
or
sbb
repnz
lods
xchg
sbb
and
mov
pop
arpl
jns
adc
add
imul
or
cs
push
rcrb
cwtl
std
loopne
xor
sub
sub
aas
adc
sub
push
mov
arpl
cld
mov
push
int
adc
nop
sub
and
push
int3
mov
sbb
cmpsb
call
lret
or
cmp
adc
fsubl
in
add
jp
arpl
ret
cmp
push
hlt
pop
sub
loope
push
pop
sbb
repnz
xchg
aam
and
rolb
xchg
nop
repz
mov
mov
test
out
mov
mov
jb
pop
hlt
push
lcall
jl
mov
xchg
push
inc
cmp
das
add
xor
jo
lcall
int
push
jle
push
loopne
in
sub
xor
subb
lret
fcmove
adc
arpl
hlt
imul
loop
test
jbe
pop
push
imul
mov
xor
add
icebp
mov
pop
adc
and
imul
push
mov
cltd
xchg
dec
xchg
addb
es
add
cmp
adc
dec
stos
dec
popf
sbb
aam
jno
xchg
jo
lahf
sbb
andb
adc
loop
mov
mov
mov
jb
jnp
out
sti
ficomps
or
jnp
push
scas
xor
clc
push
jb
xor
aad
mov
push
sub
ret
lahf
add
ds
inc
pusha
shl
mov
mov
jp
jmp
lds
dec
js
imul
pop
mov
aad
xor
iret
clc
xor
cmp
mov
sub
in
inc
dec
jle
data16
mov
xchg
clc
xor
repz
and
inc
insl
fcmovnbe
lds
cwtl
jae
movl
cmp
aad
mov
push
aam
add
pop
mov
int
fbld
add
out
xchg
les
or
movsl
pusha
iret
cmpsl
add
inc
es
pmaddwd
arpl
stos
xor
sbb
jb
test
rolb
and
cs
adc
icebp
sti
ret
shll
loop
mov
xor
mov
sub
adc
loop
nop
out
data16
imul
pop
and
sbb
andl
fwait
cmpb
sub
push
mov
mov
ss
mov
les
fucom
xor
in
fwait
mov
sbb
sbb
lcall
and
adc
dec
enter
ror
sahf
int3
arpl
adc
or
and
and
int
inc
movsb
scas
loop
adc
jne
sahf
es
test
cmp
mov
popa
jle
out
or
fisttpll
xlat
out
jg
jb
or
lret
push
push
stos
and
fcomps
stos
popa
pop
xchg
add
inc
cmc
imul
push
jmp
js
les
aaa
xchg
in
je
mov
lock
mov
aas
adc
pop
or
aad
push
cmp
jno
in
shrw
ljmp
jb
out
pop
jns
in
or
xchg
mov
movsl
dec
cld
fildl
ret
cli
pop
lock
cmpsl
pop
fisubrl
shlb
popf
jp
push
xor
jp
ror
add
cltd
gs
aad
adc
xchg
pop
inc
cmpsb
mov
mov
pop
dec
and
mov
cmp
ss
dec
push
mov
movsl
pop
push
xchg
inc
xor
int3
jnp
push
jp
cmc
dec
stc
out
sub
lds
cmpl
mov
mov
movsl
je
popf
pop
dec
xlat
mov
dec
rcrb
sub
pop
pop
and
jecxz
pop
fisubs
adc
xor
xchg
lds
addl
or
aas
das
movsb
dec
popa
into
cmp
out
ret
adc
add
mov
outsb
mov
inc
mov
clc
cmc
xor
cmpsl
pop
jb
or
stos
test
sbb
std
js
and
cmp
xchg
sbb
mov
repz
mov
lret
xchg
fnstenv
mov
mov
enter
lock
cld
js
mov
sbb
sub
hlt
push
jb
std
out
movsl
mov
cmp
imul
jns
cltd
sti
or
push
nop
mov
cmp
pushf
xchg
leave
out
into
mov
insb
popa
sarb
aad
fldt
xchg
mov
ret
mov
js
in
dec
push
in
dec
push
xchg
je
jno
loop
push
push
mov
ljmp
jo
cmc
arpl
xchg
jbe
jns,pt
cli
fldl
icebp
xchg
xor
cmp
jg
pop
popa
add
into
pop
test
and
dec
ret
mov
stc
cmp
push
out
jge
lock
enter
int3
cs
rcll
cmp
loop
and
cmp
pop
or
mov
push
inc
imul
out
daa
sti
mov
mov
imul
mov
push
scas
pusha
fwait
int
sub
loopne
fdivr
popa
hlt
push
je
out
fs
les
mov
iret
sbb
imul
jl
xchg
lcall
mov
dec
mov
clc
and
std
daa
push
fidivs
mov
adc
mov
lock
mov
dec
daa
dec
mov
pop
mov
sub
inc
aam
push
stos
cmc
mov
add
ucomiss
and
cld
push
push
leave
mov
lahf
adc
fcmovnb
mov
mov
mov
adc
mov
cmp
xchg
inc
push
in
mov
inc
fwait
mov
aam
push
inc
loopne
inc
mov
pushf
aam
rcl
sub
inc
bound
movsl
xchg
xor
xchg
aaa
push
inc
push
fistps
inc
mov
cs
xor
mov
cmpsb
xor
and
aad
lods
xchg
dec
dec
push
cmpsb
in
sti
lds
stos
sub
add
jge
loopne
sub
sbb
or
pop
fsubrl
ret
adc
rclb
in
xchg
jae
int
loop
out
adc
pop
cmp
jmp
add
and
or
xor
mov
adc
push
mulb
frndint
icebp
sbb
push
hlt
les
mov
adc
test
nop
hlt
or
mov
aas
push
mov
dec
loopne
aad
jl
fadd
out
call
sub
std
or
loop
cmc
ja
lds
jo
into
cld
sbb
mov
test
push
xchg
pop
and
call
loop
pop
ror
lret
jle
femms
nop
mov
lret
std
cld
xchg
adc
push
cmp
aad
fs
pop
and
test
cli
add
mov
test
stc
adc
mov
int
lcall
stos
add
add
xlat
fs
rorl
jne
dec
jnp
sar
xor
cmp
push
je
mov
xor
dec
jecxz
mov
sbb
leave
xor
addr16
jns
pop
xor
pop
jbe
or
or
sbb
pop
jne
mov
loop
insl
lock
aad
mov
orb
cmp
sub
add
ret
adc
jecxz
sbb
por
int
test
test
pop
fimuls
mov
std
mulb
xchg
mov
mov
sub
repz
les
test
mov
jmp
adc
xor
cld
inc
js
mov
jno
dec
push
mov
adc
test
push
cwtl
add
loop
fnstcw
mov
fcomps
mov
push
andb
add
cwtl
xchg
fsubl
movb
mov
xor
pop
sbb
cmp
shll
xor
mov
adc
cmp
hlt
pop
cs
xor
in
inc
enter
mov
dec
mov
or
xchg
pop
stos
xchg
ror
push
xorb
lcall
lahf
cld
js
lods
mov
xchg
dec
inc
les
inc
sbb
les
sbb
mov
clc
data16
adc
inc
cmp
sub
stos
rcl
orl
sub
push
pop
cs
adcl
stos
inc
test
mov
stos
push
fcmovbe
ficoml
das
stc
rolb
adc
xor
lret
mov
cmpsl
jae
cmp
and
add
and
jg
icebp
cmp
sbb
lds
aas
dec
data16
ss
insb
jecxz
sbb
jge
xchg
daa
jge
iret
iret
in
mov
lods
pop
lahf
ficompl
jns
jg
pop
push
jge
fiaddl
ja
cli
jp
xchg
adc
popf
adc
mov
lods
xchg
cmp
jge
lock
inc
into
shr
sbbl
cmp
and
dec
or
ss
mov
insb
mov
fld
inc
setno
mov
ret
mov
sbb
sub
adc
adc
into
sbb
arpl
loope
adc
js
push
dec
cmc
inc
xchg
mov
adc
and
insl
push
pop
in
cs
push
decl
or
cli
mov
in
pop
jbe
xchg
sahf
mov
mov
mov
ficomps
and
and
test
add
hlt
arpl
or
mov
sub
popa
pop
dec
mov
mov
sahf
cmp
fdivp
xchg
sahf
inc
or
dec
xchg
jecxz
inc
push
xchg
into
jecxz
adc
mov
inc
cmp
lods
inc
jecxz
rolb
pop
repz
adc
push
cmp
loop
icebp
inc
sub
inc
stc
push
test
inc
enter
mov
cld
mov
cld
ret
fistpl
das
ret
mov
stos
adc
xlat
jbe
mov
inc
jne
popa
xlat
dec
sub
add
cmp
xor
cld
xor
addr16
mov
movsb
mov
mov
dec
xchg
mov
fidivs
xchg
jmp
int
pushf
xor
inc
dec
dec
fisttpll
repz
leave
jmp
lret
or
lret
mov
jbe
das
js
or
mov
loop
pop
jmp
insl
insl
pop
push
push
fwait
sbb
lock
push
jecxz
repz
arpl
ret
mov
pop
mov
mov
jmp
fcmovb
mov
je
push
xchg
movsb
scas
jno
xchg
push
add
stos
sub
das
inc
mov
pushf
xchg
dec
movsb
dec
arpl
out
shrb
insl
sub
pop
push
add
push
jne
sti
inc
out
test
out
scas
ss
push
cwtl
mov
cld
rcl
mov
ss
push
cmp
mov
add
les
push
rclb
sahf
roll
arpl
inc
jmp
xor
negl
aas
xchg
aas
xchg
repnz
stos
mull
jne
lea
test
xchg
xor
mov
stos
cmpsl
cmc
mov
and
in
xor
ja
mov
addl
loopne
test
dec
xor
push
pop
es
mov
outsl
add
add
xor
scas
mov
leave
or
mov
cld
add
rcrb
test
mov
mov
popf
aas
out
and
jns
adc
fs
adc
or
sub
popw
sti
test
dec
xchg
adc
andl
test
rcrl
xor
jle
and
lret
mov
xor
fcoml
cmpl
in
shll
lea
mov
outsl
push
sub
popa
cld
pop
sbb
jmp
test
or
jmp
xchg
xchg
repz
les
cwtl
jmp
push
aad
sub
rorb
incl
lahf
mov
test
movsl
fwait
sbb
inc
imul
fisttpll
dec
mov
shll
jge
xchg
pop
push
call
std
jb
push
dec
jecxz
jmp
leave
mov
ja
cltd
cs
xor
cmp
inc
jno
add
sub
or
daa
int
leave
adc
xchg
cmp
fnstenv
inc
pop
and
test
xchg
sub
clc
bound
rcrl
sub
push
rcrb
aam
add
lock
cmp
test
mov
hlt
nop
jg
dec
xchg
mov
idivl
shll
int
idivl
dec
insl
ja
sbb
lahf
xchg
mov
test
xchg
xchg
xchg
dec
lcall
mov
repz
xchg
and
fcompl
stc
mov
jnp
cmp
into
int
test
ja
jmp
push
jle
aad
aam
outsl
shll
test
cmp
les
sbb
jg
out
and
dec
xor
xlat
xchg
and
pusha
add
scas
xor
testb
mov
je
jno
rcl
aaa
push
push
sarb
sahf
fcomps
sub
mulb
push
sbb
sahf
mov
push
cmp
mov
test
ja
xchg
iret
fcoml
mov
call
mov
adc
push
jns
and
stos
fldt
and
push
je,pt
mov
inc
test
mov
inc
cmp
hlt
daa
xchg
cld
mov
or
call
cmp
jnp
mov
push
stc
dec
xor
pop
push
mov
lds
nop
or
pop
mov
in
insb
push
idiv
mov
cli
xor
inc
repz
insb
adc
not
jae
popa
jecxz
sbb
rcr
pop
cli
rclb
dec
sub
mov
xchg
xor
adc
insb
xor
shll
lret
lcall
std
cmpsl
push
xchg
jns
push
sbb
out
pop
out
fimull
and
pushf
es
jl
popa
and
push
shrb
push
cmp
jg
jl
add
arpl
push
pop
addr16
xchg
dec
lcall
xchg
cmp
imul
push
mov
sbb
mov
xchg
adc
mov
xchg
or
pop
stc
mov
dec
sub
push
mov
xor
sbb
test
sbb
movsl
mov
adc
adc
hlt
or
jnp
movsl
sub
loop
jecxz
cwtl
sti
call
push
loop
inc
int
std
sub
pop
jb
xor
test
cmpsl
push
adc
sub
adc
loopne
test
mov
dec
sbb
dec
inc
cli
mov
pop
xor
inc
cmpsb
dec
adc
call
jle
push
into
mov
ljmp
cmpsb
lds
push
adcl
dec
push
and
aas
fadd
stos
aaa
pop
inc
jp
push
push
adc
pushf
pop
dec
adc
fcomp
arpl
inc
das
xor
and
push
jno
shrl
scas
cmp
std
ss
fcompl
lahf
test
jp
mov
fs
stos
jnp
ficoml
lahf
push
aad
daa
int3
je
cltd
adc
adc
jl
addb
stos
call
mov
mov
hlt
mov
cwtl
or
adc
push
outsb
jge
inc
xor
sti
cld
and
rcll
xor
outsb
inc
stos
add
add
and
jne
enter
mov
nop
add
popf
aam
je
stc
clc
and
adc
add
lcall
cmp
fwait
cmp
fdivrl
cmp
test
cmp
adc
adc
xor
aas
and
xor
xchg
sbb
test
sub
out
into
in
clc
cmp
or
scas
pop
mov
dec
push
jo
pop
lcall
roll
rolb
subl
push
cmp
sub
lds
cmpsl
lods
jmp
shll
pop
or
lcall
add
add
mov
fldcw
insb
mov
jmp
movsb
das
shrb
in
jg
push
fsincos
stos
out
mov
ret
scas
cmp
and
add
test
xor
add
cmpsb
xchg
adc
adc
out
cld
add
jns
pop
aaa
adc
sbb
scas
cmp
dec
jge
pop
fwait
nop
pop
xor
mov
mov
mov
into
arpl
mov
icebp
sbbb
jg
lret
jne
and
pop
inc
jg
sbb
scas
sarl
push
sahf
dec
loop
scas
cmc
xchg
data16
pop
or
sub
push
movb
ret
rcl
iret
push
pop
ret
jl
clc
pop
and
cmp
loop
sbb
mov
jns
adc
or
lods
mov
push
push
es
cwtl
adc
jns
inc
rol
aam
mov
fs
dec
pop
add
pop
pushf
pop
dec
in
lds
jbe
add
imul
mov
shll
jns
push
add
arpl
and
and
pop
xchg
dec
add
in
mov
xor
mov
jb
aaa
aaa
dec
or
testb
inc
gs
stc
ljmp
cmp
pop
lcall
mov
into
push
mov
lahf
sub
mov
int
cmp
pop
nop
call
pop
jno
repz
outsb
fcoml
enter
dec
or
bound
mov
add
jb
mov
je
pop
jmp
lahf
lret
nop
pop
jmp
jne
les
pop
popa
dec
dec
mov
sarb
repz
in
addr16
fnstsw
das
test
and
scas
gs
cmp
les
sbb
fbld
adc
inc
push
scas
aad
jb
dec
xchg
xor
pop
lods
ficompl
mov
xchg
into
inc
xorl
jmp
lcall
push
cmp
mov
mov
lcall
out
and
xor
jmp
pop
xor
mov
mov
lcall
lret
data16
fistl
pop
gs
jns
lods
cmc
push
jp
xchg
dec
les
mov
mov
inc
imul
dec
mov
add
adc
push
cmc
push
jle
xor
fildll
push
push
int3
fxch
outsb
stos
mov
cs
test
in
and
cwtl
xor
jb
push
xchg
jae
add
push
and
mov
push
mov
dec
sarl
dec
out
add
jae
add
cmp
mov
jae
lods
sti
fstpl
mull
dec
ds
call
mov
pop
lcall
scas
pop
mov
jo
and
mov
nop
hlt
lods
adc
xchg
dec
add
inc
testl
fadd
mov
push
stc
ss
fsts
jb
jmp
outsl
mov
add
loopne
mov
lret
or
adc
and
dec
fimull
imul
sbb
fucomi
std
test
xor
push
cmp
mov
outsb
cmc
sbbl
fisubl
stos
cmpsb
decl
xchg
je
adc
mov
adc
jmp
fucomip
mov
out
and
push
lock
fs
lcall
mov
xchg
mov
insb
push
and
sub
jnp
je
push
aaa
shrb
jle
pop
clc
insl
shl
jge
shl
push
ja
push
bound
jno
add
jnp
sar
icebp
sub
and
aam
adc
addr16
jecxz
test
enter
xchg
mov
lahf
mov
mov
pop
xor
mov
sub
dec
push
pop
negb
jnp
test
lock
outsl
xchg
xchg
cmp
sbb
sbb
cmc
pop
jns
push
cmp
and
add
mov
lcall
ret
jnp
mov
mov
xlat
addr16
pop
cltd
sbb
divb
dec
add
out
xchg
cmpsl
xor
das
shrb
sbb
leave
test
es
dec
inc
mov
or
mov
fildll
loopne
fdivs
call
mov
jno
pop
int
jne
arpl
pop
lods
rcr
adc
pop
sarb
sti
pop
sbb
push
out
jb,pt
out
and
lcall
add
int3
cmc
push
push
out
std
mov
into
xchg
addr16
insl
xchg
jo
xchg
leave
mov
ljmp
ror
cmp
fcoms
adcl
adc
lahf
add
add
lds
adc
mov
aaa
push
push
imul
push
nop
lret
arpl
xchg
cs
inc
idivl
cmp
in
and
sbb
sub
movsl
mov
icebp
test
fcompl
test
and
pop
xor
hlt
cld
sti
jb
jb
or
or
scas
sub
add
jle
add
fdivs
mov
dec
orb
sbb
xlat
jns
inc
mov
inc
push
movsl
mov
sub
scas
out
outsl
sti
lds
ljmp
ret
mov
or
mov
aam
ret
imul
ret
jp
push
icebp
cmp
add
dec
ret
je
dec
jp
adc
repz
mov
jmp
jecxz
jbe
dec
into
pop
pop
std
ret
adc
pusha
loope
jge
mov
jae
std
in
jp
and
lea
cs
std
or
fbstp
mov
jge
inc
mov
adcb
sbb
rolb
xchg
mov
scas
ss
xchg
pop
insb
push
mov
cmp
cmpsb
mov
movsb
aad
and
outsl
divl
inc
aaa
cli
mov
dec
inc
rorb
cmp
adcb
cmp
pop
aad
pop
dec
das
sub
mov
mov
mov
call
sub
push
fisubrl
or
pop
leave
sbbb
arpl
and
adcb
icebp
aad
push
cmc
test
xchg
mov
adc
mov
lods
ljmp
scas
pop
xor
add
addps
push
pop
xchg
xor
iret
out
add
sub
aam
pusha
mov
jp
ja
scas
es
add
mov
add
xchg
push
loopne
movsl
fidivl
mov
imul
inc
push
mov
xor
pop
mov
xchg
push
xchg
call
push
jl
in
orl
cld
sub
daa
sbb
mov
adcl
hlt
fcompl
loop
sti
mov
mov
icebp
ffree
mov
mov
pop
xchg
jne
popa
int
in
sub
sar
jge
mov
les
int3
insl
mov
xchg
gs
mov
shll
mov
pop
fildll
sub
subl
dec
in
inc
addr16
mov
inc
dec
cltd
sar
ret
rcrb
pop
out
rcr
bnd
ja
call
add
jns
sub
add
mov
data16
xor
xor
fnstenv
bound
leave
mov
out
cmpsl
and
cmpsl
mov
sbb
dec
jmp
mov
movsb
adc
cmc
scas
push
mov
outsb
add
dec
nop
aad
xchg
or
aad
popa
adc
test
out
shrb
push
sbb
adc
js
cltd
sbb
inc
sbb
in
mov
inc
mov
andb
and
gs
test
clc
push
into
inc
int
jbe
add
es
dec
xchg
sbb
clc
add
mov
push
inc
inc
pusha
add
cmc
sarl
loop,pt
scas
lcall
cli
daa
xor
jb
xor
sub
and
and
jecxz
cmc
cmc
test
mov
shr
dec
cltd
dec
movsb
sub
test
scas
lret
xchg
fimuls
fbld
inc
out
inc
scas
jae
loop
test
xor
loopne
out
aad
jg
and
cmc
lret
sub
pop
inc
xorl
stos
aaa
out
fdiv
push
pop
jg
cwtl
scas
rorl
pop
jge,pn
xor
sub
jno
push
mov
push
mov
or
inc
cmp
dec
inc
pop
ror
add
ret
jo
cmp
jge
fprem
cmc
push
pop
sbb
daa
fxch
xchg
cld
mov
popf
jo
rcrb
inc
jp
add
dec
mov
negl
jbe
xchg
fmuls
mov
test
jp
xor
mov
sub
iret
popf
or
jns
repnz
scas
in
sbb
mov
pop
sbb
inc
cltd
sbb
lret
or
test
sarb
popf
and
push
fwait
ror
cmp
lock
dec
push
inc
loopne
std
loopne
jae
push
pop
das
repz
sub
nop
loope
fisttpl
inc
insb
xchg
pusha
push
in
jle
aas
es
inc
icebp
cmp
std
add
sub
or
pop
stos
stos
dec
dec
aas
jno
loopne
aam
stos
xor
mov
add
mov
and
scas
jo
setae
mov
add
aam
rcr
lret
adc
mov
inc
das
fdivs
push
jmp
mov
test
cld
and
add
mov
mov
nop
mov
lret
xchg
rcll
stos
xor
sbb
cmpsb
lahf
incl
inc
testb
in
or
lds
dec
xor
enter
popf
push
dec
lret
out
mov
outsl
cltd
push
adc
and
mov
xor
scas
outsb
arpl
mov
push
mov
out
mov
xor
popa
sbb
movswl
and
lock
scas
add
or
push
push
and
imul
aas
bound
repnz
mov
faddp
shll
cmpsl
mov
cmp
dec
add
int
insl
test
enter
negb
rcrl
or
jne
add
pop
push
inc
fstpt
lret
jmp
scas
sub
ficoml
ljmp
jo
jne
jb
idivb
mov
cmp
lret
sarb
mov
movsb
jp
orl
insl
ss
insb
pop
lcall
mov
fs
lret
movsl
sbb
femms
cld
xchg
xchg
push
loop
pop
into
aad
jecxz
cmp
lret
sbb
rcll
mov
and
aas
xorl
sub
push
sub
mov
adc
push
jb
jbe
xchg
fwait
xorl
pop
shrb
cmp
mov
cmp
mov
cmp
adc
or
scas
mov
int
add
insl
lods
or
mov
fildll
addr16
pop
mov
ds
add
add
push
icebp
mov
sahf
js
xchg
inc
fstpt
in
dec
leave
aaa
add
adc
stc
in
jmp
sub
in
dec
sbbl
mov
ficomps
push
mov
popf
jg
leave
popa
mov
pop
daa
mov
sub
lea
out
push
sub
dec
int
mov
test
dec
outsb
addb
hlt
ja
sbb
cs
jae
sbb
dec
iret
mov
jns
push
cmc
lahf
add
xchg
lock
mov
aas
push
xlat
sbb
jno
mov
xor
jae
addb
mov
inc
repz
insl
sub
push
je
test
in
sarl
pop
and
sbb
stos
arpl
lahf
cltd
mov
popl
push
nop
das
pop
aad
sub
pop
mov
cmp
mov
add
aas
cmp
add
and
jmp
fsub
jl
int
int3
jp
int
ds
pop
xor
push
add
das
push
btc
hlt
es
hlt
sbb
sub
subb
jb
and
push
aad
ds
js
adc
data16
adcb
or
adc
push
and
test
ss
sbb
jbe
push
jbe
add
bound
inc
cmp
in
xchg
add
lahf
call
adc
aad
xlat
sub
cli
aaa
es
push
push
out
jae
sub
adc
in
loope
cltd
fcmovb
cs
inc
into
jle
fists
xchg
pop
xchg
inc
sub
into
mov
lret
push
or
mov
arpl
lcall
testl
in
sub
xor
push
mov
aaa
or
mov
outsb
mov
dec
pop
stc
mov
or
xchg
fsubs
dec
push
mov
daa
push
sbb
enter
ljmp
push
adc
ret
jne
jecxz
int
mov
mov
call
dec
add
ret
sub
jb
xchg
leave
and
push
pop
insb
and
adc
cwtl
mov
xchg
js
jo
dec
outsb
popa
ds
inc
sub
dec
cld
mov
ljmp
aad
fidivrl
mov
dec
test
mov
adc
shll
aam
pop
adc
inc
fsts
stc
sahf
sbb
adc
dec
scas
cwtl
inc
movsl
cltd
arpl
loop
or
mov
ficoml
cmp
adc
into
test
cmc
cmp
mov
jl
jbe
sar
dec
pusha
cmp
xor
jmp
stc
push
inc
int
dec
push
lods
push
adc
push
sub
push
out
imul
ret
stos
popa
flds
inc
dec
lds
or
inc
out
out
sub
or
jle
std
out
out
outsb
xor
xor
push
xadd
xchg
ficomps
mov
pmulhuw
clc
loop
inc
pop
lret
je
dec
cmp
ret
cli
in
sbb
pop
iret
xor
pushf
decb
mov
inc
rorb
inc
outsb
fistpll
mov
repnz
pop
loopne
xlat
or
ljmp
mov
bnd
clc
cwtl
xchg
lcall
jg
std
aad
repz
lret
inc
push
xchg
repnz
pop
push
push
xchg
clc
xchg
dec
je
cli
popf
push
bound
mov
mov
insl
xor
imul
out
es
cmpsb
ljmp
xchg
inc
cli
or
xor
lcall
push
cmp
rorl
push
daa
cltd
lcall
push
xor
fs
mov
fs
xchg
clc
sahf
xchg
scas
icebp
or
jmp
sub
xchg
mov
adc
lea
mull
in
inc
pop
fists
push
loopne
jbe
dec
cmp
int3
out
negl
shl
int
push
jnp
inc
xor
mov
pop
popf
xorl
sbb
xchg
cld
data16
in
test
xchg
out
pop
adc
cmp
sahf
sub
push
inc
imul
or
and
xchg
add
pop
ret
and
mov
adc
jae
adc
jp
adcl
push
jge
fdivrs
push
call
ds
cltd
loope
xchg
aaa
imul
push
in
xchg
gs
fcmovnb
inc
xchg
outsb
int3
jmp
jl
pop
cli
add
pusha
dec
xchg
add
popa
mov
shr
jno
ret
sub
jae
cmpsl
rorb
push
sbb
or
jl
mov
and
lods
bound
mov
adc
aas
cmovns
jb
in
cli
sub
outsl
xor
pop
movsb
mov
add
mov
jb
adc
sub
xor
lahf
mov
repz
inc
jge
repnz
add
cmp
jns
movb
scas
mov
add
outsl
in
loopne
pop
xchg
sbb
fbld
in
push
aaa
jne
add
mov
sbb
cwtl
add
push
cmp
xor
cwtl
or
add
add
xchg
or
jecxz
cli
and
and
inc
je
inc
adc
xchg
mov
cmpsb
mov
arpl
loopne
mov
enter
insb
push
ljmp
mov
call
inc
lahf
mov
push
cmp
mov
inc
cs
outsl
daa
mov
mov
dec
daa
dec
xor
mov
xlat
nop
int3
cld
lock
jle
ficoml
inc
stc
imul
leave
xor
jae
push
pushl
scas
add
jl
adc
lods
push
fimuls
or
sbb
in
xor
gs
mov
mov
and
decb
pop
jle
sbb
pop
pop
inc
push
adc
insl
movsl
add
jo
jge
out
rcrl
dec
sqrtps
ja
push
les
jl
push
mov
in
incb
inc
and
push
arpl
arpl
faddl
mov
insl
jb
xchg
jp
shll
push
pop
mov
push
aam
add
jne
popf
mov
aaa
pop
xchg
sub
pop
jb
push
ss
pop
add
jge
aam
adc
jge
jno
xchg
pop
or
leave
punpckhwd
inc
popa
adcl
cmp
popf
nop
or
adc
pop
cmpsl
pop
testb
dec
in
xchg
xor
push
sbb
xor
sbb
pshufw
pusha
pushf
push
jmp
sub
push
dec
mov
stos
lret
xchg
sbb
out
xchg
imul
test
mov
ror
inc
inc
mov
or
out
sub
sub
loopne
inc
jp
and
out
pop
test
shll
inc
add
pop
testl
sub
daa
sub
loop
insb
enterw
mov
and
inc
pop
xchg
push
mov
daa
loop
push
and
mov
cwtl
adc
jno
insl
js
aad
enter
jb
lock
xchg
loope
out
xchg
push
lahf
push
cmp
mov
pop
mov
imul
sbb
or
aad
pop
je
fcmovnb
xchg
jbe
xor
mov
cmp
je
imul
lea
andl
lret
jns
sti
shl
dec
adc
push
mov
test
and
sub
gs
int
jno
cmp
call
jge
movsb
xchg
cld
adc
nop
adc
dec
lods
icebp
add
cltd
jl
fwait
outsl
cmpsl
insb
mov
xor
out
fidivrs
fisubrl
test
jp
aad
fiadds
cmp
mov
imull
movsl
cmp
rclb
push
cmp
sub
mov
out
jg
xchg
test
dec
inc
clc
imul
and
or
dec
pop
xchg
fmul
fadd
sti
mov
xchg
xor
repz
jno
push
shll
aam
mov
dec
pusha
in
push
and
xchg
mov
rolb
pop
xor
ffreep
pop
ret
scas
arpl
rcrl
jg
inc
ret
mov
lods
xor
mov
push
jnp
in
std
popf
mov
call
cmp
scas
cmp
jl
cmp
and
and
or
fisttpl
pusha
push
inc
cli
adc
lds
and
sub
mov
fbstp
testb
ljmp
call
and
sbb
sub
iret
push
adc
stos
loop
arpl
and
loope
data16
dec
jl
pop
rolb
ds
out
in
les
sbb
sti
js
lds
lret
popf
add
stos
shl
or
pop
ficomps
movsl
pop
inc
out
mov
inc
adc
dec
push
xor
lret
mov
int
jbe
pop
das
cmpsl
mov
push
mov
xchg
adc
jnp
push
test
add
icebp
dec
rclb
int
and
sbb
or
bswap
insl
arpl
sti
bound
lods
scas
adc
cli
and
in
or
and
mov
or
xchg
shlb
ret
mov
mov
je
mov
xchg
or
xchg
popf
jecxz
jb
mov
push
push
mov
or
dec
sub
push
mov
push
mov
fiaddl
push
test
loopne
mov
pop
stos
imul
adc
cmp
test
jge
jnp
xchg
fwait
xchg
int3
sti
or
mov
ficoml
lods
push
xlat
xor
mov
cld
add
cmpsb
and
clc
lods
fwait
or
pop
cmpsb
cmp
pop
scas
cmp
push
mov
mov
adc
push
sbb
shlb
es
jnp
leave
dec
jl
pop
fdivl
in
xor
pusha
test
adc
ljmp
js
stc
test
decb
or
and
dec
mov
mov
pop
add
jne
add
jae
out
shlb
pop
add
ja
fstpt
test
test
mov
fdivp
cmp
xor
xor
mov
cwtl
or
pop
adc
add
push
jecxz
cs
cmp
mov
ljmp
xchg
lock
xchg
sarb
aaa
outsb
xchg
inc
hlt
into
lcallw
add
pop
popf
fbld
xor
and
lret
iret
inc
out
popf
dec
popa
push
cmp
xchg
add
in
inc
jge
insb
mov
xor
pusha
or
fdiv
push
out
lret
and
andb
sub
sahf
inc
sbb
jns
clc
int
xchg
ljmp
cmp
les
decl
cmpsl
shlb
and
add
push
mov
lods
xor
shr
ja
add
es
ret
jp
daa
jo
mov
and
push
xor
pusha
add
pop
das
push
jne
das
mov
into
inc
lds
dec
test
mov
push
imul
cs
loope
adc
jb
out
mov
pop
pop
das
dec
adc
pop
mov
int
adc
gs
cld
mov
addr16
js
lods
and
or
mov
inc
les
mov
jae
pop
pushf
cli
xchg
xchg
out
mov
rcr
cli
fmuls
jg
or
ljmp
sub
arpl
dec
roll
adc
js
mov
sbb
and
andb
or
jnp
stos
mov
sbb
test
or
cmp
iret
cmp
out
push
mov
dec
je
movb
sub
aaa
or
push
lcall
pop
add
pop
jns
mov
xchg
inc
adc
push
jae
popf
or
inc
mov
jp
aam
cmp
cmp
out
lret
mov
ret
cmpsb
pushf
dec
sbb
test
inc
sub
cmp
mov
and
arpl
out
pop
scas
pushl
in
fildll
stc
aam
lock
push
or
stos
pushf
cli
lock
add
sbb
loop
loop
xchg
subl
push
fucomi
and
xlat
cltd
cmp
xor
lcall
movsb
push
or
push
jge
push
xchg
xchg
jge
push
mov
push
repz
push
dec
addb
or
in
or
stos
pusha
arpl
enter
popa
and
add
adc
rorl
gs
cmp
out
repnz
in
in
ljmp
sahf
jns
adc
mov
out
jmp
pop
paddd
mov
push
xor
push
hlt
mov
stos
repnz
pop
push
stos
sub
cli
icebp
adc
sahf
xor
adc
daa
ja
sbb
fstl
js
mov
mov
dec
addr16
add
or
fnstcw
push
mov
cmp
mov
sbb
jg
sub
clc
cmp
pusha
cmp
hlt
imul
fimull
or
arpl
or
mov
lock
jae
dec
jge
ljmp
cmp
xlat
cmc
incb
rcl
inc
iret
xlat
inc
mov
fsubrp
ret
adc
mov
into
jae
fnstcw
loopne
pop
ljmp
mov
in
sbb
mov
mov
cmc
out
outsl
gs
push
aaa
add
jge
pop
int
jae
lea
mov
test
fmul
xchg
lret
cmpsl
movsl
adc
enter
out
loope
outsl
outsl
pop
mov
cmp
cs
xorb
movsb
inc
fisubrl
fwait
dec
inc
xchg
std
mov
pop
pop
das
add
inc
mov
fildll
push
lods
and
add
call
push
mov
std
bound
imulb
jo
jae
in
cmp
movsb
leave
dec
fiaddl
test
push
idiv
cwtl
dec
mov
aaa
lea
mov
xchg
pop
orl
fnstcw
push
sub
push
fdiv
je
in
sbb
mov
mov
out
mulb
add
stc
dec
dec
inc
orb
add
jmp
imul
mov
push
ja
decb
mov
loopne
outsl
movsl
mov
int3
mov
jbe
popf
enter
mov
sub
xchg
idivl
add
scas
or
push
loope
add
jno
cld
test
scas
cmp
push
inc
outsb
movsb
in
gs
pop
scas
dec
jae
fisubl
pushf
dec
push
fcmovnu
pop
cmc
or
cmp
fildl
inc
cmc
out
bound
mov
in
int3
pop
faddl
push
lahf
loopne
push
stos
jle
fmul
ret
jae
jbe
sbbl
xchg
inc
or
jae
pushf
push
in
mov
fcmovnbe
sbb
mov
mov
push
jge
mull
mov
mov
pop
mov
cmp
stos
mov
sbb
or
shlb
popa
dec
sbb
stos
jecxz
outsb
adc
cmp
nop
sbb
jnp
xchg
cmp
sbb
sbb
subl
push
mov
xchg
cmp
push
scas
outsb
mov
enter
jns
cltd
stc
popf
movsb
mov
cmp
jno
dec
sti
repnz
sbb
ja
pop
sub
push
pop
and
inc
adc
mov
and
xchg
mov
fdivrp
fldenv
mov
or
xor
insl
push
xabort
mov
ret
jns
les
bound
test
daa
cmp
add
xchg
subl
insl
push
pop
decl
pop
xor
sbb
jo
jle
dec
xor
fcmovnbe
push
mov
loop
sbb
pop
inc
or
scas
dec
jb
popa
jmp
dec
adc
sbb
dec
mov
jae
pop
and
dec
insl
mov
xchg
sbb
xor
aad
dec
mov
jnp
std
mov
mov
loope
test
and
push
xchg
xorl
sub
xchg
addb
into
dec
icebp
mov
iret
inc
cmp
sbb
fstpt
xor
jg
mov
fbld
push
fcmovnu
nop
add
mov
rclb
and
cmp
nop
pop
xchg
pop
popl
in
imul
mov
push
dec
jae
or
out
popf
mov
pop
int
fnsave
inc
jo
add
bound
lahf
dec
jl
lds
call
dec
mov
dec
and
mov
lea
pushl
dec
push
cmc
scas
push
aad
lcall
push
mov
les
lcall
xor
xchg
inc
jp
push
cmp
xor
sub
adc
jecxz
inc
lods
test
in
mov
push
pop
mov
icebp
jnp
jnp
outsl
mov
fsubl
adc
sbb
push
imul
push
lcall
mov
out
adc
xor
fildl
in
movsl
iret
int
cmc
adc
imul
movsb
sar
sub
inc
arpl
aad
jbe
and
add
inc
push
add
push
call
dec
dec
sbb
sbb
mov
das
sub
cmp
push
push
nop
or
gs
mov
in
mov
aaa
mov
mov
fnstcw
mov
adc
movl
bound
push
xchg
int
jnp
adc
mov
ja
pop
xchg
lahf
lods
mov
xor
dec
mov
and
dec
add
sti
shl
cs
mov
adc
jmp
test
cltd
mov
in
das
popa
push
inc
out
iret
push
ss
gs
mov
ss
xlat
xchg
lret
out
and
dec
add
and
stc
dec
pop
into
leave
mov
or
hlt
mov
and
js
mov
in
iret
test
xchg
jle
pop
jecxz
test
sar
sbb
xchg
jmp
scas
divl
add
xor
ret
aaa
mov
movsl
adc
xchg
adc
ss
sub
stos
pushf
lret
gs
outsl
lahf
xchg
jecxz
and
xor
mov
js
call
js
pop
pop
or
push
sahf
pushf
lods
cmp
adc
cmp
repz
sahf
or
test
and
dec
push
test
push
fwait
cld
loop
ret
test
sub
addr16
mov
popf
push
inc
test
inc
cmp
lds
mov
sti
enter
cli
icebp
mov
filds
ds
cmp
aam
shlb
xor
mov
mov
pushf
adc
mov
or
mov
pop
pop
push
mov
inc
in
xor
sbb
pop
mov
shrb
ljmp
aas
cltd
xchg
add
rorb
or
mov
mov
cmp
xchg
pop
sti
js
daa
push
cmp
pop
jmp
pop
sub
jnp
cli
aam
cs
xchg
mov
mov
jl
cmp
jbe
lea
cmp
fdivr
repz
insb
and
add
test
mov
fmuls
xchg
pop
add
cs
mov
xchg
mov
mov
fucomi
sbb
imul
mov
lock
lock
adc
xchg
adc
lahf
mov
mov
mov
in
push
jp
mov
xchg
leave
jne
fildl
adc
daa
rdpmc
pop
pop
popa
push
out
adc
jo
mov
sub
jno
insb
jae
jno
decb
in
adc
fwait
mov
adc
and
inc
imul
outsl
jle
mov
dec
xchg
movsb
or
pop
mov
rclb
pop
sbb
or
xchg
insb
jecxz
arpl
movsl
xchg
lock
repnz
lock
shll
xor
mov
adc
mov
call
xchg
test
addb
jno
mov
clc
jmp
lret
push
ja
mov
rorb
sbb
js
sbb
jns
shl
xchg
fwait
ss
pop
xchg
dec
mov
fistps
fcmovb
sub
fcompl
push
call
push
pop
cmp
sbb
push
and
lea
in
call
mov
sbb
adc
in
jo
mov
cltd
scas
mov
dec
aaa
test
push
add
xchg
psrld
mov
add
inc
adc
std
push
scas
ja
mov
outsl
pop
push
jbe
clc
test
in
lock
adcl
sbb
lret
lods
xchg
stc
mov
test
mov
rcl
scas
mov
popf
dec
lret
ljmp
pop
mov
mov
pop
lods
arpl
cld
pop
jae
ret
shrl
insb
fisttps
xchg
aaa
stc
insb
bound
addr16
add
jg
mov
shrl
out
fldcw
fs
or
dec
push
sbb
and
inc
mov
sub
pop
and
adc
je
out
cs
push
out
dec
mov
sbb
leave
loope
or
je
sbb
push
push
inc
popw
cli
adc
int3
xor
repz
mov
adc
movsl
mov
subl
addr16
jne
pop
sub
or
mov
cs
stc
pop
sub
adc
shl
pop
stos
iret
xchg
mov
jb
icebp
and
xor
lock
add
inc
add
mov
pop
sub
inc
dec
stos
mov
cmpsb
pop
cmp
lret
ret
outsl
das
dec
mov
into
pop
js
adc
jae
and
in
inc
mov
sbb
sub
dec
in
xchg
or
mov
xor
lods
ja
in
aas
dec
pop
xchg
cld
mov
sub
icebp
loopne
sub
out
out
jg
jbe
cmp
pop
aam
sbb
jno
les
dec
cld
shlb
cld
pop
and
xchg
lahf
out
xor
aas
push
jnp
clc
cli
push
ret
mov
movsl
divb
icebp
add
cmp
cmp
pusha
fsts
and
stos
adc
cmp
addr16
mov
stc
mulb
cs
mov
mov
rcl
and
bound
lods
mov
mov
notl
dec
je
sub
in
jnp
fstpt
inc
dec
das
pusha
orb
mov
test
ret
outsl
jne
adc
cmpl
outsb
jmp
sbb
addr16
je
stc
xchg
out
call
xchg
mov
xchg
jecxz
movsl
cmp
sub
xchg
cld
inc
cs
mov
mov
dec
stc
je
cmp
inc
popa
xor
popf
jo
sub
mov
jno
adc
fld
ljmp
mov
jg
push
inc
push
mov
loopne
pop
iret
aad
xor
sti
lahf
cmp
in
xchg
aaa
mov
ret
mov
loopne
add
mov
rcrb
sbb
imull
adc
dec
sti
add
add
loopne
add
fcmovnu
jle
cmp
push
and
add
test
pop
popf
cmp
nop
push
and
pop
mov
jns
stc
xchg
subl
out
push
lods
push
inc
lock
sbb
adc
nop
lods
jbe
das
pop
dec
rcr
or
lcall
je
loopne
outsl
or
stos
ss
out
addr16
cmp
mov
dec
pusha
mov
pop
cmp
push
mov
add
bound
sbb
pop
push
and
inc
push
in
fcomps
adc
repnz
xorl
push
xchg
mov
outsb
cwtl
mov
std
inc
dec
push
in
push
adc
jns
and
stc
xor
lea
pushw
imul
ret
sbbb
leave
sub
push
jle
inc
scas
rol
neg
into
add
fwait
int
mov
mov
xchg
repz
cmpsl
pop
sti
fwait
shll
sahf
fsubrs
cli
push
out
test
loope
nop
sub
fldenv
mov
sbb
int3
lcall
mov
sub
mov
jo
scas
popf
jb
xor
das
bound
sarl
cmp
mov
lcall
jp
cltd
cli
xchg
movsl
iret
dec
lret
xchg
pop
insb
jo
cmpsl
xchg
movsl
sbb
adc
mov
mov
adc
sub
cwtl
xchg
and
in
xchg
rep
push
mull
adc
das
mov
push
pushw
jo
or
pop
lods
sub
int
jnp
notl
andl
xchg
mov
mov
ds
or
fldl
push
jp
push
adc
ljmp
mov
aam
fwait
imul
fdivrl
xor
push
leave
scas
cmp
sub
movsb
sub
movsb
push
mov
push
in
adc
push
inc
dec
mov
push
into
and
push
aad
idivl
mov
push
in
icebp
jno
xor
enter
xor
xchg
insb
sahf
or
lret
inc
movsl
nop
dec
fnstcw
mov
addb
or
inc
xchg
adc
mov
and
adc
stos
xor
xchg
push
fists
xchg
adc
xor
shr
arpl
daa
movsb
push
cli
out
or
imul
mov
mov
fwait
and
jb
push
fdivr
sbb
movsb
lret
jns
ret
push
in
add
jp
jmp
cltd
jb
push
add
mov
stos
je
mov
out
xor
shll
cmp
xchg
or
mov
loope
inc
daa
call
rclb
aad
loope
cmp
lock
add
shrb
lahf
clc
int3
ret
push
dec
mov
mov
sbbl
xchg
xor
dec
and
fcomps
mov
cmpsl
sti
or
test
jecxz
cwtl
sbb
int3
jnp
divb
pop
notb
dec
dec
enter
pop
push
cmp
mov
xchg
sti
push
sub
js
pop
rcll
lock
iret
and
xchg
lds
sub
in
or
mov
mov
push
ret
lret
sbb
cmp
inc
pop
js
xchg
dec
divl
cmpsl
fnstcw
fwait
jno
dec
hlt
mov
mov
int
adc
jmp
pop
cmpsl
or
inc
mov
sbb
sbb
or
dec
and
rcrl
aaa
es
pop
addr16
xchg
jge
bound
arpl
jbe
or
adc
ljmp
push
cmp
and
ret
pop
in
loope
stc
scas
cwtl
push
mov
push
std
int3
xor
pop
cmp
shll
sub
in
call
push
cmc
and
hlt
push
sub
push
fnstcw
mov
int
inc
inc
lret
jge
stos
mov
jl,pt
fisubs
clc
lret
shlb
lret
insb
dec
sub
adc
jge
aas
dec
call
scas
sbb
jmp
in
sahf
stos
loope
loopne
pop
push
mov
mov
out
je
rolb
or
push
adc
adc
scas
lods
imul
es
stc
pop
pop
sbbb
dec
leave
xlat
cmp
inc
mov
test
adc
cld
or
iret
inc
mov
and
into
jae
movsb
sub
fnsave
xor
outsl
adc
ret
in
dec
adc
push
lret
mov
xor
mov
icebp
in
dec
lods
mov
xchg
pusha
pop
push
out
xchg
or
or
or
repnz
cmpsl
xor
outsb
insl
push
leave
ror
mov
fisubl
arpl
call
in
into
loopne
mov
pop
std
push
jg
aas
pushf
and
jmp
inc
push
arpl
fdivrl
xor
fs
fisubrl
and
mov
addb
mov
add
scas
mov
sbb
es
push
or
adc
nop
cmp
mov
mov
je
xorl
inc
fldt
mov
jnp
and
in
aam
mov
ja
add
cmpsb
xchg
and
sub
cmpb
jbe
xchg
mov
std
lret
push
popf
pop
mov
xchg
cli
out
mov
dec
ret
jne
stos
jmp
sub
mov
xor
push
sahf
lock
loope
lahf
xor
sub
push
lock
mov
sahf
cmc
lahf
in
sub
clc
add
push
decb
loop
bound
lods
sbb
cmp
and
test
andl
fnstsw
ljmp
call
movsb
out
out
pmulhuw
test
push
mov
xchg
test
xor
aaa
xor
imul
mov
sub
add
push
and
in
rcrb
sbb
imul
dec
or
jg
mov
sti
lahf
mov
scas
cmpsl
gs
dec
mov
xchg
repnz
aaa
inc
frstor
or
add
push
fstpt
repz
add
add
lods
addl
fldl2t
outsl
push
insb
mov
sahf
inc
dec
mov
pop
test
aas
sub
push
pushf
shlb
les
lock
inc
popf
xchg
inc
push
outsb
inc
xchg
push
or
aad
dec
pop
aaa
jle
add
arpl
or
cmp
and
cli
fistpll
adc
jp
add
js
or
stos
dec
sub
sti
adc
and
pop
sbb
in
push
subl
imul
fsts
push
inc
in
repz
hlt
mov
adc
test
push
out
mov
jp
in
mov
mov
es
imul
push
jns
sahf
or
sbb
in
add
and
or
mov
stc
xor
push
jae
ja,pt
daa
push
xchg
jne
imul
pop
pushf
in
sbb
out
cmc
jle
sbb
xor
xchg
stos
aas
mov
cld
dec
cld
dec
mov
mov
jo
sahf
adc
push
mov
pop
adc
xor
or
enter
ja
lret
mov
insb
inc
xor
iret
jne
push
arpl
and
pop
fs
int3
call
hlt
xchg
lea
outsl
pushf
or
push
mov
mov
inc
xchg
pop
ud2
ds
jle
jg
jae
jle
out
push
mov
pcmpeqd
inc
lcall
xchg
mov
jmp
sbb
fdivs
insb
sbb
sub
sarb
mov
push
mov
dec
flds
testl
xchg
pop
aam
std
xchg
mov
dec
test
stc
pushf
sbb
cmp
sub
sub
stos
jnp
add
push
sbb
xchg
jo
movsb
repnz
mov
adc
hlt
ret
movsl
sub
enter
mov
jae
sub
fnstcw
push
aas
rcr
imul
shl
scas
pop
in
xor
lock
insl
push
mov
fistpll
lcall
imull
jge
idivb
popa
in
iret
lods
adc
movl
mov
rcrl
push
jmp
jnp
std
push
dec
stos
fcmovnb
ret
les
das
pop
jg
cmp
xchg
aad
movsl
mov
aaa
lret
das
mov
lret
data16
sbb
nop
test
xor
pop
icebp
mov
rcrb
and
adc
xchg
dec
jo
pushl
push
mov
add
int
push
and
jl
movsb
inc
ret
enter
repnz
push
dec
mov
xor
stos
icebp
out
push
out
subb
and
inc
fwait
adc
loop
or
fnsave
sbb
xchg
pop
stc
sub
cli
lds
fcoml
and
addr16
inc
ret
mov
adc
jmp
sbb
mov
sbb
hlt
xor
mov
das
pop
xchg
jae
adc
mov
mov
pop
sub
out
int3
jg
idivb
pop
mov
nop
jnp
fwait
or
push
cmp
dec
ljmp
push
gs
mov
movsb
ja
or
insb
or
add
imul
data16
and
inc
daa
sti
and
push
jl
in
sub
popa
fs
inc
cmp
mov
fcomip
rcl
jl
pop
lea
add
xor
mov
adc
mov
in
inc
sbb
scas
out
jp
pmulhw
clc
sub
cwtl
xchg
je
pop
inc
mov
roll
inc
jmp
cs
mov
mov
fistps
cmp
aad
add
fyl2x
cmp
pop
out
sarl
sbb
out
call
inc
fs
aam
hlt
mov
mull
add
rcll
aaa
xlat
jo
lods
inc
sub
shlb
into
mov
in
pop
adc
push
nop
in
cmpsb
insl
inc
push
xchg
loopne
ljmp
cmp
call
or
jno
add
repz
push
repz
jmp
xor
add
dec
cmpsl
repz
fwait
cltd
sbb
push
sbb
ficoml
out
push
pop
push
jle
jno
adc
dec
dec
ljmp
push
das
and
std
pushf
ss
xor
or
mov
ja
mov
ret
push
daa
out
dec
int
push
push
lret
add
push
insb
mov
outsl
loop
xor
pushf
sbb
add
mov
xorl
mov
cmp
lock
add
lods
dec
or
push
add
into
mov
fidivrl
sub
xchg
mov
call
decb
jns
aas
lds
mov
jmp
push
cmp
or
mov
dec
xor
mov
xor
fwait
cli
or
aaa
cmp
clc
notl
sub
xor
sub
sbb
cmp
push
inc
pop
jecxz
stos
call
jbe
data16
push
shlb
sbb
jns
xchg
ds
cmc
jp
lret
mov
cmpsl
adc
dec
sbb
jl
cmpsl
es
ds
adc
stc
cmpb
push
mov
ljmp
xchg
lds
out
pop
xor
ror
std
fdivl
mov
in
cmpsb
clc
arpl
dec
push
lock
mov
repnz
in
cmp
enter
push
mov
jae
mov
push
xor
dec
jb
loopne
ds
cmp
mov
mov
loop
push
repz
xor
cmp
movsb
and
xor
cmp
mov
arpl
jg
stos
cwtl
mov
push
rclb
movsb
push
loopne
pop
popa
shll
lods
call
sbb
or
or
cld
imul
dec
bound
mov
add
pop
cwtl
adc
call
repnz
xchg
and
orl
fucomi
add
ljmp
push
add
push
in
arpl
pop
insl
orb
xchg
jne
pop
dec
cmpb
pop
in
cmp
pop
xchg
jbe
mov
mov
enter
jno
jge
sub
mov
cmc
cmp
xchg
cmp
push
push
fistpll
outsb
xor
cmp
or
gs
adc
dec
out
push
mov
xor
fcompl
pop
cli
add
nop/reserved
xor
lods
mov
insl
jno
out
and
xchg
jns
in
jb
inc
add
out
enter
mov
add
xor
addr16
aad
xor
cltd
hlt
nop
sub
mov
and
add
leave
dec
mov
test
adc
inc
mov
dec
loopne
sub
lret
xor
jb
jo
lods
pushf
lahf
pop
xchg
sahf
js,pt
cmp
mov
imul
ja
and
cmp
into
push
jp
sbb
add
mov
gs
inc
je
cltd
movsb
daa
sarl
aas
imul
insl
daa
out
sbb
fs
lret
das
insl
dec
xlat
cli
mov
jge
orl
add
mov
rorb
jmp
test
mov
and
stc
sub
out
out
jmp
push
inc
ret
xchg
add
jbe
sub
pushl
sarb
xchg
jae
push
test
push
cmc
sahf
mov
add
popa
icebp
les
cld
shll
push
push
mov
adc
and
jo
insl
dec
fwait
mov
test
rsqrtps
and
mov
fcoml
mov
iret
hlt
lds
fcompl
and
cltd
adc
jmp
in
cltd
int
mov
testl
cmp
add
dec
shll
or
fists
jns
cmc
lods
scas
rcll
lds
adc
sbb
jns
lcall
hlt
ror
inc
pop
jmp
xor
lret
sbb
ret
or
lods
leave
shrb
sub
cli
adc
xchg
insb
in
mov
in
scas
daa
ss
mov
inc
pop
loope
sub
mov
ljmp
mov
fstl
xchg
mov
adc
mov
mov
and
dec
mov
push
loop
jle
mov
xor
arpl
mov
daa
enter
sub
push
sub
jo
test
dec
test
iret
rolb
fmul
shll
jo
sub
xlat
inc
leave
sub
adc
push
out
mov
jl
jae
lock
cmpsl
cmp
movsl
xchg
cmp
pop
cmp
pop
xchg
in
fisttpll
popa
and
in
orl
pop
loopne
pushf
xor
ljmp
das
adc
pop
mov
xlat
in
pop
ja
call
das
lods
movsl
stos
mov
sub
mov
add
stos
std
jae
jno
test
xlat
aam
dec
xchg
cld
icebp
mov
rcrl
cmp
loopne
xlat
pop
cmc
lea
or
sub
sbb
adc
clc
in
arpl
add
fdivrl
mov
sbb
mov
mov
mov
pop
daa
jne
inc
aas
sbb
int
ja
mov
xchg
pextrw
push
sbb
ljmp
ret
dec
sub
add
dec
bound
gs
pop
xchg
shlb
jae
cld
ss
mov
cmc
scas
test
dec
jl
mov
clc
int3
gs
sbb
outsb
mov
or
jno
rclb
jne
hlt
fisubl
fucomp
std
aam
or
cmpsl
jg
outsb
sbb
add
jns
icebp
aad
push
divb
stc
jns
pop
arpl
enter
pop
xchg
push
addb
jle
sub
ds
mov
jg
mov
fwait
push
mov
xchg
inc
jp
aad
push
fistps
fisubl
add
out
sub
rorb
sahf
jns
adcl
loope
fiadds
arpl
pushf
ja
and
cmp
sbb
jno
push
fdivrs
ror
push
into
xchg
mov
std
negl
mov
adc
cmpsl
adc
ds
int3
out
push
out
clc
dec
pusha
out
cmp
pop
xchg
mov
inc
sub
pop
cmpsb
push
pop
in
addr16
nop
xor
cmc
xor
negb
mov
out
or
dec
shlb
call
cmp
std
popa
mov
dec
or
popf
cld
clc
pop
inc
sti
lds
sbb
cmp
or
nop
cli
fmuls
movsl
mov
mov
scas
cmpsb
jb
pop
lcall
dec
mov
loopne
xor
into
pushf
inc
fld
dec
clc
cmp
adc
test
imul
test
lods
popa
outsl
push
adc
push
mov
insb
scas
jne
push
jle
fldl
dec
lods
push
adc
ss
dec
movsl
into
es
sarl
mov
inc
mov
push
xchg
test
and
add
sbb
shlb
and
shlb
rcr
cmpsb
nop
out
insl
mov
ljmp
adc
repnz
jae
push
adc
ret
lea
xor
leave
iret
add
leave
cmp
or
clc
cld
mov
jmp
push
inc
push
ret
add
dec
mov
fnstsw
xchg
mov
add
inc
mov
mov
rorb
addr16
xlat
fs
cmp
fdivl
je
cld
mov
sahf
int3
jne
adc
movsb
cmpsl
push
mov
adc
push
adc
add
sahf
test
xchg
push
xor
inc
lcall
cld
xchg
jbe
fwait
shll
mov
and
jns
pop
mov
xchg
in
jecxz
pop
push
mov
std
sbb
push
or
test
mov
scas
jns
outsb
lods
sub
sub
sub
lods
xor
sbb
sbb
and
ret
rclb
stos
mov
lock
test
notl
pop
imul
lock
lds
mov
mov
aas
in
jns
pop
cmp
adc
push
fidivrs
add
cmp
xchg
daa
mov
sti
repz
xlat
jle
in
cmp
dec
mov
xchg
lcall
mov
cltd
loop
gs
mov
xchg
fwait
arpl
cmp
and
pushf
sti
stos
js
test
addr16
jb
dec
repz
cmp
push
sti
fidivrl
or
lahf
mov
jmp
mov
xor
xor
jg
dec
sub
jecxz
xor
fisubrs
dec
call
jne
adc
bound
adc
cld
sbb
mov
dec
pop
add
dec
mov
cmpsl
jecxz
jmp
adc
pop
xorl
jle
adc
jae
mov
jle
test
out
ss
shrl
add
mov
sub
imul
sbb
bound
push
add
iret
jge
inc
cmp
sbb
cmp
mov
insl
das
shl
xchg
clc
xlat
sti
inc
push
ja
mov
jne
jae
test
pushf
maxps
push
sbb
pop
or
shrb
das
xchg
xor
dec
gs
xchg
sahf
fsubl
and
or
or
push
push
dec
push
xchg
pusha
xchg
xorl
shll
xchg
icebp
clc
pop
mov
sbb
int
out
pusha
xor
popa
xchg
xor
loop
add
js
add
and
or
testb
add
dec
sbb
adc
inc
mov
pop
fcomip
xchg
shlb
jle
arpl
sahf
repnz
lds
jmp
dec
fs
mov
js
xor
stos
ja
in
rclb
add
push
aaa
lcall
mov
jbe
add
push
subl
mov
mov
pop
gs
jnp
loop
mov
dec
mov
es
iret
rcrl
dec
hlt
fcoml
mov
lds
aam
lea
xchg
and
mov
call
add
sti
lahf
sub
and
sti
sub
addl
std
daa
andl
aad
testl
dec
mov
mov
xchg
add
shl
ret
pop
jns
icebp
inc
dec
sbb
sub
adc
and
rorl
add
pop
or
out
std
lret
loope
or
pop
push
push
gs
icebp
dec
sub
orl
push
cmp
ret
adc
mov
aam
sub
inc
imul
and
mov
xchg
sbb
sti
add
shll
mov
xchg
inc
les
adc
xchg
add
ret
not
hlt
cmc
lahf
aad
nop
sbb
mov
fistps
adc
xor
xor
ds
inc
mov
lahf
into
dec
ficomps
iret
sti
add
sti
lods
int3
adc
jbe
stos
imul
mov
ret
inc
and
roll
enter
rcr
inc
xor
push
push
scas
cmpsl
push
or
test
out
inc
shlb
shl
pop
or
push
fadd
xchg
loopne
push
call
aas
xchg
sbb
push
lcall
add
mov
and
inc
roll
outsl
inc
adc
fidivrl
cmp
int3
aaa
mov
push
scas
lahf
sub
push
test
fsubl
adc
or
mov
mov
and
popf
test
shrl
push
js
push
jp
cmp
in
in
hlt
pop
jno
ret
das
rcr
jae
fisubrl
inc
mov
inc
sbb
or
jbe
lock
out
dec
movsb
cmp
sbb
mov
popa
mov
push
sbb
mov
mov
pop
mov
add
sahf
sahf
jmp
insb
cwtl
call
sbb
add
dec
mov
aas
dec
icebp
int
mov
jl
mov
mov
sbb
or
imul
icebp
ret
loope
jb
and
repnz
movsb
sarl
test
sub
stos
mov
jge
fcom
pop
adc
leave
jae
cmc
mov
pop
adc
xchg
ret
stos
or
cli
cmpsl
add
mov
insb
ds
push
cli
data16
enter
sbb
mov
jno
push
cmpsl
inc
xor
sbbl
es
jbe
mov
test
mov
daa
cltd
jns
dec
inc
xor
insb
xchg
push
or
xor
sub
adc
adc
cmp
test
jbe
aaa
mov
adc
insl
daa
fucomi
shr
sub
popf
outsl
mov
xor
jbe
fldenv
aam
jne
je
ficompl
sub
into
inc
outsl
pop
lock
mov
pop
mov
push
movsb
push
inc
fistpl
adc
adc
push
or
adc
cmpsb
dec
aam
rcl
lret
xchg
xor
enter
sti
sub
out
sub
hlt
mov
in
and
mov
push
cmp
jnp
dec
mov
out
cmpsl
inc
dec
mov
test
adc
push
and
sbb
in
rcll
add
lretw
add
mov
jnp
outsb
mov
or
mov
xor
repnz
dec
fsub
adc
sbb
jae
cmpsb
mov
in
adc
scas
push
scas
xchg
or
mov
jbe
jo
xchg
pop
xchg
lea
add
jne
push
rep
in
mov
sub
and
mov
inc
pop
test
add
fidivrs
sub
test
jo
sub
mov
mov
jg
scas
push
lea
imul
sti
inc
clc
cmpsl
sti
push
stos
xchg
push
out
and
icebp
outsb
dec
sahf
rcll
pop
imul
inc
sub
dec
stos
les
int
ja
adc
or
imul
sub
mov
jl
inc
inc
mov
in
pushf
xlat
or
rorl
mov
push
mov
jbe
sub
insl
xor
xchg
lods
xor
sahf
mov
aaa
pusha
subb
cld
out
mov
push
loope
ljmpw
dec
popa
bound
fadds
xor
int
add
cs
fldenv
and
fisubl
dec
int
add
gs
xor
hlt
xchg
leave
enter
lret
out
and
sbb
mov
pushl
and
mov
cmp
xchg
push
rcrl
inc
inc
mov
inc
xchg
sub
rorl
xor
test
rorl
inc
inc
jnp
ficomps
dec
data16
adc
cmp
add
orl
into
in
repz
test
sub
mov
mov
mov
mov
cld
xchg
movsb
push
inc
loope
and
push
cmc
iret
repz
mov
xor
jmp
adc
lods
call
cli
jmp
ds
stos
sbb
xor
popa
mov
mov
jg
scas
scas
sub
fildl
js
insl
jnp
jae
into
mov
das
fisttps
jge
or
mov
daa
repnz
jno
adc
xlat
daa
rcll
in
jne
sub
or
outsl
stos
fildll
adc
imul
cs
insb
and
mov
test
mulb
fldl2t
xor
out
xchg
outsl
push
pop
dec
cmp
xchg
push
cmc
xor
cmp
clc
loopne
hlt
add
cmpsl
push
add
or
shll
inc
into
pushf
jecxz
add
je
daa
dec
sahf
cmp
xor
frstor
dec
adc
movsl
xor
jae
mov
adc
inc
xchg
aad
packsswb
inc
ret
mov
adc
popf
mov
mov
push
push
test
ret
adc
sti
push
sbb
cwtl
rorl
xchg
jb
ja
sbb
mov
lcall
dec
jl
xor
push
jne
fmull
in
inc
mov
mov
mov
sbbb
in
adc
dec
loop
xchg
jg
pusha
cld
jecxz
outsl
sarb
mov
stc
leave
sub
mov
mov
das
push
mov
int3
jmp
in
test
shrb
lds
adc
test
xchg
cmp
adc
jne
jmp
rcll
stos
push
push
and
sbb
adcl
out
cwtl
fidivs
rorl
jns
movsl
and
out
xchg
or
subb
jle
or
xlat
cmpsb
scas
mov
pop
jnp
mov
jne
stos
repnz
flds
pusha
inc
outsb
sbb
movsl
shll
data16
insl
cmc
icebp
ret
testl
loopne
cs
pop
sarb
loope
sub
mov
jne
and
push
enter
lock
jmp
jecxz
jecxz
mov
stos
add
xchg
mov
push
jg
sub
sti
popf
add
mov
mov
or
adc
cmc
ljmp
out
nop
mov
fldenv
mov
call
stos
cmc
cmp
fadd
adc
mov
cwtl
loope
push
test
xchg
cmp
jnp
push
sbb
int
sub
sub
xchg
sub
jbe
cmp
adc
mov
xor
jp
addl
cmp
sbb
lods
push
pop
sub
gs
andb
scas
or
mov
aaa
xchg
xchg
stos
adcb
arpl
or
xchg
adcb
clc
mov
sub
mov
inc
movsb
adc
je
out
leave
inc
push
test
iret
and
movl
mov
scas
aas
xchg
clc
notl
movsb
sub
mov
sub
ja
sbb
pop
mov
scas
push
mov
jb
push
mov
pushf
add
mov
ret
jmp
jle
ror
call
outsl
mov
enter
mov
in
pushf
lods
mov
mov
push
adc
out
jbe
stos
add
daa
dec
jo
xchg
push
inc
jae
push
mov
loopne
push
jno
sub
int
sbb
adc
test
sbb
push
orb
jnp
les
popa
les
pop
push
inc
rcrb
jbe
sarb
cmp
pushf
nop
pop
movsl
aam
enter
hlt
pop
push
fisubrl
mov
and
or
aas
cs
or
adc
fsubr
aaa
scas
in
rorb
mov
mov
shll
cli
inc
cmpsb
mov
mov
rorl
fmul
call
mov
and
jmp
jae
adc
pop
pushf
insl
gs
mov
adc
es
add
mov
push
sbb
dec
pop
nop
insl
repz
cmp
pop
mov
icebp
cmpsl
jae
and
fs
cs
gs
jbe
fildll
push
dec
fistps
push
fistps
mov
sbb
adc
inc
adc
push
shll
add
sbb
sub
jp
xchg
int3
out
mov
fnstsw
push
cmp
sbb
adc
and
pand
enter
in
adc
aaa
add
mov
xor
data16
push
jne
loop
repnz
mov
mov
rclb
mov
repz
push
jbe
mov
sub
mov
adc
and
sbb
jl
cmp
mov
add
popa
aaa
adcb
fisubl
movsl
aad
ljmp
fidivrs
int3
push
adc
xor
repnz
fwait
ret
jb
out
lods
fwait
stos
jne
int
pop
pusha
rorl
sbb
loop
xchg
mov
or
outsl
xor
scas
and
jecxz
lock
dec
insb
sbb
cmp
nop
aam
pop
cmpsb
add
mov
push
lods
data16
notl
xchg
sbb
push
xor
loope
aam
shr
push
or
and
scas
sbb
dec
add
cmpl
lock
pusha
dec
xor
xchg
jg
mov
jns
shll
outsl
sti
mov
jae
or
mov
aas
xchg
fsubrs
shlb
add
clc
aas
les
sbb
das
in
outsb
adc
insl
in
cltd
mov
dec
nop
pop
inc
mov
cmp
lahf
cmpsb
push
out
and
shlb
jne
and
xchg
hlt
jns
push
loopne
add
pop
sbbb
addr16
pop
xchg
sub
popa
out
into
popa
pop
adc
xchg
sub
cmpsl
popa
or
mov
cmpsl
adc
add
out
out
or
mov
dec
mov
addr16
ret
jb
mov
adc
dec
movsb
mov
push
in
pushf
push
cltd
and
xor
imul
lahf
sub
out
or
pop
rolb
test
aad
stos
jge
dec
out
xor
jo
mov
pop
out
inc
fcomip
cmp
imul
adc
neg
int
bound
push
adc
ret
add
out
pop
shlb
rolb
sarl
fcmovnb
aaa
lret
das
mov
lea
test
jle
leave
adc
out
js
dec
popa
iret
xchg
xchg
pop
aad
jae
pop
aaa
cmp
jge
sub
mov
mov
fimuls
movsb
pop
or
adc
xor
dec
mov
into
jecxz
dec
call
push
cmp
ss
fistpll
jns
sbbb
mov
jbe
pop
pop
ret
xor
mov
fadds
fisubrl
int3
push
push
test
adc
add
lcall
ja
lds
aaa
jns
sbb
mov
cmp
int
dec
xor
lods
fsubp
xor
movsb
shrl
sub
cmc
mov
push
cmp
pushl
sbb
sub
rclb
xchg
mov
sbb
pop
movsl
out
scas
dec
fcmove
push
xlat
xor
mov
add
or
inc
pop
jl
stos
lahf
cmp
dec
cmp
filds
jmp
jg
addl
xor
div
test
into
jnp
add
stos
sub
add
cmp
jmp
jns
or
loopw
jb
xor
call
push
jl
nop
mov
mov
add
sub
adc
xor
lea
jle
dec
mov
cli
add
cli
lret
call
insb
cld
out
fisubrs
push
jns
hlt
jno
fs
jno
js
icebp
and
addl
mov
inc
inc
stos
ss
xchg
sti
sbb
jae
mov
jbe
addb
popl
inc
sub
jl
ret
sbb
xchg
scas
xor
push
shrl
roll
lret
mov
movsb
mov
rcrl
xchg
cli
pop
pushf
adc
fwait
push
adc
mov
pop
aaa
cmpsl
aad
in
mov
bound
lret
push
xchg
xor
les
mov
pop
jmp
inc
cmp
es
jbe
adc
xchg
xor
cmp
mov
sarb
in
add
jg
mov
add
jle
mov
popa
push
in
xchg
aaa
and
sub
push
adc
out
add
push
movsb
cld
test
ficomps
sahf
sub
jb
scas
jns
xchg
mov
movsb
ficoms
out
push
xchg
lret
data16
push
mov
sub
pop
lock
inc
shrl
mov
mov
xchg
sub
mov
ret
incb
or
mov
sbb
jmp
outsb
lret
jge
enter
arpl
hlt
sti
fwait
lea
push
adc
repnz
fists
xchg
jp
mov
sbb
cmp
cmp
mov
xor
fnsave
mov
or
mov
mov
adc
jecxz
enter
icebp
hlt
sahf
mov
test
jae
scas
lods
mov
int
pop
fadd
out
pop
outsl
fsubrs
add
add
int3
xchg
repnz
adc
mov
jb
cs
out
pop
mov
repnz
lods
mov
pop
es
popf
mov
sub
xor
xchg
add
stos
out
mov
sub
enter
sbbl
ds
push
cld
fwait
into
pop
mov
add
ror
sbb
fdivs
rcrl
push
sub
mov
cmp
mov
cmp
dec
xor
fimuls
repz
adc
repz
sti
mov
xchg
clc
cs
pop
lret
stc
sbb
sar
dec
lock
fstps
mov
repnz
ds
add
ret
clc
out
std
imul
js
stos
jle
nop
sub
sub
cwtl
pop
clc
xchg
mov
and
ret
push
lret
jle
xor
loopne
adc
cmp
or
mov
mov
fisubs
ret
mov
lock
xchg
pop
dec
sub
mov
mov
sub
cmp
addr16
push
dec
pusha
roll
jmp
mov
test
orb
shrl
or
lods
lods
and
jl
mov
push
lahf
dec
jns
fucomip
adc
mov
sub
mov
dec
jb
insl
push
sti
fwait
push
xorl
and
sub
mov
dec
push
jecxz
lcall
addps
insl
in
clc
mov
imul
test
jg
imul
into
imul
cwtl
out
sbb
adc
or
fisubrl
movsl
imul
outsl
pushw
repnz
fldcw
xchg
xchg
imul
shl
xchg
pop
cmp
jo
cmp
dec
adcb
in
rcrl
sbb
and
sub
call
and
jbe
add
or
push
jns
sbb
push
pop
shrl
or
mov
fisubl
rclb
mov
pmullw
xchg
sbb
bnd
sbb
mov
lods
xchg
pop
movsl
add
fwait
push
sarb
jg
stos
andb
dec
sbb
push
fcoms
xor
xchg
sub
add
or
jb
lds
in
xchg
xor
ret
xlat
mov
mov
dec
dec
fdivrl
sub
cmp
lods
sub
jb
loopne
stos
push
rcrl
jle
or
sub
add
arpl
std
ds
xchg
das
inc
out
inc
pop
mov
cltd
inc
lahf
jl
hlt
push
xor
xchg
pop
pop
loop
sub
cmpsb
leave
and
fdivp
in
xchg
jns
lret
mov
mov
clc
lods
mov
inc
xorb
ljmp
popa
or
mov
sub
dec
ss
les
push
in
ds
int3
push
mov
pop
mov
mov
lcall
or
or
xchg
add
adc
adc
push
sbb
shl
imul
into
xchg
push
shrl
pop
mov
xor
or
pop
inc
xchg
dec
shlb
movsb
shlb
sbb
or
test
adc
test
repz
jecxz
insl
xchg
notb
rcll
mov
shlb
xchg
pushf
cs
sarl
push
pop
lret
ret
out
or
test
dec
add
int3
push
addr16
outsl
out
les
fistpll
sbb
fdivrl
movsb
je
arpl
fldenv
push
mov
repnz
mov
addr16
in
adc
jb
ja
rclb
pop
loope
or
xchg
or
into
ljmp
xchg
fstl
push
xchg
movsb
pop
lea
rclb
repnz
mov
jo
dec
icebp
pop
mov
jbe
js
lods
nop
jle
mov
stos
leave
sbb
ja
inc
add
out
sti
insl
lds
out
xchg
rcl
push
mov
call
outsl
mov
xor
jae
fldt
outsl
fsubrs
add
push
stos
dec
mov
std
pop
dec
xor
xrelease
jle
and
sub
sbb
xor
ja
fiaddl
divl
popf
sar
scas
mov
lahf
push
xor
jmp
or
mov
dec
cmp
test
pop
fbld
or
xor
cld
aas
ret
or
in
sbbb
cwtl
jge
xchg
nop
iret
pop
pop
pop
lret
addr16
fs
mov
add
add
fldenv
pop
xchg
outsb
enter
mov
test
insl
add
jnp
push
rcrb
into
cmp
mov
sub
pop
insl
cmpb
mov
pop
mov
jae
mov
push
insl
add
dec
lods
push
mov
xchg
popa
push
push
aas
mov
jnp
dec
jmp
and
push
scas
push
xchg
and
push
mov
pop
sub
mov
mov
xchg
xor
subl
jns
pop
roll
xor
inc
mov
orb
call
dec
ror
vpsrlw
push
lock
cmc
mov
mov
data16
dec
popf
cmp
icebp
les
movsb
jmp
cltd
arpl
scas
aam
xchg
mov
mov
or
lahf
push
sbb
adc
xlat
addr16
xor
hlt
popa
xlat
out
add
insb
fwait
push
sbb
ds
cmp
fs
fisttpl
je
aas
xchg
or
loope
das
sbb
sub
fwait
dec
mov
filds
lock
push
sub
inc
adc
sbb
fs
jge
xchg
jo
sbb
iret
pop
cmovns
xor
jb
ja
aaa
dec
clc
or
hlt
in
je
aad
pop
ljmp
or
lock
xor
lods
repz
mov
and
and
pop
and
jnp
pop
sub
sbb
repnz
das
repnz
add
sarl
mov
fwait
and
or
jne
inc
addl
jo
pop
cmp
adc
leave
fldenv
xor
sbb
and
je
es
in
pop
xor
mov
out
aad
leave
in
cmc
jo
jno
push
mov
sti
xor
sbb
sbb
xchg
testl
sbb
movsl
out
stc
mov
or
movsb
xchg
das
mov
subb
jae
add
jne
mov
cli
cmp
in
lahf
jmp
stos
adc
enter
add
or
cmp
push
std
lahf
out
dec
jge
bts
jno
mov
cmp
push
mov
js
mov
movsl
cmp
adc
mov
xor
mov
add
bound
loopne
mov
lods
cmp
in
sahf
ljmp
pop
mov
pop
outsb
mov
push
xor
and
adc
dec
jecxz
dec
mov
aad
lret
cmp
fs
mov
mov
xor
movsb
add
xor
or
cmpsb
jl
cwtl
int3
xchg
ss
xchg
aam
xor
outsl
sbb
iret
dec
jne
and
hlt
mov
shlb
test
cmp
lcall
dec
rclb
and
je
xor
out
cmp
bound
xchg
hlt
or
imul
leave
jmp
jbe
dec
mov
and
cmp
out
mov
enter
xchg
mov
mov
jae
mov
bound
mov
xor
je
test
lret
and
jbe
pop
mov
mov
sub
push
add
shrb
cmp
jbe
shrl
add
or
mulb
dec
lods
mov
jnp
std
and
and
and
in
cmc
sub
sahf
jae
mov
repnz
and
dec
lock
push
push
loope
mov
xchg
test
std
out
sub
fcmovnbe
mov
pop
and
add
push
inc
lock
adc
frstor
call
dec
test
movsl
pop
dec
or
sbb
push
lret
inc
dec
jecxz
mov
and
dec
pop
into
mov
xor
pop
je
loop
push
jne
aaa
arpl
and
outsb
jle
mov
sysexit
in
push
subb
dec
clc
mov
dec
repnz
cmp
dec
clc
and
mov
outsl
jne
sub
push
xlat
push
bound
or
lods
and
sbb
cmpsb
in
cwtl
shl
repz
scas
adc
lret
sbbl
mov
add
sti
jns
dec
sbb
mov
cli
adc
testl
je
xchg
mov
leave
ret
lret
jns
xchg
repz
dec
push
jo
into
xchg
aam
out
xchg
cmpsl
mov
out
mov
js
xchg
cmp
jmp
dec
lock
in
inc
jmp
lods
arpl
and
popf
lret
push
push
popf
cmc
loope
xchg
xchg
in
addr16
leave
ja
mov
mov
adc
pop
andb
xchg
flds
mov
test
or
insb
add
lea
lods
shlb
mov
xchg
jb
inc
cmp
jecxz
pop
sbbb
mov
mov
jnp
mov
pusha
das
loope
sub
mov
add
push
xchg
andl
xor
or
jp
movsb
sbb
js
scas
cmc
je
mov
stos
into
cmp
movsl
test
mov
push
dec
outsb
arpl
movsb
or
sbb
jp
xchg
cwtl
repz
sbb
cmc
icebp
xor
out
adc
bound
and
adc
push
es
sub
and
or
pop
xor
in
imul
repz
out
ss
xchg
rcrb
in
lock
jbe
lcall
pop
dec
xor
jae
movsl
stos
cmc
out
cs
jp
jl
shrl
xor
mov
add
xchg
fcomip
and
sbb
ljmp
push
out
pop
xchg
insl
es
out
rcrl
shlb
insl
fnsave
ret
adc
jne
and
stos
add
xor
dec
inc
mov
sub
xor
cmp
dec
mov
mov
inc
pop
pushf
fidivl
mov
inc
icebp
pushf
xchg
cmpsb
sub
popf
test
ret
mov
adc
outsl
test
flds
xlat
cmp
jp
cmp
es
and
outsb
cli
lea
push
jle
jae
and
call
out
mov
adc
fsubp
cmc
sbb
loopne
jecxz
and
cs
xor
jns
xor
popf
pop
jne
aad
movsl
push
or
outsb
xchg
add
lahf
test
push
ficompl
rol
sub
push
jnp
ss
iret
inc
nop
js
lret
add
jmp
adc
push
xchg
lock
jge
ja
mov
adc
popa
gs
cmpsl
imul
test
test
clc
mov
pop
jno
out
and
jb
es
data16
and
gs
mov
orl
jns
in
pop
mov
sbb
adc
jl
adc
addb
call
inc
xor
xor
mov
ffreep
sub
movl
gs
cmpsl
xor
andl
push
push
sbb
jp
or
xchg
stc
push
lea
xchg
js
data16
jo
pop
xlat
sub
stos
xor
push
sbb
jb
xor
jns
xchg
sub
add
mov
xchg
jns
jmp
fmuls
or
jno
cmpsb
inc
test
shlb
cli
sub
clc
xchg
mov
popf
cmc
mov
fstl
sub
dec
push
xor
or
dec
shll
daa
cmp
xchg
data16
ja
mov
ljmp
out
inc
repz
out
lcall
dec
cld
pushw
stc
lahf
cltd
shl
sbb
insl
loopne
cmp
dec
mov
or
pop
out
hlt
xchg
das
sbb
testb
cmpsl
fs
aaa
decl
inc
add
pop
inc
sarb
mov
xchg
push
pause
xchg
hlt
cmp
mov
int3
xchg
jb
lds
loope
push
mov
xor
std
cmp
loope
outsb
and
sub
lock
das
loopne
push
xlat
leave
mov
xchg
addl
cs
hlt
dec
addb
sti
gs
roll
adc
mov
rcr
dec
sbb
cltd
xchg
pusha
rorl
pushf
add
and
js
sbb
pop
adc
xor
lock
out
out
daa
xor
xor
lea
dec
ret
enter
vpunpcklbw
fsubrl
or
cwtl
jne
push
sub
dec
sbb
pop
mov
xchg
in
push
push
and
xchg
jb
cmp
out
xlat
dec
loopne
popa
popa
hlt
das
insb
add
sub
aam
das
clc
push
out
xchg
call
mov
or
jnp
les
dec
imul
sbb
out
adc
xor
inc
xchg
mov
test
aas
xorl
stc
xor
pop
xor
aam
int
and
es
ss
and
mov
cld
mov
or
movsl
movsl
or
cld
sub
inc
sbb
cltd
fwait
inc
jb
orl
dec
pop
xchg
fs
adc
dec
setbe
js
cmp
idivl
cmp
fldenv
or
push
xchg
fmuls
pop
mov
xchg
push
stos
pop
movsl
das
add
push
mov
and
inc
addl
out
jns
mov
mov
mov
out
in
sub
cmp
aas
push
shl
inc
sub
dec
out
add
cmp
mov
mov
mov
ja
fistpl
jecxz
cwtl
mov
mov
xchg
mov
shr
fistps
js
cmc
into
inc
sub
jmp
mov
das
xchg
mov
stos
adc
xchg
hlt
xlat
leave
repnz
xor
pop
lods
xchg
xlat
sub
insb
sub
outsl
pushf
lds
cmp
pop
push
or
mov
pushl
jno
jl
arpl
test
and
js
mov
jbe
scas
pop
push
mov
lcall
mov
ret
xchg
inc
call
rcrb
popaw
sub
nop
in
into
push
sub
fstpl
mov
ret
push
and
ret
mov
jg
sti
mov
mov
adc
in
adc
push
imul
cmp
mov
cmpsl
xchg
and
das
cmpsb
cli
js
and
sbb
cld
cmc
and
mov
hlt
js
mov
test
mov
aam
pop
inc
ja
dec
push
xlat
jg
cmpsl
push
sbb
rcrl
int
xor
loopne
jg
adc
out
pop
inc
ja
fidivl
pushf
xlat
stos
or
pop
call
mov
loope
mov
imul
xchg
leave
mov
les
pop
fdivs
dec
mov
imull
jmpw
fildl
in
sbb
test
lock
cli
ror
push
mov
add
inc
cli
mov
testb
outsl
popf
dec
xlat
fdivrs
mov
test
jne
mov
stc
push
inc
fnstcw
mov
xchg
nop
xchg
add
jecxz
and
in
adc
les
in
in
xchg
out
mov
and
or
cmp
and
in
leave
lods
arpl
fwait
rorl
les
add
push
loop
xor
es
jecxz
fsubrl
push
pop
mov
ss
mov
inc
dec
push
cs
shlb
mov
xchg
les
push
cmc
xchg
mov
sbb
push
adc
mov
pop
dec
add
xchg
cltd
je
push
mov
xchg
mov
fcmovnbe
popf
mov
mov
mov
jge
lret
push
fcmovb
std
out
iret
insb
aas
sbb
lods
test
inc
xchg
add
push
mov
fucomi
pop
or
cld
jbe
gs
or
cwtl
adc
scas
enter
jg
inc
clc
push
sbb
sbb
repnz
push
push
ljmp
fimuls
cmp
call
cmp
incl
and
or
mull
push
adc
jo
test
add
xchg
leave
fs
daa
mov
sbb
mulb
loope
mov
ficomps
inc
inc
push
mov
inc
mov
jmp
mov
fcom
je
sti
icebp
gs
subb
lcall
shll
or
sbb
dec
hlt
out
mov
call
clc
insb
loop
add
scas
sbb
insl
xor
and
pop
dec
dec
gs
push
fwait
push
mov
in
add
test
gs
lret
lcall
sub
sbb
mov
aas
sbb
aam
fidivs
jae
clc
xor
lock
movsb
addr16
mov
in
stos
movsl
or
inc
inc
cmp
or
cltd
pop
popa
loop
push
mov
mov
sbb
divb
inc
addr16
aas
sub
pop
jmp
xor
jg
mov
inc
xchg
lahf
fdiv
mull
dec
scas
push
adc
xchg
popa
jecxz
sub
lock
xlat
mov
pop
or
shll
cld
push
pop
and
jo
cmp
cmpsb
jns
mov
and
and
mov
lods
or
scas
andb
fsubrp
lds
pop
mov
addr16
mov
add
aaa
es
inc
adc
test
in
ss
push
cli
push
inc
into
test
sbb
in
sub
push
out
std
cltd
out
mov
inc
adc
adc
das
xchg
xchg
adcl
shlb
xor
mull
mov
dec
dec
in
popa
xchg
pop
hlt
inc
loopne
mov
out
shl
sahf
scas
in
shl
ret
push
inc
mov
mov
push
popa
push
movsb
je
cltd
dec
xchg
jo
inc
jnp
xor
xor
mov
jae
push
inc
or
xlat
aas
loop
rcl
jnp
jle
fcoml
dec
dec
or
sub
rcrb
mov
shlb
jge
cltd
sub
fsts
loopne
dec
dec
or
push
stos
and
mov
test
fdivl
push
adc
dec
or
xchg
push
popa
inc
pop
das
pop
in
jle
cmc
pop
jnp
cmpsl
cmpsl
sub
cmp
das
cmc
inc
push
movsb
mov
cmpsb
lcall
xchg
nop
in
or
imul
in
testb
xchg
sbb
sbb
inc
nop
mov
xchg
clc
inc
sahf
pop
jle
rolb
popl
sbb
xor
fisubl
sub
push
push
ret
jmp
xlat
call
iret
mov
loope
mov
cwtl
adc
mov
sbb
pop
sub
pop
into
lret
shrl
xchg
mov
enter
jbe
js
mov
or
enter
sub
std
add
xchg
rcl
pop
cli
xor
xchg
test
ljmp
je
loop
dec
pop
mov
pop
dec
xchg
aad
sbb
cmc
sub
mov
es
and
ja
das
out
add
xchg
fs
data16
test
ljmp
xchg
sub
jge
aam
jecxz
push
leave
cs
inc
push
pop
in
push
dec
xor
dec
subl
pop
sub
xlat
daa
jp
test
jnp
cmpsl
lods
mov
dec
lock
fnsave
stc
jge
test
repnz
mov
bound
dec
xchg
xchg
jl
push
cmc
push
std
push
mov
push
call
pop
pop
push
inc
lea
ja
mov
cmpsl
push
mov
adc
arpl
out
pop
sub
mov
outsb
scas
jge
lret
ret
jmp
lods
pop
add
xor
cmp
lahf
add
orb
cmp
jmp
pop
pop
ret
cmp
and
sar
in
mov
sbb
sbb
fwait
bound
pop
das
scas
and
popf
xchg
nop
pop
gs
nop
aas
jl
jns
or
xchg
xchg
mov
enter
sub
pop
in
jle
push
fisubs
adc
cmpsl
cs
add
xchg
and
cld
loopne
cmc
fld
negb
jno
icebp
dec
loope
mov
cmp
xchg
or
popf
xchg
repz
out
mov
hlt
shll
mov
lock
aaa
jae
sbb
mov
fisubl
or
or
js
pop
sbb
repnz
mov
mov
cltd
idivb
cltd
or
in
stos
xor
rclb
and
shlb
xchg
mov
push
jbe
push
pusha
dec
inc
mov
xchg
push
and
sub
cmp
dec
adc
jmp
pop
add
jge
test
xor
pop
dec
data16
and
pushf
cltd
in
xlat
addb
leave
push
xlat
adc
mov
int3
shll
jmp
jmp
icebp
scas
outsb
xchg
add
inc
mov
scas
mov
insb
mov
test
cmp
pop
and
imul
cs
test
mov
xchg
inc
aaa
pop
fnsave
sahf
xchg
xchg
ficompl
in
mov
adc
imul
insl
mov
scas
bound
outsl
sti
xor
lock
ljmp
adc
and
sahf
out
lods
gs
dec
and
or
and
rcrb
loope
and
xchg
sbb
mov
jne
mov
jae
and
in
xchg
mov
cmp
and
std
nop
adc
lds
sti
or
movsb
adc
sbb
and
lods
bound
jo
out
jecxz
test
ret
insb
adc
es
add
mov
jle
mov
jmp
pop
xchg
jae
dec
orb
inc
sub
jnp
inc
add
jne
int3
fcoms
aam
iret
cli
and
call
pop
push
cmp
push
call
mov
jb
inc
jp
sbb
test
push
sub
xchg
mov
pop
or
cmp
push
shlb
mov
and
lds
insl
pop
cld
icebp
ret
scas
jmp
push
enter
jns
pop
enter
test
stos
sbb
jo
std
add
daa
test
adcb
lret
dec
test
movsl
fadds
inc
cmp
out
sbb
movsl
pop
lods
cli
aaa
sbb
mov
fcoml
add
in
mov
lea
lods
xchg
mov
pop
sbb
or
out
ljmp
xor
dec
push
jle
or
jp
in
sub
fdivr
mov
inc
out
bound
xor
or
jmp
idivb
cmp
mov
mov
insl
ret
dec
iret
mov
call
sbb
xlat
gs
dec
lret
imul
addr16
mov
pop
test
mov
inc
cld
jg
mov
popa
jl
aas
ret
daa
push
and
ret
cli
test
mov
xor
cmp
cmp
adc
sub
dec
jae
adc
js
cmp
mov
sub
stos
cld
mov
jl
or
or
fisttpll
fs
cmpsb
jne
movl
aam
rolb
sub
xlat
mov
cmpsl
ss
push
push
sub
into
mov
bound
jle
inc
dec
sub
addr16
mov
pushf
and
or
mov
jns
fiaddl
lahf
sbb
add
jbe
mov
jb
scas
mov
mov
adc
mov
cmpsb
lods
or
add
pop
push
repnz
cmp
mov
loop
xor
add
lea
pop
push
add
mov
dec
fwait
xchg
cwtl
jns
test
mov
scas
outsl
into
sbb
out
mov
cs
je
std
repz
rol
std
dec
cmp
in
lods
mov
lods
mov
outsl
rcl
adc
cs
inc
mov
mov
jnp
sahf
mov
daa
mov
jmp
xor
jmp
xor
and
dec
xlat
insb
mov
push
and
je
out
imull
push
scas
push
les
jbe
cmp
xchg
dec
dec
andb
cmp
pop
nop
shl
subl
je
cmp
mov
and
pop
add
mov
inc
movl
daa
dec
lret
les
pop
ljmp
fdivrl
test
mov
stos
sub
mov
push
out
inc
movsl
fnsave
jae
xchg
push
addr16
into
loop
mov
int
in
sbb
mov
jecxz
push
es
test
into
xor
sbb
push
cmp
test
call
mov
rcrl
sbb
dec
in
mov
push
mov
aaa
int
int
subb
popf
shrl
push
sbb
outsl
push
jne
xchg
cmp
or
cmpsb
mov
dec
pop
pop
rcl
icebp
xchg
icebp
jae
mov
dec
loop
sub
aad
push
loope
xchg
data16
sti
int
stc
test
iret
pop
inc
shl
push
idivl
mov
fsubr
add
push
jae
cmpsl
cs
jnp
adc
lds
cmp
push
cs
test
jo
iret
or
cmp
or
dec
decl
mov
cmp
or
sbb
push
in
pusha
pop
push
sti
and
xchg
sub
fs
xchg
mov
pop
cmpsl
pushf
out
rcrb
add
test
xor
pop
ffreep
je
adc
push
jae
sub
test
pop
and
mov
lahf
or
pop
sti
mov
xchg
xchg
jp
pop
push
push
outsl
fsub
fs
mov
jge
mov
sbb
ss
dec
fucom
sbb
and
out
nop
cmp
or
stc
xor
xor
mov
test
inc
aaa
sbb
xorb
mov
jge
cli
xor
mov
bswap
outsl
fldcw
int3
cmp
rcll
mov
jae
mov
lods
mov
out
mov
ss
rol
lret
adc
sub
outsl
imul
aas
pop
inc
mov
roll
aaa
call
and
jg
es
dec
add
popa
push
shrl
pop
lret
shlb
int
push
dec
inc
adc
push
orl
dec
xor
push
xor
xchg
pop
inc
xchg
js
sub
arpl
add
adc
fldenv
and
sbbl
ss
out
inc
ds
fnstenv
xchg
mov
fwait
lods
xchg
std
push
iret
xchg
xchg
ss
jo
add
rcll
sbb
mov
lahf
and
pop
dec
mov
mov
jne
xchg
lahf
in
sbb
cltd
aad
push
out
add
xchg
or
test
mov
in
dec
insl
push
sti
add
dec
aad
ret
stos
cli
mov
add
xchg
sbb
inc
inc
pop
fs
cmp
adc
outsl
rcl
leave
mov
into
inc
inc
inc
test
push
repnz
dec
or
cmpsb
mov
sarl
sub
mov
loope
testl
xor
push
push
mov
dec
loopne
repz
call
in
mov
outsl
adc
fs
out
sti
mov
call
nop
sub
add
shll
jg
aas
push
xor
xlat
cli
mov
sub
stos
lods
and
pop
pusha
mov
fisttps
fiaddl
dec
aad
test
mov
push
xor
lds
mov
leave
hlt
imul
call
push
jle
sub
enter
pop
insb
mov
add
push
xor
cmp
lods
loop
jno
pusha
xchg
test
mov
cmp
add
pusha
xchg
in
subb
es
pop
fs
gs
stos
adc
les
xchg
push
mov
sbbl
repz
dec
xchg
rol
mov
push
int
ret
xlat
setge
mov
es
cwtl
loop
movsl
xchg
or
lea
adcl
das
ret
push
and
in
and
mov
int3
mov
sub
push
xlat
pop
push
sbb
mov
mov
mov
lods
dec
loope
leave
pop
mov
push
dec
movsb
aam
lret
xlat
loope
es
jge
xchg
inc
adc
and
mov
cld
cmp
mov
and
ficomps
pop
fdivrs
out
test
xchg
hlt
pop
je
outsl
ficompl
adc
xor
and
xor
loopne
icebp
scas
inc
push
into
adc
push
xchg
rorb
mov
aad
repz
pusha
mov
loope
jo
dec
mov
xor
jo
repz
insl
mov
jecxz
lds
mov
lahf
push
and
jl
xor
ret
lret
dec
test
pop
lret
popf
mov
mov
popf
push
push
lock
ljmp
mov
in
nop
cwtl
or
shrb
in
insl
in
jae
fists
push
jl
pop
sbb
mov
fdivr
jecxz
out
sub
add
popa
shll
mov
mov
inc
xchg
lret
xchg
insl
or
rolb
sbbb
push
pop
pop
out
movlps
pop
fstl
cli
sub
ficompl
xor
pop
outsb
mov
pop
and
jp
test
jecxz
scas
cmp
test
jno
push
mov
mov
push
jecxz
mov
and
movsb
push
lret
rcl
jecxz
push
stos
pop
movsl
fnstcw
in
mov
mov
shlb
lea
and
add
cmp
sub
cmpsb
pop
fstps
fwait
adc
mov
jmp
dec
xchg
stc
jle
data16
movsb
call
or
cmpl
xchg
lahf
aad
pusha
out
pop
rcl
mov
inc
add
dec
lock
adc
jns
adc
xor
test
xchg
fwait
xor
add
insb
lret
aam
mov
jnp
movsb
div
lds
jl
dec
bswap
lods
jl
sbb
mov
pop
mov
icebp
movsb
xor
popf
sti
adc
sbb
pop
mov
fiadds
jns
pop
sub
call
dec
xchg
aam
js
sbb
jbe
or
fs
inc
xchg
testb
mov
ja
sub
push
das
insb
or
fs
ret
push
stos
push
sub
sbb
cmp
jb
add
mov
repz
loope
jns
adc
jp
jmp
dec
push
pop
fimull
aas
jo
jnp
leave
stos
pop
sbb
fdivr
jmp
dec
push
dec
imul
pop
mov
push
mov
shrb
testb
jp
sti
or
xchg
jg
sub
xlat
adc
jmp
cs
pop
frstor
aad
cmp
dec
dec
push
es
push
mov
repnz
stos
dec
push
mov
inc
xchg
enter
inc
cmp
cli
int
push
sub
mov
push
xor
jge
arpl
cld
add
add
dec
lods
test
mov
xor
jne
bound
xor
adc
out
in
pushf
enter
icebp
dec
popf
mov
mov
xor
outsb
sbb
pop
jae
dec
aad
jg
add
rolb
in
nop
movsb
mov
jge
cli
notb
ret
shr
inc
push
out
fwait
push
clc
jo
mov
jno
imul
cld
fldcw
push
cmp
adc
pop
pop
arpl
lret
fists
and
sbb
mov
les
cmpsl
.byte
xor
