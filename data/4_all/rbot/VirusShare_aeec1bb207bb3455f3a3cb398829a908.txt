add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
sbb
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
jno
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
add
add
popa
add
adc
add
in
add
add
add
pop
add
add
push
add
inc
add
add
jns
dec
add
outsl
add
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
inc
mov
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
mov
add
add
add
add
add
add
add
add
add
add
test
mov
add
add
add
add
add
add
add
add
add
mov
movb
add
mov
add
mov
mov
add
add
test
mov
add
add
add
add
add
add
add
add
add
mov
movb
add
mov
add
mov
mov
add
add
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
incl
add
add
incl
add
push
test
mov
mov
insb
cli
lock
adc
pop
sub
imul
sbb
cmpsb
and
call
pusha
aam
mov
insb
add
fisubl
mov
pusha
mov
or
dec
mov
jno
addr16
aam
daa
xor
mov
jmp
xchg
orl
jae
movsl
mov
fisubs
lods
dec
push
adc
std
xchg
mov
jg
inc
adc
inc
cmp
xorl
std
adc
push
push
fnstenv
popf
sbb
rclb
xor
xchg
mov
and
ret
es
iret
mov
sub
out
push
push
cmp
fbld
out
dec
ja
and
jmp
stc
or
test
jnp
xor
stos
scas
adc
xlat
popa
mov
push
scas
into
orb
outsb
popf
cmp
fs
bound
cli
jne
mov
enter
dec
nop
mov
lds
or
xor
adc
jg
bound
lea
sub
push
out
dec
dec
jmp
xchg
ljmp
bound
inc
mov
arpl
cmp
cmc
sbb
inc
mov
mov
jnp
mov
fidivs
ss
push
mov
jno
add
rcll
in
data16
xchg
aam
mov
inc
data16
jb
push
stc
imul
imul
stos
push
in
sti
insb
pop
andl
pop
scas
clc
pop
sti
xor
jae
sbbl
mov
xor
mov
jmp
and
cmp
les
pop
idivb
test
jl
scas
pop
push
insb
outsl
jl
cmpsb
inc
jae
xchg
push
jmp
cmp
adc
movb
mov
sbb
int
out
lods
loop
sbb
out
lds
sbb
sub
xor
sub
xchg
xor
add
jmp
push
in
ret
add
jecxz
aad
lock
aaa
sub
pop
lock
js
and
and
sti
lds
int
fildl
xchg
sub
push
inc
test
hlt
or
cmc
add
in
and
movsl
into
test
dec
adc
insl
push
push
pusha
sbb
push
xor
dec
scas
sahf
js
call
clc
lahf
mov
data16
jl
pop
adc
scas
cli
and
mov
into
adc
imul
ja
imul
dec
jle
in
pop
add
inc
add
out
dec
ficoml
cli
sub
stos
lret
rcll
jnp
mov
inc
dec
int
push
out
in
subb
sub
insb
insl
add
ja
dec
imul
xor
cmp
adc
imul
mov
arpl
jns
mov
or
jge
movsl
or
cmp
mov
movsl
fcmovb
arpl
inc
inc
outsb
or
and
cmove
sbb
lahf
fcoms
scas
in
mov
push
inc
fisubs
out
testb
sub
and
bound
insl
pop
fs
std
sbb
xlat
test
insl
fwait
push
pop
inc
cwtl
test
adc
ja
and
sub
pop
pusha
repnz
cwtl
xchg
out
mov
push
and
hlt
mov
movsb
cli
stos
inc
out
adc
lods
std
cmp
nop
mov
xchg
mov
sbb
cvtps2pi
fcoms
addr16
rcll
subb
mov
mov
xchg
movsb
imul
out
push
push
mov
dec
xor
xchg
aad
mov
mov
mov
add
aas
pusha
mov
dec
inc
mov
pop
xor
inc
sti
xor
iret
or
push
sbb
sbbl
rcrb
out
mov
roll
xchg
mov
xchg
push
je
xchg
xor
adc
rorl
ja
add
jns
and
jg,pt
pusha
or
cmp
inc
cmpsl
xchg
or
inc
icebp
cmc
in
addr16
cmp
outsl
aas
sub
cmpl
jmp
sahf
cmpsb
xchg
mov
pop
inc
or
ret
imul
das
dec
xchg
adc
xchg
xor
insb
inc
pop
cmp
dec
jg
cmp
jmp
mov
adc
out
mov
xchg
and
sub
xchg
test
jae
dec
cwtl
lret
cmp
fstl
hlt
rorb
mov
jb
sbb
js
repz
inc
es
addr16
pushf
jno
adc
xchg
mov
add
outsb
clc
fs
xor
pusha
ss
xlat
or
mov
mov
iret
push
xor
cs
arpl
or
movsb
test
sbb
stos
ret
sbb
sub
fbstp
leave
mov
adc
adcl
insb
push
sub
je
das
fmuls
push
add
cmp
adc
out
add
loop
std
xlat
xchg
mov
xor
loop
jno
cmp
mov
jecxz
jecxz
mov
dec
cmpsb
and
popa
mov
mov
jne
outsb
cmpsb
xchg
cmp
ljmp
xchg
ret
push
jl
test
ss
fisubrs
inc
mov
dec
and
dec
dec
sbb
cltd
pop
cwtl
fbld
imul
out
test
xchg
adc
jmp
mov
push
push
cmp
inc
aas
fnsave
cmc
int
and
test
sbb
aaa
xchg
push
jl
out
and
sub
shlb
pop
mulb
scas
cmp
repnz
jmp
xor
inc
sbb
push
mov
cmp
insb
sbb
inc
inc
test
jne
jns
rcrl
xchg
sti
out
aas
rolb
adc
cmp
jns
jo
cmpb
cmc
fwait
sub
add
mov
cmp
mov
enter
push
bound
xor
ds
inc
popa
aam
mov
fisttpll
mov
add
ljmp
adc
jbe
sarl
das
mov
je
cmp
cmp
pop
fwait
sahf
push
loope
scas
xor
mov
jg
das
mov
push
ds
hlt
mov
xchg
lods
std
push
add
push
nop
mov
cli
iret
and
adc
mov
mov
ret
movsb
lcall
jmp
lock
sbb
and
jns
cmp
cmp
add
fs
nop
cmp
ljmp
lods
adc
push
test
adc
mov
int
sub
shlb
add
mov
mov
lock
iret
ss
arpl
mov
xchg
aam
xchg
fucom
stc
test
ds
push
mov
sbbb
ss
subb
mov
add
test
decb
lods
jae
cld
in
xchg
mov
push
decl
dec
jle
push
mov
inc
jmp
out
xlat
jne
cmc
loope
dec
push
push
add
push
cmp
sub
iret
adc
push
add
shrl
test
pop
lret
jo
cmpsl
aad
mov
ds
std
rclb
outsl
sub
leave
pusha
pop
imul
inc
cld
in
mov
ret
mov
sbb
mov
lret
pop
shrl
sub
lret
jns
cmp
popf
jae
stc
dec
dec
jbe
adc
shr
sub
or
ja
or
pop
je
push
insb
xchg
outsl
mov
aaa
sub
cmp
xor
shlb
pop
adc
xor
cltd
lods
outsb
iret
and
in
outsb
cmp
cmpsb
or
sarb
cli
fbstp
lock
mov
cmpw
addr16
adc
mov
cmp
ljmp
mov
stc
test
xor
or
hlt
cmp
push
push
pushf
roll
aas
popf
sub
sar
sub
jp
jmp
ljmp
rorl
sub
mov
jle
jmp
xchg
pop
in
lcall
xchg
add
imul
xor
outsl
test
mov
add
mov
mov
movsl
or
popa
mov
call
push
decb
cli
push
mov
cmp
aam
hlt
sub
xor
jb
jns
sub
adc
aas
int
push
inc
xor
int3
shlb
lock
enter
rol
cmp
xor
je
add
pop
jl
fidivl
mov
add
inc
roll
jl
shlb
xor
jmp
test
mov
push
pop
jle
out
dec
pushf
das
and
push
lea
mov
add
sub
pushf
daa
push
nop
mov
inc
aas
imul
and
or
jmp
push
mov
int3
ficompl
ljmp
push
out
jae
mov
shrl
adc
xchg
push
jle
repz
sub
fwait
stos
mov
or
pop
lock
pop
idiv
lock
add
test
fidivl
and
push
lret
jl
dec
add
sbb
push
jns
push
sbb
push
rol
jecxz
addb
fs
mov
push
mov
push
ret
int
popf
xor
fisttpll
jno
into
in
shr
or
ret
movsl
cmpb
and
mov
mov
mov
jne
rolb
icebp
xchg
pop
lods
stc
pop
add
nop
loopne
lods
jle
jae
sub
fdivs
aaa
mov
lea
arpl
mov
in
notl
cmp
scas
pop
and
bt
stos
or
cli
repnz
call
pop
mov
cltd
ret
das
and
xor
insl
jmp
jecxz
rclb
sbb
icebp
and
fidivrs
stc
add
fistpl
mov
adc
add
into
clc
push
ljmp
add
jb
cmc
inc
daa
jns
mov
mov
aas
stos
iret
iret
in
push
movsb
adc
aad
add
or
sar
insb
jl
scas
es
jg
push
adc
aad
mov
push
in
push
mov
xor
and
or
sbb
pop
test
mov
fimuls
push
dec
sbb
jo
hlt
popf
and
shl
ja
dec
mov
push
in
mov
negb
push
and
aas
sbb
push
or
mov
popa
lahf
andl
mov
inc
jle
add
into
mov
aaa
addr16
mov
push
pxor
in
lods
inc
pop
inc
sub
jmp
sbb
pop
ss
or
inc
sub
add
mov
xchg
push
cld
and
aas
cmpsl
push
out
or
cs
push
icebp
xchg
lock
adcb
inc
scas
push
dec
jl
and
mov
lods
inc
arpl
sti
in
out
fmull
sti
mov
aam
icebp
push
xor
xchg
adc
ret
adc
sub
mov
mov
jb
push
lahf
shll
pushf
mov
pop
mov
insb
pop
mov
test
out
pop
outsl
mov
lods
fsubp
insl
bnd
inc
ret
jbe
sub
fs
xchg
jp
xor
dec
sahf
int3
xlat
andl
xchg
aas
push
xor
movsl
in
push
aaa
jbe
pusha
or
addb
inc
xor
cld
fimuls
jno
ds
sub
inc
xor
xchg
arpl
mov
cmp
popa
test
imul
in
cs
outsl
mov
fimull
pop
inc
sub
mov
sahf
cwtl
sub
pop
addl
xchg
adc
inc
pop
sub
insl
insb
int3
sub
mov
pop
hlt
sbb
xchg
push
adc
movsl
sar
lret
sub
dec
xchg
pop
adc
jnp
arpl
ja
sbb
xchg
enter
ds
out
into
sub
lahf
dec
sbb
push
pushf
fisttpl
add
sub
pop
movsl
jle
inc
cltd
cmpsb
lcall
lds
outsb
add
roll
pop
popf
outsl
daa
push
add
adc
addl
dec
imul
test
cmpsl
push
mov
dec
imul
xchg
xchg
es
jecxz
jg
add
sub
and
mov
lds
jmp
call
sub
lret
call
jp
sub
cmp
test
add
lods
shrl
call
mov
mov
or
mov
movsb
and
arpl
xchg
push
inc
iret
mov
and
movsb
dec
dec
dec
dec
scas
dec
sbb
xchg
filds
testl
dec
addr16
push
and
jp
repz
divb
pop
mov
jg
xor
adcb
in
push
sarl
mov
cs
adc
daa
ror
cmp
arpl
cmp
xor
imul
loope
adc
xlat
stc
lds
mov
cmp
xor
mov
lret
push
scas
push
fiadds
repz
arpl
add
ja
cmc
stos
arpl
xor
mov
aad
test
xchg
xor
aaa
outsb
sub
je
sar
out
arpl
mov
test
or
xor
cwtl
xor
cmpsl
fcoml
out
jae
dec
pop
push
sar
adc
rclb
push
shrl
xchg
aam
pop
jnp
inc
repnz
outsb
and
mov
std
loopne
fisubl
fisttps
inc
cmpsl
popa
ret
mulb
loope
rcr
in
outsl
push
cmpl
add
xor
push
rcll
out
add
or
les
scas
pop
mov
mov
scas
in
fucomi
imul
xchg
mov
ss
inc
mov
shrb
pop
sbb
fcmovu
popf
jmp
loop
jae
xlat
xchg
lods
cmp
aad
cmp
adc
mov
lcall
bound
push
popf
addr16
les
push
dec
scas
loopne
xlat
std
sbb
cmpsb
sub
rcrb
sub
mov
pop
fucomp
dec
pop
addb
dec
das
mov
imul
mov
mov
sub
cmp
adc
aas
inc
jmp
mov
out
adc
into
jecxz
jge
nop
push
fwait
mov
xchg
push
sub
imul
test
xor
inc
lcall
mov
or
jmp
xlat
add
add
cmp
es
adc
sub
pop
push
push
xchg
mov
xlat
lods
rorb
pop
or
pop
add
lret
and
or
jecxz
pop
jae
bound
cmp
imul
inc
popf
stos
xchg
jbe
mov
mov
cmp
shrb
fs
movsl
mov
jnp
jns
push
or
lret
or
sbb
ficomps
push
xchg
jmp
fidivrs
fstpt
inc
cmpsl
sub
arpl
and
lock
sbb
nop
or
jo
fwait
and
lahf
jb
ret
andl
xchg
xchg
mov
inc
lods
popa
cmp
ljmp
mov
cmpsl
jl
sahf
jp
das
scas
in
movsb
inc
dec
icebp
in
jne
jbe
mov
pop
cmp
stos
imull
xor
mov
sbb
test
and
repnz
sub
mov
cltd
test
mov
cmp
sbb
test
inc
negl
mov
and
mov
imul
xlat
mov
sarb
adc
or
in
shrl
jmp
loopne
aas
jecxz
rcrl
cld
mov
shrl
push
sub
into
add
push
je
adc
sbb
jno
mov
pop
jle
or
cltd
insl
xchg
stos
jg
test
mov
ljmp
test
pop
and
adc
pop
jge
mov
jmp
push
ss
pop
sahf
lahf
push
dec
xchg
aaa
xchg
cmp
inc
and
popa
out
and
jae
mov
mov
stos
icebp
xchg
out
dec
xchg
pop
fdivr
lcall
mov
cmpsb
cmpsb
pop
sub
add
mov
and
cwtl
sub
popf
cmpsb
sub
inc
fcompl
lods
mov
jg
fmuls
inc
clc
add
push
pop
or
addl
dec
ja
mov
in
mov
jnp
add
int3
dec
cld
xor
xchg
cmp
pusha
add
or
icebp
lds
dec
lods
andb
cmp
out
mov
ret
inc
out
fs
cld
cmp
fsubrs
data16
stc
lods
jge
hlt
jg
inc
sbb
scas
fldl
fstps
sub
and
pushf
sub
test
icebp
subb
push
xchg
mov
mov
or
jge
std
int3
sub
cmpxchg
cmp
inc
jbe
fldenv
xchg
je
dec
cmc
adc
mov
inc
mov
outsl
xor
adc
mov
push
jmp
sbb
ja
pop
push
scas
gs
mov
lret
cld
inc
inc
mov
adc
in
inc
data16
out
xor
mov
cli
xor
nop
fldcw
mov
test
fsubs
fwait
jae
imul
lret
xor
daa
outsl
sub
xor
loop
push
loopne
mov
outsb
jne
push
xchg
test
int
jo
sahf
call
push
stos
cmp
bound
cmp
pop
and
jo
call
mov
inc
push
push
cmp
inc
popf
fsubrs
fistl
push
xor
jmp
ret
pop
shll
inc
dec
xchg
push
andb
stc
cmp
cmp
mov
mov
gs
mov
lret
and
jp
mov
adc
xchg
ja
aaa
add
sub
cmp
lds
cmpsb
xchg
popa
idivb
repz
jle
and
mov
mov
leave
mov
and
movsb
jo
ret
push
adc
roll
aam
rorb
int
int
pop
sbb
cmp
ss
into
sbb
jne
adc
ret
into
aaa
mov
add
dec
adc
test
popa
bound
ja
mov
mov
jge
dec
lds
lock
divb
fwait
jb
int3
test
jp
sbb
cmpsb
push
dec
and
sbb
cmp
cld
in
insb
xchg
cmp
mov
sbb
sub
out
mov
or
nop
clc
dec
push
xlat
xor
sub
lret
lock
inc
xor
es
lea
pop
dec
inc
and
call
in
mov
iret
sbb
push
dec
imul
lea
mov
inc
push
dec
mov
or
pusha
add
dec
out
or
ja
sub
imul
int
ja
in
fildl
clc
jno
shll
pop
dec
stos
push
mov
es
les
sbb
mov
xlat
xchg
filds
jge
xor
outsl
call
daa
aas
xorb
pusha
aas
xor
add
dec
lret
pop
test
push
jl
xor
dec
sbb
and
jl
add
mov
and
jmp
sti
mov
nop
push
lock
jbe
cmp
fcomps
lret
pop
xor
pop
pop
incb
add
jbe
cmp
jbe
mov
pop
aas
jmp
idivb
mov
and
stos
and
dec
jne
mov
add
popf
and
loopne
add
inc
insl
data16
ret
sbb
int3
mov
or
xor
jmp
and
cli
mov
ds
icebp
sbb
mov
sbb
xchg
xor
dec
xor
cmp
js
cmc
push
push
dec
mov
jb
das
push
mov
pop
pop
inc
cltd
inc
pop
and
outsl
cmp
jne
lock
je
and
xchg
xor
jns
je
cs
inc
cltd
sub
xor
sahf
mov
leave
adc
in
push
add
xor
or
or
xchg
push
cmp
xor
mov
fdivs
jmp
pop
adc
stc
out
cmp
ds
ficoml
aas
inc
adc
mov
and
push
pop
cmpsl
int
jmp
out
mov
xor
inc
lret
push
mov
xlat
jo
je
lods
mov
out
inc
stos
scas
out
cmpsb
jmp
lcall
shll
test
scas
lret
xor
pusha
cmp
jmp
hlt
sub
mov
lds
stos
mov
testl
push
repnz
and
pop
lods
loopne
pop
mov
sbb
mov
sub
push
shr
inc
stc
int
call
cmpsb
xor
lret
sub
les
fcom
pop
sti
out
divb
call
or
mov
sub
cmp
add
xor
pushf
fbld
rcrl
verr
sub
sarb
lcall
pop
jae
cmpps
into
push
xor
push
mov
pop
mov
stc
inc
insb
cmpsb
jbe
mov
push
jl
mov
adc
hlt
fwait
push
mov
loopne
dec
fwait
xchg
xchg
jmp
lahf
js
mov
xor
pushf
ror
mov
movsb
insb
iret
push
and
add
aas
imul
gs
jl
push
xor
call
gs
mov
push
sti
sbb
push
mov
in
mov
cmc
pop
jp
das
in
sets
mov
sbb
je
adcl
or
xor
xchg
pop
ret
lea
or
push
enter
int3
push
cltd
inc
sub
aam
jo
or
imul
mov
inc
mov
mov
fsubrl
icebp
mov
xlat
adc
or
popf
and
stos
adc
cwtl
fldl
movsb
jmp
mov
and
or
in
jbe
repnz
add
and
and
mov
jo
nop
adc
add
cmp
xchg
jg
repz
sarl
and
or
pop
cmpsb
ds
fildl
adc
dec
outsb
test
jg
and
fsub
push
out
add
in
jmp
add
mov
and
sub
add
cli
scas
dec
mov
sub
notb
enter
and
mov
cmpsb
icebp
and
push
and
pop
ljmp
outsb
mov
int
mov
mov
push
xchg
hlt
pusha
push
into
lods
enter
jne
sbb
cmp
inc
jp
lahf
nop
mov
adc
lock
pop
ljmp
xorl
fnstenv
hlt
and
fs
jne
lea
or
jp
mov
out
nop
or
aad
stos
push
mov
push
pop
xlat
and
cmp
or
adc
jnp
into
andl
imul
ja
lcall
xchg
sbb
pop
push
addr16
filds
and
push
add
loopne
xchg
sbb
adc
adcl
rcl
push
inc
mov
pop
xchg
lock
xchg
cmp
and
mov
dec
js
push
jl
xlat
push
push
or
inc
std
lea
popa
cmpsb
sbb
lea
adcb
scas
sbb
pop
js
push
es
leave
jge
test
and
pop
and
adc
xchg
and
nop
movsb
fwait
dec
and
add
loop
sbb
cwtl
jmp
push
sub
mov
sub
jns
sub
into
sti
pop
enter
xchg
sbbb
push
fwait
mov
cli
movl
je
ret
jb
mov
cmp
sarb
inc
loop
xchg
stos
pop
mov
cmpsb
mov
push
scas
lcall
addr16
mov
mov
pop
pop
lahf
test
mov
mov
fistpl
inc
pop
sbb
out
mov
and
imul
inc
out
sub
pop
mov
cwtl
mov
icebp
add
xchg
sbb
sbb
mov
xchg
lds
mov
stos
loop
movsl
push
int
fisttpl
pop
sub
cmc
rorl
scas
rolb
test
xchg
add
xchg
loop
daa
mov
jb
cwtl
shlb
out
cmp
addr16
in
inc
push
sub
mov
test
lods
ljmp
test
lret
add
iret
lret
imul
insb
jbe
add
jg
jb
ja
lods
cltd
into
insl
inc
push
xchg
or
and
inc
andb
sbb
into
cmp
or
data16
icebp
bts
bound
inc
jge
popa
rep
shrb
adc
gs
mov
jmp
jns
cmpsb
fwait
xorl
repnz
sub
in
xor
pop
lds
mov
mov
out
adc
and
adc
sbbl
fsubl
out
adc
fistps
cwtl
push
jle
inc
mov
fsubp
cmp
pop
ja
inc
mov
mov
xchg
and
add
inc
sbb
pushf
xlat
fstpt
jne
jl
bound
add
lods
cld
adc
movsb
push
pop
cmp
adc
mov
inc
rcr
mov
jno
mov
ret
xchg
test
popa
stos
and
ficoml
or
sbb
test
fs
mov
add
jb
mov
ds
subl
loopne
xchg
fistpl
and
test
ror
repnz
cli
cwtl
movsb
inc
stos
push
adc
data16
sbb
roll
test
pop
xchg
push
ret
hlt
stc
jnp
mov
inc
dec
popa
xor
rcrl
dec
jge
cmp
mov
mov
sti
and
stos
int
scas
cli
out
repz
loop
rcr
jg
rcrl
inc
inc
out
test
jae
repnz
loope
sbb
sub
sbb
lds
lea
sbb
mov
insb
loope
aaa
leave
lret
imul
push
movsl
pop
scas
add
jb
dec
inc
dec
xchg
call
fstpl
mov
ja
or
ficoms
cwtl
loope
mov
cmp
rcrl
or
dec
dec
lret
arpl
push
jno
pop
adc
pop
xchg
loopne
add
aam
push
fldl
xchg
lret
ds
rorb
gs
cmp
pop
dec
fucom
shrl
fists
adc
push
hlt
push
subl
mov
sbb
jnp
ds
scas
repz
loopne
add
or
jo,pt
xchg
loopne
xchg
pop
dec
test
jnp
fbld
cld
inc
xlat
jp
and
or
dec
in
and
mov
in
stos
jle
popf
pop
and
aas
mov
cmp
mov
sbb
xchg
test
xchg
mov
push
dec
pushf
enter
psubq
popf
jbe
sub
fwait
push
push
cmp
sbb
popa
into
lret
fnstcw
xorb
out
xchg
nop
add
sar
gs
nop
cmp
cmp
mov
mov
inc
addb
adc
rolb
push
and
jae
or
and
pop
jb
stc
push
xchg
loope
xor
cmpxchg
rorb
out
les
cmc
pop
jns
inc
pop
pop
popa
cmp
and
inc
daa
aaa
mov
jg
fcmovne
jbe
fwait
imul
mov
fstps
hlt
xchg
mov
cmp
sbb
sub
popa
xchg
ret
push
nop
or
pop
jno
int3
roll
popf
add
mov
adc
adc
mov
dec
pop
mov
push
xchg
sub
or
sbb
loope
fdiv
mov
and
sbb
add
push
mov
adc
jmp
pop
shlb
in
push
incl
inc
out
jns
stos
nop
into
idiv
jo
mov
mov
xchg
dec
sub
or
and
adc
lods
scas
call
inc
cmc
pushf
dec
mov
cltd
add
and
jbe
mov
enter
jae
mov
mov
lret
lahf
fsubs
cltd
pop
lods
xchg
loope
cmp
push
ja,pt
dec
pop
xchg
inc
inc
or
xlat
fisubrs
inc
imul
add
js
mov
sbb
pop
and
test
sub
les
or
add
popa
mov
loop
xchg
xchg
ja
ss
hlt
outsb
mov
popf
add
in
adc
cmpsb
mov
movsl
mov
call
dec
sahf
cmpsl
adc
dec
test
xchg
div
jne
add
xor
ss
cs
leave
xor
jae
idivl
out
push
mov
sub
repz
jg
fsubs
adc
loop
jns
sahf
mov
mov
std
testl
xor
cmp
cs
sarl
sub
rorb
xchg
cmp
dec
adc
loop
outsb
dec
mov
pop
jo
and
loop
xchg
adc
pop
fsts
or
clc
xchg
sub
pop
fsubl
or
les
and
mov
inc
inc
data16
or
and
xor
scas
arpl
cmpsb
sbb
ljmp
mov
out
enter
mov
mov
pop
push
add
jecxz
and
sbb
ss
pop
outsl
ds
js
cmp
divl
daa
sbbb
sub
repnz
call
lds
cs
jecxz
jbe
into
sbb
adc
mov
xchg
imul
popf
andl
lret
fs
arpl
pop
inc
add
mov
vunpckhps
jmp
dec
lods
test
add
xchg
daa
cmp
loop
int3
jmp
add
jg
pop
notl
mov
lret
cmp
push
xor
aad
sub
sub
pop
jmp
cmc
sub
inc
arpl
ljmp
cmp
pop
ret
dec
mov
jne
mov
xor
ret
rorb
cmp
inc
daa
stos
add
sub
jl
adc
es
iret
test
test
in
icebp
outsl
dec
push
jo
inc
jnp
sahf
in
jecxz
loopne
in
movsb
pushl
or
iret
push
scas
dec
mov
sbb
ljmp
pushf
into
xchg
push
sub
mov
mov
inc
stos
in
daa
dec
pop
inc
shlb
mov
mov
in
cmp
cmp
scas
adc
je
sbb
fdivrp
add
lods
or
rcll
push
push
lea
pop
into
rorb
mov
enter
xchg
or
mov
pop
adc
daa
data16
in
sub
in
shll
enter
orl
xchg
cmp
rcrl
cmp
pop
movsl
les
imul
jne
fsub
cmpsl
jle
movsb
dec
mov
sub
int
scas
pop
sbb
add
addl
clc
mov
mov
pop
addb
pop
xchg
test
subb
icebp
adc
lds
iret
lret
decb
enter
sub
adc
in
jmp
fdivl
stos
and
or
and
xlat
ljmp
add
loope
aad
sti
iret
dec
out
inc
int3
das
je
scas
sbb
enter
cmc
xchg
push
pop
jne
fisubl
jl
xchg
and
lahf
dec
add
fsubr
mov
ret
gs
shlb
or
adc
xor
add
das
outsb
shrb
loope
dec
pop
loop
fadds
sub
daa
or
data16
mov
push
mov
rorb
jle
mov
cmpsl
inc
xchg
arpl
dec
cmp
mov
mull
mov
rcrb
mov
add
xor
dec
imul
jo
mov
mov
cmpsl
nop
mov
add
push
loop
mov
in
lahf
jecxz
out
loope
push
inc
push
stos
add
ret
popf
jg
lret
icebp
mov
insl
push
push
repnz
rorb
jl
test
mov
pop
and
scas
dec
push
xchg
jp
lea
pop
shl
push
mov
mov
lock
adc
jno,pn
sub
stos
fdivrs
xor
stos
fmuls
adc
orb
xor
and
ffreep
arpl
inc
jo
lods
sets
in
popf
or
lods
dec
fisttps
add
js
les
push
dec
jne
xchg
and
mov
mov
data16
into
bound
lea
mov
mov
aam
repz
mov
adc
into
dec
cmp
dec
loope
mov
push
mov
jge
xor
mov
add
dec
mov
pushf
imul
int3
pop
adc
or
mov
mov
mov
in
push
lahf
bound
cli
bound
fs
sbb
pushw
cli
data16
fldl
in
loopne
lds
pop
nop
inc
in
flds
sti
dec
adc
data16
pop
mov
jmp
pop
sbbl
inc
xor
cli
or
aas
push
daa
ljmp
jmp
mov
push
jne
jl
mov
scas
jb
push
push
push
jbe
repz
sub
mov
sub
mov
arpl
mov
sbb
adc
inc
insb
sub
pop
pop
cmp
mov
fisttpl
sbb
test
int3
jle
or
pushf
sub
sahf
ss
popf
out
add
loop
les
leave
mov
dec
inc
pop
xor
pop
test
inc
xchg
cltd
push
stos
push
inc
inc
jne
xlat
aam
lock
and
dec
pop
jb
sub
xchg
add
sbb
fwait
cmovl
data16
inc
loope
daa
imul
and
lods
ljmp
scas
add
cld
cli
or
sti
shrl
lcall
jo
test
lods
push
jns
inc
test
mov
in
sub
xlat
push
mov
shrl
iret
cmp
adc
xlat
sub
dec
dec
std
fisubl
mov
cld
fdivs
xor
dec
jp
scas
ficoms
xlat
int
movsl
and
rcrl
push
loopne
addr16
adc
divb
scas
ss
subb
sbb
lds
les
sbb
movsl
pop
mov
mov
arpl
jo
lahf
pop
xchg
dec
adcl
xor
jnp
xor
mov
sbb
push
push
mov
push
insb
aaa
jecxz
inc
lcall
pop
in
mov
sahf
mov
mov
pop
out
jns
mov
jge
bound
call
sub
mov
lods
lahf
rcr
int
movsl
dec
jp
popf
daa
xchg
push
sub
test
mov
imull
repz
aas
adc
mov
pop
cld
xchg
popf
push
popa
rorb
int3
mov
pop
rolb
nop
aaa
sbb
aaa
fwait
mov
jge
cmovp
inc
xchg
stos
insl
leave
stc
test
pop
jns
loope
inc
mov
mov
lret
in
dec
shlb
or
dec
or
adc
cmp
iret
and
cltd
sub
jne
cwtl
xchg
insl
in
xchg
adc
rclb
pop
rsm
aad
push
rolb
mov
rcll
call
das
cmp
pop
add
cmp
push
ljmp
int3
icebp
push
jno
in
mov
rcll
cmp
add
add
sub
and
inc
dec
jmpw
sub
and
ret
inc
scas
jge
ss
mov
sub
mov
pushl
cmp
cmpb
es
adc
push
loope
stos
xchg
ds
inc
adc
or
sub
stos
stc
pushf
ljmp
mov
test
das
imulb
pusha
xchg
inc
jle
jecxz
aas
xchg
out
sub
jle
mov
ja
ljmp
sahf
fcomip
fistpl
scas
xchg
movsb
or
mov
lret
push
nop
mov
mov
mov
mov
es
cld
pop
mov
adc
push
cs
loopne
inc
ljmp
sbb
mov
mov
mov
stos
int3
stos
mov
add
cmpl
lods
jle
xlat
jl
insl
lock
loope
test
cmpsl
arpl
inc
and
pop
scas
jb
cmp
dec
lock
std
inc
mov
mov
xor
cli
ret
ret
push
or
lret
bnd
push
add
pushf
cmpsb
mov
mov
test
and
mov
pop
inc
lea
movsl
mov
filds
adc
data16
icebp
bound
or
inc
das
jo
or
and
mov
aaa
fcmovnb
fwait
sbb
jecxz
pop
leave
jno
sti
cmpb
rcll
into
lcall
sahf
imul
inc
in
mov
shlb
cmpsl
inc
mov
sub
pop
aaa
out
fiaddl
sub
and
sbb
mov
incl
add
mov
push
sub
iret
mov
inc
nop
push
dec
js
dec
fldcw
adc
cmp
fstpt
jmp
xlat
lods
ds
adc
jecxz
pop
stos
cmp
push
sbb
push
jecxz
push
ja
sub
mov
sbb
into
ljmp
fcomip
nop
mov
inc
dec
loop
add
cmpb
cmp
lods
adc
mov
or
iret
mov
pop
mov
arpl
in
push
test
xor
cld
icebp
jl
popa
xchg
mov
jbe
mov
push
push
fidivl
dec
push
jbe
mov
xor
rcll
fiaddl
push
icebp
aas
ja
jb
mov
pop
dec
dec
or
sub
or
dec
add
cmpsb
imul
xchg
into
add
jle
xor
add
pop
pop
pop
loop
adc
repz
mov
fnsave
mov
in
pop
push
roll
mov
xor
sbb
rcrl
mov
mov
lcall
out
inc
in
mov
cli
xchg
jge
test
push
add
fidivs
push
sbb
iret
pop
movsb
sahf
lock
aas
mov
pushf
daa
in
arpl
jp
lock
aad
push
or
and
inc
mov
insl
ds
les
stc
shll
or
and
popf
aas
ret
dec
hlt
dec
cwtl
loopne
shrb
push
pop
and
mov
enter
pop
rclb
and
mov
jge
in
scas
push
loope
inc
push
stos
fsubs
out
mov
push
mov
push
aaa
and
mov
inc
decl
dec
dec
sbb
or
mov
addr16
stc
or
mov
mov
xchg
mov
cmp
pop
rorl
insb
out
dec
mov
sub
les
pop
add
fwait
lock
int
push
fucomi
je
cld
fistps
ss
test
enter
cmp
imull
pop
add
push
ja
xor
cmp
out
add
jp
sbb
dec
mov
pop
cmp
push
xchg
dec
ret
and
mov
push
flds
ss
cli
repnz
push
jg
test
dec
scas
add
xor
aam
insl
lret
xchg
mov
push
adc
sarb
stc
ds
out
jo
dec
cmpsb
sub
mov
lcall
outsl
ficoml
test
testl
pop
add
repz
jp
std
sbb
or
lret
outsl
or
adc
loope
lahf
imul
lret
inc
or
xor
sbb
cmp
jl
loopne
movsb
inc
add
push
es
sbb
loop
cmp
test
or
repnz
mov
sbb
xor
or
bound
mov
test
sar
add
repnz
push
es
mov
shlb
xchg
cmc
int
es
jmp
sbb
mov
cmpsb
insb
in
pop
mov
and
mov
std
rcrb
xchg
push
pop
js
lods
mov
or
xor
lret
sbb
cld
jl
aad
es
or
or
lret
sbb
or
in
test
arpl
pop
in
cltd
cmp
mov
es
xlat
add
loopne
xor
dec
mov
out
insl
jg
mov
lea
nop
or
mov
mov
fiadds
xchg
xchg
jae
movsl
fcoml
pop
daa
in
push
mov
repz
les
adc
dec
push
mov
test
sbbl
inc
push
adc
pusha
out
jl
pop
std
inc
pop
mov
iret
das
imul
pop
int3
sarb
lock
cmp
out
jne
dec
sbb
xor
mov
add
fsubrs
mov
outsl
in
push
fisttpll
mov
lcall
out
popf
popa
fnstcw
sub
mov
jno
lods
xor
and
mov
popa
xor
aam
pop
lcall
xchg
jo
fwait
rol
inc
dec
das
scas
cmp
and
mov
fwait
sub
dec
add
nop
xlat
jg
fdivl
mov
pop
fimull
jne
cmp
dec
lea
xchg
addr16
mov
je
mov
movsl
push
roll
adc
ficompl
int3
or
push
mov
scas
sub
or
add
psubw
sub
xchg
cmp
or
inc
pop
mov
daa
cli
sbb
cmpsb
sub
rsqrtps
cld
and
pop
and
inc
jp
and
cmp
mov
jne
mov
out
enter
int
mov
ss
scas
and
push
xchg
je
loop
push
xchg
insb
stc
loop
and
dec
sub
cmp
scas
and
jb
cmp
pop
filds
fwait
dec
out
mov
imul
ja
call
jge
push
mov
dec
lock
and
ficoml
xchg
jbe
sbb
in
dec
rolb
shll
subl
push
ss
xchg
pop
jmp
test
push
adc
das
sbb
lds
outsb
sbb
test
xor
fdiv
int
add
and
jp
loope
sbb
cltd
dec
je
inc
xor
push
push
mov
and
mov
popf
cmp
sub
cwtl
add
incb
ret
shll
xor
jmp
lock
xchg
jmp
in
jge
fiaddl
sbb
nop
xlat
js
sar
mov
out
sub
push
call
sub
fbld
filds
pop
mov
addr16
in
inc
xrelease
loop
fbstp
or
inc
outsl
cmp
test
sub
imul
inc
daa
push
mov
pop
push
mov
mov
pop
test
xor
subb
pop
repnz
imul
aad
jnp
imul
jo
jae
mov
or
xor
iret
arpl
jg
stc
lret
mov
aam
rcrl
lods
mov
jmp
adcl
stc
mov
std
jmp
sub
xlat
ljmp
adc
test
mov
test
xor
cwtl
push
mov
dec
popf
lea
popf
sbb
or
push
jl
pop
add
popf
and
int3
sbb
xchg
out
xor
fs
cwtl
fmul
mov
mov
ret
mov
imul
push
cmc
les
sahf
push
inc
sub
or
outsl
cwtl
mov
ret
arpl
std
in
dec
loope
cmp
fs
icebp
mov
xor
dec
sahf
mov
jae
push
and
pushf
mov
cmp
enter
cltd
add
or
add
sbbb
data16
pop
movsb
test
outsb
gs
les
imul
das
push
cmp
lea
fwait
xchg
jl
loopne
mov
or
icebp
adc
sub
hlt
add
add
shr
out
xor
mov
sub
fs
lods
test
jo
jge
jmp
pusha
fisubrs
das
inc
inc
push
daa
xor
repz
lods
stos
popf
stos
adc
mov
dec
ds
push
es
add
mov
aas
lds
dec
clc
xor
movsb
sarb
sbb
inc
sbb
xchg
adc
rcl
test
jae
mov
pop
push
push
out
enter
sahf
ds
cmpsb
loop
push
popf
jl
dec
out
mov
stos
xlat
dec
and
xor
test
pop
pop
nop
xor
js
loop
repz
fdivrs
pop
jo
mov
cld
pop
dec
stos
xchg
iret
imulb
and
shlb
fisubs
in
pop
scas
cltd
lahf
dec
add
leave
out
mov
jns
fmul
cwtl
test
out
mov
fdivrp
push
adc
sti
xor
scas
fisttpll
and
add
repz
loopne
jo
lea
outsb
mov
inc
sub
scas
lea
iret
fidivl
or
xchg
scas
jle
jge
nop
lahf
int
adc
pusha
fistl
outsb
mov
xchg
pop
adc
xor
leave
mov
fs
imul
mov
jbe
adc
stc
add
call
xchg
sub
insl
cmpsb
ds
iret
sbb
mov
dec
ds
xor
outsl
loopne
dec
aam
sub
dec
insb
add
or
inc
cmpsb
popf
pop
sbb
adc
mov
aaa
decl
jmp
movsl
mov
out
test
mov
sub
and
popa
or
mov
or
inc
aaa
and
pop
scas
pop
stos
insb
pop
je
clc
sub
jne
or
add
and
mov
out
in
test
or
mov
mov
mov
cltd
and
or
xor
mov
inc
add
dec
ss
aam
mov
pop
mov
cmp
xchg
push
push
and
pusha
fisttpll
xchg
bound
adc
int
jg
dec
cs
pop
mov
inc
mov
lods
sti
lret
xchg
cmp
out
pop
sbb
fmull
sub
repnz
inc
cld
imul
shl
pop
pop
in
lea
push
lods
push
outsl
dec
push
adc
js
xchg
into
sbb
js
hlt
dec
mov
push
inc
pop
cmp
fdivl
out
pop
repnz
lahf
cmp
jg
mov
adc
ja
mov
hlt
icebp
add
xchg
scas
xchg
dec
pop
ficoms
or
mov
adc
mov
aaa
push
jno
dec
pop
addl
xchg
pushf
push
sbb
jge
dec
mov
xchg
aam
jmp
xor
push
imul
enter
sub
rcll
mov
xor
xchg
mov
xor
pop
adc
je
adc
xchg
outsl
sbb
sub
push
mov
lret
or
leave
dec
mov
lea
stc
sbb
cwtl
pop
mov
pushf
mov
pop
push
xchg
leave
inc
ret
loop
and
int3
pop
divb
pop
pop
pop
pop
in
fucomp
mov
out
lcall
stos
iret
fwait
in
bound
pop
mov
adc
scas
mov
jno
into
je
pop
jle
ja
or
cld
daa
sub
jno
push
cmp
adc
push
fdivs
sbb
dec
inc
inc
ljmp
adc
clc
rcrl
rorb
push
mov
push
adc
inc
addb
jle
add
arpl
cmp
mov
movsb
xor
rcrb
inc
shl
or
adc
dec
fnstsw
mov
dec
ljmp
cltd
stc
push
repnz
iret
gs
mov
call
outsl
mov
adc
or
inc
std
mov
mov
mov
mov
out
push
jbe
lcall
push
aad
or
dec
out
xchg
stos
mov
xor
insb
pop
dec
mov
mov
rcrb
xchg
hlt
pushf
mov
xor
and
xor
mov
out
testb
push
adc
xor
and
aas
sbb
or
loopne
cld
mov
stos
push
hlt
add
lods
add
mov
inc
add
xchg
idivl
addr16
or
or
outsb
mov
jbe
mov
or
and
mov
dec
mov
leave
in
dec
sub
adc
js
xorb
push
dec
inc
cwtl
into
mov
mov
stc
sub
jmp
push
push
mov
cli
inc
stos
pop
ljmp
arpl
xchg
or
scas
push
inc
xchg
mov
xor
aad
push
hlt
xor
mov
lock
ja
negb
mov
and
loop
push
sbb
outsl
pop
test
cs
pop
mov
std
ret
mov
or
rcr
rolb
xchg
mov
inc
cmc
and
add
incl
jmp
mov
cwtl
clc
sbb
add
mov
popa
dec
push
xchg
sub
data16
in
pop
aad
mov
add
cmp
out
imul
lods
popf
pop
dec
addr16
jns
shlb
mov
cld
sbb
mov
lret
push
insl
fs
movsb
cmpsl
ret
ja
sub
addr16
pop
mov
clc
lods
pop
shll
mov
popf
xlat
fistl
xchg
dec
sbb
and
xor
jae
add
cmp
xorl
push
mov
mov
cmp
prefetcht1
add
cmp
adcb
mov
icebp
das
pop
std
and
and
push
push
dec
xor
xchg
xchg
fdivs
repnz
iret
mov
fstpt
ret
mov
or
push
mov
repz
nop
hlt
cmc
fadd
jne
push
inc
cmp
lret
sahf
jmp
icebp
insb
sahf
shl
mov
dec
lds
mov
dec
out
loop
int
test
pop
sub
or
push
sbb
add
cwtl
iret
jo
jb
jg
addr16
push
movlps
jbe
fwait
sarb
loope
xchg
mov
mov
mov
arpl
inc
pop
pop
inc
call
xchg
cmp
xor
ljmp
cmp
aaa
fs
out
xchg
add
xor
adc
rclb
cmc
or
lods
pop
mov
push
out
push
fimull
outsb
sbbl
enter
push
push
daa
push
mov
pop
mov
xchg
mov
push
popf
add
add
lock
cmp
in
jmp
mov
sti
or
out
test
jno
xchg
pusha
outsb
xlat
mov
jbe
push
xor
push
insb
jge
cmp
into
cmc
cs
jmp
ret
cltd
cmc
rdpmc
sti
insl
xor
sbb
popl
inc
push
and
dec
lods
jl
mov
push
test
add
cmp
inc
fwait
mov
push
fwait
movsl
inc
dec
and
inc
shrb
cmpsl
push
in
mov
insb
pop
fldcw
test
push
les
orl
adc
xlat
mov
sub
ss
push
xor
insl
add
insb
mov
aaa
jg
sub
push
mov
or
out
xchg
pop
test
addr16
sti
cmp
fptan
and
jl
or
fdivrl
push
fwait
mov
jns
cmp
rorl
in
or
mov
test
mov
push
jns,pn
lea
inc
jp
adc
inc
sbb
inc
sbb
sbb
scas
sahf
push
int
shl
xor
lea
cmp
roll
mov
push
pop
mov
dec
loope
dec
xor
out
mov
mov
xlat
mov
mov
hlt
inc
insb
add
mulb
xor
jg
add
jns
cmp
and
pop
xor
lahf
pop
xor
out
sti
sahf
pop
popf
jo
daa
cltd
push
stos
dec
js
dec
test
leave
add
dec
insl
mov
jo
std
add
fwait
arpl
jle
or
lods
cwtl
push
in
mov
jle
sub
and
or
repnz
fwait
inc
and
hlt
adc
or
or
inc
int3
enter
dec
aaa
repz
push
xchg
cli
add
jge
jbe
push
cmp
sar
adc
cmp
push
pop
aam
sbb
call
out
pop
pop
dec
call
inc
lds
lret
adc
jno
ljmp
test
mov
pop
loopne
dec
loop
push
popa
lds
outsb
ds
call
mov
sbb
sbb
ret
or
sbb
or
leave
jb
dec
cmp
push
dec
pushf
push
test
fsts
fs
fadd
fnstcw
icebp
and
into
add
in
sbb
int
and
xchg
dec
cli
outsb
push
mov
dec
mov
ja
cmp
scas
sbb
xor
es
insb
dec
xor
lds
inc
sub
adc
mov
xchg
and
std
inc
mov
out
push
pop
pop
shrl
add
xor
pop
out
and
sbb
lea
jp
fimull
decb
bound
mov
jb
and
ja
jecxz
ljmp
xchg
jo
mov
sub
adc
mov
push
imul
dec
das
push
mov
lret
cltd
push
dec
push
mov
imul
test
and
lods
push
aad
cmp
or
movsl
ret
or
xchg
and
xchg
pop
popa
std
insl
loopne
sub
xchg
and
dec
pop
in
and
int3
sub
pop
ret
inc
mov
or
mov
dec
mov
fsubrl
aad
imul
ret
pushf
nop
cltd
or
add
dec
out
xchg
lcall
push
sub
mov
int
adc
jo
sbb
icebp
add
cmpsl
mov
lods
out
insb
xchg
popf
aam
mov
dec
xchg
je
mov
mov
cmc
or
fdivrl
in
lret
ret
or
xor
inc
xor
inc
jecxz
rcrl
jnp
mov
push
rorb
jno
dec
xchg
sub
ss
xor
es
push
movsb
out
insb
jp
xor
add
jecxz
jecxz
lea
mov
in
enter
sbbl
cmp
xor
cmp
aas
mov
jmp
arpl
cmp
inc
jne
out
push
jecxz
aad
cmp
or
mov
mov
or
sahf
roll
sub
daa
stos
mov
xchg
pop
mov
pop
mov
dec
cmc
cmp
aaa
sbb
test
or
test
ds
xchg
mov
dec
scas
fwait
and
jns
sarl
mov
jg
pushf
push
xchg
pop
push
inc
mov
push
outsb
jl
test
sbb
mov
mov
repnz
stc
decl
mov
add
xchg
adc
pop
out
sbb
xchg
cs
dec
test
mov
push
or
inc
scas
ret
and
mov
inc
lret
or
xlat
test
hlt
aam
jo
call
push
sub
or
sub
add
jne
loope
in
lcall
pop
hlt
add
cwtl
int3
push
fsts
hlt
add
negl
push
filds
add
cmc
test
sub
dec
mov
add
mov
xor
gs
shlb
or
dec
mov
add
dec
sub
clc
cli
or
hlt
pushf
pop
jp
xor
or
push
or
rcr
sub
insl
dec
sbb
pop
ret
inc
dec
int
imul
mov
movsb
or
dec
repz
out
jp
mov
mov
cmpsb
cwtl
xchg
pusha
mov
addr16
xor
inc
clc
add
sub
pushl
jo
mov
mov
or
adc
dec
push
jo
fiadds
xor
xchg
cmp
out
out
inc
popa
fstl
xchg
std
push
dec
pop
bound
sarl
xor
push
scas
xchg
shll
aad
xor
out
pop
push
mov
pop
cli
mov
and
out
inc
ljmp
mov
sub
xchg
mull
adc
lea
mov
pop
sbb
jo
pop
mov
mov
lods
mov
dec
adc
fisttpll
and
cli
ljmp
cmp
xor
loop
add
dec
shll
or
dec
mov
inc
sub
xor
orl
jp
adc
mov
addl
inc
dec
out
and
jecxz
lods
data16
add
inc
jnp
stos
mov
addr16
leave
mov
or
add
push
ss
pop
dec
fld
sbb
fidivl
ficomps
xchg
rolb
adc
cmp
push
jne
push
stc
jns
jo
and
daa
mov
and
mov
gs
xchg
inc
push
inc
ja
cmpsl
dec
add
sbb
cmp
fsubrs
push
push
inc
in
popf
sub
and
push
inc
jge
inc
pop
mov
pop
xchg
pop
lods
and
sub
adcl
xchg
enter
jne
jmp
inc
test
jnp
add
or
push
pop
mov
dec
mov
add
mov
je
mov
lock
pop
add
dec
mov
loop
jbe
loopne
mov
xorl
add
sub
lret
lea
mov
or
adc
imul
inc
adcl
mov
sahf
xacquire
or
sbb
mov
xchg
hlt
cwtl
subb
jnp,pn
les
fisubl
out
cmc
inc
mov
mov
test
repz
adc
jb
mov
xchg
dec
inc
jae
hlt
out
ret
fwait
pusha
in
sub
loopne
cs
ja
cld
std
call
xchg
mov
add
mov
repnz
lods
xor
nop
neg
pop
in
mov
in
sbb
xor
lahf
fnstcw
sub
or
decb
mov
in
mov
aam
or
leave
mov
pop
lea
mov
scas
inc
aad
cmpsl
jle
and
in
shll
xor
inc
mov
mov
inc
push
stos
negl
test
mov
in
sbb
daa
sub
emms
sbb
ss
xor
lret
out
push
cmp
fisttpl
mov
xchg
pop
pop
popf
or
cmp
lods
iret
loop
stos
outsb
mov
mov
mov
sarb
mov
ds
loop
cmp
cltd
pop
int
push
push
jbe
outsb
push
loope
test
cmpsb
out
in
xor
into
mov
dec
cmp
lock
sarb
ljmp
out
xor
inc
dec
arpl
inc
scas
mov
fistl
dec
dec
pop
test
push
andb
bound
jg
mov
xchg
sub
jo
out
pop
add
stos
fmul
jnp
sub
or
nop
bound
lods
mov
iret
cmp
into
mov
imul
int3
or
arpl
xchg
sti
dec
lret
xor
xor
add
movsb
ret
mov
xchg
les
std
imul
test
mov
fldl
push
call
inc
jecxz
test
and
jo
and
mov
adcl
fisttpl
out
adc
outsb
sub
add
mov
pop
mov
lds
dec
repz
xchg
adc
jecxz,pn
es
pop
jbe
fimuls
bound
add
nop
std
stc
mov
lock
dec
ficompl
xor
cmp
stos
mull
mov
or
orb
int
rorb
xor
dec
cmp
cmpsl
jmp
jecxz
imul
or
jmp
push
inc
or
mov
fsts
jle
ror
push
and
pop
stos
mov
inc
pop
and
insb
pop
iret
mov
sbbb
inc
dec
pushf
out
pop
fbstp
aam
mov
jno
sahf
adc
cmp
test
add
jnp
das
jbe
inc
out
jne
mov
or
jp
xchg
aad
lcall
inc
xchg
sbb
pop
inc
xlat
adc
mov
ljmp
cmp
mov
cs
pop
xchg
add
lfs
dec
test
loopne
sar
lock
testb
push
fwait
stos
repnz
push
lcall
ror
icebp
xchg
adc
jecxz
int
mov
push
mov
in
cmpsb
shr
mov
inc
lcall
jo
nop
dec
lock
mov
dec
dec
fld
fdivs
mov
inc
imul
ss
es
adc
lahf
mov
jl
icebp
mov
xor
xchg
or
rcll
inc
aaa
pushf
pop
pop
arpl
push
cmpb
and
xchg
das
sbb
adc
insb
add
xor
das
fcmovbe
ljmp
dec
xchg
jecxz
loopne
outsl
ret
cmp
ljmp
sub
bound
or
dec
js
call
jge
pop
xchg
repnz
jno
mov
sub
lret
in
test
or
jo
or
repz
inc
pop
cmpsl
add
cld
jnp
xor
lahf
xchg
add
lds
divl
addr16
mov
lcall
mov
sub
push
inc
xor
dec
xor
add
fwait
and
fisubrl
or
mov
fcmovnbe
mov
mov
lods
dec
cmp
push
je
sbb
sahf
and
int
xor
adc
fsubrl
jecxz
and
or
push
in
add
cmpb
pop
mov
sub
dec
mov
lcall
or
sub
pop
pop
mov
iret
imul
fsubrl
dec
mov
mov
mov
mov
imul
loope
sub
push
mov
cmp
cwtl
repnz
adc
xchg
in
push
nop
test
xor
out
adc
out
pop
roll
mov
push
cld
add
ret
pop
mov
jns
outsl
enter
addr16
in
dec
cmp
or
icebp
cmp
out
and
sub
mov
outsl
ret
sbb
adc
adcb
sbb
xchg
fnsave
cmp
cmp
aas
push
and
in
ss
push
out
sub
lods
lods
push
mov
adc
inc
mov
cmp
jno
into
insb
mov
jp
outsl
xor
mov
andb
test
data16
inc
repz
adc
mov
cmc
cmp
lea
sti
popa
mov
in
xchg
leave
ret
add
sbb
aas
dec
add
sub
sarl
ficoml
push
fs
loopne
mov
arpl
mov
jg
gs
xchg
push
mov
pop
setns
cli
lock
dec
jp
fldenv
stos
ret
insb
jecxz
scas
inc
adc
lcall
popa
pop
jno
cmp
pop
push
popf
and
adc
imul
stos
bound
popl
mov
faddl
mov
add
jne
xchg
mov
mov
addr16
aad
xchg
xchg
xchg
mov
lods
cli
sahf
fwait
sbb
clc
repnz
fistpll
mov
cmp
or
jb
dec
stos
sub
std
push
pop
or
cmpsl
lds
sub
popf
in
inc
sbb
jmp
and
lds
jb
cli
mov
inc
jecxz
pop
fwait
mov
sub
jne
into
test
adc
icebp
in
xchg
mov
pop
jmp
js
notl
aaa
pop
pop
inc
jg
jnp
ljmp
ret
xchg
dec
lds
sub
into
add
jl
and
ret
mov
xlat
lret
int
push
mov
mov
arpl
or
insl
pop
xor
jle
movsl
mov
xor
fcomp
imul
mov
pop
pop
push
or
push
into
in
push
fld
adc
insb
jb
cli
cmpsl
cmp
mov
cmp
out
mov
sbbb
testb
out
xor
jo,pt
fcoms
pop
mov
sbb
mov
push
test
jecxz
int3
int
dec
ret
jmp
xor
stos
outsl
xor
imul
pop
dec
orl
roll
mov
jnp
mul
mull
sar
stos
adc
xchg
jmp
xchg
iret
mov
push
test
push
lea
pop
iret
ret
jge
test
mov
out
pop
inc
icebp
or
cld
mov
inc
push
and
movsb
mov
sti
add
jo
aaa
xor
and
jle
push
xor
jmp
adc
cld
add
inc
movsl
lods
aaa
sub
dec
stos
jle
dec
sub
mov
adc
das
daa
or
iret
nop
mov
aas
dec
push
dec
xchg
ss
adc
add
cs
xchg
or
js
mov
pop
mov
outsb
mov
lds
jl
xorb
adc
jbe
or
mov
jne
fcoml
pop
dec
mov
fcom
ja
push
mov
inc
xor
enter
lds
xorb
into
xchg
mov
fdiv
out
ficoml
add
aaa
lcall
scas
enter
js
aas
or
popa
insb
scas
mov
dec
gs
scas
cltd
in
js
roll
shll
dec
stos
leave
xchg
shlb
pop
iret
pop
mov
lock
lock
mov
aaa
dec
xor
pop
js
idiv
xchg
sti
pop
push
ror
pushf
mov
push
push
aas
sbb
sub
pop
dec
cwtl
movsb
push
jnp
pop
cmp
adc
aaa
and
das
pop
mov
mov
xchg
mov
inc
jne
ret
rolb
xchg
bound
cmp
in
mov
lcall
addr16
fisubrl
mov
ret
test
push
sub
or
loop
fucomi
test
mov
push
imul
lods
mov
xor
movsl
jnp
call
test
fiadds
push
push
jmp
lahf
out
dec
mov
cltd
jl
sub
cmc
mov
loope
pop
cs
push
mov
jl
or
adc
scas
repz
xlat
cmp
jne
adcb
and
stc
cmp
sub
sbb
rcrb
fwait
imul
imul
dec
sti
dec
dec
add
or
dec
mov
ljmp
jl
xor
sbb
jne
notb
rclb
mov
adc
pop
mov
mov
fcompl
es
arpl
xor
stos
and
mov
in
outsb
pop
imul
add
mov
mov
lea
aaa
dec
iret
jnp
mov
and
adc
jecxz
mov
mov
out
inc
int
stos
imul
ljmp
aas
mov
pcmpeqb
fisubs
mov
jo
stos
les
mov
cltd
cwtl
addb
clc
ja
shl
cmp
incl
inc
xor
out
pop
sub
notl
xchg
mov
out
test
dec
ljmp
jne
lcall
cltd
cwtl
inc
ljmp
jmp
stos
xchg
int
sbb
xor
fs
xchg
push
jp
out
jge
mov
pop
xor
sbb
and
stos
mov
js
in
adc
jg
insl
or
mov
inc
push
mov
test
adc
and
xor
mov
cmp
notl
push
pusha
je
sub
dec
push
mov
in
out
popf
and
or
insl
jecxz
push
pop
std
pop
dec
mov
lret
stos
add
jle
fists
fstpt
inc
lods
pop
hlt
xchg
int3
cltd
adc
push
xchg
fsub
fnstenv
add
rorl
jecxz
mov
cmp
sti
xor
push
lock
addl
sbb
stos
gs
pop
pop
ljmp
leave
pop
jno
fwait
enter
mov
sbb
add
fiaddl
pop
in
mov
jmp
push
lret
cmc
xchg
adc
mov
test
mov
sub
jle
jmp
rcr
sub
mov
imul
adc
in
lock
sbbb
int3
adc
sbb
add
or
out
push
jle
pop
mov
push
gs
bound
push
int
adc
mov
shll
pushf
dec
push
imul
push
adc
push
xor
mov
lret
lret
movntq
inc
mov
data16
lcall
xor
xor
cmc
data16
popa
pusha
and
std
dec
jmp
xchg
data16
sub
fistps
adc
dec
inc
leave
mov
les
repnz
scas
mov
push
les
fisubs
dec
jge
adc
fsubs
outsl
test
lods
out
cmp
out
std
fidivrs
push
xchg
aad
fbstp
pop
sub
aam
sbb
and
sti
inc
jo
cmp
iret
mov
rcr
dec
stc
and
mov
outsl
add
fdivs
out
scas
loop
loop
movsb
pop
xchg
fbstp
mov
lock
jo
jns
pushf
cmp
jle
inc
roll
dec
test
jb
adc
sbb
add
xlat
mov
add
ds
sar
stc
outsl
aam
sub
mov
insb
sub
xchg
add
sahf
add
std
pop
addr16
sub
scas
lea
adc
inc
jmp
mov
xchg
stc
push
add
stos
xor
inc
lea
xchg
adc
mov
lret
cld
lods
lcall
xchg
inc
sbb
out
or
js
dec
mov
popa
and
repz
sbb
lcall
xor
pop
sbb
mov
sbb
lahf
fidivrs
inc
mov
pop
jle
daa
iret
mov
push
sbb
lret
jo
add
adc
mov
dec
xchg
rsm
test
and
subl
lds
outsb
popa
pop
mov
adc
pop
jbe
jecxz
cmp
jae
out
jns
xchg
popf
jg
aad
dec
jb
mov
std
pop
out
rcll
mov
xchg
push
sbb
or
pop
daa
shl
xchg
lock
popf
stc
push
lea
xchg
dec
imul
mov
xchg
cs
dec
xchg
pop
test
mov
mov
or
call
nop
pop
pop
pushf
sub
mov
loop
mov
jne
mov
fcompl
sbb
lds
push
aam
cwtl
adc
inc
mov
sarl
or
pop
imul
subl
mov
add
pop
jge
add
add
push
or
ds
sub
in
mov
mov
mov
jmp
xchg
adc
mov
sub
adc
into
pop
fcomps
inc
dec
jp
je
daa
loope,pn
je
dec
jmp
ja
dec
in
fwait
mov
imul
and
xor
mov
fadds
mov
mov
xchg
popf
sub
xchg
daa
aas
pop
hlt
cmp
jl
mov
or
inc
jae
add
xchg
xor
rorb
mov
or
or
lea
jl
or
icebp
jne
adc
mov
push
sar
movsb
in
mov
or
nop
out
add
cmc
mov
and
sub
xlat
stos
ret
ret
sbb
cmp
pusha
int
xor
sbb
lret
mov
pop
lock
mov
pop
sub
data16
daa
popa
fs
loopne
shll
setg
and
xchg
test
outsl
fcomip
sub
mov
clc
in
add
rcrl
pop
sbb
rorb
icebp
enter
mov
sti
or
jg
popa
cmp
cli
repnz
jae
sbb
mov
push
je
jo
cmp
mull
jge
mov
add
out
sbb
inc
jmp
xchg
sbb
mov
subl
daa
out
ljmp
sbb
jno
iret
pop
inc
sub
jns
orb
shlb
cld
cmpsb
xor
push
lods
jp
sub
push
jg,pt
lods
insb
jo
xchg
jge
ds
pusha
in
jne
out
and
cwtl
sahf
cmp
ds
repz
cmpsl
out
in
rcrl
test
push
test
sbb
int
xchg
sbb
dec
aam
sarl
mov
cmp
inc
fsts
insl
out
stos
sbb
push
cwtl
clc
mov
gs
inc
adc
pop
mov
xchg
lods
in
xor
mov
stos
aaa
xor
nop
sub
pop
xchg
inc
les
outsl
mov
mov
lahf
push
ljmp
sub
add
or
sub
mov
cmp
repnz
outsb
into
mov
hlt
iret
loop
imul
das
jns
gs
icebp
int3
roll
mov
push
std
out
mov
pushf
sbb
xchg
inc
scas
gs
js
jge
int
popf
cli
test
lret
nop
add
fwait
mov
cli
fists
add
and
stos
or
lods
jle
je
aad
push
sub
or
sub
inc
xor
mov
clc
imul
jg
pusha
or
out
cmpl
clc
jnp
fldt
test
sbb
xchg
xlat
or
xchg
mov
inc
mov
loopne
lahf
jb
sub
in
sahf
sti
mov
leave
jbe
stos
arpl
jmp
fcomp
dec
sbb
stos
fsubp
push
iret
mov
test
cmp
loope
lret
fstps
xchg
ss
out
add
adc
mov
inc
push
xor
lahf
subb
xchg
jb
xor
je
adc
push
sti
imul
add
les
xorb
inc
insb
xor
bound
lcall
ljmp
jmp
cmp
popa
mov
hlt
movsb
insb
scas
fwait
push
test
adc
pop
les
aad
sub
lahf
or
lahf
mov
mov
sti
sahf
fsubl
push
das
jp
hlt
mov
enter
cmp
jae
lea
loopne
test
cmp
popf
jecxz
push
dec
out
dec
sbb
jbe
out
pop
dec
movb
jecxz
inc
subl
lcall
imulb
jnp
mov
push
jns
cwtl
add
cmp
pop
xchg
mov
adc
addr16
xchg
ljmp
push
push
xchg
push
xlat
push
call
xchg
sbb
test
mov
in
stos
mov
outsb
add
sub
or
adc
pushf
sbb
xor
icebp
insl
xchg
xchg
push
push
in
icebp
outsb
pop
pop
ja
cmp
test
pop
jmp
inc
ljmp
inc
in
jno
out
es
iret
adc
push
or
int
hlt
sub
je
mov
popf
xchg
and
push
mov
shlb
jae
scas
pop
sarl
push
pop
movsb
and
push
pop
out
mov
out
lea
mov
in
jb
mov
aad
dec
test
push
xor
scas
sahf
jnp
pop
js
fiaddl
clc
lret
mov
push
push
cmpsb
pop
mov
inc
arpl
push
pop
mov
gs
movsl
into
cmp
push
ficompl
addr16
sub
cmc
loop
shlb
sbb
add
fwait
cmp
aam
hlt
shrb
dec
mov
mov
pop
out
xchg
pusha
dec
arpl
outsb
sbb
xor
inc
and
mov
subb
and
jae
movsl
negl
nop
je
fstl
xchg
outsl
sbbb
bound
push
test
inc
push
test
test
loopne
out
loop
imul
cmp
sbb
movsl
out
loopne
inc
flds
push
mov
pop
popf
repz
popf
inc
js
inc
loop
fistpll
inc
test
roll
or
cmp
mov
imul
dec
rcr
xlat
pop
push
rcll
mov
cmp
dec
cmc
push
pop
ror
push
push
and
mov
iret
aam
cmp
ret
dec
std
push
insb
pop
mov
mov
imul
or
mov
jb
cmp
push
mov
ss
mov
shl
xchg
repnz
xor
cld
scas
push
test
ret
bound
jmp
outsb
test
out
cmp
stos
jno
jmp
sub
rcll
mov
shrb
push
inc
loope
push
sub
cmc
adc
lods
lods
mov
push
push
sub
orl
clc
mov
out
pop
out
ja
or
xchg
std
pop
sub
sub
imul
push
xor
sbb
mov
rcrb
call
lret
lret
xchg
outsb
enter
mov
mov
lods
pop
outsl
mov
mov
add
mov
addr16
cmp
and
je
mov
in
icebp
mov
gs
cmp
iret
scas
mov
fisubl
jb
insl
mov
out
pop
pop
lcall
lahf
mov
inc
popa
xor
lods
aam
gs
add
jb
jg
xchg
xchg
mov
mov
jns
jmp
xchg
mov
mov
leave
cltd
jnp
pop
arpl
push
rolb
repnz
add
in
dec
dec
push
mov
xor
lds
jge
lret
bound
add
inc
xchg
sbb
cmp
push
bound
loop
jb
shll
mov
out
mov
testl
add
das
popa
stos
push
pop
cmpsl
xor
jnp
adc
imul
cmp
sub
jmp
xor
ds
in
pop
leave
jg
xor
xor
dec
cli
ss
xor
xor
ret
ljmp
jp
pop
sub
and
test
cmp
pop
loope
xchg
lar
xor
inc
aad
inc
mov
int
fistps
fs
jne
imul
rorl
and
int
cli
and
add
inc
push
sub
lock
xchg
pop
ret
loop
mov
mov
and
mov
ja
add
into
add
push
jns
repz
ds
lcall
cmp
mov
mov
inc
out
popa
mov
xchg
fucomip
and
cli
out
ss
pop
out
sbb
xor
aad
das
repz
push
inc
faddp
hlt
push
mov
xchg
loop
in
pop
cmp
aam
cmpsl
out
test
add
fs
xchg
adc
and
test
sbb
mov
jbe
repnz
lcall
add
stos
sbb
lcall
scas
hlt
jg
or
fldl
xor
or
jbe
sbbb
adcb
jl
mov
scas
je
mov
xor
rcrb
repnz
out
stos
fucomip
dec
jl
push
xor
fiadds
jg
iret
cmpsb
mov
pop
jecxz
hlt
mov
test
lea
jne
fistps
inc
pop
lret
mov
cltd
add
ds
js
sub
das
pushf
inc
insl
lds
ss
roll
xchg
hlt
cld
sub
lock
jne
ret
mov
clc
inc
inc
pop
sbb
push
adc
inc
adc
cmc
out
test
mov
ret
sbb
xchg
jns
mov
addr16
aas
aad
inc
bound
mov
pop
push
or
in
push
sbb
jae
xchg
sbb
popa
leave
add
sub
pop
or
js
adc
popa
cltd
ljmp
pop
test
lea
daa
xor
fwait
push
xlat
jne
rclb
pop
mov
dec
shl
add
and
mov
in
push
mov
insb
pop
mov
test
lret
cltd
xchg
fs
ffreep
cs
ret
mov
loop
mov
jle
adc
mov
push
and
test
lods
lock
in
arpl
js
lods
clc
bound
cmp
fs
fs
jbe
stc
or
fdivrl
scas
xchg
je
sbb
imull
sbb
mov
or
rolb
repz
outsb
das
sub
mov
xchg
add
push
andb
mov
jo
enter
adc
loopne
sub
mov
mov
mov
ljmp
aad
jmp
sub
and
sbb
mov
adcl
cmp
push
xor
out
inc
imul
repz
stos
arpl
sub
mov
out
cmp
jmp
cltd
mov
repz
fdivrs
out
push
push
adc
cltd
in
lret
pop
push
xchg
push
sub
test
in
jbe
xor
call
cmp
mov
mov
ss
lret
mov
fadds
aad
inc
mov
shlb
call
mov
sti
jecxz
or
es
imul
pusha
mov
jns
inc
sbb
sub
cmp
mov
mov
push
leave
lds
xchg
push
mov
jns
pop
jg
insb
pop
enter
pushf
push
push
lock
cmpb
movsl
popa
shr
sub
popa
insl
fucomi
push
mov
call
out
xor
xor
cs
and
adc
pop
mov
aam
mov
cmpsl
aad
xor
pop
dec
imul
xchg
xor
cmp
iret
jns
dec
push
inc
movsl
pop
leave
sbb
scas
ja
cmp
les
cmpl
lret
jge
cld
sbb
data16
into
insb
jo
jl
js
push
shll
or
dec
ret
and
bnd
push
inc
mov
cmp
roll
shrl
out
add
fildl
imul
sti
inc
pushf
filds
test
add
in
adc
lods
imul
aaa
jae
mov
addl
mov
jmp
mov
xchg
add
enter
mov
or
movl
adc
xchg
mov
dec
fwait
lock
lahf
sbb
pop
sub
pop
sbb
push
pop
sub
cmp
lods
jle
jne
int
pop
test
fsubrl
mov
xor
fcoms
adc
js
sub
cmp
mov
mov
xchg
jns
insl
cld
xor
mov
xor
dec
and
aaa
popa
in
ffreep
and
fdivrs
enter
clc
pop
js
inc
push
add
dec
aas
ret
push
loopne
pmullw
sub
jp
jns
push
xchg
jb
repnz
ja
sub
mov
rclb
pop
sbbl
sbb
andb
femms
xor
nop
sbb
dec
and
and
fstpt
inc
mov
jae
or
jg
jl
aam
mov
sub
push
out
loope
mov
clc
stos
dec
push
mov
xor
rcrl
sahf
mov
or
xor
mov
xor
insl
mov
pop
xchg
sub
scas
pop
xor
lcall
adc
repz
jmp
rclb
xor
push
cmc
mov
add
and
lock
add
inc
inc
xchg
mov
add
jae
popf
dec
xor
fucom
in
xchg
repz
sub
out
rcll
adc
sub
push
add
enter
adc
jmp
ds
adc
rcr
stc
inc
jp
ds
divl
push
xchg
mov
pop
das
popa
adc
fdivrl
mov
mov
es
add
fidivs
and
pop
mov
orb
add
cli
add
mov
cmp
vlddqu
inc
mov
testb
mov
test
add
push
addl
or
or
mov
iret
dec
nop
lods
loopne
in
cmp
in
xchg
push
stos
xchg
sub
sbb
adc
faddl
adc
pushf
cmp
cmc
mov
hlt
out
rorb
jecxz
lret
inc
sbb
pop
hlt
xor
in
mov
adc
mov
xchg
lahf
jnp
movsl
dec
or
in
inc
sub
mov
xchg
pop
jp
mov
popf
test
push
popa
xor
mov
jp
outsl
mov
xchg
insl
out
rcll
ljmp
push
mov
sub
in
outsl
loopne
cs
mov
movsb
out
filds
addr16
xor
sub
aas
add
aam
inc
add
mov
nop
cmp
or
into
lcall
mov
inc
push
nop
je
int3
inc
add
add
pop
andb
inc
daa
mov
call
repz
fidivrl
insb
and
adc
shl
imul
sbb
cwtl
imul
sahf
bound
mov
mov
pop
sub
xchg
cwtl
fistps
mov
enter
test
cmp
xchg
or
es
movsl
and
int3
fcompl
jg
arpl
popa
mov
jg
jge,pn
lret
arpl
push
dec
cs
aad
pop
std
sub
repnz
push
sbb
bound
lea
and
push
mov
cmp
sbb
push
insl
xchg
xchg
sub
jns
mov
insl
aam
add
test
fnstcw
inc
xlat
xor
outsl
mov
icebp
jo
pop
cmc
mov
jg
jne
push
test
cmpsl
mov
push
clc
mov
loope
lds
pop
aaa
test
add
arpl
int3
add
or
jno
test
mull
lahf
lods
xor
mov
dec
pop
out
sbb
mov
inc
push
popf
addr16
outsb
lahf
xor
pop
sub
jb
push
xlat
adc
rorb
xor
pop
out
pusha
adc
push
push
daa
jp
dec
mov
loope
mov
aaa
adc
push
lahf
cld
fists
jmp
and
ja
sbb
int3
xor
or
popa
les
jne
and
ret
inc
test
mov
testl
xor
adc
ljmp
xor
aaa
lods
adc
lret
mov
xor
fcompp
enter
dec
jmp
clc
test
sub
repnz
icebp
inc
sub
dec
inc
das
add
cmpsl
inc
cmp
sahf
fdivr
ret
sub
in
icebp
push
fisubl
push
push
pushf
pop
out
inc
cmp
mov
pop
mov
iret
daa
add
hlt
xchg
mov
sub
add
fiadds
jge
sahf
test
lret
sahf
lahf
dec
xchg
add
pop
stc
xchg
xchg
fbstp
fists
lcall
out
jl
fiaddl
dec
jae
lds
push
addl
mov
out
xchg
mov
adc
push
cmp
mov
sbb
ret
jo
jnp
lahf
and
push
pop
cmp
divb
pusha
pop
in
pop
pop
leave
cmc
movl
addr16
push
in
adc
jno
sti
sub
and
pop
out
das
movsb
test
icebp
shlb
xchg
pushf
mov
push
inc
jle
cmp
jo
xor
and
cmpb
test
nop
ds
ss
cmpsb
push
out
pop
shrb
aas
mov
adc
lcall
sbb
mov
shr
jle
push
fwait
jl
push
xchg
scas
xchg
insb
enter
xor
jl
lea
movsl
mov
inc
pop
icebp
fcmovnbe
loope
sbb
imul
or
loope
pop
movsb
pop
mov
scas
xor
int3
imul
jecxz
seto
pop
jecxz
mov
xchg
ljmp
out
ret
mov
mov
les
pop
sahf
es
das
imul
ljmp
fidivs
out
fimull
lahf
lea
mull
stos
push
aas
xlat
adcb
mov
popf
fists
pop
jbe
das
lcall
test
vpsllq
inc
pop
add
pop
or
jb
and
sub
adc
add
jae
clc
cld
rorb
int
add
inc
xchg
outsl
cwtl
decl
dec
lahf
insb
sti
subb
mov
mov
and
mov
ss
adc
xchg
adc
mov
mov
fnsave
test
mov
adc
aam
jae
adc
add
repz
dec
mov
pop
inc
repnz
lahf
ret
or
aaa
fidivrl
sahf
mov
out
and
movsb
or
xlat
jo
jmp
fucomip
scas
mov
or
mov
hlt
ss
in
mov
cmp
or
xor
sub
sbb
test
in
inc
aaa
test
push
ljmp
loope
pop
cwtl
insl
gs
nop
xchg
cmp
packuswb
aaa
mull
lret
push
cvtpi2ps
pop
mov
push
iret
enter
dec
pop
je
call
xchg
add
decl
or
dec
shrb
cs
pop
inc
adc
in
push
mov
cmpsl
ljmp
jno
add
mov
mov
xor
hlt
aad
push
mov
jo
jbe
lahf
xor
sbb
std
dec
movsb
adc
loope
dec
fcmove
popa
ja
stos
dec
imul
xchg
pushf
out
repnz
jne
push
dec
dec
and
stc
cli
dec
fwait
imul
call
cld
xor
and
out
xchg
pop
repz
sbb
in
dec
int3
psrlq
dec
push
add
fwait
roll
xchg
or
test
js
add
add
push
ja
popf
push
pop
sbb
xchg
inc
fistpll
sarl
push
in
add
sbb
ret
js
xchg
fidivs
repnz
mov
dec
mov
push
and
icebp
cmp
mov
clc
mov
xor
ret
adc
lock
repnz
mov
lret
adc
fiaddl
cmp
shlb
dec
adc
add
fsts
subl
test
scas
push
dec
or
add
outsl
into
jno
cmp
test
xchg
pop
test
mov
cmc
jle
pop
jb
jae
aad
inc
dec
push
pop
xor
leave
jnp
mov
ss
scas
xchg
pop
pushf
push
pop
mov
dec
movsb
std
adc
mov
jge
pusha
mov
inc
mov
imul
icebp
pop
call
nop
mov
pop
and
in
mov
bound
inc
push
mov
cmp
fst
outsb
aam
push
inc
push
add
or
aad
add
pop
sbb
aam
insb
sarl
aaa
loope
xchg
pop
mov
test
scas
and
je
fcmovb
insb
push
jb,pt
insb
out
sbb
or
sub
test
leave
or
lret
jb
fmull
pop
outsb
aas
mov
pop
push
cmpsl
mov
popa
fisubrs
inc
sub
cmp
shll
mov
mov
inc
or
ret
sub
inc
xor
push
push
addr16
push
and
mov
imul
mov
cltd
into
in
xchg
ja
jae
and
adc
cld
popf
mov
xchg
mov
scas
sbb
add
mov
push
mov
lahf
sbb
jns
mov
movsb
sbb
sub
test
lea
mov
sahf
mov
pop
movsb
cs
adc
add
jle
inc
js
lcall
and
mov
sbb
xchg
jne
mov
push
adc
mov
fsub
jmp
sub
add
pop
sbb
int
call
in
xor
std
insl
fwait
lahf
jns
es
or
ret
rolb
aad
pop
sub
cmp
les
lret
dec
sahf
adc
jmp
in
cmpb
ljmp
dec
sahf
xchg
test
inc
mov
fmul
xchg
sub
adc
fisubs
lock
or
xor
mov
mov
fildll
iret
mov
xchg
add
add
loope
xchg
sti
cmp
mov
mov
dec
pop
clc
dec
mov
push
mov
or
fs
xor
pop
jb
clc
adc
xor
cmp
rorl
je,pt
mov
mov
cmp
add
out
lds
mov
xchg
movsb
data16
lret
outsb
les
in
or
fsubrs
cmpb
push
dec
pusha
cmp
inc
sub
hlt
stos
out
mov
fucomi
push
inc
movsl
les
mov
xchg
push
mov
push
test
test
ret
adc
stos
cmp
mov
test
sub
xor
adc
sbb
cmp
sbb
test
mov
xchg
push
out
ret
adc
cltd
mov
cmp
cmp
out
adc
adcl
sub
roll
insl
nop
inc
push
int
dec
mov
int
in
cmp
popf
inc
lds
sbb
movsb
lahf
jno
jmp
inc
js
mov
insl
es
das
loop
push
into
jg
mov
mov
shrl
ret
sub
jo
test
shl
fs
adc
or
shll
xchg
add
arpl
mov
inc
adc
xchg
ja
roll
pop
ficomps
pop
mov
daa
int3
gs
jbe
jge
aad
loopne
fadds
jp
popf
inc
hlt
mov
mov
in
push
mov
lea
popf
add
es
shlb
aaa
push
iret
cmp
adc
pop
adc
pop
push
inc
ja
add
enter
mov
cli
cmp
lods
jo
and
sub
and
push
enter
addr16
cmpsb
test
mov
push
push
push
push
arpl
stos
mov
jne
clc
int
and
add
jle
inc
push
pop
xchg
sqrtps
popa
cwtl
mov
ret
xor
sbb
mov
cs
xor
xchg
inc
test
cltd
lods
xchg
mov
add
push
mov
push
or
xchg
sbb
sbb
adc
cli
leave
cmc
lods
mov
xchg
mov
scas
es
jo
fs
adc
lods
orb
mov
mov
and
repnz
cli
call
mov
mov
mov
mov
jne
sbb
mov
mov
and
ss
inc
jnp
mov
or
popf
jge
rcll
mull
dec
push
add
shlb
inc
xchg
call
imul
push
cwtl
xchg
cmp
fdivr
mov
or
cmpsb
sub
push
loopne
xchg
fidivrs
jne
xchg
jo
repnz
loop
xchg
lods
lds
pop
pop
push
or
addb
aaa
jnp
outsl
mov
sbb
pop
ja
addr16
ret
nop
cmpl
test
sbb
cmpl
fnstenv
or
mov
enter
mov
add
rclb
int
mov
jge
mov
pop
fnstenv
lods
or
mov
push
js
mov
mov
or
pusha
mov
das
fst
add
jo
loope
lret
cmpsl
adc
ds
inc
pop
jl
fimuls
je
aad
mov
jp
into
lods
sbb
testl
inc
xchg
xchg
int
incb
leave
mov
adc
inc
jae
mov
scas
pop
cmp
sahf
mov
cmp
cmp
jg
aad
sub
std
pop
out
mov
adc
mov
aam
push
ss
ret
add
jp
mov
subb
cmpsb
shl
sbb
pusha
mov
xchg
xchg
xchg
sbb
out
pop
nop
ljmp
fmull
or
jb
aaa
test
or
cmpl
dec
cltd
clc
jl
jno
or
movsl
push
push
aad
cmp
mov
add
cmp
lcall
sbb
pop
sbb
or
xabort
pop
je
cltd
int3
pushf
cwtl
andl
push
mov
vpmaddwd
jge
xchg
sub
pop
sbb
mov
scas
in
cmp
rep
cmc
pop
sbb
sar
faddl
movsl
mov
add
cs
jb
push
inc
xchg
xchg
mov
loop
dec
dec
jle
and
pop
mov
sub
int
ja
insb
subl
push
mov
sub
inc
jbe
cmpsb
out
sub
cwtl
sub
cmpb
pop
xchg
dec
or
sbb
inc
stos
mov
stos
aas
mov
jge
dec
jmp
fsubr
mov
lret
xchg
push
repz
pop
cmp
enter
test
mov
sub
pop
ret
enter
cmp
in
insl
pop
bound
and
arpl
pop
gs
sbb
ja
mov
aad
mov
mov
pushf
cmc
and
sub
leave
adc
dec
push
cmc
aad
jnp
fwait
shr
lret
mov
xchg
sub
cltd
sbb
cli
cmp
mov
inc
mov
cmp
adc
gs
das
push
orl
jo
or
inc
mov
or
xchg
mov
adc
cli
pop
mov
or
mov
cmp
jle
push
mov
ficomps
sbb
jo
mov
lahf
scas
lret
jl
data16
adc
sub
xor
inc
cmpl
outsl
adc
int
int
cwtl
lret
cmp
arpl
shrb
mov
push
in
lods
jb
addr16
enter
js
imul
and
xchg
sub
ret
mov
jnp
inc
dec
inc
call
test
scas
in
push
push
add
cs
dec
xor
sbb
pop
push
fsubrp
push
std
fwait
lods
push
dec
iret
sbb
xor
dec
ja
push
xor
mov
aad
push
pop
xchg
pop
cmp
and
sbb
hlt
test
adc
lcall
inc
sub
fcomip
dec
int3
xchg
xor
es
push
loopne
inc
cmp
shrl
add
xor
push
mov
mov
mov
jg
and
in
or
cltd
inc
and
andl
mov
negb
aas
int
cmp
fsqrt
sbb
andb
inc
cmp
cmp
fidivrl
dec
adc
stos
dec
mov
xchg
mov
pop
sbb
lea
js
pop
push
mov
xorl
repnz
int3
je
icebp
fldt
mov
sub
rcl
push
daa
outsb
jnp
negb
test
cmpsl
addr16
xchg
addr16
xchg
in
jle
inc
sbb
mov
and
push
lahf
mov
push
and
mov
js
mov
and
lods
cmp
iret
into
in
lret
and
ret
aam
and
sub
or
arpl
fcmovnbe
pop
or
xchg
repz
xchg
rcll
cmpsl
jb
inc
adc
xchg
fwait
out
jmp
mov
xchg
adcl
lea
out
inc
popa
xchg
push
push
push
sbb
push
js
inc
int3
pop
ret
jle
les
sub
aam
mov
popa
sahf
test
or
es
cli
test
std
popa
movsb
dec
xor
gs
adc
aad
cmp
push
out
or
add
test
mov
fisttpll
stos
fnstsw
push
mov
mov
in
sbb
inc
adc
inc
aas
mov
sbb
sub
pop
pop
push
mov
lcall
add
out
mov
test
and
mov
leave
jg
ja
data16
outsl
xchg
add
test
test
dec
roll
xor
call
push
cmpsl
shlb
mov
sbb
cs
dec
adc
into
cmp
sbb
das
enter
cmc
lods
cmc
aas
mov
dec
mov
xor
add
fwait
in
ja
notb
adc
shl
xor
xchg
es
ret
inc
sahf
clc
lea
sbb
adc
faddl
dec
bound
jp
ja
pop
sbb
insb
xchg
js
das
dec
sahf
loope
in
addr16
out
insl
test
sahf
xchg
xor
push
push
dec
mov
mov
lahf
scas
imul
outsl
call
jns
pop
cmp
cli
pusha
in
mov
cltd
stos
in
jns
popa
xor
call
test
jl
pop
dec
lods
jne
xor
add
pop
mov
adc
dec
fsubl
imul
sarb
ds
sub
ss
sbb
testb
pop
and
pop
xor
out
das
shlb
inc
out
jmp
adc
jge
imul
and
sub
pop
jmp
dec
ljmp
cwtl
pop
jmp
dec
in
mov
sub
fcmovu
sti
mov
push
repz
cmpsb
pop
mov
push
fs
adc
addr16
xchg
fisttpll
dec
and
mov
push
jno
call
jno
shll
jl
push
lret
loopne
inc
and
push
xor
dec
test
xor
xchg
inc
incb
jnp
cmpsb
adc
fidivrl
gs
fidivrs
or
adc
enter
clc
imul
sub
and
adc
pop
adc
dec
ss
and
scas
aaa
adcl
cmpsl
xchg
push
inc
or
cmp
dec
arpl
pushf
inc
xchg
rorb
xchg
xchg
mov
cmpsl
push
leave
mov
stos
and
rcl
dec
push
cmp
push
imul
outsb
xor
pop
cmp
xchg
add
dec
shll
mov
inc
pop
fidivrl
sbbb
push
mov
xor
jne
shl
addr16
xchg
shl
dec
loopne
mov
mov
mov
hlt
sbb
sbb
cli
mov
pop
scas
gs
ss
adc
dec
lahf
and
outsl
bound
test
dec
cwtl
mov
mov
lock
call
mov
shlb
outsl
test
sahf
in
adc
mov
inc
js
mov
fsubrl
mov
add
or
mov
loope
and
jnp
int3
fdivp
clc
popl
cmc
or
repnz
insl
xchg
incb
xchg
mov
jle
inc
rcl
ret
mov
mov
loop
mov
dec
xor
mov
popf
push
in
out
xchg
xlat
in
idiv
std
scas
mov
mov
daa
cmpsl
add
sbb
lds
cli
push
ljmp
and
out
dec
stc
aam
divb
mov
scas
add
pop
mov
push
gs
push
cmc
std
add
nop
dec
dec
cs
mov
xchg
pop
jb
dec
nop
jle
sbb
sub
mov
sub
scas
mov
mov
in
repz
jp
sub
jg
ffreep
and
loopne
xchg
push
pop
jae
popa
inc
subl
out
out
and
mov
mov
add
shll
sub
push
jmp
mov
insb
pop
jnp
test
stos
call
xor
int
pop
or
jge
cltd
hlt
mov
fisubs
enter
adc
adc
icebp
push
es
add
mov
shrl
test
jge
sti
ja
subb
hlt
aaa
pop
fsts
add
lahf
ror
lret
lods
ret
cli
dec
aaa
sti
aam
sub
xchg
lds
rcrl
dec
cld
or
mov
aaa
mov
lret
fnstenv
lea
movsb
aam
test
mov
inc
out
gs
and
or
mov
sbb
into
stos
or
mov
add
cmp
adc
cmpl
or
jbe
push
jno
xor
sbb
fdiv
aas
xchg
lcall
testb
cmp
push
jge
les
mov
mov
sub
jns
out
push
xor
rcll
std
insl
or
clc
cwtl
repz
into
cmp
add
into
mov
shr
push
pop
jbe
daa
mov
xor
push
xchg
imul
ds
or
inc
mov
mov
adc
inc
sub
ret
dec
cmp
aam
cmpsl
or
movsb
mov
ss
outsb
jg
fisttpl
aad
pop
test
mov
adc
cwtl
fdivs
or
or
xor
inc
add
push
and
adc
call
clc
add
pop
cmp
mov
mov
push
sbb
sub
inc
xor
pop
cmp
in
movsl
imul
cmp
mov
sbb
rol
dec
mov
scas
xchg
sub
test
jns
mov
pop
leave
rcrb
movsl
cs
sub
jbe
cltd
jnp
popa
repnz
pop
xor
testb
xor
inc
mov
and
out
xchg
mov
pop
out
push
aaa
ret
movsl
fwait
out
mov
add
sti
pop
stos
ja
pusha
shrl
xchg
lret
adc
xor
sub
test
int
jb
test
dec
push
mov
mov
sub
test
jo
insb
in
mov
mov
lea
mov
pushf
sbb
jns
and
add
notb
ljmp
sub
pop
outsb
stc
mov
call
mov
in
call
sti
xchg
jecxz
mov
sub
repz
mov
popa
loopne
lock
push
push
clc
mov
xor
int
mov
repnz
movsb
repz
ljmp
inc
jne
in
jnp
cwtl
aaa
cmpsb
jns
add
fsubp
test
test
fs
repz
lret
push
or
cmp
lcall
test
dec
adc
loopne
js
cwtl
inc
jle
mov
les
loope
outsb
or
xlat
stos
cltd
cmp
pop
cmp
xor
jae
popa
repnz
cli
dec
adcl
je
rclb
ret
repnz
xor
and
inc
sbb
out
int
xor
xchg
mov
add
cmp
xchg
addb
jg
and
cmc
or
pop
ret
faddl
mov
jnp
dec
aas
jle
and
push
mov
xchg
inc
lock
stc
stos
hlt
jb
xor
jmp
test
insl
in
jmp
in
sahf
cmp
sbb
pop
outsl
stos
fwait
cwtl
aam
dec
dec
les
pop
loopne
mov
hlt
aaa
xor
xchg
es
movsl
xchg
repnz
xor
xor
and
jmp
add
aas
dec
lock
out
mov
jb
and
pop
jae
mov
push
or
xchg
idivb
in
das
add
imul
flds
push
xor
add
lods
in
test
pop
pop
mov
mov
sti
iret
sti
sub
test
inc
xchg
es
jnp
mov
fcoms
push
inc
add
push
rorb
dec
cld
xchg
aam
lret
mov
adc
iret
cmp
mov
fstl
pop
popa
adc
shlb
pop
jg
mov
push
cs
rorl
xlat
adc
mov
or
mov
in
les
cwtl
insb
push
inc
push
mov
cmc
scas
sbb
fcomps
xor
daa
adc
add
ja
sbb
daa
push
lods
in
jb
hlt
jae
test
inc
or
push
adc
adc
push
lcall
xchg
pop
push
sbb
inc
add
fldenv
mov
mov
xor
pushf
dec
or
stos
adc
cmpsl
int3
icebp
out
loopne
ja
and
mov
sti
lods
mov
idiv
into
imull
xor
mul
and
movsl
cmpb
and
cwtl
mov
inc
add
sub
mov
push
pop
fildll
mov
pop
or
or
adc
xchg
and
dec
pop
mov
add
cmp
fwait
std
or
stos
dec
dec
mov
dec
mov
pop
inc
test
lahf
js
loopne
add
mov
add
dec
xlat
mov
bnd
or
sub
cld
movsb
scas
mov
lea
xchg
das
jo
jecxz
mov
jmp
push
xlat
and
rorl
in
push
push
pop
add
inc
mov
adc
adc
mov
lds
jg
inc
imul
xor
jns
cltd
movsb
les
pop
in
loope
loope
inc
jnp
test
cmpsl
or
sbb
mov
fadd
pop
mov
mov
pop
dec
sub
pusha
mov
pop
mov
pop
lcall
ret
sti
mov
sub
mov
jbe
cmp
sbb
xor
mov
jge
xor
push
jle
lcall
and
lcall
mov
rcr
cmp
test
inc
repnz
push
cmp
adc
cli
sub
add
cmp
dec
fiaddl
imul
scas
sub
dec
pop
inc
lea
xchg
aam
xchg
mov
cmp
icebp
pop
jmp
fiadds
or
lret
pop
mov
cmp
sarb
pop
cmp
or
je
pusha
call
mov
push
stc
in
imul
popa
pop
test
inc
leave
mov
jge
arpl
lock
in
imul
push
and
ret
out
push
nop
jo
add
xchg
clc
sub
cltd
xor
imul
xor
bound
lret
jecxz
adc
lret
out
popa
jns
jmp
cli
dec
jl
dec
js
ljmp
ja
or
mov
sub
dec
fcompl
fmuls
inc
mov
scas
pop
push
aad
add
and
pop
stos
icebp
and
les
lahf
test
or
inc
add
imul
aad
movsl
js
jge
push
dec
pop
fidivs
call
bsr
mov
inc
pop
cwtl
push
fmul
add
outsb
outsb
jge
nop
dec
mov
mov
push
xor
lret
inc
adc
sub
out
int
dec
mov
jo
ss
cs
in
mov
push
dec
jecxz
mov
mov
push
das
jae
add
xchg
inc
aad
repnz
call
sbb
inc
mov
loopne
sub
adcl
je
out
sub
lea
cmpsb
add
adc
popl
or
fwait
xchg
jb
inc
sub
aaa
ljmp
sub
sub
aam
jp
mov
sub
cmc
xchg
pop
mov
andb
sub
xor
sbb
stos
mov
mov
mov
adc
es
fldl
and
ds
jg
dec
inc
loope
push
inc
sbb
or
push
ret
fs
cltd
hlt
add
cmpsb
fs
cwtl
shll
mov
xchg
add
pop
lods
es
lds
lds
inc
inc
jp
sub
test
insl
loopne
or
pop
jae
ret
dec
adc
jp
pop
popa
sbb
daa
push
test
test
push
push
dec
sbb
and
mov
jnp
ret
popa
lods
cld
pop
dec
xchg
into
scas
vmaxsd
dec
into
add
popa
jo
imul
les
mov
fidivs
dec
push
sbb
mov
std
pxor
cmp
pop
dec
sub
jle
xchg
stc
arpl
dec
xor
imul
pop
sbb
es
cltd
mov
push
outsb
cltd
mov
scas
and
mov
xor
mov
int
push
lahf
adc
cmp
lret
or
mov
out
clc
mov
fstl
test
adcb
inc
and
int
cwtl
fsubl
movups
in
mov
test
rcll
out
gs
adc
out
rcr
xor
jg
jo
pop
leave
xchg
lea
lds
add
pop
out
mov
mov
incb
adc
stos
adc
dec
dec
out
cmp
sbb
popf
cwtl
es
sbb
xchg
inc
std
pop
sbb
mov
pop
shlb
sbb
pop
aaa
out
add
lret
fstpl
lahf
add
pop
shrl
jl
pusha
inc
xor
outsb
insb
clc
es
sbb
test
insl
jae
cwtl
push
inc
dec
pop
adc
sbb
push
xchg
iret
or
mov
aas
std
arpl
jmp
mov
aad
nop
cmp
das
jg
mov
jae
loop
fbstp
fwait
addr16
push
mov
xchg
mov
cmp
fstpt
mov
lea
shll
and
lods
rclb
cmp
je
aam
mov
fadd
push
out
inc
push
int
adc
cmpsb
xor
dec
sub
cli
mov
scas
inc
sbb
mov
or
std
cmp
push
sub
pop
push
mov
xor
fs
fcompl
scas
cld
mov
pop
push
xor
mov
pop
repnz
mov
mov
lahf
mov
or
pop
loopne
fs
je
out
push
fdivs
mov
jo
gs
pop
xor
ds
xchg
xlat
fucomp
cmp
test
stos
pop
sbb
jp
push
add
cwtl
sbb
xchg
dec
aam
fistpl
or
dec
stos
in
in
xchg
cmp
fcoml
or
mov
mov
add
xor
inc
cmp
call
xchg
cmp
in
lds
in
dec
lret
outsl
fs
iret
lods
es
sbb
or
jnp
les
fiaddl
jae
pop
mov
dec
ret
or
mov
dec
test
push
lds
dec
dec
cmp
jne
test
jle
test
mov
mov
in
push
xor
xchg
and
mov
inc
test
je
push
pop
xchg
jmp
cli
in
and
push
pop
push
lret
or
cmc
sahf
jns
stos
sbb
sbb
or
push
push
sbb
in
lock
repnz
movsb
daa
dec
cmp
movsb
dec
pop
sahf
mov
jb
popa
push
stos
sarb
mov
sub
inc
cmpsl
les
nop
cmpsb
push
mov
fcmovnb
xor
push
push
stos
loope
xchg
adc
pop
sub
inc
mov
arpl
ss
xchg
and
daa
bound
mov
dec
sbb
xchg
xor
ljmp
jns
dec
bound
inc
mov
mov
mov
mov
adc
fwait
int3
iret
adc
cmp
mov
rcrl
jnp
cld
add
in
pop
cmp
push
jg
in
adc
add
push
inc
das
out
mov
pop
add
leave
push
fsubs
loop
shrl
pop
out
test
jno
gs
xor
pop
scas
push
pop
xor
add
js
jae
mov
jg
or
sbb
pushf
ja
xor
addr16
fwait
lods
jae
pop
and
aaa
std
dec
test
stc
out
lret
cmpsl
stos
stos
sub
or
clc
adc
nop
pop
movsb
leave
mov
mov
jl
add
mov
testl
add
jmp
and
pop
movsl
cltd
sub
cltd
out
xlat
cmc
fistps
jle
xlat
flds
loop
cmc
lret
sbb
cmp
dec
imul
push
or
lods
std
cmp
jns
pop
lods
jl
push
or
iret
pop
mov
add
ffreep
ja
xor
out
sbb
les
pop
out
pop
in
arpl
hlt
xchg
push
push
push
test
or
dec
cli
sbb
cs
out
test
jns
adc
pop
mov
ds
xor
ret
jb
jg
sub
and
inc
or
mov
cs
push
adc
sub
popa
dec
ret
jge
fs
dec
and
popf
int3
push
mov
ja
cmp
pushf
rorl
push
xor
lret
dec
pop
and
mov
pushf
loopne
test
mov
dec
mov
addr16
das
into
or
iret
fs
mov
pushf
adc
daa
scas
imul
and
cmp
xchg
aad
punpckldq
dec
mov
pop
cmc
jl
or
leave
aam
sbb
in
ss
pop
adc
or
and
sub
cmp
sbb
dec
pop
adc
mov
fmull
outsb
mov
sub
jecxz
les
inc
in
dec
dec
pop
lret
or
and
sbb
cltd
cs
or
mov
lahf
addr16
push
mov
inc
subps
cltd
xchg
gs
mov
dec
insb
ljmp
pop
inc
outsb
pop
jb
xchg
fidivrs
sub
inc
mov
mov
les
shlb
test
popa
mov
xchg
dec
cmp
xchg
sahf
mov
mov
loop
sahf
pop
push
mov
rorl
push
out
xchg
dec
or
pop
adcb
pop
sti
push
sahf
and
inc
pop
mov
jg
mov
clc
stc
in
mov
outsb
jno
push
cmpsb
dec
mov
lret
inc
cmpsl
pop
or
cld
std
sbb
cmpsb
inc
negb
lret
xchg
push
mov
push
pop
jno
xchg
and
aas
lock
xchg
test
or
ja
lods
jp
insl
or
mov
pop
mov
call
push
and
xor
sub
cmpsb
pusha
or
scas
lds
jl
int
pop
push
out
imul
pop
pop
ret
fdiv
and
xor
mov
jecxz
jbe
add
sahf
xchg
sidtl
in
push
adc
mov
mov
call
pop
incb
pusha
push
mov
inc
sahf
ljmp
out
roll
jmp
mov
dec
jmp
test
adc
mov
mov
arpl
jp
filds
data16
insl
ss
sub
or
jle
inc
insb
push
jp
xor
loope
in
mov
push
in
and
rcl
call
cmp
xchg
mov
adc
movsl
lret
aaa
sbb
sti
iret
stos
and
dec
lods
xchg
dec
dec
test
cwtl
xor
out
and
mov
pop
inc
push
mov
fidivl
xchg
fwait
sahf
push
arpl
cmp
stos
icebp
or
inc
push
ja
dec
insl
imul
inc
jecxz
mov
das
or
bound
mov
bndldx
in
xchg
jne
popf
out
pop
mov
add
ret
loop
ljmp
cmp
push
lock
xchg
ss
cmp
cmc
inc
rcr
ja
xchg
enter
pop
inc
cld
jbe
rcrl
add
push
je
xor
push
nop
jecxz
out
ret
sahf
push
rolb
subl
arpl
push
js
cld
sbb
add
mov
mov
adc
pop
push
sub
jge
bound
outsb
or
push
mov
pop
add
fwait
sbb
les
in
add
loop
movsb
negl
dec
fsqrt
push
repz
inc
cmp
stos
test
test
mov
repz
flds
ljmp
movsl
or
jbe
mov
jne
jge
xor
or
outsb
push
mov
mov
incl
xchg
das
shr
xchg
in
sub
xchg
xor
orl
and
cmp
aad
pop
adc
stos
mov
outsb
xchg
dec
mov
out
pushf
add
outsl
jne
andl
add
pop
mov
cmp
jge
lods
lret
adc
fnsave
cmc
adc
push
lahf
jne
stc
sbb
test
nop
fsts
cmpsl
xorb
scas
jp
push
outsb
mov
ret
push
aam
lahf
mov
and
xchg
es
repnz
fistps
addr16
mov
sbb
mov
or
call
repz
imul
push
lock
std
insl
rcrb
and
insb
xor
adc
mov
aad
add
jg
pop
cmp
stos
xorl
mov
or
xchg
lds
int3
jmp
stos
cmc
stos
add
jo
xor
rcrl
or
and
xor
stos
dec
inc
dec
xchg
mov
push
jbe
aam
or
je
dec
and
fwait
loope
loopne
add
mov
hlt
adc
mov
sbb
xor
jo
jno
into
sub
cmp
mov
cli
adc
mov
pop
adc
xor
mov
pop
fs
sbb
int3
jl
pop
lock
pushf
pop
push
pop
fiaddl
orb
xchg
lock
pop
pop
test
out
enter
adc
mov
add
dec
sti
mov
mov
js
pop
inc
push
push
adc
enter
int
mov
aad
inc
orb
repz
pushf
fmuls
aas
lret
aas
stos
cwtl
cmpsl
sbb
pop
xchg
pop
push
jmp
jp
loopne
pop
ds
dec
scas
xor
scas
cmp
sub
cltd
push
leave
stc
mov
popf
mov
adcb
addr16
in
xor
xor
in
xchg
shll
out
cwtd
push
mov
add
cs
outsl
inc
and
and
out
xlat
lods
loopne
mov
insb
adcb
jbe
stos
sbb
pop
pusha
test
add
cmp
pop
arpl
sub
popf
sub
mov
sbb
fidivrs
dec
xor
dec
and
or
inc
in
clc
lock
sub
dec
stc
pop
pop
lcall
loope
cmp
mov
jmp
push
xor
cwtl
pop
fs
icebp
outsb
cmc
cmp
arpl
icebp
and
cmp
pop
mov
jb
pop
xchg
lea
jbe
pop
into
outsl
cmc
filds
rcl
xchg
pop
push
cmpb
inc
fisubs
int
int3
hlt
mov
int3
xor
addr16
sbb
or
pop
xchg
xlat
inc
cmp
mov
mov
in
xlat
mov
dec
adc
in
rcrl
or
ds
stc
cmpsl
xchg
int3
insb
and
jb
fisttps
pop
mov
popf
cltd
and
out
xchg
cld
pusha
sqrtps
inc
push
sbb
adc
mov
pop
test
and
xor
mov
sub
cmp
daa
adc
cmpsb
sbbb
lret
bound
push
shl
clc
das
and
cvtpi2ps
xor
mov
sarl
std
pop
push
int3
push
jmp
xchg
dec
aas
fcmovne
sub
call
jmp
and
cwtl
lret
push
repnz
adc
mov
push
test
fldenv
cmp
test
stc
les
testw
es
lahf
adc
push
dec
lret
subb
jg
std
adc
into
loop
out
or
jmp
add
std
ss
mov
rol
and
idivl
test
xchg
mov
xchg
clc
shrd
mov
imul
sbb
sbb
lahf
sbb
cmp
lret
call
xchg
xchg
pop
add
and
pop
mov
rcll
jo
inc
cmp
mov
xchg
xor
mov
mov
adc
push
cmp
pop
jno
add
jg
clc
lods
lds
test
and
fs
xchg
out
cmc
shrb
jmp
fmull
lret
fcomps
and
das
pop
sbb
ret
clc
ljmp
test
xchg
ror
insl
cmc
add
mov
std
adc
pop
mov
filds
add
add
icebp
scas
push
xchg
jl
outsb
rorl
mov
fcmovb
int
jo
push
xor
into
dec
sti
incb
and
fildll
xor
or
pop
mov
pushf
les
fmuls
out
sub
lret
xchg
mov
out
pop
xor
and
push
xor
pusha
xchg
leave
or
outsb
mov
daa
lahf
or
into
or
push
jne
aas
mov
loopne
inc
mov
call
dec
inc
test
scas
push
shr
cld
push
sahf
jecxz
nop
or
mov
roll
xchg
mov
adc
pop
fmuls
out
fisttpll
pop
out
out
fisubrs
imul
and
lcall
shll
bound
sub
je
movsl
repnz
dec
jno
xchg
adc
inc
pop
xor
test
nop
sub
xor
jle
leave
sar
jb
dec
in
mov
fsubr
sahf
popa
cmp
jae
cmp
mov
in
jg
xchg
sti
aam
xchg
push
cmp
sbb
push
inc
add
movsl
mov
cmp
jns
into
mov
xlat
movsl
xchg
xor
in
lret
sub
lahf
mov
lahf
sbb
imul
test
das
inc
add
and
ss
xor
test
mov
lret
xchg
mov
int3
repnz
bound
ja
mov
shrb
stos
outsl
pop
xbegin
push
mov
dec
push
pop
in
xor
add
push
sub
sub
imulb
and
idivl
mov
mov
xchg
mov
dec
ds
jge
adc
inc
stos
nop
arpl
mov
roll
shrb
adc
and
sub
call
or
es
dec
adc
mov
rcl
inc
cltd
xchg
mov
add
sub
jle
adc
in
out
scas
sub
xchg
or
into
fwait
add
xchg
sbb
cmc
out
pusha
rcll
aad
pop
inc
xor
in
and
loopne
inc
out
push
stc
fcomip
mov
jno
mov
fsub
lcall
xor
lods
pop
push
cmp
jo
adc
scas
repz
roll
ret
xchg
test
out
stc
insb
mov
pop
lahf
fadds
incl
jle
sub
jno
xchg
jb
cmpsl
daa
xor
int3
in
ret
xlat
test
icebp
nop
int3
ljmp
inc
and
rclb
jb
in
ja
movsb
push
fdivs
rorb
push
and
pop
test
shrd
xor
mov
aas
call
or
rol
neg
sub
jle
leave
pushw
loope
push
popa
mov
cwtl
sub
and
mov
adc
push
push
mov
ret
xor
jbe
jge
jecxz
outsl
es
sub
push
pushf
pop
sub
push
push
clc
lds
ja
mov
xorl
jne
fs
dec
jg
subb
stos
loope
fisttpl
jae
dec
or
movb
sti
stos
icebp
test
xor
cmc
aad
outsb
adc
daa
inc
dec
mov
mov
in
mov
mov
jl
addb
adc
clc
pop
jbe
lods
jmp
andl
scas
inc
cmp
pop
jge
dec
jnp
adc
adc
jl
daa
push
push
outsb
xorb
jmp
popf
mov
sbb
push
sbb
popa
mov
or
pop
cmpps
cmp
push
jle
xor
int
shl
add
adc
mov
cmp
mov
lahf
ja
push
pop
adc
std
sahf
jmp
xor
dec
mov
dec
jge
scas
jbe
pop
push
push
ja
rclb
mov
jns
lret
jmp
fcoml
shlb
aas
out
sub
test
js
pop
or
bswap
mov
stos
adc
or
fiaddl
mov
es
sar
outsb
cwtl
add
cmpl
add
fisttpl
testb
out
xchg
sbb
adc
jne
xor
test
repnz
jp
and
sbbb
fsub
jl
enter
movsl
dec
fsubs
not
lret
cmc
addl
lahf
and
mov
cmp
sbb
lods
lcall
jns
cmc
xorb
and
lea
pushf
mov
mov
add
sbb
xor
jbe
pushf
dec
add
jo
and
repz
mov
push
mov
negl
pop
and
es
xorb
xlat
fisubrs
test
lds
jl
dec
push
push
dec
aam
adc
mov
push
std
push
sahf
fbld
pop
shll
loop
cwtl
and
push
enter
xchg
push
cmc
jb
jnp
stos
add
adcb
mov
push
insb
imul
popf
leave
jecxz
ror
cltd
test
jle
mov
xchg
jnp
or
cld
or
pushf
pop
push
inc
and
xor
leave
ja
out
sbb
jle
jle
jnp
push
pop
adc
mov
lcall
mov
pop
scas
push
cmp
push
mov
dec
dec
icebp
xor
imul
out
pop
clc
out
shrb
dec
loopne
mov
sub
test
cmpsl
bts
mov
test
mov
fldt
lock
testl
in
stos
pop
outsl
and
aas
add
mov
lods
insl
call
lods
ret
push
rorb
out
fwait
mov
ss
call
pop
jle
lcall
out
fstpl
jg
xchg
inc
sub
shll
xchg
mov
call
dec
inc
rol
lret
add
inc
mov
sbb
mov
jp
sub
or
ja
jno
je
push
inc
cmp
and
inc
je
cltd
inc
aaa
clc
int3
adc
in
push
ljmp
test
lcall
popa
mov
pop
cmpsb
cwtl
push
and
das
mov
lahf
shll
lret
mov
mov
rclb
in
mov
pop
push
adcl
jp
add
mov
lcall
xchg
mov
out
movsb
pop
data16
mov
or
jnp
loop
cmpsl
in
shl
add
lret
adc
add
pop
cmp
dec
stos
loope
add
mov
pop
jecxz
enter
femms
xor
push
rorl
xlat
adc
aam
xchg
xorl
aaa
into
test
pop
insb
pop
sub
fwait
mov
adc
xor
aas
loopne
jle
pop
dec
push
push
xchg
adc
cltd
stos
sbb
add
mov
and
cltd
mov
push
bound
je
inc
dec
or
cli
pusha
mov
mov
outsl
add
arpl
orl
sbb
adc
fdivrl
lea
xchg
jno
dec
mov
jg
pushf
adc
cltd
adc
and
dec
iret
pop
call
or
test
gs
and
jo
jno
dec
cli
inc
mov
mov
push
inc
cs
sbb
lds
stos
jb
mov
mov
cmp
lahf
add
xor
dec
enter
and
cld
sbb
loopne
lds
sti
test
pusha
push
cmp
jg
outsl
mov
hlt
or
lock
cmpsb
pop
jp
es
push
or
lods
bound
adc
dec
inc
loopne
dec
xlat
test
or
adc
or
or
js
cld
ror
xchg
pop
push
sbbb
sbb
sub
lds
cs
sub
dec
ss
push
and
out
clc
xlat
xchg
jg
dec
arpl
int3
cld
xor
mov
cmc
sarb
or
cmp
cmp
fcompl
call
jb
mov
push
arpl
scas
jo
pop
inc
lock
mov
sahf
xor
cmpb
jecxz
test
mov
dec
mov
mov
das
xor
hlt
stos
add
fldt
daa
sub
add
call
gs
push
push
or
mov
insb
sbb
adc
stos
pop
pop
pushf
mov
mov
push
das
cmpsb
sub
es
push
adc
shl
inc
jno
mov
sbb
add
stc
hlt
sub
xor
mov
fldenv
add
or
test
adc
sbb
and
inc
jae
push
jge
cmpsb
push
pop
mov
jp
fcomps
pusha
xchg
sahf
mov
jge
xchg
cmpsb
paddsb
ret
pop
pushf
andnps
mov
cmp
jb
sbb
je
xor
dec
mov
int
pop
mov
insb
inc
mov
test
into
stc
ficomps
mov
jns
ret
dec
aas
mov
je
jle
ja
clc
jns
lods
outsb
scas
les
add
xor
clc
int3
jp
test
in
and
cmp
cmpps
daa
push
mov
lret
mov
jl
xchg
adc
popa
cmpsl
or
xor
nop
inc
movb
jp
mulps
cs
mov
jnp
fiadds
aam
sub
jmp
std
fstpt
sarb
in
hlt
or
aam
shr
pop
iret
xchg
lea
rclb
test
adc
xchg
pusha
es
lss
jg
test
fisttps
cld
dec
test
int
xor
movsl
movsl
scas
jae
mov
sbb
add
jns
sahf
add
adc
fwait
pop
cwtl
dec
in
mov
adc
cwtl
jmp
fdivl
cmpsl
clts
dec
xor
dec
nop
push
jo
in
lds
mov
xchg
outsl
jb
xlat
rcll
fiaddl
mov
push
push
sti
and
jg
mov
int
out
gs
sbb
fcmovnbe
mov
add
std
cmpsl
jae
les
dec
sti
and
cmp
mov
add
inc
test
mov
scas
dec
roll
fld
dec
subl
pop
cwtl
inc
sarl
aaa
repz
mov
mov
adc
lods
mov
icebp
pushl
inc
pop
popa
das
mov
jb
rorl
add
sub
aad
adc
or
and
mov
cs
push
in
inc
jns
jo
xchg
cmp
pop
xor
dec
fistps
scas
loopne
ds
mov
js
cs
imul
jne
rcrb
and
lds
inc
add
fs
jae
lock
xchg
popf
push
or
es
js
sbb
pop
sub
mov
pop
jo
loopne
popf
xor
ja
ret
push
inc
sbb
cmp
mov
fildl
and
sti
sahf
jp
scas
xor
cmc
enter
call
push
cli
fstps
imul
mov
push
mov
dec
rclb
call
stos
mov
or
or
xchg
psubusw
dec
mov
jo
out
and
incb
dec
mov
xchg
int
mov
push
inc
cmc
or
test
add
mov
out
fldt
push
xorl
dec
mov
adc
xchg
xlat
mov
shrb
scas
xchg
pop
jno
adc
cmp
aaa
jmp
aaa
and
int
sbb
jne
adc
cmc
xor
cwtl
dec
mov
clc
fnstcw
pop
mov
iret
rolb
mov
fmull
mov
fsubs
arpl
cmpsl
icebp
cld
fistl
adc
jl
sub
lcall
xor
xlat
push
xchg
mov
cltd
sbb
lret
js
jmp
lods
mov
push
cmp
sub
cmp
sahf
gs
out
lret
jl
insl
jb
enter
xchg
xor
cs
mov
aam
sub
jae
adc
testb
stos
mov
imul
adc
jge
mov
mov
ljmp
sahf
fidivs
lcall
mov
stos
xchg
xor
cmp
ljmp
in
inc
rcr
inc
pop
scas
jmp
inc
je
dec
out
fdivrl
pop
rcrl
inc
daa
adc
stc
scas
sbb
dec
in
in
adc
outsl
mov
push
xchg
mov
sarl
mov
inc
dec
filds
mov
fwait
xchg
xorl
sti
and
in
mov
fmulp
xchg
inc
xchg
mov
je
or
mov
inc
add
pop
outsb
fsubrp
testl
dec
ficompl
scas
bound
cltd
or
push
xor
add
repnz
push
arpl
mov
mov
lods
push
or
dec
repz
outsl
divl
push
inc
lret
imul
cmpsb
shl
cmp
and
test
outsb
jnp
sub
inc
jge
mov
add
xor
or
es
mov
js
xchg
cmp
xor
dec
inc
mov
push
movsb
icebp
xchg
int3
mov
dec
in
inc
int3
cmp
test
js
xchg
dec
enter
jecxz
mov
inc
int
lds
lds
xchg
xchg
lcall
lods
sub
xor
inc
pop
sbb
js
and
mov
add
cmpb
nop
adc
inc
sub
mulb
icebp
pop
lret
xor
clc
mov
cmpsb
popf
push
cmp
int3
dec
lods
in
sbb
or
sub
pop
xorb
xor
jno
add
lcall
pop
lcall
xor
call
pop
xchg
cltd
xchg
shlb
in
inc
pop
scas
cmp
sub
mov
in
popl
cmc
das
popf
mov
inc
into
rcrb
insl
fldt
js
in
xchg
add
jnp
push
push
lcall
adc
fwait
inc
test
nop
adcl
sub
fidivl
push
sahf
cld
ljmp
mov
dec
mov
pop
addr16
and
mov
iret
inc
sub
jns
jp
add
pop
fsubs
int
sbb
and
mov
pop
movsb
data16
jno
es
imul
sar
and
mov
dec
inc
imul
shll
shll
jg
icebp
ficoms
xchg
mov
sarl
ret
jb
test
xchg
xor
lea
sbb
xchg
adc
in
inc
mov
gs
out
cli
js
hlt
cwtl
xchg
add
shll
aaa
mov
or
psubsb
insl
stos
std
mov
adcl
dec
or
mov
lods
test
push
inc
dec
add
pop
out
and
add
mov
mov
iret
outsb
or
cld
popa
fistpl
repnz
push
jp
movsl
cmpsb
mov
lahf
sarb
xchg
sbb
dec
in
xchg
push
stos
fisubs
scas
out
cmp
cmp
shrl
int3
cwtl
out
cmp
pusha
stos
popa
mov
in
mov
mov
pop
mov
aas
xchg
hlt
das
cli
mov
push
cmc
repz
cld
jno
clc
mov
mov
dec
sbb
pop
mov
mov
hlt
push
js
lahf
and
jecxz
hlt
jb
ret
mov
xchg
or
xor
fistps
mov
shll
hlt
fnsave
inc
sbb
inc
xorb
movl
mov
shlb
testl
inc
mov
andb
orb
cld
inc
clc
mov
call
sub
push
pop
ja
jle
fstl
pop
mov
sub
xchg
add
inc
das
or
jle
xor
iret
jecxz
or
cmc
sbb
stos
frstor
pop
fsubrl
lahf
dec
sti
xor
daa
popf
dec
imul
jno
pop
xorb
lcall
jb
repnz
inc
lret
js
pusha
jmp
mov
sbb
pop
filds
aad
mov
lods
and
mov
leave
jb
out
and
ret
sub
jmp
sbb
lock
filds
cwtl
incl
loopne
stos
fsubl
ss
cld
mov
mov
test
mov
ja
sbb
jnp
jnp
jbe
aas
scas
inc
in
scas
std
into
and
jmp
or
jno
dec
mov
xor
pop
add
fdivl
jg
ret
mov
fidivrs
testl
je
mov
loop
into
imul
jl
sub
pop
imul
add
mov
sbb
adc
mov
lahf
jmp
shr
push
add
jle
movsb
out
pop
xor
jb
sbb
jns
ljmp
inc
lahf
xchg
mov
xor
xchg
ret
pop
inc
ret
push
stc
xchg
loopne
jg
jnp
addr16
jb
sbb
xchg
inc
xrelease
adc
jae
push
cs
sahf
push
aas
negl
pop
inc
mov
cmp
cltd
inc
insb
dec
and
and
scas
cs
add
es
mov
in
loope
jmp
sbb
cmp
inc
js
mov
pop
jae
int
mov
scas
clc
call
ret
cmp
shll
jo
sub
and
ljmp
mov
sub
add
es
arpl
pop
cmpsb
mov
mov
add
sub
pusha
push
data16
cli
jnp
repnz
push
sub
adc
xor
inc
scas
pop
cmp
cmc
ret
sbb
mov
in
fidivrs
push
gs
mov
pop
pop
pop
xor
and
shlb
xor
jl
cmpsl
rcrl
cmpsb
mov
int3
lods
jb
or
xchg
out
inc
and
sbb
and
inc
inc
addb
ljmp
les
je
xor
stos
mov
imul
cmp
inc
or
test
push
xor
mov
nop
adc
idivl
add
inc
rolb
frstor
call
cmp
adc
lock
jno
movsl
push
mov
out
stc
xchg
scas
idiv
xchg
jnp
pop
daa
push
loope
sbb
and
in
xchg
sti
and
xchg
push
es
ret
lret
and
or
xor
mov
mov
stos
pusha
ljmp
arpl
dec
xchg
aam
adc
inc
add
outsb
lods
lcall
add
and
or
push
xchg
shl
test
inc
inc
mov
setbe
adc
cmp
fnstsw
pop
pop
lea
dec
xchg
sti
sti
sub
adc
inc
movsl
jecxz
imulb
and
test
lahf
cmp
cwtl
sub
movsl
mov
sbb
imul
scas
sbb
mov
fcompl
dec
jbe
mov
pop
imul
mov
mov
sahf
xchg
dec
out
lock
mov
imul
arpl
mov
outsb
loop
sub
frstor
add
dec
test
sahf
jl
ja
clc
and
adc
and
jecxz
test
xor
ds
fildl
rol
sub
pop
mov
shll
mov
popa
fsub
sub
xor
pop
jle
sub
xor
rorb
cmp
jae
negl
adcl
andb
pop
xchg
hlt
sub
dec
shll
aam
adc
loop
mov
mov
xor
mov
int
or
push
daa
lock
aaa
cs
dec
insl
lds
decb
mov
lods
test
aad
add
rcll
push
repnz
scas
cli
in
in
mov
std
push
imul
inc
sar
pushf
inc
mov
mov
inc
mov
pop
shlb
std
hlt
mov
jbe
adc
cltd
pushl
mov
hlt
jmp
stc
xor
sbb
mov
adc
mov
popa
dec
lock
jne
out
sbb
mov
sub
or
add
aam
popa
les
sbb
add
rcll
mov
popa
inc
repz
pop
imul
mov
or
rol
xor
or
rcrb
xchg
mov
into
add
sarl
adc
mov
mov
mov
loope
jp
movsl
inc
stos
out
mov
mov
cltd
iret
sbb
mov
shl
adc
jmp
inc
es
jg
popa
mov
cld
cmp
inc
xor
add
or
jbe
mov
jae
mov
mov
or
fwait
rorl
mov
sti
mov
or
push
add
sub
js
pop
cmp
repz
enter
adc
orb
xchg
outsb
mov
jae
add
sti
nop
jb
mov
cmpsl
push
jne
cmpl
je
dec
mov
jmp
jae
push
out
and
xor
jl
add
in
pop
out
lock
jb
pop
mov
pushf
cltd
sahf
inc
scas
pop
cmp
nop
notl
int3
sub
lret
es
dec
mov
or
mov
out
mov
inc
arpl
nop
leave
push
cs
adc
mov
rcrw
xorb
stc
scas
jmp
loopne
cld
push
mov
jecxz
imul
out
xor
or
outsb
loope
cmp
mov
dec
mov
stc
test
inc
pop
mov
pop
outsb
xor
mov
and
les
push
lea
cmpsl
sub
loopne
xchg
test
jge
cmp
adc
jmp
out
sti
lret
inc
sbb
dec
movsl
jle
dec
inc
rcr
add
dec
mov
mov
jns
push
out
inc
cwtl
sbb
cmp
sbb
adc
sbb
enter
inc
add
pop
mov
jmp
arpl
iret
push
mov
push
sub
orl
dec
xchg
andb
daa
roll
xchg
mull
mov
inc
mov
jbe
push
call
dec
xchg
fwait
adc
push
push
push
cli
mov
shr
mov
das
add
ret
jae
push
in
pop
xchg
mov
push
cmp
imul
inc
xchg
pop
jle
leave
out
mov
mov
clc
sti
out
cmp
sbb
pop
aas
or
fwait
sbb
xor
mov
jnp
mov
xchg
xchg
mov
push
in
cwtl
mov
movsb
aad
outsb
push
movsl
add
out
or
scas
imul
sbb
sbb
outsb
iret
pop
stos
jo
xchg
in
cli
bound
cmpsb
rorl
inc
fbld
cmp
xchg
jmp
leave
aaa
adc
or
shl
lods
sub
popa
fldt
cmc
jle
es
mov
fcoml
scas
je
cmpsb
mov
fadds
xor
xor
mov
add
push
decb
aad
pop
mov
incb
mov
das
pop
es
enter
fstpl
mov
mov
push
insb
jge
mov
hlt
jecxz
or
add
or
dec
loop
xor
fstp
gs
shl
adc
in
mov
sti
arpl
push
xor
push
jg
jae
dec
sahf
or
movsl
ljmp
push
cmp
imul
frstor
sub
test
push
push
outsl
rclb
stos
sbb
xor
xor
jmp
adc
in
pop
insl
mov
movnti
mov
dec
mov
xor
xchg
push
addr16
jnp
inc
in
loope
addr16
xor
mov
test
mov
push
adc
adc
xchg
or
xor
or
pop
cmpsl
adc
imul
insb
js
imul
pop
jnp
xchg
inc
rcrl
mov
mov
enter
mov
mov
jae
pusha
vcvtdq2ps
sbb
jecxz
mov
sub
jbe
into
mov
sub
mov
enter
push
mov
mov
cmc
sbb
xlat
mov
xchg
add
or
adc
jnp
or
xchg
dec
mov
inc
pop
subb
pop
push
test
or
inc
test
ljmp
inc
pop
lods
shlb
sub
pop
adc
test
adc
xchg
xchg
int3
xchg
loopne
sbb
or
mov
movsb
scas
shll
jle
or
out
js
adc
and
push
mov
mov
into
popa
jle
pop
inc
sub
push
repz
andb
mov
dec
shr
clc
xorl
fnsave
int
dec
jg
out
popa
in
repz
fdivrs
mov
std
sahf
lahf
outsl
aas
test
mov
push
ror
cs
scas
sar
jb
es
pop
or
pushf
and
sub
push
imul
sarb
mov
mov
rcr
jecxz
test
iret
jp
pop
xchg
xor
cmp
adc
jns
out
xor
rorb
ret
or
fcoms
cmpl
je
jmp
jo
ja
cmp
and
xor
fisubs
sub
cmp
xchg
fidivrl
pop
pusha
lret
mov
pushf
push
xor
add
test
cmp
div
sub
jnp
mov
pop
shll
jne
outsb
mov
cltd
divb
insb
adc
pusha
dec
loope
pop
stc
je
int
daa
xchg
shl
jns
repnz
bound
and
sbb
stos
xchg
mulb
in
inc
jo
inc
inc
push
fnstsw
sbb
fsts
push
xchg
mov
test
mov
mov
out
movsl
xchg
pop
iret
jle
jmp
sbb
out
fldt
shrb
mov
add
push
and
lods
mov
out
ja
mov
cmp
out
insl
lods
mov
nop
jno
movsb
fwait
push
jle
mov
es
xor
jb
sbb
dec
and
leave
jl
loop
arpl
xchg
das
xchg
pop
fnstsw
popf
shr
mov
cmpb
call
inc
shlb
cs
fistps
inc
movsl
pop
lret
aam
insw
sbb
inc
out
xlat
outsb
subb
sbb
xchg
sub
xchg
fdivs
mov
jl
roll
daa
xor
icebp
push
in
notl
xor
mov
mov
sarb
popa
mov
fcomps
add
fwait
sti
add
sub
jae
xchg
ss
movsb
addb
xor
dec
cltd
hlt
gs
je
sbb
pop
ds
test
movswl
ljmp
inc
fldl
push
cmp
sahf
adc
arpl
test
jp
loopne
lods
cmc
pop
pop
mov
in
mov
sbb
sarb
lret
push
cmpsb
sub
in
push
mov
in
push
inc
xchg
subb
add
stos
pop
stos
cld
pop
out
outsl
ss
in
js
not
imul
mov
mov
lods
repnz
or
popl
mov
sub
cmc
xchg
std
cmp
ljmp
cmp
jbe
iret
repz
test
xor
ss
push
pop
xor
xor
dec
cld
out
scas
popa
push
mov
dec
cmp
scas
sbb
cmp
mov
or
adc
incb
sbb
das
push
mov
mov
pop
aaa
int3
sub
ja
fstpt
or
mov
out
mov
pop
stos
mov
leave
push
insb
push
aas
lcall
insl
mov
test
lods
stos
jae
cmp
fidivl
inc
mov
loopne
jns
mov
ljmp
jmp
pop
mov
mov
inc
fbld
xchg
scas
out
mov
xchg
jl
xorl
jo
inc
or
inc
inc
add
notb
mov
pop
cltd
in
ds
js
dec
es
mov
pushl
pop
xor
push
lds
jne
adc
or
ds
push
xor
sub
adc
rorl
imul
jle
cmpb
and
push
sub
cmp
popa
repz
repz
lcall
inc
inc
and
inc
ljmp
and
ret
in
push
mov
mov
push
int3
adc
jns
idivb
mov
roll
scas
out
loopne
mov
jmp
idiv
rolb
jbe
adc
mov
adc
mov
ja
sbbb
clc
cs
pop
daa
popa
test
repnz
cmp
out
dec
cmpsb
inc
testb
push
test
rcl
aad
fdiv
push
roll
nop
dec
xor
ljmp
xchg
sbb
mov
sub
cltd
pop
gs
dec
notl
loopne
jmp
or
enter
cmp
in
and
cmc
aam
xor
cmp
aaa
dec
iret
push
mov
stos
test
add
jg
jns
lods
into
or
push
inc
mov
les
dec
gs
leave
jbe
daa
cmpsb
jbe
aad
loopne
sub
jne
fsts
movsl
mov
sbb
push
xchg
insl
adc
lahf
add
aaa
mov
pop
ret
int
ljmp
xlat
dec
imul
lock
out
sbb
mov
ja
push
incl
hlt
jl
cs
push
or
das
inc
push
gs
push
bswap
xchg
xchg
mov
dec
pop
xchg
mov
shll
sti
mov
jnp
jle
roll
mov
cmp
imul
cmp
std
loop
pop
movsl
icebp
inc
adc
jge
and
or
cmp
jb
inc
pop
dec
mov
inc
inc
mov
outsb
jg
inc
aam
movsb
pause
je
pop
jl
popa
call
icebp
mov
jns
insl
insb
pop
popf
inc
mov
stc
inc
lahf
xor
pushf
lds
add
sub
cltd
push
das
xchg
sar
in
shrl
sahf
lock
data16
cs
ljmp
notl
dec
xor
mov
dec
pop
push
mov
fistl
jle
xor
cs
cmc
arpl
push
dec
test
pop
fs
mov
fs
sub
xchg
pusha
pop
mov
repnz
mov
in
cwtl
add
mov
cs
orb
sbb
mov
repz
es
jecxz
inc
push
sbb
or
xchg
inc
push
pop
pop
cli
jb
push
dec
imul
adc
and
add
mov
fmuls
pop
xchg
push
cli
imul
inc
add
rcll
push
mov
adc
cmpsl
jecxz
jmp
nop
rolb
sub
mov
cmp
cmp
data16
movsl
xchg
push
dec
inc
cld
rcrb
fs
mov
sub
pusha
cli
pop
mov
movsl
cmc
cmc
gs
cmp
inc
sub
hlt
inc
out
pop
mov
sti
pop
push
movsl
call
pop
repnz
mov
insl
dec
push
out
fnstenv
inc
sub
aas
lcall
push
adc
add
pop
icebp
outsl
lret
sub
xchg
and
fstl
pop
sbb
inc
aas
out
dec
movsl
mov
int
scas
sbb
pop
fnstsw
fwait
movsl
pop
mov
test
test
insb
mov
xchg
lret
mov
sbb
pop
dec
jge
jle
repnz
cmp
stos
pop
jne
fwait
mov
cwtl
call
neg
sbb
sub
dec
icebp
std
sahf
les
mov
stc
in
mov
fs
loopne
jno
jae
mov
add
and
and
or
dec
xchg
mov
push
adc
xor
push
roll
icebp
sti
movsb
setae
pop
dec
xor
fucomip
push
pop
dec
jge
inc
pushf
test
repz
cli
add
pushf
insl
sbb
push
xchg
pushf
xchg
rcll
neg
ss
push
cmp
rcrb
mov
mov
fdivrl
out
cmpsb
aaa
insl
sahf
mov
lcall
pop
fsts
xchg
in
mov
add
movsb
outsl
inc
daa
fimuls
and
dec
subb
enter
push
sbb
xchg
mov
sub
data16
sbb
jp
add
inc
fwait
xchg
fnstcw
push
mov
xor
stc
jbe
or
call
dec
aas
mov
jmp
mov
add
insl
shr
or
add
pop
lds
rolb
test
cs
adcl
inc
inc
out
dec
flds
push
xor
push
subb
aas
jne
xchg
fnstcw
out
lods
xchg
mov
gs
je
or
fisttpl
lret
test
xor
cli
inc
sahf
xor
aad
repz
push
ds
pushf
shrb
pop
xor
stos
cmpsl
icebp
inc
das
stos
scas
adc
in
inc
rorl
add
lods
sbb
loop
and
jae
cld
fdivrl
adc
into
imul
push
mov
dec
ss
push
notl
adc
repnz
daa
mov
push
in
sub
lret
dec
test
hlt
and
aam
jns
inc
dec
adc
sahf
daa
les
icebp
loope
outsb
mov
imul
bnd
pusha
jmp
cmp
cld
pop
mov
bound
scas
xchg
cmp
sbb
int
ljmp
pop
fs
xchg
enter
jns
dec
int
push
add
pop
inc
mov
jbe
andl
out
mov
faddl
mov
and
xchg
sahf
lahf
mov
leave
mov
loope
out
mov
nop
jns
and
sub
xor
dec
outsl
cmpsb
and
es
jmp
sbb
adc
jae
fs
mov
stos
adcl
popa
add
out
cwtl
dec
cmp
movsb
mov
push
xorl
sbb
pop
aas
cs
sub
rorl
push
add
mov
xor
jo
bound
push
sbb
push
or
push
and
in
add
inc
dec
xor
adc
adc
out
mov
sub
filds
hlt
add
mov
xlat
popa
sbb
xor
mov
and
sbb
inc
out
or
in
dec
ss
std
add
pop
mov
popf
push
xchg
sub
fidivrs
adc
clc
daa
clc
imul
pusha
jne
stc
jecxz
mov
push
pop
mov
jl
clc
and
push
push
pop
dec
and
adc
flds
and
push
mov
push
cltd
pop
repnz
or
mov
lds
mov
rorl
push
sbb
outsl
popa
int3
orb
dec
inc
adc
dec
inc
pushf
sub
jg
pop
fwait
xchg
int3
pop
push
movsb
call
adc
imul
cmp
icebp
fmuls
loope
sarb
xor
out
jne
mov
into
mov
std
xchg
xorb
addb
jbe
fbstp
mov
stc
hlt
sbb
fstpt
icebp
cld
push
movsb
sub
mov
cld
insb
jg
push
inc
rorl
pop
ficomps
sbb
js
ret
shrb
jl
xchg
testl
icebp
popa
cmp
int
ret
adc
push
sub
add
push
insl
jns
mov
out
inc
inc
loopne
out
in
loopne
pop
mov
sub
jno
push
mov
add
stos
mov
add
icebp
aam
js
inc
inc
aam
negl
push
scas
test
dec
pop
jle
push
sbb
xchg
lahf
das
or
inc
fildll
mov
int
repz
pop
xorl
sub
or
jo
sbbl
cld
inc
inc
mov
cmp
aaa
pop
lret
sub
mov
pop
pop
dec
cltd
test
fstpl
mov
adc
and
int
sub
stos
push
dec
cmp
jb
sahf
lahf
or
dec
pop
dec
sahf
sbb
xlat
out
popf
cmp
cld
mov
fdivrs
lds
xor
int
mov
inc
xchg
xlat
dec
out
cmc
es
bound
add
pop
pop
jns
popa
lcall
dec
pop
clc
scas
xchg
into
cli
sti
loopne
or
insl
mov
xlat
test
mov
or
lods
loopne
lahf
int
int3
xchg
sbb
stos
aas
lods
fnstsw
jbe
cs
stos
in
rcrl
test
lods
cli
dec
insl
lahf
xorl
add
xor
out
jne
dec
pop
ja
mov
aaa
mov
int
aad
loope
stc
push
sbb
mov
adc
push
xlat
pop
sbb
subl
mov
jecxz
mov
and
xchg
pop
xchg
nop
mov
pop
jno
cld
shll
lods
push
ret
jl
pop
pusha
push
xchg
out
inc
dec
aas
pop
call
or
pop
xor
repz
fisubs
popa
mov
push
xchg
xor
cmp
adc
pop
cwtl
inc
aas
jl
sub
enter
mov
xor
mov
jecxz
inc
mov
xchg
jmp
fwait
and
jo
pop
dec
fldt
lret
jecxz
dec
cmpsb
push
dec
dec
popf
adc
mov
fdivrp
subl
adc
and
mov
out
ss
xchg
inc
push
sub
push
scas
loop
sbb
cltd
ret
mov
mov
rol
fwait
mov
jge
xchg
add
mov
fcoms
mov
icebp
or
mov
lods
pop
shl
js
loop
adc
jg
mov
jbe
or
hlt
notl
xor
lds
inc
mov
pushf
aaa
aas
inc
ja
and
xchg
xchg
stos
mov
cmp
mov
sub
cmp
pusha
or
sbb
and
pop
rolb
in
pop
hlt
fidivrs
mov
adc
addb
xchg
cld
clc
or
scas
stos
in
push
sub
jmp
inc
add
test
mov
push
xchg
pop
orb
int
mov
jo
dec
inc
mov
sbb
mov
xlat
xor
inc
fucom
xlat
dec
pop
sbb
sub
stc
cld
push
or
mov
dec
popa
sub
fdivr
iret
std
cmp
or
push
test
mov
out
pop
jno
inc
pop
sub
lods
mov
mov
ror
daa
clc
dec
push
and
jo
mov
cmp
int
mov
push
cmp
movsl
in
sbb
sbb
adc
fldcw
out
xchg
and
mov
mov
gs
add
popa
inc
push
dec
cs
dec
fists
scas
test
fistps
fcmovu
scas
adc
rcr
pop
xchg
addb
loopne
sub
ja
mov
nop
out
aad
sub
dec
add
daa
and
mov
pusha
mov
aaa
push
push
xor
in
sahf
mov
js
mov
adc
jmp
or
cmp
in
movsb
mov
add
cmc
dec
jge
out
mov
lds
std
adc
push
add
int
cli
dec
or
mov
inc
cmpsb
dec
inc
mov
nop
adc
dec
stos
dec
add
jecxz
jnp
pop
add
clc
out
push
jns
push
sub
adc
cmp
mov
sbb
inc
add
push
inc
aas
add
jge
fxch
clc
mov
push
cmpsb
sbb
daa
nop
cltd
lock
aaa
inc
repz
dec
stc
dec
into
or
jmp
lcall
pop
cmpb
cmp
sbb
dec
cmp
jl
and
fistpl
je
inc
loopne
inc
xor
shlb
in
cli
rcr
inc
aaa
int3
mov
mov
mov
mov
frstor
adc
mov
dec
lahf
xchg
mov
cli
or
add
stc
dec
bound
ja
adc
sub
scas
test
fdivrs
lea
test
test
test
push
fistpll
push
pop
sub
dec
cwtl
and
xchg
imul
clc
out
iret
repz
or
add
or
adc
or
adc
sbb
push
fnstcw
dec
inc
or
add
fptan
in
adc
xchg
mov
sbb
outsl
push
dec
xchg
jae
push
call
adc
push
mov
dec
dec
je
stos
inc
rcll
xor
mov
cli
sub
pop
stos
addr16
rcrb
or
mov
push
mov
cmpb
jb
testb
loopne
xchg
lldt
dec
sbb
xor
add
xor
js
jne
pop
push
mov
cmp
std
lret
outsb
sub
dec
mov
gs
rcl
frstor
push
cmp
out
mov
sbb
fdivp
dec
into
dec
xor
dec
jae
push
je
xchg
sub
cwtl
je
jmp
ja
stc
loopne
test
lods
add
loop
xchg
into
ja
sub
lcall
sbb
adc
out
cwtl
ja
aad
sbb
push
shrl
xchg
leave
cmpsb
neg
rcrb
jg
notl
movb
or
mov
add
inc
cmp
ljmp
jmp
pop
lds
jmp
add
or
cmp
inc
push
dec
ficoml
pop
push
mov
movsl
rcrl
ja
or
stc
hlt
pop
insb
xor
xchg
pop
adc
cmp
jecxz
popf
loopne
sbb
xchg
xorl
out
jnp
xchg
push
and
repnz
adc
movb
es
xor
jne
outsb
ss
jle
jp
push
cmp
jle
jne
jecxz
cmp
dec
inc
into
fnsave
repnz
xchg
popf
cmp
icebp
clc
lret
inc
or
inc
or
filds
int
mov
arpl
cltd
adc
icebp
int
sbb
js
mov
mov
push
jb
cltd
mov
popf
rcrl
fisttps
dec
jns
mov
mov
mov
lock
jne
dec
hlt
inc
lods
and
ret
mov
jg
dec
add
icebp
cwtl
shlb
aaa
jo
lock
or
dec
mov
lods
rorb
out
cmp
cmpsb
add
jg
ds
jecxz
cld
push
cli
faddl
mov
pop
mov
test
aaa
dec
push
jmp
pop
jbe
int
mov
das
pop
dec
aam
sub
dec
pop
daa
ret
popa
pusha
sub
sbb
and
hlt
sbb
ja
dec
das
jae
push
stc
jl
in
mov
mov
or
push
pushf
sbb
jmp
aas
sbb
adcl
ds
mov
xchg
sbbb
incb
push
jb
pop
sub
mul
fcoml
add
mov
cmp
lea
cmp
pop
out
stos
insl
push
orb
or
xor
xchg
sub
ljmp
in
std
movsb
lods
mov
movsl
mov
ds
sub
test
cli
mov
popf
sub
call
add
dec
fiadds
movsb
out
jmp
movsl
mov
sbb
fbstp
xchg
fdivrl
bound
rorb
das
cmc
jns
and
xchg
orl
or
andb
mov
xlat
shll
fimull
push
xor
sbb
pop
dec
and
mov
pop
jnp
in
addl
loopne
hlt
inc
lds
ret
and
mov
out
mov
setle
mov
std
sub
ficoms
xchg
in
or
mov
adc
testl
aas
add
sbb
sub
xchg
sub
mov
ficoml
or
xor
jns
mov
je
and
adcl
xchg
pushf
and
rorl
fisttpll
stos
popf
or
daa
mov
popa
cld
push
add
mov
push
jne
mov
jb
jge
adc
in
lahf
mov
sahf
stos
dec
sarb
mov
lods
cwtl
repnz
in
pop
daa
push
inc
push
pusha
clc
adc
mov
and
dec
push
lret
outsl
cmpsb
and
jnp
push
lock
add
mov
test
cltd
fisttpl
jne
add
movsb
jnp
dec
mov
enter
cmp
lret
jecxz
push
jnp
jmp
inc
outsb
add
int3
push
push
sbb
rcl
pop
adc
int3
sub
add
push
cmp
mov
test
insl
sarl
fsubp
les
arpl
sub
out
xchg
push
or
fisubrs
adc
pop
stos
clc
repnz
and
std
mov
xor
adc
mov
mov
pop
xchg
cmp
mov
and
test
test
and
pop
insl
xchg
push
rcrb
in
lds
loope
sbb
pop
jno
aam
mov
sub
xchg
mov
xor
jae
push
js
test
sahf
ret
sub
out
inc
or
push
test
mov
jecxz
xor
push
aam
bound
add
lock
adc
xchg
jo
popf
scas
int
ljmp
lods
fidivrl
mov
mov
jmp
jo
xchg
in
outsl
test
dec
js
add
pusha
push
jle
mov
sub
xchg
push
in
nop
lret
rep
xor
pop
and
add
mov
or
cmp
fs
mov
jb
std
out
aas
mov
and
int3
jns
pop
js
aaa
jmp
xor
xor
mov
out
push
inc
insb
or
imul
lods
adcl
and
scas
or
rcrl
call
add
mov
les
call
icebp
fistl
aad
jnp
jo
ja
sub
or
add
mov
jnp
mov
repnz
popa
jnp
cmc
mov
jp
lcall
sbb
sbbb
cwtl
mov
mov
dec
dec
xor
mov
hlt
addr16
shll
add
sbb
orl
jns
sbb
sub
xchg
sarl
pusha
sub
mov
or
inc
rcrl
jecxz
aad
cmp
out
aaa
in
mov
ret
dec
sub
divl
sub
inc
adc
mov
std
pop
flds
movsl
int
adc
xor
loope
dec
jae
xchg
or
jnp
imul
xchg
roll
xchg
and
xchg
sti
mov
outsl
jmp
sub
mov
daa
sbb
jns
jge
cmp
jno
pop
or
sti
xor
pop
inc
sbb
inc
add
push
ror
push
mov
scas
ljmp
lret
push
or
sub
inc
fisubl
icebp
cmp
inc
mov
repz
inc
jg
dec
subl
push
jecxz
jge
and
movsl
ss
rcrb
inc
inc
pop
test
stos
cld
adc
sub
sbb
icebp
and
aam
jb
and
sahf
mov
mov
mov
out
pop
xchg
out
jl
xchg
xor
mov
push
ds
pop
cmpl
adc
push
mov
imul
imulb
rcrl
mov
es
pop
into
sahf
stos
push
aad
iret
ret
jg
ret
fldl
shll
or
insl
jle
and
shl
stos
mov
dec
pop
mov
outsl
push
pop
xor
inc
or
jnp
lods
jno
jl
mov
inc
xchg
aad
test
or
aad
sub
nop
pop
sti
xor
call
cmpsl
and
jae
das
das
dec
dec
outsb
mov
out
repnz
push
xchg
lock
outsl
xor
pop
ficoml
popa
daa
jp
stos
and
aam
push
outsb
sbbl
adc
cmp
jbe
cmp
ficoms
dec
mov
xchg
jecxz
lods
cli
andl
mov
imulb
or
je
jns
mov
jl
mov
mov
pop
pop
nop
push
fstps
test
int
loop
das
incb
adc
je
aas
push
and
lahf
add
cltd
movsl
fsts
imul
and
imul
xchg
int3
loop
arpl
jg
or
out
push
rcr
xor
pop
pusha
mov
addl
sar
xchg
out
imul
pop
inc
out
and
pop
ret
cs
xor
movsl
lahf
xlat
mov
lods
bound
jmp
sub
das
imul
mov
test
push
icebp
out
repz
in
out
cwtl
mov
out
xchg
inc
into
pop
jg
push
adc
sub
test
push
pop
jnp
jp
fisttpl
enter
sbb
fildl
lahf
adc
mov
sub
loopne
inc
ds
cmp
push
mulb
int
jmp
pop
dec
dec
mov
push
sbb
pop
leave
icebp
jnp
mov
rsm
popf
push
and
and
or
fistpl
outsb
in
fdivrs
fists
repz
clc
shrl
nop
and
or
cltd
cs
cmp
insl
lcall
fisttpl
lock
and
mov
in
fimull
and
mov
fistps
ds
out
and
dec
mov
xlat
pop
xor
out
out
out
adc
mov
repz
fmuls
xor
cmp
lods
jge
imul
fwait
sbbb
arpl
cld
shll
adc
les
inc
outsb
imul
jecxz
jno
inc
lcall
pop
mov
xor
outsl
rcr
xlat
jp
cmpb
cltd
xor
pushf
jbe
push
cmp
dec
xor
fisttpl
or
mov
xlat
lods
popa
lcall
js
inc
xor
test
mov
inc
mov
mov
mov
sub
lret
test
mov
pop
fcmovnbe
popf
inc
jl
fimull
push
push
push
inc
mov
mov
rcrl
in
pop
in
xlat
mov
mov
or
fdivl
lahf
fucom
mov
push
adc
mov
fwait
insb
add
fsubrs
mov
test
dec
imul
mov
mov
int
lsl
mov
and
je
jne
mov
mov
andb
sub
ds
leave
hlt
frstor
jns
imul
sbb
sbb
sbb
inc
out
cmp
jmp
icebp
cmp
and
push
and
mov
jne
push
adc
pop
and
fnstenv
cmp
jmp
or
fildl
sbb
dec
xchg
pop
or
mov
inc
pop
dec
cmpsl
jmp
sub
mov
mov
and
scas
stos
in
adc
push
and
push
mov
pop
push
cmp
in
sub
lock
adc
movsl
lret
out
pop
xor
sbb
jle
jg
adc
add
std
cmp
ret
xor
jecxz
mov
fs
repnz
scas
push
imul
cs
pop
jb
repnz
jecxz
sub
fwait
test
xchg
pop
fwait
pop
sti
adc
cmp
scas
repnz
inc
sbb
cmp
stc
jne
cmp
cltd
fcmovnu
stos
jo
enter
xchg
insb
sbb
fmuls
rorb
adc
pop
out
insb
imul
jmp
mov
repz
mov
addr16
jg
fsubrs
mov
loopne
mov
sarb
insb
insb
lods
xchg
xchg
inc
rcrl
push
enter
stos
dec
cmp
pop
mov
dec
and
pop
xlat
mov
dec
sub
int
imul
push
adc
cmp
rcrl
xchg
or
xlat
push
mov
push
in
mov
add
mov
mov
pop
xor
flds
lds
cwtl
nop
ret
mov
inc
sahf
add
in
jno
mov
mov
adcl
sub
xlat
rcrb
stc
xchg
pop
aam
push
fcmovne
fidivrs
xor
inc
mov
notb
fsubrs
mov
mov
or
xchg
sub
testl
pop
jle
sub
mov
ljmp
aad
sbb
movl
pop
stos
or
cltd
bound
mov
test
lret
inc
cltd
jmp
dec
ficomps
js
jbe
aaa
xchg
dec
and
mov
aam
xor
int
in
jge
mov
sbb
mov
xchg
push
fs
inc
push
arpl
mov
arpl
mov
dec
cmc
mov
out
pop
or
into
and
xchg
jecxz
addr16
cli
add
test
sub
mov
out
mov
add
jmp
jl
aas
cmp
pop
lret
fnsave
xor
xor
ds
push
push
xchg
lret
test
mov
inc
xchg
push
test
push
fldl2e
mov
stc
push
mov
sub
dec
xor
gs
sbb
adc
jge
mov
fstpt
sbb
js
shrb
inc
push
mov
in
sti
filds
dec
dec
push
in
imul
mov
in
mov
cmp
repz
scas
sti
mov
xchg
data16
xchg
out
into
insl
pop
jns,pt
push
test
cvtps2pd
not
lds
xorl
inc
int
mov
xor
sub
dec
mov
xchg
fsubs
cld
imull
jno
clc
repnz
pusha
loope
test
mov
inc
repz
insl
push
popa
push
shl
push
push
pop
sbb
cmp
movsb
imul
mov
push
inc
add
cmpsb
push
add
xor
hlt
jne
xchg
adc
int3
std
loop
test
jb
int3
das
lods
out
jmp
jg
cwtl
aaa
fisttps
adc
push
je
das
sub
js
cs
les
cmp
push
push
inc
xor
pop
push
cs
daa
in
insb
lahf
inc
cmpsl
scas
mov
jb
loope
xchg
mov
int
scas
daa
lret
les
rcl
aas
inc
inc
pop
fdivrl
fwait
sub
and
inc
push
cmp
dec
xorl
push
xchg
xchg
js
sbb
inc
in
pop
sbb
push
pop
gs
subb
adc
notb
rcll
xor
lock
xor
or
or
adc
pop
lock
in
and
mov
sub
push
add
pop
fwait
jecxz
dec
pop
add
js
mov
xor
adc
sub
sbb
lods
mov
fstps
lds
cmp
xchg
js
mov
xor
nop
scas
push
pusha
push
pushf
mov
mov
hlt
dec
aam
addr16
test
repz
sahf
adc
ljmp
addr16
sahf
and
lock
and
cli
pop
inc
and
iret
lret
mov
lret
inc
xchg
inc
xorb
pmuludq
paddq
cmp
outsb
mov
test
arpl
push
add
inc
pop
or
neg
mov
jns
fimuls
rcll
or
jnp
leave
sbb
lcall
in
pusha
ret
fsubp
and
pop
pop
fdivrl
jne
out
cmp
fists
lea
shrl
aaa
or
or
cmp
and
mov
loope
out
lahf
add
sbb
or
int3
adcl
in
ficomps
cmc
jnp
sub
andb
aas
push
jns
pop
not
dec
dec
cmpsb
inc
sbb
dec
sbb
cmp
dec
add
jg
sarl
shl
testl
stos
bound
imul
call
mov
adc
std
fisttps
push
dec
cltd
cltd
add
and
outsb
inc
cwtl
ss
cwtl
mov
cmp
push
fmuls
stc
mov
insl
daa
insl
sbb
cmpsl
or
into
cltd
push
lahf
push
adc
and
add
inc
insl
xor
sub
cs
push
jle
into
int
aam
xor
cmp
pop
mov
dec
mov
dec
sbb
stos
mov
das
cltd
cmp
cwtl
mov
push
jle
mov
push
or
fdivl
dec
cmp
push
fisttpll
fildll
out
lcall
aad
stos
mov
xor
cmpl
sub
scas
inc
xchg
hlt
aad
push
pop
mov
adc
mov
dec
stos
adc
outsb
cmp
push
dec
xor
gs
cli
inc
sub
addr16
inc
or
ljmp
ja
int
loope
mov
fistpl
xchg
dec
push
pop
sarl
mov
pushf
push
bound
addr16
mov
mov
call
adc
cmpb
in
aad
lods
add
push
sub
cmp
pop
mov
arpl
lahf
sbb
bound
add
hlt
jo
subb
lock
xor
aaa
fdivl
iret
mov
jmp
icebp
add
xor
cwtl
inc
dec
sub
or
fwait
sub
and
es
pop
xchg
popa
pushf
cmpsl
in
sbb
lret
mov
negl
jnp
lcall
loope
inc
cmp
dec
inc
dec
sub
push
sbb
fisttpl
inc
sub
fisubs
enter
cmc
sub
xor
pushf
cmpsl
mov
and
cli
clc
xor
pop
lock
add
popf
mov
push
dec
and
subb
pop
je
jno
cmp
and
push
negl
mul
inc
push
out
xchg
cltd
shlb
vmovq
or
sub
aas
push
sbb
nop
jle
mov
repz
imul
inc
test
lock
popf
out
loopne
jl
ret
je
mov
insl
arpl
inc
jnp
add
dec
imul
outsl
repz
test
in
xchg
cmc
dec
or
jo
rcll
sbb
sti
jmp
jo
add
mov
push
test
xchg
insb
rorl
jne
andl
sub
lret
lret
or
mov
stos
mov
bound
push
sub
sbb
int3
ja
dec
push
roll
ficoms
sub
out
push
pop
and
jg
cmp
xchg
sbb
fidivrs
mov
ljmp
sub
pop
add
xchg
push
stc
jo
pop
add
and
test
lret
inc
fbstp
icebp
pop
and
std
dec
xchg
lret
mul
jl
xchg
xor
sbb
imul
add
or
sub
orl
fisttpll
inc
mov
icebp
cmpsl
imul
lcall
lret
mov
jo
mov
dec
imul
adc
jns
ss
xchg
cmp
in
int
xchg
gs
adc
insb
dec
mov
adc
mov
mov
mov
jnp
pop
loopne
push
add
cmp
jnp
or
xchg
xchg
dec
movsl
ss
cmp
mov
mov
jno
call
push
lret
sbb
rolb
fs
xlat
push
sbb
scas
mov
ret
and
stc
sbb
test
stos
cld
addr16
mov
lock
gs
xchg
sub
std
cmp
popa
sub
lods
mov
xor
cld
inc
test
push
gs
sub
popf
cltd
aas
aad
daa
push
dec
inc
arpl
rcl
mov
js
das
mov
icebp
int
aas
ror
negl
test
pop
iret
jle
addr16
js
lds
pop
lret
fdivrl
fdivrl
pop
or
mov
push
lods
int
mov
fs
push
lcall
cmp
rcrb
aas
stc
jo
testl
push
test
xlat
ja
jge
push
xchg
and
mov
jl
fstpt
das
sub
push
pop
fcomps
shll
xchg
sub
arpl
jle
jl
jecxz
sbb
mov
push
fdivr
cmp
add
mov
addl
cmc
inc
cwtl
outsl
cmc
adc
jns
in
mov
bound
out
fdivl
mov
cmp
add
adc
shrl
mov
adc
das
push
test
lock
mov
add
add
fmull
pop
jns
subb
jne
jne
sub
std
ljmp
ret
mov
mov
lret
adc
fdivrp
add
dec
sbb
jecxz
in
and
jae
es
pop
outsl
mov
xchg
arpl
jnp
sbb
outsl
jmp
clc
adc
xlat
cwtl
mov
ja
sbb
les
outsl
pop
ds
in
dec
jecxz
mov
jmp
into
daa
mov
dec
xchg
or
push
mov
jo
xchg
mov
cli
pop
fs
mov
inc
xchg
das
std
push
inc
sbb
and
arpl
add
arpl
std
outsl
push
shlb
out
aaa
cmpsb
dec
ss
adc
jno
popa
js
lret
jp
jbe
out
mov
das
pop
push
bound
insb
dec
add
iret
testb
jge
ja
pushl
dec
jae,pn
dec
jecxz
outsb
imul
pop
stos
xor
sbb
xchg
adcb
cmp
mov
jp
inc
jae
add
je
fnstcw
xchg
mov
icebp
xchg
inc
lea
adc
adc
inc
sub
stos
lret
fstpl
xor
pop
xchg
aas
mov
xchg
add
sub
and
push
movsb
fmulp
scas
or
test
int
xor
lods
inc
dec
mov
xor
lea
or
inc
daa
sbb
arpl
cs
jne
jnp
mov
mov
lcall
jae
icebp
pusha
mov
cld
push
sub
sbb
cltd
div
mov
bnd
mov
sub
repnz
adcb
mov
dec
stos
add
and
clc
sbb
bound
and
fistpll
xlat
test
jecxz
sub
or
lods
jge
xchg
pop
jbe
inc
xchg
cmp
scas
addr16
aam
pop
push
imull
push
fimull
cmp
div
das
arpl
xlat
mov
ret
fldl
xor
stos
shl
stos
decb
addr16
mov
icebp
leave
push
mov
in
push
pop
mov
cmp
movsl
popa
push
push
push
rcll
popa
dec
fs
in
inc
add
pop
pusha
or
dec
cmpsl
shlb
repz
icebp
mov
shrb
xchg
xchg
push
out
stos
call
out
jmp
stc
inc
mov
sbb
add
jl
faddp
ljmp
and
mov
mov
cwtl
aas
inc
xor
push
fcompl
xchg
shr
lea
adc
addl
fiadds
jge
adc
add
xchg
js
sub
sbb
dec
pop
jecxz
leave
inc
loopne
mov
lods
js
mov
rolb
out
aaa
sbb
cmpsb
jmp
mov
mov
cmc
cmp
sarb
mov
pop
mov
pusha
sbb
mov
imul
mov
push
fisubs
rcrb
dec
int
push
push
std
mov
mov
push
adc
fcompl
shll
pop
mov
sub
movsl
jge
mov
mov
je
or
ret
jmp
add
data16
inc
cltd
pushf
mov
cld
jge
dec
add
mov
xor
inc
inc
jg
daa
test
or
stc
loopne
mov
jbe
jg
int3
int
mov
sahf
div
or
mov
cmp
popf
daa
dec
mov
rcll
push
push
mov
push
lahf
sarb
push
int
jg
in
int3
mov
add
mov
sub
sub
jl
mov
pop
fstps
in
mov
adc
repz
daa
add
push
das
ret
dec
adc
mov
fisttpl
lahf
test
xchg
stc
jp
sti
dec
inc
out
movsl
imul
mov
add
popf
xor
lcall
cltd
xor
push
fiaddl
sbb
popf
mov
mov
push
ds
negb
pop
pop
subb
xor
cmpl
xchg
xchg
les
sbb
jne
out
sahf
xor
mov
in
inc
sbb
loope
sub
fistps
and
int3
test
mov
push
je
imul
or
lock
fists
dec
pop
call
and
ljmp
test
cli
jns
xlat
ja
mov
cwtl
xchg
jo
mov
pop
add
cld
mov
xchg
dec
imul
push
sub
outsl
fistpl
pop
mov
xor
mov
pop
xchg
mov
inc
and
lcall
sbb
pop
mov
fstpt
mov
add
mov
push
imul
bound
mov
push
mov
add
loope
and
add
mov
xlat
aad
test
mov
imul
push
pop
pop
cmp
xchg
pop
ret
cmp
jns
mov
jecxz
push
sahf
out
sbb
psrad
mov
out
shl
sub
jno
mov
addr16
add
pop
inc
fstp
je
cmp
test
add
sub
push
dec
pusha
adc
adc
aam
stos
sti
lcall
lahf
pop
pop
mov
cs
adc
rclb
testb
pop
ss
sbb
adc
xchg
push
repz
jnp
or
cmpsl
lret
in
les
or
mov
jl
push
xlat
pop
leave
xchg
mov
pop
pop
dec
loope
cmp
mov
dec
icebp
cmp
jnp
xchg
ret
cmpsl
imul
xlat
subl
xchg
mov
mov
scas
add
mov
dec
mov
fs
sub
dec
dec
mov
pop
mull
mov
jl
dec
test
xchg
out
cs
lock
icebp
iret
lret
in
fldcw
imul
pop
lret
push
lds
gs
das
mov
inc
dec
sbbl
sarl
xchg
push
xor
mov
push
in
ror
dec
stc
mov
adc
filds
jmp
ja
mov
inc
scas
insb
hlt
and
fdivl
xlat
je
into
xchg
xor
mov
nop
adc
cmc
jl
shlb
or
jbe
sbbb
lret
clc
push
adc
jmp
jmp
mov
and
cmp
cmpsl
in
push
sbb
pop
insl
push
push
int3
add
adc
daa
inc
out
idivb
pop
bound
adc
or
add
mov
xchg
inc
push
jl
jecxz
ljmp
movsl
adc
mov
pop
lock
mov
into
push
add
mulb
dec
adc
xchg
notl
add
test
sub
add
adc
loop
stos
cli
lds
mov
in
sbb
mov
inc
mov
cltd
xchg
sbb
lea
inc
or
jns
cltd
mov
insb
pop
sub
jbe
xchg
pop
xor
std
mov
shlb
aaa
leave
jmp
cmp
jg
push
cltd
je
add
imulb
into
sbb
add
push
shlb
iret
mov
push
sbb
xchg
mov
mov
mov
xor
outsb
mov
shr
and
enter
inc
sbb
mov
jl
dec
stc
dec
imul
xor
pop
and
jns
and
cmp
cmc
inc
aas
add
lods
mov
inc
mov
fstl
insl
pop
pusha
ja
push
push
fsubrs
ljmp
add
xchg
pop
sub
push
push
xchg
stos
cmp
aaa
out
jo
pop
cmp
neg
lret
out
pop
adc
xor
jbe
jo
and
adc
adc
sub
fildl
clc
outsl
jnp
cs
mov
stc
mov
xor
test
shlb
test
testl
mov
pop
cltd
les
mov
sub
mov
movsl
insl
cmp
xor
jle
sub
mov
and
test
lret
add
jecxz
xor
cmp
ja
add
gs
lods
jmp
mov
cmp
mov
jne
xchg
aam
mov
out
jle
or
rolb
mov
lods
sbb
mov
or
xchg
loop
inc
or
cmp
call
jae
jge
jne
enter
loope
js
ja
jae
mov
imul
rolb
fildll
enter
rcrl
jl
xchg
xchg
cwtl
aad
in
lret
xchg
lret
pop
xchg
jb
and
jg
inc
in
ffreep
lds
test
dec
or
imul
or
fucom
out
fdivs
aam
ds
mov
add
push
inc
jge
lret
mov
in
jbe
call
fidivs
adc
jne
xchg
daa
sbb
ret
ljmp
cltd
stos
or
popa
pop
lds
int3
cmp
mov
dec
cmp
std
and
add
push
xlat
hlt
rorl
mov
xor
jmp
mov
cwtl
roll
and
cwtl
inc
popa
std
insl
daa
cltd
sbb
nop
inc
push
out
lock
hlt
fildl
and
pop
pop
into
fistl
sti
add
in
xor
sbb
fdivp
lcall
fs
push
popf
xchg
mov
popf
testl
inc
xor
jl
hlt
cmp
jge
nop
push
mov
mov
mov
inc
pop
jp
test
hlt
imulb
dec
push
jnp
out
iret
adc
mov
cmp
adc
adc
in
icebp
shl
test
pushl
ds
pop
scas
xchg
push
loope
scas
fcmovne
cmpsb
test
dec
push
test
push
dec
inc
icebp
shlb
divl
rcr
dec
inc
leave
ret
mov
lcall
jno
arpl
adc
pop
imul
shl
pop
push
fadd
js
in
lds
faddp
sub
push
xchg
cmc
fistps
dec
shll
jno
sarl
psllq
jnp
hlt
push
out
arpl
in
or
test
mov
inc
icebp
outsl
int3
aam
insb
popa
pop
stos
cmc
jb
sbb
std
mov
adcb
int
scas
dec
cmpsb
mov
pop
cli
std
push
xor
xchg
pop
mov
das
scas
mov
jle
testl
jmp
int3
inc
sbbb
push
add
enter
and
mov
hlt
sbb
push
push
cmp
add
sti
jnp
push
repz
mov
arpl
push
outsb
mov
sbb
cmpsb
jae
pop
aad
mov
push
fwait
repnz
and
and
loop
sti
jno
rolb
pop
negl
fcomi
hlt
xor
mov
push
sbb
push
int
sbb
std
sbb
out
sub
out
and
call
pop
sub
push
in
stos
sbb
dec
int
out
mov
je
push
ficomps
pusha
mov
jbe
test
xor
hlt
idivb
outsl
outsb
ljmp
or
mov
sbb
push
fldt
sbb
rorl
imul
pop
test
mov
dec
inc
addr16
xchg
mov
das
call
xchg
xchg
in
movsb
jb
in
or
and
je
mov
push
push
pmaxub
xchg
pop
sbb
ret
cmc
addr16
push
mov
repz
lahf
loop
adc
movl
mov
cld
pop
aad
jl
mov
loop
cmp
loopne
xor
mov
mov
rcr
fistpll
iret
aam
xchg
pop
or
mov
and
adc
fbstp
or
hlt
sbb
lods
mov
insl
cmpl
repz
mov
rclb
xchg
mov
lea
push
xchg
fisttps
outsl
in
mov
adc
int
xchg
rolb
fstps
fcomp
mov
movsb
cmp
xchg
fsts
in
xor
fadds
fldt
subl
jge
xchg
addb
pop
call
inc
add
and
dec
enter
xor
xor
and
test
dec
out
sub
int3
inc
fwait
xor
testl
inc
push
cwtl
movsl
sbb
popf
movb
pop
mov
jnp
xchg
jecxz
mov
sarl
sub
inc
mov
repz
sbb
in
ljmp
inc
adc
nop
je
js
xchg
ja
jno
jp
xor
test
pop
pcmpeqw
push
jnp
les
dec
cmp
mov
imul
push
add
subl
and
dec
gs
mov
pop
enter
push
adcl
pcmpgtd
push
mov
xor
pcmpgtb
pop
subl
jg
mov
xchg
ror
popa
das
mov
cmc
testb
and
and
in
pop
inc
lds
jnp
int3
xor
mov
inc
jecxz
xchg
bound
dec
and
inc
clc
xor
arpl
addr16
jmp
insl
mov
push
mov
mov
dec
rcll
icebp
push
pushf
jns
add
aam
testb
add
ds
rorb
sti
mov
pop
lods
insl
push
sub
adc
je
sbb
mov
scas
cmp
cmp
stc
negl
mov
insl
ret
sbb
xchg
data16
jae
pop
arpl
cmpl
insb
enter
in
ss
adc
mov
stos
jmp
js
dec
mov
fmul
popa
shlb
sub
jb
or
cmp
popa
into
xor
xchg
lret
out
xorl
or
popa
sbb
leave
std
jmp
popf
adc
fwait
in
inc
pushf
test
ja
rolb
lock
js
pop
mov
in
jns
xchg
movsl
lret
data16
shl
or
jl
loopne
ds
insl
or
jge
test
jns
cmpsb
jno
repz
xor
cmp
pop
dec
push
in
and
or
xor
xchg
subb
sbb
int
adc
mov
jmp
mov
les
xor
out
stos
mov
ja
push
xor
pop
outsl
cwtl
xchg
xor
imul
sub
adc
mov
xchg
xor
in
clc
dec
cli
jl
enter
and
stos
mov
mov
mov
out
cmp
test
cltd
and
pop
and
es
ds
pop
lds
mov
stos
in
ja
xchg
sub
fstl
test
adc
icebp
jo
push
jg
ds
div
adc
mov
rorb
ret
testb
test
dec
pop
push
faddl
decb
xchg
sbb
test
mov
push
fists
inc
xchg
pusha
jns
push
imul
fcoms
repz
sbb
mov
es
inc
jno
xchg
fcoml
mov
ret
jl
xchg
fldt
sbb
ds
pop
dec
mulb
jmp
mov
outsb
or
out
ja
fmuls
data16
pop
divb
std
push
adc
push
je
mov
aaa
and
add
and
add
dec
dec
stc
mov
mov
push
cmp
adc
push
fisttps
dec
push
cmpsb
rolb
sub
sti
imul
add
adc
stc
xor
adc
and
sbb
mov
push
mov
push
sbb
fcmovne
sub
jno
mov
push
fdivl
xchg
jb
pop
fnstsw
ret
adc
int
mov
sbb
dec
ljmp
ds
xchg
jle
cmpb
je
sbb
test
pmulhw
mov
pop
pop
cs
or
in
aas
leave
icebp
lock
pop
add
fisubrl
or
out
and
cmp
xchg
dec
cwtl
xchg
mov
and
fidivrl
jmp
add
dec
imul
dec
inc
in
scas
cmp
out
mov
ret
pusha
mov
mov
cs
push
xor
add
mov
mov
inc
mov
pop
scas
mulb
mov
jnp
mov
jge
mov
or
sbb
popf
xchg
jns
ss
xchg
std
loop
test
pop
movsl
add
xchg
sahf
push
mov
adc
int
pop
cmc
insl
icebp
sbb
aaa
mov
shrb
mov
jns
push
cltd
sub
xchg
lcall
je
insl
fs
inc
mov
das
iret
cld
sbb
push
mov
test
jg
push
sarl
inc
shll
adc
and
pop
dec
ret
pushf
es
les
xchg
lods
daa
sbb
adc
pop
gs
mov
repz
mov
sub
in
fwait
sbb
sub
xor
push
hlt
jb
mov
adc
mov
push
icebp
dec
pop
cmp
mov
cld
cmpsb
ret
shrb
in
jne
mov
pop
push
cli
mov
and
xchg
mov
rcl
mov
gs
inc
or
icebp
punpckldq
scas
sbb
cmc
in
push
or
dec
addr16
pop
lds
lahf
fdivrp
or
dec
outsb
add
mov
test
loope
in
gs
adc
jmp
outsb
adc
add
adc
pop
mov
loopne
sub
es
mov
sub
push
insb
or
pushf
sbb
or
int
xor
xchg
in
cmp
lcall
ret
xchg
pop
movl
lcall
insl
lret
outsb
lods
jae
push
aad
and
imul
xchg
jl
cltd
mov
test
push
and
cmpsl
xlat
push
inc
push
and
ficompl
add
in
push
clc
mov
arpl
inc
mov
push
cmp
pop
cmp
shl
dec
in
mov
clc
shll
mov
push
fstl
dec
lock
mov
cmpsl
std
cwtl
cmc
cltd
rorb
aad
xchg
pusha
pop
adc
sub
ds
std
fstpt
or
jl
xor
cmpsl
pop
push
stos
mov
push
sub
ret
arpl
xchg
jne
xchg
dec
mov
jae
movsb
flds
cmp
enter
xor
mov
mov
fadds
insl
xor
sub
out
pop
insb
shl
mov
pop
adcb
xchg
test
mov
in
mov
ficoml
fmull
aas
xchg
enter
test
mov
push
push
js
sub
push
nop
cmc
aas
xlat
xor
push
movsl
pop
pop
rorb
shrb
adc
jp
loop
jp
insb
xchg
and
out
xor
xchg
and
lret
mov
and
stos
dec
pop
or
pop
cmp
inc
xchg
stos
jae
addr16
popf
lds
cltd
add
enter
jmp
pop
ret
sahf
nop
insb
dec
test
ret
adc
add
sub
dec
decb
ds
movl
mov
insl
sub
xchg
cmpsb
arpl
nop
push
lcall
mov
cmpsb
push
shl
scas
jecxz
cld
pusha
sub
and
xor
pushf
shll
mov
ror
and
cwtl
popa
outsl
inc
cmp
aaa
push
int
filds
test
lea
mov
insl
add
mov
xchg
es
push
xchg
push
push
daa
sub
inc
inc
sti
imul
xor
sbb
ljmp
xor
sbb
pop
pop
cmpsb
mov
ljmp
int
dec
inc
imul
pop
dec
mov
out
jno
xchg
ljmp
add
cmp
fsubrp
jle
ret
cmp
cmpsl
adc
rorb
inc
dec
cmp
mov
mov
cmc
imul
in
andl
addr16
pop
outsb
movsb
or
push
jb
and
lahf
stos
xchg
cmc
std
int3
stc
and
sub
adc
popa
mov
outsb
mov
sbb
mov
stos
push
sbb
mov
insl
xorb
pop
test
mov
fwait
cmp
and
outsl
inc
insb
bnd
adc
jb
mov
sahf
dec
adc
dec
shlb
dec
sub
push
test
jecxz
out
and
into
push
call
aaa
push
cld
adc
xchg
lret
shlb
push
aad
popf
mov
pop
cmpsb
mov
push
or
xchg
fistpll
mov
mov
add
fdivrs
xchg
dec
lds
sti
pusha
test
jmp
stos
cmovb
scas
vaddss
inc
pop
push
mov
push
pop
dec
cwtl
daa
xchg
adc
pop
push
or
sub
mov
pop
mov
rorb
sub
xchg
jmp
cld
cmpsb
push
lahf
xchg
nop
loop
adc
and
sub
cmp
mov
push
iret
push
pop
shlb
ret
movsb
loopne
add
sbb
aaa
jo
int3
and
and
and
pop
in
fwait
mov
fcoms
nopl
mov
dec
loope
mov
fcompl
lret
ss
adc
les
add
mov
xchg
aam
ss
inc
dec
jmp
nop
mov
push
adc
fs
push
cmc
and
repnz
enter
or
mov
xchg
fcomi
cmp
call
aas
and
insb
clc
test
shlb
push
inc
cmpb
aam
and
xor
daa
mov
mov
mov
jbe
iret
fldcw
lds
sti
dec
mov
jae
pop
jne
push
dec
adc
and
cmp
mov
out
xorl
fcmovb
aaa
dec
jp
push
cmpsb
loop
lahf
adc
ja
adc
jg
or
and
out
or
mov
fwait
push
mov
orb
in
stos
jo
pop
push
cmp
cmp
sbb
enter
inc
out
mov
ret
je
out
dec
dec
repnz
sbb
cmp
mov
jbe
pop
cmpsl
adc
pop
xchg
jae
scas
repnz
mov
mov
lea
mov
xor
xorl
mov
fisubrl
xchg
or
decb
add
push
cmp
out
jle
std
or
mov
dec
jno
mov
mov
imul
inc
cmp
or
sbb
cmp
fbld
xchg
push
stos
ret
push
popf
scas
and
pop
push
dec
std
cli
adc
test
cmp
adc
sbb
fnstenv
jnp
testl
in
pop
dec
cmp
pop
popf
xlat
push
data16
fildl
fsubl
mov
nop
mov
dec
sbb
out
in
insl
jge
or
fs
sub
fcompl
insb
fstps
pop
mov
out
arpl
add
sub
xchg
add
add
push
sti
pop
sbb
dec
adc
sbbb
aas
aas
in
jnp
pop
adc
dec
cwtl
push
xor
loope
sbb
bound
fnstcw
outsl
dec
ret
push
mov
xor
jne
and
fbld
fucom
xchg
mov
cli
mov
push
jge
test
pop
fcmovnb
push
sbb
imull
inc
pop
repnz
cs
xor
lds
nop
adc
jge
sub
sahf
pop
jno
push
add
stc
mov
xchg
cwtl
mov
stos
lea
jo
lret
cmp
sti
xchg
mov
mov
sbb
adc
pop
cli
daa
xchg
ja
xchg
imul
mov
mov
push
jb
andl
mov
out
repnz
add
jns
xchg
xor
and
out
gs
pop
shr
movsb
dec
fs
lea
jle
pop
orb
dec
or
repz
adc
mov
aas
dec
shl
lret
shrl
orl
pop
sbb
cmpsb
ja
aam
cmp
lcall
or
adcb
cs
mov
xchg
inc
fistps
pop
push
xor
adcl
add
js
repnz
inc
rcrl
call
pusha
jl
popf
push
scas
cmovns
out
test
shlb
or
xor
je
mov
cmp
adc
fldcw
cmp
inc
mov
xchg
dec
inc
rclb
movsb
and
fmull
jo
test
cltd
inc
movsb
xor
popa
inc
cld
sub
decl
rol
jae
xor
mov
pop
xchg
push
fldenv
jp,pn
add
or
jge
cmpsl
fwait
test
jo
jmp
add
outsl
cmp
or
mov
xlat
lret
mov
cmp
add
mov
jae
cmpsl
sub
sub
pop
js
ss
jp
jae
mov
int
ss
mov
pop
push
test
or
ficomps
dec
inc
inc
mov
dec
bound
mov
pushf
jp
cmpsb
pop
data16
sbb
push
lret
idivb
and
in
data16
jl
out
xchg
shlb
sub
cmp
fistl
rclb
xor
dec
test
xchg
xchg
mov
cmc
sbb
dec
push
jbe
std
std
sub
dec
stc
ffree
call
js
andb
pop
clc
mov
or
xor
outsl
pop
mov
das
sub
shlb
pop
jbe
sbb
cmp
shll
addr16
inc
mov
loope
ret
clc
add
pop
xlat
add
xchg
ss
jbe
push
mov
push
aam
and
pop
std
mov
mov
cmp
cwtl
or
gs
xchg
mov
add
out
rcll
push
mov
inc
into
outsb
inc
xchg
andl
addr16
and
xchg
scas
aas
cmp
inc
clc
outsb
sub
out
cmp
test
and
or
and
scas
pop
mov
lods
xlat
push
popf
or
in
in
jbe
sahf
pop
fwait
cwtl
movsl
add
orl
jne
mov
inc
sbb
jb
lods
add
mov
xorl
testl
insl
push
insl
jnp
mov
jo
out
cmp
xorb
movsl
sub
scas
jne
push
sarl
movsb
out
pop
stos
lcall
aaa
add
pop
xchg
mov
clc
lahf
sbb
cltd
orl
ret
fidivrs
rorb
pop
xchg
push
jns
ja
aaa
in
pop
rol
pop
cmpsl
fimuls
mov
pop
pop
andb
gs
mov
mov
out
mov
pop
push
adc
and
mov
jle
fsubp
aad
add
cli
or
popf
or
fstps
inc
xchg
fcomps
xor
mov
lcall
and
addl
and
loopne
cwtl
sbb
add
mov
lods
int3
cmpsl
mov
inc
pop
push
add
jns
js
push
pop
ss
lcall
mov
push
mov
bound
inc
lcall
call
and
shr
pop
pop
test
inc
inc
icebp
out
adc
cmp
xchg
xchg
and
mov
bound
push
cwtl
daa
jbe
mulb
outsl
add
sbb
les
aam
and
sbb
push
in
sti
mov
gs
dec
xor
jbe
imulb
jne
xchg
aam
test
jmp
mov
mov
dec
movl
jmp
jnp
sub
push
xchg
cmp
xchg
pop
ds
sub
out
adc
push
sbb
mov
xor
sub
pop
in
xchg
xchg
das
push
add
mov
loopne
cmpb
out
incl
add
lock
pop
ja,pt
jle
sub
push
mov
test
in
loopne
out
fistpl
aad
push
lcall
fcomps
xchg
or
mov
mov
sbb
push
ds
or
sbb
daa
fimuls
mov
and
rcrl
orb
pop
daa
dec
je
hlt
insb
or
push
loop
xchg
arpl
push
lahf
jmp
imul
jp
stos
stos
scas
mov
stos
test
cmp
add
ret
cmp
sbb
xor
mov
cmp
and
sbb
jb
sub
mov
jnp
outsl
push
gs
andb
clc
jmp
cltd
dec
cmp
mov
fstl
out
cltd
into
testl
cmc
je
aaa
fs
fbstp
and
cld
cmp
iret
fwait
popa
je
aam
dec
adc
adc
fadd
pop
xchg
lcall
stc
in
xchg
fidivs
fimull
je
dec
pop
adc
sub
idiv
mov
adc
lea
loop
dec
js
push
mov
repnz
mov
mov
shrl
mov
dec
lds
lds
shl
or
jle
sub
dec
mov
je
cmp
es
xchg
in
lahf
mov
xchg
jmp
jb
push
add
cmc
insl
scas
pop
out
mov
pop
cltd
xchg
aad
jo
pop
mov
je
adc
dec
cmpsb
repnz
cmpl
addr16
pop
xchg
data16
xor
lds
out
mov
pop
and
clc
xor
in
bound
jbe
addr16
popa
push
ds
insb
add
add
loopne
int3
jnp
scas
lcall
pop
imull
aad
ret
test
or
adc
out
pop
aad
loop
dec
mov
xchg
andb
add
outsl
cmp
jns
in
adc
mov
mov
dec
push
push
inc
mov
jo
add
push
or
xchg
idiv
jns
aas
sahf
iret
push
sbb
cmpsl
pop
inc
or
pop
mov
testl
shll
adc
cmpsl
dec
aas
push
jo
sub
insb
jb
inc
dec
aas
push
xor
xacquire
sbb
imul
push
insl
inc
scas
jno
adc
mov
cmpsb
push
out
push
inc
xchg
pop
aas
xchg
push
push
repz
ja
inc
pusha
mov
popl
dec
in
push
push
or
xchg
stos
mov
or
push
mov
add
fsubrs
fs
lods
mov
dec
aas
push
cmp
pop
scas
push
xlat
stos
lcall
in
mov
mov
push
xor
pop
sub
push
sar
clc
leave
pop
mov
stc
pop
es
imul
mov
imul
inc
cmp
adc
outsb
aam
adc
jmp
fstpl
sarl
push
add
loop
and
mov
adc
fimull
inc
sti
das
dec
mov
shl
addr16
jo
shlb
test
mov
jp
iret
mov
xchg
jmp
int
mov
out
int
jbe
clc
or
pop
sbbl
xor
xchg
push
inc
sbb
sti
out
jo
adcb
mov
sub
fmull
mov
dec
in
xor
outsl
shll
xchg
cmp
xor
xor
popa
shrb
fistl
outsl
in
cltd
popf
dec
jge
sbb
shlb
xor
xor
popl
mov
jle
xchg
stc
loope
loope
arpl
loop
ljmp
and
daa
test
sbb
or
jp
addl
andl
test
or
jae
cwtl
or
gs
and
adc
xor
js
pop
dec
pop
inc
push
fists
xor
mov
cmp
push
cmp
rorl
loop
fsubs
inc
dec
gs
repnz
out
sbb
into
push
daa
lahf
stos
lcall
xor
mov
cmp
add
jnp
repnz
or
lods
movsb
push
add
frstor
xchg
nop
push
and
xchg
cli
ret
inc
adc
jmp
aaa
fadd
cmpsb
sbb
jmp
push
aad
mov
cli
rcr
cwtl
and
xor
in
cli
mov
movsb
hlt
repz
in
sub
push
mov
adc
aas
sbb
and
lret
mov
inc
and
pop
or
xchg
loopne
fildl
jle
or
xchg
stc
xor
sbb
mov
in
cmc
cmp
mov
in
out
pop
pop
adc
xor
push
add
fbld
mov
mov
shl
jp
sti
sbb
dec
mov
jp
and
fwait
arpl
and
mov
mov
daa
out
mov
xchg
xor
mov
xchg
cmp
xchg
dec
and
jmp
addb
stos
packssdw
out
stc
xchg
popa
call
push
inc
jbe
pop
nop
pop
lcall
lcall
fcom
push
lea
popf
enter
mov
mov
std
outsl
cmp
cmc
or
fimuls
lds
gs
loopne
push
adc
pop
rolb
stos
mov
xor
xor
jge
or
lods
cmp
gs
adc
push
mov
pop
dec
or
out
dec
fwait
mov
push
jmp
dec
push
call
sub
stc
cltd
outsl
fmulp
addr16
mov
test
push
pop
xchg
cmp
pop
imull
adcl
xchg
movsb
shrb
or
pop
xchg
push
sahf
mov
xchg
and
jnp
jb
ja
xchg
mov
adc
mov
stc
and
imul
mov
sub
dec
pop
cmp
ret
std
repnz
sbb
dec
inc
jmp
pop
addr16
fwait
add
adc
mov
std
jo
push
or
mov
xor
push
xchg
fs
sub
jge
test
or
insb
cli
sub
std
rolb
loope
shl
repz
lock
pop
adc
push
cmp
fstps
and
loop
mov
push
mov
pushf
inc
aaa
ljmp
dec
arpl
sbb
or
icebp
scas
mov
fidivl
dec
or
insl
mov
push
fcomps
dec
pop
dec
adc
mov
and
xchg
jecxz
or
aas
lds
mov
add
jl
jg
mov
gs
aad
ja
rolb
xor
xor
insl
jbe
enter
das
aaa
inc
in
jecxz
inc
jmp
out
dec
rcrl
add
sbb
mulb
sysenter
add
push
jae
mov
push
test
std
push
xchg
scas
test
push
pop
and
nop
andb
inc
fadds
cmc
push
lret
mov
ret
adc
stos
mov
sbb
and
aas
addb
in
fs
jns
jne
dec
lods
enter
dec
xor
ljmp
inc
in
push
xor
xchg
cmpsb
shll
dec
ss
pop
clc
xor
loop
xchg
jae
mov
jo
xchg
call
pop
cmp
inc
cmp
and
adc
cmp
inc
outsl
int
sbb
cmpsb
aaa
xchg
xchg
sub
mov
loope
xor
fwait
inc
jbe
inc
and
add
cmp
push
add
jecxz
aad
test
or
rclb
jb
outsb
push
mov
arpl
push
lock
push
lahf
ret
fldl
jns
test
shl
mov
sbb
add
loop
add
pop
or
lea
lock
les
fcompl
pushf
out
pop
lock
mov
pop
sub
add
hlt
push
aas
call
shll
mov
lea
in
inc
andb
jecxz
mov
test
xchg
test
popa
xchg
fucom
test
xchg
and
pop
sahf
pop
mov
jle
inc
cld
mov
push
sti
mov
mov
mov
or
scas
xchg
add
fwait
imul
dec
movsb
fsubs
aaa
in
dec
inc
xor
mov
outsl
ret
jo
das
jmp
xchg
aaa
mov
ss
popa
cmp
inc
lods
leave
in
sub
lret
sbb
mov
mov
stc
fbld
and
fisubrs
jns
into
ljmp
repz
mov
dec
add
mov
lds
jmp
scas
fnstsw
arpl
mov
popa
lock
movsl
push
xchg
out
sbb
xlat
loop
pusha
out
sub
cmp
fldenv
xchg
jno
mov
xchg
and
push
outsb
push
lea
push
movsb
les
bswap
add
cmp
mov
and
lock
pop
mov
rcrl
ja
sub
lret
xchg
sub
mov
sbb
fildl
ja
jmp
xlat
pop
jno
cmpl
in
cmpsl
orl
or
mov
ficompl
movsl
cmp
out
jo
dec
fwait
dec
xor
ja
dec
pop
push
stos
rol
movsl
adcl
mov
arpl
push
or
ficompl
push
push
mov
or
lahf
add
push
fistl
outsl
inc
mov
inc
mov
jmp
dec
and
icebp
mov
popa
xor
adc
repnz
pusha
js
adc
add
psraw
mov
std
stc
mov
sbb
push
add
jb
add
xor
fbstp
stc
pop
loope
test
dec
bnd
cs
add
out
mov
mov
sub
imul
lods
cmp
jecxz
aam
xchg
stc
sub
pop
out
enter
cld
sub
inc
insl
jl
xchg
in
enter
pop
jl
xchg
jnp
push
mov
sti
xor
mov
jae
es
and
dec
ss
or
scas
icebp
and
cmp
movsl
jle
add
out
pushf
stos
das
or
sbb
gs
scas
cmp
mull
arpl
scas
rorb
mov
sub
pop
cmpsl
xor
out
call
jae
lahf
push
mov
sub
lahf
pop
jae
push
mov
stos
test
jp
inc
lds
dec
pop
iret
outsl
push
fists
pop
dec
enter
ja
xchg
fcmovnbe
fildl
mov
xchg
sbb
dec
mov
std
out
dec
inc
jno
sub
or
cmc
mov
add
xchg
push
aas
dec
stc
lea
dec
cmp
shld
sbb
insb
clc
sub
add
jb
insb
jb
xorl
ret
jbe
sbb
cmp
fwait
enter
cs
jnp
adc
push
cwtl
inc
mov
in
mov
or
aas
or
js
xor
pop
insl
daa
inc
fimull
mov
pop
lret
ror
and
out
inc
or
pop
scas
mov
adc
pop
imul
inc
xchg
sub
movsb
mov
sub
lret
out
lahf
inc
mov
jb
and
xor
xchg
iret
pop
std
mov
mov
lret
sbb
aas
push
mov
push
jb
add
jle
push
decl
sub
jg
xor
jg
outsb
ret
sbb
push
aas
out
mov
in
mov
pop
pop
int
lret
inc
lea
es
mov
out
sahf
sbb
xchg
and
jns
inc
cmp
mov
mov
mov
add
mov
pop
dec
or
pushl
jnp
inc
aam
dec
jl
xchg
notl
or
outsl
mov
loop
popa
xor
or
and
fistps
dec
faddl
outsb
insb
mov
mov
ret
cmp
sahf
mov
pop
icebp
shr
xor
mov
jo
nop
arpl
dec
inc
sbb
pop
lods
sbb
dec
push
notl
out
inc
fmuls
loope
negb
sbb
movsb
test
mov
pushf
shl
push
out
ja
or
or
xchg
mov
sbb
movsl
mov
or
xchg
addr16
insl
push
addl
shll
jno
lds
rcll
and
inc
inc
xor
mov
jge
dec
scas
xchg
shl
xor
add
sub
shll
mov
cld
fistpll
outsb
xchg
inc
sbb
and
dec
xchg
popa
into
push
xlat
mov
cmp
mov
or
jle
std
pop
loopne
ljmp
test
xchg
out
cmp
imul
xchg
rcll
mov
push
push
jg
fs
pop
mov
push
mov
jg
or
pop
fnstcw
or
and
repnz
inc
mov
in
push
sahf
ljmp
push
fstp
hlt
loop
aad
rcrl
jo
loop
xlat
dec
rcll
int3
sub
outsb
es
icebp
xor
xor
cmp
mov
mov
push
fistps
insl
push
inc
or
dec
sbb
sti
fbstp
fst
or
in
popa
or
das
repz
dec
enter
test
inc
clc
or
pop
dec
mov
xchg
fcomps
push
push
pusha
dec
stos
xchg
lret
mov
rorl
lcall
je
scas
mov
xor
js
mov
push
and
inc
mov
movsb
insb
mov
roll
fnstenv
leave
shrl
out
sbb
mov
sub
add
mov
xor
iret
mov
mov
inc
and
in
pop
and
add
scas
sahf
mov
pop
popa
adcl
xor
jns
xchg
and
in
adc
lock
dec
fwait
std
daa
scas
movsl
or
fnsave
ret
sbb
sbb
push
xor
pop
sub
push
add
cli
sub
test
mov
imulb
sub
sbb
xchg
mov
mov
fsubl
or
cltd
nop
in
jl
and
bound
jp
xchg
adcb
xor
xchg
add
lea
cmpsl
jo
sbb
adc
rcll
mov
roll
insl
scas
pop
add
pop
add
push
and
repz
lods
inc
test
xchg
imul
sbb
sub
lds
add
or
xor
sarb
cli
lods
dec
ja
xchg
or
add
leave
dec
cwtl
mov
mov
imul
xor
dec
cmp
repz
or
pop
sub
jae
xchg
rcrb
cmc
adc
add
mov
pop
popf
jns
mov
push
and
sahf
push
xchg
insl
mov
mov
ds
ja
das
dec
cli
pushf
ds
orl
popa
ficoms
sar
mov
fisttpl
sbb
and
and
xor
xchg
js
loopne
xchg
or
push
cmc
mov
shr
test
pop
mov
mov
mov
adc
inc
pushf
dec
push
adc
mov
or
and
sub
mov
mov
mov
adc
div
ds
push
out
mov
stc
andb
in
dec
inc
mov
int3
repz
movsl
repnz
sub
cmpsb
stc
and
mov
loop
jb
popf
stos
xchg
ja
dec
xchg
cwtl
push
inc
ds
xchg
dec
mov
cmovno
daa
cmp
popf
js
pop
sub
cmpsl
jecxz
out
and
ds
cmpsl
jb
popf
adc
jns
mov
and
push
popa
aam
pop
sti
incb
xlat
sub
inc
shl
jno
popf
or
mov
jns
xchg
shlb
push
test
push
xor
inc
jmp
mov
mov
cld
roll
sti
add
adcb
inc
mov
lret
jae
fsubrl
ret
jb
xchg
xchg
jbe
pop
jge
or
lds
or
sbb
mov
jecxz
adcb
subl
nop
sbb
les
dec
pop
fxch
cmp
add
pushf
test
mulb
or
xchg
std
sub
inc
repnz
dec
divl
dec
mov
jl
or
int3
jo
pop
cmp
clc
jae
repz
iret
mov
jns
or
cmp
pop
dec
push
ds
add
ljmp
mov
test
pop
ljmp
jecxz
inc
sbb
lea
out
mov
sub
mov
cmp
and
aam
xor
xchg
test
sbb
inc
mov
inc
jecxz
shr
pop
fndisi(8087
xchg
push
xor
dec
inc
pop
out
cmpsl
sub
mov
cmovle
outsb
jle
test
jbe
addr16
pop
adc
fsubrs
cmp
cmp
mov
pushf
decb
out
add
jne
jp
inc
aad
cmp
and
sbb
pop
cmovno
or
outsl
mov
lock
mov
mov
mov
push
jne
out
in
mov
mov
sub
aad
pop
cld
sahf
lods
ret
ret
std
subb
loop
xchg
pop
sub
loop
ljmp
aas
ds
push
xchg
stos
shll
fildll
inc
rcll
test
pop
jae
scas
or
push
aam
rol
sub
in
insb
sahf
mov
test
and
sti
cld
stos
pop
xchg
pop
imul
sti
pusha
ret
or
inc
rcll
inc
fnstcw
or
subb
loope
or
shl
mov
es
inc
xor
inc
fbld
mov
mov
ljmp
jp
jmp
adc
ja
sbb
popa
cmpl
jno
fstpt
inc
mov
and
mov
outsl
dec
jo
mov
arpl
fsin
xorl
jno
or
imul
lret
mov
sti
test
dec
fcompl
stos
mov
fcompl
mov
xchg
and
push
out
shll
adc
stos
mov
rsm
fcmovnbe
pop
adc
jns
je
mov
xchg
xor
movsl
lahf
push
cli
imul
sbb
adc
jmp
in
movsl
bound
xor
xor
js
shrb
or
pop
jp
adcb
or
scas
or
sbb
lock
adc
mov
xchg
pop
push
inc
mov
dec
xchg
or
push
clc
dec
mov
jne
push
pushl
push
and
jl
add
out
into
jp
lcall
stc
mov
adc
stos
cld
jbe
jo
daa
in
bound
or
das
lahf
mov
lcall
outsb
cld
rclb
jbe
xchg
sub
loopne
push
into
cmp
dec
jle
in
mov
std
xchg
sub
adc
xchg
pop
push
insl
jnp
pop
insl
lret
in
mov
inc
movsl
in
inc
jle
idivb
stos
inc
add
shll
ss
scas
cmp
fcoml
inc
popa
fstpl
inc
and
dec
daa
jecxz
imul
jmp
aaa
mov
imul
scas
xor
mov
mov
mov
int3
addr16
pusha
mov
sub
xchg
push
loop
mov
into
mov
xor
shlb
dec
stos
xchg
scas
sbb
pusha
ljmp
pop
pop
movsb
dec
xor
xchg
jge
xchg
jae
sub
jo
ljmp
call
je
push
fcomip
dec
imul
mov
pop
cmp
sub
push
orl
call
and
xchg
outsb
xchg
jmp
mov
mov
test
and
cmc
loopne
ror
xor
mov
push
vmaxss
leave
iret
xchg
mov
repnz
cmc
jb
dec
std
testb
jmp
jno
mov
and
pop
pushl
cli
mov
inc
mov
loope
jge
sbb
mov
pop
mov
cmp
push
inc
push
push
pop
mov
jmp
jne
cli
jb
fwait
cwtl
or
gs
jb
push
rorl
sbb
lahf
xlat
mov
dec
cmp
adc
xchg
sbb
in
or
mov
add
cmpsl
leave
jle
or
adc
or
test
sub
stos
movb
xlat
insb
lock
subb
ret
out
mov
ret
add
jbe
loope
and
iret
xor
xor
dec
rolb
cmp
mov
ror
pushf
dec
fidivs
sbb
sarb
lods
stos
clc
aad
ja
cmpsb
cmp
and
movsl
push
call
hlt
sub
addl
test
cltd
ljmp
fs
and
call
jns
mov
and
pop
jl
cmp
pop
mov
lea
fnstcw
out
sbb
push
add
loop
jbe
mov
repnz
loope
sahf
xchg
ljmp
cmp
js
das
xchg
dec
into
jg
jno
and
adc
lock
addr16
adc
or
inc
or
lea
push
push
fs
push
dec
dec
stos
mov
add
test
icebp
shlb
std
lcall
movsb
cmpb
lods
mov
enter
and
add
loopne
or
sub
push
roll
pop
mov
mov
in
std
in
mov
lcall
testl
int
xor
lret
outsl
dec
sub
cwtl
mov
cmpsb
nop
in
jne
dec
xchg
and
into
int
fnstenv
mov
aas
dec
mov
mov
pop
and
mov
push
arpl
add
jno
sbb
sub
adc
mov
jp
dec
add
dec
xchg
dec
xchg
insl
or
mov
sub
imull
mov
shll
or
movl
mov
cmp
xor
fwait
repnz
cmp
mov
lret
and
pop
adc
dec
jo
or
je
pop
sbb
mov
filds
arpl
in
mov
xor
or
idivb
cltd
inc
das
xchg
in
inc
mov
add
mov
out
mov
neg
sub
lret
jae
xchg
push
rcrl
cmp
ret
in
inc
aam
outsl
mov
adc
mov
das
xchg
push
mov
std
cmp
imul
in
mov
scas
mov
xor
and
mov
push
mov
xchg
mov
xchg
nop
jno
xor
ss
push
addb
adc
jne
mov
mov
mov
xchg
push
mov
cld
sbb
pop
cltd
rcpps
pop
mov
ret
ja,pt
test
or
inc
stos
mov
or
pop
dec
aad
jae
out
sbb
add
jb
jbe
or
and
aam
int
sub
xor
sub
lock
push
jl
xor
dec
int3
or
jno
dec
adcl
inc
in
pop
lcall
push
les
dec
int3
outsl
arpl
out
jl
mov
jl
push
push
loope
mov
add
xor
mov
repz
add
inc
mov
or
sub
call
add
fdivs
jecxz
pop
shrb
js
fiadds
cmp
inc
outsb
addl
shll
lea
stos
lret
xlat
mov
mov
icebp
xor
mov
jnp
xchg
jmp
pushl
mov
mulb
lret
cmp
adc
in
insb
arpl
mov
notb
scas
arpl
stos
enter
inc
add
call
in
jns
adc
add
gs
sahf
fadds
add
xchg
sub
les
mov
pop
subb
xchg
xor
fstps
lods
out
xor
lods
mov
lods
lea
popf
push
js
push
in
cs
popa
jae
mov
sbb
imul
jnp
inc
mov
sti
loopne
in
fdivs
pop
push
aas
inc
sbb
jbe
cli
dec
mov
lods
gs
sbb
pop
xor
lods
or
pop
cmpb
shrb
push
mov
mov
out
iret
jle
lock
test
enter
fdivrs
inc
aad
aas
popa
das
pop
repnz
cmp
jno
xchg
es
cmpsb
andl
fsubr
lcall
test
push
insb
lret
add
sub
mov
mov
fldenv
cmpsb
aam
mov
adc
cmp
aas
cmp
dec
loopne
aam
xchg
icebp
or
sar
pop
or
insl
in
js
mov
push
mov
pop
sub
stos
hlt
cmpsb
push
and
xchg
loop
fcompl
lds
pop
and
jns
fmul
jle
push
mov
js
jnp
sahf
pusha
fdivrl
xchg
mov
sbb
out
mov
outsl
flds
push
mov
arpl
jne
xor
jecxz
add
cmp
popf
pop
fisubl
cmpsb
js
mov
ds
decb
jge
fs
sbb
je
testb
idivl
mov
scas
je
lcall
jl
cmp
dec
xor
dec
aas
mov
bswap
pop
sub
iret
movsl
leave
push
adc
sbb
pop
shlb
lea
xchg
jb
adc
or
movsb
test
aas
std
push
pop
ss
push
fnstenv
and
mov
cli
mov
pop
jg
or
shll
fbstp
dec
dec
adc
in
lcall
lahf
insl
je
cmpsl
mov
inc
cmpsl
stos
add
xor
inc
mov
iret
jle
xchg
mov
movsb
xchg
and
fwait
gs
sub
or
xchg
add
data16
js
xchg
andl
xor
enter
jge
roll
dec
xor
mov
gs
lahf
sbb
insb
mov
mov
scas
cmp
ljmp
arpl
and
xorl
dec
leave
nop
mov
mov
test
fstps
dec
loop
scas
push
popf
in
inc
lods
je
test
vmovd
pop
jecxz
jmp
push
inc
fidivl
and
sub
rcrl
jp
imul
cs
fsubl
mov
repz
add
or
fsub
mov
clc
repz
stos
cmp
icebp
shll
cmc
fdivl
or
sub
imul
pop
xchg
sti
mov
stc
aam
loopne
xchg
or
pop
pusha
add
mov
fwait
and
in
inc
das
stos
pop
adc
jns
jg
cmp
fdivrl
sub
adc
or
out
shlb
out
inc
data16
inc
scas
addb
add
adc
xchg
xchg
rorl
shlb
clc
arpl
movsb
dec
mov
stc
mov
aas
mov
and
inc
xchg
mov
popa
insb
push
nop
and
fisttps
add
popa
je
insl
aam
ret
or
push
dec
pop
mov
aad
cmc
sub
fcomps
in
push
add
mov
cmc
insl
xchg
in
shll
insl
sub
sarb
push
int
push
mov
in
lods
mov
repz
imul
push
or
sarb
clc
test
dec
add
jo
jmp
xchg
cmpsb
or
mov
sub
mov
int
aaa
out
aad
pop
std
popf
loop
cli
mov
in
pop
pushf
orb
push
test
sti
pop
push
dec
mov
call
inc
push
mov
out
adc
or
lret
fiaddl
repnz
push
daa
adc
and
pop
pop
jp
lcall
imul
test
or
mov
xchg
jns
out
cmpsb
sbb
fsubs
push
cmp
sbb
shrl
ja
iret
pushf
stc
dec
add
sbb
leave
in
dec
push
add
xchg
sbb
insl
pop
push
outsl
or
adc
jns
inc
and
test
adc
mov
sar
mov
mov
rorb
nop
lahf
mov
mov
push
flds
shlb
dec
push
xor
ja
nop
mov
sbb
pop
repz
jns
jns
pop
xorb
pop
jmp
push
adc
lret
jno
mov
and
jmp
pop
dec
movaps
or
cmp
xorb
stc
inc
ret
test
shrl
insl
mov
jb
lret
lock
cltd
dec
mov
inc
mov
pusha
add
insb
xchg
mov
mov
mov
cmc
inc
lcall
pop
adcl
cmp
cmp
pop
jg
into
das
lods
add
bswap
mov
rclb
add
fucomp
sub
inc
xchg
pop
in
or
dec
xor
cmpsl
inc
jae
mov
rorb
outsb
das
xor
pop
mov
outsl
insb
sub
into
adc
mov
jg
or
or
lret
ss
dec
add
mov
add
movsb
pop
incb
xor
sub
lds
std
mov
movsl
imul
sbb
cmp
adc
negb
test
je
jle
enter
mov
cs
mov
mov
mov
and
jge
stos
in
inc
dec
jnp
sbb
sbb
lock
xlat
inc
cmp
push
mulb
test
insb
sub
push
sbb
pop
xor
mov
jmp
add
in
cmp
cmpsb
sub
out
mov
jecxz
jo
cld
xor
lret
lods
adc
mov
xor
pop
sbb
mov
lock
sahf
std
jecxz
xorb
jae
aam
jae
shlb
jmp
repz
pusha
inc
cs
movsb
movsb
int
xchg
clc
add
les
mov
cmc
sub
xchg
fmul
outsb
push
add
add
mov
stos
pop
out
mov
pop
shlb
xor
das
scas
xor
ret
push
cli
ljmp
jbe
adc
mov
int3
jg
jmp
leave
dec
dec
jb
add
in
add
and
push
pop
mov
leave
ficompl
loop
xchg
aas
movsb
sarb
jns
xor
lcall
push
fs
xchg
fcomps
inc
lods
push
sbb
cmp
arpl
fs
pop
adc
sarl
dec
out
cmp
xchg
movsb
cli
icebp
movl
ffreep
xchg
jae
inc
sub
clc
cmp
adc
add
not
mov
lods
lret
push
js
imul
clc
adc
add
pop
repnz
insl
adc
cwtl
fdivrl
push
jno
dec
cmp
or
lcall
jl
test
loope
imulb
shll
xor
sub
rorb
bound
mov
movsb
sub
ja
gs
rclb
fcomps
fwait
in
and
or
push
jecxz
pop
enter
or
push
or
push
nop
pop
rcrb
dec
mov
mov
mov
into
daa
jmp
mov
in
lods
cltd
ret
fldl
or
xor
sub
fs
inc
neg
ljmp
mov
cmp
fisttps
pop
push
jo
daa
loopne
mov
add
push
push
mov
mov
mov
test
mov
cmp
jle
sahf
repnz
push
sbb
fidivl
mov
mov
and
or
scas
lea
adc
xchg
iret
mov
jge
pop
push
lods
cld
dec
add
daa
fstps
stc
icebp
out
ja
jge,pn
daa
les
jo
jns
repz
fwait
ret
mov
sbb
add
push
mov
addr16
lret
push
insl
mov
cmpsl
add
adcb
popf
or
and
iret
mov
xchg
push
iret
int
into
sbb
jo
jbe
out
sbb
inc
mov
mov
dec
mov
frstor
icebp
inc
int3
sbb
adc
or
jl
lret
ret
sub
adc
fcmovne
shr
push
push
shrl
lods
add
je
orl
mov
mov
incb
pusha
movsl
fildll
outsl
lods
lahf
int
inc
insl
fcoml
idivl
cld
jp
ss
insl
mov
pop
xchg
or
ja
push
mov
lock
cmp
xchg
fistps
je
and
inc
call
pop
xorl
mov
aam
insb
mov
daa
mov
rolb
pop
fwait
and
jl
push
pop
aaa
loop
lods
xchg
iret
sbb
ret
aad
fwait
jo
mov
scas
dec
or
xor
sbb
push
jmp
das
xchg
bound
mov
xchg
lods
repnz
jbe
jg
int3
jo
movsb
cmp
cs
inc
jp
xchg
lret
fstp
and
repnz
in
sub
add
jne
mov
insb
insb
xchg
test
xor
push
aaa
push
enter
lahf
sbb
mov
pop
hlt
mov
std
and
ja
ret
stos
lods
mov
loop
outsb
or
pop
inc
jl
movsb
xchg
cli
packsswb
shl
and
addr16
inc
dec
pop
jne
jl
mov
out
seta
fwait
clc
sti
xlat
dec
or
and
je
bound
pop
nop
pop
or
dec
dec
sub
test
lea
in
inc
inc
fldcw
lods
test
and
fs
movsl
loopne
sbb
pop
xchg
sub
loope
mov
push
ljmp
repz
and
aaa
scas
jmp
mov
xlat
inc
cltd
jns
pop
call
jle
jno
or
inc
fisubrs
lods
lea
cmp
pop
nop
enter
repnz
cmc
icebp
fs
xor
add
sub
stc
inc
push
insl
ret
dec
mov
jne
xchg
jmp
in
sub
dec
mov
push
inc
and
or
lock
sbb
or
fnstsw
dec
stc
test
pushf
push
jmp
push
lock
sbbb
xchg
aam
in
fwait
repnz
out
lcall
cld
std
stos
mov
and
inc
dec
cmp
nop
inc
stc
ret
cld
inc
adc
push
or
push
or
mov
push
mov
arpl
ds
test
dec
or
mov
fidivs
cmp
pop
mov
insb
sti
in
mov
pushf
into
jecxz
add
jge
dec
sbb
mov
push
sbb
add
les
mov
mov
add
repnz
repnz
ret
inc
cwtl
loopne
xor
pop
push
enter
stos
shrb
mov
jl
sub
mov
int3
testb
push
adc
inc
or
popa
jae
adc
push
mov
lds
stos
fwait
mov
ret
mov
test
repnz
mov
into
cmpsl
repz
test
mov
sbb
mov
stc
cmp
pop
repnz
das
xchg
hlt
mov
xor
shl
into
out
pop
int
sub
pop
sbb
bound
mov
stos
cmp
push
inc
loopne
mov
or
shlb
cmp
aam
and
arpl
cld
scas
or
push
push
inc
add
jecxz
mov
es
subl
cld
mov
jno
ret
pop
int
or
ficompl
dec
mov
or
idivb
mov
or
fwait
mov
xor
cld
mov
push
adc
xchg
or
cmp
fidivrl
clc
sbb
pusha
and
adc
out
loope
les
aam
hlt
pop
aas
mov
mov
mov
data16
sub
movsl
or
ss
mov
mov
push
inc
pop
jmp
adc
dec
andb
dec
xchg
lods
loope
pusha
cmp
pop
bound
in
sub
mov
sub
leave
cmp
lds
shlb
dec
dec
sub
push
adc
clc
lret
iret
add
fistpll
sbb
scas
jnp
pop
and
jno
mov
pop
sub
lods
dec
dec
add
fildl
ja
jmp
add
sahf
sub
push
cmpl
cmp
cld
pusha
call
rcrl
add
in
or
test
repz
push
test
inc
inc
push
or
pop
mov
jle
mov
push
jno
loopne
xor
lods
push
gs
xchg
out
test
shll
in
pop
imul
popf
lods
inc
sbb
and
and
mov
mov
out
gs
mov
shlb
scas
push
clc
jne
cmpsb
adc
push
mov
js
mov
enter
lods
push
shr
pop
hlt
push
ljmp
addb
pop
sahf
out
inc
push
cltd
aam
ljmp
jp
loopne
fstpt
adc
xor
add
arpl
dec
jmp
movsb
cltd
cmp
dec
in
inc
or
test
xlat
cld
xor
xor
imul
aaa
insl
shlb
inc
pop
push
repnz
inc
mov
adc
adc
cli
scas
outsl
out
add
adc
icebp
loope
addl
push
clc
pushf
and
out
xor
aam
inc
arpl
out
ret
nop
jmp
ficoml
rcrl
xor
insl
xor
cmpl
mov
imul
pop
loope
out
push
daa
mov
jae
xor
and
xchg
sahf
jecxz
and
jl
in
lds
fisttpll
leave
inc
or
pop
mov
mov
push
mov
out
sub
andb
add
sbb
cmp
scas
stc
in
insl
lcall
test
pop
push
push
cmp
ret
aas
jle
icebp
ss
filds
sub
repz
dec
insb
std
pop
inc
jge
cmp
cmpsl
mov
mov
aas
fsubs
lds
pop
testl
ds
push
xor
push
sbb
pop
xchg
sahf
mov
mov
lods
jle
mull
cmp
jne
cmp
loope
push
dec
pop
push
push
mov
aas
sbb
test
mov
pop
xchg
lds
push
pop
or
xchg
dec
dec
out
js
lds
mov
pop
les
xchg
cmp
sub
xchg
or
insl
jno
popf
call
imul
or
inc
mov
fcomp
aaa
sahf
cltd
xchg
pop
ljmp
into
ss
jno
inc
xor
jge
add
xor
lret
push
xor
enter
cmpsl
xor
push
mov
mov
out
les
rcl
add
xlat
fisttpll
cmp
mov
lahf
bound
jo
repz
adc
push
inc
negl
xor
sbb
mov
xor
das
mov
clc
pop
in
xchg
jo
les
jne
idivl
cmp
and
nop
push
inc
fsubs
ds
ficomps
popf
or
add
adc
clc
add
add
movb
es
outsb
jle
mov
bound
aam
push
cli
cmpsl
addr16
or
sbb
jp
jp
repz
daa
sub
stos
std
xchg
test
test
add
inc
add
ficomps
cmpsl
ficoml
xchg
sub
sub
insb
mov
test
lcall
mov
into
fisubrs
xchg
cwtl
iret
and
or
and
pop
es
sub
es
push
push
fldt
fadd
dec
cltd
jbe
and
lods
pop
es
ret
pop
aas
jle
sbb
pop
push
xor
int
imul
into
aaa
jmp
int
or
lock
pop
cli
sbb
and
out
sti
out
lods
sbb
xchg
aaa
bound
fwait
dec
cmp
out
sbb
ja
lock
into
pop
inc
xor
push
es
outsl
pop
inc
loop
repnz
mov
pop
jnp
pop
mov
lods
xchg
push
mov
pop
sub
inc
jbe
imul
ret
xlat
lret
pop
mov
ror
dec
jnp
iret
or
push
mov
xchg
js
les
js
ljmp
pop
jbe
sub
xlat
call
es
fisttpl
sti
fcmovnb
push
or
or
jg
inc
sub
mov
push
xor
hlt
cwtl
loope
mov
into
lahf
int
mov
movsl
lock
outsb
push
mov
lret
adc
cs
jo
rcl
mov
sahf
bound
cltd
inc
and
test
or
xchg
mov
popf
mov
inc
jecxz
sub
mov
inc
leave
inc
mov
lcall
mov
pop
inc
pop
or
nop
push
in
mov
cli
movups
dec
in
xor
fstpl
fisubrl
out
std
push
mov
adc
mov
push
ficoms
stos
and
rcl
inc
cmp
hlt
hlt
pop
xchg
jmp
cmp
outsb
scas
daa
jle
dec
xor
fdivl
or
in
cmp
xchg
and
ror
sbb
test
orl
push
mov
shll
fidivrl
cmp
dec
repz
clc
mov
daa
adc
cli
jle
xchg
fs
xchg
pop
and
into
xchg
pop
push
sbb
cli
pusha
into
cwtl
inc
mov
iret
leave
mull
pop
fwait
dec
shrb
and
mov
xor
adc
dec
pop
sbb
xor
fadds
inc
pop
mov
mov
rolb
loopne
cmp
adc
cmp
addl
in
dec
jmp
xchg
mov
mov
inc
xchg
or
movsb
add
scas
inc
sbb
cmc
xor
dec
js
jne
ret
cmpsl
add
dec
ja
push
dec
push
enter
push
xchg
xchg
sbb
scas
lods
push
sub
sub
sbb
fdivrl
hlt
test
addr16
nop
xor
loopne
lods
sbb
pusha
and
outsb
xor
shll
stos
xchg
mov
repz
xchg
pop
daa
dec
add
inc
inc
shrl
jae
lods
dec
mov
mov
add
mov
or
aas
mov
dec
lea
sbb
fldt
lcall
std
jg
adc
cmp
loop
in
loope
pop
mov
add
jmp
xor
ja
or
push
and
jecxz
data16
lock
pop
pop
dec
sbb
adc
pop
inc
sub
mov
xor
test
xor
pop
inc
insl
mov
jnp
cmpsb
into
pop
lret
fldl
insl
inc
into
fildl
push
cmovl
icebp
sbbb
int3
into
cmpsb
pop
movsb
push
push
push
jecxz
daa
adc
inc
ds
cmp
mov
pop
ffreep
es
sub
daa
arpl
add
pop
xor
lret
jae
inc
push
shll
addr16
push
scas
push
addb
movsb
adcl
and
push
jge
adc
mov
xor
jp
fwait
insl
mov
les
cltd
cmp
stc
add
out
cli
push
jg
cmpsb
sub
jge
cmp
fildll
fwait
das
jge
insl
or
les
mov
cmp
out
ret
jecxz
xlat
addr16
jmp
push
add
sti
out
stos
or
into
outsl
scas
test
xor
hlt
fmull
cmp
add
fidivl
xchg
cmpsl
fcmovne
dec
or
push
repz
mov
xlat
cmp
movsl
mov
loopne
adc
pop
nop
dec
cmp
jp
mov
in
out
push
ret
bound
mov
cmp
sti
aas
push
jecxz
loopne
or
out
jnp
lods
cmp
pop
mov
sbb
ror
pop
popf
lret
movsb
hlt
gs
mov
bound
mov
repz
addb
jo
mov
jae
sbb
out
rcl
fstl
jecxz
out
jbe
pop
mov
pop
int
dec
lahf
xchg
jg
lret
int3
int3
rol
adc
in
rcrl
cmp
mov
inc
mov
jae
popa
in
push
aad
mov
fcmovne
lret
mov
cmp
mov
mov
jne
rcrb
imulb
daa
test
and
sbb
int3
add
in
add
pop
mov
sbb
enter
imul
mov
lock
enter
dec
cmp
cld
jb
xchg
jp
lcall
push
adc
std
cmpsb
in
inc
xlat
insl
nop
fisubrl
ret
jl
xchg
call
sbb
lods
popa
jno
loope
adc
pop
mov
or
clc
xor
cmp
mov
aam
pop
cmpsl
jne
mov
addl
or
sbb
adc
sbb
push
cmp
push
jbe
clc
push
adc
push
add
mov
dec
rcrl
andl
cld
pop
nop
les
filds
sub
test
lcall
pop
je
aad
add
xchg
stc
jae
mov
stc
pop
rcl
inc
mov
mov
adc
pminsw
test
add
gs
out
lahf
int3
xchg
imul
ret
and
mov
es
lcall
mov
ss
adc
pop
outsb
and
cmp
dec
daa
movsl
add
cmc
dec
lret
lahf
inc
clc
repnz
gs
ja
mov
push
and
add
inc
and
repnz
loope
dec
cwtl
inc
movsb
mov
fidivl
mov
dec
xor
cmp
ret
lahf
lcall
gs
fdivrp
pop
mov
fcoms
mov
and
pop
push
test
cmp
lret
xor
icebp
xor
add
outsb
decl
lea
pop
cmp
ret
sbb
movsb
lahf
es
sub
into
xchg
cmp
rcrl
push
sbb
dec
fs
jnp
das
out
cli
adc
sub
and
gs
mov
jae
dec
dec
xchg
cmp
test
jo
pop
rcr
cld
mov
sbb
mov
jg
cld
int3
or
xor
push
bnd
jle
stos
nop
cwtl
mov
mov
mov
adc
add
addl
mov
loope
sub
cs
push
xchg
outsl
cld
inc
jmp
mov
inc
and
jae
or
fcomi
dec
lret
mov
rclb
xchg
xchg
cmp
je
adc
cmp
fsubl
out
cli
push
pop
adc
cli
fmuls
sub
pinsrw
sbb
int
aaa
les
jecxz
jbe
ljmp
out
mov
push
jmp
cmpsb
daa
or
fstpl
lret
shll
add
sarl
sub
fnsave
push
dec
arpl
ljmp
pop
lock
scas
xor
sahf
jno
iret
pop
push
push
sub
cmp
push
dec
inc
in
mov
xor
ret
xchg
cs
inc
sub
xchg
pusha
insb
out
and
pop
jb
insl
cmpsl
lcall
adc
out
jmp
outsl
movsb
fwait
mov
iret
lret
xchg
mov
xor
mov
mov
and
call
in
push
loope
mov
testl
cmp
jnp
pop
inc
in
popa
movsb
scas
pop
enter
mov
mov
sub
jmp
int3
pop
fldt
outsb
lds
or
mov
lcall
enter
cwtl
lcall
mov
pop
dec
in
pop
sbb
dec
adc
lret
jmp
sub
in
pop
lret
adc
scas
xchg
jo
sbb
daa
pushl
dec
jne
rcr
mov
dec
movsb
mov
adc
lods
jae
imul
mov
pop
xchg
or
into
mov
mov
or
mov
aam
lods
shl
inc
add
or
movsl
xchg
aad
sti
pop
or
xor
inc
inc
jle
ss
mov
cld
adc
mov
jl
xchg
scas
fwait
pop
ficomps
or
mov
sbb
inc
rcrb
idivb
cmc
sbb
pop
lcall
sub
ljmp
mov
insb
lds
mov
andb
pop
iret
pushf
int
cmp
dec
in
cwtl
jge
push
and
fsqrt
mov
and
jo
ret
jo
dec
fs
int3
push
sbb
xchg
add
mov
sbb
mov
jnp
js
pop
inc
dec
ss
rcll
push
in
cmpsb
jp
movsb
push
inc
cli
daa
jns
cld
mov
and
out
cmp
fisubrl
shrl
xchg
fmuls
xchg
sub
fadd
loop
mov
nop
jno
repz
dec
cld
cmp
push
into
aaa
nop
cmp
orl
sub
mov
notl
int3
sub
mov
insb
jge
andb
and
loop
fildl
inc
sbb
sarw
cmp
cltd
xchg
xor
sbb
pop
add
inc
in
flds
call
push
popf
scas
add
jge
cmpl
in
fs
cmp
push
dec
lcall
popf
fs
stos
fmull
inc
cmp
xchg
flds
fiaddl
shlb
sub
cmp
push
xor
inc
daa
push
test
les
mov
add
es
cli
mov
loope
jl
push
shrb
add
ss
lret
in
pop
mov
fidivrl
mov
jl
xchg
and
push
pop
add
jle
in
xchg
shl
pop
add
dec
stos
jecxz
dec
addr16
adc
loopne
jge
stc
and
dec
adc
adc
push
add
cmp
sar
scas
pusha
cmp
movsb
ja
rcl
add
cltd
pop
cmp
cmp
push
pusha
cmpsl
push
clc
xchg
mov
pop
fidivrl
test
mov
inc
xchg
lcall
add
push
dec
jmp
and
aad
push
sar
jo
out
add
test
subl
push
adc
test
lods
mov
sub
aaa
call
aam
adc
and
outsl
jl
jae
data16
xchg
sti
scas
les
cli
leave
inc
mov
xchg
add
je
or
dec
aam
ret
inc
pop
push
rol
mov
lret
out
jmp
cmpsb
and
push
lahf
xchg
das
fwait
arpl
xchg
jle
xor
not
xchg
xor
es
gs
inc
or
aam
insl
mov
cmp
cmp
cmp
xor
and
mov
push
loop
push
ljmp
test
mov
insb
add
jecxz
sahf
xchg
push
push
mov
jbe
xor
jle
rcr
sub
iret
enter
das
aad
push
or
xchg
add
lods
xor
jp
outsb
sar
or
stos
mov
fcmovu
aaa
xchg
pop
lret
scas
mov
push
into
sbb
push
inc
es
jge
gs
jge
xchg
icebp
inc
pop
call
or
cli
imul
das
insl
xchg
mov
dec
aam
inc
adc
bound
inc
gs
into
test
and
jecxz
mov
xchg
inc
or
mov
add
gs
push
je
stos
or
xchg
outsl
ljmp
mov
fs
aaa
les
and
jns
fld1
xchg
push
xorb
and
mov
inc
aad
pop
js
mov
call
inc
in
dec
mov
sub
test
fnstcw
call
stos
mov
lret
aas
mov
mov
cmp
xor
push
imul
nop
test
dec
inc
es
mov
int3
pusha
mov
sub
fstps
jbe
sbb
jg
bndstx
push
into
test
add
int
add
shlb
pop
mov
sub
push
adc
push
xor
mov
movsb
xor
push
je
xor
test
and
test
mov
popa
fisubrl
ja
sub
adc
sub
push
sbb
pop
hlt
pop
pushf
imul
inc
cmpsb
dec
sbb
cmp
inc
ret
rclb
test
leave
scas
cmc
jmp
enter
and
fs
clc
and
int3
cmpl
lcall
cmpsb
jge
out
icebp
mov
nop
xlat
push
pop
int3
cmp
daa
adc
dec
lds
popa
arpl
pop
add
add
inc
inc
sub
aad
xor
jbe
dec
insl
sbb
jo
je
iret
lods
sub
jns,pn
pop
mov
sub
inc
pop
out
xchg
xor
stos
imul
fisubrl
mov
out
loope
add
lock
mov
outsb
pop
lea
xchg
in
int3
pop
mov
je
mov
fisubrl
call
xor
push
les
cmp
sbb
sub
fsubrs
mov
call
rorb
sub
orb
pushl
in
xlat
add
jmp
push
lods
cld
inc
subl
inc
mov
cwtl
and
or
mov
xor
jo
dec
or
jnp
aam
xchg
test
call
sbb
and
mov
adc
inc
dec
adc
or
sub
outsl
push
dec
push
mov
enter
or
sub
dec
mov
ds
pop
adc
aas
in
push
out
stos
test
subb
adc
insl
outsb
jns
in
inc
dec
popf
lret
add
out
dec
out
pop
push
cmp
sub
sbbb
or
jmp
jns
scas
leave
popf
pop
lret
popa
xchg
inc
fmul
push
jns
pop
data16
add
xchg
push
ret
inc
adc
jns
adc
jne
sbb
sub
mov
lods
sub
inc
cmp
xchg
cmp
inc
xchg
mov
in
jne
adc
inc
loope
subb
cmpsb
xchg
fistpl
in
dec
mov
mov
xor
sub
push
dec
das
mov
ror
xlat
xor
mov
dec
add
outsl
ret
dec
inc
jle
mov
repnz
or
sbb
mov
scas
mov
imul
jbe
shrb
cmp
xor
mov
test
in
dec
and
cmp
dec
inc
fistl
jno
xchg
pusha
cmp
jmp
pop
dec
rcll
test
test
fwait
or
cmp
xor
popf
or
xlat
or
push
scas
stos
leave
push
cmp
cwtl
out
loop
mov
add
sbb
imul
bound
xchg
aad
cmp
in
std
out
push
imull
hlt
pop
jnp
rcrl
cmp
cwtl
int3
lods
lock
cwtl
fdivs
jl
out
andb
cmp
push
in
nop
and
xchg
and
jb
xchg
adc
rcrl
in
sbb
outsb
xchg
mov
addr16
inc
jnp
mov
mov
mov
out
sub
stc
pop
adc
jle
jns
inc
push
sub
out
push
fnstcw
enter
xor
xor
stos
push
orps
mov
mov
and
pop
movsb
into
push
mov
push
clc
xchg
stc
cmp
push
jne
js
ds
sub
mov
cmp
sub
or
int
loope
and
or
pop
mov
mov
cmpsb
in
sti
popl
pop
in
hlt
mov
mov
das
cmp
or
stc
clc
sti
adc
call
mov
mov
push
push
inc
hlt
sbb
shrb
aad
mov
ret
jo
sbbb
mov
dec
icebp
lret
loopne
pushf
mov
call
sahf
sbb
addr16
and
jle
fldl
pop
push
pop
into
popa
or
les
xor
insl
push
push
and
rcrl
dec
cmp
dec
lock
push
add
pop
mov
cmpsl
push
push
cmp
ret
cmpsl
mov
lcall
imul
xor
xor
mov
dec
and
mulb
jo
mov
inc
xor
aas
in
lret
pusha
ljmp
xor
push
imul
mov
cltd
sbb
movsl
jae
cmpsb
shll
imul
lahf
push
xchg
js
lods
push
add
sub
popf
mov
data16
lock
mov
push
test
add
mov
gs
push
and
insl
hlt
adc
testb
leave
faddl
adc
push
sub
addr16
xchg
lret
add
pop
out
mov
pop
jae
and
inc
xor
mov
repnz
xchg
je
xorb
jmp
adc
insl
pop
xor
xchg
js
out
and
dec
adc
pushf
xchg
and
fldl
and
testb
push
push
aaa
sti
mov
rclb
xchg
fldl
test
cwtl
jnp
mov
mov
pop
out
mov
push
mov
test
mov
lds
dec
outsb
jle
sahf
mov
nop
popa
jae
lret
mov
in
xor
cmpsb
xchg
pop
pop
pop
lods
xchg
fldt
cmpl
push
popa
and
pop
xchg
sub
push
addl
and
mov
sbb
lods
inc
adc
stos
pusha
push
inc
adc
andl
mov
adc
aas
gs
test
pop
mov
xchg
inc
dec
and
icebp
push
push
sub
je
mov
xlat
cmp
popf
ja
insb
push
adc
sub
outsb
xor
xchg
fs
or
arpl
mov
xchg
add
cmp
lcall
push
rorb
fsubrs
lret
jbe
adc
cmp
push
xchg
mov
fsubs
lcall
bound
jecxz
sbb
adc
loop,pt
in
mov
mov
mov
push
mov
fwait
in
loope
lret
push
adc
jne
add
cmc
mov
ret
mov
sbb
icebp
pop
in
nop
mov
mov
or
fstl
repz
add
xchg
arpl
js
ret
es
rcrb
and
mov
addr16
cs
push
cmpsb
lods
outsl
in
push
rorl
fcmovnu
ret
or
or
cwtl
sub
loopne
mov
fidivrs
xor
mov
je
lahf
push
inc
add
cwtl
adcl
mov
test
xchg
lea
ds
sub
dec
divl
or
jae
lds
test
les
sbb
or
mov
imul
mov
and
fucomi
dec
in
call
jecxz
scas
ret
adc
notb
lods
mov
mov
sbb
dec
shrb
mov
and
and
lea
xor
and
add
aad
or
or
or
push
mov
daa
test
imull
lea
iret
or
movsl
pop
cwtl
mov
pop
cmp
xchg
mov
stc
mov
mov
adc
push
sub
sahf
push
test
in
incl
bound
dec
mov
push
and
xchg
aam
test
dec
dec
add
dec
mov
loop
pushf
jl
int3
insb
adc
add
cltd
inc
sub
in
stos
sub
fdivs
imul
loope
pop
add
aad
and
addr16
movsb
mov
sub
lcall
push
pop
cmpsl
cmp
cwtl
mov
arpl
xchg
sbb
mov
push
lods
lcall
mov
iret
sahf
popf
fwait
xorb
std
xor
fisubs
jmp
ds
les
push
idivl
idiv
sbb
dec
mov
and
push
push
aaa
daa
dec
mov
cwtl
gs
xor
xlat
call
mov
add
notb
movsl
stc
lds
jg
test
and
or
mov
xor
adc
inc
movsl
xchg
dec
cmp
outsb
mov
pop
cmpb
repz
enter
pop
aad
mov
ret
in
fildl
add
cwtl
or
mov
addl
sub
sbb
movq
jl
and
mov
popf
mov
aad
add
cmp
cmp
dec
dec
xchg
add
adc
aam
xchg
cmp
repnz
xchg
in
dec
xor
fcompl
dec
hlt
sub
xchg
scas
mov
add
dec
ja
dec
out
jae
jp
jno
daa
in
lahf
push
fisubl
or
into
xchg
mov
push
repz
cli
mov
ret
stc
xor
cmp
mov
movsl
fidivl
in
jg
or
push
fwait
mov
jne
mov
adc
inc
cmp
jge
xor
clc
inc
stc
rolb
mov
add
fwait
mov
mov
push
insl
data16
jne
jmp
push
shr
icebp
loope
jl
mov
les
inc
in
pop
nop
mov
mov
rcll
fs
adc
push
mov
cltd
mov
mov
jno
fldcw
cmp
enter
mov
cld
hlt
inc
lock
in
pop
js
pop
ds
cvtdq2ps
nop
sarb
lock
xchg
out
nop
testl
andb
or
add
add
mov
dec
sbb
in
mov
lods
mov
push
dec
into
or
pop
lock
mov
and
pop
jmp
ss
rorb
stos
or
sub
stos
adcb
sarl
fidivrl
iret
and
inc
lahf
push
xchg
and
xchg
mov
mov
xchg
in
popa
add
loope
ret
xchg
rcrb
push
test
pop
adc
inc
sahf
adc
ja
and
xlat
inc
hlt
mov
loope
fwait
lret
stos
fistl
vphaddbd
mov
popw
inc
lret
mov
add
and
cmp
sbb
add
jo
divl
or
push
insb
mov
add
out
jecxz
sti
inc
jp
rcrl
jmp
xor
ds
fdivrp
jmp
dec
lcall
push
in
imul
int
mov
imul
mov
and
mov
packuswb
sub
subb
loopne
xor
out
mov
fmul
inc
stc
faddl
xchg
push
loope
int
or
push
push
push
sti
mov
push
ficoms
cmp
jecxz
xchg
les
or
iret
pop
mov
pop
cmpsb
ss
imul
inc
mov
popf
cmp
jno
into
sbb
mov
rolb
jno
outsb
pop
mov
pop
and
sub
icebp
adc
cli
cmp
pop
xchg
andb
outsb
scas
lods
adc
imul
loop
repnz
sub
mov
das
out
jle
push
sti
out
sti
fcom
mov
aad
test
push
rcl
ja
mov
pop
or
and
pop
xlat
and
mov
mov
mov
xor
lcall
pop
test
repnz
mov
or
sub
negl
pop
inc
sub
test
cwtl
xchg
lret
pop
and
dec
adc
movsl
jmp
jno
fmuls
mov
pusha
repz
mov
cmp
out
rorb
cmp
mov
stos
clc
mov
xlat
adc
xchg
sub
js
subl
leave
sub
xor
fmull
xchg
jns
sbb
adc
and
out
sub
sbb
pop
imul
orb
std
iret
and
movb
fnstsw
in
mov
add
mov
pop
push
cmp
loopne
pusha
jecxz
mov
dec
and
push
out
xor
cmp
mov
cld
push
add
or
stos
std
push
fmulp
in
push
jae,pt
lods
push
in
adc
xor
xor
sub
jb
aam
pop
leave
sbb
dec
mov
jg
arpl
stos
mov
mov
arpl
mov
in
cmp
test
mov
leave
pop
xchg
pop
mov
imul
out
icebp
call
push
data16
push
dec
mov
push
ja
push
out
adc
push
push
jg
add
out
pop
and
jnp
stc
sub
aam
loopne
sub
jbe
sbb
mov
icebp
je
mov
test
or
dec
or
xor
popa
scas
lahf
mov
lahf
inc
vmovddup
push
mov
dec
add
repz
jo
mov
push
and
xchg
mov
pop
pushf
das
jecxz
push
popl
cltd
in
repz
fildll
or
jbe
push
jg
out
in
jbe
jnp
dec
cmpsb
stos
lret
sahf
and
pop
in
cmp
push
icebp
clc
lret
dec
rcl
xlat
add
es
push
sti
mov
cmpsb
jno
mov
jmp
xor
stos
push
push
pcmpeqb
pcmpgtw
add
mov
pop
mov
fsubrl
push
fnstcw
sbb
push
mov
enter
ret
sbb
mov
repz
mov
jo
or
pop
xor
xor
add
pop
enter
jnp
in
and
xchg
inc
or
push
xchg
adc
es
add
inc
jl
xlat
rorb
mov
fimull
xor
seta
xchg
js
and
adc
mov
test
out
inc
push
je
imul
push
mov
xchg
fchs
push
mov
lret
fisubs
mov
decl
dec
xchg
add
sahf
testl
mov
xor
mov
jbe
push
add
lds
rol
les
inc
gs
add
jne
out
xchg
adcb
icebp
push
mov
pop
mov
gs
push
push
or
repnz
roll
mov
cmpsb
aaa
push
sub
pop
sbb
jmp
adc
or
sahf
jb
jbe
cmpl
xchg
xchg
and
sub
btr
mov
push
insl
scas
sub
add
enter
es
cs
xor
sti
mov
mov
sbb
xchg
mov
shlb
sbbb
adc
dec
push
shr
inc
and
rorb
imul
and
pop
pushf
call
jp
fwait
das
lret
lahf
sbb
test
xchg
mov
mov
loopne
or
inc
imul
ljmp
das
xor
ficomps
je
cld
cmp
mov
sbb
push
mov
lcall
and
jb
lcall
or
shl
lret
inc
stos
pop
sub
jnp
adc
cmp
cltd
fisubrs
fstl
push
pop
xchg
gs
mov
pop
daa
ljmp
adcb
leave
push
xor
pop
mov
jne
js
movsl
ret
testb
mov
lret
cli
push
vmread
aas
sar
bound
lods
and
dec
orl
sti
push
cmp
stos
clc
scas
dec
jmp
cmp
stc
adc
movsl
das
je
push
and
cli
mov
lcall
push
dec
call
add
test
icebp
inc
adc
sub
xchg
pop
push
add
test
mov
xor
call
pop
and
xchg
xchg
cwtl
push
cmp
push
and
inc
test
xor
mov
adc
add
or
xchg
add
inc
xchg
xor
pop
xchg
push
loope
dec
dec
dec
in
es
push
lret
lret
push
mov
mov
xchg
shl
sub
movsl
sub
sbb
test
pop
mov
sub
out
dec
fcmovnbe
dec
ret
jl
lret
popa
push
repnz
pop
pop
ss
xor
pop
ss
pop
fisttpll
pop
xlat
dec
sbb
add
lds
sbb
scas
in
mov
sbb
push
pop
sbbl
sbb
sub
xchg
cmp
push
out
push
or
rcr
outsb
push
and
push
sub
inc
mov
sahf
sub
leave
inc
xor
pop
out
scas
jmp
jbe
data16
dec
xchg
pop
jns
xchg
aam
pop
sahf
cs
xchg
add
pop
daa
lret
out
cmp
rcll
jl
insb
mov
mov
out
jbe
sub
sbb
sbb
lods
jb
aad
jmp
aaa
addr16
in
cwtl
fistpll
dec
mov
xor
rcrl
xchg
mov
xor
or
bswap
mov
pop
imull
hlt
lahf
mov
in
mov
sub
push
inc
mov
dec
int
cmc
in
push
ficompl
daa
dec
push
mov
cs
imul
pop
incb
icebp
adc
lret
mov
mov
dec
stos
add
pop
in
mov
xchg
mov
pop
cmc
push
pop
popf
push
inc
loope
aaa
jb
push
lods
xchg
popa
push
jmp
push
cmp
stos
mov
mov
dec
lret
dec
xchg
xlat
addb
mov
sbb
mov
movsl
adc
cmc
repz
pop
rcll
insl
cmp
fsubrl
stos
ss
xor
mov
jle
lds
mov
lahf
cmpsl
mov
sub
test
xor
pop
andb
sub
sahf
and
and
ja
sub
loop
xlat
aam
fnsave
mov
ss
test
push
mov
scas
stos
mov
rcr
sbb
cmp
jo
ja
xor
xchg
negl
lods
dec
lods
push
call
fucomi
int3
ljmp
leave
frstor
mov
movsb
test
das
add
pop
popf
jne
jl
insb
push
nop
or
mov
inc
shrb
lret
je
out
orl
pop
mov
dec
adc
pop
mov
out
cltd
movsl
xlat
and
inc
hlt
and
aaa
add
out
or
sub
fisubl
mov
adc
push
or
xchg
lods
hlt
adc
mov
xchg
push
ret
pop
xchg
movsl
mov
sahf
pop
sbb
mov
or
jbe
pushf
lods
stos
dec
xchg
in
and
int
add
repnz
loop
mov
lahf
mov
cmpsl
in
dec
data16
adc
fistpll
mov
fistpl
xor
cmpsl
pop
gs
pop
jp
dec
aaa
repz
dec
inc
xor
jno
das
negb
test
xchg
outsb
test
mov
add
add
jbe
in
add
push
xchg
jb
add
mov
mov
and
fimuls
lods
push
mov
cmp
add
stos
mov
add
test
xchg
adc
xor
xor
gs
add
dec
jo
inc
test
insb
push
decb
lods
inc
or
mov
repz
xor
cld
jp
mov
aad
ljmp
mov
mov
inc
out
add
stc
add
push
daa
movsb
psrlq
mov
mov
and
and
inc
and
shll
negl
push
mov
fildl
mov
xchg
leave
loop
mov
adc
subl
aad
imul
movsl
test
rolb
xchg
mov
and
xor
xchg
ret
xor
mov
clc
mov
cmp
inc
pop
push
addr16
shrl
jl
mov
xchg
dec
fstps
dec
mov
mov
test
test
leave
inc
inc
jle
test
inc
lock
jo
arpl
and
sub
insl
in
mov
sub
iret
and
cwtl
pop
sbb
jnp
xchg
aam
sahf
add
outsl
push
or
pop
cmpsb
out
inc
xchg
dec
add
jl
cli
std
add
mov
mulb
dec
xor
jge
das
cmp
jae
in
inc
inc
mov
push
cld
mov
loope
cmp
cmp
and
mov
inc
into
stos
cmp
iret
in
and
or
and
fwait
and
repnz
cltd
pop
xorl
fisttps
nop
daa
lods
mov
inc
outsb
jbe
clc
hlt
lret
pusha
arpl
push
hlt
lahf
add
pop
int
xor
cmc
and
sbb
call
cld
inc
popa
mov
pop
jno
pop
lods
cmp
fimuls
test
push
stos
push
mov
aam
iret
arpl
dec
xchg
push
push
lods
cmpsl
hlt
inc
cld
test
jp
push
in
movaps
xor
add
dec
adc
sti
scas
push
mov
mov
mov
arpl
les
pushf
mov
icebp
in
cs
and
fcomps
in
add
pushf
lcall
paddsb
sbb
cs
mov
add
or
cmpb
jecxz
notl
pop
repz
lret
pop
jo
imul
adc
sahf
lea
fwait
add
shlb
sbb
jns
add
enter
push
int
adc
pop
add
fdecstp
dec
out
js
cmp
mov
fsubrp
push
or
and
cmpsl
xor
jae
xchg
cmp
imul
movsl
pop
adc
cmp
inc
xor
xor
and
sub
lods
or
divb
add
jecxz
or
sbb
mov
lret
or
imul
dec
jle
pop
imul
cmp
push
cltd
dec
cmp
mov
jecxz
incb
fs
xchg
mov
or
sub
push
scas
xchg
pusha
imul
jecxz
pushf
cmp
adc
jns
cmpsl
loopne
push
jmp
adc
sahf
test
pushl
fldt
inc
dec
cmpsl
pop
xor
sub
cmpsb
movsb
pusha
pop
jns
pop
cmpsb
add
sbb
repnz
or
sub
dec
shlb
push
fwait
clc
xor
jo
repz
pop
testl
outsb
cmc
push
or
and
push
imul
push
and
stos
scas
sub
cwtl
adc
push
mov
push
out
test
cmp
xor
es
inc
pop
cwtl
pop
jnp
mov
jno,pt
cmpsl
rcr
adc
es
pop
lods
sbb
hlt
adc
mov
sub
rcrl
ljmp
int3
pop
daa
sbb
sbb
mov
mov
dec
in
in
jmp
stc
or
push
push
test
xorb
cwtl
dec
sub
adc
xor
lret
pop
imul
clc
cmp
adc
jmp
daa
fistpll
push
scas
cld
scas
xchg
sbb
mov
push
mov
leave
inc
cs
mov
jecxz
jne
xchg
fimull
fisubl
popa
scas
or
sbb
xor
lcall
in
or
out
pop
cmpsl
stos
enter
pop
inc
or
aam
xchg
adc
lods
lods
shlb
nop
adc
lret
mov
inc
int
int3
je
mov
in
jb
cli
sub
aad
lcall
loop
mov
add
fmull
mov
in
pop
xchg
or
mov
jo
or
mov
xchg
xchg
xor
outsb
cvtps2pi
shl
xor
lea
rcl
je
aad
xchg
jnp
cli
leave
inc
and
mov
cmpsl
push
jbe
enter
lcall
sbb
xor
pop
and
pop
in
jle
in
mov
ja
lcall
int
jo
sar
cmpsl
bound
loopne
ljmp
xchg
pop
jl
pop
xchg
std
add
fadd
or
push
popl
mov
popa
aam
inc
push
pusha
xchg
rcrb
push
inc
loopne
mov
mov
loope
daa
aam
dec
xchg
xchg
xchg
loop
jbe
add
arpl
adc
xor
and
dec
call
push
clc
gs
shlb
sahf
pop
cmp
scas
loop
push
jb
call
dec
sub
jo
cld
mov
pop
in
push
dec
push
mov
sti
ja
xchg
dec
into
cmp
sbb
inc
adc
jecxz
iret
push
pop
and
xchg
mov
out
pop
les
je
lret
xlat
pop
in
xor
and
mov
sub
cmc
pop
loopne
scas
mov
pusha
fninit
push
or
xchg
mov
inc
inc
mov
ja
repz
aad
stc
loope
add
lret
cmp
adc
mov
jl
jbe
out
xor
icebp
jae
outsb
jb
rcr
sahf
subl
dec
push
fmuls
lds
pop
cld
pop
pop
ja
jo
xchg
push
jne
adcl
cld
push
shrl
bound
push
add
jle
pop
lea
loope
sub
daa
cmp
sbb
lcall
add
sub
cmpl
dec
or
test
mov
push
call
je
sub
adc
or
popa
lea
out
xlat
in
push
shlb
aas
jb,pn
add
cmp
push
jns
cli
jae
arpl
or
xchg
scas
cld
fisttps
shll
ds
add
fidivrs
loopne
or
sub
jl
clc
outsb
inc
and
mov
stos
or
fcompl
jmp
in
cmpsl
cmpsb
ds
mov
push
mov
aam
cmpsl
and
push
pop
pop
loope
fsts
fldenv
sub
scas
out
addr16
inc
jge
or
pop
pop
dec
sar
fmuls
test
xor
or
int
aam
mov
xlat
and
push
inc
testb
cmp
loop
repnz
repnz
das
mov
cmp
ret
jmp
jmp
mov
mov
shll
add
cmpsl
int3
mov
jmp
adcb
out
mov
sti
xor
jnp
out
or
xchg
sysexit
adc
stos
inc
xor
iret
inc
sbb
pop
sbb
mov
paddq
gs
mov
scas
push
ret
mov
addl
outsl
and
lods
cld
ljmp
xchg
bound
fdivl
mov
lods
inc
ds
sbb
out
ror
push
inc
sti
enter
pop
jns
jne
sbb
test
inc
rorl
lcall
dec
pop
ss
mov
mov
adc
mov
push
andl
int3
or
adc
mov
cmpsb
push
inc
add
mov
out
bound
iret
push
decl
push
daa
jne
ds
icebp
dec
jg
mov
and
add
push
xor
xor
cmp
mov
xor
loopne
jecxz
mov
orb
add
jg
sbb
mov
into
inc
aas
dec
inc
in
mov
cmp
push
jg
mov
mov
jbe
jmp
inc
enter
test
call
jbe
cmp
xchg
loop
mov
mov
gs
fnstsw
mov
mov
lods
fs
insb
cmpsb
shl
insl
mov
sbb
xor
aaa
push
shl
or
push
out
bound
jns
aaa
jb
push
les
stc
loope
push
add
movsb
xchg
add
mov
lret
mov
pop
xchg
lret
js
push
cmc
mov
or
lods
pop
sub
push
adc
dec
push
fwait
lret
hlt
pushf
xchg
push
mov
imul
pop
cwtl
cmp
pop
clc
and
push
inc
xchg
pop
mov
adc
pop
aas
jmp
or
xor
mov
jge
inc
push
ret
mov
daa
dec
je
jno
pop
lea
push
push
push
xor
fnstsw
outsl
sub
mov
gs
test
pushf
outsl
out
out
aaa
dec
out
mov
es
or
adc
and
stos
movsl
out
arpl
daa
push
push
insb
sahf
cmp
enter
push
pop
ss
jle
std
mov
arpl
ret
lahf
leave
int
mov
or
enter
push
iret
pop
nop
repz
lahf
stos
cmp
cwtl
aad
out
xchg
push
and
outsb
and
push
push
div
push
int3
sarl
sub
mov
push
cltd
adc
mov
testb
push
in
orb
mov
inc
mov
push
fwait
xor
mov
insl
add
xor
jb
add
mov
add
xchg
inc
loop
fsub
out
cmp
rcrl
mov
sub
pop
sbb
push
xchg
add
call
and
dec
pop
out
sbbb
cmpb
xor
dec
adc
mov
pop
repnz
jno
adcb
jmp
add
fidivrl
push
repz
adc
adc
add
mov
adc
fdivrl
pushf
and
push
pop
dec
les
inc
ja
lea
mov
adc
int3
dec
push
add
pop
sbb
ret
or
cmp
lret
xchg
cmp
lods
push
mov
or
sub
mov
push
mov
cmp
rorl
add
xchg
mov
repnz
es
sub
or
fcomps
mov
test
pop
push
add
mov
sub
mov
mov
rorb
push
mov
jge
popf
pop
fnsave
add
push
dec
int3
sub
popa
sbbb
lods
sub
push
mov
in
sahf
xchg
push
jl
adc
push
movsl
push
js
int
lret
iret
pusha
movsl
test
shr
enter
pop
jnp
enter
and
adc
push
or
jle
sbb
popa
pop
mov
out
and
cmp
jne
fwait
xor
or
mov
shlb
mov
sbb
fucomip
and
test
cmpsb
aaa
fstps
test
loope
mov
fisubrl
daa
fidivl
dec
dec
push
mov
adc
aad
aad
mov
stos
test
cmp
cmpsl
push
in
es
imul
aad
cmc
pop
test
sarb
bnd
imul
dec
cltd
rcll
cmp
test
sbb
div
dec
jecxz
xor
dec
lods
xchg
jmp
outsb
rcll
add
lret
jne
inc
sbb
pop
scas
mov
out
cmp
notl
and
push
adc
das
flds
mov
xor
clc
call
jo
scas
sbbl
movsb
rorb
iret
in
sub
js
mov
lods
xchg
decb
xchg
xchg
cmp
sbb
and
enter
das
stc
or
shl
rorb
xchg
roll
sub
or
pushf
sbb
ficomps
test
inc
push
jnp
cmc
shll
mov
ret
mov
test
je
jo
and
sub
lahf
cmpsl
sub
stos
push
movsb
xchg
fcoml
or
sbb
mov
push
inc
jecxz
sbb
jg
loope
testb
xor
insb
decb
repnz
in
pusha
cmp
mov
test
mov
enter
jno
ljmp
sarb
sti
cmp
xchg
push
xchg
mov
add
insb
xlat
and
loopne
mov
cwtl
and
ret
addr16
popf
mov
lea
mov
loope
div
mov
and
push
testl
pop
sbb
loop
adc
add
in
jne
sbb
xchg
lea
out
mov
ds
mov
mov
sbb
xor
addr16
push
es
aad
mov
pop
xchg
xchg
dec
mov
sbb
test
push
scas
loop
sti
fwait
loopne
mov
subb
mov
adc
aas
loopne
scas
push
ds
or
aaa
loope
xchg
orl
aas
ljmp
sbb
jle
cmp
jle
push
imul
mov
cmpsl
rclb
stos
movsl
enter
aad
pushw
fimull
mov
and
jb
je
loope
or
incl
pop
clts
in
mov
push
dec
sub
inc
xchg
leave
scas
inc
sub
repnz
mov
cmp
sub
mov
and
ret
sub
mov
dec
mov
sub
mov
sub
or
jecxz
or
sbb
and
pop
pop
push
pop
lcall
gs
pop
scas
into
stos
sub
fsubs
popf
gs
xchg
js
jbe
addr16
dec
loopne
bound
inc
lods
ljmp
sti
and
fisttpl
sbb
addr16
ror
test
cmpl
and
hlt
mov
jae
add
sahf
js
in
mov
cltd
or
push
pusha
nopl
sbb
add
in
mov
adc
fidivs
test
pop
lahf
xlat
fwait
xor
dec
loop
push
mov
ds
out
mov
or
pop
arpl
loope
jge
mov
mov
and
jg
adc
sbb
mov
pop
sahf
aad
filds
paddusw
mov
leave
push
xchg
add
scas
aad
cmpsl
fbld
out
jg
jecxz
inc
imulb
adc
sub
xchg
inc
call
lret
pop
shl
cwtl
test
rclb
mov
and
les
in
adc
es
ljmp
call
xchg
and
fcompl
add
pop
cmpsl
cmp
sbb
push
in
lods
cltd
sarb
pusha
or
inc
aad
dec
add
ss
adc
push
testb
sub
or
jns
shll
jp
pop
dec
mov
mov
jbe
aam
xchg
test
mov
inc
cmpb
adc
or
dec
sti
pop
inc
cmp
cwtl
inc
sbb
sub
pop
sbb
leave
aad
mov
mov
sub
push
dec
mov
push
pop
jp
adc
jg
cwtl
inc
loop
call
mov
enter
lahf
pusha
fcoml
push
push
mov
inc
movsl
cld
xor
lods
push
sahf
mov
cmpsl
and
loop
pusha
aam
leave
je
stos
push
movl
fadds
fisubs
orb
and
std
lret
call
cmc
ja
push
jge
rclb
xchg
cmp
inc
mov
lea
sbb
movsl
fwait
nop
imul
and
add
push
out
add
rolb
cmp
mov
scas
mov
and
scas
scas
jg
out
mov
test
jmp
pop
add
push
lret
iret
mov
jbe
hlt
jl
mov
xchg
and
fbstp
mov
cmpsb
mov
jmp
sbb
add
ret
pop
xor
stc
imul
mov
sub
push
and
push
inc
push
adc
fcmovu
jmp
out
das
stc
bsf
mov
js
or
sub
push
leave
insl
in
mov
wbinvd
jg
ljmp
push
push
pop
movntq
mov
ljmp
dec
jg
add
stos
mov
jmp
or
mov
bound
call
pop
loopne
pop
inc
and
repnz
xchg
cmp
add
test
xchg
data16
fwait
in
jbe
fstpt
mov
dec
arpl
loop
xchg
pusha
jno
mov
add
mov
mov
xchg
fwait
icebp
gs
or
push
mov
mov
clc
aam
aas
xchg
pop
add
add
cmpsl
adc
enter
xchg
and
add
daa
rcrl
cwtl
add
mov
out
neg
jbe
ror
mov
dec
pop
lret
cmp
mov
outsl
lahf
andps
push
push
ret
adc
loopne
sahf
xchg
div
test
mov
repnz
mov
add
loope
in
dec
push
mov
mov
lock
loope
sbb
dec
ja
push
dec
repz
fisttps
dec
inc
push
dec
pop
cmp
aam
fnstcw
imul
lret
push
sbb
cli
loop
mov
sbb
cmp
sub
aad
daa
sub
daa
bound
add
mov
cmp
push
mov
mov
movsl
inc
ja
ss
mov
push
or
and
idivl
add
icebp
loopne
notb
push
rorl
adc
cltd
icebp
xchg
arpl
mov
orl
jle
rcr
xor
dec
xchg
pop
inc
dec
cmp
test
add
pop
adc
ds
mov
adc
dec
pop
mov
es
in
cld
lret
idivl
dec
pushf
adc
xor
mov
mov
arpl
aam
mov
and
cmp
dec
cmpsb
sbb
sub
xor
push
jne
jmp
das
leave
push
enter
jns
jns
pop
ret
movsb
dec
lods
adc
movsl
leave
clc
out
fs
cmp
ds
notb
jo
push
clc
or
mov
or
mov
jecxz
push
jmp
xlat
out
and
lods
jmp
jbe
push
mov
or
sub
cmp
hlt
push
mov
mov
and
mov
inc
mov
or
dec
adc
iret
cmp
mov
testb
out
cltd
in
fwait
dec
push
outsl
in
mov
pop
call
sti
mov
pushf
fdivrl
add
insl
je
adc
sub
outsl
sub
cmp
mov
daa
xor
aam
aad
jg
mov
mov
xor
leave
into
mov
pop
jmp
cmp
or
jo
and
fs
xchg
js
sarb
sub
fbld
test
cmp
fldcw
pop
loopne
out
sbb
mov
jno
insb
jns
out
pop
nop
mov
and
xor
stos
sub
sarb
pop
push
scas
cmpsl
aas
push
xlat
pop
inc
mov
sub
ljmp
inc
repnz
dec
sub
dec
insl
jmp
cmpsb
ret
pop
jb
cld
gs
mov
stos
jecxz
dec
and
mov
repnz
mov
dec
insl
aas
inc
pop
hlt
int
or
mov
and
pop
rol
mov
cld
mov
sbb
pop
ficoms
iret
rcl
loope
fiaddl
nop
out
daa
shr
adc
pop
rcr
in
dec
cmp
or
arpl
cs
in
enter
and
mov
jns
or
imul
push
sub
or
xor
loope
in
rcrl
pop
jns
in
xchg
jnp
ja
cld
les
sbb
dec
xchg
adc
adc
adcb
add
xchg
mov
dec
or
shlb
shrb
out
lea
cmpsl
sbb
push
sahf
sbb
xchg
add
cs
cmp
cld
inc
inc
mov
mov
popa
cld
cmc
mov
xor
mov
pop
push
rorl
add
test
fdivs
scas
and
and
cmp
jl
jmp
xchg
cwtl
and
fwait
bound
add
fstp
inc
or
ret
jae
fnstsw
test
clc
ficomps
fists
rolb
dec
pop
das
fcmovnbe
mov
fs
ret
test
les
lods
fdivr
fcompl
dec
add
int
iret
mov
bnd
hlt
pop
cmp
test
xor
cmpsl
cmp
xchg
sbb
aad
daa
mov
jns
cld
imul
sti
aam
push
mov
cmc
loopne
fldt
test
cmp
pusha
xchg
or
xlat
stos
gs
leave
pushf
jp
jge
push
daa
les
loope
pop
out
inc
dec
nop
test
sbb
arpl
push
xchg
push
adc
mov
xchg
test
sbb
aam
test
sbb
out
arpl
lret
push
mov
bound
mov
push
cld
sbbl
outsl
mov
ret
push
pop
clc
icebp
xor
inc
cwtl
sbbl
das
sahf
cld
xor
push
cmpsb
inc
fcomps
jnp
mov
sub
pop
cwtl
xchg
add
pop
ret
repnz
jo
loop
cld
int3
nop
lahf
iret
cld
hlt
aas
int3
out
jge
sbb
popf
hlt
inc
movsl
inc
add
cmpsb
fcmovnbe
shll
and
jno
lods
mov
lds
dec
pushf
loope
fisubrl
dec
ja
push
cli
mov
mov
and
dec
jne
xchg
mov
push
xchg
pusha
dec
adc
pop
xchg
lret
jle
or
or
xchg
jb
shl
rolb
add
lods
popf
sti
xchg
sahf
cmpsl
hlt
stc
inc
adc
movsl
jno
fsubs
fs
cltd
mov
inc
cmp
dec
jno
test
fucom
pop
in
inc
mov
out
dec
mov
inc
loop
rorb
or
scas
jns
pop
sub
shrb
subb
lock
mov
xchg
cs
sub
out
xor
loop
mov
shrb
and
cmp
xor
adc
adc
and
pop
mov
mov
mov
jg
cltd
jne
push
add
aas
stos
aas
pop
or
dec
and
sti
movsb
mov
call
push
dec
inc
push
jp
mov
add
fs
cmc
cltd
push
mov
jle
idivl
insl
test
mov
adc
les
aas
mov
jne
mov
pop
ds
scas
bound
insb
add
std
cli
imul
cmpb
divl
imul
fcomi
pop
das
popf
fnstenv
or
dec
jmp
aam
and
dec
fimuls
add
mov
jbe
dec
push
xchg
adc
lods
lret
and
pop
cmp
mov
xchg
test
xchg
or
jge
repz
mov
jmp
pop
ds
pop
and
mov
out
testl
ror
data16
cmpsb
imul
mov
mov
mov
mov
push
fsts
or
clc
inc
xor
mov
push
or
xchg
lods
sub
or
xor
loop
cmpsb
dec
dec
mov
jns
mov
int
cmc
adc
les
pop
jmp
cltd
or
repz
inc
fcomip
mov
lock
pop
test
dec
xor
fcomps
mov
rolb
nop
push
ljmp
and
aad
xchg
cmp
subl
and
push
xor
loopne
clc
adc
jnp
jnp
dec
inc
stc
jne
out
cmp
push
sub
mov
inc
in
lret
aad
push
sub
xchg
lret
xchg
imul
incb
mov
cltd
in
dec
xchg
dec
jbe
loop
jo
mov
insb
xchg
and
xlat
test
std
mov
adc
xor
in
and
jmp
adcb
xor
das
dec
int
in
outsb
adc
inc
test
pop
sbb
call
and
dec
cmp
fimull
mov
fcomps
add
gs
arpl
cmp
or
sbb
icebp
jmp
mov
icebp
sub
push
fcoms
mov
mov
lods
int3
mov
push
and
int
push
test
sbb
jns
int
inc
ds
cwtl
mov
jne
ds
or
cmp
test
aad
popa
push
dec
dec
inc
fwait
cmp
pop
cs
sub
std
cmp
adc
mov
xchg
or
loopne
lahf
test
dec
insb
mov
jecxz
mov
inc
icebp
leave
dec
pop
fimull
sahf
repnz
sub
clc
xor
ret
cwtl
mov
xchg
add
dec
stc
insb
dec
pop
fdivrl
cmp
cmovl
data16
lea
je
jge
add
inc
sbb
push
dec
mov
repz
hlt
sub
xchg
dec
call
push
pusha
or
insb
test
out
out
xor
xchg
hlt
iret
in
stos
dec
and
push
sbb
or
inc
in
std
scas
ja
mov
lods
jp
push
mov
mov
or
mov
scas
cmp
addr16
data16
xchg
inc
mov
mov
insl
push
mov
movsb
push
cmp
test
sbb
ret
pop
pop
and
mov
mov
or
pusha
mov
nop
lock
xor
fs
adc
mov
fcmovnbe
fsubrs
sub
inc
pushl
pop
test
lods
es
mov
outsl
jo
sub
bound
or
cwtl
enter
lcall
bound
out
movsb
lea
lea
repnz
jl
fs
clc
stc
adc
popf
or
sub
rcrl
fnstsw
adc
jns
pop
outsl
and
pop
jg
testb
dec
scas
cmp
inc
mov
test
cmp
mov
shrb
mov
test
test
xchg
jp
cwtl
sti
xor
inc
sbb
add
adc
lods
cmp
adcl
and
cmp
out
cmovbe
pushf
inc
add
pop
jmp
cmp
mov
movsb
loop
outsb
cld
xchg
xchg
or
ja
mov
rcrb
xor
mov
es
sbb
rorb
inc
fisubs
dec
hlt
je
sbbb
cmpsb
dec
adc
xchg
jp
fbstp
idivl
mov
mov
ss
add
insl
mov
and
idivl
aaa
xor
outsl
jp
sbbb
jne
fidivl
xchg
sbb
pop
push
jae
mov
inc
aam
popf
iret
cld
pop
fisubl
mov
call
repnz
mov
jbe
in
bound
adc
int
inc
dec
adc
into
xchg
push
push
sub
dec
push
mov
imul
push
cli
retw
push
mov
inc
in
in
fstp
incl
stos
roll
sbb
fldt
sbbl
test
mov
cmpsl
mov
sbb
int3
bound
loopne
adc
sub
pop
pop
adc
es
lea
cmp
lret
push
loop
pop
fcoms
shll
test
mov
fiadds
sti
inc
ja
add
btsl
insb
and
mov
push
jecxz
and
jle
xchg
mov
jecxz
mov
mov
scas
or
je
subl
inc
cltd
xchg
add
mov
lock
mov
add
stc
js
aaa
stc
mov
lcall
enter
cwtl
test
pop
lret
mov
cmp
cmp
sub
mov
icebp
repz
dec
push
addl
xlat
xorl
xchg
add
repz
mov
push
jge
int3
inc
testl
cwtl
pop
add
aam
xor
inc
fcompl
out
dec
xlat
cmp
mov
sub
add
addb
cmp
xor
nop
xchg
scas
hlt
enter
loope
or
lret
push
fcompl
sbb
pushf
je
xor
mov
sbb
movsl
push
ljmp
imul
mov
cmp
call
xor
xchg
stos
jge
sub
xor
jno
xor
dec
sub
out
jb
jbe
insl
pop
xor
pop
mov
or
popf
sti
dec
stos
xor
adc
cmp
dec
xchg
pop
lcall
adc
adc
pusha
jae
in
stc
mov
lret
mov
cmp
or
icebp
aas
icebp
clc
push
dec
or
inc
dec
iret
dec
aad
cmp
xchg
cmp
fiadds
lods
xchg
repnz
pop
rorl
sub
js
inc
cltd
divb
xor
mov
mov
out
sahf
pop
daa
pop
mov
xchg
xchg
mov
arpl
inc
cmp
cmc
stos
or
inc
xlat
dec
adc
fldenv
push
or
xchg
repz
mov
or
test
lahf
movsl
mov
dec
push
push
jmp
adc
push
lods
in
in
cmpsb
lds
mov
push
fcomps
dec
enter
fwait
inc
fbld
out
fiadds
imul
icebp
in
mov
lock
jae
shll
mov
or
gs
rcrl
inc
ret
cmp
sub
inc
stos
in
xchg
and
loop
xor
incb
or
sub
and
sbb
repnz
jo
adc
imul
sbb
xchg
sub
lret
or
add
xchg
leave
add
xor
daa
and
loopne
pop
add
sub
sub
je
scas
cmpsb
out
shll
pop
mov
push
jle
gs
in
and
call
inc
test
mov
pop
cmp
nop
pop
lock
xchg
dec
insl
push
mov
mov
filds
xor
in
inc
loop
rcrl
lret
clc
repnz
mov
cld
lahf
adc
cmpsl
addr16
mov
jbe
pop
sub
mov
lahf
test
arpl
ds
inc
xchg
scas
mov
faddl
cmp
pop
xor
nop
std
cmc
push
or
shlb
in
cmp
lock
cmp
inc
jo
inc
lock
cmp
mov
arpl
add
mulb
ss
sbb
loope
adc
or
imul
mov
leave
mov
xor
pop
xor
repnz
loope
or
and
xor
sbb
pop
inc
xchg
jno
aas
jno
and
sbb
sub
imulb
xor
or
push
imul
dec
or
shll
ljmp
scas
push
les
mov
popa
mov
mov
add
cli
xchg
imul
sahf
push
aaa
addb
adc
jne
pop
clc
xor
pusha
mov
repz
sbb
mov
and
ds
or
inc
xor
sbb
mov
ja
jo
pminub
xor
lock
jae
les
xor
pusha
push
les
fdivrs
xchg
in
push
out
nop
lret
das
jns
push
es
add
cmp
sub
xchg
arpl
and
dec
jnp
inc
jo
xchg
mov
and
mov
cmpsl
mov
sbb
mov
xchg
pop
lret
push
mov
loope
mov
stos
daa
add
lret
pop
les
mov
in
stos
repz
shl
rclb
fbstp
mov
repz
clc
enter
pushf
push
stos
jb
mov
pop
mov
mov
add
std
xor
cltd
dec
mov
cmp
cmp
push
imul
inc
aam
addr16
mov
test
or
mov
ror
xchg
fnstenv
inc
fnstcw
movsb
push
in
cmpsb
xchg
xor
pop
push
scas
mov
jmp
push
sub
and
add
sbb
test
insb
mov
and
orl
cmpsl
insl
stos
sarb
mov
or
xchg
clc
adc
xchg
aad
and
sbb
popf
or
mov
fmull
fldenv
aas
mov
pusha
dec
inc
stos
mov
adc
adc
loopne
lods
or
cmp
ret
and
movsl
jnp
xor
push
jge
cmp
xchg
push
mov
mov
in
xchg
adc
imul
inc
push
nop
jg
test
mov
push
push
jg
xor
sti
sbb
subb
mov
jb
adc
pop
lea
push
popf
push
cmp
roll
xchg
imul
repnz
out
lods
shl
outsl
xor
push
xor
xor
dec
das
pop
cmp
out
push
push
cmpsb
scas
or
loop
pop
lea
cwtl
mov
popf
add
inc
pop
into
push
dec
push
das
adc
mov
cld
jae
sub
fwait
shlb
jns
repnz
popl
sub
dec
jbe
push
into
jp
test
and
fnstenv
iret
xor
cmp
xchg
rcll
test
xor
sub
lock
outsl
sbb
pop
cmp
test
cmpsb
inc
push
lods
rcll
fldln2
insb
xchg
js
icebp
jns
xchg
popa
mov
sub
rcrl
jle
pcmpgtw
daa
ror
nop
xchg
mov
sti
lahf
js
lods
inc
push
push
flds
mov
in
xor
cwtl
jg
sub
and
xchg
mov
es
testb
rcrl
into
push
xchg
mov
sub
mov
repz
push
mov
repnz
fbld
dec
int
or
fucomip
loope
mov
inc
or
push
insb
or
jo
dec
add
mov
cmpsb
test
test
adc
push
pop
bound
add
pop
dec
push
cmp
push
xchg
jge
mov
es
cs
es
sbb
cld
jmp
lods
dec
cltd
xchg
jo
and
addr16
notb
sub
sahf
push
mov
cwtl
dec
jge
sbb
cmp
fildll
cmp
and
adc
fsubs
hlt
jp
push
adc
xchg
jecxz
or
mov
addl
mov
sbb
adc
mov
in
or
es
mov
lock
pop
fstpl
sahf
imul
call
jecxz
dec
shl
pop
push
pop
and
add
mov
fbstp
push
adc
xchg
ret
jns
sbb
mov
adc
dec
loopne
call
mov
sub
or
cld
or
push
inc
jl
or
incb
scas
dec
into
call
pushw
or
pop
lods
hlt
std
lcall
inc
push
in
pop
pop
enter
cmp
push
mov
jle
push
cmp
sbb
mov
test
push
dec
fstl
cmc
outsb
adc
and
xor
mov
dec
adc
pushf
cli
or
cwtl
insb
lahf
sub
xor
div
push
loope
cmc
lods
out
loop
sub
mov
ret
imul
jge
jg
jb
dec
pop
inc
test
loope
loopne
mov
stos
or
inc
into
jmp
hlt
sub
jle
jbe
lahf
incl
repz
add
aam
mov
cmp
xor
aas
jb
pop
jecxz
add
or
xchg
sub
sbbb
bound
jae
jne
xor
inc
mov
stos
faddp
je
and
xor
sbbl
das
loopne
arpl
or
adc
movsl
sbb
sbb
xchg
xchg
test
in
mov
sbb
sahf
lret
adcl
adc
sbb
lods
sti
push
cli
test
or
push
stos
adc
dec
mov
pop
int
stc
or
ret
or
fidivrl
ficompl
push
and
inc
mov
rorl
and
inc
das
push
lock
jmp
scas
xor
push
and
or
imul
mov
mov
rorl
xchg
aam
les
arpl
mov
clc
sahf
repnz
mov
xchg
mov
mov
imul
cmp
in
pop
sbb
hlt
jp
xchg
mov
das
lcall
sbb
es
xorl
cli
das
jl
dec
bound
call
inc
cmc
imul
jne
arpl
mov
mov
mov
cmovp
pop
pop
out
adc
push
rcl
rolb
xor
iret
rolb
dec
movsb
xor
leave
push
and
out
or
xchg
lret
pop
xchg
mov
imul
jle
mov
imul
dec
int
mov
inc
pop
sub
nop
insl
in
and
call
xor
sbb
or
shl
rol
xchg
mov
psubd
adc
mov
pop
lds
lret
mov
shl
and
movsl
gs
je
add
adc
push
loopne
mov
xchg
out
ss
sbb
push
pop
out
mov
int3
mov
fs
test
mov
loope
iret
rorl
cli
sub
imul
lret
mov
fldt
xlat
push
push
addr16
adc
pop
sbb
mov
mov
dec
insl
gs
push
inc
mov
ljmp
aam
sbb
mov
mov
insl
adc
rclb
lret
cwtl
adc
addr16
pop
push
jg
xor
mov
mov
enter
adc
pop
push
add
mov
mov
mov
out
fwait
dec
pop
or
arpl
inc
dec
sub
pop
and
enter
inc
hlt
jg
adc
jmp
mov
nop
cmp
das
sub
pop
mov
adc
into
loop
pop
sub
fsts
xor
loop
test
sub
dec
pop
jg
push
jb
ret
mov
mov
lahf
fsts
jle
mov
dec
sub
push
shl
pop
pop
movsl
mov
daa
daa
add
cli
enter
arpl
jb
pop
int3
and
daa
jnp
inc
xchg
aad
push
repz
sti
xor
or
dec
mov
cli
daa
push
lcall
cmpsb
pop
ljmp
aaa
and
dec
mov
sub
jbe
rcrl
sbb
add
mov
add
jo
fbld
jns
adc
mov
xchg
movsb
les
mov
aaa
inc
mov
mov
add
xchg
imul
add
lods
call
popf
loope
ret
push
push
decl
pop
mov
pop
dec
sub
in
jle
pop
cmp
das
pop
sti
sbb
push
push
dec
icebp
mov
mov
int3
pushf
xchg
adc
insl
jno
in
dec
jge
in
push
jo
scas
cli
push
sub
imul
push
jb
rcr
das
and
or
xor
push
rorb
sahf
cmpsb
mov
ret
mov
faddl
xor
sub
pop
sub
inc
lcall
psrlq
mov
les
mov
cmp
mov
adc
in
mov
inc
outsl
ret
jo
lds
roll
insb
add
jmp
jge
lds
fists
mov
mov
pop
jb
les
xchg
mov
inc
push
cld
leave
ss
pop
rorl
xchg
int
dec
xchg
xchg
into
fcomip
int
dec
or
popf
das
add
jecxz
arpl
call
mov
add
or
mov
fnstsw
mov
push
xchg
xchg
sub
lock
mov
mov
es
jnp
sub
pop
jecxz
inc
in
outsb
jle
mov
mov
cmpsl
adc
rcr
xchg
mov
mov
cmp
pop
dec
out
jecxz
and
lods
pop
mov
add
xchg
add
dec
test
repnz
push
xchg
mov
imul
jge
fstl
pop
dec
fwait
inc
sbb
jns
cmovne
cmp
fwait
xchg
ror
add
aaa
in
insb
adc
push
pop
or
inc
call
sti
sbb
fdivr
loope
mov
jns
jb
mov
push
mov
cmp
pop
ret
mov
hlt
cli
xorb
mov
inc
sbb
lods
pop
xor
dec
mov
mov
cmp
cmp
and
aam
cmpsb
mov
bound
pop
add
xor
sbb
adc
mov
movsl
cwtl
dec
pop
adc
int3
insl
loopne
out
add
push
enter
mov
adc
dec
mov
je
sahf
sbb
rcrl
push
cmp
sub
adc
push
cmc
daa
push
pop
andl
loopne
pushf
dec
rorl
push
repz
shlb
loope
inc
push
push
mov
add
ljmp
rol
cmc
sar
ds
xchg
push
fists
xchg
sarl
mov
adc
mov
or
movsb
inc
rcl
mov
xchg
es
ficomps
jb
push
mov
fs
push
cmp
test
or
inc
test
inc
roll
mov
adc
sub
mov
lret
push
cmp
rorl
add
hlt
daa
add
push
pop
jnp
xchg
movaps
lods
push
xchg
inc
lret
and
mov
aas
fistl
in
xor
xor
mul
sbb
add
xor
mov
push
fnsave
xchg
inc
xchg
gs
xor
mov
movsb
and
mov
xor
in
in
cmp
rorb
cmp
push
gs
cmp
fldenv
or
cmp
aaa
or
cmp
dec
ss
push
lds
push
push
mov
iret
daa
test
mov
dec
shlb
sub
fsubrl
popa
imul
gs
add
pop
inc
int
pop
add
or
pop
imul
jmp
mov
mov
mov
xor
std
mov
sub
out
popa
add
dec
dec
lcall
xchg
in
insl
icebp
jns
push
scas
std
mov
popa
xchg
jno
add
fldl
movsl
out
add
ljmp
fnsave
stos
outsl
jbe
js
xrelease
std
sbb
xchg
stos
and
cld
mov
bound
je
fsubrl
hlt
jo
dec
movsl
adc
inc
xchg
pop
push
or
mov
mov
jo
arpl
lock
mov
add
cmp
xor
mov
sbb
add
ret
orb
stos
xchg
hlt
cmc
mov
mov
fildl
lahf
cwtl
vunpckhps
xchg
or
stc
mov
imul
test
inc
xor
cmp
jp
cmp
sub
movsb
and
movsb
dec
dec
scas
movsb
mov
in
out
adc
imul
addl
aas
lcall
es
xchg
ja
jmp
add
ret
push
pop
xchg
lea
and
test
xor
cli
fwait
jle
stc
out
and
inc
add
xchg
inc
sti
xchg
cmp
mov
sub
ss
fwait
add
lods
jle
sub
into
loope
adc
xor
dec
cmpsb
push
dec
int3
jge
neg
mov
leave
inc
dec
push
fldenv
nop
add
mov
and
dec
loope
sub
fsubp
leave
addr16
addr16
enter
add
add
and
cmpsb
jno
pop
les
aad
xchg
mov
pop
int3
pop
repnz
and
outsb
xor
sahf
lcall
jmp
cld
repnz
test
push
pop
mov
mov
jne
das
data16
mov
test
out
test
fiadds
cli
sbb
and
sub
fistps
xor
outsb
xchg
inc
pop
mov
clc
add
enter
out
or
xchg
fldenv
pop
sub
clc
sub
cli
aaa
mov
mov
subb
into
lods
add
sbb
mov
cmpb
jle
mov
sti
push
cmc
rclb
mov
jmp
sarb
push
dec
popa
xor
or
decb
and
and
sub
test
mov
lcall
aam
push
cmp
inc
sub
or
int
ret
test
mov
and
xlat
push
xchg
sbb
cltd
jae
xchg
test
popa
shlb
mov
pop
push
clc
out
repnz
ror
aas
cmp
stc
cltd
test
lds
stc
cltd
enter
sub
jmp
xor
fisubrs
mov
xlat
or
cltd
add
sbbb
mov
xchg
imul
ljmp
and
imull
scas
mov
or
sub
dec
mov
mov
inc
xchg
jnp
and
ret
test
and
sub
jg
add
jb
out
or
movsl
imul
movsl
or
lcall
test
sbb
stc
cmp
inc
movsl
xor
cmp
fcomps
insb
mov
push
popf
cmp
sub
pop
cld
mov
inc
clc
ss
push
sbb
adc
movsb
jae
shl
rcrb
into
dec
lods
arpl
sbb
cld
cli
cmp
mov
jbe
cs
pop
add
ret
sbb
mov
mov
test
ror
xor
fs
and
icebp
pop
insb
push
pop
enter
sub
jle
jbe
fbld
je
mov
cmp
dec
subl
lock
and
scas
dec
mov
sbb
push
jp
call
mov
leave
and
ljmp
je
mov
jns
xchg
cli
lds
test
mov
dec
aad
mov
dec
add
clc
rol
inc
inc
mov
adc
gs
lahf
mov
dec
cmp
pop
add
mov
mov
mov
or
cmp
xchg
and
adc
hlt
scas
fs
inc
stos
rcr
outsb
xor
mov
push
std
mov
or
shlb
sub
test
fiaddl
outsl
jecxz
std
ljmp
adc
mov
dec
mov
cmp
inc
mov
mov
out
jne
addr16
and
dec
push
mov
mov
lock
stos
rcrb
movsl
jg
mov
imul
fs
mov
xchg
inc
repnz
test
xchg
sbbb
loope
adc
pmaddwd
into
jmp
test
shrb
mov
not
adc
mov
aam
sub
jg
sub
pusha
push
mov
sbb
into
aaa
hlt
add
push
mov
mov
test
out
dec
fmull
push
rcrb
cmp
mov
inc
fldl2t
pop
sub
les
icebp
push
stos
lret
popa
push
sub
adc
fwait
iret
add
or
or
cwtl
pop
pushl
and
and
mov
mov
addl
jle
jle
shr
aam
cmp
mov
dec
lods
into
pop
enter
rclb
in
out
in
and
in
and
mov
iret
cwtl
outsl
repnz
pop
push
mov
out
fiadds
inc
or
sbb
inc
loop
aaa
xlat
pop
cli
or
pop
fimull
and
js
fnstsw
cltd
jle
incl
fsubs
inc
adc
orb
lahf
das
int3
push
and
pop
xor
stos
cltd
jecxz
push
mov
ret
adc
bound
xor
mov
cli
sbb
xor
sub
sub
adc
adc
cmp
push
lret
sbb
push
mov
addr16
mov
xor
out
or
adc
sbb
jmp
xchg
mov
test
jbe
ret
ljmp
pop
outsb
mov
mov
mov
repz
jb
push
adc
cmpsl
inc
sbb
mov
ja
popa
inc
loopne
daa
jg
int3
push
out
cmp
and
sbb
xorl
ja
and
cmp
push
jo,pn
jg
es
push
jmp
pop
outsl
push
shr
mul
dec
lods
popf
lcall
or
fdivrs
inc
xchg
xchg
sbb
mov
rorl
dec
sub
or
xor
mov
sbbb
xor
push
adc
push
pushl
bswap
fwait
daa
adc
xlat
jno
andb
in
shr
in
sbb
int
jo
scas
cmp
jns
sub
push
jl
jg
dec
jmp
stos
sbb
dec
inc
sub
pushf
xor
js
adc
outsb
fdivrl
leave
and
push
adc
sub
test
adc
sbb
pushf
jecxz
aas
mov
dec
inc
pop
dec
mov
pop
das
cltd
lahf
stc
inc
pusha
je
test
push
mov
fwait
ret
xchg
lcall
jp
mov
lret
mov
fnstenv
fdivr
sub
add
mov
push
jnp
ret
int
mov
movsl
adc
mov
mov
and
movsb
pop
cmpsl
xorl
mov
shrl
loopne
dec
outsb
dec
xchg
fldcw
lgs
imul
dec
icebp
push
and
out
in
mov
js
in
das
enter
dec
rorl
jb
in
cmp
or
scas
xsha256
cmpsb
push
add
add
movsl
push
sbb
dec
es
mov
xor
push
dec
lods
xchg
push
shlb
scas
add
inc
push
ja
sub
cmpsl
mov
cmpsb
xchg
and
add
xor
add
push
sub
imul
mov
aam
lret
divl
leave
lock
mov
push
aas
mov
in
es
std
addl
movsb
mov
mov
jl
sub
das
pop
nop
cmovp
mov
jo
insb
call
subl
push
rolb
xchg
icebp
mov
push
fstl
aad
pop
in
outsl
gs
xchg
push
popf
or
adc
and
xchg
mov
jne
sub
push
and
dec
inc
mov
xchg
out
xor
stos
xchg
cmc
repz
mov
in
fwait
in
aad
movsb
jbe
mov
in
and
fs
in
andb
adc
pop
jne
push
ret
das
mov
pop
mov
cmpl
cld
lea
std
call
mov
push
cld
in
sbb
arpl
adc
cld
mov
ret
sbb
pop
sahf
inc
mov
pop
mov
xor
int
iret
mov
jns
aas
pop
push
and
pop
pop
push
pop
sub
repz
add
pop
mov
jno
std
fwait
and
or
icebp
mov
inc
add
arpl
and
push
adc
fdivrs
mov
scas
push
cmpsb
out
xor
cmc
push
xchg
ds
js
mov
cmpsb
sbb
or
ja
xchg
cmc
lods
and
js
push
pop
mov
inc
pop
add
cmp
sarb
mov
in
add
sbbb
notl
inc
or
xor
mov
inc
jnp
and
jle
inc
sub
or
ret
add
xchg
lret
lods
pushl
push
cld
jne
bound
imul
push
mov
mov
add
mov
std
aad
out
pop
push
imulb
and
adc
push
bound
outsb
adc
sbb
xchg
push
mov
ss
mov
outsl
roll
push
sub
jmp
repnz
lret
mov
aam
ret
test
dec
inc
mov
inc
movups
cmp
leave
adc
sub
adc
icebp
adc
mov
inc
cltd
int
mov
xchg
sbb
test
push
dec
mov
xor
ret
hlt
sbb
add
jb
stos
or
cwtl
jb
mov
mov
push
mov
jae
andb
mov
mov
outsl
cmpsb
pushf
ds
sahf
inc
iret
shll
adc
loopne
jne
lahf
xchg
nop
or
fldl
cltd
sbbl
xchg
sub
in
call
ljmp
mov
dec
sti
pusha
movsb
xchg
bound
dec
dec
scas
mov
popa
push
sub
inc
stos
cmp
and
cwtl
cmp
dec
inc
push
mov
add
cmp
inc
mov
fwait
dec
imull
mov
cmpsb
inc
bnd
fstl
adc
nop
cwtl
jnp
enter
xchg
add
movsb
mov
shlb
lods
aam
pop
and
clc
lods
sub
movsl
mov
add
rcl
es
sub
xor
sahf
mov
adc
addr16
popa
fdivs
movsl
cs
in
add
in
sbb
in
in
fxch
jle
mov
cmp
out
or
push
rcrb
jg
inc
cwtl
xchg
add
add
push
xor
sub
lahf
xchg
fldl
xchg
pop
ja
add
cmpsb
ret
and
push
jae
dec
fdivr
mov
popf
mov
cmp
into
fstl
fimuls
movsl
pop
add
mov
mov
outsb
adcl
shr
stc
adc
sub
loope
fistpl
add
mov
xchg
ss
mov
shll
test
and
adc
sub
xchg
push
mov
xchg
hlt
mov
inc
sbb
repz
xlat
push
xchg
mov
je
mov
push
scas
scas
mov
mov
xor
aam
push
cs
adc
push
call
dec
adc
aad
mov
inc
ret
pop
push
lahf
push
inc
test
mov
or
scas
popf
leave
lock
mov
mov
push
xchg
mov
int
int3
add
sub
sahf
jne
jl
and
lds
xorl
mov
push
xchg
push
loop
inc
cmp
mov
add
out
test
cmp
mov
js
stc
sbb
fsubl
repnz
sbb
mov
lahf
out
jecxz
loop
insl
cmp
adcb
fcompl
icebp
enter
dec
es
scas
inc
cld
subl
mov
mov
mov
jo
sub
mov
mov
test
mov
jmp
dec
mov
sbbb
out
ffree
xor
and
jns
test
sub
jg
mov
and
es
lods
fwait
cmp
lret
and
popf
les
test
jb
lahf
loopne
pop
sub
repnz
cmpsl
add
les
dec
add
repz
cs
dec
mov
lret
mov
mov
int3
test
sbb
jno
fxch
sbb
enter
push
xor
dec
mov
test
push
adc
and
adc
loopne
push
subl
or
adc
pushf
push
inc
xchg
push
xor
loopne
mov
pushf
pushf
ficomps
inc
repnz
mov
aas
sbb
or
std
insl
and
ljmp
dec
cmp
cmp
mov
in
movsl
dec
in
sbb
outsb
mov
jo
je
inc
adc
push
sbb
adc
and
mov
dec
lds
inc
flds
loopne
pop
cld
shrb
mov
mov
popf
mov
jo
pop
in
cs
adc
pop
int3
jp
push
add
xorl
jno
dec
out
pop
lret
repnz
cmc
or
dec
mov
inc
sahf
nop
int3
mov
insb
popf
push
in
cmp
lahf
mov
jnp
jp
xor
bound
std
insl
sar
je
jge
sub
loopne
orb
mov
pop
lea
fisubl
popa
outsl
mov
loopne
add
push
hlt
add
mov
mov
out
js
loope
xor
adc
cwtl
inc
xchg
jae
repnz
clc
es
push
and
out
cmpsl
cmp
and
aas
or
das
in
rorl
jge
rorb
fidivs
pop
sbb
or
hlt
pusha
xor
out
xchg
lcall
or
nop
stos
ficoms
nop
loop
in
mov
push
sahf
fldln2
dec
pop
xor
pop
imul
nop
int3
test
adc
fwait
test
mov
xchg
jl
xor
and
movsb
cmc
mov
out
push
insl
popa
xor
je
data16
mov
mov
shlb
data16
iret
iret
mov
movsb
cmpsl
lcall
push
xchg
pop
pop
dec
loop
inc
xchg
adc
jle
nop
and
cs
es
bound
outsl
mov
in
addl
rol
xchg
sub
xlat
adc
int
clc
add
pop
cmp
sahf
frstor
aad
inc
js
rcrb
inc
push
inc
or
adc
aas
testb
mov
sub
inc
iret
outsb
jbe
add
and
dec
int
sub
pop
int
push
push
pop
lret
xor
push
stos
or
popa
imul
mov
repnz
sbb
clc
ja
ret
mov
shlb
sub
mov
cmp
mov
leave
inc
pop
jg
out
fwait
add
popa
or
sbb
dec
pusha
mov
xor
push
rorl
in
out
out
sti
test
int3
pop
mov
cmpsl
pavgw
es
and
das
fs
sub
in
in
lds
and
jge
decl
je
decl
adc
pop
mov
cmp
lret
xchg
xor
mov
dec
sub
pop
add
enter
fisubs
sahf
xor
xchg
cmp
popa
enter
mov
and
in
popf
pop
fidivrl
mov
mov
in
in
out
scas
stc
scas
pop
out
and
es
lcall
cltd
jne
aad
imul
mov
ret
roll
add
add
in
sbb
jecxz
mov
fildll
fstpl
mov
xor
jo
mov
and
inc
fwait
lods
insb
mov
pop
in
iret
fcoml
pop
or
call
pushf
aaa
dec
push
fimull
sbb
fstpt
push
scas
and
adc
inc
orb
daa
addl
inc
dec
push
cltd
ret
dec
adc
aad
fsubl
jne
or
jae
imul
mov
sbb
mov
xor
aas
lea
xor
pop
jae
xor
jae
nop
adc
les
addb
stos
ljmp
add
mov
mov
repnz
mov
adc
mov
std
push
idivl
addr16
addr16
or
push
adc
imul
cmpsb
xchg
inc
dec
in
test
ret
int
popf
push
xchg
and
add
loopne
aaa
cmc
pop
mov
cmc
jne
add
loope
mov
push
jl
dec
popf
jge
ljmp
out
adc
inc
push
daa
dec
aad
add
jmp
orb
dec
jp
pop
cmp
outsb
ja
mov
sbb
jmp
fwait
pop
js
sub
push
jecxz
push
fs
jns
stos
ret
loop
push
add
pop
push
xchg
movb
xor
popf
ss
adc
leave
inc
rolb
jne
xchg
out
in
les
mov
mov
test
repnz
xorl
stos
xor
dec
js
pop
and
jnp
repz
mov
movsl
cs
leave
sbb
mov
xchg
ja
out
ss
fwait
pop
out
cmpsb
test
push
ret
mov
aas
cmpsl
lods
inc
movsl
push
or
loopne
jecxz
sbb
fistps
or
inc
fcomps
divb
jo
outsl
push
movsl
std
xlat
ret
sbb
push
into
std
sub
and
orl
repz
cld
pop
cli
jl
fidivrs
imul
nop
mov
push
jns
outsb
add
hlt
inc
testb
push
push
jge
mov
stos
mov
roll
adc
mov
into
movsl
lret
inc
or
xchg
mov
jns
test
je
or
inc
jecxz
out
dec
jl
lock
ds
mov
inc
addb
sub
dec
sub
lds
fdivr
mov
fadd
movl
jnp
jecxz
push
enter
mov
push
dec
out
sub
hlt
scas
pop
add
xchg
in
data16
out
mov
rclb
lods
jns
lret
xchg
lret
jb
jg
mov
ljmp
into
push
scas
mov
sub
scas
out
dec
xchg
mov
loop
add
jle
cmp
mov
and
cs
xchg
imul
insb
dec
leave
sub
test
popa
xchg
sbb
ds
inc
jb
or
nop
or
adc
imul
push
mov
cwtl
adc
jecxz
cmc
sub
js
cmp
ss
mov
lcall
mov
jnp
out
sub
cmp
adc
jne
lret
pop
mov
jge
push
mov
lods
int3
ljmp
pop
xor
int
in
cmp
sti
and
inc
jno
fnstenv
and
clc
icebp
mov
adc
scas
adc
mov
sahf
mov
popf
pop
mov
sub
push
call
jae
insl
fsub
and
adc
inc
popf
or
outsb
je
push
adc
push
int3
clc
xlat
or
cmp
pop
inc
les
xchg
add
xor
fcmove
mov
sub
pop
adc
mov
push
arpl
repnz
and
add
sub
faddl
lret
mov
mov
imul
je
in
repnz
jle
lods
inc
adc
jae
sbb
cli
cmp
mov
cltd
addb
add
dec
aas
sbb
cmpsl
jmp
cltd
and
bound
sbb
jg
lock
dec
adc
cmp
and
mov
stc
bound
add
ficoml
outsb
sarb
jne
adc
imul
into
popf
mov
into
out
pop
out
jg
sbb
dec
push
dec
mov
mov
shll
mov
add
stc
fildl
pop
push
repz
pop
shrl
cmp
fwait
cmp
mov
push
add
inc
fisttpll
nop
add
outsb
pop
push
mov
xchg
imul
das
push
sarl
xor
movsl
mov
cmp
ljmp
dec
insl
jmp
or
orb
adc
scas
das
or
or
cmpsl
arpl
scas
js
cmc
in
pop
int3
es
pop
or
test
or
lret
fstps
jae
cmpsl
mov
mov
cmp
subb
adc
or
in
outsl
rcrb
xchg
add
pop
std
int3
inc
shll
loope
sub
adc
pop
ss
xchg
sub
test
xchg
inc
shll
pop
or
fdivrs
daa
leave
les
stos
mov
fbld
mov
add
xchg
sbbl
bnd
dec
mov
cmp
mov
adc
mov
jnp
mov
jnp
adc
sarb
mov
lret
mov
mov
lods
dec
cmp
cltd
inc
shl
pop
cld
and
mov
insb
sub
in
push
inc
mov
jmp
dec
adc
xchg
jg
mov
rorb
dec
and
orl
inc
add
or
inc
andnps
scas
call
mov
mov
sub
and
sub
pop
push
push
jns
xor
mov
push
cs
out
mov
aam
mov
adc
shl
cltd
mov
lods
notl
push
add
cmp
sub
sbb
movsb
jecxz
add
inc
jbe
aam
sub
ret
dec
aaa
fwait
sub
fimull
leave
jmp
aaa
je
jle
ss
add
dec
sub
ret
mov
push
mov
adc
lret
rcl
cld
xchg
dec
aad
sarb
cltd
mov
test
push
stos
push
inc
inc
fcomps
sbb
sub
enter
fdivs
or
out
xchg
mov
cmp
adc
mulb
jp
aam
ljmp
inc
jnp
movsb
orl
cwtl
xchg
pop
cmp
jns
cwtl
imul
jns
jle
mov
jb
push
cwtl
dec
dec
xchg
mov
jno
or
or
adc
cmp
cmc
xchg
sti
dec
loopne
add
lea
repz
push
stos
js
stc
fidivl
cmp
out
sar
int
cmp
lea
rcl
and
cld
loopne
cmpsl
fists
daa
mov
push
mov
sahf
ja
out
outsl
push
xchg
mov
loope
mov
cli
push
jb
cli
add
add
or
pop
jmp
data16
and
sbb
push
fldcw
mov
jg
sar
mov
jo
cmpsl
push
or
dec
scas
mov
push
sbb
push
test
lods
popf
or
stc
and
pop
mov
mov
movl
out
pusha
imul
and
imull
aam
aad
jno
push
xchg
movsb
icebp
scas
dec
clc
sti
push
dec
mov
dec
aad
les
cmp
adc
jnp
out
cmp
mov
rcrb
jge
mov
in
mov
mov
adc
hlt
sub
xchg
nop
fxch
mov
jns
pop
adcl
cmpb
test
outsb
mov
sub
sbb
fstps
add
es
lds
popa
repnz
sub
stc
add
loope
inc
or
cmp
inc
jnp
mov
cmp
imul
mov
scas
test
pop
pusha
repz
sbb
mov
add
add
loopne
int
cmp
dec
out
adc
sahf
pop
leave
pusha
jmp
jmp
lret
test
mov
adc
orl
shlb
jb
mov
jg
xor
cltd
xchg
idivl
in
jge
xchg
int3
sti
dec
cli
int3
adc
cmpsb
fsubrl
aad
mov
or
mov
pop
xchg
lret
arpl
fmulp
or
lods
dec
daa
mov
push
xchg
adc
lds
jo
dec
add
push
outsb
ret
in
mov
or
jnp
ljmp
pop
xor
mov
pop
pop
inc
loopne
cwtl
push
fldln2
xchg
fsubrl
push
jne
mov
dec
inc
clc
and
outsb
mov
clc
mov
in
jecxz
push
aaa
push
jmp
or
push
repnz
daa
and
push
push
inc
inc
inc
push
mov
jg
mov
aas
shlb
loop
dec
out
or
out
ljmp
push
leave
mov
push
mov
dec
sbbl
inc
jno
dec
out
xor
loope
lods
ja
fnstcw
or
and
lret
inc
stos
movl
push
data16
mov
lods
push
cmpsl
iret
vmread
movsb
rcl
xchg
sarb
sbb
xchg
popf
jg
and
dec
add
scas
mov
int
fsubrl
fisttpll
xchg
push
jnp
cmp
adc
sbb
adc
in
in
sbb
shrb
sbb
dec
mov
es
orb
loope
inc
in
fwait
or
inc
mov
imul
cmpsb
aad
ljmp
mov
ss
jmp
cmp
rcll
ret
rolb
cli
xchg
fcompl
mov
aam
sub
jns
add
cmpsb
jmp
xlat
cli
sub
mov
repnz
imul
xor
and
movsb
xchg
mov
mov
xorb
lock
into
out
mov
dec
push
push
call
mov
stos
or
daa
push
imul
rclb
and
testb
xlat
adc
popa
mov
cld
pop
imul
lret
lahf
xchg
fadd
mov
add
imul
ljmp
mov
pop
mov
test
cmpb
psubusb
xor
xchg
fwait
jle
bound
and
hlt
iret
popa
xchg
mov
jecxz
icebp
sbb
inc
in
popa
mov
xchg
scas
sarb
inc
js
or
inc
gs
test
adc
repnz
imul
fmull
roll
fstl
test
movsb
in
xor
mov
sahf
popa
pusha
cwtl
je
or
xchg
shlb
ja
push
inc
out
std
test
and
adc
pop
push
mov
dec
aad
adc
or
ds
pushf
jno
mov
pushf
sbb
pop
out
lret
jp
mov
sub
cmp
add
hlt
xlat
mov
rorb
daa
xchg
ss
rcrl
adc
mov
sub
mov
sub
or
out
xor
sahf
jno,pt
lea
andb
dec
jb
sub
and
xor
push
adc
cmpsb
arpl
shll
mov
cmpb
scas
dec
jecxz
int
iret
sbb
jb
dec
notb
les
rolb
xorl
stc
and
js
ja
cmp
mov
jns
jle
jae
xor
and
dec
dec
dec
ss
dec
fcoml
inc
in
popf
push
fsubrs
sahf
push
adc
pop
mov
xor
aaa
dec
adc
and
loope
lds
ds
mov
xlat
jmp
xorb
xchg
orb
dec
sbb
adc
mov
decb
dec
faddl
pop
mov
jns
adc
push
dec
adc
lahf
pop
decl
push
fistpl
call
mov
add
pop
push
sub
aad
into
test
sub
dec
cmp
dec
and
adc
mov
xor
sbbb
pop
aas
lret
lock
fisubrs
lahf
test
add
imulb
mov
std
and
inc
xor
and
mov
rorb
adc
mov
pop
stc
dec
gs
jno
fidivs
je
or
dec
push
faddl
addr16
cmp
in
or
mov
int
dec
das
gs
cmp
pop
mov
outsb
xchg
sahf
or
mov
mov
hlt
call
sbb
out
xchg
je
xlat
aas
xor
mov
add
not
mov
or
cmp
out
jp
test
pop
mov
nop
push
push
sub
int
jge
push
adc
pop
mov
pop
call
out
xor
push
bound
test
dec
pop
push
sbb
stc
push
xchg
xchg
cmp
add
js
popa
js
xchg
mov
mov
insl
xor
cltd
add
xchg
movsb
movsb
sbb
add
call
rcrb
xchg
sub
lcall
mov
mov
shl
jnp
stos
adc
inc
cld
leave
or
lret
mov
jnp
out
stos
dec
in
cmpsb
sub
pop
push
sbb
pushl
sbb
mov
mov
daa
xchg
push
push
out
pop
arpl
dec
xlat
adc
nop
sub
ja
push
sub
pcmpeqd
xchg
popa
jne
dec
xchg
mov
mov
push
rcrl
adc
jmp
xlat
aas
xorb
int
sub
xchg
bound
fsubr
je
push
iret
mov
stos
stos
inc
gs
dec
mov
je
sbb
mov
xlat
cmp
hlt
pop
push
cltd
mov
or
mulb
fisubrl
dec
sub
xchg
mov
inc
cmpl
adc
fbstp
jno
dec
pop
movsl
adc
sbb
loope
mov
jge
inc
pusha
push
icebp
sbbl
xchg
jns
mov
pop
add
xchg
imul
inc
and
pop
fmull
in
mov
xchg
data16
xchg
sbb
jmp
dec
scas
jp
jo
scas
out
or
hlt
dec
mov
in
orl
leave
lds
inc
fdivrl
push
es
push
xlat
mov
jo
sbb
push
add
cltd
sbb
jns
mov
leave
xchg
ret
dec
nop
push
leave
adc
lods
imul
cmp
insb
or
sub
xchg
adc
mov
mov
outsl
imul
std
je
loope
in
leave
mov
jge
dec
jp
fprem
push
mov
dec
inc
loop
jl
dec
jp
fistpll
dec
lock
test
aad
adc
adc
cmpsl
jne
jns
cmp
mov
imul
stc
dec
inc
ja
mov
sub
inc
push
fmulp
push
push
mov
subl
dec
inc
mov
in
dec
cmpps
xor
mov
stc
inc
lock
pop
adc
mov
mov
outsb
lret
jg
pop
mov
inc
scas
xor
je
mov
sarl
adc
loop
push
orb
sub
cwtl
jns
ffreep
aas
lret
sub
dec
and
jecxz
int3
jge
dec
arpl
outsl
movsl
jae
lret
inc
in
adc
mov
imul
inc
cmp
pop
dec
jo
fwait
arpl
xchg
pop
scas
cmc
pop
push
adc
xor
jmp
jbe
das
ss
lret
mov
paddusb
mov
push
xchg
cwtl
cmpsl
pop
pop
mov
push
mov
shll
lcall
jecxz
dec
inc
pop
adc
mov
jp
inc
jbe
addl
sub
xchg
cs
in
sarl
out
and
aaa
pop
int
mov
mov
cld
add
aad
inc
jbe
icebp
sub
stos
fisttpll
add
cmp
and
xor
out
negl
lock
cmp
fsubrl
je
fists
cli
hlt
add
test
nop
inc
mov
push
push
dec
rcrl
mov
int
lods
push
int
sbb
pop
outsl
mov
sbb
orl
xchg
les
pop
out
mov
cmpsl
cmc
dec
clc
mov
mov
sti
into
jns
popl
out
add
mov
out
add
jg
lock
shl
fnstsw
sbb
gs
sbb
testl
xor
xor
adc
jb
call
call
lcall
ss
sbb
xor
cmc
pop
jp
sub
pop
push
pop
orb
repnz
sbb
repnz
mov
xchg
les
inc
pop
fbstp
or
ss
xor
nop
out
push
sti
cltd
lea
xchg
addr16
test
fisubs
insb
sbb
in
outsb
fisubrs
rcll
shl
pushf
mov
or
insl
in
icebp
addr16
cwtl
inc
hlt
repnz
and
jl
sbb
int3
imul
test
sbbl
lret
fs
lea
add
test
inc
pop
shlb
pop
icebp
dec
dec
fcomip
mov
dec
mov
iret
sub
out
fs
std
les
fsubr
jnp
xchg
inc
dec
aad
xlat
push
sbb
imul
call
insb
addr16
mov
push
sbb
in
loope
inc
aas
cmp
fs
jecxz
push
mov
sbb
xchg
inc
xor
aad
dec
mov
test
mov
imul
les
inc
movsb
pop
sbb
adc
push
imul
gs
mov
test
in
cld
pop
pop
dec
popa
in
aaa
mov
add
test
lods
int3
stos
mov
cld
pop
out
jg
dec
in
dec
fwait
mov
xchg
mov
js
push
cmc
cmpsl
in
or
add
mov
aaa
ficompl
icebp
popa
dec
out
jns
jp
cmp
lods
mov
mov
inc
incb
push
sub
jp
push
dec
xor
scas
pop
xchg
fwait
insl
sar
movsb
mov
sub
ss
ljmp
hlt
and
xor
or
aaa
pushf
daa
iret
iret
incl
aad
adc
xor
mov
test
add
sbbb
outsl
push
fdivl
inc
inc
xchg
iret
jle
dec
jmp
jl
fmull
popl
mov
test
jno
dec
adc
shrl
cmp
das
adc
lock
jl
fstpt
in
repnz
cmp
fidivl
ljmp
push
cmp
js
ja
jge
push
nop
sbb
and
ja
cld
aad
mov
rorb
pushf
inc
aaa
ljmp
ds
push
pop
dec
ja
or
pop
call
ljmp
repnz
push
ror
xor
jo
add
cmpsl
xor
mov
push
jl
out
inc
das
sub
pop
push
jmp
fistl
lahf
add
call
push
clc
adc
leave
xchg
jo
jmp
mov
lahf
mov
xchg
mov
mull
daa
xor
cmc
ror
lods
push
in
mov
xor
loope
mov
mov
sbb
jmp
imul
mov
inc
outsb
fbld
iret
mov
pop
adc
test
inc
xor
int3
sub
imul
rcrb
mov
outsb
rorl
mov
adc
lret
inc
adc
xor
call
out
lods
pop
push
cmp
aam
mov
dec
pop
out
loopw
cld
add
stos
xor
outsb
pop
xlat
stos
popf
je
xor
add
outsb
cmp
inc
pop
jb
or
loop
jo
mov
mov
xchg
jb
ljmp
mov
out
sbb
mov
pop
lcall
bnd
add
xchg
sub
movups
inc
ja
pop
adc
iret
or
sbb
popf
or
test
out
pop
ret
int
adc
lret
sub
inc
arpl
imul
cmpxchg8b
mov
fidivs
in
xor
test
pusha
in
pushf
jae
lds
pop
loop
adc
adc
cs
icebp
shrl
cmp
xchg
adc
mov
mov
xchg
jle
jno
int
fiaddl
aad
push
bswap
std
les
cmp
pop
adc
flds
clc
je
movsb
or
ret
sub
pop
call
push
add
xlat
jbe
mov
mov
decl
adc
mov
mov
loope
jns
stos
jecxz
js
mov
xor
inc
inc
aam
sbbb
mov
in
lret
data16
mov
push
sbb
pop
dec
orl
daa
adc
pop
and
dec
in
rcl
push
xor
xchg
lahf
out
add
add
roll
ss
lods
stos
int3
dec
mov
mov
das
and
jo
dec
sbb
insb
shlb
sbb
ja
mov
cmpsl
mov
jb
sub
pop
and
popf
ja
push
jmp
sub
and
fistps
cwtl
out
pop
out
jno
int
mov
jg
pop
jns
stos
xor
test
das
pop
jae
cmp
cmp
mov
orl
add
and
add
insl
lahf
in
addb
jnp
pop
jns
aas
pcmpgtw
sbb
mov
loop
fwait
xlat
cwtl
enter
mov
push
loopne
sub
push
lock
jnp
andl
test
and
lahf
es
mov
rorb
jmp
xchg
inc
push
xor
adcl
cmpsb
int
mov
movsb
repz
mov
push
jg
fstpl
pusha
out
sub
dec
push
movsb
insb
sbb
adc
sub
dec
lret
into
jno
ss
add
fwait
and
mov
mov
leave
xchg
inc
xor
ljmp
pop
lret
or
push
into
add
dec
js
mov
xchg
and
scas
xchg
mov
mov
or
mov
jo
insb
xchg
popa
dec
sarb
fcoml
mov
stos
mov
dec
daa
push
xchg
pop
mov
jmp
fdiv
dec
xor
in
jl
jp
clc
adc
push
cmp
icebp
sbb
aaa
and
mov
hlt
mov
mov
mov
xchg
dec
dec
neg
sbbb
imul
lock
repnz
pop
dec
or
add
jge
jg
mov
jns
daa
jmp
test
ffreep
xor
fwait
mov
clc
add
xor
add
sub
in
jae
pop
ds
dec
std
xlat
cmp
pop
pop
jbe
ds
jge
std
mov
outsb
lds
push
lcall
loopne
incb
adcl
test
in
xor
inc
add
fbld
push
xchg
xlat
dec
xchg
imul
jl
flds
dec
mov
cmp
ljmp
sbb
mov
push
enter
add
cmpsb
jb
test
adc
cltd
add
jns
pop
or
lods
add
sub
ds
mov
aad
mov
lods
sbb
popa
loopne
pop
add
sub
push
fistps
and
leave
daa
test
cmp
repnz
push
adc
loopne
pop
and
push
fwait
in
shrl
imul
jg
leave
lock
lahf
nop
or
mov
cld
mov
mov
xor
add
jmp
aaa
pop
xchg
scas
popf
arpl
xor
fucomi
cmp
xlat
pop
int
cmp
push
incb
mov
ss
fwait
in
xchg
pop
fimull
pop
popf
movsl
adcl
jbe
push
pop
test
test
push
cli
xchg
add
xor
mov
call
cli
dec
outsb
xor
mov
cmp
ja
add
xchg
xchg
sub
push
xchg
jne
int3
xor
es
mov
cmp
test
mov
mov
pop
scas
sbb
stos
add
sbb
push
and
sub
pop
add
or
sub
lock
popf
bound
mov
pop
clc
add
or
ret
in
in
loope
sub
fwait
pop
push
push
push
arpl
lods
adc
xor
push
icebp
push
inc
xrelease
lret
add
pushf
repz
xchg
adc
les
daa
jg
insb
outsb
icebp
and
and
or
pop
mov
aas
sub
xchg
jp
cmp
lea
ja
repz
fs
sarl
in
addl
fcmovnbe
push
pop
cmc
jle
adc
stos
fcompl
sbb
adc
daa
add
push
stc
notl
mov
imul
popa
pop
movsl
inc
test
and
and
bound
jmp
adc
or
push
add
lods
add
or
pop
pop
fbld
inc
cmpsl
insb
mov
cmp
clc
icebp
jmp
adc
mov
test
mov
fwait
mov
jno
inc
adcb
mov
fwait
mov
iret
cmpb
insl
shlb
repz
les
add
cmp
repz
and
ficoms
inc
outsl
aam
out
mov
in
mov
fldenv
mov
jno
inc
ret
loop
stos
cmp
ficoml
loope
or
shrl
inc
inc
mov
inc
notl
mov
xor
sbb
push
mov
rorb
xchg
aam
lock
push
repnz
mov
enter
pop
nop
sub
aas
test
and
in
mov
imul
es
testb
jmp
lods
pusha
xor
into
or
cmpsb
ss
push
fcmovne
mov
mov
rolb
dec
or
sbb
dec
outsb
mov
ret
mov
mov
ss
push
adc
mov
push
es
xchg
repnz
in
xor
ficomps
sub
push
divb
addb
push
imul
mov
ja
cmp
pop
popa
out
mov
fisttps
dec
jb
dec
and
popa
stos
pop
sub
pop
insl
and
mov
jbe
andl
and
adc
neg
mov
jbe
insb
xor
adc
cli
adc
sar
mov
dec
scas
or
daa
adc
repz
dec
sub
xchg
cmpsl
mov
jp
cmpsl
daa
jge
or
in
ret
fdivrs
pop
jmp
add
cmp
push
xor
mov
test
mov
add
jp
out
cmpsb
jnp
push
lock
fidivrl
jmp
ret
push
aam
cmp
xor
insl
inc
insb
out
rclb
fsubr
xchg
bound
lock
dec
inc
adc
sbb
pop
out
xchg
stc
aad
movsl
xor
cli
push
sub
ss
sbb
mov
mov
xor
push
fisubs
push
jns
jge
adc
push
xor
jbe
xlat
add
es
xor
aad
fisubrl
std
int
xchg
cmp
cmp
pop
or
dec
mov
lret
sub
jmp
mov
icebp
cmp
xchg
out
or
pop
fimuls
scas
rorb
mov
subb
movsb
pusha
or
dec
cld
in
insl
or
adc
sub
sarl
inc
es
ljmp
in
dec
push
inc
inc
push
data16
rcr
and
sbb
enter
xchg
push
in
stos
mov
jg
fldpi
scas
test
inc
jnp
jp
gs
stos
and
push
adc
inc
dec
jl
inc
or
cmp
inc
clc
and
bound
popa
inc
cmc
and
std
pop
pop
out
push
rol
dec
inc
shlb
jge
dec
push
inc
sarb
bound
sub
sub
cmp
in
ss
or
mov
cmp
mov
mov
test
mov
loopne
lods
adc
jl
cmc
push
fcmovnbe
insl
cli
insl
fsubs
push
xor
cmp
or
and
sub
mov
movsl
jg
xor
mov
lahf
lret
es
mov
cmp
mov
filds
call
mov
mov
test
out
or
xchg
xor
jno
sub
dec
mov
sub
mov
dec
add
fists
or
sub
mov
lret
into
sub
mov
adc
call
sub
mov
orb
ljmp
mov
lret
inc
pop
in
jecxz
jbe
sub
loopne
scas
xchg
mov
mov
dec
lret
sbb
dec
int
jb,pt
shl
hlt
call
cmp
f2xm1
push
sbb
ret
or
add
pop
mov
mov
or
fstl
pop
ss
push
and
or
test
arpl
mov
jnp
add
mov
fstpl
mov
ret
xchg
popf
push
sbb
sbb
fcomp
mov
sbb
jo
inc
and
adc
cmp
cmpsl
sti
pop
add
xorl
mov
lock
pop
or
icebp
dec
xor
mov
mov
call
mov
in
and
sti
jp
xchg
pop
sub
ss
test
fdivs
and
ror
jecxz
cmp
dec
sbb
inc
cmp
roll
xor
out
sub
mov
mov
rorb
scas
jbe
pop
sbb
shr
ret
inc
push
int3
sti
les
xchg
xor
daa
mov
and
inc
push
hlt
push
mov
negl
scas
cli
mov
and
popa
add
jb
ret
fdivrl
inc
sti
ret
enter
dec
pop
add
mov
or
mov
roll
inc
in
cmp
xor
adcl
fwait
mov
pop
lret
sbb
xor
sub
mov
fisubrs
mov
fimuls
js
fwait
icebp
jecxz
pop
cmpsl
int
mov
cld
jb
rcrb
fsubr
in
mov
mov
dec
sarl
pusha
std
je
jnp
jg
clc
xchg
lret
push
cld
xor
cmp
in
mov
loope
add
mov
jg
pop
ds
aaa
inc
into
shll
rcll
insl
add
jae
ja
insb
jmp
mov
add
outsl
sub
sub
inc
lods
xor
add
xor
push
sbb
shrl
jp
inc
repz
cmpsl
ja
jbe
pop
push
adc
pop
jb
data16
sub
pop
pop
popa
mov
enter
and
push
inc
push
jno
cmp
mov
in
je
mov
xchg
repnz
inc
sbb
mov
dec
int
pushf
xchg
adc
inc
adc
lods
popa
fidivrl
pusha
add
inc
pop
cmp
shrl
loope
andb
mov
jno
sarb
in
pop
sbb
clc
add
cmpsl
xchg
sub
icebp
nop
test
xchg
adc
mov
scas
push
push
push
adc
imul
je
xor
imul
insl
mov
push
dec
repnz
mov
out
push
xchg
popa
mov
push
or
fsub
cmpsb
pop
push
dec
call
mov
cltd
out
lock
call
cli
mov
addr16
into
lods
imul
inc
cmpsb
jp
je
cmp
push
sub
mov
or
das
out
jne
sbb
iret
pop
dec
arpl
addr16
loope
mov
ret
out
sar
sbb
lret
sub
xor
fcoml
dec
xchg
cmp
arpl
cmpsb
test
loopne
into
dec
clc
cmp
aas
sahf
jge
ljmp
popa
pop
andb
out
lahf
cmpsb
cli
scas
cmc
inc
sub
dec
cmpsb
and
jae
aad
mov
cltd
push
add
add
add
scas
outsl
mov
pusha
cltd
push
arpl
test
inc
pop
stos
outsb
fs
data16
stc
repz
push
fsubrl
aad
stos
add
cmpsb
pop
sbb
lret
cmp
mov
fildl
shll
mov
clc
mov
cmp
sub
push
lcall
add
jle
jge
jae
sbb
out
scas
cmpsl
xchg
sub
adc
jbe
jp
fisubrs
and
jle
and
outsl
push
cvtpi2ps
or
insl
push
xchg
rcrl
pop
cs
aaa
dec
mov
xor
mov
push
out
imul
xchg
mov
inc
mov
test
dec
fwait
icebp
xchg
push
pop
lret
int
lods
fwait
jecxz
in
pusha
add
loop
xlat
in
clc
sbb
in
add
cmpsb
pushf
outsl
scas
mov
mov
movsb
cmp
dec
hlt
js
and
mov
rolb
int
data16
xor
xchg
aam
fdivrl
fucom
mov
cmpsl
jg
adc
jmp
loop
gs
das
pusha
js
xor
inc
ret
jb
int
sbb
pop
jp
testb
pop
sub
jmp
push
and
mov
jne
mov
xchg
clc
push
push
push
jae
mov
insb
lret
dec
mov
test
pushf
push
mov
mov
jnp
jmp
inc
lods
call
sbb
jmp
jle
imul
enter
test
lods
std
push
jl
sub
cli
aam
dec
sub
jo
iret
cmc
or
xor
popf
test
push
insl
in
stos
lods
mov
inc
mov
outsl
insb
push
adc
mov
mov
xor
ds
sub
push
mov
add
sub
or
stos
imul
adc
std
mov
add
or
jb
cmp
adc
jne
stos
aad
aaa
xchg
mov
lods
mov
inc
pop
and
lods
pop
pop
daa
pop
std
incl
cmpsl
sbb
sbb
lea
and
and
pop
pushf
in
mov
loopne
mov
sarl
lret
aas
cmp
xor
rorl
mov
in
mov
nop
sbb
xchg
jl
fst
pop
xchg
clc
xchg
and
cmp
inc
mov
mov
js
xor
push
jne
mov
jl
inc
outsl
sbb
test
loopne
adc
or
ds
insb
xor
mov
add
jns
dec
mov
mov
stos
pop
inc
sbb
xlat
lcall
outsl
jo
movsb
or
lods
xchg
or
mov
scas
pop
pop
pop
cld
sbb
fcomps
mov
enter
jl
mov
push
xor
es
in
into
dec
scas
popa
inc
pop
out
pushf
inc
enter
jge
cmp
adc
jae
xor
xchg
or
cmpsb
subl
js
fsubr
stc
popa
jecxz
lds
push
out
out
test
xchg
or
ljmp
mov
inc
fidivrs
xor
lcall
mov
inc
cmp
pop
mov
fiadds
jae
scas
ljmp
rcrl
enter
mov
int3
rorb
aad
add
xor
sub
mov
imul
mov
insl
fiaddl
fists
mov
sub
out
ja
xor
pop
test
clc
or
cmpb
ss
add
xchg
adc
sarb
add
jo
push
sub
ret
mov
inc
test
mov
jmp
dec
popa
mov
lods
cmp
and
sbb
fisubrl
insb
inc
sbb
fucomi
mov
sar
mov
jbe
jne
dec
ds
pop
mov
mov
nop
add
js
inc
push
adc
or
add
cmp
daa
dec
fcompl
das
mov
negb
movsb
fcmovnu
ljmp
fsubrl
xchg
adc
xor
jmp
cmp
out
stos
sub
xchg
pop
mov
pop
cmp
xor
adc
ds
inc
push
pop
mov
les
push
loope
pusha
and
and
add
push
dec
test
repz
aam
icebp
adc
in
jne
pop
mov
shr
xchg
pop
std
mov
xchg
adc
ret
dec
xor
mov
aad
push
mov
sbbl
inc
ja
adc
jg
scas
jno
cmp
cld
cli
test
sti
cmpsb
and
adc
pop
iret
push
shlb
aam
sub
dec
add
xchg
lock
dec
fldenv
pop
iret
push
mov
cld
sbb
inc
push
add
cmpsb
adc
popf
cli
or
mov
int3
jbe
fsts
push
bound
mov
mov
lcall
push
outsl
and
xor
pop
imul
fsts
packssdw
sub
mov
shlb
pop
adc
das
inc
ds
repz
data16
add
cmp
mov
lcall
dec
mov
pusha
mov
cmc
pop
enter
lds
daa
and
jo
imul
xchg
std
jbe
cmp
bound
mov
incl
aaa
dec
sub
mov
jecxz
hlt
inc
dec
cmp
bound
clc
ret
pop
inc
in
mov
dec
fmul
enter
rcrl
rorl
fnstsw
mulb
mov
push
icebp
jmp
add
dec
enter
jmp
mov
cltd
or
xor
lcall
xor
bnd
jnp
in
xor
and
int
push
aad
stc
pop
mov
cmp
iret
clc
sbb
push
cmpsl
mov
and
imul
add
jmp
insb
cmpsl
pop
mov
stos
scas
testb
and
sub
push
lock
sub
adc
add
adc
cwtl
xor
adc
imul
dec
add
push
test
adc
cmpsl
rcl
test
sub
fs
rcrb
xor
sub
dec
arpl
mov
dec
xchg
mov
adc
push
pop
xor
outsl
sbb
adc
cmp
test
dec
gs
mov
mov
js
iret
or
out
pop
fnsave
add
dec
push
test
ds
sbb
and
mov
rcrb
cmp
mov
mov
jbe
fisubrs
mov
mov
xchg
int3
into
popa
cmp
xchg
repz
rcrb
aaa
add
sbb
mov
pop
lahf
mov
sbbl
push
pop
mov
mov
sub
movsb
popf
cs
shrb
mov
bound
movsb
xchg
rcrl
pusha
jl
cmp
pop
pop
xor
lods
dec
pop
sub
xor
dec
test
call
sub
add
lea
jnp
std
sarb
inc
sti
mov
cmpsl
sbb
inc
sub
not
cmp
adc
dec
lahf
pushf
mov
je
xchg
add
inc
sbb
mov
mov
andl
sahf
hlt
mov
jmp
cmp
adc
popf
add
out
xlat
inc
inc
push
mov
icebp
nop
pop
cmpsl
add
testb
push
adc
push
notb
and
leave
push
je
loopne
mov
pop
stc
lcall
fstpl
pop
jb
es
sbb
scas
mov
dec
and
in
adc
insl
sbbl
fistpll
test
nop
mov
fs
popa
repz
dec
jge
or
bound
int3
xlat
push
sbb
mov
push
push
xchg
xchg
cmp
push
mov
loope
out
and
push
shrl
test
aas
push
aad
mov
and
push
daa
jmp
push
lock
lds
popa
repz
std
xor
cld
adc
mov
mov
pop
mov
cmp
insl
in
mov
shll
and
scas
and
cmp
mov
xchg
popa
adc
lret
add
add
lea
ret
icebp
mov
orb
push
imul
mov
mov
les
cmpsb
fwait
dec
arpl
dec
xchg
cmc
cmc
push
idivl
daa
or
pop
push
cmc
and
insb
lcall
test
inc
xchg
mov
test
add
adc
arpl
and
test
xchg
or
inc
mov
loopne
push
adc
xor
enter
or
xchg
inc
mov
sub
in
cmp
xchg
popf
cmc
sbb
add
pop
arpl
loope
xchg
push
and
ja
xor
movsb
mov
add
mov
pusha
xchg
lods
test
pushf
mov
pusha
inc
in
inc
rcl
cltd
sub
mov
add
dec
pop
adc
sbb
adc
sub
mov
add
adc
outsw
int
loopne
jmp
out
cmpsb
fistpl
adc
nop
or
mov
in
mov
jae
sbb
add
xchg
fnstcw
push
push
jge
pop
jecxz
jb
cli
push
mov
xchg
jge
popf
test
aam
jp
pop
inc
addr16
or
movl
imul
fildl
jg
sub
mov
test
inc
dec
jnp
push
xor
pop
shrb
xlat
jno
jb
shll
jb
xchg
rcll
or
pop
mov
push
fwait
xchg
mov
popf
jb
mov
pop
and
fistpll
xlat
shll
stc
test
jmp
fwait
std
dec
ds
and
jb
rcr
pop
cmpsb
fists
js
sub
dec
add
icebp
sti
mov
in
in
ja
push
mov
jle
mov
mov
mov
push
pushf
jp
popf
or
cmpsb
xor
clc
ss
dec
cs
data16
jg
jg
mov
stos
sbb
into
jns
imul
adc
insl
cmp
das
mov
out
outsl
lahf
dec
jb
sub
adc
xor
inc
mov
adc
sahf
sbb
fnstenv
data16
pusha
xor
cmp
or
mov
inc
es
dec
xor
stc
imul
mov
push
fnstenv
test
pop
dec
sbb
inc
fwait
sbb
or
int3
jl
jns
sub
mov
inc
push
xchg
pop
jl
sbbb
daa
jecxz
adc
mov
mov
in
mov
adc
repz
inc
into
aaa
xchg
stc
xchg
jge
mov
push
mov
or
loope
jge
jns
jl
cmp
pop
push
pop
pop
push
pop
in
outsl
inc
xchg
adc
loop
mov
rcl
fisubrs
jmp
xor
imul
loope
bound
add
scas
inc
sub
push
mov
loopne
cs
call
push
in
dec
dec
jl
ds
cmp
idivb
xor
popf
enter
push
dec
mov
hlt
lds
lods
mov
imul
inc
imul
jmp
jne
stos
sub
lcall
push
xchg
ret
call
mov
sbb
movsb
mov
mov
out
or
sbb
sbb
and
jb
in
inc
mov
push
loopne
jmp
sub
out
cmp
add
pop
out
jns
fldl
test
adc
dec
hlt
mul
push
or
xchg
push
test
sbb
fiaddl
add
bound
loope
push
cmp
and
adc
xchg
dec
pop
sbb
cltd
test
fwait
mov
jge
outsl
loopne
popf
andb
sub
mov
inc
aad
scas
enter
repnz
and
ror
repz
lret
push
subl
add
jb
jo
push
mov
xchg
dec
sub
ret
jp
aaa
add
inc
adc
push
js
enter
insl
sub
iret
lret
mov
add
sub
cmp
dec
push
mov
push
in
lock
push
or
cmp
movhps
lock
imull
lea
xchg
and
cmpsb
xchg
test
dec
mov
and
out
mov
jno
insl
std
movsl
pop
movb
pusha
insl
jo
mov
lods
das
orb
into
test
ja
cwtl
das
mov
sbb
rcll
inc
je
mov
in
loope
jmp
add
sub
cmp
xlat
dec
or
cmp
in
mov
call
inc
das
fbstp
xor
mov
mov
or
shlb
pop
and
and
mov
aas
jb
out
pusha
das
fs
push
jmp
hlt
clc
pop
imul
loop
xor
xor
or
cmpsl
adc
mov
push
sbb
test
sub
psrlw
subb
pop
bnd
xorb
pushf
dec
ss
movl
pop
pop
inc
aas
sub
and
test
push
lret
or
inc
andb
dec
cs
sub
into
mov
jb
xor
and
in
xchg
mov
je
and
pop
sbb
pop
adc
ret
imul
popa
sbb
enter
stc
jne
sbb
testb
sbb
mov
xor
xchg
pop
xor
das
mov
outsl
sbb
jno
sbb
cmp
dec
gs
dec
mov
pop
mov
cmp
cmp
mov
mov
mov
pushf
sahf
cltd
adc
lret
fprem
inc
out
mov
ja
dec
fwait
or
mov
addr16
mov
push
cmpsb
enter
xor
ds
ljmp
dec
outsb
orb
lretw
lock
hlt
inc
cmp
cmpsl
pop
cmp
inc
repnz
sub
inc
and
iret
pusha
mov
xor
push
lock
hlt
jbe
adc
cmc
xchg
hlt
or
mov
lcall
mov
stos
xchg
xchg
xchg
sbb
fs
sbb
inc
dec
cwtl
int
in
test
data16
dec
mov
cs
mov
ljmp
mov
fcompl
pushf
fistps
jns
and
aas
and
cmpsl
test
push
das
pop
test
ret
xor
xchg
lahf
sbb
jle
cmpl
ret
push
insb
gs
sub
shlb
cmp
std
mov
call
or
popf
sar
mov
mov
imul
aaa
xchg
cmp
push
fldcw
jmp
dec
and
xor
icebp
out
repnz
sub
pop
cmovl
mov
mov
and
mov
or
stos
pop
xchg
lcall
cmpsb
leave
inc
or
cmp
je
movsb
cmp
stos
xchg
daa
jge
pop
and
push
jb
sub
loop
icebp
and
cli
iret
leave
or
loope
add
stos
clc
incb
sbb
loopne
repnz
mov
sbb
push
es
cmpsb
jns
add
insb
jb
xchg
mov
add
insb
ret
xor
jno
in
push
nop
sub
in
push
repnz
sub
pusha
jb
push
popa
dec
push
xchg
pop
bswap
push
jb
jle
cmpb
xor
movsb
xchg
jns
and
cmp
rcrb
leave
pushf
outsb
cld
jno
xchg
insl
pop
or
xlat
popa
loope
jns
imul
in
mov
ret
xchg
in
sbb
bound
pushf
out
test
cld
leave
movsb
es
cld
sbb
vmovaps
fidivs
fcmovnu
cmp
or
adc
aad
push
adc
and
shlb
xor
shlb
rcr
mov
leave
fcoml
cmp
pop
stos
xchg
insl
mov
in
clc
xor
push
popf
jecxz
loop
imul
mov
mov
lods
addl
roll
bound
push
addr16
push
icebp
sub
aas
ss
adc
mov
in
jae
sti
cmpsl
je
adc
or
call
lahf
vhaddpd
inc
cmp
cmp
sbb
or
mov
test
adc
mov
or
aam
jno,pn
and
loopne
cmp
jns
add
mov
in
fmulp
repnz
aaa
push
mov
cs
data16
inc
clc
scas
push
fidivrs
lret
fisttps
and
vcvtpd2psx
dec
sub
and
fcoms
bswap
and
sar
inc
add
insb
mull
xorl
mov
outsb
ljmp
popf
pop
mov
jne
and
adc
push
push
push
lock
mov
in
pop
stos
mov
lock
pop
loopne
call
jg
mov
xchg
or
xchg
push
xlat
push
xchg
xchg
pop
into
aaa
pusha
not
testl
mov
rorl
jae
xchg
xchg
dec
pop
int3
cmp
xchg
add
out
sahf
ss
mov
cmovnp
enter
lret
dec
sub
pop
movsl
movsl
iret
mov
addr16
or
fidivl
add
sub
fiadds
lods
lods
sbb
in
adc
sub
mov
sub
in
inc
sub
dec
in
pop
jnp
xchg
pushl
adc
daa
imul
rolb
mov
xchg
test
jno
fs
shr
lods
dec
mov
leave
insb
dec
lock
adc
jmp
nop
cmpsl
dec
outsl
inc
mov
dec
cmpl
dec
rorl
pop
pop
rolb
popa
add
addr16
shrl
sahf
cmpl
mov
mov
into
inc
aas
stc
mov
aaa
aam
fisubrl
mov
and
dec
mov
jge
lret
cltd
sbb
and
push
mov
jp
test
int
call
mov
xor
push
fs
clc
aaa
xchg
stos
xor
xlat
inc
scas
jle
fadds
mov
pop
mov
sbb
and
pop
cmpsb
push
aas
pop
leave
mov
fs
cltd
int3
push
pop
pop
ret
mov
or
test
nop
xor
imul
cwtl
inc
jnp
int
test
sarl
nop
and
dec
push
and
int3
add
movsl
shll
gs
sahf
lret
or
inc
gs
dec
or
ja
std
cld
and
inc
notl
dec
fisubs
call
pusha
inc
pop
daa
xor
and
stos
xor
mov
insl
pop
lret
cmp
out
test
cmp
pop
lods
test
pop
clc
pop
cmp
xchg
imul
movsb
inc
repnz
sbb
push
inc
test
rcrl
pop
add
les
outsb
lret
add
in
sti
dec
adc
ja
mov
inc
jecxz
cmpsb
and
out
sub
cmp
mov
rorl
mov
hlt
in
js
mov
cmp
sahf
je
sbb
push
push
cs
push
xchg
jae
cli
push
popa
ret
mov
fucomp
dec
sub
dec
test
xlat
push
jo
loopne
out
leave
cld
jge
hlt
aad
imul
out
stos
mov
test
lret
sub
lret
roll
mov
sub
sbb
fpatan
mov
in
mov
or
mov
inc
xchg
lock
imul
jns
push
and
pop
jo
mov
adc
clc
shrb
add
adc
mov
push
les
out
call
addr16
orb
sub
or
sub
add
sbb
into
or
adc
cmpsl
mov
mov
push
inc
loopne
push
fcomps
jns
in
push
repz
imul
jae
xchg
test
jp
das
cmc
mov
aas
or
stos
test
xor
jmp
mov
out
mov
ja
xchg
std
out
ljmp
hlt
push
pop
push
push
or
add
out
cmpsb
movsb
push
mov
rclb
dec
pusha
rep
mov
test
dec
stos
negb
inc
leave
inc
into
cltd
fldl
fmull
adc
nop
inc
loope
test
fs
or
mov
add
movsl
in
or
adc
cmp
insb
lret
ret
nop
fldenv
pop
es
and
push
jb
outsb
test
and
aad
cltd
nop
ficoml
jl
nop
adc
or
xor
addr16
xchg
add
movsb
addr16
shll
ret
mov
sub
data16
pop
rclb
jmp
int3
aas
mov
mov
scas
loop
fwait
inc
mov
mov
cmp
pop
push
dec
aad
lcall
pusha
dec
mov
cld
jno
pushf
xor
out
mov
or
pop
ficoml
inc
mov
mov
jo
sub
sub
jae
sub
stos
add
push
jmp
out
cltd
jb
xchg
fcmovnb
ror
sub
faddl
add
dec
sbb
xchg
or
or
lcall
ret
jl
stc
out
inc
dec
std
adc
adc
cli
xor
rcr
jno
push
mov
xorl
push
fdiv
daa
and
imul
xchg
inc
es
movsl
aas
std
and
push
lcall
pop
std
adc
rolb
jecxz
mov
outsl
rolb
sti
push
fst
ret
sub
xlat
push
pop
cmp
cmp
gs
test
xchg
xchg
scas
add
xchg
mov
ljmp
cmp
movsb
imul
call
inc
jno
jl
add
ret
js
ds
push
dec
loop
mov
xchg
inc
test
push
sub
or
popf
iret
test
sbb
imul
push
imul
pop
inc
pop
aam
xor
shll
rol
xor
sub
cli
xor
jg
jbe
aas
sub
and
jecxz
sub
jmp
leave
adcb
sub
leave
xor
xorl
push
push
ss
xor
fmuls
push
loopne
stc
jmp
mov
ret
cmpl
inc
cltd
adc
xor
leave
lcall
not
push
stc
stc
xor
push
push
and
adc
inc
repz
test
fldenv
push
jg
jmp
adc
movsb
sbb
test
jbe
adc
xchg
jne
fmuls
mov
dec
call
fs
or
fstps
and
cmp
das
adc
gs
dec
mov
mull
or
outsb
mov
and
mov
mov
idivl
sub
push
dec
out
lcall
test
or
stos
cmp
cmp
mov
xor
jnp
ljmp
subb
pop
mov
mov
sub
cmc
add
fcoml
lahf
push
mov
shrd
ret
push
sub
jae
cmpsl
loope
push
test
leave
test
adc
sbb
mov
sbb
add
repnz
adc
out
js
add
shl
cmpsb
lahf
cmpsb
sub
add
xchg
inc
or
aaa
addl
decl
mov
cmp
push
pop
mov
notl
roll
ret
xchg
subl
xchg
adc
icebp
xlat
test
outsb
sub
and
xchg
xlat
lcall
jle
push
cmpsl
repz
cmp
out
in
xchg
or
imul
mov
aad
lret
jg
add
jnp
lret
dec
mov
iret
dec
mulb
inc
push
xchg
bound
out
or
xor
jno
fstpl
xorb
icebp
add
std
lock
mov
mov
int3
sbb
or
pushf
xchg
adc
dec
mov
pop
pop
cs
shl
xchg
stos
leave
mov
dec
rolb
mov
cmc
fimuls
lods
je
cld
pop
insl
sub
inc
fidivl
mov
pushl
cmc
jae
pop
cld
jge
insl
repz
lret
jb
aaa
popa
cwtl
sbb
jb
pop
dec
mov
or
push
sbb
inc
pop
push
adc
roll
repnz
in
arpl
xchg
add
arpl
push
inc
sub
repz
jnp
mov
jmp
icebp
data16
mov
cmpsl
push
fwait
bound
jecxz
lahf
sbb
pop
mov
lds
or
imulb
sbb
fisubs
daa
adc
adc
sub
sbb
stos
add
ret
sub
je
adc
les
inc
test
jle
lock
sbb
xchg
adc
lds
xor
es
mov
hlt
cwtl
jl
xor
lods
int3
jmp
les
lret
mov
test
ds
jl
movsb
cmove
js
cli
sarl
dec
pop
call
push
pop
pop
addb
xor
dec
das
cld
inc
dec
jle
cwtl
aad
pushf
and
and
mov
unpcklps
mov
outsb
sub
shlb
mov
insl
imul
rolb
shr
and
enter
xchg
mov
or
sbb
dec
out
sub
ficoms
push
xchg
in
xor
stc
mov
xor
pmaxub
lods
fs
icebp
nop
adc
divb
inc
adc
lds
dec
insb
add
add
mov
mov
popf
add
repnz
mov
pop
add
out
pop
imul
fdivrl
arpl
orl
ljmp
mov
push
mov
cli
in
lods
dec
pushf
aam
lret
stos
xor
loope
ljmp
xor
mov
out
xchg
test
ljmp
or
in
sub
cmpsl
ret
jg
push
cmpsb
mov
push
sub
add
int3
out
jne
xchg
mov
jb
push
sbb
loope
jbe
inc
cld
jo
push
mov
add
fldcw
movsb
stos
fwait
jns
fiaddl
cmpsb
pop
mov
push
push
pop
lea
call
in
jnp
xchg
adc
nop
or
xchg
mov
aaa
sub
cmpsb
flds
mov
sbb
bnd
and
xchg
cltd
or
lock
cltd
fstpt
pop
jge
mov
adc
push
jno
nop
popf
inc
adc
xor
mov
loopne
mov
das
jno
adc
lock
mov
dec
xchg
add
inc
pop
jns
repz
faddl
or
or
cmp
mov
movsb
xorb
js
call
jp
push
sbb
addr16
hlt
inc
push
in
int3
jmp
ret
xor
mov
xor
xchg
mov
or
scas
mov
sbb
loop
bound
mov
cmp
lret
sub
leave
fldcw
add
in
mov
xor
cli
mov
mov
stos
scas
int
div
jmp
jne
jl
cmp
pop
mov
loop
enter
jne
aas
push
push
lods
xchg
push
adc
punpckhbw
xchg
lods
inc
sti
sub
arpl
jno
fmull
mov
adc
sbb
rep
ret
fidivl
repnz
sarl
dec
push
push
or
dec
cmpsl
mov
and
inc
inc
fcomip
push
frstor
inc
aaa
mov
xchg
cmp
mov
jbe
sbb
adc
xchg
outsl
arpl
fisubs
pop
addl
push
add
push
loopne
sub
lods
int3
jb
cmp
adc
inc
aas
push
int3
subb
sub
sub
shlb
xchg
movl
imul
and
imul
rcr
mov
ss
cmp
aam
and
insb
ss
sbb
lea
pop
out
je
sbb
sbb
sub
pop
sub
insl
pusha
lret
adc
imull
cmp
jbe
mov
lret
sub
loope
daa
and
loopne
sub
cmp
mov
hlt
in
jno
or
aad
or
mov
addb
sbb
cmp
imul
lret
mov
cmpb
inc
leave
mov
cmp
daa
lock
pop
aas
ja
fists
mov
fisubs
repnz
mov
leave
sub
jge
mov
frstor
or
add
xchg
pop
adc
outsl
add
fnsave
pop
lret
jns
sub
mov
insb
mov
sub
bsr
jmp
lock
cmp
mov
xor
xor
mov
jmp
dec
mov
test
iret
cmp
lahf
pop
cmp
and
push
dec
or
fstpl
shll
out
pop
adc
xor
stos
test
add
jbe
andnps
subl
pop
test
and
sahf
lahf
dec
or
cwtl
inc
out
add
dec
dec
mul
imul
mov
jl
test
popa
push
jno
in
jb
dec
in
js
mov
jp
or
pusha
out
inc
xchg
stos
pop
pop
xor
dec
lods
stos
mov
ljmp
ljmp
push
jg
or
push
test
xchg
and
bound
sub
stos
cwtl
add
daa
sub
dec
fsubl
sbb
loop
sbb
dec
xchg
decl
sub
dec
insl
adc
push
scas
push
popf
mov
sbbb
out
add
fwait
push
xor
xorl
xorb
xchg
idiv
jle
lods
push
test
lcall
jl
push
cmp
and
jnp
inc
pop
pop
add
insl
dec
ja
mov
cwtl
movsb
cmp
fists
adc
add
add
push
jo
aas
and
je
sub
and
ja
lods
faddl
int3
and
pop
sahf
and
fmuls
and
dec
and
fiadds
pop
inc
mov
rorb
xchg
add
add
jbe
xor
xchg
inc
icebp
xor
push
dec
into
jbe
or
add
sbb
jmp
sub
cmp
push
mov
cmp
out
cmp
or
sbb
xchg
xchg
movsb
dec
mov
leave
cmp
mov
daa
lds
shll
cmp
aaa
in
lahf
fnstcw
mov
dec
rorl
dec
cmpsl
jmp
fs
dec
jmp
aaa
inc
mov
cwtl
fidivl
inc
test
cmp
inc
cmp
ja
fcmovu
jmp
mov
mov
adc
dec
push
sbb
adc
xchg
dec
repnz
dec
push
and
movsl
mov
int
add
push
cld
or
cli
and
push
rorb
lcall
mov
sbb
imul
xchg
into
mov
adc
add
test
sub
inc
dec
popa
push
js
lret
mov
mov
mov
lods
mov
adc
sbb
loope
insb
shll
inc
jl
jb
std
imul
sbbb
jmp
cmpsb
fstl
imul
or
mov
movsl
jge
fildl
cld
pop
inc
into
addl
mov
enter
push
icebp
dec
mov
insl
mov
sbb
inc
ret
test
outsb
cltd
sbb
les
add
in
divb
dec
cmpsb
mov
insl
dec
and
mov
aad
mov
pop
stos
std
imul
out
jne
clc
out
out
push
sub
push
daa
insb
add
pop
xor
mov
lock
outsl
jge
cli
or
sbb
mov
adc
mov
lods
pop
sub
inc
lahf
ret
mov
into
add
xchg
test
bound
push
xchg
lods
add
mov
adc
adc
into
or
ja
test
sbb
aaa
inc
lock
sbb
rclb
rclb
int
xorb
insl
icebp
cwtl
pop
inc
xor
daa
repnz
adc
and
lods
cmp
lret
mov
leave
pushf
loope
fisubl
mov
cmp
subl
shl
lea
or
pop
inc
jl
in
pop
ja
pushf
testl
sbb
or
jb
lahf
rcl
stos
lea
mov
push
xor
mov
repz
add
sub
pop
int3
inc
xchg
bound
push
scas
xchg
imul
push
xchg
test
jae
les
jno
loop
push
test
and
sahf
push
test
stc
mov
loopne
addr16
jne
adc
adc
xchg
and
cmp
dec
shll
call
ja
std
xorl
into
cmc
xchg
les
fbstp
push
sti
jns
adc
cmpsl
cmp
add
loopne
mov
sub
es
xor
pop
in
lock
xor
test
fidivrl
inc
sbb
xchg
flds
xchg
dec
or
cmp
mov
push
xor
dec
xlat
lods
test
push
inc
sbb
xor
je
cmc
pop
sbb
add
dec
jge
pop
and
sub
lds
adc
sbb
pop
mov
mov
addb
xor
dec
mov
lods
xchg
jecxz
mov
or
test
data16
push
stos
and
test
mov
push
or
xchg
pop
addr16
shr
ds
lahf
sub
cmc
test
jae
xchg
sub
sub
jno
mov
arpl
ret
es
fwait
mov
and
xchg
mov
jo
out
cmp
push
add
jle
scas
mov
xor
push
outsl
pop
or
test
out
add
pop
mov
cli
inc
dec
and
mov
jge
mov
xchg
les
dec
rcll
pop
add
into
sub
sub
xor
prefetch
test
sbb
xor
and
and
negl
push
cld
out
lock
push
ret
imul
sub
jb
and
repnz
jmp
inc
add
stos
mov
mov
cs
les
lods
adc
popf
inc
pop
inc
scas
fs
cmp
andb
mov
inc
popa
dec
or
fidivs
dec
ret
lret
xor
cmc
setns
sub
mov
xchg
imul
scas
xchg
stc
push
inc
mov
out
mov
js
dec
and
out
jl
jg
test
xor
mov
outsl
adc
sub
lret
adcl
das
movsl
and
in
mov
jo
sub
sub
popl
fistl
pop
repnz
repnz
inc
imul
fbstp
dec
mov
or
mov
mov
movsb
sbb
in
mov
fnsetpm(287
inc
push
mov
test
rcr
jno
lock
push
mov
push
cmpsl
mov
xchg
aam
inc
jae
xor
xlat
xor
dec
ret
or
pop
jg
test
and
je
call
gs
lahf
and
in
dec
pop
sbb
flds
pop
int3
push
outsb
mov
sbb
loope
jbe
gs
and
cmpsb
in
push
aam
jge
repz
jmp
sbb
mov
bnd
lret
mov
push
mov
mov
imul
xor
filds
enter
jne
dec
scas
add
les
jmp
cmp
adc
dec
orb
push
xor
adc
mov
add
mov
pop
mov
pop
cs
or
push
jmp
add
shrb
adc
dec
fcmovnu
pushf
mov
sub
pop
jl
rolb
fistps
mov
or
and
loope
inc
xchg
mov
mov
dec
adc
shl
aaa
out
mov
in
lret
xchg
xor
rclb
hlt
faddl
test
aaa
cmp
test
jae
cmp
mov
popl
jg
clc
dec
rorb
add
lds
push
push
enter
cmp
loopne
scas
aam
sub
xor
cmp
sbb
or
push
fidivrl
mov
inc
call
push
xor
add
inc
mov
ja
cmpsl
loopne
push
imul
out
addr16
fs
ret
mov
pop
sti
fwait
rcrl
sub
push
addb
in
mov
push
inc
imul
lock
push
adc
pop
push
mov
movsb
push
ret
shrl
fcom
jnp
and
add
into
cmpl
scas
insl
popa
aaa
ret
lea
fucompp
fmul
add
lahf
xchg
push
sahf
out
inc
test
mov
mov
outsb
adc
insb
int
push
or
sub
or
jmp
inc
int3
sub
punpckldq
into
and
int
push
mov
cmpsl
xor
cld
sbb
les
mov
dec
les
jge
es
add
adc
aad
sub
or
add
aaa
adc
xchg
sbb
test
mov
sahf
call
xchg
cmpsb
dec
roll
sbb
sbb
adc
pop
push
jb
lods
xor
dec
lds
jns
loop
lods
add
sub
sub
mov
arpl
adc
fisttpll
pop
sub
je
xchg
sarl
outsl
mov
mov
stc
movsb
adc
or
fxtract
dec
pop
pop
dec
mov
push
jnp
dec
xchg
push
pop
or
inc
dec
xor
cmpsb
and
out
inc
jmp
xchg
inc
aas
or
cld
out
mov
ss
add
out
int3
addr16
jb
roll
mov
fsts
inc
mov
lods
ret
and
mov
shl
shll
mov
sbb
sahf
lea
mov
mov
pop
mul
sub
popfw
mov
mov
mov
cmp
hlt
mov
shll
icebp
pusha
sahf
fcoml
fnstcw
mov
or
push
lahf
inc
adc
xchg
cmp
fs
sub
das
mov
ljmp
jl
fs
pop
jb
pandn
outsl
adc
xchg
nop
sub
das
inc
cmp
mov
movsb
cmpsb
or
xchg
mov
shlb
add
dec
dec
cmp
xor
push
lret
pusha
jns
jge
xchg
pop
inc
cmp
push
jle
inc
jecxz
mov
ret
lcall
adc
push
push
mov
mov
ret
sub
orl
mov
gs
clc
sahf
inc
xchg
cmp
divl
mov
js
mov
inc
push
cmp
push
jl
shll
iret
out
or
cwtl
aam
clc
push
mov
mov
xlat
ja
jecxz
into
or
addr16
fsub
jecxz
add
fidivl
loopne
jmp
mov
jecxz
push
and
adc
popa
and
popa
test
sbb
pusha
out
mov
test
in
xchg
pop
pop
inc
decb
mov
jo
aas
movl
cs
mov
sub
and
test
popa
sub
ficompl
pop
pop
scas
pop
cmp
in
jge
inc
mov
cli
pop
mov
js
xchg
sbb
insb
mov
stos
push
arpl
pop
cs
mov
ljmp
into
inc
xchg
jle
mov
iret
dec
maskmovdqu
testl
push
rclb
dec
pop
xor
mov
in
stc
aad
jg
sbb
rolb
out
add
lcall
js
cwtl
mov
dec
pop
inc
mov
sub
mov
xor
sub
or
cmpb
fdivl
inc
xchg
jno
jae
daa
scas
xor
std
mov
jg
lcall
shl
push
stos
lret
and
xchg
pushf
mov
push
fdivs
adc
addr16
push
shl
cmpsl
test
push
nop
xchg
ds
mov
dec
adc
in
mov
stos
dec
inc
mov
loop
fs
jae
aad
shrb
pop
sub
pop
cli
dec
das
jns
fcomps
xor
jmp
fadds
je
mov
mov
sbb
add
xorl
adc
xchg
fchs
call
stos
cltd
mov
addb
ret
xor
lods
sbb
mov
enter
loop
xchg
mov
adc
sahf
sbb
sbb
in
lock
xor
add
sbb
xchg
xchg
pop
pop
inc
cs
mov
jl
repz
push
and
mov
addr16
ret
pop
inc
aaa
mov
outsl
sub
inc
icebp
out
xlat
mull
dec
add
lds
fwait
mov
rcll
push
push
lods
jae
lcall
out
push
xchg
adc
je
and
or
ret
mov
adc
add
xor
insb
add
push
add
hlt
out
nop
mov
xchg
leave
lcall
aas
add
pop
sub
lock
out
pop
ja
xor
inc
rcrb
loope
cmp
into
push
mov
mov
movb
rcrb
mov
into
data16
sbb
out
mov
adc
ds
fsts
xor
sahf
jmp
mov
test
in
cmp
stos
adc
cmpsl
xchg
push
scas
mov
fcoms
repz
stos
cmc
lahf
imul
aam
lahf
outsl
pushf
adc
and
aad
es
dec
fdivs
sub
jae
push
iret
add
mov
pusha
ficompl
inc
fisttpl
nop
hlt
repz
insl
cli
push
mov
nop
int
add
nop
sub
clc
mov
xchg
inc
xchg
lods
add
mov
cwtl
mov
or
mov
js
in
test
or
mov
cld
sbb
stos
hlt
mov
popf
and
outsl
adc
js,pt
cmp
sbb
and
sbb
iret
mov
ret
imul
jmp
pusha
mov
or
xchg
dec
sbb
mov
and
daa
aaa
mov
xor
push
xor
popf
or
sarb
daa
pop
xlat
lea
add
das
call
inc
and
jo
scas
ror
pop
cmpsb
aam
jl
sahf
pop
mov
xor
dec
js
call
aad
jle
add
push
sbb
ficoml
ds
jbe
dec
lods
cmp
out
xchg
sbb
cmc
mov
cmp
add
pop
dec
pusha
rorl
mov
scas
xchg
addb
ljmp
and
cwtl
loope
and
or
push
test
jl
lahf
inc
and
lods
or
mov
adc
data16
lret
adc
push
sbbw
lea
mov
xor
fstps
shlb
shll
add
xor
addb
mov
lock
xor
push
and
and
ret
iret
lcall
enter
je
ds
filds
fdivs
outsl
dec
hlt
fbld
loop
push
jge
jecxz
in
push
stos
rol
and
mov
dec
xor
mov
pusha
inc
add
callw
and
das
loopne
mov
mov
and
xadd
shr
imul
shl
lret
into
pop
cmp
adcl
fsub
mov
repz
in
adc
pop
sarb
loopne
jl
dec
add
std
pop
mov
xor
imul
jns
xchg
inc
scas
sbb
lds
and
jns
dec
loop
xor
shlb
pop
arpl
inc
pusha
dec
push
xor
mov
insb
and
adc
sbb
pushw
movsb
inc
ficoml
inc
dec
jnp,pt
xchg
aam
stc
movsl
jge
mov
nop
mov
or
adc
cmp
mov
les
into
sbb
jbe
getsec
imul
jns
imul
pop
jno
dec
fisubrl
fs
test
sbb
mov
fildll
pushf
xor
or
test
and
mov
repz
push
int
dec
mov
jne
mov
std
add
mov
inc
and
jo
push
or
lret
outsl
sbb
andl
outsl
adc
jb
imul
out
jmp
push
inc
dec
lcall
mov
ret
std
outsb
cld
sbb
int
add
xor
loop
data16
lahf
sbb
cwtl
push
bound
jb
sub
dec
dec
cmc
mov
cltd
sahf
das
test
ds
add
addr16
mov
mov
icebp
aaa
nop
and
cmpsb
jl
cmpsb
mov
mov
xchg
jp
push
xlat
filds
pop
mov
xchg
enter
in
cltd
mov
cli
push
or
jb
xor
out
test
ficompl
pushf
add
test
mov
inc
mov
mov
pop
test
jnp
pop
inc
fildl
mov
adc
negb
and
aad
mov
into
test
add
scas
jmp
les
rcll
ror
push
and
les
pop
push
push
xchg
sbb
dec
lret
ljmp
stos
xchg
or
jbe
adc
add
dec
into
adc
pusha
add
call
mov
rcl
push
das
pop
inc
imul
ret
push
xor
adcl
mov
mov
mov
dec
push
push
pop
into
sub
mov
cmp
adc
fiadds
xor
sahf
and
cmc
shl
out
sub
mov
or
cmpl
mov
dec
stos
inc
sarl
pushf
in
push
mov
mov
lret
fiadds
addl
cmpsl
mov
sub
test
xor
dec
arpl
sti
mov
lock
cmpsl
cld
or
adc
arpl
imul
cli
mov
add
movsl
imul
inc
fiaddl
xor
stos
sub
xchg
sub
fwait
xchg
adc
dec
push
push
mov
xchg
test
dec
repz
ljmp
sahf
stos
jmp
add
xchg
aaa
push
sbb
and
sbb
out
xchg
mov
ljmp
lods
inc
cmp
mov
mov
mov
add
lea
inc
push
pop
cmp
cli
inc
pusha
std
adc
outsl
cmp
inc
loopne
sub
loope
jne
fidivl
std
into
jb
addl
dec
cmp
outsb
mov
pop
inc
lahf
cs
ret
arpl
addr16
and
add
fucomp
rorl
arpl
xchg
add
mov
insl
sbb
push
ja
andl
or
jb
jno
jo
jl
in
hlt
adc
rorb
ds
xor
loopne
pop
dec
imul
jecxz
pop
imul
dec
xchg
cmc
and
fsts
in
fcoml
outsb
xor
inc
and
imul
icebp
cmpsb
popf
mov
out
add
xor
sti
and
cmp
or
aam
dec
in
mov
fsubrl
xor
inc
mov
add
jp
dec
push
lea
rorl
call
pop
sub
pop
sub
mov
jnp
cmp
repnz
lods
jae
lcall
jmp
jne
jl
or
outsb
push
mov
lret
scas
test
fdivl
or
ds
aad
jle
andl
mov
sub
sub
mov
mov
or
adc
stos
rcrl
call
out
add
add
jmp
inc
mov
imul
pop
push
lods
or
addr16
fsubr
adcb
mov
cmp
ficompl
xchg
aam
fwait
xchg
lods
daa
mov
mov
fbstp
mov
into
mov
push
jmp
cmp
sarl
outsl
pop
xchg
add
mov
push
adc
or
fiadds
cltd
mov
push
dec
mov
inc
popf
pop
mov
push
insl
jne
aam
and
pop
imull
pop
addl
xchg
lret
adc
jns
add
gs
jnp
or
mov
mov
mov
push
into
sub
adc
mov
adc
inc
mov
jge
adc
push
jo
repz
rorl
mov
mov
inc
stc
adc
mov
dec
push
inc
pop
dec
je
pop
inc
scas
jg
adc
or
lcall
es
jmp
xchg
cmpsb
sbb
loope
mov
cmp
or
cmp
or
dec
lods
xchg
popf
push
or
sub
mov
mov
add
xor
movsb
ficomps
xor
jne
inc
jae
cmc
ret
and
push
stc
insl
inc
and
jl
jp
xor
outsl
test
js
dec
fs
in
fists
test
mov
rorb
mov
std
cmp
push
adc
sti
push
fcmovnbe
arpl
scas
ljmp
xor
jae
inc
jns
lahf
mov
out
cld
cmp
cmp
aam
cmp
add
or
int3
xchg
in
fiaddl
orl
idivb
mov
aaa
lods
jbe
ds
or
ds
xchg
imul
push
jo,pt
mov
fnop
mov
test
loope
push
not
jno
sub
out
mov
dec
out
outsl
jge
fildl
fists
popa
int3
mov
inc
hlt
and
mov
mov
jecxz
scas
gs
push
test
lret
aam
pop
mov
mov
scas
inc
pop
outsl
adc
adc
or
insb
add
scas
jbe,pt
mov
xor
jg
add
mov
test
into
mov
jg
hlt
sbb
aas
fnstcw
and
out
sti
cld
jl
cmp
stos
xor
cld
cltd
fdivl
les
inc
adc
loop
xchg
ret
jmp
mov
mov
inc
add
pushf
adc
dec
pop
pushf
adc
inc
dec
jnp
mov
mov
pop
ror
push
movsb
xor
adc
inc
or
inc
mov
xor
jbe
andb
shrl
push
fbld
jns
push
stos
push
dec
adcl
dec
fsubl
js
int
stc
cwtl
cmp
call
sbb
mov
sahf
je
mov
pushf
add
aas
or
push
lea
rclb
cwtl
mov
jecxz
in
sub
in
mov
or
arpl
test
fldcw
in
dec
bound
or
pop
adc
shr
pop
dec
sbb
push
mov
fisubrl
gs
outsb
or
jle
in
test
test
mov
fcmove
mov
push
pop
mov
shll
fistpll
fstps
inc
fisttpll
and
aas
loopne
jns
dec
xlat
push
aam
shll
loop
frstor
and
push
jge
or
test
mov
cwtl
pop
sahf
rcrl
loopne
inc
jno
sbb
mov
xlat
pop
mov
ficoms
lock
mov
popa
lahf
dec
adc
jno
stos
popa
lods
es
lock
xchg
xchg
lods
aas
push
jno
push
jmp
dec
mov
aad
push
add
mov
jo
sub
lods
sbb
jp
into
add
cli
lret
fwait
imul
xchg
jbe
mov
cld
adc
sbb
inc
out
repz
jb
sbb
lret
sub
dec
in
push
jg
aaa
cmp
lea
je
mov
lahf
test
sub
jns
jae
cltd
mov
nop
popa
lock
jge
dec
aas
cltd
mov
push
je
pusha
mov
ret
int
cmp
dec
and
addb
lock
sub
fisttps
in
sub
shrb
jp
pop
repz
pop
xor
xchg
mov
cmp
jg
inc
shr
out
xchg
fwait
pop
int
jp
pop
mov
inc
jb
cli
dec
addl
ror
scas
xor
jae
adc
and
cmc
push
mov
leave
rorl
mov
jecxz
cli
dec
enter
sub
inc
adc
cwtl
ljmp
adc
or
pop
pop
insl
sarl
mov
incl
xchg
fbstp
out
cmc
sbb
mov
push
and
pop
and
out
and
inc
jle
call
arpl
jne
mov
shll
mov
sbb
xor
scas
roll
pop
insb
mov
xor
add
mov
iret
mov
lcall
mov
push
lock
or
adcl
popa
fs
test
shll
jecxz
out
ljmp
icebp
fistpl
add
test
jnp
scas
test
mov
mov
cwtl
cmp
bound
shrl
cmpsb
cwtl
movsb
pop
stos
mov
jnp
testl
lret
testl
shr
cmp
movsl
int3
gs
lods
arpl
mov
xchg
bound
aas
mov
xor
stc
pushf
mov
mov
push
jecxz
inc
hlt
mov
mov
cmp
cmp
cli
lds
dec
gs
jp
ja
or
push
push
add
jae
movsb
xor
push
repz
mov
cmp
push
adc
mov
nop
push
std
sbb
addr16
push
add
enter
jo
push
repnz
xchg
lahf
push
xchg
or
cmp
and
sti
jb
xchg
enter
cli
or
addr16
or
and
fucomi
sbb
or
mov
xchg
or
ds
inc
test
sbb
mov
dec
test
xchg
sub
gs
add
stc
mov
fwait
pop
mov
mov
lock
pushf
inc
dec
or
xchg
cs
dec
xchg
inc
add
push
or
adc
stos
mov
je
test
push
fcomp
adc
in
popa
in
iret
imul
adc
inc
pop
cli
fimuls
test
inc
scas
mov
jno
fisttpl
or
jg
mov
pop
shl
xchg
dec
xor
push
gs
insb
cli
ja
inc
mov
pop
and
mov
push
loopne
sub
dec
pushf
cmp
fisttpl
dec
inc
adc
ljmp
sahf
stos
or
pop
jo
dec
sbb
inc
cmp
pop
xor
sbb
or
mov
or
xchg
sbb
ds
daa
jp
test
jns
test
rorl
or
jns
fs
inc
add
sub
sarb
lea
jno
mov
cmp
aad
xchg
and
push
incb
int
repnz
lret
movsb
and
mov
jo
out
mov
int3
jb
and
ja
nop
aam
adc
lds
mov
addr16
arpl
cmp
nop
xchg
xor
sbb
jnp
call
sarl
mov
jb
inc
push
in
imul
cmpsl
cmp
mov
xor
popa
jbe
xchg
fnsave
push
lods
sub
and
bound
pop
pop
jns,pn
fstl
paddusb
es
imull
cmpsb
mov
jecxz
dec
and
mov
movsb
sarl
mov
and
int
pop
add
dec
iret
xchg
lcall
cmp
push
dec
cmpsl
pop
add
sub
push
push
push
insb
movsl
test
lcall
mov
add
stos
aaa
fisubs
sbb
mov
inc
and
or
mov
push
lret
adc
cli
push
jb
mov
inc
ljmp
push
aaa
addr16
sbb
sbb
pop
mov
or
sub
test
add
xor
jp
cmp
pop
aam
loop
sbb
movsb
cmp
jns
xlat
dec
js
repnz
sub
fiadds
mov
lds
fsubrl
dec
xchg
je
fidivl
inc
sub
xor
or
pop
out
faddl
inc
roll
sub
and
adc
jl
sub
or
sub
pop
push
jnp
inc
jl
es
fistpl
aaa
rcrl
lret
xor
sahf
cmc
xor
lret
addr16
mov
int3
xchg
int3
or
push
mov
scas
push
enter
out
loopne
gs
out
int
and
mov
std
push
int
aad
je
into
in
push
cltd
mov
jge
adc
pop
and
test
cwtl
dec
in
mov
ret
scas
jge
bound
add
pop
or
push
and
mov
mov
pop
cmpsb
inc
out
inc
inc
sbb
shlb
push
call
clc
lock
dec
bound
pusha
adc
and
inc
mov
add
xor
repnz
rcrl
out
call
cmp
std
clc
sarb
cwtl
data16
jg
jb
mov
mov
mov
punpckhdq
mov
push
stos
js
push
addr16
cmp
mov
bound
push
lods
setns
jnp
or
daa
cmp
scas
lock
pop
int3
xchg
das
jl
icebp
xchg
scas
xorb
jecxz
dec
push
push
or
ret
push
cmc
xchg
orl
sbb
lcall
dec
xor
or
pop
fs
or
or
outsb
shufps
jbe
jge
fwait
sub
cmp
lret
je
in
es
dec
xchg
cli
dec
mov
sub
mov
out
imull
adc
das
neg
jae
popa
outsb
out
push
inc
mov
icebp
movsb
bound
mov
lahf
clc
stc
push
ficomps
mov
xchg
push
arpl
testb
arpl
es
sbb
outsb
sahf
xchg
pop
and
add
test
insl
idivl
sub
xchg
in
repz
dec
push
fistps
sub
mov
and
and
pop
pop
xchg
push
scas
jp
loop
sbb
sbb
es
jmp
pop
xchg
jo
jge
adc
add
enter
dec
subb
scas
divb
jns
lret
push
cs
lahf
daa
adc
mov
jbe
push
add
bound
pushf
int3
inc
lock
fisttpl
mov
lahf
adc
push
pop
addr16
push
dec
or
int
mov
or
adc
sub
ss
ljmp
jbe
mov
xchg
imul
fcoml
xor
mov
xchg
xchg
pushf
outsl
lods
stos
jge
mov
or
lret
pusha
dec
popa
pop
xchg
inc
add
add
xchg
mov
mov
push
mov
sbb
add
xor
cmc
enter
and
inc
insl
adc
mov
shl
imul
pop
lar
lods
or
mov
int3
push
das
inc
dec
cmc
stc
loop
bound
test
mov
shll
and
lret
add
mov
or
dec
sahf
popf
fs
sahf
insb
lods
and
push
add
stos
iret
xor
lods
cmpsl
push
pop
dec
mov
inc
sub
mov
mov
in
jo
pushf
xor
out
enter
fwait
inc
lret
test
adc
pop
lahf
aad
sbbl
sbb
or
fsub
cwtl
xlat
mov
enter
idivb
xorb
pop
sbb
cwtl
inc
mov
cmp
out
mov
jae
and
cmp
cmp
add
and
push
hlt
mov
loop
xchg
add
xchg
rorb
xchg
add
pop
mov
imul
shl
add
adc
cwtl
dec
shl
pop
fwait
dec
mov
jecxz
push
call
enter
inc
inc
into
xchg
clc
loope
xorl
push
scas
sbb
mov
and
mov
jmp
lock
mov
pusha
insl
mov
push
loope
fsubrl
es
push
scas
shll
inc
xchg
ljmp
aam
mov
in
and
adc
sbb
push
jp
or
lea
aas
pop
daa
call
jmp
dec
xchg
adc
negl
dec
cmp
dec
jmp
fstps
or
aas
cmp
mov
jecxz
xchg
shrb
es
or
push
popf
dec
adc
or
pushf
add
xor
test
sahf
inc
inc
sbb
xchg
mov
pusha
gs
xor
je
aaa
sbb
std
xor
leave
sbb
ds
imul
pop
push
or
decl
or
daa
cmpsl
outsl
xor
rclb
in
das
add
jge
out
repz
imul
sbb
xchg
mov
pushf
cmp
ja
das
add
and
mov
std
movsl
pop
test
mov
arpl
adc
sbb
adc
sub
test
sbb
repnz
inc
xchg
push
test
pop
jle
scas
movsl
hlt
cmp
addl
push
and
jge
repnz
stos
out
add
out
out
xchg
fwait
cmpsb
dec
aaa
jge
and
dec
ss
test
test
xchg
mov
cmp
aaa
cld
mov
inc
xor
mov
mov
test
movsl
clc
ja
jge
fwait
ret
or
inc
loop
jns
sti
sahf
loope
lahf
lahf
sahf
adc
mov
repnz
jecxz
xor
adc
out
add
push
gs
jp
out
mov
std
scas
or
mov
lcall
push
mov
shrb
and
push
mov
xchg
mov
out
incb
inc
xchg
in
push
mov
fisttpll
jo
push
ja
sub
mov
into
mov
mov
mov
sbb
addr16
fcmove
cmpsl
ret
lcall
je
ss
dec
xchg
aaa
mov
in
adc
mov
jp
sahf
push
mov
push
pop
cld
push
mov
test
sbb
mov
nop
daa
xchg
sub
movsl
imul
es
lock
push
push
nop
sbb
mov
push
int3
movsb
mov
jp
push
inc
fimull
mov
repnz
adc
adc
aaa
lock
xchg
popa
rorl
aad
cwtl
lahf
or
dec
pop
es
in
aam
mov
jmp
cmp
adc
daa
cmc
lods
int
ss
add
adc
cmpsb
xchg
int3
jbe
push
pop
shlb
xchg
push
cmp
cltd
fdivrp
aas
pop
popf
add
mov
push
lds
push
jp
lods
cmpl
pop
pop
ss
jmp
cs
mov
push
inc
xor
sbb
cmp
andl
dec
sub
imul
pop
xchg
sub
loop
scas
call
fidivrs
cmp
dec
popf
aas
cmpsb
aas
xchg
jns
xchg
mov
or
xor
rolb
loope,pn
add
cmp
hlt
jecxz
clc
inc
dec
jnp
into
popa
fnsave
fbstp
xor
jno
push
int
cmpsb
xacquire
adc
outsl
scas
xchg
repz
push
ret
call
std
pop
push
je
pushf
fistps
jl
add
insb
ficoml
jns
outsl
and
jbe
fmull
hlt
sub
pop
jecxz
pop
lea
std
lds
insl
mov
jne
sub
lret
scas
sub
add
mov
int3
cmp
aas
mov
insb
arpl
sub
ficoms
xchg
xchg
sub
mov
xor
mov
fxch
mov
out
negb
mov
push
cld
mov
scas
sub
fistpl
cmp
xor
lds
mov
enter
data16
xchg
lret
push
dec
stc
cs
in
es
xlat
outsb
sub
adc
xor
int3
add
cmp
fiadds
in
or
pop
sbbb
mov
popf
and
into
cmovb
xchg
filds
mov
sti
mov
mov
insb
or
pop
mov
inc
cmp
std
jmp
mov
push
sbb
nop
pop
das
cmpsl
cli
fimuls
out
mov
push
mov
and
mov
cmpsl
cmpsl
inc
adcl
popf
xor
enter
push
ret
in
stos
xorb
rcll
jns
andb
cmp
add
xor
adc
mov
stos
cmp
xchg
and
aam
dec
mov
inc
xor
mov
iret
and
sahf
dec
je
xor
popf
sub
cmpsb
notl
movsb
jbe
xchg
jge
push
nop
addr16
cmp
clc
sbb
add
dec
jae
pop
je
mov
xor
mov
push
jg
sar
mov
mov
mov
out
mov
fadds
in
sarb
sub
cmp
sbb
popf
mov
push
loop
jl
xor
dec
nop
adc
and
fsubs
jg
or
sub
sbb
jbe
xchg
adc
test
bound
lods
jecxz
sbb
pop
jno
leave
jae
xor
popa
push
testl
mov
inc
or
cmp
test
cmc
addl
lea
popa
enter
xchg
mov
cmp
push
enter
push
dec
add
out
ficompl
add
loop
xchg
and
int
xor
cli
and
stc
cli
arpl
lods
shr
cmp
cs
adc
add
mov
push
shll
push
sbb
xchg
fmuls
aas
cmp
add
push
pop
loopne
mov
mov
iret
rcr
fs
pushf
lods
pop
callw
hlt
push
sti
jl
push
push
das
insb
pop
lds
cwtl
cs
xchg
lcall
mov
sub
jmp
mov
mov
sbb
fcmove
cli
xlat
adc
out
xchg
stc
sbb
jle
ljmp
sbb
lret
sbb
loope
ja
mov
jg
pop
negl
in
ja
mov
popf
loopne
inc
mov
mov
mov
add
movb
clc
aaa
dec
dec
imul
xchg
int3
xchg
sbb
xchg
cld
fsubrs
movb
xchg
jl
sbb
xor
add
into
jmp
mov
ds
dec
sub
testl
mov
or
js
js
xchg
fstpl
and
xor
aas
lods
push
lds
or
mov
mov
mov
xchg
cmp
sti
daa
in
sub
xor
push
pop
cli
in
rorl
popf
sbb
jmp
mov
push
add
test
popf
sti
loop
ljmp
dec
xchg
mov
les
arpl
push
shlb
mov
adc
xlat
adc
xor
and
dec
in
fcompl
sbb
fs
mov
iret
cmpsb
xor
mov
iretw
add
cmc
push
pusha
popa
mov
adc
icebp
jae
xchg
sbb
add
dec
xor
mov
std
mov
push
enter
fildl
mov
clc
jo
sbb
pop
in
dec
push
out
scas
pavgb
es
cltd
inc
push
enter
in
sub
ss
ja
stc
cwtl
popa
xchg
jbe
jne
scas
loopne
cli
mov
and
cmp
mov
jo
jns
in
aam
rcrb
adc
cmp
mov
xchg
ljmp
cmpsb
add
mov
shrb
fnstenv
jmp
sbb
mov
cwtl
cmp
int3
sti
sbb
mov
ja
adc
dec
jle
in
stc
sub
pop
push
jns
push
sbb
mov
push
xchg
imul
push
sbb
cmp
jo
cmp
fdivl
rorb
sub
sbb
dec
dec
dec
popa
inc
fwait
jo
pusha
cmc
mov
int
jg
xor
popa
scas
mov
add
add
pop
dec
inc
xor
push
sahf
mov
cld
mov
pusha
fmuls
into
outsb
andb
enter
notb
mov
sbb
push
sub
mov
inc
out
clc
inc
aas
popa
or
lcall
sbb
ljmp
dec
arpl
mull
cld
addr16
inc
mov
pop
adc
mov
sbb
pop
xchg
lcall
mov
lock
mov
sbb
adc
cmpsb
push
fwait
sbb
outsb
sub
lahf
inc
ss
stos
faddl
xchg
scas
cmp
icebp
fsubp
cwtl
xchg
outsl
daa
mov
or
rcr
pop
mov
or
push
pop
jecxz
push
bound
push
cmp
lds
idivl
sub
xchg
pop
repz
lahf
jbe
scas
mov
ja
adc
xchg
mov
mov
xchg
scas
out
fiadds
xchg
out
adc
loop
ror
mov
sti
data16
test
xchg
mov
arpl
cmove
inc
imul
mov
fisttpll
push
mov
sub
iret
popf
inc
xchg
icebp
jg
jg
sbb
mov
bound
pop
mov
mov
mov
pop
inc
inc
leave
lret
xchg
int
xchg
jle
pop
mov
fsubrs
inc
push
in
and
pusha
and
roll
popa
mov
mov
add
sub
jae
out
mov
push
and
mov
call
insb
movsb
or
hlt
ret
sub
push
daa
mov
repz
mov
es
enter
jns
pop
sub
arpl
sbb
dec
mov
mov
addr16
fcompl
xchg
pop
scas
icebp
clc
push
lea
mov
imul
clc
mov
xor
rcl
add
inc
gs
lcall
and
bound
and
pop
scas
out
jmp
subb
lret
push
or
cmpsl
fnstcw
jns
bound
test
dec
mov
mov
imul
cmpsl
sub
int3
add
jno
mov
lods
inc
mov
test
jle
out
and
adc
loope
dec
lcall
es
out
enter
cmp
xchg
pop
cltd
fidivrs
ljmp
fldcw
pop
xor
insl
nop
scas
loopne
push
dec
dec
lahf
mov
ret
aam
dec
test
fists
bound
out
adc
or
sahf
enter
ror
mov
jle
dec
jns
xor
sbb
add
mov
rorl
mov
popa
add
push
fsub
jnp
add
push
in
lods
jae
and
test
sbb
xchg
jae,pt
sub
xor
or
fstl
xchg
mov
mov
xchg
shll
movsb
adc
movsl
add
into
jnp
xchg
outsl
push
sbb
adcb
popa
inc
cs
push
rcrb
pop
rclb
cs
dec
lea
inc
aaa
xchg
or
mov
stc
sub
mov
cmc
dec
sbb
lret
cltd
inc
movsb
xor
aaa
imull
jge
mov
pusha
out
enter
stos
or
push
pushf
add
lods
imul
sbb
mov
push
lea
mov
ja
int3
cmp
add
cmp
inc
mov
push
fisubs
in
test
xchg
outsw
push
nop
push
push
mov
nop
rcll
or
pusha
hlt
int3
lret
xor
fdivl
mov
in
push
bswap
out
stos
std
lahf
ds
shr
push
in
int
jle
out
js
ja
cmp
fldcw
jmp
mov
into
ds
ret
mov
push
hlt
sub
mov
test
aas
hlt
xlat
pusha
sti
jne
add
lahf
scas
push
mov
mov
pop
push
cmpsb
or
mov
test
xor
ds
pusha
movsl
pushl
adc
jg
mov
inc
inc
add
xlat
andb
mov
rorb
adc
xchg
adc
sub
inc
add
jle
adc
mov
lret
ljmp
inc
jl
sbb
xchg
xor
call
mov
fistl
push
ds
jl
test
cmp
ljmp
or
leave
pop
inc
adc
je
in
pop
lret
mov
cmc
mov
sub
loop
mov
add
test
pop
movsb
int
rcrl
xor
fbld
sbb
push
mov
dec
mov
cmp
std
xchg
aas
pop
mov
adc
cli
shl
pop
add
mov
dec
enter
bound
leave
xchg
add
sbb
fnsave
cmpsb
out
inc
cmpsl
inc
push
adc
cmpsb
js
outsl
bound
xchg
and
dec
das
sbb
mov
mov
xchg
shrb
inc
adc
lret
lret
xchg
cmp
insl
adc
sub
clc
add
inc
add
adc
xlat
rolb
aam
arpl
ret
mov
mov
fdivl
std
mov
mov
sbb
mov
jno
repnz
lods
je
std
or
mov
mov
test
es
and
icebp
js
fdivl
out
sub
les
fists
lcall
icebp
mov
dec
cmp
push
call
inc
adc
iret
ds
sahf
push
lock
mov
shr
aad
rol
add
adc
or
ds
inc
fnsave
repnz
xchg
test
imul
push
fisubrl
push
xchg
das
loope
shr
insl
cmp
pop
mov
jns
pop
fisubrs
xor
das
fucomip
adc
and
out
in
push
xchg
jmp
sub
mov
mov
pop
lods
int3
push
dec
sub
pop
push
mov
and
sub
push
adc
xchg
dec
mov
int
and
test
dec
fcomps
sub
bound
dec
insb
push
aad
sub
outsl
ja
sub
and
push
xchg
rcrb
dec
or
stc
shlb
xor
cmpsb
lea
jmp
sub
mov
and
testb
jbe
js
cmp
mov
movq
gs
or
daa
dec
xchg
sbb
hlt
imul
sbb
lods
adc
mov
into
xchg
cld
mov
bound
and
xor
mov
dec
dec
clc
sub
xorl
xor
mov
push
xchg
jecxz
dec
sbb
cli
adc
cmp
arpl
dec
adc
xor
sub
cmp
inc
insl
sbb
lea
shll
int
out
fs
inc
add
ret
cmp
lods
enter
stc
pushf
sbb
mov
mov
dec
xchg
popa
out
xor
xchg
and
int3
cmpsl
pop
lods
push
and
popa
add
loope
xlat
or
mov
lock
out
jae
inc
ret
pop
adc
test
and
or
mov
repz
cmp
in
popf
push
lahf
lret
mov
cwtd
cmp
leave
rol
cmp
aaa
ds
jb
push
mov
clc
mov
dec
decb
int
das
fcompl
inc
sarl
dec
ret
in
dec
mov
stc
inc
add
sbb
shrb
rcll
ljmp
dec
add
lea
mov
fmuls
push
in
test
aad
daa
dec
mov
ljmp
cmp
xchg
push
push
mov
adc
mov
lds
imul
mov
jnp
loop
adc
pushf
and
mov
jbe
fildl
xchg
xchg
push
sbb
rclb
jecxz
dec
push
ret
hlt
pusha
xor
sub
sti
xor
xor
sbb
push
jno
push
push
pop
sbbl
xor
pop
negb
xchg
dec
loopne
mov
fwait
pop
jae
or
dec
sub
sbb
sub
movb
sbb
scas
subl
mov
outsb
scas
pop
cli
add
jb
jno
lcall
push
je
mov
jge
jae
push
xchg
cmc
push
adc
mov
xchg
mov
pushf
pop
lods
mov
jp
loope
int3
stos
in
call
jle
mov
adc
sbb
dec
frstpm(287
xor
movsb
bnd
mov
mov
mov
sub
and
inc
in
mov
ja
cmp
cmp
inc
sbb
cltd
mov
stos
push
xchg
mov
and
lret
bound
push
push
push
sbb
out
and
dec
cmc
mov
or
sub
jg
push
push
sbb
xor
mov
sahf
push
into
and
out
sahf
xor
sti
test
sbb
mov
pop
xor
jns
and
sub
jg
sub
adc
fs
push
inc
popf
ljmp
mul
xor
sub
fldt
ljmp
pop
dec
lea
pop
call
jl
push
rcrl
ds
mov
bnd
jnp
fdiv
dec
aas
sbb
mov
stos
jns
shrb
sbb
cmpsl
sub
jge
push
cld
mov
push
jl
stos
jp
and
mov
lea
or
lahf
xor
leave
test
je
mov
out
cwtl
pop
cmp
negl
adc
lcall
lods
xchg
pop
and
andb
sub
and
nop
stc
in
in
call
adc
or
loopne
xor
js
jle
adc
rcrl
xor
cmc
mov
cmpsb
mov
sahf
mov
mov
in
add
iret
sub
jbe
push
shll
lcall
sbb
hlt
mov
clc
mov
je
jmp
or
jle
into
lds
repz
test
sbb
pop
js
lock
mov
cli
fidivl
fcmovnb
xor
xor
popf
bound
or
out
sub
cmp
dec
dec
or
fwait
outsb
and
in
stc
and
out
movswl
cmp
fcoml
mov
das
in
into
in
into
cmp
and
jl
xchg
pushf
adc
aas
clc
pop
jg
mov
std
es
mov
inc
mov
cld
add
pop
pop
add
aam
add
lcall
dec
into
mov
inc
outsl
cmp
jle
jno
jns
inc
push
adc
shlb
xchg
orl
pop
xor
out
jnp
fstpl
mov
outsl
add
cmpsl
lods
mov
insb
das
out
sub
cmpl
aad
cmp
lea
mov
mov
adc
cmpsb
sahf
ret
dec
ljmp
dec
shll
subb
daa
sub
sbb
enter
and
cmp
lretw
and
mov
pop
cmp
or
imul
stos
inc
fnstcw
cmpsb
push
stc
movsl
fbstp
add
or
cli
out
xor
cmp
imul
push
pop
ds
pop
lret
inc
or
sub
mov
test
leave
ja
icebp
mov
sub
cmp
mov
mov
loopne
pusha
inc
test
jbe
call
test
or
xlat
nop
inc
mov
je
jecxz
lods
popa
mov
cmp
aam
in
mov
xor
adc
addr16
jmp
dec
push
rcrw
imul
int3
lahf
pusha
or
push
dec
or
jbe
and
add
add
dec
fistpl
sahf
lods
pop
adc
push
popa
and
mov
sbb
adc
xor
jle
inc
stc
push
push
or
in
mov
arpl
pushf
das
clc
sub
dec
pop
lahf
jge
imul
lds
lods
in
cmp
movsl
adc
sahf
jmp
sub
aas
pop
jp
cmp
sbb
push
sub
lcall
pop
mov
push
ds
ret
pcmpeqb
push
jp
dec
push
mov
mov
std
mov
dec
or
sbb
bndldx
test
inc
and
lds
adc
cmc
sti
fistl
repz
add
xor
add
adc
addr16
sub
push
xchg
repnz
mov
imul
fisttpll
pop
mov
cmp
or
xchg
pop
or
xorl
mov
jle
das
xor
and
inc
gs
pop
dec
jbe
adc
or
decb
or
mov
adc
dec
cmp
mov
sbb
roll
cmp
iret
and
int3
jbe
loop
addr16
jecxz
lahf
into
sbb
test
fsubrl
push
imul
sub
and
sub
aaa
adc
jb
and
ret
mov
shll
ret
cltd
loop
bound
sub
fstpl
mulb
inc
test
mov
xchg
test
hlt
mov
cmp
lea
jae
aad
inc
add
jg
push
xor
xor
push
pop
lahf
sarl
adc
or
frstor
enter
jb
mov
inc
out
ret
fs
mov
xor
push
jmp
das
mov
movsb
and
mov
lret
js
xor
jle
add
lahf
fidivrl
xlat
rcl
inc
sub
jl
imul
xchg
xchg
mov
pusha
push
das
lock
aam
pushf
fwait
jne
sarb
ja
scas
dec
cs
stos
and
test
test
std
cmp
fldenv
or
and
pop
add
test
and
call
sub
mov
jg
cltd
in
out
imull
addr16
negb
in
xor
out
test
popl
inc
mov
push
dec
mov
adc
sub
mov
out
jo
pminub
outsb
or
scas
pop
mov
mov
les
ret
pop
mov
push
inc
inc
stos
dec
mov
and
mov
inc
sahf
add
pop
mov
push
faddl
mov
dec
xor
je
mov
into
mov
aas
shr
or
daa
add
dec
popf
ds
decb
nop
cmp
pop
orl
cmp
daa
pop
mov
push
mov
add
push
jae
xor
mov
scas
mov
inc
xchg
xchg
movsb
jae
adc
sub
xor
ds
data16
mov
lock
dec
inc
lock
popf
insl
ds
fneni(8087
pushf
les
pop
mov
push
cmp
ss
lahf
pop
mov
xchg
sbb
test
inc
divb
cmpsl
push
lcall
adc
inc
sbb
movsb
sahf
pop
insb
test
fs
cmp
js
pushf
fs
je
sahf
xor
sbb
mov
add
roll
cmp
cmp
inc
scas
mov
sbb
cmpsl
sub
jl
dec
or
pop
inc
mov
push
sub
sbb
scas
div
jbe
cli
fiaddl
jns
xchg
into
mov
mov
lods
pop
sub
ljmp
clc
inc
inc
sbb
sub
dec
dec
jbe
sbb
dec
or
jno
inc
jle
sti
sub
xor
or
aad
cli
pop
add
xchg
lods
and
inc
or
push
out
shrb
mov
sti
dec
popa
leave
jne
cmp
shr
fsts
pop
mov
dec
clc
lret
mov
jl
pop
or
jbe
dec
fdivrs
mull
cmp
pop
lret
lret
mov
mov
push
fistpl
dec
mov
sbb
pop
add
pop
int
inc
aaa
or
stos
ffree
jno
aam
cltd
popa
hlt
pushf
jp
fcoml
push
xchg
push
into
leave
ja
mov
icebp
lret
or
mov
inc
cmp
jb
rcrb
lahf
call
or
cmp
stos
xchg
leave
loope
pminsw
jp
add
scas
push
test
fmull
iret
outsl
xor
loopne
add
mov
pop
dec
cs
fisttpll
mov
ljmp
scas
cmp
ds
mov
jecxz
or
and
shr
dec
test
push
jg
xchg
push
cmc
in
jl
lds
cmpsb
add
push
mov
jle
iret
or
jb
leave
inc
rcr
leave
sbb
cld
fisubrl
mov
repz
lods
jnp
or
sbb
ja
movsb
mov
jp
loop
or
out
in
adc
icebp
and
test
jnp
pop
cmp
cmp
cwtl
je
jmp
test
popl
push
cmpsb
lahf
clc
mov
stc
and
outsl
imul
sar
fxch
push
xor
and
loop
rclb
inc
push
addr16
inc
cmp
add
lds
sarb
sbb
pop
divb
jno
aad
jle
int3
xlat
ds
fsubl
cmpsl
stc
aaa
push
fdivrs
out
jbe
mov
jnp
imul
or
int
mov
lds
inc
push
jle
ds
shrl
ret
pusha
movsb
and
lods
add
push
insl
mov
enter
dec
or
cmp
push
orl
stc
xor
mov
stos
aaa
jo
jle
mov
mov
pop
mull
lock
into
mov
pop
sbb
or
mov
ret
mov
sub
push
aaa
lahf
pop
dec
sbbb
mov
loop
xorl
pop
fwait
xchg
mov
pop
rcl
ds
bound
jp
bound
loopne
cmpsb
cli
cs
dec
adc
push
jnp
sub
rcll
mov
in
jns
xchg
push
movsb
into
jno
cmc
mov
test
stc
dec
ljmp
cs
sub
leave
mov
stc
jg
ror
xor
lea
push
js
pop
sbb
movsl
sahf
jp
inc
push
addb
lcall
mov
mov
lret
xor
cmc
adcb
pop
negb
fs
cwtl
inc
out
adc
and
push
notl
jbe
int
xchg
insb
cltd
add
adc
adc
sbb
cmpsl
aad
out
ret
fdivs
add
loop
mov
dec
pop
stc
cmp
ljmp
sbb
roll
dec
sub
jae
mov
fwait
dec
push
push
arpl
lahf
pop
cli
mov
or
mov
repz
fdivs
jle
adc
fistpl
test
mov
mov
cltd
imul
push
ret
lods
xchg
insb
ljmp
mov
inc
mov
xor
xchg
xchg
cmpsl
int3
fcoms
fdivrs
mov
pop
xchg
add
repz
fmulp
mov
inc
mov
and
mov
inc
stos
mov
lret
sbb
or
xorb
nop
fwait
adc
je
les
jo
mov
movl
shll
sbb
std
arpl
push
fldl
scas
bound
push
sub
jno
add
addb
fs
fildll
lret
fwait
pop
and
mov
fs
repnz
shrl
out
inc
aaa
lcall
imul
pop
in
xchg
mov
push
in
outsb
add
arpl
sbb
sbb
mov
inc
out
mov
and
fsts
mov
add
adc
mov
pop
adc
jge
fbstp
mov
pop
cltd
and
add
ss
aad
push
xchg
adc
push
sbb
pop
pop
leave
mov
push
ret
add
add
stos
dec
rcr
enter
popa
pop
inc
xchg
push
add
push
xchg
icebp
mov
pop
xor
xchg
pop
std
pop
ret
gs
out
mov
jl
lcall
cmp
or
aam
jg
les
xchg
sub
and
jae
imul
dec
fs
loop
add
mov
add
jns
mov
test
rcr
or
jae
ficoml
xor
jb
lahf
mov
mov
or
test
es
pop
cltd
or
xchg
data16
inc
sarl
test
push
jp
fisttpll
popa
push
outsb
xlat
push
int
pop
jno
mov
and
pop
cmp
in
pusha
pop
pop
pop
pop
addr16
jmp
imul
filds
push
mov
sbb
repz
push
rclb
mov
sub
pop
pop
fs
sahf
aam
pop
push
adc
outsl
dec
adc
fdivs
ljmp
jecxz
notl
add
in
or
and
mov
fwait
inc
push
inc
pop
pushf
imul
inc
mov
sub
xlat
sarb
push
mov
lret
out
xlat
hlt
lock
mov
xchg
push
arpl
es
xchg
je
popa
jle
inc
into
add
pop
filds
js
fldt
pop
sbb
outsl
mov
cwtl
ljmp
scas
jns
lods
and
push
and
mov
mov
xor
loopne
mov
push
scas
repz
sti
xor
and
lods
inc
xchg
ljmp
out
cmpsl
fstpl
call
jmp
mov
push
js
xlat
jg
or
jp
xchg
pop
imul
cli
push
pop
dec
imul
ljmp
les
pmaxsw
test
loopne
sbb
xchg
xor
jmp
xor
or
mov
in
out
cmpsl
mov
jb
inc
inc
xchg
jecxz
lret
add
mov
cmpsb
test
iret
popf
mov
std
push
stos
dec
test
inc
mov
add
leave
daa
pop
and
in
repz
and
stc
gs
into
addb
mov
mov
mov
pop
jp
inc
test
xor
mov
repz
pushf
push
shrl
inc
xchg
in
xchg
daa
cmc
pop
xchg
jb
loop
mov
in
jl
loopne
xchg
dec
jle
cltd
pop
mov
add
add
add
iret
mov
mov
adc
mov
adc
outsl
lret
pop
subl
dec
int
pop
pusha
clc
inc
push
mov
adc
pop
pop
insb
into
sbb
fwait
iret
cmp
js
mov
cmp
js
dec
repnz
xchg
test
and
mov
sbb
jecxz
pop
jae
pop
gs
test
lcall
inc
jecxz
sti
jg
sub
out
xor
xchg
hlt
jp
adcb
and
arpl
lods
ja
mov
inc
ds
pop
lock
adc
adc
mov
rcrb
bound
and
inc
push
out
rol
push
repz
sub
imul
xor
jnp
jp
cwtl
xchg
lahf
sahf
xor
sbb
xlat
push
and
mov
shl
aaa
lods
pop
popf
mov
popf
lahf
outsb
pop
data16
or
dec
lret
rorb
sub
ljmp
xlat
data16
fidivs
lahf
test
repnz
mov
call
jmp
mov
adc
xlat
sahf
insb
sub
inc
shr
hlt
adc
pop
stos
in
stos
xor
out
mov
movaps
shll
leave
addb
jecxz
enter
push
out
and
outsb
sbb
xor
xor
ss
sbb
or
mov
pop
addr16
mov
lcall
jecxz
in
pop
sahf
sub
lods
loopne
inc
outsb
pushf
les
pop
out
adc
mov
xor
mov
or
popa
pop
pop
lret
inc
xchg
movsb
scas
movsb
test
sub
mov
ret
in
mov
clc
repnz
adc
or
or
fidivs
lods
or
cmp
popf
int
je
or
cmpsl
or
mov
adc
xchg
add
dec
dec
negb
insb
mov
ljmp
adc
or
and
inc
sahf
sub
lods
mov
inc
mov
icebp
dec
jmp
orb
sbbl
pop
lods
pop
push
lods
mov
outsl
into
push
fldenv
mov
cmp
or
sub
jmp
jo
fbstp
in
fldenv
scas
mov
adc
data16
stc
cmpsb
into
stos
test
push
das
je
and
add
out
test
pop
pop
xor
lds
mov
fadd
push
mov
leave
mull
mov
imul
cmc
add
out
cmp
pushf
cmc
fnstcw
movsb
scas
pop
lods
add
adc
sbb
lea
sahf
cmpsl
add
cmpsb
ret
inc
jo
cmp
mov
sbb
and
adc
push
in
cmp
out
xchg
js
iret
add
mov
mov
cwtl
sub
inc
xor
push
xchg
mov
sbb
ret
or
ljmp
pushf
xchg
arpl
out
or
ja
in
push
xchg
push
cmp
test
enter
call
mov
ret
fdivrs
sbb
jge
pop
movsl
sbb
rcrb
fcmovnu
add
das
sbb
mov
decb
ljmp
addr16
mov
bound
dec
jmp
add
fnstcw
loope
in
sti
sbb
cmp
inc
das
mov
test
jl
add
repz
fimuls
pop
pop
aam
insl
aad
enter
mov
and
inc
sbb
cltd
jge
mov
pop
ja
imul
imul
xor
jmp
inc
iret
push
dec
jle
flds
sub
pop
inc
mov
mov
icebp
sub
cwtl
sbb
addr16
cmp
or
push
push
mov
or
add
and
sbb
cmp
sbb
rcrb
mov
xlat
fists
dec
mov
dec
cli
fchs
pushf
mov
rorb
push
sub
dec
xchg
leave
push
clc
lret
mov
je
pushf
cld
bound
push
xor
dec
or
and
iret
xor
xchg
pushf
adc
sahf
mul
shrl
int3
fnsave
rolb
inc
xorl
mov
bnd
xor
lds
daa
pop
les
mov
daa
xchg
int
and
mov
add
les
mov
ljmp
pop
pop
cmp
fwait
adc
sbb
fmuls
aad
mov
cmpb
add
dec
das
fld
sub
les
insl
jmp
lods
xchg
push
sahf
ljmp
or
fadd
and
rolb
xor
repnz
repz
add
bound
add
sub
scas
fbstp
insl
dec
sbbl
fmuls
pop
pop
xorl
jbe
push
inc
jp,pt
pushf
lock
adc
dec
dec
mov
lret
test
and
mov
adc
xchg
scas
dec
out
pop
les
fs
in
push
dec
cmp
pop
mov
mov
int
dec
repz
rorl
insb
xchg
ljmp
and
mov
and
lds
aaa
ret
mov
std
mov
fwait
rcll
mov
or
push
jg
call
cmpl
sbb
xchg
push
je
mov
mov
lds
lods
mov
xchg
cmpsl
inc
scas
je
ds
ljmp
fidivrs
sbb
and
xor
icebp
int3
sahf
inc
dec
arpl
cmp
repnz
or
fdivrl
add
add
mov
cmp
cmpsl
arpl
jb
mov
int
xor
or
movsb
push
cs
enter
jecxz
inc
sub
fdivrp
js
inc
pop
xchg
lock
push
pushf
shl
cmc
adc
in
add
mov
jmp
mov
imul
stos
lds
jne
pop
sbb
push
out
adc
mov
jl
out
ja
add
sti
inc
dec
frstor
push
cltd
inc
xor
push
cmp
inc
adc
dec
call
int
mov
andl
jae
mov
popa
xchg
push
jnp
js
scas
xchg
daa
int
rorl
arpl
push
add
and
enter
xlat
outsl
push
test
pop
sbb
mov
sbb
push
cmp
pop
lret
dec
sub
out
cmp
pop
sub
fnsave
in
imul
sbb
or
rorb
mov
cmp
femms
iret
cwtl
adc
loop
and
lods
sub
jbe
mov
out
cmpsl
sub
cmpsl
dec
cltd
lahf
int
mov
cltd
or
sysenter
imul
lods
insl
jle
xor
mov
mov
and
inc
and
das
sub
sbb
movzwl
jecxz
xor
pusha
sar
sar
repz
dec
stos
cltd
push
imul
mov
dec
xchg
cmpsb
addr16
cmp
push
icebp
xchg
cld
dec
pop
mov
gs
out
mov
ret
sahf
js
je
cmpsl
cmp
fsubrl
sbb
stc
clc
outsb
fimuls
in
mov
sub
cmp
and
push
push
mov
inc
repnz
mov
cmp
jnp
mov
out
inc
arpl
lahf
movsl
mov
push
pop
adc
in
gs
gs
ja
loop
xchg
clc
xchg
ficoms
adcb
jo
sbb
mov
sub
sahf
pop
inc
shlb
xchg
dec
sbb
and
push
mov
pop
and
dec
pop
push
popa
xlat
inc
fcoms
push
daa
iret
test
pusha
or
leave
clc
push
ss
imull
cmpsb
rolb
clc
xor
sub
add
popf
xchg
adcl
jnp
incb
push
inc
mov
dec
mov
push
cmpsl
cwtl
imul
sar
pushf
lods
cmp
push
insb
lahf
mov
cmp
sbb
cmc
lea
mov
or
cltd
sub
ret
xor
and
popf
repz
popf
into
add
xchg
dec
xlat
xor
das
fs
repz
lret
fnsave
jp
adc
mov
jle
andb
in
add
dec
jnp
dec
push
cltd
jecxz
test
cmp
addr16
push
jo
push
and
xor
cmc
mov
xlat
add
cltd
dec
pop
pop
cmpsl
call
jle
adc
push
xlat
xor
cmp
jle
or
outsb
mov
pop
imul
add
js
xchg
and
cmp
mov
push
pop
xor
push
movsl
sub
fwait
jbe
int3
aam
stos
sub
inc
sub
and
jge
cmp
mov
sub
mov
mov
mov
les
int
insb
sub
mov
insl
jbe
push
inc
push
testl
cld
sbb
shrl
add
je
pop
xor
dec
inc
icebp
inc
scas
cmp
sbb
mov
mov
push
jns
or
jmp
rcrl
xchg
mov
jo
mov
and
xchg
jl
and
jmp
sub
cmp
sti
jle
push
mov
push
lock
fsts
inc
andl
sbb
dec
icebp
and
mov
inc
dec
mov
out
pop
mov
cmpsb
out
imul
je
mov
pop
fisttps
aad
mov
sbbb
sbb
inc
mov
sbb
mov
out
mov
or
popf
call
mov
sarl
enter
je
jle
mov
arpl
mov
push
stos
lahf
orl
mov
fwait
sbb
fs
jl
pop
repz
data16
jbe
or
adc
sbb
leave
jb
jno
int3
push
dec
aam
movsb
mov
cld
lcall
cld
push
cltd
fucomp
inc
pop
les
and
shr
cli
pop
mov
pop
pop
ret
dec
imul
mov
push
daa
fidivrs
or
xchg
inc
jl
fcomip
pop
xor
mov
imul
leave
xchg
pop
xchg
imul
mov
out
xor
out
push
fcmove
test
xchg
sub
and
pop
in
sar
lods
sub
cmpsb
push
xor
xor
iret
outsb
popa
push
repnz
dec
sbb
jns
add
test
or
jmp
push
pop
fwait
dec
ja
shll
xor
popf
cmpsl
xor
push
mov
cmp
sti
xchg
into
jg
mov
stos
sub
in
xchg
movsl
push
sbb
push
xor
mov
mov
push
fidivs
inc
mov
sbb
data16
push
test
add
cmp
dec
outsb
fsts
jae
call
xlat
out
cli
jge
in
pop
repz
sbb
fsincos
punpcklwd
pop
sub
lcall
mov
lret
push
push
bound
and
add
inc
enter
push
fldcw
ret
fsts
aam
ret
call
xchg
lcall
and
icebp
pop
rclb
mov
int3
rcll
sbb
les
mov
popf
lods
adc
mov
cmp
add
cmp
push
lahf
fsubrl
loopne
out
or
ror
andnps
imul
lds
adcb
jbe
and
push
cmc
call
ljmp
ja
enter
pushf
jno
js
inc
les
pop
scas
push
scas
xchg
jle
push
xchg
push
jg
decb
iret
std
or
rcrb
xchg
sub
not
pop
test
xlat
push
enter
arpl
movsb
in
adc
inc
movsb
jns
inc
imulb
or
jb
pop
inc
cmp
ljmp
adc
mov
out
data16
imul
aad
push
fbld
test
call
dec
push
mov
in
lods
in
arpl
clc
fidivs
cmp
sub
sbb
push
sub
push
mov
cmp
dec
push
adc
out
jmp
adc
push
lret
lea
cmp
neg
cmp
and
and
cmp
cmp
push
sub
mov
sbb
or
mov
in
push
or
divb
into
ja
xchg
popf
sbb
jbe
mov
fwait
sbb
in
add
sub
in
pop
inc
jb
dec
and
and
cmp
pop
mov
mov
mov
cwtl
dec
lock
nop
es
bound
jp
lds
test
test
lods
add
cltd
push
shlb
add
mov
aam
sub
mov
rclb
push
push
push
xorl
fs
pop
add
adcb
call
xlat
mov
fdivs
loope
xor
adc
xchg
jge
jg
push
rol
pop
inc
outsl
or
mov
outsb
mov
div
shll
adc
dec
das
xor
test
out
lods
sub
loopne
mov
lods
enter
add
repz
pusha
cli
dec
xchg
xchg
sub
xchg
mov
sub
sbb
xchg
mov
jge
mov
movsb
and
cwtl
test
scas
or
sub
lods
mov
ret
sbb
sbb
or
sbb
inc
div
mov
push
or
insb
dec
pop
jnp
mov
into
in
dec
jg
inc
jl
pop
arpl
mov
popa
into
pop
jmp
jae
mov
mov
add
add
sahf
inc
cmpsb
mov
cltd
mov
loopne
push
aad
jl
repnz
pop
aas
les
adc
push
fldt
jp
push
xor
dec
xchg
ss
outsb
enter
xchg
push
js
bound
push
imulb
std
jecxz
xor
add
push
and
adc
rorl
dec
pop
jp
test
xchg
mov
mov
sbb
xchg
xchg
imul
xor
sbb
xchg
add
movsl
jbe
adc
inc
xorb
sub
fists
nop
icebp
jbe
sub
jg
mov
lock
xchg
addr16
ds
stos
in
inc
or
inc
mov
or
insb
stos
sbb
jbe
xor
or
ror
xor
adc
aaa
shl
inc
aam
stc
jo
sbb
inc
push
pop
or
fdivp
jae
call
adc
add
aaa
outsl
lcall
adc
sbb
adcb
or
test
push
lcall
insb
les
jb
dec
fsts
shll
insb
test
pop
movl
push
imul
push
testb
push
das
aam
pop
cmp
orl
cs
pushf
adc
ja
xchg
jecxz
pop
testb
pop
and
push
leave
leave
sbb
iret
jbe
dec
mov
or
into
push
mov
ss
int3
or
pop
adc
imul
and
push
test
prefetchnta
cmc
mov
mov
out
aad
into
popl
push
stos
into
add
inc
notb
xchg
cmp
pop
xchg
dec
pop
cld
mov
sbb
and
or
sub
cmpsb
push
push
xchg
subb
or
xchg
das
mov
or
in
mov
or
jl
pop
fxch
inc
insl
dec
inc
int
ja
lahf
jae
arpl
ret
and
ficoms
push
mov
enter
ds
mov
or
mov
lahf
iret
mov
mov
mov
mov
rcll
movsb
out
dec
lea
je
mov
test
ret
push
cwtl
inc
inc
pop
pop
jne
int
or
jg
or
mov
repnz
ret
xor
int
sub
lahf
adc
test
mov
mov
repnz
call
inc
lods
ss
mov
lcall
loop
adc
xchg
xor
ret
rcl
int
enter
loop
cmp
mov
and
out
jecxz
adc
xchg
cld
rcll
into
mov
xchg
in
push
shll
adc
inc
and
push
or
packuswb
fwait
inc
cmp
mov
xchg
xchg
loopne
inc
push
test
jl
xor
mov
mov
fcmovnb
push
rorl
shrl
dec
addl
xchg
adc
ret
push
xchg
mov
lods
mov
jmp
push
pop
std
bound
leave
push
or
mov
xor
pop
xor
inc
in
pusha
cmp
loope
fs
fimuls
jns
iret
adc
dec
mov
mov
test
xchg
test
xor
jg
jge
inc
xor
imul
pop
mov
xchg
shll
inc
loope
add
inc
inc
fisubl
add
mov
into
add
out
lcall
stos
aad
jp
mov
inc
sbb
jo
scas
push
jecxz
xchg
adc
push
pop
out
testb
xchg
jb
sub
jg
cmp
xor
cmp
aad
push
mov
nop
push
push
dec
mov
push
mov
push
jg
push
adc
dec
mov
pop
pop
cmp
mov
push
addr16
call
cmpb
hlt
push
push
dec
cld
out
rol
sbb
addr16
stos
and
aas
mov
pop
insb
dec
outsb
adc
out
dec
cmp
jmp
pop
or
addr16
popf
cmc
inc
push
sbb
mov
ss
or
je
mov
mov
mov
int3
insl
xchg
imul
imull
mov
mov
lahf
addr16
lds
xor
push
jno
xlat
jge
sbb
int
in
xlat
mov
dec
outsb
pushf
dec
dec
movsl
lahf
add
add
cltd
push
cwtl
xchg
adc
cs
dec
xor
dec
andb
sbb
or
push
test
mov
addb
sbb
jg
scas
sbb
mov
sub
adc
and
fstpl
icebp
addr16
cmpsb
pusha
mov
or
mov
lods
mov
add
lds
xchg
mov
xchg
adc
int
add
imul
js
stos
jecxz
adc
xor
jecxz
cld
lret
push
ret
scas
jo
inc
push
mov
mov
and
dec
shr
addr16
shlb
int3
push
cmpsb
mov
shlb
xchg
dec
inc
cmpsb
pop
fs
adc
adc
mov
leave
pushf
xchg
mov
leave
lret
inc
xchg
clc
sub
aad
stos
or
pop
loope
nop
fidivrs
push
lods
and
insb
jge
lods
testb
add
xchg
hlt
fisubs
ljmp
ret
mov
cmc
imul
stc
sbb
pop
jbe
nop
or
lods
mov
call
sti
scas
mov
clc
fidivs
inc
je
mov
aas
xor
icebp
ret
adc
mov
movsl
mov
sbb
js
test
or
mov
lea
or
fidivrs
push
pop
cmpb
dec
lock
das
ljmp
dec
std
fs
fs
xchg
xchg
inc
inc
shll
push
push
sub
shll
xchg
mov
inc
lcall
fimuls
int3
fsub
sub
mov
hlt
imul
jmp
inc
ret
shlb
or
and
bound
stc
mov
ss
aam
mov
in
xor
fildl
dec
jg
repz
dec
or
into
lods
fbstp
adc
and
mov
and
cmp
pushf
pop
cmp
ja
xor
clc
xchg
mov
ljmp
jne
cmc
fcompl
cltd
cmp
gs
cli
sub
adc
shll
and
mov
push
jo
adc
lret
jns
cld
xor
cltd
cmp
ss
rorl
mull
fdivrp
imul
cmpsl
sub
push
cmpb
in
cs
lcall
rorb
sub
negl
push
or
jg
or
or
pop
xchg
sahf
xchg
stos
stos
fcom
stos
mov
adc
jmp
sbb
and
arpl
icebp
pop
mov
push
ljmp
jnp
movsl
mov
testb
pop
push
adc
mov
add
fstpl
and
int3
test
inc
jno
les
mov
xor
and
pusha
mov
jmp
in
fwait
push
sub
mov
cmp
ret
cmp
cwtl
inc
and
xchg
or
pop
cld
sub
mov
fldt
js
addl
sub
adc
cmc
leave
bound
out
loope
cmpsl
pop
and
sub
in
insb
dec
jno
dec
mov
push
test
popf
sbb
inc
pop
and
xlat
pusha
sub
push
sub
iret
dec
pushf
pusha
pop
outsb
std
inc
in
sub
cs
and
and
clc
jl
test
mov
call
movsb
rolb
add
xor
lds
fiaddl
lret
in
add
addl
push
insl
cmpsb
adc
adc
cmp
inc
and
push
sub
xor
rcrl
lcall
sbb
and
test
aad
cmpsb
mov
movsb
dec
andb
ret
mov
push
or
push
in
add
cmpsl
jne
add
sub
shlb
daa
sbb
repz
lods
out
jmp
icebp
xchg
cltd
sub
jle
lods
mov
sub
pushf
pusha
inc
or
dec
sti
sub
push
pop
xchg
jle
arpl
mov
loopne
loope
push
testb
pusha
cmp
bound
xchg
mov
pop
clc
xor
jb
lret
ret
sbb
fld
xchg
test
mov
mov
pop
cmpl
push
call
cmpsl
stc
in
stc
adcl
lcall
pusha
jb
jae
test
iret
std
bound
and
xor
iret
icebp
and
scas
xchg
xor
lds
lahf
das
inc
pushl
cld
pop
adc
mov
scas
push
lds
sbb
sbb
mov
pop
mov
lahf
sub
std
filds
aas
add
xchg
lods
int3
xchg
push
js
xchg
mov
pop
sbb
subb
fwait
lret
les
pop
mov
scas
mov
sub
push
xor
popf
ret
cld
bound
pop
cmp
cmp
addw
jp
mov
mov
or
inc
mov
outsb
ret
adc
push
fstpl
push
mov
jecxz
scas
nop
add
sbb
xor
push
jbe
shll
lcall
mov
addr16
dec
mov
xchg
call
add
int3
or
jnp
out
xor
stos
arpl
sbb
pop
xlat
and
mov
fstl
popa
hlt
ss
lea
xchg
pop
xchg
xchg
popa
xor
imul
cmpsl
popa
jno
iret
cmp
inc
in
lods
js
popf
in
dec
dec
mov
testl
adc
jecxz
ja
cltd
inc
in
lods
jns
cmpsl
pop
xor
push
js
scas
fstpt
outsl
cld
movsb
aaa
test
mov
int3
std
sub
inc
push
jbe
mov
scas
mov
inc
xlat
rsqrtps
dec
aaa
or
jbe
shll
mov
jo
je
xchg
roll
pushf
fs
mov
sub
out
in
repnz
pop
lea
adc
push
in
and
cmp
ljmp
addr16
inc
test
inc
fsub
jl
sbb
call
loope
adc
xlat
adcl
sbb
js
push
jge
out
xor
pop
push
mov
mov
push
sti
dec
andb
scas
data16
sub
dec
outsb
jnp
xchg
in
push
loop
jmp
fwait
cmc
pop
inc
mov
das
out
popf
les
gs
cmp
pop
jge
inc
in
xlat
movsb
daa
fs
outsl
lcall
mov
inc
adc
pop
adc
rol
adc
popf
shlb
pop
mov
imul
loopne
mov
jge
or
inc
xchg
pusha
mov
inc
xor
mov
inc
inc
mov
mov
cmp
orl
loope
sbb
cmp
pop
scas
dec
in
clc
faddl
or
add
inc
dec
cmpsb
or
adc
sbb
in
dec
mov
in
test
xchg
xchg
ret
jne
pop
sarl
sbb
clc
stos
imul
loopne
lret
fildll
pop
push
ljmp
pop
out
popa
cmp
cmp
fcomp
out
xchg
and
lret
sti
sbb
inc
jecxz
pop
and
clc
add
cmc
jns
push
xchg
aad
mov
repz
xor
xor
dec
add
and
nop
or
mov
adc
std
mov
test
sub
clc
sbb
xchg
adc
push
and
push
xor
clc
test
mov
dec
add
jno
sbb
in
sti
jmp
pop
mov
mov
out
push
mov
jnp
pop
inc
out
movhps
cli
dec
pop
lret
cmp
push
out
cmp
xor
loopne
jno
fwait
jmp
jnp
jmp
movsl
bound
xor
push
push
jmp
mov
mov
add
push
dec
xchg
icebp
scas
xor
pop
dec
scas
adc
ret
mov
xchg
mov
loope
sbb
lahf
mov
cltd
mov
jecxz
push
aaa
stc
cmp
aad
dec
push
fstpt
aad
mov
in
and
or
imul
test
sub
scas
addr16
cmp
loopne
adc
and
and
or
dec
in
push
cmc
ret
movsl
jne
sub
shr
pop
lahf
push
mov
and
sub
pop
test
sbb
or
mov
cmp
jg
add
test
dec
add
pop
lea
fchs
int
cld
dec
ret
sub
push
adc
int3
pusha
pop
daa
rcrl
mov
push
imul
stos
loope
test
gs
hlt
out
cmpsb
cmp
mov
fiadds
mov
enter
neg
cltd
test
sub
outsl
cli
add
lret
mov
lds
sbb
lcall
dec
ja
mov
in
push
subb
mov
lahf
sbb
ljmp
mov
lcall
aaa
out
popf
sbb
inc
test
xor
sbb
mov
mov
mov
cmc
add
mov
mov
mov
arpl
js
xchg
in
mov
cmp
xor
xorl
adc
pop
xchg
mov
cmp
push
push
xchg
testb
push
lahf
jge
fisubrl
lock
mov
push
dec
gs
mov
fnstenvs
push
or
mov
sub
pop
fwait
push
mov
add
sub
fbstp
sub
pop
dec
icebp
cld
aad
pop
xlat
add
sub
xor
outsl
je
fdivrl
and
loope
push
lret
in
jnp
fsub
mov
fstl
nop
push
addr16
je
pop
mov
fwait
idivb
push
dec
pop
xchg
das
aad
xor
jp
xor
mov
orb
push
dec
mov
mov
idivw
lret
add
mov
mov
loop
out
push
xchg
movsb
decb
sbb
scas
mov
and
push
cwtl
push
sbb
shrb
or
pop
clc
movsl
popf
imul
loope
das
loop
or
fdivp
leave
std
iret
mov
adc
fs
orb
iret
das
movsl
lea
int
daa
pop
lret
mov
xchg
push
mov
jnp
lods
sbb
cwtl
fsubrs
jno
cmc
cld
xchg
jne
in
xchg
mov
jbe
in
ss
push
std
mov
nopl
ret
jns
xchg
add
adc
mov
data16
lahf
xchg
push
push
out
and
loopne
pusha
sbb
dec
push
test
addl
adc
into
dec
mov
pop
sarl
push
loopne
inc
cltd
xor
dec
adc
pop
sbb
jbe
cmpsl
xchg
pop
aam
push
popa
out
and
pop
mov
jno
xor
lods
inc
xchg
mov
shlb
mov
fadd
adc
dec
jg
in
jae
sbb
inc
data16
loope
and
xchg
into
fcmove
in
insb
xchg
gs
jnp
les
or
pusha
mov
sti
sbb
cmp
sahf
out
stos
fcompl
xchg
sahf
sbb
cmp
jb
push
pop
int3
jg
loope
xor
out
push
push
and
jns
jno
dec
mov
lcall
inc
sbbl
jecxz
nop
mov
js
out
fstl
test
mov
loope
movsb
out
lds
push
push
xor
movsl
ja
lret
in
push
pop
ljmp
lods
push
in
pop
cmpsl
cmp
push
jge
or
rcrl
push
sti
mov
dec
mov
fcomp
sub
popa
test
lret
add
cmc
inc
movsl
push
inc
rorl
cmpl
ss
jne
enter
shlb
std
negl
sbb
or
fs
pop
push
inc
pop
xor
pop
popf
lret
rcrb
mov
sti
ja
xchg
fstpt
fisttpll
outsb
lods
lahf
jbe
xor
out
test
xchg
xchg
mov
mov
jne
sbb
adc
cmp
xchg
cmpsb
stos
push
and
xchg
insb
add
mov
insb
xlat
and
jb
pop
adc
sbb
dec
or
stos
dec
pop
fisubs
scas
xchg
fdivl
mov
daa
adc
jl
lret
gs
mov
push
popf
adc
cmp
dec
iret
or
imul
inc
lahf
out
aaa
insl
gs
sub
pop
xchg
adcb
insb
xor
idivb
dec
jecxz
mov
inc
sbb
mov
xor
xor
fsubl
inc
aad
pop
pop
dec
in
es
cltd
add
std
push
cmp
sub
xchg
jns
cmp
sub
pop
sbb
sbb
fldl
jecxz
mov
jno
sbbb
pop
sbb
stc
push
mov
adc
cld
xor
out
subb
mov
into
add
fldl
fmull
mov
stos
arpl
insb
gs
add
lea
daa
fbstp
jp
jb
dec
ljmp
pusha
ds
or
mull
or
int3
scas
add
jp
jp
sub
jmp
inc
sbbb
mov
mov
out
xchg
shrb
mov
insb
rcll
jg
adc
imul
sbb
lret
push
dec
or
and
and
aam
adc
push
je
cld
xchg
xor
mov
sbb
ds
xor
test
js
data16
in
icebp
sti
cld
mov
shrl
ljmp
pop
fsub
aaa
cld
std
loope
xchg
leave
mov
test
sbb
push
mov
les
lea
pop
mov
cmpsb
icebp
add
cld
add
sub
cs
pop
push
pop
mov
mov
inc
filds
sbb
bts
pop
dec
not
xor
pop
sub
xor
pop
js
mov
cmp
jmp
xchg
add
add
dec
xchg
cs
and
xchg
aaa
xchg
sub
jl
pop
pop
push
fwait
jecxz
jecxz
aaa
push
sub
xchg
mov
xchg
cmp
test
mov
mov
and
sahf
add
adc
out
sub
jge
pop
ljmp
movhps
cmp
scas
dec
lcall
mov
and
cmp
test
loopne
cmp
cmp
loop,pn
fidivs
gs
or
and
adc
or
mov
popf
cmp
out
mov
arpl
test
inc
ficomps
pop
clc
mov
inc
xor
jo
in
out
daa
ljmp
xor
mov
je
jo
repnz
add
cltd
mov
adc
loop
add
in
xor
test
mov
sub
fistpll
adc
shll
out
xchg
pop
sbbl
stos
ret
push
jmp
pop
push
sbb
in
pop
data16
jg
or
adc
repnz
enter
inc
or
cmp
in
aam
mov
push
sbb
mov
dec
inc
mov
push
mov
jge
xchg
and
sub
je
xlat
std
ret
sub
jmp
enter
lock
push
jl
subl
xor
xchg
lea
add
jb
mov
mov
adc
in
cmp
std
pop
std
nop
sahf
mov
or
inc
xchg
and
psubw
int
sbb
stc
movsl
shrl
pop
mov
lods
ds
roll
stos
xchg
push
jmp
fidivl
sbb
fnstenv
movsl
insl
inc
mov
sub
and
mov
lret
test
cmpsb
ret
pop
rorb
sub
lret
xchg
out
add
pop
mov
cmp
inc
pop
ljmp
push
test
jb
dec
and
adc
hlt
test
add
gs
mov
push
into
psrlw
movsb
pop
pop
pop
mov
insl
and
std
hlt
mov
test
in
mov
cmpsb
sbb
pop
or
cmp
daa
inc
xchg
cmp
or
xchg
adc
xor
add
mov
push
aam
jg
pusha
pop
cmp
int
roll
bound
fdivrs
push
fs
and
sbb
enter
or
insb
scas
inc
cmc
gs
mov
les
pop
mov
xchg
loop
das
push
inc
sub
out
out
adc
cmp
scas
push
scas
mov
outsb
ror
cmpsb
sbb
stc
adc
ljmp
mov
dec
mov
aad
add
push
addr16
in
std
adc
and
arpl
es
loope
cmp
dec
leave
push
mov
nop
dec
push
pop
mov
or
mov
shrl
daa
xchg
push
dec
or
addr16
xlat
mov
in
and
xchg
les
aaa
push
add
adc
push
shll
cmp
gs
sbb
lds
nop
dec
mov
fdivr
mov
es
sbb
lahf
xchg
mov
rorb
inc
jne
ss
xor
pop
mov
xor
icebp
xchg
xor
iret
in
cs
pop
icebp
test
addr16
add
and
lock
inc
cmp
pop
repnz
pop
xchg
sbb
shrl
sub
pop
arpl
mov
mov
cltd
xchg
mov
xchg
rcrb
rorl
jnp
xor
rolb
ficoms
xor
mov
push
xchg
xor
mov
and
rclb
inc
mov
jp
dec
pop
insb
movsl
leave
movb
dec
dec
mov
inc
test
mov
fnstenv
push
add
aas
cmpsb
jo
push
sub
pop
pop
insl
jl
scas
cltd
cmpsl
dec
clc
clc
jmp
and
mov
imul
insb
rcll
into
jne
push
mov
sub
sti
stos
sbb
jp
mov
sti
dec
jo
or
mov
jmp
mov
fs
jb
jmp
enter
pushf
je
push
inc
cmc
push
sub
and
push
bound
movl
bound
and
sbb
leave
outsl
mov
int3
dec
loope
jp
add
into
enter
scas
mov
cwtl
outsl
and
jns
lds
jb
ret
in
ja
cs
or
mov
js
jb
xchg
add
jge
inc
aaa
dec
adc
xchg
movsl
js
dec
or
pop
mov
ret
or
stos
pop
nop
fiadds
loope
loop
push
fnstcw
dec
mov
call
test
subl
je
sbb
mov
mov
bnd
dec
bound
jo
fs
aas
jbe
add
popf
pop
jnp
and
pop
loope
lods
cmpb
hlt
outsl
idivb
adc
test
hlt
sbb
or
sarl
lods
int3
adc
pop
pop
aas
cmpsl
jbe
pop
cmp
jp
adc
xchg
adc
cld
imul
mov
xor
repnz
in
sub
or
shll
xchg
daa
push
adc
push
xor
dec
mov
pop
xchg
sti
cmp
cmp
mov
cld
cmc
jo
mov
adc
int3
std
pop
adc
inc
sbb
loope
mov
out
push
pcmpgtw
push
lods
ds
shll
xor
hlt
cltd
pop
addr16
dec
mov
mov
lret
xchg
mov
rcrb
std
mov
imul
lret
sbb
inc
push
or
enter
scas
xchg
test
pop
mov
and
dec
jle
xchg
js
pop
ja
inc
cltd
or
xor
jbe
xor
mov
aas
or
test
inc
cld
sbb
dec
cmpsl
jecxz
xchg
sub
sub
dec
push
nop
roll
adcl
pop
adc
into
into
stc
inc
push
jle
mov
ret
push
cld
stc
jbe
stos
testl
mov
sbb
or
popa
or
dec
jp
mov
cmc
or
mov
mov
insb
shrl
hlt
das
inc
or
aad
ffree
mov
stc
icebp
fstps
sub
nop
mov
fucom
mov
outsl
push
testb
mov
xchg
and
aaa
adc
mov
das
xchg
out
pop
jl
insl
sub
out
outsl
out
stos
or
in
lock
add
insl
mov
int3
rcrb
and
xchg
aas
sbb
or
and
test
mov
inc
inc
mov
out
in
hlt
out
bound
lret
cs
iret
cs
outsl
inc
cmpsl
rclb
cmpsl
andl
ret
rorb
ret
mov
pop
icebp
imul
dec
mov
mov
fisubs
rdtsc
mov
push
jle
sahf
aaa
sbb
jecxz
add
in
xchg
sub
aad
xchg
or
popa
or
cmpsb
js
xchg
cli
stc
popa
shr
and
fwait
std
movsl
xchg
fildl
fistpl
push
aas
cmpsl
pop
int
stc
mov
xchg
in
inc
mov
loop
xchg
dec
pop
shlb
ljmp
enter
cmpsb
enter
std
push
mov
sbb
pop
sbb
js
mov
push
in
jns
lds
or
loopne
int
xorb
and
xchg
adc
enter
js
data16
cltd
and
jg
lock
out
mov
pop
or
jle
add
test
insb
mov
dec
fnsave
lds
in
pop
hlt
dec
adc
cmp
insb
addb
aad
sub
push
test
test
push
adc
xchg
and
outsl
dec
enter
push
ljmp
mov
cmp
test
out
dec
dec
out
and
loope
hlt
sbbb
inc
clc
std
push
addr16
mov
rcrl
inc
mov
popf
dec
sub
mov
adc
xchg
cmp
imul
rcrb
stc
sbb
repz
lea
add
roll
mov
push
shl
sub
aaa
xor
jbe
xlat
add
push
lahf
inc
cmpsl
lahf
xchg
testl
cmc
leave
outsl
and
push
and
aam
out
mov
fbld
cmp
jp
jnp
push
cmpsl
rcll
fld
push
pusha
xor
jo
xor
outsb
js
pushf
sbb
subb
xor
pop
xor
and
les
out
add
fisubs
lea
jae
incl
xor
mov
mov
clc
fimull
cmpb
dec
jae
lret
jg
imul
pop
ret
xchg
sbb
dec
or
push
add
mov
inc
shlb
xchg
lcall
xchg
dec
jnp
subb
jg
pop
and
das
sub
cmp
mov
mov
mov
test
add
dec
mov
mov
lock
into
or
xchg
cli
imul
popa
out
mov
dec
hlt
sti
or
xchg
out
cmp
or
adc
and
addr16
div
jp
pop
mov
int
sub
in
imul
inc
lds
dec
push
popa
mov
fbld
inc
xchg
jge
stc
add
xor
push
pop
push
dec
mov
cli
sti
push
rcll
inc
cmpsb
sarb
xchg
adc
add
aam
mov
mov
fwait
sbb
or
xor
xchg
test
in
mov
or
int
pop
jb
xor
clc
mov
push
mov
mov
sub
add
nop
sub
nop
xor
mov
push
pop
lcall
lcall
sub
sub
sbb
stos
pop
je
repnz
in
add
in
pop
cld
aaa
ja
sahf
sbbl
pop
negb
outsb
and
inc
shlb
lret
jecxz
pop
test
adc
inc
and
movsb
inc
add
add
rcll
add
pop
outsl
lahf
mov
aas
and
mov
mov
test
push
and
dec
movb
push
and
mov
inc
dec
imul
mov
in
inc
cmp
mov
inc
mov
jle
scas
cmpsl
cld
jmp
shr
stc
sub
data16
and
pop
pushf
in
and
mov
jle
add
sbb
ljmp
or
outsl
lret
aam
add
fs
aam
arpl
stc
test
pusha
ret
mov
mov
mov
xchg
xchg
mov
imul
outsl
dec
adc
fstps
xchg
cmc
in
cld
inc
or
xor
in
inc
and
mov
inc
fbld
cltd
push
rolb
add
dec
cmc
pusha
dec
mov
hlt
xchg
lahf
sbb
shll
fbld
xlat
les
test
movsl
adc
pop
sub
dec
in
add
clc
or
fsubp
sbb
dec
setnp
cli
out
decl
or
les
xorl
xor
sbb
pop
aad
fcmovnbe
out
fisubrs
or
and
sub
sbb
sahf
sarl
outsb
cmp
mov
faddl
push
mov
add
pop
mov
lods
sub
xchg
fldenv
push
arpl
or
sub
mov
xchg
mov
mov
pop
imul
pushf
xor
test
outsl
or
imul
rorl
test
addl
mov
cmp
mov
inc
or
mov
lock
gs
xor
repz
push
jecxz
push
xchg
scas
daa
mov
fidivrs
aad
fists
mov
push
sub
js
cmpsb
vmovss
adc
jp
nop
out
idivl
test
lods
ljmp
popf
inc
push
cmp
adc
mov
outsl
pop
sbbl
popf
mov
and
sbb
jae
inc
push
pop
rolb
arpl
jae
inc
pop
xchg
ja
inc
inc
inc
or
fadds
mov
hlt
push
leave
sub
sarl
aaa
out
pop
jg
inc
mov
ja
lret
xchg
jmp
test
add
push
sbb
bnd
lods
div
and
iret
adc
aaa
enter
xchg
mov
cmp
push
xchg
sahf
sub
xor
sti
mov
stos
jge
mov
cmp
inc
jl,pn
xchg
sbb
int3
xchg
push
lret
cmp
ret
aas
fisubl
add
pop
sbb
xorl
dec
sub
sub
jne
cmpsb
pop
jns
lds
dec
mov
adc
sub
dec
lds
cmp
in
cmp
add
or
imul
add
sbb
dec
sub
fists
outsl
clc
int3
xor
ret
insb
scas
push
inc
jbe
mov
orb
or
mov
loope
adc
outsl
push
xchg
and
outsl
push
or
hlt
ret
xchg
lds
les
inc
mov
and
and
lret
xchg
aaa
mov
dec
jp
mov
jae
pop
add
add
frstor
outsl
adc
hlt
bound
in
aam
pop
pop
lods
fbstp
sarb
xchg
xchg
pushf
lods
into
gs
roll
lock
aam
xlat
adc
lds
jne
and
mov
xchg
add
test
pop
dec
mov
xchg
sub
jmp
test
repnz
loope
pop
fcoms
adc
outsl
sbb
xor
lahf
repz
ss
adc
loope
sub
add
dec
xchg
mov
stc
and
addr16
or
push
cmp
fstps
xor
fstps
dec
call
jecxz
dec
jb
xor
cld
imul
add
testl
arpl
dec
cli
xchg
imul
mull
negl
insl
push
push
cmp
push
jg
sbb
jnp
push
cmc
push
jo
jb
inc
xchg
fptan
out
aas
sub
out
insl
nop
testb
xchg
ret
mov
lret
pop
lods
mov
pop
mov
fisttps
fcompl
jle
ds
pop
es
loope
lahf
aaa
xchg
sbbb
outsb
xlat
out
adc
cmp
mov
pop
mov
sti
inc
push
test
pop
mov
sbb
mov
xor
mov
scas
mov
dec
rcrb
out
sbb
adc
aaa
push
sete
pop
stos
or
in
js
lds
in
hlt
cld
ss
xchg
xor
sbb
inc
leave
push
pushf
push
adc
das
popf
sbbl
ds
dec
outsl
or
fstps
pop
ja
bound
pop
jo
jns
pop
mov
scas
cs
xor
jbe
xor
std
icebp
in
push
adc
pop
sbb
xchg
inc
lock
rorl
mov
jbe
xchg
sbb
fisttpll
and
lret
out
filds
es
sub
xchg
jmp
mov
sub
add
out
xchg
punpckhwd
jmp
pop
adc
inc
pop
cld
lds
jo
or
dec
rorl
ljmp
aas
mov
xchg
push
insl
scas
lret
cmp
jne
icebp
ljmp
js
xor
sub
jecxz
imul
pop
in
daa
cmp
lret
push
or
cmp
cltd
mov
push
mov
leave
or
cmp
in
fldl
in
movsl
dec
inc
dec
mov
inc
mov
cmp
cmp
or
adc
xchg
imul
dec
loope
pop
xchg
mov
lret
jg
mov
sub
sub
ss
lret
insl
pop
cmpsb
xchg
adcb
cmpsb
jmp
jge
subl
dec
xchg
adc
mov
sub
push
mov
bound
push
pop
dec
jbe
pop
or
je
push
cmp
roll
stos
fisubl
daa
clc
dec
sub
arpl
loop
adc
lds
or
movsb
pop
cli
icebp
jp
sbb
cld
pushf
nop
jl
sub
sahf
push
repnz
xor
mov
int3
bound
je
rolb
jne
test
fsubp
jbe
cmp
iret
idivl
push
pcmpeqb
push
iret
inc
sbb
orl
pop
add
mov
ja
leave
sub
rolb
leave
mov
cmp
inc
or
inc
mov
les
lock
call
shl
fucomp
push
pop
dec
or
lcall
sbb
mov
inc
mov
mov
rorl
dec
pusha
cmp
xlat
xchg
or
ret
push
aad
pop
add
and
sbb
adc
push
lods
mov
pushf
sub
inc
lret
mov
pop
aaa
fisubrs
stos
mov
inc
fs
adc
dec
or
or
jmp
insb
inc
cs
and
pushf
cmpsl
jnp
dec
sbb
movsb
push
cmp
cmp
dec
sbb
cmp
jne
adc
pushf
ftst
add
dec
add
lods
or
push
loope
and
int
jmp
mov
popf
sub
aad
into
cli
cs
sarb
pop
fnstcw
mov
sbb
inc
hlt
dec
and
sti
inc
and
in
lds
or
xchg
xchg
in
pushf
cmpsb
xor
shrb
cld
inc
test
sbb
pop
lock
movsb
div
lcall
sub
cmp
lret
aas
sbb
cmpsb
aad
push
mov
andb
xor
ja
cltd
loope
decl
add
pop
pop
mov
mov
inc
nop
lcall
xor
push
jo
jns
popa
lods
pop
scas
xchg
cwtl
or
aad
mov
sbb
inc
aaa
jns
cld
std
adcl
leave
icebp
mov
or
sahf
cs
lcall
and
ss
jns
lret
das
mov
ss
pushf
popf
incl
fisubs
cmc
es
out
fsubs
adc
daa
sbb
adc
pop
popf
xchg
imul
mov
movsl
xor
jnp
lods
in
adc
mov
pop
push
or
xlat
sub
pushf
jb
loopne
sarb
push
sub
sahf
lods
nop
les
dec
jnp
movsl
arpl
mov
cmp
cmp
xorl
icebp
and
fdivrs
fidivrs
pop
lods
inc
nop
arpl
and
sbb
inc
adc
shlb
push
add
sbb
mov
in
int3
sbb
loopne
arpl
popa
cmp
xchg
xchg
loope
jnp
test
dec
inc
and
gs
adc
cltd
jae
jo
nop
call
lret
fistpl
stos
dec
mov
adc
lds
incl
adc
push
mov
movsb
arpl
mov
stos
add
mov
mov
dec
ss
cli
and
jno
adc
std
mov
mov
bound
iret
and
fdivl
mov
or
sbb
lods
jne
int
test
loope
mov
inc
push
xor
cmp
outsl
sub
jae
cmp
mov
and
je
insb
add
test
aam
xor
inc
push
outsb
jne
jecxz
lret
clc
dec
dec
rclb
mov
add
mov
pop
incb
call
xchg
fsubrl
scas
vcvttpd2dqy
jmp
xchg
adc
jp
js
in
fnstsw
fsubrp
or
nop
int3
pop
mov
stos
jbe
mov
jne
inc
faddl
sahf
std
xchg
pop
fildll
gs
or
dec
adc
in
dec
test
inc
hlt
add
pop
pop
sar
in
pop
divb
leave
push
adc
adc
dec
sarb
iret
fs
dec
cli
dec
nop
dec
mov
pop
int
aas
sahf
sub
cltd
pop
cmp
inc
jge
xchg
sbb
pop
cmc
push
call
jmp
inc
inc
fbld
mov
cld
jnp
xchg
dec
clc
and
iret
mov
xchg
mov
das
outsl
xchg
push
inc
mov
popf
and
je
jnp
call
xor
add
cmp
or
mov
ret
je
mov
adc
and
xchg
push
lcall
ja
lds
xor
out
ja
and
jl
add
inc
sbb
insl
cli
push
mov
into
lret
jae
outsb
lret
mov
outsb
fisubs
in
int
inc
clc
out
jns
pusha
inc
xchg
daa
cmovne
jne
xor
outsb
ror
shlb
pop
xchg
adc
xchg
bswap
xchg
pushl
loopne
lds
movsl
clc
jbe
add
movsb
in
repz
pop
fimull
add
xchg
rclb
cmp
nop
sbb
loope
add
outsl
mov
or
movl
enter
sbb
fidivl
leave
pop
fs
rorb
imul
lds
je
out
adc
push
push
mov
out
or
mov
out
xchg
add
mov
loopne
pop
testb
xchg
idivb
dec
sub
push
ljmp
mov
lret
mov
shlb
push
jo
andb
imul
xchg
scas
rcrl
jmp
adc
pop
lret
xor
das
repnz
sbb
jno
jecxz
ret
rclb
sti
out
sbb
testl
iret
pop
inc
arpl
xchg
mov
mov
lock
ljmp
bound
stos
imul
sbb
divl
jne
adc
repnz
sbb
push
mov
popa
sub
ret
out
into
xchg
inc
jmp
rclb
xchg
pop
inc
push
sbb
test
in
mov
lret
mov
ja
jmp
movsb
loop
je
or
mov
jge
repnz
sub
jb
xchg
adc
in
enter
inc
cwtl
lret
xchg
jg
mov
xchg
into
jge
push
dec
dec
mov
addr16
push
imulb
insl
inc
imul
pop
into
sti
cmp
sbb
hlt
xor
cmp
test
mov
sbb
imul
test
mov
fcoms
cmpsb
push
je
xchg
imul
xor
push
jg
push
xor
aam
dec
das
jno
adc
push
cmc
fstps
xor
add
jmp
int
inc
xlat
inc
lock
mov
shr
lods
pushf
add
cmpsb
dec
pop
mov
mov
clc
xor
iret
jmp
xchg
les
and
scas
dec
aaa
and
sub
loopne
and
mov
shrb
sub
ds
lret
sub
jle
mov
aaa
inc
mov
mov
pop
fimull
loopne
pop
sbb
mov
ret
jl
inc
int
sbb
lahf
out
mov
ret
inc
addr16
fidivs
mov
call
sbb
out
cli
fwait
push
test
loopne
orb
dec
in
jl
xor
cltd
int
movsb
sbb
out
lret
mov
fistpl
mov
clc
jge
add
push
jp
add
jl
cmpsb
pop
pop
fstpl
das
stc
xchg
or
sbb
or
push
adc
sbb
jg
and
jmp
rcrb
aad
pop
loop
jle
sub
mov
insb
mov
mov
or
fmul
lea
in
adc
inc
sbb
xor
sbb
adc
xor
dec
bound
ds
inc
repz
das
shr
and
gs
and
adc
mov
pop
cmc
leave
mov
pop
mov
push
loopne
jb
arpl
mov
sahf
mov
mov
jbe
aam
adc
jecxz
pop
dec
jmp
xor
sti
lods
inc
xchg
mov
lret
push
incl
xchg
cmc
arpl
lret
js
push
leave
insl
push
pop
sub
cmc
pop
dec
jmp
xchg
dec
loop
inc
sti
or
fisubl
push
loopne
xor
arpl
dec
push
lds
stos
loopne
nop
jne
ljmp
imul
popf
js
push
mov
ja
scas
ljmp
mov
loop
sub
test
daa
es
addr16
push
out
sbb
pop
lods
loop
sarl
inc
pop
add
pop
int
andb
adc
pop
xlat
shrb
and
sub
outsl
mov
sahf
mov
leave
jge
mov
je
mov
dec
imul
adc
xchg
mull
gs
and
mov
xchg
js
sub
pusha
or
fsubs
push
scas
and
pusha
push
or
imull
jmp
mov
inc
popf
and
dec
xor
xor
arpl
mov
nop
cmp
sbb
negl
mov
out
push
and
ss
call
inc
sbb
ja
xchg
addr16
mov
add
pop
mov
mov
mov
hlt
divl
sub
fisubs
xchg
ljmp
addl
gs
ja
xor
sbb
lock
popf
adc
xchg
int
cltd
popa
addl
inc
jns
ja
and
aad
and
cltd
lcall
mov
jns
cli
insl
movsl
mov
pop
xor
sub
popa
mov
push
lods
mov
stos
and
fcmovnb
xlat
dec
inc
fisubrs
popa
push
adc
int
pop
push
jmp
mov
mov
dec
test
add
loop
ja
jp
arpl
fldenv
negl
test
and
fs
pop
sbb
mov
push
in
sbb
dec
fidivs
mov
mov
stos
repz
xchg
jge
cmc
ja
shlb
jg
xchg
mov
fsub
lods
add
mov
xchg
notw
loopne
sub
and
iret
fstl
addl
lods
adc
and
mov
xchg
les
das
loop
cs
sar
loope
cmpsb
push
jmp
insb
pop
xchg
add
lods
vpsrld
fincstp
mov
ljmp
push
andb
es
mov
xor
add
cmc
cltd
push
mov
pop
cmp
and
xchg
mov
sub
shrb
dec
loop
jg
std
push
or
movsl
fcoml
lret
mov
add
aas
fsubr
jle
cmp
nop
push
jns
inc
addr16
push
xchg
repnz
pop
sbb
aam
inc
mov
mul
out
stos
dec
add
out
xchg
cmp
ds
inc
aam
mov
sub
movsl
jns
inc
pop
dec
dec
inc
out
lahf
les
inc
xor
lret
stos
data16
gs
push
fisubs
test
test
cmpsb
popf
and
es
aas
jecxz
mov
lea
clc
xorl
fsub
mov
mov
push
pop
mov
ja
loop
add
mov
test
shr
or
add
icebp
jnp
mov
fadds
mov
jle
mov
int3
xchg
xlat
call
popf
xor
inc
pusha
popa
cli
pop
pop
push
ds
pop
sbb
xlat
sub
dec
aas
xchg
mov
xchg
sbb
and
xor
jle
fadds
mov
dec
adc
adc
repnz
out
lods
sahf
and
cmpsl
lret
adc
adc
inc
dec
dec
lea
mov
sbb
fwait
dec
xchg
or
imul
in
movsb
mov
sti
sbb
adc
pop
lret
mov
dec
cli
xchg
cmp
mov
stos
xchg
aas
xor
fcoml
stos
int3
in
das
cld
xchg
and
xchg
pop
sub
sub
scas
add
pop
pop
out
icebp
jns
push
jge
inc
sub
and
call
clc
in
ret
call
jb
shl
mov
test
movsl
call
mov
setge
push
mov
pop
mov
js
xor
sbb
into
stc
dec
out
add
mov
outsl
jo
clc
push
sub
mov
pop
xchg
push
cltd
clc
lods
dec
adc
xor
sub
and
pop
in
daa
scas
mov
mov
lods
xor
int
pop
popa
loopne
out
lea
push
jecxz
ds
repnz
jp
xor
jns
and
dec
fs
js
cmp
stos
mov
jecxz
sbb
shlb
push
jne
jbe
in
pop
sub
js
enter
mov
add
jnp
xor
xor
lahf
xor
int3
pop
jmp
popf
push
adcb
stos
mov
pop
test
xor
xchg
int3
and
js
mov
insb
and
daa
dec
lret
cld
loopne
mov
cltd
mov
cmp
pop
push
jno
add
push
jp
out
icebp
fcom
push
xor
mov
andl
in
jo
mov
xor
push
adc
bound
mov
addb
fidivrl
aad
js
inc
pushf
ja
add
mov
jns
cmpsl
inc
add
push
pop
push
stos
inc
nop
mov
insb
rcr
shrl
aaa
jo
add
test
cmc
push
ja
pmaxub
popf
dec
add
pop
xor
inc
sahf
ljmp
sbb
fmuls
xor
out
addr16
dec
inc
push
cmp
or
jb
ja
xor
pop
pop
jns
lahf
cwtl
mov
data16
mov
adc
lret
subl
call
or
jge
push
bound
mov
mov
inc
lea
cmp
insb
add
lea
bound
dec
pusha
jmp
jb
inc
outsl
mov
addr16
es
mov
into
sub
push
mov
hlt
pop
add
movsb
cld
lods
mov
sbb
mov
mov
fistps
push
gs
and
lea
push
xchg
fs
ret
fisubrl
mov
jo
mov
add
push
cmpsb
lds
pop
nop
jnp
arpl
popa
mov
aad
aas
xchg
sbb
notb
adc
adc
pop
bound
push
ljmp
inc
add
add
jne
lock
mov
sbb
xchg
movb
or
mov
and
lods
bswap
outsl
push
je
pop
repz
fs
test
bound
push
iret
call
cwtl
mov
negb
fsubrl
cli
addr16
sbb
adc
push
sub
jb
cwtl
aaa
lods
ja
pop
add
movsb
inc
in
push
dec
inc
cmp
push
out
popa
sahf
iret
dec
jno
cmp
or
pop
add
push
sub
lods
sbb
jmp
mov
movsb
hlt
inc
jo
xor
mov
xor
outsl
jo
enter
mov
mov
fisubrl
xor
mov
fwait
or
jecxz
into
insb
scas
in
movsl
fisttpl
and
cmpsl
data16
mov
xor
jecxz
aam
repnz
cmp
xchg
daa
stos
pop
dec
xchg
loop
adc
mov
int
fldenv
cmp
push
mov
jbe
mov
insb
cltd
xchg
dec
cs
sbb
repnz
scas
push
sbb
push
or
mov
in
rolb
nop
leave
and
sbbb
pop
ljmp
int3
repnz
push
nop
pop
dec
mov
jb
jmp
xchg
sbb
pop
in
jbe
shlb
loopne
jecxz
fcmovb
shlb
repnz
pop
cmc
push
fisubs
out
add
xchg
and
fstpl
cmp
xorl
daa
mov
fs
stos
or
test
cli
sbb
xor
cmp
out
enter
mov
add
adc
cmpsb
xchg
ljmp
jae
sbb
sub
fistl
idivl
loope
lods
loope
sahf
push
mov
popa
dec
and
rcr
adc
test
xor
push
jne
lea
imul
aas
cmp
movsl
push
pusha
test
fnstcw
imul
aam
mov
lds
je
mov
push
mov
or
jae
shl
adc
in
push
incl
lret
add
add
add
pop
ss
mov
adc
add
jb
or
loop
or
mov
mov
adc
inc
cmp
xor
push
mov
push
xchg
dec
push
mov
fsts
inc
ds
jmp
aam
fimull
jp
call
pop
dec
mov
adc
sti
pop
nop
push
sbb
sub
in
xchg
dec
sbb
add
rorb
jns
icebp
jnp
jbe
inc
pop
jns
or
popa
lods
push
adcb
lret
fcomps
push
lods
jle
movsb
dec
sbb
es
in
pop
mov
adc
push
sub
hlt
rorb
es
push
rol
pop
push
gs
or
aam
test
aas
stos
lcall
scas
or
pop
outsl
jbe
push
in
imul
mov
jle
dec
ret
insb
hlt
cltd
xor
js
fbld
shlb
xor
or
ret
xchg
cmc
aam
pop
stc
and
or
xchg
icebp
inc
clc
cltd
or
jae
mov
xchg
imul
aam
lret
push
cltd
cs
adc
mov
loop
or
lcall
sub
push
xor
in
fidivrs
dec
aaa
shrl
sti
mov
cld
xor
xor
cmp
ret
and
and
inc
std
filds
sbb
or
repnz
add
out
adc
outsb
and
hlt
pusha
gs
sub
mov
sbbb
xchg
xorb
jnp
bound
cs
jmp
xchg
dec
sti
ja
iret
test
and
cmp
test
xchg
cmc
xor
scas
aas
jmp
xlat
repz
mov
push
xchg
nop
push
ljmp
jle
mov
cmp
mov
jae
loope
adc
add
out
inc
insl
cwtl
sbb
iret
das
repz
ret
xchg
les
sub
mov
inc
lret
test
imul
pop
jmp
ficompl
arpl
sbb
fnstsw
daa
mov
inc
aas
std
popa
dec
cmp
stos
adc
sbb
test
and
jmp
inc
and
es
stc
and
insb
pop
leave
andl
xchg
push
push
js
xchg
out
std
jnp
jne
aas
mov
movsb
add
jp
mov
aas
push
fisttpll
add
adc
hlt
xchg
repz
pmaxsw
int3
pop
in
and
xchg
and
or
cli
pop
sub
scas
call
andl
daa
out
mov
sti
mov
loop
cli
data16
pusha
xor
mov
mov
call
shlb
out
pop
ja
test
aad
mov
pop
dec
jnp
xchg
jge
mov
xchg
mov
and
adc
je
fdivrs
inc
push
xchg
out
sti
and
push
shrl
pop
hlt
xchg
rcl
insb
cli
movsb
mov
sahf
xor
jno
les
stos
xchg
cmc
push
or
aam
fld
icebp
pop
sub
sbb
xor
lods
ds
into
push
pop
jmp
rorl
cltd
xor
sbb
scas
or
scas
cmpl
lahf
mov
lods
push
mov
sub
xor
loop
mov
push
dec
ljmp
fcmovnu
outsb
pop
sbb
cmp
or
dec
lcall
adc
mov
cmp
gs
enter
aaa
rol
sbb
cmc
cmp
xor
jns
js
mov
rolb
lods
mov
loope
fcomip
xchg
cmp
sub
int3
jmp
imul
xor
jp
pop
xor
addr16
in
inc
andb
cmpsl
mov
adc
cmpsb
push
push
arpl
aas
and
test
rorb
add
stc
mov
ret
aas
mov
les
lds
xchg
dec
ss
jae
pop
lods
mov
pop
sti
sub
clc
jnp
inc
or
sbb
push
aam
fwait
cwtl
jnp
add
pusha
cli
mov
xchg
or
movsb
fimull
jbe
fisubrs
mov
jno,pn
test
dec
fwait
out
adcb
xchg
daa
mov
cld
or
jb
pop
stc
fistpl
iret
xchg
add
cmp
fmull
inc
les
jmp
aas
mov
mov
jl
ret
ss
test
add
mov
adc
ja
jns
fstpt
out
push
add
dec
add
and
and
add
notb
fisttps
arpl
dec
push
add
shll
xchg
ret
test
call
mov
or
pop
pop
push
ja
or
mov
insb
sarl
scas
mov
sub
fs
mov
mov
sbb
repz
pop
int
test
mov
xchg
les
sahf
push
xor
push
or
pop
sbb
jle
and
inc
ss
stc
out
sbb
xor
xchg
xor
in
jp
and
add
cmpsl
cmp
inc
dec
repz
or
push
ja
das
xchg
sub
mov
movsb
adc
cmp
pop
pop
inc
add
xchg
bound
arpl
pop
add
mov
out
add
daa
int3
lret
lcall
mov
sti
sbb
push
pushf
in
cmpsb
push
js
and
and
dec
hlt
cmpl
cmc
mov
scas
aad
repz
cmp
pushf
adc
je
icebp
loopne
or
outsl
sar
xor
int
dec
fsubp
aad
jle
pop
enter
sbb
out
jno
icebp
dec
jge
into
pusha
js
push
fisubs
dec
cltd
ss
mov
inc
add
and
enter
stos
cmc
dec
xchg
lods
dec
mov
jge
xor
sbb
loope
jl
adc
pushf
push
movsl
inc
dec
jge
leave
test
jo
sbb
lret
nop
stc
inc
xor
pop
fwait
gs
mov
dec
call
in
mov
sub
adcb
or
push
rolb
add
push
pop
cli
stos
cltd
mov
and
xchg
loopne
repz
sbb
jo
into
add
push
mov
jle,pn
sub
xor
add
mov
movl
inc
les
push
push
orb
inc
fxam
sbb
push
xor
test
clc
aam
in
push
scas
or
jne
outsb
cmp
mov
lret
cmpsb
jg
mov
or
pushf
cmp
call
std
cs
test
sbb
add
push
fadd
mov
pusha
stos
jbe
nop
inc
sbb
mov
add
dec
ret
ss
inc
dec
cld
and
add
sbb
mov
or
fstps
or
add
lahf
push
or
mov
xchg
dec
movsb
xor
mulb
and
arpl
xlat
mov
sub
test
stos
lods
hlt
dec
cs
dec
pusha
mov
lock
and
rol
je
fwait
jbe
repz
sbb
test
cmc
mov
xchg
cmp
add
data16
or
fldl
jg
push
dec
adc
sub
imul
and
jge
popa
mov
ja
sbb
out
pop
pop
mov
pop
jl
call
mov
fimuls
and
insb
addr16
xchg
mov
into
xchg
jb
stos
in
cmp
adc
sbb
notl
movsb
ljmp
test
or
xchg
jge
mov
aad
pop
into
mov
add
sub
cli
xchg
dec
xchg
mov
adc
inc
pop
xchg
dec
mov
movsb
loop
lods
inc
inc
pop
mov
inc
addl
mov
jns
pop
lods
jae
lret
pusha
int
test
mov
aad
data16
pop
lea
fstps
jnp
les
xchg
mov
pop
inc
mov
mov
pop
and
sbb
mov
cwtl
cmp
jmp
xchg
push
push
pop
lods
test
lea
push
dec
loopne
jo
pop
lods
inc
inc
sub
popa
daa
stc
mov
mov
test
mov
sahf
jb
in
dec
dec
in
imul
test
test
stos
jl
jns
push
dec
xchg
push
adc
mov
clc
in
fistpl
xlat
push
mov
xchg
xchg
fwait
sti
mov
popa
jge
leave
rcrl
daa
and
cli
xor
add
xchg
and
popa
fimull
roll
ret
push
rcl
xlat
jns
ljmp
push
and
aas
cmp
jge
inc
xchg
fwait
sbb
movsb
mov
sbb
xchg
add
insb
insb
xchg
insl
mov
aad
jbe
pop
popa
xchg
xor
lds
mov
aas
sbb
mov
aaa
pop
cmp
add
xchg
orl
in
in
xchg
or
ja
sbb
daa
test
inc
out
lahf
lods
xlat
pusha
lea
pop
imul
mov
scas
add
lcall
dec
sbb
lods
cmpb
insb
ljmp
mov
jmp
dec
pusha
insl
lods
jmp
push
dec
push
daa
arpl
adc
or
cli
inc
out
lcall
hlt
mov
dec
adc
pop
fisttpll
inc
mov
cmp
lret
push
les
fsubl
push
mov
bound
and
pop
inc
jnp
push
add
shrb
rorl
jl
int
cwtl
add
mov
pop
mov
fisttpll
rorl
xchg
cmpsl
add
xchg
xor
arpl
lods
cmpsb
je
fnstenv
jmp
adc
dec
sbbl
jmp
adc
pop
ljmp
gs
and
iret
mov
fistl
lods
in
xchg
mov
mov
push
fistps
adc
xchg
out
sbb
xchg
outsl
sub
in
cmp
fisttps
test
and
jnp
mov
mov
jae
aaa
out
imull
mov
xor
das
scas
inc
into
mov
sub
in
xchg
or
test
shlb
push
jno
data16
in
mov
mov
pop
in
and
mov
xor
pop
test
hlt
pop
xchg
inc
orl
xchg
inc
dec
decb
test
sbb
daa
jbe
das
cli
in
out
addr16
aas
or
or
shll
imul
push
xor
inc
sub
out
stos
inc
sub
cmc
ret
test
cmp
in
cmpsl
test
mov
test
push
jp
pushf
cmpsl
inc
pop
or
adc
sahf
mov
jg
rorl
mov
loop
out
mov
iret
mov
ja
into
inc
mov
sbb
aas
imul
fnsave
cmpb
xchg
cmp
mov
imulb
mov
lahf
ret
and
cmp
loopne
push
addr16
pushl
push
cmp
pushf
ja
lds
dec
xor
popf
imul
cwtl
or
addb
push
lock
movsb
repz
mov
rclb
adc
adc
push
in
sub
and
iret
scas
and
idivb
out
xlat
and
fldl
and
mov
test
jne
mov
mov
push
int3
jns
jno
mov
lods
mov
iret
ret
sarb
clc
addr16
daa
loope
insb
mov
jns
xchg
xchg
add
dec
out
popa
mov
lahf
mov
xor
lahf
sti
insl
push
mov
mov
and
sbb
push
mov
dec
push
push
es
in
pop
adc
popa
sub
aad
leave
mov
out
sub
outsl
fstps
rcr
mov
imul
decb
mov
stos
sub
movsb
mov
les
in
enter
mov
cmp
incb
lret
xor
mov
popf
xor
into
icebp
xchg
mov
mov
hlt
xchg
sbb
xchg
aas
ljmp
pop
sbb
fidivrl
movsb
inc
mul
sub
sti
xchg
stos
push
push
scas
push
fistl
fucom
addb
xor
lret
scas
fimull
shll
imul
sbbl
inc
in
mov
lock
daa
sbb
inc
mov
fimuls
fldt
sbb
cmpsb
inc
jb
mov
popf
or
xlat
ret
ret
xor
sahf
rclb
push
or
scas
and
decl
loop
xor
repz
and
lret
ljmp
cmpsb
push
push
mov
les
jbe
or
lret
and
call
and
push
push
xchg
cs
jg
add
mov
pop
sub
cmp
sbb
ret
push
es
rcll
pop
xchg
sub
jne
out
mov
loope
sub
mul
sub
add
add
or
sub
or
push
rcl
ljmp
insb
stos
rcl
jl
and
imul
pop
mov
lret
mov
aam
imul
stos
inc
fdivl
cltd
sbb
inc
clc
jg
imul
pop
push
mov
jecxz
fs
jge
mov
push
insb
dec
lcall
aas
dec
and
cwtl
add
sbb
int3
loope
cmp
addr16
imul
mov
mov
in
fs
dec
iret
add
inc
es
stc
jp
iret
sub
pop
xchg
push
xor
jbe
mov
cmp
test
movsb
dec
xor
clc
pop
sub
in
mov
inc
cmpl
lea
imul
jp
jbe
pop
push
movsb
mov
push
add
pop
cld
pushf
add
inc
add
shll
out
dec
push
mov
sarb
sbb
movsb
aas
sbb
inc
inc
sbb
lock
mov
mov
xor
cmpxchg
sub
cli
adc
xchg
xchg
popa
hlt
jb
loope
sbb
sbb
xor
fdivrs
cmc
mov
mov
out
add
pop
and
inc
jnp
das
inc
mov
adc
std
dec
inc
aam
pop
lock
mov
imul
mov
movsb
pop
push
xchg
insb
pop
jge
imul
cvtdq2pd
inc
iret
jb
shll
sub
pop
sub
cld
fldcw
aaa
loop
xchg
lcall
push
or
cmp
sub
xor
loopne
xor
or
test
pop
gs
mov
push
inc
and
inc
in
cwtl
mov
test
jmp
xor
inc
pop
pop
pop
sar
and
mov
cmc
leave
loop
outsl
ljmp
push
jo
push
add
lahf
outsb
or
pop
out
leave
sbb
outsl
push
xor
popf
xor
inc
cmp
pusha
rcll
jmp
push
std
or
nop
test
mov
out
dec
xchg
add
out
lcall
cmp
mov
movsb
or
insb
or
iret
add
xor
xor
inc
ret
aam
pop
cmp
push
inc
outsl
ret
xchg
repnz
mov
popa
xor
gs
or
jbe
jae
dec
aaa
addr16
jns
mov
add
xor
loop
ss
negb
in
test
lods
aad
xor
mov
or
push
cmp
push
in
sbb
in
dec
inc
in
push
jb
jmp
outsb
adc
inc
call
imulb
sahf
sar
adc
or
push
xchg
mov
cs
mov
xor
ja
add
jnp
mov
bound
adc
sbb
pop
stos
insb
xlat
jb
xchg
stc
inc
sarl
xchg
push
daa
ds
fmull
daa
cli
cmp
push
xchg
dec
scas
cmp
xchg
std
lods
in
repnz
pop
sbb
ret
scas
inc
cmp
nop
and
inc
popf
pop
outsl
icebp
es
cmp
hlt
movsl
call
test
cli
das
pop
fwait
and
popa
inc
icebp
push
jo
mov
add
dec
jp
pop
dec
inc
enter
sub
popa
rorl
dec
rcrb
scas
lea
rclb
jb
sbb
mov
bound
add
jno
ret
in
outsb
inc
cmp
add
add
push
leave
or
cmp
inc
fbld
subb
shr
push
push
mov
cmp
mov
cmpsl
repz
rorl
gs
lds
xchg
fisubrs
dec
adc
xorl
lea
cmp
adcl
lcall
mov
shlb
cmp
scas
int3
mov
sbb
adc
enter
add
les
es
fldl
not
fcomps
inc
add
dec
cld
lahf
jp
xchg
cmp
movsb
mov
repz
sbb
jns
cmc
insb
add
push
lds
popa
cmpsl
outsb
or
jnp
pop
pop
out
das
and
cli
loopne
add
jo
push
test
movsl
ret
add
push
lret
add
nop
cwtl
add
imul
imul
sub
jecxz
loopne
and
shll
or
xlat
mov
push
fnstenv
mov
shrb
sub
lods
mov
mov
jmp
cli
adc
push
cmp
jge
jecxz
dec
adc
shrb
adcl
out
dec
inc
and
pop
bswap
into
cmp
movsl
das
test
xchg
imul
xorl
mov
add
jb
in
push
fwait
popa
mov
js
je
repnz
pop
mov
mov
jecxz
fldcw
cwtl
push
mov
cmp
fwait
in
push
xchg
xchg
out
leave
test
lock
jg
cld
sub
adc
sbb
xchg
aam
in
pop
sbb
insb
xchg
int3
std
sbb
inc
ljmp
sbb
xchg
ret
xor
stos
loope
mov
insl
mov
jae
pop
and
xchg
mov
outsl
inc
sbb
ss
sarl
xchg
nop
push
shl
js
sub
sbb
mov
mov
and
jg
rcrl
jns
xor
notl
int3
and
fs
into
imul
stc
dec
ss
jno
jge
xchg
xchg
add
xor
lea
stos
out
into
mov
imul
push
mov
push
shl
fs
stc
mov
shlb
mov
stc
loop
leave
out
cmp
adc
sbb
and
incb
fisttpll
aad
add
adc
dec
or
sub
fists
mov
rolb
xchg
into
lea
add
xor
gs
stos
jp
xchg
insl
in
les
mull
mov
jnp
das
addl
pop
mov
pop
pushf
fs
std
mov
sub
pop
xor
add
dec
out
cs
shl
fcompl
jg
jae
mov
mov
out
sbb
jne
pop
cltd
pop
jmp
cmp
mov
adc
stc
in
sarl
pop
mov
lock
imul
and
cli
mov
into
in
push
push
scas
stc
cmp
push
pop
repz
and
push
pop
jge
xchg
mov
jns
call
shl
adc
jl
fucomp
rcrl
out
mov
lods
xchg
push
pop
xchg
push
shll
mov
loopne
or
xchg
out
sub
aad
xchg
dec
hlt
aam
mov
adc
subl
mov
adc
in
cs
out
pop
aaa
popf
cs
fs
or
push
ss
xlat
mov
xor
into
sub
sub
adc
push
flds
loop
sub
mov
loope
xorl
std
mov
out
push
sahf
lcall
xor
imul
xchg
dec
mov
or
push
cmp
nop
dec
scas
jno
mov
scas
icebp
push
jp
outsb
jb
pop
sub
ret
popa
roll
fwait
push
mov
mov
cmpsl
or
mov
xchg
jecxz
push
fsubr
sahf
dec
inc
adc
push
mov
adc
sbb
lea
test
xchg
cs
and
add
outsl
mov
sub
inc
xor
mov
cmpsb
sbbl
push
test
jne
fs
cmp
gs
lret
push
pop
adc
pop
mov
std
cld
jp
cmp
cmpsb
out
rcl
je
stos
mov
leave
adc
es
stos
adc
aaa
sub
scas
mov
movsl
hlt
fistps
jno
jmp
jl
mov
sbb
mov
xlat
nop
pop
cmpsb
test
lock
les
out
mov
cmp
jle
mov
cs
mov
inc
loopne
lret
cmp
xchg
in
call
xchg
mov
push
mov
xor
mov
mov
xor
pop
push
fisubrs
xor
and
aas
cwtl
loopne
jb
loope
fs
xchg
dec
push
mov
or
lret
cli
lahf
pop
adc
xchg
sub
mov
dec
fs
rclb
mov
lods
or
aas
hlt
roll
adc
sbb
xor
adcl
adc
mov
mov
mov
mov
mov
jg
dec
mov
sub
lds
adc
repnz
imul
jb
repnz
fnstsw
push
call
je
and
mov
xchg
fildl
and
jns
fldt
sub
lret
or
jno
insb
mov
xchg
push
push
in
push
adc
out
jp
jp
push
andb
mov
inc
ret
repz
push
addr16
pop
nop
jecxz
shll
das
sub
inc
cmpsb
push
es
push
add
inc
hlt
fdivrl
pop
call
insb
xchg
add
rcrb
insl
aaa
movsl
add
and
xor
loope
push
mov
mov
aas
sub
jmp
mov
mov
or
cmp
jnp
xchg
push
iret
nop
sarl
int
in
dec
test
shll
test
mov
cmp
sub
pop
rcll
in
xchg
out
insl
notl
rorl
sub
mov
jbe
mov
mov
adc
lods
in
fucomip
jne
ljmp
daa
mov
jle
loop
jo
xor
pop
or
daa
shlb
xchg
cs
je
adc
mov
push
push
arpl
inc
loop
loop
adc
inc
test
pop
sbb
adc
mov
jecxz
push
daa
xor
orb
cmp
push
dec
dec
fildll
insb
push
clc
mov
mov
sbb
adc
mov
xor
jge
testl
cmp
xchg
jb
fmul
insl
filds
andb
jl
fwait
dec
mov
push
jno
cld
jmp
inc
push
das
scas
add
insb
shlb
mov
lea
pmulhw
aad
outsl
sbb
and
xor
fdivr
cli
insl
adc
out
xchg
dec
inc
adc
push
mov
mov
mov
sbb
ja
shll
aas
jbe
sub
repnz
sub
sbb
insl
adc
or
movsl
sbb
and
fwait
orb
jp
popl
push
ret
int
mov
outsl
test
pop
aam
or
pop
sbb
repz
jne
movsb
cmp
sub
mov
stos
mov
sarl
mov
and
jo
push
xor
into
stos
cmp
movsb
jae
lods
roll
subl
mov
out
enter
xor
sub
stc
sub
lret
cltd
ret
pushf
sub
xlat
lods
mov
and
mov
inc
fidivrs
mov
out
cmovp
sub
pop
xor
aad
mov
movsl
xchg
fsubrl
jne
xor
and
pop
scas
imul
mov
xor
mov
fsubrs
xlat
stc
mov
jge
mov
mov
sbb
aam
sub
repnz
jle
dec
movsb
cmp
and
scas
pop
xchg
jbe
and
jo
out
movl
sub
or
jg
mov
in
cmpl
mov
xchg
cli
mov
scas
sbbl
xchg
push
add
das
and
ficomps
add
mov
sahf
adc
pop
cs
aas
lods
mov
jb
jae
das
xor
pop
loopne
outsl
aad
aam
rol
cli
arpl
jns
sbbb
xchg
sub
loope
into
dec
mov
mov
cmp
jmp
fists
nop
pop
flds
lcall
imul
xor
mov
cmc
jae
inc
dec
fistpl
aaa
out
push
outsl
xor
je
mov
stc
mov
cmpb
inc
jp
jle
dec
inc
out
imul
mov
lods
lods
test
pop
or
out
mov
mov
mov
dec
cmp
lea
push
mov
lds
sub
mov
fsubs
rolb
fadd
jo
gs
loop
fwait
inc
out
pop
scas
jbe
pop
clc
dec
jae
mov
jae
test
xor
xchg
test
int3
movsl
jg
test
fwait
or
daa
jg
pop
cs
mov
or
dec
shll
mov
mov
sarl
cmpsb
pop
lahf
mov
add
jnp
xchg
dec
std
push
jl
cli
loopne
and
jge
xor
xor
xor
cltd
movsl
test
fstpl
test
fdivr
adc
in
sbb
inc
sub
jae
push
dec
push
fidivrs
sub
jmp
ja
push
das
xchg
xchg
je
int
stos
lock
xchg
out
push
xchg
iret
mov
sub
add
stos
and
testl
dec
xchg
data16
fdivs
cmp
jle
testl
retw
dec
jno
inc
icebp
dec
lds
jge
xor
aad
addb
sbb
cmp
mov
push
leave
xchg
int3
hlt
pop
mov
and
mov
repz
pop
movsl
cld
pop
ficompl
les
fwait
dec
inc
add
dec
fs
je
add
pop
roll
test
clc
sbb
or
mov
int3
mov
jnp
imull
pop
mov
mov
pushl
inc
dec
jne
jno
xor
inc
or
add
mov
fdivl
arpl
les
test
fsubp
pop
lods
mov
rcr
icebp
cwtl
es
xorl
shlb
stc
loope
add
push
xor
into
or
mov
jle
xchg
xchg
out
sub
push
xor
jecxz
scas
sbb
mov
inc
or
imul
in
jmp
shlb
jb
mov
inc
ss
dec
iret
outsl
xchg
mov
mov
and
aam
mov
mov
mov
addr16
pop
std
out
lock
and
mov
and
jo
loop
pop
arpl
or
xchg
xchg
dec
add
dec
xchg
pop
sti
dec
inc
adc
and
fwait
xchg
ja
push
xor
js
xchg
mov
cs
pusha
outsl
jnp
xlat
lods
dec
pop
sbb
idivb
mov
roll
adc
add
divb
adc
jmp
adc
inc
mov
es
imul
mov
and
and
outsb
movsb
fcoml
sahf
add
sbb
shlb
imul
jp
xchg
loope
insl
pop
out
inc
push
ss
mov
xchg
test
ficompl
jae
add
push
sub
daa
jl
xor
shl
jb
push
push
mov
aad
push
mov
jnp
pop
or
shl
and
xorl
repz
pop
in
mov
sbb
ljmp
pusha
mov
jae
negb
movsb
and
pop
and
push
cwtl
jmp
js
mov
adc
insl
xor
and
pop
add
int
call
push
enter
jecxz
ret
xchg
dec
ret
inc
sub
out
notb
lds
stos
xor
cmpsl
out
or
fcoms
inc
dec
add
sti
stos
bound
push
in
pop
rorl
xchg
scas
pop
test
pop
fsubs
mov
mov
lods
cwtl
mov
add
jae
stos
jo
cltd
call
repnz
bound
mov
pop
mov
cmpsl
mov
pusha
lea
out
mov
or
stos
dec
out
add
xlat
mov
scas
out
out
push
mov
or
cmc
je
mov
lahf
nop
jg
or
rep
adc
rol
sbb
out
notl
xor
xorl
orb
stos
dec
cmp
pop
xor
clc
movsl
jb
pop
push
loope
mov
movsb
push
ds
jle
mov
loope
pop
sub
in
mov
mov
mov
pop
sbb
and
jno
in
rcrl
push
xchg
adc
adc
mov
bound
das
sbb
cmpsb
out
pop
bound
jne
inc
sub
dec
imul
cmpsl
ficompl
dec
inc
dec
mov
dec
mov
pop
push
and
aad
je
pop
insl
popa
test
xor
mov
in
idivb
or
pop
aad
in
pop
mov
enter
and
add
push
jl
iret
and
jl
lret
lahf
decb
inc
inc
enter
fstpl
mov
aad
and
out
push
sub
cmp
and
push
pop
pop
mov
mov
xchg
sar
js
jp
mov
pop
mov
xchg
push
dec
pop
or
inc
or
sub
loope
in
into
jp
mov
adc
mov
mov
stos
adc
add
fmul
mov
out
popa
es
icebp
gs
jo
mov
pusha
jg
sub
mov
dec
or
mov
or
rorl
jl
lret
adc
pop
sub
xchg
lea
xchg
xchg
add
sub
xor
mov
mov
aas
or
icebp
rcrl
pop
repnz
clc
sahf
rorb
shlb
mov
pop
pusha
push
sti
fadds
add
insl
push
outsl
pop
sbb
cmp
fs
mov
pop
mov
stos
sbb
ret
out
pop
insl
lods
das
sahf
pop
rcrl
lods
jmp
xchg
bound
cs
or
cmpl
xor
jnp
xor
loope
pusha
jecxz
lods
adc
or
lds
in
loope
or
and
inc
iret
nop
stc
sub
xor
scas
es
insb
mov
cmc
stos
jns
stc
dec
push
mov
lret
sahf
jnp
and
cltd
pop
rol
pop
iret
popa
fimull
movsb
lcall
and
enter
and
inc
orl
jmp
push
and
cmp
iret
dec
sti
push
clc
xor
mov
cmp
test
ret
lret
icebp
sub
mov
xor
or
les
repz
cld
jp
push
lea
mov
xchg
mov
pushf
xchg
addr16
dec
int
lret
adc
ret
xlat
push
mov
data16
fwait
dec
fwait
or
popf
popa
sub
mov
inc
int
xor
pop
sbb
outsb
dec
pop
sarb
dec
divb
mov
pop
sbb
xorl
inc
pause
lret
clc
lahf
jl
pop
icebp
push
or
jbe
add
out
sbb
stc
cmpb
mov
sti
bnd
inc
dec
push
cmp
and
push
or
shl
xchg
inc
pop
jmp
push
scas
lret
xor
mov
xchg
and
mov
add
stos
cs
outsl
imul
mov
cmovo
in
pop
adc
addl
xor
in
push
xor
inc
imul
lahf
cwtl
test
inc
push
outsb
test
xchg
cmp
je
mov
xchg
push
adc
add
and
out
adcl
aaa
mov
into
jge
test
lret
pmullw
lock
jnp
jecxz
incb
subl
mulb
mov
or
xchg
xchg
adc
xor
jo
xchg
dec
pop
xchg
js
mov
pop
in
jae
push
fcmovne
ss
mov
jecxz
or
jg
or
lods
mov
aad
pop
sbb
xor
js
test
arpl
into
bound
je
pop
jecxz
xchg
inc
adc
movsl
je
mov
in
incl
and
lds
shrb
in
std
in
pop
xchg
push
jbe
dec
fcoms
dec
lods
sub
sub
scas
or
cmp
xchg
dec
jge
out
jns
aas
sahf
rcll
cmp
sbb
aam
out
dec
inc
dec
test
movsl
cmp
sbb
mov
nop
add
pslld
push
test
aaa
xor
loope
sub
dec
mov
mov
imul
jbe
jb
cmpsl
fsubrl
testb
jl
or
inc
push
mov
je
push
adcl
or
cmc
add
push
bound
es
sbb
bound
call
sbb
sbb
test
movsl
adc
xor
bound
lds
out
sub
cmp
pop
pop
add
sub
imul
cmc
sbb
and
jnp,pn
cmpsb
pop
es
fisttps
ret
mov
pop
mov
jno
sti
mov
or
in
out
jmp
test
jp
mov
push
in
mov
push
sbb
icebp
xchg
xlat
movsb
push
cs
cmp
lcall
fsts
pop
scas
call
jg
mov
sbb
jb
jno
pop
leave
adc
inc
or
or
lock
data16
fwait
loopne
cmp
lahf
cmp
xor
mov
pop
xlat
push
pusha
xor
scas
popf
aam
xlat
das
push
and
in
cmpsb
pop
ljmp
mov
fdivs
into
add
enter
jmp
xor
imul
sbb
adcl
sarl
jbe
sub
movsl
and
and
mov
pop
popf
add
aas
pushf
sub
push
aas
fdivrp
push
cwtl
xchg
adc
in
outsl
out
xchg
test
add
xchg
dec
xorb
mov
pop
inc
xor
int
inc
lret
movsb
xor
pop
sub
imul
and
out
sub
add
push
arpl
orl
stos
xor
lods
in
sub
cs
mov
out
ja
pop
mov
sbb
neg
aam
mov
push
jle
out
pop
div
mov
out
xor
lcall
shl
pop
sti
pop
push
in
or
jl
inc
daa
insb
jge
in
cmp
ds
mov
or
daa
cmp
mov
mov
test
add
inc
inc
aas
aaa
mov
bound
ficoml
rorl
and
mov
inc
xchg
mov
popf
out
add
sbb
imul
les
sbb
lret
icebp
sbb
test
out
mov
pop
mov
jae
mov
mov
sub
movb
add
shr
bnd
ss
xchg
push
add
sbb
mov
add
push
loopne
test
cmpsb
decl
mov
dec
pop
sbbb
subb
xor
gs
push
pop
loop
dec
lds
cld
stos
jnp
pop
sub
addr16
mov
mov
mov
sub
xchg
mov
pop
or
dec
ret
sub
les
dec
xchg
aas
je
mov
lock
lods
sbb
mov
test
mov
pop
dec
and
mov
add
jecxz
sub
ja
mov
in
mov
dec
cli
ljmp
ret
das
or
adc
bound
jg
add
pop
fbstp
mov
inc
and
sbb
pushf
push
sahf
aam
jbe
inc
inc
popa
aas
aas
mov
pushl
std
lcall
sti
inc
rolb
bound
push
cmp
mov
repz
jo
mov
mov
add
movsb
mov
cmp
jnp
stos
push
cld
and
arpl
jp
movsb
pop
sub
fidivs
cli
jmp
outsb
testb
pusha
jno
push
inc
xor
or
aam
push
addr16
in
jb
fstpl
je
jp
and
movsl
jo
fdivrs
hlt
jge
xor
gs
bound
mov
mov
cld
mov
bound
sti
jmp
int
adc
cmp
xor
scas
mov
rolb
enter
xor
xor
and
icebp
mov
xor
int3
test
push
mov
xchg
add
sbb
cli
testl
shlb
cmp
movsb
cmpsl
out
fcomps
aas
sbb
aam
pop
outsl
dec
or
xorl
cmp
je
inc
inc
sbb
adc
xchg
inc
leave
dec
subb
shrb
jo
sbbb
mov
and
push
pop
scas
jnp
test
jno
pop
mov
adc
bound
jnp
mov
jg
leave
mov
xor
insb
ret
mov
out
xor
sub
inc
dec
adc
enter
mov
adcl
jg
inc
imul
cltd
add
sarb
in
or
movsl
jo
push
mov
mov
aam
jl
movsl
ret
mov
in
outsl
ret
xor
jo
jmp
mov
adc
cld
bound
fmul
out
sub
xor
je
outsb
mov
mov
lods
lret
test
scas
jnp
mov
mov
pop
mov
idivb
repnz
or
ljmp
add
and
ss
iret
rep
jo
mov
sbb
sti
dec
push
cmpsl
jl
scas
mov
out
loop
mov
cmp
mov
or
dec
loope
push
dec
mull
adc
adc
loope
lea
or
xchg
mov
push
pop
fidivs
dec
mov
sub
cmpsl
out
fwait
aad
imul
xchg
xchg
and
adc
cmp
xchg
push
xchg
scas
into
shlb
add
call
lods
aas
jecxz
or
cli
enter
mov
jbe
popf
cmp
rcrl
adc
hlt
inc
fwait
sub
cmpsl
dec
cli
ljmp
jnp
lahf
cmc
addr16
ret
jmp
fdivs
ss
addb
adc
mov
pop
std
add
xor
or
sub
aaa
lret
cwtl
pop
sarl
sarl
push
cmp
jbe
pop
sub
and
aam
leave
adc
pop
jae
xor
repnz
xor
dec
scas
pop
jp
les
out
add
adc
fists
or
adc
je
or
fwait
xor
pop
ret
xchg
push
fidivrl
dec
and
jb
idivl
mov
clc
mov
jmp
mov
dec
or
jbe
mov
in
jne
in
xchg
fwait
popa
rcll
leave
loope
xchg
into
mov
ljmp
dec
mov
pop
adc
adc
out
xchg
jno
xor
sbb
jb
inc
adc
in
sahf
mov
push
dec
outsl
and
arpl
lret
xor
mov
es
std
or
pushf
aas
icebp
fistps
inc
rcl
test
dec
inc
mov
sbb
orl
rolb
mov
lret
jne
and
mov
into
or
iret
pop
je
call
gs
outsl
mov
or
sub
ret
jl
xchg
leave
hlt
nop
fstps
testl
rcr
incl
inc
sub
fisttps
sbb
fsubl
add
movsb
mov
inc
test
pushf
lahf
xor
cmp
inc
test
and
test
xor
cmp
fdivl
mov
pop
das
aam
rcrb
xorb
or
xchg
jg
mov
pop
movsl
mov
in
mov
jno
jg
jmp
xchg
mov
pop
bound
and
xchg
mov
and
sarb
subl
ja
popf
push
add
jnp
jnp
jg
call
mov
inc
or
ror
ds
mov
sti
notl
lret
cmp
outsb
cmpsl
lret
add
adc
fwait
je
cmp
push
sbb
aad
cmp
sbb
jns
dec
lods
cwtl
mov
lods
xor
divb
push
push
lea
stos
push
ljmp
ficoml
movsb
ds
mov
outsb
scas
and
insl
sub
inc
fists
stc
fs
stc
scas
rorl
sbb
cli
add
sub
cmp
jnp
jmp
mov
mov
dec
lods
jbe
imul
mov
add
bound
and
xor
and
pop
rcr
sahf
hlt
shlb
push
lods
cmc
mov
inc
movsb
cmp
dec
cmpsb
loope
scas
cmpb
cltd
push
push
aam
jb
xchg
xor
aas
inc
mov
add
jl
popf
jge
sti
jns
sbb
out
adc
adc
jmp
sbbl
push
dec
lea
cmp
call
cmp
sbb
sbb
dec
fldl
mov
stos
jns
mov
out
push
sahf
loop
sbb
out
jge
add
repz
sti
or
push
lods
outsb
data16
jmp
push
ljmp
sti
in
xor
insl
cli
out
mov
xor
shlb
rcl
aas
lods
sub
fidivrs
xchg
mov
cmpsb
and
mov
andl
cs
mov
aad
mov
inc
mov
cmpsl
jbe
xor
sub
adc
and
mov
cmp
insl
out
pop
negl
cwtl
fistpll
xchg
sub
call
nop
leave
loope
mov
xchg
or
xchg
push
pop
xchg
pop
mov
cmc
insb
or
mov
mul
pusha
or
push
into
or
movsb
shr
cmpsl
adc
push
cmp
xor
outsl
das
rolb
jecxz
mov
jle
push
push
bound
mov
std
and
dec
test
cmpsb
inc
out
ror
jecxz
inc
mov
mov
dec
dec
test
test
popf
push
fwait
mov
adc
sub
leave
frstor
notb
xor
push
push
xchg
xor
mov
mov
cld
bound
sub
xlat
fldcw
ljmp
repz
cld
mov
fldl
mov
and
addr16
lret
out
dec
dec
sub
pop
je
or
adc
xchg
xor
xor
sahf
fstl
inc
jecxz
or
jne
pusha
addr16
mov
add
int3
fs
pop
cmc
cli
rcll
imul
hlt
sub
aas
stc
jmp
sub
xor
xchg
scas
dec
shll
mov
and
dec
sub
icebp
cmp
test
cld
push
adc
sub
ret
pop
outsl
leave
mov
mov
divl
push
out
xchg
cmp
inc
jbe,pn
mov
in
or
movsl
sub
inc
push
xor
data16
dec
add
lods
adc
ret
sahf
sbb
push
jmp
enter
pop
inc
pushf
fcoml
xor
jnp
imul
fidivrl
bnd
adc
mov
sub
jmp
imul
jnp
and
cmp
mov
jns
pushf
fiadds
add
and
int3
ss
mov
lods
jle
mov
or
mov
push
rcrb
xchg
mov
pop
add
jns
stos
lret
test
negl
push
out
jae
sbb
orl
out
xor
aaa
rcrl
sti
push
rclb
lea
ss
xchg
adc
pop
adc
ja
stos
jge
mov
shll
adc
mov
leave
and
ja
rcrl
mull
mov
inc
add
subl
dec
or
pusha
push
push
add
push
mov
push
cmp
adc
stos
adc
ds
xorb
mov
imul
jo
and
adc
jo
adc
push
and
jl
and
das
lahf
sbb
loopne
push
push
leave
sahf
inc
jle
or
cli
mov
or
movsl
popa
push
dec
dec
rcrb
hlt
mov
bswap
lods
mov
mov
jnp,pn
jle
xor
add
arpl
in
popf
out
sub
fiadds
mov
pop
jge
or
fsubl
orl
lahf
dec
in
stos
sarl
pop
scas
push
shr
sbb
xor
scas
test
pusha
mov
pop
div
lods
dec
es
xor
xchg
insb
xor
or
push
jno
test
fildll
fs
inc
and
pop
xor
adc
dec
xchg
orb
xchg
aad
dec
mov
fisubrs
mov
lcall
clc
arpl
jge
clc
xlat
xor
push
addb
cmp
loop
jb
or
movlps
mov
lret
mov
xchg
sub
add
mov
das
fldt
push
mov
enter
std
mov
xor
pop
cs
out
lret
arpl
or
and
and
pop
and
sti
loope
decb
test
aam
movsb
mov
out
inc
adc
xchg
push
dec
push
je
or
xor
or
addr16
or
lcall
gs
push
push
lock
rcrb
adc
sub
in
ret
ja
xor
imul
mov
ret
cmp
leave
pusha
stc
int
popf
shll
mov
lahf
cmc
mov
into
push
mov
inc
gs
sarl
xchg
pop
or
clc
jb
test
int
lret
push
aas
les
mov
shll
xchg
mov
push
outsb
pushf
insb
sub
inc
stos
sti
std
call
jmp
cmp
fstps
xchg
andb
fs
xchg
dec
test
dec
jmp
mov
out
lods
inc
adc
and
adc
outsl
aam
lods
leave
int3
scas
movsl
faddp
or
in
mov
shrb
jnp
out
pop
pop
in
outsb
mov
nop
ljmp
cltd
mov
les
inc
pop
cmc
cmp
stos
ds
clc
adc
adc
inc
xor
into
sbb
push
cmp
jecxz
loopne
xchg
cmpsb
daa
js
out
or
data16
mov
iret
repnz
mov
pushf
lods
and
or
sub
push
in
stos
add
pop
xchg
xchg
push
cmp
sbb
ja
es
jge
push
push
std
mov
pushf
clc
push
mov
pop
test
xor
fs
dec
gs
scas
and
cmp
jbe
xchg
in
leave
cmp
arpl
sahf
scas
pop
dec
pop
push
pop
ret
notl
sbb
jnp
pushf
cld
loop
mov
cmp
sbbl
sahf
aam
ja
or
xchg
popa
adc
aaa
mov
sub
cmp
out
test
loop
scas
and
xchg
or
inc
js
jne
mov
pop
je
sarl
adcb
pop
cmp
mov
inc
add
int
push
mov
adc
cmpsl
inc
mov
test
mov
xlat
lcall
sbb
stos
adc
pop
xor
sahf
pusha
cmpsl
pop
mov
int3
pop
lods
cmp
sahf
jnp
xchg
sahf
das
cltd
test
lahf
repnz
lock
mov
push
adc
pop
mov
std
xchg
and
bnd
lds
xchg
lret
and
jmp
cltd
sub
mov
mov
popf
stos
push
rcl
out
movsl
add
or
cmpsl
loop
pop
adc
pop
jb
popa
je
mov
jge
or
add
call
push
jle
scas
cmpl
test
shll
mov
sub
repz
dec
or
adc
jle
ficoml
lret
jmp
add
ja
adc
ss
mov
into
fsubp
leave
les
mov
mov
or
loope
mov
or
sbb
lock
sub
clc
js
loope
push
outsb
jl
jne
scas
mov
js
push
or
cmp
lcall
jle
in
fs
jne
mov
arpl
jo
xor
addr16
cmp
jmp
xchg
pop
or
mov
sub
lret
mov
fsubr
jge
in
ss
mov
fstl
xor
mov
adcl
lock
jg
push
jne
adc
js
arpl
sub
inc
inc
mov
imul
or
sbb
inc
aam
lea
iret
inc
xchg
test
movsb
int3
aad
sub
push
jmp
iret
cld
lods
shrb
mov
lret
dec
sub
lahf
xchg
xchg
or
ja
inc
adc
or
pusha
ss
test
pop
mov
sbb
loope
pushl
push
jmp
cmp
mov
pop
shr
dec
insw
lock
frstor
fwait
sub
or
or
xchg
mov
mov
ja
shrl
int
dec
ror
fsubrl
cld
dec
sti
mov
push
dec
arpl
pop
cmp
adc
cmpsl
dec
test
pop
adcb
adc
das
inc
jbe
sbb
fbstp
xor
pop
sar
je
orb
push
adc
push
gs
xchg
push
and
jecxz
or
andl
and
sbb
cmp
je
pop
pusha
pop
lods
push
and
cs
xchg
add
sub
xlat
roll
cs
mov
and
pop
lahf
stos
fst
inc
ficoms
mov
fiadds
sub
frstor
xchg
insb
ror
repz
push
push
mov
pop
xchg
mov
rcll
mov
enter
cli
xor
cwtl
stos
push
mov
push
pop
xor
stos
or
pop
add
xor
decl
mov
bound
add
mov
sbb
sub
xor
cmp
bound
sbb
cmpsb
push
xor
out
adcl
dec
xor
call
and
cld
or
in
aam
out
cmc
add
or
lret
add
aad
or
lock
das
orb
jmp
inc
dec
ljmp
in
aaa
xchg
push
outsl
mov
stos
nop
push
stos
and
mov
test
jae
sbb
repnz
loope
pop
mov
daa
or
jo
push
lds
lods
jb
dec
fs
fcomps
jns
pop
cltd
cmc
or
popf
pop
push
movsl
jno
movsb
sub
adc
mov
cmp
xor
sbb
xchg
daa
test
cwtl
push
jo
lahf
in
lock
adc
in
push
and
stc
imulb
sar
cmovbe
mov
sbb
inc
fildl
adc
into
dec
loop
lcall
ja
inc
mov
dec
gs
mov
jmp
mov
xor
pop
jecxz
out
jns
xchg
adc
lds
popf
shll
or
hlt
xchg
fs
int3
aad
and
mov
sti
insl
sub
add
pop
hlt
je
imul
test
jecxz
mov
fsts
xlat
aaa
jmp
dec
pop
mov
jae
mov
cmp
inc
xor
push
fcompl
lret
in
les
mov
js
mov
cmp
mov
cmpsb
dec
imul
cmp
xchg
or
cltd
sti
dec
pop
mov
xchg
stc
xchg
push
fadd
aas
ffree
addr16
xor
in
and
push
pop
push
mov
mov
push
jp
add
jge
leave
add
data16
cmp
pop
mov
out
fidivrs
push
test
in
dec
mov
mov
push
or
adcb
aaa
loopne
mov
dec
push
xchg
xchg
aaa
jmp
aas
out
data16
ja
cmc
loopne
cmpsl
xorl
fiadds
test
sbb
mov
sbb
loope
ret
mov
lds
cmc
pop
insb
repz
mov
adc
sti
inc
mov
jmp
fwait
inc
xor
cmp
dec
inc
fnsave
sar
mov
mov
dec
lcall
inc
or
push
or
test
dec
lods
sub
shll
cmc
push
repz
stos
int3
or
cltd
fcmovu
testb
out
xchg
sbbb
jo
dec
fisubl
pop
mov
mov
orb
inc
pop
fs
test
add
xchg
mov
pop
adc
arpl
out
rol
mov
pop
fnstcw
mov
inc
mov
lods
shl
mov
in
repnz
pop
xchg
les
inc
pop
sbb
adc
jo
mov
fistl
in
arpl
inc
fcomps
sbb
jb
dec
mov
scas
decl
xchg
add
jns
fistps
adc
gs
andl
roll
mov
sub
pop
addr16
jmp
mov
push
mov
popf
in
sbb
xchg
inc
sub
scas
xor
mov
stc
jecxz
mov
pop
gs
dec
and
push
std
sahf
dec
lea
jns
jp
mov
xor
divb
inc
mov
push
popf
pop
mov
testl
add
or
lahf
mov
test
clc
daa
pushf
jp
xor
pop
jns
jp
add
outsb
add
fadds
fstpt
in
negl
imul
jne
mov
or
sbb
cwtl
movsb
dec
repnz
incb
ret
out
pop
out
shrb
or
aas
mov
jno
xchg
jne
dec
in
inc
adc
rorb
dec
je
sub
and
test
xchg
les
fldl
mov
pmaddwd
popf
addl
loopne
cli
and
arpl
es
shl
jle
mov
mov
fsubs
nop
push
sub
loope
mov
mov
xor
movsb
pop
pop
inc
pop
stc
outsl
das
adc
push
scas
or
int
xchg
fsubs
push
push
cmpl
push
pop
es
add
adc
mov
fildl
ljmp
rcrl
jae
outsl
push
xchg
aam
in
adc
pop
mov
popf
cmpsb
sub
jle
and
push
push
ja
test
pop
sbb
mov
jae
into
pushf
filds
xchg
iret
adc
push
pusha
sbb
je
adc
loopne
mov
mov
pop
cmp
pop
les
dec
aam
pop
jns
mov
outsb
bound
stc
hlt
push
mov
pusha
pop
xchg
imul
jmp
scas
pusha
xor
bound
outsb
jmp
mov
int3
sbb
out
cmp
sti
xor
rcrb
pop
push
sub
cld
call
add
push
aad
push
stos
ss
push
jl
xlat
adc
jo
pop
adc
xchg
jae
inc
pop
ss
jge
repnz
jmp
sbb
xorl
jmp
bound
enter
xchg
push
test
cmp
mov
add
xor
lods
lods
fdivl
mov
cmp
pop
inc
mov
pop
push
imul
push
add
mov
mov
or
fcompl
inc
jl
imul
push
sahf
loope
rorl
lahf
or
cmpsb
push
xor
inc
bound
imul
sub
jns
push
push
inc
inc
push
xorb
xor
repnz
jp
adc
andb
jae
mov
push
jbe
and
movsb
je
jo
rcrb
push
cmpsl
sub
push
fsubs
pop
iret
jp
mov
xchg
nop
mov
pushf
xor
test
dec
xor
lea
sbb
sub
and
mov
rclb
and
jle
or
ja
xor
mov
cmp
sbb
xlat
sbbl
cwtl
sbb
dec
les
and
push
sahf
mov
mov
mov
and
push
push
loopne
ficompl
dec
push
pop
dec
shrb
or
out
mov
cmp
mov
mov
or
bound
cmp
xchg
jg
fildll
nop
xchg
jno
jbe
addl
sbb
out
push
xchg
ss
mov
faddp
aam
popf
pop
aas
andb
sahf
leave
lcall
pand
scas
jmp
mov
push
fisttpll
pop
scas
notl
xor
and
jnp
fidivrl
and
and
je
add
and
dec
inc
pop
bound
add
add
add
repnz
push
icebp
jb
inc
and
push
inc
or
xchg
in
imul
test
rcrb
clc
in
or
mov
xchg
mov
cmc
lret
cltd
sbb
jno
mov
rcl
jno
add
jge
in
mul
xor
rclb
add
jne
mov
aaa
repz
lret
sub
fcoml
pop
mov
dec
add
mov
js
dec
rorb
ret
cmp
sbb
pop
call
clc
mov
cld
cwtl
jg
xchg
fistl
xor
or
stos
shr
or
cmc
loopne
imul
push
out
adcl
lods
mov
jl
xor
aam
mov
or
cmpsl
jae
push
cmpb
sub
sbb
out
xchg
jge
mov
jbe
pop
xchg
add
pop
mov
aad
jmp
xlat
arpl
add
jl
cmc
add
adc
stc
insb
imul
test
jecxz
cs
xor
ljmp
add
rcrl
add
push
adc
out
inc
push
add
pop
mov
push
and
xor
pop
sbb
cmp
adc
sub
imul
mov
in
pushf
pusha
lahf
fs
adc
adc
jmp
nop
sub
inc
jbe
push
push
rcr
cmp
push
cs
sub
xchg
out
xchg
cmp
push
sub
mov
pop
inc
int
sahf
int
icebp
jp
aas
aas
mov
or
jb
jge
in
iret
jb
test
mov
adc
sbb
cmp
or
mov
movb
aam
test
inc
cmpsl
xchg
mov
and
pop
push
fsubl
cli
fs
ret
dec
lds
or
shr
inc
flds
xor
push
sbb
inc
shlb
dec
inc
nop
pop
fidivl
cmc
and
repnz
shlb
xchg
mov
sub
jae
cld
and
mov
jle
adc
sarb
jg
ret
push
imul
cltd
add
int3
rcr
pop
push
cli
or
jp
mov
in
cmp
ffree
fsubs
sbb
out
push
data16
fists
dec
test
jo
push
pop
negl
inc
mov
mov
and
out
clc
aam
push
add
ret
lods
add
pop
dec
imul
iret
es
out
aaa
adc
or
adc
mov
icebp
jne
xchg
scas
adc
pop
aas
int
xchg
int3
pop
repnz
or
gs
fistl
mov
shl
pop
add
cmp
mov
cwtl
push
dec
adc
aas
insl
add
cs
sbb
xor
or
loope
or
ljmp
inc
dec
cli
es
sahf
test
outsb
lret
nop
rcl
sub
stc
icebp
mulb
cmc
or
mov
je
test
mov
mov
mov
dec
out
cmc
stc
dec
lcall
aas
jo
add
push
jle
sub
js
xsaveopt
lods
cs
jmp
dec
mov
pop
rcrl
test
xor
addl
jo
nop
jge
out
and
sub
stos
sbb
or
push
dec
pop
inc
sbb
fimull
pusha
xlat
mov
imul
dec
mov
push
adc
cmp
in
addr16
rcrw
jnp
clc
xorl
or
hlt
dec
cmp
mov
nop
js
jp
pop
fistl
xchg
xchg
fildll
js
mov
pop
mov
stos
mov
bound
icebp
sbb
pop
cmp
and
fwait
inc
sub
ret
add
into
jecxz
and
mov
inc
arpl
mov
sbb
jmp
mov
lret
push
sbb
xchg
jns
adc
test
fcoms
les
fwait
cmp
jl
lret
aaa
out
cmp
shlb
push
sub
sub
inc
and
or
aad
inc
lret
aad
mov
pushaw
fldenv
xchg
sub
mov
mov
iret
mov
xor
pop
dec
enter
xor
mov
sub
xor
stos
repnz
int3
lret
sbb
mov
sbb
enter
cld
cmp
sti
sti
jne
xor
dec
xchg
xchg
jno
adcb
pop
subl
jle
pop
or
adc
roll
nop
ret
adc
sub
sub
notl
mov
aaa
jnp
jae
testl
iret
xor
add
icebp
imul
ds
sbb
mov
pop
xlat
mov
ror
inc
loope
shll
inc
dec
addr16
stos
mov
aaa
stos
fwait
aad
ss
sub
or
add
push
fs
rorb
jnp
sbb
jno
pusha
fwait
jo
adc
ljmp
xor
cmp
shll
jno
xor
push
aad
mov
lods
xor
andb
lret
add
lds
stos
enter
loopne
shlb
inc
pop
cmp
sahf
cmp
test
and
movsb
mov
mov
mov
sub
lret
mov
or
fucom
lods
je
fdivr
lret
or
pushf
mov
mov
cwtl
jns
loopne
push
sbbb
loope
jae
dec
cmp
repnz
daa
lret
xchg
dec
int
adc
out
shll
leave
test
fs
outsl
int3
or
mov
mov
mov
dec
in
outsl
ljmp
loope
push
imul
ffreep
inc
les
sbb
data16
sbb
fidivl
adc
and
lcall
push
pop
mov
sbbb
mov
xchg
dec
frstor
inc
cmpsl
cmp
les
sub
pop
pusha
hlt
pop
mov
jmp
xchg
pop
pop
outsl
adc
sub
xor
sub
ljmp
adc
pop
je
vmovsd
js
lret
jecxz
nop
and
lock
out
cmc
xchg
ja
dec
hlt
dec
filds
leave
xor
pop
sarl
loope
cmpl
das
xor
popf
jecxz
pop
and
fisttpll
out
sub
sbb
xchg
lcall
mov
mov
add
mov
je
sub
test
dec
lret
xchg
lahf
fdivs
and
add
stc
mulb
das
ficomps
leave
popf
jmp
push
cld
insb
adc
jnp
adc
mov
xor
mov
cmp
fists
lea
push
inc
addr16
shrl
daa
arpl
aaa
jge
shl
and
cli
clc
fisubs
inc
pop
pop
mov
push
cs
jne
or
clc
mov
jp
mov
rorb
rcl
cltd
pop
pop
mov
fsubr
into
or
or
jecxz
sbb
add
scas
sbb
sbbb
jmp
dec
cmpsl
inc
mov
jecxz
les
ja
shrl
iret
sub
int3
push
scas
xchg
jnp
mov
or
mov
adc
int3
sbb
in
into
sub
lods
jl
push
jns
jae
out
imul
insb
jae
repz
mov
push
push
xchg
scas
mov
sub
xor
addr16
push
xchg
popa
cmpb
mov
xor
and
and
inc
cmc
mov
pop
int3
jno
ret
fs
nop
aas
mov
aad
mov
dec
inc
insb
testb
and
adc
push
stc
data16
aaa
xchg
mov
movntq
jp
dec
mov
cmp
jmp
pop
jge
mov
add
xchg
xor
dec
scas
lahf
push
cmp
pop
mov
mov
lcall
jae
xchg
stc
jbe
add
dec
xor
dec
stc
xchg
or
add
mov
push
sub
cwtl
push
loop
jecxz
je
inc
ret
xor
int
sbb
fs
and
pop
sbb
leave
cmp
fsubp
into
pop
or
dec
out
jno
mov
insl
hlt
das
sub
jno
and
shll
pop
push
cltd
mov
les
ja
repnz
or
add
jp
mov
decb
sahf
stos
into
inc
int
and
fidivrs
sbb
cmp
dec
push
rol
push
mov
push
pop
aaa
mov
sub
xchg
inc
and
xlat
mov
add
movsb
cwtl
loope
lods
cmc
les
insl
mov
pop
mov
pop
adcb
in
lret
push
mov
popa
fcomip
nop
sub
out
push
call
pop
or
adc
jge
mov
or
sub
pop
pop
ja
add
shlb
aaa
add
leave
jno
stos
xor
xor
stos
and
or
lahf
adc
mov
mul
call
adc
je
xlat
loope
leave
test
adc
loope
mov
cld
fisttps
syscall
mov
bound
aad
inc
arpl
inc
push
mov
cmp
ret
jno
jno
js
push
pop
inc
loop
xor
shrl
pop
rcrb
push
ljmp
addb
pop
push
cmp
xor
jbe
or
stos
lret
subl
inc
test
push
lods
push
loopne
mov
int3
icebp
cltd
and
call
mov
dec
ds
test
lea
lahf
sub
les
xor
cli
mov
popa
ja
lods
in
sub
sbb
ja
lods
ret
jge
ljmp
and
rcrl
jbe
sbb
jnp
aam
xor
xchg
fcmovnbe
sbb
test
lea
outsb
lock
loop
jg
pop
out
out
jnp
negl
pop
push
or
dec
subb
sbbb
ret
sub
popa
pusha
lods
cmpb
mov
cmp
sti
pop
in
jmp
arpl
movsl
adc
sub
xchg
out
dec
shr
call
jne
sbb
sub
mov
addr16
pop
std
nop
pop
jb
test
in
rclb
push
icebp
add
or
cmp
mov
adc
movsl
jecxz
jp
into
scas
and
leave
aas
cmp
xchg
cmc
cld
imul
test
jno
xchg
into
out
es
dec
aas
sub
test
pop
js
mov
mov
push
outsl
insb
pop
shll
addr16
mov
mov
jle
ret
testb
xor
pop
xchg
rclb
jnp
and
ljmp
insb
sub
iret
jnp
xor
push
add
out
mov
or
lods
mov
nop
test
imul
jl
lret
or
cs
addl
rclb
cltd
into
mov
sahf
push
es
pushf
cmc
add
jecxz
mov
adc
lahf
ret
or
mov
sbb
lock
mul
outsb
nop
lcall
std
outsl
xchg
xchg
jg
aam
fisttps
int3
ficoml
jecxz
inc
xlat
mov
lods
insb
popa
and
and
mov
outsb
int3
enter
mov
pop
out
ficompl
gs
leave
add
jne
mov
inc
mov
jge
add
imul
lds
inc
and
sbbl
pop
jl
mov
mov
jp
mov
out
mov
movsl
adc
sbb
mov
jo
mov
lds
aam
add
mov
cwtl
fmuls
dec
xchg
jmp
iret
jnp
sbb
fsubl
mov
push
shl
ja
add
xor
repnz
jne
stos
mov
int3
js
xchg
test
aaa
sarb
fcomps
xchg
and
jae
push
sub
lds
jnp
sub
jmp
dec
push
mov
rolb
loop
jnp
in
inc
gs
or
or
mov
ret
cs
mov
lods
lcall
jns
stos
daa
adc
shrb
push
icebp
sbb
and
mov
inc
sub
xor
repnz
mov
dec
or
imul
fs
dec
in
adc
out
add
pop
xor
and
push
push
aas
or
loope
out
sbb
xchg
inc
pusha
jmp
scas
cltd
adc
or
push
cwtl
lea
push
clc
xchg
lods
xor
adc
shrb
ja
lods
dec
in
and
lods
mov
jne
adc
jg
mov
add
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
add
adc
add
adc
add
add
add
push
add
add
add
add
add
add
