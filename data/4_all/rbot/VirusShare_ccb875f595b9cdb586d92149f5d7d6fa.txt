jae
cmpsl
mov
scas
dec
pop
mov
xchg
pop
push
out
cld
jp
adc
or
push
xor
push
mov
loopne
daa
das
jne
ss
scas
xor
jmp
std
mov
out
sti
pop
push
push
rcrl
arpl
mov
dec
pop
sub
in
dec
out
xorb
pop
jnp
jecxz
cli
in
std
lahf
xorb
lea
mov
stos
out
test
inc
lret
adc
mov
in
mov
push
cmpb
and
in
jbe
das
mov
es
shrl
push
pop
pop
cs
and
sti
dec
cmp
add
pop
mov
test
int3
add
pop
lret
fisttpll
push
rclb
inc
push
lahf
mov
adc
xchg
inc
ss
mov
cmpsl
mov
fdivl
mov
xor
lds
mov
out
push
shlb
fucomi
leave
jmp
adc
adc
fimuls
cmp
test
mov
daa
xchg
es
dec
daa
call
push
test
cmp
inc
enter
arpl
test
inc
nop
rcl
arpl
call
or
lds
aad
hlt
aam
loop
enter
lret
das
test
cli
mov
cmp
or
inc
hlt
xchg
in
jno
pushf
mov
push
xorb
inc
std
and
dec
push
add
sbb
loop
inc
int
push
js
push
add
bound
das
adc
ja
sti
xchg
mov
hlt
jns
pop
mov
arpl
adc
out
jbe
test
int3
adc
inc
add
inc
test
dec
push
fnstcw
loop
flds
jecxz
pop
sarb
rol
push
mov
lods
test
movsl
mov
out
pop
divb
pop
das
xchg
xchg
fbstp
pushf
sbb
jo
and
mov
sahf
testb
xchg
push
mov
sbb
jb
pop
scas
fnstenv
mov
cwtl
in
mov
ret
out
adc
inc
or
mov
or
orl
push
adc
pusha
das
jne
push
pop
jne
andb
std
adc
mov
cmp
cmpsl
aam
mov
std
push
mov
pop
jbe
subb
aas
insb
gs
cmpsl
fiadds
mov
adc
clc
pushf
outsb
jns
insl
cmpsb
mov
mov
mov
insb
aam
js
pop
sbb
cmp
je
adc
mov
pop
lea
sarl
jmp
cld
dec
mov
inc
cmp
xor
and
ljmp
dec
aas
sub
mov
ret
add
add
dec
push
push
dec
pop
fdiv
fs
aaa
inc
jne
inc
jge
out
or
stos
lock
addr16
int
and
push
jge
jo
test
fucom
inc
loope
or
imul
cli
sub
mov
in
dec
imull
push
dec
mov
mov
cmpsb
push
adc
int
inc
leave
mov
push
scas
push
jb
call
sbb
ret
pop
cmpsl
push
mov
and
push
stos
out
int3
test
inc
scas
mov
das
xor
sbb
mov
imul
pop
or
mov
sti
or
mov
fst
xor
cmp
repnz
mov
insl
mov
into
or
or
in
jle
pop
cmc
pop
int
movb
add
inc
sbb
xor
and
mov
rcrl
push
mov
iret
stos
pushfw
inc
repnz
mov
cmpsb
jno
fnstenv
aaa
lahf
clc
push
jnp
in
rorl
xor
int3
aad
in
or
stos
lock
cmp
dec
dec
scas
fiaddl
fcoms
lcall
sub
lds
and
test
adc
scas
imul
in
outsl
std
inc
mov
les
or
fdiv
mov
int3
fs
xchg
mov
xchg
stos
lea
push
insl
xchg
aad
sahf
fisttpl
xchg
iret
popa
or
addb
xor
addl
out
xchg
sti
das
in
adc
push
xor
stc
lock
cld
cs
pusha
fisubs
push
mov
pushf
rorb
jp
lods
movsl
ret
fimuls
clc
sbb
shr
ja
inc
mov
mov
xor
inc
jmp
inc
scas
call
sub
mov
push
adc
mov
mov
test
fcmovu
or
rcrb
gs
test
dec
insl
std
add
add
pop
scas
cmc
sbb
mov
mov
xor
ror
sub
inc
in
mov
adc
xchg
push
inc
ss
fwait
insb
push
lret
pop
into
lock
cmpsl
in
mov
fisttpll
outsl
cli
sbb
mov
call
in
jns
addr16
insl
cltd
in
adc
lahf
mov
mov
push
je
dec
ss
mov
out
aad
lea
js
mov
push
cmp
lea
lods
rorl
in
fsubrs
aas
jmp
cmovg
es
repz
xor
dec
fld
mov
ss
in
cmp
and
xor
ss
repz
mov
push
icebp
lret
jmp
mov
inc
xchg
mov
push
jno
mov
pop
lea
cmc
sub
add
pusha
add
and
loop
jecxz
push
rorl
sub
pop
loop
sbb
pushf
xchg
mov
insb
jns
test
stc
clc
push
pop
clc
stc
mov
sub
cld
push
jge
jbe
push
dec
pop
pop
push
test
pop
push
sub
pop
push
sub
pop
cmc
test
jbe
js
push
cmp
pop
js
push
jle
rol
pop
shl
jg
dec
inc
nop
and
cld
call
sub
sub
neg
neg
push
mov
pop
ja
cmp
test
clc
pop
push
sub
pop
push
shl
pop
push
call
lret
fisubl
and
and
ja
pop
scas
sbb
sbb
call
pop
pop
push
add
pop
add
push
pop
test
push
call
sub
out
pop
fcomip
scas
stos
mov
sub
sbb
push
xchg
sarb
inc
mov
cwtl
inc
gs
mov
lret
pop
jmp
dec
mov
in
push
inc
je
inc
fwait
mov
es
and
bnd
jp
lahf
mov
loope
in
dec
mov
dec
mov
mov
stos
lods
or
and
ja
push
jo
jns
test
pop
js
push
push
sub
pop
pop
ror
shl
cmc
test
je
push
call
push
sub
mov
lock
ret
aaa
xor
mov
dec
mov
push
lret
and
dec
xchg
mov
sub
pop
push
add
pop
test
and
push
push
mov
pop
pop
xchg
jl
jns
add
shl
xor
push
call
sbb
stos
loopne
icebp
push
repz
scas
ss
mov
mov
dec
cld
lahf
mov
cmpsb
inc
aas
fcmovbe
int
mov
jmp
les
push
mov
push
xchg
movsl
xchg
mov
pop
cmp
loop
jecxz
leave
mov
nop
dec
gs
clc
sarl
cld
and
ljmp
inc
pop
jle
stc
hlt
add
mov
inc
test
add
push
add
test
add
sub
loop
jecxz
or
or
sbb
jae
aas
test
pusha
jnp
mov
orb
call
xor
loopne
iret
cs
and
in
sbb
ret
or
imul
sub
add
insb
cmp
cli
cmp
sar
push
cmp
push
sarb
test
leave
ja
dec
jne
jmp
fldcw
aas
sub
cs
imul
inc
movsb
push
push
pop
scas
les
imul
sbb
frstor
pop
cmp
xchg
cld
nop
mov
pop
enter
and
fistps
sbb
pop
and
mov
add
addr16
das
sbb
faddl
mov
scas
and
sahf
cmp
sbb
xchg
mov
pop
push
inc
sti
pop
push
lods
and
mov
jp
push
jp
and
pop
jmp
cmp
or
mov
or
ljmp
fs
scas
sbb
shl
rorl
mov
pop
pop
decb
ret
fwait
xchg
adc
iret
cmc
loop
sbb
adc
xor
ja
out
xor
int
mov
arpl
inc
mov
inc
mov
iret
icebp
push
or
orb
in
mov
mov
stc
imul
mov
or
push
lcall
adc
xor
push
rcrw
pusha
rorb
outsl
jmp
repz
mov
clc
aam
pop
and
or
cs
stc
jns
dec
mov
in
xchg
imul
dec
xor
movsb
or
lods
outsl
movsl
adc
daa
loope
sahf
add
ljmp
xor
jp
loope
imul
ds
pop
add
mov
leave
pop
sub
inc
lods
jne
pop
divb
mov
sbb
cmp
sar
sub
out
add
rclb
aam
subb
movsb
mov
and
jle
mov
movsl
jns
ljmp
insb
jle
stos
insl
push
mov
add
mov
insl
jb
fnstcw
mov
outsl
mov
mov
mov
push
mov
cmp
mov
or
dec
inc
add
lods
cmp
xchg
push
pushf
xor
aad
in
mov
push
lock
rcrb
pop
insl
inc
sbb
mov
loope
mov
add
ds
xor
flds
jmp
pusha
or
test
or
push
sub
xor
or
or
add
dec
nop
fdivrl
push
mov
pop
js
stos
and
scas
jecxz
sub
mov
mov
rorb
add
aaa
lret
add
shrb
xchg
pusha
sub
push
inc
int
inc
xor
aam
and
mov
movsl
pop
xor
adc
insb
dec
pop
add
insl
addl
xor
adc
jg
pop
mov
jge
test
shr
lock
pop
mov
ja
xor
test
adc
mov
stc
push
xor
adc
stos
dec
and
mov
in
rolb
std
lret
shr
xchg
dec
shlb
sbb
imul
sti
out
pop
jns
add
bound
fsts
cwtl
pop
dec
negb
cli
cmpsb
mov
pop
inc
push
cmc
das
shlb
push
inc
aad
sub
aaa
int
jp
push
sub
fisttpll
adc
adc
sbb
xlat
daa
or
xlat
icebp
mov
sahf
xor
jb
sbb
sub
dec
sbb
and
into
jno
sub
sub
call
xor
mov
cs
int3
xchg
jmp
mov
jbe
inc
cmp
pop
jno
and
push
rcl
inc
roll
aad
vmread
lock
mov
in
sub
mov
std
cld
sbbb
pop
int3
fcmovnb
daa
adc
enter
inc
icebp
pop
push
mov
add
stos
add
sbb
je
dec
dec
test
movsb
or
sbb
out
lods
push
jle
shlb
dec
movsb
ja
aam
dec
mov
jae
xchg
mov
daa
stos
cmpsl
shll
sub
rolb
xor
and
xor
sub
sbb
and
cld
adc
sbb
shl
fs
and
dec
push
dec
loope
adc
mov
and
ret
cmpsb
mov
xchg
and
jno
xchg
pop
ret
push
sub
dec
xlat
loope
int3
mov
sahf
inc
pop
fsubrs
pushf
push
cld
mov
add
imul
in
ljmp
pop
sbb
jo
pop
add
fwait
aad
shlb
mov
mov
pop
cmp
mov
pop
cmp
cmp
cmp
in
sbb
pop
cmp
adc
aad
jo
lret
sbb
xor
xor
jnp
xchg
push
in
cmpsl
inc
movsb
pop
and
jbe
xor
dec
rcl
sbb
mov
cmp
and
test
mov
shll
xlat
and
push
sbb
cmp
xchg
pusha
cmpsb
ja
or
cld
xlat
cs
ja
int3
cmp
xor
lock
fistl
adc
stc
cmp
mov
mov
cli
lods
dec
push
mov
fistpl
pop
scas
pop
mov
les
je
jl
jb
out
or
push
inc
inc
cmp
mov
add
mov
push
loope
jne
mov
lods
or
add
and
aam
test
movsb
daa
int3
pop
pop
popa
inc
xchg
shr
lock
pop
push
fs
inc
dec
and
pushl
adc
or
push
int
or
aaa
lods
pop
sbb
dec
pop
scas
into
mov
add
mov
out
jo
mov
in
cld
out
dec
and
inc
pop
sbb
mov
shlb
jle
test
inc
shll
xchg
cmp
cwtl
ret
or
cwtl
lods
pusha
and
jecxz
lret
in
stos
push
std
lods
dec
dec
pop
cmc
pop
rolb
sub
jl
movsb
mov
add
fisubl
mov
fwait
xchg
cld
rcll
adc
mov
stos
or
mov
lcall
inc
and
jno
dec
sbb
push
jns
push
jge
mov
ljmp
data16
or
mov
push
ja
outsl
push
in
leave
lret
sbb
mov
nop
push
push
fimuls
js
or
pop
mov
mov
stc
mov
je
iret
mov
adc
cmpsb
pop
and
push
jp
outsb
and
insb
cmc
push
adc
sahf
mov
pop
adc
and
mov
dec
jne
rcl
out
sbb
mov
or
inc
stc
fstpl
cmp
and
cmpsl
dec
ret
jns
mov
ja
popa
fists
cli
jbe
aam
xchg
mov
mov
add
jns
sub
frstor
clc
inc
testb
js
repnz
shlb
jp
sub
call
add
sarb
push
fidivrl
repnz
sbb
jmp
add
xchg
gs
mov
mov
je
xor
imul
push
jno
or
test
in
and
push
aad
into
pop
adc
xor
mov
inc
div
jle
cmp
jg
cmp
sahf
sub
das
jecxz
bnd
or
add
mov
sti
cmp
mov
adc
xor
xor
mov
movsl
arpl
jge
jge
cwtl
lds
sbb
and
pop
out
pop
lea
xor
xchg
iret
adc
and
xchg
jmp
pop
mov
push
ds
mov
data16
pop
out
fs
outsl
punpcklbw
mov
js
call
fs
ljmp
lahf
sbb
flds
iret
pop
ret
out
fildll
call
dec
push
ret
movsl
mov
imul
dec
leave
add
loop
sub
leave
sub
xor
das
cmp
lahf
in
movsb
mov
mov
test
pop
scas
ds
pop
das
adc
inc
leave
cmp
pop
repnz
test
push
addb
icebp
mov
cmp
cmpsb
clc
pusha
scas
lcall
fidivs
pusha
xchg
icebp
mov
inc
cmovp
xchg
inc
or
aas
xor
sub
push
jne
fldl
notl
into
mov
rolb
mov
sbb
scas
cmpsb
es
xchg
imul
adc
push
push
out
dec
jo
fmull
xchg
xchg
mov
ljmp
stos
or
and
enter
pop
mov
inc
sub
loop
sahf
inc
lods
nop
push
mov
popf
call
xor
sti
mov
mov
inc
xchg
fnstsw
cmp
adc
cld
hlt
test
adc
jo
daa
pop
adc
xchg
sti
test
or
fs
or
movsb
stos
frstor
sbb
fsubrl
or
dec
inc
int
insl
lahf
pusha
adc
jne
mov
test
data16
inc
mov
push
arpl
sub
pop
hlt
test
and
push
or
adc
xor
sti
repz
pause
mov
call
movb
mov
sbb
pushf
adc
add
cmpsb
test
add
shr
xchg
lock
add
cmpsl
scas
and
inc
testl
sbb
popa
mov
lcall
and
sub
sarb
inc
int3
jmp
add
add
mov
push
or
lea
sub
out
les
outsb
xorb
sub
xor
jmp
andl
fyl2xp1
pop
lcall
sbb
jmp
xor
dec
out
mov
popf
pop
lds
pop
lds
sub
mov
dec
and
dec
inc
xor
and
aaa
ljmp
sub
cmp
pop
arpl
xchg
es
fs
push
call
sbb
popf
xchg
pop
mov
pop
sub
add
leave
int3
mov
push
aad
mov
xor
sbb
jg
sahf
cs
in
push
repz
cmp
and
pusha
jl
inc
mov
mov
inc
xchg
add
movsb
rcrl
fidivl
fwait
rorl
int
aad
cmp
aas
push
pop
in
cltd
fistps
jg
lods
aad
repnz
mov
movsl
stos
testl
sahf
lock
pop
pop
nop
les
mov
rclb
movsw
jle
mov
imul
mov
test
dec
mov
addr16
xchg
scas
cmp
sbb
add
add
cmc
fucomi
sbb
xlat
adc
mov
push
mov
test
jecxz
enter
xchg
xchg
stos
cmpsl
ljmp
aad
adc
sar
mov
out
cli
fwait
int
scas
mov
or
push
push
inc
add
xchg
subb
daa
or
arpl
dec
xor
dec
xor
lea
adc
dec
push
and
sub
or
cli
daa
ljmp
addb
fidivrs
mov
cmp
push
mov
lret
pop
jno
sti
mov
addr16
add
movsb
jae
in
dec
xlat
push
ds
lret
lcall
adc
jmp
cld
sbb
insl
pop
jb
add
jo
addb
and
cwtl
or
sbb
mov
lahf
cmp
mov
in
dec
mov
ret
in
adc
jno
test
xchg
pop
sbb
xor
popf
orb
popa
pop
jl
adc
xchg
mov
enter
lret
jl
mov
sbb
insl
je
popa
dec
sbb
loope
out
scas
inc
out
cmpsl
in
je
mov
gs
jl
push
xor
jns
test
ud2
mov
jmp
adc
jge
ficoml
and
sub
mov
dec
scas
push
jbe
and
xchg
testb
lret
rcll
pop
mov
outsl
xchg
ret
scas
push
test
test
stos
sbb
int
nop
adc
xor
aaa
or
and
jg
inc
or
push
ret
and
mov
dec
xchg
lahf
xor
dec
sub
rorl
fistpll
inc
pop
dec
lea
mov
or
or
jbe
icebp
mov
imul
loope
xchg
fwait
inc
mov
adc
mov
adc
fimull
mov
fdivr
mov
addb
popf
std
sbb
mov
pusha
rolb
push
imul
xor
movsb
jmp
lea
xlat
je
mov
xchg
std
cli
or
je
cmpsl
inc
jne
jg
inc
mov
push
sub
push
iret
push
xchg
imul
in
inc
mov
aas
repz
jg
xchg
pop
xchg
and
xchg
outsl
sub
es
jl
bound
les
outsl
imull
adc
inc
add
les
xchg
push
jb
inc
inc
xchg
xchg
lahf
adc
mov
iret
aam
cmpsl
jnp
xchg
xor
lret
stos
sarb
rorb
cltd
rcrl
int
cmp
xchg
mov
and
and
test
lods
push
push
xor
cmpsl
stos
sub
inc
lcall
adc
cmp
rorl
jo
aad
jle
inc
fidivrs
dec
dec
cmp
xchg
jnp
jmp
adc
push
call
add
subl
inc
ficoms
loop
insb
pop
inc
pop
fwait
es
hlt
cwtl
mov
rcl
outsl
mov
pop
testb
out
fiaddl
or
xchg
jle
mov
cltd
in
add
cmpsb
sahf
mov
sahf
push
pop
outsb
lret
mov
inc
or
or
inc
mov
imul
int3
dec
cmpl
and
push
call
insb
jb
pop
pop
add
test
cmp
pop
repz
lret
stos
xor
mov
les
test
mov
cltd
cli
stc
scas
xor
xlat
mov
jo
mov
ret
xor
mov
lahf
lret
ja
adc
repz
nop
sbb
enter
int3
mov
imul
push
es
arpl
ret
mov
lret
adc
sar
bound
cwtl
ja
lcall
test
lret
ds
jns
andb
adc
std
and
pop
mov
lds
in
dec
ljmp
ret
pop
jns
sub
lock
and
or
jp
sbb
adc
repz
pop
push
mov
mov
fcomip
sar
mov
das
mov
mov
sbb
test
je
imul
icebp
movb
pop
xchg
in
imul
mov
out
mov
in
popf
flds
outsb
push
hlt
arpl
jp
or
unpckhps
movsb
iret
mov
push
and
push
push
push
out
scas
sbb
sub
dec
outsl
sbb
das
ja
mov
xlat
fcmovnbe
xchg
sahf
aas
xchg
outsb
jne
push
jl
cs
jo
or
xchg
aam
sub
dec
pop
jp
add
inc
sti
ret
add
xchg
lds
je
jae
out
pop
dec
popa
ja
cmpsl
outsl
test
mov
loope
xor
xchg
sub
in
ret
addr16
in
cwtl
iret
fdivrs
mov
std
enter
ljmp
cwtl
fcompl
inc
sub
pop
out
sub
shrl
stos
sti
lods
loopne
scas
push
add
fstpl
xor
push
add
lods
test
jl
sub
adc
dec
std
mov
mov
popa
pop
fbld
fstpt
pop
xchg
pusha
inc
push
lock
fdivs
loopne
es
test
movsb
je
mov
dec
mov
ficomps
cli
inc
cltd
xor
sti
mov
mov
clc
in
das
mov
call
xlat
jo
int
lea
xchg
jg
mov
cmp
cwtl
jl
dec
jecxz
xor
adcl
push
sbb
lock
jle
dec
into
mov
sub
xor
insb
jmp
xchg
jl
push
inc
pushf
std
xor
in
cmp
dec
push
cltd
std
mov
addr16
loopne
and
cmpb
push
adcb
stc
sub
cmp
mov
out
dec
sbb
xlat
scas
sahf
cmp
idivl
movsb
gs
add
rorl
xor
andl
dec
push
idivb
js
and
sub
inc
cs
xchg
std
shlb
aam
cmpsb
scas
loopne
mov
or
or
or
aad
pop
cmp
xchg
aad
mov
out
sbb
fwait
dec
sub
mov
outsl
xorb
aaa
sbb
or
popl
rolb
or
and
xor
daa
cmp
mov
jg
aad
sbb
ret
arpl
jge
mov
out
sbb
jbe
sbb
lahf
mov
lret
dec
xlat
pop
fcoml
scas
mov
push
xor
sub
sub
jmp
jg
inc
lods
and
pushf
push
or
pop
fadds
pmaxub
cmp
int3
out
lret
icebp
xchg
adc
xor
ficoml
push
fyl2xp1
cld
xchg
shrb
xor
xor
jecxz
add
pop
into
aad
xchg
mov
xor
pop
xor
test
and
pop
pop
imulb
cld
push
xor
and
jle
loopne
xchg
xor
int3
xlat
iret
repz
sarb
mov
shl
push
les
cltd
cmp
cld
sbb
movsl
sbb
cmp
adc
push
pop
inc
pop
inc
sbb
pop
jmp
xchg
xchg
insb
call
cmp
inc
subb
mov
xchg
jecxz
push
aad
cmp
fs
orl
mov
jl
ds
roll
or
jg
mov
inc
or
sub
cmpsb
xorb
std
test
test
push
rcrl
adc
shl
mov
inc
sub
xor
fnsave
xor
mov
xchg
mov
push
insl
push
mov
mov
lahf
or
xor
out
push
leave
mov
push
insb
pop
dec
fcmovne
jo
inc
in
fwait
jg
dec
sahf
ret
dec
clc
dec
popf
int3
sub
lgs
cmc
loopne
sbb
jg
lods
mov
cmp
in
lods
adc
mov
sbb
sub
and
mov
addr16
lods
test
mov
inc
jg
xor
fwait
clc
popf
and
cmp
repz
stc
mov
lds
sbb
fldenv
lcall
adc
adc
and
jbe
test
outsb
js
ret
mov
bound
xor
mov
std
aas
les
sbb
int3
in
scas
idiv
mov
add
adc
or
lods
enter
pusha
cmp
outsl
cmpl
sbb
roll
push
daa
and
mov
sbb
mov
dec
push
lcall
es
lea
popf
int
fistpl
loope
mov
in
add
inc
xchg
aaa
lock
push
xchg
fiadds
jecxz
lcall
push
and
jo
mov
xor
scas
pop
insb
lret
pop
xchg
jb
sbb
xchg
mov
pop
cs
cmpsl
sbb
xchg
jp
xchg
icebp
pop
pusha
sub
cltd
pop
lcall
dec
test
test
subl
cmp
jne
push
jnp
addl
js
cmp
sub
stc
dec
insl
and
jnp
sbb
imul
jo,pt
hlt
insl
dec
jo
enter
lahf
in
addr16
add
cli
jp
insb
push
fmul
jge
or
lret
pop
pop
push
sbb
mulb
out
xchg
enter
inc
push
clc
add
daa
xchg
mov
je
outsl
cmp
js
inc
icebp
out
test
out
xchg
xchg
mov
imul
ret
test
pop
and
test
xor
mov
sub
insl
lods
push
pusha
adc
out
popf
cmp
cld
sub
inc
ret
fninit
popa
int3
lret
pushf
outsl
sbb
and
lock
enter
imul
jnp
hlt
sbb
jmp
or
in
sbb
mov
lea
iret
xlat
fstl
jns
pop
pop
aam
test
mov
dec
adc
xchg
mov
adc
or
cmpsb
in
fiaddl
stc
and
pop
xor
jnp
cmc
mov
mov
mov
scas
adc
jg
pusha
fcomps
mov
adc
fstpl
adc
std
mov
xor
bound
dec
in
add
sub
dec
in
push
or
inc
pop
repz
mov
adc
mov
arpl
jne
addr16
cmp
pop
fstps
sbb
and
sub
adc
sbb
ficomps
stos
push
jbe
adc
pop
push
stos
icebp
xchg
enter
and
xor
xor
cltd
outsb
clc
mov
scas
or
das
stos
mov
xor
lea
adc
push
outsb
ss
push
je
jmp
stos
mov
ljmp
loop
icebp
cmp
out
pop
and
scas
dec
add
loop
mov
push
pop
dec
popa
cmpsb
arpl
subl
mov
jbe
fbstp
mov
mov
mov
dec
es
inc
sub
pop
dec
cmp
mov
mov
pop
mov
add
and
rcr
ss
push
or
mov
shr
jb
push
add
test
adc
outsl
es
addr16
cmpsl
jg
xlat
shll
or
xor
int3
mov
sbb
mov
sbb
jns
pop
icebp
and
mov
scas
and
rorb
out
pop
add
sub
dec
inc
xor
rclb
imul
stos
pop
sahf
and
cmp
add
imul
add
adc
arpl
pop
pop
lret
rcrl
lahf
call
insl
into
push
adc
ja
mov
sbb
fcomp
mov
nop
ljmp
sti
cwtl
and
ds
cmpsl
fs
and
and
add
jae
pop
ja
jmp
add
leave
cmpsb
es
or
cmp
pushf
jae
jle
or
in
mov
bound
ret
jno
dec
add
xor
sbb
aaa
sbb
movsb
cmc
xor
fidivrl
xchg
xchg
dec
sti
xchg
xchg
out
rcrb
loop
adc
adc
and
outsb
out
aas
mov
jp
inc
jg
push
sub
mov
xor
aas
dec
mov
jne
jae
fwait
dec
inc
arpl
jno
push
loopne
and
pop
cmp
decl
leave
sbb
push
in
sub
pushf
test
mov
popf
mov
xor
leave
mov
mov
popf
ret
sbb
outsl
xchg
cmp
push
pop
sbb
test
ficoms
fstpl
xchg
in
mov
jne
mov
sub
negl
std
stos
cmp
cmp
cld
andl
js
mov
pop
ljmp
mov
xadd
mov
es
or
push
arpl
mov
scas
cs
cmp
cmp
sub
jbe
pop
mov
xor
push
fadd
dec
mov
mov
cs
add
push
xor
ret
mov
pop
dec
mov
add
ja
sbb
and
xorl
pop
dec
sbb
loope
rcrb
xor
push
mov
xchg
iret
testl
movsb
das
cs
ret
mov
dec
stos
mov
jae
xor
jl
and
pop
mov
leave
jno
dec
inc
movl
fisubs
xchg
jle
jno
mov
push
mov
dec
pop
pop
cltd
xchg
fsubrs
dec
xchg
daa
jno
lock
aas
and
into
mov
dec
inc
xchg
xchg
shr
clc
push
jae
notb
es
lret
and
sub
in
inc
repnz
fsubr
push
jae
insl
dec
mov
incb
movsl
sahf
mov
push
je
mov
jnp
mov
cs
insb
scas
mov
fmulp
inc
and
fdivs
pop
xchg
popf
sti
jmp
shrl
mov
pop
cmp
rorl
mov
dec
iret
test
dec
faddp
jl
in
andl
subb
jecxz
fwait
aas
frstpm(287
movsl
pop
xchg
outsl
xchg
fidivl
jne
std
xchg
fldcw
sti
ljmp
xor
sub
int3
mov
pop
and
add
add
stos
push
dec
loop
add
pushl
sbb
sub
dec
leave
lret
or
outsl
sub
push
repz
out
sub
push
or
and
daa
lcall
aaa
push
imul
cmp
push
xchg
repz
adcl
jne
jg
jl
inc
lret
cmp
setbe
add
in
fistpl
or
inc
sbb
push
adc
adc
cmp
fisttps
mov
aad
dec
or
inc
subb
xchg
ret
lret
mov
jp
mov
mov
ja
in
adc
jmp
push
cld
xor
fs
enter
std
cmpsb
fistps
mov
sub
data16
cmp
dec
call
jae
cmpsl
mov
sbb
clc
std
and
fstpl
xchg
mov
lret
jge
cmp
fmul
inc
shlb
leave
nop
cmp
inc
outsb
popf
inc
sub
mov
add
adc
sbb
pop
sub
icebp
leave
cmp
add
fnstsw
mov
loopne
icebp
sbb
cld
outsl
dec
push
aad
cld
aas
pop
pop
mov
xchg
xor
loop
pop
inc
xchg
mov
xor
sub
cmc
fiadds
pop
mov
fbstp
and
insl
or
sub
cmp
cmp
cli
call
pop
outsl
test
cmp
int
inc
cmc
dec
in
or
in
jl
or
and
mov
xor
sub
fisubrl
add
lret
push
insb
sbb
mov
pop
pop
pop
mov
sub
cmpsl
adc
xchg
dec
mov
lcall
add
push
ja
adc
or
sbb
dec
fbld
imul
mov
or
imul
in
or
xchg
int3
jmp
pushfw
add
mov
ret
repnz
shlb
lods
add
popf
mov
sbb
xor
xchg
jbe
addr16
push
std
jae
add
sahf
lea
mov
decl
push
mov
jb
in
jno
adc
shrb
fildl
lret
sub
mov
jecxz
add
xchg
popf
mov
xchg
lods
iret
cmp
push
pushf
mov
insl
adc
push
xchg
repnz
and
mov
mov
ss
aas
lock
test
push
lds
mov
aam
into
pop
call
ss
or
iret
mov
decb
xor
lock
mov
jecxz
icebp
test
stos
xlat
mov
fiaddl
leave
jbe
jle
ret
int
mov
mov
orl
dec
hlt
pusha
jge
ffreep
subl
lcall
adc
in
pop
or
lods
or
and
dec
dec
sub
sub
insl
pop
iret
inc
out
aam
and
in
scas
test
icebp
in
cmp
loop
jbe
repz
sub
in
imul
lret
outsl
repz
cmp
push
push
into
rolb
jbe
repnz
and
cmpb
mov
or
inc
aad
push
inc
adc
sbb
xor
dec
sbb
mov
jbe
popa
xor
adc
scas
or
jecxz
cmp
fdivrs
fsts
jge
xorb
inc
jle
push
or
jne
outsb
or
dec
mov
ficoml
ds
cmp
adc
test
dec
cmpsb
mov
aas
lea
test
mul
or
jmp
negl
test
subl
test
jmp
in
in
test
xor
xchg
sbb
xlat
cmc
test
lret
in
in
cmp
int3
mov
call
pop
mov
lods
movsl
cmpsl
das
jns
jno
imul
push
je
stos
adc
adc
jle
mov
cltd
js
or
arpl
or
mov
sbb
fwait
cmc
nop/reserved
jp
ds
xchg
sbb
ljmp
sub
loopne
fsubs
pop
jge
loop
xor
mov
cmc
notb
mov
ljmp
lret
test
jnp
adc
movsl
mov
shrl
sub
mov
fstpl
sub
in
cltd
jo
imul
nop
sbb
push
lret
mov
pop
cmp
pop
lret
bound
pop
stc
sahf
mov
mov
xchg
idivb
push
add
push
fsubl
mov
push
fs
shlb
fsts
lret
into
pop
xlat
or
fdivrl
jl
mov
adc
movsl
and
cmp
lods
aas
mov
mov
sub
and
arpl
fsubl
adc
fildl
lds
xor
test
jg
mov
mov
cltd
mov
push
insl
xorb
jecxz
imul
jmp
imul
mov
stos
imul
sbb
jle
std
cmpsl
xor
or
mov
cmpsl
sbb
imul
ret
aaa
and
pushf
pop
testb
into
mov
lret
cli
ret
ret
sub
iret
xor
sbb
adc
aas
mov
addr16
cmp
cmpsb
mov
xchg
pop
ret
andb
cmc
cmp
mov
ficompl
test
test
mov
fnstsw
mov
lcall
dec
sti
pop
ss
lods
cs
adc
push
test
aas
je
sahf
test
push
inc
fs
inc
nop
lahf
and
in
popa
adc
fwait
outsl
daa
sbb
inc
fwait
xchg
mov
enter
mov
cmc
ja
stos
mov
les
lock
or
aam
pop
push
sbb
jp
imul
movb
test
sbb
mov
test
das
xchg
ffreep
xor
jecxz
mov
fsubs
mov
sbb
or
imul
mov
xchg
cwtl
sbb
mov
popf
cld
inc
push
or
jo
xor
sti
mov
fwait
dec
or
sbb
xchg
push
sbb
xchg
pop
in
xchg
fwait
sbb
pop
push
subl
mov
loop
xor
sub
out
mov
int
dec
add
es
test
mov
inc
outsl
mov
clc
es
in
xor
push
mov
sbb
cmp
inc
mov
xchg
mov
dec
insb
mov
rorb
mov
iret
pop
lds
out
das
test
outsl
mov
frstor
cltd
ja
mov
sahf
add
fs
dec
cmpsl
out
adc
push
jbe
in
or
jb
pushl
push
jne
mul
ds
stos
das
loop
bound
pusha
jae
lret
jo
repnz
jle
jne
push
fistl
xor
xor
cmp
mov
mov
adc
mov
movsl
mulb
xor
adc
aas
xchg
adc
idiv
rcll
out
or
xchg
jle
in
cmpsb
jl
mov
jb
pop
jp
ss
fsubr
fwait
cmpsl
lods
and
fisubrl
xor
sbb
mov
sub
in
adc
fidivrs
cmpsb
xchg
loope
mov
adc
mov
jmp
aaa
or
and
out
ja
sub
xchg
test
in
fwait
jae
push
int3
hlt
notl
sbb
nop
push
loopne
cmp
push
dec
or
cld
add
push
out
or
adc
and
push
popf
xor
dec
adc
test
mov
sub
cmp
scas
test
xchg
scas
or
mov
pop
mov
mov
mov
adc
cmp
aas
fisttpll
or
cmpsl
jns
arpl
xchg
cmpl
sahf
mov
scas
sarl
jg
movsb
movups
cmc
add
sub
rorl
and
jne
jge
lock
add
and
xlat
aas
xor
lods
fisttpll
dec
loope
or
loop
xchg
icebp
cltd
pop
stc
dec
or
ja
int3
es
adc
sbb
repz
int3
insl
jp
test
stos
xchg
sti
in
mov
mov
mov
cltd
adcb
or
sub
pop
inc
jno
repnz
dec
or
fcoml
frstor
test
ja
add
and
pushf
andl
adc
cmpb
fdivrp
sahf
mov
add
sahf
je
loopne
out
push
je
xchg
xlat
ja
loope
addl
dec
fnstcw
rorb
xor
das
cmpxchg
daa
mov
imul
lret
mov
dec
jg
mov
push
mov
xchg
jae
mov
xchg
pop
js,pn
lahf
jle
adc
sbb
push
add
mov
sbb
push
xor
into
or
cmp
insb
and
push
mov
jge
sbb
sbb
mov
repz
mov
add
popf
shl
cmc
xlat
fwait
ja
aas
aas
add
jge
push
sub
rcrl
out
cmpsb
cld
fsts
mov
add
ss
data16
jbe
xor
js
scas
sub
daa
arpl
movsb
dec
pop
ror
dec
inc
sbb
push
rcr
ja
adc
pop
loope
sbb
lea
cmc
mov
mov
jno
inc
jo
iret
jne
mov
ret
xchg
jg
mov
imul
adc
movsl
repnz
mov
push
inc
call
jbe
ds
and
leave
mov
jmp
add
pop
out
xchg
sbb
ret
add
popa
adc
push
pop
addb
push
out
orl
clc
roll
out
lea
mov
pushf
scas
icebp
mov
cmpsb
lret
jnp
add
shl
addr16
mov
sub
sbb
pop
cmpb
jnp
or
in
in
lock
xor
cmc
and
leave
movl
sub
sti
test
popa
mov
sbb
mov
mov
in
mov
inc
dec
adc
dec
xchg
adc
ja
pop
fwait
arpl
sbb
sub
mov
sub
adc
movsb
fwait
sub
sub
addr16
cmp
sti
push
add
mov
and
notl
movsl
sub
stos
loop
imul
addr16
xchg
es
orl
ret
es
jge
inc
push
sub
loope
dec
sub
and
movsl
pop
fsubrl
stc
jbe
jne
xchg
or
pop
or
testb
icebp
mov
adc
or
out
jb
mov
sbb
fidivrs
das
cwtl
aas
or
ss
sub
cmpsl
and
push
or
xor
jp
pop
add
movsl
jg
repz
int
add
jmp
adc
inc
call
test
and
push
xchg
loopne
imul
lahf
xor
popa
bndldx
adc
das
cmpl
add
mov
cmp
mov
in
xor
or
jge
push
lock
loope
popa
rolb
rclb
dec
in
bound
out
fsubl
push
jle
into
cld
cmp
mov
aam
add
pop
push
xor
icebp
int
les
and
xchg
ljmp
jle
pop
cwtl
sub
push
jle
mov
outsb
pusha
xchg
cmp
pusha
or
mov
add
adc
mov
push
cmc
das
mov
mov
mov
pop
sbb
pop
inc
popa
jmp
sbbb
out
jmp
or
lea
int3
sub
stc
jge
mov
dec
cmp
or
in
mov
mull
in
cmp
daa
jb
cwtl
mov
lods
pop
dec
or
mov
insb
dec
lock
scas
mov
pusha
inc
jmp
inc
adc
aad
mov
mov
clc
in
mov
push
adc
or
hlt
icebp
mov
ljmp
mov
pop
pop
add
xor
xchg
sub
inc
xor
addr16
movsl
lret
roll
enter
pop
out
mov
add
nop
push
xor
aaa
fdivl
mov
sbb
mov
stos
jle
std
lcall
popf
add
sub
xor
pop
decl
gs
cmp
add
cmp
and
daa
mov
sub
lods
xor
inc
adc
adc
cld
ja
aam
andb
inc
dec
jmp
fisubs
xor
pop
ds
mov
mov
fisttps
rcl
dec
and
cld
and
mov
imul
fwait
stc
adc
jp
push
les
push
rcll
jmp
add
lret
push
js
cmp
pop
jle
push
jno
cmc
aam
pop
cltd
mov
das
insl
notl
test
jl,pn
cmp
xchg
das
xor
imul
jle
push
pushf
fdivs
xor
jl
test
mov
push
xchg
push
xor
icebp
push
stos
mov
and
push
push
sbb
dec
mov
test
or
into
adc
lret
push
sbb
roll
lahf
int
push
je
inc
pop
jbe
jge
jb
arpl
cs
mov
and
cmpsb
inc
mov
mov
sub
popf
jle
hlt
jb
pop
cmp
sbbb
daa
pop
imul
adc
ja
xchg
scas
in
jo
ds
cltd
fcoms
dec
call
out
sarb
or
inc
jmp
stos
dec
xchg
add
cmp
lret
adc
sub
push
cs
cmc
imul
sbb
xor
mov
js
inc
xchg
xchg
mov
pusha
repz
mov
fidivrs
xor
fmull
pop
scas
lock
addb
cmp
scas
pop
ds
rcll
add
mov
jb
in
nop
xchg
hlt
mov
aaa
addr16
js
gs
mov
sub
inc
sub
aad
fdivrs
mov
dec
push
mov
cmp
sub
mov
ds
shl
lock
outsb
mov
shl
stos
jle
out
mov
or
fisttpl
cmp
scas
adc
xlat
adc
adc
inc
fiaddl
mov
test
pop
cmp
aam
dec
sbb
mov
shlb
in
bound
jge
adc
and
jbe
cli
out
fdivrl
test
cmp
adc
lods
cli
add
cld
push
stos
fwait
iret
xor
pop
rclb
out
ret
outsl
mov
pop
faddp
ficompl
mov
stos
cmp
lret
cmp
and
leave
stc
dec
mov
test
scas
mul
sub
fs
mov
xchg
add
pop
pop
cli
add
xor
add
hlt
or
push
jecxz
mov
repnz
mov
addr16
daa
popa
hlt
adc
mov
mov
sbb
jnp
insb
test
dec
and
cmp
sub
aam
pop
popf
jecxz
add
cmp
fs
les
xor
pusha
shll
dec
add
scas
pop
test
dec
stos
cs
mov
test
ljmp
fdivr
rolb
nop
fadd
add
lds
push
inc
add
and
push
cwtl
jne
jl
adc
add
jb
pop
mov
in
jg
sub
out
loop
dec
shl
inc
into
rorb
sbb
add
in
sbb
dec
mov
cmp
mov
aas
aaa
stos
add
xchg
dec
cld
sbb
mov
jle
xchg
dec
dec
adc
mov
or
fisubs
popa
movsb
xchg
out
cltd
cmp
test
jle
mulb
xor
add
mov
aaa
mov
jmp
jae
sub
cmp
movsl
subb
mov
push
mov
notl
push
pop
mov
dec
movsl
and
outsb
adc
cs
adc
cli
pop
pop
xchg
gs
call
adc
cwtl
outsl
jo,pn
mov
pop
and
cmp
cld
data16
cld
cltd
sbb
and
clc
bound
xor
mov
cmp
out
xchg
fs
add
leave
xor
jp
xor
mov
cmp
aas
push
sahf
ret
mov
pop
cvtpi2ps
sbb
aas
mov
insl
test
jbe
popf
pop
xchg
unpckhps
xor
or
mov
pop
xchg
adc
decl
inc
lds
push
test
shlb
or
xor
sbb
enter
push
xor
pop
dec
pop
lea
je
aam
xor
cmp
ret
jae
pop
push
mov
lret
inc
ds
dec
iret
inc
rep
sahf
sbbl
jns
sub
test
cmp
cmp
test
mov
jne
ljmp
out
repz
or
ret
arpl
daa
jle
out
jns
xchg
test
test
push
mov
add
add
add
fmul
data16
fdivl
sahf
mov
cmp
pushf
add
mov
cmp
jp
repnz
jae
insb
cmp
adc
lcall
inc
mov
push
dec
movsb
idivl
jmp
ret
pop
pop
jmp
jmp
arpl
adc
fnstenvs
sahf
test
sbb
jp
adc
in
lds
sub
out
xchg
or
mov
or
andb
inc
sbb
arpl
divl
popa
push
leave
imul
es
xor
lcall
sub
mov
push
ficomps
jae
in
sub
aas
cmp
inc
mov
mov
dec
int3
and
lret
xchg
pop
rorl
call
hlt
pop
pop
or
jl
xchg
loopne
in
enter
cwtl
rcr
call
das
repnz
sbb
mov
fiadds
aad
mov
pop
pop
mov
movsl
xchg
mov
mov
dec
jmp
call
out
jle
push
mov
xchg
and
sub
xor
push
outsb
and
inc
or
sbbl
mov
cmp
dec
jnp
mov
dec
pop
in
ljmp
push
add
mov
lds
mov
fadd
lock
adc
nop
pop
std
mov
andb
in
pushf
lahf
push
in
ljmp
mov
dec
cwtl
and
fwait
sub
fiaddl
mov
and
add
xchg
test
mov
fld
in
jp
cmp
and
stos
inc
mov
cmpsl
cmpsb
das
test
add
mov
inc
or
test
or
push
popl
lret
jg
dec
inc
insb
dec
inc
rcr
dec
mov
inc
inc
mov
push
arpl
ret
dec
or
and
fadds
rcl
mov
inc
fldt
popa
std
jne
pop
les
xor
adc
mov
ljmp
jo
test
dec
pop
inc
mov
jmp
inc
fs
mov
in
arpl
xchg
or
or
addr16
icebp
mov
daa
cmpsl
scas
mov
mov
hlt
mov
rep
fs
jle
adc
stos
adc
or
popa
pushf
loopne
or
clc
cli
xlat
dec
add
cmc
sbb
out
mov
xchg
sar
dec
pushf
filds
adc
stc
push
lock
or
leave
adc
adc
aaa
push
jae
aam
mov
mov
jecxz
les
adc
xchg
mov
pop
lcall
ja
or
mov
pop
dec
jns
add
inc
notb
sbb
aam
push
pop
mov
iret
sub
adc
jmp
mov
xor
je
into
les
sbbl
xor
lret
gs
ja
rcrb
jne
inc
cmp
push
test
pop
outsb
xchg
mov
pop
jp
cmp
ret
mov
add
movsl
add
push
mov
push
lock
mov
jbe
xchg
cmp
mov
push
scas
ds
lds
repnz
adc
add
mov
pop
or
or
mov
daa
pop
jecxz
or
jle
in
dec
sbb
mov
stos
pushfw
loop
not
adcb
loope
cmpb
jmp
mov
clc
pushf
pmulhuw
sub
sarb
std
pop
aam
sub
xchg
mov
pop
jae
lcall
sarb
mov
jle
dec
stos
push
cmp
out
add
dec
mov
aam
push
inc
adc
jno
and
mov
add
lods
jno
push
ja
dec
leave
cmc
and
pop
cld
add
aas
jp
mov
mov
stc
pop
rclb
jne
pushf
sub
sub
cmp
pop
adc
std
es
aaa
shrl
rorl
mov
and
addr16
cmp
lret
cs
aad
push
inc
loop
lcall
and
adc
push
vmread
xchg
jbe
imul
mov
sbb
jmp
stos
adc
or
hlt
xor
inc
pop
inc
cmp
mov
sbb
add
jle
cmp
test
mov
jl
jge
rcrb
push
sti
sahf
mov
mov
dec
cmp
cmc
ss
add
pop
mov
or
add
inc
sub
sub
jnp
cmp
cltd
or
jl
gs
lcall
cmpsb
xorl
inc
shlb
push
imul
inc
inc
in
icebp
pop
cmp
mov
cmpsl
sti
dec
or
adc
lret
call
inc
or
mov
xor
push
cld
xor
sti
and
fildl
pop
and
xlat
push
int3
call
decl
xlat
sub
cltd
mov
push
jb
dec
iret
int
insl
mov
lods
ds
ja
cli
sbb
xor
cltd
outsb
mov
fcom
dec
es
inc
ss
es
push
push
mov
sbb
mov
xchg
adc
inc
and
pushf
push
test
push
cmp
insb
push
ljmp
and
pop
test
push
xor
push
or
aaa
xor
cmp
pushf
push
add
dec
fwait
pop
les
or
aam
rolb
nop
sub
test
push
mov
enter
push
jae
sub
outsb
leave
dec
scas
js
push
inc
rcrl
mov
push
jecxz
stos
mov
scas
mov
pushf
cs
adc
push
and
jle
or
cmc
arpl
add
push
adc
mov
shr
sub
xchg
and
pop
sub
cmp
cmpsl
fistl
cmp
pop
pop
shl
or
ljmp
out
ss
or
inc
mov
notb
jae
xchg
fmulp
fsts
sti
dec
pminsw
int3
or
jge
in
add
add
pop
or
push
jno
aad
push
sbb
mov
cmp
decl
data16
stc
shl
iret
popf
cmc
in
fcmovnbe
dec
cmp
insl
xlat
fidivs
sbbl
sar
pop
out
and
insl
push
adc
lcall
fcoms
mov
stc
mov
mov
enter
es
mov
cmp
cmp
and
stos
into
mov
xor
stos
add
sar
iret
add
jae
shlb
andb
addl
test
sbb
push
mov
stc
mov
cmp
fcmovne
dec
les
rcl
mov
imul
lds
sbb
dec
test
movsb
push
cli
rcl
lea
aam
jge
xchg
popaw
test
sub
pop
mov
sbb
ret
notb
and
xchg
cmp
mov
pop
xchg
and
mov
in
fisubs
flds
movsl
pop
push
test
mov
sbb
jne
mov
add
and
sbb
sub
loope
jae
mov
push
lea
mov
jnp
popf
cmp
fisubrs
mov
cmpsb
dec
popa
and
push
push
mov
cmpsb
sub
ds
dec
xchg
je
mov
inc
and
add
cmc
or
mov
mov
pop
or
mov
lcall
add
shrb
es
cmc
or
mov
dec
roll
adc
inc
fldt
aas
add
cmp
fs
call
stos
mov
mov
or
clc
mov
arpl
jle
add
aaa
and
out
adc
add
sbb
cmpl
in
fadds
cmc
and
jo
insb
xchg
mulb
test
jns
dec
sbb
rclb
cld
push
pop
sbb
ficompl
clc
out
lds
pop
shlb
jns
xchg
sub
stos
pop
lret
jnp
jns
xor
or
cmpb
lods
cwtl
cmp
in
in
dec
dec
push
or
mov
cwtl
aaa
xchg
popf
fdivl
sub
test
jg
shld
loop
push
frstor
and
cmp
cmpb
fcoms
and
mov
xor
sub
shll
lea
bound
xor
adc
lahf
jle
xor
mov
shll
arpl
add
out
call
pop
fwait
inc
test
bound
mov
out
gs
insl
mov
aas
pop
jb
enter
push
push
xchg
pop
jl
les
cmpsl
sbbl
cwtl
ret
pushf
dec
and
stos
movsl
mov
jo
dec
sub
arpl
les
or
lods
jo
cmp
rol
mov
and
scas
insb
ss
dec
ja
jg
nop
sbb
sti
adc
fbld
add
and
xchg
ret
insl
icebp
or
popa
pop
std
mov
mov
lret
xchg
imul
movsb
push
pop
js
shlb
sub
rolb
mov
dec
jl
cld
xchg
add
push
in
push
call
pop
and
in
sti
aam
clc
fsubrs
cltd
outsl
dec
adc
xchg
pop
xor
xor
jg
adc
test
sub
mov
xor
mov
fsubl
out
imul
aad
cmp
nop
rcrl
mov
es
and
add
jno
gs
movsw
fisttps
je
out
mov
xchg
pop
call
lods
sub
or
mov
jp
hlt
pop
cmpsl
jmp
seta
cmp
push
xor
jnp
mov
dec
or
or
cmp
loop
xchg
sti
cmpsb
mov
es
sti
aas
xchg
jmp
pop
jns
fbstp
xchg
rcrl
mov
movsb
orl
gs
inc
repz
inc
nop
scas
xcrypt-cfb
cmpsl
es
mov
popa
aad
xchg
lods
cs
push
out
inc
cmp
cmp
data16
push
dec
fildl
aaa
sbb
sti
adc
cmpsb
adc
imul
lretw
jmp
ds
push
aas
push
loop
mov
leave
mov
xchg
iret
cmc
hlt
mov
sbb
fidivl
imul
insl
rorl
bound
sub
push
in
cmp
orb
mov
jae
mov
dec
inc
jno
movsb
pop
xchg
popl
push
testb
mov
sbb
je
call
mov
shll
repz
adc
dec
call
dec
inc
and
sbb
mov
push
scas
inc
inc
inc
ss
or
popf
mov
lcall
loopne
das
mov
sbb
sahf
inc
enter
xchg
das
pop
xor
rolb
jnp
cmpl
shrl
insb
dec
mov
mov
sub
lods
lods
sub
rcrb
fadds
mov
popf
adc
adc
fsubl
jnp
lret
fmuls
movsl
inc
mov
js
iret
and
cmc
xor
mov
jmp
sbb
jbe
pop
out
push
push
fs
cmp
and
and
scas
cmp
daa
bound
mov
xor
aas
sub
stc
bound
gs
push
and
loope
stos
cmp
and
into
and
sbb
mov
dec
gs
aas
dec
cmp
dec
sahf
dec
push
xlat
lahf
repnz
dec
xchg
stos
daa
dec
je
xchg
call
sub
mov
push
mov
dec
push
jns
dec
jnp
lods
xchg
test
dec
mov
cmp
inc
enter
imul
addr16
and
fldt
xchg
push
push
pop
xchg
sub
stos
push
rolb
mov
inc
dec
add
sbb
in
shrb
sub
jne
or
push
out
dec
xor
ja
sbb
andb
jb
cmpsl
mov
pop
mov
dec
stc
cmpsb
mov
ret
ljmp
xchg
dec
test
gs
adc
dec
int
pop
enter
push
pusha
bswap
pop
pushf
jbe
int
arpl
or
test
and
sbbb
mov
xchg
or
xor
sub
sbb
mov
mov
push
xlat
xchg
mov
lcall
mov
sub
lret
xlat
push
jae
adc
jmp
xchg
aas
aas
sub
add
in
call
cmc
ss
das
rorl
mov
das
int
stos
sub
notl
sbb
mov
push
les
mov
mov
rorl
pop
insb
scas
mov
or
lcall
dec
insb
mov
inc
pop
sub
hlt
xchg
hlt
mov
nop
mov
test
or
push
push
inc
repnz
or
sub
sbb
xorb
add
lret
inc
inc
inc
lret
lcall
mov
sti
dec
xchg
ja
outsb
leave
movsb
pop
jmp
cmpsb
fiadds
test
or
pop
mov
jns
arpl
inc
mov
dec
xchg
mov
push
rcrb
xor
jle
xor
dec
adc
sub
sub
sub
push
les
lret
jge
push
addb
or
mov
lock
rcll
sahf
cmc
mov
outsb
sub
xlat
fisubrs
aaa
mov
popa
or
inc
insl
push
or
popf
dec
fstl
adc
pusha
repz
test
push
addr16
inc
icebp
sbb
out
icebp
inc
or
jb
jmp
mov
xchg
xor
fcmovnb
jecxz
cmp
add
andb
dec
inc
xchg
fcoms
cli
xor
mov
and
pusha
mov
jmp
sbb
inc
jo
mov
mov
xor
jnp
stos
adcl
sub
jae
or
fucomp
imul
or
pop
loop
mov
jp
jle
fstps
js
xchg
in
xchg
out
icebp
addb
pop
jb
cmp
fwait
push
jnp
pop
into
jns
ss
mov
ss
shl
data16
jne
lret
outsb
push
xor
xor
int3
add
adc
mov
call
and
pop
ret
add
mov
out
shll
jmp
add
cmp
xor
mov
lcall
jo
sbb
repnz
rorb
fists
cmp
mov
js
mov
cli
sar
insb
cmc
jl
mov
iret
xchg
push
fildll
xchg
stc
fsubr
mov
or
pop
clc
pop
sub
aad
xchg
data16
ret
adc
outsl
sub
nop
inc
mov
pushl
lret
add
xor
jb
sbbb
daa
daa
xchg
dec
test
dec
sub
popa
pop
jnp
jno
loopne
or
inc
mov
ja
shlb
ds
mov
or
movsb
fisubrl
mov
mov
fcmovnu
jnp
xchg
or
ret
or
in
les
addr16
add
test
xor
repz
mov
push
sahf
pop
out
or
or
out
das
push
nop
adc
aam
js
out
mov
imul
ficomps
jmp
in
dec
or
jmp
jo
mov
mov
xor
ljmp
mov
sub
xlat
stos
mov
pop
rsm
outsl
xchg
cmpsl
std
or
ret
lods
cmp
clc
lcall
sbb
insl
sahf
xor
loop
mov
xor
les
inc
test
sub
inc
jg
and
dec
xchg
dec
les
jg
sub
shll
clc
jg
pop
nop
adcl
and
in
scas
out
test
adc
and
inc
fimull
push
gs
dec
cwtl
lds
movsl
cld
push
mov
push
add
ds
xor
mov
dec
push
push
fnstsw
clc
sbb
dec
cmp
jnp
mov
push
imul
xor
mov
popf
iret
add
mov
andb
mov
gs
lret
xor
mov
or
aam
daa
in
outsl
mov
jo
pop
in
sarb
lahf
mov
mov
jne
sbb
jp
cld
mov
dec
push
pop
push
inc
scas
mov
mov
out
push
insb
xor
mov
sar
push
or
lods
push
add
sbb
or
std
xor
push
xlat
stos
stc
mov
sbb
fwait
push
je
sbb
xchg
inc
cmp
sbb
and
sarl
adc
xor
and
sarl
mov
sub
cmp
decb
jnp
paddd
in
mov
or
or
xorl
inc
push
sahf
xor
es
and
xchg
js
iret
cmpsl
cmp
jns
pushf
std
in
cltd
popa
sub
mov
add
adc
pop
inc
scas
xchg
addl
iret
push
sub
cwtl
jne
std
test
test
lods
rol
mov
daa
and
pop
rcrb
cmp
and
mov
dec
repnz
fisttps
xchg
stc
mov
loop
xchg
aas
pop
outsl
addl
dec
inc
mov
rclb
xor
es
fadds
push
and
and
faddl
adc
add
mov
push
mov
mov
push
sbbl
mov
mov
push
jecxz
loop
cmp
fldt
fsubr
loop
std
pop
das
pop
cmpsb
sbb
mov
sahf
adcb
push
adc
xchg
xchg
add
push
popf
call
and
xor
push
jmp
xchg
inc
mov
or
dec
fisttpll
adc
inc
es
jg
lcall
ret
arpl
pop
pop
jp
pushf
sarb
movsl
xor
adc
xor
pop
push
stc
call
mov
andb
mov
fstpl
or
sub
push
icebp
push
xchg
inc
cmpsb
out
outsb
shlb
xchg
adc
shrl
push
test
pop
jmp
sbbb
mov
mov
xchg
lea
adc
ss
aas
jne
les
shll
xor
pop
push
mull
std
cmp
outsl
jne
sbb
mov
add
sahf
mov
jmp
add
fldcw
xchg
stos
lret
lea
cwtl
mov
jne
jbe
dec
and
jg
inc
icebp
pavgw
int
mov
ficoms
mov
aas
and
es
out
daa
jnp
imul
dec
sbbb
dec
xor
pop
push
jp
movsb
outsb
movsb
imul
or
add
sarb
xor
test
fwait
and
or
xchg
dec
pop
mov
add
inc
cmc
bnd
inc
imul
negl
pop
lea
popl
ja
push
int
inc
xor
dec
jb
adc
mov
mov
jecxz
movsl
fs
mov
insl
test
sbb
mov
lahf
sub
insl
mov
xchg
push
mov
adc
lds
stos
pop
sbb
hlt
or
sti
add
or
inc
stc
shlb
adc
xor
sbb
mov
fcmovne
xor
jbe
mov
call
and
sti
mov
push
dec
das
mov
mov
dec
mov
mull
inc
dec
movsb
adc
js
mov
mov
stos
jecxz
mov
call
aam
mov
inc
or
push
fnsave
push
inc
aam
rorb
xchg
lahf
cmp
pop
sbb
push
int
loope
daa
xchg
inc
leave
dec
imul
push
pop
bswap
es
dec
and
dec
lret
neg
es
jns
inc
sbb
ret
fwait
cmpl
pop
pop
lret
lahf
sbb
push
sub
imul
or
cmp
mov
mov
in
cmp
or
rorl
mov
fwait
testl
pop
push
fwait
cmpsb
inc
stc
xorb
enter
sbb
fimuls
mov
inc
addb
add
shlb
repnz
js
mov
xchg
das
xor
inc
loop
mov
iret
popf
scas
shlb
rcr
push
movsl
lock
pop
push
xor
test
cmp
outsb
jge
inc
bound
in
jns
insl
inc
mov
adc
inc
insb
stos
mov
pop
cltd
or
shll
aaa
mov
les
or
dec
dec
loope
push
jp
rorb
pop
pop
nop
mov
add
dec
xchg
adc
jp
jmp
push
add
aas
leave
test
jb
rcll
nop
pushf
xchg
pop
xchg
mov
test
dec
pop
pop
adc
rcr
sbb
cli
loope
cmpsl
shlb
pop
pop
mov
inc
stos
in
fdivrl
out
cwtl
repz
adc
inc
pop
mov
je
mov
inc
lcall
cmp
ljmp
lods
loop
sub
addr16
daa
lcall
or
xorl
in
inc
sub
aad
pop
and
lods
jg
out
in
add
daa
ja
in
push
add
pop
jle
jbe
jb
lea
jb
jge
cmp
inc
data16
inc
and
xor
loopne
adc
mov
nop
and
icebp
sbb
sub
cmp
xchg
mov
sub
sbb
shrl
sti
out
pop
popa
sbb
add
nop
sbb
aaa
add
adc
and
xchg
vaddsubpd
dec
in
push
fstpt
jle
or
aas
lds
xor
xchg
cmp
or
mov
fsubs
fistpll
cmp
or
xor
aam
cld
in
jl
sub
sbb
js
xorb
call
call
shll
test
mov
push
xchg
inc
mov
mov
ja
push
push
leave
inc
fscale
adc
inc
int
push
lds
or
sbb
in
jo
jmp
and
inc
stos
jno
push
je
mov
cmp
std
inc
leave
adc
add
lods
insl
push
mov
inc
jmp
enter
pop
adc
jle
pusha
inc
lret
test
jbe
shrb
idivl
adc
outsl
cld
cmpsl
add
iret
push
lock
or
imul
mov
xlat
cmp
fisubrl
inc
ljmp
fimull
add
inc
or
pusha
test
sbb
into
addr16
in
cmp
sahf
adc
cmp
out
cmp
sub
jbe
push
xor
stos
mov
pop
xchg
lods
cltd
daa
xchg
push
outsl
mov
clc
in
into
xchg
pusha
xchg
or
xor
fidivrs
inc
mov
jns
pop
xor
nop
repz
jnp
ret
pop
mov
push
or
inc
mulb
stc
push
repnz
push
and
push
insl
icebp
inc
je
push
xor
xchg
lcall
int3
clc
push
pop
add
xor
fnstenv
adc
rcll
scas
mov
add
addl
mulb
imul
jne
incl
ss
jnp
mov
and
nop
xchg
in
lods
dec
adc
in
scas
pop
stos
repz
jnp
in
sbb
add
sub
loopne
andl
and
mov
movsb
cmp
in
in
jecxz
push
and
in
ds
jge
ret
and
and
out
cmpsb
loope
mov
stos
mov
ret
sub
les
js
fnstsw
and
sbb
aas
adc
pusha
push
xlat
clc
mov
pop
or
aam
lods
pusha
mov
cld
clc
cmp
add
mov
rcr
jl
ret
xchg
push
mov
repz
mov
test
add
hlt
clc
mov
aad
dec
sbb
mov
stos
cmp
decl
inc
std
jnp
or
push
lock
cmpps
scas
sahf
jo
cmp
or
xor
mov
mov
aaa
mov
cmpsb
mov
jae
sbb
adc
call
jnp
in
add
pop
jb
mov
xchg
or
cs
and
mov
mov
jo
xchg
or
push
pop
mov
ljmp
scas
jbe
push
dec
outsl
xchg
je
stos
adc
shlb
jg
stc
stos
add
call
cmp
out
mov
push
mov
add
pushf
into
sahf
stos
addl
jnp
cmpsl
or
push
lds
daa
loop
push
mov
push
xchg
rcl
insb
or
sbb
dec
scas
jl
cmp
hlt
pop
mov
sbb
jge
int
mov
sbb
add
xchg
sbb
test
or
cltd
outsl
push
sti
imul
bound
or
sahf
lcall
jae
test
repz
xchg
add
xchg
dec
pop
mov
cmp
daa
push
aad
adc
ret
add
pop
or
mov
and
sub
fs
xor
dec
inc
in
inc
mov
push
xor
clc
add
jl
add
pop
inc
out
mov
out
xor
cltd
ljmp
sbb
sti
adc
xchg
fsubl
jg
cmc
mov
cmp
addb
inc
in
xor
into
pop
xchg
mov
mulb
mov
pop
add
mov
leave
shr
pop
jbe
dec
dec
push
xlat
pop
insb
in
stos
sub
sahf
sub
repz
inc
jnp
out
xchg
and
push
and
aaa
std
and
fs
mov
or
inc
push
lds
cltd
nop
popf
int3
fwait
and
repnz
cwtl
mov
dec
sbb
mov
pushf
les
lcall
stos
pop
jno
xchg
flds
cmp
cmpsl
sbb
insb
or
in
mov
xchg
je
test
lret
lcall
mov
loopne
cmp
ljmp
fistl
mov
sub
sbb
mov
fwait
cmpsb
jno
add
lahf
cmp
add
push
adc
pop
or
or
rcrl
mov
popf
push
and
and
jnp
shlb
dec
negl
xchg
call
ja
je
cmpb
sub
int3
aam
pop
mov
push
sbb
mov
adc
inc
mov
pop
cli
mov
aam
dec
mov
mov
cltd
icebp
js
sub
rcll
lock
push
rclb
mov
pop
xchg
scas
mov
inc
jg
xchg
stos
sbb
mov
mov
xor
xlat
pop
adcl
adc
fisubrs
inc
and
mov
aam
jae
sub
inc
das
lret
jb
ret
pop
cmp
loope
sbb
or
shlb
cli
and
cmpsl
xor
insb
add
mov
jnp
mov
and
fs
dec
fdivl
das
daa
adc
insl
cltd
jne
xlat
mov
adc
push
or
adc
or
in
pop
inc
test
adc
ret
dec
loope
cwtl
rcrb
xor
push
mov
cmova
inc
mov
rclb
or
mov
sub
outsb
mov
jecxz
jbe
das
or
aas
inc
and
data16
lock
jmp
fbstp
xorb
mov
daa
jbe
cs
rcr
shll
ja
scas
daa
aam
mov
into
and
test
test
sarb
rorl
sahf
outsb
ds
mov
dec
push
lcall
aam
jge
pop
adc
cmp
popa
loopne
add
in
sub
pop
jmp
inc
fiadds
ljmp
testb
inc
inc
xchg
lock
and
inc
dec
popa
in
call
cmp
xchg
add
icebp
fisubrs
mov
xchg
aad
aad
scas
jle
and
mov
push
lods
movsb
mov
popf
push
jp
rcrb
sub
and
lret
xchg
mov
adc
fdivl
mov
jne
js
sahf
mov
std
out
cmp
adc
xor
repz
push
mov
enter
fldt
cmpl
das
sub
jne
in
mov
jne
repz
cwtl
aam
and
ja
dec
jb
xchg
add
enter
fwait
and
sub
adc
mov
int
std
xlat
xchg
cmp
push
xor
js
cld
jl
jl
cwtl
aaa
outsb
push
leave
iret
and
push
test
mov
xchg
sub
and
fwait
testb
pop
xor
add
jns
jne
xchg
movl
inc
pop
add
addr16
imul
jecxz
inc
rolb
xchg
mov
into
mov
adc
sbb
cmp
fimull
shl
in
sbb
mov
jne
insl
cmpxchg
sbb
mov
mov
mov
push
push
aas
cli
push
sbb
subb
jb
cmp
ds
sbb
cli
xchg
out
mov
in
push
or
dec
fs
dec
and
mov
pop
icebp
xor
sub
loopne
pop
das
rclb
add
jge
test
fwait
mov
inc
or
pop
shll
ret
cmp
sub
addr16
dec
pop
out
inc
sub
leave
adc
push
or
test
mov
and
adc
adc
jmp
js
mov
daa
mov
enter
loope
fcmovnbe
sti
icebp
jmp
jbe
pop
call
in
lret
test
adc
fdivrl
jae
cwtl
shlb
scas
jg
mov
jmp
mov
movsl
push
jecxz
dec
sti
fnsave
adcl
push
sub
hlt
adc
sub
push
std
push
icebp
sbb
add
pop
outsb
rclb
mov
xor
and
test
ret
push
cmpsl
or
adcb
filds
jne
scas
push
cmp
sub
arpl
sarb
fisttpl
aad
sub
mov
xchg
mov
popa
xchg
push
out
pop
jg
adc
sub
or
add
or
je
adc
movsl
inc
mov
lds
or
xchg
jle
push
rcr
leave
pop
jo
dec
das
in
pop
bound
ds
jne
push
or
push
xchg
jg
and
in
int3
inc
outsl
cmp
shll
adc
jns
mov
pop
jae
test
xchg
stc
cmpsl
cmc
push
in
jl
jmp
sti
xor
dec
test
dec
pop
or
mov
mov
addr16
adcb
arpl
push
movsb
arpl
adc
xor
jb
pop
fdivrl
out
cltd
insb
sub
mov
or
decb
test
jl
or
divl
cwtl
xchg
or
jnp
mov
push
inc
xchg
add
and
and
int
xchg
or
scas
sub
pop
out
adc
dec
lock
push
cmp
mov
aaa
nop
inc
add
cmp
fnstcw
enter
mov
lcall
cmp
sub
mov
add
mov
lods
and
in
in
popf
imul
xor
fstps
mov
push
cltd
jns
dec
pop
mov
in
cmc
mov
loope
aad
jo
inc
jg
imul
mov
arpl
add
pop
pop
xor
lds
int
sbb
imul
adc
add
je
movsl
sbb
pop
adc
aad
mov
pop
pusha
mov
cmc
into
data16
out
mov
sbb
sbb
mov
and
fwait
lods
and
adc
cwtl
loope
das
int3
mov
stos
inc
adc
jp
inc
repz
movhps
mov
cmpsb
scas
xor
xor
xchg
sbb
adc
mov
mov
fwait
hlt
sti
int
jb
jnp
xchg
add
stos
or
push
jmp
mov
inc
mov
imul
dec
inc
xor
je
sub
pop
mov
jns
xlat
cmp
nop
loop
sbb
and
test
add
sbbb
jnp
adc
imul
pop
aad
arpl
icebp
jmp
loope
imul
or
fsub
cmpsb
jp
scas
rorb
sbb
ljmp
filds
xchg
fistl
add
sbb
popa
inc
out
and
xor
sub
out
shrl
sbb
cmp
jge
sarb
gs
xor
push
dec
in
scas
jecxz
adc
mov
out
and
repnz
pop
push
xchg
xor
fldenv
pop
js
aam
sbb
xor
aaa
pop
ljmp
cmc
mov
mov
xchg
or
push
mulb
adc
adc
mov
push
fstps
je,pt
cmpsl
push
pop
jne
fcmovu
imul
lods
push
fiaddl
fwait
adc
pop
sahf
jno
mov
dec
out
icebp
or
pop
jno
xor
xor
push
push
rcl
jno
push
jnp
fildll
out
jae
les
in
and
cld
loope
jne
dec
push
je
ret
sub
imul
das
or
xor
pushf
rclb
icebp
ds
mov
inc
add
dec
inc
sbb
push
adc
jo
repnz
xchg
clc
sbb
das
inc
stos
cmpsb
int3
cmp
int3
fs
and
ja
mov
sbb
in
pop
ljmp
leave
sbb
cmp
fstpt
jbe
push
cs
mov
cmp
adc
into
aam
call
mov
leave
cmp
mov
jmp
sbb
fmulp
call
mov
lret
scas
dec
mov
sahf
lcall
fcmovnu
leave
jnp
fcmovu
xchg
lret
lods
or
push
xor
adc
ret
mov
addr16
gs
test
mov
jle
cmpsb
jnp
cs
add
and
push
test
or
and
lods
xchg
out
out
sub
fs
pop
jge
cmp
xchg
in
sbb
inc
ret
cld
packsswb
rep
pop
push
xchg
inc
and
loopne
dec
lcall
daa
scas
pushf
aaa
jae
xchg
inc
mov
aas
into
out
push
sub
jle
mov
xchg
and
jo
lcall
push
and
add
jecxz
andb
jge
mov
mov
fbstp
push
or
pop
pop
scas
sti
push
fisubrs
mov
jb
xchg
push
xorl
jp
mov
je
cld
orl
mov
repz
fnstsw
outsl
push
pop
lret
add
fld
fidivs
mov
xchg
dec
fsubs
mov
cli
fmul
loop
mov
cmp
mov
jno
div
ss
and
or
adc
mov
add
outsl
cmpl
inc
sub
outsb
inc
adcl
sbb
ljmp
filds
mov
movsb
push
loope
fistpll
dec
add
andb
mov
pop
loope
push
pop
dec
ljmp
rcrl
inc
jecxz
sbb
incb
push
out
jae,pt
leave
add
mov
and
sub
fucomip
cmpsb
mov
xor
cmpsb
inc
pushf
or
xor
jecxz
mov
imul
mov
inc
test
lods
notb
dec
push
mov
aaa
and
sub
or
jo
dec
and
cmp
mov
dec
ret
test
imul
mov
mov
insb
psubsb
push
pop
sbb
loope
pushl
xor
pop
shll
incb
xor
push
jne
inc
in
repnz
lods
std
andl
and
cwtl
mov
subb
add
daa
push
rcrb
mov
push
gs
sub
adc
adc
dec
data16
adc
cmp
push
jmp
test
dec
jbe
xor
lret
push
pop
or
inc
lcall
pop
mov
or
fsubl
sub
add
aas
mov
out
shll
jecxz
push
inc
ficoml
jbe,pt
jo
add
jl
test
sub
adc
xchg
push
lret
push
inc
push
inc
jae
or
add
xor
mov
dec
jg
cmp
loopne
stos
jns
xchg
hlt
mov
test
cmp
in
or
mov
sti
push
xchg
js
mov
or
cmp
mov
mov
inc
jecxz
aam
loope
or
stos
pop
pop
jno
popf
jg
int
cmc
gs
scas
dec
and
lods
jae
ja
add
lcall
xchg
mov
out
hlt
mov
imul
ljmp
jae
jno
ljmp
or
or
flds
repnz
or
jle
int
sub
dec
bound
xchg
lcall
imul
mov
xlat
jb
rcll
popa
mov
jae
and
cmp
jbe
data16
xorl
push
js
test
out
dec
pop
or
test
imul
rorb
mov
sti
adc
fdivrl
pop
xchg
jb
fnsave
lock
jg
fsub
cld
xchg
dec
je
fsubr
mov
dec
repnz
ret
jno
mov
test
jmp
jge
das
ljmp
xor
jp
stc
pop
push
insl
mov
mov
or
lods
cwtl
sti
adc
xchg
jne
sub
adc
repz
lods
sbb
js
jbe
pop
sbb
add
jo
pop
lahf
out
add
es
lahf
xchg
mov
xchg
stos
xchg
push
fistps
cmp
popa
aad
mov
scas
adc
loop
jae
scas
cli
fiadds
pushf
es
fdivl
ror
xlat
mov
push
dec
adc
or
sbb
cmpb
xchg
ss
outsl
out
sahf
sbb
add
sub
add
aaa
mov
mov
xchg
ja
dec
fldt
adc
and
inc
or
cltd
out
cmp
icebp
stos
mov
pop
xchg
xlat
in
jne
jle
std
jl
repz
pop
jbe
adc
dec
cmp
popf
les
or
jp
aaa
mov
push
or
xor
popa
mov
int3
cltd
xchg
jecxz
mov
cmp
inc
pop
lock
mov
int
inc
outsb
stc
adc
pop
mov
xchg
jmp
dec
mov
mov
mov
sub
xchg
and
cmp
pop
inc
fdivs
inc
sub
add
push
addr16
add
lret
sbb
xchg
dec
repnz
test
and
test
mov
cwtl
lret
mov
orb
xor
push
jl
lds
xor
sbb
popf
sub
add
cmp
mov
stos
pop
incl
adc
in
or
adc
stc
sub
imul
adc
jge
or
add
push
and
jnp
arpl
inc
mov
adc
push
inc
adc
push
add
ja
scas
sub
mov
adc
bound
and
cmp
cmp
mull
jl
test
insb
fdivrl
cmpsb
out
mov
js
add
mov
mov
clc
jns
lods
adc
inc
xchg
push
pop
or
ss
shr
bound
inc
xchg
fcomp
dec
pop
fldcw
negl
lcall
cltd
sarl
out
lcall
out
jle
gs
lret
loopne
stos
pop
inc
push
fsubrs
cmp
xchg
pop
test
shl
jae
cs
push
adc
pop
pop
iret
xchg
push
lcall
stos
test
fnstsw
xchg
cmp
outsl
jbe
sbb
sub
movsl
dec
jp
mov
fists
xchg
dec
icebp
jmp
cmp
dec
in
jle
push
repnz
mov
ja
pop
and
inc
and
sarb
dec
or
mov
insb
int
mov
fs
sub
cmpsl
dec
cltd
int
les
outsb
jmp
hlt
hlt
mov
repnz
dec
dec
scas
push
inc
lcall
push
mov
in
lock
mov
lods
cmp
mov
dec
add
out
ret
sbbl
loope
sbb
loopne
sub
loop
scas
dec
hlt
pusha
mov
test
sub
ret
and
out
test
or
pop
adc
or
dec
pop
int
push
into
inc
gs
xor
xchg
clc
xor
movsb
inc
stos
enter
push
out
mov
int
dec
sub
ja
inc
jo
lods
xor
data16
or
addr16
push
cmp
xchg
adc
in
cmpsb
sub
cmpsl
negb
jecxz
notb
out
pop
add
xlat
pop
dec
pop
je
insl
cld
mov
mov
ret
fisttps
xlat
lods
xor
ss
jecxz
inc
push
adc
test
test
in
cmp
pop
sbb
pop
mov
add
fldt
inc
aaa
jmp
cmp
fnstcw
test
in
xchg
rclb
xor
push
dec
jo
push
test
xor
vpsrad
frstor
out
lcall
xlat
jp
cltd
mov
das
sub
mov
cs
or
dec
imul
cmp
das
and
push
mov
stos
xor
mov
mov
jg
mov
mov
jecxz
sar
inc
sbb
push
fisubs
xchg
pop
mov
inc
xor
and
lea
xlat
icebp
mov
imul
add
mov
in
xor
mov
pop
jge
mov
adc
mov
out
jnp
cmpsb
jb
push
mov
cs
mov
sub
or
jle
mov
cmp
fisubl
fsubr
and
outsb
adc
cld
or
jle
pusha
mov
xchg
lcall
test
mov
scas
pop
and
sub
out
sbb
inc
sub
in
lret
sub
xchg
aaa
insb
loopne
sub
xchg
adc
das
enter
sbb
mov
pop
push
lods
mov
sti
ljmp
mov
inc
xchg
sti
jmp
rclb
jae
cli
fildll
add
call
add
es
xchg
pop
add
lods
adc
xchg
leave
fnstenv
sub
pop
shl
sub
into
push
int
mulb
inc
pop
movsb
lds
mov
popa
cmpsb
outsl
out
push
cmp
xchg
add
push
jl
jae
and
mov
outsb
inc
push
mov
push
arpl
push
popa
enter
int3
call
dec
xor
or
js
or
nop
ja
pushf
mov
dec
jp
or
ret
mov
adcl
and
and
push
xchg
inc
andb
xchg
ss
icebp
ja
mov
mov
jmp
pop
cltd
mov
xor
add
lahf
les
push
insb
das
sub
pop
pop
xlat
sbb
fucomip
inc
mov
cmp
mov
daa
jns
arpl
dec
sbb
jmp
lret
lods
and
in
xor
xchg
inc
imul
aam
pop
sbb
ja
adc
js
pop
cli
pop
rorb
les
call
mov
aas
xor
sti
mov
mov
jbe
mov
outsl
or
pop
loop
push
lret
orl
js
adc
call
jmp
daa
jbe
mov
fwait
in
pop
repz
lret
pushf
mov
fs
call
or
dec
dec
repnz
leave
xchg
loopne
xchg
jecxz
jno
xchg
sbb
sarl
pop
hlt
cmp
loop
adc
shll
jecxz
sub
dec
mov
jb
dec
inc
xchg
push
sbb
and
jp
loop
sbb
cmp
inc
stc
mov
ret
ret
or
xchg
daa
xor
mov
fidivrs
aam
dec
es
in
cmc
popa
out
clc
fwait
sbb
mov
and
adc
add
jno
dec
fnstsw
out
stos
cmp
rolb
dec
int3
nop
and
in
sbb
mov
fdiv
dec
adc
cld
sahf
inc
lcall
xor
xor
out
mov
mov
lods
outsb
out
push
dec
lods
pop
pop
push
fs
mov
jg
dec
pop
lret
mov
fbld
in
cmpsb
insl
pop
pop
cld
aaa
sub
sub
sahf
xor
sub
imul
in
jbe
outsl
adc
xor
arpl
movsl
cs
mov
mov
xor
adc
movsb
mov
loopne
pusha
in
sti
xchg
sub
icebp
test
jb
xorb
test
out
push
fwait
mov
cmp
mov
or
xlat
movsl
xorl
mov
das
pop
mov
xchg
sub
sbb
aas
int3
mulb
jns
dec
clc
cmp
cmp
jecxz
push
aaa
lock
push
push
mov
mov
iret
lods
mov
out
aaa
imul
push
ljmp
aas
push
stc
loope
jmp
loopne
jmp
shrl
xchg
inc
decl
push
roll
xchg
das
add
mov
in
jp
sub
fistpl
adc
xor
jp
popf
dec
cwtl
mov
push
or
sub
xchg
xor
lret
repz
push
repz
cwtl
ret
mov
dec
push
stos
pushf
jnp
lcall
ficompl
sarl
sahf
mov
and
das
xor
shr
mov
clc
or
push
cltd
inc
fsubrs
jge
cltd
mov
mov
mov
clc
movsl
icebp
flds
xchg
lds
cld
pop
daa
sbb
pop
aam
adc
pop
and
mov
push
test
push
into
outsb
cs
mov
jmp
pop
xchg
sub
xor
and
lods
int
ja
adc
mov
ficompl
popl
mov
xchg
mov
iret
jle
repnz
test
jae
std
mov
sbb
add
inc
pop
push
sbb
stos
arpl
push
fisubl
movsb
lods
jns
fwait
pop
and
repz
xlat
mov
xor
push
sahf
cld
dec
mov
sub
mov
lret
adc
andl
adc
jp
fs
lret
lret
test
ljmp
int3
in
ret
in
testb
rcll
jge
or
mov
pop
in
push
xchg
mov
lret
cmp
jb
or
pop
mov
fisttpll
ds
mov
mov
pop
pop
lret
mov
xchg
jae
xchg
repz
repnz
movsb
jno
dec
cs
mov
jbe
jno
into
rorb
xor
cmpsl
jmp
out
aam
sub
mov
dec
pop
shll
sub
mov
pop
aad
sub
sub
imul
sub
dec
icebp
push
mov
push
add
sbb
pop
scas
add
dec
data16
inc
test
insl
das
mov
cltd
faddl
mov
jb
mov
push
rol
fcmovbe
xor
push
into
fisubrl
or
rcrl
cmp
xchg
fisubrs
imul
and
gs
fistps
adc
lods
sub
gs
daa
push
popf
inc
xor
insb
cltd
xor
mov
aas
jmp
daa
sbb
inc
mov
cld
push
std
test
pop
ret
je
jp
inc
scas
add
stos
scas
sub
cmpsl
jne
sub
add
jb
push
es
int
movsb
div
xor
pop
xchg
jns
pop
ss
pop
popf
sbb
outsb
js
fcmovb
insl
cli
mov
jge
test
sbb
stos
xchg
testb
xor
fnsave
jnp
and
imul
in
ret
fimuls
lods
adc
ret
ret
insb
mov
sbb
xlat
cli
std
jge
mov
shr
stos
test
dec
dec
shlb
and
movsl
add
insb
mov
mov
fidivrl
ja
rclb
sbb
fmulp
loop
jb
mov
pop
dec
push
mov
enter
cmp
popa
into
pop
arpl
fnsave
mov
xchg
imul
lret
dec
lock
lahf
mov
cwtl
mov
dec
jl
xor
dec
stc
int
std
mov
push
sbb
imul
arpl
aas
sbb
adc
ss
ret
rcl
push
dec
dec
or
sbb
scas
mov
lods
repnz
cs
lea
loop
cmp
or
cmp
mov
mov
daa
jl
mov
fildll
jnp
push
ds
inc
mov
mov
add
push
dec
jecxz
cmp
mull
shrl
in
repnz
mov
out
aaa
rol
adc
mov
pop
rcrb
insl
rcrl
leave
xor
add
int3
dec
inc
cmp
fwait
sub
movsl
outsl
and
mov
jno
push
fmuls
jmp
jp
fwait
mov
sub
mov
pop
or
lret
cmpsl
mov
sbb
or
out
push
push
pusha
int
or
bnd
xchg
iret
sub
clc
pop
fwait
mov
dec
out
xorl
pop
mov
test
pop
mov
out
lcall
jmp
xor
dec
leave
and
test
cld
fcmovb
cs
inc
jge
outsb
ss
xchg
je
jae
cmc
and
push
mov
mov
cli
in
mov
aaa
jge
xchg
sub
in
lcall
and
xlat
inc
shlb
std
daa
js
jae
xchg
imul
test
test
mov
xor
test
sbb
ja
adc
mov
mov
aas
rcr
push
pop
or
xchg
and
test
dec
stos
and
lret
sbb
inc
lea
popa
test
filds
int3
and
add
push
dec
adc
outsb
pusha
sbb
dec
dec
cmp
push
dec
sbb
int
popf
sub
imul
push
dec
adc
out
lds
popf
test
mov
lahf
push
sbb
daa
lods
pop
fcoms
cwtl
aam
es
and
xchg
fdivs
clc
sub
out
addr16
jecxz
or
mov
push
dec
add
mov
and
pushf
add
jo
dec
notl
jge
int3
mov
adc
fcomi
out
lds
mov
dec
in
sahf
js
mov
inc
or
lds
shrb
inc
loop
push
pushf
faddl
and
fst
dec
xor
insl
imul
outsb
or
push
jae
or
mov
das
pop
sub
dec
cmpsl
xchg
lea
push
push
mov
inc
mov
hlt
mov
pop
adc
adc
ret
lods
mov
shll
pop
push
adc
add
jbe
sub
adc
lret
ljmp
out
das
jae
fabs
sub
lods
pop
rorb
ficoml
mov
gs
adc
mov
inc
loope
pop
add
dec
xchg
icebp
gs
iret
xor
fdivrl
pop
sub
jbe
inc
sbb
fsubrs
addr16
hlt
pop
fsubl
shlb
repz
inc
scas
cmp
inc
rcll
cs
mov
repz
push
out
xorb
pop
sub
fldenv
mov
inc
scas
lock
xchg
sub
ss
jge
gs
pop
cli
xchg
dec
idivb
mov
pop
cs
dec
add
sub
daa
sub
mov
pop
lock
cmp
xor
ds
jbe
lret
daa
mov
mov
jns
pop
fdivp
in
fstpt
sub
insb
or
dec
jo
mov
test
es
jnp
in
mov
dec
in
mov
xor
add
repz
xlat
int
lret
add
mov
shl
cmc
loopne
cmpb
scas
lret
inc
add
gs
stos
adc
push
cmpsb
cs
lock
fsubr
or
dec
adc
ds
rep
push
jmp
mov
lods
fsubrs
loope
outsl
hlt
or
jecxz
nop
inc
or
into
pushf
cmpl
mov
mov
lcall
dec
ret
push
push
xor
inc
xor
xchg
pop
adc
or
pop
ljmp
aam
ss
fs
test
add
mov
xchg
pushf
mov
dec
mov
movb
add
cmp
push
inc
cltd
jge
out
jge
sub
dec
ret
movsl
inc
mov
fists
dec
pop
sbb
xor
pushf
push
add
sti
xchg
xchg
sub
sbb
add
adc
fnstsw
dec
addl
cmp
repz
fsubl
mov
mov
mov
mov
jnp
xchg
jnp
jge
cwtl
std
fs
xor
cmp
sbb
mov
lock
push
or
jecxz
inc
mov
adc
repnz
das
test
xchg
dec
in
les
pop
add
push
stos
out
jp
fnstcw
das
rolb
inc
incl
xchg
ror
dec
cmp
sub
or
sub
mov
dec
shl
pusha
iret
out
in
push
aaa
mov
jmp
cmp
pop
jmp
pop
mov
sbb
cld
xchg
cmp
sub
jne,pt
mov
push
stc
pop
mov
cmp
icebp
call
loop
jne
ljmp
mov
cmpsb
mov
jne
jl
stc
cld
adc
outsb
xlat
imul
xchg
and
cmp
cmpb
movsl
cltd
push
out
imul
stos
js
pop
outsb
cmp
pop
int3
push
jne
pop
inc
sbb
addb
outsl
push
fisttps
push
in
int
fmull
mov
xchg
out
add
popa
lods
dec
sub
icebp
popl
aaa
jmp
inc
dec
mov
mov
jno
leave
sarb
cli
idivb
test
fwait
sahf
or
out
add
cmpsb
add
inc
lret
std
std
stos
sti
call
arpl
push
insb
test
call
mov
inc
ljmp
icebp
aaa
insb
mov
lahf
xlat
sbb
das
jbe
lcall
fcmovnu
jae
dec
gs
nop
and
shlb
push
mov
popa
adc
add
shlb
orb
sub
ss
clc
pusha
sarb
lods
push
imul
jne
and
rorl
jo
call
adc
pop
cmc
out
mov
cmc
in
xor
cmp
insb
sub
orb
jno
andb
andb
sbb
jmp
outsb
scas
je
mov
clc
xor
cltd
jmp
mov
adc
dec
and
pop
jle
xlat
jae
cmp
movl
mov
or
jge
inc
jge
mov
iret
dec
sbb
mov
inc
xchg
dec
mov
mov
pop
insb
ljmp
int3
sub
xor
jecxz
mov
iret
retw
rcr
pop
mov
nop
les
dec
mov
in
mov
push
and
out
scas
adc
dec
sarl
xor
xchg
pop
stos
testb
push
out
cmpsl
fldcw
add
les
lcall
and
push
scas
arpl
cld
pop
test
jne
xor
jo
cmp
pop
loop
loope
inc
or
nop
add
dec
cmp
out
sti
scas
sub
xor
inc
sbb
jnp
mov
mov
outsl
cmp
lea
xchg
clc
mov
xor
cmc
fistpll
stos
fidivs
or
sub
cmp
xor
mov
rorb
lods
mov
cmpsl
orl
insl
iret
ss
mov
jo
test
sbb
test
jo
popa
sub
jmp
xor
incb
push
pop
gs
cmpsl
arpl
sbb
jno
mov
jge
push
fstpt
xor
and
pop
ret
rcrl
mov
stc
dec
rcrl
inc
lock
andnps
cmp
pop
addb
shr
push
jge
sub
gs
pushf
dec
adc
js
sti
pop
mov
sub
mov
inc
lcall
out
cld
inc
test
xchg
lods
in
push
call
dec
adc
dec
fldl
mov
repnz
jb
inc
inc
popa
push
arpl
imul
mov
ljmp
pop
bnd
cmp
xlat
ficoml
push
ds
ljmp
xchg
out
sbb
and
jmp
dec
add
push
scas
fmulp
mov
jns
push
dec
shl
or
xchg
fsubrs
inc
andb
mov
xor
ljmp
out
imul
mov
sbb
scas
mov
pop
dec
das
push
xchg
pop
mov
sbb
icebp
mov
subl
cmp
pop
in
mov
cli
sub
popf
xor
pop
sahf
mov
xor
dec
flds
lds
rolb
scas
pop
inc
loopne
mov
mov
cmpsb
mov
lahf
stos
sbb
xchg
sti
push
xor
in
jge
xor
cmp
insl
sub
lret
out
dec
xlat
ds
mov
fisubrl
cld
push
clc
pop
lret
mov
rolb
jl
and
pop
mov
cmp
mov
jp
aas
pop
inc
loopne
mov
rcll
xor
ret
addr16
xchg
mov
cmp
lret
adc
pop
inc
sub
imul
jge
dec
xor
inc
sub
lahf
inc
adc
in
imul
add
loope
pop
popf
xchg
push
and
fldt
sahf
xor
dec
aam
mov
mov
mov
jg
jle
in
push
cld
cmc
xorb
adc
test
icebp
dec
cld
sub
jns
and
xlat
lods
push
pop
adc
inc
fwait
rcrl
stos
pusha
cmpsb
lcall
ror
jns
inc
xchg
xor
jo
pusha
rorl
dec
push
mov
test
iret
outsb
dec
in
mov
insb
aam
xchg
stos
int3
sub
xchg
mov
jl
xor
pop
xor
leave
jno
stc
loopne
sbb
mov
sarl
outsb
pusha
aaa
adc
pushf
lahf
andb
lods
jb
mov
dec
jl
jl
loope
cmp
leave
pop
imul
por
add
test
js
push
mov
add
inc
adcl
sbb
push
movsb
inc
add
sub
into
pop
bound
lahf
inc
add
push
popa
daa
fisttps
mov
and
mov
mov
shlb
and
mov
insb
push
js
fsub
dec
dec
cld
leave
addl
loope
jp
xchg
sbb
aad
scas
shll
mov
xlat
push
mov
cmc
lds
cmp
pop
ret
dec
xchg
insl
sub
gs
fcmovnb
cmp
push
push
fucomp
mov
cmpsl
repz
cmp
scas
mov
dec
shll
cmp
cmp
cmpsb
scas
sbb
push
and
sbbl
and
mov
fidivs
ljmp
sbb
jnp
push
in
dec
or
ror
es
add
jbe
pop
pop
jae
pop
in
jp
mov
jbe,pt
imul
mov
decb
add
push
and
lret
and
mov
scas
aaa
jno
pushl
cmp
outsb
mov
add
jg
mov
mov
mov
mov
sub
adcl
in
mov
mov
and
mov
mov
jae
push
adc
xor
dec
mov
cld
mov
xchg
cmp
mov
fdivrl
movsl
js
ret
cmpsb
outsl
pop
cmpsl
mov
dec
mov
xor
xchg
xchg
scas
shrl
jne
inc
daa
jg
clc
shrl
cmp
xor
aam
int
xchg
xchg
mov
dec
xor
mov
ljmp
jl
in
sti
jecxz
mov
mov
shrl
push
in
rorl
sbb
jbe
jecxz
dec
lods
fsub
jle
into
sbb
push
fimull
cmc
adc
sub
inc
add
add
gs
int3
movsl
arpl
loope
mov
inc
ret
mov
int
in
gs
push
mov
mov
pop
and
and
pop
loopne
and
mov
push
xchg
add
repz
cmp
lret
xchg
lret
push
les
cmc
out
cli
aaa
shlb
push
xchg
out
xchg
ljmp
push
push
jbe
repz
and
mov
inc
fwait
mov
packssdw
ss
mov
rclb
stos
or
cwtl
sbb
cmp
xchg
in
cmc
lea
jecxz
imul
add
push
mov
cmp
mov
dec
dec
test
lahf
stos
repz
div
imul
lds
mov
and
add
or
xchg
pop
push
sub
cs
mov
push
xchg
and
jmp
cltd
push
repz
hlt
pop
inc
inc
or
and
xor
arpl
and
pop
inc
jns
jecxz
pop
scas
push
insb
inc
int3
add
add
add
pop
stos
movsb
adc
mov
cmp
mov
push
dec
insl
popa
mov
mov
cmc
test
bound
sbbl
xchg
cmc
stos
sub
fsubr
testb
xchg
sahf
iret
and
std
daa
inc
je
inc
aam
cmpsl
jmp
add
aam
aad
mov
fsub
dec
adc
cmp
lods
cmp
push
sub
ds
int3
inc
sub
sti
dec
dec
inc
xor
mov
dec
cmpsb
je
xchg
out
xor
outsb
repnz
jmp
mov
out
ljmp
jae
xchg
out
out
jl
int
test
mov
push
imul
mov
add
in
cmc
test
mov
xchg
sbb
mov
mov
mov
mov
shufps
dec
jecxz
mov
ja
sbb
es
mov
jmp
mov
and
sbb
mov
jg
notl
test
sub
jmp
cmp
sbb
pushf
addb
les
addl
lock
xor
sbb
std
xor
scas
das
divl
cld
or
lods
mov
repz
jg
mov
lds
fcmove
pop
sub
or
jb
sub
lods
mov
jp
or
fdivrl
cld
fists
adc
pop
in
push
mov
adcl
xor
mov
int3
aas
loop
fmull
repnz
or
int
lret
inc
pop
scas
sub
adc
xorl
pop
outsb
and
fsubr
insl
insb
in
mov
out
add
das
int
pushf
cmp
loope
stc
or
and
inc
dec
xor
inc
dec
ret
lods
subb
dec
mov
xor
sbb
call
xor
sub
iret
mov
int
dec
jns
mov
sub
mov
sbb
shll
je
jmp
and
jno
push
push
or
aas
mov
or
mov
add
jno
jns
sub
bound
push
jnp
lahf
fidivl
mov
inc
push
cmp
repz
or
and
inc
jmp
adc
mov
mov
or
or
loope
pop
mov
mov
jno
mov
stos
in
int
out
adc
int
sub
js
clc
mov
nop
in
cmc
shll
pmaxub
loop
dec
std
pop
cmp
movsb
push
out
mov
add
jnp
ror
dec
inc
daa
mov
pop
imul
lcall
in
ljmp
jbe
clc
sbb
mov
jo
pop
ja
aam
int
leave
pop
mov
ljmp
sti
xchg
mov
push
and
dec
add
or
jo
scas
sti
inc
rorb
inc
push
imul
push
aaa
sahf
mov
sbb
fisubrl
negl
cmp
sub
dec
leave
cmpsl
mov
mov
sub
xor
movsb
ret
aaa
fwait
in
cmpsl
push
jg
or
push
push
test
inc
xchg
pop
pop
and
lcall
mov
xchg
adc
mov
and
inc
out
or
xchg
xor
std
and
js
imul
xlat
xchg
add
mov
stc
lods
sub
outsl
and
mov
xor
repz
inc
in
lea
xchg
push
push
pop
sti
ja
lret
or
daa
sub
cmp
xor
repz
dec
sbb
ss
push
and
stos
sub
xor
ss
sub
adc
js
mov
cmp
pop
jae
iret
sub
out
pop
mov
push
jns
jae
dec
push
icebp
movsl
aam
movsl
out
xchg
jnp
sub
test
ret
jno
out
insb
add
and
mov
inc
sarb
push
dec
sub
mov
loop
ja
out
pop
fistpll
icebp
scas
scas
out
jg
dec
push
sbb
adc
or
add
in
sub
mov
icebp
stos
push
insb
enter
mov
mov
mov
inc
jnp
mov
pop
cwtl
or
jmp
adc
test
mov
ljmp
xchg
divl
mov
out
out
mov
imul
sbb
jb
ds
add
lret
int
push
mov
outsl
lcall
inc
scas
sar
mov
mov
xor
sar
push
dec
mov
out
add
mov
lods
sbb
hlt
scas
inc
lret
into
in
pop
adc
mov
jno
xchg
xchg
mov
fldl
add
sub
popf
rolb
dec
sbb
lock
fstpt
mov
xor
cs
or
and
lret
int3
dec
loop
push
popf
shll
aaa
mov
iret
and
mov
out
lret
pop
lret
iret
loop
jbe
inc
mov
mov
push
dec
jge
mov
popa
fdivr
sub
xchg
inc
sub
lret
clc
nop
pop
fidivrl
movsl
mov
xchg
pop
ss
insb
lods
jecxz
ja
in
mov
adc
inc
popa
mov
lock
pop
or
shld
mov
in
adc
or
fbstp
jnp
cli
push
cwtl
jge
in
push
rol
adc
in
mov
lret
loope
push
push
sahf
mov
int
xor
adc
aas
sbb
cmc
pop
fistpl
jae
jp
hlt
push
sbb
sub
aam
push
pop
js
mov
or
ret
fmull
xlat
push
outsb
inc
add
inc
and
sbb
lea
fisubl
out
xchg
mov
les
cmp
mov
pop
lret
lds
les
mov
pop
int3
call
inc
mov
cwtl
push
push
xchg
jl
pop
add
xchg
ficoml
jp
stos
aaa
xchg
iret
jo
mov
adc
and
xor
sub
mov
fcom
cmp
shrb
addr16
in
lret
notl
cmp
mov
mov
pushf
sub
inc
or
inc
bound
imul
or
push
cwtl
neg
scas
loopne,pt
or
je
cmc
dec
shl
pop
mov
sub
movsl
push
dec
sahf
arpl
xor
mov
bound
les
cmp
cmp
mov
divb
dec
fucomp
push
jno,pt
mov
add
int
sti
and
sub
push
add
jl
pop
pop
leave
mov
sbb
fcmove
shll
or
pop
mov
stos
push
inc
sub
out
sub
inc
mov
xor
sahf
cmpsl
dec
inc
pusha
sbb
insb
inc
aas
filds
movsl
sti
repz
test
adc
add
rolb
add
divb
pop
fmuls
push
daa
repnz
lock
or
hlt
lret
js
hlt
push
and
jl
in
imul
lret
dec
cmp
mov
sbb
inc
rolb
es
inc
imul
test
pop
pusha
mov
push
ja
sbb
xor
repz
xor
xor
xchg
clc
movsl
fdivs
mov
test
sar
pusha
jo
movsb
jb
andb
pop
dec
sbb
or
aaa
out
arpl
sbb
lds
loope
add
push
cmpsl
ret
cmp
sbb
lahf
inc
or
icebp
inc
or
sbb
pop
push
jge
dec
and
adc
fldl
sbb
stc
or
bound
test
dec
jp
inc
dec
in
cmp
push
lret
mov
mov
cltd
jmp
ret
outsl
cmpsb
dec
jnp
ljmp
subb
mov
jb
mov
stos
or
add
and
daa
xorb
mov
mov
xlat
ljmp
js
je
in
rep
jns
push
sub
and
bts
ja
ror
imul
pop
loop
stc
adc
fs
lock
sbb
out
loopne
xor
out
push
cmpsl
fs
mov
mov
mov
adc
sub
cltd
hlt
out
mov
in
ljmp
mov
dec
in
jge
call
dec
jg
sub
jmp
out
fs
sub
sahf
daa
inc
aas
dec
lea
and
inc
jmp
cwtl
hlt
icebp
and
push
or
push
mov
sub
insl
push
cmp
inc
ret
aas
sub
ljmp
imul
jne
and
jb
pop
imul
stc
xor
cltd
jl
dec
sarl
xor
add
insl
push
mov
loope
cmpsb
or
inc
mov
movsb
mov
mov
aam
aas
mov
in
add
pop
mov
and
jno
push
xor
pushf
lret
lret
xchg
data16
and
inc
cld
inc
mov
lea
lret
daa
pop
movsb
push
and
jl
cmp
pop
leave
push
xor
insb
pop
sbb
push
dec
js
push
jle
imul
and
sbb
hlt
dec
fistl
jmp
pop
cmp
push
xor
in
lahf
jbe
push
loope
subb
mov
sbb
inc
iret
rolb
adc
dec
xor
mov
pop
cld
pushf
das
les
cli
pop
inc
repnz
add
xchg
in
sub
mov
sbb
or
xchg
pop
clc
nop
jb
lret
dec
and
stos
cld
and
push
jnp
cmp
test
dec
jge
mov
mov
mov
pop
adc
ret
cmp
jge
jg
add
int
loopne
loope,pt
cs
out
adc
pop
jmp
xor
push
inc
and
in
add
inc
out
out
sbb
daa
ret
test
adc
cmpsb
je
fcmovnu
stos
das
jns
dec
jno
pusha
mov
bound
scas
loop
mov
and
cmp
xor
sbb
sub
xchg
dec
push
adc
jp
in
jge
cmp
gs
and
movsb
cli
push
test
pop
mov
add
sbb
sahf
ret
mov
ljmp
jmp
mov
dec
mov
fiadds
or
lret
pop
fs
std
addb
jecxz
cmp
repz
mov
mov
aad
lcall
add
pop
cmp
in
test
ss
das
sub
push
adc
les
es
and
jmp
mov
sarl
adcl
or
aam
aam
popf
jb
bound
inc
movsl
sbb
clc
sti
pop
push
arpl
inc
mov
sub
jnp
sub
and
cwtl
outsl
je
daa
lock
adc
lcall
push
dec
xchg
pushf
pushf
cs
mov
inc
cmp
movsb
bound
sbb
shlb
mov
mov
dec
loop
scas
jb
imul
mov
ss
mov
into
imul
in
push
inc
fadds
je
fidivrs
imul
xlat
mov
fidivrl
hlt
dec
push
mov
dec
divl
pop
add
mov
dec
ds
imulb
push
out
add
adc
pop
repz
xchg
or
lds
je
test
sbb
push
pop
pop
and
jno
imulb
mov
adcb
adc
aam
add
mov
mov
addr16
dec
fcoml
test
sbb
sahf
mov
test
decl
mov
cmp
cmc
xor
je
adc
lds
mov
xor
hlt
push
mov
cmp
scas
xchg
sbb
aas
sub
imul
inc
ret
lods
pushl
dec
loop
mov
ficoms
and
and
scas
or
adc
test
and
cld
fs
inc
dec
xchg
pop
mov
pop
call
pop
sub
lock
popa
pop
test
inc
lret
imul
sbb
loope
lret
sbb
or
out
pop
imul
shlb
add
test
in
dec
jge
lods
xchg
push
mov
dec
push
lret
idivl
call
cltd
mov
adc
jo
mov
je
xchg
insb
sub
popf
mov
mov
loop
rep
pop
cmc
xchg
sbbl
jnp
adc
sbb
and
popf
pop
icebp
sub
cld
lretw
dec
sbb
mov
jns
ds
mov
push
pusha
fcoms
das
cld
xchg
cs
popa
add
lods
out
xlat
and
data16
hlt
push
push
mov
dec
fisubl
jbe
xchg
dec
popf
and
stos
rol
pop
out
movsl
lahf
push
xlat
jns
jns
loop
cmp
lods
jmp
sbb
xor
pushf
lahf
addb
dec
icebp
outsb
inc
seta
mov
sahf
mov
je
call
jo
lock
nop
sbbb
lea
pop
scas
sti
imul
fnstenv
mov
mov
pop
xchg
xor
sbb
jecxz
sub
sub
in
ds
jo
xchg
or
call
push
out
ds
lcall
mov
mov
push
or
jle
ret
lret
and
movsl
pop
lods
mov
orl
inc
and
xor
mov
lock
daa
inc
xlat
insb
aam
ficompl
repnz
fwait
outsl
mov
add
enter
int3
pop
fstpl
sbb
sbb
jae
ret
xchg
test
jle
mov
or
and
xor
mov
xorb
xchg
in
fs
dec
daa
mov
ss
ret
or
mov
ficomps
into
pop
push
bound
mov
push
cs
jg
lret
pusha
adc
loope
cs
or
call
dec
jg
dec
mov
cmp
jo
mov
icebp
scas
stos
fsubs
push
loope
jmp
pop
inc
sub
xchg
mov
ret
lea
call
inc
rcr
scas
pop
push
inc
decb
data16
pop
insb
xchg
mov
mov
cmp
jb
cltd
dec
nop
test
sbb
jge
inc
xor
mov
mov
xchg
lea
adc
xchg
dec
jge
mov
mov
pushf
clc
nop
ret
gs
ss
pushf
dec
sub
dec
outsl
and
stos
subb
pop
enter
jnp
xchg
clc
insb
add
and
addps
repz
mov
pop
jb
mov
push
inc
arpl
dec
imul
cmp
iret
pop
ja,pn
jbe
out
xchg
lret
inc
mov
rol
test
sbb
iret
xchg
out
hlt
dec
lock
sti
add
lods
xchg
jecxz
push
inc
jne
xor
pop
jne
xor
add
stos
mov
jo
movsb
arpl
jno
jecxz
out
xor
xchg
int
pop
push
enter
dec
pusha
ror
stos
pop
js
jno
pop
mov
imul
cmp
xchg
push
mov
mov
ja
cmp
mov
mov
mov
pop
or
inc
out
test
push
cmp
sub
sbb
xchg
push
fidivrs
push
mov
xchg
sbb
mov
iret
pop
dec
fadd
cmc
stos
cmp
and
jne
sahf
fucomip
mov
add
dec
pusha
mov
mov
or
xchg
jb
jge
pop
push
xchg
addb
mov
sub
mov
xchg
repz
ret
xlat
int3
xchg
mov
aad
addr16
data16
ja
popf
mov
inc
xor
cmpsl
mov
cli
push
jle
add
repnz
cwtl
dec
movsl
ret
rclb
std
fisubrl
js
stos
pop
insl
sbb
shlb
jno
div
push
jne
mov
dec
out
inc
fisubrs
popa
dec
add
or
fistps
inc
push
insl
mov
dec
xchg
xor
push
or
mov
outsl
dec
icebp
mov
lret
xor
cmpsb
imul
shlb
adc
sbb
test
testb
repnz
mov
xchg
mov
ret
inc
mov
scas
fwait
scas
movsb
cmpl
pop
mov
mov
sbbl
pop
pop
or
imul
inc
cmpsl
push
sub
outsb
cwtl
or
lahf
or
mov
adc
out
stos
aam
stc
mov
aad
jge
xchg
mov
mov
pushl
pop
jle
addr16
dec
pop
xlat
aas
lcall
push
fnsave
int3
fbstp
add
push
ret
inc
fiaddl
mov
mov
cltd
inc
lret
push
iret
xor
dec
jo
dec
enter
bound
fisubrs
push
fistpl
ja
popf
sbb
rorb
inc
dec
jecxz
outsl
xchg
mov
xchg
adc
xor
jle
dec
mov
push
sub
jg
sti
sbb
out
jb
jnp
clc
ret
mov
push
inc
mov
push
or
mov
aaa
sub
fdivl
sub
mov
push
push
data16
xchg
xacquire
cmp
fnstenv
pop
dec
jns
adc
jo
ljmp
out
xor
push
pop
xchg
mov
mov
push
sahf
push
je
ss
mov
jge
mov
sbb
add
mov
mov
loopne
test
sbb
mov
jbe
cli
inc
xchg
pop
iret
daa
cltd
loopne
xchg
pushf
test
cmp
push
fadd
mov
es
jl
in
pusha
icebp
outsl
push
arpl
mov
jnp
insl
cmpsl
xchg
sbb
mov
pop
mov
xchg
js
shlb
into
int
cmp
dec
sub
testb
icebp
shrl
mov
add
add
cli
addr16
ret
inc
je
fcmovnu
jecxz
add
mov
or
mov
into
sub
mov
mov
push
xor
dec
pop
sahf
repnz
mov
fs
and
cmp
pop
add
pusha
pop
xor
inc
ret
call
loop
lods
add
jmp
adc
shrl
hlt
adc
add
jne
lods
out
popa
lret
add
shll
jle
add
lea
ljmp
push
lea
sti
inc
pop
cwtl
mov
addr16
inc
pop
mov
fnsave
push
mov
das
scas
ja
mov
or
je
mov
in
fsubl
dec
add
jnp
adc
sbb
les
xor
pushf
and
push
push
in
fs
stos
cli
xchg
mov
stc
cmp
aad
das
nop
push
adc
outsl
fdivl
push
clc
mov
arpl
sbbl
outsl
mov
lods
int3
adc
push
out
jne
cli
pop
xor
sarb
sub
xor
loope
mov
cmp
jge
dec
lcall
shll
xchg
mov
in
jge
dec
fnstcw
jbe
mov
lcall
ret
push
shl
test
xchg
ljmp
sti
pop
sbb
stos
jbe
js
cld
shll
lret
popf
lea
sub
lahf
jns
lret
cltd
pop
shlb
div
shll
bound
cmp
les
out
mov
sub
ffree
lea
rcr
jb
loopne
push
repz
push
sti
sbb
mov
or
sbb
adcb
sub
push
adc
test
jl
adc
pop
outsb
mov
stc
mov
and
imul
jns
subb
pop
and
push
lock
xchg
aaa
and
add
aas
and
cmovl
push
jge
pop
xchg
mov
pop
pop
mov
jbe
jno
jb
rcrb
mov
gs
inc
dec
cltd
ljmp
push
iret
out
jne
add
aam
shlb
cmp
scas
sub
popf
inc
push
insl
js
loop
enter
ficoms
pusha
daa
insl
mov
call
lret
or
add
xor
test
lock
and
mov
pop
outsl
stos
jns
loope
dec
ss
adc
movsb
or
jmp
mov
rclb
jl
xlat
sarb
xor
or
rorl
les
sub
add
push
xchg
dec
fwait
lds
jo
cltd
xchg
mov
xchg
or
ja
jecxz
push
add
arpl
mov
shrb
dec
pop
das
inc
cmp
mov
push
mov
negl
xor
scas
xchg
int3
dec
dec
cmc
subb
mov
or
dec
loop
cli
cmp
adc
sahf
imul
xor
dec
jb
push
pushf
fildl
inc
push
mov
inc
scas
cmp
pop
lods
jns
lret
test
push
xchg
jmp
movsb
fs
or
and
js
or
repnz
popa
mov
push
pop
iretw
fs
mov
adc
push
push
mov
xchg
mov
subl
push
int
fs
push
add
pop
mov
xchg
xchg
push
xchg
xlat
int
xor
loopne
sbbl
leave
lret
gs
clc
mov
xor
int3
pop
mov
xchg
gs
stos
lea
ljmp
xor
sar
add
or
jb
cltd
cmc
sub
jb
mov
rcrl
mov
inc
or
mov
es
push
mov
xchg
xchg
add
mov
push
daa
or
lods
ja
jo
popa
lods
scas
xor
sbb
outsb
inc
inc
mov
and
jns
dec
mov
cld
push
andb
fadds
cltd
loop
or
leave
sub
dec
inc
xor
andnps
mov
xchg
rclb
pop
or
pop
xchg
int3
mov
xchg
dec
adc
lds
loope
mov
outsb
dec
jae
call
dec
push
adc
add
cmpsb
aas
sbb
mov
mov
inc
scas
scas
mov
into
push
stos
aas
lret
repnz
pop
bndldx
push
inc
stos
cwtl
sbbl
js
iret
push
lret
push
aam
mov
cmp
ja
insl
xchg
clc
adc
lods
push
adcb
shrb
jno
push
loopne
popa
pop
cmpsl
push
mov
cld
ja
or
pop
jle
mov
lods
push
in
or
adc
pop
int3
sbb
push
movsl
iret
shrb
cmc
mov
adc
test
mov
arpl
push
sti
cmp
jmp
js
cltd
cmp
loopne
mov
out
jg
vmovaps
cmpsl
adc
ljmp
or
or
pop
jl
test
cmp
and
loope
stos
jmp
ret
jmp
outsb
mov
ret
es
dec
stc
add
cmp
pop
pop
mov
mov
loope
mov
inc
or
hlt
int3
pusha
into
mov
int3
sbb
hlt
pop
mov
popa
ds
mov
sbb
and
lea
xlat
push
mov
pop
movsb
cmp
outsb
fnstenv
test
adc
sub
xchg
dec
or
es
xchg
nop
mov
pop
cmp
insl
fldenv
sub
ja
add
sbb
sbb
mov
dec
adc
aad
xchg
dec
jae
dec
sbb
cmpsb
sub
rclb
jne
mov
data16
out
mov
movsb
push
and
sbb
test
loop
sub
outsl
xor
aam
test
push
sbbb
jg
mov
mov
outsl
popa
pop
push
xchg
rcpps
in
sbb
dec
jge
xchg
dec
lods
fmull
mov
push
shlb
iret
pop
pop
aam
fnstsw
leave
jg
fisubs
in
pop
clc
jle
stos
stos
cltd
imul
mov
test
inc
std
aad
sti
cmpsb
mov
cmp
and
inc
sbb
rolb
std
and
and
jnp
mov
jmp
push
dec
lahf
xchg
or
xor
jmp
icebp
iret
cmp
into
mov
or
push
in
or
ror
gs
pop
nop
cmc
or
or
rcll
dec
in
pop
or
dec
lods
pop
mov
push
jno
jno
jno
push
xchg
sbb
sbb
mov
dec
dec
cld
das
cmp
bound
arpl
arpl
ret
mov
outsl
mov
outsl
ffreep
pop
pop
xchg
repz
sub
cli
or
das
mov
xchg
loopne
and
loop
aaa
sub
icebp
jl
loopne
inc
lods
cmp
repz
rclb
mov
pop
sub
xchg
or
pop
push
movsb
cmpsl
andb
or
push
jo
dec
mov
ss
dec
xor
pop
int3
mov
mov
clc
testl
inc
push
mov
fidivrl
push
leave
imull
fildll
xor
jge
push
adc
cmpsl
lods
inc
sahf
dec
jp
push
popa
mov
out
and
jbe
hlt
test
lret
out
mov
test
ret
lcall
loop
sbb
lahf
stc
mov
lret
rcrl
int
push
das
xchg
mov
mov
cmp
ret
outsb
int3
mov
push
enter
cld
stos
push
loope
mov
cmpsb
lods
mov
mov
xchg
lahf
jmp
loop
bound
jns
std
rorl
nop
adc
inc
les
xchg
ret
es
mov
js
inc
call
fbstp
or
pop
cld
jb
movsb
sbb
xor
pop
int3
fldl
int3
movsl
push
mov
nop
fadds
mov
in
mov
fnstsw
xchg
test
out
ja
cld
or
push
shrl
int3
ret
movsl
sbb
call
loopne
icebp
cmp
sub
gs
pop
mov
or
jle
push
lods
lret
sub
cmp
fdivp
test
movsb
mov
insb
shll
jmp
popaw
mov
jle
sub
xorb
shll
test
cmp
cli
scas
xchg
in
lods
adc
imul
mov
cs
sbb
jne
cld
aam
push
daa
repnz
jnp
jecxz
jb
enter
fadds
mov
insb
push
jle
sub
test
mov
in
inc
mov
and
pop
mov
mov
rorl
test
inc
ds
mov
inc
cmpsb
shufps
rol
mov
cmp
add
adc
std
test
stc
int
outsb
adc
loope
xchg
fstps
mov
and
jb
aad
outsl
ss
fwait
ds
dec
cwtl
cwtl
pop
cmpsl
mov
sub
mov
in
fdivl
xor
into
les
stos
insb
imul
sarl
inc
or
push
cld
lea
std
es
mov
cs
or
sbb
iret
mov
dec
sbb
aas
test
inc
es
mov
test
jmp
idivb
popf
xor
inc
js
int3
jns
decl
pusha
and
mov
and
xor
adc
iret
ljmp
or
push
stos
mov
and
iret
xchg
sti
sub
mov
add
das
xor
lods
mov
fs
dec
mov
jg
inc
fs
subb
xchg
lock
or
mov
cmpsl
inc
mov
dec
cmp
mov
lahf
inc
push
shl
cmpsb
xchg
push
arpl
inc
and
ficoms
mov
mov
inc
dec
cmp
incb
aam
sbb
cli
cmp
pop
jnp
cmpsl
shr
popa
es
icebp
ss
mov
push
jecxz
pop
jl
test
xchg
scas
or
pushf
int3
lret
lods
pop
lock
mov
pop
push
enter
aas
mov
sub
and
mov
jno
arpl
cld
push
dec
push
jge
insl
icebp
jmp
lret
sbb
xchg
fcoms
stos
fistps
sub
stc
enter
addr16
ficoml
imull
dec
xor
lea
or
cmp
cvtps2pd
jno
push
pop
stos
lds
pushf
mov
iret
jl
dec
addr16
push
inc
fsubp
jmp
inc
iret
xor
jb
dec
mov
xchg
and
aaa
add
xchg
jmp
push
scas
in
imul
mov
addr16
scas
and
mov
sub
pushf
lods
adc
mov
sarl
scas
mov
add
mov
pop
sbb
imul
jle
and
adc
xchg
enter
and
lods
mov
std
xchg
and
inc
outsl
lcall
mov
push
loope
outsb
and
jle
or
sub
in
xchg
push
dec
negb
push
lods
inc
xchg
push
out
out
ss
sbb
into
xchg
cmpsl
mov
add
fdivp
sbb
or
repz
lcall
mov
inc
cmp
adc
adc
mov
popa
mov
shll
pop
sbb
aad
mov
jns
sbb
xchg
lods
jo
sbb
and
repz
lock
rorb
test
cli
sub
loope
hlt
mov
add
mov
mov
mov
int
lret
loop
cwtl
sub
stc
cmc
scas
dec
push
in
jb
leave
sbb
xlat
rcl
das
jnp
inc
jl
aad
out
cmp
not
xchg
call
sub
sbb
flds
sub
xchg
jle
popa
in
xchg
add
into
sbb
xor
inc
ja
popf
jo
inc
clc
insl
popa
lret
jae
xchg
xchg
pop
popa
call
push
daa
sub
fistpll
repz
fsubrl
scas
pop
mov
xchg
jle
out
dec
inc
sub
cmp
dec
dec
and
int
mov
or
addb
mov
xchg
mov
insb
lods
mov
sbb
addr16
shll
fwait
in
cmp
jae
dec
mov
sbb
ret
and
lods
sub
lret
mov
cmp
out
into
add
ds
mov
pop
lret
ss
sub
adc
daa
scas
pop
int
sub
or
inc
push
jecxz
out
xor
shl
mov
ja
adc
sub
imul
daa
and
jle
dec
add
cld
and
mov
push
or
lret
xchg
mov
mov
repz
insb
adcb
roll
loope
inc
out
and
aas
cld
pop
and
mov
test
push
loop
pop
cwtl
push
push
loopne
mov
xlat
lret
jmp
mov
mov
fsubrl
push
inc
add
imul
lods
movsb
out
mov
fidivrl
mov
mov
sub
out
xor
test
sub
rcrb
dec
pop
addr16
mov
jg
inc
and
out
cmpsl
out
in
mov
xor
repnz
push
insl
gs
pop
mov
addb
test
sub
rorb
aaa
xchg
movsl
insl
mov
push
mov
outsl
or
adc
push
mov
mov
push
pop
mov
repz
out
fdiv
jp
rcr
inc
fsubrl
daa
ja
ret
add
notb
pop
cld
mov
movsb
loop
pushf
aaa
lods
in
sub
add
insb
xor
or
loope
sub
mov
add
cmp
leave
sbb
pop
mov
stc
out
dec
repz
inc
insl
popf
mov
push
mov
add
mov
cmp
push
gs
pop
and
ss
mov
mov
add
lock
leave
inc
dec
std
data16
jge
jo
ja
je
sbb
adc
std
ja
addl
push
mov
pop
mov
adc
movsb
pop
mov
rcrl
adc
cmp
cmp
inc
lds
xchg
inc
or
clc
jae
or
lret
sub
inc
cmp
or
adc
insl
roll
pop
cwtl
sarb
cmp
iret
daa
xor
repz
lock
mov
mov
lds
ret
xchg
arpl
cmpsb
dec
out
xchg
bound
or
call
pop
ficoms
imul
and
leave
shll
push
call
adc
mov
pop
lret
gs
es
jecxz
mov
aas
add
sub
dec
lock
mov
jl
pop
in
inc
mov
or
sub
sti
imul
mov
push
ret
adc
and
add
cs
mov
fs
in
push
aaa
addr16
cmp
fcoms
movsb
cmp
loopne
xor
out
das
mov
les
lahf
fisttpl
sti
jl
add
adc
or
test
dec
ret
cmp
in
addr16
sbb
inc
push
push
cld
test
inc
repz
xor
ret
lods
adc
sti
add
pop
xor
mov
shrb
lock
pop
data16
pop
mov
gs
cltd
pop
push
lods
xor
xchg
dec
push
cwtl
adc
and
sbb
xchg
lods
je
aaa
sbb
aam
mov
dec
pusha
outsb
aaa
push
pop
lods
jmp
pop
add
pop
out
shrl
in
jns
and
ret
icebp
cmpl
pop
sbb
sbb
test
push
lret
jge
stc
pop
add
or
jp
mov
cli
outsb
roll
pop
push
test
icebp
mov
inc
mov
pop
xchg
bound
mov
mov
sbb
gs
mov
loope
mov
aad
jno
loopne
ret
loopne
and
xor
fs
insb
iret
gs
xchg
dec
iret
shrl
cmpb
pusha
xchg
out
arpl
jp
sbb
sub
test
rol
xor
pop
dec
add
mov
push
ret
jl
flds
xchg
xchg
adc
lret
adc
mov
mov
aaa
and
sub
jo
mov
push
inc
outsb
retw
cmc
aas
std
push
into
sub
out
enter
aas
mov
fiaddl
das
inc
jne
fdivrs
lahf
xlat
subb
xor
adc
pusha
xor
inc
das
jmp
cmp
movsl
xor
adc
cs
inc
gs
test
sub
loop
cwtl
adc
xchg
push
inc
xchg
call
int3
push
out
xor
rcll
xorb
test
sarl
mov
mov
fdivr
jne
ja
push
dec
fsubp
into
fcmovnb
aas
adc
cmpsl
xor
mov
mov
das
icebp
xorb
push
aaa
shrl
idiv
sbbb
jbe
or
inc
push
pop
imul
cmpl
sbb
mov
add
xlat
dec
lea
mov
push
in
mov
mov
daa
fmulp
rol
or
enter
adc
imul
movsb
push
push
out
jmp
and
clc
fxch
fisttps
dec
fisubs
in
pop
mov
pop
das
mov
hlt
push
data16
pop
out
sarb
daa
sbb
fcomi
dec
push
lahf
cmp
xor
xchg
sub
mov
adc
sbb
sub
mov
adc
and
lock
mov
dec
fmuls
sbbb
aaa
fldt
push
mov
jo
cmc
dec
fnstenv
jg
sub
lret
xor
test
jno
js
xchg
add
das
push
xor
lods
sub
bound
testb
shrl
test
xorb
jno
cli
and
push
and
add
or
jnp
mov
push
fcomps
sbb
xchg
mov
cld
and
xchg
lods
or
and
push
mov
ds
andb
aam
cmpsl
cmpsb
cmp
mov
adc
repz
jbe
xor
push
inc
dec
out
sahf
clc
out
dec
fnsave
cmp
add
jmp
jns
and
enter
cmc
addr16
mov
pop
loope
dec
fbld
cmp
jge
adc
lock
iret
sbb
or
and
js
push
ljmp
dec
cld
loopne
add
cltd
bound
daa
enter
leave
hlt
inc
push
fcmovb
stc
insb
xor
ret
mov
pop
pushf
loopne
mov
aad
mov
test
popf
or
idivb
icebp
pop
shlb
xlat
lods
repz
sub
jge
das
xchg
cmp
adc
mov
mov
push
in
lcall
out
jnp
out
ret
jnp
xchg
call
push
fnsave
dec
fidivl
xlat
adc
mov
xchg
dec
ffree
sbb
push
stos
sbb
push
mov
xchg
in
sub
je
pop
sarl
pop
or
aam
xor
adc
adc
lcall
inc
and
xchg
adc
adc
cwtl
test
jecxz
in
dec
jns
xor
loope
test
test
dec
adc
cmc
repnz
rclb
adc
sub
ficoml
ds
cmp
xchg
mov
xchg
ret
mov
pop
in
fstp
nop
lods
pop
xchg
pop
pop
or
sbb
cwtl
push
xchg
ss
ss
mov
xchg
clc
gs
xchg
in
shlb
lock
call
shl
or
int
int3
pop
sub
xlat
js
pop
adc
movsb
inc
or
xchg
jge
rclb
das
insl
add
mov
adc
xlat
or
xor
pop
aas
mov
sub
cld
pusha
pop
cmp
rolb
sub
mov
push
xchg
in
sbbb
imul
mov
pop
aad
pushf
pop
cmpsb
pusha
pop
ljmp
jmp
in
shrl
jno
push
jb
sarl
lock
jbe
mov
test
jmp
adc
cmp
hlt
and
xor
cmp
sub
adc
fstps
push
inc
cmp
out
cli
mov
sub
jns
push
pop
and
scas
jae
mov
add
fs
xchg
test
sub
push
ja
push
push
fisubs
push
mov
xor
clc
subb
mov
jnp
imul
inc
hlt
bound
hlt
jmp
jl
int3
adc
popf
xor
lds
test
out
loope
jle
les
faddp
testl
push
or
in
cmpsb
movsl
lahf
addr16
lcall
mov
mov
jo
inc
or
mov
xchg
mov
pusha
rcr
add
scas
cmp
sub
adc
gs
ret
xchg
cmpsb
push
dec
cmpsb
dec
in
push
sub
test
jno
mov
mov
xchg
scas
mov
pop
jmp
xor
or
mov
out
popw
jb
icebp
and
cli
mov
rcrl
aam
and
pop
dec
sub
and
cmc
fdivrs
out
and
xchg
pop
fldenv
bound
add
xchg
mov
popa
test
cmpsb
gs
fistps
ret
sbb
jecxz
pop
addb
out
mov
dec
gs
jns
mov
fisttpl
xor
jl
stos
pushl
xchg
add
push
push
std
mov
sahf
inc
xchg
and
adc
adc
xchg
jb
cmp
outsb
add
clc
and
sub
negl
mov
repnz
es
pop
mov
dec
imul
das
cmpsl
in
dec
jns
push
xor
pop
sti
clc
push
fs
ss
push
dec
sbb
popa
inc
push
mov
add
es
rol
cwtl
and
push
sbb
jmp
push
call
cmp
int
mov
stc
and
orb
inc
or
aam
sti
arpl
sub
mov
cmp
int
inc
adc
lahf
cmpsb
lcall
cmpsl
inc
loope
arpl
jno
sub
or
cmp
and
add
jae
jb
xchg
inc
cmp
arpl
ja
pop
out
inc
mov
scas
shrl
push
adc
push
push
lahf
das
xchg
jle
ss
rcrl
arpl
push
xor
dec
adc
pusha
sahf
popl
push
jae
cmpsl
xchg
mov
inc
xchg
outsl
and
repz
mov
or
mov
loop
movb
std
mov
mov
sbbl
loope
sbb
imul
addb
sahf
pop
in
adc
push
sbb
jb
fldt
int3
and
xchg
inc
fcomp
add
lahf
ret
lcall
push
push
dec
lds
mov
cmp
dec
stos
and
or
les
and
out
je
movsl
out
popw
xlat
pop
mov
inc
jns
jmp
fnstenv
movsb
mov
je
jg
jbe
cli
push
push
hlt
lds
jmp
fisubrs
pop
cs
addr16
mov
jmp
out
lahf
xor
inc
addr16
jne
jp
inc
jb
movsl
addr16
jp
addl
sbb
cmp
imul
jae
test
mov
fcoms
mov
add
rcpps
out
pop
sub
outsl
and
js
cs
mov
push
in
cli
pop
jno
ljmp
and
sub
xor
ret
jne
sub
push
adc
data16
inc
cmp
fcom
push
sub
xchg
add
sub
dec
addr16
ret
mov
lods
mov
inc
xor
jge
cs
sbb
push
fistpl
dec
mov
mov
xchg
sbb
std
sub
jae
xchg
ret
jg
inc
jbe
addl
arpl
insl
cld
cld
xor
push
das
mov
sbb
sbb
sub
divl
pop
ds
mov
daa
rol
mov
sahf
mov
push
inc
xor
push
std
data16
mov
stc
and
test
pusha
test
cltd
push
add
inc
out
inc
test
add
push
out
cltd
and
jo
mov
pushf
outsl
call
cmp
rcl
dec
icebp
adc
std
sbb
dec
dec
mov
cmp
jne
xchg
mov
xchg
xchg
aas
adc
faddl
pop
mov
mov
icebp
nop
pushf
pusha
mov
mov
fwait
push
into
jo
and
sbb
push
push
cmp
sbb
xor
inc
jl
adc
sar
jae
pop
and
rolb
dec
out
mov
iret
outsb
fdivl
mov
inc
sahf
leave
fwait
jns
jge
cmp
mov
sub
jne
pop
inc
jecxz
adc
and
mov
or
cmp
aaa
ss
cmp
loope
mov
jbe
imul
jne
or
or
fistpl
imul
out
mov
in
sahf
aam
xchg
test
test
and
sbb
sahf
xor
aaa
dec
jno
int3
inc
mov
mov
jns
movsl
pop
lods
xor
jecxz
push
adc
fmuls
or
shrl
lds
jmp
sub
imul
sbb
mov
int3
mov
pop
rorb
adc
cs
adc
adc
fsubr
dec
shll
mov
jb
mul
and
dec
notl
push
mov
aad
dec
mov
adc
add
pop
dec
out
movsl
jmp
mov
push
jmp
mov
lret
sub
mov
leave
add
and
push
stc
nop
and
sarl
jecxz
sub
jg
ja
rorl
and
add
mov
jno
sub
add
jno
imul
push
push
mov
jb
add
clc
sti
out
lock
lea
pop
shll
mov
adcl
in
jl
fstl
insl
push
add
shl
push
ss
lret
sbb
jmp
loopne
not
out
movl
cmp
or
inc
insl
mov
hlt
mov
fcmovb
scas
add
dec
sub
inc
push
sub
xchg
das
leave
pop
mov
xchg
insb
jae
outsb
cmp
push
mov
xor
outsl
insb
shrl
sbb
in
jl
dec
pusha
xor
cli
loope
ljmp
jp
push
dec
jp
lcall
mov
xor
clc
sbb
inc
iret
lret
cltd
movsb
pop
cmp
inc
xor
pop
test
mov
mov
fbstp
movsb
sub
push
ret
lret
cwtl
pop
push
jp
rclb
or
test
add
popa
dec
sbb
aaa
std
dec
xor
push
add
cmp
cli
aam
popa
sbb
mov
ds
mov
adc
lcall
addr16
mov
ret
pushf
jbe
push
xor
mov
movsl
jmp
aas
sub
mov
daa
div
xor
ja
or
stos
mov
in
lahf
adc
jle
adc
mov
outsl
adc
fstpt
iret
call
test
pop
shrb
xchg
push
data16
ret
cmp
addl
pushf
push
mov
xchg
fdivrs
aad
mov
iret
orb
lcall
xor
inc
push
ja
mov
cmp
insl
add
add
outsl
and
fninit
pop
jbe
lds
adc
andl
pop
sbb
ljmp
sub
jle
sbb
std
ljmp
lds
std
test
shlb
stos
int3
repnz
jns
es
or
test
pushf
ret
xor
cmc
push
jo
push
sbb
adc
out
repz
lahf
inc
lcall
cmpsl
push
or
jae
movsl
sqrtps
pop
scas
mov
cmp
add
sbb
adc
mov
mov
pop
and
loop
add
mov
stos
lahf
call
test
jo
scas
popf
push
leave
dec
mov
int
mov
mov
lock
dec
insl
mov
sub
cmp
jb
pop
scas
pop
mov
iret
out
sbb
xor
inc
test
sub
mov
movsb
mov
sbb
mov
cmp
data16
popf
or
subb
pop
ja
call
fstps
leave
je
xchg
and
xchg
lods
enter
stos
xchg
sbb
jmp
out
xchg
movsb
outsl
movsl
inc
and
inc
andl
add
push
pop
ja
pop
mov
hlt
dec
imul
xchg
jle
sbb
bound
push
fs
xchg
dec
add
cmp
addb
add
pop
push
stos
mov
pop
jecxz
cmpsl
cmpsb
add
push
push
imul
out
shlb
cmpsb
push
pop
ret
mov
inc
js
and
mov
repnz
fwait
pushf
mov
aas
and
xchg
ret
je
dec
mov
repnz
stos
mov
fisubrs
cmp
xchg
mov
aad
sbb
or
mov
jb
jmp
mov
lret
mov
jmp
pop
push
mov
push
rcrb
pusha
add
pop
lea
add
je
out
pop
stc
push
out
call
lods
cld
mov
cmp
in
popf
sarb
out
xchg
data16
imul
push
cli
stos
lds
cltd
lods
jmp
outsb
shrb
ljmp
cmp
int3
pop
ret
adc
movsb
mov
out
sbb
add
sub
rcrl
shll
cltd
jae
jo
xor
arpl
call
enter
cmp
jp
lret
xorb
hlt
mov
push
insb
mov
mov
leave
xor
rclb
xor
imul
adc
gs
xor
outsl
xchg
pop
jb
inc
inc
cltd
es
mov
jle
ficoms
push
mov
cwtl
enter
lods
mov
sbb
jge
push
xchg
fmul
std
or
mov
pop
cmp
xchg
sarb
test
scas
push
jbe
mov
mov
loopne
mov
sbb
arpl
std
pop
test
push
inc
inc
add
insb
sub
test
arpl
push
les
mov
push
mov
sahf
cltd
jg
rorb
push
xor
enter
inc
fbld
enter
jl
mov
xchg
mov
and
repz
insb
jle
lods
call
outsl
xchg
cmpsl
push
adc
adc
loop
mov
stc
ljmp
xchg
pop
in
iret
bound
mov
jo
js
xchg
clc
jge
lds
fwait
scas
sti
push
add
divl
sahf
stos
push
adc
jnp
fdivs
xor
dec
cwtl
aaa
jg
jb
fcoms
pop
push
dec
mov
and
leave
and
push
xlat
jmp
jns
fwait
mov
jecxz
push
enter
imul
std
scas
orl
orps
stos
rcl
mov
imul
and
cltd
jl
jl
or
test
cmpsl
pop
call
loop
pop
sub
call
inc
push
mov
psubb
rcr
or
pop
adc
ret
outsb
test
not
ds
pop
test
cmp
stc
pop
js
out
call
cltd
shr
add
hlt
jnp
jnp
mov
in
ss
sahf
fidivs
push
movsl
mov
mov
rorb
mov
pop
and
pop
cs
push
add
cmp
cmovae
mov
lock
xchg
test
mov
jmp
mov
stos
cmp
mov
cmp
xlat
xchg
inc
sub
and
jae
pop
imul
insb
scas
loopne
push
test
or
xor
mov
fidivs
outsl
dec
lock
stos
push
dec
rolb
xor
cmpsl
push
inc
dec
lret
push
movsb
mov
ret
push
cmc
and
xchg
cmp
cs
ds
mov
xor
lds
lea
loope
nop
jnp
in
cltd
sbb
outsl
enter
lcall
loopne
add
test
mov
test
jle
add
stc
lea
jns
or
mov
js
sbb
mov
dec
sbb
mov
lahf
mov
leave
inc
imul
ret
outsb
into
icebp
sbb
scas
loop
inc
push
pop
inc
pusha
adc
in
addr16
ficoms
xchg
and
lcall
xlat
sub
mov
mov
popf
pop
adc
ds
add
pmaxub
out
ds
lret
jne
cmc
hlt
int
mov
in
push
loop
movl
push
sbb
mov
adcb
pop
insb
es
imul
movsb
and
aam
adc
push
loop
imul
pop
jge
fcmovb
stos
sbb
push
popa
pop
clc
and
sbb
pop
push
cmpsl
dec
mov
insb
sub
dec
sbb
ja
lods
out
cwtl
dec
loopne
jecxz
xchg
andl
decb
je
mov
push
sbb
lods
and
jmp
pop
jle
iret
lds
fwait
jl
std
int3
out
push
insb
popf
adc
cmp
out
sbb
jmp
adc
xchg
inc
mov
data16
adc
fisubrl
ror
and
sub
pop
add
pop
mov
mov
push
push
inc
mov
xchg
dec
out
mov
push
cmpsl
int
cmpsb
mov
mov
xchg
negb
jecxz
dec
cmp
cmp
das
aad
inc
mov
or
test
dec
icebp
in
fstpl
cmpsl
enter
mov
and
scas
icebp
jae
xor
mov
add
rolb
repnz
and
sbb
lcall
pop
rcl
jno
in
js
adc
pop
aad
push
lock
hlt
aam
pop
fldcw
js
xchg
daa
test
dec
mov
in
xchg
add
das
cmp
in
cmpsb
repz
inc
mov
cwtl
push
rolb
xchg
pushf
popa
xchg
push
sarl
mov
call
cmp
loope
fs
test
loope
icebp
test
adc
or
push
outsl
jae
push
cmp
inc
mov
xchg
mov
sti
repnz
pop
cmp
test
xchg
xchg
in
out
and
popf
rcll
mov
xor
mov
dec
in
push
nop
jns
inc
mov
jl
pop
sub
shll
jl
jno
ljmp
xchg
mov
mov
sub
mov
pop
in
mov
add
fs
inc
mov
jb
aad
pop
rcll
xorl
bnd
aas
in
jge
dec
inc
inc
popf
or
inc
iret
movsb
cmpsb
adc
sbb
out
leave
jo
jno
imul
and
dec
mov
fdivs
lods
or
sbb
cmp
xor
dec
add
dec
dec
xchg
xchg
in
scas
push
and
addr16
imul
imul
int3
mov
and
jo
sbb
sbb
fimuls
xor
mov
idivb
fsub
lea
sbb
push
push
insb
cmpsb
popa
xchg
out
std
xchg
lea
pop
sbb
cmpl
imul
jge
jno
add
sbb
imul
and
lret
dec
sub
xchg
sbb
and
mov
sub
or
xchg
loopne
mov
lahf
movsb
cmp
mov
jae
push
pop
dec
rcrb
pop
test
cmp
push
cmp
mov
sub
rolb
mov
dec
push
push
les
sub
out
dec
inc
or
test
imul
pusha
dec
jne
cltd
mov
addb
fadd
jnp
gs
mov
stc
lret
xor
mov
imulb
insb
pop
jo
or
loop
dec
xchg
popf
cs
hlt
xchg
in
shlb
mov
cmp
fiadds
rcpps
loop
jmp
imul
lods
jb
daa
push
outsb
nop/reserved
cltd
lahf
cmpsl
xor
out
stc
jb
pop
cltd
hlt
insb
in
xchg
fisttpll
mov
out
std
push
mov
mov
outsl
push
jmp
push
add
out
and
ficoms
imul
js
cmc
dec
mov
jno
xor
adc
pop
clc
mov
shrl
loopne
jmp
stc
adc
push
add
mov
inc
jb
pop
sbbb
add
pop
shr
iret
repnz
pop
mov
call
ljmp
xor
mov
jns
imul
icebp
in
adc
leave
xchg
nop
push
inc
out
sbb
or
imul
mov
js
pusha
pop
outsb
rcrl
push
hlt
dec
mov
dec
call
js
ffree
mov
js
and
add
js
rcl
push
mov
inc
lock
push
out
mov
or
cmp
pop
das
sbb
adc
sub
jne
or
insl
mov
dec
shrl
pop
cltd
inc
mov
lahf
jg
ret
loope
cmp
lret
movl
lds
nop
popa
fucom
enter
bound
pop
dec
gs
rcrl
fdivr
aaa
xchg
fisttpll
mov
rorl
cmpxchg
push
and
lods
dec
cmp
int
and
aad
scas
xchg
and
sbb
imul
cmp
cmp
cmp
cmpsb
mov
sub
cmp
shlb
and
mov
xor
loop
dec
xor
fs
pop
stos
dec
hlt
mov
loop
jl
inc
and
out
inc
push
push
divl
inc
imul
pop
sub
jne
scas
in
sar
push
jl
aas
mov
adc
mov
sub
add
inc
idivl
pop
ljmp
in
in
lock
mov
loope
pushf
bound
mov
xor
dec
lods
mov
aas
sub
xchg
sahf
add
xor
pop
adc
sbb
lret
adc
lret
movsl
lock
outsl
sbb
push
rcrb
jp
pop
xchg
and
andl
out
add
in
cs
and
ds
sub
mov
xor
addl
lret
fisttps
adc
das
hlt
add
jp
stos
inc
adc
shlb
xor
dec
test
or
inc
adc
add
sub
es
dec
add
ret
cmp
aaa
jecxz
js
pop
out
dec
sbbb
dec
int
pop
xor
and
mov
mov
push
pop
aam
push
inc
jge
dec
clc
sub
in
aad
lret
movsb
fimuls
xor
jnp
or
or
jae
adc
je
push
cs
cmp
jb,pt
mov
flds
cwtl
push
mov
out
mov
testb
mov
adc
int3
loopne
sbb
call
les
push
inc
dec
fcoml
sbb
addr16
ss
jp
dec
fxch
mov
jle
outsl
cmp
dec
loop
adcb
fiadds
outsb
mov
ret
movsb
adc
es
ja
mov
pop
shll
loopne
aad
jne
push
dec
pop
mov
and
add
lea
insl
js
fstps
pusha
lock
ret
xchg
mov
stos
xchg
push
fs
xchg
or
loopne
mov
xor
mov
dec
inc
push
cs
jbe
int3
push
ds
bound
sbb
es
or
js
fsubs
cld
jbe
sbb
test
pop
jg
lret
pop
cmp
or
rol
adc
or
pop
gs
inc
pop
jb
push
negl
call
stc
sub
pop
cli
xor
fistps
mov
mov
inc
int3
mov
cmp
xchg
ffreep
xchg
xor
or
adc
dec
jo
push
cmp
lahf
sti
xor
in
je
jne
lea
jle
xchg
xlat
bound
fimuls
mov
rcrl
xchg
sarb
scas
aam
adc
hlt
jae
mov
adc
cmpsb
iret
in
cmp
arpl
jb
neg
mov
fwait
add
int3
adc
sbb
je
int
aas
lock
xor
lcall
ljmp
test
js
lock
fisubl
movsl
xlat
jne
push
nop
mov
imul
dec
insl
imul
mov
jmp
enter
jle
pop
lods
and
push
mov
xor
out
fiadds
in
and
test
jno
lods
loopne
mov
push
push
mov
cmp
orb
lea
mov
mov
insl
jmp
pop
gs
stos
idivl
icebp
push
jbe
mov
mov
xor
hlt
xor
lock
jge
cld
mov
cmp
cltd
pop
test
sub
jle
mov
mov
pusha
lret
jg
das
fnstsw
ja
loop
xor
xchg
sti
add
xor
std
call
repnz
cmp
cltd
and
shll
jle
pop
xchg
shl
mov
sub
pop
sub
test
int3
jnp
adc
sub
out
xchg
mov
dec
cwtl
clc
add
add
xchg
cmp
leave
push
add
mov
add
cs
xchg
lcall
sti
js
repnz
add
repz
mov
push
ffreep
scas
cmp
and
fildll
jns
test
xchg
jmp
fwait
mov
enter
data16
adc
int3
and
lds
or
mov
jbe
inc
xchg
repz
cmpsb
cmp
jo
push
mov
loop
xchg
shrl
aaa
mov
or
mov
cmp
jecxz
mov
pop
mov
stos
cmp
dec
pop
das
insb
loop
jb
sbb
cmp
gs
or
xor
inc
jmp
sub
sub
pop
cmp
daa
mov
xchg
mov
cli
mov
dec
insl
push
movsb
pop
pop
push
dec
fchs
pcmpgtw
pop
or
pop
and
outsl
lods
cmp
push
add
xor
jno
in
mov
dec
lcall
adc
stos
mov
dec
push
in
pop
ss
shlb
scas
fbstp
dec
or
cmpsl
insb
or
fs
enter
rol
dec
pop
call
xlat
jge
in
dec
bound
jmp
dec
and
shrb
dec
sub
sub
pop
jg
add
sbb
idivb
clc
pushf
pop
loop
rclb
push
fstps
push
add
in
xrelease
pop
adc
push
inc
mov
into
dec
lcall
pop
mov
in
clc
dec
push
pop
or
cli
ja
jnp
push
fmul
in
stc
in
pop
push
sarl
xchg
adc
lret
repz
scas
xchg
pop
sub
bnd
jae
fiadds
jno
test
clc
sbb
sbb
scas
jmp
sbb
xor
and
inc
mov
jnp
sbb
jmp
jb
pop
or
sub
stc
mov
fisubrl
cs
aas
movswl
loope
mov
sub
shlb
movsb
repnz
ljmp
dec
add
gs
push
dec
add
shl
mov
push
test
push
test
add
pop
pusha
pushf
xor
adc
stos
pusha
adc
push
sub
jg
cld
adc
mov
add
icebp
mov
arpl
jno
jo
cltd
roll
sub
sahf
cmpb
test
jle
cs
jo
lds
lock
mov
fs
lcall
clc
leave
test
ret
mov
and
sub
push
rclb
cmc
add
shll
aad
rcl
xor
mov
clc
push
pop
push
popf
ljmp
xchg
cmpsb
and
jecxz
iret
inc
xor
notb
sti
cltd
adc
cmp
add
xor
xorb
ret
or
lret
aas
add
movsl
cmp
adc
in
stos
out
xor
lock
adc
push
in
cmp
xchg
xchg
pushf
das
pop
or
add
dec
mov
out
movl
les
jb
nop
pusha
das
jmp
jae
mov
out
int3
sbb
shll
sbb
xchg
dec
lea
nop
sbb
jge
call
or
cmp
sbb
add
sub
mov
aaa
push
icebp
xchg
and
sub
mov
xlat
dec
js
mov
xor
mov
mov
fstp
and
sub
jmp
out
mov
dec
pop
sbb
push
or
outsl
mov
mov
aam
push
xorb
int
std
mov
xlat
push
fs
pusha
pusha
jb
daa
in
fnstcw
shll
cltd
push
mov
sub
pop
data16
ret
ja
fldenv
test
mov
stos
jmp
test
sub
stos
xor
rorl
push
xor
adc
shlb
mov
loopne
je
mov
fidivrs
cmp
push
or
cltd
pop
gs
hlt
es
bound
xchg
scas
cmp
mov
sbb
push
mov
mov
aad
mov
pushl
cmpb
sub
mov
mov
push
pop
push
test
cmc
mov
mov
dec
xchg
jmp
add
push
dec
ds
add
cld
xchg
call
daa
arpl
out
dec
sub
js
stos
lock
mov
xchg
jle
scas
lret
lret
aam
imul
aad
mov
mov
mov
dec
cli
aas
aas
lahf
pop
test
cmp
xchg
inc
into
xlat
inc
cltd
jecxz
inc
loope
push
repz
add
sub
pop
adc
jo
addr16
cmpsl
sahf
xchg
in
jge
adc
mov
mov
mov
popf
sbb
seta
hlt
mov
aad
jl
cmp
add
into
fistl
or
aam
test
cs
scas
xchg
pop
clc
dec
mov
icebp
cmpsl
push
dec
mov
notb
cmp
sub
mov
sbb
sbb
pop
jae
cmp
sub
mov
dec
pushf
cmp
xor
into
stos
mov
cmp
ret
inc
inc
cwtl
ss
negl
jno
sbb
mov
and
xadd
push
add
wbinvd
movsb
dec
mov
jbe
mov
imul
fimuls
movsb
mov
popf
adc
loope
iret
jbe
test
xchg
xchg
push
loopne
mov
sahf
and
sbb
sbb
xchg
loopne
iret
ja
jbe
scas
sbb
iret
jo
ret
lret
rep
sahf
mov
mov
and
inc
mov
sti
in
xchg
or
and
inc
inc
pop
das
mov
adc
mov
mov
xor
cltd
inc
les
pop
enter
and
test
cmp
lret
jnp
mov
mov
lds
dec
lret
and
jo
sbb
mov
adc
imul
mov
mov
jne
loopne
push
fldt
jmp
sahf
movb
gs
cmp
xchg
insl
sub
hlt
sahf
and
ja
adc
sub
fld
mov
mov
stc
sbb
lods
push
push
xchg
loope
adc
aaa
insl
mov
es
jnp
mov
mov
arpl
test
mov
rcrb
mov
aam
imul
test
dec
pusha
das
insb
iret
lcall
clc
mov
mov
lcall
ret
movsb
addr16
stc
and
mov
pop
xchg
cmc
test
and
negl
repz
sarl
or
cld
cld
jle
xchg
or
inc
pop
cmp
std
mov
fwait
cmpsb
inc
mov
repz
test
mov
sbbb
imul
cmp
lods
push
les
movsb
dec
dec
gs
std
pop
pusha
daa
dec
lock
lret
insb
xor
jns
aad
sbb
sarb
call
add
push
cmp
or
mov
mov
dec
int
out
sbb
sbb
jns
test
lret
outsl
sbb
jne
nop
mov
or
pop
cmp
into
sbb
subl
ljmp
repnz
cmpsl
loopne
add
lret
mov
cmp
adc
xchg
popf
cwtl
lea
mov
loop
dec
icebp
pop
icebp
stos
cmpsl
ret
mov
aas
adc
push
pop
in
sub
jp
and
mov
jecxz
sarl
adc
jb
lea
mov
sub
fisttps
fstps
or
aas
movsl
imul
outsb
pop
jnp
mov
inc
mov
mov
fwait
popf
pop
sbb
xchg
fiaddl
lahf
mov
inc
andb
add
cmp
lret
jl
jp
imul
aas
dec
xchg
mov
into
cmp
adc
or
bound
loop
in
cmc
push
daa
cmp
fdivrl
jmp
xor
cmp
into
insb
cli
movsl
mov
out
icebp
xor
imul
or
cmp
add
jmp
mov
pop
xchg
in
jle
addr16
sbb
mov
adc
mov
mov
imul
in
jmp
stc
jg
shll
aaa
mov
adc
fwait
mov
fbld
xchg
sbbl
and
imul
and
jae
jae
fidivl
dec
push
mov
loopne
xor
jnp
bound
adc
addr16
jp
adc
add
cmc
jne
sub
rcl
xorl
mov
push
inc
sahf
sub
inc
jb
pop
inc
addr16
cmc
out
sarb
lret
ds
addr16
je
fisubrs
sub
insl
int3
int
push
clc
push
mov
out
sbb
cmc
xor
clc
pop
test
xor
mov
cmp
sub
push
add
enter
imul
jo
mov
add
xchg
in
jo
mov
cltd
je
inc
dec
lret
decb
push
lods
out
ret
ds
pop
les
and
outsl
sbb
mov
aas
iret
adc
test
enter
adc
jg
push
cmp
lea
out
mov
inc
cmp
das
imul
xchg
nop
fyl2xp1
pop
outsl
test
xchg
mov
dec
fnstenv
dec
scas
in
mov
jmp
imul
fisttpl
pop
mov
push
xchg
fwait
aaa
and
inc
mov
add
inc
jno
mov
into
push
in
sahf
bound
fists
test
loop
out
gs
dec
mov
ljmp
push
and
scas
xchg
jg
stos
push
sub
pop
mov
cwtl
add
and
xor
push
cmc
or
pop
out
lret
scas
loopne
add
cmp
ds
dec
dec
push
pop
adc
lds
mov
pop
enter
test
sti
fcmovne
lds
mov
cmp
lock
xor
pop
mov
sbb
sbbl
mov
jg
arpl
add
sub
adc
xchg
dec
lods
insb
jecxz
add
dec
mov
adc
pop
decl
ret
aam
or
mov
hlt
insl
fadds
cmp
out
push
out
pop
loop
je
leave
insl
fcmovnbe
push
test
js
fildll
into
test
mov
mov
in
sub
jno
jnp
dec
dec
enter
jns
lcall
pop
psrld
cmp
pop
xchg
or
jne
les
fsub
sbb
fistl
push
fbstp
cmp
imul
inc
push
ja
push
mov
loopne
stos
in
sbb
sbb
into
dec
pop
or
mov
and
jno
inc
cltd
jmp
daa
cmp
ret
andb
mov
mov
push
push
or
xchg
sbbb
push
cmp
dec
aam
inc
ret
or
xchg
ret
dec
push
xchg
add
cmpb
fidivl
adc
adc
xor
xor
mov
stos
xchg
rclb
fsubrl
ss
jb
inc
inc
repnz
or
sbb
aam
lods
outsl
ret
aas
push
pusha
sbb
test
clc
jle
fwait
lock
and
push
or
in
lock
mov
ljmp
negl
ljmp
and
lahf
mov
pushf
xor
sbb
jb
popa
sub
add
mov
mull
stc
mov
mov
in
push
in
push
xchg
int3
mov
lahf
jbe
add
fdiv
jecxz
pushf
and
leave
rolb
xchg
jae
imul
xrelease
fsub
inc
in
in
out
cmp
xchg
addb
xor
or
or
push
mov
dec
mov
cmp
leave
and
cmpsl
movsl
int
xchg
push
imul
arpl
int
sarb
sahf
out
inc
lcall
push
dec
inc
jns
cmp
shrl
adc
mov
push
xor
mov
mov
jb
fscale
xchg
lahf
iret
mov
fistpl
jno
mov
dec
lds
cmpsl
into
inc
push
testb
adc
std
out
jae
test
mov
mov
dec
cmp
pop
mov
xchg
push
cld
inc
cmp
out
pop
inc
sahf
mov
in
movsb
or
sbb
hlt
movsb
push
xor
mov
or
xor
adc
inc
mov
shlb
inc
mov
cmpsb
nop
xchg
fisubl
scas
sahf
aad
aas
addr16
jl
pop
and
cmc
and
add
xchg
icebp
test
add
das
cmp
stos
stc
in
daa
je
stc
sar
add
dec
or
in
sub
cltd
and
dec
les
sbb
push
es
lods
jmp
inc
cs
push
pop
in
sub
xlat
int
aas
fnstsw
sbb
xor
xor
and
adc
fiadds
cmp
sbb
js
imul
je
xor
mov
sub
scas
les
inc
inc
ficoms
notl
test
loope
sub
sub
xchg
mov
cmovs
push
movsl
fimuls
inc
jns
dec
adc
test
aam
test
dec
mov
jmp
cmp
or
out
mov
adc
inc
leave
imul
sub
xor
mov
sub
dec
inc
fldenv
mov
insl
lock
negl
icebp
popa
aaa
mov
xor
movsl
inc
iret
and
xchg
loopne
push
ds
cli
in
add
push
jns
lret
mov
mov
test
cmp
fisttps
repz
jmp
sub
jb
add
stc
jmp
xchg
inc
mov
fsubp
jb
mov
mov
push
sub
jns
jge
rcrl
lock
js
loop
dec
fnstsw
and
test
adc
push
inc
lahf
les
cwtl
bound
mov
pop
jle
loopne
pusha
aam
inc
inc
lods
pop
jbe
scas
mov
frstor
dec
add
fs
sbb
insb
loop
cmp
aam
xor
mov
adc
cld
add
jo
leave
cmp
mov
clc
test
stc
sub
xor
mull
or
dec
xchg
mov
dec
aad
cld
xor
push
mov
repz
jecxz
mov
sub
xor
sub
fldl
adc
int
test
outsl
push
push
ljmp
enter
inc
jno
gs
push
push
cmp
adc
outsb
into
mov
test
test
out
notw
jge,pt
frstor
and
bnd
mov
aaa
mov
cmp
add
push
pop
sahf
xchg
add
or
inc
imul
mov
or
mov
pop
dec
mov
cmp
scas
test
add
inc
pop
enter
xchg
fstps
lds
call
or
jbe
adc
test
push
jmp
cmc
mov
add
sbbb
xchg
mov
in
add
shrl
insl
xchg
xor
lcall
mov
fwait
pop
movsl
aas
pop
mov
movsb
into
out
mov
ja
mov
pop
and
cmp
cmp
cmp
push
lahf
clc
mov
arpl
jae
repz
dec
push
push
jo
mov
sub
aad
xor
lahf
into
pusha
mov
pop
dec
jge
cmp
push
jb
xor
fwait
mov
fisttpll
dec
jne
icebp
popf
jmp
pop
inc
ds
mov
push
and
inc
fcompl
loope
out
insb
and
es
mov
int
mov
or
sbb
ret
add
inc
sbb
mull
popa
add
dec
outsl
add
adc
mov
scas
add
mov
leave
scas
sbb
mov
mov
test
icebp
xor
fcompl
sbb
adc
test
dec
bound
or
popf
jp
jp
mov
jae
mov
pusha
cmp
cltd
cmp
cs
or
int3
popf
pop
push
enter
mov
idivb
roll
cld
inc
shrl
jecxz
adc
push
int
arpl
xchg
sahf
imul
cmp
sub
jb
mov
or
inc
or
int3
push
fdivl
lret
mov
dec
sti
inc
jp
push
xor
movsb
xchg
call
xchg
and
push
adcb
xchg
mov
xchg
pop
jl
lock
shr
test
push
dec
hlt
ja
add
lods
in
xchg
lret
jle
push
test
sbb
std
mov
and
pop
js
push
popf
jmp
sbbl
repz
jp
aam
psadbw
bound
push
js
test
jl
dec
mov
cmp
mov
sub
cmp
or
shl
jb
mov
mov
mov
sub
mov
cld
cmp
lock
lahf
adc
test
mov
icebp
test
mov
sbb
pusha
sar
lea
sbb
cli
mov
repz
lahf
and
fs
push
add
push
into
mov
add
mov
cs
add
pop
out
scas
mov
add
addr16
aas
lret
mov
sbb
fnstcw
mov
test
ret
das
sbb
scas
cmpsb
ds
jge
pop
out
mov
das
dec
push
subl
and
ret
addr16
sbb
pop
push
xor
pop
out
mov
dec
repz
loopne
cmpsb
jl
mov
sarl
hlt
ret
rclb
movsb
xlat
jns
lds
mov
jp
int3
sti
push
add
and
xor
add
sub
push
dec
sarl
sbb
sub
jecxz
mov
mov
andb
jb
jecxz
dec
gs
adc
pop
push
cmpsb
push
mov
jle
inc
lret
es
addr16
xchg
andl
add
mov
fcoml
pop
sub
jb
push
xor
mov
cld
ljmp
mov
jge
aas
pop
ret
sti
ficompl
sub
incl
sahf
or
ljmp
push
push
out
sub
dec
sahf
fiaddl
dec
bound
mov
jnp
inc
push
xor
jmp
test
leave
or
push
test
outsl
shl
xchg
jge
mov
sbb
add
push
ds
fs
clc
fdivs
test
into
or
push
pop
pop
jb
out
xchg
sbb
mov
mov
xchg
inc
inc
sbb
inc
dec
xor
test
pop
sub
clc
mov
pop
jge
ret
mov
enter
cld
pop
repz
cli
lret
out
xor
sbb
je
jl
mov
cmpsb
or
mov
inc
cmpsb
dec
jmp
cmp
mov
lret
mov
adc
pop
stos
cmp
jbe
push
sahf
insl
push
mov
mov
outsl
jb
fsubrs
stos
mov
maxps
sbb
cmp
std
fcomps
out
xor
cld
inc
shlw
dec
xchg
mov
pop
aas
sahf
pop
push
enter
lds
lret
mov
sub
mov
ficomps
pushf
rol
dec
xor
pop
inc
or
mov
loopne
js
mov
das
push
es
jno
add
imul
cmp
inc
ret
cli
inc
pop
sbb
repnz
loop
rclb
inc
pop
xchg
bound
xor
pop
jg
loop
xor
orb
xchg
cmc
and
fsubs
into
pop
lods
dec
ds
push
loop
xor
iret
ja
es
inc
cmp
xchg
mov
cmp
fwait
jno
mov
lcall
movsl
jae
mov
cmc
sub
scas
testl
and
mov
push
gs
js
adc
sbb
or
stos
dec
xor
push
mov
mov
xchg
jmp
fbstp
shll
rorb
ja
lea
nop
sbb
xchg
fcoml
mov
out
jle
fwait
inc
xor
xor
dec
inc
loope
sub
aam
pop
pop
mov
push
stos
mov
sub
mov
mov
aaa
sub
and
dec
push
iret
push
lret
mov
inc
test
loop
inc
push
lea
pop
mov
cli
jg
xor
divl
imul
or
inc
cmc
ror
ror
xorl
jbe
repz
in
add
loope
cmp
mov
in
lcall
imul
dec
mov
push
js
push
and
dec
pop
cmpsb
jno
test
sar
movb
xchg
add
xor
push
lahf
sti
daa
push
lcall
loop
lret
shll
push
addr16
push
jbe
dec
push
js
pop
aad
shrl
adc
in
mov
test
mov
adc
inc
adc
js
negb
insl
inc
sub
dec
cmc
or
jecxz
addl
inc
call
lock
xchg
scas
pop
push
fisttpl
pop
icebp
sub
dec
cwtl
mov
cmp
insb
sub
cmp
mov
mov
shl
mov
mov
push
xor
jno
je
xor
push
pusha
push
test
aas
xchg
lret
cld
in
or
test
mov
inc
xor
daa
js
and
mov
stc
out
pop
and
cmp
dec
cmp
jg,pt
cmpsl
lret
pop
test
lock
ret
dec
aam
mov
xchg
and
pop
outsl
or
cmp
pop
andb
xchg
fdivrp
xor
xor
ret
push
ljmp
cmp
inc
dec
xchg
fsubrl
aad
mov
jp
rcrb
mov
adc
push
mov
mov
fcmovnbe
das
xchg
xor
aam
add
push
inc
cmp
adc
xchg
push
fcompl
add
enter
mov
mov
xchg
mov
pusha
enter
mov
lret
rcll
or
xor
adc
dec
cmpsb
xchg
mov
and
sbb
xchg
cmp
lods
add
fldenv
cmp
stc
inc
xchg
popa
aas
jnp
jno
adc
mov
mov
clc
xchg
ret
sbb
out
mov
cmp
ret
xchg
adc
cmp
aam
jp
fiaddl
lcall
sbb
sbb
sarb
mov
iret
popa
adc
adc
aad
js
or
dec
xor
mov
pop
pop
shll
fmuls
add
jmp
adc
and
movsl
stc
jle
xchg
xchg
iret
shl
mov
mov
xor
decl
mov
xchg
jb
arpl
ret
shlb
push
pop
lods
push
adc
jge
jmp
add
sbb
jns
stc
and
adc
xor
adc
dec
inc
enter
outsb
push
push
loopew
cmp
xchg
push
out
dec
push
or
lcall
push
cld
ror
icebp
out
add
adc
mov
or
aas
pop
adc
dec
jecxz
push
mov
dec
fmull
pop
arpl
decl
mov
hlt
repnz
rclb
add
lgs
mov
rcl
mov
cmpb
pcmpgtb
add
cmp
in
or
inc
xchg
fstps
je
daa
adc
loop
inc
jmp
aaa
lahf
mov
out
stos
lea
fs
es
test
mov
jbe
fdivr
ss
sbb
stos
and
mov
dec
xchg
mov
and
jecxz
lock
negl
jmp
add
repz
or
stc
sbb
push
mov
mov
sahf
lds
pop
push
inc
loope
dec
push
dec
push
sbb
adc
lds
adcb
idivb
mov
xor
sbb
insb
sbb
int
sarb
cli
pop
mov
shl
pushf
cmp
xchg
push
jbe
scas
inc
jp
ret
adc
lcall
ret
js
rcrb
lret
push
push
lcall
dec
in
aam
push
pop
movsl
fimuls
push
fsts
cli
jae
mov
mov
jb
stos
xor
ret
sbb
lahf
xor
popa
imul
jge
mov
adc
repnz
sbb
dec
into
outsb
inc
push
cmp
xor
mov
out
out
pop
pop
mov
sbb
and
fiaddl
bound
out
ljmp
dec
in
stos
aaa
add
jnp
in
in
adc
mov
mov
add
inc
mov
test
jle
xchg
repnz
jne
ffreep
in
push
pop
imul
je
adc
adc
test
jbe
rorl
add
dec
aas
jne
cmp
das
addr16
lds
jae
inc
or
ss
xchg
xchg
fadds
cltd
sbb
pop
std
test
xor
pop
sti
mov
mov
out
jge
xchg
or
mov
cltd
cmp
andl
nop
dec
andb
cmpsb
int
sti
push
xor
sarl
test
inc
mov
sub
out
push
shlb
gs
test
js
pusha
xor
loope
sbb
mov
fisttpll
mov
mov
push
mulb
pop
or
pop
push
mov
push
or
add
test
lahf
repz
jle
push
sbb
loopne
lahf
sub
mov
scas
int
xor
cli
mov
stos
stos
push
lahf
cmc
xorl
mov
pushf
aam
enter
shr
aas
mov
js
jns
sub
enter
or
insl
pop
data16
pop
fcmovb
mov
movsl
push
dec
lahf
xchg
les
gs
inc
sub
stos
fisubrs
lahf
sbb
xchg
inc
lods
and
inc
out
hlt
cmp
sahf
inc
or
enter
das
movsl
imul
add
or
lods
mov
inc
or
xchg
cmp
je
mov
pop
lcall
xor
and
xchg
add
loope
clc
jecxz
and
or
repz
in
push
dec
add
add
in
dec
dec
jmp
lea
mov
and
insl
out
mov
mov
frstor
add
out
clc
push
sub
fstpl
sub
push
push
cltd
dec
in
int
fdivrl
and
mov
clc
aam
push
in
rcr
sub
adc
inc
stos
movsl
mov
xchg
xchg
pop
push
jns
lds
sub
pusha
in
inc
hlt
sub
cld
pop
stc
test
lds
ror
stos
pop
ret
sub
vhsubpd
add
fnsave
fmul
popf
fiaddl
jge
xchg
dec
cmp
sub
sti
mov
xchg
ljmp
sbb
adc
sub
int3
lret
sbb
cltd
cmp
mov
and
idivl
mov
xor
xor
sbb
sbb
and
and
jbe
out
mov
push
sahf
and
int3
xchg
add
fwait
adc
push
pop
mov
push
sub
out
int3
push
sbb
out
loope
loopne
es
testl
inc
sub
sbb
fwait
ret
pop
fucom
icebp
in
arpl
push
test
or
gs
das
subb
fildll
pop
jns
lock
or
mov
pop
in
fstps
arpl
mov
icebp
repz
scas
cmp
push
stc
jp
adc
or
mov
shl
pop
sti
xor
mov
xchg
sbb
cwtl
pop
fwait
rcl
push
rorl
in
cwtl
mov
dec
rclb
or
cltd
icebp
sub
pop
cli
xchg
mov
pop
sub
out
jne
mov
xchg
mul
cld
sbb
and
stos
adc
popa
inc
fstl
sbb
daa
mov
test
add
mov
dec
jns
xchg
jmp
stc
pop
int3
dec
loope
mov
sbb
sub
or
arpl
sbb
xchg
out
bound
loopne
std
pop
lods
in
mov
jmp
pop
fsubs
imul
bound
inc
call
dec
dec
mov
gs
enter
in
dec
loope
pop
pop
mov
inc
outsl
push
ja
iret
adc
call
push
js
mov
push
inc
mov
cs
dec
xor
sub
pop
jl
pop
clc
sub
sub
out
ljmp
daa
fistpl
ror
dec
add
adc
and
cmpb
xchg
cs
pop
mov
je
je
fsts
sub
cmp
jp
mov
sarl
jmp
jecxz
dec
mov
mov
icebp
push
xchg
mov
test
punpcklbw
dec
rcl
mov
dec
xor
adc
test
pop
add
dec
js
sub
shrb
push
sub
cmp
add
inc
repnz
cwtl
fists
dec
lea
push
ljmp
andb
scas
aam
mov
inc
bound
inc
bound
lock
repnz
shl
jno
jbe
fstps
negb
loope
fldl
test
xlat
int3
popf
add
sub
cmp
call
into
jb
daa
pop
dec
dec
xor
mov
movsl
jg
in
xlat
push
into
iret
inc
add
mov
cs
mov
dec
dec
jmp
insl
dec
pushl
push
aad
jp
mov
out
jg
data16
inc
or
mov
fistpll
mov
out
loopne
addr16
loopne
xchg
shrb
or
mov
add
dec
mov
imul
popf
inc
mov
xchg
xchg
dec
enter
test
mov
push
ret
outsb
mov
in
push
stos
insl
mov
cs
les
or
push
add
icebp
enter
push
lods
stc
cli
xor
subb
movsb
jle
ds
xchg
scas
dec
mov
clc
loope
cmc
in
mov
pop
and
sbb
xchg
mov
adc
stos
aam
pusha
int3
pop
add
jmp
sbb
jne
xor
push
ds
jp
add
jns
rcl
push
cmpsb
fidivrs
out
lret
sub
sbb
rorb
ss
or
pop
shrb
out
in
stos
hlt
push
mov
outsb
sbb
push
into
leave
mov
imul
fstps
sbb
movsb
mov
add
sahf
jge
shlb
rorb
pusha
cpuid
lds
xchg
sub
ja
push
fwait
adc
sub
and
pop
lcall
cmp
adc
icebp
test
push
xchg
add
cld
shlb
jmp
jle
stos
push
cwtl
mov
dec
and
repnz
sahf
inc
repz
xchg
mov
cmpb
stc
cs
jg,pn
jle
imul
push
jne
mov
test
outsl
mov
in
daa
repz
dec
sub
nop
insl
adc
arpl
inc
movsb
push
sbb
pop
or
cmp
sub
and
sub
shlb
add
aam
enter
popf
cmp
dec
movsb
loop
xchg
out
mov
out
int
cmpsb
push
lcall
fucom
add
push
push
or
popa
cmp
dec
xchg
lret
push
push
dec
imul
inc
or
sti
loopne
mov
stos
rclb
sar
mov
inc
mov
aam
div
or
arpl
push
jb
jl
cmp
out
fisubs
in
jecxz
push
and
adc
mov
pop
sbbb
pop
sbb
cs
add
cmp
fistpl
call
mov
nop
mov
sub
push
fsubrs
js
push
cltd
dec
push
add
cmpsb
cs
lea
mov
or
mov
mov
mov
enter
sbbl
nop
xor
xchg
jecxz
sbb
aad
in
loopne
adc
inc
mov
pop
notl
dec
sub
cmpsb
push
mov
jne
leave
cmp
gs
ss
pop
dec
adc
int3
lods
mov
pop
mov
xor
or
bound
or
sahf
rcrl
mov
or
jmp
sbb
js
pop
xchg
inc
jne
rcrl
aaa
cmp
adc
sbb
xchg
std
loope
ds
jo
dec
aas
push
push
bnd
xchg
mov
adc
sti
out
cltd
fstpl
push
mov
jle
pop
pop
adc
mov
add
adc
je
xor
imul
xor
adc
mov
push
stos
jns
pop
leave
loope
fcomps
xchg
in
lea
inc
cwtl
adc
popa
stos
and
add
fdivr
sarb
xchg
cmpb
lods
repz
mov
adc
push
push
imul
xor
mov
xor
and
leave
rclb
pushf
push
in
cmp
adcl
jge
mov
mov
or
inc
mov
mov
cmp
sbb
sub
ret
xor
and
and
xchg
enter
pushf
movsb
jl
stos
sub
scas
inc
int
jg
scas
push
jne
jge
and
clts
push
je
fsubl
sub
push
lahf
sbb
ss
pop
ss
scas
pop
in
mov
test
repnz
pop
adc
test
inc
test
mov
push
xchg
mov
into
stos
jnp
sbb
cmpsb
add
insl
and
loopne
push
loope
dec
cmp
and
fadd
xor
inc
insb
loopne
mov
dec
scas
jnp
jge
sbb
push
xlat
or
rcrl
xchg
enter
std
or
imul
dec
mov
es
cmp
movsl
aam
jmp
cmp
mov
or
cwtl
mov
mov
pusha
int
mov
out
notl
stos
subl
mov
pop
mov
stc
xor
xchg
clc
dec
sbb
aas
cmp
subl
or
test
int3
xchg
dec
in
mov
adc
mov
movsb
jne
push
loop
cld
lock
cwtl
dec
scas
test
xchg
into
pop
in
dec
rcrb
xchg
outsb
not
cmp
xchg
ja
leave
loopne
xchg
add
xor
stos
push
cmc
adc
cmp
aam
mov
in
inc
push
push
sbb
daa
daa
mov
daa
mov
ja
subl
sahf
fisttpl
fcmovne
aaa
test
adc
sub
shrb
fildl
sub
fnsave
xlat
das
mov
xchg
or
pop
cmc
adc
fistpll
aam
jecxz
jnp
dec
or
cmp
jbe
mov
cmpsl
pop
int3
mov
lods
dec
inc
or
inc
jns
std
sub
xchg
mov
mov
jae
or
rol
sub
ret
sbb
std
push
or
lea
cmp
cltd
rcrb
scas
jne
xchg
cmpsl
clc
mov
and
inc
mov
add
add
scas
adc
popa
push
xor
sahf
mov
or
into
mov
inc
lret
xchg
rcl
ds
mov
xchg
inc
repnz
call
popa
mov
ss
popa
rcll
adc
sti
push
pop
lahf
jno
testl
setg
into
call
stos
mov
mov
test
cmp
dec
call
test
push
add
aam
push
test
pusha
cmp
cld
movsb
mov
mov
test
xchg
lods
movsl
dec
fs
stc
mov
je
imul
sbb
popa
pop
jo
jb
jb
adc
pusha
mov
es
push
pop
xor
movb
xchg
inc
push
cmp
lcall
fidivl
adcb
or
xchg
push
into
shl
lods
pop
cmp
and
scas
lcall
ljmp
and
jmp
cmp
fildll
push
lret
sub
hlt
and
adc
xchg
push
jnp
aas
push
mov
hlt
aam
mov
mov
bound
pop
sti
jmp
in
or
add
pusha
mov
ret
add
enter
dec
pop
outsl
cmc
push
cs
mov
jmp
xor
loop
sbb
imul
inc
add
stos
mov
fidivs
inc
sysret
jae
add
xchg
scas
lock
adc
aaa
dec
das
adc
jg
scas
stc
rorb
aaa
xchg
xor
cmpsb
lahf
pop
sbb
mov
out
push
mov
out
push
push
mov
test
pop
push
aad
repz
jge
popa
jno
push
pop
or
adc
insb
mov
cmpb
xchg
mov
mov
push
movsb
repnz
pushf
push
pop
popf
sbb
jg
cmpsb
mov
sub
push
cwtl
xlat
sub
daa
fs
cmp
out
outsb
sub
cmpsb
push
clc
loopne
pop
sahf
imul
insl
add
mov
and
dec
addl
push
daa
jl
inc
test
test
icebp
jb
popa
inc
push
or
adc
push
dec
mov
jb
loop
enter
rcrl
loopne
call
adc
nop
xlat
ret
adc
adcb
dec
test
ficoms
scas
mov
cltd
call
fnsave
mov
popa
adc
push
add
rol
stos
leave
mov
or
imul
test
pop
xor
fistpl
inc
shlb
push
jns
xchg
sub
lea
mov
dec
sbb
sahf
incl
gs
mov
test
inc
idivl
mov
and
push
loope
lcall
cmc
sti
popl
rol
push
mov
push
sbb
dec
in
sbb
add
popa
sbb
inc
jo
sbb
inc
sahf
test
mov
xlat
inc
or
pop
push
dec
jno
aam
and
frstor
and
push
xor
mov
jno
mov
mov
dec
adc
xchg
dec
lods
inc
in
mov
gs
mov
scas
les
dec
lods
push
pop
jg
dec
hlt
loop
push
push
daa
xlat
or
clc
and
dec
add
jecxz
iret
mov
pop
push
popa
lcall
insb
push
or
scas
call
sub
sbbb
mov
call
in
pusha
sahf
xchg
clc
and
test
or
mov
xchg
lods
push
cltd
clc
jne
repz
and
jnp
nop
adc
mov
sub
out
push
jge
sbb
adcb
sub
stos
pop
xchg
adc
imul
int3
mov
pusha
inc
sub
sub
mov
in
dec
addl
pop
mov
push
into
ret
das
or
sub
sti
es
cmp
in
or
mov
sbb
jge
sbb
scas
adc
pop
mov
mov
sub
mov
mov
and
pop
adc
clc
adc
mov
xlat
aad
jecxz
xor
inc
scas
fwait
xchg
dec
loop
shll
ror
sbb
test
mov
xchg
sub
jle
cmpsl
mov
add
sub
nop
mov
pop
movsb
mov
add
cld
bound
rolb
mov
mov
xchg
mov
mov
mov
mov
cs
adc
int
cmp
loop
sbb
add
orb
inc
or
and
pop
xchg
lods
and
icebp
mov
cmp
sbb
pop
mov
clc
sbb
aas
incb
push
scas
in
in
dec
jmp
cmp
cmp
inc
pop
icebp
int3
add
ret
sub
test
addr16
scas
in
aam
outsb
insb
and
or
adc
rolb
addb
pop
and
inc
fwait
hlt
mov
dec
add
jns
jnp
insb
subl
movsb
cmp
fcoml
stos
rcrl
call
inc
cmp
inc
or
sbb
jg
fstps
pop
lock
sbb
std
push
pop
jl
cmc
xchg
andb
out
aaa
dec
lock
inc
subb
hlt
adc
nop
ret
mov
ss
mov
je
push
cld
inc
pop
movsb
push
pushf
mov
mov
dec
mull
jge
jmp
orl
mov
add
cs
ljmp
sbb
mov
lea
inc
rolb
xlat
call
data16
nop
jb
das
adc
sub
or
mov
mov
sbb
hlt
xchg
test
idiv
std
push
test
push
in
xchg
mov
dec
lret
ret
push
and
inc
jle
aaa
in
or
push
cs
cmp
inc
ss
sbb
inc
leave
jnp
popa
push
adc
lcall
xor
sub
pop
jne
insl
orb
lea
ss
add
add
dec
inc
sahf
movsb
repnz
dec
xchg
xchg
int
mov
inc
ret
jo
inc
fstl
lcall
or
jg
icebp
scas
cmp
ret
in
xor
ja
repz
jbe
xor
popa
daa
sub
mov
inc
xchg
int
or
arpl
adcb
mov
addr16
add
pop
mov
cld
hlt
or
fmuls
xchg
adc
sbbb
int
bound
lock
gs
xlat
pop
aad
es
out
ret
divb
daa
xchg
mov
movsl
mov
pop
shl
jge
cmp
insl
and
add
das
cmp
mov
fistps
inc
mov
or
loopne
cmp
gs
lea
adc
push
jb
xchg
lock
pop
int3
inc
pop
mov
sub
inc
add
xlat
jp
jno
mov
cli
inc
sbb
repnz
mov
insb
inc
push
outsb
out
xchg
mov
nop
mov
sbb
addr16
test
int3
mov
adc
cltd
cmpsb
ret
out
mov
lahf
cmpsb
outsb
loopne
xchg
xchg
andb
jne
pop
sbb
push
pop
fdivs
enter
push
jns
cli
aaa
clc
adc
unpckhps
or
sub
and
cs
or
subb
cmc
in
or
and
movaps
xchg
sti
jno
dec
std
shll
iret
adc
rcrl
lods
in
mov
aad
test
add
pop
push
cmp
pop
sub
inc
push
jbe
xchg
pop
jne
sbb
mov
add
inc
adc
sub
and
in
aas
xlat
adc
mov
push
lock
repnz
in
mov
xchg
call
bnd
lret
lea
add
or
or
pop
mov
jb
shl
mov
mov
push
and
add
jp
fdivr
loopne
pop
clc
or
dec
cmp
sbb
mov
adc
incl
lcall
dec
insl
fdivrs
mov
pop
jb
or
inc
add
inc
xor
xchg
push
popa
addr16
sub
test
shll
mov
jl
pop
mov
movsl
xchg
pop
les
iret
inc
xor
dec
mov
pushf
popf
imul
lahf
cld
aas
push
test
xchg
jno
jecxz
cmp
ja
or
out
xadd
andl
fcoms
add
jle
mov
and
push
xchg
loopne
jae
aam
outsb
jne
mov
pushf
mov
aad
shl
jmp
aas
cmp
jne
adc
push
call
mov
int3
jl
stos
pop
ret
fucomp
lea
lcall
cmp
mov
dec
cld
cmpb
and
mov
mov
scas
int
ret
ds
mov
dec
sbb
fs
das
xchg
test
mov
out
cwtl
cmpsb
outsl
sbb
sub
bound
sub
int3
repz
mov
fsubrl
repz
cs
rorb
jge
lret
cmpsb
dec
lret
shlb
hlt
jo
xchg
out
cmp
push
aam
push
ds
cwtl
inc
jno
inc
in
dec
mov
xchg
stos
ffreep
add
mov
push
dec
dec
rcrl
das
lret
in
in
lods
xchg
stc
clc
mov
iret
nop
sub
lret
ds
cmp
jnp
inc
push
aas
enter
sbb
ret
cld
inc
add
xor
dec
pop
sbb
sbb
stos
cmp
mov
testb
out
push
mov
pop
adc
pop
in
pop
or
fs
out
sarl
cs
cld
xlat
shr
xor
in
lods
fldt
sbb
imul
jmp
and
test
or
insb
popa
sahf
lods
shrl
out
cmp
sub
jo
mov
popa
or
push
mov
clc
add
or
jb
jp
xor
cmpsb
add
jmp
mov
jae
sbbb
adc
adc
mov
addr16
icebp
adc
fists
scas
push
jmp
add
push
aad
and
mov
jle
pop
mov
sub
imul
mov
pop
xchg
into
fstpt
add
in
xchg
orb
mov
call
adc
dec
std
fwait
lods
mov
popf
addr16
leave
imul
mov
mov
add
jnp
mov
scas
push
push
push
cmp
pop
cmp
mov
add
jge
mov
push
roll
mov
icebp
dec
sbb
inc
add
pop
ja
xchg
in
cltd
mov
jl
adc
enter
or
jcxz
mov
cmp
jmp
sbb
dec
mov
adc
or
dec
sub
in
hlt
in
xchg
jnp
outsl
pop
leave
xor
inc
call
push
fdivr
leave
or
and
adc
lcall
inc
pop
fcmovne
lret
out
xchg
and
inc
iret
push
loop
adc
mov
ret
das
cmpsb
mov
xchg
dec
fiadds
call
add
js
call
fcmovnb
subps
push
imul
mov
xlat
xchg
insb
ljmp
or
mov
ret
rcr
fisubs
sbb
in
inc
pushf
aad
mov
fildl
mov
stos
xor
call
add
je
mov
fwait
adc
gs
xor
mov
cmp
lret
xor
stos
out
movsl
call
inc
cmp
imul
gs
sarl
adc
cmpsb
fwait
push
out
loopne
mov
sub
pop
mov
aad
add
lret
pop
inc
nop
rclb
adc
in
icebp
fcoms
aam
push
out
cmp
pop
lret
or
cmc
ljmp
filds
movsb
and
std
or
sti
inc
in
or
xchg
adc
subb
int
pop
das
cmpl
lret
inc
inc
adc
fcmove
mov
lcall
movsl
in
andb
fsts
jnp
xor
xor
inc
into
push
stos
pop
ret
dec
mov
incb
leave
adc
test
daa
xchg
jbe
mov
cmp
cs
mov
pop
movsb
test
loopne
jbe
mov
dec
inc
popf
outsb
adc
inc
enter
faddl
loope
loope
sbbb
jp
std
pushf
jae
xchg
xor
sbb
sub
orl
scas
dec
fldenv
mov
fdivrl
adc
jb
pop
xchg
add
or
mov
push
cli
cmp
std
int3
jns
pop
sub
jae
sub
popa
pop
mov
insb
lcall
xchg
push
cmp
push
xor
loope
stc
push
add
push
daa
pop
adc
push
popa
push
jmp
cmp
xor
shll
leave
mov
stos
mov
lods
inc
and
mov
mov
jge
test
push
sbb
mov
xor
or
lret
jo
cs
jb
test
inc
sarl
notl
push
mov
sub
pop
xchg
sti
imul
pop
cld
mov
cmp
push
add
stos
mov
mov
mov
shl
aaa
jo
ds
sbb
xchg
jb
ds
xchg
repz
shlb
ss
jnp
rorb
xchg
fadds
xchg
mov
jl
sysret
adc
pusha
mov
cmp
sti
sub
mov
addr16
das
aad
fs
ljmp
push
imul
les
loopne
and
jmp
mov
jmp
in
cmc
push
inc
xor
lret
rorl
mov
fsubrl
and
mov
xchg
add
inc
inc
inc
fwait
lods
xor
or
jl
sbbb
mov
lret
mov
sub
pushl
dec
sub
mov
das
incl
sbbb
or
pop
sub
pop
push
aad
xchg
inc
out
cmpsb
das
jmp
jbe
and
sti
popa
push
sbb
push
pop
mov
adc
aaa
mov
insl
ljmp
cmp
roll
sub
int3
sbb
js
adc
into
xchg
mov
sbb
and
and
lret
ja
adc
xchg
mov
xor
in
addr16
pop
and
ds
add
and
push
dec
inc
and
rcll
inc
repz
xchg
movsb
xor
sahf
sbb
rolb
add
jb
lret
fadds
scas
mov
and
iret
movsb
xor
push
sub
xchg
stos
push
add
into
xor
sti
mov
mov
mov
sbb
add
jnp
pop
mov
add
clc
mov
je
nop
test
mov
imul
pop
add
push
popa
push
bound
jno
add
pop
pop
or
insl
js
int
and
xor
in
cmp
jns
xor
mov
jno
xlat
xchg
pop
sub
neg
ror
xor
jecxz
xor
mov
loop
xor
rclb
call
jnp
push
dec
inc
aaa
icebp
mov
mov
lods
outsl
xchg
xlat
cmp
frstor
xchg
je
je
movsb
bound
pop
lock
movsb
sub
lods
ja
pop
mov
jb
sub
pop
inc
xchg
or
mov
andb
movsl
enter
test
gs
and
push
mov
xor
nop
adc
insl
and
out
xor
pop
add
mov
in
ja
xor
ja
rcll
cltd
arpl
dec
mov
dec
dec
or
pop
adc
es
clc
popa
adc
xlat
jns
stos
sub
addr16
pop
add
mov
cli
and
cmpsb
movsl
sbb
inc
lods
fstpt
sbb
xchg
out
stc
push
addr16
mull
jmp
push
sbb
stc
push
mov
scas
dec
cld
negb
cltd
pop
mov
jo
cs
cmpsb
xchg
lcall
movsb
jb
lock
lret
inc
loopne
insb
add
popf
sbb
pop
ss
sti
pop
cmp
or
stc
push
loope
or
sbb
decl
pusha
push
mov
jl
js
pop
lds
mov
int
leave
xchg
outsl
jge
ret
push
and
xchg
pop
ds
jecxz
xor
mov
xchg
xor
pop
ljmp
pusha
jns
push
dec
outsb
cmp
test
xchg
shlb
inc
or
xchg
pop
pop
inc
add
gs
in
es
cwtl
fcmove
cli
adc
cltd
jb
add
in
iret
jbe
push
in
inc
jb
xlat
mov
scas
jge
add
jmp
pop
lahf
cmp
jns
out
or
pop
cmc
mov
out
add
faddl
lahf
popf
xor
xchg
sbb
and
dec
insl
sub
fmul
push
and
imul
das
pop
loop
fimuls
bound
loope
mov
inc
pusha
mov
cld
adc
stos
mov
add
cmp
push
inc
shrb
mov
add
nop
inc
sub
xchg
pop
rol
push
mov
mov
jnp
std
inc
pop
ret
xor
test
xlat
lcall
jns
jns
push
subb
xchg
pop
mov
in
test
pop
mov
adcl
sbb
mov
test
test
mov
mov
jg
xlat
sahf
dec
lret
dec
pop
pop
jae
add
push
jg
xor
addr16
adc
mov
test
mov
insl
cli
std
xchg
add
lret
mov
add
push
sub
pop
stc
jg
outsb
jbe
push
sbb
in
cmp
pop
inc
sbbb
fisubrl
mov
rcr
fnstenv
inc
push
fsubp
in
int
pop
pop
jae
and
and
mov
cmpsb
mov
lds
jge
dec
xchg
dec
jp
loopne
subl
xchg
cmp
inc
lods
xor
pop
mov
or
cmpsb
xchg
rol
add
push
push
mov
mov
fs
jmp
jmp
out
mov
ret
jnp
lods
fwait
aaa
lret
pop
xor
mov
sub
test
xchg
lcall
scas
ss
push
sti
mov
fwait
loop
jp
lods
dec
push
ret
add
mov
cmc
mov
mov
push
jmp
ret
add
mov
lret
or
lret
mov
not
mov
sbb
jl
xor
ret
jns
and
mov
or
lret
fadds
pop
pop
xchg
pop
sub
cmpsb
daa
jns
mov
leave
cli
gs
or
pop
mov
adc
jne
fidivrs
or
mov
cltd
ficompl
cmp
hlt
fimull
loope
adcb
stos
dec
sbb
mov
icebp
test
pop
in
jno
jmp
mov
inc
enter
insb
fmulp
cmc
jo
movsl
pop
mov
add
loopne
dec
push
data16
xchg
scas
test
push
imul
mov
inc
sbb
je
adc
fisubrl
push
pusha
inc
mov
je
jae,pn
xchg
jno
loopne
adc
sbb
movsb
addr16
sub
jmp
aas
xor
mov
pop
icebp
jo
inc
or
lret
mov
jge
xor
lods
bound
mov
or
add
xchg
inc
cmp
xorb
sbb
push
mov
nop
mov
cltd
add
inc
adc
je
sahf
daa
ljmp
jge
dec
push
stc
push
mov
mov
push
hlt
xlat
popf
pop
mov
cmpsb
push
jae
inc
cmp
je
cmp
es
mov
jns
je
add
inc
push
sarl
xchg
fisttps
sarl
aas
in
in
add
notl
jecxz
stc
push
out
ljmp
data16
cmp
jg
xchg
inc
lret
enter
ficoms
xchg
leave
jns
lcall
jb
mov
movsb
add
or
and
data16
jne
or
inc
mov
xchg
xor
daa
xchg
repz
inc
cmpsl
jno
or
and
out
jle
ljmp
xor
aam
arpl
adc
push
xchg
aas
inc
pop
movsb
rcrb
insl
push
push
xlat
mov
ficompl
xchg
sub
jp
call
mov
adc
mov
fldl
cmp
mov
int3
inc
aaa
push
leave
lahf
or
aas
jbe
mov
filds
sub
jle
movsb
mov
cmc
xchg
mov
rolb
xchg
cmp
inc
cmpsl
aam
adc
mov
xchg
xchg
mov
add
btc
in
ret
in
out
sbb
outsb
cmc
mov
ret
adc
pop
orb
mov
aas
dec
into
sarl
das
xor
pushf
test
dec
mov
push
sbb
insl
les
cld
jl
addb
xchg
jb
in
ss
mov
aad
fwait
cmp
xchg
sbb
jmp
jp
adc
stos
push
lods
cmp
cmp
jl
jg
insb
dec
dec
push
clc
jle
pop
mov
int
or
sub
out
aas
call
loope
and
lret
lds
in
sub
cmp
test
pop
dec
mov
ss
adcl
lret
scas
ja
push
cmp
add
xor
sbb
dec
outsb
mov
fsubs
cmp
adc
push
dec
and
jle
in
rcrb
xlat
sbb
mov
mov
insl
add
pop
shr
data16
loopne
dec
sarl
inc
das
xchg
mov
mov
jge
xor
lods
push
adc
in
sbb
stos
shrl
iret
cld
hlt
movsl
cli
inc
shlb
mov
push
dec
lods
jmp
mov
dec
aad
xor
outsb
dec
popa
add
pop
jmp
in
jl
movb
jle
lock
jns
sahf
out
jge
cmc
push
adc
in
ret
mov
xchg
fwait
outsl
and
je
imul
and
sub
inc
arpl
push
mov
inc
mov
icebp
cmpsb
or
adc
mov
pop
imul
scas
loop
adcb
sbb
gs
jo
in
sbb
fldcw
pop
cvtps2pd
out
testl
outsl
lods
push
mov
ds
test
pop
sbb
adc
add
or
fsubs
xchg
ds
mov
sbb
imul
sti
inc
bound
mov
jge
mov
dec
ljmp
push
add
mov
fld
or
loop
leave
enter
scas
pop
push
hlt
xchg
adc
jnp
push
jle
sub
ljmp
push
je
cmp
mov
ds
shl
pushf
pop
std
test
or
je
and
xchg
pop
xchg
aad
push
aas
jbe
inc
popf
rorb
xlat
inc
cmp
xor
lock
mov
mov
rcll
test
add
adc
jnp
scas
mov
and
jl
jle
loopne
loop
jne
cmp
repnz
sub
imul
mov
jecxz
xchg
out
out
stos
popa
jmp
sub
cmp
sbb
sub
and
scas
test
and
xor
ret
fsubr
cmovp
xchg
ja
xchg
mov
mov
mov
notl
adc
jmp
jae
subl
in
es
dec
mov
andnps
sub
adc
iret
sub
out
rcr
les
xchg
rol
sbb
adcl
mov
xor
cmp
push
popa
inc
cli
and
je
das
xlat
mov
mov
xchg
dec
cltd
push
xchg
int
pop
adc
fmull
iret
scas
xor
sbb
lret
xor
or
push
push
xor
aad
test
stc
xchg
stos
movsb
push
idivb
xor
aaa
shlb
ljmp
and
stos
jae
jmp
inc
out
cmc
sbb
lea
xchg
gs
rcr
mov
addr16
or
add
mov
mov
lcall
lock
int3
imull
xor
jnp
pop
shrl
push
pop
outsb
inc
push
pop
or
mov
xchg
icebp
ret
loope
loopne
clc
mov
push
and
test
out
or
cmp
insl
inc
cs
in
movsl
jb
ja
sub
icebp
addr16
int3
jge
jo
mov
adc
js
mov
lret
jp
adcl
stc
rorl
add
pop
mov
data16
sbb
jmp
stos
es
int3
dec
pop
ljmp
test
xchg
mov
adc
pop
and
inc
inc
push
sbb
loop
imul
mov
daa
mov
push
in
sub
in
add
call
js
mov
cs
add
cmp
iret
push
je
or
sbb
push
test
sbb
in
sti
mov
subl
jmp
test
movsl
inc
scas
mov
ja
pop
mov
out
xor
xchg
inc
nop
jmp
cmpsb
mov
push
push
in
into
and
mov
jno
das
or
in
pop
cmpsl
and
mov
addr16
pop
loope
scas
cmpsb
push
aam
out
stos
lret
adc
sbb
xchg
add
push
ret
mov
mov
insb
mov
adc
mov
clc
add
fwait
jg
cltd
pop
test
cs
lock
push
out
cld
xor
insb
mov
lods
pop
xchg
inc
sbb
iret
adc
adcl
sbb
gs
loope
lea
or
aas
and
xor
adcl
cld
push
stos
push
adc
add
pop
lods
in
or
adc
add
and
adc
test
mov
mov
insb
iret
push
hlt
js
add
adc
into
sti
in
mov
mov
cmpsb
cli
loope
loop
mov
je
into
xlat
les
dec
lret
pop
jo
jae
scas
repz
lock
mov
sti
xor
out
lret
jl
sbb
dec
jno
int3
inc
insb
cli
pop
push
jecxz
adc
std
addr16
xchg
out
ds
lret
cmp
lods
push
lods
add
lret
daa
inc
cmp
jbe
sbb
imul
lret
iret
push
mov
andb
sbb
sahf
push
push
cmp
sbb
ret
rclb
xchg
daa
movsl
pop
cltd
dec
inc
mov
mov
ret
jae
or
movsl
fisttpll
sbbl
sbbl
dec
or
mov
das
adc
sbb
jae
pop
push
imull
enter
dec
lea
adc
push
inc
mov
test
int
inc
xchg
push
mov
xchg
dec
mov
xor
pushl
or
cltd
cmp
repz
fcmovnu
and
jnp
jb
mov
mov
or
arpl
sub
cli
lock
inc
dec
sahf
jno
mov
or
mov
rcrl
jo
inc
xor
popa
mov
sub
hlt
ljmp
xor
xchg
sbb
pop
and
cmp
or
js
lret
out
inc
and
ljmp
add
mov
xchg
daa
negl
shlb
shl
jno
push
or
inc
push
cmp
popa
sbb
aaa
pop
pusha
and
xor
fbld
dec
lds
scas
sub
stos
adc
aam
mov
adc
mov
rcl
cmp
jmp
or
or
jnp
xchg
cmp
xchg
and
or
sahf
pop
cmp
xor
shrl
mov
gs
lock
rcrl
sub
jb
pop
xor
cld
lret
int3
shrl
cld
xor
mov
lret
add
repz
lods
cmp
test
cmpsw
push
cwtl
js
sbb
cmp
jmp
pop
in
outsb
xor
data16
jmp
fidivrs
mov
sbbl
cmpsb
jae
sub
sbb
push
jb
aaa
aam
lea
filds
loopne
or
push
push
jmp
push
mov
adc
fwait
popa
insl
add
lahf
or
jnp
push
dec
out
or
push
mov
sbb
cmc
rcll
and
fnstenv
pop
mov
mov
push
or
xor
das
cwtl
cmp
mov
sbb
xor
sub
push
pushf
jno
cwtl
fnstenv
jbe
shlb
jae
lea
pop
adc
lret
lods
push
in
xchg
out
jbe
clc
xchg
mov
ret
fcmovne
mov
je
xchg
mov
adc
aad
pop
cmp
push
int
pop
xorb
popa
push
add
xchg
sub
mov
mov
pop
pop
ret
popl
les
outsb
sarl
push
xor
and
test
inc
andl
jae
adc
andb
rcll
mov
inc
shl
mov
lahf
xchg
je
mov
sti
jns
push
ja
xchg
inc
in
imul
int3
out
addr16
mov
cwtl
xchg
test
cmpsl
leave
mov
into
mov
push
stos
mov
jg
leave
push
pop
jp
jno
ljmp
add
imul
aas
dec
aaa
imul
cmp
ret
sub
je
aas
lds
lea
push
adc
jne
addr16
sahf
jo
outsb
cmpsl
and
ljmp
inc
adc
iret
push
rorb
xchg
mov
pop
mov
sbb
xchg
sub
lea
enter
cmpb
test
ds
sub
cmp
push
sahf
pop
sub
cmp
cld
ds
push
jnp
and
call
cltd
aaa
fidivs
scas
in
add
ret
push
sbb
push
or
jl
push
psraw
mov
popa
sbb
dec
lea
cmpl
inc
inc
in
std
pop
jo
xchg
outsb
lods
loop
jg
and
push
imul
or
and
sbb
or
lods
cmc
push
lret
or
out
sbb
adc
adc
mov
mov
sbb
mov
loop
mov
gs
pop
pop
insw
ljmp
push
bound
sbb
xor
hlt
push
pusha
xchg
push
faddl
or
cmp
or
sbb
pop
in
xlat
xor
and
and
ficoms
push
sub
or
adc
mov
stos
xlat
dec
xchg
mov
jle
add
mov
lods
std
or
and
xor
test
or
sub
add
and
fsub
or
xor
xchg
das
add
mov
sub
push
push
leave
lret
je
add
movl
xchg
and
xor
xlat
jno
lds
add
mov
jmp
outsb
sub
cmpsb
cmpsb
lahf
insb
popf
imul
das
icebp
je
pop
and
xchg
sbb
cmp
das
aaa
cmp
das
inc
inc
nop
add
xchg
sub
sahf
cmc
xlat
or
daa
daa
pop
jbe
icebp
xchg
cmp
int
mov
cmp
out
into
push
pusha
je
mov
cmp
xchg
in
scas
nop
sbbl
xchg
sbb
sub
repnz
mov
pushf
ja
lods
pop
mov
sbb
addr16
xor
dec
adc
add
scas
call
adc
pop
outsb
mov
adc
adc
sti
xorb
js
fisubrl
rorb
or
into
xchg
test
sti
adc
sub
jb
repz
and
int
rclb
test
jne
in
in
pushf
notl
mov
jnp
jnp
les
push
cmpsb
fld
pop
mov
sub
iret
mov
hlt
xor
gs
fsubrl
ret
in
ret
pop
xor
sbb
push
pushf
jae
jmp
push
fistpl
in
dec
insl
ss
and
push
lcall
and
emms
clc
cmp
sbb
jle
arpl
movsb
inc
add
fadd
jecxz
push
inc
inc
test
jns
push
mov
mov
or
xchg
sbb
sbb
jbe
out
insb
jle
icebp
xor
ret
xor
adcb
repnz
nop
and
pop
lcall
clc
push
popa
jbe
fwait
dec
sbb
dec
jecxz
leave
add
xchg
lods
jge
cmpsl
pusha
sarb
inc
mov
leave
in
push
stos
mov
mov
xor
xchg
sub
aad
pop
push
push
pop
cmp
cmp
hlt
xor
push
pop
fs
add
adc
mov
add
mov
dec
dec
hlt
xchg
push
xchg
sbb
xchg
push
mov
mov
loopne
xor
pop
aam
out
pop
xor
lret
pusha
xor
call
out
xchg
enter
aam
loopne
fwait
lahf
add
ror
leave
and
cmp
jg
lods
stos
push
sbb
lahf
fwait
or
repnz
pop
jg
dec
fnsave
shrb
stc
insb
mov
fbstp
lods
xor
es
xchg
mov
pop
popf
mov
inc
mov
jno
int3
stos
movsl
jne
int3
shr
aad
inc
sub
lahf
mov
inc
jge
fidivrl
inc
and
shlb
adc
cmp
mov
getsec
cmp
das
push
sbb
pop
ds
mov
xor
cld
jp
mov
mov
xlat
mov
cmpb
cmpsl
sub
insl
cmpsl
jmp
rcrl
ja
mov
loope
lahf
cmp
xchg
je
pop
nop
stc
data16
cltd
sub
jp
xor
in
movsl
or
pop
jp
dec
fdivl
sti
popf
imul
repnz
cmp
loop
ss
loope
mov
lds
xor
cmp
cmp
jmp
pop
subb
pop
sub
stos
sbb
mov
pop
pop
mov
pop
mov
add
call
cwtl
pop
mov
fwait
push
cmpb
aad
add
stos
or
jmp
mov
push
mov
mov
sahf
iret
dec
seta
mov
add
sub
xchg
adc
push
mov
fcmovnu
roll
xor
xlat
add
mov
jmp
xchg
test
test
arpl
out
dec
cli
mov
sarl
jnp
clc
dec
rclb
sub
adc
bound
mov
rcr
les
mov
xchg
xchg
adc
or
ret
mov
jle
or
cmp
fldl
push
movsl
cmpsl
int
test
xchg
pop
lods
jp
jge
push
cmpsb
rcll
push
xchg
inc
hlt
xchg
push
mov
xchg
loop
fcmovbe
lock
je
xor
idiv
rcl
cld
or
xor
jb
cmp
pop
int
movsb
int
leave
mov
sarb
jbe
lea
addr16
mov
mov
loopne
std
aad
in
jmp
fwait
sbb
inc
addr16
mov
or
mov
and
jle
mov
lcall
in
inc
lds
repnz
leave
cmp
pop
mov
sbb
sahf
loop
cli
xor
out
mov
js
mov
inc
cmovl
stos
ret
push
push
mov
lds
mov
outsb
jmp
outsb
testb
outsl
pop
ret
repz
push
js
add
jb
sub
movl
vpaddd
mov
mov
cmp
dec
and
out
add
jge
pop
data16
xchg
int3
cs
cmpsl
loop
cmpsl
cmpsb
xchg
jle
inc
bound
pop
stc
daa
push
out
mov
cmp
out
cmp
mov
mov
ja
lret
sub
ljmp
or
lods
cltd
sbb
mov
call
pop
into
test
incb
lods
cmp
lods
and
mov
inc
mov
cmc
jno
xchg
and
cmp
lret
ds
dec
mov
aad
daa
mov
xchg
or
ja
ficoml
aaa
pop
in
std
inc
xchg
into
das
stc
lret
push
aad
xchg
icebp
jmp
cmp
dec
push
pop
sbb
or
ficompl
inc
jl
imul
mov
in
faddl
movsb
sub
mull
clc
imull
loop
shll
arpl
sbb
inc
pop
mov
loopne
mov
shll
cmp
mov
or
jo
add
xchg
imul
cmp
dec
push
iret
jno
fiaddl
push
loope
sbb
sbb
and
cmpsb
pop
jnp
and
das
push
dec
hlt
out
fstpt
in
das
push
add
jo
xchg
subl
and
test
ficompl
cmp
cltd
mov
sub
ficomps
and
sbb
mov
add
adc
in
jmp
daa
cwtl
or
hlt
adcl
xchg
cmp
cmp
jae
lock
or
subb
lods
xor
lods
pop
and
inc
jne
loop
and
mov
sbb
xor
arpl
mov
add
or
cmp
pop
and
cmp
into
cli
or
mov
sahf
mov
push
inc
popa
je
push
pop
and
scas
inc
loopne
pop
rolb
scas
or
and
in
push
cmc
cmp
fsubrl
scas
and
xor
pop
out
test
sbb
fsubp
pusha
movsl
fwait
or
lea
movsl
scas
dec
inc
je
cmp
scas
xor
mov
into
pop
icebp
add
ret
sub
out
cmp
pusha
mov
subb
and
push
pop
cmp
lcall
movsl
out
adc
or
add
shlb
leave
and
adc
adc
sbb
dec
jb
xadd
data16
add
clc
stos
int3
inc
loopne
fidivrs
sbb
and
call
stos
mov
jns
xor
insl
mov
jmp
aaa
push
lock
mov
add
xchg
lahf
mov
shll
add
mov
test
jne
daa
fsts
pusha
dec
stc
cld
es
movb
daa
cmpsb
cmp
lods
pop
es
sbb
fs
push
mov
lods
in
iret
addr16
jmp
push
sub
xchg
aas
repz
repnz
fbld
test
cmp
add
in
sub
xor
mull
jne
jg
cmp
inc
inc
or
xlat
push
je
test
setbe
cs
xor
fidivl
push
stc
pop
orl
sub
push
push
xor
mov
adc
lock
sbb
imul
xchg
or
inc
cmp
adc
sbb
fistl
mov
push
add
insl
pop
xor
outsb
mov
push
push
and
jg
test
scas
jb
iret
pushf
dec
test
mov
xor
pop
pop
test
push
mov
fldcw
inc
dec
stc
jnp
fwait
jae
sbb
push
mov
mov
sub
in
ss
sti
jae
jno
mov
push
jbe
lea
or
inc
mov
nop
int
in
sub
dec
sahf
inc
sahf
sub
lahf
callw
lds
aam
test
jecxz
aam
sbb
jecxz
or
jb
fsubrs
mov
xorl
loop
mov
dec
xchg
add
pop
mov
mov
mov
in
xchg
cs
adc
loop
push
push
es
adc
pushf
mov
shl
cld
mov
sbb
pop
out
mov
decl
addb
stos
pop
xorl
adc
aam
adc
mov
lcall
add
ja
cld
fldl
stos
push
fcmove
sub
je
clc
xchg
dec
call
fcoml
jbe
xor
aam
fsubrs
pop
shrb
es
jbe
mov
notl
and
inc
fdivr
stc
dec
jne
add
fs
outsb
mov
jo
fs
test
jbe
xlat
ja
inc
subl
inc
arpl
sub
into
xlat
insl
and
test
dec
inc
inc
add
int
lock
cmp
sbb
push
lahf
jecxz
jbe
adc
repnz
in
inc
cmp
andnps
push
add
in
hlt
add
ret
jae
push
jp
inc
add
out
imul
dec
push
cmpl
xor
or
xor
lret
mov
test
das
loopne
mov
cmp
push
stc
or
pop
xor
adc
icebp
filds
notl
push
clc
jg
jbe
pop
mov
mov
addr16
iret
test
test
mov
cld
inc
jb,pn
push
ret
ss
or
sbb
out
stos
inc
test
mov
pusha
repz
push
aas
pusha
pop
adc
lods
pop
ljmp
mov
mov
std
lods
mov
bnd
lcall
adc
push
xchg
push
fldl
adc
jle
adcl
imul
mov
add
scas
pop
dec
cmp
jg
es
jbe
dec
or
mov
fildll
or
add
syscall
fsts
sbb
ja
aad
in
repz
sub
sbb
lods
push
add
lods
add
lret
pop
mov
iret
push
addr16
or
cmc
add
and
loop
stc
jo
lods
mov
sub
xor
push
pop
popa
jl
mov
jb
pop
iret
mov
cwtl
cmp
pop
shlb
jne
xchg
add
mov
inc
sbb
fdivr
jmp
mov
popa
jl,pn
add
aam
pop
fistps
inc
mov
sub
js
cmp
cs
pop
jbe
movl
in
cmp
pop
pop
push
arpl
mov
es
cld
lcall
test
or
out
push
call
xchg
imul
inc
fisubrl
lea
rorb
push
outsl
test
sub
std
cmp
lret
inc
inc
pop
daa
mov
xchg
cmp
dec
mov
stc
adc
add
test
js
and
add
adc
mov
mov
pop
add
mov
push
das
mov
push
inc
cmp
les
xchg
shl
test
mov
aad
fidivrl
ljmp
aas
jb
int
add
jge
cmp
lahf
subl
lahf
lahf
bswap
data16
lods
sub
lock
or
leave
sbb
stos
and
push
sub
in
fwait
popa
mov
xlat
data16
cltd
test
mov
jge
mov
cmpsb
mov
and
sub
cmp
xor
and
addr16
and
add
pop
imul
cld
mov
sysret
dec
cltd
add
pop
jl
dec
jecxz
stos
clc
adc
mov
and
sbb
cmc
je
in
cltd
xchg
pusha
ss
adc
cld
pusha
lcall
mov
mov
filds
xor
imul
pop
and
xchg
mov
clc
jo
cmp
fsubrp
int
adc
jbe
mov
testb
scas
repnz
xchg
pusha
cmpsl
dec
jnp
divb
push
addr16
jecxz
and
pop
loopne
xor
xchg
faddl
cld
mov
lahf
xor
cmp
mov
loope
cmp
add
pusha
sar
adc
push
cmp
fbstp
subb
shrl
or
stos
lcallw
pop
out
and
jg
ja
jbe
mov
imul
cmpsl
test
nop
pop
push
rorl
test
inc
xor
sub
mov
in
orl
lock
mov
add
cmpsl
sahf
js
mov
movsb
xlat
mov
out
stc
and
xchg
repz
scas
push
out
add
push
xor
outsl
pop
fdiv
mov
adc
cmp
leave
mov
cmp
xor
mov
dec
fisubrl
mov
xor
mov
and
adc
stos
push
call
insl
repz
xor
inc
or
mov
mov
aaa
push
enter
pop
push
sbb
leave
cmpsl
pusha
pop
dec
loopne
push
outsl
rcr
cmc
pusha
popl
and
aam
sbb
or
mov
mov
lock
leave
pushl
fcmovnbe
in
lock
insb
loop
movsl
aas
addl
aad
gs
ret
stos
push
lcall
pop
mov
iret
push
xor
out
adc
lret
mov
lds
scas
test
pop
push
xchg
mov
cld
jl
je
jecxz
or
jbe
push
mov
add
lods
dec
stc
popa
jb
lock
in
cmpsb
xor
sbb
hlt
leave
add
push
inc
repnz
xchg
mov
jmp
loop
cmp
xchg
sbb
pop
lods
shlb
lahf
lret
or
daa
outsl
adc
mov
ffreep
mov
add
pop
mov
test
fsubs
int3
test
push
sub
jnp
mov
jmp
xchg
mov
lret
mov
mov
testl
or
imulb
imul
dec
xchg
or
addr16
push
cmp
shrl
je
dec
clc
cmpsl
aam
add
mov
inc
pop
mov
pop
aam
jbe
mov
mov
mov
inc
rcrl
aam
mov
dec
daa
and
nop
sbb
incl
sbb
inc
jnp
in
loopne
jmp
xchg
sub
mov
rorl
mov
push
pop
mov
mov
test
jle
pop
dec
dec
cmpsl
sbb
fidivrs
pop
jecxz
mov
test
test
test
inc
xlat
insb
mov
push
inc
ljmp
inc
js
push
hlt
adc
fistpll
xlat
xor
jge
addr16
cmp
pushf
dec
idivl
movsl
jmp
inc
mov
int
les
xchg
popa
mov
rolb
sbb
mov
outsl
sar
inc
scas
mov
test
fcmove
jb
adc
aad
push
call
out
mov
xchg
push
aam
push
mov
lret
and
adc
mov
jg
test
aas
add
inc
testl
xor
sbb
ss
fsubrs
je
sahf
pusha
cmc
or
scas
or
cmp
cmp
xchg
ljmp
cmc
mov
xchg
xlat
jl
inc
maskmovq
notl
aaa
int3
mov
jl
sub
adc
stos
pop
xlat
mov
ficompl
and
dec
xor
cmp
aam
xor
aaa
sub
call
pop
fbld
loopne
push
dec
ljmp
lret
shl
movsl
aad
cld
sub
xor
mov
and
stc
inc
mov
ror
pop
sub
imul
repz
jg
sbb
cli
insl
scas
in
or
enter
out
shlb
aam
mov
mov
iret
das
xchg
inc
mov
out
adc
add
cmp
repnz
data16
mov
in
out
orb
mov
hlt
cmp
inc
addl
fidivrs
mov
xchg
mov
xorl
sahf
mov
fs
xorl
or
fsub
sti
cs
sub
shll
popf
daa
mov
nop
xadd
inc
sbb
cld
or
or
sbb
stc
stos
cmpsb
pop
fistps
jmp
jecxz
cwtl
adc
addr16
push
sub
mov
adc
mov
pop
cmp
repz
rclb
ljmp
in
sub
xchg
sbb
cmc
rcll
subl
xchg
sub
add
jmp
push
jae
cmpsb
std
adc
rorb
inc
or
and
fisubrl
mov
lea
das
or
stos
inc
test
jae
repnz
int
clc
pushf
arpl
sahf
das
xlat
imul
aad
sub
sub
outsl
test
and
mov
or
cmc
int3
mov
push
faddl
xchg
push
shll
nop
adc
mov
push
inc
inc
out
mov
push
mov
imul
dec
xor
icebp
sbb
outsl
push
pop
rorl
mov
adcl
hlt
fs
mov
mov
fwait
adc
loope
pop
cmp
mov
inc
jo
clc
cld
xchg
test
mov
arpl
add
mov
xchg
inc
sbb
jmp
mul
cmp
dec
loope
das
pushf
xor
adc
fs
add
sub
stos
dec
dec
in
push
fidivl
shll
clc
loopne
data16
cmp
sar
stos
imul
mov
ljmp
dec
sarl
or
cmpsl
cmp
cmpsl
cmp
mov
add
xchg
in
cmp
int
int
data16
push
stos
ds
cwtl
sub
mov
call
add
mov
js
nop
leave
es
inc
fbld
or
cmpb
bound
add
adc
lds
or
fsts
fists
xor
push
sub
pushf
sarb
std
fdivp
mov
les
repnz
sub
inc
orb
sti
adcb
fnstcw
push
popf
add
mov
inc
sarl
mov
lock
js
fidivrl
push
std
popa
scas
insb
test
add
and
arpl
inc
push
push
pop
or
mov
inc
cmc
xlat
inc
pop
xchg
popa
jle
fsubrs
fsubs
sub
sbb
loopnew
or
sbb
cmp
mov
sub
shll
jecxz
xchg
xchg
add
ljmp
ret
fistps
inc
lock
aam
jge
enter
xchg
lcall
mov
sahf
add
ljmp
and
out
ret
pushf
daa
xorb
movsl
lret
fidivrl
mov
sahf
cmp
js
scas
inc
call
sub
outsb
cmpsl
cli
sub
bsr
out
andb
jns
imul
xchg
out
inc
sbb
or
lret
adc
mov
in
ja
sbb
es
fwait
stos
int
mov
add
fmull
iret
xchg
push
iret
or
popa
mov
int3
out
jno
shlb
fs
sub
jb
mov
mov
out
sarb
out
jnp
add
lods
sbb
rclb
push
hlt
insb
andl
cmp
leave
dec
icebp
imul
xchg
pop
popa
mov
dec
xor
hlt
jns
cmp
sub
cmpsl
jbe
out
pand
dec
iret
xor
mov
mov
outsl
lahf
cmp
add
cmpsb
and
or
mulb
pop
inc
clc
movsb
pop
lret
sbb
mov
pop
sahf
addr16
into
mov
ljmp
push
jl
adc
mov
jecxz
push
clc
jge
leave
shll
test
push
mov
idiv
xor
sub
lock
je
aad
ljmp
out
call
jo
xchg
push
push
inc
test
outsl
dec
or
mov
out
sbb
lahf
dec
mov
jns
pop
dec
je
inc
add
data16
in
push
pop
inc
lret
sbb
addr16
jmp
or
mov
push
mov
dec
mov
and
pop
iret
in
test
jbe
outsb
movsb
xchg
popa
mov
sti
mov
mov
adc
rorb
jl
repnz
and
pop
lock
in
mov
dec
jp
dec
popf
test
cmpsb
add
test
mov
adc
imul
mov
sub
or
lods
lret
in
jne
icebp
mov
stos
or
cmp
repz
and
push
mov
mov
and
les
jmp
pcmpgtb
pusha
aam
dec
leave
sub
lds
cmpsl
jp
popa
aad
out
scas
xor
nop
or
repz
xor
xchg
xorb
push
stos
mov
daa
adc
jno
pop
xchg
sub
lea
mov
clc
pushf
jmp
mov
notb
cmc
pop
shufps
pop
out
arpl
repz
cli
cwtl
fldt
or
mov
addr16
or
sub
loope
jge
xor
or
xor
sbb
insl
sahf
pop
imul
push
lods
rorl
adc
add
mov
mov
cmc
daa
out
jg
fimull
xchg
out
xchg
mov
jle
ljmp
push
cmpsb
loopne
jnp
dec
cli
mov
iret
cmpsb
sub
add
lock
pusha
jl
aaa
mov
icebp
xor
or
cltd
test
sub
in
adc
mov
lds
cmp
mov
fs
test
sub
test
and
dec
sbbb
lahf
dec
inc
mov
sti
pop
or
xlat
sarb
shrb
clc
mov
pop
push
fs
mov
dec
pop
xchg
sti
insl
nop
addb
mov
sub
out
dec
jle
inc
out
scas
out
rcrl
fstps
loope
mov
xchg
xchg
emms
pop
sub
xchg
mov
cs
outsl
add
sti
test
xchg
push
sub
movsl
jle
rcrl
mov
xorl
fildl
nop
add
cltd
jbe
jmp
frstor
mov
pop
mov
mov
jmp
fs
mov
ss
mov
adc
add
std
dec
mov
lret
sub
mov
or
fldl
lahf
sbb
fcmovnu
inc
or
lcall
mov
int
sahf
mov
mov
imul
xchg
and
stos
hlt
fstps
pushf
fisttps
icebp
sub
xorb
insb
mov
cld
mov
movsl
inc
jg
jne
xchg
inc
mov
faddl
fsts
ret
mov
mov
xchg
dec
jno
push
sub
inc
xchg
shlb
jnp
mov
xlat
sub
fstl
out
mov
or
mov
daa
cli
xor
cmp
repnz
mov
push
call
scas
aam
jmp
dec
pop
jle
call
mov
xorb
mov
iret
inc
icebp
scas
fdivr
mov
sub
iret
xchg
aad
daa
cmp
fdivrl
aad
cmp
call
jo
loopne
pop
fucom
popf
fcmovnu
in
adc
adc
int
rolb
out
test
mov
roll
mov
je
out
sbb
outsb
test
or
cmp
imul
enter
sub
dec
mov
xchg
aad
push
std
jmp
jmp
mov
sbb
inc
pop
mov
fdivrl
ja
xchg
push
dec
arpl
jno
test
pop
ss
mov
movsl
pop
pop
rcl
rcll
dec
xor
cmpsb
or
mov
xchg
sbb
arpl
jae
add
jp
pushl
rorb
inc
movsb
outsl
sub
cmp
in
xor
and
mov
int
fs
arpl
imul
repnz
mov
mov
inc
jmp
mov
pop
sbbb
loopne
xor
adc
jecxz
pop
in
push
out
xchg
inc
mov
dec
sahf
dec
arpl
js
add
xchg
cmc
mov
pop
faddl
lock
push
addr16
mov
repnz
pop
imul
in
adc
jp
xchg
pop
pop
pusha
cmpsb
push
xor
inc
jb
ds
push
mov
xor
rcr
mov
or
mov
mov
ja
loope
adc
out
xor
loope
inc
dec
and
xor
aaa
les
mov
jb
addr16
das
xchg
les
mov
negb
lcall
dec
in
ficomps
mov
cmpsl
pop
adc
cli
mov
movsl
mov
cmpsl
inc
xchg
jno
jb
icebp
adc
and
pop
adc
mov
dec
push
pop
repnz
imul
xor
mov
cmpsb
jno
add
mov
push
push
shll
add
cmc
add
aaa
mov
dec
jb
ja
loop
xchg
xor
xchg
cmp
sahf
jle
fnsave
cmp
hlt
inc
dec
jb
stos
push
pop
or
and
ljmp
cltd
cld
push
adc
xorb
and
adc
inc
ror
push
sub
lret
outsl
mov
dec
mov
pop
or
arpl
add
leave
inc
xchg
jge
loope
adc
mov
xchg
cwtl
cld
mul
js
add
or
bound
aas
adc
pop
pop
sub
aaa
fcmovbe
mov
mov
mov
sub
es
lahf
pop
cmp
ror
jb
outsb
in
scas
es
adc
imulb
xchg
sti
xchg
xor
pop
sbbl
mov
sahf
ss
fwait
nop
lea
not
jae
and
in
mov
jmp
mov
push
jle
and
addr16
test
lret
or
cmp
add
sub
ja
pop
inc
and
and
push
loop
imul
nop
cmp
rclb
aam
data16
mov
pop
jg
call
push
leave
cmp
jnp
sbb
insl
cmp
rcrb
adc
idivl
mov
fnstcw
cmc
add
push
loope
mov
push
xchg
mov
fdivl
pop
jae
mov
int
mov
mov
mov
push
data16
adc
push
andl
hlt
or
mov
roll
mov
stos
lock
fimuls
test
pop
das
loop
xchg
jb
pop
dec
stos
out
subb
pop
jecxz
lcall
mov
xchg
test
fmuls
data16
adc
jnp
sarb
mov
ds
mov
test
gs
cltd
aas
lods
aad
mov
jno
lcall
mov
lea
sub
sahf
mov
mov
orb
fs
ja
mov
pop
jp
movsb
mov
mov
mov
sub
lods
sbb
js
push
sub
ja
imul
mov
shr
aad
push
lret
xchg
adc
stc
adc
nop
cwtl
xchg
in
inc
jmp
mov
movsl
lret
out
mov
psrad
bound
mov
out
or
loopne
jne
xor
fcmovnb
imul
sub
pop
orl
pop
andb
dec
pop
lahf
jns
inc
dec
aad
pop
incb
pop
hlt
cmp
sbb
sub
mov
and
stos
lods
add
fwait
sub
in
hlt
fnstsw
cbtw
cmp
xchg
jae
daa
outsb
add
inc
push
faddl
xlat
adc
scas
popa
stos
xchg
mov
test
loope
add
mov
mov
imul
bound
das
loopne
aad
xor
pop
enter
testl
mov
cmp
mov
jbe
ds
in
fs
push
out
ret
mov
fs
push
addr16
xchg
xchg
ret
and
sbb
dec
xor
aas
lahf
sub
fbld
lcall
testl
xchg
cmp
imul
mov
sahf
loop
inc
cmp
xchg
inc
leave
sbb
fimull
fs
mov
in
xor
shl
dec
pop
push
cld
inc
push
mov
sub
jp
pop
push
mov
mov
mov
add
jne
adc
pop
sbb
movsl
rolb
mov
pop
adc
pop
repz
xchg
push
loopne
lods
and
and
sbb
xchg
mul
outsl
addb
jge
sbb
and
cmp
sub
jle
inc
inc
lds
xor
xchg
mov
pop
mov
fs
test
fistpl
mov
mov
les
push
sbb
mov
push
sbb
cmp
mov
loope
jmp
mov
cmp
sbb
xchg
or
rorb
cmp
mov
pop
sub
inc
rcr
xlat
mov
aad
popa
lahf
fildll
and
cmp
push
iret
push
loope
mov
mov
mov
rolb
cmp
xchg
rcll
testb
test
in
push
adc
test
mov
int
mov
or
ljmp
cld
xchg
ret
adc
push
aam
and
lock
arpl
fisubrs
mov
mov
je
mov
xchg
jle
sub
rcrl
or
and
xchg
jo
filds
mov
out
and
lock
jg
out
cmp
mov
iret
ds
adc
insb
cmp
pop
pop
repz
sbb
mov
sbb
int
in
add
cs
inc
lret
mov
movsb
xlat
cs
nop
daa
cmp
pop
negl
inc
fdivrs
gs
sti
mov
andb
adc
and
lods
pop
or
lea
sub
add
icebp
rorl
xor
hlt
push
jnp
push
ja
std
mov
shl
ljmp
imul
cltd
cmp
das
subl
pop
lret
nop
add
aas
cld
popl
cli
push
pusha
dec
loopne
mov
repnz
push
xor
mov
fcompl
xlat
jecxz
jl
loop
or
insb
js
inc
lret
xchg
jns
test
ret
clc
addl
ret
mov
xcrypt-ecb
cmpsl
mov
ret
sbb
ret
je
sahf
and
incl
pushf
pop
addl
xchg
insl
aam
cmp
mov
std
pop
and
out
push
lock
das
mov
or
push
hlt
gs
scas
fsubrs
jne
das
nop
cmpsl
cmp
les
dec
mov
stos
stos
cmp
mov
inc
frstor
dec
test
test
cmpsb
into
xchg
dec
lds
mov
cwtl
xchg
xchg
pop
into
cltd
and
push
lock
mov
pushf
inc
dec
xchg
mov
popa
mov
mov
mov
adc
mov
push
xor
inc
jb
jge
out
adc
ss
fisubl
cmp
cmovg
sahf
push
xor
cli
js
and
ljmp
pop
inc
and
sahf
dec
adc
lods
mov
xchg
mov
pop
jmp
test
dec
aam
icebp
hlt
mov
nop
into
cmp
mov
cmp
in
mov
lds
mov
dec
hlt
inc
shl
sbb
fucomip
sbb
mov
mov
in
daa
push
jb
stos
jl
mov
mov
jno
imul
sbb
movsb
push
iret
subb
mov
cmp
jo
jnp
mov
int
push
test
add
in
mov
fmull
jo
data16
pop
gs
sbb
ror
xchg
popl
push
push
sarl
jp
push
or
cmp
call
mov
adc
repz
inc
push
xchg
push
mov
cltd
cmp
and
lods
or
enter
push
pop
jno
sub
aas
or
adc
jmp
mov
pop
movsb
mov
ret
mov
sbb
jne
mov
movsl
push
pop
mov
call
pop
lret
scas
push
popf
rcrb
mov
iret
out
jnp
mov
lods
cs
mov
push
add
cwtl
xor
in
inc
add
sbb
dec
pusha
les
xchg
adcb
xchg
cltd
jne
jecxz
cmp
push
push
into
and
sub
repz
pop
out
cld
mull
shr
in
in
mov
dec
addl
imul
sbb
or
or
int
mov
dec
jp
mov
adc
mov
adc
or
ret
mov
push
loope
jmp
sub
xor
inc
pushf
mov
pshufw
in
daa
sub
cmc
xlat
pop
xchg
ss
dec
xor
subb
rdpmc
push
sbb
ror
repnz
xchg
push
adc
xor
adc
xchg
je
or
fimuls
fldt
and
jmp
mov
andl
jecxz
sahf
addr16
and
mov
dec
pusha
dec
hlt
cmp
pop
addr16
imul
push
sub
test
bsf
rol
adc
inc
inc
jne
or
test
out
pop
fsubrs
sbb
pop
test
or
mov
negb
sub
fstps
mov
lret
fcomip
cltd
iret
push
fwait
and
out
call
mov
mov
aaa
pop
fcomps
mov
sbb
rcll
jge
sbb
add
cmp
and
mov
adc
cmp
mov
in
mov
stos
and
nop
mov
int
xchg
push
xorb
pusha
je
lret
jo
and
mov
xchg
popf
dec
lahf
jl
xchg
js
xchg
cmp
outsb
ret
lahf
and
subb
mov
sbb
pop
adc
jle
cmp
mov
loop
jbe
sbb
adc
jl
mov
repz
repnz
xor
pop
cmpl
mov
insl
test
fsub
jbe
pop
xchg
mov
or
rclb
test
les
imul
sub
inc
push
mov
mov
stc
xor
rcrl
out
mov
shrl
out
push
stos
dec
xchg
dec
js
and
xor
push
jns
cmp
dec
jne
jp
sub
add
jg
cmpsb
je
xor
sti
or
jnp
cmp
outsb
cmp
or
fnstcw
fnstsw
fs
imul
or
mov
pop
cmp
mov
jl
push
rcll
xor
inc
xlat
outsb
pop
cmp
xor
enter
into
add
jg
js
fs
dec
call
jnp
push
scas
xorb
std
stos
mov
dec
add
daa
loop
mov
roll
out
lods
pop
lods
jp
mov
jl
adc
test
push
cmp
jno
in
sbb
jne
dec
adc
mov
xchg
addr16
sti
iret
js
adc
xor
cmp
jnp
jne
orl
jp
das
sti
je
add
push
arpl
jecxz
sub
xor
mov
or
jae
loop
mov
push
es
loopne,pt
pushl
adc
jae
aaa
mov
inc
mov
pop
cltd
lret
inc
xchg
in
sti
sub
shlb
aas
pop
jns
and
sub
xor
imul
out
inc
shl
enter
mov
sub
imul
jge
jg
ja
ljmp
pusha
mov
or
in
adc
push
scas
mov
mov
ret
fnstenv
mov
adc
aad
or
fwait
ret
sub
in
ret
popf
push
mov
cmpsb
call
jnp
sbb
nop
mov
jle
cld
jbe
aas
test
push
test
xor
lret
jecxz
add
pop
ss
nop
data16
pop
xchg
mov
mov
fs
rcr
pop
insb
aam
xor
andb
cmp
aas
pusha
mov
fnsave
in
xor
pushf
mov
insl
push
daa
loop
adc
inc
mov
pop
fadd
testb
ret
js
ds
les
xchg
and
push
repnz
stc
andb
movsl
mov
mov
adc
cs
jp
cmp
push
xchg
mov
lcall
repz
popa
sahf
mov
es
scas
arpl
add
and
mov
imul
nop
mov
and
cs
pusha
or
mov
rcl
daa
test
aaa
and
push
cmp
and
pusha
imul
mov
fwait
lea
inc
xchg
andb
aas
add
js
out
xorb
xchg
adc
jp
adc
inc
stc
mov
push
sbb
sahf
pop
lock
vpaddsb
adc
mov
jns
test
stos
sub
pop
or
pusha
mov
in
mov
mov
movlps
xchg
push
push
mov
pop
fsubrs
cmc
jecxz
mov
iret
inc
sarl
dec
dec
mov
popf
mull
seto
inc
cmpsl
aaa
data16
nop
aas
lods
push
ret
shrb
inc
jmp
and
insb
pop
mov
fs
fldcw
or
dec
into
or
aas
add
mov
xor
push
sarb
mov
jl
mov
int3
mov
adc
loope
adc
cmp
or
xchg
fcmovnb
pop
push
addb
loop
cs
jne
jae
out
adcl
clc
shrl
out
jmp
jl
das
xor
iret
cmpsl
inc
jo
sub
test
imul
adc
stos
push
jge
push
test
negl
ret
shlb
push
xor
imul
sbb
cmp
and
dec
jb
sub
scas
lods
sahf
ja
mov
clc
mov
enter
ffree
cmc
fdiv
jecxz
adc
ds
add
das
arpl
mov
cmpsb
mov
scas
pop
dec
in
jae
jns
scas
int3
inc
and
push
xlat
fwait
pop
aam
nop
lahf
and
adc
test
xchg
in
loop
add
jecxz
or
clc
mov
dec
push
push
sub
adc
fs
out
xchg
jmp
mov
pop
fsub
push
mov
xor
dec
sub
or
sbb
mov
adc
pop
jle
sub
push
je
dec
sub
mov
test
shll
ud1
cmp
inc
push
mov
xchg
lcall
sbb
and
adc
mov
pop
popf
or
lods
xor
cld
or
stos
ret
imul
push
aam
test
or
insl
jne
cltd
pusha
pop
ror
fcomps
jecxz
out
and
outsb
call
jmp
addr16
xchg
xchg
mov
js
and
jg
mov
mov
fdiv
test
sub
dec
lret
daa
inc
sub
mov
lret
push
sahf
mov
mov
cmp
sbb
adc
out
lcall
jae
mov
rorl
ljmp
ficoms
mov
or
mov
sub
adc
cmovge
mov
pop
xchg
data16
inc
jbe
out
xor
mov
fsubrl
icebp
lahf
dec
xchg
cld
subl
ret
bound
dec
divb
ss
mov
push
push
mov
dec
pop
leave
xchg
xor
in
lahf
cmc
adc
inc
and
stos
pop
pop
in
sub
cmp
inc
das
xchg
out
std
xor
or
in
frstor
jecxz
and
std
dec
fbld
shrl
test
cmpsb
xor
fdivs
mov
mov
pop
stc
push
imul
mov
call
fwait
imull
jbe
cwtl
pop
jmp
push
xor
xchg
aam
pop
out
sub
jle
movsl
inc
lcall
add
fs
mov
fwait
lea
neg
jne
insb
lahf
test
cmp
movsb
sarb
lds
mov
cmp
and
enter
push
mov
sub
cmp
imul
and
or
push
dec
fwait
xchg
xor
mov
adc
lods
dec
jp
mov
add
insb
orl
ljmp
and
pop
mov
leave
mov
jg
mov
not
push
mov
lea
and
pushf
daa
ficompl
loope
pop
jb
nop
pusha
add
mov
cld
push
jg
cmpl
and
sub
xchg
imul
dec
sti
cmc
mov
sti
cltd
jle
adc
jo
dec
icebp
repz
dec
or
test
add
mov
mov
fwait
stos
aas
sub
int
inc
xlat
add
sahf
mov
sbb
sbb
mov
lret
mov
jbe
out
xchg
lret
sub
mov
loopew
arpl
pop
mov
inc
cmc
jno
vmovaps
and
dec
rol
movsl
roll
sbb
popa
cmp
mov
out
lahf
sar
mov
mov
cmpsb
sbb
add
mov
mov
test
or
push
dec
mov
push
pop
es
lcall
mov
adc
aas
cwtl
add
sbb
add
push
adc
mov
and
sbb
inc
inc
dec
sti
jnp
dec
stos
mov
push
test
xchg
sbbl
pop
ja
jns
add
in
iret
jb
aas
jl
das
mov
mov
aam
arpl
sub
or
es
xor
sub
add
add
sub
pop
sahf
out
cmpsl
lock
out
jp
cmc
arpl
mov
lcall
xor
sbb
inc
mov
adc
js
loop
xchg
add
inc
mov
mov
scas
xor
pusha
pushf
xor
mov
pop
mov
pop
mov
mov
mov
xchg
and
fdivrs
lret
aam
sub
xchg
test
hlt
mov
push
pop
jle
fnstcw
test
sahf
mov
xchg
pop
dec
push
cmpsb
push
push
and
push
ret
out
sahf
cwtl
imul
xor
into
cs
pop
pop
shll
arpl
xor
aad
and
sub
pop
sub
fcoms
icebp
fidivl
add
push
jnp
inc
mov
sub
in
add
std
test
jge
and
and
mov
addr16
sub
je
xor
adc
xor
and
dec
adc
mov
lds
adc
mov
ret
test
xchg
out
cs
xorb
adc
xchg
pop
call
jmp
dec
pop
sbb
sbb
punpckhdq
andw
popf
jae
cmpsb
js
int
into
dec
push
scas
cli
shrd
outsl
cli
imul
sbb
fwait
cmp
jp
sbb
lock
push
imul
and
mov
cmpsl
xchg
imulb
push
rclb
jp
push
shrb
cmpsl
sub
incl
lret
dec
sub
cmp
mov
adc
loope
mov
and
jb
cmp
loop
mov
out
rorl
imul
fildll
data16
daa
pusha
mov
or
dec
fwait
mov
insb
lcall
rcrb
or
push
xor
fldt
jge
or
lret
scas
sbb
jg
test
jno
jecxz
lcall
ljmp
sti
mov
jb
mov
pop
pop
inc
add
xor
mov
leave
dec
xor
fsubr
inc
pop
add
rcll
loopne
lcall
cmp
clc
lods
push
cltd
sub
cmp
xor
loopne
cmp
mov
out
jne
daa
add
test
pop
push
mov
cmpsb
xor
jbe
ret
xchg
test
popa
or
xchg
sub
jmp
mov
test
mov
and
adc
movsb
cwtl
repnz
std
mov
cmpsl
dec
int3
xorb
mov
pusha
mov
mov
mov
lds
faddp
in
fwait
mov
and
pushf
sub
mov
inc
push
imul
pop
aad
fsubp
jbe
xchg
stos
fs
fnstsw
cltd
pop
lods
mov
pop
cld
out
xchg
call
aaa
jnp
outsl
pop
imul
adc
pop
int
mov
lods
push
es
lret
jl
adc
mov
cld
lcall
jno
jmp
sub
jg
mov
inc
add
scas
inc
sub
sub
popf
gs
loopne
cltd
shrl
ss
cmc
lcall
cmp
mov
lret
cltd
jecxz
movsb
mov
test
rol
stos
sub
sbb
and
decb
xchg
xchg
sbb
aas
lcall
or
pushf
xchg
xor
test
xlat
je
cmp
insl
or
data16
dec
enter
push
mull
push
movsb
shll
das
push
push
lods
test
ret
in
push
fwait
cmp
cltd
cmp
test
push
lret
sub
cmp
jl
mov
xchg
es
mov
ss
movsb
jg
arpl
add
add
and
jno
stos
rorb
in
jns
jnp
push
cmpsb
jae
imul
xchg
sbb
jnp
pop
aas
scas
data16
sbb
bound
std
lea
and
sub
xor
inc
pop
or
or
pop
rcl
data16
test
enter
sub
rcrl
popf
jo
fldt
mov
mov
mov
sub
in
mov
add
into
fcomps
sub
es
loop
sub
loop
jbe
sub
cmp
or
out
dec
roll
or
pop
stos
mov
mov
scas
popf
addr16
icebp
add
rorb
dec
shlb
ficomps
sub
test
sbb
lret
in
jmp
mov
repnz
mov
mov
sahf
in
popf
sbb
das
xor
adc
pop
stos
pop
shll
sti
or
mov
movsb
push
in
add
mov
es
aad
jg
fwait
push
icebp
in
cmp
inc
lahf
jmp
inc
nop
xchg
shlb
fsubl
xor
jle
repz
fwait
sub
add
add
rcl
push
mov
pop
je
loop
test
dec
xor
jno
dec
mov
fdivrl
sarl
adc
lcall
adc
sub
pop
cmp
sbb
in
sti
imul
jg
insl
inc
in
mov
and
cltd
jmp
inc
das
into
pop
popa
addr16
jne
cmc
xor
fadds
aas
xchg
pusha
pop
test
imull
jmp
stos
sti
sbb
jl
mov
mov
sbb
imul
cmp
mov
mov
add
inc
pop
gs
lock
fcom
pop
or
shrl
sti
mov
jg
sbb
mov
fwait
ss
fcoml
lret
mov
fs
jp
push
aas
xchg
jo
or
mov
rcl
ret
xor
pop
cmp
inc
outsb
sub
pop
xchg
stos
push
adc
push
and
push
jb,pn
ret
jmp
xor
jo
test
dec
sbb
xor
mov
orb
jb
or
pop
push
pop
push
mov
and
addr16
xchg
sahf
pusha
aam
and
xor
rcl
cmp
inc
xor
push
mov
jno
cltd
mov
sub
dec
dec
mov
dec
add
pop
jb
mov
push
addr16
iret
xor
add
clc
cmpsb
push
pop
push
xor
in
adc
xchg
dec
xchg
add
pop
pop
xchg
into
push
xchg
xor
arpl
mov
loopne
popf
out
sub
or
cmpsl
mov
mov
lret
xor
mov
xchg
xchg
xor
xchg
jns
xor
jp
stos
into
fwait
mov
faddl
pop
rcrb
xor
paddd
jne
mov
rcrb
inc
outsl
dec
mov
add
jo
jl
inc
add
pop
dec
cmp
dec
xor
cmp
xchg
lret
pop
cmc
in
loop
xchg
stos
push
lret
pop
int
sbb
testl
dec
push
inc
lret
es
mov
jmp
mov
push
inc
rolb
addr16
ljmp
sub
sti
cmp
fs
pop
ja
add
jo
imul
les
jbe
leave
lods
out
js
push
inc
aas
nop
or
adc
fidivrl
pop
aam
or
mov
jo
stos
pop
ja
xchg
inc
cli
cmp
or
mov
mov
fadds
sbb
sahf
rolb
js
cmp
push
cmp
pushf
mov
add
inc
jne
cmp
imul
out
xor
test
cmp
ficoml
add
inc
push
mov
dec
mov
mov
subb
jle
lods
stos
aam
jg
sahf
jne
jg
push
stos
shrb
shrb
dec
mov
subl
adc
mov
mov
mov
jne
pop
ja
pop
sub
push
jl
dec
or
dec
mov
jg
xor
and
inc
movsl
pop
xor
out
aas
and
or
out
mov
pop
push
lret
adc
in
jnp
fisttpl
dec
xor
call
push
push
mov
leave
mov
stc
repz
pop
cmp
lcall
sbb
ret
scas
dec
shrl
xchg
es
adc
in
mov
das
daa
aaa
add
add
mov
xlat
fistl
lock
fcmove
add
je
pop
sbb
mov
push
jbe
mov
xchg
push
lds
fldenv
inc
ret
stc
mov
or
aaa
fmull
adc
loop
push
idivb
cmp
or
mov
inc
lret
sub
adc
inc
adc
xor
adc
dec
adc
pop
adc
add
add
dec
adc
pop
adc
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
