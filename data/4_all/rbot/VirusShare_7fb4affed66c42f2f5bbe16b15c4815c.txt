xchg
repnz
dec
daa
stc
cmpsb
mov
int3
push
test
sub
push
ja
xlat
adc
repz
arpl
push
lret
jbe
addb
mov
in
lods
dec
push
fistps
scas
xchg
xorl
adc
jmp
xchg
or
lods
xor
inc
mov
adc
sbb
pop
lret
divb
pusha
out
movsl
or
xchg
out
mov
shrl
fsts
inc
push
lods
andb
out
mov
in
mov
aas
stos
mov
cmc
cmp
or
mov
loop
or
lds
dec
ljmp
push
push
jne
xchg
jp
xchg
out
test
into
aas
mov
dec
pop
pop
cmp
pop
hlt
or
sbb
fwait
mov
insl
into
data16
dec
inc
lock
add
js
stc
xchg
jmp
push
test
out
imul
dec
cmpb
sub
pop
out
adc
jl
ja
add
stos
xchg
subb
ja
add
int3
sbb
add
add
add
dec
mov
sub
lret
dec
cmp
mov
dec
scas
data16
jno
xchg
in
dec
fidivl
lock
add
in
aaa
and
mov
ljmp
imul
fwait
pop
fcoms
mov
pop
shlb
ja
or
add
mov
mov
daa
fs
mov
sub
pop
jmp
dec
mov
cmp
dec
mov
pop
or
out
scas
push
mov
mov
xor
push
cwtl
data16
xchg
dec
adc
pop
cltd
es
cmp
xor
nop
or
sbb
sti
push
push
jg
enter
lcall
xlat
outsb
jg
das
fistpl
sahf
test
ficompl
test
stc
roll
jo
dec
les
sahf
fldt
es
xchg
mov
sub
lea
les
mov
push
sbb
inc
cmpsb
xchg
lahf
outsl
das
hlt
push
fldcw
xchg
mov
int3
outsb
movsl
xor
mov
mov
fs
js
xlat
jl
pop
aad
mov
add
fidivl
xchg
push
pushf
adc
aad
insb
notl
mov
or
xchg
imul
lea
outsb
decb
adc
leave
xchg
pop
sbb
jp
adc
xor
orb
push
fucomp
add
add
dec
loope
cmp
popa
das
loope
xchg
nop
aas
xor
out
cmp
test
mov
add
push
or
data16
dec
pop
or
xchg
cmp
div
int
cs
cltd
mov
push
ret
xchg
xchg
fsts
mov
mov
aad
cmp
inc
xchg
inc
jmp
out
cwtl
xor
bound
dec
sub
lods
jp
loop
sbb
cmp
dec
jnp
sahf
insl
xchg
cmp
pop
rcrl
mov
in
lods
imul
dec
dec
xor
jnp
inc
orl
pop
lahf
leave
movsb
mov
lods
gs
in
sbb
cmp
push
icebp
inc
lahf
inc
ds
adc
hlt
or
sti
rol
out
in
ja
lret
sub
dec
mov
adc
lret
jmp
imul
adc
sti
cltd
mov
das
movsb
pop
sti
cli
xchg
mov
xchg
pop
repnz
push
movl
inc
js
xchg
adc
imul
inc
mov
mov
mov
sbb
jl
sub
sahf
fistps
mov
lea
les
outsb
das
not
adc
lret
xchg
or
es
push
sbb
sub
cwtl
imul
mull
in
js
test
and
icebp
aas
push
inc
cmpsl
pop
out
les
outsl
push
mov
jns
xchg
test
adc
js
jp
inc
dec
ficompl
jbe
mov
fidivs
pop
xchg
mov
add
mov
cmp
je
ret
aad
adc
arpl
mov
jae
pop
push
out
add
divb
add
test
jp
aas
orl
jmp
or
xor
out
test
popa
xor
rol
shlb
push
push
data16
inc
sahf
ja
lods
fidivrs
into
mov
xor
pop
sarl
or
fsts
js
pop
cmp
insl
outsb
ljmp
fidivrs
add
push
push
dec
jb
outsl
std
fnsave
int3
push
shr
dec
dec
push
cmp
xchg
inc
mulb
outsl
jbe
inc
shrb
jmp
mov
jno
rorb
testl
xor
cmp
push
push
mov
push
shrb
inc
lods
movsb
mov
imul
test
subb
mov
mov
aam
xchg
outsb
add
xor
mov
jecxz
lock
mov
or
inc
lods
sbb
sahf
shll
or
fsubrl
fists
mov
sub
mov
jmp
add
jne
dec
cmp
in
jo
loop
insl
shrb
add
sbb
xor
add
adc
mov
sarb
sahf
lds
outsl
mov
fistps
insb
mov
mov
push
scas
cmp
std
das
adc
cmpsb
imul
pop
stos
sbb
mov
idivl
pop
orl
ja
and
xor
sbb
fdiv
idivl
arpl
xchg
daa
int
add
dec
stos
mov
out
adc
mov
push
mov
inc
cmp
and
aas
mov
xchg
or
je
cmpsl
jg
xor
push
add
xor
sbb
rcr
mov
insb
ja
dec
lods
stc
jns
xchg
int
sub
and
mov
lock
inc
mov
mov
cmc
mov
mov
mov
xor
std
lods
aas
fmuls
nop
jge
add
add
cltd
pop
and
inc
clc
aad
sub
jle
mov
stos
pop
imul
mov
push
inc
ja
popf
push
dec
ds
adc
mov
scas
xchg
adc
mov
pop
pop
mov
out
insb
pop
jno
xchg
mov
out
push
outsb
in
rcl
subb
jo
fisttpl
in
mov
jae
lds
sbbl
lea
sub
fldt
adc
add
movsl
mov
mov
sbb
cld
mov
mov
out
xchg
dec
sub
int
jge
sub
addr16
pop
test
push
jl
pop
adc
pop
in
push
xchg
fidivl
in
scas
test
jns
jp
inc
cmp
stc
lret
sbb
stos
int3
xor
jp
inc
pop
inc
mov
jl
push
cli
inc
mov
nop
push
jbe
adc
mov
mov
cwtl
jl
out
inc
mov
push
lahf
stos
adc
xor
cltd
push
sbb
jl
and
jo
pushf
scas
subl
int3
adc
push
add
outsl
in
mov
ret
das
fldcw
ret
sbb
dec
std
jbe
mov
inc
push
sub
sub
out
pusha
pop
mov
cmpsb
cmp
mov
test
push
outsb
and
xchg
mov
sbb
sbb
pop
cmpsb
fisttpl
pop
test
icebp
cmpsl
pop
mov
mov
push
sbb
in
fdivp
pop
jl
ds
jbe
jge
cmpsl
push
ds
push
shl
push
push
xchg
dec
lods
subb
stos
or
mov
inc
sub
ljmp
and
pop
aaa
push
dec
ret
adc
pop
andb
fcoml
in
ret
mov
int
subb
stos
xor
xchg
je
sub
out
xchg
aas
enter
fldl
mov
or
dec
push
cmp
mov
xor
inc
js
jbe
sub
xor
idivb
mov
lret
xchg
xchg
cmp
movl
shlb
js
pop
insb
pushl
xchg
movsb
add
push
in
rcll
lods
xchg
xchg
dec
into
jl
idivl
mov
or
shl
test
jb
jae
pop
es
lock
les
mov
pop
pop
imul
add
fcomps
pop
fs
push
and
jnp
or
sahf
jmp
lahf
adc
lcall
inc
inc
addr16
test
mov
cmp
mov
pop
jle,pn
outsl
mov
jg
pop
jp
pop
andb
pop
jle
iret
adc
cmp
xchg
bound
inc
scas
cmp
pop
push
push
mov
int3
and
mov
jb
dec
cli
fdivs
icebp
jns
andl
push
push
cmp
cmpsl
mov
pop
popf
sub
jmp
jno
push
std
pop
sub
fimuls
and
dec
shll
fmuls
cs
cwtd
add
divb
icebp
pushf
shl
jp
pop
scas
push
push
in
lock
mov
jle
insb
ds
movsb
inc
pop
inc
cmpsb
in
xor
pop
jge
xor
xor
mov
rcrb
cltd
cltd
mov
and
jmp
icebp
mov
add
leave
jge
xor
sub
jmp
int3
mov
repnz
imul
or
xchg
push
inc
outsl
pop
sbb
push
icebp
mov
pop
push
add
cmp
xor
leave
inc
lea
mov
call
mov
push
out
dec
xor
in
lret
cmp
shlb
push
lods
push
pop
xor
push
pop
sbb
sarl
dec
and
loope
lret
fsubr
xchg
fisubrl
mov
lods
adc
pusha
inc
les
ret
enter
jp
enter
or
xchg
push
roll
push
mov
lods
xor
cmpsl
mov
mov
in
xor
test
push
fidivrl
out
cmpsb
arpl
test
movsb
and
sub
mov
inc
jecxz
jae
mov
add
lahf
loop
ljmp
or
rorb
lret
ret
pushf
dec
pop
lret
pop
mov
pushf
pop
or
hlt
sbb
and
and
pop
test
inc
mov
xor
shll
je
fwait
pusha
jbe
xor
push
inc
dec
into
push
push
fwait
clc
ds
ja
je
imul
push
jmp
lds
mov
cwtl
push
push
add
jmp
fiaddl
jnp
divb
lods
fwait
in
mov
mov
shlb
stc
ja
mov
rcrb
xorb
or
adc
push
mov
in
cmp
inc
sar
xchg
shrl
in
push
sbb
xor
rorb
inc
repz
mov
add
cmc
push
cmpsb
shll
adc
ss
pop
add
pop
dec
mov
call
call
xchg
adc
push
xor
cmp
sbb
cmp
push
cmp
icebp
movsb
xchg
jno
dec
jle
mov
mov
pop
mov
pop
and
in
imul
fldl
mov
ret
cmovge
and
xchg
sub
jo
fnstcw
pop
cmp
iret
adc
mov
sbb
pop
add
std
xor
or
bound
add
xor
inc
add
sti
push
pop
jge
lahf
fstp
mov
push
ret
mov
subb
lds
sbb
out
cmpsb
cmp
in
test
mov
or
pushf
test
sbb
cmp
push
pusha
sbb
jns
and
sbb
xchg
mov
mov
mov
aam
and
pop
rorb
aaa
dec
jno
lods
cmp
mov
into
dec
push
enter
adc
jb
loop
lahf
loopne
enter
jl
and
adc
aas
xor
loope
es
push
test
scas
adc
js
movsb
mov
dec
or
mov
jp
lods
loope
rcrl
psubsb
xlat
xor
adc
lock
arpl
pop
sbb
adc
adc
cmp
cwtl
or
sbb
ljmp
and
pop
out
and
aad
cmpsl
mov
ljmp
mov
jne
push
outsl
jecxz
pop
or
rolb
adc
cmp
push
cmp
mov
popa
pop
lods
test
cmp
cmp
loop
sub
cmpsb
mov
sti
out
xchg
pushf
and
cltd
cltd
insl
fildll
clc
sub
push
fwait
mull
lods
shll
int3
lea
nop
adc
clc
sub
enter
sub
cmp
mov
fnsetpm(287
scas
adc
gs
out
jae
sub
stos
fiadds
filds
mov
addb
or
dec
gs
out
jl
mov
jp
xchg
inc
aaa
cmp
pusha
out
out
std
sub
mov
cmc
enter
sub
adc
pop
leave
insb
jl
sbb
test
xchg
pop
xchg
inc
mov
incb
mov
mov
fucomi
in
xchg
inc
adc
push
jbe
scas
in
lods
fistps
lcall
int3
pop
cmp
jbe
sub
or
inc
jb
add
das
mov
inc
mov
jbe
cwtl
lcall
mov
cmp
pop
iret
cltd
movsb
mov
pop
adc
inc
xchg
popf
cmp
ss
inc
inc
ds
lds
adc
xchg
xor
ljmp
jb
fcmove
cwtl
in
sbb
cmp
mov
pop
jmp
rorl
cli
sub
push
xchg
test
pop
pop
xadd
outsl
lods
mov
aas
xor
push
addb
mov
loope
xor
push
push
rep
leave
int3
or
adc
sbb
bound
push
jne
adc
mov
lcall
dec
pop
lods
jnp
loop
jns
mov
jp
ret
in
push
push
xor
mov
pusha
shl
fxch
push
dec
sbb
nop
mov
xor
lock
cwtl
cmp
divl
imul
pop
in
push
lods
mov
sub
fidivl
adc
push
in
xchg
testb
outsl
fistps
shrl
test
push
mov
clc
sahf
in
iret
add
fisubs
push
push
pop
inc
push
cmpl
adc
lret
pop
adc
or
imul
ss
sub
xorb
or
fs
pushf
jae
dec
pop
test
mov
cmpsl
cli
clc
cli
in
iret
push
cmp
and
mov
cmp
dec
pop
add
lds
lahf
pop
mov
clc
ficomps
ljmp
repnz
sub
pop
scas
fwait
mov
mov
loopne
xchg
out
mov
inc
dec
andb
push
jae
mov
cwtl
xor
cltd
mov
mov
nop
icebp
stos
or
adc
mov
sbb
imul
pop
jmp
jmp
cltd
jp
sbb
pop
dec
sbb
pop
cmp
ret
push
aam
int
xchg
mov
dec
pop
ret
sbbl
std
add
jbe
mov
pop
or
lret
and
ds
pop
out
sub
jbe
js
mov
mov
push
gs
cmpsb
mov
icebp
inc
clc
or
mov
mov
mov
test
xchg
jp
sbb
sbb
ret
lahf
fiaddl
jp
or
loope
fists
loope
mov
cmp
or
andb
fadd
test
cmp
push
nop
in
xchg
or
add
jnp
cld
stc
lcall
mov
push
jbe
in
pop
adc
push
aas
daa
repz
xchg
mov
ret
in
xchg
fstpt
outsl
push
jns
in
push
lds
aad
shl
movq
pop
and
xchg
jae
or
mov
cmp
dec
outsb
xor
fwait
mov
xor
jbe
or
jae
aad
popf
outsl
rolb
call
dec
xchg
in
push
jb
xchg
cmpsl
in
pcmpgtd
mov
pop
cmp
and
lea
loope
out
adc
mov
test
mov
jae
test
mov
outsb
int3
stc
pop
sahf
mov
mov
xchg
xor
cltd
push
test
jmp
xchg
push
xchg
add
jecxz
sbb
add
push
pop
hlt
lock
and
mov
mov
das
jge
pop
in
int
push
fcomip
fstps
sbb
dec
add
jb
pop
mov
sub
push
lcall
sbb
or
sahf
sbb
mov
xor
push
fisttpl
pop
push
cmpsl
shlb
sub
xor
in
push
push
out
lock
scas
xor
add
into
bound
arpl
sahf
pop
addr16
enter
dec
xchg
aas
mov
testb
rcrl
addr16
add
add
add
sar
sbb
fs
push
mov
call
jecxz
clc
sahf
jmp
stos
push
fcmovnu
out
popa
subb
xor
test
cmp
sub
lock
cli
lret
and
cltd
adcl
outsl
add
or
pop
je
sbb
in
test
mov
popa
insb
movsl
out
les
cs
push
fisttps
dec
es
lcall
dec
xor
cmovno
lret
nop
pop
sub
or
jmp
fsubrl
jno
aam
shlb
pusha
sbb
pop
lods
int3
mov
inc
popf
mov
xchg
pop
inc
lcall
ljmp
inc
jmp
pop
fisubrl
or
std
jg
aaa
sub
lods
dec
mov
fisubs
add
and
mov
mov
cwtl
mov
and
xor
mov
mov
xchg
test
push
sbb
mov
mov
fsubrl
xor
andl
and
xchg
mov
mov
fdivrp
push
lret
pmaxub
das
data16
stos
in
clc
add
mov
subb
push
ret
mov
dec
shlb
xchg
cmp
jg
mov
out
and
adc
jmp
jp
add
repnz
fstpl
push
in
out
cmpsl
int3
mov
pop
pop
mov
pop
sti
and
cltd
cmp
out
icebp
fs
adc
sahf
and
jae
sbb
inc
sbb
hlt
xchg
pop
jecxz
push
pop
pop
cmp
outsb
ret
cld
pusha
std
mov
cmpl
fildll
scas
jno
enter
out
int
mov
mov
pop
dec
aas
sahf
xor
or
mull
mov
scas
mov
arpl
fcompl
decb
mov
pusha
dec
repnz
jno
mulb
repz
cmp
adc
inc
cmp
xchg
jb
pop
mov
adc
add
mov
out
jo
xchg
push
add
and
aam
push
mov
push
jl
jmp
or
scas
push
cmpsl
and
cmp
outsb
xchg
adc
outsb
cmp
mov
cmp
push
sub
enter
movsl
add
pop
add
mov
cmp
fidivrl
fnstenv
rcll
sbb
and
das
jbe
sub
sub
adcl
lea
divl
es
in
fdivrl
fwait
xor
movsb
nop
sbb
mov
ret
nop
adcb
lock
mov
sbb
mov
stos
in
sbb
lret
mov
arpl
insb
scas
sub
fisttps
or
adc
pop
mov
sbb
cli
test
xor
jmp
aaa
and
cwtl
fldcw
jae
call
pop
arpl
jb
inc
mov
push
cmp
jle
nop
out
leave
or
lahf
outsb
lock
xor
test
int
mov
jnp
fsubr
cltd
mov
push
dec
adc
jne
jb
ret
and
pop
sub
addr16
xor
outsb
push
fwait
mov
sub
repnz
pop
mul
insl
imul
loopne
mov
daa
cwtl
aad
cli
cmc
rorb
mov
cmp
cs
lods
mov
fsubrs
mov
sbb
addr16
dec
inc
test
sbb
pop
fsubrp
pop
cltd
xchg
mov
sub
inc
cmp
sub
sahf
adc
xor
pop
lea
repz
imul
mov
ds
roll
xor
sbb
int3
jp
jl
xchg
test
push
hlt
dec
xor
loope
out
inc
lcall
mov
mov
stc
movsl
fwait
adc
push
scas
or
adc
sahf
int
jae
gs
jg
cli
cmp
mulb
shrd
inc
push
imul
mov
inc
out
dec
in
cmp
mov
and
gs
outsb
fs
xchg
sub
dec
addb
pop
or
dec
test
jg
js
outsl
sahf
xchg
xlat
loop
sub
xchg
dec
fdivr
ljmp
mov
xchg
jecxz
push
iret
mov
cld
aad
add
dec
cwtl
push
lods
lds
push
add
add
mov
insb
sub
dec
stos
mov
std
jbe
mov
insl
xchg
std
sub
jbe
push
leave
aas
push
cmpsl
inc
addr16
inc
mov
add
mov
ficompl
outsb
insl
jge
jle
std
xchg
jns
es
loopne
jge
outsl
jne
fdivrp
je
cmp
pop
lcall
repz
sbb
enter
push
stos
push
ret
add
test
leave
sbb
lret
xor
sub
test
stc
or
inc
xchg
cmpsl
clc
outsb
aaa
aad
jl
mov
jne
pop
mov
dec
or
repnz
ret
xor
cmp
pop
xor
or
mov
and
xor
dec
xchg
or
aad
push
test
pusha
outsb
sbbl
mov
dec
mov
mov
mov
or
inc
out
mov
cmp
pop
cwtl
jb
fsts
pop
mov
inc
gs
mov
mov
enter
lds
or
xlat
push
shll
cmp
inc
in
xchg
cwtl
cld
addr16
jmp
int
mov
jnp
mov
adc
xor
dec
xchg
sub
and
inc
xor
xor
add
daa
cltd
shll
int3
or
shrl
and
add
mov
xchg
cmpl
fs
stos
mov
cmpsb
add
fiaddl
ret
call
cmp
pop
pushf
xchg
mov
add
pop
mov
jnp
push
adc
daa
push
jne
inc
pop
pop
xor
sahf
outsb
xchg
xor
cli
and
fs
xor
mov
or
mov
hlt
xchg
push
mov
jmp
icebp
add
into
push
pop
subl
in
mov
data16
push
lock
sub
ljmp
push
dec
xchg
xchg
faddp
sub
inc
xor
mov
inc
std
repnz
add
jo
dec
out
xor
insl
xor
cwtl
fwait
jb
pop
inc
outsl
fcoms
das
les
add
or
test
jmp
icebp
inc
stos
mov
cmpsl
test
pop
ficomps
push
test
mov
in
repnz
mov
or
test
xchg
xchg
lds
xlat
mov
pop
pushf
cmp
xor
das
add
lcall
pop
loop
add
xchg
insl
arpl
push
clc
popf
cmp
sbb
mov
js
push
push
pop
mov
test
arpl
xchg
sbb
lret
xchg
imul
add
arpl
jge
lea
push
jbe
dec
mov
xor
dec
adc
sti
and
push
mov
inc
cmpsb
shl
mov
xor
fists
sbb
push
mov
sti
add
pop
aaa
jg
cmpb
mov
out
push
lcall
inc
ret
mov
push
stc
push
fsub
lock
jle
js
iret
xchg
insb
insl
out
pop
dec
out
shl
das
pushf
dec
lods
mov
adc
cli
inc
iret
pop
inc
lahf
int3
add
insb
adc
mov
in
cmpsb
push
scas
out
dec
cltd
jbe
sub
mov
jmp
out
pop
popf
stc
jb
jbe
bound
dec
lock
outsb
pop
jmp
push
aaa
mov
icebp
jb
jbe
fninit
in
pop
or
mov
call
sub
inc
stos
inc
mov
imul
add
inc
fucomip
xlat
adc
int3
int3
lods
xchg
inc
add
or
rclb
int3
fsubrl
mov
push
cwtl
pop
flds
das
iret
pop
ret
xor
test
outsb
iret
push
sub
pop
jmp
push
movsl
loope
gs
sub
mov
adc
mov
xor
pop
shlb
mov
pop
dec
jns
push
add
add
ds
cmp
loope
mov
mov
pop
push
add
loopne
mov
mov
ss
cmp
mov
xlat
aaa
jb
movsl
aaa
daa
sahf
scas
lahf
push
movsb
pop
sub
mov
push
mov
jecxz
sbb
test
out
push
ja
test
sbb
mov
cli
sbb
inc
xor
push
push
fnstcw
dec
pop
jecxz
in
fstpl
inc
add
mov
pop
decb
mov
hlt
popa
call
xchg
sub
sub
dec
inc
lds
adc
push
jno
mov
test
cltd
int3
loop
not
ljmp
and
fists
mov
or
mov
jbe
add
aad
pop
dec
cwtl
fstl
jle
push
push
adc
arpl
clc
and
shll
lret
aam
test
mov
push
sub
mov
fcompl
test
lret
xchg
sbb
gs
xchg
and
push
in
xor
aad
mov
pop
or
sbb
cmpsb
cli
mov
rolb
jp
xchg
sub
loop
push
push
sbb
stos
mov
or
and
push
xchg
push
pop
cli
xchg
pop
aad
cmp
inc
push
mov
pmullw
sub
or
popf
inc
addb
shll
int3
mov
nop
call
inc
push
push
sarl
test
fmul
jge
and
push
insb
cmc
push
aas
mov
sub
jbe
and
movsb
jle
fisttpl
dec
imul
push
pop
push
cwtl
iret
loop
imul
mov
int3
inc
out
fcomps
test
pop
test
testb
out
insb
stos
xchg
add
adc
push
repz
lret
outsl
aam
sub
jp
or
lea
ret
ret
std
mov
cmpsl
mov
sbb
add
jno
mov
aad
cmp
sbb
das
maskmovq
js
negl
bound
xor
push
jecxz
mov
jbe
inc
mov
jo
jnp
jl
loope
and
dec
add
cmc
in
dec
sub
lahf
jle
xchg
adc
adc
into
sti
xchg
lds
mov
mov
cmpsb
ret
lock
outsb
and
mov
or
adc
pop
cwtl
push
push
outsl
mov
pop
inc
repnz
pop
xor
repz
fcompl
imul
test
aaa
pop
mov
popf
arpl
call
sub
pop
jo
cs
jbe
and
cmp
dec
xchg
stos
cmp
nop
inc
ja
test
add
stos
sub
aad
repnz
xor
pushw
imull
sbb
idivb
inc
mov
mov
push
pop
faddl
cmp
loopne
das
mov
stc
lods
je
outsb
or
test
sbb
lcall
jne
add
jp
pop
cltd
cmp
add
inc
cmpsl
mul
aad
dec
out
sub
dec
xorl
fmull
mov
and
mov
cli
popf
sti
push
in
shll
mov
mov
mov
fwait
push
sub
lods
lea
and
jmp
gs
jns
out
pop
popa
add
mov
sbb
xor
dec
sbb
test
outsl
insb
add
addr16
test
ret
jb
xchg
cmpsl
shlb
and
sbb
aad
sub
loope
pop
jge
xor
pop
std
and
xchg
push
push
push
icebp
or
shrl
or
dec
loop
pop
inc
adc
jle
movsb
pop
rcll
jnp
mov
push
jmp
mov
lret
cli
das
pop
push
sub
push
lock
sbb
sub
fsubl
xlat
and
jge
in
adcl
mov
pop
pop
or
test
mov
xchg
pop
fs
push
outsl
adc
imul
push
cmpsl
add
push
and
or
mov
pop
mov
jmp
and
xor
or
cmp
push
fwait
push
fistpl
loopne
rcl
mov
cmc
ja
jo
sbb
incb
into
dec
aas
push
clc
sbb
or
ss
cmpsb
into
pop
inc
mov
dec
jge
shll
jle
or
and
mov
xchg
mov
ret
outsl
cs
lods
cwtl
xchg
fdiv
push
or
pop
and
or
xchg
add
add
adc
dec
sub
loopne
jp
xchg
jmp
punpcklwd
ret
sub
popf
pusha
mov
bound
loop
fs
fildll
in
sub
pop
sar
mov
jle
lods
mov
test
popf
mov
clc
into
outsl
fs
aas
add
aad
sbb
icebp
jne
cmp
and
or
xchg
out
repnz
xchg
push
jbe
push
mov
pop
jbe
fdivs
rcrl
popf
gs
cltd
adcl
jge
sub
gs
dec
sbb
mov
arpl
xchg
pop
jg
push
idivb
rcrl
dec
inc
fcomp
or
sub
mov
dec
cmp
inc
mov
lcall
jo
sub
jg
int3
jne
imul
rcr
mov
or
pusha
inc
jmp
sub
and
mov
stos
pop
ss
insb
orl
cmp
mov
ds
push
inc
mov
push
or
jmp
xchg
push
scas
outsb
dec
fwait
xchg
adc
lods
sti
cmc
inc
lock
inc
stos
push
cmp
mov
pusha
or
out
xchg
ss
in
out
push
outsl
sub
mov
mov
or
fcomps
sub
push
cmp
stc
fnstcw
fs
mov
out
dec
cli
addr16
loopne
and
ljmp
setge
popf
int
les
or
pop
push
pop
lea
push
stos
jno
nop
mov
add
xor
xchg
or
pop
sub
nop
icebp
push
hlt
stos
mulb
scas
inc
jnp
imul
mov
fimull
ljmp
dec
push
sub
sbb
pop
inc
test
in
mov
sbb
mov
je
pop
dec
dec
cld
add
jmp
cmp
cs
inc
add
xchg
mov
sbb
push
xchg
dec
xchg
popl
xchg
xchg
pop
stos
pop
mov
ljmp
fstps
push
out
lods
lret
adcb
mov
cmp
inc
in
dec
add
outsb
fildll
jge
cmp
in
lods
inc
out
add
scas
data16
mov
dec
insb
sahf
inc
push
clc
in
imul
inc
inc
dec
clc
daa
stos
int
add
lahf
xor
inc
in
and
add
cmp
adc
cld
int
fcmove
rolb
pop
das
movsl
cmp
jb
sub
mull
std
push
add
ret
jnp
addb
cmpsl
fildl
or
and
mov
and
sbb
mov
stc
jmp
push
daa
adc
out
add
pop
cltd
scas
nop
pop
inc
dec
les
outsb
pop
mov
sub
mov
ret
jb
jecxz
xor
push
add
and
rolb
jmp
push
mov
fadd
push
mov
jecxz
push
cltd
ret
loopne
adc
lea
out
cld
add
mov
sti
lret
fcompl
xchg
push
iret
pop
push
add
push
mov
pop
inc
outsl
enter
sahf
scas
xchg
mov
fwait
cmp
cmc
aad
popa
push
cmp
or
sbb
fists
out
xor
xchg
mov
jno
pop
sub
push
daa
sub
cmp
push
loope
cld
jecxz
inc
push
xchg
lret
lods
push
icebp
xchg
lcall
mov
mov
shlb
inc
sbb
xor
outsb
xchg
cmpb
add
push
jbe
loopne
pop
adc
icebp
data16
pop
jbe
add
test
sbb
push
pop
mov
aam
dec
inc
add
test
cltd
jg
add
negl
xchg
jbe
push
pop
add
ja
mov
mov
imul
adcl
xchg
ds
mov
cli
inc
cmp
clc
lea
xchg
and
jne
xchg
cld
enter
stc
and
lds
into
pop
push
sub
mov
fisubrl
leave
mov
inc
mov
jl
pusha
fcmovnb
push
mov
sub
pop
add
or
fs
dec
clc
push
fnstsw
push
fistl
leave
dec
imul
into
sub
xor
test
lock
pop
xchg
push
xchg
mov
mov
mov
sbb
sbb
jae
inc
cmpsl
lods
imul
jno
jno
pop
adcb
andl
sub
fists
test
mov
dec
in
xlat
fdivl
push
push
jg
mov
scas
xchg
or
into
sbb
cmpsl
jae
fsubrs
inc
lret
cmp
cmpsl
and
sub
imul
rorl
cmp
inc
cld
repz
imul
mov
popf
stc
call
cli
in
mov
jl
fs
outsl
lock
fs
mov
cmp
xchg
dec
int
adc
ja
arpl
ljmp
jmp
nop
iret
sti
xor
xor
jns
pop
inc
adcb
dec
movsb
fsubr
xor
into
jp
test
fadds
push
jo
in
mov
mov
testb
cmp
out
adc
dec
lods
pop
or
lret
mov
inc
test
fs
js
aad
jp
shlb
sub
imul
xchg
lods
out
mov
mov
push
pop
stos
imul
enter
jae
dec
enter
push
add
add
inc
subb
xchg
add
mov
jg
fadds
aaa
hlt
sub
inc
push
cmp
push
lret
inc
dec
movl
cmp
mov
fs
add
lods
rcrl
je
push
lret
sbb
mov
sarl
adc
push
or
cltd
mov
mov
xchg
mov
orb
hlt
push
imul
sub
push
shll
inc
sbb
adc
sub
hlt
shlb
data16
loopne
dec
sub
pop
fxch
add
cmp
and
leave
sub
rolb
xor
popl
mov
hlt
out
lods
mov
lcall
mov
xor
imul
push
or
cmc
cmp
inc
fs
push
bound
ret
test
mov
dec
lock
je
push
pop
xor
loope
pop
push
cmpsb
ds
std
mov
enter
xchg
sbb
lods
push
out
call
ficoms
aad
pop
dec
jbe
xor
fmull
mov
or
sub
push
push
jns
mov
testl
int
ds
aas
sub
roll
or
pop
sub
sbb
dec
push
xor
or
xchg
cmp
push
push
sarb
lcall
int
sar
mov
sub
ljmp
dec
insb
pop
cld
rorb
sti
outsb
call
vcvttsd2si
mov
pop
aam
scas
mov
jg
jle
mov
sbb
mov
cmpb
lcall
mov
pop
or
addr16
jnp
insb
popa
out
push
mov
push
push
mov
roll
fcmovnbe
dec
xchg
nop
lea
in
mov
push
les
inc
addl
cmp
data16
lret
jbe
and
mov
adc
pop
into
xchg
mulb
lret
pop
test
push
jbe
adc
xchg
mov
push
aad
jae
adc
push
adc
call
dec
das
aaa
push
inc
and
dec
push
mov
inc
dec
cmpsb
jns
add
test
pop
scas
sub
inc
mov
andl
mov
and
test
xchg
je
dec
ss
ret
sbb
mov
xlat
fwait
xchg
hlt
stos
or
out
and
repz
insl
jb
lcall
mov
mov
lret
scas
pop
jbe
notb
sbb
dec
mov
pop
lcall
and
out
fwait
cmpsb
push
push
shr
aam
xor
pop
fnsave
pop
sub
sbb
add
mov
push
mov
sarl
pop
data16
imul
cmp
repnz
mov
aad
jl
inc
dec
cmp
in
data16
jle
mov
push
pop
leave
mov
cmp
jno
shrl
repnz
cmp
adc
mov
or
decb
sbb
insb
cli
mov
xchg
cmp
jbe
int
cmp
sub
inc
mov
arpl
fidivrs
jbe
scas
mov
roll
inc
mov
push
jl
fildll
cwtl
mov
insb
adc
pop
dec
roll
adc
imul
mov
push
sbb
imul
cmp
xchg
and
je
hlt
les
or
mov
mov
pop
xor
rcr
adc
pop
xchg
cmpsl
inc
xlat
cwtl
test
xchg
mov
sub
in
mov
pop
in
imul
jo
push
dec
mov
pop
sbb
pop
ror
adc
pavgw
cmpl
cmp
imul
mov
loop
pop
pop
movsl
in
sub
lcall
xchg
fsubs
pop
fiadds
mov
subl
movlps
and
cmp
aas
daa
jbe
and
clc
sbb
gs
lock
cmc
cmp
mov
push
test
add
int3
loop
inc
sub
cwtl
pop
pop
push
jmp
push
stos
lods
xor
repnz
jno
lea
movsl
scas
cld
jge
in
in
pop
mov
cwtl
icebp
sbb
jae
push
enter
inc
dec
shl
ja
cmp
repz
sub
xor
cwtl
arpl
jno
out
cmpxchg
or
hlt
push
call
mov
xchg
pop
dec
in
xor
test
imul
lock
frstor
imul
scas
jno
insl
in
btc
cmp
push
outsb
pop
insb
ret
mov
xchg
sti
in
mov
cmp
pop
insb
push
out
xchg
dec
icebp
aas
ds
adc
ret
aas
mov
inc
push
lea
int3
stos
jo
scas
adc
rcrl
and
jns
mov
sub
mov
pusha
mov
jl
cld
cltd
push
xor
nop
sub
push
sbb
lods
cmp
popf
push
xchg
jne
lahf
roll
push
sbb
xor
out
hlt
test
enter
imul
lret
es
out
add
lods
leave
ficomps
fsubp
or
sbb
dec
scas
out
cmpsl
sub
inc
mov
iret
lea
lods
lea
test
inc
push
and
pop
jmp
cwtl
jne
bound
andl
insl
enter
xchg
lcall
shlb
sti
movsb
in
sub
adc
push
push
adc
adc
adc
push
push
mov
mov
adc
ret
loop
dec
or
jbe
pop
adcl
and
xor
mov
enter
shlb
xor
pop
icebp
jl
cmp
xlat
push
aas
fldcw
lods
cltd
adc
lret
and
add
lods
or
mov
mov
dec
and
mov
test
mulb
add
xchg
pop
cmp
jno
gs
cmp
or
pop
jae
cmp
imul
mov
sub
mulb
fmul
cmp
dec
fwait
dec
outsl
mul
cmp
sbb
out
mov
sub
stc
lcall
adc
test
pushf
adc
insl
and
mov
iret
dec
sahf
inc
scas
sub
jno
jp
idivb
and
add
imul
push
scas
sbb
mov
add
leave
jge
nopl
sti
inc
jecxz
push
fidivl
mov
pop
push
cmc
movsb
ret
mov
ljmp
push
cwtl
push
lcall
imul
inc
ficoml
add
pop
and
jbe
mov
iret
int3
lcall
jbe
push
imul
and
mov
out
push
es
ss
dec
mov
xor
in
jmp
and
sub
mov
sbb
enter
imul
add
shl
inc
lret
jg
rolb
push
dec
push
push
jg
mov
mov
jne,pn
pushf
push
js
aad
mov
outsl
sbb
mov
dec
xchg
sbb
lcall
xchg
cmp
popa
mov
scas
lahf
jge
inc
or
rcrb
sbb
aas
sub
cmp
adc
adc
cmp
notb
cmc
xchg
mov
or
push
pop
add
or
sbb
or
push
movsb
insb
out
je
stos
aad
stos
mov
jbe
fsts
stc
rclb
adc
lcall
sub
pop
push
lret
or
adc
cmp
pushl
or
mov
stc
inc
xor
push
out
xchg
cmp
cmpb
stc
fnstsw
mov
xor
xor
pop
push
cmp
pop
mov
sbb
mov
cld
imul
fbstp
jp
jmp
push
xor
pop
or
cmp
es
add
es
add
jmp
lret
outsl
add
xchg
sub
bound
inc
xchg
repnz
push
xchg
xor
enter
or
fcmovb
ret
jecxz
and
mov
out
jns
pop
pop
dec
jb
pop
les
mov
cmp
or
push
test
out
dec
xchg
cmp
xchg
adc
xor
or
std
gs
adc
jo
pop
int
sbb
sub
das
push
dec
aas
out
test
mov
clc
dec
cwtl
mov
imul
sarb
scas
push
sahf
es
fcompl
fldenv
mull
in
mov
mov
cs
imul
cmpsl
mov
adc
mov
cmp
push
sbb
adc
out
mov
ja
fwait
leave
xchg
stc
clc
fiadds
adc
xchg
pop
shlb
repz
inc
push
sub
pop
mov
xchg
imul
daa
lahf
jl
shrb
enter
sbb
and
mov
aad
clc
cld
cmp
fdivl
popa
aam
jl
aad
outsb
bnd
lods
push
mov
xchg
fs
dec
fnstenv
push
sahf
jne
xchg
push
adc
imul
fwait
int
ret
jne
cmp
mov
xchg
inc
or
test
xchg
and
aad
in
dec
jmp
fwait
stos
movsl
mov
fsubp
push
lea
icebp
dec
leave
mov
xchg
pop
mov
es
je
mull
leave
pop
lea
sahf
repnz
cmpb
pop
mov
repnz
ss
jp
mov
push
cmp
pop
cmp
negl
mov
xchg
adc
inc
aad
inc
ds
cmp
je
int
pusha
je
dec
lods
inc
cmp
shlb
ljmp
inc
das
icebp
push
cmpsb
leave
push
or
jg
adc
xchg
push
cltd
xor
jmp
xchg
push
push
push
xor
jmp
dec
enter
out
mov
jecxz
mov
scas
outsl
addr16
sahf
je
add
xchg
shlb
ss
lcall
aam
xlat
pop
lcall
jb
inc
nop
popa
popa
cmp
ljmp
adc
xor
std
pop
mov
cmp
cld
add
add
lea
ret
push
aas
js
xchg
es
pop
push
repz
dec
orb
xchg
push
pop
scas
cmpsb
jo
or
and
clc
les
movb
jl
fldcw
pop
ljmp
cmp
in
cs
sub
mov
testl
imul
jae
xlat
add
out
cmpsb
bound
xchg
inc
movsb
push
push
push
icebp
push
ja
int3
movsl
or
mov
cmp
mov
std
xchg
sub
imul
inc
and
sbbb
or
lret
sahf
inc
xchg
push
cmp
push
testb
imul
jb
cmpsb
sbb
orb
jbe
sub
fisttps
dec
incl
sti
push
push
dec
dec
stos
fdivl
rcll
nop
sahf
and
xchg
jo
mov
ds
jo
pusha
cli
pop
mov
mov
pop
rcrb
xchg
roll
enter
add
sar
repnz
divb
rorb
mov
divl
in
mov
jl
push
das
test
imul
or
jbe
sub
es
xor
ret
push
aaa
shll
loopne
sbb
jb
aam
or
lock
mov
dec
fsubs
test
mov
xchg
popa
cmp
ja
mov
and
xchg
cmpsb
xchg
push
adc
jbe
xchg
lods
cwtl
inc
test
shrl
or
int3
or
popa
dec
xchg
push
mov
cmp
mov
push
ljmp
pop
bound
es
sub
dec
jo
pusha
sbb
or
ret
push
inc
mov
sbbl
outsl
pop
xchg
rcrl
testb
pop
cmpsl
add
sbb
push
xchg
add
mov
mov
cmp
mov
adc
rcll
push
loopne
or
dec
mov
notb
fs
pop
pop
mov
adc
jns
lods
hlt
call
hlt
push
xor
jmp
clc
fwait
sub
lods
inc
jo
js
call
pop
mov
shlb
std
int3
scas
jo
dec
sti
push
pop
dec
jo
pusha
shrb
push
mov
cmp
call
dec
cmp
or
mov
imul
inc
pop
ljmp
pop
mov
ljmp
xchg
jne
mulb
mov
mov
xor
mov
clc
outsb
mov
nop
ss
fs
aam
or
jnp
lcall
call
or
fnstcw
mov
mov
pusha
stos
mov
add
jb
dec
or
orb
incb
or
xchg
add
mov
fwait
sbb
addr16
mov
je
sbb
mov
nop
push
iret
mov
sbb
push
imul
dec
in
lret
add
insb
pusha
xchg
clc
cld
call
sub
dec
mov
push
fidivs
xchg
push
pop
ret
inc
sarl
mov
dec
mov
add
pop
mov
and
jbe
stos
test
pop
dec
mov
test
jno
mov
movsl
sbb
adc
fcompl
xor
xor
jb
shrl
mov
mov
sbb
addr16
fisubrs
dec
mov
xlat
push
push
jmp
sub
or
mov
push
dec
mov
lahf
es
fadd
jo
mov
insb
repz
imul
push
mov
ss
out
orb
imul
imul
mull
mov
je
lock
jne
leave
or
loope
aad
loopne
insb
fnstcw
bound
push
stos
enter
pop
pop
add
lods
fidivl
es
les
push
jecxz
push
cwtl
xchg
outsb
xor
and
push
cmp
and
xchg
fldcw
push
push
jns
cmp
cwtl
int
dec
pusha
mov
aad
pop
mov
clc
mov
repnz
lcall
test
not
icebp
outsl
mov
push
je
movb
jge
push
sub
xchg
fsubl
push
lods
dec
xor
mov
jbe
inc
and
scas
lea
dec
adc
out
aad
dec
sarb
fdivrp
stos
leave
test
lea
xchg
mov
add
enter
mov
pop
pop
dec
test
push
xchg
mov
cmp
xchg
push
ret
dec
mov
cli
sbb
inc
xchg
imul
sbbb
xchg
lods
int3
inc
jbe
out
movsl
sub
pop
ret
add
mov
call
push
ds
inc
movsb
test
daa
int3
xchg
pop
dec
mov
jg
fisttps
push
mov
mov
cmpsb
xchg
aam
ret
push
mov
cs
pop
test
imull
xchg
inc
dec
inc
jmp
mov
push
addr16
dec
mov
fnsave
insb
push
mov
dec
addl
aam
shll
dec
ret
add
jo
xchg
divl
mov
xchg
shl
lahf
daa
mov
imul
outsb
out
fstps
negb
push
xlat
xchg
ret
push
jbe
xorb
dec
test
mov
jb
dec
sub
lret
sbb
sarl
xor
fmul
enter
mov
in
xchg
repnz
cs
fadds
sub
in
jmp
mov
sub
push
push
mov
dec
jnp
adc
loop
xchg
ror
aas
adc
cmpl
pushf
or
sub
mov
mov
lahf
dec
loop
and
xchg
mov
sbb
lret
movsl
add
sbb
push
cld
outsb
das
add
stos
push
call
mov
lods
shlb
lret
push
inc
loop
cmp
xchg
mov
in
inc
xchg
cltd
mov
popf
push
or
inc
stos
sub
jae
rcr
mov
mov
pop
xor
inc
pop
and
shr
mov
insl
call
and
lret
pop
jg
or
inc
mov
aam
dec
out
cld
test
sti
aam
shll
bound
lret
mov
adcl
cli
xchg
loope
cmp
add
ja
in
dec
dec
xor
push
push
push
testl
fcom
pop
test
loopne
imull
xor
add
xchg
ret
jg
shll
jl
inc
xchg
and
fbld
es
xor
add
mov
dec
rol
add
add
in
add
out
mov
inc
stos
pop
shll
sub
xor
jns
lods
in
push
dec
push
test
jno
mov
int
dec
sbb
xchg
test
sub
fisubs
jae
or
mov
leave
fmuls
fildll
outsl
cltd
cwtl
adc
dec
test
jg
test
cld
mov
mov
divl
fstpl
dec
lcall
xor
in
inc
popf
adcl
jnp
testb
int
xchg
xchg
fmuls
mov
je
lds
bound
and
pop
pop
mov
std
cmp
mov
pop
and
nop
iret
aam
pop
lds
mov
sbb
pop
lahf
xor
pop
or
add
mov
xor
sub
and
xlat
xchg
add
lea
mov
ret
gs
lock
mov
inc
jg
ljmp
jmp
sahf
arpl
lds
int3
fsts
arpl
jbe
mov
sub
mov
mov
test
fmull
dec
enter
cmp
enter
sarl
mov
cmp
pop
inc
dec
push
jle
dec
lret
ds
loop
lcall
push
xchg
leave
adc
dec
push
fadd
addb
xchg
cmpsl
addl
sti
push
test
xor
xlat
sbb
pop
fs
or
inc
mov
stos
sub
mov
test
bound
push
dec
mov
aas
mov
dec
push
dec
cmp
xchg
test
out
lds
adc
arpl
xchg
fdivrs
lret
sbb
jle
cmpsl
std
aad
jb
lds
xchg
mov
add
sbb
xor
push
mov
pop
test
adc
inc
xchg
lcall
out
test
lret
pushf
push
iret
push
push
xor
out
lahf
scas
mov
sbb
cmp
inc
mov
jbe
pop
add
stos
jb
mov
stc
dec
jp
ja
int3
inc
xchg
imul
mov
jb
shlb
inc
mov
and
lock
cmc
jge
shll
jl
cwtl
stc
std
insl
xor
and
dec
into
enter
stc
mov
xchg
test
mov
loope
add
popa
cmp
mov
dec
mov
cmp
pusha
and
xchg
inc
test
jae
icebp
cld
in
cmp
icebp
xchg
sub
mov
inc
test
sarb
sbbb
dec
daa
cmovnp
jmp
movl
inc
lret
xor
addb
mov
fadds
nop
and
jns
cmpsb
and
mov
into
inc
jmp
fnstcw
mov
test
inc
sbb
dec
inc
dec
dec
sbb
std
jl
repnz
cmpsl
add
mov
fstpl
das
mov
testl
arpl
test
push
mov
add
sub
mov
cwtl
in
push
dec
cmp
sub
lahf
mov
mov
inc
inc
xor
loop
and
loop
nop
cmp
iret
popf
dec
outsl
and
dec
movsb
dec
adc
incl
test
mov
mov
mov
and
sbb
add
push
cmp
mov
xor
or
int3
mov
adc
nop
xchg
push
cmpsl
cli
dec
pop
adc
push
push
test
sahf
iret
ljmp
pop
or
adc
add
cmp
notb
sbb
dec
test
insb
call
dec
and
pop
mov
repnz
mov
push
mov
rorb
js
mov
and
mov
cltd
add
xchg
dec
jb
push
sbb
jbe
cwtl
addr16
int
mov
xchg
loope
or
cs
std
cwtl
mov
jbe
leave
and
aad
out
add
in
adc
cmp
rorb
add
lods
in
cmp
push
lahf
inc
mov
imul
jg
stc
jp
ss
in
inc
push
or
je
pop
data16
repnz
adc
push
mov
das
jg
inc
outsb
xchg
xchg
jmp
movsl
dec
mov
mov
sbb
addb
fldl
jo
out
in
fstpl
sbb
int
pop
in
push
add
mov
adc
xor
dec
mov
test
dec
xchg
mov
sub
xchg
mov
xchg
inc
fidivrs
lret
call
adcl
pop
inc
insl
push
sbb
pop
xchg
dec
push
rclb
pop
insb
sbb
dec
add
icebp
out
dec
xlat
gs
clc
ds
outsb
cmp
lret
js
dec
mov
inc
xlat
test
out
xor
adc
jg
push
test
jns
xor
mov
ficoml
sbb
inc
adc
clc
mov
dec
daa
or
imul
cmc
sbbb
gs
lods
push
pusha
sub
xchg
mov
mov
rorb
ds
jno
ret
dec
and
outsl
and
inc
mov
push
mov
add
lcall
fstpt
insl
lret
xorb
and
inc
enter
xchg
xchg
mov
fldcw
and
mov
imul
fisubrl
sub
xor
fidivrs
jp
mov
inc
int
inc
or
hlt
mov
in
stc
rcll
rorb
stos
add
push
jmp
outsl
and
lea
inc
push
xchg
lods
imull
push
into
sub
fcompl
popa
cmp
pushl
add
dec
xor
pop
xchg
jnp
push
push
ss
dec
dec
rol
das
daa
dec
xchg
push
xor
mov
mov
dec
add
xchg
xchg
mov
xchg
inc
shll
push
ja
test
xchg
shll
ret
leave
dec
inc
fidivrs
shrb
lret
pop
lods
pop
lcall
mov
cmp
push
lods
jns
jmp
pop
mov
cli
lcall
sbb
ja
in
lcall
xor
jns
sahf
mov
subl
loope
xor
push
insl
pop
adc
enter
dec
sbb
jle
rcrb
and
sti
push
pushf
ret
scas
shlb
lret
call
sub
jle
xchg
inc
jb
movsl
pop
ds
cli
jo
loop
mov
int
movsl
cmpsl
jns
stos
xchg
imul
dec
into
fs
inc
test
add
aas
adc
popa
and
push
mul
lret
popa
pusha
adc
or
cmpsb
mov
mov
pop
leave
outsb
nop
movsb
adc
fcomip
repz
repz
jno
adc
mov
pop
pop
inc
stos
leave
repnz
fucomi
arpl
push
idivb
xchg
lcall
cmp
lock
xor
sub
popf
enter
je
loop
pop
mov
mov
movsl
jl
cmp
push
jge
scas
lods
dec
popl
lock
mov
pop
ret
bound
adc
dec
outsl
out
lods
xor
dec
xchg
orl
lret
xor
into
arpl
cmp
or
rorl
leave
mov
mov
jno
jbe
nop
ljmp
dec
push
in
push
data16
ja
mov
adcb
jg
std
or
sbb
fisubrs
sbb
jnp
sbbl
inc
pop
push
in
adc
fldt
icebp
sbb
imul
xchg
pop
mov
push
addr16
lods
mov
mov
in
fwait
lahf
ljmp
xchg
cs
cmp
mov
xor
scas
inc
xchg
cld
mov
sti
xchg
xchg
jge
dec
imul
pop
mov
js
cwtl
in
shld
sbb
jp
popf
and
insl
inc
mov
in
in
lret
neg
loop
push
cmc
leave
push
mov
lahf
push
orl
pushf
icebp
repz
cmp
and
sbb
or
pop
popa
std
in
cld
and
repnz
stc
enter
ret
push
or
sbb
add
sbb
jbe
in
arpl
adc
bound
aaa
lahf
jmp
dec
add
pop
mov
and
sub
inc
ss
cld
aaa
sub
inc
fwait
fwait
ss
push
mov
pop
pop
or
in
add
push
loopne
cmp
stos
insl
or
fidivrl
push
lret
test
mov
cmp
inc
cmpsb
pusha
outsb
push
out
outsl
aas
sub
imull
ret
sbb
cs
in
daa
push
pop
in
insl
fs
sub
lds
lods
mov
ds
scas
cmp
push
popf
adc
cltd
sub
cltd
stos
cmp
xor
lods
pop
pusha
mov
dec
xchg
pop
or
xlat
movsb
push
dec
pop
mov
fcmovne
je
fwait
dec
movsb
insl
xchg
icebp
cwtl
add
mov
mov
or
divl
push
mov
dec
add
jnp
movsl
and
jp
cmp
xchg
mov
sbbb
sbb
pusha
cs
ror
in
repnz
outsb
inc
add
int
add
lcall
into
cmp
mov
xchg
adc
pop
lea
push
arpl
movsl
mov
push
add
xor
or
mov
shrl
inc
xor
cmpb
jmp
dec
and
xchg
in
aaa
testb
out
xchg
orb
icebp
dec
push
mov
sbb
sub
cmpb
subl
lahf
leave
ljmp
xor
mov
xchg
insl
add
push
inc
and
sti
movsl
jnp
aad
jo
dec
outsb
push
int3
xchg
fs
push
jne
mov
dec
je
add
fisttps
rcrl
lea
push
aad
repnz
pop
fsubs
xor
sub
loopne
mov
outsb
lods
iret
jecxz
xor
aaa
mov
or
or
pop
mov
dec
mull
mov
mov
jne
mov
and
xchg
xor
cmpsl
inc
dec
hlt
pop
outsl
repnz
or
rcrl
cmpb
inc
dec
inc
sti
xchg
pop
ljmp
push
inc
and
ja
mov
cs
loopne
fcoml
jbe
xchg
push
push
jo
lahf
jle
add
in
dec
faddl
daa
flds
lahf
stos
pop
loopne
aas
cli
mov
sbb
push
mov
push
xchg
andb
xchg
cld
call
or
mov
test
sbb
or
xchg
into
leave
pop
idivb
cmpsl
ds
mov
enter
sbb
sbb
iret
mov
pop
stos
enter
push
pop
jns
cmp
cwtl
sahf
jnp
or
xchg
shrb
lcall
mov
ja
push
pop
call
jecxz
cmc
in
cmp
sbb
insb
test
or
jmp
mov
pop
out
mov
push
mov
fsubp
cmp
shrb
jg
lret
rcll
dec
pop
dec
xchg
loopne
stc
pop
add
inc
mov
fs
xchg
cmc
rcll
pop
subl
addr16
mov
push
push
dec
loop
push
enter
sub
sbb
xor
scas
scas
lock
push
xchg
lahf
stos
int3
out
das
negb
push
xchg
and
or
les
jbe
test
lahf
repz
inc
mov
gs
mov
movsb
push
mov
shlb
imul
out
sub
inc
lods
xchg
xchg
outsb
mov
jl
jb
out
adc
out
sbb
pusha
inc
mov
jle
inc
inc
add
nop
adc
pop
sub
lds
jo
repnz
cwtl
lock
pusha
mov
push
int
notb
sti
pop
mov
test
mov
xchg
jno
insl
lods
sbb
push
call
xbegin
push
dec
in
scas
test
imulb
jo
pop
sub
cld
in
data16
dec
fs
outsl
adc
test
or
inc
or
outsb
jno
dec
out
loop
mov
cmp
lds
or
mov
inc
loop
or
stos
jbe
ja
sbb
test
stos
dec
mov
aaa
mov
xchg
add
pop
sbb
push
sbb
push
scas
out
ss
mulb
aas
enter
mov
jecxz
ficomps
jae
into
inc
sbb
mov
dec
or
pop
push
lahf
inc
dec
shl
dec
dec
jne
jmp
test
push
jbe
jle
push
int
jnp
xchg
daa
mov
xchg
das
arpl
dec
lods
xor
ja
arpl
inc
jle
lahf
and
dec
dec
push
dec
sahf
cli
jmp
jecxz
cmp
jb
jo
das
mov
lcall
mov
sbbb
stc
mov
dec
shll
scas
xor
dec
jb
jecxz
mov
pop
in
cli
scas
sarb
je
mov
fwait
mov
push
pop
add
push
push
stos
pop
imul
sbb
and
addb
mov
pop
and
sbb
dec
inc
test
mov
mov
sbb
fs
mov
xlat
jg
into
sti
push
ja
dec
and
mov
cmc
outsl
mov
decb
pop
sbb
aam
sub
repz
out
push
sahf
mov
xchg
xchg
and
gs
aas
mov
mov
push
dec
lods
sub
js
daa
rolb
pusha
sub
call
xlat
xchg
xchg
jno
lahf
xchg
dec
push
fmull
mov
imul
loop
or
inc
icebp
xchg
pop
jmp
jnp
in
jae
mov
pop
int3
push
std
add
aad
daa
push
xlat
bound
out
and
push
filds
daa
iret
ror
mov
xor
data16
mov
nop
add
push
sbbl
mov
data16
mov
sub
shl
aam
scas
pop
jge
aas
aam
jne
mov
scas
insb
outsl
fsubl
mov
in
sbb
mov
out
jg
inc
daa
dec
push
mov
mov
push
mov
dec
cltd
mov
jecxz
mov
stos
add
aaa
jae
lods
outsl
fcoml
bound
adc
rorl
setns
xchg
aaa
sahf
pop
or
jge
stc
push
pop
xchg
cwtl
cmp
sub
loop
dec
aaa
mov
push
adc
inc
dec
int3
or
pushf
je
mov
notl
iret
sarb
out
jbe
sti
lods
data16
pop
push
mov
mov
dec
cmc
loope
and
pushf
jmp
adc
incb
xchg
loope
sub
jl
fs
xor
fs
enter
dec
pop
and
psrlq
inc
and
out
inc
mov
jbe
call
inc
dec
aam
dec
xchg
outsb
jbe
loope
sub
add
push
popf
outsl
pop
insl
lret
or
push
mov
pop
mov
push
mov
ret
jp
sahf
adc
sub
es
outsb
xor
cmp
sbbl
dec
cmp
insl
sub
and
movsb
clc
mov
shlb
outsb
cld
outsl
push
fcomip
mov
addr16
sub
int3
inc
xor
aam
test
push
gs
add
je
mov
and
mov
mov
es
stos
insl
xor
lods
dec
fcmovnbe
push
inc
inc
adc
mov
and
mov
inc
xor
and
fs
mov
ds
cwtl
scas
les
push
xchg
sbb
mov
ds
cmp
dec
test
gs
in
jns
pop
ja
inc
mov
mov
lahf
out
mov
popa
pop
or
mov
dec
and
mov
sbb
movsb
push
sbb
shr
nop
adcl
bound
inc
push
cld
ds
mov
dec
mov
ja
dec
push
sub
fidivs
repz
adc
movsl
stc
dec
cli
xchg
pop
xor
pop
push
inc
repnz
dec
xchg
adc
jge
pop
ret
xor
std
mov
int3
ss
push
mov
adc
test
shrb
adc
add
jle
push
iret
sbb
xchg
xchg
repnz
pop
add
mov
stos
mov
mov
cmp
lret
adc
in
sbb
pop
inc
int3
ja
mov
cmp
jl
dec
sbb
outsl
pushf
adc
mov
jle
lods
jl
fistps
fcomps
or
and
add
push
and
jmp
fists
std
add
mov
out
jne
xor
lock
and
lcall
inc
or
out
gs
xor
sbb
mov
jge
out
fisttpl
xchg
outsb
add
or
subl
push
mov
rorl
in
mov
loopne
jns
fistps
xchg
sub
hlt
jo
lcall
clc
test
leave
ljmp
push
push
leave
jae
dec
inc
inc
and
pop
inc
mov
sub
sbb
loopne
or
sub
mov
mov
xlat
out
xchg
mov
cmp
outsb
sub
cmp
in
hlt
int3
mov
jbe
clc
out
outsb
aaa
movsl
lds
clc
in
ret
mov
aaa
pop
mov
push
setge
lret
adc
mov
incb
cmpsb
pop
jecxz
mov
stc
lds
xor
xchg
in
stos
jmp
xor
ljmp
adc
dec
fistpll
outsl
dec
add
addr16
sbb
push
cltd
aas
shrb
add
in
aad
pop
cmp
xchg
jb
les
insb
xor
push
sbb
xchg
getsec
mov
es
mov
xor
dec
sbb
sub
pop
rorb
outsl
sti
leave
xchg
mov
inc
push
cli
fwait
mov
gs
icebp
xor
ja
loope
sti
jle
push
outsb
in
push
jecxz
push
pop
fisttps
adc
dec
jb
mov
jae
shl
test
jo
pop
cwtl
enter
push
stc
scas
mov
and
mov
jbe
shrl
jne
repz
shrb
jns
cmpsb
paddb
sub
fistpl
pop
adc
push
movsb
push
mov
pop
mov
scas
fstps
outsl
lods
hlt
and
xchg
inc
les
push
out
xchg
mov
mov
insl
sbb
sub
mov
xchg
out
mov
shl
pop
or
aaa
dec
jp
sub
test
hlt
mov
andb
add
shrl
mov
mov
pop
insb
loope
xor
add
into
jmp
jb
mov
push
pop
div
lods
inc
lods
xchg
sbb
roll
adc
stc
and
jge
dec
sahf
gs
pop
cmpl
mov
push
cwtl
mulb
mov
hlt
lods
push
test
jl
mov
xor
add
scas
adc
pop
push
cmp
mov
xchg
arpl
inc
adc
lcall
outsl
popa
fmul
xor
loop
push
mov
rorl
sti
and
pop
xchg
std
lods
dec
xchg
or
cltd
fcoml
mov
bound
inc
sub
iret
shlb
jecxz
jb
xchg
push
in
ss
lret
cld
sub
jp
outsb
test
mov
fiadds
pop
ror
cltd
or
lock
mov
and
cmp
mov
mov
jb
test
and
or
bnd
mov
pop
inc
cmp
lea
incl
mov
push
divl
cmc
mov
cmpsb
popf
leave
enter
movsb
bound
sbb
xor
adc
xchg
inc
dec
fmull
push
mov
lods
dec
aaa
sub
jle
push
add
xor
mov
pop
cmp
pop
loop
in
or
fistpll
add
xlat
iret
loop
and
jbe
stos
and
inc
xchg
push
mov
mov
jle
ljmp
stos
fisubs
scas
aad
pop
aad
insl
dec
push
dec
mov
mov
sub
push
mov
sbb
pop
mov
jns
push
sbb
lret
scas
pop
and
std
roll
pop
dec
jno
shll
orl
test
jnp
pop
and
nop
mov
jnp
add
cmc
or
sbb
out
xchg
bound
pop
or
test
filds
shr
ja
inc
jl
xchg
jg
jp
add
push
xchg
mov
bnd
out
pop
ret
fcmovnbe
adc
pop
push
std
js
mov
mov
lcall
sbb
push
shlb
adc
iret
xchg
push
or
sub
cmp
fmulp
test
mov
shl
add
mov
jne
push
imul
jmp
imul
pop
push
mov
add
bound
lock
in
ljmp
into
push
ds
aaa
pushf
fwait
xchg
pop
imul
mull
andb
movsb
insl
jecxz
dec
adc
stos
int3
loopne
cs
cmp
xor
xor
sub
jno
push
add
pop
jp
mov
xchg
out
or
mov
mov
mov
push
dec
in
fldcw
mov
adc
mov
pusha
scas
inc
sub
jnp
movsl
insl
inc
lods
lea
lret
arpl
cmpsl
rcrl
sarb
into
sbb
out
rcr
pop
dec
int3
out
test
pop
push
sti
push
adc
hlt
xor
jne
sbb
xor
repnz
gs
push
mov
push
sbb
mov
jecxz
shlb
push
sbb
mov
jae
sub
mov
push
scas
lret
pop
pop
or
ret
sahf
cmp
cld
std
mov
imul
imul
imul
notb
mov
inc
push
lret
cmpsl
loope
clc
jno
data16
leave
arpl
sbb
inc
mov
add
ret
mov
add
pop
test
push
cmpsl
lods
push
sub
adc
add
cwtl
pop
xchg
loopne
jg
dec
stc
xor
imul
lods
mov
mov
or
outsl
add
pop
mov
push
in
clc
add
pusha
and
scas
mov
xchg
bound
jl
imul
loope
insl
and
sbb
test
push
stc
add
dec
add
mov
cmp
push
pop
pop
jns
sbb
xchg
outsb
outsb
lcall
dec
sbb
incl
imul
js
loop
xchg
mov
xor
lahf
inc
push
jb
xor
sbb
imul
sbb
clc
fistps
jle
pop
adc
lcall
into
movsb
mov
sbb
pop
mov
js
push
cmp
in
xchg
jg
jle
jbe
sbb
imul
sbb
pop
ds
dec
xor
xor
dec
jecxz
xchg
imul
push
inc
mov
outsb
push
fildll
mov
adc
enter
test
jbe
imul
imul
enter
jae
mull
jecxz
pop
jmp
test
sbb
add
into
dec
repnz
sti
cmp
xchg
lds
or
or
xor
or
adc
mov
mov
dec
mov
sbb
mov
inc
les
adc
jbe
xchg
into
push
xchg
fcmovnb
lock
fidivrl
fnstsw
push
sarb
mov
rcrl
adc
push
xlat
mov
jnp
mov
lcall
push
outsb
nop
sti
loop
jo
sub
divb
popf
popa
pop
test
gs
ret
in
sub
jecxz
or
imul
cmp
pop
mov
push
adc
loopne
and
pop
ss
xchg
icebp
loopne
pop
xlat
pop
pop
or
adc
cmp
jle
mov
lahf
mov
pop
popf
js
lahf
pop
cld
inc
stos
push
pop
sbb
pop
rcl
idivb
xor
jo
and
cwtl
jecxz
mov
mov
icebp
fidivs
cltd
aas
pop
mov
loope
sub
lea
inc
dec
int3
sub
inc
jecxz
mov
jnp
cltd
pushl
inc
imul
neg
js
jns
stos
lds
outsb
pop
cs
xchg
lock
mov
fnsave
xchg
inc
inc
shrd
or
lds
jnp
out
jns
loopne
out
lahf
scas
sarb
mov
in
insl
mov
sbb
out
clc
push
mov
subb
mov
out
adc
cli
das
stos
ja
stc
cmp
fstpt
sti
adc
add
out
out
cmpsl
sarb
pop
lea
ret
sbb
push
popa
sahf
add
cmpl
shll
push
push
mov
aam
lods
mov
sbb
pushf
fdivp
imul
adc
shll
sbb
movsb
pop
push
xor
scas
jmp
inc
outsl
lcall
lods
dec
mov
push
jle
outsb
pop
in
cmp
jne
fcompl
sbb
test
pop
and
lret
add
push
iret
aaa
push
sub
cmc
hlt
ficoms
mov
mov
loop
test
daa
shrb
outsl
test
arpl
subb
ljmp
jmp
adc
pop
in
std
or
sbb
push
bound
movsb
int3
pop
jo
sub
ljmp
aad
inc
push
test
fsubrs
repnz
cmp
imul
movsb
sbb
jp
loop
sub
sbb
xchg
shr
aas
pop
scas
pop
rcll
add
out
std
mov
dec
and
jp
adc
leave
test
xchg
or
cmp
js
mov
movsl
in
hlt
or
fstpt
mov
jmp
mov
pop
pop
aam
adc
aaa
dec
cmpsb
movsl
mov
push
in
add
je
movsl
and
test
adc
sahf
out
xchg
scas
inc
outsl
cmp
jmp
pushf
or
adc
cli
pop
stc
dec
add
gs
lds
mov
popf
loop
jmp
flds
rorl
ljmp
lcall
out
sub
push
mov
add
in
or
and
ja
xor
in
in
js
dec
push
mov
xchg
sub
sbb
fdivl
dec
sahf
dec
cltd
jle
or
popa
and
aas
push
rolb
shlb
sub
inc
mov
jle
dec
adc
aam
add
stc
cli
xchg
jo
cmp
xor
enter
push
mov
push
test
jge
push
icebp
push
sti
repz
cmpsb
add
sub
add
cld
into
das
xchg
xchg
roll
sahf
or
test
addr16
mov
dec
mov
out
mov
inc
jg
jmp
or
mov
fwait
addr16
out
daa
and
cltd
pop
jmp
push
pop
xorl
sub
in
pop
rcrl
es
cmp
pop
or
adc
jnp
pop
push
xor
pop
inc
or
lcall
xchg
mov
adc
cltd
mov
pop
push
cmpsl
mov
sahf
add
aas
aas
jge,pt
stos
hlt
ret
icebp
mov
pop
or
pop
sub
jns
push
es
fsqrt
imul
fsubs
fsqrt
sbb
xchg
sti
cld
pop
fwait
xor
insb
bound
dec
xchg
cmp
inc
push
cld
cmp
stos
dec
mov
js
popf
xchg
cmpsb
inc
cld
ja
jbe
stos
ja
fucomi
loop
sti
inc
ja
ret
pushw
mov
lods
es
mov
sub
fldl
cmc
xor
icebp
icebp
adc
shrb
cmpsl
pop
cmp
popa
or
mov
out
jae
jg
add
or
jne
fs
xor
lret
or
popf
inc
mov
push
or
not
shll
mov
mov
or
neg
int3
js
cmp
fildl
jne
divb
pop
xchg
inc
dec
loopne
jge
jp
lock
lods
mov
mov
sub
cltd
and
add
mov
adc
test
test
sahf
data16
enter
inc
push
pop
lds
xchg
or
add
xchg
fcmovnb
ds
scas
sub
scas
mov
sub
sub
mov
and
cmp
iret
jno
pop
adc
cld
mov
xchg
cmp
lcall
xchg
or
es
mov
je
push
or
adc
cltd
mov
dec
inc
imul
or
fisubs
sbb
mov
push
push
mov
cwtl
cmp
mov
jnp
outsl
je
pop
cmpsl
in
xchg
fsubrp
jg
imul
idivl
jo
pop
leave
mov
das
rolb
ficoml
aam
add
insb
xor
outsb
push
call
stos
adc
in
or
mov
sub
lret
adc
push
mov
mov
test
jne
imul
cmp
int3
mov
pusha
cld
or
push
push
or
aam
aas
dec
sbb
stos
inc
xchg
aas
roll
inc
push
pusha
fildl
adc
bound
popa
and
sub
cmc
ror
mov
push
dec
pop
jecxz
mov
xlat
in
pop
mov
fs
add
mov
fcmovne
cmpsl
fstl
jne
xor
lock
inc
or
jmp
mov
cmp
rorl
lret
mov
and
pop
mull
into
int3
js
mov
mov
add
fwait
rcr
imul
test
jle
jbe
jmp
fstpl
ret
cmpsb
pusha
dec
dec
dec
ss
add
iret
repz
xchg
sub
sub
in
sub
rcr
gs
sbb
pop
xchg
mov
int
mov
pop
or
mov
rcll
not
stos
or
es
out
jle
int3
xor
or
inc
pop
bound
hlt
pop
js
inc
xchg
popf
decb
xchg
in
loop
repz
in
cmp
sub
xor
icebp
ret
mov
dec
jne
inc
les
push
jb
inc
add
pop
fisttps
call
mov
fs
jmp
pusha
sbb
mov
sub
insb
fs
pop
pop
ret
jns
sbb
push
mov
inc
mov
loope
xor
rolb
or
push
or
sti
and
je
dec
nopl
fs
adc
jp
adc
cli
mov
jns
pop
repnz
incl
pop
scas
add
ret
inc
icebp
inc
in
jb
mov
shrl
or
nop
add
adc
dec
ja
mov
adc
fmulp
push
outsb
xor
pop
loope
scas
mov
push
test
ficoml
sub
enter
jge
and
push
cli
cmc
cmp
inc
jnp
js
out
jp
jmp
movsl
jle
out
fldenv
jp
jb
popa
push
insl
test
out
call
cmpsb
pushw
les
dec
mov
add
mov
dec
out
xchg
jmp
mov
xchg
shrb
test
dec
test
and
ds
mov
std
push
dec
cmc
popf
lcall
mov
fildl
imulw
mov
push
mov
in
clc
ja
imul
jns
pop
cs
in
mov
ror
ja
dec
cmpsb
and
cwtl
push
xchg
mov
push
in
aaa
shl
or
push
jb
inc
fwait
push
lret
nop
jbe
sub
xlat
call
test
in
je
pusha
push
pop
inc
push
icebp
mov
dec
aas
cmpsl
pop
jne
xor
adc
dec
push
mov
leave
dec
mov
jmp
test
notb
or
pop
jmp
jnp
dec
outsl
lock
jne
inc
push
mov
imul
or
mov
xchg
rorb
data16
xchg
es
ljmp
push
into
cs
and
dec
pop
ret
sub
in
cld
jg
push
in
xlat
jbe
cmp
in
loop
mov
popa
aas
xor
stos
inc
ret
lea
test
xor
icebp
mov
mov
test
xchg
push
pop
xchg
jbe
jbe
fdivr
in
je
push
imul
push
into
sbb
insl
mov
cwtl
ficoms
out
xchg
jo
pusha
cli
or
pop
lret
mov
jle
dec
mov
mov
mov
pop
add
in
test
jp
aas
mov
mov
sti
ja
dec
cmpsb
pop
xchg
dec
fdivs
pop
pop
mov
iret
movsb
ficoml
sbb
ljmp
mov
dec
jae
scas
icebp
popa
subb
jno
mov
push
cmp
in
enter
test
repnz
jnp
or
or
push
aam
pop
push
and
nop
cmpsb
sbb
sub
or
inc
mov
xor
sub
lea
push
stos
pop
ret
pop
and
jns
test
leave
sub
push
push
fldz
adc
dec
je
pusha
inc
imul
aam
push
cs
xchg
popl
iret
ds
push
push
movsb
jle
or
in
push
pop
add
pop
inc
arpl
or
xchg
cltd
leave
add
mov
pop
scas
dec
je
or
in
fadds
inc
xchg
xlat
push
orb
in
xor
jp
pop
xor
cli
fisubs
pusha
add
or
xchg
push
add
push
sahf
mov
clc
shlb
test
jae
dec
idiv
push
fstpl
cltd
into
lds
mov
xchg
psubusw
lods
add
push
jmp
icebp
push
cmp
mov
imull
scas
xchg
inc
rcll
sub
movsl
pop
movsl
rorl
mov
cltd
mov
cwtl
xor
out
push
in
push
in
mov
fstps
mov
or
in
xchg
dec
sbb
or
nop
pop
and
mov
ljmp
xchg
iret
sarl
push
hlt
decl
insb
and
mov
shrb
jge
adc
and
nop
pop
sub
mov
frstor
mov
in
iret
push
sub
aad
fcoms
push
popa
out
jp
arpl
cmp
push
jge
push
nop
or
aas
push
pop
shll
mov
xchg
lea
push
fucom
pop
pop
push
push
mov
xchg
call
dec
test
xchg
mov
cwtl
shll
out
mov
inc
fdivrp
pop
mov
mov
jg
inc
pushf
pop
mov
inc
or
dec
cmp
sub
rorl
stos
js
mov
dec
loope
mov
rcll
fsubs
dec
idivb
lea
out
fdivs
xor
jmp
mov
push
pop
sar
bswap
iret
leave
pop
mov
and
mov
lea
pop
mov
cwtl
mov
mov
iret
dec
add
outsb
push
jo
dec
lock
mov
lahf
hlt
lcall
pop
fbstp
pusha
mov
clc
rorl
dec
shll
xchg
lcall
cmpsb
cmp
dec
or
aaa
push
mov
out
pushf
push
sub
rcrl
xor
pop
mov
gs
adcb
pusha
xchg
mov
inc
cs
xchg
xchg
mull
pusha
test
mov
sub
lods
cli
xlat
mov
clc
rcrl
push
push
add
push
lret
jl
add
sbbl
sub
cmc
pop
push
jae
and
stos
dec
add
jbe
mov
jge
mov
call
ss
push
maxps
xor
scas
push
cld
sub
scas
sbb
in
cmpb
clc
stos
adc
fldenv
addr16
mov
push
sbb
inc
inc
in
mov
cmp
sbb
mov
aam
and
xchg
cmp
mov
cmp
out
push
pop
iret
dec
dec
sahf
push
idivl
imul
out
enter
push
push
stos
sub
jno
lods
xchg
cmp
cmp
xchg
nop
imul
lcall
adc
xchg
inc
fisttpll
lret
fisttps
adc
xor
or
pop
out
daa
popf
out
cmpsl
jns
adc
xchg
and
jecxz
pop
aad
leave
ljmp
jo
or
mov
mov
inc
fsubrs
pop
je
int
das
push
jb
adc
rorl
push
shl
push
pop
mov
aam
out
adc
cltd
mov
loope
lock
inc
jae
ss
pop
lret
fld
bound
mov
xchg
cwtl
jns
inc
dec
add
orb
and
mov
or
aaa
and
aam
xchg
pushf
scas
out
mov
pusha
in
je
xchg
data16
in
in
mov
pop
lods
sbb
push
insl
ja
mov
pop
scas
ljmp
shrl
insb
scas
dec
cs
pop
loop
insl
data16
mov
in
dec
jl
cmpsl
sub
aaa
mov
std
fisttps
hlt
jne
inc
test
and
ss
mov
cmp
je
dec
inc
out
sti
push
shll
repnz
push
dec
jbe
add
test
dec
in
aad
and
in
jle
test
fmul
sbb
xor
pop
xlat
mov
mov
lcall
xor
and
sti
in
mov
jns
adc
scas
inc
dec
jle
xlat
bound
lcall
sub
sub
testl
mov
js
push
dec
imul
inc
mov
dec
jae
sahf
adc
ds
cmpsb
and
loopne
ja
xor
xor
iret
mov
in
rcl
pop
je
out
das
ljmp
into
mov
jge
adc
shr
movsl
xor
int3
iret
xor
xor
loop
pop
int3
dec
adc
inc
xchg
mulb
xlat
inc
mov
push
dec
xchg
loop
jo
pusha
adc
loop
xor
stos
pop
fcmovu
jne
popf
iret
mov
mov
and
in
and
jmp
jl
mov
pop
js
out
fwait
dec
add
or
bound
int
repnz
dec
xor
push
lock
mov
mov
daa
jmp
clc
aam
mov
ret
mov
inc
cmp
jns
jb
sbb
shll
jp
cmc
addr16
dec
ljmp
popf
addr16
push
leave
out
pop
fdivp
add
insb
push
mov
mov
adc
clc
fldenv
adc
stos
inc
adc
or
inc
cmp
jmp
cwtl
ds
xchg
imul
fwait
test
push
cld
pop
xchg
inc
cmp
fstpl
scas
test
sub
sahf
iret
aam
and
rorl
mov
pop
adc
mov
jnp
pop
ljmp
insl
mov
into
jae
and
push
sub
inc
out
fcomps
test
je
cli
psraw
adc
int
sbb
fsts
lods
xchg
xchg
jb
xchg
ficomps
pop
cmp
sub
and
xlat
cwtl
insl
popa
push
jbe
inc
and
dec
cmp
sahf
popa
jbe
jne
adc
dec
dec
loopne
pop
shrb
dec
mov
pop
pop
rcll
xchg
sbb
lret
push
cmpl
pop
and
push
imul
sahf
or
add
jg
das
movsb
daa
sub
inc
inc
push
mov
jbe
pushf
mov
push
enter
sbb
stos
mov
jnp
sbb
andl
aad
adc
jle,pt
mov
push
cmp
cmp
mov
mov
test
pop
movsb
dec
arpl
je
pop
push
pop
sahf
ss
pop
mov
jge
or
push
aam
sbb
lret
out
ljmp
pop
cltd
fidivl
sti
dec
out
jb
mov
fidivs
pop
ja
test
in
and
ffreep
bound
mov
out
add
sbb
sbb
jp
fs
jmp
pop
pop
test
inc
sbb
in
push
mov
cwtl
ds
sub
xchg
adc
fwait
pop
adc
mov
lcall
arpl
ss
cmp
jne
mov
insl
inc
lea
pop
mov
and
shll
jb
xor
or
mov
sbb
mov
xor
and
mov
jp
push
outsl
scas
or
sub
testb
ja
pop
loop
in
cmp
or
je
jbe
inc
lock
lcall
adc
bnd
cwtl
in
and
dec
leave
ds
outsb
dec
pop
mov
sub
mov
clc
iret
push
int
cwtl
mov
outsl
lods
in
jne
cmovge
and
leave
cmp
xchg
push
fadd
push
and
or
mov
shlb
je
pushf
mov
and
sub
mov
ljmp
in
pop
cmp
adc
aas
scas
xor
mov
cltd
push
dec
ret
and
icebp
das
mov
in
ljmp
imul
xor
adc
xchg
mov
out
xor
dec
out
cmp
inc
movl
imul
xor
or
pusha
add
test
ja
jae
lods
in
mov
push
lahf
add
aam
dec
push
and
or
mov
jae
stc
lods
out
pop
sbb
popa
jnp
loop
dec
mov
fists
in
sbb
rolb
decb
inc
sub
bound
popa
roll
fiaddl
or
fwait
xor
mov
test
shrb
pop
xchg
test
ret
cli
dec
jo
jno
dec
imul
jmp
cmpsl
mov
dec
jne
xorl
roll
ret
test
lcall
pop
mov
stc
pop
leave
inc
mov
mov
bound
push
or
and
ljmp
mov
dec
shrb
push
mov
lahf
inc
outsl
pop
jns
pop
stos
mov
in
dec
push
xchg
xchg
nop
adc
push
out
pop
xchg
adc
inc
movsl
sub
dec
out
mov
jmp
or
pop
mov
ljmp
lret
jno
inc
jmp
pop
aam
xor
fadds
fnstcw
mov
xchg
aas
pop
testb
sbb
filds
mov
test
lret
inc
dec
jae
pop
cmp
enter
push
rcrl
xchg
jbe
sbb
jbe
dec
or
mov
sbb
jbe
jge
movsb
xor
mov
lret
repz
fwait
cmp
test
orl
xchg
lods
push
scas
jmp
pop
mov
mov
dec
dec
adc
jp
test
fadds
xchg
popa
add
pop
sahf
push
outsl
sbb
or
fisubs
rcr
aas
into
fwait
movl
mov
lds
lcall
sbb
out
jle
addr16
xchg
ss
sbb
pop
push
jp
mov
inc
xor
push
or
iret
hlt
or
jns
and
xchg
inc
pop
sbb
inc
mov
and
shlb
leave
rorl
outsl
cmp
xchg
or
fldenv
in
mov
push
jnp
movl
outsl
test
ljmp
aaa
cmp
sub
xchg
jg
clc
data16
lcall
rcrb
dec
mov
mov
ss
lret
inc
fcomip
ss
ds
jo
mov
cli
cli
xchg
call
jp
scas
les
fs
pop
shlb
fcmovbe
and
fists
scas
mov
pop
add
imul
pop
push
adc
popa
adc
sub
test
test
fs
mov
out
rclb
push
inc
cmovle
and
cmpsl
xlat
rcrl
jns
push
incl
or
add
loope
push
xor
outsb
mov
aad
stos
das
and
cmp
sbb
pcmpgtb
fisttps
jnp
adc
sub
adc
std
out
aam
and
or
lret
and
pop
es
lock
push
mov
xor
jo
out
push
mov
movb
xor
rclb
pop
fisubrl
sbb
mov
mov
scas
aaa
gs
adc
adc
sub
in
fucomip
aad
jp
lods
js
xlat
mov
lock
add
ret
rcl
testl
adc
and
stc
data16
dec
inc
push
icebp
xlat
int3
hlt
pop
xchg
mov
lods
addb
mov
std
loop
add
xchg
push
ds
mov
leave
mov
add
pop
cmp
rolb
stos
mov
mov
adc
pop
iret
xchg
inc
push
pop
and
aaa
jb
pop
cltd
pop
insl
dec
mov
and
out
scas
int3
xchg
sbb
cmpsb
pusha
xchg
rcrl
in
mov
xchg
negl
xchg
sti
imul
out
pop
aas
les
pop
fcmovnbe
idivl
stc
insb
mov
mov
orb
xchg
xor
mov
jg
neg
pop
pop
xchg
int
pushf
rol
dec
sahf
push
call
rcll
andnps
pop
inc
scas
fcomi
sahf
imul
and
aad
adc
leave
jns
mov
push
lock
sub
movsb
mov
rclb
sarl
mov
popa
test
dec
xchg
ret
icebp
mov
cmp
je
adc
inc
lock
jl
icebp
test
inc
push
xor
out
cmpsb
popa
fdivs
cmc
sub
adc
int3
xor
insb
xchg
push
movsl
cmpsb
xlat
mov
sti
dec
pop
pusha
das
jno
xchg
ja
pop
sbb
cmp
imul
dec
adc
push
hlt
adc
xor
outsl
ljmp
mov
xor
scas
jecxz
aam
push
pusha
mov
js
cmp
pushf
iret
or
xchg
push
sub
fs
js
fisttps
inc
xchg
scas
pusha
mov
xchg
and
jne
mov
dec
insb
idivb
sub
xchg
outsb
ds
jo
scas
pop
or
in
add
dec
je
push
or
rcrl
in
push
out
jl
lret
aaa
xor
xor
pop
es
rorl
pop
push
movsl
push
xchg
xchg
lock
adc
push
push
add
call
outsl
jb
push
dec
mov
lods
dec
and
ljmp
mov
adc
jne
adc
mov
adc
test
in
jmp
pusha
mov
idivl
testb
jne
sbb
rcrl
mov
in
pop
and
jmp
push
cmpsl
bound
inc
mov
cmp
jle
xor
push
push
push
scas
in
sub
repnz
stos
dec
and
jno
dec
int3
pop
imul
fcmovbe
ss
movsb
out
das
add
imul
adc
lods
mov
loopne
insl
push
insl
pop
cmpsb
lea
in
jg
fwait
push
jmp
repz
aas
xor
imul
xorl
sub
mov
adc
addr16
push
add
insl
xlat
cmp
dec
mov
icebp
int3
sub
and
hlt
ljmp
jae
jb
fisubs
xor
fdivs
fdivr
dec
clc
mov
out
jmp
sahf
sub
cmp
xchg
outsb
icebp
mov
xor
lds
or
cmp
mov
addr16
xchg
jmp
push
add
jg
fwait
xchg
xchg
inc
dec
and
xor
and
or
dec
push
test
xor
cmp
dec
cmp
mov
xchg
movb
adc
push
gs
scas
pop
outsb
jbe
jl
mov
mov
stos
negl
push
imul
lods
es
mov
pop
lods
pushf
adc
in
jnp
mov
stos
mov
push
cli
jb
cmp
es
mov
jp
ja
lret
push
and
and
cld
adc
pop
sahf
cs
mov
jecxz
add
pop
push
js
cwtl
ss
scas
popf
push
cmpsb
and
hlt
xor
add
pusha
mov
scas
jg
sbb
cs
xor
and
inc
adcb
add
inc
cwtl
mov
cmp
mov
mov
sub
mov
add
sbb
xchg
lods
pop
sbb
mov
fs
loop
rcrb
sahf
pop
adc
fs
adcl
xchg
jnp
sub
mov
pop
pop
push
aaa
push
sti
cltd
dec
imul
lea
push
js
xchg
jge
in
fwait
pop
sbb
add
out
imulb
mov
jae
add
xlat
jl
mov
scas
mov
mov
es
xor
fsubl
outsl
mov
rol
pop
cmc
arpl
out
lcall
jmp
add
andl
push
popf
jno
fsubl
or
lret
mov
fists
mov
mov
daa
push
in
and
inc
out
shll
into
icebp
aaa
pop
cmp
cmpsl
fsubrl
lock
sbb
pop
lret
and
mov
pop
mov
shl
push
out
or
and
aad
and
sbb
inc
icebp
test
cli
push
hlt
lahf
lods
je
push
mov
js
add
mov
mov
hlt
pop
jnp
mov
repnz
js
rcll
stos
test
repz
test
js
xchg
push
mov
sbb
shl
in
ja
negl
inc
je
cmp
mov
sbbl
push
xorl
mov
push
pop
fsts
inc
xchg
jb
mov
fisttpll
aas
lea
inc
push
int3
imul
imul
fsubr
insb
cmc
xchg
adc
pcmpeqd
inc
in
jle
cmp
icebp
or
mov
idivl
adcb
iret
jo
fistps
movsl
mov
push
fwait
nop
pop
push
enter
jle
jnp
jbe
fs
jb
sbb
xor
aam
fbld
enter
mov
xchg
mov
fwait
jmp
out
push
call
mov
mov
sahf
jmp
std
xlat
out
add
dec
sbb
push
fwait
push
jmp
cli
and
test
out
mov
pop
movsb
out
out
in
xor
mov
dec
movl
pop
in
lock
jmp
insb
mov
ja
nop
pop
mov
mov
inc
and
jle
movsl
lds
pop
push
xchg
sti
xlat
xchg
mov
fdivs
mov
and
fmul
out
arpl
jl
push
jmp
loopne
lahf
jp
xor
adcb
data16
pop
iret
outsb
setg
cs
das
jb
outsl
iret
mov
shr
cld
inc
pmovmskb
mov
inc
icebp
sbb
jne
sub
pusha
mov
sahf
das
xchg
fistpl
div
xlat
and
pop
adc
pop
scas
in
das
inc
lahf
rorb
nop
mov
adc
dec
sbb
lret
insl
les
or
cwtl
icebp
xor
scas
mov
test
leave
push
add
mov
mov
test
fcmovbe
pop
pop
int
stos
inc
es
mov
mov
insl
mov
pop
mov
leave
mov
int3
js
mov
test
jns
cmpsl
ret
cmp
dec
add
pop
and
jnp
push
ret
imul
and
mov
xchg
inc
sub
shrl
test
decb
into
fs
inc
std
inc
scas
cli
lret
jge
mov
fnstsw
sub
jmp
dec
pusha
test
sub
cwtl
ljmp
lea
xor
aaa
and
sub
dec
inc
mov
mov
loop
pop
andl
dec
xchg
fwait
int
ljmp
sbb
xchg
scas
mov
sti
cmpsl
jb
mov
fwait
adc
add
fildl
mov
pop
lds
inc
pop
xchg
or
mov
rcll
insb
and
stc
jg
rcl
flds
mov
int
add
subw
ret
aas
fldt
mov
ret
inc
xchg
sub
push
jne
pop
sbb
fidivrl
movsb
mov
xor
mov
add
nop
call
pop
test
lcall
or
dec
rcll
xchg
pop
cld
add
lcall
fadds
aad
into
pop
arpl
lret
jbe
sbb
and
xrelease
pop
sbb
ficomps
sarb
jno
cwtl
shlb
imul
or
push
mov
jg
push
and
fbstp
xchg
push
inc
ret
sbb
adc
pop
cwtl
and
iret
pop
inc
mov
cmp
mov
jnp
and
ds
and
cmp
scas
int
xchg
push
dec
icebp
mov
out
not
fwait
pusha
lock
shrb
mov
add
fwait
int
int
and
add
jo
shl
ljmp
xor
pop
filds
adc
mov
ss
ja
cmp
pop
incl
jge
and
pop
pop
lcall
jl
fs
movsl
sbb
lcall
pop
sbb
mov
mov
mov
sbb
pop
sub
or
mov
cwtl
push
sbb
jmp
ficomps
pop
loope
dec
mov
push
jns
mov
movsl
push
fwait
push
jg
in
cwtl
xchg
mov
pop
push
sub
push
cli
fwait
xchg
mov
xor
jnp
mov
stos
pop
dec
dec
popa
push
jmp
lahf
jl
call
sbb
xor
mov
jecxz
cwtl
adc
fsubs
test
lret
mov
xlat
jbe
arpl
idiv
int
dec
fidivrl
and
ds
aad
rcll
dec
xchg
mov
mov
push
sbb
loopne
data16
out
sbb
pop
fmuls
adc
mov
dec
jp
imul
jge
sbb
push
pop
add
sahf
add
xor
aas
sbb
push
sbb
iret
xor
mov
cmpsb
mov
nop
lock
or
cmp
in
ja
stos
jne
jb
rorl
mov
test
rorl
je
mov
adcb
in
pop
jbe
sahf
cld
das
jg
test
jge
mov
and
or
xor
dec
dec
sub
mov
sbb
imul
mov
adc
xchg
jmp
pop
imul
pop
mov
and
jle
mov
cld
rcrl
inc
or
mov
rorl
mov
push
lcall
outsl
stc
cmp
ss
roll
iret
je
sub
jbe
jl
sub
mov
or
pop
lcall
aam
dec
xchg
push
push
push
ljmp
mov
loopne
jnp
js
popa
xchg
fldenv
fadds
jnp
xchg
pop
popa
loopne
das
and
xor
es
and
dec
ffree
cli
dec
push
mov
jbe
mov
shlb
fisubs
fs
ljmp
aaa
xor
clc
das
sbb
dec
ja
xlat
lea
push
test
mov
cmc
in
cmp
adc
shr
es
scas
sbb
seta
push
gs
cmc
jno
sbb
pop
outsb
sub
scas
xchg
push
out
cmpsb
xchg
stos
mov
aam
aas
sub
cwtl
mov
push
push
loope
push
push
mulb
nop
dec
mov
inc
pop
jmp
stos
lea
lret
xor
mov
push
in
mov
idivl
and
rolb
stc
lahf
icebp
inc
rclb
cmp
mov
faddp
inc
jns
pop
movsl
int3
mov
cmp
fldl
push
and
cmpsl
pop
mov
sbb
enter
jmp
mov
add
ret
in
jns
xchg
push
mov
mov
mov
jle
dec
cmc
fwait
ja
inc
or
xchg
addr16
jne
and
idiv
imul
lock
popa
clc
adc
xchg
stos
push
test
outsl
add
int
dec
imul
adc
jl
shl
jae
shll
mov
lods
rclb
out
fildll
arpl
pushf
cld
xchg
jne
ljmp
pusha
movsl
shr
add
dec
push
jo
inc
lret
aas
xor
fsubrs
inc
jle
inc
dec
mov
inc
push
pusha
lahf
dec
inc
int
iret
xlat
xchg
mov
addr16
add
int3
lods
pop
sarb
jns
push
dec
repnz
adc
ljmp
cmp
gs
cmpsl
pop
push
je
jns
mov
imul
sub
mov
and
push
inc
imul
mov
fbstp
cmpsl
xor
js
lds
pop
jl
lahf
and
jns
in
pop
mov
test
jecxz
mov
mov
xchg
and
out
es
outsb
int3
lods
sub
in
inc
rcrb
dec
jmp
xor
and
in
mov
pusha
idiv
xchg
test
clc
out
lret
adc
in
lcall
into
or
jns
cmp
xor
test
sbb
cli
add
dec
ret
jno
xchg
insl
loop
in
les
pop
xchg
in
adc
notl
dec
mov
sub
leave
lods
jmp
push
jo
in
push
ja
push
test
push
push
push
hlt
test
scas
rcl
push
mov
mov
push
shll
lods
or
ljmp
cmpsb
sub
and
sub
add
outsl
int3
sub
cmp
pop
pop
xor
xchg
inc
push
push
inc
clc
xchg
dec
ljmp
js
int3
and
fadd
jnp
cli
sub
daa
test
in
sarb
or
cmpsb
pop
fwait
in
pushf
clc
cmp
adc
cli
jecxz
insl
sbb
mov
add
xchg
push
push
mov
lcall
in
cmp
ja
pusha
popa
and
cs
jae
inc
sbb
std
inc
fadd
cmpsl
pushf
dec
adc
mov
jge
pop
jmp
ljmp
pusha
sbb
sub
push
lahf
sbb
outsb
ret
add
or
cmp
fiaddl
mov
orl
adc
xlat
scas
mov
xchg
push
adc
in
ss
pop
mov
cwtl
inc
aaa
push
lods
enter
pop
add
clc
test
dec
jae
push
insb
leave
cmp
jge
sub
add
cwtl
sahf
mov
mov
dec
xor
mov
mov
int3
adc
inc
mov
xlat
mov
fstps
dec
adc
xorb
add
rcl
sbb
outsl
add
movsb
mov
cltd
xchg
scas
xchg
push
cmp
lock
dec
mov
insl
test
movsb
test
ss
popa
movsl
subb
fsubrs
jo
mov
jb
cmp
mov
xor
sub
cld
and
and
xor
push
loop
add
mov
adc
clc
xchg
jnp
js
mov
sbb
jle
iret
pop
lea
fdivr
inc
mov
jnp
pushf
jecxz
mov
pop
pop
mov
mov
les
iret
mov
repnz
sub
pop
popf
pop
xchg
cli
shll
outsb
push
and
push
out
popa
pop
lds
std
xor
dec
ret
imul
fisubrs
inc
push
jmp
in
pop
push
aaa
out
lret
xchg
jns
push
sbb
mov
cmpsb
out
fcmovnbe
pop
ja
pop
inc
push
repnz
mov
mov
out
add
mov
das
call
stc
jae
push
sbb
lods
js
inc
test
mov
and
sbb
push
jmp
or
fcoms
jge
repnz
outsb
in
or
jecxz
in
mov
mov
sarl
add
loope
cmpsb
mov
lret
aaa
pop
push
inc
jg
mov
lcall
jl
nop
pusha
mov
test
dec
push
xor
xor
ds
add
xor
mov
pop
mov
adc
xchg
xchg
mov
hlt
lods
cmp
pop
push
jno
xor
popa
stos
fcomi
and
push
imul
popfw
mov
gs
mov
pop
cltd
call
xlat
test
pop
test
pop
or
loope
xchg
push
add
mov
and
push
loop
clc
xor
mov
cli
sbb
daa
aas
jmp
push
into
aas
clc
xchg
pop
push
fwait
inc
insb
add
sbb
push
dec
lea
push
sub
std
jb
adc
pushf
jnp
lcall
sub
push
test
xor
fimull
or
popa
xchg
fldpi
and
xchg
jns
aas
mov
pop
out
test
xlat
xlat
bound
scas
dec
les
jns
out
mov
sub
xlat
push
stc
sub
aad
cmp
cmp
mov
mov
dec
mov
add
mov
mov
call
ret
fcmove
or
add
push
xchg
xchg
mov
mov
pop
dec
sub
aad
lods
mov
cmp
call
addl
aas
pop
insl
iret
in
add
scas
test
push
adc
push
jg
testl
xor
mov
insb
cld
fwait
daa
dec
int3
lods
lcall
lcall
imul
inc
dec
cmp
jp
leave
dec
loop
fsts
inc
call
add
xchg
mov
push
shlb
daa
xor
mov
lds
push
and
imulb
ja
mov
sbb
in
mov
fldenv
or
pop
in
fisubs
push
pop
pop
repz
add
cmc
divb
or
adc
inc
mov
xor
push
repz
adc
in
sub
mov
pop
push
xchg
and
fsubrs
aaa
aas
push
loopne
fisttpl
mov
movl
mov
into
add
leave
inc
movsb
push
cmp
xlat
push
nop
addr16
xchg
das
roll
stos
cmp
xchg
pop
sbb
rclb
xor
xchg
test
push
aaa
loopne
mov
leave
cltd
dec
add
lods
lds
xor
dec
add
sahf
das
adc
jne
mov
mov
adc
mov
ljmp
rcll
iret
or
fldl
push
lods
insb
adc
mov
loopne
in
push
dec
fstpl
xchg
out
cmp
je
inc
jg
push
mov
inc
mov
xchg
add
xchg
cmp
fisubrs
add
nop
xchg
lahf
or
xchg
stc
cmp
roll
test
into
add
out
adc
inc
mov
das
sbb
jo
or
sete
mov
and
dec
xchg
pop
repnz
cmp
pop
js
test
adc
cld
add
aam
mov
rcl
sub
aas
cmp
mov
mov
push
fistpll
jecxz
pop
sti
sbb
or
lea
mov
xor
cmp
jne
pop
mov
clc
sbbl
cltd
ret
jp
xlat
inc
pop
cmp
sahf
and
mov
lcall
mov
sahf
or
hlt
sahf
lock
inc
xor
stos
or
mov
add
push
cld
test
js
xor
rorb
mov
dec
notl
ficoml
aam
rorl
gs
pusha
pop
in
das
jo
mov
pop
pop
inc
aaa
into
pushf
lret
pop
rorl
adc
sbb
rcrb
or
inc
enter
xor
push
xor
pop
out
jmp
loop
jne
or
das
or
push
outsb
pop
xor
jns
scas
js
sarb
xchg
inc
aam
loopne
sub
mov
add
std
fwait
push
dec
inc
cmpsb
popf
dec
sti
xchg
add
out
mov
inc
movsl
add
and
loop
bound
ret
lock
push
cmp
or
jb
js
sbb
inc
adc
xchg
out
test
jo
mov
adc
ffree
in
mov
and
lock
outsl
scas
scas
mov
mov
xor
or
cmp
cmp
mov
jb,pt
aad
xor
ljmp
in
out
daa
leave
inc
sub
lret
add
xor
inc
arpl
out
dec
dec
lock
mov
insb
popa
ja
jb
inc
fnstenv
xor
pop
dec
push
dec
iret
push
lcall
cmp
xchg
sbb
jns
aad
adc
push
pop
xchg
jbe
push
lahf
dec
xlat
jne
mov
iret
cs
adc
fcompl
add
adc
shr
and
mov
xchg
and
pop
frstor
fnstenv
xor
add
ja
enter
je
pop
mov
or
sbb
push
fildl
ljmp
mov
jbe
aas
pop
out
movsl
dec
ret
stc
out
notl
bound
push
out
push
in
pop
ja
sbb
xor
aad
dec
inc
les
and
push
push
jge
clc
sbb
jns
mov
pop
cmpsb
into
push
xor
push
fldcw
pop
stc
pop
sub
dec
jp
lahf
xor
mov
arpl
sub
xchg
push
cmpsl
or
or
cmp
pop
mov
pop
jb
cmp
inc
add
aad
add
jbe
xchg
into
cwtl
stos
jle
fnstsw
or
dec
jp
test
mov
cs
or
enter
subl
jp
lock
aas
rcl
add
xchg
int3
mov
out
dec
les
cmp
jbe
int
cmc
jnp
ljmp
mov
ss
add
data16
pushf
xchg
mov
test
or
loopne
push
imul
push
leave
mov
inc
jnp
or
popa
jb
mov
sub
pop
jb
shlb
hlt
jecxz
fdivs
iret
pop
jno
fcmovu
pop
jg
pop
mov
out
mov
shrl
test
xchg
xor
xchg
jnp
fcom
movsl
sti
mov
ljmp
push
xchg
imul
adc
scas
jl
cmp
in
mov
inc
xchg
test
fildll
enter
jmp
fiaddl
mov
js
lcall
xchg
idivl
mov
pushf
inc
jmp
mov
sub
mov
in
sbb
pop
add
jle
push
push
push
lods
arpl
jmp
enter
mov
push
push
sti
mov
add
mov
push
push
iret
pop
and
xchg
or
fs
out
mov
test
out
jbe
cwtl
icebp
hlt
std
add
out
jno
testl
shlb
jmp
cmp
push
fisubl
aas
inc
dec
cld
imul
sub
lcall
xchg
xchg
and
lock
xchg
adc
mov
sub
sbb
repnz
inc
cwtl
mov
adc
stos
fwait
adc
lret
adc
add
xor
sbb
lret
outsl
lock
adc
pop
inc
fnsave
leave
lcall
push
push
hlt
popf
lock
push
sti
movsb
inc
inc
ljmp
and
or
mov
jns
push
fidivrl
out
enter
js
out
or
scas
adc
adc
cli
mov
imul
pop
mov
push
mov
aam
cli
mov
lds
stc
xchg
mov
mov
or
mov
jbe
cli
pop
adc
gs
lds
add
mov
mov
mov
lock
xor
xchg
push
into
es
xor
pop
mov
imul
inc
test
inc
sbb
leave
adc
mov
fimuls
sbb
in
inc
insl
inc
add
add
fwait
mov
aas
cmp
mov
imul
cmp
aaa
stc
stos
add
cmp
ja
psubw
gs
int
sub
insl
mov
inc
insl
push
inc
clc
cmp
xor
push
sbb
push
push
pop
pop
push
arpl
psubw
mov
mov
bound
jmp
jge
mov
loopne
push
jp
adc
pop
ret
cld
pop
mov
xchg
sbb
outsl
jge
js
and
ret
pop
ss
aam
mov
mov
shll
fdivl
xchg
divl
jo
std
inc
insb
sbb
scas
jmp
dec
jecxz
or
or
nop
push
cli
jp
adc
test
pop
in
adcb
inc
inc
fstpl
outsl
push
fsts
dec
das
jo
or
pop
pop
xlat
push
jo
inc
in
sbbb
push
stos
push
pop
or
xor
out
cltd
popa
dec
mov
add
fistpl
sub
adcl
loopne
call
stos
repnz
js
jo
int3
pop
pop
sub
inc
test
lods
out
mov
sbb
insb
outsb
mov
jle
das
loope
lahf
lods
je
mov
fistl
adc
addr16
sarl
jp
jl
iret
aaa
jp
ss
adc
jp
mov
inc
xor
add
push
jo
mov
push
ss
inc
or
dec
or
and
in
shlb
shrb
push
mov
std
push
mov
adc
mov
clc
jp
mov
xchg
pusha
ja
xor
sti
movsl
xchg
popf
hlt
ret
outsb
cmp
repz
adc
pusha
stos
and
add
sar
fisttps
or
loop
mov
sbb
jp
push
jl
fs
int3
loopne
sbbl
ss
in
in
out
arpl
pslld
lcall
or
test
xchg
sbb
xchg
leave
and
sbb
or
shl
pop
leave
add
jb
std
dec
subl
movsb
insl
int
inc
jb
dec
jecxz
sbb
pop
and
add
and
jb
andb
cmp
inc
mov
push
rolb
popf
test
mov
jp
mov
mov
outsb
test
mov
xor
sbb
and
out
sbb
fidivl
jg
cmpsb
mov
cmp
fmul
and
push
cmp
icebp
testb
cwtl
mov
pop
sub
scas
and
xchg
cmp
int3
ds
lret
jne
rcrl
mov
fidivrs
cmc
add
std
rol
mov
pop
mov
sahf
je
jmp
lock
test
jae
pushf
mov
clc
movsb
sbb
adc
xor
push
jmp
ds
fdivp
pop
mov
pop
jbe
fdivs
adc
hlt
mov
sub
js
push
stos
jecxz
inc
insb
push
jb
call
addb
inc
movsb
add
xchg
cmp
dec
mov
sub
cmpl
lods
jg
mov
jne
repnz
test
not
mov
je
mov
test
bsr
xor
cmp
dec
fiaddl
dec
stos
negb
sub
icebp
lods
cs
cmc
push
sbb
cwtl
mov
repnz
out
rclb
push
mov
ret
shr
lods
test
dec
or
das
pop
pop
or
iret
lds
push
int
sub
pop
es
lds
dec
ja
inc
pushf
sbb
test
icebp
dec
inc
roll
adcl
sbb
cmp
cmp
xlat
pusha
mov
shl
dec
push
repnz
xor
jge
xchg
pop
mov
push
lock
pop
mov
xchg
pop
scas
or
add
dec
bound
cmp
popf
pop
fwait
or
push
xchg
xchg
pop
stos
stos
aam
ljmp
ss
inc
das
mov
cli
sbb
xchg
pop
fbld
imul
mov
pusha
scas
lret
xchg
in
sbb
scas
or
push
pop
into
out
pop
rep
inc
rcll
pop
jle
fldl
sbb
nop
adcl
push
shrl
mov
sbbl
test
xchg
pop
test
jmp
inc
imul
call
and
adc
mov
add
out
cmpsl
adc
fidivs
sub
fisubs
iret
or
sub
pushf
incb
mov
incb
or
dec
in
lahf
icebp
add
fstpl
stos
xchg
in
mov
xor
imul
mov
out
cmp
xchg
test
push
pop
divb
mov
js
gs
inc
daa
jnp
cmc
cltd
mov
push
leave
mov
into
mov
test
dec
out
jns
cmp
sbbl
inc
ret
call
adc
insb
stos
jg
sub
and
cmpsb
sbb
and
fimull
inc
je,pt
je
dec
or
jle
lcall
bound
or
es
jl
lret
sbb
or
stc
push
aam
lcall
ja
aaa
xchg
xchg
ja
lods
bound
insl
popa
mov
push
push
pusha
ja
sbb
inc
lahf
fnstenv
and
adc
jnp
xor
jle
movsl
mov
shlb
dec
adc
std
push
adc
iret
sub
xor
mov
mov
ss
push
outsb
sbb
xor
pop
stos
clc
dec
mov
sbb
cmpsb
jbe
mov
push
xor
test
fadds
aad
xchg
push
std
xchg
sbb
in
jnp
jle
jp
pop
mov
fsubrl
jnp
xchg
inc
stos
pop
xor
out
insb
enter
cwtl
ret
cld
shlb
inc
lahf
xchg
fcmove
inc
into
lods
scas
add
fidivrl
loope
xchg
shll
pop
xchg
adc
push
cmp
jge
xor
mov
sti
dec
add
sub
mulb
adc
xor
out
and
std
divl
sub
int
mov
out
fs
xchg
and
adc
fbld
push
adc
pushl
cltd
jno
shlb
imul
lods
fistps
clc
lret
pop
and
cwtl
ja
into
loopne
mov
imul
dec
adc
das
xor
ja
xchg
lock
shlb
cmp
idivl
inc
lds
mov
sub
sub
xchg
jmp
jo
test
sub
inc
push
or
push
push
or
jge
decl
lea
sbb
int3
jo
xor
push
movl
inc
push
sti
int
inc
mov
pop
mov
mov
movl
push
mov
orb
jp
xchg
push
cmp
or
aas
cs
jno
lock
sbb
lock
jo
mov
dec
or
pop
rorl
adc
pop
xor
push
or
mov
mov
xchg
adc
add
mov
shl
push
pop
xchg
movsb
in
sub
movsb
mov
outsb
dec
push
aas
mov
dec
arpl
pop
int
jo
iret
sbb
or
jp
shrb
add
fldl2e
cmpsl
mov
mov
rorl
aas
lods
mov
jno
sbb
add
sub
pop
ror
movsb
lcall
movsl
inc
cmp
xchg
mov
aad
test
ljmp
push
mov
mov
dec
sarb
cmpsb
push
call
repz
sarb
fs
jo
test
xchg
stos
in
push
in
push
cmp
out
and
inc
aaa
push
xor
push
cltd
push
pop
add
mov
or
jmp
xchg
ds
jl
je
dec
dec
jle
pop
jnp
pop
cs
and
dec
cltd
cmp
pop
out
int3
mov
stos
pop
dec
adc
sbb
insb
jg
movsb
in
lret
jno
leave
push
dec
jo
add
fprem1
lods
push
not
inc
mov
imul
sahf
adc
out
mov
push
dec
mov
lods
xchg
data16
lahf
push
or
inc
or
push
cmp
push
call
aad
adc
aad
cmp
adc
inc
ss
dec
mov
cmc
ds
cmp
add
aaa
dec
int
cmp
push
push
stos
push
fcoml
gs
loope
mov
push
dec
or
jbe
aas
push
add
insb
cmpsb
or
mov
inc
jo
cmp
decl
into
dec
add
dec
and
test
mov
sbb
fs
mov
xchg
sbb
jmp
mov
pop
fstpl
xor
mov
arpl
stos
inc
sbb
loop
ret
sub
jecxz
mov
cmp
pop
jno
xor
mov
jae
pop
sarl
or
sbb
xchg
insb
inc
stc
js
mov
or
out
rolb
jle
mov
push
push
xchg
mov
push
push
rcll
aaa
lahf
negb
push
aas
repz
and
je
cmp
cmp
rol
dec
testl
dec
aas
pop
lods
xlat
push
jbe,pt
pop
jbe
push
shrl
xor
cmc
inc
sbbl
push
jae
test
sahf
add
dec
jae
cmpsl
je
inc
add
adc
outsl
mov
push
or
out
clc
xor
mov
sub
push
push
iret
leave
imul
ss
push
idivb
insl
call
incb
or
cmp
fcoms
pusha
inc
loop
inc
xchg
jns
xor
xor
pop
mov
mov
subb
cmp
pop
xor
xchg
xor
in
sahf
leave
ret
xor
in
adc
fninit
mov
cmpsb
aaa
push
mov
or
shll
js
jne
ret
inc
and
mov
mov
aas
push
ds
and
inc
int
mov
jge
int3
ljmp
adc
loopne
add
sub
movsb
mov
test
mov
push
xchg
xor
or
mov
in
pop
lret
xchg
js
les
push
pop
test
push
jecxz
clc
xchg
mov
pushf
pop
xor
lahf
mov
lahf
xor
pop
mov
pop
aas
xchg
jo
rol
mov
push
mov
nop
gs
movsb
loopne
or
push
push
dec
inc
ss
lahf
fs
in
sbb
pop
dec
push
and
inc
xor
mov
jbe
inc
out
daa
sub
lods
jo
mov
add
cwtl
inc
push
hlt
dec
fsubs
xor
clc
movsl
aaa
pop
movsb
sbb
mov
dec
xchg
roll
xchg
pop
add
and
cmc
cwtl
and
stos
sub
enter
rcl
inc
mov
test
mov
inc
mov
jnp
xor
xor
or
or
inc
and
sub
test
xchg
and
sbb
ss
clc
xor
pop
xchg
mov
xor
jo
sbb
dec
xchg
mov
rorl
sub
sahf
mov
repnz
mov
sar
and
imul
sub
dec
add
mov
cmp
outsb
bound
arpl
ljmp
ret
subb
test
mov
pop
test
pop
rolb
mov
inc
adc
jno
mov
dec
stc
div
adc
enter
sub
xor
pop
movsl
daa
lods
ja
or
inc
ret
jne
cmp
push
xchg
call
pusha
mov
mov
js
jbe
nop
pop
lcall
pop
inc
daa
arpl
mov
cltd
xchg
jae
mov
mov
sub
push
cwtl
in
sbb
adc
xor
je
dec
popl
push
cld
sahf
sbb
les
jb
ja
adc
hlt
jecxz
insl
xor
push
cmp
dec
stos
pop
cmp
out
mull
push
ljmp
mov
pop
cmp
jo
rclb
pusha
mov
mov
mov
xchg
jmp
xchg
lods
fs
push
push
out
pop
sbb
popf
inc
repz
push
push
inc
dec
lret
pop
cli
inc
jno
and
push
inc
and
add
dec
inc
dec
or
adc
or
insb
sub
out
scas
pushf
shrl
and
int
pop
pop
jo
or
pop
out
outsl
dec
daa
insb
orl
lea
inc
push
xchg
mov
inc
or
push
dec
sub
stc
jbe
jns
or
cmp
aas
dec
hlt
push
in
push
mov
arpl
inc
and
jge
mov
mov
xchg
and
ds
or
sub
jmp
mov
xchg
repnz
pop
adc
mov
fldenv
cmp
adc
nop
pop
pop
adc
andb
scas
mov
fs
push
jle
mov
repz
movsl
leave
jbe
mov
das
push
sub
mov
or
test
or
xchg
stc
xor
les
andl
cli
sbbl
push
mov
sahf
rol
xor
mov
xor
xor
inc
aad
inc
dec
repz
in
mov
dec
jnp
mov
jmp
pop
fstl
xchg
lea
icebp
aam
js
scas
nop
inc
add
lds
xor
pop
es
mov
adc
mov
mov
inc
fdivrl
mov
mov
test
pop
dec
in
xchg
mov
outsl
jge
sbb
mov
dec
push
add
xchg
xor
mov
dec
sub
adc
stos
and
sub
insl
xor
mov
insl
jle
xor
rcpps
inc
dec
insb
stc
fisubs
pusha
adc
stos
or
jnp
pusha
sbb
je
lods
xor
pop
les
mov
cld
fstpl
push
outsb
movsb
mov
jno
fadds
pop
dec
xor
fwait
loop
push
scas
loopne
mov
cmp
inc
in
mov
out
inc
subb
lcall
push
xchg
mov
jnp
test
jno
nop
outsl
mov
pop
test
xadd
mov
pop
jns
mov
daa
movsl
xchg
push
lock
in
cmp
cld
fldt
imul
adcb
cmp
outsl
xchg
dec
addr16
xchg
into
xor
das
mov
popf
cmp
pushf
sbb
mov
cmp
cmpsl
sbb
aas
pop
stos
inc
jg
repz
decb
dec
ljmp
mov
mov
xchg
movsb
mov
add
aas
mov
ret
shll
pop
pop
mov
mov
push
add
sbb
xchg
cmc
or
cmpsl
sbb
xchg
popa
add
xor
jecxz
xor
into
lods
cwtl
or
lret
test
fwait
xchg
clc
pop
ljmp
sbb
inc
cli
mov
outsl
sbb
dec
sahf
mov
cli
clc
mov
jecxz
pop
data16
imul
xchg
dec
outsl
adc
fists
ss
sbb
or
lcall
add
xchg
cltd
dec
pop
loop
bound
aad
aam
test
inc
inc
loop
jmp
leave
push
addb
push
test
cmpsb
cmp
fadd
sbb
push
leave
inc
mov
inc
stos
daa
daa
clc
pop
in
mov
jo
pop
cli
mov
inc
jecxz
fcoms
fs
jmp
inc
dec
ds
cmp
loop
mov
popf
dec
adc
fstps
sbb
fwait
mov
insb
sbb
cltd
jecxz
call
xchg
stc
and
pop
xchg
push
inc
out
add
mov
sti
lret
repnz
jle
bound
cmp
push
fwait
inc
add
pop
xlat
arpl
fldcw
cmp
into
fisubrs
xor
sbb
repnz
push
mov
pop
fisttpl
and
dec
mov
ret
sti
xchg
stos
lock
pop
jmp
push
push
scas
outsb
pop
stos
inc
mov
fsubs
repnz
fdivs
pop
adc
lcall
test
shl
jle
mov
or
mov
clc
push
push
pop
push
or
fdiv
out
jbe
push
cmc
push
sbb
inc
ret
cmpsb
inc
int3
mov
xor
scas
stos
sub
out
jbe
lcall
insb
cmpsb
or
in
or
dec
negl
inc
in
pop
dec
cmp
sub
popa
mov
jae
ret
xor
mov
or
adc
orl
adc
aad
ja
and
movsb
xchg
out
mov
pusha
push
mov
add
in
mov
cld
loopne
mov
ss
mov
pop
jge
xchg
inc
leave
jle
push
or
bound
sub
lcall
int
faddl
xchg
sub
shrb
test
mov
jle
rcrl
inc
fnsave
lock
pop
mov
push
gs
loope
add
call
imul
fwait
dec
xchg
fwait
push
gs
pop
mov
xchg
add
inc
mov
mov
pop
sbb
je
adc
fwait
cmp
sub
mov
cli
fsubrl
mov
mov
mov
nop
movsb
mov
movsb
cli
pop
ds
xor
sub
xchg
fnsave
mov
dec
fidivrs
repnz
push
int
packsswb
push
pop
cmp
adc
push
mov
fistps
inc
and
jno
shll
insl
iret
clc
aas
loop
mov
push
or
inc
out
test
maskmovq
testl
dec
pop
ror
add
mov
adc
je
jp
and
sahf
mov
call
into
insl
fdivs
dec
dec
nop
test
mov
push
fcoms
adc
aaa
dec
fildl
and
and
inc
mov
push
jecxz
sbb
test
fadds
mov
inc
jmp
std
or
sub
adc
inc
sahf
and
jmp
lds
pop
lods
jmp
imul
int3
sbb
mov
xor
xchg
sub
rorl
mov
mov
outsl
adcl
jbe
pushf
mov
les
and
repnz
js
push
xor
mov
inc
stos
jg
pop
test
xchg
cli
int
iret
add
dec
inc
dec
lret
mull
gs
push
cld
adc
jnp
jecxz
in
push
icebp
adc
or
iret
vunpcklpd
sub
addb
xchg
pop
dec
mov
sub
scas
mov
sbb
fbstp
sti
dec
stos
push
mov
inc
in
cmp
cmp
sub
sarl
popf
negb
out
scas
add
mov
ds
fnstsw
cld
ret
outsb
jle
mov
ja
inc
add
ja
adc
sbb
adc
stos
sarl
out
mov
dec
scas
cs
lahf
shll
pop
insb
test
lods
or
aas
mov
xor
mov
popf
aam
push
iret
push
sahf
out
mov
cmpb
xchg
and
dec
xchg
mov
xchg
pop
xchg
or
inc
dec
dec
repnz
popa
push
inc
stos
and
jae
lcall
or
jge
xchg
push
test
aas
fnstcw
pop
fisubrl
xchg
loop
fdivs
imul
and
pop
pop
fisubrs
jle
lock
imul
mov
sbb
jg
loope
add
and
pusha
cmp
gs
and
adc
rcll
lret
je
cli
loope
inc
jmp
test
es
dec
lods
jp
inc
mov
hlt
pop
out
movsl
fisubrs
lcall
iret
jmp
push
lahf
xchg
pop
test
xor
xor
out
mov
cld
xchg
xchg
inc
xorl
jle
jp
mov
pop
stos
icebp
repz
push
shrb
rclb
push
loop
mov
fs
or
test
jne
or
adc
pop
push
jb
sub
pop
ficompl
fs
xor
or
adc
movsl
jp
adc
into
pop
sbb
push
lods
loopne
in
out
negb
and
cltd
iret
dec
in
and
and
jmp
push
cmpsb
xor
dec
push
mov
mov
dec
repz
sti
scas
fisubl
into
arpl
fistps
lahf
inc
add
push
lds
out
clc
sarl
imul
leave
xchg
mov
test
or
add
sbb
pop
leave
lods
bound
in
lock
data16
dec
roll
in
mov
cli
ja
subb
add
lods
add
sub
mov
insb
loope
imul
mov
call
mov
subl
push
inc
jg
les
pop
shll
popa
faddl
inc
xchg
sub
mov
dec
fnstsw
out
int3
lock
adc
mov
test
bsr
lcall
scas
or
xor
loopne
in
pop
dec
pop
mov
aam
fbld
xlat
adc
mov
sahf
outsl
push
push
inc
push
jp
jle
push
xchg
sub
mov
mov
cmc
into
pop
sbbb
out
cmpb
cmc
jp
roll
ret
xlat
inc
jg
inc
lahf
pop
xor
jp
add
insl
fisubrl
test
iret
xchg
pop
ja
andl
push
out
xchg
pop
dec
push
aas
out
pop
decl
sarb
es
movb
pushf
mov
pop
ja
lea
cmp
sub
data16
js,pn
lcall
cmc
mov
push
xor
stc
sub
fs
leave
in
mov
adcb
sbb
notb
cwtl
inc
fimuls
data16
inc
jo
pushf
and
jge
adc
adc
xor
inc
push
cs
jp
in
inc
sub
fcoms
enter
pusha
fwait
icebp
mov
cwtl
sub
in
aas
adc
add
addr16
xor
in
dec
or
into
adcl
arpl
pusha
cmpsl
sbbb
push
movsb
jmp
int3
mov
imul
aas
pop
add
sahf
int3
into
mulb
jmp
cli
cmp
cltd
les
aas
shll
loop
mov
scas
push
adc
nop
adcl
iret
dec
aam
cmpsl
add
xor
shl
xchg
push
sub
push
ljmp
mov
je
fisubs
popa
xchg
xchg
add
jnp
cwtl
push
inc
mov
call
push
insb
pop
mov
cmp
cmp
mov
and
sahf
pop
jno
xorb
dec
lahf
xchg
cmp
shll
push
xchg
ret
lods
cmpsl
xor
gs
fisttpll
xlat
xchg
js
sbb
repnz
bound
sbb
xchg
popf
xor
aas
pop
cmp
cmp
mov
dec
sub
mov
cwtd
je
ret
mov
jle
rcrl
lea
jp
adc
movsl
cltd
push
dec
dec
and
in
jbe
pop
cmpsb
fisttpll
mov
jne
leave
out
pop
ja
arpl
adc
inc
jg
adc
pusha
push
jecxz
fisttpl
pop
ljmp
jg
sahf
inc
add
cmp
je
cwtl
in
inc
sub
push
adc
or
sbb
jb
xchg
mov
pop
lea
mov
std
sahf
fmul
int
jno
outsl
fwait
std
sbb
sahf
mov
mov
push
ret
cld
add
push
lock
mov
lods
dec
test
ficoms
mov
dec
cli
nop
js
dec
mov
xlat
in
inc
pop
xor
js
mov
adc
adc
leave
mov
leave
stos
sub
insl
inc
lea
insl
cmp
lods
or
jl
dec
and
jo
imul
pop
or
mov
push
lods
xor
xchg
imul
push
fisttpll
mov
cmp
aas
shl
mov
into
decl
gs
push
dec
mov
mov
xchg
cmc
fldcw
xchg
mov
shll
add
nop
out
insl
xor
int3
and
sti
sbb
adc
sbb
or
pusha
pop
pop
sahf
xchg
ror
shlb
cmp
mov
lock
mov
mov
mov
mov
inc
stos
lret
cmpl
out
movsb
ss
pop
add
lahf
sub
mov
arpl
ja
push
jle
out
pop
test
fs
jnp
sbb
xor
cmpsb
mov
or
mov
pusha
sub
fbstp
sbb
test
cld
ljmp
fdivrp
mov
ss
imul
out
cmpsb
sub
pop
pop
js
lods
push
push
enter
sub
mov
lock
add
mov
xchg
pop
les
repnz
push
jl
out
jb
adc
dec
cmp
cmpsb
loopne
sbb
mov
mov
mov
adc
in
xchg
cmp
ja
dec
xchg
dec
sbb
in
test
dec
adc
lea
mov
mov
icebp
push
jp
and
es
loopne
dec
inc
jmp
inc
repnz
mov
jne
aaa
lds
mov
push
lret
fisttps
aad
scas
insb
inc
fidivrl
outsb
xchg
jge
mov
dec
and
xor
lods
inc
mov
notb
icebp
cmpsl
mov
dec
xlat
mov
or
mov
xor
fistl
inc
push
push
push
testl
out
das
int
add
iret
call
pop
clc
aam
iret
pop
push
fprem
mov
js
lods
push
data16
mov
in
xor
flds
push
xchg
aad
mov
mov
insb
std
lods
stos
mov
dec
ljmp
jmp
add
sbb
xchg
stos
lds
shrb
outsl
addr16
adc
outsl
stos
fwait
xchg
pop
es
xor
or
mov
pop
push
scas
add
jecxz
add
sbb
int
add
jp
dec
clc
dec
insl
cmp
sbbb
shll
loope
fnsave
xchg
popf
mov
xlat
add
pushf
push
adc
pop
scas
insl
inc
xor
jle
lea
pop
mov
dec
lahf
and
push
add
jmp
dec
negl
imul
mov
leave
xchg
and
cltd
add
sti
xor
adc
js
lods
lock
xchg
jg
add
xor
pop
dec
xchg
xor
push
add
insb
in
iret
and
into
lea
jmp
andl
cwtl
sbb
jge
pop
lock
adc
roll
mov
push
add
iret
lods
sahf
dec
pop
stos
in
dec
stos
xor
adc
punpckhdq
lcall
mov
cli
mov
pause
out
sub
push
mov
dec
dec
pop
rorl
lret
aad
sub
xchg
leave
test
or
push
push
xor
and
iret
ffreep
lea
fs
cltd
or
movsb
jb
mov
and
stos
sub
push
lea
push
push
xchg
lods
lahf
mov
pop
adc
sbb
mov
addb
mov
in
dec
fstpt
pop
dec
lcall
xchg
dec
jo
es
js
mov
adc
lahf
mov
pmulhw
gs
hlt
mov
movsb
lods
push
orl
ss
xchg
into
shll
imull
mov
mov
mov
pop
xor
pop
out
sti
cld
rcrl
in
push
pop
addr16
ljmp
xor
push
cltd
mov
aad
cwtl
cmp
push
lock
dec
insl
cmp
jg
or
xchg
loope
dec
sbb
dec
rep
mov
dec
mov
add
divl
enter
in
xor
mov
dec
aas
dec
testb
xorl
test
xchg
stos
pop
lret
call
nop
jmp
in
orb
test
push
ss
and
enter
and
sbb
dec
fidivl
adc
push
mov
pop
adc
nop
and
rcrb
xchg
mov
mov
jbe
lret
xchg
sbb
pop
sub
popa
mov
sub
pop
mov
pop
xchg
mov
mov
push
and
xlat
jbe
out
fimuls
and
mov
sbb
and
jo
lods
cli
pop
ror
xchg
dec
lret
dec
dec
push
adc
add
sbb
mov
dec
test
adc
mov
xchg
ret
mov
pop
fs
rclb
clc
dec
repz
pusha
xor
dec
sbb
scas
popa
inc
loopne
dec
add
cmpsb
pop
jecxz
jne
les
gs
mov
cmp
mov
push
fs
dec
push
sahf
fimuls
xchg
inc
pop
mov
inc
cmpb
xchg
loope
fnsave
jl
fs
push
repz
mov
xor
pop
cltd
loop
js
nop
jl
mov
xlat
fbld
fs
adcl
adc
adc
pop
xor
jge
ljmp
outsb
mov
insb
lock
out
or
mov
bound
cmpsb
test
cld
data16
push
push
out
jnp
push
mov
add
les
push
xor
loope
lcall
popf
or
lret
sbb
gs
jne
clc
pop
sub
enter
sub
push
ja
sbb
push
dec
js
and
ficompl
adc
shrl
insl
arpl
ds
adc
mov
push
pop
test
leave
cmp
push
push
adcl
jae
xlat
data16
jo
dec
lods
add
nop
fcoml
inc
imul
shl
popa
push
das
sbb
adc
dec
ret
vandnps
adc
js
fstl
push
mov
mov
test
jmp
push
jbe
mov
int3
lret
xchg
jns
lds
les
jnp
dec
pushf
and
aaa
sbb
pop
jne
adcb
int
stos
mov
aam
xor
jbe
arpl
xchg
add
mov
pop
stos
jmp
outsl
cmp
cmp
fimull
int
pop
in
mov
idiv
fstp
cmp
add
sub
shll
jns
dec
dec
jo
test
push
pushf
rcl
dec
jno
test
or
stos
push
pop
pop
xchg
or
cmp
push
add
test
xchg
push
in
loope
push
lahf
aaa
or
scas
or
jnp
inc
push
mov
fs
cmpsb
fistpll
sbb
xchg
push
cli
sub
cmp
lods
push
or
jo
int3
and
mov
testl
inc
outsb
push
jno
pop
push
out
add
gs
subb
dec
mov
mov
dec
jb
insl
dec
xchg
filds
inc
int
fwait
push
sbb
bound
pop
xor
add
dec
sti
int
ja
mov
xchg
or
jbe
cmp
sbb
push
fmul
jo
adc
mov
jno
push
cli
xor
das
dec
xchg
cmp
out
and
mulb
jg
push
shrl
sbb
or
adcb
push
fwait
nop
jae
pop
test
xor
jmp
cmpsl
dec
and
enter
push
mov
fcoms
sbb
data16
aad
popf
stos
int
loopne
xchg
movsb
pop
sbb
inc
outsb
cmpsl
hlt
repz
adc
arpl
dec
mov
and
adc
add
scas
in
icebp
loope
in
jp
gs
xor
test
xchg
adc
fidivs
xchg
in
ss
pusha
jle
aas
imul
inc
movsb
pop
and
mov
xor
xchg
leave
cmp
mov
movsb
dec
xor
negl
outsl
iret
inc
sti
inc
adc
and
movb
sbb
pop
nop
inc
xchg
or
inc
sbb
inc
mov
cli
push
out
sete
dec
jne
mull
sub
pushf
in
pusha
int
cmc
mov
std
pop
outsl
xchg
mov
call
jmp
mov
leave
pop
inc
cmp
xchg
sbb
lcall
ja
dec
enter
in
loopne
ss
mov
xchg
mov
iret
fcomi
leave
mov
dec
ds
iret
inc
sti
or
imul
scas
xchg
cmp
stos
mov
pop
pop
pop
push
mov
push
inc
fiadds
pusha
fnstenv
push
xchg
and
sub
daa
jmp
adc
push
push
add
rcll
cmp
hlt
xchg
cmp
dec
jecxz
rcll
out
push
cmc
mov
or
in
xchg
pop
jae
mov
pop
pop
xchg
push
pop
inc
mov
pushfw
jge
loopne
sbb
sbb
scas
adc
pusha
ds
sbb
fwait
jae
inc
and
xchg
scas
in
add
mov
dec
push
mov
cld
pop
rclb
lods
jne
mov
pop
push
cld
jae
clc
or
movsl
push
bnd
test
roll
jno
mov
ss
jbe
pop
pop
lods
scas
popa
stos
dec
push
dec
int3
jb
mov
cmc
xlat
xchg
dec
test
xchg
adc
call
mov
pop
test
outsl
inc
test
mov
enter
sbb
int3
stos
cmpsb
movsl
repz
xchg
mov
push
xchg
push
divb
cltd
fwait
or
mov
dec
pop
test
sub
push
shll
clc
jmp
scas
inc
pop
es
dec
adc
stos
das
repnz
mov
lcall
iret
and
and
mov
int3
mov
mov
pop
mov
mov
cmp
add
fcmovne
mov
inc
sub
adc
iret
inc
and
decl
xchg
cmp
dec
adc
stc
add
cmp
leave
mov
cmp
inc
mov
sub
mov
addr16
pop
ret
cs
xor
mov
pop
jae
loopne
aas
add
insl
inc
pop
xor
rorl
dec
popa
cmp
imul
and
push
mov
stos
mov
and
rcrb
jle
repnz
movsl
xor
add
stos
fdivp
dec
into
decb
add
jbe
push
add
cmp
mov
jae
xchg
push
push
daa
daa
movsl
jmp
pop
iret
push
or
pop
stos
int3
jo
cmp
leave
inc
repnz
mov
fs
out
dec
sub
xlat
jg
fwait
js
clc
mull
ds
jnp
lock
sar
in
inc
int3
inc
lret
imul
cmp
push
sub
data16
pop
xchg
out
dec
addr16
mov
ja
mov
sub
outsb
mov
jg
in
fiadds
outsl
jbe
pop
cmp
xor
fs
sbb
pusha
sbb
mov
in
jb
inc
lret
aas
lea
cld
sbb
or
fsubrl
mov
sarl
aam
xchg
xor
ds
xchg
loope
and
mov
xchg
cmp
ds
ja
and
out
jl
xlat
and
xchg
bound
push
cltd
push
mov
mov
xchg
lret
xchg
dec
les
out
push
push
mov
testl
jo
ss
push
inc
dec
rorb
jbe
rorl
pusha
lret
mov
inc
xchg
ss
pop
rcl
or
incl
test
jmp
rorb
adc
cmp
mov
xchg
lret
gs
mov
imull
push
imul
cmp
xchg
mov
sub
xor
push
mov
pop
push
cmp
push
mov
ljmp
int
add
test
cwtl
insb
inc
enter
jne
orb
or
pushf
jo
mov
in
xchg
cmp
jg
pop
mov
adc
enter
aaa
jge
jne
adc
adc
cmp
xchg
sub
sub
jp
addl
popf
int3
mov
sbb
xorb
ds
dec
and
sbb
xchg
lea
add
leave
pop
sbb
ss
or
sahf
popf
leave
xchg
xchg
sahf
add
inc
and
sbb
imul
iret
push
jbe
aad
sub
pusha
insb
ss
jbe
outsl
xor
lods
into
mov
xorb
adc
sbb
call
sub
lea
xor
iret
cwtl
push
mov
sarl
es
lea
mov
inc
push
out
das
xchg
das
ds
stos
fdivrp
cmp
inc
cmpsl
mov
inc
xor
mov
repnz
mov
jbe
das
loop
mov
mov
mov
divl
adc
mov
jno
iret
pop
insb
jnp
iret
jg,pt
int3
xchg
ror
sub
fsubrs
pop
xchg
adc
ljmp
adc
dec
or
dec
push
mov
pop
or
push
jbe
popa
jl
ret
inc
push
nop
fimuls
lods
xchg
stc
cmp
aas
and
loopne
cmp
vpcomub
sub
scas
push
jno
mov
mov
pop
sub
dec
cltd
out
scas
sarb
shrl
loop
and
pop
fbstp
pop
loop
sub
fiadds
test
pushf
pop
out
cmp
mov
mov
cld
jle
sbb
cmpsl
pop
sbb
cmc
adc
out
cmp
mov
ret
les
sub
in
test
push
aad
sti
cwtl
cmp
add
inc
jle
lret
mov
adc
mov
push
hlt
test
pop
xchg
push
or
cmp
dec
imul
loop
outsl
cld
or
dec
and
mov
pop
aas
pop
lret
insl
jbe
mov
pop
adc
add
aad
mov
sbb
dec
jge
sub
stos
sub
xor
adc
les
sub
push
cltd
das
ret
test
cwtl
mov
fstps
cmpsl
add
insb
scas
adc
mov
fldl
incl
inc
pop
xor
mov
int3
cli
xchg
jmp
lahf
pop
ret
dec
shll
cmp
adc
xor
sar
pop
addr16
sub
enter
addr16
inc
xor
lds
dec
les
inc
lods
dec
adc
sbb
mov
push
pop
inc
cmp
inc
and
int3
sbb
sub
je
jl
push
and
push
jp
cmc
adc
xor
dec
popa
pop
add
sbb
cmpsl
test
insl
add
dec
sbb
push
out
mov
addl
mov
add
jge
push
xchg
inc
cmp
mov
cltd
ret
push
sbb
int
aad
pop
leave
add
pusha
ror
push
mov
in
mov
lret
or
mov
stos
cld
and
mov
xor
add
inc
jmp
ficomps
xchg
mov
or
or
cmpsb
mov
push
and
pop
repz
xrelease
in
adc
add
lock
pop
push
adc
jne
ljmp
imul
push
enter
cmpsl
mov
xor
and
std
push
vmread
aam
xorb
sub
out
mov
mov
mov
jp
push
das
ja
not
pop
stos
inc
dec
inc
sub
mov
add
mov
jmp
aas
mov
xchg
inc
cs
ljmp
mulb
andl
or
jmp
hlt
add
shl
lahf
cmc
jg
mov
mov
pop
xchg
push
icebp
push
sbbb
xchg
push
adc
push
clc
push
test
imul
push
out
dec
test
dec
rclb
fwait
mov
add
jl
loope
jg
sti
sbb
dec
stc
nop
pop
stos
icebp
xor
fwait
inc
dec
leave
test
das
les
mov
cltd
insl
cs
jle
ss
ja
inc
adc
imul
jl
inc
outsb
jae
mov
je
in
icebp
je
dec
jl
jo
jle
inc
orl
dec
inc
sub
jge
mov
shll
faddp
dec
out
dec
jae
xchg
sbb
push
bound
leave
das
test
xor
add
ja
dec
xor
jb
repnz
test
insl
pop
lret
adc
ds
dec
xorb
fwait
repnz
dec
pop
data16
pop
arpl
cmp
jbe
stc
orb
divl
outsl
pusha
es
mov
xchg
jmp
sbbl
mov
adc
adc
inc
iret
leave
aaa
imul
es
dec
pop
inc
lahf
push
pop
dec
xchg
popf
gs
cmpl
loope
add
xor
mov
ljmp
bound
push
or
stos
xchg
ja
add
mov
mov
pop
test
test
push
sarl
cltd
sti
cs
xchg
sbb
mov
and
out
adc
push
mov
push
adc
ss
out
pop
xlat
mov
cli
mov
xor
int
arpl
rorl
fdivr
outsl
sbb
mov
js
scas
sbb
and
pop
cli
push
mov
xorl
rorl
shl
pop
sub
mov
iret
push
pusha
sub
cmc
sbb
inc
cli
mov
insb
xchg
fwait
js
and
sub
insl
dec
inc
insl
insb
jae
aas
xor
push
adc
dec
mov
jno
test
divb
fwait
jge
push
lret
scas
inc
test
movsb
jle
sbb
jg
adc
fcomps
das
sahf
lods
iret
ss
test
sarl
xchg
jmp
es
and
out
sti
sahf
mov
leave
mov
hlt
dec
fstp
cmp
xchg
pop
mov
xchg
mov
mov
inc
adc
scas
int3
leave
rep
rorb
or
les
and
lcall
gs
sub
je
xchg
and
lock
xchg
xorb
xor
inc
ja
test
scas
xlat
push
out
sbb
push
lret
xchg
ret
lds
mov
push
push
sub
arpl
ret
lock
out
xor
xlat
push
xchg
jne
arpl
mov
or
roll
lret
sbb
xor
inc
add
jge
push
push
daa
jge
testb
repz
sarb
sbbb
dec
push
lods
stos
outsb
dec
push
jns
cmpb
sbb
jmp
clc
push
js
or
pop
adc
push
sbb
push
and
mov
addr16
sbb
fs
filds
das
jb
rolb
inc
mov
push
jo
aas
push
dec
into
xor
mov
out
outsb
mov
sbb
mov
sub
push
mov
inc
and
outsb
outsl
mov
in
adc
pop
fisubrl
outsl
pop
mov
fucom
out
sbb
dec
and
add
shll
xor
and
and
mov
cmp
std
pushf
xchg
jns
inc
xchg
or
cmp
cmp
and
jmp
mov
repnz
sbb
mov
pop
ds
jg
sbb
dec
jmp
data16
adc
out
mov
imul
pop
daa
sbb
dec
aaa
cli
inc
push
jmp
in
sbb
and
mov
and
addr16
cmp
jbe
ds
ror
xchg
into
fstpl
sbb
fldcw
sbbl
cmpsl
push
cwtl
add
jge
cmpsb
push
aam
pop
pop
dec
lods
gs
jg
xchg
ret
xchg
or
cmc
shrl
movsb
pop
mov
sbb
jecxz
or
cmp
leave
inc
jo
dec
out
sbb
dec
mov
pop
or
pop
inc
aaa
test
pop
push
inc
pop
rcl
je
lods
lods
int
push
mov
jecxz
ss
add
jo
fdivl
in
xchg
dec
popa
jne
push
and
daa
inc
sub
lock
mov
mov
mov
in
or
mov
push
push
shrb
shrd
cli
cli
into
push
scas
inc
lahf
int3
into
xchg
add
sti
jp
arpl
push
add
insb
pop
hlt
ss
in
in
pop
lret
push
xchg
scas
mov
adc
mov
lods
iret
gs
js
cmpb
sbb
addl
cmpb
sub
out
into
adc
popa
cmp
or
push
mov
enter
dec
stos
sti
cltd
xchg
push
iret
mov
addr16
repnz
cltd
push
icebp
ss
mov
sbb
pop
sub
daa
pop
adc
jmp
sbb
push
cmp
dec
loop
fdivrp
cmp
jno
scas
mov
dec
jne
loopne
push
dec
dec
xor
pop
lret
dec
pop
outsb
lcall
lcall
enter
pop
fwait
push
inc
addr16
data16
dec
pop
mov
sahf
cltd
jb
jmp
dec
orl
add
out
add
fnstsw
loop
jo
daa
andl
into
ljmp
scas
jle
inc
outsb
stos
loop
lret
add
sbb
inc
stos
xrelease
push
push
dec
and
pop
jle
pop
pushl
lea
in
inc
mov
push
pop
negl
xor
jecxz
and
xor
cmp
adc
nop
push
mov
lcall
fimull
mov
aad
mov
movsl
out
stos
sti
fwait
cmp
inc
lahf
and
add
fisttpll
cld
mov
outsl
dec
iret
mov
mov
scas
cli
xchg
pusha
insl
xor
cmc
rcrb
jns
ret
gs
idivb
pop
jge
dec
add
or
imul
xchg
xor
mov
xor
sarb
loope
lods
cmp
xorb
or
fstpl
push
inc
dec
test
dec
add
inc
call
call
ss
lret
adc
sahf
aam
decl
shll
adc
out
dec
and
push
scas
in
jge
push
ds
pop
fs
adc
dec
cmp
incl
adc
pop
cmp
std
or
or
out
pop
jb
shl
mov
or
inc
mov
pusha
and
mov
cmpsb
int
mul
xor
test
and
rcll
jae
mov
insl
pop
push
dec
push
jl
insb
hlt
push
jno
cmp
daa
sub
mov
push
repz
enter
dec
repz
mov
mov
xor
std
loopne
fsts
shrb
pop
jecxz
aam
xor
pusha
gs
mov
xchg
imul
sub
vaddss
jmp
cmp
adc
scas
pop
adc
cwtl
movsl
stos
xor
movsb
dec
sti
pop
mov
adcl
xchg
adc
call
pop
sahf
mov
lods
shll
pop
inc
mov
jmp
les
inc
sub
push
mov
pop
fistpl
or
shl
out
pop
pushf
sub
lcall
mov
dec
lea
pop
lods
adc
xor
or
adc
enter
push
push
out
fs
or
jno
adc
outsb
mov
cmp
jbe
xchg
in
inc
dec
stc
cmp
loop
push
jmp
fwait
test
out
adcb
lock
les
fs
test
pop
xor
mov
jecxz
mov
rcr
jb
icebp
sti
jb
mov
push
push
lds
rclb
inc
inc
shrb
fdivrl
outsl
sub
in
jbe
mov
xchg
push
out
dec
aaa
iret
daa
xor
dec
mov
xchg
fcomip
loope
loop
push
dec
or
adc
mov
push
movsb
sbb
es
imul
fwait
dec
sahf
sbb
mov
cmp
lret
mov
cmpsl
lock
jmp
scas
test
or
cmpsl
or
rclb
imul
roll
inc
int
cmc
scas
xor
mov
xor
das
and
xor
dec
push
lods
add
aas
mov
push
out
xchg
inc
ja
xchg
add
mov
int3
icebp
loopne
cs
mov
imul
sbb
in
adc
fs
push
rclb
les
xor
bound
xlat
mov
pop
dec
test
mov
pushf
push
push
lret
adc
mov
fs
sahf
jmp
or
lret
dec
out
out
js
inc
inc
test
add
push
adc
xor
cltd
lret
xor
push
pop
inc
mov
sahf
out
insb
mov
std
pop
sbbb
call
scas
call
ja
dec
mov
dec
add
cmp
fdivp
outsl
andb
xor
add
shr
push
push
hlt
xchg
fwait
or
add
jo
movsl
xchg
loop
push
xchg
fdivrl
sti
mov
sub
xchg
fs
push
scas
shlb
test
sub
dec
xor
cwtl
jbe
and
or
mov
lods
push
mov
lea
inc
into
sbb
pop
xchg
cmp
push
jbe
call
mov
aas
iret
stos
dec
xor
sub
and
xor
sub
lods
in
rcrl
aam
jmp
adcl
mov
pop
pop
leave
mov
push
jge
dec
or
mov
adc
mov
testl
test
imul
add
and
add
aas
iret
aam
ljmp
mov
mov
push
jecxz
jg
pop
push
jbe
mov
aaa
aam
xchg
xchg
shll
jl
mov
fs
addb
icebp
js
and
mov
ret
sbb
sub
call
push
mov
and
dec
push
sub
fiaddl
fldt
iret
pop
jecxz
in
movsb
orl
dec
sbbb
add
mov
jnp
mov
sarl
adc
lds
push
mov
imul
push
sub
psrlw
sbb
repnz
pop
xchg
jg
jo
xchg
or
lock
stos
cmc
jecxz
add
push
jmp
dec
xor
enter
insb
cmp
pop
sub
jb
lods
xchg
stos
xchg
shrl
dec
addr16
inc
xor
leave
sahf
add
stos
bound
lcall
or
outsl
add
rol
inc
cmp
xchg
add
push
rcr
loopne
jb
out
mov
lods
add
jne
or
push
sbb
out
cwtl
lods
mov
lea
push
sbb
pop
add
add
inc
cmp
jo
push
cltd
popf
inc
xor
test
popf
push
cmpsb
lret
sbb
loopne
xchg
stc
sbbl
lcall
sub
xor
lods
scas
rcrl
shl
xchg
or
cmp
outsl
out
daa
call
jecxz
push
mov
add
xchg
movsl
scas
mov
dec
jae
mov
cmpsl
push
out
inc
insb
adc
sbb
out
xchg
xchg
mov
test
cwtl
subl
jno
ja
stos
fcomp
fidivrs
pop
xchg
in
imul
movsl
ret
fbld
stos
enter
inc
pop
orl
incl
mov
stos
xor
pop
fs
andb
out
mov
neg
jb
aas
fdivs
jae
iret
sub
outsb
fidivrs
gs
rcl
dec
dec
divb
out
pop
mov
lea
xor
int
push
jo
addl
mov
fstp
jle
add
icebp
loop
xchg
xor
pop
scas
bswap
test
movsb
xchg
inc
cmpsl
mov
inc
stos
arpl
sahf
and
ss
push
cwtl
insb
jge
sub
xchg
scas
inc
int
scas
sbb
xchg
rep
push
sub
cli
adc
push
dec
sbbb
push
andl
xchg
pop
xorb
xchg
dec
das
cmpsb
ds
dec
gs
pop
dec
movaps
inc
push
dec
repz
push
lea
push
jne
lret
push
jmp
dec
sbb
loop
in
cmp
lock
xor
and
mov
dec
lds
push
xor
cmc
sbb
sahf
push
call
stos
int
leave
stos
pusha
mov
add
and
xchg
jns
pusha
xor
fsubrl
cli
aas
fwait
cmp
dec
icebp
xchg
push
jns
sbb
mov
push
inc
xchg
mov
sbb
dec
lods
pushf
push
fiadds
adc
movsl
xchg
or
es
xchg
push
enter
pop
mov
adc
in
xchg
pop
rclb
xor
lods
loope
mov
inc
mov
in
xor
lock
lret
inc
inc
jecxz
inc
cld
pop
cmpsb
incb
stos
subb
dec
push
int
in
jno
cmp
stos
pop
xorb
hlt
fbld
inc
popf
mov
push
movsl
inc
mov
ret
sarl
mov
sbb
cli
into
ljmp
sahf
mov
in
or
daa
cmpsl
xchg
div
xor
push
fs
xchg
xchg
push
fwait
add
lods
inc
jno
cmp
sub
jns
mov
lea
lds
cmpsl
or
orl
cli
or
data16
arpl
xchg
divb
dec
lahf
adc
cltd
imulb
push
insl
ficoml
je
mov
inc
mov
and
test
jbe
jnp
and
pop
push
wrmsr
or
pop
pushf
mov
pop
lahf
pop
iret
or
or
jecxz
inc
aad
lods
mov
stos
mov
loopne
mov
inc
sbb
jge
mov
push
in
imul
jp
push
int3
jl
push
pop
lahf
push
pop
dec
out
inc
dec
loopne
mov
popf
mov
pop
sbb
rcrl
int
pushf
jg
pop
jle
aaa
imul
jecxz
lret
mov
sti
pop
pop
pop
adc
add
mov
int3
cmpsl
push
imul
push
jne
lret
mov
cmc
pop
test
dec
adc
or
sti
mov
enter
xor
adc
addr16
ds
sti
inc
jmp
fcompl
out
fnstsw
sbb
es
mov
stos
cmc
loope
into
mov
divb
andnps
cmc
fiadds
dec
movsl
or
xor
dec
int3
xchg
cmp
push
iret
mov
jae
fcmovnbe
inc
fst
pop
arpl
prefetch
fnstcw
filds
je
xchg
insl
mov
add
sahf
add
sub
pushf
testb
mov
sub
add
push
repz
jg
repnz
jp
add
mov
push
jbe
mov
dec
xchg
shll
sub
popl
mov
jge
mov
aaa
int3
scas
iret
sti
mov
ja
cmpsb
out
pop
mov
mov
push
xchg
bound
push
imul
ja
out
in
shl
filds
mov
pop
dec
push
fldlg2
cli
dec
jae
data16
mov
daa
jo
xchg
gs
lret
test
popf
stos
pop
test
popa
dec
adc
jecxz
cmpsl
xor
pop
jmp
add
mov
mov
mov
cmp
mov
push
daa
push
jmp
mov
js
fldt
inc
divb
sub
xchg
cs
fadds
jle
jae
or
lahf
iret
ja
loop
mov
lea
xor
push
fcomps
inc
mov
jle
mov
fidivl
jl
bnd
fists
pop
shl
push
aad
push
mov
cs
cmp
xchg
leave
fwait
push
hlt
xor
push
dec
cmpsl
and
mov
sarb
lods
dec
and
mov
lods
pop
inc
mov
scas
rolb
test
sti
lock
add
fists
shl
out
in
xorl
push
cwtl
xchg
add
sti
outsb
cltd
add
push
xor
mov
mov
jb
mov
cs
xlat
int
mov
outsl
sbb
jp
aas
fwait
jo
iret
stos
fiadds
cmp
scas
fisttpll
addr16
dec
int3
jl
xchg
mull
std
dec
push
and
lock
clc
push
jb
out
pop
clc
lcall
outsb
add
or
enter
sub
insb
sbb
aaa
inc
push
repnz
pop
mov
ljmp
mov
adc
stos
mov
bound
notb
fcmovnb
fsubrs
sub
jmp
sbb
fldl
scas
mov
enter
lods
sti
jb
xor
dec
pop
stos
ret
outsl
dec
pop
sar
test
jb
scas
adc
push
aas
daa
insl
jmp
sub
cwtl
sbb
cmp
push
pop
mov
cs
jbe
xor
nop
or
xchg
sub
outsl
or
xchg
adc
jnp
pop
sarb
cmp
out
test
test
outsb
xor
cmp
push
sbb
popa
scas
pop
inc
mov
cmp
mov
xchg
dec
nop
sbb
stos
adc
in
into
and
cmpl
aam
and
data16
dec
je
inc
cmp
and
in
add
inc
sti
mov
sbb
lahf
popa
ffreep
mov
mov
ss
mul
lds
les
inc
sub
es
dec
pop
cmp
iret
loopne
aad
mov
pusha
test
mov
outsb
mov
cltd
int
scas
fdivrs
aas
pop
mov
pop
pop
mov
add
lahf
adc
jg
xchg
mov
sub
pop
fdivs
mov
dec
push
out
push
cmp
inc
xchg
std
inc
stos
push
and
jne
das
shr
jge
insb
mov
cs
sub
or
push
mov
xchg
cmp
imul
arpl
lahf
ss
cmp
mov
pop
mov
and
adc
lret
cltd
in
push
sbb
cmp
arpl
xchg
sbb
aaa
fsubrl
inc
adc
or
mov
fs
xchg
mov
push
movsb
xchg
push
adc
gs
insl
inc
sub
addr16
and
arpl
aad
shrb
dec
pop
mov
test
sub
daa
stos
inc
push
mov
dec
js
fwait
iret
scas
sbbb
lcall
lods
and
jbe
push
movsb
outsb
jne
xchg
xchg
loop
movsb
js
mov
cltd
adc
mov
xor
push
cwtl
insb
mov
cs
pop
js
jb
in
dec
jbe
xchg
cmp
push
sub
fs
mov
sbb
xorb
mov
mov
pop
cmp
movsl
mov
or
imul
lcall
rcll
jae
cltd
push
inc
stc
aas
ljmp
lahf
cmpb
aaa
push
lea
stos
test
js
push
adc
pop
arpl
dec
and
aaa
sbb
mov
jle
fbstp
xchg
dec
sbb
insl
mov
jecxz
dec
mov
mov
int
out
lret
xchg
ja
and
cmp
outsb
popf
repnz
xchg
cmp
or
xchg
pop
cmc
cmp
mov
or
jnp
mov
movsl
scas
xchg
mov
lret
mov
xchg
mov
pop
xor
pop
bnd
push
dec
stos
and
or
push
int3
stc
inc
mov
sbb
rclb
cmp
adc
dec
xor
repz
rcrb
ja
xor
mov
xchg
loope
mov
rcr
sbb
mov
stos
mov
or
nop
lahf
or
pop
fidivrl
fs
es
push
fs
movsb
and
adc
xchg
pop
pop
ja
ds
mov
inc
in
jae
lret
inc
cmp
or
mov
aaa
push
dec
push
cmp
dec
xchg
das
push
mov
jbe
movsb
cmp
push
or
mov
out
sarb
mov
and
movsl
iret
shll
sbb
sbb
cmp
out
sbb
data16
arpl
inc
dec
cli
jo
lea
xor
shrb
lahf
pop
faddl
lret
jge
or
cmpl
dec
fsub
sti
inc
mov
outsb
push
fistl
and
fwait
inc
dec
sti
add
sub
aaa
out
xor
pop
addr16
lea
adc
rcl
mov
fsubrs
shlb
and
pop
dec
push
mov
xchg
in
sti
jae
mov
xchg
negl
lods
and
mov
lret
xchg
mov
icebp
inc
cmp
push
pop
into
les
jb
sbbl
mov
mov
pop
daa
push
call
dec
int
cmpl
addl
repz
dec
sub
jl
js
xor
stos
out
stos
inc
lahf
int
push
sbb
outsl
jmp
sbb
fisubs
mov
pop
mov
cmp
push
lahf
ljmp
pop
mov
pushl
lret
sbb
sub
xchg
jle
leave
xchg
jno
rcll
insb
addr16
cmp
cmp
cmp
xor
add
jno
les
sti
mov
add
mov
lret
jmp
push
or
mov
xor
pop
adc
inc
push
or
pop
push
jbe
pop
lcall
clc
clc
pop
xor
scas
negl
shll
jae
cmp
dec
inc
addr16
push
jne
ret
fs
int3
mov
cmp
add
test
shr
addr16
aaa
cmp
xlat
push
icebp
mov
enter
xchg
fs
cmp
dec
loop
jbe
ljmp
sbb
lret
clc
xchg
lea
int
dec
iret
sahf
pop
cli
sbb
jmp
orl
aaa
gs
push
notl
mov
cmp
sub
sahf
out
push
pop
test
mov
iret
sub
pop
dec
imull
mov
jnp
divb
arpl
xor
cmp
add
lret
test
or
iret
adc
xor
xor
mov
push
mov
xchg
xor
cmp
popf
cbtw
ffree
les
jg
jmp
and
jb
dec
xor
pop
xchg
xor
push
repnz
pushf
inc
or
mov
fwait
jle
sar
movsl
dec
lea
jns
cmc
push
ja
jge
xor
loope
stos
push
or
insb
fldt
rcl
push
xor
xchg
dec
xchg
lods
push
push
xor
ret
xchg
imul
mov
js
jle
sbb
call
mov
fisubrs
xor
cmp
sti
out
iret
loop
add
cmpsb
push
les
repz
sub
jne
jge
inc
pop
cmpsb
push
mov
movsb
and
xchg
in
scas
mov
insl
push
adc
cmp
test
movsb
decl
clc
add
lahf
int3
dec
mov
loop
test
aas
push
add
push
rol
xchg
add
dec
scas
mov
mov
mov
inc
jp
cmp
inc
imul
mov
lods
in
scas
lcall
aas
fidivs
xchg
xor
mov
jns
mov
push
dec
xchg
mov
sub
les
push
clc
jge
xchg
mov
mov
dec
jle
cmpsb
jmp
int
outsb
sbb
lock
ss
stc
and
lea
dec
pop
mov
dec
xchg
or
push
mov
push
dec
imul
push
clc
xor
scas
scas
fstpl
push
je
mov
addr16
xchg
push
mov
mov
in
pop
roll
xor
rcr
dec
test
ret
adc
movsl
pop
int
adc
add
mov
jmp
xchg
push
and
pop
push
jle
ja
xchg
mov
ss
adc
out
or
or
dec
aam
pop
outsb
lods
jnp
aad
and
push
inc
in
pop
jmp
testb
pop
xchg
xor
sbb
rcr
ficoml
cwtl
sarb
sub
pop
xchg
outsl
adc
ljmp
adc
cmp
xchg
jae
popf
mov
xchg
mov
lds
push
negb
dec
mov
add
fdivrl
sub
imul
fwait
add
inc
ret
leave
and
pop
sub
adc
das
xchg
jnp
mov
mov
mov
leave
push
or
lahf
dec
lahf
aaa
push
scas
dec
lahf
cmpsl
scas
sub
cmovle
scas
push
and
cld
jmp
scas
sub
and
mov
add
jnp
push
in
pop
or
fistpl
in
mov
xchg
jmp
push
cld
inc
ja
push
and
pusha
stc
push
push
dec
aaa
pop
fsts
jg
out
je
pop
jg
inc
or
repnz
aam
es
sub
dec
nop
push
mov
fldcw
xchg
imul
adc
aaa
sbb
mov
nop
scas
dec
jnp,pt
sbb
adc
inc
adc
xchg
mov
sub
jle
push
stos
fildl
inc
add
xchg
int3
jg
sub
pushf
add
pop
pop
inc
mov
cmp
mov
push
imul
jecxz
inc
dec
in
stos
leave
enter
pop
cld
inc
icebp
mov
and
int3
xchg
call
iret
out
in
ds
mov
lret
inc
push
int3
test
xchg
ficompl
faddl
push
inc
mov
call
les
push
fmull
xorb
xor
jnp
dec
cltd
popa
cmc
les
scas
sub
xchg
into
fldl
jb
dec
stos
sbb
sbb
jo
cmp
ds
sti
js
jmp
insb
out
xchg
scas
xor
adcb
adc
cwtl
test
mov
aas
jge
aad
je
jns
jo
xchg
jg
dec
inc
push
adc
lds
test
jo
dec
icebp
dec
mov
ds
and
mov
mov
jae
jecxz
sysret
inc
push
add
icebp
outsl
cmpb
fistps
add
int
psrlq
repnz
je
xor
add
or
pop
xor
pop
add
mov
in
mov
sub
push
mov
mov
loope
xcrypt-ecb
cmpsl
iret
sti
cmpsb
jg
lret
std
xor
push
push
xlat
pop
test
pop
lret
push
call
mov
pusha
mov
out
dec
testb
rep
sahf
xlat
or
push
jnp
not
out
stos
pop
pop
dec
jl
xor
adc
stos
pushf
pusha
add
arpl
and
nop
nop
pop
xchg
inc
popa
clc
xchg
xchg
mov
sbb
filds
mov
dec
or
dec
loop
lds
pop
cs
pop
adc
jbe
inc
test
push
mov
aad
gs
lret
pusha
dec
sbb
std
or
in
jl
nop
push
call
mov
scas
jbe
mov
pusha
adc
pop
shrl
xchg
push
leave
mov
in
ja
test
cmp
mov
aam
push
mov
xor
push
pop
leave
aad
xchg
fldt
pop
aas
mov
jne
xchg
data16
jmp
pop
xchg
pushf
sarl
adc
push
cli
sub
dec
les
cmp
mov
lock
dec
add
dec
jo
test
push
and
fcompl
data16
mov
xlat
lds
and
pop
test
pop
movsb
dec
xor
mov
rorl
push
hlt
subb
aas
inc
mov
ja
stos
sbb
jne
divb
js
lret
xchg
add
add
adc
jnp
lea
fsubrs
shll
mov
lcall
es
or
ja
icebp
out
cmp
pop
js
pop
mov
xchg
xchg
aaa
inc
sbb
negb
pusha
pop
mov
cld
jae
pop
or
mov
aaa
xor
adc
sbb
dec
pop
add
xchg
add
pop
xlat
arpl
in
or
xchg
test
mov
cmp
mov
lret
fcomps
repz
lods
or
jmp
mov
sti
andl
inc
or
add
test
inc
xchg
xor
aas
mov
pop
add
cwtl
push
mov
sub
pop
shlb
data16
jmp
push
es
idivb
lahf
cli
add
xchg
repz
filds
xlat
addl
sbb
daa
ja
adc
insl
loope
mov
lods
mov
enter
push
inc
nop
adc
lcall
add
icebp
test
xor
pop
not
mov
jmp
jo
scas
dec
xchg
adc
inc
lahf
fcompl
pop
pop
ja
movsl
push
push
sub
push
push
ja
fidivs
dec
clc
arpl
sbb
mov
jmp
add
mov
adc
mov
xchg
nop
cmp
push
clc
ret
jb
push
popa
push
inc
dec
pop
fdivrs
jg
popf
sub
jns
or
pop
jb
sti
add
adc
jae
sub
adc
xor
and
test
xchg
rolb
mov
xor
stc
ljmp
in
cmp
sub
stos
stc
out
dec
test
xor
cmp
nop
add
add
sahf
aam
lcall
sub
push
pusha
sbb
les
ret
sbb
shll
jl
fstps
push
dec
dec
sbb
xor
test
mov
and
xchg
mov
movsb
outsl
ds
test
inc
mov
mov
push
pop
add
add
adc
adc
sbb
xor
sbb
jg
or
jo
mov
outsb
out
and
or
hlt
leave
cltd
mov
cli
sbbb
out
add
mov
mov
fdivrl
mov
inc
pop
bound
out
daa
adc
dec
aas
decl
xchg
inc
ror
mov
shrb
iret
mov
sub
rorb
xor
ds
pop
xor
or
and
jns,pn
cmp
xor
mov
stos
and
adc
int3
inc
aad
sub
in
jmp
adc
stos
pop
aam
dec
in
sbb
mov
lea
mov
outsl
pushf
cmp
ds
insb
or
int3
push
pop
pop
cmp
push
ret
adc
inc
jno
test
push
mov
out
inc
sbb
cmp
stos
adc
cmp
push
adc
push
sub
gs
addl
add
call
rcll
fwait
mov
in
int
aaa
xchg
shrb
ss
scas
push
fdivs
bound
push
inc
dec
stos
fldl
sbb
mov
cmp
mov
jae
cs
inc
jae
mov
inc
jmp
push
and
lret
lret
dec
shll
das
jno
and
pop
xchg
sbb
int
adcb
mov
call
lods
sub
scas
cmpsl
fidivrs
inc
inc
inc
push
int
jl
dec
mov
lds
cmpsl
ficoms
aaa
jo
lds
imul
push
enter
inc
mov
mov
daa
sub
inc
mov
dec
ja
push
lods
push
jg
cwtl
lods
in
pop
xor
cmp
xor
xor
ret
fiaddl
push
insb
cmpb
mov
cmp
push
lock
dec
aam
stos
push
sbb
xor
andb
xor
jno
push
cmp
lods
push
enter
jae
sub
imul
mov
dec
imul
or
testl
jnp
int3
xchg
mov
adc
push
fisttps
cmc
sahf
clc
popa
jle
fildl
xchg
ss
and
jge
mov
jbe
dec
xabort
xor
adc
jl
push
addr16
inc
scas
jae
or
dec
or
cmp
fistpll
sub
mull
mov
mov
pushf
bnd
jmp
inc
adc
xchg
std
jge
xchg
pop
cmp
cmp
cmpsl
add
jbe
jg
jmp
rcrl
xchg
xor
int3
inc
paddsw
pop
mov
lock
out
pop
arpl
lret
xor
ja
cmp
push
aam
push
push
pusha
fxtract
inc
pop
xor
push
int3
cmp
push
vfrczsd
clc
repnz
stos
sti
ja
pushf
push
xchg
mov
adc
shl
lea
int
ret
xchg
mov
cmp
sub
dec
fbld
mov
push
cld
rcrb
pop
add
pop
mov
insl
jecxz
cmpsl
push
adc
incb
ss
push
mov
fcmovbe
cmpsl
mov
jge
popl
shlb
mov
pop
arpl
stos
mov
out
es
daa
aam
adc
push
lea
dec
jl
mov
push
lahf
jns
outsb
pop
pop
adc
es
sub
insl
ret
dec
ja,pn
and
negb
aad
scas
push
push
sbb
push
out
sbb
bound
repz
and
out
push
sarl
jmp
fcoml
decl
lcall
adc
push
test
outsl
inc
sub
mov
push
jae
arpl
mov
sbb
adc
lds
dec
jecxz
out
loope
cmp
faddl
in
mov
mov
int
fcomps
rcl
xchg
mov
adc
sbb
push
sub
push
ret
pop
lods
mov
mov
sbb
mov
inc
dec
xchg
mov
or
ja
in
nop
sahf
fbld
xchg
movsl
mov
test
flds
pop
repnz
mov
or
and
fidivrl
add
fimuls
pop
popa
es
mov
xor
enter
sub
rcr
push
mov
sbb
cltd
or
push
aas
ret
mov
sub
std
mov
nop
hlt
adc
bnd
push
mov
cwtl
xchg
mov
fs
mov
mov
or
jl
out
mov
fnsave
or
lret
outsl
xor
sbb
jbe
data16
push
cmpsb
sub
xchg
aad
cmp
out
jo
or
frstor
test
addb
push
in
or
push
push
test
cmp
popf
lods
stc
scas
jge
pop
cmp
ret
int3
and
out
push
cmp
xor
add
lods
aas
enter
jbe
push
cmp
dec
push
test
divl
subb
push
pop
add
cmc
das
sbb
jmp
push
out
and
aad
or
js
mov
insb
dec
xor
jmp
rcrb
or
int
hlt
iret
out
and
mov
out
lcall
popf
fs
xchg
insl
cmp
or
data16
outsl
negb
mov
ss
xchg
in
or
iret
subl
sbb
inc
mov
ss
andb
scas
jle
lods
dec
inc
sub
sub
popf
add
jne
inc
test
xor
cwtl
fistps
dec
das
in
inc
sub
push
jae
lds
out
gs
jne
pop
xchg
imul
xchg
xor
jnp
aas
inc
addr16
loopne
mov
dec
mov
add
test
subb
and
cmpsb
jp
xchg
je
lahf
in
lods
into
add
or
push
sub
push
int3
mov
dec
arpl
loope
jge
testb
ljmp
sbb
test
xchg
dec
jl
stc
jns
sub
jecxz
pop
mov
push
rcr
enter
push
cmp
pushf
sbb
shll
sbb
hlt
mov
inc
lock
ficomps
cmp
jb
xchg
fisubrs
int
xchg
xchg
adc
or
pop
jo
xor
push
push
lock
sub
push
fidivrl
fistpll
ficoms
js
or
xlat
cld
imul
loopne
scas
clc
repz
test
dec
mov
and
addr16
daa
inc
lods
pop
fisttpl
out
loop
push
xchg
xchg
push
mov
push
xor
jmp
xor
repnz
lret
pop
fdivl
pop
xor
push
negb
insl
adcl
lods
lods
pop
dec
les
cmpsb
fnstsw
inc
inc
pop
bswap
jne
cmp
lds
xor
cmp
pop
add
mov
repz
sarl
or
push
xor
sarb
inc
inc
cmpsb
jne
notl
out
repnz
jb
xlat
or
mov
inc
js
fstp
lods
push
imul
pop
push
and
dec
xchg
enter
das
xchg
inc
mov
loopne
xchg
jb
and
test
stc
mov
cld
mov
imul
cltd
cmp
mov
shll
clc
test
pop
imul
cmp
push
cmpsl
loope
lock
or
stos
sbb
push
sbbb
jo
sbb
push
jge
and
cmpsl
sub
xor
dec
dec
push
xchg
pop
jbe
fnsave
stos
sbbl
inc
sub
test
pop
dec
jl
js
and
lcall
test
jbe
aaa
pop
call
lds
cltd
call
xchg
inc
pop
sbb
repz
test
xchg
addr16
pushf
cmp
sahf
mov
icebp
cmp
inc
inc
sahf
jbe
push
mov
gs
jo
cmp
push
xchg
jne
mov
pushf
inc
adc
inc
push
xchg
aad
rcr
lds
lods
iret
dec
cmp
icebp
mov
popl
inc
out
mov
mul
cmp
xchg
inc
push
xchg
jge
add
add
in
push
inc
xor
in
inc
data16
mov
adc
mov
dec
jl
js
cmp
shr
xor
pop
sub
int
popa
sbb
jns
popl
js
in
stc
sbb
cmp
popf
fisubl
mov
cmp
and
out
rdmsr
repz
fcomps
add
xchg
lret
hlt
mov
test
out
jae
jp
cmp
es
inc
push
sti
xor
movsb
lahf
movsl
fsubrl
sbb
fcmovne
xor
and
dec
xor
or
stos
mov
mov
xchg
dec
lret
rcll
call
test
dec
adc
lea
add
mov
pop
ffree
lcall
mov
mov
aaa
push
jmp
in
cmp
cmp
jmp
sub
les
sbb
push
sub
add
pop
addr16
and
loope
rcrb
shll
adc
xor
push
nop
mov
fdivrl
fcmovne
aas
repz
mov
pop
ds
fsubrp
push
mov
xor
dec
sbb
into
sbbb
and
adc
dec
pop
jne
loope
mov
mov
imul
pop
cmp
lds
cmp
and
movsb
or
es
mov
stos
inc
push
lods
adc
jl
mov
loop
xchg
xor
hlt
or
push
pop
test
mov
pop
loopne
insl
push
data16
stc
xchg
stc
inc
cld
mov
cmpsl
imul
pop
fistpl
or
in
inc
cmp
int3
fbstp
lods
mov
pop
repz
in
insl
lods
adc
loope
enter
cmpsb
cmp
fwait
jp
icebp
mov
loopne
dec
mov
outsb
out
jo
add
mov
xor
mov
mov
lahf
pop
dec
mov
mov
jp
mov
mov
sbbl
jmp
sahf
mov
int
adc
pop
xchg
pushf
pavgw
ret
jle
lcall
out
xor
test
cs
mov
add
mov
shll
out
cmp
xchg
hlt
add
push
lret
cmp
cld
push
out
xchg
mov
xor
fwait
and
rep
mov
inc
cltd
mov
arpl
stos
cwtl
leave
lcall
pop
rolb
stc
or
inc
jae
push
imul
push
dec
inc
sahf
shl
lock
pop
push
movsb
mov
or
dec
rolb
mov
movsb
or
je
jno
mov
daa
clc
mov
cld
addr16
xchg
imulb
imul
ds
stos
mov
gs
loopne
push
shrb
mov
push
add
rclb
dec
inc
das
cmpb
pop
push
push
sbb
insl
inc
pop
push
jns
xchg
nop
jg
andb
les
sub
pushf
dec
test
aad
bound
cld
inc
xor
in
sbb
stos
leave
pop
iret
sbb
fwait
stos
cmp
inc
fwait
test
icebp
mov
ss
cwtl
rorb
inc
lds
push
or
movsb
adc
or
cmpsl
mov
scas
and
scas
movsl
push
jmp
ret
ffreep
add
cmp
adc
in
adc
iret
or
xchg
mov
int
mov
lea
cs
into
imul
adc
fadd
add
push
insl
add
es
hlt
push
inc
xorl
push
jae
mov
adc
stc
es
aad
leave
leave
test
fstpl
xchg
cmp
hlt
xor
and
and
add
das
popf
subb
sub
in
lock
adc
rcll
mov
daa
negb
mov
mov
or
push
jp
arpl
pop
out
test
in
sbb
in
mov
xorb
icebp
cmp
out
xlat
mov
in
aaa
call
xor
pushf
xchg
dec
fwait
pop
cmp
xlat
dec
rsqrtps
sbb
sbb
xor
inc
rolb
jnp
cmp
adc
mov
cmc
pop
insb
data16
clc
jle
lock
sbb
xchg
inc
shll
mov
cmp
pop
lahf
outsl
je
or
insl
mov
pop
push
xchg
pop
push
adc
ret
sahf
sbb
fisubs
pop
jbe
pop
inc
enter
pushf
jle
mov
jno
adc
and
xor
sahf
subl
add
adc
push
inc
mov
in
fsubs
xorl
xchg
push
jbe
movsb
addb
pushf
mov
sahf
inc
call
stc
gs
xchg
mov
lret
dec
sub
xor
xorl
or
repnz
dec
shrl
test
push
add
mov
into
pop
out
sub
xchg
mov
pop
pop
xchg
pop
js
xor
push
aas
pop
cmpsb
mov
lods
pop
dec
mov
clc
lods
jmp
popf
outsb
data16
leave
imul
data16
addr16
sub
lock
and
jmp
pop
push
ja
call
in
add
mov
imul
add
sbb
push
cltd
push
sahf
fcmovb
push
xor
fisttpll
jp
add
and
add
jp
scas
or
enter
cmp
mov
inc
cmp
xor
mov
mov
inc
jg
jbe
xchg
nop
sub
lahf
add
in
outsl
and
add
fisubrs
pop
push
cmc
lock
pop
notb
mov
jbe
outsb
fdivs
ljmp
cmp
shl
mov
jo
imul
nop
sarb
sbbl
loope
push
insl
repnz
je
lcall
inc
imul
pop
cmp
lahf
nop
call
shll
jp
lahf
sbb
mov
out
sbb
mov
dec
xlat
mov
sahf
add
pop
test
int
dec
leave
xchg
xchg
sti
arpl
outsl
repnz
rorb
loope
push
adc
ret
xchg
jg
insl
imul
xlat
lock
lret
lahf
pop
out
and
add
mov
movsl
dec
add
sub
sub
inc
leave
xchg
filds
dec
cltd
test
push
push
stos
xchg
add
xchg
sbb
ss
and
icebp
xor
sbb
dec
xlat
dec
pop
inc
mov
stos
cs
lcall
scas
enter
sbb
popf
xor
js
or
lret
pop
imul
rcr
or
aaa
in
or
in
sbb
les
pop
roll
pop
push
leave
push
mov
and
inc
mov
cmp
sub
ret
and
mov
ss
rol
jne
pusha
inc
push
stc
push
test
mov
push
data16
test
mov
clc
loop
je
in
jbe
out
xchg
adc
add
daa
out
incb
sbb
dec
mov
pop
mov
push
je
inc
mov
lret
jmp
lea
inc
popf
mov
movsb
xorl
xchg
push
xchg
pop
mov
dec
mov
test
pop
mov
stos
add
int
cwtl
jns
push
inc
mov
cmp
mov
iret
negl
pushf
out
lret
test
gs
out
cmp
jg
xchg
add
scas
in
adc
sub
fadds
inc
cmpsl
mov
and
pop
jmp
stos
out
loope
push
incl
and
or
xchg
rol
movsl
pop
fsts
xchg
loopne
sbb
loope
mov
inc
or
jecxz
bound
pop
cmp
sub
mov
fdivrl
xchg
push
lahf
sbb
cmp
mov
lock
mov
jb
rorb
inc
loopne
jg
cmp
in
mov
add
fidivl
sub
decl
cmp
loop
or
cmpsb
or
popa
mov
xor
insl
add
push
sbb
jge
test
icebp
push
push
pop
gs
pop
mov
cs
mov
aaa
inc
in
push
daa
shr
sub
mov
es
enter
push
lahf
xor
jae
cwtl
pop
jns
test
fistpll
bound
adc
jg
aad
push
pushf
mov
adc
lahf
xchg
xchg
mulb
xchg
cmp
testl
pop
add
sbb
test
pop
dec
cmpsl
dec
pop
cmpsl
daa
imul
inc
and
lock
push
cmp
inc
and
xor
imul
js
gs
scas
cmp
hlt
mov
ljmp
sbb
scas
mov
pop
icebp
push
mov
pop
mov
in
mov
lahf
aam
xchg
lret
push
adc
sbb
or
fs
andb
adc
pop
mov
stos
stos
into
dec
mov
pop
inc
dec
jo
mov
jge
test
mov
lret
decl
jno
lods
xchg
lahf
clc
fiaddl
xchg
int
subb
mov
push
lods
adc
xor
or
ds
les
add
xor
sbb
imul
enter
aam
jo
jge
repz
in
pop
sbb
mov
lahf
sub
jg
mov
ret
inc
or
nop
adc
xor
cmp
nop
sahf
pop
imull
pop
mov
mov
out
shrl
roll
sti
nop
out
mov
stos
roll
aas
dec
push
inc
cli
push
jb
ss
outsl
sbb
bound
inc
push
sti
push
out
and
shlb
stos
jmp
push
jle
push
jl
dec
lahf
cmpsl
mov
into
xchg
nop
sub
cmpsb
dec
dec
sbb
inc
shll
mov
adc
adc
mov
stos
stos
int3
in
test
dec
jecxz
outsl
mov
dec
xor
imull
jle
mov
addb
jmp
inc
pushf
jae
sbbl
divl
in
xchg
stos
mov
adc
jbe
or
arpl
inc
mov
pop
testb
sub
sub
inc
jmp
insb
add
scas
fwait
loop
adc
or
shrl
add
test
dec
push
xor
lods
fwait
js
dec
push
push
mov
mov
inc
xchg
ss
pop
test
outsl
sub
or
push
pop
lock
out
test
xor
fisttpl
sbb
inc
leave
push
xor
pusha
mov
les
fisubs
pop
inc
es
push
divl
mov
xor
xor
lods
dec
jl
adc
jecxz
je
andw
mov
mov
sbb
mov
jno
jmp
sbb
push
sub
ljmp
aam
inc
test
pop
mov
pop
pop
int
insb
lcall
aaa
cmpsl
int
push
repz
mov
fcompl
mov
xor
mov
rcrl
sub
je
pusha
fsubl
scas
aaa
sbb
int3
pop
lcall
fsts
cmp
out
lea
mov
xchg
xor
dec
nop
mov
lcall
xchg
loop
das
sbb
push
dec
add
dec
push
js
xor
xorb
xchg
pop
dec
sub
xor
or
sub
ret
invd
pop
inc
sti
xor
inc
mov
cmp
cmpsb
enter
add
imul
sbb
jb
mov
sbb
test
cmpsl
fmuls
inc
ret
jg
fcomps
aaa
jbe
inc
enter
cmp
push
cli
pop
cmp
fcoms
mov
xor
rorl
sub
inc
loope
gs
fcoml
in
xchg
sub
xor
inc
cltd
lahf
popa
push
lret
jle
cmpsl
sub
fs
adc
pop
aam
sbb
imul
lods
mov
je
jbe
dec
push
fnstsw
test
fistl
sti
shll
int
movsb
aaa
jl
test
xchg
jnp
or
fwait
jns
arpl
or
cwtl
xchg
mov
arpl
xchg
mov
adc
dec
pop
push
push
xchg
pusha
cltd
or
dec
mov
lret
imul
jne
lcall
jp
sub
call
sub
out
add
mov
mov
push
scas
jge
faddl
cwtl
mov
xchg
push
pushf
pop
in
adc
stc
in
roll
out
adc
test
out
out
adc
movb
push
or
cltd
sti
lret
shll
lahf
cmp
jge
xchg
push
cmp
pop
shr
mov
out
xchg
or
test
sarb
mov
mov
jne
mov
leave
pop
mov
ds
push
fs
push
dec
mov
jmp
cmp
add
loope
cmc
outsb
je
cmp
fsubs
mov
nop
lods
push
push
dec
or
stc
in
jbe
push
decb
inc
icebp
and
inc
cmp
popa
sbb
insb
xlat
push
adc
roll
mov
xchg
shll
mov
dec
inc
pop
ljmp
sar
adc
mov
out
imul
clc
xchg
cmp
xchg
imul
pop
mov
push
sbb
mov
add
popa
mov
pop
arpl
insb
je
pushf
aaa
test
jmp
inc
cld
push
in
xchg
mov
movsb
outsl
jbe
add
jmp
add
sub
fucomip
fsqrt
aad
movsl
or
inc
inc
jle
inc
in
cltd
push
bound
pop
jo
xor
dec
inc
xchg
cmpsl
sti
xchg
inc
outsl
pop
inc
lods
ss
fnsave
dec
fisubl
push
arpl
int3
dec
mov
mov
push
mov
cli
outsl
loope
xchg
jnp
cli
dec
test
or
fstpl
in
insl
inc
in
pop
ja
push
xor
inc
aas
jle
dec
fwait
sub
jb
and
inc
sahf
or
xchg
js
rorl
mov
loopne
pushf
cmp
mov
out
cli
and
aad
mov
inc
std
lea
loop
movups
mov
testl
jg
mov
xchg
cld
pop
mov
jb
jl
jo
or
das
test
sbb
mov
mov
test
out
repz
push
lods
rcr
mov
jo
aas
push
inc
cs
jne
jp
pop
daa
xor
out
sub
pop
jnp
cmc
mov
gs
insb
or
test
jmp
cmp
mov
or
inc
mov
push
mov
je
mov
adc
fmull
sbb
mov
mov
inc
dec
jnp
push
xchg
mov
mov
mov
out
mov
push
push
fisubl
jecxz
pop
ret
sbb
xchg
cmp
jl
pop
rcll
fwait
sahf
ret
and
int3
jle
and
lahf
inc
xlat
aas
cltd
stos
adc
dec
pop
adc
cli
out
rclb
add
jp
inc
jb
pop
cltd
aad
dec
cmp
cmp
hlt
add
sub
js
cmp
sub
cltd
lcall
push
mov
aam
aad
push
pop
xchg
rcrl
aam
cld
jp
xchg
pop
shlb
cmp
stos
jge
cmpsl
rol
add
add
push
data16
mov
test
aam
call
add
pop
out
xor
ss
cwtl
adc
ja
scas
stos
pop
rcrl
imul
scas
and
or
sub
jae
lods
mov
sbb
loope
pop
inc
adc
mov
test
add
icebp
shll
std
push
fmull
rorb
iret
aas
and
mov
daa
jecxz
lods
push
shlb
or
lahf
fidivl
pusha
popa
ffreep
xchg
sub
jl
imul
sbb
mov
cwtl
adc
xor
xor
pop
push
jl
sbb
test
nop
pop
iret
lds
aaa
sarb
mov
out
and
dec
jmp
xchg
out
dec
clc
push
enter
sbb
leave
xchg
rep
push
xchg
cli
xchg
or
mov
push
lahf
dec
xor
movsb
in
xlat
dec
mov
pop
iret
shr
or
fs
negl
inc
xchg
inc
jg
mulb
out
push
test
inc
mov
inc
aas
stos
in
jle
outsb
ret
jle
jne
insb
cli
sub
pop
inc
loop
jns
xor
int
jne
movsl
mov
inc
clc
push
mov
imul
sbb
jmp
lcall
pop
cmc
xlat
mov
sbb
or
push
aaa
push
push
mov
mov
mov
arpl
or
jmp
test
xchg
cmp
inc
xor
xchg
xchg
test
repnz
mulb
out
or
xor
jne
xor
mov
jge
mov
jne
mov
mov
pop
repnz
pop
repz
shll
dec
inc
jns
jbe
scas
cmp
insb
bound
inc
push
or
xor
sarl
mov
push
xchg
negb
iret
lds
push
jge
mov
pop
xchg
cld
scas
popf
sbb
ds
js
mov
adc
cld
cmp
inc
and
ds
and
icebp
or
dec
sbb
movd
stos
xchg
xorl
das
rorb
jp
xor
outsb
jb
aaa
mov
js
hlt
pop
cli
aam
sbb
jns
lret
lods
mov
cwtl
xchg
mov
stos
pop
test
repnz
inc
hlt
add
sub
pop
pop
pushf
mov
out
subb
adc
mov
lods
popf
pop
add
sub
outsl
int3
and
jle
rclb
sub
out
mov
imul
and
add
pop
pop
outsb
pop
or
jecxz
jle
mov
ss
push
je
add
and
mov
xchg
in
mov
mov
scas
hlt
inc
lcall
rcpps
xor
xchg
mov
je
and
orb
outsb
xor
push
gs
pop
std
lcall
fs
bound
rcrl
int3
add
gs
sub
stos
rorb
push
dec
testl
sti
xchg
push
xor
jge
notl
adc
es
xor
xchg
inc
ja
adc
xlat
push
fists
add
pop
aas
jmp
mov
mov
dec
push
pop
jo
xchg
cmp
int3
xor
scas
jns
mov
test
int3
pop
sub
adc
mov
rolb
imul
out
jb
mov
mov
rcl
aas
xor
xlat
and
iret
aas
pop
call
test
and
js
insl
into
call
enter
sbb
push
jmp
test
pushf
data16
repz
dec
imul
push
xor
test
or
inc
pop
out
movsb
lret
mov
cmpsl
xor
out
mov
mov
cmp
xchg
mov
sub
sbb
das
pop
sarl
sbbb
cwtl
mov
jne
push
mov
pop
and
aaa
je
les
jbe
mov
cmpsl
adc
add
sahf
jbe
jge
push
mov
jne
xor
inc
xchg
and
nop
jle
or
gs
inc
mov
sbb
xchg
outsb
mov
int
add
fsubr
push
pop
cmc
das
mov
imul
mov
loope
out
jbe
push
mov
or
dec
mov
loope
ss
push
jmp
mov
and
mov
sarl
notb
jecxz
adc
xchg
fs
dec
divb
mov
xor
mov
inc
rorb
add
fdivr
dec
xchg
scas
add
lcall
dec
xchg
lret
test
loope
inc
push
xchg
mov
xor
fwait
lds
pop
inc
fistps
pop
fisttps
inc
push
lea
xor
or
out
mov
push
jae
lea
xor
fidivl
loopne
ds
scas
mov
inc
mov
adc
shll
stos
push
push
inc
mov
mov
sub
nop
mov
xchg
movsb
hlt
imul
loop
cmpl
addr16
mul
fists
and
mov
pop
ret
xor
mov
adc
lret
adc
dec
lcall
dec
gs
xor
dec
adc
mov
repnz
push
xor
pop
nop
ss
add
xor
cmpsl
or
mov
sbb
push
fldcw
push
int
xchg
push
mov
pop
je
push
add
xchg
imul
scas
lea
cli
push
cmp
xchg
in
hlt
and
lret
mov
xor
or
push
outsl
ret
mov
addr16
mov
cli
pop
jmp
mov
pop
xchg
dec
les
xchg
inc
lret
sahf
aad
inc
jge
addr16
clc
xorb
mov
push
js
pushf
imull
dec
push
aam
pop
and
push
mov
test
xor
push
add
lcall
shrl
out
inc
xchg
repnz
jp
dec
cmp
lods
loop
dec
jle
add
repz
cmp
jnp
sub
dec
dec
pop
rcl
xor
shr
inc
sub
movsl
das
add
inc
inc
or
mov
adc
cwtl
mov
fildl
mov
pop
sub
pop
pop
icebp
nop
mov
das
rorl
jbe
arpl
add
aaa
clc
scas
mov
outsl
xor
mov
push
sbb
mov
fcompl
dec
mov
dec
cs
rol
pop
shrl
xor
les
cmp
inc
aad
cli
orb
cmc
pushf
xor
inc
lods
cmp
lods
shll
or
lods
jbe
lods
cmp
sub
mov
jbe
jl
push
aad
mov
xor
sub
jp
push
push
fnsave
std
or
adc
jb
mov
rcll
or
aam
cmp
inc
add
mov
mov
push
or
pop
mov
inc
out
sub
dec
pusha
sbb
xor
sbb
ljmp
lods
testl
or
xchg
add
mov
pop
mov
stos
push
rolb
fs
addb
test
fcmovu
lahf
lret
daa
repz
mov
scas
sub
dec
test
inc
dec
jbe
jb
push
mov
outsl
add
pop
sarl
insl
add
es
in
jge
out
and
xchg
subb
xchg
sbb
xchg
xor
mov
adc
ja
iret
ljmp
mov
rolb
sub
repnz
fildl
or
xor
scas
jno
popl
aad
dec
ja
pop
cmp
jb
imul
push
or
xchg
xlat
inc
mov
or
jo
mov
xchg
xlat
mov
inc
and
adc
mov
clc
fs
rcll
lret
adc
cmpsl
push
mov
js
jb
xor
mov
aam
mov
and
xor
pop
dec
in
lods
in
cmpl
repz
xchg
xchg
push
sbb
dec
pushf
pop
pop
cld
mov
imul
sbb
cltd
icebp
out
xchg
cmp
sahf
cmp
daa
loope
fldenv
push
enter
pushf
mov
cmp
xchg
adc
sti
push
rol
sti
adc
push
fsts
test
roll
add
in
push
sub
int3
orl
data16
inc
inc
push
lods
pop
jno
repz
pop
cmpsl
sahf
inc
push
dec
arpl
inc
movsb
cmp
in
stos
pop
inc
cmpsl
gs
dec
push
xchg
nop
sbb
cmc
sahf
and
shrl
fwait
sahf
and
or
xor
or
subb
add
pop
inc
sbb
xor
test
and
out
sub
lods
lret
je
mov
sub
xlat
outsb
test
or
add
inc
in
daa
sbb
push
test
sti
adc
stos
out
jno
mov
clc
push
nop
push
adc
xchg
das
gs
cli
out
dec
pop
mov
sub
cmp
test
or
sbb
cmp
pusha
mov
rorl
push
jb
cmp
adc
scas
aam
adcb
push
out
in
ret
fcmovne
inc
lret
push
stos
cmp
mov
xchg
xlat
popa
loop
pop
pop
insl
insb
pop
cmp
mov
in
cmp
cmc
icebp
inc
mov
pop
mov
jg
add
xor
pop
rcrl
add
stc
aas
loopne
push
xchg
aaa
or
repnz
mov
xchg
push
in
dec
into
jb
push
mov
ror
iret
cmpsb
sbb
out
outsb
add
push
and
xor
or
jge
icebp
pop
push
xchg
orb
rolb
or
xchg
xchg
and
jns
inc
lea
pop
push
sub
push
adc
scas
xor
jo
mov
in
mov
insl
adc
pop
pop
inc
inc
lret
push
jmp
jg
adc
pop
gs
and
dec
adc
lret
add
dec
nop
xchg
test
xchg
cs
sub
insl
lea
mov
enter
outsl
sbb
mov
pushf
pop
push
add
lock
jo
out
push
and
jl
mov
add
neg
adc
daa
fcoml
mov
pop
xchg
adcl
mov
mov
addl
or
jo
jnp
mov
push
or
sub
imul
pop
inc
jo
incl
jmp
xchg
xorb
mov
mov
push
mov
mov
cmp
dec
cwtl
cmp
xchg
pop
lds
sub
fsubrl
rorb
or
cmc
cs
imul
fcomps
pop
std
clc
nop
inc
push
mov
jbe
ja
sub
inc
push
sub
sbb
pop
loopne
ficomps
frstor
mov
inc
mov
inc
adc
add
fistps
push
xor
dec
iret
pop
into
cltd
pop
pushf
sub
cmp
ret
xchg
pop
aas
imul
inc
inc
ja
adc
lods
lret
and
mov
jl
sbb
cmp
leave
push
jne
push
mov
push
xchg
mov
xchg
rorb
addr16
jge
or
ror
test
into
ja
sarl
or
ss
xor
pushf
or
mov
mov
cmc
test
cli
push
sub
out
dec
shr
stc
dec
xlat
lcall
orl
jge,pn
mov
dec
mov
dec
sbb
dec
shr
frstor
push
lods
jne
or
lods
mov
sbb
es
rorb
cmpsb
push
into
cltd
test
dec
sbb
fistps
lds
push
sub
test
int
negb
xchg
shrb
cmp
xor
or
pop
xchg
mov
mov
jae
jp
pop
mov
pushf
outsb
and
and
cmpsb
or
fdivl
inc
out
cmp
je
icebp
nop
jge
and
mov
jp
jge
std
mov
pop
sub
pop
outsl
sarb
lds
mov
clc
mov
pop
mov
cmp
stc
push
fidivrl
and
mov
movsb
mov
jp
iret
mov
and
xchg
repz
sub
outsl
negl
xor
outsb
xchg
xchg
test
cmp
lock
mov
sbb
xlat
dec
dec
xorl
sbb
pop
cmp
fildl
xchg
dec
push
pop
loope
mov
pop
push
test
mov
add
fstpl
outsl
mov
sbb
adc
xor
dec
dec
push
mov
negb
inc
mov
mov
rolw
push
xor
adc
repz
push
xor
xchg
loopne
sbb
outsl
mov
stos
mov
es
stos
ds
pop
sahf
mov
pop
jnp
xor
mov
pushf
or
sub
fwait
and
inc
mov
push
inc
cmc
rcrl
leave
inc
xchg
xlat
jo
es
lds
aam
mov
out
gs
dec
mov
xchg
cmpsl
outsl
mov
movsl
shll
repz
addb
push
inc
xchg
jle
push
jg
jl
jp
jno
into
xor
pop
popf
mov
xchg
lock
stos
mov
in
xor
lods
test
loop
or
pop
pop
hlt
cmpsb
mov
rorl
mov
loop
mov
mov
stos
addl
push
cmp
xor
bound
popa
mov
lcall
popf
fwait
and
and
pop
out
int3
out
push
pop
cli
jbe
sbb
jb
popa
cmp
add
cmp
dec
jle
cmp
cmp
std
and
ss
push
mov
sbb
cmp
adc
xlat
sub
add
xchg
pop
mov
bound
jno
je
lahf
add
stos
push
push
pushf
call
repz
addr16
xor
fadds
adc
ret
je
push
cli
push
cmpsw
mov
dec
add
fistpll
clc
fisttps
push
inc
pop
les
popf
paddq
jb
cld
scas
jmp
jl
mov
div
jbe
push
xchg
xchg
cmp
shrl
rclb
scas
in
jl
inc
mov
negb
arpl
inc
pop
dec
lret
jbe
mov
lock
adc
xchg
psubd
mov
ds
sub
ror
dec
dec
sub
arpl
mov
mov
in
push
push
les
xchg
sub
jle
shll
pop
notb
add
lock
rcrb
xor
mov
lods
mov
addr16
push
pop
bound
dec
add
xchg
pop
insl
test
inc
popf
add
inc
push
xchg
ss
enter
imul
jmp
adc
mov
test
pop
inc
pop
subl
push
pop
cltd
mov
and
dec
cmp
pop
jo
cmp
lret
outsb
mov
mov
add
xchg
loop
jge
div
jmp
repnz
cwtl
fadds
push
cs
or
mov
je
sbb
into
cld
adc
jmp
call
icebp
jae
dec
xchg
push
push
repnz
inc
hlt
in
xchg
or
mov
adc
jb
imulb
out
leave
subb
xor
lcall
mov
ja
sub
inc
xchg
pop
test
cltd
loope
inc
xchg
ficompl
mov
push
addb
cmc
sub
mov
push
jno
rcrb
call
sbb
sub
push
mov
mov
into
test
and
sti
ret
push
imul
arpl
js
mov
jne
ret
mov
icebp
int
mov
out
pop
xchg
loop
mov
stos
pop
into
fimuls
and
mov
cmp
je
cmp
xchg
xor
in
sbb
dec
fdivrs
insl
idivb
and
mov
stos
and
fcoml
jecxz
pop
pop
inc
flds
daa
cltd
out
mov
adc
lea
dec
lcall
sti
arpl
add
cmpsb
add
pop
scas
imul
js
aad
adc
xor
add
adc
add
inc
lods
repnz
mov
inc
inc
out
imul
loop
sbbb
dec
xchg
pop
sbb
cmp
aad
mov
mov
shlb
push
sti
mov
out
int
pop
add
cmp
inc
push
dec
mov
fucom
jbe
gs
jg
mov
dec
popa
mov
outsl
aad
push
out
and
rcrb
cmp
dec
mov
jp
aam
xchg
mov
mov
fildll
fisttpl
sub
lock
or
jecxz
sbb
mov
cli
sub
lahf
ljmp
rcl
je
aam
push
xchg
or
sti
in
or
scas
call
in
pop
int
push
push
scas
imul
adc
jge
jmp
push
mov
and
adc
mov
xchg
int
scas
and
fnstcw
push
in
iret
enter
jne
jns
xchg
lods
repnz
call
test
add
test
mov
pop
fs
loopne
pop
xlat
jmp
out
aam
cmp
xorl
jns
loop
jl
pop
rcrb
jge
pop
xchg
xchg
movsb
mov
and
add
xor
jl
cmp
jmp
sbbl
xlat
aas
sub
xchg
jns
cwtl
cli
pushf
fisttpl
adc
jle
xlat
mov
adc
push
jb
mov
mov
stc
add
test
out
aam
mov
nop
dec
add
jo
leave
popf
jo
es
lock
cli
inc
int
rol
jle
mov
clc
decl
call
ja
fisubs
mov
add
rorb
popf
dec
mov
xchg
push
cmp
inc
cmc
rol
jmp
sti
push
inc
jns
mov
test
in
mov
iret
rcrl
sahf
jl
icebp
divl
or
filds
mov
mov
xchg
out
lods
push
lods
xchg
stos
sbb
imul
jecxz
cmc
outsl
pop
xlat
push
aas
jp
add
mov
das
mov
sarb
add
rcl
mov
sti
dec
cmp
lock
pop
jle
inc
xchg
filds
jo
inc
push
cld
jge
and
lret
lock
imul
aam
fisubrl
ret
lahf
sbb
xor
adc
js
sbb
pop
dec
jecxz
clc
stos
lods
push
adc
or
lret
pushf
lahf
add
aas
add
fwait
mov
pop
sub
dec
pop
cld
ja
orl
je
sub
pushf
inc
sbb
mov
in
mov
leave
adc
xorl
add
sub
mov
gs
mov
rcrl
push
xor
ret
nop
je
in
mov
add
xor
sub
dec
