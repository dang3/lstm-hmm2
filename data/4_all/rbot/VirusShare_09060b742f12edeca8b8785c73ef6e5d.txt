cmpsb
pop
or
xor
xlat
icebp
inc
int
lds
mov
sub
push
xchg
xchg
dec
repz
xchg
lock
rol
shrb
jg
loop
pop
xlat
ljmp
xchg
jge
dec
push
sbb
lcall
jns
jnp
ds
pop
push
jno
or
js
inc
dec
subb
xchg
test
inc
out
fxch
rcll
out
adc
push
pop
lods
jnp
mov
mov
xor
jo
ja
and
int3
jo
test
mov
out
hlt
mov
loop
jl
cmc
test
mov
xor
cwtl
insl
cmp
leave
std
lret
inc
jmp
push
xchg
jo
mov
sbb
clc
bound
sbb
xor
mov
shr
jecxz
mov
out
popa
adcl
pushf
std
or
mov
scas
push
push
inc
xlat
fisubrs
pop
xchg
out
adc
lock
cli
sbb
lcall
push
dec
imulb
test
adc
mov
aam
ds
inc
jbe
flds
daa
push
in
cmp
or
xchg
in
nop
sub
mov
addl
fs
lock
push
notl
pop
ficoms
sbb
sub
xchg
mov
test
cmpsb
pop
pop
cmovns
xor
lret
adc
pop
dec
mov
fisttps
movsl
ljmp
scas
fnsave
ret
lock
testl
in
inc
fs
dec
jl
ljmp
nop
inc
pop
mov
sub
fadd
jl
icebp
rcll
mov
adcl
call
jge
vmwrite
enter
lcall
jge
mov
add
mov
pop
mov
mov
rorl
push
insl
ss
bound
test
fwait
int3
mov
mov
adc
imul
cmpb
add
xchg
sbb
sbb
in
xor
insl
or
cs
cmpsb
jne
mov
mov
stos
jl
or
les
adc
adc
adc
xchg
fwait
jo
nop
icebp
inc
outsb
je
cmp
iret
mov
rcr
jae
mov
ljmp
sbb
je
push
je
sbb
add
pop
dec
mov
jge
movsl
aas
pop
ja
popf
push
xchg
adc
outsl
orb
xchg
xchg
xorb
mov
ljmp
cs
inc
hlt
pop
and
xor
ljmp
repz
je
cmp
fidivrl
loope
jno
cmp
jecxz
insl
pop
lahf
rcl
neg
loop
rcr
cmp
sub
mov
cmp
push
test
mov
pusha
push
push
add
xchg
and
ljmp
jmp
xchg
call
rolb
jle
lds
jb
jbe
cli
cmc
pop
pop
mov
jo
shl
adc
clc
pop
sti
inc
pop
push
mov
clc
cmp
mov
test
push
mov
enter
addr16
dec
mov
sbb
mov
iret
sub
mov
addr16
adc
bnd
addr16
xchg
push
in
out
daa
lcall
repnz
xor
clc
das
test
movsb
push
push
mov
mov
xor
aas
stos
mov
cmc
add
adc
dec
and
aaa
jecxz
or
sahf
scas
movl
rorl
das
mov
jae
in
jb
stos
mov
shrb
fnsave
push
add
inc
sbb
fiadds
and
xor
xchg
mov
jne
push
fidivs
icebp
imul
xchg
pushf
jns
stos
ds
inc
jmp
lahf
call
rorl
push
xchg
sub
insb
add
mov
and
and
adc
xchg
sbb
sbb
and
xchg
add
jno
cwtl
and
test
pop
lods
ljmp
adc
mov
xor
jnp
dec
popa
jl
xor
or
icebp
sbb
icebp
fs
mov
insl
xor
es
daa
fwait
jg
fnstcw
movsl
cmp
aas
mov
mov
addr16
fs
xor
mov
cmc
rclb
ljmp
adc
mov
pop
xor
mov
lea
lea
ds
popf
dec
into
mov
mov
incl
pop
inc
pop
lods
rcrb
cli
sub
pop
jne
pop
sub
pop
pop
push
and
adc
push
stos
pop
or
mov
lods
mov
iret
jnp
cli
and
pop
insb
adc
and
pop
mov
pop
sbb
fldcw
idivl
xor
push
bound
punpckldq
call
xchg
in
imul
sbb
mov
and
jno
adcb
std
shlb
mov
push
dec
adc
ss
and
push
addl
into
leave
repnz
or
push
ds
add
arpl
dec
and
je
test
and
cmp
push
fnstsw
popf
cwtl
mov
push
xchg
mov
xlat
loop
mov
jnp
adc
stos
shrb
sub
fnstenv
sub
xchg
scas
lret
sub
cld
fsubl
sbb
xchg
clc
add
clc
lea
jmp
jl
pop
in
push
jb
cmp
enter
mov
push
test
push
push
mov
js
subl
lcall
add
sub
push
test
pop
add
cmc
jl
add
cld
call
push
jl
nop
pop
push
jge
push
dec
pop
pop
nop
mov
movl
cmp
loop
jecxz
in
insb
inc
loop
jecxz
ds
jp
mov
leave
mov
inc
sub
jo
push
je
test
pop
cld
nop
mov
movl
loop
jecxz
mov
jo
fbstp
adc
test
adc
inc
push
push
push
not
not
pop
pop
pop
push
add
stc
movl
rol
ror
je
push
jno
add
pop
nop
inc
dec
clc
jmp
jp
push
add
jg
jns
add
or
test
lea
push
jp
test
pop
cld
or
cld
nop
call
add
mov
add
lea
mov
test
add
loop
jecxz
repz
adc
mov
cmp
in
push
iret
out
dec
test
add
lret
nop
push
dec
pop
cld
cld
stc
mov
xchg
push
sub
pop
test
or
ja
push
mov
pop
ror
or
cld
push
add
push
pop
pop
push
call
cmpsb
insl
jle
imul
leave
pop
adc
dec
out
pop
xchg
lods
fstpl
xor
mov
aaa
add
call
fwait
data16
aam
pop
xor
add
push
jp
sub
pop
push
push
add
pop
pop
test
jmp
push
divl
xor
and
adc
lds
mov
xor
jge
jne
adc
ret
rcrl
loop
push
test
jne
jmp
loop
jecxz
add
mov
ret
lea
cmp
andb
test
shll
enter
iret
inc
cmpl
es
xor
in
lret
cmp
push
rolb
add
xor
pop
pop
add
push
add
pop
push
call
or
mov
fisubs
dec
push
repz
add
mov
xchg
push
jl
in
in
cltd
cwtl
and
fnsave
repnz
test
jbe
and
test
lret
adc
ret
cmp
mov
pusha
add
mov
movsl
insb
xchg
leave
add
pop
push
mov
push
xor
pop
pop
push
xor
pop
push
push
and
pop
pop
push
pop
je
mov
push
jb
add
pop
loop
jecxz
jnp
stos
inc
test
jmp
stos
push
inc
xor
push
jnp
gs
aam
pop
mov
mov
push
dec
cli
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jmp
icebp
je
out
stc
and
jg
push
bound
mov
and
repz
aam
cmp
sbb
inc
aas
out
mov
cmp
repz
out
in
ret
dec
popl
jecxz
imul
mov
pop
mov
pop
stos
xchg
scas
outsb
sub
inc
push
test
pop
jne
push
mov
pop
shr
nop
dec
jne
jmp
jae
roll
dec
out
dec
mov
sbb
cmp
mov
sub
add
pop
adc
movsb
inc
xchg
addr16
mov
push
fldcw
clc
pop
jmp
fsubp
nop
jo
call
bound
inc
adc
in
clc
mov
in
pop
insb
sbb
add
shlb
icebp
fwait
xor
adc
imul
addr16
xchg
xor
ss
rcrl
xchg
jns
aas
out
je
xlat
or
sub
push
das
xor
cmpsb
nop
pop
data16
pop
or
mov
pop
call
push
repz
sahf
int3
sub
lods
imul
mov
push
iret
push
lock
pop
jmp
and
es
fildl
dec
sub
scas
jo
sbb
push
pop
cld
jae
mov
es
scas
test
push
fucomip
xor
bound
lret
lret
sbb
jge
sub
fists
cltd
lahf
jg
pop
mov
iret
and
ja
aad
repz
mov
xor
push
ss
test
cltd
jle
inc
adc
sbb
outsl
movsl
push
inc
aaa
dec
cltd
cmp
sub
test
cld
ret
jmp
xor
lea
test
fwait
sti
cmpsb
cmp
loope
sar
nop
stos
repnz
mov
sub
popa
pop
jecxz
push
sub
mov
fsubrp
dec
iret
mov
stc
sbb
inc
pop
sub
popf
dec
shr
das
pop
repnz
ja
cmp
mov
ss
call
arpl
lods
push
mov
mov
cli
lret
mov
cmp
cld
cmp
out
mov
ja
push
loop
fs
dec
xor
xchg
sbb
inc
mov
jns
sbb
lock
jne
hlt
ret
movsl
sti
pop
cmp
stos
cmp
push
add
cmp
cmp
ljmp
insb
in
jns
int
test
insl
fldcw
daa
mov
rcr
rol
push
les
adc
cltd
clc
andl
jle
fwait
int3
repz
xchg
inc
dec
mov
xchg
mov
pop
add
adc
enter
lods
in
push
lods
pop
pop
repnz
inc
sti
cli
add
xlat
pop
sbb
pop
jecxz
push
fmuls
es
loope
out
scas
sub
xchg
cmc
cld
xchg
sub
and
hlt
push
xor
mov
andl
scas
es
test
lods
notl
xor
cmpsb
sbbl
jp
push
clc
adc
or
or
add
and
inc
and
and
xchg
push
sub
mov
movb
xor
add
cmp
and
push
and
push
mov
lock
mov
or
jne
dec
mulps
icebp
cwtl
cmp
andb
or
into
enter
lock
test
std
clc
lock
mov
ds
xchg
int
xchg
in
loop
icebp
outsl
xor
mov
and
mov
out
adc
jbe
imul
mov
lods
lret
lret
sbb
inc
fwait
sub
popf
scas
nop
popf
dec
adc
dec
das
imul
cmp
dec
cmp
mov
mov
ss
scas
int3
arpl
inc
mov
mov
ljmp
scas
aas
dec
mov
mov
mov
sti
enter
fs
shrl
sbb
loope
mov
decl
sbb
je
ret
pcmpeqw
sub
pop
cmp
cmp
in
fbstp
push
arpl
push
cmp
cmp
jmp
xchg
jg
jecxz
jns
int
test
movl
mov
jle
jne
pop
ret
pop
push
les
adc
cltd
clc
sub
iret
jle
pop
int3
repz
sbb
mov
xchg
mov
jecxz
dec
adc
loopne
fcmove
lods
daa
leave
lods
jno
lods
pop
pop
cli
pop
repnz
push
repnz
fwait
aas
sti
cli
test
xlat
mov
orl
pop
fcoms
lods
fsubs
in
and
out
scas
lods
cmp
sub
loop
adc
inc
adc
push
xor
push
dec
int3
cmpsl
pop
sahf
sub
mov
nop
xor
jmp
iret
jmp
out
leave
out
or
mov
bswap
xchg
or
or
inc
jge
mov
xor
in
out
fidivrl
or
mov
mov
aaa
and
pop
popa
cmp
jb
pop
stc
mov
mov
push
dec
jecxz
inc
aad
mov
ja
push
fs
inc
xchg
mov
stos
ficomps
adc
lahf
int
cmpsl
pusha
test
test
clc
inc
int
dec
xchg
movsl
dec
lahf
les
xchg
in
ret
loope
pop
mov
fsubrl
mov
fmull
sbb
sti
sti
std
xor
and
push
sub
daa
ds
sbb
sbb
xor
pop
aaa
push
mov
push
mov
sbb
leave
sbb
std
push
in
mov
sarl
mov
pushf
gs
out
lret
xor
push
jae
push
scas
xor
arpl
fucompp
repz
sar
xor
cmpsb
leave
ficompl
mov
mov
testl
and
adc
adc
pop
mov
fldl
adc
outsl
ror
lret
add
sti
push
push
push
mov
fs
inc
loop
in
inc
mov
jb
xor
aas
scas
popa
test
je
add
adc
mov
jmp
pop
movsl
fbstp
pop
scas
cmpsb
and
jno
push
cmp
jne
cmp
inc
arpl
popf
push
mov
xor
testl
sbb
push
and
cltd
sub
xor
sub
xchg
ss
sub
sub
fs
xchg
in
add
fbld
mov
sti
cmpsb
xlat
ret
pop
inc
inc
fdivl
fwait
in
push
add
pop
call
or
rcr
dec
xchg
es
cmp
in
cltd
ret
push
test
jl
ja
lret
pop
push
adc
mov
or
add
jae
jle
mov
lahf
sbb
cmp
xchg
sahf
scas
adc
sbb
fmul
pop
pop
fdivrp
jecxz
dec
inc
mov
jl
rcrb
add
or
pop
bound
ret
jns
adc
in
or
popf
mov
int3
movups
cs
xor
movsl
lret
xchg
aam
xchg
fwait
mov
or
lds
and
std
jnp
sbb
test
and
fs
int3
cmpsl
mov
and
inc
mov
inc
push
pop
adc
lret
ret
mov
lea
leave
scas
xlat
test
loopne
pop
stc
push
xor
mov
leave
in
sbb
divb
jnp
push
lret
mov
pop
addr16
gs
or
int
or
mov
xor
das
lea
adc
jle
out
iret
ljmp
stc
in
cmp
sub
xlat
fbstp
out
cmp
mov
or
negl
in
xchg
out
sbb
dec
cmpsb
mov
mov
xchg
in
cld
sti
jae
addr16
in
mov
out
and
sub
add
jp
mov
lret
les
mov
movsl
and
das
jns
lret
lods
xchg
xchg
stos
lcall
in
pushf
sub
int3
aam
cltd
pop
aam
cmpsl
push
enter
into
dec
adc
jge
mov
fistpll
pushf
adc
aaa
sub
add
push
inc
jg
mov
hlt
dec
push
sbb
cmp
repnz
pushf
inc
test
or
dec
jnp
add
mov
jno
lcall
mov
push
and
dec
je
mov
xchg
lds
cmp
ret
adc
mov
sbb
or
out
pushf
packsswb
repnz
sbb
mov
xor
enter
xchg
ja
and
leave
or
lret
inc
dec
std
lock
mov
fwait
ret
mov
jge
dec
mov
push
add
lcall
pop
jns
pusha
popf
in
ds
mov
or
mov
pop
mov
test
hlt
nop
cmp
ds
lods
push
cmp
jge
stos
adc
mov
push
int
push
jnp
lret
sahf
sar
pop
daa
pop
fnstsw
aad
cmpsb
lret
mov
jb
inc
cmp
rcr
jp
out
or
push
xchg
cmp
push
and
cmpsl
adc
dec
imul
loopne
or
insl
xchg
repnz
pop
jne
pushf
iret
mov
loope
sahf
sti
imul
sahf
mov
jae
xchg
fists
add
jo
pushf
cmp
pop
xor
mov
mov
inc
sti
sbb
xor
sbb
push
sub
lahf
fs
jnp
dec
stos
aam
mov
mov
mov
and
mov
cli
inc
test
int
bound
out
push
lock
jo
ds
cmc
pop
sub
dec
push
rorl
divl
or
in
cmc
jmp
sub
push
imul
pop
pop
paddb
push
movsb
sbb
outsl
mov
mov
lods
cmp
cmpl
pop
cmp
adc
sarl
cltd
shll
inc
push
out
outsl
movsl
loope
inc
ror
inc
mov
pop
jns
es
mov
adc
imul
jle
inc
and
lock
xchg
xor
jge
pop
pop
repz
pop
inc
outsl
xchg
mov
shr
adc
xchg
aas
sbb
icebp
or
mov
mov
pop
mov
mov
incl
fisubs
iret
iret
xchg
pushf
adc
aam
and
jne
push
push
xor
faddl
pop
je
test
notb
ret
cwtl
cmp
xchg
out
add
lahf
mov
xor
push
and
sub
fstpl
push
adc
fwait
adc
icebp
jmp
rolb
pop
das
or
pop
jmp
adc
outsb
stos
xor
or
jb
cmc
je
insb
pop
int
out
add
jecxz
mov
fs
cmpsb
pop
enter
mov
scas
mov
push
cmp
mov
pop
push
int
jbe
popf
mov
and
lea
mov
push
and
int
js
std
cld
mov
bound
in
lcall
adc
call
iret
mov
mov
push
mov
stos
pop
xlat
dec
jae
ss
movsb
jge
xchg
pop
cmp
lret
pop
iret
insb
mov
push
fwait
mov
fs
fnsave
inc
ljmp
sbb
mov
shlb
and
cmp
xor
add
sbb
in
jb
mov
out
es
add
cmp
adc
xchg
lods
cmp
int3
jg
ljmp
push
add
inc
dec
fldenv
in
jbe
ret
xchg
lret
add
jb
insl
loope
sbb
jle
mov
sub
repnz
rclb
sub
push
jne
fs
inc
jp
fistps
jne
imul
push
jne
mov
mov
pop
sahf
sbbl
out
jge
xchg
jecxz
jge
adc
cmp
test
sbb
test
sub
fstl
mov
aad
inc
lods
testb
jmp
lds
lds
sbb
arpl
cmpsl
jp
xor
js
sbb
ds
xchg
jge
jnp
call
xchg
add
pop
adc
cld
int3
push
sbb
call
pop
jl
xor
mov
shlb
mov
pop
push
cwtl
out
sbb
cmp
mov
xlat
ljmp
popf
daa
jns
sub
es
sbb
push
shlb
ljmp
adc
mov
push
push
add
jnp
cld
movsl
sbb
lds
jmp
je
sub
ss
cltd
adc
stc
xchg
lods
mov
ja
mov
sahf
call
outsb
enter
flds
lea
cmp
out
out
sbb
and
pop
dec
fs
add
inc
dec
inc
mov
sbb
mov
jge
sub
in
mov
sub
out
pop
mov
mov
add
jmp
shrd
adc
dec
sbb
mov
shl
adc
mov
jmp
cmc
sub
repnz
aam
test
pop
jmp
fwait
mov
and
loop
sbb
loop
popa
inc
scas
stc
loopne
cmp
out
jl
aad
cmpl
xchg
jnp
out
rorb
or
repnz
xor
das
sar
push
mov
mov
fstl
jecxz
inc
mov
xchg
push
not
movb
xchg
sarb
or
and
dec
stc
mov
repz
jmp
and
cmp
loop
adc
sarl
jle
in
dec
mov
inc
push
push
in
pop
notb
mov
in
inc
xchg
out
mov
insb
sub
and
cs
adc
mov
in
test
mov
mov
lahf
mov
jo
mov
push
lods
cli
fwait
adc
orl
jnp
hlt
or
xor
sbb
jo
insb
xchg
jp
or
aad
mov
xchg
dec
adc
dec
sub
inc
ja
cmp
jmp
es
sahf
lea
popa
mov
dec
dec
sbb
sub
addr16
shrb
imul
push
hlt
bound
cmp
stc
pusha
mov
push
bound
shr
loop
or
insl
push
jns
data16
cmp
imul
fmuls
lret
adc
icebp
pop
int
test
icebp
jmp
pushf
sub
or
int
xchg
rclb
mov
mov
jecxz
out
xchg
adc
xor
stos
mov
add
iret
mov
cmpsl
lret
mov
hlt
in
or
adc
mov
inc
xor
cs
sub
test
stos
hlt
push
shlb
fiaddl
adcb
clc
popf
punpckhbw
inc
sub
or
jne
mov
sub
push
mov
add
inc
jbe
push
cmp
inc
into
cmpsb
mov
lods
outsb
pop
add
iret
ja
js
ss
enter
mov
add
and
sbb
mov
xchg
movsl
mov
mov
jecxz
pop
movsb
outsb
fs
imul
in
scas
leave
notb
lds
ucomiss
and
inc
or
arpl
cmp
cli
js
repz
xor
sti
es
cmp
mov
mov
jae
repnz
movsb
inc
movsl
mov
sub
aad
jns
outsl
lods
mov
sbb
jge
aaa
daa
xchg
mov
jno
aam
leave
hlt
mov
int3
dec
mov
adcl
sub
jg
fiadds
in
mov
loope
lahf
fcomp
andl
shr
addb
fmulp
mov
loope
sub
sub
lea
shrb
repnz
loop
fnstenv
pop
or
jmp
mov
inc
lret
es
add
inc
mov
and
pop
adc
ss
jle
pop
aaa
mov
add
lock
es
inc
fldl
lea
lds
outsl
pop
mov
push
clc
xchg
pop
hlt
inc
or
jge
push
stos
enter
mov
dec
shr
fcmovbe
stc
sahf
loop,pn
fnstsw
dec
int
cmp
popa
xchg
mov
push
out
aaa
mov
addr16
mov
test
lcall
fsubp
and
sbb
sub
outsl
xchg
cwtl
jle
repz
jb
call
mov
addr16
int3
in
hlt
in
push
icebp
repnz
add
andl
test
jge
push
mov
insb
mov
inc
mov
push
addr16
lods
hlt
xor
xor
fs
out
outsb
xor
xor
dec
bound
mov
sar
cmp
adc
push
setle
fisttps
ja
mov
cld
and
cltd
sti
xchg
push
fmulp
or
xchg
mov
fisttpll
xchg
cmp
jg
leave
mov
or
ffreep
jecxz
mov
push
ljmp
dec
jl
cli
push
mov
cmp
es
and
xchg
bound
dec
mov
mov
popa
mov
aas
add
jmp
xlat
fs
mov
lcall
stos
aas
imul
arpl
stos
in
hlt
sbb
aas
repnz
notl
xchg
hlt
adc
cwtl
jg
sbb
cmc
adc
ja
xorb
push
aad
push
stos
mov
fsts
das
stos
mov
jmp
xchg
mov
jecxz
jnp
sti
sbb
mov
mov
inc
xchg
cmp
pop
aad
fldcw
jnp
sub
jp
mov
rcl
nop
mov
popa
adc
sahf
mov
cmp
mov
insb
iret
mov
dec
mov
mov
or
inc
testl
jno
dec
mov
sti
add
push
mov
lea
xchg
test
sub
pop
pop
jmp
sbb
hlt
in
movsw
pop
mov
sub
jo
push
cmp
imul
leave
in
push
test
in
mov
push
mov
push
xchg
stc
dec
scas
aaa
sbb
bnd
and
mov
pushf
cmp
in
jmp
pop
movsl
cmp
in
adc
scas
or
push
fisttpl
in
sub
mov
ljmp
ds
pop
or
sbb
fcomps
lock
jl
les
mov
enter
test
jp
bound
in
aad
repnz
cmp
fstpl
addr16
scas
fnsave
xchg
inc
sbb
mov
leave
pop
mov
mov
cltd
adc
cmpsl
in
push
shr
push
mov
mov
mov
mov
sub
inc
popf
adc
push
decl
cmp
push
nop
scas
test
in
mov
pushf
xchg
mov
cmp
nop
or
push
add
sbb
xor
xor
fmull
sbbl
push
stos
adc
out
lea
push
test
add
xor
sub
mov
xchg
dec
jae
std
popa
imul
loope
mov
push
out
dec
push
addr16
bound
int3
hlt
cmp
fldl2t
scas
out
push
out
add
mov
imul
lahf
lock
notb
fcoms
hlt
int3
mov
popf
pop
ja
add
mov
mov
lods
xchg
out
pop
enter
and
lods
lret
iret
mov
ss
and
or
bound
stos
sti
loop
data16
or
sub
mov
mov
cmp
push
and
jns
mov
sub
push
mov
fidivrl
jmp
movsb
mov
sbb
cmpl
push
mov
cmp
mov
data16
popa
xor
add
imulb
sbb
aaa
cmp
lock
ret
leave
aaa
arpl
pop
pop
push
cmpsl
mov
daa
adc
testl
or
repnz
scas
scas
out
in
out
enter
into
inc
roll
shll
lock
and
or
mov
ja
adc
fstps
leave
fists
mov
test
loop
sbb
adc
cmp
cmp
push
push
xchg
mov
out
dec
ficompl
in
mov
and
in
dec
cmp
inc
movsb
xchg
cs
mov
lea
or
inc
mov
stc
int
fcmovnbe
mov
loop
push
insl
mov
int
roll
sub
cmp
popa
lds
popf
mov
insb
out
stos
lret
xor
mov
jp
fldt
lret
jg
and
lods
adc
fs
cld
mov
faddp
lods
pop
fstpl
sti
cld
frstor
dec
mov
cmpsl
cli
scas
mov
mov
mov
and
sti
lret
bnd
test
mov
mov
dec
ficoml
fwait
jb
scas
push
sbb
push
lds
xor
xor
mov
jno
inc
xor
lret
push
or
add
mov
in
lods
arpl
add
sbb
mov
cmpsl
dec
icebp
and
and
scas
push
mov
cltd
imul
cltd
inc
andb
jmp
pusha
jl
aas
adc
loopne
mov
push
lret
pop
js
mov
jecxz
mov
test
sbb
sahf
xchg
insb
cli
negb
imul
sbb
adc
iret
repnz
pop
or
add
fwait
add
dec
scas
jecxz
test
jle
pusha
cmpsb
mov
pop
add
push
in
sbb
add
std
aas
in
cli
sub
addr16
daa
in
mov
jne
inc
pusha
mov
add
out
in
aas
pop
sbbb
fisttps
xor
or
lret
and
mov
out
xchg
add
pushf
jle
sub
cmp
jne
jp
pop
pop
iret
adc
scas
push
push
cmp
shlb
add
mov
jae
inc
fiadds
mov
int
mov
call
push
mov
repz
or
add
add
mov
push
nop
loopne
cltd
jno
rcrl
mov
rcrb
lea
aaa
fcmove
lret
pmuludq
mov
mov
insl
icebp
cmc
cmp
mov
mov
mov
or
dec
icebp
pusha
pop
lret
mov
jg
stos
mov
es
mov
xor
pop
adc
nop
cmc
aas
mov
sbb
into
lock
xchg
cmpsl
es
fwait
insb
fcoms
xor
jnp
imul
rcll
cmp
dec
sub
cmp
imul
mov
xchg
inc
in
sbb
pop
int3
cmp
xor
das
insl
sbb
and
cmp
popf
dec
xchg
xlat
add
or
test
jmp
pop
mov
lds
mov
sahf
leave
mov
inc
hlt
jae
push
or
cmp
mov
dec
aas
shlb
loop
add
push
addr16
out
fldt
ds
gs
sti
loopne
mov
mov
mov
mov
pop
outsl
push
mov
xchg
out
sub
push
mov
dec
and
mov
pop
test
xchg
inc
cmp
adc
jg
dec
cmp
fisubrs
pop
sub
aam
and
out
mov
jne
add
and
pop
cmp
xchg
clc
cwtl
ss
xchg
mov
add
mov
push
lcall
stos
push
fcoms
pushl
imul
dec
xor
push
cs
sub
loop
fisubl
outsb
mov
lods
pusha
mov
add
lret
popa
std
icebp
inc
add
das
cmp
jae
dec
popf
dec
sbb
dec
cli
dec
rclb
pop
adc
rolb
xlat
enter
pop
leave
xor
inc
bound
push
sbb
jmp
lock
rclb
push
jecxz
mov
add
data16
pop
mov
mov
mov
sahf
addr16
js
pop
xchg
jg
cmc
shlb
sub
ja
leave
dec
xchg
push
mov
jg
sub
ds
iret
xchg
push
mov
mov
and
mov
push
xchg
xor
sbb
in
push
ss
add
inc
jp
sbb
pop
imul
or
int
popf
jns
pop
lds
je
jnp
inc
xor
call
xchg
rcl
sub
dec
subb
insb
add
sub
arpl
xlat
xor
jp
push
mov
push
cmp
push
inc
into
push
xchg
adc
sbb
lods
and
fisubl
in
mov
stos
test
sub
mov
jo
jnp
mov
push
roll
mov
mov
lods
sbb
fwait
test
jecxz
lret
addl
das
sub
inc
sub
lea
test
in
je
xorb
cltd
push
int3
mov
cmpl
sub
xchg
mov
scas
or
xor
xchg
test
pop
pop
inc
mov
add
popf
int
sub
mov
testl
lods
xchg
bound
inc
sar
or
sarb
popf
mov
adc
xchg
in
xchg
mov
jg
notb
adc
fsts
jge
in
xor
add
pop
fdivs
in
orl
jb
mov
fs
cmpsl
loop
sbb
push
or
jns
lods
stos
fmull
mov
leave
lds
sbb
lahf
rcrb
pop
sub
lods
inc
test
pop
es
loope
mov
fnsave
rorb
pop
mov
push
test
dec
xchg
dec
stc
sti
sbb
mov
arpl
cmp
push
notl
xchg
inc
mov
cmp
sub
jecxz
popa
repnz
roll
xchg
push
push
enter
jo
xorl
addl
mov
loopne
or
mov
popw
repz
push
ficomps
icebp
into
test
data16
sub
das
add
icebp
roll
jmp
or
adc
push
inc
xchg
jbe
pop
lock
and
scas
lods
sbb
repnz
cmpsb
cmp
push
in
cmp
repz
and
lret
icebp
ja
outsb
rcr
cmp
scas
cmp
pop
testb
cli
lock
inc
pop
sub
jbe
insb
jne
icebp
cmp
std
rcrb
in
int
adc
stos
mov
adc
or
imul
mov
repz
in
mov
inc
call
jnp
repz
les
inc
cmp
push
dec
mov
jnp
mov
jbe
sti
loopne
add
test
mov
outsb
push
repz
ret
nop
insb
push
into
daa
add
js
mov
and
mov
and
in
jo
pop
aaa
lea
insb
push
jecxz
xchg
mov
ret
sbb
or
scas
xlat
out
out
inc
outsb
rcll
add
aas
mov
and
mov
sub
jp
or
cmp
mov
dec
dec
ret
push
lock
loopne
cltd
sbb
inc
jmp
jle
adc
jo
add
inc
in
or
ljmp
fistpl
faddl
mov
mov
mov
bound
xor
xchg
mov
fwait
scas
call
popf
test
cmc
pop
pop
xchg
sti
inc
xor
mov
popf
inc
sbb
mov
stos
mov
divb
sbb
mov
adc
jmp
orl
xchg
sub
lret
test
pusha
out
adc
das
mov
xchg
cmp
jnp
inc
ret
jae
mov
push
inc
cmp
nop
cmpsl
xchg
fmuls
dec
into
loopne
cmpl
xor
mov
pop
mov
ds
inc
outsl
xchg
sub
push
adc
dec
xchg
fwait
daa
mov
es
ja
jnp
shlb
mov
out
insl
cmp
lea
test
sub
shrb
jl
mov
leave
int
adc
sbb
mov
push
ds
pop
loope
sahf
out
rorb
dec
adc
nop
mov
xchg
push
cli
inc
repz
in
call
pop
je
xor
xor
mov
fcomps
pop
in
movsb
addl
imulb
imul
imul
mov
adc
mov
xchg
dec
jge
push
mov
cmp
addr16
cltd
je
xchg
mov
inc
push
test
mov
loope
mov
cmp
pop
test
mov
outsl
jbe
push
cmp
inc
cld
xchg
out
or
imul
hlt
sub
loope
rcl
xchg
sarb
nop
out
cmp
mov
daa
out
stc
lcall
es
outsl
mov
insb
out
cmp
adc
cmp
repz
push
jl
sahf
mov
xchg
imul
shrb
adcb
fsubrp
xchg
xor
mov
sbb
icebp
fwait
xlat
mov
jns
mov
dec
inc
sahf
cmp
and
dec
ja
mov
mov
imul
lcall
sbb
jmp
mov
arpl
test
adc
pop
rcr
mov
sbb
cmp
jbe
xchg
sub
pop
rol
sbb
faddp
dec
adc
pop
cmp
inc
xor
pusha
dec
push
fistl
xor
je
adc
in
adc
xchg
or
shrb
outsl
inc
faddl
pop
jle
xlat
xchg
sbb
xchg
lret
inc
icebp
cmp
pop
std
fisttps
mov
mov
sbb
push
out
movsl
data16
inc
or
test
bound
mov
sub
test
lret
lret
push
aam
cmpsb
stos
popf
cmp
push
lahf
add
xor
cmp
insl
jbe
dec
fiaddl
int
mov
insl
jl
enter
sub
fldl
fidivs
cld
fsubrs
stos
sbb
mov
in
std
cld
fnstenv
cmp
cmp
idivl
xchg
fldenv
shll
in
aaa
mov
out
xor
decb
inc
pop
dec
shlb
pop
es
fcmovbe
cmp
push
out
push
ficompl
add
and
sbb
add
pop
cmpsl
sub
in
add
xchg
not
push
js
rcrl
incl
pop
mov
jno
imul
test
lea
xchg
cs
mov
fidivs
mov
sub
cwtl
popa
push
cmpsb
xor
pop
add
mov
xchg
fistps
cmp
xchg
jno
jno
cmp
idiv
cwtl
adc
lods
xchg
xchg
bound
add
shrb
mov
imul
les
fsubs
jb
xchg
aaa
jb,pn
pop
int
inc
mov
test
inc
call
into
fstl
pop
mov
fdivrl
xchg
fistps
push
test
xchg
sbb
fisttps
adc
adc
pop
mov
das
sub
adc
jle
pushf
shrb
mov
jb
jle
lahf
dec
lret
arpl
sbbb
in
pop
mov
je
pop
pop
test
lods
rcl
xor
in
mov
pusha
cmpsb
xchg
xor
mov
adc
loop
roll
stos
call
mov
mov
dec
mov
push
call
mov
aam
cs
sbb
mov
scas
add
xchg
dec
cli
xchg
hlt
test
adc
xchg
push
and
jne
or
push
rorb
loope
test
pop
cmp
cmp
mov
andb
jnp
int3
hlt
sahf
out
mov
sbb
mov
test
shlb
dec
jle
or
cmp
aas
jmp
out
xchg
sbb
jno
jo
jne
mov
jmp
push
add
sub
add
push
adc
sub
pop
inc
mov
push
popa
inc
pop
mov
int3
jmp
popa
and
out
push
push
mov
shl
outsl
sub
xchg
popf
rolb
outsl
cli
addr16
insl
or
jge
inc
inc
lret
xchg
mov
pop
pop
adc
sbb
add
adc
and
testb
addr16
jne
jbe
std
cmp
jb
aad
push
mov
icebp
es
sub
adc
mov
das
push
mov
ret
jle
movsl
push
mov
iret
inc
inc
lds
add
xor
iret
mov
xchg
in
cmpb
xchg
or
fs
xchg
sarb
sbb
frstor
mov
int3
and
lret
call
jle
ljmp
in
pop
xchg
out
push
stos
test
mov
andl
sub
pop
gs
mov
sbb
fstpt
pop
fdivs
in
mov
test
loopne
pop
jge
cmp
loop
rclb
push
in
es
xor
out
shrl
testl
adc
xchg
mov
fsts
jecxz
pop
mov
in
sub
lahf
or
sub
repz
or
cs
je
call
adc
maskmovq
in
jle
xchg
inc
aaa
xchg
shlb
mov
aam
rolb
jmp
dec
mov
std
ss
push
sub
push
jmp
xchg
ds
push
mov
push
sub
lea
xor
cli
mov
push
ret
into
sar
loope
call
xor
in
fcoms
testl
rcr
out
std
imul
icebp
push
loope
and
ja
add
jb
insl
leave
rcr
sbb
cmp
test
mov
pop
stc
hlt
adc
stc
sub
cmpsl
call
pushf
adc
stos
outsl
pusha
pop
lods
aad
xchg
add
scas
mov
movl
fisubs
push
out
gs
rcl
stos
push
add
ss
sbb
sbb
dec
notl
punpcklwd
or
xchg
aas
adcl
sub
cli
arpl
aas
dec
fnstsw
cs
sub
pop
mov
iret
mov
add
sub
flds
cmp
cmp
and
scas
mov
fcomps
cmp
ds
out
add
xchg
insb
xchg
xchg
in
addl
jl
mov
push
pop
mov
inc
push
ficompl
adc
push
pop
add
sub
adc
jg
push
int3
and
push
setl
jp
sbb
mov
pop
push
mov
pop
insb
aaa
test
mov
mov
fwait
mov
loop
mov
cmpsl
aad
jmp
push
enter
scas
data16
pusha
and
pop
cli
enter
xor
mov
jmp
dec
dec
arpl
cmp
test
xchg
mov
mov
lods
push
aam
push
push
mov
push
popf
outsb
in
sub
xchg
cmp
insb
dec
jmp
and
das
add
loop
mov
jns
shrl
cmp
std
xor
xchg
dec
shlb
pop
cmp
std
fisubs
loop
mov
mov
or
fnstenv
iret
popf
movsb
xchg
jnp
mov
mov
in
out
inc
fisttpl
repnz
jnp
mov
ljmp
pop
xchg
lea
jp
jne
mov
or
outsb
cs
xor
or
aaa
pop
aas
arpl
ljmp
es
xor
mov
and
std
xchg
xor
arpl
mov
jl
fbld
push
lock
icebp
aam
call
push
push
push
adc
fcmovbe
push
scas
hlt
push
sti
and
les
cmp
adc
xor
mov
sbb
fmuls
jne
mov
push
fistps
into
and
lods
lea
xor
ret
jbe
pop
dec
loopne
shr
add
sbb
add
push
adc
dec
lret
hlt
push
and
sub
addr16
aad
adc
cmpsl
push
xchg
xchg
or
icebp
mov
das
mov
or
xor
xor
and
lods
pop
push
mov
mov
sbb
fbstp
dec
xor
or
int3
xor
jg
hlt
dec
lock
push
decb
rcrl
mov
arpl
inc
xor
mov
testb
or
or
jg
sbb
in
out
mov
rcrb
fists
sub
out
insb
bound
iret
fwait
sti
xchg
ror
mov
lods
xlat
push
nop
js,pn
and
sub
pop
addr16
test
es
lret
dec
sbb
push
les
pusha
test
aad
push
dec
loop
cmc
sub
add
in
sbb
cmp
call
mov
add
inc
mov
dec
fisubrl
shlb
fwait
ds
outsb
sbb
fs
xchg
pop
aam
push
sub
and
insb
jg
pop
dec
ret
nop
testl
push
adc
xchg
jmp
addl
fs
push
add
jge
lret
dec
cmp
push
mov
bound
fdivl
jg
mov
idivb
or
mov
pusha
or
ret
push
mov
addr16
xchg
jge
xchg
mov
push
mov
dec
sub
xchg
testl
stos
mov
popf
mov
scas
outsl
sub
repnz
scas
in
jo
and
clc
push
dec
mov
addr16
js
mov
inc
outsb
push
aas
jle
sbb
dec
rcr
fcoms
jmp
mov
aam
and
ss
rcrl
push
cmc
sub
imul
dec
in
fdivrl
fsubrp
xor
sub
mov
scas
cld
add
or
xor
xchg
addb
insl
push
pusha
push
adcb
fcoms
push
iret
sbb
and
sahf
cli
mov
lock
mov
xchg
ficompl
pop
mov
ljmp
sti
inc
jp
stos
test
push
and
cltd
imull
adc
mov
lock
mov
mov
mov
cmp
mov
or
fprem1
outsl
push
inc
and
jl
jp
mov
jo,pn
in
inc
push
mov
adcb
mov
adc
sub
xchg
push
push
pushf
push
ljmp
leave
fs
push
cld
cmp
fildll
incb
sbb
pop
jg
nop
popa
mov
and
mov
insb
pop
mov
das
push
fs
adc
jmp
add
repz
aaa
adc
xchg
loopne
adc
push
imull
and
sub
dec
push
inc
pop
xor
sub
cmpsl
enter
push
faddl
call
mov
lds
inc
popl
dec
out
js
dec
ljmp
pop
add
jb
out
iret
pop
jecxz
test
sbb
or
inc
pop
jecxz
dec
xor
pop
mov
int3
pop
arpl
idivb
fs
das
shrb
fistps
fstpt
notb
push
inc
add
sub
mov
negb
xor
dec
clc
movsl
cmp
adc
jge
push
inc
add
jae
movb
data16
mov
pop
xor
popa
cmp
cmpsl
sub
mov
or
iret
jns
sub
mov
cmp
popf
sub
or
sub
mov
adc
mov
nop
mov
or
fldt
js
sahf
fs
sbbb
in
pop
stos
lds
mov
adc
cli
mov
insl
push
mov
jge
dec
mov
iret
mov
mov
xchg
or
xchg
fs
dec
mov
mov
add
dec
mov
push
iret
std
jle
sbb
pop
cpuid
test
lods
xchg
fisubrs
jo
or
out
and
icebp
fwait
xor
and
mov
repz
add
push
popf
pop
out
adc
add
call
cmp
add
gs
cmp
arpl
ljmp
and
icebp
inc
adc
pushf
xor
leave
or
xchg
add
adc
mov
sahf
jl
fistpll
jae
mov
pop
xchg
sbb
ja
dec
fucom
repnz
call
lods
jo
mov
pop
jne
stos
cltd
jo
lods
lret
fidivrl
fsubrs
inc
cmp
sub
xor
fwait
pop
add
es
xchg
mov
xor
mov
mov
inc
cs
outsb
jno
xor
fildl
roll
mov
loop
xor
jle
or
pop
dec
arpl
jne
outsb
imul
bound
xchg
stos
pop
lea
stos
je
popf
rol
cld
dec
and
mov
adc
mov
adcl
pop
adc
xor
dec
stos
cli
shll
test
sti
xor
mov
leave
ljmp
pop
pop
add
dec
jge
lods
xor
in
xor
dec
cmp
movsl
out
aas
add
xchg
lahf
pop
or
hlt
ffree
std
xchg
jge
jbe
imul
push
push
xor
mov
out
dec
dec
jl
and
jae
mov
xor
or
cltd
int
mov
or
rcrl
mov
adcl
jne
push
jl
outsl
or
pop
bound
xor
fisttps
dec
outsl
inc
sub
test
xchg
in
jmp
mov
and
cld
divl
fsts
xchg
notb
sub
add
adc
sbb
popa
xchg
push
ret
daa
sarb
jb
loop
repnz
fmul
int
fdivr
fldcw
inc
adcl
sar
test
cli
inc
push
cmpsl
sub
push
subb
ret
lahf
dec
ds
xchg
ljmp
gs
loopne
mov
aad
jae
div
ret
push
push
je
pop
lds
daa
test
or
dec
or
test
mov
cmp
cmpsl
cli
leave
dec
xor
inc
les
push
clc
pop
inc
mov
pop
inc
dec
push
jns
cmp
cmp
fadds
or
or
mov
mov
sti
test
mov
leave
test
jle
push
xchg
dec
lods
mov
arpl
xor
loope
es
notl
popa
dec
xor
push
pop
int3
inc
leave
lods
sub
add
dec
jno
movsb
xchg
ljmp
lret
andb
mov
and
mov
je
mov
clc
inc
testl
cwtl
and
in
mov
es
jbe
push
cmp
imul
fisubrs
pop
or
adc
mov
dec
sbb
xchg
ja
or
shll
ds
data16
pop
in
test
subb
out
inc
mov
pop
loope
sti
std
insb
jb
and
adc
es
jne
mov
lods
mov
mov
add
mov
dec
jbe
subl
and
out
enter
lcall
movsb
dec
xor
xchg
cld
das
sub
sbb
xor
cld
scas
add
jl
mov
pop
mov
mov
iret
cmpsb
add
popf
inc
inc
xchg
std
sub
cli
push
cmp
aas
lods
cmp
int
pop
imul
push
jns
in
loop
out
xor
movsb
cli
frstor
cmp
cltd
ret
adc
push
inc
mov
arpl
pop
cmpsb
inc
xor
or
pop
lret
ret
sbb
jns
int
jne
pushf
or
xor
lret
push
iretw
pusha
push
incb
iret
cmp
sbb
pop
ja
inc
call
les
jo
aam
xor
out
cmp
aas
fimuls
lret
out
mov
jae
push
stc
ret
add
mov
repz
into
adc
vaddsd
int3
push
fsubp
inc
lret
hlt
xchg
push
ss
sub
cwtl
sbb
fsubs
mov
mov
mov
loop
jns
popa
fwait
sbb
mov
aad
into
mov
ja
aaa
in
adc
jge
add
leave
xor
jecxz
mov
outsl
lret
int
js
cmpb
shl
mov
sbb
hlt
rdmsr
loope
in
rolb
jecxz
mov
ss
pushf
sub
or
xchg
push
and
lods
sub
dec
and
cwtl
push
add
dec
push
mov
imul
inc
mul
aad
cmp
cld
out
push
adc
movsb
jle
xorl
push
shlb
jo
dec
inc
mov
icebp
pop
cwtl
mov
mov
add
xchg
sub
das
dec
cmp
mov
push
leave
mov
or
imulb
repnz
lahf
push
arpl
repnz
js
sub
gs
lcall
and
push
and
fiadds
ffreep
dec
adc
pushf
out
pop
jmp
test
popa
sub
les
sbb
xor
jecxz
push
out
out
cwtl
ja
fwait
dec
jl
test
sbb
and
add
add
jae
dec
ds
cmp
pop
in
leave
bt
in
shll
cmp
xchg
jmp
push
cmp
cmp
xor
jno
mov
mov
inc
out
mov
imulb
or
ja
push
pop
xchg
mov
mov
adc
out
pop
imul
push
sbb
cmc
mov
rcr
and
rep
aas
lods
iret
ret
sub
pop
xor
jno
push
jnp
out
pop
aam
jo
in
add
xchg
cmp
xchg
sbb
shl
and
dec
lods
inc
cmp
mov
cmc
outsl
mov
add
pop
jnp
mov
icebp
push
pop
arpl
movsb
mov
sub
addr16
out
repnz
xchg
cmp
clc
test
dec
or
xchg
shll
aad
in
stos
mov
jmp
jecxz
imul
adc
inc
insl
sub
pushf
scas
dec
jp
cwtl
fnstsw
clc
adc
mov
jg
outsb
cmp
out
sahf
dec
lcall
push
dec
adc
and
in
mov
mov
and
arpl
or
stc
xchg
popa
out
mov
cmc
pusha
mov
cmp
adc
bnd
lahf
je
jno
nop
dec
mov
aas
push
insb
into
inc
dec
jb
loope
aas
es
clc
mov
jne
lea
cmc
int
icebp
mov
adc
mov
daa
pop
popa
cmp
cli
jae
cwtl
imul
adc
fs
dec
imul
xor
cmp
imul
ret
xchg
out
pop
pop
and
jns
xchg
jecxz
shl
mov
mov
incb
or
xor
nop
xor
sbb
dec
nop
add
je
cli
fwait
neg
inc
pop
out
xchg
sahf
iret
adc
int3
mov
lods
push
pop
cmpsl
jg
jmp
sub
dec
pop
sbb
sbb
pop
test
pop
xchg
cmp
dec
xor
xorl
js
push
adc
pop
test
cld
dec
xor
andb
add
scas
and
idivl
stc
cli
fstl
mov
imul
jae
pop
into
sub
and
mov
jns
ret
rcl
lock
inc
std
lea
xchg
mov
and
jo
or
dec
movsb
sbb
sbb
jmp
lds
out
push
xchg
insb
jmp
stos
add
xor
mov
inc
aam
mov
sub
pop
dec
sub
mov
and
mov
sub
test
mov
xchg
mov
mov
out
iret
insl
ja
sahf
je
test
inc
jns
mov
pop
fcoml
or
or
orb
mov
jb
into
movl
cmp
test
movsl
mov
popl
jge
mov
iret
sub
sti
adc
aad
xchg
jno
ss
das
sbb
push
imul
test
out
pushf
out
inc
xchg
push
push
rcl
cmpsl
dec
mov
les
jbe
into
cmp
inc
dec
xor
xchg
lods
jne
aad
imul
xchg
test
push
mov
xchg
sub
jg
sbb
and
and
mov
mov
and
imul
js,pt
mov
jae
cmp
xor
repnz
testl
hlt
xchg
mov
xor
push
inc
pop
push
ds
jae
push
dec
cltd
idivl
push
adc
ja
jb
mov
clc
aad
dec
fdivl
call
jmp
fwait
in
and
sub
cmpsb
ret
jecxz
clc
inc
inc
fbstp
fldcw
xchg
sahf
stos
push
cmpsl
xor
push
fdiv
mov
pop
ficomps
or
stos
nop
ret
dec
ds
sbb
arpl
mov
pop
in
fwait
psrlw
mov
out
aaa
adc
mov
pop
jb
or
lahf
sbb
and
scas
xor
insb
mov
aam
scas
sti
push
loopne
dec
pop
stos
add
pop
sarl
fisubl
push
xchg
divb
sti
mov
insl
scas
xchg
lcall
xor
aaa
and
fmull
call
sub
adc
xor
out
mov
lret
jnp
imul
mov
scas
es
mov
inc
jno
adcl
adc
in
das
dec
mov
xor
push
scas
push
xchg
lcall
push
icebp
push
pop
clc
sbb
loopne
popa
std
adc
adc
pop
lods
xlat
into
xor
mov
ja
or
movsl
pop
out
ja
push
cmp
sub
mov
jne
insl
lods
sti
cli
cmp
mov
lret
jbe
shl
jmp
mov
test
ret
jbe
pop
in
cmp
and
sahf
sbb
or
adc
shll
in
das
push
outsb
into
pop
jmp
cli
out
scas
mov
dec
adc
mov
lret
xor
imul
pop
cmp
int
cmpsl
pop
pop
sub
test
lds
xchg
sub
loop
dec
jne
roll
std
cmp
xor
xchg
inc
xor
out
jb
and
imul
or
xchg
xor
js
fldcw
push
sub
xor
ds
and
push
inc
mov
add
push
arpl
out
mov
enter
orl
fdivrs
inc
jmp
pop
into
push
and
or
dec
inc
scas
xor
push
out
jecxz
movl
shll
and
mov
cmp
push
fisttpll
jmp
cltd
inc
jle
inc
xor
mov
push
in
cmp
sub
packuswb
or
or
rol
push
popa
outsb
push
in
and
mov
inc
jge
pop
fisttpll
cli
fsubp
cmp
mov
ret
mov
xchg
mov
mov
test
adc
sti
mov
sbb
stos
gs
sub
jp
sbb
movntps
ss
inc
andb
push
scas
add
adc
dec
aad
mov
lret
iret
movsb
or
lock
lcall
scas
mov
mov
idivb
fldenv
sub
dec
shrl
fwait
xchg
dec
frstor
inc
pop
lods
inc
add
or
xlat
stos
outsl
fsubrs
kmovw
in
jle
jnp
getsec
in
sahf
mov
jbe
cmpsl
adc
fmuls
mov
test
mov
lret
aad
add
loopne
push
int3
rorb
std
sbb
xor
pushf
call
cmp
cmpsb
xchg
mov
outsb
push
xchg
fmul
mov
aam
cmp
xchg
pop
mov
jge
add
cwtl
cmpsb
sub
cwtl
lret
add
sub
or
iret
fdivrl
sub
mov
dec
into
pushf
xor
inc
adc
ljmp
adc
mov
add
rcrb
mov
clc
add
cmp
fldl
aas
ror
ret
push
daa
in
jge
je
cmpsb
ror
in
sahf
xor
stos
hlt
call
pop
stos
dec
add
push
movsl
cwtl
gs
cmp
insb
jo
clc
mov
push
jns
jg
add
icebp
cmp
movsb
pop
arpl
xlat
lret
inc
adc
stc
fbstp
xchg
add
or
sbb
push
scas
push
jp
mov
and
mov
sbb
push
push
test
leave
ja
test
ret
dec
faddl
clc
jb
jno
xchg
lock
je
and
shll
jo
outsb
pusha
in
ficompl
loop
jbe
in
pop
jge
sbb
test
call
loop
or
das
int
sarb
fnstcw
jne
or
and
lea
push
ljmp
sbb
mov
fwait
jns
popf
scas
out
in
clc
daa
arpl
ror
pop
push
movsl
xchg
xchg
lahf
lcall
enter
pop
clc
aad
jo
lret
int3
lahf
jb
out
pop
sbb
cmpsb
jmp
inc
clc
lea
xchg
push
cmp
push
fcmovnu
popa
je
inc
jns
xor
sub
jmp
cmc
push
xorb
cld
pop
fistpl
aam
mov
jecxz
cmpsl
dec
enter
mov
pop
nop
cmp
mov
enter
push
sub
and
into
jb
push
inc
out
cltd
outsw
dec
insl
fnsave
int3
sub
inc
fisubrl
sbb
jb
inc
aam
or
push
jo
inc
repz
mov
rorl
dec
push
loope
sbb
jno
xchg
call
xor
xchg
push
mov
mov
lcall
insb
fildll
shlb
adc
sub
add
notl
das
push
stos
jo,pt
cmpsl
adc
mov
adc
push
sbb
pusha
loop
inc
add
dec
or
aad
cli
insl
dec
fsubrs
std
add
cld
test
jb
fisttps
mov
xchg
mov
mov
dec
imul
dec
sub
xor
inc
and
jne
mov
or
cld
jb
outsl
testb
fnstcw
adc
pop
pop
pushf
dec
lret
in
inc
push
mov
cmp
lock
and
aam
xchg
loop
movsb
incb
fistpll
in
cld
out
xorb
cs
insb
mov
mov
mov
adcb
dec
addb
add
cli
jno
jl
test
shll
or
sub
adc
xchg
pop
mov
lret
dec
ror
scas
pop
adc
test
das
add
lret
lock
jbe
sub
outsb
inc
cmp
and
inc
fwait
xchg
dec
jecxz
add
fisubrl
mov
into
sti
xchg
hlt
js
pop
iret
ds
popa
in
inc
xchg
xor
mov
mov
sbb
dec
pop
imul
addl
in
mov
test
mov
push
imull
fnstenv
xchg
mov
or
pop
push
add
inc
inc
cmp
popa
leave
je
mov
sub
lods
pop
pushf
push
adc
in
push
int3
mov
push
mov
jb
push
mov
push
sbb
test
daa
popf
pop
add
jle
mov
enter
sbb
push
nop
add
push
add
enter
inc
sub
lret
lods
fs
mov
push
pop
js
mov
hlt
and
roll
mov
push
lock
imul
sar
sti
push
es
aad
mov
xchg
out
mov
or
inc
sti
loop
push
or
pushf
addr16
bswap
inc
jo
into
fbstp
xor
xlat
ds
jno
xchg
mov
out
stos
fsubr
push
addl
xchg
ror
dec
jge
fildll
xchg
stos
out
cs
mov
out
add
aad
scas
scas
mov
mov
mov
cmp
and
add
or
ret
add
or
repnz
cmp
fs
pop
push
shrb
xchg
mov
pop
pop
call
xchg
faddl
xchg
fdivs
add
or
pop
int
cwtl
mov
rcll
testl
jmp
add
adc
xchg
jns
pop
fisttps
mov
push
gs
pop
dec
lods
roll
call
xchg
xor
fwait
cld
push
inc
mov
cmp
imul
xchg
push
xchg
lret
leave
dec
dec
leave
push
ss
cli
iret
sti
pop
cwtl
xchg
and
div
mov
aaa
fdivs
cmp
and
xor
xchg
push
loop
lds
sub
cmc
dec
lret
and
push
test
lods
sti
pop
insl
or
dec
movsb
pop
aaa
out
and
lcall
adc
inc
cmc
out
scas
push
imul
repz
scas
jl
std
sbb
cld
add
jae
es
dec
dec
shll
in
hlt
ss
stos
imul
push
js
adcb
inc
cld
cmpl
mov
test
push
sub
mov
dec
mov
int
sti
lahf
and
add
and
cld
mov
dec
push
rcl
jne
cmp
repz
fwait
shll
mull
cmpsb
adc
or
pop
xchg
pushf
fmuls
icebp
pop
data16
mov
add
mov
inc
or
movsb
scas
sub
outsl
and
sub
and
cs
fwait
mov
or
xchg
cmp
mov
rorl
lret
data16
mov
inc
pop
xchg
mov
jo
inc
sbb
lock
pop
inc
mov
mov
xorb
cmp
daa
mov
jg
leave
or
inc
cmp
push
pop
sub
push
jno
test
cltd
inc
out
aaa
lock
cmp
push
pop
mov
pop
inc
mov
xlat
ret
and
jb
es
mov
popa
adc
aas
movsb
dec
push
iret
jo
fbld
nop
pop
push
and
cmp
cmpsb
push
loopne
lahf
dec
sub
out
outsb
fadd
outsl
xchg
out
hlt
add
mov
pop
jmp
aaa
mov
jb
je
cmpsl
sbb
sub
mov
cmp
lock
lods
rcl
xchg
imul
dec
sbb
push
sbb
aam
test
sbb
call
dec
mov
and
inc
xchg
es
je
imul
jbe
movsl
sbb
outsl
lds
bnd
ss
mov
icebp
scas
mov
ret
into
jno
push
bnd
mov
mov
push
lods
popf
add
pop
in
cmp
insb
mov
pushf
cmp
mov
fwait
xchg
shr
or
test
lahf
inc
mov
pop
jb
pop
mov
cmc
loope
jge
ror
out
repz
stos
sbb
scas
call
and
inc
xor
inc
loop
addl
mov
mov
or
cmc
dec
aaa
outsl
xchg
and
mov
mov
into
push
dec
sarl
out
arpl
jns
push
dec
push
push
add
xor
repnz
sti
push
test
pop
sarb
add
ljmp
cwtl
or
in
int3
push
aas
sub
sub
out
shrl
aas
xchg
jb
mov
pusha
mov
cs
ds
and
lret
sub
fwait
stos
inc
adcb
int
xor
fadds
jae
dec
jecxz
mov
fistps
data16
aaa
dec
mov
test
xchg
test
xor
and
dec
ss
fiaddl
lret
jb
cmp
jle
mov
mov
fmull
pop
hlt
hlt
outsb
iret
cwtl
mov
inc
and
int3
push
pop
gs
fisubrs
xor
out
lds
adc
push
cwtl
pop
in
stos
test
dec
adc
push
inc
and
nop
and
jmp
notb
outsl
and
push
add
sbb
pop
xor
popa
sub
repnz
cmp
add
sub
movsb
sub
dec
mov
xor
add
out
jmp
fisttpl
inc
push
loopne
jl
jnp
dec
and
lods
cmpsb
push
cli
lods
xlat
loopne
fldcw
cmp
push
mov
mov
fimuls
les
loopne
or
mov
in
jae
sbb
iret
out
popl
insl
inc
mov
jmp
mov
mov
dec
xor
aam
leave
sub
scas
mov
mov
cmp
pop
rcll
mov
sub
loopne
pop
das
push
sub
mov
lock
or
xchg
push
jnp
in
or
xor
loope
pop
pop
notl
xchg
lret
add
sub
ret
test
in
aaa
xor
clc
push
jl
cli
imulb
cli
jbe
adc
and
push
loope
jae
mov
pusha
sub
pop
or
mov
and
lods
and
movd
mov
mov
and
les
outsb
stc
out
add
inc
out
xchg
repz
push
xchg
sub
add
int3
subb
pop
std
dec
sbb
pop
sbb
mov
jg
mov
add
add
sbb
das
ret
push
mov
mov
pop
jns
testb
test
cmpsl
mov
cmp
popf
lret
lds
cmpsl
cmp
mov
mov
pop
adc
shrb
stc
subb
jno
sbb
and
push
mov
loope
or
jecxz
addr16
lea
jno
xchg
nop
mov
and
xor
sub
xchg
lcall
pop
adcl
imul
dec
mov
insb
adc
push
into
hlt
mov
dec
xchg
rorl
inc
cmp
pop
lret
mov
sbb
sbb
mov
or
adc
gs
jl
add
imul
cmp
cmp
cmova
mov
enter
jmp
and
add
mov
xchg
icebp
iret
stos
repz
lret
jecxz
or
out
movl
or
dec
jmp
dec
data16
sbb
mov
dec
inc
mov
cmp
add
cmp
cwtl
out
and
cli
mov
enter
mov
out
shlb
outsl
mov
hlt
xor
test
xchg
std
pop
adc
jbe
cmpsl
mov
xchg
jecxz
xchg
mov
cmp
pop
lods
negl
mov
and
roll
mov
loopne
cmp
shll
add
stc
inc
std
outsl
test
fsts
addr16
fldln2
jmp
xor
cs
jo
inc
inc
bound
fs
sti
cmpsl
cmpsl
jp
scas
add
movsl
mov
dec
cmp
out
cs
sbb
inc
or
lcall
jg
push
fs
cmpsb
sbb
inc
pop
pushf
lods
stos
inc
xor
mov
pop
scas
out
sub
xlat
xor
leave
cmp
aad
mov
inc
aad
jnp
ja
sub
in
aas
sub
repnz
cmp
mov
aas
pop
bound
cltd
lea
in
outsl
or
lahf
mov
jae
and
pop
in
lds
mov
jbe
push
in
xchg
and
mov
xor
adc
shlb
sub
das
imul
push
jb
jae
js
pop
cli
jb
cmpsl
sub
rcr
push
enter
iret
mov
enter
inc
mov
std
test
jmp
out
and
mov
cmpsb
xor
mov
jge
mov
mov
add
add
hlt
jecxz
loop
xchg
mov
pushl
jo
jbe
mov
mov
cmpsl
mov
sti
jb
out
lock
movl
mov
dec
inc
pop
ljmp
ret
and
xorl
mov
mov
je
mov
jmp
mov
orb
mov
dec
les
into
sahf
push
pop
sub
jecxz
out
test
push
jnp
jb
ss
fisubl
inc
pop
insl
push
inc
xlat
sbb
or
lods
cmp
add
popa
mov
div
not
pop
sarl
or
push
mov
mov
or
int3
cmp
xchg
push
imul
pop
sbb
push
out
jle,pn
adc
out
test
fidivrl
mov
loopne
jne
sub
imul
sbb
push
scas
loopne
ret
add
xchg
jbe
and
fsubrp
lcall
xchg
repz
pop
sub
sahf
inc
jle
or
mov
mov
cmpsb
push
add
push
and
sbb
and
xchg
mov
pop
into
mov
movsl
xlat
mov
popf
in
sbb
xor
les
push
leave
inc
adc
stos
or
scas
les
int
rclb
jo
jb
jb
mov
cmc
xchg
adc
mov
fs
xor
insl
cmp
inc
adc
fistl
sub
mov
xchg
gs
in
in
mov
outsl
popf
mov
cmc
cmp
iret
out
xor
fcomi
jno
xor
jbe
scas
es
add
pop
scas
cltd
inc
gs
jg
pop
sbb
fnstcw
pop
cli
inc
xchg
sahf
movsb
cld
sub
dec
dec
in
cmp
sub
ret
push
xchg
or
dec
or
xchg
out
or
insl
pop
fcomps
popf
sbb
mov
jns
cmpsb
mov
int3
dec
and
ss
inc
sub
cmpsl
or
mov
les
jl
loop
jp
mov
sbb
lcall
mulb
shr
outsb
xlat
popa
mov
lock
and
pop
mov
sbb
scas
push
fdivs
sti
mov
sarb
and
scas
lods
mov
insl
aad
jg
sub
mov
lcall
les
lret
mov
fldt
ret
lods
movsb
stos
jbe
ss
rclb
cmp
dec
adc
ss
cltd
dec
mull
sbb
mov
pop
and
push
inc
inc
dec
icebp
bound
mov
jo
roll
cmp
imul
pop
add
cli
pop
jge
ret
adc
loope
fisubs
test
mov
icebp
stos
imul
xor
rorb
cmp
mov
shl
fmull
cmp
xor
cmp
jns
pop
fcmovb
icebp
cld
in
sub
adc
test
mov
pop
int
dec
testl
movsl
xor
loop
jmp
js
ret
movsl
sub
cmp
sti
dec
xor
dec
mov
xor
shlb
jo
pushf
shlb
fisubs
mov
push
dec
mov
out
pop
push
addr16
andb
test
in
loop
pop
mov
adc
pop
loopne
mov
negl
xor
and
mov
dec
mov
dec
inc
icebp
repz
fs
and
popf
jp
and
inc
jb
aad
outsl
fcomps
cmp
pop
dec
ljmp
pop
sub
ss
adcb
add
dec
loop
jmp
je
outsl
out
sbb
jbe
xchg
cmp
aas
adc
adc
xchg
roll
xchg
jp
popa
adc
leave
cmp
sar
mov
and
pop
cmpsb
icebp
js
test
adc
imul
ret
fwait
hlt
mov
mov
je
sub
iret
pop
ret
jbe
mov
push
cmp
jp
inc
jbe
mov
aaa
sub
cmp
mov
mov
push
jmp
lea
xchg
scas
enter
xchg
scas
add
push
pop
jae
lret
add
loope
neg
inc
loopne
and
adc
push
enter
les
ss
jmp
sbb
pop
dec
pop
cld
lods
add
jg
push
mov
mov
push
stos
icebp
xchg
dec
mov
mov
cwtl
not
ja
push
sub
dec
daa
adc
jmp
xchg
jae
dec
push
push
xchg
dec
mov
insb
ljmp
fsubl
cs
les
mov
mov
out
mov
pop
add
xor
mov
xor
push
fstp
and
push
cmpb
or
ljmp
bnd
push
fcomip
iret
shlb
or
adc
jno
js
ret
sahf
xchg
pushf
push
adc
test
inc
lods
inc
jge
test
repz
inc
call
push
adc
or
add
add
pop
scas
xchg
test
sti
add
mov
test
loope
int3
pop
xor
sbbl
pushf
out
addr16
outsb
mov
xchg
test
jne
cs
ljmp
or
push
bound
js
mov
psadbw
movsl
jg
or
pop
call
pop
fimull
xchg
mov
jno
scas
mov
fs
lret
adc
mov
aad
dec
cmp
fmull
cmp
insb
jl
lret
jg
into
mov
sbb
fstpt
nop
daa
in
into
test
jg
fsubrs
add
xchg
dec
adc
dec
cltd
lods
out
push
mov
add
daa
mov
lret
leave
addr16
mov
popa
in
pop
test
scas
add
fs
call
xchg
aam
jb
inc
jnp
loopne
and
aaa
fwait
das
cmp
or
jle
push
fs
lea
gs
sub
mov
xchg
shll
fwait
cmpsb
bound
pop
xchg
inc
shrl
mov
call
jns
leave
ljmp
or
xor
jbe
and
popf
xchg
mov
aad
mov
dec
push
sub
pop
adc
jg
pop
sub
xor
stos
pop
and
mov
inc
incb
pop
and
lea
sbb
adc
lret
pop
fcoml
bnd
sub
out
jae
cmp
insl
sub
mov
fidivrs
add
into
or
daa
into
push
mov
ds
les
sbb
out
mov
fisubrl
adc
xchg
mov
add
jb
shrl
mov
mov
out
pop
mov
movsb
inc
pop
test
push
mov
jp
dec
and
outsl
cltd
insb
mov
inc
cwtl
mov
sbb
outsl
or
hlt
jnp
sub
or
aas
arpl
pop
std
cmp
inc
mov
mov
cmpsb
mov
je
lods
lret
daa
incl
cmpsb
popf
mov
add
add
iret
add
mov
sub
scas
aam
push
out
adc
mov
push
add
cs
daa
dec
daa
aam
mov
or
arpl
enter
dec
pop
aam
fnstsw
test
movsl
jae
sbb
push
jl
lcall
jecxz
sbb
cmpsl
mov
pop
or
stc
mov
into
or
add
dec
adc
frstor
mov
ret
negb
enter
daa
xor
pop
cltd
jnp
mov
popf
ss
aas
push
cld
decl
push
jbe
roll
xor
or
mov
cmp
mov
xchg
cmp
aas
dec
mov
scas
jp
mov
es
enter
xor
test
adc
sbb
mov
push
push
ret
lcall
pushf
mov
cli
fsubs
adc
fisubrs
push
mov
mul
insb
xor
and
or
mov
aad
in
pop
jmp
mov
jnp
rorl
jns
inc
lods
sbbb
and
lock
int
and
aam
scas
xor
aas
xor
fs
aad
mov
pusha
arpl
test
dec
jb
sahf
fisubs
or
jae
rol
mov
lcall
push
add
insl
adc
aad
jle
add
cmp
popa
add
addl
jmp
sbb
pushl
lods
call
std
bnd
mov
lcall
inc
xlat
std
test
mov
mov
sub
or
in
lret
icebp
popf
mov
arpl
inc
movsl
in
cs
push
icebp
push
push
adc
out
dec
mov
es
jle
lea
xchg
jb
arpl
xchg
dec
jne
int
cmp
loope
jmp
movsl
test
dec
jmp
xor
test
sbb
jo
push
adc
cld
pop
xlat
mov
xchg
clc
jmp
cld
insl
out
inc
push
cld
enter
pop
xchg
xor
rcrb
mov
mov
jns
sbb
pop
sti
shrl
or
xor
int3
faddl
das
mov
pop
test
ja
sbb
jg
cmpsb
jle
jge
sub
mov
jae
mov
test
xchg
xor
push
repz
dec
js
hlt
sbb
xchg
inc
sarb
das
inc
into
mov
jmp
bnd
pop
stos
lret
hlt
sbb
xchg
or
cld
int3
std
test
mov
sbb
or
mov
movsb
and
sub
add
mov
lret
mov
mov
adc
data16
dec
fwait
mov
fs
push
sbb
jmp
and
inc
xor
insb
pop
cmp
jo
mov
cmpsl
mov
jno
adc
adc
call
inc
in
int
or
sbb
sbb
popa
push
cs
inc
mov
xchg
leave
lret
or
add
leave
jo
and
pop
sarb
lret
mov
fs
and
lcall
inc
adc
rorl
jge
jbe
mov
sbb
ja
ja
repnz
adcl
xor
lods
jmp
gs
mov
test
pop
clc
jo
xlat
repz
and
int3
pop
cmp
dec
nop
fs
nop
xchg
inc
out
mov
out
mov
jge
xchg
adc
enter
mov
mov
stos
repz
outsb
pop
lcall
mov
adc
push
mov
xchg
mov
jb
repz
sbb
lahf
mov
inc
fdiv
dec
ficoml
push
dec
push
addb
loop
sbb
mov
test
xor
orl
test
imul
fucom
add
std
sti
dec
out
dec
xor
jl
pop
inc
xchg
js
sbb
xchg
scas
cs
pusha
fs
popa
jbe
push
xchg
ljmp
dec
pop
and
push
add
inc
call
mov
cmp
and
emms
mov
jmp
mov
mov
outsl
lds
call
insb
aam
daa
lret
pop
jno
test
cli
pushf
pop
mov
xor
jecxz
xor
pop
dec
sbb
outsl
test
pop
and
fwait
js
int
push
arpl
sbbl
addr16
lret
in
daa
test
and
mov
ja
add
dec
rcrl
xor
repz
in
popf
jno
xlat
pushf
push
cmpsb
fcoms
cmp
mov
xchg
loop
push
andb
inc
xor
jo
xchg
inc
push
pop
or
sbb
dec
test
or
sti
sahf
mov
add
in
jge
sarl
xor
rcrb
push
push
jecxz
pop
outsb
adc
iret
mov
add
push
jbe
cld
sub
enter
jns
mov
jne
mov
add
inc
loop
dec
mov
cltd
pop
xchg
dec
fwait
jnp
mov
inc
cmpsb
xchg
inc
pop
pop
popa
add
xlat
add
push
repz
sbb
ss
leave
shl
loopne
ficompl
push
add
mov
insb
lods
in
pop
les
push
int3
and
femms
adc
push
loopne
das
imul
mov
push
inc
shlb
inc
aaa
stc
hlt
hlt
cld
ljmp
cmc
cwtl
pop
or
pop
push
stos
mov
movhps
mov
outsl
xor
cmp
nop
cmp
add
sti
jmp
cmp
push
pop
jg
std
sbb
popa
int
mov
and
sbb
inc
inc
sbb
pop
push
sub
mov
lahf
ljmp
pop
mov
sub
jg
gs
and
inc
xor
inc
fwait
push
jecxz
dec
sub
std
and
lret
lods
out
and
popa
into
leave
movsb
jl
mov
pushl
nop
std
pop
xchg
xor
mov
daa
pushf
sbb
fs
sub
cs
inc
mov
popa
push
testl
mov
cmp
pop
mov
rcrl
fcmovnb
stos
mov
mov
into
pop
add
pop
arpl
lea
insb
cmp
sub
jno
mov
xor
mov
out
xchg
adc
movsb
loope
data16
inc
hlt
cli
inc
push
cmp
sub
pop
lahf
push
jns
pusha
push
cmpsl
dec
loop
rorl
mov
inc
push
fnsave
daa
xchg
mov
cmp
pusha
int
rorl
xchg
mov
and
xchg
mov
flds
call
mov
daa
mov
xor
mov
push
mov
cltd
xor
sbb
adc
push
in
test
inc
repnz
int3
imul
adc
movsb
or
inc
sahf
jecxz
movsb
insl
es
leave
rorl
push
pop
pop
jl
clc
lcall
jp
addr16
pushf
outsl
cmp
mov
add
stos
pop
jmp
stos
pusha
push
daa
cmp
frstor
jp
int3
add
mov
shll
add
addps
sti
xchg
clc
imull
das
xchg
cmp
push
daa
mov
push
idivb
sub
xor
and
xor
sar
xchg
callw
fwait
mov
xchg
pop
mov
ret
xchg
data16
jmp
inc
insb
test
cmpl
mov
test
push
mov
mov
mov
push
leave
xchg
push
pushf
aaa
fisubrl
andb
int
jecxz
sbb
jne
mov
xor
sub
popa
leave
add
daa
lret
not
push
call
ljmp
pop
fldt
mov
mov
jb
pop
pop
mov
insl
test
stos
dec
jnp
mov
das
dec
mov
clc
in
and
popa
idivb
mov
sub
sub
sarb
jae
inc
rolb
xor
mov
and
jb
xor
aam
mov
mov
mov
nop
xor
imul
cmpsb
nop
mov
idiv
repnz
xor
or
repnz
nop
imul
cld
roll
stos
add
sbb
mov
in
push
cmp
sub
pop
scas
rcll
fidivs
shlb
or
dec
dec
lahf
cmpsl
mov
stc
mov
mov
shll
xchg
dec
cmp
stos
xchg
dec
dec
stc
adc
fidivrl
lods
xor
div
das
or
inc
jne
push
mov
lret
and
int
and
mov
push
jb
inc
fwait
add
push
mov
js
cmc
pop
jno
adc
sbb
js
xor
inc
movsb
xchg
push
xor
nop
mov
out
rcrb
push
pushf
adc
mov
fldcw
push
push
or
popa
mov
dec
enterw
cmp
movsl
lods
icebp
arpl
mov
mov
push
push
sbb
mov
sarb
cli
mov
rcrl
xor
jge
xlat
test
stc
cmp
ret
inc
stos
outsb
pushf
mov
mov
sahf
shll
andl
xor
and
in
rcrb
or
and
inc
int
inc
mov
sahf
inc
fs
lahf
sar
hlt
fdivs
cmp
ret
mov
push
cmp
inc
scas
aaa
xchg
shlw
mov
stc
lea
ret
mov
daa
and
test
enter
and
and
dec
sbb
popf
mov
push
leave
outsl
cmp
sbb
pushf
fsubp
icebp
stc
inc
pop
mov
test
pop
push
mov
push
adc
repnz
ss
pop
cmp
stos
cld
adc
leave
push
fwait
daa
sbb
lods
jbe
push
repnz
adc
je
pusha
fs
mov
mov
xchg
and
les
sub
xchg
mov
cmpsl
or
stc
rclb
loope
adc
cltd
fwait
or
es
cltd
cmp
cmp
scas
mov
movsl
push
mov
adc
sar
rolb
xor
sarb
lret
sub
testb
xor
mov
cmp
sbb
call
xchg
push
lcall
cltd
jle
fwait
andl
mov
jge
mov
cmp
xor
movsb
add
js
inc
adc
push
lea
adc
mov
push
adc
ds
or
cmp
cmc
out
jo
and
mov
mov
adc
jns
das
mov
push
fiadds
out
aas
sbb
pop
or
dec
jne
inc
outsb
int3
sbb
les
xchg
nop
push
or
push
aad
pop
pop
shl
push
hlt
cltd
aas
mov
xor
ss
mov
daa
mov
fs
ljmp
daa
push
iret
in
jmp
les
cli
sahf
popf
or
dec
out
test
jb
push
mov
es
ret
and
add
xor
rolb
mov
dec
in
lcall
add
clc
mov
ret
xchg
xchg
andl
add
movsb
xchg
stos
aam
cs
js
stc
mov
sar
fstpl
jge
push
insl
pop
xchg
xchg
rcll
dec
dec
pusha
and
out
sar
mov
and
jp
mov
out
inc
out
push
incl
int3
repz
das
push
sarl
sub
xchg
add
pusha
loope
mov
xchg
push
dec
mov
adc
mov
fiaddl
cmc
mull
leave
mov
repnz
stc
popf
and
js,pt
lcall
dec
in
fs
xchg
outsl
mov
lcall
push
scas
inc
loopne
cli
gs
hlt
adc
xchg
mov
add
fldl
pop
outsb
dec
xor
xchg
push
xchg
aam
xor
sti
jmp
out
arpl
test
jecxz
out
mov
add
push
inc
insb
rcrl
xchg
data16
ret
sub
xchg
xor
mov
mov
ficomps
cli
inc
inc
mov
adc
add
or
mov
stos
stc
fistpll
pop
imul
jae
pop
xor
arpl
mov
mov
jno
es
cmp
push
jbe
pop
xchg
inc
add
pop
jl
pop
dec
dec
enter
adc
xchg
icebp
repz
enter
add
je
scas
dec
sub
push
sub
add
jbe
mov
aam
lret
mov
pop
jnp
pop
ret
cwtl
fistpl
jns
aas
adc
out
fildl
ljmp
cmp
mov
mov
in
sub
cmp
ss
dec
pop
lret
inc
mov
jle
xchg
outsl
lods
rcrl
das
push
ret
das
xchg
imul
movb
xor
inc
pop
addr16
lcall
cmp
xchg
je
pop
add
repz
cmp
pop
addr16
ds
shlb
xor
das
jmp
dec
cmp
pop
push
les
pop
xor
cmp
insl
insb
call
cmp
ror
mov
or
into
les
mov
push
and
imul
ds
adc
sbb
out
xchg
jno
mov
ret
cmpsl
cwtl
iret
in
add
xchg
fs
insb
and
xchg
inc
dec
jns
inc
push
adc
cmpsb
cwtl
xor
lahf
jb
aaa
jp
pusha
xchg
sub
dec
iret
in
mov
fstl
dec
movsb
xchg
pop
mov
movsb
lds
and
push
push
mov
std
iret
std
push
mov
cmc
dec
sbb
pop
sti
xchg
pushw
fimull
imul
fwait
jae
xchg
insl
adc
aas
mov
insl
std
lahf
mov
lret
fsts
cmp
push
test
test
sbb
adc
or
xor
or
scas
mov
rolb
adc
xchg
push
mov
lcall
andl
lret
out
sub
jg
inc
mov
fsubr
or
test
cmp
sub
clc
outsb
push
push
pop
xchg
arpl
inc
out
inc
inc
ficompl
mov
dec
out
adc
jl
cwtl
out
xchg
sahf
xor
fsubrs
stos
loopne
xchg
and
sbb
ret
jb
sbb
cmp
repnz
addr16
mov
jns
aaa
and
stos
repnz
gs
sarb
lret
rorb
xchg
dec
mov
cld
insl
dec
lods
push
sub
push
mov
mov
stos
movsl
loopne
add
sbb
sub
cmp
push
and
jnp
js
pmaxsw
addr16
and
loope
fidivs
mov
pop
fnsave
and
divb
stc
inc
test
insb
or
stc
jbe
ret
and
in
pop
jb
pusha
repz
cld
cmp
sub
fdivr
fs
ficompl
aas
imul
mov
pop
mov
imul
sub
mov
mov
int3
sahf
xor
mov
test
mov
or
sub
sahf
dec
push
repz
xor
xchg
mov
int3
mov
mov
xchg
jb
xlat
xchg
jo
xor
pop
out
push
punpcklbw
imul
add
xor
mov
sub
mov
into
ficompl
incb
jl
push
mov
cli
jbe
out
hlt
jbe
cli
es
mov
js
pushf
push
mov
stos
rcr
mov
dec
out
int
inc
dec
fwait
or
outsb
in
dec
out
xchg
and
hlt
push
in
adc
mov
lcall
cmp
xor
jo
pop
sbb
test
xchg
fcompl
push
add
sub
mov
addr16
inc
nop
mov
cmpsb
jbe
mov
sub
clc
iret
lods
sub
clc
adc
in
mov
movsb
jnp
stos
and
mov
mov
xchg
out
shl
gs
in
inc
ljmp
mov
inc
rolb
cld
out
sub
popa
xchg
sahf
push
out
js
pop
lret
cmp
movsb
dec
mov
scas
cld
pop
sub
mov
sub
inc
scas
js
jo
xchg
push
sbb
xlat
popl
mov
dec
mov
pop
mov
ss
ja
push
loope
and
cmpsb
xchg
or
outsb
jne
sbb
scas
cli
icebp
mov
lea
mov
jl
jl
inc
popf
hlt
adc
call
aas
push
sbb
push
ss
sub
dec
ret
lea
mov
insb
xor
sub
cld
inc
ljmp
dec
mov
and
mov
jae
mov
push
scas
enter
data16
xchg
and
notb
add
push
mov
loope
cmp
notb
mov
push
fisubs
insb
outsl
xor
pop
call
lret
adc
inc
push
xor
mov
repz
cmp
mov
xchg
inc
dec
xchg
mov
push
pop
dec
mov
push
dec
loope
je
jle
out
pop
xchg
repnz
fistpll
cmp
bound
cmp
ds
loop
rclb
jge
sbb
mov
int3
or
mov
std
mov
stc
mov
and
cmpsb
sbbb
mov
xchg
lock
ret
stc
call
aaa
sti
dec
xchg
cmp
jbe
enter
jo
aad
jo
cmpsb
xorb
cmp
inc
repz
sarl
mov
lret
push
pushf
mov
sub
loop
push
aaa
and
pop
cmpsl
mov
inc
xorb
pop
imul
push
push
mov
jge
mov
inc
and
int
fwait
dec
mov
loope
mov
mov
addl
jge
pop
sahf
mov
sub
inc
rolb
rcll
pop
ret
mov
cmp
inc
and
orb
inc
je
clc
popf
dec
push
jbe
xchg
jl
outsb
adc
jae
mov
pop
ror
mov
lods
and
cli
push
add
scas
inc
dec
fnsave
repz
incb
push
js
loope
mov
mov
fdivrp
mov
pop
sbb
cmc
pop
jne
mov
jg
imul
inc
fnstenv
dec
arpl
fists
rorl
ficoms
ret
in
pop
xor
fcmovu
data16
lock
jmp
and
or
fsubl
insl
and
in
add
ss
dec
insl
imul
je
arpl
scas
sbb
fs
xchg
imul
aaa
dec
fmull
mov
pop
sarl
jne
dec
test
adc
mov
sub
mov
out
mov
mov
or
mov
pop
mov
cmpsb
sbb
loopne
jns
leave
call
fimull
inc
mov
clc
or
fldenv
push
fcompl
xor
mov
lret
adc
xor
aad
call
xchg
or
xor
stc
stc
dec
subps
std
mov
sub
insw
add
lds
mov
adc
jno
adc
fsubp
cs
mov
jmp
xor
int
popf
or
pop
shrb
shlb
sbb
fcomp
cmp
scas
mov
scas
xchg
mov
stos
arpl
xchg
out
jo
lds
jb
pop
jne
outsb
mov
pop
cmc
out
mov
sbb
add
mov
mov
add
mov
jo
xchg
sub
dec
fabs
inc
push
and
dec
or
or
fnsave
add
cmp
mov
arpl
mov
mov
cld
mov
mov
faddl
inc
push
add
lods
pop
and
pop
or
test
out
xchg
xchg
jo,pt
mov
fidivs
sbb
aaa
push
mov
pushf
dec
lcall
cli
mov
cmp
les
or
repnz
sub
jo
in
sub
jbe
fnstenv
jg
mov
outsl
rcll
jmp
mov
lds
or
pop
mov
dec
push
lahf
mov
sbb
xchg
icebp
dec
xchg
adc
stos
sub
adc
out
dec
inc
xor
addb
fisubl
outsb
data16
cltd
pop
jmp
sbb
push
mull
xchg
frstor
dec
rcrl
bound
add
sbb
fstcw
lret
addr16
sbb
out
subl
out
nop
dec
push
add
mov
jne
nop
sbb
pop
outsl
push
outsl
mov
addr16
mov
lcall
lds
aad
xchg
inc
icebp
or
mov
scas
adc
bound
pop
inc
pop
cmp
add
add
dec
mov
pop
jmp
dec
hlt
enter
adc
fsub
rol
mov
add
mov
andl
and
mov
sbb
mov
das
lods
mov
jmp
push
sbb
es
mov
ljmp
dec
cmpsl
inc
add
aad
jecxz
push
cwtl
cwtl
insb
lret
mov
sub
jno
dec
movsl
xor
pop
clc
nop
rclb
sub
cli
mov
sub
pop
loopne
sbb
pop
insb
lret
jno
cmp
push
inc
pop
lret
xchg
push
repz
test
fcomp
sub
stos
mov
lds
scas
lea
mov
adc
mov
rcll
push
inc
ljmp
adc
lods
notb
sbb
loope
sub
and
adc
mov
or
adc
add
mov
and
and
xchg
jle
jno
mov
dec
aad
xor
lahf
sub
mov
mov
jge
inc
lods
mov
shl
add
adc
mov
in
sbbl
jl
fstl
and
xchg
sub
xchg
jbe
scas
inc
out
packssdw
jbe
and
in
test
push
inc
movsl
and
in
xlat
push
arpl
pop
xor
jne
xchg
hlt
test
sbb
or
outsb
jle
mov
mov
cmp
pop
pminub
sbb
cmc
sti
ret
jecxz
cmpsb
or
mov
mov
fs
lret
jle
add
movsb
pop
mov
cmp
jl
dec
adc
jmp
jns
push
stos
and
mov
insl
mov
sbb
subl
out
out
adc
into
xchg
pop
jno
xchg
mov
ret
movsb
cmpsb
sbb
test
lods
sti
push
mov
aam
inc
sbb
icebp
iret
lret
dec
ljmp
push
lock
and
popf
sbb
jbe
cmc
push
in
imul
mov
xchg
pop
jmp
aam
pop
dec
testb
mov
ljmp
mov
sbb
pop
or
out
imul
cs
aad
mov
lret
cmp
test
cmc
jno
inc
mov
sbb
lret
add
sub
xor
jb
or
inc
add
pop
mov
sub
add
lods
cwtl
cwtl
mov
daa
sti
fildl
lods
aad
cmp
add
xchg
hlt
nop
int
inc
cmpsl
popfw
outsb
inc
pop
mov
mov
int
jbe
and
int3
mov
aas
std
lret
outsb
mov
pop
and
jnp
push
stos
insb
jne
dec
leave
sbb
or
gs
mov
shlb
pop
ficoms
stos
sub
negl
pusha
lods
cld
mov
out
out
decl
cmp
add
out
cltd
sub
adc
jae
xchg
jo
push
inc
sub
popa
test
fists
inc
cmp
data16
jge
popa
xor
popf
pop
push
loop
dec
int
movsl
fwait
lahf
xchg
stos
dec
imul
arpl
call
ret
dec
push
inc
outsb
int
arpl
arpl
sbb
ja
sbb
fdivl
jl
xorl
sub
cmp
insl
ljmp
ja
out
sub
pop
shrl
iret
mov
pop
xor
and
popa
cs
insl
cmp
int3
mov
pop
rcrl
loop
jno
fwait
into
xchg
ret
insb
mov
aaa
rcr
ja
cmc
mov
xchg
and
pop
cmp
movsb
inc
cmc
int
adc
sti
jmp
popf
loopne
sahf
int3
adcb
notl
bound
cld
mov
dec
in
repz
in
ljmp
push
mov
stc
cmp
and
arpl
xchg
jmpw
pop
fisubl
ret
inc
inc
loopne
lea
dec
test
insb
and
fwait
mov
std
es
jb
inc
dec
inc
xchg
push
jmp
mov
xchg
mov
pop
pushf
divb
in
movsb
lods
icebp
mov
pop
popa
mov
push
and
cs
cmp
jno,pt
int3
mov
pusha
push
push
jmp
test
int3
inc
out
out
fldenv
loopne
and
jb
loop
roll
orl
mov
mov
lret
adc
pop
loopne
jecxz
push
ja
hlt
aaa
xchg
add
popf
adc
lods
add
xchg
sub
sub
cltd
xchg
mov
sbb
cmpsl
mov
call
xor
ret
imulb
push
xor
sahf
and
shlb
xchg
call
xchg
mov
popf
xor
cmp
aad
mov
pop
xchg
ret
nop
shlb
lds
sbb
insl
scas
inc
adc
xchg
lods
fs
adc
xor
xchg
jl
sbb
inc
filds
push
jnp
xchg
mov
dec
stos
mov
xor
daa
jne
jecxz
test
push
adc
pop
les
iret
loop
sbb
mov
out
cmp
sar
mov
daa
iret
sub
jb
sub
out
and
daa
imul
and
add
pop
and
pop
xchg
cmp
xchg
xor
push
adc
ds
jo
imul
out
mov
push
nop
xor
movsb
dec
jns
ret
loop
loopne
scas
pushf
xchg
cltd
out
sarl
sbb
stos
ds
push
adc
cltd
add
push
mov
push
test
mov
or
in
fadd
push
mov
xlat
adc
pop
mov
jae
pushf
stos
les
jecxz
xchg
push
not
xlat
ficoms
insb
cmp
pop
add
jp
les
add
adc
pusha
and
mov
repnz
jbe
aad
xor
or
push
sub
push
hlt
cwtl
mov
shrl
mov
iret
adc
jae
dec
sti
xcrypt-cfb
cmpsl
jecxz
sub
inc
into
cmc
pop
popf
test
int3
sub
xchg
push
or
xor
imul
out
test
push
sub
inc
add
ret
inc
mov
imul
sub
xchg
push
filds
shll
jecxz
sti
inc
mov
outsb
into
dec
cmp
inc
outsb
xchg
cmpsb
xor
push
jnp
andb
jle
push
push
add
jmp
xor
je
push
data16
mov
mov
sub
mov
or
aas
adc
mov
adc
cmc
add
out
jbe
gs
leave
dec
push
mov
call
icebp
scas
ljmp
mov
scas
add
test
xchg
stc
xchg
pop
outsb
sub
push
in
fadds
cltd
mov
in
mov
pop
add
cwtl
insb
in
pop
sub
pop
jne
mov
popfw
mov
pop
inc
adc
pop
lods
jno
not
ret
mov
sub
mov
cltd
or
in
bound
insb
loope
add
ds
out
movsl
lret
inc
sarl
cmc
dec
repnz
push
dec
insb
push
inc
icebp
leave
pop
hlt
out
xchg
jle
hlt
imul
in
scas
ret
enter
cmp
inc
aas
push
fdivs
dec
shl
enter
mov
das
fs
in
repnz
flds
scas
test
lods
xor
out
ret
and
arpl
lahf
cld
dec
ret
push
popf
stos
push
cmp
iret
mov
mov
subl
jae
shll
icebp
out
push
push
ljmp
or
and
icebp
jl
jno
cmp
out
rorl
xor
xor
ret
push
sub
push
pop
mov
int3
js
or
scas
push
fnstsw
mov
xchg
leave
imul
movsb
pop
mov
daa
insl
popf
xchg
pop
rclb
sti
jg
out
and
stos
mov
aam
hlt
sub
jo
push
xchg
pop
shlb
cltd
fcompl
popa
imul
mov
fdivrs
sbb
dec
mov
xlat
aas
out
jno
mov
inc
aas
int3
mov
jns
roll
out
and
add
dec
and
insl
fxch
sbb
cmp
push
js
jno
push
loope
inc
cmpsb
and
lock
cli
sbb
pushf
data16
inc
stos
push
xchg
enter
int3
push
add
and
in
stos
je
js
sub
or
add
ljmp
test
mov
mov
stos
out
mov
jge
in
xchg
dec
add
pop
cltd
out
shrl
adc
sahf
mov
je
pop
jge
or
xlat
test
pop
xchg
out
push
stc
sub
xor
cmp
cmpsl
fbld
jo
adc
inc
cltd
inc
fnstsw
xlat
mov
cwtl
dec
mov
xlat
and
and
test
out
sub
loope
fnstcw
ret
xchg
sub
mov
cmp
lds
inc
adc
dec
add
cmp
xorb
jmp
inc
jp
pop
in
add
test
test
lret
psubusb
rorb
push
push
sahf
and
in
rcrb
test
ds
sbb
sub
mov
clc
fldcw
call
pop
out
leave
mov
leave
jmp
sbb
jo
cmp
push
and
mov
mov
push
push
and
mov
fs
push
add
sbb
imul
sub
mov
push
mov
jno
lods
xchg
mov
sbb
ret
sbb
dec
or
push
mov
leave
lods
clc
sbb
sub
cli
in
loope
push
adc
stc
cli
dec
ss
add
outsb
pop
nop
cmpsl
sbb
and
dec
inc
std
dec
popa
add
xchg
inc
inc
lock
loop
aas
mov
mov
add
movsb
rcl
cmp
cmpsb
les
test
enter
push
inc
test
clc
test
mov
cmp
xchg
daa
mov
xchg
xlat
imul
cmp
cmpsb
nop
cmpsl
lods
dec
or
pop
loope
add
mov
jg
pop
fwait
jns
push
pop
dec
sbb
mov
test
xlat
mov
mov
pushl
push
xchg
sarl
aam
push
cmp
pusha
in
xchg
stos
mov
movsb
frstor
cwtl
mov
xchg
cmpsl
mov
inc
outsl
pop
sub
cld
jae
repnz
stos
mov
js
loopne
push
cmp
call
sti
int
add
iret
orb
mov
in
cmp
sub
cmc
insl
sti
lcall
fdivs
xchg
sbb
arpl
cwtl
cmp
outsb
repz
in
push
pop
pop
out
arpl
add
xor
adc
adc
and
and
rorb
lods
push
xchg
lea
pop
popf
cltd
push
xchg
pop
rcr
push
insb
shll
adcl
xchg
mov
or
in
scas
pop
insl
dec
mov
enter
arpl
jno
test
xchg
out
insl
push
in
jb
in
daa
inc
out
and
repnz
rorb
inc
fdiv
or
out
popf
cs
and
xchg
add
or
xor
mov
push
les
mov
ror
jge
cmp
xor
leave
pushl
jmp
and
push
jle
leave
repz
clc
dec
and
mul
jns
arpl
sti
aaa
fisttps
subb
aam
adc
or
jb
lret
cmc
push
inc
pop
ret
mov
into
add
sbb
loop
popa
mov
testb
in
mov
cmp
adc
lahf
fidivrs
or
imul
mov
jg
enter
das
cld
out
lock
sub
dec
stc
push
test
inc
int3
jno
add
lods
xor
or
nop
insb
test
loopne
repz
add
cmpsl
push
jbe
or
cli
adc
and
mov
jae
notb
test
out
and
adc
lock
cmp
xchg
imul
imulb
repz
bound
sbb
pop
call
iret
rol
loope
lods
gs
push
sbb
fadd
or
cmc
outsl
push
or
cmpsl
push
jg
pop
rolb
lret
dec
cmp
lods
stos
es
in
cwtl
icebp
insb
push
sub
outsb
bound
lea
mov
mov
pop
mov
dec
nop
sbb
clc
and
hlt
out
adc
cmp
jo
inc
mov
mov
and
inc
sti
aas
push
or
pusha
shl
cmp
test
xchg
mov
or
outsl
call
or
popa
inc
and
inc
xor
or
jecxz
jg
cmp
int
mov
cmp
gs
test
popf
inc
outsb
or
pop
xor
sbb
fildl
mov
mov
iret
jo
cld
sub
fldt
dec
sub
aad
push
loope
pushf
adc
stc
sub
mov
test
cmp
jge
cmp
aaa
popf
icebp
aad
sbb
test
jmp
push
dec
push
jle
daa
lock
and
jg
sub
jecxz
mov
jns
mov
test
in
pushf
lea
pop
dec
xchg
xchg
sub
and
jno
loopne
or
cmp
lret
pusha
das
testb
mov
add
mov
test
dec
cmp
cli
gs
js
inc
mov
xor
popf
lcall
ret
adcb
sbb
test
dec
pop
jl
xchg
aam
repz
scas
sub
nop
xor
scas
pop
inc
mov
fs
jae
sub
push
mov
mov
je
pop
mov
incl
sarb
mov
jg
loope
mulb
loope
xchg
fwait
loope
add
stos
push
arpl
xorl
cmp
pusha
test
ret
add
or
shlb
fs
xor
sub
xor
xchg
pop
hlt
mov
sbb
ja
mov
cli
push
lock
add
mov
enter
je
std
jl
sbb
mov
lock
call
pushf
test
cmp
pop
nop
cmp
cmp
cmp
mov
ficompl
mov
mov
es
out
aaa
inc
add
repnz
add
lret
xor
xchg
mov
bound
fcmovnbe
loope
pop
dec
adc
add
js
sbb
pop
xchg
shrl
lock
jae
mull
mov
cld
sti
loop
pop
add
cmp
out
xchg
daa
mov
jl
mov
sub
das
pop
add
jg
ljmp
test
and
cli
mov
clc
test
mov
loopne
jmp
add
andl
cmpsb
push
push
ja
xor
lea
out
add
fistpl
lahf
inc
mov
jmp
pop
or
and
jo
notl
adc
out
iret
lods
bound
std
in
faddl
sbb
mov
fwait
pop
cmp
imul
push
outsl
test
fs
repnz
arpl
or
popf
push
rcll
pop
jl
mov
mov
std
clc
cmc
mov
ljmp
andb
das
cmp
mov
pushf
lahf
into
push
and
cwtl
xor
stos
sub
cmp
fiadds
movsl
fwait
stos
arpl
xchg
test
nop
and
xchg
adc
sbb
loopne
sub
dec
cmp
fistpl
push
lcall
lret
pop
push
arpl
push
popa
jo
cmpsl
mov
in
xor
data16
fdiv
adc
xor
or
add
jmp
jp
rcrb
adc
cmp
push
jmp
pop
fs
push
clc
inc
ret
inc
pop
pop
xor
js
mov
push
inc
test
sub
pop
adc
fs
int3
aad
pop
mov
pop
cli
movsb
inc
insl
ljmp
xchg
sbb
mov
mov
in
lret
cs
and
dec
inc
mov
enter
insl
clc
xchg
mov
mov
dec
in
push
out
popf
xchg
adc
mov
mov
mov
mov
push
lret
fmull
cmpsb
loop
mov
xchg
or
movsb
and
pop
pop
subl
xor
outsb
inc
mov
mov
push
push
push
jo
or
push
xor
test
hlt
loope
aam
insb
pop
jno
aaa
adc
out
xchg
inc
xchg
jne
jbe
ss
fadds
pcmpeqb
repnz
lods
add
psraw
ljmp
stos
and
adc
xchg
inc
inc
out
mov
or
ss
mov
clc
jle
mov
pop
rclb
push
push
fsubrs
inc
rcr
jp
or
and
imul
push
jno
push
in
aas
into
and
and
xor
ss
dec
jne
inc
or
add
push
sbb
insb
jnp
dec
mov
popl
ljmp
repnz
xor
aam
jge
jno
cmp
mov
xor
das
lds
ja
push
jno
xchg
pop
xchg
jg
or
loop
and
xchg
and
fwait
mov
dec
mov
jo
aas
inc
or
adc
fistl
dec
mov
jp
sarb
push
xchg
out
xor
loop
notl
jo
mov
ret
clc
imul
out
iret
fmulp
sub
xor
in
xor
push
loop
jg
imul
jecxz
sbb
fsubrs
mov
les
sbb
imul
icebp
mov
inc
inc
mov
fstp
mov
ljmp
adc
and
lahf
inc
std
sub
imul
or
lods
decb
xor
fisubl
jg
inc
pop
jmp
jge
popa
xchg
xor
jnp
push
push
jp
sbb
mov
dec
push
mov
sti
inc
mov
int3
xchg
cmpsl
sub
popl
xor
sub
out
jl
sti
pop
lahf
and
dec
dec
push
and
ret
std
inc
test
lcall
adc
cmpsl
mov
fdivrp
nop
test
inc
cld
mov
dec
stos
das
lcall
cmp
sahf
cmpsl
test
pop
loope
cmc
and
popf
fidivs
std
sub
pop
jl
mov
push
pop
xchg
out
inc
daa
insl
xchg
stc
pop
push
sub
mov
jle
cld
pushf
aas
inc
add
movsb
add
adc
jg
pop
adc
nop
jg
dec
bound
cmpsl
loope
and
push
sub
jp
and
sub
push
dec
out
fs
mov
xchg
sub
xchg
mov
cld
div
mov
cmc
mov
fsubl
nop
mov
sub
or
dec
mov
xor
sub
inc
sub
outsb
psllq
mov
int
popf
jle
pushf
rorb
or
mov
sbb
and
mov
mov
or
insl
cmc
arpl
imul
repnz
daa
loope
out
fbld
call
jbe
or
or
mov
mov
sbb
push
adc
jb
dec
xchg
movsb
push
insl
movsb
dec
outsl
arpl
lods
int
ss
adc
cmp
sbb
pop
divb
mov
stos
sub
add
push
dec
lcall
jp
add
dec
iret
bound
idivl
add
shrl
xchg
mov
xchg
aad
les
imul
jmp
insl
xorb
sbbb
mov
xor
ja
addl
sahf
scas
mov
imul
dec
movsl
lret
mov
inc
mov
fwait
gs
in
sub
pop
pop
enter
xchg
push
jmp
insb
ja
adc
adc
test
in
jmp
rcll
addr16
dec
push
xchg
fnstenv
xlat
sub
pop
cmpsl
insb
mov
std
ret
xchg
jp
push
and
movsl
pop
mov
ja
sbb
mov
enter
dec
mov
sbb
out
xor
sti
sbb
fxch
and
xor
psrad
in
fstps
xchg
mov
imul
mov
test
cld
add
insb
inc
sub
cmp
pop
xorb
cmp
inc
lret
imul
hlt
js
test
out
stc
push
xor
andl
data16
push
dec
adc
xchg
jmp
xchg
dec
xor
xor
aam
sbb
test
shl
fs
outsb
jbe
fadd
mov
pop
or
sbb
jmp
sub
shl
push
jmp
testb
jl
mov
push
lock
adc
pop
iret
inc
mov
dec
test
repnz
lods
clc
sbb
std
mov
arpl
inc
sti
in
xchg
dec
dec
adc
pop
fstl
mov
push
cld
orb
push
call
arpl
mov
push
rolb
xchg
lahf
mov
cmp
jo
or
inc
xchg
enter
mov
cltd
sbb
mov
dec
lea
push
mov
xchg
ljmp
add
lock
test
cmpsl
lcall
stc
mov
xchg
and
sub
pop
je
popa
je
test
cmc
lret
es
in
and
out
mov
sbb
xchg
and
out
sub
mov
dec
cmp
jne
cwtl
mov
mov
mov
mov
fmul
add
ret
cmc
imul
out
sub
pop
lret
jne
gs
js
pop
shll
dec
sub
js
mov
push
push
jae
sbb
les
stos
daa
fdivrl
xlat
pusha
insl
sets
jns
sub
test
lahf
dec
xchg
repnz
mov
mov
sbb
fistpl
sub
push
xor
cmpsl
divl
pusha
lods
imul
jmp
outsb
fsub
pop
cli
jb
mov
fsubrl
sbb
outsb
dec
ret
mov
rcrl
cmp
inc
jp
xchg
or
std
dec
dec
cmc
aaa
cmp
lcall
pop
cmp
sti
icebp
sahf
les
lods
cmpsl
add
ret
ret
mov
pop
ss
enter
in
test
sub
push
push
mov
xor
shll
sub
roll
inc
sbb
outsl
inc
leave
mov
dec
out
jns
shl
xor
dec
out
inc
mov
test
subb
and
pop
inc
int
sti
pop
fwait
mov
inc
mov
dec
cmp
add
jno
popa
push
adc
xchg
in
pop
or
sbb
lock
ja
outsl
mov
pop
fs
xchg
push
out
icebp
inc
adc
jmp
sub
icebp
and
lret
sub
addr16
loopne
push
pop
loope
mov
addl
inc
rolb
cmp
fdivs
sub
stos
ja
imul
jge
in
sbb
cmpsl
push
xchg
cmp
popf
adc
pop
xchg
jne
fdivl
cmp
pop
mov
inc
inc
mov
xchg
into
cmpb
inc
jns
cs
fs
jl
popf
or
inc
xchg
inc
roll
and
leave
dec
mov
mov
mov
inc
les
mov
dec
pushf
mov
sub
es
and
adc
sbb
iret
jmp
xchg
insb
mov
xchg
and
jecxz
mov
ficoms
pop
icebp
std
jo
sub
xor
jae
mov
inc
mov
stos
insl
ror
xor
add
cld
pop
je
pop
push
leave
jmp
aad
xor
mov
fwait
es
fcmovnu
popf
aad
and
addb
add
and
and
or
aas
xchg
mov
pop
jl
js,pn
sbb
jp
pop
mov
pop
in
sbbl
mov
mov
push
mov
icebp
cli
out
cltd
sahf
cmc
inc
arpl
cmp
repz
je
xlat
adc
pop
scas
stc
xor
xchg
out
add
aaa
sbb
andb
mov
loope
shrl
xchg
mov
jmp
stos
shl
divb
imulb
fmuls
arpl
or
push
adc
in
lods
cli
fcmovnu
xchg
cs
in
sbb
inc
cld
or
adc
adcb
pop
or
or
jb
cld
inc
rep
call
adc
nop
loopne,pn
mov
jg
lock
adc
sbb
mov
add
push
mov
push
lods
inc
lcall
aam
mov
mov
test
dec
mov
mov
nop
mov
and
arpl
out
gs
cmpsb
dec
hlt
ret
jnp
out
or
ljmp
jg
sbb
mov
and
dec
iret
sbb
pop
ja
xlat
sbb
shrl
nop
pop
pop
xor
mov
fwait
sbb
out
sub
push
sbb
sti
push
in
les
fistpl
lods
hlt
jnp
ja
pop
mov
ja
rol
loopne
adc
dec
fmul
sub
xchg
dec
dec
cld
and
mov
std
and
pop
or
sub
jnp
mov
cmp
inc
push
icebp
stos
aam
sbb
repz
test
mov
push
cwtl
push
out
lret
rcl
xchg
inc
inc
inc
pushf
fdiv
or
sti
inc
push
into
mov
leave
outsb
orl
nop
cmp
push
cmp
sbb
std
or
addr16
cltd
cld
ficomps
js
das
out
stc
stc
aad
sbb
mov
or
aam
pop
iret
rcll
sub
pop
inc
xlat
out
out
and
lods
loope
test
mov
fnstcw
jno
xchg
inc
aam
hlt
jns
pusha
mov
gs
icebp
or
pop
pusha
imul
add
ret
cmc
dec
daa
pop
sbb
jae
push
jno
adc
sbb
shlb
cld
fldt
mov
xchg
xor
lods
pinsrw
arpl
mov
push
xchg
cltd
filds
int
aas
out
add
fldlg2
loope
adc
lret
jne
in
daa
dec
das
mov
dec
aam
push
cmp
xchg
in
in
or
les
mov
movsb
jle
subl
stc
cmp
jmp
fwait
push
cld
movsb
xor
cmc
lods
mov
jno
sbb
stc
jecxz
sub
addr16
dec
mov
mov
sub
std
or
lret
subl
mov
fidivs
add
lea
insl
out
dec
shlb
xchg
sub
mov
xchg
cltd
push
mov
push
aad
mov
jg
sbb
xchg
enter
jae
jp
xor
and
mov
push
add
lods
push
adc
and
test
jae,pn
push
aaa
or
ljmp
inc
mov
dec
movsb
and
dec
jo
sbb
imul
inc
test
inc
lret
cs
das
pushf
xchg
es
sub
mov
pusha
xchg
push
insb
fsubrl
rcr
ret
or
scas
iret
cmc
sbb
jg
movsl
mov
popa
lods
ljmp
ds
scas
mov
insl
aad
inc
xlat
push
jae
imul
jo
cli
scas
mov
and
ja
iret
jmp
mov
andl
inc
pop
cld
xor
es
push
push
cmp
mov
or
jno
lds
adcl
loopne
lret
push
repnz
mov
inc
ds
lret
pusha
dec
std
mov
and
ja
insb
inc
and
jp
and
push
call
jg
and
das
adc
popf
cmp
call
dec
fidivs
and
loope
addr16
cmp
cmpsl
shlb
push
into
js
mov
jnp
add
or
iret
xchg
int
lahf
cltd
call
jl
lds
mov
jecxz
mov
scas
xor
add
xchg
in
int
pop
mov
adc
mov
push
sbb
out
inc
repz
add
sti
add
or
nop
mov
movsb
rcr
and
aam
and
stos
daa
pop
rcrb
mov
out
cmp
mov
leave
adc
mov
mov
aam
cmp
xchg
xchg
sbb
outsb
or
mov
inc
out
push
sar
daa
add
test
dec
js
dec
mov
cmpsb
mov
dec
mov
push
and
adc
ljmp
xchg
js
push
push
movsl
pop
jecxz
lock
cmpsl
sub
imul
mov
in
out
push
int3
in
fadd
add
xchg
inc
int
hlt
in
lock
or
mov
ljmp
cmp
imul
out
rcll
loopne
fdivs
and
jb
cld
dec
mov
ret
xor
pop
jae
add
repz
adc
add
psadbw
stos
pop
jg
mov
insl
jns
notl
rclb
mov
out
mov
jne
mov
push
sub
call
pop
xchg
adc
cwtl
mov
inc
ficompl
subb
jl
and
sbb
in
mov
bound
lds
in
push
cmp
lds
scas
dec
aam
lret
or
fsubr
push
fidivrl
push
out
shl
push
mov
fists
mov
shrb
cmp
jle
shlb
in
js
pushf
jmp
jne
ljmp
push
add
js
sti
dec
xchg
dec
push
xchg
mov
inc
cli
push
pop
imul
cmc
sti
add
hlt
jae
adc
push
adc
or
mov
pop
out
test
shll
das
es
or
xchg
sub
or
rol
outsl
sbb
jg
lret
xchg
cmc
lcall
mov
sbb
mov
push
add
dec
mov
xchg
dec
mov
add
push
pop
lods
repnz
aas
js
adc
out
sbb
bnd
xor
push
dec
sub
or
xchg
cmp
in
ss
imul
test
lods
aad
inc
mov
sbb
loop
fcmovu
movsbl
inc
cmp
mov
in
mov
or
cmp
dec
insl
aad
aad
pop
sbb
lods
aaa
cmp
stos
push
jl
and
xchg
jo
ret
dec
rorb
cmp
inc
push
add
xchg
sub
pop
mov
sahf
dec
aad
decl
dec
scas
fstl
loope
mov
lods
sbb
and
sti
cs
cmp
dec
add
xor
add
sbb
xchg
add
jg
and
ljmp
adc
jo
inc
outsl
cmp
add
xor
sbbl
mov
push
fmul
mov
sbb
pop
xchg
mov
push
push
mov
cwtl
jp
jle
dec
movsb
jo
insb
out
xor
jnp
leave
dec
mov
or
xlat
in
pusha
sbb
inc
lock
stc
xchg
push
stos
decl
jns
xor
ds
aas
repz
movsb
inc
and
sbb
scas
int3
jo
adc
insl
imulb
adc
scas
arpl
movsl
cmp
add
insl
pop
mov
xchg
mov
pop
fdivp
movsb
adc
dec
movsb
push
xor
xchg
xchg
sbb
mov
mov
xchg
ljmp
add
lcall
xchg
imul
pop
mov
mov
cld
into
mov
push
jl
jb
pusha
pop
adc
orb
push
or
jb
push
cmp
lcall
clts
add
dec
xchg
loopne
out
push
inc
add
std
jb
push
call
xchg
dec
stos
out
mov
movsb
fxch
dec
inc
lea
out
adc
pop
xchg
push
mov
xor
movsb
rol
pop
cld
je
mov
xchg
lock
jns
pop
clc
cmp
or
push
test
sbb
mov
jo
mov
pushf
cli
jmp
ret
iret
xchg
bnd
aad
mov
inc
out
fsts
in
xor
inc
jle
cmc
push
lods
fs
add
mov
sub
loope
inc
adc
mov
adc
sub
pop
jmp
cmp
test
inc
ss
mov
fs
sahf
mov
xchg
call
fsubrp
stos
add
repz
xchg
pop
lods
jnp
std
xchg
ljmp
sbbl
adc
jo
and
outsl
xchg
das
incb
cmp
xchg
ret
jge
cs
orl
out
fwait
imul
xor
sub
pusha
ss
xchg
cmp
pop
pop
lret
jecxz
push
mov
xchg
xor
scas
xchg
insb
mov
cmc
or
jbe
and
data16
add
lock
mov
ljmp
mov
lea
dec
push
xchg
and
test
in
test
xchg
cltd
sub
sub
lret
popf
mov
and
ja
push
push
mov
and
jb
jg
cmp
and
mov
ror
sub
shrb
scas
mov
cmpsb
rorb
add
push
sar
jp
dec
mov
xchg
lods
pushf
and
sbb
fdivrl
push
mov
xor
push
add
add
mov
sub
xchg
mov
vpmacssdql
adc
enter
cwtl
shlb
mov
mov
out
xchg
and
adc
roll
outsl
out
pop
and
loopne
mov
stos
mov
dec
push
arpl
sbb
int
sti
loope
mov
cmpb
xchg
movl
mov
xchg
cmpb
dec
dec
dec
xor
fwait
loope
sar
lds
cmp
cltd
fcmovbe
imul
popf
iret
inc
dec
mov
push
stc
cs
pop
inc
adc
mov
push
out
adc
fwait
shlb
mov
je
dec
into
xchg
mov
les
ss
jle
adc
ficompl
out
or
or
jg
les
aas
xchg
jo,pn
int
adcb
cmp
ds
sub
stos
lods
dec
fwait
lea
or
jge
xor
and
mov
inc
pop
fs
dec
sub
das
add
fmuls
lods
mov
cld
lods
mov
xchg
aad
test
cmc
dec
dec
xchg
fstps
cld
int3
sub
cmp
mov
popa
mov
jne
imul
sbb
lods
pop
jmp
sub
push
pop
xchg
inc
out
add
stos
sti
xchg
pusha
scas
mov
mov
push
into
mov
add
not
mov
outsl
pop
es
shll
dec
mov
repnz
pop
sub
lret
sahf
cmp
jnp
push
repnz
mov
xchg
pop
jl
jnp
movsb
js
nop
aaa
mov
sbb
into
cmc
loope
mov
push
xchg
notb
lret
pop
les
or
lea
mov
cmp
dec
fsubp
mov
idivb
jl
mov
sti
clc
dec
mov
and
jb
jmp
mov
sbb
icebp
sbb
xor
jp
dec
rorb
int
dec
repz
mov
or
cmpsl
insb
jo
xchg
aaa
mov
mov
stc
aas
or
stos
scas
fildl
jecxz
addr16
mov
ss
sub
xor
inc
shll
jbe
jle
stos
cmp
cli
jbe
sbb
aas
pop
outsb
cmpsl
imul
mov
das
popf
mov
out
aam
mov
fisubl
outsl
mov
pushf
sub
inc
pop
rorl
adc
sbbl
add
jno
aam
jno
xchg
add
xchg
sti
clc
xor
aam
mov
fisttps
xor
dec
mov
and
gs
nop
mov
mov
clc
sbb
cli
in
bound
sbb
in
xchg
add
in
notb
int
sub
mov
inc
jge
idivb
mov
sbb
into
fmuls
xchg
popf
loop
sub
testl
in
in
stos
sar
jae
jp
ljmp
in
clc
ret
mov
rcl
push
shll
popa
jge
out
adc
loope
fildl
adc
fdivp
out
add
push
lea
fadds
pop
sbb
jo
fisubl
fldcw
or
xlat
jns
sahf
push
ret
repnz
mov
je
push
shll
cmp
addr16
push
repnz
ljmp
mov
outsb
adc
jp
jae
das
std
jp
cwtl
dec
jne
decl
std
jle
mov
scas
leave
push
jge
ja
cmpl
fldenv
cmp
xor
push
push
movsb
es
cmp
pusha
push
xchg
mov
idiv
xor
jmp
mov
mov
lahf
cmp
pop
jmp
push
lret
push
sbb
es
sub
mov
fnstenv
rcr
mov
xchg
leave
mov
imul
and
cmc
lds
imul
cld
push
cmpsb
mov
enter
adc
sub
cmp
aaa
mov
sub
mov
dec
fs
push
sub
out
popf
sbb
dec
test
movsl
xchg
cs
xchg
loope
mov
dec
add
pushf
push
movsl
jp
and
add
mov
repz
pop
inc
addl
or
jp
mov
xor
fistps
adc
sub
lret
loop
out
xchg
stos
je
xchg
add
jbe
stos
lcall
ret
enter
add
adc
outsb
pop
je
dec
push
sub
push
jae
jne
sub
cmpsb
rcll
mov
in
dec
add
rclb
add
sbb
lods
pop
push
mov
stc
addl
sub
dec
push
jl
outsb
push
les
sbb
cmp
call
dec
aam
imul
sub
stos
mov
add
push
pushf
movsb
fmul
movsl
sbb
test
js
add
push
lret
push
inc
shlb
sub
push
pminub
popl
push
jg
push
call
aam
jns
mov
in
js
das
scas
fbstp
add
jp
fs
fsts
jle
lea
pop
jns
int3
and
mov
mov
sahf
xor
test
testb
inc
ret
ret
push
cld
mov
int
stos
dec
lret
jle
push
and
lea
es
push
popf
xor
mov
fmuls
mov
jecxz
jno
shrl
push
jne
addr16
test
fildl
mov
mov
inc
mov
repz
shl
fldt
push
loopne
dec
lods
ret
sahf
mov
sub
ljmp
jge
jg
movsb
cltd
aaa
jl
leave
in
les
fisttpll
add
inc
in
push
pushf
and
push
incb
and
aad
dec
out
push
jecxz
adc
stos
lret
repnz
inc
fs
movsl
sub
jb
mov
sbbl
sub
mov
shll
fadds
mov
cmpsb
jbe
cwtl
dec
ror
test
add
xchg
stos
cmp
imul
mov
aas
mov
inc
mov
fs
into
in
dec
xchg
rcll
jno
mov
loope
and
pop
pop
pushf
aad
pop
push
push
cltd
scas
flds
push
fldenv
pop
or
dec
mov
jmp
mov
andb
loopne
test
jg
add
xor
stos
fistpll
or
outsl
movl
dec
data16
mov
and
lahf
mov
jge
decl
sub
pop
push
dec
inc
cmp
insl
out
cld
add
add
xchg
mov
out
mov
into
popa
mov
mov
mov
mov
dec
cmp
test
adc
sahf
xor
push
dec
iret
jle
mov
sbb
data16
nop
out
lods
or
pop
rorl
ret
sub
insb
test
out
lock
mov
out
push
dec
xchg
or
xor
sahf
popa
mov
cmp
xor
xchg
jbe
adc
idiv
pop
adc
aaa
js
inc
xchg
mov
lret
xor
shl
pop
movsl
xchg
push
sub
push
test
cwtl
lea
stos
xchg
inc
cmpsl
push
out
inc
add
push
ss
test
push
pusha
imul
in
xor
je
pop
popf
movsb
or
mov
add
ret
mov
loopne
shl
jge
clc
inc
mov
mov
cli
mov
cmc
into
pop
mov
mov
aaa
mov
pop
iret
cmp
jns
or
add
jge
push
xor
lock
fdivl
hlt
mov
les
std
adc
jge
inc
jbe
jo
enter
add
aad
lahf
mov
js
lret
mov
js
icebp
pop
sbb
pop
dec
ret
xor
or
cltd
cli
dec
mov
flds
hlt
dec
sbb
aas
clc
cmpsl
out
fldcw
and
addr16
rorb
push
push
push
pop
mov
mov
into
addr16
in
in
add
push
and
xor
lahf
ljmp
out
cmp
sbb
sbb
arpl
and
inc
scas
dec
sbb
cmp
cmp
pop
mov
aad
pop
hlt
adc
dec
testb
inc
and
and
add
mov
pushf
lock
mov
loop
pop
test
mov
dec
jo
dec
mov
je
mov
mov
pop
inc
xor
bound
jbe
adc
pop
pop
sub
mov
pusha
jne
adc
in
or
jae
loope
ret
push
mov
rol
jo
fadd
xchg
push
leave
xchg
jecxz
paddb
lcall
fsubr
pop
push
adc
scas
mov
xor
or
sbb
dec
fmulp
xchg
mulb
pop
stos
fdivrs
inc
enter
dec
daa
dec
imul
in
sbb
cltd
or
sbb
cmp
insb
mov
jle
scas
inc
int3
xchg
ss
dec
mov
pop
iret
dec
push
and
lahf
xor
test
loop
mov
nop
test
pop
aam
popa
adcl
inc
lret
out
jmp
inc
pop
lods
add
adc
hlt
xchg
adc
test
stos
pushf
jno
fldl
mov
fcoml
mov
push
ret
mov
mov
mov
and
xor
push
test
xchg
lea
xlat
out
arpl
sub
cs
cltd
scas
sbb
jmp
outsl
inc
mov
mov
out
cmp
aaa
xchg
sub
jbe
pop
sbb
and
mov
mov
das
and
and
cld
dec
cmp
add
aam
movsl
jo
fldpi
icebp
dec
mov
rorb
les
mov
or
leave
mov
sti
adcl
push
bound
clc
push
dec
cmp
jle
imul
cmp
cmp
shlb
mov
cmp
ret
or
int3
cltd
mov
loop
push
pop
pop
movsl
movsb
sbb
ja
jg
mov
inc
mov
cltd
xor
fidivrl
xor
jo
cltd
cmp
push
loopne
lcall
outsb
mov
and
je
jo
movsb
push
stos
xor
in
mov
arpl
jl
int
xchg
xor
xor
xchg
or
add
lret
cld
addr16
or
pop
xchg
dec
add
ret
dec
je
das
mov
in
inc
sbb
cmp
push
mov
push
iret
out
out
rolb
mov
xchg
or
jno
dec
ret
int
or
sbb
lret
jge
adc
out
xchg
mov
lcall
jp
inc
in
mov
repnz
push
lret
dec
das
push
mov
out
stos
gs
lcall
xchg
push
scas
mov
outsb
call
and
dec
imul
mov
jecxz
add
and
in
fisubrl
jge
jmp
xor
adc
cmp
test
out
gs
test
dec
inc
test
js
mov
ljmp
sarb
fdivrs
mov
adcl
lahf
jbe
adc
adc
pop
loope
movsl
dec
jb
xor
mov
in
and
push
fwait
ficomps
mov
xor
nop
xchg
mov
cmp
arpl
cltd
add
orb
rcll
movsl
cmp
lods
int
inc
aam
iret
jg
pop
out
into
idivb
mov
pop
cmc
inc
xor
repnz
xchg
cmp
nop
and
jle
pop
jle
mov
mov
fcomp
and
push
xchg
out
push
mov
jae
cvttps2pi
mov
imul
dec
mov
or
inc
icebp
mov
dec
cmp
lea
lahf
sahf
adc
or
jae
loop
cs
push
negb
cmpsb
adc
out
xchg
mov
cmp
mov
lds
adc
pop
cltd
fsubrs
push
fcoml
lahf
mov
inc
mov
decb
mov
and
push
int3
arpl
in
pop
sub
roll
mov
fdivs
lret
lock
pop
push
xor
cwtl
ror
es
or
push
pop
mov
mov
pop
les
sbb
inc
lds
or
and
fldcw
ja
lea
scas
mov
stc
and
push
shll
sbb
out
or
xor
xchg
and
cmpsb
fimull
movsl
or
cwtl
cmpsb
pop
popa
mulb
cwtl
stos
lahf
mov
xchg
add
pmulhuw
pushf
sar
cmp
add
dec
jns
out
add
sarl
fstpt
cmpsl
xor
add
std
or
jmp
stc
add
sbb
out
ret
cli
pop
add
inc
and
out
sub
mov
leave
rcrl
mov
fnstenv
xor
scas
adc
push
mov
mov
jno
mov
iret
cmp
cmp
iret
pushf
hlt
loopne
and
sahf
sbb
jne
int
jmp
lahf
ja
pop
xchg
pop
push
test
pop
sbb
movsb
mov
lret
stc
inc
push
or
lret
shl
add
test
inc
loop
mov
cld
dec
pop
rolb
pop
cs
add
and
mov
push
cmp
xchg
adc
xchg
cld
fs
bound
dec
push
scas
daa
nop
and
push
mov
mov
cmp
sti
loope
adc
cltd
jb
dec
mov
rcrl
cmp
jp
sub
loop
dec
mov
lods
repnz
repz
jp
jb
mov
aam
out
mov
fwait
inc
pop
outsb
xor
jnp
data16
pop
cs
push
in
pusha
mov
xchg
jl
ljmp
jg
mov
fs
sahf
add
xchg
xlat
xor
popf
cmp
mov
test
lods
pop
repz
jns
sahf
mov
add
push
adc
jecxz
mov
pop
jle
cwtl
out
or
pushw
add
push
aaa
jno
cld
rep
dec
mov
or
xlat
sahf
ror
and
mov
je
std
addr16
push
mov
pop
ror
cmp
adcb
jecxz
loopne
push
jb
or
adc
inc
das
mov
push
cmp
or
pop
cld
sbb
xorl
cld
popf
cmp
mov
int3
dec
pushf
cli
mov
pop
rcr
mov
jmp
mov
adc
data16
jb
jl
xchg
mov
sub
push
loopne
sbb
jnp
rolb
or
xchg
inc
scas
mov
pusha
aad
enter
popf
movsl
sarb
sbb
in
xchg
jecxz
les
cmpb
btr
cltd
outsl
insl
mov
neg
sub
dec
xchg
stc
push
sbb
push
data16
sahf
sub
xchg
pop
test
adc
outsb
int3
dec
aas
clc
sbb
lods
adc
mov
jmp
xor
loope
out
leave
sahf
mov
xor
dec
sarl
pop
jle
mov
mov
pop
jecxz
and
sahf
mov
aas
rolb
mov
insb
jg
mov
int3
fsubrl
jo
pop
lret
xor
les
inc
lret
dec
jno
mov
cmp
fadd
mov
and
sbbb
mov
mov
push
lods
addr16
xor
enter
lea
mov
int
test
fidivs
pop
fsts
outsl
sub
das
xor
jae
sbb
and
xor
imul
mov
sub
push
and
add
add
call
xchg
daa
std
or
cltd
lret
sub
jl
add
repz
ljmp
or
add
cs
jae
push
dec
ret
jnp
jns
mov
xchg
lods
cmp
stos
lock
push
mov
adc
mov
out
fildl
divl
lock
push
rcll
sahf
or
ja
mov
ficoml
sbb
xlat
aam
mov
dec
sbb
in
clc
js
mov
push
test
pop
push
dec
outsl
jb
mov
and
add
popf
sar
jecxz
add
pushf
std
add
jo
push
clc
in
imul
nop
mov
push
mov
or
int
loop
prefetcht1
lods
stos
pop
jp
repnz
aad
push
jmp
cmp
in
jae
ljmp
sub
inc
shrb
movsl
sti
iret
sub
pop
pop
daa
andb
adc
or
and
mov
shlb
stos
in
out
iret
inc
lea
pop
sbb
rorl
shrb
xchg
cmp
jge
add
fmull
leave
mov
mov
xor
dec
dec
fwait
clc
pop
jae
in
mov
test
je
mov
push
add
jmp
cmp
ljmp
loop
xor
pop
inc
ss
pusha
mov
push
test
rcll
dec
repnz
testb
sub
adc
fldenv
mov
mov
incl
ljmp
icebp
push
pop
mov
inc
stc
jb
je
and
test
jno
mov
adc
repnz
ljmp
xchg
call
loopne
mov
jb,pn
es
xchg
xchg
xor
xor
lret
mov
std
dec
les
nop
fadd
into
popf
jb
mov
out
call
divl
xchg
filds
cld
xchg
imul
sti
mov
stos
stos
push
les
xlat
sub
mov
fstpt
gs
int3
mov
push
mov
ret
or
push
das
mov
inc
out
mov
pusha
add
sbb
inc
xor
or
in
sbb
push
popa
arpl
sub
frstor
mov
int3
lock
mov
out
mov
add
sahf
cmp
cmp
mov
sbb
and
loop
add
cmp
ret
aam
aam
andb
jle
lahf
rol
pop
adc
jae
sbb
cmp
aaa
xchg
cli
sbb
dec
fldt
stc
cmovb
out
pop
insb
repz
inc
icebp
pop
in
pop
sbb
cmp
rclb
dec
jg
fstps
jl
jo
add
sub
adc
inc
dec
repnz
mov
cli
xor
add
lret
cmp
mov
outsl
sti
jne
pushf
sti
fistpl
xor
shlb
testb
movsl
dec
hlt
pop
lods
jb
or
repnz
pop
fwait
cli
mov
insb
jnp
or
push
test
shll
inc
orl
out
gs
pop
cltd
cmpsb
ljmp
ss
gs
or
test
cwtl
fmull
xchg
test
pop
loope
xor
scas
jae
sbb
aas
jmp
sub
arpl
jp
pop
int3
movsl
jecxz
movsb
dec
mov
mull
mov
cmpsl
cli
sbb
popa
inc
das
lret
mov
jecxz
jbe
xchg
cwtl
dec
inc
mov
cmpl
ljmp
adc
aas
out
xor
push
dec
popf
sti
ret
aad
dec
lock
cmpsl
rcrl
popf
jmp
add
inc
fsubp
xchg
inc
xchg
xchg
push
es
das
inc
jg
fildl
add
ja
out
lret
cmpsl
dec
lea
sahf
xchg
push
movsl
sbb
es
xor
xor
xchg
daa
mov
pop
pop
test
add
mov
sub
jmp
daa
fwait
out
sbb
js
and
jbe
test
or
loope
mov
iret
mov
enter
ret
pop
into
aad
cld
xor
test
jno
xor
in
mov
test
pop
adc
addb
je
or
sbb
lahf
test
jg
fdivr
sahf
adc
frstor
popf
mov
xor
int3
xchg
and
push
subl
mov
aaa
push
push
jle
out
xor
lcall
fiaddl
mov
jle
sub
sbb
gs
pushf
inc
or
mov
iret
mov
imul
addr16
pop
lret
in
pop
jge
mov
push
imull
gs
sbb
dec
or
xchg
mov
pop
popa
enter
xor
sbb
clc
bound
ss
cltd
fldcw
add
cmp
or
stos
jbe
xchg
cmpsb
cmpl
je
sti
bound
fwait
push
or
cmp
xor
in
jl
jg
jge
mov
mov
rcl
or
add
enter
dec
xor
cmpsl
addr16
xor
sbb
adc
pop
xor
push
or
mov
out
dec
mov
ss
sti
add
and
dec
sti
cmp
enter
mov
dec
add
dec
popa
mov
arpl
icebp
and
loop
sub
lock
rcrb
int3
inc
push
cmc
sub
fwait
ret
je
jg
jns
decl
cmp
lcall
adc
cmp
ljmp
jge
adc
cli
mov
ja
fdivrp
ss
cmp
aaa
les
or
push
and
scas
clc
sbb
cmp
rcll
cmp
aam
push
inc
lock
gs
adc
cltd
fldenv
or
aam
je
loope
outsl
loope
int
lods
rcr
iret
push
out
dec
or
and
dec
lret
mov
aad
stos
mov
subb
inc
or
mov
test
cmp
dec
cmp
aad
call
and
repnz
cs
hlt
icebp
stos
push
push
scas
pop
sahf
imul
loop
cmp
ud1
push
push
pop
jo
mov
in
jmp
push
fld
xchg
xlat
out
daa
mov
mov
pop
sbb
dec
xchg
dec
mov
adc
ss
mov
sub
xchg
es
sub
test
xor
push
jp
inc
add
popa
cld
aaa
mov
clc
mov
and
sarb
gs
lds
inc
and
rolb
fidivrs
fstps
test
xchg
lock
xchg
pop
cld
sbb
dec
mov
in
sbb
mov
cmpsl
cs
sbb
les
dec
jbe
mov
mov
scas
popa
test
outsl
insb
mov
push
mov
inc
popf
pop
xchg
xchg
out
xor
fwait
jge
sub
add
mov
lea
pushf
pop
sti
popf
jae
lret
fsts
pop
xchg
fstl
push
push
dec
mov
icebp
sahf
int3
icebp
push
push
xor
and
lea
push
sub
lret
out
xchg
dec
fldcw
sbb
in
xchg
arpl
sbb
outsb
test
ror
push
ret
fxtract
inc
cli
and
inc
in
adcb
adc
dec
andb
sub
mov
cmp
ljmp
fnsave
pop
sub
cmovbe
pop
out
aam
lea
adc
add
imul
mov
sbb
pop
xor
push
pop
psrld
shrb
cmp
push
jle
push
push
popa
adcl
mov
in
adc
daa
xchg
ret
sahf
push
les
dec
cmp
test
pop
popf
adc
mov
xchg
loop
fcomip
es
ss
int3
or
and
pop
imul
jbe
or
inc
shll
test
pop
jl
cmp
sbb
jl
shrb
mov
in
mov
mov
lods
dec
jecxz
sub
js
mov
fdivl
shrb
lcall
jbe
lea
lds
fisubrs
xor
lahf
xor
dec
imul
push
dec
jg
fcoml
dec
cmp
adc
cmp
lret
in
jle
mov
mov
xor
mov
push
dec
fildl
mov
mov
fistpl
push
out
sub
mov
cmp
push
scas
ror
pop
sbb
imul
mov
and
jno
stos
fildl
mov
mov
push
stos
xchg
sub
sarb
pushf
arpl
add
pop
jl
mov
adc
scas
scas
jb
adc
insb
inc
mov
xchg
loope
ret
mov
push
stos
push
insb
sbb
cmpsl
lret
push
mov
lods
popa
xchg
cmp
dec
cltd
push
push
mov
xor
mov
pusha
jg
cld
cmp
test
push
jno
scas
xchg
test
loope
neg
rcl
xorb
popf
ror
lret
dec
loop
xor
mov
ds
mov
insb
out
lret
mov
inc
dec
ds
xchg
scas
rcrb
sbb
pushf
inc
xor
or
mov
fwait
push
sbb
mov
cs
xor
pop
shll
mov
lock
push
aad
cmpsb
push
push
push
pusha
aam
sub
push
dec
rorb
fs
jnp
mov
sub
fwait
mov
or
fwait
mov
mov
jge
fisubrl
sbb
cmp
test
sahf
decb
loope
push
outsb
push
pop
jecxz
cltd
call
push
loopne,pt
pop
xchg
push
jae
xlat
jmp
mov
dec
shrb
std
mov
or
pop
xor
rcr
das
pop
adc
in
mov
pushf
outsb
das
outsl
cwtl
fwait
lods
jbe
pop
adc
push
add
testl
rclb
fcoms
mov
ds
cmp
das
pop
mov
rcr
and
push
rol
cld
mov
insb
cmc
xchg
mov
orl
flds
das
pop
cmp
mov
in
adcb
mov
or
and
mov
lods
jnp
sti
ss
fwait
xlat
xor
xchg
mov
xchg
cmp
sub
movsl
xchg
fs
sarl
fiadds
add
repnz
ljmp
dec
cltd
cmp
inc
scas
fucomi
ljmp
outsl
sbb
cwtl
in
jmp
sbb
push
je
push
or
jecxz
inc
test
jns
inc
xor
mov
test
mov
or
popf
cmp
scas
cmp
push
xor
jno
data16
jmp
or
mov
lock
sbbb
xor
dec
std
inc
adc
ljmp
aad
notb
jno
jl
xchg
jb
fwait
add
ljmp
movsl
test
push
and
insl
aaa
mov
jp
cmp
mov
loope
mov
and
jo
lret
and
lahf
popa
mov
mov
jnp
jecxz
or
pop
sbb
orl
scas
or
je
xchg
dec
pop
xor
stos
xor
jp
subl
int3
push
stc
jne
push
add
adc
inc
aad
jg
xor
cltd
pmuludq
mov
pop
test
or
rcll
or
fisttps
jmp
js
push
into
push
scas
fldcw
test
cmp
sbb
or
lcall
out
ret
pop
cmp
mov
or
lds
sbb
lcall
push
cli
stc
scas
arpl
adc
push
test
jmp
push
push
mov
xchg
aas
pop
rorl
and
mov
imul
fidivrs
xchg
in
inc
mov
mov
cmpsb
sub
out
adc
cmpsl
popa
xor
es
daa
test
pop
cmp
add
cmpsb
in
push
iret
iret
pop
mov
dec
out
xchg
push
dec
nop
mov
movsl
fnstsw
and
gs
xchg
daa
idivb
out
push
push
jno
cmpsl
sbb
sbb
and
cld
ret
int
out
addr16
cmp
mov
outsl
inc
jae
push
mov
inc
fisubl
sahf
push
mov
js
test
ss
mov
in
pop
jno
xchg
adc
or
and
mov
jns
pop
dec
jecxz
iret
fists
nop
loop
jge
dec
cmp
imul
mov
lahf
jo
enter
xor
js
lea
fsubrs
rol
mov
imul
xor
xor
icebp
addr16
adc
shr
xor
in
sub
ljmp
pusha
cld
xchg
cld
test
ss
rcl
xchg
je
inc
pop
xor
or
jo
adc
or
xchg
dec
faddl
mov
or
data16
or
mov
stos
sahf
cmp
cmp
in
insb
mov
scas
cli
sub
push
lret
into
lods
adc
jbe
stos
loop
pushf
jmp
mov
int
jg
cmp
test
movsl
mov
sub
fs
dec
push
pop
jns
popa
cmp
fdiv
jp
shll
sub
mov
cwtl
or
test
jl
fst
cltd
mov
add
xchg
gs
aad
dec
testb
pop
clc
imul
mull
pop
imul
in
mov
push
int
rorl
add
mov
mov
add
iret
xchg
loop
subb
push
notl
cmp
nop
add
dec
js
mov
push
sub
shl
call
sbb
xor
subb
bound
fmull
xchg
sbb
xchg
and
adc
movsl
rcrl
adc
sbb
mov
daa
sbb
negb
cmp
xchg
cli
mov
dec
sbb
cmp
mov
cmpsb
inc
adc
pop
jmp
sbb
push
icebp
repnz
nop
adc
lock
jae
stos
jmp
xor
mov
cld
mov
cmp
mov
out
or
cmp
pop
movsl
pop
imul
mov
adc
xor
cmpsb
in
enter
popa
outsl
mov
or
insb
test
xchg
lcall
inc
sbb
pop
rorl
fcom
and
mulb
adc
clc
add
dec
sbb
mov
neg
dec
in
cwtl
in
daa
data16
call
jmp
dec
dec
mov
lods
adc
dec
sub
addl
adc
xor
pop
ss
fistpl
movsb
mov
sahf
das
push
je
inc
sarb
mov
xor
mov
loope
mov
jp
adc
lds
dec
push
push
push
stc
pushf
mov
sub
loop
shll
shll
mov
push
jecxz
and
out
pushf
sbb
inc
jle
inc
das
lcall
push
push
jnp
inc
es
frstor
adc
fs
ret
sub
imul
enter
jo
je
push
push
stos
jecxz
push
and
cmpsb
imul
les
mov
enter
sub
in
add
lock
xchg
imul
mov
pop
sbb
outsb
aam
iret
xor
fdivl
int
in
daa
loope
cmpsb
sti
scas
mov
je
adc
pop
pushf
adc
in
jbe
arpl
int
lahf
stc
ror
cmp
mov
out
mov
push
mov
movsb
adc
push
xor
and
jnp
subb
aaa
sub
push
es
cld
inc
jno
popa
pop
add
imul
inc
adc
push
repz
cmovle
int
sbb
push
add
lret
stos
mov
pop
xor
mov
sbb
push
mov
add
dec
int3
aad
in
es
outsl
loopne
add
ficoml
xchg
sub
pop
mov
subl
pop
pop
jbe
inc
fstpt
iret
imul
fwait
movsb
cmp
iret
mov
cmp
out
jmp
mov
loopne
hlt
std
dec
enter
and
inc
sub
out
mov
push
cwtl
xchg
push
sbb
jnp
aam
jle
mov
pop
out
lahf
sbb
arpl
lret
push
lea
out
ds
loope
jo
push
sbb
jmp
loop
xor
in
addb
shll
jg
mov
lret
lret
mov
cmp
imul
mov
mov
fcomip
cmp
mov
scas
xor
sbb
add
inc
sub
cmp
cs
cwtl
ss
mov
adc
dec
jno
xor
rorb
repnz
xor
jne
pop
xor
outsl
jbe
sub
jecxz
popf
cmc
arpl
in
mov
lds
or
fstps
je
mov
jge
mov
cmpsb
and
push
pop
mov
loop
loope
and
in
out
xchg
enter
add
mov
pusha
adc
les
pop
xor
lret
out
add
mov
sbb
cmpxchg
lahf
add
mov
adc
loopne
cmc
ret
lahf
sub
mov
mov
and
mov
daa
mov
dec
rorb
jbe,pn
sbb
jb
xor
dec
add
les
in
jne
ljmp
add
push
pushf
addr16
and
out
sbb
cmp
mov
xor
cmp
adc
jge
into
xor
lds
fdiv
push
dec
sub
push
cmp
pop
xor
mov
mov
inc
aaa
mov
mov
push
cs
cmpsl
push
pop
mov
mov
ret
inc
mov
in
arpl
dec
sti
cmc
sub
fldenv
and
inc
push
call
pop
mov
mov
cmc
lock
pop
xor
mov
adc
sbb
cli
mov
mov
adc
in
sub
call
je
test
xor
stos
push
test
shll
mov
aaa
pushf
push
popf
cmp
leave
add
sbb
or
xorb
cmp
mov
mov
adc
sub
xor
or
insl
sar
push
mov
test
push
sbb
mov
ljmp
inc
ret
fxch
dec
mov
xchg
inc
adc
stos
in
cli
sahf
out
mov
jnp
cmp
insl
pop
add
and
pop
mov
push
sub
cmc
xorb
gs
mov
into
jb
xchg
out
or
fdivl
lcall
dec
leave
stc
dec
insl
mull
mov
mov
mov
mov
inc
test
outsb
dec
pcmpgtd
int
ja
fwait
mov
mov
sbb
mov
test
push
data16
mov
scas
pop
popf
test
les
lcall
sbb
data16
xor
fisubl
mov
arpl
insl
ret
and
xor
stos
fsubl
outsl
mov
insl
xchg
adc
jno
xchg
cmp
in
inc
imul
xchg
jle
and
push
pop
push
mov
push
testl
pop
pop
xchg
mov
push
add
push
adc
inc
clc
fmul
scas
xchg
fdivp
push
dec
xor
sbb
and
sbb
pop
icebp
cmp
push
in
imul
pop
mov
mov
outsb
xchg
inc
push
stc
sbb
pop
push
orb
into
push
mov
sub
add
out
jo
arpl
mov
addl
dec
jle
mov
and
sub
push
push
repnz
icebp
adc
and
or
inc
out
pop
inc
repnz
jp
mov
lret
jl
out
add
fstpt
jb
mov
mov
jae
aas
inc
mov
sti
mov
rcr
pushf
xchg
iret
xor
xchg
or
mov
je
xchg
clc
fdiv
cmpl
loopne
adc
mov
mov
icebp
pusha
push
jne
lret
pop
inc
lock
lock
orb
es
dec
adc
dec
push
nop
sub
sub
mov
push
fiaddl
dec
sub
and
push
jno
sbb
sti
dec
adc
and
jbe
adc
lock
pop
xor
add
push
in
sub
test
pop
movsb
adc
sub
push
inc
sub
mov
in
push
fisttpl
xlat
mov
sub
xor
and
stc
jle
jg
faddl
jae
pop
sub
mov
sbb
push
xchg
std
xchg
cs
loop
lds
outsb
cli
sub
adc
test
xor
movsb
insb
cmpsb
mov
push
xor
pop
xchg
or
loopne
subb
sbb
ljmp
cmp
inc
dec
cmpl
push
stc
dec
adc
leave
inc
pop
adc
in
lret
push
ljmp
mov
leave
clc
inc
add
lods
icebp
insl
cli
pop
cmp
jp
out
adc
mov
in
adc
jne
pop
sub
imul
or
push
xchg
rol
cmp
xor
in
loopne
movsb
push
mov
sbb
mov
jne
dec
ret
cltd
pop
pop
imul
mov
xchg
pop
outsl
loope
js
aas
test
sarb
jbe
xchg
jge
mov
lcall
movsl
xor
ficompl
out
out
in
pop
decl
mov
pop
mov
ljmp
mov
pop
dec
aad
mov
cs
mov
js
inc
test
gs
mov
sti
cmc
lret
es
push
test
sbb
dec
inc
in
enter
push
in
outsl
bound
les
lret
das
cmp
adcb
adc
out
mov
out
xchg
pop
andl
push
push
sar
out
into
data16
sbb
aaa
adc
cmovo
jmp
sbb
aaa
adc
jmp
xchg
addl
inc
push
shlb
jb
dec
and
xor
xchg
push
push
and
xor
std
sbb
stos
mov
mov
sarb
stos
jns
sbb
pop
jo
jbe
jne
mov
test
or
mov
daa
mov
jmp
jae
std
and
in
ret
jg
xchg
fildll
sub
push
pop
cli
or
xchg
sub
imul
sub
mov
inc
ds
dec
add
nop
cs
fnstsw
ljmp
jmp
xchg
fistpll
cmpsb
test
arpl
mov
daa
inc
ja
negb
add
pop
nop
pop
outsb
pop
jecxz
aas
jg
scas
inc
cmpsb
loope
ljmp
xor
lcall
cmpsb
cmp
loopne
xlat
pusha
cmp
adcl
lods
cmpsb
in
insb
out
push
xchg
gs
and
jnp
jne
add
or
out
xor
adc
sub
push
sbb
jmp
jns
fadds
jb
add
push
fdiv
xchg
add
dec
ret
std
mov
add
shrb
inc
enter
lea
sbb
sub
xor
add
andb
adc
mov
sar
sbb
and
das
jbe
or
test
xor
repnz
stos
test
cwtl
outsl
jno
sub
leave
test
outsl
mov
leave
cs
push
sbb
data16
or
push
fwait
add
push
push
sahf
push
arpl
dec
notb
rcll
pop
ret
jmp
xchg
or
xchg
cmp
addb
js
push
and
aad
xor
stc
inc
clc
sbb
inc
pop
or
jp
insb
ret
jecxz
ret
repz
jg
mov
mov
std
dec
insb
popw
insl
fsub
dec
in
pop
arpl
mov
cltd
sub
push
sub
rep
sub
sarl
mov
popf
and
push
xchg
mov
jbe
into
mov
cmp
pusha
and
jg
ret
xor
lret
iret
lret
push
subl
push
xlat
dec
daa
mov
jecxz
adc
cmp
xchg
sbb
xchg
loop
int3
in
into
xchg
daa
dec
sub
mov
cld
rcll
cmp
pusha
sar
xchg
xchg
sbb
sbb
or
cmc
mov
mov
std
into
loope
lds
sub
sahf
add
mov
pop
mov
push
sub
lods
dec
shlb
mov
cs
mov
fisubl
and
das
pop
or
lds
cmp
xor
dec
scas
inc
cltd
mov
inc
stc
cmp
in
mov
push
std
or
xchg
pop
sbb
mov
sub
out
and
rcr
out
js
lcall
movsl
cmc
ret
dec
xchg
adc
int
in
cwtl
mov
add
aad
shlb
scas
mov
loopne
and
cmpsb
iret
fwait
dec
pop
xchg
daa
or
in
inc
cli
clc
stos
cmpl
mov
aam
push
inc
mov
jnp
pop
pushf
add
adc
mov
mov
jo
mov
adc
cs
pusha
outsb
repnz
lcall
out
push
insl
clc
xchg
xor
insb
stos
arpl
and
adc
add
jnp
dec
ljmp
mov
cltd
test
gs
mov
adc
fimuls
scas
mov
imul
cmpb
sbb
nop
mov
sub
das
xchg
inc
mov
sti
dec
sub
adc
jg
clc
push
mov
loop
into
out
cmp
mov
sti
movsb
or
sbb
pop
mulb
and
or
adc
and
call
pop
sbbb
adc
aad
pop
mov
pushf
jb
adc
lcall
test
or
enter
test
cld
stc
add
outsl
pop
aam
outsb
icebp
cwtl
pop
sub
vprotd
xchg
ror
loop
push
dec
or
scas
cmp
idivl
push
and
lock
cmp
scas
rcr
lcall
lret
rcrb
arpl
and
idivl
mov
in
adc
mov
dec
insl
jo
mov
dec
inc
pop
cli
daa
out
sbb
inc
lahf
push
scas
push
shl
jno
add
adc
add
mov
xor
pop
jb
mov
lock
pop
adc
std
pop
inc
pop
mov
sub
roll
push
sub
push
jecxz
add
and
ljmp
push
out
mov
push
push
mov
shll
outsb
sbb
dec
sbb
push
xchg
mov
cmp
cmpsb
xchg
out
pop
jp
mov
enter
xor
jae
mov
xchg
popf
cmp
pop
into
sub
decl
js
ljmp
cmpsl
dec
mov
scas
cmp
fdivrl
inc
cld
xchg
sbb
loopne
outsb
clc
cmp
sahf
in
test
adc
mulb
sub
fdivs
push
mov
jo
imul
xchg
in
cmp
jge
imul
cld
imul
mov
adc
hlt
sub
sbb
std
xchg
inc
bound
adc
fsincos
inc
jmp
lock
xchg
mov
push
enter
enter
jmp
and
addl
inc
in
pop
mov
loop
mov
or
inc
sub
xchg
jae
xchg
je
add
cld
sbb
stos
scas
dec
and
mov
inc
inc
dec
xlat
movsb
jecxz
add
cli
fmuls
jnp
inc
inc
daa
xor
pop
adc
loop
loopne
dec
jmp
outsb
xchg
ljmp
mov
mov
loop
std
out
mov
and
pop
lods
repnz
lahf
rol
fs
test
cmpsb
xchg
loope
mov
mov
sub
add
jmp
inc
cmpl
imul
jecxz
hlt
xor
jb
and
xor
sbb
mov
in
cmpsb
pop
jle
pop
mov
icebp
pop
sti
or
sbb
pop
xor
jbe
mov
mov
cli
xlat
xor
idiv
nop
into
dec
ljmp
pop
push
lahf
inc
inc
add
js
jno
push
inc
repnz
mov
add
dec
je
loopne
lcall
jg
shll
sbb
into
mov
leave
add
xchg
sbb
sbbl
jo
push
push
jg
clc
push
fcmovnb
mov
rcl
jno
xchg
pushf
fmuls
cmp
or
shrl
jmp
jmp
cmp
into
mov
ret
push
cld
fsubs
scas
add
lahf
mov
cmc
cs
ss
and
in
sub
rcll
data16
cld
mov
pushf
mov
xchg
sbb
xchg
outsb
pop
xchg
lods
xor
inc
inc
inc
mov
loopne
pushf
neg
ret
inc
cli
or
mov
pop
rolb
lods
cmpsb
stos
or
push
or
dec
push
mov
rorb
aad
lret
mov
xor
jp
mov
jmp
iret
std
notl
and
test
cmpsl
out
test
sahf
cmc
fistps
dec
fnsave
out
jo
xchg
mov
aad
mov
lcall
shl
fidivrs
imul
or
int
mov
repnz
cld
jp
and
nop
and
idiv
iret
fsubrl
imul
and
sbb
fadd
push
or
call
iret
inc
jp
cld
lea
push
or
inc
sar
repz
or
addr16
cmp
fs
xchg
and
lcall
mov
or
es
adc
xor
adc
fdivr
push
xchg
in
adc
xchg
push
sbb
sbb
adc
xor
mov
scas
pop
inc
ja
mov
mov
pop
stos
inc
sbb
pop
adcl
xlat
jecxz
lret
mov
subl
jg
cmp
xor
dec
push
out
sti
testl
loope
push
out
subb
test
test
mov
int
jae
and
adc
and
xorb
test
xchg
std
sbb
push
inc
xlat
sbb
imul
stos
enter
enter
or
mull
bound
test
jg
adc
insl
jb
fidivs
or
add
call
pushf
fdivs
jmp
adc
outsl
aas
pusha
imul
push
add
ja
mov
stc
ljmp
rcll
std
in
sub
aam
stc
pop
push
jp
xor
scas
pop
push
sub
mov
lea
inc
mov
outsb
dec
pop
push
push
adc
jo
mov
cli
mov
cmp
xor
mov
pop
jb
jg
into
inc
out
xor
jae
ret
push
cmp
outsl
dec
and
sub
test
pop
mov
lea
idivl
jle
bound
add
jp
or
fstps
rolb
sub
jno
sub
mov
out
aaa
notl
ss
cltd
psubb
fs
pop
imul
fcmovnb
mov
xchg
push
adc
add
std
or
in
test
cmp
mov
cmp
dec
mov
insl
jecxz
loopne
cmpsb
movsb
dec
xchg
in
mov
in
or
inc
call
mov
and
xor
lret
rcrl
mov
int3
shlb
xchg
xor
cmp
xor
mov
lods
xchg
pop
notb
mov
fwait
ss
xchg
push
lods
rep
sub
xor
loop
mov
mov
xchg
std
xchg
sub
lret
sahf
loope
jnp
imul
jmp
loopne
dec
out
cmp
repz
xchg
loopne
xchg
mov
or
inc
loope
jne
imul
pop
xor
sti
fsubrs
and
cmp
in
iret
sub
in
pop
scas
mov
adc
in
xor
mov
add
bound
push
mov
dec
mov
lcall
ja
in
mov
out
inc
dec
insl
aad
adc
cli
add
lahf
or
daa
or
mov
jne
out
sub
jae
cmc
outsb
cmp
mov
inc
pushf
pop
add
push
mov
popf
pop
xor
push
inc
and
adcl
push
jns
cmp
cmp
or
xchg
lcall
pushf
cmp
scas
mov
inc
shrb
lods
int
adc
jg
push
xchg
push
cltd
int
jp
ljmp
les
inc
push
pushf
addb
mov
out
ret
and
pop
inc
filds
xlat
out
je
lods
mov
fcomps
xchg
lret
sbb
int
inc
imul
hlt
lcall
inc
xor
cmp
jl
fdivrs
add
mov
mov
lret
hlt
mov
sbb
dec
mov
arpl
xchg
sahf
out
hlt
jns
in
out
fwait
into
dec
les
in
xchg
mov
repz
push
xchg
cld
jp
pusha
imul
push
or
popf
icebp
sbb
cmp
push
pop
mov
cmp
push
dec
sub
fimuls
dec
mov
xor
and
push
shrl
sub
arpl
stc
outsl
sbb
popa
inc
popa
gs
adc
jbe
jb
push
loop
pop
push
sbb
ss
push
frstor
or
push
popa
sub
js
inc
xor
mov
gs
int3
sahf
loop
int3
ds
xchg
data16
das
shlb
xchg
add
js
cmpsb
xchg
es
loopne
mov
in
lcall
lea
xchg
insl
hlt
ret
jecxz
inc
test
pop
mov
xchg
cmp
mov
popa
lods
addl
cmpsb
notb
mov
cmc
insb
pop
jg
cmp
ret
daa
jle
push
pop
call
jg
in
cmp
out
lret
stos
sbb
sti
mov
testl
stc
inc
test
xor
mov
sti
jmp
repz
push
mov
mov
sub
test
cmc
push
xor
adc
aaa
ret
imul
shrb
test
sahf
and
mov
sub
push
push
out
adc
rorb
or
inc
ja
rolb
sahf
lods
fcompl
psubd
inc
push
push
test
cmp
hlt
inc
adc
ror
das
and
mov
push
hlt
pop
xchg
stc
cs
lock
jge
dec
mov
and
mov
test
dec
sub
mov
dec
movsb
add
mov
pop
xor
cmp
sub
aaa
fisttpl
push
or
lret
dec
add
xchg
pop
ficoms
pop
adc
jns
xor
mov
iret
js
cmpsl
jne
test
decb
cmpsb
dec
xchg
iret
out
fsubrl
adc
jl
xchg
dec
jg
gs
and
pop
testl
xchg
cld
shrb
scas
xor
push
ds
push
lock
stos
inc
cmp
rcrl
in
fcmovnu
xor
jns
cli
dec
aam
imull
or
in
sub
pop
mov
mov
pop
xchg
lock
or
mov
jmp
stos
dec
cmp
jno
push
sahf
insb
sahf
cld
dec
adc
lahf
mov
push
push
inc
idivb
pop
movsb
and
jne
icebp
loop
mov
ss
fwait
and
fdivr
popa
insl
sbb
or
add
ret
fwait
jbe
pop
ret
dec
popa
rcrb
test
int
lods
and
leave
or
ret
test
jae
jle
gs
cmp
mov
and
xchg
into
fsubs
into
sub
mov
pop
mov
xchg
pushf
ret
and
adc
xchg
movsb
dec
mov
stos
sub
icebp
lcall
lods
shlb
in
insl
add
cltd
mov
aas
pop
mov
fisubs
xchg
mov
ret
fdivs
sbb
push
jno
add
xchg
call
dec
insb
sub
ror
mov
rcl
lret
add
sbb
rclb
fwait
mov
mov
movsb
call
mov
fidivl
repz
cwtl
mov
mov
pop
mov
aas
push
in
jp
testb
push
xchg
cli
cltd
fdiv
mov
into
cli
xlat
ljmp
dec
jno
outsb
cmp
jo
cld
push
into
jl
cmp
jle
mov
mov
dec
mov
push
sti
pop
mov
lds
daa
push
pop
test
add
mov
hlt
adc
pusha
fisubrl
cltd
xor
or
pop
and
mov
imul
push
insl
and
inc
and
jp
mov
sub
lock
cmp
aas
or
lods
mov
add
outsl
stos
add
mov
jns
xchg
enter
sahf
mov
push
pop
inc
popa
insl
add
sbb
push
pop
add
test
and
int
ret
movl
insl
mov
sbb
xchg
mov
xchg
lods
mov
xor
push
idivb
gs
mov
imul
stos
sahf
in
xchg
cltd
in
das
test
aam
xchg
mov
adc
mov
arpl
adc
sub
iret
outsl
xor
xor
cmp
cmp
loopne
xchg
cmc
adc
jbe
std
sub
lock
mov
cmpb
dec
sarl
ret
add
mov
fwait
mov
fsubrs
dec
loopne
or
push
cmp
aad
lahf
cli
cmp
xor
push
push
es
and
add
arpl
cmpsl
sbb
ss
rcll
stc
push
cmpsb
scas
jmp
jge
test
push
pushf
xchg
mov
in
and
lret
pop
jb
or
pop
jne
or
add
mov
pop
out
cli
sbb
aam
pop
imul
jnp
add
movsl
xchg
or
jno
fsubrl
out
pop
outsb
push
fisubl
mov
pop
jp
push
sbb
ret
push
movsl
mov
aas
lods
mov
pusha
rclb
jge
testb
sbb
lret
dec
adc
outsl
fimull
dec
or
jns
or
mov
stos
inc
or
or
pop
out
rcll
sub
fadd
arpl
push
es
or
xor
xchg
mov
jecxz
mov
je
jbe
xchg
fstpl
jnp
mov
push
js
push
inc
push
xchg
mov
mov
xchg
push
in
hlt
cmp
and
mov
stc
adcl
inc
mov
rorl
adc
call
mov
stos
push
divb
iret
enter
xor
mov
push
sub
or
mov
add
ret
mov
or
jg
and
adc
inc
xchg
xchg
xchg
mov
push
pop
pop
push
nop
mov
clc
or
shlb
mov
in
test
inc
mov
ficomps
jle
adc
lahf
es
into
cmc
mov
fsubs
xor
dec
jnp
and
push
cmp
xchg
push
nop
jecxz
fsubrs
ret
sbbb
lods
fildll
icebp
sahf
lret
sbb
mov
cwtl
xchg
test
mov
inc
pushl
test
hlt
dec
popf
push
sbb
addr16
xor
inc
xor
popf
inc
clc
data16
add
call
cmp
and
push
pop
add
sbb
sbb
cld
adc
sbb
in
sbb
int3
nop
mov
mov
lock
add
and
mov
pop
lds
testl
push
fbstp
xchg
xchg
mov
movsl
sub
dec
xor
cmp
push
mov
and
push
inc
lds
les
adc
hlt
xlat
push
jg
xor
cli
jl
cld
int
sarb
in
sbb
adc
pop
and
mov
push
mov
sahf
inc
fnstcw
loope
orb
add
clc
inc
jns
mov
clc
mov
push
fistpl
adcb
jecxz
sbb
xor
jle
sbb
adc
mov
in
push
add
lds
clc
push
jo
pushf
fs
xchg
add
push
mov
and
xor
xchg
sbb
xor
dec
aad
stos
rcr
sbb
xchg
fimuls
sbb
lret
rclb
jae
pop
lret
fiadds
sti
jbe
mov
add
lret
dec
imul
and
popf
cmpsb
js
lock
lods
enter
out
pushf
inc
push
test
xchg
mov
push
push
and
xchg
pop
mov
jg
mov
xchg
cmpsb
fs
adc
mov
or
cltd
jle
add
xchg
xchg
inc
pop
popa
test
fsubs
out
sub
in
into
test
rcrl
es
gs
mov
and
or
adc
repz
mov
add
aam
push
and
ret
push
addr16
loopne
ss
add
inc
pushf
idiv
in
mov
ficoml
add
fidivrl
push
icebp
test
in
and
movsb
call
out
or
xchg
mov
and
inc
xlat
lods
pushf
or
shlb
adc
fs
pop
xlat
and
xchg
add
sahf
mov
dec
aaa
pusha
popa
mov
sar
mov
enter
xor
es
mov
out
imul
int3
push
movsb
outsb
loop
pop
test
es
fdivrs
cli
xchg
jp
dec
movl
sbb
in
test
pop
adc
push
shlb
xor
push
sbb
add
movsl
aam
xchg
sahf
lods
cmp
mov
out
pop
sbb
ljmp
dec
lods
jg
imul
cmpsb
repz
call
xchg
icebp
ja
stc
push
jge,pt
cltd
xlat
pop
gs
or
mov
push
dec
or
rcll
into
mov
pop
pop
jb
test
mov
inc
fcomps
dec
outsb
sbb
mov
mov
mov
loopne
xchg
scas
and
and
hlt
push
fiaddl
popa
std
pop
mov
enter
pop
adc
add
sbb
sbb
and
push
dec
xchg
or
xchg
das
jne
mov
jb
mov
stos
xor
inc
add
or
mov
out
sahf
push
push
inc
ret
push
push
in
outsb
xchg
lods
fcomip
mov
mov
icebp
mov
dec
cmp
jl
sub
cmp
roll
cmpl
lock
aaa
jecxz
pop
sbb
in
inc
sbb
outsl
dec
xor
adc
sbb
dec
cmp
and
mov
mov
add
xchg
xor
sbb
pop
lahf
push
mov
lock
xor
xchg
cmp
or
cmp
sub
subl
aam
fmull
sub
dec
outsb
cmpsl
push
adc
stos
imul
fisubs
int3
inc
inc
fcoml
pop
cmc
and
push
cltd
and
loop
adc
stc
cmp
add
inc
call
movsb
xchg
push
in
out
mov
mov
jge
xchg
mov
test
cli
inc
lds
out
outsb
in
addr16
aam
cltd
jecxz
fmul
rorl
lret
ds
sub
inc
adc
in
mov
mov
outsb
pusha
xor
test
nop
sahf
sahf
mov
repz
addr16
cltd
add
insl
je
insb
es
add
ja
clc
dec
xchg
stos
xchg
pop
ret
xchg
ja
jno
stc
or
out
push
es
outsb
gs
push
xchg
ds
xchg
roll
or
xor
xchg
xor
cmc
frstor
icebp
jg
mov
adc
in
pop
lods
xchg
mov
cmp
pop
inc
arpl
cwtl
push
clc
clc
push
ret
imul
daa
ds
dec
dec
or
out
mov
push
bound
repnz
movsl
aas
pop
inc
inc
aas
aad
mov
jne
jnp
cmp
xor
and
ss
data16
jo
cmpsb
inc
jo
dec
pushf
xchg
jp
es
outsl
fbstp
mov
adc
adc
jns
mov
push
xchg
repz
sbb
gs
scas
jl
pop
fxam
fucom
lock
je
sbb
sbb
mov
sbb
ret
pop
sarl
mov
mov
lcall
insb
in
lods
mov
dec
stos
xor
add
jg
xorl
outsb
aam
jecxz
stc
sti
lods
cmp
iret
repz
sub
loop
xchg
fldt
je
popf
sar
insb
mov
in
rcpps
mov
aaa
cltd
shr
das
popa
sbb
or
les
xchg
lahf
iret
std
jmp
inc
xchg
in
lea
jg
cltd
xchg
scas
mov
jge
test
lret
sbb
xlat
push
sti
ljmp
or
pusha
xchg
mov
cltd
inc
jmp
popf
xchg
push
mov
add
rolb
xchg
mov
int3
aaa
mov
cli
inc
push
or
mov
arpl
sub
jle
xchg
push
or
and
js
mov
inc
jb
loop
cmc
sbb
jg
mov
pop
inc
outsb
repz
rolb
xchg
pop
outsl
into
inc
mov
popf
mov
xchg
xor
aam
std
or
sub
cmpsl
jne
mov
int
dec
dec
into
mov
enter
in
push
and
xchg
test
out
mov
cmp
fidivrs
inc
xor
fcmovu
das
outsl
sub
in
xchg
adc
inc
push
stos
mov
lea
sbb
call
jge
fisttps
mov
mov
loop
fcoml
jg
sub
in
dec
sub
fsubrl
cmp
or
mov
xchg
push
stc
mov
outsb
je
xchg
incl
dec
adc
sub
mov
roll
std
daa
aad
sarl
mov
sbb
cs
xchg
testb
jae
sub
or
dec
in
lret
xchg
or
sub
imul
gs
popa
jns
test
lret
sub
jo
fisubl
xor
mov
cwtl
jae
cmp
int3
stc
and
cli
cli
movsl
jmp
mov
pop
lahf
xchg
fstps
std
aam
xchg
jae
push
or
push
repnz
bnd
insb
int
addr16
fldcw
leave
xchg
movsl
stos
mov
xchg
jne
pop
pop
mov
mov
movsl
ss
sbb
dec
stos
sub
mov
xchg
cld
test
mov
pop
std
clc
arpl
xlat
xchg
stos
push
add
out
daa
mov
push
push
pop
xchg
outsb
inc
jb
push
jns
insl
mov
fucomip
inc
cmc
xchg
or
ret
xor
dec
popa
jae
cmc
jl
pusha
lods
mov
dec
add
adcl
arpl
add
dec
xor
mov
inc
push
jmp
lds
mov
cld
mov
xchg
xchg
adc
hlt
mov
out
xchg
adc
aaa
jo
pop
jmp
in
nop
add
rolb
cmpsl
imul
movsb
dec
mov
enter
pop
or
xchg
andb
adc
cmpsb
lods
inc
add
rcr
test
xchg
mov
jnp
jnp
and
mov
into
stos
ret
fdivs
xchg
mov
mov
rcrb
inc
dec
or
inc
out
enter
pusha
push
lds
dec
fildll
call
pop
frstor
cld
add
mov
sub
push
mov
mov
sbb
pop
sub
mov
push
sbb
jle
push
sarb
std
sub
into
pop
xchg
les
push
push
and
test
out
push
out
rcrl
iret
notb
enter
mov
out
or
js
mov
and
ljmp
ds
fdivr
sbb
jmp
or
js
dec
mov
and
xchg
cmp
sbb
cmovbe
hlt
cmp
fs
ja
add
loopne
je
daa
loop
in
mov
mov
lock
mov
loop
ja
mov
push
pop
stc
in
nop
fisttpll
cmpsl
push
jp
insl
into
imul
cld
dec
pop
ret
call
lret
sbb
cmp
sarl
xchg
mov
into
sub
mov
xchg
xchg
xorb
adc
lret
mov
test
repnz
xor
push
loopne
addl
lahf
cmp
mov
mov
pop
inc
sbb
cwtl
movsl
es
in
push
and
ret
test
pop
cs
jl
cwtl
sbb
mov
jle
cld
in
jne
es
cmpsb
add
sbb
mov
dec
subb
test
mov
jle
pusha
cli
and
add
lcall
add
repz
mov
lahf
in
and
xor
adcb
mov
xor
cmpsb
lret
rcr
mov
mulb
bswap
movsl
repz
addr16
xchg
scas
sbb
pop
imul
cmc
jnp
mov
clc
lods
popf
fxch
movsl
add
addl
jl
fiaddl
xor
pushf
cmp
adc
cmp
stc
jns
jecxz
iret
mov
adc
loop
jb
or
cmpsl
ja
xchg
fdivl
mov
and
fistpl
aam
sub
or
comiss
ja
test
ret
pop
call
dec
je
pop
mov
bound
dec
gs
push
mov
lods
push
cmp
pop
js
adc
leave
lods
cmpl
enter
repnz
test
add
or
mov
or
test
jo
jno
pop
mov
jns
sbb
clc
rcrl
in
inc
inc
pusha
repnz
inc
repnz
fcom
sbb
jecxz
idiv
icebp
add
lcall
xchg
mov
jmp
out
and
push
adc
ljmp
loopne
nop
and
fwait
pop
add
test
xchg
push
pop
es
dec
cmc
popa
push
daa
cs
sbb
sub
mov
repnz
pop
pop
ret
ds
test
push
push
scas
xlat
in
fsub
push
fimuls
xchg
ret
inc
cmp
or
sbb
adc
outsl
inc
clc
mov
ds
scas
fisubrl
xchg
push
enter
jne
hlt
jg
inc
std
sub
dec
js
xchg
dec
pop
or
push
lcall
ficoms
icebp
movl
sbb
and
insb
mulb
mov
jbe
inc
dec
out
pop
rol
xchg
popf
mov
and
add
nop
test
fwait
mov
adc
sub
sub
add
add
adc
push
mov
das
pusha
sbb
repnz
jns
pop
lea
sub
pop
xchg
mov
xor
jg
sub
push
cmp
xchg
mov
out
jnp
mov
mov
sbb
and
or
insb
pop
cmp
sar
or
dec
xchg
cld
and
mov
ljmp
in
lods
lea
adc
imul
mov
lock
xor
shlb
mov
mov
fwait
aam
or
jae
lahf
xor
rcrl
sub
cmpb
iret
imul
xchg
xlat
jp
icebp
es
addr16
pop
scas
dec
xchg
add
shll
fs
and
push
paddw
lock
adc
mov
test
dec
not
stos
rorl
lock
repz
jno
add
mov
je
mov
mov
mov
int3
iret
in
scas
icebp
push
in
repnz
xorb
dec
push
stc
mov
fcmovbe
fisubrl
lahf
imul
and
shl
in
cmp
add
hlt
nop
sub
out
add
aaa
int
jns
cmp
push
out
push
aam
leave
imul
and
in
or
push
test
mov
int3
fldt
adc
pop
je
int3
sub
push
mov
test
jle
adc
ss
add
cs
mov
and
inc
inc
out
lret
cmp
sbb
fs
dec
sti
in
jl
xchg
push
xorl
cmp
insb
pop
int3
add
call
aam
ret
lret
loop
ret
arpl
dec
add
mov
cmp
xor
sbb
xor
inc
sbb
enter
sub
bsr
test
and
fisttpll
popf
mov
loopne
into
stc
sub
repz
pop
mov
push
loop
push
mov
cmp
sbb
pop
add
jp
mov
add
jns
sub
lods
outsl
test
and
loop
xchg
pop
mov
jmp
xor
repnz
xorl
test
dec
inc
push
xor
add
std
sub
cmp
pop
adc
dec
mov
mov
shrl
std
das
add
loopne
inc
fldl
jo
inc
gs
mov
shlb
pop
subb
call
mov
sti
mov
test
test
popa
andb
add
xor
call
add
ja
adc
mov
add
mov
mov
inc
or
cmp
lock
pop
sti
adc
push
inc
lret
mov
push
xor
test
int
inc
adc
sbb
ss
mov
add
pop
jecxz
cmpsl
jne
imul
insl
cli
int3
test
xor
out
leave
lods
ret
int
push
mov
jl
adc
adc
imul
push
icebp
inc
scas
adc
adc
add
imul
and
inc
lock
arpl
andb
out
fs
jg
out
inc
mov
gs
xchg
sub
pop
inc
or
push
inc
xchg
shlb
pop
add
add
mul
cmp
lret
inc
dec
out
aaa
fisubrs
div
cmp
fsubl
pop
adc
push
pop
push
rcl
jl
inc
aaa
jbe
loop
rclb
push
mov
mov
cltd
sbb
out
lret
pop
sub
cmp
mov
mov
arpl
ret
adc
push
cli
sahf
rolb
jecxz
push
adc
adc
dec
sub
xor
inc
loop
xor
imul
daa
xor
push
rol
inc
aaa
std
pop
in
jns
cmpl
inc
and
fcompl
ss
xchg
fwait
sub
dec
movsb
xchg
pop
dec
into
inc
pop
ret
sbb
pop
pop
inc
int3
adc
push
dec
add
or
sub
push
out
cltd
mov
cmp
mov
popf
cmp
mov
cmp
aam
fists
lds
das
into
pop
push
xor
and
add
mov
pop
jl
mov
pop
loopne
dec
pop
test
pop
dec
push
std
ds
es
out
dec
out
daa
xchg
push
inc
popa
popa
clc
mov
pop
and
add
sti
test
xchg
pop
arpl
lods
jns
gs
ds
stos
push
jbe
loop
dec
dec
divb
sub
hlt
test
push
fidivrs
xchg
inc
cld
sbb
jle
imul
cmp
jae
xor
jbe
cmp
out
cmpsb
lods
jge
jle
adc
jg
insb
add
push
fs
enter
push
scas
ret
mov
mulb
mov
pop
push
mov
jecxz
repz
xchg
fsubrp
inc
mov
xlat
loope
push
sbb
push
cwtl
sub
fcompl
insl
ss
cld
rol
jbe
jns
lods
cmp
dec
mov
xor
push
fwait
push
xor
lahf
mov
push
cmp
bound
dec
and
inc
jmp
mov
dec
sbb
add
icebp
jle
les
push
sbb
xlat
mov
fwait
aaa
sbb
mov
das
ret
imul
and
ljmp
dec
sub
dec
pushf
adc
icebp
xchg
pushf
mov
orl
gs
outsl
lcall
mov
xor
push
jecxz
shr
ss
adc
lds
out
incl
xchg
mov
sbb
and
xor
out
add
ss
or
outsl
add
add
pop
gs
jno
lcall
test
push
push
out
mov
dec
pop
push
ja
or
jg
fsts
cltd
dec
sub
mov
push
and
cld
test
or
dec
cs
pop
inc
fsubl
int
push
mov
jmp
fildll
inc
inc
scas
hlt
mov
je
xor
mov
and
adc
subps
iret
mov
mov
out
in
or
fimull
push
stos
or
inc
sub
stc
fsin
jecxz
sbb
dec
inc
cld
mov
sti
into
call
push
pop
mov
pop
punpckhbw
test
fdiv
xor
xchg
mov
in
ret
add
andl
or
push
jecxz
sub
mov
xchg
sub
out
sbb
adc
pop
jb
cmp
sbb
cmp
call
push
or
pop
aad
in
cmp
dec
pop
loop
hlt
rorb
addr16
popa
movsb
mov
icebp
mov
sti
mov
lock
dec
inc
dec
mov
mov
dec
and
add
rolb
fstl
cmp
push
pop
jnp
sbb
pop
add
out
push
icebp
xchg
cmp
cwtl
cmpsl
add
sub
icebp
divb
aaa
popf
les
inc
loopne
std
dec
lret
out
mov
cld
aas
inc
mov
dec
insl
cmc
dec
xchg
mov
push
dec
psrlq
jbe
sub
adc
fcomi
push
mov
daa
sbb
out
dec
mull
jb
xor
and
loopne
xchg
dec
ret
pusha
inc
xor
imul
xor
sbb
sub
pop
mov
inc
adc
cmp
ror
gs
out
les
arpl
sub
cmp
adc
enter
inc
ret
ljmp
cmpsl
bound
jge
je
and
gs
cvtps2pd
fdivl
repnz
fadds
and
clc
loop
xchg
jnp
movb
add
es
and
and
sub
sub
jo
leave
mov
xchg
jns
rcr
sub
inc
cmp
push
mov
jecxz
add
push
std
call
add
add
test
jae
cmp
cmp
je
sbb
mov
jmp
lods
pop
xchg
cmp
in
testl
inc
arpl
or
mov
cmp
lods
test
out
andl
call
mov
xchg
mov
push
push
adc
ffreep
pop
cmp
stc
fidivs
lahf
lret
adcb
pop
ret
and
je
dec
shl
jbe
and
add
xlat
push
xlat
mov
inc
push
mov
pushf
cmpsl
push
xor
mov
adc
add
sub
ret
mov
mov
inc
cmp
mov
shrl
outsl
lcall
pop
mul
inc
aas
rcrl
jbe
loopne
femms
xchg
lahf
push
out
mov
dec
lahf
adc
sbb
aam
cmc
pushf
and
dec
fsubrs
jl
lods
sbb
inc
js
add
or
loop
mov
inc
mov
out
and
adcl
xorl
ss
and
push
dec
xchg
adc
fsubp
jo
cmp
addr16
inc
jg
pop
mov
je
scas
repz
inc
adc
adc
out
add
pop
outsl
subl
and
and
push
or
cmp
js
dec
cltd
aaa
xor
outsl
add
imul
stos
aad
mov
push
shrl
loop
jecxz
rcl
pop
cs
imul
adc
ret
in
mov
xorl
and
cmpsl
ds
and
add
cmp
rorl
popa
jge
arpl
shl
dec
cmpsl
cmp
or
in
shrb
fistl
loope
mov
repz
xor
sub
and
cmpb
shr
cwtl
jb
ret
cmp
sarb
push
rcrb
adc
je
das
and
mov
int3
stos
pop
jg
leave
fistpll
push
mov
test
and
jno
mov
sbb
mov
hlt
or
ds
pop
push
dec
sub
cmp
in
dec
imul
cli
lcall
mov
and
mov
in
push
in
test
out
or
fisttpll
sbb
push
stos
call
pop
inc
sbb
in
out
jne
jg
bound
xor
mov
pushf
scas
out
or
dec
sbb
dec
sbb
out
icebp
xor
arpl
jecxz
cld
lahf
sbb
mov
fsincos
jmp
orl
xor
movsl
jo,pt
loopne
push
mov
lock
mov
sbb
push
imul
push
mov
inc
inc
jae
pushf
addr16
out
fucompp
or
std
mov
mov
mov
add
jae
add
ds
jne
inc
push
dec
call
sub
mov
es
insl
lret
jge
sbb
or
cmp
das
adc
in
adc
ss
into
push
addr16
cld
mov
jns
push
xchg
stos
addl
cld
mov
stc
mov
into
movsl
pop
push
sub
jmp
pushf
fcompl
pop
lods
in
cs
shrl
dec
push
lret
push
stos
adc
fs
insl
xlat
xchg
mov
mov
adc
test
mov
mov
or
mov
js
sub
pop
dec
ljmp
or
loop
xorb
and
mov
pop
push
fs
push
cli
add
dec
outsb
es
and
inc
lock
mov
fwait
scas
lea
mov
adc
and
mov
enter
movsb
push
stc
mov
shlb
inc
shrl
je
cmp
xor
adc
ja
jnp
sbb
mov
ljmp
sbb
jle
sti
or
mov
cwtl
out
and
lods
mov
ret
stos
outsb
std
fwait
lods
dec
pushf
scas
aas
movsb
adc
push
adc
out
pop
xchg
or
sbb
aam
inc
xor
cmp
jmp
ja
in
jns
push
das
jmp
mov
lret
xchg
dec
push
mov
dec
addr16
pmuludq
and
mov
mov
sbb
jmp
nop
daa
ss
test
cmp
sbb
sbb
push
loope
pop
aam
loopne
cli
lret
jno,pt
inc
push
sahf
insl
or
push
dec
push
push
jl
cmp
dec
test
cmp
mulb
notb
adc
test
push
out
xchg
js
ret
xor
xor
iret
mov
leave
sti
mov
pushf
push
add
leave
negl
aas
lea
test
pushf
cs
push
loopne
std
daa
dec
out
push
inc
dec
xchg
enter
repz
sahf
pop
mov
pop
dec
mov
push
or
inc
xchg
pop
test
add
mov
push
dec
aad
cmp
xchg
addb
xor
in
out
add
cli
or
xor
cld
nop
sub
imul
int3
sub
aaa
sub
imul
push
mov
mov
int3
xchg
cmp
in
leave
ds
add
xlat
push
mov
and
popf
mov
ljmp
xchg
into
xchg
ja
stc
insl
negb
push
or
cltd
xor
or
fstpl
fs
push
xchg
inc
stos
scas
xchg
test
leave
push
arpl
push
ss
andl
cmpsl
xor
pop
adc
decb
in
je
xchg
inc
sbb
adc
out
push
mov
js
leave
bound
imul
imul
leave
pop
jnp
jge
repnz
push
mov
rolb
test
dec
cmp
lock
mov
mov
leave
cwtl
rcr
inc
and
jmp
repz
movsl
xor
xchg
add
pop
pop
inc
insb
mov
xlat
mov
lods
xchg
or
je
fildll
sahf
dec
adc
or
mov
js
cmp
mov
push
adc
cltd
int
mov
punpcklbw
adc
sub
mov
cli
xchg
int
iret
sub
popf
cmp
pop
aas
push
repz
mov
lcall
test
sti
add
mov
adc
mov
std
mov
lret
es
popf
hlt
jb
aad
mov
loopne
fldl
out
sti
and
fimull
and
push
aas
in
pop
in
in
lcall
ss
sub
jge
jmp
push
sub
mov
add
outsb
and
rcrb
jg
xor
xchg
sub
xorb
xor
and
into
dec
addr16
xchg
les
xchg
daa
adc
dec
inc
mov
add
ret
sub
pop
and
and
aam
sbb
xor
in
imul
adc
addb
inc
je
jmp
in
xor
sarb
push
xor
dec
sub
mov
rol
mov
jge
mov
lret
leave
sbb
xchg
push
pop
loopne
mov
cmp
jbe
dec
push
in
mov
mov
hlt
sbb
sbb
jmp
nop
mov
xchg
push
mov
xchg
or
bound
add
xchg
insl
jg
faddl
jnp
cwtl
adc
cltd
pop
jle
mov
imul
dec
inc
cltd
js
mov
push
and
fistps
dec
dec
mov
cs
out
test
aaa
push
inc
dec
bnd
pop
outsl
jne
sbbb
cmp
insb
lea
inc
fbld
add
mov
jae
lret
push
addl
pop
jns
mov
xor
push
iret
pop
xor
daa
cmpsl
in
fcoms
xchg
test
leave
movsb
cmp
pusha
aaa
adc
pcmpgtd
testl
imulb
xchg
loop
pushf
lret
inc
dec
ss
decb
mov
das
pop
mov
inc
cmp
in
lret
aas
jnp
cmpsl
outsl
sub
sub
sti
jno
push
push
pop
or
pop
lret
sbb
stos
lods
pop
add
in
pop
sbbb
shrb
add
mov
fsubs
stos
xchg
add
jl
xchg
daa
xchg
outsb
mov
rcll
mov
xor
cli
jo
mov
jbe
lds
aaa
inc
mov
test
jnp
xchg
or
lods
push
mov
subb
fld
cmpsl
punpckhbw
dec
adc
xchg
cltd
jo
dec
addr16
sub
xchg
pop
xor
out
ret
cmp
mov
jg
mov
push
mov
push
dec
mov
dec
mov
sub
push
lret
or
lods
aas
movsb
scas
scas
jbe
pop
sbb
scas
cmp
xchg
and
les
nop
stc
aad
push
movsl
inc
in
adc
sbb
jl
stos
bound
adc
add
insb
pop
xchg
cmp
and
mov
cmpsb
pusha
cmp
adc
pop
cmp
jae
sahf
in
icebp
or
sbb
jge
rcll
pop
lret
xchg
push
or
and
aad
fistpl
mov
int3
jbe
xchg
enter
pushf
clc
insl
std
xchg
loope
cmp
push
or
add
add
sti
dec
nop
std
cli
mov
sbb
mov
adc
push
push
pop
or
push
cli
pop
fs
aas
clc
or
orb
xchg
jecxz
std
fidivs
lea
in
mov
or
imul
sahf
pop
push
ds
jmp
test
cwtl
xor
xor
out
lods
std
inc
push
hlt
and
js
jp
clc
push
push
and
sbb
rcll
xor
movsb
adc
pusha
pop
dec
jge
clc
nop
hlt
sbb
loope
shll
jno
lret
push
faddl
mov
imul
popa
jmp
xchg
push
pop
loope
out
fstl
push
mulb
xchg
push
movsl
leave
stos
pop
adc
test
inc
push
dec
mov
loopne
and
jg
addr16
inc
jo
adc
stos
dec
pop
mov
cs
jno
aaa
inc
sub
cs
inc
mov
sub
adc
rcr
mov
cmc
pushf
cmp
mov
insb
cmp
xor
dec
std
mov
cs
loopne
sbb
fimuls
faddl
adc
popf
push
call
xchg
pop
jne
sbb
cmp
cmpsb
push
outsl
test
imul
jle
std
cltd
sahf
and
mov
or
mov
imul
insb
les
js
dec
inc
mov
add
add
adc
push
dec
xchg
inc
ret
xlat
ds
jo
in
mov
sub
je
aad
popf
sub
push
adc
test
lcall
into
sub
adc
mov
add
adc
pop
sub
or
data16
icebp
jge
loopne
divl
fadds
mov
add
sbb
jmp
call
jns
pop
push
out
pop
dec
aad
in
out
jbe
cld
xchg
push
fucomip
add
bound
push
xlat
lret
add
stos
xchg
pop
jp
dec
mov
cmp
jmp
cs
fdiv
push
loop
xchg
mov
out
mov
and
sahf
rol
jnp
sub
inc
insb
shll
push
lcall
xor
xchg
pop
lret
faddl
mov
imul
jecxz
pop
imul
movsb
fiadds
cmp
and
repz
jge
sub
movsb
fwait
sub
sub
jb
sub
lcall
jno
jbe
cwtl
mov
xchg
fisubrl
nop
pop
or
mov
inc
dec
rolb
inc
add
mov
xor
cmp
and
fwait
stos
data16
pop
cmc
and
add
out
out
scas
lds
dec
xchg
inc
enter
mov
minps
stc
jo
stc
mov
bound
dec
mov
push
imull
iret
mov
mov
or
lret
shll
mov
lds
xor
imul
mov
xchg
mov
mov
inc
push
cmpb
xchg
dec
push
faddl
arpl
xor
imul
cmpsl
pop
insl
sahf
aam
and
sahf
cmp
or
adc
in
pusha
xchg
stos
xor
imul
or
or
dec
stos
lods
imul
add
jb
jecxz
aas
ja
xor
jbe
fildl
lret
xchg
mov
pop
dec
fcomps
fstpt
stos
pop
repz
enter
in
loopne
fisubl
mov
mov
dec
aas
fiadds
cmpsl
lds
and
out
test
inc
inc
int3
cmp
shrb
addr16
pop
xchg
mov
push
sti
xchg
xchg
mov
insl
ficomps
pop
scas
mov
int3
sub
les
call
popa
nop
stos
dec
or
sbb
xor
xor
jmp
cltd
dec
test
mov
fdivl
pop
js
sbb
outsb
dec
xchg
xchg
mov
repz
cmp
jae
bswap
push
push
lds
mov
lea
inc
hlt
lods
sti
xor
sbb
cld
sarl
add
inc
xchg
mov
mov
cmp
int
in
sbb
sub
mov
leave
or
into
dec
jno
adc
pop
in
or
test
mov
lahf
pop
dec
and
pop
xlat
hlt
jo
clc
ficompl
lret
addb
push
aad
aaa
and
and
aam
jp
in
shr
xchg
fs
sub
addr16
popa
in
lahf
pop
sbb
mov
inc
insb
lret
mov
xlat
sub
push
or
push
fstl
outsl
add
aam
and
mov
push
adc
inc
mov
aas
mov
loop
outsb
xchg
lcall
mov
jae
xchg
push
jns
xchg
fildll
cmp
jae
std
inc
add
xor
into
and
sbb
mov
mov
inc
test
cld
mov
js
cmc
cmp
inc
jmp
cmp
sbb
int
subb
lahf
dec
lods
pusha
popf
insb
popa
mov
sub
outsb
pop
fucomi
mov
jl
jo
ss
popa
sahf
dec
lods
lds
push
pusha
stos
xor
mov
mov
lock
inc
ja
je
nop
ja
xchg
sub
addr16
adc
pop
sub
xchg
mov
xchg
jbe
fucom
push
cmc
pusha
mov
and
hlt
ss
cmp
jl
gs
fimull
out
or
and
jnp
bound
cmc
jnp
out
aad
aaa
js
icebp
push
test
adc
lret
subl
fimuls
push
xchg
sti
arpl
repnz
aad
push
pusha
dec
push
push
mov
stos
add
rorl
mov
and
sarl
lds
lret
jl
shll
mov
out
aad
pop
jb
and
mov
jmp
ss
mov
ret
es
sbb
loop
xlat
dec
jp
jg
mov
push
mov
data16
out
inc
xchg
push
sbb
mov
add
shlb
cmp
cwtl
add
pop
js
inc
mov
mov
dec
push
mov
inc
out
sti
pusha
aad
cld
pop
xchg
pop
cwtl
mov
xor
cmp
not
push
out
push
cmpsl
out
jb
fs
loop
sbb
loopne
out
scas
xor
outsb
into
push
jae
pop
mov
xchg
in
push
enter
xor
mov
fisubrl
stc
pop
ljmp
xor
mov
rclb
mov
lds
clc
dec
outsb
jo
mov
push
cmp
hlt
xchg
fmuls
pop
test
xor
add
leave
mov
push
cmc
popa
loope
cmpsl
insl
push
xchg
pop
xor
aad
sub
add
fdivl
jge
ds
sbb
in
shrb
pop
cmp
and
adc
adc
mov
mov
sbb
and
cmp
jl
add
sbb
es
shll
adc
inc
cltd
push
xor
insb
shrb
xchg
jb
adc
pop
pop
jle
pop
mov
push
xor
fnstenv
jae
add
pop
aas
ljmp
addr16
mov
jecxz
stos
push
xor
lret
cmp
jecxz
adc
stos
cmpsl
xchg
lds
push
cmp
add
pop
leave
jle
or
fisubrs
push
push
jle
insl
dec
cmpsl
fidivrl
sbb
mov
icebp
xchg
fs
ja
dec
adc
popa
into
push
pop
mov
xor
daa
xchg
xchg
mov
testb
leave
add
and
dec
lea
jmp
sbb
ficompl
adc
mov
mov
lds
stos
leave
pop
xor
and
frstor
sub
scas
ss
jle
insb
lods
test
mov
cmp
inc
and
push
rcr
mov
rcll
push
stc
enter
xchg
mov
or
test
dec
inc
pushf
ret
xchg
sbb
rorb
add
gs
pusha
les
movzbl
mov
mov
movsb
jb
lods
sub
dec
scas
sbb
outsl
jecxz
dec
rorl
imul
subl
jno
ret
fildl
push
dec
test
xchg
repz
or
xor
and
dec
ds
imul
out
test
jl
jne
jmp
cmpsl
ss
jno
pop
cmp
dec
cmpb
test
or
pop
jae
lods
and
cmp
cmp
mov
sbb
push
xchg
cwtl
dec
and
rcll
ljmp
or
jb
or
dec
mov
bound
nop
lea
je
add
xlat
mov
and
xor
call
cmc
in
outsl
fcoms
mov
data16
sub
lcall
cli
xchg
call
xchg
hlt
cmp
leave
push
data16
mov
gs
adc
test
inc
pop
or
mov
jno
lock
push
pop
cltd
out
sbb
jecxz
inc
les
and
cld
xlat
add
inc
out
insb
jle
mov
sbb
je
cmpsb
pusha
pop
adc
sub
or
repnz
or
mov
mov
es
data16
test
jmp
inc
jb
add
lds
jge
and
mov
push
dec
jno
xor
push
mov
jg
fimuls
inc
mov
aad
adc
push
pop
test
cmp
adc
adc
push
fwait
mov
xchg
pop
xchg
inc
jmp
out
inc
adc
pop
mov
pop
jae
sti
andb
pop
notb
cmp
pushf
push
inc
movsl
sbb
out
mov
bound
sahf
sbb
and
fs
stos
insl
inc
add
nop
mov
out
xchg
xchg
push
loopne
aam
lret
in
mov
test
sub
fwait
pop
mov
aad
hlt
add
add
mov
icebp
jae
mov
dec
js
push
adc
jbe
jns
xor
lds
pop
in
out
push
lret
lret
lahf
mov
cmp
enter
cs
aam
mov
dec
mov
outsb
mov
out
sub
aaa
in
cmp
adc
daa
and
aam
sbb
or
enter
cltd
out
stos
mov
or
jnp
pusha
jmp
xchg
lods
inc
pushf
push
call
int3
push
mov
and
pop
pop
scas
rorb
pop
fsubrs
mov
stos
push
add
push
xor
push
mov
and
mov
cwtl
pop
gs
enter
outsl
ja
dec
notl
rcll
sbb
sarl
xchg
push
sbb
pop
jae
stos
int3
movsb
jle
mov
mov
aas
int
loop
sahf
adc
mov
and
inc
lret
cli
scas
sub
ret
loopne
into
lds
mov
ss
popf
push
lea
loopne
das
test
inc
xchg
loope
shll
faddp
mov
out
pop
roll
adc
sub
in
mov
lcall
push
sub
aaa
push
stos
pusha
pop
lock
jl
push
das
js
mov
jbe
xchg
mov
insb
pop
sbb
mov
push
xchg
cltd
ficoml
fadds
xchg
fsubr
push
jp
test
xchg
xor
imul
std
and
int
fnsave
insb
dec
dec
mov
jecxz
iret
mov
fldcw
sbb
int3
ja
cld
cs
and
out
mov
xor
mov
repz
in
mov
out
lret
sbbb
sub
int
in
sahf
xchg
aaa
xchg
and
xchg
jmp
dec
dec
push
roll
cmp
jg
jns
aad
mov
xor
popf
sbb
cmpsl
xor
push
lahf
outsl
aas
adc
movsl
loopne
icebp
call
xor
mov
and
mov
popa
negl
xchg
stos
push
pop
rcrl
icebp
les
sub
idivb
std
sub
push
shll
fstpl
fnstenv
push
xor
xor
stc
in
dec
std
sbb
lret
mov
xchg
or
mov
jp
adc
movb
cmp
pop
pop
inc
xchg
cmc
loop
imulb
jmp
cmp
mov
outsl
xchg
mov
cmpl
call
mov
push
sbb
sub
leave
std
scas
cltd
outsl
or
rolb
cmpl
mov
lds
negl
into
and
xchg
hlt
push
outsl
dec
xor
and
push
in
jge
xor
fldl
in
pop
pop
xchg
pop
pop
mull
ja
lea
dec
jae
lods
xchg
adc
jl
shrl
or
jmp
pop
into
xor
shr
xor
jmp
or
bound
pushf
daa
jmp
adc
or
dec
repz
pop
out
sbb
cltd
fdivrl
or
push
ret
jae
pushf
mov
jp
jmp
sub
out
sti
lcall
sub
frstpm(287
fs
pop
adc
mov
xor
inc
pop
mov
mov
mov
pop
and
repz
lock
out
lea
les
dec
mov
out
inc
movsl
dec
lds
push
fs
inc
fwait
fs
lret
xchg
fstps
pushf
dec
sbb
out
stos
pop
iret
stos
push
test
mov
push
jl
push
cld
mov
xor
dec
mov
xchg
out
pop
pop
add
jg
xchg
dec
sbb
or
cmp
xchg
aad
sub
xchg
pop
iret
sti
cmp
scas
sbb
sub
cwtl
mov
or
cwtl
cmp
clc
jb
int3
cltd
test
adc
xchg
xchg
sti
pop
mov
nop
ret
rclb
idivb
push
lahf
orl
cmp
testb
cmp
dec
test
push
loopne
sti
insl
adc
out
xor
je
rorl
in
fs
pop
sub
dec
arpl
sub
stc
or
inc
or
ret
dec
and
icebp
mov
inc
pushf
mov
jb
mov
sti
adc
mov
and
or
or
ss
rcrb
cltd
push
fists
bound
cmp
jnp
mov
pop
mov
mov
cmp
pop
out
push
inc
test
out
icebp
lds
pop
push
dec
out
sbb
cmp
and
lret
push
and
or
xchg
cmp
adc
iret
out
sub
inc
in
scas
jne
in
push
sbb
in
inc
adc
scas
enter
lcall
ror
jl
sti
cltd
add
sbb
cmpsb
in
sub
aad
pusha
mov
lock
scas
xor
jecxz
jbe
js
add
ror
rol
test
cs
nop
push
lcall
and
in
out
popa
imul
ljmp
icebp
adc
add
mov
test
or
jbe
outsl
mov
enter
in
pop
jge
int3
dec
scas
pop
and
add
test
or
mov
lods
sbb
cmp
jno
shlb
sub
adcb
add
movsl
cmp
mov
cmp
adc
mov
addr16
push
insb
out
sbb
out
je
mov
lret
fdivs
jg
push
pusha
xchg
nop
or
pop
ljmp
sbb
adc
pop
fiadds
es
hlt
add
jg
les
push
jb
pop
sub
enter
mov
pusha
cmpsl
cli
aam
repz
mov
jns
ficompl
push
inc
inc
ljmp
fs
in
push
fwait
mov
xchg
push
jbe
decl
push
pushf
add
dec
dec
add
lock
je
pop
pop
xor
arpl
sbb
mov
aam
stos
adc
not
add
push
sbbb
xor
test
mov
xchg
loope
mov
mov
jo
stos
mov
xchg
add
lds
mov
and
orl
adc
lret
arpl
mov
push
inc
push
jge
cwtl
pop
pop
adc
add
nop
jg
loopne
test
pop
shr
xor
lea
jo
repnz
sub
dec
push
push
xchg
pop
push
icebp
ljmp
dec
adc
aam
outsl
div
xchg
xchg
aas
cmp
push
xor
aas
sahf
mov
jb
inc
out
push
testl
xchg
mov
mov
das
in
lahf
pop
bound
out
inc
mov
and
data16
aad
popa
xor
and
inc
mov
sub
mov
ljmp
push
cmc
out
je
xchg
sub
cmp
jmp
mov
mov
ret
arpl
mov
les
arpl
jmp
dec
popa
inc
xchg
mov
mov
stc
sbb
xchg
in
enter
ret
test
insb
dec
inc
test
jmp
rcrl
fdivl
mov
inc
incb
ja
dec
testb
xchg
or
push
rcll
xor
mov
cltd
gs
xlat
mov
test
aaa
and
mulb
and
fwait
ss
std
jmp
call
nop
mov
inc
mov
mov
pop
addl
arpl
mov
scas
jae
ss
mov
test
mov
cli
cmpsl
sub
aaa
loopne
push
daa
cmp
lds
inc
lock
bound
cmp
fcomps
test
int3
rcrl
dec
or
pop
mov
icebp
or
addl
pop
sub
stos
imul
adc
mov
test
shl
ljmp
mov
gs
in
hlt
cmp
pop
outsb
pop
test
and
jle,pn
aad
shll
mov
pop
lods
mov
and
dec
or
cmpsl
add
insl
xor
sub
push
ret
leave
dec
jbe
pop
stos
fst
fidivl
cmp
loopne
inc
shl
xlat
mov
lcall
andl
push
hlt
rcr
inc
mov
cwtl
mov
int
jae
lods
loope
sub
adc
ret
fisttps
xchg
popa
inc
mov
push
mov
outsl
sub
sti
cmpsl
in
inc
out
lahf
adc
das
push
or
int
xchg
ja
rorb
xchg
cmpsb
push
xor
cmp
cli
adc
ljmp
pop
xchg
push
pusha
aad
out
aas
push
stos
lcall
xorb
shll
xor
cmp
fisttps
xor
enter
movsl
pop
push
cmp
daa
xor
mov
mov
sarl
pop
lock
fistpll
adc
xchg
lcall
in
cwtl
out
lods
stos
sbb
lods
push
imul
pop
jecxz
sbb
popf
test
fmull
sahf
and
ret
pop
xchg
hlt
lahf
inc
push
mov
shlb
jmp
jl
adc
rcl
xor
cld
adc
cmpl
xchg
mov
push
cltd
sbb
pop
and
pop
adc
xchg
std
xlat
inc
mov
push
test
imul
cmovge
outsb
cmpsl
dec
jns
cld
sti
push
lods
adc
sbb
sbb
push
inc
mov
adc
sub
mov
sbb
out
pop
dec
sub
dec
imul
sub
mov
add
cs
adc
inc
or
inc
push
jg
add
push
add
mov
rcll
sub
xor
mov
mov
lret
je
adc
pop
xchg
sarl
scas
lret
mov
pop
sub
sbb
cmp
test
fcmovnu
mov
push
ja
xchg
adc
xchg
int
es
sub
aaa
insl
movsb
das
leave
cmp
lret
mov
or
sub
rcrb
dec
jno
sub
jns
sub
mov
ja
fists
mov
push
mov
mov
jne
mov
imul
movsb
cmp
cli
aaa
add
mov
xor
imul
movsb
mov
dec
or
cmp
or
push
bound
int
sub
adc
sub
push
mulb
jb
push
stos
clc
cmpsb
sbb
cmc
or
cs
out
cmp
jecxz
fildl
imul
mov
or
insl
xor
push
inc
cmpsl
cmpsb
jne
test
es
cld
das
nop
mov
xchg
sub
pop
mov
rcl
stc
cmp
sub
cmpsb
fiadds
pop
xor
add
xor
scas
lock
cwtl
mov
mov
adc
pop
dec
in
mov
subl
dec
mov
pop
xchg
mov
cltd
sbb
js
mov
or
and
mov
xor
mov
dec
movsb
outsb
sub
stc
in
mov
lods
jne
add
add
sti
fs
jp
adc
sub
sti
cmp
mov
and
push
iret
clc
adc
stos
mov
movb
xchg
add
xchg
sub
ret
cmp
fadds
ja
cmp
imul
mov
pop
stc
in
addr16
cmp
jg
mov
xor
sti
pop
test
xor
int3
fwait
mov
dec
dec
lds
fmuls
sub
or
sarb
ret
leave
adc
adc
leave
ffree
fsubrs
rorb
push
mov
dec
std
movsl
repz
mov
int3
aam
pop
repz
int3
iret
or
inc
cmp
outsl
cmp
dec
sub
js
jns
pop
add
lcall
jno
out
scas
or
rorb
push
test
pop
adc
popa
xor
pop
xchg
and
fs
cltd
xchg
sub
gs
aas
pop
out
inc
cmc
adc
jmp
mov
mov
ljmp
and
stos
arpl
xor
in
test
repz
popa
arpl
out
mov
jle
xchg
pop
and
inc
dec
out
xchg
test
fisubl
xchg
ss
lahf
adc
fdecstp
jnp
xorb
rorb
jnp
and
xchg
cli
dec
add
xchg
fbstp
outsb
jp
js
clc
fcoml
test
sub
lods
das
and
ficoml
xchg
test
mov
cld
andb
xor
sub
mov
mov
mov
popa
mov
mov
into
xor
repz
orl
jmp
shrl
cli
aas
pop
sub
adc
inc
aam
scas
add
es
shlb
mov
mov
shrl
pop
push
pop
inc
sbb
dec
ret
mov
shll
sbb
and
insl
pop
push
movsb
inc
add
add
push
int
mov
mulb
fisttps
out
out
pop
jmp
lret
xchg
jbe
jo
adc
push
rcll
push
pop
testb
add
push
test
nop
jecxz
sub
iret
enter
pop
dec
hlt
or
mov
loope
dec
movsl
cli
call
mov
xchg
xlat
cmp
cmc
ret
outsl
lds
rep
out
sbb
xor
je
pushf
sbb
iret
cld
clc
push
lods
mov
mov
cmp
addr16
nop
stos
cmp
push
cltd
jmp
icebp
call
fsubr
mov
lea
sar
cmp
pop
mov
outsl
adc
test
aaa
shl
push
dec
or
js
sbb
pop
dec
push
or
and
das
add
icebp
sub
mov
ffreep
dec
stc
cmp
adc
repz
jmp
mov
lds
fwait
cld
push
lcall
mov
dec
mov
dec
sbb
add
sti
fucomp
int3
ss
movsl
cmpsb
pop
dec
adcb
ret
and
jbe
mov
mov
stos
lret
or
mov
unpckhpd
cmpsl
mov
stos
pop
push
push
cmp
dec
es
loope
cmp
mov
int
aaa
xchg
pop
gs
mov
pop
mov
pop
test
cmp
jnp
mov
push
fmull
inc
and
fmul
or
dec
stc
fstpt
add
cmpsl
cmc
addr16
insl
cli
sub
jae
jecxz
sub
jmp
sti
int3
cmp
rcrl
dec
roll
jg
mov
leave
inc
push
stc
or
sub
jo
je
imul
mov
pop
repz
push
inc
xchg
cli
push
lret
stc
rol
xchg
pop
adc
adc
pop
ds
scas
test
stc
je
or
lcall
cmp
ficoms
jge
jno
sub
add
pop
jmp
cmp
arpl
mov
lock
out
pop
adc
call
ja
mov
inc
sbb
lds
lds
push
shl
loop
mov
mov
add
jbe
dec
xchg
sbb
mov
cld
pop
mov
dec
ljmp
cmpsb
ja
out
xorl
out
inc
jl
out
pop
mov
xchg
cmp
mov
clc
jge
xor
and
fdivrs
fnstcw
out
or
push
cmp
roll
dec
jno
pop
sub
negl
add
jecxz
push
lea
xchg
mov
and
adc
and
mov
cmp
stos
push
sbb
adc
add
stc
ret
aas
pop
insb
es
and
faddl
mov
adc
pop
xor
loope
dec
push
jae
mov
xchg
popa
xlat
cmp
mov
mov
sahf
out
rclb
dec
xchg
push
and
sub
push
pop
lds
test
jg
push
jge
cmp
or
movb
push
xchg
stc
add
sbb
pusha
mov
cs
lods
jg
mov
mov
int3
dec
out
cmpl
dec
and
out
test
sahf
or
and
mov
idivl
sbb
loop
sub
lea
sbb
repnz
repz
adc
shl
jne
dec
add
daa
lret
jnp
lea
mov
cmc
cmp
ret
push
xor
push
xor
test
xchg
jle
add
nop
mov
mov
pop
out
std
jns
pop
int3
fcomp
push
pop
sbb
inc
daa
xor
lods
ret
test
outsl
jmp
sbb
enter
cli
adc
pop
adc
add
and
cs
std
inc
mov
test
sub
pop
out
fdivr
arpl
mov
jae
or
outsl
clc
cmpsl
lea
and
jne
cs
fistl
popf
jns
aas
fisubrs
std
fidivs
scas
mov
loop
xchg
add
cmc
add
test
sahf
shr
xchg
push
inc
add
push
shl
mov
push
xchg
mov
lods
cmpsb
aas
adc
lods
xor
enter
sbb
ja
mov
xchg
scas
push
push
adc
dec
jecxz
sub
cmpsl
pushf
xchg
jmp
lods
std
lret
xor
mov
outsb
sub
cmp
mov
push
repnz
shrl
std
xchg
ficompl
mov
adc
arpl
sti
add
in
lds
ret
jbe
nop
adc
jno
sub
mov
inc
add
inc
mov
imul
and
mov
cmpsb
out
shlb
xor
inc
and
negb
sbb
adc
cwtl
inc
jecxz
jmp
gs
lock
outsb
push
out
mov
in
add
inc
mov
sub
jbe
jecxz
and
fbstp
pop
and
ljmp
cli
test
hlt
xor
mov
out
mov
loope
loopne
outsl
shrl
data16
mov
mov
adc
arpl
stos
push
movsb
enter
xchg
bound
shlb
push
xchg
mov
fnstsw
push
mov
stos
xchg
mov
sarb
mov
dec
es
push
stos
mov
adcl
loop
mov
jae
mov
clc
pop
mov
push
mov
fwait
push
add
mov
ljmp
or
scas
in
out
lret
adc
sbb
xchg
dec
ficoms
fisubs
ss
sbb
add
dec
mov
jmp
push
lock
pop
shlb
jno
test
lcall
adc
or
outsb
adc
mov
adc
cwtl
ud2
pop
inc
outsl
ss
sub
mov
fstpl
icebp
mov
rclb
int
pushf
add
test
push
mov
data16
rcll
dec
mov
jno
ljmp
mov
xchg
popf
xor
cmc
adc
and
arpl
mov
fistpl
nop
pop
pop
scas
fwait
outsb
and
orb
inc
xchg
icebp
std
sub
test
cmp
push
add
mov
pop
fldenv
pop
adc
xchg
es
mov
jbe
inc
adc
mov
add
out
mov
nop
mov
jbe
pop
bound
push
fisubl
pushf
js
mov
sbb
clc
test
pop
out
loopne
roll
fucomip
inc
das
aam
aam
jge
mov
notl
jb
and
leave
push
xor
add
mov
mov
dec
jg
push
lret
fisttpll
sarb
mov
add
jnp
jb
add
xor
dec
cmp
mov
lock
xor
jae
shl
sub
scas
lods
cmpsb
jmp
je
fwait
or
and
pop
movsl
adc
stc
ss
sahf
pop
cmpsb
sub
sbb
xor
mov
fldl
je
test
int
mov
fstpt
add
inc
jmp
pop
ss
pusha
test
mov
sub
sti
lock
and
lods
clc
push
and
jmp
mov
inc
pop
out
fstps
ret
sub
push
repz
sub
popa
cli
movsb
add
xor
mov
mov
or
jae
jae
je
adc
cmp
mov
dec
add
dec
jg
jbe
xchg
inc
lcall
or
ret
adc
adc
arpl
lods
mull
xor
lds
cmp
lds
add
insl
mov
mov
jecxz
sti
sub
sub
leave
mov
xchg
cs
sbb
mov
rorb
lock
nop
sbb
ljmp
sbb
dec
mov
cmpsl
popl
dec
push
dec
test
sub
int3
int3
push
hlt
or
nop
aad
lahf
clc
sub
pop
je
inc
mov
dec
stc
sub
mov
push
aam
push
call
fidivs
lds
imul
dec
mov
mov
jb
ljmp
pop
xor
jnp
push
jns
lret
js
mov
inc
jo
negl
repz
mov
subb
and
cmpb
std
es
cmpsb
cli
mov
mov
mov
jmp
and
jo
ljmp
hlt
adc
dec
iret
enter
fs
add
stos
jle
pop
std
adcb
lods
cmpsl
int3
xchg
or
rclb
mov
and
mov
push
jns
cmp
inc
pop
mov
pop
sahf
test
ffreep
dec
add
aad
jg
pop
cld
jl
js
rcll
xchg
sbb
rolb
lds
sbb
bound
mov
dec
fildl
sti
shl
aas
fstl
lret
scas
pusha
inc
add
sahf
xchg
dec
mov
mov
cmc
repnz
fucomp
add
add
xchg
push
mov
dec
imul
arpl
imul
loope
and
sbb
lahf
popa
fistpl
cmpsl
mov
add
loopne
dec
sub
dec
jb
je
jge
test
pop
mov
push
sub
popl
fs
mov
push
push
push
clc
sbb
pop
es
dec
and
fdecstp
fimuls
test
add
icebp
push
mov
adc
clc
iret
cmp
or
shll
call
inc
xchg
xchg
push
sub
or
adcl
cmp
adc
mov
cmp
xchg
sahf
je
xchg
arpl
adc
mov
or
mov
jo
jmp
or
mov
sbb
xor
arpl
xchg
xorps
push
popf
enter
and
push
mov
nop
cld
cltd
lea
sti
mov
xchg
lea
aas
call
daa
fdivr
scas
cltd
pop
js
push
dec
mov
popa
test
pop
rclb
ja
mov
nop
in
jp
hlt
aas
and
jns
xchg
jnp
scas
mov
jo
and
out
inc
adc
movsb
ret
dec
daa
repnz
call
in
and
ljmp
cli
xor
stos
mov
xlat
or
add
icebp
jns
mov
cltd
or
jne
and
jl
sub
fxch
fwait
xchg
ds
aad
sbb
push
xchg
and
imul
lahf
sub
and
add
or
and
shll
cmpsb
mov
in
pop
fidivrl
sbb
sub
loopne
or
lock
xchg
fadds
jp
loopne
repz
out
or
mov
loopne
test
adc
orb
dec
scas
mov
loopne
dec
in
sbb
cmp
pop
xchg
jae
imul
jmp
sbb
aaa
inc
aaa
jge
outsb
aas
mov
scas
adc
ffreep
fs
dec
rclb
xchg
out
roll
mov
sti
pop
lret
ficomps
pop
stc
cmp
xor
insb
outsb
lods
aaa
pop
push
sbb
xchg
lret
test
loop
outsb
mov
testl
shrb
test
dec
shlb
sub
into
inc
pushf
pop
popf
stos
cmp
pop
je
inc
cld
movsb
jmp
fcmovnbe
push
into
je
sub
je
loope
stos
mov
fwait
aaa
popa
shrl
xor
cmp
pop
sub
sti
leave
push
inc
pushf
cmpsl
and
lret
scas
dec
nop
outsb
ret
dec
mov
scas
subb
out
inc
stos
fldl2e
xor
pop
int
cmp
adc
mov
pop
imul
lcall
movntq
cmp
mov
cwtl
xlat
jnp
leave
xchg
jp
sub
dec
or
pop
pop
mov
ja
xchg
es
popaw
pop
cmp
sub
mov
xor
push
dec
hlt
das
sbb
add
pop
outsb
into
and
or
push
xchg
mov
inc
test
jbe
insl
je
jns
jns
add
test
push
lahf
in
lods
mov
jg
sti
jg
push
ss
ljmp
icebp
mul
adc
dec
xchg
lods
ljmp
fistps
mov
push
andb
xchg
les
inc
or
and
sub
ja
test
mov
mov
in
leave
push
xchg
inc
or
xlat
mov
push
push
mov
cld
mov
in
shrb
aaa
movsl
inc
add
mov
and
shll
lahf
out
or
cmp
or
es
out
sbb
push
loopne
pushf
push
fisubrl
add
xor
pop
pop
cmpsb
mov
or
mov
loopne
lods
rorb
cli
cs
push
mov
stos
fadd
jbe
xchg
xchg
jl
dec
fisubrl
out
daa
jbe
movsb
stos
sahf
push
mov
mov
push
roll
fdivl
dec
pop
fwait
add
sbb
sub
out
test
xchg
mov
inc
push
push
pusha
ds
adc
adc
lods
ret
scas
sub
daa
cmpsb
pop
add
rclb
push
mov
icebp
cli
push
mov
enter
lret
lcall
sbb
sub
andb
xchg
int
sbb
lds
and
mov
idivb
lock
mov
es
sub
cmp
sub
mov
jnp
mov
dec
mov
les
inc
iret
jnp
sahf
daa
arpl
inc
pop
pop
or
push
roll
scas
pop
testl
adc
mov
aas
int3
mov
sub
ret
lret
imul
add
mov
mov
xor
int
and
iret
jg
addr16
jne
movsb
movsb
bound
lds
xchg
and
clc
ret
jmp
lret
and
mov
mov
test
lcall
aaa
pop
lcall
and
std
cmp
mov
insl
xchg
fstps
loope
push
fadd
insl
adc
add
bnd
outsb
push
xchg
loope
mov
lods
rcrb
sub
xchg
fwait
repnz
clc
movsl
rcrl
inc
cmp
cs
sahf
test
pop
lahf
cmp
lods
dec
sahf
pop
jmp
and
cmp
das
lds
cmp
call
fsts
stos
pop
xchg
or
inc
inc
in
pop
jae
mov
pop
mov
push
mov
sahf
rclb
ror
fsubr
pop
sub
sahf
scas
fs
out
dec
fdivl
xchg
adc
int3
lahf
leave
fidivrs
scas
es
call
bnd
cmp
out
mov
inc
aas
out
push
xchg
add
sub
movsb
push
xchg
stos
sbbb
inc
or
xchg
mov
xor
sub
leave
je
sahf
jns
shlb
xor
test
test
or
imul
int
xchg
div
pop
lret
in
sbb
lahf
int3
adc
adc
adc
ja
roll
std
sub
bound
dec
mov
fsubrs
or
xchg
inc
loopne
adc
cmp
lret
int
sbbl
divl
pop
push
xor
and
cmp
fsts
cmp
lods
out
sub
jmp
or
in
jb
sar
add
add
pop
lret
sbb
cltd
inc
dec
inc
insb
imull
mov
dec
gs
loope
sbb
push
addb
shr
das
loopne
dec
xchg
mov
and
push
cwtl
pop
pop
adc
std
pushf
loop
and
jecxz
inc
cmp
sub
gs
inc
outsl
xchg
inc
sbb
arpl
pop
cli
add
pop
adc
inc
cmp
lea
bound
andl
add
dec
and
pop
subl
movsb
jno
aam
ja
mov
and
xlat
aas
aam
loop
inc
xorb
mov
dec
lcall
jo
cmc
sahf
sbb
push
or
sub
cmpsb
xor
mov
fnstsw
push
jne
push
push
shrl
or
daa
mov
pushf
xor
in
loope
and
push
add
and
push
lods
lret
ficompl
xor
pop
in
scas
cld
arpl
cmp
mov
rclb
mov
mov
mov
jae
dec
call
out
test
pop
and
xlat
aam
and
stos
in
mov
into
lock
sti
loopne
aam
xchg
out
lea
mov
cmp
xor
bound
push
mov
lods
mov
fisttpl
xchg
js
into
inc
mov
icebp
les
sarb
je
sbb
sub
aaa
cmpsl
and
pushf
faddl
or
mov
into
and
pop
loop
lea
stc
and
sub
scas
pop
push
xchg
xor
frstor
insb
aad
or
int
jnp
jb
cwtl
and
mov
or
xchg
pop
pop
cltd
push
scas
loop
sbb
push
cmp
loope
pop
out
cwtl
test
scas
and
jle
add
popf
and
nop
pusha
fwait
ljmp
ljmp
ja
ljmp
dec
pop
je
movsl
add
outsl
jl
fwait
push
leave
dec
mov
fstp
sub
lods
xchg
iret
xchg
sub
mov
ret
xchg
cmp
into
aad
cmpsl
fstpl
pop
outsl
imul
pop
sub
insb
cmp
add
loop
xlat
push
adc
or
cmc
push
js
sbb
push
add
or
lret
pusha
ret
sub
inc
mov
dec
stos
push
jae
cmpsb
icebp
in
xchg
push
out
and
pop
mov
fbld
push
mov
cmove
stos
loope
mov
imul
pushf
sub
add
stos
add
mov
out
add
xor
sub
pop
ds
ss
lfs
mov
iret
xchg
pmulhw
es
f2xm1
pop
stos
cmpsb
fmull
cmp
stc
int3
sarb
mov
ret
in
mov
int
pop
pushf
push
aaa
adc
sub
dec
nop
xor
loope
lods
sub
xchg
aas
lds
out
rolb
iret
lcall
inc
pop
xor
icebp
push
add
lds
mov
jle
and
add
mov
sbb
pushf
fcomps
mov
rcll
imul
push
push
cmpsl
push
repnz
loopne
mov
aas
stos
mov
popf
sub
orb
jae
pop
adc
fs
out
or
push
jecxz
adc
adc
inc
add
cmp
jne
or
jg
les
arpl
sub
pop
adc
jns
jp
and
dec
mov
int3
int3
jge
jb
mov
mov
std
mov
stos
cld
test
mov
or
rcrl
dec
push
aas
testl
pop
add
fdivrl
and
inc
xlat
ss
pop
icebp
movsb
push
mov
lds
or
mov
stos
adc
xor
jae
ret
int
push
shlb
movsl
lahf
sbb
aas
in
xchg
xor
lods
test
sub
rolb
in
inc
or
dec
pop
movsl
xchg
je
decl
mov
out
bound
outsb
push
xchg
cmp
inc
int
adc
cmp
push
std
mov
cmp
pop
in
popa
pop
je
clc
xor
sub
movsl
and
jmp
mov
stc
xchg
and
ja
imull
jecxz
inc
xchg
lret
mov
xchg
xchg
mov
sbb
xor
inc
mov
ret
mov
jge
leave
mov
rcrb
shrb
scas
mov
decb
aad
stos
xor
pop
test
fcoml
popf
xor
int
xlat
or
push
shl
iret
pop
jp
shlb
sbb
inc
jge
test
cmp
cmc
or
mov
xor
cmp
fdivrl
add
push
mov
cmc
into
icebp
pop
hlt
pop
adc
push
test
outsl
pop
dec
ds
push
push
mov
cwtl
test
test
dec
aaa
sbb
shlb
cmp
popa
pushf
xor
dec
int
mov
or
sahf
push
stos
xchg
hlt
loop
add
pop
in
mov
xchg
dec
test
jo
sbb
jne
movsl
or
mov
cmpsb
ja
pop
je
fildll
xor
cmpsb
aam
idivl
jo
lcall
pop
clc
or
cltd
jecxz
xchg
dec
dec
push
add
push
jae
adc
xchg
mov
test
mov
lahf
sub
rcl
fsubrs
sbb
call
and
add
jmp
sbbl
adc
adc
mov
out
daa
test
add
mov
add
sbb
push
mov
les
aam
rcll
jecxz
pusha
jne
xlat
pop
dec
jecxz
xor
incb
xor
pop
push
mov
mov
cwtl
adc
nop
call
push
add
adc
dec
iret
icebp
xchg
dec
mov
into
loop
mov
adc
pop
lods
lret
movsl
fcoml
mov
cmp
and
test
cli
or
push
lods
loop
inc
out
pop
xchg
dec
cmp
xor
outsl
popf
shr
sbb
sub
xlat
push
xor
add
icebp
mov
cmp
fwait
sbb
iret
daa
lcall
mov
iret
sti
jmp
push
cmp
imul
push
iret
pop
cmp
lds
test
out
inc
sub
push
pop
fwait
clc
and
lods
sbb
push
sbbl
icebp
sbb
cmpsb
out
daa
xchg
lds
iret
incl
imul
xor
cmp
mov
popa
dec
mul
ljmp
adc
clc
mov
fnstenv
xchg
mov
fadds
cmp
imul
ret
cltd
mov
test
xlat
add
jnp
xchg
nop
stos
pop
sub
push
lds
out
add
enter
mov
repnz
inc
xchg
out
mov
mov
popa
cmp
repnz
cli
lret
std
xchg
mov
xchg
mov
jl
sti
insl
push
mov
shl
xchg
jnp
lahf
jge
test
es
fisubl
push
mov
outsb
ret
cmc
push
pop
push
xchg
xor
mov
push
imul
xchg
and
scas
pop
jnp
pop
dec
aam
add
jns
stos
imull
dec
mov
or
in
inc
test
jp
adc
nop
out
cmp
stc
sub
pop
stos
sbb
cmp
jmp
fs
movsl
mov
mov
imul
cmpb
and
pop
stos
je
xor
and
xor
xchg
push
xchg
mov
jl
int3
scas
enter
cmp
mov
pop
scas
hlt
fisubs
mov
push
aaa
fwait
mov
fistpll
idivb
sub
ss
aam
push
mov
iret
sub
mov
clc
inc
jecxz
leave
push
cmpsl
fwait
jb
aad
mov
xor
mov
xchg
inc
and
xchg
mov
cs
push
dec
or
jp
out
xor
jno
inc
mov
pop
mov
stc
push
push
pop
shlb
jg
or
lahf
inc
sub
aam
cmp
sti
in
cmp
adc
test
mov
je
std
shrl
out
lds
call
mov
idivl
insb
ror
pushl
loopne
add
inc
xchg
addr16
rol
push
mov
push
mov
sarl
jmp
xor
lds
sahf
out
mov
gs
out
ljmp
int3
sbb
pop
pop
sub
int
iret
movsl
mov
xchg
icebp
pushf
aad
in
adc
js
scas
cli
push
xchg
imul
ja
and
mov
cmc
inc
fstpt
enter
rclb
in
push
mov
mov
mov
push
js
xlat
stc
mov
cs
sbb
mov
xor
mov
inc
fdivs
mov
in
jns
sub
in
cmp
jno
shll
mov
jb
scas
jg
xchg
mov
popf
ljmp
or
test
cmpsl
movsl
ds
clc
data16
mov
push
xor
dec
xor
mulb
pusha
lock
push
pop
test
out
jecxz
and
dec
or
jg,pn
cmp
fisubl
xor
jmp
scas
mul
sub
lahf
outsl
ret
gs
je
xorl
xor
mov
enter
fsubs
imul
jge
aas
test
aaa
pop
pop
lock
popa
sbb
in
lock
sub
outsl
mov
cli
push
leave
shll
or
add
push
mov
jecxz
fmuls
push
loop
ss
mov
sbb
pushf
inc
subb
jg
aam
pop
dec
fdiv
push
adc
inc
xchg
std
pop
cmp
push
adc
xchg
pop
push
cmp
add
mov
fmuls
sti
les
mov
fwait
xor
lods
jnp
or
cmp
dec
andl
repz
incb
pop
aaa
test
and
adc
test
addr16
add
adcb
fimull
cli
imul
sub
jle
and
inc
rcr
xchg
xchg
test
into
ret
dec
adc
sub
lods
hlt
add
pop
mov
push
pop
xchg
aaa
lods
mov
rclb
jp
sbb
and
push
jae
in
lds
fsubr
cmpsb
popf
adc
push
add
xchg
jmp
jbe
lret
out
test
xchg
sbb
or
leave
in
sub
outsl
lcall
subb
jl
mov
inc
mov
xchg
mov
and
pop
hlt
mov
stos
jnp
fdivrs
inc
sub
xor
jnp
xchg
pop
aaa
int3
inc
dec
jno
and
or
stos
cmp
sub
fdiv
lret
inc
loop
test
dec
mov
xor
and
lods
pop
push
jo
mov
adc
imul
hlt
les
in
les
stos
repz
adc
dec
inc
jne
clc
loope
dec
jp
jns
call
sti
xorb
push
rclb
mov
insl
jle
cltd
gs
inc
cs
daa
jns
sub
into
icebp
outsl
xchg
repnz
cmp
psubusb
pop
gs
cmp
xor
add
jp
loop
ja
pop
xor
das
sti
test
scas
and
scas
dec
xor
mov
out
ja
sti
scas
xchg
clc
leave
and
loope
outsl
dec
inc
xor
or
and
xlat
sbb
sub
inc
test
lods
ret
cmp
out
push
mov
leave
test
dec
sahf
cmpsb
inc
push
adc
sbb
xchg
hlt
loopne
xor
and
cli
ss
int3
lcall
bound
loope
rolb
aad
lods
cld
in
xor
subl
xchg
mov
jl
aas
adc
or
imul
pop
jnp
cwtl
in
lea
ss
mov
mov
out
mov
mov
jle
sbb
testl
pusha
pop
push
push
aad
and
xor
sar
xchg
lea
mov
cmp
test
lret
cmc
pop
je
jb
shl
leave
inc
pop
ret
push
dec
xchg
push
in
xchg
mov
test
ja
jb
inc
and
pop
lahf
jp
jg
loope
movsb
and
push
add
xor
fisttpl
les
out
std
lahf
outsl
in
xchg
dec
mov
lds
xor
jmp
sub
shll
or
lret
nop
sbb
mov
xchg
pushf
sbb
insb
mov
sahf
scas
stos
int3
cmpsl
cs
sbb
es
mov
dec
mov
sbb
sub
repnz
scas
xorl
insl
js
ret
daa
stos
es
or
hlt
movsl
inc
pusha
mov
jno
mov
or
mov
fcom
lcall
ss
fidivrl
xchg
dec
jmp
addr16
jg
sbb
xchg
push
mov
addl
adc
mov
js
stos
and
ja
bound
rcr
mov
lock
icebp
sbb
jno
jmp
cmp
daa
sti
xor
inc
ja
mov
inc
cli
mov
shll
shll
dec
bound
nop
cmp
jno
or
movsb
scas
pop
aam
dec
mov
xlat
pop
jno
mov
in
rorl
cmp
hlt
cld
lods
mov
jne
shll
push
cmpsb
xchg
dec
jge
rorl
inc
xor
les
lret
mov
dec
ds
ficompl
xchg
inc
mov
add
stos
xchg
fstpl
xchg
jle
cld
adc
js
sbb
push
ds
scas
imul
mov
lret
sti
mov
into
xchg
dec
xchg
cli
stc
js
imul
cmc
fidivl
push
push
mov
clc
sbb
and
cmc
push
mov
xor
mov
jno
sarl
ret
xchg
lds
mov
or
jecxz
push
push
adc
jb
mov
ds
out
mov
lahf
out
jg
movlps
shrb
aas
test
outsb
jmp
cld
mov
fiaddl
aaa
xor
pop
pop
fs
pop
addr16
mov
jb
mov
inc
jmp
jle
lods
test
jle
fldl
inc
out
sbb
dec
pop
sub
and
mov
inc
mov
rcrl
inc
or
mov
mov
mov
nop
sbb
cmp
mov
dec
in
mov
jns
gs
popl
fwait
push
cmp
cmp
inc
inc
jle
mov
clc
cltd
sub
mov
addr16
mov
xchg
out
std
bound
loope
lcall
push
xor
mov
add
push
mov
inc
sarb
sarl
push
hlt
clc
xchg
dec
push
mov
imul
mov
xchg
mov
xlat
movsl
mov
and
sti
nop
and
jge
lock
add
dec
xchg
test
dec
cmp
shll
or
push
repnz
popf
mov
sub
lea
aas
jmp
xor
xchg
jb
or
push
push
pop
xchg
sahf
cli
int3
mov
faddp
ja
mov
imul
jg
mov
sbb
inc
dec
cli
ret
or
jecxz
push
in
xchg
dec
aas
inc
imul
dec
push
in
jecxz
lret
lret
call
int3
data16
mov
mov
nop
in
mov
jnp
clc
xchg
loopne
icebp
lcall
icebp
in
mov
lock
jp
leave
mov
adc
loope
mov
and
push
lds
out
orl
js
pop
aaa
bound
xchg
lods
cmpsl
ss
loopne
cld
xchg
sub
mov
pushf
loop
push
out
push
fisttps
subb
push
daa
in
test
pusha
xor
jge
stc
jne
out
pop
inc
pop
rcll
cli
and
jecxz
mov
sub
fisubrl
push
je
mov
push
jbe
sbb
xchg
mov
sbb
mov
sbb
mov
fisubs
mov
lahf
xchg
inc
pusha
push
sub
mov
enter
inc
pop
stos
leave
push
cwtl
add
dec
dec
scas
inc
fisubs
add
add
in
xchg
inc
mov
test
jecxz
jo
dec
or
add
imul
mov
in
jmp
loopne
xchg
adc
mov
pushf
push
jo
test
out
addr16
mov
fmuls
add
inc
cmova
sub
push
mov
xchg
out
mull
in
je
popf
lods
mov
add
or
or
out
jns
iret
jl
mov
and
scas
mov
push
jmp
mov
cmp
push
pop
cli
xor
popl
mov
popf
je
cli
imul
mov
cwtl
jns
and
add
mov
scas
push
xor
push
scas
rcl
aaa
push
pop
aaa
das
out
ja
add
mov
jle
sbb
or
fsubl
or
pop
and
push
pop
push
jl
aas
xlat
dec
pusha
repnz
insb
dec
jnp
das
std
mov
sub
push
sti
cmp
lret
clc
out
jne
out
les
mov
cs
adc
mov
scas
cli
sbb
aad
lods
xchg
add
xor
in
jo
xorl
lea
inc
or
mov
cmp
jge
sub
jp
inc
sub
cmp
cwtl
inc
xor
jmp
mov
or
mov
movsl
dec
xor
adc
xchg
or
or
add
lods
insl
dec
push
jo
sub
cs
and
fidivs
adc
jno
daa
push
inc
adc
int3
lods
out
add
dec
cmc
aad
imul
push
jmp
leave
mov
sbb
mov
push
or
nop
jge
rsqrtps
xor
aad
popa
push
xchg
scas
push
loope
popl
sub
push
lahf
sbbb
lea
into
lock
lahf
cli
mov
icebp
add
aam
clc
pushl
das
pop
inc
rorb
and
std
inc
lret
jge
ret
xchg
es
adc
mov
mov
push
cltd
cmp
sbb
outsl
add
sub
xor
cli
iret
xlat
xchg
pop
inc
cmc
shll
adc
out
js
repnz
lea
sub
mov
in
ljmp
cli
popf
jl
xor
fwait
ret
push
lret
push
xor
shl
dec
pusha
pop
sub
and
add
jmp
loope
test
xchg
cmp
adc
xchg
ljmp
cs
xchg
lock
lea
push
movsb
in
lahf
jnp
fiaddl
loopne
cwtl
jns
dec
push
inc
xchg
xchg
or
lcall
pop
and
mov
aas
add
ljmp
or
xor
imul
dec
pop
lcall
xchg
div
add
mov
mov
cmp
push
jl
push
outsl
add
out
outsb
xchg
sub
or
jg
popa
in
ss
shlb
jne
cmp
jp
jb
inc
xchg
cmc
mov
sub
xchg
adc
leave
mov
mov
mov
inc
mov
mov
lds
aas
inc
fdivrs
imul
loope
movsl
dec
lahf
addl
jae
mov
jne
iret
xor
push
cld
dec
mov
add
fs
cmp
insl
pop
fmuls
mov
cmp
xor
gs
add
pop
in
add
cmp
xchg
mov
dec
mov
inc
jne,pn
ret
jns
ret
ror
inc
adc
imul
sub
mov
cli
or
adc
xor
lret
xor
push
cmp
pop
mov
test
pop
fdivs
pop
cli
loope
xor
ret
cmp
std
cmp
and
xlat
add
addr16
ja
inc
inc
xchg
jle
inc
sti
rcl
jne
and
mov
sub
pop
int3
out
or
aaa
shlb
scas
scas
add
lret
ss
ljmp
lcall
adc
lds
lcall
add
ret
inc
fadds
cmpsb
leave
cld
outsl
test
xchg
mov
sub
pop
out
fldl
xchg
mov
rolb
jae
or
jns
daa
jge
shll
jns
cmp
push
jno
lret
pop
fadds
pusha
stos
sub
mov
xor
add
mov
xchg
ja
call
cmc
xor
lock
pop
subl
push
out
pop
call
inc
mov
fstpt
cwtl
in
xor
fisttps
sti
rol
std
dec
aaa
push
test
or
imul
pop
and
roll
loopne
outsb
movsb
pop
and
xchg
push
stc
cmpsb
push
xor
enter
xor
sti
data16
cmpsb
lods
push
fsubl
aas
adc
cmpsb
mov
sbb
mov
inc
lret
xchg
dec
cwtl
std
popa
cwtl
cmp
mov
push
negb
inc
push
sbb
lods
ret
sahf
inc
imul
or
dec
or
loopne
lds
xchg
add
sbbb
rorb
leave
and
adc
movsl
shrb
cmpsb
mov
les
xor
jbe
sub
inc
in
rol
inc
mov
sub
xchg
cmp
pop
xchg
fildl
push
mov
enter
mov
mov
pop
jb
fsubrl
jbe
and
inc
les
xchg
cmp
mov
rolb
in
add
push
push
aaa
dec
nop
aam
lea
loope
ficoms
xor
lds
mov
popa
leave
aad
jb
scas
lret
arpl
lret
xor
mov
rorb
in
or
or
sub
xlat
loopne
and
push
int
pusha
dec
je
jmp
pop
lea
hlt
adc
hlt
mov
popf
pop
insl
push
jb
jbe
push
scas
sub
xlat
mov
add
inc
mov
incl
xor
sbb
or
xorb
repz
popa
ljmp
shr
sbbl
stos
adc
leave
cs
inc
scas
clc
mov
int
mov
and
mov
inc
outsb
imul
and
adc
xchg
xor
cli
gs
push
in
adc
fwait
pop
mov
nop
pop
push
aam
push
nop
sbb
and
add
outsb
mov
inc
leave
inc
sbb
ljmp
cmp
dec
imul
mov
inc
xchg
adc
xchg
xchg
push
rclb
sbb
jo
xor
adc
jmp
ror
and
mov
test
sbb
pop
movsb
mov
stos
push
sbb
das
rclb
push
and
push
pop
cmp
loop
inc
clc
rcrb
jg
jo
andl
sbb
xchg
pop
push
sub
arpl
jo
add
aaa
inc
cmpsl
dec
cmp
mov
ret
std
cmp
mov
mov
jmp
call
push
cmp
or
cmp
lds
test
mov
insl
rep
in
sbb
cmc
iret
jl
arpl
pop
mov
add
inc
in
loopne
cltd
mov
mov
pop
dec
bound
adc
clc
mov
lea
xlat
fldt
xchg
adc
fs
stc
insb
lds
dec
adc
jne
sbb
cmp
mov
pop
mov
insb
mov
mov
sub
dec
xchg
mov
aad
ret
sbb
movsb
sub
or
and
push
int3
addb
and
xor
mov
push
jno
sahf
imul
mov
dec
mulb
ret
insb
imull
aaa
jmp
xchg
adc
shrl
push
and
nop
lret
mov
cli
ss
cmc
in
lock
test
into
xorl
in
incl
jle
mov
mov
sbb
movsl
push
xor
jg
dec
and
sti
lret
inc
mov
inc
mov
mov
lcall
xchg
mov
imul
je
stc
loope
in
imul
data16
pushf
in
sub
sub
mov
sub
pop
ds
xor
sbb
imul
shll
out
add
inc
in
aas
int3
mov
and
enter
pusha
popf
std
ds
mov
or
nop
sub
or
aaa
cmpsb
adc
inc
adc
sbb
jae
aam
push
mov
aam
adc
jo
sar
xchg
xchg
fildl
ljmp
mov
ror
movsl
mov
xorl
mov
mov
aaa
sti
cld
push
xchg
loope
mov
push
insl
sub
gs
cmp
mov
push
ljmp
scas
call
fbld
xlat
rcrl
orb
mov
mov
push
loope
ss
ret
jnp
xorl
test
roll
dec
adc
sbb
push
scas
fisubrl
lods
dec
sarl
mov
es
dec
xlat
xor
mov
into
jno
mov
lret
jg
bound
push
jle
aaa
push
stos
mov
xlat
ret
push
inc
lahf
std
cltd
subb
jge
ffreep
dec
ret
mov
arpl
push
adc
mov
xor
adc
mov
or
dec
push
adc
pushf
cs
xchg
mov
xchg
sbb
repnz
xchg
pop
mov
xchg
mov
mov
lahf
xorb
xor
aad
jb
mov
mov
std
push
cmp
pop
int
incb
sarb
pop
mov
push
loope
in
mov
icebp
inc
mov
cmp
call
out
add
xchg
leave
mov
lods
imulb
dec
inc
dec
adc
ds
lds
dec
out
mov
adc
cmpsl
add
adc
pop
out
and
add
in
shll
mov
insb
pop
mov
mov
xchg
add
stos
adc
jno,pn
inc
stos
xor
clc
xor
jae
cmpsl
mov
pushf
add
adc
mov
jmp
test
sub
mov
and
lcall
xlat
cmp
bound
mov
test
push
sbb
je
push
and
loope
push
fdiv
sub
lret
xor
inc
adc
arpl
stc
pop
mov
mov
insb
mov
loopne
rol
inc
mov
mov
repz
lcall
pop
es
jno
aas
xor
loopne,pn
and
pop
xor
pop
int3
andl
add
mov
cld
ss
mov
jae
xchg
mov
xor
hlt
inc
ret
xchg
insl
mov
cs
jbe
xor
pushf
push
mov
in
cli
ds
mov
stos
adc
mov
in
fsts
iret
add
or
push
pop
mov
leavew
or
dec
and
xor
adc
sbb
lret
pusha
outsb
pusha
adcb
jg
jp
outsl
cmp
mov
in
cmp
add
add
cld
adc
out
push
and
out
fidivl
in
and
daa
mov
adc
stc
mov
fs
dec
addl
jno
repnz
addr16
lock
fpatan
mov
icebp
fsubr
sub
adc
aad
das
fimuls
and
into
jp
xor
pop
push
lahf
dec
cmp
push
mov
add
movsl
mov
jp
in
dec
add
aad
int3
ret
addl
repz
ja
aad
es
and
ret
xor
mov
cli
add
faddp
xchg
mov
adc
pop
out
cs
lcall
push
test
mov
loopne
loop
cmp
or
in
aaa
popa
stos
xor
test
icebp
aas
fcmove
pop
fiaddl
inc
sbb
push
mov
pop
sbb
das
jo
push
ja
popa
gs
inc
sub
call
fs
std
loope
outsl
sub
cmp
cmpsb
xchg
lret
in
sub
or
lods
push
and
pop
mov
sbb
sbb
jmp
repnz
ljmp
jle
test
mov
int3
jmp
jne
add
popf
jp
pop
dec
test
push
jno
loopne
sbb
imul
stc
xor
repz
fsubrs
test
pop
jns
pop
outsb
adc
add
mov
out
push
mov
push
mov
or
or
and
or
stos
movsl
or
out
test
test
repnz
in
mov
stos
lcall
rcrb
ficoml
push
dec
stos
push
and
push
sub
fdivrs
xchg
xchg
add
jmp
sahf
pusha
sbbb
dec
mov
jecxz
xor
mov
add
mov
cltd
enter
addr16
movsb
xchg
jo
jbe
repnz
mov
jns
sub
movsb
lcall
pop
subb
sbb
or
sbb
aam
lret
lret
lret
fiadds
filds
stos
inc
popf
dec
or
dec
das
std
adc
std
cmp
std
cmp
les
mov
jle
jmp
arpl
inc
fs
out
jge
jp
sti
scas
cmp
scas
cmp
mov
jnp
cmp
push
loop
pop
loop
iret
loop
xchg
lcall
mov
sti
mov
ret
ret
je
popf
pop
and
pop
cmp
call
mov
push
pop
lods
push
cmp
cmp
pushf
inc
xchg
inc
inc
xchg
jg
xchg
jg
cmp
jns
and
test
xchg
sub
mov
jp
je
pop
jne
ret
adc
ret
dec
pop
les
pusha
dec
clc
and
cmpb
jg
dec
pop
hlt
dec
mov
dec
mov
fbstp
adc
enter
lods
insl
leave
lods
pop
pop
lods
pop
repnz
repnz
cli
cmp
xlat
addl
pop
fmuls
pop
fsubs
call
and
scas
test
scas
xchg
sub
and
and
jae
in
jae
repz
es
cmpsb
repz
test
sub
nop
jmp
and
xor
sbb
scas
sbb
lret
lret
jp
cmc
or
cmc
sub
push
and
mov
fists
push
push
sbb
pop
cmpsl
stc
jmp
inc
out
arpl
shlb
pop
shll
aam
and
adc
pop
sti
out
and
and
jg
jns
cmp
adc
cmp
int3
mov
fwait
mov
scas
outsb
xchg
fldt
push
sub
orb
mov
xchg
adc
repnz
lock
xlat
lock
inc
mov
imul
imul
mov
lods
lret
lret
sbb
inc
popf
cs
popf
dec
xchg
popf
dec
das
jmp
das
std
xchg
das
std
cmp
std
cmp
dec
cmp
mov
jle
jmp
arpl
les
mov
push
jge
jge
scas
mov
mov
jnp
cmp
push
jnp
push
loop
push
loop
push
loop
xchg
push
sbb
into
inc
mov
ret
ret
ret
clc
je
pop
test
pop
cmp
insb
xchg
mov
ret
mov
push
jecxz
push
cmp
push
cmp
pushf
inc
xchg
enter
jo
jg
sarb
test
test
test
lods
insl
fnstcw
mov
rol
rol
loop
dec
clc
in
clc
subl
jle
lahf
jle
dec
fwait
repz
mov
dec
mov
arpl
adc
enter
lods
icebp
enter
lods
pop
repnz
cli
sbb
cli
cli
add
sti
xlat
orl
sbbl
pop
fcoms
fsubs
out
in
out
scas
sub
scas
xchg
sub
sub
loopne
mov
jae
jno
es
repz
sub
scas
test
mov
nop
jmp
nop
jmp
jo
pusha
mov
or
outsb
fstps
loope
push
ret
ror
xchg
xor
ror
jo
sbb
notl
xor
rcrb
mov
push
jo
loope
or
add
in
sbb
mov
and
push
ret
sub
fidivs
ja
and
loop
sbb
sbb
ds
inc
inc
lds
icebp
loop
or
pop
push
shlb
mov
mov
jl
cmp
daa
or
dec
movsb
lea
andl
ds
mov
mov
xchg
jg
fs
adc
add
adc
sbb
lret
or
dec
mov
lock
fs
inc
push
pop
mov
inc
ret
in
dec
inc
in
jns
ss
stos
int
fcmovnb
push
xchg
mov
pop
cwtl
xchg
and
dec
xor
mov
rcl
mov
dec
sub
mov
adc
push
inc
sub
or
inc
rorb
xor
or
dec
rorb
pop
rorb
add
add
dec
rorb
pop
rorb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
