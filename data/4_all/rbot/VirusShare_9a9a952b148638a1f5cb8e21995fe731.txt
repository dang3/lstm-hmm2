ljmp
adc
and
inc
inc
or
stos
xchg
jge
cli
js
and
ss
xchg
cmpsb
inc
les
ret
outsl
jns
and
add
pusha
inc
clc
and
fnsave
push
lea
sub
jb
or
push
sbb
inc
mov
jmp
add
xchg
jnp
mov
lahf
xchg
cmp
cli
mov
adcl
push
fimull
pusha
cmp
jb
aam
xor
sbb
std
fwait
data16
aad
incl
push
lret
xchg
adc
jmp
rorb
cwtl
pusha
mov
in
mov
pop
jnp
inc
addr16
cs
sub
adc
or
dec
cmp
ljmp
pop
cmp
loope
lds
lods
push
mov
cmp
and
sti
iret
and
and
stos
add
ja
xchg
shlb
je
push
push
sub
cmp
adc
xor
push
fisttpl
add
xchg
into
lods
and
sahf
push
rcr
sub
or
dec
push
inc
sbb
mov
in
je
scas
mov
call
jmp
push
and
push
adc
xchg
rcll
scas
mov
and
nop
andb
jns
and
push
ret
dec
or
rclb
aas
xlat
pushf
psrld
inc
loope
mov
addr16
aaa
dec
lret
mov
or
or
sbb
sub
pop
popf
in
cld
dec
fsubp
pop
push
or
insb
dec
ficoml
rcr
addr16
inc
pop
cmpsl
fcmovbe
push
sbb
cmp
and
aaa
xchg
insl
lret
mov
inc
jge
xor
dec
mov
xchg
mov
jmp
insl
and
pop
cmpsb
shrl
xor
pop
dec
mov
jb
je
adc
es
cli
fistpl
xchg
sub
out
dec
out
test
imul
fcomps
mov
insb
and
hlt
in
repz
jbe
cmp
ret
jne
dec
add
insl
enter
ja
xchg
sub
fs
insb
pop
jg
imul
push
xchg
xor
xchg
sbb
dec
pusha
jle
jmp
and
push
repz
ljmp
lahf
inc
add
cs
call
sbb
dec
sub
les
or
pop
add
mov
jmp
into
dec
xor
xor
sbb
xchg
inc
sahf
inc
xor
sbb
adc
lock
ljmp
ja
or
pop
insb
divb
xchg
bswap
and
sbb
pop
push
mov
imul
pop
and
push
xor
lock
shll
push
cmpsb
cltd
and
xchg
inc
jns
push
ret
jne
repz
or
sahf
out
subb
mov
jle
adc
sahf
jge
ljmp
push
mov
es
outsl
aaa
jmp
les
insb
mov
pop
push
lods
js
push
leave
insb
aad
dec
pop
jecxz
imul
mov
sbb
leave
fsubl
mov
icebp
shlb
and
xor
loopne
dec
pushf
adc
scas
mov
fwait
add
pop
adc
push
jb
loop
jmp
int3
dec
stc
js
and
mov
sarl
fiaddl
jns
dec
movsl
je
js
push
jo
push
cwtl
popa
decl
cmp
sbbl
jp
std
push
je
inc
nop
sti
and
dec
push
pop
subl
jae
int3
cmpsl
sub
aam
test
xor
add
nop
inc
jge
sbb
fs
push
xor
adcl
int
xor
mov
into
cmp
popf
push
adc
cmp
inc
out
mov
cli
imul
cld
shlb
mov
xchg
xorl
int
ror
repnz
aas
jnp
xor
stos
movsl
sbb
xlat
lds
test
inc
and
push
mov
insb
test
lds
mov
lds
lds
rcl
test
xchg
jmp
insl
movsb
lcall
jge
nop
outsb
hlt
or
push
loop
jge
outsl
mov
leave
shlb
in
mov
aas
sbb
out
adc
and
loop
aad
xchg
aam
push
push
imul
jnp
mov
mov
cmpsl
sbb
mov
loop
adc
mov
mov
mov
jb
xchg
lahf
loopne
ljmp
adc
push
or
movsl
rorl
push
inc
icebp
adc
ret
in
das
movsl
jg
push
adc
hlt
xlat
mov
int3
dec
loope
mov
aaa
fwait
outsb
sbb
dec
cmp
cltd
orl
jns
jbe
test
bound
fstpt
fcoml
test
mov
push
mov
test
cwtl
sti
sub
repz
xchg
in
pop
repnz
cmc
mov
cmp
pop
or
stos
and
lods
mov
xchg
testb
inc
das
push
loope
pushf
jle
fstps
stos
out
dec
aam
xor
sub
pushf
sub
or
imul
call
cmp
stos
sbb
aad
and
mov
dec
inc
daa
jecxz
mov
imul
js
rclb
cs
or
and
mov
mov
cmp
pop
testb
test
std
int
fs
sahf
lcall
loope
movsb
push
jmp
hlt
dec
pop
jp
in
sub
xchg
jmp
lahf
imul
ret
inc
xor
pop
daa
pop
pop
dec
mov
out
jge
and
jecxz
and
aaa
mov
test
popa
and
outsl
pop
mov
movsl
mov
fwait
cld
lret
adc
jne
icebp
dec
cmp
lret
sbb
sub
outsb
lds
inc
fcompl
push
stos
shrl
inc
lret
xor
cmp
dec
pusha
sbb
ljmp
jae
sbb
gs
pusha
jmp
pop
and
rcrl
xchg
adc
dec
dec
push
cmp
inc
dec
stos
enter
mov
xor
movsb
jbe
test
lcall
pop
mov
jbe
out
inc
jl
es
arpl
scas
mov
jne
in
and
dec
ss
sbb
setge
js
loopne
and
inc
arpl
or
pusha
aas
pop
shll
xchg
pop
inc
inc
shl
jl
scas
loope
cmp
repnz
insl
xchg
jo
pop
into
addr16
andb
push
inc
test
pop
mov
sarb
mov
cmp
mov
nop
mov
fnsave
aam
mov
out
popa
xchg
jbe
dec
aas
push
jo
jne
mov
pop
idivb
xor
mov
add
pushf
inc
jo
movsb
mov
scas
popf
ds
aaa
jmp
dec
lcall
sbbl
arpl
es
outsb
jne
mov
int
adc
loope
shrb
ret
fdivp
sahf
dec
sub
jmp
aaa
fistpl
pusha
sti
lcall
inc
das
mov
fcmovnb
mov
mov
lahf
pop
ja
mov
pop
js
cltd
mov
mov
xchg
and
xor
out
lcall
test
add
cmp
scas
xchg
sub
cmp
pop
pop
and
xor
bound
dec
enter
push
jg
adc
pop
push
lret
stc
cld
repz
movsl
lods
push
jg
jl
pop
popa
testl
push
adc
call
or
adc
mov
leave
ds
das
out
pop
dec
cmp
ss
fcmovnbe
ret
jb
sahf
sar
mov
stos
lock
out
jns
pushf
inc
mov
add
pusha
hlt
jmp
push
mov
sub
jge
and
mov
add
ljmp
jmp
subb
andl
and
jmp
push
lret
insb
or
test
lock
sub
dec
aas
cmp
pop
xchg
push
adc
jg
xor
sbb
jo
imul
bound
xor
xchg
lcall
aad
sub
mov
xchg
out
repz
lahf
mov
gs
add
mov
sbb
leave
pop
jb
adc
shrl
in
fs
xchg
mov
mov
inc
push
in
mov
mov
xchg
push
inc
pop
cwtl
push
pop
add
ret
imul
xor
stos
push
clc
inc
and
cmpsl
fimull
cwtl
pop
out
fistpl
test
cmc
js
sub
dec
jl
shrl
xchg
in
dec
push
rcr
cmc
lods
das
dec
ret
mov
adc
movl
fcoml
or
ja
sarl
scas
mov
mov
fcomps
fnsave
addb
data16
sbb
jmp
push
push
or
or
jae
jnp
pop
ja
shrl
std
addr16
clc
add
jb
cmpsl
in
mov
or
dec
nop
sub
mov
pop
loop
loopne
fs
fwait
inc
push
pop
test
or
mov
mov
dec
data16
jo
out
mov
xor
mov
adc
cltd
out
fnstcw
mov
push
orl
xor
push
test
jp
filds
push
testl
sub
repnz
insb
mov
or
into
cs
movsb
inc
and
wbinvd
imull
loopne,pt
dec
lods
push
jno
dec
add
out
fucom
xabort
jbe
aam
jnp
lock
lods
js
jl
add
or
sub
mov
sbb
orb
in
mov
inc
push
dec
and
push
add
and
mov
jle
lods
sti
sbb
cmpsl
imul
push
ljmp
pop
js
mov
int
not
cmpsl
aas
mov
loop
mov
xchg
js
pop
or
scas
jp
and
push
or
insb
cmp
mov
ror
push
std
dec
jle
in
jle
ljmp
mov
inc
pop
pop
fcompl
icebp
sahf
xlat
fists
xor
clc
daa
fsubl
adc
lods
outsl
lahf
fbld
ret
mov
fsubl
cmpb
fsubrp
pop
loopne
pop
lret
cwtl
test
pop
mov
sbb
xchg
jmp
push
jb
enter
movsl
popf
adc
mov
xorl
pop
aaa
inc
aaa
lret
lret
mov
out
fidivs
adc
sahf
ret
or
dec
shrb
mov
push
push
xchg
mov
jmp
aas
inc
mov
mov
cmp
push
pop
imul
lcall
add
dec
loopne
out
movaps
adc
test
test
jge
mov
sub
jae
mov
mov
rclb
loope
jg
dec
call
jg
sub
out
sub
dec
les
outsl
xorb
sub
mov
sahf
cmc
sahf
adc
sbb
ret
fdivs
gs
xchg
push
loopne
ljmp
adc
stos
sbb
imul
add
sahf
mov
mov
sbbb
jns
push
jmp
cs
out
add
jns
int
add
das
and
push
rolb
mov
stc
mov
jp
dec
xor
or
pushf
pop
nop
jg
aas
xor
mov
mov
hlt
loop
imul
popf
xor
and
and
sub
icebp
push
cmp
xchg
inc
sub
out
add
xorb
ds
movsb
pop
nop
add
adc
cmc
les
lods
fidivs
cmp
test
cmp
mov
sbb
adc
and
push
sub
pop
out
adc
and
fwait
shll
push
fiadds
scas
dec
ljmp
and
rorb
in
mov
in
lcall
and
scas
repnz
sar
test
mov
cli
cmc
add
pop
shrb
sub
mov
stc
sbbl
sar
negl
mov
push
outsb
sarb
jae
adc
sarb
in
mov
vpaddusb
loopne
jmp
dec
in
out
sub
insl
lcall
out
dec
aad
sbb
out
notb
mov
in
fldcw
push
pop
fistl
sbb
stos
js
adc
int
out
in
gs
iret
xchg
loopne
int
mov
data16
dec
mov
add
pop
push
out
jle
test
into
sti
push
pop
mov
xchg
add
aaa
addr16
lea
or
scas
stos
pop
es
bound
mov
xchg
mov
es
mov
dec
fcoml
sbb
pop
stos
andl
mov
cmpb
xor
aaa
adc
add
scas
dec
repnz
cs
cld
outsl
or
mov
enter
push
sub
pop
ss
test
mov
adc
cmc
js
pop
stos
push
fidivrs
pop
mov
push
jne
inc
fistpll
das
mov
addr16
sarl
mov
adc
jle
xchg
xchg
fcoms
sbb
bound
pop
adc
ficompl
loopne
add
repz
sub
mov
mov
mov
lods
fldt
inc
sub
xchg
sub
ret
dec
jb
push
lock
aam
fwait
in
repnz
lahf
fists
aad
pop
sub
insb
pop
repz
cmpsl
pop
pop
lahf
pop
outsb
sub
sar
out
or
push
in
scas
fadds
aad
dec
xchg
in
xchg
inc
sub
mov
xchg
push
mov
cmc
subl
aad
das
cmp
into
mov
rclb
lods
jae
jbe
lock
xlat
sbb
fucom
xor
sub
push
loope
popl
cmp
jg
ja
ljmp
roll
int3
cs
leave
shrl
mov
ljmp
add
orl
and
jecxz
jno
lock
adc
imul
adc
dec
mov
jae
dec
scas
ja
push
dec
cmpsl
arpl
cmp
cwtl
xlat
jle
dec
mov
cmc
stc
push
rcll
fwait
mov
das
jecxz
push
cmp
popa
push
push
mov
imul
jne
sbb
pop
mov
sbb
cmc
test
and
sbb
std
pop
xchg
cmp
mov
sbb
inc
pop
bnd
mov
out
fstpt
mov
mov
mov
loop
icebp
in
rolb
aad
jg
inc
xlat
popa
mulb
cmp
cmp
push
pop
data16
add
cwtl
lods
jb
and
mov
les
fistps
inc
aas
es
xchg
jo
or
rcr
int3
shlb
adc
cltd
sbb
fisttpl
dec
pop
in
mov
xchg
mov
inc
std
add
js
pushf
xor
adc
adc
mov
cltd
scas
pop
imul
xchg
shll
daa
sbb
imul
jb
xorl
sti
mov
xor
cmp
pop
add
mov
inc
jb
inc
or
int
repz
mov
xchg
bound
or
mov
jnp
je
ja
lods
xchg
jle
pop
clc
mov
popf
in
mov
leave
icebp
or
lret
int3
test
jb
test
lret
mov
inc
mov
stos
lds
cmc
cmc
out
mov
jl
andb
and
ror
aam
pushf
jae
or
inc
inc
adc
mov
dec
das
sbb
lret
push
push
imul
xor
dec
add
mov
and
hlt
or
sbbb
and
pop
lea
icebp
or
lret
push
mov
push
jns
pop
fldl
inc
addr16
int
cmp
decb
int3
pop
inc
mov
out
int3
inc
mov
in
stc
inc
inc
jl
push
sub
push
aad
sbb
jmp
add
xlat
pop
or
adc
xchg
sub
mov
cmp
sbb
inc
fnsave
movsl
test
loopne
cmp
roll
push
mov
dec
test
push
mov
pushf
dec
add
cs
dec
out
fcom
push
imul
cld
pop
out
cs
mov
lcall
jbe
cwtl
adc
cmp
leave
fs
mov
xchg
mov
cmc
sahf
in
and
mov
xchg
xor
lcall
sbb
lret
std
adc
mov
mov
mov
add
xlat
adc
sbb
scas
sub
lea
jne
inc
fstpl
int
inc
push
xchg
icebp
push
gs
popa
mov
or
mov
test
rcrb
dec
das
lcall
push
add
loop
pop
pusha
gs
inc
loopne
jp
sub
and
mov
jecxz
and
and
das
or
xchg
rcrl
fs
sub
or
add
mov
mulb
fsubrl
push
out
add
fiaddl
bound
or
jp
int3
mov
ljmp
jns
push
loop
cld
stos
adc
inc
cld
adc
push
push
xlat
loop
inc
add
mov
lea
dec
ja
push
mov
arpl
in
dec
jo
push
or
mov
movsl
pushf
and
mov
mov
daa
rcll
xchg
fs
cmc
clc
fs
xor
adc
sahf
and
dec
xlat
shll
sbb
fst
jle
xor
popf
test
push
mov
mov
jle
ficomps
push
iret
scas
mov
sub
insb
cmp
shrl
sbb
imul
inc
mov
sub
push
mov
int3
inc
sbb
int3
cmc
mov
dec
lret
popa
lret
jns
rep
dec
call
lea
mov
sahf
repnz
in
push
cmpl
sti
mov
lcall
cmp
fidivs
dec
inc
sub
or
aaa
imul
scas
fstl
dec
daa
popa
lret
add
dec
sub
fsts
je
test
out
divb
hlt
stc
mov
sbb
xchg
test
mov
into
movsb
push
cmpsl
rclb
dec
lods
jp
jne
pop
lock
or
sub
cmp
jnp
pop
pop
test
das
dec
imul
jg
push
scas
aad
loope
daa
aad
popf
pop
or
sahf
lret
das
jmp
and
xor
mov
dec
call
fs
or
fildll
loopne
jmp
inc
pop
call
stos
mov
cmp
cltd
addl
or
inc
jl
push
pop
cmpsl
ss
out
std
and
adc
xchg
fwait
adc
dec
pop
dec
or
or
mov
push
fwait
test
ds
cmp
sub
imul
cmp
lea
xchg
pop
adc
xor
adc
test
jo
mov
lret
or
sub
cltd
loopew
fwait
jae
in
insb
add
test
ret
lods
push
jecxz
test
dec
cmp
cld
mov
pusha
popa
dec
jle
mov
nop
mov
popf
pop
lret
es
lea
ficoml
mov
xor
jl
ret
mov
test
out
sub
lahf
xchg
sub
dec
sub
je
push
jno
push
cwtl
sbbl
mov
loope
push
adc
xor
and
mov
mov
inc
test
rcrb
or
pushf
scas
pop
in
inc
inc
mov
imul
jmp
sub
adc
jmp
addr16
scas
adc
xor
mov
lock
push
popf
push
ljmp
xchg
ds
mov
pop
aad
lret
test
or
popf
pushf
jne
les
dec
inc
loop
cmp
pop
jecxz
and
inc
mov
push
or
bound
arpl
cmpsl
or
rorl
mov
xchg
test
fwait
dec
cmp
xchg
and
push
sub
or
test
testl
mov
roll
enter
pop
mov
mov
rcl
cmp
movsb
pop
inc
sub
inc
loope
das
cmp
les
jmp
jb
in
sub
xlat
mov
jae,pn
scas
lret
push
jns
imul
cmp
jp
push
jne
iret
add
rolb
and
jecxz
pop
push
xor
mov
jmp
ret
inc
add
cwtl
push
inc
mov
mov
call
int3
inc
sub
aad
lea
jnp
mov
cmpsl
sbbl
push
xchg
mov
mov
push
aam
pushf
movsl
hlt
outsl
mov
mov
dec
clc
pop
ds
pop
imul
jg
fsubrl
add
sub
ss
xchg
dec
stc
jbe
and
orb
cmp
imul
dec
rol
fucom
inc
enter
outsb
adc
repz
adc
leave
xchg
xlat
lret
push
aam
nop
pop
push
jg
sahf
sbb
bound
rcrl
mov
scas
push
jp
adc
inc
add
ret
addl
xchg
jg
xor
push
test
int3
mov
or
mov
mov
popa
dec
std
push
push
pop
jecxz
xchg
xchg
sbb
mov
testb
inc
test
xchg
fwait
sub
sub
push
and
shlb
mov
add
insb
mov
cli
xchg
shlb
xchg
rcl
out
lods
xchg
pop
mov
or
pusha
ret
test
imul
sub
mov
push
inc
jae
pop
lret
and
sahf
push
pop
xor
fmul
sarb
movsb
lods
cmp
test
daa
popf
sub
mov
movsb
popf
mov
stos
adc
mov
inc
cmp
sbb
add
add
xor
mov
or
pop
in
out
outsl
and
sub
xor
push
cmp
stos
in
mov
or
fstps
inc
and
popa
arpl
repnz
movsb
sub
cmp
mov
lret
pop
mov
push
fcomps
popf
outsb
call
push
les
imul
in
adc
shlb
ss
sbb
or
xchg
es
dec
sub
clc
xchg
mov
stos
pusha
inc
es
repz
mov
stc
pop
mov
sbb
xorl
pop
pop
repz
aaa
stos
mov
cmp
sub
imul
lods
fldl
sub
stos
jnp
xor
fcom
jne
cmp
sub
adc
xchg
rcll
sahf
aad
aas
sub
imul
pusha
shlb
outsb
out
enter
push
sub
pop
push
pop
ret
jb
jge
push
sbb
jnp
mov
mov
test
insl
call
jae
je
leave
push
scas
push
inc
sbb
xor
mov
int3
dec
arpl
add
arpl
mov
adc
sarl
xchg
and
pop
pop
and
bound
insb
inc
iret
mov
push
jg
into
in
das
pushf
add
imul
enter
mov
cmp
fimuls
adc
xchg
mov
scas
push
int3
insl
or
fidivrs
sub
lret
or
outsl
pop
popa
nop
imul
mov
or
lcall
mov
imul
cmpl
mov
xor
xor
movsb
mov
test
fs
mov
nop
es
subl
fimuls
out
loopne
out
in
inc
stos
lcall
xor
or
sub
adc
xlat
push
dec
cmp
xor
dec
xlat
fs
cmpsl
aas
out
out
cld
and
pop
xor
ret
mov
push
and
shrl
stos
sbb
xchg
dec
ljmp
fs
mov
or
xor
ljmp
cmp
jbe
sbb
movsl
inc
loopne
lahf
div
in
xchg
mov
jmp
shl
xorb
mov
sub
subl
lret
stos
sbb
movsl
cmpsb
jno
or
pop
nop
mov
sub
scas
sub
xchg
mov
mov
rol
loope
lea
and
int3
gs
lret
sbb
outsb
or
and
pop
cmp
inc
xchg
imul
xchg
and
jl
cmp
lea
inc
xor
sub
xchg
das
pushf
cwtl
cmp
stc
adc
mov
insl
out
cmp
add
push
arpl
mov
out
sub
cld
pusha
jl
push
xchg
in
orb
shl
je
mov
sbb
lea
push
shrl
add
lods
js
dec
mov
sbb
movsb
imul
call
addr16
sub
and
dec
pushf
dec
xchg
outsl
or
out
xlat
ret
fcoms
dec
xor
jne
daa
es
imul
popf
pusha
sbb
add
js
inc
lret
divl
adc
sbb
jl
push
pop
push
add
iret
jne
cmp
sub
popf
mov
in
dec
jp
push
pop
bound
fwait
leave
dec
lcall
call
les
pop
rcll
sbb
adc
xor
or
xchg
or
inc
sub
adc
shll
int3
pushl
out
in
in
adc
sbb
out
xchg
sar
push
adc
stc
mov
push
mov
in
jnp
cmc
fistps
shrl
and
xor
xor
pop
scas
movsl
out
jg
fildl
popa
xlat
push
sbbb
jne
ljmp
sub
fcmovu
xchg
pop
lret
mov
cmp
and
popf
mov
push
inc
or
dec
sbb
mov
jo
mov
fnsave
bound
jo
or
stc
lcall
sbb
and
cwtl
lret
xchg
popa
lcall
loope
leave
inc
iret
fnsave
inc
leave
fsubrs
cld
clc
push
xchg
inc
testl
pop
scas
cmc
cmp
mov
push
pop
dec
inc
jle
in
rcr
ficoml
jb
out
xor
mov
adc
add
pop
enter
mov
cmp
rorb
push
insl
xlat
not
adc
jge
imul
or
aas
cwtl
mov
arpl
inc
pushf
lcall
mov
mov
dec
test
movsb
inc
daa
sbb
fadds
cmpsb
mov
popa
shrb
into
imul
push
aad
xadd
push
lret
out
dec
insb
push
fcmovnbe
jae
and
into
idivl
mov
adc
popa
mov
inc
popf
sti
fcoms
inc
test
push
inc
call
popa
and
jp
or
inc
cwtl
pop
call
xor
ss
or
inc
or
test
mov
adc
scas
jmp
gs
add
mov
push
enter
sbb
lcall
add
add
movl
rcll
push
add
insl
iret
repz
imul
jne
mov
sub
out
mov
adc
sub
je
sbb
xlat
mov
in
xor
pop
jmp
xchg
lea
dec
jb
pop
pop
adc
cmp
cmp
xor
stos
movsb
push
mov
enter
and
std
fs
lock
inc
pop
je
cmp
jg
jmp
cmp
xor
int3
dec
ret
incl
cmc
xchg
mov
sti
adc
int3
jne
mov
inc
cmp
mov
fbstp
movsl
rcrb
jmp
pop
cmp
in
add
fadd
jno
sbb
sub
jg
xchg
dec
fdivrs
jne
inc
inc
cli
jge
cmpsb
xchg
mov
inc
fwait
gs
lcall
insb
aad
push
addr16
xor
cmp
fisubl
outsb
addr16
addr16
lret
xchg
push
scas
inc
or
cld
jbe
mov
jmp
cmpsb
sub
icebp
repnz
decb
mov
push
dec
xor
and
sbb
in
insb
adcl
cwtl
shll
ds
dec
and
inc
lods
xlat
mov
xor
pop
loop
fsubrs
or
ja
adc
sti
iret
addb
ret
mov
xchg
cmpsb
mov
mov
leave
shl
mov
pop
fucomip
imul
ret
vunpckhps
mov
shl
testb
sbb
dec
mov
ja
rsm
push
adc
test
clc
loop
test
cs
pop
mov
call
lcall
mov
mov
clc
ljmp
push
iret
xorl
inc
mov
jmp
sub
xchg
cli
int
xchg
sbb
xlat
sub
cmp
jae
repz
xchg
pop
in
jne
rorb
mov
jbe
and
jg
cld
sbb
bound
fstp
or
clc
cmp
inc
imul
out
and
mov
ljmp
sbb
add
push
add
cmpsb
xlat
jns
lock
imul
dec
insl
xor
xor
cmp
jno
push
jne
dec
dec
clc
lahf
shlb
jmp
mov
xlat
lods
mov
mov
dec
in
out
fildll
sub
and
or
sub
imul
jo
jb
dec
mov
jbe
pop
iret
icebp
sub
or
xchg
jge
mov
in
push
aad
popf
adc
shl
inc
cmp
in
mov
addr16
or
scas
daa
icebp
das
andl
push
sarl
mov
pusha
cmp
push
jae
lds
loopne
mov
xor
sbb
pusha
dec
daa
jne
pushf
inc
jb
pop
lds
sti
pop
fdivs
lret
dec
sbb
icebp
inc
adc
inc
dec
mov
and
dec
push
adc
loope
inc
cs
cs
cmp
push
xchg
or
popa
ss
cltd
jne
aas
push
jp
out
gs
mov
jge
cmpsb
roll
lahf
fisttpl
retw
rorl
jp
push
out
cmp
in
or
add
xor
sti
sub
jne
call
cltd
arpl
pop
daa
and
je
xchg
stos
xchg
jp
push
outsl
ss
or
or
gs
mov
dec
mov
lods
sub
cmp
in
loop
push
fcompl
cwtl
mov
sub
dec
inc
xor
popa
rcl
xchg
popf
inc
xlat
repnz
cmp
in
dec
or
sub
inc
ljmp
push
inc
ja
jmp
add
xchg
pushf
nop
jb
jg
xchg
cmp
stc
out
adc
outsb
ljmp
repz
rcll
pop
mov
push
fld1
loope
andb
inc
ret
add
mov
andb
pop
jg
iret
pop
push
mov
mov
stc
adc
jne
add
push
sub
add
sub
js
dec
pop
dec
adc
sti
jmp
fcoms
mov
inc
add
xor
xchg
sahf
xchg
push
add
pop
leave
out
add
add
push
loopne
inc
dec
sbb
push
mov
addr16
mov
and
scas
cmp
cmc
icebp
pop
dec
fbstp
dec
xor
in
insb
inc
rep
je
arpl
iret
loop
lea
add
push
loop
mov
movsl
pop
fninit
add
sub
sbb
and
jmp
inc
add
xor
mov
aaa
iret
sub
cwtl
addr16
dec
mov
test
bound
add
test
movsl
mov
xchg
xor
lods
mov
int
xchg
cld
pushf
inc
stc
ss
push
jecxz
sahf
scas
out
dec
mov
mov
jle
mov
mov
adcb
js
mov
or
popf
ret
mov
mov
jp
push
mov
jb
and
jl
fdivrl
jnp
cli
add
or
push
jns
mov
ds
ds
sahf
ds
jge
cmp
decb
inc
sub
or
add
add
jnp
js
repnz
arpl
sub
cmp
mov
popf
jbe
mov
dec
pop
lret
sahf
sbb
xlat
dec
les
xchg
ljmp
test
ja
aas
ljmp
cs
test
sub
ss
xor
mov
in
inc
dec
cmp
lods
jmp
jno
push
rclb
xor
incb
nop
lods
mov
mov
ret
or
dec
cmp
pop
cmp
sbb
add
fadds
in
jecxz
orb
fldenv
inc
add
fs
push
shlb
push
outsl
adc
jb
into
dec
fwait
ret
fstpl
dec
xor
xchg
adc
test
or
fsubp
dec
cmp
mov
adc
mov
add
arpl
add
test
sbb
push
adc
inc
xchg
roll
fstps
aas
fnstcw
or
insl
into
mov
cltd
test
xlat
out
push
push
mov
sbb
push
mov
and
mov
test
pop
popa
xchg
mov
setne
insl
inc
pop
sbb
add
leave
fwait
xchg
inc
fbstp
call
mov
loope
jne
pusha
nop
xor
dec
rolb
xor
xchg
in
popl
mov
or
outsb
pop
idivl
gs
cli
mov
je
and
out
nop
mov
lret
dec
insb
addl
pop
sub
mov
xor
inc
imul
je
in
lcall
dec
cmpsl
adc
jg
jno
push
mov
inc
add
movsb
int
pavgw
pop
mov
gs
test
inc
jl
and
jp
or
adc
shlb
into
xchg
and
shlb
mov
add
mov
xchg
jmp
add
int3
push
scas
xor
mov
enter
repnz
jg
je
shrb
popa
cmc
fs
mov
jg
invd
scas
or
dec
dec
movsl
push
je
dec
mov
call
push
inc
in
add
lcall
icebp
ret
jno
push
gs
cs
push
dec
mov
xor
dec
mov
dec
inc
or
mov
cmc
notb
push
cmp
popl
xchg
or
lods
daa
mov
fidivrs
sbb
xchg
xor
rclb
cli
shll
xor
xchg
test
in
sub
or
mov
and
iret
repz
pop
xchg
mov
fisubs
lods
jnp
xchg
fldenv
pop
insb
popf
jne
or
mov
inc
ss
cs
lock
add
adc
mov
jo
hlt
xchg
dec
jp
dec
push
push
fisttpll
add
push
lret
rcll
sub
pop
cwtl
pop
aas
xor
ds
push
mov
adc
push
xor
lahf
fildl
cmp
add
ds
cmp
xchg
cmp
fadd
inc
jnp
pop
inc
movsb
mov
adcb
inc
add
loop
fs
inc
push
mov
icebp
lcall
aad
dec
push
xchg
jne
rcrb
jecxz
xchg
mov
cmpsl
inc
xor
sub
repnz
int
jp
repnz
push
xchg
jb
add
sub
pop
clc
mov
loopne
movsl
jno
cmp
insb
pop
and
push
arpl
repnz
adc
std
dec
inc
jae
sbb
ja
jbe
mov
shlb
aad
add
mov
or
rcrb
rcr
shrb
fldt
adc
mov
add
subl
or
sub
mov
idivl
jg
loop
mov
push
push
sub
xchg
imul
mov
xchg
dec
lahf
lods
out
jge
test
fidivrs
add
out
xchg
add
call
repnz
stc
pop
pop
push
cmp
xchg
and
push
insl
or
into
xchg
sub
test
loop
sub
jbe
lea
imul
mov
dec
dec
imul
loop
jge
inc
dec
and
ficomps
popf
inc
pop
mov
push
incl
lods
das
ficoms
adc
or
push
hlt
inc
aaa
das
pop
add
int
nop
in
icebp
je
jp
pushf
movsl
sub
push
ss
test
mov
xlat
stos
or
cmp
nop
cmpsl
dec
pop
shr
mov
sub
mov
mov
enter
pop
inc
xor
fcoml
inc
jp
inc
dec
push
xor
dec
xlat
iret
mov
adc
xchg
push
push
push
mov
mov
aaa
imul
push
cmpb
out
xor
pop
or
or
movb
cmp
ja
mov
lcall
lods
or
xchg
fsubl
adc
jp
xlat
fsubr
pop
or
dec
jmp
mov
fcom
ja
xor
mov
outsb
cmpl
adc
sub
xlat
add
push
cli
inc
push
adc
push
popa
cmp
lock
add
ret
nop
fadds
in
int3
call
jo
xchg
cld
cmp
popf
adc
std
ficoml
and
inc
enter
out
push
or
or
clc
pop
xor
dec
sbb
les
out
push
mov
and
imul
in
movsb
sub
and
movsb
mov
mov
pop
loopne
ret
sti
outsl
push
and
shl
lcall
fimuls
push
cmp
mov
aas
cs
push
divl
add
mov
scas
pop
cmp
scas
scas
leave
adc
or
dec
sbb
aaa
pop
jmp
jb
inc
sub
inc
push
mov
movl
jle
aad
data16
inc
and
and
xor
mov
xchg
mov
and
jmp
mov
mov
popa
cld
add
popf
cwtl
aam
sub
jle
jmp
xchg
cmc
push
imul
jno
les
aaa
push
mov
or
lret
ret
push
shl
enter
pushf
inc
inc
pop
push
mov
and
adc
lods
gs
xor
clc
dec
mov
stc
xor
mov
mov
jo
addr16
cmp
cmpsl
dec
cs
or
sub
add
push
inc
aam
mov
add
sub
insl
ds
and
push
fistpll
adc
mov
sbb
and
xlat
add
aad
mov
in
cmpsl
arpl
pop
and
mov
push
daa
mov
faddl
jne
sbb
aam
leave
out
gs
call
pop
lret
jge
lock
aad
das
jp
sub
jg
xchg
mov
jg
ja
stos
lods
or
xor
out
iret
movsl
iret
test
aas
mov
mov
and
jg
jmp
sbb
or
xchg
adc
dec
mov
cmp
jp
leave
lods
and
dec
jns
inc
in
cld
ficomps
jns
push
rolb
mov
fcompl
sub
add
loopne
mov
cwtl
mov
fstl
icebp
jg,pn
sbb
cmp
std
popa
sbb
repz
jecxz
in
mov
xor
daa
adc
stc
insl
dec
mov
push
pop
xchg
psllq
and
test
adc
mov
cmc
cmp
inc
and
fidivl
jbe
loope
fwait
inc
jmp
mov
cmpsb
xchg
inc
daa
cwtl
clc
mov
in
inc
xchg
add
inc
xchg
subb
pop
adc
ret
in
out
adc
adc
push
mov
jno
cmpsb
sub
int3
nop
or
sub
pop
jnp
push
or
jo
adc
imul
fs
inc
dec
or
loop
or
adc
xchg
sbb
mov
mov
out
leave
lret
jecxz
fwait
xchg
shlb
jb
sub
add
adc
pop
insb
or
mov
mov
push
mov
mull
inc
sub
rorl
shl
mov
mov
insl
xchg
sub
push
mov
push
mov
pop
mov
fsts
dec
out
imul
xchg
mov
rol
scas
mov
ss
mov
pusha
inc
fsubrs
and
lods
insl
fsubrl
mov
rorb
in
xchg
push
jne
mov
out
inc
push
ret
rcl
adc
lcall
xchg
cli
aad
shll
out
rorl
or
addr16
subb
inc
sti
inc
lods
mov
push
in
popa
cld
in
lods
mov
push
xchg
icebp
addr16
mov
push
sbb
cltd
dec
daa
dec
and
dec
cld
ret
les
adc
mov
pop
mov
cmp
stos
leave
pop
scas
push
dec
lea
xchg
sub
lods
jns
xchg
pushf
jmp
pop
xor
lret
add
std
loop
fldenv
push
pop
in
cmpsb
int3
aam
xchg
fwait
daa
adc
and
loope
mov
nop
test
sub
add
outsb
adc
bound
clc
pop
lret
dec
in
sbb
daa
jae
movsl
cmp
push
stc
popf
loop
and
fs
cmp
out
std
push
ficoms
das
hlt
mov
idivl
bound
mov
daa
outsl
hlt
clc
jne
iret
and
es
fnstsw
addr16
sub
push
push
pop
or
jg
fldenv
and
movsl
js
sub
adc
adc
jns
xchg
es
adc
cltd
add
sbb
outsl
imul
mov
out
cwtl
dec
daa
lret
push
add
rorb
in
addb
je
push
jo
hlt
push
aam
lret
bound
aaa
mov
pop
inc
test
sbb
xor
movsb
mov
mov
outsb
lret
pop
inc
xchg
icebp
dec
pop
or
sti
or
dec
mov
in
gs
mov
xorb
sbb
inc
mov
out
rcll
xchg
fisubs
pushf
mov
repz
mov
jb
rol
sub
lret
aam
mov
pop
cmc
add
cmp
into
push
iret
jnp
mov
int3
xor
dec
add
sbb
push
sub
sbb
mov
xchg
iret
and
sbb
adc
push
scas
mov
jmp
sub
inc
adc
das
pop
sub
add
jb
call
cmpsl
lret
std
xor
outsb
sbbb
test
fisubrl
je
fsubs
sub
subl
cwtl
add
mov
push
repz
cwtl
sub
push
pop
pop
or
psllq
dec
mov
aaa
inc
popa
xchg
lahf
mov
frstor
pop
sbb
ljmp
out
add
das
int
ds
sarl
mov
mov
call
xchg
bound
add
pop
fcomi
fsubp
sub
lods
out
stos
inc
push
push
mov
loop
dec
ret
push
addl
aam
jb
sbb
cmc
in
pop
hlt
add
push
jb
mov
fsubrs
subb
scas
pop
stos
xchg
lahf
cmp
aaa
idivb
adc
cwtl
pop
jl
push
mov
scas
mov
inc
dec
mov
repnz
sbb
dec
inc
call
jle
xchg
repnz
ds
sub
mov
cwtl
ror
mov
adc
aas
pusha
les
cmp
out
rorl
dec
mov
or
icebp
xchg
push
dec
std
cmp
scas
mov
fisubrl
loopne
sub
arpl
orb
shr
push
mov
pop
or
pop
jmp
inc
dec
pop
sbb
sbb
test
in
inc
daa
add
sbb
stos
cmc
repnz
jle
push
arpl
sbb
testl
imul
cli
insb
dec
xchg
inc
inc
jns
sbb
fcompl
leave
inc
mov
dec
mov
xchg
aaa
or
xchg
adc
inc
in
cmc
xchg
pop
sub
out
and
sahf
xchg
ja
xor
fnstsw
cmc
inc
pop
ret
fs
test
test
lock
lods
outsl
pop
and
pop
out
imul
out
push
xor
fstpl
mov
inc
adc
fsubrl
adc
cwtl
xchg
jmp
jge
sub
sbb
gs
lret
fs
pusha
jge
insl
clc
sub
push
out
aam
push
sub
sub
lret
lods
xor
add
sbb
adc
or
dec
add
adc
lods
mov
push
sbb
push
inc
jns
push
jo
loope
xlat
loop
lret
push
aad
decb
ljmp
push
jae
push
mov
jmp
mov
stc
mov
faddl
add
je
ret
inc
inc
jp
and
sub
pop
scas
lahf
mov
clc
mov
push
xor
icebp
ret
lock
jne
cmpxchg
push
mov
mov
mov
std
test
jge
add
popf
push
movsl
pop
repz
cmp
int3
icebp
test
jmp
sub
sbb
outsb
adc
loop
mov
mov
push
test
rorb
stos
jns
push
es
push
lods
rorb
adc
lods
ret
sbb
inc
cmpsb
movsb
int3
lock
xor
push
outsb
popf
out
mov
test
mov
push
bound
fdivrp
push
cmp
fs
and
inc
out
lods
xchg
ds
sbb
push
or
aaa
cmp
fdivrl
out
mov
pop
mov
test
sub
inc
addr16
imul
cltd
int
scas
or
and
aas
ret
pop
add
push
in
add
loop
xchg
fxam
mov
dec
jae
push
push
not
pop
pop
loope
icebp
lea
mov
inc
popf
sbb
lret
outsb
out
repnz
aaa
hlt
aas
ret
rolb
inc
rorb
daa
sbb
jp
pop
push
mov
in
mov
movsl
mov
filds
cmpsl
push
idiv
loopne
test
jg
pop
mov
push
pop
or
xchg
cwtl
inc
data16
test
out
hlt
loop
negb
movsl
ret
sub
push
scas
stos
sbb
jo
xchg
and
inc
fcmovu
mov
pusha
ret
loope
xchg
adc
or
movsl
jne
jbe
hlt
out
mov
mov
lahf
clc
dec
cld
mov
mov
in
xchg
xchg
cmp
stc
ja
aad
sub
popf
push
std
ret
pop
rorb
sbb
add
pop
push
shlb
dec
lock
xchg
mov
loop
jb
push
adc
xor
jne
and
and
push
rorl
mov
mov
cmpsl
call
repz
add
dec
rorl
mov
fiadds
inc
popf
outsl
add
or
fldcw
ds
or
into
jle
and
pop
sahf
mov
fdivrs
into
sti
loope
and
fwait
or
notb
sub
add
inc
jl
push
movsl
jmp
cmc
mov
pushf
or
mov
fs
jecxz
sub
ss
pop
outsl
cmp
push
mov
icebp
cmpsb
or
sbb
jno
pop
cwtl
pop
cltd
mov
xor
push
sub
test
sub
addr16
adc
int3
shll
dec
push
or
fdiv
lret
mov
push
xchg
filds
stos
mov
scas
in
jnp
inc
push
add
aaa
data16
test
fistpl
sbb
rcr
bound
test
sbb
pop
mov
icebp
jge
add
jne
dec
ljmp
mov
jp
cld
mov
add
movsb
mov
jb
mull
addl
ret
shll
push
xchg
cwtl
inc
push
jne
mov
sub
dec
cs
xchg
popf
aad
add
dec
icebp
jmp
xor
mov
daa
shlb
cmpsl
aas
adc
mov
adc
xchg
fucom
mov
inc
sub
jmp
add
arpl
sti
aad
mov
int
lock
loopne
cvtdq2ps
enter
lret
pop
cmp
cs
imul
addr16
es
sti
inc
push
iret
outsb
xlat
insb
jbe
cwtl
pop
sahf
fwait
xor
out
lock
sbbl
pop
xor
cmp
loop
inc
add
adc
jl
ds
xchg
insl
mov
fcoml
and
pop
rorl
mov
mov
adc
pop
cli
inc
jnp
mov
xchg
scas
and
scas
pop
inc
sub
repnz
divb
inc
bound
xor
in
lock
int3
add
adc
sbb
mov
mov
shll
or
roll
xor
xor
pop
adc
dec
xor
mul
lock
jle
and
add
enter
cmp
and
xor
add
pop
xchg
push
cmp
cmp
sub
mov
rcll
inc
js
pop
xlat
hlt
sbb
pop
movsl
je
push
cmp
leave
xchg
jle
cs
push
push
mov
lds
xor
lods
test
lock
pushf
jbe
xchg
pop
xchg
push
mov
fimull
cltd
sub
movsb
vsubps
and
and
add
jl
ret
cmpsl
xor
xchg
mov
scas
cs
jo
or
sahf
repnz
or
ds
lock
rolb
push
sti
repz
testb
and
inc
lock
data16
sbb
out
in
repz
mov
or
leave
xchg
jbe
rep
je
sbbl
add
jne
fmuls
and
sbb
fisttps
mov
movsb
jae
jle
pusha
sub
xor
lods
roll
xlat
mov
outsb
push
cmp
fsubp
adc
cmp
rcl
and
aaa
out
or
jge
pop
ficoml
fldcw
and
jmp
xchg
inc
pop
jl
mov
lret
dec
xchg
xchg
jmp
sub
cmp
cmp
mov
addr16
sbb
cmp
out
dec
jmp
into
test
sbb
xor
fcoms
jns
add
xchg
imul
pushf
shrl
xchg
push
scas
data16
dec
and
call
rcrb
outsl
pop
pop
call
loope
xor
rcll
push
clc
mov
inc
xor
or
icebp
dec
jp
mov
je
pop
mov
ss
hlt
fmull
imul
or
out
cmpsb
xor
stos
movsb
mov
jg
enter
mov
lret
cmc
ret
aam
dec
pop
xor
int3
dec
inc
adc
push
in
mov
mov
ficoml
xchg
push
sbb
adc
sbbl
add
add
lods
push
pop
fs
lahf
or
ja
mov
xchg
adc
xchg
das
adc
test
das
repz
lret
nop
jle
sub
nop
push
xchg
cs
xchg
fldt
lods
mov
jae
jns
pop
push
add
andl
imul
rcr
sub
add
subb
es
test
add
fwait
test
fnstenv
int3
je
mov
repnz
in
xchg
popa
out
or
icebp
aaa
adc
nop
dec
add
lods
adc
or
into
jp
cmp
mov
adc
mov
loopne
fsubr
xor
jmp
testb
scas
scas
pop
negb
pop
xchg
push
xchg
test
mov
stc
mov
fmul
cmpsl
fldcw
push
sub
mov
stos
fdivs
or
iret
cmp
add
sub
mov
adc
fwait
and
lock
lret
fiadds
jb
loope
test
push
hlt
stos
cmp
jmp
adc
dec
push
inc
jl
add
stc
push
in
test
int3
cmp
call
les
adc
out
gs
jg
mov
push
cs
lock
aaa
and
cmpb
mov
pop
stc
sub
movsb
or
lods
inc
stos
fs
sub
push
or
stos
add
xchg
cli
jl
inc
stc
mov
out
test
jle
mov
ret
mov
inc
call
jl
test
sbb
inc
dec
ds
sub
addr16
popf
aad
mov
adc
mov
mov
movsb
ret
into
int3
xchg
cmp
out
jmp
push
lock
add
test
push
push
mov
jmp
mov
es
adc
add
clc
mov
sbb
xor
popa
test
imul
sub
inc
call
aad
loop
add
daa
addr16
test
enter
or
inc
dec
clc
sbb
dec
loope
daa
movsl
fidivrs
adc
out
pop
cmp
mov
hlt
xor
mov
fstl
jne
pop
or
aam
pop
lahf
outsb
xchg
jae
addb
loop
mov
cwtl
je
lret
push
je,pt
cwtl
in
pop
pusha
xchg
inc
dec
push
and
fwait
call
aad
in
pop
leave
pop
daa
js
pop
sti
inc
nop
enter
sub
push
popa
ljmp
aas
hlt
jp
bound
lahf
mov
mov
add
jp
jmp
nop
cld
jmp
stos
das
xchg
xor
dec
and
fbstp
mov
insl
mov
popa
stc
jae
daa
jns
inc
aaa
inc
xchg
inc
jmp
adc
dec
subl
push
mov
fdivl
or
in
inc
mov
std
scas
js
cmp
jecxz
ss
dec
pusha
pop
movsl
xchg
iret
dec
dec
movsl
xchg
dec
in
les
dec
cmpsb
push
mov
repz
cmp
gs
mov
and
adc
jecxz
in
test
dec
dec
xor
inc
pop
addr16
inc
push
subb
push
sbb
dec
loop
sub
cli
gs
push
outsl
lret
je
into
clc
scas
dec
cli
and
pop
and
clc
pushl
inc
loopne
xchg
jno
pushf
inc
into
mov
fsubs
mov
std
jno
push
out
fs
cli
push
inc
xor
loop
inc
dec
pop
shll
insl
inc
lds
add
cwtl
mov
dec
pusha
mov
lahf
repnz
xchg
dec
lods
push
test
xchg
jmp
push
clc
pushf
xchg
lods
dec
and
in
roll
mov
cmpsb
push
pop
mov
or
outsb
cmp
cmp
pop
jbe
aad
out
mov
cld
fidivl
lea
call
scas
ja
pop
in
shl
mov
leave
cs
ret
outsl
cmpsl
dec
imul
fiadds
pop
std
call
inc
shll
mov
xchg
and
movsb
pop
cmp
popf
push
stos
outsb
push
dec
sub
enter
pop
call
call
adc
mov
jge
mov
pop
or
lret
bound
xchg
aad
fistpll
and
dec
add
pop
dec
andl
jmp
test
sub
in
testb
add
addr16
pop
ficoms
mov
mov
push
sti
jge
mov
push
jno
push
add
xlat
inc
lcall
sbb
les
mov
frstor
jno
jmp
mov
jmp
xchg
inc
jl
add
sub
sub
test
sub
rcll
outsl
outsb
sub
jecxz
mov
mov
mov
rolb
scas
mov
insb
jge
enter
and
jns
insl
in
add
fistpll
xor
sti
add
sahf
jecxz
insl
xor
pop
or
lock
jmp
push
jns
lds
sti
pop
in
fmul
inc
pushf
xor
pop
popa
fs
out
in
out
dec
ficomps
sub
sub
pop
stos
add
scas
in
in
mov
pop
inc
mov
addr16
fidivs
adc
data16
pop
shlb
adc
in
cmc
stos
fdivrs
inc
fisubs
fsts
jecxz
in
mov
mov
dec
push
fisttpl
shll
int3
mov
push
test
dec
sub
mov
test
xchg
or
inc
test
inc
int3
aam
in
add
sbb
int
pop
adcb
sbb
sbb
push
inc
cltd
hlt
rclb
gs
imul
stc
mov
cmp
sub
testb
fists
aaa
nop
sub
lcall
in
in
lods
pop
mov
adc
push
sub
movsl
jb
mov
or
mov
jp
sahf
pop
shll
call
roll
insl
rcrb
test
add
lahf
ja
in
mov
xchg
pop
dec
jge
push
sub
test
mov
outsb
in
out
lds
stc
mov
jecxz
pop
jge
movsb
mov
jae
lret
arpl
das
sbb
dec
ljmp
stos
jnp
mov
inc
aaa
cmc
rorb
jnp
xchg
add
loopne
cmc
and
mov
mov
into
push
repz
sbb
mov
adc
shll
roll
jl
jns
xor
sbb
cwtl
outsb
aas
xor
sahf
cmpsl
stc
cltd
push
xchg
xor
jmp
add
xchg
push
add
roll
dec
out
icebp
inc
ljmp
and
jb
adc
daa
jle
mov
jp
popf
sub
push
push
push
cli
outsl
faddl
insb
xchg
ss
or
mov
adc
adc
fcoml
push
or
loopne
mov
minps
mov
in
xor
and
into
loopne
stos
je
or
imull
add
mov
scas
cmp
cs
movb
insl
out
mov
cli
sahf
fwait
arpl
stos
mov
fidivl
fiadds
mov
and
loope
out
pop
sbbl
shrl
outsb
les
in
mov
cli
adc
shlb
popa
push
and
cmpb
cs
hlt
xchg
or
mov
adc
clc
iret
mov
inc
incb
mov
in
push
lret
xchg
mov
cld
add
out
pop
movb
mov
pushl
fcomps
nop
cwtl
lcall
cltd
cli
outsb
and
pop
pop
cmp
jg
ljmp
mov
sbb
xor
call
add
sti
gs
jno
mov
mov
cmp
cmc
fsubrp
aad
pop
push
repz
inc
lods
sarl
push
int3
xchg
sahf
iret
cmpsb
sarl
jo
mov
jl
je
adc
xlat
sbb
repz
mov
repnz
aas
push
mov
push
or
arpl
or
and
je
xchg
rcll
mov
arpl
push
jp
cmpsl
into
dec
lea
sbb
and
cld
push
jmp
test
ljmp
mov
lcall
int3
test
arpl
or
rorb
ds
xchg
xor
adc
mov
add
adc
pushf
inc
sti
xor
mov
dec
in
mov
movsb
les
shrb
pusha
mov
bound
xchg
mov
shlb
loopne
pop
stos
mov
sbbl
inc
mov
mov
mov
loopne
mov
out
dec
mov
arpl
xchg
jae
jb
loopne
sbb
pop
push
cmp
push
cwtl
lock
ret
sbb
jge
push
push
dec
rcrb
rcl
lea
stos
scas
and
push
out
jecxz
bound
or
sbb
add
lods
pop
and
ja
pushf
outsl
push
cld
mov
imul
rcrb
lock
mov
pop
dec
popf
addr16
lahf
push
outsb
xor
add
xchg
pop
aaa
xor
and
sbb
sub
dec
fwait
nop
ja
in
add
dec
iret
jp
rol
jns
stc
sti
inc
inc
xchg
jp
adc
sbb
data16
loopne
movsl
adc
inc
es
cmpsb
lods
xlat
lock
repnz
xor
push
repz
movsl
sub
and
loopne
cmp
xchg
or
dec
mov
jne
xor
mov
cmpsb
mov
or
mov
movsl
mulb
mov
mov
push
iret
icebp
pushf
push
jp
sub
and
mov
and
dec
aad
sbb
xchg
or
cmp
nop
imul
cmpsl
scas
sub
ficomps
adc
scas
pop
in
or
mov
xor
pop
mov
imul
imul
pop
out
sti
pop
mov
or
mov
jns
stos
jbe
jmp
xor
rolb
test
adc
jmp
jb
pop
loope
add
out
pop
addl
test
shrb
push
test
mov
cli
add
sbbl
rorb
cltd
out
ja
dec
ret
or
pop
mov
arpl
insl
or
cltd
das
mov
add
pusha
int3
in
aas
mov
popa
lock
or
sbb
gs
test
mov
stos
jmp
mov
scas
add
mov
jne
jl
test
outsb
ret
aam
cmp
cmpsb
test
inc
and
adc
inc
into
iret
les
jns
jne
pop
daa
and
mov
mov
rclb
aad
cmp
pop
lods
popf
divb
stc
into
sbb
sbb
and
daa
xor
test
pop
push
push
mov
push
rcr
scas
xor
mov
nop
sbb
adc
xchg
cwtl
mov
rorb
mov
xor
lods
mov
mov
ret
mov
cmp
cld
push
jnp
push
sub
int
push
sub
xchg
pop
xor
xor
lods
js
movsl
mov
test
adc
mov
sbb
mov
jg
fstpl
movsl
xor
xchg
and
imul
loope
popa
mov
cmc
xor
inc
fptan
mov
push
sbb
dec
or
movsl
fwait
lods
je
js
lods
inc
out
in
or
dec
bswap
fcomps
clc
repnz
pop
scas
jecxz
rcrb
inc
movl
mov
fcompl
cwtl
test
and
mov
or
sub
popf
pop
rcr
adc
pop
xor
dec
in
pop
push
inc
adc
adc
mov
int3
sbb
adc
and
push
sbbb
stos
popa
ret
mov
cmp
mov
xchg
or
jge
mov
xchg
enter
push
lods
idivb
mov
and
mov
pop
aaa
pop
cmovno
mov
sar
pushf
std
mov
jecxz
adc
repz
stos
xor
mov
push
sbb
stos
cmc
scas
adc
dec
popa
movsl
cmpsb
test
mov
ja
ljmp
andb
pop
xchg
and
fxam
fsubrs
xchg
outsb
inc
inc
dec
xor
mov
insl
test
mov
icebp
ss
inc
sbb
sbb
or
inc
mov
or
lret
jl
sbb
fbstp
cmpsb
out
loop
mov
mov
push
jbe
stos
mov
idivb
mov
push
and
ret
stos
mov
and
test
cmc
inc
sub
dec
adc
jle
push
out
mov
aam
cmp
pop
sub
loope
aas
out
dec
dec
cld
push
sub
and
test
sbb
js
fidivs
cld
test
xchg
je
negb
and
rorl
fwait
pushf
sbb
mull
rcr
cmp
stc
out
jnp
jl
roll
fisttpll
outsl
or
jno
adc
inc
sub
popf
inc
gs
andb
lea
adc
shll
xor
fs
test
xor
orb
jne
and
mov
add
loope
mov
push
xor
xor
dec
fstpl
or
mov
mov
dec
fldenv
pop
inc
dec
in
push
cltd
jg
xor
inc
inc
mov
addr16
scas
sbb
cmp
jne
lds
xchg
es
jae
pop
cmp
xchg
stc
ss
inc
lods
cs
inc
out
in
fstl
xchg
aad
pushf
push
xor
lods
aad
loop
adc
or
sbb
push
jb
daa
mov
xchg
hlt
stc
ljmp
xorb
stos
sbb
xchg
gs
popl
jmp
hlt
cmp
xor
inc
xchg
xchg
mov
bound
jae
bound
aaa
mov
shrl
adc
and
fwait
gs
inc
xchg
in
push
cs
adc
pop
xlat
sub
xchg
fucomip
into
pop
mov
icebp
ss
clc
pop
loopne
data16
adc
and
jle
rcll
xchg
push
movsl
dec
xchg
push
inc
divl
mov
mov
fdivs
jns
cmp
push
sbb
daa
xchg
push
adc
mov
mov
or
cmp
jns
prefetch
pop
inc
jl
rcl
pop
push
cmpsl
popa
dec
into
jb
pop
xchg
aam
int
stos
mov
jmp
mov
jmp
push
cs
cmp
call
and
cmp
sbb
sti
pop
jmp
dec
pushf
mov
or
fadds
insl
fadds
mov
leave
push
lahf
leave
test
xor
xor
xchg
andb
test
scas
mov
add
mov
adc
insl
xor
outsb
push
fstpt
xchg
repz
dec
inc
in
pusha
pop
mov
outsb
inc
and
and
fwait
pushf
flds
xor
xor
pushaw
push
sbb
les
mov
insl
int3
stos
test
push
jecxz
dec
imul
iret
adc
jno
das
in
pop
repz
jmp
jl
inc
loope
testl
mov
daa
inc
and
sub
mov
xor
shrl
jo
mov
cli
sbb
imul
adc
jmp
pop
inc
mov
mov
inc
aam
hlt
mov
sti
mov
cmc
movups
jecxz
and
xchg
scas
cld
push
mov
icebp
push
out
ror
adcb
pop
clc
cmp
dec
adc
decb
xchg
scas
mov
dec
loope
dec
daa
jl
adc
push
fnstsw
sub
cmp
ret
popf
dec
mov
and
sbb
add
int
xchg
dec
sub
adc
adc
rcrb
and
cmpsb
shlb
sti
cmp
insb
xchg
sbb
sbb
jno
es
xor
sbb
addr16
fistpl
mov
xor
ja
out
fs
in
mov
dec
dec
or
mov
mov
inc
int
jecxz
push
add
sbb
popl
inc
or
es
outsb
cltd
mov
mov
jno
cwtl
mov
leave
dec
xor
scas
cmpb
notl
mov
xchg
fisubs
push
outsb
stc
cs
jg
mov
xor
movsb
sub
idivl
mov
dec
out
xchg
adc
jecxz
jp
fistl
mov
mov
mov
cmpsl
mov
mov
dec
jo
dec
mov
xor
sahf
push
aaa
pop
int3
xor
loop
mov
fs
dec
sbb
pop
out
mov
inc
ljmp
jne
ljmp
or
or
jmp
inc
in
inc
ljmp
push
dec
ss
push
cltd
adc
adc
cmp
ja
push
loopne
xchg
push
stc
dec
pop
leave
outsb
sbb
out
mov
and
iret
push
adc
insb
je
dec
add
mov
lea
rcll
movlhps
stos
mov
lret
hlt
ljmp
mov
ljmp
mov
pop
insb
mov
xchg
mov
scas
xchg
mov
mov
test
and
cld
rorb
or
mov
or
out
xor
leave
test
sub
push
push
repz
add
aad
jle
push
push
test
xor
add
mov
xor
cmpsl
and
roll
gs
loope
xchg
mov
out
add
fcmovnb
adcl
insl
mov
cmp
sub
dec
sub
movsb
sub
sub
pop
mov
jge
jle
lods
jp
nop
adc
jp
clc
dec
sub
cmp
sub
pop
mov
std
cmp
daa
jle
mov
xor
add
mov
mov
mov
cs
sbb
inc
ds
movsb
ja
insl
icebp
cli
push
lods
test
repnz
lret
mov
xchg
lds
mov
sbb
les
cmpsb
hlt
popl
scas
or
jae
int
fdivr
cltd
sbb
add
adc
mov
cmpsl
lahf
ret
and
jb
fdivp
ret
mov
aam
mov
add
adc
pminub
and
cmp
fidivs
and
and
dec
and
aad
sbb
cwtl
mov
frstor
xchg
and
stc
enter
cmpsb
icebp
adc
cmp
xor
pusha
jg
sub
sub
pop
loope
outsb
and
push
mov
ja
xor
pop
fisubrl
movsb
loop
je
adc
dec
mov
jb
out
xorb
sbb
int
mov
lds
mull
add
bound
nop
pop
cmp
hlt
loop
outsb
cmp
push
cmc
push
in
insl
inc
aam
iret
xlat
fisttps
push
cmp
stos
or
mov
out
mov
in
sbb
adc
xor
mov
out
test
jl
hlt
dec
imul
popf
fadd
and
cmp
insl
xchg
push
test
addr16
dec
pop
sbb
xor
xchg
or
jl
das
push
sub
hlt
and
movsb
cmp
andb
lret
pusha
lahf
pop
jg
mov
loope
mov
mov
inc
fidivrs
faddl
inc
fsubs
pop
fiadds
inc
mov
jne
in
out
mov
addb
or
dec
rol
imul
sub
test
sti
rcll
sub
int3
sbb
pop
xchg
or
rolb
sbb
insb
xchg
pop
out
xchg
clc
jg
mov
add
loop
gs
push
popf
xchg
jecxz
jmp
cltd
stos
loope
das
or
outsb
xchg
mov
aaa
mov
inc
pop
mov
dec
inc
push
lcall
arpl
lret
fisubl
nop
mov
push
cld
jo
repz
jmp
pop
mov
mulb
scas
movsb
data16
fbstp
add
lea
hlt
sub
shlb
and
enter
jecxz
sub
cs
test
push
push
imul
mov
cwtl
or
es
jns
inc
push
or
mov
cmp
insl
and
cmpsb
arpl
and
and
inc
enter
or
and
add
fs
bound
imul
dec
insb
cltd
pop
test
jp
jnp
dec
pop
es
or
jecxz
lods
movsb
inc
out
sar
xchg
pop
or
out
hlt
push
add
nop
mov
inc
jmp
icebp
xchg
sub
jo
int3
or
shrb
negb
out
out
cmpsb
sahf
adc
out
or
fidivl
xlat
or
in
in
gs
jno
mov
push
inc
fwait
jmp
test
lods
enter
xor
push
and
or
addr16
mov
mov
and
adc
stos
mov
iret
cmp
aaa
test
in
mov
jnp
int
push
jg
mov
sbb
mov
popa
jp
sub
inc
or
push
push
sbb
inc
adc
mov
push
int3
out
lahf
test
pop
xchg
xlat
mov
sub
sbb
leave
push
mov
dec
sti
jb
addr16
fadd
jg
stos
stos
sub
mov
sub
inc
repnz
frstor
aas
sub
lods
jb
pop
pop
cmc
test
fwait
and
inc
jl
push
push
stos
push
push
dec
lcall
sub
mov
pop
mov
pop
mov
outsb
pop
mov
fildl
imul
pop
dec
idivb
pop
and
gs
mov
enter
pop
fs
pop
mov
js
push
inc
sbb
iret
into
mov
bound
aad
jg
out
cmp
add
call
js
mov
mov
or
push
insb
and
in
frstor
push
add
adc
in
cli
out
cmp
cmp
es
mov
out
clc
in
lea
rcrl
xor
mov
add
jle
xor
in
sub
enter
dec
push
add
test
mov
movsb
iret
push
xchg
std
cs
icebp
inc
ficomps
push
out
daa
and
cmpsl
or
sbb
pop
lods
outsb
mov
xor
cmp
adc
imull
insl
loope
inc
jmp
pop
add
dec
idivl
iret
and
sbb
jmp
cmpsl
mov
mov
les
adc
inc
xchg
mov
outsl
aaa
xor
mov
push
clc
mov
mov
add
jle
nop
cmp
in
mov
inc
mov
in
or
mov
aad
rorb
subb
fwait
jge
int
mov
mov
sub
fwait
insb
imul
sub
xor
jmp
fwait
dec
sbb
adc
inc
jae
xor
add
incl
stc
daa
xlat
loope
inc
daa
mov
dec
cmc
std
pmaddwd
jb
outsb
cmpsb
outsl
push
push
inc
fsub
lods
xor
sub
mov
in
xchg
add
imul
jne
gs
mov
outsl
loopne
mov
or
std
mov
cs
mov
inc
inc
xchg
mov
cmp
ljmp
lock
and
adc
pop
call
je
sbb
cmpsl
lods
ss
and
sub
scas
push
fucomip
cmpsl
je
lock
lods
push
loopne
mov
sbb
dec
daa
int3
out
cmpsl
imul
test
clc
lcall
aad
fstpl
cltd
sub
cmp
push
pop
sub
repz
xor
xor
lcall
pop
pop
inc
ljmp
fsubp
xor
lret
scas
sahf
xor
add
xor
jae
cmp
movsb
jecxz
jmp
and
xorb
jbe
xor
and
notb
jl
lcall
jmp
add
sbb
cld
mov
xchg
fists
lods
mov
arpl
xor
pushf
sub
jno
ljmp
or
loope
cmp
fimuls
cmc
mov
pop
sahf
ljmp
mov
aad
mul
lds
in
mov
mov
xchg
movsb
cmpb
xor
movsl
aam
insb
mov
inc
adc
xchg
push
cmpl
sbb
stos
cmc
into
xor
mov
mov
outsl
mov
mov
and
jle
outsl
pop
add
push
jmp
roll
sbb
icebp
shrl
mov
shrb
and
lcall
inc
nop
inc
je
xor
pop
lods
xor
in
aaa
mov
sti
fs
fisubl
lds
imul
mov
sub
add
sub
sub
mov
lds
hlt
xchg
inc
adcl
or
fsubs
repnz
adc
stos
pop
imul
inc
cmp
inc
adc
add
ret
cmp
adc
fstps
push
shr
inc
sbb
lds
loop
mov
jb
fwait
mov
push
imul
sbb
pushf
stos
aam
xor
push
hlt
out
in
sub
push
lahf
jnp
imul
adcb
mov
xchg
ret
test
shrl
mov
mov
inc
ljmp
std
dec
aam
adc
std
repnz
insl
lcall
shll
pop
fwait
mov
scas
mov
in
icebp
rcrb
rol
mov
xlat
or
mov
jb
lea
nop
cli
shl
lods
insb
sub
sbb
test
sub
iret
fs
cmc
lods
enter
add
mov
or
sahf
xchg
outsb
addl
pop
jle
mov
addr16
mov
aaa
mov
sbb
scas
push
sbb
orb
add
cmp
jb
xchg
or
xlat
cmpsl
shrb
je
dec
dec
inc
imul
inc
jae
leave
mov
mov
xchg
int3
fs
xorb
pop
jle
pop
repz
jae
cmp
lahf
daa
out
idivb
adc
mov
test
xor
jbe
xchg
cmp
leave
mov
pop
movsb
and
xlat
in
sbb
in
dec
jb
imulb
divb
repnz
inc
leave
jbe
xor
dec
adc
or
repz
je
cld
cwtl
sbb
cwtl
xchg
sub
mov
dec
inc
repnz
jae
and
les
sub
add
pop
jmp
xchg
int3
test
xchg
add
shrb
ljmp
mov
xor
mov
test
jnp
test
jp
cmp
cmp
pop
mov
mov
and
nop
add
jae
bound
push
ret
mov
lret
dec
movsb
mov
adc
dec
jbe
mov
lcall
mov
mov
xchg
sub
aas
add
xchg
xchg
and
cli
jnp
mov
xchg
sti
rcl
mov
push
shlb
lods
pop
xor
or
insb
sub
jo
and
mov
dec
mov
scas
in
sbb
jp
mov
cli
adc
add
xor
aaa
push
mov
stc
sbb
xchg
mov
mov
and
pop
mov
or
dec
lcall
mov
rcl
imul
mov
inc
ficoml
in
jle
and
dec
and
jns
jae
scas
sahf
sub
add
loopne
jae
jnp
out
int
fisubl
rolb
adc
mov
rcll
sbb
popf
inc
cmp
jp
xor
mov
jbe
cmc
sbb
jb
mov
lock
inc
aaa
push
insb
std
fcoms
xchg
or
jmp
pop
imul
fimuls
sub
lret
ja
and
loope
int3
mov
sbb
int3
ljmp
gs
sbb
testl
or
add
add
stc
xor
mov
mov
nop
jnp
fcoms
mov
cmp
push
add
push
ret
fwait
xlat
pop
cmc
mov
lret
pusha
xor
mov
int3
xchg
sbb
mov
addr16
cwtl
mov
sti
dec
clc
negl
jge
xchg
sub
mov
lods
pop
mov
sbb
dec
push
mov
in
jp
dec
sarl
test
and
lahf
repz
add
mov
pop
and
inc
loope
mov
cld
les
nop
mov
inc
scas
cmp
pop
cltd
ljmp
mov
add
mov
sahf
lods
cmp
push
pop
scas
and
inc
inc
add
push
outsl
jg
push
mov
in
or
pop
dec
mov
jecxz
jb
add
dec
dec
xor
fimuls
xor
and
inc
xchg
xchg
jp
repnz
out
stc
dec
les
xchg
pusha
sti
cmp
dec
outsl
sub
andb
fisubrl
or
loope
cli
cwtl
adc
test
pop
sub
mov
mov
in
jns
dec
leave
fmull
loop
in
xchg
mov
or
add
test
xor
fwait
inc
xchg
imul
into
mov
pop
jl
cmp
xor
mov
rclb
ja
or
inc
dec
push
sahf
dec
and
inc
and
cmp
xor
pop
and
fldl
aad
lret
insb
ret
arpl
dec
add
mov
xchg
cmp
inc
sub
add
dec
xchg
jbe
inc
dec
sub
fildll
xchg
nop
cltd
xor
push
fisttpll
adc
xchg
push
gs
enter
jae
adc
jbe
rolb
lahf
imul
pop
adc
push
roll
imul
pop
adc
sub
outsb
rcl
add
movl
fcomp
sub
jp
lods
lea
xchg
xchg
lret
add
in
sbb
sbb
mov
mov
pcmpeqb
push
mov
mov
or
xchg
push
mov
inc
push
dec
sbb
cmpsb
test
mov
mov
push
jbe,pn
mov
cltd
xor
jecxz
and
xchg
daa
adc
add
lahf
pop
sub
or
aaa
outsb
mov
push
pop
scas
int
icebp
xchg
test
and
aas
jno
sbb
mov
push
popf
mov
mov
clc
pop
add
adc
shrb
arpl
jle
not
mov
mov
adc
add
aas
inc
addr16
cmp
mov
fninit
lea
xor
std
loop
jle
dec
xchg
out
xor
push
adc
fidivl
inc
les
mov
sbb
les
pop
dec
mov
divb
mov
sbb
or
pop
sub
dec
mov
sub
cltd
inc
xor
jbe
es
leave
or
lret
mov
cmpsb
rol
lcall
movb
xchg
rcll
push
mov
jno
cmp
fidivl
cmp
clc
pop
jno
adc
loopne
cmp
xchg
lea
sub
movsb
sbb
test
sub
dec
jbe
dec
jp
jle
iret
fimuls
imul
inc
outsb
hlt
mov
mov
add
dec
push
inc
das
mov
lds
push
cmp
xor
sbb
aad
sub
adc
outsl
mov
fistps
cmpsl
inc
mov
pop
push
pop
jmp
pop
stc
and
cli
out
clc
outsb
add
pusha
and
jge
xor
sbb
adc
ror
and
loope
nop
out
mov
mov
cmp
sbb
pop
mov
and
mov
xchg
stos
xchg
mov
push
inc
mov
es
adc
jecxz,pt
inc
pop
xor
push
sub
mov
rcr
out
bound
enter
pop
or
add
sub
add
inc
push
shl
push
loope
in
sbb
jle
std
mov
iret
pop
jecxz
std
out
add
dec
cmp
test
loopne
sub
sahf
aad
xor
aad
pop
or
and
loopne
inc
and
mov
mov
sub
push
push
stc
inc
aam
pop
mov
insl
mov
stos
insl
pop
mov
cmp
add
jmp
cmp
xor
shll
sbb
les
fstl
dec
pop
hlt
mov
stos
xor
into
and
pop
out
testl
pop
clc
icebp
xor
hlt
mov
mov
inc
dec
mov
cmpb
gs
xchg
imul
jp
loope
pop
popf
jmp
dec
ret
cmc
add
into
rcrb
int3
or
jmp
imul
push
cmp
aaa
int
sti
in
sbbl
lock
sub
insl
sub
adc
and
shr
lcall
fildl
push
fstpl
sahf
out
lds
lea
sbb
or
fmull
cmp
push
in
out
cmp
sbb
pop
inc
cld
xchg
nop
daa
lahf
subb
push
xchg
movsb
xchg
out
sahf
scas
in
mov
xor
push
dec
pop
rclb
dec
jg
xor
pop
push
push
xor
aam
lahf
pusha
fcompl
loopne
data16
xchg
or
jmp
mov
xchg
je
out
data16
cli
push
inc
leave
add
cmc
lods
or
inc
dec
insl
jl
pop
xor
sub
stc
std
cs
adc
dec
add
inc
movsb
imul
jmp
sub
sbb
enter
or
pushf
fnstenv
or
cmp
sbb
push
or
fxch
mov
inc
or
push
jae
jmp
and
cmp
fucomi
jle
fdiv
jbe
sub
fisttpll
mov
ret
xor
ja
pop
xorb
mov
fisubrl
adc
or
push
cmp
jge
jnp
sub
popl
call
int
outsb
push
lcall
mov
cmp
jo
mov
push
jnp
popf
push
dec
xchg
lret
jne
or
push
addb
insb
daa
lret
push
std
je
jl
je
mov
xor
aad
jl
xchg
sti
mov
repz
fidivl
rcl
fistl
fisttps
out
add
andl
ljmp
pop
shr
clc
add
shlb
cld
sub
iret
int
add
imul
push
push
cmp
add
dec
leave
daa
movb
imul
fidivl
lock
dec
in
fs
xchg
ret
mov
push
sahf
jp
es
jbe
add
cmp
ss
fcoml
leave
adc
movups
cmpsl
xchg
and
sbbl
inc
mov
pop
xchg
pop
test
xor
mov
outsb
loop
jl
cmp
push
mov
xor
xor
adc
mov
sub
pop
lret
mov
jns
js
cmp
pop
jne
nop
push
mov
scas
jge
sbb
cmp
call
aaa
push
outsb
ljmp
push
or
mov
nop
push
cmc
enter
aad
dec
sti
shrl
cmpsl
push
mov
sub
inc
push
cltd
cmc
bound
daa
add
jp
lea
out
mov
xor
lahf
add
mov
pop
dec
inc
xchg
add
pop
pop
jo
mov
pop
mov
pop
or
lock
mov
jp
xchg
insl
popf
loopne
xchg
sub
jo
test
and
or
jbe
xor
or
cmpsb
sub
out
pop
push
ret
mov
out
mov
push
sub
cmpl
notb
aam
pop
shll
movsl
dec
sbb
cmc
push
repz
addl
sbb
xchg
fcom
inc
or
push
ljmp
mov
gs
fdivl
cs
out
inc
sub
add
inc
mov
daa
sub
ret
insb
in
js
rclb
pop
outsb
cmp
enter
xlat
test
and
das
jmp
and
insl
dec
sbb
mov
xor
inc
repnz
enter
pop
idivl
pop
sub
cwtl
xor
push
std
sub
pop
xchg
push
add
pop
sub
mov
clc
subl
jmp
jb
shrb
or
mov
sbb
push
test
push
cmp
shl
les
shl
jne
jg
test
pop
aas
pop
js
dec
sbb
dec
cltd
add
int3
clc
add
cltd
add
daa
loope
dec
stos
mull
mov
jg
xchg
fsts
inc
jge
mov
icebp
sbb
mull
push
sub
daa
lea
fwait
and
aam
in
add
push
fbstp
inc
movsl
and
cmp
loope
sub
pop
sub
push
adc
pop
xchg
jne
or
push
and
pop
mov
andl
cmp
in
xchg
sbb
bnd
jo
lahf
jmp
sbb
das
sarl
stc
jnp
int3
add
xor
or
jmp
jae
in
xchg
add
jns
out
or
mov
dec
mov
xor
dec
pop
and
sbb
rcll
js
adc
clc
sub
push
loop
pop
pop
and
lar
xchg
pop
mov
push
add
lret
mov
xor
push
ljmp
push
push
sbb
mov
ret
ljmp
iret
and
sbb
jbe
mov
les
clc
sbb
pop
outsb
or
sbb
clc
xchg
mov
sahf
jmp
loope
cmp
ficompl
sub
fildl
xlat
mov
sub
scas
cld
inc
xor
mov
add
and
insb
out
and
cmp
lahf
mov
in
sbb
ret
out
test
inc
test
pop
loop
dec
adc
or
push
out
imul
test
pop
jle
sbb
lahf
out
outsb
test
fmul
push
iret
pop
inc
dec
mov
roll
les
pop
push
ljmp
xchg
jb
push
adc
or
andl
call
jp
mov
inc
in
mov
pusha
lret
pop
jne
jge
xor
aas
cmp
sbb
push
mov
mov
ja
lret
sub
out
orb
xorb
daa
jnp
adc
xchg
arpl
imul
inc
ds
pop
pop
loope
orl
sbb
in
popa
sarb
and
cmp
repz
xor
lods
sbb
fst
xor
xor
out
sub
ret
aad
mov
iret
mov
pop
rcll
mov
clc
int3
nop
lds
imul
add
sahf
stos
mov
push
fwait
mov
lods
adc
loopne
scas
enter
popa
cmpsl
sbb
loope
ja
adc
pop
cmp
cmpsl
negl
int3
int3
lea
stc
push
loopne
or
add
inc
adc
test
sub
mov
imul
and
loope
std
gs
push
pusha
test
mov
test
roll
popa
outsb
scas
mov
inc
cmpl
lahf
xchg
cwtl
hlt
inc
aam
sbb
mov
pop
cwtl
fcoms
mov
sub
mov
and
sbb
mov
pop
dec
ljmp
out
jp
push
add
rcrl
hlt
stc
loopne
and
das
nop
mov
orb
mov
jge
add
and
adc
xchg
out
inc
inc
rol
sahf
jg
cwtl
sbb
sub
mov
clc
sub
inc
js
mov
dec
inc
mov
faddl
dec
xor
bound
inc
sub
xchg
test
pop
mov
pushf
xor
mov
test
je
in
pop
dec
jnp
adc
lods
xor
dec
js
cmpsl
xchg
lcall
insl
fisttpll
and
out
push
add
aam
repz
outsl
out
gs
add
arpl
mov
fimuls
xor
adc
push
aam
pop
or
call
mov
adc
data16
dec
dec
dec
add
gs
mov
in
xchg
mov
mov
pop
ficompl
mov
sahf
sbb
in
mov
rcrl
jnp
loop
mov
xor
mov
je
outsl
shl
dec
in
hlt
stos
inc
shl
or
fs
cmp
cld
std
inc
and
aaa
adc
int3
inc
leave
pop
jb
pop
out
cld
std
test
dec
les
fxtract
outsl
push
icebp
loopne
popf
xchg
cmp
push
mov
out
jbe
popa
out
in
jmp
adc
sahf
mov
lcall
and
push
cmp
sti
lock
xor
and
xchg
dec
fists
jecxz
mov
rorl
add
aad
and
insl
xor
push
jecxz
into
mov
lahf
cltd
mov
or
lea
adc
lret
push
cs
lea
and
push
dec
mov
sti
jmp
call
cmp
jp
mov
pop
js
xchg
scas
inc
mov
fcomps
xchg
pop
lahf
stos
rorl
or
fiadds
fldl
leave
sbb
popa
add
mov
and
or
or
std
psrlq
addr16
mov
mov
movsb
mov
cmpsl
sarb
jmp
inc
xor
mov
leave
and
and
std
mov
xchg
movsb
call
loop
insb
out
pop
jg
cwtl
dec
sub
mov
or
or
aad
roll
or
push
adc
and
iret
xor
or
xor
pop
mov
jae
mov
cmp
pusha
out
scas
sub
add
lret
arpl
cmpsl
and
pop
xchg
and
mov
sub
pop
mov
jae
repz
adc
push
jb
xchg
pop
adc
loope
sub
movsb
fistpll
mov
orl
sub
cmp
xor
leave
push
add
push
jmp
inc
outsl
jo
xor
loop
inc
mov
dec
push
scas
mov
jns
and
jnp
lock
dec
pop
mov
mov
shrb
jb
cmp
cmp
push
clc
sbb
ljmp
xor
jns
shll
fidivs
mov
pop
mov
data16
push
adc
pushf
push
std
insl
aad
sub
outsl
stos
fisubrl
pop
mov
nop
iret
leave
es
das
test
out
inc
pop
jae
rorb
arpl
jae
pop
add
jo
decb
jg
sbb
push
mov
test
xor
sub
imul
sbb
push
push
inc
mov
pop
pop
lea
cmp
xor
cmpsl
scas
cmpsb
xchg
xchg
dec
or
outsb
or
mov
xchg
sbbl
mov
fidivrl
push
or
movsl
pusha
aad
sub
fsubrs
mov
js
stos
inc
add
push
sbb
jp
fldcw
adc
mov
adc
sbbl
or
mov
mov
cmp
pop
arpl
fwait
push
fldl
adc
mov
mov
sub
xchg
test
or
mov
fadd
pop
sub
je
imul
push
mov
jbe
and
roll
loope
cli
out
and
pop
ss
mov
sub
es
enter
jecxz
dec
jmp
or
lods
xor
ret
hlt
mov
lea
gs
out
add
sbb
pushf
bound
adcl
jae
fcoml
adc
add
cmp
insb
cli
js
mov
hlt
test
push
xchg
cmpsb
rdmsr
and
shrl
fadd
xlat
repz
xor
and
sub
dec
pop
dec
es
cli
jne
rclb
in
dec
push
aad
mov
mov
xor
mulb
jmp
pop
lahf
mov
cmpb
push
jmp
dec
mov
pop
push
xor
rcll
dec
xchg
sahf
call
and
xchg
jl
outsw
ret
out
mov
rcll
mov
in
rorb
or
mov
loopne
mov
push
cmp
rcrb
dec
cld
mov
jmp
mov
test
mov
lock
sbb
arpl
es
pop
les
pop
adc
push
pushf
dec
xchg
andb
fwait
xor
mov
into
xchg
inc
popa
xor
adc
jecxz
nop
sub
and
hlt
stc
movsl
dec
daa
mov
mov
adc
adc
out
insb
repnz
jns
jl
jae
je
inc
outsl
hlt
pop
push
adc
mov
push
mov
pop
xchg
xlat
lea
mov
daa
loopne
dec
ret
dec
mov
sbb
inc
add
gs
xchg
ret
sbb
das
mov
rorb
das
add
mov
pop
daa
cmp
push
sahf
or
adc
pushf
arpl
mov
lret
ss
mov
fwait
sbb
sub
lret
stc
insb
clc
pop
push
xchg
and
jnp
ss
push
out
jecxz
adcl
mov
scas
roll
jg
xor
pop
xlat
out
test
nop
mov
imul
lods
or
insl
pop
js
add
mov
dec
ds
dec
lahf
mov
push
xchg
cmpsl
rcl
pop
inc
dec
sbb
aam
in
jae
push
push
jecxz
out
jmp
or
data16
pop
imul
jns
add
xchg
js
pop
xorl
jmp
inc
sub
jecxz
add
xlat
sbb
flds
cmp
jnp
out
je
inc
sarb
add
jecxz
push
mov
adc
stos
mov
lea
add
les
outsl
cli
add
mov
into
sub
xchg
cli
imul
scas
push
inc
rcrb
nop
jge
bound
add
fcompl
mov
roll
stos
sti
addr16
or
or
xchg
lea
push
popa
ljmp
push
inc
pop
inc
mov
push
push
sub
dec
jl
icebp
dec
pop
push
cld
scas
pop
insb
scas
mov
inc
iret
fwait
repz
outsb
mov
das
cltd
jno
std
fmull
loop
mov
push
jle
mov
cmp
sbb
pop
pop
clc
into
push
mull
notb
cmpsb
lret
out
dec
mov
cli
movsl
cmp
adc
lock
imul
cmp
lret
data16
rcll
xchg
xchg
push
pop
icebp
orl
dec
ss
mov
lods
cmp
adc
iret
push
cmpsb
ljmp
push
sti
test
inc
xchg
outsb
pop
aas
out
pushl
dec
cmpsb
filds
pop
les
dec
adc
data16
faddl
xchg
push
int3
pop
push
mov
fs
cmp
roll
popa
outsb
mov
ja
mov
popf
imul
sub
push
scas
lods
push
aaa
push
xchg
mov
mov
mov
imul
or
imul
mov
sahf
inc
je
inc
cmp
pop
stos
fs
insl
lahf
leave
inc
fldenv
pop
loopne
pop
add
sbb
dec
enter
fists
jb
or
out
test
sti
pop
cmp
jo
pop
sub
aaa
adc
xchg
in
xchg
insb
push
xor
ds
and
popa
inc
cmpsb
cmp
pop
es
popf
sbb
pop
out
shr
inc
cmpsl
add
cli
ljmp
outsl
push
mov
or
in
popa
mov
cli
jno
subb
cmc
fmull
movb
ret
into
sbb
cmpsl
ja
jno
fisubrl
xor
stc
mov
push
push
dec
xchg
sarb
mov
ja
es
addr16
xchg
ljmp
adc
fidivs
addr16
xor
lock
xchg
mov
xor
adc
popl
mov
repz
cmp
loopne
je
shrl
push
cltd
mov
adc
xchg
pop
dec
sub
mov
cmp
popa
cmc
push
aaa
xor
sti
mul
cmc
cwtl
ret
outsb
orl
fcoms
or
push
out
inc
dec
loope
dec
mov
shll
adc
inc
pop
dec
jne
cld
dec
push
xlat
cmp
inc
jg
cmp
and
rorl
xchg
cmp
add
test
int
pop
or
cs
ja
dec
pop
cmp
inc
orl
jno
inc
mov
dec
repz
scas
push
sbb
mov
insl
movsl
cmpsb
dec
push
aas
call
test
add
cmp
js
leave
loopne
dec
xor
sti
xchg
out
dec
add
jmp
lret
xchg
in
aad
divb
stc
jle
sbb
fmulp
sub
mov
inc
aad
mov
fidivrl
jo
andl
ss
cld
xor
icebp
mov
ja
fildll
bound
fcomp
rcrl
negb
iret
sbb
and
adc
xchg
mov
pop
xor
mov
add
or
fdivr
mov
out
pushf
jp
ss
or
sbb
pop
divl
ds
and
add
out
rcll
cmp
cmp
jno
ret
inc
daa
inc
sub
xchg
int3
adc
inc
lret
adc
add
xor
stos
inc
rcl
imul
cmp
addr16
dec
in
xchg
and
xor
cmpsb
jle
mov
scas
push
push
xlat
out
mov
cmp
and
das
addr16
pop
cltd
icebp
subb
gs
sbb
mov
fsts
int
sar
add
popf
insl
cmpsb
and
xor
jns
cs
mov
adc
and
fiadds
sub
fistl
scas
hlt
mov
push
jbe
sub
add
jg
imul
repz
sbb
in
and
lods
xchg
lea
test
mov
cmp
data16
push
cmp
ja
imul
pop
inc
aam
hlt
ret
xor
fstps
jge
pop
add
das
add
dec
push
sub
add
and
xor
pop
xchg
dec
mov
out
inc
sbb
xor
mov
in
lea
push
adc
jne
add
repz
movsl
and
xchg
dec
or
stos
fldcw
sub
loopne
movl
lds
cltd
scas
popa
icebp
push
pop
mov
dec
pop
stos
xchg
dec
popf
rcrl
imul
fistpl
sub
push
jbe
fnstcw
xchg
call
xchg
in
mov
dec
pop
adcb
or
popw
mov
jmp
push
push
add
xchg
cmp
nop
or
test
cmpl
push
orb
popa
pop
ret
mov
scas
scas
out
int
nop
outsb
cld
lret
and
and
mov
fistpl
xor
xor
sbb
into
adc
cwtl
fbld
xor
jae
jge
imul
mov
adcl
cmp
add
aad
inc
xlat
call
iret
mov
dec
out
insl
push
cmp
or
xor
add
pop
dec
fbstp
lods
inc
popf
pop
pop
jo
sub
fiaddl
mov
add
fsubl
mov
stc
in
cmp
mov
mov
jg
arpl
insl
xchg
stos
pop
push
pop
fnsave
mov
or
or
mov
jl
jecxz
loope
xlat
push
fldt
inc
ret
not
adc
es
jbe
pop
sbb
or
out
xchg
testb
cltd
int3
les
or
add
sarl
push
jle
dec
pushf
insb
je
ret
popf
test
inc
mov
mov
js
pop
aam
xchg
fadds
repnz
aas
addr16
lock
inc
lock
imul
or
hlt
or
imul
and
shl
mov
pop
adcl
jmp
aad
lock
js
xchg
pop
xchg
adc
inc
outsb
mov
fnstcw
in
jno
mov
mov
out
lods
adc
mov
scas
popa
lahf
ret
imul
aas
mov
leave
sarl
sbb
fmulp
inc
cmp
mov
inc
mov
cmp
mov
jp
bound
mov
xchg
fwait
cli
xor
into
xor
aam
xor
les
jb
cmp
ret
loopne
test
fbstp
sbb
imul
xchg
lea
testb
pop
icebp
test
lret
mov
sbb
ss
in
ret
outsl
repz
cwtl
popf
dec
jl
push
enter
mov
es
and
fbld
ljmp
xor
xchg
add
mov
sbb
cmp
repz
jp
aaa
cli
and
pop
pop
cli
popa
int3
cwtl
imul
mov
out
mov
je
arpl
int
addr16
stos
cmp
mov
movsl
mov
fnstsw
and
or
jno
iret
sub
cmp
or
mov
xor
xor
adc
ret
jnp
and
adc
and
sbb
call
leave
ss
imul
fmull
jnp
sub
lods
or
jo
dec
jnp
jmp
mov
insb
jg
jg
es
sub
pop
or
in
cli
aam
test
movsl
pushf
jp
sbb
jne
sub
in
int
inc
aaa
das
shld
pop
add
mov
inc
jo
inc
stc
movsl
andl
jge
cmp
adc
cltd
sbb
sbb
add
out
and
adc
out
xor
xchg
addr16
aas
leave
dec
sbb
movb
pop
pop
out
and
sub
jl
jb
sbbl
outsl
jmp
cmp
pop
in
mov
cmpsb
sti
push
xlat
subb
aas
jne
ds
test
cltd
push
sbb
and
movsb
and
fcmovne
and
xlat
aad
xchg
nop
ja
sbb
call
jg
inc
outsl
dec
mov
and
hlt
mov
sbb
mov
in
mov
sub
pop
in
jmp
cmp
test
lret
in
sahf
sbb
pop
push
loope
std
lds
daa
test
mov
subl
sbb
cmp
jmp
or
mov
cmpsl
inc
dec
aam
jb
enter
jns
xor
xlat
sub
pop
lock
push
sub
movsb
sub
dec
jo
and
xchg
lret
lret
inc
sub
mov
lods
repz
cld
mov
mov
sbb
cld
repz
cmp
inc
mov
push
test
pop
je
test
push
dec
xchg
ret
pop
push
xor
nop
sbb
mov
inc
int3
icebp
xor
fdivl
push
jge
mov
test
xor
pop
shl
xor
cmc
jle
cmp
pop
push
lock
popa
and
cld
mov
aam
push
es
pop
mov
jmp
std
add
or
mov
call
add
mov
out
mov
mov
sbb
test
or
in
dec
push
mov
iret
pop
mov
jmp
jmp
jg
and
sysret
mov
lods
and
jnp
jne
stos
push
in
pop
sbb
lods
popf
jns
jl
vpperm
and
out
loop
rorb
sub
inc
xchg
sahf
mov
imul
adc
mov
inc
into
imul
jno
rcl
xchg
inc
jns
mov
ss
mov
add
xchg
inc
imul
or
orb
jns
lea
shl
dec
sub
mov
fildll
or
ljmp
sub
hlt
mov
int3
test
cmp
jnp
cli
fcmovb
inc
xlat
loopne
cmpsl
xchg
adc
std
repz
imul
dec
in
js
popf
fimull
mov
and
add
cmp
cld
jmp
jo
and
gs
dec
cmp
aam
mov
jge
popa
sbb
adc
add
nop
cmpb
inc
stc
loopne
fisubrs
ficompl
adcl
popl
icebp
dec
out
aam
ja
jae
call
mov
mov
jmp
jb
xchg
inc
xchg
fisubrl
pusha
cmp
lock
les
push
and
xor
dec
shrb
or
xor
sub
iret
jp
adc
imul
loopne
lods
mov
mov
fbld
cwtl
or
fcmovbe
mov
sbb
cmc
adc
inc
sbb
or
and
pop
lcall
pop
push
add
loopne
mov
in
lret
push
and
cmp
sbb
bnd
sbb
dec
push
dec
sahf
cli
cmp
rcrl
xor
jl
mov
std
iret
fdivl
je
aas
nop
pop
in
pop
imul
fiadds
and
sbb
in
cmpb
fscale
testb
jbe
jbe
js
xor
xor
mov
or
xchg
ja
dec
xor
into
add
mov
xchg
mov
sub
test
cmpsl
arpl
pop
push
clc
mov
aad
xlat
mov
or
dec
daa
adc
clc
repz
hlt
push
pop
scas
ja
sbb
mov
add
insl
imull
adc
gs
and
jne
lea
imul
pop
or
sub
adc
inc
add
sbb
daa
stos
mov
inc
inc
jb
fisubrl
add
xchg
stos
subb
dec
test
mov
fcomps
pop
lock
call
xchg
push
add
rcll
or
in
cmp
pop
out
and
xchg
jmp
lods
jns
pushf
loopne
bound
push
mov
popf
mov
test
mov
or
mov
iret
xor
ja
into
push
out
test
push
jl
mov
test
scas
lods
fistps
jbe
mov
dec
lahf
sub
mov
xchg
daa
movsb
sub
mov
push
pop
shrl
sub
dec
je
or
jae
jne
lahf
in
divl
and
jecxz
lret
mov
jae
mov
dec
add
jecxz
jp
adc
bsr
insb
fsubr
push
in
lcall
pushf
icebp
enter
xor
fstl
sub
data16
into
roll
fcmovbe
pushf
loopne
xchg
nop
inc
scas
push
push
push
xor
xor
and
mov
ja
pushf
pop
push
loop
or
outsb
add
xchg
jge
dec
prefetcht0
push
js
xor
cmp
mov
gs
je
adc
mov
dec
repnz
lds
adc
and
stc
and
sarl
out
xor
shr
pop
mov
jbe
cmp
jnp
cli
rcl
or
xor
into
scas
jbe
icebp
pop
xor
aas
nop
sub
jge
flds
inc
frstor
sbb
repz
lods
cmp
lcall
mov
dec
in
movsl
jne
shrl
xorb
pop
jecxz
sti
shlb
addr16
enter
out
mov
dec
lret
or
pop
ss
and
or
sbbb
int3
mov
mov
or
loope
inc
xchg
rcrb
cs
insb
leave
ja
enter
mov
rdpmc
push
hlt
pop
push
sbb
test
out
lret
xchg
js
xchg
add
mov
adc
inc
mov
imul
pop
cmp
mov
xlat
xchg
mov
std
pop
dec
sbb
je
cmp
sub
xchg
movsl
pop
out
sbb
push
mov
leave
ss
cmpsb
pop
dec
push
jmp
push
jecxz
mov
mov
ja,pt
int
cs
jns
inc
shrl
xor
mov
and
pop
imul
xor
xor
mov
pop
dec
push
xor
xor
test
xchg
out
mov
dec
shrb
ret
cmp
movb
sar
mov
push
or
int
movsb
xor
int
mov
inc
jo
or
fistpl
inc
ficoms
xlat
adc
add
cmc
stc
repz
aaa
push
decb
std
fucom
cs
test
jns
sub
aas
jge
adc
pop
cs
mov
pop
subl
cmpsb
inc
mov
adc
fcmovu
sbb
fdivrp
or
mov
rclb
inc
dec
icebp
cld
sahf
mov
mov
test
in
mov
xchg
loopne
and
clc
out
mov
cmp
mov
jp
ret
inc
into
movsl
nop
test
cmp
mov
jns
test
adc
jmp
xadd
outsb
push
push
mov
ficoml
xchg
clc
xor
push
cmpsb
dec
rcll
sti
cmpsl
insl
inc
mov
mov
fs
lods
mov
xlat
or
icebp
jle
outsl
mov
das
fadds
int3
arpl
repnz
dec
movsl
sbb
addb
popf
xor
adc
sbb
push
push
iret
bnd
cmpsl
mov
stc
sarl
mov
xchg
add
mov
pop
out
cmp
sahf
in
call
mov
loop
push
repnz
add
add
hlt
push
int
mov
jp
shlb
lret
push
clc
int3
sub
shll
push
arpl
push
cmp
mov
inc
xchg
cltd
jle
jle
ret
faddp
gs
or
lock
mov
in
push
mov
pop
jae
jne
mov
inc
lods
jg
lahf
rcl
fs
pop
xor
xchg
and
stos
into
stos
dec
out
aad
push
and
pop
lock
movsb
and
shlb
into
in
pop
jbe
fstpt
inc
les
ss
pop
sub
je
adc
sub
out
stos
testb
sbb
cltd
or
fs
jmp
out
stos
sub
mov
sahf
mov
and
pop
cmp
sbb
jmp
pop
mov
ja
and
lcall
sbb
mov
cmp
push
sub
jmp
jne
inc
sub
adc
fmull
push
mov
sub
rcll
cli
xchg
cmpsb
xor
or
sbb
cmp
xor
xchg
movsl
jnp
lret
pop
imul
and
stos
xchg
ret
lahf
jnp
push
fisttps
pop
incl
test
lahf
repnz
gs
mov
jl
mov
sub
or
mov
jns
lret
mov
test
xchg
daa
push
out
stos
aaa
mov
sbb
hlt
push
add
pop
ljmp
mov
inc
daa
sbb
addb
mov
adc
shll
xchg
jns
inc
imul
sahf
inc
mov
dec
adc
mov
icebp
daa
jg
jp
je
int3
inc
or
dec
fldt
jnp
push
sub
adc
dec
jno
cmc
or
xchg
push
fstps
addr16
in
and
popf
mov
cld
cmpsb
aam
das
mov
scas
imul
fsub
jne
inc
aas
jb
mov
pushf
aad
ret
imul
jnp
fiadds
adc
mov
inc
cld
adc
sbb
jecxz
fcoms
mov
sub
xchg
loopne
xor
jnp
mov
mov
xchg
arpl
inc
and
jp
sub
cmp
mov
aad
mov
add
cmp
je
loope
or
popf
hlt
adc
dec
mov
mov
push
imul
popl
dec
inc
loop
dec
ds
pusha
and
or
xchg
mov
add
cmp
pushl
cli
jo
xor
jg
sar
adc
pusha
je
movsb
sbb
sti
je
mul
sbb
jb
out
ljmp
out
add
imul
cmc
js
rcrb
jne
jb
add
jl
mov
adc
fwait
stos
or
scas
xchg
and
jb
pop
sub
cs
adc
mov
int
jle
sub
add
repz
push
mov
or
dec
add
xor
enter
adc
and
in
pop
pop
and
mov
and
dec
mov
ret
dec
or
in
stc
cs
sahf
jnp
adc
push
dec
or
inc
xlat
push
mov
pop
lods
das
dec
adc
test
sbb
dec
aaa
add
sbb
test
imul
inc
push
and
pop
pop
add
mov
pop
shrb
jle
in
scas
ljmp
xor
mov
test
jle
cmpsl
fadd
in
iret
inc
fldt
pop
mov
pop
in
daa
jno
mov
push
outsb
mov
dec
pop
pop
subl
repnz
and
sub
and
shlb
in
aam
xchg
aad
cld
out
pop
mov
mov
addr16
imul
pop
jbe
ret
sbb
out
mov
aaa
mov
mov
sti
push
imul
aad
push
pusha
rcrb
mov
arpl
test
xchg
mov
add
sub
or
outsb
mov
jb
rcrb
imull
xor
mov
xchg
shrl
pushf
call
push
xchg
pop
in
insb
pop
push
xor
shr
lret
fsubl
sbb
into
test
ds
das
sub
push
and
inc
data16
iret
sbb
and
mov
jg
in
loopne
adc
cli
add
inc
dec
pop
adc
out
out
jb
test
adc
xchg
negl
in
pop
xor
cwtl
js
pop
fwait
in
clc
repnz
sub
jmp
sbb
push
sahf
outsb
push
enter
pop
sarl
adc
cmp
test
aaa
imul
mov
divb
cld
punpckhdq
lods
add
arpl
cld
frstor
addr16
adc
mov
imul
nop
jecxz
test
daa
test
mov
dec
movsl
insl
mov
add
sbb
xor
inc
scas
add
xchg
sub
dec
mov
pop
mov
imul
jae
xchg
adc
mov
repz
popf
or
lret
test
add
stos
push
sbb
loopne
out
ficoml
lcall
shl
enter
xchg
jg
lret
mov
cmc
jbe
stc
jo
inc
inc
adc
mov
sub
jp
out
xor
aad
sbbl
ss
repz
clc
icebp
lock
cwtl
sub
adc
inc
sbb
movsl
jl
mov
pop
aad
push
int
es
sarb
fdivrs
mov
rcll
arpl
aaa
int3
and
mov
or
cmp
mov
pop
sbb
pop
jbe
mov
fstl
mov
ja
call
xchg
jbe
adc
inc
cli
mov
icebp
sub
mov
aaa
inc
cmp
jns
negl
into
sub
adc
cmp
jno
mov
stos
push
or
mov
mov
push
cltd
inc
mov
insb
cli
mov
mov
in
and
in
jp
ds
cmp
into
pop
add
pop
sbb
pusha
push
mov
andb
pop
dec
data16
test
dec
adc
sub
sub
dec
xchg
mov
lods
inc
and
repz
cld
sbb
out
shl
dec
mov
add
ds
xor
jp
sbb
sbb
sub
mov
pusha
xor
in
hlt
icebp
jne
mov
adc
imulb
fadds
lret
mov
mov
arpl
cs
xor
xlat
mov
jecxz
stos
sub
hlt
dec
xor
cld
jne
mov
mov
outsb
rol
or
xlat
inc
mov
and
pop
dec
movsl
sub
xorl
das
push
fucomip
iret
adc
negl
cwtl
bound
mov
jp
xchg
clc
fisubrl
cmp
sti
adc
out
pop
fwait
and
insl
add
aam
sub
pop
sub
xor
xchg
fnsave
dec
add
sub
mov
lock
jge
push
mov
add
pop
data16
jnp
jbe
daa
ret
or
fmull
int3
fdivr
mov
dec
push
outsb
sbb
xor
add
inc
xor
inc
bound
push
inc
pop
inc
cmpsl
sbbl
mov
add
jae
mov
jo
mov
inc
adc
ljmp
jae
adc
pop
add
out
dec
out
jo
dec
rcll
aas
jbe
cmpsb
les
imul
cld
mov
cmp
push
lock
jns
int3
mov
fadds
test
aas
mov
adc
adc
je
inc
mov
jnp
inc
cmp
push
xor
in
out
mov
sbb
aas
lahf
fsts
xor
or
scas
je
fisttps
mov
pop
xchg
addr16
rolb
jb
mov
sbb
or
jg
push
sbb
push
iret
mov
mov
jmp
rclb
loopne
shl
movsb
push
shr
mov
push
jecxz
mov
jae
je
int3
lret
xor
add
ret
add
and
push
nop
jnp
fidivs
pop
outsb
out
jle
ss
add
jmp
cmc
jno
jnp
mov
sbb
lea
loop
imul
dec
es
push
mov
repz
mov
cmp
lock
sbb
xchg
rcrl
fcomps
rcrl
mov
sbb
pop
out
mov
ror
mov
sarl
cmp
repnz
xor
loop
jnp
pop
icebp
data16
jp
adc
in
inc
outsb
sub
or
xchg
movsl
mov
dec
pusha
dec
neg
jmp
push
hlt
sub
adc
mov
test
jo
cmp
xchg
pop
lods
pusha
jo
cli
mov
rorb
mov
jne
jp
xchg
and
mov
xor
mov
push
push
sub
fcoml
sbb
mov
sub
mov
jmp
mov
sbb
stc
push
inc
cmpsb
insl
dec
icebp
cmp
in
sahf
lahf
dec
imul
lock
lea
push
adc
popf
sahf
jo
mov
sbbl
loop
rorl
sahf
sbb
rolb
dec
loop
fstps
dec
dec
fisubrs
enter
cld
fnstenv
fmulp
inc
enter
sbb
mov
fsubrs
rorl
shll
in
push
push
mov
push
push
push
in
fidivrs
stc
popf
fcoml
mov
push
cmpsl
lahf
jg
je
sub
movsb
icebp
cmp
mov
sbb
sarl
pop
xor
daa
lret
outsb
pop
dec
adc
cltd
pop
xorb
pop
mov
dec
test
dec
dec
lods
aad
dec
mov
pop
bound
in
jp
cmp
decl
int
pop
and
pushf
dec
mov
xor
add
pop
xor
or
aad
and
sub
or
shrl
sahf
fisubrl
inc
out
ficompl
repnz
jge
xchg
push
ljmp
adc
mov
xlat
cmpsb
cmp
movb
outsl
inc
repz
xchg
das
hlt
out
mov
clc
add
jl
ljmp
pop
sbb
jnp
inc
fistl
xchg
cmpsb
js
mov
std
and
add
and
test
xor
sub
jmp
or
mov
test
pusha
jb
dec
lret
xlat
mov
xchg
jmp
mov
outsl
jg
jno
fldt
bound
clc
sbb
call
xchg
das
push
sbb
jno
subl
sub
aas
and
dec
adc
lods
xorl
xor
test
rclb
mov
sub
lcall
pop
imul
sbb
add
outsl
cmpsl
test
in
in
mov
loop
popa
pop
jo
into
fnstsw
cmp
dec
mov
adc
ja
aaa
push
pop
insb
pop
mov
push
stos
adc
in
dec
nop
js
nop
push
dec
xor
xchg
mov
iret
arpl
cltd
mov
adc
mov
and
mov
mov
loop
out
dec
or
and
mov
mov
mov
mov
arpl
into
outsl
test
xchg
push
and
pushf
mov
jae
xor
in
push
fbld
jnp
rclb
sbb
and
in
cs
push
push
jmp
inc
into
lods
mov
add
inc
call
sbb
test
std
bound
movsb
cmc
adc
aaa
cli
add
mov
dec
std
cmp
out
imul
mov
mov
loope
dec
inc
mov
test
cmpsl
sub
sub
pop
inc
mov
punpcklbw
mov
xchg
std
das
mov
inc
or
leave
in
rclb
aad
scas
fdivl
and
mov
or
decb
push
mov
jne
dec
pushw
xor
adc
ss
jo
lock
xchg
pop
and
aam
sub
cmp
lods
rclb
dec
cmp
jmp
and
inc
cmc
aam
sbb
and
pop
xor
std
push
jae
fadds
xorl
xchg
sbb
es
xor
test
mov
ljmp
test
out
pop
mov
mov
mov
rcrl
or
in
rcr
icebp
pop
inc
fwait
addr16
push
shl
mov
or
aam
repnz
inc
lahf
je
mov
cwtl
das
lret
jmp
dec
mov
es
cmpsb
xchg
jo
mov
loopne
fsts
int
dec
jno
addl
fcoml
les
inc
pusha
cmpsb
and
into
jo
adc
and
add
leave
call
fcomps
insl
les
ja
push
js
lods
lahf
push
and
dec
jecxz
fisubrs
jnp
pop
push
inc
cmpsl
jno
fld
loopne
cmp
and
mov
push
enter
jnp
pop
outsl
add
cld
mov
aas
testl
cmp
xchg
int3
and
adcb
shl
push
jno
and
mov
sbb
popf
insl
adc
test
xchg
dec
ret
or
jg
push
or
cmpsl
lret
or
sbb
stc
mov
lret
dec
or
lea
mov
or
loopne
movsl
pop
pop
sub
mov
cltd
cmpsl
xchg
lods
jle
repnz
popa
sub
enter
mov
test
inc
mov
ret
adc
icebp
jg
push
cmp
pop
bnd
cmovl
jmp
lock
jns
xor
lret
push
popf
mov
jno
push
inc
int
ret
bound
and
fistpll
cltd
test
inc
mov
mov
or
fnstenv
data16
inc
dec
push
fists
push
sub
mov
imul
in
stos
icebp
mov
jno
clc
xlat
addr16
sub
and
stos
inc
jb
xor
iret
cld
and
mov
imul
pop
jp
and
pop
push
loopne
ficoms
scas
dec
mov
int3
sahf
loop
mov
das
inc
cmp
jg
dec
inc
subb
xor
test
mov
push
sahf
mov
rclb
mov
pusha
mov
push
sbb
repnz
jbe
icebp
ror
sub
jle
inc
popa
outsl
pop
xor
push
mov
enter
xchg
or
test
das
aam
mov
inc
mov
mov
outsb
sub
and
mov
push
cmp
test
dec
pop
lods
popf
xchg
add
pusha
sbb
outsl
inc
mov
jno
insl
mov
and
mov
xor
fimuls
ret
cli
lret
push
xchg
mov
push
sbb
movsb
pop
iret
mov
sbb
enter
push
int
jno
push
mov
jle
pop
ret
dec
and
sub
xor
or
push
fmulp
fbstp
movsb
shlb
jge
jno
repz
loopne
das
jns
sahf
sub
fdivs
xchg
xor
xor
out
ljmp
shll
push
test
fnsave
hlt
scas
adc
or
xchg
push
mulb
push
inc
and
out
cmp
sub
fcoms
jo
cli
rorl
and
adc
pop
mov
xchg
sbb
cmpsb
cmp
mov
and
adc
decb
or
pop
pop
and
pop
jmp
test
nop
inc
mov
mov
in
scas
lcall
js
lcall
aad
pop
mov
scas
int3
pop
out
jl
sub
dec
mov
gs
jbe
cmp
inc
stos
mov
fldt
js
add
std
mov
push
dec
xchg
and
orl
out
sbbb
arpl
test
lods
xor
push
push
outsl
adc
aas
push
mov
push
lcall
xor
sbb
push
xor
in
dec
mov
pop
inc
aaa
mov
ret
hlt
movl
sbb
int
dec
das
mov
popl
push
dec
loopne
push
pushf
addl
mov
adc
dec
cli
lret
add
or
fcompp
pop
sarl
dec
aad
data16
dec
and
xchg
cmpsb
push
jo
lock
mov
stos
push
out
mov
pop
jo
dec
fadd
enter
inc
int3
sbb
cmp
sarl
je
mov
cmp
pop
in
xchg
pop
movsb
fucomi
xchg
cld
loop
push
xchg
cmp
dec
mov
bound
loopne
or
divl
or
sbb
adc
pop
xor
xor
jl
mov
repnz
jo
jl
adc
scas
pushf
cmp
jp
int3
rol
jbe
loop
loopne
and
mov
xor
imul
mov
adc
stos
into
insl
or
or
ficompl
cmpsb
fsubrs
or
push
daa
mov
iret
mov
push
insb
add
flds
rcrl
pushf
aas
cmpsl
or
fwait
jmp
pop
xor
jo
cmp
push
fisttpll
cltd
test
xchg
daa
loope
dec
mov
jg
test
push
pop
jmp
scas
mov
inc
je
inc
xor
adc
stos
std
js
or
fnstenv
sbb
xlat
fdivrs
dec
jmp
mov
add
lret
int3
cmp
cmpsb
imul
mov
lcall
fidivrs
imul
dec
xor
cmpsl
pop
lds
xchg
mov
pop
add
sub
jl
mov
or
dec
stc
mov
dec
aad
add
ds
sahf
in
aam
push
out
mov
fidivrl
stc
push
xchg
aas
dec
ds
add
mov
cmp
dec
jecxz
hlt
mov
sub
push
mov
xor
fcoms
movsl
mov
movsl
int3
xor
xor
rclb
push
or
add
sarb
add
inc
dec
call
or
in
or
sbb
xchg
fimuls
push
fisttps
les
sbb
jnp
jno
push
xchg
sar
mov
xor
mov
dec
mov
lcall
out
call
fbld
mov
pop
xchg
mov
cmp
clc
or
adc
jmp
sbb
test
jnp
mov
lods
inc
or
jnp
shlb
out
lcall
xorb
in
shrl
js
movsl
pop
sbb
push
jp
out
add
rcr
cld
fstpt
sbb
cmp
jecxz
or
jbe
out
ljmp
mov
and
add
jb
rorb
cmpsb
pusha
inc
lcall
xor
add
js
aas
bound
repnz
xorb
popa
sti
xlat
in
fwait
xor
sbb
out
lcall
dec
inc
aas
movsb
sbb
test
lock
mov
mov
push
mov
mulb
lea
pop
xchg
movsl
mov
call
mov
mov
dec
pop
insl
pushf
std
cld
cmpsb
rcrl
jge
std
push
lock
shlb
fsubrp
jp
movsb
lret
les
push
mov
sub
adc
mov
pushf
in
ljmp
fistpll
ss
pop
fistpl
add
cwtl
into
xchg
mov
aaa
mov
int3
xorl
int3
stos
ss
js
das
jns
dec
xlat
out
inc
mov
mov
out
or
pop
test
sbb
add
xchg
sub
sub
pop
gs
subb
mov
test
data16
stos
jnp
dec
sbb
out
cmpsl
xor
shrb
es
loope
mov
jge
jp
cmp
sbb
scas
inc
repz
adc
out
jp
fwait
cmp
push
sbb
sbb
pop
outsl
xchg
push
lea
inc
sub
push
push
cmp
adc
std
notb
jnp
mov
ljmp
divb
and
fwait
das
loop
mov
mov
popa
mov
popa
xchg
or
cmp
mov
cmp
sarb
or
lods
xor
adc
stos
jno
out
jns
sub
mov
dec
adc
mov
mov
mov
cld
ja
sarl
ljmp
xor
or
push
adc
shll
sbb
call
in
pushf
shlb
xor
rcr
fwait
or
subl
jp
std
inc
or
jecxz
shr
mov
stos
lock
add
sbb
bound
sub
test
xor
push
or
push
dec
mov
test
aas
add
xchg
mov
pop
mov
dec
dec
pop
mov
jne
hlt
mov
pop
sar
int
adc
lret
mov
sar
push
js
xor
aas
cmp
push
incb
pop
jle
ret
add
jne
mov
test
inc
dec
mov
call
push
inc
or
stos
fstpt
sub
inc
test
jno
jno
cmp
ss
adc
ror
in
mov
je
push
loopne
cmp
dec
push
xchg
jg
push
dec
ljmp
xchg
inc
pusha
pop
add
or
shrl
pushf
mov
adc
shlb
ljmpw
lret
jns
sarb
aam
loop
addr16
add
jp
roll
sarb
rolb
dec
icebp
add
daa
test
jl
inc
push
push
stc
or
enter
test
je
shlb
xchg
xchg
dec
xchg
xor
jbe
push
or
sti
imull
in
jl
mov
xor
scas
enter
std
xchg
jae
mov
add
or
mov
mov
mov
nop
call
push
jg
js
ret
mov
jecxz
shll
or
add
xor
xorl
pop
push
pop
sbb
call
xor
sahf
jp
sub
xor
adc
jo
fimuls
andl
sub
je
hlt
mov
jmp
adc
popf
iret
sub
add
push
xor
popa
xor
inc
mov
aam
push
imul
out
mov
jg
push
adc
ret
sub
or
mov
or
jb
push
push
push
cmp
adc
or
je
rclb
int3
cmp
mov
dec
fwait
lahf
imul
mov
hlt
mov
adc
mov
popa
mov
push
or
xchg
dec
push
dec
cmp
clc
bnd
test
fistps
ja
adc
stos
xlat
mov
lahf
aad
xor
inc
cmpsl
xlat
mov
pop
and
or
mov
and
inc
popa
aaa
pop
cld
lahf
add
ja
in
push
je
pop
adc
xor
xor
outsb
add
adc
lock
aad
dec
jno
mov
fwait
stos
ljmp
addr16
mov
psadbw
stos
jb
pushf
out
stos
icebp
push
insl
fidivl
push
addr16
icebp
pop
and
in
out
xchg
xchg
push
gs
lcall
divb
xchg
adc
sarb
cmp
in
and
sti
adc
in
int3
jmp
test
or
out
shll
test
jae,pn
xor
pop
xor
xor
stos
mov
add
addl
jae
fidivrs
testb
inc
mov
mov
rol
xchg
std
mov
and
aam
push
push
mov
insl
jnp
mov
add
stos
xchg
pop
les
in
sbb
mov
add
mov
shlb
roll
mov
add
mov
mov
push
cli
int
add
xor
pop
add
sub
pop
repz
push
repz
int
xlat
lock
mov
pop
mov
lret
lock
daa
repnz
jae
sbb
ss
movl
sbb
pop
in
int
pop
ror
call
in
nop
and
icebp
push
pop
dec
adc
scas
push
mov
sub
not
push
sbb
enter
sahf
mov
fwait
addr16
std
pop
add
ret
lods
pusha
enter
add
sbb
inc
push
xchg
fisubl
lods
fs
addr16
xchg
mov
sbb
popa
in
sub
inc
out
ljmp
in
das
lods
cmpsb
mov
sarb
xor
mov
pushf
mov
add
ret
ret
mov
jmp
jle
mov
mov
add
clc
das
jns
lods
pop
xchg
jle
xor
mov
icebp
pop
pushf
jo
sbb
or
xor
mov
rcll
fsub
scas
mov
pop
xchg
sbb
push
inc
or
mov
sbb
sbb
sbb
scas
cld
fbld
jmp
cmc
cmp
adc
or
add
or
outsb
push
push
xor
cltd
sbb
std
add
pop
loope
jecxz
aad
iret
mov
nop
jge
mov
repnz
adc
dec
pop
inc
sbb
ja
out
or
les
add
push
rcll
push
cmp
das
test
test
push
fimull
jecxz
fstl
inc
outsb
roll
jo
mov
pop
inc
cli
nop
mov
dec
scas
in
stos
stos
gs
mov
gs
fwait
xchg
inc
imul
push
dec
xor
fdivs
pop
cmp
daa
shlb
imul
bound
cmp
lret
arpl
sbb
lea
cwtl
inc
xchg
inc
add
enter
mov
pop
sti
pop
rcrl
push
cmp
cmpsl
ljmp
and
add
dec
mov
jo
cmp
cmp
or
scas
adc
aas
fwait
sbb
push
test
and
xchg
dec
popa
aas
xchg
jbe
lds
sub
pop
es
adc
sub
movsb
enter
bound
add
jo
popa
jle
adc
push
jns
adc
leave
mov
sbbb
mov
sbb
push
adc
mov
adc
pop
xchg
and
decl
push
loop
ljmp
sbb
mov
dec
lret
mov
cld
xchg
loope
jmp
and
cmp
fidivrs
mov
sbb
mov
pop
ds
xor
rolb
stos
dec
pop
jle
dec
lret
push
mov
jmp
push
pop
dec
mov
sub
popa
ror
ja
ja
orb
mov
pop
mov
movsb
pop
mov
add
out
dec
mov
xchg
xchg
loope
add
sbb
mov
mov
jl
adc
cmp
add
dec
jge
xchg
stc
leave
sbb
data16
pop
insl
adc
push
addr16
xchg
or
push
cs
jae
push
sbb
mov
mov
rolb
cltd
jle
mov
push
and
sbbl
fadds
jns
push
lods
imul
sahf
jne
popa
pop
addr16
push
insb
bound
pushf
sub
fucomip
xchg
cmpl
mov
pop
jns
or
sbb
xor
sbb
add
in
and
repz
or
call
aam
xchg
jae
dec
stos
xchg
mov
adc
mov
cmp
out
test
mov
repnz
repnz
lcall
pop
xchg
xchg
enter
xor
fimull
pop
sarl
movsl
adc
push
sub
data16
sub
mov
or
sbb
xchg
stos
xchg
add
jg
sub
enter
stos
or
in
add
fs
ja
int3
add
sbb
mov
xchg
mov
sbb
cli
scas
xchg
aaa
stos
mov
inc
repnz
js
mov
inc
and
ficoms
repnz
gs
mov
popf
arpl
repz
inc
aad
dec
imul
mov
xor
arpl
cwtl
movsb
pop
gs
lahf
cltd
push
mov
pop
pop
scas
pop
pop
or
adc
mov
loop
stos
dec
or
pushf
mov
repnz
and
sub
jmp
push
movsb
dec
adc
dec
and
fildll
and
testl
scas
jg
cmp
adc
adcl
in
inc
mov
fisubl
mov
dec
inc
mov
int
addr16
outsb
ss
fisubrs
les
pop
push
xchg
adc
push
pop
fsubp
cmpsl
jno
mov
xchg
mov
fistl
je
pop
js
das
insl
mov
les
icebp
ja
pop
sbb
outsl
mov
dec
sub
fnstsw
jns
adc
es
pop
ds
or
loop,pt
add
fldenv
in
jb
jno
inc
fldenv
and
stos
sub
push
push
xchg
add
test
les
jo
cld
sub
jbe
pop
push
dec
inc
test
or
adc
xor
push
pop
fstl
lock
leave
sub
xor
add
insb
xchg
adc
dec
jecxz
add
mov
xchg
sbbb
xor
mov
and
mov
mov
pop
cmp
pop
adc
popf
sti
test
cmc
jne
lods
xchg
jg
inc
cmp
pop
adc
lods
std
loope
jns
gs
xor
aad
into
fprem
push
cmc
shll
sub
lret
movsb
rcrb
js
jl
out
xor
push
pop
pushf
into
xchg
test
and
jg
jmp
and
fst
mov
arpl
and
mov
fsave
xor
mov
ror
jo
ret
adc
pop
loopne
lret
jae
push
scas
dec
loop
insb
sbb
xlat
aam
push
js
push
leave
and
mov
shl
or
lods
cmpl
in
scas
mov
push
fstpt
adc
test
adc
hlt
fnstenv
fistps
pop
cmp
dec
int
pop
outsl
orb
jno
in
and
pop
jecxz
imul
add
aaa
fcomi
dec
mov
je
adc
mov
call
jmp
bound
aad
test
and
add
cmp
stc
cmp
push
aaa
cmp
ss
aaa
pop
and
push
add
push
jge
aad
mov
push
pop
dec
adc
mov
bound
mov
sti
push
mov
xor
fbld
outsl
dec
mov
push
mov
shrb
shll
cld
mov
mov
in
scas
pop
inc
jl
lods
dec
xchg
hlt
pop
cmp
sti
add
push
and
ror
adc
clc
push
cmc
mov
push
icebp
loope
sahf
sbb
pushf
jg
mov
test
jle
xor
mov
jle
xor
mov
scas
scas
dec
inc
xlat
push
lds
sub
out
enter
adc
mov
cmp
xchg
ret
adc
mov
xchg
ljmp
iret
jb
mov
mov
shr
mov
xor
dec
out
test
in
mov
shll
aad
pop
or
inc
addr16
pop
std
add
adc
daa
out
mov
sbb
ds
xlat
sahf
xchg
movsb
test
jb
xor
push
or
fucomi
dec
push
dec
icebp
adc
cmpsl
fadds
pop
jo
pop
arpl
int3
lret
mov
push
sub
sbb
mov
inc
das
push
cmp
mov
mov
push
lock
add
ja
out
out
mov
cmp
xor
sub
jecxz
addps
out
movsl
cmp
xchg
add
push
jns
int
adc
ss
mov
sbb
cmpsb
pop
inc
aas
setb
xor
cltd
cwtl
jecxz
test
fabs
in
cltd
cmp
push
lahf
std
enter
cmp
push
and
sub
xchg
cmc
imul
aaa
sbb
fwait
repnz
icebp
incb
add
in
xor
std
mov
and
push
xlat
push
cli
imul
cld
xlat
dec
xchg
lcall
lret
icebp
lret
out
mov
inc
cmp
call
ja
stos
push
ret
sbb
lock
lcall
imul
ror
icebp
leave
dec
mov
popf
out
ds
sbb
add
iret
arpl
loopne
test
or
inc
and
or
or
mov
cmp
xor
ss
sbb
cltd
mov
xchg
xchg
dec
xchg
pop
dec
jg
shlb
dec
jp
lea
rclb
cmp
shlb
push
add
adc
icebp
in
enter
xchg
clc
mov
jge
push
adc
test
xchg
mov
xchg
flds
hlt
dec
dec
or
cmp
pop
sbb
cmpsl
bnd
xchg
dec
xchg
js
mov
test
ja
scas
mov
xor
and
fistpll
and
mov
jnp
addb
jp
fsub
mov
lods
nop
in
dec
cmp
add
sbb
sahf
mov
je
ds
push
add
inc
or
mull
repz
divl
dec
jecxz
aad
in
mov
pop
stos
inc
xchg
cli
cmp
mov
add
cwtl
push
xchg
lea
sbb
and
je
repz
aaa
sub
ljmp
pop
sbb
or
cmp
shrl
ficoml
jmp
xor
js
call
pusha
out
mov
sbb
test
shl
cwtl
cmpsb
pop
aam
neg
cld
lret
mov
out
lds
or
sbb
add
push
jge
mov
mov
jl
inc
jbe
sub
add
movsb
lock
cmp
jmp
inc
dec
imul
push
xchg
push
fcoms
sbb
clc
lods
movsb
es
push
push
cmpsb
into
xor
sbb
pop
nop
or
add
xor
sub
ss
lods
sbb
repz
xchg
int3
sbb
xor
scas
shll
and
pop
ss
inc
cmpsb
adc
mov
enter
mov
mov
leave
xor
scas
xor
addb
mov
sub
lcall
cmp
jle
xor
dec
sub
sbb
es
fmul
push
mov
mov
test
nop
lcall
sbb
xor
cwtl
mov
jb
ret
aad
leave
lcall
adc
sub
add
cmp
pushf
add
movsb
cs
and
sbb
in
mov
mov
jecxz
das
push
in
and
push
sub
divb
jno
mov
arpl
jb
fisttpl
out
hlt
fstpt
int3
fstpl
and
icebp
aam
pop
sbb
shrb
movb
negb
nop
lahf
xchg
lods
fsubl
adc
inc
jp
scas
ffree
outsl
push
adc
and
push
push
adc
xor
clc
fwait
int
add
cmpl
mov
push
addr16
pop
mov
pop
stos
outsb
out
xor
inc
shl
repz
dec
daa
aad
jne
push
dec
outsl
fstps
and
or
xor
jnp
mov
data16
cwtl
hlt
or
aam
push
loope
mov
movsb
and
cmp
js
je
cli
pop
subb
clc
jns
xor
xchg
mov
lock
jae
cld
pop
daa
addr16
enter
sbb
adc
jno
in
fisubs
je
mov
ror
gs
and
out
aas
mov
outsl
cmp
mov
lea
test
add
out
pushf
js
es
in
xor
add
stos
out
add
repz
outsb
das
je
fmulp
xor
mov
cmp
sbb
sub
andb
cs
sub
mov
inc
shl
fdivl
adc
scas
xchg
lods
mov
fiaddl
aaa
insl
pop
ffree
fcmovnbe
fwait
or
shrl
mov
inc
lock
add
jno
add
xor
jb
roll
xor
push
outsb
mov
cmpsl
inc
push
sub
mov
fwait
mov
es
mov
clc
jge
lods
adc
rorl
out
xchg
cwtl
mov
loopne
roll
decb
mov
and
cmp
and
pop
push
int3
jae
cltd
cli
inc
adc
jmp
mov
or
lahf
sti
stc
call
xchg
push
lods
cmp
test
xchg
cld
scas
test
xchg
movsb
jg
insl
sahf
and
stc
sti
add
mov
aas
les
jo
adc
add
popf
push
ret
mov
lret
or
lods
inc
mov
sbb
sarl
pop
dec
cwtl
mov
pushf
mov
pop
dec
clc
jo
or
sub
mov
or
cmpsb
pop
out
pop
xchg
ljmp
pop
in
hlt
int
fs
mov
adcb
and
aad
ret
mov
dec
jge
or
cwtl
pop
outsb
inc
and
mov
int
repz
and
mov
mov
test
and
lahf
and
aaa
mov
imul
jg
add
add
lret
jp
mov
lds
pop
inc
mov
sub
inc
xchg
fsubrl
dec
xor
push
inc
lret
and
bound
in
js
rcrb
add
aad
test
inc
sub
push
jmp
pop
jecxz
jnp
shr
or
lock
add
shlb
cmp
jp
lcall
cs
and
in
aaa
data16
testb
js
sub
jle
jno
inc
ret
jg
push
pusha
je
in
int3
fldt
or
xor
loop
ret
fnstenv
mov
ficoms
syscall
clc
mov
hlt
popf
inc
testl
pop
cmpsb
jnp
cmp
call
mov
xchg
mov
xchg
ret
push
jns
ss
sti
ja
movsb
push
in
pusha
sbb
xchg
fsubs
out
inc
add
mov
into
aaa
and
ja
pop
repz
cmp
fstl
xchg
sbb
icebp
adc
xor
test
xlat
repz
ret
inc
cmc
xchg
popf
inc
mov
sbb
sub
cmp
push
adc
cltd
dec
push
and
push
mov
xor
aad
ja
dec
mov
xchg
add
lret
out
stc
aas
das
add
dec
cmpsb
adc
into
push
lahf
add
xchg
xchg
sbb
xchg
aad
mov
fiadds
je
sbb
inc
fildll
mov
and
jbe
sti
sarb
and
in
mov
and
testb
dec
sub
pop
jecxz
mov
test
xor
in
outsl
pop
cmp
imul
push
xchg
test
adc
xchg
fbld
push
stos
add
add
data16
pop
mov
fdivl
bound
psrld
sbb
scas
je
test
inc
xlat
inc
add
out
stos
pop
fdivl
xor
aas
daa
push
mov
xlat
lods
aam
jb
xchg
mov
xor
mov
lretw
and
in
das
dec
sub
sarb
out
mov
in
fcoml
or
in
push
rorb
mov
mov
pavgb
mov
push
enter
mov
fsubrl
cmp
mov
lar
out
bnd
popf
ror
cmp
iret
or
into
popa
sub
jg
sbb
push
sbb
jns
jp
push
jne
pop
sub
and
mov
xchg
ror
mov
cmpsl
test
lock
mov
cld
es
xor
or
adc
jno
outsl
into
and
addr16
or
mov
xor
decb
push
mov
sub
dec
sub
imul
sub
and
cltd
test
cwtl
pop
add
pop
xchg
jno
push
shlb
xor
movl
push
or
push
test
sarb
dec
jg
mov
arpl
in
sub
adc
sub
jno
xor
cltd
ss
xchg
add
rolb
js
aad
push
into
jnp
push
outsl
nop
and
xor
sbb
daa
sarl
inc
pusha
out
adc
pop
xor
add
das
mov
cmp
lea
lods
sub
xor
cmp
mov
mov
add
insb
mov
test
cmpsl
mov
pushf
out
pop
pop
cmp
lcall
test
mov
xchg
cmpsb
adc
scas
repz
sub
ss
add
pop
mov
xor
inc
inc
sub
lret
cmc
pushf
inc
push
out
push
aaa
lahf
into
jge
adc
and
lods
pop
das
xor
ret
inc
sbbl
imul
cmp
pop
out
xchg
in
popa
xor
shll
xchg
nop
cwtl
idivb
cmp
fs
ss
pop
repnz
jae
fisttps
sub
inc
sbb
push
fisubl
mov
bound
sub
test
in
loope
out
cmpsb
js
xchg
or
ficomps
cltd
cmc
xchg
ret
sbb
pusha
cmp
jmp
xchg
cmp
test
mov
mov
ljmp
dec
adc
scas
mov
leave
mov
cli
add
mov
popa
adcb
mov
outsb
sti
rolb
jmp
int3
movsl
test
dec
pop
or
mov
in
enter
xorb
sbb
add
pop
jno
sub
jmp
ret
jmp
inc
xchg
lea
call
jecxz
fucom
stc
jecxz
arpl
pop
jle
das
mov
dec
data16
inc
out
push
pop
sub
push
arpl
mov
jbe
sahf
cmp
stc
divl
push
loopne
mov
dec
addr16
push
dec
pop
test
jmp
pushf
and
pushf
ljmp
pop
int3
testl
test
sub
adc
lock
xchg
in
mov
pop
std
push
cmp
js
ficomps
jg
pop
mov
jg
dec
and
jns
xor
test
mov
imul
mov
movsl
mov
dec
icebp
jp
jns
inc
and
pop
inc
mov
jnp
dec
and
test
jnp
sub
mov
push
pop
lea
sub
fmul
or
insb
dec
jo
pop
scas
test
cli
icebp
rcr
adc
repnz
test
cli
lods
xchg
jg
or
sbb
or
pushf
jne
sub
cmp
add
stos
jno
test
add
pop
aaa
mov
repz
add
lea
cld
sbb
cmpsb
jle
jns
mov
imul
shll
stc
pop
sarl
mov
js
or
daa
push
jnp
sarl
add
and
cltd
jmp
icebp
cmp
push
fidivs
sbb
and
enter
out
stos
shlb
fnstcw
add
test
inc
idivl
mov
addl
inc
xchg
adc
add
mov
lea
sti
fbstp
pop
sub
push
hlt
rcr
out
sbb
jge
mov
ret
sbb
outsl
xor
push
test
fnsave
movsl
test
or
shlb
jle
repz
nop
call
jmp
ret
sarb
scas
pushl
decb
push
lods
or
sbb
sbb
repnz
inc
pop
mov
xor
jle
mov
fisttpll
repnz
jmp
mov
test
inc
xor
adc
bound
push
aas
jg
notl
push
pop
dec
rcrb
xor
pop
sbb
out
mov
sbb
test
fwait
js
frstor
testb
test
ja
pop
jo
sahf
jne
andb
aaa
test
adcl
mov
lock
mov
pop
inc
mov
das
mov
scas
lds
pop
add
cmpsl
lds
pusha
gs
xchg
in
leave
or
aaa
mulb
xchg
ja
inc
xchg
pop
ret
mov
lea
sbb
lds
lods
mov
ret
or
mov
dec
cmp
xchg
xchg
rcrb
inc
adc
mov
adc
iret
mov
jp
xor
xor
out
repnz
push
jb
sub
in
xor
mov
jecxz
jmp
ficompl
lods
pop
lret
cmpsb
in
fmulp
mov
popa
and
sub
mov
test
add
jbe
test
push
into
mov
mov
xchg
nop
dec
cmp
mov
push
pop
divl
bound
dec
into
sub
cmp
loop
data16
cmc
xchg
cmp
out
in
in
les
out
stos
aaa
inc
cmp
ret
mov
and
test
ss
push
outsl
rolb
test
mov
adc
xor
cli
sbb
shl
testl
sahf
aaa
test
nop
rcr
shlb
ret
repnz
je
mov
inc
and
xchg
inc
dec
jmp
pop
inc
outsb
in
push
pop
dec
xor
jmp
xor
push
dec
int
scas
add
xchg
add
daa
addr16
jns
pop
inc
sbb
enter
cli
in
or
sbb
decl
ret
jmp
sub
or
pop
and
xor
and
stos
adc
mov
mov
sbb
push
lds
mov
pop
in
repnz
lret
es
addl
dec
call
inc
stc
cltd
cwtl
cmp
imul
in
xor
aaa
insb
int
cwtl
sub
sahf
xor
sub
loop
jmp
jg
xor
stc
pop
bound
mov
mov
dec
cs
scas
out
clc
jbe
inc
rcrl
push
cmp
xchg
mov
cmp
out
add
leave
jge
imul
or
or
pop
outsl
aad
pop
cmp
popa
inc
fucomi
cmp
icebp
xchg
adc
out
push
adc
xor
xchg
insb
add
bound
dec
xlat
jne
xor
sub
mov
sub
cmp
into
imul
jge
addb
lds
js
adc
test
and
and
int
iret
xchg
into
frstor
outsl
push
std
push
inc
jo
popf
mov
or
push
arpl
lods
dec
and
pop
mov
xor
gs
aad
xchg
pop
lods
call
fcmovb
cmp
mov
sbb
rcl
in
das
insl
fildl
lods
ds
lcall
repz
jle
pusha
xor
faddl
adc
push
xchg
jbe
or
or
push
lods
subl
or
loope
inc
cmp
and
scas
adc
and
mov
cmp
call
shl
sbb
xor
lock
nop
push
push
addr16
repz
jmp
iret
or
sti
insb
adc
adc
add
dec
imul
push
cld
fidivrl
lret
stos
out
std
mov
adc
pop
data16
push
pop
xor
pop
cmp
adc
mov
lcall
push
movsl
loopne
test
adc
pop
mov
aam
mov
repz
cmpsl
scas
xchg
cmpsb
into
dec
pop
lcall
sahf
jbe
xchg
cmp
std
daa
roll
xchg
mov
icebp
popf
inc
inc
mov
sbb
push
cmp
shlb
push
repz
js
nop
pusha
sub
sub
cmpsl
mov
sti
adc
or
mov
sahf
nop
push
dec
shll
in
add
imul
adc
addr16
pusha
mov
out
inc
push
and
lret
ret
and
test
fldt
mov
movsl
faddl
popf
fmuls
add
and
jp
mov
mov
push
loop
and
lods
mov
cmpsl
in
pop
aam
jp
pop
jge
cmp
call
hlt
mov
mov
negl
pop
mov
pop
cmc
orl
call
push
xchg
pop
mov
inc
fsubl
lahf
push
stos
jns
mov
jno
repz
adc
inc
jl
pmullw
mov
rolb
mov
dec
dec
mov
lods
fmuls
xlat
jns
mov
testb
add
jae
bound
aaa
cmp
rolb
jle
shlb
ret
jg
fmuls
test
xor
sbb
nop
frstor
xor
pop
cmc
fisttpll
test
xchg
fsubrl
repnz
mov
insb
jns
test
ffreep
movsb
mov
sahf
ja
xor
fs
call
popa
jle
loopne
out
or
push
xor
ja
popf
inc
scas
mov
mov
ds
dec
inc
sarb
dec
pop
inc
mov
add
adc
lret
in
adc
incb
sbb
int3
test
int3
jl
lea
mov
jbe
pop
push
cmp
and
mov
out
jae
or
bound
ljmp
xor
clc
mov
popf
mov
push
cli
sub
orb
mov
pop
push
cli
mov
cmp
inc
push
enter
fwait
data16
sbb
add
add
lock
loop
mov
and
and
in
stos
popf
mull
sub
lcall
sbb
push
sahf
xor
dec
jae
outsb
decl
xor
inc
mov
stc
mov
mov
xchg
mov
and
je
jecxz
push
inc
xor
dec
xor
insl
enter
mov
jge
xchg
jo
ss
lods
push
dec
cmp
ret
push
adc
xchg
mov
inc
jg
push
jg
sub
pop
fwait
xchg
shrb
adc
fyl2xp1
in
pop
iret
mov
sahf
pop
pop
sbb
es
dec
push
testb
inc
mov
adc
mov
cmp
mov
filds
outsb
lret
in
and
fstl
js
fsubrs
dec
nop
xchg
pop
cmpsb
inc
mov
and
addr16
inc
mov
pusha
popa
push
into
loopne
pop
inc
inc
das
jnp
movsb
and
subl
scas
popl
ret
out
inc
xor
and
dec
jo
jne
push
mov
jl
std
mov
das
push
decb
dec
ja
nop
xchg
call
fimull
test
and
mov
cmp
inc
sub
popf
dec
cmp
cmp
cmp
adc
xchg
lea
dec
aad
mov
ss
inc
mov
cs
mov
mov
jo
out
add
lret
inc
aad
cmp
and
fwait
loop
shll
pop
cmp
add
mov
fwait
adc
enter
repnz
cmpsb
sarl
adc
fmuls
and
ds
shl
out
ficompl
ret
incb
xchg
dec
mov
inc
jl
lock
or
insl
or
cmp
lahf
nop
sbb
jo
add
or
push
pop
mov
add
mov
int
rorb
pop
js
bound
iret
imul
int3
inc
aaa
mov
lods
loop
pop
pop
dec
scas
mov
sub
pop
int
cmpsl
push
push
pop
fwait
int
jmp
std
xchg
adc
lret
movsb
test
push
and
repz
sub
add
adc
stc
mov
mov
nopl
into
jbe
and
xor
xchg
cmp
cmp
jp
mov
xchg
jae
fs
test
xchg
in
mov
stc
adc
push
and
or
mov
push
xchg
imul
sub
rep
roll
and
push
mov
xor
mov
lods
add
push
sub
cli
popf
pop
inc
inc
dec
and
notl
cld
rcl
push
lock
je
lcall
out
clc
mov
xor
xchg
lahf
mov
dec
push
jge
leave
sbb
mov
or
jl
lods
sub
push
jb
nop
jo
aas
pop
add
enter
lret
and
pop
repnz
and
loop
jmp
or
push
xor
mov
mov
inc
xor
mov
addr16
fisubs
rclb
adc
cmc
popa
popf
inc
sahf
sub
inc
lea
shlb
loopne
mov
gs
xchg
xor
hlt
aaa
sub
push
push
xchg
mov
ja
mov
pop
sub
call
mov
mov
xor
subl
jp
add
mov
inc
sbb
jmp
repnz
add
inc
add
pop
mov
sbb
mov
fsubs
inc
mov
push
jbe
xlat
idivl
xchg
pop
sub
push
scas
mov
and
out
xor
xchg
fs
xor
data16
xor
xor
pop
jae
jl
out
sahf
aas
push
and
loopne
mov
adc
add
dec
adc
adc
pop
and
cwtl
iret
inc
pop
xor
nop
lods
mov
cmp
loope
sub
push
dec
push
les
in
pop
push
fstl
in
gs
add
bnd
xor
in
mov
arpl
jbe
loop
pop
ret
shrb
pop
ffreep
addr16
sbb
jne
ljmp
xor
adc
aas
pop
ficoml
or
jge
jae
subb
ss
lds
inc
lea
lds
pop
mov
and
push
lods
dec
in
ret
push
adc
xchg
in
arpl
in
lret
inc
out
mov
sahf
and
inc
test
sub
cwtl
sbb
sarl
push
and
pop
mov
push
out
scas
repz
test
mov
jae
push
xor
popl
aam
mov
lds
enter
xor
sti
cmp
sbb
addr16
mov
sub
xor
pop
ljmp
and
jns
je
mov
sahf
fbld
cld
je
hlt
testl
xorl
rorl
test
adc
int
mov
dec
xchg
pop
rclb
cmpsl
mov
sub
pop
dec
add
mov
iret
mov
jnp
inc
addr16
sub
xchg
imul
add
lret
push
dec
or
ficompl
xor
es
and
lock
push
push
mov
xlat
cmpsl
test
mov
xlat
ljmp
dec
das
sbb
dec
bound
jo
adc
or
pop
out
into
addr16
add
inc
inc
cmp
cmp
adc
or
rcr
jmp
pop
mov
arpl
mov
mov
jnp
mov
fstps
mov
sub
jecxz
inc
faddp
or
cmp
mov
scas
or
outsl
xor
sbb
push
push
xchg
or
repz
push
sbbb
pop
cli
roll
ljmp
xchg
loope
rcr
pushf
lods
mov
cmpsl
ds
xor
adc
lods
inc
xchg
dec
ss
jno
add
jg
aaa
addl
in
test
shll
aad
outsb
sbb
adc
push
xor
add
adc
pushf
idivb
cld
fwait
lds
mov
cmpsb
imul
adc
mov
mov
push
jb
xchg
fcoms
mov
or
push
add
cmp
mov
inc
sbb
and
insb
rcrb
fisttpll
subb
stos
daa
data16
adc
or
jmp
int3
sbb
repz
add
icebp
gs
dec
ret
arpl
or
cs
mov
mov
shrb
lret
add
repz
sbb
popa
int
out
jo
mov
dec
push
jl
arpl
shrl
cs
shrl
pop
push
pop
pushf
push
cmc
out
push
push
and
push
pusha
dec
sbb
in
in
jg
inc
mov
inc
test
cs
mov
and
stc
daa
iret
mov
jecxz
outsl
pop
insl
cli
sbb
notb
repz
mov
icebp
xor
jl
sub
ljmp
mov
aas
sti
popf
xchg
das
stc
push
repnz
dec
push
push
in
shlb
pop
xchg
js
sbb
je
stos
lods
jae
xor
xchg
frstor
insb
imul
data16
fiadds
test
push
sahf
jp
pop
lock
loopne
xchg
mov
and
xor
shl
mov
xchg
dec
inc
rcll
inc
mov
sbb
icebp
or
jno
push
lds
pop
or
and
jmp
stos
mov
std
das
xorb
movsb
pop
dec
ss
test
test
nop
shr
sahf
cmp
scas
sub
mov
mov
and
imulb
lea
movsb
movsb
pusha
popf
aad
adc
jnp
and
jl
pop
sbb
out
pop
mov
pushl
imul
mov
pop
and
cmp
scas
adc
pop
mov
icebp
int
movsl
je
mov
lock
fisttps
mov
sbb
pop
cli
ffree
sahf
fwait
sarb
clc
sbb
repz
outsl
dec
es
cltd
jb
mov
or
and
add
mov
push
add
xchg
test
in
mov
push
xor
mov
mov
add
loopne
dec
xor
rcrb
subl
xchg
mov
repnz
roll
and
aaa
test
xor
insb
xchg
mov
jle
push
jl
pop
int3
xor
lods
out
and
push
loopne
dec
ss
lods
lods
sbbb
mov
stc
subb
inc
mov
ds
or
pop
fs
int
mov
push
dec
dec
pop
mov
jmp
push
lcall
xor
jle
or
dec
push
cli
pop
loop
sub
and
sbb
mov
roll
mov
cmp
int
push
and
xchg
jecxz
jge
pop
xchg
xor
sub
xchg
inc
bound
into
mov
movsb
scas
jns
or
push
rolb
inc
fbstp
inc
test
lods
lret
sub
push
pop
and
push
testb
mov
inc
mov
add
mov
xchg
dec
cmpl
mov
cmp
lea
sbb
push
cmpsb
cmpb
push
jae
out
ja
movsl
jmp
mov
lods
pop
lret
mov
jno
and
test
fistpl
in
aaa
and
pop
mov
push
push
iret
icebp
mov
jle
sbb
mov
jp
push
das
or
out
and
jns
int3
lods
jo
and
inc
sbb
and
sub
shrb
push
pop
mov
jmp
or
insl
mul
jp
addl
sbb
jmp
inc
les
cld
jg
ds
mov
fists
push
cmp
adc
dec
xchg
mov
xchg
sub
fisubs
mov
sahf
ja
lea
and
jp
pop
adc
xchg
or
jno
jmp
or
lock
cltd
push
dec
pushf
dec
arpl
cmp
jg
inc
inc
out
and
ficomps
jns
add
pop
clc
jbe
ret
xlat
jecxz
mov
or
scas
pop
dec
lods
in
mov
xor
cmp
out
fs
push
lea
decl
dec
loopne
das
add
add
rclb
push
pop
push
loop
daa
dec
mov
jge
inc
fsubl
push
stos
inc
dec
negb
out
mov
push
je
enter
pop
rcl
pop
push
cmp
ljmp
pop
fdivrp
push
into
cs
sbb
xchg
push
sbb
repnz
mov
jnp
pop
jae
mov
mov
push
jge
jecxz
daa
addr16
push
ret
mov
sub
fldt
data16
push
or
out
xor
rcr
cmp
jb
mov
icebp
mov
and
jne
pop
shlb
pop
jno
add
cld
ret
pop
mov
xchg
clc
mov
aam
push
std
fs
iret
pop
dec
loopne
js
dec
adc
repz
mov
daa
add
loopne
popf
addr16
inc
scas
mov
scas
int
push
mov
xchg
sbb
xchg
insl
pop
push
push
sbb
jecxz
rcl
mov
psllw
push
jb
in
dec
jno
add
in
pushf
fadd
popa
rorb
int
fidivs
hlt
adc
inc
mull
pop
xor
cmp
cli
je
cmp
test
or
sbb
insb
or
subl
inc
ds
mov
pop
andb
lods
or
lahf
in
jne
movsl
jb
add
enter
cld
sub
inc
and
loopne
arpl
mov
movsb
rorl
lret
jmp
cmpsl
and
push
mov
mov
jmp
sahf
mov
or
sub
fwait
into
xchg
shlb
lcall
cli
or
push
outsb
fnstsw
jl
add
sahf
shlb
jmp
sar
lahf
lahf
push
and
mov
cmp
xor
shll
mov
cmp
push
inc
je
jo
inc
sub
adc
rorb
stos
aam
push
pop
sub
mov
shrl
roll
push
loope
mov
mov
push
shll
and
lods
dec
sub
or
push
out
bound
jle
or
jnp
test
mov
mov
ss
mov
ds
rorl
mov
insl
loopne
mov
roll
test
insb
sub
test
mov
pop
push
push
jp
out
arpl
add
bound
stc
ss
int3
sub
jecxz
sub
cmp
jb
pusha
or
push
imul
adc
inc
add
jmp
push
cmp
sub
xchg
stos
mov
daa
and
lret
clc
ja
mov
stc
dec
cmp
push
adc
inc
cmp
out
push
mov
ficomps
ljmp
popf
inc
mov
shrl
lcall
push
inc
push
sti
loope
out
or
pop
clc
jb
imul
mov
nop
dec
pop
notb
cmp
xchg
xor
mov
cmp
cmp
pop
and
inc
jb
dec
sub
fbld
jnp
fsubl
push
sub
je
sahf
cs
mov
cmp
push
sub
mov
into
or
inc
push
mov
aaa
xchg
mov
aas
mov
cld
push
cmpsl
cmpsl
das
fs
pop
rorl
shl
xchg
adc
inc
loop
ds
fiaddl
xchg
pop
lods
out
in
mov
sub
xchg
add
inc
push
push
xchg
push
nop
inc
shrl
cmp
shll
jbe
cmc
lret
lcall
mov
aas
test
cmp
sbb
lods
xlat
jno
call
jno
add
ret
mov
xor
cld
leave
aad
cmp
mov
movsl
or
or
sub
inc
cltd
out
jo
xor
int
out
fnstenv
mov
jne
fadds
cltd
add
lret
sbb
insb
repz
xor
clc
cmp
mov
ss
and
cmp
inc
xor
fistpll
cmp
xchg
push
arpl
push
mov
mov
lret
scas
nop
fs
and
xchg
aaa
sti
or
adc
in
daa
insl
ficompl
sub
push
mov
xor
xchg
sbbb
cltd
mov
pusha
mov
inc
aas
pop
xlat
rcrb
ret
pushf
mov
add
xchg
cmp
mov
sbb
dec
jecxz
mov
dec
xor
cmp
sbb
fdivl
jg
mov
aas
lcall
push
in
cli
xchg
mov
xor
es
add
dec
fidivrl
int3
test
cmp
xchg
pusha
aas
js
outsl
push
lret
scas
mov
xor
mov
sar
test
lods
es
fiadds
rolb
cmp
cmp
das
fcmovne
pop
push
test
lret
sbb
cmpsb
push
movsl
pop
imul
or
ffree
mov
pop
jp
xchg
sub
and
jl
icebp
jp
push
aaa
mov
ret
jge,pt
adcl
and
lock
aam
std
ror
fldt
sbb
or
fists
pop
sbb
mov
daa
cmovae
jb
mov
in
sub
or
dec
loope
jno
cld
test
dec
jmp
cltd
inc
movsb
rorl
add
subl
or
rclb
jmp
out
mov
and
pop
fiadds
js
cmp
and
cmp
fs
jne
movsb
xlat
dec
and
add
pop
lock
fprem
push
push
repnz
shll
and
pop
sub
dec
inc
jge
cmp
sub
and
aaa
push
addr16
out
stos
push
ljmp
mov
mov
inc
xchg
jge
test
clc
mov
scas
inc
aad
and
out
aaa
scas
cmpl
test
or
lods
push
ja
loopne
roll
xchg
mov
pop
loope
adc
xor
int
je
mov
pop
enter
stc
sbb
icebp
fwait
cmp
sahf
out
test
mov
iret
incb
jnp
repnz
xchg
dec
loop
sbb
paddusw
lret
mov
clc
test
ret
xchg
nop
adc
sbb
push
movsl
rcr
pop
arpl
adc
jge
insb
sub
xor
fisttps
sub
ret
mov
je
xor
adc
repnz
in
push
outsb
cmpsl
sbb
jnp
adc
push
or
xchg
insl
mov
pop
pop
lcallw
sub
inc
js
test
aaa
movsb
hlt
mov
cmp
popf
shlb
pop
test
mov
scas
jno
outsl
mov
out
test
repz
jb
jns
cwtl
xchg
adc
rorb
out
in
movsl
pop
xor
inc
push
out
dec
nop
ja
aaa
fs
movsl
lcall
insb
lock
cli
pop
nop
and
out
add
sarb
sub
pop
add
repz
mov
mov
adc
cmpsl
fisttpl
mov
dec
push
sub
xchg
pop
mov
pop
in
push
cmpl
rcl
scas
roll
js
push
daa
daa
adc
add
insb
cmp
lret
outsb
sahf
push
mov
dec
adc
adc
add
fmuls
xorb
or
pop
popw
xor
mov
out
dec
repz
jnp
xor
cld
std
mov
fdivs
mov
mov
push
dec
fsubrs
xchg
and
mov
pop
jg
jnp
sbb
icebp
je
sbb
repnz
sar
loopne
sbb
out
inc
pop
clc
sbb
fcom
aam
aas
fisttpl
ds
mov
andb
mov
sbb
push
sarl
loopnew
xor
jp
jbe
push
call
jp
aad
arpl
fwait
cmp
js
cmpsb
sti
jmp
inc
xor
mov
push
setb
orb
ret
push
aas
mov
xor
cmc
fidivs
cld
mov
mov
aas
subb
and
pushw
pusha
jge
pushf
sub
js
stos
aas
aaa
xchg
jne
movsb
add
cmp
addr16
fstpl
push
hlt
jge
adcb
adc
mov
adc
mov
xlat
add
dec
push
adc
dec
nop
es
hlt
xchg
add
fistl
ret
or
mov
inc
xor
add
in
addl
sbb
jecxz
sub
dec
jmp
call
aad
mov
js
jne
in
fsubp
ficoms
mov
ret
pop
mov
repnz
add
mov
mov
jno
mov
aad
ror
cltd
sti
in
sahf
inc
mov
shl
cmp
in
cmc
mov
fidivl
ficomps
nop
imul
pop
dec
shlb
leave
shr
addr16
sbb
mov
cltd
les
mov
pop
test
ret
mov
xor
pop
pop
mov
mov
out
mov
enter
into
pop
movsl
cmp
jmp
push
in
daa
repnz
mov
popa
xchg
cmc
jl
jecxz
jns
pop
test
shl
xor
xor
jmp
mov
and
dec
push
sbb
mov
add
je
js
femms
arpl
mov
sub
xor
jl
xor
cli
aas
frstor
lcall
adc
fildll
std
arpl
dec
sub
enter
add
push
push
adc
add
pop
jnp
or
xchg
in
ljmp
adc
imul
cmp
fsubrs
adc
inc
and
jae
xor
jle
fwait
bound
rcr
mov
inc
dec
aas
pop
xchg
iret
push
adc
sub
pop
sbb
cs
dec
xor
aad
lcall
loope
test
repnz
push
fucom
cltd
test
xor
add
push
xor
sbb
int3
repnz
mov
mov
fwait
icebp
cmpsl
shr
test
inc
push
cmpsl
inc
cld
lret
inc
mov
imul
mov
cld
xchg
outsl
repz
rorl
cmpsb
enter
jge
push
xchg
adc
adc
and
xor
mov
roll
fs
mov
sti
sbb
fwait
xor
jle
dec
or
push
mov
and
cmp
fiaddl
xor
outsl
add
sub
out
fldt
cmc
sbb
sub
stos
pop
movsl
loope
int3
cmp
sbb
inc
aam
fsubrs
cmp
xor
mov
and
lods
adc
jb
push
sahf
xchg
mov
sub
push
and
int
sti
bnd
mov
xchg
hlt
dec
lret
mov
leave
sub
lahf
mov
dec
and
inc
pop
push
nop
stos
sub
sub
in
push
cmpsl
jne
mov
sahf
pop
jnp
inc
pop
adc
and
cmp
sbb
jp
loop
dec
mov
jbe
and
out
je
data16
cmc
loope
sub
sti
add
push
stos
in
mov
out
xlat
mov
push
outsb
in
mov
cmp
adc
adc
jns
push
addr16
out
shll
lcall
adc
push
adc
push
add
movsl
cmovge
cmp
jg
xor
cltd
jne
or
hlt
aam
js
test
lds
pop
ret
std
sub
imul
xchg
push
out
fcmovnb
mov
and
cld
cmp
sbb
or
je
hlt
fwait
jecxz
in
ja
cmpsl
jg
outsl
sbb
inc
adc
in
mov
movsl
sbb
inc
mov
roll
loop
ret
xlat
pop
pop
std
rcrb
leave
das
jle
movsl
mov
adc
jmp
mov
subps
and
mov
shll
adc
mov
movsl
jp
xor
loopne
push
jns
mov
cld
cmp
inc
sub
cmp
push
out
add
cld
test
loope
xor
fcoms
jge
mov
xchg
out
bound
hlt
add
int
pop
movzbl
fiaddl
and
mov
data16
mov
mov
mov
jmp
pop
mov
sti
jns
sbb
movq
les
insl
push
sti
adc
jecxz
fbstp
jmp
lahf
pop
std
or
xchg
ljmp
adc
ljmp
jmp
dec
setg
sub
cli
daa
push
jb
gs
in
pop
inc
pop
jge
sub
or
int
in
xlat
dec
mov
fiaddl
into
lret
sti
mov
mov
or
insl
cmc
inc
xor
mov
sub
loope
mov
mov
mov
popl
inc
aaa
and
or
in
shlb
jmp
xor
inc
mov
or
loopne
cmpb
ret
add
fdiv
mov
loop
sbbl
in
mov
push
and
cmc
icebp
lea
and
add
int
xlat
pop
add
xchg
cltd
insb
mov
sub
arpl
daa
imul
jne
mov
mov
int3
stos
xchg
lods
and
nop
jl
push
fisubrs
adc
sbb
lcall
mov
xor
adc
aam
out
or
stos
ljmp
jp
sbb
cmp
push
lds
inc
push
add
rcll
and
ret
aam
mov
fsubl
hlt
stos
shlb
mov
sbb
xor
mov
mov
mov
mov
hlt
popf
xor
pop
adc
xor
outsb
sub
imulb
mov
lcall
jmp
sub
or
scas
sbbl
lea
call
sbb
mov
jg
add
mov
sub
xlat
iret
in
imul
push
jnp
sub
mov
movsb
sbb
add
jmp
pop
inc
xor
fnstsw
addr16
lahf
jae
popa
imul
dec
in
or
cmp
push
and
pop
pop
dec
mov
lret
mov
shr
subb
imul
or
xor
subl
int3
inc
je
jl
jl
sub
sbb
fsubrs
lret
imul
cmp
or
mulb
inc
stc
fldenv
sbbl
popf
adc
sub
les
xchg
shll
addr16
pop
data16
outsb
mov
cli
inc
mov
fs
orl
xor
loope
loope
test
mov
fsub
mov
ret
je
out
push
pop
push
repz
and
cs
add
and
in
nop
sti
loopne
inc
sub
or
test
sbb
movsb
subb
push
inc
mov
jmp
repnz
cwtl
cmp
inc
inc
ret
hlt
cld
gs
sub
adcl
lock
sub
jns
sub
in
enter
cmpsb
and
loope
cmc
jmp
dec
adc
cwtl
notl
call
mov
cwtl
sbb
add
lahf
fimuls
mov
repnz
inc
out
xchg
bound
cmc
les
fstps
push
jp
cmp
imul
sub
mov
mov
ljmp
mov
and
insl
adc
push
dec
mov
inc
xor
jmp
xor
push
repz
jnp
aas
xor
in
fcmovbe
stos
data16
mov
xor
jl
shll
ds
mov
decl
out
into
mov
arpl
addr16
pop
sub
mov
inc
pop
mov
jg
sub
cmc
lods
leave
push
inc
lea
rcl
or
sbb
xchg
cmc
daa
mov
jb
cmp
mov
pop
rcll
scas
daa
sbb
cmc
mov
into
jmp
push
jns
pop
jmp
aaa
sub
or
lods
aas
in
into
inc
rcrl
xor
aas
repz
fimuls
out
sbb
lret
pop
xchg
iret
les
int3
insb
push
mov
inc
sbb
call
adc
notl
ret
mov
dec
and
pop
mov
adc
imul
loop
les
jae
lret
stos
xorl
aam
lret
loop
cmpb
ss
or
loop
add
xor
test
mov
dec
shlb
loope
sbb
pushf
mov
cmp
add
pop
aaa
cld
pop
outsl
mov
mov
addr16
cmpsb
test
mov
lock
repnz
push
cld
aam
mov
adc
fwait
lahf
cmp
aaa
aaa
mov
in
ds
push
push
add
ds
lcall
dec
xor
mov
aad
in
adc
insb
cmp
les
pop
sub
outsl
mov
mov
cmp
pop
xor
aaa
dec
fidivl
xchg
xchg
jbe
inc
stc
or
xchg
notb
or
movsb
cmpb
sub
jp
repnz
xchg
xor
rcll
push
cmpsl
or
mov
arpl
gs
add
cld
jl
sahf
push
sbb
jg
aaa
jmp
add
jl
cmp
push
enter
dec
in
mov
pop
fs
xchg
mov
mov
imul
pop
inc
cmpsl
xor
out
dec
mov
cmpsb
sbb
flds
inc
mov
push
sub
mov
stos
sub
les
cmp
push
lcall
ljmp
les
mov
fdivl
mov
jmp
add
or
mov
jo
daa
dec
repz
pushl
stos
dec
xlat
out
sub
fsts
daa
movsl
dec
idivl
push
pop
insl
imul
xchg
add
dec
or
fcoms
adc
mov
and
add
or
mov
outsl
jp
jmp
aad
xchg
in
ret
popa
dec
xchg
pushl
loopne
jns
cltd
cmp
xchg
mov
mov
sub
mov
mov
mov
inc
stos
sub
ss
sub
push
sahf
out
push
mov
adc
dec
xlat
dec
or
jg
lock
sbb
mov
mov
sbb
push
leave
inc
int3
pop
push
adc
cmpsl
jo
test
pop
sub
inc
cmp
jcxz
mov
pop
mov
jecxz
bsr
jne
mov
loopne
subb
in
imulb
cmpb
dec
in
repnz
dec
popf
les
sub
sub
xor
and
mov
mov
dec
cmc
add
sub
int
div
fabs
les
aad
or
push
int
push
jns
and
cmp
insb
mov
call
xorl
aad
iret
sub
icebp
sti
arpl
xchg
sbb
mov
mov
aam
push
scas
test
xchg
mov
push
popaw
adc
and
jle
and
dec
cmp
cmp
jbe
jbe
sbb
push
rorl
cmp
cmp
add
or
sbb
xchg
mov
cmp
cmp
inc
jecxz
pop
gs
mov
es
movsl
fsubrs
aas
aaa
lea
les
xchg
mov
out
stos
call
loop
ficomps
out
mov
dec
xchg
in
dec
sub
clc
dec
adcb
push
pop
notl
or
add
clc
fisttps
idivb
xchg
data16
stc
ret
push
scas
popa
push
fsub
dec
add
es
mov
add
inc
mov
inc
lock
push
dec
and
sub
imul
jmp
sahf
fmull
les
xchg
jns
call
push
cmpsb
cld
mov
mov
jae
ret
cmp
scas
int3
cs
roll
dec
mov
and
sbb
sbbb
jmp
jmp
cmp
mov
lods
sbb
mov
movsb
scas
push
jl
xchg
insb
jo
or
mov
xchg
std
negb
cmc
or
in
push
in
gs
xor
mov
mov
sub
int3
pop
adc
arpl
jecxz
pop
adc
decl
mov
cmp
add
ds
jns
popa
mov
add
adc
inc
nop
cld
pop
sbb
imul
or
testb
fdivrl
pop
dec
shll
sub
popf
push
inc
popa
xor
addr16
cmp
out
ds
jbe
cmovo
je
outsl
inc
das
adc
out
mov
test
push
mov
aaa
faddp
xchg
mov
das
jbe
addr16
cmp
movsl
cmp
xchg
dec
mov
mov
enter
fcmovnbe
lahf
push
arpl
test
inc
clc
mov
mov
movsb
out
imul
ds
and
pushl
xlat
xor
xor
xor
inc
daa
das
mov
sbb
push
mov
xchg
push
cmpsb
jno
cmp
fnstenv
scas
dec
cmp
jecxz
xor
lock
cwtl
fwait
popl
pop
pushf
out
mov
test
dec
pop
icebp
jp
pop
xor
jge
cli
loop
mov
cmp
and
sub
pushf
iret
push
pop
dec
sbb
and
in
sbb
lret
shrl
aas
pushf
and
sub
push
test
hlt
test
addr16
ret
mov
inc
xor
fdivl
mov
dec
mov
xor
repnz
int3
mov
inc
jb
adc
in
cmp
cmpsb
xchg
int3
adc
loop
add
int3
insb
add
push
rorb
sub
push
pop
sbb
jle
dec
push
imull
ret
mov
inc
outsl
mov
mov
push
popf
divl
or
lahf
add
in
ret
fld
add
push
sub
pushf
pop
test
jbe
out
ljmp
pop
or
out
cmp
or
f2xm1
add
adc
test
mov
jb
leave
xchg
jg
xor
push
jge
adc
mov
rol
push
xchg
pop
and
insb
mov
mov
or
adc
adc
call
lods
in
dec
cld
fcoms
xor
xchg
test
sbbl
cmp
pusha
pusha
mov
es
mov
mov
sub
cmpsl
xchg
mov
sahf
xorl
je
xchg
arpl
int3
ljmp
pop
addr16
sbb
in
mov
iret
mov
dec
cli
cmp
cmp
cmp
xchg
ja
jecxz
test
or
shr
mov
xor
mov
fsubr
lea
mov
gs
sub
mov
mov
and
imul
pop
das
jl
or
mov
push
aaa
push
push
jge
push
mov
cmpsb
sbb
sbb
cmp
aam
mov
jno
sbb
pop
or
dec
loop
sbb
xchg
xchg
mov
inc
std
mov
push
push
leave
jmp
int
cmpsb
jge
divl
fcompl
mov
mov
push
add
mov
sub
mov
lret
leave
outsb
jecxz
fnstsw
pop
test
mov
mov
jne
sub
fs
xor
push
cmpsb
lods
fisubs
jp
mov
out
cmpsb
stos
iret
sarb
cs
dec
rolb
inc
imul
sbb
cmpsb
mov
xor
push
decb
addr16
fistpl
inc
pop
pop
jno
sub
cmp
sub
lds
push
push
dec
sub
and
sbb
movsb
pop
in
rclb
into
ret
jne
lock
lret
mov
int3
or
push
sarb
stc
in
dec
cmc
jns
imul
ret
dec
mov
mov
sub
fldt
lahf
mov
ret
in
pop
sub
pop
in
xorl
xchg
ljmp
shrl
xlat
aam
mov
int
lock
or
lahf
outsb
aas
daa
xchg
in
ljmp
outsb
add
aad
or
or
sti
mov
out
ljmp
clc
adc
sub
mov
flds
mov
pop
pop
xchg
push
or
jo
nopl
adc
movsl
adc
lea
fmull
nop
cmp
mov
rcr
test
mov
cmp
add
pop
faddp
cld
lcall
push
mov
xor
inc
jecxz
jl
test
xor
fstpl
repz
cmc
pop
jle
xor
fs
jb
or
push
in
or
cmpsl
stc
inc
scas
std
pop
aaa
mov
rcll
mov
cmc
xchg
sub
jo
fs
jp
push
pop
daa
fs
ret
lret
xor
xor
fst
out
mov
and
filds
pop
dec
shl
lods
cmp
sub
mov
mov
lcall
cltd
test
pop
and
lds
add
cmpsl
cmp
sub
inc
sbb
jmp
out
adc
outsb
sub
jmp
mov
jge
iret
into
sub
aam
pop
test
jge
xlat
dec
pop
popa
rcll
cmp
std
arpl
pop
daa
cmp
mov
in
xchg
scas
scas
arpl
sbb
jle
adc
addl
ss
mov
nop
sbb
mov
int
mull
mov
enter
das
mov
imul
push
adc
ficomps
cld
es
fs
sbb
andl
test
aam
shll
out
es
insl
bound
push
addr16
mov
xor
daa
xorb
gs
push
pop
or
popf
adc
mov
pop
addr16
jecxz
or
je
mov
js
pop
fadd
std
sub
xor
jae
xor
jmp
fnstenv
hlt
std
sarl
mov
in
mov
jmp
repnz
pop
les
xor
ss
adc
fwait
xchg
add
sbb
push
call
and
and
cmpsb
mov
sub
cmp
xchg
aad
adc
mov
ds
inc
lds
inc
js
cltd
jmp
mov
or
lea
in
mov
sbb
mov
aaa
cmp
and
pop
cmp
mov
push
lcall
inc
rcll
aaa
mov
mov
scas
aam
in
xorb
and
cmp
aas
mov
cmpsb
stc
pop
sbb
jecxz
push
into
xchg
xchg
ret
test
lods
or
clc
les
dec
cmp
jge
jbe
cs
bound
out
mov
mov
ds
mov
inc
aaa
sbb
int3
shlb
push
jb
ss
out
or
and
pop
out
dec
scas
mov
xlat
adc
std
jmp
outsb
aas
push
sbb
lock
cmp
cld
push
std
scas
and
addr16
lods
lods
outsl
cltd
pop
xchg
cmpsb
mov
xor
cld
mov
pop
xchg
mov
movsl
and
pop
sarb
jo
lock
push
in
adc
cmp
pop
addb
loop
fsubrl
ret
mov
rolb
testb
xchg
xor
or
mov
inc
lret
testl
fdivrp
inc
or
jb
xlat
push
cs
cmp
inc
ret
sbb
jbe
cmp
mul
xchg
xchg
adc
outsl
repz
push
loop
mov
xchg
jb
cs
daa
xchg
adc
xchg
orb
loope
xchg
pop
add
lahf
pushf
fwait
push
lcall
or
sbb
mov
test
jp
push
sub
int
scas
xor
and
push
jo
ja
cmp
insl
sti
es
ret
sbb
leave
insb
pop
adc
pop
push
jg
shrl
neg
cmp
movsl
jp
stos
out
pop
push
cmp
dec
outsb
loop
lods
xor
int3
push
inc
mov
cld
xorb
push
ss
stos
xchg
mov
xchg
lods
cmp
pop
mov
leave
das
xor
xchg
or
jbe
dec
jge
loop
popa
add
mov
and
mov
fdivr
jl
push
inc
test
xchg
insl
cmp
xor
xchg
sti
outsl
cmp
xchg
lcall
imul
mov
dec
jg
pop
inc
scas
mov
movsl
mov
mov
and
mov
lods
cmp
pushf
cmpsl
loopne
imul
inc
mov
mov
sub
xchg
je
sub
xchg
xor
nop
in
leave
jmp
cmp
dec
sbb
pushf
push
xor
sbb
xlat
add
sbb
ret
ljmp
push
stos
sbb
pop
negb
aad
xor
loop
orl
ja
mov
push
in
aas
xlat
xor
test
sbb
cli
fildl
sbbl
inc
add
popa
add
in
cmpsl
out
fdivrs
cmp
sub
xchg
sub
jecxz
or
push
movb
addr16
jb
pop
test
repz
rcl
sub
cmp
daa
int3
repz
push
jmp
loope
pop
xchg
mov
or
mov
xchg
into
clc
jmp
aas
sub
in
jp
jl
aas
push
sahf
push
sbb
jl
outsl
ljmp
loopne
jg
roll
inc
dec
mov
inc
xchg
bound
xchg
sub
or
and
call
sub
fs
ficomps
js
pop
push
xlat
sbb
imul
inc
repz
sub
sbb
daa
mov
sbb
call
popa
arpl
cmp
mov
iret
adc
es
and
and
sbb
mov
test
movsl
or
pop
test
fadds
cwtl
imul
xlat
int3
test
jp
lods
mov
fwait
cwtl
loop
jne
aas
mov
jno
cmpsl
inc
mov
jg
xchg
push
flds
cli
imul
aam
jnp
adc
movsl
push
jg
lcall
repnz
lret
and
lret
loope
scas
add
hlt
adc
add
pop
mov
lret
adcb
mov
pop
dec
mov
in
movsb
pushf
and
mov
mov
mov
add
mov
sub
add
jle
mov
cmp
pop
or
or
ret
gs
jle
pop
ret
sub
dec
test
mov
mov
xchg
mov
insb
jo
notb
push
sti
arpl
push
stos
push
push
test
les
dec
xchg
push
mov
divb
andb
fists
insl
push
rclb
push
sbb
push
stos
lds
pop
into
inc
and
into
sub
out
sbb
sub
aad
xchg
outsb
push
push
pop
outsb
out
sbb
shlb
cmc
leave
mov
xor
lods
cli
lahf
mov
xor
arpl
mov
pop
sub
push
stc
jb
fwait
out
mov
hlt
jae
mov
int3
subb
cs
push
inc
jno
add
repnz
add
repnz
jns
cmp
jbe
push
adc
dec
xchg
pop
pusha
add
fisttpl
pop
enter
out
cmp
cmp
in
rclb
and
mov
hlt
push
fs
test
addl
int
jno
out
dec
clc
lock
add
leave
jnp
jg
loop
mov
sti
fstpt
mov
mov
bound
dec
xchg
or
add
sbb
int3
or
nop
outsb
mov
js
adc
in
jecxz
sbb
mov
xor
and
inc
sbb
mov
pop
cmp
cmp
imul
xchg
in
and
dec
push
popf
add
das
cmp
in
cld
lret
mov
push
mov
gs
jb
inc
cmpsb
mov
call
aad
orl
in
sub
int3
xchg
jbe
popf
or
pop
sub
jl
dec
into
aas
inc
inc
cwtl
icebp
push
test
add
cmp
test
jno
int
inc
in
mov
outsl
sti
xor
jecxz
jl
push
mov
or
popf
jg
outsl
fsts
outsl
sub
pop
fs
outsl
xor
jbe
sarl
test
loopne
addb
insb
lret
outsb
jge
jno
mov
aas
mov
xchg
xchg
insb
pop
inc
icebp
aad
lods
lds
adcb
js
jae
add
xchg
inc
adc
jge
scas
pop
cmp
pop
mov
lahf
lret
push
dec
push
push
int3
sbb
sub
cmc
icebp
mov
mov
jne
fsubs
sub
adc
mov
mov
sub
add
and
loopne
add
mov
dec
lods
dec
call
pop
adc
push
lcall
mov
insb
mov
xor
das
mov
daa
mov
js
or
mov
sahf
pop
int3
add
fwait
inc
cs
push
inc
dec
test
inc
and
in
test
test
push
hlt
daa
push
sub
xchg
pusha
xor
jge
stc
mov
cmp
rcrl
lds
dec
xchg
push
pop
mov
jp
icebp
push
xchg
xchg
loope
inc
jne
pop
out
out
mov
insl
mov
push
pop
out
les
mov
aaa
lcall
pop
sub
test
scas
addb
scas
mov
shrb
cmp
xchg
or
lods
jne
and
out
and
cs
jl
loop
push
jbe
pop
nop
cmp
inc
or
add
adcb
xchg
dec
push
icebp
int
push
test
push
in
dec
cmpsb
repz
fldcw
dec
pop
cli
bound
jnp
in
icebp
int
test
repnz
and
mov
ret
xor
ljmp
pop
jnp
mov
ja
cltd
outsb
or
pop
ljmp
pop
lcall
jnp
in
or
int3
pusha
xchg
push
ret
out
stos
imul
xchg
xchg
lock
gs
adc
xlat
mov
cs
dec
fisttpl
icebp
sbb
je
xor
pop
xor
stos
loop
scas
mov
add
and
push
mov
dec
lahf
push
adc
clc
imul
out
mov
cmp
lods
test
cmp
aad
cmp
imul
loop
ficompl
testb
call
sbb
push
rclb
or
jecxz
adc
test
jnp
xchg
mov
xchg
mov
mov
popf
cmp
mov
mov
sbbl
bound
inc
push
mov
cltd
dec
gs
push
pop
fildl
pushf
imulb
icebp
dec
adc
add
xchg
gs
adc
scas
adc
cmp
insl
insl
xchg
add
add
pop
test
fisttpll
push
cltd
inc
ljmp
stos
pop
inc
aad
das
adc
pop
leave
cmpsb
push
mov
lock
in
push
jle
mov
adc
cld
xor
and
mov
and
inc
dec
lret
mov
icebp
sbb
mov
aaa
rorb
out
and
imul
insl
jo
repz
jmp
and
mov
int
popa
dec
lods
into
loope
xchg
nop
lods
gs
xor
push
mov
mov
jge
inc
call
xor
sub
mov
cmp
or
push
mov
xor
loop
cmpsb
movsb
out
std
add
fs
mov
sub
add
push
mov
cld
jno
mov
cld
aam
pop
mov
ds
movsl
into
jge
pop
or
imul
iret
iret
movhlps
add
add
push
fnstcw
shll
pop
imul
aam
cmp
lret
mov
lods
sar
ljmp
std
aad
xchg
data16
pop
insl
xor
inc
mov
pop
fadds
ss
fdivr
adc
push
pop
into
add
jne
pop
out
scas
outsl
xchg
jle
in
add
ss
pop
push
sub
dec
mov
add
ljmp
mov
jnp
dec
cmpsl
mov
mov
push
dec
lret
mov
jge
fsqrt
cmp
add
call
jb
mov
and
sub
lock
jns
dec
cmp
jmp
ficompl
or
mov
orl
dec
mov
lods
or
dec
jno
adc
pop
cmp
dec
pop
daa
pop
or
into
jle
mov
inc
es
stc
pop
inc
mov
sbb
xchg
pop
jge
and
cmp
loop
push
stos
sbb
cli
call
aaa
loope
sbb
mov
dec
mov
dec
cmp
ret
pop
or
sbb
pop
insb
je
jmp
cwtl
sbb
leave
push
and
xor
insb
outsb
jecxz
pop
loopne
lods
cltd
mov
mov
dec
es
xchg
hlt
cmpsb
xchg
jns
sarb
cmpsl
js
or
sbb
jae
jno
pop
cmpsb
inc
clc
scas
xchg
lahf
and
ds
test
fidivs
mov
hlt
push
jo
mov
psrlq
mov
repnz
cmc
push
mov
mov
jle
adc
inc
sbb
mov
inc
push
fwait
sbb
or
push
repz
test
aaa
ds
test
sbb
mov
sarl
cmpsl
out
ds
sub
push
fs
xchg
cmp
orb
adc
cli
sbb
mov
jmp
add
dec
leave
adc
pop
inc
xchg
es
mov
cmp
xor
shl
adcb
mov
flds
imul
inc
mov
inc
mov
movsl
push
out
sbb
mov
fisubrl
inc
lcall
pop
adc
cwtl
add
lahf
mov
adc
mov
lods
lcall
fwait
cmpl
stc
xchg
dec
out
xchg
and
daa
push
pop
loopne
cmp
ds
add
es
fs
pop
nop
mov
pop
pop
dec
inc
mov
jecxz
lret
mov
xor
leave
js
je
mov
push
stos
mov
cmp
icebp
pop
sahf
arpl
sbb
fxch
mov
mov
pop
xor
lds
cmp
jp
adc
mov
mov
sbb
lds
push
sbb
xor
sub
xlat
andb
jbe
mov
rcl
adc
in
nop
into
or
cmp
jp
jnp
mov
push
shll
adc
lods
add
pop
or
ljmp
cltd
flds
lcall
stc
imul
cmc
sbb
sti
or
jbe
enter
insl
xchg
xor
inc
nop
andnps
jecxz
insb
xchg
sbb
xor
leave
mov
or
insb
sbb
in
and
jmp
rorb
fwait
push
inc
call
and
dec
cmp
mov
adc
mov
push
aam
lods
inc
jp
cmpl
fninit
add
mov
dec
push
pop
mov
loop
mov
mov
int
cmc
ds
in
mov
inc
mov
sbb
push
adc
enter
jo
test
popa
mov
stos
xchg
pop
data16
xchg
jae
pop
pop
cltd
mov
outsl
mov
push
dec
push
mov
pop
or
mov
scas
stos
push
pusha
mov
and
and
xchg
pushf
pushf
adc
push
jl,pt
fwait
sbb
cmp
jbe
xchg
push
lods
jae
bound
out
popf
out
and
idivl
sub
loop
mov
mov
xchg
sbb
push
inc
lahf
std
push
imul
push
jne
lcall
mov
push
sbbb
stos
push
pop
xor
aaa
rcrb
push
cmpb
mov
push
mov
arpl
push
cmp
mov
xchg
pop
dec
add
in
scas
jle
jmp
push
jbe
jle
std
inc
rorl
shl
rorb
lret
imul
arpl
aam
pushf
push
mov
push
lret
or
push
mov
fsubrp
shll
pop
inc
push
cli
mov
std
lret
add
xor
mov
sahf
jo
xchg
and
sub
sarb
popa
xchg
in
push
enter
pop
test
inc
ja
out
ficomps
andl
fiadds
dec
pop
pop
cmp
lret
sub
and
cld
test
mov
adc
or
dec
out
rolb
sbb
fcmove
jle
mov
fcmovnu
loop
push
repz
push
xorb
fs
mov
mov
out
sub
jecxz
sbb
fwait
cltd
leave
or
xchg
sbb
mov
js
jns
mov
push
pop
aam
mov
imul
lods
push
and
scas
push
sub
jbe
out
ret
imul
hlt
inc
mov
jmp
es
jl
mov
popa
stos
and
mov
adc
xor
cltd
lcall
outsl
xlat
out
call
pop
outsb
pop
pop
mov
push
mov
pop
push
lretw
xor
sub
mov
cmpsl
xchg
adc
je
lret
inc
lock
inc
cmp
out
push
mov
pop
in
push
mov
fcoml
mov
int3
inc
sbb
dec
dec
pop
xchg
dec
cmp
mov
add
cmpsb
jmp
mov
jecxz
loop
in
adcb
in
inc
pop
mov
shlb
in
push
add
lret
lods
sub
sahf
lahf
xlat
out
inc
fdivrl
imul
insl
push
jo
rolb
mov
inc
std
mov
inc
inc
push
rclb
dec
cmp
pop
sbb
in
mov
cmp
fdivrl
arpl
jbe
mov
jmp
inc
movsl
jecxz
gs
mov
add
sbb
leave
jl
mov
inc
sub
mov
repz
adc
add
inc
ds
sbb
sub
loopne
mov
test
imul
insb
inc
movsb
in
xchg
aas
dec
cltd
cs
adc
ss
add
lahf
es
rorb
cmp
out
out
fimuls
pop
stc
xchg
push
jmp
mov
mov
sbb
dec
sahf
cli
mov
repnz
mov
add
add
mov
test
inc
pop
nop
mov
xlat
mov
out
test
fwait
cmpsl
pop
pop
fxch
push
daa
lcall
pop
inc
adcb
js
and
movsb
sbb
sahf
push
out
dec
push
add
out
nop
jns
cmpsb
sub
add
ret
bound
incb
in
or
pop
sub
dec
pop
ljmp
pushf
aam
jg
ret
push
ja
scas
adc
fildll
mov
jg
test
adc
sbb
int
leave
lret
and
sbb
lahf
xchg
imul
test
mov
bound
jge
adc
ret
xchg
xchg
xor
enter
xor
jmp
pusha
adc
gs
and
jmp
xchg
push
push
mov
lret
pop
pop
jl
cli
out
fnstenv
mov
jno
cmp
out
pop
insl
mov
pop
lock
sub
aam
or
icebp
push
test
inc
imul
sbb
mov
hlt
pusha
lea
fst
mov
sar
imul
push
push
in
jge
or
add
shlb
xchg
das
dec
and
test
lds
xchg
outsl
rorb
imul
jnp
adc
insb
adc
std
popa
out
into
sub
pop
movb
push
repz
je
sbb
xor
dec
and
mov
mov
push
das
fwait
push
std
mov
add
andl
sub
popa
leave
mov
int
and
imul
push
cwtl
jo
ss
mov
outsb
cmp
dec
pop
imul
add
test
xchg
jl
mov
fsubrs
das
sbb
popf
xor
and
mov
push
test
cmp
addr16
repz
jae
mov
jl
mov
or
out
xchg
decl
test
lods
stc
loope
imul
cltd
cli
fwait
jns
shr
jmp
push
mov
jmp
lret
jmp
or
out
mov
ljmp
xlat
cld
jne
mov
or
mov
push
pop
mov
aaa
rcrb
clc
sbb
dec
sbbl
lahf
out
cmpsb
inc
test
fnstenv
add
and
out
fsubs
add
pop
mov
in
jno
cmp
enter
add
and
sti
subb
sub
test
lcall
jge
aam
mov
pop
inc
push
xor
shll
es
sub
adc
jl
jnp
pop
mov
add
mov
in
test
pop
js
sub
mov
in
mov
mov
cmp
inc
mov
nop
or
adc
dec
es
xchg
xor
dec
and
xor
pop
inc
or
in
adc
test
cmc
pop
mov
outsb
loop
or
inc
push
outsl
cmpsb
mov
dec
lock
jle
jp
addb
out
push
shr
ret
enter
stc
scas
aad
push
jecxz
data16
xlat
push
popa
lcall
xor
iret
adc
imul
adc
jge
hlt
fistl
popf
cmp
and
adc
and
mov
aas
mov
dec
aas
mov
push
jl
and
fisubrl
fwait
mov
loopne
cltd
in
lds
fwait
adc
xor
jecxz
mov
scas
mov
sub
pop
lcall
pop
inc
repz
arpl
dec
sbb
jo
push
idivb
jno
push
inc
movsb
xlat
or
jne
jmp
in
test
sub
cmp
dec
lahf
fwait
xchg
add
notb
std
push
xchg
ss
jbe
stc
or
cmp
jb
mov
mov
ret
movsl
add
and
sub
in
sbb
call
jmp
mov
daa
aad
stos
es
xchg
mov
xchg
stc
enter
lods
ss
cmp
arpl
jp
push
sbb
mov
mov
pop
dec
sbb
sub
in
aaa
in
or
shrl
cs
stos
pop
xchg
fimuls
lods
cmc
mov
jp
in
mov
pop
leave
adc
mov
sub
pop
jo
mov
adc
arpl
push
adc
fisubl
mov
jns
pop
inc
cmp
mov
mov
push
pop
mov
nop
ds
dec
repz
push
test
and
push
mov
xor
addr16
sub
mov
pop
vpsrld
adc
pop
sbb
cmpsl
push
jmp
sbb
js
je
loope
out
xchg
add
ret
adc
push
mov
jo
inc
fidivs
or
jmp
or
adc
fs
cmp
sbb
jmp
out
cltd
mov
or
mov
jmp
arpl
or
out
push
sahf
subl
and
mov
loopne
shll
loopne
loopne
inc
frstor
push
adc
popa
push
aas
scas
mov
iret
notb
jae
jae
pop
ss
or
mov
sahf
sub
fldenv
inc
aaa
push
dec
inc
addr16
and
jecxz
sti
or
mov
dec
test
inc
in
mov
repz
add
test
mov
sbb
sub
pop
push
in
or
pop
data16
xchg
mov
add
lds
popf
cs
inc
push
scas
movsb
inc
pop
repnz
fstpt
stos
push
aam
push
sub
xchg
pop
jl
push
mov
inc
push
mov
sahf
lea
xor
outsb
loope
ds
movhps
out
outsl
popa
jmp
std
movsl
or
rorb
dec
in
pop
mov
mov
je
pop
jmp
xor
xchg
and
arpl
iret
inc
rorb
cs
jo
lock
push
test
add
test
in
sbb
xchg
cmp
inc
aaa
cmp
mov
xchg
dec
pop
xor
movsb
and
jbe
dec
mov
mov
in
pop
dec
arpl
sub
jg
stc
mov
xchg
dec
bound
adc
xchg
mov
fstps
sub
dec
lods
sub
faddl
or
adc
cwtl
dec
dec
mov
aaa
or
push
push
xor
push
push
arpl
dec
loopne
mov
mov
ret
or
cs
adcl
lahf
adc
sti
shll
pop
xchg
sub
out
xchg
xchg
jno
mov
in
or
pop
jp
ds
sahf
mov
adc
adc
and
scas
and
xchg
push
addb
add
xor
stos
push
inc
xchg
mov
cmp
mov
fs
repnz
dec
ret
push
inc
sbb
movsl
mov
adc
mov
xor
inc
jae
sarl
sarl
inc
mov
repnz
shll
mov
xchg
arpl
and
push
push
mov
inc
stc
fistps
mov
lock
ret
jmp
dec
in
mov
adc
xchg
ror
jmp
lods
test
adc
cmp
push
and
or
in
mov
push
push
das
inc
mov
imul
inc
mov
cmp
inc
dec
subl
andb
lahf
dec
dec
mov
aas
mov
xor
push
cltd
in
test
bound
push
inc
sub
cwtl
xor
adc
push
jns
popa
push
push
addr16
es
and
pop
inc
stc
inc
jmp
stc
cwtl
je
xchg
jge
pop
les
inc
inc
sarb
pop
shll
shlb
jb
pusha
sahf
aam
int
in
popf
cmp
adc
rorl
insl
cltd
imul
inc
mov
jmp
dec
lods
loopne
mov
push
or
adc
arpl
cmp
stos
call
das
dec
cwtl
inc
rorl
cmc
cmp
stc
in
jbe
repnz
cs
and
mov
mov
push
leave
inc
out
xchg
out
int
aam
roll
sarl
and
cmp
in
push
pop
insl
or
aad
insb
pop
inc
xor
enter
inc
leave
pop
pop
jl
push
jne
sub
inc
jp
inc
in
cld
jae
mov
xchg
jge
dec
ds
das
test
notl
inc
mov
jb
mov
loope
and
addr16
lcall
fstps
and
jno
or
and
movsb
out
and
mov
and
std
mov
das
test
push
cwtl
adc
and
ja
repnz
pusha
lods
dec
xchg
jg
icebp
pop
cld
xor
loope
notb
xor
out
xlat
mov
fnstenv
lahf
mov
sub
cli
adc
outsb
movsl
push
sahf
mov
push
dec
jp
scas
dec
mov
rclb
in
mov
cmpsl
jg
jb
call
cmp
mov
cmp
les
scas
add
pop
xchg
jnp
and
mov
shll
fadds
fstpl
mov
lods
pop
enter
inc
mov
cmp
fcomps
pop
out
cmp
test
pop
xchg
dec
orb
jecxz
and
mov
inc
jbe
int
push
xor
int3
pop
xchg
mov
jle
into
mul
lods
mov
lea
xchg
push
xchg
lret
sbb
push
sub
add
lret
fildl
cmp
ffreep
sub
scas
cmp
mov
das
enter
sub
mov
mov
mov
lcall
sub
mov
popf
or
and
int
loopne
shlb
repnz
mov
sti
inc
js
dec
sub
adc
sub
pushf
cmc
pop
nop
ljmp
rorb
in
mov
xchg
clc
pop
pop
pushf
faddp
out
and
stos
ss
cli
outsb
add
cmc
lahf
lret
lods
and
in
es
das
shlb
andb
lahf
push
loop
pop
aad
rcr
popa
pop
nop
push
or
or
les
popa
popa
mov
stos
dec
push
mov
mov
mov
xor
jno
push
inc
mov
push
test
pop
push
and
addl
ret
cmp
and
outsl
rorl
mov
fprem1
call
mov
js
pop
xchg
jne
pop
scas
mov
mov
push
fwait
aas
mov
dec
ss
movsl
sbb
rcr
push
mov
and
push
sub
addb
mov
ljmp
jle
xchg
ds
pop
outsb
add
cmp
xchg
inc
or
xlat
sarb
lret
jp
shl
and
mov
shrl
ljmp
jne
stc
in
mov
scas
in
xchg
inc
inc
xchg
sahf
je
mov
adc
pop
jae
std
dec
xchg
sub
add
les
sbb
stos
into
insl
push
xchg
pop
leave
xor
sub
loopne
div
push
sbb
stc
pushf
repnz
cltd
les
subb
imul
leave
inc
inc
push
xchg
jge
push
lods
fwait
dec
test
or
fcmovnb
cld
out
fldenv
xchg
jae
jge
data16
sub
lock
sbb
push
fs
push
in
adc
outsl
add
xchg
cmp
sub
add
ss
call
mov
outsb
inc
arpl
popa
popf
popl
push
sbb
xchg
xor
jecxz
and
pop
dec
es
test
mov
pop
ret
loop
pop
push
mov
out
pusha
nop
inc
mov
push
stc
in
dec
mov
addb
test
lds
fists
imul
mov
mov
es
clc
cmp
xchg
push
stc
xlat
icebp
cmc
jecxz
insb
dec
sub
push
xor
es
jns
lahf
cmp
mov
lret
out
xor
or
insl
add
je
loope
pop
adc
push
fcmovnb
lods
je
loop
add
add
inc
lds
push
stc
in
mov
jae
lahf
pop
fstps
sub
push
push
mov
mov
and
mov
aas
sub
and
mov
dec
ret
es
in
daa
inc
jae
sti
xorl
hlt
dec
pop
loope
cwtl
ljmp
decl
add
ds
mov
int3
jo
mov
adc
scas
fst
fwait
inc
push
xor
lret
sbb
jbe
fistpl
mov
sub
es
dec
dec
jge
and
push
dec
jmp
call
sub
mov
les
and
cmpsl
jb
jmp
fldenv
test
push
test
lret
xchg
sub
pop
subb
mov
sub
lahf
push
xlat
push
push
int
imul
hlt
xchg
xchg
xchg
dec
push
inc
es
ss
movsl
ja
movsl
popf
or
fmuls
rorl
addr16
jno
popf
rcrl
xchg
jle
jecxz
clc
or
push
stos
scas
mov
in
fiaddl
dec
push
sbb
jl
je
or
ja
sub
hlt
ljmp
int
jmp
mov
pop
jne
pop
lock
out
inc
fisttps
in
mov
enter
xor
adc
cmpsl
test
popa
inc
js
ds
add
pop
test
ss
rcrl
inc
sub
test
add
or
enter
in
iret
pop
mov
mov
mov
dec
sbb
rcll
bound
arpl
shrl
mov
repz
into
ljmp
fdivs
mov
jp
ret
sbb
pop
testl
dec
shll
shll
jb
mulb
std
dec
mov
iret
inc
xlat
xchg
adc
shlb
cmp
jb
ret
movsl
pop
pop
sbb
push
loop
std
xchg
xchg
mov
icebp
out
push
sub
flds
xchg
xchg
popf
icebp
lret
jge
subl
or
lods
hlt
sub
ja
daa
xchg
ret
pushf
xchg
and
push
ss
mov
lods
ds
xchg
dec
nop
jae
pop
in
inc
pushl
and
mov
mov
inc
push
xchg
aas
je
cld
lcall
jb
pop
inc
fwait
push
int
push
inc
xor
ret
pop
or
pop
or
fiaddl
insl
cmc
sub
scas
fwait
lods
inc
xor
add
mov
mov
xchg
xor
xorl
mov
dec
filds
outsl
cmp
cmp
lahf
mov
xchg
aas
stos
xor
or
cmp
cmc
lcall
int
loop
mov
inc
pop
push
cmp
or
jg
into
lods
jmp
adc
aad
push
loope
cmp
test
or
jge
xchg
sbbl
jmp
subb
inc
and
test
imul
and
jecxz
aad
and
outsb
outsb
add
in
daa
and
gs
lds
clc
mov
push
das
add
rcr
fstp
cwtl
xor
lret
daa
sub
jl
outsl
js
subl
push
cmovp
call
push
sahf
push
out
adc
test
push
test
popa
adc
mov
gs
mov
adc
loopne
ds
pop
mov
data16
push
xchg
dec
xlat
std
cmp
xchg
add
xor
xorl
out
xchg
cmp
jb
push
daa
jg
push
jne
stos
aas
daa
stc
mov
scas
js
ss
xchg
mov
jo
mov
jae
add
je
pop
inc
das
gs
or
adc
adc
imul
imul
pop
fwait
out
in
xor
nop
sbb
mov
movsl
jg
and
sarl
out
or
aam
cli
jle
mov
pop
test
popf
enter
fstp
aam
mov
dec
jp
sbb
int
jl
adc
lret
add
scas
mov
mov
js
xor
dec
into
in
loop
xor
mov
mov
jno
or
movb
mov
xchg
cwtl
jne
je
leave
fsubr
ret
xchg
int
xor
lds
imul
hlt
mov
or
or
pop
ret
sub
pop
pop
rol
sub
int
and
pushf
cmpsl
outsb
push
imul
sub
fdivs
pop
xor
adc
imul
pop
push
ja
pop
inc
add
sbbb
and
repz
ficomps
enter
adc
je
cmp
pop
adc
scas
cs
push
pop
repnz
sub
pop
repz
mov
jle
arpl
arpl
xchg
dec
call
in
adc
jns
xor
lock
mov
sbbb
stos
jecxz
in
cwtl
popa
popf
mov
aas
loopne
adc
orb
mov
mov
adc
or
movsb
in
popf
lea
mov
inc
jp
fsubl
jmp
stos
movb
inc
push
add
int
pop
xor
dec
addr16
enter
mov
mov
cmp
loopne
jnp
inc
scas
mov
test
sub
repz
or
push
sbb
stos
cmp
outsl
xor
loope
dec
jno
ss
sub
push
inc
ror
cmp
and
fs
push
mov
int3
and
cmpsl
iret
inc
mov
insb
mov
movsb
mov
nop
mov
scas
inc
push
test
rorb
in
in
cmpsl
mov
sbb
xchg
add
xlat
hlt
cmp
push
pop
jns
mov
mov
cmp
imull
push
pop
cld
leave
jge
rclb
jl
gs
aas
cmp
sub
loop
mov
and
ret
inc
and
or
push
scas
xor
xchg
dec
cltd
xchg
popa
pop
cs
cmp
arpl
loopne
and
jno
hlt
int
xor
fcmovnb
std
add
push
into
xor
xchg
shrb
sub
xor
or
int3
iret
xchg
dec
xor
in
dec
push
ljmp
xchg
fmul
mov
cli
sbb
insl
jbe
push
mov
sub
loopne
pop
scas
adc
mov
or
ja
adc
pop
fisubl
fisubrl
cmpsb
jle
sub
xor
sbb
jns
cmp
jne
sbb
or
or
test
push
lcall
fninit
rorl
mov
sub
cmp
sbb
adc
aam
lret
inc
adc
les
xchg
dec
pop
lahf
push
push
xchg
fdivl
mov
and
jb
push
xor
or
sahf
sub
clc
cmp
gs
out
sub
cmpsb
iret
adc
fwait
add
repnz
sub
mov
sarl
or
aaa
sbb
ret
cmp
stos
js
sub
loopne
les
aas
pop
jbe
je
ret
sub
cmp
mov
fildll
sarl
adc
pop
fnstcw
rolb
sbb
pop
popf
mov
in
std
sub
je
xor
arpl
rorl
ud1
test
mov
in
mov
sub
push
mov
pop
rcll
loop
rcr
stos
adc
and
adc
call
xchg
addr16
adc
jb
add
mov
repnz
fmuls
cwtl
push
je
mov
jns
mov
idivl
or
inc
addr16
rcrl
mov
cmpsl
or
orl
rol
jns
or
jge
rep
add
xor
cmpxchg
not
sahf
or
orl
push
ds
cmpsb
xor
pop
or
sti
out
leave
fldl
mov
scas
jb
jecxz
out
into
pop
add
xor
sbb
fwait
dec
adc
add
fcoms
fdivs
and
scas
bswap
fisttpl
dec
sbb
gs
fbld
sbb
push
xchg
mov
push
cs
pop
inc
push
or
jns
mov
xchg
xlat
aaa
out
xor
lcall
push
cmc
loope
jmp
movsl
test
imul
mov
outsb
jp
and
daa
inc
out
loop
outsb
mov
push
fadd
add
jne
lret
mov
dec
aas
mov
or
jecxz
mov
imul
cmp
clc
out
cmpsl
mov
adc
loop
sbb
adc
xor
test
lret
mov
movsb
xchg
xchg
xor
mov
ret
jl
rorb
das
sbb
enter
out
sub
dec
inc
ja
movsb
ret
dec
push
or
lahf
pop
syscall
std
inc
icebp
test
addl
adcb
js
add
xor
fistl
mov
sbb
aam
add
icebp
lret
loopne
lret
or
test
aas
adc
xor
mov
dec
mov
aam
lea
fidivrl
insl
mov
stos
aas
push
cmp
jl
push
cmp
lcall
xchg
outsb
gs
sub
lods
ds
jp
imul
mov
mov
jge
decb
xor
mov
test
cmp
adc
jbe
aas
jno
fidivrs
scas
cmp
mov
aad
xchg
jge
inc
shrb
inc
lret
pop
inc
es
push
orl
shll
xorb
test
dec
push
pop
add
jo
movsl
xchg
jge
cmp
add
shrl
insl
add
pop
xchg
dec
push
fstpt
dec
arpl
mull
int
out
test
ret
jle
jne
mov
sbb
jmp
cmp
inc
mov
xchg
int3
jg
jno
loop
scas
inc
xlat
inc
insl
pop
lcall
fucomi
push
and
ss
add
dec
arpl
adc
xor
sbb
adc
mov
mov
cmp
jne
and
outsl
cmp
sahf
ret
jnp
les
in
mov
lahf
aad
jo
xor
call
gs
movnti
mov
jge
push
stc
in
int3
sub
cld
pop
inc
xchg
das
mov
popf
or
adc
enter
mov
loopne
push
pop
sub
sbb
lods
and
testb
pop
daa
hlt
xor
push
xchg
xchg
lahf
out
in
adc
mov
dec
xor
sahf
xchg
shrb
leave
loop
int3
pop
fsubl
mov
scas
loopne
movsb
ss
xchg
cmc
loope
aad
sub
and
pop
fs
mov
arpl
call
jle
dec
adc
adc
insb
dec
int
pop
out
jecxz
xor
jb
mov
ret
sbb
mov
in
out
pop
fidivl
xchg
or
fdiv
jne
sbb
mov
imul
pop
dec
outsl
int3
xor
cmpsb
adc
fcoms
or
pop
or
mov
mov
movsb
xchg
jbe
in
inc
ss
mov
or
hlt
test
test
or
dec
sub
mov
leave
in
mov
aam
sbb
lret
sarb
shrl
lds
pop
sub
push
and
cli
dec
cmc
xchg
sarl
inc
aad
inc
cmc
cs
aas
test
jge
sbb
in
add
mov
mov
aas
clc
inc
scas
inc
enter
mov
pop
pushf
out
shr
pushf
lds
or
add
int
mov
adc
add
jo
push
and
incl
sub
je
insb
and
sub
adc
inc
pop
and
jmp
jle
lods
imul
sub
inc
mov
movsl
nop
push
js
xchg
add
enter
mov
mov
notb
dec
pushf
mov
aas
lahf
cmc
cltd
psrld
loop
dec
sub
repnz
and
dec
mov
sub
or
add
and
call
xchg
lcall
sbb
outsl
or
je
int3
push
mov
dec
inc
xchg
sbb
dec
xlat
test
ficoms
jbe
ficoml
ret
movlps
push
sarl
movsb
ds
pop
hlt
mov
jecxz
sbb
push
shll
mov
push
jl
bound
stos
stos
mov
pop
or
push
mov
xchg
xchg
inc
aas
sbb
hlt
shll
adc
ja
push
fadd
jae
lret
mov
out
out
shrb
pop
cs
loopne
int3
jbe
sub
sbb
movsb
sbb
pusha
push
fninit
ljmp
sahf
cmp
filds
cmp
sbb
or
leave
rcll
lods
pop
icebp
add
pop
mov
lahf
cmpsl
test
out
popf
test
dec
push
xor
or
divb
into
adc
adc
adc
imul
pop
out
in
mov
xchg
fs
cmp
sub
pop
shrb
sbb
sub
scas
mov
mov
pop
push
and
inc
rcr
add
mov
ss
test
mov
pop
fldenv
or
sbb
inc
scas
cld
unpcklps
stos
jmp
xor
push
inc
out
roll
mov
adc
lods
sbb
jge
adc
imul
pushf
nop
xchg
add
idivb
adc
push
insl
pop
or
mov
push
stc
add
lret
stc
jl
mov
cmp
fsincos
aas
fildl
ficoml
cli
and
shrb
xor
cs
dec
clc
xchg
mov
pop
inc
hlt
inc
dec
dec
movsb
dec
jns
push
repz
xlat
fildll
mov
decl
pop
mov
scas
pop
xchg
mov
or
stos
xchg
adc
adc
and
push
mov
pop
sbb
dec
push
adc
cmove
into
loope
jle
loope
inc
xchg
xor
sbb
lcall
outsb
int3
jle
js
xor
dec
cltd
scas
mov
dec
mov
scas
out
andb
inc
push
ss
adc
daa
mov
dec
mov
mov
or
fs
cmp
lret
sub
outsl
jle
or
push
mov
outsb
add
ja
pop
cmpsb
lcall
or
imull
pushf
fistpll
and
fwait
ret
ficomps
enter
adc
add
add
jmp
xchg
jecxz
cli
in
in
ljmp
faddp
mov
adcb
insl
adc
mov
out
push
pop
stos
cmp
mov
dec
xor
jnp
add
cmpsb
mov
mov
add
pop
int
jl
mov
hlt
jmp
mov
scas
in
outsl
adcb
add
ss
jle
imul
sarl
loope
xor
jne
imul
inc
out
mov
inc
jmp
inc
xor
xchg
loop
xchg
mov
pop
test
push
cmpsl
xor
lods
sahf
add
xchg
mov
pop
cmp
adc
jmp
ret
pop
ret
pop
ret
sub
sar
push
sbb
inc
cmp
or
cmc
cmp
cwtl
int3
sbb
shll
sbb
inc
cmp
jg
out
gs
stos
mov
mov
ss
lret
mov
mov
movsl
int
addr16
into
xor
adc
push
mov
lahf
cmp
popl
clc
dec
fsubrl
sub
daa
in
aam
sbb
mov
inc
sti
sbb
movsl
clc
sahf
or
outsb
pop
sbb
pop
rolb
xchg
mov
adc
mov
ficoms
popa
xchg
adc
insb
ret
lahf
subb
push
icebp
or
in
sub
and
mov
jecxz
cmp
adc
mov
ja
push
and
dec
stc
xchg
loope
stc
dec
fstps
cmc
xor
mov
jge
sub
jb
cld
fsubs
fs
decl
arpl
fwait
mov
pop
pushf
out
loop
lods
xchg
xchg
fisttpl
insl
or
sub
int
mov
sbb
sahf
nop
push
push
jo
push
push
inc
adc
sub
je
insb
and
and
sub
es
pop
inc
outsb
and
stc
outsl
rcr
mov
lea
inc
fnsave
aad
mov
xchg
out
jns
int3
scas
lret
mov
mov
notb
loop
mov
aas
test
mov
loop
xor
xor
and
xorl
add
daa
dec
jbe
ficoml
mov
push
push
subl
sub
fdivl
movsl
nop
enter
lds
lcall
xlat
test
fwait
out
lcall
ljmp
pop
adc
and
lret
test
inc
dec
pusha
sub
add
mov
jecxz
push
adc
push
push
mov
mov
cmp
pop
push
stos
mov
rcrl
add
dec
rolb
and
mov
mov
push
or
jae
lret
sti
jmp
pinsrw
cs
sbb
xor
in
aam
xor
sbb
ss
sbb
push
insb
sub
or
out
mov
sahf
dec
out
jecxz
xchg
cmp
mov
leave
rcll
dec
pop
icebp
add
mov
mov
sbb
out
or
aaa
aas
add
cli
xor
push
int
cs
push
leave
or
pop
jns
push
inc
sub
pop
mov
xchg
movsl
cmp
cmp
pop
sarb
test
mov
and
mov
insb
dec
mov
cs
loope
int
mov
cmp
fdiv
jmp
and
fst
xlat
sbb
push
cld
punpckldq
stos
stc
mov
daa
push
inc
popa
ffreep
inc
xchg
mov
xchg
push
test
cld
insb
sbb
mov
adc
imul
mov
dec
cmp
in
mov
pop
insl
pop
or
mov
push
or
or
mov
stc
orb
fcos
aas
ljmp
push
cmp
and
inc
scas
sub
push
cmp
cs
clc
xchg
mov
lods
inc
hlt
inc
jmp
jge
nop
stos
es
fdivr
xlat
fistps
ret
maskmovq
imull
rol
mov
test
out
int
stos
xchg
cmp
adc
xor
jne
insl
mov
das
sbb
cmp
or
push
into
stos
addl
inc
loope
fiaddl
and
mov
jle
mov
js
xor
in
sti
or
scas
add
cli
mov
mov
out
push
cs
mov
pop
sbb
or
cmp
jmp
xchg
lahf
outsl
mov
xor
mov
adc
ja
pop
cmpsb
stos
xchg
test
sbb
sti
enter
mov
and
fwait
fsubp
dec
enter
adc
ror
xchg
xchg
out
dec
in
in
ljmp
dec
mov
cmpb
cmp
repz
add
jae
push
decb
pop
mov
cmpsb
dec
xor
fwait
stc
add
cmc
mov
mov
push
pop
push
jl
pop
js
iret
mov
fildl
test
dec
and
inc
paddq
cmp
or
in
rorl
push
xor
pop
popa
imul
call
out
ds
mov
inc
fwait
das
mov
pop
xchg
repnz
cwtl
mov
cmp
pop
cmpsl
mov
lods
scas
add
hlt
mov
pop
cmp
das
sti
xor
pop
ret
pop
ret
sub
mov
sti
inc
dec
xor
repz
mov
pushf
sbb
shll
and
xor
mov
pop
outsl
test
das
xlat
loop
mov
sub
movsl
int
imul
cmp
push
xchg
mull
in
adc
repz
out
idiv
dec
repnz
cmp
aam
cmp
mov
inc
jnp
insl
sbb
cld
jb
adc
push
popf
xchg
jl
push
xor
ret
loop
jno
fiaddl
shlb
xchg
or
cmc
push
mov
test
fdivp
inc
loopne
fildl
add
mov
ja
push
and
dec
stc
xchg
cmpsb
stc
dec
pop
pop
dec
cmc
inc
dec
dec
movsl
cmp
imul
mov
pushf
shll
add
arpl
fwait
mov
push
out
shr
mov
xchg
pop
inc
or
cmp
mov
mov
xor
xchg
push
push
push
push
pop
push
std
adc
lret
rcl
js
mov
daa
shlb
iret
xor
outsb
mov
jae
fnstenv
scas
xor
inc
mov
xchg
out
xchg
enter
mov
fdivrl
inc
and
cli
push
out
mov
inc
mov
mov
or
xor
inc
neg
shlb
test
mov
adcl
jnp
ret
add
daa
pop
jp
fisubl
lahf
xchg
scas
pusha
pop
pop
lahf
adc
sub
jg
in
sub
fdivl
test
inc
leave
adc
sbb
test
jnp
lcall
ljmp
pop
adc
xor
lret
lods
xor
jo
jb
pop
add
out
cltd
add
repz
mov
daa
cmp
loop
mov
shrl
add
pop
sarb
xor
mov
mov
insb
je
adc
jmp
lret
jae
jo
and
inc
add
cvtpi2ps
pop
and
sbb
xor
in
push
inc
xor
xor
ss
xor
imul
out
lret
fwait
mov
mov
ss
pushf
cmp
mov
mov
movb
add
and
cmpsb
enter
mov
sub
lcall
or
dec
inc
aaa
dec
add
cli
inc
mov
int
outsb
mov
and
andl
jns
xchg
dec
cmp
push
aam
mov
sbb
cmp
out
cmp
xchg
mov
rolb
sbb
icebp
add
adc
cmp
loopne
stc
push
sbb
sbb
pop
jp
add
bound
stos
stc
mov
pop
push
inc
popa
arpl
inc
xchg
xchg
lea
or
sbb
enter
mov
insb
sbb
insl
loopnew
xchg
lcall
idiv
in
mov
pop
cs
adc
rcr
sub
sbb
mov
sbb
pop
sub
inc
out
mov
test
cmp
push
aas
ljmp
ja
cmpb
push
addr16
leave
xchg
mov
mov
push
push
popf
in
loopne
out
popf
xchg
fwait
loopne
pop
jb
ucomiss
shlb
ret
addr16
lods
aaa
ljmp
push
jno
push
or
add
xor
jne
insl
fldt
cmp
sub
daa
das
sub
dec
jae
or
je
fidivrs
mov
cltd
inc
loop
fiaddl
and
cwtl
lcall
mov
mov
sti
sbb
popf
mov
inc
scas
cli
sahf
adc
mov
out
aaa
cs
icebp
daa
test
mov
or
inc
sub
imul
push
mov
mov
adc
ret
into
mov
jb
insl
jne
int
cmpsb
stos
xchg
mov
sbb
sti
enter
fnstcw
fisttps
enter
pop
fadd
scas
or
popa
cs
pop
add
push
call
pop
dec
mov
nop
inc
ss
repz
adc
jae
arpl
dec
or
push
xlat
mov
roll
push
loope
stos
fsubs
sbb
loope
js
iret
shrl
add
jmp
mov
adc
pop
arpl
inc
andps
cmp
adc
in
lds
loope
cmp
xchg
pop
push
push
insl
das
pop
cld
pop
aam
enter
mov
pusha
mov
dec
fwait
aas
mov
test
mov
xlat
into
pushf
test
testb
pop
cmpsl
leave
or
dec
pop
xor
adc
rcll
push
mov
xor
jecxz
idivl
xlat
ret
xchg
fwait
stos
stos
xchg
pop
bound
cmp
jb
inc
and
and
adc
movsl
or
cld
adc
rclb
pusha
or
and
pop
inc
dec
loop
cli
xchg
add
daa
ret
jne
fs
adc
mov
rcl
mov
fldcw
fdivrl
dec
sbb
jg
pop
xchg
mov
aad
rcr
popa
andl
flds
fnstsw
ret
mov
mov
jl
enter
je
push
mov
sarl
mov
pop
push
out
sub
xorb
in
jne
dec
jecxz
push
pop
out
sbb
repz
dec
dec
pushf
fcomps
mov
jnp
pop
pop
aas
sbb
mov
ljmp
gs
std
push
cmp
lds
ficoms
inc
adc
sarb
iret
js
sub
mov
sbb
xchg
js
scas
pop
xchg
xchg
add
lea
mov
dec
in
jno
adc
sub
jl
xor
inc
xlat
stos
test
xchg
mov
jnp
addr16
jnp
cli
inc
push
mov
or
bound
std
imul
jl
insb
out
xchg
mov
sub
andl
gs
in
ja
cmpsb
jg
mov
lcall
outsb
rcr
mov
push
inc
orl
xchg
sbb
cmp
sbb
or
push
pusha
loop
sub
sbb
add
in
inc
jne
or
and
jns
jecxz
cltd
push
cmc
adc
mov
push
sub
aad
insl
xor
movsl
adc
int3
das
jnp
out
adc
ljmp
jecxz
cmpl
shrl
sbb
cmp
shrb
jmp
pop
xor
out
fistpll
cmpsl
pop
push
and
jmp
add
pop
pop
mov
ja
shlb
mov
popa
jle
cwtl
in
lret
pushf
sbb
adc
dec
jne
or
fst
sbbl
cwtl
adc
aas
loop
psraw
fwait
vpsubw
jno
or
jae
add
loope
stos
xor
adc
rcrb
sti
imul
in
xor
dec
jo
cmp
sub
mov
and
cld
cld
loop
push
push
sbb
xor
fistpll
xchg
fnstenv
add
push
sbb
jp
test
mov
leave
sub
or
in
pushf
and
sti
xchg
cmp
leave
mov
adcb
mov
lcall
arpl
sar
cld
xor
inc
rcll
add
jge
roll
xchg
icebp
scas
fdivrl
push
mov
adc
xchg
mov
aas
sub
inc
pop
int
int
mov
lcall
mov
add
loop
ja
inc
add
mov
lahf
movsl
int3
cli
shr
rcrl
es
in
mov
dec
popf
ss
mov
cmp
ds
out
mov
hlt
add
mov
and
test
sbb
jg
sub
mov
and
jae
pop
push
jg
cltd
loope
jl
or
mov
adc
push
adc
mov
ret
lds
lods
stc
pop
and
add
int
ficoml
sub
int3
mov
mov
pop
push
cmp
xlat
push
push
lcall
push
cmp
adc
jmp
stos
xchg
andb
jl
std
sti
inc
mov
test
ret
sbb
cli
sbb
loopne
int3
cwtl
xchg
xlat
dec
repnz
push
pop
sub
or
dec
mov
jmp
cmpsl
or
pop
push
xchg
or
xchg
sbb
adc
mov
iret
aaa
mov
nop
jns
cli
pop
aam
cs
ret
ja
and
addb
movsl
outsb
enter
jge
pushf
sar
aam
cmp
inc
sub
inc
ret
mov
or
lods
out
adc
out
lods
add
xchg
insl
imul
cltd
pop
dec
dec
xor
push
mov
pop
fmull
xor
or
std
fistpll
pop
adc
and
lea
movsb
cmp
jmp
jge
and
adc
aam
or
sub
sub
out
mov
pop
sub
push
idiv
sbb
inc
xor
and
add
jbe
stos
in
xchg
faddl
outsl
rolb
mov
dec
fldt
jmp
and
lods
mov
xchg
out
push
fisubrl
push
or
mov
lea
inc
xchg
faddl
loop
addr16
inc
sub
add
fcmovnb
mov
mov
dec
cmp
adc
ljmp
push
inc
sbb
icebp
mov
lea
push
cmp
fmul
mov
mov
push
cmp
.byte
sub
cwtl
add
jb
gs
xor
cs
insb
add
sbbb
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
nop
jmp
ret
jmp
ret
rol
jmp
ret
rol
rol
dec
jmp
call
call
add
ror
stc
sub
nop
stos
loop
mov
inc
cld
mov
adc
add
inc
and
mov
mov
lds
clc
mov
mov
out
dec
lahf
push
mov
hlt
mov
sahf
dec
sub
hlt
mov
mov
call
mov
mov
push
xor
mov
dec
icebp
jo
push
jge
cmc
daa
jmp
mov
jg
xor
lret
aam
rol
je
push
punpckhdq
mov
jne
push
push
xchg
int
cmp
jp
insb
mov
inc
jns
cmp
sub
ljmp
xchg
test
test
loope
outsb
mov
loope
mov
mov
ret
enter
sub
call
mov
jp
imull
pusha
loop
fsubrl
mov
mov
outsb
mov
sbb
pop
dec
insl
jecxz
out
vphadduwd
push
dec
aaa
mov
adc
xor
loope
dec
add
daa
in
sbb
int
dec
inc
mov
in
es
lock
fildll
in
xor
jl
mov
dec
lahf
push
cli
sub
cli
mov
sahf
dec
mov
hlt
mov
mov
lcall
outsl
repz
xchg
add
test
int
add
sub
out
int
cmp
hlt
in
jecxz
xlat
jmp
lods
mov
fwait
mov
xchg
sub
adcl
fdivrl
xor
jmp
inc
int
sarl
movsl
fimuls
sub
xchg
leave
jmp
mov
sub
inc
fsubl
ja
stos
mov
xchg
inc
xchg
test
push
rcrl
xor
push
adc
outsb
push
sub
xor
imul
or
int
call
pusha
lds
inc
ret
add
push
pop
pop
cwtl
pop
add
add
lods
push
push
cmp
mov
mov
mov
sub
lcall
jp
mov
fadds
jl
inc
inc
cmp
fldt
out
add
inc
jne
je
xor
cmpb
mov
lds
daa
jb
popf
pop
jge
insl
shll
jo
adc
cwtl
cmpsb
cmp
lock
es
scas
jp
mov
jns
inc
xchg
ret
dec
pop
sbb
push
or
sti
jmp
shrb
mov
sahf
adc
adc
cmp
lret
and
cmpsb
xchg
popf
push
inc
ret
aaa
and
fnstcw
xor
push
pop
add
add
push
out
mov
ds
movsl
stos
lret
jnp
mov
loope
push
or
ss
jo
mov
add
mov
push
fcoml
mov
notl
cmc
jo
loope
mov
scas
rcr
sub
xchg
push
and
dec
add
subb
add
cld
mov
scas
test
lods
movsl
mov
loopne
push
mov
subb
out
iret
or
jl
push
push
or
cld
mov
sbb
shlb
loop
out
stos
outsl
in
in
scas
xchg
or
outsl
xchg
cmpsl
bound
jae
push
cli
std
pop
imul
sar
rep
dec
loopne
bound
jecxz
pop
xchg
mov
aaa
xchg
dec
scas
mov
push
mov
lods
ds
mov
inc
xlat
ljmp
int
add
pushf
nop
mov
push
mov
mov
jg
or
add
jbe
in
pusha
push
aad
std
inc
jg
jo
out
pcmpeqd
push
xor
pop
cmp
mov
pop
insl
daa
sub
xchg
ret
add
sbb
imul
mov
lahf
xor
mov
jle
xor
push
fmul
sub
insb
jp
je
sahf
cld
xchg
hlt
mov
pop
adc
cmp
mov
test
cmp
lock
inc
lret
push
mov
sbb
pop
push
sub
das
gs
mov
ret
sti
cmc
or
movsl
mov
mov
xor
adcb
push
icebp
dec
pop
sbb
rorb
add
lock
sbb
cmp
scas
stos
and
shlb
jo
push
fwait
nop
xchg
js
orb
or
push
dec
aad
loopne
fsubrs
and
sahf
pushf
xchg
nop
xchg
mov
mul
mov
imul
xor
test
dec
xor
call
sbb
dec
or
sub
fs
add
fstp
inc
mov
jno,pn
xchg
dec
addr16
aas
xor
xor
jno
jb
in
aad
aas
iret
inc
mov
stos
cmpsl
sbb
movsb
mov
insl
insb
pop
xlat
or
pusha
xchg
mov
push
cwtl
jns
les
adc
xchg
shrb
jmp
or
cmc
xor
xchg
push
pusha
sarl
cmp
lods
out
sub
adc
push
lcall
adc
or
sarl
fstpt
adc
mov
mov
lods
sahf
ret
cmp
mov
jecxz
stc
lret
pop
dec
or
push
movsl
xchg
xchg
mov
pop
addr16
rcr
adc
imul
das
pop
loope
into
mov
add
inc
cmpsl
arpl
mov
sub
and
xchg
data16
push
dec
fwait
mov
and
dec
ljmp
in
sbb
outsl
lret
pop
mov
mulb
cs
loop
xchg
pop
and
ja
scas
adc
xchg
adc
xchg
loop
cmp
lret
popa
out
sbb
adc
push
dec
and
jl
jne
dec
test
jge
jo
inc
stos
fdivl
and
and
dec
scas
std
and
clc
cmp
out
xchg
mov
test
add
push
xor
mov
int3
ror
dec
dec
push
mov
cmp
mov
jge
loop
test
cli
jecxz
jmp
xor
pop
shrb
mov
or
mov
xchg
mov
testb
and
or
lret
or
je
movq
jmp
and
into
cmp
xchg
cmp
loope
pop
ds
jp
outsb
addr16
sarb
test
lret
push
or
ret
ljmp
mov
clc
out
call
sbb
inc
idivl
pop
stc
push
dec
inc
inc
repnz
daa
lods
xchg
int
add
out
fistps
mov
scas
movsb
mov
test
inc
xor
mov
loope
dec
jbe
push
pop
push
push
dec
inc
cmp
hlt
out
in
adc
push
mov
cmpsb
pushf
lcall
outsl
imul
aas
cmp
sub
wbinvd
add
div
jmp
ror
pop
add
cmc
out
jmp
lret
lds
bound
dec
inc
cmp
and
adc
repz
lret
mov
stos
mov
cmpl
imul
push
dec
dec
cmpl
pop
push
dec
inc
inc
clc
repnz
fcmovu
into
enter
mov
test
cwtl
xchg
nop
xchg
bound
push
dec
dec
cmp
xor
and
sbb
or
add
lock
add
clc
out
call
int
mov
pop
pop
push
dec
inc
inc
aas
xor
pop
adc
imul
out
iret
int
mov
mov
test
jb
pop
pop
push
dec
test
fs
push
push
dec
inc
cmp
hlt
out
in
int3
lret
mov
lods
cmpsb
pushf
lcall
outsl
imul
aas
cmp
sub
wbinvd
add
div
jmp
ror
pop
add
cmc
out
jmp
lret
lds
bound
dec
inc
cmp
and
adc
repz
lret
mov
stos
mov
cmpl
imul
push
dec
dec
cmpl
pop
push
dec
inc
inc
clc
adcl
hlt
and
sbb
test
cwtl
xchg
xlat
out
repz
loop
add
fdivl
and
sbb
mov
push
push
cmp
xor
clc
out
call
xlat
mul
icebp
in
int
mov
jp
sub
jge
fs
aaa
push
push
test
iret
int
mov
add
xor
fdivs
pop
pop
pushf
mov
jbe
mov
cmp
pop
dec
dec
push
les
adc
std
cli
in
aad
lock
arpl
push
mov
lods
fnstenv
rolb
std
div
xor
and
xor
daa
lcall
or
cld
inc
mov
