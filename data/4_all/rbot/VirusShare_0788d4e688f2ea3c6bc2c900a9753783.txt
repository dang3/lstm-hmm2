jmp
mov
add
jmp
pop
mov
jmp
mov
add
and
add
pop
mov
jmp
push
mov
mov
add
jmp
jecxz
fs
jmp
xchg
add
add
push
jmp
test
scas
mov
jmp
sub
jmp
and
cli
add
add
add
inc
call
jmp
mov
adc
add
imul
pop
jmp
push
cs
dec
mov
push
add
jmp
or
mov
add
add
pop
adc
hlt
mov
mov
and
push
sub
pop
sbb
hlt
xorl
inc
pop
adc
mov
mov
mov
test
lret
nop
sbb
es
mov
in
mov
mov
mov
xchg
in
mov
stc
jle
mov
mov
mov
test
and
and
adc
and
adc
test
outsl
test
daa
pushf
xchg
jmp
cmp
popf
call
mul
mov
xchg
cs
adc
mov
jle
scas
sti
push
fstpl
pop
pop
popf
lods
pop
sbb
and
rorl
je
pop
shrb
push
xchg
add
push
jb
pop
adc
push
mov
adc
jne
cmp
movsb
pop
pop
repz
cs
vphaddwq
mov
push
lret
lds
lea
pop
pop
repnz
movsb
mov
or
mov
mov
out
and
add
nop
lahf
in
mov
lret
out
mov
pop
dec
popl
js
adc
sbb
es
mov
jl
pop
pop
nop
jecxz
jb
dec
mov
imulb
aam
cmp
pop
add
das
out
incb
add
pop
adc
jl
mov
roll
xchg
add
andb
cmpsb
pop
adc
test
mov
out
and
pop
jno
xchg
out
xorb
and
in
dec
pop
push
mov
pop
sbb
adc
call
mov
test
scas
fidivs
test
incb
add
pop
adc
jb
outsl
mov
mov
mov
cmpsb
pop
adc
and
mov
push
je
in
mov
adc
pop
adc
jmp
mov
add
bound
push
xchg
inc
push
test
repnz
mov
orb
mov
loop
push
lods
aaa
mov
mov
pop
sbb
inc
pop
mov
test
pop
pop
push
ficompl
add
cli
pop
pop
pop
test
scas
mul
add
mov
out
and
adc
test
js
mov
pop
into
xchg
loop
mov
outsb
push
mov
icebp
pop
sbb
btr
jecxz
dec
popl
nop
adc
test
and
popa
and
sbb
popf
pop
sbb
cmpsl
and
testl
pop
sti
jae
je
dec
test
lea
adc
out
call
scas
inc
add
and
repz
dec
les
out
and
cld
call
pop
call
nop
arpl
mov
mov
xchg
std
mov
addr16
outsl
mov
arpl
jb
pop
cmc
in
push
mov
jle
pop
adc
scas
lds
mov
cwtl
pop
sbb
divl
or
psubsw
out
add
out
scas
jne
lock
pop
pop
mov
push
push
fs
sbb
dec
stos
scas
movsl
cmp
lods
mov
mov
mov
lret
test
aas
mov
mov
and
inc
lods
lock
dec
xchg
clc
sahf
rolb
mov
add
jecxz
inc
mov
jns
outsl
int
sbb
and
rcl
mov
and
mov
test
cmp
fisubrs
mov
fistps
popl
nop
jp
jae
into
jmp
pop
push
filds
int3
push
xchg
inc
bt
xchg
fidivs
pop
sbb
test
xchg
add
pop
adc
repz
sub
mov
addr16
add
pop
pop
cmp
mov
jmp
mov
mov
je
push
fs
pop
mov
inc
sahf
cs
adc
and
sbb
ficompl
inc
push
sahf
xchg
mov
mov
sbb
pop
fs
push
cmc
stos
mov
test
adc
and
mov
in
xor
popf
sti
lock
xor
mov
adc
xor
lcall
pop
stos
adc
push
push
mov
outsb
popf
sti
lock
fistps
or
ret
mov
push
lea
mov
cmpsl
outsb
popa
idivb
lahf
lcall
lahf
fs
shrl
and
das
cs
leave
incb
cltd
fcomi
mov
add
addl
cmp
jle
sbb
fwait
xchg
sub
xor
popf
rcl
roll
lahf
pushf
fistps
or
out
xchg
dec
pop
push
mov
adc
sub
mov
dec
sbb
roll
stc
push
inc
pop
repnz
ja
adc
rclb
mov
add
popf
cmpsb
pop
xorb
xchg
movsl
stos
add
mov
adc
lcall
jmp
mov
inc
dec
pusha
dec
test
inc
stc
daa
push
stos
insb
sarb
cld
adc
add
repnz
and
sarb
roll
in
dec
out
insb
jmp
push
hlt
loope
loopne
mov
dec
sahf
or
les
and
inc
jb
loop
insb
xor
test
mov
loopne
cmp
xorl
in
inc
xor
adc
decb
in
cmp
jle
push
inc
jg
enter
out
jecxz
xchg
xor
pusha
in
cmp
les
or
add
loop
lods
out
in
stc
out
test
das
imul
out
out
or
mov
in
fsubrs
sar
lock
cmp
sbb
jno
xor
hlt
sub
loopne
adc
jl
out
in
shrb
jle
add
jge
cmp
xor
xchg
xor
mov
icebp
sbb
or
in
dec
mov
xor
dec
xchg
mov
loopne
test
inc
or
ss
in
xor
xor
in
cmp
les
call
sub
in
data16
insb
jmp
push
hlt
loope
loopne
mov
dec
jg
inc
popa
and
call
aam
in
loope
dec
cmp
in
cmp
cmp
hlt
lods
cmp
mov
into
insb
jmp
inc
or
ss
mov
jmp
bound
out
jecxz
mov
cmp
test
aas
ss
in
loopne
push
loopne
movsl
in
outsl
call
cmp
push
sahf
jl
out
insb
in
loopne
test
inc
or
ss
out
mov
jmp
bound
out
jmp
sahf
or
movsl
out
insb
in
inc
out
insb
jmp
push
hlt
loope
loopne
mov
dec
pop
adc
nop
out
loopne
test
push
insb
rclb
jmp
and
arpl
adc
sub
jecxz
divl
sbb
mov
xor
cmpsl
mov
lret
repz
lock
cmp
sbb
dec
sahf
inc
sbb
xor
in
out
jmp
pop
adc
neg
das
outsl
sahf
or
xlat
sub
xchg
jb
movsl
xor
xchg
aaa
cmp
mov
pop
cmp
aas
xor
sbbl
cmp
xchg
mov
loopne
mov
sub
sbb
in
loopne
mov
push
shl
lods
cmp
push
scas
sti
sub
lods
cmp
movsb
cmpsl
cmp
mov
jmp
add
dec
testl
adc
push
sub
xchg
jb
movsb
addb
inc
add
outsb
adc
push
mov
ss
popf
cltd
mov
or
adc
cld
dec
cwtl
std
adc
popf
xchg
mov
jnp
jg
adcb
adc
sbb
adc
out
jae
dec
xchg
aad
mov
ja
jmp
mov
jmp
shll
xlat
loope
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
std
aaa
shll
xlat
loope
pop
lcall
pop
lcall
pop
lcall
xor
imul
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
loope
cltd
dec
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
popf
push
pop
or
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
call
cmp
int3
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
ret
and
jmp
cmp
mov
cmpl
jbe
inc
mov
stos
bound
and
xchg
mov
les
jbe
push
outsb
lds
jg
nop
pop
cmc
mov
mov
jecxz
fwait
bound
in
loopne
xor
jbe
or
or
jle
jle
sub
pop
ret
add
fcmovu
adc
pop
popf
mov
test
inc
cmp
pop
es
inc
adc
mov
and
sub
xor
sbb
dec
pop
into
mov
ret
aas
mov
pop
cld
clc
xlat
mov
fcoms
mov
push
clc
mov
sbb
mov
push
pusha
int
dec
adc
incb
dec
dec
add
add
jle
dec
stos
dec
add
adc
shll
cmc
pop
or
or
push
xor
iret
cmpsl
in
jns
cmp
add
test
mov
push
test
push
push
adc
inc
repnz
cwtl
and
lret
sahf
hlt
mov
sbb
or
subps
or
mov
les
mov
sbb
stos
inc
call
xorl
jge
xor
xor
pop
sbb
arpl
jg
add
push
fs
popf
out
jae
repz
jne
mov
push
idiv
xlat
in
je
data16
mov
ds
mov
outsb
stos
push
loopne
aaa
call
loop
and
add
sahf
movsb
jnp
cmpsb
xor
adcb
fcos
enter
mov
lock
cmp
cmp
jl
push
stos
rcrb
xchg
xchg
sbb
mov
dec
pop
mov
push
inc
lock
and
push
jbe
push
mul
inc
cmpsb
mov
in
nop
hlt
pop
adc
xchg
hlt
jle
lea
mov
dec
mov
adc
pusha
or
shll
test
xor
mov
sbb
movsb
and
cld
mov
fucomp
out
pop
aam
mov
or
loop
lcall
cmp
dec
jne
pop
pop
mov
loopew
adc
pop
pop
adc
inc
mov
cmp
adc
or
es
test
pusha
into
daa
arpl
shlb
xor
adc
bswap
dec
fbld
loop
jo
test
mov
push
cmp
imul
sub
addr16
pop
and
sub
jno
dec
jge
push
push
clc
in
add
adc
add
mov
mov
lahf
into
ljmp
pop
dec
or
pop
imul
xchg
jecxz
aaa
xlat
add
xchg
cmpsb
aam
pop
add
divb
loop
and
testl
xchg
daa
movsl
jne
lcall
dec
mov
out
fcoms
scas
sahf
pop
jo
push
xchg
push
jo
in
icebp
cli
sub
sti
xchg
add
repnz
loopne
sub
adc
vpsubq
movsl
shll
sbb
insl
loope
add
cmp
dec
fnsave
stc
push
imul
inc
dec
mov
lods
adc
lcall
lcall
out
jae
and
nop
push
jne
in
push
movsl
mov
or
mov
ficomps
lahf
lret
mov
stos
sub
sub
adc
and
cli
rcrb
int3
dec
xor
xor
aam
imul
xor
repz
cmp
stos
int3
dec
test
pop
inc
andl
stos
xchg
js
and
pop
mov
mov
sbb
rcrl
imul
fs
into
cmpsb
push
adc
cmp
or
fstps
lret
hlt
and
pop
std
imul
jb
sbb
sbb
jge
jne
jmp
icebp
cmp
pop
cwtl
outsb
les
mov
and
pop
adc
nop
mov
mov
gs
test
arpl
xchg
sbb
xchg
imul
in
sti
in
xor
dec
aas
roll
inc
dec
adc
ja
dec
bnd
lret
in
or
outsl
or
jecxz
movsb
rolb
mov
sarb
in
in
aam
mov
into
or
imull
push
lret
push
pop
jb
mov
lock
int
and
les
je
out
add
inc
mov
hlt
xchg
inc
mov
xor
arpl
adc
data16
shll
arpl
sbb
sti
pop
jo
ljmp
jge
out
clc
xchg
ja
mov
lret
stos
mov
ret
dec
push
fsubrs
or
pop
and
push
movsl
cli
inc
ljmp
xor
mov
cmc
mov
cs
sbb
iret
push
xor
aas
lcall
data16
sbb
out
xor
lods
sti
ss
sbb
add
sbb
loopne
pop
ds
mov
aam
adc
xor
jbe
push
test
fstpt
xchg
push
cmp
clc
cmc
ss
das
jne
mov
in
cmp
movsl
in
jbe
cmp
xor
mov
loope
lods
xchg
pop
out
adc
and
lods
pushl
lret
call
or
push
xor
popf
sbb
xor
leave
mov
xchg
fcomp
or
aad
in
adc
sub
dec
cli
call
lock
clc
jne
in
push
test
stos
movsl
das
cltd
in
cli
cmp
sarb
adc
mov
test
jmp
incl
pop
int
push
jecxz
mov
add
testb
mov
aam
mov
dec
loopne
fcmovne
xchg
pop
jle
cmp
dec
lock
cli
inc
imul
mov
scas
dec
pop
gs
in
adc
movsl
fistpl
test
inc
loop
insb
scas
pop
nop
daa
out
push
stos
xchg
lods
mov
xor
js
mov
mov
jb
push
mov
push
add
test
push
stos
fs
inc
xchg
leave
fs
mov
dec
test
and
and
lret
xorb
bound
pop
ja
pop
cwtl
cltd
sbb
add
stc
cmpsl
imul
ror
ret
sbb
test
pusha
push
enter
cmp
xor
imul
dec
and
iret
jg
pop
in
mov
in
jmp
dec
in
inc
ret
dec
jmp
ret
sub
aam
inc
mov
sub
pop
test
cmc
cmp
mov
mov
pushf
xor
jge
orl
imul
lods
fs
push
inc
cmpsl
push
push
mov
dec
cwtl
adc
rorl
fldenv
loope
and
dec
add
add
or
scas
mov
mov
push
push
stos
jne
lods
dec
jp
out
rorb
fstpt
mov
xor
xor
xchg
leave
pop
cmpsb
push
repnz
pop
scas
scas
mov
mov
inc
test
push
jno
cmpsb
rol
out
mov
in
mov
test
cmp
pop
ret
sahf
sbb
loopne
or
cli
rolb
push
mov
mov
push
aam
xor
loope
nop
mov
mov
add
lock
sti
mov
sub
inc
out
adc
jmp
jb
mov
cwtl
push
cltd
out
pop
push
jp
addr16
xorl
adc
imul
cmp
fimull
repnz
and
dec
imul
and
or
jl
pop
jmp
mov
push
jns
test
shr
sbb
aad
loope
inc
ljmp
pop
mov
dec
adc
sbb
shrl
fldenv
cmpsl
mov
dec
pop
cmp
add
xorl
inc
pop
leave
insl
test
bnd
aam
xchg
push
sbb
ret
icebp
mov
cmp
sbb
push
pop
ja
into
push
xor
rclb
andl
test
or
ss
mov
jnp
fcmovu
push
sbb
icebp
subl
xlat
sub
lds
pop
pop
push
movsb
mov
xlat
cmp
push
push
push
push
sub
int3
xor
insl
xor
popf
in
loopne
stc
scas
add
dec
mov
ficompl
add
dec
fcmovne
ljmp
loopne
cmpsb
mov
jl
mov
sbb
in
je
aam
or
imul
push
clc
push
xchg
dec
sahf
and
divl
mov
mov
testb
adc
stc
sub
add
xchg
cmp
faddl
jl
cmp
push
dec
out
jae
loop
fldenv
les
mov
dec
das
test
movsb
pop
pop
adc
pop
push
jne
push
sub
xor
movsl
jno
dec
dec
dec
sub
insl
jecxz
mov
jbe
lods
mov
mov
xchg
sub
cmpsb
mov
daa
sti
in
cli
jno
cmp
test
std
xchg
aas
push
insl
ret
cmp
loop
mov
mov
xchg
lods
in
out
mov
mov
push
mov
subb
nop
test
filds
loopne
arpl
out
xor
and
pop
or
arpl
sti
xor
add
rcrl
and
orl
mov
jg
imul
imul
daa
jge
imul
cwtl
loopne
dec
sahf
daa
popf
lock
inc
js
jbe
or
jne
fldt
inc
pop
lock
stos
dec
mov
in
adc
jp
add
ret
mov
ljmp
xchg
pop
inc
or
lock
and
push
lret
dec
mov
mov
cmc
push
inc
push
jb
sti
add
pop
adc
add
int
test
adc
push
xchg
andl
arpl
inc
or
movsl
stc
jmp
sub
pop
jae
popa
adc
inc
mov
cmc
xor
mov
sarl
inc
dec
dec
mov
bound
pusha
push
or
fiadds
mov
mov
jmp
push
jl
xchg
push
outsl
roll
push
pusha
add
into
dec
push
jp
lock
push
push
fs
push
insb
pop
xchg
xor
pmuludq
mov
inc
movsb
jnp
and
rolb
xchg
test
dec
cmpsb
mov
sbb
sub
or
jmp
cmp
test
sti
xchg
lcall
aam
mov
out
jae
add
mov
jnp
push
or
pop
xchg
cld
xchg
test
inc
loopne
daa
inc
add
int3
add
out
outsl
pop
pop
or
xor
or
outsb
sub
sahf
push
movzwl
mov
adc
xchg
inc
inc
int3
ret
in
push
xchg
lahf
xchg
sbb
idiv
aam
pop
lcall
imul
and
jae
pop
leave
and
pop
aaa
popf
outsb
adc
xchg
int
xor
and
sbb
push
out
cld
push
lods
sahf
test
sub
cmpl
cs
jg
cmp
push
jae
pop
push
or
outsb
cs
push
testl
cmp
hlt
sbb
test
dec
lahf
fildll
hlt
xchg
push
ss
pop
mov
loope
sub
inc
daa
orb
sbb
in
repnz
cmp
test
push
stc
jbe
inc
add
mov
push
jmp
dec
les
test
icebp
pusha
jb
lea
orps
loopne
pop
dec
shlb
mov
pop
pop
movsl
lahf
iret
xchg
jg
repz
scas
add
in
sub
mov
mov
iret
jno
stos
rcr
or
dec
inc
dec
sub
clc
cmp
call
add
mov
fdivrl
fidivrl
jo
sub
outsl
into
roll
aaa
out
pop
jg
int
and
lock
adc
adc
sbb
punpckhdq
lods
jle
call
xchg
aas
nop
insb
push
stc
jmp
movzwl
inc
insb
xor
or
shlb
fcmovu
xchg
pushf
test
mov
mov
xlat
mov
loop
dec
jnp
cwtl
cmpl
inc
cld
push
cmpsl
fsts
cmp
addb
mov
repz
arpl
cmc
mov
sahf
dec
push
inc
sbb
sbb
push
jle
sub
inc
imulb
movsl
adc
cmpsb
lds
imul
outsl
and
add
faddp
repz
pop
enter
sarb
adc
jo
testb
inc
lods
mov
and
insb
mov
fdivs
cmpsb
ss
pusha
and
aaa
fs
das
out
sub
jne
popa
decl
add
iret
and
add
mov
hlt
outsb
jmp
and
fs
aaa
pop
jo
fimuls
movsl
out
push
jle
gs
push
in
or
add
clc
shl
mov
sub
imul
dec
xchg
sub
mov
cmpl
pop
ret
imul
mov
notb
scas
pop
lea
lea
sub
inc
mov
dec
insl
sbb
push
adc
mov
jg
or
inc
out
xchg
xchg
stc
in
mov
pop
add
pop
add
fs
int
mov
xlat
jg
mov
movsl
sbbb
push
xchg
cmpsl
clc
cmp
div
in
ficoms
in
insb
mov
sub
addr16
je
mov
out
hlt
scas
stc
bnd
int3
cltd
mov
push
adc
or
xlat
lea
out
pusha
ret
lahf
mov
push
dec
cmc
ja
cs
stc
popf
pop
aaa
add
outsl
push
mov
sti
sbbl
cmpsl
ret
cmp
stos
pop
mov
dec
fstps
cltd
iret
stos
jmp
xlat
xorb
mov
dec
xor
fptan
mov
sti
mov
cli
sub
pushf
or
inc
mov
popf
push
shlb
test
push
scas
xchg
ret
daa
shrb
test
test
data16
or
or
in
push
lock
pop
les
shll
mov
pop
inc
mov
push
adc
push
cmc
fs
bound
into
ret
lret
sbb
lods
pop
xchg
dec
mov
mov
les
stos
mov
jg
and
movsl
mov
leave
add
bound
test
mov
aaa
mov
ror
pop
fcoml
jo
dec
mov
xchg
xlat
into
je
dec
mov
stos
addr16
in
adc
xchg
and
push
mov
shl
sub
rcrl
adc
mov
mov
dec
sbb
movsl
imul
mov
dec
test
sub
xor
movsl
punpckhbw
fsts
out
jbe
test
test
ja
adc
or
std
ret
out
sub
xor
loop
push
aaa
fwait
dec
lock
adc
inc
loope
mov
mov
cwtl
cmp
fldenv
and
dec
imul
push
inc
out
mov
xor
cwtl
xlat
lods
ja
sbb
hlt
dec
jle
adc
mov
jae
sub
jmp
cli
push
aad
stc
sub
test
mov
mov
or
mov
push
jbe
ficoms
dec
loopne
push
push
pop
jne
popf
push
xor
and
mov
ds
cmp
jg
xlat
gs
arpl
cltd
jmp
push
stos
rcr
add
fistl
or
in
lds
jo
dec
fs
rcrb
shlb
ret
pop
fistps
vrndscalepd
xchg
jns
addr16
or
fs
push
mov
mov
enter
jp
push
aam
les
cmp
xchg
adc
pusha
shrb
or
addr16
fidivrs
mov
dec
je
xor
pushf
mov
shrl
xchg
jno
jl
dec
scas
jbe
xchg
das
mov
lock
push
push
adc
mov
das
sbb
adc
jg
out
xor
sbb
push
xchg
xor
cld
pop
xchg
es
inc
push
or
sbb
or
pop
ss
shrb
aad
stc
outsl
cs
fs
add
movsb
inc
inc
add
jg
fisubrs
sbb
jecxz
xor
xchg
push
dec
pop
ror
push
pop
xor
xor
inc
push
cmp
jne
cmp
xor
cld
adc
jnp
push
rolb
subb
sbb
pushf
aaa
inc
lods
xchg
pop
cmp
mov
aad
pop
xchg
dec
dec
push
ja
cs
je
int3
adc
cld
adc
testl
negb
aam
inc
or
aas
pop
lds
sub
out
push
daa
ja
push
jp
dec
lret
add
pop
inc
sarb
outsl
and
clc
cmp
jno
stc
push
adc
scas
add
iret
dec
mov
ja
sub
mov
fdivr
aas
pop
mov
movsb
inc
inc
in
and
jle
test
fbstp
mov
js
sub
sub
pop
dec
cwtl
push
imul
int
aaa
or
push
dec
xchg
ljmp
aas
stc
push
sbb
aad
ficomps
aam
jecxz
mov
dec
cmpsb
sahf
insb
mov
nop
cmpsb
daa
roll
test
lahf
dec
jp
sub
jle
or
sar
scas
jb
loopne
sbbl
push
dec
lods
shrl
or
push
shlb
ljmpw
mov
rcl
xor
iret
es
hlt
ret
sub
pop
mov
stc
push
lds
lods
daa
cld
aaa
or
insb
cld
cmpsl
in
sbb
shl
pop
imul
add
cli
out
xchg
mov
insb
repz
mov
mov
aam
in
out
loop
cmp
add
jl
mov
bound
sbb
ret
stos
outsl
mov
andb
in
movsl
mov
pop
adc
mov
jg
lds
outsl
out
outsb
adc
mov
jle
add
sub
add
dec
arpl
mov
int
add
dec
adc
jb
cmp
shlb
xor
mov
xchg
mov
adc
les
test
xor
pushf
mov
sbb
daa
psubq
jmp
jbe
pop
mov
adcl
pop
cwtl
jbe
pop
or
mov
sbb
in
aad
in
lret
cmp
pop
loopne
dec
pop
fs
sbb
outsl
mov
cmp
add
fmuls
ja
pop
push
pop
cld
dec
or
pusha
push
pop
mov
sub
jmp
or
imul
in
mov
inc
cld
pop
es
jb
xlat
lcall
insl
sbb
mov
and
pop
fwait
popf
xchg
jns
pushl
out
ror
lahf
ficompl
mov
pop
fiadds
aas
mov
scas
jne
int
push
cmp
mov
push
outsb
lock
sbb
inc
aaa
xor
push
dec
jl
xor
pushf
ja
mov
adcl
aas
bnd
in
mov
xchg
xchg
inc
and
lcall
bound
fdivp
push
aas
cwtl
dec
sbb
xchg
mov
hlt
aaa
push
push
xchg
xchg
rcrl
jae
or
mov
rclb
sbb
xor
ljmp
cmp
mov
outsb
repz
xchg
xchg
repnz
and
in
mov
cmp
add
inc
adc
xchg
call
cmpsl
lods
inc
lds
adc
dec
mov
sbbl
jmp
in
test
dec
mov
and
cwtl
xchg
loop
mov
mov
push
jae
pop
rcl
bndstx
cmp
xchg
inc
inc
and
jns
dec
mov
cli
int3
out
mov
mov
dec
das
jle
sub
ds
scas
mov
add
adc
xlat
hlt
xchg
and
jp
fwait
popa
imul
dec
mov
inc
pop
mov
lret
fwait
jne
pop
movsl
fstps
pushf
mov
push
mov
mov
sub
dec
movsl
fidivl
ds
mov
test
repz
xchg
ja
pop
fnstcw
loop
loope
popa
inc
xchg
or
lahf
inc
jb
inc
xor
cmp
sbb
cmp
aad
cmp
pushf
shl
les
mov
add
jle
daa
je
cmpsl
lea
adc
push
sbb
cs
aad
jg
jnp
and
arpl
sbb
sub
push
mov
pusha
cld
mov
add
aaa
nop
xlat
mulb
loop
mov
ret
inc
repz
add
mov
lea
fstl
in
pop
iret
push
jge
je
test
cld
xchg
inc
and
nop
movsb
add
adc
xor
sub
pusha
cmpsb
fcomps
cmp
mov
or
or
xchg
ret
imul
bswap
sbb
es
sti
loop
in
dec
jl
dec
xchg
add
gs
mov
mov
or
xor
loopne
sti
mov
jae
test
in
int
inc
adc
push
cmpl
das
je
mov
cmp
mov
ror
adc
sub
sbb
test
stos
enter
ret
adc
xchg
inc
faddl
cs
nop
sbb
rcr
inc
add
and
insb
add
mov
in
adc
push
ss
mov
fsubp
movsb
pop
fnstsw
test
push
jae
adc
aad
adc
inc
ror
aam
push
test
stc
fnsave
add
dec
pop
aad
or
jbe
mov
ficomps
es
mov
je
iret
xor
sarb
jb
aaa
inc
repz
ja
gs
or
jo
imul
or
js
ss
and
push
sub
int
scas
rolb
in
sub
fsubl
mov
jp
mov
mov
mov
popa
clc
push
lret
popf
in
notl
cmp
aas
in
pop
push
aaa
mov
nop
push
into
in
sbb
and
int
leave
cld
rolb
icebp
scas
icebp
xchg
std
or
pop
fidivs
cmp
enter
fistps
les
inc
mov
test
andl
aas
push
cltd
add
subb
jl
mov
push
pusha
push
mov
jg
mov
mov
loop
adc
mov
pushf
sti
mov
std
mov
inc
inc
sub
mov
sbb
sbb
xchg
xchg
sbb
dec
gs
stos
xor
inc
pop
scas
stos
fbld
fsubrs
xchg
scas
inc
cmpsl
dec
roll
sahf
mov
and
xor
out
push
arpl
push
out
push
inc
aas
jae
stos
inc
pop
pop
dec
or
jg
inc
adc
neg
mov
inc
test
and
bound
iret
jge
dec
int3
imul
pusha
aad
fiaddl
sti
repz
lea
push
dec
arpl
mov
insb
xlat
lods
inc
test
jp
les
mov
les
lods
xor
xorb
xor
lock
and
mov
iret
cmovno
rcrb
sbb
in
pop
mov
or
sbb
call
roll
outsb
cmpsb
pop
or
jg
dec
ja
mov
dec
sti
xchg
mov
aam
fnstcw
cld
jns
or
movsl
push
add
push
push
outsl
jp
inc
addr16
add
xchg
out
aad
int
lods
xchg
aad
stc
dec
pop
adc
je
outsl
mov
icebp
fucomp
add
jae
add
adc
call
xchg
sti
loop
sbb
xchg
mov
dec
mov
push
flds
mov
pop
lea
add
cs
ljmp
mov
insl
pop
outsb
push
pusha
lcall
cmp
and
jnp
sub
mov
adc
and
adc
and
add
mov
and
jae
jecxz
xchg
movb
clc
jae
in
xchg
add
add
inc
add
jmp
addr16
aad
roll
xorb
roll
stc
jb
dec
rolw
subw
stc
jb
cmp
subb
xorl
clc
jae
jg
lock
inc
add
clc
jae
fcomi
ffreep
lret
and
jb
adc
sub
jne
popa
jmp
fadd
jns
lock
fsubs
fimuls
adc
mulb
push
in
lret
fsubl
sahf
sbb
push
add
dec
or
leave
js
mov
rclb
and
sahf
lods
or
lods
adc
popa
adc
sbb
jb
mov
cltd
inc
adc
daa
ja
mov
aad
sub
call
in
xchg
pop
sub
mov
push
ds
outsl
cmp
xor
push
push
enter
pop
push
push
xchg
pop
enter
or
test
add
sbb
jle
xlat
push
fimull
inc
jmp
mov
pop
popa
lods
push
mov
add
xor
mov
mov
inc
mov
add
repnz
pop
pop
dec
dec
mov
dec
push
and
push
arpl
sub
pop
jbe
arpl
ss
loope
sub
pop
lahf
rcrl
scas
testb
push
test
insl
or
loope
sub
xchg
test
xchg
push
aam
loop
cmpsl
sub
nop
xor
subb
cmc
pop
sub
aam
ljmp
cmpsl
cmp
push
jns
xlat
fcoml
fsubr
inc
add
dec
mov
add
add
sbb
jmp
xor
cltd
push
lret
xor
cld
cltd
shl
dec
mov
fisttpl
jecxz
int3
or
dec
in
in
insb
inc
cli
out
mov
or
pop
int
push
jnp
xor
jl
jmp
and
push
cmp
stos
push
push
scas
sqrtps
cmpsl
mov
sub
cmp
imull
pop
fisttps
mov
test
cmpl
test
push
mov
sti
adc
hlt
das
mull
add
adc
fistl
je
xchg
inc
mov
andl
iret
ret
outsb
xor
das
fcmovb
pop
mov
ds
inc
xchg
mov
cld
add
loope
xor
push
pop
jnp
sbb
out
in
sbb
jg
cwtl
cli
sbb
add
lea
aad
adc
mov
or
adc
imul
mov
xchg
pop
mov
mov
inc
xchg
fdivs
popf
xlat
test
mov
out
loope
int
sub
stos
dec
leave
mov
aam
xchg
add
mov
jae
xor
jns
mov
pop
sub
add
cltd
fists
add
add
add
loope
sub
push
insl
cli
fwait
dec
dec
mov
push
mov
adc
mov
dec
inc
sbb
sub
xlat
fcomps
sahf
inc
loop
mov
pop
test
divb
cmpsl
cltd
mov
pop
ja
dec
xchg
sbb
push
jne
hlt
sbb
imul
pop
negb
aam
scas
pop
loope
movsb
push
addr16
cwtl
push
xchg
pop
push
cwtl
stos
fs
cmpsb
fsubp
pop
fnstsw
movsb
imul
and
or
ret
or
dec
push
cmp
mov
push
cwtl
dec
test
fisubl
and
ret
push
add
nop
add
add
add
add
ljmp
sbb
mov
mov
sbb
leave
jb
or
insb
inc
adc
orl
divb
mov
adcb
sub
adc
pop
movsl
ljmp
jns
jmp
cmp
scas
mov
push
cmp
mov
xchg
inc
xor
or
sbb
mov
mov
mov
ja
mov
jne
lods
push
or
xor
push
mov
push
out
outsb
out
test
jb
sahf
pop
fstps
divl
push
ret
inc
mov
stos
std
aas
inc
aad
popa
ljmp
xorl
ds
mov
enter
sbb
mov
pop
and
mov
aam
shrl
lds
push
mov
testb
mov
sbb
inc
dec
pop
add
mov
or
cmpsl
xor
push
push
inc
xor
cld
cld
ret
ret
cmc
mov
mov
and
fsubrs
or
dec
icebp
arpl
lea
scas
pop
or
xlat
mulb
xlat
xchg
popf
test
dec
imul
js
xor
mov
dec
movsl
mov
mov
xchg
fwait
pushf
imul
negb
mov
in
add
orb
cltd
clc
pop
mov
iret
add
mov
mov
pop
lcall
xchg
aaa
adc
popa
xor
daa
iret
aam
push
push
addr16
push
std
cmpsl
dec
xor
mov
pop
ds
nop
cmp
rorb
mov
adc
inc
decb
arpl
push
and
xor
cmp
imul
xchg
stos
mov
repnz
rolb
insl
repnz
jecxz
xor
bound
shrb
mov
dec
addl
xor
pusha
inc
enter
ss
and
jnp
cmp
fstps
inc
repz
imul
sbb
aam
xchg
mov
pusha
mov
or
xor
out
cmc
insb
add
or
jl
mov
sarb
add
sub
test
push
jle
pusha
leave
cs
hlt
mov
mov
or
lods
adc
pop
aas
iret
push
jp
aad
ficompl
gs
sti
shl
add
fsubrs
das
mov
or
je
adc
cmovo
xor
lahf
fwait
jb
test
insb
rcll
test
cmpsl
mov
jbe
sbb
mov
mov
inc
in
xlat
out
pop
mov
cwtl
daa
rcr
mov
jecxz
mov
mov
repnz
icebp
mov
add
daa
inc
testl
push
sub
and
inc
push
pop
lock
dec
insl
xor
pop
fnsave
jle
arpl
insb
es
js
jge
movsl
sub
test
pop
orl
push
in
sub
mov
or
in
call
xchg
sub
data16
clc
cmp
in
cltd
loopne
mov
sahf
and
jmp
adc
or
insl
cmpsl
shll
xor
push
mov
insl
sbb
std
fldenv
add
jge
and
insb
sub
cmp
ds
and
ret
mov
test
xor
vpperm
fstps
mov
or
adcb
mov
imul
add
mov
gs
sbb
shrb
and
mov
sbb
cld
cmp
adc
lcall
out
jo
mov
and
inc
stc
and
test
inc
dec
add
or
jne
clc
movsb
cltd
pop
add
xor
jl
bnd
cwtl
push
mov
in
les
scas
push
stos
jge
or
adc
jno
call
or
testl
mov
inc
sub
jnp
mov
inc
iret
mov
mov
cld
mov
jns
imul
mov
cld
mov
jle
lret
fdivrs
sub
arpl
xchg
mov
pop
pop
idiv
pop
dec
repnz
and
out
jp
lret
sub
loop
cmpsl
out
jl
aad
mov
mov
lret
add
test
lods
sbb
lds
lea
shrb
out
mov
pusha
clc
repz
xor
add
xchg
xor
in
xchg
pop
add
inc
scas
aam
dec
cmp
xor
mov
xor
xchg
dec
shrb
pop
scas
and
roll
out
add
cltd
fists
incl
add
add
dec
mov
inc
sbb
adc
or
fnsave
add
cmpsb
jp
fmull
test
cmp
pop
loop
mov
loop
and
in
sub
imul
loopne
je
jge
cld
andnps
xchg
dec
das
movsl
nop
stos
pop
ror
mov
fmul
mov
xor
inc
out
in
insb
xor
clc
insl
xor
mov
lret
mov
xchg
mov
daa
or
mov
filds
xchg
mov
lods
pop
xchg
mov
cmpsb
mov
and
add
mov
push
icebp
or
cli
inc
or
dec
jno,pn
sub
xchg
fisttpl
jg
cltd
pop
out
adc
stos
add
aaa
ds
add
loope
sbb
xchg
add
imul
dec
ss
std
outsl
inc
inc
push
add
push
das
inc
xchg
dec
mov
sbb
push
inc
test
insb
and
pop
jmp
xchg
push
push
ja
cmpsl
cmpl
mov
aas
sub
mov
jecxz
mov
addb
mov
jecxz
outsb
mov
and
sub
pop
das
mov
xchg
sub
shll
aad
cmp
cmp
inc
inc
dec
pop
fiaddl
push
in
push
jns
insb
pop
jl
xchg
mov
push
hlt
xchg
jb
inc
ss
aaa
sub
pop
cwtl
sub
sub
cmp
pop
shrb
sbb
sbb
mov
or
lea
pop
sbb
mov
xchg
jns
mov
pop
jg
and
je
or
xor
sbb
pop
mov
xchg
aad
fcmovne
and
outsl
aam
xchg
inc
adc
pop
repz
loope
mov
lods
and
and
ret
fxch
or
std
xlat
rcl
sub
mov
mov
add
test
sub
mov
cmp
jmp
clc
sbb
jno
sbb
jae
and
dec
xor
shlb
cltd
adc
jbe
in
xchg
mov
sub
arpl
decl
sub
testb
mov
leave
aad
aaa
or
push
lret
add
xchg
addr16
jbe
cmp
adc
ss
xchg
mov
in
pop
fimuls
push
cmp
xchg
jecxz
orl
dec
and
pop
xchg
pop
dec
rolb
repnz
dec
outsl
mov
inc
jl
int3
mull
mov
add
or
add
sub
dec
shll
out
pop
inc
add
adc
xchg
cwtl
fsubs
call
loopne
cmc
dec
pop
fstl
iret
cmpsb
adc
subl
push
mov
cwtl
loop
in
inc
or
test
xor
adc
aaa
mov
inc
scas
adc
pusha
inc
sub
call
xchg
jns
int
testl
cmp
jmp
and
adc
mov
sti
mov
push
mov
and
or
in
mov
cmpsb
divb
hlt
into
push
sbb
xlat
pop
xchg
xchg
movsl
sbb
lods
jno
mov
fnstenv
leave
cmpsb
mov
rcrb
fmuls
pop
mov
in
js
jo
sbb
test
test
mov
notl
das
popf
jb
ret
outsl
into
and
ret
std
pushf
sub
into
dec
xor
mov
jnp
and
mov
jb
xor
call
out
adc
out
cmpsb
mov
inc
jle
inc
push
cmp
or
inc
mov
lahf
rcl
lahf
jno
xor
add
mov
lret
jle
cmp
std
inc
jle
enter
sub
xor
aas
lods
add
addr16
pop
and
xor
mov
xor
or
imul
repnz
pop
and
xor
xchg
scas
push
jno
test
cld
call
cmp
mov
test
xchg
mov
lods
lods
in
pop
bound
mov
js
daa
mov
rorl
jne
dec
dec
jecxz
fistl
fistl
aad
xchg
sub
out
mov
jae
testb
adc
dec
fisttps
cmc
mov
inc
jb
fcoms
iret
fisubl
xor
or
lds
out
pop
mov
pop
xchg
xchg
mov
in
pop
fimuls
push
orl
imul
outsb
pop
js
pop
mov
pop
stc
push
xor
lahf
xchg
dec
dec
sbb
mov
sub
mov
cs
or
cmp
popf
jns
ret
jo
xchg
imul
jg
mov
jecxz
jp
mov
ret
dec
lock
mov
pop
aas
xchg
test
jae
outsl
jp
into
pop
ja
or
cmp
and
inc
inc
xor
pop
sbb
and
fcoms
iret
or
ficoml
jbe
sbb
inc
mov
push
add
xchg
lcall
push
inc
sbb
push
push
stc
int
or
inc
test
lahf
sbb
nop
xchg
xor
aas
and
cld
inc
lret
call
in
jbe
jne
lcall
jno
ss
sbb
jb
pop
and
mov
aaa
jae
sub
iret
push
hlt
int
sub
sub
hlt
scas
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
mov
xchg
inc
push
xchg
mov
outsl
sub
fimull
xchg
jnp
insl
loope
mov
testl
jecxz
inc
sub
sub
jge
lea
addr16
xchg
pop
fidivrs
sub
jno
shrl
lahf
fildl
mov
dec
dec
and
les
lcall
lahf
lods
andb
fdivrs
inc
add
loope
jae
add
ret
push
les
push
shl
xchg
incb
sbb
sbb
pop
es
ret
mov
enter
aam
out
icebp
out
enter
and
mov
jbe
pop
lret
sbb
xchg
sti
mov
dec
dec
and
les
lcall
lahf
lods
andb
fdivrs
inc
add
loope
jae
add
ret
push
les
push
shl
xchg
incb
sbb
sbb
pop
es
ret
mov
enter
aam
out
icebp
out
enter
and
mov
subl
lret
sbb
xchg
sti
mov
dec
dec
and
les
lcall
lahf
lods
andb
fdivrs
inc
add
loope
jae
add
ret
push
les
push
shl
xchg
incb
sbb
sbb
pop
es
ret
mov
enter
aam
out
icebp
out
enter
and
mov
mov
mov
pop
filds
lea
aad
stc
aaa
or
pop
cmp
int3
das
sub
loop
arpl
in
xchg
xchg
ficoms
test
cmp
add
jmp
fcoms
add
js
cli
js
xchg
dec
dec
hlt
sbb
iret
jmp
lods
loop
les
cmp
xor
dec
mov
jno
mov
mov
popa
pop
and
repnz
pop
mov
cmp
jle
xchg
inc
mov
insl
sti
mov
dec
dec
and
les
lcall
lahf
lods
subb
mov
mov
ficomps
mov
movsb
jl
jae
out
fcomps
call
push
aad
ja
sub
mov
pop
fst
fistpll
lds
fsubl
mov
mov
sarb
mov
or
sub
inc
fimuls
out
and
push
adc
outsb
pop
popf
xor
sbb
sbb
pop
add
subl
mov
jg
mov
imulb
repz
jnp
ja
or
sbb
shll
movsb
negb
mov
add
xchg
mov
push
test
xchg
jp
nop
pusha
xor
adc
sub
arpl
mov
and
fstp
push
loopne
mov
or
aas
lods
pop
cmp
or
inc
stos
syscall
dec
out
dec
mov
push
mov
cmp
testb
mov
adc
xchg
loope
lds
sbb
out
scas
hlt
scas
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
out
xchg
push
inc
jg
mov
or
and
cmp
cmpl
add
dec
pop
cmpsl
add
or
fistpll
lds
fsubl
mov
mov
sarb
mov
or
sub
inc
fimuls
out
and
push
adc
outsb
imulb
test
or
dec
pop
lret
imul
sub
jns
loopne
fimuls
pop
sbb
pop
imulb
repz
jnp
ja
or
sbb
shll
movsb
negb
mov
add
xchg
mov
push
test
mov
xchg
movsl
nop
iret
jmp
mov
sub
sbb
enter
mov
jns
mov
and
fstp
push
loopne
mov
or
aas
lods
pop
cmp
or
inc
stos
syscall
dec
out
cmp
jo
sbbl
repnz
adc
xchg
loope
lds
sbb
out
scas
hlt
scas
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
arpl
xor
adc
or
mov
jg
ja
inc
repnz
icebp
mov
cmp
dec
jl
aaa
imul
push
test
out
adc
fimuls
dec
adc
jecxz
ljmp
push
into
fsts
push
sbb
sbb
pop
rcrb
sbbb
pop
mov
sub
rcr
fdivrs
outsl
mov
das
repz
mov
cmp
lret
sarl
adc
jbe
mov
push
pop
pop
cmp
fidivrl
dec
gs
call
push
sub
adc
insl
mov
and
fstp
push
dec
repz
adc
ret
cmp
je
inc
jo
jb
xor
pop
pushl
js
out
mov
fsubrs
repz
rorb
movsb
mov
divps
sbb
nop
mov
subl
dec
addb
fsts
push
sbb
sbb
pop
rcrb
sbbb
pop
mov
sub
rcr
fdivrs
outsl
mov
das
repz
mov
cmp
lret
sarl
adc
jbe
mov
xor
inc
in
cwtl
cmp
lock
push
xor
mov
add
lds
sbb
pusha
cwtl
xorb
push
push
popa
inc
inc
int3
icebp
sbb
ret
mov
adc
jl
scas
sub
jo
mov
movsl
push
les
adcl
adc
xchg
sbb
mov
mov
ret
icebp
push
mov
mov
lret
mov
imulb
repz
cmp
or
lock
mov
negb
ss
out
mov
jnp
mov
fisubrl
adc
cltd
mov
adc
sub
arpl
mov
and
fstp
push
repnz
inc
fcomps
push
cmp
js
cli
mov
add
mov
cmp
inc
ss
fcmove
or
pause
sub
and
fisubl
in
pop
pusha
testl
jecxz
inc
sub
adc
xchg
aam
xor
aad
scas
dec
mov
sub
outsl
inc
xchg
push
xlat
data16
stos
xchg
dec
aam
xchg
inc
loope
in
jbe
cmpsl
xor
lret
or
dec
mov
test
scas
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
jbe
ss
sub
scas
inc
filds
cmpl
test
js
rcll
lds
add
test
loope
popf
rcr
pop
lahf
sub
subl
push
into
fsts
push
sbb
sbb
pop
push
pop
arpl
pop
xor
jg
inc
or
jmp
icebp
cld
xchg
call
mov
sti
and
in
sub
pop
dec
sbb
mov
sub
sbb
enter
mov
jns
mov
and
fstp
push
repnz
inc
fcomps
push
cmp
js
cli
mov
add
lcall
sbb
inc
in
das
in
cltd
dec
mov
push
add
pop
fisubl
in
pop
pusha
testl
jecxz
inc
sub
adc
xchg
aam
xor
aad
scas
dec
mov
sub
outsl
inc
xchg
push
xlat
data16
stos
xchg
dec
aam
sbb
ljmp
fmull
loopne
std
cmp
pop
pop
sub
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
jbe
ss
sub
scas
inc
filds
cmpl
test
js
mov
sbb
pop
pop
in
pop
cmpsb
fcompl
sub
subl
push
into
fsts
push
sbb
sbb
pop
into
xchg
cmp
inc
mov
int3
fistps
mov
pop
push
out
popf
mov
mov
das
repz
mov
cmp
lret
sarl
adc
sbb
xor
cmp
push
repz
pusha
les
fistpll
lds
fsubl
mov
mov
sarb
xlat
push
aaa
jmp
pusha
and
lahf
into
cmp
bound
lcall
andb
loopne
xor
mov
xor
cld
or
mov
pop
in
gs
movsb
iret
andl
shrb
outsl
idivl
mov
scas
test
sahf
idiv
xchg
mov
pop
mov
mov
lock
mov
xchg
inc
push
xchg
mov
outsl
sub
fimull
adc
mov
pop
lret
jl
aaa
imul
push
test
out
rorl
mov
mov
push
addl
fbld
fistpll
lds
fsubl
mov
mov
sarb
xlat
push
aaa
jmp
pusha
and
lahf
into
cmp
bound
lcall
andb
loopne
xor
mov
xor
cld
or
mov
pop
in
rcll
aas
push
dec
shlb
mov
test
pushf
adc
clc
xchg
mov
ficoml
push
std
dec
cmpsl
mov
pop
fldcw
push
cmp
and
lret
inc
sbb
daa
lret
loopne
inc
mov
cmp
push
mov
mov
rcl
jle
ljmp
adc
jg
dec
orl
adc
jecxz
pop
pusha
sbbl
and
ljmp
mov
aaa
nop
xor
cmp
fidivrs
or
ja
lahf
push
cmpb
in
dec
and
sbb
or
mov
outsl
mov
dec
and
pusha
sub
test
dec
out
push
add
inc
inc
into
and
push
push
sahf
push
in
xor
adc
daa
xor
frndint
sahf
pop
in
cmp
imul
sub
insb
inc
xchg
mov
inc
je
jg
inc
xchg
cmc
xor
pop
sbb
fstpl
push
push
dec
push
call
cmpsl
out
cld
add
xchg
push
mov
popa
dec
inc
ja
int3
adc
xor
cmp
rorb
in
mov
xor
mov
push
jnp
stos
scas
out
jbe
adc
sti
jne
std
rolb
mov
push
cld
add
loop
gs
add
js
call
inc
adcl
mov
dec
cmpsl
test
decb
inc
lret
outsb
dec
out
mov
sub
lea
data16
jle
dec
xchg
dec
sbb
clc
popa
addr16
lret
sub
insl
push
mov
xacquire
mov
xor
imulb
imul
xor
jmp
or
jg
outsb
lods
faddl
or
mov
mov
aaa
adc
cmpsb
push
flds
inc
stc
fnsave
rcrl
sbb
sbb
pop
stos
test
insb
inc
outsb
cs
and
push
mov
push
mov
lahf
mov
setne
mov
lods
scas
popa
sbb
dec
add
sub
ficomps
or
jl
int
fwait
orb
data16
pop
sbb
inc
or
cs
mov
add
add
mov
fidivs
sbbl
jb
scas
mov
les
lcall
lods
test
ret
popl
gs
arpl
mov
fistps
mov
mov
push
data16
popa
stc
and
jecxz
cmpsb
cmpsl
test
fwait
push
loop
mov
pop
jno
adc
push
insb
mov
fldl
movsb
inc
xor
insl
into
mov
add
je
mov
sub
adc
enter
ret
xchg
cmp
test
ficoml
leave
dec
mov
in
ds
inc
addr16
loop
mov
aas
sbb
test
add
addr16
mov
push
lds
cmc
sbb
pop
lret
mov
je
cwtl
cmc
cmp
leave
add
shl
and
lock
inc
lcall
pop
cltd
testl
loopne
femms
mov
addr16
pop
ret
daa
mov
add
pusha
aas
sbb
fs
iret
dec
repnz
xor
jecxz
pop
cli
and
adc
sub
fisubrs
mov
popf
sbbl
pop
fwait
sti
insl
jl
ljmp
rclb
int
movsb
jbe
and
incl
push
in
dec
ret
lahf
lret
sbb
mov
inc
ljmp
mov
bound
jne
xchg
cmp
mov
pusha
pop
imul
jb
out
mov
cmc
add
xchg
incl
popa
pop
jge
scas
pop
pop
or
jp
mov
shrl
jns
fcomi
inc
out
add
divl
dec
cmp
jno
int
mov
jns
sbb
sub
inc
fnstenv
clc
adcl
jp
mov
add
fdivr
or
mov
imul
or
lret
lret
roll
mov
dec
sub
das
sbb
int
or
cmpsl
add
mov
ljmp
loope
stos
adc
shlb
call
out
cmpsl
adc
in
pop
cmp
mov
stc
jge
scas
mov
imul
xor
adc
fdivrs
sbb
in
jp
dec
nop
push
testb
aaa
aas
pop
mov
fld
sub
jno
sub
aam
pusha
push
mov
mov
imul
inc
and
lock
ss
push
xor
scas
fwait
leave
fiaddl
sub
push
pop
or
cmpsl
jmp
dec
ja
fidivs
ja
or
inc
pushf
nop
in
in
rorl
mov
push
add
outsl
mov
or
adc
loopne
insl
lods
inc
hlt
inc
lcall
call
fcoms
add
sahf
std
popa
cli
gs
hlt
cs
mov
mov
inc
mov
imul
lret
loopne
pop
fstl
add
lret
test
lock
jmp
in
jae
mov
lret
arpl
rcr
mov
add
popa
loop
mov
adc
add
outsl
add
adc
xor
mov
inc
lods
mov
push
movsb
add
fwait
repz
cmp
mov
jbe
and
inc
cmpb
push
cmp
adc
ljmp
add
mov
int
and
subl
jo
das
aam
test
jbe
jb
mov
es
push
insb
xchg
xchg
cmp
cmp
push
inc
lahf
sbb
aaa
pop
mov
loope
push
fadd
sbb
mov
fists
jp
pop
bound
pop
jge
mov
fcmovnbe
ja
push
lahf
push
popa
dec
sbb
pop
mov
or
pop
add
dec
sbb
mov
push
adc
mov
and
in
subb
xor
cmp
mov
and
mov
bound
xor
inc
cmp
and
or
jp
jecxz
push
sub
incb
call
adc
sbb
scas
or
rcrb
mov
cmpsl
push
cli
aam
add
cmp
cwtl
daa
xchg
fistpl
imul
sbb
out
sbb
ljmp
bound
adc
push
in
test
inc
push
loopne
imul
jecxz
cmpsb
mov
ret
xchg
call
or
jge
jg
in
jmp
insb
or
aas
jp
ljmp
cld
icebp
cmp
pop
or
dec
movsl
into
and
and
pop
mov
xor
cs
test
in
iret
pushf
xor
rcrb
insb
je
mov
in
aad
inc
cltd
jl
xchg
mov
in
cltd
fadds
push
inc
nop
lret
push
imul
jg
loopne
or
inc
cmp
jae
mov
sub
adc
cltd
rorb
shll
and
push
and
push
sub
and
inc
test
lahf
std
or
jnp
popf
dec
ljmp
pop
mov
pop
stos
jne
rcrb
inc
test
shrb
mov
roll
fisubl
fnstcw
int3
or
in
xchg
dec
dec
lock
mov
leave
and
or
add
sbb
lcall
out
cwtl
fcoml
lcall
mov
addr16
pop
mov
add
ljmp
stc
mov
je
outsl
cwtl
mov
push
aam
add
mov
mov
add
jp
jecxz,pt
aam
pop
add
sbb
lock
cmp
pop
lahf
or
loopne
repz
popf
clc
mov
popa
call
mov
mov
mov
aad
xchg
imul
call
movsb
mov
cmp
and
or
mov
aaa
mov
into
mov
xchg
std
pop
rcll
out
fistpll
jg
addr16
and
shrb
mov
pop
inc
push
add
gs
mov
dec
or
adc
sbb
dec
verr
sub
sub
addr16
mov
mov
jle
pop
rcr
fwait
xchg
mov
adc
cld
arpl
lea
add
in
movsl
mov
je,pt
xor
and
outsb
pushf
lcall
mov
das
repnz
sbb
jmp
jecxz
cwtl
xchg
sbb
cs
mov
mov
cwtl
fdivrl
xchg
dec
cmc
aam
dec
lcall
jl
mov
and
inc
imul
out
cmp
push
div
add
sbb
jmp
outsl
pop
sub
repz
mov
jnp
outsb
test
sbb
dec
addr16
sahf
push
pop
test
in
out
aam
jmp
gs
or
insb
jo
leave
mov
mov
add
and
bound
xor
cmpsb
add
andl
out
jle
cmpsb
inc
mov
aam
pop
xchg
pop
icebp
rorl
mov
mov
push
negl
jnp
pop
insl
lcallw
movsl
int
arpl
dec
iret
xchg
push
incb
push
or
lahf
sub
fidivl
ficoms
das
aaa
scas
adc
bnd
or
xor
push
mov
mov
and
dec
les
fsubrl
in
sub
stos
xor
pusha
xor
sti
sub
sub
stos
pop
mov
dec
test
mov
addr16
pop
jae
outsl
mov
push
mov
xchg
and
mov
popa
and
dec
cmp
pop
mov
mov
in
cmc
stos
xchg
in
inc
jmp
push
nop
hlt
and
mov
and
es
jmp
lret
inc
inc
dec
jnp
push
fildll
mov
andl
sbb
lcall
aas
inc
push
or
rcrl
fnstsw
or
outsb
in
mov
push
sbb
mov
xor
add
negb
shl
pop
ljmp
loopne
fisubl
aaa
dec
xor
scas
push
push
stc
fstps
aas
enter
or
inc
xchg
mov
mov
out
adc
xchg
mov
daa
xchg
out
mov
leave
fsubrp
xchg
imul
insb
ret
pop
andl
xorl
cmp
loopne
push
int3
int
mov
ljmp
rcr
mov
xor
jecxz
scas
aaa
adc
add
sbb
mov
sub
push
iret
and
pop
scas
loopne
les
pop
push
out
insl
jbe
push
mov
dec
mov
and
push
ds
sbb
popf
inc
adc
jp
mov
add
scas
scas
cmp
cmpsb
test
cmp
lock
xchg
negl
lds
xor
adc
or
pop
mov
jl
jge
mov
stos
mov
mov
and
fdiv
pop
sub
xor
and
lock
or
mov
sahf
pop
loope
mov
stos
ljmp
arpl
shr
in
sbb
into
jne
mov
mov
test
movsl
sub
mov
or
cmpsl
xchg
mov
insl
and
test
in
mov
dec
adc
aam
nop
rcll
adc
jns
shlb
stos
cmp
and
push
scas
jb
sub
mov
mov
cmpsb
lods
aad
cmp
pop
add
into
sbb
movsb
inc
jne
cwtl
sbb
adc
add
sbb
aam
arpl
xor
adc
mov
sahf
out
test
jg
or
xchg
in
ss
nop
adc
aas
movsb
in
sub
into
loop
lret
add
pop
cmp
out
ds
push
add
jmp
dec
lods
push
movsb
sub
sbb
ljmp
rcrb
xor
push
mov
das
cmp
in
dec
pop
or
add
and
mov
sti
lock
dec
and
incb
jge
aam
insl
or
cmp
jbe
push
xchg
fidivrl
pop
inc
inc
js
sbb
mov
mov
bound
pop
add
dec
xor
dec
adc
sarl
mov
nop
imul
in
pop
sbb
sti
fisttpll
fisttpll
jl
push
out
jae
popa
mov
cwtl
adc
aas
pop
mov
addr16
xchg
fiadds
mov
out
movsb
mov
loop
es
enter
aad
inc
push
or
pop
sbb
xor
pop
bsr
pop
adc
popa
cmp
iret
dec
sahf
cmpsl
mov
out
xor
jmp
adc
fsubrs
adc
out
mov
xchg
xchg
lock
in
mov
push
or
les
jne
insb
mul
popf
sub
and
add
cld
xchg
insl
lods
xor
ja
jle
or
add
inc
int
sti
loop
ret
scas
cmp
inc
push
outsb
xor
add
cmpsb
mov
repnz
in
ret
mov
mov
add
popa
cmpsb
pop
or
stc
sbb
rcrb
mov
cli
movsl
repz
add
shrb
dec
test
repz
jl
mov
cwtl
insl
sahf
fsubs
dec
adc
divb
jns
lahf
adc
sbb
movsb
adc
outsb
pop
popa
pop
fucomip
gs
enter
loop
data16
movsb
lahf
jle
mov
xor
mov
inc
jg
int3
jle
inc
iret
scas
ja
jle
js
adc
mov
addr16
jns
pushl
add
inc
int3
ss
aad
mov
fisttps
xchg
ffreep
pushf
mov
pop
cmp
mov
jp
jnp
push
inc
aaa
push
mov
and
adc
data16
sub
pop
lahf
lods
fbld
out
mov
ss
outsb
xor
sub
loope
xor
stos
mov
mov
in
mov
imul
mull
fstpt
outsl
dec
push
jle
xchg
test
xchg
mov
xchg
clc
fcoms
add
imul
mov
scas
movsb
cltd
adc
jno
sbbb
sbb
hlt
in
xchg
jmp
bound
filds
or
xchg
repz
rclb
mov
inc
jge
lea
pop
mov
cld
xchg
cmpsb
sub
lcall
mov
jns
push
fmul
roll
pop
push
xchg
fsincos
or
cltd
int3
jle
lea
and
dec
mov
adc
push
sti
lret
inc
ja
lcall
imul
cmp
addr16
lds
jecxz
leave
fiadds
dec
lahf
mov
scas
cmp
js
ss
xchg
mov
adc
jb
and
add
sbb
cmp
fwait
xor
insb
movsb
xor
jg
fstpt
ss
mov
inc
xchg
pop
jl
out
xchg
sub
roll
je
pusha
shl
test
or
lea
cmp
addr16
pop
sbb
hlt
ja
dec
sub
filds
sub
mov
lds
mov
and
inc
and
insb
dec
lcall
add
insl
jmp
ljmp
xorl
add
jge
scas
fists
lret
aad
sub
and
loopne
pop
pop
inc
aas
aaa
adc
sbb
jns
fimull
stc
sub
mov
adc
mov
push
dec
jbe
aas
es
jbe
cli
cmp
mov
fwait
xchg
add
aaa
das
and
sub
mov
nop
or
repnz
je
lahf
cs
jb
jno
pop
cmp
int
push
adc
mov
push
push
push
xchg
mov
ficoml
test
into
fcomps
mov
jbe
add
cwtl
xchg
cmpb
fnstcw
out
lods
cld
and
bound
sbb
inc
outsl
mov
push
in
mov
mov
idivl
add
jge
fnstsw
fcmovb
es
sbb
sar
repz
out
test
push
ret
fmull
js
loopne
inc
add
mov
movsb
movsb
cld
mov
insl
int3
mov
stos
mov
test
and
popa
cmc
push
inc
mov
sar
add
xor
cld
lea
insl
dec
dec
inc
mov
cmc
add
gs
inc
and
aaa
and
int
mov
fmull
sbb
loop
imull
xchg
popa
pop
xor
in
cltd
adc
dec
lret
arpl
nop
mov
jbe
push
xchg
or
es
push
btc
and
daa
or
sub
stos
out
arpl
test
out
rorb
cs
inc
cmp
sub
or
or
cmp
xchg
jbe
adc
shrb
insb
or
incb
jmp
sub
sbb
sub
and
sbb
fs
jno
pop
push
mov
xchg
cmp
jp
push
mov
jecxz
inc
xor
incb
xchg
ficompl
ja
cmpsb
cwtl
into
jp
cmp
pop
pop
loopne
jl
stos
mov
popf
or
dec
scas
adc
mov
test
push
test
nop
aaa
pop
mov
jp
pop
cmc
xor
push
pop
ja
das
loope
jbe
insl
cmp
xchg
inc
jge
lds
mov
imull
insb
stos
clc
sbb
stos
adc
lahf
int3
or
addl
jnp
je
push
inc
cmp
cld
pop
out
fdivr
xchg
xlat
clc
mov
ljmp
lahf
sbbl
scas
push
es
pusha
test
sub
ja
loop
sti
add
lcall
aad
in
xor
out
rol
insb
push
aam
es
jb
call
ljmp
cli
int
mov
adc
pop
or
jp
repnz
aaa
addr16
dec
ret
xor
mov
js
pop
in
add
notb
and
sar
xchg
cltd
loope
sub
in
mov
push
mov
jnp
in
dec
mov
pop
lcall
mov
popa
out
cmc
aas
fidivl
cli
jb
pop
fldt
mov
adc
push
insl
fcomps
mov
and
cmp
lret
pop
incl
out
adc
jge
jg
outsl
add
mov
imul
sub
cli
xchg
adc
push
imul
aaa
jo
int
push
popa
pop
test
add
ror
dec
jmp
nop
lret
add
xchg
iret
mov
push
xor
sbbl
sahf
push
cmp
pusha
pop
subl
sarl
into
push
das
idivb
out
mov
and
push
hlt
in
shr
in
cmp
scas
hlt
xchg
xlat
in
enter
test
cld
xor
cmp
aaa
jl
sub
push
sbb
in
fnstcw
int
push
mov
cmpsb
cli
mov
pop
mov
cmp
jne
push
dec
test
in
inc
adc
push
lods
mov
leave
test
inc
or
cmp
fwait
test
dec
loope
popa
outsb
incb
movsb
mov
push
jns
ja
mov
cmp
push
int
dec
lods
and
mov
enter
push
lret
in
push
mov
inc
sbb
jne
sub
cmp
test
call
push
cmpsl
sti
into
lods
stos
mov
icebp
notb
jle
addr16
dec
popf
dec
xchg
in
mov
xor
xor
dec
mov
movsb
bound
bound
andl
out
in
cltd
and
pushf
sti
movsl
arpl
insl
mov
xor
pop
mov
insb
sbb
std
add
dec
and
fnsave
mov
mov
cmp
loop
sbb
pop
mov
jb
adc
mov
and
jbe
out
pop
pop
mov
mov
and
pop
jns
enter
repz
sub
out
mov
out
xor
test
dec
mov
ja
jg
mov
es
popa
and
das
ret
dec
jno
jbe
call
jnp
movsb
pop
clc
cmp
fs
jae
adc
insb
cltd
xlat
imul
mov
sub
pop
mov
ficoms
jnp
jge
lcall
adc
lea
mov
in
cmp
out
lret
mov
call
outsl
mov
in
ret
cmc
mov
add
add
cmpsl
push
mov
push
xchg
sub
mov
push
xorl
es
loopne
adc
test
or
jns
popa
xor
mov
les
or
out
and
mov
xchg
xor
popf
push
mov
and
addr16
lock
xor
stos
nop
adc
adc
loope
push
lds
sub
push
sarb
cs
cmp
sbb
inc
inc
jno
xchg
jbe
lcall
cltd
test
sbb
adc
xor
xor
xchg
mov
xchg
xor
pop
sub
inc
pop
adc
and
sbb
rcll
out
js
jge
inc
or
bound
sub
cmp
xlat
scas
test
insl
jge
test
cmp
dec
pushf
mov
push
cmp
hlt
mov
xchg
push
lcall
jmp
shll
call
nop
dec
scas
sarb
mov
int
push
jmp
fldl
cmp
inc
shll
test
jmp
mov
add
stc
test
loop
test
xchg
lret
call
mov
adc
jno
fsubrl
movsb
jl
insl
std
loopne
das
popl
mov
mov
cmpsb
leave
sbb
lret
out
mov
mov
and
das
lock
mov
mov
out
jmp
mov
xlat
mov
push
andl
mov
popf
popf
scas
xor
divb
push
jp
hlt
cli
arpl
push
sub
aas
mov
ljmp
lcall
cs
fbstp
lds
popf
sub
pop
int3
shrl
xchg
push
mov
out
push
sarb
mov
mov
inc
nop
imul
or
and
mov
cli
mov
and
push
push
arpl
ja
mov
in
pop
insl
xchg
mov
fisubl
out
and
mov
jge
movsb
add
add
xor
or
pushf
insl
sub
pop
add
pop
cli
mov
cld
pop
out
pop
fsubl
ds
xor
jnp
cmpsl
shll
cmp
leave
into
shll
sbb
dec
push
push
das
nop
adc
shrl
dec
dec
cmpsb
je
and
mov
or
lcall
xchg
mov
ret
test
inc
mov
sbb
sbb
rorb
iret
sub
pushf
mov
dec
outsl
fisttpll
sub
and
cmp
adc
stos
push
jp
fwait
jl
dec
pop
and
push
sarb
jl
mov
outsb
out
lcall
in
xchg
test
call
push
jno
pop
adc
adc
cmp
and
jbe
insb
test
sbb
mov
inc
mov
das
or
push
test
cs
pop
std
out
pcmpgtb
push
xor
bound
or
es
imul
pop
idivl
cmp
fwait
sti
push
xchg
or
in
shll
test
imul
cmp
dec
jg
mov
mov
inc
dec
push
bound
outsl
jnp
push
rclb
pop
mov
mov
adcb
sub
and
or
in
mov
sbb
scas
out
adc
jb
cs
push
add
and
scas
xor
rclb
pop
push
cs
ja
sbb
leave
nop
stc
cltd
dec
jmp
movsl
stc
mov
and
test
push
xor
jo
add
mov
dec
sbb
fldcw
or
mov
jns
jbe
rorb
inc
push
imul
into
fldl
adc
les
sbb
fsubs
sub
adc
xor
out
inc
repz
repnz
jge
cmpsl
add
adc
sbb
imul
stos
jmp
mov
movl
inc
fisubrs
push
sub
push
imul
out
loopne
sub
das
push
out
push
andps
in
sbb
mov
in
xchg
jge
pop
or
sub
add
mov
pushf
mov
sub
fs
mov
jns
xchg
clc
mov
xlat
xor
sbb
sub
inc
cmp
mov
test
call
and
les
gs
loop
sahf
xchg
add
sbb
xchg
ret
jmp
pop
cmp
pop
fstpl
sub
mov
push
pop
je
sub
cmp
inc
je
lds
mov
repz
aam
mov
add
jbe
int3
inc
cwtl
arpl
loopne
or
fsub
js
fwait
mov
jo
mov
pusha
popf
fldt
adc
push
call
fisttpll
scas
pop
fcom
and
dec
out
fs
xchg
jl
push
xchg
test
andl
cld
or
out
pop
fdivs
stc
es
inc
pop
call
pop
out
add
sarb
int3
inc
jbe
fidivs
cmp
sbb
jecxz
pop
bound
dec
lods
cmp
movsl
rorl
sub
inc
sbb
insl
xchg
imul
shr
mov
sub
adc
cld
lock
inc
jno
mov
push
mov
fwait
cmp
push
insl
cmc
mov
sbb
maxps
lret
xchg
fwait
andl
addr16
pop
scas
inc
or
mov
xchg
ret
aam
es
or
lods
mov
xchg
sub
mov
or
or
leave
cmp
add
nop
xor
mov
jne
out
cmpsb
stos
sub
bound
out
adc
inc
insl
out
aaa
sbb
dec
dec
stos
test
fdiv
insl
aas
in
fnstcw
ds
cltd
rclb
jg
ss
pushf
outsb
roll
js
adc
in
mov
jb
and
cmc
ss
testl
stc
int
mov
mov
jno
or
xor
scas
aad
addr16
jb
dec
out
mov
xor
adc
pusha
xrelease
mul
movsb
rcrl
cmp
sub
cld
sub
lock
sahf
pop
aad
jl
xor
inc
cmc
or
dec
repnz
add
mov
xor
push
mov
dec
jo
mov
pop
inc
fcompl
or
and
jbe
lods
pop
in
dec
adc
int3
fcomps
out
arpl
mov
mov
cmp
ljmp
adc
push
mov
push
adc
cli
sub
mov
and
add
xchg
in
out
and
pop
dec
inc
aaa
mov
add
testb
out
rolb
lods
xlat
pop
or
xchg
sub
test
pop
fcomp
push
add
outsb
xchg
icebp
or
cmpl
stos
or
dec
cmpb
ss
std
dec
xchg
pop
xchg
pushw
in
xor
iret
sub
ret
sti
inc
cmpsl
push
push
mov
add
or
pop
inc
aam
fadds
and
sub
scas
ret
xchg
or
ret
sub
in
push
lds
shll
call
mov
xor
sti
pusha
or
pinsrw
push
int
sub
mov
es
popa
jne
nop
lock
add
fisttpl
and
in
mov
push
pop
out
lock
cmpsb
cmp
xchg
syscall
mov
es
sti
dec
loop
mov
cli
xchg
ljmp
cmp
xor
fsubs
jp
mov
pop
insl
inc
stos
sbbb
pop
lcall
fcoml
idivb
inc
add
jne
movsl
sbb
cmp
push
mov
sbb
testb
jne
repz
icebp
push
cmp
in
xor
or
lea
mov
inc
arpl
pop
jnp
sbb
sti
insl
dec
aad
movsb
inc
cltd
cmpsb
fbstp
call
xchg
add
fldl
jb
movsl
cltd
pop
ss
scas
sarl
out
xchg
xor
push
lcall
mull
xchg
mov
pop
je
icebp
aaa
xchg
jb
loope
or
sarb
mov
call
pop
xchg
rcl
shlb
popa
adc
dec
push
inc
clc
jp
in
add
out
dec
sahf
add
lret
and
outsb
pop
xor
les
jl
dec
test
lcall
jmp
xor
pslld
jmp
cmp
push
and
inc
test
fcmovne
stos
xlat
sbb
sub
cmovge
mov
jbe
mov
test
hlt
inc
adc
fidivrl
push
enter
cmpsl
ret
cmpsb
and
in
clc
dec
mov
movsl
cli
or
and
sbb
mov
mov
sbb
rclb
add
push
mov
aad
lock
ret
jecxz
adc
jbe
pop
push
insl
pop
mov
repnz
push
cmp
fiadds
out
add
pop
ss
pop
sbb
inc
hlt
ja
xor
insb
scas
bound
xchg
out
xor
scas
mov
adc
daa
das
cli
and
test
dec
sub
arpl
and
jg
sub
cwtl
ffree
or
outsb
fcmovne
bnd
dec
out
neg
cld
imul
popf
xchg
push
loopne
jle
fwait
mov
pusha
fcomps
xor
lds
mov
push
aam
aas
xor
and
repnz
out
mov
outsl
stos
jg
fstpl
into
cmp
mov
pop
jge
or
cwtl
add
js
push
mov
sbb
cmova
test
cmp
es
ret
push
shll
cmc
aaa
push
pop
jno
dec
mov
sbb
mov
jl
push
push
in
inc
repz
pop
xchg
xchg
test
cmpsl
out
loop
pop
and
rcr
jo
out
xor
aas
adc
hlt
imul
push
mov
mov
or
xchg
out
lock
scas
and
mov
cmp
sti
jl
fistl
popa
push
lret
shl
adc
addl
jb
lea
es
or
pop
add
xchg
adc
xchg
or
or
hlt
insl
and
xor
ret
in
jl
mov
cmp
adc
pop
inc
dec
loop
jbe
cmp
add
es
sub
dec
push
test
dec
mov
out
push
dec
dec
sbb
rorb
aas
scas
add
sbb
cmc
das
hlt
add
mov
dec
js
add
inc
dec
sti
or
dec
cmpsl
and
shl
cmp
mov
loopne
pop
ficompl
addr16
stos
and
movsb
daa
fcomi
inc
shll
movsl
dec
rcrl
sbb
and
leave
xchg
inc
sbb
inc
aas
lds
or
shll
push
outsl
jb
dec
mov
mov
and
jge
cmp
and
push
stos
and
adc
cmp
or
cmp
cmp
add
xor
fistps
xchg
mov
mov
in
ja
pop
pop
stos
iret
jo
int
cmpsb
push
pop
sbb
pop
ds
jge
fwait
mov
xchg
pop
cld
nop
push
ficoml
cs
dec
push
mov
out
addl
mov
fwait
adc
pop
ficoms
loope
mov
sbb
pushl
movsl
les
idivl
imul
fnstcw
fmulp
inc
aas
cmpsl
or
and
or
cmp
add
pop
jp
lret
jmp
subl
jnp
sbb
cmp
nop
stc
cmp
outsl
mov
outsl
dec
xlat
jl
cmp
sub
xchg
adc
sbb
sbb
fidivrs
loop
ss
outsl
adc
jno
aad
scas
fldenv
dec
rorb
fstps
cltd
insb
mov
jmp
stos
dec
lret
insb
jecxz
ljmp
push
adc
cmp
dec
cld
dec
inc
adc
sbb
call
jae
adc
mov
stos
pop
stos
and
subb
dec
mov
mov
sti
dec
adc
iret
psubsb
push
sub
and
outsl
or
pushf
sub
or
into
bound
cmpb
out
adc
cmc
sub
cmp
dec
fildll
or
adcb
in
jg
bswap
cli
push
imul
dec
lods
imulb
jg
leave
rorl
and
push
int
sar
icebp
push
jns
lahf
and
ret
xor
xchg
pop
das
xchg
mov
or
ret
aam
mov
inc
ss
ds
into
ja
in
daa
mov
xor
mov
fimull
and
pop
dec
pop
fwait
pop
repz
jp
dec
call
jne
add
push
mov
adc
repnz
push
jbe
mov
sub
push
jge
data16
not
cld
mov
lret
in
inc
in
fimull
pop
and
adc
mov
shlb
dec
mov
push
push
mov
cmp
pop
loope
das
addr16
push
in
out
xor
movsl
jl
and
fidivrl
lock
imul
cld
cmp
jp
or
mov
mov
push
fs
mov
inc
jo
idiv
xor
int3
lods
jnp
and
pop
repz
dec
xor
adcl
xchg
testb
pop
ljmp
xchg
cmpsb
pop
mov
loop
pop
addr16
mov
adc
and
pop
xor
ss
repz
addb
or
mov
push
mov
xchg
mov
les
addb
and
sarl
nop
and
cs
mov
dec
lea
inc
aad
int3
sub
dec
stos
loopne
sub
sbb
inc
xor
fisubrs
add
add
test
insb
cmpl
push
movsl
int
push
jg
mov
test
sub
pop
or
push
xchg
cld
xchg
and
pop
fidivl
mov
jne
cs
pop
aad
add
popf
xor
lret
call
push
ret
sub
mov
pop
aaa
cld
jp
or
xchg
mov
fiadds
sub
fdivs
dec
adc
mov
mov
aas
out
xchg
xchg
icebp
nop
ljmp
adc
push
int3
sbb
ret
mov
cmp
imul
stc
hlt
fstps
outsb
das
sarl
loopne
dec
aad
icebp
les
jo
adc
sbb
cmp
or
arpl
mov
jb
mov
xchg
mov
add
insl
imul
mov
push
adc
ja
lods
add
adc
sub
rcll
loop
push
ds
xlat
dec
filds
int3
mov
push
in
xor
fwait
adc
mull
xchg
add
in
add
dec
cwtl
mov
data16
xchg
lods
les
test
mov
mov
push
insl
inc
lods
pop
lea
imul
or
sti
lahf
dec
mov
adc
in
mov
movb
sahf
dec
cmp
int
push
and
mov
jge
jge
add
add
cltd
fists
add
add
add
lret
jb
jp
xchg
jmp
dec
pop
out
je
dec
int
mov
xor
add
shrl
aad
push
dec
cmp
adc
in
sub
stos
dec
add
lcall
movsb
clc
dec
fnstcw
pop
mov
push
sbb
mov
xchg
or
es
notb
and
faddl
add
pop
xor
cltd
cmp
sub
mov
mov
cli
cs
test
and
cltd
js
mov
add
pusha
mov
ror
xor
mov
insl
pop
cwtl
test
mov
test
sar
add
mov
repz
outsl
test
arpl
cmp
adc
imul
mov
jecxz
pop
push
xchg
cmpl
or
lret
fisubl
stos
pushf
adc
pop
add
pop
repz
pop
dec
sbb
hlt
out
xor
test
inc
ficompl
push
lret
es
push
mov
push
jle
pop
xchg
sbb
dec
aad
dec
inc
orl
or
cmpxchg
mov
dec
inc
mov
cmp
jae
fisttpll
scas
push
in
and
mov
xchg
and
andb
pushl
ljmp
cmpsl
jle
aad
fcom
dec
jg
inc
jmp
sub
aas
stos
js
mov
or
in
jl
mov
test
fcomip
jnp
jns
and
pusha
jns
sbb
add
jmp
jecxz
icebp
jns
mov
add
aaa
push
cwtl
sahf
ljmp
rcl
shrb
xor
in
fwait
dec
xor
bound
sbb
cltd
inc
xor
imul
ficomps
fcompl
add
aam
popf
add
mov
adc
dec
xchg
jb
jl
push
loop
aad
mov
inc
jbe
gs
ja
jl
shrl
xlat
icebp
scas
xchg
orb
pop
pop
cmp
shll
push
cmc
fcmovb
dec
cmp
out
jmp
adc
xchg
insl
cmpsl
xor
adc
xor
das
orl
xor
dec
mov
cmp
fs
aaa
les
test
jb
xor
movsb
cmp
int
aam
shll
lret
inc
leave
jp
test
push
in
test
insb
xchg
loop
imul
test
or
leave
testl
ljmp
push
stc
xor
mov
add
in
fmull
mov
sub
les
sbb
mov
sbb
jo
and
outsb
mov
pop
xlat
sub
inc
push
and
loope
std
lods
nop
cmp
shl
out
out
mov
xchg
rcl
inc
mov
icebp
out
out
in
imul
aaa
lods
xor
mov
lods
leave
in
sbb
mov
fwait
cmp
mov
pop
pop
test
imul
idivl
inc
adc
pop
mov
xchg
fistl
clc
rorl
fldcw
sarl
fistpl
int
sti
in
inc
loope
push
cmp
gs
divb
ret
arpl
cmpl
loope
mov
jmp
rorl
xor
xchg
jge
and
sbb
ret
sti
cmp
dec
adc
cbtw
and
sub
mov
mov
adc
cmp
andb
jle
adc
cld
cmp
ljmp
insl
call
lds
movsb
adc
dec
loope
imul
enter
push
push
ds
push
xor
and
xor
sbb
push
addr16
adc
xchg
add
les
mov
or
lea
cmp
cmc
pop
lea
xor
shrl
in
lock
push
xlat
fildl
cmp
lea
jmp
jb
add
jl
xchg
mov
xchg
fsts
xor
ljmp
divl
push
jl
ljmp
fistpll
rcrb
in
pop
sub
rolb
cmp
mov
rclb
and
push
mov
and
loop
adc
inc
imul
rorl
adc
or
jne
push
stos
add
pop
aaa
lock
ret
mov
dec
pop
and
cmc
adc
leave
jmp
sbb
adcb
sub
push
leave
sub
aam
scas
dec
xchg
insl
sbb
add
cltd
fists
add
add
add
xchg
fisttpl
rcrl
daa
rcrb
repnz
hlt
lret
divb
push
or
aad
mov
test
dec
push
pop
push
add
sub
inc
sub
outsb
dec
sub
xchg
xorb
push
xlat
les
xchg
outsb
sub
lret
xor
xchg
lret
sub
pusha
fadd
sbb
mov
in
inc
lods
ja
or
cmp
or
sbb
jbe
fisubl
sbb
into
xchg
scas
rorb
sarl
push
sub
pop
xchg
dec
cmp
mov
shrb
push
cltd
cmc
pop
push
enter
add
mov
fisttpll
inc
adc
loopne
push
imul
int
or
xor
test
out
das
push
sub
sub
jb
sbb
inc
pop
fidivrs
or
push
or
cmp
jmp
jle
cmpsl
in
sub
push
add
pop
adc
imul
ficompl
setp
inc
cmp
add
mov
pop
xchg
cltd
out
mov
or
mov
stc
cli
add
sub
xchg
dec
fisttpl
outsl
jne
addb
rcrb
aaa
jl
std
nop
xlat
jbe
out
lcall
inc
mov
push
push
fmull
cwtl
sbb
xchg
pusha
ljmp
das
push
xchg
iret
sarb
popf
dec
aas
inc
pop
xchg
mov
lahf
dec
cwtl
addl
push
inc
jnp
out
lret
xchg
add
xor
mov
adc
cmp
mov
imul
mov
movsl
cltd
add
lea
adcl
jp
pop
mov
gs
push
jp
adc
enter
add
mov
fisttpll
inc
adc
loopne
push
ret
push
adc
nop
nop
sbb
das
push
sub
sub
jb
sbb
inc
pop
fisubs
mov
jo
jg
sub
loope
mov
test
in
sub
push
add
pop
adc
imul
ficompl
psubw
push
jmp
jecxz
inc
loopne
jmp
sbb
outsb
or
mov
stc
cli
add
sub
xchg
repz
or
imul
sbb
ja
rcrb
aaa
jl
std
nop
xlat
jbe
out
lcall
inc
sbb
outsl
enter
sbb
xchg
pusha
ljmp
das
push
xchg
iret
sarb
popf
dec
aas
inc
pop
xchg
mov
lahf
dec
cwtl
andl
ret
addr16
inc
jnp
out
lret
xchg
add
xor
mov
adc
cmp
mov
dec
jmp
dec
cld
int
cltd
add
lea
xorl
jns
sub
push
sub
mulb
jmp
ret
sti
int
lcall
jg
jnp
dec
or
sub
or
cmpsl
popf
int3
clc
lahf
lcall
dec
xor
lea
inc
pop
divb
push
std
jp
push
jns
or
jl
jge
pop
sahf
jmp
push
divb
mov
inc
mov
pop
loope
cmpsl
in
sub
jge
aad
jmp
cmp
xor
push
push
jno
mov
mov
push
add
ljmp
aam
addr16
sub
arpl
shlb
inc
iret
xchg
les
and
xchg
dec
and
testb
mov
lret
jnp
dec
pop
xchg
mov
lahf
dec
cwtl
addl
nop
out
lods
push
cs
leave
dec
cltd
out
jno
lcall
cmp
mov
jnp
inc
int3
divl
sti
lahf
je
sub
add
sub
lods
xor
loopne
movsl
mov
clc
push
in
orl
addl
push
mov
push
loopne
push
ret
push
adc
ljmp
xchg
sub
mov
pop
stos
jle
stos
xchg
xor
subl
sbb
sbb
push
push
push
into
push
cmpsl
test
jge
fdivs
xor
add
mov
xchg
imul
ficompl
nop
addr16
pop
popf
shr
xor
popa
mov
nop
pop
sti
xchg
enter
pushf
mov
sub
xchg
pop
lods
xchg
pop
mov
push
loope
jno
insl
into
cmpsb
jo
add
ljmp
aam
addr16
sub
arpl
shlb
inc
lcall
adc
dec
and
testb
mov
lret
jnp
dec
pop
xchg
mov
lahf
dec
cwtl
sbbl
xor
cs
leave
dec
cltd
out
jno
lcall
cmp
mov
fisubrs
popa
mov
mov
or
sti
lahf
je
sub
add
sub
lods
xor
loopne
shlb
sarb
inc
out
push
pop
cmp
enter
pop
pop
add
out
or
mov
or
in
in
rorb
rolb
sarl
push
sbb
std
leave
ja
push
sbb
adc
pushf
inc
pop
lea
xor
subb
xchg
leave
dec
cltd
out
jno
xchg
or
xlat
or
popa
pop
push
sub
mull
ja
mov
lahf
sub
push
outsl
pop
popf
inc
jno
iret
inc
and
lret
int
iret
popf
xor
xor
ljmp
lods
xchg
stc
lahf
mov
test
movsl
aaa
and
fcomi
ret
jle
add
lahf
lock
stos
das
jbe
scas
adc
dec
sub
sarl
jmp
mov
mov
test
push
in
scas
jecxz
flds
xorl
xchg
push
jno
jo
or
push
out
clc
and
lods
into
add
hlt
pop
or
out
mov
and
loop
add
mov
or
mov
or
in
getsec
clc
sbb
ficomps
sbb
sarl
push
sbb
std
leave
ja
push
sbb
adc
das
inc
pop
shlb
int3
leave
jg
pop
pop
jbe
add
or
xchg
jge
aam
loop
aas
in
divl
sahf
push
mov
movsl
xchg
lahf
jmp
loope
push
xchg
add
xor
inc
lea
repz
notl
dec
imul
ror
xor
sti
xchg
rolb
jo
xchg
dec
rolb
ret
mov
xchg
lret
es
cli
xor
sbb
rcrb
aaa
jl
int3
lcall
nop
pop
jne
pop
call
bound
add
lds
shrb
sub
in
push
push
fistl
into
xor
jb
xchg
mov
sub
outsl
pusha
ret
jmp
jp
out
xchg
std
cltd
outsb
dec
lds
add
lds
ss
shll
imul
mov
sbb
sbb
orl
pop
xor
leave
ja
or
dec
pop
in
push
dec
fidivl
xor
xor
out
ljmp
incb
or
xor
and
dec
adc
mov
dec
enter
sbb
aam
sti
in
pushf
jns
cs
insb
into
adc
lcall
mov
mov
cld
jb
mov
cmp
inc
fsubrs
mov
stc
ljmp
leave
jb
or
mov
pop
xchg
das
push
dec
arpl
mov
pop
movsb
dec
into
int
mov
ja
mov
movsl
jns
out
add
out
add
jmp
push
cltd
aaa
xchg
adc
add
in
adc
mov
lahf
sub
push
sbb
jne
lret
sub
sbb
add
loopne
movsl
scas
mov
dec
int
scas
sbb
in
push
mov
add
fwait
xchg
addr16
dec
xor
jmp
or
xchg
inc
pop
xor
leave
ja
or
dec
pop
in
les
in
dec
inc
outsb
cmp
jge
inc
out
incb
or
xor
and
dec
adc
fwait
daa
cmc
xchg
inc
fidivl
xchg
jns
cs
insb
into
adc
lcall
inc
js
idiv
mov
cld
jb
mov
cmp
inc
fsubrs
mov
mov
js
inc
ds
fidivs
or
mov
pop
xchg
das
push
dec
arpl
mov
test
jmp
jne
adc
add
out
add
jmp
push
adc
add
in
adc
mov
lahf
sub
push
sbb
jne
lret
sub
pop
jecxz
xchg
and
shr
scas
sbb
mov
sahf
push
cmpsl
and
and
in
xchg
out
cs
jge
mov
imul
movsb
dec
jl
xor
ljmp
pop
sbb
orl
out
mov
aam
or
jns
xor
mov
je
fs
xor
hlt
inc
iret
addb
lcall
dec
or
dec
icebp
and
add
add
add
add
add
add
mov
mov
mov
jno
popf
sbb
rcll
aaa
xchg
adc
dec
pushf
jg
jp
out
cmpb
xchg
cli
icebp
adc
fdivs
push
push
and
outsb
mov
ljmp
and
fcmovne
ret
mov
mov
out
ret
or
pop
mov
cmpl
ror
scas
push
sub
call
gs
mov
xchg
repz
inc
dec
push
call
push
shl
movsl
loope
rcrb
pop
shrb
shl
jge
inc
cld
lea
dec
and
mov
jns
inc
pop
dec
gs
xor
push
sub
insl
sbb
sbb
ljmp
ja
test
xor
and
pop
xchg
pop
inc
shl
mov
enter
in
aam
ret
mov
inc
or
mov
xchg
jns
in
rorb
sub
ja
je
shl
mov
popl
cmp
pop
cmp
dec
ret
jnp
orb
insl
orl
fnstenv
pushf
pop
jbe
xchg
xchg
jns
repz
cmp
adc
pushf
jmp
xchg
outsl
shrb
es
pop
mov
mov
cmp
push
leave
jmp
inc
mov
jg
mov
jo
cmc
enter
lods
sbb
das
pop
mov
xchg
dec
out
xchg
inc
sahf
fcomip
loopne
repnz
fstpl
mov
sub
pop
dec
inc
cmc
add
sbb
movsb
sbb
mov
inc
insl
je
adc
jmp
icebp
neg
dec
cmp
mov
adc
add
xchg
enter
jp
test
and
in
sbb
in
jle
cwtl
pop
mov
lock
in
daa
leave
adc
jns
or
rolb
xlat
jmp
dec
or
sbb
mov
sbb
lods
xchg
adc
dec
xchg
ljmp
add
mov
int
sub
cmp
sub
sub
dec
xchg
pop
mov
pop
and
mov
lret
cli
jns,pn
call
out
insb
jns
pop
mov
outsb
inc
mov
add
incl
ja
mov
dec
rcr
js
and
pop
xor
in
jne
adc
pop
aaa
fmull
je
outsb
adc
mov
es
adc
gs
stos
mov
lock
stos
iret
bound
addr16
and
mov
js
jecxz
sub
int3
repnz
cmp
lcall
xlat
inc
inc
decb
xchg
or
and
pushl
lret
repz
and
sbb
lea
push
ficomps
aam
jl
sub
fwait
xor
rcll
sbb
add
movsl
jp,pn
ret
jp
lret
inc
mov
outsl
in
pop
cmp
fwait
adc
ret
pushf
addl
add
jne
or
jb
std
jmp
lahf
out
xchg
mov
out
xchg
mov
out
xchg
mov
out
xchg
mov
out
xchg
mov
dec
adc
insb
fwait
add
dec
adc
sbb
jo
xchg
sbb
cltd
dec
cwtl
outsl
jnp
push
inc
push
xchg
xor
jb
icebp
mov
jnp
push
inc
mov
stc
and
xchg
lret
xor
orl
cwtl
movsl
inc
push
in
sbb
inc
leave
stos
movsl
addr16
dec
mov
das
mov
les
mov
and
cld
xchg
cmp
mov
jnp
adc
xlat
mov
rol
sub
orb
out
push
sbb
mov
aas
push
or
leave
xchg
into
cmc
add
jo
cwtl
and
jno
and
jo
ss
out
sti
push
jnp
or
imul
push
add
add
add
add
add
add
hlt
dec
sub
and
push
xchg
xchg
int3
mov
shlb
imul
sbb
cld
int
int3
mov
inc
shrb
mov
cmp
xchg
movsl
rcrl
lock
adc
into
fsubrl
cmp
stos
xor
xchg
pop
sbb
sbb
push
lods
mov
xor
je
mov
jne
mov
nop
rcl
xchg
and
arpl
jae
cmp
inc
dec
sub
pusha
js
add
mov
push
adc
cs
or
or
and
and
push
add
sbbb
push
repz
lcall
push
lock
add
sbb
push
sbb
mov
jmp
ljmp
dec
loopne
pop
shrb
idiv
mov
cmpsl
dec
jbe
lock
or
inc
pop
jge
push
xchg
aam
dec
cmpsb
cmp
add
call
lds
ds
xchg
mov
jbe
cmp
sbbb
mov
sub
cmpsl
lods
dec
cwtl
push
pusha
xor
mov
pop
je
or
lea
xchg
mov
push
shr
xchg
mov
bound
inc
add
fwait
add
aas
repnz
cmpsl
ret
cmpsb
gs
inc
loope
test
jge
add
or
stos
push
sub
mov
aad
adc
outsl
jo
add
mov
lret
jb
add
daa
clc
out
imul
imulb
adc
lds
sub
in
cmp
mov
js
sahf
shll
mov
mov
pop
incb
jp
rcrl
push
dec
sarl
rclb
xchg
jge
cmp
add
out
sahf
stos
fs
dec
add
adc
cmp
shl
imul
aas
cltd
sti
lock
add
inc
das
sahf
dec
push
sub
sti
pop
and
mov
mov
lods
push
dec
fwait
mov
imul
pop
adc
xor
and
popa
jge
mov
pop
lock
mov
ret
push
pop
add
cltd
fists
add
add
add
repnz
xchg
cli
dec
or
pop
cli
jne
iret
aas
pop
adc
test
mov
movsl
jne
outsb
aas
lea
in
int
add
in
mov
xchg
imul
cmpsl
lahf
pop
push
aad
pop
add
sbbb
cmp
cmp
cmp
push
inc
inc
rorl
and
leave
pop
or
xchg
and
dec
lahf
pop
and
and
xor
mov
aaa
xchg
mov
mov
outsb
inc
sub
rcl
rcrl
ret
std
dec
sti
lahf
or
std
xor
sahf
loopne
loope
mov
adc
stc
pop
sarl
out
mov
cmc
mov
movl
stos
mov
clc
in
lret
fwait
add
xchg
mov
add
mov
jmp
jg
push
jge
jl
and
ljmp
subl
les
lahf
in
mov
push
inc
sbb
pushf
pusha
mov
xlat
cli
mov
fucomip
sub
push
lock
stos
popa
out
sti
ds
das
stos
inc
scas
xchg
add
dec
movhps
mov
rcrb
test
xchg
gs
pop
lcall
sub
repz
fcmovbe
or
mov
les
inc
sbb
mov
jmp
idivl
xchg
out
loopne
mov
testl
test
xchg
sub
sub
pop
pop
outsb
mov
sbb
adcb
inc
and
cli
shll
ret
pop
cld
add
loopne
hlt
lcall
shrl
std
mov
hlt
arpl
mov
dec
pop
mov
cmpsl
sbb
ja
fs
inc
lret
sbb
ljmp
mov
push
loope
mov
adc
push
cmp
icebp
scas
nop
ret
mov
daa
sbbb
add
push
jle
push
cld
inc
dec
adc
test
filds
push
fsubrp
pushf
pop
dec
and
lods
dec
std
lock
lea
mov
jge
adc
pop
add
jb
or
sahf
in
push
adc
fdivr
cli
add
daa
addl
movsl
inc
icebp
icebp
je
repz
dec
adc
mov
jb
sub
dec
sbb
das
call
scas
or
push
push
jg
cmp
xor
fnstsw
stos
xor
aaa
add
mov
mov
jbe
xor
adc
stc
mov
hlt
bswap
xchg
mov
xchg
jo
or
lods
clc
xor
xlat
push
pop
test
loope
push
into
in
rcr
je
lock
xor
cwtl
jo
push
fistpll
in
push
fnstenv
cmp
push
lock
sbb
push
sbb
imul
pop
popf
jnp
aad
test
pop
push
dec
imul
push
jae
xor
or
scas
mov
push
scas
jecxz
aaa
sub
add
and
push
sahf
sbb
rorb
lods
mov
or
stos
jp
push
sub
lahf
and
aas
or
xor
ss
and
xchg
fadd
pusha
inc
out
sti
stos
jmp
adc
sbb
outsb
push
inc
aad
xlat
mov
lcall
mov
xor
jbe
or
pop
scas
cmp
add
sbb
mov
pushl
shrb
mov
jp
in
pop
loopne
push
popf
xchg
jp
sbb
push
xor
cwtl
cmpsl
sahf
aas
aam
push
mov
les
ret
sub
sbb
mov
cmp
fbld
pop
inc
cwtl
mov
sub
imul
scas
or
fcmove
inc
aam
loop
pop
pop
out
repz
int
sub
push
push
and
popa
pop
adcb
sbb
cmpsb
repz
jb
jecxz
push
clc
dec
add
push
sbb
push
pop
dec
pushf
mov
mov
int
les
xor
and
jge
mov
mov
sub
push
add
inc
shrl
outsb
mov
xchg
pushf
push
icebp
xchg
and
loopnew
xlat
lret
cmp
sahf
lea
movnti
cltd
jmp
sbb
fidivrl
shll
out
pop
out
and
rclb
sub
xchg
mulb
test
cmpl
pusha
sbb
jl
dec
jne
cmpsl
adc
xchg
push
dec
das
data16
pop
adc
mov
popa
popf
andb
push
std
and
pop
adc
aad
mov
adc
mov
or
leave
push
xchg
fsincos
mov
aad
fstpt
popa
insl
mov
dec
gs
mov
cmc
imul
cmp
cli
fists
or
jne
cltd
popf
jae
pusha
mov
mov
pop
push
inc
xchg
insb
mov
push
push
lea
pop
sbb
loope
nop
jno
mov
jo
repnz
loopne
xchg
paddw
or
xor
and
int3
mov
dec
and
mov
outsl
inc
cmpsb
dec
or
cmpsb
lds
scas
push
push
ret
mov
mov
mov
xor
js
mov
out
push
in
notl
rcr
mov
lcall
int3
psubq
and
mov
scas
repnz
outsl
push
mov
outsb
sbb
hlt
adc
mov
sarl
add
loopne
push
xor
aas
aam
or
sbb
inc
movsb
dec
mov
adc
sti
mov
stos
jmp
daa
push
aaa
stos
lods
fs
out
add
shr
adc
xlat
stos
inc
repnz
jns
daa
jo
inc
addr16
sbb
leave
push
xchg
mov
adc
pop
inc
lahf
cmpsl
dec
out
sub
jno
repnz
ficomps
outsl
pop
mov
or
int3
inc
pusha
mov
fldt
test
ljmp
sar
pop
ja
dec
ljmp
pop
repnz
scas
sar
jle
fcomip
or
fs
push
jbe
pop
cmp
insl
inc
sti
mov
jae
aam
adc
sub
lret
push
dec
outsl
loop
ljmp
aam
pop
aad
and
lods
xor
inc
jb
in
and
repz
bound
dec
push
ret
cld
cmp
out
aaa
adc
or
pop
push
stos
xchg
lods
mov
fwait
jg
std
pop
push
scas
xor
or
cmpsb
xchg
xchg
dec
loop
mov
insb
mov
xchg
mov
xchg
xchg
xchg
pop
stc
stc
lcall
xor
xchg
imul
out
push
xor
mov
adc
push
pop
ret
lret
inc
pop
xor
pop
jge
data16
jg
addr16
lcall
movsb
in
cmp
jl
in
cmpsb
nop
sbb
cmp
cld
and
sbb
fwait
or
xchg
outsl
gs
jl
insl
lods
mov
in
adc
push
cli
sbb
cmc
or
xlat
cwtl
hlt
popf
out
cmpsb
sbb
fs
scas
ljmp
xor
lret
inc
pop
insb
test
pop
mov
pop
out
fdivrs
cmp
push
nop
or
mov
cwtl
cmp
xchg
mov
dec
mov
pop
test
cmp
popa
adc
das
sbb
xor
mov
shlb
push
test
out
out
rolb
add
je
fwait
mov
mov
push
shlb
orl
loop
add
mov
mov
xchg
in
popa
enter
stos
jecxz
lret
int3
inc
mov
inc
mov
jne
outsb
or
xchg
inc
adc
in
dec
dec
inc
push
popa
ja
in
in
add
jbe
push
enter
pusha
lea
test
push
nop
lea
and
scas
dec
pop
pop
adc
icebp
fadds
data16
int
aam
mov
ss
pop
daa
shll
add
cltd
and
cmp
ljmp
test
pushf
cmp
dec
sarl
add
mov
xor
in
inc
pop
test
inc
mov
iret
cld
jge
icebp
repz
xor
out
cmp
sub
xor
loopne
int3
sub
dec
mov
call
add
xlat
test
dec
testb
push
cmpsb
mov
movsl
xlat
ficomps
add
push
jge
mov
scas
js
pop
sahf
pop
clc
sbb
mov
xchg
loop
sbb
mov
pop
popf
test
xchg
adc
out
push
push
int
mov
or
dec
xchg
cmp
mov
mov
or
lret
xor
mov
aam
dec
leave
andl
sub
lds
pushf
cli
loop
xchg
sub
arpl
aaa
xchg
andl
push
aad
insl
fstps
dec
into
lret
rcrb
aas
lcall
jl
dec
fs
xchg
gs
and
jae
aam
repnz
sub
movsl
xchg
in
cmc
rolb
add
add
imul
add
flds
call
cli
jge
or
cmp
push
jno
mov
xor
fcomip
xchg
cmpsb
or
mov
xor
movsb
sub
movsl
xor
popf
mov
fwait
shlb
mov
fcmovb
fimuls
and
movsl
jne
cmp
xor
xchg
sti
jae
sbb
xchg
cwtl
pop
in
lcall
mov
out
and
out
std
loopne
out
inc
sti
xlat
dec
addr16
sti
aaa
mov
lret
repz
or
mov
testl
ret
out
mov
fwait
mov
inc
mov
lods
cwtl
mov
pop
jne
xor
mov
jne
push
inc
add
mov
jmp
cmpsl
cmp
lods
into
add
aas
aaa
sarl
xchg
jb
adc
add
dec
mov
std
mulb
je
decb
ds
pop
pop
or
adc
or
cmc
aaa
imul
dec
out
pop
xor
or
aad
mov
repz
cmp
xor
shll
sbb
loopne
pop
insb
push
loope
data16
cmpsb
rclb
add
pop
out
adc
pop
xlat
or
insl
mov
jno
jmp
or
dec
stos
call
mov
and
out
shr
movsb
lock
ret
scas
lods
fsts
jae
mov
insl
aad
lods
fcmovu
xchg
data16
dec
xor
mov
push
lea
es
or
cmc
cld
inc
in
or
jle
cmp
mov
push
scas
imul
iret
mov
cmc
cmp
fnstenv
stc
add
lock
enter
fldcw
stos
out
mov
fs
sbb
or
popa
lret
mov
sbb
sbb
lods
leave
insl
sahf
cmp
shl
ss
adc
outsl
popf
jo
pop
sbb
test
mov
rclb
inc
dec
xchg
jo
sahf
ljmp
and
cs
xor
in
addr16
inc
in
lcall
pop
jge
aaa
dec
pop
jnp
and
mov
in
adc
sub
ds
movsl
mov
das
cs
not
sbb
mov
call
xchg
cmp
sahf
aam
xor
je
adc
lds
movsb
dec
add
cltd
push
repz
rcrb
loope
aas
xchg
inc
pop
mov
fs
in
mov
mov
cmc
jnp
mov
aaa
xor
dec
iret
lahf
or
push
jge,pn
xchg
lret
ffree
dec
icebp
cmc
popa
lret
fstpt
insl
ret
inc
push
sub
sbb
xor
addr16
cmp
xchg
insb
mov
mov
movsl
imul
and
adc
sub
pop
int
jl
mov
jecxz
leave
xchg
mov
pop
test
dec
jae
pop
sbb
jl
dec
pop
sub
aas
dec
ret
stos
adc
cmp
ljmp
ljmp
call
jbe
pop
loope
cmp
loop
adc
pusha
mov
cmp
shrl
pop
pop
jmp
arpl
mov
pop
or
popf
mov
mov
jmp
sbb
push
ret
cmc
adc
pop
mov
ret
sub
arpl
test
sti
add
pop
adc
or
or
cmp
int3
and
lods
or
cmp
cwtl
inc
xor
cld
jnp
dec
out
inc
mov
add
mov
insl
ja
xchg
sub
push
fdivrl
lods
push
jnp
add
shll
jae
call
mov
pop
idivl
xor
mov
int
adc
shlb
adc
gs
sub
jmp
in
mov
fiadds
mov
jbe
jg
aam
dec
adc
repnz
cmp
stc
shr
enter
in
lock
sbb
and
orb
push
orb
or
xchg
mov
out
repnz
int
jb
shll
into
push
dec
push
dec
and
sub
rorb
pop
addl
xor
fptan
pop
imul
xor
enter
out
pop
mov
xchg
nop
outsl
das
fldl
pop
arpl
or
les
mov
es
jae
jb
outsb
push
xor
jb
mov
arpl
lret
lret
out
jmp
test
push
mov
mov
mov
sbb
imul
arpl
inc
push
add
sub
iret
mov
in
test
insl
mov
scas
lret
out
fisubs
cli
or
xchg
jo
add
add
pop
iret
cld
outsl
fwait
imul
les
cmpsl
dec
jo
dec
call
push
enter
pop
in
push
out
mov
jle
fcmovbe
push
ret
sarb
out
mov
aad
inc
push
fdivr
cmp
sub
lods
inc
fcomp
pop
push
xchg
fs
sub
lret
pusha
inc
pop
cli
jl
aam
mov
mov
inc
shlb
mov
sbb
mov
pop
sbb
push
pop
push
leave
sahf
cmp
add
sbb
insb
jns
enter
repz
fsts
pop
leave
pop
fistps
sbb
sbb
pop
push
mov
loope
inc
adc
xlat
cmp
cs
test
out
sahf
inc
or
dec
lds
fwait
out
out
sub
rorb
push
lahf
mov
add
faddl
and
loope
incl
pop
or
mov
fcomps
pop
loope
sbb
push
sub
or
lahf
cld
push
mov
mov
xor
jb
and
inc
std
mov
pushf
cmp
inc
leave
cmpsl
mov
push
neg
push
and
movsl
sub
jge
sub
sahf
imul
mov
in
push
xchg
mov
inc
push
inc
pop
shll
sbb
jmp
pushf
sub
aad
mov
sbb
jb
sub
les
pop
adc
fdiv
push
in
pop
sbb
out
pop
jl
pop
pop
testl
pop
stc
xorb
pop
cmp
adc
sbb
lret
adc
fstpl
cmpsb
sbb
cmpsl
ljmp
andb
mov
mov
jno
je
mov
cld
rorb
test
jb
dec
arpl
add
dec
pop
pop
jbe
xchg
stos
mov
mov
cmp
cmp
out
jnp
or
lcall
insl
push
fimull
push
cmc
into
and
inc
cmp
jp
lret
in
sbb
jnp
and
mov
mov
sbb
scas
xchg
hlt
jl
sub
and
sbb
loope
mov
push
xor
leave
int
dec
lcall
sbb
aam
sti
and
push
out
xchg
cmc
cmp
outsb
mov
sbb
sahf
inc
test
icebp
iret
xchg
push
adcb
cmc
fdiv
and
addr16
jmp
sahf
and
outsl
cmp
jmp
orb
packssdw
test
stos
xchg
outsl
mov
mov
pop
std
add
iret
jge
xor
xchg
xchg
sub
pop
rorb
mov
mov
stc
mov
ret
sub
jecxz
mov
mov
mov
xchg
or
push
insl
call
or
or
aam
pextrw
orb
mov
pop
jl
and
xor
test
pusha
outsb
jp
popa
mov
pop
and
add
popa
xor
mov
ja
iret
sub
push
mov
sbb
mov
inc
ja
sub
mov
hlt
test
inc
sbb
or
enter
cbtw
les
mov
or
cwtl
dec
mov
ds
cmpsl
adc
gs
add
cmc
adc
jno
clc
jo
xchg
fdivs
sbb
xchg
xchg
jge
dec
mov
mov
sahf
loope
dec
jecxz
loop
xchg
mov
fmulp
sbb
pushf
or
addr16
sub
in
xor
dec
inc
into
or
xchg
insl
enter
pop
in
clc
sbb
enter
movsb
xchg
movsb
cs
aaa
scas
add
pop
ds
xor
cmp
mov
fdivp
jl
xor
cmp
dec
loop
adcb
sbb
jnp
into
adc
fcoms
ret
add
jecxz
and
leave
push
pop
pop
push
pop
mov
and
jl
sub
mov
cli
pushl
xor
xor
ljmp
dec
jle
and
cmp
xchg
xchg
data16
imul
repz
or
test
xlat
lcall
inc
dec
fcoml
inc
cs
push
pop
mov
faddl
mov
fwait
push
loop
lret
mov
arpl
in
sub
inc
and
cmp
int
fbld
add
in
stos
jnp
xor
jecxz
loop
pop
sbb
nop
mov
dec
ds
mov
push
addb
fildl
mov
rcl
xchg
ja
imull
hlt
inc
test
or
lock
xor
mov
jne
lret
inc
icebp
mov
sbb
mov
push
xor
mov
push
lret
rclb
mov
out
mov
rolb
cmpsb
jo
push
xchg
outsl
or
dec
pop
xchg
insl
mov
in
dec
pop
scas
lcall
out
cmc
lea
lret
xor
push
jbe
pusha
or
jbe
call
hlt
out
ret
std
push
inc
int
mov
mov
xchg
test
out
inc
shlb
mov
scas
xor
addb
xor
jo
adc
mov
ja
sbb
test
sbb
mov
std
adc
sbb
xor
push
sub
mov
push
sub
push
or
subl
jae
ret
push
out
xchg
cmpsl
mov
aaa
cs
movsl
pop
add
stos
mov
jge
mov
es
push
cmpsl
push
pushf
mov
add
sahf
andl
mulb
add
insb
iret
xor
add
rcr
inc
mov
add
dec
push
push
push
and
iret
pop
popf
in
pop
and
fnstcw
pop
or
fldl
mov
add
enter
jmp
xchg
add
jecxz
movsl
sti
jg
mov
mov
outsb
leave
test
pop
addl
xor
xor
dec
pop
mov
mov
rclb
stc
add
sbbb
mov
stc
popa
xor
jmp
lret
fsqrt
sbb
stos
sub
xchg
or
jmp
shll
scas
rolb
dec
pop
cmc
insb
dec
fwait
idivl
xor
xchg
imul
xor
cmp
dec
jmp
cmovns
cmp
nop
cmp
mov
nop
fistl
jns
jne
sarb
xchg
pusha
in
popa
inc
jl
pop
es
vmread
pop
arpl
outsb
mov
or
or
jbe
enter
gs
lods
sbb
sub
lock
add
sbb
aam
out
pop
enter
test
rcrb
lds
jo
or
shlw
movsb
lods
or
sbb
clc
mov
rcl
stc
xchg
outsb
out
inc
rolb
aaa
adc
movsb
loope
lret
dec
push
fwait
push
jae
cmp
clc
hlt
jecxz
mov
sub
lea
movsb
and
xor
mov
into
adc
test
sahf
aad
push
insl
fstps
fistpl
insl
imul
mov
jp
aad
dec
pushf
inc
pop
push
xchg
cmp
lock
aad
mov
mov
push
cmp
xchg
cli
int
shrl
jp
or
add
push
mov
pop
pop
fcmovne
cmp
push
mov
mov
test
push
ja
pop
jl
lcall
repnz
addb
sbbl
cmpsl
enter
mov
notl
add
add
add
add
add
pop
imul
xor
je
into
jp
mov
mov
and
fsubs
lahf
addl
xchg
dec
xchg
pop
cvtps2pd
cmp
add
mov
push
adc
call
pop
aam
sub
mov
dec
into
push
jmp
ds
sub
fidivrs
or
pop
jg
ja
repz
xor
int3
lock
into
xchg
and
cmpl
cmp
shr
mov
xchg
add
psubsw
xor
fiadds
jecxz
in
cmpsb
in
ljmp
jge
ja
sbb
ret
es
mov
inc
inc
add
xchg
or
or
repnz
push
push
push
lods
and
cmp
sbb
int
pop
pop
into
sub
cmp
xor
js
pop
dec
loope
jbe
pop
pop
mov
negl
outsl
outsl
cs
cs
jmp
cmp
jae
adc
push
pop
xor
jns
xchg
and
mov
cmpsb
adc
xchg
sahf
int
or
cmp
inc
cwtl
pusha
fadds
sub
fiadds
nop
sarl
inc
loopne
bound
inc
inc
adc
xor
lcall
pop
mov
fnsave
xor
popa
and
ds
mov
adc
rcrb
jle
in
pop
arpl
insl
inc
mov
pop
mov
pop
lds
leave
add
jmp
dec
ds
xor
addr16
jg
xor
shlb
add
mov
cmp
push
mov
shlb
test
cmpsb
lods
or
pushf
mov
dec
sbb
js
and
adc
pusha
out
mov
loopne
adc
ficoml
mov
inc
mov
imul
inc
ljmp
daa
inc
dec
pop
mov
mov
sarb
imul
cltd
iret
mov
out
add
xchg
cmp
inc
cmpsb
lds
aam
xchg
mov
add
iret
xchg
movsb
jo
in
mov
xchg
sbb
mov
mov
jge
cmp
cltd
sarl
imul
cs
out
movsl
pop
fstps
out
sahf
xlat
sbb
shlb
xorl
mov
or
aas
push
mov
ja
mov
jp
js
outsl
cmpsb
jp
and
mov
xchg
in
dec
clc
cltd
aam
loope
add
mov
push
push
add
mov
pop
daa
jb
mov
xor
xor
xchg
sarl
push
xor
ss
pop
sti
cmp
shll
or
jns
cld
xor
cmp
stos
mov
int3
jno
push
fdivr
rorb
popa
mov
lds
faddl
push
cld
dec
and
mov
gs
dec
stos
push
and
ljmp
movb
push
or
xchg
push
inc
mov
ret
test
test
xchg
mov
lret
repnz
stos
cmp
push
dec
sub
lods
test
cmp
std
push
cmpsb
cld
pusha
flds
sub
fisubs
fstpl
rol
pop
dec
out
lret
pop
into
js
loopne
fistpll
daa
ljmp
xor
in
lret
mov
push
push
or
ja
or
pop
out
adc
fwait
bound
icebp
mov
add
sub
adc
push
sti
jmp
push
mov
inc
repnz
out
cmpl
movsb
fimull
ss
xchg
testb
push
data16
lahf
lahf
add
xor
cmp
aaa
mov
test
add
test
out
add
add
in
add
lea
mov
in
pusha
jge
rorl
and
aam
leave
adc
xor
push
adc
fnstcw
rorb
add
dec
mov
lods
out
mul
sbb
mov
sub
icebp
out
lea
xchg
rcrb
xor
mov
add
adc
mov
push
xchg
es
mov
inc
icebp
and
call
xorb
jmp
cmpb
xlat
push
inc
add
lock
loopne
add
test
mov
mov
pop
dec
enter
mull
adc
outsl
fcompl
xchg
push
inc
jb
leave
daa
fldl
sarb
adc
or
adc
lds
inc
lret
inc
in
sbb
or
stc
out
xchg
testl
das
jnp
test
lcall
xchg
pop
inc
shll
call
or
roll
int
mov
sub
pcmpgtd
lods
sahf
adc
inc
scas
sbb
scas
sahf
jnp
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
dec
or
mov
add
jno
add
cltd
fists
add
add
add
jg
pushf
cld
lds
mov
cli
aam
aam
jae
push
sbbb
xchg
mov
jns
shll
mov
aad
fwait
add
jo
mov
sub
cmc
dec
xor
adc
fbstp
pop
mov
adc
addb
daa
or
push
scas
mov
pop
pop
or
adc
loope
push
push
int
jno
cmp
fisttpll
or
outsb
inc
addl
lret
sbb
addr16
xor
call
out
insb
xor
rcrl
mov
pop
imul
sbb
popf
xor
stos
pop
insb
dec
and
mov
test
sbb
pushl
mov
mov
inc
jns
call
rcll
sbb
mov
mov
push
outsb
andb
and
lea
xor
in
repz
int3
inc
mov
js
movsb
cwtl
rorb
repz
stos
shrl
pusha
jb
movsb
adc
adc
inc
dec
adcl
adc
cwtl
cmpsl
sbb
daa
outsl
push
push
outsl
imul
lods
sbb
adc
in
sar
adc
mov
and
fstps
and
test
sbb
push
xor
out
int3
cmc
loope
pop
mov
and
fisttpl
or
inc
or
pop
pop
imull
mov
clc
and
mov
test
clc
mov
inc
test
mov
sbb
mov
or
enter
nop
mov
mov
adc
insl
subb
mov
xor
iret
je
stos
dec
cmp
fildl
sarb
call
lcall
inc
push
mov
jns
int
aad
into
fidivl
dec
push
out
test
mov
rep
jmp
pop
dec
out
pushf
dec
or
lds
lock
xchg
imul
in
mov
cmp
imul
shll
test
out
out
dec
mov
dec
fidivrl
pop
add
rep
and
sbb
sbb
stos
outsb
pop
iret
push
cs
mov
scas
inc
mov
mov
adc
aad
popf
dec
rorb
xchg
hlt
clc
hlt
fs
sahf
enter
popa
sub
push
xorb
mov
adc
cmc
inc
fwait
es
xor
loopne
ret
and
outsl
subl
jno
aad
out
jp
and
mov
xor
test
mov
leave
mov
sub
jne
flds
add
fbld
insl
fiaddl
mov
testb
fwait
pusha
jg
clc
adc
gs
pop
jne
jmp
daa
pop
es
fidivl
and
mov
mov
dec
pop
cmp
in
xchg
cmpsb
pushf
xchg
and
xchg
fs
dec
mov
fsts
jmp
je
adc
fadds
std
or
and
shl
push
jno
push
xlat
lods
inc
mov
sti
mov
js
xchg
cmpsl
pop
in
inc
in
scas
mov
pop
add
pop
test
incl
iret
sbb
sbb
dec
fdivrl
inc
jg
dec
nop
cli
mov
jae
xchg
mov
pop
jo
jae
shlb
push
leave
ja
cltd
insl
iret
cwtl
shr
sbb
scas
mov
test
adc
xchg
push
in
push
mov
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
push
xchg
xor
andl
cmp
push
or
popf
xchg
adc
dec
sub
pop
dec
adc
bound
and
xor
into
inc
cwtl
mov
cmp
roll
add
cltd
fists
incl
add
add
cltd
push
adcl
ljmp
push
pop
ja
movsb
mov
cmpsl
cmpsb
cmp
lret
or
in
jno
add
cmpsb
and
std
jno
test
pop
out
test
or
sbb
out
jae
test
mov
test
and
lock
and
fcoms
lods
jmp
sahf
inc
xchg
mov
repnz
pop
push
jmp
icebp
pushf
xchg
adc
sbb
ss
sarl
jmp
jbe
sbb
sbb
adc
mov
jne
pusha
cmc
mov
repnz
jno
xchg
cld
adc
mov
or
loop
dec
std
imul
mov
fists
incl
add
add
mov
push
js
iret
leave
ljmp
mov
cld
cmpsb
adc
sbb
je
add
inc
jno
mov
sbb
loopne
mov
mov
jns
enter
lock
mov
sti
ss
aaa
push
pusha
jbe
add
stos
outsb
jae
scas
cmpsb
in
mov
mov
sahf
call
xchg
lds
scas
cmp
into
mov
jne
xchg
movsl
enter
stos
nop
fistpl
cmc
outsb
dec
mov
cmp
outsb
ss
xchg
outsl
jl
clc
sub
add
adc
cs
nop
stc
cmpsb
cmp
into
pushf
add
add
incl
add
add
jne
fwait
lret
call
pop
sub
mov
sub
adc
icebp
mov
jno
xor
inc
sbb
inc
insb
aam
push
movsl
aas
fldl
xchg
icebp
icebp
adcl
lcall
and
mov
pop
adc
rclb
inc
sbb
psllw
dec
push
pop
xor
icebp
dec
rorl
mov
or
mov
inc
pop
call
cli
lods
xor
adc
cli
ljmp
jmp
xor
movsb
inc
add
movsl
lahf
cmp
cli
ljmp
xchg
divb
cmp
mov
or
push
repz
ret
add
add
add
add
add
add
xor
xchg
divb
xchg
xrelease
and
enter
add
lds
flds
jno
das
popa
jg
xor
xchg
push
adc
lds
into
push
sbb
scas
push
lcall
xchg
lds
aaa
push
mov
leave
ret
jae
add
mov
scas
mov
gs
xlat
test
shl
cmp
push
test
cmpl
rcrl
sub
repnz
or
jb
in
loope
sub
int
inc
pop
adc
cld
jnp
into
sbb
les
dec
stc
int3
sub
mov
test
movsl
pop
xchg
jl
jmp
or
dec
inc
jo
xchg
hlt
into
inc
decb
out
or
int
dec
repz
mov
std
les
sub
mov
test
fidivrl
in
aas
push
out
lea
das
push
and
cmp
and
xor
fmull
pop
dec
insl
push
pop
ret
mov
call
orb
and
and
sbb
lds
jbe
sub
je
dec
fisubrl
imul
scas
mov
adc
sub
adc
xorl
loop
xor
xor
add
push
insb
popf
je
gs
or
lahf
cld
mov
push
dec
adc
loope
pop
movsb
std
push
imul
subb
repnz
notl
jmp
xchg
cltd
pop
xor
add
mov
push
xchg
fwait
js
jecxz
shrb
sbb
add
xchg
add
scas
das
mov
cmc
sbbl
jnp
xchg
arpl
xchg
fstpl
mov
jg
out
in
inc
fldcw
cmc
fimuls
mov
pop
mov
and
xor
lea
roll
repnz
cmp
inc
subb
lret
lahf
jmp
cwtl
and
les
cmpsl
sub
push
sahf
into
mov
ss
cmp
lea
sbb
or
dec
mov
daa
mov
xchg
xchg
mov
push
lret
fistpl
xchg
dec
xchg
aas
adcl
push
sub
xor
test
aam
cs
aas
dec
sbb
xor
sti
mov
add
fld
mov
mov
xor
dec
jno
sti
add
fcomp
and
or
sub
pop
or
pop
aas
sbb
cmp
pushf
movsl
aas
popf
mov
mov
add
pop
inc
inc
lds
fisttpl
sub
scas
data16
mov
mov
or
das
into
cmpsb
repnz
shlb
pop
stc
shlb
dec
loop
ljmp
xchg
mov
lock
mov
pop
aas
and
aas
std
aad
dec
clc
imul
dec
xchg
jno
lahf
sbb
xor
adc
ds
mov
sahf
xchg
or
mov
dec
pop
mov
sbb
xchg
in
sti
sub
and
iret
in
ret
insl
add
cmpsb
stos
mov
jbe
pop
sub
insb
repnz
in
mov
aas
mov
xor
jge
pop
stc
mov
pop
pop
xor
punpckhwd
lcall
mov
or
fcmovbe
aad
js
mov
ja
fldl
and
sbb
pop
or
jg
or
iret
mov
xchg
aam
arpl
lret
mov
imul
push
imulb
inc
cld
xchg
dec
stos
jnp
pusha
pop
jle
xor
or
jns
leave
xchg
inc
or
jg
enter
mov
dec
inc
lahf
int
sbb
test
add
cltd
fists
add
add
add
rcrl
mov
inc
sub
movl
xchg
loopne
enter
jle
decl
cmc
popf
movsl
dec
xor
in
in
mov
dec
xchg
shrl
add
xchg
xchg
cli
jae
mov
push
popf
pop
es
in
inc
lea
xor
pop
xor
mov
xchg
sub
fbstp
aas
push
call
add
add
jp
dec
inc
hlt
pop
sub
test
clc
cmp
std
or
push
sub
xor
sub
jns
or
add
cltd
leave
adc
jle
xchg
and
inc
stos
push
repz
icebp
lods
xchg
push
jmp
test
stos
ret
ret
xchg
into
push
lock
popa
or
lds
jae
push
jns
jp
mov
ds
dec
inc
lcall
mov
out
enter
and
adc
jmp
sbb
cmpsb
cmp
jno
mov
mov
add
sub
lret
cmpsl
cs
push
arpl
xor
mov
mov
mov
into
stos
hlt
or
inc
mov
sub
pop
inc
jnp
ret
cs
or
xlat
in
xorb
mov
and
pop
add
mov
daa
shll
lods
sbb
dec
shlb
aam
pop
pop
leave
xchg
jbe
inc
dec
daa
sbb
xor
add
cltd
fists
add
add
add
cmp
jbe
pop
stos
xlat
test
loop
aad
push
mov
sub
sub
imul
sarb
cmp
repz
sbb
aad
pop
mov
std
lret
mov
pop
pop
repz
mov
pop
sub
jns
rcrb
ret
mov
sbb
sbb
ljmp
mov
out
movsb
lods
dec
xor
es
fildl
loopne
mov
pop
fcoml
cwtl
ljmp
test
das
add
cmp
test
inc
lods
sbb
mulb
clc
movsb
call
je
ja
push
cmp
and
pushf
stc
std
ljmp
arpl
ficoms
repnz
sub
loope
mov
ss
in
cmp
dec
std
pop
test
pop
fiaddl
fldlg2
push
inc
out
fs
inc
cmpsl
sbb
fadds
jmp
into
lods
adc
xchg
or
mov
sbb
push
mov
leave
inc
dec
mov
xor
xor
lea
daa
cmpsb
lea
and
ds
adc
lcall
mov
lock
pop
sbb
jb
rolb
push
pop
test
test
mov
gs
data16
popa
pop
int
adcb
inc
adc
mov
aam
and
jnp
loope
and
push
testl
jnp
mov
xchg
fadds
insb
add
sbb
and
lret
mov
insb
cmc
fs
xchg
rorl
jno
aaa
cmp
out
mov
jle
cwtl
inc
xchg
gs
enter
inc
mov
shrl
inc
and
mov
and
js
shlb
jg
pop
repz
dec
incb
aam
int3
dec
jl
sbb
xchg
stos
lock
jno
mov
and
fwait
jo
mov
sub
lcall
loope
mov
jnp
or
push
mov
fmull
jp
inc
xor
and
dec
cmp
and
ljmp
cmpsb
xor
lcall
popa
adc
jg
or
fstl
xor
aas
jp
jb
shr
push
mov
xor
mov
outsl
pop
add
mov
pop
loope
es
inc
hlt
adc
ja
jns
out
inc
aaa
rolb
icebp
cmc
mov
ss
adc
lret
or
mov
sub
fs
dec
jecxz
mov
xor
or
cs
or
imul
test
fnsetpm(287
cmc
scas
mov
adcb
jb
sub
je
xchg
fwait
xor
fs
pslld
add
int3
inc
jle
mov
pop
popa
popa
and
push
cmp
das
clc
repnz
cmpsb
pcmpgtb
dec
cmp
mov
xchg
rolb
fisubl
mov
fs
mov
inc
movsl
jge
shll
shlb
sub
pop
test
jns
or
add
add
add
add
add
nop
or
frstor
pushf
xor
sbb
push
xchg
add
xor
cmp
stos
insb
not
das
add
or
fisttpl
sbb
test
and
adc
mov
call
inc
lcall
fisubrl
int
mov
mov
decb
push
ja
mov
out
sbb
test
fbstp
mov
and
ljmp
mov
or
push
push
cmpl
jbe
loop
call
fcompl
sbb
sub
xchg
push
push
cmc
pusha
ljmp
rorb
jb
out
divb
push
loope
or
jbe
xchg
mov
popa
xchg
dec
push
cli
add
aaa
ret
aad
mov
imul
aas
inc
mov
adc
inc
mov
mov
jns
pop
scas
mov
int
out
mov
repz
orl
je
scas
out
cltd
push
pop
xchg
xor
xchg
cmp
ljmp
push
popa
int3
sub
outsl
sub
cmp
jae
ficompl
xchg
mov
cmpsb
or
jb
das
jb
sbb
sub
jp
jns
sub
jo
push
mov
adcb
or
inc
fdivl
jae
mov
add
pop
or
xchg
pop
es
xor
push
sub
bound
int
pop
and
stos
icebp
leave
stos
adc
lods
ret
and
data16
mov
cmp
test
repz
pop
nop
mov
nop
push
cmp
aad
lea
mov
hlt
lds
ret
mov
jle
addr16
xor
loope
dec
shrb
mov
sub
ror
dec
add
imul
pop
mov
test
cld
dec
pop
jbe
lret
and
add
mov
add
or
inc
add
mov
xor
imul
shlb
aad
xchg
mov
xchg
fwait
std
cwtl
aas
aad
mov
mov
jae
in
sbb
jecxz
cmp
push
lds
ss
inc
jb
pop
subb
mov
bound
mov
mov
dec
or
js
dec
sub
into
mov
adc
ret
mov
cmpsb
clc
xchg
das
fs
and
mulb
into
mov
stos
loop
cmpsb
dec
cmp
pop
mov
mov
pop
icebp
and
mov
in
xor
push
push
inc
in
test
lock
mov
or
movsb
in
push
or
sahf
aas
into
inc
mov
mov
aad
push
shrl
cltd
sbb
mov
and
mov
or
dec
mov
add
idivb
ret
out
and
addr16
lods
lds
push
jecxz
int3
loopne
or
icebp
mov
testb
xchg
dec
cmp
sbb
je
sub
sub
mov
shrb
mov
movsb
stc
js
and
mov
stos
jmp
adc
int3
inc
scas
loop
or
pop
jae
push
dec
mov
mov
push
sub
add
pop
xchg
push
add
pop
xchg
cmpsb
out
aas
imul
or
test
outsl
xchg
sub
loopne
xor
ja
cmp
mov
adc
mov
ffreep
xchg
jae
adc
cmp
xor
fstp
push
push
sarb
insb
neg
sbb
pop
or
or
jbe
in
dec
fisubl
dec
test
jle
enter
jmp
pop
shl
enter
jae
test
adc
cld
dec
int
dec
aaa
xchg
inc
stc
fnsave
sub
push
adc
pop
scas
xor
outsb
lods
insl
adc
cmp
lea
mov
sti
mov
xor
mov
sub
sbb
push
push
and
sbb
loopne
lret
in
jno
data16
mov
insb
icebp
inc
sti
dec
sbb
add
ja
outsb
mov
sarb
adc
mov
lret
and
jb
js
movsb
pop
cmp
mov
push
scas
push
shrb
cli
ss
out
and
frstor
push
cmp
mov
sub
stc
xchg
pop
or
pop
jbe
adcb
out
adc
daa
call
cmp
out
xorb
adcb
mov
xor
push
out
or
push
int
test
aas
and
loopne
dec
nop
or
xor
adc
imul
and
sbb
xchg
sti
xchg
lds
mov
mov
int3
sbb
sbb
fcoms
mov
jnp
mov
test
push
jmp
fisubrl
xchg
arpl
sub
imul
bound
shlb
sub
xor
cmp
mov
push
push
test
shlb
push
inc
add
jl
sbb
mov
push
clc
test
pop
out
movb
sbb
pop
jno
adc
enter
jns
and
rolb
cmp
mov
sbb
rcll
lea
stc
pop
jb
jnp
pop
mov
lret
adc
and
sbb
dec
mov
xor
lret
shll
xchg
dec
dec
popf
adc
in
mov
stc
push
xor
inc
je
push
pop
adc
dec
fdivrs
mov
mov
das
movsb
repnz
sbb
mov
leave
adc
mov
repz
inc
cmp
inc
mov
jae
mov
mov
lret
adc
in
inc
sbb
lea
mov
sub
stc
frstor
popa
cwtl
jnp
filds
frstor
adcb
outsb
cmc
mov
gs
aaa
jne
mov
hlt
pop
cmp
mov
sbb
xlat
mov
enter
loopne
or
push
stos
sbb
jp
pop
fs
sahf
lock
decl
mov
or
fidivl
inc
xchg
lret
data16
dec
and
sti
mov
add
mov
scas
insb
lret
sbb
xchg
fimuls
dec
stos
or
in
xchg
fsts
insl
enter
lret
insb
lret
inc
testb
adc
scas
in
jb
hlt
lahf
fldenv
repnz
int
mov
sbb
hlt
fwait
dec
ret
fimull
sbb
mov
push
pop
sub
int
ffree
data16
sub
jmp
xor
loop
jecxz
mov
sbb
in
pop
sbb
pop
adc
mov
xchg
mov
aaa
xor
call
mov
addr16
cmp
cs
in
mov
out
rorl
aad
pmaxub
cs
cs
dec
xchg
cwtl
cmc
aam
lods
cmp
mov
xor
and
and
lods
inc
outsb
arpl
movsb
adc
fisttpl
pop
jns
dec
sub
ljmp
xchg
mov
lahf
stos
sub
pushf
loop
mov
repz
gs
xchg
pop
push
mov
cmp
inc
test
jno
into
lret
xchg
imul
xor
xlat
mov
enter
xor
sub
mov
and
xchg
stos
adc
mov
push
aam
lds
jle
add
fdivl
mov
mov
cmp
mov
cmpsl
pop
dec
mov
xor
mov
sub
lods
push
xchg
inc
ljmp
not
lock
daa
and
push
call
das
fnsetpm(287
adc
inc
stos
enter
lods
in
ret
cmpsl
jecxz
adc
push
test
movsl
xor
aaa
dec
and
cltd
fists
incl
add
add
xchg
cmp
pop
stos
imul
cld
pop
stos
dec
and
cmp
les
mov
mov
ss
add
ficoms
xchg
cmp
mov
mov
or
test
in
call
repz
or
repz
and
mov
mov
cmp
xchg
hlt
push
mov
add
pop
add
add
add
add
add
add
fisttpl
lret
lcall
sti
cmp
mov
lock
inc
lcall
stos
mov
loop
mov
mov
lods
xchg
mov
mov
leave
subl
dec
mov
pop
int3
push
cmc
cmpsb
adc
loop
cmp
or
jg
flds
add
cltd
fists
incl
add
add
pusha
mov
cmc
mov
lock
movsl
adcb
enter
dec
or
ss
push
xchg
cli
and
mov
call
jg
rorl
mov
inc
xor
fwait
leave
xchg
ret
popa
add
add
decl
loopne
jecxz
das
dec
mov
pushf
lret
adc
stos
cmp
out
sub
sbb
popa
xor
rcr
iret
and
mov
das
outsl
push
inc
call
push
add
mov
dec
push
das
fiaddl
call
push
xor
jbe
dec
sarl
outsb
lock
cmp
mov
jecxz
enter
leave
cmp
ja
inc
dec
mov
and
cmp
push
cltd
pop
mov
dec
mov
aaa
pop
mov
cmp
and
loope
push
push
repnz
enter
sti
push
adc
lods
hlt
and
in
insl
cs
xor
fimull
push
dec
pop
in
adc
sub
in
dec
insl
lods
cwtl
in
icebp
add
leave
mov
inc
fstl
mov
icebp
jae
data16
leave
jbe
xchg
or
loopne
jb
les
mov
out
dec
fdivrp
out
sbb
jp
lret
lcall
cmp
add
fcmovnb
int3
dec
xor
fadds
mov
xchg
push
push
and
repz
inc
in
lea
leave
push
fadds
stos
xlat
mov
xor
ss
int
xor
stc
mov
mov
cmp
xchg
sub
mov
fistps
popf
cmp
push
loopne
clc
sahf
jnp
fdivrs
mov
ret
lds
sbb
add
cltd
fists
incl
rolb
and
sub
xchg
dec
pop
scas
jp
inc
dec
pop
lahf
addr16
outsb
mov
fnstenv
or
pop
stos
sbb
jae
jle
jecxz
mov
pop
fimuls
mov
test
pop
scas
cmp
sbb
cmpb
xor
fidivrs
jl
mov
adc
sub
das
fstpl
gs
call
sbb
mov
jp
jno
movsb
push
frstpm(287
ss
push
pop
jmp
roll
mov
das
ret
cmp
push
jo
jne
cmp
cmpsb
fstp
das
cmc
adc
jnp
pop
inc
push
inc
mov
loopne
scas
imull
js
mov
inc
ss
aas
or
adc
nop
scas
or
lds
unpckhps
jl,pt
iret
sahf
nop
push
sarb
clc
lahf
dec
inc
insl
sti
mov
sbb
mov
dec
fbld
sub
xlat
push
movsb
dec
rorb
adc
xchg
imul
mov
andb
jne
or
push
jne
and
inc
xor
dec
mov
lods
in
cmp
push
inc
pop
adc
jae
leave
jl
fildll
xor
lock
ret
push
pop
push
shl
test
sti
push
insb
fimull
cmpsb
mov
lds
cwtl
sub
enter
and
dec
mov
out
cmp
or
cwtl
in
push
scas
cmc
xor
xor
out
lret
lret
or
sti
sub
mov
aaa
lcall
push
inc
jbe
mov
mov
jnp
xor
xor
dec
inc
push
data16
stos
sti
mov
or
and
inc
arpl
mov
inc
mov
and
dec
mov
push
mov
pop
or
cmpsb
dec
scas
addr16
or
ffree
mov
push
adcb
scas
out
push
jb
push
bound
pop
xchg
stc
xor
sbb
xchg
fwait
cmc
mov
lcall
mov
ds
fs
aad
addr16
rcll
repz
out
adc
idivb
sub
test
mov
sbb
sub
loopne
inc
xchg
and
jmp
or
lcall
jecxz
cmp
dec
pop
or
lods
cmp
lea
mov
aas
mov
js
push
and
hlt
addr16
jg
cs
daa
addl
mov
lds
adc
addr16
xor
out
jmp
es
cmp
cmc
mov
mov
dec
pushf
test
cmp
leave
pop
inc
sarl
popf
mov
scas
and
xor
roll
aaa
fsub
mov
movsl
adc
inc
fsts
es
push
cmpsb
cmpsb
or
mov
mov
mov
dec
stc
fcmove
gs
hlt
inc
pop
inc
mov
aam
adc
mov
daa
push
add
cwtl
push
lds
add
cltd
fists
incl
xor
mov
cwtl
les
add
fld1
push
rorl
jno
inc
xchg
leave
gs
pop
xor
imul
mov
mull
xor
adc
int
or
or
hlt
pop
xlat
pushf
dec
pop
pop
xchg
cmp
mov
xchg
pop
aam
mov
sub
xchg
scas
fmuls
nop
ds
xchg
pop
std
xchg
test
stc
push
or
aam
ret
and
jge
out
mov
cs
adc
movsl
addr16
and
fidivrl
cmpsl
and
mov
inc
inc
into
xchg
lret
sarb
ljmp
jmp
cmp
sbbl
sub
sub
pop
gs
cmp
dec
add
sahf
cmpsl
xchg
adc
insb
shll
jmp
xchg
adc
mov
cli
sbb
loope
nop
cs
dec
out
cmpb
nop
jno
dec
inc
xchg
cli
mov
and
inc
adc
mov
ret
out
enter
cmp
xchg
xlat
sub
inc
pop
push
and
adc
mov
push
xor
out
pop
je
jae
loop
jb
or
ds
lds
inc
ret
rcrl
xchg
mov
icebp
sub
js
jns
lahf
mov
idivb
or
out
clc
ja
jno
jbe
push
inc
add
add
add
incl
add
add
and
and
jl
shl
xchg
cltd
mov
into
notb
es
lock
and
sahf
mov
sub
enter
rcl
xchg
call
cmc
xlat
rorl
dec
pusha
cmp
aas
out
pop
hlt
jno
jl
stos
sub
outsl
sub
bnd
ljmp
pop
fbstp
mov
scas
es
mul
in
aaa
das
pop
or
dec
sti
mov
dec
rolb
pxor
xchg
sbb
roll
cltd
insb
imul
fstps
add
jmp
rorl
or
repz
or
repz
or
repz
or
repz
or
repz
or
repz
or
add
add
add
