std
call
in
sub
lea
push
xor
push
push
pop
cld
call
pushl
je
xor
jmp
push
push
push
push
push
xor
mov
or
cmp
je
lea
push
push
call
add
fistpl
data16
and
add
push
pushl
lock
jns
adc
adc
pop
imul
lock
cmp
in
add
pushf
or
inc
inc
add
jo
pop
std
pop
mov
mov
add
fs
push
xor
mov
push
dec
mov
in
sub
mov
jle
push
push
push
aaa
inc
and
cli
push
or
mov
outsl
outsl
xor
pop
push
mov
push
outsb
loop
pop
sti
pusha
test
push
sub
mov
pop
mov
sbbb
js
sbb
push
push
gs
push
sub
cs
jmp
outsl
xor
push
je
mov
cmp
mov
push
mov
adc
popf
mov
cmp
shll
mov
idivb
jne
and
add
test
pop
stos
lea
adc
out
fucomi
mov
push
mov
jne
lahf
inc
clc
lret
jge
add
popa
push
push
adc
mov
push
popa
scas
mov
mov
push
sbb
pop
inc
add
scas
js
inc
fs
rolb
in
push
pop
cmp
call
imul
sub
fisttpl
dec
inc
pop
mov
test
push
out
lods
push
mov
push
push
jbe
in
lcall
mov
dec
inc
and
adc
in
push
bnd
mov
xor
adc
mov
mov
imulb
std
in
add
negl
add
in
call
fwait
ljmp
pop
add
inc
cmp
icebp
xor
push
loopne
bound
push
out
cmp
sub
loopne
add
jge
pop
in
fdivr
adc
pop
fmull
jle
adc
in
rcll
mov
pop
and
push
cwtl
jmp
inc
mov
int
xchg
popf
inc
icebp
push
push
push
pop
jl
or
jecxz
ja
push
rolb
mov
push
dec
mov
jg
pop
enter
inc
or
nop
mov
xor
adc
push
pop
lea
loop
push
test
mov
add
or
push
cmp
jmp
dec
sti
cli
inc
cmp
mov
inc
insb
inc
sbb
adc
sbb
xor
sbb
sti
add
in
dec
sti
jle
int
mov
mov
ljmp
mov
sbb
jb
shll
lock
xlat
xor
mov
add
xchg
push
fs
or
push
jmp
idivb
push
popf
in
bnd
daa
clc
cld
in
imul
mov
scas
das
popf
mov
enter
mov
test
push
ror
mov
fwait
push
lods
xor
sub
cmpb
dec
adc
fucom
cmp
push
and
jmp
mov
add
push
pop
jmp
push
pop
cmp
or
pop
fsubr
or
outsb
adc
mov
hlt
aad
sub
mov
mov
mov
movsw
arpl
stos
mov
jl
xlat
inc
mov
pop
xor
stos
lea
adc
jmp
push
or
cmpsl
jo
adc
mov
mov
mov
popf
icebp
shl
mov
aas
cmp
mov
into
pop
lret
sti
loope
daa
mov
add
in
sti
lret
lahf
mov
mov
cmp
jne
mov
mov
cmp
je
mov
dec
add
add
ret
mov
add
pop
xor
ret
lods
loopne
pop
or
test
push
rolb
ret
mov
pop
mov
and
cmp
and
cli
cmp
pop
sti
add
mov
push
fmull
dec
mov
adc
stos
mov
add
roll
in
test
addb
xor
lret
in
loopne
idivl
push
sub
outsb
pop
mov
mov
fdivrs
mov
ds
jnp
addl
xor
and
cltd
xlat
pop
idiv
xorl
cli
or
mov
mov
adc
add
jg
fwait
rolb
and
push
push
dec
jnp
adc
inc
test
cmpsl
push
test
inc
jae
out
pusha
cwtl
push
or
imul
insb
repz
nop
shll
dec
pop
cmp
iret
mov
sub
sub
outsl
pop
test
clc
add
add
lea
cltd
movsb
mov
push
or
jl
dec
inc
es
sbbb
mov
daa
inc
es
int3
mov
in
mov
ja
adc
gs
jbe
mov
push
push
or
or
in
imul
mov
pop
pop
pop
push
jb
lahf
cmp
cmpl
jne
pop
out
pop
inc
or
add
movb
and
enter
cmp
fdivl
scas
ret
sub
lret
xchg
rcll
add
rclb
icebp
lods
sbb
mov
jne
or
das
iret
push
sub
pop
lea
pop
arpl
lock
aaa
mov
mov
movsl
cmp
pop
add
adc
clc
je
mov
loope
lock
pop
sub
mov
inc
das
stc
push
push
fwait
divl
cld
sti
pop
cmpb
sbb
daa
lock
and
testb
mulps
push
data16
inc
pop
dec
or
mov
das
dec
add
mov
gs
cmpl
xchg
sub
jge
inc
pusha
cs
and
mov
test
fistl
adc
cmp
inc
dec
xor
xchg
adc
sbb
and
test
xchg
addl
jne
pop
jmp
orl
js
jge
ret
add
pop
push
xlat
outsl
and
jns
sub
jmp
out
push
xchg
in
xchg
push
pop
push
adc
clc
jmp
dec
sbb
loope
sub
adc
push
fucomp
dec
in
and
daa
mov
std
xchg
inc
ss
dec
imulb
jl
test
roll
adc
push
popa
inc
cltd
push
jl
jmp
and
pop
inc
adc
adc
push
enter
jns
dec
or
adc
mov
pop
lods
dec
ja
cli
cmc
add
mov
and
push
shr
cmpsb
in
sbb
pop
aaa
shr
dec
pop
pusha
leave
out
out
add
mov
and
lods
loope
sub
out
int3
mov
test
inc
pop
dec
mov
in
xor
es
dec
repnz
push
dec
push
mov
mov
icebp
pusha
shrl
and
imul
imul
pop
add
adc
add
adc
or
mov
in
fs
jnp
or
mov
movsb
mov
dec
dec
inc
popa
push
jmp
test
dec
add
and
or
int
lock
sbb
into
xor
rcrb
orl
in
dec
xor
dec
in
xchg
or
sbb
in
in
in
or
enter
inc
cld
inc
repz
mov
int
inc
addr16
mov
mov
enter
out
or
sbb
push
js
stc
fsubr
jge
paddusb
orl
sub
or
cmp
adc
adc
push
gs
push
push
dec
and
push
stos
sbb
mov
pushf
scas
rcrl
adc
push
cmp
dec
loopne,pn
loop
push
sub
xor
or
xor
jns
adc
jbe
clc
in
je
notb
js
test
add
add
in
sub
sub
adc
mov
and
or
add
and
xor
icebp
push
jmp
fildl
jecxz
mov
jg
lret
fldt
mov
add
sysret
jb
or
push
jmp
lock
icebp
and
mov
push
cmp
and
insb
stos
jno
mov
inc
or
or
mov
hlt
enter
push
mov
push
out
hlt
popf
or
sbb
cmp
mov
mov
popa
or
jle
ss
pop
dec
pop
jl
mov
mov
cmpl
xchg
rorb
or
jge
add
or
mov
fwait
push
fucomip
jns
pop
pop
push
mov
sbb
mov
xor
call
jmp
push
sbb
sub
dec
in
lds
add
les
ffree
les
in
jle
add
push
mov
ljmp
dec
xor
lock
and
int3
mov
les
xor
xor
cltd
and
fs
ja
xor
movl
sbb
inc
add
push
mov
aam
mov
and
push
fildl
ror
cmp
je
push
ljmp
test
mov
cmp
jae
les
lock
hlt
dec
push
neg
pushf
adc
jnp
in
popa
enter
and
andb
push
pandn
fnstsw
test
xor
inc
in
sub
jnp
jl
jne
adc
push
loopne
xor
inc
xchg
add
dec
inc
and
mov
cmpsl
fsubrs
les
pop
lret
decb
out
add
mov
push
dec
push
orl
sar
and
cmp
push
in
mov
inc
repnz
lock
lock
xor
dec
lock
push
mov
loop
push
sub
xchg
fadds
or
add
imul
push
cmc
pusha
cli
add
test
cmpb
adc
pop
pusha
insb
roll
add
mov
adc
aad
loope
fldl
fimull
xlat
pop
push
push
sar
jne
xor
jmp
inc
lahf
jns
fdivs
mov
or
fs
push
sahf
mov
call
andl
bound
leave
cmp
pushf
inc
std
out
mov
cld
or
out
sub
sbbb
adc
je
mov
adc
sti
imul
lahf
arpl
fdivr
mov
inc
jg
sbb
push
mov
test
add
and
xchg
in
or
jns
mov
xor
daa
or
cli
push
cli
inc
mov
push
cltd
jns
data16
xor
cld
lods
or
cmp
mov
mov
dec
aaa
pop
inc
pop
pop
nop
mov
rcr
xchg
fsubl
jmp
nop
pop
and
xchg
push
xor
pop
push
scas
xlat
lret
cmp
pop
and
roll
in
jnp
fs
xchg
push
inc
out
in
mov
fwait
xchg
mov
cmp
jl
mov
jbe
int3
mov
push
mov
push
jcxz
repnz
xchg
xor
and
xchg
in
lock
mov
in
insl
es
adc
test
sbb
mov
push
xlat
scas
add
fisttpll
mov
inc
add
cmp
pop
test
xor
sbb
bswap
or
mov
mov
and
pusha
mov
mov
dec
test
cmp
loopne
mov
and
cmp
mov
dec
mov
and
push
push
pop
jnp
xchg
int
enter
xchg
push
imul
repz
sbb
dec
cld
pop
inc
pop
add
push
popf
fmull
in
imul
cmpsl
jl
rcrl
dec
mov
cld
aam
jecxz
int
nop
movsb
fisttpl
and
cmp
repnz
clc
or
jmp
sub
lahf
sub
pop
iret
add
sub
mov
inc
and
mov
add
loope
jns
inc
sub
lds
nop
in
mov
cwtl
jecxz
in
push
push
jb
push
cmp
bnd
lods
notl
test
repnz
fisubrs
imulb
adc
test
or
je
dec
inc
pop
xor
and
cmp
lock
mov
jne
jne
push
and
jbe
mov
aad
adc
pop
arpl
add
dec
addl
test
cwtl
mov
xor
lock
testl
push
or
outsb
mov
xchg
mov
add
arpl
xchg
push
push
push
mov
sbb
and
xor
popa
xchg
cmpsl
movsl
gs
rclb
cmp
mov
sbb
out
incb
xor
sbb
call
xor
popa
mov
xchg
mov
add
shl
hlt
addr16
sbb
std
inc
popf
loop
xor
hlt
dec
mov
sbb
out
and
push
xor
jg
jl
je
cmc
xlat
incl
add
mov
cmp
jne
xor
loopne
mov
jae
sub
mov
imul
daa
push
xor
inc
fcomp
dec
xchg
insl
adc
rcrb
rcr
or
je
mov
cmp
pushf
popa
call
imul
or
sbb
jg
data16
mov
shlb
lods
nop
sub
jecxz
mov
xchg
lock
jne
jno
jl
pcmpeqb
subl
lods
loope
hlt
sbb
test
mov
fs
cmpsb
imul
pop
jmp
add
sti
mov
xorb
mov
dec
mov
lea
push
xor
mov
cmp
hlt
repnz
jle
mov
sub
nop
jmp
in
add
iret
jnp
pop
shlb
stc
cmp
leave
aad
xor
cs
mov
pop
loope
ss
cmpb
fsubs
dec
dec
fmuls
test
je
xor
orps
aam
pop
inc
repz
ja
or
mov
add
or
jle
movsl
jecxz
in
push
and
adc
outsl
dec
adc
or
jne
push
icebp
mov
jg
rorb
testl
js
push
sbb
and
rcrb
inc
mov
xor
cmp
lock
cltd
and
add
clc
or
fidivl
mov
dec
mov
inc
adc
push
mov
mov
test
sub
adc
push
adc
mov
idivl
fbstp
pop
insb
add
cmpsb
push
mov
rolb
add
add
cmp
fiaddl
mov
mov
cmp
add
andb
push
cmpl
xchg
inc
movsb
sub
jge
aas
mov
push
xor
pop
mov
adc
repz
inc
sbb
fs
inc
div
scas
clc
mov
inc
inc
adc
xchg
mov
or
xchg
inc
loope
cmc
push
xor
imul
popa
xchg
dec
push
inc
sub
dec
test
xchg
add
xchg
xchg
popa
bnd
std
mov
jl
mov
sbb
mov
push
inc
cmp
sub
sbb
mov
incl
add
fnstcw
sbb
inc
aaa
cmpl
push
popa
push
fcoms
and
mov
mov
sub
movsl
pushl
ljmp
enter
es
ja
inc
and
adc
addb
push
inc
es
movsb
not
sub
cmpsl
cmp
loopne
pop
push
jbe,pn
popa
pop
in
pop
call
loope
gs
push
push
scas
push
fstl
dec
rorb
call
mov
or
lcall
push
push
jle
pop
and
loope
add
ficoml
rorb
sub
add
loopne
push
or
clc
aas
fimull
ja
pop
hlt
je
cmpl
mov
lock
cmp
test
pushf
clc
jbe
sbb
xchg
out
push
sub
and
je
loope
popa
les
leave
mov
rcll
es
les
pop
cmp
lock
clc
add
inc
jb
mov
mov
cmp
push
fwait
in
or
sbb
ret
cmp
mov
push
lea
jns
or
inc
sbb
sbb
pop
shlb
and
cmp
add
mov
sub
adc
out
or
push
push
outsb
mov
stc
xor
pop
lock
inc
sub
push
mov
pop
jbe
and
paddw
and
decl
loope,pn
lock
jl
pop
in
pop
add
faddl
icebp
mov
fs
pushf
push
lahf
pop
loop
cltd
cmp
clc
int
adc
ja
in
cli
mov
std
mov
sub
mov
roll
gs
loop
or
jb
mov
push
bnd
xchg
sub
lret
and
leave
mov
jbe
fists
jmp
sub
popa
pop
pop
sbb
js
or
mov
stos
add
jbe
jnp
lods
imull
push
sbb
int
pop
pop
das
sbb
pop
or
xor
push
sub
clc
xchg
jne
cmpsl
add
test
mov
outsl
push
push
cltd
cltd
push
inc
lods
mov
lods
xlat
sbb
add
stos
in
lahf
dec
xchg
mov
mov
je
sbb
gs
orl
mov
lock
sub
popf
jmp
add
push
adcl
pop
add
jae
xor
mov
mov
add
cld
push
daa
xchg
pop
test
xor
loope
xor
push
in
and
pop
jle
sbb
sub
lret
daa
or
popa
pop
jb
sub
clc
jnp
fucomi
xchg
nop
in
ja
xor
push
or
jl
xor
push
push
fsubl
insb
mov
pop
sub
sti
dec
adc
cmp
dec
cmp
jno
test
push
inc
lea
out
sahf
xor
rclb
mov
addl
or
inc
add
mov
es
clc
jmp
mov
insb
xor
push
mov
test
outsl
lods
iret
sbb
jne
mov
sub
pusha
xchg
and
cli
pushf
push
shr
add
jp
and
xchg
jb
or
mov
jmp
dec
cwtl
xor
push
mov
jmp
inc
aaa
fldenv
mov
sti
add
int
daa
add
push
mov
jmp
pop
cs
movsl
sbb
sti
adc
sahf
cld
add
and
sbb
mov
jl
mov
fldl
cmp
in
xor
push
jp
daa
push
pusha
daa
jne
out
js
popa
mov
and
scas
ret
ljmp
xchg
je
pop
imul
xor
or
test
inc
mov
andb
push
add
sub
mov
insb
add
in
inc
push
pusha
test
pusha
sub
sbb
test
lods
push
lods
sub
movsb
loop
dec
adc
hlt
inc
je
xchg
imul
pop
test
sarl
testb
je
dec
fists
leave
inc
xor
add
xchg
cmp
add
push
inc
xchg
lods
push
add
and
mov
jecxz
jle
add
cmp
or
inc
jb
test
sbb
loopne
test
sbb
xchg
mov
lea
nop
inc
outsb
push
push
push
inc
dec
xchg
lea
xor
prefetch
mov
out
test
jb
xor
call
xchg
inc
xchg
in
clc
push
add
or
xor
in
lds
aas
xchg
nop
inc
fstps
insl
add
imul
adc
in
cld
std
shlb
mov
pop
pop
pop
xchg
mov
sub
std
push
outsl
mov
packuswb
fprem
imul
std
in
imul
jns
js
mov
testl
dec
pop
dec
pop
je
push
adc
add
push
test
mov
cmp
test
insb
sub
adc
leave
sbb
in
lahf
loopne
push
push
fidivl
xor
mov
xchg
sub
aam
cld
scas
popa
xchg
hlt
rcr
mov
pop
push
mov
add
pop
mov
sub
aas
jne
adc
int3
clc
rol
scas
sub
pop
xor
and
insb
mov
pusha
aas
pop
xchg
xchg
and
dec
jmp
jl
sbb
fcoms
inc
clc
ljmp
xor
arpl
dec
scas
mov
mov
xor
add
add
fnstenv
pop
sbb
cmp
aas
sbb
inc
push
mov
fcomp
inc
ficoml
cmpsl
imul
xchg
out
dec
xchg
daa
mov
jle
fmuls
pushl
push
dec
std
jge
inc
and
mov
add
imul
xlat
pop
in
mov
ja
loop
add
jle
mov
pushl
in
push
mov
jno
sbb
jmp
sub
adc
in
sbb
add
sub
pusha
cmp
push
ret
movaps
add
fs
sbb
and
add
inc
inc
test
mov
mov
outsl
mov
cli
push
push
mov
pusha
or
push
dec
cs
push
and
icebp
jbe
jl
rcrl
sarl
popf
cwtl
mov
mov
adc
call
arpl
pop
sbb
adc
movl
data16
out
cmp
pop
cmp
push
test
jge
bound
mov
push
inc
add
notl
sub
cmp
xor
gs
divl
sbb
fwait
call
xchg
add
sub
aaa
insb
daa
lods
mov
pop
enter
sbb
sbbb
cmp
xchg
das
rcrb
sub
cmp
cmpl
lock
sbb
cmp
rcrb
mov
mov
mov
pop
test
fidivrl
lock
cmp
jne
adc
push
jb
sbb
js
dec
pop
sub
xor
pop
rolb
icebp
add
test
aam
popf
pusha
push
push
push
cmpsl
addl
hlt
add
pushf
and
push
mov
insl
sbb
mov
rcll
push
and
js
test
repnz
test
add
push
clc
push
test
fwait
cmp
xor
popf
orl
sbb
pop
pop
dec
mov
push
jmp
es
or
mov
lea
pop
mov
dec
add
sub
sbb
adc
add
mov
sbb
push
mov
in
adc
cmpsl
xchg
in
cli
hlt
add
sbb
jbe
adc
mov
cld
clc
hlt
imul
fs
jge
dec
cmp
gs
aaa
ret
jg
clc
clc
addr16
imul
add
mull
or
and
adc
or
sbb
add
xlat
in
bound
xlat
inc
sbb
inc
push
push
lods
jne
loop
pop
cmp
adc
jb
push
and
xor
cmp
fcoms
pushf
lcall
lret
add
or
xchg
mov
mov
jns
popf
mov
mov
test
dec
mov
mov
mov
jne
movl
fsubs
clc
add
xor
ds
cmpl
jno
call
in
cmp
pop
jmp
sbb
jp
movsb
cmp
je
clc
adc
push
je
mov
divb
mov
dec
sub
cmp
jmp
sbb
das
jnp
cmp
in
out
test
sbb
jge
pop
sub
adc
mov
pop
pop
call
push
xor
adc
je
faddl
int3
aad
push
push
je
fmull
fprem
jmp
loopne
adc
mov
jo
mov
fstpt
incb
mov
hlt
cwtl
xor
movsb
in
test
add
fcmove
xchg
loopne
pushf
adc
sbb
movsb
mov
cwtl
lea
sub
call
jne
mov
imul
cmp
pushf
cmp
inc
cld
push
sbb
popf
mov
mov
inc
jl
pop
outsl
mov
int3
add
lock
mov
cwtl
inc
add
popf
testl
xchg
shll
shll
inc
jbe
or
sbb
push
jle
imul
ljmp
push
loope
xor
pusha
jae
cmp
xor
mov
in
inc
pop
les
mov
mov
push
rol
mov
xchg
mov
mov
xsavec
andb
mov
dec
xor
mov
cmp
or
fsubrs
in
lock
adc
xchg
mov
push
cmpsl
jmp
dec
arpl
lds
or
and
cld
jb
or
loopne
push
push
call
inc
cmp
xchg
cmp
lret
and
mov
jmp
inc
clc
imul
aam
sub
mov
test
fcoms
mov
add
rcll
xor
shlb
scas
lods
sub
adc
mov
mov
pop
mov
cmpsl
jecxz
aam
push
lods
push
andl
mov
mov
or
cmpb
je
ds
cli
xlat
lahf
xor
repz
cmp
inc
call
push
imul
je
test
mov
in
push
dec
xchg
ss
inc
cmp
add
pop
add
push
nop
xchg
pushf
loopne
jecxz
pop
adc
decl
cli
bound
sbb
popa
daa
in
lods
nop
dec
jmp
mov
xchg
pusha
add
out
or
push
lock
jbe
or
mov
mov
add
jg
and
loopne
or
sub
cmp
jge
movzwl
push
push
cli
or
lock
inc
sub
push
push
cltd
fimuls
dec
add
cmpb
jnp
subb
jle
and
xor
out
adc
mov
or
sti
mov
jl
cmp
push
mov
push
pushl
push
or
push
out
scas
ret
push
scas
ret
dec
cmpb
push
data16
or
mov
int
ja
movsb
sbb
mov
ret
rcrl
js
inc
scas
inc
mov
cli
mov
inc
cmp
mov
mov
repz
and
push
inc
aad
outsl
lea
stos
cmp
rcrb
xor
or
mov
sbb
and
scas
pop
je
jge
or
mov
sbb
imul
test
push
into
jne
ja
sbb
jb
je
push
jmp
dec
push
jecxz
xchg
out
cmpb
fwait
in
in
jne
push
xor
mov
sahf
cmp
and
insl
js
pushf
push
lahf
jo
idivb
into
fwait
xchg
cld
xor
add
test
push
pushl
or
rcrl
or
clc
aam
sbb
adc
xor
pop
adcb
or
mov
sbb
pop
add
divb
add
cmp
mov
test
andb
test
sbb
or
xchg
cbtw
enter
sub
mov
sbb
out
mov
in
mov
mov
les
sbb
hlt
or
vmaxps
push
fimull
push
adc
out
add
ljmp
nop
enter
xchg
cwtl
mov
mov
xor
push
push
mov
push
fisubrs
and
cmp
cmp
sbb
jno
push
pop
jmp
adc
je
clc
test
pop
ret
inc
loop
mov
xlat
rdmsr
cld
cmpsl
out
scas
jge
pop
stc
mov
shr
shl
add
lea
add
test
cmp
sbbl
mov
call
dec
mov
test
mov
push
fcomps
test
mov
data16
adc
sub
rol
mov
les
mov
pusha
lea
push
xchg
push
push
icebp
cltd
pop
shrl
push
or
sbbb
mov
enter
aaa
das
imul
and
sub
sbb
jl
in
fdivrl
xchg
jmp
adc
mov
fnstenv
icebp
imul
pushf
loope
push
push
push
adc
cltd
insb
mov
mov
pop
mov
movsl
dec
imul
or
cmp
test
pop
ficompl
sub
push
push
mov
je
inc
mov
pop
jecxz,pn
sbb
or
add
nop
pop
pop
or
insb
xor
mov
pop
sub
jbe
mov
inc
fldcw
adc
imul
xchg
sbb
fbld
mov
lret
jg
mov
out
cmpsb
adc
pop
mov
add
cmp
or
inc
push
adc
pop
adc
adc
or
xchg
and
adc
sub
push
mov
sub
jne
push
push
xor
sbb
cwtl
inc
cmp
sahf
cmp
lods
xchg
cmpsb
fs
stos
mov
or
int3
les
fdivrl
adc
sub
icebp
dec
test
xchg
cmp
dec
lahf
adc
push
xchg
push
test
adc
add
icebp
cld
int3
sbb
or
xchg
cld
dec
xchg
nop
inc
cmpsb
sbb
cld
adc
pop
int
mov
pop
push
jmp
xlat
push
shrb
fstps
jae
add
add
movsl
and
add
dec
in
lds
mov
and
adc
push
push
xor
popa
dec
scas
popa
sub
les
cmp
jge
add
sbb
sbb
push
rorb
mov
mov
mov
add
sar
push
mov
push
push
dec
sub
jbe
test
cmp
sub
and
adc
sub
adc
jo
dec
cs
xchg
push
and
movsl
adc
sarb
idivl
jmp
adc
dec
xlat
and
pop
jo
push
es
nop
jecxz
cmp
mov
jmp
push
push
fcoms
mov
inc
je
push
scas
add
push
sbb
jbe
sub
fsubrl
shrb
es
mov
push
aad
std
mov
shll
jmp
lret
xchg
cld
mov
sbb
push
dec
push
xchg
mov
inc
std
loop
and
daa
mov
in
pushl
push
ljmp
dec
and
and
xor
shr
mov
cmc
aas
xchg
lock
dec
jne
pop
rcrl
rcrb
rcrb
xor
daa
push
fdivrs
jae
clc
push
cmp
xchg
sbb
push
lcall
xchg
imul
testb
loop
sub
inc
cmc
fmuls
add
int3
icebp
pop
push
mov
jecxz
cmc
cmp
pop
fwait
xchg
mov
lds
nop
or
xchg
je
lock
scas
hlt
movsl
inc
cmp
fistps
ds
shll
inc
or
test
and
xchg
dec
or
out
ss
les
cli
mov
dec
shrl
dec
cli
or
in
mov
mov
roll
push
dec
and
xchg
out
out
aam
sub
xor
in
and
lock
mov
test
das
mov
xbegin
adc
jmp
cmc
lahf
stos
xchg
jae
inc
or
sbb
call
shlb
ret
je
scas
push
fs
orl
test
nop
addb
and
and
inc
push
push
fldl
loopne
lds
mov
jge
jne
push
jle
jb
push
out
rclb
sarb
push
imul
cmp
aam
inc
jnp
test
lods
mov
inc
nop
les
mov
and
std
loope
mov
test
add
stc
pop
jmp
movsbl
mov
pop
dec
lods
cmp
pop
lea
cmp
mov
xchg
push
shll
fildll
push
pushf
xchg
sub
lret
add
adc
adc
sbb
cld
test
push
fisubrl
in
sbb
ret
enter
aaa
push
push
add
mov
cltd
sti
adc
sbb
pop
mov
ljmp
and
in
in
jbe
iret
and
aas
mov
insl
sbb
and
ret
jo
xlat
cmp
leave
mov
jl
cmp
xor
lods
cmp
jge
int
scas
mov
pop
push
cmp
sub
inc
loopne
dec
cmp
or
fs
push
daa
mov
fucomi
xchg
inc
fwait
test
cltd
add
cmp
inc
loope
push
aaa
adc
sarl
or
adc
sub
mov
call
xor
add
cltd
in
ljmp
cld
mov
xchg
pushf
xor
inc
popa
xchg
xor
xchg
cltd
pop
inc
sahf
nop
mov
push
mov
cmp
movsb
mov
push
fmuls
add
push
les
dec
add
inc
loopne
sbb
and
fdivs
fucom
test
pop
sub
test
daa
sub
mov
add
jo
inc
cltd
mov
insl
loop
push
test
les
cmp
loopne
dec
cwtl
in
sbb
sti
jno
jo
aad
lret
jnp
jmp
nop
adc
add
mov
sbb
mov
lcall
int
inc
push
jns
das
add
test
les
movups
jo
dec
insb
push
mov
mov
hlt
push
and
call
pusha
inc
aaa
in
adc
jb
jo
sahf
pop
in
add
sbb
sub
cltd
push
push
notl
cmp
cld
in
xchg
sub
pop
sbb
pop
in
add
add
enter
outsl
push
ret
sbb
shll
jne
sahf
sahf
cmp
xchg
add
movsl
je
outsl
insb
std
add
cmpl
add
in
adc
push
je
lcall
pop
pop
adc
sti
sbb
jg
clc
ss
pop
shl
jb
fcoms
xchg
xor
lea
mov
push
scas
test
jbe
rorb
popf
dec
dec
push
call
ret
lea
jecxz
lcall
inc
push
or
dec
fidivrl
mov
push
lret
daa
rol
dec
rcrb
int3
inc
jge
hlt
or
jo
mov
ds
adc
mov
adc
mov
inc
int3
inc
jns
xchg
outsl
sbb
pop
jge
pop
rol
inc
aam
movsb
cltd
js
aad
push
dec
faddl
mov
or
movzwl
cltd
mov
push
xor
push
ds
inc
lret
or
stos
test
int3
push
jg
jmp
stc
add
push
adc
stc
pop
adc
cmp
mov
or
mov
sbb
neg
sbb
and
add
mov
cmpsl
inc
pop
test
pop
mov
popa
push
cli
xor
incb
rolb
pop
cmp
xchg
mov
sbb
sarl
add
pop
adc
nop
mov
xor
leave
enter
add
add
stos
insb
adc
cmp
out
adc
add
testb
push
aaa
ss
ret
incl
cmpl
nop
inc
xchg
push
shlb
xor
add
and
insb
and
mov
push
int3
mov
je
and
add
push
addr16
ret
cmpsb
imul
loope
inc
mov
orb
add
loop
test
pop
jle
hlt
xchg
repnz
inc
add
inc
rcrb
repz
jg
jl
cltd
xor
in
jb
inc
inc
rep
lods
pop
cwtl
jbe
and
pop
push
loopne
pop
xchg
data16
fsubs
jge
adc
fsts
in
repz
jne
adc
and
enter
inc
ljmp
ss
test
inc
stos
pop
sar
push
fisttpl
mov
cltd
mull
ret
in
repnz
add
adc
xor
inc
pop
push
popa
aad
mov
std
les
and
popa
and
fisttpll
cs
sbb
stos
daa
aaa
leave
inc
cmp
cmp
pop
xor
insb
mov
pop
mov
shlb
cmp
sub
mov
sbb
loopne
lret
mov
sbb
test
in
cmp
or
pop
push
and
fld1
js
mov
je
fstps
mov
rorl
mov
loopne
jae
xchg
sub
cmp
sub
mov
sti
push
jno
add
lods
les
jge
ja
mov
shr
dec
pusha
push
fs
adc
inc
ljmp
mov
xor
jl
pop
inc
adc
rclb
ss
fnsave
je
sahf
je
fucomp
push
in
push
push
lods
dec
xchg
ss
jne
outsl
inc
mov
imul
cmp
sbb
mov
adc
jmp
sbb
push
add
add
inc
pop
test
pop
adc
push
xchg
mov
adc
in
xchg
das
and
push
push
sbb
dec
xor
insl
in
idiv
jnp
jge
fmull
sbb
and
push
and
icebp
mov
push
sub
cmc
push
sti
shr
sbb
aad
push
xchg
dec
sarb
xchg
sub
stos
mov
jmp
jmp
lret
js
sub
push
cmp
push
data16
sub
mov
mov
and
sbb
push
sub
je
shlb
and
mov
jne
rcr
mov
jns
int3
mov
or
call
sbb
sbb
pop
jg
cmp
cld
sbb
pop
mov
xor
sub
jle
mov
outsb
mov
adc
inc
cmp
jl
ret
jo
inc
cmpsl
ljmp
aam
push
xchg
rorl
stos
mov
push
and
push
xor
pop
or
cs
cmp
loope
cli
jle
xor
int3
outsl
or
mov
je
scas
comiss
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
call
ret
mov
mov
inc
dec
lea
cmp
jae
andb
cmp
in
add
jnp
scas
cmp
call
sub
and
dec
clts
mov
ret
mov
inc
inc
sahf
mov
call
dec
lea
xlat
inc
jmp
sbb
sbb
inc
mov
push
fwait
idiv
lock
pop
clc
call
imul
push
xchg
call
and
add
aaa
or
pop
dec
pop
dec
jge
push
and
cmp
out
and
enter
cmpsb
test
sbb
dec
lret
clc
cld
jmp
in
sub
add
cmpb
aam
ret
lds
sbb
hlt
lock
and
movsb
dec
call
pop
enter
jmp
mov
pop
pop
or
sbb
pusha
ret
fistpl
mov
xchg
mov
rclb
add
aas
cmp
inc
aaa
xchg
pop
mov
std
sbb
and
mov
xchg
push
je
shll
jb
and
pop
cmp
aam
das
es
xor
addb
daa
imul
sub
add
lock
add
cmp
sti
sbb
fwait
mov
mov
pop
pusha
lods
int
jno
sbb
lret
push
ret
test
cmp
push
rcrl
sar
pop
mov
je
push
inc
movsl
notb
push
xchg
aas
lea
outsl
cmp
jne
push
out
adc
or
pop
add
ret
adc
int
popa
mov
sbb
mov
rcll
es
jns
sbb
sub
mov
inc
cli
dec
xlat
xor
pop
xchg
jbe
sub
ja
gs
pop
insb
sub
faddl
push
and
movsb
adc
pop
sub
xor
rcl
dec
mov
movl
add
mov
xor
or
sar
xchg
sub
add
andl
xchg
cwtl
cli
mov
jle
mov
cmpb
xor
mov
sbb
adc
add
leave
push
xor
enter
mov
inc
pop
dec
add
and
xor
cwtl
rolb
mov
cmp
stos
xchg
fwait
mov
mov
pop
fldlg2
xchg
cmp
push
sbb
push
or
xlat
mov
mulb
add
je
idivb
adc
mov
fwait
in
jne
jmp
je
sub
mov
sbb
adc
sbb
push
adc
bound
insb
and
repz
cltd
fstps
or
mov
data16
pop
adc
sti
dec
mov
sti
and
shll
fimuls
aam
mov
cmpsl
sub
pushf
addb
mov
pop
mov
test
pushf
cmp
and
sbb
popa
addb
sahf
rorb
sub
in
lahf
movq
lea
push
push
mov
mov
sub
push
iret
shlb
and
dec
cmc
mov
jo
mov
push
and
and
sbb
and
cwtl
mov
es
xor
nop
push
sbb
add
mov
add
sti
mov
push
mov
mov
mov
pop
mov
jge
pop
mov
jnp
mov
add
cmp
roll
cmp
add
mov
into
push
je
sbb
xor
xchg
insb
pop
pop
push
jmp
push
insb
jbe
and
jg
add
pop
inc
mov
pop
sub
inc
sti
jmp
push
cmp
loopew
mov
lods
nop
add
jmp
psadbw
mov
and
add
xor
push
dec
loope
xor
int3
movsb
push
mov
cmp
inc
push
push
or
push
jmp
adc
loopne
cmp
and
cltd
dec
mov
pop
sbb
push
call
fidivrs
sahf
jle
sbb
call
xor
mov
inc
mov
pop
loop
rorl
jnp
add
test
add
rclb
push
inc
cmp
jae
ret
mov
push
or
xchg
sbb
pop
divb
add
adc
mov
ja
or
xor
addr16
push
dec
pop
pop
push
ret
fidivl
jl
and
jbe
mov
adc
insb
push
dec
add
adc
inc
push
mov
and
aaa
or
sbb
lods
cmp
adc
adc
sbb
loope
fs
lock
cmp
cmp
in
pop
or
mov
and
xor
test
mov
push
adc
push
or
loope
adcl
std
jg
rcrl
jnp
xchg
shrb
inc
jo
jmp
push
imull
dec
sarb
in
and
cmp
jne
adc
rolb
in
mov
test
mov
hlt
push
xchg
lret
push
je
stc
loope
cmp
or
leave
icebp
push
enter
mov
test
inc
add
inc
cmp
jb
jmp
pop
imul
xchg
xchg
aaa
xchg
dec
lcall
inc
loope
rclb
mov
jg
shr
and
mov
xchg
pop
add
xor
adc
inc
sbb
popa
test
xor
add
out
test
cmp
push
add
pop
adc
adc
xchg
dec
dec
cmp
jne
cmp
and
jp
adc
pop
das
rorb
sub
pop
xorl
fnsave
ret
dec
ret
push
call
cld
and
cmp
jne
flds
add
push
int3
xlat
mov
mov
clc
nop
push
sbb
push
cmp
lretw
push
int
ficoml
xchg
lret
push
int
push
lret
jecxz
sub
jnp
add
cmp
mov
andb
icebp
dec
cld
add
add
imul
ret
mov
sub
pop
icebp
add
or
inc
cmpb
or
pop
inc
faddl
insb
push
mov
pop
test
xor
xchg
pop
aaa
mov
push
mov
or
cmp
leave
push
pop
push
cmc
adc
vpmulhuw
pusha
pusha
sub
mov
daa
push
pusha
and
push
sbb
mov
dec
filds
and
pop
and
addl
sub
aad
stos
mov
icebp
mov
lea
rolb
or
dec
xor
insb
xchg
mov
in
out
jbe
sbb
decl
mov
test
mov
adc
btr
and
scas
cmpb
jbe
inc
shlb
inc
ljmp
add
int3
push
dec
sub
jecxz
fucomi
sbb
or
xor
xchg
int
cmc
repz
cmp
orl
cmp
xor
adc
fcom
sahf
repz
adc
add
dec
clc
cld
adc
xchg
inc
cmp
jl
xor
fs
lock
mov
jmp
repnz
adc
aas
or
dec
push
je
das
dec
add
fdivs
and
add
sarb
and
fstl
stos
ffreep
xchg
push
sbb
push
add
fiaddl
out
lds
iret
mov
icebp
or
sarb
xlat
or
ret
or
pop
repz
test
add
add
mov
cmp
aaa
sub
call
pop
cwtl
adc
sub
pop
cmp
aam
imul
fistpll
mov
mov
push
outsl
lock
shll
je
imul
inc
xchg
xorb
or
or
xchg
cmc
inc
xor
lds
sub
add
setge
inc
jmp
dec
dec
testb
mov
cmp
iret
add
cmp
adc
test
jecxz
stc
cmp
push
sarl
sbb
add
loope
pop
mov
jo
aas
xor
and
mov
and
notl
cld
add
sub
inc
mov
cwtl
sti
shlb
fcompl
test
push
add
and
push
rcl
and
cmp
push
mov
repz
push
xchg
sub
inc
lock
dec
xchg
lret
and
mov
mov
or
fmuls
shl
sbb
mov
mov
roll
mov
jl
lds
aam
and
pusha
ss
outsb
nop
or
cmp
or
xchg
adc
fs
jl
push
incl
sub
sbb
popa
add
xchg
lock
fcoms
lahf
mov
sar
pop
je
cmp
xchg
cs
cmp
jbe
cmp
pop
je
inc
cmp
jb
pop
jne
cmp
jae
mov
cmp
cmp
sub
push
push
pop
push
or
lahf
outsl
jbe
cmp
dec
mov
xchg
cld
into
jbe
cmp
jne
mov
xchg
jge
les
dec
ss
call
mov
mov
out
push
imul
mov
mov
or
add
fldl
sbb
push
or
or
adc
dec
ds
inc
sbb
push
push
fs
aam
or
mov
movsb
xchg
mov
inc
sahf
add
je
jnp
test
fstp
inc
ljmp
jns
lea
mov
sub
enter
push
mov
jns
decl
daa
fcoms
orb
mov
fidivl
out
jo
cmp
ret
call
cmp
pop
nop
or
mov
jno
jp
or
mov
shlb
mov
fwait
sub
inc
mov
jno
sub
xchg
push
mov
xchg
repz
pop
push
testb
inc
gs
sbb
sub
sbb
lcall
pop
xchg
dec
xchg
pop
shr
mov
mov
jb
jne
adc
nop
pop
push
mov
lock
pop
jne
add
mov
cli
jne
push
add
mov
sti
or
and
and
jmp
nop
inc
mov
and
jmp
lea
dec
ds
or
sbb
or
and
subl
fucomp
data16
push
or
into
adc
mov
sahf
mov
mov
mov
jo
sub
mov
dec
pop
fsubl
inc
pushl
xorb
push
and
inc
xor
or
sti
leave
test
push
loope
dec
imul
int3
cli
lods
out
mov
add
pusha
adc
xchg
sbb
mov
dec
insb
and
add
pop
or
arpl
mov
sbbb
imul
mov
lock
mov
sbb
in
adc
xor
or
xor
pop
fldl
mov
dec
loopne
xchg
addr16
and
loop
lods
fimuls
jno
fsts
test
lahf
mov
in
shlb
nop
and
jg
cmp
stc
aaa
sbb
aam
fbstp
add
fisttpll
popf
fmuls
jge
je
add
fisubs
jae
adc
insl
inc
mov
adc
ret
push
dec
mov
jg
insb
mov
clc
jne
lea
movl
clc
mov
lret
enter
dec
lret
jne
cmp
jae
popa
xor
inc
mov
imul
pop
outsb
jbe
xchg
xor
adc
xor
push
push
out
mov
inc
and
dec
lret
xor
cmpsl
rolb
lods
jl
adc
ret
mov
mov
lea
sub
in
and
push
jmp
xor
jns
push
test
test
out
pop
mov
xchg
mov
subl
mov
or
pusha
setp
rclb
jo
add
xor
sub
into
decl
jo
or
push
inc
cmp
incl
cmp
jnp
add
fs
jmp
inc
push
add
pop
lahf
mov
dec
dec
sbb
mov
jl
jns
out
xchg
imul
insl
lods
adc
pop
out
push
pop
sarb
rorb
leave
mov
xchg
jbe
sub
inc
enter
pop
adc
or
setge
out
push
mov
sbb
adc
sub
sbb
sahf
inc
imul
loopne
repnz
push
imul
dec
mov
aaa
xor
mov
lods
fisubrl
cmp
insb
mov
cmpsb
ds
adc
loopne
cwtl
pop
mov
dec
jl
mov
cs
lahf
sbb
dec
fldt
daa
aam
cmpl
xchg
aam
pop
wbinvd
pop
pop
outsl
iret
jne
push
jmp
push
scas
jg
sbb
je
or
insl
add
daa
mov
sbb
mov
jp
push
mov
xor
orb
jmp
icebp
push
sub
xor
adc
lea
and
dec
call
or
and
les
add
xchg
ja
adc
mov
cmp
testb
push
sub
nop
fwait
lods
or
mov
jge
push
sti
stc
dec
dec
andb
xor
lock
int
cmc
xor
divb
jne
inc
movb
and
sub
xor
das
pop
inc
mov
decl
xor
push
inc
push
cmp
mov
in
or
pop
sub
js
mov
mov
or
cmpb
pusha
mov
jmp
shll
adc
pop
jne
sbb
jle
cmp
fists
stc
pop
call
adc
push
mov
xchg
push
jecxz
xchg
sub
lds
jno
push
mov
lea
push
pop
out
xchg
stos
inc
jle
int3
add
and
shl
xor
pop
inc
mov
test
sub
sbb
loopne
sbb
push
xor
int
and
pop
aam
lcall
mov
lock
push
leave
cld
push
or
inc
test
out
nop
scas
cmp
push
mov
loop
jecxz
adc
ss
aaa
ret
lock
pop
xchg
add
push
insb
je
jnp
pusha
aaa
xorl
adc
and
lods
test
pusha
inc
faddp
call
mov
popa
clc
inc
sbb
test
stos
mov
into
push
mov
insl
arpl
jmp
mov
adc
xorps
imul
das
ret
xchg
or
add
insl
mov
out
loopne
xchg
sbb
and
or
adc
xor
jmp
add
hlt
shrl
add
or
and
icebp
incl
add
hlt
inc
push
sub
and
sbb
adc
or
dec
or
sbb
mov
lods
add
pop
cmp
scas
lock
inc
xchg
leave
and
cmp
pop
loopne
jno
jecxz
pusha
push
and
mov
shlb
xchg
cmp
or
sbbb
ja
sub
jl
dec
repnz
pusha
or
ljmp
xchg
and
popf
mov
mov
mov
test
xchg
pusha
rclb
das
mov
or
sub
xor
xchg
pop
or
jns
adc
adc
or
add
mov
rclb
pop
xor
loope
push
orb
cmp
fcomps
pop
fwait
jbe
popf
xchg
sbb
movsb
and
jo
addr16
push
xor
jo
xchg
cld
or
jae
sbb
and
pop
cld
and
or
inc
mov
xchg
jecxz
mov
push
xor
fistl
sub
inc
mov
xchg
xor
pop
mov
loopne
mov
jmp
and
shlb
adc
in
pop
loope
stos
push
or
jnp
int3
dec
aad
inc
lahf
test
icebp
int3
test
xor
mov
cld
sub
pop
cmpsl
icebp
add
bound
mov
aad
test
mov
shrb
push
and
repnz
add
leave
push
cmp
imul
lret
sbb
out
adc
fisttpll
je
mov
sti
dec
loop
dec
fnstsw
jge
mov
adcb
insb
cmp
fdiv
cld
test
mov
es
and
or
test
push
iret
andb
outsb
cmp
clc
call
cmpb
jne
movb
push
inc
jns
jns
add
pusha
add
adc
adc
sub
sbb
mov
popa
ret
jo
jo
sub
xlat
pop
push
mov
incb
repnz
in
push
or
scas
lock
add
push
mov
stos
mov
insl
and
add
test
sbb
lret
mov
mov
push
or
xchg
inc
cmp
movsl
push
inc
sbb
pushf
sahf
arpl
xor
jne
movl
sub
dec
fdivl
push
ss
inc
cmp
mov
in
enter
pop
push
sub
pop
hlt
or
jne
icebp
clc
cltd
aam
sub
out
xchg
popa
das
fcoml
fmul
and
mov
in
add
sbb
or
test
jge
jmp
pop
pusha
fucomp
mov
add
sbb
mov
pushf
jge
sbb
inc
enter
sbb
daa
lret
pop
fadd
out
nop
or
add
dec
push
jmp
mov
mov
rorb
sub
or
add
xchg
pop
in
mov
add
addb
test
and
fisubrl
mov
dec
add
or
popa
pop
stc
and
sub
push
std
push
jno
aad
sbb
sub
ljmp
icebp
cmp
jbe
mov
push
loopne
cmp
mov
divl
shr
push
mov
xor
inc
cmpsl
stos
xchg
add
nop
sbb
movsl
sub
inc
dec
aam
data16
jmp
xor
jg
loop
or
jle
loopne
jb
aam
push
jne
scas
push
inc
popa
jo
add
loopw
lds
fsubs
cmpsb
mov
xchg
add
lock
xchg
push
mov
sti
pop
pop
sub
and
mov
stc
sbb
push
adc
dec
ds
push
dec
ficompl
or
sub
adc
mov
pop
jo
mov
mov
inc
jmp
push
hlt
mov
fwait
mov
sarl
lock
aaa
jb
sbbb
in
push
pusha
in
xor
mov
or
add
add
dec
push
test
and
mov
add
sbb
rep
aas
jae
mov
dec
dec
inc
roll
int
mov
test
jne
dec
movsl
test
mov
and
sbb
bound
mov
aam
cmp
lods
push
push
mov
adcb
je
add
dec
push
push
sub
mov
or
hlt
rorl
mov
mov
push
pop
dec
pusha
sti
int
test
jns
push
aaa
sti
mov
jle
cmp
jle
or
adc
test
testb
push
and
jno
jg
cs
add
xchg
cmp
add
add
out
leave
and
adc
or
and
lahf
decl
xchg
andb
ret
idivb
cmc
lahf
int3
ss
push
jge
jne
popw
sbb
sub
cwtl
sbb
jo
cs
adc
add
cmp
repnz
jne
mov
insb
lret
add
call
cmpl
xor
ljmp
sub
or
js
sub
stos
add
callw
cmp
fstpt
std
xorb
inc
lcall
cld
sbb
xor
pushf
int3
dec
int3
xor
mov
mov
cltd
popf
int3
dec
sbbb
je
je
jbe
cmp
inc
dec
inc
cmp
sbb
je
clc
cmp
fnstenv
sub
adc
jnp
mov
sbb
je
bswap
or
adc
movl
sub
sbb
aam
or
adc
adc
es
sbb
xchg
jo
or
or
jnp
push
jl
jo
test
in
enter
xor
leave
enter
in
add
mov
mov
jo
mov
inc
dec
pop
fbld
mov
les
in
add
mov
movsb
frstor
mov
xor
jo
mov
mov
rcrb
inc
mov
mov
sbb
adc
jmp
push
fsubrl
sbb
int
test
xchg
or
imul
leave
in
sbbb
or
cmp
xchg
out
test
in
sbb
das
jbe
lock
enter
leave
inc
and
jbe
fmuls
pop
nop
xchg
test
sub
mov
enter
rcrb
rorl
js
cld
mov
mov
add
sbb
leave
enter
sbb
in
loop
mov
or
cld
mov
nop
sbbl
jp
or
sbb
add
mov
cmp
in
xchg
cmp
loopne
cmpsl
mov
iret
xchg
cmpsl
fsubs
pop
mov
mov
pop
dec
enter
sbb
inc
mov
in
fs
mov
pop
insb
lret
jo
mov
add
iret
repnz
les
inc
pusha
cmp
jns
in
inc
sub
xchg
cmp
mov
shr
sub
or
ror
shll
add
cmp
sbb
mov
in
jbe
xor
or
repz
rolb
clc
cmpsb
fs
leave
je
xchg
mov
enter
mov
dec
mov
shlb
jb
jb
adc
adc
movsb
sbb
dec
xchg
xchg
fxch
fs
sbb
push
xchg
sub
pop
adc
movsb
dec
js
jo
cltd
dec
lcall
test
mov
push
hlt
mov
mov
xor
sub
cwtl
imul
int3
or
in
jns
std
mov
xor
mov
stc
add
enter
in
test
xchg
out
enter
mov
and
mov
mov
inc
movsl
pop
push
cltd
adc
mov
dec
repz
je
pcmpgtb
jnp
mov
popa
aas
in
pop
pop
inc
push
sbb
js
cmp
in
daa
pop
hlt
mov
sub
cwtl
int3
mov
arpl
add
xchg
cmpsl
daa
enter
mov
in
dec
data16
mov
nop
mov
lods
mov
sbb
push
mov
or
push
imul
xor
add
cmp
mov
sub
clc
push
xor
push
xchg
les
dec
cld
pop
clc
arpl
add
je
push
scas
jo
adc
popa
enter
cmp
pushf
xchg
mov
mov
mov
movsb
xchg
popa
iret
and
xor
stos
adc
sbb
mov
cmp
sbb
pusha
mov
xchg
fs
int3
outsb
sbb
cmp
sbb
xor
dec
es
jl
insb
in
inc
lahf
adc
mov
in
mov
and
movsb
dec
loope
or
mov
inc
scas
in
insb
or
js
dec
ret
or
shrl
mov
add
insl
xchg
add
nop
xchg
adc
les
and
xchg
cwtl
mov
and
mov
fistpl
mov
jl
adc
and
and
and
fs
push
xor
and
push
jnp
sbb
je
and
sub
jl
sbb
jb
mov
mov
cltd
sbb
mov
aaa
cmp
push
movsb
fistps
pop
into
cwtl
mov
xor
and
sbb
xchg
mov
inc
cmp
iret
insb
push
sbb
cmp
xor
xchg
mov
add
mov
or
cmp
and
je
pushl
lahf
and
xchg
lods
and
orb
mov
outsl
xchg
dec
sahf
adc
data16
inc
mov
in
mov
in
dec
cs
sub
hlt
xor
cmp
cld
xchg
daa
xchg
adc
mov
mov
enter
stos
or
jb
pop
loopne
adc
sbb
xchg
enter
inc
leave
and
jb
and
sub
pop
xor
xor
cmp
leave
and
add
ret
dec
sub
and
pop
lods
adc
imul
jge
cmp
je
test
inc
je
push
std
sarl
xor
inc
mov
sbb
push
jp
xchg
push
push
test
cmp
ret
nop
pop
push
xor
push
imul
mov
sub
notl
adc
pop
adc
popa
shlb
out
xchg
aad
clc
aad
adc
popa
cmp
sti
leave
push
mov
adc
cmp
idiv
out
or
or
xor
enter
rolb
and
sbb
imul
xor
cmp
je
cmp
sbb
mov
sarb
gs
in
rcrb
jle
idivl
jmp
mov
mov
emms
rep
lea
jl
loope
inc
fcmovnu
cmp
mov
enter
inc
mov
mov
dec
cmp
jle
movsl
mov
mov
pop
xchg
mov
cmp
pop
jl
cmp
jg
daa
pop
xchg
push
into
les
sub
addb
jbe
jp
les
pop
hlt
out
scas
js
sbb
sub
into
sub
jmp
jno
mov
cltd
clc
mov
adc
enter
pop
or
pop
mov
mov
add
sub
dec
jle
mov
add
adc
ss
lea
cltd
adc
push
sbb
dec
dec
shll
dec
insb
push
sbb
movq
push
add
divl
adc
movsb
orb
xchg
sarb
xor
pop
jns
adc
add
adc
add
cmp
jg
or
adc
mov
inc
icebp
aaa
dec
lea
sbb
je
and
push
push
mov
push
inc
cltd
mov
cmp
adc
sub
test
hlt
sub
add
add
add
mov
mov
outsb
mov
and
cmp
je
jns
adc
mov
les
xchg
pop
add
out
shlb
and
and
jb
mov
sbb
cwtl
or
mov
jmp
pop
inc
adc
adcl
in
pop
xorl
fcmovne
xor
xchg
mov
cmp
subb
test
mov
sub
cld
daa
arpl
je
jg
rcrb
mov
mov
xchg
pop
add
test
imul
or
pop
fstl
fsubrl
cmp
daa
push
in
pusha
scas
push
pop
jo
mov
mov
xor
jne
je
out
movsb
dec
inc
leave
pop
ret
push
repz
cmp
and
and
mov
mov
mov
divb
mov
jbe
and
in
xchg
mov
push
or
sbb
loop
ret
leave
daa
pop
mov
push
test
push
push
jge
mov
stos
inc
cmpsb
xchg
inc
pop
mov
cmp
push
adc
cmpsl
insb
inc
imul
adc
inc
inc
sbb
and
lock
dec
fucomi
shrl
cld
fidivl
insb
sbb
ss
dec
test
adc
inc
adc
outsb
push
mov
movsb
add
pop
inc
jge
jecxz
dec
fwait
xor
aad
out
data16
sbb
ds
mov
ja
sbb
adc
jnp
mov
push
jmp
push
sbb
push
cmp
or
xchg
std
add
bound
cmpl
adcl
push
sub
cmpsb
or
or
sub
jne
pop
fdivs
sbb
scas
push
push
or
mov
repz
dec
push
dec
jo
adc
or
je
jle
and
push
jg
sub
adc
int
xchg
mov
adc
sub
cmc
cmp
adc
imul
and
push
or
addl
and
rorl
xchg
cltd
std
sub
sar
ja
jg
sub
cmp
cmp
out
testl
test
into
mov
jnp
insb
xor
les
leave
and
nop
fs
sbb
je
lods
sbb
mov
iret
pushf
hlt
mov
adc
jge
adc
cld
stc
or
push
mov
mov
jg
cld
insl
je
lea
adc
movzbl
insl
jmp
jmp
push
cmp
and
outsb
das
push
aam
push
inc
dec
icebp
js
cmc
jl
sub
outsb
iret
enter
push
bound
jae
pop
test
enter
pop
mov
fldl
in
push
push
out
imul
cmp
negl
or
add
add
or
mov
jl
mov
dec
adc
cs
dec
mov
mov
cld
int3
daa
cmpsl
aad
fdivl
push
push
add
dec
ret
cmp
xchg
add
scas
xor
xorl
inc
or
inc
add
aaa
jno
cs
in
jecxz
sarb
push
imul
pusha
mov
mov
mov
sbb
cmp
je
cmp
clc
loopne
pushl
mov
cld
fwait
movsl
and
pop
mov
je
jl
mov
add
and
mov
push
push
or
shrb
imul
pop
pop
fimull
test
clc
xchg
aam
pop
out
mov
push
push
inc
outsl
scas
jbe
stos
cltd
dec
cmpl
push
push
stos
cmpl
push
pop
mov
mov
cmp
mov
clc
xchg
mov
jmp
dec
cltd
test
adc
xchg
test
and
cmp
lret
inc
cmp
mov
ret
sub
dec
aaa
jne
add
mov
rclb
mov
fnstcw
add
xlat
testb
pop
out
call
adc
or
pop
mov
push
pushl
fbstp
pop
pop
or
or
add
jmp
adc
imul
and
jg
jg
xchg
mov
pop
es
ret
int
loop
andb
fs
popa
sub
dec
cmp
test
insb
lahf
sub
sub
push
add
xlat
orl
add
clc
sub
clc
lea
jae
inc
push
mulb
sub
and
dec
push
pop
imul
stos
xchg
add
rcrl
cmp
dec
or
mov
mov
imul
jo
or
dec
scas
mov
add
enter
cmp
xor
ret
and
and
jmp
add
jb
sbb
jo
jbe
adc
jbe
test
mov
adc
filds
sub
shrl
xor
mov
lods
shrl
test
cmpsl
push
aas
sbb
repz
out
movsl
sete
cli
and
stos
cmp
xor
add
mov
ret
cmp
cmp
lods
and
roll
pop
pop
cmp
cmp
jo
test
add
mov
dec
and
push
mov
dec
mov
add
dec
movsl
enter
int3
inc
adc
test
sbb
mov
shll
fidivrl
mov
fcoml
call
add
jno
faddl
and
loop
outsb
ja
push
clc
mov
iret
pop
repnz
call
insl
insb
and
push
push
lret
push
fwait
test
mov
xorb
xor
scas
mov
mov
imul
fmuls
jb
jo
popa
cwtl
dec
jns
or
add
nop
xchg
dec
push
test
fs
inc
adc
and
jge
adc
mov
stc
add
mov
mov
pop
mov
xchg
xchg
leave
mov
fs
movsl
and
and
adc
nop
mov
and
mov
xor
push
jb
mov
int3
push
xor
push
and
enter
sub
cwtl
cmp
push
xor
push
cmp
push
xor
dec
pop
inc
fcoms
dec
inc
push
xor
push
sub
pop
pop
jmp
push
push
adc
or
add
jae
jb
imul
dec
fimuls
inc
sbb
pusha
or
lea
repnz
sarb
call
jo
addl
add
hlt
je
cmp
jno
push
call
push
insb
xor
jnp
jno
sub
ret
and
mov
jbe
adc
push
in
cmpb
xor
pop
adc
ret
jmp
cmp
jbe
inc
out
sbb
or
loopne
dec
push
pop
cltd
dec
jge
cmp
dec
jo,pn
mov
push
jo
inc
adc
sar
adc
dec
adc
loope
mov
pop
je
sub
dec
adc
inc
or
je
xor
adc
outsl
mov
dec
sti
repz
adc
adc
nop
js
clc
pop
sbb
enter
dec
insl
fimull
inc
pcmpeqw
pusha
dec
cmp
iret
in
bound
sbb
jle
mov
jo
mov
sarl
daa
sub
out
ja
sti
das
adc
xor
inc
dec
push
out
out
push
mov
sub
pop
je
sbb
je
sub
out
les
inc
mov
mov
mov
dec
cmpsb
inc
sub
clc
or
adc
mov
mov
mov
cmpsl
fisubrl
clc
xchg
cmpsl
cmp
or
push
jne
orl
push
sub
dec
push
adc
xchg
jns
jle
add
jmp
xor
out
sub
cld
mov
imul
mov
mov
sbb
scas
add
sbb
fildl
ret
xor
dec
loopne
pushf
test
je
jmp
mov
push
shlb
xor
push
loope
test
ret
sub
je
sub
xlat
and
cs
and
outsb
je
jnp
cs
and
int3
mov
test
pusha
jmp
ja
push
lea
bound
inc
and
mov
mov
aaa
lea
dec
mov
ret
cmp
jb
jmp
push
in
add
insb
mov
test
sbb
push
adc
jno
imul
push
cmp
and
xchg
movzbl
push
mov
push
or
xchg
cmovg
lock
jmp
push
inc
rcll
cmp
push
loope
cmp
pop
lea
push
shr
inc
mov
xchg
inc
sti
sar
out
movzwl
add
inc
inc
negb
add
or
mov
cli
pop
add
mov
and
cmpb
rol
xadd
rol
inc
mov
pop
jb
add
dec
mov
into
mov
adc
loope
aam
jno
adc
lock
adc
aas
mov
dec
in
testl
xchg
xor
pop
sti
mov
nop
mov
inc
sahf
lret
aaa
dec
aam
mov
mov
inc
or
dec
push
jle
test
call
pop
cmc
or
fadds
mov
jge
jge
icebp
or
wbinvd
pop
pop
sarb
push
sbbb
pop
fsubr
jne
out
cmp
fs
jl
sbb
mov
or
bound
adc
push
mov
pushf
popf
pop
adc
push
push
das
mov
push
incl
pop
jne
xor
push
push
push
int3
or
mov
inc
dec
lcall
ret
push
pusha
xchg
dec
inc
mov
cmp
outsl
insl
fdivr
inc
push
cmp
call
cmp
push
adc
jo
jmp
push
xchg
inc
shlb
gs
aam
jb
push
scas
clc
mov
mov
jmp
dec
push
push
adc
insl
or
vmovdqu
jecxz
aam
ret
add
pushf
fsubrl
inc
dec
jne
nop
sbb
sub
adc
cmp
jg
or
inc
jle
or
xchg
push
sub
add
and
and
clc
mov
ret
test
cmp
sub
jp
and
cltd
push
dec
clc
add
loop
mov
push
push
xchg
sub
cmp
sbbb
fcoms
in
fiadds
mov
icebp
pop
sbb
stc
adc
fs
mov
jge
stos
test
repnz
inc
insl
jno
push
stc
xor
fldcw
pop
cld
je
xchg
or
adc
test
mov
mov
push
xchg
jnp
insl
pusha
lods
fistps
inc
ret
int3
cmpsb
adc
or
and
sarl
out
mov
sub
dec
and
shlb
or
xchg
mov
xor
popf
mov
pop
insb
cmpsl
add
sbb
jmp
and
push
shlb
int
cmpsl
nop
inc
subl
daa
rol
and
jo
shl
int
mov
cmp
sub
inc
mov
pop
cmpl
jge
nopl
cmpsb
add
icebp
sub
xorb
icebp
push
mov
cwtl
test
dec
xchg
pop
fdivl
push
add
add
pop
dec
push
mov
push
cmp
push
imul
and
jno
fistl
jnp
aad
stos
pushf
pop
sbbb
mov
or
or
adc
jb
push
add
sub
ret
xorl
xorb
subl
add
push
and
push
mov
xor
xor
sub
in
cmp
stos
push
push
add
inc
ja
sbb
xchg
das
cltd
cmp
je
leave
dec
or
or
sbb
imul
sbb
dec
aam
jecxz
jne
push
jb
fs
sbb
cltd
lcall
add
and
fucomi
cwtl
add
mov
and
add
les
or
int3
pop
gs
ret
pop
aaa
mov
mov
neg
push
cmp
jne
mov
sbb
out
add
adc
ret
mov
push
mov
xor
inc
gs
mov
jne
xchg
push
sbb
inc
pushf
pusha
or
orb
cmp
hlt
add
jmp
or
dec
dec
cmp
and
movsb
insl
sbb
push
lods
bound
mov
dec
jnp
je
mov
adc
lea
imul
push
iret
test
clc
jo
push
jb
push
add
push
mov
mov
out
div
mov
js
imul
popl
shlb
cs
mov
push
cmp
push
mov
sarl
cmp
add
push
lods
adcb
jnp
cmpsl
or
add
and
mov
outsb
mov
adc
nop
jns
inc
adc
mov
lods
cmpsb
xor
stc
and
sti
push
stc
mov
xchg
sbb
std
aaa
mov
or
mov
mov
gs
or
xor
pushf
rclb
addl
mov
and
cwtl
push
xchg
dec
inc
inc
adc
add
and
in
pop
xchg
mov
sbb
adc
ja
adc
dec
mov
pop
sub
xor
cmp
jnp
sub
jo
xchg
addr16
mov
aas
mov
sub
mov
pop
mov
test
push
pushf
pop
push
sbb
cmp
imul
aaa
mov
leave
xor
mov
mov
fcoms
xchg
mov
mov
mov
call
or
mov
dec
push
insl
lods
inc
les
sub
pop
add
inc
jmp
jnp
sbb
ss
addl
call
add
mov
loop
adc
jle
mov
icebp
or
aas
cmp
je
mov
imul
out
lds
jl
jno
or
sbb
jp
sbb
xlat
and
rcll
popf
rclb
jg
mov
loopne
aas
jg
mov
fsubl
push
lea
sub
lds
aaa
dec
or
repz
xorl
sbb
clc
inc
ds
rclb
pop
lahf
pop
pop
cmp
jmp
push
xchg
add
pop
jno
loope
std
fidivrs
int3
sub
cld
push
fstl
push
push
jl
or
xchg
or
and
outsl
gs
push
and
lahf
sub
cmp
xor
dec
cmp
call
leave
cld
add
mov
in
pop
or
lahf
rorl
and
inc
xchg
nop
add
add
pusha
add
xor
xor
sbb
enter
lods
dec
add
ret
outsb
pushl
ds
movsl
mov
stc
int3
push
add
adc
mov
add
arpl
push
cmpsl
push
fs
pop
cwtl
push
loope
adc
rorl
lds
cwtl
rolb
fadds
enter
loope
rorb
sub
jbe
mov
adc
popa
pop
jmp
mov
add
repz
int3
test
hlt
inc
sub
adc
mov
shrb
mov
lahf
pop
mov
mov
jne
jecxz
mov
adc
push
shrl
adc
push
jne
repnz
adc
mov
les
movsl
je
mov
mov
aaa
or
xchg
jl
pop
lock
and
pop
cmp
cmc
mov
mov
add
push
fwait
sarb
cltd
cmp
pusha
ss
andb
rcrb
pusha
cmc
xchg
and
pushl
sti
stc
dec
aas
push
in
adc
jle
xchg
mov
add
or
je
and
ret
into
hlt
movl
fistpll
sub
daa
push
inc
xchg
setno
je
and
and
pop
movl
popf
pop
xor
add
xchg
cld
sbb
out
rclb
cmp
xor
int
sub
dec
sbb
pop
push
insl
cwtl
and
push
push
fisttpl
cmp
xor
fmuls
xchg
add
addb
iret
push
mov
pop
push
femms
idivl
mov
push
adc
push
inc
imul
adc
inc
subl
call
negl
mov
cmpb
sub
inc
lcall
jne
movsbl
mov
movb
aad
rcr
pop
add
pop
cmp
ret
repz
adc
roll
out
cmpb
je
cmp
adc
out
imul
push
or
loop
and
add
gs
xor
jns
push
fs
pop
mov
rcr
mov
mov
jl
adc
mov
repnz
pop
sub
loopne
and
pop
adc
jne
push
rcrb
js
inc
inc
or
mov
and
sbb
cmp
sbb
add
das
push
scas
dec
cmp
insb
test
push
sbb
and
push
mov
movl
jnp
mov
dec
add
idiv
lea
inc
mov
jne
mov
daa
cmpsb
inc
sub
cmp
je
and
sahf
mov
pop
fldl
stos
xor
mov
cld
dec
cld
movsl
and
mov
shll
xor
and
shll
sub
jnp
int
dec
sbb
push
andb
sbb
mov
pusha
add
inc
daa
add
inc
mov
lock
and
cmc
out
or
and
and
push
aas
inc
or
push
stos
rdmsr
adc
push
jne
movsl
push
push
and
je
pusha
xor
fldl
jo
mov
mov
pop
je
sbb
push
in
push
inc
add
test
jl
jmp
cmp
je
sbb
clc
mov
mov
pop
ja
jle
out
xor
ret
mov
push
jne
lods
dec
xor
cmpl
je
and
dec
daa
pop
adc
or
pop
push
fmulp
mov
push
xor
inc
xor
cwtl
fidivrl
insb
pop
jmp
js,pn
and
insb
cmp
cmp
out
out
test
adc
xchg
sbb
dec
mov
inc
std
jmp
addr16
lcall
adc
sahf
cmp
inc
xchg
ret
es
cmp
and
icebp
test
cwtl
sarb
push
stc
mov
lods
sub
push
dec
xchg
push
int3
sbb
push
or
mov
mov
or
loopne
out
jne
out
adc
shll
movsb
add
in
push
adcl
sbb
dec
or
insb
mov
mull
adc
mov
xor
or
pop
mov
repz
inc
in
adc
lods
clc
xchg
mov
xor
adc
cmp
jns
sbb
cld
sti
pop
adc
cmp
adc
leave
das
or
bound
adc
cmp
test
loop
js
xor
sbb
push
xchg
out
sti
inc
je
pop
and
mov
sub
sub
mov
push
cld
cmp
pop
pusha
add
imul
pop
sbb
pop
filds
dec
and
sub
dec
mov
icebp
adc
jge
push
mov
mov
push
jl
mov
inc
sti
pop
hlt
pop
pop
xor
mov
cld
cmpb
je
mov
push
jmp
sbb
cmp
or
push
push
enter
pop
into
std
or
mov
and
xor
jae
mov
ret
xchg
dec
lret
push
jo
push
mov
add
push
inc
xor
add
sbb
inc
adc
movl
add
dec
add
nop
test
and
leave
pop
cmp
iret
xor
jns
add
push
jbe
mov
roll
mov
cli
dec
and
xor
clc
add
mov
sub
push
mov
xchg
mov
or
cmp
cmp
mov
and
test
pop
xchg
push
jo
adc
xor
sub
int
sub
lret
mov
sub
call
add
ret
sub
cmp
aam
or
inc
mov
push
mov
jb
jmp
dec
add
cmp
push
xor
mov
lock
pop
or
cmpb
test
popa
cwtl
pop
add
xor
lds
loope
scas
mov
pop
icebp
mov
insb
add
push
pushl
hlt
mov
jbe
scas
inc
push
jae
sahf
clc
ret
xlat
mov
outsl
jne
das
iret
aad
or
sbb
popa
lret
loope
inc
out
add
xor
cli
insl
jg
bound
mov
or
sbb
pop
lods
xchg
stos
cmp
sbb
js
jle
mov
test
sbb
gs
cmp
jne
add
cmp
cli
xchg
mov
dec
subl
in
inc
fildl
dec
jnp
nop
jo
sbb
test
mov
loopne
test
aad
and
mov
push
decl
ss
dec
js
sbb
or
fistpl
xor
cmp
push
dec
je
mov
sbb
das
push
in
cmpsl
mov
and
xor
sbb
in
or
jo
inc
addr16
xlat
cwtl
push
sub
out
sbb
sbb
push
inc
fs
imul
add
js
push
adc
push
jno
xchg
subl
enter
sbb
mov
loopne
imull
test
sbb
test
incb
pop
or
lret
mov
out
roll
or
dec
pop
sub
lock
or
sub
nop
mov
push
add
pop
in
fimuls
fmull
pop
or
mov
and
dec
dec
in
inc
cs
inc
inc
cs
sub
pop
enter
sub
dec
sbb
pop
push
add
cli
popf
add
add
xor
mov
add
push
cld
stc
push
lock
in
add
cld
add
stc
shl
sbbl
jl
pop
mov
push
sbbl
jl
pop
push
punpckhbw
jl
pop
xor
push
sbbl
xlat
push
clc
clc
pop
adc
lock
iret
mov
decl
aad
and
xor
rcl
in
insb
xchg
or
clc
mov
rcll
test
nop
pop
bnd
or
xorb
adc
pop
insb
sub
in
inc
inc
pusha
int3
dec
push
xchg
es
addb
fs
imul
fs
inc
clc
dec
cmp
enter
cmp
xor
xor
xor
repz
cmp
add
xor
out
call
sbb
dec
popa
mov
pop
sbb
sbb
loopne
pop
sub
inc
ljmp
mov
popf
shl
test
or
mov
sbb
sub
fiaddl
and
pop
xor
jb
pushf
and
or
aad
in
sahf
inc
mov
adcb
mov
jns
or
fs
inc
sub
nop
xchg
mov
nop
xchg
or
nop
xchg
or
push
xor
repnz
cmp
repz
sub
and
dec
or
fwait
and
xchg
insb
add
xor
test
cmp
adc
lea
adc
push
jb
push
xor
imull
andl
mov
call
jns
idivb
fs
enter
fs
push
mov
enter
lods
idivb
mov
cmpsl
pushf
xchg
or
enter
test
mov
cmpb
jns
and
insl
and
inc
inc
cs
or
sub
jne
arpl
roll
pop
sbb
movb
mov
subb
jnp
test
cmp
and
and
xor
xor
lods
aaa
jo
cs
jne
push
mov
dec
adc
sbb
inc
pop
or
das
fs
add
xor
les
jb
mov
or
enter
pop
inc
outsb
das
fs
xor
in
in
xor
sbbl
aam
mov
sub
inc
cs
shlb
jmp
in
pop
sbb
nop
inc
es
mov
test
enter
nop
inc
cs
outsb
sbb
inc
push
mov
leave
or
das
xchg
into
or
and
xor
test
jb
mov
pop
js
sbb
inc
sub
fs
adc
push
clc
sub
inc
cs
insl
pop
push
test
push
and
xor
aam
cmp
sbbl
cmp
bound
test
add
sbb
imul
jge
mov
hlt
inc
mov
adc
mov
sahf
or
cmp
adc
cmpb
inc
cmpsl
es
push
mov
cmp
add
repnz
hlt
sbb
mov
jl
cmp
int3
add
cmp
int
mov
add
sub
push
cmp
push
stc
mov
movsl
vmwrite
jne
sti
push
xchg
push
jle
test
xchg
pop
adc
xchg
dec
fildll
cltd
nop
hlt
outsb
je
and
inc
cmpsb
jbe
cmp
xor
sbbb
and
repz
adc
aad
out
or
rolb
jo
bound
mov
sbb
addr16
nop
mov
xchg
add
sbb
outsl
pushf
cmp
push
jb
jne
insb
repz
mov
dec
jns
pop
rorb
xchg
add
daa
gs
adc
cmpsl
lock
dec
pop
xor
in
xor
cmp
cmpsl
adc
mov
lods
push
adc
cmp
dec
clc
add
pop
pop
lods
ret
out
jne
jno
add
fsubl
add
adc
inc
cmp
sub
cmpsl
xchg
and
or
push
push
in
xlat
call
jmp
sti
js
in
loopne
add
cwtl
pop
leave
aam
inc
adc
enter
int3
jb
push
loope
test
cmp
push
and
add
aad
push
aam
xchg
add
sbb
in
sub
stos
mov
adc
cmp
movb
rcll
fmuls
pop
cmpsl
je
jne
push
popf
add
je
add
add
add
stos
fnstsw
nop
adc
and
icebp
pop
push
popa
pop
pop
or
xor
cmp
addl
cltd
sbb
cmp
pop
inc
jg
add
pop
pop
cmp
and
repnz
adc
fs
mov
sub
daa
or
and
xchg
pop
fs
jbe
cld
icebp
and
sbbl
xchg
lock
xchg
or
and
or
in
and
pop
xor
test
hlt
push
mov
or
in
fs
js
negb
mov
fbstp
mov
inc
dec
pop
enter
movsb
nop
or
in
pushf
push
nop
inc
cs
aas
nop
enter
enter
nop
xchg
pop
xor
push
mov
nop
xchg
pop
xor
jo
bound
sub
sbb
icebp
cltd
sbb
inc
sbbb
xor
test
xchg
pop
loopne
dec
leave
jb
inc
push
cmp
adc
pop
mov
cmpsb
pop
jb
rcr
mov
in
adc
push
jb
daa
daa
dec
adc
cmp
inc
push
hlt
mov
and
das
in
test
sbb
adc
jns
daa
adc
adc
das
fs
or
jb
daa
add
lock
jb
inc
pop
push
hlt
inc
dec
pop
enter
or
inc
inc
aam
pop
enter
rolb
or
fmul
gs
jl
daa
fmulp
push
mov
or
inc
push
mov
enter
mov
cmp
andl
or
nop
inc
mov
add
scas
and
mov
cmc
pop
add
ret
shlb
xor
mov
fistps
sbb
add
iret
pop
push
movsb
adc
loopne
lods
xchg
cmp
cmp
movsl
dec
bound
inc
arpl
ffreep
xchg
sub
add
xchg
mov
inc
movl
push
xor
xor
xlat
nop
add
lock
test
xchg
das
mov
or
je
and
mov
sbb
daa
sahf
push
and
dec
lock
shrb
mov
hlt
jne
add
sub
and
loop
push
cmpsb
or
or
jns
add
movsb
add
shlb
out
dec
enter
out
xchg
ss
repz
inc
adcb
or
push
push
sub
xor
aaa
xor
or
cwtl
pop
push
xchg
arpl
mov
stos
loope
xchg
int3
call
out
and
cmpsl
inc
sub
fimull
sbb
dec
pop
loop
mov
imul
jns
inc
cmc
mov
test
push
xor
push
mov
push
push
adc
mov
mov
or
loop
and
fisttpl
mov
data16
fists
xchg
enter
lea
clc
test
xor
mov
sahf
outsl
adc
movsb
add
loope
jae
sbb
and
das
inc
jmp
je
sub
out
mov
sbb
sbb
sub
sbb
mov
add
push
xchg
ret
pop
nop
repz
xor
aad
adc
sarb
mov
adc
pop
mov
xchg
lcall
and
jle
sub
popf
inc
dec
and
adc
in
adc
add
shll
adc
inc
out
enter
inc
adc
or
out
aas
sub
test
cmc
mov
imul
adc
mov
ret
ret
insb
out
scas
push
fsubrs
push
movsb
fadd
outsb
xor
mov
adc
jnp
jo
adc
jg
pop
cli
sbb
flds
stc
testl
cmp
out
int3
sbb
jl
out
rorl
xor
dec
mov
inc
dec
mov
sbb
sbb
push
cmpb
addb
cld
cmp
mov
add
add
cli
sub
push
push
fcoml
xor
mov
cld
fcomi
jne
aas
push
dec
ljmp
out
int
jmp
mov
adc
loope
insl
dec
jae
jb
cwtl
in
wrmsr
cmp
cmp
add
mov
add
test
punpcklwd
jnp
cmp
aad
sub
rcrl
fldenv
js
mov
dec
lea
sbb
clc
add
int
jae
push
pop
adc
shll
ja
jne
jae
and
mov
xorb
orl
push
and
jnp
inc
push
mov
fnstenv
jg
push
adc
sbb
fbstp
sbb
imul
mov
rorl
aaa
lcall
and
pop
add
je
push
es
popa
js
push
or
add
mov
xbeginw
mov
push
push
cpuid
adc
jae
in
xor
or
inc
leave
popf
pop
adc
es
test
push
mulb
add
je
dec
mov
add
mov
sbb
psubb
jle
xor
inc
mov
dec
rcrb
arpl
sti
pop
mov
jle
jl
mov
js
push
cmp
inc
das
into
sbb
pop
jmp
mov
jl
cwtl
mov
jno
lea
cmpl
pushf
adc
mov
or
ss
adc
data16
mov
cmp
jge
jmp
adc
push
jmp
mov
popf
idivb
xor
in
jecxz
aas
push
adc
pop
push
inc
fisubrs
or
push
fwait
lret
and
sub
sub
sbb
out
fs
cmp
sub
mov
insl
insb
sbb
mov
movsl
pop
cmp
dec
mov
push
push
fimull
dec
add
sarb
push
inc
xor
xorb
xchg
lods
inc
scas
push
or
aad
xor
and
cmp
and
andb
das
call
bound
push
dec
outsl
das
enter
sbbb
jae
stos
outsl
push
clc
sbb
xchg
push
imul
pop
or
pop
cmp
and
pop
sub
inc
push
push
call
roll
push
repz
cmp
sub
and
mov
adc
fs
pop
sbb
pusha
hlt
in
push
outsl
pop
sub
sti
xchg
mov
sbb
cmp
stc
in
sar
mov
cld
jo
mov
fs
mov
jns
enter
shll
add
cmp
aam
loopne
cmp
jle
push
mov
sbb
idivl
sbb
out
sub
loopne
xchg
outsl
int3
adc
dec
loopne
or
push
scas
test
clc
repz
hlt
mov
pushf
movsb
out
xchg
popf
push
mov
push
push
xor
pop
icebp
lods
adc
nop
lret
and
out
fsubr
push
enter
cmp
out
insb
adc
out
jecxz
and
imul
lsl
or
pop
add
adc
push
lock
repnz
je
jne
mov
scas
cwtl
cmp
movzbl
daa
mov
or
rorb
repnz
shrb
jns
out
xor
push
adc
in
or
or
jno
mov
repnz
dec
and
jmp
repnz
repnz
jg
sub
pop
push
ja
stc
mov
test
outsl
push
sub
or
dec
nop
sbb
mov
sbb
pop
xor
sbb
or
int3
and
xchg
dec
sarl
sub
dec
xchg
jecxz
add
push
inc
or
out
jb
and
mov
add
test
pop
not
and
and
enter
out
cli
cwtl
loop
jecxz
pop
repnz
cwtl
jecxz
in
cmp
in
int
jns
nopl
in
sbb
leave
xchg
add
push
loop
sbb
xchg
loop
nop
loop
aaa
nop
and
dec
xchg
or
ljmp
call
and
aam
sti
pop
xchg
jmp
aas
push
ljmp
jg
adc
mov
ljmp
lods
je
mov
jp
pop
hlt
xchg
and
sbb
pop
sub
push
enter
shr
sbb
sub
xchg
cld
mov
lock
and
and
dec
sub
xor
movsb
test
xor
mov
or
and
adc
and
push
cmp
stc
out
mov
jl
xchg
and
jecxz
push
leave
mov
cmp
push
adc
mov
inc
mulb
xor
cmp
cmp
sub
call
pop
pop
pop
xlat
mov
push
adc
pop
shr
or
xchg
mov
mov
decl
in
popf
adc
and
inc
jmp
mov
cmp
xchg
int3
in
add
cwtl
popf
rclb
jg
dec
sbb
mov
ds
test
jmp
jb
adc
inc
enter
je
sub
xor
aam
or
sbb
popf
push
sub
pop
adc
xor
mov
std
fsts
pop
sbb
push
rorb
and
loope
js
cmpsl
leave
into
outsl
mov
xor
push
add
sub
push
cmp
shlb
pushf
rclb
dec
je
and
test
cmc
nop
adc
mov
call
mov
and
dec
inc
add
popf
adc
das
in
xor
ss
popa
inc
push
add
push
add
insb
jecxz
or
into
dec
fdivs
mov
xor
push
mov
mov
call
pop
and
repnz
out
sub
add
test
popa
dec
enter
movsb
test
inc
and
push
faddl
pusha
cmp
clc
data16
inc
call
or
inc
lock
shlb
mulps
sbb
inc
ss
ret
cmp
stos
je
cmp
inc
call
out
cmp
fcompl
mov
shll
inc
js
push
jle
jae
leave
xor
ss
xchg
pop
add
flds
or
inc
and
pop
loopne
cmp
int
jmp
sub
or
push
repnz
push
lods
inc
sub
and
aas
mov
push
lcall
and
cmp
pop
add
adc
sbbb
jo
xchg
jno
jmp
aad
pusha
orb
shrb
mov
lcall
aad
int3
fs
cmp
pop
push
shll
je
movsl
stos
sbb
out
adc
scas
js
ret
out
pop
push
ret
pop
arpl
dec
sub
outsl
cltd
loopne
jmp
cmpb
in
popa
sarb
push
adc
test
stos
inc
add
aad
inc
enter
fisubl
mov
cmp
xchg
sbb
stos
cwtl
dec
add
leave
and
rcll
add
and
inc
nop
push
jl
icebp
das
popa
xlat
or
loop
adc
add
imul
push
pop
jg
inc
mov
pop
xor
inc
xor
loope
sub
gs
insb
sub
mov
mov
xor
mov
and
mov
mov
rcrl
add
mov
mov
jo
leave
mov
mov
and
pop
das
add
in
or
and
push
pop
shlb
and
cli
pusha
pop
or
sbbb
loope
cmp
or
rorl
sbb
fdivs
daa
add
dec
aas
mov
push
add
jo
sti
push
sub
sub
or
xor
and
imul
cmp
sti
jne
js
jl
call
inc
push
ret
je
push
in
sub
fnstcw
xlat
mov
inc
jne
mov
mov
pushf
in
pop
jb
xchg
in
add
or
add
add
loope,pn
ja
je
inc
sbb
xor
inc
xchg
pop
lock
ficoms
mov
cwtl
or
js
outsb
adc
or
push
push
insb
in
or
in
lock
and
mov
or
test
pop
push
xchg
xor
loope
jnp
out
out
xor
pop
sub
xor
or
or
jmp
push
push
arpl
jecxz
push
mov
mov
jg
scas
in
mov
lret
and
fcoms
nop
adcb
mov
push
and
popf
flds
bound
pop
jbe
and
loop
mov
faddl
dec
pop
jecxz
jecxz
cmp
xor
movsb
add
jle
out
fstpt
inc
je
cmp
inc
pop
call
repnz
adc
les
xor
adc
inc
pop
daa
lahf
mov
or
in
js
aad
call
hlt
loop
movsb
bound
fidivrs
enter
pop
push
test
add
loop
xchg
xor
pop
pop
imul
pop
push
push
mov
mov
pop
add
aaa
shl
mov
push
pop
mov
push
mov
jg
hlt
cmp
inc
or
loop
push
cmpsl
mov
adcl
mov
push
push
adc
loop
mov
je
pop
inc
or
cmp
cmp
insb
xor
jp
bndstx
or
lds
andb
loope
push
xor
inc
push
add
mov
xchg
int3
mov
pushl
imul
loope
adc
push
sahf
add
aaa
decb
loopne
cmc
jmp
push
push
shrl
sbb
lea
mov
xchg
sbb
rcll
pusha
loope
mov
push
push
mov
sbb
in
bound
mov
leave
xchg
lea
imul
pushf
jl
xchg
cltd
mov
daa
outsb
movsl
cmp
es
popl
subb
push
aaa
pop
sub
and
cwtl
loopne
fdivs
push
pop
mov
movsl
add
loop
or
dec
lahf
dec
pop
jbe
loopne
and
jae
iret
adc
push
inc
lea
mov
mov
lds
arpl
pop
mov
xchg
pop
je
loopne
loopne
pusha
rolb
subb
pop
ss
mov
adc
cwtl
icebp
pop
xor
hlt
dec
push
daa
mov
sub
push
cmp
int3
pop
frstor
loopne
mov
repnz
add
mov
aas
mov
cmp
mov
cmp
lret
shll
sti
or
sbb
xor
fwait
mov
mov
pop
mov
mov
ret
daa
lahf
jecxz
push
dec
mov
fildll
and
sbb
sbb
int
pop
pop
adc
push
sub
outsl
inc
je
mov
mov
lea
push
or
mov
pop
out
loopne
sub
std
js
repnz
sbb
sbb
adc
and
inc
xor
in
sti
orl
mov
jl
jne
inc
loope
jb
pop
push
cmp
or
cs
add
xchg
or
cmp
or
and
and
push
inc
arpl
dec
in
int
test
nop
sbb
xorl
dec
cmp
and
jmp
push
ret
int
decl
add
and
lods
inc
daa
incl
lret
cmp
leave
inc
loopne
clc
in
cs
movsl
sbb
or
push
stc
jbe
pop
jne
les
xor
lock
je
jne
mov
pop
filds
xor
fwait
sub
arpl
jmp
mov
ss
or
movsb
add
test
xchg
pop
lret
dec
mov
jecxz
xchg
nop
out
in
sub
loopne
cwtl
or
mov
out
xchg
daa
and
enter
xor
mov
cmp
xchg
inc
or
jns
in
adc
mov
jmp
rclb
jmp
mov
xor
adc
movsb
repnz
add
js
lcall
add
aaa
push
cmp
sbb
add
enter
icebp
cs
loop
out
add
add
mov
inc
mov
call
in
repnz
push
add
cmp
or
add
test
jmp
xchg
bnd
popa
das
or
jne
shl
dec
inc
inc
xchg
outsl
sub
inc
js
cmpsb
and
push
lret
sbb
aad
add
cwtl
loope
xchg
popa
sbb
rclb
imul
push
add
cmc
insl
mov
and
in
push
adc
enter
dec
in
inc
cmp
mov
jl
nop
pop
dec
and
mov
dec
cmp
andl
movsb
add
sub
or
pop
sub
add
lret
mov
and
adc
pop
fisubrs
js
inc
push
xor
or
addl
adc
mov
subb
jmp
lea
jmp
cmpb
push
sbb
lret
fidivrl
and
movsl
iret
outsl
mov
adc
lods
ror
shlb
sbb
fwait
int
mov
xchg
or
and
scas
inc
pop
ljmp
fwait
pop
and
push
add
push
mov
shlb
fiaddl
fs
add
fisttpll
or
dec
lods
mov
aas
add
adc
inc
cmp
xor
sub
lods
std
je
add
in
add
adc
dec
cmp
shrb
dec
jo
ljmp
popf
add
sbb
jns
add
and
adc
fcoml
adc
test
std
jl
movsb
or
ror
cmp
cmp
imul
push
repnz
push
sub
je
push
lcall
mov
xchg
pop
addl
mov
sub
fsubrl
jg
inc
aad
sub
sub
xor
push
adc
stos
xlat
sub
sbb
mov
fwait
xchg
sbb
pop
xchg
xor
xor
in
sub
testb
and
cltd
inc
xchg
inc
cmpsb
pop
sbb
testb
nop
iret
sub
sahf
push
divb
mov
cld
pop
pop
or
enter
inc
es
insl
mov
adc
mov
sti
in
mov
sbb
mov
cmp
pop
inc
mov
dec
push
rorl
jae
fistpl
xchg
jecxz
push
push
or
or
jmp
mov
js
mov
jne
fildl
add
jnp
and
loope
and
mov
mov
jp
sbb
adc
and
mov
lret
xor
sbb
mov
orl
xor
inc
add
iret
xor
dec
sbbb
push
rorb
jmp
sub
push
aam
fwait
add
dec
sub
stos
les
inc
cld
and
lds
inc
pop
sub
arpl
pop
pop
mov
dec
jmp
dec
inc
push
adc
jl
xchg
push
or
test
fwait
arpl
and
mov
xchg
adc
leave
and
sbb
int3
jmp
or
mov
addl
sbb
adc
in
rcll
pushf
bound
lea
push
es
fidivl
sub
ljmp
mov
movsl
hlt
mov
sarl
lea
daa
inc
sub
pop
js
push
jl
les
or
cmp
xlat
add
inc
pop
lea
cltd
sbb
add
add
cmpsl
mov
push
cmp
rclb
and
cwtl
nop
cmp
add
adc
inc
and
push
sbb
pop
test
adc
insl
aaa
test
dec
add
mov
mov
daa
js
aaa
and
lea
or
add
add
xchg
lods
outsb
mov
push
test
inc
sbb
fldlg2
adc
adc
xchg
ljmp
rclb
and
and
xorps
clc
fadds
aam
inc
sub
pushl
test
insb
stc
mov
inc
sti
push
mov
fnop
dec
insl
cmpsb
xchg
fsubrs
or
or
mov
cmpsb
frstor
fiadds
jg
push
cmp
mov
push
jo
sub
jo
fcompl
popa
sbb
push
pusha
push
mov
sub
push
add
push
sbb
add
xlat
outsb
xor
scas
dec
add
xor
roll
fwait
movb
int
movsl
mov
rolb
cmp
push
push
push
sbb
xchg
jns
add
push
in
mov
shl
xchg
adc
test
imul
stos
or
cmp
test
fmull
adc
or
je
xor
adc
inc
fidivrs
icebp
fdivrl
movsl
lock
mov
test
fnstenv
and
and
enter
and
push
fwait
stc
cmp
and
xor
dec
lds
sbb
add
inc
jne
add
inc
mov
cmp
push
adc
fsts
and
adc
das
cmp
pop
shlb
leave
inc
lret
push
push
xchg
push
orl
push
notl
lock
inc
pop
inc
loopne
rcrb
call
rolb
ljmp
decl
or
jmp
mov
dec
mov
jnp
xchg
in
fadd
or
lret
ds
xchg
loopne
sahf
dec
sub
mov
mov
js
enter
int3
lea
lods
pop
mov
sub
je
push
loope
nop
inc
push
mov
cvttps2pi
fs
xchg
jmp
ret
leave
or
sub
xchg
mov
loopne
jne
inc
fadds
sbb
or
sbb
or
cmp
lcall
sub
dec
fcomps
in
movl
shl
jb
out
fisttpll
sbb
mov
fcos
mov
dec
fucomi
sub
sbb
xor
mov
mov
mov
xor
add
add
lcall
push
mov
cmp
pop
add
dec
cld
cltd
push
in
xor
mov
and
sub
test
jmp
jo
dec
cmpsl
pop
cmpsl
adc
out
pusha
mov
mov
or
cmp
dec
repnz
jg
out
or
jp
mov
xchg
mov
cmp
lret
hlt
std
cmp
or
mov
pop
inc
sbb
add
and
push
sub
lods
movsb
dec
and
clc
and
pop
movsb
movsl
cltd
pop
fcmovnu
inc
inc
popf
std
bound
sub
fucomip
cmpsb
or
cmp
jb
mov
or
cld
stc
hlt
xor
jns
data16
sti
and
insl
sub
movb
addl
scas
push
nop
popa
mov
lock
xor
sub
inc
push
aaa
inc
mov
cmp
pop
js
popa
in
pop
pusha
sub
cmp
push
fs
fdivl
fisttpl
lock
push
sub
sub
or
clc
adc
repnz
and
int3
xor
subl
out
ret
not
xchg
mov
ret
pop
push
jb
aaa
test
aam
inc
mov
inc
les
cmpb
push
mov
pop
mov
or
insb
sbb
push
jl
add
mov
mov
jl
lods
add
outsb
push
pop
mov
imul
test
popf
lock
mov
jnp
mov
inc
cmp
mov
jmp
push
push
cld
pop
pop
push
rclb
adc
enter
repnz
and
ds
cmp
dec
xor
repnz
mov
mov
or
xchg
xchg
lods
aam
mov
js
cld
iret
add
xchg
xor
push
pushf
sbb
cmp
dec
gs
hlt
push
rorl
imul
adc
xchg
daa
sbb
test
or
rolb
xchg
faddl
add
or
and
pop
and
sbb
sbb
lret
and
inc
inc
xlat
adc
add
rol
fnstenv
je
jmp
jmp
push
mov
packsswb
pop
push
test
call
fsubr
ja
popf
frstor
pushl
pop
notb
dec
pop
adcb
xchg
insb
lds
jl
dec
sbb
dec
lock
enter
rcll
push
mov
jge
and
pop
enter
xchg
and
push
sbb
sbb
push
hlt
sbb
xchg
jae
movsb
hlt
push
pop
testb
add
and
xchg
or
or
test
jmp
push
xorl
sbb
inc
lds
imul
add
cmp
mov
lahf
fwait
pop
cli
popf
push
stc
loop
sub
inc
mov
add
push
push
mov
call
pop
inc
mov
adc
loopne
stos
or
loopne
loop
mov
sarl
inc
or
mov
mov
fsubs
jecxz
movsl
push
add
add
es
ret
in
lock
or
lods
adc
mov
int3
out
shll
xor
pop
sub
mov
push
cwtl
js
popf
je
in
adc
mov
rorb
push
lcall
sub
sti
sbb
enter
mov
xchg
movsb
inc
mov
out
ja
and
mov
lods
lret
xor
push
adc
add
les
mov
cmp
cmp
pop
push
adc
incl
xor
pop
add
inc
dec
pop
sub
push
mov
in
dec
js
inc
inc
xor
mov
push
xor
into
push
mov
inc
cmp
ficompl
test
xchg
aam
fucomp
aaa
mov
and
jge
orl
idivb
int
pop
inc
cmp
and
cli
jl
andb
fimuls
es
sbbb
sbb
and
inc
sbbl
push
jne
int
push
and
add
pop
rorl
hlt
jae
sbb
aaa
movsb
fabs
xchg
lcall
xchg
or
and
rcrb
mov
sbb
sbb
mov
aam
daa
cmpl
fiadds
je
adc
sti
push
lcall
add
std
insl
repz
mov
or
mov
jge
pop
jne
mov
jne
lahf
repnz
out
fsubs
pop
add
adc
jge
mov
int3
repnz
xor
inc
test
rclb
pop
es
mov
rcll
lock
clc
dec
mov
hlt
mov
push
lds
fiaddl
inc
pop
mov
jmp
dec
mov
add
cmp
adc
pop
mov
and
ss
aas
mov
sub
and
inc
push
xchg
es
loopne
cltd
pop
lcall
mov
or
loopne
cld
add
adc
push
clc
in
pop
jl
mov
inc
idivl
push
xor
jnp
sarl
or
ret
pop
dec
daa
cmc
or
mov
push
ret
push
inc
enter
movsb
and
dec
jb
in
int3
jnp
inc
xchg
fimuls
pop
adc
sarl
pop
repz
sbb
aam
mov
outsl
shlb
fadds
inc
shll
or
loopne
xor
or
les
jecxz
sar
sbb
ret
xor
fwait
mov
scas
and
fcmovb
subl
xor
inc
fwait
sar
jnp
add
les
fcoml
daa
or
bound
dec
clc
push
sub
es
xlat
jmp
xor
pop
sbb
je
mov
mov
adc
cmpsb
aaa
dec
push
sbb
mov
inc
mov
ret
cmp
incl
sbb
sub
dec
rolb
push
adc
pop
lret
je
xor
sub
xchg
inc
xchg
dec
mov
lock
cmp
cwtl
jne
sub
pop
pop
aas
adc
fstl
mov
push
inc
cmp
pop
xchg
lea
push
xor
and
or
and
or
mov
call
ja
sbb
inc
pusha
outsl
dec
push
mov
fbstp
jo
or
or
test
inc
lret
leave
shll
sub
pusha
mov
add
enter
add
push
fmul
pusha
gs
lret
cmp
dec
out
cltd
shr
push
mov
add
xchg
jge
cmpb
or
orb
je
jp
jae
adc
fnstenv
add
lea
dec
inc
loop
int3
sbb
dec
mov
sub
int
outsl
push
mov
cmpsb
xchg
or
jmp
push
adc
sbb
mov
addb
cmpw
pop
jne
sub
jo
test
add
enter
add
add
mov
dec
dec
push
stos
pop
pop
cld
jbe
scas
sti
xchg
rol
cmp
mov
rcrb
stos
addb
push
jmp
mov
hlt
xor
and
dec
push
dec
adc
push
add
and
fs
loopne
add
nop
add
or
loopne
inc
push
sbb
add
nop
add
inc
pop
add
add
fs
inc
dec
les
sbb
mov
inc
rcll
adc
adc
loopne
or
or
in
inc
sbbl
add
lods
testb
icebp
leave
mov
cltd
in
repnz
jecxz
add
lcall
repz
xchg
mov
push
cld
or
and
xor
rclb
test
je
add
sbb
orl
add
pop
rorl
lods
ds
shrl
sbb
push
dec
out
addr16
cmpsb
in
loopne
push
rorl
mov
inc
repz
sub
cmpsb
jo
inc
into
push
xchg
in
cs
ret
or
es
dec
xlat
inc
or
cmp
ror
sub
lcall
cmpl
cmp
mov
push
dec
orl
jmp
xchg
daa
in
push
adc
sub
xchg
icebp
add
push
out
sub
push
inc
xchg
lret
adc
in
push
fistpll
dec
push
dec
inc
mov
add
frstor
push
das
jnp
lods
xlat
or
jmp
push
jmp
aad
mov
shlb
adc
fwait
ret
pop
xor
adc
sub
push
and
lods
pop
popf
adc
sub
lahf
cmp
bound
mull
jp
push
jmp
loopne
mov
je
ds
adc
or
sar
mov
subb
and
mov
bound
inc
add
roll
daa
cmp
cs
add
inc
mov
pop
gs
cmp
jle
push
ret
ds
mov
add
dec
inc
and
into
scas
js
dec
mov
mov
ja
fists
jecxz
sub
lock
push
mov
icebp
pop
pop
ja
fadds
test
adc
mov
and
adc
call
mov
insl
pusha
sub
bound
push
mov
xchg
mov
fcomp
fiaddl
lahf
adcb
in
inc
add
push
leave
jl
sub
std
mov
dec
pop
fdivl
push
xor
and
sbb
hlt
dec
mov
xlat
mov
arpl
jmp
jnp
pop
inc
jae
adc
bound
sbb
sbb
std
dec
push
mov
push
or
add
mov
push
adc
add
movb
sti
or
inc
inc
mov
cmp
jb
inc
mov
cmovb
ja
push
cmp
test
call
jns
addr16
mov
xbegin
mov
sbbl
ret
mov
mov
sub
cmp
fs
sbb
mov
jno
cli
add
enter
jg
popl
push
cmp
je
cmp
call
jbe
xchg
jmp
cmp
stc
sahf
or
jne
mov
jmp
sti
cld
or
jmp
pop
cmp
testl
or
pop
or
inc
lcall
repz
dec
xchg
and
adc
mov
fcoml
push
sub
jne
mov
xchg
sub
add
push
ret
hlt
pop
js
jmp
sbb
push
in
into
cmpsl
or
or
sahf
or
mov
sbb
stos
popl
test
cmp
xor
mov
sarl
add
dec
test
add
ds
cmp
pop
xchg
xorl
pop
jle
pop
in
lea
aaa
adc
mov
cmp
pop
push
sub
push
push
push
fimuls
je
aaa
je
jge
movsb
jmp
data16
and
aam
pop
add
test
les
inc
add
push
dec
dec
push
add
cmp
repz
lea
test
out
icebp
stos
out
push
mov
hlt
std
adc
adc
sub
ja
cmp
adc
push
xor
inc
sub
sahf
les
aam
ret
sub
add
adc
mov
mov
pop
pop
pop
pop
std
clc
fwait
sub
jne
inc
mov
lock
xor
add
add
in
mov
mov
push
or
lahf
jge
pop
shlb
inc
mov
jbe
mov
shr
cmp
jge
out
out
or
inc
cmove
push
or
clc
pop
cmp
xchg
dec
dec
loop
mov
push
icebp
dec
sarb
outsl
fadds
add
xor
xchg
fwait
or
or
mov
in
xlat
lds
mov
and
in
add
das
mov
test
nop
inc
mulb
mov
pop
xchg
and
cld
lahf
test
popa
push
or
mov
xor
mov
js
jl
ret
adc
repnz
xor
or
add
or
add
lods
sub
fbld
lret
pop
notl
mov
shr
repz
loope
loop
out
inc
lock
loope
cmp
pusha
or
jle
in
push
push
movsb
insl
adc
cmp
or
sbb
mov
and
adcb
cs
fcomps
xor
outsl
pop
sub
xchg
inc
push
dec
push
mov
mov
fdivs
into
push
adc
sub
pop
cmp
push
or
push
xchg
xchg
pop
sub
jno
and
shlb
je
and
jbe
adc
shrb
push
or
adc
ret
out
push
jns
xchg
add
inc
sub
xchg
jo
lea
and
mov
jns
adcl
cli
lret
pop
and
mov
push
add
or
cmp
jg
mov
movl
loopne
ret
cmp
je
adc
inc
jmp
inc
adc
mov
sub
popf
lods
movb
or
sub
sub
or
daa
sti
inc
inc
dec
mov
int3
pop
or
sbb
push
sahf
js
push
arpl
gs
pop
sub
push
cltd
dec
push
das
insb
pop
adc
imul
add
mov
mov
push
sub
lods
fidivrs
das
jmp
stos
mov
leave
pop
add
adc
pusha
xchg
xchg
test
int
out
pop
stos
xchg
add
rorl
dec
pushf
ret
cli
mov
loope
push
jg
test
nop
das
ja
je
push
mov
cli
pop
fistpl
bound
cld
cli
je
jnp
adc
notl
xchg
leave
mov
xor
mov
mov
cmp
adc
adc
jmp
in
adc
jns
stc
or
jo
lock
push
mov
or
in
push
xchg
rolb
fistps
test
push
hlt
je
inc
enter
pop
shlb
lahf
cmp
xor
jne
xchg
gs
movb
loop
out
mov
call
inc
sti
pop
pop
inc
mov
into
sub
cmp
push
pop
out
or
flds
fimull
in
fdivrp
les
add
xchg
mov
adc
test
and
inc
cmp
dec
dec
cmc
push
lds
nop
or
int3
push
stos
adc
addr16
and
test
les
hlt
aas
clc
cmpsl
adc
mov
xchg
inc
clc
cmp
jb
test
and
sub
mov
les
or
or
dec
mov
sub
nop
out
inc
and
sub
ret
testb
mull
mov
clc
and
xchg
cmpsl
and
sbb
arpl
push
xchg
stos
aaa
xchg
xor
aad
imul
cmp
pushf
or
sbb
add
ds
inc
sbb
jmp
push
mov
xor
push
mov
pop
and
je
push
add
jmp
xchg
cmp
mov
cmpb
mov
mov
mov
les
push
sbb
push
idivl
icebp
mov
jb
cmp
ja
xor
push
push
ja
dec
orl
cld
pop
iret
test
pop
ja
jb
cmpl
add
jns
lcall
inc
cmp
dec
lcall
sbb
out
jns
sbb
or
mov
idivl
sbb
add
adc
ds
ror
hlt
push
xorl
mov
repz
cmp
data16
fs
inc
jne
bound
jo
cmp
xchg
cmpsl
lea
and
push
pop
jne
mov
inc
mov
jne
push
fsubs
iret
mov
aam
add
sbb
int
clc
int3
imul
cmp
daa
sahf
sarl
cltd
or
or
push
mov
mov
dec
popa
lret
insb
in
std
and
scas
rorl
rolb
add
out
dec
lea
shl
mov
shlb
aaa
and
cmovs
add
xor
xchg
sti
aam
add
outsl
mov
aam
push
daa
aaa
in
xlat
andb
movsb
repnz
andl
xchg
mov
xchg
jo
inc
sbb
xchg
sbb
lret
fldenv
push
cwtl
notb
sbb
mov
and
in
sbb
push
cmc
or
movsb
std
pop
or
rep
shll
out
xchg
je
cs
decl
cmp
movsb
xor
clc
clc
xor
mov
push
adc
test
test
push
xor
pop
xchg
push
test
sti
cli
push
or
mov
jo
out
adc
pop
cmp
daa
aaa
sbb
push
les
mov
sub
or
mov
rclb
in
in
add
es
mov
push
leave
ds
lods
movsl
loope
mov
add
cmp
scas
mov
sbb
dec
inc
add
test
and
std
test
movsl
lea
adc
repz
cmp
add
and
push
xchg
data16
xor
pop
sar
or
or
sar
mov
stos
mov
cmpsl
and
sbb
dec
movsl
push
int3
adc
int3
sti
push
xchg
fimuls
dec
xchg
imul
mov
xor
and
mov
and
dec
lods
pop
test
orl
les
xchg
cltd
push
fs
daa
fsubrl
out
movb
fidivs
and
adc
sub
ret
loopne
push
xchg
sub
inc
dec
sub
sub
push
mov
sbb
push
mov
cltd
call
lret
xor
rcl
mov
in
pop
or
jne
add
pop
aas
inc
out
or
in
adc
cmp
inc
outsb
dec
mov
push
xchg
xor
cmc
push
mov
or
xor
mov
movsl
in
ja
push
cmpsb
lea
pusha
mov
movsb
mov
fiadds
aam
les
xchg
fldt
icebp
cltd
loope
sub
loop
cltd
mov
pop
cmp
shrl
xlat
sub
cmp
xchg
fnstenv
mov
std
inc
sbbl
dec
lds
add
inc
ss
push
push
or
sbb
fildl
jl
test
mov
in
inc
add
lods
dec
inc
adc
inc
lods
sbb
cmp
sbb
sbb
push
mov
mov
jne
sub
cmp
ja
and
jl
and
cmp
pushf
fimuls
cmp
decb
jno
daa
arpl
jne
aad
pop
and
mov
inc
sbb
cs
rorb
mulb
dec
dec
cmpsb
push
out
lods
clc
jne
mov
add
dec
fistps
inc
add
loopne
test
lds
arpl
ficoms
outsl
or
dec
rorb
add
dec
mov
sub
stc
push
int3
cmp
sbb
rorb
leave
int3
adc
into
data16
cs
cmpsl
cmp
mov
shrl
push
push
cltd
mov
jg
mov
sbb
xchg
mov
mov
inc
fcomps
add
xorb
mov
adc
pop
jp
popf
sub
dec
sbb
pop
add
mov
in
sub
xor
jmp
lea
xchg
test
dec
jae
mov
fsubrp
inc
adc
rorb
mov
stc
cs
xor
sub
cli
or
addl
movb
mov
add
and
xchg
lea
xchg
push
out
aad
cmp
push
mov
sub
xor
jnp
adc
cmpl
int3
inc
fidivrs
rcll
mov
leave
and
and
sub
or
repz
jbe
mov
add
mov
mov
stc
add
or
shlb
and
rorl
lock
rolb
scas
or
sub
push
cltd
jle
imul
lock
add
mov
mov
sub
lret
rorb
lock
and
or
or
push
test
mov
repnz
sub
cmp
sub
cmp
fiaddl
xchg
lods
outsl
xor
xorl
mov
fwait
movsb
and
cmp
dec
push
mov
movsl
adc
and
xchg
out
add
add
out
xchg
mov
daa
lods
pop
add
dec
ja
mov
sub
imul
and
push
cmpsb
shl
push
push
xchg
mov
inc
pop
or
cmpsl
mov
cmpl
bound
sub
and
inc
mov
and
xor
cmp
and
es
or
jae
jmp
xchg
imul
mov
mov
testl
sub
dec
fisubl
int3
or
fwait
rcrl
pop
inc
lods
mov
push
mov
jo
fadds
mov
pop
loopne
sbb
mov
jno
pop
pop
scas
inc
push
iret
or
cmpsb
xor
orb
add
imul
adc
cmovbe
or
jecxz
cmp
je
inc
les
add
fcmovnu
xchg
inc
xor
iret
sub
xchg
sub
aam
cmp
addr16
dec
cmp
inc
inc
fsubr
xor
je
inc
inc
inc
enter
pop
ret
mov
pop
xchg
add
ss
xchg
inc
and
and
xchg
test
cmpb
sbb
lock
mov
fisubs
sub
mov
mov
jge
enter
iret
and
scas
mov
mov
and
lods
mov
mov
mov
inc
testb
nop
add
aam
mov
stos
orb
mov
mov
and
cs
out
add
pop
loope
loop
jecxz
ss
mov
in
in
out
arpl
add
nop
mov
inc
lods
jl
sub
js
call
lahf
pop
icebp
dec
pop
push
jne
scas
je
or
stos
in
adc
and
test
rcl
xchg
jl
aam
add
inc
add
mov
sbb
mov
xchg
sbb
add
mov
jo
test
cld
pop
subb
jmp
sbb
add
pop
in
and
dec
push
add
add
add
aam
adc
cld
aam
in
lret
aam
aam
test
or
gs
imul
mov
xor
inc
ret
push
fs
movsb
cmpsl
xor
sbb
and
stc
jle
clc
shrl
mov
mov
jo
movsl
xchg
fldl2t
test
xchg
mov
loopne
sbb
push
adc
out
loope
adc
leave
jecxz
int3
jbe
and
das
bound
inc
stos
and
and
enter
cmp
xor
aam
addr16
sahf
out
loopne
fsubr
arpl
xor
add
test
cmpsb
mov
stos
sub
call
cmpsl
xchg
je
sbb
lds
fsts
sti
into
fdivl
push
inc
push
add
dec
je
add
xchg
popa
js
test
jl
rclb
es
mov
out
inc
mov
adc
and
mov
sarb
iret
addr16
test
movsb
movsb
cli
aaa
aam
push
push
xlat
cld
adc
enter
sub
and
stos
push
adcb
jne
jo
xchg
out
faddl
addl
jl
sub
sbb
popf
sub
mov
cld
pop
cmp
mov
ror
jl
rcrb
pop
sbb
and
push
inc
add
add
fsubr
sete
xchg
pop
inc
out
xchg
lock
push
pop
mov
xlat
insb
or
pop
mov
mov
add
nop
lea
lea
sub
inc
jecxz
inc
add
xchg
loop
push
xor
jb
mov
popa
push
cmc
aaa
nop
inc
push
jecxz
sub
add
nop
cmp
jb
sub
push
push
jne
push
divb
int3
mov
add
mov
stos
lahf
inc
push
pop
insb
sbb
inc
bound
pop
mov
sub
xor
fidivl
mov
mov
sbb
xchg
mov
cmp
pop
add
push
add
sub
inc
jb
inc
sub
pop
jno
rcr
fdivl
lods
dec
adcb
inc
jmp
call
mov
test
je
cmp
je
sbb
jle
aas
je
pop
dec
cmp
push
lock
popf
icebp
jmp
push
inc
cmp
insl
lea
lretw
insb
jmp
sub
and
dec
mov
and
pop
movsb
jmp
xor
and
adc
push
or
or
lea
adc
cmc
scas
ss
cmp
mov
rorb
cld
jge
inc
cmpb
mov
cmp
mov
cmp
jne
cmp
jg
pop
in
cmp
sub
mov
mov
cmp
jge
dec
inc
xchg
hlt
cmp
je
inc
adc
mov
sar
sbb
adc
fdivrs
xor
pop
loope
into
and
add
incl
out
lock
push
mov
daa
leave
push
out
lea
lods
mov
cmp
mov
sarb
push
cmp
sbb
std
push
inc
incl
adc
push
mov
cmp
or
sub
add
sbb
rdpmc
mov
mov
out
pusha
lock
jmp
inc
mov
leave
jecxz
and
adc
shll
fldt
push
or
pop
push
push
mov
jg
inc
cmp
pop
mov
jmp
pusha
je
aam
jl
sbbl
add
jp
xchg
mov
or
add
fldz
outsl
xor
adc
aas
movb
cmp
jmp
stos
mov
and
addb
inc
sbb
loopne
cmc
jmp
les
js
sbb
insb
pushf
fistl
jmp
add
scas
and
loopne
cli
inc
shrb
sarb
cmpb
jne
lods
push
es
outsb
insb
ss
fsubl
inc
inc
jmp
testb
mov
jp
sub
jmp
mov
movzbl
testb
inc
hlt
repnz
popa
cmp
or
jne,pn
cli
inc
inc
xchg
rolb
mov
or
iret
and
adc
pushf
je
sub
cmp
jb
mov
lret
daa
sahf
cmc
or
ja
and
add
repz
adc
je
orl
ss
jge
adc
inc
fdivrs
orb
scas
xor
lock
sarl
daa
inc
adc
sub
inc
and
mov
loope
jne
das
int3
int3
shrl
ret
cmp
add
aaa
or
fucomip
or
cmp
and
jmp
jg
cmp
jne
sub
add
ret
pop
fwait
jle
jne
mov
nop
psrlw
inc
ret
pop
fstpt
jecxz
mov
mov
inc
mov
inc
pusha
out
jge
loopne
add
rcrb
imul
jmp
int3
add
stos
mov
push
or
test
inc
mov
aas
and
roll
jmp
dec
cmp
flds
sub
mov
inc
dec
jne
dec
shrb
adc
and
jmp
stos
je
inc
dec
dec
mov
push
ret
mov
jo
roll
add
inc
incl
icebp
adc
mov
add
mov
lock
shrb
je
mov
push
leave
sahf
jmp
and
clc
jnp
or
jle
sbb
jge
lea
stos
sub
ret
adc
mov
xchg
dec
std
cld
inc
loope
mov
call
imul
roll
in
or
push
fnstcw
jb
hlt
add
cmp
jb
stc
and
movsb
xchg
push
mov
or
lret
out
enter
cmpb
lods
nop
push
int3
andb
push
mov
shr
in
std
xchg
mov
or
lods
adc
sub
dec
push
xchg
addr16
dec
add
add
nop
inc
inc
inc
inc
jle
das
fnstenv
adc
add
andb
push
mov
mov
call
call
hlt
outsl
lcall
cld
lea
xor
lock
adc
loopne
cmp
pop
roll
pop
jo
mov
pusha
addl
nop
cmp
repz
sbb
sbb
lea
jl
cld
pop
xor
rolb
adc
pop
in
jb
sub
sbbl
pop
imul
adc
push
fildl
jne
add
outsb
leave
imul
cmpb
add
mov
dec
dec
push
pop
add
mov
mov
mov
xor
pop
test
push
xchg
pushf
movsb
lcall
test
sbb
imul
imul
inc
lcall
stos
fdivs
das
lsl
pop
pop
scas
inc
xor
daa
outsl
aas
add
adc
push
cmp
mov
roll
das
jae
aam
mov
sbb
add
sbb
movsb
add
cmp
lock
movzbl
jg
sbb
mov
adc
ja
test
ss
jmp
sub
ja
mov
out
push
sub
push
insl
inc
loope
xor
xchg
subl
jns
dec
or
and
shlb
iret
cmp
ret
jne
adc
xchg
xchg
sbb
pop
and
push
cli
add
cmpl
sbb
pop
sbbb
xor
xor
inc
inc
push
icebp
pop
imul
sub
test
and
and
adc
popf
sub
jge
mov
out
outsb
das
xchg
ja
push
imul
jne
and
daa
push
or
lock
in
leave
ror
xor
mov
or
lods
mov
jmp
xor
pop
cmp
push
int3
xor
inc
bound
mov
push
std
pop
push
push
in
bound
je
cwtl
lahf
lea
mulb
add
or
cld
in
mov
mov
orl
loope
in
insb
out
les
jne
lea
fwait
add
in
cli
sbb
or
test
xlat
cmp
sbb
and
je
mov
inc
pop
cmp
mov
int
pop
pop
push
movl
push
or
dec
out
push
xchg
jmp
icebp
push
cmp
cltd
or
jmp
mov
inc
lahf
or
pushl
mov
inc
dec
je
cmp
xor
or
or
dec
jne
mov
pop
pop
jl
cs
daa
push
adc
adc
adc
jge
aas
mov
inc
sub
add
push
arpl
js
add
sub
ret
push
inc
fstpt
mov
xchg
xor
sbb
push
dec
orl
mov
lock
movsb
and
adc
orb
and
inc
and
push
xchg
xchg
jns
imul
jmp
std
jmp
cld
inc
roll
adc
sbb
xor
out
sbb
mov
loope
xor
mov
xor
aam
jno
sub
adc
cmp
movsb
sbb
std
popf
push
out
or
std
inc
repz
sarl
int
rcrl
scas
jg
xor
mov
test
mov
fildl
pushf
test
stc
push
push
rclb
mov
fnstcw
cs
jge
iret
adc
addr16
sub
push
mov
or
or
mov
adc
add
xor
movsl
adc
mov
test
xchg
inc
xchg
enter
jp
notl
imul
or
cli
add
aad
fistl
adc
in
push
or
jg
dec
aaa
sub
adc
add
mov
loope
lcall
xchg
ss
sub
sub
add
clc
push
and
dec
cmp
jb
ja
loope
cmp
shll
adc
inc
dec
sbb
test
inc
pushf
lods
fs
ss
jmp
ds
add
jmp
mov
loopne
jl
sub
repz
xchg
sahf
adc
or
jp
arpl
add
adc
xchg
mov
ljmp
jl
pop
sbb
stos
mov
sub
imul
mov
add
or
add
mov
int3
jnp
mov
sbb
push
nop
rcrb
andl
aam
out
testb
movl
adc
jns
xor
pop
movsl
rolb
push
jp
or
jge
rep
push
pop
in
lcall
pop
pop
dec
lret
iret
shr
shl
lea
test
aad
sbb
in
test
insl
in
adc
push
lock
pop
push
shl
shr
mov
test
je
mov
mov
inc
adc
inc
icebp
neg
out
push
dec
pop
shl
dec
shll
and
inc
and
mov
pop
mov
sti
call
leave
push
scas
inc
neg
dec
mov
std
adc
cmp
mov
cld
inc
xor
push
mov
push
into
clc
imul
mov
xor
adc
and
mov
adc
cmc
das
ljmp
lock
scas
sub
and
loopne
les
mov
ficomps
and
and
mov
push
mov
xchg
sbb
outsl
sarb
jp
push
mov
jecxz
arpl
sti
add
cmpsb
je
stos
push
clc
and
out
and
add
pusha
lret
inc
cmp
dec
jecxz
or
je
imul
out
insb
xor
adc
cmp
cli
cmp
xchg
scas
sub
or
rcrl
and
dec
rcll
push
add
shlb
call
mov
adc
jne
inc
inc
sub
int3
adc
dec
push
mov
repnz
sub
shrl
aaa
scas
jnp
dec
jp
pop
fwait
popa
mov
mov
loopne
stos
pop
cmpl
lea
xor
or
pop
jp
mov
mov
call
roll
jecxz
or
repz
shl
push
adc
pop
jle
pop
lea
lret
stc
xor
sahf
iret
xor
jle
mov
mov
je
nop
mov
out
psubsb
mov
mov
cmp
imul
shll
push
aam
mov
fsubr
xchg
pop
arpl
outsb
or
rorl
cld
push
jge
push
xor
lock
sti
jg
ss
cmpsl
jmp
dec
add
or
mov
jmp
jb
loopne
and
push
xor
in
add
add
daa
lcall
cmc
jmp
jne
cmpsl
lock
mov
jne
ss
sbb
subb
repnz
int
add
or
mov
ss
xchg
pop
push
subb
xchg
enter
test
or
dec
insl
cmpsl
imul
add
je
add
add
dec
cmp
xor
mov
in
push
cltd
test
adc
bound
sbb
lret
in
lahf
pushf
and
enter
lea
cld
in
xchg
je
jne
cmpl
ja
rcll
add
jecxz
lret
inc
xchg
add
lock
imulb
ja
divb
cmpsl
lods
les
pop
ret
cmp
fisubs
adc
lahf
adc
pop
mov
shr
mov
or
push
test
lea
xor
inc
sbb
cs
mov
leave
test
add
pusha
popa
sbbb
subl
pushf
jmp
cmp
sbbl
out
sbb
mov
add
ds
and
or
popa
mov
ret
push
mov
cmp
or
xchg
pop
mov
aas
or
mov
out
inc
sub
sti
js
nop
mov
sub
add
adc
push
mov
dec
mov
jns
jns
je
in
in
mov
sti
sub
jmp
sti
jg
test
fiaddl
xor
fdivrs
jb
test
cwtl
sub
xor
jl
inc
incl
xor
dec
adc
cmp
sub
add
cld
shrb
add
mov
dec
out
jp
xor
adc
enter
jge
js
mul
jnp
or
cmp
imul
loope
leave
mov
xor
mov
in
inc
jecxz
std
lahf
enter
loop
ret
mov
mov
div
insb
aad
mov
shl
mov
out
rclb
inc
mov
add
xor
sbb
sbb
popa
or
mov
and
das
jecxz
jmp
stc
pop
xor
rorb
jmp
rcr
or
jne
div
mov
pop
sbb
ja
negb
jb
cmp
or
cmp
add
mov
xchg
push
fnsave
mov
mov
push
fisubrl
xor
lcall
or
xlat
or
fisubrl
mov
jbe
and
or
inc
fiaddl
stc
loopne
repnz
xor
and
mov
push
sbb
mov
mov
sbb
arpl
xchg
sbb
sbb
addr16
imul
cld
xchg
jmp
icebp
and
adc
loopne
enter
gs
pop
mov
insb
mov
xor
cld
in
and
jg
mov
popa
jl
jp
jmp
test
jmp
lret
movb
mov
add
mov
pop
add
dec
pop
jle
lods
mov
lods
scas
insb
add
pop
push
push
dec
lahf
insb
mov
push
xor
ss
mov
sbb
xchg
pop
inc
outsl
repnz
lea
xlat
adc
mov
cmp
jne
inc
inc
dec
je
adc
jne
mov
mov
pop
push
add
cmp
call
das
inc
outsl
pop
pop
loopne
std
ljmp
daa
repz
mov
dec
adc
cmc
pop
xchg
divb
sub
sbb
mov
push
sbb
les
lret
out
fbstp
sbb
out
jne
or
cmpb
loop
cmp
dec
mov
test
xchg
mov
or
hlt
push
cmp
mov
fstl
pop
ret
ljmp
sub
sub
add
rol
inc
cmp
test
mov
push
adc
jmp
lds
and
adc
sbb
dec
adcl
jg
xor
je
and
pop
mov
cmp
fistpll
mov
add
and
adc
add
cltd
insl
push
jne
aas
add
pop
fcomps
faddl
inc
gs
cmpsb
jne
inc
inc
mov
dec
repz
jmp
lret
orl
adc
jmp
push
push
mov
pop
xchg
out
and
dec
ret
push
lret
insl
pop
psraw
lods
aaa
cmp
jae
shl
cmp
or
leave
jb
inc
pop
testl
or
or
scas
sbb
icebp
lock
add
gs
add
and
out
addr16
jmp
test
aas
out
lds
and
sub
add
fldt
adc
jne
and
pop
push
mov
ja
test
sub
add
icebp
jbe
imul
cmp
and
jbe
scas
mov
pop
neg
sbb
neg
add
mov
mov
rol
daa
into
pop
jmp
sbb
push
mov
loope
mov
dec
cmp
xor
and
inc
cmpb
jl
ljmp
shll
rcrl
call
dec
repz
and
push
adc
push
lret
insl
insb
aas
pop
mov
mov
dec
js
sbb
adc
jge
cmpb
test
fmul
aas
sbb
cmp
pop
jmp
pop
iret
insl
out
push
test
jmp
push
xchg
jne
inc
dec
testb
mulb
cmp
cs
out
add
int3
sti
movsb
pop
adc
or
add
int
mov
adc
test
icebp
lcall
sub
cmpsl
inc
jl
sahf
fsubrs
adc
inc
mov
sub
and
cmp
pop
jge
cmp
enter
sbb
jp
and
les
adc
xor
testb
xchg
negl
mov
mov
mov
or
call
add
sub
push
or
sub
js
push
mov
or
or
pop
shrb
jecxz
outsl
or
filds
jo
add
adc
and
inc
adc
data16
or
sub
sar
dec
ljmp
jne
push
movsl
xchg
xchg
add
sbbb
icebp
jne
push
xchg
xor
or
or
out
fnsave
mov
andb
inc
inc
fwait
loope
in
lcall
hlt
push
push
or
test
mov
or
jp
jno
int3
inc
lret
sub
outsl
lea
shl
cmpsb
test
mov
xlat
sbb
sahf
cmp
pop
push
leave
add
inc
cmp
push
sub
enter
in
add
jmp
pop
or
loope
sbb
adc
add
es
jmp
call
push
int
testb
mov
push
push
jo
add
or
inc
pop
and
iret
or
dec
pop
cmp
test
adc
pushf
pop
ja
or
inc
in
cmp
mov
cli
cmp
mov
mov
push
lea
sti
or
cld
cmp
jb
mov
das
sub
cmp
push
sbb
sbb
out
pop
pop
repnz
test
push
xchg
xor
or
dec
pop
xor
push
jae
scas
lea
pop
ss
ret
sub
jmp
imul
jge
push
xor
shlb
jecxz
lahf
adcl
add
testl
cmp
cmpl
cmpsb
mov
cmp
mov
add
dec
not
mov
std
leave
pop
ret
add
je
and
push
xor
gs
inc
mov
out
push
roll
fmulp
pop
add
arpl
adc
push
test
push
cmc
sbb
and
jmp
xchg
adc
clc
je
test
roll
inc
dec
or
mov
mov
dec
std
aam
fdivl
jecxz
mov
sbb
cmp
popa
arpl
call
inc
push
mov
inc
push
mov
sbb
int
mov
rorb
std
rclb
or
mov
add
adc
insb
push
cltd
ss
pop
pop
sahf
mov
ret
mov
aad
fwait
test
aad
lahf
aam
mov
or
xchg
shll
orl
insb
cmp
cmp
idivb
add
je
loopne
jg
pop
xor
sahf
pushf
in
hlt
mov
add
sub
cmpsb
push
fucomp
or
pushf
pop
aas
xchg
cwtl
push
push
or
mov
jne
fldt
lock
lret
mov
psubsb
add
adcl
xchg
jl
lds
sub
pop
adc
sbb
test
shr
push
add
data16
icebp
mov
je
or
mov
jb
icebp
pop
sub
xor
fisttpll
test
jns
dec
jecxz
cmp
or
inc
xchg
pop
fadds
push
out
sbb
fcmovbe
pop
xchg
or
push
je
test
sub
cli
mov
mov
dec
in
dec
adc
add
add
adc
lods
outsb
xor
jle
stos
loopne
stos
mov
sar
loope
inc
push
aam
shll
dec
mov
add
xor
and
sbb
ljmp
or
jp
cltd
lods
movsl
ret
das
cmp
pop
or
out
ret
cmp
and
jle
jno
jb
orl
int
xor
movsb
arpl
or
pop
or
inc
add
and
mov
cmp
jl
and
aad
pop
loop
jg
sub
loopne
push
mov
inc
mov
push
xchg
add
pop
add
incb
pusha
shl
jge
call
mov
add
xchg
loopne
cld
xchg
ffreep
mov
xchg
dec
nop
sub
cmp
add
cs
pop
pop
jne
sbb
sub
xorb
dec
adc
inc
xchg
flds
and
pushf
lock
sub
xchg
test
cwtl
inc
fcompl
pushf
and
lea
lea
loope
pop
mov
dec
ud0
orb
mov
push
xchg
loopne
inc
lock
cwtl
fnstcw
add
insb
imul
repnz
adc
add
adc
xor
adc
jg
xor
push
inc
inc
dec
sub
sbb
jecxz
adc
cmp
mov
mov
push
out
les
or
push
xor
add
xor
clc
addr16
fstl
push
test
dec
jmp
call
dec
jns
jo
insb
and
dec
sub
cld
xor
sbb
mov
les
add
and
or
iret
mov
add
jle
cld
pop
add
or
std
out
dec
test
inc
aam
adc
inc
inc
jmp
inc
int3
add
es
xchg
mov
rorb
adc
repz
adcl
lock
xchg
xor
push
rcll
popa
jmp
out
add
fwait
add
div
cmp
pop
dec
or
inc
call
mov
je
dec
stc
call
je
pop
mov
mov
mov
icebp
pop
inc
ss
inc
add
add
addl
imul
add
call
ror
movsl
push
fdiv
cmp
mov
shl
sbb
loop
add
lock
add
adc
mov
cli
dec
mov
nop
mov
xchg
mov
scas
mov
out
xchg
rcrb
imul
rcrb
fidivrl
enter
lods
sub
jns
je
mov
adc
repz
xor
roll
lret
cmp
sahf
or
out
push
test
data16
inc
mov
or
aam
cmp
scas
enter
sti
clc
add
mov
pop
inc
jbe
inc
inc
dec
dec
cld
addr16
int
sahf
jp
in
adc
je
mov
fistpll
and
add
and
add
mov
sahf
popa
inc
or
test
jmp
das
movsb
mov
data16
push
xchg
data16
add
adc
jmp
inc
js
sarl
imulb
mov
pop
jmp
jp
and
jecxz
or
aaa
pop
ja
cltd
jmp
jnp
in
ret
pop
mov
jmp
inc
or
loopne
pop
cli
loopne
xor
xor
jg
jl
jae
pop
cli
movsl
adc
add
fcmovbe
mov
out
out
cli
jmp
pop
or
jne
and
fs
push
mov
mov
or
jne
orl
adc
mov
fdivl
xor
pop
xor
pop
push
push
dec
aas
push
dec
imul
xor
pop
sbb
push
addl
cmp
jle
add
cmp
mov
sub
pop
nop
popf
sbb
std
sahf
das
xor
and
lcall
xor
fdivr
loopne
iret
hlt
es
cld
test
es
mov
sub
sub
or
jb
mov
and
loopne
jne
inc
add
add
or
xor
mov
xlat
ljmp
sub
pop
jl
add
inc
inc
push
xor
inc
or
sbb
negb
mov
add
enter
mov
xor
xor
cmp
cs
dec
mov
fimull
sbb
testl
pop
add
dec
pop
popa
test
div
out
adc
out
cmpsl
pop
jle
out
inc
add
shll
and
pop
arpl
ljmp
cmp
decl
js
mov
mov
jl
hlt
xor
xor
mov
lahf
cmpsl
into
jne
xor
out
pop
sbb
incl
pop
mov
push
jle
ret
sbb
mov
jae
sbb
push
imul
cld
fidivrl
dec
jno
es
push
movsbl
push
inc
mov
push
insl
aas
ret
dec
loop
mov
addl
add
or
inc
push
cld
cmp
mov
outsl
cltd
out
xor
btc
and
mov
push
sarb
sbbb
je
ja
inc
cmp
sarb
jbe
add
cmp
and
mov
mov
add
rep
stos
mov
out
lock
ljmp
out
inc
outsb
enter
mov
incl
sarb
ret
xchg
dec
mov
test
movsl
xchg
lea
and
shl
stos
lea
je
mov
loop
dec
dec
jmp
cmp
ja
fs
xchg
add
nop
mov
jbe
add
inc
daa
jne
add
rorb
shl
subl
sbbb
testb
or
mov
mov
jbe
jmp
cmpb
mov
js
subb
or
ret
jb
push
jae
test
arpl
add
jecxz
jmp
je
xor
movsl
mull
or
ret
pop
dec
and
adc
xor
std
sub
cld
jne
mov
movsb
cmpsb
xor
mov
or
sahf
add
sbbl
or
jle
sahf
ja
or
push
fstps
ror
addb
das
mov
mov
mov
dec
add
arpl
adc
push
sub
add
imul
hlt
popa
repnz
data16
pop
adc
shll
jle
sbb
push
lahf
movl
rep
imul
mov
test
pop
pop
push
insb
sbbl
sbb
mov
mov
in
das
mov
test
fidivrl
cmp
push
imul
cld
xor
dec
iret
pop
insl
lds
aas
fisttpll
ret
repnz
jle
mov
jmp
xor
mov
jmp
andb
loope
add
sbb
jae
xchg
enter
test
in
and
popa
jb
or
sbb
sbb
jmp
xchg
mov
and
mov
cmpsl
adc
add
dec
pop
stc
mov
mov
cmp
add
jmp
cmp
arpl
push
pop
cli
and
mov
dec
fcomi
xchg
mov
je
inc
inc
xor
sub
adc
pop
adc
jne
jmp
jmp
sbb
andb
or
inc
dec
adc
pop
popa
lea
adc
imul
pop
ja
add
and
cmp
xor
pop
xchg
mov
inc
jmp
mov
mov
jo
shufps
test
filds
ja
gs
dec
cld
mov
push
repnz
test
xor
cld
call
push
je
idiv
fstpl
jmp
add
and
jmp
mov
test
xchg
pop
mov
xchg
add
push
movb
add
cmpw
call
cmp
rorl
sbb
mov
and
dec
or
add
xchg
or
mov
rclb
adc
jp
mov
fcompl
or
nop
adc
cmp
inc
cwtl
rcl
adc
arpl
cmp
ds
cli
ret
adc
cmp
jl
out
sub
pop
sbb
pop
add
in
subl
push
dec
out
mov
or
lock
fwait
jle
stos
pcmpgtb
lahf
and
or
xor
test
jg
mov
sub
das
sahf
dec
lds
inc
cmp
and
daa
ljmp
jmp
repnz
je
pop
add
mov
and
ss
sub
popf
dec
cmpb
pop
adc
jecxz
sbb
cld
xor
popa
in
inc
push
or
rcr
je
bound
mov
adc
loopne
out
sbb
and
mov
stos
popa
in
js
sub
add
inc
xlat
adc
js
push
shrb
or
je
mov
or
add
popa
adc
mov
mov
sbb
mov
jae
add
push
or
push
sahf
push
add
pop
fwait
adc
cs
lods
incl
inc
jne
add
sub
shr
mov
imul
mov
inc
jo,pn
loopne
xchg
push
dec
lods
adc
out
adc
lea
sti
movsb
xchg
mov
jg
add
sar
clc
pop
std
decl
cli
aas
jbe
push
pop
mov
cmp
dec
pop
and
decl
pop
subb
add
shll
pop
mov
sub
sahf
or
and
and
loopne
cmp
pushf
mov
pop
add
cld
mov
add
push
or
hlt
mov
push
or
adc
data16
push
inc
cs
pop
or
sbb
dec
sub
push
ja
cmp
jne
and
sti
add
jnp
cli
arpl
jbe
scas
outsl
lahf
mov
cmp
and
cmp
je
mov
mov
jno
cmp
mov
lret
shr
not
and
add
sub
dec
cmp
mov
outsl
ds
mov
jns
push
xchg
js
cmp
mov
shr
pop
roll
cmp
pop
jns
pop
bound
outsl
or
pop
push
lret
dec
pusha
mov
mov
hlt
mov
jae
xchg
xchg
mov
ret
or
fildl
sbb
sub
movsb
sbb
stos
push
mov
ljmp
push
mov
test
xor
lods
or
mov
cli
inc
mov
sti
int
movsb
shl
add
movsl
mov
mov
call
aas
gs
xchg
sbb
fldt
mov
dec
push
decb
adc
inc
iret
cmp
and
fcmovu
cmpsb
push
ss
mov
adc
xor
jmp
adc
sbb
out
loope
std
sub
dec
adc
push
lea
into
dec
push
dec
pusha
fnstsw
add
adc
fisttpll
push
movsl
mov
lods
dec
sarb
and
lret
cmp
and
mov
inc
sar
dec
cmp
jge
xchg
adc
popa
adc
cmp
add
sub
shr
sbb
mov
xchg
jae
inc
mov
xchg
rcr
and
decb
iret
xchg
adc
fcomi
push
xchg
xor
push
jne
mov
cmp
dec
jmp
xor
dec
jae
int
imul
outsb
jmp
mov
or
out
or
mov
adc
inc
loopne
repnz
jo
mov
mov
sbb
scas
movsl
mov
jp
dec
sub
pop
mov
adc
mov
jo
push
mov
inc
dec
inc
or
xchg
sbb
fcomps
pop
cmp
jmp
sbb
mov
je
mov
xor
ret
outsb
pop
mov
into
jne
int
hlt
insl
pushl
leave
jl
shl
inc
jmp
mov
stc
xchg
sub
aam
icebp
dec
sar
dec
cmp
jle
pop
cmp
mov
dec
inc
dec
aaa
mov
jge
add
loopne
xor
shl
cmp
and
mov
decb
jne
repnz
pop
clc
dec
icebp
and
jmp
dec
sub
sub
or
push
insb
xor
clc
cs
arpl
add
addr16
mov
ljmp
push
mov
jle
mov
and
push
mov
or
cmp
lods
outsb
xchg
push
decb
jge
subl
andb
mov
or
adc
push
or
das
push
or
loopne
lret
inc
push
jnp
bound
add
or
dec
xchg
mov
or
iret
mov
adc
and
cld
jnp
out
pop
mov
inc
lea
jne,pt
cmp
in
shlb
cmp
dec
cltd
mov
inc
add
add
dec
dec
lret
xor
cmp
fidivrs
push
mov
adc
or
push
test
mov
add
out
int
cli
cli
adc
jne
add
test
subl
adc
in
stc
dec
inc
mov
incl
or
mov
jno
pop
add
xchg
inc
mov
movw
rolb
and
rcrb
add
fiadds
add
sti
or
loopne
out
jns
pop
adc
xchg
add
das
mov
cli
ja
lea
dec
in
jns
adc
mov
mov
movl
addl
sahf
out
flds
lods
pop
lock
cmp
jo
or
clc
push
out
fisttpl
in
dec
mov
dec
or
pop
inc
mov
inc
test
mov
pop
das
ret
test
hlt
mov
jne
or
mov
adc
push
lret
ret
imul
push
mov
lea
sub
or
push
rcrb
shr
sub
aad
add
mov
jecxz
cmp
push
jmp
popf
jne
mov
inc
add
cmp
popf
pop
jp
cmpsl
jmp
or
lea
mov
nop
sub
adc
jmp
pop
dec
or
test
sbb
sub
add
push
daa
fmul
mov
mov
dec
mov
das
push
pop
dec
mov
lea
adcl
pop
dec
pop
dec
pop
jns
pop
xchg
pop
pop
pop
add
xchg
adc
in
mov
cmpb
lret
dec
mov
and
and
dec
jo
test
jmp
adc
cmp
loope
xchg
test
mov
and
hlt
stos
divb
pop
jge
mov
push
jge
inc
dec
insl
pop
xor
and
shlb
jbe
pop
adc
mov
mov
inc
movsl
dec
pop
mov
imul
imul
dec
cmp
andb
in
bnd
pop
cmp
add
mov
or
fcmovnb
jl
pop
jnp
aam
add
cmpsb
add
pop
fisttpl
ret
or
pextrw
into
jae
cmp
bswap
dec
es
ret
shlb
xchg
sbb
sub
mov
xchg
sbb
xchg
mov
mov
push
xor
repz
and
jne
mov
or
add
imul
push
push
xor
cmp
mov
lock
jecxz
lds
push
sbb
mov
push
mov
inc
jge
iret
mov
into
lea
xor
adc
mov
in
mov
std
adc
addb
lcall
dec
inc
mov
dec
es
jl
push
pop
cli
mov
ret
cmp
jae
orb
clc
ljmp
lock
js
fsub
daa
pop
fwait
add
jle
cmp
je
aad
popa
cmp
and
popa
mov
dec
fcmovnu
imul
sub
test
push
mov
rolb
xlat
mov
and
inc
push
js
or
mov
jle
pop
pop
enter
mov
push
iret
lock
lods
aas
jb
cmp
mov
mov
sub
mov
scas
and
int3
lock
push
add
add
and
push
mov
pop
sub
test
jge
inc
lahf
mov
sbb
cmpl
xchg
xchg
pop
int3
or
mov
mov
punpcklwd
pmaxub
pop
adc
xor
mov
orl
add
jbe
jecxz
cmp
je
jmp
test
jne
lods
mov
loope
or
and
mov
addb
lock
sbb
pop
mov
sub
sbb
sbb
loope
or
sub
jbe
dec
scas
stc
or
jo
icebp
sub
mov
cld
cmp
ja
and
cmp
inc
add
negl
pop
mov
add
jle
sti
pop
mov
mov
cmp
mov
or
sbb
fwait
test
cmc
repz
ret
mov
dec
jp
jae
adcl
pop
add
adc
xor
jne
sub
inc
pushf
lea
jb
or
arpl
test
addl
cwtl
adc
imul
pop
popf
es
xorl
movsb
sub
mov
pop
pushf
loopne
cmp
adc
sbb
pop
test
imull
je
xchg
push
or
cmpl
or
push
aas
fstpt
fsubrp
mov
xchg
daa
xor
sub
out
fdivl
push
add
cmp
adc
and
ds
je
movsb
inc
jo
popa
movsl
add
ljmp
ficoms
dec
jo
dec
aas
aad
mov
jle
outsb
sbb
lds
fists
push
cld
mov
inc
cmp
maskmovq
testl
cmp
mov
insb
cmp
jae
cmp
add
cmp
repnz
shlb
inc
or
or
pop
push
jg
or
add
mov
bswap
xchg
xor
or
pop
push
jno
mov
in
xor
xor
jmp
jmp
rcll
sar
cmpsl
inc
shrl
push
sbb
push
jnp
cmc
movl
cmp
call
mov
lea
mov
dec
jae
add
sub
arpl
adcl
inc
loop
je
mull
sbb
xor
pop
pop
jae
mov
test
jne
jbe
add
jmp
add
inc
jmp
mov
mov
inc
jmp
or
push
imul
add
clc
int
jne
mov
jae
cmc
push
in
add
xor
cmovo
iret
add
inc
inc
lea
arpl
pop
cs
test
jno
mov
mov
aas
sub
adc
inc
shlb
fbld
out
xadd
scas
jmp
outsl
push
ret
adc
mov
imul
lds
sbb
icebp
inc
add
xchg
jne
fcompl
mov
jle
movsl
incl
or
das
push
clc
lahf
insl
adc
enter
setg
jmp
lock
fdivs
movsl
add
push
ffreep
xchg
je
adc
or
mov
imul
cmp
mov
shlb
cmp
jbe
push
lock
jae
lock
xlat
cmp
lret
inc
cmpb
lea
mov
inc
add
jmp
sysexit
xchg
cmp
lock
mov
mov
sbb
add
testb
clc
xor
je
sub
addr16
xchg
mov
add
lds
out
push
inc
cmpsb
pop
or
mov
push
in
cmp
in
mov
andb
pushf
cmp
je
push
push
jmp
jecxz
test
call
add
sub
ja
cld
sub
sbb
jbe
loopne
enter
or
sti
or
call
pop
mov
lods
pop
and
mov
testb
je
xlat
loop
mov
pop
jne
push
jbe
andb
data16
enter
das
dec
cmp
aaa
test
xor
pop
bound
es
push
jbe
popa
push
inc
stc
push
pop
sub
adc
or
or
pusha
pop
xor
enter
sbb
xchg
negb
popf
cmpb
pop
xchg
mov
cmp
rcrl
xchg
pop
out
add
push
data16
sbb
negl
sub
inc
add
xor
jne
or
inc
cmp
lret
jo
cmp
mov
xchg
and
mov
movsl
clc
xor
in
or
xchg
or
inc
pop
pop
jne
push
iret
ret
or
ret
sbb
dec
ret
mov
dec
insb
push
mov
mov
xorb
push
cmp
stc
sar
mov
cmp
jmp
mov
fucomp
lock
and
fwait
pop
push
or
jno
jle
addb
arpl
inc
adc
shlb
into
out
sub
push
in
ja
adc
test
pop
in
std
xchg
movsl
testl
nop
jl
cmpl
push
add
push
sbb
fstps
inc
jne
mov
xchg
jbe
ja
das
iret
bound
and
sbb
xorb
push
or
adc
jmp
push
add
call
push
pushl
lds
cli
in
push
pop
jne
jnp
fdivs
jp
or
sub
lea
or
call
cltd
ret
add
popa
jp
dec
pop
mov
jg
mov
cmpb
stos
inc
add
or
add
mov
fmull
adc
enter
ret
sub
clc
mov
cmp
dec
clc
out
adc
daa
mov
dec
cmp
ret
sbb
xchg
fdivr
adc
push
clc
pop
movb
inc
mov
jae
repz
cmc
push
add
je
pop
xrelease
aas
adc
mov
lods
pop
cmpsb
incb
inc
xor
or
movl
subb
add
add
jle
jb
aad
adc
sbb
aam
enter
sub
jge
adc
cmp
or
adc
push
xor
stos
dec
push
lds
sbb
lods
subb
test
add
loop,pn
mov
add
or
decl
mov
inc
cmp
ret
add
cmp
lds
clc
push
jg
pusha
sub
je
or
je
push
jo
mov
adc
incb
orb
or
jmp
mov
mov
jle
popf
jge
inc
jmp
dec
jne
sbb
mov
jg
pop
cld
pop
add
mov
enter
enter
lret
bound
out
pop
lret
cs
mov
fstps
dec
adc
cmp
les
cld
mov
jno
pop
into
mov
sub
bound
addl
adc
mov
push
aad
push
ror
jge
sbb
gs
std
popa
ret
adc
mov
pop
add
sbb
or
jecxz
dec
adc
cld
outsl
loop
in
rcl
push
jle
mov
pop
int
adc
inc
loopne
jmp
in
jmp
mov
jmp
mov
push
shl
pop
mov
pop
mov
iret
cmp
cmp
je
idivl
cmc
fidivrs
decl
in
or
add
sub
pop
xor
jge
inc
inc
cmp
adc
and
cmp
inc
cli
std
fstl
jb
or
sbb
jnp
pop
sti
imul
jb
fcmovnu
int3
lret
jbe
arpl
dec
and
js
cs
xchg
sahf
push
mov
test
nop
jecxz
ljmp
orb
fisttpl
rol
pop
loop
dec
ss
push
jle
repnz
ret
lods
inc
inc
add
fwait
inc
cli
adc
jl
push
and
aas
xchg
out
cmpb
mov
push
call
jmp
aam
fidivs
loopne
add
shlb
sbb
mov
add
and
adc
hlt
out
pop
adc
loopne
inc
pop
hlt
jmp
jns
std
incb
je
or
inc
je
dec
je
rcr
jge
jne
inc
jmp
cmpb
jne
or
xor
inc
stos
inc
jp
fbld
jnp
andl
fsub
jmp
pop
jle
daa
inc
bnd
insl
push
je
scas
lret
aas
jnp
jmp
jbe
sti
jmp
decb
sti
adc
mov
mov
dec
adcb
sbb
adcl
sarl
fnstsw
push
cltd
cmp
je
xorb
idivl
adcl
ljmp
add
mov
movsb
sub
mov
loopne
jmp
sbb
sbb
pop
in
loop
shrb
jmp
or
sbb
mov
mov
pop
add
sub
sahf
insl
vmread
mov
addr16
sbb
test
or
sbb
xor
addr16
adc
pop
jmp
sahf
push
pop
and
out
loopne
in
jmp
inc
jle
test
mov
or
movaps
andl
loope
mov
subl
and
and
mov
lret
jge
add
cmp
adc
leave
xor
and
adc
scas
in
push
inc
mov
mov
jne
push
pop
inc
mov
mov
push
inc
fistl
in
mov
sti
mov
or
adc
movb
insl
inc
adc
pop
cs
jne
push
push
daa
andb
mov
dec
sbb
adc
das
insl
sbb
mov
pop
addr16
sub
mov
mov
dec
adc
rolb
int3
andb
decb
mov
mov
test
xchg
je
mov
push
fsubp
hlt
popa
das
lcall
mov
add
lahf
les
mov
jns
je
iret
push
xor
jno
andb
inc
dec
stc
aas
push
jmp
int3
hlt
sub
cmp
pop
adc
cmpb
mov
js
cmpsl
jp
jecxz
daa
roll
fdivrs
and
add
adc
pop
lods
jl
imul
jae
add
ret
rolb
sti
popa
adc
sbb
push
pop
mov
mov
outsb
xor
sub
sbbb
fiadds
pop
test
mov
loopne
inc
inc
in
jge
jnp
or
jge
mov
or
and
mov
pop
inc
popf
cltd
pop
je
inc
cmp
cmp
ret
jnp
ss
cmp
jae
mov
jmp
ret
cmp
mov
and
das
sub
inc
mov
jo
dec
mov
and
mov
mov
or
inc
dec
jne
inc
sti
mov
xor
jmp
arpl
jmp
shrb
jmp
add
add
mov
ror
add
xchg
leave
sarb
data16
mov
jmp
in
ja
je
mov
push
enter
call
filds
cmpsl
stc
add
lret
test
je
pushf
jne
aas
xor
mov
push
outsl
fcmove
mov
or
decl
dec
inc
or
mov
ret
cmpsl
movsl
subl
inc
ja
xor
aam
mov
je
punpckhbw
push
popf
or
cmpsb
add
les
daa
icebp
push
or
mov
mov
loopne
xchg
jne
jmp
cmp
out
inc
cwtl
out
add
mov
jne
add
dec
sub
fs
aas
or
fnstcw
mov
jecxz
stc
sub
es
push
mov
add
es
js,pt
jne
outsl
cmp
lahf
add
mov
faddl
fsubs
or
sub
rcrb
add
pop
pop
arpl
xchg
sbbl
fldl2t
add
dec
loope
roll
lods
neg
mov
clc
cmp
sbb
jo
cmp
jns
and
out
jmp
adc
sbb
lea
shl
jmp
fwait
or
ret
jnp
imul
leave
addl
mov
je
neg
pop
inc
and
xchg
into
popf
sub
in
int
rolb
sti
aam
or
or
dec
jmp
ret
repz
inc
popl
cmp
or
inc
jmp
inc
mov
jns
inc
mov
in
fwait
inc
mov
adc
dec
daa
rcrl
sbb
enter
adc
in
push
jne
add
outsb
jne
mov
loopne
pop
xchg
lock
mov
test
xchg
insl
dec
push
push
or
das
mov
cmp
mov
or
push
push
cmp
and
jmp
jle
fstl
nop
mov
out
rolb
out
pop
ret
movsl
hlt
jg
decl
js
mov
xchg
or
push
fdivrs
cltd
cmp
jne
out
popf
jo
insl
cmpb
fadds
out
add
int
out
addl
or
lret
clc
jae
orl
push
push
cmp
enter
add
test
je
arpl
jle
push
push
mov
add
mov
subb
mov
imul
sub
adc
adc
or
adc
test
adc
movb
or
adc
lea
stc
xor
cwtl
js
int3
mov
clc
or
push
icebp
loopne
pop
dec
imul
repnz
rorb
jmp
inc
pop
fmull
inc
adc
aas
rorl
in
sbb
cmp
inc
and
aad
lea
enter
jmp
jns
sub
leave
or
ds
pusha
mov
pushf
mov
outsb
pop
cmp
xchg
int
jp
mov
cmp
jmp
aas
lock
mov
add
mov
out
mov
stos
or
fldl
adc
lret
sti
sbb
jne
fmull
insl
lock
call
xor
loopne
jbe
lahf
sbb
jae
sahf
in
and
hlt
adc
or
and
dec
aaa
rol
mov
jae
add
jne
arpl
pop
je
aas
push
pop
mov
mov
jb
mov
or
and
push
mov
or
add
or
repz
adc
lret
mov
inc
jl
mov
cmp
and
sub
or
jns
sar
inc
in
sbb
push
clc
decl
adc
dec
mov
inc
stos
mov
cmp
fldl
aad
jb
inc
lods
mov
lret
mov
sbb
int3
repz
in
xor
fs
and
xchg
push
inc
cmpb
and
enter
sub
dec
and
ss
cmp
adcl
and
xchg
add
or
fstpl
test
dec
and
add
push
stos
inc
add
mov
pusha
shlb
shlb
jnp
filds
lret
mov
xor
xor
pop
lret
sub
sbb
sbb
adc
and
out
adc
or
sub
enter
js
add
sbb
jmp
decl
dec
cmp
pop
add
jns
neg
daa
sub
adc
fs
pop
idiv
jnp
cltd
xchg
nop
xchg
testb
xchg
sbb
dec
xchg
add
stos
inc
aam
adc
sahf
mov
mov
xor
sbb
inc
push
je
cmp
lods
sbb
jns
xor
sub
xchg
and
xor
adc
add
ret
adc
add
push
add
jne
movb
mov
jg,pt
push
mov
lcall
mov
pop
xor
jmp
add
cmp
test
pop
mov
xchg
and
jge
pop
je
neg
jmp
pop
ret
loop
fidivrs
pop
push
push
lods
push
xor
adc
enter
ret
pop
test
push
dec
mov
stos
and
aad
jb
clc
mov
push
arpl
xchg
push
cmp
add
addr16
setl
mov
inc
pop
mov
jl
inc
jge
xchg
or
or
push
jae
stc
and
push
jmp
out
es
enter
and
cmp
dec
mov
lock
dec
adcl
cmp
lock
push
dec
or
mov
adc
imul
xor
inc
int
sub
jne
out
pop
dec
dec
insb
mov
loop
sbb
out
xchg
in
push
add
pusha
mov
pop
addl
repnz
daa
addl
movsb
or
push
jae
push
xorb
push
repnz
sbb
lods
ficoms
lods
mov
inc
movl
loope
movsl
add
xlat
mov
cmp
mov
rclb
sbb
and
rorl
pop
into
jns
out
pop
and
sbb
pop
jg
sub
inc
sbb
data16
mov
into
or
xlat
les
adc
nop
addb
mov
xorl
jo
mov
dec
and
and
mov
data16
inc
scas
cmp
scas
call
adc
mov
jo
fnstcw
jno
mov
or
sbb
and
imul
lods
es
imul
into
ret
xchg
insl
decl
lods
fldenv
dec
xor
fmull
dec
lods
mov
je
push
enter
pushf
jmp
addl
repz
in
and
cmpsb
xchg
mov
nop
jecxz
xchg
add
inc
daa
call
jg
adc
int3
or
mov
nop
sbb
xchg
mov
sbb
arpl
in
xchg
xchg
inc
fnstsw
xchg
jecxz
in
inc
out
and
push
fwait
jb
push
cmovle
insb
cs
inc
xchg
mov
sbb
add
xor
xchg
cmp
add
rcrb
or
add
mov
fildl
inc
lret
push
cmc
imul
int3
sar
decb
sarl
ret
sbb
or
arpl
or
sti
sbb
sbb
or
shl
aad
cmpsl
and
scas
mov
std
mov
addb
add
mov
add
and
cwtl
fwait
push
inc
lea
mov
pusha
and
lcall
je
hlt
push
or
shlb
arpl
sub
les
push
cmpl
fistl
adc
jne
movups
inc
cmp
adc
xchg
orl
jle
mov
dec
or
adc
into
movsb
lcall
xlat
xchg
and
lret
adc
cltd
subl
out
andl
jnp
out
or
inc
inc
pop
daa
outsl
xchg
push
and
test
sbb
icebp
mov
cmp
psadbw
push
cmp
jmp
adc
sbb
ret
xor
push
aam
bound
or
pop
push
std
xchg
inc
mov
notb
fldcw
mov
inc
popf
mov
shrl
movq
out
jl
mov
int
push
dec
scas
lods
or
inc
xor
mov
sti
add
iret
ljmp
pop
clc
popf
aas
clc
daa
call
mov
sar
jecxz
mov
rcr
add
mov
cmp
jae
cmpb
jne
and
icebp
popa
xorb
push
add
mov
push
js
cmp
push
cmc
mov
xor
push
stos
sub
or
adc
lods
mov
cltd
movsb
ss
loopne
test
jg
inc
or
mov
jae
cmpb
or
inc
or
cld
arpl
popa
insb
pop
ja
dec
sub
outsl
mov
inc
sbb
int
dec
or
mov
or
add
nop
inc
sbb
xchg
jmp
pop
or
sarl
repz
popa
pop
shl
sbbl
shll
notb
sbb
dec
pusha
cld
push
fldcw
sub
js
enter
cltd
out
dec
xor
adc
adc
shl
mov
cli
or
or
jne
mov
sbb
int
push
cmp
jle
test
nop
jo
nop
and
push
in
inc
test
xchg
test
addr16
jle
cmp
xor
adc
imul
call
add
pusha
pop
fwait
out
repz
jmp
hlt
push
and
shlb
cs
test
mov
push
cmp
mov
je
rol
out
add
adc
add
pop
lea
mov
je
xor
arpl
sub
mov
add
movsl
shl
jne
mov
aaa
add
setle
mov
push
repz
inc
sti
std
imull
jns
inc
or
jbe
inc
sbb
ja
imul
push
jmp
jnp
mov
mov
lods
aad
xchg
sub
cmp
adcb
scas
mov
mov
sub
fld
add
push
push
mov
push
mull
inc
cmpb
and
mov
mov
push
pop
and
pop
sub
pop
gs
add
outsl
jne
cmpsl
xchg
loopne
pop
decl
testl
shrd
sti
jnp
and
mov
push
inc
cwtl
je
lret
jp
call
push
js
in
inc
jo
or
js
or
movsb
mov
dec
dec
xchg
imul
mov
cmp
jp
sbb
and
adc
lahf
orb
roll
lods
xorl
rol
jg
inc
mov
inc
cmp
sub
jl
pop
rcl
jnp
xor
mov
adc
aad
shrl
cmp
into
sbb
cmp
cld
pop
idivb
jmp
cmp
xorl
fwait
lret
or
push
stc
xor
int3
popa
dec
ja
xorl
test
popa
mov
int3
and
add
xor
outsb
xor
nop
push
or
lahf
adc
inc
scas
test
fwait
cmp
pop
sub
mov
or
fs
jmp
add
mov
sbb
xchg
in
shr
mov
dec
sbbl
adc
push
pop
inc
arpl
push
and
cmc
add
sbb
test
pop
pop
lret
and
sbb
xor
lds
aas
aaa
cmovb
sbb
addl
mov
rcl
popa
pop
sbb
mov
andl
adc
mov
xchg
mov
inc
imul
decl
aad
test
je
sub
and
cmp
int
aaa
add
aad
fwait
mov
xchg
addl
push
cmpsl
push
out
inc
dec
jge
adc
fsubl
add
add
insl
xor
xor
jmp
xor
lods
adc
sti
adc
and
adc
push
nop
dec
push
aam
inc
cmp
adc
push
add
or
xchg
jmp
pop
cmp
sti
and
decb
imulb
movl
lock
imul
or
ss
mov
pop
movb
outsb
imul
inc
popa
in
pusha
inc
ds
jne
cmpsl
dec
ror
sbb
mov
jl
test
dec
and
sub
or
fildl
cmpb
or
and
ret
les
pop
cmpl
lea
fists
mov
sbb
add
cmp
std
push
lods
jge
mov
mov
decl
shll
xchg
out
andb
mov
rcrb
stc
in
xchg
jl
and
flds
int
push
jne
mov
mov
mov
call
std
hlt
or
fsubrl
dec
sub
ds
sti
mov
mov
pop
mov
inc
inc
and
cld
mov
mov
lea
jne
test
lock
add
mov
pop
mov
jge
dec
ret
dec
in
pusha
ret
mov
add
push
das
ds
ror
or
mov
mov
movsb
dec
test
or
jmp
xor
sarl
add
jno
cmp
push
add
lcall
out
pop
hlt
test
jb
cld
mov
add
testl
jge
nop
pminub
xchg
lock
add
xchg
std
ret
push
push
js
fnstenv
and
dec
mov
out
cmp
sti
mov
mov
mov
mov
mov
negb
mov
testl
push
adc
ret
popl
imul
xchg
inc
testl
loopne
or
push
jmp
ss
mov
pushf
xchg
imul
push
push
loopne
out
mov
daa
incb
testl
push
inc
xor
pop
inc
xor
and
mov
je
pop
dec
and
testl
pop
jo
mov
jge
jae
or
sti
push
pushl
je
push
push
lea
push
pop
pop
pop
adcb
testb
xor
dec
push
aas
imul
add
push
sbb
idivb
es
mov
or
js
jge
or
mov
jmp
add
sbb
cmpsb
jge
xchg
jmp
mov
sub
sub
jne
mov
push
pop
sbb
movsb
or
dec
ret
call
add
cmpl
pop
gs
push
adc
outsb
mov
push
pop
icebp
ljmp
pop
lods
in
adc
add
jl
jl
mov
je
inc
cmp
daa
outsb
push
mov
out
cmp
push
popa
int3
push
fldcw
adc
cmp
sbb
cmpsb
mov
inc
add
pusha
adc
insl
xchg
xchg
cld
sub
and
frstor
lret
test
lahf
push
in
cmp
sub
push
fcos
insl
mov
sbb
add
push
inc
and
adc
fdivrs
int3
cmp
js
add
int3
pushl
push
xchg
dec
mov
mov
mov
lea
sub
call
push
inc
xchg
push
add
xorl
pop
out
adc
insl
or
cwtl
jmp
cmp
ja
adc
mov
inc
adc
and
insb
adc
sbb
add
jb
lcall
jg
mov
mov
or
mov
imul
jne
movsb
add
adc
push
cmp
jge
mov
out
hlt
dec
pop
mov
sub
and
mov
adc
sbb
in
mov
mov
cmpb
sbb
test
pop
adc
ret
pusha
rcrb
shl
lock
fmull
dec
enter
popa
adc
rcrb
jp
pop
ret
dec
mov
sub
sbb
dec
adc
les
inc
and
add
push
pop
xor
pop
ret
gs
jb
sbb
mov
pop
push
xor
pop
dec
sbb
mov
sbb
sbb
and
add
out
mov
xor
dec
ret
ret
pop
push
xor
sbb
repnz
cmp
sbb
xor
add
lods
add
push
arpl
xchg
add
jne
push
data16
xchg
xchg
mov
or
pop
sbb
push
pop
addl
and
sbb
loopne
push
adc
aas
arpl
lea
xchg
cmp
adc
rcr
or
or
xchg
xchg
negb
insl
lahf
jbe
loopne
mov
xchg
push
push
scas
aam
adc
mov
int3
daa
nop
add
clc
out
adc
lods
sub
mov
and
dec
push
jo
add
out
sub
sbb
clc
out
jg
shll
aam
les
lods
out
jg
pusha
xchg
adc
loopne
push
sbb
aad
ss
jg
and
cmp
out
adc
fidivl
nop
test
enter
xchg
push
jg
lock
lock
and
dec
shll
je
or
xor
fwait
outsb
aas
mov
int3
lock
mov
push
ret
adc
movsl
mov
lock
add
push
movb
ret
sub
cmp
icebp
add
les
cmc
push
xor
test
or
cmp
lock
push
xchg
pop
or
leave
xor
les
ja
adc
adc
xchg
icebp
mov
shl
mov
movsl
jae
and
mov
push
sahf
mov
pop
ss
call
mov
imul
push
push
jmp
or
jmp
pop
mov
testb
pop
mov
mov
push
sbbl
or
inc
scas
out
cmp
sti
and
aaa
xor
call
dec
push
mov
push
orl
nop
test
es
testb
roll
mov
repz
jge
cmp
push
shl
pop
jge
pop
and
push
jns
and
loope
mov
enter
xchg
in
fld
mov
test
push
loope
adc
add
inc
decl
mov
add
andb
in
jle
xor
add
inc
mov
jl
adc
and
les
sbb
js
push
fcoms
xchg
sbb
xor
cmp
jmp
and
sub
adc
or
je
sub
or
mov
aad
pop
lret
add
or
das
pop
sbb
and
mov
fisttpl
scas
int
je
cmp
je
jae
je
repnz
int
push
add
add
cs
sub
enter
add
xor
orb
jecxz
dec
add
or
xchg
jle
je
cmpsb
not
and
add
add
sahf
mov
or
test
pop
addr16
or
inc
or
insl
push
idivb
mov
pop
xor
loope
xchg
or
iret
cmp
jecxz
xchg
jp
sbb
ds
repz
lods
xor
fcomi
lock
sbb
xchg
push
dec
push
xchg
jne
adc
adcl
outsl
adc
scas
sub
or
clc
sbb
dec
or
loope
pop
cwtl
mov
repz
or
in
mov
repz
lret
in
dec
inc
add
js
jl
fdivs
je
icebp
add
add
popa
decl
sbb
push
sbbl
aas
insl
adc
adc
nop
dec
xor
add
sbb
lock
pop
or
out
adc
lahf
cmp
or
cs
push
sbb
loopne
jo
int3
repz
cmp
xchg
add
test
sbbb
adc
shlw
sbb
cmp
jne
arpl
xor
mov
add
les
dec
mov
mov
sbb
leave
lock
adc
mov
loop
xchg
test
scas
mov
push
jb
cmp
xchg
scas
inc
pusha
jbe
test
jnp
ffreep
push
jns
and
xchg
dec
mov
push
lea
add
mov
xor
std
push
or
adc
shld
shl
push
rcrb
or
roll
mov
or
or
je
ja
loop
cwtl
adc
lock
adc
add
lds
and
andb
call
jg
decl
ja
shlb
mov
ret
and
imul
mov
nop
incl
and
into
add
in
adc
fstcw
movsl
out
cmp
dec
stos
fldl
and
pop
or
call
or
or
fldcw
inc
lock
rcrb
xchg
idiv
push
loope
mov
adc
inc
lods
cmpsl
test
lcall
or
movsl
pop
adc
and
jecxz
xor
add
mov
sarl
mov
in
pop
js
adc
aad
cwtl
or
jne
or
xchg
or
xor
int3
repz
cmp
jg
outsl
inc
pusha
neg
cwtl
insl
pop
pop
test
pop
mov
and
push
push
jne
mov
fsubrl
and
ret
sbb
xor
mov
pop
scas
fwait
add
adc
into
scas
rcrb
jmp
or
or
sub
scas
push
lods
add
dec
pop
add
lods
or
add
push
cmp
ret
adc
pop
sub
jg
push
not
test
jne
add
pop
and
lea
or
sbb
add
jl
jbe
xchg
out
or
nop
ljmp
pushf
cltd
adc
mov
icebp
cmp
sub
test
or
ss
and
sub
jge
inc
sub
out
jecxz
and
mov
sti
js
add
ret
pop
cltd
addr16
loop
sbb
add
and
repnz
mov
loop
mov
lahf
and
jnp
pop
push
push
sbb
lea
or
ljmp
push
pop
or
std
enter
or
ret
ja
rclb
xor
sbb
pop
add
movsl
pushf
jns
leave
repz
inc
stc
dec
mov
in
jge
pop
xchg
mov
mov
xchg
inc
mov
jecxz
sbb
lock
sub
not
inc
enter
or
or
add
fwait
pop
fidivl
jg
mov
mov
rcrl
lock
push
arpl
fistpll
mov
add
mov
rorl
cmpsb
pop
jp
jns
pop
sbb
icebp
mov
or
sbb
add
push
or
add
pop
and
jecxz
addr16
adc
mov
daa
adc
incl
mov
es
or
in
xor
icebp
mov
pop
es
pop
sbb
jmp
xchg
mov
fnsave
inc
test
loopne
loope
inc
mov
aad
add
dec
xchg
loope
jge
mov
cmp
jg
sub
pop
aaa
nop
scas
adc
ljmp
fildl
inc
div
ljmp
pop
jl
movsl
popa
or
dec
testl
add
inc
dec
add
mull
and
add
inc
icebp
or
cmp
jg
popf
add
imull
mov
or
or
mov
sub
or
or
adc
add
fistpll
popf
ljmp
jbe
dec
jecxz
add
or
clc
aas
je
pusha
fbld
in
add
sbb
pop
inc
mov
add
push
xor
fisttpl
xor
mov
xacquire
and
mov
inc
or
or
jmp
loop
dec
jl
cmpb
jl
cmp
pop
adc
jmp
out
inc
add
add
xor
push
insl
jne,pt
xchg
mov
mov
or
in
pop
lea
push
ret
adc
cld
int
adc
adc
adc
fidivs
adc
mov
push
movsb
cmpsl
mov
int3
dec
or
mov
or
scas
mov
mov
mov
shl
iret
inc
mov
cli
cmp
adc
clc
rcrb
clc
popa
sub
jg
adc
dec
mov
sahf
adc
jno
or
push
adc
cli
orb
cmp
inc
cltd
testl
add
std
hlt
push
adc
enter
inc
aam
loopw
adcb
inc
adc
leave
mov
shr
or
lea
mov
xbegin
and
jmp
and
iret
cltd
dec
or
cmp
inc
or
or
incl
mov
in
mov
sub
push
push
add
cmp
dec
cmp
push
icebp
imulb
inc
push
orl
insl
les
add
insb
fisttps
dec
cmp
clc
out
pop
mov
clc
mov
jg
icebp
imul
add
daa
inc
repnz
mov
das
or
lds
adc
out
mov
lods
test
fstpl
or
orb
dec
push
push
sub
sarl
push
dec
mov
je
cmp
gs
cmp
mov
xchg
or
inc
fidivrs
mov
cmpsb
cmpsb
je
aas
add
mov
dec
subb
jne
mov
or
es
arpl
cmp
out
xor
cmp
mov
mov
fs
sahf
stos
les
call
sub
in
add
jne
inc
pop
push
orl
push
cmp
into
inc
mov
sub
cmp
jl
outsl
jg
inc
jmp
popa
cmp
inc
pop
imul
xchg
dec
add
pop
push
xor
inc
sahf
repz
dec
andb
or
adc
je
jno
repz
add
lea
sbb
mov
mov
imul
pop
lret
dec
lret
pop
fstpt
sarb
int3
xor
sbb
sub
sbb
jns
jbe
sbb
hlt
xchg
xor
cmp
daa
dec
pop
mov
push
sub
lcall
add
pushf
push
jge
sbb
and
sub
or
scas
adc
decl
push
popf
mov
inc
cmp
out
ds
inc
push
jmp
push
add
popa
fildl
jo
cltd
push
sti
and
add
insl
or
jg
sbb
sbb
sarb
cmp
jl
inc
add
jg
daa
enter
cs
nop
ret
adc
jg
jle
push
xchg
mov
push
xchg
das
xchg
mov
push
aad
rdpmc
cmp
xlat
push
popf
roll
sbb
pushf
sbb
pop
in
and
add
adc
andl
mov
dec
xchg
or
add
adc
imul
hlt
lea
push
sar
stc
push
add
lea
test
mov
sbb
push
sbb
push
fadd
aam
pop
sub
add
and
jmp
sbb
add
js
rolb
cwtl
cmp
sarl
jle
sub
jmp
adc
or
or
add
adc
dec
mov
inc
pop
iret
sub
sbb
inc
sub
pop
sub
adc
mov
jnp
push
push
pop
or
mov
lret
add
jl
sbb
adc
inc
int
and
nop
push
add
lret
repz
movzbl
add
mov
sbb
sahf
jno
cmc
lds
test
fiadds
inc
add
imul
popa
mov
js
shl
call
add
mov
jae
add
imul
pop
jae
dec
xchg
push
adc
mov
push
dec
cltd
rolb
jno
lahf
xor
mov
and
xorb
adc
push
int3
or
push
inc
and
std
icebp
loopne
mov
mov
push
ja
add
add
inc
js
cs
or
cmp
add
insl
inc
aas
push
imul
js
mov
jne
xchg
jle
sbb
mov
cwtl
shrb
clc
push
jmp
cmp
sub
js
pop
movsb
das
mov
testb
cli
cs
or
add
pop
xchg
adc
pop
inc
pushl
pop
sbb
sub
pop
andl
xchg
mov
add
pop
push
xchg
sbb
fistl
pop
testb
stc
repz
gs
das
jmp
int3
dec
enter
shlb
sbb
rolb
mov
fistl
and
sub
rorl
push
arpl
xor
push
popa
jp
ljmp
xorl
inc
dec
pop
xchg
jp
fmull
add
dec
test
sub
and
push
cld
jne
aam
daa
adc
ficomps
testb
lods
mov
mov
xorb
pusha
push
jmp
jge
or
dec
xorl
lea
ja
mov
or
and
and
pop
mov
addl
aaa
xor
mov
pop
adc
lret
jo
mov
lcall
imul
add
into
add
jmp
fwait
dec
xor
shr
or
mov
xlat
mov
shr
imul
lret
pop
push
std
pop
dec
outsl
aas
pop
repnz
out
jmp
mov
shl
shr
or
push
aas
mov
js
jns
adc
das
pop
fwait
sbb
cld
dec
inc
adc
mov
push
push
mov
lea
movsl
movsl
push
add
fstps
or
idivb
add
pusha
insl
xor
jmp
xlat
sarb
and
cmp
fisttps
mov
aas
adcb
out
out
adc
loope
scas
jns
shlb
jae
add
sarl
lret
cmp
xchg
push
jmp
jecxz
data16
sarb
pop
jge
dec
iret
sbb
pop
in
hlt
add
lock
push
pop
xchg
fsub
aam
in
sti
or
and
mov
test
cmp
mov
add
or
push
pop
loopne
mov
lea
add
js
fsubp
or
sti
xor
push
mov
pop
popa
sbb
xlat
cmp
add
test
lahf
ror
sti
movntps
push
shrb
mov
jbe
stc
jb
xchg
hlt
rcrl
pop
jmp
clc
scas
or
cmp
adc
mov
mov
mov
into
sti
repnz
xor
sub
push
inc
jle
sub
sbb
adc
gs
es
sti
dec
push
packsswb
cmp
or
add
pop
push
lcall
xchg
mov
sbb
cli
cmp
roll
lods
add
push
repz
adc
xchg
lcall
and
pop
out
push
cwtl
pop
or
popa
adc
jmp
adc
xor
inc
ja
inc
out
test
fs
ss
adc
mov
mov
inc
cmpsl
or
fdecstp
into
and
icebp
ss
push
lea
int
pushf
mov
je
js
xchg
cmp
jmp
mov
pcmpeqd
cmp
jl
lahf
mov
jmp
push
jecxz
loope
pop
dec
adc
jmp
xor
insl
imul
add
fcos
mov
mov
sub
mov
mov
cmp
dec
pop
decl
addr16
mov
mov
mov
sbb
loopne
or
mov
je
shlb
lock
test
or
mov
pushf
cmp
rorb
push
cs
sbb
jge
push
push
test
call
cld
jbe
cmpb
jl
incb
hlt
jbe
cmova
dec
adc
dec
call
aaa
add
mov
repnz
das
mov
idivl
in
mov
sub
pop
mov
adc
sub
sbb
add
subl
inc
sbb
cmpb
mov
in
cli
repnz
adc
leave
aam
xor
mov
dec
mov
push
rclb
cmp
rcrb
rorb
jns
xchg
ret
mov
lret
jno
mov
jp
shr
stos
adc
push
mov
in
lds
jno
push
lock
mov
inc
or
mov
add
or
push
push
or
cmpsb
pop
jge
dec
or
shrl
push
rcll
dec
sub
sbb
mov
mov
test
leave
push
dec
sarl
out
call
jmp
or
sti
out
aas
adc
jmp
pop
inc
add
or
adc
push
and
sbb
dec
sub
andw
xor
add
add
comiss
data16
mov
push
mov
leave
setae
shl
jl
push
add
xchg
mov
sub
fwait
pop
adc
sub
inc
jne
scas
jns
fisubrs
xor
and
sbb
add
add
jle
jae
cwtl
cmp
add
movzwl
cmc
aas
jo
iret
inc
jmp
dec
push
out
or
sub
lods
data16
dec
or
push
clc
decl
mov
dec
mov
lea
clc
add
jne
movswl
jae
imul
cli
aas
jb
mov
add
push
sbb
xor
adc
inc
popa
add
std
les
mov
and
pop
push
cli
sub
jo
ljmp
sbbb
sub
sbb
jne
pop
pop
idivl
int
jle
cmp
push
add
ljmp
sub
popa
std
jno
push
mov
mov
movsl
movsl
dec
stos
xchg
dec
cmp
loope
out
shrl
mov
mov
jp
fistps
xchg
decl
jne
icebp
cmp
cmp
lea
jl
das
popf
cli
xor
pslld
dec
jmp
clc
push
ja
push
inc
lcallw
add
ret
sub
mov
cli
and
push
andb
filds
lods
icebp
adc
pop
hlt
flds
add
andb
imul
icebp
test
lret
je
mov
sbb
xor
add
testb
inc
or
jo
loop
ds
mov
outsb
int
sbb
mov
addr16
jbe
and
prefetchw
or
jg
or
lcall
add
enter
test
inc
pop
lea
pop
cmp
das
pop
or
mov
bound
dec
arpl
and
jmp
addl
subb
or
sub
inc
inc
jbe
mov
insl
and
adc
cmp
leave
push
insb
aad
ja
xchg
in
inc
leave
stc
mov
pushl
clc
and
and
and
lea
aaa
or
subl
jg
lods
ss
and
std
mov
aas
ja
and
cmp
mov
loop
dec
test
xchg
jne
loopne
inc
repz
jmp
enter
pop
lret
push
push
cmp
inc
mov
push
dec
mov
movsb
xchg
add
cmc
or
pop
cmp
sarb
dec
pop
shlb
jecxz
pusha
arpl
xchg
push
or
inc
rclb
add
cmpsl
ror
sar
jno
cmp
and
inc
pop
or
add
insl
hlt
add
xor
jne
and
lods
pop
or
jg
and
shrl
out
mov
pop
or
jg
mov
cmp
gs
in
clc
lea
jnp
add
in
xorl
mov
inc
test
fsubl
mov
push
dec
cmp
cmc
add
sub
lret
loop
loop
push
or
inc
sbb
out
jmp
and
movsl
aaa
xchg
por
bound
les
push
ficoms
jae
fstp
repnz
or
add
pcmpeqw
or
fs
pop
faddl
sbb
fistps
fsubrl
cld
add
call
xchg
mov
rolb
popa
jmp
cmp
je
jge
mov
invd
fstps
out
pop
int
adc
inc
sbb
cs
outsl
addl
pop
scas
cmp
cmpl
rorl
push
rolb
jmp
push
jl
jbe
xor
sti
in
pop
ret
cmp
stos
or
adc
lret
popa
push
add
filds
or
rol
pop
dec
cmp
insb
xchg
nop
add
cmp
and
inc
sub
push
lods
outsl
in
bt
ds
mov
or
cmp
mov
lock
icebp
xchg
in
xchg
and
xor
push
jne
pop
ret
cmp
mov
jmp
pop
jne
push
mov
hlt
pandn
hlt
enter
cmp
test
cmp
hlt
nop
dec
sbb
and
aas
mov
pop
mov
cmp
jle
push
fstl
out
sbb
or
sbb
push
or
mov
mov
ret
push
cmp
movsb
xor
jno
lods
pop
sub
jle
jne
jg
push
orl
jg
xor
add
cmp
je
jmp
out
xchg
icebp
out
add
or
cmp
jbe
inc
sbb
loopne
inc
out
movsl
jp
popa
enter
movsl
popf
xchg
sbb
adc
xchg
loop
mov
add
jl
add
jb
or
inc
inc
sub
iret
cmove
es
and
add
jbe
jnp
and
into
sbb
add
in
and
mov
cmpb
out
repnz
inc
outsb
adc
push
adc
mov
out
cld
mov
fistl
icebp
aam
xor
loopne
dec
aam
add
int3
shrb
inc
addr16
sbb
cld
lahf
or
push
or
jl
icebp
dec
jg
or
jne
sub
ret
mov
push
negl
xchg
icebp
or
xchg
cld
rclb
and
fdivr
adc
push
jmp
xchg
ret
cmp
or
pop
mov
mov
sbb
cmp
popf
es
mov
jg
or
add
cmpl
jne
xor
nop
les
cmp
lret
xchg
xor
push
cld
dec
js
pop
jl
cmpl
ds
pushl
lea
ffreep
dec
imul
cmp
dec
or
lock
add
jg
idivl
jmp
test
jmp
jnp
jp
adc
loop
jmp
push
mov
mov
xchg
jbe
dec
xchg
es
mov
or
andl
popa
das
pusha
mov
or
inc
adc
fmuls
jbe
gs
jge
inc
push
in
pop
sub
pop
loope
or
mov
fcomi
shll
fmul
xor
or
pop
out
vcvtps2pd
cmc
pusha
sub
adc
enter
scas
and
or
push
addr16
imul
int
add
sbb
call
add
cwtl
add
ret
and
addl
add
inc
add
push
sub
add
loopne
inc
rorb
sbb
push
jns
loop
pusha
sub
sbb
unpcklps
das
mov
or
jne
cmp
in
sti
mov
data16
sbbb
shlb
in
mov
push
adc
jno
xor
push
mov
clc
sti
std
jnp
jmp
and
cmp
or
jmp
rolb
in
dec
and
or
xor
ret
rcrl
popa
add
leave
cmp
mov
orb
mov
int3
jmp
dec
add
xor
or
adc
lret
sbb
sti
out
shr
ja
or
add
and
add
pop
add
fcmovb
out
inc
add
and
into
or
lods
jg
cmp
je
jmp
ss
sti
loope
and
inc
push
inc
xor
mov
sbb
inc
push
inc
mov
pop
jnp
fsubl
jg
add
clc
sbb
cmp
ror
int
ret
or
dec
out
or
cmp
adc
int3
or
rol
add
or
shlb
jl
or
adc
pop
push
mov
cli
mov
insl
push
je
or
leave
inc
insb
and
sub
cmp
jae
xchg
stc
dec
jb
push
push
push
push
mov
pop
out
add
jne
jbe
pop
test
nop
add
shlb
cmp
jne
xchg
test
int
popa
loope
pusha
pop
xchg
or
lock
cmpl
div
aad
in
loopne
xchg
jmp
loopne
lods
movsl
les
push
movsb
mov
ljmp
aam
incb
xchg
push
xlat
mov
fdiv
jo
je
push
in
pusha
push
push
stos
rorb
es
sbb
fbld
push
rcll
push
xlat
cmc
cmp
add
push
pop
or
test
and
lcall
nopl
xor
xor
push
insb
ds
sbb
pop
sar
cmp
mov
sbb
test
push
push
adc
push
or
scas
dec
and
cld
mov
cs
clc
cmc
popf
mov
cmp
or
sbb
dec
shrb
call
xor
cmp
pop
cmp
adc
add
rclb
sbb
push
stos
dec
push
lea
sbb
sbb
adc
sbb
pop
shlb
and
jge
push
je
dec
sub
outsl
mov
aad
subl
test
roll
pop
lea
mov
or
pop
push
cld
inc
dec
sub
lahf
lea
lea
call
push
jnp
xchg
inc
mulb
jmp
cmpsl
outsb
mov
push
mov
loop
movl
loopne
stos
or
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
jmp
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
sar
ljmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
call
xor
mov
cwtl
push
loope
or
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
pushl
mov
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
ljmp
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
decl
arpl
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
call
or
inc
push
imul
xorb
sbb
push
imul
jg
lock
loopne
pop
jp
adc
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
call
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
incl
inc
or
das
es
lds
or
sub
mov
cmpsl
call
ret
pushl
iret
shlb
sbb
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
sti
jo
lcall
inc
lret
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
sbbl
mov
push
cmpsb
mov
incl
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
int
pushl
mov
or
sbb
add
sub
dec
push
push
sahf
inc
add
push
push
add
lret
sti
mov
adc
push
pop
and
cmp
jbe
call
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
jl
add
js
pop
sub
add
dec
add
sub
outsb
add
insb
add
repz
insb
insb
mov
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
mov
push
push
jae
aas
fistps
loopne
add
push
cmp
inc
inc
dec
jae
jb
arpl
mov
outsl
jb
gs
je
jb
sbb
je
dec
inc
push
dec
ror
sti
xorl
sub
pop
lret
addr16
xchg
pop
fisubl
push
adc
adc
push
jb
test
and
mov
loopne
push
pop
push
push
sbb
dec
inc
sbb
add
inc
and
xor
adc
and
inc
imul
std
jne
jp
push
aaa
in
std
outsb
outsl
je
or
push
arpl
out
insb
mov
imul
inc
scas
outsl
ss
cmp
and
jb
inc
gs
cmp
and
insb
push
idivl
pop
push
gs
das
mov
fisubl
or
les
testb
jo
mov
inc
push
fs
cmpl
sbb
mov
scas
inc
out
sti
sbb
jmp
jb
adc
insb
outsl
arpl
rcr
mov
outsl
popa
pop
add
mov
jo
addr16
insl
inc
xchg
insl
mov
xor
lahf
xor
xor
push
insl
ficomps
out
push
enter
addr16
jae
sbb
xor
fsubrl
add
in
or
dec
decl
cld
push
out
pop
shll
push
imul
mov
cmp
jb
jns
or
js
sub
push
test
lea
add
dec
scas
jnp
rorl
js
jns
in
pusha
push
push
xor
gs
jge
incb
or
inc
jb
push
popa
sahf
lods
outsb
fistpll
ds
bound
inc
xchg
or
dec
add
loop
lret
push
gs
xor
jbe
aas
xchg
aad
hlt
out
push
pop
pop
inc
gs
popa
or
pop
mulb
add
push
sarl
cmc
mov
popa
addr16
outsl
js
xor
push
ss
testb
add
dec
dec
inc
add
cs
std
inc
ds
or
or
dec
jae
ja
lock
sub
sbb
dec
fisubrl
pop
lret
mov
inc
jmp
xchg
add
push
add
xor
daa
idivb
sub
mov
xchg
mov
xor
call
pop
and
inc
js
insb
outsl
imul
pushw
jo
das
das
sbb
add
dec
add
dec
bound
insb
xor
xor
and
sub
or
outsl
mov
pop
dec
xor
mov
xorb
loop
frstor
cwtl
cltd
cltd
ret
and
jmp
cltd
adc
test
fsts
movsl
lcall
mov
out
stos
je
into
enter
imul
shrb
xchg
rol
pop
popf
fdivrl
vmptrst
call
push
adc
mov
lcall
sbb
idiv
mov
adc
pop
xchg
adc
lcall
outsl
int
xchg
lret
iret
data16
gs
shl
popf
and
cwtl
repz
jnp
jnp
imul
sahf
and
pop
adc
popf
repz
lret
xor
or
leave
sbb
adc
inc
xor
adc
std
sbbb
mov
fbstp
mov
iret
lret
sti
fildl
fs
movsl
cli
hlt
std
and
jb
leave
pop
jno
das
decl
in
pusha
enter
ret
shlb
ja
jno
cmp
jmp
data16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
sbb
call
loope
cmp
std
aad
sti
jmp
jmp
xor
jle
push
cld
ljmp
fmul
cmp
xchg
sti
lock
negl
in
cltd
lea
inc
test
dec
dec
dec
dec
push
dec
push
cmp
xor
bound
jne
jae
pop
xor
cs
insb
jae
das
mov
mov
arpl
das
addr16
pop
push
aaa
sti
jnp
jno
xchg
incl
pop
aad
ja
fs
jo
iret
and
ss
push
fucomi
and
xor
and
or
ja
sub
and
jbe
jne
repz
je
ja
gs
gs
jae
and
xchg
mov
arpl
and
sti
add
es
jne
arpl
xor
ds
or
pop
and
addr16
bound
gs
xor
jle
jne
je
data16
and
popw
inc
lcall
ds
or
outsb
outsb
subl
daa
je
das
xor
aaa
push
sti
push
mul
xor
xor
xor
cs
add
outsb
scas
push
jp
jo
sub
xor
add
xor
fldt
and
xor
inc
insl
popa
dec
cmp
jnp
gs
dec
pop
fs
or
adc
popf
das
lret
dec
jg
push
rclb
push
add
outsb
dec
rorb
mov
sbb
adc
adc
fsub
dec
pusha
add
add
mov
xor
lcall
std
int3
inc
fs
mov
pusha
pop
or
mov
push
sahf
jl
add
sub
adc
xor
scas
outsb
jb
dec
inc
push
inc
addr16
lock
mov
add
mov
add
jg
add
xor
sub
add
or
jp
addr16
enter
fdiv
jmp
inc
lcall
fs
inc
sbb
stos
pop
movsl
and
xor
movsb
das
and
xor
lcall
and
sub
mov
scas
push
dec
mov
stos
cmpsl
test
add
in
cmp
mov
push
or
lock
adc
js
or
jmp
fcomps
adc
pop
lds
iret
add
mov
adc
inc
adc
pusha
pop
out
xor
xchg
add
incl
add
jmp
mov
jp
add
int
and
xor
sahf
inc
fcomp
or
add
int3
xchg
ljmp
xchg
rorb
push
shr
mov
int
insb
pop
add
or
and
push
adc
scas
pushl
ss
shr
rolb
mull
add
das
fldenv
and
and
inc
sub
add
sub
push
dec
add
pop
pop
into
or
std
jg
xchg
add
loopne
push
fstpl
add
or
push
pop
push
inc
push
push
imul
cmp
aad
jb
outsb
jae
push
pop
push
arpl
push
popa
popa
stc
dec
outsl
pop
subps
jo
pop
gs
popa
jo
pushl
or
xor
inc
cmpl
cmpl
jne
test
jle
add
nop
test
cmp
pop
sbbb
xlat
xor
mov
or
xchg
adc
pop
add
std
call
dec
adc
jl
mov
ja
mov
push
jg
cmovno
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
jg
pop
jp
jg
add
mov
inc
cmpsb
mov
das
adc
jb
test
cmp
push
pop
mov
pop
lcall
scas
jne
std
cmp
and
xchg
adc
lahf
jp
push
add
icebp
fistpl
fucomip
int
adc
sbb
jne
ljmp
or
mov
call
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
std
fildll
adc
test
movsl
mov
addr16
fs
fnstsw
movsb
adc
mov
mov
sub
leave
enter
pop
out
test
mov
xchg
data16
lcall
fsubl
lcall
adc
mov
rcr
xor
sar
call
in
xchg
pop
push
xchg
lcall
in
jle
adc
mov
xchg
rclb
aaa
clc
ja
test
fwait
push
xor
rcrb
add
call
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
je
mov
jne
xor
jle
pop
loopne
in
addb
jge
or
mov
in
xchg
or
loopne
out
dec
imul
add
add
jo
jmp
sbb
pusha
jns
lret
in
mov
jge
orb
or
mov
add
cli
cmc
imul
mov
int3
mov
pop
pop
test
push
dec
inc
jb
enter
dec
bound
add
and
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
xor
dec
inc
dec
dec
add
push
pop
imul
jne
push
xlat
sbb
dec
dec
inc
xor
push
ja
xor
dec
dec
and
and
add
pop
jle
and
add
or
aam
imul
mov
test
loopne
jp
mov
add
mov
cmp
je
xor
adc
cmp
inc
xor
mov
and
xchg
dec
xor
push
lahf
add
inc
inc
inc
cmovo
insb
inc
push
add
adc
ds
incl
add
sbb
repnz
sbb
scas
xor
cwtl
or
jne
ja
or
incl
jp
into
lods
fisttpll
ret
push
add
mov
out
xor
add
fs
mov
sahf
je
inc
add
jmp
sub
movsb
add
mov
addb
insb
mov
mov
stos
pop
push
enter
dec
pop
imul
sahf
aaa
push
es
mov
flds
inc
mov
pop
lret
and
add
push
dec
ljmp
sbb
or
rclb
fwait
test
rorb
cmc
leave
out
jns
or
pusha
mov
pop
mov
outsb
aam
and
or
in
jp
dec
setne
scas
jl
inc
mov
jbe
inc
js
adc
stos
pop
cmpsb
jmp
cmp
push
push
sbb
xchg
pop
sbb
or
ds
mov
mov
dec
or
lods
or
push
psubusb
add
enter
je
cmp
xor
insb
rsm
xchg
fwait
add
mov
popf
lods
cmp
pop
pusha
rcrl
and
sbb
insb
mov
out
mov
pop
pop
add
outsb
in
jae
pop
mov
rcr
insb
or
or
popf
dec
ficomps
add
imul
mov
adc
mov
ja
fldt
in
scas
adc
push
push
xor
add
push
cmp
sbb
add
or
add
dec
pop
imul
shlb
jmp
add
add
mov
adc
sub
sub
push
push
and
out
aas
sbb
filds
fildll
and
sub
cs
out
jg
pop
arpl
jae
gs
and
and
scas
push
pop
sub
push
and
inc
lock
inc
push
dec
push
inc
push
cmp
popa
jge
push
and
in
lret
shll
sub
push
dec
inc
adc
push
push
or
fsubs
out
stc
ja
cmovns
xchg
sahf
mov
bound
lahf
lcall
fidivs
adc
rcll
sub
jb
lahf
notb
pop
pop
add
pop
fadds
pop
jae
ret
xor
fidivl
jbe
je
aas
inc
and
xorl
mov
add
mov
filds
jns
or
pop
popa
sti
lea
jl
imul
fcomps
cmc
sub
dec
push
and
inc
mov
or
jge
pavgb
pop
xor
stc
pop
pop
gs
xor
lods
jb
xor
arpl
xor
add
ss
add
dec
ljmp
dec
dec
and
push
lahf
pop
inc
inc
pop
popa
mov
fiaddl
outsl
xor
xor
rdmsr
xor
or
jle
pop
outsl
jne
clc
xchg
pop
add
mull
mov
sub
xchg
out
popa
and
dec
push
sbb
fwait
jl
jmp
inc
push
xor
mov
push
push
push
out
jb
test
cs
xor
sub
cmp
xor
aaa
cmp
aaa
xor
cs
movsl
jp
aas
add
inc
je
mov
add
dec
jp
jbe
xor
jg
adc
inc
add
mov
inc
adc
push
lods
in
cmp
add
in
inc
and
cmpsl
xor
cmp
ja
add
nop
add
adc
mov
xor
xor
in
add
adc
or
addr16
push
ja
stc
fwait
ljmp
jae
jae
insb
dec
dec
push
xor
cs
mov
jno
inc
in
pop
sbb
push
jae
push
jb
ja
add
movsb
lods
push
adc
mov
sbb
fs
xor
insl
jns
cmp
loope
inc
addr16
adc
mov
lret
and
or
xor
sub
adc
jae
add
push
adc
cmc
outsl
jo
js
dec
adc
and
jne
outsb
jo
or
fwait
rcll
dec
push
mov
nop
xchg
adc
jne
push
shrl
les
adc
dec
pop
jb
xchg
cmp
inc
adc
sub
jg
xchg
pop
icebp
pop
add
imul
addr16
rcrb
xchg
inc
leave
in
pop
jb
and
jne
aaa
adc
pop
push
mov
shrl
inc
add
scas
arpl
and
rol
sub
add
jne
aas
push
and
popa
insb
cmc
fs
or
cmp
mov
pop
push
inc
inc
dec
push
and
je
mov
arpl
push
arpl
test
push
mov
cli
cs
clc
shrl
jb
not
inc
cld
and
dec
push
push
push
inc
dec
popa
cmp
loop
scas
fwait
adc
mov
xlat
cmp
cmp
ds
pop
cmp
pop
into
clc
lahf
lcall
in
insl
inc
imul
or
xorb
pop
mov
push
ret
push
mov
je
bound
push
inc
sub
loope
jno
sub
out
pop
fmuls
cs
xchg
insl
jp
jae
and
push
dec
mov
movsb
push
push
dec
xlat
xor
and
insl
mov
leave
adc
pop
jecxz
inc
les
adc
sub
shll
mov
adc
je
fldt
int
addr16
stos
test
cmp
arpl
vmovaps
xchg
fsubl
cmp
test
dec
fucomp
aad
xchg
out
xor
xor
out
aaa
in
adc
or
mov
push
insb
pop
loop
int
shlb
and
cmp
loop
mov
addr16
es
daa
das
adcb
inc
paddq
js
dec
push
push
dec
inc
pop
add
mov
dec
add
sub
in
xor
loopne,pn
aam
les
movsb
mov
sbb
cmp
dec
lcall
pusha
pop
mov
pop
test
nop
sub
data16
test
pop
in
in
clc
sbbl
das
lods
xchg
nop
or
and
fs
push
sbb
nop
or
loopne
int3
addb
adc
andl
pop
in
and
dec
clc
or
sbb
cmp
jbe
push
sbb
jg
jg
or
and
sbbb
mov
fdivrs
jle
das
pop
insb
imul
pop
mov
xor
rorb
das
dec
and
ficoml
jl
das
fs
and
movsb
jo
sbb
inc
xchg
and
jnp
in
sahf
aam
cwtl
test
jnp
cmp
sbb
or
jp
jp
orl
nop
insb
int
or
push
push
xor
cs
inc
imul
mov
int3
jns
rcrl
push
test
pop
dec
cmp
ss
cs
hlt
js
push
fcoml
das
mov
pop
xor
enter
dec
gs
cmp
and
add
imul
incb
pop
mov
xor
add
sbb
mov
outsl
xor
push
inc
inc
in
imulb
push
addr16
outsb
ja
arpl
cs
add
dec
outsl
arpl
pop
cmp
dec
ljmp
movsb
pop
addr16
push
dec
push
dec
pop
imul
je
ja
insl
stos
insl
data16
jo
mov
bound
push
insl
jo
cmp
pusha
aaa
mov
cs
frstor
and
and
adc
sarb
dec
outsb
out
insb
insb
push
jp
push
add
xor
mov
pop
out
mov
add
xor
pop
insl
jo
loope
and
out
movsl
aaa
dec
shll
and
imul
push
aas
ret
popa
dec
jne
idivl
mov
push
imul
mov
dec
pop
aas
push
fwait
pop
jnp
xlat
les
sub
push
dec
js
insl
push
push
lods
push
mov
loopne
sub
lods
out
insl
mov
ja
xchg
pop
sub
jg
push
imul
push
jne
xlat
pop
sbb
popa
adc
loop
sbb
sbb
pop
fisubl
cli
cmp
ja
icebp
and
insl
and
je
loope
push
pop
loop
inc
push
inc
dec
push
dec
dec
inc
dec
inc
pushf
push
arpl
arpl
mov
inc
insb
aaa
out
or
arpl
in
mov
outsl
adc
arpl
and
xor
mov
test
dec
dec
sub
add
mov
jb
inc
dec
inc
inc
mov
pop
pop
cmpl
xor
outsb
pop
out
cmc
and
cmp
insb
in
mov
pop
scas
xor
push
sti
pop
inc
inc
dec
inc
push
pop
mov
orb
xchg
outsb
shlb
adc
adc
fdivrs
mov
iret
or
fsubs
jns
test
sbbl
push
jne
jae
imul
dec
xlat
xchg
xor
or
and
subb
sbb
add
push
push
xlat
fwait
pop
mov
ficompl
in
inc
jb
push
fsubrs
lcall
add
movsl
push
inc
inc
xchg
mov
dec
xor
shlb
or
inc
jns
insb
jne
or
mov
movsl
dec
lock
push
xorl
pushf
mov
cmp
aam
out
imul
cmpl
lods
addb
rorl
xchg
subl
sub
add
je
mov
ja
inc
pcmpeqb
mov
addr16
rclb
xchg
imul
cmp
pop
xchg
sbb
mov
mov
push
dec
dec
sub
adc
add
lds
call
loop
xor
sub
fs
push
cmp
fcom
xlat
lahf
loopne
ja
popf
inc
gs
mov
mov
mov
imul
dec
inc
dec
and
sbb
in
sahf
and
movsb
cmpsl
inc
mov
js
mov
push
outsb
daa
bound
sbb
sub
sbb
or
or
xor
inc
adc
mov
and
mov
std
mov
xor
jae
push
arpl
xor
popa
adcl
fs
pop
mov
add
sbb
imul
pop
lds
sbb
push
mov
mov
outsb
ret
adc
pop
push
and
insb
lea
gs
push
pop
pusha
outsl
daa
mov
pop
dec
gs
and
shrl
pop
imul
leave
jbe
stos
mov
xor
les
mov
push
xor
fwait
mov
aaa
jo
jbe
pop
add
push
outsl
outsl
inc
imul
mov
sub
and
aaa
push
sub
xor
cli
inc
jne
loop
push
and
dec
sbb
insb
dec
mov
ret
sahf
xlat
push
xchg
lods
or
ret
inc
outsl
jne
lea
mov
pop
data16
gs
aad
xchg
sub
or
outsl
sub
inc
add
addl
push
pop
xchg
arpl
xchg
pop
sub
test
xchg
sub
mov
pop
inc
inc
inc
in
dec
rcrb
fwait
xor
in
and
repz
or
fsubs
in
rcl
push
pop
arpl
cs
adc
das
adcb
push
adc
loopne
or
nop
sbb
inc
add
subb
shr
fldt
mov
cltd
sub
inc
dec
inc
cmpsb
add
imul
lock
jae
outsb
daa
pop
js
cs
cmp
xchg
fldl
or
lods
dec
mov
lcall
mov
int
enter
aas
shlb
ja
mov
popa
sub
mov
xchg
adcb
imul
imull
outsl
add
xchg
dec
or
ja
push
push
inc
das
jae
arpl
xchg
inc
fsubrs
fs
jae
call
mov
adc
das
jae
outsb
ja
loopne
push
dec
dec
inc
xchg
cs
addl
xor
dec
push
pop
sbb
or
dec
push
mov
ret
ret
jo
mov
mov
jecxz
popf
imul
rol
pusha
add
xchg
mov
mov
rolb
movsb
cs
pusha
ja
lods
fsubrs
mov
mov
fstpt
imul
and
fs
add
loopne
sub
and
xor
sub
pushf
or
pop
aaa
dec
sbb
roll
outsb
mov
fadds
push
loopne
gs
cltd
insb
fs
xor
nop
out
push
pop
dec
rolb
inc
test
xchg
sub
clc
mov
fs
lret
push
inc
dec
add
faddl
sub
loope
loopne
aad
mov
inc
jb
xchg
add
mov
push
nop
sub
in
popa
jbe
or
mov
je
outsl
mov
rolb
mov
jns
sbb
push
incb
pop
add
dec
pop
dec
inc
xlat
lret
jbe
inc
mov
hlt
adc
test
fldt
gs
cmc
imul
cmp
jle
gs
xchg
push
data16
add
xchg
pop
mov
iret
je
addr16
adc
jmp
adc
fisubrl
pop
mov
mov
push
or
inc
test
push
ljmp
ret
mov
sbb
adc
insl
pop
clc
ffreep
fisttpll
sti
push
add
adc
in
push
das
jecxz
jae
pop
push
add
push
jno
ss
pop
sbb
inc
cmpsb
lea
dec
into
add
es
adc
push
je
jge
mov
sbb
imul
aaa
xor
outsl
jns
sub
inc
jne
or
mov
aaa
sub
aaa
sub
arpl
inc
or
add
inc
mov
or
dec
cs
xchg
test
inc
add
mov
mov
imul
mov
fiaddl
inc
daa
xor
sbb
mov
aam
xchg
pop
mov
sub
dec
das
inc
enter
mov
lcall
cmpb
adc
outsb
jecxz
mov
scas
lcall
push
negl
jg
mov
push
xchg
lret
rclb
test
add
es
sbb
stos
jns
popf
imul
inc
imul
lret
add
xor
mov
jnp
les
push
xor
xor
jg
jns
pop
inc
adc
and
push
and
xchg
push
push
push
push
adc
ss
pop
paddusb
inc
repnz
mov
inc
stos
pop
pop
mov
out
adc
out
inc
push
push
push
fs
roll
jne
mov
in
ficomps
add
sub
mov
xchg
pop
pop
sub
sub
or
scas
add
dec
dec
push
inc
je
enter
pop
adc
scas
inc
mov
sub
outsl
push
jns
nop
mov
inc
pop
dec
das
inc
ficomps
push
pop
push
inc
xor
lock
das
and
mov
xchg
push
cmp
gs
xchg
push
incl
enter
push
outsb
jns
je
fs
xchg
push
pop
das
xor
addr16
push
mov
mov
xor
xor
adc
push
pop
dec
mov
mov
aas
jmp
push
or
adc
push
and
sbb
notl
pop
sub
je
adc
inc
mov
inc
dec
sbb
inc
lahf
jl
cmp
cmp
dec
cmp
outsb
nop
insl
jns
fstpl
or
sub
add
jle
mov
adc
adc
js
out
mov
xor
jb
sbb
dec
jp
mov
sbb
or
imul
pop
js
test
into
sub
jo
mov
sub
imul
dec
and
insb
jae
loopne
movsl
push
stc
jae
push
adc
sbb
fbstp
dec
cmp
xchg
outsl
movsb
mov
cmpsl
cli
fs
add
or
rcrb
add
jecxz
outsl
jge
movsb
jecxz
daa
bound
mov
js
das
push
les
lods
cmpsl
inc
outsl
movsb
shlb
push
dec
or
adc
pop
sub
xchg
or
les
mov
push
bound
fcompl
or
xor
pop
imul
xor
and
dec
push
mov
fnstsw
dec
cmp
cmp
sub
sub
std
inc
inc
dec
inc
adc
inc
pop
adc
dec
dec
jo
test
nop
sbbl
cmc
jae
mov
sub
shll
imul
dec
inc
push
dec
sub
or
inc
cmc
pop
and
and
dec
or
push
add
imul
pop
test
div
imul
es
cmp
fists
jae
aaa
fsubl
cmp
add
imul
cmpsl
das
jae
pop
in
scas
xor
cmp
jle
das
dec
inc
pop
adc
and
inc
inc
sbb
idivb
cmp
xchg
xchg
xor
iret
push
xor
inc
adc
or
cmp
push
add
add
mov
pop
icebp
imul
popa
mov
aam
sbb
out
shrb
sub
in
and
test
xchg
and
rorl
imul
cmp
xor
jecxz
aad
mov
test
and
addr16
pop
stos
sbb
fwait
xor
mov
fildl
cmc
dec
push
dec
jge
sub
aad
ret
out
enter
scas
stos
addr16
sbb
pcmpgtw
or
add
and
lods
or
dec
inc
dec
push
jno
insb
xchg
pop
nop
or
jae
pop
popa
sub
cs
ja
insb
and
mov
push
add
mov
mov
sub
adc
inc
insl
push
pop
dec
inc
push
xchg
das
add
movl
test
xchg
dec
sub
xchg
sbb
imul
pop
cmpsl
cmp
aas
push
mov
data16
pop
bound
lcall
inc
push
sbb
and
inc
pop
pop
xchg
xchg
mov
push
xor
daa
jno
xchg
xchg
xchg
xchg
xor
xor
xor
je
xchg
xchg
xchg
xor
xchg
xchg
xchg
ss
aaa
xchg
xchg
xchg
xchg
ja
cmp
adcb
xor
xchg
xchg
xchg
xchg
daa
jp
xor
xor
shlb
xlat
add
push
xor
imul
pop
in
nop
aaa
jns
xor
and
in
xchg
and
ss
cmpsb
pop
fisttpl
jns
pop
es
es
fidivs
sub
pop
es
sbb
mov
pop
sub
jb
mov
cmp
xor
add
out
adc
in
ja
add
adc
testb
ds
add
dec
imul
aaa
cs
ds
test
out
imul
lods
adc
cmp
daa
fistpl
fisttpll
enter
jge
popa
arpl
enter
adc
outsl
out
adc
push
adc
push
jns
imul
daa
dec
push
mov
sbbb
data16
mov
nop
xchg
data16
mov
xchg
out
daa
and
cmpsl
push
adc
mov
andb
push
adc
ljmp
jne,pn
adc
fisubrl
dec
inc
and
jmp
adc
dec
mov
daa
int
cs
daa
cs
fcompl
in
nop
jl
or
inc
push
push
dec
pop
mov
push
jmp
jbe
daa
push
or
sub
es
push
sbb
dec
pusha
lahf
dec
dec
pop
or
movsl
jge
push
pop
or
fildll
dec
inc
pop
or
push
pop
or
jbe
inc
inc
dec
or
and
movsl
sbb
ja
aaa
icebp
mov
xorb
inc
push
pop
or
scas
in
cld
mov
daa
push
inc
dec
or
shrb
sbb
or
inc
subb
push
xor
pop
xlat
insl
mov
sub
nop
pusha
aaa
or
nop
dec
push
popa
xor
dec
push
cltd
xor
dec
push
cltd
fs
push
cltd
fs
xor
fs
dec
aaa
push
xlat
fistpll
dec
cmp
pop
mov
or
jbe
das
sub
sub
add
adc
jle
popa
bound
sub
add
cmc
insb
xor
inc
push
add
arpl
inc
lea
mov
jecxz
imul
addb
inc
adc
int3
outsl
imul
ja
popa
jbe
add
sub
lds
cmp
mov
mov
inc
gs
sub
arpl
push
mov
incl
gs
outsb
jbe
je
jb
mov
or
mov
in
inc
arpl
push
dec
fwait
dec
outsl
push
xchg
sbb
lods
mov
gs
ja
sbb
arpl
mov
cmpsb
adc
xor
das
pop
bound
fs
daa
pop
xchg
mov
insl
jo
mov
mov
dec
jo
inc
pop
adc
es
data16
jo
loope
loopne
insb
jo
pop
inc
outsb
loope
xchg
les
leave
push
push
es
jnp
inc
aas
pusha
imul
test
pusha
mov
mov
aas
pop
mov
or
pop
fs
lods
pop
mov
and
sub
scas
nop
daa
push
je
aas
or
fs
gs
outsl
bound
mov
mov
mov
cmp
scas
dec
arpl
inc
mov
outsl
pop
inc
pop
inc
repz
fidivl
icebp
sarb
imul
dec
outsl
jp
insb
popa
das
xor
sub
dec
lret
xor
xchg
mov
push
ret
daa
push
mov
jle
jb
push
jb
inc
daa
subl
inc
adc
sbb
inc
dec
gs
mov
daa
data16
cmp
xchg
lods
fadds
aaa
add
sbb
daa
xor
lea
add
sub
push
movsl
pushw
cmp
bound
fs
mov
pop
push
adcb
scas
je
test
nopl
scas
repnz
push
jbe
fstpl
lcall
outsl
shll
imul
outsb
push
push
shlb
pop
push
lock
jecxz
xchg
or
fiaddl
or
ret
insb
push
ret
jo
fcompl
push
dec
fs
fnsave
inc
inc
dec
jae
push
inc
test
inc
push
arpl
push
cmp
pop
dec
cmpsb
mov
xchg
dec
bound
inc
sbb
arpl
inc
mov
je
add
ss
es
inc
js
sahf
les
inc
insl
dec
fisttpll
js
fldenv
outsb
outsl
dec
roll
or
mov
mov
je
movsl
outsb
ficoms
rorl
inc
push
cmp
push
xchg
push
xchg
jae
pop
inc
andl
jns
outsl
int
lods
push
scas
push
push
cli
jae
jmp
pop
sub
mov
xchg
inc
add
pop
pop
sbb
sahf
sbb
pop
inc
dec
fwait
add
out
pop
push
outsl
imul
testb
jo
rorb
xchg
jo
lahf
shrl
inc
push
pop
pusha
bound
mov
ja
outsb
push
clc
sbb
ret
lods
sub
test
fisubl
jle
shlb
int3
sbb
xchg
mov
jl
gs
mov
adc
inc
pop
push
pop
gs
push
cmpsl
and
in
inc
fidivrs
popa
jae
add
mov
sbb
jg
jl
imul
xorl
fcomps
pop
mov
loopne
es
into
jmp
pushl
lds
inc
xorl
or
push
cmp
in
push
imul
call
add
sub
jbe
jo
out
dec
mov
daa
jmp
add
inc
loope
loopne
xchg
pop
sub
dec
arpl
lcall
test
sbb
outsb
dec
jo
cwtl
jle
push
add
out
iret
or
dec
rcrb
and
mov
pop
sbb
pop
in
jl
add
dec
xor
pusha
rcrl
scas
jo
xor
test
dec
iret
xor
cmpsb
xor
sbbb
mov
jbe
push
daa
xor
add
leave
xlat
mov
test
call
xor
xor
std
inc
vmread
xchg
xchg
push
out
push
jmp
jge
cmpsl
lret
jne
mov
jnp
test
jg
jo
jno
or
and
arpl
cmp
sti
cltd
andl
jo
adc
std
and
and
icebp
xchg
repz
and
pop
dec
or
and
adc
bound
arpl
inc
rcrb
mov
xor
pop
imul
lods
in
cmpsb
imul
add
les
mov
push
push
cmc
movsl
rclb
popa
push
fs
adc
cmp
and
rclb
sub
jbe
xchg
push
mov
data16
mov
fdivrp
loope
push
jo
shlb
push
sti
and
push
movb
sbb
cmp
call
jo
cmp
stc
ret
test
push
out
nop
insb
out
adc
cs
loope
add
cmpsb
mov
cs
mov
jae
adc
inc
inc
bound
stc
inc
add
and
or
ja
call
outsb
in
rcl
xor
arpl
cmp
lea
insl
addl
fs
int3
push
arpl
loope
inc
arpl
dec
xor
mov
mov
mov
or
outsb
add
inc
lock
jae
inc
jbe
imul
test
pop
mov
popa
inc
fs
fnstcw
adc
jb
sbb
xchg
mov
push
mov
roll
sub
xlat
push
orl
inc
test
pop
adc
mov
mov
cli
call
jne
dec
adc
pusha
cmp
cmpsb
mov
jp
jecxz
jne
scas
mov
adc
aaa
jo
fsubs
adc
xchg
or
xor
mov
sahf
scas
int3
out
cmp
lret
arpl
or
add
pop
inc
adc
mov
add
lds
or
sub
arpl
loop
loope
push
xchg
data16
push
mov
das
and
or
pop
inc
shll
push
pop
mov
test
outsb
iret
xor
ficomps
fisttps
dec
int3
mov
push
push
xchg
dec
sub
lea
out
stos
and
nop
sbb
xchg
gs
fsubr
pop
xor
cmpsl
push
inc
or
test
add
loop
adc
arpl
and
pop
push
dec
add
jo
imul
pop
pop
sbb
sub
es
ja
xchg
lret
cmp
and
addl
test
or
aaa
add
fsubrs
mov
inc
xor
jg
xor
pop
or
pop
cmp
jne
xor
fnstcw
dec
sub
adc
adc
lock
mov
push
mov
xor
add
insl
xor
add
mov
testb
and
inc
nop
or
mov
push
aas
adc
fidivl
cmp
sub
xchg
push
rolb
push
xor
das
mov
js
inc
insb
addr16
jns
mov
daa
jge
jne
mov
cmp
add
fs
add
test
arpl
or
or
movsl
jmp
insb
xlat
out
push
adc
data16
outsb
xchg
xor
dec
gs
arpl
xchg
mov
jno
add
daa
xchg
cmp
sbb
adc
xchg
push
pop
es
jne
mov
ret
mov
out
dec
insb
int3
inc
push
test
ljmp
cmp
mov
dec
mov
mov
shll
and
mov
jo
push
cmp
and
and
aad
lock
xchg
sub
mov
jge
stos
push
and
mov
rcrl
mov
sub
jp
fadd
test
add
cmp
jge
xor
xor
imul
mov
pusha
insl
outsb
int3
jne
mov
stos
add
rcr
add
cmp
mov
outsb
mov
sub
mov
sbb
jo
and
not
jns
cmp
sub
mov
inc
add
xor
daa
lret
pop
shlb
inc
pop
outsl
push
pop
and
into
pop
or
and
insb
jns
adc
add
hlt
ret
jbe
xchg
pop
mov
and
mov
andl
sbb
and
shlb
mov
leave
jecxz
enter
sarl
test
scas
and
dec
inc
or
pop
fidivs
add
adc
inc
jne
repz
movsl
add
test
dec
jne
adc
insl
push
jbe
popf
sbb
dec
shl
pop
jnp
mov
addl
sbb
aaa
sbb
sbb
popa
subl
popf
les
jne
push
push
push
dec
inc
dec
dec
pop
cmpsb
leave
adcl
jae
clc
dec
xchg
push
sbb
dec
out
xor
stos
cs
bound
xchg
jo
jns
jnp
icebp
rolb
dec
pop
or
push
test
imul
loope
sub
inc
mov
shrb
dec
mov
and
inc
push
xchg
jno
push
pop
cmp
add
int3
notb
inc
es
pop
fldl
fdivrs
das
inc
mov
or
mov
and
mov
les
push
push
test
sub
enter
inc
and
test
and
adc
sub
xor
inc
enter
enter
aas
daa
test
inc
pusha
jle
loope
xor
cs
cmp
inc
xchg
and
inc
and
inc
xchg
and
sub
sub
xchg
aas
or
inc
daa
pusha
inc
xchg
push
sbb
imul
nop
and
inc
and
and
sbb
nop
pop
sub
sub
sbb
das
pop
xchg
daa
or
inc
pusha
jle
xchg
nop
test
and
sbb
and
mov
les
jae
lods
mov
or
adc
les
and
mov
repnz
mov
test
and
inc
mov
xchg
and
and
lea
xchg
inc
dec
dec
and
dec
dec
inc
dec
pop
cs
push
inc
push
or
sbb
out
and
pop
imul
pop
dec
sbb
push
push
pusha
cmp
inc
idivb
jo
jns
insb
pop
add
mov
das
pop
cs
jle
pop
cs
dec
dec
mov
xor
dec
sub
imul
sub
mov
sahf
or
inc
dec
push
rorb
cmp
push
insl
inc
inc
xchg
adc
mov
ljmp
jae
imul
push
jg
pop
fisttpl
sub
mov
push
fbstp
xlat
addr16
and
pop
and
dec
cmp
sbb
or
mov
cmp
imul
mov
add
push
pop
cmp
add
bound
imul
push
pushf
xchg
in
arpl
and
fs
jecxz
sub
sub
mov
jbe
mov
jno
je
je
outsb
adc
cld
and
push
mov
addr16
and
push
das
ret
sub
insl
inc
loopne
pop
jae
mov
cmpsb
imul
cwtl
dec
insb
lcall
or
aam
ss
mov
push
sub
rol
cmpsb
imul
insb
lcall
rclb
shll
jae
nop
rolb
js
dec
ss
mov
cmp
rcrl
shlb
push
sub
iret
push
and
xor
in
mov
cmc
or
pop
pusha
popa
adc
jno
arpl
cmpb
dec
ja
mov
adc
adc
push
addb
push
fs
push
pushf
dec
shll
xor
fnstenvs
int
or
mov
xor
inc
call
sarb
mov
movsb
shll
xorb
dec
push
inc
shll
xor
sub
pusha
shll
cld
int3
cmpsb
imul
push
in
fdivrs
enter
push
push
dec
shll
je
xor
shll
pop
push
dec
dec
shll
cmp
sub
sbb
or
fnstenvs
cld
lret
clc
lock
daa
imul
push
ror
inc
pop
shll
test
mov
xchg
mov
lcall
jns
rcrl
and
nop/reserved
push
add
lret
cmpsb
fnstenv
aam
xchg
int3
push
movsb
addr16
cs
lods
imul
xor
roll
shll
dec
lret
jne
mov
lret
add
int3
ret
arpl
dec
adcb
push
pusha
and
mov
bound
dec
sub
jg
push
fisubrs
nop
push
popf
cmp
or
mov
sbb
arpl
into
bound
rorl
sub
lret
fisubs
outsl
and
outsl
bound
xor
xor
les
and
push
add
cs
es
pop
bound
insb
imul
push
pop
pop
lret
test
mov
push
out
xchg
jle
push
mov
aaa
xchg
les
cmp
push
jne
icebp
jb
iret
xor
adc
sarb
sbbb
pop
push
push
mov
push
sub
jg
sub
pop
mov
add
mov
push
push
adc
mov
and
cmp
jo
divb
scas
out
test
inc
pop
jo
fimuls
aam
push
push
in
xor
rcrl
sub
outsl
bound
jno
jp
in
push
mov
mov
out
lods
push
cmp
add
aam
cwtl
mov
cmp
inc
fdivl
insl
push
insb
cmp
add
sahf
notl
jne
pop
push
lods
adc
inc
ficompl
or
popa
outsl
push
xchg
std
insb
push
movl
outsb
jne
sbb
or
push
sbb
sub
fisttpl
aaa
mov
bound
mov
enter
outsb
outsb
aas
enter
push
push
iret
push
xor
orl
xor
sarb
cmp
xor
or
sub
das
inc
nopl
or
das
aas
push
mov
stos
dec
jo
out
xchg
dec
pop
pop
and
inc
imul
mov
adc
cmpsb
cs
rcl
lret
out
daa
xlat
sbb
cmp
lods
shll
and
rorl
add
push
stc
inc
dec
jmp
movsb
jecxz
push
xchg
notl
fdivrs
aaa
and
jno
pop
dec
push
ja
inc
cmp
int
dec
mov
push
mov
out
icebp
divl
jnp
and
sbb
xor
icebp
dec
std
and
cmp
sub
clc
push
scas
test
xchg
int3
and
movsb
xlat
xor
or
push
cltd
jmp
cs
xor
cmp
decb
and
jne
dec
and
xchg
inc
dec
daa
sarb
inc
sub
push
jne
mov
rorb
outsb
pop
inc
out
cmp
data16
repnz
pop
pop
jae
pop
cwtl
dec
mov
das
or
test
addr16
dec
shl
xor
in
adc
dec
insl
aam
sub
push
in
outsb
or
imul
pop
js
out
aaa
sbbl
and
and
rcrl
ss
pop
and
jecxz
mov
add
inc
pop
sbb
push
add
pop
insl
in
std
orb
pop
bound
push
and
inc
sub
daa
bound
js
pop
jmp
sub
aam
popa
js
sub
sub
outsl
sarl
push
gs
jmp
mov
mov
jno
das
addr16
adc
pop
pop
mov
arpl
fwait
js
push
mov
sub
mov
sub
sub
aam
adc
xchg
js
inc
xchg
iret
rol
test
adc
in
sbb
pop
dec
and
cmp
or
xor
lea
movsl
mov
jae
js
insb
aaa
jb
dec
mov
xor
fnsave
xor
adc
add
xor
add
and
leave
sub
inc
outsl
popa
je
mov
push
xor
push
bound
jns
sub
mov
jbe
xor
or
mov
popa
lock
insl
sub
pop
jae
inc
adc
or
add
inc
pop
push
dec
dec
inc
dec
mov
vmwrite
js
mov
pop
xor
mov
mov
das
dec
sbb
nop
sub
sbb
std
push
inc
outsl
add
data16
inc
ss
imul
sbb
lea
inc
inc
dec
fbstp
gs
dec
inc
pusha
adc
jne
ss
mov
mov
popa
das
xchg
or
fldcw
cmp
dec
xor
sub
cmpsb
inc
jb
push
es
into
mov
bound
cmpsb
jmp
xor
xor
loopne
sbb
dec
and
into
lret
insl
sub
aaa
sahf
xor
xor
ss
xor
jb
bound
sub
cmpb
xor
pop
mov
lods
pop
add
aaa
insb
xor
xor
aaa
imul
dec
pop
addr16
mov
outsb
sub
sub
imul
push
dec
out
aaa
int
add
jge
ret
mov
push
pop
xor
fnstenv
jp
fs
cmp
lods
xor
xchg
loopne
loopne
or
inc
les
xor
movsl
dec
dec
jp
into
dec
dec
cmp
pop
ret
dec
mov
inc
gs
mov
cmpsb
roll
sarb
in
insb
sbb
fsubrs
sub
mov
faddp
xor
jg
or
xlat
xor
pop
sub
loopne
inc
cmp
pop
and
movsb
std
add
daa
cmp
sub
pop
sbb
mov
inc
push
dec
inc
xor
mov
fimull
cmp
arpl
loopne
inc
pop
js
loopne
pop
sub
push
pusha
aaa
mov
sbb
jo
xor
out
jb
les
outsb
adc
add
xor
out
xor
cld
sbb
js
cmp
pop
cmp
pop
gs
loopne
pop
adc
lret
xor
addr16
xor
imul
inc
add
fisubl
testb
gs
lahf
dec
sbb
or
xor
sub
jo
sbbl
rorb
xor
ljmp
adc
sarb
sub
sbb
cmc
jne
test
push
sbb
xor
aaa
ret
xor
pop
or
das
test
mov
das
pop
adc
outsl
adc
loope
pop
movsl
dec
out
es
jb
or
inc
and
out
inc
push
inc
xchg
scas
add
das
xor
popa
fldt
mov
fwait
sbb
xor
addr16
fildl
icebp
pop
sub
mov
inc
xchg
mov
add
das
xchg
sub
xchg
push
and
add
loop
mov
sub
pushf
sub
in
mov
sbb
dec
jl
mov
loopne
dec
into
sbb
add
and
adcb
daa
jb
pop
ja
xchg
out
orl
insl
sti
js
dec
adc
dec
adc
jle
pop
aaa
inc
mov
das
add
mov
jo
pushf
loopne
or
mov
lock
inc
fisubl
mov
xorl
data16
push
add
add
movsb
nop
jo
fisubrl
mov
in
push
jg
push
push
popf
divl
push
outsb
cmp
xor
ljmp
aas
push
jo
icebp
push
push
lock
bound
fcomps
dec
das
es
ret
push
sub
push
pop
dec
mov
inc
push
push
inc
jb
stos
xorb
mov
and
test
outsl
xchg
jbe
es
adc
imul
xor
iret
ljmp
adc
pop
inc
inc
arpl
adc
add
add
pusha
xor
aas
mov
int
pop
jb
sbb
cltd
fcoms
mov
rcll
fimull
das
enter
cltd
lea
out
sub
jo
rcr
mov
daa
dec
inc
sub
addl
fbld
inc
push
imul
sbb
xlat
inc
jbe
or
add
sub
lods
aad
jne
mov
movsl
fcoml
bound
nopl
pop
xor
andnps
pop
cmpsl
jbe
mov
ja
and
fsubrs
outsl
call
jmp
and
inc
lret
xor
inc
cmp
inc
popa
mov
push
dec
imul
orb
loope
pop
aaa
dec
jae
adc
jb
inc
jg
sbb
sti
inc
inc
mov
fidivrl
xchg
xor
ficompl
xchg
sbb
jne
les
xor
jge
adc
or
lods
or
xor
fildll
fildll
xchg
lret
fists
mov
pusha
insl
adc
adc
and
lret
jnp
bound
bound
or
insl
sub
mov
out
adc
lods
lods
cmpsl
or
outsl
out
pusha
pusha
sub
pusha
pusha
out
popf
stos
adc
mov
jno
inc
add
pushf
sbb
fwait
xor
and
aaa
cmp
mov
popa
ja
inc
mov
dec
pop
or
cmp
cmc
push
movsb
fdivrs
dec
dec
imul
mov
stc
loope
cmp
mov
xchg
sub
add
ret
xchg
dec
xchg
lock
mov
js
and
sarb
arpl
dec
lods
lea
in
outsb
imul
push
ret
mov
lcall
in
inc
or
xchg
inc
xor
inc
inc
adc
sbb
xor
sbb
bound
cmp
add
add
sub
sbb
out
mov
insb
or
push
pop
aad
rol
lcall
btc
fbstp
out
push
dec
push
rcr
lds
lods
sbb
ja
lods
adc
movsb
pop
adc
fcoms
cmp
or
jno
push
push
gs
es
or
aas
cmp
jg
out
imul
mov
test
test
push
sbb
sbb
loopne
mov
hlt
andl
fwait
mov
ja
push
fsubs
jne
mov
aas
push
mov
dec
jae
jbe
add
or
push
rorl
mov
aas
mov
sub
cltd
push
mov
out
pop
les
xchg
xchg
push
cwtl
fiaddl
dec
mov
xor
sbb
add
jle
adcl
mov
aam
sub
ficoml
xchg
pop
orl
gs
cmp
mov
orb
arpl
push
jae
adc
popa
ljmp
insl
jae
cs
inc
sbb
push
push
xor
je
fildll
cs
out
sbb
lahf
rcrb
inc
dec
dec
dec
dec
sbb
das
insl
insb
in
push
js
ja
dec
pop
cmp
aas
rorl
ja
daa
jp
stos
dec
inc
mov
add
sub
pop
mov
sub
daa
xchg
popa
ljmp
cmp
loopne
icebp
daa
fadds
inc
lret
and
jp
addr16
mov
cld
rcrb
ret
add
jns
mov
add
adc
insb
fiaddl
mov
aad
add
mov
inc
subb
mov
xor
inc
bound
adc
shl
popf
scas
mov
pop
adc
dec
xor
push
pop
insl
sub
mov
movlhps
pop
adc
push
pop
mov
and
sbb
xor
jbe
lods
test
mov
and
jns
aas
test
push
mov
dec
sbb
jb
inc
fwait
mov
mov
xlat
pusha
xchg
add
sbb
xchg
mov
jg
mov
dec
adc
pusha
aad
inc
addr16
xchg
or
faddp
xor
pop
inc
mov
push
push
dec
pop
inc
cmc
push
pop
sahf
inc
jle
or
inc
push
addr16
and
adc
adc
push
outsl
adc
pop
sbb
arpl
pop
mov
sub
cmp
into
adc
cli
jae
shrl
pop
sub
inc
adc
dec
inc
sbb
out
mov
cmpsb
outsl
test
sbb
fnsave
sub
fisubl
sub
jns
leave
mov
mov
sub
push
and
shll
add
and
subb
or
sub
sbb
jae
adc
or
fsubs
mov
fwait
mov
or
and
pop
es
ss
sub
mov
sub
adc
sbb
rol
roll
pop
push
pop
data16
mov
data16
dec
fsubr
pop
shl
dec
jo
lretw
lds
scas
andb
inc
jb
hlt
inc
cmc
aam
ds
stc
mov
stos
pop
jl
outsl
push
mov
enter
cltd
and
pushw
test
test
dec
pop
notl
nop
sbb
sub
inc
add
imul
add
decl
flds
xchg
jne
mov
or
sub
inc
test
pop
adc
pop
push
mov
bound
fnstsw
dec
or
jo
mov
cmpsb
or
fwait
insl
dec
dec
xchg
in
or
add
or
pop
pop
loopne
cmp
xor
jae
xlat
arpl
sub
jbe
jne
fs
imull
adc
arpl
push
ret
push
out
jo
movhps
daa
xchg
mov
jno
xor
orb
stos
ss
inc
push
mov
pop
add
frstor
push
push
cmp
mov
clc
pop
mov
or
lods
int3
stos
mov
pop
jo
adcl
xor
push
jmp
scas
out
lea
loopne
insl
push
adc
jb
popa
lcall
cs
or
sub
xchg
popa
xor
and
js
popa
hlt
mov
sbb
lcall
jb
fidivs
sub
push
insw
push
aaa
les
sbb
push
pusha
out
mov
push
jno
jno
inc
frstor
pop
xor
arpl
inc
pop
jo
insb
xor
adc
scas
lds
aaa
ret
cmc
pop
or
pop
xchg
inc
adcl
sbb
mov
addr16
inc
outsl
xor
mov
cmp
ja
pop
pop
fstpl
aaa
xor
stos
push
imul
mov
in
cs
pop
mov
jne
sub
js
mov
ret
leave
xlat
fiadds
rcrl
ret
fstl
sub
stos
mov
and
ja
sub
mov
xchg
stos
cmpsb
aad
xchg
push
cmpsl
xchg
push
cmp
popaw
xlat
repz
js
and
arpl
mov
cmc
js
pushf
jle
pmaxsw
push
push
mov
jge
imul
pop
addb
push
aas
outsb
into
test
ljmp
pop
add
push
ds
fisubrs
out
pop
jno
jne
mov
out
lock
xchg
cmp
jb
fsubs
fnstsw
or
push
cmp
xor
fbstp
pop
mov
out
jbe
mov
add
insb
and
into
mov
cwtl
mov
daa
jb
psubsw
fsubrs
push
rorb
lock
rorb
pop
adcb
jo
dec
inc
in
push
cmpsb
arpl
jo
inc
sub
or
inc
mov
rorb
push
int3
adc
ja
outsl
das
test
pop
push
imul
inc
jne
inc
adc
ds
aaa
popa
push
mov
movsl
fistps
sahf
push
lock
inc
gs
dec
ss
cwtl
cmp
je
into
jae
insl
pop
arpl
insb
dec
jae,pt
push
mov
cmpsl
xchg
in
and
add
into
push
cmpsb
or
xor
das
arpl
xor
das
mov
popa
mov
popf
pop
pop
fdivrl
pop
or
add
add
ret
inc
jae
xor
aam
ret
pop
fisubl
pop
xor
jno
sahf
pop
scas
enter
daa
push
xlat
test
fistps
inc
ret
inc
inc
cwtl
push
and
ss
ret
data16
cmp
ret
daa
data16
sub
pop
push
ret
push
arpl
pop
test
call
xchg
jnp
test
cmp
ss
jns
inc
ficompl
xchg
aaa
out
pop
push
out
pop
or
testb
adc
add
pop
pop
push
pop
xlat
dec
or
mov
iret
fisttps
mov
xlat
pop
ja
insb
adc
ds
stos
xlat
add
xor
mov
es
rol
push
or
or
and
js
clts
mov
sub
icebp
pusha
sbb
sub
push
sub
lret
xchg
pop
and
push
in
ret
cmp
inc
aaa
popa
outsb
add
ja
add
pop
and
inc
stos
xor
sbb
in
addb
test
push
jecxz
jecxz
cmp
loope
and
lods
pop
pop
push
push
subb
mov
sub
mov
inc
or
out
mov
addl
xor
negb
shlb
push
push
mov
push
xchg
pop
jnp
add
or
push
pop
xor
push
or
scas
ja
push
inc
pop
loopne
xor
shrl
mov
mov
dec
add
xor
add
push
sahf
inc
xor
adc
sbb
jbe
jne
cmc
dec
push
into
in
dec
mov
pusha
or
add
ja
dec
loope
dec
stos
scas
push
and
sub
incl
test
mov
cmp
inc
andl
popa
cltd
jo
push
or
and
sbb
inc
push
xchg
andb
lahf
pop
ret
sub
std
xchg
sbb
push
or
mov
add
pop
cmpsb
pop
sbb
lahf
jo
adc
aad
lahf
dec
adcb
mov
mov
in
lahf
in
test
xor
add
mov
mov
mov
jmp
dec
addl
adc
sbb
cltd
sbb
mov
pop
test
or
daa
movsb
call
jae
xor
and
clc
xor
inc
lods
mov
cmp
je
or
loopne
sbb
insl
sub
push
jbe
xchg
push
dec
cmovg
adc
pop
xchg
sbb
jae
rcll
pop
xor
or
add
ret
xor
or
dec
fldl
ss
xor
imul
and
test
jl
add
dec
divl
cmp
sub
int
cmp
dec
push
xor
sbbl
push
push
cltd
add
push
sarl
pop
sbb
cmp
add
jo
mov
xor
push
cmp
stc
cmpsb
decl
inc
inc
inc
dec
dec
dec
xchg
add
pop
les
cmpsl
imul
mov
mov
jp
shl
adc
stos
fs
inc
mov
push
popa
dec
cmp
xchg
shrl
adc
nop
dec
jae
stos
pusha
adc
inc
ret
gs
pop
mov
out
push
dec
push
imul
push
outsl
movsl
rorl
inc
inc
fadds
inc
iret
insb
rol
xchg
outsl
inc
xor
lahf
hlt
mov
inc
jne
lods
dec
adc
rcl
mov
xchg
aaa
sub
mov
lods
adc
ja
adc
pusha
and
popa
or
push
insb
or
or
mov
xor
ja
pop
inc
enter
add
add
or
outsb
dec
add
sbb
push
sub
bound
pop
jae
or
push
arpl
mov
lods
inc
push
xchg
test
dec
push
xchg
inc
mov
xchg
orb
pusha
sub
push
aaa
fstpt
fsubrs
jno
popa
and
adc
xor
or
jbe
pop
xor
or
inc
cmpsb
dec
fsub
stc
das
mov
or
mov
pop
enter
xor
jo
mov
or
or
xor
inc
jl
inc
cmp
rolb
lret
js
es
decl
add
push
push
push
and
adc
clc
mov
cmp
add
xor
push
xchg
mov
fistpl
xlat
add
add
push
call
and
je
clc
test
call
inc
shll
ret
call
pop
jl
in
dec
ret
pop
pop
pop
push
sub
cmp
add
inc
mov
rep
mov
stos
push
push
push
push
adc
adc
mov
ret
clc
dec
mov
push
test
ret
dec
paddsb
adc
loop
mov
imul
imul
mov
jg
mov
or
inc
es
jno
jp
fidivrl
test
mov
push
fwait
sub
and
lea
imul
push
ja
mov
pop
stos
push
ret
mov
pop
push
ficomps
aad
dec
push
pop
inc
push
push
int3
dec
ss
dec
ret
out
and
into
rorb
sarb
push
sub
fcomps
adc
cmp
dec
or
push
das
outsb
mov
or
mov
imulb
inc
mov
mov
sbb
push
pop
fsubrs
dec
adc
push
les
push
pop
or
leave
imul
or
inc
or
adc
cmp
inc
xor
and
mov
push
cltd
jb
push
mov
or
mov
or
cli
lods
sub
or
xchg
sahf
test
lods
add
inc
push
pushf
push
cs
pop
bound
add
addl
dec
les
xor
movsl
lods
push
sub
add
popa
les
dec
inc
iret
xchg
addr16
les
push
xor
movsb
and
add
mov
push
outsb
sub
add
dec
sub
xor
mov
int
sbb
aad
cmp
jb
shrb
dec
imul
push
fwait
sbb
leave
jnp
cmp
xor
xor
nop
gs
insb
add
xor
lahf
adc
ds
sub
sub
rorb
mov
xor
and
out
adc
insl
insb
xchg
inc
clc
add
and
xchg
and
cmp
fldenv
stc
testl
inc
inc
inc
push
cmp
cmpsb
and
jno
adc
and
enter
outsl
je
sub
lcall
lods
lods
push
pop
das
popa
adc
add
aaa
fimuls
and
and
inc
inc
push
pop
sub
das
pop
pop
insb
repnz
jne
jae
xchg
inc
add
dec
xor
pop
out
pop
jg
add
movsb
push
and
mov
movsl
fcmovne
iret
dec
sbbl
mov
fisubl
roll
cmovo
outsl
xorl
sbb
in
call
popf
mov
add
mov
xor
std
xchg
rcr
fsubp
stc
jae
jle
sbb
pusha
test
mov
xchg
sub
dec
add
nop
add
adc
nop
add
sbb
adc
prefetchwt1
or
adc
add
mov
cmp
lock
sub
adc
loopne
data16
in
push
push
add
lcall
push
or
push
sbb
out
cs
aaa
or
fidivl
adc
adc
ret
push
jns
and
ss
push
das
push
mov
ret
xchg
push
mov
shlb
jo
jb
or
orl
cmpb
test
nop
inc
lcall
or
insb
movsb
fbld
popa
fmul
aas
xlat
pop
sbb
and
aas
repz
incb
mov
outsb
push
sbb
or
lea
enter
mov
or
xchg
xchg
aam
lds
or
sbb
add
push
sub
sub
pop
push
or
xor
shll
or
loopne
xor
lcall
adc
lret
dec
rcrl
sub
cmpsb
imul
cmpsb
imul
jbe
cmpsb
cld
clc
xchg
jl
inc
pop
dec
xchg
test
inc
int3
lidtl
adc
adc
mov
xchg
xor
push
add
xor
daa
mov
xchg
push
or
shll
jg
jo
icebp
cmp
outsb
push
cmc
push
inc
jg
xorb
icebp
cld
push
mov
sbb
add
pop
in
data16
push
push
cvtps2pd
js
dec
shll
mov
repz
in
fisubl
add
push
pop
dec
push
shll
xchg
mov
shl
test
pop
cmp
push
dec
insb
xor
dec
dec
sti
mov
add
xchg
cmp
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
add
ljmp
inc
or
addl
cmpsl
xchg
cmp
jmp
popf
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
out
test
mov
push
pusha
les
sti
filds
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
inc
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
dec
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
sti
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
stos
inc
imul
mov
push
inc
or
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
fidivrs
add
add
push
outsb
fs
sbb
sbb
dec
pop
adc
adc
jbe
popa
jb
das
adc
jne
inc
xor
fcoms
push
push
lock
js
dec
pushw
add
fcompl
add
adc
shlb
jle
push
adc
pop
and
fs
mov
lcall
js
je
in
insl
adc
push
das
add
mov
dec
and
loopne
stos
aam
sbb
gs
mov
inc
jns
push
imul
xchg
repnz
add
add
fstpl
das
jnp
shrb
pusha
lock
imul
leave
adc
dec
shll
push
imul
imul
xor
lcall
adc
xor
pop
mov
inc
add
mov
jbe
inc
add
insb
mull
cmp
inc
sub
sbb
and
pop
rcll
addr16
pushf
cmpsl
push
sub
in
bound
mov
dec
add
mov
lahf
jbe
add
loop
add
nop
and
mov
ret
dec
ror
clc
xchg
ret
inc
push
sbb
roll
adc
insl
add
mov
and
mov
test
push
jbe
imul
movsl
or
mov
fcompl
add
xchg
popa
mov
call
sub
push
addl
xor
popa
cmp
sbb
aad
lahf
xor
outsl
pop
addl
sbb
mov
mov
je
nop
fcomp
int
adc
add
xchg
add
inc
imul
pop
add
or
sbb
nop
xchg
and
mov
add
lcall
jno
mov
dec
sbb
insb
xor
cmc
cmp
rcrl
lds
popa
ret
add
push
adc
jo
sbb
ss
and
icebp
test
push
mov
inc
inc
das
and
mov
dec
outsb
fsts
fsubl
push
adc
adc
sub
mov
in
sub
xlat
stos
jbe
push
inc
andl
mov
sub
dec
pop
or
insl
inc
add
divb
inc
sub
mov
jb
push
xor
sub
push
and
or
jo
inc
in
outsb
lds
out
mov
jbe
inc
sbb
pop
add
pop
xchg
pop
jae
mov
and
push
sbb
xor
push
jno
jnp
enter
insl
jno
cmp
adc
fnsave
adc
inc
pop
inc
lcall
adc
dec
inc
dec
jo
mov
push
sbb
push
stc
inc
js
jo
push
add
xchg
gs
mov
or
pop
xchg
gs
pop
adc
pop
xchg
gs
adc
add
add
push
fildl
clc
dec
add
jle
mov
add
add
add
push
mov
stc
sarb
popf
add
add
ret
add
sysenter
or
fstp
rorl
push
push
add
or
in
dec
or
add
cmp
sub
dec
add
add
push
add
add
or
shrb
pusha
jb,pn
pop
lods
sbb
adc
inc
xor
fsubrl
mov
sub
sti
lock
rolb
aas
cmp
das
mov
or
dec
xchg
and
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
