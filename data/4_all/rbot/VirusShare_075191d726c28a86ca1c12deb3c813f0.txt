lock
divl
in
and
lret
cltd
mov
or
sarl
jmp
sbb
jge
cmpsb
sarl
and
pusha
in
cmp
mov
push
push
pop
jle
ss
out
cmpsl
and
xor
test
les
pop
sub
stc
mov
mov
mov
cmp
mov
adc
sbb
pop
movsb
ss
mov
pop
mov
push
pop
bound
mov
dec
or
stc
lock
xor
cmpsb
or
lret
ljmp
idivl
add
xchg
lahf
push
dec
mov
adc
orl
mov
orb
pop
loope
push
pop
divb
push
shll
mov
push
mov
adc
daa
push
mov
gs
cli
fcmovnu
xor
mov
or
mov
or
fyl2x
cli
stc
inc
adc
mov
mov
stc
jp
repnz
andl
push
icebp
jmp
stos
addr16
inc
mov
std
ss
ret
and
imul
nop
and
add
loopne
ss
int
adc
pop
clc
jne
movsb
enter
xchg
inc
cmpsl
inc
or
inc
movsb
pop
loope
mov
sbb
jge
mov
stos
in
stos
xor
es
gs
push
stos
js
bnd
je
bts
in
call
jbe
or
pop
xchg
sahf
cmpsl
jg
jmp
je
sub
xchg
bound
cwtl
lcall
lret
pop
xchg
or
shll
sar
mov
sbb
popf
jg
pushf
push
cli
pushf
cmp
stos
in
stc
push
sub
int
cmp
mov
mov
pop
arpl
inc
and
pusha
push
lcall
and
xor
rcll
nop
push
xchg
dec
xchg
push
adc
mov
jo
cwtl
lahf
push
scas
test
or
fs
stos
pop
xchg
mov
cmp
in
idivb
xlat
pop
sbb
ror
hlt
mov
jecxz
lahf
lds
add
or
inc
adc
gs
jo
push
pop
cmp
jle
xchg
das
mov
stos
rol
inc
push
in
inc
imull
dec
cltd
jo
xchg
pop
daa
int
jecxz
pop
stc
lds
out
decl
jns
arpl
ret
jecxz
out
mov
dec
jmp
mov
into
cmp
lret
lcall
fyl2x
pop
mov
mov
mov
adc
sub
inc
inc
pop
mul
sub
out
jl
mov
jae
outsl
cwtl
repnz
fcoms
hlt
mov
in
ds
icebp
cmc
mov
mov
mov
stos
jno
scas
xor
xchg
mov
xchg
js
xchg
loop
lods
adc
and
lods
xchg
ja
sub
and
enter
mov
loopne
pop
int3
pop
ret
das
hlt
inc
pop
cmp
add
add
or
mov
das
scas
daa
inc
ret
mov
cmp
jae
sub
cmp
mov
lods
pop
sub
xlat
jmp
ret
mov
jecxz
cmpsl
sbb
test
enter
jmp
xchg
das
iret
mov
sub
jge
je
insl
mov
movsl
cmp
mov
into
jbe
lcall
inc
jb
out
xor
jg
aad
pop
mov
mov
loope
cmpb
shl
pop
loope
lahf
out
mov
add
stc
ret
loope
std
xchg
dec
inc
jne
lods
jmp
pushw
mov
push
mov
lock
fisubs
jge
movsl
push
push
in
mov
popf
in
aad
movsb
cmp
add
mov
bound
mov
call
jnp
in
aaa
push
in
xor
cli
mov
or
or
inc
sub
xchg
mov
out
mov
jge
dec
push
mov
mov
sbb
mov
pop
fldz
mov
loopne
sbb
loope
push
rcrb
sbb
sub
jecxz
inc
gs
jbe
fisttpl
ljmp
sub
push
xchg
insb
jl
out
mov
leave
or
addr16
movsb
fisubrs
mov
mov
push
dec
mov
xor
push
daa
icebp
lds
or
dec
scas
add
jp
mov
mov
or
or
or
repnz
sbb
mov
pop
jb
xor
push
cmpsb
mov
pop
xor
cltd
jle
stc
xor
inc
inc
lret
inc
adc
add
add
sti
sbb
std
ret
inc
sub
jg
les
testb
cmc
cmpb
xchg
insb
inc
addr16
ja
dec
or
pop
lods
outsl
mov
in
lock
push
test
dec
rcr
or
dec
xchg
out
aam
out
jae
xchg
out
or
push
std
aad
popf
jo
lods
xchg
sbb
filds
lods
aas
and
aas
outsb
rcrl
and
cwtl
dec
fistpl
stos
ja
xor
dec
lds
xor
mov
add
int
flds
xor
aaa
adc
cwtl
in
popf
iret
and
cmp
vpshab
outsl
inc
dec
mov
add
fbstp
sub
leave
mov
push
pushl
xor
or
lahf
or
sbb
les
sbb
cmp
xor
pop
out
cld
mov
sbb
mov
lret
jne
xchg
xor
mov
imul
mov
shr
inc
jb
push
mov
arpl
loopne
loope
mov
dec
cmp
xor
add
ret
lret
mov
adc
adc
into
call
mov
cmpsl
and
pop
jno
pop
dec
or
sub
outsl
dec
xor
or
fistpll
dec
popf
and
adc
cld
pop
into
and
test
push
ja
push
mov
pop
pop
stc
cmc
nop
pusha
push
movzbl
or
push
test
nop
pop
push
pop
add
loop
pop
mov
js
push
sub
pop
xchg
mov
jne
lea
push
push
cmp
pop
pop
stc
jl
sub
lea
lea
rol
cld
sub
cmp
push
call
ds
push
pop
pop
repz
cli
lds
aaa
jecxz
inc
adc
les
call
sub
push
jae
ror
pop
sar
nop
mov
add
fnop
test
test
stc
jbe
jle
jne
cmp
ror
test
add
stc
js
push
test
pop
push
push
push
add
pop
pop
push
and
pop
cld
stc
mov
nop
lea
push
jns
jb
add
pop
loop
jecxz
repz
xchg
mov
les
jmp
stos
setnp
into
popf
orb
jmp
add
push
pop
pop
or
test
mov
clc
sar
pushl
pop
jmp
inc
inc
ffree
mov
sub
jg
push
dec
inc
in
adc
adc
mov
daa
push
mov
sub
xchg
dec
xor
ret
add
add
je
push
call
ds
cmp
loope
aas
push
jne
mov
mov
push
add
movsb
fmull
imul
sub
add
adc
inc
insb
aas
ret
mov
es
jecxz
jno
pop
push
mov
add
pop
rol
push
call
insl
pop
gs
ja
jle
dec
nop
cmp
pcmpgtb
loopne
loope
mov
jb
jg
or
jb
mov
jl
les
xor
jno
cmc
loop
jecxz
pop
or
roll
or
ja
dec
sbb
sbb
and
scas
scas
leave
mov
leave
add
add
cmp
push
xor
pop
lea
push
jge
test
pop
shl
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
push
jle
jp
test
pop
and
jns
cld
push
movzbl
push
inc
pop
nop
cmc
add
or
test
stc
test
dec
inc
nop
clc
loop
pop
jge
ror
sub
shr
and
sub
clc
jmp
mov
mov
shll
and
dec
inc
ret
push
sub
fld
addr16
cmc
data16
outsl
ret
fbstp
push
push
je
jb
outsl
mov
adc
mov
and
cmp
or
xor
cltd
mov
pop
pop
add
xor
sub
or
inc
lret
pop
jg
push
push
dec
pop
pop
jmp
out
jge
enter
adc
subl
outsl
movsb
gs
cmp
jmp
imul
stc
xlat
aaa
and
mov
imul
dec
int3
sub
push
adc
and
pushf
pop
ja
andl
dec
js
je
pop
jb
cmp
push
jnp
and
pop
sub
inc
dec
cld
jmp
loop
jecxz
pusha
mov
call
pop
and
scas
pushf
popl
iret
mov
rcl
iret
stos
test
mov
or
rolb
arpl
cmp
adc
or
outsl
insb
lods
add
pop
loop
lods
jo
insl
mov
mov
adcl
sbb
mov
jmpw
mov
das
adc
jbe
enter
loop
push
rorl
add
aaa
adc
inc
fwait
subl
lds
adc
pop
add
imul
jge
mov
rcll
push
ss
int
mov
leave
mov
out
xchg
xor
mov
adc
out
mov
adc
stos
jecxz
sbb
push
stc
mov
out
mov
inc
inc
call
loop
aaa
add
js
sbb
cmc
outsb
lods
sub
inc
nop
pop
mov
pushf
inc
aam
call
sub
push
xchg
add
bound
cs
dec
lods
inc
dec
mov
movsl
mov
inc
sbb
sbb
mov
sbb
push
mov
bound
notb
cmp
mov
fsubp
xor
sbb
cmpb
sahf
scas
loop
fists
xor
sbb
lds
filds
adc
test
push
push
or
mov
adc
adc
push
pop
inc
mov
xor
lods
outsl
nop
dec
enter
leave
repnz
leave
cmp
sbb
dec
out
mov
mov
cmp
imul
pop
scas
add
adc
sub
rcll
movb
mov
and
sub
mov
jbe
stc
jnp
jge
push
in
jmp
les
sbb
lcall
pop
push
in
sbb
jp
testl
clc
mov
fwait
cmovl
in
xchg
fnstsw
jmp
or
pop
jg
imul
adc
fldl
imul
fmul
sbb
mov
or
cld
and
jb
js
pusha
loopne
push
inc
adc
mov
repz
insb
sub
ds
push
ja
repz
xchg
rolb
lret
aad
mov
mov
mov
es
icebp
mov
pusha
cli
push
jle
jp
clc
or
or
mov
sub
es
daa
pop
or
push
xor
add
or
shrl
hlt
dec
push
out
xchg
inc
insb
push
movsl
mov
dec
mov
int3
sbb
int3
test
jl
or
cltd
dec
xor
sahf
ja
dec
pop
test
jle
push
hlt
fwait
scas
sbbl
mov
rcl
repnz
add
push
mov
jle
fwait
pop
repz
shlb
pop
aas
shll
rcrl
and
xor
outsb
push
jb
xchg
push
mov
mov
and
loop
clc
inc
aad
ss
add
sub
hlt
sbbb
xchg
dec
enter
push
add
mov
nop
sar
mov
cld
and
test
xchg
cmp
test
inc
insb
stc
int3
mov
sbb
mov
sub
mov
push
les
add
pusha
lcall
mov
sub
jg
pushf
out
xor
xchg
fcompl
mov
jnp
push
push
scas
lds
pusha
adc
pop
je
sti
xchg
mov
mov
loope
std
hlt
push
mov
movsl
jmp
mov
and
rcrb
xchg
mov
cmp
xchg
pop
jmp
repnz
and
repz
ret
cmpsb
les
push
jmp
mov
cmpsl
jp
or
js
pop
test
imul
shll
movsb
pop
mov
jge
insb
insb
jne
sub
fcmovnu
xchg
mov
dec
xor
sbb
inc
cli
jecxz
mov
mov
outsl
frstor
push
es
and
inc
mov
loopne
pop
pop
test
mov
fstpt
jle
xchg
shl
iret
sbb
ret
arpl
aaa
mov
push
ds
sarl
popf
andb
cwtl
lcall
stos
adc
mov
imul
mov
xchg
call
add
insl
add
mov
jne
jmp
sbb
pop
stc
popl
negl
add
fsubr
add
bound
or
repnz
push
inc
jno
add
pop
testb
push
jg
inc
in
mov
mov
adc
or
aad
jmp
les
mov
jbe
pop
jg
xor
andl
add
xchg
insb
repnz
push
pop
sub
jmp
ret
mov
inc
pop
adc
imul
or
lret
in
int
ja
or
mov
loope
arpl
out
test
jmp
mov
sahf
nop
or
leave
dec
jle
inc
jle
xor
cmp
sub
add
jo
xlat
data16
mov
aaa
jp
sbb
nop
loop
js
outsl
int
roll
daa
je
cmp
call
jp
gs
push
push
pusha
aad
es
push
out
in
leave
add
mov
mov
scas
movsb
dec
int
sub
cmp
pop
jge
jbe
in
jmp
push
iret
sbb
iret
sbb
mov
insl
sub
dec
pop
fimull
mov
cmp
mov
xchg
add
lea
mov
sarb
cmc
xor
sbb
mov
in
dec
sahf
jecxz
call
sub
rcrl
and
shlb
ret
pop
aam
iret
mov
jl
pop
xchg
loope
std
mov
cs
jg
jbe
push
out
jle
daa
mov
xor
divl
lock
sar
cmp
cltd
sarb
ficompl
add
imul
mov
adc
mov
add
cltd
loopne
and
mov
mov
dec
bound
jne
loopne
fisubrl
xor
add
out
push
jecxz
jp
sub
lahf
repnz
rcpps
cmpsl
sbb
inc
mov
popa
mov
orb
sbb
je
enter
nop
pop
in
aas
out
sbb
mov
ret
cmp
pop
popf
cwtl
ss
shrb
pop
or
and
icebp
or
mov
add
shlb
cmc
in
fs
scas
je
sbbl
cmp
mov
sub
lahf
xchg
xor
xor
cs
add
adc
dec
inc
rcr
in
scas
xchg
mov
add
shll
in
sbb
push
xor
cwtl
adc
sbb
les
push
sarb
es
adc
outsl
jnp
xor
iret
cmp
mov
cmpsb
push
imulb
xchg
xor
push
lret
adc
sbb
leave
jp
out
mov
push
mov
ret
sub
dec
adc
add
movsb
xlat
mov
or
ret
fistl
cmp
jns
sbb
aam
scas
jl
adc
xor
xor
cli
mov
shr
push
sbb
sbb
sbb
cmp
cli
or
inc
mov
xor
mov
test
mov
mov
add
add
shrb
test
jne
lods
push
xchg
push
push
scas
push
xchg
lods
push
mov
jle
sub
or
jne
xchg
pop
ja
repz
addr16
mov
push
icebp
jmp
or
mov
xor
lcallw
jnp
sbb
mov
mov
adc
out
jb
cld
cmp
push
pop
mov
or
movsl
pop
mov
es
adc
add
or
cmp
insb
inc
add
pop
or
ret
arpl
mov
fistpll
inc
popf
or
aad
dec
imul
lods
shll
push
out
inc
and
fistpl
cmpb
rcll
xor
adcl
std
ljmp
mov
jecxz
mov
decb
js
sahf
cmp
pop
xchg
lods
mov
jae
mov
mov
test
popa
adc
enter
sub
loopne
rorb
addl
enter
aas
in
xor
sub
mul
add
shrl
mov
push
cs
mov
push
lods
pop
or
repz
in
add
arpl
inc
inc
pusha
inc
call
xchg
movsb
nop
sub
jmp
sbb
dec
jle
xor
sub
xor
xchg
cld
int
add
icebp
xchg
mov
loop
lcall
inc
dec
popf
nop
xchg
mov
outsb
push
in
cli
push
les
sub
lods
mov
popa
pushf
adc
out
or
icebp
push
mov
ljmp
xchg
sub
movsb
lret
rorb
mov
in
repz
ret
test
jo
jmp
test
xchg
cltd
inc
mov
in
jns
cld
bound
in
negb
mov
push
ret
mov
inc
pushf
xchg
sbb
repz
sbb
test
pop
inc
or
daa
int
xor
pop
into
scas
jnp
stos
aam
ss
out
in
or
insl
into
mov
in
in
dec
mov
data16
xchg
mov
fldt
call
push
inc
xchg
pop
lods
cld
mov
lret
sub
insb
push
fisubrs
mov
nop
xchg
xchg
pop
lds
mov
inc
xor
mov
imul
xor
xor
idivb
push
pop
sarl
fldenv
test
rclb
xlat
sub
dec
ljmp
stos
push
addr16
mov
xchg
adc
shrb
fldt
and
dec
fwait
cmovp
shrl
jne
pop
xchg
sbb
aam
in
inc
sbb
popa
inc
sbb
xchg
scas
xor
mov
xchg
jl
and
int
and
pop
sub
or
xchg
outsl
movsl
cmpl
dec
push
xor
or
paddq
fs
jecxz
xor
cmc
fldt
or
bound
jmp
mov
add
jmp
inc
adcb
pop
loope
das
mov
cld
adc
adc
mov
clc
jbe
xchg
cmp
push
inc
cmpsb
fcmovu
dec
jl
xchg
xor
ljmp
shl
lret
fildl
iret
push
into
arpl
lret
aas
adc
fidivrs
xchg
outsl
xor
es
inc
mov
ret
mov
stos
xchg
gs
std
gs
sbb
sub
stc
mov
add
push
dec
pusha
out
clc
sbb
xor
gs
cmc
dec
fcompl
inc
xor
mov
mov
shrb
fs
cmp
stos
xchg
inc
pop
insl
mov
pusha
mov
mov
jle
loope
push
jno
fiadds
in
add
xor
xor
cmp
pop
and
add
dec
mov
daa
lcall
fbstp
push
jo
push
dec
cmp
test
inc
nop
lret
mov
fildl
and
test
inc
and
lock
jmp
adcl
or
pop
xchg
push
sbb
rclb
cs
scas
fmul
push
adc
mov
sub
jle
and
xor
mov
sbb
add
adc
inc
xchg
mov
inc
mov
cmp
idivl
mov
jg
push
xchg
push
mov
or
add
push
insb
loopne
mov
lret
repz
sbb
jne
mov
xor
loop
in
iret
mov
add
or
xchg
xchg
cmp
lock
jne
xor
pop
mov
fildll
push
inc
int
push
mov
xchg
pop
xchg
xchg
pop
mov
xchg
aad
xor
test
and
and
xchg
out
daa
icebp
stc
dec
sub
lahf
pusha
dec
lcall
and
ret
in
xor
mov
hlt
sysret
inc
cmp
mov
enter
jne
incb
adc
test
pop
xor
jle
xchg
xchg
mov
repnz
add
jl
push
cli
ljmp
push
mov
xchg
insl
inc
mov
jle
adc
orb
pop
jne
hlt
sub
lods
movsbl
dec
adc
fistpl
push
xlat
dec
push
mov
imul
test
and
mov
pushl
addl
roll
mov
call
xchg
fisubl
insb
out
adc
push
inc
sbbb
mov
call
jno
outsl
mov
cmp
imul
mov
inc
mov
xor
mov
add
ret
inc
jb
iret
js
fisubl
lcall
and
sub
or
mov
out
sbb
std
xor
add
xor
fistl
iret
inc
lcall
je
xchg
hlt
sbb
sbb
aaa
in
incl
pop
cwtl
out
enter
pop
add
cli
shll
adc
data16
mov
push
int3
in
decb
push
push
ds
sub
jbe
mov
test
cmpsb
pop
dec
xchg
jbe
popa
push
xchg
and
push
repnz
dec
mov
inc
or
jb
push
in
dec
mov
bound
or
pop
test
outsl
push
mov
test
dec
push
adc
insl
mov
inc
or
cwtl
sub
bound
xchg
insl
call
cmc
pusha
mov
push
pop
and
mov
fisttpll
pusha
repz
out
mov
mov
pop
jbe
xor
jmp
mov
mov
xor
cmp
andl
stos
movsb
mov
test
push
imul
add
int3
test
push
push
ja
nop
sbb
ret
daa
cld
inc
sbb
adc
add
mov
aaa
ret
aad
mov
sub
mov
adc
imul
test
sub
pop
adc
xlat
pop
loope
call
sarb
fcmovu
mov
ljmp
loope
jne
xor
xorb
lret
push
adc
sti
mov
shrb
imul
loop
fcmovu
inc
cld
sbb
mov
mov
jae
xchg
inc
pop
cld
mov
les
aad
je
cmc
inc
dec
stc
dec
mov
push
pop
adcl
cmc
aad
cld
dec
andb
push
inc
push
inc
lods
imul
jge
or
sub
andb
mov
adc
test
repz
test
js
and
sti
out
jb
dec
or
add
sbb
repnz
mov
mov
je
in
aaa
stc
jg
sub
insl
int
adcb
add
xchg
jl
jecxz
adc
cli
push
movsb
add
out
inc
out
xorb
stc
xchg
mov
mov
test
xor
mov
cmp
and
popf
pop
and
fidivrs
add
imul
jmp
pusha
pop
and
imul
sub
pop
in
rcll
xchg
add
or
sbb
jb
jb
push
xchg
add
xorb
sbb
fistps
addb
jns
xchg
cwtl
sub
lret
inc
sub
sbb
mov
out
dec
mov
mov
in
dec
mov
push
xlat
imul
adc
dec
loop
lods
sub
in
fnstcw
adc
and
aam
dec
add
adc
mov
loope
scas
mov
in
lret
cli
cmpsl
frstor
lea
xor
aad
orl
sub
aam
jmp
les
dec
mov
popa
dec
push
xor
mov
cbtw
and
adcl
and
mov
mov
loopne
fmull
mov
pop
dec
movsb
outsb
test
pop
xchg
int3
xchg
jecxz
je
xor
jo
cmpsb
ret
call
cmp
jb
call
loope
mov
pusha
pop
mov
pop
and
pop
ss
inc
sub
inc
loope
shrl
xor
mov
adc
out
loopne
mov
repz
jmp
xor
std
sbb
mov
fcomps
cmp
insb
pop
or
je
loopne
pusha
aam
sub
imulb
dec
cmp
inc
fbld
and
ret
xor
orl
sti
aad
sub
sahf
jmp
pop
mov
xor
xchg
lahf
or
into
pop
xchg
mov
les
bound
and
int
push
cmp
lods
shll
xchg
out
pop
ret
lods
stc
push
in
out
mov
js
pop
jae
sub
iret
lods
dec
or
scas
push
jbe
xor
shrl
add
fisubs
or
out
adc
sbb
mov
hlt
jmp
jnp
xchg
pop
xchg
xor
imull
jae
insl
je
scas
xor
or
jmp
shrb
shll
mov
shr
movsl
fnsave
xchg
or
mov
call
lea
xchg
fisubs
data16
orb
adc
mov
and
lcall
cmp
sbb
out
pop
push
push
inc
xchg
scas
popf
jl
mov
loop
jns
out
mov
popf
mov
int
xchg
mov
ss
pop
pop
pop
mov
pusha
rcrb
pop
rcll
shrb
into
mov
or
je
ret
and
mov
add
or
rol
inc
xor
pop
outsl
cmpsl
lahf
jo
out
loope
pop
pushf
jecxz
mov
lea
jne
sbb
stos
or
xlat
pop
insb
orb
fcmovne
jecxz
stos
cmp
add
push
enter
test
out
insl
insb
add
inc
mov
dec
std
mov
jp
stos
push
pop
es
fistps
push
dec
push
sbb
in
out
shr
divl
sub
loop
daa
push
hlt
push
int3
dec
mov
addr16
roll
push
xor
cmpsb
lret
mov
jno
jle
inc
jbe
pop
push
jl
inc
shr
jmp
push
mov
cld
lds
outsl
cmp
lock
jns
xchg
push
incl
js
aas
mov
fmuls
icebp
subb
test
xchg
out
sbb
add
cmp
or
sub
in
sub
fxch
ss
test
fcmovnbe
in
jbe
cltd
inc
xchg
sub
in
fstpt
cmpsl
sub
arpl
jo
inc
cld
sbb
cmpw
or
xchg
incb
fldenv
dec
mov
mov
jns
sub
iret
aaa
jmp
pop
sbb
out
xor
fnstenv
sbb
push
shlb
mov
repz
daa
int3
hlt
or
into
lahf
cltd
int
mov
cmp
xchg
lock
ficompl
cmp
in
mov
ljmp
add
pop
js
test
sbbb
cli
xchg
ss
cli
idiv
rcl
adc
std
fidivl
cld
ja
roll
lock
stos
pop
mov
pop
fldcw
add
popa
sub
cwtl
inc
lods
lcall
and
adc
inc
rcr
enter
popa
loopne
mov
push
sub
into
xor
fisubs
movsb
adc
bound
loope
sub
jp
xchg
cwtl
ror
sbb
fdivrl
filds
repz
sti
jo
test
cltd
xchg
jno
cmp
and
sbb
pusha
sub
es
lea
andl
into
xchg
cmc
dec
pop
ror
scas
jmp
mov
mov
test
hlt
push
rcll
jp
jae
loop
ds
sub
iret
dec
add
jbe
arpl
dec
mov
in
xor
subb
mov
int3
loope
js
sti
adc
les
cld
sub
dec
mov
setl
pop
push
nop
mov
dec
sahf
xchg
loope
jno
lea
mov
cwtl
in
out
je
cmc
and
out
out
add
icebp
ljmp
inc
jge
xchg
mov
lahf
push
jmp
popa
jbe
lret
adc
ds
pop
and
daa
xchg
fisubrs
pop
std
mov
sahf
rcll
ja
or
xor
imul
pop
orl
push
add
mov
ja
inc
mov
push
push
cs
add
js
xorl
sbb
adc
test
roll
push
test
or
scas
jmp
imul
add
sub
mov
data16
jmp
out
xor
and
mov
je
and
sahf
cmp
int3
dec
out
loopne
lret
mov
pop
inc
sti
loopne
lret
xchg
insl
mov
ljmp
jo
test
je
out
cli
sbb
lods
out
jnp
sbb
sub
jbe
sub
xchg
or
ret
sarl
pop
jne
sbb
in
gs
rclb
sub
inc
ja
mov
inc
mov
mov
push
in
adc
push
pushf
pop
jns
lds
cld
int
add
cmp
sub
es
push
into
inc
sbb
call
in
enter
icebp
push
stos
jae
jb
shrl
iret
cwtl
leave
or
jbe
xchg
pop
sub
jb
cmc
movsb
jns
jmp
hlt
inc
mov
lea
fsubl
cltd
test
xchg
cmp
notl
cmp
jbe
sub
push
xchg
out
fildll
bound
stc
imul
jo
lcall
jecxz
leave
cmpsl
in
arpl
jp
in
pop
shll
and
pop
mull
insl
xor
mov
notl
shll
sbb
push
cmp
cld
push
fmuls
dec
add
jle
dec
pop
or
lea
out
dec
pop
add
dec
hlt
ror
sub
ja
icebp
in
subl
sub
push
sti
loope
xlat
dec
mov
int3
bound
inc
and
push
ja
push
aad
rol
lock
pop
movsl
cmpsl
popa
xor
je
arpl
addb
xchg
cltd
das
and
outsb
js
loope
and
in
pop
sar
sub
xchg
xlat
repz
sbbl
std
adc
idivb
dec
add
test
xor
fildl
jp
hlt
in
les
int
sub
xor
or
and
jg
insl
adcl
add
or
add
insb
sub
cltd
inc
lds
cmp
xor
add
push
in
mov
push
in
cmc
inc
imul
movb
push
sar
lret
xchg
jno
jmp
push
dec
clc
or
mov
insb
sub
push
lret
lods
test
ffree
insl
addl
in
pusha
and
inc
nop
xchg
popa
and
clc
fincstp
ljmp
add
cmp
mov
push
pusha
shr
cmp
mov
mov
xchg
fisttps
push
pop
dec
aas
rcl
adc
out
sub
fisttps
jno
inc
and
shl
pop
ret
inc
pushf
pop
sub
xor
leave
ret
inc
jno
lock
xor
push
and
ret
pop
int
out
cmpl
icebp
sub
mov
and
rol
mov
int
outsl
xor
jge
mov
mov
xor
or
gs
inc
scas
mov
sbb
sbb
push
jo
push
mov
fnsave
xchg
dec
mov
rcrb
xchg
adc
inc
in
lea
mov
xor
xchg
je
mov
in
lods
je
mov
les
sbb
cmc
xchg
push
aad
cmc
cltd
add
push
dec
addl
es
push
and
sbb
xchg
ja
gs
stc
fcmovne
mov
mov
mov
lret
mov
scas
xor
outsb
cmpsl
lcall
std
xor
dec
push
bound
cmpsl
xor
inc
cmp
repnz
jecxz
aas
addr16
xlat
pop
or
add
mov
jecxz
std
mov
jle
in
call
push
push
test
jge
addr16
or
scas
pop
rcrb
cmpsb
fs
mov
lcall
les
pop
jg
adc
pusha
imul
push
pushf
outsl
sub
jl
jmp
stos
mov
popf
stos
xor
xchg
and
push
jg
rol
scas
sbb
divb
lea
jo
cmpsb
cmpsl
pusha
ja
xchg
mov
sub
mov
je
sub
sbb
push
sbb
push
leave
push
bound
jnp
mov
and
adc
ss
imul
add
cs
jge
lret
dec
rorl
inc
add
jns
jbe
mov
cli
mov
jl
ret
mov
test
mov
pushf
xor
cli
lret
mov
icebp
pop
cmpsb
or
jnp
xor
lods
sbb
fwait
jno
mov
push
fildl
mov
popf
out
fsubrl
sub
mov
inc
sbb
xor
or
inc
insl
xchg
iret
repz
cmp
jl
push
push
or
mov
in
enter
incl
or
pop
movsb
aas
andb
push
sub
pop
or
jmp
inc
frstor
push
fiaddl
add
jmp
ds
sahf
mov
xor
ret
pop
or
fdivrs
scas
fs
jge
ss
lret
pop
jecxz
cmpb
and
dec
sub
pop
pop
adc
cmp
push
mov
out
cmp
mov
mov
push
adc
push
pop
mov
cmpsl
mov
push
cmp
jne
push
mov
aad
inc
cwtl
in
fnstcw
in
jns
ljmp
pop
jbe
add
fdivl
pushf
imul
iret
push
adc
movsb
fbld
and
add
jns
loope
push
shlb
andb
rol
je
ds
cltd
mov
aaa
sub
ljmp
iret
enter
xchg
or
mov
and
and
gs
add
clc
xchg
aam
ret
std
fdiv
mov
mov
addr16
cwtl
jecxz
ss
sub
push
sbb
andl
mov
add
jl
fiaddl
xor
push
je
and
or
sbb
mov
test
xorb
orl
cli
pop
scas
notb
out
or
xchg
bnd
imull
jmp
mov
mov
sbb
xchg
dec
jp
push
push
ss
dec
pop
ljmp
aas
and
cmp
mov
mov
or
test
sub
imul
mov
add
or
test
ja
ret
adc
in
or
jmp
iret
lahf
stos
xchg
out
sbb
lcall
mov
outsl
xchg
loopne
lods
fistpll
bound
xchg
repz
inc
ja
fidivl
loopne
dec
mov
fstl
mov
mov
add
sub
inc
jmp
movsl
xchg
add
fisubrs
mov
push
stos
cmp
shrb
jmp
pop
mov
popa
push
repnz
std
add
movsb
mov
and
in
pop
push
ret
dec
popa
sbb
ds
xor
clc
pop
pop
lea
aad
into
fildl
es
dec
jl
scas
fcmovbe
stc
fmull
mov
sarb
dec
ret
rolb
xchg
xchg
js
push
cmpsl
cli
sbb
push
mov
xor
or
imul
gs
lods
xchg
or
rcll
mov
push
sub
in
jbe
stos
movsb
andb
xchg
sub
jbe
push
ja
lods
or
je
add
push
sarl
cmc
xchg
pop
iret
add
mov
aas
xor
loope
repnz
testb
jns
sahf
lods
out
mov
mov
js
test
push
rcr
mov
outsb
or
jg
lds
call
lods
cwtl
shl
les
pop
ds
sbb
test
repnz
daa
xor
cmp
add
dec
jno
fcomi
les
and
lret
push
ja
adc
ret
inc
lods
sahf
push
imul
inc
sahf
call
inc
arpl
dec
add
mov
jo
out
mov
data16
sub
cmp
or
sub
mov
in
mov
sbb
and
jbe
mov
cmp
in
cmp
add
dec
mov
sbb
mov
imul
xchg
and
xchg
or
cmp
lock
repnz
aas
cmp
xlat
add
sub
push
pop
stc
or
or
loopne
push
mov
dec
gs
test
repz
aam
jae
pop
push
pop
fnsave
sbb
sbb
xchg
divb
push
popf
xchg
outsl
sub
and
stos
adc
pop
fildll
shr
mov
mov
ja
jl
mov
ret
outsb
mov
jecxz
mov
and
jne
mov
xor
xor
bound
shr
push
and
mov
adc
mov
imul
rcrl
mov
cmc
mov
jno
arpl
inc
dec
shl
pushf
decl
and
mov
lods
fimull
stos
mov
pop
popa
out
push
data16
push
in
popa
out
inc
insl
leave
sbb
push
sub
out
cmp
push
push
rclb
push
sbb
mov
cmpsb
mov
stos
xor
popa
scas
inc
sub
cmp
or
push
bound
sub
jns
in
shll
icebp
dec
sbb
lret
mov
lret
test
mov
pop
jo
cwtl
add
pop
xchg
mov
push
outsb
jo
sahf
dec
push
mov
sti
dec
jae
das
cmpsb
movsb
xor
ljmp
mov
push
pop
xchg
mov
scas
or
popl
lock
mov
and
scas
std
scas
xor
lcall
jb
adc
pop
push
sub
ds
cltd
pop
xchg
jo
icebp
jo
outsl
out
into
lret
push
stos
sbb
mov
in
xor
data16
cmp
mov
and
push
inc
xchg
lcall
lods
inc
fs
sbb
mov
inc
sbb
cmp
jo
jp
or
imul
cld
pop
in
repz
jecxz
inc
sub
cmpsl
imul
jecxz
loope
adc
mov
sub
jne
mov
int
dec
lea
aaa
movsl
les
notb
sub
enter
cmpsl
sbb
add
mov
dec
pop
mov
xor
mov
popf
loope
enter
pop
push
loope
jo
xchg
daa
push
sti
xchg
cwtl
and
cmp
xorl
add
xorb
lret
test
and
mov
xor
call
or
mov
fimull
pop
test
push
out
push
fisttpl
xor
mov
and
sub
cmpsl
dec
dec
enter
dec
insl
arpl
in
sub
add
stos
test
aad
in
sub
std
cld
cmpsb
mov
movsb
scas
mov
outsb
test
out
lahf
mov
daa
jb
stc
mov
fstl
test
outsb
scas
xchg
out
ds
push
push
lret
sub
jl
aas
add
mov
dec
xor
ja
scas
sar
icebp
data16
pushf
push
cmp
inc
jp
call
das
cmp
fistpl
cmp
bnd
out
mov
and
pop
popa
pop
mov
lcall
mov
loope
out
pop
adc
push
adc
sub
popa
gs
mov
mov
pop
dec
push
cli
mov
mov
ja
pushf
add
stos
movl
out
pop
ja
dec
popl
ljmp
lret
inc
stos
xchg
xchg
iret
sbb
int3
les
test
bound
sbb
or
jecxz
sbb
test
xchg
adc
subl
xchg
shlb
mov
addr16
incl
mov
std
dec
outsb
popa
mov
mov
inc
scas
aaa
xchg
push
xor
mov
scas
jbe
es
or
and
xor
pop
add
push
iret
ss
mov
leave
arpl
es
arpl
inc
add
fildl
dec
leave
ret
fs
mov
dec
xor
push
int
xchg
xchg
cwtd
cmpsb
push
repnz
push
lds
cltd
push
mov
push
stos
mov
repnz
pop
jae
pusha
xor
movsb
jmp
adc
iret
push
push
mov
push
mov
in
pop
jp
pop
test
adc
lcall
dec
jno
dec
out
pop
fwait
mov
in
pop
or
test
js
mov
leave
or
sub
fucomp
bound
mov
loopne
pop
mov
or
jecxz
das
add
add
hlt
cmc
mov
and
mov
sbb
enter
lods
bound
mov
cmc
xchg
in
inc
hlt
pop
loopne
sub
test
and
popa
mov
mov
shrl
add
test
sbb
xor
pop
push
or
lds
cld
es
and
cmpsl
repz
jmp
or
imul
xor
push
mov
push
jne
fwait
das
dec
xchg
mov
mov
lods
push
or
imul
fsub
ja
sarl
imul
sub
push
dec
fsub
mov
repz
pop
arpl
fisubrl
test
mov
pop
fcomi
sub
ficoms
scas
inc
cltd
cmp
aaa
stc
sub
mov
mov
mov
adc
icebp
sbb
adc
notl
enter
sarb
mov
stos
adc
hlt
xor
dec
push
in
scas
mov
pop
loopne
push
adc
sub
or
fnsave
pop
jns
bound
adc
shr
push
idiv
imull
aas
pop
bound
pusha
insl
lcall
dec
push
ja
mov
pop
mov
jmp
sti
adc
mov
cmc
push
sbb
out
mov
push
mov
test
sbb
lods
lea
push
sub
loope
imul
clc
push
dec
jbe
jp
pusha
inc
jno
aad
adcl
mov
loope
scas
enter
add
and
roll
pop
es
popf
movl
sbb
adc
pop
clc
std
sub
xchg
dec
jl
repz
xorl
jg
mov
or
adc
mov
loopne
outsb
sub
adc
out
jns
adc
mov
insl
xor
mov
inc
inc
fstpl
les
or
dec
enter
popf
nop
inc
mov
add
dec
mov
mov
xchg
mov
and
adc
jecxz
gs
sahf
mov
stc
push
call
insl
pop
pushf
testb
mov
sbb
inc
mov
jecxz
int3
mov
push
test
daa
inc
xchg
push
xor
mov
jp
aaa
mov
popa
inc
test
xchg
dec
sahf
jnp
mov
mov
mov
sahf
test
mov
xlat
jnp
aam
outsl
loop
cli
cli
and
clc
orl
rorb
mov
xor
add
fidivl
add
mov
imul
sbb
adc
in
movsl
nop
jae
fwait
dec
pop
iret
insl
cli
mov
or
orb
icebp
lods
jne
clc
repz
xchg
lret
ret
rorl
jnp
fmulp
and
mov
and
lods
out
shl
push
adc
repnz
cltd
xor
adc
stos
das
js
cmpsl
mov
in
pop
fistpl
jnp
scas
lret
mov
out
mov
fadds
xor
bound
out
sbb
fisttpll
test
push
rcl
ficoml
sub
cmpsb
out
xor
mov
xchg
adc
mov
popa
nop
lret
es
fsts
lods
sahf
outsb
stos
lret
mov
not
jp
or
mov
loop
insl
inc
stos
shlb
pop
sbb
movsb
and
or
lahf
sbb
mov
outsb
test
mov
mov
rcrl
aam
adc
sub
dec
push
pop
sub
sub
lea
fcomi
xchg
dec
fisttpl
and
out
cmp
mov
cmp
xchg
lcall
sbbl
and
sub
add
rorb
scas
mov
pop
sub
adc
xchg
mov
addr16
and
out
fwait
test
leave
lock
sti
test
cmpsl
mov
cld
inc
xor
sub
push
mov
jecxz
das
pop
cli
cmp
cli
test
xchg
mov
sbb
push
cmpsb
jae
notl
xchg
xorl
push
fcomps
add
mull
and
cli
xchg
aam
xlat
insl
add
sub
ss
xchg
loope
jl
cmp
mov
dec
lods
arpl
xor
xchg
fnstenv
push
imul
iret
mov
es
push
mov
ljmp
push
dec
push
js
les
fwait
inc
icebp
or
fisttpl
das
jae
out
inc
add
mov
pushf
stos
dec
loope
test
out
push
and
sbb
dec
cmp
dec
or
xlat
mov
push
ud1
scas
ja
insb
sbb
mov
add
cmp
mov
push
lahf
mov
dec
push
pop
imul
fwait
mov
mov
insb
or
rcrb
sarb
pop
xchg
mov
imul
xor
stc
xor
jp
icebp
sbb
ja
mov
mov
cmc
fs
sub
adc
cwtl
sbb
scas
jmp
addr16
into
mov
pop
push
repz
add
imul
shlb
push
push
roll
fcmovbe
pusha
and
jmp
dec
and
xchg
inc
mov
divb
dec
push
stc
xchg
and
or
out
loope
push
and
in
jp
movsb
mov
mov
ficoms
js
shrl
das
push
lret
push
and
push
add
add
fmull
or
mov
ret
sbb
dec
scas
mov
adc
dec
push
enter
and
mov
test
jp
shrb
enter
enter
rcl
shll
jecxz
fdivrl
cmp
dec
mov
sbb
and
scas
push
movsl
sub
aas
cld
pop
lahf
nop
imul
addr16
sub
aaa
lds
pop
cmp
call
enter
mov
inc
or
mov
js
add
xorb
and
out
rcrl
lods
imul
xor
jno
bound
scas
mov
sub
xor
stos
popa
sbb
cld
aad
hlt
pop
and
outsl
sti
cli
push
pop
or
sbb
mov
mov
jo
fcmovnbe
xor
aaa
mov
in
mov
repnz
push
iret
jae
lods
pop
insl
adc
inc
out
stos
cld
push
pop
cmp
rolb
gs
cli
xchg
xor
pop
push
jl
ret
adc
adc
sub
aad
subb
cwtl
rorl
lret
adc
in
add
insl
mov
or
pop
addl
cmp
or
add
lret
dec
arpl
clc
out
arpl
mov
imul
jge
fdecstp
mov
mov
out
sbb
jmp
rcr
cmp
sub
repz
js
mov
lret
sub
mov
repz
add
int3
int3
arpl
scas
cmpsb
cli
cmp
jmp
filds
adc
notb
add
cltd
xor
fnsave
xor
lret
add
shlb
jp
fdiv
dec
jecxz
sbb
xor
pop
dec
pop
push
xor
xchg
mov
lret
add
or
xor
cltd
xor
mov
out
push
test
or
xchg
aaa
imul
das
outsl
inc
jae
lret
mov
insb
and
inc
fldl
add
sub
inc
sub
push
hlt
fimull
lret
fcomip
bound
mov
xchg
cmp
add
and
or
adc
jg
test
inc
out
add
gs
imul
adc
pop
and
xchg
ja
stc
imul
jle
xor
rolb
scas
mov
lret
call
pop
int3
xchg
ret
dec
fadd
sti
imul
stos
xchg
dec
aam
xchg
rcl
aas
sub
jb
insl
mov
mov
lret
scas
les
adc
fnsave
sbb
cmp
fildll
add
ret
mov
mov
xchg
jg
xor
imul
mov
add
mov
gs
fnsave
dec
xchg
les
mov
cltd
jne
pop
loop
dec
loopne
xchg
shlb
xor
pop
pop
leave
xchg
ljmp
add
fimuls
mov
inc
jne
adc
movsl
test
sbb
pop
fadds
cld
repz
push
push
push
loopne
imull
ret
test
inc
dec
xlat
cltd
in
cmpsl
jae
inc
dec
int3
and
mov
xor
mov
xor
loope
inc
imul
rcrb
inc
inc
sub
enter
ja
jp
inc
lods
fidivrl
push
imull
rorb
rolb
icebp
and
ret
mov
fiaddl
add
call
mov
clc
xchg
sub
inc
scas
scas
sub
push
add
rol
sbb
mov
fwait
shrl
pop
xchg
cwtl
inc
movsl
insb
add
xchg
and
int
test
pop
icebp
jne
jecxz
jae
test
push
cmp
push
repnz
adc
jg
arpl
dec
xchg
es
jo
jno
xor
js
insl
sub
mov
xlat
xchg
push
xor
lret
or
push
cmpsb
adc
scas
sub
vmovss
dec
inc
adc
and
loope
cmpsb
iret
pop
push
adc
std
push
insb
jp
or
loop
dec
jl
int3
jmp
mov
pop
testl
xlat
mov
cli
movsb
mov
outsb
mov
imull
ret
ret
push
mov
in
xlat
mov
mov
stos
fwait
push
in
loop
xchg
mov
or
ds
sbbl
dec
bound
push
aaa
ror
sub
insb
iret
std
cmp
mov
mov
inc
or
jl
pop
jecxz
or
inc
ret
gs
cmc
ds
divb
or
sub
out
add
sub
jns
in
shr
call
mov
int3
or
add
mov
arpl
sub
pop
cs
inc
dec
bound
lea
loopne
lock
test
cli
and
dec
cmp
adc
or
lods
adc
sub
xchg
mov
mov
sub
sahf
enter
loope
daa
aam
and
and
jle
es
xchg
mov
leave
mov
stos
aam
cltd
or
popa
adc
cmp
mov
cli
lods
stos
inc
xlat
mov
push
jne
sub
pushf
out
pop
repz
push
dec
lock
push
sbb
dec
or
aas
icebp
call
jle
mov
and
sti
int
clc
loope
or
fisubs
inc
test
cmc
pop
jnp
and
out
sub
cs
inc
dec
push
aaa
inc
jb
and
fcoml
mov
stc
ss
repnz
mov
in
sub
push
outsl
push
xor
dec
jae
outsl
sahf
lret
push
shr
into
xchg
or
sub
scas
jbe
mov
mov
push
cmpsl
pop
cmpsb
fsubl
arpl
stc
lds
or
push
mov
ljmp
lcall
into
push
inc
es
lock
ss
push
mov
repz
xor
xor
sub
add
daa
mov
jecxz
testb
lods
je
cltd
sti
imul
xchg
mov
pop
add
jae
mov
pop
inc
sbb
xlat
insb
call
call
mov
loope
fwait
xchg
sbbl
add
addr16
enter
inc
gs
pop
mov
xchg
push
stos
or
sti
cltd
mov
fidivl
pop
jecxz
sub
imul
fiadds
push
jmp
insl
jmp
xchg
outsl
insl
mov
fimull
push
lahf
divl
jns
sub
and
dec
xor
fdivr
mov
mov
fs
or
add
add
dec
xor
push
loop
lock
shufps
sbb
push
mov
loop
aad
xor
test
dec
pop
adc
mov
loopne
pop
mov
xchg
lret
in
xchg
xor
jno
jne
addb
int
lds
call
inc
pop
les
imul
mov
idivl
jg
xor
pop
adc
mull
dec
jp
xor
mov
xchg
test
call
popf
or
scas
in
sub
loope
adc
cmpsl
or
pushf
outsl
in
popa
jp
jnp
sub
fildll
mov
cs
fadd
adc
les
addb
into
fdivs
jbe
jno
adc
sub
cltd
or
adc
pop
addl
add
pushf
fidivrl
xchg
sub
and
sbb
cmp
push
pop
andl
sbb
icebp
imul
or
popf
pop
and
cmc
mov
and
stos
loope
lods
mov
sbb
push
leave
mov
sub
js
mov
hlt
adc
xor
pop
popf
cmpsl
or
shlb
and
enter
imul
mov
mov
movsb
mov
into
xchg
sub
sahf
sub
cmp
sbb
mov
mov
in
in
add
mov
sbb
dec
jns
pop
pop
jmp
sub
add
fsubrl
lds
shlb
push
imul
jge,pn
dec
or
data16
mov
sub
mov
adcb
sub
adc
inc
adc
scas
xorl
push
shlb
sub
add
test
jns
xor
add
push
pop
adc
xor
jbe
pop
mov
sub
mov
xchg
xchg
xor
lcall
and
xchg
cwtl
sti
sbbb
pop
jg
jmp
lahf
jp
lods
adc
jne
push
loope
cmp
pop
push
fisubrl
jge
sub
cmovns
test
stc
cld
lock
popf
cld
adc
movsl
in
nop
inc
mov
jo
xchg
lret
mov
movl
push
cli
mov
rcr
sub
in
pop
push
xchg
sbb
sbb
adc
xor
hlt
mov
in
sbb
lret
popf
pop
add
or
add
ss
xlat
arpl
pop
ret
jnp
testl
sbbl
sbb
push
orl
push
cld
jae
push
add
cmpsl
push
cmp
fnsave
clc
aad
andl
or
jnp
add
and
add
pushf
in
ret
mov
xchg
mov
xchg
xchg
out
psubsb
popf
jnp
lcall
cli
loopne
out
cmp
cmp
and
fcom
je
jp
mov
out
out
pop
stc
cs
xor
xchg
out
sub
inc
mov
fsubrs
mov
mov
jle
sub
scas
push
jnp
aam
adc
xchg
cwtl
xchg
insl
out
add
push
lret
in
push
scas
int
mov
int
push
ljmp
insl
pop
push
out
int3
and
mov
jle
adc
xor
jb
cmc
cmp
sub
inc
sbb
sbb
sarb
fdivrl
arpl
xchg
int3
add
xor
lahf
rcrl
and
imul
xchg
pop
push
dec
ret
mov
test
loope
fs
add
lods
rcl
cwtl
mov
insl
arpl
les
xchg
ficompl
sub
inc
adc
cmp
mov
shrl
lahf
push
inc
cmpsl
ret
dec
jns
dec
nop
mov
sbb
xchg
sbb
jae
pop
and
movsb
xlat
sub
adc
sub
out
xor
inc
adc
jno
push
imul
xor
jbe
and
nop
push
sub
lods
dec
mov
cmp
xchg
popl
mov
inc
mov
test
add
popa
test
mov
call
sbb
loopne
mov
roll
or
inc
xor
mov
aam
andl
subb
test
inc
popa
jb
xor
sbb
repz
cs
pop
jae
push
jnp
sbb
setnp
push
repz
loopne
mov
fs
out
inc
cmpsl
cs
mov
lock
xchg
sbb
or
and
pop
loop
shrb
sub
loop
cmp
sub
ljmp
push
das
mov
scas
aad
nop
imul
mov
push
jl
xchg
dec
ficomps
sbb
xchg
hlt
jp
or
addr16
ficompl
mov
jbe
mov
test
stos
call
cli
ss
je
js
push
aaa
loop
xchg
ret
mov
pop
iret
mov
mov
arpl
js,pn
mov
adc
nop
adc
adc
jge
or
jge
inc
add
shl
xor
clc
mov
fimull
cltd
ffreep
fwait
repz
dec
fwait
xchg
lcall
int3
lock
xor
xchg
pop
ja
push
inc
stos
jbe
inc
pop
out
jle
cmp
pop
dec
fsubrl
mov
xchg
push
cmpsb
test
adc
lods
movsl
mov
inc
imul
or
add
add
dec
and
cwtl
test
inc
stc
outsl
xor
scas
sub
icebp
xor
pop
mov
jne
add
dec
lods
xchg
cmp
adc
push
mov
repnz
push
int
das
je
imul
fsubrs
jne
outsb
cmp
inc
dec
cmp
sahf
inc
push
or
dec
push
mov
popf
stos
stos
pop
inc
pop
and
rclb
cmp
imulb
pusha
ficoms
push
push
jmp
les
es
xchg
sub
adc
push
scas
lock
add
hlt
mov
dec
jmp
outsl
stos
les
movsb
pop
addl
rolb
adc
test
cmp
jmp
icebp
hlt
lcall
jge
cmp
xchg
mov
in
icebp
cltd
jle
add
adc
fstl
lret
pop
xor
dec
jl
aas
sub
fs
mov
cs
mov
lods
dec
xchg
loopne
xchg
dec
adc
pop
inc
jns
xchg
push
fldcw
sbb
mov
int
mov
inc
cmp
stos
mov
adc
repnz
mov
push
jp
inc
lock
jl
lea
jmp
pop
outsl
lahf
lcall
scas
dec
jmp
add
arpl
shlb
aaa
divb
ljmp
out
mov
mov
xor
mov
add
add
xor
mov
std
divl
insb
push
push
add
popf
add
pushf
test
dec
mull
inc
xchg
call
aaa
cmp
addr16
idivl
mov
mov
push
mov
cltd
xchg
mov
lea
shll
and
insl
fdiv
ss
repz
ss
jl
xchg
outsl
imul
sub
inc
xchg
cmp
sub
data16
lret
xchg
xor
negl
inc
daa
test
push
scas
out
imul
mov
and
lret
mov
into
and
mov
mov
adc
fs
and
mov
mov
pop
add
adc
scas
inc
inc
out
xchg
nop
outsl
or
enter
add
pop
inc
cmp
insb
mov
mov
test
loop
mov
imul
xor
adc
mov
aad
nop
enter
ljmp
add
push
mov
jmp
inc
fstpt
stc
mov
jmp
call
xchg
les
mov
or
cmpsl
mov
sub
sbb
arpl
sub
cltd
mov
cmp
mov
jle
xchg
lret
ds
iret
ds
notl
arpl
pop
push
sub
and
xchg
xchg
and
adcb
mov
adc
add
testl
movsb
push
xchg
dec
insb
cmp
call
dec
rcll
sub
add
in
push
cmp
jb
mov
jne
push
je
aas
and
pop
dec
in
sahf
push
or
imul
cmp
js
div
xchg
or
stc
push
lods
adc
push
fneni(8087
loope
mov
push
sbb
mov
std
setne
pushf
mov
int3
shlb
imul
jb
sub
and
cmp
inc
in
fcmovnbe
inc
push
push
mov
imul
out
sti
jmp
testl
aas
pop
lods
xchg
cmp
pushf
fimull
or
loopne
rorb
inc
mov
or
push
mov
pop
addr16
fwait
xor
adc
mov
sub
scas
adc
fmull
push
cld
enter
inc
outsb
sti
les
out
mov
mov
push
clc
fs
mov
shrl
lahf
dec
call
add
flds
ror
pusha
inc
or
ror
jnp
std
les
adc
aas
xor
dec
mov
outsl
pop
push
sub
push
movsb
jle
aas
sbb
dec
stos
scas
aad
cmp
cmp
sub
movb
add
or
notb
sbb
lea
pop
and
loope
lds
xchg
push
and
scas
bound
xchg
hlt
xchg
pop
insb
cwtl
adcb
pop
add
cmp
jp
aad
sti
pop
inc
push
popa
mov
icebp
push
push
dec
pushf
mov
dec
xchg
fidivrl
jns
mov
in
lea
and
ja
xor
push
sub
aas
rorl
or
or
push
mov
pop
cmp
lahf
sbb
ret
cmp
into
ds
inc
and
fldt
std
lods
pop
or
inc
mull
das
inc
repnz
adcb
fdivrs
add
push
sahf
mov
pop
xlat
push
nop
push
pop
xor
das
sbb
pop
out
xchg
add
imul
pop
xchg
inc
lahf
fs
push
add
imul
rol
in
scas
sahf
cmp
fists
cld
out
insl
add
je
popf
push
xor
rorb
fs
inc
xchg
xor
shl
add
test
push
sub
dec
and
sub
xchg
xchg
rcll
dec
div
daa
orl
mov
inc
out
jecxz
shlb
mov
loop
mov
xchg
xor
loope
add
mov
dec
lock
leave
clc
jnp
dec
dec
fs
bound
in
mov
mov
mov
sbbb
or
jle
dec
test
and
lock
loope
andl
pop
inc
lock
sub
xchg
pop
test
push
mov
test
mov
imul
push
adc
dec
xchg
push
test
sub
sub
and
push
push
shlb
insl
pop
dec
lods
shll
mov
cmc
xor
adc
mov
cmp
jo
xor
push
outsb
dec
andb
mov
or
fisubs
dec
mov
sbb
lock
mov
cmp
scas
cmp
nop
cmp
scas
daa
shl
xchg
mov
sbb
or
and
out
dec
adc
in
repz
mov
ja
mov
cmp
ret
mov
push
mov
dec
in
sti
jmp
ds
xor
pop
fimuls
mov
rclb
dec
ficoml
xbegin
pop
repz
mov
add
inc
gs
clc
aas
ret
aad
mov
std
out
out
fdivs
cmp
or
adcl
imul
dec
mov
and
scas
pop
or
xchg
sarb
lcall
push
and
aad
sub
lods
aas
shl
xor
push
push
loope
int
dec
dec
insb
bound
sti
in
fwait
lods
fstps
mov
cmp
shlb
jl
or
pop
dec
add
arpl
jno
mov
jge
pop
out
push
js
cld
pop
cs
imul
fidivrs
cli
sub
adc
mov
cli
gs
ljmp
xchg
ja
or
sarl
add
fsubl
push
loopne
lcall
mov
cmp
inc
pop
sub
mov
cld
cwtl
inc
ljmp
xchg
lret
jge
cmp
in
sub
xor
orb
stos
hlt
mov
dec
add
cli
daa
or
dec
ret
in
xchg
test
out
sar
add
int3
inc
cmp
out
add
xor
add
cmpsl
lret
inc
test
ljmp
inc
lock
pop
mov
adc
outsb
inc
xchg
popl
and
mov
repz
ret
std
mov
xlat
and
mov
push
push
aam
daa
mov
xchg
fs
jmp
adc
movb
mov
cmc
adc
pop
xchg
mov
inc
cmp
ret
pop
cs
mov
outsb
add
inc
jae
xchg
mov
mov
sahf
and
add
cmp
cltd
cmpsl
add
or
scas
sbb
ja
scas
movsl
xlat
bound
ja
sub
int3
loope
inc
jle
loop
fbld
sahf
icebp
loop
addr16
and
in
clc
in
stos
sub
mov
aaa
test
mov
daa
lock
and
mov
cmc
add
insb
cmp
test
nop
jmp
or
and
xchg
mov
loopne
shrl
dec
repnz
std
stos
pop
lret
in
push
push
clc
push
pop
sbb
jae
push
jl
fidivrl
adc
call
fldt
lds
outsb
ss
push
cmp
and
mov
stc
popa
pop
into
push
pop
iret
inc
loopne
inc
sbb
add
pop
xor
scas
fnstenv
hlt
in
dec
cld
lcall
push
or
enter
aas
push
inc
int3
cmp
push
dec
imul
popf
test
clc
sbb
divl
daa
inc
sub
in
cli
jl
sub
xlat
out
scas
push
into
push
lods
sbb
test
mov
in
mov
cmpb
push
sub
in
lods
sbb
pushf
fs
sarb
adc
push
pop
xor
jle
loop
int3
mov
cmp
imul
and
popa
out
sub
adcl
adc
push
or
loop
ret
call
jl
pop
lea
adc
stos
mov
cmp
mov
sub
add
or
in
jne
das
mov
pop
movsb
mov
inc
add
mov
imulb
and
sub
mov
mov
out
jge
aam
pop
pop
ret
mov
rorl
call
clc
scas
aad
add
cwtl
pop
mov
inc
jmp
jl
je
ja
and
fsubs
xor
test
mov
aaa
push
mov
call
or
icebp
add
sar
add
fs
in
adc
add
loopew
fst
gs
movsl
pop
andb
lret
mov
leave
out
xor
stc
pop
sub
mov
sbb
dec
call
fisubs
pop
xchg
out
add
fisttpll
mov
jae
popf
ret
lock
addr16
and
pop
adc
push
xchg
adc
add
sub
in
mov
iret
sub
inc
fidivrl
inc
xchg
aaa
repnz
xor
add
scas
push
mov
subb
or
push
int
pusha
mov
pop
xor
sub
imul
jp
xchg
jecxz
fwait
sub
sarl
lea
icebp
or
jecxz
xor
adc
sub
pop
mov
dec
jecxz
or
and
dec
or
insb
push
cmp
aad
scas
inc
pop
jg
imul
rorb
cmc
push
into
sub
xchg
cmp
data16
lret
cld
testl
push
les
mov
mov
push
push
xor
jmp
push
push
or
outsl
cwtl
and
and
mov
pop
mov
and
mov
mov
enter
push
cld
sub
loopne
dec
mov
fidivl
ret
xchg
in
popa
mov
imul
lret
lret
or
jg
mov
aas
sahf
xchg
sub
mov
dec
adc
jmp
stc
jl
or
jg
das
adc
mov
pop
pop
sbb
mov
push
dec
scas
xchg
stos
int3
mov
sub
cmp
mov
rclb
adc
mov
fldt
mov
ljmp
out
cmp
call
cmpsb
push
loop
pop
lcall
inc
sbb
into
jb
pusha
loopne
pop
mov
pop
scas
or
ljmp
pop
xchg
inc
mov
std
popf
xchg
cs
sub
imul
add
jbe
and
ret
xor
xchg
pop
pop
cld
rcrb
mov
jne
aam
in
xlat
dec
jle
in
dec
or
arpl
jbe,pt
dec
pushf
adc
test
xchg
adc
pop
xor
mov
jmp
jns
incb
dec
aas
pop
enter
sarl
or
popf
sbb
jle
setl
fisubs
and
fucomp
xchg
int
clc
push
mov
rorb
roll
jge
push
sub
and
test
adc
adc
jl
mov
shll
or
test
pop
scas
push
push
imul
pushf
jl
loop
adcb
cwtl
das
or
push
mov
lock
mov
stos
dec
ret
jl
add
cmp
aas
and
mov
add
or
sub
mov
lcall
add
adc
aaa
mov
cmp
pop
adc
adc
push
mov
iret
jbe
in
je
stc
loopne
fwait
sbb
fldenv
je
sbb
cmp
mov
or
jo
pushf
aad
mov
xlat
pop
dec
push
xor
into
xlat
pop
add
sub
sub
fwait
and
adc
repz
and
ja
bound
mov
addr16
shlb
lret
data16
ss
ja
daa
ret
mov
pop
adc
shrb
xchg
lfs
mov
sarl
inc
mov
in
sbb
test
das
inc
push
cmp
pop
pop
fbstp
mov
daa
rcr
ss
ja
push
push
mov
push
push
push
loop
jmp
rorl
mov
push
popa
in
scas
sti
sub
xchg
das
leave
fwait
shlb
sbb
leave
dec
ret
dec
repnz
je
jle
mov
xor
scas
and
imul
movsl
xor
fisttps
adc
pop
ret
adc
dec
insl
enter
dec
fimull
push
mov
mov
test
popf
jmp
negl
lds
lock
sti
mov
xchg
sbb
or
sbb
sbb
inc
pusha
push
cmp
add
mov
fldenv
arpl
loope
mov
jg
shrb
pop
jl
dec
int3
ss
and
pusha
movsl
jnp
clc
mov
sbb
imul
out
push
lret
sbb
cli
mov
pop
ds
addr16
rorb
ficompl
insb
cmp
mov
push
mov
pusha
in
cmp
cmp
sbb
repnz
aam
pop
or
shr
testl
xor
hlt
icebp
nop
push
mov
in
test
or
xchg
pop
add
jb
mov
mov
push
sbb
jo
inc
xchg
mov
xor
jae
inc
or
test
ret
cmovl
jp
mov
pushf
adc
leave
in
sar
mov
xchg
cwtl
pusha
mov
sub
dec
mov
ja
mov
cs
mov
and
jnp
into
mov
xor
add
hlt
test
rcr
je
iret
mov
add
mov
xchg
fwait
jle
rcl
sbb
and
xor
pop
bound
shl
ret
faddp
pop
dec
jecxz
and
into
pushl
cmp
test
cltd
ficompl
inc
fcom
inc
nop
lahf
jae
test
gs
add
test
sahf
cmpsl
adc
imul
pop
mov
scas
pop
inc
mov
mov
leave
in
mov
mov
dec
cmpsl
adc
mov
sbb
mov
leave
sti
bound
pop
bound
or
mov
stos
inc
imulb
sbbl
test
outsb
lret
sahf
shrl
sub
add
mov
push
iret
cmc
mov
lods
movsl
ficoms
pslld
int
daa
jmp
hlt
bound
inc
lds
jmp
insl
cmc
jle
lret
push
inc
dec
inc
ret
ficomps
int3
sub
ret
test
repz
pushl
mov
mov
mov
xchg
sub
aad
in
push
mov
adc
or
xchg
imul
sub
or
cmp
or
mov
add
xchg
popa
mov
fcmovne
dec
push
cmp
lret
push
sbb
push
adc
inc
pop
mov
jmp
sub
ljmp
daa
cs
inc
dec
mov
mov
xlat
mov
dec
xor
andl
sbb
xor
pushf
iret
and
ret
xchg
xchg
mov
xchg
das
cmp
sub
lods
cmpsb
mov
sub
repz
rol
cmpsl
sbb
pop
test
rorb
sti
js
dec
jbe
dec
mov
dec
mov
jns
sbb
movsl
push
shrl
stos
movsb
sbb
cmpl
mov
cmp
push
mov
xlat
inc
xor
sti
push
or
fisubl
mov
out
pop
test
loope
out
mov
shl
xchg
and
je
cmp
dec
cmp
in
xchg
outsb
aad
mov
fisttpl
sbb
arpl
out
push
icebp
std
test
jnp
inc
push
sub
or
add
xlat
scas
ja
xchg
or
lcall
das
and
cltd
loopne
add
loope
sub
jmp
lahf
dec
push
fwait
mov
insb
nop
mov
cmp
fwait
std
dec
push
movsl
jno
cmp
mov
addr16
and
push
mov
sbb
ror
lcall
into
mov
mov
inc
push
add
loop
cmp
mov
cmp
sbb
cmpsb
and
push
adc
sbb
jge
pop
sbb
bnd
bound
jecxz
aad
sbb
out
add
leave
ss
inc
ljmp
out
mull
jecxz
call
aas
jo
nop
push
adc
jns
arpl
pop
rolb
idivl
adc
not
mov
jmp
sub
adc
lret
push
xor
mov
dec
cmp
fwait
mov
ret
sbb
xchg
mov
jae
mov
notl
stos
inc
pop
rcr
ljmp
popf
je
and
mov
mov
call
cmp
mov
sti
es
xchg
insb
xchg
out
out
or
jmp
nop
cwtl
jmp
pop
sbb
lahf
fiadds
cmp
mov
shlb
adc
push
add
jns
gs
add
or
stos
adc
gs
out
das
dec
add
loope
outsl
faddl
mov
cwtl
mov
cmp
in
adc
jne
pop
xor
jg
ds
sbb
pop
cmpsb
xor
sub
test
push
cld
inc
cmc
push
sub
bound
mov
jmp
leave
add
rcll
jle
pusha
loop
call
testb
xchg
xchg
lcall
adc
ror
out
jnp
sub
fdivrp
push
mov
jmp
sub
inc
mov
xlat
or
mov
sti
cltd
outsb
xorl
jbe
push
es
cmp
sub
ss
test
push
repz
lret
mov
lahf
aas
pop
jmp
out
ds
add
enter
iret
adc
push
cltd
test
cmpsl
xor
inc
jne
scas
add
ficompl
js
fisttpll
decb
and
mov
outsb
push
nop
lret
sbb
in
or
push
daa
aam
sub
and
sahf
add
pushf
jmp
fwait
mov
add
push
cmpb
faddp
data16
push
mov
pop
daa
lahf
mov
adc
test
dec
roll
lret
mov
cmp
xor
mov
xchg
fmul
je
sub
push
and
scas
lahf
cmpsb
mov
dec
xor
cmp
stc
push
lods
std
xchg
imul
test
sti
cmp
fidivs
mov
pop
sti
xchg
mov
and
add
ja
inc
mov
out
fwait
sbb
lret
sbb
dec
addr16
loope
inc
std
dec
sub
movsb
imul
cli
repz
cli
or
sbb
xor
and
pop
ret
or
outsl
cmp
and
pop
mov
mov
imul
fnsave
add
pop
cmpsl
lods
inc
dec
cli
cmova
xor
idiv
cmp
clc
fsubrs
push
mov
outsb
in
jg
leave
xor
imul
dec
or
pop
lret
and
dec
jmp
popa
data16
sti
pop
xor
xchg
xchg
stc
loopne
repz
fidivs
or
orl
pop
mov
icebp
dec
or
cmp
cmp
mul
xor
aad
push
out
and
sub
mov
in
imul
mov
jae
fcmove
lods
add
dec
mov
cmp
cmp
call
mov
arpl
jae
cmp
jnp
xchg
icebp
dec
nop
add
and
int3
mov
mov
pop
dec
int
or
jb
mov
inc
mov
stos
dec
add
push
mov
jno
ret
or
aas
adc
test
icebp
loop
les
xchg
mov
inc
shrb
lock
xor
xchg
push
test
add
mov
decl
inc
cmpsb
xchg
push
outsl
sbb
test
fnsave
in
jmp
icebp
cmp
pop
xchg
sbb
inc
sbb
and
pop
xlat
ret
mul
test
push
aam
lret
ror
ficompl
dec
stos
xchg
add
sahf
inc
outsl
add
jp
ljmp
add
ljmp
sub
mov
mov
push
rcrl
rcl
fildl
orb
orl
jmp
xchg
pop
imulb
int
fcomps
aam
mov
mov
push
push
loop
call
sub
mov
xor
push
ret
jno
loop,pt
cmp
jmp
xor
push
or
jg
rclb
in
aad
insl
lea
fcmovbe
repz
push
mov
test
xchg
cmc
add
imul
rcl
cs
popa
mov
into
push
adc
js
cmp
pop
fidivs
push
lret
sbb
leave
jo
and
fiadds
test
mov
mov
or
icebp
lcall
jmp
jnp
push
lret
xchg
cld
adc
sti
call
push
push
mov
ror
vpunpckldq
stc
ja
mov
mov
sti
pusha
mov
cmp
cmpsl
mov
lods
cmp
dec
movsb
sub
xchg
mov
call
xchg
cwtl
sahf
xor
addb
cmp
xchg
cmpsb
popf
int
mov
add
faddl
ja
fbld
pushf
jle
bound
ret
sbb
and
mov
mov
xor
and
xchg
lret
mov
cmp
mov
lods
ss
dec
xchg
pushf
inc
iret
xor
sub
mov
scas
mov
inc
ss
mov
pushf
sub
xchg
mov
mov
mov
std
sbb
cmpsb
outsb
cmp
icebp
out
stos
cmp
scas
fsub
adc
enter
push
pop
insb
jge,pn
and
add
add
shrl
mov
hlt
aas
push
jbe
dec
inc
pop
adc
mov
xor
out
test
fnsave
pop
jmp
add
popa
adc
xor
mov
fcompl
sub
filds
dec
clc
cmp
mov
gs
iret
inc
mov
scas
push
jmp
movsl
scas
loop
aaa
and
xchg
or
int
or
lcall
sub
jnp
imul
orb
xor
ret
loop
cmp
data16
pop
xchg
andb
xchg
adc
or
jp
js
divl
push
xchg
fcoms
packssdw
jle
pusha
inc
dec
mov
add
dec
cld
pop
or
cmpsb
jns
cs
sti
les
inc
movsb
leave
inc
das
ret
sbb
dec
mov
shl
push
add
push
xor
sub
in
mov
or
or
sbb
xor
sub
jmp
mov
pusha
xchg
mov
adc
pop
test
or
gs
cmp
cmp
fnstcw
adc
aad
lds
xchg
dec
outsl
imul
sar
add
xchg
inc
aam
mov
idivb
out
repnz
jae
adc
fld
jae
loopne
mov
out
sub
int3
fchs
lcall
sahf
sbb
mov
cwtl
insl
jne
add
and
pop
imul
ss
push
lea
or
sub
sub
and
ljmp
outsb
mov
in
rcll
inc
or
test
out
jno
pop
xor
int3
int3
dec
adc
fstpl
pop
mull
pop
jnp
addr16
and
or
pop
mulb
jae
inc
das
mov
lods
or
push
pushf
iret
pushf
cmovns
in
xor
xor
lods
dec
inc
xchg
dec
or
es
push
sub
daa
pop
xor
push
cmp
pop
inc
inc
iret
sub
mov
jb
push
fcompl
subb
lds
sahf
add
xchg
xor
gs
stos
sbb
add
lds
cmp
aam
data16
dec
jmp
push
xchg
pop
push
inc
int
jne
mov
adc
insl
pop
inc
mov
jmp
lods
sub
loop
mov
in
test
sub
arpl
pop
sbb
int
aas
insb
out
mov
pop
pop
and
push
mov
scas
ljmp
xchg
dec
aas
jmp
mov
aaa
mov
mov
adc
push
pop
in
jmp
cmp
pop
push
lods
pop
dec
push
inc
xor
loop
cmp
into
cmc
push
mov
loopne
cltd
mov
mov
shrl
clc
sub
mov
push
pop
pop
movsb
out
sti
jne
nop
cmpsb
addr16
insl
ret
sahf
cmpsl
push
shrl
lea
mov
rclb
outsb
sub
mov
cs
add
push
pushf
mov
xchg
lret
dec
movsb
jecxz
sbb
sub
push
rcll
lods
mov
mov
call
mov
notl
pop
in
jb
scas
cmp
lret
xchg
incb
add
fists
or
sub
movsb
fwait
lods
dec
and
movsl
mov
in
es
pop
and
ljmp
mov
push
testb
mov
adc
mov
xchg
hlt
sub
sti
xchg
add
insl
imulb
rorb
cmp
jecxz
push
inc
negb
fs
in
pusha
sub
and
mov
mov
test
jno
add
add
insb
sub
inc
aad
int3
pushf
fdivr
xor
in
push
orl
sub
mov
xlat
cmp
sub
xchg
imul
stos
adc
popa
stc
out
rcr
loopne
mov
sbb
pop
xchg
ret
outsl
adc
stos
xor
pop
cmpsl
mov
leave
cmp
lahf
and
jge
cwtl
sbb
loopne
adc
sbb
addr16
mov
fnstsw
push
sbb
popf
or
in
imul
xchg
ds
fs
sbb
add
clc
inc
loope
xor
rorb
or
fistps
lds
xor
jb
xor
aam
ss
jmp
cs
mov
adcl
fists
int3
lods
xor
sahf
in
popa
imul
inc
xchg
es
pusha
sahf
ret
inc
bound
ror
mov
dec
jl
cwtl
mov
and
js
nop
movsl
mov
aad
adc
push
mov
or
ret
inc
xor
js
loop
adc
mov
mov
les
pop
std
add
pop
xor
push
adc
aas
add
test
xchg
imul
mov
sbb
adc
clc
sub
sub
cli
fldl
xor
mov
out
loop
loopne
jo
int3
sbb
inc
out
mov
lahf
mov
negl
iret
fdivr
lock
push
into
popa
push
movsb
xor
pop
cmp
popa
fwait
jecxz
sbb
push
pushf
je
and
icebp
dec
cmpsb
aam
jmp
mov
lret
adc
out
mov
adc
insl
mov
sti
push
sub
pop
scas
andb
fidivrl
mov
jle
mov
sbb
out
stos
kxorb
push
and
mov
rorb
adc
pop
push
lea
mov
ja
out
sbb
insl
ffree
push
and
nop
aaa
jl
into
jae
xor
jb
cmpsb
dec
mov
jp
mov
mov
test
jmp
in
repnz
pop
movsl
arpl
arpl
call
cmc
push
icebp
mov
fldt
test
test
stos
or
mov
jbe
popf
and
sub
stos
jnp
push
mov
fsubrl
clc
repnz
and
and
pop
sti
aad
lods
jp
in
cli
inc
pop
inc
pop
aam
out
pop
mov
xchg
icebp
arpl
fstl
insb
jbe
cs
jle
mov
pop
mov
and
insl
in
cltd
or
enter
or
jbe
push
push
sub
mov
out
cli
mov
add
rcrl
mov
cmpsl
inc
jbe
jnp
or
push
mov
cs
dec
outsl
sbb
icebp
mov
pusha
mov
fisttps
cwtl
mov
sub
pop
cmpsb
cmp
sub
and
mov
sbbb
lods
ja
pop
cmp
lret
xorb
xor
in
rcl
out
jne
or
dec
daa
push
adc
jo
add
push
fidivrs
mov
scas
leave
fwait
and
icebp
stc
pop
out
dec
jnp
nop
inc
and
sub
ds
push
popa
cli
testb
mov
pop
mov
jnp
test
xor
mov
fwait
sbb
loop
stos
adc
xchg
push
in
mov
scas
pop
pop
cmp
mov
xlat
and
cmc
fbstp
mov
mov
pop
leave
ret
xor
es
push
jge
and
inc
leave
sub
es
dec
icebp
testb
add
outsb
adcb
jle
push
push
cmpl
push
jl
je
daa
icebp
or
xor
mov
pop
jo
pop
push
lahf
cs
mov
lods
aas
out
mov
fsubrl
mov
mov
cmpsb
data16
jle
test
mov
test
shlb
ss
shlb
pop
cltd
jo
aad
inc
mov
adc
data16
sub
cwtl
ficompl
ret
dec
jbe
mov
push
or
aaa
pushf
mov
jb
push
add
mov
inc
push
cmp
loopne
add
cmp
sub
loope
loope
xchg
jb
scas
or
sbb
insl
int3
fnstsw
in
mov
je
pop
pop
mov
rorl
mov
xlat
loopne
xor
xchg
inc
xor
cmpsl
es
jne
push
cmpsb
icebp
pushf
sub
pop
pushl
sub
pop
push
lds
idivl
cmp
stos
adc
jns
or
xchg
in
jp
xor
ja
in
inc
mov
adcl
ljmp
adc
pop
mov
int3
jl
pop
push
dec
sub
xchg
push
cmp
fucom
int3
push
xchg
cmp
sub
scas
call
push
mov
pop
movsb
mov
psubq
push
mov
cmp
lea
decl
lret
add
in
push
mov
icebp
movsl
in
aas
pop
jecxz
jnp
icebp
aaa
and
xchg
rol
out
xor
adc
outsl
xchg
cmp
adc
add
out
add
cmp
mov
lcall
sub
std
adc
add
and
cmp
xor
and
mov
ret
cmp
ret
into
add
or
jmp
sbb
push
andl
inc
inc
mov
lods
cmc
sbb
xlat
push
lret
dec
mov
and
or
add
ret
stos
test
scas
enter
gs
pop
mov
cltd
or
mov
mov
movsb
xchg
inc
call
repnz
out
cmp
pop
mul
adc
mov
jae
ds
jp
and
std
cmp
out
frstor
mov
aaa
and
fldt
lds
xor
aas
mov
scas
test
mov
pop
pop
jb
push
lcall
fidivrs
hlt
inc
cs
pop
adc
testl
jnp
add
mov
push
out
xor
pop
in
loop
lods
test
lods
dec
xlat
test
and
scas
das
das
adcb
add
adc
and
or
loopne
xchg
pushl
sbb
push
add
adcb
fiaddl
ljmp
add
fwait
pushf
testb
outsl
jb
cltd
leave
xchg
sarl
ret
sarb
out
adc
adcb
cmpsl
enter
mov
mov
xor
sbb
aaa
decl
push
sti
shlb
int
ljmp
lods
shrb
stos
cmpsb
xlat
jnp
repz
test
js
jp
cmpsb
mov
pop
mov
stc
pop
dec
fs
jge
xchg
mov
fldcw
pop
cmp
mov
mov
scas
fidivrl
out
sbb
imul
sub
hlt
test
jecxz
jl
cs
rclb
add
lcall
sbb
leave
mov
dec
pop
fsubrs
leave
ret
in
sbb
cmp
cmp
lret
or
int3
movsb
pop
xor
jg
test
dec
jmp
pop
dec
jbe
ss
subb
stc
add
gs
loop
cmovnp
cmpsb
xor
mov
outsb
aam
inc
dec
adc
negl
lret
mov
sahf
sub
push
add
sahf
and
icebp
push
lock
inc
call
inc
cmp
jp
and
add
loop
add
jne
mov
add
pushf
addr16
lret
jbe
and
xchg
mov
out
adc
and
mov
out
andb
movsl
xchg
push
fbstp
clc
int
rcll
sbb
mov
pop
lea
js
std
cmp
loope
push
pop
fistpll
mov
ffreep
mov
cmp
pop
cmp
imul
mov
lret
xor
rcrb
pop
ljmp
pushf
fbld
xchg
mov
sub
inc
mov
push
cmpsl
push
fcoms
gs
movsl
cmp
and
cmpl
scas
jmp
ret
mov
enter
jp
dec
cld
mov
inc
pop
push
mov
sub
test
lcall
leave
jo
cltd
mov
mov
fstps
sbb
testl
mov
fadd
ss
jg
scas
inc
loop
dec
mov
mov
mov
stc
js
jae
shrb
rcr
mov
mov
jmp
push
int3
mov
hlt
sub
into
popa
inc
outsb
sub
addr16
xchg
jae
sbb
push
add
fisubs
or
mov
and
js
sub
jno
jns
cld
ds
push
push
sbb
mov
inc
aad
inc
cs
inc
pop
or
lret
inc
lods
arpl
int3
jle
sbb
addr16
add
shl
jle
inc
adc
out
test
jne
sbb
jle
bound
rcrl
push
popf
mov
inc
in
mov
testb
hlt
cmpsl
pop
or
xchg
mov
add
out
sbb
push
in
aam
add
mov
lds
lock
push
in
cld
push
mov
pop
cmp
jg
dec
xchg
and
cwtl
popf
push
add
test
repnz
inc
repz
mov
push
add
test
cld
cltd
jo
ss
cwtl
push
outsb
notb
cmp
gs
out
push
jge
lock
mov
push
fldt
mov
add
cmp
es
xor
inc
cmp
nop
or
sbb
clc
lcall
jae
sbb
mov
mov
sub
cmc
mov
loopne
sbb
xchg
hlt
and
adc
xor
adcb
xchg
xchg
test
sub
repnz
lock
fstps
cmp
push
outsb
test
je
test
xor
sbb
call
sub
insb
xor
and
fcmovu
cmp
fisubrs
nop
lods
ret
xor
cmp
xchg
imul
sahf
sbb
jb
mov
add
pop
jmp
test
bswap
adc
mov
push
test
pop
pop
scas
jb
rclb
xchg
push
mov
jmp
and
js
mov
add
div
popa
or
ret
dec
cmp
std
insb
mov
cmpsl
push
mov
dec
ds
loopne
lock
or
loop
testb
jae
int
push
loop
in
js
fmull
cmc
or
cwtl
sti
mov
dec
das
pop
aaa
sub
pop
cmp
inc
das
mov
incl
ljmp
ret
sbb
rorl
push
inc
mov
or
aad
xchg
cwtl
mov
or
or
sub
xor
lea
pop
dec
stos
xor
pop
pop
or
mov
pop
fs
xor
mov
gs
je
call
popa
shlb
loope
sti
lods
std
enter
inc
xor
inc
loope
out
lods
sub
sbb
iret
out
test
cmp
xchg
sbb
popa
mov
sbb
ficoms
xchg
pop
pusha
idiv
cmpsb
jg
jge
dec
repz
pop
pop
push
pusha
push
popa
lea
mov
mov
adc
out
or
dec
int
pop
loopne
sti
dec
inc
loopne
in
outsb
mov
int
inc
inc
push
push
xchg
xorl
daa
aad
imul
xor
dec
addr16
adc
leave
mov
insb
test
mov
jno
mov
xchg
iret
hlt
or
mov
outsl
jp
push
test
les
jmp
shlb
loope
sbb
lds
fisubl
mov
and
bound
lret
aas
dec
dec
xchg
imul
adc
pop
or
test
loopne
mov
mov
mov
movsb
push
dec
mov
xor
add
mov
jns
cmpsb
inc
das
lcall
or
xchg
clc
test
in
popf
or
je
mov
ret
or
adc
int3
ljmp
sub
mov
arpl
xor
mov
sbb
jns
push
mov
adc
mov
adc
and
mov
test
pop
loopne
int
jbe
sarb
in
das
mov
pop
mov
es
shll
push
xchg
and
sbb
test
jge
aas
test
aaa
add
cs
negl
jp
mov
mov
lcall
or
stos
mov
fwait
push
pop
mov
cmp
inc
sub
leave
pop
imul
shlb
stc
sbbl
jne
dec
jnp
out
out
push
inc
push
fistps
sbb
xchg
loope
inc
inc
mov
out
shl
push
push
xor
xor
mov
push
push
idiv
pop
add
xchg
in
loopne
loopne
and
or
jne
mov
mov
push
inc
mov
je
sbb
and
xchg
sub
cmp
pop
stos
pop
imul
scas
fwait
andb
xchg
in
xlat
icebp
arpl
fisttpl
movsb
xchg
nop
sbb
inc
xor
jbe
into
mov
mov
or
cmp
rcrb
jp
jg
mov
cmc
push
cmp
js
jmp
or
mov
out
aas
lcall
pop
lret
push
imul
in
insb
scas
fisubrs
or
les
xor
lods
cmc
pop
mov
loope
fwait
add
loope
cli
jmp
dec
dec
inc
repz
jecxz
shrb
inc
push
xor
dec
fucomip
cld
inc
fs
adc
sar
int
lret
out
adc
in
mov
movsl
inc
lahf
fistl
push
mov
push
data16
leave
mov
test
or
xor
inc
inc
xchg
add
cmc
fisubl
shl
arpl
sub
loope
cwtl
cmp
adc
fdivs
movaps
popf
push
jg
daa
xor
or
stos
roll
inc
sbb
stos
cmp
sbb
add
into
or
cmc
dec
outsl
dec
stos
and
push
inc
mov
xchg
mov
cmpsl
xchg
mov
mov
shll
data16
ret
outsb
or
mov
cmpsl
or
xchg
adc
neg
pop
dec
push
xchg
inc
dec
stos
outsb
dec
lahf
outsb
lock
dec
xchg
stc
movsb
xchg
push
lods
jmp
inc
call
push
or
cmp
shl
fisttpl
jle
and
mulb
mov
ret
insl
dec
push
cmp
xor
pcmpgtb
and
aad
ret
out
aas
xchg
ljmp
inc
mov
fidivrs
mov
out
fs
stos
pop
cmpsb
inc
subl
mov
and
fs
repz
add
nop
stos
xor
into
mov
push
imul
jne
sbbb
inc
fwait
jne
push
push
and
mov
jae
pop
or
lea
mul
push
cmc
aaa
std
jmp
aad
lock
lea
mov
test
dec
sub
lret
test
inc
fnsave
xor
adc
or
rclb
ret
sbb
jge
jae
mov
jl
aas
or
repnz
popf
mov
mov
mov
inc
out
clc
call
sub
xchg
rcr
rolb
adc
jns
inc
sub
divl
cli
mov
xchg
push
test
sar
cmp
lods
push
xchg
adc
jp
jle
scas
jnp
andl
out
pop
into
xor
or
jbe
mov
repz
dec
cmpsb
ss
or
test
jb
jo
jnp
xchg
push
jg
dec
arpl
shr
mov
rol
inc
mov
sub
and
cld
mov
jno
jbe
push
frstor
push
fdivp
xor
cmpsl
mov
lock
or
test
in
mov
sbb
lods
rcr
adc
push
and
or
cmpsb
sub
push
aad
std
and
repnz
xchg
inc
and
sbb
insb
sti
adc
lahf
pop
and
xor
enterw
lock
jb
sub
shr
in
pop
inc
xchg
lods
movsb
adc
pop
dec
push
sub
sbb
adc
mov
in
call
add
inc
mov
jmp
jl
das
mov
and
sub
mov
sbb
push
lods
xchg
cli
stc
dec
test
inc
movsl
lret
pop
je
addr16
inc
cmp
pop
and
inc
dec
pop
mov
pop
pusha
mov
adc
outsb
rcll
mov
xor
mov
ret
mov
pop
cld
loop
mov
dec
mov
testb
dec
rolb
je
into
jo
jb
daa
and
sbb
mov
mov
imul
push
xchg
test
jnp
fisubs
xor
sbb
ja
push
sbb
in
pop
mov
ja
dec
inc
lds
inc
jg
sbb
jmp
data16
push
pop
or
outsl
repnz
push
mov
mov
mul
pop
bound
xchg
xor
xchg
scas
adc
cld
comisd
ljmp
adcl
adc
aas
xor
mov
xor
mov
xor
sub
adc
rcr
cmp
push
insb
mov
mov
ja
sbb
or
es
in
enter
sub
test
inc
mov
add
cmp
and
push
decb
mov
sbb
push
pop
cmp
inc
int
rolb
imul
push
popf
clc
out
dec
lcall
jns
sub
daa
cmc
lahf
lods
in
mov
rorl
mov
les
pop
pusha
push
dec
mov
mulb
push
cmp
pushf
jg
scas
mov
mov
xchg
enter
outsb
out
mov
ret
sub
cmp
pop
and
lods
test
ja
bound
cmp
dec
movsb
aas
inc
das
movsb
cmp
mov
ja
xchg
sbb
test
push
xor
cmp
aaa
xlat
sub
mull
arpl
cmpsl
xorb
repnz
sub
jmp
inc
sub
pop
lret
arpl
xchg
mov
imul
xchg
mov
pop
pop
lods
mov
xchg
mov
popf
stos
sbb
xor
data16
adc
push
popa
cmp
jnp
cmp
sub
imul
out
jp
xor
bound
call
cmpsl
sub
add
push
cmp
rclb
jmp
jmp
jp
lods
push
sub
pop
pop
jo
outsl
sbb
add
in
fwait
add
aaa
dec
outsl
ret
lret
fwait
adc
jecxz
in
lahf
cli
add
push
inc
push
jg
pop
jo
push
jbe
cmp
popa
sbb
cs
push
push
decb
or
jecxz
jmp
add
add
mov
adc
mov
ss
lret
push
sub
mov
lock
adc
mov
sub
mov
jl
fiaddl
orl
daa
stos
mov
arpl
sub
scas
adc
inc
cmp
js
clc
movsb
mov
lahf
cld
xchg
inc
push
pusha
mov
pop
mov
dec
ret
cltd
sbb
pop
mov
ret
or
hlt
push
xchg
lods
out
loop
xlat
repnz
or
icebp
stos
paddsw
cmp
jl
mov
aam
test
pop
mov
je
shl
pop
std
jbe
mov
adc
popf
adc
add
xor
adc
or
sub
inc
ret
or
jo
jb
lds
jnp
in
jae
jl
pop
repnz
scas
loope
jne
rcl
out
add
fisttps
mov
push
xlat
xchg
movntps
jns
test
push
icebp
loope
out
jno
sub
push
push
stos
pop
add
insb
inc
pop
cmp
and
xor
push
ja
inc
fucom
sub
xor
pop
sbb
data16
out
jmp
in
jg
jle
dec
or
mov
js
sub
dec
rclb
xor
push
pop
lds
or
add
push
push
xor
mov
dec
jecxz
mov
mov
inc
andb
or
pop
lods
push
add
xchg
aam
xor
cmp
cmovl
mov
jbe
jl
and
jns
es
mov
mov
jbe
mov
mov
mov
insb
pop
stos
push
xor
fldl
cmp
sbb
xchg
push
cmpsl
inc
inc
mov
cmpsl
cltd
aad
and
adcb
cmp
in
ret
cmp
lahf
adc
out
sub
push
pushf
inc
ret
mov
add
clc
scas
rcrl
xchg
rolb
mov
icebp
cmc
sarb
inc
mov
repz
ja
push
jmp
add
cmc
mov
dec
cmpsl
jmp
sub
mov
faddl
lds
sbb
lahf
test
xlat
jns
pop
dec
inc
or
push
jno
jle
jnp
imul
adc
xor
pop
es
lahf
ss
mov
lock
mov
mov
call
pushf
into
xchg
insb
xor
imul
icebp
sub
outsb
out
dec
lock
mov
pop
xchg
pushf
lds
cld
cmp
fcomps
outsl
sbb
mov
or
or
push
and
stc
jle
inc
xchg
xchg
xchg
test
jge
lods
sub
mov
call
push
pop
das
popf
or
dec
mov
in
test
rcrl
sti
inc
popf
xchg
insb
cmp
sub
pop
mov
inc
jl
cmpsl
mov
or
bound
movsl
scas
pushf
test
inc
sbb
jne
scas
mov
and
aaa
ret
mov
out
lock
pop
sahf
and
idivl
shrb
xchg
push
cltd
insb
pop
push
lcall
xchg
mov
pop
xchg
jns
mov
xchg
jp
fs
xchg
jecxz
jae
call
movsb
out
stc
mov
xor
mov
cwtl
lahf
call
jecxz
rol
sarl
or
dec
jbe
jmp
fldt
out
add
xor
sub
test
pop
jnp
aam
xchg
xor
ds
les
adc
inc
sub
lret
push
mov
inc
xchg
repnz
scas
xor
out
cmp
mov
xchg
and
mov
jmp
push
mov
imul
repnz
pop
or
mov
lret
imulb
sbb
adc
dec
in
ret
and
sbb
push
fisubrl
stc
xchg
sbb
mov
in
xchg
sbb
and
int
cld
sbb
or
ss
rcrb
fstl
xor
pop
xlat
mov
adc
or
xor
faddp
mov
xor
sub
mov
addb
sub
push
test
lods
jge
lret
sahf
nop
aam
sbb
add
cltd
sbb
das
add
std
popf
mov
pop
cmp
xor
movsb
sbb
inc
std
shll
inc
adc
icebp
out
enter
add
in
mov
test
dec
les
add
xchg
fstps
sub
sub
mov
lcall
cwtl
rcl
repnz
scas
lahf
jae
jno
outsl
popf
xchg
push
mov
cmpsb
xchg
div
mov
jmp
aaa
mov
mov
repnz
or
xchg
rorb
mov
push
popf
cli
mov
xlat
push
dec
or
das
es
out
xor
push
push
xor
cmp
cmovae
pop
sub
push
xchg
popf
ljmp
push
sub
cmp
cmpl
dec
pop
fstl
mov
into
mov
mov
push
adc
xor
pop
mov
setl
xchg
adc
and
dec
sub
sti
addr16
sub
stos
push
push
je
js
pop
cld
xchg
xchg
test
fsubs
jmp
out
lock
sub
lret
out
xchg
inc
xlat
test
sbb
arpl
add
cli
cld
dec
les
xlat
popf
enter
loope
adc
jge
int3
sub
dec
cmpsl
jg
sub
jmp
add
fadds
pop
mov
jns
and
mov
xchg
pusha
mov
xor
je
sub
test
sub
sbb
or
fwait
test
push
in
push
testl
dec
bound
dec
jp
rcll
inc
sub
add
sub
loope
sti
cmp
repz
mov
push
aam
shll
sub
jl
jp
or
ds
lods
adc
dec
loopne
or
cmc
das
add
sbb
xor
cmp
cltd
jle
cmp
cmp
mov
incb
mov
addr16
je
test
shll
mov
mov
inc
xchg
adc
rorb
add
cmp
mov
fdivrs
xor
mov
rcrb
mov
out
insl
jb
ljmp
adc
and
lds
les
and
jp
in
jbe
stc
js
es
pop
and
out
jl
paddq
cltd
int3
popw
hlt
stc
jle
js
jp
add
cli
xor
mov
bound
invd
ja
mov
add
cmp
cwtl
inc
fnsave
bound
add
subb
pop
cli
xchg
cld
dec
sub
adc
cmp
cmpsl
test
pop
cltd
cltd
xor
mov
repnz
hlt
sbb
inc
ja
pop
mov
inc
lret
push
inc
cli
dec
mov
loopne
add
cmpsb
pop
addl
push
test
jns
push
insb
push
out
dec
pop
jg
jnp
and
sbb
mov
cmp
sbb
lret
scas
mov
or
lods
cmc
dec
mov
mov
roll
dec
push
out
pop
shlb
add
fwait
cmc
imul
mov
inc
movsb
push
iret
mov
inc
push
icebp
xchg
fldenv
pop
sub
jl
or
fnsave
cmp
adc
sub
sbb
iret
out
cmpsl
pop
shrb
mov
pslld
subl
scas
xor
gs
mov
mov
cs
nop
dec
imul
mov
add
data16
inc
gs
lods
fwait
cli
adc
sub
mov
sti
fs
add
ja
cli
hlt
cmp
pop
push
xor
xchg
cmp
push
fwait
push
adc
push
cmp
sub
or
jb
es
stos
dec
pop
xor
xchg
inc
mov
adc
aaa
int
mov
addb
and
dec
cmpsl
jp
mov
sbb
int
adc
fwait
xor
xchg
or
in
data16
int3
jmp
inc
adc
frstor
adc
mov
xchg
xchg
xchg
cmpsb
repz
les
aaa
repz
or
dec
jno
jg
aad
jae
cmp
pusha
aas
cmp
iret
shl
mov
mov
mov
push
lds
or
and
addr16
inc
mov
and
movsl
dec
les
inc
cmp
das
movsb
sti
aam
adc
jge
roll
mov
mov
out
loopne
sub
xchg
push
daa
nop
push
out
cwtl
lea
lock
sub
fistpl
ret
mov
xchg
cmp
push
cmp
std
mov
sub
add
inc
ja
inc
cmp
test
push
insb
push
jge
cmp
mov
jne
scas
cmc
mov
adc
lock
movb
xor
clc
jecxz
enter
scas
mov
lcall
popf
adc
mov
inc
mov
jnp
ffreep
inc
cltd
jae
push
rolb
or
shrb
mov
fisubs
dec
cmpsl
push
call
lods
inc
inc
pop
push
mov
cli
dec
sub
movsb
pushf
xchg
pop
cmp
and
popf
fidivs
and
cmp
cmp
scas
xchg
or
inc
dec
imull
lock
fadd
in
pop
cmp
sti
sub
jnp
shll
out
outsb
pop
inc
sub
sti
sub
xor
loop
or
lds
xchg
mov
mov
push
sub
sti
imul
cld
and
test
add
add
inc
ret
jecxz
jno
jmp
sub
movsl
sbb
xor
js
dec
xchg
jo
sbb
andb
adcb
in
mov
ret
lds
cwtl
mov
mov
daa
push
sbb
lods
jae
sarl
std
inc
add
inc
mov
pop
movsb
lahf
out
stos
movl
sbb
and
clc
ds
mov
fldcw
hlt
or
nop
icebp
adc
scas
call
mov
aad
jno
imul
and
mov
loopne
cmp
ret
sub
jp
sub
sahf
mov
pop
and
sbb
pop
ret
pop
inc
push
cmp
push
push
sbb
jns
push
xorl
xor
orb
mov
shll
add
cwtl
gs
loope
rol
in
adc
dec
mov
dec
jno,pn
cmpsl
sbb
xor
push
lods
cwtl
cmc
mov
popl
and
jmp
fwait
and
push
adc
mov
in
xchg
daa
jnp
mov
cmp
add
ss
pop
mov
jno
popa
test
push
adc
jne
out
sbb
mov
xor
sarl
rcll
inc
xor
imul
pop
dec
popa
lods
jge
cmp
repnz
scas
sbb
inc
aam
xor
mov
movsb
push
sbb
and
test
fistps
mov
cltd
js
jbe
add
faddl
adc
xchg
cmp
ja
cltd
mov
nopl
insl
cmpl
mov
int3
add
xchg
cmp
jne
jg
pop
imul
les
fcomps
jnp
int3
repnz
inc
adc
imul
ror
test
insl
mov
push
push
vmaxsd
cld
xlat
mov
rolb
arpl
out
imulb
sbb
or
or
rorl
cmpsl
lahf
pop
movsb
adcl
mov
aas
jmp
dec
out
clc
dec
addr16
and
das
imulb
xchg
sub
sarl
cli
and
jae
cli
ja
fs
repnz
daa
pop
into
insb
add
in
sbb
sti
push
dec
sub
push
int
jl
ja
adc
in
lahf
sbbb
ss
xor
mov
scas
jl
les
xor
ret
loop
add
out
add
int
movsl
pop
add
je
push
enter
mov
in
iret
or
mov
jmp
pop
fucomip
ret
mov
add
mov
mov
or
cli
lret
cmp
negl
xor
lahf
mov
fidivl
outsl
fwait
sbb
outsl
sub
xchg
jno
hlt
mov
mov
out
std
add
inc
sub
lods
js
xor
mov
dec
and
in
leave
lahf
push
inc
add
mov
mov
fsubrl
adc
pusha
sbb
pusha
cli
std
mov
xchg
ror
arpl
ja
inc
stos
mov
cli
leave
mov
addr16
lods
cmp
cmp
mov
or
fbld
inc
arpl
cmp
mov
push
ljmp
inc
pop
adc
mov
fcoms
adc
lock
popa
dec
imul
lret
aas
xlat
and
call
packuswb
test
inc
add
fs
dec
cs
js,pt
rcll
iret
inc
mov
ficomps
xchg
xor
inc
mov
out
push
sbb
add
scas
movzwl
mov
sbb
sahf
loopne
cli
pop
insl
and
sub
pop
fwait
adc
mov
outsb
adc
add
lea
mov
mov
dec
sbb
jecxz
mov
xchg
xchg
add
fsubp
mov
mov
dec
inc
movsb
lock
sarb
loop
iret
iret
adc
ficoms
hlt
jo
mov
out
add
push
mov
icebp
sub
int
pop
push
out
idivl
inc
leave
add
lds
sub
add
or
push
xor
inc
and
and
mov
insl
rcr
repz
andl
lahf
jmp
add
jnp
outsb
sub
mov
cs
stos
data16
xchg
lods
mov
clc
mov
jmp
jns
sbb
cmp
pop
lock
sub
aad
push
call
pop
aaa
lods
mov
fistpll
pushw
mov
jge
std
lret
sti
sbb
scas
adc
jno
leave
sti
or
inc
push
jle
sub
adc
sub
movsb
movb
cld
arpl
and
test
es
sub
pop
push
ljmp
jp
adc
das
lret
mov
and
fiaddl
test
cltd
ss
ja
jb
stc
sbb
xchg
scas
fstps
loope
out
cmpsl
add
lods
cs
sub
pop
aas
stc
loope
insb
and
je
movsl
mov
inc
out
fistps
rcll
xor
cld
in
scas
adc
out
push
xchg
cmp
xchg
mov
out
out
movsl
fstl
js
stos
sbb
inc
fiadds
ret
push
in
add
lret
pop
addl
cld
xor
sub
add
pop
jge
orl
scas
or
xchg
inc
cmp
rcll
sub
andl
call
rcr
mov
or
xlat
pop
inc
inc
pop
or
pop
xchg
ja
mov
dec
jecxz
sbb
mov
push
lcall
mov
add
inc
inc
mov
aad
ljmp
xchg
push
je
dec
adc
adcl
add
js
cld
test
sbb
icebp
dec
mov
mov
aam
hlt
push
cmp
cmpsl
jge
aas
and
sbb
xor
mov
inc
imul
testb
cmp
popf
cli
lahf
lock
rcr
and
cmpsl
rol
outsb
insb
mov
push
mov
fiadds
aas
pop
roll
insb
test
into
push
lgs
jns
sub
dec
lret
sbb
rol
fidivs
inc
popa
push
shll
or
lret
subb
push
cmp
xchg
fmuls
jae,pn
loop
addr16
pop
inc
cltd
xor
cmp
bound
add
mov
mov
or
jo
shlb
jo
dec
movl
mov
inc
jnp
jge
arpl
fmuls
sbb
inc
gs
mov
dec
les
jbe
and
pop
xchg
filds
test
aaa
and
mov
and
jb
test
stos
push
jmp
into
ds
xlat
pop
add
jecxz
sbb
jle
xchg
and
nop
repnz
xor
xor
cmp
push
cmpsl
test
mov
and
popf
aam
push
loopne
ficomps
bound
pop
outsl
xorb
in
and
pusha
adc
ja
scas
mov
int
jle
add
into
fs
iret
mov
mov
sbb
inc
pop
cmp
or
icebp
push
mov
outsl
pop
cmp
cmpsb
xchg
push
jb
or
loopne
or
cmpsb
data16
aad
loopne
ljmp
inc
js
mov
pusha
mov
jecxz
aaa
sbb
movsb
pop
out
sbb
adc
sbb
popa
ljmp
push
or
sbb
mov
jne
pop
out
adc
fnsave
or
sub
gs
pop
pop
or
cmp
aaa
in
inc
jnp
xor
in
test
mov
fisubrl
test
test
lret
fdivr
add
les
cmp
rclb
ss
push
pop
cmpsb
push
xchg
sub
call
cld
andb
dec
pushf
je
lds
ret
ret
adc
pop
imull
mov
adc
ja
lods
in
imul
and
idivl
fidivrs
push
mov
lea
jne
das
sbb
push
stc
mov
sub
bound
jl
jb
fsubl
or
push
mov
jg
dec
sbb
les
test
adc
pop
ja
xor
adcb
je
mov
out
mov
jne
jbe
aas
or
call
xor
jg
and
outsl
pusha
inc
leave
xor
lahf
jnp
mov
sbb
xor
xchg
dec
mov
mov
push
mov
aam
dec
dec
movsl
shrb
cmp
inc
repnz
sbbl
in
pushf
lret
mov
ds
fimuls
aaa
mov
inc
add
mov
cltd
nop
cmovno
jl
adc
loop
mov
in
or
in
xchg
push
int
sub
cmp
ljmp
gs
or
mov
test
add
arpl
add
inc
popa
cld
ficompl
fucomip
ljmp
popa
fimull
mov
add
mov
inc
std
ja
shl
sar
dec
mov
xor
fs
or
xchg
jnp
andb
pusha
fsubs
out
rcll
nop
scas
enter
data16
shrl
or
adc
mov
lahf
jge
pop
sub
sbb
rorb
loope
aas
jb
clc
adc
xchg
das
nop
and
insb
dec
push
jge
jns
pop
sub
push
xchg
sbb
sahf
lcall
push
test
ret
cmp
push
adc
push
aas
and
mov
and
cmp
int
adc
insb
pop
call
adc
jne
mov
add
mov
fwait
pop
mov
mov
stc
sub
lods
aaa
call
cmpsb
xor
arpl
ficoms
xor
mov
popa
je
call
xchg
lahf
cmp
mov
fisubrl
lret
imul
mov
fisubrl
add
cld
mov
xlat
xchg
cmp
inc
cmc
dec
shl
jo
or
and
iret
mov
movl
xor
mov
push
add
ss
and
scas
divl
or
xchg
loop
adc
out
in
adc
out
sbb
jbe
int3
cmp
pop
mov
cmp
add
cmp
test
aaa
push
jmp
cmc
fisubl
jg
sub
xchg
popa
imul
adc
and
xor
push
lds
bound
or
insl
pop
into
inc
mov
fs
out
leave
in
mov
dec
adc
mov
and
imul
push
out
push
test
push
add
fs
es
mov
add
push
mov
ds
rcrb
int
outsb
cli
and
jns
shl
sub
mov
inc
mov
inc
mulb
adc
xchg
call
adc
mov
xchg
das
mov
test
cld
adcb
aaa
loop
out
xchg
pushf
ret
arpl
test
repz
cltd
mov
and
xor
mov
test
out
lahf
adc
ds
adc
xchg
int
pop
int3
pop
int
dec
and
sub
pop
popf
nop
imul
push
pop
mov
or
push
call
call
xor
push
imul
sbb
aam
cmpsb
test
xchg
pop
jo
inc
les
xlat
loope
xchg
loop
pop
and
pop
ss
mov
cmpsl
imul
test
xchg
in
xor
movsl
cmp
loope
aam
cli
adc
pop
jl
pop
out
shll
lea
enter
lret
pop
add
aas
mov
loopne
leave
pushl
negl
nop
hlt
jnp
mov
ret
jns
mov
inc
int3
movl
cld
jle
and
mov
loope
mov
dec
xor
ds
sbbb
pop
ret
out
pop
and
pop
xor
mov
or
inc
clc
xchg
push
mov
fwait
adc
icebp
ljmp
push
scas
xchg
mov
sarl
mov
pushf
jns
jo
mov
ret
jp
cli
out
jge
aam
int3
xchg
in
rol
pop
pop
push
cmpsb
pminsw
rolb
js
sbb
in
push
mov
pop
out
adc
fdivrs
or
fisttpl
cmp
mov
outsb
cmpsl
push
inc
xchg
xchg
push
sbb
push
push
loop
lock
dec
aas
pop
pop
cmp
sbb
xlat
into
in
int3
jnp
mov
fwait
pop
inc
xor
mov
push
xor
lahf
mov
dec
pop
mov
cli
cmp
xchg
out
push
or
movsl
mov
insl
stos
add
dec
insb
pop
add
cli
pop
xchg
test
dec
dec
ss
ret
push
movsb
dec
jge
iret
sti
mov
mov
xchg
das
xlat
mov
mov
mov
mov
mov
daa
loopne
fldcw
sub
sbb
push
jnp
mov
lcall
push
imul
dec
add
adc
outsb
pop
mov
jg
loopne
mov
int
fwait
rcrl
aaa
bound
xchg
xchg
xor
cwtl
mov
add
loope
sbb
es
cmp
das
cmpb
and
or
movsb
ret
dec
mov
jae
push
mov
ja
out
pushf
ja
js
lcall
inc
xor
in
adc
scas
push
insl
arpl
mov
repz
cld
mov
hlt
or
jg
inc
mov
mov
dec
int
ss
test
sbb
fists
iret
idiv
ret
cmp
out
inc
stos
sub
popa
lods
cmp
inc
or
outsb
sub
mov
mull
dec
mov
sbb
jb
mov
jmp
mov
jecxz
adc
imul
lods
div
mov
jecxz
add
inc
insl
cwtl
and
mov
in
mov
test
scas
sbb
pop
add
scas
mov
push
iret
loope
ficompl
and
add
xchg
mov
mov
sbb
std
mov
iret
pop
xchg
push
arpl
into
repz
aas
loopne
and
inc
lock
pop
push
fistps
rorl
jp
daa
jnp
pop
cmp
aam
mov
inc
ret
push
or
idivl
adc
test
enter
mov
fs
push
in
cmpsb
int3
cltd
mov
iret
cmpb
push
mov
cmpsl
sbb
adc
arpl
jl
rcrb
ljmp
in
xchg
cmp
pop
jae
popa
lahf
and
lods
pop
push
mov
sbb
repnz
xchg
cmc
jo
imul
pusha
andl
jl
or
pop
jg
mov
sbb
pop
or
push
fiadds
mov
xchg
dec
movsl
daa
ret
ja
arpl
add
xchg
push
cmpsb
jg
loope
ja
out
xchg
ret
lds
and
inc
mov
rcr
add
pop
addr16
inc
push
popa
rorb
xor
push
icebp
fldenv
xor
imul
jno
xor
lea
bound
xchg
pop
and
aas
mov
in
ss
or
pop
repnz
test
sbb
pop
sub
fnstcw
and
clc
scas
jmp
roll
and
pop
adc
fidivrl
push
iret
jl
clc
mov
inc
inc
fiaddl
sub
mov
scas
sbb
frstor
jecxz
mov
faddl
cmp
jl
add
xchg
pop
shrb
pop
ljmp
or
ss
pop
in
fbld
test
aaa
sti
mov
gs
cmp
lcall
xchg
notl
mov
xor
es
fisttpl
pop
out
sarb
or
push
aam
mov
dec
mov
push
aad
or
cmp
cmp
fimuls
add
jl
loope
in
orl
roll
or
sti
subl
test
out
or
int
lcall
lods
notb
cmp
ror
pop
pushf
int
cmpsb
add
lret
mov
sbbb
cli
je
sarb
imul
popf
repz
dec
and
sahf
cmp
repnz
mov
mov
inc
mov
jae
dec
orb
rcr
js
dec
pop
in
test
xor
pop
or
dec
outsb
xchg
jge
or
push
testb
and
mov
and
pop
shll
call
aad
pop
sub
clc
xchg
xchg
lods
ret
mov
shrl
in
insb
scas
aas
sub
push
xor
pop
test
rcrl
jge
mov
mov
lods
push
int
test
jl
imulb
fsubr
push
mov
ret
fnsave
cli
dec
adc
sbb
icebp
stos
in
xchg
ja
les
mov
ds
pop
add
jno
or
sbb
fbstp
or
aam
xchg
jmp
dec
js
mov
adc
scas
js
shl
and
cmp
pop
cmp
ljmp
add
out
lds
insl
in
scas
pop
icebp
call
test
pop
pop
jbe
fnstcw
mov
ljmp
lods
inc
cmp
mov
addr16
push
mov
xchg
push
aam
push
rcll
jecxz
cmp
in
in
mov
or
movl
pop
adc
adc
sub
out
pop
int3
xchg
out
and
add
mov
adc
in
add
cmp
mov
into
aad
pop
mov
sbbl
movsb
lods
jle
mov
cmp
lret
cmp
js
xchg
pop
std
inc
es
mov
test
push
mov
ljmp
loopne
mov
pushf
out
mov
dec
jmp
sar
pop
sub
insl
fsubl
out
xchg
xchg
pop
pop
pop
mov
pop
sti
sbb
int
inc
into
shrb
push
scas
mov
addl
jecxz
push
fwait
add
stos
jo
aam
mov
push
jle
fmull
push
push
stos
xchg
xor
mov
clc
enter
insl
out
jle
sub
cmpsb
pop
pushf
mov
mov
fstpt
cmp
insl
pmaxsw
add
inc
ljmp
clc
or
push
push
rclb
dec
dec
scas
loope
inc
jge
push
xchg
in
push
rcrb
cmp
daa
mov
lret
cwtl
cmp
fwait
pop
xor
add
sub
cmp
stos
mov
ret
lret
pushf
cmpl
mov
cmp
cmp
aam
insb
adc
cltd
push
fmuls
test
stos
push
lret
dec
add
fcompl
pop
test
cs
stc
xor
test
or
ret
hlt
xchg
or
insl
jnp
push
adc
nop
or
repz
mov
fidivrs
or
aaa
xchg
sub
in
mov
push
subl
mov
mov
mov
aas
out
jnp
mov
fs
sbb
leave
repz
jns
repz
subb
ret
stc
sahf
cmpl
xchg
mov
xchg
and
pop
xchg
add
push
mov
add
shlb
xchg
rcrl
daa
cli
faddl
inc
bound
repnz
mov
xchg
or
xor
mov
loopne
stos
fsubrp
adc
cmp
xor
shl
ds
jge
push
xchg
adc
ljmp
add
sbb
inc
cmp
or
ljmp
dec
jmp
cld
cwtl
pop
sbb
xchg
in
sub
out
clc
mov
add
mov
sub
outsb
mov
stc
or
dec
aaa
sbb
jecxz
sahf
jp
stos
lret
jb
mov
mov
outsb
sarl
add
inc
cmpsl
add
and
or
test
xchg
mov
pop
xor
xlat
ja
popf
cmp
jb
in
stos
adc
xchg
test
mov
inc
sbb
sbb
imul
push
and
cmp
aad
jb
les
xchg
aad
out
cmc
stc
fsubl
xorl
sar
xchg
jp
lods
inc
shrl
sbb
loopne
cmpsb
push
lcall
shr
neg
shl
push
in
push
pop
cmp
adc
sub
cmp
fdivrp
cmp
neg
xor
addr16
pop
adc
lods
outsb
cmpsb
pop
or
mov
icebp
inc
mov
ficomps
int
dec
jae
inc
mov
push
inc
or
stos
out
icebp
dec
mov
sub
mov
push
inc
add
leave
imul
cmp
dec
push
rol
int
pop
enter
adc
ret
inc
inc
cmp
xchg
imul
popf
mov
or
repz
and
es
jnp
sbb
ljmp
outsb
jp
dec
arpl
push
inc
rcrl
daa
movsb
jo
lea
sahf
mov
insb
dec
add
dec
mov
mov
pop
inc
sbb
xchg
pop
cli
pop
sahf
xor
pusha
push
shlb
sbb
push
inc
filds
fidivrl
movsb
ss
and
idivb
hlt
dec
cs
scas
rcrb
pop
ja
cmp
jb
mov
mov
or
fsubl
push
mov
jp
imul
frstor
pop
push
popf
xchg
mov
mov
cmp
movl
jecxz
int3
pop
pusha
xor
mov
mov
fcoml
subb
outsb
xor
mov
clc
mov
xchg
mov
dec
test
push
lock
mov
outsl
out
cmp
jno
int3
ss
sahf
xor
jmp
outsl
add
iret
adc
movsl
outsb
mov
jns
sahf
imul
pop
or
dec
jmp
xchg
inc
pop
adc
pop
cwtl
sahf
pop
jmp
shlb
nop
in
jecxz
lret
mov
xchg
gs
dec
icebp
daa
push
addr16
out
xchg
shl
pop
test
gs
mov
or
insl
cltd
jmp
movsl
inc
cmp
call
mov
daa
mov
push
lret
xchg
out
push
xchg
or
jl
ret
test
lock
inc
shlb
fidivrs
js
mov
movsb
lcall
psrld
adc
loop
lret
push
push
int3
lahf
dec
loop
ljmp
jmp
incb
pop
fsts
lea
inc
mov
cvtpi2ps
dec
mov
leave
cli
inc
stc
fstpt
add
pop
aad
sbb
rcrb
insl
imul
push
dec
xlat
ljmp
cmpsb
int
and
push
pop
imul
mov
sti
clc
fs
orl
ffree
xchg
inc
pop
aad
aaa
mov
inc
mov
cwtl
push
cvtdq2ps
pop
hlt
jmp
mov
sti
punpckldq
lods
insl
xchg
loope
inc
jne
mov
loop
mov
pop
je
int
xor
or
in
dec
ficomps
bound
push
cmpsl
imul
mov
cmpsl
bound
sbb
cwtl
pop
lds
or
xor
mov
imulb
fdivrl
inc
int
and
jns
mov
repz
mov
add
push
pop
repz
push
cld
adc
xor
aad
mov
cmp
out
pushw
sti
leave
loopne
mov
and
leave
push
mov
into
imul
repnz
pop
insl
loope
push
aas
cmp
sub
lcall
stos
ret
sub
bound
pushf
inc
push
sub
xchg
pop
mov
dec
xorb
jo
add
push
scas
ja
icebp
test
daa
dec
movsb
jmp
into
cmpsb
or
les
out
push
stos
sbb
jge
push
and
lea
xchg
push
fsubrl
pop
loope
push
jo
pusha
and
ret
bnd
pop
mov
aaa
inc
rcl
cltd
xor
xchg
mov
inc
aad
xor
mov
lret
roll
jmp
cmp
fldl
push
insl
shrb
and
sahf
enter
cmp
inc
or
ret
inc
pop
testl
sarb
out
sub
scas
movsb
xchg
xchg
mov
jbe
push
inc
addb
or
add
call
cmpsb
sahf
addr16
jmp
push
repz
pop
jg
cmp
outsb
xchg
cmp
scas
icebp
cli
xor
data16
decl
insb
adc
mov
sbb
pop
jecxz
into
addr16
sbb
jmp
jne
movsb
test
push
xchg
lcall
xor
test
pop
sti
clc
push
xchg
call
jno
and
test
pop
scas
mov
iret
adc
cld
enter
nop
mov
pop
fsts
add
loopne
adc
push
lods
push
test
add
push
adc
jnp
or
dec
push
arpl
movzwl
jae
je
cmpl
pop
mov
inc
mov
pushf
sub
xchg
dec
outsl
pminub
pop
xlat
and
int3
icebp
insb
mov
xchg
fiaddl
sahf
scas
sub
repnz
ret
ret
xchg
add
xchg
in
mov
dec
sbb
fwait
pushf
jmp
xlat
adc
pop
mov
enter
pop
ljmp
in
jge
jmp
out
out
ss
pop
roll
inc
test
and
fcomi
fdiv
xchg
fcmovnbe
and
addr16
adc
mov
popf
sub
xchg
dec
sub
lds
icebp
and
push
push
popf
popf
push
jns
push
push
in
call
xchg
pop
int
aam
notb
push
repz
cld
in
mov
ss
xor
popf
jo
mov
test
xchg
pop
aad
mov
xchg
mov
mov
cmp
fs
jg
test
jb
mov
dec
fcomps
dec
pushf
mov
mov
dec
mov
cmovs
scas
jmp
int
cmc
lods
test
mov
mov
fstps
mov
pop
ja
scas
mov
xchg
loope
push
or
ds
xchg
dec
cli
aas
jae
pop
and
ss
fiadds
adc
sti
push
push
fbstp
or
rcrl
stos
fs
xchg
pusha
adc
js
sbb
dec
repz
or
clc
push
aad
aad
push
bound
adc
adc
add
stos
mov
pop
push
jl
pop
ljmp
shrl
xchg
adc
gs
mov
js
getsec
push
lret
popa
xor
jnp
ss
imul
mov
xchg
sub
in
mov
mov
leave
lcall
add
xlat
and
xlat
pop
test
pop
cmp
pop
or
dec
lret
mov
add
xchg
divl
jg
stos
es
fisttpl
test
mov
sub
fisubs
imul
sub
sub
jns
roll
dec
dec
mov
xchg
fsts
mov
aas
mov
push
lea
in
subb
xor
aam
mov
loope
sub
fstpl
in
insb
test
outsl
outsb
fisubrl
push
pop
pushf
pop
shlb
inc
or
sahf
jno
pop
dec
pushf
xchg
cmp
mov
bound
ljmp
push
jl
mov
fnstenv
push
hlt
xor
insl
push
push
push
insb
leave
fcomi
mov
mov
stos
jno
out
ljmp
lea
jns
movsb
adc
andb
shll
ret
cltd
out
cmp
jns
fwait
pushf
mov
sub
out
mov
js
push
push
mov
mov
decl
cld
dec
xchg
addr16
dec
push
lret
lock
mov
add
and
insb
and
mov
scas
stos
pop
loopne
fisubl
gs
dec
xchg
cwtl
lcall
and
jp
popf
sub
dec
sbb
xchg
movsb
idivb
mov
mov
cld
out
xchg
xchg
cwtl
push
stc
dec
lcall
cld
out
pop
dec
sbb
inc
push
xchg
test
lods
or
or
adc
add
mov
fcomps
dec
add
push
xchg
mov
outsb
lret
xchg
cmp
jb
dec
cmp
test
shl
sbb
out
stos
data16
mov
push
pop
dec
sub
xlat
inc
mov
push
inc
pop
insb
xchg
mov
sub
push
pop
and
test
stos
lods
pop
xchg
and
clc
js
gs
xchg
in
mov
push
jp
test
lds
ret
mov
icebp
fcomi
cli
das
push
sti
pop
pop
enter
sub
insl
scas
int3
add
push
push
xchg
jbe
xchg
dec
push
push
dec
and
mov
cmc
sub
inc
ss
jl
int
xchg
xchg
xchg
fcmovnb
push
arpl
jns
and
adc
insl
out
mov
mov
andl
mov
cmp
test
out
out
out
push
shr
xchg
jmp
xor
test
frstor
je
cmc
or
fists
jns
loopne
or
add
into
mov
nop
jmp
adc
mov
add
mov
cwtl
clc
mov
push
in
dec
mov
arpl
stc
lret
sbb
xchg
pop
sbb
mov
xchg
iret
rcrb
cs
ret
sub
sub
xorb
addr16
and
je
lea
das
jl
pop
mov
cmpsl
push
jle
cmp
imul
lock
and
push
in
cwtl
gs
leave
dec
inc
enter
add
enter
mov
xor
sub
stc
mov
add
rcrb
adc
xor
mov
jecxz
loop
xor
or
test
inc
or
ljmp
nop
adc
cmp
add
rorb
dec
lahf
dec
xchg
add
lcall
xchg
data16
subb
std
cs
outsb
cmpsb
lahf
loop
test
in
fbstp
pop
cmp
fs
mov
repnz
push
js
pop
nop
test
xchg
cmp
jg
bound
std
push
cmp
dec
lahf
adc
pop
addr16
lds
cmp
lret
stos
loopne
out
mov
sub
xor
fildl
fcoms
mov
sbb
gs
cmp
inc
in
cmpsl
shl
fdivp
test
data16
rcll
cmp
icebp
sbb
out
jp
adc
inc
adc
lret
dec
fsubrs
orl
cmp
xor
addr16
mov
fildll
mov
mov
push
sbb
mov
adc
mov
outsb
leave
xor
mov
mov
mov
adc
test
ret
lods
sbb
into
cmc
adc
or
fistps
jmp
xor
repnz
jbe
pop
pop
repnz
pop
pop
ja
cmp
add
jl
jo
mov
xor
mov
mov
lea
and
jo
popa
sbb
xchg
fnstenv
test
pop
jns
mov
mov
dec
mov
add
movsl
inc
ja
shlb
ret
pop
out
ficompl
popa
fnsave
pop
fcomps
shll
in
inc
cmpsl
popa
setae
and
add
imul
outsb
test
in
aad
enter
mov
in
ret
stc
adc
push
push
sbb
leave
dec
push
out
jge
jns
sbb
mov
push
jecxz
ja
cmpsl
fmull
aaa
ljmp
sahf
dec
cmp
push
pop
dec
mov
stos
shrb
lods
xor
xor
push
aaa
jb
jnp
add
clc
pop
cmp
add
or
lret
inc
push
sub
in
call
jp
jb
fists
bound
pusha
and
repnz
mov
jno
cmpsl
lahf
repz
pop
popa
bound
push
dec
push
mov
push
ja
jmp
jmp
stos
pop
cmp
popa
pop
add
lea
ljmp
int3
cmp
cmp
stos
nop
out
add
rcl
lea
adc
sbb
xchg
js
sbb
imul
mov
adc
cwtl
les
sub
cli
push
arpl
ja
cmpsb
inc
leave
jl
xchg
add
inc
test
inc
push
inc
ss
add
pop
cmc
cld
out
cltd
cld
fyl2x
push
add
es
pop
stos
imull
cltd
addb
jmp
int
pop
pop
loopne
imul
add
in
sti
mov
lds
mov
pop
xchg
mov
mov
push
lds
aam
xor
dec
inc
popa
mov
xchg
mov
je
push
aad
jmp
pop
push
std
sub
pusha
hlt
jmp
repnz
add
jae
jnp
imul
push
in
test
orb
cld
xchg
dec
push
test
psubd
sub
das
clc
mov
sub
mov
xor
xor
leave
das
enter
pop
sbb
mov
in
adc
push
bound
cmp
xchg
aam
or
ficomps
out
loope
addr16
dec
cwtl
push
iret
jne
mov
int3
pop
les
aam
cmpsb
pop
cmpsb
mov
repz
jne
imul
lret
test
or
adc
jle
out
test
dec
jne
or
negl
enter
test
nop
or
cmp
inc
sti
add
adc
rclb
push
int3
push
scas
movsb
jmp
sub
nop
insl
cmpsb
add
mov
xchg
jno
mov
rorl
and
shr
aad
ret
fdivrs
andl
aas
xchg
fstps
xchg
data16
das
sbb
int3
call
dec
xor
fucomi
adc
lock
xor
and
ss
xchg
cs
adc
shl
add
mov
mov
out
pop
cmpsb
sbb
fisubrl
out
push
dec
test
mov
adc
cmpsl
push
test
out
leave
push
xchg
cwtl
aaa
pop
movsl
mov
sub
mov
aas
mov
jle
out
dec
cmp
mov
jg
add
jbe
add
mov
xor
call
shl
sbb
out
int
and
out
enter
dec
push
or
jp
insb
test
ret
inc
pop
jl
popa
into
repnz
push
gs
in
push
sbb
dec
subl
pop
mov
idivb
mov
cmpsb
and
mov
insb
fs
and
hlt
pop
dec
pop
insl
mov
cmpsb
cld
and
pop
push
mov
jle
xor
mov
jg
sti
xchg
mov
out
push
aas
ret
cmp
popf
jnp
addl
sahf
fisubl
mov
lahf
loope
cli
or
adc
jno
push
mul
ret
push
sub
dec
negl
stos
lcall
and
xchg
aaa
arpl
xchg
mov
outsb
cmpsb
xchg
roll
mov
adc
stos
aas
out
loopne
out
sbb
lods
mov
popa
push
call
xchg
ret
or
push
pop
cmp
popa
fcmovnu
pop
mov
in
adc
cmp
push
cmp
push
arpl
add
cwtl
xchg
lea
push
or
shll
mov
lahf
mov
push
lea
stos
lcall
or
loope
adc
jo
mov
push
mov
mov
imul
das
cli
fstpt
aam
pop
das
inc
pop
cmp
mov
pop
dec
shrl
inc
push
mov
test
pushf
cmpsb
loop
and
adc
jo
insb
test
push
mov
inc
or
icebp
popf
jl
mov
fcompl
mov
int
movsl
sub
ret
fidivl
jo
mov
repz
jo
insl
std
movsl
push
jne
andb
or
les
sahf
call
adc
imul
push
dec
iret
xchg
push
jecxz
lock
lret
mov
aas
add
sar
lock
test
fs
inc
repnz
std
ljmp
std
jge
mov
into
push
jecxz
repnz
or
or
clc
mov
push
cltd
lods
fildll
and
push
int3
xchg
enter
sub
insb
scas
outsl
movsb
mov
xchg
cmc
xor
mov
push
mov
loop
cmp
inc
cmp
repnz
mov
mov
sti
xchg
push
xchg
pop
jns
mov
mov
clc
aaa
js
jbe
repz
fisubrs
int
lahf
frstor
push
adc
das
pop
jne
scas
add
repz
lods
clc
push
xchg
shlb
imul
pusha
inc
in
and
je
mov
adc
insb
sbbl
pop
ljmp
mov
push
push
xor
pop
insb
inc
inc
lds
popa
outsb
leave
mov
mov
notb
popf
movsb
push
adcb
popa
or
xchg
lods
xor
sbb
lods
repz
dec
adc
push
stos
or
push
or
pop
aam
lods
fs
sub
daa
cmc
mov
mov
call
cmp
adc
push
sarl
or
insl
stos
dec
aad
pand
dec
xor
ret
mov
test
aas
push
xor
jg
hlt
add
in
dec
lahf
mov
shrb
test
pop
leave
lret
sbb
in
cs
cmp
sbbb
ljmp
push
ret
mov
jmp
sbb
scas
inc
jg
inc
test
jg
lods
xor
dec
cwtl
mov
and
push
add
mov
pop
inc
jbe
cmp
fwait
rcrb
jg
mov
mov
ja
outsb
cmp
out
push
xor
jbe
pop
icebp
mov
and
sbb
ja
sub
loope
add
sahf
sbb
mov
dec
andl
adc
adc
push
inc
jb,pt
or
jle
inc
pmaxsw
movsb
xchg
or
repz
and
pop
fisubs
imul
push
mov
es
lret
icebp
xchg
dec
pop
subb
sub
enter
push
lcall
out
xchg
sbb
leave
mov
mov
out
adcb
loop
xchg
scas
pop
call
push
or
out
sbb
inc
stc
faddl
push
cs
add
fmulp
rcll
adc
jmp
xchg
dec
outsb
icebp
mov
fiaddl
fsub
sub
ja
push
subb
stos
cltd
je
lahf
aad
fisttps
mov
data16
inc
iret
jecxz
lock
iret
dec
mov
lods
cmp
push
adc
xchg
sbb
aad
dec
sbbb
outsb
frstor
out
sub
dec
mov
aas
mov
dec
cmp
aad
lret
fldl
cmp
mov
sahf
jp
pop
fdivs
pop
iret
jle
inc
orb
rcll
ljmp
cmp
mov
jo
cli
sbb
in
pop
cmp
add
addl
inc
cmp
push
push
fwait
clc
les
imul
bound
into
mov
movb
or
into
sub
and
jecxz
aas
dec
xchg
or
rclb
das
lods
cmp
pushf
dec
mov
mov
cmp
cld
xchg
or
lret
stos
fs
lods
mov
ja
ljmp
mov
testl
add
cmp
jge
loope
in
iret
inc
add
inc
sbb
cmp
lods
push
push
jg
stc
fisubrs
clc
cmp
lret
push
and
out
add
roll
loope
xchg
xor
je
pop
lods
movsb
lock
mov
fistps
mov
pop
cmp
fdivrp
scas
aad
xlat
cs
mov
aam
cli
inc
sbb
xor
fwait
jne
lea
inc
jns
push
scas
lock
sahf
inc
dec
stos
xor
pusha
mov
bound
pushf
clc
and
push
mov
ljmp
in
pop
orl
gs
fiaddl
cmc
std
jnp
jbe
push
sbb
sti
imul
jno
inc
add
lret
repnz
notb
rclb
jg
xchg
and
pop
push
push
stc
jbe
mov
push
aam
popf
notl
call
ja
les
mov
jmp
jnp
push
ret
sbb
lds
pusha
out
push
das
shlb
cmp
and
les
and
div
idiv
fcomi
dec
fs
bswap
test
aad
aam
fs
pop
pop
or
lret
out
fwait
addr16
xor
movsb
mov
dec
faddl
jb
pop
dec
cli
lods
decb
out
das
rcrl
pop
and
dec
pop
mov
clc
call
aaa
out
dec
lret
sti
int3
push
xor
stc
shrb
fbstp
jb
inc
cmp
and
movsb
or
imul
aaa
push
mov
fisttpll
fsubl
aas
push
incb
mov
nop
xchg
out
out
stos
push
push
gs
data16
shrl
mov
pop
xchg
pop
fwait
sub
mov
mov
stos
push
pop
pushf
scas
pop
clc
xor
cwtl
test
std
or
arpl
sub
xchg
sub
test
pop
lds
mov
jp
std
xchg
into
cli
lcall
jbe
sbb
scas
outsb
sbb
aaa
or
cmc
xor
pop
add
jmp
enter
fistps
xor
in
and
sbb
enter
dec
jp
mov
out
daa
inc
popf
es
leave
icebp
mov
adc
xor
rol
push
jecxz
sti
dec
jnp
add
in
fs
cmp
sar
jecxz
xor
push
movsl
sub
arpl
cmp
add
mov
push
sub
int
dec
jae
pop
enter
sub
sbb
lds
push
fiaddl
fwait
pop
xlat
and
push
rorb
sub
lcall
fcom
or
loopne
pushf
mov
addb
test
mov
xchg
jl
aad
addb
mull
adc
les
aas
adc
sbb
add
sarb
test
cli
repnz
dec
lret
cmpsl
dec
push
inc
or
mov
scas
mov
gs
mov
xor
pop
ja
jle
cmp
cmpb
std
mov
cmp
insb
in
repz
mov
sub
mov
xor
xor
mov
arpl
repz
pop
cs
adc
push
sub
data16
mov
cmp
push
mov
imul
inc
mov
adc
cli
cmp
add
sbb
stos
xchg
add
pop
inc
inc
push
xorb
gs
dec
jnp
sub
rcl
scas
mov
sub
mov
pop
xlat
push
lcall
cld
aad
popf
mov
pop
mov
out
mov
cmp
xor
mov
lods
testb
into
decl
push
lock
pusha
fwait
sub
jg
pop
repz
xchg
jl
js
xor
jle
dec
dec
sbb
adc
je
dec
in
jne
jecxz
jo
call
cmp
inc
insl
push
aaa
xchg
add
ss
fs
stos
dec
xchg
int3
mov
cmpsl
xor
loopne
pop
pop
fsts
outsb
cmp
mov
icebp
cmc
sbbl
lods
mov
out
movsb
fdivrs
add
pushl
push
fwait
stc
adc
and
or
lret
lods
sub
push
sti
sbb
ljmp
sub
outsl
mov
icebp
stc
test
mov
jle
or
dec
dec
sbbl
or
and
lods
insb
or
xchg
add
mov
fwait
push
pop
or
and
aas
lock
insl
push
int3
out
leave
scas
cmp
cli
and
xchg
inc
pop
or
movsb
sbb
jae
and
in
add
jg
cmp
jno
add
xchg
ds
mov
cwtl
jecxz
iret
iret
jl
lock
mov
sbb
test
inc
xchg
push
mov
xor
repz
ret
clc
aad
jp
dec
or
mov
outsl
jns
test
sub
out
lcall
jbe
mov
mov
fistps
xlat
jno
jge
push
test
enter
xor
push
mov
cmpsb
int3
xlat
push
lret
int3
pop
pusha
leave
inc
push
lods
sub
jecxz
add
fcmovnb
cmp
pop
jg
stc
pop
pusha
push
jo
rcll
mov
subl
icebp
mov
loop
sub
in
divps
dec
sub
jge
pop
mov
cmpsl
or
shl
lock
sbb
jge
fadds
pop
xor
jle
gs
imul
mov
adc
dec
clc
cltd
loop
ret
ljmp
loopne
or
lahf
leave
mov
cld
push
xor
push
mov
lcall
pusha
pop
mov
sub
call
fbstp
sbb
mov
ljmp
loope
add
bound
push
push
adc
popf
pusha
int
xchg
mov
mov
or
adcl
lods
pop
shll
jmp
jge
pop
divb
inc
pop
ret
je
cwtl
test
or
mov
movsl
push
jne
inc
xor
add
pop
jecxz
mov
outsb
aas
cltd
jb
mov
xor
xchg
in
mov
ljmp
push
fsts
lods
roll
shr
mov
pop
jl
movsb
fimull
fldenv
push
fsubs
mov
xchg
outsb
push
mov
ds
dec
cmp
jb
in
or
inc
jo
xor
fisubrs
out
lods
pop
sti
pop
xchg
ja
push
dec
in
cli
or
popa
push
fbld
dec
sub
pop
sub
cs
fs
sbb
mov
cld
movsb
fistps
fwait
popf
outsl
cmp
mov
inc
repnz
mov
int3
adc
cmp
mov
aaa
jo
mov
sub
xchg
push
pop
adc
ret
xchg
sbb
mov
cmpsl
mov
and
and
cmp
jno
in
adc
jmp
cld
sbb
sarl
and
loop
loop,pt
popa
loopne
sub
cs
xor
cmpsl
rcrb
jmp
in
jp
mov
rol
adc
mov
mov
ja
pop
cmpsb
adc
push
and
adc
repnz
orb
cmp
inc
mov
pop
cmp
jne,pt
and
adc
and
dec
pop
test
imul
stos
rclb
repz
rclb
push
adc
dec
movsl
cmpsl
subl
cmc
sahf
xchg
test
roll
sub
mov
movb
xchg
lahf
sbb
lds
sub
in
das
test
popf
lret
mov
mov
filds
aam
cmp
cltd
push
loop
test
loopne
ret
int
insl
push
xor
push
push
inc
mov
fists
imul
mov
aad
jae
sub
insb
dec
push
push
pop
jg
mov
aam
scas
subl
push
ljmp
insb
jge
addb
shl
mov
push
movnti
fwait
in
bound
mov
xchg
lcall
bound
push
sub
jp
popf
mov
rorl
add
fimull
int3
repnz
dec
or
mov
jmp
cwtl
mov
lcall
pusha
add
xchg
push
pop
and
mov
cmp
mov
mov
imul
xor
inc
aad
sub
js
xchg
data16
mov
lds
out
mov
cmp
jno
push
push
cmp
inc
nop
leave
jmp
push
xor
xchg
xchg
out
lods
jbe
sarb
mov
xchg
sti
les
out
test
roll
in
repnz
aad
jecxz
inc
test
or
mov
insl
mov
xchg
xchg
xor
or
mov
fistps
inc
lds
push
cltd
pop
or
sub
enter
sbb
into
cmp
sahf
mov
clc
ss
cli
pop
fimuls
push
test
and
data16
idivb
mov
sahf
pop
fdivl
ret
push
imul
mov
cs
das
subb
sbb
mov
sub
adc
test
mov
fsubs
pop
into
das
mov
sub
cmp
int
xor
and
cltd
inc
xchg
xchg
cwtl
xorb
loop
fidivs
clc
push
jne
in
pop
sar
pop
push
out
push
and
sbb
hlt
js
jnp
cmp
shlb
addr16
or
jae
pushf
xchg
leave
ficomps
rcll
jmp
jae
mov
push
mov
jbe
jbe
push
cmp
inc
inc
aad
fldt
pop
iret
inc
or
jbe
pusha
cmp
pop
pop
cmp
pushf
and
js
test
je
clc
out
iret
cltd
mov
mov
mov
pushf
pop
out
cmpsb
inc
mov
icebp
movsb
dec
clc
in
inc
cld
ja
shll
dec
xor
jle
jne
in
stos
test
lret
dec
movsl
rep
popf
je
je
outsl
movb
leave
in
mov
sbb
ret
mov
cli
cld
push
jge
repz
mov
mov
int3
stos
mov
popf
mov
fs
cli
lds
push
bound
in
jmp
push
pop
cs
test
lahf
mov
add
and
lods
loopne
mov
adc
mov
fstpt
mov
xlat
loop
lods
mov
inc
outsb
pop
xor
push
inc
dec
push
and
add
xor
in
push
push
pusha
pop
adc
pop
mov
lds
cmp
sbb
mov
out
test
cmp
ja
dec
xchg
jmp
jecxz
int
sub
das
mov
push
lahf
jmp
mov
pop
xchg
rcrb
inc
cmp
idiv
stos
mov
and
jnp
orl
adc
dec
adc
jo
jno
inc
or
mov
aam
mov
mov
or
xchg
roll
subb
jnp
movsb
out
movsb
xchg
fwait
and
mov
mov
dec
adc
sub
or
es
cmpsb
mov
jno
or
xlat
les
iret
jo
mov
xorl
aas
movsl
test
int
imul
xor
pop
shl
mov
push
negb
lds
dec
or
pushf
xchg
subb
sti
ds
loope
sub
aad
icebp
xchg
test
movsl
sarl
jle
pop
repnz
or
out
pop
cltd
add
push
sub
dec
push
sub
shll
cmp
shll
lds
or
js
xor
in
outsl
lea
imul
cwtl
mov
mov
daa
rcl
ljmp
or
xchg
aas
cmpsb
xlat
dec
xor
pop
test
stos
rcl
mov
or
fistpl
mov
jo
push
call
cmpsb
stc
inc
stc
out
sub
add
push
adcb
jecxz
dec
int3
mov
pop
not
rcrb
pusha
rcrb
flds
iret
xor
mov
popf
nop
fnstenv
xor
adc
cwtl
pop
mov
nop
pop
filds
mov
push
bound
fmull
xchg
pop
in
outsb
dec
adc
adc
js
jno
jecxz
in
subl
mov
push
push
movl
repz
fwait
ret
xchg
aaa
or
push
lcall
icebp
shll
dec
push
out
bound
jnp
xlat
dec
fidivrs
test
pop
lea
ss
or
loop
lea
push
jo
fsubrl
outsb
in
das
lods
stos
cmpl
dec
out
insl
adc
and
data16
cmp
cmpsl
stos
and
sbb
and
je
push
imulb
or
cmp
lar
mov
dec
daa
dec
test
mov
mov
add
data16
stos
push
movsl
inc
push
mov
sbb
imul
push
dec
pop
rcrb
outsl
jge
loopne
or
loop
push
setne
push
lock
mov
mov
fildl
aaa
jmp
fmull
adc
or
cmp
aas
fidivs
jns
fldl
filds
scas
call
aaa
xchg
imul
in
push
lcall
mov
pop
push
sbb
mov
addb
pop
out
and
ret
cmp
out
push
adc
cld
adc
stc
pop
adc
cmp
outsl
roll
mov
arpl
xor
imul
lret
or
xchg
repnz
popf
fwait
sbb
or
and
mull
shl
shlb
lods
ret
iret
or
dec
movsl
test
in
sbb
pop
mov
cmp
ror
add
inc
jp
nop
adc
push
mov
push
mov
shlb
sub
ret
enter
xchg
jge
imul
sub
push
xchg
cmp
loope
fimuls
dec
pop
push
push
add
fnsave
dec
in
pop
cmc
into
aad
pop
dec
add
xchg
and
or
pop
lahf
add
js
loop
mov
inc
adc
jge
aas
adc
xor
jmp
xchg
mov
in
xchg
inc
ret
pop
dec
out
sub
out
aaa
out
mov
pushf
xchg
fldl
xchg
std
insb
sub
or
loopne
lea
cmp
shl
ja
mov
int
push
loop
sub
jb
rol
gs
sub
mov
xchg
xchg
push
dec
fcmovnu
mov
iret
push
inc
mov
sti
cmp
push
daa
cli
adcl
hlt
xchg
cld
in
fs
adc
daa
test
pop
arpl
mov
xchg
sub
dec
and
dec
adc
sahf
in
xor
push
xor
jle
mov
cmc
ret
mov
jecxz
lahf
mov
repz
sub
cmpl
lods
imul
outsl
adcl
or
mov
mov
mov
icebp
int
inc
roll
push
jge
mov
jne
adc
sbb
mov
jl
inc
mov
in
dec
add
jp
nop
or
or
lcall
test
hlt
mov
xchg
rorl
inc
adc
mov
jne
cmpsb
js
sbb
sbb
dec
pushf
les
sbb
in
mov
push
mov
add
adc
pushf
popf
xor
outsb
test
lret
cld
pop
sub
adc
adc
adc
loopne
mov
or
mov
fst
adc
aad
jmp
ds
mov
jne
cmp
daa
pusha
mov
mov
scas
daa
fistpl
sbb
sub
jae
mov
xor
test
fisubrl
xor
inc
mov
pop
insb
cmp
movsb
jno
or
nop
call
sbb
xlat
rcrb
mov
mov
inc
bound
cwtl
pop
xchg
mov
cli
lds
mov
add
xor
or
xor
push
inc
sbb
xlat
pushf
sub
push
stos
jns
imul
add
sub
pop
int3
rclb
sar
xor
dec
dec
movsl
loop
mov
std
jbe
jbe
rclb
shlb
pushf
shl
inc
mov
mov
test
scas
push
inc
int
es
fstpl
je
loope
pop
inc
test
push
aam
pop
xchg
cmpsl
jns
jns
sbb
mov
std
xchg
push
lret
fnstcw
std
wbinvd
out
cmp
test
hlt
xchg
aad
jbe
rep
pop
cmp
jp
inc
fdivr
hlt
adc
mov
mov
scas
outsb
aam
out
sbb
add
lret
rorl
jbe
dec
mov
cmp
mov
xor
jae
jg
in
push
sub
dec
pop
ret
cwtl
rcrb
mov
add
or
sbb
sbb
adc
pop
xor
jmp
dec
leave
add
xchg
cmc
inc
cmc
sub
inc
cmp
xchg
out
ja
add
adc
mov
mov
jo
aad
loopne
test
sbb
pop
mov
jge
insb
cmp
cmp
fiadds
or
xor
cltd
cmp
jns
int3
loop,pn
in
rcll
jo
pusha
inc
push
cmpsb
fstps
sub
jns
das
vpmaxsw
in
cmp
call
inc
sbb
daa
andb
inc
push
cs
fcomps
jge
cmp
xchg
xchg
test
out
lret
movsl
xchg
push
push
ret
mov
inc
arpl
add
dec
filds
cmpsl
cmp
push
sub
push
jno
cwtl
je
add
fdivrl
jne
push
sub
pusha
stc
push
ret
push
fs
movsb
sub
push
jge
call
pop
inc
and
push
flds
sub
or
push
jl
cmp
jo
ficompl
jae
icebp
leave
sub
lock
jno
andb
movl
mov
negb
or
sbb
stc
nop
outsl
xor
sbb
int
aad
cmc
adc
inc
xchg
jae
jge
insl
sti
outsb
jle
mov
iret
insl
ltr
push
or
lds
sub
cmc
xlat
fs
sub
mov
stos
andl
iret
pop
mov
push
mov
popf
cmp
xchg
test
add
fidivs
out
lds
fwait
jl
cltd
lret
cmpsl
jo
adc
sub
jg
inc
daa
out
pop
push
jb
cmp
mov
fnstenv
neg
es
aaa
jns
movsl
ret
out
fstps
jnp
sub
stc
std
push
sbb
or
daa
shl
mov
mov
fldln2
lcall
mov
mov
add
mov
xor
test
xlat
cli
inc
add
lret
or
imul
popf
orb
or
js
subb
mov
mov
sbb
xchg
or
ret
arpl
mov
sub
dec
imul
adc
jne
xor
mov
xchg
orb
out
sbb
iret
push
adc
sbb
hlt
adc
mov
xchg
mov
aaa
fdivp
lea
xchg
sub
cmpps
add
cmp
fists
push
inc
push
sub
aad
repnz
lcall
insl
fdivr
jno
add
cs
icebp
dec
repnz
and
inc
xchg
inc
pop
xor
flds
aam
fildl
aaa
inc
cmp
push
icebp
bnd
mov
insb
lea
hlt
out
fwait
inc
mov
and
inc
cmpb
adc
cwtl
shlb
shr
inc
mov
or
sub
mov
sub
leave
popl
pop
jns
cmpsl
xor
inc
enter
add
pop
pop
sbb
les
mov
add
mov
mov
aaa
js
je
call
pop
outsb
and
movb
jnp
addb
xchg
sbb
and
stos
jb
std
push
divb
adc
xor
cmp
mov
daa
xlat
lods
icebp
sub
pop
xchg
mov
jg
lret
std
mov
and
sti
xor
mov
stos
lock
out
inc
mov
fnop
inc
int3
sbb
dec
shlw
xor
into
ljmp
adc
fisttpll
add
mov
inc
xchg
aaa
sahf
pusha
jp
std
sti
cld
adc
sbb
pop
sbb
repz
and
xchg
pop
imull
hlt
dec
xchg
ss
inc
pop
shl
fistps
push
outsb
add
in
outsl
cs
xchg
insb
sub
fwait
sub
xchg
xor
mov
inc
inc
mov
mov
jne
xchg
stos
mov
adc
arpl
inc
sub
scas
jnp
aas
and
add
stc
pop
mov
jge
test
daa
dec
pop
insl
movsl
int
inc
fistpl
pop
mov
in
fists
push
or
sti
scas
mov
sub
pop
icebp
push
into
movsb
cmp
xchg
or
mov
sbb
sbb
scas
clc
iret
sbb
pop
adc
gs
fcmovnbe
inc
testb
into
icebp
sbb
dec
mov
repz
jp
inc
xchg
popa
test
inc
shlb
xor
out
xchg
lahf
dec
or
fs
insl
mov
out
mov
test
in
lods
sbb
lret
inc
pop
push
pop
in
cltd
cmpsl
pop
xor
sbb
sbb
out
in
sbb
faddp
or
sti
call
mov
mov
cmp
test
mov
pop
fninit
sar
cmp
and
cmpsl
dec
test
lods
sti
sub
cmovge
add
pop
or
mov
xor
mov
jbe
cmpsl
xor
fs
fmul
xor
push
test
or
adc
xor
mov
lahf
rclb
mov
fidivrl
test
xor
fsubrs
jae
out
pop
xchg
clc
cmp
cltd
lods
fstp
imul
jo
scas
outsb
jle
lahf
pop
ret
mov
movb
dec
mov
xor
jge
out
int3
mov
dec
fistpll
and
rclb
mov
rcll
xor
out
movsl
push
mov
mov
nop
cmp
sbb
out
lea
push
and
popa
push
testl
lods
push
and
test
rorb
fistl
cli
xlat
mov
jmp
mov
mov
mov
mov
enter
mov
fwait
ret
adc
adc
lahf
mov
cmp
aam
in
mov
sub
mov
pop
fistps
xchg
icebp
push
rclb
subl
in
das
add
loope
or
jnp
rcll
xchg
xchg
xor
adc
outsl
ret
sbb
loope
das
lahf
das
cmp
xchg
fldcw
dec
jp
stos
pusha
push
test
adcl
jo
addr16
jb
fbld
cmpsl
mov
ficompl
loopne
mov
data16
std
arpl
js
into
sub
sti
jle
cmp
repz
fs
inc
push
mov
addl
dec
mov
fcomi
js
sbb
setp
js
in
iret
lcall
aam
jb
pop
hlt
xlat
stc
jecxz
mov
addr16
repnz
and
dec
fsub
pop
adc
or
clc
mov
movhps
push
popa
ljmp
pop
scas
stos
in
notl
mov
sbb
dec
cld
inc
jns
xchg
sbb
dec
ds
out
mov
sar
mov
inc
jp
mov
jo
aam
out
sbb
and
xor
sahf
inc
sbb
loop
jns
movsb
gs
adc
lds
xchg
mov
or
adc
xor
pop
pusha
cmpb
rorl
and
fldt
and
sarl
push
bound
cmc
shrl
ds
out
rorb
push
cmpsl
sti
and
test
jbe
stc
and
sub
in
sbb
shll
imulb
fisubrl
mov
jge
into
or
andl
call
shlb
dec
mov
inc
test
pusha
dec
popf
push
or
add
js
fdivp
mov
ljmp
jo
mov
ja
push
pop
pop
ret
adc
ss
xor
fucomip
hlt
mov
mov
and
test
jbe
mov
ja
cmp
mov
mov
cli
add
loop
outsl
out
stos
and
and
jae
mov
sbb
dec
adc
sbb
pop
mov
ret
stc
aas
aas
inc
sbb
push
or
mov
or
lcall
out
sub
adc
fcoms
repz
sub
pop
pushf
cld
je
lret
mov
rcll
cmpsl
mov
es
add
ret
rorl
data16
jl
cmpsl
jb
xchg
sbb
xchg
sti
bound
filds
pusha
repnz
push
mov
jecxz
push
insl
pushf
sbb
dec
push
mov
and
fcoml
lret
out
pop
xor
in
jno
scas
sbb
mov
aas
push
imul
lret
ret
pop
aam
cltd
iret
jae
out
mov
leave
xchg
pop
adc
jecxz
aas
cmpl
jle
mov
into
mov
dec
lock
loop
shlb
lret
cmp
push
or
cmp
popf
sbb
sti
rcll
or
add
mov
jnp
mov
test
out
mov
mov
imul
pusha
inc
into
sbb
xchg
cmc
jb
lret
or
leave
push
sub
mov
push
sub
cmpsb
negb
insb
cmp
sub
pop
fcoms
inc
ds
cli
push
cmp
scas
pop
jbe
mov
mov
push
mull
scas
sbb
pop
pushf
mov
mov
sbb
arpl
dec
sbb
mov
fisubl
jmp
cmpsl
movsb
int
pop
sub
add
pop
enter
adc
cmp
pop
mov
jae
cmpsb
out
jo
jmp
or
jb
not
out
imul
dec
es
ljmp
imull
mov
out
repz
jo
jae
scas
pushf
cmp
xorl
cld
cs
dec
andb
dec
jbe
jns
je
inc
xor
inc
popf
inc
ljmp
cmp
jne
out
pop
or
mov
add
sbb
and
test
adc
push
add
mov
pop
test
cwtl
mov
add
and
inc
jle
insb
fldl2e
cmp
adc
xor
xor
inc
push
scas
sub
add
fldcw
test
xor
leave
loopne
mov
insb
pushf
icebp
dec
push
mov
add
push
lock
sub
lock
repz
loopne
cmp
lds
sub
mov
lcall
lds
stc
outsb
add
cltd
xchg
add
mov
push
and
pusha
jbe
addr16
adc
jno
push
mov
push
or
fldcw
lock
add
cs
adc
mov
push
outsl
xor
inc
das
sub
xchg
sarb
aaa
test
rclb
in
mov
pop
cmpsl
mov
mov
pop
and
or
inc
sub
pop
leave
lea
pop
inc
mov
cli
mov
mov
push
jb
fs
push
es
stc
xor
jo
mov
bound
je
inc
outsl
popf
or
adc
inc
lret
push
cs
js
xchg
cmpsb
repnz
mov
stc
sub
dec
jg
aam
cmc
loop
insb
ja
stc
es
fsubs
shrl
add
xor
lret
arpl
mov
loop
sbbb
arpl
out
cli
xor
std
pop
fistpll
push
test
insl
rcrb
mov
in
inc
xchg
and
insl
sub
sahf
fcmovne
call
cmpsb
pop
mov
scas
addb
inc
aam
pop
pop
push
ret
push
orb
call
cmc
jb
push
adc
int3
jne
sbb
jmp
or
lds
dec
jne
addr16
call
or
out
fbld
pop
jnp
mov
sbb
push
scas
lahf
sahf
scas
sub
push
or
push
jmp
in
add
jg
jmp
xor
cs
loop
aaa
cwtl
lea
fsubrl
sbb
roll
clc
inc
pop
push
mov
je
lahf
lds
adc
es
xor
jecxz
adc
rorl
mov
jp
push
and
jnp
inc
mov
mov
pop
sub
xor
fs
push
xor
movsl
adc
int
mov
xlat
rclb
add
test
loopne
cmpsl
mov
pop
idivl
aam
or
inc
pushl
sbb
jp
outsl
push
fs
dec
int
ds
cmp
and
pop
std
cli
ret
mov
loope
mov
cmp
push
sub
roll
sub
loopne
mov
insl
lea
les
mov
popf
nop
mov
xchg
test
jl
push
mov
outsb
jl
lahf
shlb
jecxz
add
xchg
xor
mov
push
jno
loop
call
and
sbb
daa
mov
sub
jnp
es
jle
scas
mov
jbe
rolb
je
pop
in
adc
pop
adc
dec
inc
pop
daa
jl
ja
repz
mov
addr16
xor
cli
test
xchg
sbb
sbb
call
scas
scas
push
add
cmpsb
popf
repnz
jns
cmp
inc
cwtl
fs
int
pusha
jge
popf
int3
jo
dec
out
mov
xchg
lea
sarb
lcall
or
xor
jp
mov
enter
and
lock
lea
mov
lret
inc
mov
std
sbb
shrl
ret
shl
jbe
outsl
mov
mov
scas
dec
add
shlb
jge
in
scas
into
xchg
cmp
pop
xchg
aas
cmc
in
fucomp
movsl
add
into
cmc
add
jg
das
push
dec
mov
rclb
inc
jnp
test
aaa
ljmp
mov
fmull
mov
dec
push
xchg
pusha
inc
inc
andb
push
mov
daa
stos
cmp
mov
or
movsb
lret
pop
mov
scas
shl
and
mov
ret
inc
push
dec
les
mov
fsts
cmpsl
sub
add
pop
or
pop
in
or
aad
jb
loop
daa
cmpsb
nop
jmp
mov
jo
andb
mov
test
pushl
icebp
insb
outsb
push
pushf
adc
in
inc
iret
xchg
sbb
movsl
and
jno
mov
xchg
mov
xor
add
adc
adc
sub
or
or
inc
jnp
xchg
pop
loop
mov
mov
andb
popa
pop
iret
xor
in
adc
ret
aas
aam
dec
rcr
jbe
push
sbb
add
mov
pop
xor
addr16
xor
jno
loop
xchg
push
nop
jne
mov
mov
maxps
lret
xchg
imul
clc
pushf
push
sarb
jnp
icebp
icebp
push
or
mov
dec
dec
enter
imul
or
scas
testb
xchg
ljmp
dec
sub
pop
adc
repz
in
lcall
inc
xor
pop
loopne
pusha
pop
mov
fxch
sbb
cld
mov
sbb
ja
xorb
or
adc
lahf
outsl
ffreep
js
cmp
jb
cmp
lret
push
in
outsl
mov
nop
adc
std
pop
insb
in
insb
sbb
and
jmp
imulb
inc
mov
pusha
ja
clc
ljmp
mov
mov
dec
ds
or
mov
addr16
mov
sar
mov
inc
dec
add
shll
test
out
add
inc
or
popa
inc
insb
or
inc
sbb
mov
jmp
idivl
add
pop
and
cmp
subb
jge
jne
sub
or
in
push
cmc
mov
scas
cmp
ret
or
ror
or
idivl
mov
adc
lods
sub
jnp
sbb
enter
orl
lock
push
dec
mov
sub
or
outsb
pop
in
out
call
fsubrl
in
cmp
pushf
push
push
pop
fwait
popa
mov
imul
adcl
into
or
and
xor
push
jo
loope
cltd
push
insl
push
clc
fnstsw
dec
xchg
ja
add
in
mov
xor
push
jp
sbb
lahf
bound
test
sub
addr16
pop
fldcw
jle
xchg
mov
cmpsl
shrb
lcall
ja
inc
inc
mov
xor
mov
lock
push
add
mul
stc
leave
enter
cs
push
pop
adc
xor
push
lea
inc
leave
roll
mov
lds
mov
sub
stos
lret
pusha
pop
cmp
ds
jl
jle
daa
sbb
xor
mov
in
data16
pop
and
mov
fs
add
roll
sarb
sub
sbb
push
jbe
xorl
dec
cld
imul
push
cwtl
pushf
lret
lea
adc
mov
imul
addr16
sbbl
aaa
or
imul
jno
add
sub
mov
movsb
mov
pop
xor
cmc
sbb
dec
add
out
jg
rcr
add
jle,pn
roll
jo
pop
pop
lahf
xchg
push
lea
test
fwait
add
xchg
xchg
pop
aas
dec
xlat
adcb
pop
sub
sub
fucom
xchg
mov
out
sub
iret
push
dec
cld
ds
bound
dec
and
ljmp
push
into
mov
scas
mov
cmp
es
nop
mov
mov
rcrl
pop
mov
lds
sbb
aad
cmp
xlat
cmpb
sub
lods
mov
jno
xchg
mov
mov
mov
cli
and
xchg
sti
idivb
pushw
cmp
push
dec
fildll
adc
push
data16
addr16
bound
addr16
ret
lret
out
sbb
add
lea
int3
cwtl
pop
add
push
mov
idivl
fs
mov
test
inc
push
sbb
jg
push
add
div
pop
push
dec
ja
movsl
repnz
mov
pop
test
dec
inc
mov
scas
out
jns
cmp
outsb
and
enter
add
add
and
repz
nop
repz
aaa
or
out
mov
pop
mov
adc
aaa
sub
push
push
je
clc
mov
cs
mov
xlat
cmp
adc
mov
lahf
loop
popf
test
shrb
lcall
sbb
mov
sub
stc
rorl
sbb
adc
pop
xchg
sub
and
je
xlat
sti
call
fisttpl
out
enter
cmc
addb
sub
scas
cmp
inc
ret
rcll
out
inc
mov
scas
lret
lcall
xor
lret
mov
ja
std
subl
xor
xlat
and
scas
test
test
sbb
hlt
or
mov
push
pop
and
sub
add
int3
daa
repz
push
adc
cmp
int
pop
aam
pop
cs
add
cli
xor
jns
or
insb
inc
add
add
fnstcw
jmp
mov
jno
push
adc
test
loop
mov
in
hlt
popa
mov
in
add
xchg
and
cmp
lret
movsl
adc
xchg
dec
call
dec
inc
cwtl
mov
sub
xor
nop
ret
loop
add
mov
movsb
inc
repnz
clc
or
adc
push
jne
push
or
or
loopne
andb
stos
mov
nop
push
test
rcrb
jl
enter
and
dec
out
repnz
dec
mov
outsb
mov
das
adc
add
popa
adc
mov
stos
sub
sbb
jge
insb
cmp
jmp
repnz
into
in
jbe
sub
pop
mov
adc
pusha
mov
fldt
jmp
lods
dec
out
and
sti
mov
in
repnz
imul
and
dec
push
iret
mov
and
add
mov
xlat
repz
loope
push
mov
scas
mov
mov
dec
sti
jbe
inc
mov
pop
test
out
inc
gs
mov
pop
cltd
scas
loop
push
lret
push
jne
out
dec
inc
dec
mov
insb
jmp
lock
aas
ljmp
xor
in
popf
fcmovb
cmpsb
inc
pop
mov
shlb
dec
xor
mov
adc
sbb
icebp
insb
adc
mov
push
aas
xchg
xchg
repz
aam
mov
mov
push
cld
cli
enter
mov
int3
add
sub
dec
or
ror
arpl
fisubl
sbbb
xchg
xor
or
pop
scas
dec
loopne
cmp
or
jmp
repnz
jae
into
cld
sbb
mov
mov
pop
stos
pop
pop
fs
xchg
and
mov
out
jl
mov
dec
daa
cs
sub
arpl
sti
pop
clc
loopne
sub
lret
sbb
pop
mov
fwait
aad
fisubs
flds
xchg
imul
add
pop
jg
inc
lds
adc
lock
cmp
rcll
cmp
jne
mov
jp,pn
mov
add
stc
sbb
lcall
jmp
std
andl
push
mov
push
sbb
mov
loopne
adc
stos
mov
mov
jns
cltd
mov
xchg
bound
cmc
inc
dec
cmp
inc
std
sub
cmpb
std
pop
mov
xchg
sbb
and
mul
dec
jmp
call
or
xchg
cmp
sub
cmp
push
xchg
lods
jb
mov
pop
lock
in
mov
cmc
jmp
xor
ret
xor
jl
outsl
repnz
sbb
push
dec
stc
mov
add
mov
mov
mov
sbb
adc
jae
into
rorl
xlat
push
jl
or
je
sbb
mov
enter
nop
test
jo
xchg
leave
iret
addr16
ss
stos
jecxz
mov
push
ljmp
xor
in
into
ljmp
or
bound
call
fsts
jl
mulb
stc
jl
adc
xchg
fistl
xchg
mov
popf
lds
stc
movsl
add
adc
ret
inc
push
push
ljmp
call
rcr
cmpsb
pushf
xchg
xor
mov
pop
mov
xchg
mov
arpl
xchg
inc
pop
in
ljmp
notl
inc
aad
xchg
mov
adc
out
push
mov
jb
rorl
js
jno
jecxz
inc
out
mov
sbb
cmp
mov
add
nop
fidivrs
sahf
incb
sub
inc
movsl
pop
loopne
jne
sub
dec
inc
jae
and
push
jns
jmp
mov
je
mov
mov
loope
xchg
pop
pop
dec
jne
mov
call
sub
pop
cmpsb
into
icebp
data16
movsl
fldl
push
push
out
mov
inc
orb
mov
dec
pop
cmc
in
mov
sub
std
test
mov
adc
out
out
inc
jno
scas
fs
inc
pop
cli
sub
push
xor
cld
into
jg
outsb
jbe
setg
and
loope
shl
sahf
mov
testb
inc
fists
push
cmp
xor
pop
int3
je
add
roll
jp
mov
icebp
xor
xlat
xor
sub
test
inc
ror
sbb
loop
jnp
pop
andb
sti
lock
fsubrl
fcomps
pop
ljmp
push
sahf
outsb
cli
cmpsb
xchg
shrb
xor
fildll
lea
inc
les
in
cltd
adc
dec
scas
arpl
fidivs
mov
mov
push
enter
pusha
or
or
es
js
xchg
lahf
out
inc
mov
bound
xor
xor
addr16
arpl
pop
sarb
test
clc
mov
mov
dec
pop
mov
outsb
pusha
insb
fsubl
xor
pop
jo
fists
mov
xor
incb
mov
push
dec
inc
arpl
mov
push
mov
subb
int3
and
sub
xchg
dec
jle
iret
int3
xor
faddl
sub
mov
dec
sbb
lock
icebp
add
lahf
xor
adc
inc
push
or
sub
cmp
out
rolb
cwtl
mov
xor
in
and
fistl
cmp
cmpsb
xlat
mov
or
push
pop
insl
insb
sub
jle
jbe
mov
ret
mov
mov
sbb
pop
xchg
mov
mov
subb
and
dec
xor
xor
add
mov
mov
out
xchg
call
stc
fs
push
dec
push
mov
sub
lcall
loopne
lret
dec
stc
outsl
sub
call
add
and
pop
inc
je
adc
xchg
or
pop
sub
cmpsl
enter
in
sbb
bound
mov
xor
in
shlb
mov
arpl
test
push
imul
repz
outsl
and
sahf
imul
xchg
xchg
shr
es
or
out
mov
popf
sarb
or
mov
jge
in
pop
cmp
fcoms
test
fisubs
sub
lea
ret
pop
stc
icebp
cwtl
loopne
add
xchg
negb
lea
idiv
jb
in
repnz
xchg
mov
enter
rcll
ficoml
xchg
sub
jecxz
adc
xchg
nop
sbb
and
int3
out
in
mov
fistpl
sbb
pop
inc
lcall
sbb
lds
cli
ficoml
mov
push
mov
push
pop
mov
cmp
jmp
dec
mov
xchg
lock
mov
cli
dec
xor
mov
mov
adc
xchg
int
push
pop
shlb
loope
cmpsb
add
adc
jns
mov
sbb
mov
mov
pop
push
leave
or
inc
push
daa
test
cmpsb
mov
out
mov
das
xor
push
xchg
mov
dec
mov
mov
jmp
mov
fistl
test
in
xor
insl
mov
adc
push
sub
ret
add
rcl
sbb
mov
xor
mov
dec
push
call
arpl
jmp
je
flds
and
jns
imulb
ret
mov
sub
fcoms
mov
int
or
stos
aaa
push
dec
xor
pop
jns
decl
clc
dec
ljmp
jg
push
shrl
xchg
or
pop
add
jb
mov
adc
fiadds
inc
stc
lock
push
add
clc
lret
sahf
cld
in
andb
sbb
adc
loopne
ret
and
cmp
mov
xor
xchg
roll
lcall
es
iret
and
and
into
cmp
mov
inc
shrl
cmp
pop
mov
sub
mov
subb
or
pop
cmc
repnz
ret
or
or
adc
pushl
cmp
mov
jbe
adcl
add
lret
mov
mov
and
cwtl
cmp
les
inc
jae
test
movsb
xchg
inc
imul
sub
push
adc
loope
adc
push
outsl
mov
mov
dec
add
pop
jb
jae
cmp
mov
dec
in
ret
ds
clc
mov
mov
or
inc
adc
add
push
pop
cli
lock
stos
sub
rcrb
inc
dec
xor
cld
fucomi
test
dec
ljmp
dec
cmpsb
add
jne
jne
cld
in
xchg
clc
mov
adc
jmp
push
xrelease
sbb
sahf
mov
outsb
adc
leave
outsb
insb
add
sti
add
sbb
xchg
enter
bnd
cli
mov
fwait
pop
inc
rorl
jno
in
stc
scas
xor
mov
mov
sub
adc
nop
jge
cmpsl
in
add
insl
and
pop
cs
dec
or
push
inc
cmpsl
pushf
leavew
test
sbb
jge
movsb
adc
lret
push
cmp
xor
jl
mov
sbbb
and
jecxz
xor
xor
mov
cltd
xor
inc
test
ficomps
add
test
push
icebp
repnz
push
mov
and
lds
mov
inc
mov
xchg
xlat
js
mov
movsl
mov
call
fnstcw
mov
mov
mov
dec
mov
scas
fwait
scas
pop
xlat
paddsb
jo
subb
ror
cwtl
add
loop
pop
out
leave
adc
jmp
in
sub
xchg
mov
mov
cmp
stos
push
push
dec
test
push
lea
push
add
jle
mov
mov
addr16
repnz
pusha
jnp
inc
test
add
mov
int3
repnz
je
adc
mov
bound
fdiv
clc
jmp
cli
pop
dec
arpl
mov
push
jnp
mov
mov
ret
sbb
mov
push
test
les
mov
lods
mov
and
imul
fnstcw
rcr
stc
jb
push
xchg
aam
cmc
adc
add
testb
xchg
es
xchg
shlb
and
sub
cmc
sub
adc
ja
push
faddl
cltd
int
add
test
mov
pop
inc
pusha
mov
push
enter
mov
cmpsl
enter
cli
adc
jp
pushl
inc
stos
adc
sbb
fbstp
leave
lods
cmp
fnsave
das
mov
jbe
mov
xor
and
mov
addr16
pushf
aaa
clc
mov
jbe
mov
pop
cwtl
jb
jb
adc
loop
jbe
lds
add
fstl
sbb
pop
xor
pop
xchg
jo
loop
test
push
hlt
out
data16
pop
lret
imul
cwtl
loop
test
or
or
inc
fs
mov
loopne
xor
mov
pop
mov
xor
sbb
pop
xchg
fcomp
movb
push
pop
pop
xchg
orl
xchg
fadds
jbe
sub
adc
or
inc
enter
cmp
adc
stos
cmp
cltd
ret
negb
and
lock
jno
sbb
and
stc
pop
sbb
xchg
add
inc
lahf
add
push
jecxz
shll
int
xchg
test
jnp
jne
dec
loopne
fsubp
sbb
insl
pop
xor
mov
dec
test
stos
iret
mov
sub
and
nop
push
xchg
cld
pause
stos
jb
sbb
xchg
lods
pop
out
sti
push
xchg
fisttps
dec
jl
push
insb
mov
pop
out
cld
push
xchg
andl
dec
fcmovb
mov
adc
inc
mov
pop
lret
std
push
dec
pop
cwtl
mov
adc
mov
loop
push
in
fnstsw
pop
sbb
loop
push
dec
jl
jno
adc
out
aad
lock
daa
sbbb
sbb
aaa
test
mov
movsl
pop
ret
andl
test
inc
xchg
mov
and
xchg
mov
popa
loope
pop
jp
test
bound
push
mov
xor
inc
rcrb
mov
mov
pop
in
dec
push
jbe
insl
lods
lret
jp
rcll
cld
or
push
add
or
sarl
dec
daa
inc
push
aas
dec
sarl
bound
adc
lcall
aas
sub
dec
cwtl
inc
cwtl
mov
xor
and
insl
lcall
dec
in
insl
into
xchg
xor
add
int
sub
out
shll
pop
in
icebp
adc
or
outsl
fnstenv
adc
in
ds
xchg
pop
pop
sub
sub
pop
daa
inc
push
mov
mov
xchg
or
push
arpl
or
jns
mov
leave
int3
es
lods
lock
test
xor
xor
shrl
sub
mov
std
movsb
adc
push
dec
nop
cmp
cli
adc
dec
sub
add
test
dec
cmp
mov
push
lea
xor
jp
cmp
pop
pop
fnstcw
test
imul
cmp
mov
adc
cmp
and
dec
add
push
jmp
jo
fwait
pushf
pop
push
mov
sbb
jle
cli
sub
jge
push
mov
cmp
shr
out
fcom
xchg
popf
add
push
lea
test
in
fcoms
xor
vcvtsd2si
imul
pop
ja
dec
dec
xchg
or
dec
sbb
jge
lods
adc
popf
in
mov
xchg
mov
popf
lea
cmp
aad
insl
outsl
mov
out
in
leave
data16
and
loopne
adc
sub
fnstenv
mov
jmp
xor
cmpsl
push
dec
mov
inc
and
mov
call
inc
push
inc
lock
rorb
int
scas
xchg
dec
cmc
icebp
push
mov
lods
xchg
insl
xchg
adc
add
ss
xor
mov
adc
sbb
pop
sbb
outsb
pop
mov
scas
ret
dec
outsb
push
mov
lods
neg
cmpsl
xchg
push
mov
aaa
cmp
lahf
out
aas
addb
aam
inc
or
cld
xchg
xchg
inc
pop
lcall
fisttpll
xor
add
dec
and
push
shlb
shrl
dec
push
mov
adc
sar
mov
rolb
adc
mov
push
pushf
das
adc
cmp
outsl
or
add
xor
lods
sahf
negl
pushw
jnp
sbb
mov
xor
inc
ds
ja
cmp
mov
dec
cli
mov
loopne
dec
ja
adc
xchg
cwtl
jle
ds
push
cs
gs
or
ljmp
mov
stc
aad
and
push
lods
xor
push
repnz
adc
popf
xchg
mov
lods
std
shlb
iret
inc
dec
mov
xlat
out
jb
sbb
out
pop
jb
push
cmp
push
jle
xchg
shlb
dec
push
add
ja
scas
subl
dec
jns
xchg
gs
cmp
xchg
push
lds
add
push
mov
xor
sbb
push
in
nop
dec
lock
mov
lds
adc
push
mov
xchg
test
jge
xorb
pop
add
dec
mov
sub
pop
jmp
fdivl
xchg
mov
jnp
mov
mov
adcl
cwtl
pop
add
dec
sti
movsl
mov
lret
mov
imul
sub
add
sub
lds
mov
push
cmpsl
fs
cld
and
mov
ss
mov
jnp
and
xor
jbe
scas
inc
adc
mov
std
mov
mov
lcall
xor
mov
sub
fnstcw
mov
sbb
add
sahf
mov
lods
mov
lahf
shr
inc
fdivl
dec
sub
adc
subl
mov
mov
and
mov
in
pop
fbld
pop
cmp
and
adc
cwtl
inc
pop
incb
cld
sahf
in
iret
mov
mov
les
cmpsl
or
mov
mov
fdivl
jae
fs
sub
add
jnp
push
mov
jge
pop
mov
or
jnp
sahf
lret
mov
addr16
adc
nop
aam
mov
add
dec
mov
and
inc
ret
mov
aad
popf
add
xor
xchg
inc
sbb
xchg
cmp
enter
cmp
mov
je
xlat
lock
sarl
test
mov
cwtl
sub
aad
mov
xchg
xor
inc
divl
mov
push
dec
xlat
push
mov
push
cmp
xchg
inc
movsb
negb
sbbl
inc
lock
sbb
jns
inc
mov
mov
inc
xchg
and
jp
gs
mov
mov
mov
mov
mov
adc
push
bound
cmpsb
repz
jns
mov
dec
lods
cld
jne
shr
sbb
lret
imul
stos
adc
enter
jge
cwtl
push
mov
jg
sub
sbb
fdivs
inc
imul
or
cmpsl
in
jo
mov
or
jbe
fnstenv
enter
movsl
data16
daa
cltd
jae
ds
cmp
hlt
mov
sti
sub
mov
add
test
xor
and
je
in
and
inc
outsl
popf
sbb
int
cmp
lret
je
dec
insl
lea
jbe
fisubrl
fistps
test
lret
jle
out
das
sbb
lret
rolb
pop
aam
jne
out
int
addr16
or
xchg
divb
xlat
in
xor
mov
pushl
add
ret
or
repz
addb
push
dec
pop
std
stos
lea
sub
lret
in
daa
and
adc
mov
sub
jno
dec
fwait
jo
push
mov
inc
out
ljmp
pop
dec
inc
andb
cmpb
out
mov
sub
add
daa
jb
shrl
ficompl
sbbb
push
lock
xchg
adc
stos
insl
test
inc
rcrb
ss
stc
and
scas
shlb
mov
sbb
sub
dec
push
add
int3
cmpsb
push
pop
mov
or
rorl
pop
data16
push
mov
pusha
daa
fstl
hlt
les
lret
xchg
cwtl
push
sbb
pusha
xchg
dec
int
and
out
hlt
xchg
jg
xor
xchg
aas
dec
lahf
ret
jg
and
and
adc
xchg
jecxz
jge
sti
cwtl
out
pop
cmpsl
ljmp
ds
fwait
jae
and
data16
xchg
add
add
xor
mov
int
mov
fadd
mov
and
aas
fs
repnz
outsl
icebp
push
pop
shrb
push
rorl
cwtl
inc
mov
leave
xchg
dec
xor
nop
xor
sahf
gs
aad
push
push
adc
lds
js
push
add
pop
fildll
aas
in
inc
in
pop
mov
cmp
lods
mov
loopne
or
lcall
cmp
sub
xchg
ret
aam
mov
js
push
mov
lret
inc
push
notb
inc
ljmp
dec
inc
cmp
jb
in
and
add
or
cld
gs
mov
and
pop
adc
pushl
sub
lods
in
jbe
sbb
jbe
xor
sub
cmp
lret
fldt
push
sub
jae
movsl
test
sub
decl
cmp
pop
fcomps
sbb
add
jg
adcb
les
imul
dec
bound
push
bound
sub
lret
lods
dec
test
pop
sbb
push
jb
roll
mov
fcmove
sbb
fwait
add
push
div
fistps
mov
add
jle
gs
test
add
ja
rorb
sbb
popf
sbb
filds
bound
push
lock
or
test
js
int
pusha
sub
cmp
pavgw
mov
xchg
mov
or
adc
gs
inc
movl
mov
sbb
cs
cmpsl
xor
rol
rcrl
sub
fsubs
xchg
cmc
jge
lods
cmp
xor
pop
lahf
and
mov
dec
pop
ja
cwtl
imul
xchg
out
pop
xchg
call
push
inc
xchg
xchg
fwait
iret
cmp
add
imul
pusha
insb
dec
push
and
and
pop
push
negl
dec
mov
dec
int
into
in
mov
xor
xchg
fildll
xor
sbb
sbb
fdivl
test
cmp
dec
mov
sbb
int3
jno
sub
hlt
negl
dec
mov
dec
inc
and
test
cmpsb
and
cmp
lods
and
sub
adc
push
push
mov
lcall
push
mov
cld
or
es
cmc
daa
adc
mov
enter
xchg
addb
mov
lds
pop
add
lds
nop
jns
xlat
mov
xchg
scas
into
push
repz
push
sti
inc
jnp
jbe
jge
push
fdivp
lahf
jl
xchg
xlat
push
and
inc
mov
aaa
inc
inc
mov
movsl
sbb
cmp
or
inc
dec
out
dec
xchg
pop
ljmp
dec
mov
pop
aaa
pop
xor
push
sub
lea
or
and
mov
cmp
xor
fbld
mov
test
out
insb
cmp
mov
sahf
nop
loopne
add
add
aam
pop
dec
pusha
xlat
cmp
fs
push
inc
push
or
inc
scas
stos
mov
pop
jbe
and
fwait
mov
or
mov
les
sub
stos
sbb
mov
adc
ja
cmp
and
xor
push
loopne
adc
mov
into
pop
addr16
xor
and
ret
push
xchg
aam
mov
in
imul
inc
mov
or
xor
out
lock
jb
loopne
xchg
test
cmc
pop
adc
scas
out
jns
fs
cmpsl
pop
jo
mov
call
mov
das
mov
xchg
sub
popa
sbb
stos
stos
sub
push
mov
mov
popf
push
repnz
int
sbb
imul
inc
add
mov
out
clc
gs
adc
mov
ret
add
int3
push
je
push
jp
lods
test
xchg
sub
mov
pop
mov
push
dec
jmp
es
adc
add
clc
jge
cltd
mov
dec
cmp
js
stos
sahf
je
stos
pmaxsw
or
adc
jae
push
jno
out
add
jmp
push
fwait
iret
xor
push
imul
push
ret
inc
mov
mov
jg
dec
mov
imul
fldt
sub
bound
jmp
jae
jne
subb
mov
stos
js
aas
imul
fucomp
sub
mov
dec
jae
mov
or
jno
mov
movsb
std
pushf
ficoml
add
sbb
jae
and
mov
cmpsl
cmpsb
aas
push
pop
and
fildll
lods
sub
fidivrs
jbe
add
ss
outsb
pop
fldt
imul
ja
aam
inc
mov
in
jecxz
mov
cli
std
jle
addb
xor
cmp
xlat
xchg
sub
into
mov
ja
fmul
in
ljmp
outsb
add
test
xchg
lods
loope
cs
pusha
sbb
movsb
inc
and
rcr
rcrl
stos
xor
or
mov
jns
aas
or
fwait
adc
or
xchg
aam
mov
pop
and
dec
push
cld
push
lcall
dec
xor
and
frstor
dec
push
jl
stc
push
fcmovne
fbstp
push
push
pop
push
and
mov
add
jb
push
add
test
sti
mov
jg
mov
lock
stos
push
outsb
mov
popa
clc
mov
ret
adc
ror
pusha
outsb
mov
out
ret
mull
in
fnstcw
adc
mov
insl
out
cmpsl
dec
add
jle
inc
scas
push
leave
mov
test
mov
daa
dec
sti
call
mov
in
add
enter
jmp
xorb
jnp
imulb
adc
repnz
adc
aam
mov
xor
pop
mov
jns
dec
insb
idiv
inc
in
adc
mov
adc
push
add
mov
pop
gs
xchg
scas
fildll
js
popa
push
or
mov
xor
test
shlb
add
out
dec
pop
and
cmp
dec
frstor
es
subl
inc
enter
std
adc
stc
icebp
push
sub
enter
xchg
xorb
test
mov
jmp
hlt
xor
or
fbstp
lds
aaa
loope
mov
and
in
push
pop
add
sub
inc
sbb
gs
mov
loop
addl
popf
inc
ljmp
out
outsl
je
lods
inc
es
jl
xchg
leave
dec
je
xchg
sti
jo
icebp
cwtl
fwait
push
push
mov
mov
jbe
xchg
mov
nop
pop
imul
shll
sub
rorl
filds
cs
mov
and
mov
mov
icebp
int3
inc
jo
mov
jns
mov
pminub
fdivrs
sub
mov
inc
adc
pushf
pop
mov
das
pop
sarl
xor
shll
or
repz
push
imulb
mov
loope
mov
in
sbbl
cwtl
sub
dec
lea
popa
mov
add
dec
and
mov
jno
pop
dec
aad
icebp
jmp
int3
outsl
pop
pop
sbb
push
cmp
xchg
popa
jnp
sub
imul
xor
outsb
repnz
ror
aaa
in
enter
mov
jbe
sub
mov
push
daa
dec
cmp
jo
ss
xor
pusha
les
xor
mov
movsb
push
dec
clc
aas
loopne
out
push
push
pop
out
push
lahf
fidivl
ds
xchg
outsb
cld
and
mov
sysret
daa
testl
inc
add
aas
iret
sbb
mov
out
std
test
and
cmp
push
insl
mov
bound
adc
mov
loope
ret
push
shlb
nop
add
sub
and
push
lahf
pushf
lret
push
jle
out
rolb
test
cmp
mov
sbb
test
in
dec
fisubrl
xlat
xlat
sub
cld
pop
mov
and
icebp
js
or
popf
push
cmp
mov
jne
mov
loopne
out
push
inc
xor
mov
stos
xchg
sbb
jmp
scas
lret
fucomp
shrb
add
call
bnd
sub
je
cwtl
rcrl
decb
jbe
xchg
fucom
and
dec
outsb
cmp
push
cwtl
sbb
dec
mov
test
sbb
inc
push
insb
sub
or
push
inc
outsb
arpl
bound
fdivrs
cmp
pop
out
push
mov
mov
sbbl
mov
inc
pop
fldenv
pop
pop
mov
stc
les
mov
sti
ds
and
cmp
hlt
ret
pop
into
or
push
push
leave
inc
mov
mov
std
lcall
push
cmp
into
rorb
xchg
fcoml
dec
jp
cltd
cs
sub
cmc
inc
cltd
push
arpl
rol
ja
jnp
cmpsl
pop
push
pushf
dec
movsb
popf
or
push
addr16
into
cli
push
loope
ljmp
insl
fstpl
addr16
mov
out
addb
add
ret
test
pop
loop
sbb
scas
cmp
int3
aad
mov
andb
imul
les
bswap
adc
xchg
and
orl
cmp
add
jns
mov
xchg
jg
push
mov
dec
inc
ss
adc
enter
stos
ret
out
roll
popf
ljmp
addr16
mov
add
mov
mov
loope
divb
sub
movsb
xlat
jl
jl
js
add
xor
mov
jno
ds
outsb
imul
jmp
jnp
inc
test
data16
lahf
lahf
and
add
cltd
dec
scas
mov
unpcklps
jns
fs
push
add
jo
sbb
cmp
int3
scas
push
cld
pop
insl
inc
test
mov
xor
mov
adc
push
mov
ficoml
mov
lods
bnd
ss
or
rorl
int
aas
dec
or
pushf
fadds
cmpsb
cld
add
pusha
mov
mov
sub
mov
pop
dec
imul
out
hlt
pop
lods
jns
negb
push
call
dec
push
mov
je
inc
adc
aas
cwtl
popf
inc
rorl
ljmp
sti
mov
out
aas
adc
addr16
lods
push
clc
data16
inc
push
test
js
jle
imul
test
cmp
xor
iret
popf
stos
sub
decb
stos
xor
lret
iret
push
sbb
mov
cs
cltd
add
cmp
jno
imul
push
jne
lret
fiadds
loopne
inc
in
sbb
xchg
jecxz
push
sbb
fs
add
and
andb
rorl
jmp
test
sti
cmp
pop
cmp
fiadds
cmpsl
sahf
sar
fimuls
pop
sbb
sahf
repz
pop
iret
pushf
roll
shlb
fucomi
xchg
pop
mov
lret
dec
push
cld
sub
jge
fsubl
jl
shll
pop
pusha
mov
sub
lahf
pop
frstor
sahf
pop
movsb
xchg
in
dec
adc
push
jno
scas
pop
mov
add
nop
mov
out
or
cmpsl
jl
ljmp
jbe
movsb
or
cmc
clc
sbb
xchg
imul
aas
add
cmp
jecxz
push
cmp
imulb
xchg
xchg
inc
decl
pushf
and
xor
sub
imul
push
xchg
ret
test
mov
pop
gs
movsb
jae
dec
mov
xor
aas
out
mov
sbb
adc
imul
out
jb
or
mov
clc
inc
or
or
cs
sub
mov
cmp
insl
fdivr
xor
jnp
shll
mov
mov
xchg
mul
leave
mov
pop
mov
scas
xchg
mov
and
sbb
jbe,pt
xor
mov
aad
call
insb
pop
mov
pushl
shl
mov
dec
push
mulb
xchg
cmp
jb
adc
ret
jmp
pushf
sbb
ficompl
insl
pop
shl
dec
loopne
setns
adc
lahf
pop
loopne
insl
or
pop
jmp
mov
js
cmp
inc
mov
lea
pop
adc
dec
inc
rol
cmp
push
outsl
or
inc
repnz
insl
sub
jo,pt
cmp
mov
aam
cli
lods
shrl
aad
or
xchg
sub
dec
push
ret
int
mov
ljmp
int
popa
sub
sub
shlb
in
mov
mov
push
fwait
leave
mov
jp
repz
pcmpeqb
fs
dec
push
jmp
nop
adc
les
cmp
call
mov
sub
call
nop
mov
popa
push
into
inc
shrb
or
add
test
jnp
inc
add
sbb
xchg
pop
xchg
dec
jle
cmc
js
jnp
fs
push
push
movb
les
and
aaa
push
xchg
adc
jmp
addr16
mov
cmp
loop
jg
insb
sub
sub
test
in
test
loopne
cmp
lds
daa
lret
add
lea
scas
lods
mov
icebp
xor
inc
pop
lods
lods
les
mov
mov
mov
lcall
outsl
pop
outsb
push
js
outsb
jg
orl
std
cmp
add
into
jmp
push
inc
sub
dec
ja
push
xchg
decb
inc
ret
ss
cmp
xor
es
push
mov
scas
lret
jg
mov
shr
je
daa
jmp
cmp
sub
mov
and
mov
out
test
loop
sbb
xor
push
nop
sbb
jl
cltd
push
es
scas
mov
loopne
addb
pop
mov
xlat
xchg
mov
or
or
mov
addr16
insl
jle
xor
outsl
pop
subl
cltd
push
jno
lea
cmpsl
pushf
jmp
enter
pop
or
mov
jp
cmc
shr
int3
mov
cmovg
out
ss
push
ret
fucomp
mov
push
sahf
rcr
jmp
mov
lret
sub
sbb
lock
xchg
adc
mov
push
jnp
mov
icebp
mov
dec
iret
adc
ljmp
sub
icebp
or
subb
sarb
sbb
sub
mov
pop
fdivl
jmp
mov
loopne
arpl
add
ret
test
mov
mov
sbbb
xchg
rcll
mov
pop
xchg
push
daa
or
gs
outsl
jl
repnz
sub
mov
push
cmp
shrb
pop
imul
stos
xor
mov
mov
and
dec
jne
out
nop
mov
pop
lret
push
fistpl
push
fistl
sub
or
ficoms
jecxz
mov
add
nop
aas
dec
pop
bound
or
sub
jge
rcr
stos
je
dec
fdivrs
loop
adc
or
mov
mov
dec
subl
je
xor
sahf
mov
and
rclb
mov
inc
ret
mov
mov
gs
fucomp
iret
mov
ss
mov
loope
push
push
sub
sbb
cmp
lret
mov
pop
cwtl
lea
insl
ret
add
pop
stos
mov
bound
es
loopne
pusha
iret
movl
sbb
in
cmp
les
xor
sbb
push
cmc
lock
inc
mov
sub
popa
out
sbb
arpl
and
cli
jnp
mov
imul
movl
in
ret
out
iret
and
add
cmp
jo
mov
mov
fmull
stos
lds
sti
mov
cmp
cmpsb
pop
mov
dec
xor
gs
adc
push
scas
jbe
test
xor
sub
add
lcall
mov
jecxz
or
inc
ds
xor
mov
jmp
xchg
jle
dec
ljmp
pop
mov
xchg
bound
add
mov
fiadds
and
inc
popf
fisubs
mov
clc
mov
or
dec
pop
xchg
add
fdivr
mov
mov
rcl
dec
sub
mov
call
jl
inc
mov
fs
popf
psllq
scas
add
lods
jb
pop
ljmp
int
adc
jle
mov
jp
xor
je
out
sti
push
xchg
xchg
fstp
imull
cmp
mov
fucomp
icebp
repnz
js
mov
push
outsl
jle
gs
aam
outsl
push
int3
jns
fwait
dec
es
scas
and
mov
daa
cmp
adc
in
xchg
pushf
dec
cld
mov
sub
dec
cmp
dec
or
mov
mov
out
in
add
mov
xor
or
jg
mov
inc
ds
or
jg
jae
pop
cmp
cs
in
xchg
sbb
jb
jns
in
mov
pop
insl
add
pop
int3
out
mov
cltd
sbb
in
mov
int3
cli
dec
dec
cmpsl
pusha
and
cmp
cmpsb
mov
hlt
xlat
mov
lret
mov
fidivrl
push
xor
pop
dec
gs
popa
pushl
imul
xor
dec
dec
cmp
mov
xchg
push
out
adc
lcall
xor
pop
mov
addb
xor
xchg
push
or
adc
loop
loopne
inc
xchg
ss
or
xchg
imul
stos
xor
cmc
mov
dec
stc
cmc
adcb
flds
clc
pop
add
jmp
mov
xchg
sub
std
lock
cmp
jle
or
into
sbb
jle
and
movsb
dec
inc
cmp
mov
imul
loope
mov
out
add
sbb
outsl
je,pn
jb
xlat
and
loopne
xchg
mov
popa
add
or
sub
sahf
sbb
test
movsl
popf
fwait
mov
lock
inc
push
rorb
jno
inc
cltd
mov
adc
ss
pop
xchg
dec
dec
lds
int3
push
pop
push
loop
push
pop
loope
or
pop
js
sub
popf
lea
rcrb
mov
or
jecxz
sub
mov
pop
idivl
adc
loopne
or
add
sub
jg
js
xor
rcrl
push
pusha
sub
sub
mov
pop
pop
jecxz
xchg
sub
lock
outsb
stos
lcall
roll
jg
cmp
sub
adc
ss
js
add
lahf
std
inc
pop
adc
or
andl
lods
sub
scas
jmp
mov
fbstp
fcmove
mov
mov
fs
test
cmp
push
pop
dec
mov
aad
es
ret
lock
in
out
loope
or
ja
push
pop
mov
xchg
cltd
pop
jns
mov
pop
cli
sub
mov
loope
outsl
xor
and
jae
cwtl
clc
je
xor
pop
shlb
lods
mov
shlb
mov
cltd
test
fs
arpl
into
push
sahf
loopne
xchg
popa
pop
adc
adc
ret
out
das
mov
cmp
jo
xor
adc
pop
clc
jg
imul
nop
cwtl
push
sarl
and
push
jge
inc
aas
cwtl
or
xlat
mov
jmp
test
bound
in
aaa
mov
inc
stc
aad
push
aaa
cmp
jb
mov
push
test
lods
dec
cmpsb
cmpsl
negl
stos
das
inc
pop
and
xchg
cwtl
ja
sbb
mov
push
adc
pushf
pop
sub
jecxz
test
nopl
repz
or
leave
lahf
shr
jmp
into
jge
cltd
fistl
insl
icebp
cmpsb
and
icebp
call
jo
mov
xor
xchg
push
imulb
pop
shlb
and
lods
mov
push
jne
or
xlat
dec
xchg
lods
sub
cli
jno
stos
and
aas
sub
sub
outsl
mov
loop
hlt
sub
gs
xor
pop
push
or
jge
loopne
popf
in
inc
movsb
icebp
cmpl
adc
inc
insl
imul
jae
push
xchg
int3
mov
mov
mov
enter
push
mov
cmp
lods
inc
cmpsb
fwait
mov
movsb
cmp
daa
in
cmp
pop
dec
dec
orb
jns
cltd
xor
cmc
push
mov
pop
bound
or
jl
mov
outsl
pop
lock
mov
and
push
hlt
add
cmp
les
test
shrb
imul
push
stos
add
mov
mov
push
ror
insl
sbb
push
lret
mov
std
inc
add
pop
cmp
test
cmp
mov
and
inc
fcomi
cmpsl
jmp
push
mov
sub
mov
stos
loope
push
sub
imul
or
addr16
adc
mov
pop
fisubs
sbb
enter
hlt
pop
out
jge
addl
jae
in
mov
or
aaa
cs
jno
inc
ds
cmpsl
int
mov
or
test
push
dec
rorb
push
push
and
xlat
sbb
or
aas
mov
pop
and
xor
xor
hlt
cmp
sub
pop
adc
fcomps
enter
and
pop
sbb
dec
inc
dec
scas
pop
pop
in
pop
movsl
adcb
pop
jmp
fiaddl
fistpll
sbb
dec
fsts
mov
dec
push
dec
movsb
jl
and
pop
insb
in
adc
aaa
push
push
addr16
in
lahf
pop
inc
adc
ja
sbb
pop
out
inc
or
pop
inc
push
ficompl
push
or
dec
test
out
adc
movl
and
adc
hlt
jb
aad
xor
lds
outsb
out
ret
bound
ror
pop
enter
jne
push
loopne
fs
push
xchg
lea
das
bound
call
cmp
mov
icebp
inc
sub
and
into
cmpsb
mov
rcrw
je
mov
push
jmp
cmp
cmp
cmp
push
popf
or
mov
dec
cwtl
jecxz
out
aam
jno
xchg
add
or
push
in
adc
cmpsb
fwait
pop
stc
dec
xor
pop
imul
scas
adc
push
cmp
stos
or
imul
sub
or
pop
sbb
int3
jmp
xor
pop
scas
mov
xor
ret
xor
pop
pusha
add
xor
das
outsl
or
mov
insl
rorl
aas
dec
ret
fs
xor
int3
push
shl
jne
pop
mov
repnz
sbb
scas
adc
adc
mov
int
or
pop
jb
xor
sbb
fcmovu
push
cltd
mov
and
stos
lret
mov
cmpsl
js
mov
ljmp
popf
jae
subb
imul
xor
xor
std
xchg
push
popa
sub
in
aas
gs
or
xchg
stc
fwait
daa
jno
adc
aam
inc
xchg
test
sub
data16
out
dec
inc
shlb
aad
test
mov
nop
push
cwtl
inc
icebp
mov
pop
mov
fcmovbe
inc
sbb
andb
mov
es
pop
leave
ja
and
pop
into
lds
out
sub
sti
mov
cli
push
jne
or
mov
mov
dec
loopne
or
es
cmp
add
push
xor
mov
shlb
and
loope
rcr
sub
out
shrb
push
push
jbe
pop
test
stc
shr
add
ret
in
shrl
fs
inc
outsb
adc
pushf
pop
jmp
inc
fldl
jp
sub
and
cmpsb
cmp
mov
sbb
scas
mov
adc
ret
loope
jp
leave
mov
roll
xchg
out
xchg
fisubl
jne
int3
inc
cmc
add
test
or
mov
mov
push
adc
cmp
jl
xchg
cmpsl
in
add
ss
pop
mov
adc
jg
mov
mov
imul
ret
outsl
push
lret
xchg
addr16
aam
sahf
push
popf
sub
insb
xor
pop
cwtl
sub
push
mov
xor
sub
jb
int
loopne
adc
in
stc
inc
or
stos
icebp
xor
enter
leave
and
dec
mov
mov
outsl
aas
xor
mov
loop
dec
fsubrs
fdivp
bound
in
loop
jecxz
xor
adc
lock
popf
sbb
js
cmp
test
or
xchg
adc
fidivl
pop
xchg
sbbl
sbb
out
dec
icebp
jle
inc
test
call
mov
addb
js
pop
popl
stc
cwtl
outsl
cmc
fldcw
mov
adc
scas
std
pop
stc
push
push
call
cmp
pop
or
mov
push
test
pop
insb
push
mov
andb
js
push
sub
bound
je
xchg
inc
cmp
or
fxam
scas
inc
lea
jmp
mov
sbb
test
aam
mov
bound
xorb
mov
push
xor
push
aaa
and
testl
testb
and
rep
call
test
pop
sbb
sub
pop
enter
pop
sub
bound
outsb
xchg
aas
jle
loop
out
xchg
dec
xchg
sbb
adc
repz
sbb
adc
outsl
sahf
jb
dec
jp
mov
outsl
in
fisubrl
inc
pop
and
rol
pop
pop
hlt
pop
pushf
mov
mov
cmp
lcall
lahf
adc
and
xchg
arpl
ds
inc
cltd
push
fst
shll
movsl
sbb
mov
xchg
lret
dec
sbb
mov
cmc
fdivrs
enter
ret
or
jb
or
sub
push
sub
aad
push
and
jne
pusha
sbb
bound
push
jo
sbb
inc
sub
sub
ja
arpl
shr
or
sbb
push
insb
insb
sub
les
cs
test
mov
ret
ss
int
adc
stos
pop
xlat
sahf
xchg
cmp
shrb
pop
sbb
adc
adc
mov
imul
fdivrs
push
popa
test
or
xor
repz
in
test
aad
cmpsb
pop
test
mov
or
loopne
mov
test
leave
jo
adc
push
sti
push
xor
ss
jbe
inc
push
cmpsb
lods
aad
sti
jge
mov
sbb
cmp
sub
addr16
or
iret
sti
dec
movsl
or
sub
scas
sub
lds
fucomp
fsts
push
mov
test
aad
cltd
pop
std
dec
push
push
jno
into
subl
sub
testl
sub
push
xchg
std
icebp
icebp
inc
mov
add
push
cmp
cmp
sub
cmp
xchg
outsb
call
cmpl
dec
and
decb
xor
jae,pt
faddl
lea
pushf
sbb
or
out
mov
cld
mov
xor
inc
lods
jg
xchg
cmp
mov
xchg
imul
cmpsb
in
mov
jbe
fwait
or
ljmp
inc
adc
jmp
roll
push
shll
push
push
mov
aas
pop
or
and
sub
int3
push
call
adc
inc
cld
in
divl
fisubrl
cli
and
xchg
jnp
add
in
push
jg
cmpsb
sti
scas
add
push
lods
adc
outsb
fwait
enter
mov
mov
dec
lahf
je
daa
lcall
fcoml
js
push
mov
outsl
add
jns
adc
xchg
xchg
push
add
inc
sbb
repnz
js
push
hlt
mov
jmp
dec
or
mov
sbb
pop
add
cmovne
bnd
pop
sub
pop
fbstp
sbb
mov
popa
dec
ror
test
stos
dec
call
adcl
sbb
insl
sub
out
cmp
stc
addb
inc
mov
aad
lods
stos
scas
dec
jmp
jo
bound
cmpsl
mov
and
mov
bound
adc
stc
std
gs
sbb
cwtl
inc
push
push
icebp
inc
push
or
inc
gs
sub
or
lock
fisttps
rclb
pop
fcoml
sub
leave
jge
mov
divl
push
repnz
pop
fcoml
ret
mov
flds
inc
rolb
adc
jg
inc
insb
mov
pusha
and
and
inc
inc
cmp
clc
adc
outsb
in
or
adc
loope
jmp
xor
mov
in
or
mov
ds
subl
push
and
add
jo
mov
adc
xchg
and
xchg
movsl
lret
adc
inc
pusha
or
mov
lret
dec
aam
sub
jle
add
test
test
pop
je
pop
xchg
fisubs
add
sbb
clc
inc
stos
lds
cmc
mov
arpl
or
push
inc
mov
sbbl
addl
in
mov
js
lock
fnsave
adc
and
adc
sub
iret
push
rcrl
and
jp
mov
xor
pop
sti
xor
or
or
addr16
sahf
adc
int3
repz
xchg
loop
add
push
xor
and
out
cltd
int3
or
xchg
jmp
mov
xor
scas
ss
cmpsl
cmpb
dec
add
inc
push
or
cwtl
sahf
dec
sbb
add
cmc
adc
es
in
sar
subb
fwait
sarl
lods
repnz
fisubrl
data16
sub
fstpt
and
fs
dec
sti
cmp
pushf
stos
push
daa
sbbb
into
sbb
xchg
push
mov
fnstsw
sub
mov
jp
les
loop
bound
mov
jno
jo
addl
fxch
andl
lods
and
clc
pop
adc
xor
sbb
aad
cmpsb
cli
jmp
sbb
clc
push
or
jbe
xchg
sahf
mov
dec
mov
stc
pop
cmp
aas
sub
jnp
mov
mov
sti
push
mov
fisttpll
test
mov
aam
or
fcoms
lret
jmp
push
into
mov
stos
pop
sahf
aam
ficompl
or
mov
add
dec
fwait
shll
cmp
push
dec
mov
test
or
cmp
add
roll
xchg
in
fiadds
mov
in
xchg
iret
push
dec
xchg
aad
dec
dec
mov
mov
jae
cwtl
das
in
add
lods
sbb
jb
inc
or
add
adc
fadds
imul
or
rorb
push
jp
inc
inc
xchg
lock
add
sub
call
xchg
sub
mov
ja
aas
adcl
nop
lret
stos
mov
cmp
or
mov
mov
dec
push
in
push
sti
cmp
inc
lahf
scas
pop
ffree
ljmp
and
sub
imull
add
mov
sbb
mov
push
jbe
inc
or
pop
mov
dec
mov
dec
adc
pop
jae
outsl
pop
sub
cld
pop
ret
out
xchg
sbb
sbb
in
push
xor
add
movntps
out
pushf
fcmovnb
clc
inc
push
bound
lock
in
pop
or
and
test
and
outsb
addr16
xorb
enter
or
mov
push
adc
jle
jns
jge
sbb
insl
mov
sbb
aaa
mov
je
sub
jecxz
pop
enter
cmp
jo
subl
xor
xor
sub
out
js
insl
sub
sbb
sti
pop
scas
xchg
mov
insl
inc
push
ret
jbe
imul
adc
stc
pop
sub
in
mov
pop
lds
or
in
sub
mov
adc
xchg
aam
daa
and
int3
out
int
and
sbb
lea
in
movsb
cmp
cwtl
push
lret
dec
fcmovu
imul
jae
lret
mov
shlb
ja
das
int3
adc
shr
xor
jle
nop
pop
dec
adc
cmpsl
mov
and
scas
lret
mov
fildll
dec
push
outsl
es
dec
or
mov
sub
push
les
or
push
mov
cmp
stos
sbb
bound
xlat
scas
movsb
imul
pop
and
jg
lea
stc
in
jmp
xor
pop
mov
arpl
aad
or
cmp
shlb
adc
and
adc
std
add
pop
popa
add
dec
sub
nop
mov
hlt
mov
and
scas
or
adc
push
ret
dec
push
aad
fstpl
and
shrb
lcall
ret
iret
cmp
int
stos
imul
dec
mov
in
or
icebp
sbb
mov
push
adc
leave
adc
lock
fwait
mov
push
inc
fcoml
hlt
mov
push
lahf
clc
jno
xchg
mov
dec
lret
ss
xor
add
jbe
int
mov
lret
out
jmp
rcrb
stos
outsb
pop
sahf
lahf
notl
mov
push
sub
test
cmp
jl
stos
add
add
lret
mov
xlat
cmpsb
jecxz
rorb
adc
cmp
sbbb
loopne
cs
mov
mov
cmp
mov
xchg
dec
popf
cmc
stos
rclb
xchg
in
mov
xor
mov
rcrl
and
mov
or
ljmp
lret
cmc
jo
mov
push
xchg
mov
sbb
xchg
and
mov
stos
jo
popf
int
scas
loopne
fucompp
stos
push
push
jmp
stos
pop
sbb
outsb
outsl
adc
push
cwtl
cld
mov
lods
sub
push
dec
add
loop
out
add
cmp
inc
repz
push
sbb
mov
pop
shrl
insl
push
xrelease
cmpsl
in
or
cmp
mov
lret
mov
mov
sbb
cmc
dec
sbb
push
sbbb
lea
sar
lock
fldt
sbb
adc
stc
and
add
lock
xorl
jecxz
loop
jb
push
adc
sub
hlt
fstpt
mov
fwait
movsb
es
test
leave
mov
sbb
mov
adc
sbb
add
push
xor
xchg
clc
push
jge
pop
into
adc
out
sbb
and
popa
iret
push
fisubs
push
push
inc
rcrb
xchg
lahf
cmp
out
arpl
jmp
jno
outsl
jmp
lret
mov
mov
aas
cmp
sbb
mov
aaa
jo
sbb
push
das
mov
pusha
pop
out
ljmp
xlat
xor
push
cmp
push
push
and
jae
incl
leave
rcr
xor
fiaddl
xchg
ljmp
daa
outsb
hlt
fdivrs
mov
jl
scas
test
add
push
pop
xchg
inc
sahf
cmpsl
jmp
xchg
mov
jb
cld
cmpsb
inc
cld
xor
cli
clc
or
sbbb
out
aaa
shll
cli
xchg
jecxz
rcl
mov
jg
loopne
or
mov
test
and
jl
cmp
pop
mov
push
int3
mov
fnstcw
aad
or
lcall
xchg
xchg
add
pop
inc
clc
lret
adc
and
pop
push
iret
stc
aas
mov
aas
sub
ss
jg
aad
loop
dec
or
xchg
mov
sbb
cli
lret
nop
mov
or
ret
add
mov
rcl
fistpl
scas
or
popf
dec
stc
jmp
push
sub
movsl
les
jne
dec
add
sbb
imul
push
insl
out
add
repz
loope
jae
xchg
mov
jbe
adcl
mov
insl
sbb
xchg
icebp
out
push
jne
mov
imul
addr16
repnz
dec
cld
mov
sti
fs
and
std
adc
dec
lahf
shl
or
imul
fs
mov
in
sub
or
nop
add
jp
mov
ret
or
inc
popf
push
decl
daa
mov
rcr
pop
shrb
sub
inc
dec
mov
stc
cmp
shll
add
jbe
orl
fucom
or
or
cltd
inc
mov
xor
mov
pop
int3
push
sub
adc
repz
lods
test
cltd
jnp
cwtl
pop
bound
push
xchg
mov
cld
iret
test
shlb
adc
test
and
ss
cmc
and
rorb
dec
adc
fwait
clc
mov
cli
push
push
out
mov
in
push
movsl
sbbb
lret
mov
dec
mov
cli
out
fwait
ss
jno
fwait
fwait
jle
test
or
int
push
sub
int
nop
sub
fwait
jecxz
lods
mov
inc
pusha
das
pop
jo
cmpsb
pop
shrb
xor
dec
mov
imul
test
and
repz
bound
jmp
xchg
sub
mov
adc
jmp
mov
dec
ds
pop
mov
mov
mov
fisubrl
xchg
jo
imul
ds
mov
mov
push
or
push
sub
dec
jmp
lcall
iret
dec
out
test
push
mov
push
pop
sahf
bnd
or
in
inc
stos
inc
mov
sar
movsl
call
xor
imul
push
mov
sbb
std
push
std
push
jl
mov
mov
dec
sbb
or
fidivl
int3
jmp
adc
or
lods
cmp
sub
adc
test
movsb
shll
xchg
das
lret
jne
pusha
push
or
lret
push
jge
movsl
fs
push
pop
sbb
outsl
enter
int3
aaa
cmpsb
shll
or
lea
pop
cmp
jnp
or
cld
cmc
adcl
filds
insl
in
mov
popa
aaa
push
gs
out
pop
xor
jecxz
filds
adc
lods
push
clc
sbb
lahf
mov
dec
lods
and
mov
insl
mov
xor
xchg
nop
mov
lods
sub
fmull
cmp
xchg
xchg
shll
xchg
mov
push
cli
outsb
aad
daa
lret
mov
xor
xchg
cli
arpl
ss
repnz
mov
pop
cwtl
push
xlat
jg
or
mov
dec
nopl
cmp
or
je
dec
fcomps
aam
or
mov
jp
dec
pop
push
mov
cmpsl
stc
xchg
ds
inc
sbb
out
mov
mov
mov
imulb
mov
ret
test
fdivs
mov
sbb
jo
and
push
js
or
scas
add
out
fdivl
push
jo
mov
sub
pop
dec
inc
out
add
out
pop
pop
push
adc
ljmp
push
or
lret
pop
and
flds
pop
dec
gs
inc
inc
mov
add
inc
rcll
enter
mov
cmp
cmp
shlb
push
sbb
mov
adc
rclb
pop
idiv
jnp
lods
fiaddl
inc
cmp
stos
mov
add
shlb
es
dec
cmpsb
mov
dec
adc
mulb
lods
push
or
cmp
jl
inc
ret
aam
int3
pop
add
inc
js
mov
mov
cmp
add
cmp
in
mov
cs
xchg
lock
aad
sarl
pop
and
fbld
out
cmovne
mov
data16
jp
inc
mov
cmp
cmp
adc
and
fwait
lods
aaa
inc
inc
mov
pop
enter
jge
imul
incl
fstpl
xchg
sub
push
sbb
cmp
loop
mov
push
push
inc
xor
orb
enter
mov
into
mov
inc
dec
aad
stc
jns
xlat
mov
les
adc
fbstp
sub
insl
dec
repz
pop
aad
sub
xchg
and
in
je
std
ljmp
adc
and
js
sub
call
jae
inc
pop
add
fs
pop
insl
std
jl
mov
movsb
mov
adc
lret
pop
mov
jno
data16
ret
and
mov
sbb
jae
add
pop
sbb
adc
popa
dec
ss
xchg
fdivs
movsb
ss
icebp
fcmovnu
push
aam
xchg
xor
adc
dec
cmp
jbe
pop
inc
add
sub
imul
test
and
lods
cmp
pop
sub
outsl
pop
push
aam
iret
cmp
notb
andb
pop
inc
bound
xchg
fiadds
orb
xchg
or
data16
stc
xchg
jne,pt
push
jecxz
mov
sbb
ja
and
push
les
test
mov
clc
add
out
in
out
out
mov
lret
sbb
js
jle
push
xchg
cli
xchg
outsl
pop
inc
pop
pop
sbb
adcb
mov
cli
test
cmpsl
sub
inc
test
scas
lret
in
xchg
push
rcll
adc
pusha
xor
pop
outsb
adc
jge
xchg
pop
mov
xchg
pop
lds
movsb
fildl
int
or
outsl
mov
or
in
mov
jg
inc
mov
aam
sar
mov
int
nop
lcall
xor
es
data16
sbb
push
adcl
aas
fs
fstpt
add
mov
jno
das
std
aaa
or
cli
mov
test
in
or
loope
std
or
lock
jo
xor
add
mov
push
aad
mov
outsl
addr16
mov
ror
fwait
fwait
cmpsb
je
sub
iret
and
imul
xor
imul
pop
pushf
pop
mov
jp
mov
stc
sbb
jo
call
pop
shlb
popa
xchg
adc
popf
cli
and
mov
push
pusha
xchg
xchg
add
add
inc
popa
rcll
pop
xchg
cmp
or
aaa
add
pushf
xchg
int3
scas
inc
jne
jo
mov
inc
xor
leave
popf
mov
mov
repnz
pop
push
sarl
arpl
call
hlt
and
inc
jne
insl
outsb
je
neg
insl
in
xchg
pop
jo
sbb
int3
jno
xchg
ljmp
lods
cwtl
aam
sbb
mov
inc
ret
sub
pop
xchg
mov
and
or
xor
mov
mov
inc
sbb
mov
sti
mov
mov
adc
insb
cs
inc
or
push
mov
mov
push
mov
rcrl
lock
or
xchg
imulb
dec
push
mov
sbb
add
and
or
mov
aad
dec
arpl
or
out
and
pop
dec
xchg
sti
cli
mov
mov
scas
push
daa
ja
mov
xchg
loope
jne
cmpsl
imul
pop
xor
sti
shrb
leave
cltd
cltd
pop
imul
fbstp
jno
mov
pop
mov
pushf
add
mov
and
cmp
sbb
cmpsb
adc
pop
xor
cmp
xchg
adc
xchg
rorb
inc
sbb
cwtl
ja
or
out
mov
jns
imul
into
enter
xchg
add
aaa
sub
jecxz
lods
mov
xchg
addr16
pop
aam
std
lea
test
mov
sti
jg
xchg
test
xchg
or
pop
pop
sub
push
pop
fwait
icebp
mov
xchg
ret
movsl
out
js
and
cmp
fsts
push
cmpsb
jmp
push
jp
iret
sbb
or
push
adc
imul
out
cmp
mov
pop
mov
pop
xchg
sub
je
jns
pop
dec
pop
pop
cwtl
fistpl
pop
push
and
jbe
inc
out
mov
pop
cmpsb
ds
js
dec
pushf
jns
fcmovbe
out
scas
rcl
test
nop
pop
sarl
sub
jmp
and
jmp
mov
xor
nop
and
leave
xor
into
aaa
and
pop
mov
mov
cmc
sbb
shlb
dec
xchg
inc
push
xor
loope
push
jl
cmpsl
push
lods
mov
and
icebp
movsl
bound
lret
int
xlat
ljmp
jp
cmp
dec
push
pop
dec
leave
jnp
pop
negl
stc
ret
push
sar
mov
sbb
sub
adcb
xor
and
ret
movsl
cmp
mov
mov
addl
xchg
enter
iret
push
push
add
int3
sbb
test
and
test
add
repz
or
jle
insl
lock
push
jb
in
orl
xor
aam
sub
mov
push
arpl
xchg
testb
adc
or
fwait
mov
lcall
cli
lahf
ret
jg
in
hlt
divl
push
cmc
adc
stos
scas
ss
ficomps
add
test
adc
nop
outsl
mov
mov
loop
xor
sbb
jo
cmp
add
sbb
jne
icebp
flds
add
cwtl
in
push
mov
add
sub
mov
jno
repnz
jp
and
subl
popf
sub
push
mov
mov
mov
and
cmp
adc
pop
int3
and
jecxz
sub
xor
sbb
jecxz
or
adc
xchg
call
cwtl
inc
mov
std
lahf
pop
push
imul
jo
push
or
loop
pop
icebp
stos
lods
cltd
scas
or
add
lahf
insl
mov
insl
mov
push
stc
ret
add
inc
test
jp
inc
cmp
inc
insb
popf
cltd
or
cmp
out
clc
pop
add
rcll
pop
mov
in
pop
pop
bound
cmc
inc
pop
sub
daa
lods
sti
out
in
rolb
aas
adc
cmp
test
pop
or
pusha
mov
cwtl
pop
sbb
inc
inc
xchg
cmp
mov
xlat
test
scas
jae
idiv
clc
les
mov
adc
jp
out
lock
push
jmp
push
mov
out
mov
lods
mov
mov
push
mov
outsb
pop
push
loop
cmpsl
sti
jnp
push
jl
sub
push
sbb
mov
loope
pop
add
popa
sub
in
call
imul
lret
test
sarl
andl
sub
xchg
push
rorl
ret
icebp
pop
adcb
xchg
cmc
jno
mov
add
or
out
jne
fisttpl
pop
pop
popf
insl
ficoml
test
cwtl
out
xchg
notb
jg
in
jg
push
arpl
cmpsl
mov
add
sub
and
jns
fldl
dec
push
dec
xor
sti
sbb
cmpsl
pusha
mov
mov
cld
movsl
test
mov
or
aam
jp
and
shll
negl
xchg
sub
mov
out
iret
mov
fs
mov
cmp
fwait
outsb
std
mov
jp
mov
xor
clc
loop
or
mov
iret
lret
stos
jge
or
inc
test
jge
insb
stos
stos
push
inc
lods
mov
ds
sub
outsb
and
jle
pop
cmp
xor
pop
scas
das
int
in
popa
outsl
pop
push
sarl
pushf
rcll
jecxz
pop
stos
pop
fdivp
js
test
fndisi(8087
shrb
jo
sub
lods
adc
inc
push
shl
xchg
jne
push
loopne
icebp
sbb
cld
inc
data16
sbb
jne
mov
cli
shrb
iret
les
sbb
lods
cmp
stos
mov
popf
push
ret
ds
sarb
mov
xchg
mov
or
cmp
pop
xchg
scas
movsb
mov
cmc
or
sti
ds
mov
jbe
inc
sbb
shl
imul
jno
cld
gs
out
in
sbb
xlat
ja
subb
or
xchg
out
pop
pop
adc
insl
jle
roll
mov
lret
inc
stos
pop
cmpsb
sub
das
xchg
push
cmp
repnz
push
imul
xor
xlat
aaa
mov
pop
mov
add
in
cwtl
int3
and
cmp
cld
sub
push
sar
dec
push
icebp
mov
dec
shll
fists
in
fwait
repz
out
ljmp
inc
pushl
adc
dec
in
insl
jge
pop
popf
int
and
xor
jo
movsl
push
pushf
or
int
ror
jge
and
test
mov
jp
call
mov
inc
imul
push
shlb
ja
jns
push
inc
inc
imul
js
pop
fcoms
or
xchg
notb
sahf
dec
out
outsl
orb
repnz
inc
xchg
jbe
das
insl
xchg
mov
in
mov
fcmovu
sub
fimuls
or
bound
out
xor
mov
icebp
add
mov
inc
and
pop
cmp
jbe
adc
ret
add
lret
mov
and
mov
fsubr
pop
mov
jae
dec
push
fcomps
pop
cmp
mov
and
sub
push
or
xchg
shll
dec
imul
xchg
push
dec
pop
jae
add
ret
pop
mov
add
jmp
jns
sbb
stos
inc
iret
leave
push
lock
xor
jmp
xlat
lret
xor
xor
push
jecxz
outsl
cmp
mov
jge
mov
daa
jge
dec
mov
mov
cmp
cmp
stos
xchg
enter
xor
js
mov
es
mov
mov
and
mov
jg
push
lods
mov
out
xor
fimuls
xchg
add
lcall
xchg
dec
jp
sub
inc
in
arpl
cwtl
sub
mov
outsl
fcomps
fs
fs
xor
ss
popf
or
test
pop
repz
jl
mov
les
push
scas
imul
out
scas
jge
jo,pt
loope
push
lcall
sbb
je
repnz
or
sub
stc
movsb
cmp
add
inc
pop
mov
repz
cwtl
adc
decb
mov
out
ds
popa
int3
aaa
lcall
mov
sarb
adc
cmc
mov
adc
out
lret
dec
pop
cmc
clc
push
adc
jae
int
xchg
imul
sbb
test
jmp
fcompl
fs
sub
fsts
pop
push
movsl
lret
pop
jl
dec
sti
sahf
sbb
cmp
sub
cmp
sub
shrl
lea
mov
pop
jmp
push
movsb
pop
adc
scas
lds
xor
xchg
jbe
fxtract
mov
test
pop
dec
call
outsb
fdivrs
je
imul
pop
dec
sub
clc
out
je
mov
pop
aaa
ljmp
in
scas
insl
push
mov
xor
or
jecxz
aaa
push
jb
lock
aaa
pop
push
sbb
test
inc
adcl
jge
push
push
fistpll
adc
cli
fistl
mov
inc
popf
gs
xor
outsb
insb
xchg
enter
dec
xor
adcb
fnstcw
fucomp
cmp
leave
lods
add
push
xor
mov
jl
les
adcb
loope
dec
adc
pop
xchg
in
in
test
popa
jp
loop
hlt
scas
add
push
and
add
lcall
aas
add
or
cmpsl
dec
mov
jno
push
push
call
pop
adc
imulb
fyl2xp1
cld
out
pop
push
jmp
adc
sbbb
adc
mov
scas
sbb
mov
push
mul
mov
inc
ss
sub
xchg
sbb
arpl
fwait
cltd
insb
dec
cli
lods
aad
faddl
cltd
xchg
cmp
xchg
jmp
jecxz
jecxz
cmp
test
pop
adc
add
lds
lahf
jne
xor
mov
mov
scas
bound
aad
xchg
iret
nop
cmp
push
fidivl
hlt
cli
out
mov
and
mov
inc
in
ljmp
mov
and
mov
lods
icebp
adc
cmp
jp
mov
jnp
test
fucomi
sbb
xchg
sti
mov
mov
or
divl
mov
sbb
in
mov
xor
scas
out
lds
mov
mov
cs
aaa
jmp
xor
mov
lea
imul
dec
push
and
cmp
ficoms
pop
adc
loop
popf
fsub
ret
push
pushf
lods
mov
pop
scas
inc
std
sbb
sub
add
xchg
rolb
cmp
xor
dec
push
add
xor
pop
out
mov
mov
xchg
rcrb
cli
in
adc
std
test
sbb
inc
pop
add
xor
test
cmp
ds
into
cli
sahf
stc
int
add
shrb
or
jns
mov
push
xor
mov
or
xchg
enter
in
pop
rol
mov
lea
jmp
push
fadds
int3
pusha
stos
push
test
jg
mov
push
add
mov
mov
rcll
nop
inc
adc
movsl
imull
cmp
movsl
inc
mov
or
mov
xor
and
movsl
stos
addr16
dec
sub
jbe
xor
push
fsts
xchg
push
lock
cmc
xchg
adc
or
mov
lods
jg
repz
aaa
or
leave
outsb
add
fs
inc
push
or
cli
adc
arpl
aas
cmp
aam
jle
aaa
in
inc
push
sub
xchg
mov
jb
mov
xor
adc
std
in
inc
les
fwait
dec
mov
cmp
mov
mov
loope
mov
sub
scas
mov
psrld
rcll
out
cmp
sbbb
xor
mov
cmp
into
xchg
mov
lods
adc
mov
js
js
je
lods
test
outsl
or
mov
fsubrp
pop
sahf
nop
mov
push
xor
pop
sub
outsb
sarb
pop
push
cmp
xchg
imul
and
enter
push
fildl
jg
mov
sub
pop
sub
push
cmp
jl
shlb
fildl
push
and
add
test
mov
int3
fidivs
lret
fisttpl
inc
in
test
dec
inc
arpl
inc
int3
gs
mov
cltd
vminps
iret
or
jne
imulb
insb
je
xchg
xchg
outsl
ljmp
mov
imul
or
adc
dec
inc
add
test
xorb
dec
out
mov
lcall
out
cmpsb
add
pop
ficoml
out
movl
test
dec
in
pusha
inc
icebp
inc
mov
push
ret
lret
hlt
jg
pop
xor
push
fcoms
dec
cmp
jne
push
int3
sbb
sub
fildl
aas
into
std
sbb
fmull
sub
dec
lret
add
mov
shlb
push
repz
out
adc
jp
les
lock
pop
sub
mov
imul
jnp
adc
cld
jge
call
or
jb
pop
rcll
or
cmc
fwait
enter
mov
mov
sbb
jbe
mov
push
cmp
ret
cmp
fidivrl
stos
inc
xor
bound
mov
xchg
jbe
test
ret
js
lock
imul
or
fstl
mov
xor
pop
movsb
mov
mov
dec
fnsave
pop
jnp
push
sbbb
shl
pop
fisubl
test
jg
ds
lret
jnp
mov
mov
push
or
pushf
xchg
imul
mov
in
xchg
jl
sbb
cmp
cmp
std
mov
mov
jecxz
add
cmc
fsubs
rcrl
mov
daa
fldl
in
les
mov
ljmp
out
xor
mov
push
dec
ss
loopne
aaa
sub
in
pop
cmp
mov
xor
mov
push
push
sarb
cld
jo
xabort
das
ljmp
not
sub
mov
pop
repnz
xchg
lock
adc
imul
add
out
test
data16
xchg
pop
ret
scas
xchg
cmpsl
rorb
mov
pop
sub
bound
dec
mov
cmp
pop
push
movsb
add
add
push
loopne
lods
out
loopne
jno
shll
jmp
jne
insb
scas
mov
push
iret
subl
movsb
jmp
mov
dec
sti
pop
push
fdivs
sbb
adc
subb
dec
cs
pop
mov
pop
pop
mov
daa
mov
mov
bswap
movsb
pop
out
sahf
mov
daa
add
clc
push
xchg
outsb
jle
or
and
outsl
ja
jae
fisttpll
xchg
push
pop
in
add
test
outsl
and
or
andl
adc
add
loop
sbb
push
idivb
or
cli
shll
stc
stos
dec
cli
mov
mov
loope
mov
jmp
outsl
xor
pop
cmp
mov
xchg
xchg
icebp
mov
xor
movsb
mov
or
xor
clts
ljmp
roll
out
mov
add
xchg
notb
test
and
ficomps
subl
add
iret
aad
das
test
daa
jae
or
mov
xor
xor
cmp
out
out
call
jecxz
pop
mov
mov
xor
or
jge
test
push
iret
cmp
sub
in
jmp
mov
cmpsl
push
sub
pop
xor
stc
outsb
push
mov
xor
call
mov
xchg
addl
or
cwtl
addr16
stc
in
hlt
cld
lahf
sbb
scas
mov
sbb
ss
in
lds
cmp
cmp
stos
fwait
mov
int
xchg
sub
fsubrp
repz
or
or
inc
shl
insb
ljmp
mov
lock
fiaddl
and
int3
loopne
ja
inc
push
movsl
pop
stos
sbb
xchg
nop
stos
ret
add
test
or
jo
inc
sarl
and
jl
mov
rcrb
xchg
xor
cmp
lret
inc
inc
push
xlat
add
mov
pop
mov
jmp
insl
push
jle
mov
lock
lods
dec
pusha
frstor
xor
xor
cli
sbbb
jo
jl
scas
or
push
xor
adc
ds
loopne
aad
xchg
mov
mov
mov
shlb
mov
inc
adc
dec
in
mov
and
cmp
fucom
loope
push
mov
sti
sub
out
insb
cmp
inc
imul
sub
inc
sbb
mov
in
sbb
push
push
movsb
loop
inc
fistl
cmp
push
loope
sbb
sbb
mov
sub
add
xor
xchg
push
fwait
in
lcall
push
out
fdivs
enter
mov
leave
push
fstpl
dec
loop
lock
imul
xor
pushf
sahf
or
hlt
mov
and
lret
outsb
aaa
mov
cmpsb
in
stos
mov
adc
and
ficompl
outsl
mov
inc
leave
xor
ret
sbb
std
mov
repz
test
dec
dec
sub
fidivl
jmp
cmp
mov
int
call
xor
inc
out
loope
incb
std
out
pop
stos
hlt
lea
push
inc
fwait
enter
aam
or
jl
iret
pop
les
sub
enter
jne
xor
es
or
or
or
mov
lret
or
scas
xchg
adc
or
dec
pop
js
js
adc
cli
pushf
fwait
imul
push
sahf
les
push
push
ret
push
ja
mov
cmpsl
fwait
mov
ds
inc
adc
nop
and
jmp
enter
inc
test
xor
xchg
in
andl
ret
xlat
aam
and
outsb
lea
std
xor
pushf
in
and
jne
or
cltd
popf
or
jo
pop
push
outsb
mov
sti
mov
jno
inc
imul
repz
cltd
movsb
mov
inc
add
out
push
cmpsl
filds
stos
mov
fdivl
xor
out
xchg
seto
stos
push
mov
pusha
push
fstps
xlat
test
push
stos
sub
movsl
mov
jp
push
inc
push
loop
sti
jg
xchg
add
aas
clc
test
cld
xchg
push
cmp
xchg
lret
pop
out
mov
jns
dec
cmp
leave
imul
sub
xor
mov
adc
inc
or
xor
inc
repnz
xchg
push
jecxz
xchg
orl
clc
mov
fcomip
inc
jb
cmc
lods
sbb
xor
jge
dec
ja
fsubr
sarl
xchg
jo
mov
gs
je
mov
and
mov
icebp
push
adc
hlt
outsl
aam
add
add
mov
and
mov
imul
add
arpl
faddp
inc
mov
popf
loope
mov
lock
xor
sbb
lods
xor
and
faddl
mov
jns
push
aaa
sbb
dec
stos
and
popf
mov
in
inc
dec
lahf
mov
sub
cmp
notb
pop
push
mov
jp
inc
das
das
sbb
fnsave
inc
int3
ret
mov
pop
icebp
fsubl
dec
test
negb
cmp
push
sub
dec
movl
lret
and
sbb
dec
jb
insb
daa
push
mov
rorl
insb
int
pop
mov
push
adc
cmp
push
popa
inc
cld
pop
add
stc
in
dec
mov
pop
jbe
xchg
mov
xchg
pop
push
ldmxcsr
push
lea
pop
mov
add
xchg
les
in
pop
call
scas
xchg
repz
mov
ja
jle
call
ret
xor
pop
movsl
cmp
icebp
cmp
xor
enter
mov
cmpsb
insl
idivl
pop
mov
leave
cld
inc
jecxz
hlt
mov
mov
out
adc
push
mov
xchg
mov
out
push
xlat
mov
inc
pop
pop
sub
popa
inc
scas
cmp
mov
pop
int3
sahf
fbstp
pop
pop
pop
pop
cwtl
jmp
movsb
pop
movb
dec
in
and
push
jle
scas
inc
inc
hlt
pop
pop
push
dec
push
jl
fwait
aas
mov
pop
imul
paddsb
pop
jns
mov
adc
xor
in
call
pushf
sbb
xor
dec
fists
cmc
adc
arpl
and
pop
imul
ljmp
adc
push
imull
cwtl
lea
loopne
fadds
inc
popa
jle
xor
xor
fmull
fcomps
sbb
test
fstpl
int3
jo
movsl
mov
or
imull
jp
test
mov
pop
sub
testl
inc
push
add
aaa
push
pop
sub
dec
adc
jno
mov
pop
pop
bound
mov
cmp
cmc
push
pop
mov
gs
jle
sbb
mov
aad
lods
xchg
repnz
rorb
test
cmpsb
jecxz
imull
ds
rcrl
ljmp
or
push
push
addr16
push
push
inc
push
push
inc
lods
popa
stos
pop
cmp
out
push
cwtl
xchg
push
sahf
insb
add
push
jp
pop
lret
sub
adc
sbb
mov
xchg
or
push
sub
push
insb
sub
fsubs
push
jns
popa
sqrtps
push
cmp
dec
and
mov
and
and
ss
cwtl
adc
ret
pushf
xor
lcall
pop
xchg
mov
loopne
out
loopne
imul
in
jmp
data16
add
fidivrl
int
inc
dec
jo
pextrw
xchg
fstl
negb
cmpsl
test
or
push
shrb
and
sub
xchg
fadd
outsl
sub
mov
movsb
lds
lahf
test
aam
lea
inc
adc
sti
xchg
push
pop
aas
and
loop
jl
arpl
add
arpl
inc
jmp
mov
inc
mov
aad
sub
pop
pop
sub
mov
aad
push
push
inc
adcb
dec
adc
pop
cmpsb
xor
in
int
test
in
js
outsb
fs
ficomps
add
pop
xchg
push
ljmp
in
int
sub
mov
mov
int
pop
or
adc
push
in
and
xchg
mov
movsl
bound
xor
inc
imulb
xchg
jo
std
xchg
inc
mov
fisttpll
rcll
scas
inc
jge
outsb
adc
xchg
add
mov
push
ja
xchg
add
cmp
inc
inc
xor
mov
or
lahf
push
push
mov
fsubr
sub
cmpsl
dec
xor
xor
lret
inc
sar
push
popa
add
push
mov
or
mov
mov
rclb
icebp
push
mov
xrelease
sbbb
insb
in
push
xor
fwait
out
add
test
out
enter
sbb
xor
dec
jae
or
jg
sub
mov
call
push
pop
ret
scas
xor
push
inc
dec
fs
sti
nop
jge
aas
ljmp
into
sub
push
mov
test
loop
js
and
inc
sahf
addr16
movsb
movb
mov
cmp
test
push
mov
cmp
xor
std
adc
insb
xchg
rcr
clc
int
jl
aad
mov
out
insb
cmp
test
pushf
mov
add
jb
adc
sbbb
push
adc
es
xchg
out
out
sbb
jle
enter
stc
leave
push
pop
pop
ret
into
xchg
loop
fstps
in
or
jmp
sub
sub
imull
lods
out
outsb
pop
rcrb
jmp
outsl
push
jle
push
mov
ja
notb
sbb
pop
jp
push
inc
fldenv
pop
cmp
pop
loopne
ffreep
repz
cmp
mov
loop
or
lahf
pop
lea
inc
imul
in
pop
outsl
jmp
xchg
out
andl
xchg
and
mov
pop
xchg
dec
mov
test
and
jns
jbe
mov
rcrb
cli
xor
xchg
mov
and
jo
inc
pop
fs
pop
adc
int
out
in
iret
pop
fdivr
or
enter
sub
cmp
clc
jno
repz
cmp
mov
sbb
add
pop
sub
mov
mov
fs
or
inc
mov
leave
test
cmp
xorl
fistpll
stos
dec
xchg
or
rol
pusha
dec
dec
lahf
loope
push
xor
xchg
int
fdivr
sbb
dec
dec
and
push
pop
cmp
mov
mov
test
pusha
cwtl
sti
adc
rclb
testb
loop
jne
mov
mov
ss
dec
rclb
inc
jne
add
push
test
outsl
and
cmpsb
inc
outsl
sub
xchg
aam
jns
je
cmp
mov
mov
jp
fldl2e
cmp
mov
inc
ds
into
fwait
jns
into
cmc
stc
aaa
cli
pop
sbb
imul
es
push
rorl
or
lahf
and
movsl
xchg
sbb
lahf
pop
mov
adc
pop
push
pusha
add
inc
out
je
ret
out
orb
pusha
push
inc
lcall
aam
inc
arpl
in
mov
test
inc
in
sbb
sbb
in
cld
push
in
mov
xor
mov
jge
xchg
sbb
loop
outsl
or
sub
stc
push
xchg
inc
xchg
xchg
iret
sbbl
test
jl
daa
sbb
adc
lods
cld
shlb
inc
pusha
mov
or
add
push
cld
pop
int3
and
lods
lcall
mov
insb
sarb
mov
cli
bswap
push
jb
pop
or
push
adc
aaa
mov
xchg
adc
test
outsl
lods
rol
iret
in
mov
mov
std
mov
test
js
mov
stos
sub
movsl
cmp
xor
jbe
into
cmp
pop
mov
push
mov
xor
enter
dec
scas
das
mov
pop
outsb
mulb
dec
je
dec
push
daa
arpl
cmc
outsl
dec
fildl
pop
aad
das
xor
sbbb
cmp
movsl
in
sbb
jecxz
sub
xor
in
ds
in
std
ss
ficoms
shr
pop
and
push
outsb
jb
jns
xchg
add
jmp
negl
push
mov
lea
add
inc
movsb
fstpl
xchg
mov
xchg
push
lret
mov
push
xchg
int
or
adc
shll
sbb
mov
push
mov
xchg
gs
lds
or
xor
pop
ja
jmp
nop
fsubp
out
sbbb
cwtl
fimull
test
scas
sbb
lcall
fwait
add
adc
add
daa
insb
mov
push
pop
fwait
loopne
gs
dec
popf
notb
dec
mov
dec
jmp
jne
in
inc
daa
dec
pusha
loopne
mov
push
int
xchg
clc
ss
ret
ss
sbb
dec
pop
xor
loopne
ret
lock
pop
cld
pop
out
xor
sub
stos
outsl
adcl
adc
test
adc
paddq
dec
adc
mov
aas
out
test
test
sahf
lret
notl
xchg
shrl
xor
jge
cwtl
xor
mov
pop
push
in
xchg
push
push
scas
xor
popf
movb
hlt
and
idivl
or
mov
mov
notb
enter
mov
fmull
outsb
es
mov
hlt
aam
dec
push
pusha
jg
stc
push
mov
lret
in
or
sbb
sbb
movsl
lcall
jle
pop
sti
lea
jecxz
lcall
xchg
inc
inc
inc
test
cmp
scas
shl
call
lods
sahf
pop
les
sbb
rcll
mov
add
stos
enter
aad
movsb
jl
lea
or
shr
xlat
xchg
or
bound
mov
sbb
sahf
add
and
arpl
xchg
dec
mov
inc
jmp
inc
jo
push
jbe
aas
mov
daa
lea
or
out
inc
enter
js
pop
xor
xor
loope
xchg
enter
mov
or
dec
jae
sbb
inc
aas
sub
fwait
fwait
je
jb
sub
push
xchg
push
xor
incl
cmp
loope
dec
add
fsubs
mov
clc
mov
adc
pop
jl
hlt
popa
aam
cmp
pushf
inc
jmp
rorl
cmpsb
adc
fs
add
push
xor
filds
mov
push
pop
jge
imul
aad
xchg
int3
inc
lea
aaa
int3
and
or
pop
ret
jns
sub
test
mov
push
pop
shl
repnz
jne
cs
sub
ret
jmp
push
inc
popa
sub
inc
je
outsb
dec
xchg
repz
pop
jnp
adc
je
add
inc
in
loope
clc
push
inc
xchg
xor
lods
sarl
xchg
sbb
outsb
push
pop
pop
sub
inc
or
jbe
jb
sub
dec
js
js
xlat
loope
arpl
adc
movsl
btc
in
scas
out
pushf
mov
fwait
sti
imul
roll
jb
mov
adc
insl
stc
std
sbb
arpl
push
fwait
jae
adc
fmulp
xchg
das
loope
mov
ret
xchg
adc
add
adc
outsb
sbb
ret
adc
adc
loop
lret
push
adc
bound
daa
push
jnp
outsl
das
test
pop
insb
mov
aas
int
mov
stos
dec
cld
rcr
rcl
cltd
in
inc
hlt
pop
push
mov
nop
push
add
int3
mov
ja
jno
jbe
outsb
sub
sub
dec
mov
xor
adc
fwait
int
fcmovnbe
orl
push
jge
dec
aaa
lea
pop
aam
out
lcall
lret
es
lcall
in
mov
dec
add
out
out
push
sub
fldcw
mov
xor
add
pop
out
push
jmp
movsl
clc
sbb
mov
pop
mov
pop
movsb
int
pusha
lods
and
shll
push
rcrb
daa
mov
int
sbb
sbbl
mov
xchg
sbb
cmp
cmpb
fsubrs
add
insl
and
xorb
push
inc
mov
insb
out
sahf
shlb
xchg
mov
in
cmp
lea
mov
mov
jno
in
push
or
mov
cmpsl
cltd
or
or
stos
pop
out
push
mov
fldenv
fdivrs
jno
test
hlt
adc
mov
cmp
aad
in
in
test
movsb
add
mov
aaa
sub
outsl
into
xchg
jae
xchg
test
inc
mov
repnz
inc
hlt
jb
mov
push
fdivrs
lods
cmp
shll
or
das
data16
das
jno
cltd
sub
sbb
mov
scas
pop
cmpsb
mov
xchg
lret
div
sahf
add
daa
mov
imul
jecxz
sbb
scas
cmp
push
in
xlat
add
imul
push
iret
push
dec
xchg
cli
sub
xor
push
pop
mov
inc
sbb
repz
push
xchg
dec
neg
xor
mov
xchg
ljmp
inc
sbb
dec
iret
popa
fcoml
mov
aas
jno
inc
add
pand
fidivrs
outsb
and
xchg
adc
sahf
xlat
jp
mov
lods
fs
stc
test
cld
push
adc
bound
aam
sbb
and
pop
lock
addr16
push
sub
nop
jnp
ds
mov
dec
lods
xchg
sbb
push
cmp
popa
xchg
cs
dec
xlat
dec
pop
or
inc
in
xchg
mov
fadd
lods
adc
pop
mov
add
nop
addr16
mov
push
popa
fildll
adc
outsb
lahf
or
jp
add
rolb
dec
or
adc
clc
arpl
rcll
jp
pushf
jle
mov
jle
or
mov
movl
pop
in
gs
sahf
outsb
mov
push
jmp
hlt
outsb
sub
lods
imul
or
pop
mov
or
dec
shll
mov
push
and
enter
repnz
jns
sbbl
cmpsl
mov
mov
call
sbb
mov
into
lret
jp
outsl
jmp
les
push
icebp
mov
popf
and
sbb
cwtl
sbb
je
push
jp
pop
jp
add
adc
dec
xchg
lret
and
movb
lock
fimull
fisttpll
adc
xor
cwtl
popf
xchg
xchg
hlt
stos
cmpsb
daa
xchg
pusha
and
or
mov
cmp
inc
add
add
and
cltd
or
jbe
or
sbb
pusha
dec
scas
push
rol
push
lret
ret
ss
inc
das
imul
lds
cmpsl
xor
lret
fldenv
inc
pop
mov
and
sbbl
fiadds
fwait
push
jmp
push
xor
push
out
mov
jp
mov
cmc
cmp
xlat
xchg
mov
adc
mov
bound
das
cmc
sete
aaa
movsl
fisubrs
mov
and
into
rclb
mov
sti
aaa
jecxz
ret
push
mov
add
pop
gs
bound
aaa
cmp
leave
push
mov
sbb
jne
sub
in
test
into
xor
clc
xchg
inc
sbb
shl
fistpll
loope
or
mov
pop
lret
sub
sub
les
xlat
sub
xchg
sub
mov
cs
call
int
adc
jb
jnp
pusha
xlat
inc
xor
jmp
add
xor
adc
mov
cmp
bound
mov
mov
test
iret
fwait
xorl
xchg
mov
cmp
inc
and
mov
test
movb
ds
mov
push
lcall
lock
leave
and
nop
scas
stc
xchg
jecxz
incl
dec
jae
jge
out
add
cmp
sbb
inc
dec
cmp
or
jnp
inc
cld
pop
outsb
xchg
orl
or
cmp
lcall
sbb
add
sub
data16
andb
pop
popf
xchg
je
xor
xor
sarb
mov
xor
or
inc
scas
pop
pop
imul
loop
cli
loope
insb
inc
or
rol
fistpl
mov
dec
dec
sub
pop
fwait
orb
jae
in
mov
dec
out
outsl
xlat
inc
pusha
adc
rorb
or
mov
out
je
clc
jp
pushf
sbb
sahf
push
push
push
cmp
jge
mov
jl
jae
fisubl
lret
mov
aas
adc
mov
mov
adc
or
cwtl
imul
adc
jae
mov
jnp
popa
push
add
jae
dec
push
push
push
fdivrp
xor
adc
dec
mov
das
pop
pop
push
movsl
sbb
jl
fadd
xor
adc
in
cmp
dec
inc
sub
scas
inc
push
sub
dec
dec
movsl
les
outsb
add
add
xchg
pop
scas
and
mov
lods
int3
mov
bound
push
xor
sub
nop
aad
arpl
mov
les
sahf
shll
mov
jp
pop
repnz
mov
es
xchg
ja
stc
cmp
mov
jle
pop
mov
jp
cmpsl
add
movsl
loopne
add
decl
jmp
orl
pop
and
and
out
loopne
mov
mov
mov
sbb
mov
sahf
sete
add
pop
xor
lods
fadds
js
int
loope
pop
pop
push
cmpsb
mov
and
frstor
in
or
push
jge
insl
jmp
sarb
cmpsb
pop
mov
lahf
mov
or
aam
mov
jo
loopne
add
pop
or
test
daa
orb
scas
je
adc
bound
or
test
fnsave
std
sub
push
sub
or
fists
pop
stos
sbb
push
xor
inc
repz
jl
imul
sbb
jle
mov
mov
cwtl
xchg
mov
mov
pop
out
xorb
xor
adc
push
jmp
movsl
cmp
ja
sti
loop
sbb
jg
fcmovnu
fcomps
fisubl
and
in
mov
aas
push
je
and
mov
push
jmp
es
mov
or
inc
xchg
dec
jae
insl
pushf
pop
scas
xor
sarb
je
idivl
or
popf
xor
es
cmpsl
es
push
adc
jp
mov
ja
cmp
pop
mov
or
std
cmpsl
pop
in
inc
rcll
sbb
in
ja
iret
dec
sub
cmp
adc
test
mov
in
push
repnz
js
jl
in
aaa
aas
mov
jge
outsl
jo
or
jb
inc
sahf
pop
aaa
iret
push
int3
jmp
inc
lods
pop
sub
jmp
jne
ds
in
and
lahf
stos
test
push
jle
push
repnz
out
xchg
lds
adc
enter
lea
call
push
jle
testb
mov
mov
imull
ss
mov
aad
xor
xchg
mov
and
push
sub
sub
dec
xor
add
jle
push
rcll
xchg
push
cmc
jp
jne
mov
cld
lahf
inc
imul
cmpb
addr16
xchg
cmp
cmp
push
cmp
test
shlb
xlat
jle
push
movsl
ret
sbb
das
dec
lods
pushf
cltd
dec
push
loop
add
xchg
aam
inc
push
adc
push
repz
jmp
js
xchg
dec
or
lods
into
ret
mov
jle
js
inc
xor
push
fidivl
test
test
data16
sub
add
inc
cmp
cmp
adc
push
nop
push
out
in
or
xor
sub
pop
sbb
sbb
add
lcall
dec
xchg
jge
xchg
das
add
popa
test
sub
push
imul
fwait
add
jmp
mov
and
gs
mov
cli
fdivrl
adc
fwait
es
rclb
aas
push
or
out
dec
xchg
cmp
or
mov
mov
out
cmp
xchg
ffree
and
aad
jb
cmc
sbb
mov
sbb
sbb
or
or
test
subl
in
adc
jno
scas
xchg
or
mov
movsb
or
in
scas
jge
add
enter
jmp
ret
push
data16
lods
iret
dec
imul
into
jl
sub
and
mov
jne
and
sbb
insl
test
in
adc
push
aad
xor
mov
xchg
outsl
mov
sbb
cwtl
add
pop
shl
push
in
cmp
das
mov
push
inc
mov
shll
popf
lods
mov
loopne
fwait
jle
jmp
or
cmc
xor
loopne
std
cmp
lahf
lahf
mov
ror
sahf
push
adc
mov
shll
insb
lods
je
dec
and
and
nop
pusha
fisttps
cmpsl
jne
xlat
push
imul
fs
pop
dec
jg
inc
mov
jns
inc
test
call
pop
adc
dec
into
push
mov
mov
cltd
inc
push
mov
loop
das
adc
xor
iret
cwtl
fs
mov
sbb
xchg
pop
jbe
add
sub
insl
sub
test
popa
mov
sbb
inc
xchg
ss
jg
inc
xor
sub
shlb
cmpl
dec
pop
push
or
jl
and
mov
decl
sbb
xchg
add
xor
dec
lret
sub
pop
jge
cld
popf
int3
xchg
arpl
test
in
inc
into
or
mov
push
ss
or
add
lahf
stos
inc
cmc
pop
jae
call
into
jmp
dec
fsts
mov
inc
fwait
out
sub
jo
outsl
stc
pop
jno
imulb
orb
adc
ret
mov
push
imul
push
xchg
pushf
inc
push
cmpsl
push
jp
sub
movsb
mov
push
sub
call
shll
cmc
cwtl
jnp,pn
mov
jnp
ret
adc
je
insl
stos
rclb
pop
hlt
jne
or
test
push
lret
push
sub
ret
lods
xchg
push
mov
in
fs
in
jno
xor
aam
lahf
or
popf
sub
jnp
pop
scas
mov
dec
push
into
sbb
cmp
outsl
push
xlat
ret
std
subl
push
push
jecxz
mov
ffree
dec
add
js
jmp
inc
pop
mov
int
cmp
mov
aas
jno
xchg
lret
popa
jae
pop
mov
dec
popa
daa
add
xor
insb
test
mov
adc
call
dec
jae
call
dec
jns
lret
aaa
mov
gs
sub
popa
adc
cmp
sbb
pushf
subl
lret
aaa
mov
sti
pusha
jle
mov
les
dec
mov
sub
pop
mov
test
std
and
dec
jmp
xchg
add
inc
roll
push
adc
or
push
push
fistpll
jo
dec
out
push
xor
lcall
adc
cmpsb
push
nop
fwait
pop
dec
pop
out
into
pop
push
jl
push
pushf
cmp
cmp
sub
xchg
cwtl
mov
outsb
cmp
int3
mov
jne
push
xor
in
ljmp
lret
ss
dec
mov
test
test
mov
std
aad
clc
xor
or
sbb
in
jnp
sahf
push
in
mov
and
ljmp
lock
pop
sbbb
and
pop
ja
test
sub
jbe
data16
pop
jbe
sti
and
xchg
and
or
cmp
ret
call
das
push
cmp
iret
sarl
or
rcl
adc
dec
xchg
repz
and
jmp
fisubs
sbb
jl
xchg
cmc
fldlg2
pmaddwd
inc
stos
repnz
insb
mov
sub
jne
pop
sbb
mov
ja
inc
daa
pop
lods
fdivs
xchg
push
xchg
leave
fisubs
sti
mov
enter
mov
roll
mov
sub
js
dec
fiadds
das
mov
add
fnstcw
loopne
mov
std
cmp
stc
push
aam
ficomps
loope
movsl
or
stc
push
and
sahf
fnstsw
or
mov
jle
faddp
hlt
inc
adc
dec
xchg
jg
sbbl
inc
cmp
sbb
mov
cmc
pop
jns
pusha
sbb
push
inc
fdivr
mov
mov
ficoml
outsl
mov
cmpsb
mov
stc
pop
cli
fists
cmpsb
adc
push
hlt
adc
fwait
stos
pop
mov
std
stos
icebp
xchg
pusha
add
xchg
dec
mov
ret
pop
jae
adc
test
loop
paddw
lods
mov
popa
and
sub
icebp
les
add
inc
sub
add
pushf
outsl
call
imul
outsl
inc
push
cmp
pushf
scas
pop
mov
test
xor
inc
mov
jnp
ret
dec
insb
fwait
gs
shlb
mov
add
pop
cmp
clc
mov
bnd
push
es
sbb
int3
hlt
dec
stos
xor
pushf
mov
std
shlb
or
mov
fnstsw
test
xchg
sub
test
ret
jmp
lahf
sahf
jl
mov
cmp
mov
stos
dec
pushf
jl
push
cltd
jns
mov
popa
movl
jo
enter
push
add
jae
xchg
sub
mov
pop
fcmovu
dec
cmp
push
sub
inc
and
dec
push
aad
ja
adc
sti
clc
xchg
mov
push
aad
or
movsl
and
lret
ret
neg
data16
pop
and
pop
sarl
nop
mov
stc
andb
cmp
jns
xchg
adc
push
sub
mov
std
cmc
lods
shll
aas
stos
jge
or
xchg
mov
or
pushf
fsubs
and
pop
adc
pop
test
mov
sar
lret
imul
in
imul
xor
sbb
into
popf
xchg
pop
imul
xor
stos
push
mov
cs
loope
push
cmpsb
bnd
or
test
push
ror
pop
into
inc
xor
xor
fiadds
stos
jnp
mov
je,pt
xor
jle
je
mov
jbe
ljmp
inc
scas
ret
or
xor
nop
xchg
pop
int3
add
popf
out
fimull
stos
mov
xor
out
test
test
adc
push
push
pushf
fs
ret
lods
jnp
xchg
fisttpll
xor
mov
pop
push
movsl
sti
or
inc
fidivs
push
add
adc
mov
pop
adc
lret
jmp
fildl
xchg
ror
fs
adc
int3
pop
push
loop
out
outsl
pop
mov
sbbb
in
movsb
sbb
push
xacquire
hlt
mov
cld
popa
loop
rcrl
mov
js
push
in
popf
pop
in
daa
aaa
arpl
cld
imull
lahf
xchg
data16
and
test
sbb
je
pop
mov
push
shlb
jae,pn
mov
repz
outsl
inc
mov
lahf
or
loop
adc
test
xchg
push
xchg
inc
push
mov
add
mov
inc
mov
push
xchg
inc
ss
or
jb
add
popf
test
repz
cmp
mov
xor
mov
sbb
xor
stc
jo
cwtl
and
add
jno
jp
dec
shll
pop
push
bound
jbe
xor
mov
lods
and
cmp
jno
fcoms
sub
sarb
aaa
jo
mov
add
jns
cmpsl
pushl
sti
aam
fs
jne
cmovno
add
jnp
mov
bndldx
das
jle
stos
mov
fs
rcrl
lods
cmc
pop
jno
mov
add
sbb
leave
in
xchg
sbb
cmpsl
stos
imul
leave
jb
nop
je
mov
test
cmc
lock
mov
test
test
xchg
pop
in
pop
insl
sbb
add
int3
rcll
subl
jbe
mov
dec
psllw
iret
xchg
pop
cld
mov
xlat
ja
pop
imul
mov
push
jno
sti
fwait
sbbb
repnz
push
adc
pop
mov
out
iret
in
pxor
test
dec
cmpsb
or
sahf
adc
sbb
inc
mov
fisubs
dec
inc
and
mov
in
lret
filds
fs
adc
rorb
jmp
das
sbb
push
cmp
jns
jbe
xchg
aad
fnstenv
pop
pop
in
hlt
fmuls
cmp
jg
or
mov
jne
imul
movsl
leave
add
jnp
imul
and
mov
fistps
rcr
pop
jmp
mov
mov
out
add
inc
daa
icebp
ret
call
mov
add
xchg
pop
cmp
mov
or
lea
pop
xlat
cli
mov
mov
mov
add
movsl
add
nop
les
imul
jmp
sbb
jbe
mov
testl
or
add
fs
sti
ds
xchg
mov
addr16
mov
dec
pop
jb
pop
test
aaa
lahf
or
mov
sbb
aad
clc
xor
cld
iret
mov
popa
sbb
into
inc
and
aas
add
mov
in
cmp
pop
push
xchg
call
loope
in
ja
adc
inc
mov
addr16
pop
pushf
les
orb
orl
andb
or
push
cmpsl
dec
movsb
add
scas
cltd
movsb
sbb
xor
dec
sar
loop
jl
add
inc
leave
add
imul
xchg
fiadds
repnz
nop
pop
lcall
clc
xor
push
add
nop
sbb
aam
cmp
dec
mov
ja
mov
dec
sbbb
xor
xchg
scas
ja
cmpsb
in
push
push
push
scas
sbb
push
adc
jno
cltd
xor
push
sbb
inc
sti
or
add
arpl
cmp
lret
in
jl
push
push
loope
clc
cwtl
dec
jle
fisttps
test
int
push
sbb
lret
loope
out
out
loopne
andb
jge
fisubs
ficompl
daa
jg
dec
arpl
mov
pusha
jnp
inc
leave
es
test
mov
movsl
imul
mov
iret
dec
int
in
test
cmp
sbb
cmp
push
inc
push
push
push
jg
call
lret
rcrl
mov
repnz
mov
mov
lcall
insl
imul
jnp
pusha
xor
repz
add
xchg
loope
sbb
jnp
jl
aad
out
sti
fwait
aaa
and
test
imul
orb
xor
pop
jb
popa
mov
pop
push
add
insb
push
jae
out
call
mov
push
inc
pusha
xor
lahf
push
dec
cmp
or
mov
cwtl
mov
imul
std
sub
jne
outsb
cmp
push
out
loopne
and
hlt
push
pusha
sub
outsl
rclb
and
sbb
adc
sub
pop
hlt
insb
lret
repnz
lods
adc
repnz
sahf
scas
pop
in
scas
cmp
push
aaa
jnp
lods
ret
cmc
dec
imul
mov
dec
inc
and
call
stos
cmp
cmp
movsl
lock
pop
push
jmp
cmp
mov
jl
push
sub
lock
push
cmp
and
pop
fs
and
aad
and
inc
or
insb
leave
cmp
xchg
mov
pop
shlb
mov
jae
jmp
out
pop
lahf
adc
push
ds
push
negl
icebp
data16
lods
in
inc
ja
insb
mov
sbb
push
imul
into
jl
es
cwtl
fsubs
or
fistpll
inc
enter
mov
test
inc
lcall
adc
cmp
out
jne
push
out
fisubl
add
dec
pusha
negb
ds
out
mov
shll
mov
dec
test
adc
sbb
out
cmp
xchg
fdivrs
jl
mov
lods
shll
push
xchg
mov
fisttps
xchg
data16
in
jne
dec
push
xchg
adc
push
mov
rcr
or
mov
sbb
fucomi
cmp
ret
js
jae
adc
mov
push
pop
xchg
addr16
lods
xlat
ret
pop
lds
xlat
pop
mov
fs
inc
iret
sub
orl
push
push
jno
jge
mov
inc
jbe
xchg
movsl
sub
enter
fdiv
es
mul
mulb
pop
mov
mov
rcll
push
testl
sbbl
cld
jmp
xor
icebp
rolw
mov
fdivr
cmpsl
add
packuswb
sete
in
cmp
fwait
inc
test
andl
mov
dec
cmp
inc
xor
jl
loopne
dec
xor
xchg
shll
pop
add
out
xchg
popf
jmp
jb
lahf
rorb
xor
lahf
test
lods
movsb
and
mov
pop
push
or
insl
aam
test
int
jno
pop
pop
dec
scas
cltd
and
jns
push
add
inc
mov
mov
hlt
add
cmp
xchg
in
pop
adc
mov
xchg
out
stos
inc
pop
dec
popf
aas
test
rcr
iret
js
mov
mov
push
xchg
pop
inc
add
xlat
pop
jg
sub
lahf
loope
xlat
std
cmp
lock
push
sarb
lret
cmpsb
push
sbbl
cmp
pop
jne
dec
fstl
add
dec
and
jecxz
mov
icebp
arpl
sub
mov
pop
pop
mov
or
test
mov
movsb
ret
aaa
pop
movsl
cmpsb
or
or
rcrl
pop
and
imul
popf
fwait
lcall
popl
lock
cmp
pop
and
xlat
add
mov
loopne
addl
call
sbb
sub
lcall
cmovs
test
mov
adc
mov
mov
cli
insb
xor
pop
fdivl
sahf
pop
enter
js
pop
mov
lea
in
repz
sbb
pop
push
mov
or
ror
stc
repnz
cmpsb
call
jns
fidivrs
das
jbe
subl
pushf
in
lret
dec
insb
dec
daa
mov
mov
dec
cltd
movsl
sub
xchg
jno
dec
sbb
hlt
pop
dec
cmp
pop
daa
call
jo
or
cltd
cmp
mov
fstl
ret
xchg
pop
leave
add
je
pop
and
out
add
xlat
fldt
stc
or
push
pop
add
xor
mov
jmp
ror
loope
mov
pop
in
mov
bndstx
or
push
mov
outsb
shufps
add
jle
sbb
jmp
das
nop
mov
aam
mov
push
add
sahf
js
sti
inc
bswap
pop
movsb
dec
stos
mov
scas
shlb
dec
cmp
and
fadds
push
xor
jne
scas
jno
fistpl
mov
jle
jl
push
cmp
fbstp
jae
push
or
shrb
push
out
adc
clc
xchg
xchg
sbb
popa
sub
je
jp
sub
mov
mov
call
cmp
pop
inc
outsl
inc
push
xchg
add
les
jecxz
xor
shlb
push
adc
pusha
mov
popa
jg
sbb
add
inc
daa
outsb
scas
sti
mov
aam
test
xchg
sbb
or
sbb
jle
fucom
adc
icebp
sbbb
movl
jbe
jbe
cs
imul
pop
xchg
rclb
ret
xor
or
iret
push
popa
hlt
xor
pusha
push
in
imul
aad
mov
jns
or
xor
jae
jne
inc
daa
cmp
xchg
subl
jo
push
inc
cltd
scas
jg
shll
and
daa
cmc
addr16
inc
fnstcw
lods
inc
cmp
xor
xchg
push
shrl
scas
mov
movsb
ss
ret
popa
mov
lods
add
cmp
sti
mov
xchg
jl
lock
fildl
dec
and
sbb
cltd
push
sbb
push
decb
add
xor
mov
pop
adc
push
insl
pop
pop
out
pop
sub
subb
call
dec
push
clc
dec
pop
push
xlat
lock
cmp
int3
cmp
daa
and
push
int
inc
push
sub
data16
fsubs
xor
and
xchg
fiaddl
jmp
test
icebp
out
jb
xor
sbb
xchg
repz
popfw
sbb
mov
sbb
out
dec
cs
and
xor
dec
sti
push
repnz
in
mov
adc
movsb
in
xchg
icebp
add
sub
push
sti
and
cmc
adc
dec
cmp
mov
stos
sbb
cld
inc
xchg
mov
lret
cld
aam
cmp
dec
mov
push
outsl
in
sub
cwtl
jo
enter
and
pop
xchg
xchg
fldl
sti
lods
mov
iret
dec
dec
pop
in
cmp
es
xor
xor
xor
dec
and
pop
ret
les
push
cmp
enter
lock
dec
jne
push
stos
es
pop
shlb
pop
xchg
outsb
sub
cld
push
mov
mov
pop
jle
stos
and
push
aam
sub
cmc
sub
mov
fidivrs
mov
pop
jne
stos
sub
sub
out
pop
test
pop
iret
mov
dec
hlt
xor
cwtl
mov
and
xchg
test
pop
mov
js
ss
jp
mov
pop
mov
xchg
mov
add
pop
pop
test
mov
sbb
out
mov
push
inc
aad
xchg
or
lahf
lds
inc
mov
imul
aaa
test
adc
ja
negl
out
cld
rorl
pushf
dec
movsl
fidivl
and
lret
fsub
sbb
mov
stc
imul
mov
pushf
adc
jle
xor
fucomp
xor
sbb
dec
scas
push
add
cmpsb
cmp
shll
push
and
sbb
lcall
sub
scas
test
mov
push
jne
cli
jmp
pop
insb
add
xor
and
mov
mov
mov
frstor
cmp
mov
dec
rol
xor
and
sub
mov
mov
inc
leave
mov
jo
enter
jl
inc
adc
insb
dec
lahf
stos
push
in
aaa
dec
mov
ds
in
xchg
movsl
test
es
push
loope
dec
cmp
xor
push
jmp
mov
sub
xor
jle
push
rcll
sbb
test
adc
das
mov
aaa
fidivs
cmp
push
test
std
push
mov
popa
popf
or
shr
and
adc
dec
add
fstpt
jne
das
in
gs
aas
and
lea
mov
ds
jmp
push
jle
pusha
cmp
and
rclb
fbld
aas
mov
loop
ljmp
out
jge
bound
mov
sahf
pop
pop
stos
aad
ds
adc
loopne
pop
pop
out
es
popa
xchg
aas
dec
inc
adc
inc
cmpsl
test
mov
int
lods
mov
jg
sub
adcl
sbb
add
in
subb
lahf
mov
movsb
ljmp
scas
popa
xchg
xor
js
lds
movsl
popa
lods
pusha
or
fsubl
jecxz
rcll
or
xor
push
popa
xor
subb
jp
add
adc
bswap
pop
hlt
and
sub
test
loopne
lods
dec
imul
out
ret
mov
add
ficompl
scas
stos
call
and
cmpsl
icebp
pusha
xor
test
xchg
adc
sbb
xor
into
add
lods
push
xor
mov
icebp
fwait
pop
pushf
pop
iret
cmp
xor
mov
aas
push
inc
sbb
out
sbb
xlat
notb
push
gs
dec
ret
outsb
sbbb
mov
jg
shlb
add
dec
and
loop
insl
xor
shll
mov
mov
cltd
popf
fistl
push
inc
daa
sbb
mov
pushf
outsb
sub
sbb
rorb
in
push
adc
jae
push
push
dec
push
push
aas
push
cmp
and
sub
mov
pop
lahf
sbb
mov
xchg
fildll
bound
or
xor
cmp
and
push
les
orb
mov
ds
dec
fadd
call
addr16
movsl
adc
jne
fldenv
rcrb
mov
loopne
push
push
rolb
loope
lcall
cmpsl
sub
adc
jo
in
adc
loopne
jge
std
std
dec
jg
pop
push
jnp
fucomip
mov
mov
ret
pop
fstpl
xor
ffreep
xor
ljmp
fs
stos
dec
pushf
cmp
imul
mov
imul
hlt
sub
dec
push
push
je
arpl
sub
sarl
mov
pop
fimuls
aas
lret
dec
sub
data16
cmp
sahf
rcrl
sub
std
cwtl
or
push
and
popl
movsl
ret
and
std
pop
xchg
and
imul
ja
add
sub
in
lds
es
add
dec
jle
cli
int
mov
mov
clc
out
nop
mov
arpl
dec
push
jno
fstpt
shufps
cmpl
fldl
push
xlat
insl
test
std
inc
mov
or
xor
xorb
sub
mov
in
inc
pusha
popf
addr16
cmp
dec
mov
lea
ds
scas
mov
xchg
adc
mov
lea
cmp
das
ja
enter
xchg
aad
fadd
sbb
xor
inc
cmp
jp
adc
add
sbb
mov
push
or
inc
syscall
mov
mov
rcrl
jmp
jnp
dec
mov
lcall
xchg
repnz
ds
sti
jne
mov
imul
mov
xor
xchg
adc
ss
fldl
adc
clc
stc
ret
mov
loope
pop
insl
pop
xchg
push
mov
mov
add
mov
incb
push
std
ret
xchg
icebp
std
xchg
mov
mov
out
mov
jnp
loope
in
loopne
lea
arpl
into
lcall
mov
repnz
int
repz
test
add
cltd
das
cs
pop
push
stos
scas
cli
popf
int
int
mov
loopne
dec
or
jo
rcll
std
pop
and
movsb
sub
jge
ficompl
inc
mov
cmpsl
mov
mov
xlat
mov
dec
push
nop
mov
and
and
sbb
dec
imul
or
sahf
xchg
data16
insb
scas
xor
jl
mov
pop
movsb
xchg
imul
jp
add
fsubs
jge
out
cwtl
fwait
and
push
xchg
test
lock
xor
icebp
xchg
inc
stos
mov
cmp
push
inc
and
into
jne
xor
loopne
dec
mov
mov
jl
movsl
insl
faddp
sub
xor
adc
ja
xchg
fcmovu
push
adc
pop
insl
int3
nop
jbe
aas
sub
inc
mov
or
movl
sub
inc
cmp
out
pop
lea
lods
out
mov
fs
or
in
jbe
fdivr
sub
jmp
xchg
dec
push
gs
in
jmp
xor
and
fwait
fs
push
xor
or
cmp
add
pop
pop
adc
ljmp
cli
mov
imul
adc
fnstsw
fsubs
sbb
dec
pop
jmp
mov
adc
aad
repz
and
xor
and
lods
jmp
insb
inc
pop
pushf
mov
or
sub
loopne
pop
jg
inc
jae
sub
arpl
add
sbb
cmp
dec
push
int
rcrb
pop
int3
and
jle
sub
jno
and
shrb
adc
in
mov
adc
fldcw
push
mov
push
mov
jo
cmp
mov
adc
mov
and
ficomps
push
adc
fmulp
icebp
aaa
sbb
lcall
pop
in
mov
stos
xor
pop
jge
adc
lret
popf
icebp
lods
in
mov
cltd
inc
add
mov
push
cwtl
mov
jnp
adc
out
stos
loopne
shll
aaa
popa
ret
mov
add
pop
sbb
aas
orb
cmp
fdivl
pop
jno
call
or
pop
jns
lret
push
outsl
inc
inc
jle
adc
cmpsl
dec
sub
inc
push
rorb
test
lock
mov
in
dec
or
stc
outsl
xor
push
dec
xlat
mov
push
xor
adc
inc
and
push
or
jmp
mov
and
add
addr16
jp
cmpsb
or
push
pop
pop
sbb
mov
ljmp
push
pop
pop
divb
popf
xchg
mov
adc
sub
sbb
sti
mov
loop
lcall
sbb
pop
ds
cmp
xchg
or
cmpsb
in
mov
push
aaa
mov
fs
sbb
faddl
in
pop
lret
pop
fcoml
fiaddl
mov
enter
rclb
pop
fnstcw
xor
and
aad
leave
xchg
movl
ss
shr
jae
mov
icebp
sti
jo
lahf
sar
lock
mov
cmpsb
cmp
icebp
test
pop
jp
nop/reserved
adc
fldt
or
out
out
adc
loopne
mov
and
cmpsb
push
xor
xchg
loope
jnp
rorl
xor
jno,pn
hlt
sub
push
or
stos
out
in
cmp
mov
inc
fcomip
pop
cmp
adc
adc
call
jne
repz
sub
leave
adc
fsubr
fimuls
pop
pop
jo
imul
out
push
inc
inc
sub
sub
dec
call
or
test
inc
inc
adc
lods
cwtl
incl
pushf
add
push
cmp
jns
aad
push
in
stos
mov
js
into
out
cmpsl
imul
sub
pop
out
mov
andb
lock
cwtl
pop
int
jne
lock
fcoml
movsl
enter
call
sbb
aad
scas
and
lock
neg
xchg
loope
lret
iret
mov
xor
push
sub
fcmovb
ja
gs
addl
lock
lahf
dec
aaa
sub
push
jnp
cltd
or
push
outsb
inc
imul
cli
test
pop
cmp
and
out
mov
xchg
aas
ss
cmp
loop
pop
addl
pop
loopne
outsb
add
xchg
loopne
push
sbb
out
clc
fwait
mov
fsubl
leave
inc
mov
mov
inc
fs
xlat
dec
adcl
popa
sub
push
xor
call
xlat
pushf
mov
imul
sti
mov
inc
stc
cmpsl
ret
pop
stc
xchg
call
cmc
movsl
lock
call
adc
push
shlb
loop
fsubs
mov
mov
loop
xchg
pop
sbb
jle
jmp
mov
inc
add
mov
cli
bnd
outsl
xor
push
test
cmc
lock
shlb
lret
jo
outsl
jae
cs
push
shll
addr16
xchg
cltd
cmpsl
add
lods
or
jb
pop
pop
xchg
adcl
iret
pop
add
addl
mov
imul
aaa
add
cmp
leave
adc
mov
fs
push
cmp
leave
dec
aas
and
cmc
cmp
cli
call
jae
pop
scas
popf
and
shl
ror
cli
dec
push
aaa
and
jae
mov
mov
stos
roll
out
mov
out
fnstenv
sahf
mov
enter
or
stos
add
push
ljmp
mov
pop
inc
xchg
pop
add
das
and
push
dec
xor
ret
scas
push
sub
mov
inc
jns
out
cmp
or
inc
cmp
or
vxorps
or
ret
push
roll
repz
rcrl
lcall
or
mov
lock
jge
lret
cli
push
xchg
aam
adc
incl
arpl
or
adcb
daa
pop
jns
mov
test
adc
xchg
test
jo
or
out
popf
stc
adc
jne
clc
les
test
rorl
jbe
mov
cmp
xchg
xor
cmp
aas
xor
xlat
or
jo
lods
mov
ret
pop
insb
ja
repnz
xchg
mov
stos
and
xor
cltd
push
out
cwtl
ds
jle
popa
hlt
jb
pop
movsl
std
clc
mov
sub
jge
adc
pcmpeqd
lret
insb
insb
pop
or
mov
imul
into
lahf
jmp
mov
adc
das
push
shrl
xchg
dec
loope,pt
repnz
mov
adc
xor
rclb
adc
aam
movsl
sub
in
mov
mov
cmp
jae
fbstp
das
and
dec
loop
inc
sub
loop
jb
dec
sub
roll
jns
dec
push
adc
or
stc
popa
mov
cmp
loope
push
pop
pop
jecxz
cmpsb
scas
jns
fistps
mov
in
repnz
adc
pop
mov
inc
ss
fs
pushf
xor
sbb
repz
xor
push
push
jb
pop
cmc
ret
and
and
jns
mov
xchg
mov
pusha
bound
sbb
lds
and
ficompl
jo
fistpll
jmp
mov
daa
add
mov
xchg
ret
or
rcll
lahf
mov
and
push
sub
inc
and
rorl
fdivl
mov
jmp
mov
mov
dec
sub
outsl
pop
les
lahf
imul
and
lea
fmul
pop
mov
test
dec
or
int3
and
mov
fisubl
add
lods
stos
lods
leave
mov
or
add
mov
cmp
out
es
cwtl
int3
popf
jp
cmc
ror
push
pop
out
aad
push
jmp
insl
scas
mov
mov
lcall
adc
scas
cmpsb
and
or
sbb
push
lock
dec
ficompl
mov
sahf
or
push
imulb
pop
lret
lret
in
mov
add
cmp
aas
jae
lcall
dec
sbb
dec
and
into
sbb
inc
xchg
ret
in
popf
xlat
sbb
xchg
or
cmp
pop
es
shrb
movsb
push
test
arpl
loop
inc
psubq
xor
xchg
sub
xor
rcll
pop
push
aam
das
cmp
cmp
test
add
int
lods
mov
xchg
pop
push
cmp
xor
test
test
aam
pop
cli
fwait
rcr
fs
fs
adc
push
ret
adc
mov
jo
movsb
mov
cmp
pusha
loopne
sbbb
dec
or
insb
cmp
adc
lahf
dec
sbb
sbb
int3
push
xlat
mov
and
pop
adc
cs
push
fstpl
fisubl
push
cmp
fidivrs
xor
xor
add
aas
les
test
insb
and
das
in
mov
lret
pop
cltd
into
xor
and
jecxz
cmpsb
xchg
lods
xchg
jne
mov
xchg
add
mov
cmpsb
cmp
push
cmpl
dec
dec
mov
push
jnp,pt
pop
sub
push
arpl
add
adc
dec
ds
jg
mov
sbb
add
cmp
fucomip
pop
aas
pop
jbe
sahf
mov
adc
movsl
mov
cmp
and
fs
insl
std
xchg
cmp
ja
fucomp
and
enter
mov
push
jbe
aam
mov
pop
xor
clc
out
std
add
adc
inc
pop
cmpsl
pop
push
cs
test
popf
jmp
stc
lahf
push
cmp
inc
lcall
test
xor
fdivl
loopne
jns
ficomps
movsb
and
xor
test
xchg
fsubl
inc
out
mov
clc
mov
sti
mov
fsubp
sub
hlt
and
cmp
push
leave
out
pop
pop
adc
jmp
popa
mov
xor
into
xchg
mov
fwait
cmp
add
jb
and
and
xor
add
lock
insb
jae
adc
mov
mov
xchg
mov
jle
cmp
mov
aaa
push
dec
pushf
rep
popl
fs
xlat
sub
push
mov
aad
mov
inc
jecxz
insb
sub
xchg
sub
imul
jl
popa
xor
adc
cmp
ljmp
xor
enter
xchg
addb
cmp
xor
or
mov
idivl
cmp
cld
popa
cmc
xchg
or
sbb
pop
pop
sbb
dec
cmp
ret
movsl
add
and
xchg
scas
adc
pop
xor
pop
fildll
xchg
lahf
inc
jl
fwait
jns
cld
and
enter
cmp
divl
mov
xor
scas
das
ret
es
clc
hlt
test
rolb
in
and
es
dec
mov
mov
movsl
xlat
push
lahf
es
in
or
out
in
pop
push
pop
testl
jnp
and
ds
sbb
push
xor
mov
mov
xor
int3
shlb
cltd
lcall
int
std
jge
xchg
cltd
cmp
fwait
sbb
pusha
in
or
dec
cmp
xchg
aam
pop
mov
outsl
and
inc
and
scas
mov
fs
adc
lods
into
cmp
dec
dec
mov
mov
cli
cwtl
jle
hlt
outsl
in
imul
into
jmp
cwtl
movsl
out
inc
jb
add
xchg
in
cli
mov
ret
mov
hlt
negl
adc
inc
fstl
or
mov
jmp
lret
jae
push
mov
xlat
insb
jnp
push
cmp
and
ror
leave
aad
push
cli
mov
cli
cmp
jecxz
decl
nop
pop
test
insb
mov
out
mov
lretw
push
jae,pt
shr
das
push
xchg
xor
inc
ja
fdivr
ds
fnsave
rclb
sbb
jb
loop
lahf
daa
push
dec
into
sbbl
xchg
adc
ret
push
hlt
xchg
or
inc
test
or
insl
mov
jae
jae
test
pop
sub
add
insb
xor
mov
jne
inc
cmp
sub
add
add
xchg
fwait
push
push
mov
or
mov
cltd
push
xor
in
fs
pop
or
in
fnstcw
jne
sbb
xchg
cmp
int
xchg
insb
push
lahf
test
loop
cmc
lcall
dec
call
cmpsl
sbb
inc
mov
push
mov
lds
push
ds
xchg
call
movsb
jmp
cmp
icebp
movsl
mov
cmp
dec
xchg
das
outsl
hlt
clc
and
xchg
pop
dec
pop
aas
mov
push
mov
sub
inc
test
mov
dec
lds
mov
mov
mov
cmp
mov
adc
jecxz
cmp
outsl
push
pop
or
lret
cmpsl
ret
or
test
sub
or
adc
fdivs
mov
clc
rclb
sarl
xchg
pop
aad
or
jl
fidivrs
jns
mov
insb
ja
sub
jae
dec
dec
bound
in
jmp
cwtl
dec
imul
mov
fidivrl
mov
mov
cwtl
arpl
jo
and
stc
cmp
decb
dec
movsl
icebp
out
inc
sbb
xchg
negl
out
adc
loopne
sub
js
pop
out
hlt
clc
sub
inc
rorl
cmpsl
andb
xor
or
dec
sti
mov
hlt
sbb
ret
inc
iret
and
cmp
push
fmull
inc
or
ret
cmp
dec
pop
sti
aad
aam
in
icebp
imul
orb
cld
push
ss
in
in
sbb
mov
mov
push
repz
scas
roll
mov
inc
pop
xchg
push
add
cmpsb
sub
aas
mov
pushf
inc
sahf
sub
xchg
int
push
inc
pop
sub
out
and
int
push
ds
jno
cli
push
sbb
test
mov
in
lds
fs
lods
jbe
out
lret
push
outsb
mov
adc
sti
loope
movb
shll
mov
xor
fimuls
jb
mov
inc
jge
cmp
cmp
lds
push
mov
in
jp
in
cmc
dec
inc
push
das
nop
jmp
lret
push
xlat
loopne
iret
jb
pop
gs
add
mov
in
mov
mov
pop
cmpsl
outsb
shlb
sti
cmp
out
cmpsl
arpl
adc
andl
scas
push
jp
insl
sbb
data16
xchg
fnstenv
add
adc
mov
scas
or
mov
ja
mov
jl
sbb
mov
dec
fsubrs
les
stc
pop
insb
cmpsb
ljmp
and
add
into
cmp
mov
push
rorb
xchg
xor
sbb
mov
fdivrl
pop
jle
push
cltd
jge
push
icebp
pop
fsubs
repnz
jmp
mov
aaa
mov
or
jmp
xorb
imul
ss
mov
mov
add
and
pop
push
jo
fld
mov
ljmp
pop
jl
arpl
add
adc
jo
xor
test
jp
mov
scas
dec
cmpsb
mov
jno
mov
sub
cmp
cmp
cmpsb
cmp
dec
push
or
lret
sbb
push
gs
mov
sbb
sub
dec
ds
ss
sbb
in
sub
add
out
dec
jmp
mov
ss
aad
mov
add
or
in
bound
cmpsb
ret
pusha
out
cmp
stos
cmpsb
jmp
lcall
sub
sbb
jne
jmp
inc
cli
outsl
inc
jae
inc
pop
xlat
pop
push
ss
enter
das
pop
and
or
ror
cmp
xchg
pop
cmp
dec
cmc
in
daa
enter
ficoml
push
negl
or
std
stos
jbe
and
pusha
mov
xor
cmp
push
dec
sbb
hlt
push
sub
push
popf
lret
fidivs
jbe
jno
popa
mov
lret
test
clc
xchg
sbb
xchg
add
mov
lods
fdivrl
sub
outsl
pop
pushf
int
xor
cmp
inc
or
add
mov
cmc
push
inc
repz
cmpsl
daa
mov
dec
lret
mov
nop
std
xlat
cld
nop
roll
jb
icebp
sub
movb
ds
push
pushf
dec
mov
lcall
in
call
jno
sub
jmp
or
lock
bound
push
rolb
lahf
ds
mov
es
add
xchg
aaa
xchg
cmpsl
pop
mov
bound
sbb
stos
loope
shll
add
mov
gs
fwait
add
mov
pop
cmp
ds
xchg
imul
xorb
cltd
mov
cltd
mov
std
or
cmove
adcb
bound
inc
imull
sarl
mov
sub
inc
movsl
mov
in
mov
rclb
repz
mov
xor
in
stos
ret
dec
push
pop
adc
aas
mov
and
fsubl
aad
movsl
lods
sbb
fimull
sbb
xchg
mov
cmpsb
pop
pop
insb
iret
and
inc
in
xor
js
inc
sbb
push
push
shll
xchg
pop
mov
aam
mov
sarl
xchg
push
lcall
mov
ret
pop
jbe
cltd
les
cmp
adc
dec
sub
sbb
or
sub
push
push
push
dec
jl
imul
dec
adc
ficoml
pop
or
xor
jp
fwait
divl
out
inc
mov
repz
imull
xchg
xchg
imul
js
bound
out
mov
add
xchg
cmc
in
pop
lea
pushf
outsl
hlt
lret
fwait
xor
movsl
add
inc
decl
push
dec
jmp
inc
push
popa
jecxz
xchg
cmp
fmuls
jns
fwait
aad
pop
rcr
mov
sub
les
sbb
cwtl
xchg
inc
repnz
push
mov
pop
cli
mov
add
sub
ret
stos
pop
sbb
push
pop
sub
sub
mov
scas
inc
mov
cmp
nop
jle
mov
arpl
cmc
mov
dec
sbb
cld
jo
mov
roll
out
push
loopne
push
loop
and
mov
ror
inc
icebp
cli
outsw
mov
and
cmp
mov
sub
push
mov
adc
xchg
mov
mov
xor
xor
das
mov
adc
dec
and
incl
fstp
cld
mov
dec
cmpsl
sbb
cmc
call
fsin
cmpsb
aad
out
mov
push
jb
das
fs
mov
push
ja
jl
pop
and
pop
test
jo
adc
push
sub
je
std
mov
cmp
out
scas
out
mov
pop
outsl
sahf
mov
xor
pop
sub
lock
jge
push
insl
stc
mov
inc
flds
fbld
sub
or
cmp
cs
scas
dec
in
ljmp
push
pop
ror
mov
loop
inc
mov
fscale
mov
jae
sysret
call
mov
das
lahf
dec
cmpsb
jge
ret
nop
xlat
mov
push
mov
jg
imul
dec
add
pop
lret
sarl
imul
xchg
imul
cmpsb
jnp
pop
lock
sbb
push
outsl
das
movsb
andl
hlt
sbbl
dec
iret
dec
adc
xor
and
jo
jnp
pop
mov
and
test
sahf
mov
cli
jne
test
adc
mov
mov
std
xchg
leave
xchg
pop
sub
adc
jb
test
mov
test
xchg
xlat
adc
cmp
movsl
dec
mov
cs
cmc
add
mov
std
fisttps
xor
movsb
es
or
sahf
mov
fldt
jne
mov
xchg
mov
out
push
mov
repnz
aas
mov
out
scas
gs
clc
rorl
add
ljmp
sbb
repnz
sub
jle
sub
cmp
cmp
xchg
dec
lods
cmp
or
cmp
push
inc
pop
lret
jns
inc
mov
xor
or
mov
push
lret
enter
movsl
xchg
xor
and
mov
aaa
cmp
add
insl
sbb
mov
loopne
pop
dec
push
adc
loopne
push
jnp
mov
xlat
add
int
mov
sbb
mov
xor
sub
in
js
pop
jne
mov
je
xchg
jbe
movsl
jno
xor
cmp
add
mov
adc
mov
je
lds
jecxz
scas
insb
sbb
pop
lock
fisttps
sbb
mov
lock
lds
jb
jmp
xchg
lcall
sbb
push
and
and
cltd
rcr
std
adc
and
mov
jge
div
movsl
mov
rcll
mov
inc
jge
jae
arpl
cwtl
std
mov
fs
xchg
ror
in
push
imul
lock
cltd
js
sub
int3
mov
sub
pushfw
roll
stos
cwtl
cli
movsl
cmp
stos
mov
xchg
aad
mov
xor
imul
or
adc
inc
cmp
mov
out
pop
leave
xchg
negl
ss
and
iret
xor
fdivs
mov
push
push
mov
icebp
mov
lret
lds
shlb
sub
daa
xor
imul
sub
sbb
cmpsb
pop
cmpsl
loope
and
cmp
pop
xor
mov
pop
cmpsb
and
sub
cli
aaa
ret
xor
adc
adc
mov
or
bnd
and
out
test
xchg
cltd
inc
lret
addl
or
int
cmc
dec
gs
and
fcomip
push
sub
sarl
mov
mov
push
sbb
lea
sbbb
in
js
outsl
jne
mov
out
enter
or
int3
inc
mov
mov
and
icebp
cmc
pop
pop
sbb
cwtl
pop
int
add
xchg
and
mov
sub
mov
and
push
ljmp
ror
das
jae
imul
mov
add
sub
jg
xchg
jmp
test
lcall
add
dec
fistpl
pop
xor
jmp
dec
xor
jge
popa
xor
mov
sub
mov
cli
and
out
in
movsl
sub
cmp
imul
in
or
movsl
cli
insb
xchg
repz
dec
sbb
xor
jnp
mov
insb
push
arpl
add
in
xor
shlb
sbbl
je
ljmp
fwait
insl
xor
loop
mov
cmp
pop
push
sub
xchg
cwtl
mov
fs
shl
repz
nop
rcrl
mov
aaa
sti
pop
mov
fs
in
mov
inc
mov
mov
in
cmp
sbb
sub
cmp
mov
push
in
xchg
mov
sub
mov
mov
pusha
mov
dec
scas
and
sbb
mov
clc
jp
out
int
add
jno
mov
pop
lcall
xchg
fnstenv
adc
js
adc
test
or
fisubl
loope
xor
fwait
mov
mov
int3
mov
sub
ret
sbb
lock
inc
in
lret
imul
sub
call
mov
int
in
rorb
pop
test
pop
cmp
inc
or
in
lahf
and
add
jmp
push
and
hlt
gs
clc
pop
das
mov
push
lret
insl
aam
add
inc
mov
jns
imul
push
cli
insb
xor
inc
and
add
clc
cmp
jne
pushf
sub
push
lret
lret
push
mov
test
cmpb
adc
inc
cwtl
shlb
mov
outsl
jle
fs
popl
cli
insl
cld
out
dec
lods
mov
pop
push
dec
dec
mov
outsl
pop
jno
jl
es
fs
mov
xchg
insl
and
addl
lods
or
scas
inc
xor
xchg
push
mov
or
push
mov
fstps
cmpl
je
insb
pop
fnstcw
lea
scas
or
addl
pushf
gs
mov
call
dec
int3
mov
jl
inc
or
push
in
pop
lds
push
dec
pop
add
xor
push
add
cmp
dec
push
loop
int
inc
fimull
and
stc
ss
mov
lods
sbb
or
aaa
inc
mov
fldenv
shll
add
ja
bound
push
pushf
mov
cmp
inc
xchg
sub
pop
movsl
lcall
sub
orl
mov
sbb
pop
push
jbe
sbb
lret
xchg
test
rorb
mov
push
aas
xchg
mov
out
repnz
cmp
xor
int
sahf
pop
mov
jg
ror
mov
push
hlt
push
pop
mov
xchg
repnz
xor
daa
xor
das
andl
mov
gs
and
lods
push
in
int
into
add
das
popa
mov
pushl
shr
lahf
scas
sar
mov
xor
sbb
rolb
push
cmpsl
filds
xlat
xchg
testl
out
sub
jb
fs
xor
sub
mov
ljmp
lods
and
imul
lret
fnsave
xor
dec
lcall
or
xlat
push
fisubrs
repnz
pushf
dec
hlt
lods
cmp
enter
test
dec
mov
xchg
jecxz
jg
mov
pop
and
dec
and
dec
sbb
jl
gs
subl
sar
jb
aad
pop
xchg
dec
xor
mov
fs
push
fistl
add
out
pop
inc
int3
mov
mov
hlt
jns
pushl
mov
ret
pop
stos
xor
mov
repz
adc
or
aaa
xchg
and
fsubs
xor
test
incl
jmp
add
mov
cmp
jle
psraw
adc
inc
lret
xor
push
xchg
in
scas
insb
popf
sbb
imul
mov
xor
mov
bound
cmp
imulb
shl
lods
sbb
push
cli
dec
xchg
notl
movsb
mov
js
loop
nop
ljmp
dec
pop
mov
test
loop
sbb
movsl
iret
pop
into
ss
int3
loope
mov
dec
sbb
subl
mov
xchg
lods
les
xor
sarl
pop
fstpl
mov
clc
lcall
sbb
repz
shl
or
and
sub
xchg
and
mov
daa
dec
or
xor
mov
push
xor
insl
or
sar
mov
aam
js
or
das
and
adc
sbb
iret
data16
jle
pop
hlt
mov
test
inc
xor
mov
or
push
pop
and
pushf
add
pop
mov
jl
lock
dec
jl
mov
scas
stc
and
stc
subl
shrl
pop
adc
mov
es
or
pop
and
or
xchg
iret
pop
movsb
lock
xor
std
mov
add
insl
and
int
scas
je
sbb
xchg
addb
popf
test
stos
mov
in
andnps
or
sub
testb
xor
stos
sub
inc
mov
mov
loope
inc
add
jl
xchg
mov
jge
fbld
dec
mov
fldcw
clc
adc
cmc
clc
pop
out
dec
pop
xchg
sahf
ror
test
insl
es
push
fistl
out
cmp
dec
adc
cmpsb
fcoml
pusha
mov
loop
stc
push
mov
dec
in
cmpsb
pop
sub
or
cwtl
dec
int
pop
lcall
pushf
lahf
scas
mov
jmp
cli
push
pop
ret
mov
shll
imul
lret
inc
cmovns
xlat
rcl
int3
jmp
jbe
push
adcb
xor
xchg
dec
test
xor
xchg
call
cld
daa
jb
pop
pop
in
xor
mov
jns
pop
insl
aad
push
jmp
sbb
outsl
fdivl
inc
lahf
inc
add
dec
mov
jle
mov
inc
cwtl
insl
call
and
xchg
cmp
cmp
testb
shl
aas
subl
sbb
mov
outsl
scas
mov
push
into
xor
xchg
jne
inc
jb
std
lret
ror
add
insl
std
loope
lock
jne
pop
xchg
mov
xchg
insb
mov
out
lret
jg
ljmpw
out
rcl
mov
push
aaa
xchg
xchg
jge
sub
lods
sbb
mov
sbbb
cmpsb
mov
sahf
add
out
mov
mov
mov
mov
mov
imul
jg
test
pop
call
pop
sbb
mov
add
lds
je
jnp
ret
into
test
sbb
repz
mov
and
int
sbb
rolb
mov
outsb
gs
outsl
pop
xchg
idivl
aad
cmp
jnp
and
ficoml
mov
aaa
cmc
xor
mov
insb
or
inc
mov
push
add
popf
xchg
jle
in
shrb
cs
cmp
stos
inc
in
or
lods
flds
repnz
xchg
push
inc
sub
cltd
pushf
push
rorl
int3
jae
dec
mov
mov
gs
xor
mov
lock
call
mov
push
pop
mov
js
cli
out
lret
cmp
imul
jge
and
jmp
sub
ret
movsl
xchg
lcall
pop
mov
xchg
mov
mov
mov
dec
xor
pop
pushl
jmp
and
ret
jno
mov
dec
mov
into
xor
sub
popf
lea
je
mov
lret
sti
rcr
jg
push
xor
adc
or
mov
xchg
xor
ret
lds
jnp
dec
xchg
shlb
mov
inc
adc
stos
jle
sub
mov
sub
aaa
cmc
int3
cmp
mov
arpl
enter
xor
int3
gs
xchg
daa
add
icebp
scas
sbb
push
das
imul
sbb
sub
andl
pop
into
cmp
sbbl
bound
and
in
push
adc
push
into
cmc
pushf
cmp
and
repnz
dec
mov
fwait
bound
out
mov
inc
xorb
cmp
outsb
test
mov
call
jg
add
ds
mull
outsl
pop
fldt
scas
pop
dec
pop
cmp
or
shrl
xchg
cld
fisttpl
sti
add
pop
and
lock
jmp
jmp
mov
loopne
popw
pop
loop
adc
inc
sbb
add
insb
out
mov
cs
rorl
dec
add
cwtl
call
out
aad
lahf
inc
or
push
pop
dec
aam
mov
stos
cmp
cli
adc
jne
mov
jns
adc
cmpsb
dec
in
xor
gs
cwtl
nop
or
sbb
sub
mov
xchg
dec
jl
loopne
or
pushf
pop
push
xor
pop
pop
pop
cs
cmc
jl
xchg
mov
dec
dec
jge
mov
popa
testl
xor
adc
out
jnp
cli
jp
js
outsb
dec
dec
pop
stos
and
inc
fcoml
lret
sbb
shrl
adc
adc
add
das
adc
add
repnz
mov
or
jmp
out
ss
sub
psubusw
cmp
es
pop
cmp
jg
xchg
sbb
test
imul
cltd
mov
xorb
repz
sbb
leave
out
cmc
fiadds
mov
shl
rolb
or
and
dec
je
ljmp
addr16
fdivrp
inc
xchg
xorl
and
cld
push
outsl
and
loope
mov
cmp
jno
pop
jp
bound
int
dec
shlb
or
enter
mov
movsl
dec
js
bound
jg
or
dec
pop
cmp
adc
das
shll
arpl
fisubrl
shll
dec
arpl
xor
add
fnstsw
jecxz
lock
or
pop
adc
hlt
push
pop
shll
std
sub
push
dec
push
pop
popf
ret
ffree
inc
sub
aad
fwait
jns
pusha
jp
sbb
ja
clc
mov
stos
int3
mov
movsl
test
mov
sbb
adc
inc
jns
repnz
pop
aas
scas
icebp
inc
in
into
pop
mov
pushf
insb
sub
mov
call
sub
pop
adc
movsl
rcl
push
mov
cmc
sub
stos
pop
js
int3
adc
je
stos
jg
ret
pop
in
mov
int
adc
or
jo
pop
iret
sub
xor
pop
jo
les
rorb
cli
cmp
push
or
and
stos
aas
jmp
jecxz
fstps
inc
cmc
fldenv
mov
pusha
iret
imul
icebp
outsl
push
jmp
and
dec
jnp
iret
jae
aad
test
push
push
addr16
mov
int3
fistpll
int3
popa
lock
repz
xor
mov
adc
add
pop
ja
inc
dec
repnz
push
jge
inc
int3
lea
and
adc
mov
pop
fstl
ja
or
insb
jne
inc
push
mov
adc
jp
pop
pop
adc
lock
fcmovnb
mov
jmp
jnp
mov
inc
popa
push
shl
ja
insl
xor
adc
stos
adc
sub
aas
pusha
or
ljmp
xchg
cwtl
mov
jecxz
lcall
popa
mov
aam
insl
pop
xor
fstl
out
inc
movsl
inc
jae
in
cmc
sbb
mov
cmpsb
gs
cmp
cmpl
test
inc
mov
rep
mov
pop
aaa
outsb
out
addb
ja
xor
lret
xor
dec
ret
fistps
jp
push
xchg
xchg
adc
push
daa
or
adc
or
mov
inc
adc
ja
pop
mov
repz
aam
or
mov
rclb
loope
pop
dec
cmp
add
and
out
pop
sub
pop
and
lock
mov
jbe
fs
sub
data16
xlat
js
es
jb
lret
pop
inc
xor
and
mov
lahf
cli
jecxz
dec
sub
adc
adc
test
inc
cmp
mov
out
or
push
mov
cmc
fucomip
int
pop
sbb
push
cmpsb
fmuls
push
cmp
jnp
dec
stc
and
or
divb
jge
lea
pop
movsb
cmp
xor
ret
xchg
fiadds
add
shrl
dec
jecxz
mov
xchg
cmp
rcll
out
add
sub
sbb
pop
pop
rol
js
fnstsw
jnp
pop
jl
inc
xchg
cmpsl
add
outsl
sub
pop
and
add
xchg
xchg
movsb
push
aam
dec
aad
lds
loope
divl
and
add
fwait
ss
jl
addr16
mov
mov
mov
jne
push
fld
leave
adc
jmp
mov
pop
cltd
jns
jge
inc
ret
shrl
pop
mov
iret
pop
addr16
test
push
and
insl
lahf
icebp
mov
lahf
sub
push
call
popa
mov
xchg
pop
scas
or
push
cmp
pop
xchg
xor
xor
stos
push
pop
and
mov
pop
jle
adc
add
cmp
dec
in
xlat
lret
sbb
cmpb
or
push
bound
jp
mov
sbb
xchg
orl
loope
xchg
gs
xlat
sar
pop
sbb
xor
aam
cmpsl
in
inc
mov
icebp
inc
jne
pop
push
rcll
jnp
and
mov
inc
add
push
adc
cli
cmpsl
xor
es
jmp
mov
dec
pop
push
dec
pop
jmp
cmp
dec
sbb
in
cmp
inc
mov
repz
add
scas
jl
imul
pushf
popa
andb
inc
fwait
mov
xor
ficoml
std
jno
bound
nop
push
out
pop
insb
cli
es
into
sub
iret
out
inc
ds
icebp
xlat
test
clc
dec
and
outsl
xchg
sahf
mov
push
dec
sbb
jne
lea
push
test
xorb
gs
cli
add
cmpsl
aam
xchg
fcoms
loopne
and
cmp
shrd
jecxz
cs
icebp
jne
pop
pushl
imul
stos
pop
aaa
push
daa
imul
imul
inc
fadd
xchg
sti
mov
push
dec
in
jbe
xor
push
pop
dec
push
pop
mov
std
in
push
mov
pop
mov
or
cli
insl
mov
xchg
mov
jge
aaa
lds
cmp
cmc
sub
sbb
pop
or
pop
and
int
adc
cltd
mov
or
xor
imul
sbb
xor
and
fsts
and
lcall
sarl
mov
xchg
stos
test
fiadds
insl
out
out
cmpsb
int
frstor
pop
into
lahf
sub
ror
push
dec
fsubrp
or
mov
test
mov
push
enter
lcall
jne
inc
push
in
call
pop
addr16
xor
adc
lret
dec
jns
gs
cltd
call
ret
add
xchg
sbb
or
xchg
daa
scas
mov
in
scas
fimuls
test
fcomip
fstp
push
inc
xchg
push
push
lea
roll
test
add
ss
mov
dec
pusha
or
mov
in
pop
inc
lret
cli
cmpsl
pop
xchg
roll
lcall
xchg
out
scas
jb
jbe
ljmp
jnp
lret
ss
sbb
lret
std
xor
rorl
xor
pop
daa
lahf
sahf
sub
jp
or
mov
mov
mov
and
xchg
pop
aas
enter
jae
daa
lds
std
sbb
lods
ds
cmpl
or
jo
cmp
or
mov
pop
aam
cmp
inc
dec
in
jmp
jnp
jl
insb
xor
mov
in
mov
jnp
mov
xchg
xor
push
sub
xchg
mov
fsubs
roll
sti
push
mov
clc
add
push
push
push
dec
fmuls
mov
xor
xchg
dec
jle
sub
cld
mov
cmp
repnz
movsb
xchg
push
sub
adc
repz
mov
push
jmp
and
push
sub
popa
sub
fmull
cmp
test
dec
loop
cltd
popl
cltd
or
jl
andl
add
inc
out
popf
test
fnstcw
int
jp
lahf
mov
stos
mov
cmc
cmc
leave
cs
cmc
repnz
pusha
and
inc
sub
std
int3
mov
sub
add
xlat
cmp
xor
pop
xchg
jmp
push
mov
xor
in
negb
in
mov
addr16
inc
mov
popa
js
in
mov
push
dec
cld
add
stc
jno
in
imul
rorb
ja
dec
xor
sarb
movsl
mov
inc
sbb
pop
mov
pop
pushaw
mov
les
mov
out
lret
jmp
push
ss
xor
ds
dec
mov
push
out
fwait
out
test
fwait
dec
xor
bound
outsl
call
or
or
shrb
call
rol
push
test
mov
mov
adc
mov
dec
pop
rcr
les
pop
jb
hlt
cmp
sub
mov
pop
cmp
out
hlt
push
imul
sub
dec
fcomps
inc
sbb
ret
fists
add
outsl
push
xchg
adc
or
mov
testb
adc
or
lds
sbb
pop
xchg
ret
lea
mov
sbbb
mulb
js
fiadds
int3
pop
pop
hlt
fs
mov
scas
mov
stos
loope
sar
dec
lret
or
pop
inc
cmc
inc
or
jnp
fwait
scas
jg
rcrl
or
stos
outsl
leave
mov
lock
icebp
mov
adc
and
fwait
jl
push
xchg
ss
cwtl
xchg
mov
xchg
jne
adc
xchg
lret
adc
push
ja
leave
mov
dec
jl
rorb
dec
lea
sbb
repz
mov
fistps
test
fwait
leave
aas
fs
dec
inc
iret
push
aaa
mov
and
dec
mov
lret
cmpsl
cmp
das
loope
xchg
xor
add
test
jle
mov
sbb
outsl
fimull
ds
or
popf
scas
mov
fdiv
shll
dec
push
lea
scas
sti
xchg
stc
mov
pop
arpl
cli
fmulp
shll
push
inc
ss
xor
rsm
dec
sub
andb
iret
in
and
pushf
xchg
jp
test
sbb
jecxz
jecxz
pushf
je
ficompl
push
or
addr16
ret
imul
or
push
testb
flds
jg
ss
jno
int3
ds
adc
dec
mov
pushl
mov
ucomiss
mov
lea
loopne
cmp
dec
out
shl
fldl2e
mov
fcomp
or
daa
in
add
pop
cmp
push
aad
adc
cmpsb
xchg
pop
decb
jo
add
pop
sbb
mov
and
cmpsb
clc
aas
imul
into
jle
xor
jle
jmp
pop
xchg
push
insl
mov
cmc
pop
xor
movsl
push
mov
inc
out
aad
add
push
jns
std
add
and
dec
mov
insb
jmp
fs
popf
push
xchg
test
adc
pop
in
add
pop
or
pop
sbb
pop
xchg
movsl
push
adc
out
loopne
inc
shll
jne
fwait
cmpl
mov
xor
in
pop
mov
or
mov
cmp
jp
or
mov
inc
out
dec
leave
and
sub
sub
sub
mov
jle
mov
mov
adc
loopne
rcl
pop
sbb
data16
mov
pop
push
notb
and
add
icebp
ja
pushf
clc
mov
stos
xchg
rcrl
cmp
and
add
neg
xor
inc
pop
fnstenv
iret
xchg
cmp
js
call
xor
ljmp
mov
push
std
decb
cmpsl
cmp
inc
push
jno
xchg
fwait
shrl
shrl
or
xchg
mov
xor
xor
std
cld
push
cmc
or
aad
lret
adc
pop
jo
pop
mov
lea
aas
sub
aaa
mov
adc
ss
inc
lcall
div
lcall
push
jg
jne
stos
cli
mov
fwait
sub
xchg
mov
pop
jne
mov
mov
popa
das
cli
inc
jne
jmp
mov
lock
or
fwait
mov
sub
sub
push
pop
jne
mov
jle
sbb
add
cmpsl
popa
push
pop
xor
xor
xor
pop
xlat
adc
add
dec
inc
jae
stos
paddb
fdivrl
push
ret
adcb
pop
jp
shl
pop
aad
shlb
fwait
cwtl
sub
mov
xchg
xor
and
out
and
push
aam
push
xchg
add
pusha
out
cltd
test
mov
sti
mov
scas
mov
popf
movsl
sub
dec
dec
and
mov
jg
inc
fisttpl
jbe
or
inc
add
ror
sub
pop
aad
cmpsl
jle
or
aas
aam
pop
pusha
lea
cld
add
adc
fcoms
xchg
mov
dec
fwait
test
mov
dec
mov
xor
dec
mov
sub
shlb
lcall
andb
std
lret
jecxz
mov
lock
adc
mov
clc
xchg
sbb
xor
or
arpl
out
xor
and
or
loop
loopne
mov
popf
daa
push
push
adc
in
out
adc
xor
lock
les
xchg
cltd
imul
repz
inc
xor
imul
cmp
arpl
push
jmp
jne
push
nop
icebp
stos
pop
xchg
pushf
add
jae
and
loop
jbe
aas
jns
sets
lea
dec
jo
sub
push
test
ret
pop
das
cld
rcr
pusha
cld
jecxz
outsb
sbb
stos
or
and
xchg
loop
adc
rcl
and
jmp
fadds
test
mov
gs
pop
cmp
or
nop
jecxz
sub
dec
mov
pop
in
push
idiv
adc
push
mov
push
xor
mov
cs
or
or
or
daa
adc
sarb
xor
mov
push
pop
cmp
xor
xchg
mov
jp
loop
mov
pop
xor
jecxz
popl
loope
popa
or
add
incb
pop
cmp
push
adc
fistps
int
jae
sbb
shrb
mov
jle
daa
jg
mov
aad
call
inc
push
test
in
insb
rcrl
std
aad
cmp
jg
sarb
and
mov
cs
test
push
shlb
xchg
mov
pushf
ja
mov
xchg
adc
mov
ret
flds
das
sbb
cwtl
sub
lcall
stos
push
mov
pusha
lret
mov
call
mov
subb
adc
sub
or
xchg
lahf
push
xchg
dec
xlat
xchg
cmc
mov
mov
mov
push
adc
cs
call
fildll
adc
out
jmp
mov
xlat
mov
fisubs
or
mov
add
or
insb
stos
push
les
rcrb
outsb
sbb
mov
je
js
xchg
repnz
imul
int
inc
mov
jnp
stc
shll
stos
fimull
testb
xor
insl
imul
jg
or
add
stos
fsubr
pop
mov
mov
std
fnstcw
out
xor
movsb
cmc
lret
or
xchg
stos
and
inc
add
jns
shl
ret
int3
lahf
cmp
jg
xor
scas
pusha
rcll
insl
jmp
es
inc
pop
pop
pop
into
jae
divb
cmpsb
repz
or
mov
ja
loope
cmp
aad
push
push
pop
inc
cmpsb
adc
push
mov
aas
push
ja
aam
jb
dec
sub
xor
add
jo
test
fidivs
stos
outsb
into
mov
insl
sahf
mov
pop
pop
in
jbe
inc
pop
sbb
call
cmp
cmp
aas
and
out
in
dec
cmp
sub
aad
out
and
data16
mov
add
push
jle
mov
mov
mov
xchg
out
enter
notb
sbb
mov
push
and
sbb
xor
pop
sahf
xor
aas
jne
insl
mov
scas
jbe
cmp
xchg
fnstsw
pushf
pop
cli
jecxz
and
data16
stos
cmpb
in
push
pushf
pop
fcomi
pop
add
sarl
loope
sub
aad
jmp
pop
divl
out
gs
push
cmp
sbb
inc
rorl
xor
jp
dec
pop
mov
jnp
andb
into
fidivs
jl
cli
adc
dec
lock
add
out
cpuid
add
and
or
daa
push
inc
mov
stos
xchg
xor
fnstcw
fwait
nop
arpl
clc
dec
mov
into
ljmp
xor
fisubs
dec
dec
outsb
or
mov
bound
jbe
mov
cltd
sub
sbbl
in
sbbb
out
push
mov
jmp
jle
cmp
push
addl
test
jo
or
adcb
bound
dec
cmp
adc
iret
xchg
jns
push
scas
add
ds
and
mov
out
jne
inc
xor
mov
popf
push
lcall
fimuls
add
aad
daa
or
and
fwait
cmp
movsb
and
push
data16
pop
sub
loope
xlat
repz
inc
pop
push
outsl
test
gs
ret
cmp
into
arpl
jge
add
and
inc
scas
dec
cmp
lods
cld
lods
or
movsl
or
jae
mov
scas
sarl
out
stc
jns
and
add
mov
lea
xchg
sbb
aam
emms
cmp
scas
scas
sub
push
and
pushf
cs
mov
shl
and
jb
stos
mov
inc
hlt
inc
jb
into
push
lret
test
pusha
cwtl
inc
pop
jmp
xchg
push
xchg
cli
adc
xlat
dec
dec
sarb
xchg
fidivrl
movsb
adc
idiv
shll
mov
dec
or
mov
subb
add
shrb
jns
xchg
sub
sub
arpl
inc
or
mov
push
cmp
push
subl
mov
mov
cmp
test
sbb
cli
xor
ret
mov
stos
xchg
inc
pop
cmp
jg
fwait
ljmp
sbb
push
movl
out
push
dec
mov
mov
cwtl
xchg
scas
imul
or
push
pop
sbb
popf
jge
outsb
sub
cld
roll
call
es
jb
cld
dec
cli
xchg
and
mov
inc
lret
adc
adc
jae
aad
clc
loop
pop
lea
or
jmp
push
lods
lods
add
orb
int3
add
jmp
scas
negl
and
inc
xchg
pop
or
ret
ljmp
icebp
jnp
xchg
int3
jbe
ja
sti
mov
iret
movsl
sti
popf
ja
pop
xchg
shlb
sub
or
mov
imul
out
sbb
cmp
hlt
mov
in
adc
jb
pop
call
cs
mov
test
sbb
in
lods
or
push
dec
out
adc
jb
mov
xchg
mov
push
into
cmp
push
mov
pminub
pop
sbb
mov
mov
imul
mov
ljmp
xlat
xchg
mov
dec
mov
adc
cwtl
pop
gs
jg
rorl
mov
out
fsubr
cmp
into
imul
sti
daa
cli
sub
int3
xchg
or
xlat
arpl
push
shrb
fwait
dec
pop
jo
jno
cwtl
mov
jg
popa
sbb
shll
jb
xchg
sbb
fldt
movsb
adc
or
mov
xor
xor
jno
fidivs
xchg
insb
adc
push
cmp
cmp
cs
or
mov
les
inc
clc
mov
nop
je
cmp
xchg
fcoml
mov
dec
xlat
mov
or
xchg
or
adc
das
and
mov
adc
and
and
sbb
lds
push
out
sbb
pop
fpatan
loop
mov
std
mov
les
push
aad
mov
loope
subl
inc
out
xor
shll
arpl
inc
push
jg
test
inc
testb
push
daa
cmc
movsl
add
cmpsl
sbb
cmpsl
ret
stos
pop
jb
sub
and
sub
inc
pusha
imul
add
cmpsb
fldenv
inc
dec
push
mov
and
cli
cmpsb
fdivl
cmpsl
add
sub
rcrl
hlt
insb
lock
stos
fcompl
or
lods
scas
scas
repz
inc
jmp
and
xor
xchg
xor
mov
cwtl
scas
shrl
adc
fidivs
out
mov
insb
out
cmpl
pusha
loop
insb
xchg
xor
sbb
jl
xor
inc
addr16
xchg
sarl
stos
xor
and
cli
fldcw
lcall
fsubl
leave
push
outsb
dec
out
es
jne
pop
pop
push
lds
or
xor
lahf
dec
leave
inc
jbe
jne
and
daa
sti
ret
pop
aam
ret
xchg
mov
push
mov
imul
push
addr16
pop
push
mov
and
mov
cmp
sub
enter
adc
jge
sbb
lret
fbstp
outsl
int3
mov
imul
add
mov
and
adc
pop
inc
xchg
dec
hlt
bnd
in
ret
xchg
jp
sahf
lock
sub
inc
xchg
mov
and
cmpsb
addb
add
xchg
rclb
ret
nop
push
out
mov
and
cwtl
sarl
jmp
mov
or
sahf
add
inc
xor
aad
test
test
add
in
stc
jmp
dec
lods
loopne
inc
xchg
int
int
xor
aas
ss
rorb
mov
cmp
arpl
xor
imul
and
xor
push
leave
mov
test
jo
jmp
lods
std
cmpb
push
push
or
fldln2
sbbb
shrl
shl
scas
push
ja
sar
rcll
push
and
daa
xchg
sbb
dec
push
sbb
inc
jecxz
inc
aaa
cmc
sar
push
xchg
lds
cmp
jmp
insb
jbe
mov
aam
pop
fistpl
add
jbe
sarb
inc
test
xor
mov
or
rcl
out
xor
enter
xchg
and
xor
hlt
jmp
es
movups
fwait
push
loop
adc
scas
leave
jbe
mov
xchg
xlat
mov
jno
adc
shll
xchg
jmp
loopne
sub
inc
add
clc
movsb
or
and
push
mov
dec
xor
or
int3
jns
inc
mov
rcl
inc
out
push
push
out
add
jg
jbe
pop
cltd
repz
into
dec
mov
shlb
push
add
test
inc
shl
movsb
xor
shlb
jl
xchg
mov
in
mov
inc
sti
ret
inc
fdivl
inc
clc
out
jmp
mov
mov
jo
mov
cmp
lahf
rorb
iret
pusha
lret
test
int
lcall
xor
data16
xchg
popf
loope
ja
inc
leave
out
inc
pop
cmp
lods
out
xchg
enter
std
xchg
fadd
int3
jge
adc
or
lock
pop
or
stos
stos
push
pop
jae
inc
jb
and
out
gs
cmp
js
dec
test
dec
sbbl
push
hlt
cs
fcompl
gs
jp
jnp
paddw
cmpsl
lock
dec
jmp
push
rorb
cli
mov
pop
sbb
and
fdivrl
push
adc
and
dec
mov
or
scas
gs
pusha
jge
les
es
mov
pop
dec
pusha
pop
cmp
or
sub
popf
pop
lret
and
test
fsubrl
push
insl
mov
lcall
loope
mov
and
pop
into
add
adc
xchg
push
xor
inc
out
insl
push
push
movsl
shrl
mov
jns
ja
xchg
in
cmp
mov
int
or
insb
aam
sub
scas
sbb
je
aam
cmp
lahf
xchg
fadd
int
addr16
jne
xor
imul
mov
or
mov
pusha
outsl
sub
mov
shl
cltd
icebp
lret
inc
pop
cmp
out
pop
bound
bound
dec
adc
mov
subl
call
inc
mov
es
cltd
add
loop
fs
jg
sub
test
push
and
popa
jb
xchg
out
push
shlb
or
xchg
mov
aad
and
adc
push
sbb
cmpsb
xorb
and
dec
jno
push
mov
mov
push
sahf
xchg
jge
jl
shlb
inc
dec
xchg
jne
fcoms
sbb
dec
or
pop
push
sub
dec
xchg
jne
jle
xchg
jno
movsb
repnz
xor
mov
push
mov
stc
test
ds
loope
std
jne
pusha
xor
dec
or
or
nop
mov
shl
xor
jge
nop
add
push
cmc
call
push
ljmp
adc
sub
mov
lcall
out
out
out
inc
xlat
inc
add
fwait
shrl
jecxz
adc
ja
mov
xchg
mov
lret
es
iret
clc
pushl
repnz
mov
jno
xor
xchg
pop
jmp
mov
mov
and
mov
aad
sbb
push
shrb
das
or
aad
enter
imul
mov
es
adc
jo
lods
call
xor
jp
and
les
inc
inc
or
shlb
std
mov
pop
xlat
cwtl
pop
outsl
add
movq
jns
push
or
fsub
pop
out
add
out
das
lock
xchg
jmp
jl
shlb
adc
xor
clc
mov
call
xchg
xlat
mov
pop
adc
lds
ds
and
test
or
jp
orl
mov
mov
mov
add
shll
cmp
add
fstpt
and
repnz
push
fmull
sbb
rcrl
testb
push
aaa
je
cmpsl
inc
or
xchg
xor
xchg
hlt
aad
ret
jno
xchg
sbb
cmp
jo
fdivp
sub
sbb
push
mov
lret
sbb
lret
lods
jnp
lock
outsl
dec
repnz
je
ds
inc
adc
sahf
push
lods
mov
cmp
icebp
push
pop
xchg
lcall
outsb
mov
cmp
dec
lods
imul
aaa
pop
and
xchg
inc
sbb
mov
in
out
adc
loopne
adc
mov
mov
lahf
test
cmp
mov
inc
mov
dec
jno
mov
mov
inc
pusha
sub
xchg
das
or
jo
gs
sub
lods
mov
ret
or
cmp
ja
pop
and
adc
shl
sub
mov
ja
and
dec
movsb
lock
test
mov
test
and
fsubrl
inc
xchg
mov
dec
adc
jmp
pushf
das
stos
imul
ret
sti
aad
insl
cmp
loop
hlt
lea
cmp
pushf
aas
or
clc
sub
ret
inc
mov
adc
movsb
pop
or
cmc
push
dec
push
inc
data16
and
mov
ja
or
dec
sub
xchg
and
mov
icebp
sub
cmp
aad
sub
ret
mov
jno
add
in
in
incb
mov
mov
push
shr
in
sti
dec
cmpsl
fimull
loop
shl
aam
fmuls
pop
int
int3
lcall
pushf
fldcw
sub
test
cmp
push
scas
pop
adc
cmp
inc
imulb
ds
mov
pop
subl
add
add
mov
and
iret
xchg
xor
std
push
add
xchg
cmp
jle
mov
or
sbb
test
clc
aas
adcl
mov
fadds
int3
iret
jmp
ror
test
sbbb
xor
subl
enter
out
pusha
sbb
and
add
test
pop
mov
pushf
jmp
inc
mov
fdivs
xchg
ret
jns
outsb
std
ret
rolb
fs
idivl
repnz
push
arpl
dec
or
or
xor
add
jmp
add
inc
ror
dec
movsl
test
fs
std
scas
and
sahf
mov
xchg
es
push
daa
sti
sub
mov
sub
fnstenv
inc
cs
in
mov
add
test
pop
push
xor
and
add
adc
jmp
mov
push
add
aaa
or
or
inc
clc
mov
add
out
int3
xor
jbe
fldl2e
stos
stc
sarb
jno
adc
bound
mov
mov
sub
insb
and
iret
or
pop
inc
imul
outsb
mov
pushf
push
stc
add
ficoml
scas
std
sarb
lret
pop
dec
insl
push
stos
push
xor
or
mov
aad
hlt
leave
roll
jo
loope
popa
jne
jo
enter
and
dec
xor
call
cwtl
adc
test
xchg
and
fmul
dec
aaa
or
outsb
mov
jp
mov
xchg
cmpsb
sbb
push
or
jp
sbb
js
and
pop
pusha
stos
jg
or
int3
sbb
movsl
add
jmp
je
mov
jmp
xor
sar
out
call
or
xor
loopne
push
mov
mov
or
insl
loope
push
das
dec
inc
dec
das
adc
mov
sbb
lods
mov
insb
imul
cmpsb
arpl
std
xor
sub
ja
sbb
pusha
jae
push
fwait
cmp
in
sub
mov
cmove
inc
xor
jp
pusha
fs
out
mov
sub
pushf
es
popa
jns
prefetcht2
push
or
dec
test
mov
je
push
mov
jmp
sub
shrl
in
and
add
mov
jo
jp
add
cmpsb
addr16
pop
insl
subl
int3
leave
mov
lret
and
and
mov
test
js
inc
cltd
das
cmp
add
pop
int
push
daa
adc
test
and
sbb
mov
mov
cwtl
fcmovne
push
mov
movb
aad
xor
fnstcw
fisubrl
adc
xchg
insl
cmpsl
jo
add
add
xor
out
xchg
rorl
out
add
pusha
or
add
dec
std
rolb
stos
sbb
addl
mov
in
shlb
adc
in
lahf
xchg
and
pop
cmp
cmp
cwtl
or
adc
or
data16
stos
mov
push
xchg
sti
dec
pop
pop
insl
pop
lds
adc
faddl
gs
or
pop
lock
jbe
adc
inc
aaa
lods
cld
arpl
cltd
popa
jne
nop
sti
pop
mov
push
js
or
xchg
fldcw
sub
cmpsb
push
pop
mov
add
xchg
fsub
movsl
xchg
fstpt
in
mov
iret
dec
ja
pop
mov
mov
jno
sub
data16
sahf
push
icebp
mov
sbb
es
inc
inc
cmpsl
divl
jmp
pop
jp
xor
jge
adc
scas
enter
push
xchg
sbb
rcl
nop
mov
daa
push
xor
jnp
ret
push
shrl
mov
or
mov
outsl
shll
je
jnp
cs
and
add
mov
adc
push
jle
sub
fisubrl
mov
mov
push
mov
pop
inc
repnz
std
test
adc
xchg
fidivs
ja
dec
pop
adc
inc
pusha
pop
stos
shlb
imul
test
or
push
imull
sub
dec
xor
lock
adc
es
adc
pop
div
pusha
mov
int3
and
sahf
shl
and
pop
cmpsb
mov
ds
mov
icebp
adc
add
fdivrl
cmp
cltd
ret
ret
jmp
sub
push
add
cld
aad
je
ja
cwtl
push
jp
scas
sti
push
pop
mov
clc
fidivrs
lea
and
cli
sub
loop
mov
xor
pop
or
shr
mov
push
xor
mov
push
daa
pop
mov
loopne
in
rcl
andl
sub
in
int3
adc
js
dec
jecxz
outsb
and
jno
ret
pop
lock
icebp
jno
xchg
imul
xor
mov
in
mov
dec
sbb
mov
imul
pop
sti
mov
mov
sbb
push
test
and
adc
adc
jae
inc
or
adc
pusha
into
dec
or
inc
jl
mov
fidivs
std
push
xchg
inc
mov
inc
cmp
cltd
adc
xor
pop
mov
push
movsl
ds
rclb
xlat
mov
fs
or
jl
lret
js
fcompl
ja
lret
dec
push
adc
negb
xor
jbe
sahf
sbb
jecxz
jns
inc
inc
ret
aam
lds
shl
in
push
in
pop
pop
enter
cmp
lretw
int
fsubrl
cmp
inc
ja
aas
adc
mov
fs
sub
pushl
outsl
shlb
push
fisubrs
pushf
cmp
xchg
imul
fcomps
xor
dec
fstps
jne
xor
jmp
shl
inc
cmpsb
popf
sbb
test
rol
cwtl
adc
in
mov
add
push
repz
aad
arpl
xor
call
mov
xchg
ds
pop
mov
jae
xor
mov
dec
adc
and
insb
mov
js
mov
push
and
repnz
in
pusha
iret
ja
jbe
or
lret
push
mov
filds
sub
pop
mov
aam
aaa
pushf
icebp
and
add
int3
mov
xchg
mov
sub
jl
jno
mov
push
xchg
mov
or
sbb
ljmp
mov
dec
pop
stos
jecxz
push
test
and
xchg
icebp
jl
xor
jmp
std
cmp
sub
and
bound
pop
push
inc
mov
cmp
xchg
pop
xor
adc
dec
jnp
inc
orb
loop
ss
fnsave
and
jge
mov
jo
lcall
inc
xor
testl
inc
ljmp
nop
stos
fstpt
int
cmp
cwtl
xorl
inc
mov
lea
add
xor
arpl
inc
lahf
clc
rcll
mov
mov
mov
test
subb
inc
stc
pop
sti
pop
jae
gs
sahf
cli
lods
jne
push
in
or
push
adc
xchg
lock
clc
mov
je
mov
or
sub
xor
mov
sti
jbe
aaa
int
notb
add
cmovns
clc
aaa
push
data16
mov
jp
sbb
mov
pop
hlt
ljmp
fcmovu
mov
imul
fwait
mov
push
js
out
or
dec
test
fdivrp
cltd
sub
imul
lcall
mov
mov
push
daa
xchg
sub
inc
sbb
mov
sub
cmp
push
ss
mov
mov
push
dec
hlt
lock
adc
pusha
fwait
dec
lret
push
add
or
pop
push
xlat
adc
clc
leave
push
std
andl
clc
popf
dec
pusha
mov
pusha
cs
mov
cmp
cmpsb
jmp
shrl
and
mov
mov
adc
insb
in
pop
mov
mov
scas
in
mov
fdivrl
add
sub
out
xorps
inc
jns
add
mov
add
out
mov
mov
jl
mov
pop
scas
dec
icebp
dec
sti
sub
jmp
inc
xchg
pop
pop
mov
gs
aas
es
pop
mov
lcall
xchg
jno
jne
push
insb
jle
cmp
fisubs
mov
mov
and
add
mov
cltd
push
sbb
fwait
int
mov
icebp
out
sbb
sbb
test
nop
lods
pushf
clc
sub
mov
andb
in
dec
sub
out
sbb
mov
jp
into
cmp
test
aas
mov
mov
adc
add
cwtl
pop
xor
fbld
jae
pop
mov
push
pushf
and
iret
in
test
shrb
fwait
mov
mov
fbstp
gs
lock
imul
or
loope
jbe
loopne
add
mov
popf
dec
sbb
cli
dec
push
sub
leave
adc
bound
imul
jae
in
mov
xchg
in
clc
scas
and
xchg
iret
inc
insb
mov
pop
sbb
mov
movsb
jb
dec
lds
mov
ds
mov
pop
dec
jo
aad
jnp
pop
xorb
cli
in
xchg
push
jne
adc
aaa
jbe
mov
test
xor
inc
sub
xorl
sub
dec
js
xchg
ret
push
jmp
test
cli
or
hlt
jns
pop
or
mov
xchg
imul
popf
aaa
push
ss
dec
outsl
xchg
arpl
or
pop
shl
mov
shl
xor
or
test
dec
xor
or
out
pop
aas
mov
movsb
jp
lds
xchg
lcall
cmpsl
mov
add
mov
inc
filds
ja
sti
mov
jne
inc
inc
stos
leave
rol
int
iret
data16
dec
loop
aam
fisubrs
mov
mov
adc
mov
mov
mov
loope
pop
inc
std
in
mov
adc
fadds
mov
aaa
xlat
xlat
mov
enter
fwait
repz
sub
outsl
shll
imul
rcll
imul
jecxz
cltd
inc
imul
cmp
in
jge
xchg
cmp
cmc
add
int3
repz
ret
or
loopne
ret
mov
and
dec
sbb
push
lds
jns
popa
lods
mov
xchg
nop
sub
lret
and
cli
cmp
inc
loope
mov
pop
xlat
mov
movsb
mov
stos
sub
mov
insb
ret
stc
and
pop
sub
les
push
inc
push
add
cmp
or
les
lock
aam
sub
fldenv
std
adc
and
sbb
ror
popa
or
xchg
xchg
push
and
mov
mov
jnp
push
mov
cmc
pop
xchg
jns
sahf
mov
pop
fcompl
mov
push
push
sub
stos
sahf
push
sub
mov
shufps
mov
lcall
cmp
into
mov
push
dec
mov
add
and
push
mov
cli
dec
push
push
pop
lds
inc
loop
add
ret
in
aam
test
sarl
dec
push
mov
and
jp
aam
lea
insb
lods
cmp
in
sarb
mov
mov
cld
in
popf
or
data16
and
sti
out
outsb
xchg
inc
cmpsb
movsl
jno
lds
xchg
loop
xor
mov
or
or
fstl
ret
mov
dec
push
add
adc
outsl
sub
lcall
aad
inc
xchg
scas
int
into
insb
xorl
mov
mov
inc
mov
call
es
fprem1
and
adc
call
aas
nop
inc
sbb
movsl
or
dec
mov
sti
sub
pusha
push
fcomps
cli
je
pop
inc
cmovno
adc
sub
inc
mov
rcrl
sub
addr16
or
mov
ret
xchg
add
arpl
mov
scas
outsb
popf
outsl
orb
mov
leave
arpl
aaa
stos
aas
and
js
pop
inc
popf
pushf
sub
xchg
push
clc
loop
cli
out
cmp
jns
idiv
dec
xchg
dec
cld
xlat
jmp
add
inc
mov
and
xchg
call
test
mov
lock
mov
movsb
and
test
mov
jg
negl
int3
in
jbe
ja
add
cmc
cmp
inc
sub
lret
jge
and
iret
pop
jnp
out
inc
adc
fcomp
push
inc
sti
add
add
imul
push
pop
cld
jbe
enter
mov
pop
cmp
and
jb
jno
pop
outsl
out
inc
add
test
sub
jl
loop
mov
adcb
xchg
popf
inc
jp
ljmp
lcall
lods
mov
ret
mov
and
add
cli
test
outsl
cmp
testl
orl
pop
adc
cs
fcmovb
sub
movntq
lahf
pop
xor
jp
enter
pop
push
arpl
or
test
je
es
stos
test
push
jmp
and
mov
mov
cli
ja
fld
neg
jg
popf
daa
sbb
xchg
cld
test
addr16
add
jnp
lods
add
fnsave
and
cltd
xor
ljmp
das
mov
lods
sti
xchg
outsb
cld
xor
sbb
jnp
int
in
jne
inc
mov
xchg
movsb
push
push
call
mov
in
add
adc
out
test
fnstsw
jmp
cmp
push
jne
mov
stos
lcall
or
xor
sahf
xchg
xlat
mov
daa
mov
jle
fistpl
xchg
ucomiss
xor
repnz
xchg
imul
mov
in
out
mov
bound
out
push
cld
cwtl
or
sbb
jl
cmpsl
inc
pop
shll
es
xchg
mov
pop
jno
outsl
dec
mov
fimuls
insb
pop
jo
ljmp
int
xor
mov
pop
test
ds
xchg
cltd
shlb
outsl
pusha
dec
cmpsl
push
push
fildl
out
outsl
mov
sub
mov
sbb
stos
popa
testb
rorb
fcomps
insl
test
add
inc
adc
sbb
hlt
xchg
and
loopne
js
in
fs
mov
xor
xchg
fsts
add
cltd
mov
fiadds
adc
and
cmpl
pop
jmp
repz
shlb
popf
jmp
mov
stos
sbb
mov
fsin
xchg
lcall
adc
and
aaa
jp
cmp
or
mov
inc
orb
sub
xchg
and
jo
cli
dec
mov
lds
and
adc
fwait
enter
leave
jbe
insb
les
clc
adc
fdivl
popf
ret
sub
int
cltd
push
pop
stos
out
cmp
pop
fwait
or
insb
mov
in
mov
lahf
int3
pop
inc
push
cmp
movsb
les
ret
dec
push
sti
mov
jne
and
push
nop
pop
sbb
int3
in
cmp
in
dec
push
xchg
cmpsl
push
scas
test
mov
arpl
ss
jae
loope
ret
mov
daa
sarl
les
xchg
lahf
push
sbb
in
in
lock
lcall
mov
pop
push
pop
xchg
addb
arpl
push
out
fsubp
outsl
xchg
fildll
xchg
gs
pop
gs
repnz
orl
xlat
pop
aam
add
sar
daa
xchg
stos
mov
ja
or
adc
mov
ja
pop
dec
mov
xchg
jl
mov
sahf
nop
cmpsb
sub
insb
aaa
mov
js
mov
lcall
pop
stc
mov
jge
sbb
adc
adc
or
cmp
test
shrb
pop
adc
jle
das
jg
dec
hlt
bound
scas
lock
outsb
loop
pop
mov
shlb
xor
adc
push
adc
jbe
rcll
sub
push
fisubs
aas
inc
add
flds
mov
je
mov
cwtl
sub
jo
stos
push
ret
testb
pop
cltd
out
popf
stos
cmp
outsb
pop
jle
or
test
fbstp
and
adc
mov
cmp
xchg
repz
std
dec
adcl
mov
mov
iret
dec
pop
mov
cwtl
lds
daa
in
insb
movsl
shll
jp
test
cwtl
scas
pushf
or
adc
adc
push
sub
cltd
arpl
push
stos
fnstsw
pop
pop
push
mov
es
push
mov
inc
ss
lods
add
cld
rcrl
cli
pop
std
push
les
fmull
das
inc
and
inc
aas
mov
orb
sbb
mov
pop
jp
jl
push
mov
int3
outsl
push
xor
lret
std
dec
pop
lahf
in
add
pop
and
and
arpl
add
ja
or
cmp
repz
pop
and
ficoml
insl
add
mov
cmpsb
cmpsb
ror
or
movsb
bnd
mov
popf
dec
in
dec
in
cmp
fmuls
dec
rorl
aaa
jle
data16
xor
lods
mov
out
and
call
insl
pop
inc
ret
daa
ss
loop
and
aad
ror
pusha
jne
int3
daa
adc
pop
cmp
lea
cmpsb
xchg
lcall
fistpll
mov
in
inc
js
in
mov
pop
fidivl
sarb
int
mov
ret
push
inc
lock
cmpsb
mov
mov
cltd
fisubs
push
popa
enter
cmp
pop
fistpll
add
cli
sbb
mov
or
enter
xor
cmp
xor
jbe
clc
mov
pop
fidivl
icebp
mov
jg
and
jb
imul
mov
cmp
or
push
push
pop
xchg
xchg
ret
push
fbld
inc
ret
and
loope
or
and
neg
cld
or
lods
and
test
test
mov
dec
in
loopne
aad
subb
scas
and
add
icebp
in
imul
shll
testb
repz
xor
arpl
sbb
dec
pop
xchg
out
xorl
ja
jl
xlat
xor
cltd
pop
mov
cmpsb
push
cmp
push
nop
inc
push
test
test
add
mov
xchg
xchg
in
test
int3
std
jp
cld
push
movsl
iret
repnz
inc
mov
pop
jae
xchg
adc
jle
cltd
out
push
js
xchg
mov
cltd
pop
shl
add
in
xchg
loop
mov
pop
lcall
scas
call
push
loopne
cmp
outsl
pop
jno
adc
mov
xchg
cmpsb
out
out
mov
sub
push
jo
push
jno
sbb
inc
test
stos
clc
push
jle
mov
data16
repz
insl
call
cmp
enter
fsubrl
dec
inc
jo,pn
rcll
xchg
iret
add
adc
mov
outsl
and
xlat
nop
insb
in
mov
fs
movsl
ret
jo
mov
fs
mov
sub
mov
add
outsb
push
loope
push
dec
stc
and
cmpsl
jmp
insb
outsl
push
scas
mov
jmp
adc
lods
inc
cmp
add
jmp
or
or
rclb
cmp
divl
add
xor
push
movsl
push
mov
roll
push
jmp
inc
sti
pop
jno
out
add
push
add
adc
fidivrs
sahf
xchg
jb
inc
rol
jns
scas
jns
cmc
imul
sub
mov
push
add
lret
aad
push
outsb
fs
mov
scas
xor
fdivrs
sub
jno
adc
jge
hlt
xor
fisubrs
stos
or
and
mov
inc
mov
mov
mov
push
and
push
aas
inc
xor
jae
popa
push
test
fwait
lea
adc
inc
mov
addb
dec
sub
push
hlt
push
mov
mov
xchg
out
inc
push
push
enter
aas
and
ss
ljmp
mov
scas
sbb
cmp
jbe
js
gs
inc
adc
dec
sbb
push
fdivrp
fcoms
loop
loopne
pushf
rcll
cmp
cwtl
mov
aam
cltd
cmc
pop
pop
loopne
jb
daa
cmpsl
out
mov
mov
iret
cmp
pop
addr16
aas
fwait
xchg
inc
and
cld
shl
mov
jl
mov
and
cmc
and
dec
adc
jmp
sbb
mov
in
push
mov
je
into
pop
inc
pop
inc
and
call
push
outsb
sbb
xor
sub
or
repnz
int3
leave
daa
jmp
hlt
jne
inc
es
sti
in
lret
shlb
mov
loop
add
scas
mov
inc
popf
insb
push
loop
cli
and
adc
popf
and
and
lds
pop
mov
daa
mov
je
xchg
mov
push
cmpsl
or
jl
fistpl
aad
cmp
pop
pop
jns
cltd
mulb
int3
imul
jmp
dec
pop
sub
and
ret
fcoml
xchg
mov
stc
stos
clc
fldenv
inc
lret
push
add
inc
testb
fcomps
push
jl
cmp
rcrb
test
pop
mov
jecxz
shll
sbb
xor
outsl
loope
xchg
in
adc
mov
cltd
test
xor
out
dec
mov
or
jbe
or
push
sub
dec
push
addb
mov
adcb
adc
jge
sub
jl
pop
jge
sbb
fistps
popa
sub
xor
daa
or
fidivl
xor
clc
popf
daa
loopne
xor
push
dec
roll
cmc
push
fcmovne
xchg
loop
mov
mov
and
dec
icebp
jae
addr16
popa
dec
test
add
subb
leave
fsubs
jbe
pop
ret
jge
pop
repnz
movsl
shll
scas
dec
sbb
and
test
cmpsb
jp
sub
mov
xor
cmp
ret
cmpsl
jns
add
ljmp
jp
aad
jge
sub
repnz
mov
or
jb
mov
addr16
or
mov
jmp
push
xchg
dec
imul
lahf
mov
cld
fcompl
repz
fstpt
cmc
xchg
call
cmc
dec
pop
sub
ficomps
popa
inc
cmp
mov
imul
fsubs
hlt
push
inc
cmpsl
adc
insb
dec
sbb
stc
mov
inc
and
jne
dec
stc
or
testb
jb
mov
ljmp
mov
shrl
jg
pop
aad
cmp
test
xchg
std
cmp
mov
add
rorb
dec
pop
insl
out
push
sub
jo
mov
stos
lahf
cli
mov
test
dec
dec
jno
jg
mov
xlat
pop
or
jp
loope
test
bnd
cmp
les
dec
push
test
sbb
cmp
mov
push
fildl
lret
xor
mov
test
mov
lock
insb
lahf
popa
hlt
mov
div
loope
fisubl
popf
rclb
push
icebp
cmp
dec
sbb
daa
mov
inc
pop
in
lret
out
test
pop
insb
xchg
jnp
loopne
stos
jge
test
sub
lods
arpl
fnsave
adc
add
pushf
into
fldenv
inc
rcrb
or
movsl
scas
or
clc
lea
shlb
jl
jno
pusha
add
mov
cmp
push
ljmp
std
jnp
add
inc
icebp
sub
inc
cmp
jnp
mov
stc
int
xor
enter
int
mov
sbb
add
push
mov
push
cltd
fstl
mov
adc
dec
fdivs
mov
arpl
js
sbb
rcrb
loopne
push
insb
dec
sarl
or
mov
std
cmp
dec
push
cmp
mov
out
mov
cmp
test
mov
jne
cmp
int
jno
aaa
cmp
add
push
xchg
std
gs
dec
in
xor
inc
bound
xor
xor
mov
imul
push
jne
pusha
call
in
lcall
popf
jge
mov
bound
mov
das
push
mov
pushf
ja
insb
mov
ret
sbb
inc
scas
and
cltd
test
imul
int
inc
and
std
dec
jo
dec
jns
lods
cmp
sub
sub
cmpb
lret
mov
mov
dec
aad
add
arpl
mov
jmp
out
mov
out
dec
cltd
mull
sahf
cmp
xor
sbb
test
addr16
addl
imul
xchg
xchg
fstpl
movsb
popa
addr16
fwait
push
nop
adc
jp
or
mov
loop
mov
das
aaa
outsb
loope
adc
fmull
das
mov
xor
sahf
xchg
push
pushf
xchg
jge
dec
jbe
test
nop
je
and
je
mov
fdiv
test
in
or
arpl
popf
cmpsb
mov
popa
sbbb
fwait
push
add
and
push
push
jbe
shlb
xchg
fiaddl
outsl
out
stos
outsl
inc
push
daa
in
inc
cmp
mov
push
jle
dec
and
and
pminsw
test
fnsave
pushf
hlt
in
imul
inc
sbb
out
xor
je
push
mov
cmp
stc
jmp
lds
pop
fmull
push
add
xor
test
push
mov
add
add
xor
into
adc
outsb
insl
or
and
push
or
sub
stos
cmpsl
pop
in
jb
push
lods
mov
movsb
pop
neg
mov
dec
push
lods
mov
out
lcall
inc
rcll
jbe
mov
mov
add
pop
add
and
nop
flds
xchg
cmp
pop
cmp
jmp
call
push
movsb
cld
out
js
sub
push
cmpsl
jne
mov
lret
ds
rorl
testb
mov
xchg
jmp
mov
fadds
div
jne
cs
xor
mov
movsl
mov
shrl
lahf
mov
xor
int
dec
inc
dec
xchg
jno
jno
call
cltd
insl
mov
and
dec
jmp
xchg
push
fadds
incb
rclb
lods
adc
in
lods
pop
jmp
repz
fdiv
sti
lods
sub
repz
icebp
and
out
pop
cmp
push
sbb
testl
sbb
test
jecxz
movsb
and
mov
bound
orl
gs
cs
xchg
inc
ja
xchg
jb
cmc
dec
je
push
out
decb
jns
mov
inc
jnp
mov
sti
dec
mov
fsubrp
fldcw
clc
sbb
lahf
movsb
xchg
cltd
dec
ficoms
repnz
adc
add
gs
adc
fcoms
std
or
pop
sti
dec
jo
pop
pop
xor
in
xchg
inc
mov
jnp
int3
sub
daa
mov
push
adc
nop
cmpl
dec
adc
lds
push
fnstcw
pop
in
das
in
cmp
xor
jecxz
xchg
stc
and
xchg
dec
xchg
pop
outsl
mov
pop
bound
adc
je
mov
mov
cmp
sub
mov
dec
dec
mov
mov
add
fsubrp
mov
mov
ja
mov
pop
pop
hlt
lret
mov
and
out
loopne
imul
add
and
ret
or
push
add
movsl
or
popa
lahf
das
fimull
sub
mov
mov
daa
add
int
and
sbb
clc
into
rclb
xor
or
jns
xchg
shll
dec
cmp
xor
les
movsb
pop
adc
add
xorl
stos
adc
call
cltd
sahf
pop
sbb
js
or
fs
jp
push
and
aam
push
call
xchg
mov
fs
inc
sub
jle
pop
add
lcall
or
sbb
movsb
lret
jae
or
bound
popf
jl
aas
sbbl
lret
sub
sbb
mov
test
cmc
je
stos
mov
push
xchg
or
movsl
sub
inc
jae
dec
int
jne
out
inc
jno
es
jns
ja
imulb
mov
push
and
xchg
xor
jge
testb
imul
daa
call
adc
push
inc
push
or
pop
int3
cmpsb
lea
mov
fwait
mov
mov
push
cmp
and
imul
out
aaa
and
sub
mov
jb
mov
loope
and
lret
and
jle
stc
inc
push
cld
outsl
xchg
addr16
sbb
insb
punpckhwd
ljmp
xchg
mov
scas
push
mov
mov
inc
inc
xor
fildl
push
mov
sbb
dec
int
push
push
or
jl
das
mov
negl
in
repnz
push
xor
ret
lea
mov
idiv
sahf
pop
fisubrs
ja
shr
adc
jmp
sti
repz
stos
mov
or
adc
sbb
cs
cmc
gs
loopne
dec
and
mov
lcall
je
cmp
loopne
pop
xchg
mov
jb
lea
ss
xor
sbbb
sub
mov
imul
hlt
mov
into
mov
push
push
add
int3
loop
xor
pusha
add
loope
outsb
lods
pop
das
repnz
mov
pushf
pop
mov
add
outsl
rcrb
or
out
aam
icebp
mov
xor
popf
loope
ss
or
std
cwtl
sub
pop
stos
xor
stos
pop
movsb
pop
les
cmpsb
aam
mov
int
jge
sub
jle
rcll
add
lea
aas
ljmp
nop
sub
mov
cmc
in
fnstcw
je
in
and
out
repz
cld
popf
lret
xor
or
mov
mov
test
xchg
mov
cmp
inc
addr16
in
jle
stos
out
insl
inc
pop
mov
cmpl
incl
jo
loope
push
out
fists
enter
test
sub
notb
push
pop
mov
fwait
cmp
addr16
jmp
lret
loope
jge,pt
stc
jne
and
adc
mov
out
and
mov
mov
push
or
andl
rcrl
cltd
adc
adc
xchg
sbb
add
jg
fs
adc
xchg
ret
mov
push
scas
cwtl
xchg
daa
xchg
adc
fwait
movsl
inc
stos
sbb
enter
or
cmc
xchg
popa
shll
mov
xchg
mov
pop
and
stc
stc
mov
je
mov
pusha
cmp
push
inc
adc
cmp
daa
xchg
ret
jecxz
inc
in
or
sbb
cmp
lods
xchg
mov
mov
cmpsb
cltd
jno
xor
test
mov
push
lods
hlt
xchg
sub
out
in
cltd
mov
xchg
add
pop
and
push
add
sbb
jp
scas
pushf
rcrb
std
push
jnp
pop
std
cmp
inc
inc
xchg
ds
inc
dec
push
jnp
das
adc
mov
mov
lods
std
xor
xor
inc
in
lret
sub
sti
or
dec
push
push
jg
mov
in
lods
fwait
mov
aaa
in
cmp
enter
add
pop
mov
mov
mov
rcrl
inc
cld
or
sbb
xlat
push
or
dec
insb
xchg
and
xor
pop
push
push
pop
xchg
pop
adc
xchg
fdivl
push
and
shl
inc
inc
cwtl
push
fidivl
xor
and
fdivrs
adc
popa
movsl
scas
xor
lds
and
in
push
sbb
lcall
aas
leave
cmpsl
fistpl
pop
stc
shl
cmc
leave
jb
ds
out
push
iret
stc
inc
shl
inc
mov
fistpll
hlt
inc
cwtl
adc
xlat
sbb
adc
scas
jae
pop
jmp
imul
cltd
dec
mov
mov
scas
aas
push
xor
pop
insl
cwtl
adc
cmpsl
mov
xor
mov
ret
and
add
cmp
add
mov
push
add
pusha
jle
rcrl
xor
ljmp
call
lods
cmpsb
loopne
xchg
mov
movsb
push
xchg
mov
and
addr16
or
decb
inc
pop
jl
fcomip
or
mov
push
jns
ds
js
jmp
lea
push
and
std
test
lahf
je
push
stos
dec
movsl
push
arpl
out
jmp
lret
iret
outsb
wrmsr
sbb
and
sarl
push
or
dec
add
add
mov
or
cmove
xchg
inc
dec
ss
dec
mov
aam
jbe
test
ja
jo
and
fs
orl
inc
dec
add
outsb
sub
dec
popf
cmp
and
shlb
inc
mov
testb
pop
mov
jb
lret
in
xchg
xchg
and
mov
insb
cmc
sub
jp
mov
add
jge
iret
arpl
cld
sub
push
loope
sti
imul
into
sbb
mov
inc
enter
lahf
pop
imul
gs
cmp
test
mov
mov
pop
jecxz
fmuls
inc
cmpsl
adc
jo
clc
aaa
xchg
xchg
xor
push
paddq
cwtl
pop
sbb
add
xor
pop
in
push
pop
add
mov
dec
mov
sbb
test
pop
flds
xchg
sahf
cmp
dec
sbb
fnsave
test
sbbb
stos
xor
push
mov
lret
push
adc
dec
or
divb
int
ja
xor
sbb
leave
jge
sub
lcall
aaa
insl
popa
fsubl
dec
std
cmc
cs
inc
xchg
bound
xlat
leave
sub
jbe
sub
inc
out
sti
push
mov
stos
pop
in
mov
pop
ja
ret
add
cmp
lods
jmp
cmp
sub
push
xchg
adc
cmpb
sub
sidtl
enter
movb
imul
sbb
ljmp
lods
and
push
out
xor
aas
push
cmp
loop
lret
or
inc
and
test
ljmp
xchg
clc
cmp
loopne
pop
das
clc
test
aam
push
adc
adcl
mov
clc
dec
ljmp
outsb
sahf
icebp
pop
jge
idivl
mov
sub
sahf
lcall
adc
inc
push
jmp
xchg
or
faddl
mov
int3
outsb
into
arpl
adc
push
add
add
clc
punpckhbw
mov
dec
out
mov
repnz
pop
and
fs
mov
inc
test
fisubrl
arpl
je
sbb
fimull
aaa
jle
cmp
mov
stc
sbb
notl
ss
mov
rcrb
xor
loop
sahf
popa
andl
insl
or
mov
mov
call
ds
mov
sbb
push
in
pop
loop
flds
adc
jg
int
pop
insl
into
cmp
loope
cmpsb
pop
and
xlat
iret
jno
mov
sub
ret
pop
mov
pop
and
push
nop
loopne
cmc
js
bound
fwait
loope
xchg
addl
sub
xor
inc
push
das
daa
dec
mov
xchg
push
pop
xor
repz
adc
jecxz
dec
mov
push
pop
add
adc
test
mov
inc
inc
ss
push
int
fs
popa
push
inc
cmp
adc
inc
test
lea
xor
adc
lret
or
cmpsb
and
aaa
rorb
ja
out
mov
fstpl
outsl
jae
sbb
inc
test
adc
je
sbb
mov
testl
in
scas
ret
fisubrs
test
push
out
xor
pop
pop
mov
jle
lods
sti
jecxz
fs
rclb
jmp
dec
fistpl
or
pusha
in
cmp
push
adc
mov
in
adc
sub
mov
lcall
xchg
sbb
and
nop
leave
fdivl
inc
mov
mov
aas
rcrl
xchg
sub
into
sbb
mov
fstpl
insl
and
in
and
mov
jecxz
test
pushf
adc
into
jmp
cmp
xchg
movsl
jecxz
pop
push
aas
aas
aad
in
xchg
je
adc
gs
and
push
xchg
xchg
mov
push
mov
pop
xchg
rclb
and
dec
ljmp
push
outsb
inc
pop
in
imul
cmp
inc
imul
cmp
xor
test
cmc
cmp
mov
mov
mov
sub
adc
fisttps
adc
aam
or
add
enter
and
lcall
lods
rclb
pop
push
or
or
ljmp
fs
lcall
add
push
call
and
xchg
pop
jg
pop
insl
jge
sbb
xor
in
xchg
cmp
leave
aam
cmp
ret
jg
pop
fsubl
cmpl
xchg
mov
ljmp
push
mov
mov
adc
xor
mov
ss
aad
ljmp
loopne
enter
pop
movsb
stos
shll
mov
sub
icebp
adc
bound
pusha
test
lods
adc
mov
mov
mov
adc
pop
ljmp
or
lcall
xor
cwtl
negb
iret
insb
push
or
out
mov
mov
dec
ja
pop
out
popf
or
lahf
mov
add
negl
sub
mul
int3
mov
xchg
mov
jmp
mov
fsts
cli
out
daa
imul
imul
fwait
fs
outsb
and
mov
jmp
xchg
xor
sub
jno
fistps
aad
out
sti
stos
cli
jbe
lods
jg
and
rcl
das
shl
mov
mov
push
cli
idivb
pop
int
inc
clc
fnstenv
js
adc
inc
push
xor
push
int
test
dec
lock
cmp
pop
std
mov
push
jnp
add
and
or
cmp
js
ret
push
lret
arpl
jp
outsb
jb
test
add
pop
frstor
mov
clc
testb
inc
adc
mov
fwait
ret
cmc
repz
pop
scas
stc
je
fwait
sub
in
or
sahf
movsl
aad
loop
jne
or
loop
out
pop
sbb
shll
dec
cmp
cltd
test
loopne
lret
inc
repnz
out
cwtl
scas
jg
xchg
cwtl
inc
call
or
pop
dec
cmp
pop
xor
xchg
sub
fsubr
clc
std
ret
push
cmp
xlat
dec
ret
aaa
popa
imul
push
insl
lea
mov
notb
out
imul
test
mov
pop
or
ljmp
aaa
mov
incl
mov
or
xchg
out
lock
ja
or
jmp
cmp
push
xorl
rorb
adc
loope
cs
push
sub
dec
jmp
jl
push
popa
push
fidivrl
dec
pop
mov
sub
xchg
lret
sbbl
sub
les
and
push
les
shlb
enter
stos
lods
pop
cmp
inc
pusha
insb
jecxz
xlat
xor
push
in
rep
and
pushf
into
sub
inc
ret
push
sub
movsb
pushf
jmp
sbb
leave
xchg
and
jge
xchg
dec
idivl
int3
iret
adc
jge
pop
sbb
jecxz
mov
into
mov
pop
rcl
sbb
mov
xor
lds
sub
cmpsb
cmpsb
stc
cmp
or
js
out
mov
out
mov
cli
in
subb
adc
jge
mov
cmpsl
sbb
sbb
mov
lret
cmc
inc
out
mov
jo
insb
mov
and
in
mov
call
hlt
js
test
cmpsl
pusha
mov
jne
call
xor
ss
cld
andl
jge
inc
cmp
sbb
xor
dec
mov
je
and
js
push
insl
sahf
inc
mov
xor
imul
aaa
nop
sub
hlt
retw
shll
sbbb
pop
sub
mov
mov
xchg
cmp
imul
adc
arpl
jle
jns
cmp
cli
fadds
dec
sub
in
push
mov
cmp
outsl
push
and
jb
sahf
movsb
ja
mov
out
int3
xor
xchg
adc
add
push
xchg
test
lock
add
jb
xchg
ret
cmp
scas
lea
mov
hlt
push
test
add
jb
popf
push
or
push
scas
int
mov
pop
pop
imul
in
jae
mov
inc
add
outsb
xor
sub
fucom
fildll
nop
add
pop
cmp
sbbb
cmp
fwait
push
lds
pop
mov
fucomi
leave
sti
push
loopne
lret
emms
sub
cmc
cmp
push
enter
aas
inc
pop
jp
add
mov
negb
push
mov
fsubrp
out
mov
dec
push
push
aas
cmp
int3
xor
mov
jle
cmp
sbb
push
adc
lret
cmp
cmp
std
pop
into
fs
dec
clc
xchg
loopne
test
pop
mov
dec
and
jge
inc
scas
cmp
addb
inc
mov
or
xlat
xor
sahf
mov
cwtl
inc
add
pusha
sbb
cmp
xchg
fidivrs
lret
push
adc
push
adc
push
scas
repnz
push
ret
test
lcall
lds
cmp
and
jmp
mov
std
cmp
mov
cmp
cwtl
dec
cmpl
xor
jp
mov
dec
repz
inc
idivl
aam
lahf
cmp
lcall
mov
fidivs
pop
and
movsl
clc
cwtl
sbb
ljmp
adc
std
push
jne
mov
cmp
cmp
xor
lods
cmpsb
loopne
gs
push
sub
push
push
loope
and
les
nop
daa
mov
cmp
clc
cmpsb
jnp
outsb
add
test
sahf
fs
mov
or
bound
inc
dec
movsb
or
sub
popf
test
or
clc
push
loop
adc
add
xor
dec
pop
test
rcrl
rorb
insb
sub
jo
adc
int
clc
pop
xchg
sub
sbb
add
sbb
in
icebp
jle
cmp
in
xor
test
ret
das
xor
pop
mov
mov
mov
mov
jbe
into
pop
push
push
movsb
dec
stos
or
jp
outsl
outsl
loopne
mov
cltd
jle
xor
adc
cmc
cs
lea
inc
mov
cmp
add
jmp
inc
mov
jp
inc
repnz
cmp
dec
add
jl
mov
fisubl
andl
repnz
out
mov
in
mov
call
leave
xchg
cmp
test
adc
jnp
es
and
fcmovne
jecxz
jp
ret
in
dec
mov
add
and
ljmp
pop
cli
lock
loopne
in
pushf
out
jne
pop
and
push
call
sbb
cmp
testl
in
mov
pop
sbb
inc
push
movsb
xchg
push
mov
ret
xlat
or
add
ds
popa
fcomp
or
jmp
int3
out
scas
fdivrl
mov
mov
ret
lds
negb
loop
pop
data16
fxch
loopne
roll
mov
mov
rcll
imull
aam
mov
cld
nop
ret
sub
call
adc
add
js
ds
dec
lock
mov
adc
in
mov
mov
push
icebp
pop
lods
dec
push
shlb
jno
imul
mov
push
sbb
and
push
xlat
cwtl
popf
mov
push
pop
add
mov
pop
lds
aas
shll
imul
or
cmp
sbb
add
adc
push
sub
jmp
mov
stc
cltd
pop
icebp
mov
add
xlat
xor
pop
mov
or
mov
cmp
or
lods
ja
push
in
pop
lcall
mov
stos
sub
jno
add
in
mov
or
enter
and
aas
mov
int
jge
jge
movsb
loop
dec
jne
movsb
fs
jb
mov
mov
jecxz
and
pusha
cmp
mov
call
mov
arpl
adc
jnp
sbb
xchg
inc
push
mov
mov
or
in
sarl
loopne
sbb
out
into
push
push
lret
les
inc
sbb
or
fistpll
xchg
mov
push
loop
pop
loope
mov
ret
in
loope
out
pop
orl
dec
adc
loope
shll
stos
aam
pop
daa
mov
push
adcl
adc
stos
je
rcr
daa
inc
push
cmp
sti
xchg
enter
mov
es
jbe
decb
xor
mov
cmpsb
scas
fs
and
aad
dec
jmp
mov
mov
mov
lahf
sub
sbb
call
lret
ret
mov
add
scas
sub
add
roll
or
enter
jl
pop
test
jb
adc
in
lret
cmc
icebp
inc
jne
fs
ljmp
in
movsb
jp
push
pop
addr16
fisubl
mov
pusha
mov
cld
mov
insl
or
lret
mov
xchg
xor
push
mov
outsl
dec
pop
pushf
clc
sbb
mov
cmpsb
int3
xor
cmpsb
shll
mov
outsl
mov
addr16
jno
or
dec
jmp
dec
imul
sub
xchg
shlb
xor
scas
mov
ja
push
dec
movsl
pop
pop
mov
nop
nop
add
out
xchg
xorl
iret
test
add
mov
aas
sbb
aas
inc
sbb
mov
jmp
ror
or
xor
stos
ror
lds
stc
lock
add
andl
mov
aad
xchg
jp
test
sbbb
sub
aam
insb
jp
insl
stos
pusha
cmpsb
ret
dec
push
pop
push
sub
insb
repz
je
mov
cmpsb
fcoml
frstor
xor
mov
das
test
sbb
xor
arpl
fs
sbb
mov
and
mov
fwait
xor
sub
push
imul
add
dec
data16
push
sarl
xor
mov
cmpsb
test
lds
imul
fwait
nop
fprem1
jl
out
incb
outsb
push
cmp
xor
out
add
mov
test
pop
jne
punpcklwd
lock
test
nop
xchg
xor
lahf
adc
add
mov
jne
popf
push
jle
lods
cmpsb
mov
cs
mov
sbb
push
icebp
and
mov
pop
pop
jp
ja
in
cli
stos
or
and
dec
dec
out
lret
jl
add
es
sub
sub
aam
cld
out
mov
cmp
hlt
dec
mov
mov
mov
jmp
xchg
repnz
mov
push
sbb
jecxz
je
push
mov
cs
adc
sbb
movsb
push
lret
lret
xchg
pop
cmp
nop
xchg
bnd
lds
stc
xor
leave
rep
in
lds
das
push
sub
imul
cld
cmp
and
jbe
or
jno
pop
mov
dec
sbb
jae
leave
ret
popl
jl
mov
adc
sti
movsb
cwtl
hlt
pop
arpl
jp
and
xchg
pop
arpl
mov
pusha
mov
lock
jg
sub
and
xlat
leave
jecxz
xchg
inc
movsl
jne
add
sbb
push
mov
fs
loop
sub
lods
pusha
sbbb
cmovo
dec
adcb
push
into
icebp
cmp
mov
neg
or
cmp
push
add
fcomip
popa
sub
add
sbb
mov
cmp
fwait
inc
rcrb
xchg
mov
stos
pop
sbb
in
lds
repz
push
mov
mov
cltd
push
xor
lea
scas
ffreep
push
pop
xchg
mov
cmp
sub
addl
inc
std
or
dec
ss
repnz
or
cld
ds
lods
les
push
pop
ss
or
nop
xchg
das
gs
daa
das
clc
data16
in
jl
into
rcr
test
cmpsb
lret
lcall
scas
and
out
inc
xor
jge
mov
add
scas
mov
push
daa
test
cmp
test
repz
inc
adc
call
icebp
repnz
sahf
push
shr
pop
sbb
mov
addr16
xchg
rcll
push
push
dec
lcall
jmp
xchg
inc
jge
dec
pop
cmpsb
xlat
mov
hlt
mov
push
fcompl
push
arpl
and
xor
mov
jno
cmp
inc
mov
dec
ljmp
lds
push
call
mov
bound
pop
repnz
cmp
cmp
jl
mov
adc
fldt
mov
mov
mov
ja
in
jbe
push
sbb
into
aam
test
push
mov
outsl
stos
imul
push
xor
add
sbb
lahf
mov
xchg
and
pop
sbb
shlb
cli
dec
popf
jne
jnp
add
jp
pop
pop
mov
aas
xchg
clc
iret
jns
dec
inc
jge
jge
sub
adc
int3
stos
mov
jo
cmc
into
test
xchg
inc
sub
call
out
in
dec
outsl
iret
test
imul
jle
xor
hlt
push
or
stos
push
push
fwait
leave
mov
mov
and
dec
and
std
mov
jns
push
pop
add
adc
shlb
jne
daa
imul
insl
adcb
xchg
mov
sub
jl
bound
and
jb
add
push
hlt
pop
cwtl
pop
movsb
cmpsb
out
popl
out
ja
test
pop
pop
out
jae
and
pop
insb
cmp
repz
xchg
xlat
mov
mov
inc
inc
lahf
or
sub
xchg
xlat
sub
mov
mov
mov
rol
sub
and
pop
sbb
mov
xlat
je
mov
mov
ret
jbe
xchg
and
inc
fdivrs
and
fsubrp
adc
mov
lea
pop
sub
mov
addl
pop
cmp
xor
int3
sbb
mov
lahf
push
leave
stc
mov
shll
repz
bound
inc
mov
adc
or
or
fiaddl
add
adc
leave
cmc
nop
scas
test
mov
or
adc
cmp
jno
test
or
shlb
jecxz
cmpsb
sub
cmpsl
jne
add
lods
pop
cli
incl
push
adc
cmp
inc
and
gs
mov
cld
movsl
lock
or
test
mov
mov
dec
aad
push
sbb
js
enter
add
cltd
push
ds
push
loopne
fwait
dec
cmp
inc
sub
jne
scas
subl
or
mov
arpl
mov
scas
aad
inc
push
aad
jne
out
hlt
fadds
push
adc
add
mov
xchg
jle
mov
xor
and
mov
iret
in
sti
test
mov
loopne
push
sbb
lock
popa
jae
push
jb
cmp
popf
xchg
faddl
add
orb
clc
sub
mov
add
mov
mov
lock
jge
arpl
adc
xor
ret
icebp
mov
sub
out
test
and
rcr
icebp
mov
jle,pn
jg
stos
iret
movb
adc
add
push
pop
jle
sbb
fisttps
std
push
jle
daa
lret
sub
and
and
xor
xchg
add
add
push
inc
pop
dec
pop
cmp
add
pusha
inc
pushf
jae,pn
xchg
fdivl
inc
subl
hlt
sar
icebp
movsl
shll
add
rcll
cmpsb
scas
or
in
lea
pop
xlat
in
bound
cs
daa
ss
xchg
bound
adc
movl
insb
mov
fs
scas
ja
pop
std
out
xor
jb
js
jp
aas
jle
dec
jb
jg
mov
pusha
dec
aaa
xchg
std
lret
inc
call
lret
movsl
adc
cs
xor
push
leave
shll
rorb
fdiv
cmp
outsl
and
or
in
and
sub
loope
or
or
jge
xchg
adc
jnp
ljmp
pushf
clc
roll
xchg
inc
mov
inc
mov
sbb
xlat
jge
mov
je
rcrl
sbb
jmp
hlt
lea
add
push
lea
shll
aad
jp
es
inc
aaa
testb
xchg
mov
push
leave
idivl
aam
sub
pop
pusha
daa
and
fisubs
lea
je
sub
gs
push
leave
fidivrs
dec
xchg
sbb
int
into
inc
sarb
sbb
pop
fisubrs
jmp
mov
and
rclb
pop
mov
scas
add
into
out
bound
or
leave
and
pop
shl
pop
jb
pop
call
rolb
aad
fsubl
mov
aam
test
xchg
test
fld
cs
adc
ret
xor
out
sarl
stos
jmp
dec
push
cmpb
add
lods
cmp
push
mov
push
pop
sub
not
enterw
cmp
test
sub
rol
imul
and
xor
and
add
movsl
push
jo
adc
push
mov
fsts
scas
push
push
and
idivb
push
cmp
roll
dec
sub
cmp
ret
shlb
mov
cmp
repnz
xchg
ret
mov
sbb
jbe
out
lret
js
ror
test
sti
xchg
rorb
out
fdivl
jecxz
movsb
je
pop
mov
dec
inc
mov
dec
jo
pop
outsb
out
sub
inc
imull
cs
adc
mov
ret
cmp
push
pop
and
mov
shlb
mov
and
push
dec
in
imul
lea
and
cs
shlb
mov
sbb
ss
jns
xor
sub
insl
dec
fnsave
in
dec
je
mov
jae
in
inc
push
int
test
or
mov
leave
dec
pop
hlt
shl
stos
adc
aad
iret
jns
add
ljmp
fcmovbe
or
in
push
jae
cmpsb
cmp
sbb
aad
aaa
int3
cmpsb
jnp
mov
rcr
xchg
ret
sbb
std
lahf
call
dec
dec
lret
xor
test
mov
cmp
pop
ds
movsb
adc
outsl
jo
mov
loop
xchg
popf
dec
inc
ret
insb
cmp
mov
lcall
push
sahf
and
fnsave
mov
mov
jae
adc
test
clc
test
loope
and
testb
lret
push
jno
dec
cmp
push
and
clc
mov
leave
out
mov
dec
pop
movsb
shl
or
enter
cwtl
or
imul
sbb
addb
sbb
xchg
pusha
mov
jmp
fwait
ss
bswap
fisubl
push
aam
mov
push
das
insl
std
sub
fldl
addr16
mov
cmpsl
mov
aas
pop
jp
or
scas
pop
daa
adc
mov
mov
out
mov
jl
push
test
push
repz
lret
add
mov
mov
mov
sti
jg
xchg
ror
dec
xchg
mov
xchg
pushf
dec
mov
stc
insb
push
rclb
jae
movsl
cld
jae
mov
aaa
jecxz
jg
in
jo
mov
xor
jns
leave
cmpsl
dec
xchg
xchg
mov
lock
ret
call
dec
inc
insl
lds
ret
out
test
jns
test
imul
lret
sbb
out
cwtl
mov
dec
fmull
packuswb
stos
xlat
ja
lods
inc
pushf
and
jbe
mov
dec
scas
sbb
andl
jae
cmp
mov
jl
lcall
xorb
adc
or
mov
ret
push
imul
sbb
lods
clc
fs
mov
dec
jmp
dec
leave
pop
jae
icebp
pop
push
mov
test
popf
mov
out
jb
pop
adc
xchg
cmpsb
out
pop
inc
outsl
cli
incb
push
ret
sub
cltd
mov
mov
or
adc
cmpsb
decl
test
call
daa
mov
push
mov
fnstsw
xor
jecxz
sub
orb
mov
pop
push
and
sub
or
mov
and
shl
in
rclb
cltd
add
mov
arpl
inc
aad
mov
add
jae
add
aad
aad
push
cmp
bound
jb
imull
cmp
or
test
push
add
xchg
fcompl
sbbb
cli
pop
add
add
and
lcall
xchg
ds
bound
popf
mov
imull
jae
mov
mov
mov
pop
add
fistpl
jge
push
pop
jp
ss
imul
leave
in
push
xor
push
fdivrl
in
out
jge
sbb
adcb
push
mov
xor
xor
mov
cmpsl
imul
lds
popa
jns
out
mov
adc
jg
insb
dec
enter
add
movsb
jmp
mov
cwtl
mov
loop
andb
cmp
and
mov
jp
out
xchg
and
dec
cld
enter
bound
out
aad
jno
cmpb
nop
aam
jns
out
mov
mov
jg
jnp
pop
loope
aam
int3
repz
sub
jecxz
pusha
sbb
mov
rcrl
cltd
aaa
scas
call
shrl
pop
out
pusha
cmp
inc
dec
ror
out
sub
add
gs
dec
sub
fadd
ds
add
arpl
jp
pop
enter
loop
xchg
mov
fadds
xor
movsb
mov
mov
jb
das
adc
and
pop
sarb
in
daa
dec
push
aad
fwait
daa
fadd
cld
ror
mov
and
loopne
mov
or
sub
lds
jle
mov
aas
push
adc
or
mov
push
mov
outsb
pop
stos
cmp
jle
dec
sub
cmp
ds
movsl
mov
loope
out
and
data16
ja
dec
push
jle
lea
push
pop
mov
into
insl
subb
icebp
sbb
sahf
fdivr
pop
jno
sarb
push
inc
mov
inc
jmp
shr
adc
cwtl
xchg
pop
mov
mov
mov
enter
inc
imul
fiadds
inc
push
mov
and
push
sbb
stos
and
xchg
call
imul
sahf
ljmp
add
cmp
fildll
pushf
pop
aaa
fcoms
jae
in
push
and
insl
fistl
rcrl
sbb
aam
loopne
ret
imul
andl
dec
push
cmp
or
subb
adc
mov
dec
or
cmp
add
push
testl
addr16
dec
es
cmpsb
xchg
inc
sarl
mov
rcr
in
cmp
mov
dec
add
xchg
pop
inc
cmp
mov
sub
mov
scas
xchg
repz
sti
inc
jne
out
shl
cmp
lahf
ds
jb
push
mov
push
rorb
adc
mov
dec
xchg
inc
dec
mov
mov
mov
mov
je
out
call
mov
pop
outsb
pop
ja
rcl
xchg
xchg
lock
loop
jmp
fucomi
fs
sub
push
cmp
sbb
sub
xchg
orl
jbe
aad
shll
sahf
clc
mov
dec
adc
dec
jb
push
mov
mov
fbld
mov
jmp
imul
sub
bound
and
sub
inc
jbe
push
imulb
xchg
into
ja
mov
lret
jo
in
cmp
outsl
mov
mov
cmp
push
clc
add
push
lods
cmp
adcl
sarl
dec
adc
sarl
jae
push
into
xlat
loop
mov
cmp
cmc
pop
ret
out
out
mov
arpl
add
cwtl
sbb
jmp
ret
mov
cmpsl
out
lods
add
negb
jl
pop
fidivl
imul
mov
scas
jl
mov
stos
scas
dec
std
lret
inc
jae
or
cmp
addr16
sti
fwait
adc
mov
mov
xor
ljmp
push
pop
add
stc
xchg
cmp
outsb
add
andb
cmp
mov
and
mov
adc
mov
jmp
pop
es
sub
xor
push
ds
mov
or
dec
push
jp
addr16
mov
cvtpi2ps
and
adc
cmpb
push
adc
xlat
xchg
ror
loopne
pop
add
mov
sbb
popa
xor
push
int3
jl
enter
or
jecxz
inc
fs
mov
adc
jg
sub
xor
scas
call
push
jb
sub
pop
rcrl
or
sbb
xchg
sbb
jle
repz
push
jp
jge
enter
dec
pop
in
clc
xchg
adc
jb
xor
pop
mov
daa
xor
xor
dec
arpl
je
enter
inc
mov
and
sbb
cltd
fsubl
addr16
dec
sti
fnsave
jb
add
cmp
and
or
inc
xor
jge
pop
cmpsl
pusha
das
dec
faddp
out
call
adc
sub
icebp
pop
mov
sbb
lds
lahf
xchg
dec
pop
xor
xor
sub
jmp
shll
dec
and
or
repnz
or
ror
and
push
js
sbb
mov
cmp
int
mov
addr16
ds
rcr
or
jp
loope
fistpl
lock
push
out
addr16
inc
cld
fisttps
jp
loopne
dec
insb
cmp
xor
dec
mov
inc
and
mov
and
lahf
aad
je
fsubl
sub
jmp
pop
adc
cmp
pop
cmp
in
cwtl
insb
adc
daa
jo
add
nop
dec
sarb
fcoms
inc
pop
sub
add
sbb
ljmp
adc
push
push
nop
add
pushf
lret
and
mov
test
dec
mov
cmpsb
mov
fiaddl
jmp
cmc
int3
push
insb
xchg
test
lds
mov
andb
sbb
leave
lock
and
in
icebp
mov
fisubs
ljmp
mov
jge
sarl
sarl
xchg
imul
pop
push
jno
push
icebp
adc
xchg
insb
mov
jno
call
pop
in
push
or
and
xlat
outsb
test
repz
sub
mov
in
lcall
inc
dec
ss
jne
xorl
data16
pop
in
stc
sbb
add
outsl
jecxz
sub
dec
loopne
inc
pop
out
mov
cmp
loopne
scas
and
push
inc
negl
mov
leave
ret
test
lock
inc
xor
cmp
imulb
xor
icebp
sarb
cmp
inc
sub
aad
pusha
subb
in
xchg
in
nopl
aaa
jge
mov
cmpsl
mov
jbe
cmp
in
int3
pop
dec
fildll
cmp
mov
ja
push
jbe
int3
mov
or
mov
out
xor
cmp
sarl
out
lds
push
jne
test
sub
xchg
mov
fadds
adc
fwait
sub
test
xchg
xor
cmp
sahf
mov
pusha
loopne
sti
hlt
rolb
sbb
mov
jne
or
lcall
iret
xor
test
dec
add
xor
jb
sbb
mov
jae
rcrl
sub
insl
in
jle
insl
mov
pop
aaa
lcall
jl
je
test
xor
push
in
lcall
stos
adc
xor
nop
decb
sub
sbb
nop
push
sub
mov
movsb
mov
or
mov
dec
sbb
adc
adc
sbb
push
data16
cs
std
mov
popaw
xchg
bound
js
jno
push
cmpsb
sub
outsl
out
lret
cmp
cmp
xchg
stos
xor
mov
sub
lahf
daa
mov
fnstcw
jnp
pop
pop
fisubrs
pusha
aas
push
jg
lods
adc
ret
mov
scas
aas
aaa
jg
ret
cs
and
xchg
xor
jns
cmpsl
or
int3
or
ja
aad
dec
mov
rcl
cmp
gs
hlt
xchg
jnp
int
pop
xchg
ds
xchg
cmp
sbb
sub
and
arpl
mov
jecxz
pop
popa
test
imul
movsb
adc
aas
add
mov
xor
pop
test
jmp
mov
jb
jne
daa
scas
addb
mov
xlat
test
cmc
sahf
pop
nop
add
pusha
mov
out
popf
dec
jbe
ja
xor
pop
xor
lret
leave
mov
cmp
jg
push
aaa
stc
scas
rcr
cmc
fmull
mov
push
repnz
inc
dec
js
in
add
mov
addr16
mov
aas
and
jl
mov
iret
inc
dec
dec
in
jp
push
pop
aas
movsb
sub
cwtl
ss
ret
das
nop
lret
adc
lods
mov
repnz
out
push
aas
push
jae
jne
push
mov
mov
lea
cmp
mov
sub
xor
cs
js
mov
pop
jno
sub
jne
fnstsw
movsl
daa
iret
lods
ds
add
sub
lahf
or
push
jo
pop
sub
out
xor
rcll
add
inc
cltd
aad
jle
mov
cmpsb
xchg
jmp
sub
pop
xlat
xchg
sub
lret
gs
sti
neg
dec
xor
mov
add
push
jl
test
mov
and
sti
idivb
sub
mov
lahf
mov
cmp
sub
dec
mov
in
lahf
push
imul
lcall
push
cmp
and
addr16
sbb
cmp
or
pop
mov
out
mov
loope
mov
lds
repnz
push
or
cmp
mov
xor
rcrb
adcl
addb
push
imul
movsb
push
pop
les
sub
mov
or
pop
test
sbb
add
mov
fnstsw
mov
push
jg
icebp
jl
subb
mov
por
jecxz
fnstsw
or
fstl
add
xchg
aas
fsubr
int
xlat
repnz
xchg
or
or
leave
iret
ja,pn
mov
sub
outsl
not
xor
mov
ficoml
jns
arpl
arpl
or
dec
xchg
imull
sbb
or
jl
mov
cwtl
xor
ss
sbb
out
adc
mov
jecxz
imul
int3
jge
xor
lret
push
outsl
lock
xor
mov
sbb
in
adc
popa
ucomiss
je
stos
cld
aam
leave
cmp
xchg
loope
mov
hlt
mov
inc
rcrb
sti
lret
sbb
lahf
leave
icebp
mov
xlat
jae
stos
inc
sti
cmp
and
repz
flds
pusha
sub
xchg
imul
mov
mov
jns
loopne
jns
adc
testb
sahf
push
arpl
fs
cmp
ret
fsubrl
dec
popf
add
inc
pop
adcl
test
arpl
mov
cs
aaa
mov
jbe
rcr
loop
test
add
and
hlt
stos
push
mov
adc
inc
fmull
xchg
jecxz
das
loope
xchg
ds
or
adc
ljmp
push
fwait
adc
jae
push
sbb
mov
sarl
mov
fsubrl
cmp
jmp
mov
jmp
test
std
add
pop
sub
int3
mov
adc
test
pushf
mov
cmp
loope
push
push
cmp
mov
jbe
xchg
push
lret
mov
add
sahf
leave
pop
add
inc
mov
mov
dec
fsts
mov
pop
jp
push
in
jle
mov
pop
inc
add
pop
outsl
xor
inc
xor
leave
std
push
int
inc
rolb
add
dec
daa
xchg
dec
lahf
mov
out
test
dec
ja
scas
lcall
jle
cmpsb
sbb
dec
fsubs
es
cmpsb
mov
or
adc
in
repz
add
dec
inc
inc
test
es
shrl
cmpb
mov
cmp
and
push
pop
fbstp
add
outsb
sbb
data16
or
cmpsl
std
or
xor
out
or
inc
les
bnd
cs
packssdw
sti
xlat
arpl
sahf
ljmp
gs
sub
movsl
dec
fwait
in
pop
stc
dec
test
cmpb
mov
lock
mov
cmpsl
and
outsb
xchg
mov
and
xchg
push
mov
neg
in
andb
icebp
lcall
sub
push
adc
loopne
sub
jmp
data16
xchg
push
lea
out
movsb
outsb
adc
lcall
mov
mov
sub
mov
add
daa
das
scas
pop
mov
mov
sahf
push
jb
and
mov
nop
repnz
hlt
jbe
or
mov
outsl
dec
ljmp
and
ja
lea
push
ret
popf
es
or
mov
mov
cwtl
dec
mov
imul
addl
call
lds
sbb
scas
cmp
test
dec
xchg
dec
and
cltd
je
mov
inc
sub
insb
mov
push
movsl
pop
insl
or
cmp
sub
mov
rcrl
mov
sub
xor
mov
sti
and
int3
aas
cmpsl
daa
aad
and
iret
pop
popf
lock
or
sarb
mov
push
jp
repnz
xchg
in
inc
aaa
cmpsb
sbb
inc
adc
test
jno
cmp
loope
orb
pusha
mov
xor
ficoms
lret
outsb
mov
and
or
fildll
xlat
jno
fcompl
push
push
xchg
cmpsb
or
pop
lahf
mulb
das
das
hlt
xchg
adcl
clc
test
mov
insl
mov
xlat
sbb
push
aas
xor
and
fldl
out
add
test
add
pop
cmp
in
cwtl
cmp
test
aas
cmp
adc
jmp
xor
add
cs
ja
movsb
push
cmpsl
xchg
dec
js
imul
lret
mov
pop
outsb
cmpsb
mov
jnp
or
data16
js
insb
bound
repz
jnp
test
dec
push
sbb
add
sbb
sub
mov
aad
xor
pop
negl
cmp
and
pop
pop
add
lret
je
lahf
sub
dec
les
jp
push
pop
mov
data16
lds
xchg
enter
mov
mulb
adc
mov
notb
roll
mov
ja
loope
cmp
mov
and
adc
mov
xor
jle
xchg
mov
ljmp
inc
adc
repz
sahf
outsl
aas
lock
inc
pop
jle
pop
loop
cltd
pop
push
leave
add
pop
and
call
pusha
mov
sub
push
movlps
jo
popf
inc
pop
cmpsb
es
pop
add
cwtl
movsl
push
mov
js
clc
add
xchg
pop
and
mov
loope
mov
negb
pushf
lock
cmp
xor
dec
mov
les
cmp
pop
sub
cmpsb
xlat
push
sbb
push
fs
hlt
pop
dec
fsubrl
cmp
insb
addr16
mov
test
jb
inc
mov
pop
push
sub
out
fsts
in
dec
add
aam
jb
lahf
out
negl
and
push
sub
pop
jbe
pop
rorb
or
imul
imul
jecxz
cmp
sub
add
xchg
cmpsl
add
adc
pushf
cmpsl
dec
cmpsl
dec
fmul
bound
xorl
ja
xchg
jne
cmp
xor
les
jno
insl
cmpsl
dec
fisubrs
push
and
adc
stc
mov
jmp
pop
jo
push
dec
and
ret
cmp
or
inc
inc
pop
outsl
aad
loop
out
ds
mov
inc
jge
mov
dec
mov
arpl
pusha
std
sar
jb
in
in
mov
inc
xchg
jp
push
shrb
mov
loopew
fdivs
and
cld
loope
pop
xor
in
push
pop
cmp
loopne
push
imul
sbb
sub
jmp
mov
or
cmp
imul
cmp
es
mov
adc
xlat
imul
decb
inc
sarb
jmp
pop
cwtl
aas
push
inc
cmp
or
push
loop
lcall
lea
and
nop
xchg
and
rorl
rorb
add
pop
xor
push
imul
fidivrl
in
stos
push
dec
mov
subl
or
and
push
lods
xchg
lea
ficompl
cwtl
mov
in
sahf
cli
mov
add
mov
xlat
inc
push
mov
pop
sbb
mov
mov
jae
rcrb
hlt
ret
push
aas
or
lret
inc
call
push
inc
and
push
call
xchg
mov
adc
cmp
sahf
out
nop
mov
xchg
cmp
mov
adcl
xchg
xchg
jg
pop
mov
xchg
inc
push
call
mov
les
and
frstor
or
insb
jo
fadd
and
and
inc
arpl
ficoml
push
scas
jl
add
xor
and
sbb
mov
mov
ret
push
push
adc
enter
into
push
cmp
ficompl
shrl
out
fstl
roll
and
mov
lds
mov
rcl
mov
xchg
xchg
mov
mov
repnz
cmpsb
mov
ret
jb
cmp
shrd
add
aam
repz
mov
inc
dec
sbb
mov
push
cmpsb
fildll
sub
pop
shr
inc
xorps
and
mov
jns
sub
push
xchg
sub
in
mov
inc
fs
mov
aaa
out
dec
loope
add
out
and
push
pop
dec
movsl
cmp
mov
rol
pushf
sbb
mov
jae
cwtl
jns
cwtl
mov
jb
xchg
pop
clc
inc
adc
add
add
subb
jg
xor
jns
cmp
mov
dec
or
divps
ret
movsb
mov
pop
and
add
lret
mov
cld
stos
stos
nop
dec
jo
pop
jo
int3
sub
cmc
stos
in
lock
inc
jne
loopne
repz
addr16
sbb
jecxz
daa
cmp
pop
adc
inc
aaa
loope
sbb
mov
pusha
adc
cmp
inc
xchg
xor
cwtl
mov
loopne
push
repnz
mov
insb
pop
stos
inc
pop
add
dec
lods
add
push
sbb
loope
mov
mov
and
sub
rclb
clc
ljmp
fwait
mov
fmul
in
cmp
pop
mov
push
and
adc
hlt
dec
mov
inc
fimuls
jne
adc
js
popf
jle
sahf
cmp
xchg
xchg
jle
sub
mov
lds
arpl
es
lds
fsubp
or
sbb
js
dec
in
in
int
inc
xchg
adc
mov
in
or
and
out
mov
lret
pop
cs
es
mov
leave
mov
pusha
testb
xor
xchg
mov
push
adc
outsl
aam
mov
insb
out
pop
std
xor
xor
sub
mov
orl
icebp
xor
push
decl
or
cmp
inc
lea
test
mov
gs
sti
neg
lock
hlt
in
cld
dec
div
sbb
test
icebp
push
xor
fs
rorb
je
mov
shlb
in
shr
push
adc
lods
cli
jne
adc
pusha
mov
adc
mov
into
jecxz
int3
insl
ss
xchg
stc
shrl
test
sbb
lret
and
or
loope
lahf
fcmovu
jge
xor
add
cmp
push
mov
int
fdivl
data16
sub
mov
adc
mov
pop
sti
out
inc
fwait
sti
inc
hlt
adc
pop
cmp
loopne
std
ja
pop
push
inc
popa
xorl
dec
jmp
loopne
inc
add
jmp
pushf
cmp
or
jno
xchg
test
movsl
ljmp
out
dec
mov
push
enter
mov
push
int
pusha
clc
lcall
hlt
fiadds
pop
shll
cmp
sub
cmpsb
sti
sub
push
sbb
pop
ja
cmc
js
movsb
in
stc
xor
je
xchg
xchg
les
mov
jmp
in
adc
sarl
lods
pop
sub
dec
popa
pusha
xchg
cwtl
sub
das
sub
test
shll
pop
xchg
sbb
jo
repz
call
cwtl
jb
es
add
insb
stos
enter
adc
mov
xor
shll
and
xlat
mov
pop
mov
mov
mov
std
cmpsb
mov
push
clc
lea
and
shl
cmp
and
gs
lock
mov
dec
push
test
loop
jp
enter
fisttpl
xor
mov
add
shlb
outsb
das
les
mov
inc
stc
push
mov
jg
push
popa
pop
icebp
movsl
pop
add
mov
push
sti
mov
cltd
and
xchg
or
enter
inc
mov
movsl
pop
mov
mov
sti
das
and
lcall
adc
out
shll
scas
push
or
mov
repz
inc
dec
pop
dec
aaa
outsl
les
add
jl
dec
out
or
xchg
clc
push
and
mov
int3
push
outsb
test
push
fistpl
mov
iretw
push
out
outsb
mov
mov
mov
xchg
jp
and
iret
add
mov
mov
xlat
dec
test
adc
push
mov
inc
ja
mov
push
out
push
ss
cld
mov
pusha
and
pop
js
lret
clc
lahf
mov
in
sbb
and
jns
adc
inc
adc
add
push
int3
and
jo
dec
fcom
in
add
jbe
mov
in
push
inc
outsb
pop
stos
mov
outsb
mov
dec
sbb
xor
pop
sub
dec
push
mov
xchg
pop
mov
scas
push
push
fistps
mov
lods
xor
cli
mov
jle
and
rcr
mov
push
mov
jmp
in
push
or
loopne
mov
rcrl
push
repnz
cs
sbb
mov
sbb
sub
pop
dec
add
sbb
into
lock
jg
sbbb
adc
pop
mov
ret
je
imul
mov
ficoms
pop
movsb
cmp
nop
pop
gs
inc
xor
or
repz
and
add
nop
pop
stos
sbb
insb
pop
std
jb
pop
add
or
imul
mov
aam
add
add
negb
xchg
xchg
cmpl
sub
scas
mov
imul
enter
stc
cli
sub
imul
push
jno
mov
inc
mov
sti
push
int3
mov
mov
sub
sbb
pop
rolb
out
push
add
jge
es
mov
push
pop
xchg
js
in
jae
sub
mov
rcl
fcoms
addr16
xlat
add
dec
mov
fadd
add
sbb
sti
data16
sti
lea
in
and
xlat
sbb
shll
dec
in
jge
add
test
js
pop
bound
push
add
dec
add
iret
pop
push
test
rcll
add
addr16
sti
je
jns
dec
das
cmc
sti
push
push
mov
xor
loop
psllq
mov
aad
test
push
cmc
ljmp
mov
mov
xchg
fcoms
sub
dec
aas
std
es
shll
push
mov
jnp
sbb
adc
sbb
adc
pop
fadd
inc
in
jae
icebp
jl
mov
scas
rcrl
pop
subl
sub
cmp
bound
dec
ljmp
addr16
sahf
mov
cmp
shl
inc
pusha
xor
xchg
mov
inc
dec
mov
lock
sub
fistpll
data16
and
aaa
xchg
test
shl
call
insb
or
fstpt
ret
test
stos
fisubrs
js
sub
popf
cmp
jmp
and
cmp
and
mov
push
pop
aad
pop
clc
orl
in
adc
iret
jmp
lock
fistps
jb
inc
shll
xor
mov
pop
fdivrl
mov
out
insb
cltd
jne
and
dec
pop
jb
loopne
add
rorb
clc
clc
sbb
pop
cld
out
cmp
or
push
call
ret
into
mov
subl
js
or
mov
in
in
pop
jl
scas
in
je
pop
push
xchg
pop
and
imul
xchg
xor
pusha
push
inc
or
loopne
das
nop
arpl
mov
addr16
cwtl
imul
ret
addr16
cmp
mov
sahf
das
sub
popf
decl
inc
dec
sbb
sub
add
sbb
inc
adc
mov
adc
add
cmp
pop
xor
mov
lods
ret
cltd
das
fistl
dec
call
test
cmp
lock
pushf
int
popl
pop
scas
inc
cltd
addl
test
adc
clc
mov
pop
clc
loope
stc
dec
cmp
push
out
pop
cli
lcall
pop
imul
xchg
dec
aam
mov
or
cmp
mov
stc
cmp
jbe
xor
jp
jns
mov
fnsave
ret
cwtl
ret
push
sub
or
pop
sub
or
or
xchg
xchg
addr16
xchg
cmp
loopne
rdmsr
sbb
ss
cmp
adc
or
sub
mov
mov
pop
leave
iret
scas
lea
out
adc
mov
enter
repz
mov
sbb
push
pop
ret
clc
nop
imul
aaa
clc
imul
sbb
sbb
inc
jnp
pop
cmp
fiadds
mov
cltd
lock
jno
push
and
and
dec
cmp
mov
test
adc
pop
pop
popf
divl
mov
aas
sbb
hlt
mov
pop
sbb
lcall
or
jmp
insb
int3
xor
test
in
mov
jecxz
arpl
daa
insl
dec
jae
scas
xchg
cmp
pop
test
lea
out
push
jg
int
xchg
pushf
enter
cmpsb
pop
hlt
ljmp
xchg
xchg
jnp
data16
and
das
je
loope
lock
bnd
push
pop
push
xor
mov
lods
insb
test
js
rol
dec
mov
es
pop
cmp
rcrl
test
dec
push
cltd
mov
xlat
xlat
in
mov
sti
aad
cmp
pop
push
pop
add
mov
sahf
lahf
jge
pop
in
mov
les
popf
mov
insl
loop
ds
cmpsl
movsb
leave
jmp
or
mov
sahf
in
inc
or
fcomps
mov
mov
mov
mov
push
fwait
push
cmc
dec
push
out
push
inc
stos
fwait
icebp
xchg
ss
scas
push
or
ds
jbe
jae
pop
lea
lods
inc
mov
pop
sbb
sbb
mov
dec
hlt
inc
sub
jb
je
xchg
fwait
pop
lret
and
and
cmp
les
and
pop
fnstcw
int3
test
in
lahf
sti
inc
or
out
xchg
dec
cltd
or
in
pop
roll
adc
jp
mov
jb
mov
ret
out
push
mov
mov
lock
hlt
push
leave
imul
jns
scas
repz
jle
inc
sub
push
xchg
cmp
mov
mov
mov
and
repnz
mov
sub
pop
jl
repnz
xchg
das
pop
in
sub
xor
jecxz
icebp
addr16
mov
push
in
addr16
in
stc
clc
mov
jle
mov
pusha
movsb
int
nop
daa
mov
rcr
pop
xchg
jno
push
sarb
fldcw
addr16
in
shl
adc
dec
xor
add
les
xorl
and
jg
ljmp
xlat
std
mov
jge
notl
lock
pop
push
pop
xchg
add
pop
movsl
pop
adc
or
daa
mov
sub
mov
ja
shlb
testl
dec
movsb
dec
imul
movsb
outsl
outsl
outsb
imul
sub
dec
cmpsl
cmc
dec
cmpsb
xchg
jmp
or
roll
das
dec
push
push
or
dec
push
mov
paddusw
andb
mov
sbb
and
jmp
cs
out
iret
cmp
cmp
insb
pop
out
cwtl
scas
lcall
lret
or
and
dec
in
int3
add
addr16
popf
outsl
mov
or
pop
xlat
dec
mov
je
jp
pop
lods
into
cmpsb
addr16
lcall
pop
mov
dec
std
popa
pop
or
xor
adc
xor
dec
jo
inc
jns
push
inc
adc
and
rcrl
shrb
aaa
jbe
adc
push
add
inc
mov
dec
jg
int3
rcll
sub
gs
insl
cmp
js
xchg
sbb
cmpsl
lcall
mov
inc
pop
mov
xchg
push
test
inc
repz
push
and
imul
repnz
mov
jp
sub
iret
iret
test
lock
rcl
popl
xchg
inc
add
orl
mov
iret
mov
sarb
xchg
sbb
in
jnp
push
pop
ljmp
test
push
push
cmpsl
and
stos
repz
out
out
or
decb
ret
and
mov
mov
xbegin
in
repz
scas
insl
cmp
js
push
mov
into
fdiv
outsl
mov
stos
sub
and
cmpsb
mov
push
sahf
push
cmp
sub
push
leave
mov
pop
and
lods
xchg
jbe
test
mov
pusha
aad
iret
repz
push
jecxz
sbb
and
sub
pop
inc
add
push
dec
les
je
jnp
cmpsl
add
sub
bnd
mov
ss
nop
xor
repnz
sarb
fdivr
andb
or
sub
jnp
pop
mov
jmp
incb
push
pop
popf
invd
mov
fcmovb
xchg
fs
mov
addb
int3
push
xchg
pop
test
and
adc
cmc
cmp
dec
or
mov
fstpt
and
mov
jecxz
fwait
loopne
out
into
xor
in
jg
jmp
or
mov
inc
mov
mov
shll
je
les
lret
xchg
ja
je
pop
xchg
ret
imul
dec
aas
sub
jnp
fdivrl
add
repnz
int3
jne
mov
lret
adc
aad
hlt
ja
lods
push
mov
sti
int
ss
dec
push
sbb
xlat
aam
fucomi
push
int3
inc
data16
sahf
test
or
sub
jecxz
outsl
bound
mov
test
pop
push
pop
mov
lea
inc
mov
shr
nop
dec
mov
dec
add
repz
cmpsl
dec
in
mov
and
imul
jl
insw
lods
mov
icebp
test
pop
or
jo
inc
leave
je
push
sbb
mov
ss
or
xlat
jecxz
mov
push
xlat
std
sub
xchg
push
mov
aas
negl
faddp
push
lret
icebp
push
insl
in
cmp
shlb
pop
bound
mov
gs
movsl
jp
push
jnp
pusha
add
jle
or
and
cmc
out
dec
mov
mov
into
cmp
mov
scas
and
sti
push
pop
jle
fwait
jns
mov
xor
sub
loope
mov
sbb
fisubl
mov
ljmp
cltd
mov
icebp
fdivrs
sbb
in
leave
pop
jge
inc
pop
sbb
pop
push
push
fnsave
push
pushl
sbb
jl
fwait
les
jno
mov
mov
decl
outsb
rcrl
movsb
mov
push
jo
mov
notb
dec
lret
pushw
fcompl
sub
jb
adc
push
inc
and
bound
jne
jns
fs
xlat
mov
or
test
mov
add
or
movsl
pop
adc
rorl
or
out
sti
sub
or
push
repz
pusha
sbb
or
std
adc
and
fnstsw
mov
jae
and
insl
mov
in
int3
ss
ror
dec
or
lahf
jp
mov
cld
push
enter
mov
pop
mov
xchg
mov
movsl
ds
dec
loop
pop
aam
addr16
or
mov
mov
add
outsb
testl
insl
pop
fwait
sbb
int3
sub
orb
aam
jmp
and
jno
push
or
cmp
inc
arpl
mov
fwait
xor
xor
neg
in
xlat
daa
pusha
or
insb
cs
mov
xor
jne
jns
imul
jge
jb
gs
add
mov
cltd
mov
outsl
clc
sbb
xor
cli
push
pop
fwait
arpl
sub
into
mov
mov
outsl
jl
repz
fcomps
xor
or
das
ljmp
test
ja
into
sub
imul
or
nop
stc
sarl
fwait
or
cs
push
push
xor
jo
adc
ljmp
mov
xor
push
mov
bound
xorl
pop
lea
insl
arpl
in
test
cmc
pop
test
xlat
sbb
fisubrl
mov
mov
mov
mov
movsb
out
dec
inc
addr16
sub
jg
arpl
into
xchg
and
mov
sbb
mov
fisubrl
sbb
xchg
lock
and
pop
shlb
enter
ret
es
dec
lea
dec
pop
test
mov
xor
shrl
test
jnp
push
adc
jmp
aaa
xchg
aad
xor
ret
leave
dec
sbb
xchg
std
jnp
mov
repz
fidivrs
clc
dec
jb
pop
nop
jns
xchg
xchg
insl
jg
imul
lock
mov
xor
cmpsl
outsb
mov
push
mov
enter
ljmp
ja
pusha
movsl
cmp
mov
xchg
mov
cs
movsb
sub
hlt
ja
cmp
sub
cmpsl
stc
and
xchg
mov
clc
xlat
jle
dec
pop
jp
cmpsl
jno
lret
popa
pop
mov
mov
pop
push
sbb
pushf
jle
lock
and
jns
jb
dec
sbb
inc
sbb
adc
leave
cs
pop
dec
lock
jle
int3
adc
pop
mov
data16
das
test
xchg
sub
mov
hlt
fldl
sbb
inc
repz
mov
dec
addr16
ret
subb
mov
xor
outsl
jecxz
enter
ror
jbe
adc
dec
ror
push
out
lods
fists
jbe
arpl
outsl
sbb
repz
dec
xor
idivb
sti
adc
mull
out
divl
ffree
xchg
dec
jno
sahf
fwait
and
outsl
mov
cmc
test
outsl
jns
mov
adc
shlb
repz
or
pop
lods
repz
sahf
in
xor
dec
push
adc
mov
jecxz
cmp
pop
mov
mov
outsl
xchg
mov
cmp
add
pop
xchg
mulb
sbb
mov
popa
mov
inc
pop
test
mov
aam
jl
mov
xchg
lret
scas
inc
add
roll
loope
mov
scas
dec
sub
mov
std
in
test
scas
ret
ret
pop
inc
sbb
dec
sti
pop
jbe
cli
cmp
aad
imul
popa
repnz
jae
movsb
mov
pop
imul
test
mov
push
int
lods
idiv
cltd
sbb
push
or
prefetch
into
pushf
jns
in
and
in
mov
jne
xchg
push
cmpsl
pushf
xchg
subl
and
ss
movsl
cmp
and
jmp
mov
and
clc
in
insl
jg
lock
in
mov
lods
mov
test
push
mov
sbb
clc
orl
push
add
icebp
add
ja
push
jecxz
cmc
pop
jle
pop
jge
mov
ret
cmc
loopne
push
dec
xchg
mov
or
sbb
xor
pop
lods
insb
adc
pshufw
inc
icebp
mov
xchg
scas
ss
dec
pop
daa
hlt
hlt
psllq
adc
stc
popa
adc
cmpsb
push
mov
fstp
cwtl
jno
mov
push
and
divl
mov
mov
xchg
loop
mov
aaa
pop
xor
stos
jl
out
add
jmp
inc
nop
ror
sub
xchg
xchg
adc
dec
call
and
adc
pop
lds
inc
push
ljmp
out
fucomip
mov
xor
cld
cld
mov
push
psllw
fstpl
push
sub
cmp
rcll
movsl
push
inc
popf
or
mov
jp
lahf
into
out
divb
xchg
xor
rclb
cmpsl
sbb
cmc
or
iret
daa
rcrb
dec
xchg
bound
sbb
push
rcrl
imulb
fiadds
add
inc
push
int
pushf
in
movsb
pushf
or
xchg
mov
cltd
sub
xor
pushf
test
icebp
jge
inc
into
fiadds
push
adc
add
popa
mov
fsubl
lods
add
cmp
daa
aam
cmp
sbb
daa
adc
in
and
lock
imul
mov
xor
inc
andb
jg
inc
aaa
add
icebp
mov
sub
stc
into
mov
adc
addr16
rcrl
in
jmp
mov
out
sbb
push
lock
sub
js
pop
xchg
xchg
xlat
mov
cmpsl
decl
push
dec
sbb
push
out
jno
call
mov
scas
pop
lret
xchg
mov
jmp
mov
xchg
incb
sbb
insb
stos
xor
pushf
xlat
or
push
aaa
cld
mov
insb
inc
xchg
out
mov
lea
xchg
pop
mov
incb
jae
mov
jnp
fnstenv
out
pop
out
jge
rcrb
jl
ss
repnz
lock
jbe
shlb
pop
mov
jl
xchg
enter
jmp
scas
adc
cmpsb
inc
stc
jg
jns
cwtl
sbb
test
aaa
jecxz
adc
stos
pop
test
jae
mov
xchg
or
out
aad
push
mov
imul
push
fldcw
shll
mov
inc
dec
insb
popf
hlt
ret
or
aaa
mov
lods
inc
out
push
in
or
sbb
push
and
xchg
movsb
cltd
inc
sahf
mov
dec
int3
pop
movsb
mov
mov
add
jecxz
fbstp
test
and
inc
push
out
insb
fnstsw
sbb
sbb
ss
movsb
and
sbb
das
sub
jp
js
or
shrl
mov
loopne
popa
lcall
jle
flds
insb
ret
mov
inc
pop
dec
inc
mov
inc
in
xchg
push
int3
or
inc
push
xor
sub
enter
pop
pop
cmp
xchg
lea
sarl
sub
jns
fwait
push
imul
inc
scas
lahf
and
push
bound
ret
sub
shl
adc
mov
or
movl
scas
pop
or
std
push
iret
repz
pop
jl
push
test
lods
fbld
lcall
and
pop
mov
add
xor
and
test
fadds
sbb
lahf
mov
mov
xchg
outsl
jns
jb
adc
xchg
add
xlat
lds
or
clc
add
xor
ja
mov
xor
or
and
iret
ss
mov
loope
sbb
inc
in
sbb
je
sahf
mov
cmp
cmpsl
mov
sbb
push
lret
orl
xor
xlat
in
movaps
adc
movsl
mov
sahf
jno
mov
imul
cs
inc
or
bound
push
adc
xor
ljmp
xlat
dec
cmp
test
js
lds
div
iret
daa
jns
sti
stos
gs
jge
fs
pop
mov
gs
mov
mov
imul
mov
jmp
out
les
pop
sahf
mov
add
push
mov
lods
fisubl
adc
sbb
dec
xchg
push
loope
jnp
out
outsl
cld
inc
js
fildl
fsubp
dec
scas
push
pop
mov
lret
std
push
mov
and
jae
sbbl
and
sar
stc
mov
cmp
push
aad
aam
inc
leave
push
pop
xor
pop
sub
fst
cmpsb
dec
out
mov
or
or
xor
test
sbb
mov
aas
cmp
ficoml
cli
hlt
movsl
mov
adc
adc
repnz
stc
add
std
testl
das
pxor
into
pushf
aam
pop
mov
inc
xor
mov
dec
jnp
das
mov
sbb
push
movsl
in
leave
sbb
mov
cmpsb
ret
jecxz
sub
aaa
add
mov
jae
mov
jbe
xor
mov
push
and
inc
gs
dec
xlat
and
mov
shll
fildll
inc
sbb
lret
jno
lods
mov
dec
lret
dec
ljmp
pop
lock
xor
out
mov
cmc
iret
jp
leave
pop
js
sbb
xchg
jl
movsl
sub
nop
dec
mov
xchg
mov
out
cltd
insb
in
inc
cmp
push
and
jmp
sarb
lret
bound
dec
dec
rolb
jg
leave
int3
xchg
loop
loope
lret
and
inc
mov
pop
insl
test
and
sub
cmp
adc
mov
xchg
repnz
in
add
pop
pop
xchg
jge
int3
stos
or
sbb
fs
push
js
ljmp
xor
and
test
jne
int3
jecxz
jno
in
imul
jp
mov
pop
mov
pop
xor
shlb
fsub
mov
lods
sbb
popa
mov
fstl
jno
xchg
dec
sbb
popa
adc
leave
pop
xor
jl
das
or
cmp
rcrb
mov
dec
dec
inc
pop
adc
lret
adc
gs
lret
jge
dec
xorl
add
mov
inc
and
mov
aam
pop
fs
pop
insl
mov
adc
cmp
add
inc
mov
subl
or
dec
jae
or
sbb
jle
pop
dec
pop
xchg
jle
divl
sbb
call
sub
push
scas
adc
lahf
std
cwtl
push
jl
pop
aam
sub
pop
insl
es
xchg
into
stos
jb
aad
pop
stos
sbb
inc
sub
sti
dec
push
mov
sbb
js
loope
mov
dec
outsl
or
hlt
pop
repnz
clc
push
pop
imul
xchg
fdivl
pop
adc
jno
cltd
subb
and
std
ss
into
add
or
insb
lret
xchg
adc
or
and
shlb
scas
push
mov
push
mov
push
into
adc
lock
mov
dec
adc
push
es
push
idivl
in
inc
mov
das
insl
cmpsb
lods
add
les
sti
shlb
gs
clc
sbb
pop
xor
lcall
add
cltd
pop
dec
mov
mov
hlt
pushf
popa
jno
fistpl
lret
into
dec
mov
xchg
mov
xchg
sub
adc
int
jp
dec
pop
push
adc
inc
mov
fcoml
imul
lea
jle
mov
inc
dec
mov
jno
adc
ret
inc
sub
or
mov
dec
and
ret
mov
mov
call
cs
mov
fdivrs
jnp
stos
cmp
cmp
add
mov
cmp
test
loop
pop
push
mov
push
and
iret
test
lahf
jmp
mov
pop
pop
out
insb
aas
les
insb
sbb
imul
jg
push
pushl
adc
mov
lcall
bound
daa
adc
pop
sub
xchg
scas
push
movsl
and
aaa
add
mov
fs
jmp
shlb
lods
stc
js
dec
cmpsb
sahf
mov
jo
xor
test
mov
stc
out
popa
mov
popf
jb
push
test
addr16
mov
mov
mov
push
daa
mov
dec
sub
sti
sbb
aaa
jp
inc
pop
imul
push
pop
push
or
push
mov
ror
inc
jnp
bound
rcr
sbb
xchg
fcmovnu
out
dec
movsl
xchg
bound
int3
sbb
push
pop
pop
punpcklwd
mov
mov
leave
leave
inc
add
movsb
pop
pop
push
adc
sar
jle
and
js
daa
ds
cmp
pop
xlat
cli
lock
mov
shl
jmp
in
mov
out
sbb
dec
cwtl
xor
adc
clc
bound
jne
int3
push
inc
add
out
cmpb
xchg
and
arpl
in
mov
push
sub
xor
out
push
pop
pusha
add
mov
fildll
popa
push
mov
push
hlt
sahf
je
push
inc
stos
push
xchg
and
scas
mov
fildll
hlt
jg
hlt
cmp
mov
addr16
lods
fwait
adc
adc
adc
xchg
dec
xchg
add
imul
jle
and
cwtl
out
sbb
sub
adcb
dec
push
mov
inc
cmpsl
lahf
test
cmp
xchg
test
inc
in
loope
sbb
cs
cmp
xchg
lods
divb
adc
mov
jne
movsb
cmp
mov
insb
pop
xor
les
lods
daa
iret
hlt
mov
push
lods
test
adc
push
adc
or
bound
lret
les
inc
xchg
and
repz
adc
pop
mov
and
arpl
fstpt
in
pop
shr
push
scas
xchg
adc
jp
mov
sarb
test
xchg
std
pop
out
xchg
xor
fmul
mov
pop
mov
into
fwait
xor
xchg
pop
pop
in
adc
cli
into
int
mov
xor
mov
loop
xchg
daa
xor
push
sbb
sbb
out
punpckldq
mov
sahf
push
int
cmc
test
sub
shlb
mov
fsubp
fs
push
sub
popf
inc
imul
mov
mov
jns
mov
hlt
xor
repnz
fs
jno
xchg
cmpsl
lock
jb
dec
pop
in
dec
jmp
inc
sbb
dec
mov
inc
or
sbb
inc
dec
jecxz
aad
jo
loopne
jnp
push
jb
xchg
fidivs
or
bound
jnp
lcall
cmp
lret
outsl
cltd
dec
mov
sbb
icebp
fidivs
stos
lods
pusha
sti
xor
in
insl
dec
push
roll
xchg
sbb
mov
das
xchg
and
push
mov
jp
xchg
inc
aam
xor
test
gs
adc
xor
pushf
and
pop
push
jecxz
mov
push
mov
lcall
inc
xchg
imul
test
cld
in
scas
call
jg
sub
xor
fcmovnb
orb
pop
mov
mov
xchg
int3
out
xchg
cwtl
enter
dec
xor
jb
mov
or
cmpsl
notb
pop
mov
lods
pop
movsb
pop
adc
cmp
mov
sahf
push
mov
or
mov
push
pop
xchg
mov
push
cmpb
ds
leave
clc
loopne
faddl
popf
pop
xchg
out
jp
adc
pop
in
or
movsl
or
movsb
sti
mov
cmp
xor
daa
mov
imul
mov
loope
sbb
mov
ret
scas
sbb
push
pop
xchg
mov
movsl
outsb
mov
in
test
jp
xchg
xchg
dec
pop
mov
jp
sti
mov
test
repz
repz
or
rorb
mov
arpl
test
xchg
ja
adc
cs
mov
mov
sarl
dec
cmp
push
cmp
or
int
hlt
mov
sbb
mov
mov
and
stos
les
in
test
cld
lret
cmp
push
shrb
inc
enter
sti
daa
dec
stos
jp
in
push
stc
fwait
or
jge
sbb
dec
gs
xchg
pusha
xor
ficompl
sbbl
mov
mov
inc
daa
cwtl
ret
mov
xor
push
fs
scas
xchg
and
daa
push
imul
js
inc
xor
or
out
pop
adc
addr16
ret
sub
jl
dec
and
out
das
aad
into
dec
test
daa
movsl
cs
or
add
mov
movsb
loope
out
lods
xchg
dec
stc
es
cmpsb
adc
lret
cmp
jmp
and
ret
imul
xor
dec
sbbl
mov
mov
xchg
mov
inc
scas
jae
inc
movl
jg
mov
or
cmp
popf
adc
adc
repnz
stc
adc
add
loop
divl
sub
jp
idivl
add
test
es
dec
lcall
push
out
dec
pop
cld
ret
pop
imul
push
repnz
sbb
xchg
hlt
fstps
enter
testb
js
in
popa
push
adc
lods
sub
sbb
clc
jge
inc
xchg
movsb
cld
loopne
push
ret
add
push
ljmp
test
iret
lcall
pop
out
or
ljmp
cmpsl
push
inc
xor
imul
or
sbb
add
xor
mov
fcoms
xchg
outsl
lea
xlat
dec
pmullw
orb
push
iret
sub
xlat
sbb
popf
inc
fnsave
fadd
and
lahf
cmp
loope
icebp
mov
pop
repnz
fistpll
mov
out
sub
sbb
sbb
ds
inc
pop
xor
mov
movsl
adc
inc
push
add
test
sub
repnz
in
stos
and
sbb
pop
adc
out
jle
mov
jg
sub
cmp
pop
pusha
xchg
push
jle
inc
popa
lcall
ss
inc
cs
add
fidivs
jo
and
ja
lret
neg
inc
faddl
out
clc
cmp
cmpsb
je
xchg
pop
lods
sub
out
nop
out
andb
inc
cmp
mov
mov
pop
push
pop
or
nop
shll
jnp
ror
and
mov
add
xor
js
fwait
test
jle
mov
mov
mov
mov
xchg
stos
in
dec
adc
pop
inc
je
mov
add
and
cwtl
decb
in
pop
cltd
insb
lods
push
or
fldt
jno
sub
mov
adc
in
xchg
dec
dec
sub
notl
push
pop
notl
push
rclb
nop
inc
pop
lahf
mov
clc
pop
repz
dec
and
xchg
ret
out
dec
pop
leave
sbbb
out
mov
mov
cmpsl
or
mov
psrad
dec
rcr
dec
cmp
or
mov
imul
pop
mov
cmp
ja
pop
loop
jg
and
and
adc
and
inc
jns
adcl
jns
dec
jnp
mov
pop
mov
xchg
adc
jp
fistl
push
faddl
cmp
pop
dec
test
xor
stc
jae
cmp
sub
xchg
test
xchg
mov
jecxz
or
dec
push
imul
addr16
fists
stos
push
cmp
or
add
aad
stos
daa
je
push
or
mov
movsl
push
pop
add
je
mov
jne
scas
subb
push
fnsave
jae
in
outsl
or
xor
pusha
mov
sbb
movsl
gs
mov
rclb
out
and
dec
sbb
jle
pop
fstl
stos
sarb
frstor
data16
int
pop
pop
pop
xchg
jno
pop
jmp
adc
mov
cld
inc
iret
jp
das
xchg
adc
adc
jb
and
pop
jle
xchg
enter
adc
cli
mov
fcompl
dec
cwtl
arpl
pop
jp
repz
in
test
mov
cmp
mov
out
insb
pop
leave
andl
xchg
or
push
dec
scas
out
and
adc
sbb
xchg
test
and
and
cmp
jecxz
js
lea
repz
sahf
frstpm(287
and
aaa
cmp
push
mov
cltd
sbb
mov
xchg
mov
adcb
fnsave
not
cmp
mov
ret
popf
mov
xor
pop
jnp
mov
outsb
sbb
xchg
or
and
push
leave
pop
push
sub
sbb
push
lcall
stos
shll
cld
pop
mov
add
dec
jbe
cld
jno
cmp
dec
add
fcmovnu
sub
cmp
pop
aam
xchg
cmp
or
xor
xchg
insb
xor
xor
mov
aas
loopne
or
ss
aas
sbb
pop
cmc
xor
call
fsubrl
aam
cmp
pop
mul
pushf
sbb
jg
sti
nop
ljmp
fcomps
mov
sbb
push
imul
inc
dec
jne
sbb
mov
sbb
popa
daa
popf
sbbl
pushf
cmp
out
xor
loop
adc
cs
jbe
jbe
adc
fbstp
xor
jl
cmc
mov
dec
push
or
xchg
out
or
jno
and
inc
jge
rep
cmp
jnp
lods
xchg
nop
push
xchg
les
jae
mov
dec
rcl
filds
subl
in
fists
fiaddl
pop
mov
sub
jbe
xor
shll
orl
xor
aam
scas
fwait
dec
je
test
pop
decl
pusha
xorl
xchg
cwtl
mov
xchg
sbb
std
sbb
xchg
add
mov
clc
int3
cmp
insb
aam
hlt
scas
cmpl
shlb
leave
xchg
or
xor
cmp
shrb
lret
insb
popa
mov
inc
nop
test
and
or
ficoml
and
int
stc
and
or
or
xchg
fwait
addr16
sub
sub
ffree
mov
scas
xchg
divb
hlt
cmp
inc
push
inc
xchg
mov
jmp
leave
test
add
arpl
jmp
pop
xor
dec
jo
jno
fldcw
inc
push
add
pop
pushf
shlb
mov
jno
imul
dec
call
pop
xlat
jo
sbb
repz
push
sbb
test
loope
and
ds
and
fcmovnu
push
stos
mov
cmp
mov
sahf
add
insl
stc
and
or
gs
push
push
test
cmp
adc
sbb
add
orb
pop
inc
cmp
or
lods
adc
jno
lret
fucomip
nop
cmp
push
stos
inc
jnp
dec
addb
scas
sbb
xor
hlt
repz
xchg
out
test
sub
stos
stos
and
mov
mov
imul
sahf
xchg
mov
mov
icebp
pop
cmp
jle
mov
jecxz
dec
push
sbb
fsubrl
lds
and
shl
jbe
cs
jecxz
in
rcrb
pop
shll
mov
sub
pop
add
inc
scas
cwtl
sub
aam
fs
push
rcrb
dec
mov
cmc
rcrl
test
and
shl
sbb
rorl
pushf
xchg
addr16
jnp
lahf
inc
popa
pop
dec
jne
aad
mov
jp
mov
daa
out
sbb
jmp
in
and
xor
in
lret
push
pushf
pop
xor
ret
adc
lret
mov
push
ja
test
in
inc
jns
mov
dec
pushf
shlb
lods
inc
scas
scas
xorb
add
sub
outsl
inc
xor
mov
out
lods
shrb
test
adc
push
push
adc
test
je
mov
outsb
clc
pushf
jecxz
mov
pop
enter
outsl
jnp
adc
arpl
clc
xor
rolb
jmp
pop
scas
std
jmp
movsb
push
insb
xlat
jl
pop
fwait
hlt
mov
cld
sbb
push
inc
and
mov
push
push
lcallw
test
pushf
sub
and
addr16
mov
sub
push
std
decl
ja
cld
inc
mov
das
enter
inc
jecxz
cmpsl
pop
jmpw
cwtl
mov
jmp
cs
add
sub
jl
js
cmp
inc
cli
movsl
std
test
or
gs
jge
sbb
pop
pop
sub
dec
pop
rol
jbe
xor
add
inc
out
xlat
and
dec
outsl
stc
xchg
sub
hlt
out
xchg
jg
testl
or
or
or
not
test
jge
mov
sub
ret
fidivl
mov
or
daa
loope
pop
repnz
rcrl
insl
aad
sub
arpl
pop
mov
jge
mov
icebp
sbb
inc
adc
pop
pop
out
pop
jp
pop
jbe
xor
pop
cmpsl
xor
dec
test
jno
mov
repnz
jns
dec
iret
xorb
es
xor
sbb
addr16
std
test
in
xlat
adc
lds
xor
loop
ret
ja
pushl
fidivs
mov
add
ret
cld
and
inc
mov
mov
pop
push
popa
in
mov
mov
fwait
sarb
lods
mov
sub
xlat
std
pop
sbb
adc
fisttpll
xchg
inc
pop
ret
fists
mov
and
inc
mov
add
inc
std
dec
push
insl
cmp
xchg
adcl
jg
jmpw
enter
pop
sbb
mov
and
mov
or
es
and
shl
daa
fstps
mov
jle
aas
daa
jns
jl
inc
imulb
cmp
push
test
hlt
mov
ljmp
jnp
fwait
dec
sub
pusha
js
lods
iret
add
test
mov
repz
inc
test
lods
repz
sarl
mov
imul
adc
xlat
xor
and
movsl
mov
add
xor
pop
inc
jb
mov
sbb
push
xchg
lock
popa
sbb
xor
pop
fisubrs
or
dec
orl
fldcw
insb
add
addr16
jecxz
push
rclw
subl
pop
ja
pmaxub
pop
pop
jbe
xchg
outsl
inc
dec
test
arpl
mov
ljmp
ficompl
out
addr16
imulb
sbb
add
push
add
jb
lds
jne
xor
daa
in
clc
or
sbb
jp
lret
arpl
int
fs
int
imul
stc
add
iret
xchg
popf
into
dec
scas
adc
adc
imul
mov
dec
stc
cmp
cli
jmp
cs
mov
es
jbe
mov
std
adc
mov
pop
in
rcl
sub
fmuls
movsb
mov
mov
push
ret
and
jne
imul
jb
xchg
in
add
cmpsl
hlt
in
mov
mov
cltd
and
adc
mov
fld1
pop
fsubr
xchg
push
pop
int3
flds
stos
call
sarb
ja
pusha
sahf
shr
out
in
scas
or
xchg
jae
mov
sbb
and
inc
sub
out
xor
push
movsb
leave
xchg
push
aam
cmp
jle
lods
add
imul
xor
pop
in
push
lret
pop
inc
test
sti
inc
jecxz
push
cmp
fidivrs
sub
mov
stos
stc
into
lds
jno
inc
push
shl
daa
into
pop
rcl
xor
in
jle
mov
cld
push
nop
cltd
and
fidivl
mov
pop
xchg
push
dec
js
xchg
jp
popf
adc
mov
and
shll
cmc
adc
and
cmp
ror
or
dec
movsl
jnp
aam
stos
xor
dec
mov
inc
pop
push
aaa
stos
add
popa
inc
mov
mov
jp,pn
aaa
dec
cwtl
and
mov
pop
mov
and
pop
scas
ja
mov
sti
lret
inc
xor
push
adc
hlt
mov
rorl
mov
xchg
clc
rcll
dec
or
add
les
repz
jge
dec
mov
and
in
lods
adc
mov
pop
push
push
cli
pop
jb
out
sub
sub
pusha
mov
push
mov
mov
in
mov
rcrb
loopne
mov
sti
fadds
fs
stc
push
call
mov
jne
in
repnz
lret
add
inc
mov
sub
mov
jb
jle
add
and
cld
mov
mov
xor
jae
out
mov
and
mov
push
movsb
xchg
mov
xor
inc
cltd
repnz
aad
or
call
xor
jns
out
cld
xchg
mov
push
fsubrl
cmp
in
addb
aas
pop
in
sub
repz
test
jnp
cmp
loop
lcall
adc
nop
sbbl
js
fmuls
scas
mov
dec
dec
fstp
lods
xor
mov
xchg
mov
mov
pop
shll
addr16
cmc
addb
xchg
aam
imul
cmp
shrl
les
call
add
push
cs
dec
pop
and
repz
xorb
mov
nop
lods
ss
mov
rorl
repz
popa
cmp
jle
mov
aam
jecxz
es
repnz
aas
outsb
cld
push
sub
jecxz
or
xchg
pop
int3
mov
xor
jp
cmpsb
sti
dec
in
das
or
push
mov
mov
or
in
imul
inc
fsqrt
mov
imul
mov
repz
int3
mov
into
movsl
push
enter
vpmacsdqh
out
and
xor
movsb
mov
insb
in
add
lds
leave
add
push
add
sahf
icebp
cwtl
fwait
imul
dec
movl
xchg
loope
shrl
jb
mov
popa
adc
daa
fstl
and
fsubl
stc
mov
cmpsb
adc
and
adc
enter
xchg
daa
push
icebp
mov
xchg
sbb
inc
stos
xchg
pop
hlt
mov
lahf
mov
int3
popf
in
push
or
or
rcl
push
jp
push
ljmp
ljmp
xchg
jo
and
inc
pushf
out
addr16
loopne
xchg
push
cwtl
clc
mov
sub
test
es
les
fiaddl
cmp
jle
iret
loop
lret
pop
mov
add
pop
int3
jb
das
mov
sahf
stos
das
cmpsb
add
dec
inc
xchg
lds
ficompl
mov
movsb
pop
js
pop
cmp
inc
arpl
and
xchg
push
call
pop
iret
xor
pop
inc
or
sub
pop
sahf
sbb
cmpsb
push
xor
bound
and
xchg
orb
adc
stc
daa
jmp
cmc
dec
pop
repz
scas
pop
push
std
clc
jle
mov
fxch
and
dec
pop
mov
adc
cmc
es
test
test
je
fadds
push
adcb
jmp
xchg
add
fcompl
mov
loopne
mov
add
mov
stos
test
sti
cltd
push
test
outsb
jne
filds
test
jnp
mov
repnz
popf
insl
das
jnp
jmp
mov
out
imul
sub
leave
nop
push
inc
jne
mov
je
dec
push
mov
adc
arpl
int
lock
xchg
cs
test
mov
sub
or
jae
mov
xchg
repz
in
jl
push
inc
test
les
jmp
in
dec
dec
pop
rclb
sbb
or
xchg
dec
jmp
incl
aaa
sti
fcoms
or
insb
insl
ret
enter
aaa
mov
aaa
add
xchg
mov
sub
lret
out
xor
cmp
pushf
sahf
arpl
nop
aaa
nop
sahf
enter
xchg
int3
dec
loop
int3
pop
lahf
jmp
push
adc
leave
mov
hlt
adc
mov
mov
sbb
shll
out
sti
push
aam
jl
xchg
js
sbb
into
icebp
outsb
or
scas
out
jle
inc
lcall
test
clc
setbe
roll
sbb
pop
fs
cmp
adc
outsl
push
mov
ljmp
jp
mov
or
in
mov
inc
sub
jmp
or
push
mov
fildl
mov
daa
ja
xchg
push
push
sbb
and
sbb
mov
mov
arpl
mov
in
inc
push
into
push
loopne
mov
stos
call
jns
add
push
jae
mov
jnp
and
iret
jmp
rol
mov
aad
outsb
dec
adc
sub
mov
jp
mov
aad
das
and
push
mov
fmul
or
jno
mov
xor
enter
jns
mov
aaa
sub
xchg
jle
jnp
js
mov
shl
inc
push
push
adc
imull
cmpsb
dec
sbb
test
test
adcl
dec
cli
mov
jbe
mov
movsb
fisttpll
in
imul
push
xor
cli
in
push
lahf
fcomps
xor
jle
dec
shl
cltd
test
dec
iret
sbb
jns
lahf
pop
jmp
add
lods
test
pop
in
fisttps
out
pop
pop
sub
notb
sbb
xlat
fdivrs
push
cmc
or
cmp
fs
push
sub
test
dec
and
mov
in
xor
push
fistpll
int
and
xor
or
xchg
pop
fadd
jne
add
sub
sbbb
loope
dec
aad
arpl
aad
push
jle
cmp
loop
insb
fsubr
cltd
pop
pop
imul
push
pop
stos
or
mov
adcl
call
pusha
shlb
stos
push
and
out
ds
pop
push
cmp
mov
icebp
out
xor
nop
insb
mov
xchg
adc
adc
mov
in
mov
or
arpl
or
stc
stc
fildl
xor
xor
push
xor
pop
shrl
daa
hlt
xchg
rorl
movsl
and
dec
stos
int3
or
in
lcall
pop
add
mov
rolb
pop
inc
sub
push
popf
mov
sub
lahf
and
dec
adc
xchg
ficompl
pop
mov
inc
stos
loopne
mov
movhps
xorl
add
pop
sbb
or
je
dec
js
repz
out
rcrl
pop
mov
lcall
jp
cltd
mov
movsb
std
xor
clc
dec
insb
sbb
in
mov
mov
scas
cmp
fcomip
push
xor
inc
jmp
rorb
inc
add
xor
add
stos
mov
jno
in
add
mov
and
sbb
and
cmc
cmpsl
scas
es
jns
add
loope
adc
inc
lock
adc
icebp
and
jmp
lahf
jae
sub
push
arpl
lock
insb
jbe
cmp
push
push
or
inc
push
pop
inc
add
stc
popf
or
in
xchg
dec
cmp
mov
repz
xchg
pop
je
into
mov
jno
daa
andl
outsl
cs
mov
xchg
sbb
fisubl
hlt
inc
or
pop
cmp
mov
rcrl
enter
jmp
dec
frstor
cmp
in
clc
pop
jnp
loope
mov
jmp
inc
push
insb
ds
shl
xchg
lds
xchg
dec
push
cmove
jne
cmpsb
or
rclb
push
pop
xor
adc
clc
xor
or
push
test
push
cmp
les
push
mov
dec
ret
mov
shll
lcall
popf
inc
jae
add
ret
or
mulb
jae
inc
add
cltd
stos
add
dec
pop
testl
int
or
shlb
cmpsl
adc
stc
mov
push
cmpsb
int
jb
fldenv
les
jge
pop
mov
iret
xchg
es
hlt
ror
pushf
pop
sbbl
pop
loopne
ljmp
enter
sbb
and
fstl
mov
pushf
fisttpll
insl
rorl
sahf
jb
cmp
mov
mov
push
outsl
jge
std
and
xlat
jl
add
sub
stos
add
test
xor
pop
outsb
rorb
inc
and
outsl
cmp
sbb
pop
jae
dec
sbb
lock
inc
mov
pop
dec
mov
test
push
shll
push
sub
pop
je
mov
fwait
and
bound
mov
rorb
cld
xlat
mov
sub
in
xor
outsb
pop
addr16
std
mov
xor
dec
cmp
sti
popf
xchg
xchg
inc
std
stc
popf
nop
fs
cmpsl
insb
mov
mov
pop
sahf
cmpsl
cmp
fmull
mov
fcoml
jmp
lods
fildll
adc
add
push
xor
xchg
loope
mov
sbb
add
dec
loopne
in
insb
in
sbb
adc
addb
push
pop
cmpsb
push
jne
pop
dec
sub
pop
cmp
cmpsl
das
pop
outsb
fld
sub
and
inc
cmp
fdiv
ljmp
lds
push
mov
jp
aas
out
cmpsb
inc
adc
pop
insl
cmpsl
push
pop
and
insb
sbb
cmc
sti
addr16
lds
mov
call
dec
je
icebp
sbb
bound
cmc
lcall
mov
xor
repnz
scas
outsl
push
lahf
and
rol
adc
stos
xor
add
ror
mov
xchg
cs
pop
pop
cmp
jno
jge
cwtl
lcall
and
push
mov
lahf
cmp
sbb
and
negl
add
les
or
push
sbb
pop
insl
adc
mov
loope
out
cmp
stc
jno
shlb
cmpsb
sub
xchg
and
pop
jnp
jmp
test
inc
jno
scas
xchg
insb
addb
mov
call
icebp
xchg
lahf
imul
js
sbb
or
add
mov
fwait
mov
push
push
sbb
fwait
inc
out
cmp
xor
repnz
in
fidivrs
and
xchg
mov
leave
cmp
jno
mov
pop
cmp
mov
pop
out
rcrl
out
jmp
jae
iret
stos
lret
fs
mov
or
pop
lods
or
fwait
and
inc
fsubrs
stos
xor
pop
jp
and
ss
dec
xabort
mov
movsb
jbe
xor
pop
add
push
jge
sahf
sbb
jmp
pushw
sti
pop
lret
cld
push
inc
dec
cmp
fidivs
into
ss
cs
jnp
jmp
push
push
cmp
adc
xor
sub
add
mov
sub
sbb
mov
fwait
or
insb
mov
shrd
push
test
lcall
and
xor
imul
inc
and
insb
xor
stc
jns
in
xor
lods
sbb
aas
in
jl
sahf
cmc
lret
push
popf
mov
repz
mov
xchg
add
cli
jl
call
cli
cmpsb
hlt
loopne
and
adc
flds
mov
mov
hlt
or
mov
leave
out
test
leave
fcomps
mov
jge
out
or
sbb
stos
hlt
mov
ret
push
jmp
int3
inc
jle
sbb
testb
jnp
pop
leave
dec
mov
mov
shrl
mov
shl
sbb
scas
jg
xchg
lea
enter
cmpsb
sbb
and
push
int3
lds
pop
test
dec
xor
mov
xchg
mov
push
stos
mov
clc
fidivrl
les
pop
aaa
clc
int
sarb
mov
aaa
xchg
arpl
sub
and
insb
nop
test
xor
aad
jl
inc
xor
les
xchg
lods
out
sbb
or
sub
cmp
test
out
add
mov
aas
inc
fildl
push
lods
mov
movsl
mov
fisubs
mov
or
daa
fisubrs
add
or
pop
and
fstpl
mov
pop
push
xchg
out
cld
sbb
iret
incl
or
stos
xchg
cwtl
fcmove
call
pop
imul
push
pusha
ret
in
pushf
sub
mov
repz
je
jl
ror
cmp
test
in
dec
into
arpl
out
push
mov
inc
push
lock
and
jp
ficoml
dec
add
inc
in
das
loope
push
test
add
mov
cli
mov
cmpsl
outsb
xchg
sub
adc
test
imul
cmp
leave
ss
jle
sbb
cmp
nop
les
fs
fstpt
loope
sar
cmp
idivb
pop
jp
loopne
sbb
shll
push
loope
dec
out
pop
sti
push
loope
rcrl
xor
dec
scas
mov
enter
jb
bswap
add
jl
leave
outsb
stc
lret
push
imul
sbb
sbb
pop
add
jns
in
or
movsl
out
push
add
out
sbb
jmp
xlat
movsb
or
jle
insl
adc
xchg
xor
addr16
scas
cmp
movsl
adc
out
and
mov
outsl
cmp
xor
enter
inc
sub
test
ss
inc
xchg
jo
movsl
sbbb
adc
popa
dec
xor
jp
ja
fcoms
adcb
cmc
pop
pop
inc
scas
in
pop
out
loop
xor
out
push
cli
jmp
sbb
push
fnsave
loop
dec
pushf
mov
adc
xor
mov
pop
cmp
in
push
adc
fbld
cltd
jle
xor
imull
mov
loopne
pop
push
fs
das
adc
pop
call
sarb
mov
jge
pop
pop
mov
iret
xchg
mov
and
dec
xor
add
das
imul
jo
cvtpi2ps
outsl
mov
aas
cmp
sbb
out
mov
testb
mov
in
sahf
nop
std
lcall
lcall
mov
rcr
inc
lds
mov
popa
or
push
and
mov
out
shll
mov
add
sub
xorl
xor
dec
and
lods
je
arpl
notb
fs
add
dec
push
jb
push
mov
add
push
and
ja
repnz
adc
mov
sbb
mov
cld
and
and
cmpsb
or
icebp
in
das
push
adc
movsl
lahf
fwait
popa
and
sbb
lock
xchg
cmp
pop
mov
add
xor
sub
cli
mov
jp
jle
mov
lods
and
jno
sub
xchg
cmpsl
pop
cld
out
xchg
jne
adc
stos
jmp
pop
push
jmp
enter
jecxz
push
dec
ss
and
mov
dec
mov
mov
and
lahf
mov
mov
nop
leave
xor
pusha
jmp
mov
mov
xor
xor
mov
sbb
inc
mov
outsl
ss
mov
xor
sbb
aad
roll
lret
ret
mov
xchg
addr16
cmp
jecxz
mov
push
and
mov
jo
lret
sub
cmpsb
sub
push
xchg
jno
xchg
xchg
mov
sbb
and
pop
adc
sub
sarb
push
shl
cli
mov
sub
push
dec
cmpsb
ss
jnp
dec
xorb
hlt
sbb
rolb
jbe
inc
xchg
cli
shrb
mov
fisttpll
in
or
and
and
pop
div
in
mov
pop
unpckhps
into
xchg
push
leave
sub
lcall
or
push
and
imul
leave
faddp
shrl
cmp
mov
ja
arpl
out
jmp
ffreep
xor
enter
or
xorl
sub
dec
das
sti
out
push
lods
stc
and
add
in
xchg
dec
call
sqrtps
push
lcall
fisttps
mov
pop
loope
adc
adc
sbb
lea
xor
and
out
bound
test
jbe
jno
cmpsl
push
test
lahf
jge
callw
lods
add
fistpll
sbb
mov
in
orl
subb
inc
sbb
add
jmp
cwtl
adc
shlb
in
pop
and
push
ja
out
les
push
sahf
add
jmp
pop
jp
sbb
cmp
cmpb
lret
jo
cmpl
inc
loop
mov
in
cmp
xchg
adcb
cmpb
mov
dec
cwtl
mov
lcall
in
cmp
jle
pop
ss
or
aam
test
xor
fimuls
cmp
jl
notl
into
pushf
dec
push
test
test
sbb
repnz
int
and
aaa
nop
cli
inc
mov
mov
jl
dec
adcb
add
push
mov
cmpsl
jno
mov
cmp
into
inc
sbb
cwtl
adc
jb
dec
sbb
insl
cmc
sbb
cmp
mov
xchg
shlb
and
mov
rclb
and
push
pop
or
inc
add
push
aaa
stc
cmp
inc
jb
fdivrl
ret
inc
mov
sbb
rclb
popf
mov
outsb
rolb
and
or
scas
popl
jb
sub
loop
xchg
shr
mov
ja
in
xorb
daa
fucomp
mov
clc
pop
scas
fldcw
pop
cmpsb
in
idivb
fwait
push
xchg
out
icebp
enter
and
std
ss
jo
and
jnp
push
cmc
repnz
pop
fldt
popa
imul
addr16
dec
mov
insl
mov
add
cli
push
cs
icebp
out
jae
jae
xchg
jno
dec
stos
pushf
push
out
shll
ret
inc
clc
subb
pusha
inc
test
mov
popf
mov
xchg
jns
mov
sub
stos
mov
pop
jl
insl
xchg
movsl
out
xchg
fs
lock
sub
push
insl
rcrb
xor
pop
lahf
test
shll
xchg
mov
xor
mov
mov
imul
cmp
loopne
aam
dec
outsb
jns
adc
push
dec
pushf
cmp
je
arpl
aas
andb
dec
add
std
sti
out
scas
cmpsb
es
sub
cmp
jp
daa
jno
insb
sbb
popf
sbb
xor
fnsetpm(287
push
stos
bound
cmp
add
cwtl
push
xchg
es
addr16
outsl
imul
imul
push
mov
cltd
and
inc
adc
mov
loop
mov
mov
fists
les
and
jmp
fstl
dec
jae
xchg
enter
cmove
in
lahf
cmc
mov
mov
adc
jecxz
loopne
ret
loopne
or
push
imul
cmpb
repnz
aaa
mov
cli
adc
nop
out
insl
jge
mov
inc
pop
ret
dec
xor
mov
xor
jne
cmpsl
sbbb
std
xor
xor
cs
les
and
push
stos
jg
jmp
out
dec
into
cmpsl
xor
ja
xchg
sub
push
gs
aaa
inc
aas
or
imul
pushfw
dec
int
mov
jns
stc
mov
cmp
add
fstl
and
pop
mov
test
xor
sarl
loop
cld
rcl
or
xor
add
xor
sub
in
lea
jp
xchg
mov
adc
adc
fists
sbbb
ficoms
jbe
inc
mov
push
testl
xor
cmp
mov
mov
icebp
clc
dec
sbb
cmp
enter
rorl
push
xchg
xchg
dec
push
in
cmp
test
cmpsb
divl
add
aas
and
testb
bound
fwait
hlt
roll
push
mov
ss
or
out
filds
lret
xchg
mov
lahf
xchg
out
dec
shlb
sub
jne
adc
out
adc
jns
jb
mov
stc
or
pop
mov
cmp
jp
out
test
aas
and
fstl
and
adc
aam
data16
mov
ss
fwait
jle
into
and
or
iret
mov
cmp
jae
cmp
fsincos
lcall
aad
adc
stos
je
ja
inc
sub
jg
push
stc
out
xor
into
and
adc
pop
fbld
insb
cli
mov
push
dec
lds
jb
ficompl
ret
arpl
xor
xchg
in
jle
stos
negl
or
lea
stos
lods
or
lret
outsl
pop
rorl
in
in
je
dec
mov
push
inc
in
dec
inc
inc
push
cld
or
jle
outsb
jbe
into
cli
rol
pop
and
push
test
pop
push
lret
test
push
mov
test
sub
dec
pop
iret
shl
mov
mov
mov
lock
add
in
loopne
scas
imul
stc
cld
fcomp
repnz
and
ljmp
xor
test
mov
insb
lret
xchg
jno
notl
mov
rorb
hlt
rcll
addr16
fsubrs
test
rcr
jg
mov
fisubs
add
call
fbstp
sub
loope
add
aam
mov
dec
dec
pusha
inc
repnz
fsubrp
mov
xlat
repz
js
sub
or
add
xchg
ljmp
into
push
cmp
sub
mov
test
test
cmp
insb
cmpsb
jns
inc
mov
lods
aaa
push
nop
push
notb
cmp
je
dec
mov
pop
xchg
lahf
push
in
sub
jbe
mov
aad
sahf
movl
mov
js
in
push
popa
jecxz
and
jb
add
js
outsb
daa
mov
xlat
repnz
test
loopne
cmc
or
xor
in
dec
shlb
push
dec
out
mov
push
iret
inc
jecxz
sbb
in
loop
xchg
jnp
jb
add
mov
fisubs
repnz
mov
mov
mov
jae
out
stos
stos
js
xchg
insl
push
mov
add
orl
jge
add
loop
dec
inc
lret
mov
lock
fst
cmp
clc
loopne
jnp
sarb
jo
inc
in
testl
ljmp
jl
or
mov
bswap
or
mov
andb
pop
ret
cmc
lret
push
push
sbb
iret
stc
and
push
call
stc
les
cmp
cmpsb
outsl
into
test
sti
add
shll
sub
in
sahf
ljmp
sub
push
das
es
sub
sahf
roll
fnstsw
inc
or
aaa
shl
pop
or
test
popl
imul
fstps
cmc
jnp
xchg
jnp
push
pop
enter
aam
pushf
jmp
call
dec
jg
enter
mov
mov
push
repz
test
xchg
imul
neg
out
push
repnz
or
repnz
andl
aaa
dec
push
pop
mov
mov
lods
push
mov
and
frstor
xor
nop
fcompl
stc
add
aaa
mov
pusha
mov
pop
jnp
push
jne
cmp
loope
out
mov
sbbl
jnp
add
mov
mov
enter
fisubs
push
cmpsl
sub
lods
jae
add
inc
mov
pop
pushl
dec
mov
xchg
leave
lahf
mov
and
add
cmp
xor
out
std
push
int
jo
int3
adc
pop
out
stos
xlat
adc
or
aaa
adc
pop
iret
aaa
jno
cmp
mov
scas
sbb
mov
leave
out
roll
aam
insb
mov
in
jg
jl
mov
push
sbb
mov
mov
shll
sbb
dec
sub
sub
fdiv
xchg
xchg
push
mov
loopne
addr16
mov
mov
inc
lods
dec
push
mov
sahf
jle
jno
cwtl
xchg
sti
sbb
inc
cld
xchg
rcl
test
cwtl
pop
loopne
loopne
fisubl
add
dec
mov
lds
dec
outsb
lods
inc
enter
xchg
jmp
adc
pop
adc
repz
scas
push
std
mov
mov
pop
xor
pop
or
or
outsl
popa
insb
insb
xchg
subb
mov
xor
mov
xor
stos
data16
int
dec
pusha
mov
das
xchg
jmp
ret
adc
and
and
pop
mov
xchg
jns
data16
adcl
imul
mov
jbe
andl
in
xor
adc
xchg
mov
dec
adc
add
cld
push
imul
into
fildll
inc
jmp
adc
push
sbb
mov
xchg
leave
sbb
je
scas
in
repz
clc
dec
nop
ret
mov
mov
in
push
dec
scas
push
cltd
shl
adc
jp
inc
jns
mov
sbb
cmpsl
jmp
fcompl
lds
lret
sbb
cmp
and
sub
mov
les
mov
push
xor
or
and
push
cmp
dec
pop
scas
jne
cs
cmpsl
xchg
mov
sahf
pop
xor
xor
clc
push
push
lods
fisttpl
xor
jge
in
add
outsb
push
push
add
and
adc
nop
lock
ss
jmp
pop
out
adc
inc
sbb
pop
jp
push
jge
pop
hlt
je
add
rcrb
xor
and
pusha
pusha
dec
aaa
xor
lods
sti
jg
scas
cmc
mov
ss
daa
ss
mov
inc
in
out
cmpsl
add
sub
xor
or
mov
call
sahf
aaa
xchg
lret
sub
sub
add
mov
xor
mov
out
dec
lcall
adcb
and
inc
in
or
jecxz
push
sub
sub
ret
sbb
adcl
call
inc
pusha
add
sub
jp
pop
cmpsl
adc
imul
and
sahf
jnp
dec
orl
and
out
movsb
inc
aaa
jne
cltd
or
lods
xor
pop
jge
lea
lret
jnp
inc
sbb
cmpsl
es
push
clc
and
cmp
mov
pop
and
pop
mov
leave
in
in
jmp
jp
inc
inc
test
xchg
outsb
jb
jns
cld
mov
test
xor
in
repnz
sbb
decb
sbb
lret
push
inc
scas
cmp
mov
andb
push
inc
push
sbb
in
fcoms
push
adc
das
test
call
ja
sub
xchg
cmp
scas
cli
aas
shlb
jg
and
mov
pop
push
push
xlat
jbe
xchg
and
in
adc
sub
shl
sti
xchg
mov
out
inc
shl
arpl
xchg
mov
stos
lods
mov
in
mov
pop
mov
dec
adcl
push
imul
mov
inc
inc
pop
sub
mov
inc
lods
shll
xchg
add
push
cld
lock
xchg
call
xchg
mov
dec
push
xchg
add
dec
je
or
jge
sahf
xor
dec
dec
lock
lock
out
outsl
jecxz
bound
dec
inc
aam
mov
in
and
in
dec
mul
mov
jge
jno
mov
shl
lcall
cmpsb
sti
ja
sahf
add
rcll
cmp
lcall
testb
sub
inc
outsb
xchg
lea
fcoms
jge
pop
cmp
or
xchg
fstpl
mov
jp
xchg
mov
mov
call
pop
adc
dec
mov
aam
cmp
pop
jecxz
mov
and
pusha
pop
shll
pop
pop
and
jmp
repz
and
cli
add
mov
ss
cmpsl
mov
add
xchg
dec
mov
mov
sbb
addr16
aad
ret
jb
ret
pop
pop
movb
into
mov
dec
or
orb
and
xchg
loop
xchg
sbbl
sub
mov
ljmp
add
out
sub
push
or
fs
je
jb
std
cmp
or
push
in
or
pop
xlat
xchg
cmc
jb
cmpsl
mov
mov
and
loope
ja
xchg
cmp
sub
imul
mov
mov
sarl
ja
push
dec
mov
stos
mov
out
push
mov
cmp
add
data16
std
inc
xchg
xor
test
cwtl
std
cmp
add
loope
cmp
js
cs
dec
jle
ljmp
stos
pop
mov
fcomps
fdivrs
stc
inc
outsl
xlat
outsl
std
out
and
pop
dec
test
xchg
imul
xor
dec
jg
xchg
mov
jl
test
sbb
sub
pop
repnz
jge
cmp
pusha
xlat
daa
jnp
jmp
lret
cltd
and
xchg
sub
je
fwait
or
mov
into
push
movsl
mov
inc
mov
mov
scas
iret
lret
mov
pop
cmp
pop
mov
popa
stc
not
fsubl
lods
fiadds
add
loopne
testb
inc
push
cmp
xor
data16
pop
lods
cmp
jmp
mov
int3
outsl
pop
inc
insb
loope
enter
sub
and
cmp
mov
jne
imul
or
icebp
cmp
fs
or
mov
push
pop
lock
call
mov
andl
sbb
mov
ficoml
popf
and
inc
add
ret
or
add
xor
fwait
pusha
out
and
xchg
and
add
mov
jb
add
lret
pop
pop
jge
out
add
out
lahf
jbe
mov
clc
fwait
cltd
ret
adc
out
clc
mov
loop
pop
inc
popa
js
pop
push
inc
or
sbb
sub
movsb
pop
adc
inc
sbb
bound
xchg
fwait
test
and
mov
out
sahf
jne
sahf
xchg
xor
fistps
cmp
out
xor
mov
jl
adc
test
fisubrs
in
cmpsl
pop
xor
xor
pop
sub
je
mov
cmp
pop
scas
push
test
xor
jp
inc
in
fdiv
or
inc
lret
cmp
data16
test
testb
bnd
fstpl
insb
hlt
mov
or
hlt
popf
sub
or
xchg
enter
adc
mov
inc
jle
subl
xor
sbb
outsl
push
loope
adc
jecxz
sub
add
loop
add
cmp
fcmovne
pop
out
enter
pop
sub
xchg
icebp
jno
pmulhw
outsb
sbb
mov
addr16
xor
push
mov
in
call
hlt
xlat
hlt
iret
rcr
adc
rcrl
mov
pop
scas
inc
mov
pop
dec
dec
leave
lret
scas
leave
or
lcall
je
dec
dec
ljmp
push
adcl
lea
push
leave
stos
cmp
cmc
and
jb
hlt
add
aad
and
mov
enter
call
jp
sahf
test
subl
imul
outsl
fimuls
jns
icebp
lods
out
psllw
pop
xchg
int3
pop
stos
mov
pop
dec
jbe
push
popf
pop
add
mov
cmpsl
testl
imul
mov
lret
pop
out
push
daa
adc
and
fsub
mov
mov
or
pushf
rcrb
push
pop
or
lock
imul
cltd
test
jb
das
push
punpckhbw
cli
mov
nop
dec
push
push
xor
sbb
mov
add
pop
cmp
push
cmpsl
loopne
roll
pop
leave
test
es
pop
orl
cli
sahf
dec
lahf
add
add
mov
ret
lahf
xchg
push
ror
ljmp
cmp
sbb
dec
cwtl
std
and
jns
call
push
pop
test
out
mov
mov
mov
add
inc
pop
outsl
pop
test
mov
jp
sti
pop
movsb
std
xor
out
add
dec
in
test
push
mov
je
mov
popf
fwait
jbe
bound
or
test
addb
ret
insb
mov
pop
and
in
in
mov
pop
das
cmc
mov
and
xchg
imulb
pushf
and
js
jle
or
lcall
mov
dec
sbb
or
into
stos
hlt
xor
mov
fldt
sub
pop
inc
dec
insl
std
imull
rorl
push
xor
rcr
out
mov
or
lcall
pop
dec
dec
int3
push
push
and
rcrl
pop
xchg
and
mov
cwtl
push
cmpl
jnp
sbb
pop
test
add
ds
ret
mov
jmp
cltd
test
sti
inc
xchg
arpl
rcrl
ds
push
cmc
nop
adc
jmp
enter
out
stc
mov
fstpl
mov
mov
int
jecxz
shlb
iret
pop
xor
pop
dec
arpl
test
dec
xor
popa
pop
lock
adc
cmp
movsl
enter
ficoml
in
fsubs
adc
mul
or
sbb
dec
hlt
call
push
mov
insl
stos
mov
cmp
fimuls
xchg
mov
iret
xlat
ds
xor
cmp
and
repz
push
cmpsb
jnp
and
jns
fldcw
test
push
leave
or
inc
xchg
sti
and
add
or
aaa
divb
lret
inc
dec
stos
mov
and
xor
sbb
xor
lret
jmp
ja
fadds
lahf
xchg
cmp
scas
xlat
pusha
dec
mov
bndldx
mov
nop
jo
inc
rcrb
push
push
push
pop
xor
test
cmpsl
and
inc
mov
xor
xor
sub
aas
aad
cmpsl
sub
cvtps2pd
pusha
cmp
lds
scas
lret
jb
ficompl
mov
mov
lea
xchg
mov
nop
mov
movsl
xchg
andl
push
scas
sbb
xchg
sbb
or
mov
fs
mov
call
repnz
pop
xchg
jnp
pop
adc
mov
cmp
sub
scas
push
lock
inc
jo
add
js
or
aam
shlb
dec
add
int3
shll
dec
inc
sbb
pop
pop
mov
cmp
mov
sub
xchg
outsl
mov
test
adc
mov
cmc
cmp
inc
fsts
lret
cmpsb
and
lea
icebp
daa
enter
jge
cmpsl
xor
movsl
dec
jle
les
and
fstl
jne
add
pop
lret
mov
fsubl
inc
mov
in
stos
push
sub
std
rclb
lret
jge
ja
jno,pt
add
mov
pushf
cs
inc
mov
inc
sub
cmp
mov
push
sbb
pop
andb
pop
daa
push
xchg
movsb
or
mov
jno
or
pusha
xchg
inc
pop
add
xchg
rclb
cmp
dec
mov
pop
sub
clc
dec
aas
out
lods
mov
scas
hlt
insb
jo
dec
arpl
js
cli
pop
pop
rcl
pusha
dec
sahf
jge
subb
xor
xorl
imul
and
mov
push
jecxz
or
xorb
lea
mov
pop
scas
sbb
in
adc
and
cmp
inc
pop
outsl
out
mov
dec
aaa
sbb
jge
push
sub
add
sub
add
push
inc
ss
xor
sarb
jg
jp
xchg
jns
lods
adc
sub
sbb
bound
loopne
aas
and
add
into
into
inc
clc
sbbb
mov
scas
sbb
cmp
sbb
incb
std
cmp
inc
pop
xor
in
test
adc
push
daa
mov
add
pushf
mov
mov
repnz
push
sbb
movsb
scas
pop
add
add
xchg
sbb
pop
or
fisubrs
or
lods
fidivrl
enter
or
xor
adc
push
movsb
sbbb
add
inc
dec
or
mov
push
inc
lahf
xchg
adc
and
pop
mov
or
lret
adc
mov
nop
out
inc
mov
add
mov
popf
ja
xchg
insb
jmp
xchg
push
jmp
cmp
lahf
imul
sub
shll
lcall
inc
addr16
ja
hlt
dec
lcall
cmp
mov
mov
rolb
ret
inc
je
jb
xchg
push
icebp
ffreep
fists
insb
xchg
push
mov
add
xchg
cmp
mov
lods
jmp
inc
mov
adc
jns
enter
xchg
out
loopne
test
sbb
pop
test
lods
and
aas
xlat
mov
sbb
mov
out
or
push
incb
jge
sbb
push
sub
jmp
inc
lock
sub
jae
and
add
and
lds
lcall
push
jnp
stos
dec
repz
lea
dec
adc
aas
loope
push
jp
scas
adc
dec
sub
xchg
add
fisttps
cltd
sbb
push
movsb
pop
and
insb
je
cmp
mov
fcmovbe
jp
and
lcall
mov
jnp
inc
push
out
pop
add
cmp
test
fisubs
popa
cltd
mov
xchg
int
ret
stos
add
and
icebp
or
arpl
push
or
movsl
mov
jecxz
fbld
and
jmp
push
mov
jp
test
cmp
cmpsb
mov
int3
mov
arpl
cmp
mov
xchg
adc
push
nop
lock
ds
faddl
rorb
pushf
pop
jo
ret
push
mov
fwait
cmp
or
movsl
es
dec
ds
mov
dec
sbb
decl
jb
dec
int
or
jb
sub
mov
jae
lds
and
xor
in
lea
cmc
repnz
or
xor
xchg
fdivrs
push
pop
mov
jnp
mov
cmp
pusha
push
inc
loope
icebp
cs
dec
fs
hlt
xlat
and
fwait
mov
lods
mov
outsb
lods
xchg
fnstsw
dec
add
cld
push
sarl
push
lcall
xor
xchg
xchg
pop
add
adc
jp
xchg
xchg
xchg
pop
sbb
iret
into
add
cmp
add
rol
mov
add
dec
add
pop
stc
adc
and
xchg
fs
dec
jno
movsl
mov
ja
and
jnp
cmpsl
movsl
mov
dec
add
cmc
mov
std
or
adc
arpl
or
add
mov
aas
dec
mov
lock
aad
mov
sub
adc
repnz
data16
in
fldl
jp
jecxz
sub
rcr
arpl
movb
lea
push
and
push
scas
repnz
leave
push
popa
jge
ret
test
xchg
add
popl
stos
cmp
lahf
lods
popf
cmp
push
shlb
adc
mov
mov
mov
aaa
pop
mov
lds
add
daa
jle
inc
add
clc
xchg
sbb
push
ja
fdivp
mov
lods
mov
fisubrl
pop
adc
arpl
icebp
jl
pop
adc
mov
jno
mov
jmp
loopne
pushf
inc
pop
sbb
sub
decl
imul
imul
dec
imul
add
ss
adcb
adc
mov
push
lds
mov
cmc
cltd
xchg
cld
in
pop
fsubr
inc
imul
in
fmull
imul
addl
jae
xchg
mov
clc
ljmp
push
scas
mov
mov
or
in
xor
ja
xchg
addps
add
or
pusha
mov
addr16
arpl
loopne
lea
and
fidivs
mov
push
rcrb
jmp
mov
int
adcl
hlt
incl
pop
xchg
xchg
fsincos
jb
jle
sbb
push
test
pusha
aas
lds
mov
push
negb
addr16
popa
and
jno
sbb
xchg
arpl
xor
fdivp
andl
imull
mov
cmpsb
iret
or
jge
popa
push
jnp
inc
pop
push
lret
in
mov
push
lret
mov
add
sub
xchg
call
hlt
shll
test
pusha
sarb
shll
push
int3
ror
dec
inc
jp
cmc
push
ret
or
sub
stos
sub
xor
dec
sbb
stos
pop
push
sub
cmp
inc
jns
mov
mov
popa
dec
dec
js
jmp
jl
mov
mov
into
sub
loopne
data16
xchg
inc
lahf
cmc
jge,pn
pop
jbe
mov
mov
ss
dec
hlt
inc
scas
xor
mov
push
jmp
mov
outsl
push
in
cmp
xlat
cmp
inc
stos
popa
fisubrl
popf
out
xchg
jb
js
add
mov
cmp
mov
into
dec
subb
jo
xor
scas
push
push
enter
shll
and
mov
sbbl
scas
out
aas
jae
push
lds
aaa
cmp
mov
fdiv
xchg
or
push
pop
mov
push
testb
in
shld
push
aam
or
xorb
jno
fiadds
cmp
push
adc
insb
push
into
loope
lock
jl
shlb
sbb
inc
jl
xor
cmp
ja
pop
aam
decl
push
lea
pop
dec
pop
or
lret
repnz
dec
es
mov
pop
movsl
pop
sub
sti
sahf
shlb
inc
or
ret
xchg
pop
test
sbb
and
dec
or
insl
mov
orl
add
std
jmp
jne
sbb
jnp
lock
outsb
and
out
pop
test
and
insb
pop
jmp
jbe
out
es
loop
icebp
scas
int3
adc
pusha
add
adc
out
mov
dec
mov
leave
cmp
icebp
sub
popa
in
dec
aam
ja
es
addb
jl
roll
mov
sub
mov
je
mov
push
jns
mov
jae
call
cs
call
arpl
xor
lods
fstl
out
mov
add
int
xor
mov
je
fwait
mov
jecxz
cld
cmp
mov
repnz
jae
sahf
fiaddl
mov
inc
inc
repz
jae
xor
je
lock
or
mov
mov
cmp
cwtl
inc
jge
or
jae
xchg
shlb
cwtl
pop
dec
aas
cmp
movsb
adcb
pushf
xchg
inc
add
add
jo
mov
add
inc
cltd
arpl
sub
scas
mov
jecxz
loopne
or
lahf
emms
and
nop
xchg
int3
shrb
push
test
dec
sahf
pushl
cmpsl
inc
push
adc
clc
int
sbb
lcall
adc
mov
fdivrs
popa
jp
mov
jp
rcl
test
mov
cmc
lahf
jae
test
xlat
test
cltd
mov
pop
jbe
mov
aad
shrb
inc
inc
push
sub
sahf
ds
mov
and
mov
sbb
mov
cmp
push
ret
in
adc
lea
enter
adc
stc
repnz
jp
data16
mov
insl
arpl
shrb
adc
jne
jns
pop
movsb
mov
js
popa
xor
adc
int3
ss
call
pop
dec
pop
add
inc
roll
pusha
sub
jmp
dec
jmp
push
dec
fnstsw
pop
ret
sub
ds
lods
movsl
mov
mov
dec
add
mov
and
mov
xor
jge
mov
or
adc
xchg
out
mov
fldln2
cmpsb
push
mov
mov
popf
cwtl
sbb
shlb
hlt
loopne
adc
mov
dec
neg
dec
stos
push
push
jge
test
nop
outsl
sahf
in
pop
repnz
cmp
test
pushl
mov
bound
test
mov
sti
xlat
or
push
cmc
fsts
or
inc
lret
cs
mov
cmp
rorl
mov
adc
hlt
imul
sub
lret
sbb
test
out
xchg
mov
pushf
ljmp
xchg
jnp
jmp
ljmp
mov
repz
push
iret
rolb
pop
push
lea
subb
dec
out
adc
cmp
push
das
lahf
repnz
jne
xchg
inc
push
orl
iret
out
inc
std
mov
scas
xor
js
xor
sbb
push
mov
sar
js
aaa
in
mov
push
and
adc
js
cmp
pop
or
cltd
push
pop
mov
pop
das
repz
pop
loop
jns
sbb
loop
ss
push
pop
imul
iret
mov
arpl
lahf
int
inc
icebp
inc
push
out
mov
pop
jnp
pop
mov
mov
out
jno
dec
sbb
pop
add
mov
add
xchg
sbbb
inc
mov
xchg
sub
mov
adc
bound
jg
add
loope
xchg
mov
shlb
pushf
sub
pmaddwd
mov
leave
sub
lods
sub
ss
jp
xchg
and
mov
lock
pop
aad
in
rclb
scas
and
and
mov
imull
aaa
and
fisubrs
add
cmp
pusha
adc
push
ret
sub
or
inc
rorb
xor
or
dec
rorb
pop
rorb
add
add
dec
rorb
pop
rorb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
