push
add
arpl
popa
and
mov
jl
jl
mov
pop
das
push
jl
sbb
lock
addl
sbb
stos
xor
add
or
pop
sbb
test
lcall
cmp
and
pop
lds
stos
push
adc
cltd
popa
cmp
mov
pop
lock
xor
test
subl
dec
hlt
jp
lods
idivl
adc
xor
int3
bound
xchg
insb
stos
mov
fldt
fucomp
popf
in
xor
push
jns
sub
dec
or
cwtl
sub
push
and
dec
cld
cli
arpl
push
mov
cwtl
int
imul
shlb
cmp
test
pusha
jae
adc
es
subl
les
dec
or
mov
or
mov
or
add
les
or
movsb
push
push
jnp
xchg
sub
pop
mov
sbb
sbb
dec
arpl
stos
cmp
movsl
jbe
popf
inc
lods
ja
dec
xchg
inc
popf
xor
mov
inc
pusha
int
dec
push
loop
int3
nop
testb
jge
je
iret
push
fdivrl
lods
sub
and
cld
adc
aad
clc
stos
ret
adc
push
cwtl
push
iret
lret
cmp
dec
push
sbb
popf
cmpsb
fisubrl
jg
sbbl
adcl
xchg
orl
cmpsl
jecxz
call
mov
xor
sbb
adc
inc
push
mull
xor
add
pop
int
sbb
dec
mov
in
jle
loopne
mov
or
mov
inc
push
pop
xchg
mov
ja
xchg
adc
sub
push
sahf
mov
mov
push
dec
xchg
or
push
repnz
push
xor
sar
push
inc
fsubl
mov
notb
fcompl
and
movsb
loope
cmp
push
inc
fidivs
daa
mov
and
xor
hlt
push
sbb
popf
sub
rcrl
adc
aas
or
shll
insb
lret
xchg
repnz
or
pop
jmp
cmpsl
mov
das
xor
add
aam
popa
xchg
leave
pop
jge
sub
push
loopne
jo
push
sti
test
sub
inc
pushw
sub
jo
sahf
push
xor
inc
push
mov
cmp
clc
sbb
adc
and
jnp
pop
lds
xchg
insb
push
movsl
in
rol
insl
arpl
ret
xor
mov
xor
clc
inc
fmuls
hlt
daa
aas
mov
sbb
xchg
or
xchg
adc
or
jno
cmc
and
std
test
jge
bound
adc
aam
mov
loope
jne
sbb
fisubl
jl
inc
inc
loop
icebp
test
fldl
fsubl
xor
pop
sub
push
int
xor
fildl
mov
jo
cmp
sti
dec
push
adc
int3
and
sbb
cmp
dec
sbb
rcrl
call
or
mov
iret
rorl
aam
mov
divb
mov
push
jmp
xchg
out
loopne
cli
sub
add
scas
jnp
in
mov
xor
lds
and
jl
inc
and
inc
cmp
out
pop
in
das
push
cmp
jbe
aam
jl
mov
sbb
repz
lock
cmpsl
mov
cwtl
ret
stos
jno
adc
add
sub
xor
lds
es
lcall
dec
out
mov
or
loopne
fisubl
rcrl
push
xor
push
adc
push
enter
xchg
inc
ret
add
enter
cmp
jmp
inc
sbb
pop
inc
add
movsl
sub
data16
cmc
cmp
inc
into
add
insl
orb
mov
es
sbb
add
push
push
jns
pop
adc
arpl
xchg
mov
mov
mov
jno
lds
cli
insl
sbb
xchg
js
bound
mov
push
or
sub
fmuls
mov
insb
or
jge
cmp
lds
scas
cmpsb
push
push
cs
cmp
and
push
out
or
adc
xor
orb
popa
sbb
dec
inc
dec
and
push
xor
xlat
dec
and
dec
pop
adc
sub
repz
jb
push
xchg
sbb
ja
sahf
movsb
mov
fs
mov
cli
lret
adc
shrl
ja
dec
inc
out
mov
mov
fcoms
dec
bound
xor
orb
bound
inc
inc
aas
push
addr16
push
iret
push
fldcw
push
mov
dec
push
rorb
sbb
adc
ret
mov
lcall
aad
xor
inc
cltd
lcall
inc
dec
xor
sub
jo
int3
cmp
jle
add
stc
mov
dec
test
pop
jo
mov
or
inc
push
mov
xor
int
mov
test
adc
xor
inc
push
cld
dec
out
or
ret
aas
mov
pop
mov
std
push
adc
mov
in
and
cmp
flds
nop
stc
nop
mul
lea
cmp
or
pop
imul
sarb
dec
adc
insb
int3
scas
add
andb
test
fisubrs
mov
loop
lds
jp
jbe
lret
in
add
inc
fxch
sbb
les
mov
shrb
inc
dec
andb
mov
xchg
adc
mov
dec
imul
dec
mov
mov
jmp
mov
cmp
adc
shrl
pop
xor
test
loope
mov
shlb
dec
dec
leave
pushf
sbb
imul
outsl
jb
mov
cltd
test
and
pop
cmp
or
inc
clc
mov
dec
push
mov
push
mov
jb
outsl
repnz
mov
add
sbb
hlt
mov
pop
pop
add
call
mov
pop
add
repnz
xor
cmp
mov
dec
inc
lcall
mov
lahf
popa
cmp
push
add
divb
push
dec
jae
testl
mov
mov
leave
dec
shrb
inc
fcompl
cmp
loope
orl
mov
xor
jo
leave
lahf
push
and
cltd
rol
pop
sub
inc
mov
in
and
fwait
daa
cmp
jo
sahf
out
movsl
mov
sub
in
out
addr16
mov
bound
mov
mov
adc
and
xor
xor
mov
les
gs
daa
fisubl
test
adc
clc
push
sbb
xchg
in
push
ret
into
arpl
mov
shlb
loope
sbb
popf
xchg
insl
out
fs
inc
fmull
ret
scas
pushf
add
test
pop
lret
mov
cltd
scas
inc
test
fmuls
pusha
repnz
scas
loop
and
push
xchg
push
mov
jno
or
mov
fldenv
xchg
aam
lods
gs
cltd
jns
mov
sub
lock
lock
push
data16
jns
adc
jg
jmp
dec
aaa
out
push
pop
out
mov
push
and
cmpsl
and
sahf
and
mov
mov
dec
mov
push
push
ja
cmp
push
outsl
push
add
lea
dec
push
pop
sub
cmpsb
mov
adc
sub
xor
sbb
imul
call
je
scas
sete
notb
or
lcall
insl
jp
xchg
mov
loop
add
sbb
push
out
add
cmpsl
daa
add
enter
inc
leave
and
mov
pop
lods
sub
popf
ja
push
and
add
ljmp
or
mov
xchg
and
hlt
push
pop
sub
aaa
ret
jno
cmp
and
pop
shr
sub
adcb
fildll
sbb
seto
in
xchg
out
out
inc
push
pop
inc
les
jmp
cld
test
xchg
sbb
or
lret
xchg
xchg
mov
xor
pop
sahf
jg
movsl
popf
adc
imul
mov
lds
cmpsl
repnz
push
mov
mov
adc
pop
mov
movb
and
pop
sti
je
in
popl
inc
into
or
sub
jno
add
movb
mov
lock
fcmovb
add
cli
fwait
xchg
pop
shl
cld
lock
adc
dec
and
xchg
xchg
ret
adc
idivl
insl
nop
fimuls
and
lods
out
xchg
aam
adc
ja
sub
aam
jnp
or
adc
movsb
dec
out
sbb
pop
mov
or
mov
cmpb
mov
inc
mov
pop
mov
sbb
test
jnp
push
popa
lock
fwait
pop
cmc
mov
adc
rol
repnz
ds
ret
imull
lea
push
leave
pop
push
mov
outsb
ljmp
in
pop
addl
sbb
adc
mov
add
push
sarl
adc
jp
mov
mov
int
pop
and
fimull
ror
shl
enter
or
sbb
xchg
xor
aad
xor
in
mov
fs
orb
movsb
gs
ds
mov
pop
in
js
fwait
xchg
daa
mov
push
adc
adc
inc
add
aad
cmp
push
adc
mov
pop
mov
test
mov
cmp
ljmp
mov
dec
dec
push
shl
hlt
mov
push
loop
push
and
in
ret
int
ja
cmpsl
or
jae
mov
movsb
es
xchg
rcll
icebp
test
mov
xchg
mov
push
xchg
sbb
popa
add
out
or
xchg
hlt
gs
sub
pop
cmp
out
xor
adc
sbb
push
scas
fimull
les
add
test
mov
xor
and
pop
add
or
movsb
jle
dec
mov
mov
outsb
jae
xchg
cli
out
icebp
dec
cwtl
scas
int
cs
fwait
dec
fimuls
dec
outsl
inc
pusha
popf
xchg
cmp
gs
dec
in
test
leave
pop
sbb
jns
out
sbb
bound
jbe
lcall
sar
mov
outsl
fs
or
dec
and
xlat
xchg
in
shl
test
insl
xor
call
xchg
pop
sarl
outsl
pop
mov
outsb
sbb
out
mov
xchg
xchg
clc
mov
cmpsb
push
out
scas
cmp
loop
int
inc
testb
and
inc
icebp
xor
push
orl
mov
cltd
loopne
mov
adc
inc
mov
inc
mov
xchg
shrb
je
in
nop
lahf
arpl
dec
jbe
xor
cmp
mov
push
cld
repz
imul
xor
sub
pop
call
add
fwait
dec
test
enter
mov
mov
xor
xor
pop
arpl
jno
adc
ljmp
mov
dec
dec
orb
into
mov
fistl
out
pop
mov
lea
jbe
mov
mov
mov
dec
enter
sbb
rclb
loop
sub
inc
dec
out
pop
call
mov
test
loopne
mov
push
stos
lds
mov
fwait
movb
dec
cltd
mov
jo
and
aad
pop
shrl
clc
dec
jecxz
js
stos
lahf
add
shll
xchg
in
adc
iret
dec
aam
cmpsb
jle
sub
mov
cltd
test
fildl
fcom
mov
psubw
lods
ret
loopne
aad
out
xchg
mov
push
cltd
adc
mov
scas
mov
mov
cs
jge
daa
out
dec
jnp
lret
inc
inc
cmp
int3
inc
es
inc
adc
inc
test
add
xchg
repnz
ret
adc
xchg
cmp
fldt
ds
pop
xchg
aad
test
mov
aaa
and
inc
inc
inc
nop
sbb
push
push
push
loope
and
fwait
outsb
mov
mov
sub
xchg
scas
inc
adc
es
shrl
lods
out
mov
adc
adc
stc
and
adc
pop
jmp
jg
rcrl
js
scas
fldenv
cs
aam
mov
shl
lds
es
mov
sub
ds
xchg
sbb
jno
cvtpi2ps
mov
add
pusha
out
and
adc
xchg
idivb
loopne
xchg
push
adc
pop
adc
mov
fadds
mov
popf
dec
call
jno
or
cmp
das
jg
push
pop
dec
push
mov
test
scas
cmc
in
sbb
sbb
scas
fwait
push
jg
adc
jno
scas
xor
hlt
mov
adc
xchg
jmp
xchg
es
jae
xchg
inc
push
mov
fs
push
fs
pop
repnz
in
cmp
xor
cltd
sbb
pop
add
pop
in
mov
aad
ss
xchg
sub
sub
arpl
add
dec
loope
sahf
fistps
stos
rorb
cmpsl
js
outsb
mov
stc
lahf
cmpsl
inc
push
xor
or
mov
mov
dec
xor
xchg
and
sub
inc
leave
xchg
or
aad
push
add
mov
dec
jne
shlb
ss
leave
and
mov
fidivs
adc
mov
push
push
xor
insb
and
sbb
push
and
mov
or
pop
int
dec
push
xchg
cmpsl
ds
xchg
test
inc
xor
and
cmp
sbb
aad
mov
jno
mov
adc
adc
leave
xlat
xchg
aad
dec
cmp
xor
nop
out
in
fnstenv
dec
pop
add
sbb
iret
stos
nop
add
popa
push
js
and
scas
cwtl
scas
cmpsb
call
xchg
xor
jecxz
inc
andl
xchg
call
addr16
cmp
sbb
insb
mov
or
jnp
fsubrl
inc
inc
xor
icebp
cmp
pop
fstps
and
aaa
jmp
xor
push
jno
xor
add
loop
sub
ja
push
faddl
pop
loope
mov
imul
add
pop
mov
popf
fwait
mov
mov
dec
mov
jno
sub
adc
lea
xchg
inc
push
in
cmp
sbb
mov
add
inc
ja
dec
mov
aam
mov
xchg
and
xchg
pop
stos
out
jp
in
push
sbb
or
jl
xor
jns
mov
ljmp
jne
or
imul
push
cltd
bound
shrl
aad
aaa
sub
cld
sarb
cmpsl
scas
roll
shlb
push
notl
and
insl
insb
test
mov
fsub
add
or
sbb
jo
aas
sbb
test
rclb
adc
js
insb
pop
movsb
pop
xchg
mov
xor
xchg
mov
jne
out
push
add
xlat
popa
repnz
or
push
cmpb
and
mov
xor
mov
imul
lcall
pop
scas
and
and
cwtl
leave
sbb
mov
mov
orl
xchg
or
lock
cmp
mov
imul
pop
add
xchg
notl
divps
xchg
push
push
mov
test
orb
out
xchg
mov
push
scas
mov
aad
or
push
push
add
mov
loop
adc
mov
xor
mov
mov
les
push
test
add
aam
mov
gs
stos
xchg
decb
out
test
int3
mov
rcrb
jnp
hlt
scas
scas
mov
or
jbe
mov
test
push
gs
mov
xor
xor
cs
dec
stos
test
xchg
jbe
add
mov
xchg
das
inc
js
sub
mov
iret
jg
sub
cmp
mov
stos
ficoms
push
add
lret
addb
xchg
or
xchg
push
lods
jmp
xlat
jecxz
push
cmp
jp
add
enter
pop
xchg
das
test
adc
sub
inc
push
dec
icebp
add
movsb
popf
stc
into
pop
fwait
inc
imul
dec
dec
fadd
xchg
scas
gs
jmp
shll
ret
cld
add
adc
enter
or
mov
sbb
lcall
popa
xchg
push
mov
sar
cmp
sahf
cmp
sbbl
fldcw
and
sbb
dec
or
sub
popa
cmc
sarl
clc
sub
mov
sbb
adc
in
add
loope
rol
dec
call
mov
cs
xchg
cli
repnz
xor
jge
sub
add
loopne
jno
fs
std
cmp
jmp
enter
bound
in
pop
sbbb
pop
push
mov
mov
imul
pop
stos
and
inc
xlat
dec
mov
fidivs
daa
push
sub
push
push
jecxz
add
cmp
in
mov
loope
push
add
repz
mov
and
lock
loop
xor
test
mov
sub
in
imul
xchg
jnp
call
push
jae
addl
jb
orl
add
xor
pop
push
ret
push
inc
sub
pop
jg
cwtl
das
fs
jge
mov
pop
add
repnz
clc
xchg
and
test
iret
dec
adc
test
test
rcrl
sbb
bound
call
mov
xchg
lcall
stos
pop
incl
ljmp
dec
sbb
das
insl
scas
lock
cmp
mov
stos
testl
or
xchg
sub
daa
jbe
in
shrl
xchg
pop
subb
shrl
xchg
pop
mov
mov
adc
push
pop
in
cmp
out
mov
nop
cmpsb
sbb
inc
xchg
xchg
cltd
mov
pop
in
jge
add
sbb
adc
gs
int
mov
outsb
mov
stc
xchg
test
jg
mov
dec
mov
outsb
cltd
sbb
push
daa
jae
negb
xchg
push
insl
das
ret
popf
or
xchg
hlt
dec
popa
jmp
mov
mov
or
test
cwtl
and
add
cli
jo
xchg
popf
xchg
push
out
lods
leave
push
jnp
jl
mov
lret
sub
aam
stos
push
stos
dec
sbb
test
jecxz
popfw
rcrb
pop
in
roll
out
hlt
insb
ret
xor
jns
pop
xchg
fsubs
mov
xor
or
daa
and
pop
lock
mov
dec
add
mov
add
push
xchg
imulb
cmp
gs
arpl
cmp
mov
or
mov
mov
or
dec
pop
and
sub
pop
lods
ljmp
hlt
mov
call
sarb
xchg
or
jecxz
jecxz
and
repz
sub
xor
mov
arpl
mov
sub
fldt
ret
loop
xchg
repnz
adc
roll
into
jg
in
mov
fwait
sbb
movsb
push
mov
test
in
xorb
imul
nop
test
jo
pop
inc
adc
dec
inc
jmp
ljmp
add
dec
push
push
vmwrite
and
clc
fdivl
push
cmp
mov
faddl
pop
xor
orb
mov
in
enter
mov
mov
pop
mov
or
loope
or
daa
loop
aam
jg
ret
rcll
mov
dec
adc
and
lock
xor
cmp
cwtl
pop
adc
mov
or
adc
les
mov
pop
jl
cmp
iret
bound
jmp
insl
xchg
lret
push
pop
push
cmp
cli
fiaddl
pop
add
stos
stos
loope
bound
imul
adc
pop
jle
data16
fistpll
jmp
push
fnstcw
jle
fldcw
xorl
sbb
nop
loopne
xorb
xchg
mov
inc
jbe
cmp
push
rcrb
push
pop
mov
js
mov
mov
xor
or
gs
ljmp
nop
dec
mov
pushf
mov
sub
mov
mov
mov
sub
shll
dec
or
adc
jne
cwtl
or
in
cmp
mov
insb
mov
mov
cmp
int3
sub
jl
lock
sub
test
jg
mov
mov
inc
push
mov
jg
loopne
cmpsb
bound
loop
sbb
push
push
pop
mov
bound
pop
dec
movsb
dec
sub
cltd
adc
stos
inc
push
daa
mov
rol
cs
popa
add
pop
jae
xorl
mov
dec
icebp
xor
addr16
sub
add
dec
mov
xchg
pop
clc
inc
mov
scas
shrb
jmp
sbb
sub
shll
adcl
mov
sub
and
sbb
imul
pop
inc
push
mov
jb
sbbl
push
mov
cmp
pushf
icebp
pop
xchg
mov
mov
fildll
push
inc
add
in
jecxz
push
dec
push
subl
push
jp
andb
sub
mov
push
mov
push
sbb
jne
and
sub
movsl
sbbb
cmp
ljmp
nop
dec
addr16
jno
repnz
std
into
xchg
lret
add
xor
jnp
mov
and
xchg
jle
sub
daa
dec
fstpt
les
and
push
arpl
and
stos
mov
in
subb
inc
sub
push
lahf
push
mov
jecxz
shrd
jb
fcompl
mov
fwait
sbb
and
xor
sub
xor
inc
scas
and
imul
jno
outsl
adc
lcall
mov
jno
jb
sbb
rcll
icebp
sbb
pop
bound
mov
add
enter
pusha
addb
push
int3
or
shl
pop
xor
inc
xor
pusha
repnz
xchg
add
aam
std
mov
inc
jge
js
mov
mov
mov
shr
add
fstp
xchg
shrb
lock
dec
frstor
and
add
dec
outsb
dec
xchg
cmpsb
rcl
adc
cli
call
cmp
js
addb
outsb
mov
xor
ret
sub
xor
jno
push
jno
sub
xorl
cmp
rorb
push
popa
inc
xchg
push
stos
or
dec
popf
stc
inc
scas
adc
sbb
pop
xor
lret
mov
push
and
sar
add
dec
jle
pop
mov
js
jo
dec
jge
dec
cmc
das
jge
data16
jl
jge
fistpll
ljmp
pop
dec
jbe
cmp
push
aad
sbb
iret
lret
aad
ljmp
adc
and
pop
loopne
xor
pop
enter
mov
into
dec
sbb
hlt
sbb
and
dec
xlat
sti
add
lods
sbb
mov
sub
and
xchg
adc
dec
cli
xor
cltd
stos
mov
test
pop
aam
ret
adc
test
jl
add
dec
clc
lds
mov
jle
and
hlt
data16
mov
leave
add
jne
pop
adc
jbe
ljmp
inc
aad
popf
xchg
jo
adcb
pushf
loop
cmp
stc
cli
push
adcl
push
gs
or
lret
add
pop
dec
aas
inc
adc
outsb
iret
or
xchg
dec
inc
out
and
inc
cwtl
andl
call
xor
jne
mov
mov
and
shl
aad
inc
or
rcl
fs
mov
pusha
ret
push
addr16
push
xor
push
popf
test
jae
inc
push
mov
sbb
inc
aam
js
cltd
cltd
lock
mov
rorl
es
push
and
hlt
callw
imul
roll
adc
mov
and
dec
lret
data16
adc
cld
cli
dec
xor
mov
push
aas
sub
dec
ds
mov
stos
jmp
sbb
cmc
sub
fsubs
and
sbb
mov
movsl
xchg
and
pop
shlb
daa
lock
xor
mov
xorl
fistl
or
test
iret
subl
divl
int
sub
cwtl
aad
ret
and
mov
jnp
es
xchg
gs
xchg
inc
iret
aam
sbb
test
lret
pop
xchg
inc
mov
nop
inc
dec
ss
jle
push
mov
fdivrl
pop
scas
aaa
fnstsw
int3
or
or
in
pop
xor
pop
data16
add
push
jecxz
in
jecxz
addr16
je
aas
jecxz
mov
inc
orb
fsub
mov
mov
push
int3
mov
push
mov
fldl
cmc
mov
sub
stc
in
shrl
cmp
and
outsb
rol
dec
inc
sub
pop
arpl
je
inc
punpcklwd
rorb
pop
cmp
cltd
in
push
es
lcall
aam
mov
xchg
rcl
test
xor
aas
int3
pop
les
dec
aaa
test
mov
rcrl
popa
cmc
daa
inc
and
ror
adc
mov
aam
stos
movsb
movsb
jmp
xchg
push
mov
repnz
jnp
xor
jg
lds
inc
fs
sub
dec
cltd
jl
sti
movsb
dec
mov
in
pop
out
imul
lock
ds
add
jecxz
outsb
mov
pop
push
movsb
fidivl
lcall
cmp
fnstenv
push
scas
xor
scas
pop
mov
xlat
push
jmp
stos
push
mov
lahf
out
jge
push
jne
aad
xor
adc
addl
jne
sub
mov
and
movsb
stos
mov
aam
mov
sub
je
and
sti
fwait
movsb
in
lods
sub
add
add
cwtl
mov
sahf
fnsetpm(287
cmp
jg
ljmp
xor
xor
or
push
std
xchg
in
mov
pusha
es
cmp
mov
fimull
sarl
es
and
mov
mov
xor
xorl
aam
xor
cmp
jle
xor
jo
xor
pop
inc
jne
xor
jns
pop
fstps
sbb
or
into
arpl
and
adc
popa
scas
movsl
fsubs
add
mov
jo
push
inc
movsb
adc
sbb
das
inc
and
or
xchg
cmp
xlat
imul
subb
adc
outsb
sti
jns
xchg
cmp
hlt
les
ret
ljmpw
pop
addl
inc
xlat
scas
cmpsb
lret
or
cmpsl
adc
shlb
xchg
pop
xchg
scas
ret
xchg
out
ret
mov
mov
xor
outsb
cmp
nop
dec
stc
test
mov
and
or
xchg
xchg
or
lret
inc
adc
es
xchg
ljmp
sub
adc
nopl
fucom
imul
add
jmp
icebp
jmp
inc
cmp
jecxz
stos
fildl
out
lods
fstpl
ror
lods
into
xor
push
jp
pop
repz
sti
bound
mov
sub
into
ret
xor
inc
ja
jae
push
inc
test
enter
xchg
pop
or
jle
fisubs
mov
aad
mov
cmpsb
fcompl
and
shrb
adc
movl
int
adc
push
inc
and
popa
bound
adc
sbbb
sbb
movsl
jnp
inc
adc
add
mov
and
in
pop
dec
mov
lret
mov
fnstsw
movsl
pop
mov
movsb
pop
daa
das
pop
mov
lds
imul
clc
xchg
xor
cmp
cmp
and
cmp
aad
xchg
jb
rcl
testb
dec
lcall
lock
das
jb
and
lock
adc
adc
mov
sbb
sub
or
in
inc
leave
mov
dec
movb
movsl
push
ljmp
push
lods
lock
fdivs
sub
jge
xchg
dec
ds
sub
mov
mov
add
andps
test
test
je
xor
outsb
subl
movsl
add
out
ja
fnstenv
add
popa
fisubl
and
and
pop
getsec
hlt
mov
or
ds
es
cs
mov
arpl
loope
jo
dec
rol
inc
movb
pop
mov
imul
pop
cmc
dec
mov
shrl
mov
repz
push
xchg
sti
jg
xor
data16
push
lret
push
push
or
xchg
lahf
dec
add
adc
and
cltd
in
test
add
xchg
jmp
fs
jo
mov
cld
loope
int3
loope
incl
xchg
enter
cmpsl
testl
or
jp
dec
test
xor
cmc
jmp
xor
cmp
jne
je
mov
das
sti
mov
jecxz
lock
jae
insb
or
ss
push
xchg
jbe
bound
fsts
adc
fs
mov
mov
push
rorb
bound
aam
mov
jecxz
dec
in
es
out
inc
outsl
int
sub
and
mull
ret
lcall
fs
jbe
cmp
pop
sub
repz
mov
mov
shr
test
les
loopne
jo
das
mov
jno
fisubrs
sbb
icebp
jae
fsubp
adcl
in
mov
shl
mov
lock
bound
dec
mov
push
in
cmp
sarb
lods
insl
mov
cli
or
and
clc
jmp
sar
outsb
out
push
dec
dec
popf
inc
push
sti
jno
sahf
sahf
xor
in
jne
test
mov
sub
mov
inc
int
jns
pop
mov
popf
hlt
add
loop
in
xor
and
addb
jge
and
and
dec
push
out
fists
pop
xchg
cmpsl
in
push
aaa
add
pop
stos
roll
outsl
jg
jno
or
test
cmp
sbb
push
arpl
mov
sbbb
mov
mov
out
orl
cmp
test
shlb
sbb
lods
sbb
jmp
outsb
jg
push
or
test
push
dec
test
sub
mov
sub
loop
stc
xor
test
jo
mov
mov
mov
xor
roll
ja
imul
xchg
or
add
xor
dec
sub
and
hlt
test
or
nop
xlat
cltd
xor
filds
lds
negb
popf
movups
decb
adc
push
out
pop
repnz
xchg
adc
fnsave
xlat
out
xchg
outsb
int
add
pop
xchg
stos
sti
repz
fwait
sub
or
arpl
fistl
mov
sub
xchg
iret
and
sub
jno
idivl
jp
adc
mov
dec
push
rolb
cmpl
push
adc
mov
dec
mov
xchg
mov
pusha
inc
xorb
jp
cwtl
adc
pusha
sahf
dec
pop
cltd
outsl
xchg
in
and
and
mov
jle
lock
lret
cmp
dec
and
jne
cld
aas
mov
or
repnz
and
sub
dec
sbb
dec
out
adc
jmp
pop
dec
lret
les
adc
shll
notb
dec
mov
in
and
lret
inc
and
adc
out
jae,pt
pop
sahf
inc
bound
or
movsb
mov
data16
and
insb
pop
inc
mov
rcll
rolb
mov
push
orb
add
ret
shl
cmp
add
and
icebp
popa
mov
mov
inc
mov
stos
pushf
add
or
subb
aaa
mov
mov
aaa
in
mov
adc
cmpsl
xor
xor
and
sbb
ds
xchg
in
cmp
pushf
pushf
inc
add
adcb
sbb
adc
xor
fstpl
mov
or
jae
and
cmp
lock
cmpsb
sub
pop
mov
fcoms
inc
fadds
lret
or
dec
dec
and
ljmp
pushf
mov
push
jg
bound
lahf
pop
mov
xchg
aas
mov
lods
int3
mov
mov
jne
jbe
inc
or
pop
sub
jg
into
xchg
push
fstl
sbbl
lcall
ja
xor
and
sbb
cmpsl
cmpsl
jb
cmc
negl
stos
sti
add
lods
mov
xchg
stos
in
jo
lret
push
pop
ja
pop
cmpsb
inc
imul
and
add
push
vpsubw
inc
ds
pop
lcall
mov
or
out
lods
sub
outsb
push
js
or
mov
mov
inc
es
cmp
and
lds
negl
cmp
pop
js
add
lcall
jbe
leave
les
sbb
arpl
mov
add
fstps
insb
xchg
dec
add
push
inc
aad
jl
aaa
push
add
mov
pop
cmp
push
xchg
aas
fidivs
or
scas
mov
mov
lret
andl
stos
xchg
and
and
dec
pop
clc
and
mov
insb
arpl
mov
push
test
mov
mov
cli
test
sub
frndint
push
test
mov
int3
daa
jns
pusha
notb
movsb
loope
imul
push
dec
lret
cwtl
js
xor
sbb
xchg
push
cmc
inc
inc
int
ja
push
sbb
adc
adc
ffree
movsl
cltd
mov
mov
push
jecxz
aam
pop
fidivrs
sti
mov
sub
add
ja
std
push
sbb
fildl
aad
ds
pop
add
cmp
jae
mov
xchg
jne
adc
dec
push
icebp
aaa
xchg
out
push
sub
xchg
nop
push
nop
and
mov
shr
push
rorl
cmp
test
cmp
sub
flds
cmpsb
ss
pop
or
and
dec
inc
adc
push
repz
stc
push
andl
mov
stc
clc
push
inc
in
cltd
mov
jecxz
in
dec
andl
lock
cmp
jmp
adc
outsb
pusha
mov
pop
pop
in
add
add
aas
inc
das
movsb
rorl
faddl
inc
jmp
inc
lcall
rol
cs
test
repz
mov
pop
mov
cltd
and
or
insl
add
nop
mov
movsb
and
dec
xor
and
or
in
les
movsl
iret
inc
cli
fistpl
scas
mov
rcll
adc
std
test
cwtl
ljmp
popl
add
cli
dec
xor
dec
adc
sub
cltd
movsb
push
adcb
andl
xchg
dec
pop
or
adc
xlat
mov
push
repz
sub
add
scas
loopne
lds
lret
or
push
movsb
pop
xor
dec
lahf
dec
sub
jbe
mov
push
fiaddl
jecxz
inc
adc
stc
and
adc
pop
jmp
scas
and
ficompl
xchg
sub
adc
adc
out
push
mov
jmp
push
xchg
loop
hlt
mov
add
mov
lcall
mov
dec
ret
fucomp
popa
mov
test
xchg
push
pop
jle
scas
imul
shr
loope
xor
dec
pop
cmp
lea
inc
enter
ficomps
aad
push
subl
and
sbb
inc
testb
ficoms
lods
xor
shlb
bound
xor
pop
insb
call
pop
repz
mov
pop
xchg
jbe
mov
lds
test
adc
lods
sub
cmp
jae
sbb
pop
enter
mov
sbb
xchg
jno
mov
cli
bound
push
or
jns
loopne
fcmovb
fldln2
dec
aam
add
push
rolb
cltd
hlt
test
and
inc
fmull
inc
mov
mov
mov
or
stc
scas
inc
sahf
push
test
rorl
dec
sti
ljmp
lods
add
out
inc
dec
xchg
add
pop
adc
mov
cmpb
insl
ljmp
outsl
and
sarl
and
mov
sbb
iret
inc
and
shll
fdivrs
jnp
aad
in
push
bound
js
ljmp
inc
ret
stc
mov
aad
xor
in
sub
out
sbb
sahf
push
xor
test
aaa
in
inc
incl
daa
mov
xor
fstps
sub
and
in
push
cmp
xchg
lock
lret
inc
jnp
mull
push
inc
nop
push
fldl
fsubrp
adc
push
sbb
or
repz
out
push
bound
jnp
sub
mov
pop
lret
and
imul
cmp
inc
push
and
and
or
clc
push
add
push
xor
std
inc
test
cli
mov
and
or
sub
jne
inc
popf
shrl
xchg
sub
repnz
push
xor
test
outsb
in
jg
xchg
jbe
loope
mov
minps
mov
cld
mov
mov
jp
test
or
jb
aaa
adc
cwtl
sbb
adc
and
mov
xor
loopne
xchg
xchg
ficoml
test
lods
xchg
stos
stos
cmpsb
mov
adc
incb
movsl
std
fisubl
ret
test
cmp
inc
repnz
mov
ljmp
xor
mov
test
jl
arpl
push
xor
stos
push
aaa
fdivl
cmpsl
xchg
lahf
out
data16
dec
out
sub
push
pop
add
xlat
fiaddl
pop
subb
jae
fwait
mov
hlt
andl
add
mov
ficompl
pop
int
push
or
and
roll
inc
arpl
add
dec
fs
dec
mov
fiaddl
cltd
rcll
mov
push
rcl
mov
mov
sbbb
insb
lods
outsb
cmpsl
mov
mov
data16
push
mov
cmpsb
jo
inc
nop
mov
mov
push
nop
lcall
xor
mov
mov
jbe
push
test
sbb
pop
xchg
sub
addr16
mov
adc
push
adc
inc
repnz
shrb
sahf
outsb
jmp
sbb
imul
popf
inc
call
nop
sub
push
or
ja
mov
push
push
jmp
imul
mov
mov
dec
cwtl
jbe
push
pop
fidivs
call
sub
pop
inc
xchg
aam
daa
ljmp
cmp
daa
fisubrl
shl
dec
cli
jae
std
sbb
ret
cmc
push
js
pop
pop
push
dec
arpl
mov
in
pop
das
aas
mov
stos
dec
les
dec
cmp
pop
pop
sub
and
inc
jmp
xor
cltd
cmc
lcall
pop
fnstenv
push
dec
or
pop
xchg
xor
ret
bound
or
mov
mov
mov
cmp
inc
add
mov
insl
aad
out
sub
push
ret
jbe,pt
inc
es
push
fildl
arpl
sub
jne
in
jbe
mov
subl
xor
push
or
ja
pop
push
mov
cmpsb
lods
xor
sub
cltd
mov
jle
dec
mov
dec
inc
xor
adc
add
inc
or
xorb
sbbb
les
movsb
push
push
bound
sub
and
adc
repz
inc
movsb
push
int
icebp
cbtw
mov
sbb
or
mov
dec
inc
addr16
push
out
or
push
stos
inc
adc
xor
sbb
pop
add
mov
inc
pop
popf
gs
add
mov
cld
into
dec
sub
xchg
inc
jne
or
mov
stc
lds
fsubr
or
pop
sbb
push
adc
fwait
xchg
xlat
push
inc
lea
sub
or
loope
fmul
sbb
cli
rorl
or
cmpsl
dec
jecxz
subl
dec
push
fists
out
push
adcl
xchg
mov
cmp
stos
push
push
push
aaa
test
lea
mov
push
cmc
jg
loop
into
out
and
ret
push
int3
cmp
lea
add
adc
mov
mov
or
daa
aaa
in
jmp
pop
sub
mov
sbb
sbb
scas
cmp
pop
inc
sahf
mov
fdivrp
push
push
and
dec
loopne
aam
xor
mov
shrb
pop
xor
loop
dec
and
inc
or
lods
xor
test
mov
mov
sub
pop
jmp
push
insb
and
leave
cwtl
add
sbb
rcrb
insb
pop
jo
mov
aas
imul
cmp
push
imul
insl
mov
sub
ret
add
push
fcoml
add
push
fiadds
xchg
inc
mov
adc
push
scas
mov
jbe
in
into
mov
fldl
hlt
aaa
sbb
mov
inc
mov
fs
scas
insb
call
out
fwait
cmp
mov
jmp
jle
hlt
fidivs
or
jne
mov
pusha
fisttpll
dec
stc
or
dec
dec
mov
orb
adc
inc
adc
mov
out
data16
test
pop
push
jo
subl
ds
cmpsb
das
cmpsb
jge
push
lock
aas
loope
push
inc
out
or
sbb
jb
sti
sbb
dec
jb
test
push
xor
inc
sbb
push
cli
add
pop
mov
mov
xchg
lds
push
inc
arpl
movsb
leave
xchg
lret
xor
stos
rcl
mov
outsl
aad
add
cmpb
and
pusha
arpl
fs
leave
xor
xor
roll
mov
lock
xchg
sbb
cmp
sub
mov
xor
xor
leave
lret
icebp
out
cwtl
arpl
jle
popa
mov
scas
or
stc
pop
les
sbb
ret
addr16
jge
sub
cli
push
insl
xor
fisubrl
je
jmp
push
jne
sbb
pop
push
sarb
jmp
cltd
mov
les
dec
pop
xchg
lahf
push
sub
add
cmpl
mov
pop
adc
mov
cltd
mov
xor
out
and
cmpsb
or
mov
dec
cmp
cld
push
mov
sbb
imul
lcall
or
lock
sti
outsb
cli
push
scas
iret
mov
fiaddl
pop
sub
daa
add
daa
xchg
dec
orl
xchg
icebp
jmp
adc
rcl
adc
cmpsl
popl
pop
jge
jl
xchg
jecxz
pop
push
clc
fmull
addr16
mov
lds
sub
dec
fucomip
push
and
bound
stos
xchg
pop
pop
divb
or
mov
sbb
or
xchg
cmp
lds
std
cmp
es
lock
pop
nop
enter
adc
jb
cmc
add
mov
popa
adcb
test
insl
movsl
adc
inc
mov
sub
leave
dec
std
dec
iret
jno
pop
or
pop
mov
movsb
ja
mov
stc
xor
mov
xor
je
mov
or
int3
cmp
cld
cmp
movsb
ja
repnz
mov
popa
aam
jne
xor
add
add
jo
cld
mov
mov
rolb
leave
call
inc
test
shll
lods
fucomip
imul
insb
or
push
mov
popa
dec
lcall
stc
push
mov
xchg
das
outsb
lret
dec
fwait
cli
sbb
fistpl
or
out
push
xchg
mov
sub
push
and
je
jne
sbb
subb
js
push
xorb
cmpsb
xor
jbe
sub
or
mov
mov
add
adc
jge
and
xchg
lock
iret
in
jmp
mov
bound
xchg
cmp
xor
ljmp
scas
imul
or
and
adc
mov
adcb
mov
dec
les
dec
inc
fs
inc
sbb
push
das
fcomps
push
lods
test
dec
cmpsb
cs
movsl
lock
pop
jo
cmp
push
mov
sbb
jge
sub
mov
in
scas
xor
or
cmp
into
out
push
mov
stos
movl
inc
cmc
daa
adc
inc
dec
jbe
jb
cmovp
mov
inc
cli
mov
enter
push
push
test
sub
loopne
repz
je
loop
pop
adc
loop
and
repnz
or
mov
aad
adc
mov
mov
scas
in
test
subl
sub
in
test
push
push
lock
scas
loope
jno
mov
add
rcrb
mov
sbb
rcl
fldt
xor
jecxz
notb
cmpl
imul
sub
push
jbe
pop
add
sub
cmpb
jae
clc
pop
jne
stos
aas
movsb
daa
cwtl
jl
inc
fs
sub
test
loope
mov
pop
dec
mov
lret
adc
or
cmp
mov
add
sbb
mov
lret
xchg
cld
add
subl
mov
insl
xchg
sbb
xchg
mov
repnz
xchg
ds
rolb
sbb
or
jl
scas
cmp
movsl
pop
push
inc
loopne
ret
jnp
pop
popa
push
push
adc
xor
push
mov
insb
dec
cmp
enter
fdivrl
xor
popf
inc
push
adc
lcall
sbb
or
and
mov
add
outsl
and
xor
jp
subl
out
or
or
inc
inc
or
ljmp
mov
arpl
inc
cmp
push
sarb
iret
xchg
sbb
aad
mov
popa
imul
pusha
mov
mov
lds
adc
push
pop
xchg
adc
outsb
lods
and
daa
ja
lcall
sti
fistpll
dec
call
push
je
xor
mov
mov
or
movsl
xchg
cmp
cmp
jl
mov
pcmpeqw
sbb
rcr
xor
fistpl
mov
js
mov
cmp
sbb
int3
and
es
push
adc
mov
mov
push
sbb
bound
push
rcrl
dec
sub
mov
mov
and
imul
sbb
jmp
mov
add
and
and
sub
pushf
push
lods
mul
pop
push
mov
push
int3
mov
jns
xchg
fmuls
or
mov
cmpsb
fcompp
inc
push
insb
adc
scas
lret
and
lds
in
pop
jp
hlt
out
mov
dec
pop
leave
aam
adc
push
out
cld
out
add
lret
xlat
dec
mov
fsubrl
xor
push
xchg
ret
xchg
loopne
shrb
and
loope
popf
jg
mov
in
mov
push
inc
or
js
hlt
stos
add
outsb
in
ds
lret
fists
fst
mov
scas
xchg
mov
push
cmpsl
add
adc
dec
xor
scas
outsl
xor
xor
cs
push
xchg
leave
or
ret
sub
mov
cmp
xchg
imul
add
jl
out
mov
testb
mov
jmp
pop
in
jns
inc
rclb
mov
or
cld
gs
add
clc
pusha
hlt
mov
adcb
xor
hlt
cmpsb
mov
lock
sub
and
inc
push
mov
cmp
cmp
loope
xchg
into
cmp
jno
mov
in
call
xchg
shrl
pop
popa
xor
jne
lret
mov
ret
aaa
outsb
xchg
fistpl
sub
jno
mov
addl
pop
xchg
lcall
push
outsl
push
pop
mov
std
in
xchg
int3
rcll
jecxz
cli
mov
lods
pop
loope,pn
out
add
fiaddl
jns
jge
push
lea
mov
popf
xchg
rcrl
xchg
fidivrs
xor
addr16
test
inc
inc
and
xlat
fists
jp
jge
les
arpl
dec
icebp
xor
jmp
nop
ss
out
repz
inc
push
outsl
and
push
rorb
mov
ret
fmulp
iret
test
mov
dec
xchg
adc
jns
in
sbb
jge
push
not
scas
mov
xor
xor
test
or
xchg
leave
sub
les
cs
jge
or
cmp
addb
xchg
sub
and
fadds
out
mov
push
xchg
xchg
fstpt
fldenv
mov
addr16
inc
adc
mov
testb
test
mov
ds
das
adc
jge
data16
push
loopne
jnp
mov
jmp
rolb
inc
ds
xor
mov
pop
sub
adc
les
dec
dec
adc
orl
cmp
mov
dec
mov
clc
xorb
test
out
call
mov
jbe
add
jl
pop
in
int
stos
icebp
mov
mov
lret
pusha
pop
insl
addl
enter
mov
mov
cmpsb
sarb
sub
push
out
and
jo
dec
inc
flds
push
aas
mov
je
scas
cmpsb
sbb
mov
in
xchg
xlat
scas
sbb
pusha
sbb
add
add
ljmp
jl
test
int
cwtl
mov
dec
sbb
mov
sbb
das
pop
sub
inc
mov
std
lds
es
idivb
lcall
cmpsb
mov
and
arpl
out
xchg
push
leave
call
leave
ss
fidivrl
pop
xchg
test
and
dec
repz
and
mov
hlt
iret
and
mov
ds
mov
js
mov
xor
and
jno
cmp
push
and
movsb
into
test
add
xor
inc
test
cmove
or
mov
jmp
sub
xchg
xchg
dec
jle
jne
dec
inc
aaa
inc
jb
push
inc
insb
or
or
outsb
cltd
dec
xor
int
addl
pop
xchg
cmp
jg
ret
mov
push
nop
mov
mov
push
xor
dec
add
sti
mov
sub
or
scas
idivb
adc
ficomps
or
mov
pop
mov
add
jae
sub
inc
jbe
cmp
pop
adc
jb
xlat
aam
dec
mov
push
push
push
mov
popf
push
outsb
fs
lods
xor
test
inc
push
lret
nop
test
in
cltd
pop
fs
add
cltd
or
dec
ljmp
or
cli
sub
or
pop
sub
inc
mov
mov
xchg
outsb
sbb
cmpl
scas
notb
in
pop
sahf
sbb
mov
or
mov
call
cmp
and
arpl
adc
and
testl
adc
es
push
xchg
or
and
clc
push
cmp
mov
loopne
push
push
push
neg
gs
and
fs
sub
loopne
sbb
cmp
dec
das
jge
sub
add
rcrl
mov
push
outsb
in
jg
inc
and
push
xchg
adc
sti
lock
ljmp
jnp
outsb
fldcw
stos
jl
sub
lcall
push
jns
push
test
out
mov
xchg
adc
adc
mov
mov
les
push
faddl
mov
mov
xchg
std
pop
pop
imul
xor
outsb
mov
das
sub
dec
jmp
dec
jns
subl
ljmp
mov
fisttpl
cli
push
scas
mov
insl
icebp
int
cmp
in
test
push
push
mov
repz
cmp
jnp
int3
dec
dec
mov
or
or
or
fwait
or
in
in
notb
cmpsb
mov
jg
loop
andl
mov
push
sbb
and
cmp
stos
xor
aaa
adc
sub
mov
pop
mov
pop
test
push
push
inc
jmp
inc
push
loopne
mov
pop
stos
rolb
mov
stos
pop
cmp
icebp
push
out
mov
mov
xor
xchg
mov
mov
rolb
cwtl
pop
lock
das
and
mov
or
jg
sub
cwtl
adc
jl
mov
push
jo
scas
or
outsb
test
mov
divb
je
ror
jne
jp
inc
sbb
jno
inc
cmpsl
add
ds
cmp
cmc
bound
lds
adc
into
out
mov
mov
ljmp
sub
mov
inc
std
push
xchg
lret
push
out
sbb
test
mov
hlt
enter
mov
ljmp
arpl
add
pop
das
adc
add
int3
ljmp
mov
test
pop
mov
mov
xor
dec
mov
add
or
arpl
sbb
rorb
mov
mov
lahf
popa
add
inc
insb
ret
jmp
test
mov
lds
add
sub
pop
push
in
inc
mov
movsl
out
xchg
push
inc
add
in
in
dec
pcmpgtd
sbb
les
push
out
mov
stos
lods
mov
add
cmp
lret
inc
or
xor
xchg
mov
jnp
mov
jge
ds
mulb
xchg
and
push
or
loop
rol
jo
xor
outsl
mov
cld
loop
xor
outsl
and
and
aad
xchg
outsl
sub
shrl
or
xor
dec
das
les
cmp
inc
and
lds
xor
and
pop
sbb
xchg
push
dec
mov
dec
jmp
push
es
jns
push
pop
dec
xor
push
sahf
push
or
lret
scas
jmp
jmp
adc
pop
pop
jmp
repnz
and
mov
and
es
repz
rorl
inc
enter
ja
out
ds
stos
push
popa
lret
inc
loop
mov
enter
cmpl
dec
xchg
addl
xchg
dec
call
shrl
shrb
push
cld
je
mov
xchg
cld
aas
fucomp
test
dec
inc
fs
js
inc
shlb
movsb
jg
aam
add
pop
xchg
fcomi
jg
int
cmc
jle
xchg
mov
lea
push
inc
add
add
xchg
in
push
rolb
dec
vmovntpd
pop
mov
xor
push
xor
or
mov
ret
or
jp
ss
loope
repnz
push
lea
in
icebp
xlat
inc
mov
and
jg
out
and
add
and
dec
mov
adc
fisubrl
sbb
push
iret
push
cmp
cmp
or
push
rcrl
mov
jp
loopne
xor
scas
mov
stos
xor
xor
shlb
inc
pusha
or
or
mov
les
subl
jne
push
jo
ja
pop
dec
outsl
cs
push
shl
mov
repnz
repnz
out
fadds
push
enter
mov
jb
adc
dec
mov
xor
add
int3
daa
int
int3
dec
ret
lret
inc
mov
mov
push
inc
in
aas
xor
mov
xor
cmc
enter
in
jle
js
jl
xchg
sub
aam
sbb
iret
cld
sahf
dec
adc
popa
xor
cmpsl
gs
xchg
add
jl
adc
jae
sbb
js
sub
push
rolb
out
dec
add
xchg
es
sbb
cli
outsl
dec
test
pop
inc
push
jp
pop
sbb
and
mov
out
push
arpl
pop
add
pushf
pop
sbb
inc
jle
in
cld
hlt
mov
movsl
jle
adc
xchg
xchg
mov
sub
xor
push
pop
cwtl
data16
sub
scas
mov
rcl
mov
pop
adc
add
fisttpl
sti
dec
enter
ds
jmp
ss
xchg
push
repz
mov
mov
add
std
mov
repz
or
mov
sub
push
xchg
cmp
int3
fs
adc
das
ds
out
jbe
and
or
jae
xor
sahf
mov
bound
xor
mov
insl
inc
dec
inc
mov
mov
stc
pusha
int
ljmp
jo
cmp
push
xchg
jb
bswap
insl
add
pop
mov
jo
jbe
cmpsl
call
stos
lcall
mov
enter
push
and
test
and
adc
sbb
je
dec
outsl
xchg
pop
xlat
lds
jns
inc
fs
mov
push
sbb
stos
dec
adc
jae
fcmovu
stos
repz
cmp
jg
jg
inc
adc
fstl
popf
fmull
push
sub
test
popf
inc
frstor
pushw
stos
lods
das
div
mov
mov
stos
jnp
ljmp
cmpsb
mov
imul
in
cs
cmpsl
ljmp
adc
mov
ljmp
ja
outsb
or
loop
jmp
push
out
test
fiadds
mov
mov
leave
inc
out
icebp
shl
push
cmp
xlat
mov
nop
aaa
scas
xchg
cltd
xchg
sub
sahf
or
out
subb
and
or
ljmp
xchg
jo
out
adc
xor
in
adc
push
sub
cmpsb
sub
inc
clc
mov
popf
mov
int3
add
lds
xor
cwtl
cmp
cmc
cs
jbe
cmp
call
xorb
call
arpl
xor
stos
imul
push
inc
or
xor
dec
cmc
outsb
arpl
sub
mov
pop
insb
inc
jb
aam
mov
mov
mov
loope
jbe
xor
test
dec
lock
lods
sbb
jne
test
dec
out
cmc
and
loop
adc
movsb
jmp
shll
sub
in
out
pop
adc
sti
out
mov
jecxz
shrl
in
jl
ljmp
popa
push
mov
ljmp
mov
in
jmp
and
aas
lea
ret
daa
sahf
jmp
mov
aad
test
pop
dec
cmpsb
in
mov
sub
paddq
push
out
and
loop
repz
cld
rorb
and
or
out
js
dec
xchg
xlat
cmp
mov
lods
inc
xor
jae
push
mov
out
icebp
test
jmp
mov
sub
pusha
in
push
sub
jb
xor
les
jl
inc
or
pop
mov
pop
fwait
addl
stos
and
and
ret
bound
pop
push
mov
sti
jecxz
lahf
cmp
pop
xor
mov
stos
cmc
push
leave
aam
xchg
lcall
lcall
nop
jmp
push
cmpsb
push
loope
or
xchg
lret
ret
cmp
mov
lds
test
sti
sbb
imul
stos
push
and
stos
jne
mov
lea
mov
lcall
pop
dec
mov
inc
lods
and
inc
push
or
push
jg
jle
cmp
enter
adc
rol
fwait
mov
rolb
dec
xchg
add
in
push
add
les
add
push
icebp
mov
dec
mov
add
enter
fcoml
cmp
icebp
mov
nop
incl
int3
inc
test
out
xchg
push
mov
ret
fldenv
push
and
xor
pop
dec
into
sbb
cmp
adc
into
int3
clc
push
insb
cmp
jmp
mov
mov
and
xchg
and
in
lock
fsubrs
xor
mov
xchg
mov
stos
and
mov
xchg
cli
les
mov
lods
xor
mov
adc
fsubrs
push
repnz
fists
rol
stos
mov
aam
in
stos
nop
jecxz
mov
mov
lahf
push
push
and
outsl
or
cmp
notb
inc
adc
ljmp
std
adc
push
adc
sbb
xchg
lahf
fmuls
mov
mov
cs
add
mov
cs
ret
sub
cmp
neg
mov
cmc
stc
lock
addl
inc
popa
sub
push
stos
and
fildll
pop
ret
loop
lods
jnp
jmp
dec
cltd
ret
cmp
ljmp
in
clc
aam
cmc
cld
in
and
ficompl
mov
enter
cmpsb
in
dec
insl
cmc
add
mov
sbb
fbld
mov
xchg
hlt
add
test
icebp
mov
inc
mov
mov
je
stc
pusha
mov
add
ficoms
push
in
adc
clc
xlat
or
pop
add
jle
orl
xchg
push
cwtl
jmp
sbb
add
gs
mov
lods
pop
mov
xchg
push
and
xchg
xchg
and
inc
xchg
xor
jmp
dec
mull
ss
mov
jno
xor
jne
andl
fiadds
repz
pop
ds
pop
push
popf
adc
sbb
mov
rcrl
pop
shrb
sti
std
push
pusha
xchg
mov
je
insl
jecxz
jae
ja
imul
jmp
popa
addb
aad
pop
jb
pop
sub
xor
dec
mov
stos
sbb
popf
inc
adc
push
stos
or
and
xor
pop
ret
xchg
mov
pop
test
cmp
inc
inc
and
pop
mov
adc
add
and
and
adc
or
add
test
popa
add
inc
fbstp
xlat
fwait
jge
sbb
sub
adc
mov
and
mov
out
pop
push
ljmp
cmp
jecxz
sub
int
dec
lahf
fcomps
adc
push
push
hlt
pop
sbb
xchg
popf
xchg
or
mov
out
les
mov
dec
jp
call
outsl
and
test
jp
and
mov
rolb
pop
xor
bound
dec
xor
or
or
dec
adc
xlat
push
outsl
js
scas
dec
mov
fucomip
fnsave
cli
cmovge
imul
scas
jmp
mov
subb
mov
enter
push
cmp
pop
push
cltd
pusha
cmc
out
cmp
sub
aad
inc
dec
mulb
mov
push
mov
es
rcr
les
and
push
and
sub
adc
and
outsb
nop
xor
out
sub
xlat
in
dec
out
cmpsl
mov
jnp
pop
sub
inc
ret
ss
rolb
push
xchg
cli
inc
and
pop
or
add
and
pop
adc
add
adc
or
or
cld
es
dec
dec
stos
dec
add
shlb
loop
rorb
or
andl
enter
adc
and
mov
icebp
js
xor
fsts
rcrl
add
test
xrelease
les
rol
or
adc
mov
leave
aaa
or
mov
push
test
ret
mov
lock
add
arpl
add
je
inc
sub
jp
xor
cmpsb
pop
and
and
loop
mov
xor
arpl
or
or
push
jl
lods
test
mov
es
test
leave
decb
mov
testl
dec
mov
mov
popa
sub
out
or
xchg
add
lahf
mov
ret
or
cwtl
inc
inc
adc
xchg
or
inc
popf
fs
shll
adc
mov
xor
mov
inc
push
test
and
inc
push
jp
add
adc
xor
and
adc
fiadds
push
loop
pop
or
addl
xor
add
inc
or
push
bound
enter
ret
scas
cs
xchg
add
jecxz
xchg
aad
scas
mov
pop
cmp
mov
movsb
xchg
add
dec
adc
or
andl
ret
jbe
xlat
or
inc
je
shlb
fcoml
jae
jb
xor
or
cli
or
dec
or
mov
or
inc
subb
cltd
test
ret
or
sbb
dec
mov
mov
lret
xchg
ffree
xor
xchg
add
xchg
outsl
or
adc
push
cmp
lret
and
lea
dec
cmp
lcall
lret
xchg
imul
pop
push
and
jmp
lock
inc
mov
xchg
mov
push
rolb
inc
xor
or
push
sub
jnp
bound
adc
xor
inc
push
adc
fwait
loope
cmp
hlt
ret
and
popa
and
mov
add
test
ret
or
sbb
jle
test
xor
adc
rclb
push
inc
adc
ljmp
adc
out
cmp
inc
cmp
cmp
mov
insb
aam
jl
test
adc
int
and
mov
daa
push
mov
xchg
and
andl
and
xor
test
test
cmpsl
xor
jnp
ror
push
inc
push
inc
cmp
jp
mov
inc
dec
pop
ret
sbb
jp
inc
ja
mov
sbb
jle
add
inc
rolb
mov
or
int3
test
xchg
or
pop
adc
mov
cmp
mov
fwait
les
sub
push
adc
push
inc
pop
bound
or
inc
cld
push
push
in
movl
scas
mov
mov
aas
jmp
mov
pop
aad
sub
dec
call
ret
into
pop
xor
aad
mov
aam
repz
cld
inc
mov
pinsrw
add
add
sbb
pinsrw
les
mov
rcrb
faddl
xor
or
insl
xchg
mov
and
loopne
jnp
test
in
adc
push
mov
sbb
and
and
xchg
or
fs
adc
mov
pusha
mov
ret
dec
gs
sub
dec
or
mov
add
or
shll
xor
mov
mov
loop
jae
idivl
mov
clc
mov
sarb
mov
nop
dec
xchg
sbb
mov
ret
jmp
scas
lods
ja
in
adc
xchg
xchg
sub
push
data16
inc
fildll
loope
incl
adc
mov
lods
pmaxsw
jne
shrb
pop
insb
hlt
dec
mov
mov
mov
adc
loopne
rcll
cli
lea
mov
sti
insl
mov
push
or
mov
mov
jbe
insb
add
jg
add
data16
aad
shlb
mov
sbbb
fwait
cs
xchg
outsl
mov
sub
lods
pop
jbe
mov
mov
cmp
inc
fiaddl
test
mov
or
lcall
inc
sub
adcl
jp
pop
fsubrp
cwtl
icebp
inc
sti
cmc
lock
xchg
add
xchg
in
mov
mov
and
gs
jg
fcomp
ja
roll
xor
ss
xchg
ficompl
incb
insb
add
das
pop
dec
ror
push
cwtl
lcall
sub
mov
je
data16
and
in
dec
push
add
dec
stos
xchg
mov
pop
pop
movsb
fldenv
fisubs
scas
rorl
ret
pop
adc
mov
es
repnz
cmpl
jmp
and
cs
push
sahf
ret
loopne
inc
icebp
and
pusha
test
fcompl
jmp
add
popa
sbb
mov
clc
xchg
fimuls
ficoml
lret
sbb
in
mov
xchg
jecxz
mov
ljmp
add
notb
sti
imul
js
lods
pushl
inc
sti
and
fs
scas
daa
jg
sti
mov
sub
stos
dec
stos
in
xchg
sub
inc
fistpll
movsl
in
mov
test
lret
fldt
xor
cmp
jne
xor
add
ret
mov
cmp
les
or
push
mov
inc
scas
or
stos
ds
shl
push
scas
js
cmp
dec
mov
mov
and
into
cmp
flds
cmp
jge
movzbl
ljmp
leave
test
aam
divb
das
sub
aaa
popf
lock
je
and
cltd
mov
mov
mov
stos
xchg
gs
mov
cltd
lods
mov
mov
cmpsl
das
das
jns
sub
aas
sub
daa
and
pop
jne
imul
sub
outsb
push
scas
push
leave
test
xchg
mov
fs
cmpl
or
js
js
jo
mov
mov
bound
mov
jno
cmpsl
jne
rclb
cs
pop
in
dec
jne
pop
stos
mov
push
xor
loopne
sub
int3
sub
in
scas
pop
cmp
and
popf
push
mov
or
mov
jno
mov
inc
leave
mov
pop
je
es
fstp
icebp
jge
mov
adc
xchg
mov
enter
in
push
jae
insl
icebp
mov
movsl
xchg
xchg
cmc
jne
jno
cmc
popa
push
test
popf
int
pushf
ret
aaa
repz
mov
outsb
clc
mov
push
dec
aaa
lcall
fsubrs
in
lods
aaa
das
ljmp
sbb
fdivl
ljmp
lea
jecxz
stos
jp
adc
lret
nop
pop
pop
xor
sub
inc
imul
push
mov
ret
sarl
out
pop
sti
mov
popf
and
mov
scas
dec
sub
xlat
mov
arpl
sub
ljmp
rcll
mov
scas
fcoms
jae
movsl
or
xchg
mov
jp
pop
ljmp
mov
xchg
jne
int3
cmp
xchg
cmp
test
out
mov
cmpsb
mov
mov
xchg
mov
cmc
mov
push
jle
inc
sbb
xchg
adc
mov
mov
addr16
sbb
push
stos
dec
adc
mov
xlat
xor
push
pop
dec
stos
clc
pop
pusha
rorl
ficoml
and
ror
and
sub
loope
push
ror
inc
testb
add
adc
addb
int3
aam
adc
sbb
loop
hlt
pushf
and
cmovg
push
jae
pop
inc
mov
lret
jle
mov
rcrl
dec
inc
inc
xchg
cmpsb
lcall
and
addb
mov
push
xchg
lods
lods
pop
leave
inc
sarb
popf
cmp
cmp
das
dec
xor
rcrl
shrl
in
in
dec
in
or
in
loope
dec
jecxz
jns
sbb
inc
jne
cmp
push
dec
fdivs
jge
push
movsb
imul
cmp
mov
idivb
sbb
sahf
leave
xchg
add
inc
fstpl
dec
pop
scas
dec
push
xchg
xor
lods
test
xlat
sbb
sbb
adc
pusha
dec
addr16
pop
mov
es
test
cmpsl
addr16
rcrl
inc
xchg
mov
mov
loope
fcoms
rcrl
popf
pop
pop
and
loopne
add
pop
inc
or
stc
xor
xchg
jo
test
add
mov
xchg
dec
ljmp
pop
insl
dec
adcl
out
rorl
ja
mov
adc
mov
or
scas
xchg
into
das
lock
add
shll
sysenter
hlt
or
adc
push
cmp
clc
test
jae
xor
test
cs
and
pushf
stos
xchg
dec
and
and
push
and
stc
mov
lahf
add
or
sbb
mov
sub
add
mov
cld
xchg
scas
jmp
andb
mov
mov
or
sbb
xchg
icebp
movsb
inc
outsb
cmovle
cmp
stc
addr16
push
movsl
loop
mov
sahf
into
pop
sarb
imul
and
es
mov
adc
insl
add
jge
popa
mov
push
pop
adc
and
lods
push
je
mov
pop
inc
enter
mov
lods
xlat
int3
cmp
movsb
and
fwait
xor
cmc
sub
aaa
dec
or
dec
imul
ret
lret
mov
sbb
jae
xchg
pop
xor
push
pusha
test
call
xor
push
add
add
push
cld
scas
in
push
adc
rorl
jo
stos
clc
sahf
stc
ja
sbb
sub
movsb
xor
jne
lahf
testl
inc
push
imul
inc
inc
or
repnz
inc
out
jg
sub
mov
mov
xor
jl
sbb
in
cmc
call
in
lock
pop
jge
into
xlat
sti
dec
jnp
push
cli
fs
lds
xchg
outsb
ljmp
dec
test
mov
stc
clc
xchg
lea
or
mov
pop
lds
pop
stos
pop
lret
push
flds
stos
repnz
scas
jmp
stos
imul
cmp
dec
lahf
sbb
gs
test
jle
cwtl
inc
mov
xor
pop
mov
aad
xchg
pop
push
jne
pop
in
hlt
cmp
jbe
daa
ja
je
dec
jno
dec
xchg
push
enter
cmp
inc
push
push
repz
inc
fldl
fmull
sub
cmp
xor
enter
add
adc
lock
lock
inc
mov
sbb
dec
jle
test
bound
or
cmp
sub
xchg
sahf
xchg
vprotb
repnz
and
scas
fiaddl
outsl
data16
push
cmp
lods
insl
xchg
sbb
push
mov
sbb
fwait
std
cmp
fnstenv
or
add
idivl
loopne
lcall
dec
js
jae
jg
std
jne
or
xor
add
leave
lds
pop
loop
xchg
andl
mov
iret
push
cmp
addr16
jne
subl
cltd
push
subl
stos
dec
push
adc
push
mov
xor
sbb
fwait
test
pop
push
enter
or
jecxz
and
and
cmp
repnz
in
xchg
mov
addr16
js
test
enter
or
movsl
jl
xchg
loope
xchg
mov
xchg
lret
movsb
mov
push
xor
mov
hlt
or
imul
jb
mul
pusha
cld
shll
push
mov
cmp
repnz
mov
push
std
dec
xchg
pop
iret
pop
clc
xor
mov
das
stc
rcll
pop
loop
jno
and
fistpll
jo
push
pop
dec
sub
jl
push
pop
mov
pop
mov
cwtl
mov
or
mov
inc
mov
cmpsl
jae
shll
dec
inc
adc
xchg
std
in
out
lods
popf
std
in
adc
sub
ret
jp
negl
leave
aas
cli
pusha
stos
mov
push
cmp
inc
fldcw
lea
pop
jno
add
and
xlat
jb
repnz
inc
dec
fistl
add
lods
negl
sahf
rcll
call
in
fdivl
xchg
adc
inc
mov
outsb
sbb
xchg
xor
lods
test
fs
or
pop
and
or
cwtl
mov
mov
dec
movsb
cltd
mov
testl
out
test
outsl
mov
cmp
cs
mov
push
sbb
jle
and
add
cmp
xchg
in
and
inc
xchg
sub
mov
or
in
pop
nop
xor
mov
inc
and
mov
mulb
sbb
xchg
test
dec
mov
stos
jp
push
data16
inc
in
mov
scas
push
and
imulb
lds
mov
cmpsl
das
mov
jbe
xchg
loop
pusha
xor
jbe
sbb
xor
mov
movsb
mov
das
mov
test
pop
push
adcl
shlb
pop
fs
popf
dec
bound
jb
dec
adc
movsbl
cwtl
sbb
mov
in
sub
jmp
pop
adc
cmp
call
lahf
lret
in
jno
push
dec
roll
jns
add
add
lock
and
push
adc
clc
stos
and
imul
inc
or
xor
xchg
push
xor
hlt
fchs
lock
cmp
repz
mov
sub
dec
jmp
jo
jnp
adc
cli
loopne
adc
push
adc
rcrb
push
pop
sahf
stc
mov
xor
movsl
pop
mov
scas
xchg
frstor
rcl
jg
subl
or
lods
mov
mov
outsw
and
cmp
push
xchg
add
data16
xor
mov
and
dec
mov
mov
not
fcomip
lcall
test
imul
fsubs
push
das
add
test
movl
or
shll
inc
jbe
mov
mov
add
aam
lahf
pushf
mov
cwtl
cwtl
scas
xchg
dec
xlat
shlb
or
xchg
lret
xor
scas
popf
cmc
dec
push
sarb
cmpsl
inc
jp
push
vpmovmskb
stos
push
fcoml
or
ds
cwtl
test
mov
andl
push
lds
scas
sub
fdivp
jecxz
mul
loopne
inc
cmp
jl
loope
dec
or
adc
insb
rcrl
std
lret
lahf
hlt
cmp
sahf
outsl
or
gs
jne
shlb
sbb
add
adc
cwtl
sub
xchg
fwait
pop
push
incb
or
xchg
aas
ret
jge
sub
cmovbe
dec
popa
ljmp
and
scas
fnsave
cwtl
jle
aad
mov
loope
adc
stc
cmpl
xchg
mov
and
xlat
push
dec
loop
fildll
mov
mov
mov
push
mov
or
enter
cmp
sbb
movsl
rolb
in
push
inc
sbb
and
popf
push
jnp
popf
ds
rorl
adc
or
fwait
jne
cmp
and
stos
or
sbb
jle
jbe
jns
push
jb
test
sbb
inc
cmp
inc
pop
cmc
clc
pop
xchg
mov
lods
push
lock
lcall
lods
and
cmp
sti
inc
sub
xor
rcll
xor
mov
cmc
fistpll
jbe
inc
clc
cmpsb
jmp
and
push
icebp
aam
imul
pushf
mov
mov
adc
sub
xor
cmp
rcrl
sbb
stc
divl
andb
or
jo
jnp
xchg
add
jne
cmp
das
ds
mov
sbb
bnd
lock
adc
scas
out
out
into
add
mov
jl
arpl
dec
lods
in
mov
movsl
iret
ja
mov
or
mov
mov
mov
ror
aad
mov
out
pop
and
xchg
aad
andl
dec
std
jnp
inc
sbb
jnp
pushf
sti
nop
adc
mov
mov
sbb
out
xor
xor
test
loop
scas
pop
dec
push
lahf
inc
lea
sub
mov
jae
mov
loope
clc
xor
mov
out
jecxz
adc
sub
xchg
dec
sub
xchg
ljmp
out
cli
xor
mov
shlb
popa
cwtl
xor
mov
cltd
fs
call
cmpsb
dec
lods
std
cli
mov
subb
pop
cmp
scas
cmpsb
repz
mov
pop
je
mov
or
outsb
mov
notl
into
mov
or
stc
dec
lods
sub
daa
test
adc
pop
sub
xor
mul
fs
das
test
xor
mov
imul
dec
stos
in
add
push
adc
jge
ficoms
cs
pop
cmp
mov
jmp
fistpll
ds
in
cmp
jno
imull
pop
popa
cmp
scas
jecxz
xor
dec
jl
inc
jp
xlat
cmc
cmpsl
in
ds
pop
jae
xchg
dec
inc
je
popf
pop
lret
es
adc
inc
cmp
loop
push
pop
enter
mov
xor
movsb
es
fwait
lea
lcall
filds
jge
push
jge
jo
cwtl
in
jge
pop
push
push
sub
out
in
subb
mov
lahf
mov
jno
xchg
xor
daa
add
adc
mov
or
sbb
jle
divb
xor
add
jns
mov
mov
mov
movsl
jo
data16
push
and
sbb
aam
add
adc
mov
push
sub
pop
mov
loop
popa
arpl
setne
leave
dec
adc
push
imul
inc
dec
popa
xchg
push
sbb
stos
fisubrl
into
cltd
fidivs
loope
shrl
xchg
mov
enter
xlat
dec
outsl
push
dec
push
mulb
lea
les
jp
push
arpl
jg
mov
sub
push
xchg
push
test
pop
jns
adc
mov
js
dec
daa
int3
cmc
outsl
inc
lret
xor
pop
out
int3
sbb
in
inc
cwtl
mov
lods
and
test
popl
sub
inc
pusha
add
mov
mov
gs
test
adc
add
std
cli
push
je
notl
adc
adc
iret
into
push
enter
mov
xor
mov
sti
xchg
gs
loopne
sbb
and
testb
mov
jae
mov
aam
add
push
and
js
call
je
imul
xor
icebp
cmp
jge
call
sub
pop
js
pop
fwait
iret
and
pop
repz
divl
in
jno
xorl
movsl
pop
inc
das
jecxz
mov
sub
mov
jmp
andb
adc
jl
cli
sub
and
in
data16
inc
arpl
sbb
mov
sub
inc
or
xchg
movsb
notl
cli
lea
push
pushf
mov
vhsubps
pop
ljmp
repz
fsubl
cmpsb
sub
ds
negb
inc
adc
mov
fst
popf
dec
jge
mov
shl
cmp
push
jle
lahf
mov
cmc
push
mov
mov
cmpsl
jno
pop
mov
cld
sub
lods
jnp
dec
fisubs
and
sbbl
stos
filds
loop
xchg
fstpl
mov
jmp
cmp
clc
pop
in
push
jne
mov
xchg
push
dec
inc
std
notb
and
loope
sub
aas
aad
xlat
repnz
jne
sbb
or
shrl
inc
and
insb
xlat
mov
ret
push
sti
lods
add
mov
dec
adc
sub
push
inc
jg
jle
sub
dec
or
scas
adc
dec
push
sbb
in
pop
jg
shr
addr16
and
in
jbe,pn
cmp
fldcw
bound
scas
jmp
rep
push
push
push
mov
mov
inc
mov
mov
sbb
sub
mov
orb
cmp
sub
mov
and
add
movsl
movsl
icebp
push
inc
sti
repz
out
gs
xchg
rol
mov
scas
in
push
fcmovu
lds
inc
xorl
cld
fistpl
mov
aad
test
jne
add
test
dec
pop
push
xor
sub
inc
push
fwait
and
mov
mov
stos
arpl
inc
pop
jne
jne
out
int
cmp
leave
add
jmp
cmp
xlat
mov
dec
mov
jb
aaa
insb
xchg
pop
add
mov
sub
xchg
das
xor
adc
icebp
sub
daa
iret
dec
or
loop
fs
sub
lea
pop
and
imul
les
jns
inc
push
fs
cmp
mov
nop
shl
pop
pop
dec
fstps
mov
nop
inc
mov
adc
test
sti
mov
cld
jle
mov
lea
popa
and
xor
jo
sti
les
mov
hlt
aas
jp
andl
and
movsl
pop
jne
jno
pop
out
sub
into
pop
lods
xchg
int3
shr
stos
outsl
xor
pop
pop
fiadds
mov
jecxz
and
push
adc
std
pop
jge
hlt
lods
push
jg
xchg
sti
call
scas
push
push
inc
into
mov
icebp
cmp
mov
dec
xchg
unpckhps
push
inc
loope
rcrl
and
aad
or
push
cmpsb
jne
push
adc
add
inc
ljmp
jb
cmc
pushf
pop
and
mov
out
das
mov
ljmp
cmc
sbb
pop
mov
test
cwtl
mov
divb
aad
mov
xchg
mov
orl
xor
psubd
loope
push
dec
outsb
mov
jae
jo,pn
sar
lret
jnp
out
bound
aam
and
jge
and
scas
js
fstpl
call
or
fisttps
pop
pop
or
dec
cwtl
push
scas
stos
xchg
in
mov
rorl
sbb
mov
int3
add
sub
fst
in
lock
sbb
pop
pop
sub
lds
fnstsw
mov
loope
sub
dec
fldenv
lret
xor
mov
and
adc
or
sbb
imul
push
push
mov
mov
sub
enter
xacquire
cs
pop
mov
in
or
dec
push
cmpsb
stos
nop
sbb
jle
inc
add
pop
lret
stos
stos
ret
jnp
push
pusha
sbb
ja
jge
dec
test
pusha
into
inc
sbbb
int3
mov
out
xor
popa
fdiv
test
sbb
add
fsubrs
aad
lret
pop
xor
lret
stos
adc
mov
ret
jae
adcl
pop
cmp
push
or
sbb
nop
in
lods
inc
insl
nop
dec
pusha
cmp
jae
xchg
lods
sbbb
xchg
sbb
jl
mov
jne
inc
sub
jns
dec
lea
sbb
jge
xchg
lret
adc
stc
pop
xchg
out
mov
jmp
push
lcall
cmovl
int3
and
adc
cmpsl
sti
xor
mov
jg
mov
cli
pop
ficoms
push
push
cmp
sahf
popf
sub
mov
in
les
and
add
stos
addb
ficoms
rorb
imul
push
xor
test
sbb
lret
pop
push
negl
enter
push
bound
dec
and
jae
imul
mov
or
xchg
and
pop
aad
pop
xor
xorl
or
push
adc
cmpsl
push
inc
push
cmpsb
jb
loopne
sub
call
add
sbb
jae
jns
cmp
inc
or
lds
in
clc
js
jp
jo
and
lret
cwtl
sub
out
dec
cli
add
scas
mov
xor
cli
mov
mov
mov
addb
faddp
lea
cmpsb
jle
xchg
jecxz
mov
inc
andl
rolb
adc
mov
xchg
test
fcomps
pop
mov
add
jle
add
mov
das
call
pop
jo
cs
mov
xchg
aaa
das
xor
aas
xchg
aas
fldcw
add
bound
cmpsl
fscale
push
push
dec
lods
push
jbe
and
ja
push
mov
xchg
pop
xor
sbb
push
push
adc
sub
loopne
jecxz
imul
in
pop
jnp
mov
in
fwait
shrb
mov
xor
addr16
pop
lods
aaa
lret
bts
jns
outsb
bound
xchg
pop
pop
out
xchg
or
cld
inc
iret
adc
xor
movsl
push
fisubl
scas
sarb
lret
sbb
or
setae
seto
xor
adc
je
insb
push
test
test
decb
push
add
and
lds
xor
rorb
hlt
in
std
xor
bound
fcompl
inc
jmp
xchg
aad
orl
test
mov
fisttpl
data16
adc
icebp
testl
in
or
xor
mov
sbb
push
mull
ja
aaa
mov
int
mov
jo
jno
adc
jg
push
cmp
or
sbb
push
mov
mov
jl
mov
push
dec
dec
pop
adcb
push
pop
out
loop
xchg
dec
fisttps
xor
out
adc
add
sub
movsb
rcrl
adc
mov
jne
cwtl
or
dec
jecxz
cmp
mov
xor
repz
add
dec
dec
cwtl
add
mov
repnz
and
jp
aad
inc
hlt
cmpl
push
rcrb
xchg
jb
xchg
pop
ret
mov
xor
xlat
xchg
loope
ljmp
mov
es
xchg
scas
pop
add
sbb
or
inc
cmp
or
lods
mov
xchg
les
pop
rorb
shlb
mov
bound
or
adc
lret
cmp
repnz
out
clc
xor
fs
outsl
dec
and
into
sbb
mov
and
loope
cs
mov
push
jmp
dec
push
push
fistpll
mov
mov
inc
pop
jae
inc
mov
jbe
shrb
ficoml
aam
sub
add
push
xor
sbb
iret
out
mov
imul
scas
nop
xchg
cmp
test
ret
sbb
out
popa
or
push
push
imul
rcrl
push
les
xlat
pop
mov
stos
mov
cmp
cs
mov
cmp
sahf
mov
sbb
stos
stc
mov
jmp
mov
mov
push
sbb
xor
mov
cltd
movsb
popa
mov
hlt
into
aad
insl
pop
or
add
loope
or
cmc
sbb
sbb
iret
int3
mov
sti
mov
inc
mov
sbb
shl
int3
cmp
pop
pop
jae
fistpll
mov
sub
in
lods
cmp
insb
jmp
data16
repz
mov
sub
and
and
bound
cltd
xchg
out
pop
mov
push
inc
sub
and
add
outsb
inc
and
adc
add
daa
or
lret
test
incb
jmp
loope
in
cmpsl
shll
sub
xchg
mov
test
cmp
decl
aad
mov
or
add
icebp
scas
mov
imul
mov
xchg
insl
gs
out
push
jno
orl
jbe
movsb
aad
out
orl
lret
pop
lret
out
xchg
in
adc
dec
insl
add
pop
mov
fs
adc
mov
and
gs
leave
fwait
mov
pusha
lods
mov
es
arpl
inc
cmpl
mov
pop
adc
xor
and
popf
fistl
mov
jbe
adc
push
inc
add
movl
and
sub
adc
xchg
or
xchg
adc
ficomps
aas
mov
jns
mov
lea
inc
sub
pop
cmp
jbe
rol
or
add
mov
push
mov
and
push
and
and
lock
lcall
or
test
add
pop
inc
jp
push
cwtl
xorb
inc
stos
sub
mov
xchg
or
negb
gs
and
xor
xchg
xor
or
and
mov
lock
pop
outsb
xchg
inc
mov
call
shlb
push
pop
inc
das
push
cmp
pop
sub
enter
or
pop
inc
and
jo
adc
mov
movsl
xor
mov
and
dec
xchg
and
and
xlat
into
push
lcall
mov
mov
fs
popa
mov
adc
sbb
mov
cmp
and
mov
add
nop
inc
add
or
pop
inc
in
inc
mov
ret
shll
pop
xchg
movups
adc
pop
lahf
es
or
pop
in
xlat
dec
test
mov
dec
in
cs
mov
mov
call
outsl
sbb
sub
sub
adc
adc
jb
and
cmp
cltd
push
inc
jecxz
push
sbb
jno
mov
xchg
inc
nop
pop
sbb
inc
stc
dec
mov
xor
cmpsb
mov
pushf
pusha
sub
int3
and
in
sub
dec
mov
inc
cmpsl
and
enter
test
adc
adc
call
jnp
add
adc
inc
inc
jno
or
sub
and
inc
adc
mov
mov
push
ja
ret
inc
popf
shll
scas
mov
and
xchg
lods
pop
xchg
sub
push
lcall
adc
jmp
mov
sbb
push
inc
movsl
rcll
adc
dec
rcl
push
and
bsf
lret
inc
mov
xor
pop
push
pop
nop
lock
push
inc
fst
xor
add
test
jl
inc
push
nop
popa
je
mov
hlt
sbb
inc
cmpsl
nop
in
je
lret
sbb
pop
inc
push
xor
cs
mov
and
mov
mov
enter
fisubl
mov
test
adc
insl
sbb
testb
mov
lret
inc
xchg
adc
je
xor
pop
sbb
pop
inc
jp
pop
mov
ret
sbb
dec
inc
jo
mov
add
loopne
pop
cmc
or
mov
push
xlat
out
cmp
adc
rcll
xchg
call
fists
shlb
sbb
xchg
cld
test
cmp
inc
fwait
push
and
ja
and
jl
fildll
mov
mov
rorl
test
repz
adc
dec
sti
daa
inc
pop
test
mov
cmp
mov
ror
or
movsl
push
mov
xchg
mov
inc
loope
pop
or
les
imul
adc
sub
jae
dec
inc
mov
or
in
sbb
js
loope
jne
and
mov
pop
xchg
rcrl
stc
lcall
in
inc
scas
cltd
aad
scas
mov
std
ficompl
negl
sub
push
nop
adc
inc
mov
sbb
mov
bound
adc
stc
lock
aaa
ficoms
ds
pushf
or
jnp
jg
xor
push
pop
xchg
dec
arpl
cmp
xchg
inc
jecxz
ret
add
pop
push
shl
jp
sub
fistps
adc
xor
arpl
cmp
mov
sub
ja
sti
into
xor
inc
ret
and
sub
push
icebp
mov
scas
push
mov
pop
pop
jno
dec
subb
adc
mov
int3
sub
mov
mov
lock
pop
hlt
sbb
inc
xchg
nop
fsts
nop
jns,pt
dec
cwtl
data16
pop
pop
ljmp
inc
insb
in
rcll
scas
lock
inc
repnz
ja
or
cmpsb
or
sub
xchg
ljmp
dec
shr
and
cmpsb
aam
pop
cltd
xchg
pop
mov
xchg
mov
adc
cli
movsb
push
adc
mov
ret
or
push
cmc
arpl
mov
loopne
adc
cmp
push
or
outsb
mov
repnz
jg
movsl
popa
adc
scas
ds
clc
icebp
cmpsb
cmpsl
loop
push
mov
inc
cld
mov
jns
or
das
or
pop
test
xchg
mov
mov
sbb
push
inc
and
jb
or
or
inc
push
mov
lods
call
xor
gs
test
mov
adc
jg
inc
pop
xor
xor
inc
fsts
or
andl
sarl
adc
js
mov
pusha
xchg
dec
rorl
ljmp
js
pop
sbbb
jo
mov
int3
leave
pop
pop
inc
movb
or
andl
or
and
mov
das
push
mov
add
inc
jns
push
cmp
dec
pop
push
rcr
je
mov
pushf
and
pop
andl
subl
mov
pop
inc
cltd
inc
int3
mov
fistpl
adc
mov
adc
rcl
push
andb
call
sub
or
inc
adc
push
sti
mov
sub
pushf
andl
mov
mov
and
and
mov
cmp
lods
imul
dec
sbb
lock
or
and
sbb
adc
and
xchg
scas
repnz
dec
mov
jle
mov
mov
dec
pop
inc
cmc
aas
negl
xlat
je
or
and
call
fistl
push
aas
stos
fwait
push
fimull
cwtl
inc
fst
jl
sbb
rolb
das
pop
pop
or
inc
and
fisubs
test
xor
and
inc
or
xlat
jl
and
lahf
push
xor
push
push
bound
pusha
fdivrp
fsubr
lahf
inc
aaa
fildll
lds
cmpsl
push
gs
jge
aam
adc
test
jnp
xchg
mov
xchg
mov
in
in
sbb
mov
cmp
cmp
int3
out
jo
jne
push
add
xchg
cwtl
mov
adc
pop
jne
scas
cwtl
std
test
jg
orb
add
imul
sbb
jno
mov
outsl
cmpsb
ds
and
out
in
sbb
in
loop
sbb
jnp
jg
mov
lcall
cld
mov
cmp
jl
cmp
ljmp
sub
hlt
in
mov
inc
jb
or
sub
addr16
lods
and
or
jae
dec
jb
popa
jp
and
sub
cs
scas
test
lods
mov
xor
out
les
mov
xchg
dec
and
dec
ljmp
pop
mov
xchg
ffree
xchg
out
imul
xor
add
aad
inc
movb
fisttpll
and
stos
inc
int3
push
pop
movsb
push
lods
or
js
xchg
jmp
sub
dec
cmp
dec
pop
incb
mov
loopne
xchg
ja
xchg
or
addr16
imul
stc
jg
std
sbb
bound
jbe
mov
lret
mov
pop
clc
cmp
or
clc
call
ret
lcall
ss
xor
push
ja
mov
dec
push
lret
shrb
lahf
jno
add
inc
or
sahf
pop
or
add
arpl
xchg
lods
cs
jne
faddp
mov
dec
sub
shlb
adc
xchg
push
repz
mov
mov
jge
cwtl
pop
aam
addb
fisttpl
ret
adc
pop
mov
add
pushf
xlat
sub
sbb
mov
sbb
mov
push
mov
pop
cmp
faddp
pop
sbb
pop
stc
popa
lret
sbb
jns
cmp
add
retw
pop
leave
in
jge
xchg
xchg
xor
or
enter
stos
lock
mov
fsubs
cmp
and
jno
sub
cmp
mov
push
pop
mov
adc
pop
push
out
loop
shlb
fdivl
nop
or
xchg
push
addr16
movsl
mov
jne
int3
adc
cli
orl
ljmp
ja
or
decl
enter
push
mov
xlat
mov
insl
ljmp
movsl
sbb
aam
add
push
icebp
or
sub
popa
sarl
dec
add
popa
stos
jo
loop
push
popa
and
xchg
sub
xchg
outsl
cwtl
mov
in
inc
xchg
pop
xchg
pop
add
mov
lcall
test
pop
push
jnp
and
loop
ja
mov
int
in
sub
add
push
dec
xor
mov
xchg
mov
xchg
sbb
sub
mov
pop
jge
xchg
pop
fldcw
out
push
xor
shll
jne
mov
sbb
mov
pop
stc
ds
xchg
add
add
add
add
xchg
push
push
jmp
cld
push
out
pop
imul
pop
mul
jae
push
cmp
in
add
add
test
xchg
xchg
mov
xor
int3
aam
xchg
fidivrl
cmpsl
shr
dec
sbb
sub
xchg
mov
pop
mov
xor
add
out
out
sub
add
pop
xor
cltd
scas
aaa
xor
and
loop
or
sbb
or
adc
mov
xchg
ret
adc
out
mov
loope
push
jg
sbb
ja
js
mov
dec
lods
testl
cmp
mov
out
xor
mov
push
clc
stos
push
mov
pushf
int
mov
mov
aaa
lcall
xor
jecxz
pop
xchg
cmp
xor
mov
and
xor
fwait
xlat
rcr
insl
mov
cmp
call
fwait
aam
ror
pop
loop
inc
inc
imulb
sub
push
call
push
int
rcll
adc
mov
loop
data16
nop
pop
leave
push
push
ds
adc
mov
push
dec
mov
mov
mov
or
mov
popf
or
sahf
data16
push
or
push
adc
subb
call
pop
insb
in
adc
jecxz
pop
sbb
outsb
sub
push
cmp
cmp
gs
icebp
push
and
lcall
sbb
mov
ret
pop
jp
mov
sarl
insb
scas
loop
sbb
cmpb
call
js
cmp
sahf
pop
inc
mov
pop
adc
cmc
out
sti
leave
cmp
xchg
stc
pop
push
rol
dec
in
mov
jbe
aam
dec
dec
sub
jmp
xchg
scas
scas
dec
sti
add
cld
pop
sti
pop
or
jae
push
loopne
ds
pop
daa
adc
cmp
inc
and
jp
iret
test
add
test
and
loopne
aaa
jb
or
xchg
mov
ja
nop
lock
mul
mov
ret
inc
sub
mov
clc
sub
outsl
mov
pop
data16
jl
inc
dec
inc
mov
dec
movsb
mov
call
or
pop
xor
dec
notb
mov
ljmp
pop
cmp
xor
outsb
mov
cmp
pop
mov
jmp
rorl
in
sub
repnz
lds
loope
ljmp
dec
xor
sub
inc
mov
mov
imul
movsb
pop
movl
ljmp
xor
mov
or
mov
repnz
jl
insl
dec
lods
cmp
sub
in
sub
sbb
adc
cli
cmp
jb
je
xchg
int
daa
cmc
dec
out
adc
mov
das
stos
jp
sub
mov
sub
push
mov
popa
jmp
push
jne
mov
push
sbb
add
cli
rorb
jae
inc
ret
test
sar
and
repnz
push
or
test
adc
test
dec
cmp
les
push
imul
minps
dec
stos
xchg
inc
in
xor
pusha
mov
adc
jae
jmp
das
popf
int
lret
andl
sahf
push
xor
mov
mov
cld
mov
inc
push
lock
movsb
xlat
movl
inc
ja
mov
dec
addr16
mov
or
push
xchg
pop
or
imul
das
cmpsb
stc
mov
shr
dec
and
fisttpll
ret
dec
les
pop
jecxz
dec
ret
and
xchg
fimuls
mov
clc
call
push
scas
popa
lods
cwtl
loop
arpl
sub
lds
pop
dec
sbb
filds
cmp
jmp
fildl
add
pop
hlt
lock
dec
ljmp
xor
lds
mov
sub
xlat
insb
jno
dec
push
dec
hlt
test
mov
cli
dec
dec
pop
fsubr
call
loope
scas
lods
pop
mov
xlat
xchg
and
sbb
hlt
stos
dec
ds
push
sahf
in
mov
in
repz
pop
lods
push
mov
mov
pushf
jp
push
ljmp
pop
adc
cmp
enter
lret
lock
icebp
lret
adc
das
jo
adc
add
hlt
repnz
pop
cmp
stos
cltd
pop
stos
jecxz
test
pop
inc
push
jge,pn
cli
and
jbe
cmc
stc
lahf
pusha
sbb
add
xor
and
push
int3
scas
leave
lods
push
nop
push
shlb
testl
push
sbb
lcall
inc
loopne
outsb
pop
testl
call
andl
imul
sbb
cs
and
push
push
jbe
jg
insl
or
add
dec
jmp
dec
xor
addb
scas
mov
xor
out
fcmove
lret
cli
rolb
bound
or
or
lods
push
es
ds
push
idivl
aas
mov
aad
inc
test
push
adc
clc
push
or
inc
jae
add
add
jne
int
mov
cs
mov
xor
loop
fs
cmp
movw
mov
inc
scas
mov
push
cld
dec
lods
and
test
lock
sub
xchg
and
clc
add
sub
mov
push
pop
pop
jne
enter
ss
shll
fcmovu
push
pop
adc
hlt
mov
mov
push
sbb
pop
les
and
mov
push
xlat
imul
lods
cmp
scas
out
xchg
cmp
or
jns
call
enter
sub
dec
gs
push
outsl
bound
sbb
cmpsb
push
pop
xchg
adc
xchg
pop
lods
inc
dec
sub
stc
nop
lods
adc
jg
dec
jo
movsb
add
mov
into
jg
lods
dec
inc
pop
or
sbb
insb
mov
add
sub
mov
jg
dec
cmp
push
mov
mov
mov
in
jno
sub
push
add
push
and
add
push
xor
clc
lahf
rcl
pop
std
mov
pop
adc
or
dec
cmp
stc
js
or
mov
jg
movsb
lcall
fidivrs
inc
jmp
loop
testb
xsaves
es
fcom
das
push
sbb
punpckhbw
or
or
add
adc
lock
inc
scas
loopne
mov
adc
sub
mov
mov
stos
lcall
sub
mov
xchg
push
inc
mov
xchg
push
xchg
ficomps
sub
les
dec
jl
push
pop
aad
ljmp
test
xlat
pop
push
aaa
jne
mov
ds
std
inc
mov
nop
xchg
push
jae
sbb
into
push
in
imull
cmp
stos
mov
sti
jne
jg
lea
push
scas
ret
fmull
cmpsb
mov
mov
outsb
push
icebp
gs
inc
sub
jg
jno
je
mov
out
rclb
popf
push
inc
xor
int
cmp
cmp
push
jnp
push
and
lods
and
sbb
sub
mov
cltd
ror
add
push
dec
xchg
adc
repnz
mov
outsb
fs
inc
int3
shr
dec
cmp
push
adc
dec
push
addr16
cmpsl
mov
daa
pop
imul
add
nop
pop
sub
mov
addb
popa
mov
enter
lods
add
or
test
and
jne
xor
adc
and
lcall
sub
add
dec
jmp
subb
push
dec
push
fdivrs
cli
cmpsl
lods
aad
ja
mov
clc
sub
mov
jmp
loop
daa
xchg
push
push
xlat
jp
mov
je
push
movb
mov
leave
pop
push
lret
ret
das
or
dec
repnz
jp
out
arpl
ja
mov
dec
lea
jo
fld
pop
repnz
cli
rcl
cmp
sbb
movsl
movsl
stos
sahf
out
sub
sbb
mov
adc
movsb
adc
adc
pusha
push
lahf
mov
pop
push
jmp
ss
mov
mov
imul
xor
xchg
mov
fldl
cmpsl
pop
repz
pushf
out
subps
mov
in
cmp
jnp
push
enter
test
sub
pop
xchg
lock
aad
jb
xor
pushf
lds
sub
stc
add
sbb
in
fdivrs
mov
test
push
les
xchg
pop
inc
xchg
and
adc
add
cld
and
push
pop
sbb
sti
mov
fcoms
pop
cmc
popf
mov
loop
test
fsubrs
pop
mov
es
icebp
add
pusha
or
jnp
adc
xor
cmpsb
popa
fidivrs
test
lods
test
xchg
pop
imul
adc
out
bound
clc
stos
lds
dec
cmp
stos
jno
adc
stos
fwait
pop
and
adc
ret
sub
cmpsb
lcall
inc
mov
push
mov
adc
lock
push
jecxz
pop
lret
ret
fwait
mov
nop
xchg
push
mov
xchg
adc
add
jae
aas
xor
incl
out
cld
mov
int3
inc
mov
inc
ljmp
pop
ljmp
cmpsb
frstor
sbb
or
adc
jle
cmpb
add
ja
shlb
and
insb
ret
lret
cmova
scas
xchg
daa
xchg
mov
mov
push
push
pushl
adc
stos
jb
mov
pop
adc
femms
cmp
mov
mov
lods
or
movsl
adc
sub
enter
and
fisttps
fdivs
mov
mov
push
scas
cmp
dec
lock
cmp
in
and
int3
mov
sbb
sti
repz
sti
mov
sub
sahf
mov
mov
fsubrl
outsl
ljmp
xor
cli
test
pop
sbb
lcall
pop
push
loop
shll
sub
sbb
lcall
enter
lods
movsb
stos
add
aam
test
push
cmp
inc
mov
ljmp
cmc
lods
mov
push
xchg
and
inc
sub
xor
mov
mov
loop
leave
sbb
mov
inc
sbb
xlat
adc
inc
push
jne
sbb
mov
mov
mov
mov
mov
add
xor
mov
call
jae
idivl
aaa
idivb
sarl
out
xchg
stos
in
xchg
dec
or
adc
pop
stc
shll
ss
icebp
ret
adc
enter
inc
in
xchg
imul
fcmovb
mov
lcall
gs
js
jg
or
mov
cs
mov
cmp
pop
push
mov
dec
jg
mov
nop
inc
and
push
mov
shrb
and
fidivl
pop
mov
sbb
fwait
push
add
or
pop
xor
dec
bound
enter
movsb
lock
mov
mov
idivl
lret
mov
xor
cmp
aad
mov
and
or
inc
popa
aas
jecxz
das
test
pop
pop
mov
daa
jns
aam
mov
cli
ja
loopne
lcall
and
mov
mov
xchg
adc
cmpsw
push
inc
fisubrs
sti
pop
sub
loopne
mov
sar
jle
mov
fdivrs
std
iret
mov
cmp
gs
mov
popf
shr
out
sub
stc
sub
mov
dec
inc
sti
mov
mov
fs
mov
cmpsb
decl
xchg
jnp
sarb
lcall
mov
jo
movsl
xor
shll
je
and
ja
into
cmp
in
and
mov
fisubrl
dec
cltd
mov
divb
push
xor
in
push
scas
lahf
fwait
loop
xchg
or
cmc
nop
arpl
orb
cs
pop
mov
or
jnp
add
adc
mov
lret
jmp
pop
cli
sub
mov
aas
sbb
sub
ss
test
sub
ret
dec
sub
or
jmp
call
and
cmpsl
add
cmp
mov
or
jge
mul
and
sbb
inc
outsl
pop
or
mov
enter
push
adcb
imul
mov
das
divb
movsl
xchg
je
fwait
mov
lcall
xlat
xchg
jmp
sti
int3
les
dec
pop
jo
jmp
rorl
incb
mov
sub
adc
xchg
xor
xchg
jo
sbb
lret
lods
sub
dec
imul
iret
push
daa
roll
pop
fsubs
rorl
arpl
test
stc
xor
and
test
pop
push
cwtl
cmp
sub
mov
sub
inc
dec
jmp
das
adc
idivl
push
lock
push
jg
shll
xchg
aam
pop
cmp
inc
mov
and
insb
and
add
sar
or
arpl
xchg
xor
cli
sbb
jle
mov
ss
out
mov
inc
inc
add
cmc
xchg
xchg
jno
dec
cmp
and
std
xor
negb
scas
add
adc
inc
mov
mov
mov
mov
sti
or
call
loope
repz
cmp
fidivrl
or
inc
mov
enter
andl
mov
test
fs
lods
outsb
mov
gs
clc
enter
bound
scas
jl
outsl
push
push
jne
mov
cmp
js
jmp
ret
dec
in
pusha
jmp
aaa
decb
mov
punpcklbw
lcall
icebp
add
stos
bound
or
inc
sti
hlt
xor
iret
or
or
sbb
push
add
jl
pop
xor
jle
aas
pop
xor
mov
jge
xor
push
nop
aad
clc
gs
jns
popl
cmpsl
sbb
and
fdivp
cmpsl
ret
or
arpl
adc
je
xchg
xor
push
inc
xchg
sbb
cmpsb
inc
adc
xchg
dec
push
mov
lret
ss
push
movsb
jnp
cmpsl
add
jmp
das
stos
adc
rcrl
cmp
call
loopne,pt
mov
jne
hlt
pop
pop
push
cmovno
stos
mov
ss
leave
gs
jg
fldenv
imul
push
stos
cmp
mov
pop
nop
iret
adc
mov
popf
push
les
pop
xchg
mov
adc
lret
pop
outsb
push
or
movsl
pop
mov
mov
jle
cmp
mov
insl
je
mov
push
xchg
sub
in
loope
fisttpll
dec
adc
leave
std
test
pushl
or
inc
ror
dec
nop
xor
push
mov
mov
mov
sbb
mov
jecxz
mov
xor
repnz
ret
imul
cmp
adc
dec
nop
mov
add
push
mov
addr16
mov
je
popa
pmuludq
shl
and
arpl
leave
lods
insb
push
test
cli
out
sbb
mov
repnz
adc
mov
test
std
pop
rcrl
cmc
dec
popa
dec
lret
adc
mov
inc
lock
pop
jo
xchg
shrl
ljmp
sub
cmp
ret
pop
loop
xchg
out
scas
arpl
stos
scas
icebp
jg
dec
add
pop
fstl
stc
sti
cwtl
out
fsubl
adc
and
lods
jae
sbb
mov
pop
mov
or
sbb
jne
cli
push
out
loope
je
adc
rol
dec
sahf
inc
mov
out
es
ljmp
mov
adcb
lds
jmp
sub
pop
ret
es
lret
sbb
pusha
loopne
sub
es
cmp
sbb
push
or
pop
pop
ja
push
adc
mov
adc
pop
push
cmc
or
lret
inc
out
pop
cmc
pop
rorb
pop
es
sub
jo
pop
cmpsb
fwait
shlb
jno
rcll
mov
rorl
pop
jnp
popw
in
lcall
dec
repnz
or
fnstsw
mov
cwtl
adc
jns
fdivr
rcll
cli
xor
xchg
mov
xchg
stos
and
xchg
push
mov
adc
jecxz
pop
xchg
or
inc
ret
mov
std
in
push
jbe
imul
xor
xchg
aad
out
adc
lcall
es
jae
sub
inc
pop
cmc
mov
cld
lcall
sub
push
scas
jecxz
xor
out
cs
nop
fmul
nop
aad
push
cltd
mov
and
cs
out
cwtl
lret
loopne
jo
inc
xor
sub
ret
mov
fcoms
lds
mov
inc
call
xor
xchg
mov
xor
sbb
icebp
and
icebp
and
mov
mov
adc
pop
stos
mov
mov
lcall
xor
fwait
shrl
mov
loop
xor
stc
je
div
stos
mov
ljmp
pop
sbb
out
pop
cmc
daa
pop
fstps
xlat
pop
in
cmpsb
test
jp
add
jl
lods
aam
fxam
mov
stos
das
pop
movsb
lret
inc
push
lea
add
mov
mov
fisttpl
arpl
push
test
pop
nop
insl
testl
jmp
stc
int3
bound
cmp
lahf
sbb
jg
faddl
andb
xchg
cli
jne
add
dec
xor
or
adc
mov
sbb
jge
test
pop
lret
lds
and
sub
push
rorb
and
xlat
inc
daa
or
mov
shrl
xchg
popa
arpl
mov
je
pusha
pop
mov
xchg
xchg
stc
gs
fisubs
and
shll
xchg
jae
dec
push
xchg
arpl
mov
push
inc
imul
flds
push
pop
pop
pushf
stc
sbb
lret
xchg
cmpsl
std
pop
in
rclb
fcoms
sbb
mov
outsb
or
cmpl
pop
lea
xchg
adc
sub
pop
jl
rcrb
pop
mov
push
scas
mov
xchg
cmpsb
test
shrl
mov
int3
cld
lret
ss
xchg
lahf
out
xor
in
mov
mov
cmpl
xor
sarb
jl
mov
popf
push
loop
inc
mov
push
sbb
mov
jns
mov
les
out
std
mov
scas
mov
and
cmp
jmp
adcl
pop
mov
inc
mov
fnstenv
fldcw
dec
push
push
sub
mul
mov
mov
cli
incl
enter
jns
cltd
pop
outsl
iret
push
into
sbb
cmp
jno
jle
cmpsb
mov
cmp
mov
add
jg
add
add
stc
into
jge
test
movsl
mov
cmp
push
xor
ss
sub
xchg
outsl
or
outsb
bound
push
lods
dec
mov
jbe
cld
out
hlt
orb
or
jno
hlt
push
push
rcrb
fsubrl
xchg
sub
push
pusha
pop
sub
or
add
sbb
and
addr16
cmp
nop
add
addr16
xor
shrl
cltd
cmp
mov
sbb
lret
xor
inc
push
pop
xchg
xchg
jbe
mov
push
dec
add
adc
xor
outsb
mov
sub
push
sbb
and
int
scas
push
xchg
dec
ja
cmc
or
pop
mov
adc
mov
or
idivl
out
push
pop
xor
pushf
aam
lahf
enter
notl
mov
fsubrs
xchg
leave
cmp
xor
xchg
inc
cmp
fcmovnb
pop
aaa
inc
mov
mov
cld
rcr
daa
ficoms
mov
imul
and
test
loop
lods
add
adc
lods
xchg
hlt
rclb
and
std
sub
add
lds
mov
pop
stos
test
and
push
pop
call
dec
and
mov
nop
pop
cmp
cmp
insb
inc
out
xor
and
xor
mov
js
mov
shll
jmp
fs
mov
pop
xchg
sbb
insl
jecxz
ljmp
cs
cli
cld
pop
mov
push
dec
mov
cmp
subb
adcb
cltd
mov
jg
fbld
cmc
iret
or
sub
pushf
cmp
dec
std
fldcw
int3
dec
inc
sbb
inc
bound
mov
push
mov
xchg
pcmpgtb
sahf
mov
jno
jecxz
xor
xor
adc
mov
xchg
jmp
and
rcrl
adc
loop
clc
cmc
stos
push
jns
sbb
cmp
lods
fisubs
xchg
adc
subb
lahf
sub
mov
mov
sub
sub
fwait
mov
pop
gs
mov
mov
mov
lcall
adc
xor
scas
lods
jmp
jmp
outsl
xchg
mov
sbb
mov
and
int
and
pop
inc
out
push
add
xor
jp
mov
roll
add
cmp
mov
xor
test
pop
outsl
dec
scas
xchg
cld
mov
adc
dec
sub
fsub
dec
jg
sahf
xor
dec
lret
fmuls
jmp
std
dec
pop
lods
and
bound
jmp
adc
push
mov
out
cmc
and
sub
testb
std
dec
arpl
testb
stc
xlat
inc
adcl
int3
jmp
icebp
cmpsl
fistpll
mov
rorl
inc
aad
sar
cltd
lahf
sbb
ljmp
pop
lock
cmpl
mov
mov
mov
adc
push
fwait
cmc
cli
cld
and
jb
lahf
dec
mov
frstor
jb
xor
ljmp
fisttpl
and
mull
xor
sub
ret
fs
adc
fs
scas
push
push
mov
sub
push
or
iret
out
jb
outsb
stos
dec
outsl
mov
mov
add
outsl
faddl
jo
les
sbb
pop
mov
fidivs
jne
mov
int
sub
xor
jp
mov
mov
mov
daa
pop
jle
cld
sbbb
lods
push
scas
xchg
inc
or
int3
inc
dec
jl
jne
je
mov
jb
imul
fstl
mov
cmp
mov
sahf
stos
jmp
aad
adc
fidivrl
xchg
inc
stos
incb
adc
or
lods
push
adc
xchg
or
mov
xchg
pop
out
stos
lods
dec
jmp
jp
movsl
xchg
mov
out
ljmp
sub
mov
popf
sahf
add
adcb
mov
push
xchg
adc
idivb
mov
lds
push
sub
fstps
xor
jle
dec
xchg
repnz
add
lods
push
nop
jne
mov
sbb
cwtl
adc
jmp
pop
cmpsl
pop
lret
gs
cli
inc
ds
ss
or
movsb
fisubrl
jl
sbb
mov
and
in
mov
cmp
or
adc
fistps
out
push
adc
sub
cmc
jb
orl
push
xlat
sub
ret
sbb
enter
stos
mov
xor
dec
or
adc
mov
fwait
adc
movsb
pop
mov
imul
sahf
mov
xchg
stos
mov
mov
and
inc
add
add
mov
xor
popa
psubusw
push
cld
sti
add
lock
mov
mov
fisubl
out
movl
mov
and
pop
je
repnz
mov
inc
cmp
mov
dec
lods
jne
testb
mov
mov
mov
sbb
das
movsb
iret
rcrb
cmpsb
xchg
dec
das
enter
pop
sub
adc
inc
lds
xchg
xchg
push
sbb
push
inc
add
sub
fs
inc
jmp
int3
ret
xor
js
andb
mov
es
lret
mov
mov
or
pop
pop
pop
mov
cmpsl
lock
dec
sub
adcl
inc
sbb
jbe
das
aad
adc
jmp
and
jne
xor
cmpsb
and
cmpb
cli
subb
jle
pushf
imull
jl
out
orl
mov
xlat
and
pop
std
jg
adc
jg
inc
cmc
jns
int
clc
sub
adc
push
shl
mov
scas
test
aad
arpl
pop
es
iret
fadds
xor
aam
loopne
in
and
push
imul
ja
adc
and
rcll
es
les
cmpsl
cmc
and
sti
mov
addr16
xchg
and
and
and
jb
xchg
and
pop
sar
adcb
pop
mov
insl
push
mov
insb
mov
cwtl
ret
xor
fmuls
pusha
push
loope
mov
dec
sub
and
push
dec
cmpb
cltd
fisubrs
push
arpl
sub
test
call
dec
xor
mov
bound
cmp
iret
push
push
orl
push
stc
mov
cs
xor
sahf
xor
bound
mov
sub
xor
aad
cwtl
push
xlat
loope
pop
call
push
jecxz
sti
add
std
or
adc
call
movsb
lea
mov
scas
movsl
lea
hlt
inc
mov
inc
cs
aad
dec
lods
pop
outsl
popa
movsl
jae
cmpsb
movsb
loope
or
adc
fcomps
aam
mov
repnz
and
and
pop
sub
jb
sub
scas
mov
sbb
pop
adc
sub
xor
shrb
jae
out
sub
or
shlb
popa
push
fsubp
and
push
or
push
dec
cmpsb
nop
mov
pop
adc
scas
mov
or
xor
add
shr
jne
mov
xchg
or
add
adc
add
jle
inc
jne
add
in
jo
fisttps
cmp
sub
jb
ret
adc
jbe
repnz
ja,pn
fs
ja
inc
sub
fdivrl
jmp
jnp
lret
mov
or
push
enter
jb
cs
movsl
jge
aad
aad
cmp
ret
xor
push
jl
orb
cmp
add
icebp
push
xor
movsb
mov
popaw
addb
mov
cmpsl
xchg
or
cmp
pop
insb
and
ds
jg
fdiv
and
adc
cltd
push
pop
jo
push
into
scas
xorl
nop
fadd
aaa
mov
inc
stos
pop
stos
mov
rcrb
mov
mov
lahf
xor
out
es
movsb
mov
outsb
pop
push
cmpb
sbb
stos
dec
mov
rolb
push
add
stos
cmc
sbb
sbb
dec
je
xor
leave
sbb
cs
fistps
inc
dec
dec
xor
cmp
xchg
and
mov
arpl
mov
iret
add
dec
enter
lret
rorb
sub
push
fisubrs
jg
or
mov
or
xlat
ljmp
ja
adc
dec
pushf
xchg
ljmp
movsw
lcall
push
adc
sub
jmp
in
out
cwtl
add
shlb
push
adc
jg
pop
sbb
mov
addr16
xor
mov
push
inc
inc
movsb
notb
mov
add
test
adc
mov
cmp
mov
mov
stos
mov
mov
or
dec
iretw
aad
shl
movswl
push
inc
inc
cmp
in
mov
and
xchg
pop
std
popf
xor
jae
xchg
out
pop
shlb
stc
pop
ds
pop
push
in
dec
repnz
jo
inc
push
add
jmp
test
push
int
ljmp
mov
jmp
cmp
cltd
jp
fcmovnbe
and
mov
outsl
adc
mov
movsb
mov
xor
cmp
shrb
cli
stos
insb
inc
loope
and
fcompl
mov
and
ja
adc
pop
and
xor
int3
add
add
pop
movsl
sbb
mov
fwait
pop
rcl
pop
popf
cmp
push
les
and
jecxz
repnz
mov
mov
mov
arpl
cmpsl
es
push
sub
xchg
push
jnp
rcll
dec
popf
ret
xor
repnz
ljmp
jmp
pop
sub
xlat
imul
and
adcb
sbb
pop
add
adc
jnp
xlat
fmull
es
test
les
cmp
fldl
xchg
inc
push
xchg
mov
in
push
lret
mov
jmp
xlat
pop
inc
enter
push
xchg
pop
mov
scas
sbb
xor
adc
xchg
bound
mov
loope
nop
sbb
mov
sub
stos
int
mov
adc
adc
sbb
mov
inc
es
cmp
test
adc
stos
sahf
inc
ss
bound
fbld
sahf
jns
or
xor
mov
mov
adc
ljmp
aam
and
mov
jg
and
icebp
inc
adc
scas
les
ljmp
or
jmp
mov
stc
add
iret
insl
mov
pop
or
repnz
lock
push
fwait
arpl
pushf
ja
mov
push
adc
mov
test
cmc
or
and
cltd
movsb
arpl
subl
sbb
push
inc
jle
movsl
cltd
std
sbb
or
xor
adc
jo
cs
add
rolb
lods
imul
call
inc
push
lods
lcall
jge
sbb
loopne
mov
inc
mov
inc
and
nop
in
add
mov
fstpl
mov
and
enter
testb
ja
clc
test
jno
ss
movsl
or
repnz
mov
movl
cmp
enter
add
fucomip
leave
pop
sub
cmc
push
mov
mov
std
cltd
dec
pop
mov
push
jnp
jl
stos
mov
bound
iret
xchg
in
mov
xor
inc
shrl
leave
aad
cmpl
cwtl
out
clc
imul
cld
sbb
mov
icebp
xor
icebp
mov
subl
dec
sub
mov
adc
rcr
stc
push
gs
and
jl
cltd
push
pop
xchg
imull
sub
stos
in
adc
push
out
stos
adc
jl
xchg
bound
dec
cltd
or
shl
fisttpl
cmp
xor
inc
enter
jne
mov
jno
scas
ret
inc
sbb
rorb
test
push
or
jb
or
jnp
loopne
dec
negl
sub
shl
push
push
and
xor
ficompl
pop
push
or
popf
lcall
pop
movsl
outsl
and
stos
mov
and
enter
add
xchg
test
stos
dec
stos
mov
pop
add
xchg
jle
cmpsb
andb
adc
lret
push
data16
and
inc
xor
outsb
lods
sbb
stos
stos
int3
dec
inc
les
xor
out
and
push
push
add
shll
dec
std
xor
aam
andb
push
lcall
enter
push
loop
mov
daa
inc
cli
loop
and
sbb
fwait
add
or
scas
movsl
push
xchg
ds
push
gs
sahf
lcall
imull
fisttps
inc
or
cli
inc
and
dec
push
push
aam
push
or
ja
sub
xor
xorl
push
inc
mov
clc
mov
add
cltd
test
bound
outsl
fdivl
pop
dec
xchg
sti
mov
lret
pop
lret
push
cwtd
jge
jecxz
dec
and
lahf
into
push
xchg
aas
xchg
notl
into
sti
cs
repnz
and
xchg
xor
mov
add
fisttps
test
sbb
xchg
push
iret
lcall
mov
jmp
jl
mov
fadds
insl
ja
cmp
sahf
sbb
fldt
or
and
cli
repz
imul
add
dec
ds
pop
jg
push
imul
outsl
lcall
or
subb
and
lcall
jp
xchg
or
fistps
leave
rsm
jmp
push
repz
pop
or
insl
idivl
aas
pop
lea
in
addr16
repz
mov
dec
xchg
lret
ret
pandn
mov
in
xor
xlat
arpl
and
and
add
mov
jne
sub
mov
sbb
das
and
lods
or
push
jns
int
add
call
shl
pusha
lret
jmp
or
daa
aam
jge
mov
cli
dec
mov
mov
inc
sbb
dec
push
scas
mul
stc
movsl
jg
rcr
aas
movsl
sti
sahf
es
dec
int3
arpl
xchg
mov
mov
pop
leave
and
icebp
outsb
dec
jbe
mov
cmpsl
push
xlat
shrb
jbe
mov
fldcw
jbe
jo
lea
mov
cmpsl
loope
sub
ret
sub
push
jmp
ja
jg
and
sbb
outsb
xor
ljmp
sbb
cli
cmc
adc
fmulp
mov
popa
mov
sub
push
daa
in
orb
lock
dec
add
sbb
dec
repnz
inc
inc
mov
mov
bndstx
ret
in
xchg
sbb
push
lods
inc
and
test
mov
sub
repnz
and
scas
js
nop
je
pop
cld
pop
mov
aaa
cmp
cli
and
pushf
mov
jns
repz
xchg
or
cmp
insl
xor
mov
addl
sbbl
hlt
add
scas
add
cmp
jns
push
jb
gs
out
inc
div
or
push
jae
test
test
xor
loopne
mov
stos
xor
mov
ljmp
xchg
and
and
flds
xchg
pop
lahf
lahf
dec
es
adc
lods
cmpsl
jo
mov
ljmp
or
push
inc
jo
adc
fnstenv
call
sbb
out
cltd
mov
inc
jno
jo
pop
enter
cwtl
mov
jb
fsubrl
jecxz
jp
jmp
mov
cmp
repnz
mov
sub
test
lods
pusha
imul
movb
sahf
fsub
loopne
adc
lds
dec
mov
cmp
inc
sub
neg
push
xor
push
cli
pop
ss
mov
ret
inc
mov
lock
ja
shlb
fnstsw
push
leave
mov
jl
pop
and
int
xchg
nop
inc
dec
shll
dec
out
jge
mov
mov
sbb
ja
pop
xor
sbb
lds
mov
and
and
aad
mov
bound
sub
imul
or
ja
pop
cltd
and
dec
arpl
cmp
xchg
sbb
movsl
xchg
push
ret
test
cmp
in
lcall
mov
cli
arpl
out
lea
inc
jecxz
inc
inc
outsl
mov
sub
dec
in
call
xlat
popf
xlat
jecxz
daa
mov
jmp
test
insb
mov
movsb
mov
fistps
dec
mov
bound
dec
xchg
add
cmpsl
jge
push
mov
xor
fldcw
test
inc
filds
sti
push
add
adc
sbbl
popf
pop
mov
int
sbb
mov
mov
mov
jne
mov
fcoms
pop
test
sub
push
out
add
ljmp
inc
dec
xchg
nop
mov
add
clc
xchg
out
xchg
add
jg
mov
mov
test
push
dec
push
fs
mov
inc
pushf
xchg
rcl
jae
lret
movsl
arpl
push
jne
clc
push
pop
sbb
lea
sub
mov
sub
xchg
in
dec
and
daa
pop
cmp
cld
sti
mov
in
mov
loopne
arpl
out
cmpsb
test
fisttpl
ja
ja
or
sbb
lods
out
mov
add
add
test
add
push
mov
push
pop
outsl
mov
inc
or
addl
daa
jmp
inc
inc
adc
xor
push
in
mov
shl
push
fstpl
fildll
pop
add
mov
inc
lods
stos
pop
pop
mov
pop
jbe
xlat
jbe
call
sub
push
ljmp
sbb
push
mov
adc
sub
cltd
jae
mov
xchg
test
pop
and
das
dec
jo
ss
mov
out
ret
fsin
sbb
pop
jecxz
stos
pop
and
aaa
popa
shll
rclb
repnz
lods
or
ret
mov
inc
sub
mov
fs
mov
sub
fldl
js
sbb
cmpsl
int3
loop
or
lea
mov
testl
xor
das
pop
mov
fs
outsb
aaa
mov
inc
sub
out
or
call
sub
dec
bound
pop
sti
test
cld
push
sbb
stc
scas
pop
add
push
adc
insb
lret
das
cmp
push
scas
imul
sub
push
inc
push
test
jb
ja
cmp
addr16
sbb
aad
push
stos
andl
jecxz
sbb
js
jno
push
sub
jns
xlat
push
cltd
push
pop
or
addr16
pop
jae
fisubs
add
mov
loope
outsb
mov
loop
and
push
mov
pop
lods
jne
arpl
xchg
pop
or
and
push
or
std
cmp
test
and
add
or
xor
add
stos
stos
imul
iret
test
int3
cmc
push
cmp
pop
ljmp
out
and
out
movsb
arpl
shrl
cmpsb
cmc
jns
js
imulb
cmpsb
int3
mov
cmp
mov
push
mov
lret
adc
repz
mov
scas
roll
nop
jbe
mov
add
add
outsb
fcomip
push
adc
and
jns
add
mov
ljmp
sbb
lock
add
jns
jg
jg
and
jmp
aad
add
je
or
movsl
xor
pushf
lea
push
and
clc
add
mov
sbb
lods
pushl
mov
leave
in
xor
mov
fwait
sbb
cmp
sub
and
mov
or
mov
pop
out
stos
adc
aad
cltd
aad
ljmp
cli
mov
xchg
and
inc
or
outsb
and
dec
lock
scas
mov
insb
insl
inc
xor
out
dec
adc
ret
cmpsl
pop
sti
sub
jne
fsub
cmp
rcll
and
and
cs
add
or
mov
sbbl
push
jle
jb
xor
inc
dec
popa
and
push
arpl
jns
shrb
aam
movsb
ja
mov
adc
and
sbb
imul
mov
sub
je
jb
xchg
scas
loope
scas
in
push
stos
test
out
xor
stos
inc
lahf
push
cmp
adc
aaa
dec
stc
pop
pop
rcrl
dec
in
inc
lret
xorb
adc
pop
add
push
sti
add
dec
inc
std
insb
push
pop
and
enter
and
xor
call
aad
mov
mov
mov
sub
inc
push
insl
dec
cli
push
cs
mov
mov
pop
fs
inc
pop
and
ljmp
ss
pop
repnz
cmpsl
push
sbb
cs
jp
fisttpl
mov
mov
test
jmp
mov
es
gs
les
or
nop
push
jb
loopne
xor
xchg
pusha
rcrb
and
and
je
push
inc
ss
sub
in
nop
mov
add
mov
xchg
repz
adc
clc
mov
xchg
mov
inc
pop
inc
jle
jle
pop
xchg
and
jns
and
je
insb
sub
test
stos
mov
mov
push
bound
push
xor
fidivrs
adc
cli
xor
sti
xchg
inc
rcrl
imul
movsl
jae
mov
mov
lcall
movsb
imul
addb
sbb
and
movsl
add
sbb
or
sub
lea
test
pop
inc
cmpsb
popf
sbb
mov
repnz
mov
movsl
mov
repnz
ficomps
outsb
push
cmp
xchg
les
xchg
jmp
pushf
pop
sti
mov
mov
scas
pop
push
dec
cmpsl
pop
lcall
enter
pop
je
sub
flds
inc
mov
fsubr
aad
lods
pop
call
jge
shlb
sub
mov
pusha
push
sub
stc
push
scas
lret
mov
inc
pop
push
push
and
and
cld
ret
std
jecxz
loope
mov
mov
add
out
adc
sbb
fs
sub
mov
pusha
mov
call
jns
or
movsb
nop
iret
push
mov
push
outsl
push
and
roll
cmpl
add
test
lock
rcrl
pop
insb
and
xor
cmpsl
xor
enter
loop
movsl
mov
pop
pop
pop
mov
pop
xor
inc
lds
sbb
mov
ljmp
mov
mov
fstpl
fadds
mov
xor
dec
popw
hlt
iret
arpl
addl
pop
xchg
lds
push
aaa
pop
push
mov
xchg
aam
push
ljmp
mov
fcomi
sub
test
cli
xchg
cmpsl
cmpsb
push
jne
aas
pop
ret
mov
adcl
fdivr
xchg
jae
insb
adc
sahf
adc
fisubrl
enter
mov
push
scas
in
jns
xor
xchg
pop
mov
xor
rcrl
clc
enter
jb
jle
pop
jnp
es
lods
das
add
das
es
movsl
clc
pop
pop
test
pop
jno
test
mov
push
stos
lds
xchg
sarl
mov
idivb
jns
lret
cmp
lahf
repnz
inc
xchg
notb
subb
cmpsl
or
jecxz
test
push
out
mov
pop
sarl
or
inc
cmpsl
cmp
xor
fwait
mov
decl
and
xchg
imul
push
sub
cmp
int
das
subl
mov
add
xchg
add
sbb
xchg
insl
fwait
push
push
in
out
inc
fdivs
mov
xchg
cmpsl
adc
sbb
mov
inc
insl
dec
daa
scas
out
and
sbb
in
sub
outsl
incl
push
int3
or
push
cmp
push
sub
xchg
adc
flds
neg
js
push
fldt
data16
mov
push
push
jmp
jne
or
mov
cltd
adc
pop
scas
xor
jne
xlat
adc
pop
stos
sub
testl
inc
and
or
sub
pop
out
out
mov
addr16
ja
test
movsl
lret
pop
push
push
repz
out
je
out
lahf
sbb
jmp
enter
aas
xchg
push
adc
jmp
push
mov
inc
push
dec
aas
les
movsb
add
inc
push
mov
add
lods
dec
pop
sub
xchg
mov
lods
aas
and
lahf
cmp
les
lock
adc
inc
pop
dec
jnp
lret
das
add
sar
insb
addb
pop
sub
adc
psubq
subb
fiadds
cmp
hlt
jl
lods
mov
or
add
mov
aam
lock
stc
leave
xchg
ja
in
aad
push
adc
inc
cmpsb
gs
test
adc
mov
dec
lahf
add
jo
mov
lret
mov
cli
xor
sbb
mov
cltd
add
xor
xor
lds
fcomip
cwtl
lods
pop
sbb
insl
push
movsb
add
int
mov
or
inc
jo
mov
outsb
loope
sub
mov
repz
or
adc
push
or
adc
or
add
add
add
add
inc
repnz
jmp
pop
inc
sub
test
fs
popa
add
push
jne
add
cltd
mov
ret
jae
xchg
xor
popf
insb
xorb
les
and
jno
cltd
xlat
int3
loope
lea
in
sub
xor
les
loope
xchg
mov
rolb
xlat
sub
mov
pop
sbb
outsl
or
sbb
ljmp
sub
dec
mov
sbb
repnz
jae
add
push
or
adc
ret
repnz
mov
jns
mov
into
test
mov
jle
inc
ja
or
inc
cmpsl
and
test
mov
ret
cmpsb
sub
orb
push
mov
xor
arpl
out
mov
mov
dec
xor
inc
mov
or
jg
pop
rclb
push
add
cmp
and
pop
add
cmp
push
inc
xchg
es
and
mov
dec
enter
orb
int3
sbb
xor
shrl
or
ss
xchg
inc
sub
loopne
cltd
or
dec
cs
push
mov
jns
xor
rcrl
push
pop
xor
ret
bound
cwtl
push
xchg
mov
xchg
jne
mov
cmp
popf
sub
mov
jns
inc
dec
and
pop
ret
mov
push
addr16
dec
or
mov
and
lea
icebp
mov
add
pop
pushf
test
bound
aad
shl
add
or
jbe
cs
cmp
or
aad
addr16
ficomps
pop
add
jle
test
pop
sbb
dec
add
lret
push
fs
xchg
jnp
pop
adc
xor
inc
push
adc
xor
shl
sarl
rcl
mov
es
sub
lcall
lcall
lcall
repnz
inc
mov
add
int3
mov
adc
ret
add
xor
sbb
js
pop
shrb
add
xchg
add
mov
dec
imul
js
push
add
out
in
lea
mov
xor
loopne
fs
add
sub
ljmp
lret
jecxz
fdivs
mov
jbe
cs
mov
scas
sbb
scas
lret
lcall
int3
or
add
repz
test
adc
bound
or
pop
sbb
and
cmpl
fwait
sbb
inc
and
ret
inc
cld
sub
incb
inc
cmp
mov
bound
cmp
mov
popf
pop
fldcw
popf
movsb
adc
xchg
lcall
push
cmpsb
mov
data16
rolb
test
daa
adc
idivb
shll
sbb
outsl
jl
push
jno
xor
insb
ja
xor
mov
ds
add
das
inc
cmp
inc
ficoml
xchg
stos
fxch
call
mov
mov
adc
sti
add
or
aaa
cmp
mov
pop
dec
enter
stos
xchg
ds
bound
mov
mov
leave
sub
jnp
xor
cltd
addr16
mov
cmp
xor
mov
mov
jle
pop
push
mov
jae
push
sub
xchg
adcl
jnp
std
pop
inc
pop
scas
push
pop
iret
mov
loop
lods
fmull
mov
pushf
xchg
fbstp
les
or
ret
and
div
andb
or
mov
sub
pop
xchg
xor
scas
pusha
inc
dec
push
test
scas
cmp
and
mov
cmp
jbe
bound
cmpsl
push
pop
lods
push
adcb
mov
int
add
and
bound
xor
or
mov
ds
fdivl
mov
xchg
enter
add
mov
orb
jle,pn
mov
dec
test
adc
dec
sbb
dec
push
sub
jne
jbe
xchg
pop
faddl
mov
mov
fs
xchg
imul
jnp
xchg
xor
adc
cwtl
in
mov
add
imul
les
mov
ret
and
sbb
cmp
mov
jns
xor
cwtl
mov
in
cmp
insl
imul
je
push
lods
and
mov
out
mov
add
mov
fs
mov
lret
stos
sub
inc
mov
pop
sub
jne
scas
jmp
sbb
jl
push
lea
jb
shrb
cmp
add
or
leave
push
jge
mov
mov
and
adcl
gs
jl
testl
dec
enter
ja
sti
test
push
jno
dec
push
mov
hlt
decl
and
scas
and
mov
addr16
arpl
mov
arpl
mov
ret
add
fcompl
push
add
add
das
sub
test
sti
test
add
push
and
aam
pop
sahf
aad
sbb
inc
negl
lret
lret
pop
push
cmp
mov
xlat
mov
enter
push
hlt
and
sahf
and
mov
push
fldl
lea
inc
push
fsts
sub
and
fucomip
xlat
add
inc
pop
pop
cwtl
repz
aaa
mov
roll
rcrl
mov
and
popf
dec
xor
lret
cmp
in
js
sti
fiadds
pop
stc
inc
add
enter
xor
mov
mov
cmp
push
lahf
dec
jae
inc
popa
insl
xor
outsl
sar
std
mov
es
leave
pop
inc
add
pop
rcl
je
push
inc
in
stos
sbb
stos
fbstp
xor
ret
push
mov
xchg
dec
or
push
push
adc
ja
stc
push
rcll
jns
fwait
cmp
mov
add
push
add
fcoml
xor
pop
or
or
dec
mov
jbe
and
xor
fwait
pop
push
neg
and
push
push
mov
iret
ret
mov
dec
jns
ja
ret
iret
cmc
cmp
jno
xchg
ds
jg
jl,pn
xchg
test
data16
pop
lret
ret
and
fidivrl
dec
test
mov
inc
pop
js
dec
sub
xor
mov
pop
push
je
bound
shl
mov
popa
or
xchg
jge
xchg
aas
and
mov
xchg
dec
or
pop
adc
mov
adc
das
jae
jg
sub
arpl
imul
adc
dec
and
adc
ljmp
mov
lahf
mov
lret
nop
stos
into
cwtl
pushf
lds
inc
rorl
mov
or
out
jne
lret
repnz
in
data16
xchg
or
xchg
fwait
arpl
jbe
and
sbb
pop
mov
push
adc
mov
or
xor
and
lock
xchg
inc
adc
adc
push
adc
and
cmp
mov
inc
jae
mov
loop
aam
adc
jnp
lods
negl
xlat
popf
nop
mov
js
lcall
dec
mov
jb
add
mov
test
sbb
pop
cltd
sub
scas
repz
add
arpl
andb
lock
into
stc
mov
mov
jg
ret
and
imul
sbbb
fidivrs
test
repz
mov
cmp
adc
fistps
jbe
addl
pop
push
inc
cmp
vmptrst
cli
lret
dec
xchg
xor
sbbb
push
jnp
jmp
in
lea
add
jnp
pop
testl
bnd
cld
nop
mov
stos
add
mov
hlt
imul
popa
cmpsb
cs
push
inc
notb
movsl
ret
dec
fiaddl
ret
js
lret
xlat
imul
sub
mov
lock
mov
sbb
test
fldt
andl
test
jl
stos
pop
mov
pop
xchg
in
in
sti
sub
xor
pop
xorb
in
fcomps
daa
arpl
imul
dec
movsb
sub
mov
ljmp
adc
ret
out
mov
jle
nop
inc
stc
and
lcall
lcall
cltd
push
movsb
loop
add
test
sbb
ja
mov
cmp
xchg
jnp
dec
cmp
push
pop
xchg
pop
imul
and
in
movsb
pushf
movsb
inc
ljmp
ds
hlt
ficomps
push
xor
pop
cwtl
mov
push
adc
scas
push
dec
es
adc
inc
inc
test
mov
sbb
ja
cmpb
jne
mov
pop
xchg
inc
shl
push
mov
sahf
and
jb
test
cmp
push
mov
and
into
push
aaa
and
xor
cwtl
mov
mov
adc
sub
pushf
push
push
cmpsl
mov
add
dec
inc
jo
leave
add
push
stos
lock
jne
or
fs
cmp
xchg
mov
inc
in
imul
hlt
push
pop
dec
mov
mov
fwait
cs
add
push
add
movsl
das
jp
and
and
test
sub
inc
inc
enter
fwait
mov
or
fistps
aam
stos
into
cmp
add
inc
pop
inc
push
dec
stos
aad
sbb
insl
mov
mov
mov
inc
xchg
mov
call
fdivs
cmpb
lcall
aas
inc
mov
ret
pop
in
pop
shrb
and
lods
mov
mov
lock
rorl
jmp
test
out
call
ret
adc
rorl
fwait
mov
loopne
pusha
xlat
mov
mov
xor
dec
adc
dec
xchg
ret
fisttps
test
lret
inc
loope
push
or
add
flds
lahf
into
and
fstpl
std
xlat
or
lcall
jle
rcrb
push
imul
add
mov
inc
and
nop
add
pop
daa
subl
xchg
ret
and
dec
jle
test
mov
loopne
int
xlat
arpl
leave
jno
add
imul
bound
jmp
adc
bound
loopne
loop
push
push
hlt
aam
test
or
sbb
push
mov
js
rep
pop
and
ljmp
cwtl
sbb
popf
xchg
or
lcall
nop
pop
xor
mov
mov
pop
jb
or
subl
or
enter
xor
ss
mov
outsl
test
jge
in
push
cmp
shr
jno
and
adc
mov
mul
test
repnz
pop
or
xorl
sti
rclb
fs
sub
cld
mov
push
fdivp
jle
movsb
sti
sub
lahf
mov
out
xchg
mull
mov
push
jmp
ja
dec
ja
dec
ja
adcb
mov
mov
scas
pop
cs
fisubl
push
mov
sbb
sub
cld
cmp
inc
sbb
rdmsr
popa
pop
dec
enter
out
dec
js
jne
outsl
adc
or
or
jbe
ret
inc
and
mov
push
dec
fdivp
or
jmp
lret
cwtl
inc
in
sub
sub
cmp
xor
adc
std
cs
adc
clc
in
pop
js
or
and
cld
add
fildll
add
stc
fdivs
stos
cmp
jbe
push
scas
ja
or
push
movsl
sti
out
fs
rclb
push
adc
addl
dec
mov
push
je
xorl
pop
fstl
or
pop
mov
xor
bound
push
dec
xchg
xchg
shr
jp
sub
and
pop
ja
lret
push
cs
pop
push
sub
dec
xor
aas
leave
rclb
adc
dec
les
sbb
cmp
ja
push
adc
pop
sti
lcall
leave
mov
jecxz
jg
lods
push
or
mov
sub
mov
test
sbb
dec
xchg
dec
ret
or
rclb
pushw
inc
out
mov
cltd
adc
jl
lcall
es
mov
pop
or
dec
notb
xor
stos
repnz
arpl
je
cli
fists
mov
cmp
cwtl
lret
sbb
push
cmpsl
adc
test
mov
mov
or
shrl
fildll
int
ja
inc
sbb
jp
sbb
sub
int3
xchg
sub
enter
std
mov
imul
push
sti
fisttps
stos
daa
sub
pop
push
sbb
push
inc
push
push
ficoml
pop
cltd
xchg
testb
test
or
dec
pop
stos
dec
jo
mov
adc
arpl
insb
stos
xor
dec
sub
xor
add
outsb
jge
xchg
add
xchg
insb
fisubs
add
mov
scas
repnz
cmpsb
gs
mov
mov
pop
mov
push
lock
and
aas
add
cli
adc
inc
pop
xor
mov
mov
imul
aaa
jno
adc
ds
xchg
ficoms
fidivrs
incl
in
in
sti
jle
sti
scas
inc
xchg
sub
add
pop
out
inc
push
fwait
jp
mov
pop
mov
mov
arpl
aaa
loopne
fadd
inc
cmp
out
call
or
inc
stos
or
push
jmp
push
fisttpl
push
pop
push
mov
jne
lea
pop
or
sahf
repz
jo
and
mulb
out
incl
outsb
mov
syscall
jge
pop
rorb
push
pusha
cmp
negl
popf
jge
lea
push
fmul
sub
loop
mov
cmp
lock
add
fs
dec
mov
mov
pop
sub
test
xchg
insl
push
loopne
adc
inc
out
push
push
out
lret
xor
bound
iret
test
pop
push
cmc
movsb
lds
fs
pop
dec
add
std
mov
xchg
lret
fcomi
jmp
cwtl
out
push
cmpsl
add
push
and
stc
fisubs
jmp
and
cli
imul
pop
inc
and
cltd
sahf
ficoms
dec
pop
or
int3
addb
cmpb
stos
aad
adcl
adc
xor
adc
mov
sub
jo
jl
jmp
loop
add
lahf
sahf
in
jne
push
jne
add
jmp
or
andb
andnps
and
add
cmpb
jg,pt
aas
fs
jnp
lahf
xor
js
cwtl
adc
sbb
dec
and
add
add
loope
jp
pop
subl
pusha
xchg
xor
iret
or
les
pop
ds
loop
cmp
cmp
add
inc
add
xchg
scas
bound
gs
ljmp
ljmp
fs
cmp
or
pop
aad
cmp
std
nop
inc
inc
enter
or
pop
orb
stos
dec
lods
mov
scas
dec
outsl
stos
inc
jp
add
inc
sbb
out
adc
add
and
cmovae
iret
inc
push
cli
xchg
or
sub
adc
mov
repnz
loopne
mov
enter
adc
pop
mov
or
rolb
cmp
cmova
and
jno
mov
iret
out
xchg
xchg
sbb
cwtl
test
push
push
outsb
xchg
push
insb
sahf
mov
cmc
addr16
pushf
stos
or
sbb
mov
sbb
testl
or
cmp
fs
xchg
xchg
inc
add
aad
pushf
and
int3
sub
rcll
mov
dec
sub
inc
call
mov
cmc
push
shrb
movsb
and
xlat
std
xor
lods
adc
insb
mov
jecxz
movsb
je
hlt
adc
adc
cmp
mov
push
pop
jae
and
inc
fucomip
sahf
stos
jo
mov
and
sbb
sub
or
xlat
adc
push
pop
xlat
adc
cmp
bound
lock
cmp
enter
insl
inc
popf
jmp
sbb
jge
jne
jecxz
jb
push
dec
sub
inc
jno
les
loopne
pop
dec
cmp
testb
aad
mov
sar
in
inc
dec
push
sub
ds
mov
adc
negb
dec
add
cmc
inc
iret
rcrl
sbb
or
mov
jl
and
cli
outsl
out
rorl
adc
fsubl
xlat
add
ret
fxch
jo
lcall
sbb
jp
repnz
push
push
fsubrl
cmpsb
je
xor
outsb
gs
test
ffree
loop
xor
in
sub
mov
lods
out
mov
test
jnp
addr16
test
push
jl
lahf
xchg
jne
jle
inc
loop
ret
mov
inc
inc
inc
push
xor
mov
jae
iret
push
and
cmp
adc
sbb
add
cmp
add
xchg
pop
dec
sbb
sbb
outsb
add
sti
aam
sub
lret
push
mov
xchg
xchg
xor
or
mov
shl
xor
jo
and
xor
and
test
pop
adc
nop
jae
cmp
jno
add
scas
cmp
push
hlt
incb
xor
lcall
adc
mov
or
addr16
ds
arpl
and
add
adc
push
pop
inc
dec
xor
call
push
jmp
bound
and
in
js
adc
cmp
insl
fucomp
pusha
sub
jge
jmp
arpl
xchg
mov
clc
jmp
sbb
push
inc
data16
insl
mov
pusha
popa
lcall
lret
and
adc
and
imull
adcl
imul
sbb
les
inc
loop
popa
stos
inc
inc
sbb
movsb
setg
sub
dec
cmc
in
dec
enter
rcrl
jno
cs
and
cltd
imul
scas
and
cmp
xlat
sahf
ret
ret
and
decb
mov
ss
shrl
rcll
mov
pop
repnz
pop
sub
jae
sub
ror
push
mov
fisttpll
jne
stos
adc
push
mov
clc
dec
jg
cli
jnp
lret
and
sub
push
and
movsb
xor
and
mov
jb
pop
jb
lock
arpl
push
pop
dec
mov
gs
lcall
inc
out
loope
rol
lcall
cmc
dec
cmp
enter
pop
mov
cli
push
je
add
insl
shrl
aaa
cmp
int3
sbb
imul
pop
cmp
pusha
stos
adc
rorb
mov
sub
lods
rcll
fistps
jns
xchg
or
fnstsw
enter
add
mov
xor
or
scas
xor
or
inc
cmc
ret
hlt
lods
addl
stc
in
lcall
imul
daa
mov
ret
ret
mov
sbb
rorl
in
push
ret
lahf
dec
lahf
add
popa
cmp
stos
inc
jb
and
jle
or
xor
jecxz
fwait
mov
mov
loop
mov
and
cltd
xor
insl
imul
cs
cmp
pop
inc
pop
xlat
cmp
test
mov
popf
inc
lods
test
fdivrs
sahf
cmc
xchg
lods
xchg
adc
fsubrs
out
push
pusha
pop
mov
rolb
push
inc
bound
in
mov
stos
push
and
lods
cmpsb
push
pop
xchg
into
dec
push
and
dec
aas
and
adc
je
clc
stos
enter
loope
in
sbb
popa
adc
jbe
out
xor
ja
sbb
lea
test
mov
mov
sbb
mov
mov
mov
test
mov
movb
push
mov
sub
dec
mov
lock
jnp
and
mov
mov
adc
jl
add
or
insl
mov
leave
rcrb
mov
push
lods
call
xchg
lahf
stos
dec
dec
inc
xchg
movsb
scas
inc
js
jle
mov
jp
inc
dec
mov
pushw
stos
inc
add
adc
fldl
ret
out
cmovo
into
cmpsl
mov
push
mov
dec
fnsave
sub
pop
cmc
subb
pop
fsubs
sahf
cli
push
inc
and
daa
xchg
push
xchg
inc
popf
sbb
pop
out
dec
xor
out
mov
shll
jmp
pop
adc
push
push
bound
dec
insl
push
enter
daa
pop
mul
fwait
mov
sbb
add
dec
mov
imul
add
jno
dec
cmp
mov
sub
push
adc
pusha
test
arpl
rorb
fstl
bound
int3
or
rorl
sbb
mov
and
imul
jecxz
add
shlb
pop
adc
ljmp
mov
lahf
cmpsl
cmp
xor
fimuls
rolb
std
mov
push
cltd
test
cmc
shrl
jae
sbb
repnz
into
stos
mov
icebp
addr16
xlat
push
lret
push
aad
lcall
xor
mov
stos
and
cmpsl
hlt
aam
sub
mov
push
mov
pop
jne
fadds
adc
sar
aas
daa
test
clc
mov
bound
and
xchg
jae
in
pop
gs
imul
pusha
sbb
sbb
pop
xchg
cs
mov
and
mov
jmp
inc
jnp
mov
insb
cld
icebp
jl
mov
stc
cmpsb
fcompl
mov
out
loopne
cmpsl
pop
in
mov
pop
push
push
xorb
insl
leave
mov
cld
cwtl
cmpsb
xlat
inc
dec
inc
lods
push
mov
pop
pop
push
out
xor
shlb
movsb
out
addr16
jno
add
call
adc
daa
cmp
xor
xchg
cmpsl
lahf
sub
insl
test
inc
push
xlat
jae
or
mov
mov
or
mov
stos
add
push
icebp
ret
mov
sbb
push
inc
jmp
add
icebp
jb
add
cwtl
sbb
punpckhdq
fsubrl
shl
cmp
pop
insl
inc
inc
lds
nop
cmp
lahf
insb
fs
and
mov
stos
jecxz
mov
das
jno
push
jg
cmp
xor
or
arpl
inc
outsl
bound
mov
add
mov
adc
push
xchg
jp
or
lods
cld
mov
xor
fisttps
shl
inc
adc
mov
or
mov
add
cmp
mov
ret
cmp
out
loopne
es
clc
or
sub
test
lcall
adc
scas
movsb
insb
cmp
test
mov
out
scas
fsubs
inc
push
js
push
dec
ret
mov
hlt
repnz
dec
fmull
scas
repnz
push
stos
nop
cld
pushf
push
mov
push
std
dec
lret
jb
cmp
enter
iret
inc
and
mov
es
dec
and
mov
push
mov
sti
in
mov
jecxz
adc
sub
fcompl
sub
imul
movsb
stos
iret
shll
inc
sub
push
and
xchg
jmp
fdivs
shlb
andnps
add
and
in
xlat
das
out
scas
xor
fsubrs
pop
push
fs
sub
mov
lods
xchg
sub
mov
push
dec
xor
addr16
stos
mulb
lods
rolb
rcrb
inc
adc
dec
sub
insb
push
test
jno
dec
call
push
lret
sub
mov
data16
test
and
mov
into
mov
and
sub
movsl
push
jle
sbb
sbb
testl
sbb
xchg
xchg
sbb
mov
pop
cmpsb
mov
mov
xchg
pop
lahf
add
into
mov
mov
fs
loope
mov
mov
mov
ss
leave
jnp
subb
or
mov
notb
xchg
jo
or
push
and
jle
xchg
sub
int
push
pop
pushf
add
adc
push
fstl
dec
adc
es
ja
pop
dec
xchg
pushl
fists
push
mov
pop
xor
ja
adc
mov
in
in
outsb
xchg
cmpsb
out
rcll
mov
push
popf
rcrl
faddl
imul
inc
out
movsl
shr
lods
push
stos
sar
push
adc
mov
sub
lock
jg
repz
je
pop
xchg
neg
pop
sub
jmp
pop
ds
sub
xchg
sub
xor
sbb
jle
inc
pushf
jb
and
jl
sbb
in
pop
lret
jge
cmp
hlt
jge
outsb
in
mov
cmp
loopne
or
or
ja
push
sbb
in
lds
cmp
sub
pop
dec
hlt
adc
popf
fimuls
xchg
jl
xchg
aam
or
push
xor
mov
cs
jae
fbstp
repnz
lret
jmp
cmp
js
fidivrl
inc
divb
movsb
mov
xor
push
scas
enter
leave
and
sbb
mov
sbb
sti
popa
cmp
fistl
dec
add
inc
mov
inc
dec
imul
shll
pop
and
in
pop
or
int
fisubl
data16
repz
aam
fdivr
icebp
js
popf
cmp
dec
in
stos
dec
dec
or
cmp
xchg
test
jb
jnp
add
jp
add
dec
adc
mov
out
xchg
sahf
push
and
add
aam
ljmp
test
jne
xchg
mulb
scas
subb
mov
xchg
ljmp
cwtl
or
loope
mov
inc
enter
or
push
pop
xor
scas
jns
push
cwtl
cmpl
add
and
cmp
cmp
les
xor
mov
mov
jno
pop
inc
in
or
stos
jne
ljmp
xor
cmp
imul
in
inc
xor
push
sbb
mov
or
shrl
bound
xchg
dec
dec
notl
out
or
sub
mov
add
rorb
ficomps
popl
cmp
imul
jg
nop
dec
mov
pop
mov
push
sub
dec
mov
sbb
cmpsb
into
sub
sbb
into
or
sbb
dec
popf
sbb
pop
lret
cmp
mov
push
inc
cmc
pop
hlt
mov
scas
adc
sbb
gs
mov
data16
push
inc
fidivl
mov
push
mov
insb
fs
test
sub
psubsb
pop
ljmp
out
mov
repz
rorl
pop
shlb
loopne
movsl
xor
push
add
push
mov
and
ds
nop
imul
lcall
stos
cmp
popa
lock
loope
ret
adc
out
jle
xchg
clc
xchg
push
pop
and
fnstenv
sbb
mov
and
aas
xchg
or
cmp
push
test
in
jae
xchg
sub
sub
loopne
sbb
jne
test
add
xor
int3
or
mov
push
inc
sub
andl
xchg
and
movsl
daa
ja
pop
leave
mov
cwtl
cmp
sbb
ja
jns
scas
das
sti
lret
fs
iret
call
sbb
mov
loope
jle
pop
inc
lret
ficoml
jle
cwtl
xor
xor
aad
mov
pusha
mov
cmp
rcll
or
xchg
mov
push
xlat
push
bound
pop
lret
call
loopne
ljmp
lahf
pop
xchg
jns
xchg
xchg
xchg
add
leave
daa
sbb
jmp
daa
xor
arpl
or
adc
repnz
jecxz
inc
and
fisttpl
sbbb
jbe
jb
mov
fdivl
mov
cmp
push
fwait
sub
divl
mov
xchg
iret
or
mov
les
push
arpl
testb
jo
mov
push
mov
pushf
jecxz
xorb
cmp
add
push
mov
jecxz
inc
push
mov
mov
ljmp
or
int3
pop
pop
in
mov
lret
sbb
add
push
pop
hlt
lret
fwait
xchg
push
mov
testl
push
pop
sub
jo
and
add
ss
push
out
scas
popa
sbb
rol
dec
minps
nop
jg
adc
and
dec
push
mov
sysret
inc
mov
sub
rclb
shrb
lea
pop
orl
push
loope
test
adc
mov
incb
scas
and
xchg
lahf
dec
sbbl
inc
mov
test
push
mov
outsb
adc
cmpsl
test
inc
xacquire
cltd
pusha
movsl
inc
mov
fwait
add
shrb
inc
mov
push
adc
cs
cmc
mov
adc
inc
xchg
adc
mov
js
stc
inc
enter
cmovno
pop
aaa
pop
ss
push
imul
lock
xor
xchg
adc
add
clc
and
xor
ret
jg
push
mov
shrb
out
adc
mov
push
inc
sahf
mov
cwtl
and
inc
and
aaa
scas
mov
stos
jmp
cmp
fwait
and
and
xchg
cmp
out
lret
mov
xchg
inc
jp
pop
dec
lcall
outsb
ljmp
sbb
push
pop
inc
pop
ja
jmp
jg
sti
int
pop
hlt
mov
sbb
or
jbe
arpl
pusha
jne
stos
push
push
xchg
in
or
imul
jp
adc
repnz
inc
push
jl
out
sahf
xor
push
mov
arpl
shrb
sub
adc
push
push
les
mov
push
inc
sub
jae
dec
mov
jne
sub
sub
add
sub
shll
loope
cltd
test
lcall
and
sbb
cmp
push
ret
cmc
mov
xchg
mov
aaa
push
jno
js
imul
xchg
inc
mov
jp
cmp
xchg
pop
mov
gs
add
adc
sub
cmp
or
insb
fisubrs
push
cmp
mov
pop
sub
lret
fadd
and
fldcw
jecxz
dec
add
mov
cmp
icebp
imul
movsb
leave
push
and
push
enter
or
push
nop
sahf
and
pop
call
push
add
pop
daa
mov
mov
cmpsl
mov
fimuls
cwtl
bound
mov
mov
mov
frstor
loope
cmp
lahf
mov
test
inc
outsl
mov
xor
xchg
add
jb
or
mov
int
push
fsubrs
ss
insb
enter
nop
mov
mov
cld
lods
or
repz
mov
call
jno
inc
pop
aas
xchg
add
arpl
push
andl
mov
jno
ror
xchg
les
jmp
in
or
cmp
xchg
divb
push
push
rclb
outsb
fcmovb
dec
lcall
or
jne
fldl
arpl
and
xchg
jns
mov
jb
mov
mov
popf
cmp
xchg
mov
stc
call
je
movsb
les
addr16
xchg
cmpsb
push
mov
lock
and
mov
enter
scas
jne
push
push
add
pop
mov
movsl
pop
mov
int3
imul
xor
mov
push
lea
sbb
jnp
int3
bound
insb
pop
jle
pop
sub
push
push
xchg
jmp
inc
pop
ret
into
add
in
jno
sahf
lods
mov
sbb
loopne
rcrl
ret
fwait
adc
inc
dec
lahf
imul
xor
xor
cmpsb
cwtl
mov
roll
dec
xor
push
pop
scas
dec
add
mov
add
sahf
loope
inc
jno
jnp
jnp
std
pop
arpl
jne
loopne
imul
ljmp
add
pop
cltd
sbb
ret
xchg
inc
cltd
mov
je
jp
mov
mov
out
divb
dec
sbb
aaa
call
cmp
dec
fldt
jne
cmp
addb
rcrw
jle
call
loope
in
adc
mov
dec
fdivl
jne
dec
mov
add
aas
fwait
sbb
fisttpl
cwtl
adc
lcall
movsl
inc
outsl
shll
or
add
mov
jmp
leave
jg
in
xor
mov
ss
fstps
jg
cs
mov
push
mov
faddl
in
std
cmp
cmp
xor
clc
mov
add
je
push
ss
mov
repz
int3
aas
dec
lcall
scas
xor
xchg
pop
inc
jb
popf
jp
dec
ss
mov
add
loopne
cld
sbb
std
add
out
xlat
cmc
gs
in
and
cmp
test
mov
rcrl
dec
lods
jg
mov
jp
test
adc
mov
scas
lea
sub
je
scas
lds
xchg
xchg
das
mov
adc
mov
fdiv
xchg
jl
xchg
in
scas
or
arpl
inc
xlat
addl
popf
insb
or
in
sub
mov
stos
and
mov
cmp
jmp
loop
add
adc
push
xor
mov
push
xor
xchg
and
and
and
xchg
mov
inc
adc
xor
mov
push
mov
xchg
xchg
rcr
pop
inc
mov
jne
frstor
inc
popf
mov
push
lds
rorl
xchg
mov
dec
mov
cwtl
sub
mov
test
sahf
sbb
mov
jne
jmp
int3
lahf
cld
popa
inc
std
ljmp
aam
int
cwtl
lcall
loope
leave
pop
dec
xchg
out
jp
insl
das
test
outsl
insb
lret
inc
shlb
inc
int
fsubr
adc
lods
movsl
pop
movsb
fadds
mov
lods
pop
mov
lret
out
sarl
ret
lds
outsb
aaa
mov
test
xor
inc
ret
sbb
scas
loope
mov
ss
and
push
out
dec
out
int
hlt
push
mov
mov
mov
xor
movsb
jle
add
or
fistl
inc
mov
jle
lods
xchg
jns
out
aad
mov
jno
push
xor
test
xchg
push
sub
arpl
cmpsb
stc
or
push
addr16
xchg
aam
jae
push
lahf
sti
xor
das
imul
icebp
mov
pop
mov
cmp
mov
and
and
mov
dec
sub
xor
scas
es
lret
jne
adc
sub
cwtl
and
sub
add
test
lods
out
sbb
push
push
cli
mov
mov
jg
xchg
push
inc
enter
test
adc
rcrb
xor
mov
mov
mov
mov
mov
lret
das
ss
enter
and
xchg
mov
inc
imul
sbb
add
cltd
push
inc
notl
push
dec
ficomps
mov
jnp
movsb
xor
xor
pop
cmp
mov
sub
inc
mov
and
loopne
ficompl
jge
nop
pusha
faddl
outsl
or
add
aas
add
lcall
add
sbb
popa
popf
dec
dec
cld
jo
mov
adc
xchg
popf
out
in
jb
lret
push
mov
adc
loop
aas
mov
cmc
lods
inc
cmp
idiv
les
call
cmpl
in
and
stos
hlt
jno
out
dec
adc
xchg
jne
jns
or
fistpl
cmp
mov
les
imul
cmc
inc
movsb
data16
out
xchg
dec
sub
fiaddl
jo
sar
clc
es
push
aad
inc
sbb
enter
sub
aam
neg
and
dec
xchg
jne
pop
jne
loope
add
add
adc
lds
call
aaa
push
push
jnp
sub
mov
cmc
repz
les
cmp
wbinvd
xor
das
stc
aad
mov
lock
push
xchg
or
out
push
andl
cmc
outsb
mov
fs
rclb
enter
je
clc
mov
clc
popf
sub
xchg
popf
or
iret
insl
jb
push
aam
push
lcall
and
add
popf
sub
dec
arpl
sbb
shr
aas
stos
testb
data16
adc
xlat
push
push
dec
shlb
xchg
xlat
iret
insl
jg
adc
cmp
pop
cmpsb
negb
les
mov
jbe
sbb
jge
bound
aad
ds
loopne
cld
mov
adc
or
fistpl
loopne
into
cmp
test
shlb
or
mov
jmp
push
pop
pop
int3
popa
addl
xor
fmuls
adc
stc
shrl
imul
jne,pt
aam
aaa
cmp
aaa
cld
xor
ds
sub
mov
les
sbb
adc
lret
mov
imul
mov
pop
lea
fxch
adc
std
imul
les
nop
jge
mov
push
adc
mov
xor
xlat
pop
out
shlb
push
cld
pushf
adc
aam
inc
sub
jg
push
and
jae
mov
fidivs
cltd
scas
adc
mov
es
mov
out
insl
mov
dec
dec
jno
cltd
loop
fcomip
dec
cmp
rclb
cmpsl
out
dec
and
ljmp
pop
push
decb
pop
mov
scas
fs
insl
xor
inc
push
cmp
cmp
push
pushf
movsb
push
and
fsts
pusha
pop
mov
pop
mov
xor
call
pop
insl
call
cmc
in
sub
outsb
shr
jmp
in
rcrl
jecxz
fwait
loop
and
rcr
pop
fs
dec
xor
out
cmovae
cli
fbstp
push
mov
out
test
fnsave
mov
fdivs
pushf
nop
stos
cmpsl
push
test
pop
sbb
push
loope
gs
mov
xchg
add
pop
sub
js
pop
cli
dec
mov
cld
inc
shll
add
jp
mov
xor
cmp
mov
xor
out
mov
pop
dec
addr16
push
daa
jle
ljmp
push
stc
add
mov
and
sbb
pop
jg
sbb
inc
pop
pop
bound
cltd
imul
dec
lds
std
mov
in
test
test
or
mov
pop
scas
mov
dec
lods
sbb
cmc
push
ret
adc
rclb
jb
mov
mov
js
addr16
sbb
xchg
sbb
inc
xor
inc
mov
pop
lcall
popa
jo
in
and
xlat
lcall
lods
stos
cltd
dec
imul
sub
xor
and
lret
cwtl
xor
sbb
out
pop
ret
xor
sub
ljmp
fstl
jae
mov
sub
jge
leave
add
repz
or
or
fdivs
push
gs
sbb
das
test
fs
inc
add
push
push
je
xchg
and
test
jge
jno
xchg
std
fidivrs
or
ljmp
jo
xchg
imul
jle
pop
pop
push
fiadds
mov
subb
cmp
or
dec
jnp
inc
add
xlat
add
or
int3
pop
adc
lock
sub
sub
stos
dec
jp
and
or
in
in
xchg
sbb
push
cmc
andb
imul
insb
lret
roll
jne
or
mov
jl
bound
xchg
shlb
adc
mov
mov
mov
push
cmpsb
sbb
xchg
dec
or
sbb
mov
dec
xchg
xchg
in
xchg
jle
cmpsl
or
push
xchg
and
imul
xor
mov
mov
pop
in
push
pop
inc
cmpb
xlat
out
xchg
icebp
adc
or
add
leave
aad
icebp
bound
fwait
pop
lret
movsl
out
js
push
sahf
inc
mov
pop
sub
pop
out
mov
push
adc
adc
jge
fdivp
adc
cmp
push
push
dec
test
adc
adc
jg
jo
and
jno
subl
mov
rcll
orb
or
icebp
out
je
scas
pusha
ja
jno
lret
mov
insl
loopne
js
int3
mov
push
push
dec
adc
and
push
gs
lea
lea
in
arpl
jae
push
pop
outsl
xlat
pop
test
xorl
mov
mov
pusha
mov
movsl
sub
inc
inc
cmp
and
int3
and
imul
mov
xchg
fmull
or
out
leave
aad
add
sbb
jge
cmc
and
inc
pop
int
das
lcall
je
mov
pushf
stc
xchg
popf
mov
adc
push
push
dec
in
cmp
imul
in
pop
stos
mov
dec
push
insl
ret
or
mov
lock
jge
pop
dec
hlt
add
shll
lahf
add
roll
dec
cltd
dec
or
and
inc
mov
sbb
stc
jo
or
or
js
ret
dec
and
in
outsl
inc
mov
and
cs
or
je
test
imul
inc
jno
push
sub
test
and
notl
push
cmp
movsl
in
add
jg
jmp
movsb
aas
inc
dec
stc
mov
and
mov
leave
cltd
jne
adc
aaa
jne
test
js
cmpb
outsl
aam
es
call
in
cmpsb
shll
test
inc
out
push
arpl
and
fdivrl
dec
sub
adc
xchg
adc
in
lret
push
jo
pop
mov
out
push
jl
push
bound
xchg
jae
xchg
shrb
test
arpl
cld
mov
push
xor
and
faddl
test
outsl
mov
dec
mov
gs
aas
pop
xchg
fisttps
mov
ljmp
fdivrl
jmp
xlat
push
inc
dec
and
mov
fcomps
mov
jmp
movsb
imul
cmc
jg
les
out
add
out
mov
jg
push
mov
test
fists
jmp
push
pop
adc
movsl
pop
outsl
jb
test
popa
adc
es
cltd
icebp
dec
repz
xchg
sub
jl
out
and
xchg
fwait
sub
pop
inc
push
lods
pop
mov
sbb
data16
enter
push
mov
add
push
sub
adc
nop
adc
orl
aas
mov
cs
fwait
cmp
xor
mov
arpl
sbbb
inc
lds
dec
mov
sub
pop
sub
cmp
aas
iret
jno
je
cmp
inc
mov
inc
push
xchg
pop
fdivrl
mov
xor
mov
shrl
hlt
sub
aad
jmp
add
cmpsl
in
scas
fcoms
pusha
xor
pop
add
icebp
sti
adc
cmp
add
orl
or
or
jl
push
es
test
inc
inc
mov
sub
jbe
cs
imul
or
or
mov
xlat
lahf
push
and
enter
insl
rolb
push
add
add
cmp
mov
popa
sub
fistps
fwait
mov
xor
or
mov
loop
adc
xchg
mov
dec
add
pop
xor
lcall
add
cmpsl
sbb
mov
mov
cs
push
sub
pop
bound
enter
sbb
add
mov
xorl
rcll
ljmp
movsb
add
loop
popf
hlt
xchg
dec
add
sbbl
into
outsb
sub
pop
xchg
fs
dec
repz
xor
pop
bound
mov
sbb
mov
fwait
sub
test
or
xchg
scas
dec
mov
sbb
add
jp
lret
lea
int3
ret
push
mov
jecxz
adc
sbb
pop
pop
push
loop
dec
push
fwait
jmp
js
or
dec
xchg
cltd
add
icebp
add
mov
mov
push
icebp
in
and
inc
mov
or
ljmp
test
loope
or
inc
jmp
imul
imul
add
add
or
push
sub
sub
cmc
int
mov
or
dec
cmp
loop
push
dec
call
pop
dec
cs
popf
mov
scas
and
fs
jns
inc
sahf
sbb
rcll
cmp
arpl
lret
fadds
movsb
push
adc
mov
inc
fsubs
iret
fmull
pop
push
or
nop
fwait
xor
in
adc
scas
pop
sbb
xchg
cltd
xchg
leave
jmp
sub
inc
in
cmp
cmpb
cmpsb
mov
dec
xor
icebp
pop
inc
xchg
dec
jns
mov
stc
cwtl
jmp
xchg
mov
push
ljmp
push
jbe
pop
xchg
faddl
rol
mov
jge
mov
sub
dec
cmc
mov
fmull
mov
jge
sub
das
dec
fnstenv
popf
fwait
in
stc
dec
shlb
das
push
and
sub
dec
mov
in
je
jle
and
mov
xrelease
out
mov
add
sahf
popf
idivl
sti
xor
enter
sub
jl
js
lcall
out
push
add
mov
and
shlb
pop
and
jns
mov
adc
scas
mov
shrl
jg
add
sbb
je
pop
push
bound
push
decb
clc
cli
popa
cmp
lret
cld
cmp
clc
fstl
fadd
mov
loopne
jne
popa
jp
xchg
pop
in
xor
notl
lock
in
insb
repnz
je
xor
cli
adc
mov
insb
pusha
push
loop
push
mov
cld
jno
mov
daa
mov
bound
push
jbe
cmp
inc
push
ss
lcall
xchg
jb
je
sub
sub
out
fwait
xlat
push
pop
sub
loopne
cs
pop
pop
stos
pop
pop
lcall
imul
jle
popf
push
das
jo
cmp
sbb
xor
lret
and
int3
dec
notl
mov
mov
mov
xchg
xchg
push
jle
and
lea
or
pushf
std
arpl
sub
cmpsb
les
mov
push
sbb
insl
jg
aad
pop
xchg
pop
mov
ja
inc
cld
cmp
pop
into
push
icebp
icebp
dec
cmp
xor
and
out
fnstsw
loope
insl
dec
in
cmpsl
adc
mov
rolb
sti
loop
inc
jbe
cmpl
add
shll
xchg
push
mov
bswap
or
insb
mov
or
xchg
or
push
fwait
test
or
push
xor
mov
sti
mov
mov
repnz
push
sbb
adc
aad
insl
in
sbb
jbe
jecxz
fisttpl
sub
xor
add
mov
push
dec
push
xor
xchg
push
add
enter
lods
mov
xchg
inc
push
dec
addr16
add
out
dec
add
xchg
test
xchg
cmp
stos
and
cmp
mov
sbb
push
test
mov
fwait
jnp
pop
push
push
insb
push
inc
sub
and
or
jno
test
mov
sbb
cmpsl
mov
inc
fists
fwait
jno
in
arpl
xchg
stos
lds
mov
test
mov
xlat
rorb
adc
dec
xchg
and
and
sub
sbb
pop
or
fmuls
movb
mov
and
add
inc
lock
add
notl
test
lods
lods
aaa
mov
cmp
test
dec
repz
nop
adc
ret
ret
inc
inc
popa
js
fs
pop
popf
push
adcb
rolb
cmp
mov
inc
cmp
and
inc
in
sub
int
daa
fistpl
pop
test
in
mov
jnp
dec
dec
mov
jp
mov
or
sub
pop
ljmp
xlat
inc
mov
cs
stos
mov
or
bound
stos
test
mov
and
cli
lcall
loope
movsl
pop
dec
mov
addb
pop
repz
ds
in
fistl
rcpps
dec
adc
gs
jge
dec
pop
cmpsb
sbbb
enter
or
pop
les
or
ljmp
mov
div
mov
fwait
inc
sbb
fsubrs
test
call
stos
fildl
mov
push
dec
lds
mov
outsl
sub
sti
adc
jge
lret
lret
push
movsl
adc
ja
test
mov
outsb
enter
mov
and
in
inc
addb
subl
or
dec
dec
sbb
sub
sbb
orl
in
or
aaa
mov
lds
std
or
cmpsl
divl
ret
adc
jmp
push
rcl
in
sbb
cli
lret
xchg
test
insb
mov
test
rol
aad
js
xchg
aaa
sub
sbb
pop
cld
sbb
dec
mov
sbbl
das
inc
shr
insb
xchg
scas
repnz
or
les
mov
sbb
shl
popa
popa
sub
xor
mov
mov
inc
ljmp
push
lods
icebp
ljmp
or
pop
adc
mov
in
mov
sub
pop
xchg
mov
int3
ja
ljmp
data16
out
pmullw
insb
sub
push
out
fwait
jne
loop
or
fwait
jbe
or
neg
es
js
push
push
jge
outsl
dec
push
push
repnz
or
push
ret
adcb
shl
gs
aad
fwait
mov
push
sub
cmp
inc
or
fisttpl
mov
test
pop
out
arpl
int3
inc
adc
xor
xchg
mov
push
pop
xchg
jns
push
fldcw
fstl
ss
cmp
lret
push
inc
push
jbe
sub
push
loop
adc
push
jecxz
dec
lret
ss
cli
jg
imul
push
loop
out
rclb
pop
cmp
mov
inc
or
enter
sub
ret
repz
cmp
shrb
sub
xchg
and
stc
pop
sub
xlat
jne
and
sbb
sub
sahf
sub
cld
neg
loop
add
xorl
cltd
insb
push
mov
lret
push
test
and
push
sbbb
fistpl
movsb
leave
fcompl
negl
dec
xor
fcomip
in
int
incl
add
pop
lahf
cmpsl
cld
and
sub
xor
loope
adc
xor
add
ficomps
mov
clc
ja
xchg
loopne
ss
push
bound
subb
sbb
or
les
sub
add
loope
sbb
xchg
and
lret
add
faddp
movsb
inc
pop
das
iret
mov
pop
xor
movsb
mov
daa
enter
push
pop
pop
xchg
pop
clc
test
cld
push
mov
stos
mov
lock
sub
xor
loop
jmp
xorl
fcmovne
xchg
jg
push
pop
adc
scas
mov
lret
add
push
dec
add
lahf
xor
pop
jg
inc
lock
sarb
jl
cmp
aas
insb
jae
push
fsubl
push
inc
sarb
int3
test
xor
push
shr
mov
out
inc
insb
mov
repz
mov
rclb
adc
scas
cmpsl
pop
ss
vpsubusb
call
cmc
add
into
push
hlt
loop
mov
ljmp
sub
sub
xchg
fstl
xor
xchg
hlt
push
dec
ret
push
push
or
sbb
xor
into
sbb
jmp
pop
sbb
out
ret
push
xlat
hlt
pop
aas
in
push
mov
mov
mov
pop
insb
mov
out
into
stos
or
sbb
mov
pop
mov
adc
fcoml
mov
leave
pop
cmp
jbe
data16
shrb
es
rcll
shl
loope
pop
jne
repz
adcb
pop
das
push
jno
out
stos
ficoms
cwtl
lds
or
push
cmp
leave
xor
sbb
adc
dec
test
lods
clc
push
mov
xchg
mov
icebp
popf
outsl
fnstenv
mov
or
push
cs
push
popf
jns
inc
xchg
mov
adc
outsl
sti
dec
movb
loope
sub
cmpb
and
fadds
mov
add
stos
sub
addb
mov
push
inc
sub
add
out
lods
mov
inc
out
cmpsl
xlat
in
mov
jecxz
mov
mov
sti
adc
add
test
add
push
lcall
rcl
sub
int
dec
cli
ret
scas
sti
sub
test
movsl
into
mov
mov
push
add
mov
outsb
mov
arpl
push
out
imulb
adc
jecxz
outsb
nop
lods
inc
sbb
xor
or
bound
mov
jl,pt
or
nop
push
icebp
jmp
or
xor
imul
add
pop
dec
add
add
call
clc
jne
jne
into
and
mov
mov
xchg
or
pop
loope
shr
mov
inc
inc
and
sub
xchg
out
jle
mov
push
int
pushl
pop
fisttpll
call
or
ret
xchg
xlat
fildl
scas
out
lcall
and
push
jmp
fstp
mov
call
mov
jecxz
ljmp
popf
lock
lods
mov
adc
sbb
pop
ss
in
jns
stos
aam
stos
xchg
mov
movsl
inc
mov
push
xchg
xchg
cwtl
mov
dec
push
repnz
inc
call
pop
jle
pop
mov
jg
into
mov
inc
cmc
cmp
scas
in
sub
push
repnz
fcompl
daa
sahf
mov
adc
addb
xor
int3
mov
push
xor
shlb
jmp
inc
icebp
les
popl
or
sbb
push
push
push
push
fldenv
dec
popa
aaa
or
dec
cmc
xchg
out
jl
sbb
cld
xchg
inc
aas
dec
imul
outsl
xchg
mov
jnp
daa
ljmp
pop
jae
jg
decb
stc
pop
loopne
and
xchg
loop
aad
adc
icebp
ficomps
sub
incl
fdivrl
arpl
push
add
jecxz
leave
and
mov
adc
jl
push
mov
popa
bound
cmc
dec
push
cli
jecxz
ljmp
iret
repz
lret
xor
sub
jl
insb
xchg
insb
subb
lds
adc
add
test
xchg
mov
mov
std
decl
movsb
movsl
mov
pop
stos
cld
adc
mov
mov
lods
loopne
fidivrl
and
mov
adc
jne
add
jns
fwait
lea
add
call
pushf
xchg
xor
mov
inc
test
push
inc
xchg
jbe
pop
sub
or
xlat
add
outsl
push
lods
negl
mov
cltd
sbb
mov
inc
xor
and
int
mov
mov
inc
lret
xchg
mov
add
adc
add
cld
incl
iret
cwtl
flds
xchg
loop
pop
xchg
add
dec
inc
mov
ljmp
sub
adc
cli
pop
xchg
lcall
cltd
dec
sti
and
adc
es
in
xor
loopne
fdivrs
aad
sub
inc
jle
mov
adc
movsl
test
sub
scas
adc
cld
rcll
aam
pop
push
jb
jnp
iret
cmpsb
xchg
or
mov
mov
movsl
sti
imul
pop
movl
andb
incb
dec
mov
pop
cmpsb
pop
xor
mov
fnsave
mov
rclb
and
or
negb
nop
and
in
movsl
adc
push
sub
orb
jg
stc
scas
cld
into
push
imull
out
dec
add
and
lahf
dec
add
push
shrl
sbbb
xchg
xchg
push
add
divb
mov
aam
insb
and
sbb
xchg
fs
idivl
add
xor
testl
jle
fs
bound
out
in
outsl
ss
or
mov
xor
aad
cmp
popf
add
xchg
addr16
imul
popf
sbb
insb
cmpsl
push
aas
push
mov
or
adc
mov
jle
pop
js,pt
cs
mov
fisubrs
and
addr16
adc
out
mov
test
cmpsl
jo
imul
push
fistpll
mov
jmp
in
in
scas
push
repnz
pop
ljmp
jns
std
int3
push
jbe
cli
popf
scas
pop
jno
loop
adc
aad
push
enter
lds
ficompl
sbb
loopne
cld
gs
add
subb
fcoms
cs
pop
rcrb
xor
subl
xchg
sub
out
or
addr16
xchg
xchg
or
imul
psrlq
sbb
fnsetpm(287
mov
add
pop
repnz
cmc
pop
inc
std
imulb
mov
push
pop
lea
loope
nop
adc
sub
inc
pushf
sub
mov
inc
pushf
push
push
mov
jns
xchg
or
jbe
cmp
cmpsb
lds
fwait
inc
mov
das
sub
xchg
jae
xor
dec
cs
lret
dec
add
int3
fisttpl
sti
sub
sub
sbb
fs
fiaddl
add
inc
mov
or
pop
push
fldenv
sub
aad
call
je
scas
in
rcrb
rorb
fcoml
or
lods
jle
imul
pop
or
je
shl
fs
mov
insl
xorl
insl
mov
inc
jo
jmp
outsb
push
xchg
push
lea
or
mov
sbb
xchg
push
jecxz
aas
or
xlat
dec
cmp
push
lahf
aam
mov
xor
inc
bswap
fdivrs
lea
lahf
add
push
xchg
push
push
sbb
es
sbb
cmp
xchg
lds
adc
cwtl
xchg
test
xor
xlat
jno
lcall
shl
popa
adc
jo
cmp
add
cs
dec
jmp
sbb
dec
test
xchg
popf
cs
xchg
lods
scas
xor
fmul
lret
xchg
adc
mov
repnz
cmp
mov
push
push
arpl
mov
stos
movsl
lcall
jle
cmpsl
out
lret
iret
ja
jmp
aam
xchg
pop
inc
and
jl
sarl
dec
cmp
idiv
fs
bound
scas
jecxz
mov
and
xor
mov
or
ja
data16
cmp
xchg
scas
and
jecxz
mov
fs
pop
out
ds
test
or
xorb
into
push
jbe
ficompl
and
mov
push
icebp
sarb
fnstsw
jb
test
jmp
xchg
mov
inc
mov
xchg
les
xchg
sub
fmull
cmc
movsb
ss
imul
lea
cs
push
and
ljmp
je
sub
mov
xorl
popa
pop
xchg
loope
dec
or
repnz
jno
lods
pop
imul
or
stos
push
mov
sub
or
call
pop
sbb
jl
test
xor
dec
dec
mov
int3
enter
cmp
cltd
fldt
in
push
cmp
lods
xchg
loop
hlt
ret
lods
push
jmp
mov
adc
cmpsl
sub
test
mov
aad
and
sbb
sub
mov
dec
sub
test
jp
mov
out
mov
sbb
dec
mov
or
and
and
and
or
shl
daa
xor
mov
andb
sbb
adc
inc
ret
iret
lds
in
shll
cltd
shll
mov
inc
xchg
jbe
xor
pushf
ss
ja
fdivrl
mov
aaa
stos
jno
mov
out
int
mov
mov
mov
neg
jle
mov
mov
or
adc
leave
repz
shrl
jns
orl
mov
xor
shll
sti
pop
je
repnz
inc
mov
add
jecxz
push
scas
imul
or
fwait
arpl
test
inc
add
cmp
lcall
mov
add
imulb
fldenv
adc
mov
test
hlt
je
lret
pop
mov
pop
adc
dec
mov
cmpl
xchg
stos
xchg
inc
negb
sti
xor
imul
fcomps
mov
and
mov
test
outsb
sbb
add
jae
push
imul
or
in
jp
pop
xchg
fimuls
shll
adcl
inc
xchg
push
aas
sbb
xchg
stos
cmc
mov
ja
jno
xchg
filds
mov
pop
mov
les
fisubl
aad
shlb
dec
out
and
pop
mov
in
test
lock
jne
es
jl
addr16
sub
mov
adc
movsl
ficompl
lret
mov
jbe
cmc
popa
out
mov
xlat
pop
leave
dec
inc
jne
pop
in
xchg
mov
repnz
add
stc
dec
fs
decb
nop
movq
cwtl
jle
imul
mov
push
mov
xchg
clc
sbb
push
mov
lret
xchg
add
jb
jecxz
aad
out
mov
bound
and
mov
and
subb
movsb
xor
mov
test
out
cmc
or
mov
add
or
ljmp
or
ss
xchg
cmpb
and
xlat
and
sahf
hlt
xor
mov
fisubrs
daa
mov
sti
inc
int3
sub
xchg
cmp
adc
xchg
ret
lods
or
std
pop
or
xor
repnz
movsb
dec
fwait
ja
jecxz
das
pop
gs
dec
jo
push
mov
ljmp
xor
mov
imul
xchg
push
sub
and
movsl
sub
movsb
lea
loopne
jns
jno
xor
adc
pop
add
add
in
in
mov
or
je
ret
sti
mov
and
push
mov
out
cld
push
loop
ds
mov
jne
jo
pushf
cli
mov
mov
mov
in
out
jne
mov
fcomp
inc
dec
call
jecxz
mov
data16
aam
test
popl
pop
sub
in
add
cmp
inc
mov
popf
ja
aam
popa
sub
inc
push
push
xchg
bound
cld
fcompl
sub
test
out
mov
adc
stos
cmc
sti
fldcw
aad
sub
xchg
clc
sbb
div
adc
stos
jo
out
add
xchg
push
jns
ljmp
fld
sti
in
lret
clc
aam
mov
lret
nop
sub
scas
repz
jge
sti
adc
lcall
inc
mov
mov
jmp
push
iret
mov
sbb
or
pop
cmpsb
or
inc
and
call
mov
fistpl
mov
test
cmc
das
mov
lea
xorl
adc
dec
jge
adc
or
xlat
jecxz
insl
rorb
jge
in
sub
cmp
int
aad
jecxz
mov
aaa
dec
pop
sahf
repnz
js
push
sti
mov
pop
adc
incb
mov
xchg
inc
push
aam
mov
jecxz
movsl
adc
xchg
xchg
add
xchg
mov
mov
out
rcrb
stos
in
add
cmp
xor
arpl
pusha
inc
and
test
add
scas
repz
lahf
mov
dec
add
lret
mov
ja
jns,pn
inc
inc
cmp
stos
and
jns
mov
pop
xchg
or
xor
xchg
or
mov
or
sub
sti
inc
jb
out
shll
pop
dec
in
pmaddwd
inc
add
out
push
mov
and
ficoml
fbstp
xchg
cmc
push
decb
repz
add
jmp
pop
or
mov
cwtl
repnz
orb
test
xorl
rorl
pop
adc
jo
mov
pop
dec
das
bound
in
jle
jo
mov
jbe
pop
pushl
xchg
inc
dec
aaa
dec
fs
lds
and
adc
dec
sub
sarb
jns
mov
rol
xchg
ret
sub
lret
add
sub
dec
sub
pop
ja
icebp
mov
call
rclb
loopne
pushf
push
sub
mov
push
sub
cmp
test
test
ret
inc
les
fldenv
jne
fdivr
xchg
lds
clc
add
sub
xlat
pop
mov
loop
pushl
out
sti
inc
pusha
xchg
stos
notb
mov
icebp
or
pop
iret
lea
lds
sbb
in
pop
sarb
in
nop
add
gs
out
test
jmp
push
cld
test
jno
or
jge
rcll
xchg
ret
xlat
xor
lea
loopne
cmp
pop
in
ljmp
leave
jb
addb
or
push
pushf
push
orl
test
add
ljmp
in
dec
cmc
std
dec
rorb
lret
push
push
movsb
mov
lds
mov
mov
xchg
vbroadcasti32x8
in
rcrl
xor
mov
sub
mov
fiaddl
or
fisubl
scas
dec
popf
nop
cmp
in
mov
cmp
dec
imul
scas
cmp
andl
pop
mov
mov
pop
lret
push
aam
cwtl
inc
add
lock
add
jp
js
jnp
scas
popf
pusha
jne
or
sub
mov
pop
jle
das
clc
cli
rclb
and
dec
les
cltd
out
push
sub
pop
orb
jle
cltd
fisubs
icebp
addb
aam
rclb
mov
push
outsl
mov
inc
inc
or
pop
xchg
push
xor
ss
cmp
popa
xor
mov
faddp
in
xchg
mov
arpl
xchg
add
xor
stos
sbb
test
adcl
and
popl
and
cltd
lock
add
jp
insl
dec
adc
jo
fwait
repz
jmp
shrl
sub
xlat
pop
adc
fstps
test
fcompl
ret
sub
xchg
ss
or
mov
fwait
ret
pop
stos
stc
and
push
loop
aam
test
out
lods
and
mov
jp
cli
ficomps
sub
inc
test
push
adc
pop
sti
ret
lods
push
dec
add
fistpl
sub
push
mov
fdivrl
mov
inc
xorb
mov
mov
adc
mov
popf
pusha
mov
aam
xchg
pop
out
rcr
movsl
out
xchg
dec
in
test
roll
popl
idiv
mov
jecxz
mov
out
and
flds
sti
leave
dec
rcr
lahf
mov
mov
addr16
push
test
sub
cmp
test
jb
sub
jbe
lcall
call
aaa
and
jg
push
mov
scas
subb
or
inc
mov
inc
sar
bound
call
shrb
xor
popf
jne
mov
fnstcw
scas
cmp
sub
loopne
sub
push
shl
mov
ljmp
mov
gs
cmp
mov
and
pop
enter
sbb
cmp
mov
add
pop
cs
sbb
int3
lods
aaa
pushl
cmp
test
jns
outsl
loop
cmpsl
cmpsb
sub
clc
mov
cmp
inc
inc
pop
xchg
movsb
inc
lret
add
adc
mov
dec
nop
adc
int3
ljmp
loopne
jbe
adc
mov
mov
loop
hlt
sub
gs
sbb
outsl
add
jle
cmp
mov
xchg
pushf
push
add
or
pop
add
fistps
lea
or
jge
sub
aam
xchg
dec
mov
jno
mov
cmp
mov
dec
xchg
js
in
xchg
push
or
loop
scas
pop
test
cmpl
mov
scas
mov
add
mov
xchg
arpl
mov
push
test
dec
mov
imul
incl
sahf
hlt
into
loope
leave
and
ret
push
nop
pop
imul
inc
and
scas
mov
dec
jno
mov
dec
mov
mov
mov
push
dec
gs
hlt
dec
adc
jbe
out
je
push
popf
fistl
mov
jno
push
pop
mov
pop
pop
push
inc
or
aam
incl
mov
sarb
sbbb
sti
fwait
xchg
add
sbb
subb
pop
mov
pop
imul
gs
xor
jp
push
ss
or
aas
jb
ficomps
and
js
rorb
stc
push
movsl
xchg
fs
sbb
cmp
jnp
inc
rcr
in
insl
arpl
pop
stc
test
nop
cwtl
call
loopne
sahf
sbb
add
leave
pop
mov
sub
xor
testl
dec
xchg
mov
jne
leave
xor
inc
out
ret
es
les
push
and
push
subb
je
xor
sub
cmpb
shll
jl
adc
dec
test
xorb
fsubr
or
rol
inc
gs
push
stos
icebp
ljmp
insl
stos
clc
fdivs
pushf
incb
in
rclb
fwait
shr
ficompl
addl
sarb
ret
dec
mov
movsb
imul
jb
mov
pop
jne
imul
mov
orl
pop
inc
jbe
and
mov
jb
jg
pusha
or
subl
aas
mov
loop
mov
inc
scas
jb
fst
mov
mov
into
xchg
mov
in
push
add
int
inc
lret
pop
aaa
sub
mov
mov
nop
jns
rcr
rcll
cmp
dec
adc
fs
adcl
push
pop
push
mov
sarl
sti
mov
stos
test
std
sub
jle
xlat
push
call
fsubrl
fwait
les
adc
or
adc
adc
fsts
or
and
mov
mov
push
mov
add
fnsave
out
xchg
test
and
ror
push
or
popa
repnz
ss
adc
fildll
mov
loopne
out
push
pop
insb
mov
and
dec
mov
stos
add
popf
push
rcrl
xchg
stc
movsb
outsb
les
cmc
vpunpcklqdq
add
push
or
mov
imul
cmp
in
out
and
scas
das
test
scas
mov
mov
fldcw
mov
xchg
stos
inc
sbbl
jl
aaa
mov
jo
popa
or
adc
jle
adc
dec
adc
mov
adc
cld
mov
jmp
sbb
stos
out
cmp
fucomip
add
xorl
clc
int3
push
imul
gs
push
sbb
or
sbb
out
inc
xor
xor
cmp
and
inc
mov
xchg
inc
push
in
mov
in
cmp
lcall
lret
pop
mov
test
xor
or
jge
cltd
xchg
sub
xor
testb
jmp
mov
loop
nop
inc
mov
pop
push
cli
jns
nop
xlat
jbe
cltd
lock
mov
jp
cld
pop
sbb
and
push
lds
icebp
sbb
jge
dec
popa
inc
jo
mov
push
stos
mov
ja
movsb
cmp
ret
xor
dec
pop
aam
adc
aam
add
push
lds
mov
negl
jmp
std
decb
out
fs
ss
stos
fstps
add
xor
xchg
xchg
pop
into
es
mov
rcr
cli
xchg
ljmp
outsl
nop
popf
xor
test
pop
mov
inc
xchg
and
popf
cmpsl
jp
rorb
mov
adc
jae
dec
rorl
scas
mov
or
fnsave
dec
out
cli
insb
fnstcw
icebp
outsl
movsl
ds
add
cltd
cmp
and
dec
jge
xchg
push
js
and
adc
or
and
fidivrs
call
xchg
cmc
scas
push
fldl
push
cwtl
and
cwtl
mov
jne
int
cmpsb
mov
sub
mov
test
test
pop
nop
fs
mov
dec
bound
into
loopne
push
or
test
lcall
cwtl
cmp
pop
jb
xchg
shlb
pop
mov
mov
mov
pop
push
inc
mov
jmp
popa
jg
scas
xor
ja
push
inc
jmp
in
xchg
and
outsl
movsl
inc
cmp
rclb
cwtl
pusha
out
xchg
ljmpw
mov
clc
test
or
mov
int3
sti
cmp
repz
aas
jno
and
xchg
xchg
sarl
cmc
jns
arpl
rorl
in
and
push
pushf
xchg
mov
push
add
inc
in
mov
fptan
movsb
pop
dec
jbe
shll
int3
push
mov
pop
in
outsb
lahf
cmp
pusha
in
sti
mov
pavgw
pop
and
sub
test
mov
sub
test
dec
test
out
mov
or
cmp
ret
dec
xor
ss
int3
in
cmp
and
sub
cmpsl
clc
cmp
pop
scas
jbe
lods
push
push
jne
push
xor
or
shll
mov
mov
fnsave
and
xchg
int
jg
out
dec
icebp
arpl
loopne
ss
lods
sub
dec
lds
ja
mov
adc
les
sub
mov
sbb
dec
nop
adc
test
xchg
pop
pop
lahf
mov
out
ret
inc
sbb
mov
mov
jo
pop
arpl
mov
inc
push
repz
xchg
inc
rorb
js
push
push
pop
fnstsw
push
cmp
jmp
jne
daa
shll
sub
jne
aas
push
xchg
insb
or
push
daa
or
push
push
cmp
jo
scas
loop
cli
fwait
jmp
mov
dec
or
out
sub
add
cmp
rcr
cli
in
daa
push
and
das
enter
cmp
xor
test
xor
aaa
sahf
cltd
imul
fadds
add
aad
mov
loopne
mov
enter
pop
push
inc
xchg
imul
adc
pop
xor
test
push
icebp
xchg
xor
ret
stc
mov
loopne
xchg
loopne
out
or
and
repnz
icebp
and
xor
sarb
pop
xchg
xor
xchg
inc
outsl
add
notb
lret
loopne
fisubrl
std
mov
sbb
jp
xchg
sbb
leave
insl
push
out
mov
stos
or
push
sbb
movsb
and
cli
std
adc
dec
fcoms
jo
faddl
dec
jle
pop
xor
lret
xlat
adc
xlat
sub
outsl
xchg
add
xchg
jmp
mov
repnz
pop
and
sbb
push
gs
push
ss
test
fsubrl
pop
aaa
inc
hlt
mov
pop
dec
lahf
bound
int
pop
jns
mov
adc
jne
and
xchg
mov
sub
mov
dec
push
mov
rclb
push
pop
mov
roll
fsubp
mull
pop
pusha
mov
imul
mov
mov
cli
xchg
mov
mov
jne
insl
mull
dec
div
es
sbb
pushf
ret
jp
pop
repz
popa
mov
imul
iret
mov
sub
cmpsl
cmc
rcll
imul
out
xor
mov
inc
adc
shl
ret
cmpsb
gs
dec
fists
and
mov
das
mul
and
and
dec
jmp
nop
test
add
dec
xchg
sub
or
cltd
rcll
int3
cwtl
push
dec
test
lcall
test
lock
adc
arpl
lret
aaa
jmp
sbb
fs
dec
and
pop
xor
lock
sub
dec
mov
inc
clc
loope
movsb
daa
xor
mov
push
inc
push
je
hlt
xchg
push
mov
jne
test
popf
leave
xor
dec
incl
mov
dec
pop
gs
out
fxam
hlt
pop
fwait
push
incb
pop
xchg
mov
push
or
xchg
in
push
mov
pop
jg
dec
cwtl
jmp
and
js
dec
jl
mov
je
lret
push
and
fs
ss
sbb
aas
fldcw
shrd
or
and
dec
push
jne
dec
daa
cmp
or
sub
data16
push
and
fdivs
cmpsl
fcompl
jle
xchg
or
subb
stc
call
cmc
jo
pop
dec
add
mov
mov
hlt
jecxz
push
sub
push
pop
fwait
xchg
out
adc
out
scas
dec
cs
and
or
scas
addb
adc
arpl
push
mov
mov
adc
cmp
es
pop
adc
bound
fs
inc
scas
rcl
mov
xchg
dec
xchg
xchg
cmc
popa
outsl
inc
inc
cli
orb
jno
or
mov
pusha
out
aaa
sub
pop
mov
dec
and
cmp
jae
jnp
iret
sub
pop
cli
cwtl
fnstcw
out
lret
cmp
arpl
and
test
negl
inc
dec
pop
pop
gs
js
jle
jmp
inc
push
cmp
mov
ret
cmp
lahf
pop
lods
sti
stos
fdivrl
push
push
cld
popa
add
or
xchg
mov
clc
sti
pushl
mov
mov
shll
mov
in
mov
mov
cmp
and
aam
pusha
xor
inc
outsb
fcoms
push
push
push
clc
adc
sbbb
push
fsubr
inc
scas
xchg
nop
and
fwait
push
rcrl
les
scas
inc
outsb
jg
xor
cmp
inc
cmp
or
pop
sbb
outsb
ret
xchg
cld
jp
mov
dec
inc
inc
mov
mov
add
cmp
cmp
adc
mov
call
addr16
lret
data16
adc
sub
mov
jns
cli
mov
mov
test
add
mov
lods
mov
xor
mov
out
mov
pop
cmp
mov
sub
mov
ret
mov
mov
cwtl
mov
in
add
jnp
sti
and
fnstsw
pop
xchg
xchg
pusha
outsb
shr
sub
scas
xchg
shlb
adc
pop
sbb
push
je
mov
inc
movsb
fwait
sbb
rclb
mov
lret
add
adc
and
jne
test
pop
setg
sbb
in
xchg
adc
push
jo
push
lods
bound
addb
repnz
mov
adc
movsb
inc
adcl
nop
in
mov
xor
mov
call
stos
mov
cmpsl
imul
out
fs
lret
xchg
cld
insl
mov
out
lahf
stos
data16
cmc
xchg
lods
mov
mov
pop
mov
xchg
cmpsb
jo
xchg
and
xchg
mov
cmpsb
popl
popw
inc
scas
outsb
push
xchg
mov
xchg
loopne
mov
mov
fnstenv
pop
enter
xor
xor
into
xchg
jnp
add
iret
sub
ret
sar
aas
fsubrl
cmpsl
in
cltd
sbb
int3
push
xchg
aaa
jo
mov
test
outsl
push
adc
and
xchg
cmp
xchg
mov
nop
fwait
dec
iret
shll
add
mov
jo
pop
fldl
sbb
adc
test
mov
lcall
mov
xchg
outsl
sbb
pop
or
push
mov
pop
xchg
adc
mov
hlt
out
push
insw
das
jg
fnstsw
inc
pop
in
inc
sbb
jnp
jae
sub
push
add
scas
mov
inc
rclb
xlat
ret
sbb
inc
call
mov
mov
inc
sarl
imul
push
sbb
in
fldl
push
add
enter
sti
stc
lcall
aad
mov
cwtl
push
jg
les
incl
sbbb
mov
das
test
mov
icebp
fcoms
in
cld
adc
cmp
out
jp
xchg
mov
jnp
cmp
lea
je
outsl
mov
out
in
das
pop
pop
jge
xchg
sbb
jnp
inc
and
je
sbb
dec
mov
or
mov
arpl
lea
aad
and
pop
mov
les
movsb
xlat
jmp
mov
rclb
out
sub
mov
aam
add
inc
aaa
testl
and
repz
out
and
mov
loopne
loope
jge
adc
jae
jnp
mov
sbb
bound
idivl
int
test
mov
fdivl
inc
aaa
push
icebp
push
adc
xchg
push
pop
cwtl
sub
jg
pop
sbb
adc
adc
ficomps
cwtl
sub
xchg
cmc
or
mov
test
ljmp
outsb
fs
cmp
mov
mov
dec
mov
mov
ror
aam
pop
mov
bound
jo
lcall
ja
arpl
lds
fmull
mov
fistpl
mov
pop
xlat
enter
shrb
aas
pop
and
cmc
xchg
stos
cli
scas
mov
ljmp
mov
jp
out
inc
jne
aas
fimuls
dec
jnp
lods
stos
mov
fsubrl
ret
stos
ret
push
jnp
aaa
sub
lahf
mov
std
fcmovu
push
inc
mov
push
in
sbbb
push
push
adc
sub
add
insl
cmp
movb
mov
aas
imul
mov
cmp
dec
xchg
stos
dec
mov
pop
xchg
pop
pop
push
ficomps
xchg
mov
push
jl
pop
mov
ret
mov
add
sbb
adc
sbb
pop
dec
and
das
jno
popf
mov
jae
aad
scas
stos
xlat
pusha
add
sub
cmpb
mov
jmp
mov
jmp
repz
and
add
pop
rclb
ds
push
test
cmp
jmp
adc
fsubrs
xor
lret
push
mov
popl
mov
push
mov
lock
mov
fsts
lods
xchg
jmp
dec
cmpsb
xchg
add
xchg
adc
call
das
push
adc
mov
push
inc
adc
stos
into
test
jge
ds
sub
adc
xchg
add
adc
pop
xor
decb
push
cs
fiadds
test
lahf
xchg
into
je
lock
gs
sbb
int3
outsb
mov
cwtl
jecxz
xchg
repnz
int
dec
lods
adc
cltd
lret
nop
fidivl
int
sbb
insl
rcrl
add
mov
push
inc
and
into
test
in
ja
lds
add
adc
mov
jge
test
xor
ja
pop
and
push
push
cmp
les
and
fildll
sbb
ja
out
in
call
fdivl
ljmp
loop
cmc
mov
pop
mov
sub
cli
cmc
xchg
mov
jne
dec
shrb
fmull
sub
cli
add
or
scas
sub
mov
jo
mov
aaa
sarl
sbb
xchg
xchg
je
add
cli
sub
and
arpl
jge
cli
test
into
pop
jmp
cli
pop
inc
sub
push
mov
cs
inc
xchg
pop
les
adc
into
in
jnp
mov
dec
stos
in
test
stos
add
push
sbb
in
sbb
mov
fdivr
in
or
addb
lods
inc
mov
sbb
call
pop
xchg
or
jne
clc
jge
jp
sti
loopne
fiadds
mov
stos
mov
cmpsb
stos
cld
pop
icebp
fcmovnu
push
lods
cmpsl
mov
cmp
rcr
fidivrl
test
shll
pushf
mov
mov
mov
ja
push
xor
fcmovb
js
aas
jecxz
inc
adc
arpl
xor
sbb
jno
pusha
leave
fsubr
jmp
in
push
fcmovnu
sub
dec
pop
in
in
jne
lods
fsubrl
sub
sub
push
add
adc
sti
into
fidivs
and
pop
stos
clc
inc
push
cld
shll
push
xchg
clc
aam
fwait
outsb
icebp
mov
sub
ret
pop
lods
sub
sbb
aas
push
jl
test
repz
scas
mov
push
pop
adc
aas
cmp
fstl
int
sahf
out
scas
fs
add
push
sbb
mov
cwtl
cld
out
imull
pop
cmp
adc
pop
push
sarb
inc
es
xchg
jg
inc
sti
sbb
pop
sbb
or
push
pop
fldcw
iret
outsl
mov
adc
xor
sbb
imul
sbb
aam
adc
fstps
push
fwait
insb
inc
lods
dec
inc
jp
sbbl
mov
sbb
jne
add
outsb
stos
adc
xor
mov
call
fisubl
insb
mov
add
sahf
adc
arpl
dec
pop
aaa
push
mov
push
inc
fstpl
pop
arpl
scas
push
out
lods
lods
cwtl
out
sbb
xchg
jo
dec
inc
pop
xor
shll
dec
push
or
rcrl
dec
xor
leave
cmp
add
lcall
lcall
cltd
inc
add
shll
dec
add
roll
cmpsb
mov
rcl
dec
enter
xor
adc
imul
and
lcall
dec
ljmp
ret
shrl
dec
jo
xor
rcll
movsb
fimuls
cmpsb
fcmovbe
lcall
lcall
cltd
and
rcll
sbb
xor
shrl
dec
shlb
rorl
cmp
dec
adc
imul
mov
mov
fisubl
sti
ret
call
shl
dec
leave
shlb
rcll
mov
pushf
add
mov
add
add
sbb
loope
sub
in
fs
push
out
pop
mov
and
pop
clc
sahf
xchg
add
out
push
cmp
sarb
emms
inc
add
mov
jbe
stc
or
add
js
inc
rorb
sub
add
scas
sbbb
frstor
mov
cli
add
lret
add
push
test
sub
rcl
pop
mov
imul
and
pop
xor
and
and
fldenv
add
movsb
loopne
dec
push
jp
add
les
enter
jge
leave
repz
push
pop
in
mov
fbld
add
lods
repnz
mov
push
ss
es
sbb
add
xor
inc
xlat
aas
ret
fsubp
add
pusha
mov
adc
insw
and
notl
add
dec
pop
je
ret
outsb
add
push
jg
in
int3
dec
add
sahf
jb
mov
cwtl
push
add
lcall
mov
insb
xchg
xchg
int3
pop
cmp
jp
mov
sbb
dec
add
jbe
adc
in
add
xor
pop
add
popa
sub
std
mov
add
jmp
jecxz
je
ret
jp
or
add
jns
add
cld
insl
aaa
add
pushf
ss
jge
outsl
pop
cmp
adc
stos
mov
push
cmp
das
notb
xchg
mov
popl
mov
stos
cmc
push
stos
xchg
add
sub
push
add
call
mov
shlb
xchg
push
stos
sbb
sub
leave
pop
ret
xchg
add
add
outsl
inc
clc
fisubrl
inc
ja
push
sub
lcall
adc
icebp
ret
mov
out
add
dec
clc
call
aad
pop
sti
adc
bound
mov
icebp
fstps
add
pop
add
fwait
pop
or
call
or
scas
mov
add
lahf
mov
add
sbb
adc
and
push
dec
adc
sbb
sub
mov
cmp
inc
or
test
popf
push
cli
lcall
out
mov
aam
adc
jae
add
jmp
roll
addr16
insl
adc
hlt
add
mov
push
or
cltd
pop
xor
lahf
xor
inc
and
push
stos
dec
add
daa
ds
xchg
mov
enter
sub
pop
push
call
add
stc
movsl
add
repz
mov
repz
and
push
jmp
inc
add
xor
add
fisttpll
add
scas
divb
add
mov
mov
pop
popa
sbb
push
add
cs
pusha
add
ljmp
ficompl
xlat
xchg
add
push
fxch
out
jecxz
add
pushf
jbe
jl
in
enter
push
in
xchg
mov
pop
dec
popa
ja
jl
bound
xor
mov
add
gs
push
add
dec
cmp
hlt
call
fwait
xor
add
lahf
faddl
mov
stc
add
arpl
push
iret
push
inc
pusha
add
jne
stc
movsb
out
int
cmpsl
xchg
movl
mov
jecxz
addl
xorl
xchg
inc
call
jmp
mov
and
or
std
push
scas
sbb
dec
mov
pop
pusha
xor
sub
test
push
leave
push
jecxz
inc
dec
mov
inc
aas
push
lds
sub
lret
divb
sbb
test
and
add
jecxz
jb
pop
dec
add
xlat
jl
aaa
inc
insl
add
stos
fcomps
fsubs
add
mov
stos
pop
add
xor
das
and
pop
stos
add
adc
and
rorb
mov
outsb
std
fucom
add
outsl
inc
aad
sbb
cwtl
add
cltd
jae
adc
out
add
add
loopne
nop
aad
add
jo
stos
mull
inc
test
scas
add
repnz
pop
add
or
fistpl
ret
adc
test
test
dec
dec
xchg
mov
push
pop
dec
and
imul
pop
aas
aaa
popa
iret
lea
insb
push
cmp
xor
sub
and
pusha
sub
dec
lods
dec
xchg
add
adc
adc
inc
pusha
pop
into
pop
add
dec
push
dec
dec
xchg
add
pop
push
push
pop
pop
add
pop
push
push
inc
dec
inc
add
dec
pop
dec
dec
scas
orl
pop
cmpsb
dec
xor
and
mov
popf
cwtl
xchg
movsb
xchg
mov
add
mov
scas
mov
add
sbbb
int
xchg
pop
loop
xchg
mov
popa
mov
pop
xchg
repnz
adc
sbb
push
cmp
aam
aas
int
push
push
adc
cmp
adc
add
or
mov
adc
push
enter
sbb
add
inc
inc
inc
rolb
dec
dec
pop
xor
mov
add
loop
jge
outsb
and
inc
cmp
cwtl
jns
jbe
sahf
cmpsb
add
mov
mov
movsb
imul
cmp
sub
mov
push
push
in
jns
ljmp
dec
mov
cmp
mov
je
jecxz
mov
je
jge
lock
inc
push
mov
inc
stos
or
mov
push
inc
bound
popl
sbb
ret
insb
mov
mov
inc
cs
cmp
cmc
ljmp
cmp
push
push
stos
clc
rclb
in
out
in
into
jp
call
iret
pop
xor
shrl
push
pop
jo
lock
pop
dec
push
pop
sbb
xabort
mov
jno
icebp
sarl
loope
bound
dec
push
ror
fwait
lahf
daa
mov
mov
push
adc
pusha
movsb
int
les
mov
stos
mov
lods
push
fcmovu
pop
gs
pop
test
add
nop
mov
push
jno
lea
cmp
test
cwtl
mov
int3
mov
sub
sub
pop
add
push
sbb
adc
jle
aas
or
dec
add
push
sub
push
pop
into
adc
push
xor
pop
and
mov
add
cmp
out
mov
adc
mov
pop
inc
dec
js
mov
decl
or
dec
cmp
je
scas
inc
imul
jnp
xchg
inc
and
inc
dec
inc
arpl
enter
add
movsl
mov
test
xchg
lret
sarl
inc
add
out
or
add
xchg
inc
add
adc
adc
movsb
daa
movsb
xchg
subb
popf
push
icebp
adc
pop
cmp
or
stos
fwait
scas
mov
adc
mov
outsb
inc
cltd
jne
je
or
dec
pop
mov
jae
pop
lods
mov
sbbl
sbb
jnp
shrl
fwait
sbbl
insl
lret
rcl
mov
cld
filds
xchg
sarb
hlt
push
fldl2e
mov
out
jns
ret
loop
jnp
push
inc
push
data16
das
and
mov
sub
out
xchg
jl
mov
cmc
lds
fdiv
fildl
inc
popa
les
arpl
rcll
shrb
push
test
cmpsl
xorl
dec
or
mov
mov
jns
lcall
hlt
mov
in
loopne
std
sbb
out
push
jnp
incb
sub
xor
sbb
push
insb
xor
lods
and
and
clc
xchg
jle
je
cltd
loop
popa
out
adc
and
bound
push
jle
subb
sarl
inc
cmp
test
sbb
push
jg
outsl
dec
lea
test
pop
jmp
pop
cld
negb
in
shrb
sti
mov
cmp
shlb
pushf
ss
push
stos
mov
cmc
and
imull
jbe
push
and
push
jl
jmp
je
dec
push
jl
xor
and
lea
push
mov
jno
xchg
lods
jle
aam
clc
int
pop
mov
rcl
cld
sub
fldcw
pop
mov
lcall
push
cs
xor
scas
and
movsb
stos
pop
or
push
fcomi
in
je
fidivrl
std
es
scas
cmp
push
pop
mov
and
cltd
lea
adcb
mov
repz
fsubrs
test
cmp
jne
sti
sub
push
inc
rcrb
push
scas
fwait
adc
xor
push
add
in
aam
pushf
sub
sarb
jmp
add
adc
push
cltd
out
inc
data16
push
stos
aam
gs
inc
mov
mov
je
pop
out
out
xchg
sbb
mov
mov
mov
repnz
iret
push
cwtl
mov
aaa
mov
sti
cmp
and
idivb
inc
int3
inc
jp
xchg
add
lret
in
ficompl
pusha
mov
push
sbb
push
push
jl
jl
cs
lds
dec
jns
imul
decb
mov
sbb
lcall
test
mov
adc
cmp
lret
fcoml
sbb
xor
xchg
aam
repnz
lret
pusha
sti
pop
jbe
inc
mov
lret
adc
push
jns
jne
pushf
pop
pop
jae
add
mov
scas
outsl
inc
stos
inc
fcmovu
sbb
sbb
subb
pop
iret
mov
fidivrl
jg
mov
jb
sbb
mov
sub
mov
sbb
mov
and
sub
sub
nop
xchg
push
push
repz
repnz
nop
dec
pop
push
out
cmpsb
xchg
add
adc
pop
inc
cmp
pop
pop
aaa
fdivrl
int
outsb
jb
and
pop
push
add
and
xor
mov
jo
je
and
aam
data16
jmp
outsb
fadd
arpl
fnstenv
jl
in
orl
add
add
pop
lret
jns
push
enter
or
fbstp
fldcw
add
scas
pop
sbb
pop
mov
stos
xorl
dec
loopne
mov
cltd
inc
inc
or
pop
or
enter
dec
and
movsb
jg
add
outsb
addb
fcompl
push
adc
pop
jmp
push
loope
push
aas
add
jo
adc
mov
add
jnp
inc
add
mov
add
or
xorl
and
inc
jmp
das
roll
mov
xchg
nop
aam
stos
into
pop
add
or
addl
jo,pn
add
xor
popa
loopne
clc
pusha
scas
and
in
mov
sub
aam
push
fsubs
add
int
sti
ljmp
lret
sbb
inc
outsl
xchg
sti
and
cwtl
ja
mov
mov
mov
test
add
cmpsl
data16
test
jmp
mov
test
pusha
mov
or
rolb
hlt
xchg
jb
xchg
pop
shr
gs
scas
mov
lret
cltd
xchg
mov
cs
add
nop
mov
test
push
or
aam
pop
add
cwtl
rorl
mov
inc
ss
jnp
mov
xor
sbb
xor
jmp
popa
mov
out
dec
std
pop
push
dec
jnp
cmpsl
pop
push
dec
lret
push
repz
adc
mov
sbb
mov
sbb
pusha
je
into
orps
push
sbb
lds
cwtl
xor
popa
nop
movsl
pushf
mov
push
repz
repnz
incb
pop
and
mov
clc
stos
pop
and
jnp
cltd
decl
add
popa
mov
fs
sbb
push
pusha
sub
pop
mov
sub
cltd
scas
andnps
movsl
dec
jg
cmp
jns
aaa
dec
jge
dec
pop
xor
xor
and
or
pop
das
mov
lods
bound
and
xchg
adc
test
push
push
lock
mov
inc
shr
mov
add
cmp
out
lahf
xlat
rorb
adc
push
or
cmp
scas
cmp
movl
lcall
out
shr
icebp
stos
lret
mov
lret
scas
xchg
cwtl
mov
mov
pushf
dec
idivw
cmpsl
cmpsb
or
ljmp
or
fiadds
rolb
in
add
cmc
daa
gs
in
rolb
rol
mov
loop
add
or
addb
add
add
lea
jp
mov
push
jbe
repz
add
clc
xor
mov
sub
sbbb
xorl
mov
adcb
lods
sti
cld
add
data16
ljmp
jnp
repnz
add
jle
je
fdivl
add
fwait
ret
push
inc
pop
xorb
inc
add
jb
popa
adc
fwait
sbb
cli
xchg
ja
fidivl
push
xor
cwtl
add
daa
add
adc
add
inc
inc
clc
jno
leave
add
dec
and
pop
mov
mov
pusha
mov
rcl
adc
add
cmp
insb
pusha
adc
inc
jne
dec
sbb
dec
xorb
rcrb
push
dec
xor
outsb
mov
xor
inc
xor
sahf
fsubrs
mov
mov
push
dec
add
add
or
xchg
test
mov
or
mov
xchg
popl
lods
mov
xchg
mov
ret
call
shll
or
fstps
mov
dec
repz
push
xlat
int
call
and
cld
insl
incb
pop
inc
inc
inc
inc
push
dec
add
nopl
jne
arpl
cmp
aas
xor
sbb
insb
and
inc
bound
outsl
push
jbe
jg
and
adc
popa
fildll
int3
aad
clc
iret
sub
arpl
cmp
xchg
pop
or
or
imul
add
scas
in
lcall
inc
add
pop
inc
inc
inc
inc
push
dec
mov
cmp
jne
cs
adc
test
xor
pop
cmp
lret
ret
dec
push
and
ljmp
adc
and
mov
xor
push
sbb
mov
cwtl
pop
xchg
jle
enter
and
test
sub
movb
cmp
push
ret
jmp
add
adc
insb
ss
sbb
outsl
lcall
push
pop
xchg
sbbb
imul
push
out
repz
rcll
xchg
sub
lea
cwtl
cmp
xor
leave
push
push
pop
cmpl
xchg
daa
movsb
ret
aas
adc
lods
incb
orl
pop
es
movsb
pusha
gs
in
xor
les
leave
pushf
adcl
add
add
cmpsl
push
sbbl
dec
add
push
or
inc
rol
xor
xor
les
xchg
int
punpckhbw
pop
cwtl
sbb
adcb
sub
lock
mov
jo
xchg
shll
repz
int3
popa
test
mov
jnp
hlt
mov
sub
xchg
adc
jle
mov
jnp
sbb
sbb
int
adc
and
inc
mov
loope
pop
push
lods
push
push
stc
mov
int3
mov
bound
jne
cmpsb
mov
or
mov
push
jp
add
pop
repz
cmp
out
mov
int
mov
cmpsb
or
or
fcomp
sbb
lcall
fwait
xchg
xchg
movsl
jno
les
fistpll
push
lods
jae
pop
cs
xor
dec
adc
and
pop
xchg
or
jecxz
push
jo
push
or
cmp
pusha
mov
outsb
data16
loopne
rclb
jns
aas
push
lret
stos
cwtl
pop
out
dec
add
andb
fadd
out
nop
insb
fldenv
add
mov
xchg
xor
loope
xchg
and
or
push
jb
in
dec
loop
fildll
sub
add
adc
sbb
mov
sub
cmpsb
loopne
inc
pushf
jno
mov
les
push
cwtl
lock
add
test
cmpl
test
mov
mov
in
adc
pop
out
cmpsb
cmpsl
sarb
dec
push
cmpsl
jl
xlat
ret
dec
out
cmpsl
mov
test
in
sbb
jecxz
pop
cltd
in
test
jne
divl
je
mov
jb
sub
arpl
pop
or
or
sbb
mov
cs
adc
dec
dec
pop
lret
aad
xchg
push
outsb
or
sbb
mov
inc
jg
mov
subw
sbbb
les
cmp
push
mov
add
xchg
test
or
sbb
ljmp
notb
pop
movsl
and
popa
sub
add
mov
dec
add
adc
add
mul
ss
rorl
xchg
xchg
jne
addb
into
inc
jle
bound
js
push
iret
jle
aas
add
leave
and
cs
dec
imul
or
jmp
mov
ds
sar
add
es
je
or
add
inc
dec
and
cmpb
jp
jbe
je
cmp
mov
mov
push
lods
push
and
dec
push
ret
or
bound
adc
add
sbb
xchg
jno
dec
bound
dec
stos
xchg
jne
mov
lcall
mov
inc
decl
pushf
in
sbb
cltd
xchg
inc
xchg
fmull
xor
cmpsb
cwtl
push
push
dec
popf
mov
and
sub
xchg
ret
mov
movsl
add
into
and
xchg
xchg
push
pop
xchg
pushf
inc
fldl
jno
mov
out
add
inc
arpl
adc
lcall
daa
mov
inc
testl
add
push
in
xchg
dec
andb
mov
add
cmp
and
popf
and
sarb
leave
insb
xor
mov
cwtl
psubsw
in
ss
mov
dec
jns
movsl
add
xchg
cmp
add
dec
adc
adc
jmp
add
xchg
into
dec
jno
jle
lods
adc
dec
push
push
mov
sub
insb
loop
xchg
cli
pop
pop
loopne
mov
rcrl
mov
or
cmpsl
insb
cmovne
cmp
pusha
sti
rcrb
fidivl
add
mov
cmpsb
lret
cmc
push
out
mov
inc
mov
mov
mov
mov
mov
add
mov
inc
icebp
out
icebp
fisubs
cltd
negb
mov
xchg
push
cwtl
sbb
icebp
test
andl
push
xor
lahf
sbbl
fs
push
arpl
or
popl
ds
inc
rcl
add
pop
sti
push
add
lret
mov
inc
arpl
and
pop
inc
cmp
pop
ljmp
sub
fcoml
adc
add
lret
loop
or
out
cmp
mov
mov
sbb
lds
inc
jg
or
fdivr
jl
loop
xchg
filds
and
cli
and
aaa
push
sbb
mov
mov
shl
orl
dec
or
mov
cld
test
dec
sub
sarb
ss
jns
cmp
stos
stos
je
mov
popa
or
movsw
xchg
lret
inc
sub
sub
aas
push
cs
pop
mov
dec
test
lock
mov
add
cmp
out
sbb
cmpsl
daa
xor
int3
mov
sub
int
das
xor
test
int3
adc
mov
add
push
sti
xor
jne
jae
add
std
push
andb
xor
xchg
xchg
adcl
xchg
pop
inc
push
add
ss
outsb
ret
notb
aaa
roll
adc
sub
pushf
cmpsb
add
dec
pop
test
mov
inc
in
pop
adc
dec
xor
inc
les
sub
sub
push
dec
and
divb
adc
or
mov
add
and
pop
fcoml
sub
add
leave
sub
and
pushf
push
mov
fcos
adc
add
popa
push
sub
lcall
in
orl
mov
shlb
lods
mov
or
mov
mov
cmpb
std
cmp
addl
stos
sbb
jne
loopne
cmpb
ja
insl
test
sub
ror
in
in
stc
imul
lea
popf
jae
je
xor
push
mov
xor
add
stc
jecxz
push
loope
jl
push
dec
movsl
jno
dec
stos
pop
adc
add
fs
push
cmp
shlb
dec
push
adc
call
sbb
bound
pop
push
cwtl
mov
pop
xor
inc
hlt
add
xchg
pop
pushf
jecxz
movsl
pop
mov
jg
and
add
scas
sbb
cmpsl
inc
loop
jno
and
xchg
sahf
orl
sbb
mov
push
fldt
adc
lcall
loop
sbb
rcr
pop
xor
pusha
inc
push
sbb
jo
and
hlt
scas
cmp
inc
adc
dec
sub
sub
push
inc
scas
in
sub
inc
daa
adc
pusha
push
inc
dec
xchg
pop
sbb
cwtl
xchg
and
test
jg
aaa
daa
pop
xor
pop
rol
sti
iret
lcall
mov
shlb
daa
push
call
js
nop
ret
shlb
int3
ret
test
lcall
aad
adc
js
mov
mov
xchg
xor
cs
fwait
push
inc
jae
add
sbb
ss
inc
and
xchg
push
mov
add
xor
xor
outsl
jo
add
inc
pop
or
out
push
jae
imul
sbb
fistpll
adc
in
jo,pn
lahf
faddl
jnp
incl
in
iret
cld
add
fcmovu
shll
xchg
mulb
mov
dec
push
sub
push
pop
mov
ret
xchg
enterw
sub
pop
pop
mov
mull
xor
mov
mov
xchg
pop
mov
jns
add
jo
jl
jne
sub
cmpsb
xor
or
mov
or
loope
push
ljmp
cmp
js
lret
cs
test
push
mov
xor
push
repz
adc
add
sbb
mov
cmc
push
add
cmpsb
mov
cltd
sub
rolb
push
or
sbb
sti
adc
mov
ffree
insb
in
push
mov
enter
and
add
mov
mov
cmp
test
cmp
adc
shl
in
mov
push
out
shlb
das
dec
sub
addr16
mov
jp
xor
test
fldenv
mov
rclb
xor
fcoml
add
pop
push
push
data16
cltd
mov
jb
push
mov
out
repnz
gs
sbb
hlt
enter
lods
inc
mov
sbb
stos
sbb
or
in
inc
inc
add
jbe
cmpsl
lods
and
cmp
bound
mov
adc
int3
mov
fst
xor
aad
mov
mov
insb
push
mov
and
or
sbb
fnstsw
jl
fdivrl
in
dec
jle
mov
lods
stc
pop
adc
sbb
mov
int3
add
pop
mov
jecxz
movl
fmul
push
pushf
js
inc
dec
in
leave
out
gs
push
mov
sbb
xchg
add
pop
hlt
xchg
mov
push
cmpsb
push
or
lock
sub
cmp
xchg
cwtl
dec
gs
lods
insl
lret
adc
pop
pop
adc
aaa
movsl
cmp
sub
addr16
jg
dec
dec
stos
jnp
call
jle
cli
arpl
and
mov
cli
xchg
ret
dec
imul
add
and
repz
push
pop
cmp
aas
sarb
into
mov
sahf
xlat
cmpsb
lea
mov
cmp
pushf
lods
mov
insb
fwait
repz
jbe
jbe
fadds
xor
or
or
cmp
sub
sbb
adc
pminub
push
xchg
idivb
outsl
fcomp
rol
mov
aaa
jae
mov
and
cmpsl
pop
mov
sahf
lods
ret
mov
ror
int3
daa
xor
inc
pop
push
sbb
mov
mov
xor
mov
push
out
inc
jae
ret
jae
mov
pusha
or
inc
daa
jge
shrb
int3
pop
loope
cmp
scas
xchg
push
adc
cmp
xor
xchg
repz
mov
xchg
push
loopne
mov
or
lods
add
in
add
inc
pop
shll
jno
sbb
xchg
sbb
hlt
mov
push
imul
jb
xchg
shrl
ja
fbstp
loop
mov
jne
and
jae,pn
mov
xchg
rclb
pop
arpl
inc
gs
out
addl
xchg
add
xchg
aaa
jns
jle
pusha
cmp
and
jmp
cmp
cli
cwtl
mov
cwtl
xchg
mov
bound
jl
adc
mov
inc
fsubl
faddl
fs
insb
inc
or
fdivs
adcb
int3
mov
xchg
mov
xchg
in
inc
xor
sbb
sbb
inc
jl
dec
xor
xlat
inc
jmp
fs
and
test
in
inc
add
adcb
rorl
jo
cmp
shrb
pusha
fs
ss
in
nop
lock
xor
enter
arpl
das
adc
or
shl
cs
mov
mov
cmp
and
adc
adc
enter
inc
mov
or
xchg
nop
xor
sbb
dec
cmp
insb
and
daa
or
sti
or
xor
clc
in
or
enter
inc
fisttpll
xchg
lds
andl
mov
fs
test
xor
shrb
adc
sub
xchg
inc
dec
dec
js
pop
dec
mov
in
enter
mov
and
mov
sbbb
iret
out
mov
std
cmpsl
stos
imul
sbb
and
lahf
add
adc
mov
aaa
sbb
out
dec
or
js
mov
in
pushf
hlt
das
add
shll
pop
xor
js
outsb
push
fbld
imul
and
test
pop
pop
add
sbbl
xor
into
push
fldt
pushf
cmp
sahf
lahf
out
vorps
les
fldt
std
jae
cli
lret
test
loop
int3
int
pop
mov
adc
in
add
jle
testl
pop
push
fxch
sbb
int
sbb
xchg
pusha
in
mov
pop
dec
xchg
mov
les
mov
dec
or
sub
dec
subl
mov
adc
adc
pop
sbb
jecxz
rcl
repz
jecxz
cli
pop
cmp
leave
scas
lds
notl
call
sub
imul
gs
sub
mov
mov
in
int3
cmpb
mov
jae
pop
test
pop
cmp
insb
mov
movsl
mov
fcmovnbe
rcll
mov
jae
mov
sarb
loop
enter
pushf
jmp
aas
sub
xor
xor
xor
ret
int
push
pop
call
cli
loopne
ror
sub
ds
aam
mov
sub
adc
dec
dec
dec
or
lcall
call
subb
mov
fnstenv
call
mov
push
push
or
and
xorb
xor
aas
sbb
xchg
mov
rclb
test
call
xchg
push
aad
pusha
xlat
into
ret
enter
push
rorl
mov
icebp
scas
push
fidivrs
popf
push
pusha
out
into
sub
scas
mov
lahf
mov
cltd
pop
cltd
pushf
addl
notb
push
inc
pop
popf
jecxz
mov
scas
inc
or
pop
cmp
adc
sbb
xlat
push
sbb
mov
out
cmp
push
and
mov
xchg
mov
jg
push
dec
push
mov
enter
mov
sub
xor
bound
outsl
lds
cmp
int3
in
lods
pop
je
js
adc
dec
dec
xchg
push
lret
push
ljmp
pop
mov
push
fidivrl
mov
in
out
das
es
stos
push
dec
sub
dec
ja
mov
push
cmp
int3
push
jg
pop
lret
shl
and
pop
scas
mov
es
adc
repz
add
je
push
int
mov
push
cmp
xor
lret
pop
or
aam
mov
cmpsl
mov
pop
mov
int
pop
ffreep
ret
loop
mov
divb
lds
out
adc
inc
dec
ss
ss
dec
xor
test
jae
mov
jae
hlt
push
scas
and
ret
repnz
lcall
lahf
sti
je
icebp
dec
mov
sub
nop
add
jg
jg
cmp
jmp
sub
push
test
gs
cltd
add
outsl
int
dec
enter
jb
inc
sub
xor
push
nop
sub
hlt
sub
int3
pop
in
add
cmc
cmp
pop
out
xor
hlt
xlat
dec
shl
je
loope
ds
inc
xchg
fidivs
ds
adc
movsl
decl
sub
leave
mov
push
jns
add
insb
fidivl
fidivl
imulb
bound
aas
js
cmc
add
push
jb
es
ja
addb
mov
cmovle
imul
test
jns
rolb
pop
sti
fsubrl
mov
pop
mov
fldcw
mov
pop
jo
fucom
push
ffreep
ljmp
insb
mov
rorb
repz
cld
jo
jecxz
stc
and
das
adc
negl
leave
xlat
or
popf
ret
cmp
leave
mov
adc
inc
stc
and
std
lods
ret
out
dec
push
jns
ss
dec
jg
xchg
mov
out
fs
frndint
lahf
mov
enter
dec
push
sbb
pop
push
xchg
cmova
cltd
jo
imul
cmc
push
push
dec
scas
inc
mov
lock
inc
jge
shrl
or
sub
aaa
dec
dec
push
push
sbb
insl
sbb
jg
loop
shll
in
sbb
add
pop
jge
mov
and
mov
adc
in
jg
loop
lret
sub
adc
jno
subl
mov
outsl
loop
sub
loop
fimuls
fisubrl
subl
jl
dec
pop
fucomip
fldcw
les
mov
cwtl
pusha
sbbb
xorl
push
pop
repnz
ja
imul
addl
fistpl
dec
andl
das
mov
add
pop
scas
push
insb
add
pushf
test
sti
ss
vmovdqu
shrl
xchg
clc
outsl
in
inc
cmp
jae
push
arpl
in
push
aad
jecxz
orl
pop
jno
xor
push
pop
push
cmpsl
cwtl
sub
sub
int3
in
lret
sbb
test
xchg
xchg
sub
jecxz
xor
shlb
push
mov
sub
mov
pushf
inc
push
aas
adc
aad
cld
push
mov
insl
push
jg
pop
push
push
jge
xor
in
mov
int3
mov
xchg
dec
push
adc
sub
scas
pop
mov
shl
mov
mov
insl
sbb
xor
fiaddl
push
push
dec
mov
lea
iret
int
out
frstor
sub
cmp
mov
cmp
xchg
mov
add
mov
sub
dec
arpl
pop
stc
call
add
int
movsl
cs
ja
clc
xchg
or
ds
mov
dec
pop
pop
sub
or
pop
scas
push
fldl2e
fnsave
xlat
or
cwtl
loopne
fxch
repz
lods
dec
rcl
pop
enter
imul
mov
cmp
and
mov
xor
mov
rol
cltd
nop
std
cltd
mov
mov
test
int3
sub
ficomps
negl
aam
int3
aad
dec
jbe
pop
jnp
xchg
pusha
stos
negl
pop
loope
loopne
clc
aas
ja
push
out
pop
imul
inc
jo
adc
cmp
cmp
mov
push
cmc
dec
push
stos
shl
jle
out
cmp
loopne
imul
dec
xor
idivl
pop
inc
sbb
inc
pop
fldt
push
mov
outsl
fstl
sbb
jnp
jnp
dec
addr16
fs
fwait
jbe
mul
negb
cmp
rep
rolb
dec
push
fldenv
adc
xchg
insb
mov
ja
cmp
pop
iret
scas
mov
fistps
xchg
lcall
outsl
pop
add
outsl
gs
aam
insl
pop
jmp
xchg
fisubs
imul
loop
push
xlat
stc
push
mov
mov
add
scas
std
ja
ljmp
sub
jno
pop
cmp
mov
shll
shll
fiaddl
pop
aaa
pop
mov
lea
paddsw
push
es
insb
insb
xor
xor
mov
jno
fdivr
push
and
mov
xorl
cmpsl
mov
mov
mov
iret
int
xchg
mov
mov
shr
insb
dec
dec
sbb
cmp
push
sbb
lock
push
repz
pop
es
or
insl
sub
ret
test
daa
int3
jecxz
push
xchg
notl
adc
shll
add
add
fisubrl
sbb
popf
jg
jecxz
std
and
xor
aam
xor
add
mov
or
pop
add
add
sbb
mov
and
sub
sbb
add
dec
cmpsb
mov
dec
loope
xchg
add
and
dec
push
dec
push
sub
and
push
jb
push
jbe
pop
addr16
dec
cvtsi2ssl
lock
fstl
cs
imul
mov
pop
into
ret
cmp
or
cmp
cwtl
sarl
and
push
push
out
in
fldenv
xchg
xor
loop
imul
lcall
inc
jecxz
xchg
or
jmp
out
sarl
ret
xlat
lods
mov
outsl
jg
dec
xchg
aaa
sbb
ret
sbb
xor
jno
fnstenv
enter
mov
cmpsb
lods
mov
icebp
icebp
sub
in
js
jo
pop
xchg
add
sub
daa
outsb
pop
jg
push
aaa
xor
loop
add
sbb
dec
outsb
push
test
daa
and
std
call
jno
mov
test
cmc
add
fs
pop
xor
out
push
test
shrb
add
fwait
mov
fsubrp
and
imul
idivb
xor
int
pop
rolb
gs
out
push
jg
dec
adc
fidivrl
add
or
dec
add
pop
mov
adc
jge
dec
sub
xchg
cmpsb
cmp
jbe
out
mov
es
adc
out
xchg
jp
push
lods
jl
xchg
pop
imul
adc
pusha
push
test
movsl
ja
enter
xchg
pop
test
sbb
cwtl
mov
xor
gs
outsl
mov
subl
mov
jo
cld
mov
sbb
cwtl
xchg
stc
add
push
sbb
repz
icebp
cmpsb
xchg
stos
mov
push
add
cmpsl
out
bnd
std
lock
jno
push
push
adc
test
lds
je
pop
sbb
insl
mov
xor
imul
fsubs
sub
xchg
test
loop
sbb
repnz
xor
clc
sbb
sti
repz
push
repnz
hlt
adc
call
int3
push
sahf
aad
mov
fsubs
hlt
sub
sbbl
loop
inc
push
push
push
out
je
les
sub
filds
mov
or
push
sub
and
jbe
push
ret
pop
cmp
jp
push
dec
lea
js
sub
xor
pop
lcall
into
jb,pn
testl
xchg
aam
cmp
mov
xor
mov
scas
das
mov
xchg
inc
ljmp
jae
xor
fcoms
mov
data16
mov
xchg
jecxz
div
xchg
aas
outsl
jnp
adc
mov
loopne
push
or
push
xchg
mov
or
vcvtpd2psx
shr
push
test
pusha
jb
inc
jecxz
lock
add
xor
test
pusha
sbb
sub
xor
mov
test
sub
jl
sub
imul
mov
outsl
bnd
push
push
das
mov
mov
out
xor
and
sub
int
lods
test
enter
je
test
mov
jnp
sub
les
int
pop
push
in
push
mov
xlat
loope
in
add
in
insl
enter
mov
sbb
inc
sbbl
scas
xchg
ss
inc
xor
mov
outsb
inc
les
jo
cmpsb
add
jecxz
dec
out
lea
pusha
mov
adc
int
xchg
sbb
cwtl
enter
mov
ds
cmp
mov
icebp
in
imul
jbe
int
out
das
aaa
cmp
add
dec
push
sbb
pop
push
and
out
movsb
sub
xor
cs
jmp
enter
jo
xor
stc
lods
icebp
xchg
div
mov
pusha
movsb
jb
js
xlat
popa
outsb
pop
daa
icebp
sbbl
lahf
pusha
fstpt
sub
dec
out
jo
pop
pusha
xor
pusha
or
arpl
jno
arpl
sbb
stos
fcmovu
xor
das
rorl
xor
pop
outsb
sbb
pusha
or
arpl
repz
fadds
lds
arpl
add
or
mov
push
push
or
add
arpl
push
aas
mov
add
add
mov
sub
and
ds
movl
cmc
push
mov
sbb
sub
jne
and
mov
dec
sti
jl
daa
test
push
not
cmp
fistps
adc
adc
push
repnz
sbb
add
pusha
call
jle
ret
add
out
sti
dec
sbb
test
cld
sub
mov
cmp
push
cmp
aaa
fcoms
push
fadds
das
adc
in
sub
stos
mov
popa
pop
inc
push
push
or
inc
or
add
mov
pusha
add
out
adc
add
cmpsl
call
add
fadds
pop
pop
loope
sti
mov
out
adc
cmpsb
xchg
xor
insb
loop
in
add
or
mov
mov
jmp
push
fadds
das
push
pop
cmp
mov
add
imul
add
jae
or
push
cmp
sbb
adc
or
push
lret
add
repz
or
fs
out
out
jmp
ljmp
int
stc
push
xor
mov
add
arpl
jbe
test
sbb
ret
int
lock
sbb
pusha
push
ret
push
scas
dec
pop
int
adc
imul
xor
popa
scas
inc
sub
dec
roll
pop
orl
add
scas
mov
lods
sbbl
add
mov
das
inc
and
pushf
lcall
loopne
js
push
push
in
dec
loopne
jns
pop
ljmp
xor
xor
push
scas
push
in
testb
shrl
pusha
loop
push
outsb
dec
pop
xlat
int
jl
mov
xor
fstpt
sbbl
push
pop
mov
xor
add
ret
aas
sbbl
pop
es
mov
xor
mov
insb
decb
or
popf
ret
je
fs
popl
or
dec
add
dec
pop
push
or
rclb
jno
scas
movsb
sub
pusha
pop
sub
add
cwtl
xchg
fldenv
sub
mull
out
lahf
mov
mov
add
sahf
lods
sti
pop
lret
lds
cltd
sbb
shr
xchg
lock
faddl
arpl
stc
out
push
popa
data16
sti
xlat
cltd
xor
pop
lcall
push
dec
sbb
xor
sti
fwait
sub
gs
jg
dec
or
cmp
adc
movsb
bound
mov
inc
inc
es
inc
sti
sub
ds
xchg
lods
inc
jmp
cmpsb
mov
jmp
test
pop
mov
push
test
pop
pop
inc
testb
lret
lret
mov
clc
xlat
ret
mov
xor
fiaddl
push
mov
xor
push
xor
adc
cmp
and
hlt
xor
pop
xchg
sbb
clc
stc
mov
jl
cmpsb
imul
push
jo
rcrl
mov
jmp
test
mov
jne
scas
mov
test
imul
std
push
push
jecxz
icebp
xchg
in
addr16
in
adc
lret
icebp
aad
neg
in
mov
adc
stos
cmpsl
fwait
pop
or
push
pusha
lock
popf
push
test
sbb
sarl
aam
sub
xor
sahf
repnz
lock
pop
jl
shlb
and
mov
call
int
aad
xorb
xor
sub
jno
mov
stos
xchg
sbb
cld
out
inc
bound
sbb
int3
negl
dec
push
incb
sub
int3
iret
lds
xchg
xchg
xlat
push
mov
mov
sbb
mov
stos
mov
xor
std
jmp
jbe
xor
ljmp
push
xchg
lahf
clc
jns
call
push
xchg
pop
outsb
decb
std
pop
mov
pop
enter
scas
push
adc
or
pop
call
repnz
lea
push
and
imul
aas
movsb
lea
inc
bound
xchg
pop
and
pushf
lea
subb
pop
adc
adc
cmpsl
jmp
push
imul
inc
push
insb
neg
aas
xchg
dec
lret
fdivp
mov
mov
xchg
test
cltd
sub
push
inc
xchg
ret
pop
mov
scas
in
dec
xchg
enter
fisubl
xchg
repnz
fcomi
mov
jns
addr16
pushf
leave
cmp
jae
fcomps
cmc
cmp
mov
das
adc
cmp
data16
xchg
dec
pusha
jb
loop
scas
sub
stos
daa
mov
loope
test
xchg
pop
mov
notb
shll
mov
lock
mov
mov
xchg
and
push
sbb
jmp
cwtl
jns
lret
imul
repnz
adc
hlt
loop
sbb
push
fisubrs
bound
jno
daa
repz
int
push
fldcw
inc
inc
pop
jmp
pop
rcll
data16
fsubr
loope
pop
fwait
mov
and
ficoml
push
int
mov
out
scas
cmp
add
ret
or
mov
pop
dec
or
and
mov
ret
adc
fcomi
sti
jmp
adc
test
jae
cmpb
or
add
or
into
test
fsts
mov
sbb
and
push
aaa
mov
cmp
dec
loopne
icebp
dec
xchg
inc
cmpsb
mov
bound
cwtl
mov
fistpll
mov
pop
insb
cli
mov
cs
mov
in
call
pop
repz
xor
stos
repz
and
cmp
pop
adc
rcrb
sub
mov
test
adc
mov
daa
push
pop
xchg
pop
inc
jnp
testl
call
fnsave
movsl
push
movsl
mov
cmp
rorl
mov
mov
xor
mov
ljmp
arpl
and
xor
mov
mov
pop
mov
jp
push
vmovdqa
mov
sbb
shrb
and
mov
mov
stos
sub
imul
insb
dec
sub
or
xlat
pop
push
push
jns
jg
xchg
jb
insb
test
jns
fsqrt
push
jecxz
pop
in
imul
or
inc
pop
ljmp
jae
push
sbb
dec
jle
sub
lock
jle
cmp
popa
and
lcall
mov
mov
ret
lds
std
bound
stos
pop
jo
add
hlt
cmp
ret
nop
lods
push
dec
mov
sub
xchg
pusha
dec
mov
sarl
ud0
push
cmp
dec
outsb
sub
shl
cmp
jecxz
insl
popa
xchg
inc
xchg
clc
aas
push
push
arpl
adc
fildl
js
mov
fstpl
pop
push
maskmovq
loope
xchg
or
mov
out
xlat
jbe
jnp
out
cwtd
loope
icebp
mov
or
sbb
int
hlt
and
mov
jmp
daa
cld
mov
xchg
stos
in
cmp
and
push
cmp
dec
daa
inc
inc
pusha
pop
enter
adc
loopne
inc
outsb
push
clc
fistpll
dec
jae
push
push
push
lcall
xchg
inc
sub
mov
scas
repnz
xchg
ja
cmp
sarb
ret
jge
aam
and
int3
test
xor
mov
or
mov
and
insb
cmpsb
push
xchg
pop
das
xor
mov
or
mov
mov
xor
inc
rol
mov
adc
insb
fimuls
inc
cmp
adc
iret
outsl
mov
fsubr
das
push
loopne
sar
fistpl
jns
adc
pop
loopne
xchg
lcall
out
cmp
pop
dec
into
sahf
cmpsb
xor
stc
enter
decb
xlat
inc
sub
icebp
out
adc
inc
mov
sub
push
xor
stos
or
xchg
or
push
lahf
xchg
cld
nop
pop
nop
cmp
fisttpl
sub
sub
mov
jmp
out
mov
pop
mov
test
gs
xor
in
stos
inc
jmp
mov
mull
push
mov
mov
jge
inc
movsl
pop
pop
mov
out
cmp
aas
or
and
scas
je
pushw
and
mull
ja
adc
enter
lea
cs
xor
xor
pop
sbb
decl
sbb
pop
and
sti
test
pop
push
mov
popa
pop
clc
lods
fisubrl
int3
lret
loopne
xor
nop
lds
pop
fstp
mov
mov
rcll
test
sbb
mov
add
mov
in
xor
mov
nop
arpl
cmp
loopne
xchg
jecxz
cli
adc
mov
dec
pop
adc
sbb
jno
sub
xchg
xchg
mov
rep
insb
jmp
ljmp
loope
push
jae
mov
push
mov
mov
cmpsb
lods
icebp
les
jl
jecxz
lea
aaa
pop
pop
pop
add
lret
mov
ja
xchg
cmc
rcl
cmc
sbb
es
incb
arpl
or
popf
push
push
arpl
dec
cs
push
jmp
mov
mov
dec
adc
pop
inc
bound
ret
test
inc
dec
insb
or
vfmsub132pd
mov
test
shll
mov
jne
or
pop
mov
pop
jg
ret
ljmp
sbb
mov
lret
stos
mov
push
push
sbb
pop
nop
jno
jge
and
loop
stos
pop
jmp
sar
push
stos
push
mov
xor
pushf
pop
mov
jp
xorl
outsb
mov
and
insl
rcl
je
xor
dec
mov
ret
ja
dec
cmc
push
mov
iret
fcmovnb
in
scas
int3
jl
shll
out
push
inc
mov
mov
jmp
lods
fcompl
addr16
sub
sbb
les
sbb
in
mov
sti
hlt
popa
sub
jecxz
std
jmp
pop
jmp
fdivrl
pop
pop
mov
test
mov
mov
ret
xor
adc
xchg
mov
inc
cmpsl
adc
or
faddl
in
cmp
enter
stc
mov
add
xchg
in
push
xchg
fimull
push
fwait
lret
repnz
decl
movsb
loope
cwtl
or
push
dec
mov
cmp
pop
cmpsl
xchg
aas
sbb
cs
lock
inc
mov
dec
pop
dec
mov
mov
in
cld
add
mov
fcompl
cmp
adc
movsl
xchg
enter
lret
test
iret
or
jmp
shll
sub
inc
sub
clc
add
and
mov
mov
jnp
addr16
outsl
jle
sub
inc
pusha
xchg
pop
cwtl
jge
jnp
out
in
or
mov
or
lcall
add
and
aam
in
sarl
shll
pushf
sbbb
hlt
lcall
lcall
jl
or
add
cmp
adc
adc
stc
dec
cld
in
xor
ror
dec
cmp
xor
shrl
pusha
push
dec
mov
call
cmp
and
cmpsb
pusha
push
mov
in
hlt
lcall
push
cmpsb
fs
dec
mov
xor
shl
dec
hlt
shlb
cmp
sub
xor
shll
je
xor
sarl
call
leave
shlb
push
pushf
imul
fcompl
shrl
hlt
mov
push
dec
cmp
xor
rol
dec
shlb
shll
mov
jl
mov
cmpsb
aam
lcall
lcall
lcall
dec
fdivl
sar
dec
call
test
xchg
xor
shll
dec
xor
rcl
dec
in
xor
dec
sbb
imul
imul
imul
subb
mov
and
roll
pop
sub
cmp
sub
sbb
xor
rorl
rcll
inc
xor
sbb
mov
mov
cwtl
mov
cmpsb
pop
inc
lcall
lcall
cltd
clc
adc
shrl
dec
xor
inc
sarl
nop
mov
dec
hlt
shlb
cmp
es
lcall
lcall
andl
fcomps
lods
pushf
lcall
inc
test
mov
int3
sar
dec
aam
xor
shrl
dec
adc
xor
rorl
dec
adc
xor
leave
rol
es
lcall
lcall
lcall
lcall
lcall
dec
or
xor
shrl
push
inc
xor
shl
dec
clc
lock
roll
cwtl
leave
pusha
jo
jl
lcall
lcall
lcall
lcall
dec
test
aam
xor
rcrl
jl
push
add
sbb
ljmp
enter
push
cmpsb
push
pusha
lcall
mov
imul
daa
sub
pop
shrl
or
xor
and
fmul
xor
rcl
dec
aam
xor
rcll
test
mov
cmpsb
hlt
lcall
lcall
lcall
dec
in
xor
roll
cwtl
shll
je
xor
roll
fdivl
sar
dec
lock
xchg
add
cmpsb
sub
lcall
lcall
lcall
lcall
dec
je
xor
rcll
and
and
adc
lock
xor
rcrl
dec
xor
xor
roll
dec
push
xor
nop
pushf
lcall
lcall
lcall
lcall
lcall
dec
sbb
xor
shrl
rcll
xorb
lock
clc
in
aam
mov
inc
push
lcall
lcall
lcall
lcall
lcall
dec
mov
mov
in
push
dec
clc
loopne
aam
mov
inc
inc
xor
sarl
pusha
sbb
sarl
dec
or
enter
aam
les
fs
mov
cmpsb
mov
hlt
enter
xor
xchg
and
and
je
add
sub
cmp
aam
enter
rcr
dec
mov
test
cmpsb
xchg
pushf
imul
sbb
sbb
lcall
lcall
dec
loopne
xor
roll
sarl
pop
xor
shll
leave
or
es
lcall
lcall
add
sti
mov
fldl
iret
ret
add
pushf
lret
sub
les
inc
cmp
stc
fldpi
sub
ret
ret
mov
and
push
lds
xor
mov
ret
addl
push
add
subl
xchg
fs
mov
xlat
fisubs
sbb
add
push
push
pop
inc
cmp
dec
fstps
inc
add
dec
dec
dec
push
push
pop
push
mov
mov
add
repz
test
cmp
mov
sbbb
or
ret
in
cmp
mov
div
mov
and
loop
sbb
cld
loopne
popa
push
pushf
in
arpl
out
dec
sbb
mov
arpl
and
sub
fisttpll
shlb
cmp
sbb
xor
fcomps
add
jge
xchg
imul
mov
imul
fmull
int3
ds
pop
in
jbe
lret
or
fadd
ret
shll
push
ss
xchg
mov
in
mov
insb
cmp
jl
das
mov
popa
ljmp
shrl
mov
cmpsb
mov
lea
dec
das
aaa
push
shlb
sysenter
lret
je
das
popf
dec
xchg
arpl
sbb
insb
xlat
int3
out
inc
pop
push
inc
pop
movsl
add
push
pushf
lret
or
subb
arpl
sbbl
mov
cld
cld
addl
fsub
mov
mov
mov
xchg
into
ret
fstpt
sub
sbb
pop
mov
movhps
vcvtss2si
sbb
mov
sbb
pop
jo
jns
outsb
sbb
pop
jno
insb
bound
pop
orl
outsb
sbb
xchg
mov
xchg
mov
xchg
addr16
data16
jecxz
addl
jae
xchg
movsl
pop
jmp
push
push
pop
sbb
ret
leave
mov
push
popa
cmp
jae
sbb
insb
push
sub
sub
or
outsl
mov
sbb
sub
out
adc
inc
cwtl
pop
lds
jle
jae
das
adc
test
xor
add
fiaddl
imul
or
test
push
out
lea
mulb
add
fucom
pop
or
mov
mov
int3
add
xor
sbb
cmp
xor
push
mov
test
push
dec
or
popa
or
cmp
jae
clc
ss
pop
in
pop
aas
cmp
mov
lods
pushf
or
cwtl
insl
pop
sahf
mov
in
mov
add
inc
scas
pop
pop
cmp
pushf
cmpsb
inc
cmpsb
or
cmpsl
in
addr16
test
xor
xor
sbb
sub
mov
lret
pop
adc
les
add
ret
and
jns
push
jl
jbe
push
mov
clc
andb
test
jns
mov
je
cmp
add
lret
adc
std
xor
jmp
xchg
cmp
ret
leave
add
cli
sbb
icebp
xor
popf
push
jne
fdivrl
rolb
xor
push
add
add
ja
insb
sub
mov
mov
test
sbb
movsl
ja
inc
cmp
add
fimuls
ret
lock
jmp
movb
daa
imul
sbb
sbb
mov
pop
cmp
jne,pn
xchg
jae
mov
sbb
add
mov
fcmovnbe
outsb
outsl
cmp
mov
inc
xor
stos
or
ret
jmp
out
xor
and
mov
mov
out
in
mov
and
xchg
daa
sbb
fidivrs
call
mov
xchg
push
ret
xorl
lods
cmp
sub
inc
sbb
daa
cs
cs
xchg
or
call
je
push
gs
jno
pusha
cli
std
xchg
data16
inc
mov
rcpps
xor
cmp
jg
sbb
fwait
cwtl
push
xor
adc
push
lock
das
data16
int
ffreep
xor
leave
les
stos
cmp
lods
int3
sub
xorl
and
or
mov
popf
mov
push
xchg
jl
dec
sbb
mov
cmp
cmp
data16
add
adc
ds
jno
lods
pop
lahf
jnp
ret
adc
imul
mov
stc
icebp
dec
xchg
int3
sti
test
lods
pop
cmpsb
mov
enter
pop
adcb
rcrb
push
inc
cmp
aad
cmp
pop
adc
sbb
cld
or
sub
mov
out
adc
push
neg
hlt
and
push
filds
das
roll
jecxz
add
xor
int3
dec
data16
popa
ja
pop
push
xor
hlt
out
jne
das
imul
data16
xor
adc
xor
leave
ljmp
lock
insl
and
dec
loope
xor
divl
dec
into
jg
testl
popa
pop
dec
mov
lods
ja
dec
enter
bound
dec
mov
loopne
add
icebp
xchg
lret
cmp
push
aam
xchg
mov
mov
push
sti
ljmp
xor
mov
sub
sbb
jno
shr
sub
mov
dec
push
adc
rolb
jae
inc
int3
dec
dec
xor
dec
jp
inc
rcrb
sahf
jecxz
mov
jmp
scas
cmc
push
repz
sti
push
or
xor
fcomp
add
fcmovb
call
dec
cmp
imul
pop
xchg
xchg
cmp
xor
xchg
xor
pop
jp
dec
mov
fstps
and
aam
inc
dec
inc
fwait
sarl
pusha
mov
gs
out
mov
clc
std
xchg
sub
das
cli
pop
adc
ss
loope
mov
out
push
adc
icebp
enter
into
mov
int3
les
xor
inc
sub
cmp
xor
sarl
push
aas
cmp
testl
push
mov
mov
add
popf
add
and
lods
adc
sti
xor
mov
hlt
push
or
testb
sahf
push
scas
stos
cmp
sahf
call
xchg
sbbb
inc
sub
ss
push
ljmp
lahf
lea
popa
jne
mov
ss
xchg
cmp
sub
mov
iret
mov
ja
jns
pop
mov
pop
cmp
sub
enter
mov
xchg
mov
adc
negl
push
leave
rclb
dec
ret
out
xor
sbb
sbb
xor
sub
mov
sar
sahf
int3
sub
cmp
and
add
push
jno
loope
pop
pusha
popa
push
popa
repnz
cld
and
repnz
sahf
mov
in
mov
pop
fwait
mov
scas
cltd
mov
xchg
insb
lcall
push
pop
xor
icebp
inc
loopne
and
loop
pusha
inc
aad
adc
mov
enter
push
xor
cmp
mov
xor
adc
scas
xor
ret
jmp
jno
xor
xor
scas
insl
push
inc
hlt
andl
jns
in
jecxz
lret
jns
cwtl
mov
rol
jno
add
dec
in
popa
jg
inc
popa
out
in
cltd
lret
or
adc
stos
dec
xor
adc
pop
push
push
cmpsb
push
or
in
jl
sub
arpl
jnp
lahf
fwait
aad
cmp
add
invd
jnp
outsl
xchg
jbe
insb
xorb
out
les
ss
push
lret
dec
sarl
sahf
ss
jle
bound
scas
add
mov
icebp
test
in
popf
cld
cmp
jae
adc
unpcklps
pop
into
lds
xchg
add
arpl
loop
mov
mov
push
dec
lods
push
or
in
mov
divb
push
fidivrl
push
sub
dec
loopne
in
sti
jmp
cmp
xchg
mov
mov
lret
push
pop
mulb
xor
arpl
cmp
cwtl
jp
sbb
lret
rcrl
fmuls
aas
push
mov
inc
outsl
cmpl
jecxz
lods
gs
push
imul
mov
imul
xor
xchg
inc
pop
loope
popa
imul
movsl
mov
xchg
pop
and
fcomps
mov
xor
shl
xchg
lds
aad
loop
popa
push
mov
sbbb
outsb
pushw
sti
stc
xchg
adc
xchg
ds
push
cmp
clc
popa
fcomps
ds
sub
mov
push
pop
test
outsl
dec
in
pushf
in
jl
popw
je
pusha
mov
notl
sbb
pop
test
ret
push
xor
pop
iret
mov
insl
sbb
cwtl
int3
shlb
out
sub
andl
int3
dec
test
scas
sti
test
sti
insl
out
repz
icebp
and
xor
or
rcll
push
in
loope
aad
test
pop
and
sbb
repnz
or
xchg
mov
repz
lahf
mov
xchg
xchg
or
pusha
pop
push
pop
sbb
and
pop
pop
push
popa
mov
cltd
mov
je
mov
out
inc
adc
sarb
stos
xor
add
ret
fs
mov
mov
scas
insb
std
pushf
in
cmp
shr
and
sub
cwtl
jo
jne
sub
pop
bound
cmpsb
push
or
scas
push
mov
fs
or
jns
repz
stos
mov
cmpsb
mov
in
and
stc
fldl
mov
mov
mov
insb
mov
mov
push
sbb
in
arpl
stc
sbb
out
add
mov
repnz
loop
in
pushf
mov
movb
push
sub
mov
xlat
inc
sub
mov
cmp
fadd
ret
outsl
lcall
xchg
ret
shr
cmp
xor
jmp
mov
dec
es
pop
or
divb
mov
xchg
mov
cltd
mov
mov
in
popa
cmc
mov
push
pop
push
test
jne
orl
nop
shl
out
push
cli
rol
aam
adc
xor
cwtl
jl
sbb
pop
cmp
daa
jl
popw
push
jnp
cmp
push
js
adc
xchg
cld
imull
jmp
pop
pop
jo
and
pop
inc
push
push
jnp
push
pushw
scas
mov
push
ret
jae
outsl
repz
xor
pop
pop
push
fwait
jg
or
cwtl
fildll
daa
xor
movlps
or
aas
sbb
lahf
lds
adc
cmp
clc
lock
scas
divl
cmp
insb
ret
dec
pop
bound
arpl
stos
cltd
fistl
mov
pop
sbb
push
adc
fisubs
lcall
adc
and
jmp
mov
adc
ja
xchg
mov
mov
jno
xor
mov
xor
fadd
das
push
adc
mov
int3
int3
ret
imul
je
clc
push
js
mov
pop
dec
loopne
setge
fimuls
in
jae
repz
iret
add
pop
in
dec
out
jbe
xor
ret
cmp
in
cmp
xor
mov
mov
and
xchg
fisubrs
adc
ljmp
lds
push
jecxz
jg
popa
jg
add
and
incb
std
push
lods
pop
in
ds
mov
mov
ret
lds
fadd
mov
xor
pop
cmc
push
adc
popf
pop
add
gs
sahf
sub
iret
lds
adc
pop
fsubl
sarl
xlat
fabs
cwtl
pop
jge
push
xchg
addr16
mov
cmc
jecxz
pop
ss
jne
mov
push
rorl
xor
movsl
jecxz
xchg
push
inc
jmp
fwait
xchg
lds
jne
jno
in
push
lret
out
pop
jnp
add
loope
inc
ffreep
mov
mov
sub
out
aam
sbb
addr16
mov
mov
mov
cmpsl
inc
cmp
or
sub
mov
into
push
mov
sub
push
testb
jg
dec
xor
mov
sahf
clc
cmc
or
rcl
in
lret
lahf
scas
and
movsb
cwtl
int3
sub
jb
xchg
push
jbe
xor
sub
add
jne
rcrl
outsl
pop
je
or
push
pop
fistps
xchg
fsts
nop
scas
jbe
inc
fnstcw
addr16
xor
aam
fs
inc
mov
mov
push
ljmp
or
pop
xorl
and
in
stc
xorl
and
push
enter
or
jae
mov
push
enter
in
data16
jae
lahf
sbb
ret
fs
nop
gs
add
ficomps
in
fincstp
pop
fs
sbb
inc
fldcw
pop
fs
sbb
sub
mov
je
neg
sahf
pop
addr16
leave
out
jg
pop
stc
imulb
cmp
xor
xorl
cmp
jbe
fldz
pop
outsb
mov
xor
cmpsl
pop
fs
sbb
insb
outsb
pop
icebp
jbe
and
cmp
ljmp
test
loop
jg
fdivrs
decl
pop
stos
dec
movsb
mov
ror
xchg
mov
mov
sub
bnd
loope
inc
sbbl
or
out
jns
jo
pop
mov
mov
in
std
jmp
cs
adc
pop
cli
mov
xor
cmpsb
mov
xchg
lods
lods
jge
cltd
pop
roll
ret
add
rol
fcmovnbe
pop
fld
fstpt
std
fidivrs
pop
jge
ja
fwait
xchg
mov
fucom
lds
cmc
ja
add
jecxz
xor
scas
in
mov
cmc
push
fildl
and
stc
add
and
sbb
int
leave
hlt
fidivs
lcall
jmp
faddp
sbb
xchg
mov
push
inc
jne
push
scas
aad
adc
idivl
ljmp
sub
push
sbb
push
inc
add
adc
or
jg
push
cwtl
daa
cmp
lret
std
nop
mov
loop
jl
or
inc
dec
insb
cwtl
adc
xchg
scas
out
push
push
scas
lods
outsb
inc
leave
jb
jno
cmp
out
loopne
andl
sub
mov
sbb
jl
in
rol
and
enter
fs
xchg
push
dec
xchg
les
js
dec
cmp
mov
dec
and
xor
shrl
test
mov
lcall
lcall
jb
imul
xor
fmuls
mov
stos
outsl
pop
arpl
sti
mov
pushf
add
fwait
mov
cld
jg
lea
fsubr
test
shlb
stos
insb
cli
or
adc
lcall
mov
insb
pop
push
dec
push
dec
dec
pop
dec
xor
leave
mov
jg
mov
enter
sbb
pop
rcrb
dec
les
inc
rorl
inc
xor
sarl
je
xor
shll
rcll
fmuls
rorl
nop
getsec
pushf
jp
notb
jl
push
mov
cmpsb
aam
lcall
lcall
lcall
lcall
lcall
lcall
lcall
incl
in
sarl
pusha
adc
push
insb
pop
xor
sarl
dec
shlb
les
clc
xor
rcl
dec
fsubs
test
in
roll
nop
cmp
dec
mov
pop
int3
pop
mov
daa
in
sti
loopne
cwtl
cld
filds
rcrb
dec
inc
lcall
popf
lods
out
adc
stos
adc
dec
cli
imul
jmp
stos
filds
ds
mov
call
iret
out
in
push
dec
sbb
or
lret
fldt
hlt
mov
mov
mov
sti
imul
mov
imul
xlat
imul
and
sbb
pop
pop
pusha
repnz
in
ds
arpl
cld
sbb
xor
fs
cmpsl
popa
gs
mov
xchg
sub
jne
aam
test
faddl
mov
jne
lcall
mov
mov
sbb
jne
clc
fcoms
scas
int
mov
cwtl
mov
mov
jnp
fwait
in
mov
scas
push
pop
clc
push
jp
sahf
ss
and
testl
xor
leave
jecxz
cmp
adc
jo
aad
and
cmp
inc
cmpsl
test
inc
inc
add
jno
mov
hlt
jbe
insb
jg
xchg
bound
cmp
jno
sub
imul
pushl
cmp
clc
cmp
mov
hlt
or
pop
lret
cmp
popw
push
push
cmp
or
jge
clc
fdivrs
push
pop
icebp
push
mov
addl
bound
pop
push
mov
jle
xor
popf
push
push
pop
push
aas
cmp
daa
std
mov
cmp
movsl
scas
xchg
inc
dec
pop
pop
inc
ss
nop
dec
pop
sbb
lret
pop
inc
repz
or
insb
jns
idiv
mov
and
enter
add
loope
in
in
jecxz
cmpsb
sub
loop
loop
loop
jbe
popa
jbe
in
clc
lock
in
inc
arpl
dec
ss
jecxz
push
push
push
fnstcw
sub
aaa
push
xchg
fs
out
xor
push
aad
aas
cltd
dec
in
ljmp
pusha
lods
out
int3
stos
xchg
lret
lcall
lods
stc
push
arpl
imul
stos
mov
xor
stos
xchg
pop
pushf
mov
test
inc
pop
mov
jne
mov
cli
jno
cmp
xchg
iret
out
stos
mov
stos
mov
jle
shl
cmc
stos
ret
push
lods
mov
mov
ja
sbb
dec
out
mov
inc
add
sbb
sbb
inc
sbb
out
jmp
or
popa
jb
push
jg
jno
lods
jb
insb
sub
or
js
push
ja
jns
pop
push
pop
mov
dec
or
add
pop
fucomi
pop
inc
push
sub
bound
rorl
addr16
xchg
inc
outsb
dec
xor
push
xchg
pushf
ss
mov
sti
stc
leave
push
pop
mov
mov
inc
mov
gs
shl
adc
xchg
dec
pop
movsb
jmp
sbb
repz
xor
ret
xchg
bound
rcrb
mov
outsl
sbb
mov
push
jne
test
ret
hlt
loop
mov
fucom
fs
stos
ss
jae
jmp
add
xchg
in
loop
or
adc
dec
pop
xor
es
cmp
adc
out
adcl
or
adc
mov
hlt
or
adc
inc
or
add
sub
xor
sub
sbb
jbe
and
js
jle
ss
cmc
or
fucom
jbe
push
jecxz
aad
adc
cmpsl
daa
mov
scas
divl
mov
cmp
enter
popa
in
and
lret
mov
dec
sti
cwtl
popf
sbb
push
rcr
shrl
mov
inc
dec
xor
sbb
lods
cs
dec
inc
and
cmc
or
mov
sub
ja
sub
cld
pop
push
sub
adc
clc
ficomps
or
imul
pop
xchg
in
sbb
cmp
cmp
hlt
mov
inc
sub
xor
or
insl
mov
cmpsb
test
int3
pop
loopne
mov
xchg
xchg
rclb
out
out
mov
cs
in
std
pushf
jmp
jns
out
repnz
xchg
lret
lods
shrl
sti
in
sahf
test
dec
test
int3
bound
xchg
shll
cmp
pop
call
add
notl
pop
push
inc
cmp
dec
rcrl
out
sub
jecxz
movsb
clc
jne
into
ja
pop
enter
mov
jb
dec
ljmp
inc
push
jl
adc
das
and
fldt
mov
sahf
pop
orb
mov
xor
shl
sbb
insb
pop
les
lds
lret
pop
pop
push
inc
jae
jno
mov
outsl
mov
cltd
mov
call
outsb
jne
lahf
push
xlat
mov
mov
mov
cmp
push
sbb
push
pop
jae
sub
data16
je
sub
sub
and
and
xor
incl
cli
mov
push
dec
dec
and
loopne
push
es
jmp
cmp
push
cmp
jns
ds
mov
shrl
push
test
adc
sbb
mov
mov
arpl
push
leave
mov
mov
mov
mov
or
jg
push
int
dec
lods
lret
or
rcr
push
mov
fisttps
in
dec
cmc
call
sbb
loopne
pop
push
dec
ret
in
sbb
mov
add
xor
push
push
outsb
pop
adc
mov
jns
xchg
or
push
jae
and
jmp
jg
push
jle
mov
jg
pop
std
cmp
std
or
mov
or
jg
inc
jmp
mov
mov
jmp
push
stc
inc
cmp
lahf
push
inc
pop
test
stc
add
jae
dec
shrl
mov
pushf
cld
aas
hlt
mov
sbb
fcmovnbe
jne
insl
roll
cld
mov
mov
pusha
jl
dec
sbb
stos
inc
push
sbb
movsb
jne
cmp
inc
das
adc
outsl
imul
fsts
inc
lahf
mov
out
dec
outsb
fstl
jge
jo
mov
mov
adc
ret
sub
imul
mov
jmp
and
in
cmp
test
mov
fxch
fnstsw
fucomi
jno
xchg
cli
test
jns
rorl
push
not
dec
xchg
mov
pop
add
add
cmp
popa
mov
mov
cpuid
mov
notb
in
rcrb
mov
mov
xchg
push
cmp
arpl
adc
aaa
pop
jle
cmp
shl
pop
fdivl
fnstcw
imul
fists
xor
aas
test
aad
dec
stos
fadds
mov
fs
sub
addl
xor
test
xor
mov
outsl
in
lahf
imul
mov
add
jle
lahf
stos
leave
inc
insb
in
int3
lods
nop
pop
test
jmp
popf
stos
pop
outsb
sti
dec
push
ljmp
xor
jo
xlat
scas
xlat
sub
and
outsl
pop
jl
les
cld
or
mov
fsubrl
ret
xchg
mov
mov
mov
sti
mov
stos
xchg
mov
sub
xor
arpl
push
push
jge
pop
dec
xchg
push
jnp
add
clc
mov
arpl
sub
dec
cmp
call
ror
mov
scas
jp
aas
jns
mov
sub
xchg
mov
in
lds
int
push
pop
push
cmp
inc
flds
mov
stc
fcomip
mov
int
adc
sarl
cmp
pop
jbe
push
pushf
jne
fnstenv
out
fcoms
lret
mov
push
mov
add
xchg
xor
adc
cmp
jmp
aaa
pop
sub
pop
mov
stos
ljmp
loopne
das
cli
dec
or
sbb
push
jl
xor
aam
aam
push
pop
insl
jg
loopne
add
push
push
fnstsw
mov
jns
xchg
shlb
test
lods
lods
aaa
aas
negb
mov
cmp
fcom
sub
mov
je
loop
shrl
ror
call
sub
inc
mov
sub
leave
into
aam
loopne
imul
cld
sarb
addr16
in
int3
dec
scas
or
jmp
mov
push
das
movsb
scas
inc
push
jmp
pop
into
mov
mull
fdivl
aam
inc
adc
dec
popf
dec
pop
stos
xchg
mov
pop
loop
fistps
push
aas
dec
inc
decb
mov
dec
xor
lret
shrb
fisubrl
adc
test
out
loop
test
insl
in
inc
aas
lock
aad
mov
cmp
cmp
jnp
add
sub
out
pop
int
aad
inc
cltd
cmp
cs
push
fucomp
jecxz
lcall
xor
outsl
sub
fcmovnb
int3
push
fcmovne
sahf
leave
cltd
pop
lea
fnstcw
mov
std
iret
loop
mov
xchg
std
insb
out
insb
das
data16
mov
push
push
or
cwtl
mov
mov
sub
dec
movsl
ja
outsb
mov
sbb
in
iret
aad
int
jmp
int3
mov
xor
mov
jecxz
repz
int3
sar
lret
xchg
insl
inc
inc
pop
sbb
hlt
es
ss
sub
or
cli
test
mov
lret
xor
out
mov
aas
lcall
xorl
inc
adc
repz
fstpl
icebp
data16
dec
mov
mov
outsl
stos
jmp
sbb
lea
scas
mov
mov
lds
aas
or
xchg
popf
xlat
fdivs
jg
jae
sbb
nop
jb
outsl
in
jmp
test
scas
sarb
gs
leave
lret
cwtl
icebp
xchg
and
pop
addr16
out
in
out
fisttpll
lock
pop
adc
imul
shlb
stc
mov
or
int3
sbb
imul
mov
fstpt
popf
mov
iret
movsb
dec
mov
stos
mov
pop
sbb
xchg
inc
ret
ret
icebp
ret
repnz
and
xor
xor
das
rorb
jnp
inc
cld
loopne
pop
fistpl
cmp
je
jno
je
pop
mov
popa
stos
xor
or
insb
fisttpl
xchg
sub
pushf
lea
mov
cld
mov
mov
jge
ret
data16
cmp
loopne
mov
xor
jg
stos
imul
push
mov
pop
cmp
pop
sub
xchg
mov
jmp
xchg
inc
insl
xchg
mov
out
sbb
shlb
mov
out
sub
cli
arpl
pusha
clc
icebp
stos
lret
pop
add
mov
pop
pop
mov
adc
and
rep
fnstcw
mov
movsl
outsb
jbe
xor
in
xor
push
push
or
out
lods
icebp
sub
add
mov
mov
pop
cmp
leave
xlat
adc
pop
push
mov
stos
or
das
stos
add
inc
mov
jbe
pop
fisubs
cs
jbe
jne,pt
daa
popf
push
adcl
sub
dec
lret
lret
xchg
pop
sbb
push
mov
xor
gs
cltd
xor
mov
into
in
dec
jne
add
loope
inc
inc
xor
push
outsl
cli
or
jg
divb
inc
aad
mov
mov
fildl
in
rcr
scas
cld
sarb
ljmp
push
fsubrs
aam
sbb
outsl
std
mov
mov
xchg
aam
call
mov
jno
stos
mov
mulb
std
cmp
sbb
btsl
out
out
sti
rorl
adc
adc
mov
insb
in
dec
cmp
lea
pop
jne
jmp
sbb
les
pop
fs
shll
push
lods
adc
mov
xchg
ss
clc
out
data16
mov
nop
test
lods
out
mov
pop
pop
dec
int3
int
push
ds
jl
jmp
scas
addb
cmp
test
mov
jmp
out
ret
jmp
fprem
mov
int3
jmp
call
je
es
pop
xor
jg
ret
cmp
sbb
js
enter
aad
mov
ss
mov
pop
xor
mov
push
pop
xor
aaa
sbb
js
xlat
pop
fisttpl
jg
push
and
push
jne
add
std
int3
es
arpl
cmc
mov
push
mov
jns
pop
hlt
xchg
scas
mov
int3
mov
sbb
aad
rcl
fwait
push
ret
aaa
jp
cltd
mov
ljmp
pop
test
dec
stos
mov
pop
and
scas
addr16
or
scas
ss
jb
lods
sub
mov
pop
xor
test
or
xor
mov
pop
repz
movsl
fdivs
fsubr
gs
push
or
dec
out
sub
ficomps
ja
bound
pushf
je
xchg
fwait
lret
stos
dec
adc
aad
xchg
xchg
xchg
mov
add
mov
popa
fstps
xchg
loop
add
lods
pop
sub
xchg
add
xor
xor
sbb
xor
pop
push
scas
mov
pop
sahf
cmp
stos
icebp
xor
xchg
enter
inc
pop
push
adc
jb
nop
insb
sub
mov
pop
into
sarb
cmpsb
rep
xchg
cmc
inc
xor
mov
mov
fmulp
mov
inc
scas
loope
cmpsb
fdivrs
hlt
out
pop
stos
mov
sahf
mov
out
inc
lock
popf
cmp
xor
sbb
outsl
push
insl
lock
sbbl
ss
inc
cs
and
ja
xlat
psraw
jge
lea
and
pop
xor
ret
xchg
lods
or
ja
andb
js
fwait
js
stos
out
movsl
add
mov
cli
mov
pop
mov
pop
repz
xlat
mov
in
ja
cwtl
cmc
dec
fs
int3
sti
cmpsb
xor
sti
add
lcall
sub
ds
xchg
notb
scas
pop
fcomps
les
in
loope
push
outsl
mov
jbe
adc
mov
pop
addr16
xchg
mov
xchg
inc
mov
mov
fdivrs
mov
cmp
dec
mov
jae
xchg
mov
mov
mov
mov
scas
push
mov
ss
sbb
into
push
iret
mov
dec
add
sbb
gs
outsl
and
xlat
insl
movsl
lea
and
sub
pop
outsb
ret
fistpll
mov
das
jg
ljmp
stc
lods
jae
and
xchg
into
pop
int3
fsubr
mov
push
push
mov
insb
out
ss
mov
outsl
and
pushf
push
jle
push
scas
loopne
mov
sbb
jmp
imul
mov
jns
lea
sub
cltd
aam
jge
std
jne
pop
pop
popf
mov
hlt
pushf
xchg
sbb
leave
push
mov
mov
adc
mov
test
xor
icebp
ror
or
xchg
xor
push
in
xor
shr
bswap
sub
call
mov
jo
mov
cwtl
lods
pop
push
mov
cmp
cmc
mov
mov
sbb
mov
sbb
sarb
dec
pop
iret
pop
push
das
loopne
ljmp
in
out
cmc
aad
sahf
ljmp
push
jmp
jge
sbb
xchg
daa
out
loop
pusha
cmp
cmc
xor
xchg
imul
test
fstp
adc
jno
sti
and
jnp
arpl
ret
loope
mov
xchg
mov
std
insb
fnstsw
fnstcw
enter
decb
aad
mulb
nop
imul
push
loope
sbb
cmp
test
mov
sbb
mov
out
shrl
cltd
cwtl
pop
xchg
add
in
int3
push
fs
push
cltd
cmc
cmc
cli
mov
ja
repnz
sub
jmp
mov
filds
pusha
not
subb
and
jecxz
popa
in
popa
ss
xor
icebp
jno
jb
loop
movsl
test
mov
out
js
mov
cs
mov
enter
pop
or
cmp
in
cmp
fstpl
xor
xchg
cld
push
mov
test
shr
rorl
ret
mov
ret
int3
mov
jb
mov
int
clc
pop
mov
mov
rcr
stos
pusha
push
out
mov
imul
imul
push
jecxz
xor
loop
out
push
mov
idiv
outsl
jecxz
or
ljmp
fisttpll
mov
into
ret
or
call
mov
sbb
mov
mov
inc
pop
pop
dec
jg
xor
stos
popf
cmc
mov
lock
cmp
xchg
in
loope
outsl
inc
mov
rclb
fwait
pop
lahf
pop
pop
cmc
jle
loop
ja
negl
popa
fstp
pop
pop
sub
xchg
stc
mov
cmp
insl
stc
jns
subb
xor
fistpl
hlt
decl
jo
sbb
clc
cmp
fisubrs
lods
cld
push
jae
mov
or
mov
stos
hlt
jno
pop
fxch
out
dec
add
mov
dec
bound
jb
pop
pop
push
sarb
pop
pop
mov
out
scas
stc
xor
xchg
mov
test
cmpsl
pop
adc
pop
sub
pop
push
cmp
cmp
cmc
inc
in
out
sub
inc
or
jbe
dec
testb
sbb
or
or
in
and
xor
mov
repnz
loope
fdivl
rorb
pushl
mov
sarl
outsl
gs
std
sarl
stc
sub
sub
in
pop
mov
sub
stos
in
sub
out
ret
ja
loope
idivb
sub
and
lock
ljmp
ja
aam
ss
xchg
push
jno
lret
mov
fsubs
out
aad
mov
mov
adc
lods
inc
movsw
pop
sub
dec
aaa
sahf
sub
jge
sahf
insb
scas
mov
fcmovnb
sub
aas
jecxz
rcll
adc
sub
mov
xchg
xor
out
insb
xchg
int3
scas
out
xor
adcb
mov
xchg
addr16
mov
shrl
push
xchg
lods
aad
and
push
pop
push
sahf
dec
scas
stos
unpckhps
mov
out
push
aaa
mov
jnp
mov
sarb
lcall
adc
in
xchg
or
pop
pop
lods
push
add
mov
push
jb
cmp
xor
mov
pop
jp
stos
test
dec
push
stos
rcrl
dec
int3
hlt
loope
sub
sub
stc
leave
es
xor
dec
cmp
ficoml
cmp
test
movntq
sub
pop
scas
test
daa
adc
lret
sahf
jmp
mov
mov
repz
cli
fwait
in
inc
cmpsb
xor
mov
mov
pop
mov
pop
xor
cltd
clc
mov
sub
sub
mov
jo
push
cmp
stos
sbb
mov
sbb
loop
xchg
sahf
push
aad
loope
ficoml
mov
setl
leave
push
cmp
pop
xor
test
ljmp
fldenv
icebp
pop
mov
mov
cmc
pop
mov
xchg
dec
mov
fwait
lock
aas
ja
push
cmp
int
cmp
nop
xchg
dec
test
cli
add
inc
xor
jecxz
xchg
pop
sti
push
push
cmp
std
or
push
push
pop
mov
ljmp
pushf
push
adc
jno
push
imul
sub
lahf
fcompl
dec
outsl
mov
in
cmp
scas
repz
inc
les
lcall
pop
movsl
xlat
xor
fldcw
inc
scas
repnz
lret
jmp
test
jle
shll
inc
stos
jbe
fst
vmovupd
sti
fcmovu
pop
pop
insl
int3
out
adc
aam
aam
pop
out
aam
pop
shlb
jg
jecxz
sbb
pop
or
or
insb
jecxz
loop
adc
xor
bsr
inc
push
pop
cltd
test
jecxz
cmp
cmp
inc
pop
mov
mov
orl
push
push
pop
imul
mov
and
dec
pop
aaa
nop
and
scas
scas
nop
push
sbb
sub
fcomps
mov
aad
jecxz
mov
push
cmp
in
inc
pop
mov
test
stos
pushf
push
adc
jns
add
test
out
mov
mov
xor
pop
das
divl
scas
notl
ss
and
mov
push
mov
jae
ss
jge
rcrl
in
mov
mov
xor
and
jno
add
jne
popa
loop
popa
pop
sbb
add
jmp
add
dec
push
inc
je
cld
push
mov
bound
jecxz
push
push
inc
rol
adc
adc
mov
inc
mov
inc
mov
lret
sub
adc
xor
adc
mov
inc
jnp
mov
mov
add
mov
xor
imull
nop
mov
loopne
cmp
aad
nop
sbb
sbb
inc
xchg
inc
jnp
mov
add
jne
ja
mov
mov
inc
mov
call
pop
mov
lods
bound
push
xchg
mov
mov
lods
inc
mov
fs
add
bound
and
add
insl
xorl
je
dec
or
andb
add
inc
xchg
aad
adc
cmp
mov
mov
bnd
out
and
mov
ret
mov
in
add
dec
ljmp
fsubrp
repnz
xchg
test
ja
in
test
je
sub
je
arpl
popf
pop
jbe
negb
push
insb
or
loopne
sbb
add
mov
jge
sarl
rcrb
jmp
mov
mov
sti
aad
jbe
jb
dec
js
rorl
sub
mov
or
and
popf
add
fsts
divb
ja
flds
negl
iret
enter
add
cwtl
ljmp
mov
dec
add
gs
orl
xlat
mov
mov
xor
popa
jmp
subb
pusha
or
jge
pop
adc
adc
mov
scas
stos
xlat
mov
scas
stos
xlat
test
dec
sbb
fcmovu
mov
and
fdivr
scas
jnp
into
push
sub
shrb
mov
arpl
lcall
cmp
pop
outsb
jge
je
cmp
lea
cld
xchg
stc
nop
xor
test
popa
cmp
or
out
movl
imul
pop
jmp
mov
mov
cmpsb
push
and
and
xor
lods
pop
hlt
mov
clc
pusha
mov
rcrl
sti
lock
in
inc
dec
cmp
add
jg
dec
adc
popf
enter
lret
fbld
lcall
sahf
sahf
test
pop
sub
pusha
mov
loope
pop
mov
and
push
sbb
sub
mov
dec
mov
push
mov
stos
cmpsl
cmpsb
in
jns
and
push
xor
add
cmp
add
ja
idiv
pop
cmc
mov
jle
les
outsb
mov
cmpsb
jbe
pop
repnz
fadds
mov
and
adc
mov
fbstp
push
cmpsb
lcall
loopne
mov
cmc
lock
sbb
lcall
xchg
lods
push
inc
int
adc
cld
and
fimull
add
in
xchg
out
insb
jo
js
int
leave
insb
push
gs
loop
mov
or
dec
testb
paddq
mov
nop
xor
imul
arpl
and
test
or
inc
sbb
mov
add
mov
sbbb
enter
mov
cmp
rolb
pop
mov
dec
add
mov
inc
out
add
jne
clc
cwtl
ds
les
pusha
pushf
xorl
add
lods
sbb
mov
push
push
add
jg
stos
mov
mov
inc
bound
aas
jno
xor
sub
sbb
rcrb
add
testl
int3
cwtl
mov
mov
xor
jge
push
popa
mov
and
enter
xor
into
mov
fnclex
fisttpll
lcall
mov
mov
xor
int
mov
mov
clc
mov
les
js
mov
inc
stos
sbb
icebp
adc
hlt
in
ret
ljmp
sub
xchg
add
jns
clc
push
lods
ret
sbb
add
nop
add
add
add
add
test
mov
lret
or
or
mov
inc
mov
push
int3
pusha
je
in
shll
int
adc
jb
adc
iret
mov
dec
jns
xor
shl
dec
mov
xor
cmc
dec
fadds
lock
fistps
sub
enter
shrb
cmpsb
clc
ficomps
xor
mov
ret
pop
xchg
cmp
int3
cli
mov
pop
bound
pusha
arpl
sub
sti
xchg
stos
xor
scas
hlt
pop
and
sti
loopne
mov
lahf
cmp
and
sbb
pushf
lcall
jnp
sub
or
dec
fidivs
sub
jns
pop
cmpsb
cmp
fwait
inc
add
xor
sar
and
add
lcall
mov
xchg
imul
imul
test
andl
icebp
push
xor
mov
popa
xchg
jo
adc
lea
andl
cli
repz
inc
fsubl
loope
adcb
dec
fldl
add
mov
xchg
or
hlt
xor
nop
stc
cmpsb
push
mov
push
add
shrl
mov
mov
std
add
mov
pop
icebp
lcall
stos
das
movl
adc
dec
addr16
in
add
push
mov
lods
jnp
test
adc
xor
xchg
dec
mov
inc
add
div
pop
mov
popf
lock
sarl
ret
add
xor
daa
insb
push
cmp
add
mov
add
sub
sbb
push
adc
mov
fcomp
in
add
lcall
into
sarl
les
pop
or
shrb
jge
stos
dec
push
jle
fisttpl
add
mov
mov
sub
and
in
fs
add
inc
adc
pop
xchg
xchg
cmpb
jb
lcall
push
add
jns
lss
iret
push
sti
in
push
sub
xchg
fists
cld
add
lods
outsl
cmp
mov
add
je
add
sub
add
scas
push
push
fistpl
ss
lret
add
sbb
roll
mov
sbb
add
mov
daa
std
push
jge
fidivrl
add
ret
insl
add
out
hlt
adc
push
mov
mov
lods
add
xchg
mov
pop
push
xchg
xor
lods
dec
repnz
pop
pop
mov
mov
inc
roll
addb
fiadds
out
inc
lret
mov
push
mov
add
add
call
inc
sub
mov
jl
lods
add
ljmp
jge
ret
xchg
test
push
stos
out
das
add
outsl
sar
adc
dec
add
cs
jg
push
or
repnz
add
ljmp
hlt
push
jecxz
fldl
add
sbb
add
add
lcall
sub
push
ror
loopne
mov
ja
and
add
jae
jmp
push
fwait
jae
pop
adc
aad
add
.byte
movsl
fimull
dec
add
add
scas
xor
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
xor
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
xor
call
sub
jae
mov
inc
jmp
mov
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
repnz
add
cld
jg
add
add
add
adc
add
or
add
adc
add
xor
add
pop
or
dec
sub
add
push
add
push
add
add
adc
add
orb
insb
orb
fildl
or
call
orb
mov
or
les
add
je
or
addb
add
add
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
push
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
