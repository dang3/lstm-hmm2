push
aam
ret
imul
mov
mov
leave
mov
stc
sbb
xor
ret
sub
scas
fwait
dec
sahf
pop
sahf
bound
pop
push
xchg
hlt
out
sti
or
dec
xor
push
fwait
jno
call
imul
pushf
inc
mov
adc
cmp
cli
stc
fistpl
scas
call
cmp
cmp
lods
xchg
fcomps
das
push
add
fcoml
ret
outsl
push
mov
stos
ss
mov
loope
imul
ds
iret
mov
negb
pop
xchg
push
or
add
leave
aad
vpermilps
and
push
inc
adc
add
out
lock
repz
pop
aas
imul
fsubr
stc
dec
sti
cmpsb
test
sahf
dec
xchg
icebp
lock
mov
or
cmp
add
mov
xchg
inc
jge
or
jg
scas
call
insl
fsubs
adc
mov
test
and
mov
test
xchg
ds
pusha
shr
movsl
mov
add
fwait
lods
push
pop
jb
or
outsb
call
in
push
out
xchg
icebp
cwtl
xor
movsl
fnstsw
cmpb
xor
jl
dec
sub
push
inc
lret
out
add
daa
mov
pop
cwtl
add
xchg
push
cmp
add
scas
repz
incb
sahf
sbb
fimull
lea
in
sbb
and
pop
sub
les
pop
cwtl
negb
fdivs
ret
loope
movsb
xchg
lock
xor
fsubrl
imul
xlat
loopne
sarb
iret
mov
pop
ret
insl
push
lods
mov
cmpsb
jnp
mov
push
sbb
cmpsl
xor
mov
cld
neg
lahf
cmc
in
lret
in
mov
sub
push
adc
stc
xchg
mov
imul
pop
jns
xor
jg
mov
hlt
add
js
cmp
and
jle
mov
int
or
popf
mov
jmp
cs
shll
cltd
xchg
inc
fwait
mov
sbbl
add
scas
movsl
nop
fwait
repnz
lcall
mul
cmp
sti
adcb
popa
jg
cwtl
mov
dec
dec
or
cltd
adc
push
cwtl
insb
adc
jne
xchg
jl
add
push
cwtl
mov
in
outsl
pop
mov
cmp
call
fsubl
out
xor
popa
sub
adc
je
mov
add
ljmp
jnp
and
rolb
push
ljmp
push
push
aas
xor
sysret
data16
les
shrb
adc
out
xchg
jbe
lret
or
cmpb
aam
dec
xchg
test
sbb
lock
mov
test
mov
je,pt
push
bound
loope
nop
push
sub
repnz
lahf
mov
or
mov
xchg
ja
sahf
sub
mov
sar
jbe
and
dec
xchg
sub
mov
inc
pop
pop
jge
sbb
arpl
jb
mov
or
mov
dec
andl
adc
cwtl
sbb
mov
xchg
jecxz
test
jbe
xor
and
and
push
cmp
test
or
xor
mov
jecxz
loop
nop
sub
outsl
test
mov
rcrb
bound
push
jns,pn
dec
jp
xchg
xor
pop
mov
stos
mov
mov
gs
addb
fnstenv
jmp
mov
pop
mov
push
shll
fadds
jns
in
icebp
xchg
mov
sub
adc
jo
pop
sub
ret
sub
movsb
mov
stos
popf
push
out
ficoms
int3
mov
jge
shrb
jns
push
jecxz
xchg
jae
jbe
push
lea
insb
lahf
inc
xor
fbld
inc
xor
cmpsl
test
xor
ss
push
lock
mov
push
push
push
cmp
nop
mov
and
pop
cmp
rorb
nop
mov
push
leave
adc
fisttpll
adc
adc
repnz
push
scas
inc
ljmp
xor
xchg
or
lds
orb
push
cmp
dec
inc
pop
sbb
das
outsl
or
sbb
xor
push
push
es
sarl
xlat
lret
aaa
add
jg
in
aad
loop
inc
mov
pop
add
pushf
push
lods
fiaddl
movsb
fmuls
test
inc
faddp
jno
mov
inc
xchg
and
imull
nop
mov
xor
pop
je
xor
push
cmpsl
push
in
ljmp
xchg
inc
mov
mov
adc
hlt
out
jge
cmpsb
mov
xchg
mov
mov
xchg
in
sbb
or
fs
fildl
sub
stos
add
and
and
sub
or
lcall
bound
rclb
subb
sub
push
push
test
mov
arpl
sbb
movsb
pushf
shlb
mov
in
xlat
sub
lods
mov
push
out
mov
ret
push
or
mov
inc
jg
mov
mov
pop
xchg
mov
clc
out
add
sbb
fiaddl
lods
dec
je
pop
sti
mov
and
cmp
add
int
bound
inc
loope
or
xor
and
addr16
mov
push
clc
in
fidivrl
or
jbe
pop
cmpsl
test
cmpsl
cmpsb
stc
rcr
xchg
jae
dec
push
dec
jl
call
push
jmp
cmp
int
test
sysenter
scas
sarb
jno
lock
adc
inc
xchg
mov
int
ficoml
push
push
lea
push
push
push
push
push
jg
test
pop
push
push
push
pop
pop
pop
shl
add
mov
xchg
push
dec
pop
loop
jecxz
aad
and
je
mov
test
nop
xchg
ret
sub
xor
add
sti
pusha
pop
pop
and
or
test
or
cld
push
pop
loop
jecxz
or
dec
cwtl
lahf
xchg
sub
inc
sub
dec
or
mov
mov
repz
dec
sbb
inc
nop
push
movzbl
push
xor
xor
pop
cld
push
cmp
pop
loop
pop
shr
mov
push
push
mov
pop
pop
test
js
push
and
pop
nop
dec
inc
jmp
jmp
call
or
cmc
push
rol
pop
fnop
push
mov
pop
jae
test
push
dec
pop
nop
add
mov
cmc
je
jno
sub
loop
jecxz
movsb
cmp
jmp
mov
ljmp
sub
scas
out
stos
inc
add
nop
cld
push
add
push
pop
pop
jns
xor
test
test
clc
cld
mov
jmp
pop
pop
mov
mov
jnp
mov
enter
pop
je
pop
mov
fwait
outsb
add
ss
xor
jp
icebp
add
pop
push
add
mov
pop
lea
push
and
pop
push
jb
or
pop
rol
cmc
cmc
cld
xor
add
push
jge
push
add
pop
ror
jo
jbe
or
nop
jge
rol
jle
jns
push
addr16
addr16
pop
test
jne
jmp
push
movzbl
or
rol
push
push
sub
pop
pop
jbe
test
cmc
loop
pop
js
push
xor
pop
push
xchg
pop
mov
push
test
pop
push
add
pop
jne
add
cmc
cld
test
push
add
pop
push
inc
pop
jns
push
jnp
test
pop
push
push
pop
pop
cmp
and
cmc
clc
stc
push
mov
xor
pop
and
push
push
push
pop
pop
pop
stc
cmc
cld
cld
mov
inc
inc
inc
inc
loop
jecxz
mov
loopne
inc
inc
dec
and
vpunpckhqdq
outsb
int3
cmp
cmp
es
clc
cmc
and
xlat
rclb
shlb
in
in
mov
sti
repz
jl
add
rcll
bound
jmp
xor
lret
add
out
movsb
repz
pop
mov
lea
jb
adc
inc
push
test
pop
cmp
rol
test
nop
add
push
jae
rol
pop
shl
jno
rol
or
dec
jne
loop
jecxz
cmpsl
sbb
lahf
jns
mov
inc
loop
jecxz
mov
and
inc
loop
jecxz
dec
jbe
xor
adc
inc
or
xchg
cmpsw
xchg
into
cwtl
repz
xor
xchg
jo
stos
aas
pop
sbb
mov
add
add
sub
adc
mov
cmpsl
into
mov
ja
icebp
inc
xor
aad
inc
dec
lcall
movsb
test
out
sti
inc
mov
aas
cs
ljmp
push
push
not
not
pop
pop
push
pop
cld
rol
dec
jne
loop
jecxz
aaa
ja
mov
rcl
add
or
aad
jnp
lret
stc
lea
adc
dec
hlt
popa
xchg
daa
pusha
jmp
adc
xchg
mov
pushf
popf
stos
inc
lret
jns
movsb
not
cmpsl
add
inc
dec
sbb
add
fcoms
dec
or
add
iret
enter
out
sub
outsb
leave
push
sti
loopne
in
outsl
cmp
cltd
movsl
dec
call
jae
repz
sub
mov
inc
cmpsb
xor
fcmovb
xchg
out
mov
pop
mov
hlt
jmp
dec
fs
inc
xchg
sbb
sub
fsts
test
xor
aaa
faddl
jg
and
pop
sti
mov
sub
pop
cmpb
add
repnz
xchg
jae
cmp
cld
mov
sbb
sbb
cmc
popf
icebp
sbb
mov
mov
jl
or
xchg
adc
ret
dec
mov
out
cwtl
cmp
int
or
dec
mov
xchg
lret
fidivrl
leave
or
adc
fs
xor
gs
sub
pop
ss
inc
dec
mov
mov
jmp
imull
stos
mov
mov
xor
mov
jnp
jp
and
cmpsb
pushl
cli
pop
in
cmpsl
jge
int3
out
pushf
jp
xor
jo
xorl
outsl
cmp
into
shll
jl
xchg
shl
loop
aam
or
fstpl
pop
pmaxub
xchg
repnz
leave
adc
xor
sub
add
xor
lret
lahf
add
dec
cli
sub
pushf
xlat
jb
inc
jge
dec
and
add
ds
test
mov
addb
mov
movsb
adc
push
pop
jns
ret
test
mov
push
push
dec
sbb
movsb
ljmp
or
xchg
push
push
ljmp
push
cmp
mov
test
xchg
shlb
call
mov
arpl
cli
lea
inc
in
loop
dec
push
or
pusha
dec
pop
mov
mov
jl
mov
mov
fcmove
sbb
aam
xor
clc
ret
test
hlt
mov
cmp
fiaddl
adc
andl
jmp
jg
mov
stos
jge
insb
aad
xchg
jnp
repnz
mov
sarb
push
cmpsl
js
es
inc
mov
ja
adc
dec
jne
pop
jns
aaa
sahf
mov
repnz
icebp
mov
mov
lahf
outsb
mov
xchg
repnz
ficoms
sbb
sbb
inc
outsl
and
jno
xor
gs
pop
out
addr16
sub
out
out
and
repnz
fwait
mov
lret
call
xlat
cmpb
loop
data16
xchg
pop
push
bound
pop
dec
rcrb
pop
jo
popa
fisubrs
mov
pop
inc
fistpll
lret
aad
xor
xor
icebp
xchg
xchg
push
cmc
scas
mov
call
push
rcrb
call
pop
shrb
orl
scas
into
test
dec
cwtl
pop
add
xchg
cli
sub
push
lret
scas
nop
jg
ret
leave
std
rorl
add
sbb
es
sub
push
daa
arpl
xor
movsl
les
into
inc
push
add
ret
and
push
shrl
mov
ds
sahf
cmc
mov
ljmp
cmp
rcrl
cmp
mov
pop
pop
inc
mov
mov
jle
cltd
mov
addr16
xor
cmp
mov
fstl
xor
test
mov
pushf
imul
outsl
xchg
mov
xor
lods
dec
rclb
sub
imul
mov
test
fimull
sub
cmp
in
or
and
cli
loope
or
and
inc
mov
cmp
mov
xorb
xlat
pop
push
movsb
mov
pop
sbb
test
fwait
mov
neg
cltd
or
add
adc
cs
and
dec
adcl
dec
aam
adc
sub
test
jge
mov
repz
sarb
mov
jl
or
xor
mov
mov
testb
pushf
and
data16
xchg
sahf
push
mov
leave
test
inc
repz
push
sbb
add
inc
jno
out
ja
add
dec
test
fsub
xor
inc
add
sub
idivb
movsl
inc
loopne
pop
or
ss
jae
jle
sbb
pushf
ret
jge
lret
shll
xor
daa
mov
aaa
ljmp
stos
testb
xchg
push
dec
sub
and
into
pop
je
jnp
pop
and
mov
sbb
aaa
pusha
or
movl
mov
js
push
cmp
imul
aad
cmp
sub
cmp
imul
dec
dec
fcompl
cmp
es
mov
jg
pop
insl
cmp
fisubs
or
dec
and
lret
fbstp
adcl
mov
lods
xor
mov
or
or
mov
outsb
push
std
fs
add
xchg
xor
js
lcall
push
cld
mov
ss
cmp
dec
enter
sbb
and
in
lods
mov
call
xchg
loopne
xchg
inc
std
imul
jno
imul
dec
cwtl
mov
pusha
in
cmpl
push
mov
lds
cmp
call
repz
jmp
xchg
xorl
adc
insl
sub
repnz
xor
rolb
bound
adc
or
mov
fcmovbe
leave
inc
sub
add
outsl
sarl
mov
insb
mov
insb
shll
push
test
sbb
and
push
xchg
les
pop
les
jge
sahf
divb
repz
dec
shll
inc
sahf
cwtl
pusha
xchg
push
fstl
pop
call
leave
psubusw
xor
jne
cmp
sub
les
jo
ret
push
dec
or
in
lahf
fldcw
pop
leave
xchg
rol
sar
push
scas
inc
adc
pop
jmp
mov
popf
dec
jge
xchg
repz
pop
int3
jecxz
aad
jae
sbb
jl
enter
push
leave
std
push
rcl
jae
repnz
loopne
cli
sub
roll
popa
repnz
sbb
adc
sti
adc
lds
cmp
ja
cmc
cmp
mov
clc
mov
cli
add
jp
imul
inc
gs
sbb
cmpsb
push
insb
into
sub
lds
jge
mov
les
insb
sti
int3
out
dec
xchg
enter
sbb
xchg
sbb
loope
cmp
fisubs
gs
and
inc
xor
ret
pop
mov
xchg
shlb
cs
cmpsb
adc
arpl
mov
xor
mov
dec
ljmp
jl
or
pop
inc
rorb
out
loopne
add
mov
sbb
repnz
mov
fsubs
add
lahf
lret
imul
sarl
cli
movsb
outsl
pop
out
hlt
aaa
xor
mov
fcmovbe
mov
cltd
sub
xchg
xchg
or
sbb
scas
jns
jmp
aas
cmp
pushf
bound
mov
shr
inc
aas
xor
or
popa
mov
mov
aas
jno
push
pop
lahf
jo
enter
cmp
pusha
push
push
ja
add
into
and
cmp
dec
outsl
jnp
jne
mov
jne
in
bound
jle
push
je
and
ret
mov
subl
or
les
adcl
cmp
or
sub
int
int3
mov
js
push
adc
dec
mov
xchg
xchg
pop
jle
inc
cltd
pop
stos
push
pop
call
push
mov
dec
mov
jmp
test
pop
icebp
cmpsl
and
or
loop
sub
xchg
sub
mov
and
outsl
outsb
and
icebp
std
aas
or
out
aas
das
sarl
inc
inc
jp
xchg
pop
loopne
scas
jecxz
fildll
sub
testb
add
mov
imul
cmp
push
mov
scas
add
stc
mov
mov
pushf
test
in
lret
in
test
adc
scas
xor
push
inc
pop
mov
pushl
fdivp
stc
dec
mov
aas
dec
jmp
mov
jnp
mov
push
push
mov
aad
jmp
dec
out
adc
lret
jo
and
fidivl
cmpsl
push
pop
ret
inc
outsb
das
sbb
xor
xchg
fmuls
and
and
filds
xor
jmp
ss
iret
sub
xor
repz
jp
out
and
xchg
push
ljmp
mov
push
cwtl
dec
daa
repz
mov
cmp
lods
ja
dec
dec
sbb
adc
int
js
cmc
stos
cmp
mov
xchg
movsb
icebp
hlt
dec
out
pop
pusha
dec
mov
push
sub
xor
cmpsl
pop
popa
sti
push
jo
repnz
xchg
cmp
imul
jb
add
out
pop
arpl
push
inc
cltd
mov
js
mov
inc
lret
mov
cmp
lea
arpl
push
or
mov
sub
jb
jl
out
pop
jecxz
bound
and
inc
xchg
push
push
aam
push
cltd
cmp
lret
mov
in
jo
lock
push
fcmovnu
xchg
xor
push
inc
mov
lods
pop
out
negb
pop
cwtl
aad
xchg
push
aaa
test
jp
aaa
push
lods
or
cmpl
jbe
cmp
loop
mov
push
jle
int3
push
add
pop
testb
push
scas
loop
cmovb
lret
mov
rcr
aaa
lcall
rcl
mov
push
push
in
dec
into
pop
jmp
rdpmc
addr16
xor
ljmp
xchg
call
adc
xor
lret
aaa
xor
pop
or
cmp
jge
loopne
leave
mov
xchg
and
adc
jmp
cmpb
into
mov
dec
sahf
scas
lret
dec
repz
or
push
sbb
je
popa
jge
mov
pushf
jb
out
in
nop
aad
push
je
insb
pop
xchg
cmpsb
jne
hlt
inc
adc
xor
sbb
mov
xor
xchg
xchg
iret
and
outsl
xchg
xchg
repnz
cmp
mov
xchg
loop,pn
xchg
out
cwtl
push
jg
dec
inc
push
outsl
xchg
add
sbb
dec
inc
inc
xchg
fldt
push
iret
enter
xlat
mov
add
jge
xor
push
fbld
mov
jmp
mov
loop
les
lret
jl
jne
fidivrl
fdivr
pop
pop
xchg
jecxz
test
idivb
jne
aaa
lahf
pop
adc
mov
mov
fstl
sub
iret
les
insl
adc
mov
push
je
test
fisttps
jae
dec
mov
insl
in
push
cltd
mov
insl
lret
dec
xchg
mov
test
and
jae
fucomip
dec
in
or
outsb
nop
stos
inc
sub
push
mov
sti
add
int
mov
mov
cmpsl
dec
mull
repz
xor
jmp
lret
pop
iret
dec
mov
repnz
cmp
out
pop
mov
lods
sub
cs
cmpsb
in
dec
leave
sbb
mov
push
out
push
daa
inc
nop
rcll
xchg
mov
in
jg
loopne
jl
fdivl
cmp
icebp
xchg
cmp
cld
and
pop
dec
mov
daa
mov
arpl
loop
adc
jmp
dec
es
mov
jae
dec
into
mov
call
dec
sbb
lcall
sub
std
testb
mov
dec
pusha
mov
std
popa
pop
inc
popa
jo
repz
push
jnp
popa
ret
lods
shlb
shrb
mov
or
fldt
cmp
frstor
cmp
int3
mov
jmp
cmp
jnp
inc
pusha
adc
sbb
push
dec
push
cld
sbb
push
test
fwait
mov
lods
push
jle
inc
cs
or
sbb
lahf
adc
inc
scas
testb
jg
or
jne
jbe
fsts
push
mov
push
rcll
add
push
movsb
jge
pop
loop
mov
sahf
outsb
insb
mov
xchg
scas
outsl
inc
scas
test
mov
push
mov
mov
call
int3
lea
cwtl
and
data16
nop
cmpsb
outsl
cmc
outsl
jno
mov
jae
fs
scas
xor
scas
mov
push
out
popa
jnp
roll
mov
mov
push
test
scas
xchg
scas
cmpsl
dec
sub
jns
dec
push
repz
dec
pop
sub
mov
test
insl
pop
shl
pop
sbbb
jmp
sbb
mov
push
jmp
andl
imull
mov
add
enter
pop
cmpsb
aad
les
mov
sbb
movsl
dec
and
fldl
sbb
mov
ljmp
push
ret
rorl
loop
lcall
cmp
mov
cmp
add
sbb
and
push
cmp
icebp
pop
sarl
cmpsb
jle
push
loop
pop
jmp
pop
cmp
cmp
sbb
cltd
sub
mov
repz
dec
dec
lods
dec
mov
sub
popa
ss
movsb
push
adc
mov
push
mov
mov
add
fs
xor
sbb
daa
add
fsub
mov
mov
mov
jg
mov
in
lock
xor
mov
pop
cwtl
movsb
xor
cmc
out
or
sub
sub
dec
fiadds
icebp
in
or
sahf
mov
fsubrl
popa
xchg
mov
sahf
mov
pop
xor
cmp
inc
inc
repnz
jno
movsb
xchg
testl
xchg
hlt
scas
xor
sub
lahf
xchg
adc
shll
cmp
fnstcw
push
xchg
or
push
xchg
mov
rcl
xlat
gs
arpl
add
int
loopne
inc
mov
inc
inc
cmp
fstpt
inc
int3
int
mov
dec
in
push
or
jl
bound
insb
xor
mov
and
dec
test
pop
aad
dec
push
mov
repz
fsubrs
inc
outsl
inc
dec
lock
cltd
push
enter
dec
dec
pop
mov
fwait
stc
mov
cld
mov
dec
inc
push
push
add
cmp
in
cltd
add
ja
roll
mov
mov
mov
inc
mov
ja
cmp
mov
push
fisttpl
xor
ss
push
push
and
push
pop
cs
sbb
enter
imul
in
add
cmpsl
div
sbb
int3
mov
loope
into
arpl
ljmp
xchg
sahf
pop
sub
ret
or
jecxz
sbb
aas
and
daa
add
sub
adc
adc
cwtl
fistpl
pop
xchg
sbb
loop
fisubs
add
xorb
sbb
repnz
in
mov
sub
push
incb
and
push
dec
sub
xchg
or
cmp
addr16
sub
fldenv
add
xchg
xchg
lods
jmp
fisttpl
cmpsl
scas
xor
enter
sub
adc
or
and
sbb
testb
or
repz
mov
mov
movb
bound
outsl
mov
hlt
popf
mov
push
pop
rcl
arpl
mov
in
stc
rol
xchg
outsb
leave
add
into
dec
adc
rcll
mov
xorb
fbstp
cmp
testb
call
out
mov
xor
and
xor
repnz
jg
add
lds
cmc
mov
cwtl
mov
lea
les
jnp
mov
xorb
adcl
push
mov
sub
pop
nop
das
sub
xlat
jl
out
or
lods
sbb
dec
pop
dec
shlb
xor
outsb
fstp
stos
aam
add
or
ljmp
mov
sbbb
pop
rolb
and
jbe
pushf
aad
xchg
push
cmp
xchg
cmc
mov
rol
aam
sbb
scas
add
lods
jns
mov
dec
push
ja
cmc
pop
adc
push
mov
jns
xor
pop
or
outsb
push
cmc
mov
lods
dec
leave
inc
loop
shlb
pop
dec
rcl
add
int3
lock
addr16
sbbb
mov
cld
ret
lret
cmp
imul
shll
pop
into
cmp
nop
pop
into
in
push
repnz
dec
cwtl
inc
mov
jne
dec
and
popa
sbb
lea
sub
arpl
inc
or
lods
add
mov
int3
ficoms
dec
pop
pop
popf
adc
ret
push
lahf
sbbb
sbb
call
std
jbe
ds
cmpsl
cli
push
or
xchg
fldt
cmpsb
cmp
xchg
iret
cwtl
or
popa
push
and
insb
adc
orl
cmp
test
mov
hlt
inc
push
sbb
inc
jnp
test
inc
xchg
mov
push
and
test
push
fistpll
xchg
int
pop
adc
pop
lods
je
jmp
rorl
jle
sub
cli
ss
or
push
sub
or
out
mov
cmp
jno
lret
cmp
cmp
lcall
sub
mov
test
std
lds
iret
lds
xchg
push
fcompl
push
pop
in
xchg
mov
pushf
aas
fiadds
cltd
inc
sbb
les
movsl
std
orb
pop
ret
pop
mov
sub
cwtl
fiaddl
imul
jns
push
jp
push
mov
xchg
bound
xor
hlt
std
mov
cmp
and
lahf
cmp
adc
mov
gs
mov
mov
sbbb
test
sahf
scas
outsb
lods
push
add
mov
nop
or
push
lahf
aam
int
lods
pushf
adcl
pusha
mov
inc
in
gs
inc
cmpsb
xchg
xchg
and
xor
add
cltd
xor
in
sub
add
sub
pop
mov
mov
push
int
outsl
loope
negw
inc
fxch
mov
xchg
aaa
jle
fmull
cmp
jb
out
mov
dec
xlat
jmp
cmpsb
pop
shl
les
xchg
addr16
iret
and
test
fcmovnu
pusha
mov
sub
mov
add
pop
sbb
xor
and
insl
sub
mov
test
adc
cmp
sub
sbb
dec
leave
fdivr
imul
inc
dec
rolb
xor
cltd
fs
pop
add
mov
call
stos
or
add
jecxz
lea
mov
ss
cmp
jmp
cli
lret
jae
mov
mov
jne
ret
pop
lret
adc
xorl
aam
addr16
clc
pop
mov
fwait
push
mov
sub
sbb
fwait
popa
sub
enter
add
sub
repnz
orl
mov
dec
push
and
pushf
std
or
mov
push
cmp
jae
das
cld
test
shlb
xor
inc
pop
cld
sub
loope
gs
movsb
cmp
loope
aaa
adc
imul
imul
push
lahf
in
and
imul
push
hlt
out
cmp
mov
cwtl
inc
sbb
addr16
fdivs
push
jecxz
mov
pushf
jg
mov
arpl
push
cmpsb
mov
add
jg
out
cmp
push
inc
inc
sub
cmpb
jne
mov
mov
inc
nop
insl
psubsb
mov
cmp
popa
cmp
push
les
push
shrb
into
rol
jle
fdivs
pushf
cmp
lock
test
aam
mov
adc
pushf
mov
mov
test
mov
mov
ret
repz
leave
xor
imul
imul
xor
jg
add
lret
lods
mov
inc
mov
loopne
int
xlat
nop
test
inc
pop
lods
mov
add
mov
or
addr16
dec
ret
cmp
dec
sbb
daa
incl
fisubl
loope
sti
and
loop
pop
sbb
out
jecxz
mov
pcmpeqb
mov
cmpsb
xor
ljmp
mov
stc
pusha
mov
fdivrs
fwait
loopne
jne
and
mov
add
dec
lea
cmp
int3
dec
jne
test
repz
movsb
add
ja
pop
gs
jo
movsb
add
push
inc
push
mov
popa
xchg
pop
xor
mov
mov
lahf
or
push
das
loopne
inc
sub
cli
repnz
addr16
imul
mov
test
cmp
push
ret
mov
fs
xchg
mov
inc
hlt
lods
test
shll
push
jae
aam
fdivr
add
add
pop
test
dec
sbb
outsb
xor
aas
aad
mov
outsl
lcall
mov
sbb
jno
in
adc
sti
aad
addb
fsubl
inc
inc
in
push
fistps
aad
add
jp
fcmovnb
cmc
pop
in
mov
push
sub
xor
or
or
push
pop
inc
mov
ret
mov
dec
xchg
jae
push
sbb
arpl
je
pop
adc
push
jmp
push
adc
sub
xor
add
mov
stos
std
sti
js
push
pop
xchg
cwtl
pop
pop
jmp
es
nop
lahf
jo
repz
jne
mov
loopne
lret
dec
in
cmp
lods
into
sub
and
dec
loop
inc
and
sti
adc
daa
jo
adc
xchg
push
xchg
add
mov
inc
insb
mov
lods
rcrl
mov
push
ds
stos
outsb
push
and
les
lahf
push
into
mov
cbtw
and
fcomps
mov
sbb
xor
lret
xchg
mov
cwtl
fwait
inc
mov
mov
mov
cmpsl
test
pusha
pop
xchg
lret
add
sbb
dec
cs
iret
push
pop
mov
push
sub
xor
xchg
adcl
insl
sbb
sub
ss
or
add
loopne
test
push
xlat
lds
sub
je
pushf
pop
cld
jbe
les
hlt
push
call
mov
jl
push
and
cmp
cs
jns
call
xchg
dec
idivl
jg
mov
std
loopne
sti
inc
mov
cmp
ret
inc
sbb
icebp
and
adc
pop
lret
test
pop
addr16
lret
ss
cmp
ffree
xchg
jmp
addr16
gs
push
dec
sahf
mov
loope,pn
mov
dec
push
fsubrl
push
in
out
and
inc
cmp
clc
or
in
out
stc
dec
ljmp
mov
fnstsw
repz
mov
daa
mov
or
or
in
pop
popa
push
cmp
and
lcall
mov
divb
jbe
in
out
mov
mov
in
sub
mov
cmp
repnz
into
push
jge
lds
inc
test
and
int
sbb
cltd
mov
and
mov
rclb
and
andb
mov
xchg
xor
iret
ja
mov
les
das
imul
inc
dec
xchg
std
cmpl
fbld
loope
popa
ret
sub
shrl
and
lcall
icebp
in
push
inc
cltd
inc
pop
popa
shlb
sahf
test
ret
xchg
loop
mov
fs
add
push
dec
sti
and
movsl
cli
adc
inc
jae
std
xor
adc
mov
mov
aaa
sub
outsl
rorb
dec
aam
and
mov
lds
pushw
cmp
mov
pushf
xor
dec
jbe
jnp,pt
test
dec
pop
push
sub
pop
xchg
sti
jg
pop
and
je
sahf
adc
loop
arpl
jl
test
sbb
jne
das
les
mov
and
add
mov
jmp
push
shl
shll
sub
jbe
push
jno
lahf
jno
dec
sahf
jp
lods
lea
inc
sbb
test
insb
push
and
xor
das
and
call
icebp
inc
jo
or
insb
ret
push
ret
xor
sbb
in
xlat
pop
inc
adcl
xor
xchg
pop
fdivrl
aaa
xor
push
jbe
fs
and
sbbb
lods
gs
popa
movsl
stos
or
inc
fsts
loop
enter
rorl
popf
std
bound
sbb
mov
jae
dec
jle
arpl
cmpl
gs
xor
pop
arpl
into
pop
pop
dec
pop
divl
lea
outsl
popa
ret
repz
mov
iret
dec
cmc
rcrb
dec
jnp
cmpsl
shrl
sub
adc
int
mov
outsl
lock
sub
pop
stos
or
mov
aas
pop
loope
xor
test
stos
or
imul
fstpl
in
and
mov
movsb
scas
jge
jle
outsl
in
dec
ljmp
cli
push
stos
push
orl
loope
outsb
pop
scas
test
popa
pop
xlat
xchg
test
xor
mov
pop
xor
lds
je
or
push
jp
cmovne
push
mov
adc
ret
push
xlat
les
sub
dec
scas
lock
gs
or
in
aaa
mov
xchg
loopne
call
or
fistl
inc
adc
push
lods
popa
psubusb
movsb
bound
das
je
and
imul
int3
mov
xor
in
mov
jnp
insl
pop
loope
jo
repnz
bound
paddusw
rorb
xor
dec
cli
xor
sub
push
das
jge
push
pop
xor
jp
rcr
dec
mov
cmp
adc
or
lock
xchg
dec
pop
mov
pusha
lods
cmp
aam
shlb
sub
sub
popf
outsl
sub
cltd
mov
lods
call
pop
iret
pop
pushf
add
cmc
push
int
mov
mov
movsb
jno
add
lods
es
lcall
mov
pop
cltd
mov
cmpsl
sysenter
in
icebp
aad
inc
mov
and
popf
xor
insl
insl
imul
sub
imul
pop
or
mulb
shll
dec
aad
ds
pop
pop
mov
testb
sub
add
xor
pop
push
into
fs
mov
add
add
imul
je
push
add
mov
jg
adc
pusha
sbb
mov
fs
mov
adc
jne
and
mov
jbe
adc
pop
in
push
aaa
bnd
jg
aad
leave
insl
shrl
int
xchg
test
sub
push
jecxz
leave
int
sub
mov
mov
cmpl
imul
sbb
mov
outsl
loopne
rorb
or
mulb
inc
push
mov
ret
mov
jbe
in
pop
addr16
pop
mov
sarl
scas
mov
mov
xchg
fstpt
pop
jbe
sub
aam
daa
mov
jmp
cli
jns
mov
inc
in
mov
adc
das
enter
loopne
xor
mov
loop
adc
ja
fisubl
sub
popa
in
mov
cmpsl
mov
in
in
mov
scas
das
pop
cmp
dec
push
mull
fmull
popf
or
mov
cld
xor
ret
push
add
es
in
xchg
mov
mov
xor
cmpsl
adc
pop
and
push
xchg
scas
pop
in
jmp
dec
jmp
mov
lods
imul
mov
ficoml
or
xchg
xor
out
cmp
out
pop
sbb
pop
sarl
iret
lahf
repnz
or
mov
xchg
in
out
cmp
daa
sti
mov
mov
mov
enter
mov
or
mov
add
movsb
mov
sbb
jge
fdivl
and
pop
mov
sub
add
push
subb
arpl
int
push
mov
sub
or
push
mov
fst
out
rorb
fisubrl
and
shrb
jle
ja
push
fwait
icebp
or
nop
dec
dec
mov
leave
cltd
outsl
xor
sbb
sub
test
inc
je
iret
ret
lods
mov
cmp
aam
cmp
sub
mov
lcall
roll
xchg
movsl
push
into
test
stos
mov
and
dec
pop
out
pop
and
jnp
popa
jno
pop
mov
or
jmp
lahf
outsb
clc
lods
cltd
mov
inc
inc
xor
xlat
sbb
xor
test
shlb
lret
push
jmp
push
incb
and
int
inc
mov
sub
pop
xor
lods
lock
mov
mov
lods
push
aad
push
aaa
mov
dec
jae
mov
rcr
mov
mov
cmp
clc
jne
jp
mov
fcompl
aaa
out
sbb
adc
imull
fstl
int
daa
shll
sub
jg
or
xchg
lret
adc
shlb
ja
es
mov
xchg
sbb
pop
jbe
sub
fisubl
xchg
inc
fs
push
pushf
fldcw
jbe
jbe
fnstenv
out
popf
pop
adc
push
ret
cmp
into
loop
sub
inc
aad
and
cmc
mov
inc
and
addl
add
mov
jmp
outsl
cmp
mov
inc
pop
inc
adc
ret
dec
in
pop
xor
or
cmp
mov
lods
outsl
scas
sbbb
int3
subb
jne
adc
addr16
add
mov
pop
inc
jl
sarb
dec
js
sub
sahf
jnp
mov
stos
inc
mov
dec
and
jno
cltd
test
lahf
sarb
cmc
stos
movsb
rcrl
or
orl
xchg
cli
fbstp
push
inc
sub
or
pusha
cmp
and
or
loope
xlat
add
imul
loope
mov
mov
lret
cmp
adc
sub
cmc
mov
out
xor
jns
sub
dec
movsl
or
out
sub
nop
cmc
daa
push
js
mov
fbstp
aam
mov
and
lods
test
jmp
shlb
cwtl
jg
mov
int
add
xchg
sub
insl
pop
push
sbb
in
jb
xchg
mov
or
fdivp
lret
add
cld
mov
outsl
in
and
xchg
ja
dec
pop
lcall
rorb
outsb
imul
pop
pop
aas
adc
dec
out
ljmp
in
mov
dec
arpl
mov
inc
cs
sahf
movsl
and
cmpsb
into
mov
daa
dec
ds
lods
in
andb
mov
loopne
test
xor
xor
fsubl
dec
mov
dec
enter
loop
cs
sub
call
push
jae
js
mov
adc
add
pop
cmpsl
xlat
imulb
mov
fs
call
lds
jae
cwtl
cs
icebp
cwtl
xor
sub
shrl
repnz
lea
imul
xor
adc
pop
out
mov
xor
scas
and
xchg
add
pop
aas
test
je
aaa
jo
jb
bound
jns
xor
mov
lret
pop
mov
mov
stc
arpl
inc
jns
scas
mov
out
shlb
pop
sub
mov
rolb
loope
stc
push
aam
jns
loope
inc
stos
imull
cli
aad
shl
jno
or
test
xor
pminub
lds
addb
xor
mov
fdivr
xlat
add
dec
out
ss
xor
cltd
jecxz
or
xor
ljmp
js
data16
in
mov
fdivrl
insl
jecxz
mov
mov
mov
cs
and
sub
adc
push
ret
sbb
cmc
pop
sti
sub
jb
out
mov
lahf
out
leave
jo
icebp
leave
in
push
enter
gs
push
insb
stos
popf
lcall
sub
mov
jb
pop
cli
sbb
stos
ds
push
add
jmp
mov
cmp
inc
sub
enter
loop
fildll
loope
test
adc
push
mov
jo
movsl
dec
xor
repnz
mov
in
callw
mov
push
cli
mov
pusha
jne
jo
jp
mov
xorb
pop
gs
ret
out
lahf
mov
adc
cmp
rclb
mov
pop
cmp
jne
repz
aaa
pop
leave
lret
cmp
xor
push
xor
mov
psllw
imul
dec
loope
lret
addb
dec
sbb
hlt
pop
and
lods
sub
loope
sub
ljmp
sub
not
mov
dec
test
movsl
loopne
adc
inc
add
mov
cmpsl
je
mov
jl
jb
pop
pop
and
fmuls
hlt
jg
test
pusha
pop
jg
jg
mov
push
mov
and
int3
mov
icebp
data16
pop
aaa
sub
push
xchg
fisubl
mov
pop
hlt
pushf
add
aas
scas
xchg
int3
push
mov
inc
pop
roll
mov
leave
movsl
jl
cmpsl
lcall
rcll
xchg
je
shr
stos
das
adc
or
divb
xchg
pop
cli
movsl
inc
addr16
mov
aam
and
data16
mov
rcrb
stc
hlt
mov
popa
push
sub
jecxz
test
pop
notb
pop
xor
adc
mov
insb
fsts
inc
imul
aas
sbb
sbb
loopne
sbb
lock
push
insb
sub
divl
shl
leave
cmp
lret
shlb
hlt
jne
les
or
add
clc
mov
fldt
and
xchg
test
lock
or
dec
push
cltd
and
mov
ja
inc
mov
push
sub
cmp
or
inc
cmpsb
stos
push
das
dec
clc
mov
push
jne
out
xor
in
ss
xchg
mov
mov
fadds
mov
loop
cmp
flds
adc
push
ds
test
push
cmp
out
ljmp
hlt
cmp
mov
ficomps
andl
pusha
mov
xor
inc
rcll
or
insl
rcll
rcll
in
addl
jb
ss
rolb
je
std
in
es
sahf
add
adc
xchg
nop
es
test
ljmp
or
mov
mov
pop
ja
add
adc
lods
pop
xchg
jmp
inc
cmovs
and
add
test
out
sarl
or
mov
bound
ds
add
jo
cmp
mov
sub
into
call
out
pop
aas
mov
cmpsb
push
mov
jns
push
stos
dec
shr
cld
rorw
fnstcw
lcall
mov
sub
cmc
call
adc
inc
mov
fcoml
fidivrl
clc
jns
mov
pop
cli
out
adc
cs
mov
sub
cmp
mov
jmp
mov
and
jmp
cmovae
bound
or
cli
jle
sbb
fs
clc
imulb
stc
pop
sbb
sub
push
cld
pop
out
sub
imul
cmc
push
push
add
sub
sbb
dec
pop
mov
or
sub
mov
lea
lret
addr16
int3
pop
jg
xchg
bound
into
and
ja
jne
jb
mov
push
push
fcomps
push
dec
jmp
es
push
popf
testl
ret
add
mov
jns
add
mov
sahf
leave
fistl
std
int
bound
jecxz
fidivl
cmp
in
mov
stos
inc
mov
and
cli
fisttpll
add
int3
adc
sbb
adc
mov
xchg
xchg
sub
fstps
negl
cld
cmp
movsb
imul
sub
inc
jae
sbb
daa
jbe
mov
cmpl
cmp
dec
pop
mov
xchg
ret
pop
sub
mov
xchg
in
mov
inc
push
mov
std
sbb
pop
jne
mov
add
pop
jo
fisubrl
jle
cwtl
inc
pop
jo
mov
std
and
aad
flds
enter
mov
idiv
mov
pop
push
mov
loop
jecxz
stc
pusha
dec
scas
sub
xor
sahf
pop
out
adc
stc
hlt
jb
arpl
jmp
scas
insl
dec
dec
inc
xchg
xor
testl
jg
push
sbb
or
aad
sbb
push
shrl
add
dec
sar
sub
lret
cmp
push
aaa
pop
mov
lods
mov
and
lods
out
in
jge
daa
jge
mov
fs
scas
jl
lods
lea
lret
xor
call
push
cwtl
or
mov
mov
adc
in
mov
adcb
out
stos
push
cmp
dec
imul
lret
mov
ds
jo
dec
pop
flds
loopne
mov
dec
fistl
cmp
pop
aad
imul
lret
dec
and
loop
pop
negl
or
sbb
mov
xchg
jbe
imul
sar
mov
lds
lcall
pushf
mul
cli
mov
pop
loopne
inc
sbb
adc
cmpsl
mov
sbb
sbb
jb
call
loop
movsl
hlt
scas
sub
push
inc
repz
outsl
xchg
or
pop
out
sbb
bound
fbld
dec
mov
int
call
or
pushf
std
mov
mov
in
mov
aad
jbe
xchg
or
aad
mov
mov
movl
inc
xorb
packssdw
rclb
sti
cmp
inc
xor
hlt
mov
inc
sti
daa
pop
mov
mov
fs
mov
sub
loope
outsb
xor
mov
cmp
pop
mov
mov
jnp
cmp
shld
je
mov
test
rcrb
inc
pop
movsl
mov
and
mov
imul
mov
push
cmovne
hlt
mov
mov
xor
fsubl
mov
ja
cmp
adc
repz
fstps
outsb
mov
or
or
xchg
arpl
cmp
mov
pusha
call
dec
es
cld
add
aam
inc
jno
push
ja
popf
std
jecxz
jl
xchg
xor
mov
cmp
push
shrb
int3
pop
jmp
ja
dec
pop
cld
sbb
jae
pop
sbb
data16
fbld
adc
xchg
xchg
in
or
inc
mov
push
pop
icebp
cltd
xchg
cmp
movsl
test
test
iret
imul
sti
repnz
or
sub
xchg
push
xchg
jo
aam
fidivrl
mov
shr
ret
out
pop
or
lea
out
mov
push
into
jle
mov
nop
sub
fstpt
sbb
stos
jecxz
mov
imul
mov
movsb
inc
icebp
jmp
xor
jns
fistpll
cmc
sti
rcrl
or
std
xchg
and
out
ss
mov
daa
mov
sti
sub
sti
fwait
jb
mov
jbe
push
add
push
mov
jae
jb
inc
sbb
leave
cmp
cmp
enter
jge
fistpl
and
jg
mov
outsl
cmc
xor
add
push
cmp
mov
in
fscale
orl
and
xchg
xor
dec
in
cwtl
mov
in
cmpsb
or
sbb
mov
shll
scas
lock
inc
adc
fldcw
std
repnz
sti
sub
mov
imul
neg
fildll
mov
test
fldenv
mov
adc
adc
sbb
aaa
je
lods
sub
add
bnd
insl
cld
sub
imul
add
je
mov
xor
cmp
adc
jae
mov
xchg
mov
cmp
lea
jae
cmp
xchg
arpl
push
sahf
xchg
cld
cmpsb
xchg
sub
mov
hlt
jp
out
add
les
ja
sti
inc
movsl
and
inc
mov
push
pushf
sub
mov
dec
out
jg
add
loope,pt
jne
loop
xchg
stc
xor
xlat
and
sbb
xchg
outsl
pop
cli
shlb
test
shr
lods
divl
cltd
lea
shll
cltd
dec
dec
fisubs
push
push
enter
push
add
dec
sarl
fwait
and
outsl
test
and
imul
cmp
fxtract
jae
mov
and
mov
lods
pop
lock
and
jnp
insl
ja
push
mov
iret
int
sub
mov
imul
dec
xchg
dec
aam
dec
push
inc
sub
decl
imul
cld
xchg
fidivs
roll
and
inc
cmp
add
add
push
and
ds
add
mov
mov
fistps
andl
push
push
arpl
xchg
jecxz
or
fucomi
sbbb
mov
mov
push
lods
adc
xchg
in
fidivrl
pop
cmp
adc
lock
pop
movsb
jns
sbb
jg
leave
mov
mov
mov
movsb
sbb
push
out
shll
aad
inc
jne
or
andl
imul
sbb
cltd
scas
out
lahf
scas
outsb
add
jecxz
imul
pop
hlt
sbb
mov
sarl
fs
xchg
inc
add
and
cmp
mov
pop
hlt
xor
or
push
popf
jbe
filds
fwait
jnp
push
int3
add
pop
inc
xchg
lods
aad
adc
pop
movsl
xchg
mov
pop
lock
jecxz
pop
addl
pop
addr16
into
mov
pusha
add
loope
pop
and
sub
pop
flds
push
cmpsb
add
sbb
mov
js
les
pop
inc
jg
loope
adc
cmp
pop
idivl
cld
push
pushf
or
fcmovbe
jecxz
adc
xchg
inc
in
xor
cmp
xchg
pop
test
rcrb
sub
adc
lret
adcb
in
dec
leave
and
insb
or
or
cld
and
xor
lock
jle
pusha
pusha
or
sbb
cmp
into
lahf
and
and
dec
dec
insb
pop
cmp
loopne
fbld
stos
inc
aaa
ret
push
xor
dec
js
js
scas
inc
es
fcomip
popa
mov
iret
loope
adc
das
sbb
sahf
mov
adc
fwait
sub
hlt
jns
jae
sbbb
lret
xchg
mov
cmp
push
dec
push
les
push
add
shrb
or
dec
leave
aad
adc
jb
icebp
xor
int
pop
sbb
mov
notl
mov
sbb
mov
or
xchg
iret
ret
push
int3
push
cli
push
sub
subb
ret
cmp
pusha
pop
push
cwtl
outsb
loopne
jmp
ljmp
or
jnp
pop
cmp
push
outsb
adc
std
and
fldt
lcall
and
jle
add
lds
and
sbb
jo
add
aad
sub
aas
movsb
aas
sbb
je
and
test
sub
xor
mov
mov
out
lret
int3
cli
test
dec
mov
xor
xor
add
dec
sbb
mov
xchg
or
shll
hlt
jecxz
add
js
sarb
addr16
xchg
push
imul
ret
adc
push
mov
scas
or
jns
xchg
push
mov
mov
in
test
inc
cmpsb
sbb
fiadds
sbb
inc
lods
gs
int
js
sbb
cli
scas
cld
fsubrs
icebp
and
std
sbb
out
push
push
xchg
inc
add
mov
in
xor
pop
in
jmp
cmp
mov
negl
leave
pop
fsubp
loop
cmp
imulb
jmp
dec
cmp
pop
repnz
test
add
js
mov
cmpb
and
inc
jns
aam
fsubl
andl
push
xchg
xor
pusha
mov
test
out
or
pop
or
and
jne
outsb
fs
repz
arpl
mov
jne
jne
es
test
and
mov
cmp
mov
sub
dec
push
inc
push
lock
pop
shrl
mov
push
pop
shr
mov
lahf
jno
and
sti
jb
inc
std
adc
or
lret
jo
js
repz
jmp
and
inc
repz
aad
mov
mov
lahf
mov
dec
imulb
incb
xchg
int
pop
adc
xor
xchg
in
out
test
aas
jl
repnz
popf
ret
and
loop
adc
aaa
ja
jge
dec
je
push
sub
sub
scas
xchg
or
push
cmp
sbb
mov
pop
adc
pop
xchg
push
loop
jp
fstp
adc
cmp
hlt
or
and
pop
inc
repz
and
nop
push
adc
in
push
stc
out
lea
mov
lahf
jmp
fsubr
loop
test
daa
pop
fxch
jl
call
lea
sub
mov
xor
out
xor
jecxz
pop
adc
push
jb
cltd
inc
xchg
cmpsb
mov
xchg
pop
jnp
fldt
adc
fldenv
stos
das
mov
add
push
xor
addr16
cmp
mov
xchg
ret
push
aaa
fwait
clc
stos
xchg
testb
aas
jg
or
mov
leave
iret
aas
mov
and
jl
out
xor
das
mov
cmp
and
dec
push
fbstp
shrb
xchg
jno
inc
loopne
sbb
outsb
inc
roll
xchg
pop
cmpsb
inc
and
dec
mov
int3
sti
xchg
int3
mov
adc
and
clc
fwait
or
dec
xchg
imul
cmp
inc
jno
loop
adc
popf
js
jecxz
cmp
push
nop
sbb
sbb
xchg
stos
addb
andb
fisttps
xchg
outsb
bound
call
outsb
cmp
movsb
sub
fdivrs
sub
cmp
xchg
lahf
data16
pop
dec
aaa
outsl
xchg
arpl
iret
cltd
add
or
stos
push
sti
outsl
jge
pop
cltd
push
sub
pop
add
js
pop
adc
push
std
pushf
xchg
js
cmp
imull
mov
mov
xor
cmp
cmp
mov
mov
dec
orl
in
std
inc
sbb
iret
mov
in
ret
jns
adc
cs
xchg
mov
xor
jg
sub
iret
lods
bound
sbb
out
and
cmp
int
ffree
mov
loop
pop
fisttpl
fs
in
mov
lods
mov
repnz
lock
or
repz
cmp
out
pop
dec
pop
xchg
nop
add
adc
dec
addl
push
dec
stos
rorb
mov
imul
xchg
addr16
or
js
push
adc
out
cmp
test
xchg
lods
and
stos
test
fnstenv
cmpsb
mov
xchg
mov
pop
adc
jnp
mov
mov
and
xor
mov
fbstp
adc
fistpl
rorl
jo
xor
lods
cvtdq2ps
jb
or
faddl
adc
in
xor
xchg
and
push
ret
sbb
push
pop
push
loopne
push
pop
xchg
addr16
adc
push
stc
xchg
push
loop
loopne
add
or
mov
mov
xchg
adc
adc
jne
push
in
xchg
pop
mov
stc
inc
and
je
cltd
pop
mov
add
sahf
mov
adc
jnp
xchg
sbb
dec
insl
js
out
pop
sbb
sarl
arpl
and
lcall
sbb
mov
inc
and
sti
sub
jo
hlt
pop
int3
fnstenv
in
push
into
data16
or
test
cmpsb
pop
push
repz
fldl
into
std
cmpb
jecxz
out
testl
lea
xlat
jge
mov
daa
or
clc
jb
jmp
jb
xchg
cmp
xchg
xlat
mov
sub
or
std
xchg
push
test
in
das
sbb
adc
lahf
pop
dec
sti
in
test
mov
divl
shll
xchg
mov
push
or
sub
jge
push
push
or
jecxz
pop
enter
lods
dec
or
pushl
call
cltd
pop
inc
jp
jbe
mov
mov
pop
arpl
lret
pop
push
lret
xchg
loopne
into
sub
xor
ret
push
or
push
jmp
test
mov
jg
push
push
mov
xchg
adc
jg
dec
flds
imul
mov
xor
in
adc
push
loopne
cmp
rorl
mov
ret
and
mov
mov
push
clc
or
push
push
or
test
xchg
subl
sub
sub
adc
insb
jnp
outsb
pusha
cwtl
cmp
fsts
push
in
pop
xchg
sbb
dec
sbb
ljmp
loope
cmp
or
loope
mov
add
out
pop
jns
mov
loop
loop
pop
or
ret
mov
rol
mov
jg
push
inc
xor
jle
jl
mov
cli
cmp
ljmp
outsl
orb
fists
mov
ljmp
inc
dec
push
xchg
mov
push
push
rcr
popa
sub
ret
mov
sub
or
adc
mov
and
mov
pushf
mov
push
push
shll
test
jp
fwait
mov
cmp
jg
cmp
sub
xlat
jl
stos
xchg
cli
and
aaa
jb
out
cmp
int3
jae
rcll
dec
test
out
sbb
mov
mov
jo
mov
adc
lret
or
fs
xor
nop
jp
dec
sub
and
jge
cmp
sarb
xchg
add
jmp
pop
jg
or
sbb
mov
fistps
subb
mov
cltd
inc
sbb
mov
pop
in
jl
mov
insb
inc
mov
dec
leave
lea
xchg
xchg
xadd
pushf
ret
pop
jnp
inc
repz
mov
in
outsb
test
iret
xlat
out
mov
jb
adc
mov
andl
adc
ss
push
push
adc
pop
push
adc
inc
lahf
sub
sub
mov
scas
in
rolb
int
lods
out
hlt
mov
pop
cli
rcl
shrl
jp
xchg
popa
xchg
pop
shll
mov
pop
test
fisttpl
ret
pop
sarl
jg
jle
mov
mov
push
aam
pop
adcl
cld
imul
lcall
push
imul
es
xor
pop
fistps
in
into
xchg
lahf
jle
je
andb
jne
mov
test
out
lret
mov
push
movlps
lock
ds
test
or
outsl
adc
cmp
das
gs
push
mov
inc
sysret
jne
cwtl
lea
lods
xchg
daa
ja
les
in
mov
adc
xor
adc
push
gs
pop
jae
lods
nop
sbb
cmp
aas
faddp
arpl
adc
fsubrp
popa
jge
cs
lods
push
xlat
stos
mov
nop
movsb
adc
dec
arpl
xchg
cmp
inc
xor
cmpsl
ret
push
shll
adc
subb
mov
dec
cmc
adc
testb
push
fisubs
jo
jb
sbb
xchg
sbb
lods
stos
sub
mov
xor
cvttps2pi
bound
aas
out
adc
aaa
push
into
pushf
pop
fistpll
icebp
xchg
xchg
dec
je
pusha
mov
mov
dec
aaa
add
pop
inc
test
mov
movsb
pusha
popa
pop
aas
xor
sub
mov
shll
bound
orl
jno
mov
xchg
outsl
push
jecxz
insb
jo
xchg
lret
adc
sbb
xchg
clc
add
ss
mov
mov
inc
and
je
mov
and
fimull
jp
roll
in
mov
scas
or
xchg
adc
push
sahf
enter
mov
xchg
insl
and
gs
pop
addps
add
inc
cld
mov
jmp
call
sbb
in
test
cmpsl
aad
out
dec
mov
mov
stc
mov
imul
push
mov
icebp
mov
pop
loopne
ss
mov
fsubl
pop
pop
push
inc
push
push
xchg
sbb
pop
sbb
clc
mulb
ss
test
push
push
sbb
and
push
cmp
pop
roll
nop
adc
insl
fwait
sub
cmp
cmp
xor
mov
jno
push
stc
cs
sbb
mov
xchg
call
shrl
jle
cmp
dec
pop
mov
aad
lods
aad
cwtl
cmpb
pop
and
xor
mov
mov
out
popf
imul
movb
dec
mov
push
in
mov
sbb
pop
and
jne
push
xchg
les
inc
sbb
and
push
cmp
imul
pop
fnstsw
mov
cli
or
orl
mov
cmp
icebp
pop
mov
xchg
push
mov
leave
jne
insb
mov
jg
cmp
jb
mov
pop
cmc
testl
inc
sbb
jge
pusha
loop
inc
out
repnz
mov
mov
pop
adc
pop
jno
push
dec
filds
inc
cltd
jns
cmp
cmpsb
mov
xor
mov
or
out
test
int
jns
pop
and
and
paddb
iret
dec
aad
sbb
dec
cmp
push
loopne
fistl
sbb
pop
cwtl
xchg
add
xor
outsb
leave
popa
sub
jl
dec
into
or
scas
or
pop
push
mov
je
adc
ljmp
mov
sub
inc
shrb
imul
push
imull
xchg
cmp
lcall
and
cwtl
loope
adc
sahf
add
push
icebp
inc
rolb
setle
xor
mov
adc
and
mov
cmp
fmul
dec
gs
stos
ja
jl
jecxz
adc
mov
mov
jae
lea
sbb
mov
cmp
add
out
xchg
in
dec
add
or
faddp
shrb
xlat
adc
jbe
js
lret
xchg
fwait
mov
test
rol
dec
mov
lods
and
rorb
pop
out
in
movsl
mov
popf
arpl
call
in
dec
mov
sub
xlat
mov
mov
mov
mov
inc
xlat
xchg
outsl
je
imul
mov
es
imul
and
jo
mov
pop
xor
pusha
push
adc
mov
add
xchg
inc
mov
mov
sti
rcrl
test
push
sahf
jns
xlat
scas
xchg
dec
and
xchg
ret
mov
add
scas
xor
jmp
jns
pop
shrb
jbe
rorb
mov
repz
lfs
insb
adc
imul
sbb
sub
lret
pushf
dec
sbbl
pop
leave
or
pop
hlt
push
adc
cmp
sub
adcl
lods
inc
sub
shlb
sarl
cld
scas
push
ljmp
push
int
das
fists
mov
fiaddl
or
adc
xchg
dec
inc
stc
pushf
jo
jl
mov
orl
dec
andb
outsb
clc
and
rcll
or
xor
jmp
adc
inc
xor
dec
jg
push
mov
sub
push
rcl
movsl
sarl
orl
mov
aad
mov
lods
inc
lret
rcll
pop
mov
sbb
cwtl
shlb
and
jle
mov
jo
stos
xchg
mov
jae
add
mov
cmp
and
aad
push
ljmp
mov
insb
leave
adc
mov
pop
ret
mov
std
or
lahf
negl
mov
test
cmp
xor
inc
fwait
enter
sbb
out
add
cmp
imull
daa
push
pop
icebp
mov
jns
push
cmp
pop
sarb
sub
mov
negb
bound
repz
ficomps
fsubrp
mov
fwait
jae
xor
fwait
movsb
inc
dec
sahf
lock
aad
dec
int3
stos
mov
adc
in
or
stos
mov
fisubrs
ds
lock
inc
fisubs
mov
adc
mov
cmpsl
ds
xor
inc
movsb
xchg
add
cmpsb
movsb
adc
mov
mov
lcall
cld
pop
ss
out
aad
arpl
js
call
sbb
xor
ss
jp
loopne
sbb
lret
test
xchg
ljmp
or
dec
outsb
sub
test
dec
ret
or
jne
popa
shl
inc
jmp
mov
jmp
leavew
popf
jne
notb
mov
or
mov
out
inc
push
mov
outsw
push
dec
push
or
loop
test
dec
dec
dec
pushl
dec
jmp
shr
push
cwtl
xorl
jae
mov
mov
add
popa
push
add
std
fcomi
adc
pop
inc
lds
mov
call
sub
adc
test
adc
mov
and
cld
jns
push
pusha
and
mov
sub
cmp
shll
inc
scas
pop
ss
push
andb
decb
jb
xchg
sbb
mov
jmp
lret
pop
lcall
add
fsubr
out
daa
xchg
and
inc
push
jmp
lret
adc
int
mov
aaa
pop
cmpb
inc
mov
sbb
push
or
jecxz
pushf
leave
jbe
add
loopne
cwtl
dec
popf
jnp
mov
ret
out
or
push
aaa
call
mov
add
and
xorl
jne
sub
test
in
hlt
mov
cmpsb
popa
push
enter
in
shld
or
es
sahf
xor
out
divb
sub
push
popa
faddl
add
incl
or
pop
pop
adc
cwtl
test
mov
out
xor
das
ds
daa
or
dec
jmp
int3
sub
pop
cmp
pop
xor
cli
dec
sub
jp
sub
inc
cwtl
dec
stos
add
shll
dec
mov
jecxz
mov
push
xchg
add
adc
mov
push
std
xchg
cwtl
jns
mov
add
adc
fs
add
pop
adc
popf
lret
out
dec
ret
jecxz
mov
inc
dec
pop
add
jns
mov
mov
je
xchg
mov
fisubl
test
inc
sbb
or
cld
dec
shll
push
or
sbb
cmp
pop
dec
test
push
pop
push
inc
pop
xorl
out
clc
xchg
adc
insl
push
clc
jae
or
mov
xor
jae
sub
xor
insl
outsl
push
mov
and
cmp
jle
push
mov
add
outsl
flds
je
mov
imull
loop
pop
sub
enter
out
pop
inc
and
fs
scas
add
mov
cld
arpl
pop
xor
add
push
sub
add
ljmp
fwait
out
sub
fnstsw
int3
daa
mov
out
aam
cmp
ss
jp
push
pop
stos
cmpsl
fmul
mov
push
push
mov
mov
into
ljmp
fidivrs
xchg
xchg
xor
sbb
sub
inc
mov
jnp
or
test
andb
ljmp
int
cmc
test
push
xor
addr16
xchg
cli
mov
aas
movsb
mov
jns
mov
sub
and
gs
outsl
in
lret
cld
pop
add
je
jl
ret
ret
fidivs
popa
icebp
pop
cld
fiadds
mov
sbb
dec
jns
xor
fwait
sub
push
pop
dec
ja
out
cmp
call
jo
rorb
or
test
addb
mov
xchg
xor
mov
aad
rol
into
adc
outsl
fildll
cli
scas
gs
adcl
push
or
pop
loope
dec
sbb
sbb
push
stos
js
clc
movsl
cmp
pop
int
add
in
shrl
jg
jb
in
fimuls
cmp
sbb
repz
add
mov
lods
popf
xor
and
dec
xchg
fildll
subl
adc
push
inc
mov
adc
sub
lods
jnp
sti
pop
movsl
xor
stos
mov
xchg
push
and
pop
dec
mov
or
and
push
cs
mov
pusha
pop
scas
mov
aaa
or
in
pop
aaa
mov
dec
fsubrl
mov
pusha
negb
inc
adc
mov
sbb
xor
push
inc
mov
lret
bound
int3
test
les
fwait
in
std
clc
xor
je
dec
addr16
in
inc
jg
orl
aad
push
in
xchg
test
gs
aas
xchg
mov
clc
push
add
imul
xor
fs
rcll
fstps
imull
and
insl
mov
loopne
dec
add
pop
out
xchg
gs
cmp
pop
pushf
xor
imul
fcmovbe
adcb
es
cmp
negl
aaa
popf
and
fs
fdiv
sbb
add
repz
shrb
lcall
pop
int
ret
ljmp
add
aaa
jne
mov
adc
fsubl
add
push
test
jecxz
push
nop
add
sbb
sub
xchg
dec
and
jp
ljmp
test
aaa
xorb
cmp
fsubs
cs
sarb
xor
dec
adc
sbb
loopne
das
sahf
sbb
cmp
aaa
test
jge
popf
nop
jne
push
jp
push
outsb
stos
rolb
adc
sbb
cmp
jle
mov
orb
pop
cmp
mov
mov
rcrb
data16
cmp
xchg
mov
mov
add
arpl
sub
pop
imul
push
mov
adc
in
and
fwait
add
jo
ret
inc
inc
pop
inc
clc
xchg
mov
int
jge
pop
insl
fimull
xchg
fcomps
jae
cltd
add
cmp
xchg
cs
push
cld
jae
or
stos
insl
pop
xchg
addb
dec
xor
mov
clc
sbb
sub
adc
addr16
inc
xchg
stos
jl
out
es
dec
add
inc
dec
test
pop
fldcw
sbb
xor
sbb
dec
jle
lods
ror
mov
mov
xchg
jmp
push
std
popa
pop
es
je
lds
mov
mov
lret
rcr
cli
jbe
dec
pop
jb
push
pop
imul
imul
mov
mov
emms
push
das
jg
mov
mov
insb
negl
in
mov
push
test
sti
cmpsl
push
sub
pushf
cmpsl
stc
sti
ljmp
inc
shl
rcl
pop
jno
lock
push
and
push
mov
gs
push
repnz
iret
adc
pusha
jge
push
xchg
push
and
icebp
xchg
push
jl
mov
sub
cmp
aad
push
dec
arpl
inc
and
xor
andb
jp
sub
lods
and
xlat
sbb
and
test
sbb
les
fisubrl
mov
cmp
jno
in
stos
pop
and
pop
fbstp
jb
push
dec
incl
sbb
jns
out
add
cwtl
mov
cmpb
cmpsl
jmp
loope
and
pop
ss
inc
add
scas
cmp
sbb
cld
ja
stos
cmpsl
push
outsl
rorb
push
cmc
lret
ljmp
dec
lret
jno
mov
lock
adcl
jno
test
sbb
sbb
cmovb
pusha
inc
outsb
jns
shr
inc
dec
jmp
push
add
fdivrl
dec
cmp
add
adc
cmp
aas
outsb
ds
push
or
sbbb
or
movsb
call
adc
scas
aad
scas
gs
mov
enter
mov
adc
jno
adcb
mov
in
sbb
push
push
xchg
int
push
jno
cltd
pop
mov
mov
in
mov
imul
lea
or
adc
xor
loope
mov
fisttpll
push
xor
stc
mov
stos
mov
xlat
add
push
cmpsl
out
inc
jecxz
cli
mov
push
stc
fldcw
imul
mov
jmp
mov
addr16
sub
movsb
xlat
leave
rcrl
sbb
lock
mov
xchg
gs
aad
pushf
xchg
insb
cmp
adc
or
lret
outsl
aam
ficompl
mov
test
jb
sti
cmp
push
std
mov
pop
popf
fsts
decl
rclb
mov
clc
int3
sub
push
or
cmp
repz
xor
sub
sarl
stc
outsl
jnp
fdivr
adc
test
push
lods
ret
insb
movsb
repz
in
popa
jae
ret
cmp
repz
aas
xchg
shll
xor
adc
test
out
rol
pop
inc
mov
repnz
lods
roll
xor
fimuls
sti
imulb
into
xchg
mov
cmp
mov
xchg
jmp
lret
outsl
pop
push
push
xlat
jno
daa
insb
cli
sbb
cmpsb
add
int3
and
or
stos
and
imul
xchg
pmaxsw
push
mov
and
sub
inc
loopne
std
pusha
mov
and
lcall
and
lcall
xchg
jnp
loopne
inc
and
pop
insb
jne
jo
mov
arpl
loopne
imul
mov
das
sub
mov
xchg
add
push
and
cmp
test
cmp
cmp
and
mov
das
sbb
add
mov
fldln2
push
or
push
jno
jo
xor
lods
cmp
call
ja
jle
bound
mov
scas
test
mov
push
repz
out
pop
int3
and
cwtl
push
lahf
or
dec
lock
pop
stc
daa
je
mov
add
popa
xchg
mov
cld
jp
out
pushf
jp
notb
rorl
lods
movsb
fucomp
data16
or
leave
and
adc
dec
mov
test
xor
arpl
sbb
clc
add
dec
jno
fsubr
push
mov
sbb
ret
std
push
pop
arpl
push
dec
adc
fsub
fs
lret
push
movsl
mov
inc
addr16
mov
inc
cs
dec
mov
add
hlt
lods
popa
inc
imul
test
lret
or
inc
cmp
lret
xchg
xchg
and
inc
test
out
and
jo
adc
xchg
mov
push
xchg
and
int
xchg
stos
loopne
aas
jo
push
ret
lods
inc
xchg
mov
inc
push
push
out
in
test
cld
js
xchg
xchg
and
cltd
test
imul
cli
imul
or
mov
clc
adc
mov
shlb
xchg
inc
lods
cwtl
pop
jno
les
incb
stc
xchg
in
push
dec
dec
imul
rolb
sbb
out
movl
out
pop
push
sarb
xchg
push
push
push
sbb
fcmovnu
jbe
cmp
push
mov
xchg
fucomp
call
xchg
push
cwtl
loopne
sbb
jmp
fiaddl
jmp
pop
cmp
cwtl
rcr
scas
adc
push
jl
dec
pop
lahf
insb
mov
cmpsb
mov
adc
and
pop
mov
sub
fildll
adc
sahf
js
stos
pop
pop
outsl
enter
lds
cmc
adc
xchg
fmul
lahf
and
sub
adc
out
push
jmp
fsubs
mov
mov
mov
cmp
repz
xchg
decl
jmp
mov
into
fcomps
and
mov
leave
sbb
shll
xchg
nop
ss
dec
loop
jae
dec
test
jmp
mov
jno
daa
dec
jmp
pop
aaa
imul
sub
mov
sahf
mov
lret
or
mov
and
jle
and
loope
sub
dec
cmp
dec
jg
push
cs
push
repnz
testl
scas
lods
mov
cmp
inc
jne
imul
das
mov
xchg
lods
pop
leave
stos
xchg
cld
jb
jle
xor
adc
pop
jecxz
mov
push
in
ret
and
xchg
mov
outsl
bound
jg
pushf
sub
fistl
push
or
or
aam
or
xor
adc
mov
lea
xchg
mov
into
mov
or
rolb
pop
pop
adc
rolb
orl
adc
add
and
mov
or
and
mov
int
out
mov
stos
sub
mov
mov
imul
push
ret
test
inc
jp
lds
pop
inc
inc
add
or
jl
lret
jmp
add
cmp
scas
inc
and
inc
push
dec
cmpsb
mov
in
pop
out
data16
divb
aad
jg
mov
sbb
mov
inc
adc
add
clc
sahf
ret
xchg
movsl
jl
addr16
mov
jb
lods
dec
pushf
lret
fstl
xlat
and
stos
dec
mov
lods
cmc
inc
bound
rclb
pop
outsb
stc
sahf
push
int3
xchg
push
xchg
xchg
popf
fisttpll
fdivs
popa
loopne
cmp
sub
inc
lods
mov
stos
sti
fsubr
cmp
or
push
shll
cmc
in
pop
or
sbb
mov
aam
xor
incl
inc
shll
int3
daa
and
sahf
icebp
and
fadd
setnp
sti
ret
mov
fdivrp
roll
jl
fisubrs
mov
int3
push
or
clc
or
lods
stos
ds
cmp
mov
movq
xor
jne
ljmp
adc
or
mov
sahf
imul
js
aad
repz
xchg
push
add
and
ret
ja
dec
push
mov
jmp
or
mov
adc
mov
push
lods
or
mov
push
pop
andb
xor
or
jno
pop
mov
out
stc
mov
xor
mov
gs
mov
push
pop
ret
addb
sbb
rcrl
jbe
push
cld
fmull
cmp
cmp
fcmovb
andl
cmp
lret
insb
jb
inc
imul
clc
lock
fiaddl
icebp
ja
add
lods
inc
pop
in
xlat
dec
sub
mov
lcall
loop
popa
jp
mov
add
in
sbb
push
sbbb
add
sbb
lock
mov
fdivrl
push
addr16
push
lock
cmp
mov
cmpl
fs
dec
xchg
test
cmp
iret
push
movsb
mov
scas
repnz
mov
movsl
push
bound
dec
mov
xchg
dec
jae
rcrb
loopne
xchg
mov
push
mov
int3
in
push
pop
cli
xor
jnp
add
icebp
cmc
adc
sbb
fdecstp
fistps
in
jne
jecxz
addb
je,pn
xlat
xchg
pusha
imul
inc
pop
adc
loopne
or
cmp
aam
lock
addl
bound
pop
and
and
loope
sbb
inc
aas
jl
xor
cmpb
adc
cmp
adc
jp
jnp
stos
push
ficomps
imul
sbb
cmc
cli
mov
lea
shrl
cmpsb
mov
mov
rcrl
jne
push
mov
add
push
mov
jp
rolb
xor
adc
dec
inc
fisttps
sbb
out
mov
cmpsl
je
aad
fcoms
pop
xchg
divb
adc
lret
xlat
and
pop
iret
cmpsb
scas
and
or
xor
ljmp
into
out
fsub
loop
arpl
loop
cmp
jge
movsb
fnstcw
mov
dec
data16
cmp
pop
xor
add
jbe
mov
pop
shlb
mov
push
jge
push
fstpt
scas
loop
adc
mov
pop
pop
rcr
sbb
psubb
xchg
and
js
mov
adc
add
mov
not
test
pop
pop
je
push
shlb
inc
push
repnz
std
jge
mov
push
and
icebp
adc
je
lcall
pop
jg
cmp
das
arpl
out
or
fstp
shlb
int3
mov
mov
sub
inc
cmp
sub
jge
push
outsb
xchg
sub
mov
idiv
mov
add
insb
gs
mov
xor
shr
dec
mov
fidivrl
lea
adc
jp
popl
sbb
push
es
in
pop
xchg
scas
add
sub
mov
out
jecxz
jg
sub
sbbl
pop
aam
push
mov
andl
lcall
cld
out
inc
pop
jb
inc
hlt
arpl
lds
lods
add
sti
pusha
sub
xchg
in
jnp
arpl
push
imulb
lods
jle
les
jns
sarl
les
pop
nop
cmp
inc
cmp
xor
sub
shr
test
pop
sahf
pop
enter
jl
dec
mov
and
hlt
cwtl
stos
pushf
mov
popf
movsl
push
ret
in
add
fistps
cmpsl
xor
mov
adc
aam
push
je
aas
jb
inc
in
shrl
mov
ss
mov
das
mov
fs
mov
adc
xor
lret
xor
int3
icebp
inc
push
push
negl
pop
pop
std
cmp
dec
jo
int3
ljmp
ja
push
jg
inc
pop
cltd
adc
and
into
lds
sub
pop
or
leave
cwtl
jb
mov
mov
pop
mov
dec
xor
inc
xchg
stc
call
mov
cmp
push
inc
and
mov
xor
lahf
sbb
js
jmp
adc
in
aam
nop
jns
xlat
mov
fbstp
xchg
jb
add
sahf
jb
dec
fldcw
adc
out
les
cmp
xchg
push
add
notb
mov
add
in
inc
test
inc
xchg
xor
sbb
push
rcrl
mov
sub
cltd
inc
push
sub
jle
jmp
scas
arpl
insl
xchg
and
bound
rcrb
and
loope
and
sub
leave
mov
and
test
or
sbb
mov
jae
cmp
lea
out
adc
cwtl
jp
and
gs
sbb
popf
lret
jge
je
in
test
shll
push
sbb
loop
push
mov
std
and
je
xchg
lea
sbb
mov
sbb
adc
jno
call
pop
add
push
sub
nop
mov
lods
push
push
inc
xor
mov
jns
and
test
mov
mov
sahf
popa
add
inc
out
in
xchg
add
inc
clc
sbb
mov
or
imul
jae
ljmp
inc
or
popa
mov
jecxz
imul
inc
roll
xor
or
bswap
cmp
jnp
lea
addr16
filds
pop
test
add
xchg
sub
in
adc
popa
stos
dec
daa
jl
xlat
jne
test
cmc
inc
and
and
sbb
mov
test
ret
and
enter
adc
pop
adc
mov
xor
fildll
cwtl
in
pusha
and
cmpsb
out
jo
call
sbb
lods
stos
push
push
mov
lret
std
mov
mov
cli
pmaddwd
out
shl
pushf
mov
cmp
jnp
loop
add
ret
cmp
daa
mov
inc
repz
sub
pop
fdecstp
int
lea
push
xchg
add
cs
or
addr16
push
mov
adc
movb
sti
lret
jecxz
dec
adc
imull
jo
dec
mov
and
adc
dec
xchg
push
lcall
push
cmp
mov
pop
mov
mov
in
pop
icebp
js
scas
pop
insl
pop
inc
into
popf
fistps
daa
pop
push
xchg
mov
jecxz
mov
sbb
or
in
push
pop
sbb
test
notl
cmp
psrlw
insb
cmp
daa
dec
clc
xor
add
add
mov
adc
cmp
in
push
dec
pop
iret
sbb
daa
imul
mov
adc
into
xchg
adc
push
mov
and
leave
inc
incb
or
adc
sub
pop
jo
xchg
push
jnp
je
ret
loop
add
mov
aas
mov
jp
or
in
loope
push
aad
pop
and
daa
scas
imul
xchg
add
mov
into
adc
mov
addl
hlt
inc
mov
fnstcw
fisttps
pop
inc
lods
cli
ljmp
cmp
xor
aaa
add
in
push
outsl
pop
xlat
jl
xor
ja
jo
xor
insl
movsb
cmc
call
push
imul
inc
addb
daa
sub
or
popf
adc
lret
daa
sbbl
jae
mov
add
mov
and
jb
push
aad
push
adc
loope
icebp
fidivl
sbb
loope
pop
dec
in
adc
mov
out
jnp
mov
inc
pusha
cmp
cli
jecxz
inc
test
lock
sbb
cmpsb
fistps
add
iret
jae
sbb
inc
inc
xor
mov
arpl
mov
inc
mov
mov
sub
pusha
dec
test
lret
jns,pt
adc
inc
ret
and
adc
jp
ljmp
lret
sbb
test
adcl
rcll
add
push
cli
sbb
or
mov
outsb
je
cmp
xor
in
and
sub
and
mov
jl
or
hlt
std
mov
popf
es
pmullw
cmp
ret
adc
push
adc
das
cmp
cmpsb
sbb
fwait
in
adc
lahf
pop
in
movsb
mov
or
push
dec
sbb
or
jg
pop
mov
pop
xchg
std
cs
cmpsb
cmp
cmpsl
mov
inc
pop
xchg
add
jo
jge
das
xchg
inc
xchg
div
xlat
lock
pop
mov
cwtl
cmp
cmp
stos
outsb
inc
sbb
and
xchg
call
inc
gs
inc
jbe
and
in
push
pop
cmp
mov
push
mov
shlb
push
jmp
sbb
cmc
movsl
pop
imul
lahf
xchg
or
gs
push
inc
jbe
lret
adcb
and
jl
mov
sahf
cmp
cld
jg
cmovns
test
pop
daa
movsl
adc
adc
cs
mov
subl
sbb
arpl
push
stos
aaa
pop
jl
rorb
sub
mov
jg
add
adc
into
push
outsb
aad
mov
iret
inc
nop
inc
lret
fisubrs
scas
or
cwtl
stc
sahf
js
test
jecxz
sub
xorb
push
lds
ss
or
pop
lods
fcomp
and
fdivs
dec
ja
mov
test
xchg
add
lds
xor
lret
loop
mov
stos
daa
stc
lret
mov
clc
les
addb
mov
jnp
pushf
movaps
sbb
push
xchg
das
rclb
and
push
arpl
in
adc
mov
push
adc
pop
in
aas
insb
or
or
int3
iret
jns
shrl
aam
cs
pop
loopne
into
cmp
push
xor
popf
rcrb
lods
sti
int3
addb
bnd
cmpsb
jle
sbb
xchg
and
je
arpl
and
inc
mov
pop
mov
shlb
cwtl
xchg
stos
cmpb
fs
jae
aad
insl
mov
shrb
and
adc
mov
pop
sub
fdivs
test
jecxz
jmp
dec
adc
sbb
mov
out
jg
sahf
lods
leave
xor
cmovge
and
sbb
les
divl
inc
add
je
xchg
xchg
hlt
push
fs
jp
add
rcl
or
jge
iret
push
loopne
jg
mov
xor
divb
iret
adc
or
xchg
cs
in
in
lds
add
fbld
test
push
jo
scas
sub
arpl
xor
inc
xor
nop
inc
cmp
mov
jg
xchg
inc
sub
xorl
rcll
push
mov
mov
xor
inc
and
jl
icebp
adc
into
fs
push
lods
push
and
jl
mov
xchg
xchg
mov
jmp
scas
dec
test
add
rcr
add
repz
test
ljmp
cmpsl
nop
pop
scas
push
movsb
pop
pop
call
mov
movl
sub
out
inc
mov
xor
xor
push
hlt
cs
mov
push
iret
jns
xor
inc
push
andl
sbb
enter
dec
test
scas
mov
iret
addl
ja
xchg
inc
sbb
outsl
shl
cmpsb
dec
sbb
dec
jnp
mov
mov
or
cli
fwait
xchg
xlat
lea
es
dec
xor
into
push
insl
mov
notl
insl
cwtl
pop
mov
fldcw
fldl
pop
popa
and
test
xchg
push
pop
adc
mov
inc
fidivs
xor
push
aaa
dec
mov
push
daa
cmp
push
sub
je
push
mov
je
lds
insl
mov
pop
in
add
and
addr16
pop
jno
xchg
dec
stos
inc
jmp
sub
mov
mov
pusha
push
dec
mov
and
data16
xchg
outsl
cmpsb
adc
sub
ljmp
jae
inc
cmp
inc
pop
mov
adc
and
outsb
xchg
xor
push
das
aad
push
lock
popa
xchg
pop
inc
fwait
repnz
jg
nop
push
dec
addr16
jmp
outsb
mov
dec
test
cwtl
ret
xor
icebp
adc
out
aaa
popa
imul
pop
daa
divb
in
test
imul
mov
out
and
cmpsl
push
scas
push
xchg
push
bound
dec
jp
inc
add
clc
mov
mov
cmp
movsb
mov
push
pop
xor
decb
mov
fstps
push
push
sbb
mul
or
sbb
cmp
sbb
adc
das
popa
inc
test
cmp
or
loop
mov
pop
push
cmpsb
push
lock
push
imul
mov
fwait
dec
mov
loop
stos
xchg
xchg
test
fs
sbb
and
shr
fs
pop
jp
mov
jecxz
aam
xrelease
hlt
pop
aas
insl
pushf
pushf
ss
cld
mov
iret
adc
les
mov
add
iret
lcall
fiadds
adc
jecxz
jle
dec
lahf
test
ja
cmpsl
mov
inc
nop
das
cmp
xlat
sbb
cmp
xchg
fadds
push
push
mov
mov
mov
ljmp
out
jle
popa
stos
mov
je
cmp
lea
push
inc
rcll
in
xchg
sbb
adc
jno
jae
scas
insb
pop
adc
std
pop
adc
mov
loopne
pop
jae
or
js
in
nop
add
add
pop
test
and
xlat
cmpsl
mov
inc
sarl
out
cli
adc
jg
hlt
and
movsb
push
fdivl
test
popf
out
xchg
or
xor
mov
and
and
push
add
leave
insb
mov
or
jb
mov
bound
ljmp
jb
sti
dec
xchg
pop
int
sub
bound
stos
cmp
add
scas
imul
jo
pop
out
loopne
xchg
dec
mov
inc
sti
out
mov
pop
xlat
cwtl
jbe
test
call
movsl
xor
ret
scas
and
jle
mov
lock
mov
push
xchg
sbb
mov
sub
xchg
icebp
sbb
into
xchg
push
inc
rolb
into
sahf
or
rcl
mov
movsb
sti
add
jl
icebp
icebp
cmpl
mov
mov
rorl
push
aas
mov
or
xlat
add
and
clc
jge
popa
test
pushf
into
sub
mov
stc
cmp
push
fadd
ret
sbb
mov
lret
or
mov
cltd
seta
outsb
mov
popf
mov
jmp
js
aad
enter
mov
into
xlat
and
cmp
adc
stc
mov
bound
jge
adc
sub
loop
fnstcw
shll
loop
push
std
pop
jo
pop
std
push
cmc
or
dec
loop
cs
mov
mov
out
xchg
mov
addr16
decb
jl
ret
jecxz
loop
push
sbb
nop
scas
xor
imul
scas
sbb
xor
xchg
cli
dec
jg
pop
shlb
int3
shrl
fistpl
xchg
and
adc
jl
pop
adc
pop
adc
pushf
cld
mov
dec
and
sub
lods
jecxz
xchg
jl
out
adc
outsb
test
jmp
add
mov
mov
mov
dec
jge
push
int3
xor
mov
ret
inc
insl
push
mov
jo
sub
dec
add
push
pop
mov
scas
add
repz
or
loope
xchg
ret
mov
or
fists
addb
dec
mov
cmc
into
mov
orl
aas
enter
mov
mov
push
cmpsb
clc
cmpsb
loopne
cwtl
pop
mov
jns
mov
decl
and
outsb
mov
mov
psubsw
arpl
sub
pop
sub
sbb
xchg
pop
test
and
sub
cmp
ret
cld
test
out
lret
popa
mov
sbb
mov
movsl
fisubl
push
cli
jo
ret
je
mov
dec
sub
fsub
test
cmp
cmp
pop
adc
mov
cmpsb
arpl
mov
ss
sub
xchg
dec
clc
jle
ljmp
std
jno
add
pop
fwait
push
stos
mov
test
mov
xchg
xchg
daa
es
push
pop
sub
jnp
lea
std
sbb
mov
mov
pushf
push
dec
popl
xchg
adc
divl
add
pop
mov
jle
add
push
push
dec
adc
mov
stos
mov
inc
push
icebp
inc
fxam
mov
aas
dec
push
sti
ljmp
mov
dec
mov
or
ror
das
enter
or
and
shll
dec
pop
ficoms
adc
mov
and
jb
cmp
hlt
imul
dec
dec
sbb
cmp
ficomps
jmp
test
gs
mov
orl
ss
cmp
je
inc
xchg
jge
mov
out
sub
lods
out
push
outsb
and
dec
mov
mov
int3
aaa
and
inc
in
cmp
dec
cmpsl
fs
into
and
xchg
jno
or
rcrl
inc
insl
cwtl
out
pop
lret
sbb
pop
sub
fwait
dec
sahf
addb
dec
mov
add
add
outsb
bound
adcb
pop
mov
outsb
sti
sbb
add
mov
popa
jge
ret
loop
sub
cmp
pop
rol
mov
dec
dec
fdivs
hlt
fwait
enter
mov
jg
push
mov
inc
pop
out
jle
es
inc
jge
dec
fwait
pop
jne
mov
jge
les
mov
xor
pop
dec
adc
scas
lret
or
pushf
repz
push
movsb
xchg
push
dec
loope
push
or
and
divl
out
pushf
or
mov
dec
jne
test
jae
push
or
clc
out
test
inc
jno
fsubl
daa
xor
out
imul
outsb
repz
push
jne
inc
fidivs
or
mov
jnp
dec
adc
int
rcr
adc
imul
cmp
adcb
push
aaa
mov
mov
fdivl
mov
xchg
je
mov
adc
imul
sbb
leave
aaa
insl
out
out
cmp
popf
and
movsl
dec
mov
jecxz
sbb
xchg
insb
adc
shlb
out
movsl
popf
mov
in
arpl
push
fists
jo
jl
lret
lcall
into
mov
aam
sub
xchg
imul
clc
mov
lret
fiadds
add
push
cs
xchg
mov
add
dec
lret
mov
mov
mov
mov
fs
idivl
je
dec
cmp
sub
out
mov
aad
and
jmp
push
or
orl
adc
hlt
ret
xor
sar
dec
inc
and
dec
in
pop
cmp
ret
fldcw
ffreep
rcrb
add
xchg
in
pop
repz
xchg
xchg
pop
xchg
rep
add
xchg
popa
push
add
sub
int
xor
fiadds
or
pop
push
repz
mov
push
cmp
es
adc
in
push
lds
push
out
sub
rcl
xor
ja
xchg
and
ss
pusha
out
add
mov
dec
xchg
inc
add
ret
or
pusha
mov
stc
or
cmp
push
scas
mov
les
lods
clc
xor
sbb
mov
hlt
enter
mov
mov
or
pop
rolb
sbb
leave
adc
and
loopne
inc
repz
sub
out
inc
push
adc
or
pop
ss
int
sbb
sbb
dec
sub
clc
push
insb
mov
aad
mov
cmp
mov
fimull
mov
mov
cmp
add
imul
mov
mov
lds
divb
fists
shll
jge
xorb
fsubl
lock
jne
mov
mov
sbb
loope
xchg
fwait
mov
cmp
mov
hlt
stc
lock
dec
jnp
or
sub
test
insl
test
insl
fmul
dec
and
call
and
fstpl
ljmp
jecxz
jmp
adc
ds
jp
mov
loop
dec
imulb
leave
cmp
cs
movsb
pop
mov
xchg
or
pop
fidivrl
js
cmc
mov
daa
or
or
aas
mov
jl
std
xchg
xlat
sub
xchg
mov
pop
cld
sbb
and
sbb
push
mov
fldt
addr16
fdivrp
aas
cld
adc
cld
xor
mov
rcrl
ljmp
xchg
aad
outsl
cld
out
pusha
lcall
and
inc
shrb
sbb
out
stc
pop
scas
mov
sub
rolb
xchg
push
push
cmc
cmp
decl
test
mov
add
xchg
data16
jns
inc
divb
movsl
mov
jmp
enter
ret
mov
mov
jnp
pop
mov
xor
and
push
xchg
dec
mov
push
std
add
in
xchg
movsb
loopne
fcomps
adc
mov
scas
iret
stos
and
xchg
cmpsl
iret
pusha
shll
cmp
mov
add
stc
dec
jp
scas
cli
and
daa
xrelease
jne
cmp
cld
mov
loop
pop
push
sub
inc
mov
xor
and
ss
stos
mov
mov
pop
pop
xor
outsl
inc
adc
mov
inc
das
cs
push
es
fisubrs
xlat
ret
js
mov
jne
pop
push
daa
fdivl
adc
push
mov
mov
mov
adc
into
cmc
loopne
icebp
ds
ret
or
xchg
loope
mov
cld
out
fbld
mov
dec
inc
inc
xor
mov
shr
xor
xor
out
add
pop
mov
push
mov
outsb
push
frstor
loope
add
cmc
cmp
dec
cmp
imul
mov
loop
aad
and
lahf
mov
or
stos
ret
cmp
inc
loop
pop
push
push
outsl
xchg
adc
cmp
mov
pop
and
dec
decl
cmp
mov
lea
cs
sbb
aad
std
sub
fbstp
sti
scas
pushf
lahf
sub
pop
enter
sbb
cmpsl
pop
imulb
push
aas
pop
sub
sbb
push
fcmovnb
fwait
mov
xchg
idiv
dec
and
ficompl
pop
sbbl
cmp
test
jnp
inc
sbb
sub
cmp
icebp
mov
lods
sub
imul
xchg
xor
in
in
fsubl
sub
cmpsb
out
das
fisttps
push
addr16
stc
rorb
out
imul
sub
xor
inc
jne
cmp
add
mov
sahf
imul
pop
test
in
ffreep
add
adc
cmp
fadds
xor
lahf
add
lahf
dec
std
ja
enter
mov
jge
pushf
mov
sbb
inc
push
or
mov
js
xchg
mov
pop
add
imul
fs
les
mov
push
imul
mov
stc
faddl
ds
mov
and
mov
jae
icebp
lds
daa
mov
dec
rclb
jno
inc
inc
add
fildl
das
fldl
and
mov
sub
test
ret
lret
mov
jecxz
insl
jecxz
cmp
xchg
aas
push
add
je
lds
mov
jg
ljmp
int
jbe
ja
xchg
iret
repnz
inc
pop
pop
mov
add
and
test
jo
adc
addb
bound
movsl
mov
fistps
and
js
push
jle
jle
or
cli
out
pop
add
test
cmp
push
lods
rclb
mov
sahf
ret
mov
jnp
vcmppd
or
xor
shlb
push
aaa
add
inc
ljmp
push
subl
mov
aam
pop
push
jbe
cmp
mov
sbb
repnz
pop
mov
aas
ret
addr16
mull
adc
testb
cmp
jae
push
mov
cmp
lahf
adc
ret
nop
adc
pop
add
cltd
loop
jmp
xor
jne
daa
aad
loope
push
sbb
cmpsb
mov
mov
and
mov
bound
mov
pop
mov
outsb
in
dec
xchg
pop
mov
popf
movsl
add
inc
aas
insl
std
or
inc
lods
bound
cli
jbe
cltd
dec
icebp
lods
leave
insb
stc
loopne
call
pop
xchg
pop
mov
jae
aam
lock
jbe
inc
jnp
lahf
add
sarb
mov
mov
std
fwait
cmc
dec
int3
sbb
in
mov
xchg
add
mov
test
scas
sub
sub
hlt
pop
dec
jmp
in
and
and
push
mov
leave
adc
lahf
jbe
lods
rol
dec
push
aad
push
lods
pop
ss
mov
stos
mov
shll
xor
inc
testw
mov
sub
das
sub
adc
orl
cmovnp
sti
stos
jae
pushf
and
andl
jecxz
pop
out
sahf
aas
inc
mov
dec
adc
imul
sbb
push
lret
std
loop
repnz
and
pop
cmp
pop
xor
pop
mov
lret
or
cmp
adc
mov
xchg
jbe
xchg
dec
fiadds
or
pop
addr16
or
mov
dec
shll
pop
adc
xor
push
add
or
leave
mov
jg
jp
sub
pop
mov
ja
lret
cltd
iret
icebp
out
xchg
arpl
test
aad
jecxz
pop
adc
cmp
mov
pop
fistpl
stos
andl
ja
xor
test
mov
lret
and
je
test
push
add
les
dec
inc
cmc
add
xor
mov
push
push
ja
mov
arpl
or
xlat
lock
movsb
ljmp
dec
xlat
mov
jp
sbb
mov
push
dec
mov
andl
jbe
filds
addr16
scas
int
inc
mov
daa
pop
xchg
mov
out
pop
lahf
outsl
mov
mov
xchg
mov
push
push
adc
adc
or
push
push
js
pushf
and
mov
add
mov
int
loopne
push
stc
out
mov
inc
call
enter
mov
jmp
xchg
mov
mov
jns
test
or
jg
insl
dec
mov
jbe
or
and
ret
dec
or
popf
jp
or
pusha
push
icebp
pop
out
mov
cmp
loope
xchg
rcl
ja
adc
inc
orb
popf
mov
mov
int3
add
fiaddl
add
clc
out
iret
pop
psllw
ljmp
jo
mov
notb
scas
test
insb
adc
lret
stos
pop
adc
cmp
pop
fs
cmp
data16
lcall
loope
or
arpl
jg
jno
iret
popl
cwtl
insl
mul
iret
imul
adc
pop
xor
pop
sub
jns
sbb
mov
pop
adcl
fildll
pop
fmull
inc
aas
xor
xor
nopl
mov
cmp
sbb
cmp
nop
popa
test
movb
outsb
cmc
sub
lret
jns
addl
insl
ret
int
push
mov
enter
enter
pop
add
arpl
cmc
mov
dec
popa
jl
mov
negl
js
and
fnstsw
stc
loopne
fidivrl
jle
mov
pusha
cmp
add
sti
push
popf
and
mov
pop
dec
mov
jno
cwtl
jbe
pop
cltd
inc
and
aad
outsl
sbb
add
xor
mov
add
test
es
inc
mov
jmp
add
rorb
cwtl
imul
nop
pop
push
iret
ret
pusha
scas
popf
ss
mov
call
pop
sbbb
or
or
mov
inc
push
mov
xor
lret
fcmovnu
adc
jmp
or
and
push
into
xorb
adc
icebp
and
scas
cmc
test
rorb
lret
inc
dec
bnd
scas
and
sahf
mov
sti
push
or
mov
es
in
repnz
dec
cmp
xor
pop
jno
insl
push
push
mov
and
js
sbb
or
test
adc
xor
dec
push
jb
sbb
in
ljmp
sti
xchg
or
cmp
lea
pop
sbb
hlt
mov
fidivrs
rcl
inc
or
testb
lods
dec
rorl
mov
sub
stos
jne
in
lea
jo
mov
sub
mov
popf
test
divl
bound
repz
inc
out
inc
aaa
cmp
das
outsl
xchg
jae
movsb
cli
pop
or
aad
jecxz
pushf
jo
outsl
testb
pop
adc
scas
jnp
and
mov
mov
jp
jnp
inc
sbb
aad
inc
mov
in
sub
pop
jae
jbe
movsb
xor
add
xchg
mov
loop
lret
shlb
jbe
pop
jmp
pop
test
bound
mov
cmp
sub
out
es
pop
cmp
mov
and
dec
aaa
inc
xor
push
dec
cmc
jmp
loope
enter
mov
roll
fstpt
test
call
or
pushf
xchg
divb
scas
sti
dec
and
sbb
push
enter
add
jmp
or
mov
enter
push
out
cli
mov
lcall
fisttpll
or
mov
mov
xor
test
mov
dec
jne
push
sub
lods
pop
shl
mov
in
xor
mov
or
add
add
jno
js
scas
sar
jmp
imulb
push
inc
int3
mov
xlat
jb
in
dec
push
sbb
je
je
xchg
mov
inc
jae
sbb
cmp
push
pop
lret
jle
cmpsb
dec
popa
gs
scas
or
adc
dec
mov
adc
dec
jb
addb
repz
add
xor
jmp
pcmpeqb
int
fs
push
andb
arpl
jl
pop
ljmp
mov
add
xlat
div
pop
pop
adc
mov
cmp
push
shl
fcmovu
adc
lret
je
cmp
ds
jnp
mov
pop
push
or
nop
cmp
push
iret
mov
je
lcall
inc
mov
inc
stos
pop
xor
jno
lret
sub
pop
test
mov
rolb
lds
hlt
dec
mov
jg
jb
dec
cmp
mov
jmp
imul
sbb
mov
adc
jg
outsb
adc
xchg
inc
ja
fwait
cmp
insl
mov
pop
jg
stos
test
leave
arpl
dec
aaa
testl
cmp
xchg
cmpb
outsb
lods
fidivs
mov
add
sarb
sbb
mov
call
outsl
leave
mov
and
divl
fcoms
test
adc
inc
repz
cmp
mov
add
inc
mov
loope
shll
pop
insl
mov
dec
pusha
jp
jle
mov
popf
and
and
cmp
lds
addl
push
mov
sub
ficompl
rcll
aas
xchg
js
ror
pop
loop
adc
push
mov
mov
in
ds
js
clc
ja
idivb
aad
fistpl
ret
out
ret
cmp
mov
dec
lahf
push
movsl
mul
cli
pop
xor
int3
pop
xor
and
repnz
sub
push
inc
les
insb
mov
lret
mov
mov
dec
sub
xor
shlb
push
mov
std
add
push
cltd
les
inc
ret
xor
sar
xchg
dec
mov
mov
inc
mov
fldcw
cltd
xor
cmp
pushf
lahf
nop
dec
jae
add
call
cs
xor
jne
cmp
add
mov
loopne
lret
mov
loop
cmp
jo
adc
outsb
popf
mov
movsl
mov
or
ss
xchg
pop
stc
dec
or
cli
into
jl
sub
leave
outsb
leave
cmp
pop
mov
movsl
mull
mov
fidivrs
sti
mov
loopne
and
mov
pusha
mov
movsb
xchg
mov
mov
popa
aas
jl
or
jle
dec
sub
out
cmp
lods
sub
inc
inc
and
inc
or
in
ja
idivb
push
loope
insb
cmp
xchg
pop
dec
cmp
jmp
push
push
jae
lahf
pop
and
xor
mov
mov
mov
dec
xchg
out
and
sbb
hlt
mov
sbb
in
mov
lret
mov
jb
adc
mov
or
push
mov
out
jbe
pop
test
adc
iret
dec
pusha
shl
adc
mov
scas
xchg
insl
je
xor
out
lcall
mov
rcrl
xchg
add
shlb
fcomip
mov
jb
test
into
inc
call
dec
jns
mov
aam
outsb
mov
inc
inc
xor
push
lret
lahf
adc
mov
dec
fcoml
push
arpl
and
push
jae
ja
push
ja
mov
jge
cmp
mov
jl
aad
fsubrl
xchg
pop
stos
or
outsb
stos
push
nop
and
inc
test
mov
cwtl
pusha
dec
call
sbb
adc
mov
cmc
mov
pop
popa
lock
add
hlt
in
hlt
popf
inc
cmpsb
mov
sbb
in
sub
mov
xor
pop
ds
jle
mov
imul
repz
inc
stos
push
arpl
clc
outsb
stos
mov
fcomi
mov
je
pop
jg
or
mov
fisubl
dec
mov
jae
fwait
arpl
enter
sub
push
sbb
rorb
int3
ss
dec
dec
sub
sub
pusha
out
cmp
dec
xchg
int3
movsl
xchg
or
imul
push
call
mov
mov
stc
out
xorl
jg
sbb
xlat
push
shlb
lahf
pop
lods
sti
cld
cmp
cmp
xchg
xor
push
jl
sub
push
cs
add
test
xor
mov
inc
int3
push
stos
popf
fcmovnb
mov
outsl
cmpl
mov
lods
aaa
push
shrl
sbb
lock
inc
test
sub
lret
bound
xor
movsb
cli
jb
test
int3
dec
shrb
rcr
pop
bound
adc
dec
jne
addr16
jecxz
sbb
mov
popa
sub
sub
pop
cli
fidivrl
dec
outsb
add
pop
jle
movsb
jp
inc
into
mov
mov
sub
push
dec
das
push
imul
jp
dec
orb
pusha
daa
xchg
xor
loop
sub
and
mov
inc
insb
mov
xchg
mov
sub
cmp
out
inc
sarl
int
dec
push
push
inc
je
dec
je
cmc
jo
sub
xchg
popf
mov
lea
and
je
call
xchg
shrb
adc
pop
sbb
test
cmp
cltd
add
popf
leave
test
ret
xchg
jo
cli
xchg
mov
pop
pop
int
outsl
orb
mov
jne
pop
fidivl
cwtl
in
test
lea
mov
mov
shrl
or
jae
subb
insb
ds
rcrl
sarl
xchg
xor
sarb
cltd
enter
out
dec
loop
mov
ljmp
ljmp
cli
mov
out
jge
cli
icebp
mov
jl
fdivs
push
push
cmc
pop
icebp
mov
pop
ljmp
fwait
mov
push
pop
and
divb
mov
add
dec
out
sti
addr16
jecxz
xor
jnp
test
sbb
outsl
push
adc
sub
aad
jl
rcrb
adc
mov
shl
pop
pop
aas
sub
mov
and
sub
enter
cli
add
jne
jle
mov
pop
add
imul
insb
ret
inc
scas
std
shl
lods
mov
scas
inc
dec
push
leave
dec
ss
mov
sbb
mov
push
mov
xchg
pop
in
inc
mov
sub
lods
popf
popf
loope
fnstsw
mov
popf
ljmp
sti
xlat
das
push
cli
mov
push
in
mov
in
mov
mov
daa
mov
dec
fbstp
jbe
sbb
int3
out
iret
aas
mov
enter
adc
dec
das
mulb
repz
inc
lahf
push
pop
sbb
fwait
xorl
aaa
cmp
mov
cmp
clc
daa
daa
xchg
loop
popa
out
jns
xchg
and
clc
bound
cld
mov
jp
ds
bsr
push
xchg
mov
loopew
arpl
cs
mov
pushl
cs
xchg
insl
lcall
xor
jge
push
sbb
scas
orb
jle
jb
frstor
data16
es
jne
mov
mov
jl
cmp
mov
or
popa
inc
pusha
repz
push
add
add
loope
dec
fidivs
cmpsb
add
fsubrs
testl
shll
and
pop
insl
int3
cwtl
arpl
cwtl
add
test
pop
lret
cmpsb
lcall
mov
movsb
jl
fldt
push
shrl
mov
outsb
hlt
mov
arpl
and
xor
gs
push
inc
mov
aam
xchg
aad
or
outsl
jae
mov
jb
or
fs
pop
and
cwtl
sub
mov
mov
je
push
and
sbb
mov
sbb
add
in
movsl
add
adc
pop
xor
add
flds
push
lock
cld
repnz
add
cmpsb
sub
and
into
loopne
mov
or
ret
sub
je
jmp
dec
jo
repz
jbe
xchg
add
ret
popa
xor
jmp
enter
cmp
xlat
xor
mov
xchg
xchg
or
rorl
bound
push
ljmp
jle
sbb
pop
test
push
fsubrp
push
sub
lea
xchg
cld
xchg
ss
arpl
hlt
add
in
dec
dec
cwtl
imul
and
dec
test
es
pop
vcmpsd
out
outsb
rcrb
mov
rcrb
stos
lcall
mov
les
loop,pt
outsb
pop
pop
es
xchg
pop
jnp
xor
or
or
or
insl
jecxz
dec
aad
lods
gs
dec
movsb
inc
ret
or
sub
adc
fisubl
mul
fimuls
sub
xor
jp
test
push
outsb
out
push
or
hlt
stos
daa
stos
in
scas
and
mulb
push
sti
int3
cli
sbb
add
ret
fildl
dec
push
cmp
cmp
sarl
lds
mov
sbb
scas
jp
sub
fdivr
pop
cmpsl
lret
daa
pushf
jb
adc
das
mov
sti
outsb
ret
dec
das
nop
imul
jl
loopne
jp
cmc
popa
pop
in
xchg
sbb
jb
xchg
mov
test
dec
mov
pop
add
mov
or
imul
xchg
shlb
loopne
xor
cmpb
inc
inc
cmp
xchg
mov
add
pop
inc
nop
push
repz
push
lea
negb
jge
filds
cltd
pop
sbb
ficoml
popl
cltd
cmpsb
pusha
mov
testb
cmp
cltd
js
cmp
fst
ljmp
outsb
loopne
out
lcall
in
les
cmp
jge
pop
lcall
push
idiv
ficoml
dec
add
pop
push
mov
js
shl
xchg
xchg
cld
pop
cmp
enter
lods
push
adc
cmpl
insb
inc
repnz
lahf
mov
inc
pusha
xchg
sti
mov
aaa
mov
mov
dec
clc
js
dec
aas
lods
nop
xor
add
xchg
in
fisubs
ja
ja
into
mov
xchg
sbb
mov
jmp
add
test
cmpsb
or
add
xor
add
and
xacquire
mov
inc
fdivl
jecxz
mov
bound
daa
mov
in
pop
lahf
int
mov
xor
mov
cmc
sar
ret
inc
mov
bound
lods
inc
sti
nop
mov
loope
cmp
out
push
jno
ljmp
popa
adcl
mov
aaa
push
mov
and
mov
adc
cmc
stos
sub
call
jns
outsb
aam
popa
push
mov
stc
imul
sti
pop
insl
or
jl
fmull
mov
cmpsl
dec
notl
jb
rclb
sahf
jne
mov
movsl
fistl
mov
test
mov
insb
cmp
clc
stos
cmp
pop
push
and
repz
shlb
add
lahf
stc
cmp
jb
and
or
and
or
ret
mov
icebp
fidivl
mov
das
rol
shrl
mov
imul
cs
nop
icebp
or
sarl
ljmp
pop
xchg
imul
inc
cmpsb
adc
mov
cmpsl
inc
and
aas
inc
clc
cmpsb
es
push
xor
sbbb
ja
jge
negb
mov
cltd
mov
test
movq
addr16
or
jl
inc
test
sub
lret
bound
hlt
or
sahf
push
mov
mov
leave
adc
fldenv
scas
adc
push
lea
sahf
sub
pusha
imul
mov
inc
add
xor
sub
mov
loopne
popf
lock
icebp
xchg
aam
inc
add
loopne
inc
jo
dec
idivb
or
sbb
sbb
popa
imul
mov
sbb
push
rcrb
nop
test
popf
sub
dec
in
pop
pop
mov
sbb
jle
add
inc
loop
test
dec
xchg
sbb
push
pop
cmpsl
or
leave
movsb
inc
out
into
hlt
or
xlat
jb
mov
cmpsb
push
mov
adc
loope
mov
sbb
and
stc
ds
mov
push
push
mov
shlb
in
test
fnsave
das
mov
cmp
push
dec
ja
bound
scas
push
mov
or
sbb
pop
pop
mov
lret
mov
std
imul
add
xchg
cmp
into
popa
adc
outsb
dec
push
in
add
in
and
mov
lea
sbb
nop
push
movsb
xor
add
mov
fsubl
or
dec
shlb
loopne
ficomps
mov
and
dec
rclb
scas
ss
jp
xchg
repz
out
xor
cwtl
mov
mov
leave
and
call
push
not
fsubl
iret
cli
stos
ret
in
lahf
pop
mov
inc
mov
cmp
push
es
xchg
mov
cmp
cs
mov
xchg
xchg
xchg
fistpl
xchg
mov
add
sbb
mov
jo
and
mov
fimuls
dec
addr16
loopne
cwtl
mov
xlat
mov
xchg
stc
jge
and
jbe
mov
mov
jbe
cmp
and
dec
adcb
out
mov
sub
subb
mov
and
pop
add
fwait
push
clc
dec
lods
push
call
or
les
out
xchg
sub
push
insl
pop
jb
ljmp
aad
and
xchg
mov
pushf
adcl
cmp
cmp
dec
loopne
xchg
movl
mov
loope
jmp
pusha
xor
sub
divl
mov
dec
lahf
push
sub
xchg
out
mov
lahf
enter
stos
jbe
addr16
inc
aam
sub
dec
gs
insl
bound
xchg
outsb
pop
subb
dec
xchg
sub
iret
jns
outsb
adc
mov
push
jp
pop
in
clc
ljmp
clc
fsts
dec
das
adc
mov
pop
les
sbb
inc
movsl
or
sbb
iret
xchg
mov
push
add
out
mov
mov
push
dec
mov
pop
insl
jae
jmp
into
jb
jle
hlt
dec
ficomps
sub
jo
dec
sbbb
add
pop
out
sbb
test
pop
aas
and
cli
mov
push
andl
out
jno
add
inc
mov
xchg
mov
out
sarb
xorl
push
jmp
push
scas
adc
je
ss
int3
add
mov
stos
inc
sbb
xchg
xchg
add
cmp
adc
add
out
sar
mov
add
sbb
loop
out
imul
mov
adc
xchg
pop
push
mov
mov
jecxz
into
into
push
andb
add
dec
jp
and
xchg
lcall
in
into
imul
pop
ljmp
es
xchg
and
outsb
repz
leave
sub
pop
pushl
aas
out
xchg
pop
sub
and
sbb
pop
cld
jmp
sbb
popf
cmp
xor
mov
and
adcb
dec
xchg
psubusb
rcll
test
sbb
or
push
adc
test
mov
mov
cmpsb
fists
fcomi
lds
inc
sbb
cmp
lock
cmpsb
sbb
pop
loope
leave
nop
jl
push
test
inc
or
jge
pop
xchg
xchg
lea
int3
fidivl
dec
mov
loope
fs
movsl
sbb
adc
adc
outsl
inc
adc
xchg
cmpb
lods
mov
xor
and
rcrl
sbb
imul
push
sub
faddl
lcall
push
pop
mov
pushf
loop
pop
cmp
icebp
sbb
call
mov
pop
pop
jp
mov
cli
in
inc
sub
inc
cmpsb
lcall
add
inc
arpl
add
fimuls
mov
je
push
adc
jb
call
push
clc
in
sbb
je
jp
lahf
jmp
out
mov
fcomps
xchg
push
sbb
outsb
insb
add
aaa
fwait
imul
xlat
inc
cltd
dec
xchg
cmp
dec
mov
shll
xor
lods
xor
jae
push
pop
add
js
movsl
icebp
xchg
clc
xor
xor
fcomps
push
in
sti
cs
and
fistpll
sub
inc
cmp
pop
add
or
inc
mov
pop
shl
repz
mov
inc
sbb
or
lret
fwait
mov
das
xor
xlat
xchg
out
pop
jns
xchg
hlt
mov
inc
inc
testb
daa
inc
out
sub
test
inc
cmp
mov
test
push
fwait
push
repz
cmp
movb
das
adc
mov
jo,pt
dec
lock
in
cs
ret
xchg
fwait
pop
sahf
out
je
push
idivb
ret
shlb
adc
jae
mov
xor
xor
lret
inc
sbb
ret
xcrypt-ctr
cmpsl
pop
mov
arpl
ljmp
or
mov
sbb
xor
sbb
dec
jnp
mov
rol
inc
test
pop
inc
dec
in
imul
aaa
adc
cmp
jmp
stos
int
sub
mov
mov
xchg
lock
ja
test
jg
ja
shrb
push
in
push
mov
stos
jge
lods
icebp
lods
cmp
fwait
mov
jns
lret
ss
aam
adc
iret
and
xchg
stos
lahf
mov
mov
xchg
outsb
push
mov
lahf
scas
fildll
shrl
jb
pop
pop
stos
jns
inc
inc
pop
lahf
add
mov
pop
nop
push
cs
adc
add
pop
xor
fs
jne
cmp
mov
les
jbe
jge
push
std
mov
dec
mov
and
mov
roll
mov
jo
shl
pop
add
push
mov
and
divb
adc
sub
movl
sbb
icebp
jmp
cmpb
pop
mov
cld
xchg
or
push
std
add
fimuls
push
dec
pushf
mov
imul
cwtl
xor
mov
not
xchg
popa
inc
jecxz
cmpsb
insb
push
pop
cli
stos
lret
ffree
aam
pop
push
arpl
test
outsb
fildl
loop
and
popf
cmp
jnp
stc
nop
call
mov
push
ret
pop
out
into
test
pusha
stos
xchg
ljmp
scas
sahf
rol
xchg
jbe
sbb
lcall
or
stos
bound
aaa
jo
xchg
mov
test
sub
jle
push
mov
test
in
stos
and
out
or
push
fstpl
pop
inc
mov
xor
dec
adc
fists
popa
repz
notb
cs
idivb
dec
xchg
out
jbe
pop
push
cmp
inc
out
loop
fsubrs
fmuls
test
andb
aad
mov
imulb
cmp
and
sbb
add
test
mov
movsl
gs
and
stc
imul
ljmp
sbb
dec
int
mov
add
push
lock
ss
push
lock
pusha
inc
mov
js
mov
outsb
stc
scas
hlt
sbb
inc
je
push
adc
mov
cwtl
inc
into
call
xlat
sbb
jnp
cwtl
dec
js
xor
xlat
shlb
test
jge
sub
imul
imul
call
cltd
mov
and
int3
jb
lock
mov
ds
cmp
mov
or
ljmp
push
mov
fsub
imul
push
dec
js
inc
repnz
dec
stc
mov
push
js
aaa
rorl
adc
pop
sub
cmpsb
mov
push
iret
mov
mov
ret
in
fiaddl
add
adc
lock
xor
push
lret
cmp
xor
outsl
loope
ja
aas
pop
ficoml
data16
cmp
stc
jecxz
rcrl
lea
js
clc
out
push
jecxz
js
std
cmpsl
les
aaa
pop
xchg
sahf
in
lods
jge
push
loop
pop
cld
fisttps
lret
push
es
cmp
dec
add
lds
into
out
inc
jbe
lea
sti
sbb
jae
xchg
ja
mov
dec
mov
mov
xchg
rol
xchg
and
hlt
xor
sub
jo
or
test
pusha
push
popa
loopne
test
rolb
mov
lock
in
cmpsl
add
add
pop
into
scas
lcall
popa
mov
jne
lahf
jnp
mov
dec
pop
jne
inc
cmp
out
xor
in
dec
pushf
xor
std
jo
adc
in
or
dec
inc
dec
loopne
loopne
mov
mov
jl
dec
popa
test
sti
mov
lods
mov
pop
push
addl
fwait
int
ljmp
add
rcrb
daa
add
adc
dec
push
hlt
xchg
xor
sbb
inc
mov
ret
lahf
pop
rcrl
jl
jle
daa
inc
jo,pt
lds
mov
pop
mov
roll
nop
jns
fwait
add
cwtl
cltd
jae
xchg
imul
movsb
inc
mov
enter
adc
inc
out
js
jl
and
push
xchg
pop
jl
std
mov
mov
mov
ror
pop
jl
enter
dec
ja
jne
jl
mov
cmc
pop
jne
ret
and
pop
pop
ds
mov
outsb
test
jle
daa
andl
adc
loope
leave
xchg
aas
push
shll
pop
cli
sbb
jmp
dec
clc
xchg
sbb
xlat
icebp
mov
mov
ret
sub
sub
frstor
inc
shl
cmc
aad
adc
pop
mov
sbb
push
and
data16
sbb
aad
jnp
xor
lahf
iret
dec
imull
rol
addr16
out
mov
outsb
lods
or
rcrb
inc
jno
push
cmp
pop
pop
sub
jg
out
call
push
and
pop
pop
data16
sarl
push
repnz
inc
sbb
cmpsb
std
decl
add
cmpsl
cmp
int
jecxz
mov
xchg
pop
mov
fmull
sub
push
xchg
xchg
pusha
mov
nop
inc
push
es
aas
lock
mov
addr16
and
cwtl
rclb
or
or
or
mov
addl
xor
inc
adc
mov
sbb
mov
mov
adc
bound
sarb
lcall
pop
sub
push
loop
mov
mov
shll
pop
fbstp
add
outsb
and
mov
ja
fs
in
call
repz
jp
push
mov
fadds
popf
addr16
adc
and
out
adc
jmp
sbb
inc
or
jb
pop
add
inc
movsb
pop
dec
gs
or
dec
lods
dec
leave
add
clc
inc
lock
les
jns
mov
mov
test
jnp
ljmp
mov
mov
add
cmpsb
outsb
mov
dec
fmuls
mov
and
fadds
repz
jl
mov
mov
or
push
data16
lods
xor
or
mov
rol
jo
jns
rcll
lret
push
pop
out
out
fwait
and
push
and
jmp
fcmovnb
xor
push
inc
cli
icebp
mov
std
push
jns
mov
fs
cmpb
cmp
imul
adc
outsb
cmp
and
dec
pop
icebp
lea
enter
loope
mov
mov
lds
int
sbb
out
lahf
push
jns
les
mov
xlat
lods
ds
ror
ljmp
cs
push
dec
mov
iret
sub
adc
mov
or
jmp
shll
loopne
cmp
push
test
repnz
mov
inc
jmp
out
imul
push
or
je
and
ret
add
mov
xchg
pop
cmpsb
dec
ss
pop
int
test
lods
or
js
bound
fmul
lods
jb
xchg
es
and
icebp
test
add
xchg
test
and
mov
fbld
or
mulb
mov
pop
dec
scas
push
pop
mov
mov
inc
mov
sbb
rclb
or
nop
or
je
incb
cltd
push
add
push
fidivl
mov
pop
bound
loop
in
xchg
aam
cmp
daa
test
jmp
loop
fwait
push
and
xchg
jmp
xor
outsl
das
push
pop
mov
data16
push
mov
or
shr
jecxz
pushf
dec
in
and
jmp
ret
xchg
ret
push
mov
imul
and
xlat
pop
ja
mov
outsl
jne
cmpsb
hlt
aaa
pusha
aam
nop
call
cs
ljmp
subb
in
pop
cmc
pusha
xor
pop
test
xor
mov
xlat
inc
pop
adc
in
mov
nop
ss
aas
pop
sub
int
lahf
adc
in
push
aas
sub
shr
and
int
sub
and
mul
sub
mov
push
xor
aaa
xor
dec
xor
daa
inc
nop
and
fs
jne
cmp
std
clc
push
popa
lods
ret
push
push
adc
add
mov
add
ds
into
test
outsl
iret
int3
cmp
icebp
loop
mov
fwait
test
clc
mov
sub
arpl
xchg
pop
mov
aas
pop
or
inc
and
dec
pop
fadd
mov
aas
and
mov
adc
leave
testl
cld
filds
test
xor
test
and
ds
cmc
sbb
sbb
test
adcl
jge
xchg
js
mulb
mov
sub
ret
hlt
jb
adc
mov
push
outsb
fsubl
popf
jge
ljmp
xor
lods
push
sti
xor
inc
mov
scas
ret
xor
pop
fdivrl
mov
mov
cmc
push
sbb
jl
pop
out
xor
mov
rep
mov
dec
mov
push
jnp
mov
cmp
cwtl
pop
push
push
out
rorl
loop
mov
inc
in
dec
jmp
loopne
daa
and
je
push
stos
push
adc
mov
or
int3
sti
adc
dec
cmp
add
ss
popf
cmp
mov
sub
mov
das
or
dec
inc
inc
push
orb
std
out
dec
xchg
addr16
dec
xlat
repz
out
sub
aaa
and
pop
repz
js
mov
stc
ficoms
and
pop
fucomp
and
cli
xor
into
inc
push
pop
jp
cmpsb
inc
repnz
pop
push
call
test
and
inc
pop
sub
jns
lahf
xchg
jno
scas
push
adcb
and
ja
mov
adc
pop
test
jg
cmp
jae
sbb
das
adc
insl
jp
push
test
and
fdivs
lods
jne
enter
jmp
dec
ret
xchg
aam
fcomps
popl
fs
dec
ds
mov
sub
jge
fsubr
inc
addr16
and
cmpsl
xchg
or
pushf
inc
out
imul
fdivrs
inc
mov
and
out
addr16
pop
cmp
sub
cmp
loopne
adcl
pushf
fiaddl
cli
or
and
mov
insl
cli
shl
or
fsubr
pop
dec
xchg
clc
or
xchg
cwtl
insb
cltd
mov
jmp
movsl
lahf
cmp
out
cmc
movsb
mov
inc
mov
out
and
xor
add
inc
hlt
push
icebp
mov
mov
sub
xchg
xlat
addl
jge
std
mov
jge
lahf
std
push
xor
push
or
lahf
lret
fisttpl
push
xchg
mov
mov
jecxz
xchg
dec
dec
mov
dec
test
add
es
aam
dec
mov
push
aad
jbe
cmp
adc
in
pusha
mov
sbb
mov
mov
dec
cli
int
ds
fs
xchg
je
add
mov
dec
sub
adc
or
fistpll
lret
pop
add
jnp
mov
lods
ds
mov
int
loope
in
jmp
xchg
pushf
mov
xor
mov
sbb
lcall
push
xchg
mov
repz
adc
add
cmpl
das
jae
subl
notb
mov
xor
jno
incl
les
cwtl
cli
push
sub
xchg
cld
mov
mov
xchg
insl
or
xor
cld
into
notl
dec
sbbb
sti
lret
mov
mov
rorb
xor
loop
jno
mov
cmp
mov
out
mov
jg
icebp
dec
cmp
hlt
mov
aad
outsl
add
xor
leave
xor
xchg
cltd
inc
push
into
ljmp
call
aam
es
hlt
lret
cmpsl
xchg
xchg
clc
fcompl
fwait
cwtl
mov
repz
mov
sbb
daa
xchg
out
mov
pop
je
push
mov
sti
imul
ret
fnstenv
mov
add
mov
subb
repz
pop
sti
dec
inc
sti
sarb
push
xchg
call
loope
into
lea
sbb
pop
roll
cmp
pop
sahf
adc
fisttpl
fs
and
test
data16
push
loop
ret
dec
push
inc
pusha
sbb
push
push
imul
sbb
cmp
mov
insb
dec
mov
outsb
add
dec
adc
cli
subb
andl
mov
rorb
and
lcall
cli
jecxz
push
xchg
push
sti
enter
mov
into
loopne
xor
xor
mov
mov
mov
add
sub
mov
lret
mov
mov
ljmp
es
adc
shl
mov
dec
mov
mov
sub
mov
imul
push
dec
sub
and
iret
cwtl
cmc
adc
enter
cld
and
inc
mov
add
mov
cld
jno
scas
lods
and
push
arpl
jge,pn
insb
push
inc
cli
xchg
push
adcl
sub
btc
loopne
xchg
mov
add
arpl
xor
daa
out
or
jmp
fstpt
dec
push
and
sti
xchg
adc
std
loopne
dec
cwtl
out
pusha
popa
pop
jecxz
push
sub
fimull
inc
arpl
jge
xorb
push
jo
shrb
pop
inc
movsl
divl
jnp
pop
mov
scas
add
cli
adc
cmp
mov
sub
hlt
add
andl
xor
mov
out
scas
lcall
lods
adc
sahf
xchg
mov
test
jge
addr16
xchg
pusha
hlt
inc
lds
jg
xlat
dec
push
lds
cmp
adc
lods
pop
push
or
cmp
sub
and
test
mov
es
sbb
xchg
sub
call
stos
mov
lahf
mov
pop
clc
fdivp
push
mov
repz
xorb
mov
and
pop
shrl
mov
sbb
fidivrs
add
jns
stos
mov
cli
aaa
dec
icebp
outsl
sub
mov
test
mov
pop
jno
mov
stc
fcomps
out
fwait
dec
in
imul
lods
clc
in
daa
cmp
or
fucomi
inc
xchg
int3
push
dec
adc
xchg
inc
xchg
cmpsl
pop
fsubp
lods
into
popf
jmp
jecxz
subl
jne
inc
int
lock
cmpsl
lds
dec
pop
das
sbb
mov
sub
add
rorb
insl
je
movsb
scas
in
mov
push
add
and
jns
ret
movl
in
xchg
pavgw
cld
je
sbb
lret
test
int
mov
mov
insl
inc
inc
add
movsl
sub
jnp
inc
jo
inc
mov
pop
fadds
mov
sbb
xchg
je
jno
push
pop
lock
out
xchg
or
aam
cld
push
mov
xchg
ffree
cmpsl
lock
mov
hlt
int
or
sub
mov
leave
dec
cli
jl
or
push
fs
out
sub
and
mov
add
push
je
mov
mov
adc
mov
in
gs
mov
jle
out
int
scas
inc
push
pop
mov
repnz
hlt
dec
pushf
mov
add
inc
sub
push
ljmp
cmp
movsl
int3
sbb
and
aad
mov
int3
in
outsl
jp
push
cmp
ss
mov
pusha
in
mov
cmpb
movsl
cli
pop
test
push
add
std
ror
pop
xlat
mov
adc
andl
nop
in
decl
psllq
pop
fwait
stc
mov
lds
or
dec
aad
out
int3
xchg
enter
icebp
stos
insl
inc
jae
cmp
add
mov
pop
xchg
cmovge
inc
ret
addr16
mov
mov
mov
cmp
cltd
xor
pop
lock
mov
cmp
enter
mov
in
test
movsb
clc
sti
fldl
test
sub
and
ss
push
mov
cmc
xchg
stc
aas
jns
testb
and
sbb
div
cld
mov
enter
push
lret
inc
fwait
sub
decb
pop
sbb
xchg
cmp
repz
jbe
movsb
xlat
mov
push
sti
sbb
pop
repz
jmp
inc
test
inc
adc
movsb
inc
jo
cli
cmp
jbe
outsb
shlb
lcall
sub
xor
addl
ret
ja
inc
push
decl
mov
stc
shr
push
and
ret
mov
and
loope
fs
jb
sbb
clc
lds
mov
xor
sub
or
inc
cmp
mov
and
xor
dec
test
sub
push
fwait
cmp
outsb
xchg
pop
dec
push
mov
push
sahf
adc
or
sbb
push
shrb
stos
mov
pop
popf
daa
stc
jmp
dec
adc
xor
and
outsb
daa
xchg
ret
pop
pusha
shll
or
fidivrs
xor
inc
in
fildl
mov
mov
cmpsb
scas
add
xlat
xchg
sahf
lods
xchg
add
in
cmp
jle
outsl
xchg
xchg
push
and
xor
cmpsb
xor
sbb
lret
movsb
aad
subb
outsb
cld
jg
inc
push
andb
ret
daa
es
mulb
inc
add
add
dec
xor
or
push
ret
pop
add
ret
adc
icebp
pop
mov
mov
dec
aad
loopne
lret
jmp
mov
xor
push
pop
test
push
es
mov
insl
cmc
in
xchg
test
adc
and
scas
pop
mov
ja
es
jns
pop
dec
scas
cmp
xor
mov
xor
cltd
pop
pop
pushf
sar
popf
xlat
bound
jecxz
sub
push
and
sub
push
mov
xchg
pushf
jno
jnp
inc
push
cmp
and
dec
scas
or
and
add
icebp
movb
jne
push
popa
enter
insl
popf
mov
dec
add
in
xor
pop
pop
leave
xchg
sbb
jae
scas
cltd
inc
jno
sbb
testb
push
pushf
dec
and
pop
mov
popa
sub
das
mov
xchg
push
test
repz
dec
aad
jns
and
mov
mov
addr16
xchg
jmp
je
jo
mov
loopne
cwtl
cwtl
in
fnstcw
add
lret
cld
nop
cmc
fadd
mov
ret
xchg
leave
scas
and
daa
inc
cmp
pop
inc
ja
in
pop
cmpsl
add
xchg
xor
xchg
scas
loop
xchg
idivb
rclb
ja
mov
mov
push
pop
push
sbb
mov
jl
sbb
sub
pop
xor
adc
xchg
fmull
xchg
cmp
jp
jo
sub
enter
ljmp
popf
jo
mov
add
or
insb
sub
push
loopne
ret
aam
cmp
int
push
popa
in
cmp
cmp
inc
jnp
xchg
sub
dec
in
mov
adc
std
cmpsl
adc
cltd
add
push
bound
fistpl
dec
or
push
lock
sbb
mov
notb
ret
dec
in
or
shll
inc
sub
bound
inc
dec
inc
xchg
daa
mov
or
dec
movl
jp
adc
shll
data16
and
jge
out
or
aaa
adc
jge
ss
sub
fdivrp
je
or
add
sub
cmpsl
imul
sub
sub
mov
adc
or
jb
push
pop
pop
mov
fnstenv
pop
add
stos
inc
pop
jno
push
adcb
sbb
sub
mov
xor
push
sub
shl
jo
mov
push
out
add
in
cmp
bound
scas
ja
pop
fwait
add
and
pop
ret
fstp
fs
shrb
mov
mov
cmp
xor
sub
mov
or
push
dec
xor
lock
xorb
mov
repnz
jmp
hlt
mov
xor
mov
mov
ljmp
cmp
mov
push
stos
mov
and
cmc
dec
daa
and
gs
xchg
ja
cmp
adc
sahf
and
mov
fsubl
mov
xchg
mov
cmpl
ret
adc
mov
int
adc
cwtl
or
adc
movl
rolb
ja
and
add
dec
adc
pop
test
inc
hlt
mov
icebp
flds
fdivs
mov
inc
mov
mov
fmull
ds
or
pop
mov
shll
and
shrl
add
xor
dec
sbb
xor
nop
mov
lahf
int
les
mov
push
in
push
dec
adc
test
aaa
dec
cmp
inc
or
daa
add
fs
call
push
aam
cmpsb
filds
add
jge
pop
jbe
jns
mov
or
or
popa
jge
push
mov
pop
sbb
das
push
xchg
out
xchg
jecxz
jge
pusha
mov
lret
into
dec
pop
mov
mov
mov
pop
fs
and
test
dec
hlt
inc
sbb
or
js
mov
xchg
pop
pop
mov
fdivr
imul
xchg
rolb
addb
sub
xor
add
jecxz
stos
mov
cmp
mov
adc
jge
adc
add
shll
cmp
lock
fs
sbb
es
dec
jns
or
jp
sbb
arpl
adc
push
sbb
ss
movb
sub
xchg
adcl
popa
and
xor
les
xor
xchg
dec
sbb
repz
and
push
lret
sbbb
add
xor
or
dec
pushf
in
stc
in
hlt
cmp
int
bound
ret
jns
mov
mov
mov
dec
je
cmpsb
stos
mov
shlb
movsl
mov
and
in
call
daa
push
push
push
repnz
mov
sub
pop
scas
js
scas
pop
hlt
jns
idiv
insb
push
outsl
mov
leave
lock
xchg
pop
cmp
jmp
insl
out
cltd
fisttpl
add
aas
gs
jo
nop
dec
mov
enter
test
lods
dec
push
dec
es
dec
hlt
movsl
movsb
jmp
jp
or
js
daa
mov
xchg
lds
fsub
iret
cltd
dec
adc
push
shrl
xor
aaa
fnsave
pop
adc
sbb
add
mov
insb
ljmp
adc
and
mov
jmp
pop
cmp
pusha
ret
add
inc
pusha
dec
sbb
shrb
mov
out
inc
lret
adcb
fucomp
and
inc
cpuid
add
xchg
sbb
push
je
loope
jle
retw
ljmp
cmp
dec
pop
adc
enter
xor
add
push
imul
repnz
fisubl
in
faddl
and
add
mov
dec
jae
xor
es
jp
out
fsubs
xor
add
mov
pop
pop
mov
fnstcw
jle
pop
into
push
jmp
xchg
ret
jmp
and
mov
xor
mov
js
iret
mov
adc
leave
in
ja
pop
mov
pop
movsl
adc
mov
mov
sbb
js
iret
xorb
cmp
pop
or
dec
mov
insb
jnp
jmp
pop
into
aaa
repz
bound
adc
dec
in
out
clc
xchg
and
mov
adc
rcl
xchg
jmp
pushf
sarb
insb
cmp
lret
push
jns
mov
fcoms
push
arpl
or
jns
push
cmp
pop
loopne
push
loop
sbb
cmp
push
iret
mov
scas
movsb
mov
leave
jmp
jno
jg
and
mov
cld
jge
lods
mov
xchg
add
lods
jp
rcrl
outsb
outsb
adc
and
sbb
out
iret
repz
jae
jmp
ss
pop
xchg
subb
aad
mov
pop
push
scas
sbb
repnz
jns
clc
out
daa
mov
sahf
cmp
repz
sbb
repnz
ds
pop
decl
dec
adc
push
mov
mov
shlb
xchg
and
rcrl
out
mov
mov
sbb
or
fiadds
push
jl
add
lcall
jns
dec
dec
pop
fcmovu
and
stos
aaa
loopne
add
pop
and
xor
pop
fs
add
movsl
mov
mov
inc
rcr
or
out
orl
out
in
jl
push
cmp
pushf
jg
shlb
mov
dec
push
push
xchg
gs
add
adc
or
sbb
ljmp
pop
adc
add
int
out
cli
xlat
and
fcoms
cltd
mov
lea
inc
mov
add
cmp
push
cli
mov
das
sbb
push
cwtl
rcr
push
add
in
out
or
mov
fs
gs
mov
and
movsb
movsl
hlt
mov
sbb
mov
jno
pop
mov
lods
lods
pop
pop
enter
dec
out
stos
int3
push
lea
dec
fmull
jp
pusha
cli
inc
ret
pop
jle
pop
jge
and
aad
adc
inc
rclb
xor
cld
mov
jge
dec
sbb
or
mov
jecxz
ret
sub
fwait
ljmp
or
or
addr16
or
or
and
mov
pusha
out
sti
out
pop
cwtl
mov
adc
dec
mov
sub
ret
push
insb
jg
lods
push
mov
out
and
daa
xchg
test
ret
cwtl
or
hlt
shrl
and
dec
std
les
stc
shrl
or
test
jo
pusha
pop
int
ljmp
out
aas
out
mov
stc
dec
pop
adc
and
fwait
sbbl
dec
mov
push
addl
orl
sbb
mov
and
xorl
dec
movsl
mov
inc
in
into
add
inc
ljmp
movl
std
inc
mov
scas
ja
loopne
jecxz
loop
aad
and
jns
sub
fistps
outsl
push
jo
push
xor
sub
jbe
jb
inc
dec
lret
sbb
and
inc
pop
push
inc
mov
pop
dec
in
stc
nop
aam
mov
cmpsb
rorl
cmp
mov
mov
dec
fsub
clc
frstor
das
sub
push
inc
jb
sar
and
loopne
push
xchg
dec
pushf
and
dec
in
pop
cmp
pushf
sub
outsl
xchg
test
std
outsl
and
inc
push
sub
aam
cmp
dec
bound
sub
push
out
int
jae
xor
fsubs
mov
push
inc
les
jmp
out
in
iret
mov
add
pop
dec
or
sbb
xchg
mov
shlb
mov
pop
fs
cmp
lods
dec
mov
pop
mov
xor
ret
pop
lcall
fmul
outsb
jle
mov
xchg
or
add
push
adc
rsm
mov
push
mov
xchg
cmp
push
jne
sbb
jmp
mov
sahf
cmp
push
inc
insl
push
sub
dec
filds
sub
push
adc
insb
hlt
mov
cmp
je
jmp
push
cmp
push
jl
jge
xchg
shl
in
fstps
jmp
sub
roll
loop
adcl
stos
int
cld
outsb
push
das
es
imul
pusha
mov
in
outsb
push
outsl
fcomps
xchg
xchg
xor
jns
cmpb
mul
xor
add
leave
scas
insl
xchg
xchg
inc
sbb
mov
push
popf
inc
mov
adc
mov
outsl
lahf
push
mov
pop
lods
mov
daa
mov
push
dec
sub
dec
sarb
push
or
movsb
repnz
jb
mov
xor
addr16
repnz
scas
jg
push
cmp
testb
hlt
outsb
aas
out
cmp
mov
imul
int
and
fst
jb
xor
xchg
mov
data16
hlt
inc
add
fcmovb
inc
je
dec
adc
jge
decb
xchg
pop
insl
js
add
jo
fwait
dec
lret
xchg
mov
repnz
pop
lea
fidivrl
jnp
lea
jne
xor
rcrb
aad
in
jg
adc
push
xor
jg
push
xchg
sbb
jb
pop
push
outsb
and
sahf
cmp
cmp
mov
call
ret
mov
stc
and
enter
jne
insb
sahf
xor
xorb
inc
testb
repz
jb
mov
fldt
mov
sbb
leave
jmp
in
movsb
mov
pop
sub
cltd
jg
or
repnz
push
outsl
cltd
push
out
addl
push
insb
mov
loop
pop
xchg
cli
fistl
mov
cld
je
push
jg
gs
jae
sbb
xchg
mov
mov
cld
in
adc
adc
mov
std
xorl
add
cmc
hlt
pop
xlat
outsl
cmp
lock
push
pop
repnz
jmp
or
jp
inc
cmp
mov
jmp
mov
mov
dec
fnstenv
pop
shr
cmp
cmpsl
sarb
cltd
inc
xchg
sub
faddl
icebp
dec
jo
adc
cmpl
outsb
aam
clc
add
xchg
jge
arpl
and
jnp
cld
mov
je
loopne
push
adc
dec
bnd
dec
mov
inc
imul
outsl
push
int
push
sub
push
mov
test
test
jb
call
jecxz
cli
mov
mov
cli
idivl
call
popa
js
lods
mov
lods
push
jge
adc
cmp
sbb
xchg
mov
adc
push
and
sbb
jge
push
push
pop
inc
add
push
ja
lds
andb
daa
add
push
adc
lods
xchg
pop
xchg
loop
dec
call
or
add
cmp
push
stos
mov
stos
lahf
or
or
repnz
xchg
sub
ret
cmp
push
neg
xor
lea
xchg
mov
push
xchg
xorb
adc
out
adc
pop
lret
lods
xor
push
pop
push
push
xchg
mov
test
out
xchg
push
aam
adc
pusha
lock
sti
leave
fistl
adc
out
xor
bound
inc
jge
jp
clc
into
mov
or
lds
mov
xor
fisubrl
mov
sub
rolb
jge
cmp
test
loopne
pusha
cmp
mov
repz
scas
std
inc
sbb
cwtl
jb
int
call
push
fcmove
jnp
xor
idivl
lcall
mov
or
push
inc
push
and
mov
push
and
inc
int3
mov
data16
mov
push
adc
rclb
test
cmc
add
xor
fstps
xor
sub
std
ljmp
adc
or
adc
repnz
push
shl
mov
or
imulb
xchg
js
jmp
xchg
or
pop
xchg
push
lret
fstl
in
int
mov
mov
mov
mov
unpckhps
xchg
push
dec
je
fld
movsb
cmp
and
adc
imul
movsl
or
dec
ret
adc
scas
lcall
ja
dec
pop
decb
xchg
dec
pop
adc
gs
mov
std
gs
ds
jne
cmp
das
scas
and
jne
das
outsl
sbbl
cmc
test
pop
repz
pushf
lods
jp
cmpsb
pop
pop
sub
adc
and
fildl
sbb
ficoms
adc
dec
sahf
fiadds
stc
iret
lea
pop
popf
addr16
dec
and
nop
sbb
jmp
daa
push
jecxz
hlt
cmp
mov
or
jns
mov
mov
inc
out
aaa
out
inc
and
dec
pop
push
movsl
inc
jmp
cltd
jle
adc
pop
sbb
jp
arpl
arpl
mov
push
sbb
test
dec
nop
xchg
addr16
lds
push
sbb
rcrb
fs
xor
add
test
and
cmp
pop
aam
mov
xchg
es
ja
pop
xor
cs
ljmp
jmp
lods
sub
test
insb
bt
cmp
pop
aas
leave
fs
mov
dec
shll
dec
mov
pop
fnstsw
cmp
jne
jnp
sbb
mov
sub
inc
xchg
xchg
hlt
pop
ja
cmp
push
test
push
or
xchg
aaa
xor
shrl
test
add
jg
xlat
jecxz
popf
pushf
and
stos
lcall
imul
call
mov
rep
ret
repz
sbb
in
jle
or
jae
jb
adcb
insl
xchg
iret
mov
imul
fcompl
fidivl
movsl
dec
loopne
mov
push
xchg
lock
cmp
aas
fs
add
cmova
mov
push
loop
nop
lea
add
jp
fwait
daa
mov
comiss
lahf
fidivl
pop
sbb
int3
pop
test
test
push
and
push
cmpsb
add
pop
loope
xchg
push
addl
and
and
push
faddl
movsb
incl
sub
inc
jbe
xchg
mov
int
loopne
cmpsl
mov
jb
sub
dec
lcall
pop
dec
pop
andb
or
sub
ds
mov
inc
lcall
leave
xchg
pop
daa
ljmp
cltd
mov
ret
pop
inc
mov
ja
sbb
cmp
cwtd
jp
negb
cwtl
mov
mov
out
add
xchg
insl
negl
cmp
mov
xor
xchg
inc
scas
subl
or
pop
mov
push
pop
aad
xchg
je
jo
inc
mov
cwtl
dec
je
gs
sub
lret
in
test
xor
mov
xorl
mov
cwtl
pop
ret
jns
sbb
loope
es
xchg
out
mov
push
std
jne
or
mov
or
push
or
dec
mov
mov
cmp
enter
pop
or
mov
enter
and
pop
lcall
push
add
dec
mov
popf
sbb
fsts
pop
dec
sbb
lods
mov
jno
push
inc
iret
add
mov
mov
ds
sub
shll
inc
or
test
xchg
and
lds
fs
xchg
jne
scas
je
ss
and
out
rolb
aas
mov
lret
mov
iret
and
jo
mov
or
inc
adcb
sub
pusha
les
fwait
insb
jmp
mov
lcall
mov
fbstp
adc
fadd
or
or
adc
dec
cmp
xchg
sbb
rcl
lea
aam
pop
fimuls
int
imul
iret
pop
fcmovnu
pop
xchg
or
cmpsb
sub
sbb
lea
in
add
xchg
sbb
in
and
or
cmc
test
dec
mov
scas
es
sub
cmpl
inc
push
js
sub
sahf
stos
cwtl
or
sbb
adc
xor
push
roll
xchg
icebp
pop
push
out
dec
xor
push
push
or
cltd
cmp
test
dec
lds
add
xlat
xchg
xor
jne
push
push
imul
mov
jo
movsl
xchg
nop
ja
mov
insl
jl
dec
xor
mov
mov
bound
nop
movsl
shll
lret
xor
push
sub
and
sub
push
xchg
cmpsb
iret
jg
jmp
jo
xchg
in
xchg
or
orb
subb
mov
mov
pop
mov
popa
data16
and
out
popa
push
add
aaa
cmpsl
les
pop
sub
ja
add
das
push
stos
cmp
mov
ret
adc
sbb
incb
pop
xchg
cmp
sti
lods
test
fmul
or
stc
add
addr16
fsub
adc
mov
test
out
xchg
add
jle
in
and
ds
adc
out
push
mov
insl
and
push
inc
lock
ss
sbb
pop
or
sbb
loopne
int
shrb
or
sub
push
roll
call
aad
mov
xor
xor
les
sbb
popf
and
sbb
inc
and
out
fmuls
adc
loopne
jae
clc
push
into
dec
lcall
add
pop
mov
jmp
loope
pop
push
xchg
pop
ss
inc
sub
push
pop
ret
cmc
lret
pop
xor
sbb
aad
cltd
sub
fsubs
lock
inc
scas
push
mov
mov
xor
into
and
ret
gs
mov
pop
mov
xor
pop
stos
cwtl
sub
cwtl
pop
fisubrs
inc
int
dec
mov
xchg
mov
pop
in
mov
rorl
jle
mov
je
add
jo
out
push
fnstenv
jns
repnz
or
jmp
lret
push
pushf
sbb
ret
add
test
mov
jbe
cmp
mov
scas
pusha
or
sub
inc
movsb
dec
lcall
out
xchg
rclb
lcall
rorb
pop
pop
enter
movsb
lahf
xchg
cltd
push
dec
out
in
jecxz
pop
mov
mov
cmp
pop
xchg
mov
outsb
mov
cmc
imul
push
imull
out
pop
mov
pop
gs
mov
test
icebp
dec
mov
and
jbe
scas
pop
ss
pop
mov
sbbl
stos
negl
jnp
push
mov
push
mov
push
mov
mov
cmpb
jns
pop
je
ja
jg
mov
test
mov
outsb
bound
daa
data16
cmp
adc
nop
pop
sbb
or
stos
xor
addl
aam
jb
insl
popf
pop
xor
mov
inc
clc
jo
pop
ffreep
stos
call
inc
jno
and
sbb
cs
insl
pushf
into
pusha
jmp
push
cmp
push
out
adcb
xor
and
loopne
or
fsubrs
pusha
loope
sahf
xchg
and
add
xchg
outsb
cmp
xor
and
or
fisubl
into
jmp
jns
jmp
pushl
std
insl
scas
arpl
popf
into
loopne
enter
mov
aas
jmp
pop
daa
jmp
test
aas
adc
dec
fimull
pushf
daa
cltd
addps
mov
pop
add
pop
shlb
xchg
ret
movsl
mov
fldenv
and
push
iret
push
int
lock
or
add
cmp
lea
insl
dec
sbb
jae
cmpsl
inc
mov
cmp
loop
loopne
fisubrs
inc
dec
mov
or
mov
inc
arpl
gs
les
movsl
lahf
jae
mov
stos
cwtl
mov
movsl
pop
insb
fs
lds
loope
dec
dec
xor
mov
xchg
inc
aaa
xchg
jmp
pop
in
je
arpl
js
mov
lcall
inc
enter
lods
push
and
or
mov
jnp
mov
jl
test
outsb
loop
fmul
fld
lods
cltd
pop
mov
ja
add
cmp
pop
add
jae
inc
lahf
push
push
imul
bound
pop
push
fld
lds
inc
loope
mov
push
icebp
xor
loopne
incl
sbb
cs
subb
scas
sbb
mov
pop
inc
pop
out
jno
and
loope
stos
sub
xor
cmpl
add
cwtl
pop
xchg
inc
lods
daa
divl
xchg
testb
mov
lahf
push
test
aas
std
adc
pop
mov
xchg
jbe
mov
int
outsl
push
cmpsb
inc
rolb
sub
into
cs
idiv
loope
jbe
ds
sub
add
xlat
addb
incl
test
add
in
xor
popf
pop
rcll
push
jle
pop
fisubl
sub
mov
push
add
pushf
cmp
mov
jmp
nop
adc
inc
bound
bound
adc
ja
loopne
scas
push
fldl
pushf
pop
int
lahf
call
sbb
jecxz
mov
push
jno
subl
jno
daa
jge
jecxz
adc
pop
add
mov
arpl
fs
repnz
enter
cmpsl
int
stos
xor
int3
xor
je
lret
movl
fwait
inc
xor
shll
xchg
sbb
xlat
neg
add
mov
jne
pop
jbe
fdivrl
fsubl
lcall
jl
mov
popa
xor
inc
mov
sub
adc
and
sbb
add
mov
shlb
mov
imul
call
pushl
stos
mov
aam
aas
xchg
mov
cmc
inc
je
in
insb
das
jge
add
push
in
test
std
inc
adc
sub
roll
mov
mov
xchg
jle
repnz
cmp
mov
cmp
sbb
test
adc
sub
mov
jnp
aam
cmp
adc
outsl
popf
test
dec
xorl
call
fmul
pop
scas
cltd
scas
stc
pop
pop
and
mov
cmp
sbb
mov
xor
xchg
lahf
push
inc
insl
add
dec
inc
jp
add
call
xchg
xor
in
xchg
lcall
mov
mov
pop
cmp
add
orl
add
push
cmp
lods
lea
popa
lret
loopne
cmpb
pop
pop
mov
mov
sub
push
sbb
mov
pop
push
mov
fdivrs
mov
fs
push
cmp
jnp
xor
ffree
inc
xlat
mov
orb
dec
adc
and
mov
cld
lds
cli
push
mov
add
scas
push
jp
mov
repz
push
in
jo
addr16
push
cmp
ficoms
push
into
bound
dec
mov
xchg
cli
or
mov
xlat
dec
jbe
inc
mov
mov
add
es
outsl
insb
push
fistps
lcall
rcll
div
rcl
pop
test
sbb
cli
jge
pavgw
push
es
push
and
cmp
or
push
push
insl
je
cmp
xchg
loop
rcrb
mov
dec
xchg
push
sbb
ss
mov
xor
xchg
scas
fldenv
sahf
cltd
inc
pop
xchg
jo
mov
xchg
mov
loope
test
dec
cmp
orl
fsubp
mov
mov
and
pop
cmpsb
mov
sub
stos
mov
jp
imul
add
insb
and
rorb
or
out
lock
fnsave
mov
andl
pop
cmp
fdivrs
sbb
mov
and
test
push
stos
out
push
data16
cmp
stc
xor
jbe
mov
call
aad
and
push
push
sbb
jne
push
push
mov
sub
int3
fsubrl
cmc
shlb
ret
test
int
mov
ljmp
xchg
shll
or
dec
sar
addr16
jnp
mov
dec
xor
scas
dec
ljmp
gs
cmpl
add
das
aad
dec
out
adc
sub
add
cwtl
loopne
cli
push
ret
mov
mov
and
shl
dec
in
addl
inc
dec
cmp
shrl
adc
jbe
pop
mov
inc
jl
xlat
mov
pop
shrl
inc
pop
lods
lret
cmc
pushfw
jle
popf
fucomp
xchg
and
fdivl
out
xchg
scas
jae
flds
fsubrp
mov
imul
movsb
dec
jne
nop
inc
loope
inc
push
aaa
pcmpeqw
jne
jg
jns
jo
jmp
xor
sti
hlt
pop
mov
div
push
js
rolb
fucom
fistl
adc
insb
adc
jecxz
xchg
fs
push
dec
repz
jecxz
jecxz
pop
sub
cmpsb
xchg
add
xchg
sarl
mov
jo
das
adcb
loopne
push
and
testl
inc
cld
lret
xchg
mov
pop
and
dec
cld
jg
stc
mov
jnp
or
xor
push
pop
mov
cmp
mov
addb
cld
enter
loop
icebp
arpl
xchg
cmp
or
xchg
cmp
pop
dec
subb
xchg
cmp
cmpsb
xchg
dec
je
cmp
jno
nop
jns
rolb
int
testb
addl
pusha
test
xchg
aad
jge
rol
sti
inc
es
or
inc
fwait
dec
lcall
cltd
sub
jl
repz
mov
jmp
mov
aam
mov
cmp
imulb
cmp
or
xchg
mov
xor
je
pop
js
cs
les
in
inc
mov
out
out
hlt
fninit
imul
sbb
mov
mov
cltd
sarl
jge
sbb
ja
fcoms
add
cmp
push
cwtl
je
push
cmpsl
push
repnz
bound
sbb
mov
or
or
sti
mov
cmp
mov
mov
stc
fbstp
xor
or
dec
sbb
pop
or
movsb
jb
mov
mov
add
dec
xor
jb
sbb
xor
push
das
mov
push
pop
xchg
mul
jg
jo
out
pop
js
clc
xor
fisubrl
or
call
dec
push
mov
icebp
cld
sarl
popf
inc
out
repnz
loope
sbb
dec
int
ficompl
xor
shll
push
mov
inc
les
pop
pop
lahf
enter
pop
out
fsts
lods
cmpsl
xorl
jle
fsts
sbb
inc
jb
add
lds
sahf
lock
xchg
test
test
shll
ja
fcoms
test
sbb
adc
push
xchg
int3
jb
push
in
pop
pop
stos
rcll
scas
or
ret
aad
pushf
xchg
fdivrs
test
aas
adc
mov
pop
lock
jl
ret
sbb
sub
mov
mov
pop
cmp
mov
les
js
in
imul
mov
push
es
aaa
shrb
cmpsl
int3
in
add
push
mov
popa
sub
mov
stos
mov
pop
xchg
movsb
loope
bound
pusha
dec
mov
jmp
enter
inc
adc
nop
sbb
xchg
cmc
mov
or
or
add
jmp
lcall
adc
lds
andl
add
add
pop
sub
or
adc
lea
fildll
hlt
jmp
mov
in
xchg
adc
push
imul
inc
test
adcl
sub
sbb
pop
add
loope
loop
jmp
jp
repz
cmc
mov
xchg
jle
inc
mov
test
jmp
xchg
dec
ret
push
insb
addr16
pop
sbb
fmuls
jmp
adc
mov
push
mov
inc
adcb
sbb
mov
push
xor
sub
xchg
mov
pushf
and
cmp
mov
ja
cwtl
fistl
pop
xchg
popf
fsub
data16
loopne
and
mov
aas
frstor
fwait
inc
imul
movl
ljmp
mov
xchg
inc
aaa
mov
mov
adc
cmp
iret
lds
sub
inc
insb
and
or
ret
mov
js
outsb
push
scas
xchg
call
inc
loop
xchg
cmp
ss
xor
pop
aaa
das
add
xchg
mov
add
sbbl
sub
dec
int3
jns
adc
pop
adc
pop
gs
xchg
pop
mov
mov
pop
shl
push
mov
xchg
outsb
mov
pop
xor
jl
and
mov
jle
stos
insl
nop
lret
inc
and
call
sar
mov
mov
mov
xchg
adcb
pusha
mov
sub
scas
std
jecxz
lahf
orb
sub
insb
cmp
int3
sbb
imulb
int3
or
cwtl
notb
inc
xchg
inc
xor
jp
cmp
cld
cs
lea
xchg
rcrl
mov
and
repz
les
xchg
adc
repz
loop
dec
fildll
push
int
mov
jo
dec
je
mov
ljmp
xchg
cmpsb
sub
leave
dec
or
aam
jecxz
lcall
sbb
mov
imul
aas
adc
push
sub
in
loopne
pop
out
and
fists
into
ret
jge
xor
pusha
or
stos
loope
xor
mov
pop
aas
shr
sbb
mov
dec
mov
push
dec
push
out
push
adc
scas
out
dec
push
out
xchg
repz
popf
jp
cmp
mov
sbb
lea
push
mov
inc
adc
gs
scas
push
cmpsl
add
xlat
sti
adc
and
pop
jno
jae
popa
sbb
shrb
out
clc
ljmp
clc
imul
dec
sarb
std
pop
xchg
fists
jno
sbb
add
mov
or
sti
xorl
mov
inc
test
dec
adc
xor
sbb
cvtpi2ps
pusha
xchg
add
mov
xchg
fcmovnbe
jno
rcl
sub
cmp
mov
jae
adc
ljmp
test
popf
sbb
xor
inc
mov
sbb
das
inc
aam
mov
repz
movsb
push
fcoml
in
jle
mov
dec
shll
sub
aaa
scas
jle
inc
cli
jmp
mov
cmpsl
jne
dec
cmp
pop
and
add
mov
gs
jb
shlb
adc
sub
pushf
sbb
rorl
or
test
es
jecxz
lahf
jecxz
cs
dec
dec
pop
mov
pushl
pop
jnp
mov
push
in
stos
dec
push
mov
jb
test
pop
cmpsl
mov
sub
sbb
insl
inc
lret
jecxz
scas
frstor
push
scas
xchg
mov
stc
dec
mov
xlat
stos
stos
repnz
adc
mov
cmpsb
movsb
dec
std
int
dec
aad
push
push
mov
popfw
push
shlb
pop
adc
out
not
ds
xchg
xlat
inc
cmp
jns
pop
mov
into
mov
imul
xor
jmp
dec
xchg
add
repnz
push
mov
cmpsl
leave
xchg
inc
add
xor
stos
icebp
out
out
mov
pop
mov
imul
fxch
mov
push
push
cs
inc
adc
and
out
testl
dec
insb
jns
push
sub
cmp
pop
sbb
jno
jno
dec
push
push
mull
imul
add
add
out
test
sti
push
xlat
jp
dec
mov
xor
shlb
pushf
mov
lret
in
pop
pop
movsl
cmpsl
mov
mov
dec
test
or
mov
in
dec
push
mov
and
adc
xchg
sarl
insb
mov
xchg
push
in
pop
jno
int3
jge
ja
xchg
or
push
add
jae
jecxz
sbb
cwtl
test
push
fistps
loopne
mov
jge
sbb
mov
lods
push
stos
fwait
scas
xchg
sbb
xchg
push
or
adc
push
movsb
jg
shlb
popf
test
and
lret
sbb
jae
flds
and
mov
and
sub
adc
cld
and
mov
mov
movb
inc
fldcw
mov
out
xor
jno
fistps
gs
adc
inc
xor
inc
sbb
test
inc
scas
or
xchg
pop
call
push
mov
lret
cli
fldl
sbb
lods
sti
or
jecxz
jae
push
clc
mov
fsubrs
push
jge
jnp
or
pop
faddl
lods
test
imul
cmp
inc
mov
rorl
repnz
xorl
jmp
cld
cmp
adc
std
pop
int
pusha
jbe
or
imul
and
and
test
and
dec
arpl
pop
movl
sbb
mov
hlt
je
cld
jae
inc
sub
movl
jmp
cmpsl
cmp
push
leave
ja
sbb
xchg
notb
loopne
fisttpl
stc
push
push
xlat
mov
outsl
lret
shll
mov
fcoml
mov
in
jmp
inc
or
test
orl
mov
sar
imul
loopne
or
lret
sbb
gs
orb
arpl
jne
cmpb
iret
mov
inc
fldenv
xor
mov
xchg
clc
mov
inc
movsl
xor
sbb
test
nop
scas
mov
dec
imul
sbb
mov
roll
out
pop
sahf
add
dec
xor
jo
out
or
lock
stc
jg
leave
or
jo
stos
mov
sbb
cs
sbb
jbe
aaa
and
adcb
mov
fst
sub
cmp
inc
jb
inc
push
inc
inc
jnp
out
dec
lds
adc
dec
test
stc
mov
outsl
fisttpll
inc
lret
aad
mov
fdivrs
cmpb
and
test
lds
sbb
out
mov
pop
loop
nop
es
cs
pop
push
mov
cmpsb
mov
jne
mov
lcall
inc
pop
push
sub
sti
in
jle
mov
lock
popa
inc
pop
pusha
hlt
and
mov
ss
cmc
testb
push
dec
inc
les
orb
enter
adc
mov
jo
shl
jl
add
xchg
out
push
gs
mulb
fildll
jae
jmp
ja
icebp
sarl
gs
inc
sub
enter
popa
sti
dec
lock
mov
xor
cmc
inc
aam
and
notb
arpl
dec
or
xchg
ret
mov
inc
adc
dec
popa
xor
cmovae
pop
xlat
nop
cld
lret
xchg
mov
arpl
add
icebp
and
rolb
jo
sub
or
iret
inc
nop
ret
cld
cwtl
ret
jno
gs
sub
and
dec
sbb
fcmovu
pop
enter
js
cmp
dec
push
int
xor
mov
clc
jo
flds
cltd
cli
mov
loopne
lahf
je
gs
in
jle
ds
stc
in
xor
filds
fildl
xrelease
and
in
jbe
or
arpl
xor
xor
test
mov
sbb
mov
sarb
push
inc
add
mov
or
adc
dec
ljmp
rclb
addr16
mov
and
inc
jbe
movsl
inc
mov
jne
pop
and
add
mov
add
pop
rorl
sbb
mov
loopne
cmovg
jnp
xor
jno
adc
pop
shr
xor
aam
lds
jg
mov
dec
mov
iret
repz
sub
sub
add
and
adc
loopne
mov
dec
mov
dec
xchg
andl
arpl
mov
mov
mov
ret
fisttps
sub
insb
aam
pop
push
mov
pop
mov
inc
pop
rorl
enter
daa
out
js
and
jnp
push
jo
sub
es
out
adc
ret
les
mov
cmp
jmp
fdivrs
movsb
push
mov
addr16
push
mov
cld
add
div
fcmovnu
in
and
xor
fmull
outsb
cwtl
mov
repnz
std
push
xor
mov
ret
addr16
adc
jno
repnz
je
jle
or
sbb
pop
pop
pushf
add
dec
sahf
shll
mov
iret
stc
xor
mov
cltd
add
sahf
xchg
add
je
jo
inc
movsl
imull
ret
es
test
mov
and
mov
sbb
xchg
scas
fsubrl
push
sarb
add
mov
or
jg
subb
dec
add
xchg
cmp
jo
popf
rcl
xchg
stos
or
dec
add
cmp
pushl
and
push
push
xor
adc
das
dec
add
roll
in
js
insb
mov
test
jg
es
xchg
push
in
icebp
out
xor
cltd
or
fbstp
push
xchg
incb
jns
mov
test
add
mov
out
test
cmpsb
out
xor
mov
lret
roll
movsb
in
enter
ret
mov
or
mov
pop
xchg
lea
movsl
stc
addb
sbb
aad
pop
cmp
mov
ret
popa
stc
xchg
rorb
stos
insb
cwtl
js
cmpsb
mov
es
mov
enter
cmp
sarl
jb
loope
adc
idivl
push
jl
iret
mov
mov
mov
fsubl
push
cmpsl
imul
aad
stos
jp
movsl
test
inc
push
sbb
lods
lds
push
std
or
xor
inc
pop
adc
cmp
push
and
mov
enter
sub
fistl
testl
scas
adc
hlt
xchg
adc
scas
xchg
gs
sbb
in
or
mov
mov
bound
out
inc
pop
int3
push
add
xchg
jnp
test
add
mov
clc
and
push
xchg
jmp
mov
daa
sbb
call
mov
scas
pusha
dec
mov
cmp
sbbl
sub
and
div
xor
and
pop
aam
inc
sub
cmpsl
and
and
cmp
push
cli
cmp
mov
pop
sbb
jo
jmp
inc
gs
fdivs
jb
sub
fdivs
jo
imul
xchg
push
call
xlat
sub
xchg
es
jb
leave
cmp
int
mov
xor
sub
or
mov
or
rolb
aad
es
xor
aam
and
or
inc
jmp
dec
mov
and
jecxz
adc
adc
fwait
adc
and
cmp
sub
clc
test
movsl
insb
push
push
or
sarl
mov
test
mov
inc
and
into
jb
add
pop
loopne
adc
leave
rolb
mov
jg
iret
popf
je
repnz
sbbl
jp
mov
dec
sbb
jno
mov
dec
mov
dec
inc
mov
daa
xlat
sbb
fiadds
scas
lea
rolb
cwtl
fwait
mov
movsb
lret
mov
insb
das
add
mov
mov
add
cmp
aas
dec
cmp
mov
imul
cmp
sub
and
jg
ja
xor
xchg
jne
icebp
jae
hlt
inc
notb
ficoms
rcrl
mov
pop
sub
ja
xchg
addr16
mov
inc
ret
sbb
cmp
lcall
nop
int
xchg
scas
lret
pop
add
push
cltd
mov
cmp
mov
ljmp
ret
popf
cmp
or
pop
sub
pop
push
push
pop
lret
and
xor
mov
fsub
or
xor
mov
test
fisubrs
notl
push
jae
push
jmp
xor
shrb
xor
cmp
lea
leave
push
int
mov
or
mov
rcrl
jbe
jge
and
mov
loop
dec
mov
push
clc
fisttpll
push
add
daa
sbb
dec
and
jae
outsl
pop
adc
or
dec
add
mov
pop
dec
pop
pop
dec
repnz
push
and
jno
jbe
loope
cmc
and
mov
push
adc
cli
in
inc
cmp
push
jbe
dec
stc
dec
les
out
push
adc
cmpsb
loopne
pop
aaa
mov
push
test
adc
dec
leave
add
jae
dec
lret
ja
mov
mov
jae
and
jno
adc
mov
stos
and
inc
pop
push
mov
pop
fistpl
adc
mov
xchg
sahf
pop
imul
ffreep
jmp
call
icebp
mov
int3
in
imul
mov
in
push
sub
sbb
stc
dec
movsb
stos
mov
cltd
jl
mov
lock
cld
in
setge
jno
mov
das
mov
xchg
mov
mov
xor
mov
or
cmp
cmp
adc
push
lea
xchg
mov
or
lods
push
mov
mov
scas
ds
ja
popf
es
cmp
mov
data16
test
xor
fimull
mov
mov
push
jl
xchg
cmp
shrd
test
ds
mov
dec
loop
mov
das
jno
addr16
jnp
loope
sub
dec
aas
dec
mov
cli
jno
xchg
leave
mov
shlb
fwait
cmp
inc
pushf
rcrb
jne
stos
fwait
lret
call
enter
fimull
sbb
push
mov
mov
fnstsw
imul
mov
mov
in
or
roll
out
mov
lods
int3
sti
cmpsl
jg
mov
mov
pop
aaa
imul
iret
rolb
cmp
mov
rcl
mov
pop
sbbb
adc
stc
sti
add
xor
out
push
pop
dec
imul
or
xchg
das
xchg
add
xchg
sub
popa
subl
ret
xchg
cmpsl
cmp
jg
insb
out
or
adc
shlb
ja
test
or
add
and
int3
addr16
ss
fadd
or
adc
push
jge
lret
cli
inc
rorl
hlt
outsl
adc
add
sub
andl
jle
xlat
stos
mov
mov
or
std
loope
movsl
stos
notb
fisttpll
sub
cmpsl
repnz
cmp
popa
add
adc
sbb
mov
repnz
insb
test
mov
faddp
and
outsb
dec
mov
xchg
lcall
xor
es
iret
adc
cmp
iret
jae
add
jnp
inc
push
sarb
leave
mov
fldcw
sub
mov
sub
cmp
sbb
jb
lret
roll
inc
mov
sbb
mov
out
arpl
sbb
rclb
ret
cld
insb
push
adc
push
icebp
mov
ja
sub
in
xor
dec
cmp
mov
out
sbb
pop
mov
mov
xchg
sarb
sub
es
xchg
jnp
lods
pop
xchg
lret
jnp
jp
jle
xchg
xor
adc
jno
fdivrl
cmp
outsb
push
addr16
mov
test
lcall
dec
dec
xchg
fcmovu
cmpsl
lret
out
jbe
sub
cmc
ret
stos
adc
popf
jbe
fcoml
inc
fcomi
inc
in
in
loopne
push
popf
ds
in
xor
out
dec
adc
xchg
iret
cltd
sti
test
mov
and
inc
push
adc
xor
mov
insb
xor
cmpsl
div
push
mov
cmc
sbb
stos
sbb
push
cltd
and
test
mov
inc
sbb
repz
push
in
mov
jge
movsl
shll
xor
mov
aaa
aas
and
clc
mov
dec
push
leave
cld
pop
fs
jg
and
xchg
out
jno
sbb
pop
inc
out
add
jbe
adc
add
shr
xchg
pop
out
sub
jmp
insl
inc
jge
xchg
sti
je
lret
orps
push
lahf
mov
ret
fdivrs
out
bound
aad
stc
xlat
and
cmpsl
xchg
mov
fisttpl
push
add
sub
jl
pusha
sbb
jo
add
xor
test
int
xor
or
mov
adc
ja
addr16
scas
dec
cli
mov
jnp
adc
inc
fstl
outsl
add
pop
cmp
adc
jno
sbb
cld
jmp
sbb
jae
nop
rep
scas
stc
ja
outsb
adc
ret
outsb
push
jmp
cwtl
mov
mov
xchg
pop
pop
pop
into
jae
mov
add
pop
pop
push
pop
jbe
in
add
mov
insl
rep
test
lds
xor
mov
sahf
test
xchg
or
roll
hlt
leave
fisttpl
movsl
adc
es
popf
inc
notb
data16
lret
sub
popf
mov
loop
clc
or
pop
pop
nop
ds
cwtl
stc
icebp
aam
fidivs
adc
push
int3
jns
sub
inc
push
cli
mov
das
es
test
jg
iret
or
jmp
loop
test
dec
jecxz
imul
add
ds
int
jl
cli
mov
pop
js
cmc
inc
nop
in
inc
outsl
clc
inc
adc
shll
ja
mov
xchg
jle
pop
in
pause
repz
div
pop
and
mov
ljmp
mov
push
movsl
adc
cltd
and
dec
xchg
iret
adc
repz
or
adc
xchg
stos
stc
push
clc
jecxz
pop
or
adc
push
dec
inc
out
jp
add
hlt
add
pushf
pop
jle
ret
cltd
stos
mov
dec
xor
xor
push
js
push
test
std
pusha
jp
sub
cmp
mov
mov
daa
xlat
das
stc
ret
push
rolb
addb
sbbb
imul
pop
xor
call
ljmp
shr
mov
aad
imul
stc
inc
fwait
mov
pop
int3
lret
cmpsb
pushl
mov
jge
lea
or
pushl
adc
mov
sub
add
bound
psubsb
push
scas
test
in
popf
mov
jno
pop
testb
je
nop
js
cmpsb
or
fs
and
push
xchg
push
into
test
push
sub
gs
sbb
movsl
jo
bound
push
push
fnstsw
aaa
jns
push
mov
daa
cmp
jmp
lea
dec
adc
xchg
mov
fdivp
jns
sub
movsl
mov
outsl
es
pop
jbe
and
cmc
lret
sbb
jecxz
insw
aad
clc
dec
push
dec
adc
xchg
jmp
adc
pop
lods
mov
sti
push
cltd
add
fwait
lods
xor
and
in
xor
lret
cmpsl
cmp
mov
jle
jbe
cmp
in
add
mov
inc
dec
jecxz
cmp
mov
shrl
mov
mov
popa
out
js
mov
fisubrs
inc
in
xchg
mov
into
dec
stc
push
jge
call
xchg
leave
lahf
cmp
xchg
repz
mov
lods
jno
jnp
fdivl
sbb
fwait
out
stos
aad
pusha
leave
cwtl
push
test
sarb
iret
xchg
frstor
shll
push
inc
mov
xor
mov
jo
test
jnp
jne
imul
rcll
hlt
lods
jo
stos
in
and
adc
adc
rcll
iret
decl
fdivrs
or
ss
xor
mov
sub
int
cs
jl
adc
mov
dec
imul
pop
cmpsl
xor
scas
rclb
ffreep
and
imul
loop
hlt
inc
jg
jne
dec
adc
pop
add
or
lahf
frstor
dec
aaa
out
dec
call
pushf
cmc
cmp
cmp
icebp
mov
jbe
mov
push
xor
mov
pop
stos
test
xor
pop
test
jns
sub
mov
jmp
movsl
jle
shlb
outsb
in
xlat
imul
rorb
or
test
hlt
gs
sub
ljmp
push
inc
xchg
inc
add
mov
lret
pushf
fnstcw
sbb
xchg
out
and
mov
fincstp
arpl
es
adc
push
repnz
sub
adc
gs
imul
push
lds
push
call
cmp
mov
adc
cmp
push
rclb
jo
mov
sub
fldenv
cmpl
push
arpl
or
mov
cmpsl
mov
lcall
sub
movsl
inc
ljmp
leave
bndldx
dec
xchg
xchg
rcrl
adc
cmpsl
push
gs
and
imul
xchg
imul
in
xchg
and
pop
in
inc
pushl
jl
test
mov
leave
mov
add
lods
scas
outsb
cwtl
dec
push
lcall
stos
xchg
or
push
jl
sti
xchg
xor
out
les
mov
out
push
jle
or
sub
std
add
divl
xor
data16
cmp
xor
sti
push
shll
inc
test
fwait
outsl
mov
clc
jns
out
int3
fcomps
mov
movsl
mov
stc
outsl
outsl
xor
sub
fadd
test
pop
cmp
fs
lock
ss
mov
and
cli
or
add
adc
mov
mov
ja
mov
hlt
push
sub
repnz
fsubrs
stc
movsb
xchg
ret
mov
aas
js
in
push
cmp
fsubs
cmpsb
pushf
xchg
cmp
ljmp
ja
pop
outsb
sbb
out
cld
adc
aad
mov
int
push
jecxz
cmp
jmp
mov
addr16
jne
sbb
jb
and
rcrl
enter
testl
test
dec
mov
mov
xchg
movsl
sbb
xchg
push
and
xor
mov
aaa
lods
and
pop
in
push
push
jae
sbb
je
js
insb
adc
lea
pop
data16
cmc
or
mov
aam
push
jmp
or
rcrl
scas
ljmp
inc
cmp
and
cmp
sub
ja
mov
scas
push
call
jae
lock
pop
or
mov
dec
loope
add
ja
jb
add
mov
sub
mov
add
mov
mov
mov
loopne
out
filds
xor
lock
repz
stc
idivb
mov
mov
xor
scas
mov
push
stos
or
dec
dec
int3
sub
mov
out
mov
mov
mov
pop
jecxz
push
dec
filds
pop
fcmovu
push
dec
dec
cmp
jmp
data16
enter
dec
inc
ja
test
xchg
add
add
jge
popf
mov
cmp
push
mov
aad
add
sbb
xchg
push
pusha
outsb
mov
mov
adc
dec
les
fucom
add
repnz
out
xchg
sub
stos
lahf
testb
push
into
jecxz
xchg
push
mov
cmp
sbbb
cmp
pop
mov
dec
cmp
lret
inc
mov
mov
jge
pop
xor
mov
rorl
push
fildl
sbb
in
cmp
lret
jo
enter
cli
sbb
ljmp
jl
rclb
add
imul
mov
adc
stos
mov
and
in
aaa
pushf
movsb
pop
add
cmpsl
and
adc
imull
add
jno
mov
cmc
fisubrs
inc
jle
jns
shll
cmc
dec
jl
frstor
ja
xchg
insl
cmp
adc
push
sub
sub
icebp
adc
icebp
rcll
shll
popa
stos
aas
xchg
inc
in
fbld
pushf
push
setl
test
sub
xchg
cmp
fidivrl
or
addr16
adc
scas
xchg
and
inc
ret
sub
int3
dec
add
or
test
pop
and
cld
cli
loopne
dec
lret
xor
sti
mov
lret
mov
insb
mov
xchg
sbb
shlb
fisttpll
lahf
add
rolb
je
loop
xor
sub
lods
rorb
jl
ja
inc
inc
test
jl
push
xchg
addr16
loope
call
fchs
in
jg
shlb
pop
jp
push
and
mov
xchg
adc
fs
mov
ljmp
ds
andb
movups
sti
mov
andb
dec
cwtl
jmp
loop
ds
dec
nop
pop
loopne
jp
mov
lock
mov
cmp
fnsave
push
pop
xchg
dec
fldl
in
inc
stos
mov
cmp
mov
cwtl
mov
das
pop
outsl
cs
xorl
pusha
and
and
pop
or
xchg
cmpb
aas
cmp
cmc
ja
mov
cld
mov
testb
adc
inc
inc
push
fldl
addr16
push
loop
mov
sbbb
fdivrs
xchg
dec
rcrl
jge
mov
pusha
jg
pop
outsl
lcall
jne
icebp
test
outsb
push
dec
repz
fisubrl
popa
adc
and
jmp
les
rclb
in
popf
rclb
or
xchg
mov
mov
push
clc
arpl
inc
loop
aad
cld
rcrl
mov
cli
pop
adc
pop
add
in
jecxz
adc
test
mov
sbb
and
ljmp
mov
pop
push
cli
aaa
jp
pop
mov
lds
pop
sar
xchg
nop
imulb
jecxz
pusha
jne
cmc
int3
loop
sbb
sub
test
mov
xchg
shl
lods
fs
into
sbb
mov
adcb
pop
js
insl
int
push
sub
add
repnz
out
ret
test
insb
mov
in
inc
popf
ret
aaa
inc
jb
cs
subb
push
lcall
inc
adc
adc
mov
lods
add
dec
mov
test
adc
mov
inc
or
daa
sarl
cmc
das
sub
sub
sti
and
cmp
sbb
sarb
call
dec
out
xchg
stc
sbb
push
fistl
lods
data16
imul
push
ljmp
xchg
iret
dec
jg
inc
inc
test
mov
in
ja
orb
mov
bound
decb
sbb
xchg
sbb
lahf
dec
jp
cs
in
sti
adc
int
xchg
cwtl
xor
and
test
lods
addl
imul
lds
dec
insb
testb
clc
enter
cmpsl
adc
out
jnp
mov
cmp
pop
scas
rolb
or
sbb
xor
ret
sub
scas
jo
idivb
aas
mov
int
push
mov
lds
daa
fisubs
mov
lret
mov
stos
and
push
fcoms
mov
cmp
pop
mov
lds
and
mov
sysexit
inc
cs
decb
push
adc
jns
sbb
add
idivb
cld
int
cmp
and
cmc
dec
xchg
mov
aam
xor
jae
lret
add
xchg
ud0
push
jg
push
adc
cmp
loope
or
push
ret
mov
inc
rcrl
adcb
push
in
test
in
sahf
fbstp
push
xor
mov
push
in
dec
push
xchg
jmp
bound
jp
lods
jno
into
sbb
in
cmpsl
xor
cmp
js
jo
mov
cmp
call
repz
inc
stc
mov
int
add
cmpsl
ret
mov
push
outsb
jmp
jle
repnz
aad
lea
xor
xor
stos
xor
in
push
mov
out
orb
repz
int3
repnz
pop
xchg
fs
add
nop
jp
fcomps
cmpsl
jecxz
cmp
pop
xchg
push
xor
mov
jns
shll
add
lret
xchg
insb
leave
mov
loop
out
sbb
add
divb
jb
sbbl
sbb
faddp
ds
adc
std
test
xor
xor
dec
or
cs
cltd
ljmp
cld
cli
inc
xor
cmp
add
lcall
ljmp
cli
pusha
in
jge
push
pop
xor
shll
and
pusha
push
fsubl
xor
fisubrs
jae
dec
inc
iret
or
popa
je
mov
je
js
push
sbb
popa
and
int
dec
subb
adc
jge
add
adc
xchg
push
mov
push
adc
frstor
ret
daa
or
lcall
xchg
push
fldenv
inc
mov
nop
inc
int
in
and
push
popf
sub
add
in
lret
loop
dec
rorb
pusha
dec
adc
and
pop
and
cmpsl
aas
dec
aam
add
sub
xchg
sbb
lret
sbb
mov
cmp
push
scas
pcmpeqd
dec
aad
adc
jecxz
sbbb
sbb
imul
jecxz
xor
dec
xchg
fimuls
iret
pop
dec
movsl
pusha
ja
in
jo
xor
sbb
xchg
mov
out
mov
cmp
lret
popf
outsb
repz
pop
sub
arpl
mov
mov
aas
push
inc
lahf
shll
rcrb
ss
jo
mov
jg
and
jbe
icebp
cmc
dec
push
push
push
and
cmp
adc
mov
les
sbb
sarl
mov
jp
jns
movsl
clc
arpl
xor
cld
loopne
scas
test
jge
jnp
jecxz
jbe
xlat
in
xor
adc
inc
ds
mov
popf
push
ret
in
xchg
jns
fstpt
movsb
adc
rcll
dec
pop
push
jmp
ret
in
sub
push
mov
insl
test
dec
cltd
mov
mov
mov
or
movsl
stc
add
add
xchg
jp
or
rclb
adc
pusha
or
jl
and
loope
addr16
push
sbb
jne
fcmovnu
cwtl
outsb
test
mov
fldcw
xchg
test
stos
outsl
xchg
pop
push
in
jb
pop
dec
cltd
jmp
mov
adc
jae
je
push
pop
das
xchg
xchg
jbe
mov
mov
or
add
scas
pop
mov
jecxz
xchg
jbe
push
sub
imul
or
test
popa
sub
pop
sub
arpl
mov
xchg
add
ss
xchg
dec
and
into
mov
and
xor
pop
sub
xor
xchg
aam
lret
inc
fdivrl
mov
dec
arpl
loope
sbb
jo
cmp
mov
cmpb
clc
int3
sbb
mov
jae
bound
das
stos
loop
popaw
repz
test
in
leave
movsb
aaa
shll
jno
pop
scas
mov
push
inc
jmp
pop
push
lods
cli
dec
prefetch
or
dec
shll
ret
enter
nop
mov
xchg
cmp
jns
cmp
add
lea
xor
mov
test
inc
xchg
mov
iret
push
mov
lea
pop
push
loop
test
aaa
xor
psrlq
out
lea
or
inc
test
sbb
test
mov
insb
sub
mov
andb
push
es
fbld
mov
call
jbe
push
mov
push
mov
js
andb
xorb
cmpsb
adc
imul
data16
inc
pop
arpl
imul
pop
ja
xchg
lea
loop
nop
ds
into
pop
bound
shlb
test
in
imul
je
repz
in
scas
inc
test
add
adc
xchg
or
mov
iret
js
imul
fcmovb
outsb
pop
adcb
ficomps
mov
stc
outsb
test
sti
cmp
rorl
je
lahf
push
fisubrs
dec
mov
jp
and
mov
sub
inc
mov
sub
or
ret
mov
mov
hlt
jmp
dec
icebp
nop
push
stc
lds
adc
frstor
enter
cmp
adc
nop
arpl
cmp
xchg
lods
dec
and
iret
ret
cmp
jb
mov
jle
fildl
divl
inc
mov
xchg
cmp
lock
movsl
mov
push
add
das
int
rorl
jmp
nop
out
je
aaa
leave
sub
mov
and
cld
xchg
mov
push
xchg
outsl
in
sub
out
loope
dec
in
loopne
test
push
mov
loopne
xor
cs
out
xor
pop
cmp
ret
xchg
push
dec
lods
mov
mov
mov
fcoms
testl
ficoms
xlat
sub
and
xrelease
mov
mov
ss
push
fisubrs
cld
je
testb
or
js
mov
jl
xchg
cli
adc
mov
push
ljmp
gs
cli
push
pop
repnz
inc
lods
gs
clc
js
push
cmp
lock
subl
shll
pop
or
lret
jg
loope
cld
mov
loope
mov
inc
das
adc
ret
sub
push
push
push
mov
and
or
push
es
sbb
cwtl
arpl
or
sbb
inc
mov
lds
push
stos
dec
inc
cwtl
and
dec
test
mov
inc
in
jle
jecxz
jo
cmp
cmpsb
pushf
push
call
mov
dec
fiadds
or
xor
rolb
add
mov
mov
inc
roll
xor
pop
mov
fnsave
sbb
aam
cmp
daa
int3
cmpsb
mov
jno
and
sbb
fmull
es
jo
mov
enter
mov
dec
pop
mov
xor
pop
jno,pn
in
aaa
inc
pop
leave
add
xchg
imul
sbb
sub
inc
cli
jnp
xor
cmp
mov
rorb
loope
stos
aas
dec
mov
jbe
aaa
mov
dec
testb
sti
jae
cs
mov
cwtl
xchg
and
xchg
stc
dec
lcall
push
xchg
ret
push
mov
mov
into
das
mov
addb
mov
mov
ds
or
jge
inc
xor
xor
adc
or
stc
mov
cld
mov
pop
push
imulb
cmc
push
pop
leave
or
mov
andb
cmp
test
push
arpl
xor
jp
xchg
dec
inc
test
shrl
imul
test
sub
cwtl
icebp
cs
aaa
test
and
movswl
sbbb
push
repz
mov
je
sbb
dec
cli
std
lods
jl
push
scas
mov
mulb
loop
jbe
imulb
stc
in
sbb
insb
fcmovnbe
pop
xorb
notb
lods
popf
sub
in
xor
lret
and
cpuid
aad
adc
mov
cli
out
dec
xchg
insl
xorl
mov
xlat
dec
cltd
movsb
test
addr16
stos
loop
repnz
das
pop
int3
adc
daa
aas
aaa
sub
mov
std
dec
push
adc
int3
mov
inc
jno
out
int3
notb
xchg
fs
dec
sub
faddp
ffree
rorb
lods
ror
mov
adcb
push
pop
subl
mov
pop
pusha
movsb
inc
add
xor
add
aam
test
or
cmp
mov
enter
adc
iret
inc
add
sahf
xor
push
popa
outsl
out
sub
add
push
test
push
out
push
jns
scas
pop
or
gs
in
movsb
jp
lock
adc
call
je
or
push
sbb
add
insb
sbb
stc
ficomps
jns
sbbb
ljmp
inc
sbb
sub
add
pop
cmc
mov
dec
mov
out
cmp
stc
mov
jle
xor
mov
mov
jg
movsb
inc
pop
or
js
int
bswap
stos
lahf
mov
sbb
icebp
xchg
ret
fildl
push
jbe
into
imul
movsb
push
pop
lock
push
iret
adc
cwtl
loop
pop
adc
push
pxor
adc
hlt
std
std
xor
dec
and
dec
mov
in
outsl
xchg
nop
or
insl
jle
adc
in
cli
mov
aaa
jg
xchg
cmp
jbe
test
hlt
in
adc
stos
dec
fidivrs
pop
mov
xor
daa
xchg
es
gs
pop
cmp
dec
imul
lea
pusha
mov
sbb
pop
pop
and
data16
insb
pop
or
pushf
negb
test
pop
mov
add
xchg
outsl
in
jae
sub
xchg
mov
or
cmp
mov
jns
xchg
sub
int3
and
mov
sbb
jnp
pusha
mov
ret
xchg
ds
fdivp
and
movsb
mov
ljmp
or
rolw
push
mov
ds
pop
das
lods
adc
outsb
out
jae
jle
lahf
xchg
sbb
les
imul
daa
mov
pop
shr
dec
pop
mov
xchg
popw
adc
mov
repz
shrl
int3
push
movsl
and
int
cmp
in
mov
cmp
add
xor
dec
popf
xchg
inc
fwait
jb
imul
cld
xor
xchg
out
pop
dec
xchg
push
inc
rolb
mov
inc
adc
lods
cmc
shrb
popa
loop
inc
cmp
bound
hlt
pop
ljmp
cld
ret
xor
outsl
xor
subb
mulb
daa
push
cs
lea
rcll
imul
and
push
or
xchg
pop
fidivs
jae
leave
adc
push
fcoml
in
bound
xchg
addb
inc
adc
clc
rcr
mov
xchg
dec
sbb
push
lods
jl
lahf
loope
xchg
jle
inc
rcr
push
ror
mov
aam
mov
xlat
fs
clc
push
inc
mov
faddl
cmc
and
mov
jg
mov
pop
push
pop
mov
lods
ret
mov
stos
lds
mov
aad
push
cmc
mov
lods
adc
push
jae
jl
and
sahf
cmp
jnp
movsl
mov
inc
push
insl
cmpl
or
adc
test
sub
cwtl
and
and
lock
dec
ficoml
sub
aad
jb
add
pop
stc
mov
push
push
aad
stos
xor
add
adc
fcom
test
push
mov
loope
cmpsl
adc
add
lock
movsl
es
adc
jle
adc
cmp
movb
mov
scas
insl
es
push
push
pop
mov
adc
push
sti
out
nop
inc
incb
or
enter
xchg
mov
pop
dec
popa
ja
pop
dec
pop
push
inc
lea
fildll
add
aaa
sbbb
lock
xchg
sub
insb
dec
push
test
dec
jp
es
fidivrl
mov
mov
nop
mov
out
andb
mov
mov
stos
out
ret
cmc
scas
add
mov
mov
ljmp
and
add
dec
mov
mov
lret
popf
stos
stc
sbb
push
inc
or
jecxz
pop
add
and
push
flds
sub
xchg
sbb
cmp
sub
dec
rcrb
jle
loop
mov
mov
into
mov
xchg
mov
jae
sbb
roll
sbb
loop
sub
outsb
ret
shrb
xlat
aaa
xchg
loopne
mov
or
sbb
adc
push
jbe
push
lock
or
pusha
push
les
mov
jo
lods
push
cmp
sbb
xchg
push
sub
and
mov
jbe
mov
jle
aam
adc
lahf
push
das
out
cmp
xchg
call
scas
mov
pop
test
and
loop
dec
lods
pop
iret
cmp
sbb
and
mov
mov
fbstp
cmp
movsb
push
cmp
sbb
daa
into
mov
mov
jmp
push
push
loop
adcb
inc
dec
ss
stc
pop
xor
mov
iret
xchg
xchg
testb
lcall
ss
jne
jae
xor
push
repz
addr16
cmpsb
rcrl
or
or
rcl
cmpsl
jae
mov
loope
mov
mov
fistps
cmp
push
inc
cltd
loopne
jae
mov
mov
push
sub
ljmp
jnp
mov
out
lret
adc
inc
lret
mov
pusha
sbb
shlb
push
fildll
or
adc
pop
fistpll
cmovns
sub
clc
pop
mov
xchg
ficompl
les
mov
mov
and
loopne
or
mov
or
lretw
or
ret
push
sbb
cmp
sub
mov
imul
fsubr
or
lods
cli
outsb
mov
fcomps
ja
out
pop
popa
mov
pop
mov
fisttpll
stc
mov
mov
movsb
cmpsb
dec
imul
jl
aad
jae
mov
or
pop
popa
shl
mov
dec
sbb
inc
mov
add
xchg
xchg
jg
cli
rclb
aad
daa
or
adc
mov
ds
jb
leave
dec
pop
or
int
xchg
mov
mov
push
pop
and
xor
jae
pop
js
jge
data16
out
in
in
mov
xor
icebp
add
push
test
sti
out
push
push
push
in
push
jb
sti
lods
mov
ds
pusha
jno
scas
test
in
sub
movb
and
mov
xchg
repnz
jb
cld
aad
out
rorb
mov
outsb
stos
es
jl
dec
ljmp
push
mov
mov
subl
outsl
mov
mov
mov
xchg
jl
insb
push
dec
es
adc
insl
adc
je
aam
dec
adc
nop
std
adc
cmpsb
dec
call
les
inc
add
movsl
sbb
cltd
adc
loop
movsl
movsl
pusha
js
repnz
test
xlat
cld
jbe,pn
jg
hlt
mov
push
in
push
lcall
sub
movsb
jns
jb
inc
jle
adc
pop
ret
xchg
xlat
imul
mov
jne
insb
add
cs
mov
inc
adc
sti
push
vpmovsxwq
mov
cld
sbb
in
jno
sub
mov
les
call
xor
or
lcall
stos
jmp
cmp
pop
lcall
fs
and
inc
pusha
sahf
movsb
sbb
cmp
mov
cmp
arpl
pop
adc
mov
jl
das
add
out
je
lret
and
mov
jb
xor
jae
jbe
inc
fwait
pusha
lock
mov
leave
dec
sti
jne
mov
sbb
pop
lret
scas
hlt
rcll
push
push
sahf
xchg
or
popf
or
fs
popf
pop
movsb
adc
mov
bound
mov
push
bnd
fmull
ljmp
movsb
popf
pop
lret
adc
int3
push
dec
lds
lods
rorb
pop
outsl
in
xchg
xchg
pop
jp
sub
and
dec
in
test
enter
adc
push
mov
repnz
movsb
je
push
cmp
cmp
fistl
imul
ljmp
rol
movsb
mov
jb
pop
rcrl
push
mov
ja
je
jl
push
push
les
mov
dec
and
cmp
mov
sahf
mov
lcall
jecxz
dec
scas
push
sbb
sub
cmc
xchg
mov
push
mov
and
into
push
in
les
dec
jmp
shr
imul
add
xchg
lret
push
mov
xchg
push
icebp
mov
or
test
packuswb
sub
jp
pop
or
adc
xor
cmp
flds
loop
movsb
mov
dec
sbb
cld
pop
jp
mov
sub
xchg
rcll
rcll
cmp
stos
mov
ljmp
xor
cmp
or
js
push
pop
xchg
push
mov
cmp
add
sahf
add
scas
pop
sub
jns
movsb
sahf
stos
and
sub
je
mov
pop
popf
aad
jecxz
xor
pop
imul
lea
inc
gs
test
cli
lock
jo
hlt
bound
std
inc
xchg
mov
xchg
lret
je
scas
outsl
stos
jl
aad
das
inc
lea
xchg
jo
xchg
ret
sbbb
cmp
subb
stos
inc
add
mov
scas
popl
lods
scas
fisubl
cmpsl
sbb
arpl
dec
cs
cmp
sub
push
fistpll
and
in
mov
dec
pop
scas
sbb
sub
and
xor
add
mov
vpmacsdqh
mov
pop
scas
rorb
imul
adc
or
enter
fisubrl
lods
inc
lea
icebp
cmpsl
inc
test
mov
not
mov
iret
mov
adc
ret
stos
test
xchg
insl
inc
jp
adc
sub
cmp
and
cli
inc
lds
outsb
cmpsb
mov
xchg
cmpsl
jnp
adc
pop
out
movb
mov
iret
cmpsb
push
loope
add
sbb
imul
cmpsl
int3
movsl
pusha
es
jnp
add
jo
sbb
iret
sahf
insl
ja
imul
loope
cmpsl
popf
andl
mov
mov
mov
fwait
div
cmp
push
inc
cs
mov
movb
pop
or
dec
scas
lcall
pop
push
fs
test
dec
mov
cmp
mov
fnstcw
clc
pop
push
test
jle
aam
xchg
icebp
sbb
clc
movsb
xchg
push
fadds
mov
cmpsl
repz
inc
adc
dec
mov
outsl
ds
mov
lods
push
dec
out
push
stc
jo
psadbw
push
push
jo
dec
cmp
adcl
xchg
cmpsl
lret
cmp
mov
outsl
pop
mov
cltd
fcmovu
or
lods
jbe
mov
popa
push
and
adc
push
xor
in
jge
popf
into
dec
xchg
roll
fldenv
and
das
sahf
mov
push
std
jno
hlt
or
enter
xor
or
push
bound
clc
push
mov
push
rclb
mov
movsb
out
cmpsl
xlat
mov
rcrl
decl
std
into
dec
pop
mov
push
adc
ljmp
and
pop
pop
sbb
xchg
adc
xchg
cmpsb
cmp
jl
rcl
mov
cmp
xor
mov
aam
sub
sti
stos
or
loope
test
pop
outsb
xchg
jge
xorl
in
xorb
cwtl
aas
out
hlt
in
aad
lahf
test
ficoml
adc
or
ret
sahf
out
xchg
pop
imul
call
dec
mov
cmc
pop
push
fdivrp
mov
les
fadd
and
jnp
add
xchg
js
in
mov
gs
mov
mov
cmp
jmp
into
xchg
jbe
pop
adc
pop
xchg
ss
or
inc
pushl
add
sbb
ljmp
insl
cmp
inc
adcb
imul
cmpsb
cs
mov
mov
cmp
rclb
out
inc
jge
decl
fisubrs
xchg
test
shrb
dec
xor
ja
sbb
mov
fldt
push
add
dec
xorl
mov
xor
sar
je
mov
pop
mov
lahf
mov
lret
inc
sbb
hlt
jne
xor
push
popa
mov
push
pop
mov
fsts
pop
divb
test
sbb
mov
cmpsl
call
jmp
pop
push
jns
adc
ret
dec
or
push
jmp
aam
adc
pop
sbb
cmp
in
je
mov
or
jmp
pop
mov
adc
xor
add
aad
es
jno
je
stos
rorl
notb
lea
dec
in
mov
loope
sarl
stos
mov
fldcw
test
dec
cmpsb
pop
popa
sub
shrb
fnsave
gs
mov
imul
scas
adc
jmp
cli
xor
or
clc
mov
int3
xchg
xchg
jmp
push
dec
adc
mov
cmp
inc
mov
lea
enter
es
loop
dec
push
xlat
faddl
mov
ds
jp
dec
cld
mov
or
inc
dec
ss
mov
pushl
cmp
jmp
nop
popa
and
loope
sub
dec
mov
adc
testl
js
cli
jge
adc
dec
add
int3
sbb
jnp
cld
and
fisttps
shl
or
or
out
jo
adc
push
cltd
dec
cmp
enter
xchg
xor
negb
aaa
jae
test
sub
jne
mov
xchg
jg
pop
inc
xlat
sbb
bound
jmp
dec
mov
and
fbstp
ds
add
push
pop
jae
jns
and
movsl
mov
pop
loopne
mov
push
push
out
jne,pt
or
jmp
lahf
enter
test
add
mov
js
sbb
jge
mov
lds
adc
xchg
or
shll
addr16
and
cltd
hlt
andb
ja
in
lds
jl
sub
subl
add
mov
ret
jp
push
xchg
add
out
in
cmc
std
hlt
popf
sub
xor
movsl
ja
and
xchg
fmulp
jge
aam
pop
pop
push
cltd
outsl
adc
lea
decl
into
movsl
mov
dec
xchg
xchg
enter
inc
sahf
inc
xor
xor
sarb
inc
inc
push
xor
dec
add
mov
std
push
add
mov
pop
xor
shl
mov
lcall
lds
jno
or
sub
aaa
pop
dec
lret
cltd
inc
mov
inc
mov
add
pop
pop
mov
mov
xlat
dec
arpl
in
adc
dec
or
divl
fisttpl
pop
int3
pop
jge
add
xor
xlat
icebp
jne
pop
dec
scas
add
add
pop
mov
gs
mov
mov
in
dec
popa
lds
sbb
cld
xchg
or
cmp
popa
pop
xchg
sbb
push
cmp
test
scas
in
mov
jno
mov
mov
ljmp
sub
js
daa
cmpsl
sbb
adc
cmp
cld
inc
jmp
das
push
daa
dec
je
cmp
dec
sbb
cs
clc
sbb
xchg
notb
scas
aas
popa
cmp
in
mov
dec
sbb
sbb
insl
dec
aam
pop
test
push
inc
js
daa
cmp
loope
mov
mov
cmp
or
mov
adc
dec
hlt
mov
fs
mov
mov
lcall
jne
jo
sub
cmpsb
push
and
push
inc
int
add
xchg
stc
mov
pop
fst
or
test
mov
scas
pop
xlat
test
xchg
or
cltd
cmp
frstor
sbb
in
pushf
inc
les
xlat
pop
add
pxor
out
xchg
adc
inc
mov
out
fidivs
sub
mov
pop
pop
stos
nop
outsb
jecxz
cmpsb
in
aad
ss
dec
pop
push
add
fsts
mov
iret
fidivrl
std
inc
push
test
mov
mov
cmp
pop
mov
jnp
mov
add
or
loope
push
mov
inc
jmp
cld
cmpsb
sub
pop
sub
cmpsl
lcall
lret
mov
pop
gs
popf
add
pop
stc
pop
imul
rcrb
xorl
bound
sbb
jle,pn
adc
rcll
pop
leave
shrb
js
ss
or
dec
or
hlt
fcomi
push
inc
xchg
fwait
out
mov
pop
mov
call
mul
xchg
dec
mov
andl
in
data16
jg
lods
sub
imul
out
sbb
int
jge
mov
dec
stos
sbb
add
inc
jp
mov
bound
fnstenv
add
mov
test
mov
ja
dec
or
aaa
fsubl
pop
movsb
cmp
les
add
in
inc
dec
fildl
cmp
fadds
sbb
xchg
xchg
mov
je
ljmp
nopl
jbe
push
leave
cmpsl
ret
inc
dec
pop
adc
and
pop
xor
sub
xor
push
cmp
push
mov
lds
ss
mov
dec
out
sbb
push
pop
imul
int3
jb
into
xlat
popf
loopne
addr16
aaa
add
inc
mov
push
lods
jmp
imul
sbb
aaa
dec
and
ja
mov
and
dec
test
mov
cli
mov
add
lea
push
pushf
pop
dec
ljmp
lret
mov
cmpsl
adc
popa
mov
mov
dec
cltd
mov
and
mov
push
std
adc
aad
call
out
outsl
std
das
mov
lea
cmp
addr16
mov
jge
pusha
mov
jmp
fdivl
or
cli
sub
scas
in
mov
jmp
sub
fidivrl
xor
dec
popf
inc
sub
dec
insl
je
inc
or
xchg
mov
cmp
inc
js
mov
in
jecxz
lea
and
mov
sbb
dec
xor
add
pop
sub
sbb
mov
stos
cmp
mov
ror
xor
testl
mov
sub
es
outsl
nop
mov
dec
sub
fwait
outsb
cmp
imul
mov
cmp
pop
mov
dec
hlt
lods
popf
int3
sarl
inc
lret
insl
scas
add
stos
xchg
mov
jno
js
lea
test
inc
repz
ja
xor
enter
dec
dec
dec
popa
cli
in
ret
xchg
dec
push
push
adc
bswap
adc
xor
hlt
enter
call
pop
mov
inc
or
comiss
or
sub
adc
dec
dec
mov
and
sub
adc
js
jo
or
outsl
mov
push
dec
xor
mov
insl
mov
fmuls
dec
into
mov
dec
jl
mov
pop
add
mov
add
out
push
rclb
xor
jmp
rcl
mov
xor
pop
daa
and
out
mov
jecxz
mov
xor
or
pop
or
push
sbb
lret
dec
dec
std
sub
jne
lcall
mov
adc
ret
fcomp
insb
add
jno
inc
stc
rcl
xor
mov
scas
xchg
mov
cmpsl
gs
inc
ss
cld
or
push
fs
insl
cwtl
in
stc
xchg
push
and
ror
add
aad
sarb
mov
fsubrs
gs
daa
jge
lret
cld
ss
daa
or
ja
ja
int
or
xchg
adc
cltd
pop
sub
push
jo
add
cmp
repnz
mov
arpl
xchg
sub
mov
lock
ret
popf
and
test
cmp
and
in
adc
inc
xchg
popfw
lcall
sbb
test
pop
dec
mov
mov
pop
mov
sub
adc
xchg
jp
sbb
cld
pop
aam
ss
jecxz
enter
daa
pop
cmp
dec
sbb
dec
or
xchg
lock
dec
push
xor
xor
inc
jo
sub
leave
xchg
ja,pn
adc
add
pop
ja
adc
out
xchg
and
xor
mov
sbb
fs
mov
andl
dec
push
das
sbb
and
mov
mov
cmp
ds
rol
test
test
in
adc
mov
adc
push
fidivl
fnsave
mov
jle
out
dec
test
ret
mov
in
jge
or
lcall
mov
clc
iret
int
sarl
xchg
add
daa
cltd
pop
enter
daa
sahf
cmpsl
or
sarb
mov
lea
fnsave
mov
cmp
and
daa
mov
cmpsl
cwtl
scas
push
xchg
add
or
test
xor
sub
pop
popa
ss
xor
stos
sbb
scas
xor
ss
jbe
dec
xor
in
push
mov
rcll
pusha
shrl
iret
add
fnsave
mov
dec
push
ss
inc
mov
jmp
ds
add
hlt
shrl
bound
push
or
push
xchg
cmp
push
shlb
repz
xchg
cmp
xor
pop
or
and
dec
sti
or
mov
adc
sbb
adc
addr16
es
cmp
push
sub
jns
not
cmp
movq
dec
mov
sub
sbbb
xor
lahf
dec
cwtl
pop
mov
iret
fidivrl
mov
add
daa
sahf
dec
cmp
iret
enter
cltd
test
push
push
test
cmp
loop
or
mov
shll
mov
cmp
inc
insl
mov
es
push
mov
comiss
mov
mov
xchg
push
jno
enter
sarb
dec
sub
add
dec
pop
in
inc
lret
fcmovbe
shrb
adc
inc
inc
shrl
pushf
repz
jb
push
push
adc
sbb
xor
stc
insb
inc
cmp
popa
popf
pop
call
cwtl
rcrb
push
sub
jle
cmc
int
xchg
fstpl
pop
test
hlt
inc
or
add
jle
inc
pusha
xchg
repnz
cli
cmp
mov
dec
test
push
jg
add
xchg
dec
inc
mov
add
mov
lret
xchg
cmp
cld
lldt
xchg
jmp
hlt
mov
jmp
push
inc
clc
cli
mov
aad
mov
ljmp
cwtl
sub
in
inc
frstor
mov
inc
int
lods
jbe
ss
mov
cmp
cmp
mov
mov
neg
sub
lds
clc
loopne
imul
adc
shrl
mov
test
call
push
ret
inc
pop
daa
inc
outsb
cmp
lcall
or
mov
out
fwait
jns
ret
jp
fadd
mov
pop
jp,pn
cltd
lret
insl
and
cmp
mov
adcl
cmpsb
xchg
hlt
loop
cltd
or
jl
push
clc
xchg
dec
mov
div
fwait
orb
jne
mov
inc
xchg
jge
mov
mov
insb
cmp
pushf
je
dec
sbb
add
test
inc
push
lret
movsl
movsb
sub
push
jmp
add
out
es
mov
jmp
and
jle
sbb
sahf
mov
pushf
mov
xchg
xor
fimuls
jg
dec
loopne
icebp
xchg
mov
dec
stos
mov
rcr
inc
push
stos
cwtl
scas
aas
out
sub
mov
cmpsb
xchg
fs
ds
xor
aaa
jle
jne
sbb
jae
shrb
sub
sbb
push
mov
cltd
ret
gs
adc
pusha
or
out
mov
lahf
xor
inc
fs
sbb
in
mov
adc
pop
mov
ds
dec
jl
repnz
insl
into
loop
inc
mov
push
push
pop
iret
or
xor
das
subb
test
addr16
inc
add
push
mov
cmpsb
dec
je
mov
in
jp
mov
inc
insb
cmpb
popa
cs
clc
push
sti
mov
lods
pushf
in
aad
lods
lret
stos
xchg
rcrb
add
cmp
push
or
js
jo
inc
adc
push
inc
and
lods
and
mov
dec
xchg
cmp
cld
dec
int3
xchg
mov
das
pushf
push
adc
bound
stos
pop
jg
adc
mov
jmp
call
call
das
xchg
dec
sbb
sbb
cld
rcr
cmp
aam
ss
xor
xchg
mov
jle
arpl
outsb
mov
xchg
jnp
pop
sbb
xchg
movsb
ror
mov
shrl
mov
movsb
ret
dec
mov
pop
xor
fnstenv
iret
lods
in
cmc
xchg
xor
cwtl
call
xchg
sbb
lock
ljmp
mov
mov
lds
inc
dec
scas
adc
shll
mov
and
cltd
ror
xchg
jae
call
sbb
jecxz
fidivl
das
push
mov
adc
sbb
push
inc
xor
ss
ljmp
ljmp
add
lcall
pop
fnstcw
popf
add
sub
cmp
push
sbb
lds
out
pop
push
andb
add
stos
cmp
sub
fwait
add
sub
enter
xor
lods
call
mov
cltd
jae
sbbb
mov
sub
ja
push
ss
aam
mov
fadds
aad
cmpsb
lea
lsl
pushf
aad
jecxz
fnsave
stc
cmpsb
adc
push
pop
jl
stc
out
xor
and
dec
or
jnp
pusha
stc
std
or
mov
xchg
and
scas
leave
mov
cltd
inc
dec
or
imul
scas
fdivr
clc
adc
xor
push
pop
ret
roll
mov
sbb
xchg
test
lret
add
sbb
scas
mov
loope
xor
stos
add
and
jnp
jg
inc
bound
ret
repz
js
fmull
xlat
scas
push
gs
cbtw
mov
test
dec
mov
jns
pop
mov
outsl
scas
xchg
mov
mov
cwtl
das
pop
jg
out
mov
push
fs
mov
pushf
mov
sub
outsl
ss
mov
aad
pusha
sbb
jnp
jmp
mov
in
sbb
xlat
mov
mov
faddl
pop
or
aam
stos
mov
add
rorb
jge
insb
push
pop
jmp
lods
jne
sub
or
aam
fsubrl
jnp
imul
adc
adc
or
repnz
ror
pop
xchg
dec
push
xchg
mov
int3
loope
insb
lahf
push
ljmp
das
jmp
push
insl
adc
cltd
fprem1
jbe
adc
xor
sub
cmp
cld
ficomps
inc
rcr
rorb
lea
jmp
fwait
leave
mov
les
loopne
mov
pop
js
and
ljmp
fstps
xorb
lret
cmp
test
outsb
call
enter
stc
cli
sysenter
repz
jecxz
push
mov
push
test
rcr
mov
or
test
xor
jb
popa
push
sahf
mov
lret
mov
pusha
inc
lcall
aam
adc
or
icebp
fcmovnb
pop
fwait
and
mov
test
jle
arpl
enter
jns
repz
sar
cmp
xchg
bound
adc
loopne
inc
and
push
inc
cmp
icebp
dec
cmpsl
inc
pop
jmp
xchg
fwait
pop
mov
faddl
iret
out
fsts
add
sub
pop
adc
call
popf
cmc
pop
push
pop
mov
les
jns
mov
mov
mov
jmp
daa
mov
fidivrl
mov
dec
popf
push
sbb
adc
xor
and
stc
nop
rcrl
xor
int
sbb
movsb
imul
sub
mov
dec
xor
insl
lahf
or
ja
push
testb
mov
xchg
mov
cmp
pop
xor
xor
movsl
idivl
sub
fiaddl
out
arpl
pop
jle
test
lret
pop
aam
cmp
rcr
pusha
out
inc
icebp
sub
cli
inc
shr
fwait
loop
lahf
sbb
add
imul
fldcw
or
enter
pop
add
dec
aam
pushf
and
inc
push
jmp
or
sti
xchg
sbb
cltd
setle
pop
idivb
loope
mov
mov
jne
xbegin
sub
sub
xchg
sub
xlat
fwait
xchg
sbb
orb
push
xor
lret
ret
dec
mov
cmpsl
jbe
sub
fxtract
adc
and
imul
ds
inc
mov
pusha
inc
loopne
add
or
pop
jo,pn
mov
push
and
loope
adc
inc
inc
xchg
sbb
into
and
push
xchg
sbb
scas
jae
cmc
xchg
roll
test
aaa
push
inc
xchg
loop
fs
push
addr16
sbb
xor
repnz
popa
out
mov
sub
cwtl
sub
jl
fisttps
andb
stos
hlt
cmp
stos
push
out
mov
lock
into
iret
ja
push
xchg
xlat
lock
mov
outsl
dec
flds
jmp
mov
fdivl
in
xchg
sbb
push
flds
and
pushf
xchg
in
sahf
inc
movsl
int
push
test
push
aaa
fwait
push
ja
shll
insl
or
pop
sbb
xor
jnp
jecxz
xor
xchg
adc
cmpsl
mov
jb
sub
push
cmp
jge
push
sahf
jp
add
aad
in
or
add
imul
js
pop
xchg
jnp
rcrb
mov
cmp
shrb
or
loop
mov
in
xchg
cmp
scas
out
stos
lahf
push
sub
ss
or
mov
add
or
cltd
mov
pop
or
fldcw
jo
pop
and
pop
inc
dec
dec
imul
sub
ret
pop
ds
inc
inc
jo
out
xchg
jle
push
loopne
mov
adc
ret
stc
sbb
cmp
jnp
pushf
lock
js
outsl
sub
sarl
xchg
dec
cli
mov
adc
push
stc
mov
sub
movsl
add
les
add
aaa
scas
mov
mov
test
arpl
xchg
popf
sub
sub
jg
fistpl
int3
fists
loope
xchg
stos
dec
movsl
test
dec
mov
imul
mov
xor
cwtl
ret
push
pusha
js
aaa
es
jmp
ds
jge
sub
iret
push
out
pop
es
popa
or
mov
aas
es
jb
mov
pop
mov
jns
ret
outsl
filds
mov
jmp
xor
fs
fiaddl
cmp
shrl
or
in
popf
push
jl
in
outsl
cli
cmpsb
inc
push
repnz
push
sbb
add
mov
mov
std
inc
jbe
jnp
inc
das
or
mov
inc
adc
dec
mov
test
cmp
les
movsb
pop
xchg
xor
in
jge
mov
dec
popf
sbb
mov
xchg
dec
add
push
mov
sub
sarl
jb
ds
mov
pop
stc
inc
xchg
loop
jo
push
adc
mov
xor
and
push
mov
aaa
mov
xchg
addr16
push
in
lahf
jb
es
ret
fsubr
xchg
out
sub
aam
cltd
xor
pop
andl
adc
gs
inc
push
jle
insb
je
fsubl
or
mov
fsubrs
jae
cli
xchg
jecxz
dec
adc
lahf
je
mov
jb
cmpsb
lcall
push
in
jo
test
pop
in
mov
fnstcw
sbbb
scas
aaa
out
mov
jb
fnstcw
lods
push
sbb
xor
push
test
ds
inc
fdivrs
push
mov
clc
loope
cs
xor
jp
and
in
les
mov
lds
pusha
daa
arpl
sbb
iret
out
mov
inc
cmp
and
adc
in
in
xchg
aam
rorb
stos
dec
dec
outsb
out
pusha
jg
mov
pop
ror
jge
pop
xchg
xchg
xlat
leave
jbe
in
xchg
pop
test
push
stc
push
mov
dec
pop
popf
fists
mov
nop
cwtl
leave
sub
cmp
daa
dec
dec
es
cs
les
xchg
add
sbb
jno
pop
sahf
lret
pusha
clc
adc
aad
sbb
lock
sub
rcll
pop
mov
adc
xchg
xor
push
pop
cli
sub
das
sbb
mov
mov
or
xchg
sbb
mov
fistps
jecxz,pn
movsl
xor
or
xchg
adc
mov
sbb
cwtl
add
repz
or
lods
cmp
push
cmp
addl
pop
inc
xchg
leave
lret
out
ja
inc
imul
cmc
cmpsl
mov
addr16
pop
or
cmp
outsl
or
popf
loopne
jmp
adc
mov
sbb
loop
pop
sub
outsb
shll
cltd
pop
cmp
stos
mov
popa
dec
enter
out
imul
das
loopne
or
xor
push
cmpsb
lods
incb
cmpsl
sub
jg
aad
dec
and
cmpsb
xor
push
sbb
cmpsb
or
jecxz
mov
aas
adc
xchg
pop
sbb
inc
inc
rcll
sbb
jnp
cmpb
outsb
sub
mov
in
pusha
cwtl
jae
lods
push
or
stc
cmpsl
mov
push
xchg
jecxz
sbb
movsb
jp
jp
mov
scas
lret
or
imull
pusha
dec
stc
stos
sti
fidivl
mov
pusha
pop
push
jnp
push
mov
sub
sub
fldcw
pop
dec
push
ja
sub
jae
push
push
sub
pushf
jp
mov
rclb
inc
cmp
stos
xor
jmp
imul
stc
rcrl
sub
inc
je
bnd
nop
inc
cmp
inc
sbb
mov
stos
sbb
jmp
adc
sub
dec
mov
insb
inc
shr
pop
mov
mov
addr16
stos
sub
xor
aas
jns
daa
push
mov
sahf
ret
sbb
pop
divb
in
repnz
lods
adc
ljmp
dec
inc
pop
xor
inc
lods
enter
in
jno
scas
jg
ljmp
cltd
mov
aaa
sti
xchg
xor
xchg
es
xchg
stc
xor
push
fstpl
pusha
xchg
pop
add
cmpsb
addr16
repnz
and
out
outsb
and
std
jmp
fucom
dec
dec
out
rclb
jl
jbe
leave
scas
push
cmpl
scas
jl
dec
add
notb
sbb
dec
outsl
mov
sarb
mov
cmc
pop
or
xchg
scas
je
dec
add
fwait
das
ja
dec
mov
dec
dec
inc
cmp
out
mov
xlat
lods
jbe
repz
lret
int
push
push
xor
addr16
ja
inc
scas
sub
dec
loopne
push
xchg
xchg
in
fimuls
pushf
mov
cmp
xchg
dec
fs
lcall
add
cmp
adc
push
and
hlt
jmp
dec
mov
and
sub
mov
lods
cmp
add
adc
pusha
iret
mov
sarl
je
shll
call
or
mov
xor
dec
fnstcw
xlat
mov
andl
mov
gs
inc
jns
and
or
mov
orl
adc
jecxz
les
mov
jnp
or
jp
popf
mov
inc
adc
push
mov
cwtl
lods
add
dec
test
push
in
jnp
mov
inc
xchg
jno
dec
sahf
les
stos
xor
add
clc
test
stos
lret
sub
or
ret
add
clc
frstor
sbb
js
pop
push
mov
loop
jo
subl
lcall
xchg
mov
sub
mov
test
icebp
add
mov
pop
mov
cmc
jp
push
or
out
not
cld
cmc
mov
lret
adc
inc
bound
stc
or
ficomps
fwait
cmp
pusha
sub
lods
cs
mov
and
in
inc
imul
add
leave
mov
xchg
xchg
insl
movsl
jge
jb
repnz
lods
das
data16
or
sbb
jo
mov
dec
xchg
mov
ret
xor
dec
std
push
jae
repnz
push
add
or
cmp
pop
les
ljmp
insb
ss
faddp
or
fdivs
test
data16
pop
sbb
stos
sarb
lock
or
pusha
or
push
insb
stc
adc
inc
or
pop
push
ja
or
roll
aam
fisubrs
sub
hlt
xchg
push
jge
scas
xor
icebp
pop
mov
les
es
lds
add
sub
pop
imul
mull
stos
insl
mov
lods
nop
add
pop
aad
cmpsl
xor
out
jno
adc
mov
pop
shll
cmp
pop
lcall
lret
push
push
jmp
test
outsb
sbb
cli
subl
inc
movsl
pop
cmp
jnp
or
jp
popf
fsubr
popa
fsts
sub
lds
push
sub
push
lcall
faddp
mov
cs
enter
iret
pop
or
and
pop
push
or
aad
push
pop
mov
push
outsb
xchg
or
out
mov
inc
icebp
jbe
lock
mov
jp
cwtl
adc
push
stos
xchg
stos
sbb
rorl
in
aad
push
jae
fnstcw
ret
mov
mov
out
ret
negb
jg
lret
jg
mov
outsb
imul
std
lret
and
ja
call
mov
sub
mov
gs
dec
add
addr16
repnz
cwtl
nop
and
mov
add
push
iret
push
cmp
mov
mov
add
adc
das
and
std
in
jge
les
cltd
mov
sbb
or
jl
movsb
inc
xchg
pop
aam
cld
imul
fsubl
lahf
std
rcll
xchg
adc
xchg
insl
int
mov
outsb
out
or
and
test
mov
fs
push
fldln2
clc
mov
iret
ret
sbb
cmp
inc
mov
xchg
mov
gs
cmp
sbb
cmpsl
out
mov
dec
enter
call
add
push
out
and
icebp
pop
xchg
mov
push
shl
lea
adc
mov
and
pop
cli
loopne
sbb
imul
mov
ss
call
lret
and
cmpsb
jnp
cmp
in
mov
xlat
sbb
mov
shl
lahf
xor
shll
and
rclb
add
dec
lcall
mov
lcall
int3
loop
lret
mov
xor
aas
inc
aas
sarl
mov
popf
xchg
je
fnsave
dec
xchg
add
mov
test
push
movsb
fcompl
ret
and
adc
out
xchg
imul
add
fsubrs
sbb
inc
arpl
addr16
mov
adc
aaa
notl
and
inc
pusha
sub
jmp
int
subb
sub
jp
fld
insb
mov
icebp
jno
repnz
mov
pop
jmp
sbb
pop
mov
jmp
cmpl
decl
into
xchg
jbe
inc
andl
icebp
das
mov
push
sti
int
mov
push
mov
inc
cwtl
inc
divb
cwtl
insl
add
aas
or
js
ja
inc
fistpll
xor
adc
jle
push
fmuls
and
sbb
mov
stc
dec
jg
cmpb
dec
mov
fiaddl
dec
loopne
mov
and
in
bound
pop
inc
fdivrl
movsb
sbb
lods
pop
and
mov
shll
ja
les
cmp
cmc
jae
dec
mov
sbb
xor
cmp
pop
sub
or
and
mov
jmp
lret
sbb
push
daa
sub
lcall
inc
cld
out
mov
mov
mov
inc
xchg
loop
lea
sarl
xor
fisttpl
xor
mov
stos
xchg
xchg
pop
and
mov
pop
shrl
adcl
mov
jecxz
mov
add
sti
les
xadd
mov
sbb
dec
sahf
addb
pop
jp
xor
movsl
and
dec
scas
sti
stos
cmp
iret
dec
add
out
movsl
push
sub
ret
jbe
sbb
xor
or
mov
out
jae
int3
cld
aam
pop
fidivrl
add
or
jl
jge
fsubl
or
or
fcmovnb
adc
xor
or
std
mov
or
inc
stos
mov
cs
fstl
xlat
cld
fldt
mov
inc
ss
dec
leave
cmp
int3
and
std
add
mov
not
lods
pop
push
ss
and
jmp
int3
sbb
int3
popf
dec
mov
ljmp
les
xchg
sbb
lcall
scas
in
fcmovnb
jnp
leave
sub
xchg
dec
sbb
movsb
inc
lcall
jmp
inc
mov
test
aaa
cmp
push
rorl
or
inc
stos
in
sub
push
cmp
lods
addr16
sbb
cmp
mov
in
or
repz
mov
fcom
mov
imul
adc
inc
mov
iret
adc
cmpl
ljmp
push
or
pushf
int
js
inc
out
jns
mov
sub
jmp
xchg
fdivrl
sub
mov
cwtl
ja
rolb
inc
pop
sub
je
stos
fcomip
into
std
cmc
ficompl
lea
mov
mov
dec
mov
xchg
jle
je
xchg
and
outsl
adcb
in
test
lods
xor
sahf
jns
mov
repnz
arpl
stos
pop
pop
movsl
iret
ret
sbb
or
xchg
xchg
pop
dec
push
imul
call
add
sub
inc
fimull
loope
xor
push
mov
repnz
popa
inc
repnz
lea
popa
sbb
in
jnp
and
and
test
sbb
cld
in
jg
cmp
jle
pop
insl
xchg
add
mov
loope
scas
dec
test
lcall
into
mov
push
mov
out
sub
fbstp
push
mov
shll
adc
push
cmpl
dec
mov
pop
loop
pop
add
loop
xchg
inc
jp
test
lds
idiv
inc
daa
call
mov
dec
xchg
sbbl
shl
sub
push
cltd
inc
inc
aam
jb
lods
xchg
pmulhuw
or
shlb
lret
rolb
aad
sbb
sbb
dec
and
leave
mov
jg
mov
loop
push
or
mov
imul
test
sbb
jae
shrb
in
push
jae
ret
inc
mov
sub
mov
cmpl
repz
arpl
xchg
jecxz
subl
clc
mov
and
mov
inc
test
scas
mov
xor
lcall
jbe
test
lods
notl
sahf
loope
and
dec
pop
ss
stos
xor
lea
add
pop
jbe
pop
les
pop
leave
mov
pop
lret
aam
aaa
out
int
jge
xor
ds
mov
dec
jmp
fwait
adc
shlb
imul
adc
rcrl
xor
mov
mov
pop
popf
movsl
inc
int3
fs
int
mov
cmp
rcll
mov
and
hlt
pop
cmp
add
in
in
cmp
cwtl
int3
psubsb
aaa
rolb
adc
loop
lahf
ret
in
cmp
rorl
fildll
jle
fsubl
mov
inc
fsincos
and
roll
stos
or
adc
fs
and
std
and
hlt
sahf
push
xchg
movsb
sub
hlt
dec
add
ret
dec
mov
cmp
cwtl
sbb
stos
stos
mov
inc
stc
addl
popf
into
push
jo
dec
clc
jae
popa
nop
mov
pop
imul
insl
cmpl
ret
mov
hlt
sub
xor
pusha
lods
insl
aam
mov
ret
aas
pop
sbb
fwait
pop
fnsave
fwait
xor
gs
popf
jns
jb
and
mov
mulb
add
fisttpl
inc
cmp
rcll
fistl
xor
push
xchg
jle
fdivrs
int3
std
mov
xchg
push
jnp
jae
xchg
popf
fcom
js
push
test
enter
xchg
inc
xchg
dec
sbb
mov
xchg
jnp
push
dec
pop
daa
vpsadbw
out
ss
sub
xchg
iret
iret
add
push
repz
inc
outsl
lret
jle
dec
repz
in
cmc
filds
out
sub
push
iret
arpl
in
mov
out
ljmp
aad
vcvtsi2ssl
and
mov
xchg
push
lock
sbb
shl
scas
stos
jo
in
mov
mov
test
mov
xchg
push
dec
addr16
dec
fcoml
insl
mov
and
dec
cmp
ret
outsb
xchg
out
and
xchg
pop
xor
outsl
jmp
das
stos
pop
adc
xchg
sub
pop
lods
rcll
imulb
adc
lods
cwtl
pop
imul
sbbb
jne
mov
xor
push
pop
in
jmp
ret
sbb
jae
mov
ror
cmp
aam
ja
test
mov
or
and
div
mov
lcall
push
mov
into
not
cmpsb
or
xchg
xchg
push
aad
sti
rcrb
xchg
pusha
jo
in
cs
mov
stos
cmp
lea
lahf
fnsave
scas
push
movsl
add
loop
jmp
sub
mov
nop
outsl
or
mov
push
and
test
mov
inc
jl
adc
mov
mov
aaa
stc
push
adc
fucomi
ret
xor
xchg
pop
mov
sbb
test
jg
inc
fidivrs
outsb
sbb
loope
enter
xorl
out
int
dec
dec
pop
and
int
testb
sub
aam
xor
push
jmp
lods
mov
nop
shl
shl
dec
xor
cmp
or
xchg
mov
lock
xorb
mov
je
jmp
in
imull
ss
je
pop
mov
call
cltd
ficomps
xlat
js
mov
in
sbb
inc
fwait
or
pop
test
mov
inc
lahf
add
xchg
adc
inc
lahf
stos
in
inc
enter
movsb
sub
out
dec
and
mov
aaa
adc
test
scas
aad
jge
das
inc
push
pusha
add
add
outsb
sbb
iret
pop
movsb
xor
inc
pop
xchg
jno
test
push
mov
push
rclb
test
orl
enter
mov
pop
jbe
ret
ret
and
push
cmpl
clc
pop
dec
push
int
and
pop
xchg
popa
nop
and
inc
loope
pushf
lods
jbe
jg
dec
outsb
lock
dec
pushl
fucom
dec
pop
mov
sbbb
dec
in
inc
jbe
pop
das
add
push
pop
gs
dec
and
jb
add
fcoms
sti
fwait
in
rcr
push
rcll
sbb
aad
push
aas
fsub
xor
lret
jo
add
mov
pushl
enter
ret
scas
loop
add
add
and
dec
inc
es
jl
inc
mov
test
push
push
cwtl
rcrl
add
lods
push
mov
lock
aam
pushf
mov
fimuls
in
push
inc
cmp
aam
mov
pop
mov
push
aaa
jecxz
jl
inc
stc
insb
cmp
ljmp
dec
mov
cli
mov
out
lcall
out
nop
sbb
pop
faddl
inc
stos
ret
mov
cmp
in
pop
in
push
sbb
movsb
int
pop
je
fisttpl
lea
cmc
xchg
and
outsl
jge
out
push
xlat
gs
dec
mov
cmpsb
and
push
xorl
mov
cltd
loope
es
or
std
inc
pop
sahf
dec
and
mov
sub
adc
sarl
and
cmp
push
inc
bound
loope
xor
data16
fucom
loop
popf
mov
mov
push
xchg
ds
xchg
push
pop
adc
mov
cmpsl
mov
add
ja
mov
push
fwait
jp
icebp
stos
ficomps
test
mov
xchg
shll
rcll
fwait
mov
imul
movsb
jne
mov
jno
in
icebp
jnp
insl
mov
les
mov
mov
loopne
ljmp
mov
cmp
cmc
lret
sbb
imulb
rorb
stos
xchg
xchg
test
nop
mov
cmp
insl
sbbb
jl
in
lahf
pusha
and
std
mov
test
push
pop
nop
lahf
out
das
insl
sti
sub
imul
ss
rorl
and
mov
and
cwtl
cld
adc
and
push
xchg
stos
loop
daa
cmc
out
adc
sbb
mov
push
dec
mov
jge
xchg
fwait
movsb
jmp
daa
jns
add
aad
inc
mov
add
pop
push
iret
and
pop
imul
lahf
jmp
sbb
xchg
inc
es
mov
jg
add
iret
inc
xor
or
sbb
adc
imul
into
mov
mov
lret
rdpmc
mull
push
cmp
cwtl
out
out
fsubr
das
int
cli
loop
fcomip
push
push
in
or
js,pn
pop
outsl
outsb
inc
mov
ret
ljmp
mov
cwtl
dec
mov
out
fldt
les
fs
loope
outsb
repnz
in
and
stc
rolb
popa
nop
dec
pop
cmp
enter
sbb
dec
or
bound
leave
inc
dec
fidivs
lahf
mov
adc
pop
push
cmp
jg
mov
or
fsubl
clc
add
out
jbe
inc
lea
xor
pop
jmp
xchg
sbb
push
cmpsb
cmp
movsb
cwtl
stos
orb
push
in
lahf
in
sub
adc
sbb
or
popf
lret
pop
xchg
out
pop
inc
sbbb
movsb
insb
adc
jecxz
pusha
cli
in
outsl
shll
sub
call
pop
sub
dec
ja
dec
pushf
mov
mov
pop
or
jbe
mov
and
ljmp
cmpsb
loop
mov
mov
rorb
leave
mov
jg
xchg
test
fistpll
sar
insl
push
aaa
push
xchg
sbb
les
mov
decl
jae
xor
push
inc
mov
sub
icebp
sub
mov
add
xchg
lock
xchg
inc
mov
divl
xchg
fs
ds
pushf
out
mov
popa
and
jbe
push
pop
mov
repz
mov
push
test
adc
push
xchg
lret
mov
or
push
pop
mov
push
adc
mov
bound
ja
mov
lahf
push
enter
and
xor
addb
fwait
and
pushf
sahf
popf
imul
pushf
push
leave
dec
or
xor
inc
inc
popf
mov
int
gs
std
lret
push
dec
js
jne
mov
mov
xchg
cltd
push
decl
add
mov
subb
sub
push
test
scas
inc
inc
adc
pop
outsb
lret
or
aam
cli
aam
pop
scas
not
xchg
mov
adc
mov
inc
pushf
hlt
mov
fldt
jecxz
fadds
lret
jno
xchg
push
sub
add
in
idivb
adc
sub
mov
sarl
add
lods
pushf
aas
outsl
add
pop
xor
sbb
loop
test
ljmp
cmc
mov
push
adcb
push
mov
pop
adc
cmpsb
pop
dec
enter
fistpl
mov
mov
pop
test
pop
add
inc
fs
jno
xchg
cmpsl
and
test
cmc
fnstenv
cmpsb
mov
push
loopne
and
imul
mov
pop
mov
shrb
and
jge
xchg
xchg
addr16
dec
push
mov
clc
popa
dec
js
pop
nop
cmp
xchg
nop
sub
ds
ja
popa
outsl
lret
sub
sbb
imul
add
add
mov
arpl
xor
mov
out
adc
in
popl
js
fucomi
mov
sbb
xorb
xor
int3
roll
push
test
test
stos
inc
mov
arpl
sub
aaa
pop
dec
push
xchg
imul
scas
add
dec
iret
sub
add
shrb
in
movsb
imulb
lret
dec
in
cwtl
insb
popa
sbb
xchg
es
mov
movsb
dec
sbb
adc
mov
adc
in
mov
test
or
pop
pushf
rcrl
dec
insl
gs
loop
popf
lea
enter
ja
or
popa
mov
push
icebp
pop
mov
movsb
or
sbb
inc
inc
imul
in
loopne
cltd
adc
lret
mov
aad
jnp
push
out
ds
and
hlt
jnp
jl
dec
add
sti
scas
loope
mov
pop
jmp
out
das
cmp
dec
clc
out
test
adc
ret
push
push
push
push
outsl
jg
mov
insb
push
shll
jmp
out
out
push
call
xchg
stc
test
mov
mov
xor
popa
mov
mov
adc
fsubl
fidivrs
sarb
dec
enter
xor
fnstenv
out
mov
arpl
popa
xchg
or
pop
xacquire
mov
cmp
scas
xchg
mov
push
cmp
adc
mov
out
cmp
rclb
adcl
rcl
mov
negl
add
sbb
stc
fimuls
lds
mov
dec
sbb
int
push
pop
or
sub
movsb
sbb
rorb
xchg
jnp
mov
xor
push
dec
gs
adc
in
push
lret
addr16
repz
mov
dec
sahf
add
ljmp
mov
jle
sub
jl
pusha
lret
push
mov
mov
pop
dec
notl
pushf
mov
pushf
sub
push
test
mov
ljmp
repnz
push
push
aad
arpl
xchg
or
cltd
jo
int3
push
test
pusha
test
ds
inc
rclb
jmp
mov
jle
and
add
fwait
dec
inc
out
add
iret
out
jo
push
jno
daa
sbb
dec
jno
pop
xor
cli
sub
xor
int3
aam
std
mov
flds
loop
xchg
subl
int
add
repz
pop
xchg
rorl
and
in
lahf
jns
cmp
and
popa
xchg
js
or
inc
gs
das
icebp
js
push
icebp
pushf
and
push
jl
mov
repnz
testl
mov
pop
inc
mov
enter
scas
lods
mov
xor
sbb
rcrl
stc
push
mov
orb
or
arpl
ljmp
fucom
lret
repz
sahf
xor
je
int
xchg
test
in
bound
mov
cltd
mov
pop
movsb
inc
add
dec
out
xor
xchg
in
fstpt
jne
inc
scas
ret
mov
push
test
sbb
rcll
mov
testl
or
sbb
int
pop
je
je
cmc
add
and
inc
loop
jbe
or
sub
xchg
and
dec
mov
pop
orl
fwait
jg
fcomp
int
pop
mov
js
and
int3
push
dec
push
stos
and
xchg
repnz
jle
cmp
aad
mov
loopne
xor
imul
ljmp
lret
bound
cs
aas
loope
mov
out
xchg
sub
lret
jb
sbb
xor
push
dec
cmc
add
fwait
imul
stos
mov
scas
loope
test
adc
adc
stc
out
imul
sub
mov
fbld
adc
jnp
pop
inc
into
cmp
inc
and
push
mov
fcomp
adc
adc
movsl
ljmp
xor
dec
lret
pop
std
xchg
sarb
lods
push
sahf
mov
and
pop
decb
sbbb
cwtl
pop
xchg
dec
std
imul
mov
jge
or
adc
test
lock
xchg
push
mov
add
lret
jnp
cwtl
insl
mov
jmp
repz
jmp
xor
xchg
and
outsb
aas
sbb
mov
sbb
cmpsl
mov
push
mov
adc
loopne
pop
pop
aas
add
or
sub
out
xchg
xchg
movsb
cld
pop
and
jo
movsl
sub
pop
sbb
out
xor
cs
sub
dec
je
push
mov
add
push
xor
loopne
dec
mov
inc
mov
sub
lods
test
mov
xor
sbb
mov
pop
sub
shrl
loop
mov
sahf
lds
jnp
outsl
test
es
xchg
lgs
jne
das
add
or
leave
xchg
sahf
push
subl
mov
or
cli
jb
fiaddl
sub
cs
inc
lods
pusha
cmp
stc
or
push
lret
inc
lock
and
jl
stos
inc
add
rcr
add
shll
test
add
imul
pop
xchg
rcrl
rorl
mov
xchg
inc
cmpsb
fists
dec
lea
fwait
ror
inc
int
hlt
sbb
ret
mov
leave
fdivrl
stos
ret
insl
mov
cmp
and
pop
pop
pop
cltd
jge
jae
rol
int3
ljmp
fst
nop
mov
test
insb
push
or
jmp
cmp
rorl
lock
pop
cld
cs
mov
xor
daa
xchg
ds
jo
sbb
inc
mov
cmp
lret
ret
and
or
sub
and
mov
fdivs
jecxz
sbb
dec
sub
es
jmp
movsb
je
lret
adc
lea
loope
mov
fidivrl
and
cmp
cli
cmp
xchg
enter
clc
int3
cmp
cmp
dec
or
or
daa
in
adc
ljmp
push
and
push
push
adc
ljmp
or
or
fstl
jp
jne
pop
fbstp
mov
add
sbb
lods
test
mov
les
push
dec
test
or
and
rorl
aam
jbe
and
subb
insb
lods
iret
ja
pop
sahf
inc
addr16
xor
mov
jbe,pn
pop
jno
addb
mov
mov
cmp
aad
lods
daa
xor
call
stos
pop
dec
add
clc
push
mov
loop
or
loope
inc
add
subl
rorb
out
dec
stos
jge
mov
test
lods
xor
push
sbb
stc
cmpl
icebp
mov
shlb
sbb
lcall
inc
lret
outsb
nop
xor
scas
and
bound
or
mov
pop
adc
rcll
cli
cmp
not
and
cmpsl
rcrl
es
imul
xchg
fmulp
dec
ljmp
fs
push
loope
mov
or
js
xor
or
push
scas
out
inc
inc
outsb
mov
sbb
adc
mov
mov
adc
jecxz
in
pop
mov
adc
out
push
dec
imulb
int
push
scas
jl
and
cmpsl
shl
cmp
and
insb
aam
cltd
clc
push
nop
pop
cmpsl
mov
out
add
jo
pop
daa
dec
mov
lods
push
das
push
cmp
pop
imul
pop
add
jnp
push
es
cli
xchg
xchg
and
jge
jecxz
int
mov
out
jecxz
dec
jne
fisttpll
mov
mov
sbb
pop
pop
push
mov
cmp
addr16
push
xchg
xchg
mulb
hlt
fdivr
insb
fwait
jl
je
push
mov
or
or
pop
jg
leave
pop
pop
repz
shr
push
cmpsl
sub
mov
push
test
sub
sti
push
adc
subl
sti
adc
mov
or
fdivrs
and
add
jmp
icebp
mov
push
push
cld
cmp
mov
dec
aas
ficompl
xchg
flds
or
cmpsb
push
or
adc
pusha
and
sbb
add
negb
out
mov
gs
mov
je
iret
les
aaa
sbb
inc
sbb
jmp
jp
lret
jmp
xchg
xchg
dec
cmp
mov
xor
out
jle
jae
jnp
inc
mov
mov
mov
push
loop
jmp
pop
jg
out
sbb
mov
adc
bound
pop
and
push
bound
outsb
faddl
push
fcoml
push
pop
pushf
aaa
mov
testl
pusha
clc
xor
push
subl
dec
xchg
dec
mov
adc
popa
push
mov
mov
mov
shlb
loop
ret
adc
movsb
test
lods
or
inc
int
data16
popa
add
push
jecxz
mov
xor
jp
cmpsb
jge
out
mov
loopne
fwait
incl
and
jb
fs
sbb
mov
inc
pop
fs
in
dec
xchg
adc
xor
or
sbb
and
daa
xor
cmp
fiaddl
and
jo
faddl
insb
pushf
xchg
mov
fdivrl
and
cwtl
mov
pop
subl
push
mov
test
gs
cs
dec
add
pop
leave
lock
pop
aam
sahf
int
lock
stc
dec
mov
or
mov
xlat
push
cmpps
ds
pop
adc
mov
lock
ret
das
imul
addb
xchg
jmp
inc
inc
add
adc
adc
cmpsl
dec
popa
ror
iret
xchg
cmp
push
jecxz
leave
shr
movsb
clc
mov
pop
cs
sub
push
adc
xchg
fidivs
lret
cmpsl
test
jle
rclb
push
push
mov
bound
subl
sahf
add
mov
icebp
arpl
sbb
loope
push
lods
mov
mov
clc
movsb
test
mov
fwait
lcall
divb
adc
jecxz
jmp
out
test
mov
and
xorb
shrb
pop
stos
clc
fs
aas
repz
icebp
add
jmp
es
jb
cmpsb
cmpsb
faddp
adc
fnstcw
leave
add
push
ss
sbb
xor
push
xor
xchg
or
jne
adc
ja
inc
and
cli
pop
icebp
imul
test
jb
sub
cmp
lret
xor
push
orl
aam
popf
sti
dec
mov
lods
sub
in
xchg
scas
leave
mull
int3
push
repnz
popf
inc
cmc
fistps
pop
bnd
loop
addr16
jle
pop
cmp
mov
jno
push
in
mov
dec
inc
inc
jecxz
insb
sti
popa
sub
xchg
mov
jmp
mov
mov
mov
hlt
and
jl
ret
or
mov
rcrl
shll
scas
xchg
cwtl
es
sar
and
stos
bound
push
sbb
pop
jo
adc
gs
mov
jno
lea
mov
cmc
xchg
mov
and
pop
daa
sbb
pop
lods
push
andl
stc
mov
dec
mov
or
or
jo
sbb
std
repnz
inc
orb
pop
jg
and
popa
pop
outsb
sbb
arpl
sti
cmp
insl
mov
sub
cltd
dec
fucom
pushf
push
push
mov
imul
stos
ret
lods
daa
pusha
sahf
pop
cmp
sbb
mov
cmp
sbb
out
cmp
dec
cmp
hlt
scas
in
outsb
test
into
sbb
inc
loop
xchg
sbb
hlt
inc
ret
mov
push
inc
sub
mov
shll
movsb
clc
cmpsl
aam
or
xor
mov
call
sahf
sub
je
mov
dec
mov
mov
fimuls
mov
pop
mov
lahf
xchg
mov
sbb
mov
lea
notb
push
cmc
pop
xor
mov
test
push
xchg
out
lea
xor
sahf
push
mov
push
stc
inc
mov
sbb
adcl
xlat
scas
pop
cmpsb
pop
loope
jns
int3
cmp
popa
mov
jmp
gs
lock
vcvtss2sd
jb
sti
and
cmpsb
nop
icebp
int
in
cmp
fnsave
rcrb
inc
mov
and
in
add
mov
xor
jmp
pop
mov
inc
push
aaa
gs
clc
pop
inc
cld
xchg
lods
inc
xlat
xchg
cwtl
or
aam
xchg
dec
sub
stc
inc
push
les
pop
cld
mov
push
pop
call
dec
sbb
pop
ret
scas
out
ret
pop
out
inc
dec
pushf
push
xchg
in
lds
loope
mov
jbe
inc
cmp
out
sysexit
lahf
sti
testb
arpl
test
xchg
pop
je
in
inc
adc
icebp
pop
lret
inc
push
scas
js
mov
jno
mov
movsl
xchg
sbb
xor
pop
js
sbb
in
dec
out
lahf
push
xor
mov
loopne
inc
addl
cmpsl
aas
iret
inc
adc
sahf
scas
xchg
ss
dec
mov
pop
stos
ret
cmc
add
inc
popa
pop
std
lea
adc
int3
jl
cmp
xchg
adc
fistpll
mov
cmp
sbb
add
xchg
jl
and
cwtl
sub
xchg
ljmp
jl
mov
jl
sbb
adc
or
add
sub
fidivl
pusha
subl
stos
xchg
mov
and
jg
xchg
xchg
addb
mov
mov
fdivp
adc
sub
pop
ja
inc
pop
popa
mov
fidivrl
int
and
xor
push
cmp
sub
or
push
outsl
inc
jb
mov
dec
inc
out
sub
frstor
testl
std
push
loop
xchg
fstpl
sub
leave
xchg
sbbb
and
xchg
int3
les
inc
and
pop
shrb
lret
aam
cld
sbb
mov
mov
pop
outsb
dec
testb
inc
int
fwait
imull
mov
push
jp
mov
and
or
sbb
mov
shrl
sbb
sub
xchg
and
faddl
in
sbb
mov
bound
mov
out
xchg
shll
push
xchg
dec
shlb
lcall
xchg
les
jo
lret
aaa
pop
js
inc
inc
lahf
cmp
add
inc
lcall
push
ret
cmp
sbb
push
iret
or
in
cmp
xchg
rol
jbe
lds
popf
push
adc
add
hlt
pop
dec
rcrl
dec
push
cmp
out
leave
scas
rcl
std
fildll
test
aad
adc
sbb
and
push
sarb
mov
xor
adc
hlt
jb
pop
lods
gs
and
mov
sbb
pusha
bound
pop
add
add
adc
mul
loop
pop
mov
mov
clc
mov
cs
lahf
add
dec
mov
adc
outsb
mov
push
xchg
ret
xchg
cltd
push
mov
cmc
and
push
push
repnz
and
xchg
iret
lods
icebp
dec
out
mov
pop
cmpsb
or
add
mov
sub
outsb
popl
or
shll
fnsave
mov
dec
adc
inc
shll
inc
scas
lods
mov
lret
out
jge
incl
push
inc
xchg
push
mov
push
sbb
addb
adc
pushf
mulb
movsl
xchg
mov
push
dec
dec
sub
mov
sbb
adc
idivb
aad
cmp
pop
arpl
dec
je
xlat
loopne
pop
in
insl
es
xchg
test
or
incb
adc
mov
fstl
icebp
outsl
jmp
nop
adc
das
mov
xchg
mov
mulb
sub
mov
sbb
js
ret
inc
and
pop
or
push
jmp
ds
pop
mov
ficompl
mov
in
aad
xor
scas
xchg
jae
cmp
fnsave
stos
hlt
repz
popa
inc
loop
lahf
das
push
sub
lret
xor
lods
addr16
push
jnp
inc
iret
add
jne
xor
movsl
shrl
cmp
pop
loopne
fbstp
jo
and
push
sbb
sub
mov
pusha
mov
daa
rol
div
jno
ficomps
push
dec
or
lret
and
or
nop
mov
idivb
rorl
mov
cmp
int
mov
xchg
cmpl
lret
xor
es
je
lcall
pushf
fstps
shrb
mov
jo
outsb
ss
setle
movsb
pop
outsl
xchg
mov
cmpsl
lods
aam
pushf
in
inc
jns
push
dec
sbb
outsb
ret
scas
repnz
in
add
adc
sbb
into
cmp
je
fs
mov
jo
movsb
into
data16
xchg
push
cmp
xchg
xor
icebp
add
mov
lret
inc
mov
bsf
mov
nop
loope
push
cs
sbb
fwait
pop
add
cmp
jl,pt
pop
sbb
sbb
or
pop
adc
mov
mov
mov
lds
push
lahf
fdivs
sbb
ds
inc
jg
ficompl
hlt
sahf
cmpsl
cltd
push
xchg
pop
pop
lock
adc
test
ficomps
push
into
out
sbb
or
movb
inc
push
mov
mov
popa
or
pop
xchg
test
ds
in
mov
push
sub
xor
push
add
es
lahf
adc
rcrb
stos
dec
psrld
cld
aas
push
pop
movsb
insl
mov
cmp
ljmp
mov
mov
sahf
and
fimull
in
cmp
xchg
mov
lcall
insb
mov
aaa
mov
and
arpl
mov
arpl
jno
pushl
jb
sub
cmpb
pcmpeqd
inc
jbe
arpl
mov
jb
sub
inc
sahf
stc
in
jns
sub
xor
ret
pop
daa
cmpsl
xlat
add
dec
xor
xchg
in
adc
loop
jnp
lods
movb
push
mov
sbb
daa
adc
test
sahf
inc
push
into
and
xchg
in
sbb
lret
xorb
loopne
mov
push
cwtl
sub
sarb
cmc
push
pop
mov
xlat
jge
push
mov
jmp
mov
push
mov
pop
sub
lret
inc
add
push
sbb
sbbb
pop
cmp
in
jmp
jns
xlat
sub
mov
scas
iret
sub
add
xchg
jle,pn
dec
mov
jge
jns
inc
add
cmp
nop
aad
scas
mov
push
lods
inc
add
aas
xor
pop
xor
mov
shlb
imul
or
stos
fbld
jge
push
aam
jmp
xchg
sbb
xor
sbb
inc
pushf
popa
mov
mov
cmp
lret
mov
sub
xor
pop
lods
ljmp
rorb
mov
adc
in
push
mov
xor
lcall
imul
dec
sbb
mov
xor
push
adc
aad
mov
pop
ja
or
addr16
call
mov
or
repnz
sbb
outsl
push
outsl
push
int3
pop
pop
sub
add
pop
out
bnd
and
xor
mov
fisubrs
push
mov
imul
dec
mov
push
mov
inc
pop
outsl
clc
repnz
insl
dec
and
scas
adc
in
adc
push
test
cmpsb
aas
addl
mov
arpl
sbb
aad
movsb
call
adc
insb
pop
outsl
or
sub
push
clc
loope
mov
mov
arpl
popl
mov
decl
mov
jge
sub
and
sbb
jbe
jne
push
std
mov
addr16
push
dec
aaa
in
push
ljmp
add
mov
push
sub
gs
mov
add
insb
cmp
sub
lds
jl
and
pop
mov
enter
inc
dec
xor
jb
xchg
jl
ds
push
data16
andl
rcrb
push
flds
push
cmp
pop
push
mov
lahf
push
lock
bound
xchg
ljmp
ficompl
pop
dec
rcll
js
sbb
fldcw
int3
push
mov
push
adc
jecxz
loopne
push
jo
out
and
test
enter
frstor
mov
mov
fwait
xchg
mov
enter
mov
arpl
jbe
sub
das
or
xchg
repnz
js
xor
repnz
mov
cli
sub
jmp
loope
add
nop
in
outsl
sbb
dec
lods
loop
dec
or
sub
out
punpckhbw
repz
shrl
gs
dec
mov
push
mov
jno
sub
pop
jns
cli
leave
cmp
bound
adc
mov
adc
aas
in
movsl
mov
xor
nop
ja
ficoms
lds
push
aas
mov
je
movsb
mov
ret
out
popa
inc
call
or
mov
cmp
mov
inc
aam
xchg
xor
mov
jp
push
push
and
test
hlt
jmp
std
cmpsl
loope
and
jo
push
jecxz
and
mov
int3
into
into
fs
pusha
dec
outsl
jg
fadds
adc
mov
mov
out
shll
ret
cmp
inc
push
mull
ja
or
mov
xlat
dec
movntq
pop
or
out
or
fisttpll
jecxz
repz
or
add
movsb
lods
xchg
loopne
aas
cld
and
or
loop
cmc
lds
mov
cmp
cli
xchg
adc
and
pop
mov
movsl
dec
gs
fidivs
repz
rcl
push
pop
aaa
sbb
jae
in
pop
sahf
adc
mov
mov
mov
add
movsb
jno
mov
cltd
cld
shr
in
pop
adc
insl
and
dec
mov
movsb
pop
add
fs
sub
movl
jbe
adc
test
aad
sbb
dec
aas
xlat
pop
movsb
sub
pop
lcall
cmp
out
add
mov
push
rorb
hlt
jne
icebp
testb
sbb
scas
fs
sbb
subl
cmp
lea
sub
mov
jo
stos
mov
out
out
dec
cmp
dec
out
mov
out
movsb
shlb
jge
or
mov
cmp
mov
xor
mov
cmp
push
xor
add
les
adc
mov
jo
lahf
mov
lds
outsl
cs
mov
mov
jo
cs
in
nop
and
add
insl
push
fisubs
or
mov
jns
nop
iret
jae
push
push
mov
lret
imul
sahf
mov
add
push
fnstenv
outsl
jno
movsb
adc
push
jnp
jae
scas
call
pop
stc
sbb
xchg
insl
ror
sub
loopne
cmp
pop
and
push
in
out
inc
adc
leave
xor
fstl
dec
fimull
sub
fwait
sahf
out
popf
in
xor
outsl
inc
in
fistps
je
rclb
repz
sbb
jbe
lret
sub
xor
out
inc
xchg
es
dec
lahf
push
push
adc
xchg
cli
idivl
imull
enter
sbb
inc
xchg
xor
iret
mov
and
and
mov
fsubs
or
sbb
pop
ss
scas
aaa
xor
jne
push
in
push
jno
pushf
stos
jg
test
mov
xchg
hlt
xor
nop
fwait
test
inc
xchg
enter
cltd
stc
add
ret
or
mov
pop
cld
pusha
sub
loop
outsb
cmp
pop
push
notl
push
icebp
cmp
test
jae
and
cwtl
test
inc
out
and
inc
imul
mov
in
jmp
adc
loop
push
xor
cs
lret
push
addl
mov
gs
xchg
push
ljmp
and
mov
hlt
nop
mov
or
pop
adc
stos
jns
lds
ds
cmp
jne
adc
clc
push
test
into
add
ret
popf
repnz
mov
loopne
add
pushf
jl
jp
push
js
jb
clc
sti
fsubs
hlt
clc
scas
sub
pop
fwait
sti
loop
gs
mov
push
xor
rclb
mov
mov
jp
lea
leave
push
cmpb
pusha
mov
mov
out
cmc
cmpsb
sbb
jnp
orb
jno
out
pop
mov
mov
push
inc
lahf
outsb
mov
mov
and
cld
mov
xlat
cltd
insb
inc
popa
scas
fistps
sbb
pop
out
mov
mov
ljmp
xchg
adc
inc
std
loope
pop
lods
decl
mov
movsl
js
inc
popf
push
lea
and
fsubl
sbb
mov
cmovg
adc
jge,pt
xlat
mov
add
popf
lds
and
or
mov
mov
mov
jne
pop
mov
cmpsl
cltd
mov
fs
xchg
test
mov
icebp
in
cmp
adc
lret
aas
xchg
shl
jl
insl
lret
jne
jg
fs
fcomps
inc
in
inc
dec
push
or
or
subl
and
int
inc
fstps
jmp
mov
push
fldl
cld
mov
in
jecxz
rcr
pop
mov
sbb
push
loopne
xchg
mov
adc
js
fnstcw
out
sar
rorb
or
orl
dec
int3
aaa
lret
xor
test
mov
cmp
or
mov
sub
xor
push
out
mov
sahf
sbb
lret
jg
mov
and
inc
pushw
out
ja
out
push
mov
or
sbb
mov
add
daa
into
clc
ljmp
scas
int
rcr
insl
sub
into
inc
pop
sbb
mov
jecxz
jns
cmpsl
movsb
xor
arpl
es
mov
gs
ljmp
inc
mov
inc
dec
lahf
out
call
imul
addb
enter
dec
and
aad
loop
lret
fidivrl
stos
pop
push
cwtl
pop
fwait
pop
outsb
or
dec
mov
mov
adc
lock
fsubr
aaa
dec
hlt
stos
imul
cmpl
insl
movsb
das
outsl
mov
mov
pop
mov
gs
das
push
outsl
push
cmp
subb
mov
xchg
lds
das
jmp
lods
popf
xchg
lcall
xchg
shlb
into
mov
imul
in
stc
pop
bound
std
int
xchg
fs
testl
inc
jge
push
mov
inc
mov
cld
sub
test
xor
inc
jbe
adc
add
int3
das
loopne
repnz
out
mov
pop
add
jo
pop
fisttps
ret
and
pop
lods
mov
pop
adc
das
je
test
xchg
cltd
fwait
test
push
stc
mov
lods
mov
daa
aad
jmp
xor
dec
jmp
ror
pcmpgtb
dec
stos
loop
dec
dec
push
push
inc
jne
jge
cmp
adc
push
xchg
dec
or
mov
mov
mov
jno
xor
and
mov
mov
insb
insl
push
lret
jle
cltd
mov
mov
or
mov
dec
pop
push
cwtl
xchg
lret
sbb
adc
xlat
cli
rolb
fisttpl
push
aaa
scas
in
icebp
add
push
dec
or
and
lods
inc
daa
lahf
dec
cli
idivb
dec
mov
jne
mov
jle
mov
test
les
push
mov
js
lcall
xchg
rcrb
pop
fstpt
mov
clc
push
add
not
dec
sub
mov
mov
push
mov
adc
clc
jp
idivb
mov
and
stc
dec
or
mov
dec
mov
dec
pop
cltd
jmp
inc
mov
aaa
es
aam
mov
sbb
add
or
fildl
enter
or
jnp
hlt
push
aam
insb
cwtl
in
lods
pop
cli
fcompl
and
imul
into
and
lods
sub
lea
mov
xchg
or
ljmp
jbe
push
cltd
int
pusha
je
popl
aam
rcrl
jl
mov
inc
or
mov
dec
push
iret
mov
pop
gs
inc
loopne
cwtl
and
pop
and
xchg
jns
xor
push
shrb
into
aaa
rcrl
out
or
sub
mov
aad
call
inc
loopne
jns
jo
or
or
stos
inc
pop
mov
cmp
rol
mov
scas
repz
or
inc
cmp
lcall
out
loope
mov
into
orl
int
dec
cld
pop
pop
mov
mov
out
jbe
clc
mov
negl
sub
js
sbb
orb
and
addr16
js
sub
popl
daa
fistpl
stc
iret
sbb
sub
inc
cmpsb
iret
fcomps
cmpsl
add
push
call
adc
sub
pop
adc
cmp
pusha
sbb
adc
push
and
cli
xchg
xor
pushf
sbb
xor
xchg
movsb
inc
jmp
hlt
sets
pop
mov
mov
push
fwait
push
repnz
push
dec
hlt
add
test
and
push
fildll
stos
jle
fcmovbe
sbb
dec
push
or
es
add
icebp
cli
dec
sub
call
add
repnz
jno
cmp
push
xchg
pop
popf
popa
rorb
out
outsl
mov
mov
xchg
andl
adc
inc
ljmp
mov
xlat
es
dec
pop
imul
xlat
xor
add
xchg
dec
jbe
dec
jo
ret
je
rcrb
lds
sub
es
xchg
sbb
inc
or
lods
add
rcl
push
movsl
jge
and
incb
bound
mov
fsubl
jmp
or
fcompl
push
mov
push
orl
nop
lcall
and
es
fs
sbb
leave
dec
test
dec
cmpsb
dec
mov
imul
sti
ror
push
in
inc
xchg
inc
dec
add
mov
add
aaa
add
enter
rorl
ffree
mov
cmp
cmp
int3
push
incb
push
sbb
lcall
cmp
das
fimuls
mov
negl
xchg
fnsave
out
in
pop
stos
or
fs
xor
out
adc
jae
stos
add
lret
cltd
scas
pop
lods
loop
outsb
sub
adc
fbstp
mov
inc
mov
dec
es
jle
inc
xchg
jge
inc
cmp
inc
and
aaa
lds
jmp
cmp
sahf
cmpsb
push
and
insl
push
inc
icebp
out
and
cs
sarl
mov
das
jl
mov
mov
mov
xor
inc
aas
imul
sub
imul
mov
dec
ficoms
fsubp
inc
mov
mov
fwait
pop
arpl
add
jmp
inc
mov
aas
sarl
or
lds
aaa
cli
cmc
rorl
test
lcall
or
fwait
mov
repz
push
xchg
mov
sbbb
cmpsb
jge
stos
mov
mov
and
pop
dec
jl
mov
cmpl
bound
push
pop
jbe
xchg
sahf
lret
nop
jne
mov
test
js
sbb
pop
pandn
push
pushf
sbb
ret
repz
jecxz
into
adc
xor
movsb
cmp
or
mul
daa
movsb
in
mov
test
jecxz
pop
test
cmp
cmp
loopne
push
or
sti
mov
lock
pop
mov
mov
xor
incl
dec
pop
es
out
lret
shrb
push
leave
hlt
cmp
adc
inc
sbb
add
rcl
adc
cmovno
xchg
stc
lahf
mov
int
test
ret
fisubrl
lea
das
inc
mov
repnz
mov
push
fstpl
mov
sbb
add
daa
xorl
push
gs
out
and
cwtl
fbld
cmc
sub
negb
scas
inc
xchg
int3
mov
inc
aam
sbb
and
push
sbb
ja
adc
adc
lock
dec
aad
ret
inc
aam
int
dec
in
jge
bound
in
cmp
push
sbb
aam
cmp
jp
sbb
arpl
sahf
push
dec
cli
fwait
inc
dec
add
andb
mov
sbb
pop
add
dec
mov
pop
pop
lret
pop
mov
test
inc
cwtl
insl
inc
insl
icebp
dec
loope
jb
aad
cmp
lcall
pop
sbb
push
lahf
jmp
je
outsl
cmp
xchg
sub
int
in
adc
call
stos
dec
stos
mov
sarb
jno
xchg
arpl
dec
xchg
mov
add
notb
mov
pop
iretw
inc
mov
jne
fsubs
push
jge
test
test
insl
jo
mov
jecxz
jmp
xchg
push
and
mov
sarl
js
xchg
div
imul
xchg
mov
lea
mov
sbb
sbb
push
or
mov
mov
mov
sbb
ret
push
cmpsl
cmp
or
and
mov
fldt
out
call
call
roll
and
mov
sub
sarb
pop
pop
lds
cmp
jns
pushf
mov
pop
xchg
dec
add
int3
inc
mov
xchg
jb
xchg
jmp
sub
push
mov
and
lret
sti
popa
or
or
push
dec
lock
aam
mov
test
jmp
mov
inc
jle
flds
push
in
stos
sub
xchg
mov
mov
push
or
mov
dec
jb
cmp
pop
pop
mov
sub
cmp
jbe
mov
ja
shrb
sub
pop
add
leave
or
and
lods
fisubs
call
mov
daa
xchg
testb
inc
push
ret
push
inc
std
pop
dec
iret
test
lret
push
sti
das
fldcw
adc
gs
xor
add
outsb
pop
mov
adc
repz
mov
mov
xor
insl
je
rcrb
in
std
jle
sub
shll
adc
aad
call
xlat
out
push
sarl
or
pusha
shr
sub
cld
in
dec
jno
hlt
sti
cli
push
dec
jge
fldcw
mov
mov
fdivrl
or
cmp
ret
ja
push
dec
cli
and
push
push
pop
jmp
sbb
dec
or
repz
cmpb
jmp
mov
iret
repz
xor
push
xor
pusha
jne
in
pop
add
ret
movsb
aam
mov
les
stos
xor
cmc
outsl
out
or
ret
add
sahf
fsubrl
int
fdivp
rcll
and
adc
adcl
sub
dec
mov
dec
sub
add
mov
ljmp
out
inc
add
adc
pop
mov
stc
lock
xchg
loope
pop
nop
int
popa
aam
and
add
iret
fs
mov
lods
push
sub
mov
test
pusha
mov
mov
sub
aaa
pop
sbb
cwtl
mov
mov
xchg
mov
sub
xor
loope
les
rcll
pop
mov
push
cmpsl
mov
cltd
jae
dec
mov
or
add
xor
mov
xchg
into
xchg
cli
inc
stos
jge
bound
xor
cmp
pop
mov
icebp
jg
mov
xchg
imull
add
decl
or
es
scas
pop
xor
jb
xor
ret
fiaddl
addl
out
nop
mov
sub
and
mov
es
out
stc
xor
or
int
mov
dec
xor
xchg
sahf
sub
popf
lret
pop
dec
inc
add
popf
cmp
cmpsl
pop
js
in
xchg
sub
icebp
push
jo
int
mov
ljmp
leave
flds
cli
pop
cmp
adc
cwtl
into
inc
insl
jo
dec
ja
fucomi
bound
in
daa
mov
push
add
ret
pop
and
add
sbb
fwait
xchg
pushf
jbe
xchg
sbb
subb
push
pushf
jmp
inc
pop
aam
inc
jae
mov
fimuls
shr
adc
mov
mov
sub
aad
cmp
pop
enter
mov
call
mov
push
and
add
mov
push
mov
xchg
repz
or
lods
pop
mov
scas
gs
lahf
jb
mov
into
adc
mov
inc
int3
push
jo
mov
out
aas
movsl
xchg
dec
pop
inc
adc
lods
out
shll
xchg
cmc
stc
add
mov
aas
mov
movsb
adc
mov
stos
mov
out
cmp
leave
inc
stc
test
xor
xor
insl
outsb
cld
cli
aaa
and
push
sarl
vmxon
mov
cmp
bound
int
cmp
cmpsl
sub
adc
add
aaa
inc
sub
and
inc
aas
repnz
mov
xor
les
icebp
or
inc
lret
add
inc
pushf
push
add
dec
sub
and
push
mov
pop
inc
outsl
pop
push
adc
sub
sbb
lret
les
jb
and
xchg
cmp
lock
lahf
inc
loop
adcb
pop
paddusb
mov
dec
mov
mov
jmp
mov
cld
jg
push
cmpsb
aaa
sub
mov
repnz
mov
ljmp
xor
xchg
xchg
mov
cmp
or
data16
mov
inc
gs
dec
popf
pop
xchg
cmp
push
lea
stos
adc
mov
or
xchg
pop
cmc
dec
outsb
aaa
push
and
in
xchg
push
cmpsb
xchg
clc
mov
in
hlt
dec
add
jne
inc
sar
xor
pand
jb
or
ds
outsb
test
xchg
adc
mov
cmpsl
repz
xchg
mov
pop
mov
mov
jne
mov
scas
lock
cmp
fistps
mov
cli
sub
sbb
mov
fcoml
mov
fwait
or
or
xchg
push
mov
mov
or
sarl
push
jecxz
inc
arpl
mov
cmpsb
aam
mov
push
stos
pop
adc
mov
or
jb
jg
add
lcall
call
lods
dec
je
dec
push
iret
fstps
push
int
ljmp
daa
sbb
mov
rcrb
inc
cwtl
adc
push
push
add
mov
sub
push
test
std
icebp
dec
mov
mov
jno
popa
sub
pop
lods
sub
pop
xchg
int3
pusha
xchg
push
repnz
push
or
mov
mov
sbb
fcmovne
shll
arpl
pusha
iret
movsb
mov
or
arpl
jl
inc
xchg
ljmp
xor
push
mov
sub
mov
lret
adcl
daa
lahf
jb
xlat
bound
imulb
mov
cmp
and
jp
cmp
cltd
dec
jecxz
or
pop
dec
mov
adc
jbe
dec
jle
push
mov
gs
pop
mov
or
mov
fisubrs
into
insb
sbb
sub
xchg
xor
in
cmp
dec
insl
jg
sbb
cmp
jbe
jecxz
cmc
xor
mov
scas
iret
adcb
sahf
dec
xchg
popf
inc
push
icebp
fwait
jle
xchg
add
in
dec
imull
push
loope
xor
lods
popa
add
push
scas
cli
and
dec
sub
fmul
jmp
push
in
or
mul
pop
cmp
push
fisubl
dec
pop
adc
fdivs
dec
imul
add
inc
lcall
push
notl
cmp
das
test
pop
push
lret
movb
mov
mov
dec
sbb
push
sbb
sub
xchg
cwtl
in
mov
cmp
add
fbstp
cli
cmpsl
lret
adc
push
dec
and
stos
dec
xor
es
cmp
sub
in
sub
or
pop
pop
out
cmp
jno
aaa
jne
pusha
mov
xchg
mov
mov
out
or
sbb
ret
sbb
icebp
rcrl
daa
cmpsl
mov
popa
mov
jle
sbb
mov
jl
jle
loopne
adc
jbe
or
jge
call
popf
aaa
mov
pop
popa
imul
in
pusha
sbb
ret
or
adc
xor
in
stc
lea
rcr
popf
icebp
clc
lcall
jle
cmp
sub
js
mov
cwtl
out
sarb
cmc
mov
daa
xchg
xor
xchg
push
add
repz
pop
sub
mov
adc
inc
cmpsb
add
outsb
mov
sub
stc
add
adc
jl
out
xlat
je
add
int
in
clc
xchg
daa
mov
add
jno
into
and
jnp
cs
jmp
ds
cmp
ds
cld
in
add
cld
outsb
fcoml
insl
adc
inc
cmp
imul
sub
les
inc
stos
adc
jp
rep
ljmp
push
decl
mov
and
hlt
popf
repz
adc
push
pcmpeqb
mov
cmp
nop
cltd
inc
pop
es
ljmp
fnstenv
mov
fwait
push
fldenv
int3
out
shl
cmp
lds
inc
jae
push
ds
clc
push
jmp
xchg
mov
dec
scas
jae
lret
rcrb
int3
add
xor
or
out
adc
iret
cmp
shr
adc
cmp
scas
add
inc
and
pop
arpl
mov
add
jmp
ret
pop
stc
push
cmpsb
pushf
sub
lods
shlb
cmp
imul
cmpsl
xchg
cmp
fucomip
in
pop
pcmpgtb
pop
sbb
jg
scas
lahf
test
ss
xor
push
andl
dec
lea
adc
inc
adc
cmp
sbb
imul
es
imul
incb
scas
push
lock
in
mov
inc
sub
ss
push
loope
xor
test
jecxz
xlat
sti
and
in
mov
daa
fcomi
sub
es
adc
movsb
xchg
mov
inc
aaa
loopne
in
dec
cmpsl
sbb
push
dec
ret
fwait
mov
xor
and
mov
pop
mov
sub
xor
add
dec
addr16
in
sbb
or
clc
xchg
lods
or
sbb
mull
mov
xchg
dec
aad
enter
shl
add
sbb
xchg
repz
sub
sbb
push
jae,pn
lds
popf
ss
dec
sbb
jmp
cmc
lods
sti
dec
sbb
fcomp
lret
daa
xlat
cli
popa
sti
stc
mov
mov
mov
inc
jne
rclb
les
jmp
xchg
pop
scas
jmp
neg
out
jnp
fsubl
sbb
pusha
dec
mov
lcall
out
fimuls
lods
std
xor
sbb
rorl
add
mov
mov
sub
in
mov
mov
mov
nop
call
jb
sub
adcl
fsts
jno
jge
push
and
xchg
hlt
sub
orb
push
out
test
movb
cmp
popf
fstps
imul
cmp
movsl
ffreep
xor
mov
lock
xor
fnstsw
rorl
fistl
adc
dec
insl
add
cli
repnz
pop
loop
dec
mov
out
movb
addr16
adc
out
xchg
pop
or
mov
jbe
enter
lret
stc
dec
push
and
js
int
wbinvd
stc
mov
fbld
cld
and
dec
and
std
dec
push
pop
ja
jg
inc
sub
mov
mov
or
pop
mov
mov
jb
jl
movl
xor
and
mov
fmull
pushf
jp
dec
or
imulb
cltd
pop
sub
add
xor
cmpsl
pop
ljmp
mov
sbb
mov
cmp
lcall
leave
push
dec
mov
or
xchg
mov
ss
arpl
fwait
rol
adc
jae
lock
xchg
pop
jp
xor
push
pop
inc
push
lods
movsb
xchg
into
xor
jne
adc
jb
mov
jl
cmp
or
mov
push
push
aam
lcall
pushl
sbbb
jg
mov
dec
xor
dec
aas
nopl
fwait
roll
icebp
imul
gs
pop
mov
sbb
ja
mov
in
push
pop
in
jae
shll
stos
jnp
push
int3
pop
into
xchg
push
pop
shll
sahf
inc
inc
cmpsl
fimull
jmp
mov
aas
xchg
sub
mov
gs
fcomi
hlt
push
mov
ljmp
and
test
cmc
jb
inc
icebp
jns
shll
add
idivb
hlt
jle
sbb
xchg
jno
xor
mov
push
push
sbb
adc
sub
cmp
lods
mov
mov
sbb
dec
lret
dec
int
xor
mov
mov
jo
adc
xchg
pop
in
mov
mov
pop
or
outsl
addr16
pop
lcall
int
cmpsb
push
test
sub
dec
int
movsl
add
push
jnp
std
sbb
vpshaw
addr16
shll
add
je
cli
pushf
sti
arpl
sub
push
jae
cs
stc
xlat
imul
mov
add
rclb
mov
rclb
movsl
xor
fs
push
xchg
test
dec
mov
cmp
or
cmpsl
xacquire
sarb
outsb
jb
adc
ffreep
outsl
divb
mov
sbb
push
not
jge
scas
mov
out
aaa
scas
fdivrl
lret
shr
loop
xchg
mov
out
xor
or
push
sarl
dec
mov
sub
fstpt
mov
sbb
in
sbb
pop
imul
xchg
or
cmp
stc
lods
int3
insl
pop
arpl
mov
mov
hlt
jle
out
aaa
jo
and
fsubl
fmull
sbb
fwait
xor
psrlw
lods
popf
lret
pop
pop
stc
vmread
pop
xlat
out
lret
xlat
sti
adc
in
xchg
jbe
out
adc
mov
jecxz
testl
xchg
aaa
decl
jno
xchg
iret
cmp
movsb
lea
adc
je
lret
mov
bound
inc
adcl
sbb
psubsw
cmpsl
shll
lods
es
dec
push
add
jge
add
inc
pop
sarb
jno
repz
jae
xor
lret
mov
sahf
pop
jmp
ret
mov
push
and
push
mov
clc
dec
insl
inc
xchg
pop
mov
lahf
int3
shrd
inc
add
iret
les
push
out
jns
mov
jbe
insl
sbb
sti
push
bound
mov
add
xlat
lahf
dec
fisubrl
leave
or
insl
mov
aas
mov
sub
in
xor
cmpxchg
daa
cmpsb
bswap
sbb
mov
adcb
mov
pop
lods
cld
or
loopne
lea
mov
or
cmpsb
mov
out
add
sub
ds
sub
cmp
mov
stos
shlb
test
cmp
test
xor
mov
adc
repnz
pop
dec
xor
inc
fisubrs
lods
pop
cmp
mov
fisttpl
out
pop
aad
cmp
xor
xor
aad
jbe
and
dec
repz
fisubs
sbb
jbe
jbe
fsubl
lea
daa
add
dec
pop
adc
scas
xor
in
lock
and
push
and
pop
push
pop
jecxz
jne
rcrb
shl
fs
jecxz
iret
cltd
sbbl
xor
dec
negb
cmp
adc
sbb
adc
mov
mov
add
mov
insl
xchg
inc
mov
dec
jg
mov
sbb
or
xor
and
sub
sti
xlat
aad
cmp
xor
insl
lret
mov
loop
mov
pop
cmc
dec
mov
sub
xor
xor
xchg
bound
inc
pop
xchg
mov
xchg
xchg
fcoms
call
or
mov
mov
sub
subb
inc
xchg
push
pop
jl
lods
dec
push
mov
sbb
xlat
push
mov
fldt
push
sbb
int
push
rcrl
loop
psllq
jecxz
jno
cmp
sbb
sub
add
add
test
popf
push
jecxz
adc
out
or
add
das
mov
in
movsl
test
or
filds
dec
jae
adc
insb
pop
mov
popf
fdivs
jl
mov
and
cmp
pop
xchg
push
fists
push
mov
cmpsl
pusha
stos
sub
and
add
stc
inc
add
lahf
and
dec
push
jb
pop
or
sahf
push
insl
or
js
mov
sbb
push
fs
push
test
cmp
shrl
bnd
sbb
orb
pop
js
dec
je
dec
sub
xchg
push
sbb
pop
vpsubusb
push
add
fsubrs
jecxz
jmp
loopne
jno
jp
dec
lcall
arpl
aaa
loope
rcrb
hlt
push
mov
lea
ret
push
stos
and
add
cmc
or
test
ficoml
cmp
les
jecxz
fiadds
daa
sub
adc
insl
out
pop
popf
loop
adc
fwait
cmp
or
mov
or
xor
inc
shrl
push
push
jge
insb
sub
cs
sub
sbb
mov
leave
in
aad
jo
addr16
lea
ficompl
jle
mov
mov
shrl
or
mov
mov
stc
clc
out
pop
jmp
push
pop
dec
push
push
leave
adc
xor
cmc
cmp
cmc
jg
cmpsl
nop
shl
adc
adc
ss
scas
fs
sar
ljmp
lea
sahf
add
mov
push
call
jnp
xchg
aas
std
fs
fcoms
mov
adc
out
jae
xor
jp
xor
add
ret
in
lods
ret
add
inc
into
push
sbb
nop
jmp
gs
iret
mov
pop
adc
fs
std
notb
jae
popa
movw
cli
lahf
cwtl
lods
adcl
pop
push
mov
sub
mov
sbb
xorb
insb
and
fdivl
jnp
mov
add
xchg
jle
nop
cwtl
dec
lds
test
stos
insl
movsl
inc
mov
std
adc
sub
push
clc
adc
cmp
dec
bswap
icebp
add
sbb
mov
loope
sbb
test
adc
push
lret
mov
in
fistl
test
ds
mov
rcr
pop
add
ja
pop
test
lods
in
enter
jae
jmp
bound
aas
mov
lahf
cli
sarb
xor
xchg
negb
or
jae
mov
xchg
jmp
jns
pop
or
lea
sbb
or
xor
repz
mov
pop
clc
ja
sti
jle
xchg
add
rolb
sub
xor
sbb
dec
stos
repz
sub
inc
xor
lahf
cmpb
subl
mov
fdivs
and
pusha
jb
outsl
imul
pop
xchg
in
jb
jp
xchg
movaps
mov
mov
adc
loop
mov
xchg
or
push
mov
ret
das
push
orl
or
shr
dec
adc
test
jnp
push
in
pop
add
xor
jbe
icebp
dec
pop
cmp
push
and
outsl
insl
dec
sarb
into
jge
jl
frstor
imul
cmpsl
xchg
jge
cmp
adc
push
frstor
fcomps
cmovnp
pop
push
xchg
and
mov
mov
xchg
cmp
add
push
cwtl
fwait
dec
out
loopne
xor
addr16
and
inc
xor
lcall
sbb
mov
test
jmp
test
sbb
imul
jne
stc
push
stos
jb
daa
out
jno
scas
stos
and
adc
outsb
clc
repz
jns
mov
insl
xor
inc
lahf
faddp
ss
dec
add
add
cmp
sub
push
lods
in
xor
or
enter
imul
jle
cmp
mov
jnp
jge
call
cmp
pop
int
dec
int
jns
adc
stos
adc
sbb
lock
mov
lret
dec
cmp
push
mov
sbbb
dec
out
inc
lea
fistpl
ret
inc
dec
icebp
jne
inc
adc
push
mov
jmp
push
mov
sub
lock
cmp
mov
scas
inc
mov
sti
jg
int
xor
push
mov
cmp
push
in
push
hlt
push
lock
or
push
sub
decb
sbb
xor
mov
add
mov
or
pusha
addl
mov
js
shr
je
enter
xchg
lcall
mov
xor
dec
jno
fdivrs
mov
xchg
ljmp
inc
sub
pop
inc
fwait
cmovb
les
cmp
fildll
mov
fcoml
dec
jns
jae
add
adc
push
mov
lods
pop
add
jbe
push
add
or
inc
out
insl
cmpsb
push
cmpsb
arpl
es
push
lahf
cltd
push
xor
push
mov
lock
sub
pushf
mov
jns
xor
ss
mov
loope
notl
fiadds
xchg
and
adc
mov
mov
push
jl
popf
in
sbb
sahf
push
mov
js
repnz
dec
dec
add
les
jmp
cmovb
push
lods
fwait
sub
sub
test
jns
cwtl
ret
loopne,pt
shrl
insb
jno
cwtl
xor
fstpl
dec
jb
xor
add
xor
xchg
mov
ret
dec
mov
pop
sbb
sbb
pop
test
je
dec
cwtl
cwtl
into
push
inc
adc
pop
scas
xchg
xor
decl
inc
cwtl
push
bound
sbb
push
orb
dec
dec
xchg
push
stos
inc
dec
inc
dec
or
mov
and
outsl
dec
or
js,pt
or
stc
pop
jg
mov
ss
mov
dec
mov
popa
and
lea
shll
add
push
and
pop
or
les
inc
ljmp
inc
ret
loop
das
jl
mov
scas
dec
xlat
negb
inc
popa
xor
push
adcl
arpl
movsb
into
sub
pop
jg
sub
cwtl
stos
jo
jge
or
stos
mov
push
mov
int
insl
jno
shrl
mov
xor
add
sahf
out
aad
mov
sub
pop
jo
rolb
lods
stos
and
ja
int
jae
sub
mov
pusha
push
aad
pop
pop
into
xchg
dec
fisubrl
out
push
ds
out
dec
shlb
mov
inc
repz
stos
pusha
mov
mov
jns
scas
rcrl
mov
xchg
shr
stc
loop
xchg
dec
jo
mov
je
jae
in
into
sub
cltd
ret
jecxz
cmpsl
xchg
test
mov
mov
pop
mov
adc
adc
lods
jno
inc
xchg
adc
mov
push
sbbl
scas
cmpsl
icebp
adc
pop
mov
in
xchg
sbb
jmp
jnp
test
mov
cmpb
adc
rorb
lods
pusha
fmuls
test
insb
sahf
pusha
lock
clc
xchg
and
mov
jge
sarl
daa
xchg
call
data16
inc
sbb
dec
xchg
test
imul
fmul
mov
shlb
push
pop
mov
iret
dec
dec
mov
sbbl
out
mov
fisttpll
push
mov
ds
lea
push
push
imul
inc
adc
or
inc
xor
clc
lret
pop
xor
xchg
out
arpl
lea
rclb
xor
sti
jle
daa
mov
pop
or
mov
jnp
xor
pop
mov
mov
pop
adc
fiaddl
outsl
adc
jecxz
dec
rcll
fdivs
sub
rclb
lock
ret
pop
or
int
dec
inc
repz
ja
jge
pop
add
xor
mov
or
push
rol
int
sub
cmpsl
lcall
adc
xor
pop
aas
js
or
sbb
add
stos
and
stos
fdivrs
cmp
das
and
add
lods
and
push
sahf
or
adc
outsl
test
div
jl
and
neg
ror
pop
aaa
dec
loopne
lret
adc
pop
lods
and
push
sbb
leave
fidivl
fildll
xchg
xor
xchg
cwtl
clc
sbb
push
mov
push
cmp
mov
mov
mov
shll
pop
cwtl
mov
movsb
lods
pop
sbb
int
iret
adc
ret
test
sbb
or
mov
arpl
mov
in
lcall
enter
into
push
push
add
mov
cmpl
les
mov
sbb
mov
cmpsl
ret
push
icebp
xchg
jnp
dec
mov
pushf
mov
inc
lds
iret
pop
pop
aaa
sti
push
lret
sbb
mov
std
bound
mov
push
repnz
pop
lcall
add
push
jge
in
inc
sub
jo
sahf
icebp
aas
cltd
xchg
adc
iret
cmp
adc
inc
jecxz
fstp
int
hlt
lods
xchg
ja
mov
mov
je
or
cwtl
add
xchg
push
mov
add
or
xchg
sbbb
or
test
sar
mov
xchg
in
shll
arpl
sub
mov
sbb
and
nop
cmpsb
hlt
sub
sub
aad
dec
mov
ret
call
ret
jecxz
mov
xchg
jge
jo
ja
mov
push
cli
mov
pop
or
inc
cltd
xchg
pop
sbb
sbb
data16
add
dec
cmpsb
mov
push
adc
dec
bnd
insl
lods
ja
push
jbe
mov
ja
or
pusha
aam
lods
pop
and
lods
imulb
pop
ror
push
push
jo
cmp
xor
mov
scas
dec
ret
dec
adcw
cwtl
test
push
mov
xor
pop
xchg
inc
jbe
push
xlat
xchg
pop
jp
xor
mulb
pop
je
mov
and
xor
cmpsb
sbb
fwait
shrl
inc
imul
repz
cmp
or
push
lods
cmp
mov
mov
pop
xchg
mov
hlt
jbe
adc
xor
or
inc
cs
je
fdivr
imul
jnp
jl
mov
jb
subb
adc
mov
ja
xchg
mov
or
add
cmpps
or
jmp
das
aad
loope
xchg
icebp
aaa
mov
sub
inc
orl
push
dec
incb
lods
push
add
mov
icebp
mov
pop
aas
sahf
pop
and
mov
insb
ds
clc
aaa
xchg
mov
cmp
xor
inc
push
mov
jne
enter
in
inc
cmp
inc
lds
sbb
in
sahf
push
scas
in
in
jl
into
push
out
jno
push
xchg
fsubr
mov
test
cmp
add
lret
repz
inc
daa
lcall
mov
daa
fcmovb
outsb
add
push
std
sbb
xor
out
cmc
pop
ss
mov
testl
mov
jnp
pop
jge
dec
test
dec
ss
iret
jo
ret
sbb
dec
cltd
fsts
xlat
test
out
fadd
into
aad
add
jl
mov
xchg
xor
fsubrs
ljmp
xor
out
test
adc
incl
fimuls
sub
or
rolb
adc
mov
inc
sbb
dec
andl
enter
mov
add
clc
or
mov
lret
cld
xchg
out
loope
mov
daa
sbb
adc
xchg
mov
cmp
pop
ret
pop
dec
insb
jns
xacquire
out
push
dec
cmpsl
add
mov
inc
pop
xchg
pusha
cli
lock
push
fidivs
dec
mov
xor
or
aam
cmp
popa
out
dec
into
xlat
dec
jecxz
cld
std
pushf
mov
ss
scas
push
cmovae
mov
xor
xor
add
add
or
add
popf
dec
jns
iret
mov
insl
fldl
cltd
push
subl
cmp
add
movsb
es
mov
mov
shlb
mov
push
sub
mov
arpl
fwait
icebp
shlb
das
and
mov
loop
xor
aam
cld
adc
xchg
xor
sbb
mov
sarl
pop
add
xchg
add
xor
aaa
test
push
iret
icebp
lods
pusha
push
pop
mov
mov
lods
jmp
xor
xlat
mov
jno
jae
mov
mov
sbb
jl
pushf
ret
divb
lahf
xchg
xor
ds
fildll
jle
out
lods
scas
test
mov
pop
jnp
lcall
gs
jmp
mov
add
dec
out
mov
mov
jmp
push
lahf
push
dec
hlt
testb
outsl
push
xlat
mov
aaa
nop
pop
cmc
movb
jmp
loope
xchg
pop
imul
adc
fildll
cmovs
fdivrl
inc
rorb
push
mov
test
xor
xor
jl
mov
inc
or
and
lret
cli
int3
push
mov
cmp
cwtl
enter
fstps
popa
sub
mov
arpl
mov
gs
push
ret
popa
dec
jb
xor
cltd
xlat
aaa
adc
xor
adc
or
out
subb
sub
or
lea
stc
and
imul
call
pusha
add
inc
test
inc
ret
cmp
ret
lods
lcall
movsl
out
dec
adc
push
stos
mov
fdivs
iret
insl
mov
fcmovnu
icebp
adc
mov
loop
xlat
mov
push
pop
pop
or
in
push
inc
fwait
push
lods
and
aas
cltd
mov
inc
and
outsl
lods
scas
outsb
inc
inc
std
pop
adc
flds
jl
jmp
dec
xchg
sub
jns
sbb
nop
mov
push
fsqrt
pop
sti
or
mov
sahf
notl
and
cmp
pop
test
int
pop
xchg
sbb
push
xor
shrl
jnp
add
ja
xchg
fbld
mov
mov
rep
aam
popf
cs
pop
lea
dec
mov
cmp
dec
js
andb
cs
lock
pop
rcrb
fs
test
xor
shr
lahf
out
sub
mov
sbb
add
cmp
xlat
shll
pop
fnstcw
iret
xchg
mov
adc
mov
addl
pop
sub
repz
push
mov
int3
fmul
jno
fistpll
lea
scas
pop
inc
mov
and
mov
test
flds
aad
icebp
in
dec
sar
dec
inc
push
in
jne
std
loope
inc
test
jb
lahf
jno
aas
in
std
lret
ret
or
scas
jl
xchg
jae
je
mov
dec
xor
cmp
add
xchg
jbe
mov
mov
test
cmp
adcl
push
pop
jge
add
pop
cmp
rclb
js
lret
xor
fidivrs
sbb
movl
outsb
shlb
outsb
outsb
dec
addr16
and
ret
test
dec
adc
xchg
cmp
stc
mov
imul
lahf
test
bound
sub
mov
pusha
ja
mov
cmp
pop
xchg
enter
pop
das
mov
and
push
sub
sub
sub
insb
aam
rcrb
xchg
cmpsb
fnstenv
and
insl
push
ret
or
cmp
xchg
sbb
sbb
aam
dec
sub
leave
mov
pop
add
adc
pushf
sarb
adc
std
pop
mov
repnz
jp
lahf
ret
test
outsl
pushf
shrb
cltd
mov
sbb
jge
mov
add
mov
into
or
enter
and
mov
gs
lods
mov
mov
xor
pop
adc
xor
sub
dec
add
cmp
mov
cli
cltd
stos
jo
cmp
inc
mov
jb
jmp
pop
std
sub
add
std
cwtl
mov
and
and
dec
insl
in
lcall
nop
mov
sahf
push
test
sbb
pop
push
fsubr
or
shlb
pop
ljmp
ja
cld
ret
jmp
mov
jl
out
xchg
or
fnsave
lock
ja
ja
push
mov
push
add
adc
mov
sub
sub
in
pushf
push
jnp
lds
out
stos
cmp
into
xchg
or
inc
lcall
push
ljmp
pop
cwtl
pop
aaa
cmp
and
stos
cmc
cmp
sub
inc
int
jne
stos
in
addl
mov
mov
lds
xchg
pop
jge
jbe
sub
pop
jns
or
inc
mov
bound
aas
out
mov
mov
mov
loopne
dec
jle
fsubs
push
push
pop
jecxz
or
jb
jne
test
dec
xchg
popa
and
mov
dec
xchg
aaa
test
test
jecxz
test
ds
mov
xchg
xchg
mov
mov
mov
push
pop
imul
add
fldl
xchg
xlat
out
mov
orl
cmpsb
mov
pusha
inc
es
push
push
and
insl
xchg
inc
outsl
inc
outsb
lret
and
dec
cmp
nop
sub
aaa
add
or
cmp
aam
add
xor
inc
fdivs
test
jmp
cmp
and
inc
sbb
adc
rclb
in
es
fisttps
mov
pop
insl
les
sub
cmp
stos
out
mov
xor
and
std
push
cmp
fimull
mov
xor
xchg
xlat
xorb
mov
or
cmpsb
std
cmc
bound
sti
pop
xor
negb
mov
add
cmpsl
pop
stos
pop
or
push
sub
mov
and
jl
lea
xor
jp
inc
mov
in
insl
jp
mov
sub
mov
xorb
add
mov
dec
mov
fs
jo
mov
or
mov
push
pop
xor
cmp
out
mov
mov
dec
mov
jns
packsswb
pop
lea
sbb
stos
fwait
pusha
loop
lods
pop
sahf
or
js
add
fucomi
mov
add
add
ss
js
mov
ds
push
loopne
mov
loope
aad
add
cmc
mov
test
popf
mov
cld
addb
push
pop
push
divb
add
popa
jecxz
push
fwait
adcb
add
sarl
xorb
xchg
sti
dec
fistl
in
loopne
pop
jne
dec
icebp
inc
int3
les
and
sub
fs
mov
rclb
addr16
das
xchg
loop
out
mov
jb
mov
pop
clc
or
ds
sbb
sub
dec
inc
movsl
loop
and
add
test
nop
mov
call
push
insb
dec
mov
xchg
or
xchg
inc
stc
shll
aam
out
daa
pop
pop
pushf
cli
mov
enter
flds
daa
cmp
and
dec
out
insb
js
xor
scas
jb
mov
sub
arpl
mov
mov
mov
inc
pushf
and
cmc
cmc
testb
xor
xor
jno
insl
ljmp
ljmp
pop
sub
jns
lock
jbe
sub
adc
lods
sub
iret
repz
stos
movsb
sub
in
xchg
push
push
and
scas
out
push
loopne
fimuls
ret
leave
push
mov
adc
lock
popa
fisubl
pop
add
addr16
adc
insb
inc
ret
movsb
out
in
dec
xchg
fidivl
shl
int3
scas
sub
cltd
rorl
xlat
xchg
sub
popa
je
push
mov
push
adc
adc
test
fistpll
push
addb
das
pop
cmpsl
dec
outsl
dec
dec
bound
in
lods
sub
xchg
test
cmpsb
shll
push
xchg
xchg
sti
jg
sbb
cmp
nop
nop
add
aad
jp
loop
jbe
fucomp
std
bound
scas
in
jg
and
or
mov
jno
jbe
mov
sbb
call
out
fnstsw
hlt
mov
xor
sub
fs
arpl
jns
call
jo
cmp
sub
insb
jmp
loop
inc
mov
push
mov
sbb
nop
es
xchg
ss
test
adc
iret
push
jno
adc
and
sbb
mov
xor
and
fdivl
push
pop
fwait
mov
int
insl
fnstsw
in
mov
lret
push
inc
sbb
aaa
xchg
jb
xor
sbb
dec
cmp
inc
and
dec
shl
fs
jns
rorl
lcall
bound
add
or
fnstcw
sub
pop
ljmp
and
popa
testl
sub
rorb
sbb
popa
in
icebp
cwtl
and
sar
out
adc
scas
push
jle
out
jo
xchg
aaa
xor
imul
hlt
mov
loopne
je
lcall
icebp
jge
cwtl
cmc
mov
xor
leave
rcll
pminsw
idiv
sub
cwtl
pop
movsb
pop
fisubrl
inc
jle
xor
fsubp
cmp
xchg
test
mov
or
addl
in
roll
fistps
fcompl
lds
xchg
idivb
mov
sbb
pop
push
addb
sub
fcomps
in
push
addr16
push
mov
and
rolb
fmuls
cwtl
fs
or
and
pushf
push
daa
bound
push
dec
ret
pop
lret
cwtl
inc
popf
and
sbb
dec
sub
sub
andb
sti
aam
and
jl
out
test
cmpsb
outsb
addr16
sbb
lods
dec
ljmp
inc
into
mov
jb
scas
mov
mov
mov
data16
adc
test
dec
loopne
xchg
push
rcl
pop
sahf
inc
adc
roll
loope
popa
aam
aam
stc
inc
js
dec
cmpsl
sub
ret
dec
push
imul
scas
cld
fstpl
pop
sbb
std
cmp
pop
pop
push
hlt
lahf
into
andl
loope
jmp
pusha
mov
adcl
aas
xchg
xchg
gs
push
shrb
adc
sbb
pop
xor
sbb
adc
xor
sub
mov
subw
mov
das
stos
out
mov
cli
mov
xor
inc
hlt
movsb
lock
or
sbb
mov
idivb
sbb
jecxz
or
repz
lcall
repz
test
daa
test
jp
push
outsb
xor
out
fstpl
dec
in
and
mov
or
pop
sbb
loopne
mov
sub
faddp
arpl
and
clc
repz
in
dec
aam
fnstenv
int
inc
decl
jae
jp
adc
xchg
loop
dec
hlt
xchg
sahf
sahf
and
fs
dec
xor
add
adc
int3
daa
xchg
lret
enter
aas
cmp
ljmp
fcomi
dec
mov
scas
xchg
push
jnp
push
jno
sbb
sbb
inc
ret
sbb
stos
inc
mov
icebp
enter
daa
in
xor
lock
test
imul
push
and
addl
xchg
xchg
jmp
fdivrs
jo
mov
je
cld
negl
add
mov
xchg
pop
xor
icebp
push
popf
shl
cmp
inc
push
lods
mov
push
inc
psubq
push
neg
add
mov
imul
mov
dec
repz
xor
fdivl
xchg
xor
xor
add
lcall
nop
imul
test
pop
outsb
cmp
sbb
lret
fisttpll
and
notb
clc
cmp
sti
leave
sub
mov
jno
aas
je
nop
inc
std
xchg
in
mov
or
mov
pop
cli
cmp
ja
or
inc
and
pop
icebp
xchg
jno
lea
xchg
push
dec
sarb
sub
cmp
jl
sahf
inc
pop
and
mov
or
pop
insl
cld
xor
inc
or
pop
sahf
out
cwtl
inc
cltd
scas
movsl
jb
add
and
sbb
xlat
fsubs
jg
pop
imul
mov
pop
push
fiadds
or
push
popf
in
jbe
push
in
dec
jmp
mov
test
and
and
das
and
jae
movsb
bound
mov
inc
scas
aaa
xchg
int3
sarb
fwait
addr16
pop
ror
jne
add
in
xchg
movsb
pop
sbb
stc
lock
stc
imul
pop
mov
in
cmp
inc
lds
and
out
sti
mov
jge
pop
out
and
lds
or
push
xchg
fs
in
sub
and
mov
imul
daa
or
inc
aas
ss
ficoms
adc
mov
xor
xchg
push
push
sbb
mov
mov
push
icebp
sbb
pop
mov
mov
xor
and
push
mov
sub
dec
lret
cmp
out
mov
out
out
push
xor
scas
iret
out
inc
movsl
adc
push
out
mov
inc
jne
icebp
rorl
paddusw
std
push
mov
mov
sbb
clc
pop
ss
inc
xorb
cli
rcrl
pop
cwtl
push
ljmp
mov
dec
xor
and
mov
xlat
sub
gs
cmpsl
fstpt
push
aaa
pop
rcr
jg
es
dec
add
cmp
xor
daa
push
mov
lods
push
sti
fs
divb
imul
andb
inc
mov
pop
cmp
dec
mov
fdivl
mov
ljmp
testl
adcl
push
mov
pop
xor
sub
pop
popa
je
int3
decb
std
mov
cli
pop
mov
leave
daa
mov
dec
push
push
repnz
pop
push
rorb
inc
inc
dec
out
or
sub
sub
orl
jae
dec
les
adc
mov
add
push
subl
aaa
xchg
xchg
mov
jb
cmpsl
inc
not
mov
xor
out
dec
inc
push
cmp
bound
mov
sahf
imul
xor
lds
xor
mov
cmpsb
xchg
push
test
mov
xchg
sbb
jae
aad
pop
push
mov
jns
imul
pushf
add
mov
inc
ss
dec
and
or
aad
out
xadd
stc
jge
dec
int3
cmp
out
xor
or
jecxz
pusha
push
pop
jg
dec
xchg
mov
pop
mov
stos
add
popf
sub
and
in
sarl
xchg
cmove
or
scas
and
dec
cld
cmp
andb
push
add
dec
and
sahf
lret
sti
in
fwait
jg
call
xchg
mov
add
test
xor
inc
fnstenv
ret
adc
test
pop
js
add
cli
add
pop
or
mov
and
pop
xor
xchg
ja
mov
dec
sub
js
pushf
mov
jns
imul
shlb
lahf
shl
cmp
cmp
mov
scas
push
jbe
cli
jge
mov
sahf
loop
mov
jnp
pop
jge
sub
push
or
sarl
aaa
idivl
xor
mov
mov
push
pop
mov
insb
dec
sub
out
cmc
scas
inc
jg
aad
cmp
push
push
movsb
xchg
xor
stos
pop
add
xor
fildll
adc
stos
add
sbb
in
jle
and
push
dec
sub
mov
adc
pop
inc
jo
es
cld
fisttps
xchg
push
mov
icebp
push
push
andb
xor
jmp
xor
int
xor
ret
mov
mov
jb
lret
or
inc
xchg
mov
and
sahf
imul
pop
jbe
lock
ret
data16
pop
repz
shl
out
lock
sub
aas
cli
cmc
or
xchg
imulb
ret
xor
divl
add
jae
adc
cltd
cmpl
or
push
push
std
loope
adc
mov
mov
js
dec
xchg
movsl
clc
xlat
aaa
sub
into
push
jnp
loop
movsb
sbb
jp
dec
adc
sub
inc
sbb
inc
or
sbb
fcmovu
arpl
je
xchg
js
jnp
cmp
popf
dec
gs
fcomip
lods
stos
fidivrs
push
cltd
push
iret
cmp
or
int3
in
pop
cli
jbe
jbe
cmp
xchg
jnp
and
and
inc
mov
dec
insb
aas
mov
lcall
daa
adc
add
sbb
data16
fdiv
daa
int
dec
stos
jo
cmpsb
leave
fistpll
stc
icebp
inc
cmp
cltd
xchg
test
adc
push
adc
les
dec
cwtl
fwait
dec
cmc
fcmovbe
hlt
fwait
mov
loopne
cmp
lret
or
dec
inc
mov
adc
fsubrl
loope
aad
test
fwait
arpl
jp
cmp
test
cmpsb
sti
and
out
inc
cltd
adc
mul
les
xlat
and
ret
jb
test
add
push
ds
lds
mov
mov
adc
in
lock
mov
aad
loop
sbb
mov
lods
iret
or
xlat
pop
or
mov
sbb
mov
pop
cmp
xchg
sbb
insl
out
or
sbb
pop
jne
pop
lahf
mov
mov
mov
fs
ret
daa
in
es
push
out
rclb
push
push
pop
leave
mov
jno
and
or
inc
bound
or
xchg
adcb
add
int3
imul
fadds
add
and
inc
hlt
subb
adc
cs
call
insb
repnz
shl
lret
loope
int3
popa
cld
and
test
pushf
sti
xor
mov
sar
addr16
leave
arpl
mov
pop
cwtl
fcompl
aad
xor
enter
mov
call
add
mov
sti
lahf
cli
cld
stc
mov
mov
sar
into
ds
jmp
arpl
push
in
xor
push
ss
push
xchg
push
xchg
cmp
leave
out
fsubr
int
push
push
fisubrs
dec
shlb
stos
add
cmpsl
ja
mov
mov
je
sbbb
sbb
aaa
leave
loop
shlb
fsts
fimull
cmp
out
mov
fiadds
push
bound
bound
mov
or
jo
loop
dec
mov
int3
loop
aam
pusha
add
xchg
add
ljmp
push
jecxz
xor
in
aad
inc
or
cmp
aas
inc
shl
xchg
adc
into
cld
xorb
mov
push
das
fsubrs
scas
and
xchg
adc
mov
test
lea
xlat
sbb
test
mov
lock
xchg
pop
xchg
arpl
xchg
or
out
xchg
sbb
push
lods
ljmp
ds
and
cwtl
mov
mov
inc
adc
xchg
cmp
lret
shlb
inc
pop
sahf
mov
in
inc
lret
sahf
push
sbb
repz
jge
in
fwait
mov
and
lahf
dec
jle
out
dec
cld
pop
fdivs
aam
cli
sub
mov
adc
adc
test
or
fisubrs
cmpsl
es
loopne
leave
adc
push
cmp
ret
lret
dec
fstpl
jo
jp
data16
mov
mov
push
jno
lret
jb
pop
iret
cmp
aas
xor
stc
out
and
inc
rcrl
stos
mov
add
negb
dec
jno
pushw
jbe
scas
pop
std
push
fisttpl
jl
jo
pop
test
ret
jae
or
cld
or
xchg
mov
out
fnsave
ss
push
iret
mov
cmp
sbb
push
or
pop
enter
mov
xchg
shll
pushf
jb
les
stc
jo
cmp
push
adc
xor
negl
fists
push
outsb
push
push
mov
pop
add
dec
jle
popa
fisubrs
mov
and
cmc
ffreep
adc
xor
mov
mov
adc
adc
and
daa
mov
sti
mov
into
inc
xchg
imul
sbb
lahf
sub
pop
scas
nop
fcompl
jnp
dec
in
xlat
pop
test
js
lret
xchg
mov
lret
pop
int3
jbe
mov
xchg
lods
or
sarl
fcmovnbe
std
ffreep
js
popa
pop
sub
mov
push
xchg
imul
pop
xchg
int3
in
sbb
inc
scas
jo
inc
or
xorb
aas
cwtl
sub
movsb
scas
mov
jbe
pop
orl
dec
mov
mov
adc
mov
les
add
nop
pop
pushl
mov
adc
mov
push
push
and
scas
cmpsl
sub
jno
cmpsl
aaa
or
out
mov
sahf
test
xchg
cmp
dec
in
jno
vmwrite
cmpsb
jge
push
icebp
dec
inc
mov
cmp
sahf
idivb
movsb
mov
dec
dec
add
aas
push
adc
mov
dec
call
outsb
mov
ss
inc
out
ljmp
and
inc
mov
in
aaa
sbb
sub
mov
xchg
jmp
xchg
shrl
cmp
and
adc
aaa
inc
inc
scas
rclb
adc
out
pop
adcb
inc
push
mov
sarl
aas
push
xor
xchg
pop
adc
xchg
out
loop
test
out
add
pop
or
aad
pushf
mov
repnz
jae
pop
add
popf
dec
adc
add
sub
adc
adc
mov
mov
lcall
lcall
dec
imul
adc
xchg
data16
mov
das
or
xchg
pop
dec
dec
sub
sbb
fimuls
push
or
sub
mov
sahf
jbe
popa
push
in
add
lods
scas
mov
adc
in
ret
dec
mov
sub
mov
sub
xchg
stos
movsb
fistpll
shrb
mov
and
rcl
fildll
jg
push
or
bound
rcll
cmp
mov
icebp
mov
add
and
mov
inc
test
jl
gs
sbb
and
cmpsl
dec
adc
cltd
mov
es
adc
cmp
jbe
ss
orb
sub
mov
pop
or
fisttpll
or
stc
adc
adc
pusha
push
icebp
pop
lcall
out
or
jns
sarb
loope
fnstenv
cmpsb
mov
mov
pusha
pop
mov
adc
jg
pop
or
dec
mov
mov
adc
ja
mov
dec
loopne
add
daa
push
push
xor
dec
popf
jl
sub
loopne
ljmp
addl
add
idivl
aam
or
mov
ror
into
lock
dec
mov
int3
xor
adc
stc
movsl
cmp
es
int
inc
inc
repz
cltd
int3
int
inc
adc
jmp
jns
add
cmpsl
testl
pop
jae
shrl
xchg
ds
add
les
add
pop
pop
xchg
test
mov
cmp
ja
popa
cmp
popa
push
shl
loopne
dec
stos
pop
ljmp
jg
mov
int
hlt
adc
and
push
mov
sub
lods
mov
push
xor
sub
insb
or
mov
or
or
jg
fdivrl
adc
fstpl
cmp
int
fwait
dec
insb
ss
cmp
pop
shlb
inc
and
bound
mov
aaa
rcrl
and
aaa
mov
sti
mov
mov
repnz
fwait
push
fs
and
add
push
dec
pop
lds
pushf
iret
pop
lret
dec
clc
and
and
mov
cmc
cmpsb
bound
les
lock
les
rclb
mov
jecxz
out
dec
jmp
adc
fdivrl
jl
ss
out
lahf
or
test
sbb
sbb
lahf
pushl
inc
ja
add
mov
aam
les
repnz
xorb
cmp
es
orb
fdivrl
add
inc
or
out
aad
cmp
push
popf
out
ret
test
sub
xor
jmp
jns
rcl
ss
adc
jp
stos
sarl
lds
ret
cwtl
pop
mov
leave
pop
stc
dec
push
in
aad
jmp
lock
dec
push
pop
addl
xor
jle
and
hlt
in
mov
loop
mov
lds
pop
stos
frstpm(287
fs
fsub
decl
mov
cmpb
sbb
jae
cmp
cmc
push
nop
daa
pop
push
std
mov
add
dec
test
adc
pop
pop
shll
mov
daa
sbb
insb
out
enter
xchg
jl
test
lock
cli
mov
and
lods
loope
mov
pop
out
ds
mov
jne
in
mov
orl
or
cmp
sbbl
lahf
test
fwait
insb
std
je
push
dec
das
ficoml
jb
mov
mov
fsub
push
mov
scas
scas
mov
adc
mov
rorl
aad
mov
jmp
mov
or
sub
scas
js
ljmp
inc
les
jne
mov
inc
fwait
mov
mov
pop
test
mov
in
jns
pusha
test
add
adc
ss
push
or
bound
adc
cli
mov
outsb
add
pushf
sub
int
in
shll
in
scas
lcall
leave
mov
or
orl
mov
das
or
pop
loop
mov
mov
int
jno
mov
addr16
mov
cwtl
sub
mov
jne
pushf
fucomp
outsl
mov
cmp
xchg
iret
mov
pop
or
mov
push
inc
push
xchg
adc
loop
mov
clc
ljmp
in
lahf
inc
pusha
jo
lcall
push
rolb
xchg
mov
sbb
add
ljmp
sbb
mov
fnstsw
das
pop
pop
inc
pop
jg
sbb
mov
in
push
push
sub
sbbl
sbb
dec
add
xor
pop
stos
stc
xchg
arpl
idivl
push
fidivs
push
into
enter
xchg
adc
push
push
inc
imul
or
xor
in
jno
lcall
pop
add
jno
in
cmp
push
adc
jb
or
addb
xor
ljmp
add
frstor
and
popf
xchg
imul
aaa
ds
sub
leave
xchg
iret
pop
pop
mov
jb
xchg
cmp
pushf
sar
pop
in
rclb
cmp
xchg
or
xchg
adc
mov
cmc
and
sahf
pop
inc
lods
leave
cmp
ss
jp
sti
scas
popa
mov
mov
scas
aam
gs
js
pop
lea
scas
xor
mov
movsl
js
xchg
adc
pop
mov
lret
pop
mov
mov
pminsw
cmp
xor
inc
jle
fstpl
xchg
in
push
lods
jae
xor
movsb
inc
hlt
and
adc
subb
lret
inc
rolb
mov
mov
xorl
arpl
or
jl
fbstp
rol
or
jb
dec
orb
es
or
int3
jle
xor
ja
mov
out
popa
les
and
cmovnp
push
add
in
adc
push
les
adc
inc
loop
sahf
adc
push
scas
aas
mov
mov
pop
jl
add
lcall
dec
cmpsb
sbb
xor
push
rol
mov
sub
into
adcl
inc
movsl
push
into
pop
or
xchg
pusha
xchg
jg
jmp
dec
xor
mov
mov
mov
mov
clc
xadd
mov
dec
jmp
test
fdivrl
in
adc
icebp
daa
roll
shlb
cmp
stos
dec
add
push
ret
cmp
and
fbstp
xor
add
ds
pop
jno
incl
cld
data16
sub
mov
repnz
mov
push
out
orb
dec
adc
shlb
add
adc
aas
pop
push
cmp
sbb
adc
stos
imul
aas
jbe
clc
aam
pop
divl
mov
and
iret
add
mov
sbb
rcll
mov
loopne
inc
sub
push
icebp
adc
scas
xor
arpl
rcr
fimuls
adc
push
shr
ret
mov
mov
scas
sub
or
add
icebp
push
in
negl
outsl
add
leave
fdivs
std
js
filds
pop
push
scas
inc
loopne
enter
cmp
mov
pop
inc
in
popa
and
jp
pop
in
fwait
xorl
jmp
cmpsl
rcrb
cmp
dec
mov
sub
int3
aas
outsb
aas
add
push
es
mov
push
cli
mov
pop
mov
or
jg
mov
stos
xor
mov
sbbl
dec
xchg
loope
cli
ja
cmp
push
adc
iret
fs
leave
test
cmp
or
imul
and
push
pop
dec
cltd
leave
jne
xlat
xchg
mov
cltd
jne
sub
mov
icebp
pop
add
rcrb
add
or
push
subl
fwait
add
cli
xchg
jmp
jns
add
xor
insl
ret
xchg
pop
out
inc
jmp
cmp
mov
xor
test
sub
push
mov
nop
push
cmp
inc
mov
and
jge
sub
mov
adc
icebp
test
add
sbb
mov
inc
dec
jns
pop
mov
sub
push
pusha
je
aam
or
bound
rcrb
das
loopne
repnz
jg
jno
add
dec
gs
or
xor
pop
xchg
cwtl
repz
push
xor
push
cmp
movsl
cmpsb
xchg
cmp
cmc
jl
fwait
pop
imul
mov
aad
mov
dec
cs
sub
jecxz
leave
loopne
js
arpl
mov
cmc
sahf
or
pop
mov
pop
arpl
arpl
add
adc
insl
add
or
popa
jmp
pop
push
cmp
lock
push
xor
lcall
in
int3
loope
or
ficompl
xchg
or
ljmp
or
inc
loopne
mov
or
push
leave
daa
dec
ret
add
push
jle
out
test
js
in
mov
jp
ljmp
push
xchg
adc
jne
dec
lods
push
and
ret
add
test
lret
shll
sti
enter
jg
sbb
sub
test
adc
cli
aam
fcomi
int
or
ds
push
mov
cld
xor
push
int3
push
ret
adc
mov
xchg
push
fmul
in
dec
and
cld
sahf
xor
inc
and
dec
dec
je
xor
shll
mov
jno
add
dec
test
mov
dec
mov
push
popa
jmp
mov
mov
fists
cs
out
addl
push
sub
inc
and
loopne
fyl2x
stos
ss
hlt
mov
dec
cmc
pusha
dec
mov
xor
jbe
jo
int3
pop
lds
xchg
fldt
or
jp
dec
jmp
insb
mov
mov
adc
cmp
cmpb
lods
jp
jmp
add
shl
fcoms
mov
sti
jge
inc
cmc
jbe
into
pushf
call
or
xor
les
movsl
push
dec
das
pop
leave
dec
and
xlat
mov
xlat
pushf
mov
inc
inc
enter
jle
pop
out
pop
xchg
cmc
adc
dec
lods
shlb
test
sub
pop
jne
push
jmp
cmc
dec
mov
fdivr
add
inc
jo
ret
lods
cmp
call
sub
shr
out
and
push
shll
int3
mov
lods
xchg
mov
pop
push
repz
idivb
pop
xor
outsl
sub
test
mov
inc
add
jae
pushf
scas
cs
xchg
dec
inc
lret
popf
aam
pop
ficoms
adc
lea
sub
rcr
or
bound
aad
icebp
fistpl
jno
gs
pop
dec
jne
pop
jae
and
in
in
push
aam
in
jmp
inc
cmp
mov
cld
test
sbb
xor
addl
adc
movsb
xchg
push
enterw
adc
ss
clc
adc
setne
dec
sbb
dec
leave
out
cld
adc
ret
push
rorb
add
dec
pop
xchg
fs
push
sbb
dec
inc
popf
push
mov
mov
into
mov
sbb
fildll
mov
das
lahf
sarb
push
cmp
mov
pop
sarl
ffree
js
cltd
aaa
stos
mov
push
push
push
adc
pop
lret
push
das
dec
stos
mov
scas
sub
lds
pop
jb
clc
push
cmpsb
dec
sarb
fisubs
outsl
sub
sub
in
xor
xchg
or
in
addr16
sbb
cmpsl
mov
mov
mov
callw
mov
add
repz
xchg
ficompl
mov
adc
rclb
mov
add
adc
xor
push
scas
dec
or
pop
mov
sub
pop
mov
pop
xchg
dec
sahf
ja
jo
jno
cmp
mov
adc
sbb
rcl
jmp
inc
outsl
or
int3
pop
push
or
imul
out
mov
cwtl
push
jecxz
stc
or
jle
loop
rolb
adc
adc
in
cmpl
into
jge
call
jae
hlt
call
mov
inc
pop
lods
movsb
push
cmp
mov
fidivrl
jo
sub
sbb
or
mov
add
cmpsb
in
mov
and
cmp
xchg
xor
out
aas
bound
leave
dec
jne
mov
jo
fwait
xchg
add
daa
adc
insb
mov
lock
xchg
lcall
ret
mov
dec
scas
popa
pop
xor
out
ja
int
fadd
bnd
imull
loope
mov
push
and
cmp
mov
mov
xchg
stos
dec
int3
clc
insl
repnz
push
sub
loopne
pop
inc
lret
xor
insb
and
xchg
fsubrl
cli
out
fucom
push
and
or
gs
xchg
add
insl
sahf
or
inc
jmp
notb
adc
mov
cmpsl
mov
aaa
setno
mov
mov
call
dec
icebp
rcll
jo
or
push
cmp
push
or
sahf
lret
pop
jns
mov
inc
test
cmp
lret
je
hlt
jb
shlb
adc
pop
xor
jl
pop
push
addr16
fs
adc
scas
sahf
xchg
fs
push
pop
out
ret
pop
sub
in
lods
jecxz
xor
ffreep
inc
cltd
inc
enter
mov
int3
jo
mov
push
js
ror
mov
lea
push
xor
jecxz
aaa
push
mov
or
cmp
jg
mov
out
loop
test
and
inc
xlat
das
xor
or
bound
push
jg
mov
outsb
divl
jl
jmp
aam
sbb
mov
mov
mov
xchg
fwait
mov
leave
fisubs
lcall
xlat
inc
mov
bound
les
or
add
mov
cmc
cmp
mov
bound
data16
xor
inc
test
lahf
test
xor
xchg
bound
scas
je
fcmove
stos
pop
stos
pop
pop
nop
jmp
pop
inc
mov
sbb
ror
test
adc
leave
mov
mov
cltd
mov
jmp
inc
xchg
rcll
adc
mov
adc
inc
lret
mov
sbb
aad
jns
or
insl
pop
push
fwait
sbb
cmp
or
shlb
xor
mov
cmpsb
sub
ds
orb
jb
pop
int3
in
pop
cmp
in
cmp
stos
jnp
jns
xchg
cmp
popa
sub
neg
pop
lret
mov
and
repnz
iret
jbe
adc
imul
imul
push
cs
jg
sbb
imul
cli
sub
fwait
movsl
out
jo
xchg
mov
loop
cmp
sahf
std
mov
nop
jbe
pop
lds
mov
inc
adc
into
cltd
mov
xchg
imul
cmc
sbb
sbb
js
push
out
dec
cwtl
jne
add
ret
imul
pop
push
xor
das
ret
gs
test
loopne
clc
cmp
lods
stos
js
xchg
mov
xor
xchg
in
push
or
add
imul
cmp
lcall
test
cmp
sti
inc
lret
sti
test
xor
lea
hlt
hlt
xchg
loop
and
jg
mov
cmp
sub
mov
sbb
sub
lahf
push
sub
shll
cmpsb
add
or
arpl
mov
nop
sub
dec
popa
xchg
mov
and
inc
inc
add
jecxz
clc
and
and
addl
cs
sti
sub
in
test
mov
mov
in
sbb
adc
movsb
ss
xchg
sbb
xchg
push
les
cmpsb
dec
xchg
inc
nop
jmp
xor
fcoms
xchg
and
scas
adc
fcoms
roll
pop
pushf
fisubrs
push
fcomp
mov
ljmp
fimuls
xor
lahf
mov
rorb
sarb
mov
push
or
jg
xchg
lds
push
fdivs
in
in
repnz
rclb
arpl
lcall
aam
dec
ljmp
pop
xchg
cwtl
arpl
loop
add
dec
xchg
sbb
mov
stos
cltd
xchg
pop
scas
fs
mov
ret
push
xchg
popf
rclb
mov
sbb
dec
sbb
icebp
pop
test
cmc
xor
iret
nop
and
into
icebp
imul
or
subl
in
addr16
push
inc
aas
loop
and
iret
scas
dec
mov
mov
out
outsl
mov
popl
cs
leave
jns
leave
jno
out
jno
pop
pop
lcall
or
cmp
and
aam
cmpsb
das
cmp
and
push
rorb
mov
aad
inc
xchg
hlt
xchg
sub
aam
xchg
and
sahf
lea
sub
jnp
enter
xor
mov
ds
leave
and
pop
fwait
out
inc
dec
data16
pop
cmp
adc
les
out
xchg
inc
ss
ljmp
inc
cmp
mov
cmpsb
je
mov
lret
mov
shrb
lea
hlt
mov
mov
mov
aas
xor
mov
cmp
mov
cmc
xchg
fnsave
or
mov
jb
xor
pop
mov
call
mov
insl
cmpsb
fisubrl
mov
mov
fildl
scas
jae
sbb
push
sub
loop
stos
popf
in
sub
inc
mov
cmpsl
pop
cmp
sbb
cmpsb
adc
dec
mov
pop
lock
adc
mov
xor
outsl
clc
aas
bound
inc
and
dec
ret
in
lret
mov
mov
cmpsb
popa
rorb
push
pop
cmp
pop
mov
push
sbb
ja
into
mov
fadds
mov
insb
stc
pop
mov
adc
xor
adc
inc
mov
arpl
cmpsb
mov
jo
loop
subl
mov
pusha
pop
pop
and
add
jns
or
push
xor
test
xchg
out
mov
jg
sub
call
imull
jle
ljmp
sub
aam
negl
cli
add
sub
aad
stc
and
push
cmpsb
imull
shll
sub
cmc
dec
hlt
and
mov
jns
cmpsl
jl
repnz
mov
and
rorl
jecxz
je
lahf
out
sahf
in
test
and
sbb
leave
and
shl
jno
in
lcall
pop
out
out
sub
dec
into
inc
in
cltd
insb
fs
mov
bound
ljmp
sarb
push
xchg
push
fidivs
mov
fdivrl
adc
cmp
lahf
xchg
fs
fldt
mov
in
mov
xlat
or
or
add
xor
and
aam
ds
out
nop
stc
arpl
push
or
xor
sbb
lds
dec
xor
out
dec
cmp
int3
int3
pop
dec
lahf
outsl
or
lods
sub
add
ret
sub
fisttpl
arpl
enter
add
cmp
inc
xchg
out
jecxz
sub
mov
rcll
pop
imul
sub
daa
push
aam
dec
imul
pop
std
les
or
mov
data16
arpl
mov
pop
xchg
orl
rcrb
idivb
sub
or
inc
lock
xor
or
dec
lock
pop
lock
add
add
dec
lock
pop
lock
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
