push
add
push
mov
add
idivb
lea
push
incb
aas
pop
prefetchnta
pushl
add
aaa
push
adc
cmp
je
sti
orl
out
sbbl
push
push
push
cld
enter
jmp
or
in
lret
cwtl
sub
mov
mov
pop
pop
leave
ret
mov
mov
into
incl
push
push
lea
mov
add
push
fnstenv
ret
lods
out
inc
add
test
xchg
lock
jne
pop
pop
clc
pop
imull
rol
cmpsl
sbb
call
add
and
pushl
add
lock
mov
int3
je
add
inc
or
jne
inc
xchg
loop
push
fnstcw
sub
add
inc
test
decl
call
add
jmp
cmp
sarb
push
jbe
cmp
fcomps
push
repz
push
stc
insb
inc
fildl
scas
and
pushf
sbbl
into
push
inc
adc
or
push
add
and
iret
dec
add
or
shrl
add
or
shll
add
cmp
aad
add
sub
xlat
pop
add
sub
fstps
add
sub
fcompl
add
lar
dec
add
inc
add
push
add
add
loop
push
jecxz
and
adc
in
and
cmp
out
and
or
ljmp
xor
and
push
add
dec
add
cmp
icebp
adc
repnz
add
pop
add
aaa
add
sbb
notl
clc
sub
stc
sbb
adc
pop
mov
cld
call
mov
inc
enter
nop
add
sbb
xor
sbb
adc
es
test
shll
pop
adc
je
xor
inc
adc
adcl
mov
out
sbb
mov
cmp
icebp
jb
mov
icebp
sub
dec
mov
lea
lret
and
inc
mov
adc
sarb
and
mov
pushf
xchg
adc
or
andl
sub
clc
dec
mov
pop
pop
mov
stos
or
fmuls
aas
mov
mov
mov
loopne
mov
out
xor
inc
adc
push
sbb
pop
movsb
adc
jb
xor
sbb
jns
dec
fcmovbe
or
and
or
cmp
movsl
arpl
loopne
fnsave
push
mov
pop
push
mov
xor
lock
push
cmp
or
inc
xchg
lods
pop
push
sbb
sbb
iret
push
popa
movsb
mov
movl
outsb
fsubrs
or
sbb
mov
test
or
jecxz
outsl
movsb
jnp
std
es
sub
push
lds
shlb
test
xor
adc
sbbb
sbb
in
fwait
push
hlt
or
inc
adc
xor
test
rcrl
mov
or
sub
mov
enter
scas
jbe
push
xorb
xchg
pop
push
and
loop
clc
daa
imul
xor
cs
xchg
insb
sbb
punpcklwd
mov
test
sub
adc
sub
push
call
mov
push
repz
lea
and
add
je
push
sub
mov
fwait
or
mov
aad
daa
xor
adc
sarb
sti
je
push
lock
mov
in
enter
test
sbb
or
mov
adc
popa
or
or
inc
and
lock
call
or
popa
mov
jge
nop
les
je
adc
fs
mov
xor
jae
xor
js
and
lock
adc
pop
adc
push
or
addb
jne
or
add
or
xor
insb
sub
push
shrb
cwtl
dec
jle
sbb
and
jge
sub
sub
sub
cwtl
xor
test
mov
lods
int3
inc
mov
xchg
or
shlb
cmp
movsb
sbb
sub
or
inc
fdivl
mov
lret
xchg
arpl
sub
or
int3
les
js
arpl
les
push
test
adc
outsl
or
pusha
nop
push
aam
inc
or
xchg
jp
push
adc
dec
xor
sbb
and
sbb
nopl
mov
and
or
in
xor
addr16
sub
push
les
js
clc
xor
inc
cwtl
and
adc
xor
mov
test
and
push
cmp
and
cmovl
adc
test
add
adc
call
test
daa
dec
popa
fs
and
dec
pop
inc
inc
roll
sub
bound
cmp
dec
dec
or
dec
or
rol
jl
aam
nop
or
mov
sub
nop
jl
jo
or
loop
shl
xor
loop
and
dec
dec
scas
mov
leave
das
std
jp
sahf
into
inc
pop
inc
sub
shlb
sub
out
call
xor
nop
or
aam
and
lods
je
dec
or
rclb
out
add
je
inc
in
dec
inc
int3
and
aam
adcl
or
popa
inc
lret
fs
jno
sub
sub
ret
sub
out
orb
mov
fs
xor
je
or
int
enter
adc
loopne
xor
sbb
dec
dec
call
and
xchg
xor
or
xor
test
xchg
and
xchg
mov
xchg
mov
xor
lret
sbb
or
mov
and
or
push
sbb
jo
sbb
sbb
and
and
pushf
bound
mov
inc
inc
and
les
je
lahf
adc
sbb
sub
or
sbb
test
xor
adc
enter
xor
movsb
and
xor
movsl
cmp
dec
or
fs
mov
adc
sbb
or
test
sbb
bound
fmul
and
or
inc
imul
pusha
inc
pop
or
dec
or
mov
cmp
inc
cmp
inc
adc
test
sub
insb
xchg
push
pushf
lret
push
hlt
adc
xchg
nop
lock
lret
or
inc
and
movsl
call
mov
pop
bound
and
out
inc
or
subb
or
mov
or
mov
jbe
cmp
jno
xor
pop
xchg
mov
test
xchg
mov
sbb
add
test
call
call
sbb
sbb
das
mov
dec
and
testb
mov
adc
adc
lds
rcll
adc
cwtl
incl
int3
mov
sbb
jo
aaa
mov
adc
adc
sbb
or
mov
cmp
adc
mov
int3
fs
mov
or
xchg
and
fs
addr16
inc
or
lret
inc
pop
or
or
inc
dec
sbb
lret
jnp
sbb
mov
add
or
or
dec
rolb
loope
gs
pop
dec
inc
test
adcb
test
out
cli
fcoms
movsb
mov
adcb
push
adc
movsl
dec
lahf
and
xor
or
iret
push
and
notb
push
inc
push
and
jge
dec
nop
pusha
enter
je
xchg
sub
inc
xor
lock
cwtl
inc
movsb
push
adc
lret
inc
cld
movsl
dec
inc
movsb
xor
jl
fsub
lock
dec
cmc
mov
xchg
fisubl
dec
inc
lret
and
xchg
add
xor
jae
les
mov
inc
dec
cmp
inc
and
es
and
out
fmul
xor
mov
mov
mov
jne
add
pop
pop
pop
ret
push
mov
or
xor
idivb
xor
jge
je
sub
pop
push
mov
add
test
push
call
push
adc
push
xchg
push
movsb
lods
pop
test
xor
push
sbb
mov
or
pop
nop
pop
loop
sbb
div
jb
cmp
aam
xor
insb
jno
or
inc
std
mov
je
or
inc
enter
inc
js
jl
inc
and
xchg
pop
daa
or
adcb
or
repz
cmp
lods
mov
xchg
jno
or
inc
cld
mov
and
mov
movsb
cmp
and
test
lods
les
arpl
aam
sub
lock
adc
jne
jno
call
mov
adc
push
xchg
inc
push
popf
cmp
jge
mov
jle
divl
sbb
add
test
int3
je
arpl
inc
loopne
daa
jo
add
sbb
in
sbb
sbb
divb
call
xor
imul
or
and
lods
leave
jne
sar
jle
mov
and
rorb
sub
ret
add
add
rcrb
lock
pop
push
push
sub
sbb
daa
sub
or
ret
mov
out
aam
adc
test
je
call
mov
sbb
and
ret
subb
faddl
push
mov
lods
pop
inc
arpl
mov
lock
inc
sub
shrl
and
or
pop
push
push
sub
jmp
scas
cli
dec
out
or
sub
clc
call
mov
push
test
stc
adc
adc
xchg
aam
bound
xchg
xchg
sbb
push
enter
imul
and
imul
and
cld
xchg
ret
cmpb
cmp
jbe
out
pop
add
cmpsb
loope
inc
add
mov
rclb
push
pop
mov
mov
mov
adc
aas
movzbl
repz
repnz
icebp
adc
inc
sahf
hlt
sub
int
rcrl
xor
std
fiaddl
or
dec
inc
lods
add
test
push
shr
jns
neg
lea
inc
push
sysret
mov
add
inc
adc
negb
jmp
and
test
pop
je
add
and
mov
jmp
jg
call
mov
movsl
or
inc
test
cld
data16
enter
cmp
sub
or
int
fmuls
mov
add
add
out
push
stc
cmp
sbb
mov
mov
test
call
mov
or
in
inc
xor
test
adc
pushf
pop
adc
xchg
pop
fs
cmp
mov
pusha
icebp
hlt
add
sarb
div
mov
inc
adc
dec
jecxz
in
enter
adc
xor
fistpll
loopne
push
xchg
mov
jno
push
inc
pop
cmp
in
ds
notl
dec
cmp
adc
ret
jne
mov
push
adc
jge
cmp
and
cmpsl
int3
loop
adc
daa
into
shlb
adc
xor
cmp
and
adc
ds
or
xchg
rcpps
dec
add
push
mov
dec
or
ljmp
cwtl
es
add
add
and
mov
xor
into
imul
add
mov
out
jb
push
push
cltd
shl
push
add
sub
call
cmp
jb
movsl
mov
add
mov
les
add
mov
push
push
inc
lret
je
xor
addb
jae
xchg
push
push
mov
lret
in
cmp
xchg
sub
sbb
lahf
movsb
pop
xorb
cmp
je
imul
je
call
or
insb
test
or
add
sbb
mov
enter
dec
jne
inc
adc
test
ret
test
popf
dec
pop
cltd
in
xor
push
mov
adc
adc
inc
dec
xor
sub
mov
js
add
and
cmp
jmp
jo
push
push
shr
sub
xor
ficoms
mov
inc
leave
push
mov
cmpl
jle
xor
add
mov
lcall
movups
or
out
sbb
sbb
mov
or
push
or
xchg
pusha
mov
les
dec
cmp
or
xor
fimull
push
push
into
mov
or
incl
xor
cmp
pop
push
pop
xchg
pop
ja
or
cmp
and
jl
fildl
jo
imul
add
xchg
sbb
push
push
cmpsb
push
inc
pop
pop
or
fs
jno
mov
add
mov
mov
adc
insb
sub
hlt
xchg
jle
add
data16
movsl
js
enter
hlt
enter
or
std
std
jg
and
push
mov
rorl
add
pusha
sub
mov
je
popf
or
sbb
jmp
mov
das
push
call
and
sbb
mov
sbb
adc
ret
xchg
scas
clc
add
inc
lock
test
je
add
dec
dec
mov
add
cmpl
jl
or
add
xchg
add
adc
stc
movsl
xchg
mov
jb
dec
cmp
pop
cmp
sbb
dec
nop
and
add
enter
inc
or
test
inc
hlt
mov
mov
cli
mov
add
ret
enter
inc
or
rol
xor
lea
movsl
movl
and
stos
icebp
sbb
lods
jmp
lcall
inc
fwait
je
test
adc
or
inc
mov
or
inc
jo
adc
sbb
xor
xor
fs
clc
cli
adc
imul
add
sbbl
loop
and
add
sub
adc
mov
cmpsb
js
xor
mov
or
xchg
decl
push
mov
pop
enter
negb
xor
repnz
rcl
xor
mov
pop
inc
mov
sub
cmpsl
xchg
test
add
jne
push
xor
cwtl
sbb
je
xor
mov
call
pop
mov
add
sbb
jo
add
add
enter
pop
mov
add
mov
sbb
pop
pusha
add
xor
in
les
fists
sub
mov
push
je
mov
mov
es
mov
sbb
sbb
rcll
push
add
repnz
cmp
jo
or
addb
mov
int
cmc
mov
sti
cmpsb
jecxz
and
dec
mov
dec
or
mov
push
mov
xchg
mov
adc
xchg
lret
mov
adc
call
sub
out
add
repz
inc
movb
je
and
push
test
cli
lcall
cmp
or
inc
cwtl
in
jmp
xchg
jns
xor
sbb
mov
mov
lods
stos
jge
dec
jle
fcmovnb
ret
pop
xor
add
push
lods
lock
pop
sbb
cmp
call
sbb
pop
enter
sbb
and
loope
inc
orb
xchg
js
inc
call
push
pop
push
mov
jge
push
adc
loopne
pop
or
mov
call
push
repz
fs
and
jmp
mov
pushf
push
sbb
dec
cmp
mov
cmp
add
dec
or
mov
rclb
cmp
les
cmp
test
in
es
in
xchg
pop
cmp
aas
mov
mov
cmp
dec
add
add
xor
and
push
add
jmp
jge
cmp
mov
nop
push
push
mov
adc
sti
cmpb
or
outsb
fimull
repnz
push
and
pop
in
incl
jb
test
adc
and
push
pop
icebp
push
cmc
jl
int
inc
or
lret
jp
mov
sbb
or
and
loope
loopne
push
mov
test
push
push
inc
or
movsb
aaa
push
mov
scas
js
cld
hlt
gs
int3
jge
sub
test
shlb
daa
push
popa
jl
call
add
push
sub
call
cmp
adc
imul
mov
push
mov
add
jmp
cli
and
inc
std
cs
and
or
xchg
fwait
pop
addb
jno
inc
jne,pn
dec
in
enter
inc
xlat
or
sub
push
cmp
xchg
adcl
xchg
popf
in
in
push
sub
data16
addr16
and
lods
out
movsl
lods
or
repz
inc
and
mov
lods
dec
mov
es
dec
jmp
push
loopne
xchg
sbb
or
mov
je
mov
pusha
xchg
dec
xchg
xchg
mov
adc
add
and
jbe
dec
sub
and
inc
inc
cwtl
scas
xchg
fisubl
or
pop
sub
inc
sub
pop
adc
adc
cmp
and
insb
and
pop
jle
add
push
inc
inc
push
stos
and
mov
and
push
dec
sub
lods
jb
dec
or
loop
cwtl
inc
push
insl
dec
adc
and
lds
test
shlb
sub
xor
adc
int3
push
arpl
add
add
add
inc
or
and
lods
imul
shll
loope
add
jno
stc
jle
push
xchg
cmp
jb
out
xchg
cmp
add
push
sub
adc
mov
scas
bound
out
fisubs
pop
or
inc
push
and
icebp
movsl
lea
and
adc
sbb
push
sub
int
add
dec
mov
insb
inc
xchg
test
mov
add
push
or
loope
nop
sbb
mov
mov
out
and
or
dec
js
xor
mov
push
and
cmp
inc
inc
inc
adc
gs
mov
push
inc
cmp
dec
xchg
daa
andl
cwtl
or
test
and
mov
add
cmp
mov
ja
and
adc
test
dec
mov
inc
or
add
xchg
mov
adc
pop
in
cmp
mov
mov
or
icebp
sub
push
inc
add
add
pushl
mov
pop
sbb
repz
ror
and
inc
xor
sub
pop
jmp
sub
and
movsb
sbb
adcb
add
inc
inc
or
cs
push
ret
addl
ss
sbb
push
or
clc
adcl
jne
mov
and
fdivl
push
push
and
push
pushf
push
jg
jo
inc
or
and
push
imul
push
pop
adc
inc
pop
imul
dec
fisttps
xor
out
test
adc
ljmp
sbb
pop
mov
nop
mov
popf
mov
jmp
dec
dec
shlb
inc
add
adcb
xchg
out
push
sub
or
xchg
mov
sbb
xor
mov
sub
insb
es
pop
cli
cs
sbb
fists
adc
push
popa
ffreep
loopne
cmp
adc
mov
pushf
mov
and
or
adc
dec
icebp
sbb
cmpb
je
mov
add
xchg
or
es
out
cli
ss
mov
or
ret
or
mov
jns
adc
xchg
dec
sbb
dec
pusha
cmp
shlb
push
pop
sub
cmpsb
iret
adc
xor
jae
test
mov
inc
xor
jae
sbb
push
call
xchg
loopne
jbe
movsb
xor
jnp
popw
hlt
out
push
lock
cmp
lea
in
sbb
clc
mov
push
fcompl
mov
adc
adc
jge
sbb
hlt
push
lcall
hlt
push
sub
loopne
mov
movsl
sub
cld
test
or
dec
mov
cld
pop
jno
or
mov
mov
cmp
add
ss
stc
aas
nop
xchg
bound
fsubl
mov
test
inc
call
sub
jne
out
in
in
dec
push
and
sbb
adc
out
add
cmp
call
add
std
sub
shr
sti
jmp
out
mov
lahf
adc
cmp
jmp
pop
dec
xor
out
sub
fdivr
mov
fstp
adc
mov
or
adc
sbb
or
xchg
push
or
dec
xchg
inc
xor
icebp
psrad
mov
xlat
in
dec
push
jg
loopne
imul
mov
cmp
push
push
mov
lods
xchg
pushl
pop
clc
call
je
imul
push
cmp
dec
xor
gs
out
cwtl
lret
mov
outsb
or
addb
dec
sub
inc
cmpb
xchg
lds
adc
mov
cld
xor
cmp
test
inc
sbb
adc
push
or
out
inc
pop
jg
push
test
and
xchg
lods
inc
pop
and
xor
jge
push
xor
test
inc
push
and
js
push
or
add
pop
sbb
adc
jmp
or
push
adc
sub
inc
mov
sarb
insb
add
scas
xor
add
cmp
mov
cmp
and
and
push
mov
or
add
jle
push
dec
sub
jb
popf
xor
and
in
mov
jle
adc
sarl
mov
repz
stc
add
mov
test
mov
push
mov
test
loope
xchg
push
rolb
sub
jl
cmp
dec
stc
movsl
push
or
lret
inc
jmp
xor
daa
test
xchg
negb
into
fildl
pop
sub
inc
xor
out
and
and
sbb
popa
inc
inc
push
call
pop
xchg
mov
jmp
test
cmp
and
xchg
add
add
mov
or
dec
dec
mov
or
outsl
inc
push
dec
and
sbb
and
mov
nop
test
clc
out
gs
adc
push
les
or
test
enter
and
pop
mov
inc
dec
jp
nop
mov
sbb
gs
xchg
and
lea
test
es
xchg
and
outsl
ror
mov
and
sbb
enter
push
or
inc
dec
rorb
clc
push
nop
xchg
shlb
lock
xorl
jns
add
jmp
test
push
adc
jge
adc
fidivrl
jne
lods
push
sbb
mov
mov
xchg
dec
clc
test
mov
push
or
push
int3
dec
or
jmp
sbb
call
add
cmp
adc
mov
inc
and
in
mov
push
and
nop
pusha
mov
push
repnz
or
incb
sahf
adc
and
test
mov
inc
mov
sahf
sbb
or
adc
jne
add
dec
and
adc
push
adc
or
dec
push
sub
cli
in
inc
adc
and
push
inc
shll
nop
sub
push
dec
aad
xor
inc
icebp
add
or
push
call
lret
push
adcb
inc
pop
push
dec
adc
movsb
inc
mov
adc
jbe
fsubs
mov
shll
aad
loop
mov
punpckhbw
adc
repnz
push
and
mov
jg
xor
jae
inc
inc
dec
push
and
cmp
xchg
rclb
inc
lock
sbb
jnp
adc
xchg
push
movsb
mov
aad
xor
inc
sub
adc
rorb
loopne
sub
sub
hlt
cmp
inc
fwait
mov
insb
or
dec
sbb
jmp
test
xlat
loop
add
cmp
test
dec
adc
inc
push
sub
inc
cltd
enter
daa
enter
mov
mov
pop
mov
inc
jge
test
cmp
aam
xor
stc
and
adc
sub
adc
clc
test
mov
inc
call
or
inc
xor
loope
test
adc
inc
sub
mov
outsb
xor
mov
inc
and
adc
and
nop
pusha
mov
out
adc
inc
insb
and
xor
or
movsl
nop
orb
test
frstor
loopne
negb
cld
or
test
push
and
sub
xchg
and
adc
mov
test
enter
and
jne
testb
jge
sbb
out
movsb
movzwl
or
lahf
fxam
fsubl
push
push
lret
jg
sub
rcrb
lea
and
adc
adc
aam
fildll
push
and
mov
or
mov
adcl
inc
pusha
and
adc
les
enter
into
fdivl
rorb
mov
sbb
or
nop
xchg
clc
inc
sub
jb
jae
mov
or
and
push
or
test
in
fiadds
or
test
ret
sub
xchg
and
adc
test
pop
and
and
outsl
or
xchg
nop
sub
pop
pop
orb
inc
inc
enter
and
push
inc
cmp
mov
or
dec
test
enter
and
fnsave
mov
aad
test
jmp
call
psubsb
xchg
and
pop
clc
jne
xchg
ljmp
or
push
and
jmp
rclb
loope
fldl
arpl
dec
add
pop
adc
push
rcl
sahf
push
xor
mov
jl
dec
xchg
and
rcl
int3
add
push
call
mov
xchg
sbb
jmp
sbb
push
mov
imul
push
call
adc
push
mov
jb
pop
push
les
adc
push
adc
add
or
pop
stos
inc
faddl
adc
inc
je
andl
insb
test
lock
sbb
or
nop
sbb
pop
and
adc
or
sbb
js
add
pop
test
adc
mov
or
push
push
mov
les
scas
test
and
cmp
mov
cmp
pop
and
into
aam
cltd
push
sbb
sbb
jo
push
enter
adc
lods
call
add
lods
jmp
test
jae
push
int3
and
pop
adc
pop
and
fimull
jne
jae
mov
lcall
data16
lret
cmp
and
inc
mov
test
lods
int3
mov
call
int
jmp
mov
cld
adc
icebp
popf
mov
xor
adc
rclb
mov
mov
es
mov
sub
inc
test
bound
icebp
sarb
icebp
test
dec
xchg
pop
es
aaa
sbb
stos
or
sub
mov
push
ret
inc
or
sbb
xor
push
and
or
sbb
add
enter
sbb
add
sarl
push
int
jo
clc
rcrb
lock
test
js
sar
sub
push
sbb
and
mov
cmpsb
je
push
mov
and
testb
inc
fmul
xor
cltd
lret
inc
movl
jmp
inc
repnz
shl
mov
mov
pop
sbb
adc
sbb
lahf
pop
pop
rclb
jmp
mov
mov
testb
add
test
push
out
push
adc
mov
xlat
add
popf
add
in
inc
les
push
inc
pop
add
sti
mov
jle
cmp
sbb
movb
ds
test
inc
das
addb
mov
iret
test
test
xor
mov
fcomps
adc
mov
dec
daa
xchg
dec
andb
push
push
fdivs
out
fcoml
clc
or
popa
shl
and
inc
adc
pop
and
push
out
xchg
sbb
and
xchg
mov
push
dec
push
adc
jno
add
sar
or
inc
movups
clc
lods
adc
and
inc
jno
inc
pop
adc
sarb
sub
sub
xor
or
jno
jmp
mov
hlt
stos
dec
xor
add
lods
stos
cmpb
test
enter
adc
in
sbb
push
mov
rcrb
inc
pop
rorl
fisubs
mov
test
and
shll
sbb
push
jg
mov
and
lods
mov
pop
in
in
mov
out
sbb
inc
in
dec
int3
and
inc
add
enter
xchg
mov
add
push
ret
adc
lods
sarb
arpl
mov
inc
inc
mov
or
and
sti
pop
lods
add
or
clc
lret
or
std
roll
push
adc
dec
adc
cmp
xor
and
sete
and
inc
je
xchg
test
push
nop
xchg
into
fldcw
sub
push
stc
rclb
cmp
mov
inc
call
cmp
push
jmp
add
sbb
pop
in
pop
int
pushf
xor
mov
sub
inc
lds
lods
mov
out
dec
cld
and
dec
push
adc
pop
test
sub
lret
sbb
test
into
mov
add
mov
adc
adc
mov
inc
cs
sbb
call
bound
xchg
mov
push
push
jmp
mov
jno
xor
or
xor
dec
mov
inc
movsl
into
mov
stos
fcmove
inc
adc
test
mov
xchg
dec
push
dec
enter
out
movsl
jno
add
sbb
sub
inc
out
pop
push
nop
jb
sbb
or
push
cmc
rorb
adc
cmp
andl
or
out
mov
xor
ds
adc
out
sar
outsb
lock
shlb
not
inc
out
inc
xchg
inc
push
out
push
gs
daa
add
sbb
call
add
add
mov
add
call
mov
in
add
push
mov
stc
cmp
jae
fucomi
push
jp,pn
dec
flds
fidivl
or
rol
push
mov
rclb
xchg
mov
nop
pop
pop
jmp
or
jnp
lret
push
pop
adc
and
std
shl
ds
jl
out
push
jp
movsb
or
mov
ss
les
jmp
cltd
sbb
sbb
xor
or
or
lret
xchg
push
mov
adc
in
int
jne
int
inc
adcb
cmp
jae
or
push
xchg
sub
or
or
mov
inc
mov
dec
cmp
and
jns
lea
movsb
push
loope
add
call
lds
mov
push
push
insb
bound
and
mov
mov
sub
inc
lret
inc
loop
or
int3
popf
and
ss
sbb
mov
xor
lock
mov
xchg
mov
les
leave
or
mov
pop
xor
shl
xchg
call
sbb
ds
inc
ror
outsb
mov
adc
mov
adc
push
aam
and
lea
sarl
int3
jle
loopne
mov
dec
add
test
dec
stos
dec
movsl
into
pushf
fs
xchg
test
in
sahf
sub
push
and
sub
addl
bound
mov
sbb
sbb
cltd
lret
sahf
les
fildl
mov
ljmp
sub
pop
daa
adc
leave
sbb
mov
mov
cltd
cld
adc
out
in
jmp
sub
lock
ljmp
mov
mov
pop
mov
ljmp
xchg
inc
in
ljmp
mov
adcb
fmul
mov
inc
aaa
call
and
push
mov
push
es
or
enter
push
xor
int
pop
xchg
pop
sbb
push
fsts
movsl
add
sbb
sub
hlt
mov
mov
xchg
int3
hlt
or
sub
jl
push
inc
ds
mov
out
sbb
xchg
xor
adc
adc
frstor
jb
sbb
jg
mov
stos
dec
lahf
xor
inc
and
dec
push
int3
push
test
and
jmp
push
jb
ljmp
movsb
mov
inc
pop
cmc
loopne
sbb
and
nop
dec
or
jmp
enter
and
ret
call
add
xchg
push
inc
popa
and
jl
mov
lret
es
push
dec
cmc
and
mov
in
xlat
inc
push
push
or
mov
inc
xor
push
jnp
mov
cmp
jo
cli
cmp
adc
and
mov
push
add
xchg
pop
mov
push
and
je
mov
cmpb
movsb
fistpl
pop
pop
loopne
mov
mov
mov
call
add
adcl
cmc
les
and
sub
je
test
fdivr
bound
dec
xor
je
rolb
xorb
fstps
push
movl
sbb
test
jg
and
sbb
in
loope
inc
popl
inc
cmp
jo
jl
push
ror
push
mov
jne
mov
int3
dec
test
pushf
ret
fs
fucomp
mov
mov
push
inc
push
add
pop
and
add
sbb
and
and
je
clc
dec
das
pop
fsub
inc
notl
scas
leave
sbb
and
popf
adc
es
dec
addr16
mov
insb
cmc
rol
push
insb
xchg
cmp
inc
mov
in
ja
aas
hlt
lret
cmp
mov
movsb
imul
int
sahf
pop
and
adc
and
push
sub
faddl
inc
cmc
sbb
push
cld
cmc
or
cmp
mov
cmp
lds
mov
xor
movb
adc
or
adc
and
ss
add
les
and
cmp
clc
add
jge
mov
cwtl
enter
pop
cmp
lea
je
push
es
pushf
inc
dec
adc
mov
or
cmp
xchg
sub
call
xchg
mov
sti
cs
or
cmp
dec
pop
leave
and
inc
movl
les
test
repz
cmc
push
push
mov
mov
inc
inc
jge
mov
dec
inc
xor
inc
sub
sbb
sbb
enter
call
unpcklps
adc
shl
subb
mov
xchg
rclb
push
xor
mov
aad
or
mov
call
movl
xor
loope
shlb
jo
ljmp
sub
out
mov
jbe
dec
leave
or
mov
or
jno
leave
xchg
jo
mov
mov
out
shr
repz
fstl
cld
flds
repz
push
leave
adc
sti
mov
dec
mov
push
push
jle
into
push
pop
and
xchg
fdivrp
mov
in
cmp
and
test
aaa
cmp
xchg
pop
jg
cmpsl
loope
out
and
lds
cmp
dec
test
adc
pusha
mov
cmp
mov
and
jmp
mov
jbe
nop
js
rcr
es
lods
pop
sbb
test
push
xchg
cld
insb
dec
jne
cmp
xor
and
popf
rcll
xchg
push
mov
iret
push
aad
test
cmp
aad
scas
lret
data16
mov
mov
lret
mov
push
ret
ret
test
push
rclb
pop
mov
adc
bound
in
shrb
rcrb
repnz
roll
adc
mov
push
mov
mov
inc
fsubs
fcoml
and
nop
loopne
outsb
js
push
test
cmp
clc
adc
les
ficoml
adc
add
imul
popa
inc
xchg
movsl
cmp
mov
test
iret
jg
or
and
mov
nop
sub
sbb
mov
bound
xor
nop
push
repnz
or
and
ret
or
xchg
pushf
or
xor
es
add
decl
pop
inc
mov
mov
and
inc
andb
sbb
and
and
or
inc
lsl
stc
adc
and
or
pop
mov
sbb
push
je
pop
movsl
jns
jmp
ffreep
jb
xor
dec
mov
dec
mov
or
xchg
and
in
sub
imul
xlat
arpl
lods
xchg
aaa
inc
push
cmp
adc
ret
mov
inc
movsb
sub
fimull
jae
shll
mov
jbe
enter
mov
mov
rorb
and
test
ret
and
lods
push
ret
icebp
sbb
aad
or
adc
mov
or
inc
lock
mov
test
inc
mov
adc
cs
xchg
inc
enter
inc
sti
or
dec
push
push
ficompl
inc
popa
cmp
bound
cli
mov
lock
scas
and
add
fwait
dec
pop
inc
rorl
or
xchg
and
in
jl
test
adc
jb
fisttpl
pop
xchg
bound
idivb
clc
out
and
daa
inc
fbstp
mov
les
and
or
xor
test
inc
dec
loopne
cmp
mov
dec
sahf
xor
sub
push
inc
sbb
int
mov
mov
ret
movsb
sbb
cmp
mov
sarb
icebp
mov
pop
dec
lea
lds
adc
mov
xchg
mov
repnz
sbb
xchg
xor
cmp
sbb
out
movsb
test
sarl
sub
lods
nop
add
imul
jb
xchg
fildl
mov
mov
aaa
and
inc
loopne
insl
loop
dec
xor
ss
mov
mov
xchg
pop
inc
add
push
and
or
mov
push
dec
test
sbb
daa
les
sbb
lock
jns
push
cmp
push
es
dec
add
mov
cmp
xchg
enter
sub
push
adc
mov
mov
repnz
sub
int3
adc
mov
xor
test
dec
test
repnz
dec
jg,pt
add
je
pop
push
mov
push
call
jl,pt
jecxz
dec
or
mov
xor
insb
movsl
aas
notb
data16
inc
mov
test
mov
and
adc
mov
mov
orb
das
nop
insb
mov
sbb
test
les
sub
adc
cmp
push
pop
sub
add
sbb
in
mov
mov
xlat
sub
xchg
and
bound
nop
adc
mov
or
test
cmc
cmp
adc
adc
inc
ret
and
inc
enter
daa
cmp
or
test
enter
mov
pop
into
cmp
sub
xchg
sbb
lock
inc
xor
adc
or
xor
inc
pop
add
andb
push
inc
lret
adc
test
enter
fisubrs
jb
nop
jge
and
cli
sbb
dec
test
and
push
inc
dec
and
or
jmp
mov
and
lock
pop
push
or
inc
imul
inc
dec
and
cwtl
adc
xor
adc
in
or
push
call
test
adc
lods
pushf
dec
lret
cmp
out
jns
mov
cltd
add
jne
mov
in
shl
adc
push
ret
mov
imul
clc
pop
mov
or
add
das
sub
and
stos
shl
push
cmp
test
inc
cmp
inc
icebp
mov
adc
xchg
imul
dec
movsb
xor
add
mov
pop
and
push
add
addl
xorl
adc
pop
pushf
inc
cmp
movsl
push
adc
pop
and
push
pusha
and
addb
test
adc
adc
adc
lock
ret
jo
mov
mov
lock
and
inc
stmxcsr
and
lock
fists
std
arpl
inc
lock
inc
and
xchg
in
popa
xor
pop
push
mov
push
das
dec
inc
push
loope
imul
in
adc
or
cmp
mov
cmp
push
adc
pop
and
mov
ja
mov
adc
and
imul
lods
jno
add
pushf
loope
in
imul
and
aad
adc
jmp
bound
popf
int3
xchg
push
push
test
pop
inc
cmpsl
aad
xor
and
pop
or
daa
test
sbb
xchg
sbb
pinsrw
add
mov
cmp
sub
and
jbe
push
and
jno
inc
inc
test
insl
inc
fsubr
dec
insb
or
ja
push
inc
adc
mov
xchg
idivl
repz
outsl
das
adc
hlt
adc
lea
jne
mov
hlt
aas
xor
jmp
aas
and
adc
clc
xor
orb
inc
mov
lods
repz
cltd
inc
test
insb
daa
les
inc
mov
test
inc
movsb
test
xchg
pop
xor
test
shlb
test
adc
shl
insb
mov
lret
xchg
insl
adc
cli
xor
adcb
es
pop
jl
imul
cld
jno
dec
mov
jo
jmp
push
inc
push
sbb
dec
pop
xchg
or
aam
push
jnp
mov
mov
iret
xchg
sub
push
adc
or
test
mov
dec
push
add
or
hlt
test
fs
clc
and
adc
outsb
and
lahf
add
inc
test
push
call
or
jle
sub
push
xor
jecxz
or
and
push
mov
ljmp
imul
fs
sub
lods
adc
jne
insl
pop
bound
adc
loope
push
or
xchg
and
and
movsl
push
or
push
jg
je
aad
sub
mov
outsl
in
cmp
popl
inc
pop
and
inc
jl
push
xor
mov
je
sbbb
mov
andb
or
mov
and
into
pop
push
and
test
mov
mov
inc
push
jno
xor
and
pop
test
shlb
je
or
or
dec
and
adc
or
shrl
push
push
adc
les
sub
outsb
push
je
add
and
mov
jb
push
imul
mov
sbb
test
les
or
mov
fs
jb
adc
lods
test
and
pushf
inc
loope
std
sub
movsb
test
frstor
rorb
fadds
addr16
dec
test
sbb
test
enter
and
inc
add
dec
adc
in
sbb
sub
dec
in
and
push
inc
cmp
lods
sbb
and
test
int
xor
mov
push
jno
je
lahf
push
and
mov
sbb
test
les
pop
or
mov
ja
mov
and
pusha
ja
xchg
and
sbb
incb
mov
out
xor
mov
and
fs
jb
adc
jl
inc
mov
jbe
mov
test
enter
and
and
inc
pop
movsb
sbb
inc
ja
test
sbb
inc
sbb
inc
add
jmp
bound
adc
dec
lret
lods
arpl
js
rcrl
sbb
lods
ja
inc
xchg
sub
inc
sbb
mov
in
and
inc
outsb
adc
jns
dec
dec
mov
jge
mov
push
push
fldenv
xor
into
gs
and
push
test
push
adc
popf
outsb
int
and
mov
adc
arpl
cmpsl
cmp
sub
test
nop
iret
test
scas
das
inc
adc
sub
arpl
in
inc
push
sub
pop
inc
push
enter
and
jmp
pop
leave
bound
test
fmul
xchg
push
adc
adc
push
fs
push
out
cmpsl
test
adc
stos
sub
pop
fs
outsb
leave
dec
push
adc
cmpsb
add
jp
add
lahf
insb
test
pop
lret
inc
pop
leave
sbb
jae
or
and
push
nop
clc
test
xor
adc
sub
lahf
bound
cmp
xor
es
inc
pop
and
aas
ret
adc
jnp
clc
cmpsl
or
repz
filds
and
cmp
mov
mov
pushf
sub
test
jae
mov
and
je
test
push
or
gs
mov
mov
andb
push
mov
adc
mov
or
inc
add
or
bound
and
cmpsb
adc
sub
aad
push
sbb
inc
jle
test
and
call
cmp
jns
adc
mov
sub
mov
push
addb
or
pusha
adc
adc
add
cmp
mov
or
sbb
out
movsl
push
push
sbb
inc
sbb
cmp
ret
popa
enter
lock
decl
push
jp
xor
inc
divl
inc
mov
outsb
xchg
int3
mov
stos
lahf
sarb
adc
adc
jae
inc
stos
push
mov
push
jbe
bound
mov
sbb
lods
imul
mov
jge
out
fs
mov
push
push
sub
pop
xor
cmp
cmp
cmpsl
push
clc
gs
push
adc
push
mov
je
and
sbb
popf
out
xor
sub
jbe
rcrb
push
xchg
xor
xor
shl
jmp
les
je
cmp
mov
test
or
mov
or
sbb
push
clc
jmp
shlb
sub
and
bound
sub
adc
ss
cmp
xchg
sbb
mov
and
xor
in
push
daa
lahf
push
push
sub
jle
ja
dec
popf
fsub
sub
and
mov
lcall
adc
push
inc
adc
leave
outsl
jp
inc
mov
mov
test
ljmp
mov
rclb
mov
sub
nop
push
push
insl
or
xor
imull
xor
jnp
xchg
in
and
sbbl
ljmp
push
sbb
je
cmc
inc
dec
int3
push
jle
add
mov
push
stos
mov
mov
insb
je
or
pop
mov
popa
test
mov
inc
and
test
mov
sbb
sub
stos
loop
out
cmpb
ja
movsl
and
cmp
out
push
int
or
lods
jp
xchg
hlt
fmuls
lcall
test
sbb
jo
and
adc
inc
adc
fnstcw
cmpsl
adc
test
adc
push
mov
dec
and
or
jg
sbb
xor
loopne
jns
cmp
xchg
jo
sbb
push
fdivrp
fwait
mov
xchg
jg
and
call
jb
hlt
in
sbb
sahf
test
and
cmp
negl
inc
sbb
inc
push
jle
leave
sub
nop
push
call
push
cmp
in
and
mov
mov
push
pusha
push
jl
jmp
inc
push
cld
mov
mov
inc
lea
jecxz
mov
repnz
and
cmp
or
orb
cmpsb
pushf
sub
pushf
repz
cwtl
popa
pop
add
or
sahf
inc
xor
mov
cli
cmp
mov
push
rcrb
dec
mov
dec
pavgb
pushf
mov
push
nop
mov
sub
or
repnz
cmp
inc
outsb
pop
adc
inc
inc
xchg
or
dec
dec
mov
in
inc
in
jle
test
and
xchg
repz
xor
and
lret
push
adc
loope
cwtl
push
adc
adc
sbb
lret
adc
or
adcl
cltd
adc
fwait
pop
mov
pop
into
and
lods
fdivrs
and
xchg
clc
insl
mov
adc
ficoms
mov
add
xchg
mov
push
fistps
mov
loopne
mov
or
cmp
loop
test
bound
scas
and
add
or
nop
rcll
push
stos
mov
lods
dec
xchg
or
add
pop
bound
mov
push
push
sub
insl
stos
sub
inc
adc
mov
xchg
dec
int
adc
and
cld
dec
add
or
hlt
lret
nop
shrl
push
push
push
cwtl
sbb
movsb
inc
xor
psubsb
xor
mov
add
sbb
dec
sbb
xor
es
call
jmp
loope
push
leave
cmp
xchg
add
push
adc
dec
cmpsb
leave
add
cmp
or
cmp
cmp
jbe
loopne
inc
or
pop
pop
inc
sbb
cmp
adc
orl
and
je
mov
les
outsb
pushf
les
in
in
lods
cld
sbb
nop
ret
jne
or
out
inc
xchg
jl
xor
je
jbe
xchg
sub
jl
int3
cwtl
jno
aas
lock
int3
daa
pop
test
lret
or
fidivl
jne
nop
adc
mov
dec
enter
mov
and
or
or
popf
mov
and
push
xor
adc
cmpsl
push
out
pushf
stos
fwait
xor
jl
test
cmpsl
jge
mov
pop
lret
or
inc
jno
cmp
and
int3
rorl
in
lock
xchg
das
xchg
sbb
jb
push
mov
cmp
jne
add
or
lods
or
popf
or
mov
and
out
out
adc
movsb
ror
cwtl
mov
xchg
sbb
cmp
adc
pushf
inc
cld
test
imul
cld
adc
xchg
jle
cld
sarl
jp
or
push
mov
cmp
push
sub
and
adc
push
adc
enter
xchg
sbb
in
arpl
cmp
stos
outsb
inc
xor
cmc
or
pop
sub
or
push
push
sbb
and
and
jl
mov
sbb
pop
sub
test
xchg
xor
test
les
pushf
dec
les
mov
out
push
sbb
xor
push
and
sbb
adc
jle
pop
add
mov
add
push
adc
or
xor
add
or
dec
rclb
jecxz
int
je
pop
pop
and
call
pusha
adc
mov
cmp
lea
call
xchg
lahf
outsl
in
pop
dec
call
xchg
cld
sbbb
push
fdivrs
jae
repnz
sub
lds
xlat
sahf
in
les
dec
ja
push
xchg
clc
mov
pop
sbb
repz
push
mov
inc
lcall
jecxz
or
xchg
in
xor
fsubrl
jecxz
mov
cwtl
ffree
xchg
test
test
stos
xchg
xchg
push
cmp
push
pushf
adc
dec
nop
jne,pt
clc
addl
xlat
sbb
push
ss
mov
push
sub
stc
or
clc
inc
in
push
cmc
xchg
testb
inc
mov
jo
nop
adcb
bound
jbe
ret
adc
in
clc
test
inc
stc
mov
dec
shl
dec
inc
jl
inc
sarl
inc
mov
pop
shr
xor
fistl
dec
cmc
jle
inc
shr
pop
addr16
imul
test
mov
bound
inc
inc
xchg
pop
in
inc
xor
inc
or
add
call
roll
or
push
dec
mov
cmp
fsubr
test
enter
inc
mov
inc
out
mov
inc
shlb
aaa
out
incl
out
xchg
sbb
xchg
push
xchg
aad
add
xchg
pushf
in
nop
pop
je
lods
fidivs
dec
adc
or
cmp
adc
leave
mov
out
inc
nop
sub
iret
add
mov
or
cmp
adc
mov
fs
push
popa
dec
pushf
cmp
enter
or
mov
lock
scas
ds
sbb
adc
or
inc
mov
adc
mov
fxtract
insb
sub
jne
stos
xchg
lock
sbb
cwtl
jne
cmpsb
push
pop
int3
sub
jns
xchg
lcall
in
insb
inc
lret
and
add
sbb
inc
int
insb
lret
xor
mov
adc
call
sbb
cmp
and
icebp
popa
mov
adc
xchg
ficoms
inc
cwtl
push
call
sarl
call
pushf
shl
mov
iret
js
jns
mov
pop
and
cwtl
roll
imul
movsb
roll
jns
or
inc
ret
ficoml
int3
movsb
push
sub
call
call
push
dec
lds
stc
and
js
ret
mov
sarb
ret
or
sbb
adc
addr16
push
enter
repnz
repnz
inc
push
cli
cmp
aas
jl
jmp
adc
mov
fstps
adc
dec
popf
add
sti
fisubl
sub
jbe
mov
gs
xor
pop
xchg
mov
mov
mov
add
sbb
inc
jmp
arpl
jmp
or
js
mov
xlat
or
rep
or
fucomi
or
gs
out
xor
in
push
mov
adc
adc
lds
mov
mov
test
cwtl
ja
jbe
notl
and
cmp
fidivrl
push
pop
and
or
jmp
mov
jle
movsl
xchg
pop
or
inc
adc
jmp
js
stc
sbb
sub
and
sub
push
push
jl
movsl
jnp
pop
test
jo
call
adc
je
in
cmc
test
stos
fsubs
push
ret
lea
out
stc
lds
cmpsl
mov
xchg
and
mov
ret
out
cwtl
dec
inc
mov
fdivl
mov
mov
add
push
daa
jle
add
mov
inc
stos
test
cmp
adc
inc
les
cmp
inc
xchg
in
jmp
pop
xor
js
sbb
ret
adc
xchg
enter
and
les
mov
jne
or
mov
call
sbb
pusha
clc
push
and
lock
mov
in
push
icebp
jp
rorl
rorb
xchg
add
scas
daa
dec
xchg
jmp
hlt
add
fs
and
lcall
mov
or
fidivrl
pop
sbbl
pop
push
stc
jno
ss
fistl
or
testb
dec
enter
add
sbb
icebp
cmp
popa
inc
in
xchg
sbb
inc
fdivrl
or
mov
lods
mov
inc
pop
and
mov
inc
lods
push
and
fs
jl
mov
mov
dec
cmpsl
cmp
add
sbb
arpl
dec
fcompl
cmpsb
mov
xor
rclb
test
sub
sar
jne
jmp
adc
cmp
sub
pop
test
shl
xlat
xor
jl
nop
jne
push
mov
or
cwtl
dec
incl
repz
mov
xor
clc
sub
pushl
push
push
shll
push
xchg
aam
mov
js
push
xchg
sub
sub
cmove
stc
outsb
imul
jb
add
inc
jmp
inc
sbb
mov
mov
jo
loope
jp
lea
push
xor
or
test
mov
sub
sub
dec
mov
push
dec
xchg
cmp
and
test
lds
sub
adc
jno
add
cmpsl
push
jne
jne
push
cmpl
loop
or
in
or
mov
adcb
ficomps
paddsb
into
sbb
mov
or
jo
int
and
or
call
je
add
sbb
insb
fisttps
adc
fstp
push
andl
aam
sbb
dec
adcb
and
push
js
jmp
and
mov
sbb
test
loopne
loope
fcoml
sub
rolb
sbb
fcomp
sub
adc
cmpsb
ds
sbb
cmp
ret
mov
adc
xchg
sbb
xchg
cmp
cmp
into
xor
push
sub
jb
and
push
je
jmp
mov
jae
imul
xor
sbbl
mov
pushf
push
jno
mov
xchg
mov
mov
mov
push
and
push
dec
inc
jle
xchg
shrb
inc
scas
test
pop
push
fs
enter
out
push
fmull
mov
lock
cmp
out
ret
mov
mov
inc
sbb
clc
subb
cmc
fisttpll
rorl
mov
mov
sbb
inc
jmp
or
sub
dec
jne
push
push
push
inc
fcoms
outsl
pop
or
test
inc
add
cmp
test
sub
mov
cmpl
or
jb
popl
adc
loopne
mov
mov
or
push
jns
mov
int3
mov
sub
inc
dec
pop
dec
in
xchg
adc
les
dec
push
enter
loopne
sbb
xor
test
push
or
mov
test
inc
push
jle
ds
in
rorl
mov
dec
jmp
adc
push
inc
jae
test
out
popf
xchg
fcomps
push
or
xchg
and
rorb
inc
xchg
insb
push
mov
ja
fwait
sbb
push
lods
adc
sti
xchg
fadd
xchg
insl
ret
add
and
add
mov
push
or
icebp
xchg
push
or
test
mov
or
xchg
cs
adc
adc
lods
sub
sub
idivl
addl
jo
call
ret
icebp
mov
lods
sbb
mov
in
bound
nop
jge
adc
push
dec
cltd
mov
sbb
sub
dec
sub
es
cmp
jecxz
cs
inc
push
pusha
outsl
test
stos
add
sbb
pop
and
outsl
sub
lods
mov
pop
rolb
scas
lods
mov
bound
adc
shl
lret
inc
inc
sub
and
mov
or
aad
ret
xchg
adc
bound
adc
inc
jmp
fwait
stos
jle
xor
and
popf
movlps
rcll
aaa
aas
xchg
gs
sbb
xor
popf
test
push
andb
push
mov
js
icebp
inc
out
call
sub
jne
cli
insb
int
cmpsb
test
pop
test
cmp
lock
orl
cmp
xchg
clc
jae
push
data16
mov
hlt
lods
test
dec
add
mov
sub
in
push
lock
clc
or
test
outsl
push
out
pop
sbb
les
or
mov
dec
inc
std
inc
push
push
adc
xchg
add
mov
xlat
mov
mov
in
sub
xchg
test
fildl
mov
fbstp
add
addr16
adc
pop
mov
dec
and
sbb
push
mov
or
pop
push
xor
sub
and
neg
xlat
sub
and
imul
inc
testb
or
adcb
dec
sbb
xor
xchg
mov
jmp
test
pop
dec
pushf
inc
enter
call
cmp
mov
sub
pop
loopne
cmpsb
cmc
and
daa
loopne
stc
and
mov
jp
add
pop
mov
dec
xchg
and
js
clc
mov
add
sti
cmpl
loope
jl
sbb
out
lea
and
rorb
test
xchg
inc
adc
arpl
popf
jl
mov
daa
and
or
cmc
adc
addr16
jmp
push
adc
loop
sub
jbe
bnd
in
xchg
sub
testl
loop
test
js
xchg
mov
in
xchg
adc
sub
and
pop
stos
pop
ja
xor
inc
in
mov
xor
shlb
test
addr16
test
jmp
adc
push
inc
int3
mov
jmp
mov
les
xor
stc
jns
dec
aaa
sbb
sub
std
adc
sbb
adc
add
xor
push
pop
iret
jbe
jnp
sbb
icebp
mov
dec
push
sbb
neg
inc
mov
xchg
mov
movsl
sub
enter
mov
inc
xchg
mov
xor
sub
mov
add
push
call
cmp
data16
jno
or
xor
pop
lea
fwait
xchg
and
clc
pop
outsl
les
jo
ja
push
nop
jno
gs
test
call
sbb
xchg
inc
mov
cmpsb
rolb
dec
mov
rolb
push
xlat
mov
adc
sbb
mov
xchg
mov
mov
fs
jp
xchg
mov
js
lock
add
adc
mull
xchg
rolb
jne
mov
mov
hlt
xor
call
mov
mov
daa
pop
mov
sbb
adc
push
add
hlt
add
mov
ja
mov
cmp
mov
xor
mov
sub
les
jmp
adc
ja
fxtract
or
cmc
pop
mov
test
rolb
and
test
scas
cltd
jmp
fisubs
in
adc
jle
mov
cmpl
getsec
je
ret
shlb
xchg
popa
sbb
xchg
pop
xor
shl
jbe
xchg
or
movsl
rcr
mov
bound
jae
xchg
push
js
pop
mov
shrb
add
adcb
jb
or
xchg
jbe
std
jl
dec
pop
das
xchg
mov
ret
stos
test
dec
cmp
cwtl
push
cmp
and
dec
sbb
into
mov
adc
arpl
daa
jge
adc
or
mov
inc
enter
inc
hlt
inc
push
pusha
sbb
int
and
lret
jb
sub
jp
loope
mov
pop
pusha
adc
shr
or
xor
pop
movsb
dec
and
gs
adc
cmpl
outsl
mov
insb
cmc
mov
loop
push
mov
dec
scas
xor
add
dec
aas
adc
dec
jno
xchg
pusha
call
sub
adc
outsb
test
in
jns
pop
and
dec
movsb
sbb
cwtl
dec
call
subl
inc
cld
push
rcrb
push
adc
jno
xchg
clc
adc
lahf
inc
and
sbb
push
sub
inc
dec
adc
sub
adc
aam
dec
or
xor
arpl
inc
sbb
call
les
dec
subl
test
dec
bound
sub
nop
addb
and
mov
stos
shll
iret
test
jns
jo
jmp
or
xor
jg
mov
pop
xchg
push
push
jge
xchg
and
int3
mov
lret
sti
ss
addb
arpl
mov
cmp
xor
and
sub
push
or
jmp
push
popf
into
push
and
or
rorl
and
loop
xor
loopne
jl
xor
or
jnp
jge
int3
inc
testb
jle
call
or
js
fcoml
daa
mov
jo
xchg
inc
cmp
mov
pop
pop
ret
sub
inc
js
mov
mov
aaa
cmpsl
sub
aad
xchg
push
push
pop
mov
cmp
or
pop
and
jle
outsl
incl
add
test
or
popa
mov
adc
inc
cmp
jl
in
and
sbbb
popf
pop
popa
inc
push
mov
adcb
and
sbb
test
sub
add
add
in
push
daa
push
jo
incb
out
add
pop
cmp
jl
xchg
popa
sub
jnp
mov
inc
or
lret
sub
mov
ja
and
outsl
pop
xchg
pop
gs
clc
cwtl
push
ja
aaa
hlt
jle
imul
push
or
sub
les
mov
outsb
jne
js
sbb
out
int3
or
cmp
or
js
xchg
mov
or
ljmp
xchg
add
push
add
arpl
test
add
mov
adc
jne
mov
push
add
push
push
inc
nop
and
sbb
and
outsl
cwtl
sbb
jp
adc
adc
outsb
sub
adc
test
movd
mov
sbb
pop
es
xor
mov
push
xchg
and
mov
mov
dec
push
sbb
push
mov
push
pop
jmp
push
int3
adc
fwait
push
adc
insb
xchg
into
inc
or
inc
inc
cmp
pop
jbe
pop
test
inc
orl
std
jno
xor
shlb
test
sarb
adc
loopne
lea
inc
hlt
dec
mov
neg
pop
lahf
pop
jmp
mov
xor
mov
and
push
adc
cmp
lret
jmp
cmpsl
lea
in
adc
test
mulb
jge
push
sub
imul
ss
ret
rorl
mov
and
sahf
mov
jmp
add
pop
ret
push
mov
or
shrl
inc
or
rorl
add
leave
sarb
jnp
inc
pop
ja
nop
pop
or
add
shll
js
push
test
pop
lock
pop
push
je
sbb
adc
or
inc
out
je
popf
jecxz
inc
sbb
lock
cwtl
cli
xorl
adc
adc
inc
in
jns
and
adc
negl
dec
adc
bound
lock
mov
adc
mov
mull
sti
xchg
sti
stos
shrb
rolb
mov
adc
xchg
call
pop
cmp
imul
inc
push
xor
add
or
inc
push
inc
lods
movsl
pusha
add
in
faddp
sub
loopne
dec
mov
pop
and
pop
sbbl
outsb
mov
aam
and
jge
adc
addb
or
pop
and
nop
popa
pop
add
inc
or
xor
jmp
jle
shr
cmp
or
mov
adc
push
or
subl
xor
dec
lock
sahf
orl
sbb
or
adc
mov
xor
fwait
inc
or
sbb
ret
ds
cmp
into
mov
xorb
adc
pop
jne
push
cmc
adc
stc
or
jecxz
or
jmp
mov
test
sub
test
pop
cmp
push
test
xor
mov
xor
lret
mov
jb
sub
add
cmp
add
add
cmp
out
jmp
nop
push
dec
idiv
ret
jmp
xchg
sub
add
outsb
or
inc
and
iret
mov
fidivrl
cmpsb
push
or
inc
pop
xor
test
inc
pop
aad
int3
and
mov
pop
adc
rcll
subb
imul
mov
dec
mov
mov
nop
mov
inc
in
test
push
adc
je
jl
jle
movsl
cmc
cmp
lahf
mov
dec
mov
les
pop
repnz
inc
fbld
ds
cmp
xchg
arpl
sub
fadd
adc
cmc
xchg
loopne
test
or
inc
pop
or
sbb
std
cltd
sbb
push
push
adc
fildl
jns
mov
xor
mov
fimull
cmp
je
cmc
pop
mov
xchg
sub
sub
das
mov
push
call
mov
add
inc
adc
mov
pusha
xor
adc
lds
pop
pop
sub
or
call
jbe
inc
js
loopne
iret
pop
ja
cmpsb
nop
cwtl
mov
mov
pop
add
jne
test
jle
cmp
cwtl
popf
cli
fistpll
adc
sbb
cld
dec
adc
push
stos
es
dec
cmpsb
out
imul
popa
jae
jno
sub
push
push
es
dec
and
pop
cmp
sub
push
pop
or
shll
cld
sub
or
dec
push
xchg
cmpsl
inc
sbb
loopne
xchg
rorb
sbb
inc
ret
xchg
adc
add
push
inc
in
jmp
movsl
xchg
aam
daa
ja
decb
repnz
adc
inc
push
and
enter
pop
decb
fbld
and
mov
push
adcl
pop
out
xchg
in
cld
adc
sar
dec
sbb
or
jne
jmp
and
pop
sub
or
pop
or
dec
cltd
dec
adc
pop
adc
sbb
adc
and
call
inc
les
mov
or
lock
adc
or
dec
pop
hlt
fsubrl
cmpsb
divl
jge
sbb
mov
or
in
xor
subl
cltd
insb
cmp
cmp
mov
sbb
jno
dec
add
cmp
jge
cmp
je
sbb
jecxz
push
mov
or
cmpsl
mov
cmp
jl
call
test
xor
jmp
sti
ds
add
add
andb
rorb
ds
cmp
jmp
je
leave
fwait
mov
pop
cltd
mov
xchg
push
push
adc
pop
mov
mov
inc
sub
adc
mov
mov
dec
and
jbe
icebp
inc
ljmp
add
sbb
push
cmp
dec
je
dec
outsl
sbb
sbb
pusha
inc
icebp
ss
ret
jne
jmp
arpl
mov
push
mov
mov
rcll
call
xor
mov
xchg
add
test
or
sub
or
out
jb
push
in
or
lret
sbb
fsubl
fstpl
push
test
sub
push
mov
pop
nop
adcb
loop
inc
ficoml
in
xchg
test
push
cltd
mov
mov
movb
clc
inc
loopne
cmp
dec
fisubs
push
enter
das
and
push
rcrl
test
shll
xor
jge
xor
jb
xor
add
repz
and
and
or
movsb
andl
xor
insb
mov
filds
xor
loopne
nop
lods
push
enter
and
sub
dec
push
mov
lods
push
push
inc
clc
dec
addb
adc
xchg
or
shlb
sub
pop
inc
lock
xchg
or
push
sti
dec
inc
xchg
sub
and
lret
fisubrs
mov
loopne
and
adc
push
and
mov
sbb
pop
jno
add
inc
xchg
add
push
call
int3
ja
fwait
inc
sub
and
jno
clc
jp
mov
push
cmp
jns
scas
rolb
mov
mov
leave
in
int
clc
sbb
mov
das
jnp
and
xor
push
or
xchg
aam
bound
cltd
enter
xchg
adc
js
cmp
scas
jo
call
sbb
dec
lods
iret
or
inc
into
jmp
pusha
mov
mov
js
int
cmpb
fldenv
pop
and
push
and
xor
push
pop
insb
adc
adc
enter
lock
inc
les
push
sbb
and
sbb
sbb
inc
mov
or
js
mov
add
les
mov
inc
nop
or
cmp
clc
dec
out
dec
lret
pop
sbb
in
or
inc
pusha
mov
mov
rol
sub
int
and
xlat
mov
mov
pop
daa
push
push
test
mov
jo
and
or
adc
mov
js
push
xchg
aaa
into
inc
sbb
sub
inc
add
or
push
add
mov
push
jo
cmp
cwtl
push
add
add
or
loop
add
xchg
insb
add
jns
push
mov
mov
in
sbb
xlat
cmp
add
lret
dec
add
fs
sbb
in
insb
rolb
jg
push
sbb
push
outsb
call
xor
movl
les
aaa
and
push
int
add
rolb
xor
mov
xchg
pop
pop
test
and
xor
mov
xchg
mov
ss
or
sbbl
push
inc
push
ror
sub
call
jnp
mov
sub
xchg
and
or
andl
pop
loope
shrb
and
mov
push
mov
das
sbb
mov
xchg
outsb
pop
les
adc
popa
test
or
js
adc
mov
sbb
jp
clc
mov
cmc
xchg
jle
jl
addb
cltd
pop
data16
adc
dec
pop
in
cmc
jae
cld
or
adc
lret
mov
xor
mov
mov
ds
les
inc
bound
xchg
and
or
adc
sbb
sub
int
dec
pop
cmp
pop
sub
test
sbb
ljmp
lret
lret
pop
inc
outsb
fstpl
and
mov
mov
xchg
ret
sbb
and
call
test
mov
dec
pop
test
mov
mov
add
xchg
out
shll
and
pop
fs
lret
aas
sbb
test
dec
push
and
sbb
adc
enter
loop
lahf
and
sub
push
add
icebp
or
adc
pop
mov
cmp
call
rcrb
mov
lea
pop
push
cmp
int
lea
addr16
insl
iret
mov
push
inc
enter
test
insl
adc
std
inc
sub
push
push
flds
mov
sbb
imul
and
or
cltd
hlt
mulps
in
iret
mov
or
mov
add
pop
inc
sbb
mov
sbb
arpl
dec
cmp
and
inc
sub
loope
add
jmp
dec
hlt
push
or
popl
pop
sbb
mov
sahf
add
and
jne
inc
xchg
fisttpl
divl
repnz
adc
adc
ret
or
call
out
mov
jle
add
lahf
push
test
imul
pop
clc
push
scas
rclb
push
jb
mov
mov
adc
push
jo
mov
sbb
sti
setg
adc
gs
mov
lods
jbe
jnp
xchg
xor
fcoms
cs
jge
dec
mov
out
outsb
loopne
mov
or
test
out
fisttps
call
fs
or
dec
lock
repnz
xchg
mov
inc
call
clc
or
and
cmpsl
pop
lods
mov
and
mov
int
dec
test
loopne
xor
test
push
int3
sub
enter
push
call
add
push
cwtl
shlb
mov
sub
adc
or
adc
mov
rcll
mov
xchg
adc
outsl
xchg
push
and
nop
das
popa
adc
adc
sbb
push
push
sub
sub
ret
outsl
ljmp
bound
cwtl
pop
roll
jge
filds
push
lock
data16
rcll
and
jae
test
mov
add
jge
push
xor
sub
sub
andl
push
aaa
mov
lcall
mov
es
cmc
js
adc
dec
shrb
push
cmpsl
sub
jmp
jl
sub
sub
fcomps
dec
dec
push
mov
pop
adc
and
cmp
sbb
shll
lock
dec
je
lea
pusha
std
xchg
pop
jmp
add
and
es
inc
mov
xor
add
std
mov
push
adc
adc
ss
jne
lahf
sub
jl
xchg
dec
lods
adc
or
jnp
sbb
cli
or
and
rorl
add
dec
ljmp
inc
insb
xchg
aaa
xlat
jno
int3
dec
das
fs
clc
dec
push
repz
pop
sub
test
repnz
mov
mov
pop
inc
fldenv
and
jns
pop
outsl
or
mov
shlb
fimuls
in
mov
and
insl
fsubrs
push
adc
lea
cmp
subb
nop
dec
xchg
icebp
push
les
jecxz
daa
pop
push
push
stc
pop
test
test
add
sbb
mov
sub
lcall
mov
addr16
or
aam
dec
mov
push
mov
cld
pusha
call
out
fisubrl
push
sbbb
dec
push
aas
or
adc
mov
xchg
jecxz
loope
bound
fs
mov
mov
xchg
lods
mov
test
sbb
xchg
sbb
call
les
and
ret
add
pop
rclb
test
sti
mov
movsb
dec
pushf
cs
cmp
subb
or
mov
movsl
pop
push
xor
or
mov
and
fsubr
adc
hlt
dec
test
call
mov
ljmp
loop
test
cld
shlb
call
jmp
lret
jo
sbb
adc
mov
mov
jbe
rorb
mov
xchg
or
lret
mov
inc
push
lret
mov
xchg
outsl
mov
aam
in
in
roll
fcomps
stos
fcmove
xor
in
push
out
pop
dec
in
jo
mov
aam
sub
xor
inc
ja
adc
dec
jne
stc
out
pop
daa
les
pop
sub
and
test
into
pusha
adc
mov
sbb
xchg
adc
push
xchg
hlt
hlt
cmp
imul
lods
adcl
stos
je
int3
inc
fcoms
jp
and
iret
mov
and
and
pop
loopne
dec
popa
inc
mov
cmp
sarb
push
ljmp
add
aam
repz
adc
es
movl
mov
outsb
rorb
call
push
push
repnz
lds
push
cld
test
mov
pop
push
cld
inc
adc
mov
hlt
jo
push
xor
push
cld
scas
leave
jg
mov
sti
mov
test
push
lahf
cwtl
dec
das
addr16
push
mov
push
inc
push
sbb
cmp
or
in
nop
rorb
lock
loope
loopne
push
inc
push
and
decl
mov
inc
clc
cmp
xchg
mov
ret
sub
adc
mov
enter
push
pop
or
out
mov
jnp
lret
adc
dec
xor
inc
add
xor
push
daa
pop
xchg
cwtl
add
cmp
jl
pop
add
orl
xchg
lret
scas
cmp
rorb
and
rclb
mov
or
dec
adc
mov
cmp
pop
sub
push
sbb
sub
push
fadds
scas
push
inc
das
push
cwtl
inc
push
push
pop
fcoms
test
and
js
bound
imul
push
adc
cmp
inc
push
jne
mov
mov
mov
inc
subb
aaa
movsl
shlb
push
jle
out
sbb
push
adc
lock
mov
nop
jb
mov
jl
mov
sub
popf
incl
xchg
or
shrb
pop
mov
call
lods
push
mov
sti
add
inc
push
or
mov
push
pop
and
and
cld
inc
inc
sub
and
lock
decl
inc
dec
inc
adc
call
repz
and
sahf
push
sub
pop
daa
cmp
adc
inc
xor
and
cmp
mov
jno
xor
je
incb
lock
mov
mov
xchg
sbb
push
movsl
add
xchg
jp
cld
pushw
rep
out
mov
scas
inc
mov
das
mov
push
frstor
stos
in
push
xor
xchg
sub
nop
adc
jmp
inc
addr16
inc
adc
sub
adc
int
in
or
jle
into
push
adc
inc
adc
fs
sub
mov
adc
sbb
je
movsl
call
pop
in
and
adc
movsb
xor
sub
add
xor
lock
in
fimull
ljmp
shl
mov
pushw
jnp
cltd
scas
push
dec
adc
push
in
popf
jl
jns
push
mov
and
inc
push
jne
push
push
movsl
test
aad
sbb
cmpsl
push
mov
inc
push
mov
sbb
push
ret
cmpb
pop
ror
sbb
xor
sbb
inc
addb
mov
inc
mov
cmp
in
popa
lea
or
sub
mov
mov
je
adc
mov
or
pop
cmpsb
adc
jne
push
mov
mov
adc
xchg
and
lods
mov
or
inc
iret
mov
lcall
xor
cmp
aad
loopne
daa
push
pushf
jmp
push
repz
adc
int3
jno
pop
cmp
push
enter
add
add
pop
sbb
xor
cltd
sub
sar
lret
or
and
out
mov
adc
and
sub
jp
inc
test
mov
fs
or
and
adc
push
push
loopne
cltd
pop
add
fcoms
and
clc
xor
xchg
push
les
pop
sbb
arpl
prefetcht0
mov
mov
adc
mov
pop
sbb
test
inc
jne
add
xor
inc
add
enter
sub
dec
adc
fistl
mov
rolb
add
cmc
xchg
adc
dec
mov
mov
push
scas
inc
jmp
std
mov
cmc
in
pop
pop
mov
xchg
int
cmc
das
jl
les
std
add
movsb
or
add
bound
call
lock
mov
inc
inc
lea
daa
test
es
push
and
cmpsl
adc
pushf
adc
xchg
push
pop
in
test
in
adc
push
xchg
addr16
and
jmp
push
and
mov
cmpl
in
xor
loopne
into
sti
or
inc
es
subl
cmp
movsb
in
and
out
enter
mov
out
rorl
pushf
mov
sub
stos
cmpsl
dec
loope
inc
ds
stc
push
out
inc
lahf
inc
xchg
pop
and
xchg
xor
cmpsb
fadds
pop
dec
push
cmp
push
fisttps
and
push
shl
sti
cli
pop
mov
hlt
or
nop
pop
jg
jmp
sub
sub
sbb
sub
daa
push
outsb
cmp
jmp
call
sbb
test
leave
test
addr16
sbb
mov
cmp
jne
xchg
out
push
cwtl
xchg
fcomps
push
sbb
xor
mov
mov
addr16
pop
test
inc
lgdtl
push
adc
dec
dec
aas
adc
fxtract
stos
push
inc
pop
in
insb
push
or
mov
jp
not
xchg
cmpsl
jno
or
out
pop
imul
in
fmulp
or
sub
jno
sahf
inc
dec
adc
or
inc
jmp
call
mov
and
ret
sub
flds
cmpsl
out
push
call
xlat
cmpsl
addr16
and
cltd
ss
dec
cld
push
pushf
sti
mov
jmp
daa
sub
xor
pop
imul
or
shlb
push
dec
call
or
add
pop
loopne
add
test
pop
inc
stos
push
and
xor
mov
int
inc
push
or
pop
push
push
rolb
mov
pop
push
outsb
cmp
loope
mov
or
dec
xor
call
jmp
mov
dec
or
inc
or
or
jmp
cli
or
dec
loope
call
xchg
stos
adc
orb
shlb
int3
inc
in
call
sbb
outsb
or
fidivl
mov
stos
ds
lahf
cmp
pop
jmp
add
mov
ss
subb
js
fldcw
mov
stos
mov
addr16
call
sub
xor
and
fsts
loop
ret
or
mov
fmull
mov
pushl
or
dec
add
repz
push
push
mov
pop
dec
jb
ljmp
rorb
lret
mov
addr16
or
enter
adc
and
and
sbb
mov
push
int3
fists
sub
cmp
push
dec
cmp
cli
pop
xor
adc
xchg
mov
outsl
xor
and
and
mov
iret
adc
sbb
fsts
test
decb
push
mov
clc
and
mov
mov
push
outsb
or
nop
mov
and
adc
mov
or
dec
push
in
mov
xor
or
sub
jae
sbb
pop
mov
cld
dec
sbb
inc
and
xor
sbb
inc
lods
and
sbb
in
push
sbb
or
dec
sub
and
jl
and
dec
cmp
xchg
adc
push
bound
sub
sbb
inc
sub
sub
dec
mov
mov
push
push
adc
adc
pop
cmpsl
mov
dec
cmp
pop
and
les
or
xchg
cs
push
sbb
cmp
sub
adc
mov
mov
adc
fs
or
sbb
xchg
xor
mov
fs
pop
aad
sti
adc
ss
sbbb
popf
and
hlt
in
or
pop
dec
das
push
sub
nop
push
push
mov
mov
cmp
into
mov
sbb
sbbb
inc
fmuls
mov
jae
push
loope
jg
int
ja
repnz
into
out
push
or
js
aad
sbb
inc
in
push
sbb
add
lea
inc
orl
xchg
lods
and
das
mov
cmp
dec
je
sub
and
test
or
or
out
jl
enter
push
inc
mov
add
fistpl
adc
xchg
xchg
xlat
mov
push
or
inc
xchg
push
xchg
fmull
call
loope
adc
lret
mov
leave
jl
int
cli
shll
les
ror
rolb
icebp
ds
inc
aas
xor
cmp
sub
movsl
fisubrl
mov
mov
mov
push
cmp
mov
and
and
cmp
test
inc
decb
inc
mov
into
sbb
cmp
jl
daa
push
out
subl
adc
movsl
adc
shl
pushf
and
dec
push
jl
or
rcpps
cmpl
push
push
jl
mov
mov
out
push
cmpsb
inc
inc
gs
sbb
shl
mov
push
and
dec
xchg
int3
and
or
jno
jns
stos
add
shl
sub
xor
aas
or
clc
cli
lock
cmp
ficoms
mov
cmp
add
xor
and
mov
push
sarb
rclb
and
sbb
cmp
loopne
adc
xor
stos
scas
insl
and
push
or
sbb
dec
adc
jl
mov
pop
lea
inc
push
loopne
test
out
pop
adc
movsb
xchg
movsl
jns
cmp
jl
mov
sbb
push
push
push
mov
or
test
imul
xchg
sbb
sti
pop
std
int3
xchg
jmp
push
mov
mov
in
lock
mov
cmp
mov
xchg
data16
xor
pop
mov
cmp
and
pop
cwtl
shlb
push
pop
rorl
jmp
cmp
dec
mov
test
push
pop
arpl
xor
jmp
inc
push
nop
and
push
mov
loop
dec
mov
and
push
daa
shrl
stos
sub
pop
in
loopne
adc
cld
mov
pop
sbb
xor
adc
es
jl
les
push
xchg
nop
enter
mov
test
sbb
mov
adc
inc
cli
cmp
insl
subb
or
popf
push
mov
jne
jmp
aam
xor
inc
push
jecxz
and
add
mov
roll
dec
and
xor
test
and
psraw
add
dec
mov
in
in
sub
insb
outsl
stos
xor
bound
fists
xlat
xchg
push
mov
outsb
in
negb
call
sbb
in
pop
lock
mov
and
out
sti
stos
add
nop
lahf
dec
insb
mov
les
jne
mov
les
cmp
lods
stc
test
fs
test
inc
loopne
sub
push
fimuls
lock
adc
test
lock
sub
movsb
adcl
lret
daa
inc
movsb
cli
pop
insl
mov
push
and
or
mov
and
gs
sub
je
out
add
cltd
fiadds
add
lods
mov
inc
fistpl
inc
dec
aam
fcomps
shlb
bound
rclb
and
add
or
xchg
xor
nop
shlb
push
adc
mov
icebp
dec
dec
and
out
fistl
jne
iret
dec
mov
mov
mov
mov
add
repz
push
clc
pop
inc
xchg
dec
adc
jg
sbb
ret
xor
enter
faddl
or
dec
fildl
insb
fidivrs
xchg
jo
and
sti
dec
sbb
movsb
cmp
jl
mov
dec
add
stc
test
and
jo
push
inc
data16
and
lcall
and
ret
xchg
mov
mov
mov
insb
add
fimull
movsb
xor
sbb
xchg
ret
xor
in
jno
add
mov
inc
sub
mov
je
or
test
and
push
inc
mov
pusha
dec
mov
jno
push
sub
xor
ret
cmp
mov
or
and
loope
mov
dec
dec
lock
and
mov
dec
fists
mov
dec
sbb
inc
in
adc
mov
shr
mov
sub
in
push
inc
xor
mov
and
or
mov
rorl
sub
mov
mov
xchg
movsb
xor
sbb
xor
enter
dec
add
ja
push
les
imul
fnsave
lds
call
ja
and
push
mov
imul
hlt
jmp
adc
add
pop
cmp
bound
ret
test
inc
cmp
add
and
das
sbb
mov
add
or
inc
mov
pop
bound
adc
push
push
sbb
insb
sbb
mov
sbb
pushl
jp
cmp
mov
mov
adc
aad
xor
mov
mov
push
inc
je
je
or
sub
je
sbb
mov
movsb
xor
rcrl
lods
add
fiadds
xchg
sub
enter
call
push
jo
jg
in
dec
inc
dec
ja
or
or
cmp
inc
pop
mov
push
clc
call
sub
inc
or
out
cld
call
cs
mov
pop
mov
aaa
xor
imul
adc
xchg
xchg
ja
or
or
and
movsb
and
jl
add
and
cld
lret
hlt
shl
outsl
dec
inc
sub
cld
sub
or
stc
xor
dec
cli
add
push
mov
adc
adc
mov
mov
adc
sub
cld
adc
sarl
bound
test
andb
cltd
xor
add
add
call
or
inc
inc
and
inc
mov
sbb
mov
in
ret
roll
aam
addr16
push
icebp
mov
or
orb
or
into
mov
xchg
jo
jmp
push
xchg
js
dec
or
push
icebp
leave
call
in
xchg
dec
test
jns
sbb
push
hlt
inc
pushf
imul
ss
jb
cmp
or
aam
xor
adc
mov
dec
push
push
inc
lock
jge
addb
jle
sbb
inc
inc
xor
add
sub
dec
mov
xor
imul
mov
xor
adc
mov
or
mov
mov
aaa
cmpl
jg
setge
dec
pop
out
scas
into
add
jb
add
fistpl
sub
adc
dec
dec
scas
sti
add
mov
sub
mov
jecxz
es
and
sbb
add
add
cmp
push
mov
mov
sub
cld
xchg
push
dec
bound
and
pusha
inc
jnp
fistps
imul
xchg
nop
and
inc
lret
xchg
fnstcw
adc
push
cli
cld
daa
mov
push
and
inc
arpl
into
xlat
aad
pop
ds
inc
stos
in
xor
out
or
push
fmull
aad
jg
call
mov
fstpt
push
data16
loope
das
stos
xchg
pop
adc
leave
or
dec
sbb
in
dec
pop
decl
jge
mov
ret
call
ss
aad
jecxz
inc
in
inc
sub
imul
mov
or
movsb
mov
jg
push
test
push
pop
das
jno
add
call
mov
jge
jg
pop
sbb
lea
cmp
jecxz
and
shr
mov
loopne
push
sahf
mov
push
ror
sub
or
mov
or
sar
or
lock
jg
stos
cmpsb
sti
add
mov
fs
cmp
daa
mov
adc
or
inc
add
mov
in
mov
pop
push
dec
and
mov
and
pop
or
dec
insb
fs
test
loop
push
lods
adcl
and
push
push
sub
push
pop
mov
or
adc
mov
sti
ret
lahf
pop
lods
jae
or
xchg
nop
push
in
movsl
inc
adc
pop
push
push
sbb
clc
in
insb
push
aad
inc
adc
sbb
jno
push
xchg
xorb
or
xor
sbb
fs
jmp
iret
pop
adc
and
inc
enter
movsl
xor
push
push
push
sub
je
pushf
sahf
cmpsl
xchg
mov
cld
xor
loop
pop
cmovg
and
xchg
sbb
fsubrs
or
dec
std
fmull
pop
dec
repz
push
icebp
xchg
int3
pop
mov
xor
and
inc
sti
cmp
push
in
arpl
fsubl
xchg
or
jbe
cmp
cmpsl
sti
pop
mov
push
push
int3
pop
hlt
mov
mov
fcomi
and
cltd
push
pop
inc
sub
sub
mov
inc
jle
mov
push
sti
xor
xor
fs
enter
sbb
mov
and
sbb
pop
sub
or
or
jmp
push
adc
pop
mov
aam
cli
push
dec
pop
mov
mov
pushf
cwtl
push
inc
add
mov
popf
xchg
mov
or
sbb
xor
ret
imul
rol
dec
in
mov
shlb
jne
out
fxch
bound
push
cld
cltd
rorb
inc
out
je
or
mov
pop
scas
dec
cmovo
in
stos
aaa
jne
mov
decl
dec
call
pop
cmp
data16
fisubrl
mov
cmp
das
push
mov
xor
lods
and
mov
das
call
pop
cmp
cmp
call
adc
push
inc
dec
popa
jl
out
test
movsl
push
hlt
pop
inc
es
dec
test
add
cli
es
cld
mov
sbb
sub
sbb
je
and
jne
adc
inc
or
mov
fists
push
sub
sbb
and
cli
or
jno
adc
inc
xchg
xchg
push
scas
shrl
xor
xor
call
mov
dec
pop
xchg
fst
lea
cwtl
fmull
inc
inc
add
es
xor
and
imul
dec
push
js
mov
insb
orb
sub
pop
repz
push
mov
mov
sub
pop
push
adc
xchg
mov
outsb
sub
jbe
adc
mov
add
push
pop
jmp
xchg
pop
add
inc
cli
jp
repz
out
xchg
mov
nop
and
and
out
or
or
test
inc
scas
in
sbb
call
insb
cmpsb
or
jmp
lret
loope
add
movsb
pop
mov
fcoml
sar
cmp
cwtl
loop
mov
in
int3
and
push
add
invlpg
add
inc
icebp
nop
cs
and
bound
inc
movaps
and
add
xor
mov
xchg
push
add
inc
add
push
int3
mov
push
mov
mov
inc
cmp
mov
lcall
mov
pop
xor
jae
sub
or
cmp
aas
dec
sub
in
loopne
and
fwait
xchg
pop
or
call
sbb
sti
pop
leave
ss
sub
or
test
adc
push
repz
dec
xchg
mov
in
nop
popa
insb
adc
mov
mov
jecxz
mov
or
ss
push
imul
aas
push
call
push
sub
or
push
hlt
jg
dec
add
pop
ficompl
gs
cmp
je
add
pop
lods
mov
xchg
sahf
cmpl
incl
cmp
lods
inc
mov
add
andb
sbb
sbb
and
popf
jecxz
adc
mov
and
cmp
push
mov
jnp
push
je
mov
xor
enter
add
pop
inc
call
or
push
adc
pop
xor
cmp
aas
outsl
les
push
stos
mov
dec
cmpsl
dec
sub
jo
cwtl
mov
test
test
jge
stos
push
fidivrs
or
jbe
jno
das
iret
push
dec
lock
cmpsb
popf
inc
addr16
mov
es
mov
dec
mov
dec
mov
or
sbb
mov
orl
sbb
jmp
pop
jbe
jne
mov
repz
mov
test
mov
mov
js
sub
inc
inc
hlt
int3
add
cmp
and
push
jp
popf
dec
in
sbb
repnz
in
sub
dec
dec
pop
clc
les
mov
jo
stos
push
loop
pop
loop
and
pop
pop
mov
add
pop
push
add
pop
mov
les
push
xchg
pop
dec
imulb
push
add
mov
xor
outsb
xchg
jo
loope
pop
xchg
jo
xchg
jne
cmp
xor
ret
pop
push
sub
mov
ja
add
add
jbe
mov
fadds
jle
lds
sbbl
inc
add
rcll
das
dec
test
ljmp
scas
sub
int3
out
aam
inc
jp
and
mov
inc
add
movsl
cs
sbb
mov
jae
cmpsb
push
mov
mov
mov
das
cmp
inc
add
sbb
mov
inc
xchg
enter
cmp
leave
jge
add
sti
ror
call
cmp
jecxz
and
pop
fdivrp
jae
sub
add
cmp
jne
es
jle
clc
arpl
xchg
push
mov
fstpl
xchg
sbb
imul
inc
nop
inc
data16
xchg
pop
add
ret
push
pusha
cmpb
jae
inc
lock
mov
cmp
sbb
bound
or
push
jle
adc
and
rcrb
mov
sub
insl
jge
xor
xchg
ja
es
push
stc
imul
push
push
cmp
inc
or
inc
je
sbb
cmc
std
cld
inc
les
add
repnz
or
pop
call
push
stos
enter
addr16
pop
adc
fldl
xchg
dec
ret
inc
inc
icebp
call
movb
adc
rcll
clc
xlat
sub
notb
ret
sub
les
add
sbb
adc
jne
adc
push
adc
dec
cmp
sbb
add
call
jg
jmp
std
fists
pop
dec
call
add
sbb
jmp
cmp
test
cmp
fcoml
cmp
ret
test
lahf
xchg
cmp
sbb
push
cmove
adc
cmp
int3
stc
mov
mov
mov
push
or
rol
subl
in
xchg
sbb
push
xor
lea
cmp
push
lcall
sub
pop
stc
cmp
and
imul
mov
test
sub
mov
fdivs
decl
into
js
je
nop
mov
fsubrs
repz
movsl
jae
jns
fiadds
xor
icebp
es
sbb
add
ret
sub
lret
lea
sub
mov
daa
loop
or
sub
lock
icebp
mov
fwait
jne
or
and
jge
cmp
in
sbb
ret
add
jmp
les
in
push
call
ret
mov
out
mov
jb
call
pop
add
movsl
sbb
test
pop
cld
es
into
mov
mov
cmpsb
ss
inc
and
jge
nop
loopne
ja
sti
mov
push
std
inc
dec
hlt
jno
inc
pop
fstpl
or
add
sbb
je
rcr
incl
es
int3
bswap
pop
push
movsb
jle
add
jge
inc
pop
aam
xchg
pop
mov
or
add
cltd
stos
test
pop
lea
add
testb
loopne
orb
lret
and
adc
and
fmull
add
or
add
lock
push
inc
das
adc
shlb
adc
dec
adc
mov
xor
xor
xchg
loope
push
add
xor
xor
push
clc
jo
inc
int3
pusha
xchg
nop
pop
xchg
leave
rclb
call
mov
adc
push
mov
mov
shll
mov
jecxz
jo
push
inc
dec
movsb
std
push
inc
sahf
je
or
pop
imul
jns
cmp
call
test
shll
nop
push
push
lea
add
aas
stc
xor
or
jg
icebp
leave
cmpl
jmp
or
push
mov
shl
cmp
cmp
or
lea
jmp
movsb
or
scas
or
nop
aaa
inc
inc
jecxz
dec
or
mov
mov
pop
ret
pop
out
shlb
not
ljmp
lea
decl
mov
data16
or
bnd
aad
xor
add
sub
cmp
clc
sbb
push
jp
sbb
leave
and
dec
add
mov
inc
addl
call
lret
lods
mov
pop
popa
add
add
add
mov
addr16
pop
pop
xlat
lock
cld
or
jl
ja
lods
sbb
pusha
cmp
mov
and
xor
filds
dec
outsl
xchg
jnp
sub
imul
aam
aam
out
enter
call
lds
pop
in
mov
aas
inc
dec
stc
xor
xor
int
or
add
rclb
or
lods
or
dec
hlt
mov
push
aas
push
push
cmp
fsubrs
ret
imul
or
test
dec
cwtl
lock
mov
add
cmp
add
mov
or
jne
xchg
data16
or
cld
add
adc
mov
movb
or
rolb
call
xchg
pop
jl
imul
adc
pop
lock
mov
mov
rorb
shrb
lock
mov
adc
dec
mov
xor
in
inc
xchg
xor
dec
cltd
lds
add
cmp
xchg
lods
in
test
cmp
sbb
sbb
in
push
iret
push
sub
jl
or
xchg
dec
add
mov
fsubr
loopne
out
mov
sbb
sub
sub
stos
or
or
jns
imul
out
sbb
sbb
faddl
cmp
jg
and
jp
cld
lods
mov
cs
sub
test
xor
loope
dec
fldt
mov
out
popf
ret
nop
push
jmp
push
push
cs
inc
test
shr
dec
lea
push
push
cwtl
xor
xor
pop
push
lea
xor
jp
and
or
inc
and
or
pushl
add
inc
cmp
inc
dec
in
pop
stos
lret
sbb
ret
xor
push
mov
aaa
mov
dec
cld
pop
push
push
mov
call
dec
cltd
or
push
dec
adc
test
sub
dec
clc
bound
ret
dec
decl
sub
pop
push
add
jle
and
dec
jmp
xchg
je
lock
pop
sti
mov
insb
jns
inc
mov
pop
cmpl
or
arpl
testb
add
add
mov
lcall
rcrl
adc
mov
or
cmp
mov
xchg
jmp
adc
lret
sub
mov
and
je
sub
pop
and
pushf
mov
mov
dec
jns
popf
testb
mov
jo
les
xchg
cmp
dec
enter
lcall
lods
dec
test
pop
xor
and
mov
mov
repz
xchg
enter
mov
popf
rolb
dec
jg
lods
xlat
stos
cmp
mov
test
inc
cli
arpl
flds
ds
inc
push
add
fiaddl
dec
in
outsb
dec
xor
add
pop
cmp
jne
add
add
in
xlat
sub
inc
clc
pop
jns
dec
clc
push
push
xor
pop
ds
imul
repz
or
mov
pop
jmp
ror
ret
loope
and
push
imul
int3
push
addb
push
push
cmc
cmp
sbb
notb
jo
lret
cmp
push
mov
popa
in
mov
and
pop
add
xchg
push
xchg
jnp
inc
jmp
mov
divl
mov
lock
sbb
fs
adc
jmp
jne
push
sbb
out
xor
imul
pop
jp
sbb
inc
jb
mov
scas
imul
pop
push
lret
mov
sub
or
inc
xor
or
mov
aam
out
lcall
shrb
or
sti
cmp
xor
je
cld
dec
pop
je
scas
mov
dec
cmpsb
sbb
scas
cmp
mov
mov
jnp
daa
idiv
lcall
dec
int3
cld
fisubs
cld
ds
lods
xchg
push
in
and
insb
hlt
adc
repz
or
xchg
das
int3
push
lahf
movsb
mov
notb
mov
inc
add
test
call
sbb
push
pushf
cmpsb
or
popa
cli
add
popa
sub
or
sub
loopne
jecxz
aaa
cld
jmp
add
call
scas
cmp
jl
xchg
cmpl
xchg
jecxz
call
ja
aad
call
pop
cmc
push
adc
jmp
mov
mov
cmpsl
and
lds
imul
mov
rcrb
push
cmp
addr16
daa
cwtl
add
faddl
call
cmpsb
jb
mov
jp
xchg
add
mov
cmp
and
jo
cwtl
xchg
or
cmp
mov
mov
out
rorb
push
mov
std
jp
or
fcompl
adc
jne
mov
inc
jo
ss
jae
add
xor
test
divb
pop
adc
loopne
mov
adc
mov
push
test
inc
mov
in
and
bound
pop
push
nop
jns
in
sti
and
scas
loop
add
cld
adc
fcoml
push
je
push
mov
shr
jmp
mov
daa
repnz
cmp
xchg
or
mov
lret
cmp
nop
jne
scas
or
hlt
call
xlat
push
pop
jnp
jle
mov
mov
mov
and
decb
subb
and
xchg
jnp
cs
stc
inc
sub
mov
sbb
mov
pop
mov
or
push
adc
test
icebp
and
movsb
fdivr
xchg
xchg
adc
inc
ret
mov
add
mov
push
cmp
or
inc
les
push
sbb
decl
repnz
and
lock
sti
inc
cmp
icebp
push
aam
inc
shlb
and
inc
roll
test
xor
adc
or
inc
and
repz
inc
and
inc
add
push
push
dec
movsb
loop
and
rolb
dec
pop
add
and
stos
dec
mov
adc
xchg
pop
mov
lcall
xchg
and
js
or
jle
add
leave
insl
inc
lret
sub
fs
subl
adc
cmp
adc
adc
into
cmc
sbb
rcll
or
add
sbb
push
add
cmpsb
repz
insl
ret
bound
sbb
std
adc
mov
push
push
mov
pusha
mov
jns
dec
pop
mov
cwtl
dec
mov
je
push
das
jmp
rcll
clc
push
xchg
jmp
sbb
or
ret
lods
adc
sbb
dec
repz
sbb
and
sub
jmp
xor
pop
cmp
inc
loopne
push
sti
lcall
xchg
out
push
dec
mov
fcoms
mov
shlb
scas
shlb
mov
xchg
adc
test
mov
mov
cvtps2pi
jmp
les
inc
in
adc
sub
cmp
adc
and
add
jl
or
mov
call
or
mov
or
scas
inc
enter
push
aam
bound
fiaddl
ljmp
or
mov
cmp
xor
push
mov
test
negl
and
dec
xor
inc
pop
ss
arpl
sub
jmp
mov
ljmp
adcb
adc
sbb
lods
fisubl
add
add
std
xor
sub
adc
or
xchg
popa
cmp
ror
or
and
jl
mov
mov
add
cmp
out
mov
mov
cmp
mov
cs
inc
mov
jbe
pop
mov
jno
inc
and
testb
cmp
and
jnp
call
pop
pushf
loop
or
inc
mov
jp
mov
sbb
sbb
lret
mov
test
shl
adc
jo
daa
rolb
adc
test
cmp
jl
pop
mov
in
sub
ret
adc
mov
push
pop
sub
lcall
add
fnstcw
call
nop
rcrl
and
aam
mov
mov
inc
push
inc
outsl
or
int
push
das
sub
push
push
sbbb
or
sahf
jno
daa
pop
lds
divb
xchg
pop
inc
bound
movsl
push
sub
repnz
inc
xchg
data16
pop
pushf
imul
das
outsl
pop
arpl
or
movsl
fdivl
mov
fisttps
mov
cmc
sub
cmp
mov
pop
jl
lret
xchg
dec
lret
dec
or
lods
mov
mov
jmp
cmp
pop
sbb
and
in
xchg
insb
popf
pop
or
xchg
xchg
pop
xchg
mov
sti
add
xor
movsb
jl
add
push
xor
inc
push
and
add
xchg
adc
mov
mov
or
inc
mov
cmp
stos
stos
mov
aas
loop
mov
xor
push
pop
inc
int3
add
leave
and
sbb
lock
mov
or
cmpb
dec
or
iret
add
out
xchg
rcl
les
fistl
rol
mov
test
xchg
out
aam
mov
mov
or
loopne
cmpb
xchg
or
sbb
mov
add
inc
lea
gs
imul
inc
adc
andb
lret
dec
sbb
jae
sbb
adc
inc
std
mov
xor
or
rolb
outsl
mov
je
adc
sub
add
mov
xor
pop
ret
pop
mov
and
into
xor
adc
mov
call
bound
push
popa
test
xor
aas
adc
sub
repnz
push
stos
mov
xchg
or
or
pop
stc
je
cmp
jmp
imul
sub
cmp
push
mov
andl
ja
in
fdivl
push
xchg
add
mov
popf
jnp
and
adc
movsb
cmc
nop
les
call
test
stos
sti
cmp
and
mov
xchg
ret
and
nop
mov
push
xchg
cli
pop
jl
jae
dec
shl
sarb
enter
inc
cmp
inc
hlt
bound
dec
jb
insb
mov
xchg
dec
xor
leave
push
repnz
sbb
add
push
gs
mov
pop
sub
sbb
enter
das
add
sub
fadds
mov
lcall
subl
ljmp
adc
cmp
pop
inc
out
pushf
sub
and
call
and
push
jo
xlat
pop
test
out
push
clc
push
leave
repz
gs
cmp
ficompl
push
sarl
mov
cmpsb
inc
xor
and
sbb
stos
push
lea
pop
push
movsl
sub
sub
scas
js
inc
pusha
int3
jbe
sub
add
xchg
jmp
fnstenv
fldenv
data16
xor
mov
xchg
adc
adc
sub
adc
adc
and
stos
and
hlt
js
shlb
stc
sub
add
popa
das
test
or
sbb
sub
pop
adc
and
add
and
and
lods
xchg
cs
jne
nop
lea
cmp
push
lock
dec
xchg
xlat
sbb
and
andb
xor
pusha
mov
movzbl
xchg
or
adc
pop
les
and
sbb
lds
cmpsl
add
add
flds
xor
mov
sbb
lods
add
lds
std
dec
push
inc
js
scas
or
pusha
jp
mov
lahf
icebp
movsl
std
lcall
xor
push
mov
bound
int
adc
or
fs
adc
jmp
dec
int3
mov
cmpsl
cltd
xchg
adc
and
inc
pushf
lods
sub
push
lcall
push
mov
jge
or
movsb
sbb
stos
or
lods
xorl
enter
fidivs
adc
adc
inc
pop
and
xchg
bound
das
or
cwtl
movsl
or
pusha
xchg
inc
inc
lahf
xor
pop
xlat
pop
add
test
jb
add
clc
cmpb
xchg
mov
test
dec
jp
or
inc
push
test
inc
sub
stc
xor
sbb
fbstp
mov
sahf
xor
orb
cmpsl
pop
sub
jo
jo
sahf
sbb
pop
or
mov
mov
inc
mov
or
jnp
mov
mov
popf
sbb
inc
icebp
mov
pusha
pop
adc
in
je
inc
lea
jne
adc
nop
xor
ret
push
push
pop
or
xchg
cmp
lock
lea
cmp
rolb
insb
inc
das
inc
jmp
scas
hlt
dec
pop
sbb
inc
daa
inc
in
das
and
hlt
nop
jmp
inc
push
add
icebp
cld
stos
arpl
jns
popf
ror
xor
in
jmp
cmpl
inc
loopne
inc
jl
dec
mov
loope
loop
cmp
inc
aam
pop
or
test
neg
sbb
push
pop
and
pop
push
xchg
sbb
xorb
push
mov
bound
jecxz
in
out
sbb
pop
repnz
jo
mov
je
dec
inc
adc
sub
and
aas
cmp
and
dec
sarb
daa
call
jl
aaa
mov
movsl
aam
push
xchg
cs
jae
xchg
sbb
inc
cli
movsb
or
scas
mov
in
cmp
adc
sti
std
cmpsl
fimuls
xor
out
in
loop
dec
mov
push
and
arpl
lds
leave
std
mov
xor
push
fsubrs
mov
imul
dec
sbb
mov
enter
push
flds
inc
shr
xorb
cmp
xor
sbb
std
dec
mov
ds
inc
in
imul
enter
rclb
mov
mov
lods
stc
mov
pop
xor
mov
hlt
into
push
outsl
or
in
or
outsl
cltd
and
and
xor
shrl
enter
call
mov
cmpb
hlt
lock
sub
fwait
add
xchg
test
jmp
fdivs
decb
cld
mov
fcoml
and
xchg
mov
xor
arpl
push
push
fidivrs
and
in
xor
push
push
sub
test
popf
enter
sub
or
jne
add
testb
xchg
or
call
mov
inc
loop
push
inc
in
nop
daa
les
jb
push
and
push
and
sti
dec
rorb
jmp
out
fdivs
dec
push
into
call
pusha
cld
mov
pop
sbb
sub
inc
add
and
mov
int3
or
leave
out
negl
mov
shrb
push
sbb
pop
jmp
cmc
test
xor
mov
xchg
push
pusha
fs
mov
hlt
mov
fcomps
inc
add
adc
call
push
lea
cmp
lret
push
call
push
dec
jecxz
cltd
pop
jne
lods
nop
xchg
aam
push
mov
mov
adc
and
sub
push
push
xchg
mov
test
mov
xchg
or
cwtl
insl
repz
mov
mov
adc
xor
fmull
dec
add
rcr
mov
dec
loopne
push
clc
cli
loope
jecxz
and
cmp
push
sahf
mov
pop
movsb
or
xchg
push
in
mov
imul
xor
insl
pop
xchg
rol
sbb
inc
jp
push
call
dec
rclb
dec
shll
and
mov
enter
lods
add
adc
bnd
and
mov
jo
mov
mov
mov
dec
mov
cmc
dec
cs
mov
aam
sub
xchg
std
andl
inc
mov
mulb
aam
add
push
push
mov
dec
push
push
out
dec
sbb
imul
lcall
imul
or
jbe
mov
jo
mov
int
clc
push
cs
push
mov
out
mov
and
cld
sub
sbb
push
fcomps
inc
lea
sti
test
push
add
repnz
pop
mov
push
cmp
lahf
test
jb
jl
push
push
fs
pusha
std
sub
and
in
enter
inc
mov
dec
add
mov
cmpl
adc
adcl
je
std
mov
imul
pushf
jbe
push
lea
je
inc
add
add
rclb
jb
lock
inc
jae
adc
test
adc
mov
jne
mov
adc
movsb
call
jmp
mov
lods
adcb
mov
jbe
roll
or
je
adc
add
jb
jmp
dec
test
jae
lea
pop
mov
adc
mov
xor
in
test
mov
fidivrs
mov
call
nop
mov
jns
mov
sbb
inc
scas
adc
std
sbb
push
fdivrs
dec
sub
push
sub
fs
adc
es
dec
adc
insb
mov
test
xchg
cmp
xchg
sbb
and
push
add
xor
and
adc
movsl
cmp
mov
out
pop
adc
or
sbb
mov
fdivrs
and
sub
arpl
shr
pop
sub
in
adc
xchg
shll
lods
cmp
mov
jne
inc
outsl
mov
add
mov
incl
inc
movsb
call
por
mov
adc
dec
push
movsl
idivl
call
xor
js
xchg
jne
lret
or
lahf
lret
cmp
and
rorl
repz
adc
mov
cmp
rcr
sbb
jp,pt
jo
push
test
fimuls
aam
jle
push
jmp
nop
aam
pop
sti
sub
mov
sub
xor
push
insl
push
sti
cltd
mov
add
add
andb
testl
addr16
or
adc
sbb
in
cmp
sbb
inc
call
dec
or
jne
push
pop
and
out
and
pushf
bound
test
jmp
ret
push
adc
mov
cli
fwait
adc
inc
sbb
inc
jle
cmp
mov
mov
push
push
jmp
sub
push
xchg
pop
mov
sub
add
push
repnz
jl
mov
mov
and
lods
add
hlt
cld
mov
call
sub
sbb
push
add
fldlg2
scas
das
fsubrl
loope
add
mov
push
sti
inc
and
test
push
push
icebp
std
cmc
pushf
into
je
addb
jne
sub
pop
add
push
cli
jns
or
out
push
xchg
adcl
mov
imul
add
call
test
dec
ret
and
mov
adc
pop
jl
clc
mov
mov
add
sub
lret
lock
mov
mov
mov
adc
mov
aam
xchg
fsubrs
filds
mov
mov
adc
inc
pop
push
mov
or
test
and
sbb
mov
jp
lock
popf
enter
clc
push
or
mov
push
push
add
int
sub
dec
iret
sub
pop
lods
int
pop
push
in
aam
or
cld
sub
and
test
aaa
cmp
sbb
clc
push
dec
jae
sub
lock
or
lea
or
xor
or
in
sti
inc
daa
jae
or
sbb
mov
cmp
xchg
jbe
jmpw
pop
mov
xlat
sub
out
and
push
cltd
shrl
jns
jg
in
xor
add
xor
xor
mov
jmp
out
enter
mov
popf
enter
push
cmp
lret
dec
lahf
ret
jmp
and
insb
shr
dec
mov
mov
sbb
ljmp
add
jns
push
xor
xchg
mov
es
stc
ja
mov
dec
pop
xchg
and
inc
add
add
mov
inc
pop
mov
or
test
xchg
adc
cli
rep
fistpll
les
jmp
xor
leavew
xor
inc
and
out
push
or
push
jecxz
inc
enter
call
cmp
pop
jb
mov
xchg
inc
sub
inc
or
icebp
jmp
inc
ja
jmp
jge
test
pop
mov
pop
mov
addr16
add
pop
and
cmp
andl
out
sub
data16
adc
xor
dec
mov
clc
jo
call
fldl
mov
inc
cmp
mov
xor
jmp
mov
test
stc
jmp
adc
adc
or
out
sbb
push
push
sbb
sbb
push
sbb
call
and
mov
pop
pop
pop
mov
filds
stos
and
call
ficompl
mov
or
orb
push
add
xchg
cmp
call
adc
test
push
add
les
je
daa
mov
and
imul
push
adc
mov
push
enter
mov
dec
dec
xor
cwtl
jae
and
inc
jne
lcall
cmp
pushaw
rcl
lock
jmp
and
add
push
and
sub
or
and
test
xor
jne
scas
std
test
sbb
jg
pop
mov
sbb
pop
movsl
and
cmc
adc
and
and
adc
or
xchg
xchg
jb
lock
aas
sub
cmpb
je
je
dec
and
or
cmp
stc
or
call
inc
or
or
or
jp
inc
jbe
roll
insl
xor
dec
es
add
add
and
cmc
jp
inc
sbb
mov
call
test
addl
cs
das
mov
add
mov
and
into
dec
or
inc
call
lock
jb
lret
in
stos
and
push
sub
xchg
int
cmp
sub
xor
push
jo
adc
pop
je
xchg
mov
jmp
add
pop
lcall
lock
popf
dec
cmp
sbb
je
cmp
adc
pop
pop
nop
sbb
push
ret
adc
call
cmpsb
sbb
scas
fmull
rorb
inc
in
xchg
adc
pop
push
leave
jmp
enter
imul
cmpb
jne
pop
xor
sbb
fstps
fadds
push
and
adc
notl
push
gs
movsb
adc
shlb
aam
ja
pop
mov
daa
icebp
dec
lcall
xor
lret
mov
adc
leave
adc
cmp
jp
int3
inc
aad
mov
or
loop
mov
adc
dec
pop
rcl
mov
add
insb
cli
add
sti
xor
call
jge
or
xchg
push
sti
std
lea
lret
je
cmp
out
xor
mov
ljmp
loop
test
fildl
mov
pop
sub
pushl
or
cmp
lret
xchg
mov
into
lahf
cltd
rolb
or
nop
pop
clc
call
push
add
sub
mul
inc
add
adc
jmp
adc
jae
xor
push
xor
loopne
sbb
jno
fwait
ret
sbb
ja
test
aas
push
push
in
imul
ret
fldl
iret
cmpb
xor
dec
jne
hlt
inc
push
cwtd
inc
les
insb
inc
cli
push
cmc
push
loop
sbb
insb
or
pop
fwait
call
push
sar
shrb
call
call
xchg
sub
popf
push
enter
jo
and
and
pop
adc
out
cmpsb
cmp
cvttps2pi
mov
sbb
int3
sar
mov
enter
pavgw
or
ja
notb
lahf
inc
cmpsb
jbe
nop
or
push
lds
dec
repnz
out
test
mov
out
repz
not
cwtl
adc
outsl
add
cmpsb
cmp
jle
xchg
and
sti
and
add
int
xchg
sub
mov
sbb
js
adc
js
xor
das
bound
dec
out
loope
mov
pop
push
mov
insb
mov
decl
and
add
adc
push
mov
pop
xchg
jo
mov
pop
add
add
jmp
push
and
and
clc
stos
out
inc
push
lds
xchg
outsl
nop
cld
test
push
cli
mov
or
jbe
fs
test
jg
scas
xchg
sub
dec
aas
adc
sbb
and
bound
or
mov
and
out
cmp
ss
inc
pop
int3
and
in
mov
and
sbb
inc
shr
push
es
add
and
ds
or
push
pop
cs
mov
cs
cmp
adc
into
imull
and
les
and
push
les
nop
sbb
mov
lret
subb
movsl
jecxz
divl
scas
and
dec
sbb
cmc
clc
lods
ss
push
aam
loope
mov
cmp
pop
stc
int3
jne
xor
aas
int3
ss
mov
dec
adc
fsts
andb
push
sbb
pop
or
insb
mov
and
popl
push
or
jge
or
jecxz
addl
aad
mov
in
sbb
adc
mov
adc
ss
bound
sub
add
xchg
out
xchg
dec
push
xor
stos
push
int
or
fstpt
cmpb
jne
in
das
push
or
lds
mov
mul
and
outsb
dec
sub
mov
ja
es
ret
jmp
mov
sbb
adc
xlat
fs
adc
out
dec
mov
mov
je
orb
imul
lea
adc
lock
xchg
sbb
push
and
es
or
loop
inc
and
lret
mov
pop
sub
cmpsb
mov
push
mov
dec
imul
pop
daa
pushl
cld
and
pop
xchg
cmpsl
mov
add
jne
push
dec
adc
test
mov
aam
repnz
jmp
insb
cmp
pop
sub
sbb
testl
or
xor
push
push
scas
out
inc
call
pop
mov
push
popf
xor
cwtl
sbb
and
out
or
add
aam
mov
imul
mov
sub
push
mov
stos
jmp
xor
je
scas
adc
pop
sbb
dec
je
adc
rorl
or
mov
pop
dec
and
aaa
push
fdivr
sbb
inc
les
dec
mov
and
and
aad
push
adc
je
xor
bound
or
sub
cmp
inc
mov
sub
mov
lret
mov
movsb
mov
test
iret
cmpsb
mov
gs
inc
pop
push
lods
jp
add
pushf
push
dec
xchg
mov
inc
adc
jo
mov
nop
in
or
neg
push
cmp
mov
cld
repnz
mov
ja
scas
repz
test
insb
add
stos
and
adcl
push
scas
sub
iret
jmp
or
mov
adc
dec
pop
pop
push
xlat
sbb
lds
rorb
shlb
pop
mov
mov
or
xchg
popf
push
push
adc
push
xor
jne
das
inc
aam
out
lock
cmpsl
sub
notl
addl
inc
xchg
sarb
enter
cmp
popf
arpl
or
sbb
inc
jge
dec
in
mov
nop
int
mov
and
xchg
popf
inc
ljmp
mov
or
xchg
ret
jae
xchg
add
lods
and
repz
push
jb
cmc
in
and
push
ljmp
cmpsb
mov
push
fs
imul
push
enter
fsubr
push
xchg
mov
jecxz
push
xchg
into
adc
repz
lock
xchg
int3
push
or
mov
mov
pmullw
xchg
mov
jae
rcll
mov
rolb
add
lea
stos
fwait
cmp
pusha
push
fidivl
int3
cwtl
pop
dec
inc
mov
dec
shlb
mov
jne
and
popa
nop
mov
sub
cltd
or
ss
sbb
pop
push
dec
popa
ret
jmp
and
mov
pop
orb
out
cld
call
movsl
in
and
adc
mov
fcomps
jl
cmp
dec
xor
mulb
fmuls
mov
adc
dec
sti
adc
in
gs
inc
dec
sbb
les
mov
test
and
scas
negb
aam
lret
andb
xchg
sub
stos
add
mov
push
test
mov
xchg
or
inc
mov
jp
add
lret
xor
out
dec
or
testl
mov
cwtl
int
cmpsb
cmpsb
aas
jne
scas
ss
jo
je
and
and
les
adc
sbb
inc
das
adc
inc
push
inc
adc
jne
mov
mov
sub
inc
sub
lret
je
xor
push
mov
push
stos
dec
sbb
icebp
inc
call
call
lcall
xor
les
stc
dec
inc
mov
inc
ss
cmp
dec
jg
jno
push
jmp
loope
jmp
cld
xor
add
sbb
pop
adc
mov
in
aas
pusha
pop
sub
sub
dec
adc
sub
jno
jae
sub
push
insb
or
adc
push
dec
push
push
cmc
sub
mov
mov
inc
inc
dec
adc
out
movsl
sub
je
jmp
mov
andl
xlat
add
adc
or
call
adc
mov
inc
xor
sub
lret
sbb
mov
inc
js
in
std
jp
ja
mov
pop
cli
lcall
les
notb
and
sub
roll
mov
xchg
jb
ljmp
pop
sbb
sub
cmp
pusha
xor
sahf
push
sarl
sarb
and
xchg
pop
loopne
add
or
dec
mov
or
loop
in
rolb
dec
mov
test
hlt
fadd
push
mov
lret
adc
lock
addl
inc
pop
mov
imul
call
imul
fidivl
cmp
test
add
shrb
in
inc
sti
push
or
adc
dec
or
insl
stc
dec
mov
in
mov
faddl
mov
and
mov
mov
add
cmp
and
adc
inc
mov
stc
nop
mov
lds
mov
xchg
push
sub
mov
add
xchg
xchg
lret
inc
mov
xchg
jmp
inc
jo
xchg
leave
pop
test
sete
push
out
inc
sbb
inc
xchg
imul
test
shrl
xchg
ljmp
outsb
push
xor
ret
cmp
jne
xchg
dec
push
sub
sub
or
test
adc
sbb
jne
inc
loopne
sti
inc
add
xor
or
fsubl
scas
pop
jmp
mov
adc
or
pop
or
es
icebp
xchg
push
push
call
je
dec
ss
std
pop
push
sub
test
adc
xor
or
mov
lret
push
arpl
push
or
ss
inc
sbb
sub
or
stc
or
pushf
and
mov
rcll
mov
and
add
sub
negl
int
push
push
ds
cmpsb
push
mov
dec
addr16
lock
int3
call
jle
lds
push
inc
pop
inc
iret
jmp
mov
inc
add
cld
icebp
mov
inc
adc
inc
pushf
call
cs
mov
call
push
outsb
mov
push
push
cmpl
mov
xor
push
jmp
add
push
std
aad
repnz
sbb
push
adc
or
out
mov
mov
adc
adc
push
mov
clc
fwait
sarb
fldenv
fwait
icebp
cltd
pop
or
push
bound
test
call
lods
cmp
mov
and
inc
mov
fadds
fmull
fiaddl
or
mov
push
sbb
add
frstor
and
lret
dec
dec
hlt
popa
int
lock
dec
mov
jmp
mov
adc
adc
imul
leave
mov
jmp
mov
sub
int
loope
flds
aaa
xchg
mov
je
add
xor
fisttpll
in
cmc
inc
and
cmp
movb
inc
mov
sarl
inc
cmpsb
jb
stos
dec
or
mov
or
call
mov
xor
add
insl
je
inc
push
mov
test
ret
out
mov
fcoml
xchg
out
xchg
int3
or
arpl
mov
adc
fcoml
inc
lock
out
dec
aam
fisubs
inc
movsbl
aas
icebp
out
cmpsl
sub
or
jg
push
movl
pop
in
aas
jmp
js
push
leave
mov
xchg
and
and
pop
inc
cli
sti
mov
or
push
jmp
push
pop
adc
out
or
jne
and
or
cs
adc
repz
dec
mov
adc
sub
or
pop
cmpsb
mov
push
or
xchg
cmpsl
xchg
dec
jns
jmp
testl
jns
inc
daa
add
jmp
push
jne
jno
jmp
lock
sti
arpl
mov
pop
inc
ljmp
pop
jge
call
mov
rorl
mov
rcrb
clc
lret
in
sti
sub
dec
dec
sti
and
pop
adc
push
mov
inc
call
push
mov
fidivrl
add
push
mov
pusha
int3
dec
xor
int
cmp
les
les
cmp
or
mov
idivb
dec
test
and
test
dec
and
sbb
adc
or
or
sub
les
push
jb
xchg
in
and
jmp
mov
sub
or
push
ret
insb
xor
pop
pop
sbb
mov
xor
jno
or
jge
xor
ja
test
pop
stc
outsb
sub
pop
lods
mov
mov
mov
imul
pop
ljmp
adc
sbb
adc
push
imul
cmp
aad
loop
cltd
bound
and
xor
dec
in
imul
sbb
repz
sub
sti
xchg
ja
cmovnp
jae
call
push
popa
push
les
nop
inc
call
jle
enter
loop
adc
cmc
add
call
in
test
icebp
repnz
xchg
dec
leave
xchg
repnz
mov
or
outsl
xor
dec
lea
inc
xor
and
stos
xchg
sub
cld
sbb
mov
push
cmp
mov
xchg
adc
pop
xchg
push
nop
aas
or
lret
push
mov
data16
dec
test
xchg
xor
push
shlb
pop
mov
inc
sbb
popa
xchg
pop
shll
and
cmp
leave
inc
notb
sub
mov
or
iret
jae
stc
add
or
lock
mov
lret
mov
sbb
push
lret
inc
adc
push
cmpsl
das
jbe
sub
xor
loop
jl
pop
pop
mov
insl
or
insl
sub
lret
outsl
pop
in
inc
inc
inc
pop
mov
jb
push
mov
push
leave
loop
or
push
mov
sbb
dec
icebp
in
test
mov
push
clc
xchg
andb
jno
nop
push
gs
mov
sub
test
xor
pop
popf
sar
stc
sub
xor
lods
inc
mov
mov
mov
hlt
mov
sbb
lods
sbb
add
lods
jo
push
out
sahf
lods
loope
cmp
int3
rcll
pop
mov
dec
flds
inc
mov
mov
lods
pop
mov
sub
mov
std
adc
sub
jmp
jmp
push
or
jne
push
adc
adc
stos
and
hlt
and
lods
cmp
out
mov
sub
xchg
and
xchg
or
pop
mov
ljmp
ljmp
mov
negl
fadd
call
pop
xlat
inc
pop
pop
mov
cltd
dec
jns
jle
xchg
xorl
sbb
adc
sub
inc
xorb
and
jne
or
enter
daa
hlt
mov
sub
cmpb
mov
mov
mov
je
xchg
or
fs
sbb
xchg
jge
clc
ret
js
mov
mov
mov
call
sub
and
roll
and
test
loop
sbb
mov
enter
bsf
aaa
pop
sub
adc
fs
in
xchg
icebp
xor
mov
adc
xor
or
shll
jmp
inc
dec
adc
rolb
cs
test
sub
adc
je
mov
orb
and
imul
xchg
jne
popl
sub
dec
lods
mov
outsb
mul
mov
sahf
push
mov
mov
js
add
push
test
or
inc
mov
dec
stos
add
and
push
cld
cmc
mov
sahf
ret
xchg
mov
pop
jne
fimuls
cmp
push
jl
or
cld
mov
add
push
mov
movsl
jle
addr16
adc
mov
cwtl
cmp
mov
pop
lds
mov
ljmp
push
es
adc
add
and
pop
repnz
push
call
aaa
popf
jne
lods
cltd
mov
jne
jne
jl
jo
lahf
pop
in
xor
sbb
icebp
xchg
rcrl
pusha
xlat
mov
xor
pop
sti
jge
or
xchg
mov
and
out
and
jno
pushf
nop
and
cmpsb
push
xchg
sub
dec
dec
mov
push
pop
push
jl
and
mov
popf
lahf
add
cmp
in
aaa
mov
sti
add
and
and
xchg
out
dec
lea
dec
std
cwtl
inc
call
sahf
aam
cmp
ret
arpl
movsb
adc
iret
lcall
daa
mov
call
and
js
pushf
push
adc
les
movsb
sbb
pop
pusha
pusha
jle
jmp
inc
aad
orl
test
add
jg
sbb
dec
push
ret
adc
add
push
push
cmp
adc
add
inc
xchg
inc
add
xor
mov
pmulhw
lods
sub
xor
test
xorb
mov
and
lods
add
clc
jnp
mov
daa
cmp
jbe
insl
xchg
les
xchg
push
jmp
scas
xchg
mov
lods
arpl
dec
test
push
inc
fisubs
ret
sahf
lahf
into
shrb
xor
xor
inc
inc
incb
xor
add
add
push
test
shr
orl
pop
dec
jp
xchg
adc
jge
mov
xchg
test
ret
sbb
pop
pop
call
mov
mov
shlb
iret
sahf
jbe
leave
jne
loope
inc
lods
mov
cmp
js
cmp
testb
add
shrl
sub
xor
out
pop
mov
stc
sub
int
push
cld
lret
mov
aas
or
das
mov
sbb
pop
aam
in
dec
adc
mov
std
or
inc
xor
pop
push
push
lret
sarb
sub
jle
js
and
inc
mov
lahf
out
and
cwtl
mov
cmc
out
and
cwtl
lret
cmpl
popf
shrl
daa
xchg
repnz
inc
das
xchg
jo
inc
mov
imul
sub
and
aaa
push
jne
mov
insl
adc
loop
hlt
jne
insb
je
push
outsb
pop
lret
sub
push
push
xchg
xchg
adc
mov
test
xor
scas
sbb
push
ljmp
lret
mov
sbb
jle
test
pushl
inc
sbb
sub
mov
sbb
fdivs
dec
jmp
int
push
adc
push
mov
adc
pop
inc
orb
xchg
enter
mov
adc
add
or
inc
sub
mov
dec
cld
adc
sti
cmc
inc
mov
dec
shlb
pop
test
fidivl
xchg
leave
data16
lret
cmp
nop
mov
sub
mov
mov
inc
xchg
sahf
loope
add
mov
jb
dec
cmpsl
mov
add
push
call
aas
xchg
por
mov
pop
aas
inc
and
in
enter
pop
mov
pop
loopne
push
cmc
enter
sub
lock
inc
cmc
clc
xchg
lahf
jbe
adc
adc
and
pusha
xchg
push
push
sub
dec
scas
xchg
aaa
inc
cmp
sub
inc
sub
xchg
or
inc
icebp
ljmp
jbe
pop
or
movsl
adc
in
in
jo
and
repnz
jl
adc
mov
js
arpl
and
cmp
sub
in
mov
adc
out
cmp
lds
and
sbb
dec
cld
idivb
and
pop
mov
mov
xchg
cmpsb
jp
bsr
jne
outsb
dec
pop
adc
sbb
mov
lahf
push
inc
popf
and
call
cltd
pop
adc
movsl
xor
adc
jne
sti
fnsave
repnz
dec
and
les
sarl
dec
mov
xor
push
inc
scas
jle
and
ljmp
scas
push
mov
sti
mov
xchg
loope
sub
xchg
lock
mov
aam
loope
push
push
dec
xacquire
dec
dec
in
adc
mov
mov
lock
cmpb
cwtl
rcrb
cmp
jle
pop
xlat
sbb
pop
xlat
pushf
push
outsb
sbb
clc
je
adc
fldenv
data16
dec
inc
push
and
cli
sbb
movsb
in
jp
xchg
in
adc
inc
test
sbb
mov
loop
sbb
inc
hlt
and
notl
and
push
lock
les
cltd
nop
scas
popa
mov
rclb
mov
lea
jne
add
or
mov
cmp
fs
push
pop
jl
scas
test
je
xchg
adc
xchg
adc
dec
repnz
ret
jmp
addr16
cmp
inc
sti
and
jno
adc
gs
xor
pop
mov
xor
mov
btsl
outsl
bound
or
sub
mov
rolb
inc
pop
mov
aad
and
sbb
inc
xchg
mov
cmp
sbb
inc
std
adc
add
dec
sti
faddp
adc
std
push
popf
loop
call
mov
xor
inc
inc
mov
clc
les
hlt
pop
hlt
lock
std
mov
stos
cmp
repnz
adc
es
jo
sbb
push
mov
test
add
out
push
jno
cs
cli
xor
dec
mov
cmpsl
add
jl
mov
mov
adc
popa
cmp
out
mov
adc
mov
loopne
lret
mov
push
lods
shlb
jp
xchg
in
xor
mov
dec
fisubrs
jmp
das
stos
loope
decl
cmpsl
mov
or
add
sbb
aam
or
push
int3
sbb
push
fcompl
call
bound
idiv
push
movsb
sbb
push
inc
pop
in
call
inc
and
call
or
add
push
jno
push
inc
jb
cmp
adc
cmp
push
and
stc
push
dec
mov
push
hlt
sub
push
inc
add
ficompl
rolb
mov
insb
bound
clc
push
push
lods
leave
cli
push
outsb
mov
cltd
push
adc
lock
and
ss
in
adc
sbb
cltd
push
mov
out
add
ss
pop
adc
jo
lret
jnp
push
jmp
adc
pop
sub
mov
shl
stos
pop
cmp
cld
lds
stc
mov
push
imull
arpl
and
push
add
nop
add
xchg
push
sub
int
fmuls
mov
and
call
and
mov
and
sbb
in
leave
data16
inc
inc
int3
inc
xor
jne
pusha
xor
adc
hlt
loopne
adc
inc
and
inc
lahf
and
gs
mov
stc
mov
sub
lret
mov
adc
dec
mov
add
lret
sub
rcrb
cs
and
gs
push
xchg
cwtl
sbb
je
sbb
inc
xchg
pop
mov
pop
pop
std
fs
enter
ficompl
cmp
jnp
fadds
inc
xorb
inc
movsl
xchg
addr16
push
or
push
cmp
lea
sbb
and
orl
cs
jg
sbb
aas
xchg
xchg
push
cmp
test
pop
pop
insb
dec
add
mov
jbe
jo
pop
movsl
fcompl
and
xchg
pop
sbb
fmull
xor
adc
scas
cltd
cmp
inc
inc
nop
pop
cmpsl
xor
xchg
and
enter
ja
push
cwtl
into
inc
hlt
mov
cli
push
push
sbb
or
enter
mov
scas
ja
sbb
mov
fisubl
cmp
jne
push
fcmove
pop
xor
fdivrs
dec
jmp
addl
xlat
mov
sbb
sub
call
pop
fs
imul
movsb
outsl
add
ja
sbb
pop
add
cmp
add
fsubs
test
and
pop
cmp
sub
orb
inc
je
call
push
xadd
or
add
imul
jmp
sbb
jo
mov
sbb
adc
add
or
xor
lock
mov
mov
mov
adc
mov
inc
push
push
mov
cmp
rcrb
jmp
sub
cmp
lods
inc
xor
push
push
pop
jns
inc
out
adc
inc
popf
push
cld
mov
test
and
outsl
push
ret
ss
pop
or
dec
jp
jne
fsubrp
xchg
cmp
enter
divl
mov
adc
cmpsl
andl
sbb
sbb
cld
jmp
and
push
movsl
in
and
inc
mov
jb
pop
sub
xchg
adc
inc
cltd
or
or
das
ror
adc
push
std
lret
push
inc
fisubrl
xlat
pop
mov
inc
fmuls
and
popf
mov
mov
push
cmp
adc
or
lea
jmp
enter
popf
ja
xor
scas
xlat
leave
cli
pop
clc
mov
inc
inc
jle
aam
xor
enter
xor
inc
jle
and
xlat
sarb
jns
jne
aam
imul
inc
lret
shrb
fimull
popf
fisttpll
or
inc
scas
mov
mov
jle
repnz
mov
test
ss
ret
shlb
lods
mov
add
adc
mov
imul
mov
movsb
jno
aam
mov
movl
int3
xor
inc
mov
cmpsb
aas
jp
inc
int3
daa
in
lcall
mov
sbb
js
daa
in
inc
out
test
popf
or
push
sub
cmp
mov
mov
cmp
rorl
cmp
stos
adc
loop
in
cld
mov
cmp
mov
pop
jne
icebp
and
dec
sbb
cs
jb
mov
dec
out
aam
jl
imul
adc
pop
arpl
call
ret
sub
fists
divb
pop
push
and
cmp
lods
into
addr16
mov
lods
daa
cld
dec
pop
jmp
xchg
cmp
sub
and
sbb
test
sahf
mov
rorl
adc
fists
push
jo
dec
test
les
add
jb
push
cwtl
fwait
xchg
cmp
iret
mov
les
popf
js
inc
pop
pop
insb
mov
jne
mov
or
icebp
push
push
push
sub
jle
lods
in
or
mov
sub
into
mov
mov
push
popa
je
dec
cld
push
sub
pop
arpl
xlat
lods
xor
add
call
stos
fs
xor
add
add
jb
popa
push
or
nop
cmp
pop
mov
inc
mov
clc
nop
gs
enter
loop
lock
push
push
dec
aad
stc
jnp
inc
pop
movsb
xor
mov
sub
cmpsb
nop
add
stos
les
insb
inc
sbb
jno
mov
ficompl
rcl
arpl
enter
push
mov
mov
call
lahf
cmpsl
aad
push
mov
mov
loopne
adc
dec
in
out
call
xchg
jne
xchg
mov
cltd
dec
into
sub
mov
fcoms
mov
das
call
cmp
test
rcrb
repnz
mov
fsubr
movsb
mov
fsubrl
jl
test
lea
adc
ds
cmp
and
pop
lret
and
push
bound
scas
nop
fcoml
loopne
mov
xchg
xor
pusha
ja
icebp
ffreep
cmpsl
ds
scas
xchg
ljmp
mov
and
les
aaa
cwtl
pop
cld
cmp
dec
fmulp
fs
or
testl
mov
mov
mov
les
or
mov
fisubrs
std
adc
xchg
mov
les
and
call
mov
fwait
aas
cmp
pop
pop
divb
insb
xchg
addr16
xor
cld
scas
icebp
insb
adc
or
inc
mov
aam
pop
andl
gs
inc
sub
mov
lcall
jl
aaa
push
adc
out
bound
push
nop
inc
or
xchg
adc
cwtl
push
xor
and
movsb
out
mov
int3
mov
push
mov
push
mov
mov
and
aas
sbb
imul
or
stos
stos
sar
push
call
xchg
cld
push
and
pop
loope
xchg
ljmp
dec
fcomps
push
dec
sbb
addr16
pop
lahf
adc
andb
leave
imul
or
lcall
jg
emms
gs
pop
add
loope
or
jp
repnz
test
cltd
mov
in
hlt
outsb
and
sbb
rcrb
sbb
jge
out
or
or
or
add
xor
call
loopne
stos
addr16
xchg
dec
mov
xor
cmp
push
mov
in
subl
in
test
inc
in
clc
mov
jmp
int
sbb
cmp
fisubs
popf
js,pn
mov
mov
mov
in
jmp
inc
jb
sbb
mov
push
push
mov
sub
femms
mov
and
jo
xlat
adcl
in
mov
sar
call
repz
adc
sar
push
mov
adc
std
adc
xchg
fists
cli
lret
fdivrl
pop
cmpsl
xor
out
inc
and
mov
inc
push
mov
ja
push
int
pop
dec
jno
xchg
or
fs
fists
pop
out
cmp
movsl
movsb
add
add
lret
push
sub
sbbl
xchg
out
lods
cmp
dec
repnz
icebp
xchg
jno
popf
push
sub
sub
mov
or
push
faddp
xor
adc
je
sub
nop
shl
jmp
enter
or
pop
jmp
push
fsts
inc
test
mov
outsl
ror
mov
sbb
loope
andl
push
pop
mov
ljmp
adc
xchg
and
test
mov
sbb
stos
mov
adc
add
xor
js
push
pop
or
jmp
in
xor
adc
and
adc
inc
adc
cmc
push
cmp
mov
pushf
dec
test
dec
aaa
cli
or
shll
push
xchg
test
and
imul
mov
jl
fdivl
or
mov
adc
enter
inc
cmp
out
test
shlb
jnp
add
sub
inc
adc
loop
sub
mov
das
sub
adc
std
adc
imul
jecxz
mov
push
or
repnz
mov
loope
popa
in
std
or
inc
and
fcomps
xchg
enter
push
and
mov
in
dec
nop
stos
and
sbb
pop
out
fadds
mov
pop
mov
push
or
cld
jb
bound
add
loop
inc
adc
sahf
test
inc
xchg
lea
cmp
xchg
clc
dec
clc
adc
fdivr
sub
movsb
mov
push
add
pop
mov
jp
or
or
out
std
or
inc
ja
xor
pushf
cwtl
fnstsw
movsb
sub
push
lret
cmpl
jne
pop
call
pop
in
and
sar
xchg
aas
in
and
out
clc
push
movsb
mov
jnp
xchg
mov
sahf
add
fdivp
ret
inc
sbb
lods
popf
mov
push
inc
loope
dec
xchg
cmp
hlt
stos
push
and
push
or
add
lods
adc
loope
scas
call
adc
test
mov
shll
mov
or
dec
push
mov
mov
push
rclb
ret
adc
int3
enter
and
mov
into
sbb
int3
sub
adc
mov
sarb
test
sbb
test
sub
lea
xchg
sub
add
add
push
and
pop
xabort
leave
or
repz
pop
sbb
rolb
mov
je
push
dec
mov
pop
adc
push
push
loopne
adc
mov
mov
lods
lods
dec
in
lock
sbb
cld
jmp
lret
jmp
lds
fs
dec
mov
push
loop
pop
add
xor
dec
and
inc
adc
loopne
dec
sbbb
and
movsl
fs
fs
or
fwait
cld
mov
or
mov
divl
jne
ret
cmp
dec
js
hlt
xor
xchg
and
jmp
dec
in
outsl
sub
pop
mov
sbb
jb
push
cmp
lds
sbb
les
jecxz
mov
sbb
or
mov
enter
jae
daa
jg
cwtl
lahf
jo
mov
mov
loopne
mov
repz
mov
out
repz
and
adc
test
and
sub
mov
imul
lods
jl
test
movsl
enter
xchg
sub
add
cmp
lock
push
orb
mov
push
inc
jl
inc
sub
test
xor
dec
lods
push
xor
xor
jbe
push
add
jbe
mov
hlt
xor
gs
inc
adc
dec
dec
orb
dec
adc
dec
mov
cmp
dec
mov
adc
add
and
adc
mov
adcl
lcall
and
mov
mov
adc
push
and
mov
add
sti
push
push
xchg
dec
and
repnz
lods
push
lock
dec
adc
cmpsl
xchg
nop
fsubs
or
das
rclb
and
mulb
cmpsb
pop
rolb
daa
sub
push
out
add
sub
into
jae
mov
sub
das
cmpsb
mov
or
push
pushf
inc
dec
jmp
lods
iret
lds
enter
cmc
jmp
cli
dec
fsubrl
inc
lahf
mov
and
mov
push
xor
dec
push
inc
lods
aad
mov
daa
jge
or
jmp
sub
ds
pop
loope
ds
mov
lret
ret
leave
jne
adc
push
cltd
das
cs
xor
lds
testb
pop
push
iret
pop
jg
push
mov
fimull
shrl
mov
pop
adc
leave
je
mov
add
sub
xchg
pop
jo
xchg
je
dec
mov
je
push
pop
adc
fcomps
ljmp
or
fucomi
cmp
imul
cmp
cli
push
sub
shl
sub
jmp
xor
or
push
aam
cmp
dec
test
xchg
cld
mov
sub
xchg
es
adc
js
loope
jl
push
or
adcb
and
bound
xchg
cwtl
outsb
mov
movsb
xchg
lods
mov
sbb
mov
inc
rcrb
or
mov
or
shlb
cmp
adc
fmuls
sbb
loopne
inc
rep
icebp
mov
in
pusha
xchg
call
cld
xor
outsl
repnz
push
popa
lea
mov
mov
mov
test
idiv
push
xchg
pop
and
jg
aas
dec
cli
add
call
cmpb
enter
sahf
out
add
rolb
mov
shrb
stos
pop
jo
leave
mov
mov
add
jecxz
dec
out
mov
das
repz
ret
lahf
ja
clc
pop
jae
movsl
in
adc
inc
dec
cwtl
or
rclb
push
call
sahf
push
xchg
inc
push
clc
and
cmp
dec
xor
jo
sbb
daa
xchg
push
mov
inc
adc
jae
sbb
push
push
jno
shll
lods
popf
xor
mov
and
jns
mov
jb
clc
xchg
imul
lret
inc
add
push
or
and
or
sbb
and
xchg
mov
xor
mov
fistpll
dec
push
int3
xor
nop
orb
and
mov
mov
lock
mov
mov
and
test
and
pcmpgtw
pop
pushf
dec
cmp
add
adc
das
mov
and
pop
fs
test
rorl
test
xchg
xchg
sub
orl
adc
call
mov
gs
movsb
or
mov
add
les
pop
xchg
adc
jecxz
movsl
mov
cmp
pop
cltd
push
daa
scas
or
test
mov
cwtl
xchg
adc
xor
push
rcll
pushl
daa
orl
and
das
push
mov
adc
fidivl
xchg
subl
sbb
rcll
push
add
loopne
and
ficomps
dec
stos
jl
xchg
mov
mov
shlb
mov
jne
push
fadds
inc
pop
repnz
imul
sub
nop
rcll
jae
and
aas
lea
dec
std
outsb
les
cmp
inc
cltd
sub
jge
aam
dec
inc
adc
inc
test
ror
pusha
lea
sbb
push
adc
mov
xchg
or
into
into
adc
stos
inc
inc
jb
mov
repz
repnz
pop
rep
push
mov
mov
loope
cmp
adcl
and
add
jecxz
sub
push
cld
subb
ss
sub
xor
cmc
scas
xorl
mov
mov
gs
sub
les
dec
fcmovnb
jge
push
mov
jne
push
inc
and
dec
test
sbb
je
and
imul
je
mov
int
ret
xor
add
sub
lcall
daa
in
adc
movsl
imul
lds
ds
jle
repnz
mov
mov
add
mov
cmp
push
mov
imull
dec
inc
loope
adc
add
jnp
dec
push
scas
cli
pop
and
push
les
or
int
das
adc
adc
mov
scas
push
mov
cmp
pop
mov
sub
or
cmp
sub
jmp
shl
jne
push
cwtl
adc
or
cmp
inc
subb
push
pop
mov
xchg
cmc
mov
mov
aad
scas
mov
xchg
mov
pop
sbb
cmpsb
cmp
ret
je
sbb
xchg
push
jb
js
ficoml
jmp
mov
pusha
popf
or
scas
mov
pop
cmp
push
push
sbb
and
adc
mov
cmp
aas
sub
xor
lea
leave
mov
lret
push
inc
scas
popf
push
call
mov
nop
mov
or
or
hlt
sbb
lock
push
xor
mov
ds
aam
cmp
out
enter
add
jmp
jno
adc
ret
jge
gs
rclb
dec
push
xor
ret
push
jne
and
nop
inc
xchg
cwtl
cwtl
scas
pushfw
push
mov
in
push
xor
pop
lret
fstl
cmp
adc
pop
int3
sbb
push
push
decb
pop
shl
and
test
inc
bound
imul
push
lods
sbb
mov
mov
mov
lahf
or
out
add
out
add
in
mov
clc
xchg
pusha
lea
cmp
fisubrl
inc
jg
adc
add
inc
dec
les
repnz
and
lods
aaa
dec
mov
pop
data16
dec
mov
push
les
int3
sub
pusha
push
in
push
push
or
push
mov
in
xor
rcrl
sbb
sub
sbb
sub
cld
xchg
call
clc
push
xlat
mov
imul
in
inc
bound
sub
adc
mov
and
pop
xor
cmpsl
lcall
xor
sub
or
adc
sti
add
pop
mov
sub
jg
adc
or
xchg
in
xor
rcrb
and
sub
sub
add
and
adc
cld
movsb
and
xor
leave
call
loope
je
inc
adc
repnz
pop
jmp
inc
outsl
das
adc
or
xchg
xor
clc
js
mov
xor
add
jg
mov
cmp
ret
sbb
dec
dec
scas
dec
sub
test
adc
sbbb
out
add
push
and
mov
pop
mov
sub
sub
sub
test
push
push
jno
mov
push
cmp
adc
dec
push
das
lret
call
and
or
and
sub
mov
push
inc
cld
clc
mov
jmp
leave
outsl
adc
test
mov
xchg
push
lods
stc
or
popa
sbb
pop
xchg
lret
mull
dec
sub
nop
cld
adc
popf
mov
sbb
cld
or
xor
inc
adc
sub
and
les
and
int3
rcrb
stc
testb
add
add
ds
inc
pop
mov
adc
mov
ds
mov
push
lods
mulb
and
mov
mov
and
mov
pop
mov
cmp
xchg
adc
test
adc
mov
adc
addl
test
sub
lret
mov
xchg
adc
adc
xor
push
xchg
mov
int3
loopne
mov
mov
mov
mov
mov
fs
inc
adc
mov
iret
fidivrs
pop
cmp
outsb
inc
jmp
push
sbb
lds
push
iret
mov
add
xor
scas
nop
jnp
push
xlat
push
sub
call
daa
lds
push
mov
fnstenv
in
dec
adc
sbb
push
or
push
xchg
nop
inc
mov
dec
xchg
cmp
fwait
and
mov
iret
sbb
mov
out
inc
fbstp
jge
lea
dec
sbb
nop
es
sub
cmp
loopne
sbb
push
jle
lea
pcmpeqw
mov
pop
push
outsl
scas
iret
jge
test
mov
test
add
movsl
inc
push
mov
and
int3
xor
daa
and
int3
dec
push
insl
nop
xor
push
repz
jo
mov
call
or
xchg
add
mov
dec
shll
dec
pop
in
lcall
out
adc
xor
jae
mov
clc
xor
push
xchg
sbb
xchg
outsb
xchg
outsb
mov
jge
repz
lock
lods
cmp
inc
sub
sub
cmp
in
cvtpi2ps
pop
jg
shll
fcomps
dec
cmpsl
fildll
pop
leave
outsl
push
dec
xor
add
dec
andl
icebp
call
cmp
cmc
pusha
sbb
dec
inc
iret
lds
pop
test
ret
stos
sbb
mov
dec
test
ret
adc
ja
xlat
repnz
xor
test
dec
or
divb
xlat
test
mov
out
flds
jp
cmp
call
test
jmp
or
push
or
push
hlt
stos
mov
xchg
int
xchg
push
xor
fs
jo
jnp
cmp
xchg
push
sbb
dec
mov
xchg
push
xor
rclb
test
imul
movsb
cmpsl
dec
pop
loopne
mov
add
or
mov
mov
stc
inc
sbb
pop
dec
adc
stc
inc
or
push
aad
aam
notl
mov
dec
jne
int
rcrl
ret
rorb
leave
push
mov
cs
stos
shrl
mov
add
iret
and
pop
adc
dec
repz
fs
inc
sbb
and
or
enter
cmp
inc
insb
push
mov
nop
xchg
fstl
pushf
popf
aas
iret
lret
repz
push
inc
dec
es
lods
push
and
jne
jmp
lahf
cmp
mov
mov
insl
pop
inc
and
orl
fwait
in
xchg
cmp
dec
xlat
mov
xor
je
dec
add
jge
insb
test
adc
dec
fsubrs
cltd
test
loopne
cmc
stos
lea
lods
xor
pop
xor
imul
push
cwtl
sbb
push
pop
hlt
inc
cmpb
jl
cld
or
mov
cld
and
xchg
sbb
inc
sub
cld
in
jmp
inc
push
nop
test
cmc
cmpb
dec
and
lds
popf
push
pop
xchg
or
popa
dec
pop
jp
pop
xchg
ret
xchg
bound
popa
outsb
sbb
mov
sub
push
xor
and
cmp
mov
pop
cld
adc
dec
push
loop
std
pop
outsl
stos
xchg
pop
clc
lcall
jmp
or
movsb
adc
push
jnp
add
xchg
jbe
fdivs
xor
pop
jmp
push
xchg
popa
and
rol
jle
lret
lea
and
ja
loopne
and
call
mov
sub
add
lock
or
mov
hlt
sub
inc
and
xchg
icebp
outsl
lret
dec
lods
inc
nop
lcall
inc
or
loop
adc
icebp
icebp
insb
push
xchg
jmp
pop
leave
jg
loope
jmp
addb
and
std
ds
pop
mov
scas
inc
nop
in
data16
lods
dec
push
lea
aas
repnz
xchg
adc
cmpl
lods
inc
add
nop
jnp
sub
pop
in
xorb
xchg
push
bound
pop
lret
mov
cmc
insb
clc
dec
pop
lods
jle
adc
inc
or
xor
jno
xor
jo
mov
mov
mov
and
ret
inc
add
es
and
jae
pop
sbb
jle
sub
jecxz
mov
xor
cwtl
les
std
xor
inc
and
lock
or
push
in
and
pop
cmp
jle
mov
mov
sub
call
in
cmp
cmp
and
lds
sub
call
mov
je
xchg
sub
add
js
mov
push
mov
sti
jae
mov
ret
sub
xor
ja
jl
in
mov
insl
int
or
cmp
ja
dec
addl
adc
xor
mov
push
adc
and
ds
lret
add
xchg
sub
je
dec
mov
inc
jmp
mov
push
aas
imul
outsl
inc
jmp
push
pop
cwtl
ja
mov
nop
in
inc
xchg
dec
and
inc
nop
inc
nop
sbb
cmp
es
mov
fisubrs
push
or
and
in
inc
bound
mov
mov
outsl
and
dec
in
push
adc
add
fs
fld
and
cmp
pop
jnp
jge
fmull
or
addb
push
ss
sbb
adc
and
adc
jnp
and
insb
mov
sar
xchg
scas
jmp
and
outsl
pop
stos
xlat
dec
icebp
mov
inc
mov
cmp
push
pusha
ja
push
jp
icebp
inc
outsb
push
adc
mov
mov
jp
loop
insl
ss
sbbb
or
out
xor
push
xchg
and
lea
dec
cmp
sub
jle
mov
mov
sub
cmpsl
cmp
je
adc
mov
ret
adcb
xor
dec
popa
mov
xor
sbb
jns
scas
adc
insb
mov
movsl
rcrb
sarl
push
adc
orb
or
mov
or
add
and
mov
cmpsl
stc
lcall
mov
push
push
xchg
cmp
xor
inc
and
orb
sbb
and
dec
sbb
mov
push
add
scas
push
xchg
pop
nop
and
add
push
call
mov
stc
test
xorb
sub
jmp
pop
dec
gs
lock
or
sti
jmp
andb
std
adc
call
jl
xor
mov
push
inc
sbb
addb
xor
ret
mov
push
nop
inc
enter
xor
sbb
or
sbb
xchg
pop
fstpl
clc
add
mov
adc
mov
or
cwtl
sub
shlb
mov
pop
jecxz
call
aam
cwtl
add
lcall
cwtl
cmpsl
daa
jns
fstpl
dec
insb
xchg
les
mov
lock
xor
gs
mov
cmp
fwait
in
lods
jmp
ss
movsl
test
xchg
js
sbb
push
bound
gs
imul
add
and
jo
cld
bound
push
inc
cld
clc
adc
xlat
stos
enter
aaa
jg
enter
cmp
cmp
push
jnp
call
xchg
loop
nop
decl
fldenv
das
push
sub
and
adc
outsb
pop
cld
ret
dec
cmpsl
pop
xchg
scas
cmp
out
jb
or
xor
insl
mov
jge
cmp
push
jecxz
jmp
mov
in
push
mov
ja
sub
pop
sub
mov
pop
jnp
enter
les
and
push
xchg
jecxz
test
and
mov
sub
pop
shlb
mov
test
sbb
loopne
xchg
lret
jo
mov
jecxz
push
xchg
cmp
pop
cmp
adc
sbb
cld
arpl
xchg
outsb
aaa
jl
arpl
leave
inc
bound
dec
add
pop
push
inc
fwait
je
or
int3
pop
jne
insl
pop
adc
out
popa
pushf
add
shlb
adc
mov
add
dec
pop
sti
leave
pop
or
ljmp
out
mov
add
and
or
jne
test
dec
fs
test
xor
notb
xchg
loop
dec
inc
and
pop
daa
pop
or
jmp
sbb
je
pushl
xcrypt-ofb
cmpsl
jmp
xchg
cwtl
call
mov
pop
dec
ljmp
arpl
mov
fisttpl
and
mov
in
shlb
xlat
in
adc
cmp
mov
mov
adc
sub
push
cs
cmp
mov
push
je
adc
sbb
or
mov
das
push
pop
pop
loop
shlb
iret
pop
cli
xor
insl
je
cltd
fwait
pop
scas
pop
lods
pop
mov
iret
cli
lods
adc
mov
inc
and
adc
dec
push
push
movsl
mov
dec
cwtl
mov
pop
pushf
add
pushf
and
pop
mov
and
pop
mov
je
psubusw
mov
or
lds
xchg
dec
sub
sub
inc
xchg
xchg
fisubrs
mov
push
hlt
cli
idivb
ds
sbb
xor
inc
adc
mov
sbb
mov
mov
mov
test
adc
mov
xor
pop
mov
inc
stos
push
lock
jnp
push
pushf
push
inc
adc
pop
call
add
fwait
adc
cmpl
push
and
fs
jbe
xchg
pop
jb
cltd
popa
xor
inc
incb
mov
adc
or
mov
lock
cmovo
pushf
jno
cmp
sbb
sub
fisubrl
fs
push
mov
jmp
stos
sub
inc
outsl
xor
imulb
test
adc
push
jg
aas
push
dec
out
rcl
xor
aaa
aas
add
insl
sub
adc
or
cmpsb
push
push
aad
pop
or
das
cli
lahf
inc
mov
sbb
adc
pop
call
dec
out
xchg
xor
adc
clc
inc
push
jmp
inc
lea
mov
push
push
xor
shll
add
sbb
xor
cmp
rclb
addw
or
lods
adc
jnp
dec
jae
icebp
loop
cmp
pusha
or
xchg
push
ret
movsl
sbbl
rcrb
and
int
ret
push
ret
lods
wbinvd
jbe
xor
movsb
in
pop
dec
pop
lods
sub
std
jmp
lret
jl
and
mov
adc
jp
mov
push
insl
inc
outsl
sub
test
adc
mov
mov
out
lret
mov
or
cmpsb
fsubp
jp
mov
rorl
mov
not
mov
data16
inc
test
inc
jnp
mov
mov
movsl
pop
mov
xor
lods
mov
or
pop
push
add
mov
std
lods
jle
xor
jl
daa
push
aad
cmp
sbbl
sbb
fisubl
and
cmp
or
fisubs
add
push
pop
dec
int3
rep
scas
cmc
rolb
inc
es
mov
hlt
push
dec
xchg
roll
stos
cwtl
pop
cltd
jno
call
sbb
sub
call
adc
test
loop
sbb
add
cmp
jae
jmp
dec
das
fnsave
adc
fildll
cmpb
jecxz
and
lods
out
jl
add
call
test
insb
or
mov
mov
imul
sbb
cmp
aas
add
inc
mov
and
lock
jbe
out
rol
pop
pop
cmp
add
sub
into
push
mov
mov
mov
shrb
fdivr
test
andl
fcoms
or
js
mov
or
sbb
loopne
and
sarb
adc
pop
jb
add
push
dec
insb
xlat
mov
and
rclb
xchg
push
inc
pushf
jecxz
sub
imul
dec
xor
repz
imul
je
lcall
inc
mov
xchg
or
add
cmp
aam
stos
sub
fsubrs
jns
xchg
jg
and
sbb
xor
mov
dec
add
jg
out
or
mov
lahf
dec
pop
mov
mov
sbb
or
inc
ret
jb
movsb
or
dec
enter
adc
or
data16
pop
cmpb
test
imul
mov
or
sti
xchg
mov
cwtl
xchg
push
adc
inc
insl
lea
aaa
cld
aad
lret
push
and
in
and
jne
or
xchg
mov
mov
cmp
dec
inc
add
test
scas
cmpl
flds
mov
sub
inc
dec
mov
test
rorb
cmpb
jne
mov
and
jge
jle
push
or
test
sub
xor
iret
repnz
dec
jmp
hlt
out
cmpsb
ljmp
bound
hlt
orl
xchg
in
scas
adc
loop
clc
sub
push
mov
imul
dec
push
jp
add
mov
inc
in
subl
adc
jbe
pop
jge
rolb
mov
mov
fs
jmp
aaa
jne
jnp
nop
and
jae
or
jnp
icebp
sbb
loopne
into
in
push
xor
pop
push
call
push
mov
dec
mov
dec
jmp
popf
mov
inc
fimull
push
cwtl
mul
push
mov
xchg
jge
xchg
xor
and
dec
ljmp
adc
push
inc
adc
daa
jne
int3
mov
loopne
xchg
testb
or
mov
inc
punpckhbw
jo
adc
test
push
and
sarb
aad
sar
lcall
inc
inc
lcall
push
imul
dec
mov
mov
mov
inc
and
cmc
bnd
adc
cmp
or
std
aas
add
fildll
bound
mov
mov
inc
iret
and
xchg
xchg
push
mov
insl
mov
add
xchg
test
rclb
and
dec
addr16
adc
push
pop
aaa
mov
and
jl
das
or
test
mov
test
mov
sbb
add
mov
mov
js
adc
movsb
test
cmp
dec
dec
loop
or
cmc
push
mov
inc
ja
push
dec
adc
test
add
inc
cmp
insl
or
jmp
sahf
and
test
pop
push
outsl
lods
aam
out
test
sub
cmp
addr16
push
mov
je
add
dec
sarb
xor
mov
push
mov
xchg
ret
cwtl
cli
pop
jp
addr16
mov
daa
loopne
clc
cmc
inc
inc
mov
nop
adc
push
mov
lds
push
jbe
adc
fldl
push
xchg
aam
mov
pop
pop
jo
adc
or
inc
in
xchg
fcompl
sbb
pop
or
in
lahf
add
xor
movsb
imul
and
or
data16
ficoml
mov
gs
sbb
cmp
adc
lret
sbb
aad
out
outsl
jb
sbbl
or
dec
jl
adc
sbb
push
lahf
clc
push
es
adc
mov
lret
and
fnstsw
dec
adc
movsb
imul
je
mov
jp
mov
inc
and
push
sub
dec
dec
mov
fmulp
scas
mov
pusha
xor
pop
gs
mov
or
jno
adc
xor
mov
movsb
lcall
daa
int3
sbb
inc
cmp
lahf
push
es
and
loopne
mov
pop
push
jns
adc
add
mov
inc
add
and
icebp
scas
icebp
bound
aaa
test
iret
lock
outsb
cmp
cmp
test
das
and
or
inc
sub
enter
or
mov
push
or
fsubl
adc
mov
xchg
pop
scas
and
in
stc
sub
mov
std
cmp
loop
adc
add
aam
push
call
enter
xchg
inc
inc
xchg
test
push
jge
add
insl
aaa
jne
lea
push
dec
adc
adc
test
cmp
sbb
add
xor
dec
sbb
sbb
mov
jp
icebp
insb
cltd
fidivs
test
shrl
pop
or
dec
push
and
adc
cmp
and
ret
test
xchg
sub
dec
ds
dec
std
into
push
adc
scas
cmp
adc
ljmp
testl
pushf
jne
pop
inc
cmp
dec
jecxz
pusha
imul
clc
jno
adc
orb
dec
pop
push
in
mov
pop
mov
inc
scas
sub
insl
loop
fsubl
cmc
div
push
stc
sub
loopne
das
ficompl
sub
shl
shrb
pop
sti
popa
call
loop
lret
sarl
bound
addr16
jno
les
mov
jg
aas
nop
aam
mov
mov
shl
push
leave
dec
push
xor
cltd
pop
xchg
cmpb
jge
jle
push
lds
sub
inc
mov
and
add
mov
imul
call
jmp
mov
mov
incl
popf
ret
inc
jmp
rorb
inc
daa
enter
cltd
sbb
sbb
jnp
add
pop
jmp
and
sahf
test
leave
outsl
ja
and
cmp
jbe
insb
jge
stc
mov
add
fcmovnu
ss
and
mov
sti
jo
push
adc
aad
and
testl
xor
jmp
or
jae
and
or
and
jae
inc
xor
inc
dec
ret
popf
push
push
dec
repz
rolb
dec
push
mov
shll
clc
dec
add
repz
push
mov
add
hlt
jge
and
clc
cmp
mov
jnp
sbb
cli
rolb
add
xchg
mov
jl
xor
rclb
sub
jg
cmpb
xor
cltd
add
dec
orb
push
cmp
or
mov
inc
add
inc
cmp
sarb
cmp
pop
je
or
push
inc
call
inc
in
and
dec
sti
push
push
xchg
push
adc
inc
inc
add
stos
lea
test
jl
push
mov
cmp
mov
mov
sub
sarb
mov
orl
mov
jo
and
add
sbb
jl
or
jp
pop
sub
xor
adc
sub
jge
inc
sbb
sub
xchg
mov
pop
mov
lahf
adc
sub
and
imul
or
sub
mov
xchg
pop
fcomps
pop
pop
add
fucomp
pop
inc
mov
jno
push
hlt
aad
dec
push
lret
into
xor
jle
add
add
sarl
sub
xchg
lea
dec
imul
mov
clc
push
pop
dec
cwtl
fs
push
shll
dec
dec
jmp
sbb
add
lahf
push
fidivrl
adc
pop
stos
loope
xor
xchg
push
imul
adc
adcl
dec
cmpsb
pop
add
jg
orb
jne
inc
hlt
lods
inc
dec
lea
or
sbb
and
jl
das
and
and
and
dec
sub
popf
pop
mov
mov
div
xchg
dec
pop
repz
sub
pop
js
aam
jle
sbb
sbb
cli
dec
ret
adc
xchg
or
cli
int
push
mov
dec
push
test
orl
mov
call
orb
movsb
imul
lcall
inc
insb
pop
pop
mov
xchg
fs
lds
jmp
push
add
push
mov
inc
bswap
xchg
push
push
sbb
addr16
mov
test
stos
mov
ficompl
xchg
dec
mov
jns
xor
inc
je
mov
sbb
jae
xchg
cwtl
scas
test
mov
shlb
pusha
mov
jg
dec
lods
dec
pop
xor
sub
or
sbb
or
add
mov
test
lret
jae
jmp
cmp
push
inc
add
mov
pop
aaa
lods
sbb
insb
int
push
sti
xor
es
bound
pop
dec
xchg
mov
push
je
xchg
fdivl
mov
mov
add
jle
mov
xchg
cmc
add
push
and
pop
ret
ds
imul
loope
add
push
dec
enter
mov
popa
mov
das
xor
je
movlps
cmp
xor
lret
dec
dec
sbb
rclb
mov
adc
push
mov
roll
mov
and
lahf
scas
frstor
and
and
push
cmp
les
sbb
cmp
push
mov
aas
shrb
push
jle
sub
addr16
bound
push
xchg
inc
pop
cli
adc
pop
jge
mov
incb
roll
mov
push
aam
sub
mov
dec
push
out
bound
sub
hlt
bound
adc
fwait
push
jae
movsl
and
mov
sbb
movsl
sub
sub
aam
outsl
repnz
repz
daa
pop
lods
cltd
xor
add
stc
das
dec
out
imul
pop
push
add
scas
in
adc
xchg
fnsave
in
sub
dec
ret
adc
or
int3
xor
jno
or
sahf
cltd
pop
mov
sbb
insb
hlt
sub
test
and
cmp
std
xchg
addr16
xchg
sub
sbb
dec
in
movsl
cmp
out
dec
adc
scas
ret
xchg
fsubr
mov
push
push
lock
leave
pop
loope
cld
inc
call
dec
push
ljmp
enter
test
dec
sub
mov
pusha
inc
cli
push
xchg
in
aad
add
pop
add
nop
sub
dec
les
xchg
xchg
pop
lret
scas
cltd
les
push
mov
mov
popa
xor
xor
imul
adc
je
das
fwait
nop
or
mov
pop
push
xor
mov
imul
stos
fistpl
adc
nop
or
stc
out
cmp
push
or
jp
int3
dec
aam
xchg
lock
rcrb
stos
sbb
icebp
mov
or
daa
icebp
xorb
loope
dec
adc
jmp
loop
call
adc
mov
pop
stos
pop
or
pop
jb,pn
dec
jl
cmpsl
mull
shll
stos
fsubrl
popa
fstps
or
or
or
push
loopne
dec
neg
das
or
js
sub
pop
lahf
sub
dec
adc
sahf
dec
lea
xchg
shl
rcll
mov
jne
loope
push
ret
das
pop
xor
sub
mov
dec
jbe
cmp
and
call
int3
sub
mov
jmp
loopne
add
and
xor
sub
test
enter
sbb
fldl
mov
out
ret
jae
psubusb
jbe
int
pop
lds
inc
mov
lahf
sub
and
in
clc
sbb
je
or
aam
jle
aaa
push
push
jg
push
or
adc
push
int3
mov
pop
insb
dec
jb
push
or
daa
adcb
xchg
pop
pop
cmp
lahf
and
rorl
pop
movsb
and
xchg
lahf
sbbl
je
mov
insb
jmp
mov
int3
push
and
push
clc
adc
or
out
out
dec
sbb
ja
ljmp
inc
mov
inc
or
mov
adc
sub
sbb
out
je
scas
sbb
cmpsb
pushf
test
adc
inc
test
cwtl
jns
jmp
aam
pop
aas
jbe
movsb
jp
outsl
adc
ja
sub
insl
je
lea
stc
jge
add
mov
xor
inc
ret
lock
or
movups
cmp
ss
or
pop
sub
call
inc
pop
sbb
insb
test
adc
cmpsl
packsswb
push
jnp
add
hlt
mov
xchg
icebp
mov
ret
mov
in
or
fisubs
rorb
xchg
lahf
and
cmpsb
adc
add
add
add
stos
add
push
add
push
or
mov
add
std
jo
fs
adc
daa
mov
aas
pop
jnp
push
mov
and
sti
xor
push
or
pop
mov
cmp
dec
cld
pop
cmp
shlb
data16
js
mov
or
inc
push
cmp
sbb
adc
pop
push
ja
xchg
xchg
xchg
xchg
cli
sbb
sbb
mov
repnz
daa
adcb
rcl
loopne
jbe
mov
pop
cmp
cmp
cli
and
inc
sbb
and
push
jl
movsb
lea
repz
lret
das
cmpb
cmp
pop
lock
push
outsb
mov
leave
test
mov
mov
xchg
pop
loope
call
orb
adc
icebp
cmp
and
call
sub
push
pop
lea
orl
jbe
mov
jo
jl
mov
push
test
dec
sbb
and
cmpsl
xor
in
mov
xor
mov
pop
sub
push
les
pop
ds
xchg
ret
add
or
push
push
repnz
mov
lcall
sub
add
xlat
testb
mov
or
cli
cmpb
popa
shll
pushl
xor
mov
pop
test
and
in
pop
inc
pop
jg
push
adc
movsb
ljmp
inc
xchg
jg
lods
jmp
gs
inc
orb
hlt
ds
and
in
push
mov
and
mov
sub
xchg
mov
inc
rorb
into
cmp
in
mull
nop
xor
lds
add
sbb
lea
add
xchg
push
push
push
sbb
in
leave
popf
sub
xor
int
adc
xchg
push
leave
lret
pop
std
in
das
xchg
mov
push
dec
xor
and
stos
mov
sarb
cwtl
inc
pop
mov
lds
mov
push
and
pop
int3
sub
jmp
lock
pop
xchg
pop
jbe
add
jge
mov
jo
loope
xchg
into
out
lret
test
insl
mov
adc
pop
mov
or
sub
xor
add
push
dec
sbb
add
in
mov
mov
push
jle
pop
mov
inc
inc
sub
pop
ret
sbb
adc
jbe
ljmp
cmp
push
arpl
push
clc
xchg
out
das
jg
xchg
pop
movsb
pop
xchg
mov
inc
sub
je
popf
lret
js
cmp
fildl
xchg
add
outsl
and
mov
cmp
mov
leave
es
cmc
jmp
mov
popf
loope
and
push
adc
jge
nop
inc
push
sub
sub
push
push
call
pusha
sbb
int3
scas
gs
dec
and
test
mov
mov
pushf
jbe
out
sbb
jnp
pop
xchg
clc
pop
leave
scas
inc
dec
in
jg
pop
jb
into
or
xchg
cmp
mov
es
stos
leave
xor
std
test
dec
nop
loop
pop
int3
std
mov
inc
push
ss
inc
adc
pusha
push
or
loopne
lret
inc
pop
dec
cmp
insl
add
popf
pop
pop
add
xor
jge
and
push
inc
jge
ljmp
sbb
push
movsb
jmp
imul
mov
repnz
adc
sub
xchg
pop
sub
fwait
in
jb
sbb
dec
nop
jo
bound
push
dec
xchg
or
mov
mov
mov
std
xor
hlt
out
or
or
jl
mov
pusha
test
inc
sbb
sbb
inc
nop
xor
and
test
xchg
fisttps
inc
jae
sub
js
mov
adc
xor
nop
or
test
and
inc
test
pop
push
repnz
xchg
sub
mov
in
jb
sbb
or
faddl
jno
cmp
xchg
push
adc
sub
inc
in
jno
jg
xchg
mov
pop
push
and
aas
les
sbb
or
shll
test
push
sub
adc
mov
jnp
xor
sub
ja
stc
push
mov
enter
aad
xchg
push
push
xor
fs
adc
xchg
fwait
ret
pop
push
iret
shl
mov
cmpsb
call
je
cmp
add
push
add
mov
ret
les
mov
jnp,pn
paddb
jb
mov
pop
test
lea
push
jae
sub
aaa
inc
nop
mov
push
and
clc
sub
inc
cmp
or
jmp
cmp
dec
dec
jge
gs
jnp
or
dec
das
xchg
pop
xchg
add
cmp
shrl
loopne
jle
or
ror
hlt
mov
pop
or
mov
jnp
ja
je
push
add
or
pop
xor
and
xor
jne
cmp
fsubr
fldl
mov
rorl
test
and
mov
mov
and
adc
lods
loope
jl
sub
pop
sbb
cmp
outsl
sbb
hlt
shlb
mov
jle
or
orb
jg
xor
lods
pop
out
push
dec
test
jne
push
dec
jne
push
pop
movsb
data16
pop
ds
inc
pop
aaa
sub
notb
push
pop
or
lret
js
sub
and
shlb
cs
and
cvtps2pi
call
mov
lahf
sbb
push
mov
mov
inc
call
fistpll
imul
insl
adc
adc
jbe
mov
cld
dec
pop
popa
xor
js
dec
adc
push
fnstenv
pop
cwtl
int3
push
adc
mov
adc
cmp
xchg
lea
xor
int3
xchg
sub
pop
stos
sub
les
dec
sub
mov
into
idivl
adc
cli
pushf
dec
insb
movsb
pop
imul
pop
push
daa
jmp
cwtl
xor
divl
add
orl
jmp
xchg
arpl
push
jl
dec
divb
shl
lret
adc
sub
adc
mov
mov
test
push
lea
inc
shl
sbb
es
mov
fstl
xor
or
xor
mov
call
mov
jmp
scas
int3
xchg
test
lret
dec
mov
lret
call
int3
xchg
dec
ret
sub
dec
mov
mov
inc
sbb
loope
xorl
cmpsl
push
adc
adc
cld
pop
add
je
jo
jb
jmp
mov
fldenv
push
push
xlat
rcrl
sub
dec
jle
inc
push
das
daa
pop
lds
lret
or
inc
mov
fadd
cmpl
inc
xchg
iret
dec
and
jbe
je
lea
lock
lret
das
and
int3
std
push
or
or
and
adc
es
adc
call
pop
mov
inc
jle
enter
mov
loop
cmp
adc
dec
dec
leave
or
mov
and
inc
jmp
test
fwait
lds
icebp
add
push
popa
mov
fdiv
mov
mov
push
and
dec
mov
sbb
jne
push
jmp
popf
leave
or
outsb
int
add
mov
jmp
pop
fbld
push
out
adc
adc
out
bound
xor
test
dec
lret
int3
xor
movsb
sbb
xchg
pop
push
addr16
jmp
pop
sub
or
dec
push
cmp
adc
pop
pusha
mov
xor
mov
cmp
ja
fdivrp
stc
dec
call
add
dec
insl
dec
negb
pop
enter
es
push
adc
jl
mov
xchg
scas
mov
jo
add
sub
xor
out
add
mov
dec
jmp
xchg
add
mov
and
jmp
into
aaa
push
call
add
mov
fcom
push
stos
out
sub
aad
out
add
dec
jne
jo
fcoml
pop
dec
dec
pop
out
jg
or
jo
adc
inc
jl
lret
loop
andb
jle
mov
sbb
and
mov
jg
call
xchg
or
inc
mov
mov
jl
imul
out
nop
sti
mov
xchg
push
aam
daa
cmp
mov
or
jne
or
or
pop
or
add
movl
jmp
push
fs
adcb
push
inc
cmp
jb
sahf
lds
jge
xchg
inc
cmp
mulb
jno
xchg
rorl
je
insl
pop
xor
adc
add
jmp
xchg
xchg
or
scas
push
les
arpl
xor
adc
es
add
push
pop
in
bound
sub
push
push
and
and
push
bound
or
lods
lcall
lcall
mov
push
mov
out
xor
sbb
push
out
dec
lock
adc
imul
orl
imul
pop
dec
scas
repnz
popf
out
pop
aam
mov
mov
sbb
das
jmp
enter
push
aaa
jge
dec
ja
and
and
mov
test
jmp
es
or
jmp
jl
int
sub
adc
mov
clc
push
fmull
sti
ret
rol
and
and
add
sbb
xor
push
sbb
hlt
adc
xor
xchg
xlat
pop
clc
out
jb
dec
fdiv
adc
cmp
shll
and
mov
xchg
aaa
jne
pop
jae
mov
inc
pushf
mov
adc
sbb
mov
shlb
ds
xchg
cmc
or
je
xor
sbb
adc
pop
sub
mov
adc
xchg
jecxz
cmp
adc
mov
pop
pop
test
push
or
nop
and
lret
test
jne
mov
lahf
out
mov
push
arpl
push
xchg
xor
xchg
mov
daa
lods
cwtl
jno
push
imul
les
aas
mov
sub
adc
and
adc
cmp
mov
or
xor
pop
call
fsubrl
movsb
ja
in
addl
bound
xor
lcall
and
popf
test
les
jl
sub
and
ds
cmpsl
test
insb
jb
lods
inc
arpl
bound
in
push
xchg
std
adc
adc
out
daa
push
dec
xchg
pop
cmp
int3
stc
jno
mov
or
imul
popf
cwtl
jmp
ret
adc
pop
mov
iret
inc
lods
cld
or
cmp
cltd
jmp
je
mov
jmp
subb
idivb
insl
add
and
jne
fs
jle
imulb
add
sbb
and
inc
dec
mov
out
xor
cs
and
cmp
xchg
and
jbe
xorb
out
jb
andl
and
fistl
dec
cmp
push
mov
movsb
or
sbb
loop
xor
and
stos
xchg
push
test
addr16
adc
js
adc
and
popf
push
out
sti
outsb
jmp
adc
insb
mov
addr16
and
ret
cmp
dec
cmc
stos
mov
roll
sub
jns
sbb
xchg
or
mov
jmp
push
and
push
push
sub
pop
mov
jbe
in
inc
subb
pop
push
xchg
imul
imul
out
enter
lea
inc
subb
loopne
inc
aam
dec
mov
inc
xchg
or
adc
subl
push
inc
sti
leave
cmpsb
cld
mov
fdivrl
mov
push
xchg
fnstsw
mov
cs
sub
leave
mov
push
xor
divl
out
adc
adc
xchg
call
sbbb
hlt
jl
add
pop
inc
shr
xchg
xor
call
dec
push
push
sbb
pusha
fsubs
test
sbb
inc
sbb
or
and
mov
lods
xchg
leave
sub
cmpps
pop
mov
pusha
xlat
xchg
fcom
adc
and
mov
xchg
xchg
rcl
mov
sub
dec
xchg
fidivrl
dec
lea
xchg
std
mov
pop
test
xchg
movsb
jae
fs
ret
sbb
or
inc
jne
push
lods
add
movl
mov
mov
jo
mov
jecxz
arpl
or
movups
lea
cltd
aas
dec
shl
jbe
inc
test
shlb
fimull
push
mov
or
xor
in
lock
decl
rolb
cmp
inc
jmp
cmc
cli
jecxz
lock
sub
cmp
dec
jae
insl
hlt
jmp
push
add
out
cmp
je
add
pop
or
fs
fs
sub
clc
sub
fmuls
fsts
or
sbb
sahf
aas
jne
cmp
imul
adcb
mov
shrl
cmp
fsubs
enter
call
lcall
mov
fiadds
insb
xor
cld
add
les
enter
fadd
shr
xor
clc
or
and
mov
fcompl
loopne
sbb
mov
movsb
js
and
addr16
bound
mov
in
mov
cld
popa
call
mov
pop
lock
inc
dec
adc
push
push
call
test
pop
dec
adc
int
xchg
push
daa
adc
cmp
movaps
shr
cmc
xchg
ficoms
icebp
frstor
cld
test
cmp
adc
int
cmp
loopne
cmp
out
mov
adc
lds
inc
in
pop
and
jne
adc
add
dec
iret
xchg
enter
lahf
cmovs
ret
fadds
pop
cltd
dec
add
dec
xor
mov
adc
and
shl
les
cwtl
mov
push
inc
ss
xchg
iret
xlat
or
sub
movsb
mov
pop
mov
push
xchg
cmc
mov
or
adcb
mov
repz
out
push
inc
lea
jge
and
repz
push
cmc
pop
sbb
std
mov
clc
push
mov
inc
repz
push
xor
dec
ss
pop
movsl
jns
out
sub
fs
cmpsl
dec
sti
sahf
push
push
add
outsb
jno
inc
mov
mov
imul
dec
mull
inc
sbb
inc
das
out
gs
cli
loopne
xor
into
jge
sub
sbb
add
loopne
pop
inc
push
add
inc
or
add
out
ja
inc
inc
add
mov
jecxz
pop
and
jg
pop
sbb
push
scas
sarl
push
push
scas
add
jb
cmp
fxch
mov
push
cld
inc
sbb
push
push
sbb
nop
sahf
add
pop
jb
cmp
mov
aaa
push
and
and
inc
adc
inc
bound
adc
adc
xor
or
mov
sbb
test
mov
adc
jae
out
pusha
and
sbb
or
ret
adc
fists
and
pop
add
out
mov
das
and
pusha
mov
lds
fisttpl
stc
cmp
pop
push
cmp
popf
cmp
and
addr16
mov
adc
cwtl
mov
ffreep
cld
fsubrs
xor
jo
cmp
or
imul
pop
mov
add
adc
sbb
test
mov
in
dec
je
adc
loopne
das
cmp
daa
push
inc
xor
fstpl
ds
test
adc
mov
cld
cmp
mov
aas
sbb
inc
imul
push
push
sub
in
or
sub
cmp
dec
rcl
lock
jp
dec
leave
clc
fildll
mov
mov
mov
adc
and
aad
loope
cs
sti
test
dec
inc
std
xor
in
aas
in
rcll
and
inc
mov
mov
xor
fldenv
adc
jg
cltd
cmc
roll
jo
adc
nop
push
mov
sbb
adc
ljmp
nop
daa
jae
daa
and
gs
daa
pop
jmp
inc
call
scas
inc
inc
push
and
fs
xor
adc
add
aam
les
loope
xchg
and
mov
iret
lea
push
xor
imul
pop
xor
jbe
cmp
sub
clc
cmpsl
and
out
dec
jo
mov
sbb
and
aam
adc
push
push
or
imul
or
out
adc
or
sub
daa
sub
adc
adc
sub
les
cs
lahf
packssdw
push
pop
mov
test
call
stc
add
out
lahf
fiadds
adc
dec
xchg
mov
mov
cmp
sbb
push
negb
sbb
clc
lahf
data16
push
stc
adc
mov
mov
push
sbb
orb
jge
push
stos
rorl
cld
push
arpl
fadds
inc
loopne
loop
xchg
out
mov
movsb
cmp
xor
mov
pop
int3
jbe
jmp
enter
xor
adc
jne
push
jns
fwait
int
aam
out
adc
loopne
mov
xor
fdivl
adc
or
mov
xor
in
pop
xor
nop
cs
push
push
push
ja
fldt
cmpsl
push
push
in
mov
pop
sar
clc
icebp
add
out
dec
decb
outsl
jnp
pop
cld
je
std
add
shrl
mov
xchg
nop
pcmpgtb
cli
pop
push
jl
jecxz
das
add
mov
les
movsb
cli
adc
sub
scas
popa
ret
or
lods
cmpsl
pop
test
fbld
jns
nop
cmp
mov
or
nop
mov
push
push
mov
mov
add
or
jo
pop
test
movsl
movsb
sub
or
sub
pop
cli
sbb
aad
or
pushf
or
xor
rolb
loope
mov
push
fistl
shrb
je
dec
hlt
fs
outsb
mov
push
and
jmp
adc
mov
mov
rcrl
jne
cmp
pop
jmp
cmp
mov
inc
pop
adc
fwait
adc
add
mov
jbe
je
xchg
in
jo
inc
jns
pop
inc
xor
js
scas
jle
and
filds
lods
cmpsb
dec
adc
mov
pop
and
cmp
sub
je
movsl
test
dec
jns
repz
push
fmuls
mov
and
pop
and
cld
inc
mov
in
cli
cmp
pushl
daa
imul
out
pop
mov
mov
jns
sub
jmp
mov
call
sbb
jae
stos
loop
mov
or
mov
and
subl
push
jbe
push
pop
push
shl
mov
hlt
or
mov
scas
mov
int
bnd
imul
mov
xor
xchg
jp
and
pop
sub
je
pop
jmp
mov
inc
nop
enter
inc
cld
or
or
sub
leave
jle
loope
rolb
ja
cli
push
cmp
xchg
das
and
jecxz
adc
shrb
cltd
cmp
add
xchg
repz
xor
lock
adc
push
gs
jl,pt
jo
stos
or
sub
xlat
or
jge
pusha
enter
cmp
pop
jb
rcll
and
and
hlt
mov
xchg
and
call
pop
stos
jo
in
xor
mov
nop
out
mov
mov
add
push
or
loope
sub
and
in
sub
loop
sti
xor
or
push
or
test
sub
inc
test
pop
outsb
js
sti
sbb
and
xor
ja
mov
push
jae
mov
sarb
xacquire
shl
xchg
push
lods
loope
sub
sub
pusha
inc
push
inc
repz
sbb
fdivrs
dec
pop
adc
mov
dec
mov
stos
jmp
scas
push
outsl
cld
lret
imull
lods
test
adc
add
lock
jne
add
mov
add
cmpl
xor
mov
add
push
mov
mov
cld
pop
xor
mov
test
pandn
addl
incb
nop
adc
mov
push
inc
cld
inc
orb
cmpsl
push
mov
and
or
adc
push
sarb
test
or
add
scas
xor
xchg
int3
mov
push
ret
inc
cwtl
push
or
das
loop
pop
mov
pop
scas
gs
js
jmp
daa
xor
inc
mov
icebp
push
icebp
sub
stos
or
cld
adcl
mov
jbe
in
xchg
or
imul
cmp
adc
mov
test
daa
push
fisubs
or
xorl
xor
std
add
andb
xorb
mov
pop
jge
or
and
cmpl
mov
mov
repz
or
xor
xor
je
imul
movsl
or
mov
pcmpgtb
jae
cld
inc
push
hlt
nop
xor
adc
orl
mov
sbb
scas
adc
pop
mov
das
push
sub
and
les
adc
mov
mov
nop
mov
jae
inc
lock
sbb
xchg
adc
mov
push
sbb
in
adc
arpl
and
int3
adc
or
xorl
push
xor
stos
aam
orl
push
mov
rorl
int
daa
add
aaa
mov
loopne
cmpsl
je
add
jne
and
pop
or
dec
jl
cltd
or
and
or
mov
adc
int3
cmp
push
jmp
or
movsb
or
xchg
aad
jmp
in
je
and
outsl
add
imul
xlat
jmp
cwtl
mov
inc
dec
cld
push
sub
or
mov
out
or
jmp
or
int3
popf
cmpl
testb
leave
xchg
pop
ffreep
clc
xchg
lock
loopne
or
adcb
fmuls
or
call
fistpl
sbb
clc
pop
add
push
mov
jb
sub
add
xorb
fbld
fiaddl
loopne
outsb
jae
dec
mov
sbb
pop
in
or
jnp
push
mov
and
mov
mov
or
inc
add
nop
push
push
inc
or
cmp
cmp
adc
adc
bound
sbb
jge
cmp
adc
mov
nop
push
adcl
mov
and
inc
push
push
mov
cmp
or
sub
mov
test
decb
cmpsb
xchg
inc
add
lock
int
dec
imul
sbb
movsb
inc
push
in
rorb
push
aam
cs
sbb
mov
xor
xchg
cmp
lea
add
daa
dec
push
inc
sbb
fwait
add
sub
mov
pop
add
mov
imul
dec
rcll
stos
dec
adc
ret
sti
imull
xchg
jno
pop
sub
cmp
xchg
add
push
dec
icebp
cmp
jae
mov
and
push
jmp
hlt
fst
sbb
pop
pop
test
outsb
imul
cmpsb
shlb
outsl
mov
push
jo
adc
out
cltd
jp
fcomps
adc
xor
jmp
push
sbb
leave
pop
inc
mov
out
aam
dec
ss
adc
or
adc
lods
lock
sub
mov
pop
push
add
mov
sbb
or
mov
add
or
mov
or
aaa
pop
test
sub
and
push
lods
xor
mov
adc
xchg
dec
xor
jle
loop
cli
pop
add
xchg
fidivl
lock
inc
or
outsb
loop
pusha
xor
mov
and
clc
cmp
pop
jns
pop
mov
test
cwtl
filds
sbbl
iret
cmpl
sub
and
pop
cmpsb
push
cli
jmp
and
push
push
add
cmp
add
test
ror
inc
pop
and
popa
insl
or
rcrl
or
and
xchg
pop
mov
addb
jmp
and
xlat
sub
outsl
mov
icebp
jb
sub
shll
sub
hlt
mov
adc
outsb
xchg
push
in
or
nop
mov
cmovb
jbe
test
xchg
aaa
xchg
rorb
xor
jl
and
sub
div
and
call
xchg
cmp
sbb
push
dec
or
pop
push
pop
ficoml
arpl
lret
dec
in
imul
xor
sbb
push
imul
push
xor
pop
mov
jmp
int3
cmp
and
bound
jns
sbb
mov
jmp
mov
mov
in
insl
and
iret
inc
or
mov
out
sub
add
mov
jmp
mov
xor
mov
lock
push
xchg
fsubrs
inc
pop
adc
mov
adc
pop
fistpl
aas
dec
outsb
loopne
xor
jle
out
mov
jbe
popa
cli
jmp
inc
imul
cmp
and
aas
adc
or
push
das
push
inc
mov
or
mov
add
sub
or
mov
add
and
dec
or
sub
adc
pop
lods
jmp
in
or
icebp
mov
leave
mov
jmp
cs
je
sahf
icebp
mov
bound
je
mov
dec
mov
or
movsl
bound
cmpsl
xchg
sub
imulb
mov
xchg
ret
mov
add
push
ret
shrb
aaa
xchg
iret
push
shrb
push
or
pop
inc
and
pusha
adc
enter
mov
or
or
int
mov
nop
les
add
and
pop
mov
mov
and
pop
mov
jmp
adc
mov
or
jne
loop
push
ret
and
insb
cmp
icebp
jl
inc
cmp
lods
pop
sub
into
xchg
xor
cwtl
mov
mov
sub
enter
or
add
inc
loope
ds
push
push
dec
xchg
xlat
xor
and
std
mov
test
jp
mov
push
push
adc
add
cmp
inc
dec
and
jmp
sbb
dec
inc
les
outsb
pop
jmp
enter
and
inc
mov
add
aaa
stos
lods
xorb
les
ds
lock
or
loop
push
loopne
test
lea
in
mov
pop
adc
push
sbb
loopne
enter
jl
adc
push
and
pusha
js
sahf
inc
inc
xor
mov
js
push
test
gs
jp
bound
pop
mov
in
xchg
orb
repnz
popa
xor
jmp
push
je
je
inc
dec
adc
jae
nop
in
cwtl
stc
in
and
loop
push
pop
xchg
in
into
inc
cld
mov
popa
sub
movsb
ret
inc
add
jl
dec
repz
adc
fcmovbe
adc
jmp
fisubl
pop
and
mov
int
outsb
dec
xchg
ss
adc
inc
repnz
push
push
pop
push
pop
push
mov
add
cmp
das
dec
lret
xchg
dec
mov
nop
in
push
ret
pop
xchg
loopne
inc
add
mov
jmp
or
pusha
lcall
out
ret
jne
mov
adc
out
push
mov
loop
ror
into
add
sbb
xchg
and
hlt
testl
iret
insb
mov
pop
push
sub
inc
insl
das
and
scas
or
mov
enter
dec
adc
jge
sub
or
sbb
das
test
fwait
test
add
sbb
adc
loopne
outsb
sub
xchg
adc
add
out
das
mov
xchg
push
mov
mov
or
jp
int3
push
sbb
xchg
or
or
inc
add
sbb
cmp
mov
push
mov
inc
mov
push
sub
inc
mov
or
aam
flds
testb
jae
stos
test
idivb
leave
loopne
loopne
sbb
daa
loopne
aam
shlb
pop
cmp
fiaddl
or
adc
push
je
push
cld
sub
aam
and
sbb
dec
pop
and
lea
xor
ljmp
je
fwait
gs
decl
xor
sbb
notl
adc
adc
fdivl
aam
rcrb
es
push
cmc
push
lds
movsb
pop
push
inc
pop
neg
push
or
inc
or
jo
lds
decl
sub
push
popf
loopne
js
dec
or
jo
loopne
add
addr16
push
jl
bound
bound
repnz
add
je
mov
sbb
adc
jo
add
adc
mov
jmp
clc
pop
lods
pop
xchg
inc
push
mov
xor
lock
aam
dec
sub
adc
mov
dec
dec
nop
stc
xchg
xor
or
int3
out
xlat
push
lock
lcall
push
inc
push
out
sarb
daa
mov
sub
roll
aam
je
sub
fisttpl
push
adc
jmp
sub
pop
js
sub
ljmp
mov
jmp
jne
filds
push
lock
cwtl
mov
xor
fidivrs
cmp
or
adc
dec
push
pop
pop
jmp
inc
roll
inc
jb
scas
jno
sbb
in
inc
outsl
push
xor
push
cmpsb
pop
enter
push
fs
clc
or
push
fcoml
stos
push
scas
cmp
push
pop
ss
iret
cmpsl
mov
push
sbb
and
mov
or
mov
data16
adc
xor
dec
bound
pop
mov
jg
cltd
sbb
daa
mov
ret
adc
enter
aaa
push
fs
xor
cwtl
dec
adc
in
inc
sub
dec
nop
ret
dec
jno
dec
sbb
lock
popf
sub
dec
or
add
aam
sub
lds
pop
mov
or
lods
movl
pop
sbb
lahf
mov
sbb
addl
mov
mov
lcall
or
neg
mov
sub
add
cmc
daa
cwtl
dec
push
pop
ret
push
adc
sub
xchg
mov
jmp
pop
push
push
loop
dec
adc
nop
std
enter
out
xchg
leave
icebp
mov
sub
pop
xor
jnp
fbld
clc
outsb
lock
je
movsb
add
push
dec
adc
fsubrs
imul
nop
rorb
dec
sbbb
jne
inc
push
nop
sbb
mov
jle
add
push
fs
and
rorl
xchg
or
mov
cmpsb
pop
or
xchg
adc
and
insl
outsb
adc
mov
inc
rcll
adc
and
and
sub
movsl
mov
lret
shll
stc
and
mov
bound
paddsb
mov
push
or
push
cmpsb
sbbl
lods
and
mov
adc
add
aad
fs
sbb
cmpsb
pushf
addl
sub
ret
out
jnp
sub
call
out
xor
cmp
pop
stc
mov
sub
inc
cmc
jp
push
or
dec
outsl
cmp
sub
xchg
or
insb
dec
xor
mov
sub
sbb
lahf
push
dec
sub
daa
fdivrs
adcb
adc
sar
fisubrs
xchg
sub
dec
les
ret
aam
dec
add
inc
pop
inc
and
adc
or
xor
jmp
and
xchg
adc
or
stos
inc
xchg
outsl
adc
inc
adc
or
or
dec
inc
adc
or
std
inc
jl
sub
mov
inc
mov
inc
lods
xor
mov
jns
ret
jg
add
or
les
lods
pop
outsb
jl
mov
mov
jg
push
adc
loopne
inc
and
sbb
add
push
mov
xor
cmpl
test
xor
andl
dec
mov
xor
adc
and
test
movsb
sbb
xchg
pop
mov
mov
mov
push
xor
imul
lea
int3
shrb
test
or
ss
add
cmp
cmpl
inc
mov
repnz
inc
add
out
clc
repnz
inc
pop
jne
sti
hlt
mov
je
repnz
aaa
mov
gs
xchg
adc
sti
push
dec
jecxz
dec
mov
push
jae
cmpsb
fcoms
lods
lcall
outsb
imul
addr16
push
or
rcrl
and
sub
lods
sub
push
sub
cld
or
mov
inc
fmull
jbe
call
and
cmpsb
pop
lahf
push
and
cld
cmc
jecxz
fmull
cmp
jle
insl
pusha
sub
loope
push
mul
jle
or
lret
push
pop
jno
fwait
cmp
lret
inc
jp
xchg
push
cmp
in
xor
test
insb
cmp
pop
loop
shlb
and
imul
mov
push
clc
jae
sub
add
add
fsub
push
lods
call
pop
add
mov
popa
sti
hlt
sub
in
push
xchg
xchg
add
dec
jg
jns
mov
push
or
inc
enter
stos
roll
push
in
sbbb
in
vmwrite
adc
ret
fsubr
push
inc
dec
in
loop
jo
xchg
jae
fadds
repz
in
loop
sub
aam
sbb
adc
mov
cld
sub
sub
xchg
jmp
mov
sbb
adc
lods
jmp
popa
fstpt
adc
jmp
xchg
mov
push
lret
ss
add
mov
mov
frstor
popf
jle
mov
push
lods
adc
ljmp
bnd
or
dec
inc
mov
icebp
movsbl
pop
bound
adc
incb
shrb
mov
xchg
push
push
mov
push
aam
dec
cmpsb
pop
xor
add
shlb
cmp
cmpsb
cs
loop
movsl
sub
sub
push
mov
ja
cld
test
xchg
fmul
clc
xchg
adc
and
and
mov
push
inc
dec
cltd
xor
xchg
movsb
xchg
scas
test
mov
stc
jo
or
neg
xorl
clc
sub
mov
pop
inc
dec
jne
mov
cmp
es
loop
jmp
rep
ja
dec
inc
dec
mov
ret
or
enter
iret
fcompl
inc
mov
cs
es
push
inc
nop
and
jl
jmp
lock
inc
lea
leave
outsb
iret
dec
daa
pop
mov
hlt
pop
cmc
aad
pop
lods
imul
cltd
jb
fmuls
ljmp
in
push
sub
xor
dec
adc
aam
adc
mov
adc
pop
push
movsb
rclb
pushf
sub
add
and
dec
push
push
pop
push
mov
fmull
push
push
lret
les
daa
mov
push
inc
mov
cmp
adc
and
sub
jg
clc
pop
sti
lret
sbbl
rclb
add
in
cmp
ds
mov
scas
lock
faddl
or
xchg
xchg
call
arpl
and
aad
inc
dec
jmp
jp
call
jno
mov
shrb
dec
sub
jmp
mov
lods
decl
and
into
mov
fwait
pop
xlat
rorl
sub
dec
or
adc
ret
pusha
adc
push
lock
leave
imul
lods
ret
mov
mov
cmpl
adc
mov
pop
daa
push
imul
push
in
mov
jmp
push
mov
in
cs
inc
clc
imul
or
lods
or
adc
lods
andb
sub
fdivr
mov
and
xchg
in
ljmp
or
xchg
sub
je
lock
hlt
test
cmp
ds
out
cmp
or
int3
sbb
mov
jne
and
popa
add
add
adc
xchg
test
les
jle
jmp
push
ljmp
xchg
rolb
mov
sbb
push
inc
xor
aad
andl
sub
mov
dec
dec
dec
stos
and
fdivl
adc
pusha
rorb
sub
add
and
adc
dec
or
xchg
sar
add
inc
inc
aam
inc
fildll
mov
imul
fildll
inc
fists
ja
lret
xor
and
xchg
add
push
xchg
or
jns
sub
nop
shrl
cmp
pop
adc
pop
cmpsl
inc
inc
dec
loopne
mov
mov
sbb
cmp
pop
inc
and
mov
push
xchg
xchg
push
mov
fdivrp
inc
adc
movb
mov
cmpsl
dec
int3
dec
sbb
and
cmpsb
pop
sbb
push
push
and
je
xchg
and
repz
pop
adc
test
cmp
sbb
adc
insb
xor
push
xchg
bound
sub
or
cs
jmp
pop
mov
fiadds
loopne
negl
loop
sub
adc
je
jmp
pushw
lret
adc
adc
shrb
or
or
pusha
dec
jge
mov
test
dec
and
add
or
add
jbe
sub
or
js
addr16
adc
shr
clc
inc
mov
adc
mov
jp
sub
mov
sbb
sbb
mov
pop
mov
inc
sbb
mov
data16
push
or
mov
test
stos
pop
mov
test
pop
insb
jl
push
add
out
sbb
or
scas
add
xchg
adc
adc
fildl
ret
xchg
pop
or
and
jb,pt
and
repnz
sub
push
pop
xor
xchg
dec
adc
cwtl
cli
pop
out
ret
dec
add
fmull
cmp
popa
pop
push
sbb
mov
mov
out
jl
inc
lret
add
sub
adc
ret
leave
cmp
gs
or
mov
call
jmp
push
inc
cmp
adc
jle
mov
and
call
arpl
sti
cmp
mov
xor
sub
pop
pop
mov
cmp
lods
addr16
je
daa
inc
loopne
or
ret
mov
stos
enter
jae
test
call
sub
loopne
addb
test
push
push
int
cmp
leave
std
inc
pusha
lods
add
hlt
and
jbe
lcall
mov
push
pop
push
xor
inc
imul
sti
testl
cmp
aad
xchg
mov
or
add
pop
pop
pop
lcall
lea
add
sub
and
mov
repnz
add
je
xorl
jp
sbb
jmp
pusha
add
add
decl
sub
push
lahf
icebp
clc
movsl
ss
xchg
jge
inc
int3
xor
ss
jb
out
cli
cmp
sub
add
lret
repz
cmp
dec
cmp
loope
in
jne
dec
test
int
cmp
test
jle
inc
or
loop
repz
sub
test
push
mov
sar
pop
jne
stos
push
hlt
jmp
adc
or
jne
scas
movsl
mov
call
ss
sub
xchg
cs
push
fisttpll
and
scas
aaa
stos
leave
xchg
imul
mov
lahf
call
inc
mov
cs
popf
out
sarb
flds
mov
sbb
clc
or
test
shl
xchg
sub
pop
adc
inc
inc
pusha
clc
adc
cmp
movsb
call
jae
sbb
out
pop
push
das
mov
lahf
dec
sbb
loopne
add
sub
cmp
leave
std
je,pn
dec
dec
dec
xchg
repz
sbb
lea
adc
push
push
cld
xor
or
test
sbb
ss
adc
inc
cmpsb
jl
xchg
outsl
pop
cli
push
pop
cmp
jb
sub
add
jae
sub
aaa
mov
sbb
or
mov
mov
lock
mov
lret
and
lea
cmp
cmp
sub
xor
test
dec
sbb
adc
lret
or
push
xchg
or
xchg
push
imul
fisubs
ret
aaa
and
add
push
je
in
adc
fisubs
push
xorps
dec
ljmp
pushl
dec
and
loop
dec
xacquire
pop
mov
imul
or
or
add
mov
cmp
aad
adc
push
sar
dec
fidivl
or
je
mov
cltd
pop
cld
bound
mov
xor
or
mov
loop
je
mov
test
and
stos
mov
adc
mov
loop
stos
adc
movl
cmp
adc
hlt
mov
sub
adc
fmuls
call
adc
xor
int3
mov
and
dec
loope
dec
cmp
mov
mov
pop
js
pop
aaa
mov
sbb
xor
mov
jne
aas
inc
leave
xor
xchg
bound
js
popa
xor
dec
sub
mov
aam
shrl
adc
sbb
fists
mov
test
movsb
adc
add
jmp
aam
lret
jmp
pop
lret
inc
and
sub
adc
mov
push
push
adc
jmp
and
add
sub
aaa
test
sbb
adc
push
mov
cs
mov
lock
icebp
test
jne
ja
ret
shrl
sahf
mov
or
or
neg
fsubrs
bound
adc
sub
jb
dec
inc
daa
add
dec
xor
add
pop
mov
adc
pop
adc
cmpl
add
daa
cs
and
call
pop
xchg
or
lret
push
cmp
stos
inc
inc
nop
imul
jg
inc
dec
adcb
adc
popa
and
pop
mov
mov
ss
sbb
cld
jmp
push
mov
imul
dec
loop
xchg
mov
sub
ret
mov
lock
push
mov
mov
mov
lock
fnstcw
in
sub
mov
movntps
sub
int3
mov
mov
or
lcall
call
ljmp
and
mov
mov
xor
sbb
ja
sub
mull
rolb
and
or
adc
pop
cmp
je
orb
push
xor
jecxz
dec
fnstenv
divl
add
movsl
push
imul
cmpl
dec
and
rorl
inc
fcomp
jl
dec
or
and
push
pushl
test
repz
fldenv
adc
xor
push
aas
jns
gs
or
inc
add
lret
pusha
sbb
or
inc
arpl
jmp
sub
pop
push
adc
popa
xor
adc
daa
cmpsb
push
and
xor
pop
jb
cltd
xchg
or
inc
jo
scas
or
pusha
lea
pop
sti
pop
out
icebp
cmpsl
push
out
mov
cs
push
cmpsl
pop
add
or
fldz
sarl
dec
imul
or
add
push
ficoms
or
mov
outsl
lret
add
nop
stc
xor
ljmp
inc
push
ficoml
lods
shll
dec
mov
mov
cmpsb
out
js
dec
les
pop
ljmp
fdivs
cmp
ret
iret
cmp
out
adc
inc
adc
aam
xchg
rcrl
pop
jo
pop
std
cld
adc
jb
inc
movsb
movsb
int3
dec
push
int3
mov
xchg
mov
sub
pop
mov
inc
test
mov
or
dec
add
or
in
add
outsb
pop
jne
xchg
sbb
dec
jmp
sbb
push
inc
and
xor
push
insb
fcmovb
lret
dec
xchg
or
add
dec
movq
shlb
rorb
cmp
xchg
mov
ljmp
mov
adc
mov
sarl
xchg
ljmp
rcl
shufps
jbe
add
jb
hlt
adc
rcl
cmp
rep
incl
xchg
enter
pop
mov
add
jb
mov
xor
fmul
aas
nop
adc
lock
popa
inc
or
rorl
test
aad
enter
adc
pop
inc
int3
lds
es
cmpsb
or
nop
and
inc
inc
inc
inc
sbb
lods
or
mov
jl
adc
xor
call
jmp
and
jmp
and
call
das
and
xchg
clc
sub
loop
icebp
loopne
or
jo
cmp
push
nop
sahf
inc
or
cli
nop
adc
movsb
push
push
aad
inc
sub
lea
jl
cmp
or
adc
pusha
cmp
adc
lock
nop
mov
les
and
or
inc
cmp
sbb
faddl
cmp
loopne
dec
mov
dec
push
mov
mov
jne
cmp
jle
dec
sub
nop
sub
dec
lods
sub
and
pop
les
nopl
and
sub
xor
cmp
inc
xchg
push
push
push
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
jo
or
pushf
sub
mov
adc
mov
lcall
and
inc
xchg
fsubl
es
lret
les
outsb
cmp
dec
xchg
rclb
mov
aam
fnstenv
cli
add
lahf
fisubrs
push
fsubp
push
mov
popf
imul
pop
or
jp
es
imul
inc
mov
cmp
jne
push
inc
inc
dec
fistpl
sar
inc
lock
cwtl
scas
jae
lret
adc
xchg
call
mov
pop
out
loopne
push
push
sub
cmpsl
daa
dec
cld
aaa
push
cmp
adc
cmc
mov
mov
or
rorb
xchg
std
les
orl
popf
enter
fsub
push
adc
xchg
loop
xor
push
dec
cmpsl
mov
mov
sub
add
xor
ljmp
mov
or
repz
or
fucomp
jnp
hlt
or
pop
mov
dec
pop
cmp
dec
or
mov
adc
inc
aam
mov
add
inc
xchg
shlb
sti
adcl
sub
mulb
inc
out
and
outsb
xor
and
inc
lock
mov
test
xchg
jge
mov
lds
mov
xchg
xor
cmpl
or
ret
fs
ror
dec
adc
or
cmpsb
inc
add
cmp
add
mov
push
mov
or
sub
dec
lock
or
xchg
cs
xchg
call
mov
jge
cmp
faddl
xchg
push
inc
in
out
dec
decb
mov
rcrb
add
xchg
adc
xor
or
push
aaa
andl
mov
mov
jns
mov
mov
xor
xchg
push
stos
add
ret
xchg
xor
dec
dec
and
and
jmp
lods
sub
jge
or
loopne
fwait
nop
les
mov
jmp
cs
aam
add
test
stc
add
imul
incb
lea
in
adc
hlt
sbb
call
movl
jo
xor
add
popf
pop
call
cmp
adcl
xchg
add
mov
sar
scas
mov
pop
inc
or
or
inc
jbe
rcll
sub
push
mov
in
and
inc
sub
sub
jo
inc
aaa
mov
xor
inc
adc
inc
sti
mov
mov
fimull
lods
dec
fldenv
bound
jg
stc
and
fsts
shrl
mov
jle
inc
or
add
xor
pop
fstps
test
push
mov
jecxz
push
call
adc
lahf
cmpsb
sbb
dec
faddl
pushf
data16
and
pushf
mov
or
jbe
pop
enter
fstpl
jo
fdivl
clc
inc
je
push
jge
pop
push
clc
jmp
inc
mov
icebp
and
out
out
scas
and
xor
fdiv
adc
in
sbb
mov
rol
or
xchg
loopne
mov
adc
inc
fnclex
mov
xor
pop
nop
dec
mov
inc
sbb
adc
mov
cwtl
and
push
adc
pop
and
or
pop
out
pop
inc
cmp
hlt
push
fstcw
lea
aam
int3
ja
fisttps
insl
fistpll
or
dec
mov
pusha
xchg
bound
js
mov
mov
into
loop
push
mov
into
icebp
adc
mov
out
pop
test
sarb
xor
into
xchg
push
jge
jb
outsb
fs
sbb
push
mov
fstpt
arpl
loopne
lods
ret
xchg
inc
push
pop
pop
xchg
xor
adc
pop
xchg
inc
lahf
mov
cld
mov
inc
outsl
mov
in
call
add
and
push
bound
popf
jmp
adc
mov
dec
outsl
rclb
stos
sub
das
push
jg
loope
mov
sbb
hlt
sub
xchg
or
cmp
xchg
int
test
jo
sbb
lock
xorw
adcl
push
testb
bound
push
aam
cmp
sub
addr16
test
movsl
cmp
and
ret
dec
sbb
in
call
mov
fdivl
imul
je
inc
sbb
and
pop
stc
das
dec
jo
xor
xor
jl
mov
out
push
clc
fmull
inc
int3
jle
out
mov
scas
mov
cli
adc
xlat
bound
les
es
sbbb
fsubrs
adc
int3
jmp
nop
dec
adc
and
xchg
sarl
das
sub
jp
inc
stos
mov
or
mov
inc
adc
cmp
mov
sbb
and
sub
mov
call
fcomps
imul
xchg
sbb
inc
clc
push
lahf
pop
jp
loopne
loop
dec
push
rcrb
fidivrs
mov
shll
adc
add
cmp
pop
ret
jle
and
lods
sti
fldenv
mov
push
ljmp
js
push
sbb
xor
cmp
ja
add
divl
out
rclb
lret
mov
or
add
and
call
push
or
mov
ljmp
sub
scas
or
push
add
lret
push
sub
push
push
call
dec
or
int
inc
cs
or
mov
cmp
rcr
mov
xlat
mov
jae
xor
add
push
xor
inc
sbb
push
adc
ret
sbb
popl
fisttps
or
mov
xchg
fwait
push
lcall
push
jl
in
or
and
dec
push
inc
add
imul
pop
cwtl
imul
pop
adc
ljmp
push
lea
push
ret
cmp
test
dec
adc
les
dec
arpl
enter
in
shrb
dec
test
sub
dec
inc
popw
pcmpgtb
add
cld
stc
hlt
enter
in
fcoml
dec
test
dec
pusha
movsl
in
pusha
push
and
dec
addr16
call
dec
data16
clc
or
popf
aaa
pusha
or
dec
jne
rorb
pop
cltd
je
jl
or
mov
pop
stos
and
rorb
and
xchg
popf
pusha
jb
pushf
loopne
mov
push
cli
je
lods
stos
xchg
in
sub
je
add
test
out
or
je
daa
cmp
movsl
push
pop
sub
dec
das
sub
shll
adc
adc
test
cld
sub
repz
std
leave
leave
ja
xor
lods
xor
cwtl
xchg
in
rclb
inc
sbb
int3
pop
jbe
mov
cmp
jae
push
popl
sub
in
mov
adc
bound
popf
push
lahf
cmp
ret
pushf
push
adc
push
rorb
adc
or
adc
cs
repz
mov
cmp
jl
mov
hlt
xor
xor
or
divb
mov
mov
lods
call
adc
and
call
lret
xchg
shlb
push
mov
inc
pop
dec
and
adc
call
pop
mov
jo
adc
or
clc
adc
into
outsl
inc
std
adc
or
icebp
sarb
add
adc
or
mov
mov
ret
sbb
adc
sbb
add
xor
movsb
mov
push
dec
dec
movsl
sbb
adc
cmp
sub
jle
movzbw
push
je
and
sub
mov
add
and
sub
ljmp
cwtl
cmpsl
xor
mov
call
in
jae
cmpsl
data16
call
ljmp
push
testl
jmp
lock
xchg
mov
or
aas
ljmp
xor
out
jge
loop
test
inc
mov
cmc
mov
outsb
jmp
inc
mov
or
push
stos
ret
stos
dec
inc
aas
adc
cld
bound
pop
aaa
and
fwait
or
es
mov
push
pop
cmp
push
jl
loope
sub
and
mov
add
loop
add
sbb
call
mov
mov
or
jae
iret
jb
rclb
push
lahf
adc
das
mov
sbb
and
iret
gs
rdtsc
adc
xchg
adc
push
out
xlat
lcall
arpl
mov
push
mov
mov
cmp
mov
sub
popf
inc
add
or
or
nop
test
push
leave
mov
inc
ljmp
push
sub
and
stos
fs
roll
mov
iret
sub
sbb
cmp
fs
xchg
test
jmp
adc
movsl
loopne
dec
pushf
sbb
into
or
or
push
imul
pop
insl
jns
push
call
iret
lret
ljmp
aam
or
ret
or
and
loope
or
fadds
out
inc
adc
xchg
or
loopne
pop
lret
aaa
int3
aam
pop
dec
mov
lock
pushl
lods
sub
mov
clc
push
inc
outsl
inc
mov
std
lock
adc
loop
sub
sbb
mov
mov
push
divl
das
adc
out
sbb
pop
fisttpll
push
and
jb
dec
mov
inc
idivb
test
jae
xor
push
movsbl
jmp
or
dec
cmp
mov
push
jns
cmpsl
jle
mov
fwait
repz
in
cmp
pushf
cmp
sub
or
cltd
sbb
mov
or
shr
inc
mov
jecxz
nop
xor
jb
je
jbe
add
or
jne
div
mov
mov
jle
add
add
jb
cmp
push
ja
push
pop
xor
add
lcall
mov
push
outsl
movsb
std
dec
or
lds
jmp
dec
outsl
adc
enter
or
insb
and
pop
addr16
sub
and
fists
mov
popl
movsl
js
sub
incl
fwait
dec
cmp
outsb
mov
xchg
in
sbb
les
cmp
xchg
daa
icebp
adc
inc
adc
push
es
sbb
jmp
fnstcw
xor
sbb
sbb
and
adc
dec
or
stos
mov
sahf
pusha
mov
mov
sbb
inc
arpl
sub
pop
dec
mov
icebp
cmp
je
daa
popf
inc
xchg
popa
jl
jnp
sbb
or
mov
xor
cmp
jg
pop
push
jns
push
and
nop
hlt
cmpsl
lcall
sub
aam
das
dec
movsb
scas
in
sahf
pop
mov
xor
inc
cmpsb
sbb
dec
pop
add
sbb
inc
mov
sbb
adc
jmp
cmpsl
sbb
insb
mov
and
out
int
lahf
cmp
pop
roll
jmp
push
push
mov
cli
cmp
dec
dec
int
popa
test
push
or
movsb
push
xchg
pop
or
adc
inc
pop
call
or
adc
adc
mov
or
sbb
inc
pusha
popf
xchg
inc
push
inc
push
lds
cltd
out
cmc
or
and
cmp
das
adc
and
lds
inc
push
add
popl
and
testb
adc
sbb
or
mov
sub
inc
adc
pushf
outsb
adc
add
xchg
in
cmp
es
xorb
clc
dec
outsl
and
pop
mulb
das
sub
xor
jg
jo
or
xor
add
or
or
or
jmp
icebp
xlat
lods
mov
shll
push
dec
pop
and
xor
xor
ja
jl
inc
pop
jg
movsb
shrb
mov
shll
inc
mov
inc
adc
or
sub
sti
push
mov
andl
jg
in
sahf
scas
dec
lret
jne
inc
mov
sbb
sar
aas
int
sub
inc
and
in
in
int3
stc
in
cli
mov
out
add
adc
pushf
es
and
jmp
les
subb
fs
pop
add
loop
and
lods
or
jb
in
or
sahf
add
loope
movsb
pop
ret
inc
jo
adc
inc
add
push
mov
sub
add
mov
movsb
test
adc
or
out
and
sub
incb
pop
or
jle
jle
sub
add
popf
push
shlb
fdivs
xchg
or
insb
adc
cltd
add
mov
and
sbb
into
rorl
imul
or
movsb
push
xchg
pop
push
xchg
hlt
pushf
jle
aaa
pushl
cmpsb
mov
sub
in
dec
pushf
sbbb
ficomps
std
negl
sbb
dec
in
xchg
mov
inc
inc
cwtl
mov
pop
jns
mov
adc
ret
cli
gs
inc
or
jmp
xor
push
lahf
out
and
inc
adcb
mov
in
push
xor
outsl
inc
mov
outsl
aam
sub
aam
jne
xorb
push
or
fwait
ds
push
mov
or
jmp
jp
xchg
loope
aam
dec
and
xchg
ss
das
inc
sbb
pop
ss
pop
pop
mov
lds
mov
xchg
or
incl
inc
jne
push
test
add
xor
daa
xor
push
and
xor
in
mov
inc
mov
sbb
mov
mov
jae
adc
mov
mov
mov
stc
cmc
jmp
mov
insl
cli
push
loopne
lea
add
mov
cmp
ss
dec
inc
mov
jbe
dec
mov
insl
adc
ret
inc
push
shll
mov
hlt
iret
adc
and
mov
push
decb
cmp
push
out
xchg
push
push
push
xor
inc
xor
sub
mov
xchg
or
push
or
mov
loop
add
imul
test
mov
push
jbe
dec
fsts
out
mov
inc
push
push
and
inc
add
inc
cld
cmp
fsubrs
or
les
call
inc
ffreep
add
push
call
cmp
jmp
ret
je
repnz
push
dec
mov
xlat
add
inc
out
mov
dec
pushf
fsubrs
jo
mov
lret
mov
sbb
lret
add
jmp
xor
bound
fistl
mov
popa
sub
pop
scas
shrl
aam
cmpsb
lds
outsb
cmc
adc
and
jge,pt
cmp
sar
hlt
xor
mov
iret
movsl
pop
add
jp
push
je
into
inc
and
jae
shr
dec
pop
movsl
adc
pop
icebp
inc
push
mov
outsb
mov
or
push
dec
fcoml
mov
fstps
test
daa
mov
cmp
mov
push
adc
data16
test
xchg
loop
adc
pop
cwtl
loopne
dec
cmp
int3
call
add
jne
push
jbe
inc
add
or
gs
imull
sti
div
clc
jp
iret
jge
pop
sub
xchg
xor
adc
frstor
imul
test
sub
adc
adc
call
push
les
dec
out
xchg
lahf
and
out
dec
in
or
jl
xchg
dec
testl
push
adc
push
push
sub
sub
pop
sub
cmpsb
xor
adc
int3
xor
cmovg
push
icebp
pop
pop
sub
inc
adc
and
dec
stos
and
inc
mov
fs
cmpsb
adc
popa
fisubrs
sbb
outsl
fmuls
inc
or
inc
xor
out
je
sbb
mov
push
xor
test
aaa
cmp
or
mov
inc
add
dec
push
sub
mov
and
adc
mov
int3
enter
mov
adc
adc
mov
hlt
out
and
int3
or
sbb
and
bound
insl
insb
or
out
inc
mov
xchg
mov
jne
push
call
jle
xor
sbb
jne
cld
fistl
jo
mov
mov
and
sbb
dec
jp
mov
fnstenv
lret
mov
or
aas
push
or
jae
push
sub
lahf
sti
jecxz
je
or
pop
xlat
push
mov
ss
adcb
shll
or
pop
sbb
cmpsb
daa
sbb
lock
lcall
push
pop
push
or
aam
imul
push
sbb
jo
shlb
inc
loop
adcb
add
sbb
nop
xorl
mov
test
daa
andps
push
and
pushl
movsl
data16
test
std
and
xchg
das
idiv
pop
mov
int3
and
stos
xchg
sub
lods
adc
dec
and
adc
call
lcall
test
xchg
sbb
push
push
sbb
add
std
call
enter
stos
cmp
inc
fcoms
mov
mov
xor
outsb
repz
popf
jp
inc
jp
fdivrl
inc
or
add
sub
sub
test
push
push
sub
push
pop
movsb
push
add
mov
jne
pop
mov
and
std
pop
mov
stos
push
xor
leave
and
jp
sti
xchg
mov
arpl
pushf
push
and
rclb
jne
jl
jmp
xor
cmpsl
icebp
mov
movlps
leave
mov
nop
adc
int
inc
jg
mov
adc
shlb
cmp
sub
mov
outsl
add
add
repz
xor
sbb
mov
inc
inc
jne
cmp
test
sub
inc
jmp
int3
xor
scas
push
int3
gs
and
out
std
lods
inc
dec
jne
lods
cmp
cmc
rorl
or
clts
enter
sub
push
loope
stc
add
das
sbb
and
lret
inc
insl
dec
jns
mov
shrb
std
das
mov
sub
imul
jne
pop
cmpb
push
sbb
rorb
es
push
sbb
rorl
enter
jno
sbb
daa
adc
cmp
or
sub
aad
es
sbb
mov
out
lret
cmp
pop
popa
movsb
mov
cmpsb
rorl
mov
push
daa
lcall
push
int
leave
sbb
shrb
mov
push
adc
jmp
jns
mov
jne
mov
mov
or
movsl
filds
jno
adc
and
push
popa
mov
pop
dec
inc
test
shrl
bound
rcrl
dec
jmp
inc
xor
pop
cmpsl
ds
in
add
inc
dec
pop
or
daa
testl
cmp
jae
test
outsl
lea
mov
jae
jnp
popf
push
jbe
jl
popl
clc
imul
call
pop
lret
test
add
xor
orb
lods
fadds
int3
cmp
imul
pusha
cwtl
call
cmp
out
or
jmp
xor
jmp
xor
adc
addb
pop
pop
in
imul
xchg
jnp
sbb
push
or
pusha
sub
and
shrb
or
or
jbe
fiaddl
or
cltd
nop
inc
sub
movsl
imul
and
inc
mov
or
adc
lahf
sti
sarb
sbb
dec
test
test
vmovdqu
jne
scas
mov
lret
inc
ret
cld
cmp
or
sbb
mov
inc
lds
add
clts
lock
test
cld
adc
jge
mov
enter
les
cmpb
and
add
mov
push
ret
add
sub
data16
out
lds
xor
sub
xchg
jo
mov
shrb
pusha
inc
mov
loopne
mov
jmp
inc
add
sbb
data16
xchg
jno
xchg
xor
gs
xor
dec
or
mov
es
adc
sub
dec
fsubrs
xchg
sbb
pop
cld
push
adc
pop
add
add
adc
dec
xchg
lds
dec
or
fisttpl
xchg
mov
and
aam
std
shrb
into
dec
mov
sbb
push
clc
and
add
pop
fmuls
das
cli
xor
arpl
loopne
dec
jae
in
mov
mov
lock
aad
xor
xchg
jmp
stc
lods
pop
inc
sti
lcall
jmp
rcl
movsl
push
push
xor
std
and
enter
scas
ss
adc
jmp
pop
adc
lds
push
adc
cmp
jne
adc
pop
add
xchg
inc
stc
mov
movsb
jne
jno
test
dec
add
jb
mov
call
adc
ret
push
adc
push
cmpsb
dec
inc
fmull
sub
sub
and
mov
cwtl
jmp
jae
adc
adc
ret
inc
xchg
adc
adc
cmpsb
fildll
es
sahf
hlt
mov
mov
xchg
lahf
adc
pop
inc
and
scas
int3
pop
loopne
push
jo
inc
cmp
sub
pop
out
orl
fadds
data16
stc
cltd
ds
hlt
xor
adc
sbb
dec
adc
pop
add
call
and
dec
das
jmp
clc
dec
dec
addr16
add
sub
jns
jbe
or
xor
and
push
and
int3
divl
jg
fdiv
cwtl
adcl
or
inc
cmp
pop
cmp
inc
int
push
or
ljmp
sub
jbe
jp
sub
loopne
adc
mov
out
es
dec
cmp
inc
pop
xchg
aad
jae
jae
xchg
mov
push
pushl
mov
sub
hlt
mov
faddl
mov
rclb
mov
lret
cmpsb
lret
addr16
test
xlat
mov
shl
fimull
push
push
idivl
mov
out
shlb
pop
enter
mov
sbb
lds
push
and
testl
daa
ss
push
xchg
adc
push
push
fldt
push
loope
dec
dec
repnz
cmp
lcall
test
stos
pop
mov
aas
lret
sub
pop
xchg
scas
cld
insl
pushf
pusha
xchg
cmc
sub
iret
add
jmp
gs
sar
add
arpl
into
cmc
cmp
clc
inc
shr
pop
xchg
test
out
gs
dec
hlt
insb
dec
loopne
fcomps
jno
and
mov
xor
lret
mov
sbb
dec
enter
jns
or
mov
push
mov
pusha
ficoms
dec
dec
adc
es
cmpsl
xacquire
push
fisttps
adc
iret
test
cmp
inc
repz
lret
inc
hlt
inc
push
jnp
outsb
out
rorb
sub
int
js
sbb
cmp
pop
mov
dec
or
push
push
enter
xor
mov
out
cmpsb
mov
mov
adc
lcall
xchg
inc
adc
filds
pop
mov
push
xlat
iret
sub
outsl
addb
xlat
inc
stc
in
test
inc
cmpsb
and
nop
mov
iret
dec
xchg
adc
cmp
and
icebp
test
xor
mov
pushf
fwait
inc
callw
sbb
lods
icebp
lds
and
and
cli
sbb
int3
mov
popf
pop
adc
add
dec
mov
adc
push
fwait
lcall
push
cmp
shrb
adc
inc
mov
cmpsb
xchg
inc
mov
movsb
enter
aas
dec
enter
xchg
mov
or
dec
or
enter
pop
xchg
pop
or
and
sub
out
das
jg
jge
test
mov
aad
cltd
js
pop
roll
out
sub
imul
jl
sub
adc
jae
shr
sub
adc
call
ds
and
movsl
dec
push
mov
inc
dec
or
sub
mov
adc
rolb
jne
or
shr
clc
push
imul
les
xchg
xor
add
fimull
rclb
fidivrs
jae
mov
ror
xchg
enter
and
or
faddp
dec
xchg
sub
and
inc
sub
sar
push
int3
pushf
sub
jbe
rorl
cmp
add
cmp
push
shlb
jl
fsubl
jae
mov
ljmp
mov
and
xchg
lods
lahf
pop
mov
mov
add
orb
mov
and
loope
sbb
inc
clc
inc
inc
lret
sbb
jmp
sub
and
rorb
fmuls
xchg
jg
xchg
mov
nop
hlt
mov
mov
ljmp
adc
test
lods
add
icebp
loopne
push
mov
add
cli
adc
insl
cmp
xor
movsb
in
out
imul
and
add
imul
and
xor
daa
dec
and
in
rorl
dec
push
aam
loope
insl
movsb
data16
mov
jns
je
push
fs
je
xchg
rcrb
sub
aam
cmp
stc
or
nop
aam
aam
test
sahf
jecxz
int3
or
adc
jge
jg
hlt
std
cmp
push
sbb
and
and
lea
mov
mov
rorb
scas
xchg
aad
sbb
fisubl
and
or
push
cld
lret
enter
pop
mov
ret
jp
cmp
mov
enter
xor
sub
xchg
or
pushf
daa
dec
nop
jge
or
nop
ret
xchg
pop
inc
sbb
push
pop
test
adc
ds
mov
jge
pop
adc
xchg
push
mov
imul
add
pop
sbb
cmp
or
mov
mov
mov
mov
les
sbb
sbbb
aam
bound
or
mov
inc
adc
cmpsb
adc
and
add
cltd
add
inc
mov
cmp
inc
xchg
xchg
fcoms
and
mov
mov
lods
or
icebp
mov
xor
push
lods
popf
mov
movsl
sti
and
movsb
or
adc
fs
push
ret
add
sub
loop
stos
dec
lock
movsb
and
rcll
sub
sub
mov
xchg
mov
inc
cwtl
sahf
popa
cmpsb
mov
mov
mov
inc
pop
xor
aad
mov
out
mov
mov
ror
inc
jmp
repz
xor
xchg
adc
nop
sbb
in
mov
and
scas
inc
repnz
and
and
sub
sub
lods
hlt
push
in
aam
sub
dec
fldt
adc
cmp
xchg
xchg
icebp
inc
push
xchg
ret
rclb
shrl
in
mov
jle
sub
xchg
xchg
push
jo
loop
jne
insb
test
mov
push
xor
inc
ffreep
jne
jecxz
add
pop
mov
push
outsl
jmp
nop
add
stc
lret
mov
stc
and
add
es
pop
test
stc
sub
leave
add
xchg
ljmp
jmp
xor
or
int3
pop
dec
or
xor
fidivs
xor
add
or
pop
les
jl
sarb
shlb
dec
lea
stos
jg
cmp
icebp
xor
cmp
push
enter
and
icebp
jl
shl
std
jae
pop
leave
xor
jmp
mov
dec
rolb
xor
psubusw
jmp
fnop
movsl
cmp
xor
jle
xor
out
pop
pushf
pusha
mov
push
mov
xchg
dec
js
mov
push
adc
and
incl
enter
add
repnz
pop
enter
repnz
imul
mov
loopne,pn
jo
shrb
adc
ret
mov
xor
and
cmpsl
ret
in
adc
dec
stos
out
add
fmuls
sub
and
mov
out
push
cmpsb
adc
test
push
add
or
xchg
cmp
mov
or
fnstcw
cmp
or
or
sbbl
mov
mov
lods
mov
mov
xchg
sbb
or
adc
popa
rorb
and
xchg
inc
sahf
jmp
jg
xor
jg
sub
dec
push
add
dec
mov
aam
repnz
sbb
je
fidivrs
loop
push
pop
cld
subl
sbb
xor
xchg
popf
sahf
shr
repz
dec
cld
xchg
push
loope
notl
inc
push
sub
mov
xlat
out
pop
ds
cltd
adcl
outsb
add
ljmp
stc
or
jne
mov
or
in
adc
das
adc
sbb
pop
jle
xchg
imulb
dec
pop
mov
ja
mov
ret
adc
cld
push
push
rol
dec
aas
or
push
lret
outsb
mov
mov
push
add
pop
dec
nop
aam
inc
or
sbbl
jns
xchg
jnp
mov
in
aad
xor
adc
inc
fld
add
jecxz
das
xchg
xor
mov
dec
je
cmc
jle
sbb
or
loope
and
sub
aam
xchg
hlt
xlat
in
out
push
jle
aas
pop
and
cmp
add
lret
aam
repz
scas
loopne
rol
mov
loop
cwtl
xchg
rorb
adc
mov
out
das
nop
cmovns
xchg
mov
scas
inc
lock
fwait
fsubrl
add
dec
cmp
xor
pop
xor
hlt
cmp
cmpb
pop
inc
inc
xor
sub
loope
and
jmp
lods
push
add
fsub
dec
xor
push
aam
push
cltd
outsb
or
sbb
addr16
inc
push
push
in
in
push
in
push
test
xchg
mov
inc
test
es
inc
sub
sahf
pop
mov
loope
cld
ret
add
std
lods
push
push
mov
gs
out
inc
shrb
jno
les
or
adc
in
in
inc
notl
jno
pop
cmp
sub
xor
add
sbb
dec
mov
and
sbb
adc
in
xor
cmp
jle
jecxz
and
xor
add
cmp
jge
add
xlat
mov
xchg
mov
inc
loopne
loope
sarb
jmp
and
loop
mov
mov
frstor
addr16
leave
dec
push
rep
jns
or
adc
fsubs
gs
add
inc
add
in
sub
in
push
adc
and
repz
imul
leave
sahf
ja
nop
in
jge
rorb
pop
dec
aaa
lret
imul
or
or
enter
iret
xchg
push
loop
xchg
out
mov
and
nop
shl
enter
and
leave
enter
push
jg
test
adc
data16
in
je
in
daa
mov
jmp
movsb
mov
rcl
dec
fsubp
and
cld
lcall
rcrl
insl
cmp
pop
stc
repnz
shrb
repz
push
dec
out
dec
clc
mov
dec
test
dec
or
enter
and
out
jg
stos
cmpsl
mov
popf
or
pop
das
ret
add
sqrtps
or
pop
adc
sbb
push
inc
fcoml
mov
js
scas
pop
in
in
inc
cmpsb
mov
enter
in
mov
fcomps
mov
idivb
dec
jecxz
cmpsl
push
dec
fcomps
imul
fs
jle
inc
daa
mov
push
jg
sub
push
push
xor
sub
push
pop
add
mov
pop
mov
ljmp
in
cltd
test
bound
xchg
pop
push
sub
andb
add
les
dec
and
dec
push
decl
jg
lea
cmp
mov
cmp
pop
fs
mov
dec
or
pop
xchg
rolb
std
bound
mov
mov
pop
push
push
adc
adc
or
sbb
add
es
xor
inc
push
mov
xchg
nop
mov
and
adc
push
add
push
and
ja
call
sub
mov
add
push
inc
fdivrs
lods
add
sbb
push
aam
push
push
ds
and
add
lea
cld
sub
ret
mov
xchg
ficoml
ret
psllw
inc
adc
rolb
mov
cmp
mov
xchg
dec
mov
push
jge
stos
pop
loop
adc
cmpl
icebp
inc
add
adc
jmp
mov
lret
aas
stos
insb
dec
cmp
pop
das
mov
sub
lods
notb
jg
lock
and
adc
sarb
cmp
or
add
mov
mov
xor
pop
and
in
and
add
jmp
pop
fs
aam
notl
out
add
sub
incl
xchg
inc
add
add
cwtl
cmp
sub
in
rclb
lea
and
sub
sub
and
sub
and
cmc
mov
add
call
testb
lock
inc
pushf
cmp
ja
addl
adc
or
je
xchg
fildll
dec
js
jle
sub
shrl
jmp
and
inc
cmc
adc
add
sub
fldcw
movsl
cmp
push
or
rclb
sbb
test
and
sub
mov
je
pop
sub
icebp
in
or
ret
xchg
adc
out
adc
sbb
enter
sub
scas
adc
sub
dec
lret
hlt
mov
popf
adc
icebp
inc
mov
sbb
jns
sub
mov
in
cmp
sub
adc
mov
lock
jmp
mov
pop
inc
mov
shrl
dec
xchg
mov
mov
or
mov
or
shlb
inc
out
inc
adc
or
sub
jns
cmpsl
icebp
jo
mov
iret
loopne
out
pop
mov
das
adc
xlat
push
loop
xlat
clc
shl
add
fcomip
cwtl
cmc
adc
push
in
test
jecxz
dec
mov
and
jae
es
adc
and
adc
adc
push
pop
xor
or
add
mov
add
es
cmpsl
cwtl
loop
sub
cli
add
sbb
aam
dec
popf
lahf
adc
adc
or
adc
sbb
enter
and
imul
inc
or
push
in
scas
lret
sahf
out
arpl
xor
lahf
adc
cmp
mov
push
lock
mov
and
sbb
jb
ret
sbb
test
mov
cwtl
imul
mov
mov
xor
xchg
or
jno
daa
fyl2x
adc
dec
mov
mov
movb
rcr
ds
jmp
fsts
mov
enter
lea
outsb
jge
and
xchg
loopne
cmp
inc
pop
pushf
dec
mov
push
or
stc
or
push
xchg
jbe
sub
adc
and
nop
mov
adc
mov
adc
xor
and
dec
insb
rolb
test
lock
in
lea
repnz
pop
sub
dec
sub
in
or
dec
or
adcl
bound
adc
js
lahf
mov
lret
popa
loopne
and
mov
call
sbb
mov
pop
das
rcrb
xchg
test
jbe
dec
loop
push
sbb
mov
mov
and
mov
je
cmp
push
jne
sub
and
xor
sbbb
adc
movsb
fimuls
dec
fstp
adc
movsl
jbe
test
call
cmp
mov
test
xor
push
lahf
loop
dec
shrb
mov
mov
mov
jae
push
lds
loope
ret
dec
les
inc
push
add
shlb
mov
and
clc
xchg
and
push
adc
insb
xor
push
daa
subl
enter
lea
inc
or
jmp
jle
adc
mov
cmp
rcrb
inc
adc
mov
dec
push
jle
ret
fs
test
adc
imull
and
or
lods
and
sub
and
dec
and
sbb
andb
pushf
fsubs
mov
inc
sub
dec
adc
and
lret
sub
dec
or
and
jmp
mov
and
std
bound
pop
fucomi
sub
mov
pop
pop
stc
in
shl
jbe
dec
mov
adc
sub
out
arpl
cmp
loopne
mov
mov
add
jp
icebp
add
pop
inc
ret
movsl
enter
mov
stc
adc
fsubrs
mov
push
push
push
xchg
sbb
xor
mov
cmpsl
scas
imul
test
cmp
cmpsb
aas
dec
mov
mov
add
fcompl
adc
add
pop
imul
or
mov
sub
jp
cwtl
or
in
lret
mov
cwtl
adcb
lcall
aad
sub
in
cmp
xchg
call
cmp
scas
or
rcl
pop
mov
movb
push
adc
cmpsb
push
mov
lds
daa
fstl
out
addl
mov
mov
xchg
clc
mov
nop
lods
dec
xchg
pop
outsl
xchg
sub
adc
dec
push
loope
dec
lahf
xchg
lods
or
call
mov
jp
lret
adc
jge
inc
add
xor
les
mov
mov
out
pop
je
cmp
ret
jle
add
out
add
sti
jnp
cwtl
cltd
pop
mov
or
andb
and
inc
jno
add
shl
mov
fcoml
sub
xchg
and
in
sub
aaa
sti
jb
fs
mov
sub
push
and
dec
jp
xchg
paddusb
notl
inc
adc
loope
sahf
adc
rolb
mov
ret
dec
push
push
add
repnz
fwait
loopne
mov
int3
xchg
lock
or
cmc
data16
mov
mov
xor
inc
sub
test
imul
sub
mov
dec
in
dec
dec
dec
jb
cmpsl
sub
mov
sbb
popf
repnz
mov
mov
add
cmp
shll
adc
adc
jmp
pand
ret
jne
call
or
jle
insl
mov
in
sahf
adc
mov
add
add
jmp
std
nop
pop
cli
aam
inc
cli
loop
sub
mov
xchg
mov
mov
adc
xor
scas
scas
xchg
cmp
mov
mov
cld
jno
jmp
sub
ljmp
loop
fs
add
rcrl
cs
movsl
mov
and
scas
dec
mov
push
push
repz
pop
gs
dec
pop
loop
dec
pop
ror
xchg
pop
or
pop
cmp
ja
pop
ret
nop
lret
pop
test
add
test
cmp
inc
mov
repz
incb
aaa
insl
inc
pop
lds
clc
push
movsb
xchg
xchg
push
movsb
mov
movsb
sub
iret
and
repz
fcoms
scas
mov
lds
pop
in
scas
mov
pop
rorl
dec
mov
inc
mov
or
add
je
fdivs
in
imul
fldenv
jg
jge
adc
cmpl
cs
outsl
inc
sbb
loop
xchg
cmp
jl
bound
mov
cld
jno
push
jb
ss
push
movsl
adc
std
les
and
js
movsb
cmpsb
xchg
dec
mov
pop
cltd
mov
or
push
dec
test
and
add
sub
push
xchg
xchg
and
fmull
jne
jnp
jmp
sub
cmp
dec
rcrb
repz
ret
and
push
mov
test
std
cmp
test
push
fstpl
sbb
stos
insl
xor
lea
mov
inc
cmp
es
pop
adc
adc
mov
jmp
xor
insl
xchg
mov
pop
bound
fdivrl
dec
bound
inc
stc
adc
clc
adc
mov
jmp
pop
inc
adc
std
add
notl
push
pop
mov
pop
xchg
pop
push
jmp
sbb
inc
mov
cmp
mov
out
mov
std
sub
mov
rolb
sub
leave
push
add
andb
adc
repz
fsubrl
std
insb
int3
lahf
cld
pop
les
mov
adc
jb
test
int3
rorb
gs
jmp
inc
scas
xchg
xchg
xor
xchg
lea
push
xchg
cld
lods
jge
jns
outsl
jo
mov
push
addr16
fadds
and
push
pop
mov
jae
xor
push
mov
andnps
outsb
mov
sbb
fcompl
jp
or
shl
cmp
push
mov
push
aam
aam
push
ds
mov
mov
push
mov
je
mov
cli
lea
jno
cmpsl
je
gs
sub
dec
mov
push
or
pop
bound
inc
rolb
add
je
or
add
lea
adc
jmp
inc
vmovups
mov
push
push
pushf
mov
xlat
inc
clc
mov
dec
scas
imul
test
xor
pushf
inc
aam
pop
mov
pop
call
mov
imul
or
push
ja
loop
test
xor
and
pop
mov
sbb
dec
popf
add
int
popf
lds
xchg
clc
out
lret
xchg
addr16
mov
cmp
movsb
shl
movsb
cwtl
sub
inc
push
dec
dec
test
mov
and
push
add
jmp
xchg
dec
xor
xor
je
pop
fs
adcl
cmp
fcoml
lods
dec
test
mov
push
inc
or
cmp
scas
jl
and
or
jmp
stc
in
lret
std
adc
and
sub
mul
cmc
adc
inc
imulb
jmp
aad
or
add
and
ljmp
aad
daa
dec
mov
mov
and
call
mov
pop
mov
inc
adc
dec
mov
and
mov
ds
lock
shll
add
push
aas
and
and
or
jae
jne
sub
int3
lret
push
dec
adc
jne
lahf
dec
cmp
sub
xchg
xchg
outsb
lahf
jns
pushl
pop
xor
pop
push
pop
jne
mov
inc
cmp
xchg
in
mov
inc
and
push
stos
dec
cmc
inc
cmp
push
sbb
mov
test
out
jns
or
xchg
arpl
stos
inc
xor
xchg
cli
push
adc
pusha
adc
icebp
mov
loop
adc
sub
mov
dec
sub
or
inc
dec
adc
and
push
jmp
repz
testb
std
and
sbb
or
mov
popl
cli
daa
or
bound
dec
adc
movsb
sti
repnz
sahf
cmp
jg
mov
mov
popa
xor
add
je
ret
cli
addl
or
popa
push
add
loop
and
jne
pop
inc
fisttpl
inc
inc
or
push
cmp
sub
mov
add
dec
lret
adc
dec
in
cs
mov
lea
adc
push
outsb
jmp
mov
stos
add
andl
pop
mov
or
xor
insl
mov
cmp
add
mov
ja
add
idivb
shrb
dec
pop
cmp
mov
push
dec
xorb
jns
sub
and
icebp
mov
sub
adc
mov
test
mov
push
add
sti
push
icebp
or
mov
inc
adc
icebp
aas
cmpsl
cld
notb
cmp
daa
pushf
or
sbb
aaa
pop
mov
add
addr16
mov
jo
inc
add
mov
jmp
jb
or
jmp
mov
loopne
sbb
lods
mov
mov
movsb
inc
add
and
lahf
jbe
nop
or
sbb
cwtl
xor
dec
jmp
dec
jne
pushf
mul
pop
in
add
push
dec
in
mov
adc
add
add
mov
dec
adc
dec
popf
xchg
je
sbb
adc
test
lods
push
test
pop
mov
sbb
dec
pop
decl
sub
xor
inc
push
adc
test
sub
mov
jae
loopne
jmp
mov
les
sub
mov
mov
inc
in
add
lahf
xchg
rorb
inc
adc
mov
scas
movsb
stos
mov
mov
popa
sub
lods
sbb
movsb
lahf
out
cmp
sub
mov
insb
cmp
push
pop
push
loopne
jge
popa
je
popf
or
ja
adc
xor
or
lods
xchg
inc
lahf
dec
leave
dec
fs
inc
or
dec
push
adc
jbe
les
inc
and
lods
dec
leave
or
mov
dec
xchg
mov
dec
fiaddl
xorb
in
roll
nop
jl
ja
jo
mov
mov
test
movaps
mov
or
add
ljmp
mov
inc
mov
in
popa
mov
cmp
into
fstpl
jmp
and
add
les
fsubrl
sbb
ss
and
inc
sub
stos
and
mov
mov
and
sbb
leave
and
jmp
popf
and
rclb
cmp
adc
inc
inc
mov
inc
inc
push
mov
pop
in
jp
inc
ret
rclb
lcall
ficompl
cmp
jl
dec
or
pop
adc
sbb
jmp
push
test
or
incb
adc
in
cmp
jnp
and
cmpsb
fs
gs
inc
xchg
xchg
mov
cld
xor
and
fldenv
ret
adc
or
rolb
add
lea
add
movsl
push
or
push
mov
fsubrs
pop
mov
imul
sti
jb
negb
cld
sub
imul
jne
daa
leave
jge
popa
in
mov
push
push
dec
xchg
mov
xor
jae
or
pop
repnz
jb
pop
push
scas
jno
adc
cmp
test
sub
mov
pop
cmpsb
and
dec
fsubrs
loop
sarl
xor
pop
jp
dec
cmp
arpl
or
les
or
dec
add
push
and
bound
jne
sbb
fiadds
mov
mov
shll
sti
fs
add
sbbb
test
inc
aad
cmp
ja
push
gs
insl
into
adc
adc
sbb
arpl
dec
popf
push
push
lcall
pop
adc
adc
enter
jbe
sarl
std
es
xchg
clc
ljmp
mov
adc
dec
jne
shl
sarl
pushf
aas
mov
dec
xchg
outsb
rcll
repnz
add
test
cltd
outsb
add
adc
cmp
jge
push
fisubl
mov
push
lret
std
sub
inc
mov
jle
sub
sbb
ljmp
jle
scas
cltd
movsl
push
and
outsl
cld
push
mov
cmp
les
ljmp
test
dec
dec
ret
jno
xchg
adc
dec
and
jmp
test
rorl
lea
pop
pop
lret
cmpsl
or
cmp
mov
mov
sbbl
jecxz
test
std
out
jb
in
sbb
lds
or
push
dec
sub
dec
jne
stc
pop
in
pop
xor
mov
dec
cmp
sub
repnz
sbb
push
adc
jno
mov
push
mov
or
mov
mov
scas
inc
xor
rol
pop
push
cli
stos
adc
imul
lret
or
xchg
or
mov
jnp
inc
loope
sub
pop
pop
lea
movsb
ds
inc
mov
or
fisubrs
mov
mov
ret
cmp
xchg
mov
jl
xchg
jnp
push
rorl
pop
inc
call
pop
add
dec
or
orl
push
or
rclb
clc
push
push
test
push
or
rolb
dec
mov
and
or
mov
dec
mov
cmpsl
and
mov
sbb
mov
movsb
cmp
adc
pusha
pushf
scas
dec
push
adc
inc
test
or
or
or
xchg
or
mull
mov
jo
jge
xor
mov
or
or
imul
or
dec
add
movsb
sbb
aas
or
movsb
xor
xor
daa
imull
enter
or
iret
mov
nop
mov
nop
push
adc
sbb
and
or
clc
push
insb
jl
daa
and
fcoms
les
jp
imull
repz
xor
adc
cmp
dec
push
adc
jnp
adc
adc
and
and
fnstenv
add
int
inc
jmp
test
pop
xor
add
sub
std
and
mov
les
push
and
adc
nop
xchg
lea
out
push
pushf
sbb
xor
das
xchg
das
cmp
addl
xor
push
or
dec
jg
addr16
test
ficoml
adc
inc
rclb
mov
or
test
cmp
lea
pop
add
xchg
push
xchg
xor
movsl
cltd
data16
ret
add
cli
vmovups
pop
jns
movsb
xor
sub
pusha
in
lcall
dec
mov
leave
pushf
push
or
test
mov
xor
aas
orb
adc
ljmp
inc
pop
sub
push
fdivl
push
add
cld
adc
loope
push
push
and
dec
cmp
inc
pop
das
jg
xchg
xchg
sub
push
daa
js
rorb
sbb
bound
in
adc
or
cmp
inc
test
movsb
dec
addb
out
dec
xor
test
push
pop
in
push
xchg
adc
dec
inc
and
jmp
xchg
and
mov
jmp
push
cmp
int3
push
lods
cltd
lds
pop
xchg
pusha
sub
lods
data16
fnstsw
or
push
leave
push
aaa
sub
jmp
sbb
test
push
add
mov
adc
test
or
jecxz
and
bound
jmp
lret
aad
ret
mov
aad
xor
jns
call
bound
pop
jmp
cwtl
adc
push
imul
mov
fs
push
mov
ljmp
add
adc
in
ljmp
dec
xchg
add
or
shlb
push
lock
dec
cwtl
and
adc
mov
adc
popf
xchg
sti
daa
adc
and
mov
daa
aam
push
push
dec
int3
sub
fs
sub
sub
and
xchg
xchg
xlat
dec
mov
test
xor
lret
inc
mov
test
and
and
inc
or
leave
or
adc
or
xchg
int3
and
adc
or
daa
sub
adc
cmp
je
popa
je
aad
xchg
das
xor
cmc
sub
push
jns
pop
mov
cltd
jns
insb
push
cmpsb
or
xor
or
xchg
scas
push
pop
in
push
pop
and
sbb
scas
imul
rcrb
clc
jae
call
or
enter
fs
sti
add
sbb
sbb
inc
adc
inc
mov
jg
xor
and
sub
or
or
sti
add
nop
xor
movsb
sub
mov
inc
push
inc
sbb
mov
dec
jb
and
jns
imul
dec
sbb
xchg
pop
testb
imul
aas
ret
adc
inc
ficompl
sarb
rcl
faddp
cltd
push
push
iret
lcall
or
jnp
xor
mov
mov
jno
jne
inc
mov
cmp
dec
or
sbb
cwtl
sub
fucomp
aaa
inc
push
push
stc
dec
jno
jne
jnp
stos
nop
shrb
sbb
xor
jno
inc
mov
repnz
inc
fcomps
scas
ds
xor
insb
fdivs
imul
dec
imul
xchg
dec
bound
ljmp
or
cld
lcall
sbb
add
movsb
sbb
dec
xor
or
fadds
in
mov
mov
jne
inc
icebp
sub
inc
addb
call
rcrb
xchg
mov
inc
mov
push
movsb
enter
es
nop
add
xor
call
out
mov
mov
inc
jl
popf
add
push
lea
inc
or
or
inc
insl
add
scas
movsl
add
push
push
or
je
fiadds
jnp
mov
sahf
cmp
jo
jecxz
mov
add
jmp
mov
inc
je
call
and
jmp
jecxz
xchg
mov
dec
and
out
and
cmp
out
scas
into
or
mov
cli
repz
jmp
pop
cmp
movl
adc
and
mov
mov
mov
xchg
or
int
addl
add
add
or
arpl
adc
loopne
lods
add
add
push
add
xchg
push
addr16
mov
add
loop
and
push
xor
divl
pushf
xor
int3
sbb
or
or
jae
xlat
push
add
call
jecxz
add
decl
or
les
or
in
jo
popa
mov
es
xor
jge
fmulp
out
dec
xchg
fmulp
outsl
adc
jno
mov
xor
or
adc
add
jmp
mov
dec
stos
roll
jle
scas
mov
mov
or
or
in
cmp
sarb
xor
jnp
insl
jae
jne
stos
mov
or
mov
adc
daa
pop
add
es
add
push
cld
and
or
push
push
stos
adc
inc
and
inc
adcl
mov
sub
adc
test
sbbb
push
das
je
add
fimuls
inc
lret
das
pushf
sbb
xor
es
enter
jno
int
into
std
adc
mov
mov
push
push
mov
lods
xchg
add
enter
inc
push
sarl
mov
insb
inc
or
dec
mov
mov
arpl
shll
mov
cmp
adc
or
inc
call
aam
jmp
out
lods
inc
xchg
insb
imul
mov
dec
outsl
mov
shr
orb
cmc
fidivs
out
jne
loop
jmp
test
in
popa
test
or
faddl
cmp
nop
xor
out
adc
repnz
add
loopne
pushf
enter
or
subl
mov
call
data16
push
cmp
imul
ss
pusha
push
push
adc
xor
aaa
ja
cmp
mov
dec
scas
gs
jb
sbb
jne
pop
sbb
mov
and
inc
pop
jecxz
pminub
sub
shlb
mov
test
test
call
inc
scas
jno
jae
mov
dec
mov
xor
jae
iret
imul
cmpb
dec
stc
ret
scas
dec
push
dec
sbb
lock
inc
jmp
pop
cmp
adc
sub
sbb
cmp
mov
and
int
lahf
jmp
mov
in
cmp
xchg
lret
es
dec
add
test
sub
mov
ja
leave
mov
push
mov
lret
lock
or
jo
jmp
mov
les
mov
dec
cmpsb
decb
loopne
mov
adc
cmp
dec
scas
cmp
dec
inc
push
orb
test
fs
push
mov
xor
outsb
fdivrs
test
inc
fsubp
std
sbb
aam
inc
mov
fadds
mov
xchg
test
lahf
cmp
rcll
and
and
push
mov
lret
outsb
xlat
jb
fs
test
adc
or
stc
push
mov
jp
push
movups
add
jo
daa
mov
add
add
jmp
push
aas
test
call
dec
and
sbb
adc
dec
mov
or
sub
adc
add
les
std
icebp
rorb
mov
popa
imul
in
push
lret
rcrb
movsb
add
mov
pop
push
adc
push
push
jbe
nop
mov
fisubrl
xor
add
out
fbstp
aas
adc
sbb
jno
data16
test
mov
xchg
lcall
add
xlat
iret
nop
les
and
add
xchg
leave
push
push
sbb
stos
test
rcrb
movsb
adc
sahf
add
adc
in
in
cli
lods
sbb
adc
xorb
mov
mov
push
mov
mov
sub
test
mov
xchg
out
repz
icebp
dec
dec
popa
lahf
inc
cmp
mov
dec
test
inc
pop
ja
pusha
movb
lods
popf
arpl
hlt
and
rcr
cld
std
pop
push
mov
test
ficompl
adc
xchg
call
or
dec
push
es
jp
inc
and
andl
push
out
xor
test
pop
cmp
shl
sbb
subl
shlb
xchg
inc
push
std
sub
je
je
fpatan
or
or
mov
xchg
or
cmpb
nop
mov
dec
jl
mov
adc
movsb
cmp
mov
and
push
call
dec
insb
push
orb
jg
or
imul
inc
lcall
cmp
xor
inc
dec
xor
lahf
paddusw
loop
xchg
cmp
inc
jp
mov
inc
and
sub
jecxz
lret
sub
jbe
cmp
mov
mov
inc
enter
mov
std
adc
or
add
jl
pusha
mov
ja
nop
push
call
jmp
or
cwtl
xor
mov
adc
lods
gs
insb
mov
pop
xchg
push
or
fldenv
xchg
or
fstpl
inc
test
inc
add
movsl
xchg
out
orl
mov
or
incb
pop
out
and
xchg
adc
lods
cmpsl
pop
hlt
mov
vmovupd
movb
jge
mov
fisttps
mov
add
lock
cmpsl
mov
cmp
and
rolb
mov
cmp
fsubl
jo
jmp
int
push
into
adc
or
shrb
scas
fsubs
xor
andl
push
and
enter
rorb
xchg
push
mov
xchg
mov
dec
inc
hlt
rorb
loopne
call
dec
pop
inc
addr16
or
mov
mov
push
lock
xchg
jmp
sbb
cmp
add
arpl
pop
cld
add
imul
and
int3
mov
lahf
orl
xchg
pop
push
or
push
leave
cld
pop
adcb
enter
mov
and
xchg
or
pop
jno
inc
and
jge
decl
push
scas
lcall
and
mov
clc
testl
sub
xchg
rorl
push
dec
iret
jo
sbb
scas
sub
jle
mov
push
cmp
cmpsl
fstps
or
lret
push
dec
loopne
mov
in
loop
je
or
sbb
mov
xchg
mov
daa
sbb
mov
cs
nop
jae
sbb
sub
stos
sti
fs
pop
imul
and
lea
lahf
test
xchg
and
push
sbb
jmp
insl
roll
jne
fsubl
int3
or
cli
roll
sbb
cltd
mov
pushl
xchg
pushl
push
or
lods
inc
mov
mov
inc
mov
mov
push
imul
push
scas
or
test
push
fdivs
xchg
jle
dec
and
pushf
or
out
adc
mov
adc
clc
leave
pop
xchg
xor
or
push
int3
xchg
in
lock
fcomps
lret
out
call
cwtl
cmp
jnp
add
movl
fcoms
lea
sbbl
jle
popf
jo
jb
dec
adc
and
jae
xchg
daa
mov
shlb
adc
dec
sub
mov
push
mov
or
adc
inc
aas
sub
or
mov
xchg
xchg
insl
enter
rorb
jmp
xchg
add
enter
divb
adc
leave
push
pop
lahf
adc
and
cli
sub
and
pop
adc
pop
fs
aam
jmp
leave
sub
aas
enter
mov
or
lds
and
cltd
adc
or
call
dec
xchg
subb
lret
push
sub
jns
jbe
movsl
test
xor
push
dec
test
xorb
out
arpl
int3
fnstsw
inc
xor
mov
mov
pop
stos
sub
lret
das
xchg
aas
or
jnp
sbb
shrb
mov
jmp
mov
sti
dec
xchg
sti
rolb
lret
adc
hlt
mov
sbb
and
out
push
out
das
cld
fs
or
jg
movsb
or
push
sbb
mov
push
and
mov
movsb
cmc
pop
pushf
stos
dec
rorb
in
or
fistl
pushf
fstpl
dec
mov
lock
lea
dec
lods
ds
fwait
inc
mov
or
imul
pop
xchg
test
es
sub
fldcw
xlat
and
mov
jg
or
jne
es
cwtl
aas
pop
lods
pop
jnp
dec
lcall
xor
stos
mov
pop
add
sbb
sub
xchg
test
xchg
adc
jne
lahf
sub
mov
out
out
push
inc
mov
ds
jnp
mov
mov
inc
mov
and
push
jge
mov
sarl
xchg
stos
jnp
xor
maskmovq
testl
lock
sbb
int3
and
inc
das
adc
cmpl
repz
clc
shrb
inc
add
sar
ret
inc
or
hlt
inc
jmp
xor
add
outsl
stos
enter
mov
sbb
test
ret
adc
mov
pusha
mov
mov
and
addr16
fisttps
xchg
lea
add
movsl
inc
enter
xchg
adc
xchg
and
jg
js
jg
xchg
or
stos
test
je
mov
and
mov
mov
dec
push
ret
xchg
js
adc
int3
adc
cs
cmpb
mov
dec
xlat
scas
fcmovbe
loop
jbe
jmp
sub
push
add
push
insb
or
call
enter
in
xor
or
or
xchg
push
mov
or
je
rcll
mov
mov
and
loopne
jmp
push
std
adc
xor
push
ljmp
mov
dec
dec
cwtl
daa
pop
jmp
xchg
adc
imul
jb
adc
mov
jb
jmp
pop
adc
or
mov
xor
lret
cld
pop
pop
pop
fstl
sub
daa
cli
js
or
cmp
pop
jne
lods
pop
adc
mov
ds
xchg
xchg
push
clc
jle
or
outsl
and
inc
inc
bound
wrmsr
test
pop
in
dec
add
jmp
or
and
fimull
out
add
notb
adc
daa
xchg
sti
adc
subb
leave
push
int3
in
and
std
test
subb
lea
adc
pop
add
xor
jne
aas
push
pushf
adc
xor
or
cmpsl
test
sbb
dec
andb
inc
hlt
and
adc
push
jg
gs
inc
aam
jne
dec
cmp
sbb
je
and
fnstsw
and
adc
add
or
movsl
xor
lods
imul
arpl
aas
outsb
shlb
stos
mov
cmp
ret
enter
adc
mov
test
sbb
xor
or
xor
lods
or
cmp
mov
outsl
push
and
jmp
push
cwtl
movsl
dec
adc
neg
test
loop
push
adc
mov
push
jmp
push
and
inc
mov
je
or
lock
xchg
lds
outsb
and
lock
adc
rcl
ds
jecxz
invd
clc
addb
dec
jecxz
in
aaa
push
adc
loop
add
or
dec
dec
push
xchg
mov
icebp
mov
jnp
ret
dec
add
sub
pop
mov
cmp
or
pop
pop
mov
jg
or
mov
ds
or
add
aad
sbb
je
dec
bound
ds
int
fcmove
ret
xchg
jbe
adc
push
gs
rcl
push
les
ror
enter
dec
les
dec
aaa
idivb
loop
xor
xlat
lods
and
popf
nop
push
scas
jmp
push
xor
push
sarl
gs
sub
jno
and
rcr
sub
push
test
adcl
loop
adc
add
sbb
call
sub
dec
xor
inc
xchg
pop
xchg
aaa
push
leave
insb
pop
pop
add
push
scas
adc
add
fimull
mov
xor
cmp
mov
xchg
dec
and
es
or
dec
nop
je
mov
lahf
inc
dec
add
ret
in
in
mov
std
loope
add
xchg
and
add
pop
add
mov
gs
or
pop
xor
sub
xor
insb
repnz
xor
push
or
movsb
push
xchg
stos
pop
imull
sti
bound
push
fs
jno
mov
loopne
sbb
stos
idivl
xchg
loopne
fidivrl
push
jl
gs
sub
mov
xchg
shll
dec
lods
test
add
xor
cmp
dec
adc
mov
sub
push
xor
dec
loopne
mov
enter
ljmp
jmp
incl
je
mov
mov
addl
test
dec
fdivrs
cltd
or
push
lock
adc
roll
add
jmp
outsb
fists
mov
push
push
add
jae
inc
cmp
icebp
lods
pop
cmp
lret
sub
cmp
iret
jp
jns
fiadds
cmp
enter
cmp
jmp
jne
out
adc
mov
jecxz
pop
dec
add
outsb
je
push
lea
sub
clc
inc
inc
int3
adc
stos
jbe
js
pop
fdiv
and
or
xchg
mov
jns
push
jmp
popf
cld
push
cmp
jo
xor
fisttpl
fsubs
sbb
inc
lds
int3
adc
or
addb
add
add
add
add
and
add
or
fisttpll
inc
out
inc
loope
xor
andb
xor
andb
sbb
lret
add
movl
add
add
ret
or
js
cmp
js
out
pusha
sub
jmp
adcl
loop
or
jbe
repnz
adc
jg
push
pop
pop
adc
xchg
push
cmp
ljmp
aam
fs
mov
movsl
ljmp
loop
push
fsubrl
rorb
ljmpw
mov
jl
pop
rcrb
pop
test
mov
das
cwtl
cld
inc
dec
jl
cmp
ljmp
mov
xchg
movsb
loop
add
mov
in
jmp
or
jle
or
subb
imul
cmp
clc
add
push
shr
rcrb
in
adc
xchg
clc
sarb
movsl
push
sbb
stos
call
jle
or
push
jge
adc
hlt
ds
call
movsb
or
fsubl
ret
cli
sbb
enter
mov
or
dec
sub
xor
insb
push
mov
dec
adc
mov
lods
lret
mov
call
jbe
mov
mov
mov
mov
and
rcll
cmp
adc
ret
cmp
jae
pop
mov
and
int
push
mov
sbb
or
divl
fucomip
ret
adc
test
jo
jecxz
fs
in
loope
jg
inc
xchg
jge
pushf
clc
in
mov
xor
fwait
cmp
xchg
cmpsb
sahf
mov
cmp
dec
pushf
sbb
std
les
pop
jge
sub
adc
mov
mov
xor
cltd
jmp
mov
xchg
jno
mov
mov
or
dec
test
push
ret
mov
mov
stos
push
lret
ror
inc
pop
inc
sub
jbe
aaa
rcrl
addr16
and
or
mov
scas
xchg
sbb
stos
xchg
push
pop
dec
adc
ss
xor
inc
sar
push
movzbl
pop
cs
push
or
jmp
loop
inc
inc
iret
or
sub
or
adc
dec
sub
pop
jne
in
add
pop
pop
enter
negb
sub
neg
sub
rcl
dec
cmc
pop
enter
call
pop
cmp
sbb
lret
mov
lods
out
push
int3
pop
aas
mov
cmp
xchg
shrl
push
loopne
sub
mov
inc
aad
adc
xchg
lods
addb
pop
cmp
or
leave
or
push
inc
sub
xchg
icebp
dec
adc
enter
dec
cld
loopne
jne
or
cmp
inc
scas
jns
fwait
and
dec
je
jge
add
xchg
or
and
and
sbb
add
jae
and
xor
inc
in
dec
or
xor
jmp
xor
and
ja
jmp
add
std
divps
rcrb
dec
add
mov
cmpsb
push
adc
push
stos
std
or
outsl
lock
pop
cmp
xor
mov
clc
push
adcb
dec
add
sub
jg
adc
cmp
lcall
sbb
push
call
adc
ror
push
fisubl
jns
adc
push
fldl
frndint
sti
mov
mov
and
add
dec
mov
mov
addl
inc
pop
loope
in
and
int3
aam
xor
loope
or
fnstenv
push
push
fmull
std
insb
mov
sbb
aad
addr16
loope
pop
xchg
loopne
or
add
clc
pop
inc
mov
pop
mov
ret
cwtl
mov
mov
fsubl
push
push
outsb
fstps
and
jmp
and
adc
mov
mov
jle
vmovaps
sub
mov
imul
adc
or
je
movsl
push
add
mov
enter
sbb
and
inc
and
mov
mov
cmp
mov
bound
push
sbb
dec
dec
add
imul
jne
ret
adc
adc
and
jp
and
push
or
nop
ljmp
call
and
jecxz
push
subb
mov
cmc
push
mov
inc
out
out
xlat
and
movsl
icebp
mov
adc
or
add
repz
lahf
das
int
add
xchg
adc
pushf
leave
loope
mov
jbe
mov
adc
push
scas
loopne
das
in
inc
int
rcrl
mov
mov
inc
cltd
dec
adc
add
movsb
sub
xchg
mov
test
das
testl
dec
and
fstps
leave
inc
ficoml
dec
or
imul
inc
adc
std
stc
and
inc
addr16
inc
call
xor
mov
jb
cmove
stos
sahf
popa
aas
movsl
clc
stc
sub
jno
push
jge
push
clc
clc
sbb
andps
movsb
dec
adc
xchg
mov
and
ljmp
sbb
or
mov
leave
add
dec
test
or
add
data16
lret
xor
test
cld
ss
inc
pop
mov
les
push
pop
jl
pop
mov
xor
mov
push
loope
jecxz
push
and
inc
hlt
fs
cmp
test
pop
and
add
push
into
sub
and
mov
imul
mov
adc
jmp
or
sbb
add
sbb
xor
int
or
sbb
rclb
adc
shll
jb
imul
bound
shr
add
jb
or
in
mov
aas
cmpsb
mov
jns
stos
cltd
and
sub
rol
add
es
mov
out
push
ljmp
inc
popf
add
mov
dec
cmp
mov
push
inc
sti
adc
and
out
icebp
push
sub
adcl
push
and
or
scas
pop
mov
xor
or
xor
and
or
aas
out
enter
bound
out
xchg
inc
inc
andl
cli
mov
xchg
or
lock
dec
inc
clc
ds
cli
shll
and
adc
or
pop
jmp
or
out
sub
aaa
popa
call
test
flds
nop
add
je
shll
xor
enter
adc
loopne
ret
sub
or
and
and
adc
jg
and
enter
inc
fldl
dec
adc
filds
jne
adc
movsl
or
mov
fsubr
or
add
rcrl
daa
lret
push
loopne
jmp
mov
in
and
rorb
jmp
dec
inc
mov
enter
int3
lods
adcl
frstor
ds
test
mov
orb
scas
jno
pop
mov
jmp
jno
xchg
rcl
sub
jle
xchg
fwait
pop
and
xchg
rorl
jmp
nop
dec
scas
je
subl
fimull
aad
imul
add
ja
scas
popf
addr16
lds
lock
int3
pop
push
andl
nop
cmp
sbb
or
push
jmp
adc
pop
add
icebp
int3
xor
cld
push
sub
je
pop
and
adc
leave
sbb
push
push
daa
jmp
hlt
in
push
adc
add
adc
mov
shr
xor
sub
dec
or
or
mov
push
fs
in
mov
lods
loopne
xchg
push
dec
pop
or
mov
aas
jmp
enter
std
dec
adc
add
jbe
jg
xchg
xchg
dec
dec
xlat
push
and
mov
movsl
daa
adc
adc
rcl
out
les
loop
cmp
dec
out
cmp
pop
mov
adc
mov
sbb
xchg
xchg
or
js
xchg
xchg
push
cmpsb
inc
and
and
or
fs
jecxz
jne
inc
dec
add
push
cmpsb
xor
inc
punpckldq
and
add
roll
test
push
push
push
jle
and
in
syscall
jmp
call
dec
mov
fstl
mov
rcrb
nop
rcrl
int
pop
xor
dec
dec
push
add
lds
in
nop
xor
jbe
js
and
mov
test
push
or
jbe
daa
or
inc
xchg
sub
add
push
sti
ljmp
shrl
loopne
lods
xchg
incb
out
bound
nop
stos
dec
orb
xchg
inc
mov
fnsave
push
es
jg
fisttpll
pop
pop
imul
das
xor
add
lea
push
mov
mov
mov
add
push
call
cmpsb
ret
repnz
shl
push
xor
leave
jge
push
adc
jne
out
mov
repz
adc
mov
adc
lods
and
push
cmp
mov
and
bound
enter
pop
or
dec
je
add
mov
xchg
and
sbb
push
add
cli
aad
sub
mov
shlb
sbb
test
xor
in
dec
xor
dec
ffree
jne
mov
aam
fdivs
xor
loop
rcrl
ljmp
add
mov
jb
xchg
in
out
push
pop
std
push
lahf
std
xchg
ret
lods
jns
mov
xor
xchg
ficoml
pop
dec
or
ja
movsl
mov
jle
push
mov
push
push
fstl
bound
scas
mov
aas
fnclex
movsl
and
pop
pusha
inc
cmc
and
dec
inc
cmc
out
idivl
lret
scas
xchg
ja
clc
mov
cmpsb
jl
or
and
aam
sub
mov
adc
inc
jg
pop
push
inc
imul
pop
push
test
inc
inc
add
or
jb
add
fsubs
inc
and
push
fldpi
inc
and
loop
repz
int3
xor
pop
insl
inc
or
sbb
ja
sub
cli
inc
popa
inc
inc
fwait
pop
adc
movd
push
inc
sbb
jne
fwait
dec
cmp
insl
in
lock
jbe
push
je
xchg
xor
adc
or
pusha
test
push
push
sub
cmp
sub
mov
add
xchg
add
mov
subb
mov
jb
gs
xlat
xchg
popf
loop
add
sub
mov
rolb
sbb
jnp
jmp
cltd
mov
cmpsb
shll
cld
repnz
adc
push
imul
dec
lahf
repnz
xchg
out
lcall
pushl
aam
xchg
jl
int
cmp
ret
mov
jmp
and
lods
daa
push
xchg
or
in
mov
jne
gs
inc
jmp
sbb
jbe
js
cmp
stc
xor
pop
adc
in
dec
push
xchg
push
adc
mov
imul
jmp
popf
stc
clc
dec
jno
push
fsubrs
inc
jp
sti
xchg
jb
rol
dec
and
call
lods
je
push
sbb
adc
and
dec
das
push
nop
dec
subb
int
cs
ret
xchg
jl
and
jmp
dec
sub
jg
sub
add
bound
fstl
lret
mov
sub
mov
repnz
fsubrs
inc
push
xchg
loopne
sarl
addr16
mov
or
push
cltd
cmp
pop
movsl
loop
xor
jne
movsl
xor
jae
bound
stos
dec
xor
andl
xchg
stos
iret
xor
lds
mov
sub
pop
add
push
sbb
pop
sub
lret
data16
jge
inc
cmpsl
fisttps
pusha
sahf
or
fldl
fucomi
pop
shrl
and
and
sbb
stc
movsb
sahf
sbb
add
js
mov
std
in
aaa
xor
jl
or
xor
inc
and
xchg
jo
mov
or
addr16
adc
push
sahf
xchg
cmp
rcl
add
mov
ss
divl
loope
cmp
leave
sub
test
and
or
mov
and
push
cwtl
outsl
jb
mov
icebp
pop
cmp
int
mov
jnp
cld
dec
adc
inc
lcall
push
icebp
or
cmp
movsb
mov
sub
pop
or
push
rcr
push
dec
popa
sub
add
xchg
mov
divb
leave
je
push
ja
addr16
jns
jge
mov
dec
icebp
or
jmp
es
inc
sbb
fdivrs
cwtl
mov
jmp
pop
adc
mov
shrl
or
push
push
xor
lea
mov
cmp
mov
dec
mov
test
sub
enter
int3
cwtl
repnz
movsb
mov
push
push
divb
mov
mov
add
setl
mov
pop
adc
leave
in
int3
cld
jl
lahf
lret
testb
or
repnz
cld
scas
adcb
leave
rcl
sbb
movb
cmpsl
std
scas
jae
sub
lods
sbb
sub
cmpsl
fiadds
test
arpl
adcl
xor
inc
data16
sbb
and
test
jmp
sbb
aam
pop
sti
fs
pusha
out
adc
fsubrp
xchg
add
inc
sub
mov
pop
cmpsl
cmp
sbb
xchg
sbb
pop
or
daa
inc
or
loop,pn
test
jg
sub
fisubl
adc
mov
stos
lods
jle
lea
or
jg
add
loopne
dec
stos
cltd
ffree
popf
add
pop
sbb
inc
rcrl
je
lret
pop
data16
bound
leave
xlat
dec
adc
jge
jne
sub
mov
mov
inc
daa
push
sbb
sub
mov
push
in
mov
das
jl
std
das
cld
xchg
out
push
addl
fmuls
adc
cmp
mov
cmp
sbb
and
cmpsl
repnz
sbb
mov
or
sub
insb
pop
pop
push
xor
add
sbb
cmp
push
adc
inc
gs
adc
add
inc
sub
frstor
pop
xor
or
mov
push
adcb
jns
mov
xchg
adc
or
jmp
pop
outsb
outsb
lret
rol
add
das
xor
cmpl
xlat
push
inc
dec
in
xlat
icebp
xchg
xchg
and
call
popa
lret
xlat
or
xlat
xor
sub
adc
outsl
xchg
pop
inc
hlt
paddq
lea
push
add
in
jg
filds
divl
cmp
and
pop
pop
dec
popa
in
and
cmp
adc
pusha
insl
in
cmp
xchg
xchg
mov
pusha
sbb
push
insl
test
scas
push
inc
dec
jbe
mov
dec
lock
mov
or
add
add
cmp
xchg
fsub
jno
push
push
or
addb
sub
gs
mov
leave
inc
sbb
das
imul
es
mov
test
and
inc
jp
in
mov
xchg
jne
mov
and
sub
test
mov
cmc
dec
mov
xchg
and
fidivs
scas
xchg
lds
rcrl
or
mov
sbb
mov
imul
push
adc
or
stc
iret
cmp
aaa
fiadds
ljmp
movl
scas
call
dec
in
adc
or
iret
xchg
test
cmp
mov
and
sarb
and
add
test
test
mov
add
jne
jbe
xchg
mov
push
add
je
and
test
daa
or
pushw
mov
imul
jnp
lods
arpl
lods
out
jg
xchg
in
xor
adc
std
sbb
add
inc
adc
in
das
mov
lock
lea
into
inc
sahf
adc
jnp
mov
jle
xchg
cltd
xor
inc
in
scas
cmpsb
outsb
pop
and
xchg
pop
lahf
stos
jne
cmpsb
xchg
or
test
out
add
popf
cmc
test
sarl
push
ret
fmul
std
sub
call
ret
push
dec
repnz
enter
imul
and
jne
fdivrl
push
or
in
push
xchg
hlt
and
xchg
xchg
jo
roll
sub
adc
sbb
mov
and
add
cld
insb
cs
cmp
mov
pop
out
add
inc
xor
sub
add
dec
in
addr16
cmpsl
add
insl
pushl
add
sub
xchg
test
scas
lock
push
sbb
dec
or
xor
mov
out
push
and
and
or
pop
das
mov
nop
adc
stc
and
cwtl
aam
dec
nop
pop
or
addr16
fsubr
out
mov
xor
ss
sub
or
scas
repz
or
fcmove
mov
jg
adc
cmp
movsb
mov
aad
and
mov
xchg
aam
popa
and
cmc
fs
push
dec
lock
daa
stos
xor
arpl
ss
scas
test
cld
cld
call
adc
or
mov
xor
sub
data16
call
xchg
int
xor
add
out
nop
lea
pop
popf
inc
mov
ds
test
pusha
nop
sbb
test
jmp
push
es
gs
inc
test
and
dec
fs
mov
in
loop
jp
fstl
or
inc
test
in
mov
mov
clc
ja
add
call
lcall
pop
adc
fsubl
pop
in
add
mov
pop
mov
sub
add
icebp
inc
add
shlb
mov
push
nop
or
pop
xchg
scas
adc
cld
adc
push
xchg
popa
dec
xor
movb
sbb
mov
push
test
lahf
das
fidivrl
aad
test
sbb
or
or
mov
ds
xchg
in
jp
adc
sub
inc
dec
xor
xor
push
push
lcall
ss
int3
and
test
mov
loop
test
test
popa
int3
pop
adc
jae
push
jmp
pusha
cmc
adc
jecxz
xor
arpl
test
das
add
in
sub
jmp
pop
sub
fadds
mov
add
or
data16
push
cmp
pop
mov
mov
and
xor
cmp
xchg
dec
movsb
add
pop
sbb
lret
aad
mov
xor
and
mov
data16
or
daa
scas
xor
pop
gs
or
test
adc
jb
and
mov
push
push
mov
push
das
pushl
dec
pop
insl
add
fisubrl
adc
je
rorb
sub
orl
clc
fstl
pop
pop
sbb
ret
xor
pop
aad
rorb
lock
inc
pusha
add
push
sbb
push
adc
mov
cmp
pushf
fstpl
and
call
invd
push
pop
mov
add
sub
loopne
mov
adcl
es
cmpsl
push
xorb
lods
mov
int3
cmp
push
push
fadds
add
inc
add
loopne
lea
cld
push
lock
adc
push
or
jg
notb
mov
lret
mov
stos
popa
mov
jb
imul
fmuls
mov
adc
xchg
inc
push
mov
push
fcoml
push
int3
cmp
cltd
add
pushf
mov
test
pop
test
mov
inc
dec
sub
inc
das
xchg
in
push
push
push
lea
and
and
mov
sub
orl
push
and
sbb
push
mov
jne
lods
xchg
mov
and
push
popa
mov
sub
aaa
dec
stos
test
xchg
pop
in
jo
add
pop
test
push
push
je
add
or
shlb
addb
mov
cmp
add
shlb
ret
roll
sbb
inc
insl
sbb
adc
mov
push
cli
imul
or
mov
mov
das
mov
push
xchg
sbb
test
test
ja
fistps
mov
lds
inc
dec
add
xchg
or
sub
jmp
cmp
dec
in
or
mov
mov
adc
mov
jmp
adc
xchg
jle
loop
ja
daa
leave
jge
lcall
cmp
xchg
jae
and
cli
mov
sbb
fldcw
pop
pop
lock
in
adc
xchg
mov
adc
adc
in
incb
sub
repnz
test
inc
push
js
push
xchg
lods
xor
add
and
cmpsb
scas
iret
rcll
lock
push
xlat
push
pop
or
shll
mov
imul
push
push
jnp
es
ret
shr
fdivrs
sub
ret
scas
jecxz
nop
aaa
xor
gs
adc
enter
pushf
mov
mov
cmp
mov
rcl
mov
or
mov
stos
and
subb
mov
mov
fistpll
cmpsl
dec
push
mov
and
add
mov
insb
mov
pop
mov
push
sarb
popa
pop
pushl
adc
add
pusha
lahf
mov
aas
or
xchg
enter
aaa
je
or
and
xor
cmpsb
aaa
sub
mov
adc
and
imul
jb
loope
out
cmp
or
cmp
addb
jge
es
lret
test
adc
mov
mov
icebp
in
dec
cmc
xor
push
jge
xchg
rorb
cmp
dec
scas
xchg
flds
pusha
xchg
cwtl
test
and
movsb
addr16
fadds
movl
sti
das
xchg
cs
push
pusha
adc
mov
imul
mov
jmp
push
jo
mov
fisttpll
inc
and
mov
jnp
arpl
xlat
or
inc
mov
fidivrs
push
sub
cmc
fwait
push
test
stos
and
test
mov
cmc
pop
js
or
dec
adc
cld
push
sub
test
call
sbb
xor
or
cmp
sub
sub
dec
cmp
push
repz
je
es
inc
or
mov
dec
add
repnz
enterw
test
push
sub
adc
xor
call
xor
adc
jb
adc
fisubrs
sbb
add
cwtl
dec
mov
sub
and
pop
dec
inc
mov
push
nop
ljmp
xchg
or
xchg
push
pop
push
lret
cmp
movsb
jge
loop
sub
in
popf
lret
in
mov
dec
lret
mov
jmp
and
push
xor
das
add
add
jne,pn
int3
std
mov
mov
sub
mov
insl
stc
rcrb
scas
mov
mov
push
arpl
pop
in
lock
icebp
pushf
adc
cltd
mov
test
aas
inc
xchg
pop
sti
loop
or
je
xlat
inc
cmp
repz
xor
sub
lea
pop
je
aas
fcmovu
movsl
xor
mov
cmp
push
mov
or
and
loope
roll
gs
pop
cltd
push
add
sbb
cmp
dec
pop
or
mov
xlat
hlt
ljmp
mov
packuswb
push
and
sbb
add
ror
scas
sbb
mov
test
push
stos
push
fs
mov
and
xor
popf
push
es
adc
es
or
daa
shll
sbb
jp
fucomip
andb
pop
mov
adc
mov
iret
imul
cmp
push
loope
std
sbb
pop
mov
nop
pop
adc
mov
adc
xor
or
inc
arpl
or
scas
mov
ja
cmp
sub
clc
cli
fdivrp
and
xor
inc
add
jne
mov
mov
shll
popf
stos
mov
mov
xor
bound
je
xor
jp
push
ficompl
test
push
jle
or
jne
pop
call
xlat
xchg
and
xor
pop
scas
adc
lret
fs
sbb
and
movsb
mov
test
mov
jne
popa
in
jmp
mov
adc
push
loop
dec
xor
push
test
inc
test
xchg
cld
or
xorb
stos
mov
mov
repnz
jnp
in
push
in
scas
jmp
lock
andb
je
sbb
mov
andb
jo
mov
ja
movsl
out
adc
adc
xchg
and
pop
arpl
pop
sbb
and
clc
data16
in
jle
inc
hlt
mov
popf
inc
sti
daa
lret
mov
mov
and
outsl
mov
push
and
and
dec
push
jge
incl
jg
rorl
or
mov
or
xor
jl
sti
push
cmp
std
outsl
jmp
xor
inc
push
or
mov
push
push
push
adc
sbb
sub
pop
lea
lods
icebp
xchg
inc
or
lret
stc
mov
mov
and
adc
jae
jns
lea
cmpsb
rclb
adc
iret
push
sub
mov
xchg
or
test
jmp
push
dec
aaa
ficomps
aam
rcll
pop
mov
pop
je
or
add
lret
sarb
push
push
jge
repz
mov
mov
push
jmp
xor
cmp
pop
adc
adc
mov
test
mov
pop
jne
gs
in
or
or
call
xor
or
jmp
and
push
cmpsl
sti
std
mov
sahf
jecxz
test
and
call
test
fwait
stos
dec
xchg
xchg
sub
push
dec
mov
adc
xor
ds
push
push
or
cmpsb
or
das
sub
rcll
sbb
add
out
stos
pop
das
jle
out
push
call
adc
jns
jne
and
and
stc
andl
push
pop
push
and
jne
jl
xchg
xchg
jl
out
mov
enter
push
cld
push
dec
jg
xchg
xchg
push
loopne
xchg
or
add
xchg
xlat
leave
rcrl
dec
add
call
jecxz
gs
rorl
fsubl
mov
jp
xchg
and
xchg
pop
and
push
and
insb
pusha
add
fsub
fisubrs
mov
push
ss
outsl
stc
xor
je
mov
pop
fcoms
adc
fnstsw
insb
in
fcoml
call
jmp
sbb
fsubs
fcompl
adc
or
or
loopne
call
sub
push
dec
decb
jb
orl
dec
dec
cs
fistpl
and
in
jnp
pop
movsb
and
shlb
cmp
sub
sub
dec
xchg
inc
aam
stc
dec
xor
shll
test
xchg
sbb
mov
test
and
ja
loopne
adc
jne
mov
cli
lret
dec
push
fucomi
inc
jne
adc
jge
sbb
addb
jne
xchg
dec
insb
pop
dec
dec
push
xor
scas
test
int3
xor
xlat
dec
sarb
xor
loope
adc
inc
push
stos
leave
push
lcall
jg
mov
cs
xchg
bnd
call
dec
test
mov
cmpb
pop
bound
test
std
push
jne
mov
inc
add
les
mov
lock
mov
add
pop
addl
mov
nop
test
or
mov
jno
rcll
add
test
pop
mov
adc
inc
push
inc
lea
inc
andb
nop
xacquire
adc
or
mov
push
xchg
ret
xor
loop
or
mov
xor
xor
call
dec
pop
jecxz
leave
or
mov
adc
sub
je
mov
or
leave
popf
imul
in
scas
sub
or
jmp
stos
cmc
ds
je
jge
xor
mov
fdiv
add
nop
cmp
mov
mov
jne
lcall
mov
adc
in
adc
dec
lods
cmp
jge
push
adc
push
pop
jg
clc
xchg
pop
pop
pop
or
and
jno
sbb
les
jg
out
sub
popf
ret
ret
sub
stos
ja
clc
push
shl
les
cmp
dec
imul
mov
add
lret
push
clc
lea
pop
dec
fldenv
pop
int3
out
xchg
iret
push
sub
incl
jns
lods
mov
imul
bound
jmp
out
adcb
dec
xlat
xchg
xor
dec
xlat
xorl
mov
push
adc
pop
bound
add
cmpsb
xlat
xchg
or
setne
and
les
push
pop
loopne
push
push
repnz
or
int3
stos
rorb
lretw
enter
lea
das
and
scas
shrl
enter
aad
mov
or
fisttpll
loope
mov
cmp
daa
adc
repz
test
and
lea
push
mov
hlt
or
in
sub
dec
mov
inc
xchg
add
jp
mov
mov
and
shll
lods
mov
sbb
icebp
xor
aas
out
jl
sub
sti
xchg
jmp
aam
cmc
fisubrl
int
cli
cmp
and
mov
stc
mov
jp
pop
jo
mov
imull
mov
sbb
fldlg2
loop
shr
and
std
sbb
mov
sbb
ret
les
das
dec
sbb
mov
jb
out
test
cmovne
add
int
ficomps
cmp
jmp
dec
adc
sub
jp
dec
test
das
dec
std
sub
shrl
stos
cs
sub
aam
popa
add
or
sub
mov
popa
adc
lock
fstl
fsubrl
and
or
jmp
mov
repnz
movsl
fwait
pop
decl
ds
xor
dec
pop
dec
fcomps
cmp
push
fcomi
das
or
or
fdivrs
mov
jmp
inc
jp
lds
lock
test
test
icebp
dec
lds
rorl
and
add
outsl
clc
outsb
out
sbb
das
push
data16
jno
xchg
shrl
cmp
sti
nop
inc
jo
pop
push
repnz
int3
mov
and
cmpsl
and
sbb
and
dec
addr16
push
or
mov
cmp
xchg
mov
dec
daa
movsb
cltd
dec
in
mov
repnz
movl
xchg
cmc
cli
push
xor
call
pop
adc
dec
sti
movsl
cmp
dec
cld
lock
mov
xlat
mov
pop
ret
clc
shl
out
int
mov
xor
mov
ss
xchg
into
push
mov
lods
inc
mov
adc
sub
push
jmp
ret
and
sub
std
inc
adc
add
sbb
aam
sub
in
rorl
dec
xchg
mov
dec
mov
and
mov
push
fs
js
or
jne
adc
sbb
and
dec
cli
inc
out
call
push
push
sub
call
jge
mov
inc
dec
dec
xchg
jno
inc
dec
cmpsl
pop
out
mov
es
add
mov
lahf
insl
jns
movsl
cltd
lret
iret
arpl
add
rep
cltd
fsubrs
sub
clc
mov
inc
jg
xchg
nop
sub
in
ret
jg
mov
jmp
scas
lods
pop
mov
nop
hlt
add
sti
pushl
lret
and
cli
andb
or
cmpsb
xor
adc
push
aas
ss
enter
push
adc
cmp
sbb
mov
stos
fs
stc
and
adc
dec
add
push
daa
ficoms
mov
xchg
adcl
lods
dec
cmp
aad
xor
jle
loop
and
rcll
addr16
call
dec
pop
jns
addb
xchg
testb
jmp
inc
adc
dec
mov
cvtdq2ps
sub
sub
negl
cli
xchg
mov
pop
fs
fsubr
mov
cmp
jbe
sub
pop
xchg
adcb
inc
add
lret
pop
jmp
inc
out
shr
stc
jmp
pop
sbb
cmc
xor
mov
sbb
dec
adc
mov
sub
xchg
push
sbb
and
push
xor
pop
test
push
fisttpl
adc
jecxz
xchg
stc
lock
adc
in
imul
and
fbstp
dec
ror
sbb
pop
fldcw
ret
xchg
mov
push
pop
pop
aam
push
mov
and
adc
adcb
push
or
dec
fdivr
cwtl
gs
rcrb
nop
sbb
test
jbe
scas
and
push
pop
pop
sbb
xor
mov
mov
xchg
cwtl
push
lock
jno
mov
jg
cld
dec
pop
pop
dec
lods
xor
int3
outsl
cmp
and
icebp
mov
aad
arpl
cmc
dec
jmp
adc
sbb
adcl
adc
arpl
fdivrp
dec
lods
push
imul
inc
addb
xchg
cmpsl
hlt
inc
leave
jo
idivl
lods
adcb
push
push
movsl
leave
mov
shrb
push
push
je
sbb
insl
outsb
dec
pop
cmpsb
loop
add
xchg
inc
scas
jl
ret
mov
mov
pop
clc
push
and
adc
lock
je
or
rolb
orl
or
clc
or
loope
nop
shlb
push
es
adc
mov
cmpsb
cmp
ds
ja
sub
repnz
mov
cmp
orl
cltd
stc
or
pop
pop
mov
xorl
pop
mov
andnps
and
sti
inc
or
mov
pop
adc
mov
add
or
adc
adc
sub
or
or
xorb
test
stc
adc
std
xchg
or
xchg
les
mov
jno
mov
jne
and
repnz
or
shrd
inc
and
outsl
push
pop
nop
dec
je
sbb
outsl
aaa
lock
test
dec
cmc
and
push
xchg
notb
jnp
insb
mov
sti
lea
add
incl
or
iret
stos
roll
adc
and
cmp
jb
hlt
leave
pushf
inc
xchg
call
leave
decl
mov
nop
dec
fs
dec
fisttpll
stc
and
pop
lret
xor
dec
sub
movsb
adc
test
xor
adc
push
xor
inc
scas
cmp
inc
sbb
push
enter
rorl
cmpsl
sub
and
cmp
daa
das
lock
ds
or
sub
out
scas
adc
into
lock
les
out
mov
dec
dec
sahf
pusha
clc
adc
ja
push
or
inc
data16
lret
ret
inc
stos
hlt
dec
daa
adc
sub
rorb
xchg
addr16
and
cmp
xor
pop
jge
mov
test
xchg
inc
sti
add
jl
inc
xor
push
inc
call
sub
loope
pop
pop
push
mov
sahf
mov
inc
sbb
add
in
fmul
fisttps
or
es
and
fs
scas
lods
daa
xchg
inc
sahf
push
jno
jne
push
sbb
stc
sub
sbb
mov
pop
stos
cmp
adc
fistps
psrlq
cli
sub
popf
mov
repz
movsl
mov
add
dec
cmp
inc
sub
cmp
inc
lock
pop
dec
and
loope
lods
je,pt
add
add
add
add
jge
dec
lahf
daa
add
add
or
adc
into
int
aam
dec
inc
ret
addb
or
lock
dec
fstl
push
hlt
cmp
pop
cmc
stc
lcall
test
jns
jb
out
xor
push
je
enter
push
mov
fs
push
clc
push
cmp
push
xor
fisubrl
adc
inc
cltd
push
xor
or
xchg
roll
rcrb
cmp
nop
jae
in
adc
or
push
ret
inc
fistpll
comiss
ja
adc
test
stos
int
cmp
sbb
xorl
lods
std
out
dec
lcall
push
call
shrb
sbb
icebp
repz
cmp
lahf
dec
xchg
lcall
inc
es
hlt
dec
scas
sub
popa
je
adc
and
adc
cld
lods
gs
lret
or
loope
icebp
pop
xchg
sub
push
add
data16
mov
decl
lahf
aad
cmpsl
or
mov
addr16
outsl
in
xchg
mov
mov
jecxz
dec
lods
pop
test
xchg
cmpsl
sti
pop
icebp
cld
or
xor
sub
xor
pushf
inc
adc
sbb
stos
push
incb
dec
pop
inc
aam
sub
pop
pusha
dec
mov
xchg
repnz
hlt
stos
call
jae
inc
pop
dec
mov
jo
jns
mov
imul
sub
pop
push
and
inc
sar
sbb
jle
cmc
push
pop
mov
dec
jbe
jbe
jge
adc
push
cwtl
mov
xchg
inc
pop
and
rclb
lods
sub
test
inc
gs
dec
out
lahf
mov
adc
sbb
and
in
lock
test
lcall
adc
add
and
inc
loope
push
inc
loope
lds
adc
sub
jae
cmp
sbb
add
add
push
cmp
sub
mov
xlat
mov
mov
or
pop
lods
push
sub
in
or
orb
push
and
daa
lret
std
cld
mov
int3
stos
repnz
pop
dec
add
sub
pop
dec
sbb
xor
mov
jne
dec
or
aad
mov
mov
in
nop
out
sahf
lds
jmp
ror
test
sub
popa
ds
imul
ficompl
mov
pushf
cmpsl
gs
shlb
adc
pop
xchg
jnp
sub
jo
and
test
fsubrl
das
push
adc
xor
mov
addr16
rcll
jp
mov
mov
sbb
scas
dec
out
and
dec
cmp
adc
outsb
mov
in
call
arpl
fs
clc
mov
adc
nop
and
sbb
in
adc
mov
adc
adc
call
das
in
mov
ret
mov
jne
enter
cmpsl
lds
jne
mov
lcall
hlt
stos
push
mov
loopne
in
dec
sbb
cli
lahf
daa
hlt
jns
and
and
imul
sbb
mov
test
fisubs
aam
mov
xchg
adc
loop
pop
jnp
push
idiv
mov
mov
movsb
in
cmp
xchg
cwtl
xchg
lods
insb
es
xchg
nop
mov
sub
mov
sub
enter
lock
repnz
inc
sbb
mov
mov
inc
mov
cli
mov
out
test
xchg
or
dec
adc
xlat
outsb
jl
popf
jbe
loop
inc
or
jmp
and
add
in
in
xlat
ljmp
mov
or
mov
pop
adc
mov
xor
xor
sub
cld
mov
inc
inc
mov
jle
stc
and
mov
fsts
dec
push
dec
or
add
jmp
pop
int3
pop
sbb
adc
inc
enter
adc
movsb
scas
dec
aam
enter
dec
cmpl
mov
push
adc
jmp
scas
mov
cmp
test
push
daa
xchg
jmp
push
call
pop
in
mov
jmp
pop
cli
and
cmp
iret
or
ss
xchg
adc
or
xor
dec
xor
daa
aad
add
cltd
test
negl
adc
add
and
iret
int3
mov
stc
jg
dec
or
bound
je
inc
sbb
inc
das
and
add
add
push
inc
pop
push
or
sub
inc
adc
mov
sub
add
in
or
jno
es
fdivs
xchg
out
adc
es
mov
xor
in
out
xchg
leave
cwtl
add
not
xor
and
jge
mov
jmp
sbb
fadds
xor
int3
cmp
imul
or
int
add
push
sti
and
in
bound
std
test
mov
jb
test
loop
adc
stos
cmpsb
filds
add
inc
sbb
or
add
sbb
fsubrs
out
out
fs
sbb
mov
jl
pop
and
adc
sbbb
stc
repnz
sahf
xchg
add
dec
pop
mov
inc
sbb
inc
and
add
mov
lahf
loope
inc
and
mov
mov
test
repnz
hlt
bound
enter
in
xchg
ljmp
ja
loope
mov
jg
lds
add
les
shrl
and
xor
call
sti
scas
dec
lret
adcb
adc
inc
cmp
xchg
out
inc
sub
lea
push
push
das
fcompl
fmull
xchg
jp
idiv
pop
sbb
push
popl
stos
negb
and
ficoms
mov
and
xchg
adc
mov
sbb
jns
jmp
pop
stc
dec
ljmp
lea
dec
cmp
cmpsl
jne
sbb
mov
cmpsl
sbb
imul
movsbl
and
or
and
inc
loop
pop
pop
or
add
adc
scas
repnz
push
mov
mov
adc
push
fcoml
popl
and
imul
xor
aas
sub
les
xchg
pusha
sub
push
adc
jg
mov
jle
call
scas
mov
and
or
mov
mov
jl
lea
rclb
or
xor
mov
xchg
int3
or
xchg
xchg
mov
add
and
fbstp
lea
decl
fsub
je
daa
or
add
in
cmp
dec
sub
ret
adc
aam
mov
lcall
in
sub
mov
sub
imul
adc
sbb
fs
xchg
pop
pop
push
insl
stos
pop
jle
mov
or
dec
sub
xor
movsl
push
push
repnz
xchg
ds
xchg
scas
aaa
xor
or
lods
dec
lret
popf
gs
sub
and
cmp
xchg
pop
ret
xchg
jmp
jnp
push
push
mov
daa
ss
add
cmp
jae
cmp
and
shl
ret
sub
jp
jp
fistl
mov
or
shlb
or
xchg
mov
out
decb
sbb
aaa
out
jle
popf
pop
mov
dec
xchg
bound
addr16
xor
mov
dec
or
and
call
xor
inc
cmpsl
aas
dec
cmc
popf
repnz
cmp
or
xor
push
xor
add
outsb
lods
ds
ljmp
push
shl
je
adc
fcomps
movsb
adc
call
test
push
xchg
add
iret
inc
xor
test
cli
mov
xchg
ljmp
stos
and
aam
push
shll
sbb
clc
call
or
or
xchg
mov
lret
aaa
dec
cmc
jo
andl
pop
push
jns
in
sub
sbb
movl
fstl
and
inc
or
pop
and
mov
dec
mov
xor
and
mov
add
push
out
mov
cmp
xor
add
imul
jns
imul
push
and
push
add
sarb
add
movsl
and
add
adc
pop
sub
cmp
mov
adc
inc
sub
or
es
pushf
lods
and
add
leave
push
sub
bound
mov
hlt
and
adc
sub
movb
or
xor
int3
lea
pop
or
xor
sbb
mov
stos
inc
das
xor
and
adc
cld
xlat
adc
sbb
push
call
dec
add
mov
fisubs
insl
add
aaa
test
and
sbb
lcall
lret
and
push
and
adc
cmc
cltd
call
inc
fs
mov
push
xor
pop
sbb
sbb
add
arpl
mov
jl
clc
sub
jmp
mov
rclb
mov
fistl
cli
sub
dec
inc
clc
jl
dec
cmpb
or
imul
push
cmp
std
test
sbb
sub
and
mov
xor
pop
lods
mov
sub
push
add
jne
mov
ffree
or
rorb
pop
fistpll
neg
cmp
aad
shll
and
jae
std
cli
and
enter
sbb
outsl
enter
rcrb
xchg
scas
jo
mov
xor
push
incb
push
dec
outsl
sub
mov
push
dec
xlat
push
adc
or
fs
inc
cmpsb
sbb
imul
movsl
mov
js
jne
pop
test
cmpsb
fwait
push
xchg
shll
and
mov
test
mov
sahf
fs
add
pop
jne
dec
jle
movsl
pop
fiaddl
bound
adcl
inc
mov
or
dec
fs
cmp
nop
dec
mov
cmp
inc
mov
imul
inc
push
outsb
cmpsb
ror
inc
jle
lds
pop
push
fcmovu
shlb
push
xor
and
cmp
add
cmp
xchg
sarl
mov
adc
and
cmc
and
jl
ja
sbb
sbb
rcr
sbb
and
iret
sub
xor
inc
movsb
jmp
inc
cmp
xchg
fcmovne
adc
cmp
xor
out
in
pop
stos
xor
push
testb
lret
in
adc
mov
leave
pop
call
mov
jmp
shrb
addr16
sbb
jnp
pop
pop
frstor
dec
push
add
ljmp
int3
and
mov
pop
jb
push
lea
gs
pop
adc
pop
dec
in
pop
call
mov
dec
hlt
fwait
dec
jmp
xchg
sar
add
mov
and
jbe
sbb
sbb
sub
sub
add
sub
add
cmp
dec
imull
pop
add
sbbb
aaa
mov
imul
inc
xchg
push
addb
or
or
jg
jns
cmp
jle
bound
pop
test
and
mov
in
mov
int3
push
mov
jg
shl
sbbl
fistpll
les
daa
and
test
sub
rorl
in
ds
ds
iret
adc
adc
dec
cmp
int3
scas
and
adc
inc
pop
mov
mov
push
mov
and
add
mov
or
adc
add
jmp
orl
inc
xchg
sub
jl
inc
shl
sbb
in
imul
push
fldenvs
fistpl
mov
mov
xor
rcll
inc
inc
mov
mov
and
and
sti
fld
or
adc
pop
mov
jo
test
into
divl
js
fwait
les
jp
and
xor
sbb
loope
lahf
movsl
dec
or
movsb
cwtl
dec
mov
iret
jo
dec
add
lea
sbb
call
push
lods
fcmovu
mov
test
adc
lret
pop
xor
add
repnz
inc
adc
arpl
adc
cmp
xor
cmp
adc
inc
add
daa
add
inc
cld
inc
aam
dec
pop
mov
ret
sbb
ret
subl
push
pop
out
mov
or
daa
fcomi
icebp
ret
pop
pop
movsl
call
adc
gs
or
cltd
pop
stc
pushf
mov
je
sub
or
or
pop
shr
and
cmp
lahf
adc
inc
ret
mov
add
jbe
gs
sub
lahf
push
std
mov
xorl
add
pop
lcall
inc
or
inc
outsl
mov
fmul
out
imul
jb
add
pop
and
sub
mov
shl
adc
sbb
les
and
adc
cmp
das
jo
insl
jmp
fwait
jmp
in
lea
mov
mov
int
mov
inc
adc
mov
sbb
nop
add
and
adc
enter
dec
or
pop
test
repz
int
add
xchg
cs
bnd
push
inc
or
cltd
mov
daa
add
loop
rorb
bound
enter
mov
in
push
ss
rcrl
dec
out
int
aad
inc
dec
and
mov
pop
pop
icebp
sub
sbb
inc
sub
in
popf
pop
inc
pop
lahf
gs
and
or
mov
bound
insl
jp
adc
enter
daa
lock
into
sbb
loope
adc
sub
adc
and
adc
add
mov
call
je
cmp
shrb
ja
out
mov
leave
xor
jmp
cmc
lret
dec
loopne
push
mov
lret
adc
and
pop
push
in
sub
push
out
and
cmpsl
or
or
jne
pop
dec
adc
mov
mov
add
ret
push
cmp
xchg
out
mov
pop
clc
mov
add
std
adc
nop
out
xchg
std
inc
fisttpl
ljmp
cld
jle
decl
leave
add
pop
cld
leave
mov
push
loopne
jg
jle
cmove
aad
adc
rcll
xchg
or
fiadds
push
icebp
call
ficompl
lea
cmp
dec
sub
and
scas
aad
lods
hlt
mov
inc
leave
or
and
data16
jmp
lret
add
inc
call
xchg
cmp
fsubrp
dec
dec
data16
bound
adc
insb
icebp
inc
pop
pop
cmpsb
rorb
rcrb
jg
jmp
hlt
fs
add
or
or
mov
push
cmp
push
in
dec
and
shll
fdivrl
pop
jne
mov
push
frstor
push
pop
mov
jg
jmp
lea
sbb
sub
test
dec
add
int
outsb
pop
popf
mov
adc
es
in
scas
iret
test
push
add
or
cmp
jge
pop
inc
enter
pop
scas
cwtl
test
in
xor
adc
push
jg
mov
lcall
rclb
cmp
ja
push
push
mov
sub
dec
adc
inc
cld
xchg
cli
and
dec
push
ret
sub
shr
jl
mov
inc
es
sub
aad
sbb
and
jg
xor
adc
jae
push
adc
repz
xor
xchg
cs
fs
insb
inc
movsl
test
sub
mov
inc
sub
add
ja
es
call
jle
dec
sub
rcll
lcall
std
mov
and
popf
stos
ret
bound
adc
sbb
in
mov
push
sub
aaa
movsb
or
pop
sarl
mov
cmpsl
test
adc
sub
mov
push
pop
lea
mov
cmpb
xchg
push
dec
aaa
lods
mov
jne
cmp
inc
test
out
cmpsb
push
lods
into
xchg
sti
daa
call
inc
or
fs
adcb
rorb
shl
inc
jle
je
mov
sbb
dec
sbb
and
dec
out
lahf
push
lock
xor
sbb
xor
sbb
icebp
das
loop
xor
aas
mov
outsb
jl
pop
xor
mov
dec
clc
pop
leave
adc
sti
push
adc
jmp
addr16
inc
jle
xor
cld
mov
fisttpll
daa
ja
sub
mov
dec
inc
rcrb
imul
jns
adc
jne
adc
imul
fbld
hlt
scas
out
push
fwait
aam
stc
daa
cmp
in
es
mov
xchg
lret
add
adc
fst
data16
mov
and
lea
insl
outsl
xor
fbld
outsb
or
pop
rcrb
adc
fldln2
inc
push
lea
cmp
push
push
push
lcall
cs
push
dec
lcall
movsl
cli
sub
gs
sub
push
pusha
push
and
xlat
out
and
adc
mov
in
or
mov
fucomip
fistps
xchg
push
inc
imul
iret
hlt
pop
xor
bound
repz
add
daa
xlat
aad
and
fwait
insl
dec
mov
pop
inc
jmp
sub
fisubl
shll
sbb
cmp
movsb
sahf
mov
and
mov
clc
popa
mov
push
subl
lods
lret
pop
dec
lahf
aas
loope,pt
mov
dec
subb
inc
das
shl
hlt
cs
int3
or
mov
and
mov
ljmp
push
popf
push
rorl
add
es
push
dec
filds
sub
push
stos
push
adc
adc
imul
jle
call
push
cmp
push
mov
mov
sub
enter
leave
insl
imul
jae
push
adc
shrb
mov
call
pop
jns
jp
jno
dec
cmc
rol
in
cli
in
mov
dec
pop
movsl
cli
subl
xchg
inc
add
call
cmpsl
push
mov
outsb
shlb
popa
cmp
mov
add
pusha
mov
call
pop
fiadds
jbe
lds
popa
and
scas
add
adc
decb
mov
push
mov
jns
aas
pop
mov
lds
sbb
push
adc
mov
and
push
jae
lock
add
sub
xchg
fisubs
dec
test
out
cwtl
cs
inc
add
add
dec
add
mov
mov
mov
xor
or
mov
imul
adc
lods
pop
inc
adc
mov
repnz
jb
adc
push
dec
cmp
and
sub
xor
push
inc
and
mov
repnz
jno
dec
or
xlat
pop
inc
xor
mov
repnz
das
jb
pop
nop
sbb
xor
inc
sbb
test
cmp
inc
out
jo
inc
addl
or
decb
adc
mov
repnz
add
jb
pop
nop
push
and
mov
sbb
test
pop
or
das
and
inc
test
pusha
or
and
dec
and
jns
add
cmp
dec
test
insb
or
in
das
and
cmp
test
cmp
cmp
imul
cmp
out
cwtl
stc
push
and
sub
or
mov
repnz
inc
sbb
inc
dec
loop
sbb
les
cmp
inc
jb
pop
nop
cwtl
enter
das
and
inc
mov
and
jns
or
mov
dec
test
test
push
and
push
rcrb
addb
dec
das
pop
or
call
pop
xchg
imul
enter
inc
call
pop
mov
adc
jo
and
inc
pop
xchg
or
sahf
xor
lea
dec
sub
data16
sub
or
xor
cli
mov
and
jmp
fmuls
sbb
cmp
mov
inc
adc
insl
cmpxchg
push
andl
enter
mov
add
insb
pusha
sbbl
sti
xchg
insb
add
xchg
and
flds
fnstcw
mov
inc
jl
lea
xchg
xor
test
cmp
mov
xor
adcb
inc
push
enter
insb
xchg
xchg
enter
insb
pushf
xchg
enter
xchg
movsb
adc
xchg
xchg
push
pushf
mov
arpl
xchg
push
add
push
out
aam
rcrl
inc
sbb
clc
or
fisubrs
test
inc
inc
and
aaa
cmp
push
cmp
jns
adc
sub
out
sub
lods
mov
and
adc
fcoml
xchg
adc
pop
les
das
fadd
shrb
cmp
push
adc
jo
mov
pop
or
adc
push
xchg
adc
cmp
adc
xor
mov
inc
mov
sub
jle
add
xchg
cwtl
mov
xor
stos
xrstor
pop
xor
dec
fnstcw
movsl
outsl
adc
fxch
daa
xchg
pop
lods
mov
pop
push
test
mov
insb
mov
sub
mov
pushf
ret
fldt
cmpsl
sub
push
adc
adc
cmp
std
inc
js
adc
xor
mov
push
arpl
adc
loopne
push
ret
ret
mov
cmp
daa
jo
stos
test
jb
add
mov
mov
lret
imul
xchg
adc
jl
mov
and
jmp
or
mov
mov
inc
xlat
out
sub
dec
mov
or
push
add
mov
test
mov
aaa
cltd
push
mov
lods
jns
or
out
fs
outsb
add
cmp
mov
inc
mov
dec
or
jb
or
jno
mov
sub
adc
cmp
inc
enter
pop
adc
clc
or
cli
mov
and
push
test
les
push
in
add
call
inc
add
subb
lret
int3
mov
adc
testl
sbb
test
sbb
pop
in
das
and
sbb
lcall
icebp
push
push
in
sub
and
push
sub
pop
sub
sbb
sub
adc
enter
sub
lock
jno
pop
js
shrl
and
push
and
cmp
inc
and
add
cld
jl
icebp
arpl
jg
cmc
cmpsb
add
jae
mov
push
jmp
je
inc
ljmp
stc
jne
xor
sbb
fs
mov
add
fs
clc
sarb
std
and
jo
push
add
push
adc
push
dec
loopne
fwait
or
fdivrl
sbb
in
pop
ret
pop
push
mov
decb
pop
cmpsl
sbb
pusha
test
bound
sti
jb
aam
bound
loop
sbb
je
lahf
xchg
cmp
repz
aad
in
add
addl
arpl
xchg
jg
add
jge
pop
loope
loopne
call
mov
push
mov
lock
pop
push
mov
test
add
mov
add
call
sub
jmp
mov
cmpsb
aad
in
out
pop
fdiv
mov
cwtl
sarb
sub
xchg
fsubr
int
bnd
fs
loopne
xchg
or
sub
or
aam
es
fimull
jmp
dec
mov
xor
std
inc
mov
fidivrl
das
fcmovb
fsubl
mov
rcr
dec
rorl
mov
leave
xlat
int3
xchg
fsubl
mull
jbe
mov
fldcw
cli
push
xchg
gs
mov
movsl
inc
and
cmpsl
gs
mov
daa
push
push
xor
lea
jae
std
add
push
rolb
sub
ljmp
adc
jnp
stos
xchg
hlt
and
ret
inc
cmp
sub
cmovae
adc
dec
lds
mov
sub
pop
inc
ja
test
test
xchg
fcoml
sub
outsl
jl
shlb
test
dec
and
adc
ss
jl
fmuls
mov
scas
pusha
jge
adc
push
add
idivl
insl
fcoms
jmp
movl
mov
int3
push
nop
mov
lods
jnp
movb
adc
mov
sar
nop
repz
sub
push
add
and
push
or
stos
add
jmp
mov
add
call
adc
jae
xor
leave
push
ret
inc
jmp
repz
ret
cmp
icebp
inc
ret
in
or
call
dec
into
mov
jmp
rclb
sbb
or
jbe
sub
lahf
push
push
adc
push
das
xorb
or
or
inc
out
loopne
ret
aaa
pop
call
cmp
push
aaa
clc
out
shl
enter
sub
pop
xor
xor
xor
or
fwait
sub
adc
mov
and
mov
lret
and
adc
loope
adc
adc
push
pop
sub
ljmp
xchg
mov
sar
xchg
std
inc
test
clc
mov
jl
fcompl
mov
testb
mov
sbb
adc
sbb
fwait
std
jp
repnz
mov
je
pop
in
loop
leave
add
or
mov
adc
lds
dec
adc
inc
dec
mov
jns
aas
xchg
sbb
add
push
adc
or
cltd
push
aam
in
jmp
in
out
inc
insl
or
bound
pop
sbb
sub
shll
pop
lret
adc
ds
mov
or
push
roll
in
push
sbb
int
cmp
bound
or
in
sahf
hlt
rclb
inc
roll
leave
mov
cli
arpl
dec
mov
sbb
pop
pusha
das
mov
ljmp
sub
frstor
mov
mov
push
and
mov
and
add
loop
add
add
loopne
xchg
pusha
or
das
outsl
loopne
jl
adc
push
or
test
lea
mov
xchg
movsb
xchg
movsl
xchg
sbbb
sub
test
push
insb
int
icebp
or
cmp
and
mov
inc
mov
mov
sub
insb
add
or
test
aam
jo
cmp
pusha
cmp
pop
jne
pop
cmc
lret
pop
adc
mov
mov
dec
mov
mov
mov
and
push
mov
xor
lds
inc
outsl
inc
add
mov
push
add
jl
jo
xor
rorl
xchg
and
add
and
adc
in
cli
mov
pop
cmp
cmp
mov
inc
adc
xchg
mov
xor
movsb
sub
imul
dec
jmp
je
mov
shll
sub
add
outsl
push
cmpsb
maxps
sub
mov
inc
push
adc
loop
mov
jg
pop
or
shll
xor
xchg
js
add
dec
xor
scas
sarb
imul
jb
pop
mov
fs
popf
stos
cmpsb
mov
and
adc
add
add
test
cmpsb
or
imul
add
sbb
in
pop
into
shrb
or
add
bound
pop
inc
test
or
or
cmp
test
mov
pushw
sbbl
sub
leave
dec
add
xchg
stos
jmp
mov
jb
mov
mov
nop
add
jae
jno
jo
xor
and
push
push
sbb
inc
test
bound
add
cli
inc
test
mov
sbb
rcrl
stos
in
in
dec
out
sti
add
mov
push
test
adc
inc
lods
cmpsl
lds
jmp
into
sub
imull
inc
in
test
push
push
aaa
clc
mov
cmp
out
xchg
bound
xchg
or
sub
adc
dec
add
insb
push
data16
xchg
scas
or
jae
test
idiv
adc
cmp
push
pop
pop
xchg
mov
mov
jl
push
repnz
cmc
clc
rorb
or
mov
adc
sub
xor
xchg
and
sbb
lock
mov
leave
lock
imul
imul
test
jb
inc
fisubs
inc
jl
or
xchg
push
and
cmp
adc
pop
xchg
loop
sbb
mov
cmc
call
popl
or
add
les
sub
lock
rorb
mov
ja
and
sub
xor
popf
popf
add
data16
out
xor
das
xchg
sbb
and
ds
add
push
add
or
and
mov
cmpb
push
lods
and
and
test
adc
mov
pop
das
testl
dec
pusha
and
sub
xchg
movsb
xor
adc
test
pusha
icebp
push
sbb
nop
incb
mov
ja
fidivrl
andb
adc
std
icebp
leave
cld
cld
scas
pop
lock
out
jge
inc
scas
je
xchg
mov
cmc
cmc
pop
nop
lods
push
shlb
sub
je
fstpl
adc
lahf
shll
mov
add
mov
inc
and
inc
jg
and
sub
icebp
adcb
rolb
enter
mov
movsb
stc
nop
inc
or
jne
cmc
fstpt
sar
aaa
mov
pop
jle
pop
pusha
orl
stos
jb
jnp
cmpsl
dec
gs
sar
lods
scas
loope
aam
jmp
jg
push
mov
sub
add
xor
add
ljmp
inc
or
adc
mov
add
push
int
mov
lods
push
mov
aad
mov
icebp
add
add
in
adcb
xlat
push
sbb
sbb
jae
and
jne
adc
in
lds
daa
or
push
adc
jne
cltd
mov
mov
mov
das
testl
sbb
iret
loopne
shr
cmp
push
adc
jmp
pop
or
mov
pop
leave
testb
pop
push
mov
sti
mov
and
call
aad
negl
sub
icebp
in
stos
mov
jae
and
and
sbb
sbb
stos
negl
dec
or
mov
or
push
xorb
mov
mov
fs
push
nop
ret
lea
push
and
push
or
lods
mov
xchg
movsb
cmpsb
ret
test
adc
xorb
adc
xor
mov
pop
jl
loopne
or
adc
xor
pop
push
cmp
clc
lea
adc
out
push
push
push
jle
jno
jbe
lret
in
aaa
push
cmp
sbb
cmpsb
gs
jl
test
xchg
jl
inc
jmp
xchg
fcoml
xor
shll
dec
pop
jge
push
out
sub
cwtl
inc
mov
dec
scas
lods
jmp
out
sbbl
cmp
and
cmp
lret
push
imul
sar
stos
das
nop
bound
jl
cmp
mov
mov
pop
push
cmp
lret
movsb
pop
mov
jmp
jle
inc
mov
adc
call
sub
mov
dec
xchg
mov
mov
cltd
pop
lea
fnstcw
sahf
cs
xor
mov
adc
sbb
aaa
lcall
pusha
mov
cli
xor
pop
and
popf
aas
sub
lea
inc
or
jmp
dec
push
mov
xchg
add
jae
cmp
and
adc
mov
out
inc
adc
jp
movsl
jnp
or
outsb
les
out
jb
add
jo
pop
and
seta
ror
scas
fldcw
stos
idivl
dec
pop
xor
cld
xor
fs
jmp
mov
inc
or
repnz
sbb
lahf
mov
lahf
dec
xchg
lods
or
or
stos
adc
addr16
pop
pushf
popa
adc
loop
cld
test
add
jne
fmuls
popa
adc
adc
popf
jbe
lods
jno
imul
xchg
add
int
adc
lret
pop
pcmpgtw
test
ljmp
jbe
pushw
loope
inc
inc
rep
mov
jns
repz
push
stos
popa
fsubr
adc
dec
fidivl
dec
mov
dec
clc
jle
or
movsl
inc
push
mov
rcrb
sbb
pop
sub
je
in
cmp
dec
xchg
ljmp
push
sub
mov
pop
or
je
or
ja
fmuls
cli
and
shr
push
and
test
sti
ret
jmp
sbb
adc
sti
aam
gs
aaa
cmpl
js
jmp
mov
add
xor
push
lahf
clc
int
xlat
js
cmp
dec
or
dec
cmpsl
inc
push
enter
data16
or
lds
ror
rolb
mov
xor
shrb
idivl
inc
and
push
cli
jae
or
or
pop
push
stos
mov
or
test
mov
cmp
loop
mov
outsb
addb
ja
incl
and
cli
test
popa
les
adc
call
inc
add
inc
and
dec
add
aaa
inc
enter
mov
das
mov
insl
or
je
or
xchg
and
int
xchg
daa
pop
add
aas
jg
pop
jg
testl
jmp
inc
cmp
pushf
add
stc
adc
daa
imul
add
imul
mov
inc
push
and
std
and
mov
cmp
pop
cli
stos
inc
inc
xor
movaps
xchg
and
or
aam
add
inc
xchg
sub
je
mov
inc
or
pushf
movsb
repz
add
xchg
repz
hlt
mul
sbb
mov
dec
jle
push
pop
and
incb
das
cmc
ja
aad
xor
and
push
addb
cli
xor
dec
adc
dec
fucomip
xor
adc
out
sub
aaa
cmpsl
mov
bound
sbb
xor
icebp
enter
cmp
mov
mov
icebp
lcall
cltd
stos
sub
pop
stos
das
cld
jge
xchg
inc
push
int
adc
xchg
sti
mov
int
les
adc
lahf
and
push
dec
inc
xor
daa
pop
imul
call
mov
sub
jmp
out
into
mov
lahf
lock
mov
xor
mov
test
shrl
and
xor
dec
mov
sub
jmp
and
sub
test
sbb
test
xchg
mov
inc
pushf
mov
sbb
push
mov
xchg
pop
pop
sbb
scas
jo
sub
adc
stc
mov
test
mov
mov
or
push
inc
and
out
push
sti
in
jb
xchg
pusha
adc
mov
ret
in
jae
mov
push
cmp
xchg
sbb
inc
pop
jbe
xchg
or
jo
mov
push
popf
jmp
test
fcmovbe
enter
push
mov
push
enter
in
adc
jmp
int3
push
inc
pushl
or
addb
lea
pop
into
mov
insb
push
jle
icebp
push
out
add
lahf
cmpsl
inc
std
addr16
pop
add
outsl
nop
aam
and
bound
fbld
pushf
adc
or
sbb
lahf
lock
adc
jb
dec
and
jecxz
xor
loop
hlt
arpl
cmp
test
xor
sbb
sub
and
adc
jl
js
push
or
inc
shrb
dec
shl
fnstcw
jmp
fildll
scas
stos
nop
adc
xor
lret
andl
movsl
pop
in
mov
femms
add
insb
cli
cmc
fs
int
inc
push
int
and
sub
sbb
cld
add
aam
shlb
inc
and
nop
and
in
rclb
or
pop
sub
dec
sahf
ds
mov
inc
cmpsb
cwtl
lock
frstor
mov
dec
aam
leave
aad
mov
jne
cmp
addr16
inc
or
mov
jmp
adc
mov
insb
jle
inc
enter
scas
push
cmc
or
push
sub
lea
je
jge
mov
add
mov
push
clc
lock
dec
add
ss
and
faddl
mov
inc
sbbl
adc
xchg
mov
cmp
ret
and
cmpsl
push
jg
jmpw
or
mov
lods
cmp
add
icebp
in
cltd
inc
insb
xlat
arpl
mov
cld
jnp
inc
sahf
dec
scas
xchg
or
lds
adc
push
or
stc
sub
scas
cmp
shll
sub
sub
dec
ret
pushl
sub
jg
cwtl
jg
ret
adc
je
leave
pushf
adc
or
mov
hlt
adc
jl
xor
dec
scas
xchg
mov
mov
mov
mov
add
add
xor
xchg
cmp
or
aad
call
sbb
sbb
adc
fldpi
jg
jnp
add
inc
add
inc
repnz
jne
push
mov
loope
mov
sbb
sbb
sbb
and
inc
hlt
and
sub
adc
es
das
and
ss
ljmp
jae
dec
dec
adc
push
push
pop
je
jp
sub
cmp
push
daa
push
sbb
and
call
gs
add
inc
or
jmp
lret
pop
sub
push
inc
shlb
fsubs
push
inc
inc
enter
sbb
push
push
adcl
or
jb
xchg
xchg
mov
adc
push
shrb
lock
and
clc
inc
lcall
cli
gs
xchg
and
out
adc
jmp
adc
stos
ret
mov
and
xchg
xchg
add
sub
mov
push
pop
loopne
test
dec
xchg
and
sbb
ror
add
xchg
enter
mov
movsb
and
and
dec
rclb
das
stc
repnz
xor
movsb
push
int3
push
icebp
xchg
push
lods
andb
add
dec
push
das
mov
sbb
push
dec
sbb
and
cs
adc
lods
lcall
and
dec
and
popf
pop
add
or
sub
fiaddl
loopne
test
pusha
jp
mulb
shl
int
das
cli
add
mov
jecxz
mov
fidivrs
cld
sub
in
dec
jle
xor
lods
enter
push
das
rcll
and
mov
in
inc
int3
ficomps
shll
and
push
sbb
lcall
mov
jle
je
cltd
push
mov
rorl
rcr
aas
dec
lods
jecxz
in
fsubrs
shlb
lcall
jb
push
lds
mov
aad
cmp
jae
cld
and
mov
adc
mov
bound
iret
inc
mov
andb
xchg
xor
fists
sub
dec
mov
xor
dec
add
sub
decl
div
xchg
test
mov
mov
jns
xor
xchg
ljmp
xchg
hlt
stos
nop
or
lock
adc
dec
nop
sbb
sbb
rorl
adc
xor
inc
ss
fwait
std
and
xlat
mov
outsl
sbb
in
adc
scas
mov
inc
jl
clc
out
push
or
mov
add
xor
push
push
mov
aaa
jne
inc
push
and
jmp
outsl
jo
and
and
clc
or
jae
test
inc
cmp
repz
mov
adc
inc
push
and
xor
xor
or
mov
inc
adc
xchg
imul
inc
das
adc
inc
lods
or
jmp
mov
cmp
push
fcoml
orb
clc
in
mov
xchg
out
fs
xor
xchg
pushf
sub
push
xor
sbb
sbb
sub
mov
mov
sbb
adc
add
test
add
inc
aaa
add
bound
xchg
push
jecxz
or
cmp
lahf
push
nop
outsb
jg
inc
inc
in
pop
loop
and
hlt
jmp
and
in
or
jg
jmp
in
cmp
xor
fwait
ss
adc
enter
jmp
popf
stc
jo
call
mov
push
jns
adc
inc
sub
cmp
push
aaa
and
mov
mov
int3
push
or
int
sbb
mov
or
adc
jge
cmp
inc
mov
addr16
movsb
sahf
popa
fs
sub
inc
inc
repnz
gs
aam
jbe
jg
and
jns
inc
insb
pop
hlt
mov
mov
clc
sub
adc
repz
or
movb
sbb
je
scas
clc
js
xchg
push
adc
xorb
mov
or
jmp
jmp
adc
movl
adc
jne
adc
int3
out
jecxz
je
or
add
adc
xor
sub
test
add
and
xchg
inc
adc
in
mov
ud0
add
add
push
push
push
sub
gs
push
mov
std
data16
mov
and
or
xchg
lcall
xchg
maskmovq
negl
jnp
lods
xor
jmp
pop
pop
add
add
mov
lea
int
push
adc
aaa
inc
sbb
xchg
mov
shr
test
push
popf
lods
iret
mov
frstor
rcrb
cmp
mov
adc
cltd
pop
loop
adc
pop
jmp
xchg
and
mov
repz
add
dec
or
dec
or
add
and
nop
add
sub
jmp
sub
push
lcall
enter
adc
inc
inc
or
inc
dec
out
mov
jp
clc
or
jo
test
and
inc
adc
add
mov
ds
sub
in
out
sbb
leave
xor
inc
add
cmpsb
sub
scas
fnop
mov
or
cmp
sub
or
sbb
adc
stos
jb
or
push
add
repnz
imul
movsl
ret
xchg
sbb
add
add
enter
sbb
fs
daa
cli
push
inc
sub
mov
push
bnd
ja
or
hlt
ljmp
daa
pop
jl
jp,pn
sti
inc
test
pop
adc
dec
and
jmp
sbb
ss
sub
and
mov
pop
and
or
mov
jmp
xor
jge
incb
jns
stos
add
inc
cmp
xchg
pop
adc
fstps
push
and
xchg
cli
test
adc
push
push
jmp
mov
popf
clc
shlb
rcrb
jl
test
fists
bound
into
roll
in
pop
and
mov
call
inc
scas
sbb
inc
mov
into
sbb
xor
mov
push
orb
or
cwtl
and
pop
adc
push
add
add
test
cld
or
sub
or
add
adc
inc
adc
movsb
push
or
adc
or
adc
cs
mov
std
sbb
pop
xchg
sti
lea
js
lahf
jecxz
xchg
mov
jmp
sti
das
aad
mov
leave
push
sbb
xchg
faddp
sub
sub
jae
xchg
int
out
pop
mov
jle
pop
xchg
sbb
or
test
data16
mov
sbb
jmp
dec
and
std
dec
mov
ljmp
push
push
icebp
lahf
fcoml
pop
in
dec
xorl
cmp
jbe
pop
je
iret
jecxz
sti
roll
aam
test
xor
ja
add
in
inc
hlt
xchg
push
clc
fs
and
xor
cmp
int3
ja
rclb
xor
fcmovu
inc
test
add
pusha
shl
xor
inc
dec
add
xchg
push
push
xor
push
mov
cmp
xchg
test
fdivrl
rclb
add
ja
xchg
mov
adc
les
push
push
xlat
cmp
sbb
add
dec
decl
lea
and
insl
xor
or
inc
jmp
sub
jl
mov
xor
inc
jmp
push
add
or
jns
pop
jmp
and
out
test
movsb
push
insb
adc
push
lock
jmp
dec
rcr
jae
repz
xor
push
jne
jns
rorl
or
jne
push
jo
popa
jo
jmp
js
inc
mov
dec
pop
inc
jmp
add
je
and
scas
stc
sbb
clc
jo
push
jecxz
xchg
orb
cmp
lea
sbb
testb
mov
jmp
sub
xor
mov
fstps
xchg
push
adc
lcall
cmpsl
imul
and
addr16
js
jmp
jle
inc
test
mov
pop
mov
or
jle
pop
mov
subl
xor
loop
sbb
sub
daa
jne
mov
jmp
or
je
or
sub
sbb
and
test
cmp
adc
pushf
sti
decl
mov
or
movsl
xlat
repnz
pop
adc
nop
xchg
sbb
jp
ffreep
ret
ss
inc
mov
cmpl
ljmp
sub
xchg
shrl
rcll
and
or
mov
mov
cmp
cmp
or
icebp
add
sbb
and
add
add
or
xchg
mov
or
xchg
iret
and
inc
fldt
and
test
fimull
popf
jne
lds
int3
aad
loop
mov
lahf
push
hlt
outsl
out
and
lahf
pop
stc
repnz
ja
inc
jle
mov
les
test
adc
scas
push
inc
fstl
jo
jns
loop
insl
lcall
xchg
mov
or
subb
call
fdecstp
dec
jo
loope
mov
inc
lods
hlt
mov
push
call
add
push
pop
push
jg
inc
outsl
movsb
push
enter
mov
imulb
loopne
adc
and
push
out
adc
and
sub
add
pop
pop
xchg
cmp
mov
jb
mov
xchg
adc
daa
adc
add
nop
lea
or
mov
scas
xchg
inc
xor
cmp
pusha
fistpll
je
sub
add
jge
xor
adc
test
out
mov
outsb
fsubrl
cltd
repnz
mov
sub
das
rclb
or
pop
frstor
adc
mov
sti
push
cmpl
jle
push
adc
push
pop
pop
adc
and
cmp
filds
sub
lcall
sub
sub
cmp
xchg
cld
sar
and
mov
and
push
in
cmp
or
push
mov
outsb
and
imul
jg
jno
insl
dec
adc
fdivr
adc
out
lcall
aas
nop
stos
jnp
mov
sbb
pop
dec
push
jb
fcomps
int
int3
and
fs
cwtl
pushf
loopne
pop
enter
sbb
xchg
das
or
xchg
das
cld
mov
jg
jae
rcrb
daa
add
notl
mov
sbb
inc
push
sbb
mov
cmc
or
sbb
movsl
stos
test
and
mov
or
cmp
movsl
adc
scas
push
punpcklwd
dec
push
inc
mov
out
rorb
jo
push
push
jmp
dec
dec
mov
lea
pop
or
mov
cmp
ss
mov
inc
xor
inc
cmp
hlt
repnz
sub
cmp
and
and
inc
roll
loopne
cmp
sbb
add
add
push
jg
sarl
xchg
mov
lret
inc
mov
inc
pop
mov
nop
and
daa
adc
and
pop
push
push
call
out
cmc
jmp
adc
ret
je
ficompl
rcrb
pop
or
or
mov
ret
pop
pop
pop
leave
pop
shr
add
jmp
adc
or
lock
mov
or
mov
roll
popa
mov
xchg
cld
jb
inc
fdivl
clc
xchg
adc
sbb
or
leave
adc
pushf
fwait
xchg
mov
nop
pop
pop
neg
ljmp
mov
mov
nop
xchg
and
sub
and
repz
insb
lock
test
ss
test
sub
test
ret
sbb
hlt
aad
adc
test
jb
shl
std
mov
mov
dec
stc
shll
sub
and
or
jle
bound
jg
adc
lahf
cmp
popl
mov
divb
lret
adc
cmp
dec
mov
adc
stc
adc
pop
mov
ss
mov
jae
negl
fisubl
pop
inc
sbb
sti
push
jb
mov
push
push
push
or
daa
sbb
outsb
mov
jg
push
or
lds
mov
fistpl
mov
jns
dec
add
adc
out
inc
test
push
and
mov
adc
and
pop
adc
push
lahf
inc
dec
adc
push
adc
shlb
push
frstor
cmp
or
mov
sub
sub
xchg
loope
aam
shlb
xchg
mov
pop
das
fs
fs
inc
push
pop
iret
sbb
mov
push
repnz
sbb
insb
push
aam
dec
inc
call
scas
mov
pop
out
ss
cmp
repnz
ror
cs
xchg
dec
fstl
jge
inc
dec
loopne
and
jge
pusha
inc
rorb
fs
aam
scas
sub
or
out
dec
cld
cltd
test
dec
inc
enter
push
and
sub
or
sub
add
adc
mov
movsl
pop
cmp
scas
pop
adc
js
cmpsw
call
cmpl
push
xor
cmp
int3
mov
int3
inc
add
mov
xchg
mov
ret
test
lcall
fiadds
outsl
sub
cmpsl
movsl
shlb
mov
cmp
sti
jmp
movsl
in
stos
mov
add
cmp
shl
popf
aad
xchg
clc
push
dec
mov
pusha
mov
int3
sbb
mov
jl
mov
cmpl
inc
fmuls
shrb
stos
xchg
shl
imul
jo
inc
in
xor
insl
mov
call
and
sbb
fadds
aaa
gs
js
jmp
insb
imul
jmp
ds
dec
fistps
sub
dec
push
push
push
xchg
cli
dec
sbb
mov
sub
or
rcrl
or
dec
pop
imul
xor
jno
imul
xchg
sti
dec
insl
call
loope
lds
mov
fwait
in
sub
mov
xchg
repnz
push
insl
cld
and
mov
or
popa
lahf
out
sti
pop
clc
stc
jbe
enter
cmp
adc
sub
adc
xor
xchg
std
idivb
pop
inc
bnd
pop
movsb
stc
ljmp
jl
or
aam
dec
push
sbb
adc
pop
out
dec
fildll
push
and
inc
lock
xchg
and
push
jbe
jo
mov
push
call
js
das
mov
jbe
scas
hlt
into
mov
ljmp
sub
add
je
jae
daa
push
lcall
add
pop
repz
adc
clc
add
add
nop
into
add
xlat
mov
nop
cld
dec
mov
dec
insl
adc
and
xor
mov
fs
or
icebp
add
das
lea
sti
pusha
adc
out
mov
test
mov
imul
and
xchg
lret
xor
stos
push
and
imul
sub
adc
and
ret
movsb
faddl
aad
movsl
dec
test
test
jmp
pop
and
pop
adc
frstor
and
cltd
in
cld
repz
pushf
inc
je
cmpsb
push
inc
add
sbb
decl
sbb
mov
fsubr
pop
sbb
dec
loopne
insl
gs
int3
mov
and
push
inc
xor
xor
xchg
xor
pop
sbb
adc
inc
sti
inc
push
inc
mov
sarb
mov
xchg
mov
enter
push
leave
and
mov
ja
adc
sbb
xchg
and
sbb
cmpsb
lods
mov
loop
and
mov
cmp
cld
test
flds
enter
sub
mov
mov
les
add
in
inc
mov
mov
mov
adc
sbb
leave
fbld
dec
repnz
jns
jp
jo
das
movsl
orl
push
icebp
ja
pop
dec
out
xchg
jp
je
addr16
mov
cli
ret
adc
push
xor
add
int3
sbb
adc
inc
add
mov
repz
mov
mov
addr16
add
xor
push
out
xor
aam
and
mov
dec
mov
or
jae
les
cmpsb
outsb
inc
xor
lret
push
in
jno
cmp
insb
imul
sbb
cmp
daa
jl
push
dec
add
xor
cmp
push
jg
sub
fldt
jmp
arpl
shll
xchg
arpl
repnz
fimuls
rolb
jnp
inc
cmp
repz
ret
mov
repnz
and
pop
mov
pop
or
xor
notb
mov
loope
and
loope
es
inc
sahf
xchg
mov
out
xchg
loopne
mov
fiaddl
cmp
fsubrs
bound
inc
add
pop
mov
and
jnp
loopne
rorb
js
rclb
add
mov
xchg
jns
mov
into
sub
add
jmp
out
cmp
dec
stc
fsts
inc
mov
and
jbe
fdivrs
rorl
push
push
call
add
filds
test
test
pop
loopne
call
popf
jge
xchg
dec
add
push
xchg
mov
pop
jne
push
and
call
mov
arpl
movsl
mov
xchg
mov
xor
push
and
aaa
push
or
adc
imul
dec
int3
in
dec
add
popf
mov
ljmp
adc
ja
callw
daa
jno
mov
xor
and
dec
iret
jne
push
sbb
sub
mov
inc
shll
nop
shr
mov
and
or
ja
mov
lds
or
xchg
xchg
mov
lods
ja
push
orb
jbe
inc
pop
cmp
loope
xor
push
mov
movl
jp
mov
and
cmpb
pushf
gs
adc
mov
clc
add
lock
fbstp
jl
scas
addr16
sub
cmpsb
pop
test
stos
cmp
in
mov
and
ss
lret
aas
inc
cmp
into
lds
mov
loopne
xor
loop
sbb
adc
lock
idivl
mov
ds
xchg
testb
inc
ljmp
adc
sub
dec
dec
push
inc
add
add
adc
movsb
cmpsl
adc
popfw
cld
mov
jge
insl
cmpsl
push
in
fdivr
in
push
stos
fwait
iret
lods
scas
daa
sbb
loopne
jecxz
inc
icebp
and
or
mov
fs
and
stos
mov
cmpsl
jg
sub
mov
sarb
push
outsl
nop
mov
stc
push
jp
dec
stos
lret
adc
inc
dec
mov
inc
jmp
outsb
jp
inc
out
xchg
popf
dec
push
adc
imul
jl
adc
loop
test
sub
out
push
jg
pop
into
xor
sbb
mov
mov
fists
imul
daa
ja
xor
cmp
push
mov
lea
inc
jbe
lods
and
push
or
adc
mov
jmp
xor
and
mov
push
fimuls
and
jb
nop
test
hlt
inc
cmpsl
mov
in
xor
imul
fwait
call
lcall
mov
push
ret
call
test
inc
sti
xchg
push
xchg
or
dec
mov
jmp
xchg
arpl
or
shlb
inc
jns
mov
adc
add
dec
mov
cmpsl
pop
jo
stos
test
les
xor
jmp
cmp
xor
out
and
int
or
cmc
lahf
shlb
loope
sbb
adc
mov
mov
mov
call
cmp
and
jb
ljmp
sbb
add
aam
adc
imul
adc
out
int
clc
call
mov
adc
daa
xchg
mov
mov
and
sbb
es
push
xchg
andb
mov
cld
jge
std
inc
mov
add
sbb
dec
mov
or
nop
test
jb
aaa
sub
nop
jno
std
or
xchg
pop
data16
out
stos
mov
add
mov
push
cs
in
inc
push
sub
es
dec
clc
adc
fsubr
es
cwtl
add
pop
or
push
or
lods
push
mov
jmp
or
sub
and
and
sbb
sbb
adc
adc
xchg
and
inc
adc
aam
clc
fs
xor
sbb
or
xchg
and
nop
fmul
fsubs
shrl
enter
xor
sbb
xor
nop
cmp
inc
fs
xor
dec
or
xchg
and
pop
enter
xor
insb
or
xchg
and
jl
andb
sbb
and
movsb
xor
xchg
and
les
enter
rolb
nop
fmul
loopne
in
call
xchg
mov
sub
push
inc
cld
jo
aam
add
or
or
adc
adc
sbb
xchg
and
sub
sub
xor
xor
cmp
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
and
nop
xor
inc
mov
enter
xor
inc
shlb
nop
enter
shlb
adc
or
inc
or
add
inc
adc
rorb
lock
or
xchg
and
nop
fmul
fsubs
rcrb
int3
or
xchg
and
xchg
mov
scas
test
in
mov
add
outsb
pushf
popf
rolb
imul
cli
dec
rorl
leave
push
sbb
or
jae
imul
or
lret
jl
sar
mov
sub
not
or
test
adc
aad
mov
cmpb
aam
sbb
repz
ljmp
lret
clc
ret
push
add
push
dec
dec
dec
outsl
call
scas
lods
xchg
sub
lret
hlt
notl
lahf
pop
mov
hlt
xor
xchg
mov
test
mov
sarl
xlat
lock
mov
and
mov
or
je
mov
call
test
add
push
mov
loopne
cmp
jo
mov
pop
pushf
sti
dec
jb
mov
jge
sub
mov
negl
je
repnz
std
enter
sbb
or
pop
daa
push
jb
lea
pop
into
lcall
xlat
int
and
xchg
repz
inc
cmp
dec
inc
dec
aad
ret
cmpsl
xchg
jno
sbb
dec
pusha
js
add
jne
or
outsb
imul
push
mov
jmp
popf
adc
cli
test
fidivrl
pop
xor
and
sub
sbb
mov
shrb
adc
popa
movsb
adc
cmpsb
mov
jo
xor
pop
repnz
test
xchg
push
cli
inc
add
rolb
sbb
jns
cmp
fcomp
xchg
cs
outsl
xchg
mov
inc
idivl
dec
lahf
adc
mov
lock
outsb
pop
lea
pop
or
fcmovnu
icebp
push
cmp
repnz
aam
xor
lcall
inc
push
dec
sarb
lahf
cmp
mov
mov
xor
inc
and
adc
and
push
push
mov
shlb
loopne
movsl
mov
data16
add
mov
pop
lea
mov
stos
int
fisubl
or
and
movsl
sti
mov
adc
out
sub
cli
adc
nop
fildll
and
dec
imul
les
mov
bnd
gs
jno
jecxz
lods
add
movsb
sub
and
jmp
dec
jge
push
data16
outsl
add
jb
push
movsl
sub
in
jno
lea
aad
cmp
adcb
lds
xor
sbb
sub
and
xlat
add
hlt
push
jle
fmuls
nop
loop
mov
push
inc
dec
loop
push
mov
nop
jae
daa
cwtl
push
stc
add
mov
jge
imul
mov
mov
mov
inc
cmp
jae
in
adc
in
inc
jo
daa
movsl
stos
mov
inc
xorb
int
aaa
dec
pop
fcompl
adc
rolb
aam
movsl
mov
icebp
lret
adc
push
add
xchg
scas
into
lock
mov
cld
push
repz
repnz
andl
jbe
jae
in
or
scas
or
jmp
sbb
outsl
sub
scas
int
jnp
cmovg
sti
mov
and
daa
sbb
aam
and
sub
scas
mov
lds
xchg
aam
fcoml
sub
push
nop
scas
iret
jb
mov
faddl
inc
pop
aas
jmp
fcmovnu
mov
fsts
push
jne
mov
inc
sar
mov
inc
mull
dec
push
adc
sbb
xchg
xor
mov
lret
xlat
xchg
sti
mov
in
call
mov
hlt
lds
mov
and
sub
movsb
fnstenvs
add
cmpb
or
pop
and
or
or
and
mov
daa
dec
and
testb
adc
ret
mov
dec
int3
push
or
add
or
cmp
sub
lock
nop
ret
dec
inc
loopne
int
and
mov
es
lods
mov
nop
push
mov
dec
inc
and
test
add
add
add
add
inc
mov
push
pop
xchg
xor
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
or
mov
jl
das
adc
pop
stos
sbb
data16
push
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
add
hlt
push
imul
jge
add
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
popa
aad
mov
bound
inc
sbb
testl
and
in
jmp
push
fnstenv
cld
xor
jae
cmp
and
jne
push
popa
jle
fsubrs
dec
gs
fistl
mov
push
pop
mov
push
dec
add
or
xchg
add
or
aas
and
xor
outsl
adc
and
sbbb
xor
or
adc
shlb
push
andb
inc
add
data16
gs
inc
adc
mov
and
cmp
jecxz
adc
inc
insb
imul
dec
addr16
inc
fldcw
xor
insl
popa
insb
int
inc
and
xchg
mov
rorb
rolb
insl
gs
jns
push
leave
aam
cmp
cmc
fs
pop
out
ds
jo
inc
or
pop
lds
fs
dec
gs
push
fs
jns
inc
fisttpll
scas
or
adc
stc
fucomi
jne
dec
dec
push
and
es
aad
xchg
pop
push
sub
cmp
mov
push
adc
je
sbb
mov
sub
add
jo
imul
cmp
movsl
fs
or
popa
sbb
andb
cmpsb
xchg
cmp
jl
sub
and
pushf
es
xorb
xchg
xor
jl
pop
jg
cmp
add
inc
sub
outsb
or
lret
bound
jb
sbb
jns
loop
xchg
icebp
add
push
inc
pop
jmp
mov
outsl
xor
adc
or
es
cmp
push
dec
adc
dec
jae
inc
test
dec
sub
push
outsl
cwtl
test
mov
inc
push
xchg
or
jo
out
dec
fmulp
jb
loopne
scas
fucomp
jecxz
sub
lods
mov
mov
and
shl
sub
xor
add
adc
repnz
shrb
call
push
je
sbb
aad
test
addl
lds
popa
xchg
push
xor
fsubs
sub
sub
pop
fiaddl
xchg
cwtl
jp
dec
sbb
mov
push
icebp
push
inc
inc
xchg
inc
sub
mov
cmp
pop
data16
movsl
sub
xchg
stc
daa
dec
test
arpl
das
xchg
and
cmp
xor
sub
shlb
mov
adc
enter
iret
gs
xor
daa
cmp
sub
popa
movsl
cs
repz
xchg
adc
jl
jo
ljmpw
scas
aas
and
dec
sbb
repnz
mov
mov
mov
outsb
std
in
lods
mov
push
cltd
mov
sub
add
inc
inc
push
inc
fwait
inc
mov
and
mov
pushf
sub
sbb
dec
cs
insb
fdivr
cmpsb
inc
push
and
clc
aad
bextr
xchg
cmpsl
jle
adc
jmp
fs
push
lret
sti
cltd
loope
cmp
or
cltd
imul
push
pop
loop
adc
imul
arpl
xor
dec
bound
lods
fisubl
insl
popf
js
outsl
or
xor
adc
xlat
sbb
cmp
xchg
test
push
sub
arpl
pop
les
ret
cmpsl
jge
enter
xor
sbb
inc
xor
fidivrl
leave
fsubl
imul
dec
cmp
push
inc
sbb
xchg
adc
jae
ds
cs
push
pusha
pop
push
ret
imul
push
idivl
mov
jae
js
mov
dec
cmp
lock
insl
and
adc
xchg
xor
and
sub
in
gs
fiadds
jae
xchg
mov
adc
pop
inc
and
adc
sub
aaa
cvttps2pi
mov
sub
jbe
jae
jb
lock
cmp
pop
cmp
sub
mov
or
pop
jae
clc
xchg
or
lahf
xor
lock
cmp
jo
push
sbb
js
adc
sbb
lods
not
test
cltd
jns
and
test
xchg
cmp
pushf
or
inc
inc
mov
sub
xchg
loop
adc
insb
outsb
stos
mov
aaa
adc
adc
mov
xor
xchg
adc
fmuls
mov
cmpsb
dec
xchg
push
lss
je
adc
loope
dec
cltd
jno
xor
test
scas
cwtl
js
popa
inc
ja
lcall
and
mov
push
cmp
xor
cs
dec
imul
xchg
cmp
push
sbb
sub
pcmpgtw
addr16
jb
fidivrl
dec
punpckhwd
pop
jmp
sub
and
jae
inc
sub
adc
inc
sarl
sub
xchg
bound
lods
dec
and
push
jne
or
mov
lds
or
sub
dec
mov
dec
nop
push
and
inc
or
xchg
pop
push
sbb
imul
or
jmp
adc
mov
dec
nop
es
es
mov
scas
lods
in
or
pop
outsb
or
repnz
jo
pop
mov
jmp
popa
addr16
mov
sbb
insl
bound
adc
xor
jo
or
jno
sbb
or
jo
jbe
or
xchg
loop
daa
jns
pop
mov
dec
out
inc
jmp
push
jle
and
xor
push
mov
xchg
pop
mov
push
pop
fcmovnu
pop
xor
and
mov
sub
bound
lea
sub
dec
sub
pop
outsl
jo
mov
imul
sub
push
push
add
into
or
or
faddl
xor
inc
and
cmp
pop
pop
or
aaa
jno
jns
icebp
mov
test
add
push
jb
add
mov
aaa
bswap
add
push
outsb
sbb
sbb
scas
lahf
sub
jge
movsb
pop
dec
pcmpeqb
ja
push
push
es
bound
pop
jae
xor
test
mov
hlt
hlt
mov
or
or
adc
mov
xor
les
movsb
out
inc
mov
jns
jmp
int3
jae
and
test
enter
push
es
loope
outsl
js
paddw
adc
test
je
ss
or
jno
rclb
lret
or
mov
pop
cmp
push
ss
mov
inc
das
or
and
out
andb
or
sub
cld
jbe
shll
bnd
dec
inc
push
dec
mov
or
pop
sub
push
push
cwtl
inc
dec
cmp
inc
xor
or
pusha
test
and
ds
dec
or
pushf
pop
adc
sub
sbb
sub
pop
sbb
sbb
or
in
and
dec
dec
repnz
or
adc
mov
mov
pop
mov
mov
jmp
inc
push
std
push
or
xchg
sarb
lcall
in
rolb
cmp
sete
imul
ja
movl
ss
pushf
sub
adc
or
jbe
fwait
sub
sbb
lcall
or
jb
and
pop
insl
das
xor
dec
xor
std
push
shrl
nopl
inc
cmp
dec
inc
sub
push
or
xor
cmp
sub
jnp,pn
jne
xchg
mov
xchg
and
or
aaa
dec
push
les
or
shl
jo
xchg
dec
sbb
add
ja
xchg
cmp
jno
adc
imul
xor
jbe
imul
insb
pop
pop
mov
xor
xor
pusha
xchg
pop
mov
das
shlb
mov
clc
repnz
aam
jp
call
xor
jns
test
and
aaa
repnz
loop
shrd
push
sbb
xor
lret
push
xor
mov
cmp
imul
xchg
cmp
mov
pusha
mov
cmp
xor
pop
cmp
xchg
mov
mov
mov
sbb
cmp
cmp
mov
std
sbb
inc
and
pop
rcll
push
adc
adc
push
push
fs
js
sbb
cmp
imul
dec
lcall
insl
insl
sub
pusha
inc
dec
inc
rol
push
jmp
jne
test
adc
lret
stos
jnp
xor
sbb
inc
push
insl
clc
pop
repnz
push
pop
popa
rorb
bound
fiadds
fwait
or
jns
dec
push
insb
repnz
push
push
sub
lods
cmovle
inc
xor
jae
inc
lret
push
pop
movsl
loopne
cld
mov
cmpsl
jne
add
cmp
cmpb
push
mov
inc
inc
jnp
repz
or
cmp
and
and
inc
loope
push
pop
aas
mov
dec
sub
cwtl
leave
in
hlt
imul
insb
xchg
xchg
lock
sti
xchg
leave
push
inc
inc
fcomp
xor
adc
fisttpl
jl
push
mov
jp
shlb
jne
pusha
pop
es
inc
jno
fs
imul
cmp
insl
push
movsl
ret
lea
mov
into
insb
cltd
xchg
inc
and
inc
dec
adc
and
jbe
mov
adc
loopne
fcoms
dec
outsb
xor
gs
push
jl
cmpsb
outsb
dec
or
sbb
cli
lcall
cmp
shrb
repnz
adc
test
sbb
jbe
nop
sahf
inc
lods
and
test
dec
mov
push
push
jae
lahf
ret
stc
ljmp
nop
mov
inc
dec
fiaddl
rcrb
les
movsl
sbb
inc
aam
aas
jbe
test
mov
das
fistps
shll
sbb
outsb
int3
jp
cmp
call
loope
mov
or
lret
adc
imul
imul
jne
sbb
push
pushf
sub
and
mov
add
add
mov
in
jg
pushf
lods
push
out
jb
xor
jbe
push
rcll
out
call
and
adc
mov
rclb
cltd
sbbb
and
and
insl
pop
push
rcll
adc
sbb
fs
stc
pushf
pop
dec
lods
hlt
fs
ret
and
arpl
adc
pop
inc
adc
sub
pop
jb
inc
sbb
mov
nop
jb
adc
into
jl
adc
mov
adc
mov
cmc
cmc
iret
push
dec
icebp
daa
mov
jb
outsb
xchg
mov
xchg
jns
sbb
adc
sub
sbb
aas
and
rclb
jb
loop
jle
add
bound
pop
mov
pop
insb
sti
hlt
je
or
push
repz
xchg
and
insb
sub
adc
dec
inc
adc
mov
bound
lods
je
xchg
aam
mov
jno
push
dec
xorb
pusha
push
xor
mov
push
push
jb
sub
inc
xchg
outsl
hlt
cmp
push
mov
shll
movsl
push
add
dec
mov
xorl
inc
je
outsb
inc
adc
cmovl
pop
stc
sub
insl
sub
push
in
or
dec
lock
je
fs
or
in
adc
cmpsb
add
loopne
pushf
sub
call
inc
or
cmp
ss
or
mov
das
jnp
mov
repz
sbb
and
jb
mov
ret
or
test
dec
cmp
out
adc
sub
dec
cs
aaa
jns
bswap
das
jl
sysret
push
pushf
or
pop
das
xchg
sub
adc
or
dec
ljmp
xchg
les
ficoml
pop
jb
cmp
adc
or
dec
pop
mov
in
rol
mov
dec
adc
and
push
or
inc
lret
inc
and
cmp
xor
jns
cs
leave
std
sub
ret
sbbl
cli
or
or
xor
adc
dec
or
or
sub
and
and
je
or
mov
js
mov
leave
add
arpl
xor
fmull
ja
jne
js
inc
sub
sbb
jg
test
or
arpl
push
imul
je
xor
xor
xor
add
in
repz
pminub
adc
mov
or
mov
test
and
adc
mov
loope
mov
mov
xor
pop
imul
loopne
les
in
jo
adc
and
sub
adc
or
xor
jae
push
jo
cwtl
add
nop
in
xchg
add
arpl
loopne
sub
push
add
adc
adc
push
mov
jge
add
mov
sbb
or
add
xor
dec
adc
lret
push
push
inc
push
xchg
adcb
inc
nop
adc
clc
cmp
mov
inc
loopne
shl
add
js
mov
dec
adc
dec
lret
cmp
push
cmpl
add
jb
pop
js
inc
or
rcll
xor
rcr
inc
cltd
and
add
js
push
and
sub
dec
inc
adc
in
dec
inc
add
loope
fcomps
nop
jecxz
add
js
pop
sub
cmp
and
add
rolb
and
stos
and
insb
addl
push
es
dec
dec
loopne
movsl
jo
jo
and
push
sub
shl
cmp
in
cmp
call
add
add
add
inc
sbbl
inc
sbb
in
push
add
pusha
cmp
or
adc
jo
sbb
or
add
adcb
add
adc
adcb
dec
push
dec
inc
inc
adc
jo
dec
push
inc
loopne
jo
int3
or
pop
cmp
or
jb
out
push
xor
cs
sbb
inc
jb
outsl
fmull
fs
jge
out
popa
jp
jle
insb
pushw
push
aas
push
outsb
rcll
push
push
arpl
mov
inc
imul
jbe
push
js
jne
fcompl
inc
mov
cmpsb
repnz
xor
push
inc
js
mov
addr16
fwait
jbe
testb
push
jae
adc
push
jns
cmc
cli
cltd
cwtl
popa
cld
arpl
push
mov
adc
push
jne
cmp
add
nop
inc
cmp
movsb
mov
es
adc
push
sti
ss
nop
out
imul
test
xor
outsb
ret
dec
adc
jo
mov
outsl
ja
push
dec
jae
dec
sbb
inc
dec
xcrypt-ofb
cmpsl
push
adc
dec
push
mov
lahf
bound
inc
movaps
and
insb
push
cld
push
inc
inc
jae
test
inc
push
jns
dec
icebp
aad
mov
adc
pop
sbb
xchg
push
dec
pop
inc
sbb
inc
out
aad
stos
jne
movsl
loopne
bnd
popf
mull
int3
xchg
hlt
inc
fwait
push
push
adc
iret
and
mov
dec
out
push
pop
jnp
lcall
adc
pop
out
testl
rolb
or
movsl
or
inc
and
and
rcrb
push
insb
xor
jne
jo
fstpt
gs
addr16
add
fs
push
sub
sbb
push
inc
dec
inc
iret
movsl
xchg
jb
push
je
xor
rclb
rcrb
or
sub
insb
adc
mov
cmovs
lods
fs
inc
jb
insl
cltd
adc
mov
inc
fwait
imul
or
repz
jo
inc
jae
cwtl
push
xor
dec
sub
test
addr16
lods
popa
ja
push
inc
or
dec
inc
lock
push
imul
lcall
fldt
dec
stos
jb
push
popa
dec
fstps
xor
or
jl
mov
sub
add
fs
and
pop
xor
cltd
adcb
inc
sub
xchg
push
imull
pusha
into
and
and
mov
outsl
pop
push
or
nop
scas
popa
jae
and
adc
stos
push
sub
imul
imul
popa
mov
or
test
push
push
jae
or
adc
gs
sub
mov
adc
lcall
subl
and
shr
out
push
pop
sti
mov
jmp
mov
mov
mov
jns
push
adc
movsb
jbe
and
push
arpl
inc
sbb
ja
clc
iret
xchg
popa
lret
dec
xchg
orb
negl
nop
dec
cli
dec
lcall
lcall
mov
inc
mov
inc
adc
cmp
and
imul
sub
rolb
sahf
sub
dec
fstpt
mov
adc
sub
mov
mov
push
push
fcoms
dec
fisubl
sbb
inc
loop
push
or
int3
dec
and
push
sbb
sub
or
xchg
mov
xchg
push
xchg
bound
adc
xchg
mov
xor
add
insl
outsl
mov
dec
push
inc
adc
arpl
or
mov
or
mov
push
sbb
or
pop
or
or
push
dec
imul
aad
sbb
inc
lret
sbb
iret
lea
and
std
jbe
push
dec
sbb
in
shrb
pop
and
cmp
inc
pop
add
dec
fcmovbe
gs
es
adc
push
adc
push
fnstenv
xchg
gs
sub
push
xchg
inc
xchg
adc
sbb
jae
out
jae
xchg
push
or
lods
bound
jne
jno
xchg
push
outsl
lret
mov
lds
dec
les
mov
stc
jbe
pushl
dec
inc
imul
inc
js
push
mov
jb
xchg
push
dec
xlat
sub
xchg
popa
xchg
jo
inc
imul
ret
loope
adc
mov
pushf
inc
out
xchg
popf
roll
sub
dec
cmp
loopne
popaw
lcall
stc
movsb
cmp
dec
sbb
cmp
xor
inc
rcrl
mov
sbb
push
into
cmp
dec
xchg
xor
sub
jl
subb
dec
xor
loope
jo
out
lock
out
rorl
dec
sbb
xchg
hlt
js
sub
insl
outsb
jmp
shlb
inc
dec
jecxz
je
aad
in
xchg
xlat
sbb
inc
push
mov
xor
pop
in
sub
fnstsw
or
xor
cmp
sti
xlat
jnp
sub
cltd
dec
and
mov
lods
sbb
inc
rorb
cmpsl
imul
pushf
mov
mov
dec
push
bound
mov
fs
cs
or
loope
add
pop
add
xchg
rcll
add
add
adc
add
je
orl
andl
loop
jp
jns
push
push
aaa
xor
adc
and
jns
outsb
sahf
push
push
insl
dec
shlb
ss
insb
stc
mov
or
cmp
mov
aam
pop
push
dec
dec
push
fistl
ret
fwait
pop
sub
xorl
cmp
sub
xor
or
jno
jo
fs
or
xchg
mov
je
add
pop
dec
arpl
jae
stos
jg
or
shll
pusha
clc
push
mov
notl
lcall
xchg
inc
dec
mov
jb
ja
push
dec
cmp
sub
cmp
mov
enter
in
xchg
or
adc
and
inc
and
mov
adc
das
shll
dec
inc
push
pop
mov
jo
js
test
add
test
sbb
rclb
fsubs
dec
in
lock
and
inc
adc
mov
and
dec
sub
cmp
and
dec
pop
xchg
and
js
mov
dec
mov
inc
mov
aam
fmull
xchg
in
and
inc
cld
add
inc
or
adc
sbb
dec
sub
dec
push
mov
and
dec
je
jl
test
mov
lods
xchg
mov
mov
mov
enter
fcoms
lock
mov
adc
in
or
adc
dec
sbb
and
sub
mov
clc
xchg
dec
and
push
and
dec
nop
xchg
cwtl
and
mov
mov
xchg
fsubl
call
add
fucomp
and
or
xchg
xor
cmp
cli
and
dec
pop
xchg
push
jl
test
mov
dec
cwtl
xchg
mov
mov
mov
dec
rclb
lock
mov
add
or
jo
rep
imul
fidivl
pop
insl
dec
push
inc
and
mov
push
dec
mov
pusha
cmp
or
pop
xor
enter
setg
xchg
fisubl
sub
adc
arpl
pop
lods
jne
adc
or
ss
fisubrs
data16
loopne
jno
movsl
and
ret
sub
xlat
mov
jne,pn
lcall
repnz
inc
popaw
imull
adc
movsb
jae
adc
mov
ljmp
mov
outsb
shrb
mov
sahf
test
xor
and
into
xor
cs
adc
push
xchg
and
or
aaa
adc
cmp
sbb
push
rorl
and
mov
cmp
sub
insl
loop
sub
dec
js
cld
push
out
or
and
fs
je
mov
mov
lea
sub
insb
dec
adc
adc
shll
pushf
imul
bound
imul
xchg
jae
mov
icebp
sbb
or
fwait
adc
or
outsl
cli
or
mov
push
cwtl
hlt
inc
jp
xchg
sbb
cmp
or
xor
jno
jp
call
js
daa
mov
bound
mov
fsubrl
fs
jl
aam
int3
imul
addr16
mov
insb
jne
sbb
pop
outsl
or
and
aad
push
adc
xor
adc
adc
xor
cmc
dec
std
out
inc
nop
repz
insb
sbb
push
dec
js
aam
sub
mov
xchg
push
mov
xchg
stc
sti
cmpsl
ficompl
bound
gs
mov
xor
jne
sub
sbb
test
mov
and
mov
call
mov
enter
inc
inc
cmc
sbb
or
or
loop
imul
rcrb
movsb
imul
push
xor
jo
movsb
rcll
fs
mov
shlb
mov
stc
push
out
add
push
xchg
sub
imul
and
mov
fs
imul
hlt
enter
popa
mov
arpl
testl
ss
xor
jo
cs
sbb
in
or
sub
das
jo
or
push
or
nop
cmp
out
sub
jle
sub
mov
dec
sub
or
sbb
inc
push
cmpl
jbe
js,pn
inc
mov
adc
xor
sbb
push
sub
mov
cmp
lods
sbb
mov
inc
inc
push
mov
ret
jp
pop
in
cmp
cmp
stos
xor
insl
repnz
add
xchg
xchg
or
in
push
inc
push
adc
or
inc
dec
xor
inc
outsl
push
adc
mov
adc
or
dec
inc
inc
lcall
push
pop
decl
jo
mov
push
lods
sbb
inc
inc
sub
cmp
xor
das
xor
xor
stos
xchg
jae
and
sbb
mov
cmp
mov
cs
test
je
cmp
sti
dec
dec
cmp
push
push
adc
push
push
dec
sub
cmp
inc
xor
insb
loope
xor
dec
outsl
adc
add
and
popf
sbb
je
or
xor
xor
fcmovb
and
push
inc
pop
push
movsb
imul
sbb
aaa
fldcw
xchg
sbb
adcb
and
inc
inc
aas
and
push
adc
and
scas
push
xor
lret
ret
pop
push
lods
daa
cmp
cmpsl
push
arpl
shlb
pop
mov
push
xor
hlt
data16
out
pop
aas
insb
mov
outsb
jns
mov
push
inc
dec
dec
inc
jl
mov
je
pop
aaa
lods
stos
xchg
stc
dec
test
push
pop
adc
sub
cli
out
negl
xchg
jb
xchg
test
jns
enter
fwait
push
xchg
jle
mov
inc
cmp
dec
sub
sub
push
sub
and
movaps
pop
xchg
sub
pushf
je
lret
push
idiv
iret
and
push
adc
mov
xchg
rol
sub
mov
pop
sub
ret
xorb
inc
sbb
push
mov
jns
fwait
pop
dec
popf
pushf
stc
xchg
sub
xor
nop
leave
jo
mov
or
or
mov
popa
mov
add
testb
lods
imul
cmp
dec
or
cli
jns
ss
jb
xor
mov
push
movsl
mov
jl
cli
push
sahf
cmp
in
and
adc
dec
outsl
cltd
inc
mov
int3
aaa
sbb
dec
sbb
dec
lret
jbe
push
icebp
xor
add
xor
jbe
into
add
cmp
dec
or
jns
mov
cmp
push
popf
das
mov
outsl
lea
jb
js
push
and
xor
push
cmc
fldl
lods
inc
imul
in
in
jno
inc
dec
or
das
rorb
movaps
cwtl
out
popl
inc
and
inc
insb
jmp
bound
mov
dec
xchg
xor
dec
fs
lcall
push
dec
and
cmpsl
xor
dec
test
adc
insl
jne
leave
jns
inc
pop
mov
nop
add
cmc
or
je
pushf
sub
push
and
push
add
pop
push
test
es
dec
mov
fistps
mov
mov
sbb
pop
shlb
fistpl
jp,pt
dec
mov
sahf
mov
dec
fs
je
in
sub
xor
add
cmp
pop
outsl
repnz
push
fs
scas
and
nop
jmp
lock
aas
mov
jg
cmp
cltd
and
jb
std
mov
fs
and
fbld
fs
pop
and
and
inc
xor
js
pop
leave
pop
sbb
adc
xchg
sub
adc
sub
sub
push
and
pop
dec
inc
cmp
mov
and
xor
pop
je
imul
dec
sbb
inc
sub
daa
dec
addr16
test
sub
adc
adc
and
push
sbb
sbbb
pop
dec
cmp
gs
mov
add
sbb
adc
pop
push
dec
inc
inc
dec
lea
mov
movsb
inc
push
jae
js
insl
imul
push
jmp
test
mov
int
gs
adc
xchg
push
stos
inc
in
lret
and
dec
jmp
cmp
shrb
xchg
adc
sbb
mov
sub
push
jbe
xchg
aam
push
or
je
sbb
gs
jl
dec
or
xor
imul
lea
cmpsb
or
push
rcrb
psubusb
dec
in
fcoml
mov
cmp
mov
movsl
enter
daa
and
push
aam
or
or
xlat
sbb
std
dec
or
js
lcall
or
lret
in
pop
sub
cmp
stos
jbe
or
push
push
and
fs
test
stos
inc
int
sbb
push
jne
and
test
insb
cmp
add
adc
sbb
push
pushf
cmp
pop
and
clc
aas
insl
cmpsb
or
dec
inc
and
repnz
les
adc
mov
nop
and
mov
iret
dec
dec
xor
adc
bound
dec
pushl
mov
stos
lods
mov
and
mov
cwtl
mov
or
in
mov
sub
cs
cmp
nop
lock
xchg
lods
fsts
push
outsb
and
outsl
mov
loope
insb
daa
cmp
xor
cmp
sub
inc
daa
push
pushf
not
sbb
adc
mov
xchg
leave
imul
lods
lret
mov
pop
mov
sub
mov
and
dec
xchg
repnz
cs
adc
dec
mov
imul
sbb
jecxz
dec
movsl
mov
sub
jo
jne
lods
mov
and
jns
sub
mov
xor
dec
fcoms
iret
or
aad
insl
mov
or
fwait
pop
mov
popa
ud1
sub
inc
outsl
push
sbb
outsb
daa
jecxz
push
rorb
mov
mov
and
inc
cmp
lret
xchg
push
cmpsb
dec
mov
push
jo
ds
or
dec
sub
push
and
push
jbe
jl
dec
les
std
xor
mov
loope
and
test
test
push
push
sub
push
push
scas
sub
pop
in
push
xor
fs
mov
fs
dec
push
lea
imul
jg
gs
mov
arpl
int
hlt
in
lahf
xor
gs
cmpsl
nop
pop
jge
insl
and
cld
dec
shll
cwtl
es
push
out
cmp
cmp
iret
xor
mov
lods
or
in
test
sub
cs
pop
lock
cmpsl
mov
jl
jl,pt
mov
jp
and
adc
add
push
cli
popa
inc
clc
dec
call
sbb
pop
lret
rcll
cmp
mov
lret
mov
in
mov
cwtl
fisubrl
cmp
xchg
and
sbb
cmpsb
mov
push
shlb
lods
aas
jo
pop
pop
pop
out
xor
and
mov
sti
push
xchg
mov
adc
daa
outsl
push
xchg
punpckhwd
popa
pop
scas
sbb
outsl
data16
sub
cvtdq2ps
loope
adc
mov
mov
movsb
jg
push
insb
mov
push
imul
lahf
lods
ret
push
pop
jns
cmpsl
cmp
mov
dec
jae
mov
dec
sub
or
xchg
mov
scas
sub
cmpsl
jbe
mov
fisttpll
scas
sbb
push
sub
sub
daa
andl
dec
sub
mov
lea
ficoml
adc
rol
inc
sub
inc
fbld
adc
nop
adc
lcall
or
dec
bound
or
setno
xchg
outsl
leave
pop
das
sbb
insl
add
xor
movsb
xor
fistpl
mov
or
cli
jbe
mov
push
rcrl
or
cmp
nop
dec
adc
mov
test
stc
or
xlat
sub
negl
pop
jo
jle
adc
test
imul
and
aaa
add
cmp
outsb
and
gs
cmp
insl
mov
insb
mov
shll
push
inc
sbb
push
push
mov
mov
mov
test
and
cmp
push
dec
sbb
out
in
dec
mov
dec
das
inc
push
test
pop
sub
mov
int3
ss
leave
cli
and
pop
add
std
aas
je
fs
sub
sub
inc
adc
scas
jo
adc
mov
push
je
push
sbb
cs
inc
shlb
in
dec
xlat
movsl
pop
adc
lcall
ss
imul
and
and
push
jb
cltd
in
ret
xchg
push
xchg
and
xor
cld
dec
lcall
shl
push
out
mov
fsubl
fs
mov
pop
mov
mov
cmc
fnsave
and
push
dec
test
jb
ja
and
jo,pn
mov
iret
pop
inc
lret
movsl
adc
push
insb
aas
lret
das
push
push
lock
cmp
addr16
hlt
and
outsl
notb
repz
dec
sub
inc
mov
mov
pop
xchg
fwait
dec
dec
adc
push
pop
or
add
adc
jo
inc
xchg
leave
adc
inc
sbb
jle
shrb
das
dec
adc
mov
push
mov
mov
sub
jge
jge
mov
fistpl
and
sub
push
imul
arpl
btc
push
push
movsl
ds
and
pop
and
lods
mov
frstor
push
sub
xor
scas
xchg
pop
mov
xchg
lahf
pop
sub
cmc
jo
xor
sub
adc
dec
fxch
ret
call
and
mov
dec
mov
push
inc
sbb
push
cmp
inc
fmull
shrd
and
lahf
cmp
repnz
sbb
and
inc
and
inc
rorl
cmp
pop
jecxz
jnp
cld
fs
mov
or
mov
xchg
xchg
mov
jg
sbb
shrl
and
xlat
test
out
fistl
in
jl
inc
jae
and
iret
jg
int
mov
mov
in
fcmovnbe
sbb
dec
mov
inc
aaa
xchg
test
jo
ret
xor
test
pop
cmp
inc
and
jbe
shlb
addr16
sbb
rcr
out
dec
pop
sbb
bnd
xchg
sahf
cs
sub
loope
mov
aas
push
inc
add
aam
in
sbb
and
or
sub
jo
cmp
or
inc
test
popl
bswap
jl
dec
adc
adc
adc
adc
and
cmp
cli
xchg
add
add
cmp
mull
lahf
mov
call
xor
sbb
lock
rorl
adc
mov
testl
fisubl
dec
cld
call
cli
adc
mov
in
sub
and
movsb
jmp
mov
shr
int3
out
movsl
insl
das
or
and
in
add
inc
popa
mov
mov
cli
sbb
dec
pushf
orb
mov
fs
adc
lahf
and
rcll
and
xchg
mov
push
gs
negl
cmp
cmp
xchg
daa
ljmp
xchg
shrl
icebp
out
mov
xor
jo
test
rorb
dec
xchg
adc
lods
inc
sbb
inc
pop
ficomps
jbe
dec
xchg
mov
sub
inc
cwtl
sub
addb
test
in
or
inc
in
sub
les
cmp
ljmp
mov
scas
pop
jmp
andl
sub
sbb
data16
pushl
test
in
lret
clc
std
and
inc
sub
pusha
push
pop
mov
cmpb
cltd
xchg
ja
ja
cmp
jge
outsl
inc
mov
dec
loop
pop
lahf
cli
pop
mov
insl
scas
or
pop
out
outsb
adc
mov
movsl
mov
lahf
fs
push
push
mov
popf
push
js
or
data16
test
repnz
pusha
decb
dec
sbb
jge
xchg
or
inc
gs
je
mov
jns
hlt
push
sbb
inc
sub
popa
push
stos
int
rolb
daa
inc
push
rcl
and
mov
push
leave
or
and
test
dec
cs
add
lds
dec
popf
inc
shrl
fsubl
mov
inc
stc
dec
ja
sub
adc
mov
ss
adc
jmp
leave
pop
cli
mov
cmp
dec
xor
fisubrl
jmp
rcrb
pusha
sub
xor
loop
mov
adc
xchg
mov
pop
fiaddl
sarb
js
and
jae
sbb
movsl
jge
sub
xor
sbb
int
je
fisubrs
adc
and
fdiv
xor
ja
cwtl
shll
cmp
hlt
add
jb
loope
or
outsb
insb
sub
test
insb
sti
mov
ret
add
sbb
cs
outsb
push
repnz
pop
lcall
daa
cmpsl
mov
lea
inc
mov
gs
enter
pop
pop
pushf
js
jmp
subb
fwait
in
les
inc
clc
xor
lods
std
movsb
xor
mov
lret
out
and
mov
mov
aad
push
adc
xor
mov
js
and
jbe
xor
ret
leave
jns
leave
pop
fsubr
push
sub
push
cmp
adc
push
mov
cmpsb
insl
pop
xchg
in
ja
cmp
dec
xchg
xchg
xchg
ret
into
imul
outsb
stos
int3
and
sub
dec
jl
cli
cld
add
in
mov
or
addr16
and
movsl
lds
dec
sbb
popf
sbb
jns
or
mov
or
jb
loope
test
cmc
insl
cmp
sub
cmp
das
inc
add
cmp
inc
jmp
sub
sarl
lret
sbb
adc
pop
ret
push
jmp
shl
jae
xor
out
shll
adc
mov
or
mov
pop
jg
sub
repnz
xchg
inc
enter
adc
cmp
je
lret
dec
mov
sub
fstps
lahf
add
lds
and
cmp
push
ja
je
insl
lcall
or
bnd
mov
dec
adc
add
loope
sub
cmp
mov
hlt
sub
fiadds
mov
pop
je
pop
or
dec
pop
aam
inc
ljmp
push
rorl
imul
pop
sub
mov
or
jl
out
xor
lret
mov
add
in
mov
sub
push
and
hlt
lret
fwait
outsl
sbb
xor
jo
pop
or
xor
sahf
push
sub
push
pop
cmp
xchg
out
xchg
push
aam
jne
push
push
or
clc
pop
leave
xor
insl
aas
fnstenv
dec
cltd
xor
xchg
mov
jmp
std
fldcw
iret
icebp
adc
xor
xchg
cmp
sti
sub
hlt
pop
sbb
ficompl
cmp
dec
push
or
jecxz
pop
popa
push
insl
mov
push
push
js
fldenv
mov
jnp
jg
inc
mov
mov
cmpb
push
dec
mov
xor
out
or
jns
cli
sub
adc
mov
push
sub
cs
testb
pop
dec
jbe
sub
aad
dec
inc
dec
push
je
dec
fs
imul
arpl
xor
mov
dec
dec
pop
jb
clc
xchg
jmp
jo
outsl
dec
cwtl
shrl
cld
movsb
push
sti
in
pop
pushfw
cmpsb
push
mov
push
fimuls
jl
sti
in
cltd
add
popf
hlt
outsb
adc
pushf
pop
cmpsl
add
jle
cmpsl
nop
or
xor
out
pop
bnd
jne
call
mov
jns
pop
xlat
lea
dec
xor
jmp
sub
outsb
adc
popa
loopne
cmp
xchg
test
pop
mov
push
mov
xor
in
imul
pop
into
repz
mov
add
mov
das
jns
jno
and
repnz
pop
iret
cmp
jo
push
dec
jne
loop
nop
mov
iret
dec
inc
sub
clc
pushf
hlt
xor
xchg
cmp
sub
dec
js
mov
insl
shrl
push
ja
dec
cmp
mov
sbb
jo
xchg
add
jle
dec
jne
jg
jmp
xchg
and
mov
outsl
jae
push
add
sbb
xchg
clc
mov
or
cmp
mov
pop
and
dec
push
inc
orb
movsb
dec
mov
mov
fmuls
lock
clc
mov
adc
sbb
mov
adc
and
dec
dec
xchg
pop
and
push
mov
dec
pushf
xchg
movsb
and
adc
and
dec
loopne
call
add
cwtl
adc
sub
xchg
cmp
dec
inc
push
pop
mov
je
jl
mov
test
mov
loopne
call
inc
cmp
mov
adc
and
dec
xor
inc
and
pop
mov
js
orb
cwtl
and
int3
adc
and
dec
in
xchg
clc
jo
lcall
sbb
sub
xchg
cmp
dec
inc
push
pop
mov
push
xchg
mov
nop
inc
cwtl
mov
and
dec
les
in
mov
adc
mov
or
sub
xor
cmp
dec
xchg
push
and
fs
mov
and
dec
nop
xchg
cwtl
and
mov
dec
rclb
in
hlt
mov
adc
mov
xchg
jl
in
and
or
pusha
adc
jo
js
andb
inc
cwtl
mov
and
dec
int3
xchg
fsubs
loopne
in
cld
mov
or
xchg
sub
xor
cli
and
dec
push
xchg
pusha
and
orb
dec
mov
inc
ror
aam
fsubl
dec
lock
cld
sbb
sahf
shll
and
pop
mov
adc
dec
jl
test
mov
mov
mov
inc
aam
mov
adc
and
inc
add
or
sbb
and
mov
call
inc
pop
pusha
mov
jo
js
adcb
movsb
mov
les
loopne
mov
adc
pop
and
pop
enter
and
dec
pop
xchg
and
orb
dec
movsb
xchg
lods
and
adc
and
dec
hlt
xchg
cld
sbb
shll
or
sbb
mov
xor
cmp
mov
pusha
adc
jo
js
test
mov
mov
mov
inc
loopne
mov
adc
and
je
mov
pop
and
push
or
mov
push
and
dec
fs
insb
and
mov
movsb
dec
lods
xchg
mov
rolb
fcoms
in
lock
cld
lea
loope
das
adc
dec
xor
cmp
mov
pop
and
dec
push
inc
test
mov
mov
inc
fsub
mov
adc
sub
or
and
dec
xor
adc
dec
insb
xchg
js
addb
pushf
pop
clc
xchg
lods
and
adc
and
dec
call
loopne
orl
dec
sub
adc
dec
fs
jo
jl
mov
and
dec
mov
mov
mov
fcoms
loopne
in
dec
hlt
mov
adc
sbb
mov
adc
shll
push
inc
pop
mov
js
test
xchg
xchg
and
adc
and
dec
fcoms
hlt
shll
sbb
and
sub
cmp
mov
and
dec
insb
xchg
je
addb
cwtl
adc
xchg
mov
rorb
call
insl
pop
icebp
xchg
or
and
inc
sub
mov
dec
and
dec
fs
insb
and
mov
movsb
dec
lods
xchg
mov
mov
aam
fsubl
dec
hlt
xchg
cld
jo
test
sbb
dec
sub
cmp
dec
adc
dec
push
inc
orb
dec
mov
shlb
inc
rcr
mov
adc
and
pop
adc
adc
sbb
and
sub
xor
cmp
mov
and
dec
fs
insb
and
test
test
mov
mov
fmull
clc
pop
adc
sbb
and
xor
dec
inc
xchg
dec
and
mov
and
dec
test
pushf
movsb
mov
dec
les
loopne
mov
adc
and
add
dec
adc
sbb
and
xor
mov
dec
and
dec
pop
xchg
and
jl
mov
mov
dec
pushf
xchg
movsb
jg
mov
mov
xchg
fsubl
in
lock
mov
adc
and
sub
mov
dec
dec
xchg
push
and
insb
mov
and
dec
nop
xchg
cwtl
and
adc
and
dec
in
in
and
inc
cld
add
scas
or
sbb
and
xor
xchg
inc
and
push
pop
mov
jo
jl
test
movsb
mov
mov
dec
fcoms
clc
shrl
adc
and
sub
mov
push
and
dec
push
inc
test
and
dec
mov
mov
fmuls
clc
pop
inc
adc
xchg
and
xor
mov
push
and
dec
fs
jo
jl
test
test
mov
mov
fmull
clc
inc
add
or
adc
and
mov
adc
dec
dec
push
xchg
pop
and
js
adcb
and
dec
cwtl
xchg
mov
mov
and
dec
rclb
hlt
shll
sbb
sub
mov
call
inc
fs
mov
and
dec
mov
lods
mov
mov
dec
fcoml
clc
add
mov
or
sub
xor
inc
dec
dec
xchg
push
and
insb
je
adcb
and
dec
pushf
xchg
movsb
and
adc
and
dec
in
in
and
inc
cld
add
mov
or
mov
xor
dec
inc
xchg
dec
and
pop
pusha
mov
jo
je
adcb
movsb
mov
les
mov
adc
and
dec
clc
mov
inc
and
mov
cmp
shll
dec
inc
push
pusha
mov
jo
js
adcb
mov
mov
dec
rclb
in
hlt
mov
adc
add
adc
and
cmp
hlt
dec
dec
xchg
push
and
fs
js
jl
mov
xchg
cwtl
and
rclb
and
dec
fcoms
lock
mov
mov
adc
sbb
dec
sub
xor
inc
inc
dec
push
mov
insb
and
dec
test
mov
mov
xchg
aam
faddl
mov
adc
and
add
dec
adc
sbb
and
xor
mov
dec
and
dec
pop
xchg
and
jl
mov
dec
test
mov
mov
adc
and
dec
loopne
in
and
inc
cld
add
mov
in
or
xor
inc
dec
dec
xchg
push
and
fs
js
andb
nop
xchg
pushf
and
adc
and
dec
fcoms
cld
or
adc
xor
mov
adc
insb
dec
jl
mov
xchg
inc
pushf
test
mov
shlb
rclb
call
or
and
dec
sub
adc
push
dec
pop
xchg
and
js
mov
dec
movsb
xchg
lods
and
adc
and
dec
hlt
xchg
cld
adc
and
adc
mov
adc
cmp
mov
pop
adc
dec
je
jl
mov
mov
loop
rorb
in
dec
hlt
xchg
cld
sbb
and
sub
dec
cmp
inc
push
mov
and
dec
je
jl
mov
mov
les
in
hlt
mov
adc
mov
or
cmp
adc
dec
pop
xchg
and
js
mov
dec
mov
inc
mov
fsubs
dec
call
loopne
orl
sub
xor
cmp
adc
dec
pop
xchg
and
test
pushf
dec
movsb
xchg
lods
and
adc
and
dec
loopne
in
and
inc
clc
inc
enter
sbb
and
sub
mov
inc
bound
fbstp
popa
jp
xchg
insl
mov
movsl
jae
or
cmpsl
sbb
adc
mov
fs
stos
adc
std
push
or
outsb
out
push
imulb
push
mov
imul
xor
or
sub
sbb
mov
rolb
or
push
or
insl
pop
insb
add
pop
jo
iret
mov
mov
jae
and
outsl
xor
adc
inc
or
outsl
loope
jb
and
bound
test
jne,pt
adc
jae
push
jns
je
fdivrl
or
cwtl
test
bound
imul
lret
movsl
mov
cli
shl
gs
or
popa
dec
xor
jns
je
mov
addr16
dec
or
rclb
test
push
mov
adc
ss
cmp
insb
fmull
push
jp
insl
test
xchg
dec
or
mov
jns
mov
jbe
outsl
or
popf
cmpsb
adc
sbb
xchg
ja
mov
adc
and
push
ja
je
jp
add
and
dec
mov
ficoms
or
xor
pop
pop
push
punpckldq
imul
leave
push
hlt
sbb
xor
or
aam
fists
xchg
jno
lret
ja
or
mov
or
popf
mov
xchg
xchg
lods
mov
inc
je
arpl
jmp
jne
mov
jns
jae
or
sub
sub
and
push
insb
adc
pop
ljmp
lcall
lods
outsb
loop
aad
out
addl
insl
push
mov
mov
outsb
sub
data16
and
repnz
pop
adc
nop
aam
mov
or
or
ret
aam
nop
je
inc
jns
dec
pop
and
dec
daa
cmpsb
adc
sub
inc
adc
adc
inc
or
push
jp
jae
adc
adc
jns
leave
cs
fucomi
jnp
mov
outsl
or
insl
mov
mov
dec
bound
ja
fstpt
or
mov
mov
in
dec
test
mov
adc
sbb
adc
push
add
xor
js
jecxz
adc
inc
mov
mov
jns
sbb
movsb
mov
imul
inc
or
adc
std
stos
pop
sub
jl
and
sbb
dec
sbb
sbb
adc
jae
mov
and
popa
insb
dec
pop
ss
add
xchg
ss
fisubs
adc
lea
add
xchg
leave
lret
mov
call
xchg
jns
and
je
fisttps
gs
dec
es
or
insl
sbb
mov
or
fs
or
gs
je
jecxz
lods
sub
mov
sbb
repz
imul
mov
sub
nop
mov
sub
jp
push
call
adc
push
rcrl
adc
push
fisubl
repz
aam
out
jne
loop
push
xor
add
sub
faddl
inc
popa
xchg
sub
adc
adc
gs
jecxz
adc
cltd
mov
mov
scas
push
push
or
cmp
inc
sbb
lret
fwait
imul
insb
jne
mov
popf
das
out
xchg
and
xchg
jae
cmp
cmp
cli
pop
pminub
jae
and
mov
gs
adc
mov
jmp
push
adc
mov
pop
or
insl
lods
sbb
sbb
insl
adc
push
and
push
cmpsb
loopne
mov
push
jbe
outsb
mov
sbb
lea
mov
adc
leave
cltd
addr16
jb
jns
test
ret
scas
or
pop
lcall
sbb
push
in
movsl
mov
or
adc
or
and
outsl
pop
or
movsl
inc
or
outsl
push
xor
lcall
jne
add
addl
dec
outsb
jb
adc
nop
rcr
rorb
aas
data16
fnstcw
lds
or
adc
adc
inc
sbb
in
je
adc
push
ja
icebp
bound
adc
stos
test
aaa
in
fildl
sbb
movsl
pop
lret
or
rolb
adc
dec
lcall
push
movsb
push
popa
adc
and
lods
adc
pop
outsb
rep
adc
test
insl
adc
into
in
js
adc
jecxz
data16
les
ret
push
js
outsb
and
or
xchg
mov
adc
nop
test
int
inc
xchg
push
inc
movsl
inc
sbb
cld
leave
test
add
inc
insl
bound
sbb
and
mov
add
push
daa
mov
sub
jae
stc
and
popf
outsl
mov
adc
or
xchg
ja
inc
loopne
inc
in
and
dec
pop
push
sbb
xor
push
daa
inc
mulb
add
xchg
int3
xor
push
sub
push
adc
adc
aad
jno
xchg
or
sbb
push
jb
rcr
inc
repz
jle
adc
mov
movsb
jno
sub
movsb
or
popf
or
sbb
jp
or
mov
push
or
bound
clc
arpl
clc
imul
adc
ja
or
clc
cmc
shrl
or
int3
jp
push
cmp
leave
dec
or
jne
mov
gs
int
adc
je
or
mov
shll
cmpsb
icebp
out
movsb
rcll
mov
adc
jae
imul
addr16
ja
insb
mov
insl
sbb
mov
jne
xchg
int3
ljmp
cmpsl
or
sbb
jae
dec
stc
add
jns
adc
cmc
dec
punpckldq
mov
loop
mov
or
outsb
sub
ja
mov
aaa
dec
leave
pop
sbb
sbb
fadds
mov
or
sbb
sub
cmp
lock
js
jo
jo
es
adc
dec
or
mov
popa
fbstp
or
leave
sbb
cmpsb
scas
js
fadd
imul
jbe
dec
in
nop
xchg
jecxz
fs
addr16
test
test
add
ss
and
xchg
lods
mov
mov
pop
or
push
daa
or
je
mov
addr16
adc
insl
or
push
insb
adc
icebp
imul
sub
mov
fldl
or
push
sbb
imul
imul
ficompl
adcb
bound
adc
sub
clc
add
rclb
or
lods
mov
push
mov
outsl
sbb
adc
push
loope
in
js
jb
shrb
imul
insb
sub
adc
sbb
jns
inc
stc
xor
jge
movsb
or
enter
mov
in
sbb
inc
lods
jp
leave
adc
pop
and
test
jne
imul
adc
inc
inc
mov
pop
xchg
loopne
sbb
pop
pop
ss
sbb
pop
or
or
ja
xor
lret
movsb
adc
xchg
fs
outsl
repnz
lock
push
call
mov
dec
xor
es
popa
adc
dec
or
or
insb
adc
inc
inc
adc
adc
jo
gs
out
icebp
xchg
int3
popa
xor
adc
outsl
adc
mov
dec
and
nop
or
jae
scas
mov
insb
bound
cmpsl
or
imul
adc
test
sub
or
mov
sub
imul
or
addr16
pop
into
push
out
mov
ficoml
testl
mov
mov
push
lods
add
dec
xlat
adc
mov
data16
adc
inc
jae
or
cltd
mov
adc
push
push
sbb
push
shrb
adc
repnz
enter
popf
fs
adc
repnz
sbb
sbb
dec
xor
push
xchg
or
or
xor
adc
xchg
je
jns
ficoms
adc
cmp
xor
dec
dec
or
mov
call
add
unpcklps
push
arpl
or
push
sub
ds
push
fdivrl
stos
fsts
jne
pop
push
imul
stos
sbb
scas
aam
int
sahf
jne
popf
in
or
or
movl
or
cli
das
in
insb
mov
mov
test
adc
jns
jp
dec
bound
sbb
fmuls
negb
dec
adc
add
popa
mov
outsb
adc
repnz
inc
sub
adc
push
lods
pop
je
push
lods
out
jo
dec
in
pop
dec
ficompl
xchg
repnz
mov
dec
sbb
dec
sub
add
push
mov
in
cltd
movsb
jns
mov
dec
xor
jno
mov
cmp
dec
ficomps
or
mov
out
sahf
icebp
xlat
in
jecxz
or
jmp
jns
mov
mov
adc
push
push
dec
pop
xchg
test
outsl
sbb
inc
addr16
dec
adc
stos
sub
mov
dec
bound
leave
addr16
pop
aad
call
insl
fwait
adc
repnz
dec
adc
adc
jo
std
push
cmp
ja
mov
lret
inc
or
and
sbb
push
or
push
sbb
mov
pop
insb
and
adc
gs
loope
push
and
or
sbb
jp
imul
rclb
mov
sub
dec
or
push
or
insb
cli
stos
or
insl
adc
gs
sbb
or
jae
pop
jb
out
push
stc
cmp
test
and
xchg
fmull
ja
pop
scas
adc
ljmp
sub
test
lods
adc
push
or
movsb
adc
icebp
fs
scas
adc
mov
fs
mov
mov
and
dec
adc
cmp
out
jb
xchg
push
sti
inc
xor
test
dec
push
outsb
and
adc
pop
or
sbb
mov
movsl
or
mov
outsl
adc
adc
test
mov
lahf
pop
adc
jbe
jne
imul
cli
xchg
add
and
in
pusha
mov
cmpsb
xor
mov
popa
cmc
dec
sbb
inc
adc
jae
adc
or
mov
push
outsl
and
lcall
cmp
enter
fmull
cltd
pop
dec
ljmp
leave
adc
xor
adc
lcall
or
sbb
and
imul
into
out
or
pop
aas
dec
or
loope
jns
adc
das
std
adc
imul
shl
jno
cmp
sbb
adc
out
mov
xchg
mov
adc
adc
popa
and
mov
or
push
jnp
or
insl
or
adc
jg
jb
out
dec
test
or
jp
jo
jo
pop
mov
or
cld
int
push
mov
push
push
and
or
cmpsb
mov
popf
mov
adc
pop
dec
popf
cmp
adc
push
adc
mov
jl
or
adc
mov
or
adc
pusha
rclb
push
mov
mov
pop
loopne
ret
add
adc
popf
sbb
push
dec
inc
into
or
std
jae
loope
or
cmpsb
mov
adc
outsb
stos
or
fnstcw
in
and
xchg
out
xchg
bound
or
jb
decl
mov
daa
cmpsl
mov
adc
fisttpl
push
jp
or
sub
inc
movsb
hlt
and
adc
mov
repz
adc
out
and
les
adc
rcrb
cmpb
cmp
dec
ljmp
jge
cwtl
xchg
push
jae
sub
sbb
je
sub
mov
cmpsb
or
ret
pop
bound
add
test
mov
stos
or
jae
cmp
scas
movsbl
imul
sub
insl
lret
jnp
adc
in
in
mov
push
push
mov
pop
adc
sub
aaa
adc
sub
or
or
ds
sbb
int3
mov
std
sbb
inc
in
xlat
mov
out
lret
sub
daa
bound
jo
stos
mov
icebp
ljmp
sub
adc
push
xor
les
int3
addr16
inc
sub
mov
in
push
jge
cwtl
sbb
fwait
call
outsl
fs
xchg
mov
push
jg
xchg
xor
mov
sbb
in
imul
xchg
sbb
adc
lahf
mov
outsb
rclb
adc
mov
sub
test
dec
jb
cmpb
shll
sub
adc
fcomps
mov
jmp
cmp
fs
xor
xchg
sbb
pop
pop
dec
test
jg
test
or
and
into
dec
in
adc
mov
enter
ja
mov
inc
sbb
int3
xchg
adc
das
data16
sbb
fs
out
sbb
pop
adc
and
or
adc
dec
imul
xchg
dec
daa
push
lcall
lods
or
mov
mov
ficomps
ja
mov
icebp
mov
push
rorb
dec
test
ret
sbb
pop
xor
clc
les
and
aam
in
inc
or
loop
jne
test
mov
out
xchg
test
ljmp
pop
in
popf
cs
jb
fiaddl
sub
dec
clc
daa
jmp
daa
ret
call
fdivl
adc
sahf
out
fwait
orl
enter
pop
mov
adc
and
sysenter
adc
les
push
xchg
push
and
sub
mov
in
dec
adc
nop
sbb
int3
sub
data16
sbb
stos
or
in
adc
push
or
aad
dec
outsb
dec
je
sub
gs
cltd
or
jg
sbbl
outsl
mov
addr16
fwait
xchg
dec
sbb
cmp
mov
sub
lret
ficompl
data16
ficoms
gs
jo
push
push
adc
jbe
adc
sti
or
jns
xchg
test
dec
sub
jb
or
insb
push
pusha
int3
sbb
dec
sbb
shrl
cld
push
jns
dec
test
add
dec
xchg
mov
sbb
sub
cwtl
adc
jae
or
adc
in
inc
sbb
or
xchg
adc
aaa
xlat
mov
cwtl
lcall
push
in
sub
adc
jo
xchg
adc
hlt
loop
push
jnp
dec
push
aam
jb
leave
scas
jg
or
push
jne
cmc
or
or
imul
adc
cmp
xor
js
js
nop
or
dec
adc
adc
popf
pushf
scas
dec
or
jp
push
rcrb
sbb
jb
sub
push
jne
fwait
pop
pop
adc
mov
jle
push
dec
jne
dec
mov
and
push
push
or
imul
or
xchg
jle
pushf
jle
sbb
inc
or
and
movsl
adc
mov
sub
xchg
fwait
and
in
mov
cmpsl
in
fidivs
movsl
push
shlb
sub
jo
push
data16
adcb
inc
and
cmp
fistl
mov
jae
sbbl
dec
jecxz
js
nop
sahf
cmc
jb
lcall
mov
lds
or
mov
add
hlt
adc
cmpsb
sbb
jl
insb
gs
push
rolb
sbb
adc
or
inc
sbb
or
xchg
jne
ret
xchg
jp
push
outsl
and
cmp
xchg
cwtl
imul
push
or
pushf
int
lcall
out
ja
insb
rcr
and
mov
dec
jns
xor
inc
outsb
jl
cmovge
jl
inc
adc
or
leave
push
or
imul
clc
add
adc
cmp
loope
jns
lcall
test
lock
loop
das
dec
adc
or
ja
jl
and
xor
mov
sub
aad
mov
bound
inc
ret
nop
leave
adc
push
pop
pop
es
adc
add
daa
mov
adc
inc
into
push
inc
and
sarb
fisttps
push
inc
jae
outsb
iret
flds
or
fists
mov
jbe
cmp
data16
xchg
jl
or
je
scas
dec
inc
fs
adc
les
mov
push
xor
imul
lcall
ljmp
insl
adc
add
dec
mov
or
fsubrl
or
sub
lret
jb
dec
adc
dec
subb
jl
lods
rcr
inc
mov
adc
adc
cmp
and
adc
mov
jb
imul
adc
pop
cld
stc
insl
mov
xor
jbe
cmpsl
or
or
loope
or
jne
xchg
jo
pop
cmovb
insl
xor
dec
hlt
jo
adc
lcall
dec
fs
rcrb
out
push
jp
inc
xchg
arpl
push
adc
bound
imul
xor
mov
sub
or
mov
jecxz
jecxz
inc
nop
push
xor
insl
adc
imul
cmp
rclb
push
cmp
repz
rcrb
adc
adc
inc
les
sbb
jecxz
jecxz
dec
out
enter
jo
and
sbb
inc
ds
cltd
mov
sbb
and
jp
push
sbb
imul
pop
adc
dec
or
mov
push
mov
imul
mov
inc
mov
mov
repz
pop
je
rolb
cmp
lods
sub
push
lcall
data16
sbb
adc
out
adc
sbb
adc
jae
ja
xor
and
lods
mov
loopne
ds
adc
dec
push
inc
or
adc
jbe
arpl
adc
sub
pop
adc
loop
push
in
adc
dec
cmpsl
push
fs
adc
and
mov
dec
gs
pop
loop
sub
adc
xlat
daa
pushw
fildll
xor
aad
test
inc
or
movsb
adc
jno
adc
test
stos
fchs
xor
in
push
cmp
sbb
insb
and
push
bound
imul
add
cmpsl
jbe
sbb
insb
adc
adc
popa
rcrb
mov
sub
adc
js
mov
cld
cltd
sbb
inc
xchg
mov
imul
ja
or
adc
addr16
ljmp
pop
mov
fs
adc
bound
addr16
int3
push
mov
jecxz
aas
push
and
push
fldcw
fwait
dec
adc
test
or
testl
popf
arpl
aad
pop
push
and
push
sub
push
pop
mov
mov
ret
data16
sbb
xchg
nop
sub
cmp
push
mov
imul
mov
sbb
jmp
aam
push
lds
adc
and
pop
or
xchg
movsb
inc
mov
sub
cmpsb
push
sahf
push
arpl
mov
les
adc
adc
or
les
int3
jns
lcall
push
loop
add
adc
jae
and
or
adc
adc
shrb
loop
adc
or
outsb
adc
mov
jb
stos
xlat
xor
sbb
mov
stc
fwait
xchg
pop
adc
xchg
xchg
push
je
loop
push
sub
fildll
push
xchg
mov
sub
pusha
jb
adc
and
pop
pop
fwait
stc
inc
or
adc
ficoms
mov
scas
cmpsb
lcall
icebp
imul
adc
outsb
push
jo
jns
or
push
std
and
push
or
jmp
lret
mov
adc
outsb
clc
clc
idivl
bound
dec
jb
dec
loop
imul
aaa
in
lea
in
or
push
cmpsl
cmpsl
pop
enter
icebp
push
inc
dec
add
and
orb
adc
or
or
dec
or
inc
xor
aas
add
sub
lods
hlt
inc
or
dec
pop
cmp
lea
jmp
inc
add
add
push
pop
xorb
inc
loop
cmp
mov
sub
add
add
js
mov
lods
push
or
arpl
or
cmp
rolb
or
aam
js
inc
jge
jge
push
pop
sbb
incl
push
sbb
or
adc
inc
jne
stc
xor
dec
pop
pop
cmp
xor
call
push
cli
push
call
mov
push
and
xchg
mov
push
call
add
sub
inc
pop
cvtpi2ps
pop
pop
push
sub
mov
lea
inc
xlat
rep
mov
stos
sbb
push
push
dec
push
dec
add
add
test
imul
mov
fnstcw
lea
lahf
dec
dec
jns
or
mov
fbld
inc
fs
mov
jge
inc
scas
sbb
mov
aas
into
add
es
insl
xor
xor
dec
dec
and
inc
mov
xlat
inc
push
adc
xchg
xor
insl
pop
sbb
adc
xor
icebp
add
xchg
adc
cmc
mov
and
pop
jmp
pop
xor
cmpsl
inc
bound
xor
sub
inc
in
sahf
and
gs
push
cmp
mov
push
inc
xor
xchg
inc
stc
negb
cmpsb
test
inc
inc
loopne
imul
adc
jbe
and
sbb
xchg
push
and
lods
fiadds
lea
popa
mov
inc
push
xchg
jo
in
insb
out
xchg
push
sarb
xchg
sbbb
test
or
xor
push
test
test
test
arpl
or
or
pop
inc
inc
jl
xor
pop
mov
jae
cmp
cmp
imul
push
pop
jno
jp
in
dec
arpl
repnz
or
addl
fiadds
add
and
es
daa
jae
inc
add
ljmp
push
sub
push
dec
rclb
xor
rolb
dec
imulb
push
adcb
push
inc
inc
cmc
push
inc
bound
inc
rcl
inc
outsb
test
jno
loope
sub
or
jne
jo
lret
push
dec
push
jmp
or
loop
adc
jmp
rcr
cmp
test
fcmovne
rcl
push
dec
int3
repnz
das
inc
push
ret
add
or
add
repz
andb
hlt
inc
orb
push
gs
xchg
push
and
inc
jg
rclb
sbb
inc
adc
xor
rolb
add
addr16
and
inc
jmp
pop
dec
dec
xor
addb
xor
cltd
loop
cli
sbb
loop
jo
cwtl
cld
ret
add
xchg
imul
xor
fsts
pop
movsl
lcall
jp
jg
add
lea
cmc
cmpsb
sbbb
repz
shrb
in
xchg
add
pop
popf
fdivrl
ret
adc
adc
mov
js
pop
stos
push
push
cmp
ficomps
ss
push
test
adc
pop
xchg
lock
fcompl
xchg
lret
push
iret
data16
gs
shlb
repz
es
add
cwtl
cld
fwait
int3
sub
sub
sahf
jae
add
pop
adc
popf
xrelease
into
lret
ss
rorb
sbb
inc
xor
adc
test
jnp
cmpsb
fbld
jns
sub
fimuls
add
pop
andl
mov
lods
xor
enter
dec
ret
or
xor
add
bound
loopne
cld
in
leave
pop
jmp
cli
fdivr
push
ficomps
clc
jns
mov
fsub
lock
fistps
lahf
mov
out
ljmp
cmpsl
mov
mov
lock
jl
loope
cli
sahf
fs
imulb
inc
jg
and
leave
int
sarl
ret
call
rcrb
push
sbb
push
insb
or
mov
test
popf
jae
mov
push
inc
arpl
pop
inc
sbb
mov
dec
xchg
sub
call
dec
mov
push
push
mov
insb
sub
sub
fsubrl
out
lods
cld
sub
ret
movaps
cmpsl
push
jle
je
mov
mov
pop
sarb
nop
andb
mov
sub
sub
scas
pop
mull
faddl
sub
xchg
pop
xchg
fldenv
pop
addr16
push
outsl
hlt
push
cs
sub
mov
cmp
das
mov
adc
negl
and
xor
sbb
push
pop
jns
and
leave
icebp
lock
mov
in
cmp
cwtl
rcr
repnz
jne
jecxz
les
push
jne
sub
cmp
jl
xor
adc
pop
iret
cmpsl
loop
push
mov
filds
popf
shrl
xchg
call
push
jne
cwtl
gs
dec
push
push
je
js
adc
out
sub
mov
sub
jl
movsb
mov
lcall
cmp
inc
sub
or
jne
xor
or
mov
insl
adc
repnz
inc
hlt
push
imul
inc
rcrb
cltd
push
mov
nop
inc
sub
sub
jb
or
das
mulb
sub
or
nop
in
xor
lahf
fisubrl
cld
sub
ja
cmp
sub
xor
cmpsl
sub
or
xor
mov
dec
dec
pop
into
rolb
jl
add
pop
dec
xchg
or
rclb
add
and
fs
rolb
inc
addb
leave
adc
adc
pusha
add
jbe
and
add
dec
push
sub
std
int3
inc
fs
mov
jo
scas
je
xchg
shlb
pop
or
push
dec
jl
mov
add
icebp
les
dec
or
adc
outsb
jb
or
sub
inc
push
inc
pusha
xor
lock
push
mov
or
pusha
add
dec
or
dec
push
add
mov
add
pop
xor
sub
sbb
adc
int3
cmp
enter
sbb
cmpsb
push
orb
sub
push
sub
loope
and
adc
enter
pop
and
or
nop
and
dec
and
push
cmp
push
adc
mov
and
add
pop
call
add
nop
out
sub
add
or
sbb
movsb
sbb
jo
cmp
adc
mov
xor
inc
call
inc
adc
adc
add
clc
and
in
cmp
rolb
push
jmp
mov
xor
add
xor
pusha
sub
adc
rorl
lods
or
in
sub
insl
sub
cltd
subb
dec
mov
daa
push
or
movsb
pop
mov
add
jl
movsl
or
or
and
xor
xor
xor
clc
push
mov
or
fldenv
dec
cwtl
sub
int3
push
add
sbb
mov
lds
dec
sub
or
add
push
jg
add
xor
cmp
jmp
out
popf
adc
or
leave
sub
cmp
out
add
pop
xorl
add
xlat
out
add
je
in
aam
hlt
jg
je
add
push
or
push
mov
jp
lock
push
pop
mov
mov
or
addr16
mov
add
adc
push
cmp
nop
inc
jne
cmpl
clc
sub
add
call
into
hlt
cwtl
hlt
orl
adcb
pop
popf
add
fwait
inc
aam
adc
dec
in
and
cli
add
je
mov
lock
setp
adc
pextrw
lahf
rclb
cmp
sub
in
sbb
and
loope
aam
inc
jns
je
jge
fcoms
jo
jmp
mov
dec
cmp
add
jle
cmpsl
jnp
in
pop
cli
js
sub
icebp
pop
addl
and
mov
pop
hlt
push
dec
push
inc
fsub
sbb
sbb
jle
push
movsb
mov
ror
inc
int3
loopne
add
pop
andb
ds
popa
jle
in
sub
mov
jo
and
adc
or
add
pop
pop
mov
inc
nop
sbb
mov
out
jmp
fildl
jae
js
push
rolb
cmp
push
mov
adc
shll
imul
adc
pushf
add
arpl
cmp
jmp
add
cli
cltd
shll
add
xor
clc
sbb
rorl
add
push
dec
push
stos
dec
push
inc
add
arpl
pop
sub
push
pop
push
mov
out
add
lea
clc
sbb
sti
cld
pop
testl
idiv
inc
push
push
and
nop
or
cmp
fs
lods
lock
loop
xorb
mov
or
cmp
scas
loope
xor
push
pop
push
sub
inc
movzwl
mov
mov
clc
inc
dec
add
mov
sbb
jne
or
je
pop
and
pop
add
push
call
mov
push
xor
test
push
adcb
add
xchg
add
adc
je
ficomps
sbb
sbb
fistl
push
inc
in
xor
pop
xchg
push
ja
filds
lea
push
iret
push
call
orb
push
jmp
or
xor
cmp
int3
ss
add
dec
add
push
mov
xor
ss
push
stos
jne
lock
inc
str
push
dec
inc
dec
push
dec
pop
lahf
pop
dec
and
popa
xor
and
jl
fsubs
test
or
mov
pop
addl
pop
jl
out
mov
cmp
xor
jecxz
aas
cmpl
les
mov
arpl
sbb
imull
rorb
xor
push
sub
in
dec
sahf
add
out
aad
loope
cmp
mov
jmp
inc
les
sbb
shl
push
push
xchg
jecxz
ss
cmc
mov
add
sbb
das
mull
cld
mov
cmp
inc
ja
repnz
adc
sub
int3
jns
das
xchg
dec
mov
mov
loopne
repnz
sbb
pop
stos
add
pop
add
jo
xorl
pcmpeqw
dec
dec
das
mov
pop
je
or
iret
adc
test
scas
call
jne
repz
push
inc
jo
sub
mov
adc
ja
sub
add
shl
pop
jo
mov
dec
nop
xchg
sbbl
mov
add
loope
notb
inc
sub
sbb
mov
addb
add
lret
fwait
cltd
fsubl
xchg
push
mov
mov
out
mul
inc
dec
or
jl
pushf
cwtl
add
add
pushf
pop
inc
mov
or
xchg
imul
loop
jg
cmp
mov
and
adcb
or
sbb
pop
mov
inc
fsub
sbb
inc
popf
xchg
adc
adc
mov
lds
mov
pop
and
push
xor
loopne
or
xor
adc
mov
mov
sbb
mov
and
inc
inc
cmp
cltd
or
sbb
mov
and
xor
inc
jg
icebp
sbb
pop
je
mov
inc
xor
loopne
enter
aaa
inc
rolb
and
movsl
xchg
xchg
pushf
sub
es
push
mov
mov
shrl
bound
dec
jns
sbb
shlb
pushf
ds
aaa
jo
das
rcrl
mov
adc
mov
in
std
cmp
xchg
clc
xchg
mov
adc
sub
std
cmp
jb
into
sarb
data16
sbb
or
jne
lock
int
loope
iretw
mov
dec
push
flds
inc
icebp
out
sub
dec
adcb
enter
xor
enter
add
movsl
mov
adc
pop
mov
addr16
or
or
xor
adc
int
enter
cwtl
or
inc
test
pop
shrb
push
push
xchg
enter
movsl
xor
mov
lcall
subb
fdivs
pop
out
inc
add
in
xchg
pop
mov
fnstenv
mov
jb
jge
cmp
xchg
rclb
test
in
pushf
adcl
inc
mov
xchg
jne
sub
inc
pushf
push
jbe
jns
push
je
mov
jne
xor
jle
pop
lret
jns
pop
and
aas
xchg
in
xchg
aad
and
in
or
fnstenv
inc
jp
aad
imul
nop
jecxz
and
popf
mov
cmp
fcomp
lcall
dec
xchg
jge
fdivrs
sarb
out
mov
out
or
into
loopne
jbe
movsb
aaa
xor
std
jle
xlat
cmp
not
mov
jl
and
test
fimuls
jb
test
mov
decb
mov
and
push
push
dec
cmp
dec
jnp
flds
inc
jg
les
add
lods
push
adc
jmp
pop
pop
test
imul
enter
xor
popa
push
dec
ret
dec
xor
mov
push
and
aaa
xor
movsb
mov
cmp
cmp
dec
add
or
addr16
aam
cmp
push
loop
mov
or
mov
lret
dec
outsb
les
ja
jae
ljmp
sbb
adc
cmp
adc
push
fisubrl
xchg
pop
add
inc
cltd
and
dec
or
pushf
push
cmp
std
lret
adc
dec
jo
inc
inc
addl
in
sbb
add
addr16
dec
loop
pop
movsb
loopne
jne
push
push
add
pop
rcll
mov
push
bound
mov
adc
or
outsl
xchg
js
xor
cmp
mov
add
divl
sbb
fimuls
mov
add
cld
and
add
mov
dec
aam
jo
mov
sub
mov
jge
sbb
push
sub
pop
inc
lret
int3
gs
mov
dec
iret
cwtl
and
jge
faddl
push
sbb
cmp
rclb
fwait
test
rorb
cs
cmpsb
cwtl
testb
or
movsb
icebp
pusha
or
test
xor
inc
orl
in
add
sbb
xchg
and
inc
push
arpl
adc
test
or
mov
adc
js
adc
stos
adc
cmpsb
jmp
mov
xchg
adc
xor
xor
xchg
stc
or
mov
mov
das
or
and
test
add
fadds
inc
jo
test
mov
xchg
cmp
and
and
sbb
lcall
aaa
adc
add
popf
lods
adc
sub
xlat
faddl
pop
jns
mov
pop
std
cld
into
xchg
leave
dec
cmp
jecxz
cmp
inc
imul
push
adc
inc
fs
stc
out
cmp
mov
lock
push
cmp
daa
sbb
iret
adc
addw
jmp
lods
rol
jo
in
xor
push
add
sbb
daa
add
ret
clc
inc
mov
add
sahf
fstpt
inc
sbb
add
or
les
or
into
je
jae
add
push
movb
dec
jmp
popf
sti
adc
ja
mulb
push
jo
and
pusha
mov
cli
jbe
sahf
and
nop
inc
mov
push
inc
xorb
inc
or
adc
add
jge
pusha
js
adc
dec
pusha
push
cmpsb
popa
pusha
inc
pop
ja
sbb
rorl
mov
outsl
icebp
dec
xchg
pusha
cmp
sub
mov
loopne
or
ss
add
push
fbld
loopne
mov
loop
and
lcall
add
xorb
jmp
in
add
and
mov
lods
mov
dec
popf
and
jne
int3
pop
cwtl
fdivs
mov
jns
rorb
inc
fadds
popf
add
sbb
or
mov
aaa
fiadds
scas
push
inc
and
xchg
pop
arpl
or
adc
push
add
test
xchg
and
dec
mov
fcmovnu
in
lods
nop
popf
int
rcr
lock
ret
shrb
shr
test
add
pop
dec
inc
test
leave
add
hlt
lods
pushf
std
outsb
imul
ret
adc
dec
arpl
aad
shll
adc
jnp
loopne
rclb
and
mov
cld
jb
dec
test
cmpsl
jne
jg
jns
add
cld
lret
and
loop
xor
outsb
sub
dec
jns
push
xor
or
dec
out
ficomps
push
inc
adc
mov
or
sub
jmp
sub
ljmp
xor
and
inc
push
popf
inc
inc
jl
sbb
pop
in
pop
and
addr16
xor
or
dec
add
cpuid
shlb
or
lock
lcall
hlt
sahf
mov
mov
ror
xchg
addl
cmpsl
ja
or
cli
inc
movsl
add
repnz
mov
inc
incl
dec
dec
inc
sahf
dec
dec
push
add
push
push
push
push
push
pop
add
popa
bound
add
imul
add
jne
add
js
jp
out
not
and
lods
pusha
ja
fwait
or
inc
ss
arpl
negl
mov
lock
cwtl
imul
sub
push
loop
cmp
and
mov
xchg
mov
jecxz
jl
jg
rcrl
push
mov
adc
mov
pop
xor
push
cwtl
add
call
or
sahf
aam
les
pop
pop
and
jno
mov
lea
orl
cmp
adcl
add
add
push
pushf
jl
iret
shlb
mov
dec
mov
add
add
in
in
adc
popl
mov
pop
mov
clc
add
stc
sbb
or
clc
sar
rcrl
mov
mov
out
testb
inc
std
add
push
inc
sbb
pop
outsb
push
icebp
inc
mov
jecxz
and
icebp
inc
cmp
push
add
dec
sbb
pop
and
jmp
cmp
nop
out
xor
mov
loopne
je
ror
lock
jmp
cmp
jl
fwait
jne
dec
mov
data16
or
adc
push
mov
popa
cmp
or
aam
cli
or
or
call
jl
out
sub
pop
mov
loopne
cltd
lods
test
nop
mov
and
push
push
and
jne
inc
mov
or
shufps
fs
mov
test
movd
or
jl
or
add
mulb
jmp
in
into
nop
jb
cwtl
add
mov
push
jmp
call
and
pop
xor
lret
mov
pop
sub
add
dec
xchg
loopne
and
out
push
lcall
sti
int
cmp
icebp
mov
or
call
add
adc
fidivrs
or
dec
sbb
and
inc
push
mov
sahf
sub
jo
pop
leave
out
pushf
add
sahf
movsb
test
jmp
and
jmp
movsb
sub
call
mov
fs
adc
mov
adc
in
sub
sbb
add
sbb
lahf
add
jp
or
enter
pop
cmp
jle
xor
popa
hlt
jmp
push
in
loope
cmp
out
clc
xchg
shl
cmp
les
inc
push
xor
cmp
sbb
out
ret
and
adc
add
stc
dec
add
sbb
filds
push
xchg
mov
mov
inc
add
stos
insb
mov
addr16
bound
popf
aaa
add
inc
mov
ds
loope
jl
push
cwtl
sbb
xor
leave
popf
fisttpll
ds
pop
push
add
cmpsb
push
fs
call
mov
push
mov
mov
cmp
or
pop
mov
dec
pop
xchg
inc
or
adc
mov
insb
shlb
jge
loopne
sbb
addr16
nop
adc
mov
sti
mov
inc
mov
inc
sbb
add
cmp
mov
pop
insb
inc
aas
popf
adc
xchg
mov
add
push
dec
movsb
outsb
or
out
insb
lcall
outsb
nop
sbb
ret
push
mov
dec
pusha
dec
loope
cmp
push
inc
dec
stos
rolb
add
fidivrl
test
cmp
mov
sub
or
jmp
sarw
sti
xor
xor
lods
jmp
int3
xor
jl
fists
cli
jno
jae
orl
xor
inc
movsl
pop
pop
jmp
mov
pop
xor
imul
adc
dec
adc
push
inc
sub
xor
mov
fisttps
sub
mov
fistl
movsb
and
repnz
sarb
adcl
pop
cli
sub
int
das
push
xchg
jl
push
popf
cmp
mov
jmp
dec
and
sbb
adc
shr
fsubl
or
sbb
adc
and
adc
mov
lods
mov
and
adc
or
jns
adc
cmp
insl
daa
popa
inc
negb
sbb
cmp
push
insl
and
js
xchg
jns
rorb
and
mov
into
mov
adc
insb
xorb
maxps
sbb
inc
jnp
mov
mov
loopne
mov
jno
push
cltd
jmp
or
lret
pushf
cmpsb
inc
push
add
dec
pop
out
add
inc
add
loope
scas
frstor
push
rolb
mov
add
ljmp
add
jp
adc
inc
xchg
sbb
es
sti
addb
adc
add
add
les
cmp
das
or
push
add
rcrb
mov
push
add
push
aaa
cld
add
sbb
mov
and
add
cmp
jmp
cmc
xchg
inc
inc
fadd
cmp
and
out
inc
pushf
add
mov
lock
sbb
out
loop
in
mov
mov
pop
filds
lret
adc
cs
scas
push
hlt
scas
aam
mov
sbb
pushf
mov
rorl
add
stc
faddl
aad
mov
push
sbb
pop
push
jge,pn
cmp
xor
mov
lret
add
call
lock
sarl
test
fsubrs
lods
push
add
cmp
inc
add
push
mov
sub
dec
mov
inc
sub
fwait
or
mov
jl
mov
flds
fists
dec
pop
cwtl
add
jmp
xchg
aas
add
cmp
add
sub
call
or
adc
dec
mov
pop
iret
sub
mov
ds
add
fsubp
scas
dec
out
ja
pop
cli
mov
movsb
inc
jle
jl
add
adc
add
jmp
sub
add
inc
divl
add
mov
jecxz
hlt
inc
push
test
xchg
lea
or
dec
ret
sub
sbbb
test
or
adc
jnp
pop
mov
adc
ja
or
clc
sub
add
lods
xchg
cmp
ret
dec
cli
rolb
or
sbb
mov
repnz
ljmp
mov
add
loop
mov
icebp
shr
dec
add
add
jo
ret
jne
add
incl
fildll
shlb
ret
add
add
mov
or
fisubl
ljmp
pop
pop
adc
ss
sti
rorl
inc
xor
fildl
or
mov
adc
mov
jo
out
sub
stos
adc
mov
cmp
cs
orl
nop
ret
lods
lcall
mov
xlat
and
sbb
std
mov
adc
mov
lock
pop
push
sub
add
scas
test
jnp
cwtl
pop
cmp
or
js
mov
sbb
push
xor
push
mov
loope
add
push
cmp
leave
and
sbbb
push
mov
dec
cmc
add
inc
arpl
cmp
mov
jns
out
push
imul
movsb
sbb
dec
nop
or
push
push
pushf
aas
add
mov
inc
iret
test
scas
inc
push
inc
sbb
sbbb
sub
add
adc
lcall
arpl
xor
fisttpl
sti
mov
cwtl
cmovle
movb
aas
jle
jp
mov
popl
jo
cld
add
imull
dec
add
dec
xchg
pop
aad
sub
neg
xor
push
imul
inc
add
push
int
mov
ljmp
dec
jnp
add
aam
add
lcall
push
push
cmp
jp
pop
pop
in
mov
add
sbb
shr
and
jmp
add
add
jb
mov
mov
ficoms
push
add
xlat
sbb
add
inc
sarl
pop
dec
nop
or
rolb
add
lcall
add
mov
or
inc
cmp
stos
sub
xchg
add
push
fwait
rolb
leave
sbb
mov
xchg
hlt
add
sbb
aad
movsl
sub
test
pop
mov
push
cmp
and
js
movsb
xchg
add
jge
bound
pop
loopne
outsb
imull
inc
adc
orl
add
sbb
adc
xlat
fcomps
out
add
jne
insl
mov
inc
mov
int
lds
jge
push
or
movsl
shr
xor
sbb
sahf
aaa
and
adc
ss
add
testb
cs
sub
add
cmpsl
lock
mov
pusha
rcr
mov
aam
sub
add
cmp
push
add
aas
int
dec
das
outsl
cwtl
sarb
add
mov
cld
mov
add
addl
mov
nop
fiaddl
jo
inc
test
lock
adc
ficoms
ja
je
add
pop
enter
jl
add
icebp
insl
jge
xchg
out
ljmp
mov
inc
mov
and
or
mov
adc
je
mov
push
inc
lods
jno
jne
inc
push
and
jb
test
dec
mov
je,pt
and
inc
inc
lea
adc
mov
pushl
out
xor
add
inc
insl
icebp
hlt
push
adc
inc
xchg
cmc
mov
pushf
mov
inc
std
cmp
lea
ret
sbb
ret
mov
cmp
cld
das
fistl
pop
ret
sub
lret
cmp
inc
sub
xchg
add
pop
mov
mov
test
inc
pop
mov
sbb
dec
and
js
and
pop
test
and
sbb
adc
adc
sub
js
les
adc
add
lahf
lea
xor
dec
inc
or
cmp
out
xchg
mov
dec
ljmp
mov
ljmp
or
sub
push
or
jge
sbb
push
movsb
and
rorb
rolb
dec
or
or
lock
mov
nop
xchg
jecxz
shll
sbb
das
push
inc
jmp
inc
test
mov
sub
cmp
into
add
xor
shr
fsub
into
mov
inc
sti
push
mov
xchg
incb
xor
push
inc
shl
aam
push
push
mov
push
test
pop
jns
mov
dec
jno
jne
cmc
out
sahf
pop
icebp
xor
pop
add
jmp
inc
sub
sbb
xor
arpl
xor
int
adc
iret
xor
outsb
dec
xchg
fstps
inc
pop
add
pop
lea
in
mov
lahf
and
or
xorb
inc
adcb
jns
rolb
into
mov
jle
xchg
add
xor
daa
call
and
mov
or
repz
mov
orb
jl
pop
mov
and
lcall
gs
push
nop
jecxz
in
sbb
pop
out
mov
or
mov
lock
ja
cmp
add
outsl
addb
push
jg
pusha
fimull
pop
sbb
inc
xchg
test
cld
xlat
out
stc
sbb
add
call
mov
shll
rolb
inc
lds
addb
test
aad
cmp
je
inc
cmc
bound
adc
jl
jbe
mov
pop
inc
jge
sub
inc
subl
fnstsw
jg
ret
or
rcl
roll
shr
iret
or
cmp
cltd
enter
cmp
or
sbb
ljmp
push
push
mov
xchg
aas
aam
cmc
enter
jle
cli
nop
fisubl
inc
sub
sub
add
icebp
or
js
test
or
test
adc
add
jg
add
adcl
sarb
fs
sub
test
aad
add
lds
adcl
sbb
mov
mov
push
jne
jg
push
add
mov
pop
inc
dec
lea
mov
pop
jbe
and
adc
imul
adc
fildl
and
xor
mov
sbb
jg
push
fldenv
hlt
or
inc
sub
xchg
inc
enter
jb
cmp
sbb
mov
and
xchg
into
enter
inc
cmp
js
insb
dec
and
xor
add
or
cmp
pop
nop
inc
and
outsb
xor
addr16
stos
xchg
and
jno
adc
push
sbb
popa
ja
push
and
test
test
call
popa
das
pop
xor
rclb
inc
push
inc
dec
and
fisubrs
adc
or
gs
sub
and
push
js
das
xchg
test
sbb
in
mov
fs
shlb
mov
je
lahf
adc
sub
or
xor
push
outsl
xor
aad
jno
nop
ret
add
je
cmp
add
sub
inc
mov
cmp
sbb
mov
hlt
notb
cmp
bound
mov
je
dec
insl
nop
inc
sbb
or
xchg
jbe
push
movsb
shrb
or
test
fistpl
and
cmp
add
mov
cmp
pop
loopne
pop
push
jmp
shlb
cmp
mov
push
fadd
mov
add
push
nop
add
loopne
enterw
jmp
mov
rcll
sarl
arpl
push
test
ret
and
jne
dec
sarb
inc
ds
cltd
and
push
or
fadd
and
imul
cmp
fsub
sbb
cmp
xorb
mov
lock
add
out
loop
rcr
inc
int3
nop
xchg
jbe
inc
add
lret
mov
push
cmp
dec
int3
mov
add
insb
fnstcw
outsb
cmp
add
in
xor
sbb
inc
mov
stc
dec
outsl
loope
int
push
xor
shrb
or
pop
push
ret
pop
insb
inc
xor
add
pop
add
push
cld
pop
rolb
adc
xor
pop
and
jb
ja
js
pop
shr
push
xor
add
in
add
ds
pop
mov
aad
mov
lock
mov
and
ror
mov
adc
xchg
loop
and
cmp
mov
mov
and
les
rcrb
inc
fdivl
mov
and
test
jno
adc
push
and
enter
jno,pn
adc
push
inc
nop
scas
inc
xor
jno
adc
inc
int3
lcall
repnz
and
dec
pop
gs
out
mov
adc
adcb
and
enter
test
adc
mov
mov
jns
adc
mov
mov
mov
mov
add
orb
and
out
inc
cmp
xchg
adc
je
cmp
nop
test
test
adc
nop
inc
adc
add
mov
mov
cmp
xchg
push
and
jo
mov
nop
in
test
std
and
sbb
fmuls
jns
adc
push
adc
adc
dec
push
jns
adc
xchg
loop
and
cmpsl
inc
sub
aam
repz
mov
movups
adc
loop
and
cmp
mov
xor
xor
jl
or
sbb
cwtl
mov
in
dec
mov
aaa
push
adc
pop
and
mov
push
pop
loope
pop
push
adc
adc
adc
pop
out
pop
js
jecxz
adc
loope
sbb
adc
mov
push
adc
adc
sbb
clc
sbb
adc
loope
sbb
adc
push
sbb
mov
lret
mov
loope
and
mov
lret
jecxz
mov
in
and
sub
and
sbb
lds
and
dec
push
and
adc
and
dec
aas
inc
dec
aam
shl
adc
inc
pop
inc
loopne
dec
iret
xchg
xor
mov
push
sbb
pushf
insb
cli
mov
sub
adc
inc
xor
xor
nop
xor
xor
and
jns
or
cmp
xor
test
xor
and
xor
inc
aaa
repnz
nop
cmp
cmp
or
xor
int3
push
dec
xor
lahf
inc
inc
inc
push
xor
dec
sbb
jne
leave
js
jg
stos
mov
xor
xor
xor
aaa
jle
cmp
cmp
movsb
adc
out
sbb
xor
inc
xor
xor
xchg
xor
aaa
outsl
and
jns
sbb
out
xor
and
xor
cmp
in
cmp
jnp
out
xor
xor
in
aas
and
stc
aaa
bswap
cmp
cmp
xor
sbb
xchg
mov
mov
outsl
and
jns
sbb
cmp
test
repnz
mov
xchg
gs
jl
gs
gs
gs
gs
nop
gs
gs
gs
and
gs
fiadds
repnz
xchg
gs
outsl
and
gs
fiadds
repnz
xchg
gs
outsl
push
movsb
mov
dec
test
xor
mov
inc
in
ret
js
push
mov
sbb
call
sbb
xor
cmp
movsl
js
adc
push
xor
sarl
sub
je
fisttps
cwtl
sarb
adc
inc
ret
clc
jle
xor
jno
jp
adc
dec
and
xchg
insb
adc
xor
mov
sub
lea
aas
mov
sahf
or
lcall
call
sbb
scas
dec
pop
push
ljmp
mov
imul
and
test
movsb
popa
adc
sub
push
push
inc
pop
test
jge
das
inc
push
push
mov
jns
dec
jnp
jns
into
mov
cmc
leave
cmp
clc
mov
lret
roll
or
push
push
divl
nop
push
xlat
push
movsl
push
cs
jp
lock
and
out
sbb
inc
dec
sbb
outsl
xor
adc
addr16
push
push
inc
pusha
pop
xor
sub
jae
arpl
fs
verr
push
pop
push
jo
mov
push
pop
push
neg
rcrb
mov
inc
dec
repnz
sub
rorb
ljmp
mov
dec
dec
int3
fcoml
mov
and
push
and
pop
pop
sub
sub
jl
int
js
pop
insb
lods
add
jae
movsl
call
push
jo
xor
ss
dec
cmovle
pop
repz
iret
mov
sarl
outsl
lods
ds
push
scas
mov
dec
stc
sbb
out
lea
xchg
fisttps
shlb
cmp
inc
popa
jg
mov
jge
pop
rol
mov
inc
cwtl
mov
mov
adc
bound
inc
fsubs
push
mov
xchg
push
mov
xor
xlat
sub
jno
xor
insb
mov
jns
mov
das
iret
xor
popa
add
repnz
fs
outsb
jae
insl
dec
add
jns
or
out
fisubs
aad
adc
or
cmpsb
cmpsl
add
jns
and
mov
scas
lea
arpl
lret
out
mov
push
cmp
notb
push
test
xchg
dec
jno
xchg
inc
out
xchg
out
fildll
sti
cmpsb
pop
jns
iret
sub
addb
dec
imul
adc
cli
fldl
lcall
mov
cmp
jp
in
sub
lock
sub
daa
subl
fists
mov
pop
dec
and
pop
or
icebp
cmp
je
push
sbb
popf
hlt
lods
jp
daa
cmpb
dec
dec
mov
inc
inc
cmp
faddl
dec
aad
xchg
bound
das
xchg
adc
lods
and
pop
adc
pusha
jo
pop
sub
inc
inc
sbb
dec
push
inc
in
int3
cmp
sub
inc
and
push
dec
jl
dec
xor
cwtl
xlat
mov
mov
jbe
cmpsl
daa
lret
and
sbb
xchg
xchg
ret
inc
dec
das
push
jb
bt
pop
push
push
jp
out
push
push
enter
inc
dec
push
xor
jns
adc
dec
push
sub
inc
je
call
sub
inc
push
popa
pop
push
cmp
inc
mov
fsubs
dec
and
inc
aas
and
das
push
xchg
xor
add
or
push
je
cmp
or
adc
shrb
push
push
push
cmpsb
test
das
test
jae
pusha
inc
cmp
test
mov
scas
mov
mov
dec
mov
in
call
cld
in
mov
xor
xor
fsubl
bound
xor
mov
fidivl
popf
or
xor
jl
in
imul
inc
mov
jne
xchg
or
or
mov
or
fbstp
adc
outsb
out
adc
insl
lahf
arpl
cmp
mov
add
pop
push
shrb
or
fwait
lock
xor
psubd
aad
adc
cmp
pop
pop
mov
inc
movsb
mov
out
popf
notb
cli
fistl
and
daa
jge
pop
and
cmpsl
int3
aam
cmp
ljmp
xchg
inc
in
mov
stc
imul
mov
xchg
pop
mov
sub
mov
and
les
adc
cmp
push
inc
xchg
inc
push
push
dec
push
pop
into
lahf
fldt
pop
xor
push
mov
insb
push
stos
fs
pop
push
dec
or
push
je
xchg
sub
fnstenv
outsl
cmp
inc
hlt
hlt
decb
sbb
arpl
push
cmp
inc
lret
push
aad
insl
lcall
int
movsl
xchg
ja
addr16
sbb
jae
cmp
mov
imul
imul
faddl
mov
jb
rcrb
nop
dec
scas
mov
je
jle,pt
neg
lret
jo
mov
sub
notb
js
xlat
dec
jge
jo
jle
inc
inc
cmpsb
inc
test
enter
jle
enter
stos
xor
adc
movsl
pop
pop
push
lea
test
xor
es
lea
std
adc
jp
dec
in
outsl
cld
nop
mov
jl
data16
cmc
shrb
rol
cmpsb
jno
lods
inc
movsl
data16
imul
dec
cmp
jnp
lods
push
xchg
cmpsl
fimuls
push
inc
aad
rorb
inc
lds
sbb
in
sbb
cmpsl
addr16
push
dec
add
mov
mov
fs
push
in
nop
xchg
adc
jge
movsb
dec
push
sbb
imul
imul
inc
or
pop
or
test
pop
cltd
add
mov
rorb
inc
push
inc
pop
scas
pop
lret
adc
inc
xor
or
inc
in
or
xchg
add
ds
pop
cltd
add
xor
add
ds
cltd
add
or
xchg
add
ds
pop
cltd
add
or
xchg
add
xor
pop
flds
jp
adc
xor
xor
xor
ficomps
shrb
mov
in
ss
jo
mov
add
repz
and
cmp
and
ret
dec
add
add
xchg
aaa
add
add
ret
dec
add
fs
dec
add
add
add
loope
xor
adc
mov
cmp
xor
sub
or
pop
pop
mov
push
dec
clc
xchg
mov
test
testb
inc
push
out
adc
push
frstor
or
aaa
or
or
xchg
mov
dec
push
and
or
daa
out
lods
push
imul
or
or
inc
or
movsb
push
jmp
jge
je
xor
out
or
add
aam
or
add
mov
inc
xchg
or
movsl
mov
int
mov
or
push
or
imul
dec
add
movsl
or
add
or
and
cmp
xor
or
adc
or
xchg
pop
je
xor
dec
add
sub
dec
add
or
inc
pushf
pop
negl
dec
mov
or
lret
or
add
cmp
pop
mov
ds
mov
push
cs
cmp
fmull
sub
mov
jl
addr16
push
push
dec
pop
lods
pop
lods
lock
push
ds
dec
push
pop
dec
lret
inc
inc
pop
lcall
and
pop
int3
add
dec
dec
imul
pop
iret
mov
jmp
mov
cli
mov
int3
inc
xchg
inc
push
aas
mov
xchg
in
lahf
dec
inc
inc
lods
and
lods
inc
iret
mov
pop
push
shrl
call
pop
inc
lahf
inc
dec
inc
inc
push
in
gs
cltd
sub
xchg
addr16
push
inc
dec
mov
int
aas
mov
divb
adc
dec
stos
fdivl
pop
push
pushf
jl
ret
jae
xchg
sub
insl
mov
imul
sub
pop
pusha
jae
popf
loope
popa
mov
bound
ficoms
arpl
ficoms
gs
loope
cmp
adc
addr16
loope
push
imul
inc
popa
push
mov
add
pop
scas
je
out
sub
testl
or
leave
adc
pop
sbb
stos
daa
testb
mov
push
xchg
outsl
cmp
xor
enter
inc
pop
cmp
mov
adc
sub
in
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
adc
inc
enter
inc
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
imul
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
jae
bound
in
and
in
aas
das
cs
insb
lea
sbb
cs
loope
inc
in
sbb
and
and
and
stc
and
enter
jl
and
jno
bswap
and
inc
and
mov
lods
and
jmp
dec
adc
pop
adc
add
scas
movsl
pusha
ret
add
inc
push
sbb
sbb
outsl
ja
stos
outsl
mov
jmp
rolb
sbb
dec
dec
mov
scas
cmc
test
sbb
jo
jns
mov
pop
lret
sbb
pop
test
xor
cs
int3
and
inc
push
scas
pop
incb
adc
ret
sbb
push
ret
pop
mov
xchg
jmp
int
and
push
cmp
xchg
sub
push
or
scas
mov
inc
xor
mov
arpl
aam
pop
push
push
push
jmp
sub
cli
pop
rcrb
jne
sti
jge
ja
mov
test
pop
sbb
sahf
iret
inc
inc
mov
enter
sbb
data16
xor
ja
test
ss
or
lods
xchg
fldl
push
push
xor
xor
js
xchg
insl
sub
sub
and
cwtl
cmp
movsl
push
aam
sarl
xchg
cld
add
movsb
dec
in
ret
movsb
mov
inc
add
xor
pushf
xchg
je
xor
xchg
je
push
push
dec
dec
lods
inc
mov
das
xor
cmp
int3
pushf
jb
jbe
push
and
pop
and
pop
pop
push
sbb
dec
in
sbb
dec
stos
pop
mov
push
out
xchg
and
std
imul
icebp
sub
stos
xchg
pop
xor
hlt
mov
adc
cmpsl
andl
push
mov
xor
push
outsb
mov
in
mov
and
pop
inc
mov
aad
xchg
xlat
fldenv
sub
pop
push
push
jl
lret
push
push
mov
jo
and
cmp
cs
inc
jae
inc
cltd
jo
xor
sub
jbe
enter
and
inc
sbb
dec
mov
pusha
push
aad
clc
and
sub
adc
xchg
dec
push
out
and
jp
sub
xlat
fs
fbld
sub
push
push
mov
jge
mov
cmp
pop
into
test
dec
scas
lcall
xor
pop
jmp
mov
cs
pusha
hlt
jns
dec
pop
lcall
insb
dec
dec
push
jns
rcll
or
push
cmpsb
inc
xchg
pop
push
xchg
jp
fst
push
push
stc
sub
add
push
fstl
jno
ds
arpl
sbb
ljmp
imul
inc
xchg
sub
movsl
lret
xchg
cs
push
ret
iret
sarb
mov
jl
aam
popl
add
fistl
cmp
fcomip
js
push
dec
pop
inc
dec
inc
push
pop
aaa
push
pop
cmp
sub
mov
and
bound
movsl
ret
xchg
test
sti
addr16
push
jns
les
fimuls
rclb
insl
aad
pop
xchg
es
push
insl
clc
jp
dec
imul
dec
jnp
xchg
mov
inc
gs
popa
out
cmc
imul
movsb
popa
mov
mov
cmp
mov
pop
jne
and
add
push
cmp
jnp
and
and
je
mov
sub
cmpl
hlt
je
add
dec
push
push
dec
sub
cmp
pop
pusha
cmp
rorb
inc
outsb
clc
or
dec
pop
iret
push
sbb
or
pop
and
pop
arpl
xchg
dec
mov
and
dec
hlt
clc
or
sbb
or
sbb
mov
test
aam
loopne
add
or
or
sbb
inc
push
mov
inc
ror
xchg
loopne
call
push
sbb
xor
js
mov
pop
and
inc
hlt
xor
push
mov
clc
enter
mov
cld
and
jl
mov
mov
enter
rclb
or
or
and
pop
and
adc
adc
push
sbb
xchg
xor
or
inc
sbb
test
fldenv
jl
inc
pop
and
inc
loop
inc
push
sub
inc
sub
xchg
shlb
xor
add
adc
fs
dec
jl
mov
adc
or
sbb
add
andl
fldenv
insb
xchg
or
xchg
and
dec
mov
or
add
and
or
pop
sbb
cmp
xchg
mov
les
les
or
xor
inc
and
dec
inc
pusha
jo
sbb
mov
jb
and
pop
push
sbb
inc
dec
sub
jl
xlat
mov
jbe
or
int
cs
divb
divb
shlb
mov
pop
mov
sub
dec
inc
inc
jne
aad
jg
pop
fnstsw
sbb
inc
insb
adc
imul
insl
bound
jl
inc
aam
scas
inc
test
adcb
jb
cld
enter
or
mov
sbb
imul
sbb
push
mov
pop
popa
gs
fldcw
stos
push
jns
sub
jo
jbe
cmc
dec
cmp
cmp
test
subb
mov
fs
jg
fsts
push
jb
dec
jb
or
rorb
icebp
jne
test
pop
push
mov
leave
mov
loope
jns
fs
mov
sbb
jb
ss
insb
sbb
and
outsb
movsb
cwtl
jns
shrl
xchg
push
popf
fs
adcl
je
ljmp
fwait
push
rorl
clc
sbb
or
fdiv
aas
lods
push
pop
test
into
push
dec
push
ljmp
dec
inc
dec
repnz
push
dec
or
andps
cmp
lret
test
mov
outsl
xchg
jge
push
inc
shr
cmc
dec
gs
addr16
testb
push
adc
push
bound
inc
nop
pop
inc
dec
jecxz
mov
in
mov
mov
or
jp
dec
sahf
inc
insl
ficomps
aas
cmpsl
insb
push
xchg
lock
pop
dec
negl
pop
push
outsl
cmpb
adc
in
add
pusha
jne
sub
push
mov
insb
mov
dec
xor
mov
xchg
repnz
jb
jo
das
je
sub
lods
push
fisttps
mull
adc
stos
data16
xchg
jle
mov
dec
push
scas
pop
mov
or
jb
jb
dec
mov
loop
push
mov
dec
test
mov
xchg
das
push
sub
push
adc
dec
mov
dec
fwait
cmp
scas
dec
outsb
inc
push
jb
int
push
cmp
test
ficoml
push
dec
xchg
bound
xor
jge
jbe
cwtl
sbb
je
imul
cmp
les
lahf
jl
dec
pop
call
daa
inc
push
xchg
mov
testb
jne
je
cmp
or
push
leave
xchg
push
adc
jl
lea
jns
fildl
aaa
adc
xor
adc
push
cmp
aas
push
outsb
imul
cmp
and
pusha
mov
push
jg
test
push
sub
test
imul
adc
sub
rclb
push
mov
jp
inc
dec
jl
xchg
mov
jo
inc
jns
or
dec
dec
cmp
inc
dec
nop
inc
jmp
xor
push
mov
addr16
cmp
dec
sbb
shll
sbb
xor
fsubrs
insl
js
push
add
inc
dec
push
dec
dec
aam
inc
sahf
pop
jns
xchg
inc
lock
push
out
js
dec
flds
stos
jbe
pop
adc
jle
imul
pop
imul
je
mov
and
insb
mov
or
xchg
adc
sub
sbb
jne
dec
ficoml
nop
test
pop
sub
dec
jmp
fimuls
insl
mov
jecxz
pop
sbb
mov
test
xchg
cmp
adc
loope
sarl
popf
aam
push
and
dec
inc
push
imul
sub
mov
inc
mov
fnsave
pop
push
and
pusha
ds
mov
ja
add
lcall
roll
xchg
cmp
stc
mulb
sbb
insl
jo
add
mov
gs
xorb
xor
bound
xchg
jns
inc
mov
or
push
push
iret
test
ret
dec
adc
mov
push
sbb
jmp
stc
arpl
cs
xor
movsl
pop
pop
sahf
jbe
das
popa
adc
sub
mov
lret
sbb
je
xor
cs
out
xchg
imul
js
xor
popa
cmp
pushf
dec
outsl
call
xchg
outsb
fcmovbe
sbb
and
test
dec
push
stc
cmp
xor
jp
mov
shlb
outsb
popf
lods
sbb
bound
nop
and
inc
aad
std
divl
daa
ja
xor
stc
add
push
test
add
add
call
pop
xchg
and
je
adc
push
and
das
shl
leave
jne
test
mov
roll
mov
ja
imul
in
adc
sub
test
xchg
xchg
ljmp
xchg
jl
int3
dec
repnz
xchg
jnp
mov
js
arpl
sub
cmpsb
mov
sub
fcmovne
and
nop
cs
add
mov
pop
in
mov
lods
xchg
imul
xor
push
imulb
pop
leave
sti
jp
push
hlt
cmp
sbb
sub
mov
pop
sub
cli
push
jle
push
mov
fistps
mov
jb
mov
in
jae
xor
je
pushf
cs
push
out
mov
or
test
inc
fs
std
sub
aas
adc
lcall
xchg
and
out
xchg
jnp
dec
int
cmp
stos
push
mov
cmc
xor
cmp
pop
je
out
es
sbb
scas
push
xchg
cld
pop
inc
cmp
clc
das
jae
mov
sub
jne
in
jae
fwait
arpl
call
lock
outsb
cmp
cmp
aas
bound
cmpsb
pop
sbb
inc
dec
pop
or
je
jmp
inc
test
movsl
xchg
mov
and
push
and
repz
inc
push
jg
scas
rcrl
pop
je
push
call
mov
imul
inc
push
inc
mov
inc
inc
sbbb
fs
adc
iret
jp
add
push
jmp
leave
jns
cmpsl
mov
inc
insl
xchg
andl
mov
inc
adc
xlat
and
and
sub
pop
das
stc
clc
cmpsl
adc
daa
rclb
dec
and
addr16
frstor
icebp
insl
sub
dec
mov
sub
jle
mov
pushf
mov
inc
and
push
xor
mov
inc
mov
scas
imul
dec
dec
inc
in
inc
jp
out
sbb
adc
sbb
jmp
mov
inc
sub
sub
and
inc
inc
dec
dec
mov
push
and
dec
pop
xchg
pusha
and
insb
mov
je
js
jl
andb
inc
mov
cwtl
dec
pushf
xchg
mov
lods
mov
dec
mov
inc
enter
adc
and
dec
fcoml
call
hlt
and
dec
cld
mov
xchg
or
adc
sbb
mov
adc
and
dec
dec
xchg
push
and
pusha
and
dec
js
andb
inc
mov
lods
dec
mov
inc
rcr
mov
adc
and
pop
sbb
and
adc
mov
adc
inc
dec
dec
xchg
push
and
js
adcb
and
dec
cwtl
xchg
mov
mov
and
dec
in
in
and
inc
cld
add
outsb
fsts
or
adc
dec
dec
push
xchg
pop
and
jo
js
test
dec
cwtl
xchg
movsb
and
enter
loopne
call
ss
inc
sbb
mov
xor
cmp
dec
xchg
push
and
insb
js
adcb
and
dec
cwtl
xchg
movsb
and
adc
and
dec
call
andl
sbb
mov
adc
and
dec
dec
xchg
push
and
insb
mov
and
dec
mov
test
mov
fcoms
cld
add
jno
or
and
and
sub
xchg
xor
cmp
mov
pop
and
dec
push
inc
test
mov
and
adc
enter
rcl
mov
adc
and
dec
in
call
hlt
mov
adc
or
add
or
adc
sbb
sbb
and
xchg
sub
xor
cmp
mov
dec
and
dec
push
xchg
pop
or
cltd
or
fcoml
loopne
in
inc
call
or
adc
orb
mov
cltd
adc
or
clc
cltd
sbb
or
adc
mov
inc
int3
aam
fcoml
in
call
jo
jae
mov
adc
and
dec
jno
jle
add
xchg
xor
je
jns
jne
inc
imul
fs
xchg
and
push
mov
and
dec
arpl
outsb
insl
mov
push
and
dec
push
xchg
push
and
push
dec
mov
push
and
dec
push
xchg
inc
and
inc
dec
mov
dec
and
dec
pop
xchg
pop
and
push
inc
mov
dec
daa
push
push
inc
push
push
in
rcl
xchg
mov
xor
jno
addr16
cmp
bound
gs
imul
pop
dec
jmp
pop
cmp
outsb
loop
jae
jg
jl
push
outsl
mov
js
in
clc
mov
js
pop
adc
out
cmp
xchg
imul
jns
jl
outsb
ss
and
and
adc
sti
inc
mov
jb
imul
jecxz
push
imul
stc
sub
outsb
outsb
cmc
fs
mov
adc
push
jns
xor
inc
jne
mov
xchg
sub
inc
lock
stos
sbb
inc
and
flds
dec
fsub
outsb
arpl
push
xor
shll
xlat
movsl
es
mov
aaa
int3
sbb
dec
cmp
sbb
xor
cmpsb
mov
bound
cmp
inc
inc
das
xchg
dec
imul
xchg
fsubrs
lods
gs
outsb
lahf
fiadds
adc
and
mov
inc
dec
inc
cmp
fisttps
dec
and
loopne
xor
sub
push
rorb
cltd
xor
and
jbe
dec
pop
xor
xchg
fs
les
inc
inc
dec
sbb
fwait
pop
aam
push
mov
fisttpll
adc
push
dec
xchg
popa
insl
jns
imul
cmp
inc
xor
xor
jns
cmp
cmp
lods
xchg
clc
popa
and
sub
jns
and
xorb
sbbb
jne
cmp
mov
cmp
cld
rolb
sub
inc
xor
sbb
loopne
push
sbb
sub
shlb
xor
push
and
dec
insl
mov
dec
inc
jne
mov
test
xchg
add
dec
sbb
inc
ss
mov
jmp
pop
ret
imul
shrb
ss
sub
stos
inc
dec
dec
faddl
dec
out
sub
fisttps
es
or
adc
inc
mov
dec
loope
jl
fcmovb
ficoms
push
or
inc
dec
inc
xchg
imul
mov
and
push
popa
inc
sbb
rcrb
mov
daa
inc
dec
cltd
movsb
dec
imul
or
xchg
inc
adc
pusha
and
mov
mov
ss
enter
insb
inc
push
inc
popf
push
loop
dec
je
dec
dec
jns
pop
push
hlt
roll
and
int
outsb
fmull
inc
cwtl
pop
in
xlat
mov
fdivrl
or
sub
out
ljmp
inc
aas
mov
sbb
xor
dec
xlat
cmp
push
outsb
insb
xor
and
mov
addb
test
xchg
push
in
mov
arpl
push
jb
dec
hlt
fsubl
push
pop
insl
xor
xor
aad
sub
dec
xor
out
test
sbb
mov
leavew
cwtl
je
or
divb
xor
inc
dec
dec
and
mov
xor
insb
out
jne
nop
mov
inc
fmull
mov
call
inc
add
stc
loopne
xor
pusha
pop
aam
cmp
mov
push
dec
lea
in
inc
fwait
dec
pusha
fiaddl
sub
xor
and
or
push
inc
insb
jnp
push
jnp
jge
adc
je
pop
and
fcompl
push
addb
dec
dec
push
movsl
repz
shrl
inc
adc
sub
movsl
ret
mov
push
adc
xchg
ja
push
and
adc
or
insb
sbb
bound
inc
xor
dec
or
cmp
jbe
sub
xchg
addr16
adc
cwtl
data16
push
cmp
sub
shlb
or
mov
inc
adc
pop
mov
cmp
pop
adcb
dec
movsb
mov
les
mov
js
lods
jp
out
aam
or
jns
jl
arpl
adc
lret
stos
movsb
clc
imul
sub
montmul
cmpsb
inc
dec
addr16
in
sbb
lods
addr16
sahf
pop
adc
fs
cs
push
nop
fs
xchg
inc
pop
cmp
push
loopne
push
gs
mov
pop
push
adc
pop
push
cwtl
xor
inc
mov
mov
jb
pop
lock
je
nop
cmp
mov
movsl
sbb
outsl
data16
lcall
adc
xor
stos
or
adc
add
adc
aam
and
mov
sbb
mov
xchg
or
stos
out
dec
mov
sub
das
je
in
testb
xor
jp
outsl
xor
xor
sbb
pop
push
gs
dec
xlat
inc
xor
push
add
jge
adc
mov
sub
cld
sbb
mov
push
xchg
lret
adc
test
add
test
mov
sbb
inc
stos
jns
call
mov
popa
dec
mov
out
in
inc
dec
sub
test
fcompl
jmp
clc
push
adc
out
add
ja
mov
hlt
mov
mov
cmp
or
push
jecxz
mov
inc
into
test
popf
lods
negb
daa
cmp
mov
sub
sub
js
mov
ret
inc
sbb
mov
dec
mov
dec
clc
cs
out
mov
in
popa
xchg
push
push
xchg
out
out
sti
fisttpl
dec
push
test
daa
jae
insb
jmp
pop
jmp
shrb
sub
cmp
mov
mov
lret
or
pop
dec
pusha
in
dec
jo
js
adcb
add
add
sbb
std
xchg
inc
scas
repz
or
dec
mov
add
push
push
fmulp
push
jne
jl
fists
orl
push
jno
mov
push
jns
push
jmp
pushf
and
imul
lret
xlat
push
and
cmp
repnz
lods
rolb
fisubs
push
cs
sub
mov
jbe
in
xchg
popa
out
mov
dec
call
fidivl
jl
pop
loop
fidivs
sbb
dec
jns
pop
push
bound
idivb
lds
inc
out
outsb
outsl
lcall
test
stos
sub
sub
inc
nop
je
std
cmpsl
jo
or
mov
mov
pop
cli
aam
das
notl
cld
push
popf
mov
rcrb
mov
xor
mov
rcrl
xchg
jmp
jo
movsl
lret
push
popf
jae
mov
mov
mov
shrb
movsb
xchg
adc
inc
lahf
jnp
mov
or
sbb
arpl
xor
movsl
fdivr
push
out
mov
xchg
das
push
pop
sub
rclb
sti
cmp
cmp
outsb
or
jo
dec
push
mov
mov
mov
mov
in
out
stos
sub
pop
loop
aad
dec
sti
movsb
xlat
imul
add
lcall
and
adc
sub
das
stos
and
std
sub
push
push
rcr
hlt
push
scas
cmp
out
bound
cs
in
dec
dec
cwtl
das
mov
sbb
cmc
cmp
and
mov
or
inc
sti
sub
gs
movsb
lret
arpl
loopne
cmp
ss
adc
pop
sti
fimull
jge
fsubrl
data16
pop
clc
xchg
sub
push
xchg
shlb
jne
sbb
push
movsl
and
mov
cld
or
sub
jb
mov
test
push
jbe
xlat
movsb
imul
xchg
inc
and
xchg
pop
xchg
adc
cs
mov
filds
fbstp
outsb
pop
adc
outsl
add
fnstsw
ss
shlb
test
sub
add
in
dec
push
rorl
sbb
repz
cmp
fcoml
inc
orb
jg
movsb
ret
dec
sbb
push
sbb
add
jno
das
xor
adc
dec
dec
lcall
lret
and
cli
mov
and
sti
xor
sahf
test
fstl
sti
fldenv
or
cmp
inc
fildl
sub
mov
mov
jg
hlt
jae
xor
dec
test
mov
jno
stos
adc
sbb
stos
je
fs
stos
icebp
popa
cmpsl
dec
jns
test
test
aam
mov
lcall
mov
cs
dec
adc
in
or
je
push
cmpsl
lahf
push
dec
stos
imul
pop
mov
mov
xchg
xchg
push
mov
pusha
test
mov
mov
xchg
cmp
adc
xor
push
dec
gs
daa
out
hlt
int3
nop
jl
and
sbb
in
dec
cmp
adc
bound
lock
loop
mov
insl
pop
insb
dec
das
lcall
sub
outsb
in
add
je
adc
jae
mov
jne
mov
ficoml
mov
in
xchg
cs
add
sbb
cs
cmc
push
bound
lock
sbb
fiaddl
das
cmpsl
adc
push
insb
in
std
dec
inc
jns
rclb
loop
xor
mov
popa
stos
pop
hlt
in
cmp
scas
and
xor
repnz
mov
out
inc
and
mov
out
pop
sub
and
repz
push
sub
jns
lret
adc
sub
outsl
jp
lea
mov
lcall
jmp
or
xchg
stos
daa
fs
adcb
xchg
pop
pop
cmp
cs
fldcw
scas
cmp
repnz
push
jns
mov
std
jb
imul
and
cmpl
cwtl
adc
int3
and
inc
hlt
or
adc
and
sub
cmp
xchg
push
and
insb
js
cld
dec
nop
xchg
mov
and
xchg
je
sub
insl
jae
push
test
cmp
sbb
popl
ss
xor
ja
xor
mov
xor
push
add
pushf
dec
popa
insb
jb
insl
adc
sbb
addr16
and
inc
adc
push
clc
push
ds
daa
jmp
sub
cld
sbb
cwtl
mov
dec
daa
push
inc
rorl
or
ljmp
gs
cltd
and
adc
insb
dec
mov
dec
vaddss
xchg
adc
mov
sbb
or
js
lods
jl
jb
pushf
push
xor
adc
pop
imul
xor
iret
xor
mov
sub
jle
mov
lret
insb
push
lret
and
int3
mov
cmp
sbb
cli
lret
scas
lcall
fucomip
or
daa
imul
sub
xor
mov
insl
das
cli
push
pop
pop
cli
imul
dec
xchg
jg
jo
outsb
push
fucomip
cmp
xchg
out
jl
dec
dec
dec
mov
nop
xchg
or
test
lods
xchg
jbe
imul
dec
adc
pop
aas
out
adc
pop
adc
fcoms
inc
inc
xchg
sbb
lds
sbb
mov
xchg
and
cmp
out
aas
test
mov
das
mov
pop
lret
fidivrs
sub
imul
je
jle
lods
inc
push
mov
xchg
leave
fmuls
mov
orb
movsb
jge
adc
gs
les
dec
ljmp
adc
out
mov
inc
insb
ror
mov
js
out
ds
sti
sbb
mov
jbe
push
inc
jae
jae
dec
dec
scas
mov
lods
push
push
pop
insb
in
movsb
xor
pop
xchg
insb
shl
outsb
outsb
imul
xchg
push
inc
repnz
pop
jo
jb
bnd
cs
imul
imul
xor
jnp
inc
dec
hlt
mov
push
jne
add
das
fnsave
clc
pusha
mov
scas
cltd
inc
add
jae
mov
push
das
test
adc
xchg
shlb
je
insb
mov
cmp
outsl
xchg
mov
fistl
inc
call
das
sbb
adc
xchg
insb
out
jne
and
push
inc
mov
imul
push
aas
js
ja
dec
and
shlb
mov
outsb
mov
adc
aaa
cmp
das
mov
mov
bound
ret
mov
sahf
add
jne
xchg
and
adc
sarb
adc
popa
sub
jns
pop
imul
imul
push
testb
int3
sub
or
jo
cmp
cmp
cmp
xchg
or
jns
push
push
inc
pop
push
cmpsl
push
insb
pop
xchg
pop
aas
sub
lcall
sub
xor
jae
push
push
inc
lods
adc
call
push
popa
addr16
cmp
and
pop
insl
stos
push
pop
out
aaa
aas
add
shrl
mov
cmpsb
cmp
add
jns
push
cld
dec
int3
imul
lret
push
push
popl
dec
sbb
and
popa
adc
fsub
lahf
gs
sbb
jae
cmp
loop
out
cwtl
or
xor
fadds
inc
inc
jne
nop
test
imul
inc
clc
mov
inc
and
adc
cmp
jg
sub
test
scas
push
cmp
insl
sub
sub
push
mov
call
mov
sub
dec
inc
dec
cmp
jmp
add
push
push
add
stos
adc
and
push
jne
jle
mov
mov
push
jae
dec
push
mov
mov
mov
fiaddl
pop
ja
fs
loopne
adc
sti
push
cs
loope
pop
or
inc
xchg
jle
jae
imul
pop
test
cwtl
sarl
inc
adc
dec
ja
or
push
or
add
inc
add
inc
jmp
mov
pop
arpl
push
enter
std
cmp
int
mov
inc
or
or
sub
jo
mov
add
sbb
mov
push
sub
cmp
sub
jmp
aas
pop
or
jne
inc
jae
xor
or
add
sbb
push
and
dec
cli
fldcw
xchg
sub
add
fisubrs
out
xchg
adc
add
and
dec
addb
mov
dec
popl
insb
and
adc
cmp
inc
or
and
cmp
movsl
add
push
push
and
add
repnz
add
and
call
adc
test
dec
add
add
inc
adc
add
les
lret
ret
sub
inc
sbbl
pushl
add
add
or
movsb
popa
add
pusha
cmpb
dec
sub
mov
loopne
or
jle
cwtl
test
shll
cmp
sub
and
pushf
sbb
pop
lods
add
add
mov
pop
mov
ret
add
fcomp
loopne
add
jle
cmp
enter
add
add
fs
sbb
push
or
or
cmp
dec
sbb
xchg
addps
adc
sbb
and
inc
jb
cltd
xor
dec
sbb
or
pusha
sub
xchg
insb
sbb
insl
sbb
xor
jo
sbb
jb
lods
push
cltd
xor
or
and
adcl
sub
lret
cmpsl
jb
mov
xlat
mov
pop
or
and
sub
dec
mov
test
adc
inc
jmp
sbbl
cmp
sbb
xor
pop
dec
sub
adc
and
and
push
pop
clc
xchg
or
add
adc
cld
adc
add
xchg
lock
inc
in
and
loopne
or
rcrb
enter
rorb
mov
push
mov
dec
and
cwtl
and
xchg
adc
add
jg
sbb
decl
jne
orb
adc
add
xor
jae
add
adc
outsb
inc
popl
cld
test
xor
inc
mov
sbb
nop
inc
or
jo
and
adc
jge
clc
adc
pusha
je
inc
cmp
or
push
sbb
xchg
repnz
jb
push
inc
xchg
mov
in
cmp
mov
mov
and
inc
jae
sbb
pop
adc
adc
call
mov
js
mov
or
push
mov
lods
loop
enter
pop
push
dec
and
adc
call
jo
fcoml
jns
int3
and
dec
mov
inc
ljmp
mov
push
push
push
daa
lods
in
push
push
inc
inc
call
pop
lods
or
push
add
push
cmp
xchg
inc
mov
enter
adc
xor
or
insl
push
xor
cmp
ja
xchg
jl
or
dec
repnz
adc
xchg
or
insb
and
sti
cld
and
inc
dec
addb
loope
subl
or
xor
popa
ret
sbb
inc
push
dec
push
mov
xor
xor
mov
sub
sub
bound
dec
adc
or
sub
or
arpl
int3
test
push
inc
sub
or
adc
mov
sub
sbb
test
push
stos
or
mov
sub
sub
test
push
imul
or
and
or
nop
xor
mov
ficoms
lods
or
sub
fcoml
mov
xchg
mov
pop
or
arpl
and
add
jo
mov
push
pop
sub
or
cmp
adc
push
inc
or
and
fsubrl
lods
pusha
sbb
mov
dec
dec
pop
mov
sbb
xchg
or
js
adc
test
and
dec
inc
inc
loop
and
imul
or
or
pop
pop
dec
mov
adc
mov
mov
push
movsl
fsub
or
pusha
fiaddl
mov
sbb
pop
inc
inc
jo
xor
pop
nop
sub
pop
mov
outsl
loopne
inc
dec
dec
test
and
xor
pop
mov
dec
and
xor
dec
or
popf
inc
rorb
mov
fdivl
and
sbb
loop
lea
sub
sbb
inc
push
push
inc
sub
pop
push
xor
pop
addb
adc
lea
test
movsb
mov
dec
jns
mov
mov
push
test
cmp
mov
pop
inc
adc
inc
sub
add
cwtl
pop
adc
pop
add
dec
shlb
add
jle
sbb
push
in
in
adc
inc
inc
or
xchg
or
or
jle
adc
sbb
les
fs
bound
adc
inc
adc
les
inc
mov
mov
pushf
je
adc
cmp
fs
sub
xchg
mov
in
dec
push
js,pt
add
jo
sbb
or
add
and
js
loopne
push
pop
or
fcoml
mov
push
mov
adc
sbb
int3
or
mov
sbb
test
xchg
jo
enter
pop
dec
xor
cltd
pusha
sub
sbb
or
cld
push
inc
or
lock
dec
inc
and
mov
sub
or
inc
mov
dec
pop
jl
or
je
pop
icebp
jbe
cmp
pop
mov
sbb
adc
or
stos
or
lock
mov
push
enter
leave
pop
sub
mov
push
shlb
fsub
pusha
stos
or
and
mov
sub
jbe
cmp
pop
mov
call
and
fcomp
shrb
cwtl
fcoml
or
nop
jl
jbe
cmp
dec
movsb
pop
push
addr16
or
call
adc
rorb
adc
fadds
cltd
xor
les
sbb
lock
lds
cmp
cltd
and
adc
dec
pop
xchg
pop
and
dec
inc
mov
sub
dec
adc
adc
or
or
test
or
xchg
hlt
and
inc
in
call
and
dec
enter
xor
and
dec
xchg
xchg
mov
jl
js
mov
daa
push
lret
data16
movb
add
jg
data16
xchg
test
enter
cli
or
adc
cmpxchg
adc
push
adc
and
leave
sbb
mov
mov
ret
clc
and
lock
mov
sub
imul
in
mov
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
xor
andb
hlt
mov
andb
add
std
mov
fadds
and
stos
xchg
add
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
sti
aas
jno
or
mov
lock
add
fisttps
xchg
outsb
adc
shrl
pop
mov
icebp
add
mov
inc
sbb
lods
pop
lds
mov
insb
scas
pop
add
shlb
mov
aad
mov
std
loop
add
adc
stos
in
das
dec
add
dec
les
leave
js
add
jne
int
icebp
lcall
xchg
cmp
push
mov
out
lock
pop
loop
sarl
popa
mov
mov
jle
push
jl
mov
add
lea
mov
outsl
inc
dec
ret
movsl
jmp
xor
sub
jge
lods
mov
inc
rolb
fstl
arpl
int3
and
push
ja
call
cmp
sbb
and
add
mov
cmp
add
xlat
cmp
mov
sbb
mov
jecxz
cmpsb
add
movb
jne
fldt
add
xor
shlb
shlb
dec
add
mov
movsl
addb
mov
loop
mov
adc
mov
add
xor
rcpps
pop
add
rolb
ret
call
out
pop
push
xchg
cmp
push
add
gs
std
lock
scas
push
xchg
jge
pop
add
lahf
into
ror
add
cmpsb
dec
fmul
inc
rcrb
sarb
push
gs
pop
aam
loope
inc
sahf
sbb
pop
pop
adc
xor
fs
cmp
cmp
jb
popa
add
data16
push
pop
xor
fstpl
mov
movsl
xor
cmp
add
pop
cmp
orps
sbb
sbb
aam
or
sub
inc
fistpll
outsb
arpl
xor
fisubs
or
inc
les
and
dec
fs
push
and
adc
add
out
fldl
clc
xchg
les
lods
inc
xchg
js
pop
adc
dec
dec
mov
jl
xchg
dec
test
mov
rolb
notb
push
mov
or
and
dec
inc
xchg
pop
and
xchg
and
dec
aam
call
xlat
inc
sbb
mov
jo
mov
xchg
stos
and
out
adc
into
fxch
or
xchg
and
pop
push
and
dec
mov
enter
repnz
fldcw
cmp
xchg
dec
mov
inc
shl
mov
adc
fiaddl
sbb
dec
cmp
insb
jp
xchg
adc
xchg
fsubl
repnz
fildl
mov
dec
and
dec
jo
mov
lcall
fsubs
inc
or
or
xchg
sub
ss
inc
pusha
mov
jl
xchg
dec
mov
inc
aam
call
inc
or
or
sub
xor
pushf
popw
push
sbbb
xchg
je
adc
or
dec
or
adc
mov
adc
xchg
push
dec
jl
stos
cmp
push
push
cmp
outsl
arpl
je
push
sbb
pop
xor
cs
cmpl
cmp
jae
mov
call
cmp
sbb
jb
push
jne
jge
inc
test
fs
cmp
imul
repnz
outsl
jae
out
imul
cs
add
cli
jo
rolb
dec
outsl
popa
fs
imul
jno
aas
cld
addl
mov
fs
jmp
dec
mov
insl
cli
mov
pcmpgtb
sbbl
xchg
xchg
aas
dec
jo
outsb
movb
inc
pop
jne
inc
fiaddl
jo
dec
xor
mov
fstpt
nop
test
inc
pop
inc
push
rcll
cs
push
in
outsb
popa
cmp
push
loop
out
nop
int3
dec
dec
js
filds
push
imul
in
pop
and
inc
gs
xchg
and
push
sub
sub
jecxz
jbe
sub
mov
xchg
push
mov
std
xchg
outsb
data16
inc
jae
icebp
outsb
inc
xchg
jmp
xor
nop
push
xchg
es
sub
cmpsb
fsts
cwtl
mov
clc
and
fldt
jp
mov
jne
jo
and
adc
jne
rcrb
loop
push
loope
xchg
inc
push
add
mov
cltd
les
jecxz
repnz
add
outsb
jae
js
fisttps
push
imul
add
xchg
add
sahf
sbb
dec
dec
fbstp
xchg
xchg
jne
jo
add
bnd
xor
loopne
lcall
push
inc
inc
adc
jno
xor
mov
adc
into
sbb
dec
mov
sub
cmpb
pushf
xor
or
les
cvttps2pi
ds
dec
sbb
push
xchg
adc
and
mov
push
outsl
jmp
mov
sub
es
sub
xorb
leave
xor
dec
jo
movsl
dec
or
and
roll
aaa
movl
lret
inc
inc
lods
push
mov
xor
or
icebp
outsb
arpl
and
shll
mov
adc
clc
xchg
sti
addr16
and
mov
int
jnp
out
into
out
push
add
add
aad
sbb
adc
inc
jecxz
imul
xchg
or
cmp
xor
push
jle
jne
xchg
push
jne
ret
xor
and
gs
into
push
dec
pushf
sbb
and
dec
inc
in
addr16
inc
push
or
inc
ret
mov
xor
imul
cmp
jno
xor
pop
jo
adc
data16
in
xor
lods
pop
adc
cmpsb
xor
push
mov
xchg
push
add
push
push
imul
ret
add
ret
arpl
mov
pop
lea
xor
addr16
xchg
add
es
js
mov
inc
mov
lret
ljmp
sub
ss
cmp
and
dec
push
lret
movsb
adc
and
jo
leave
lret
shlb
dec
loop
mov
cmp
cmp
nop
ror
xlat
repnz
inc
ja
fwait
or
push
dec
inc
mov
les
dec
sub
sbb
jb
mov
dec
mov
mov
dec
inc
jecxz
mulb
iret
mov
fs
dec
bound
dec
inc
ja
mov
fs
faddl
inc
add
pop
xchg
nop
and
adc
fsubs
inc
mov
sbb
je
fwait
jp
subl
and
sbb
jle
mov
xchg
iret
dec
outsl
mov
adc
xchg
sub
insb
inc
out
scas
js
inc
pop
andb
mov
sub
sbbb
xor
mov
sub
negb
xor
inc
pop
jmp
push
xor
std
xchg
imul
cld
push
add
or
push
sub
and
mov
jns
or
or
dec
add
xor
inc
adc
push
sbb
push
jae
ss
lahf
xor
cld
shl
dec
sbb
mov
sbb
adc
sbb
adc
push
push
mov
aam
inc
xchg
lods
dec
sub
call
adc
test
inc
xor
and
inc
dec
aaa
jo
aas
adc
pop
jo
scas
addl
and
js
push
mov
subl
push
dec
dec
cmc
xchg
sub
jl
pop
jne
lret
sahf
cmp
xchg
in
xorb
mov
imul
dec
inc
push
dec
lcall
int3
add
add
loopne
popa
add
or
bswap
sub
inc
fsts
pop
jmp
mov
sub
cmp
inc
jp
jl
jle
jle
jle
jle
jle
sbb
xor
popf
pop
sbb
int3
lahf
fistps
jmp
xchg
xor
push
addr16
sub
ds
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
ss
adc
sbb
and
xor
cmp
ds
inc
stc
dec
stc
push
stc
pop
stc
pop
stc
gs
insb
stc
jb
jns
jg
xchg
mov
xchg
stc
cltd
stc
mov
stc
mov
stc
aad
fdivrp
out
in
stc
repz
stc
sti
xorl
adc
sbb
and
xor
jmp
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
cmp
daa
or
xchg
cmpsl
sub
xor
cmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
cmp
leave
adc
and
sub
xor
aas
add
aas
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
mov
jae
jp
cmpb
aas
lea
xchg
aas
lcall
aas
mov
aas
sarb
loopne
in
jmp
cmc
aas
cli
push
or
adc
mov
iret
cvtps2pi
nop
aas
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
popa
aas
addr16
jnp
cmpl
xchg
aas
fwait
aas
mov
aas
mov
mov
aas
iret
aas
aas
fdivrl
jecxz
jmp
aas
std
push
add
or
mov
iret
sbb
xor
aaa
iret
ds
inc
iret
dec
iret
push
iret
pop
iret
pop
iret
gs
imul
iret
js
jg
test
mov
xchg
iret
lcall
iret
ret
iret
iret
iret
fcmovne
out
repz
inc
or
xchg
and
inc
dec
dec
push
iret
pop
iret
arpl
imul
iret
jnp
or
iret
xchg
iret
fwait
iret
mov
iret
mov
iret
fmulp
in
jmp
icebp
iret
clc
iret
inc
add
mov
and
repz
aas
repz
repz
repz
repz
repz
repz
repz
jg
mov
xchg
repz
repz
repz
repz
repz
in
repnz
testl
mov
and
xor
ud1
inc
iret
push
iret
pop
iret
arpl
push
jo
ja
jge
test
mov
xchg
iret
xchg
iret
sahf
iret
movsb
iret
stos
iret
mov
mov
iret
lret
iret
ror
fmul
in
in
iret
repnz
cli
ret
add
or
and
sub
xor
cmp
inc
repz
repz
repz
repz
rep
repz
jnp
xor
repz
repz
repz
repz
repz
loopne
in
jmp
hlt
testl
add
out
pop
or
cmp
cmp
cmp
xor
cld
push
cld
pop
cld
pop
cld
push
cld
cmp
cld
nop
cld
sahf
cld
mov
cld
mov
cld
aam
loope
out
out
cld
hlt
cld
sti
cld
add
xor
cmp
cmp
cmp
cmp
cmp
inc
aas
inc
aas
push
aas
pop
aas
gs
imul
aas
js
xchg
mov
xchg
aas
mov
mov
aas
repz
decb
pop
xor
pop
add
pop
loope
jmp
lcall
stc
out
stc
idiv
add
pop
and
dec
push
mov
xchg
iret
sahf
iret
mov
iret
repz
sti
ret
push
xor
xchg
das
mov
arpl
outsb
jecxz
repz
add
jnp
xchg
jp
pop
loop
dec
je
sub
xor
fs
cmp
xchg
inc
aad
jmp
cmc
cmpsl
std
lds
push
and
jae
movsl
xor
sarb
in
call
jno
les
cmp
je
jbe
js
dec
je
iret
xchg
iret
stos
iret
mov
mov
iret
lret
iret
aam
fcmove
loop
cld
inc
cmp
leave
pop
xor
ja
push
mov
jle
jle
jle
sbb
cmp
popf
sub
sbbl
dec
repz
repz
rep
repz
jl
push
inc
push
ret
stc
sar
fdivs
ljmp
adc
sbb
ds
push
aas
mov
es
pusha
push
ds
dec
sub
cmpsl
xchg
cmc
out
loope
aas
cs
out
outsl
xchg
adc
dec
mov
repnz
inc
push
jb
je
jbe
js
jp
jl
jle
jle
sbb
xor
orl
je
mov
loope
or
ss
test
xchg
xchg
lods
inc
push
pop
jmp
call
je
jbe
js
jp
pop
hlt
clc
dec
imulb
in
xchg
rcrl
dec
leave
push
shll
jl
mull
repnz
or
jb
je
jbe
js
jp
jl
jle
jle
jle
push
and
xor
cmp
inc
push
sahf
gs
lea
mov
ds
in
jmp
mov
add
dec
jle
xchg
iret
test
mov
cld
or
inc
or
es
cmp
mov
movsl
jle
jle
jle
jle
jle
cwtl
inc
adc
lcall
aas
jo
mov
mov
cltd
aas
mov
mov
ret
and
sbb
xor
popf
adc
sub
out
out
imull
out
out
loope
xor
xor
sub
inc
lock
hlt
clc
addr16
cmp
cld
mov
cld
ficoml
add
shll
mov
ret
and
jle
jle
jle
jle
jle
jle
jle
jle
jle
adc
xor
dec
and
out
out
in
mov
cld
jmp
shlb
in
call
imul
mov
jle
dec
and
jb
dec
dec
arpl
mov
mov
int3
iret
loope
test
inc
pushf
xor
cmp
sahf
aas
mov
enter
repnz
pop
cmp
xor
pop
dec
outsl
mov
mov
int
sub
dec
call
mov
jle
jle
sbb
cmp
popf
xor
dec
dec
cld
jae
sbbb
add
sbb
inc
in
pop
lock
hlt
jge
std
sarb
js
jp
pop
dec
scas
aas
jbe
sahf
rclb
popf
mov
and
pop
cmpsl
xor
xchg
call
adc
je
dec
cmpsb
adc
jo
dec
inc
lahf
movsb
js
pop
jle
cmpsl
lahf
in
xchg
inc
shlb
xchg
cmpsl
lock
xor
insb
aaa
push
add
and
aas
lock
xchg
cmp
jle
jle
jle
jle
jle
sbb
xor
dec
sahf
xchg
push
fisubs
sbb
push
aaa
sbb
xor
addr16
xchg
jp
and
out
out
in
xchg
push
mov
ljmp
cmp
mov
icebp
hlt
sub
es
cmp
cmp
dec
sub
cmpsb
lahf
xchg
pop
movsb
xchg
mov
or
rcll
xchg
or
cmp
cmp
push
cmp
cmp
lahf
cli
xchg
subl
movd
mov
add
cmp
inc
cmp
outsb
cmp
lahf
es
add
or
dec
inc
addw
mov
pusha
add
jb,pn
xor
mov
aas
dec
icebp
stc
jns
sahf
sbb
and
ss
push
nop
cwtl
jle
jle
jle
jle
jle
pop
mov
cmp
fstps
jp
inc
popf
pusha
sbb
mov
int3
mov
xor
xchg
or
fwait
cmpsl
mov
ret
stc
cld
and
xor
sahf
cmpsb
push
mov
jmp
dec
daa
mov
xchg
aaa
aas
leave
imul
and
jb
je
jbe
dec
mov
scas
or
push
in
call
movsl
hlt
cld
sti
std
jo
aaa
in
mov
js
jp
jl
mov
jb
dec
jge
or
paddb
daa
push
dec
inc
je
xchg
repz
repnz
pop
rorl
xchg
mov
mov
repz
or
and
ss
jne
lcall
jle
jle
adc
aas
sbb
pop
ret
es
stc
mov
fs
fisubl
sub
push
daa
cs
inc
addr16
xchg
add
out
out
out
loope
xor
flds
and
mov
aam
fdivrp
jmp
mov
cmp
shlb
call
add
es
xor
addr16
xchg
jle
mov
out
out
in
mov
and
in
mov
insl
hlt
ja
cld
movsb
cld
ficoml
inc
dec
cwtl
pop
cmpsl
hlt
jp
add
out
out
in
sar
add
adcb
jp
jl
pop
aas
mov
push
or
sub
mov
bound
fwait
dec
enter
and
sbb
cmp
cmp
and
out
out
loope
cmp
cmp
daa
push
xchg
test
loopne
testl
cwtl
icebp
mov
test
cld
hlt
cld
or
cmp
dec
mov
push
cmp
cmp
lods
xchg
out
loope
cmp
leave
rorl
adc
mov
cmpb
addr16
in
sti
pusha
sahf
lods
in
xchg
data16
dec
out
aas
cli
or
aas
sub
push
cmp
and
push
dec
mov
add
push
nopl
xor
dec
cltd
mov
stc
aad
in
and
add
pop
push
test
lahf
out
hlt
adc
inc
js
xchg
mov
xchg
data16
xchg
iret
lods
bsr
xor
xchg
outsl
mov
loop
lock
jle
pop
or
loopne
mov
leave
in
daa
or
roll
or
mov
sbb
jle
add
dec
push
mov
sub
cmp
in
mov
mov
jle
dec
rcrl
aas
out
mov
pop
cmp
inc
scas
xchg
mov
rorb
adc
push
dec
xchg
aam
push
pop
in
call
dec
shrl
mov
pop
and
inc
adc
mov
nop
mov
js
ljmp
hlt
clc
pop
sub
sbb
jbe
js
jp
dec
cld
push
negb
dec
mov
iret
cmp
or
cmp
call
je
jp
xor
xor
leave
rcll
bound
adc
cmp
cmp
add
or
lahf
sti
cmp
cmp
jmp
adc
aaa
sbb
cmp
cmp
decb
adc
sbb
ret
cmp
mov
hlt
push
xchg
cmp
leave
inc
rorl
loope
call
je
dec
xchg
ljmp
aas
loop
and
dec
mov
aad
cmp
cmp
adc
cmp
cmp
cmp
add
or
ficoml
iret
movsb
iret
ror
in
adc
les
shlb
fisubrs
push
cmp
dec
dec
pop
mov
dec
mov
iret
test
repnz
jb
je
push
add
dec
or
popa
or
sar
clc
add
jbe
push
mov
lods
inc
in
stos
lock
loope
pop
pop
sbb
push
daa
pop
inc
into
mov
push
das
fidivrs
sub
sbb
cmp
xchg
ss
jmp
aas
daa
mov
xor
push
push
adc
popa
jle
stc
loope
icebp
stc
cli
stc
inc
js
cmp
mov
loopne
pushw
cmp
sub
dec
sub
cmp
inc
movsb
pop
bound
clc
test
adc
inc
ljmp
subl
jmp
js
sbb
sub
cmp
dec
mov
mov
sub
adc
pop
push
push
inc
lret
dec
lock
hlt
push
mov
cld
mov
cld
xlat
sahf
push
dec
add
ss
push
lock
xchg
clc
cmpsb
cld
scas
sahf
adc
repnz
push
xor
dec
mov
ret
sarb
test
or
clc
pop
xor
pop
cmp
dec
cmp
jno
test
out
out
out
in
sarb
stc
push
lcall
js
cwtl
ss
je
jbe
dec
xor
mov
dec
in
out
inc
mull
test
mov
lcall
inc
cmpsb
rep
repz
or
sbb
push
mov
mov
cld
aad
lret
lahf
notb
cs
inc
in
pop
pushf
fcoms
popf
dec
dec
mov
cmp
rcrb
and
jecxz
repz
cmp
imul
pop
sub
mov
popf
daa
ds
out
out
loope
ds
adc
xor
movsb
jl
dec
sub
sub
rcrb
dec
sub
inc
outsb
int
rcr
fildll
das
dec
adc
sub
icebp
xchg
stc
lods
stc
mov
sub
push
and
mov
jb
je
jbe
js
jp
dec
dec
sub
dec
xchg
lret
lahf
movsb
sub
fisttpl
pop
push
and
inc
ret
dec
rcll
sarb
jo
js
sbbb
and
out
out
out
loope
xor
push
inc
cmp
jb
pushf
jg
test
xchg
mov
movsl
cld
lods
cld
mov
addl
and
mov
loope
and
push
mov
pop
jae
nop
lahf
lcall
lahf
mov
xchg
aad
mov
pop
inc
sbb
fcoml
or
fnstenv
or
movsl
bound
push
jbe
nop
push
xchg
cmp
sbb
sub
mov
jle
dec
loope
mov
movsb
push
mov
xchg
lahf
popf
adc
scas
dec
xchg
scas
daa
lret
pop
or
out
call
andl
jecxz
repz
and
jl
nop
lcall
add
sbb
ret
jbe
stc
scas
xor
xchg
xor
loopne
mov
cld
in
std
rcl
orb
and
and
jp
dec
fistpl
xchg
lods
test
pushf
add
jg
cld
in
cld
cmc
mov
inc
or
loope
jmp
lds
sbb
imul
mov
mov
ficoms
push
or
pop
je
loop
add
adc
ficoml
jb
aaa
lcall
xchg
cmp
cmp
in
test
insl
leave
jnp
mov
cmovs
iret
call
pop
mov
jns
pop
mov
lods
add
popa
push
cmp
rorb
out
out
in
mov
mov
push
dec
push
popa
xchg
jno
ret
xchg
xchg
pop
sub
scas
xchg
mov
sub
cld
aam
pop
fistps
or
sub
cld
push
cld
data16
adc
dec
mov
jle
dec
into
mov
icebp
mov
lock
rclb
pop
out
in
mov
cld
movsl
in
rcr
rclb
xlat
dec
sbb
iret
inc
add
adc
and
push
jbe
mov
jle
leave
xchg
pop
ljmp
loop
out
iret
cmc
fcompl
cmp
mov
sbb
fimuls
pop
jle
mov
pop
jl
pop
xchg
iret
lahf
iret
mov
ror
lret
jecxz
sub
xor
push
xchg
inc
or
jo
jle
jle
jle
dec
lods
ret
mov
inc
dec
out
mov
sti
add
and
jl
mov
cltd
aas
sahf
and
mov
loopne
out
std
xchg
push
dec
push
dec
bound
push
loop
cmc
mov
pop
mov
hlt
lcall
enter
imulb
test
mov
lock
outsl
iret
jg
xchg
dec
stos
ror
dec
int3
add
repnz
adcb
cmp
ret
je
push
fcoms
cmp
mov
mov
clc
icebp
xor
loopne
push
pushf
cmp
mov
int3
out
out
loope
cmp
push
adc
stc
dec
dec
dec
pop
popa
incb
shlb
aas
fisubs
repz
les
mov
rorb
push
cmp
lds
push
add
lcall
jno
add
push
xor
enter
inc
je
jbe
js
aas
pushf
aaa
pop
xchg
mov
lcall
repz
cmp
lods
jno
mov
sbb
mov
ret
pop
sbb
pushf
jbe
js
jp
jl
dec
sbb
or
popa
loope
jecxz
push
add
dec
daa
mov
enter
std
push
mov
scas
xor
add
sub
adc
cwtl
push
dec
pop
cmp
loop
clc
pop
jle
pop
mov
rclb
ss
inc
dec
call
xchg
mov
faddl
push
mov
xchg
lock
sbbl
add
sahf
ret
xchg
iret
ret
sub
push
and
push
ror
cmp
outsb
in
ret
cmp
push
into
sub
mov
sbb
fs
cmp
push
std
leave
add
add
addb
cmp
sub
scas
jbe
cwtl
lcall
ljmp
push
and
mov
push
cmp
addr16
aam
jecxz
jl
or
pop
cld
and
dec
outsb
clc
mov
inc
and
mov
xor
push
les
pop
mull
ret
jo
cwtl
cld
pop
and
out
clc
xchg
dec
xchg
and
mov
push
cmp
inc
cmp
insl
loope
jle
and
repnz
call
je
jbe
js
jp
jl
jle
jle
pop
mov
xor
inc
pop
cmpsl
or
mov
jle
dec
sub
fidivs
cmp
jl
sbb
mov
cmp
dec
addb
shrl
or
js
dec
add
ds
lock
sbb
aas
and
fs
add
add
xor
push
xchg
jo
dec
into
andb
jmp
loope
jmp
mov
xor
daa
popa
add
jge
adc
rcll
push
sbb
xor
popf
sub
dec
lahf
pop
adc
js
bound
dec
movsb
and
xor
xor
dec
inc
mov
bound
stc
loopne
xor
cmp
pop
and
loopne
out
loope
adc
and
mov
mov
repz
aaa
mov
inc
push
jb
xchg
mov
ret
pop
push
or
sub
sub
aas
paddusb
inc
xor
xor
adc
cmp
in
call
imul
push
push
leave
leave
popa
dec
div
pop
sub
cmp
roll
cmp
dec
inc
pop
call
jnp
xchg
rclb
jle
pop
cmovnp
sub
mov
jl
and
adc
mov
xor
hlt
clts
jl
pop
int3
pop
rcll
in
mov
xchg
test
sbbb
xor
loope
sahf
add
outsl
xchg
xchg
addb
dec
pop
or
sbb
push
js
inc
cmp
xorb
imul
xchg
and
or
js
je
jbe
pop
mov
add
fsub
je
dec
lcall
inc
inc
daa
push
xchg
xchg
cmpsl
xchg
lds
sub
and
ror
pop
es
add
inc
mov
adc
es
popf
bound
xchg
addb
in
icebp
test
in
xchg
lock
out
cld
stc
cld
push
daa
ds
loope
mov
punpcklbw
sbb
aas
and
ret
idivb
je
scas
lods
inc
push
shlb
push
xor
in
lahf
test
dec
cli
fdivr
bound
dec
or
inc
xchg
loope
jmp
repnz
xor
in
call
insl
loopne
xchg
test
sub
sbb
aas
adc
roll
push
cs
or
je
add
and
data16
hlt
jne
xchg
pop
loope
out
int3
xor
mov
pushw
loopne
test
lcall
cmp
and
cmp
jno
pushf
xchg
movsb
mov
mov
sahf
add
xchg
sub
je
movsb
loope
cmc
clc
or
pop
adc
sub
xchg
xor
xchg
sub
pop
popf
xchg
mov
mov
jl
sbb
xchg
das
lock
xchg
loopne
lods
cld
mov
adc
sahf
cwtl
push
pop
push
jae
jg
xchg
xchg
cltd
lock
lds
sbb
subb
pop
or
out
cmpsb
or
lret
test
cmp
enter
pop
cwtl
test
ret
jo
pop
je
or
aas
jge
dec
mov
push
loopne
les
lds
lock
dec
call
ss
mov
mov
mov
cmp
imul
push
into
xchg
fcmovb
push
das
xor
jo
bound
jle
jo
xor
test
lcall
loope
aam
in
in
stc
cld
stc
jno
fdivrs
xchg
cmp
es
mov
push
mov
inc
xchg
icebp
loope
and
loope
jmp
or
pop
inc
mov
dec
in
into
push
scas
push
dec
push
cltd
bound
sub
leave
out
jecxz
stc
cmp
rcl
jecxz
and
or
and
pushf
cmp
rcrb
dec
std
rcrl
or
outsb
popa
mov
hlt
clc
clc
inc
and
push
shlb
sub
cld
cmp
aas
dec
popa
sarb
or
and
add
pop
out
daa
cmovb
or
repz
pop
sub
popf
sub
mov
push
mov
add
sbb
push
data16
ja
nop
adcb
dec
push
fdivr
in
stc
clc
pop
xor
dec
cmp
push
mov
stos
pop
fsts
in
xchg
cwtl
push
mov
ret
test
cmp
mov
ss
jbe
js
dec
sbb
lods
sbbb
das
or
rol
js
dec
push
or
subl
xchg
and
push
test
sub
lock
lea
cmp
or
mov
inc
push
aam
test
out
outsb
std
clc
dec
mov
sub
adc
or
lods
push
sub
popa
push
jo
mov
rcrb
mov
xor
cmp
xorb
mov
cld
adc
fcomi
cmp
dec
sbb
inc
movsb
adc
dec
sbbb
push
ss
pop
pop
hlt
sahf
mov
xchg
mov
cmp
lock
and
mov
aas
hlt
sub
sub
lock
sahf
push
sbb
xchg
jp
insb
test
lock
mov
cmp
nop
loope
call
dec
cmp
or
cmp
pop
xor
inc
dec
xchg
ljmp
and
or
cmp
sub
dec
mov
xor
pop
and
or
sbb
loopne
or
adc
andl
iret
rcrl
push
or
jl
pusha
jp
dec
ljmp
dec
dec
xor
jl
cli
or
inc
jle
ficomps
mov
popf
mov
push
inc
dec
clc
jbe
pushf
mov
xchg
icebp
popf
stc
cmpsb
fs
mov
mov
mov
cmp
adc
sub
das
sub
aam
pop
xchg
add
hlt
mov
in
fdiv
add
cmp
cmp
cmp
sahf
bound
cmp
insb
in
mov
cmp
or
cmp
inc
add
inc
loope
jmp
or
shrb
mov
push
pushf
in
dec
inc
popa
inc
sarl
aas
jmp
sub
notb
adc
sbb
sub
stos
pop
push
mov
push
clc
insb
xchg
pop
pop
test
lea
cld
test
lods
cld
mov
mov
repnz
aas
jmp
repnz
jb
je
jmp
xchg
push
test
dec
xlat
add
or
sbb
dec
sub
dec
inc
nop
or
sbb
jbe
adc
cld
repnz
js
icebp
shr
fnstenv
or
push
movsb
and
mov
dec
aaa
addb
adc
push
testb
dec
push
js
dec
push
sub
adc
fdivl
adc
test
and
xchg
mov
and
pop
adc
je
dec
inc
or
xchg
pop
fwait
ret
adc
repz
repnz
mov
pop
popa
mov
jecxz
or
daa
pop
cmp
inc
xchg
pop
cld
mov
mov
fwait
daa
mov
push
and
jo
daa
mov
xor
fsubl
pop
or
cmp
lcall
xchg
and
popf
outsl
pop
xchg
sbb
cmp
xchg
xor
cwtl
lock
loope
dec
pop
pop
bound
adcb
shl
in
repz
repnz
cld
xchg
sbb
lock
clc
aas
es
inc
les
jmp
mov
test
sbb
dec
xchg
or
xor
mov
jp
js
and
lods
inc
pop
adc
push
jp
push
mov
push
inc
lock
call
xor
cmp
sub
mov
cmp
xchg
inc
mov
ss
in
mov
insb
clc
clc
add
aaa
adc
popf
insb
xchg
jle
xor
rclb
dec
loop
and
in
mov
mov
and
jbe
push
fwait
cmp
pop
xchg
je
adc
or
pop
xchg
cmpsl
push
call
cmp
cmp
sub
jmp
inc
repnz
jl
pop
gs
outsl
addl
test
in
fsubl
call
pushf
test
and
cmpsl
push
das
sbb
cmovl
sbb
xor
popf
inc
push
dec
loopne
mov
daa
andl
ret
and
mov
sub
sahf
dec
xchg
test
call
xchg
mov
test
mov
ss
inc
dec
cmp
pop
shlb
shlb
mov
cli
shrl
jge
lods
jge
dec
dec
aas
loope
cld
jo
jb
pop
sub
clc
push
shlb
addl
loopne
in
mov
jae
sub
in
or
adc
ljmp
cwtl
adc
sub
inc
test
mov
cs
sbb
jo
dec
daa
pop
inc
jp
sub
daa
push
popa
shlb
and
pushf
sahf
mov
iret
icebp
dec
inc
push
xor
sub
inc
popa
addb
mov
into
mov
and
sbbl
add
adc
mov
cmp
inc
pop
jo
dec
adcl
mov
push
sub
mov
cmp
repz
pop
fbld
pop
sub
dec
lock
mov
leave
andb
push
sahf
cmpsb
sbb
dec
aas
into
das
jecxz
insb
idiv
and
aaa
mov
jmp
in
sti
push
getsec
and
push
mov
nop
jp
jl
pop
in
cli
lret
arpl
pop
je
jbe
pop
in
cld
ret
or
inc
xor
arpl
mov
cwtl
lcall
xchg
or
sub
hlt
push
clc
pusha
xchg
les
fwait
sub
ret
repz
dec
and
stc
in
repz
clc
sub
orb
push
mov
iret
push
or
loope
and
sub
pop
push
lock
clc
push
jle
pop
out
idivb
cld
add
cmp
daa
into
popa
fcomp
jnp
xchg
pop
dec
or
subb
movsl
push
ror
ja
xchg
sbb
jno
roll
loope
ljmp
paddusb
adc
add
xor
mov
push
inc
mov
push
cld
mov
js
or
into
sbbl
mov
dec
clc
ret
adc
popa
ret
mulb
dec
pusha
mov
dec
in
mov
jp
loope
call
je
dec
rolb
test
mov
cwtl
mov
ret
in
jle
dec
in
add
sbb
pop
xchg
mov
push
push
inc
adc
hlt
imul
sahf
lock
stc
adc
js
jp
dec
pushf
sub
push
clc
cmp
cmp
mov
mov
xor
test
call
pop
movsb
sbb
sub
cmp
je
pop
rclb
and
daa
push
inc
and
loop
test
mov
lahf
sti
xchg
and
inc
dec
aam
pop
push
leave
dec
pop
repz
adc
ds
inc
cmp
lods
dec
ds
daa
addb
stc
fdivrl
push
dec
mov
inc
aas
push
dec
push
test
das
sahf
popa
shlb
les
dec
out
inc
mov
xor
jne
pop
mov
pop
into
addb
sar
xchg
inc
ret
push
test
ja
mov
ucomiss
leave
sbb
dec
inc
rorl
enter
aas
ffree
and
loope
sub
jl
rorb
dec
int3
das
lock
jp
pop
mov
dec
pop
lds
or
shll
jp
mov
push
mov
or
and
ds
shrb
mov
add
inc
mov
xor
xchg
loop
and
loop
fdivp
leave
div
fcoml
add
and
sub
dec
ss
cmp
pop
mov
outsb
jo
nop
lods
pop
xchg
push
cmp
lret
adc
mov
cmp
jl
cmp
jecxz,pt
cmc
shlb
dec
pop
add
loopne
lods
mov
jmp
sbb
loopne
pop
and
pop
fs
mov
xchg
dec
push
xchg
jb
push
and
sbb
je
jnp
enter
mov
pop
std
cmpb
fcoms
btrl
cmpsl
iret
lret
iret
icebp
leave
adc
lods
je
jbe
js
jp
inc
gs
cld
popf
lahf
add
mov
or
lcall
xor
shrb
fsubs
mov
rorl
and
lea
shlb
dec
sahf
and
cmp
push
and
inc
cli
mov
pop
inc
mov
pusha
fiaddl
pop
sub
adc
dec
and
aas
or
inc
lock
and
mov
idivb
xlat
ds
daa
clc
inc
adc
and
inc
rcrl
xorb
test
addr16
das
aaa
shrl
add
outsb
cmpsl
add
pushf
mov
and
pop
mov
into
rcll
xchg
pop
adc
bnd
dec
das
mov
repz
adc
push
je
mov
dec
loop
pop
lock
in
mov
cmp
push
sbb
mov
jp
push
mov
daa
xchg
push
mov
mov
lock
testb
xchg
lods
fs
repnz
push
dec
adc
out
ficoms
lods
push
lods
adc
cmp
dec
out
pop
lret
movsl
movsb
lods
shll
cwtl
rorl
push
and
in
add
imul
dec
in
pop
out
xchg
mov
cmp
sub
out
loope
ds
push
xchg
jl
test
xchg
and
mov
adc
dec
mov
and
inc
dec
push
fs
xchg
and
and
scas
or
loope
pop
loope
outsl
or
rcrb
lret
pop
lock
lds
lods
out
std
pop
daa
xor
flds
xor
stos
cmp
pop
pop
sbb
cmp
insb
rcr
mov
adc
repnz
sbb
cmc
call
sbb
inc
ret
mov
xchg
lcall
dec
jmp
fs
lock
out
out
in
loope
loop
sarb
pop
test
lcall
imul
and
ljmp
in
lock
xlat
mov
push
add
fcompl
popf
sbb
imul
xchg
push
push
adc
int3
xor
fmuls
arpl
xor
repnz
dec
xlat
mov
lock
dec
call
cmp
or
or
sarb
dec
enter
repz
cmp
pusha
adc
xchg
in
mov
jb
cmp
pop
or
das
adc
pusha
jl
aas
push
in
push
and
fistpll
cmp
das
cli
or
les
hlt
dec
push
lock
lcall
aas
in
push
movsb
daa
jnp
mov
les
bound
test
sar
mov
ds
or
sub
je
dec
cmp
xchg
xchg
push
add
pop
movl
xor
leave
pop
shll
sub
out
sub
cmp
hlt
push
pop
jno
mov
inc
mov
fdivl
in
pushf
adc
loope
out
mov
push
test
jle
dec
rorb
enter
rorb
fmul
and
xchg
lcall
pop
rolb
jne
loop
jle
ss
das
fs
insb
xchg
out
in
clc
cmp
int3
or
add
or
adc
pop
hlt
mov
jo
jns
jg
mov
xchg
popf
xchg
repz
adc
pop
popf
add
sub
test
rol
lret
je
daa
and
jnp
into
or
std
fcomi
xchg
nop
lock
cmp
aam
adc
adc
fcoms
mov
cld
sbb
aaa
xor
mov
pop
or
fldenv
xchg
test
insb
jb
dec
data16
sbbb
inc
movsl
mov
rcrb
cld
in
mov
dec
call
add
pop
cmp
push
or
fwait
pushf
cmp
cmp
xchg
loope
out
lock
or
ds
inc
and
das
or
and
xor
xchg
pop
mov
mov
mov
add
mov
jp
jl
jle
jle
adc
cmp
and
jmp
jp
cmp
leave
fbld
daa
push
dec
loopne
aad
add
in
jmp
cmp
lock
pop
push
mov
outsl
xchg
sarb
and
punpckhdq
or
adcl
call
test
pop
mov
jb
bnd
adc
cmpb
stos
lock
mov
out
mov
dec
xchg
and
andb
pop
stc
push
push
cmp
ficoms
lock
add
cmp
mov
les
les
xchg
mov
sub
aas
mov
sub
xchg
testl
jmp
stc
movsl
cmp
and
outsl
pop
adc
loope
inc
or
lock
jbe
pop
xchg
cmp
cmp
pop
jbe
test
imul
xchg
loope
jmp
lock
int3
pop
mov
push
movsb
pop
add
out
ret
inc
dec
subb
jp
inc
pop
fstl
lret
push
pushf
adc
mov
jle
mov
icebp
aam
imul
enter
xchg
in
mov
and
jmp
mov
test
idiv
add
cmp
xchg
sbb
pop
sub
pusha
clc
hlt
jo
andb
or
movsb
xchg
int3
lock
cld
call
xor
xchg
pop
cs
pop
dec
and
pop
popf
xchg
out
in
mov
inc
stos
adc
fmull
ds
rcrb
ret
ja
idiv
movsb
or
dec
cmp
clc
ret
pop
xlat
and
or
push
das
ret
mov
scas
xchg
aad
lret
lret
add
test
xor
jmp
sub
pop
sub
imul
test
stc
shrb
cmp
js
dec
call
adc
shlb
or
jge
xchg
rorl
xor
adc
jmp
or
cmp
inc
xchg
hlt
push
push
jo
into
push
imul
jge
push
mov
sub
loopne
stc
xchg
pop
mov
movsb
test
jns
adc
cmp
mov
adc
dec
jle
add
mov
xchg
mov
adc
pusha
mov
mov
insb
dec
sub
out
or
loope
pop
loope
jmp
cld
sahf
xchg
xchg
in
mov
sbb
js
pop
inc
subb
loopne
nop
cld
mov
loope
insb
push
or
jno
xor
dec
push
cmpl
inc
push
aas
lea
xor
cld
add
xor
call
push
xor
dec
xor
sahf
mov
cmp
outsb
pop
xchg
pop
ret
cld
push
mov
inc
mov
divl
mov
push
xchg
sbb
popa
leave
push
imul
out
inc
pop
or
or
cmp
into
aas
dec
pop
das
xchg
pop
sbb
aas
aam
fisttpll
cmp
push
rorb
or
arpl
movsl
mov
fsubl
call
mov
mov
adc
nop
adc
or
aad
sbb
jnp
addb
leave
jb
das
orl
lahf
push
xchg
cmpsl
cmpl
repz
repnz
rcl
pop
xor
setge
loopne
and
daa
cld
sub
add
sub
nop
mov
pop
adc
ret
cmpsl
adcb
clc
cmp
cltd
loope
mov
jle
xchg
test
push
cmp
xchg
rcrl
xchg
sub
fs
js
sahf
sarl
repnz
mov
shrl
lret
cmpsl
mov
sbb
xchg
bound
pop
xchg
fs
xchg
xchg
loope
cmc
je
seta
clc
daa
jne
pop
push
pop
jp
mov
int3
mov
dec
das
std
xchg
mov
pop
xor
xchg
cmp
sub
insb
movsb
outsb
mov
test
inc
sar
insb
ret
fnstsw
repnz
int3
pop
inc
mov
insl
loope
cwtl
stc
mov
cmpsb
xchg
mov
js
fisubs
repnz
jb
dec
pop
sub
nop
xchg
cltd
dec
aam
push
ficomps
popf
sub
xor
or
or
mov
or
pop
push
andl
adc
loopne
pushf
insb
dec
lock
scas
popa
repz
jp
and
mov
or
inc
into
in
mov
and
mov
test
cmp
popa
lock
mov
pop
push
or
jle
es
jl
pop
ss
cmp
xchg
mov
push
test
pusha
test
and
or
inc
xchg
fdivrs
xor
xchg
cmpsl
lods
test
push
cli
test
cmp
cmp
sub
das
or
pop
lcall
ret
inc
gs
or
mov
sbb
pusha
push
dec
pop
push
sbb
mov
push
mov
loope
mov
ret
hlt
pop
push
into
lahf
out
repnz
add
xor
lock
aad
test
in
mov
popa
sbb
loope
das
push
inc
pop
imul
pop
cmp
cmp
pop
mov
in
bound
inc
mov
cmp
cmp
cmpsb
cmp
mov
pop
daa
cmp
shlb
test
in
dec
es
cmp
cmp
cmp
push
loope
shrl
mov
pop
xchg
ret
xchg
ljmp
leave
dec
and
jnp
cmp
aas
stos
sub
sub
cwtl
and
insb
jo
std
jbe
sub
test
aam
pop
cltd
lahf
test
mov
xchg
dec
xchg
inc
test
fcmovnbe
test
insb
mov
addb
sbb
dec
dec
test
mov
push
test
sub
mov
stos
add
add
test
fisubl
xchg
mov
div
les
das
cmp
xchg
cmp
gs
pop
sbb
in
mov
idiv
jb
cmp
rcr
leave
loopne
aas
jmp
cmp
cwtl
movq
das
xor
ret
dec
cmp
mov
mov
jnp
js
dec
pop
test
decb
ss
or
or
enter
inc
test
movsb
pop
jp
cmpsb
dec
adc
mov
js
dec
in
lock
imul
pop
rclb
dec
shrl
stc
out
sub
jbe
in
push
mov
lahf
loope
in
data16
cmp
mov
movsl
paddq
mov
or
add
movsb
sbb
stos
andb
jne
adc
mov
aas
ljmp
jb
je
pop
push
sti
js
dec
add
scas
or
dec
sahf
scas
shll
or
xor
dec
fcmovb
push
loop
out
ljmp
mov
pop
mov
push
push
adc
adcl
jle
pop
pushl
popf
add
fwait
mov
push
cld
cli
or
mov
cwtl
mov
mov
fldl
jno
fs
sub
cmp
lret
jle
xchg
xchg
stos
paddd
fsubrl
mov
test
push
fdivrp
mov
push
cli
inc
leave
andb
or
cltd
orb
xor
insl
lret
addb
sub
and
jge
mov
repz
call
add
xor
pop
rorb
cli
lock
dec
insb
cmpb
fmuls
loopne
ja
add
ds
sub
or
push
jb
popf
or
inc
sar
stc
ljmp
or
and
pop
xor
xchg
lods
jo
dec
into
loopne
icebp
xchg
enter
adc
ds
push
cmp
mov
pop
sub
mov
jl
jo
cmp
xchg
and
or
cmp
sub
push
jo
sub
lock
mov
sbb
ljmp
ds
dec
loop
icebp
xchg
stc
mov
and
and
enter
hlt
add
shll
loope
pushf
cs
rcll
lock
mov
aaa
fs
dec
ret
pop
mov
xchg
lahf
addl
repz
leave
insb
cli
add
jno
add
or
inc
xchg
mov
ret
sbb
sub
test
mov
ret
push
ficomps
fwait
push
mov
stc
js
pop
or
adc
and
mov
inc
pop
lcall
or
dec
sarb
dec
add
testb
jb
jg
cwtl
pop
fwait
ret
jbe
repnz
push
je
pushf
xlat
ret
add
or
jo
cwtl
mov
push
and
test
pop
insb
dec
lret
ficompl
inc
sbb
popf
sbb
xor
pop
pop
xchg
outsl
das
mov
mov
push
cmp
loope
add
test
and
xor
mov
push
cld
push
and
xchg
fs
mov
insb
inc
out
cmp
xchg
xchg
add
or
or
adc
push
mov
push
clc
in
xor
popa
rcrb
and
repnz
lock
repnz
and
xchg
sbb
or
aas
pop
aas
ret
daa
movl
jmp
je
aam
into
xorl
cmc
pop
adc
sub
pop
cmp
sub
mov
xor
stc
clc
sbb
jb
pop
dec
mov
mov
jmp
lahf
lahf
xchg
cmpsb
test
adcb
imul
adc
call
andb
ret
ret
adc
loopne
sti
xchg
inc
jb
pop
pop
leave
enter
les
imul
add
mov
sbb
fstpl
daa
sub
mov
fmul
adc
add
stos
lcall
sbb
xchg
add
add
xor
leave
push
and
or
lock
mov
loop
cli
mov
lret
popf
scas
and
push
ret
dec
xchg
imul
lahf
jge
mov
cli
das
loop
xor
je
sub
hlt
addr16
and
jb
dec
les
aam
adc
jle
pop
pop
xchg
daa
das
xchg
bound
add
jo
xor
gs
lock
mov
loope
or
add
dec
jb
sarl
lds
xorb
loop
push
xchg
ret
je
cmp
mov
lahf
or
mov
int3
andb
xchg
leave
int
test
popa
adc
leave
xchg
ror
sub
lock
aad
inc
dec
enter
inc
pushf
push
xchg
or
push
push
test
dec
mov
cmp
fidivl
jns
sahf
and
xchg
dec
inc
mov
sbb
or
xor
jge
ret
xchg
cmpsl
dec
mov
pop
sahf
lcall
mov
cmp
push
test
mov
dec
sbb
negb
cmp
cli
sbb
inc
daa
dec
add
arpl
or
mov
mov
pop
xchg
jl
pop
aaa
cld
cmp
jne
xchg
jge
push
test
pop
lea
repnz
rcrb
lods
repnz
test
lods
outsb
aas
shll
dec
ds
add
add
mov
push
aam
pop
sbb
jl
and
sub
jo
stos
xor
cmp
and
cmp
mov
xor
xchg
adc
push
repz
js
sbb
ret
ret
cld
and
cmp
jo
dec
and
mov
hlt
jbe
data16
js
test
scas
or
mov
lahf
aam
out
or
fiaddl
fsubs
mov
cld
lock
sbb
cld
into
push
mov
cmpsb
adc
scas
daa
insb
push
es
mov
pop
dec
push
out
jmp
or
loopne
and
inc
stos
adc
int3
mov
std
mov
mov
pop
mov
out
hlt
inc
mov
cmpsb
das
sub
mov
adcb
aaa
movsb
out
mov
mov
jne
jle
mov
push
push
or
sub
mov
cmp
outsb
loopne
or
adcb
ret
jo
cli
daa
movsl
adc
add
lock
popf
ror
clc
es
adc
cs
movsb
or
imul
add
sub
xchg
push
push
adc
jmp
fisubl
test
add
test
adc
jg
or
push
sbb
mulb
daa
pop
cwtl
cmpsl
sahf
movsb
in
mov
jb
stc
enter
aam
ficompl
pop
out
loop
repz
repnz
xchg
fs
jp
into
and
sarb
dec
xor
inc
call
inc
cmp
sbb
jo
sbbb
push
xchg
iret
lcall
fcomps
or
loope
or
lods
pop
out
cmpb
jle
inc
sbb
push
rclb
jle
pop
xor
mov
scas
sub
stc
jb
and
dec
inc
nop
stc
xchg
sub
push
mov
jle
dec
rolb
fadds
lock
xorl
xchg
push
mov
and
xor
and
push
jl
push
ret
rcrl
xchg
xchg
cwtl
test
mov
inc
daa
ret
into
xor
loopne
inc
pop
in
mov
das
shrl
adc
push
clc
clc
dec
xchg
push
jbe,pn
pop
cmp
mov
das
lods
or
rolb
pop
out
or
fdivl
cmp
scas
lock
push
push
aas
inc
ret
push
push
adc
xchg
enter
jle
ret
cld
adc
fisubs
jmp
and
and
pusha
popa
sbb
jnp
mov
lock
fxch
cmp
or
xor
jnp
add
and
mov
cmp
xor
cmp
loope
jecxz
test
inc
sub
dec
push
xchg
andb
push
call
pop
test
xor
popa
mov
lods
dec
mov
mov
pop
fcoms
push
sahf
adc
xchg
mov
mov
inc
xchg
stos
sbb
movsb
das
or
shrb
clc
pushf
dec
xor
cwtl
pop
mov
jl
decb
sub
movsb
jo
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
shlb
xchg
popa
nop
cld
push
xor
dec
dec
push
push
lods
sub
in
stos
paddusb
leave
fdivs
dec
add
add
push
mov
leave
xor
loopne
js
mov
aam
sub
sbbb
jo
sbb
and
lods
mov
lret
and
lcall
lock
je
aas
nop
es
xchg
xchg
movsb
das
mov
mov
ficoml
fmull
adc
hlt
or
movsb
push
sbb
and
dec
inc
or
mov
cmp
or
sub
les
add
inc
add
stc
fdivr
fsubl
xchg
inc
mov
or
movsl
inc
cld
mov
or
adc
das
and
sub
aas
ret
shrb
jle
dec
cmp
push
inc
pop
mov
dec
sub
jle
dec
pusha
ret
aam
adc
data16
xchg
and
lods
bound
mov
push
ds
test
lcall
mov
enter
rcrb
inc
loopne
in
call
ret
jo
loopne
jb
je
dec
or
mov
push
push
sbb
dec
and
sub
cmp
sbb
in
mov
mov
push
cld
jo
shrl
push
or
mov
stos
nop
leave
xchg
loope
pushf
cmp
cld
mov
in
mov
push
aam
fdiv
loopne
mov
push
call
outsb
jno
inc
add
and
dec
dec
cmp
pop
sub
push
add
adcb
js
shll
lahf
in
call
hlt
leave
clc
cmp
or
or
ret
inc
adc
sbb
and
stc
sub
push
imul
or
sbb
mov
and
jo
iret
jl
adc
fimuls
pushf
cltd
out
test
call
in
pop
lock
lcall
leave
in
push
in
int3
cli
clc
cld
cld
pushf
ficoms
add
cmp
adc
sbb
lock
sub
pusha
xor
cmp
inc
mov
dec
dec
jl
leave
pop
cmpsl
andb
mov
mov
xchg
xchg
stc
cwtl
aaa
cwtl
es
xchg
mov
pushf
mov
les
fs
int3
test
aam
dec
and
shlb
hlt
or
cmpsb
and
adc
xor
ret
les
sub
sub
xchg
xor
insb
cmp
js
inc
xchg
dec
dec
aam
sar
nop
fdivrs
dec
pusha
or
mov
jo
in
cmpsl
out
in
mov
jle
dec
cwtl
repnz
test
hlt
mov
idivb
call
push
loopne
bound
push
xchg
dec
clc
xchg
add
add
or
js
dec
adc
pushf
sbb
and
sub
sub
mov
pop
mov
movsb
dec
lahf
xchg
push
in
mov
cmpsb
pop
test
mov
repnz
push
mov
mov
lods
leave
mov
mov
stc
mov
in
adc
ret
push
mov
or
hlt
loope
cld
cmp
cmp
inc
les
adc
sub
in
jbe
sub
xor
jecxz
fdiv
les
adc
pop
add
sub
js
pop
or
leave
mov
nop
stc
xchg
sub
aas
pushf
and
test
sub
mov
inc
call
ljmp
movsb
sbb
mov
dec
dec
cmp
int3
inc
div
push
dec
mov
push
test
pop
call
je
js
test
mov
hlt
dec
nop
mov
cwtl
mov
mov
and
mov
inc
mov
xchg
enter
fadds
loopne
in
or
mov
cld
xchg
test
in
adc
adc
pushf
pop
sbb
and
insb
sub
sub
loope
xor
int3
aas
cmp
inc
loope
dec
aas
or
jns
push
je
movsbl
inc
int3
mov
mov
daa
xchg
shl
stc
mov
lret
lods
inc
fidivs
out
shrb
fmul
loopne
clc
call
jbe
push
clc
xchg
add
add
or
adc
xchg
sbb
and
and
sub
shlb
stc
cmp
movlps
popa
and
push
sub
dec
pop
pop
jl
mov
push
je
push
and
das
ucomiss
cwtl
pop
bound
ret
cmc
pop
jle
in
mov
rol
enter
rcl
xchg
mov
cld
lock
test
lods
xorb
add
or
outsb
or
sub
and
xor
loopne
inc
push
cwtl
push
sti
or
rcrb
in
insb
hlt
mov
jl
xorb
cld
xchg
xchg
loope
pushf
stc
mov
xor
enter
sar
cmpb
aas
fsubrl
call
hlt
pop
int3
pop
cld
movsl
push
repnz
adc
dec
sbb
and
and
ljmp
aas
cmp
cmp
inc
loope
dec
sub
mov
aad
pop
loopne
pusha
cld
fs
add
shlb
jl
sbb
cld
mov
cwtl
lret
pushf
popa
pop
movsb
ds
lods
pop
fcomps
mov
mov
pop
dec
std
in
add
add
cmp
cmp
mov
push
daa
push
add
pop
loopne
pusha
pushf
scas
pop
push
lock
js
xchg
in
lods
push
daa
mov
mov
pushf
aas
sbbb
jle
dec
mov
fs
pop
les
mov
mov
mov
in
xchg
in
stc
lock
sets
lret
cld
rorl
or
ret
cmc
test
and
mov
stc
sub
xor
hlt
cmp
pop
inc
or
dec
hlt
mov
push
mov
pop
mov
mov
jo
or
js
dec
pop
adcb
nop
std
imul
test
mov
mov
mov
mov
enter
aam
dec
dec
fdivl
pop
in
xchg
lock
add
push
adc
adc
sbb
sbb
mov
je
cmp
jb
inc
dec
inc
ret
mov
adcb
subb
mov
dec
mov
fidivrl
call
shlb
fsubrs
ret
cmp
repz
call
cwtl
scas
add
loope
or
adc
adc
mov
and
or
sub
ret
pop
cmp
into
inc
je
adc
aas
push
sub
push
xorb
jl
ficomps
mov
mov
push
mov
adc
mov
out
aas
mov
test
int3
cmpsb
clc
dec
sub
lcall
movsb
add
inc
sub
lock
loop
ds
xor
push
in
inc
test
insl
fstps
movsl
jo
mov
ret
sub
dec
pop
xchg
enter
loopne
xor
push
sub
and
mov
mov
xchg
adc
ret
pop
jp
adc
pop
pusha
mov
jns
and
mov
loopne
and
dec
or
popa
or
cld
and
mov
adc
or
push
shl
lahf
leave
xor
mov
jo
mov
xorb
dec
lock
inc
dec
xor
inc
and
mov
adc
push
pop
lock
cs
xchg
xor
push
movsl
jo
lret
mov
mov
adc
push
movsl
jbe
shrb
jmp
rcrb
loopne
sub
fsubs
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
push
rorb
and
push
add
push
mov
pop
add
enter
or
jno
scas
or
mov
add
pop
test
js
fcompl
mov
sarb
mov
ret
pop
cmp
nop
sub
cltd
arpl
push
cld
and
inc
jl
nop
mov
pushf
and
lods
xchg
test
andb
xchg
fcoml
mov
or
insb
sbb
push
push
adc
mov
rclb
xchg
dec
push
movsb
or
aam
fdivrl
inc
hlt
add
cmp
and
leave
scas
test
mov
pop
or
je
test
cs
or
xor
or
pusha
or
mov
call
in
les
lock
sahf
mov
xchg
js
jle
dec
enter
sbb
sahf
and
pushf
ret
jo
dec
hlt
or
sub
jle
dec
shrb
jp
dec
pop
mov
rclb
cmpl
rclb
loopne
test
ret
movsb
test
mov
and
sub
push
adc
mov
xchg
or
cmp
mov
je
mov
daa
loopne
ret
or
rcrl
pop
daa
sub
cmp
les
push
mov
sub
adc
mov
call
or
fcomps
lcall
jo
add
xlat
mov
add
add
add
loop
sahf
dec
imul
add
dec
scas
dec
pop
push
imul
add
add
add
subl
pop
call
subl
mov
sub
mov
mov
pop
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
push
call
add
pop
lea
lea
mov
rep
add
push
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
pusha
pushl
push
call
mov
popa
ret
nop
add
adc
aaa
out
or
or
wrmsr
les
pushf
add
dec
or
and
enter
add
rorb
or
nop
pop
add
pusha
test
and
sarl
cld
add
mov
call
mul
leave
lret
or
rclb
mov
xchg
mov
aas
adc
add
jne
stos
jmp
stc
dec
adc
lret
repz
inc
por
lods
shll
je
adc
in
xchg
cmovs
loopne
fistps
sub
jge
cmp
test
cmp
jg
mov
xchg
mov
mov
add
imull
lock
pop
jmp
mov
shlb
mov
inc
ja
pusha
ret
ljmp
xchg
bnd
sub
or
popa
push
call
in
outsl
sbb
push
lea
pop
add
inc
pushl
call
lea
movsl
sbb
push
pushl
call
les
mov
sub
lock
add
sub
push
mov
lock
push
push
push
test
insb
out
dec
add
pop
add
or
or
mov
orl
add
test
mov
jne
iret
jo
push
je
cli
inc
jp
or
push
add
dec
push
ljmp
cmp
je
jbe
testb
jns
dec
dec
push
orb
xorb
mov
inc
add
pop
insb
mov
pop
add
add
pop
sub
aam
test
push
pop
iret
popa
or
jmp
xchg
adc
fisubs
loop
mov
mov
jecxz
mov
movsl
cwtl
adc
clc
fistpl
push
lods
nop
push
pop
mov
adc
jo
cmp
adc
jl
adc
push
push
adc
insb
push
adc
fcoml
add
add
push
adc
mov
adc
mov
push
adc
add
add
mov
add
push
adc
mov
push
adc
add
add
call
add
add
push
adc
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
dec
outsl
popa
fs
imul
add
push
push
inc
push
xor
cs
dec
dec
add
add
dec
gs
popa
addr16
outsl
js
add
