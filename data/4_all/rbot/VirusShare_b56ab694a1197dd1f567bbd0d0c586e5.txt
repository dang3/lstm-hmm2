aaa
mov
mov
mov
lods
cmpsl
lds
add
mov
inc
shl
mov
pop
fstpt
ja
mov
push
mov
sarl
jo
cs
xor
sbb
lock
inc
mov
add
je
loopne
ds
ds
mov
mov
repnz
mov
adc
imul
mov
mov
lret
sbbl
repnz
sbb
push
cmp
fwait
jp
mov
lods
mov
xor
stos
jge
mov
xchg
ret
sbb
inc
sbb
adc
sar
pop
popa
fdivrl
mov
aas
dec
outsb
cwtl
jne
repnz
pop
mov
jns
test
lret
cld
push
inc
iret
and
stc
add
sbb
and
pusha
popf
cwtl
mov
icebp
push
pop
pop
xor
push
in
mov
icebp
xor
lret
and
cmp
mov
inc
inc
and
sub
popf
mov
push
mov
loopne
xor
push
insl
mov
andl
or
dec
aam
out
mov
xchg
mov
outsb
cli
cmpb
and
sbb
jbe
popf
pop
scas
push
mov
enter
sbb
scas
das
adc
mov
int3
sbb
enter
inc
movb
lock
xchg
inc
cltd
dec
loopne
jns
sbb
notl
mov
shl
push
and
mov
ljmp
mov
enter
sub
add
cmp
sbb
pop
jle
in
adc
aaa
mov
shll
scas
scas
mov
pop
imul
push
clc
jl
mov
jg
jge
sbbl
mov
add
push
pusha
xchg
repnz
jns
push
scas
lea
sub
popa
dec
pusha
pushf
cwtl
leave
mov
mov
jle
flds
lods
push
mov
xchg
xchg
jo
cs
xchg
inc
jl
insl
int3
push
mov
cmpsl
sub
in
lret
fmuls
pusha
popa
mov
movsl
mov
and
fistpl
jle
jne
push
insl
repnz
mov
mov
outsb
jo
lods
lods
jb
cwtl
inc
push
movl
dec
jnp
pushf
dec
or
fdivl
mov
dec
inc
cli
je
cld
inc
loopne
mov
scas
jb
mov
lret
stos
or
ficoms
enter
sub
xor
andl
mov
ja
mov
cmp
or
insl
ljmp
push
and
ljmp
outsl
inc
sbb
cmp
jp
aad
jecxz
adc
hlt
ficomps
test
mov
sub
test
ss
inc
and
cmpsl
mov
es
ret
mov
js
fadds
pop
push
jb
pop
in
sub
aad
insl
rorb
push
mov
data16
fnstcw
xchg
push
std
pop
mov
cwtl
mov
addr16
mov
inc
xchg
in
out
and
shlb
gs
stos
stos
and
jge
cmp
ficompl
xchg
jecxz
bnd
ret
add
int3
cmp
sub
ds
xor
daa
out
lods
daa
mov
in
shrb
pop
sbb
sbb
add
fwait
ss
sub
xor
sbb
aad
insl
push
add
or
dec
stos
push
pop
inc
loopne
fiadds
fsubs
js
lcall
push
push
hlt
jb
jne
xchg
rorb
jg
mov
call
stos
icebp
icebp
orb
sbb
mov
shl
mov
sub
xor
push
xor
lret
xchg
fisubl
add
add
int
lea
loopne
enter
adc
inc
sbb
iret
ret
mov
ret
jno
iret
insl
xchg
xchg
xchg
nop
jo
nop
mov
test
lea
call
pop
and
loopne
jecxz
faddl
jle
ss
sti
in
mov
jbe
push
and
xchg
imull
dec
leave
int3
mov
dec
into
or
test
out
lret
and
popf
cld
and
lods
pop
add
dec
je
icebp
xchg
outsl
mov
icebp
xchg
dec
sbb
jg
push
test
xchg
pop
cmpsl
ja
lcall
pop
push
jle
xor
sbb
fwait
cs
xor
pop
jg
xor
push
pop
test
or
arpl
cmpl
cmp
pop
icebp
enter
xchg
xor
dec
cs
in
cmp
dec
xchg
xchg
cmpsb
cmpsl
jge
inc
mov
iret
stos
in
leave
and
sub
pushf
ds
pop
jmp
cmp
push
in
dec
cmpsb
rclb
dec
dec
iret
dec
sub
sub
add
call
popf
mov
xor
cwtl
idiv
je
mov
mov
cs
push
push
movhps
jmp
imul
imul
sbb
lahf
ljmp
mov
lock
popf
sbb
xchg
icebp
push
jl
mov
lret
outsl
jo
inc
cld
int3
int3
lods
mov
cmpsb
inc
or
mov
inc
in
popa
std
loopne
sarl
jge
stc
leave
ja
cmp
mov
icebp
ds
rcll
dec
test
push
mov
inc
sub
loopne
or
testl
mov
ja
mov
push
add
data16
shll
pop
lea
loope
or
lret
jb
push
call
dec
xchg
rcrl
sub
pop
loopne,pt
or
mov
xlat
push
jle
mov
xor
outsl
cmp
rorb
int
push
insb
sub
cmpsl
push
mov
inc
mov
fnstsw
add
cmp
js
jecxz
dec
mov
aam
sbb
adc
push
rolb
test
int
adc
add
es
movsl
test
mov
add
pop
aaa
xchg
sub
push
pop
in
jnp
adc
out
into
sub
or
xorl
push
test
movl
call
sahf
jge
fsubs
sub
push
xor
repnz
cld
jecxz
dec
cwtl
pusha
aad
lods
push
lods
shrb
cmpsl
pop
test
sub
lods
mov
mov
push
lcall
push
mov
cli
xchg
test
in
cmp
cmp
push
jno
and
dec
cmpsl
sub
jnp
add
in
inc
arpl
pop
cmp
xor
mov
je
mov
xchg
xor
popf
nop
jo
mov
push
sub
jb
shlb
gs
and
jecxz
lret
jge
cli
addr16
mov
rcl
mov
dec
cmp
je
cld
inc
loopne
mov
out
fwait
ljmp
jo
ffreep
movsb
add
xlat
insl
sub
or
pop
mov
pop
int
xor
repnz
pop
mov
xchg
insb
scas
or
adc
pushw
rol
movsb
fidivrs
sti
test
jp
cmp
popf
cwtl
int3
adc
push
mov
clc
xchg
out
sbb
or
xchg
mov
xchg
dec
daa
cmpsl
into
jp
addl
mov
test
xor
sbb
lcall
aam
fyl2xp1
mov
add
insl
rorb
call
outsl
fisttpl
add
imul
jg
andl
ficoml
scas
aam
out
push
dec
shrb
pop
es
mov
mov
bound
mov
mov
mov
add
push
xchg
aam
sbb
subb
jmp
fcomi
scas
mov
or
cwtl
sub
out
mov
adc
shrb
mov
and
xchg
pop
pop
stc
clc
repnz
jl
pop
jb
outsl
jo
aam
ret
dec
sub
call
inc
and
in
std
dec
jne
lds
ja
jmp
cmp
xchg
icebp
pushf
mov
adc
jg
iret
insl
mov
repnz
loope
inc
cmpsb
push
std
fsubs
pop
data16
push
jecxz
and
int3
fistpll
subl
mov
mov
sub
test
xor
sub
std
sbb
imul
adc
addl
jp,pt
je
xor
sbb
sti
les
out
pusha
dec
lods
or
push
movl
mov
push
push
cmp
sbb
jns
cmp
push
lret
mov
es
xchg
lock
dec
int
les
stos
jle
push
mov
test
push
pop
repnz
scas
sbb
xor
sbb
mov
idivb
enter
in
adc
add
cmp
pop
rep
test
pop
mov
fs
std
cld
fcompl
jp
cmp
shll
inc
fdivl
dec
fsts
mov
outsb
shrl
ljmp
cmpsl
push
cmpsl
in
mov
enter
shlb
in
adc
add
mov
mov
test
testl
jne
rcrl
imul
adc
mov
jg
test
jns
scas
sbb
jg
je
test
cli
pop
iret
pop
in
cmp
jbe
ljmp
test
inc
xchg
in
fs
and
pop
fidivrs
xchg
imulb
ficoms
and
lock
push
push
sub
push
jecxz
push
and
test
adc
fcompl
jle
mov
dec
hlt
add
mov
push
stos
xchg
jb
adc
ror
sbb
push
lds
insb
scas
addb
loope
fidivrs
mov
cwtl
notl
mov
xor
lock
adc
outsb
in
popa
jge
ljmp
gs
pop
jo
inc
mov
popa
shlb
loope
popf
std
clc
scas
in
fxch
mov
mov
dec
aas
xor
pop
xor
mov
sbb
loop
sub
and
ljmp
or
sahf
jns
jle
sti
ficompl
jp
inc
adc
cmp
mov
pop
xchg
push
jl
push
lods
lock
int3
and
or
sub
dec
xchg
cmp
mov
ret
stos
hlt
nop
lcall
push
or
icebp
mov
cmp
in
out
jo
and
outsb
int
xor
jle
imul
jecxz
loope
repz
cmp
out
jge
bound
shll
xchg
cmp
test
in
mov
bound
test
add
push
lds
in
clc
jle
mov
jp
xchg
xchg
rcrb
popa
inc
sub
aam
dec
lea
mov
adc
sub
call
add
cmpsb
pushf
mov
pop
mov
mov
aad
xor
rcl
out
mov
mov
xchg
out
add
rclb
mov
or
scas
lea
add
lret
pop
pop
std
pop
mov
cwtl
mov
test
mov
jo
pop
and
sub
stos
mov
cld
cmc
mov
cmp
cmpsb
sub
add
add
adc
js
popf
cltd
int3
push
jmp
push
push
push
ss
dec
lret
mov
adc
rorl
inc
outsb
sbbl
popf
pop
cltd
mov
push
in
adc
cwtl
ret
sbb
loope
mov
mov
das
int3
push
cwtl
dec
dec
ljmp
jae
add
cmpsb
data16
push
mov
in
xor
jp
cmp
xchg
push
mov
push
and
adcl
mov
dec
cmp
dec
rolb
fimuls
jns
insl
nop
xorl
push
daa
push
jb
xor
jmp
jmp
sub
test
popa
mov
mov
int
std
movsl
adc
and
loope
daa
cltd
cmc
jne
sub
adc
subb
lret
xor
aas
or
jge
dec
xlat
into
addb
jns
mov
outsl
maskmovq
ftst
shlb
push
lods
das
sub
outsb
subb
push
push
repz
pop
add
dec
sub
pusha
popa
jg
sbbl
pop
mov
xor
dec
push
outsl
into
sub
jno
dec
sub
xchg
or
push
cld
and
mov
xor
pop
mov
js
imul
hlt
aam
xor
shll
mov
dec
dec
addr16
sub
sbb
cmp
imul
rorb
pop
dec
cmc
in
cmp
clc
push
mov
out
lea
pop
in
int3
loopne
mov
mov
push
xchg
shr
add
jg
pusha
in
faddl
xlat
std
aam
mov
lcallw
lea
das
jno
mov
jp
cmp
daa
xchg
jl
inc
inc
pop
stc
rolb
mov
add
andb
lcall
push
xchg
jae
xor
ljmp
inc
lret
inc
daa
push
xor
jnp
inc
test
push
cmp
out
dec
sbb
mov
popf
push
adc
dec
push
mov
sub
icebp
sbb
sahf
cltd
shlb
lret
dec
notl
ret
fcompl
das
xor
jns
pop
adc
add
xchg
dec
xor
fs
push
daa
int
jno
mov
cmpsl
pop
data16
dec
and
jg
fdivl
push
fdivrl
cwtl
clc
repz
mov
shl
dec
cmp
scas
add
sub
dec
repnz
pop
cli
lods
in
and
popa
rcll
ds
sbb
and
add
xor
fsubr
dec
outsb
mov
cmp
push
stos
sahf
pop
outsl
and
cmpsb
and
sub
pop
mov
fidivrs
push
notl
push
test
mov
repnz
xchg
insl
flds
ja
int
rcrb
bound
std
lahf
pop
test
mov
push
notl
loopne
add
sub
sub
insl
in
jne
js
dec
sub
loope
leave
test
and
rorl
dec
mov
pop
notl
push
ss
pusha
je
in
xchg
icebp
push
dec
pushf
loopne
mov
xchg
mov
sub
les
push
inc
mov
add
mov
outsl
add
and
aaa
dec
cwtl
adc
lds
or
sub
push
dec
test
inc
popf
cwtl
xchg
push
aaa
or
jae
cmp
out
cmp
ficoml
call
test
ret
lods
or
xor
jg
push
xor
add
fidivrs
insl
jnp
mov
jne
std
adc
mov
sub
imul
mov
cli
les
das
add
nopl
fwait
cmp
stc
je
nop
inc
rcl
mov
faddl
repnz
aad
jo
push
jmp
jae
imul
shr
out
paddusw
stc
stos
sbb
mov
daa
xor
cwtl
pop
out
rcll
ss
repnz
in
cmp
mov
xor
adc
test
push
loop
pop
nop
fs
shlb
mov
js
flds
fsubs
cs
je
shlb
in
insl
dec
gs
fbld
push
adc
daa
nop
mov
mov
xor
mov
in
loope
xlat
mov
mov
lahf
int
out
imul
add
iret
xor
sbb
cmp
pop
pop
mov
push
frstor
sbb
fnstcw
cltd
mov
cs
shlb
lock
outsb
divl
mov
out
movsl
movsl
lret
mov
imul
mov
notb
and
aam
hlt
add
jnp
jns
push
dec
outsl
jo
fwait
in
out
shl
ja
mov
jle
pushf
jge
and
test
cwtl
enter
mov
repnz
lods
mov
mov
mov
int3
lods
mov
cmpsb
bnd
pop
lret
movl
andl
sbb
mov
gs
idivl
loope
adc
cmp
lret
int3
push
jmp
sub
xchg
xor
mov
push
push
cli
xor
das
popa
sarb
push
mov
xchg
mov
push
sub
inc
mov
push
addr16
ret
lret
imul
and
pushf
sti
pop
gs
mov
sbb
fwait
rcrl
push
gs
push
mov
push
in
or
and
adc
xchg
jb
jmp
push
out
out
sub
repz
shlb
cld
pop
in
loop
stc
std
mov
mov
outsl
lcall
movhps
lahf
popf
icebp
mov
int
sub
xlat
or
mov
or
pop
sbb
pop
lcall
repz
push
repz
sub
xor
test
pop
pop
ja
lahf
jle
cmp
popf
in
std
and
push
mov
or
push
cmp
jb
jb
insb
lret
sub
mov
rcr
es
mov
mov
or
and
inc
sub
mov
jle
mov
fwait
xchg
adc
jmp
mov
add
xchg
loop
inc
fs
push
movsl
sti
fmulp
cmp
pop
mov
jae,pt
test
cli
testb
cltd
jecxz
insb
dec
test
sub
inc
fwait
push
push
adc
loop
inc
cli
pop
or
pushf
dec
sub
cmp
fnstsw
push
js
sbb
imul
xchg
fxch
dec
rclb
dec
sub
xchg
lds
popf
movsb
ljmp
pop
adc
mov
ss
shlb
sbb
xor
mov
into
lods
or
pop
sub
ljmp
and
xor
push
xlat
fstpt
inc
push
push
dec
pop
arpl
push
dec
adc
pop
jno
scas
xor
gs
dec
cmpsl
dec
jle
inc
jle
rcrb
loope
jno
push
aaa
inc
clc
lea
jp
add
cwtl
push
xchg
repnz
sbb
pop
iret
shrb
mov
xchg
lds
push
inc
lret
sub
cmpl
cld
pop
mov
movsb
aas
mov
lock
js
mov
insb
lods
mov
xor
es
rorb
cmp
popa
and
mov
mov
push
mov
add
mov
cmp
dec
ljmp
lods
or
in
repz
stos
inc
mov
dec
pop
mov
xor
xchg
push
jge
cmpsl
test
stos
and
lods
xor
repnz
mov
lock
jb
jmp
sar
dec
sub
sub
mov
test
cmp
jns
pop
cli
cmp
mov
push
mov
adc
xor
insb
push
aaa
ljmp
mov
cld
ds
jle
je
fistpll
jmp
inc
mov
xor
outsl
mov
cli
cltd
aaa
insl
out
test
inc
pop
sub
sub
xchg
call
pushf
cmpsl
mov
jecxz
fwait
mov
cwtl
mov
cld
xchg
xor
adc
or
ljmp
push
xchg
loope
lahf
ljmp
and
sarb
mov
je
ljmp
outsb
add
dec
into
mov
push
repnz
lods
cmpb
xchg
fnstsw
push
pop
push
cmp
jp
jae
xor
mov
xchg
test
jecxz
adc
test
incl
fstpt
pop
jle
cli
dec
inc
test
jp
cmp
divl
push
je
lret
aam
mov
in
xchg
inc
stos
addr16
shlb
pop
fldenv
and
jmp
push
andb
mov
arpl
mov
outsl
cltd
bound
repz
jmp
add
or
out
test
adc
dec
in
and
pop
mov
pop
loope
mull
jnp
xchg
jae
or
adc
mov
dec
sbb
fs
mov
jecxz
ret
loopne
jge
pop
mov
cmp
xchg
mulb
sub
jno
xor
xchg
enter
mov
imul
sub
fisubrs
mov
or
add
jg
adc
jle
ret
stos
bound
jp
jp
hlt
shll
mov
out
sbb
pop
push
adc
mov
mov
mov
cltd
fisubl
add
stos
push
xor
loopne
pop
mov
xchg
stos
in
sbb
xchg
je
xor
pushf
pop
cmc
into
iret
lea
insb
enter
dec
and
sub
cmpsl
fiadds
pusha
or
pop
cmp
sbb
cli
fidivrl
mov
fcoml
shlb
pop
shrl
pop
push
lret
ret
nop
int
int3
test
lret
aas
push
jge
gs
fnstcw
jns
add
xchg
ds
jbe
mov
sub
das
sub
mov
sbb
cs
mov
fdivrl
pop
sbb
fucomp
in
cmp
adc
mov
ljmp
lea
push
cmpsl
dec
mov
mov
ret
add
inc
mov
aad
pop
std
sub
addr16
fmul
xorb
cwtl
test
jmp
mov
iret
insl
mov
test
adc
mov
mov
mov
cmp
ja
fdivrs
das
pop
cmp
int3
das
adc
lds
push
lret
popa
jb
add
xchg
ds
enter
jmp
pushf
loop
pop
dec
test
xchg
sbb
mov
aam
ja
cmc
jne
icebp
iret
cs
cmp
das
popa
insl
push
adc
xor
arpl
lods
or
aad
mov
movsl
inc
cli
cmp
js
jecxz
sbb
shll
fistpll
jae
int
push
int3
cmp
cmp
or
inc
mov
out
movsl
movsl
lret
pop
pop
test
cmp
notl
loopne
sub
hlt
jne
cmc
mov
into
sub
or
movb
pop
shlb
push
sti
cld
pop
mov
js
ss
movsl
pop
push
mov
xchg
mov
lea
jecxz
add
movsb
fisubs
pop
loop
inc
cwtl
scas
jns
add
mov
sahf
popf
or
fisttpll
rcrb
popf
mov
pop
outsl
scas
jmp
arpl
inc
or
cmp
pop
out
movsl
inc
dec
inc
mov
popa
inc
push
jg
ds
icebp
in
sti
jp
and
ja
and
push
xor
repz
jo
dec
clc
mov
outsb
dec
sub
pop
pop
jle
jecxz
inc
popf
or
jle
and
jnp
iret
pushf
jns
cmp
ficoml
cmc
adc
cmp
fcmove
scas
add
lea
mov
and
test
stos
and
mov
pop
outsl
add
cmc
stc
flds
dec
cli
jne
icebp
cmp
xor
leave
or
or
push
xor
and
jecxz
mov
mov
inc
sub
cmp
inc
popa
aam
lods
cmp
rcll
mov
push
test
inc
shrb
iret
insb
stos
jo
mov
shll
mov
mov
fistps
pop
inc
repz
jp
xor
xlat
pop
dec
aad
mov
mov
ss
mov
movsb
push
outsl
icebp
das
iret
or
loopne
mull
inc
shll
jp
sbbl
pop
cs
jb
adc
pop
mov
ja
pop
xchg
lret
cmc
aam
jmp
jmp
inc
inc
and
mov
mov
jecxz
cld
cli
xlat
push
cmp
adc
fnsave
push
rorl
int
outsb
jmp
lods
or
in
repnz
clc
movsl
inc
ret
sarb
add
cs
mov
cmp
ror
inc
fcmovnbe
mov
inc
push
sub
mov
cmp
jecxz
adc
lret
xchg
jecxz
dec
add
ds
jecxz
out
jecxz
test
iret
mov
call
push
xchg
aas
pop
and
jg
cmp
lret
mov
cmp
mov
jb
in
push
lret
in
out
jg
and
sbb
or
loope
mov
inc
cmp
popa
shr
insb
cmc
aad
xor
in
or
or
inc
inc
add
lret
fcoml
int
movsl
ss
jge
jmp
sbb
sbb
data16
fists
push
xor
jo
sbb
xor
cmp
jne
or
xchg
inc
xchg
out
sbb
gs
repz
arpl
pop
notb
loopne
scas
mov
out
into
sub
fs
dec
push
int
inc
cmpsb
add
cmp
and
in
inc
inc
gs
out
lret
jno
fcomps
pop
push
push
ljmp
lret
repnz
js
xchg
push
dec
imul
das
adc
push
mov
lcall
mov
pusha
adc
mov
je
cld
mov
shll
in
adc
je
les
pop
lret
sub
lahf
jg
cmp
jecxz
pop
loope
jp
mov
int3
push
mov
jne
enter
mov
adc
inc
push
call
call
push
les
or
test
icebp
sub
sbb
jnp
adc
or
jae
adc
dec
outsb
xor
lods
xor
inc
loope
dec
ret
loopne
inc
xchg
icebp
dec
rcrb
mov
add
xor
mov
xor
mov
xchg
and
cmpsb
inc
mov
popa
int3
loop
or
pop
ret
cs
in
mov
xchg
cwtl
popf
mov
mov
repz
push
clc
or
aaa
insb
add
movsb
and
andl
test
fdiv
and
adc
adc
jb
mov
mov
jp
lods
and
scas
ljmp
or
lods
dec
jp
fwait
add
mov
iret
stos
push
js,pt
inc
mov
pop
cmp
sahf
lcall
xor
repz
int
ja
pop
dec
sub
gs
and
jle
add
pop
iret
mov
pop
cmp
repnz
push
mov
adc
xchg
and
scas
push
outsb
subl
dec
mov
daa
cmp
pop
clc
addb
cmp
fimuls
cmp
dec
xor
ja
sbb
xchg
sub
icebp
push
mov
cltd
js
out
data16
out
lfs
mov
add
dec
pusha
inc
cmp
jge
leave
xchg
pop
push
fisttpll
dec
mov
jns
sub
mov
das
push
insl
adcl
arpl
jle
lahf
jg
jecxz
scas
fnstcw
xchg
inc
rcr
adc
pusha
je
adc
shll
in
cmp
jbe
insl
rorb
call
lock
in
add
sub
xorl
and
jmp
pop
cmp
mov
cmc
xchg
int
push
int3
and
outsb
les
sub
int3
inc
inc
push
ljmp
jle
cld
sti
xor
cmp
movb
push
rcll
push
dec
mov
rep
stos
not
mov
or
pop
test
loop
arpl
cld
pop
mov
cwtl
jmp
imul
push
mov
add
cs
call
mov
fidivrl
add
mull
addl
fcmovnu
out
sbb
notl
test
mov
jo
repz
dec
xor
stos
sub
mov
shrb
sub
cmp
imul
adc
test
sub
jbe
mov
enter
jmp
lcall
xchg
fbstp
ja
mov
arpl
xor
outsl
cmp
dec
das
cli
sar
into
push
push
fadd
and
inc
inc
inc
ret
xchg
cmp
pop
jecxz
lods
scas
mov
icebp
inc
shr
sbbl
mov
cmpsl
inc
hlt
xchg
or
xchg
inc
nop
add
divl
pop
add
inc
imul
mov
xor
xchg
pop
adc
sub
daa
mov
cmc
sub
cmp
add
mov
rcrb
jbe
mov
mov
cld
mul
out
push
mov
sub
jns
mov
lods
or
sub
std
push
pop
data16
outsb
mov
xchg
lret
jns
cmc
adc
mov
push
jnp
jb
fidivrs
inc
jb
imul
push
xor
mov
popf
fistpll
jl
and
mov
push
push
aad
xor
insl
dec
lods
jbe
scas
dec
mov
inc
adc
adc
ret
mov
cmp
mov
sbb
pop
pop
in
xor
pop
xchg
jno
nop
outsb
into
xchg
dec
scas
out
lods
and
test
iret
sub
and
arpl
lahf
pop
cli
lods
out
es
xor
mov
pop
adc
xchg
mov
or
dec
icebp
popa
stc
mov
inc
call
hlt
jmp
inc
andl
pushf
call
popf
fcmovnbe
pop
ss
je
out
push
aam
int3
fdiv
repnz
daa
cmp
aam
ficomps
sub
data16
pop
add
add
mov
pop
pushf
clc
sub
mov
je
jns
shr
sub
mov
out
aas
mov
cmpsl
push
data16
in
cmp
and
push
inc
inc
sarl
jns
cmc
add
jb
je
mov
xchg
xor
cmpsb
push
mov
sub
push
xchg
mov
jl
mov
popl
xchg
sub
int3
lods
mov
cmp
fnstsw
push
ja
jl
push
xor
stc
sub
sub
push
addr16
or
inc
movsl
mov
jge
ljmp
pop
out
mov
mov
and
mov
xor
mov
into
lods
or
sub
call
and
cwtl
test
add
push
cmp
sbb
ret
dec
ss
push
xor
xor
or
jmp
mulb
xchg
dec
leave
mov
leave
jne
jbe
fidivrs
popf
fcmovnbe
std
mov
lea
shll
or
cmp
pushf
or
mov
in
das
test
jl
inc
aaa
ror
popa
mov
loope
cmp
das
lahf
xchg
xchg
adc
push
hlt
pop
xchg
sub
mov
test
in
and
lods
pop
lods
loopne
adcb
bound
pusha
mov
fildll
stos
fwait
ss
fidivrl
dec
outsb
xor
ds
add
jle
enter
iret
decl
jecxz
cmp
shlb
push
cld
pop
xchg
fcmovnbe
fdivrp
out
mov
cmpl
jno
in
dec
lods
mov
scas
std
imul
inc
scas
inc
inc
cld
add
rcrl
push
mov
sarb
test
xor
cmp
mov
mov
push
or
lret
and
dec
jmp
mov
jbe
es
and
sbb
xchg
data16
xor
push
lret
mov
mov
mov
insb
cwtl
push
cwtl
lret
int3
dec
arpl
arpl
inc
mov
ljmp
fcomip
jmp
in
gs
aam
push
pop
xor
dec
das
mov
lret
push
mov
mov
push
or
lret
sub
sti
pop
cld
mov
lcall
iret
mov
adc
and
test
sbb
xchg
es
inc
and
rcrb
adc
or
pop
scas
adc
cmp
aaa
adc
repnz
mov
and
lea
imul
push
pop
inc
and
sbb
sub
mov
jge
fnstsw
cwtl
notl
dec
lahf
xor
mov
rorl
outsb
in
popa
jge
ljmp
gs
push
push
inc
jmp
push
add
xor
mov
or
xchg
mov
mov
in
sbb
sub
dec
lret
xchg
loop
mov
arpl
mov
ret
sub
loope
push
push
cmp
aam
xchg
pushl
jb
mov
das
jbe
pop
mov
test
lds
popf
cmp
rolb
popf
movsl
add
sbb
mov
pop
or
aam
add
les
mov
xchg
dec
movsl
inc
es
lahf
dec
xchg
fadds
xchg
movsb
inc
stos
sbb
ja
sbb
sub
fldcw
pop
jnp
adc
outsl
mov
call
jo
insl
popf
icebp
mov
les
and
add
movsb
call
mov
sbb
add
xchg
icebp
push
jbe
adc
cmp
inc
imul
lret
mov
jbe
test
ja
cmp
inc
mov
xchg
fdivp
ds
bnd
or
lock
int3
bound
inc
andl
cmp
push
mov
in
fistpll
or
fdivrl
je
xor
pop
push
lock
adc
sub
aam
xor
or
or
jmp
test
and
pop
sti
sbb
movsl
pusha
int3
fidivrs
movsb
mov
cmp
aam
xchg
popf
push
in
lea
xchg
fsubrs
adc
push
dec
stos
or
add
adc
and
pmaxub
cmp
pop
sbbl
aam
inc
adc
iret
jp
adc
imul
insl
sbb
push
mov
rorb
and
pusha
mov
sahf
ret
iretw
lds
pusha
je
dec
adc
cwtl
xchg
orl
xchg
sub
xor
mov
push
xor
pusha
mov
fcomps
jg
jp
cmp
xchg
cmp
ss
jo
mov
es
or
cmpsb
cmp
pop
dec
test
or
vphaddubd
add
sbb
push
cmc
mov
xchg
ret
push
mov
sub
push
xor
cmp
pop
aam
aaa
sub
mov
mov
ss
push
loopne
movsl
inc
or
ret
pusha
lods
inc
dec
xor
xor
or
ret
mov
mov
mov
icebp
arpl
and
sub
mov
fimuls
pop
sbb
jne
ret
or
int3
jmp
mov
jae
in
dec
stos
sti
jne
or
dec
repnz
leave
lods
adc
pop
jb
jl
pop
popa
pop
inc
ss
hlt
lret
jns
hlt
jne
dec
sub
mov
jp
push
push
jg
aas
loop
push
data16
lods
mov
out
fisubs
mov
int3
cmp
lds
pop
in
fdivrl
bound
inc
sub
pop
dec
test
sahf
in
push
enter
mov
test
mov
cmp
jns
jnp
pop
fiaddl
dec
shr
push
loope
aam
sub
lcall
dec
rolb
iret
dec
xor
and
jecxz
xchg
cmp
aas
pop
sub
inc
fcompl
mov
dec
stos
fidivs
inc
pop
bound
cli
inc
mov
pushl
adc
enter
in
movsl
lret
lahf
pop
xchg
push
push
push
sub
sbb
pop
fs
jmp
jb
std
push
scas
pop
int3
stos
or
mov
fsubs
add
jp
xchg
add
mov
add
sbb
pop
add
mov
sti
ljmp
mov
mov
sarb
dec
sub
sub
inc
pop
cwtl
cmpsb
mov
int3
mov
mov
dec
bound
jp
je
xor
daa
jmp
std
fsts
ljmp
test
jnp
stos
movsb
and
andl
fistps
sbb
push
je
jle
mov
mov
outsl
cmp
jb
mov
repnz
outsl
or
in
push
mov
mov
mov
add
xchg
mov
outsl
into
sub
in
int
outsb
out
and
sub
movsb
add
or
mov
inc
loop
sbb
out
ds
and
cwtl
adc
push
push
jne
add
inc
sub
in
or
pop
mov
shl
inc
pop
js
sbb
push
mov
test
adc
mov
mov
icebp
pop
cmp
les
xor
add
mov
push
mov
data16
jmp
jmp
bnd
imull
adc
sub
out
jle
xchg
and
popa
lcall
inc
jg
std
pop
mov
pusha
cmp
mov
repnz
pop
aad
into
lea
nop
sub
dec
lret
iret
dec
cmp
and
jecxz
xchg
mov
add
xchg
notb
test
icebp
push
mov
lock
sub
int3
addr16
sbb
inc
movsb
mov
and
sbb
fdivs
out
jb
pop
push
aam
fistps
dec
add
jg
sbb
call
jg
dec
mov
jbe
es
inc
pop
les
add
in
xlat
ss
popa
mov
aam
mov
mov
dec
outsb
adc
jb
xchg
inc
mov
fxam
xchg
jno
cs
add
or
push
xor
jl
mov
adc
cmc
aam
adc
adc
and
test
jle
push
xchg
jg
jecxz
adc
arpl
and
dec
out
add
pusha
sbb
push
jge
aad
xlat
push
dec
divl
mov
inc
lret
adc
cmpsl
cmpsl
lds
mov
or
rcrb
test
inc
cmp
outsb
pop
ficoml
add
mov
mov
outsb
int
xor
cmp
push
out
or
bnd
fdivrl
sbb
xlat
std
pop
flds
adc
jmp
jmp
imul
sub
daa
ret
pop
add
push
ret
mov
pop
jge
test
or
outsl
xchg
xchg
outsl
mov
add
push
js
dec
lret
into
xor
mov
cmp
ret
fstpl
cmp
sbb
push
mov
jmp
xchg
dec
push
xor
cs
into
mov
mov
cmpsl
pop
data16
sbb
shrl
lahf
jg
pop
push
jle
mov
cwtl
clc
jb
loopne
aad
fsubr
push
mov
cmpsb
sub
mov
ss
cmpsl
jns
sahf
and
xlat
les
jle
cmp
sbb
stos
ds
inc
sti
loope
xchg
fsubr
push
mov
int3
sub
bound
fwait
ljmp
movsb
aad
rcrb
nop
inc
xchg
sub
mov
adc
mov
repnz
inc
adc
sub
mov
mov
inc
lds
mov
ret
lcall
sbb
mov
cwtl
imul
mov
mov
mov
movsb
cmp
mov
xor
js
dec
repnz
add
dec
loop
roll
rcrb
loopne
cmp
pop
cmp
aam
mov
fistpl
jge
insl
clc
dec
jg
sub
data16
pusha
mov
mov
and
xchg
pop
outsl
orl
lret
aad
or
repnz
mov
lock
lods
or
mov
adc
inc
mov
lahf
jle
fdivrl
adc
sbb
add
adc
adc
xor
sarb
sub
push
enter
scas
fnstenv
and
loope
fstpt
push
xor
pop
xlat
jne
mov
cmp
imul
jno
dec
dec
push
stos
adc
pop
dec
fimuls
push
data16
outsb
jecxz
ljmp
mov
sbb
in
push
add
push
xor
repnz
and
test
in
leave
in
std
ret
call
lea
or
push
dec
scas
lahf
jg
jg
sti
fdivrs
add
shll
dec
pop
sbb
rcr
test
cs
stos
dec
loop
or
cmpsb
test
jp
ficoml
arpl
lret
and
gs
rclb
xchg
hlt
and
and
es
xchg
jo
lods
sbb
push
mov
cmp
cmpsl
test
inc
fs
xor
jle
cmp
sbb
add
mov
jae
xor
lock
push
mov
inc
stos
or
jle
out
jp
adc
jecxz
inc
jge
in
jle
push
ljmp
fnstcw
or
push
mov
adc
inc
icebp
repnz
nop
out
iret
add
dec
sub
pop
repz
inc
xchg
and
in
inc
and
cmpsl
or
aam
es
fsubl
sbb
lea
fwait
lret
push
imul
aas
mov
push
cmp
rclb
sub
and
or
lods
dec
cmp
idiv
sarl
mov
orb
rorl
push
adc
cmpsl
mov
ret
inc
jmp
pop
insb
jle
pop
inc
xchg
cmpsb
cmpsl
lcall
push
xor
repz
das
or
push
mov
subb
das
inc
inc
dec
nop
pop
lret
jle
es
pop
pop
sbb
and
and
push
xor
push
inc
inc
sahf
mov
pop
push
sbb
sbb
mov
mov
xchg
test
sbb
push
pop
cltd
adc
or
pop
sbb
mov
xchg
add
scas
mov
movups
pop
or
movsl
nop
test
mov
add
and
jmp
pop
ds
jge
xor
hlt
add
xchg
xchg
lods
inc
test
push
leave
push
aad
test
push
pop
pop
inc
pop
scas
inc
inc
and
popa
shl
sub
and
jnp
push
sarl
clc
jne
push
mov
cmp
adc
dec
clc
or
pop
xor
cltd
and
inc
jmp
inc
imul
inc
xchg
mov
lcall
push
xor
repz
das
or
push
mov
subb
mov
inc
dec
nop
mov
jle
es
push
mov
sbb
addr16
mov
push
inc
cmp
sbb
sbb
mov
mov
adc
adc
or
xchg
sbb
adc
scas
mov
movups
push
dec
lea
mov
cmp
lock
mov
or
xchg
stc
sbb
loop
rol
ss
and
fcomip
repnz
mov
mov
sti
mov
leave
lret
inc
mov
xor
lds
mov
lea
pushf
popf
mov
pop
mov
mov
outsl
mov
pop
scas
sbb
int3
sub
jmp
cmpsl
pop
cwtd
in
push
ret
inc
pop
mov
add
pop
mov
cwtl
inc
aam
ljmp
arpl
iret
shrb
or
pop
sbb
setp
push
jecxz
jmp
sub
jno
movsl
mov
les
rcrl
jae
add
mov
test
stos
fdivs
push
xchg
push
adcl
lret
or
pop
test
arpl
push
or
out
xlat
or
ljmp
in
or
ljmp
jl
jns
xor
mov
bound
cmp
outsl
jo
pop
mov
cmp
xor
shlb
les
fidivrs
jno
les
insb
mov
add
ds
jb
sbb
lea
xchg
xchg
dec
sub
repnz
dec
inc
insl
mov
outsb
add
fmulp
adc
daa
sbb
inc
mov
int3
cmp
cmc
jne
adcb
mov
sbb
cmp
test
repz
adc
into
addb
test
jnp
ljmp
shll
mov
into
mov
push
mov
stos
inc
ja
mov
mov
movsl
outsb
lahf
mov
lods
mov
stos
ja
mov
xlat
push
cli
divl
pop
pop
xor
adc
push
mov
je
or
or
xor
clc
sub
add
lret
mov
sbb
fnstcw
cwtl
lret
push
jg
jne
mov
jne
push
mov
and
icebp
sbb
iret
inc
lds
shrl
add
leave
hlt
mov
mov
fcomp
mov
lret
jae
cmc
jne
bound
rcl
lea
loope
in
insl
cmc
cmp
test
test
mov
movsb
and
pusha
popa
cmp
jl
movsb
or
cmp
adc
push
aad
loop
sbb
add
sub
je
or
mov
add
pusha
cli
add
jns
fistpl
cli
push
cmpsl
js
push
lock
push
inc
jb
mov
jmp
dec
cmp
cmp
sysenter
cmpsl
daa
shll
inc
scas
mov
sub
mov
mov
aam
dec
mov
hlt
jne
sbb
push
pop
lea
sub
dec
jnp
das
movsb
and
insl
in
pop
jge
sub
lret
sbb
loop
sahf
mov
lea
or
mov
gs
jnp
das
movsb
and
pusha
popa
cmp
jl
ljmp
sub
roll
xor
in
flds
nop
mov
int3
push
cltd
outsb
push
call
fs
test
dec
sub
shll
out
pop
add
adc
xchg
cwtl
je
mov
inc
cli
jl
jo
fsubs
mov
lods
aam
mov
mov
insl
outsb
addl
rcrb
arpl
jae
or
mov
sub
loop
push
jmp
xor
mov
daa
add
mov
or
or
pop
sti
out
mov
cmp
div
sarl
xchg
mov
iret
stos
ja
pop
push
ljmp
cmpsl
subl
int
inc
ljmp
inc
dec
loop
stc
sbb
xorb
xor
dec
xchg
jge
repnz
mulb
push
dec
lret
jae
pop
loop
stc
cmp
mov
fstp
mov
cli
jp
addr16
mov
test
jb
aas
pop
jp
scas
mov
lock
sub
pop
push
shll
inc
js,pn
mov
sub
shlb
and
bnd
mov
mov
lret
jae
sub
push
jbe
xor
gs
or
loopne
dec
add
and
sbb
push
test
xor
xchg
jae
sub
push
push
push
mov
dec
xchg
imul
or
pop
jecxz
int
cld
pop
push
mov
cltd
aas
adc
or
movups
adc
mov
dec
pop
jns
aad
mov
lds
add
loop
pop
mov
out
jp
cli
dec
notl
jno
mov
repnz
mov
pop
daa
xlat
push
das
jmp
call
popf
push
loop
cmpsl
fs
popa
shlb
dec
hlt
enter
push
aad
sti
inc
push
push
jo
rolb
ds
jb
fs
cmp
xchg
cmp
xor
dec
adcl
inc
jl
mov
ds
pusha
mov
cmp
mov
mov
dec
scas
aas
sbb
cs
dec
inc
test
lret
movsb
adc
pop
push
mov
rcrb
or
inc
mov
push
shr
xchg
ds
jl
rolb
popf
mov
xlat
imull
lret
imul
scas
inc
mov
lcall
cmp
sahf
inc
xor
mov
in
stc
or
xchg
leave
lret
mov
or
mov
dec
popf
push
in
jb
pop
jp
inc
insb
mov
xchg
push
mov
push
sbb
insl
in
xchg
pop
adc
sub
push
icebp
sbb
rolb
insl
rol
out
add
hlt
popa
enter
mov
mov
jne
bound
jns
pushf
dec
sbb
int3
dec
rcl
push
call
fs
mov
sub
cmp
aad
xor
mov
imul
mov
pusha
sub
fsubrl
lret
movsb
adc
pop
ljmp
pop
cmpb
push
notl
lock
push
fs
sbb
dec
aam
mov
inc
enter
iret
and
mov
imul
mov
lcall
bound
aaa
fst
push
sub
or
stos
addb
test
jnp
or
and
xchg
arpl
inc
cmp
pop
fsubl
hlt
add
xor
mov
cmp
or
xor
loop
out
insb
ret
imulb
xor
pop
pop
cmp
jp
or
xchg
pushl
xor
insl
mov
mov
stos
xchg
stos
or
xor
mov
scas
inc
inc
pop
or
pop
filds
sbb
jecxz
ds
les
pop
in
ss
mov
inc
push
lret
xor
cs
inc
pop
inc
push
ljmp
sub
lcall
mov
mov
ror
lcall
sti
mov
cmp
outsb
inc
inc
mov
mov
add
inc
mov
out
jp
inc
repz
bound
adc
mov
dec
dec
out
cmp
inc
dec
loope
shll
xor
fsubl
and
mov
out
cmp
rorb
and
and
xor
lods
pop
adc
das
dec
pop
test
cmp
sub
inc
push
mov
and
cmp
push
mov
fistpl
movsb
cmp
cmp
loope
jne
push
mov
es
push
outsl
lock
sbb
imul
movsl
scas
daa
cmpsl
dec
jecxz
sbb
mov
fistpll
inc
xchg
mov
sar
das
push
int
fs
cli
mov
mov
push
stos
ret
xchg
cmpsl
test
and
pop
mov
add
sub
jp
mov
inc
loope
loopne
call
inc
or
lock
fsubr
sti
add
loopne
inc
enter
in
lea
data16
or
lahf
pop
sub
cld
cmp
and
cmp
notl
dec
sbbl
xchg
outsl
dec
imul
imul
mov
or
mov
inc
popf
push
in
data16
jp
inc
insb
fstps
xchg
push
mov
push
cs
cmp
pop
ret
pop
sub
inc
pop
mov
and
scas
sub
and
inc
cwtl
cmp
in
popf
testl
sbb
push
fmull
push
and
adc
and
stos
and
imul
inc
mov
push
in
popa
aam
addb
mov
clc
sub
jbe
iret
mov
mov
mov
gs
lret
mov
mov
fs
cld
fsubs
xor
mov
pand
idivl
sarl
mov
xchg
adc
dec
inc
jecxz
stos
xor
cmpsl
in
cltd
test
mov
pusha
push
jg
xchg
pusha
xchg
xchg
outsl
pop
test
scas
cs
pushf
jne
push
inc
adc
push
adc
data16
xor
fcompl
cs
sbb
sub
cmp
shlb
and
and
xor
pop
lods
pop
fcomps
cmpsl
dec
inc
rcrl
push
push
adc
das
inc
inc
inc
subl
jle
pop
ds
std
xor
pop
fnstenv
nop
das
enter
push
rcrl
flds
pusha
xor
mov
jmp
mov
in
xchg
lods
rol
out
pop
xlat
mov
xchg
in
and
movsl
cmpsb
pusha
aam
push
adc
lock
mov
int
js
sbb
pop
les
stos
add
sbb
aaa
test
pop
arpl
jae
mov
push
mov
xor
dec
sub
int
xchg
rclb
or
mov
xchg
ret
int3
stos
lahf
cmp
pop
cld
mov
movsl
aaa
cmp
int
unpckhps
xor
cmp
jno
int3
dec
aam
pop
das
test
push
arpl
int3
stos
mov
mov
pop
mov
je
test
dec
jns
xchg
xchg
cwtl
xchg
mov
in
dec
add
sub
sarl
adc
call
ret
sub
call
cwtl
push
mov
jbe
fbld
clc
adc
adc
xor
xchg
stos
or
outsl
push
and
pusha
mov
fdivrp
and
popf
mov
jns
pop
sub
xor
jecxz
push
jo
repnz
ficoms
notl
int
or
sub
jmp
mov
push
lods
daa
lds
add
lret
jns
jb
mov
js
mov
and
push
lock
and
dec
lods
mov
inc
cmp
dec
adc
dec
or
imul
mov
jns
jp
dec
xor
push
mov
push
dec
push
lea
xor
sub
push
scas
mov
lret
rorl
out
loopne
push
dec
sub
pushf
cmp
push
scas
hlt
fcomps
mov
int
adc
in
stos
cld
adc
push
adc
mov
andb
test
sub
jecxz
pop
jle
mov
sbb
adc
cmp
push
xor
je
mov
adc
nop
cmc
nop
scas
or
dec
loopne
xchg
or
out
out
test
fimuls
call
mov
mov
negl
fldt
aam
out
imul
je
out
dec
sub
mov
cmp
mov
lds
movsl
inc
lahf
jge
push
adcl
cwtl
cmp
push
mov
jmp
cs
mov
int
or
clc
jne
enter
call
add
fidivrs
mov
repnz
mov
pop
xor
int
into
or
sub
test
push
dec
iret
sbb
movsb
test
pushf
cmpsb
test
mov
iret
sub
ss
sbb
dec
aas
jg
xchg
lods
sub
push
jp
mov
inc
pop
mov
cmpsl
into
jp
sub
or
inc
popa
mov
jecxz
xchg
mov
adc
into
mov
xchg
push
jb
or
addr16
pop
scas
adc
xchg
imul
rcrl
fprem1
pop
cs
scas
adc
lcall
out
scas
das
jbe
xor
or
arpl
dec
or
dec
sub
cmp
adc
adc
jns
les
cwtl
hlt
shll
cmp
outsb
sbb
lods
mov
lods
or
ret
and
cmc
inc
mov
jg
mov
jl
xchg
test
dec
adc
push
mov
jae
mov
pop
in
call
movsl
and
xchg
and
lods
pop
mov
nop
jg
sbb
mov
xchg
andnps
clc
hlt
inc
xchg
adc
arpl
mov
dec
adcb
daa
pop
mov
outsb
inc
sahf
les
cmp
push
cmp
repz
push
nop
sahf
iret
lods
xchg
adc
test
mov
aad
mov
adc
test
cmp
sarl
jne
mov
pop
xchg
inc
push
push
in
mov
xor
scas
mov
lret
rcrb
sub
insb
pop
add
sub
mov
dec
pop
cmp
in
fincstp
lcall
jnp
rcrb
or
fldl2t
xchg
int3
jg
cmp
jmp
aaa
dec
and
popa
data16
fidivrl
push
lock
mov
adc
adc
clc
inc
dec
fld1
mov
sub
inc
aas
jmp
mov
test
ljmp
xlat
jle
mov
xor
clc
mov
push
push
cltd
xchg
inc
jmp
sub
dec
sub
and
and
mov
pop
ds
cmp
jg
sbb
lcall
jno
adc
pop
stos
mov
adcb
sub
mov
movsb
test
in
inc
jg
push
std
cmpb
test
xchg
dec
mov
jne
sub
lea
mov
outsb
insl
mov
fwait
insl
lds
inc
add
insl
rcrl
cmp
gs
cmpsl
ja
mov
dec
cwtl
cmp
rclb
insl
test
imul
addr16
cmpsl
test
mov
or
mov
fiadds
push
outsb
adc
sti
cmp
xor
xor
aam
out
sub
scas
or
jp
mov
jmp
arpl
xlat
jnp
aas
mov
cmp
xchg
and
push
push
push
jb,pn
mulb
mov
enter
jmp
lock
push
pop
jle
cmp
pop
ds
xor
push
adc
xor
xchg
shlb
or
mov
rol
or
out
ljmp
in
cmpsl
aas
add
mov
fcomi
sub
fdivrl
push
jbe
scas
mov
repnz
push
mov
xchg
in
fildll
lds
lods
insb
ljmp
ret
pop
cld
fdivs
xchg
into
fnstcw
cmc
push
mov
mov
mov
push
ljmp
lret
imul
lock
pop
in
sahf
pop
push
xchg
fucomp
pop
lahf
rcrb
mov
je
push
dec
pop
pop
aaa
shrl
jmp
mov
sahf
int3
repnz
or
inc
cmpsb
mov
gs
lds
dec
inc
mov
jge
jo
stc
fnstenv
jecxz
xlat
loop
jae
data16
sbb
fwait
cs
iret
push
pop
lahf
ljmp
dec
pop
pop
push
ds
mov
lret
pop
fisubs
fsubs
adc
jne
je
mov
push
js
mov
or
inc
jo
test
idiv
pop
sbb
test
pop
test
jl
sub
je
mov
jl
dec
lcall
lret
jae
lret
cmp
pop
test
dec
lods
mov
lahf
mov
aas
popf
cld
add
pop
cwtl
and
adc
into
jnp
fwait
mov
xor
mov
rep
stos
repnz
jo
inc
inc
sbb
orl
or
fnstcw
pop
inc
lods
scas
ficomps
xchg
and
pop
inc
shrl
cmc
adc
mov
xor
sbb
mov
sti
lds
cmp
cld
imull
jb
mov
repnz
mov
cmp
stc
mov
mov
adc
bound
call
pop
fiadds
jp
fildll
lahf
mov
jb
xor
push
add
call
or
cs
subb
pushf
jmp
and
mov
ljmp
mov
bound
dec
into
lods
imul
fists
inc
pop
iret
loope
les
cmp
notb
lret
push
ficoml
adc
jno
jecxz
xchg
dec
test
or
jmp
insl
fsub
inc
mov
addr16
mov
mulb
ficomps
aam
xchg
dec
push
bound
lcall
rdmsr
push
int
dec
cmpsb
add
das
mov
test
inc
or
sub
push
mov
jg
mov
testl
xchg
fisttps
mov
call
daa
and
call
pushf
inc
repz
jl
pop
add
sarl
repnz
jb
fidivl
lea
and
std
inc
stos
xchg
pop
test
sub
popf
cmp
cmpsl
pop
mov
push
mov
mov
xor
outsl
mov
leave
jbe
lods
lods
dec
in
je
sub
push
inc
out
sahf
sub
dec
cmp
mov
popa
pop
lahf
adc
int
xlat
push
inc
dec
sub
jmp
es
xchg
rolb
add
aas
mov
xchg
cmp
pop
sub
xchg
scas
aad
ja
lahf
stos
push
push
xor
cmp
jle
stos
or
cmpsb
add
dec
movsb
and
and
hlt
out
cmpsl
adc
stc
mov
xor
pop
js
out
jo
sti
xor
sub
and
insb
push
mov
or
popf
adc
mov
lods
jns
mov
or
push
mov
out
add
out
lock
insl
int3
loopne
xchg
or
adc
xor
les
pop
mov
cwtl
adc
je
call
test
pop
mov
and
lock
xlat
jmp
inc
sbb
mov
xchg
movsb
sub
sbbb
lcall
ss
je
sub
aaa
or
cmc
icebp
in
mov
xor
pop
cmp
scas
cmc
or
ret
ja
movsb
mov
sbbl
fsubr
pop
fiadds
sbb
sti
and
rcrb
xor
mov
iret
add
jg
test
call
xor
xor
mov
imul
cmp
push
mov
jne
push
jns
jae
fisttpll
sbb
sub
lcall
dec
or
lods
or
in
xlat
outsb
add
mov
inc
sbb
sbb
sub
and
adc
cli
fidivrl
movsb
xchg
and
es
adc
pop
sub
lahf
cmp
cltd
jnp
and
rcrl
xor
ja
mov
cs
sub
inc
arpl
xchg
inc
lds
inc
in
lahf
pop
inc
testl
and
subb
adc
outsb
sbb
mov
insb
sbb
jmp
ret
xchg
or
filds
inc
add
add
test
xchg
xchg
aam
icebp
jecxz
pushf
jns
xor
int
mov
dec
les
imul
mov
push
data16
mov
mov
pop
mov
in
mov
fnstcw
insb
sbb
xchg
push
or
xchg
repnz
iret
ret
dec
lods
fistpll
sbb
mov
pop
cwtd
psrlq
inc
xor
and
add
jmp
mov
push
fidivl
stc
pop
xchg
inc
adc
in
lahf
cs
orl
xor
dec
cmp
cmc
arpl
jne
notb
jg
xchg
xchg
cmc
test
sbb
mov
xchg
or
jne
jmp
lods
int
aad
fdiv
arpl
and
xor
jecxz
scas
rol
pop
adc
pop
pop
dec
jae
das
in
imul
mov
xorl
mov
mov
mov
inc
inc
push
mov
jecxz
addl
lods
sbb
outsl
fucomp
cmp
cmp
sub
sub
mov
fwait
sub
cld
mov
xchg
daa
dec
jns
pusha
inc
pop
lds
push
mov
mov
mov
ds
push
mov
scas
das
mov
xor
sub
inc
and
addr16
movsb
test
inc
and
bound
pop
jo
das
pop
jbe
mov
ds
shll
push
jne
cmp
jne
jne
mov
mov
and
pop
or
add
cli
push
cld
sbb
cmp
and
xlat
rcrl
push
add
or
orb
sbb
mov
outsb
and
sti
test
in
pop
cltd
sub
cltd
jo
cmc
push
stos
mov
shrb
adc
jae
enter
int3
lret
rol
fnstsw
push
shlb
loopne
cmp
or
cwtl
push
ljmp
and
sar
test
imul
mov
or
push
mov
mov
dec
popf
push
xor
fwait
jmp
pop
pop
lret
aam
ficomps
test
inc
jmp
push
dec
and
and
lea
xchg
pusha
inc
mov
cmp
mov
add
adc
adc
xchg
shll
mov
or
push
fisttpll
movb
fs
dec
inc
mov
jle
lcall
mov
sbb
les
jo
fidivl
pop
sub
out
pop
mov
mov
push
dec
lods
lods
into
add
in
stos
cmpsl
cmp
mov
jne
cmc
aas
pop
jle
jmp
bound
xchg
jmp
dec
sarb
xor
ds
push
jge
bound
neg
xor
stos
jb
lret
add
jecxz
aas
jge
push
scas
lahf
pop
mov
or
cld
movsl
scas
jae
fnstcw
push
sbb
pop
icebp
mov
pop
lds
sub
cs
rdmsr
outsb
sub
scas
mov
lock
cli
xchg
and
mov
mov
jge
jo
ja
fnstenv
fucomip
cmpsb
pop
fcoms
and
stos
push
imul
sbb
mov
in
int3
jge
hlt
divb
cmp
sbb
pop
mov
into
dec
push
shr
or
lret
sub
ret
dec
das
inc
lods
popf
gs
push
pusha
popa
inc
bound
sbb
pop
bound
jns
pop
pop
cli
ja
dec
dec
fcoml
inc
idiv
outsl
jo
sbb
push
jo
lret
push
add
lea
pop
iret
addb
insl
lret
out
repnz
jl
test
fsts
scas
push
loope
lock
sbb
setge
cs
out
pop
or
inc
sbb
add
js
dec
pop
pop
scas
push
mov
push
test
aam
shll
iret
mov
call
push
repz
test
jl
dec
cmp
sub
roll
push
mov
mov
adc
std
or
imul
loop
mov
dec
inc
and
and
inc
das
cmp
or
je
add
mov
cs
inc
sub
mov
pop
mov
xlat
inc
push
fisubrs
and
cmp
adc
push
std
ficoms
popf
xchg
cs
in
es
outsl
inc
xchg
outsl
movsl
aad
ret
icebp
lods
loope
lret
pop
xchg
mov
pushf
cmp
xor
jmp
aaa
fnstcw
pop
out
jg
xlat
jo
mov
rorb
mov
inc
inc
or
dec
es
arpl
mov
movsl
out
sahf
dec
mov
jg
cmp
push
ficompl
cwtl
ret
lahf
pop
xlat
insl
push
mov
movb
cld
imul
adc
rorb
ds
mov
scas
sti
pop
fdivrl
stc
es
loope
test
rcr
stos
fmul
push
in
cmp
cmp
sub
xchg
js
call
xor
test
cmp
push
fdivs
mov
ja
pop
lret
aam
xchg
ja
or
insb
lret
sub
xor
jecxz
pop
dec
xchg
jecxz
arpl
fiaddl
pop
imul
push
notb
push
adc
in
dec
test
dec
cli
sbb
lock
ljmp
sub
shr
or
pop
jge
sub
shll
cld
push
je
sbb
stos
cmp
inc
cli
dec
rcrl
insl
outsb
or
inc
xlat
repz
push
sub
imul
inc
mov
out
sti
test
shlb
bound
mov
xor
sbb
lret
jle
dec
in
mov
or
mov
je
inc
mov
fcompl
jge
jle
lods
fisubl
mov
sbb
dec
fsts
sub
outsl
jo
or
mov
cld
js
call
lds
repnz
in
cld
std
add
push
xchg
and
mov
data16
nop
lock
aam
dec
pop
cmp
mov
loop
jmp
mov
mov
pop
jbe
pop
push
je
xor
sbb
in
push
rcll
ror
cmp
fiaddl
psubsb
or
insb
xchg
mov
sarl
fistpll
aad
cmp
or
jb
jae
push
shr
jg
and
push
ljmp
cmp
lock
jne
jae
jge
lods
push
lds
dec
stos
or
adc
mov
ret
insb
push
inc
or
lret
fnstsw
mov
cwtl
negl
cwtl
push
mov
mov
mov
stos
xchg
mov
cmp
cmpsl
into
jp
and
sub
sub
jo
add
sbb
push
mov
mov
popa
mov
push
ror
lea
mov
rorb
dec
test
mov
jmp
and
add
cmp
in
sbb
xchg
negl
xchg
ss
xchg
xchg
sub
shrb
lea
insl
out
xor
lret
lea
movsl
and
dec
lods
mov
xchg
test
cmp
inc
sarb
xor
inc
fdivl
mov
dec
mov
inc
loopne
xor
insb
dec
test
lock
pop
aam
arpl
add
add
jg
jg
test
ss
lahf
push
cli
cmc
and
push
sub
in
repnz
sub
and
dec
mov
or
pop
xor
sbb
adc
mov
add
popf
lret
push
mov
push
push
cs
mov
sub
aaa
sbb
mov
mov
inc
inc
test
mov
aaa
xor
arpl
xchg
xchg
jo
cs
and
scas
mov
cmpsl
imul
or
mov
dec
sub
push
inc
outsb
cmp
sbb
push
mov
int3
xor
cmc
jne
enter
mov
lock
sub
push
xor
and
inc
ret
jecxz
inc
mov
sbb
dec
or
or
notl
jne
jbe
adc
fidivrl
sbb
call
sub
xchg
ret
and
add
cmp
sbb
push
mov
aas
pop
jge
pop
shll
xchg
scas
stos
mov
outsb
or
inc
cmpsb
pop
loopne
xchg
jmp
inc
jne
push
bound
les
hlt
cmp
lock
lea
insl
in
adc
sub
call
dec
stos
mov
push
std
dec
pushf
cld
and
xchg
xor
jle
not
xor
adc
lds
lock
popa
lea
sub
addr16
push
mov
out
sbb
push
mov
jle
lcall
push
pop
or
inc
push
mov
dec
push
pop
aad
shrb
lea
xchg
cmc
sbbl
lods
daa
inc
or
out
pusha
mov
jle
push
xor
clc
pop
mov
xchg
je
xor
popf
jge
cmpsl
int
sub
ljmp
xchg
cmp
stc
inc
inc
or
mov
jge
mov
loope
aas
adc
sbb
adc
notb
cvtpi2ps
stos
or
lea
imul
repz
cmpsl
fxam
dec
out
popa
mov
xchg
repnz
sbb
sbb
cmp
xchg
icebp
test
rcll
and
ror
dec
imul
dec
jp
push
add
add
lahf
loop
cld
xchg
and
pop
cmp
push
jle
cmp
mov
repnz
jb
insl
lret
sub
hlt
cmp
test
mov
stos
push
pushf
jae
xor
outsl
call
clc
jl
adc
push
mov
sub
cltd
lea
loope
lcall
add
mov
and
pop
inc
rolb
cli
fs
notb
mov
outsb
or
mov
lods
inc
mov
test
pop
in
das
imul
fdivrl
cmpsl
adc
jg
xlat
cltd
jns
mov
jmp
shll
aam
mov
push
jb
pop
aam
mov
push
insl
imul
mov
add
js
cmp
sbb
xchg
pusha
mov
aam
pop
cwtl
xchg
lds
mov
frstor
mov
adc
jp
mov
leave
push
cld
sbb
adc
cmp
xor
mov
xor
pop
mov
fadds
add
popa
insl
jmp
js
adc
add
je
js
ds
jl
std
iret
clc
push
mov
xor
jle
scas
mov
out
in
dec
insl
push
fimuls
or
xchg
mov
inc
xlat
rcrb
xchg
mov
mov
push
mov
lods
je
xor
lods
cwtl
sub
sbb
dec
or
mov
and
mov
sahf
sti
ja
pop
mov
adc
rcll
adc
je
outsl
jo
call
mov
inc
std
xchg
cmp
cmpsl
das
jp
sbb
mov
pop
testl
test
xchg
mov
and
adc
xchg
mov
lods
lods
sbb
test
pop
data16
call
popa
and
popf
cmp
push
les
jo
mov
pop
dec
dec
mov
call
inc
pop
adc
adc
pop
cmp
xor
popa
rcll
sbb
sbb
out
xlat
push
lret
aad
addr16
es
adc
and
dec
push
mov
push
lcall
add
mov
mov
pop
mov
pop
cmp
repnz
and
lods
dec
stos
or
sub
jbe
and
dec
mov
pop
push
jp
xchg
aaa
mov
lock
xchg
repnz
hlt
push
or
daa
iret
nop
out
and
std
mov
mov
xor
ds
or
jp
xchg
in
sbb
push
popl
cmpsl
pop
or
dec
test
hlt
sub
and
jmp
jp,pt
dec
cmp
cmp
mulb
aad
aad
xchg
jg
and
les
or
ljmp
stos
xor
lret
int3
push
test
ds
xchg
out
js
inc
mov
movsb
and
cltd
jns
or
pop
mov
cmp
xchg
jb
mov
mov
sub
movsl
outsb
cmpsl
adc
push
cmpsl
cmpsl
lods
daa
shll
pop
imul
and
mov
cmp
jnp
xchg
jae
fisubrs
mov
push
stc
js
divl
mov
lret
popf
movsb
add
or
test
shl
js
mov
scas
daa
in
ja
mov
xor
sahf
in
mov
jecxz
or
push
mov
enter
jo
cli
arpl
iret
add
pusha
inc
mov
push
xor
jge
jo
adc
fnstenv
loope
xlat
loop
jae
adc
jae
das
mov
pop
pop
psubsb
out
cmp
mov
jb
pushf
popf
nop
xor
mov
cmp
push
das
add
xor
lods
fimuls
ds
add
cmpsl
push
test
cwtl
xor
push
outsl
shll
pusha
inc
mov
pop
cmp
sahf
lcall
xor
repz
dec
lods
ja
inc
in
mov
xor
adc
jg
cld
insl
jge
adc
sti
test
test
pop
jl
xor
pop
push
mov
rclb
mov
dec
dec
popl
adc
add
inc
imul
lahf
cltd
mov
andb
xor
jp
jae
popf
stos
std
mov
rcll
lods
or
mov
lcall
fsubrl
sarw
mov
jp
dec
cwtl
outsb
push
mov
xchg
mov
add
jo
push
or
dec
sar
lret
and
scas
mov
icebp
filds
inc
subl
pop
pop
and
inc
push
mov
jo
mov
mov
lret
outsl
lock
ror
ljmp
jmp
or
xchg
jle
add
inc
jg
dec
sbb
cs
pop
xor
cs
lret
sbb
test
add
push
adc
and
outsb
lods
push
mov
lds
inc
add
xor
cld
test
mov
fnstcw
push
stc
popf
cmp
jb
mov
lret
cwtl
lcall
mov
lds
sbb
cli
ret
jecxz
lahf
jne
nop
add
flds
adc
adc
scas
cltd
xchg
imul
stos
sub
lods
cld
out
call
adc
js
cld
jp
fstl
clc
fbld
jne
mov
shrb
mov
lret
jl
sub
roll
pop
sbb
loopne
cmp
pop
cmp
aam
mov
fistpl
stos
push
insl
clc
dec
jg
sub
data16
pusha
cld
xchg
mov
and
xchg
jbe
cmp
jb
out
aad
or
repnz
mov
lock
lods
or
add
addr16
lds
adc
mov
jle
fdivrl
push
insb
lcall
add
xchg
les
mov
rorl
repz
aam
mov
popa
mov
and
inc
and
into
and
paddd
cmp
jns
popf
lcall
push
jl
pop
mov
pop
mov
jecxz
outsb
or
add
int
inc
sbb
add
jne
and
sbb
je
jle
mov
xor
outsl
es
dec
iret
mulb
test
push
loopne
lods
imul
mov
out
and
jns
mov
adc
repnz
jb
fnsave
into
mov
add
test
adcl
pop
adc
pusha
lods
xchg
ljmp
loopne
inc
sbb
mov
mov
pop
arpl
xchg
dec
jmp
incl
pop
gs
mov
gs
pushf
frstor
pop
xchg
adc
pop
aad
shrl
cli
xchg
inc
out
jp
xchg
adc
or
dec
test
ret
addr16
loope
arpl
inc
jecxz
pop
fwait
cmp
sbb
out
jp
cli
js
shll
pop
sbb
test
inc
scas
cs
mov
dec
dec
inc
xchg
mov
push
insb
stos
add
jle
jp
inc
test
stc
fcomps
loop
jae
xchg
je
lret
push
mov
adc
int
or
inc
cmpsb
ret
xchg
loopne
lds
sub
and
and
add
lock
clc
mov
jl
jbe
test
stos
mov
and
mov
inc
mov
mov
jg
mov
jns
mov
pop
and
mov
sti
xchg
adc
fnstcw
lods
dec
sub
aaa
push
cmpsl
jl
jecxz
push
lret
fwait
lret
jle
cmp
mov
pop
fcmovb
jae
xor
mov
mov
xor
jo
pop
movsb
add
sbb
push
add
rcr
les
jecxz
fwait
ds
je
xor
addr16
push
cli
dec
sub
xchg
ljmp
add
daa
stos
and
pusha
or
sti
cwtl
dec
mov
mov
sbb
and
sahf
hlt
jne
adc
xor
xor
shr
test
sbb
pop
out
data16
repnz
incl
mov
test
cwtl
push
nop
out
push
sub
jno
jmp
mov
push
enter
imul
cmp
push
sarb
aas
insl
add
xchg
mov
adc
pop
inc
push
add
or
scas
outsl
push
mov
jmp
notl
xchg
cmp
insl
inc
ljmp
inc
dec
add
xor
cs
dec
cmp
in
dec
push
fadd
mov
cmc
jno
insb
lret
rol
xor
cmpsl
daa
add
lret
and
cmp
xlat
mov
jp
aam
je
mov
lock
subps
mov
out
in
pop
mov
repnz
add
dec
ret
mov
loopne
mov
rcrl
jge
jle
jbe
in
repnz
negl
push
mov
sub
jns
mov
sub
push
sub
std
push
and
inc
outsb
mov
xchg
lret
jns
cmc
sub
mov
push
jnp
jb
mov
ret
adc
ror
push
insl
jmp
and
add
mov
or
sarb
xor
mov
test
outsb
out
loope
push
or
enter
test
fnstenv
and
pusha
rclb
mov
cmp
enter
fcmovne
xchg
lock
rcrb
or
mov
popf
movsl
pop
scas
lret
mov
aad
sub
addr16
cmpsl
inc
fcomp
cli
mov
sbb
stos
lea
rcrl
aaa
inc
cmp
mov
pop
mov
sbb
jecxz
mov
jnp
rcrb
inc
mov
jle
icebp
outsb
xor
pop
sbb
jo
daa
or
dec
sub
mov
mov
imul
cmp
shlb
adc
push
out
jno
xor
mov
adc
xor
outsl
mov
sbb
mov
imul
mov
repz
movb
mov
data16
ds
scas
ja
mov
add
jae
lock
popa
insl
and
dec
push
loope
vrsqrtps
lods
insb
lods
loopne
sbbb
pop
mov
pop
xor
cwtl
jge
sahf
adc
push
mov
fimull
insl
arpl
push
outsb
xor
cmc
call
out
movsl
movsl
out
inc
test
inc
out
sbb
test
negl
jp
scas
mov
repnz
push
pop
scas
sub
clc
or
ljmp
mov
inc
inc
pop
cmp
lcall
and
cwtl
xor
xchg
hlt
xchg
out
sets
inc
xchg
imul
push
adcb
cwtl
and
and
popf
std
pop
mov
bound
xchg
loopne
mov
xchg
pop
xchg
stos
adc
lea
add
or
inc
mov
mov
data16
mov
stos
popa
shll
clc
dec
lcall
add
push
cmc
push
adc
cmc
icebp
jb
cmpsl
outsb
dec
lods
sub
lods
pop
adc
xchg
les
loop
and
dec
mov
xlat
inc
loope
add
push
mov
cmp
push
mov
xchg
dec
mov
divl
mov
nop
mov
and
fwait
pushf
sti
adc
xchg
xor
fwait
sbb
fsub
pusha
in
dec
stos
dec
mov
outsb
add
cld
xor
push
data16
movsb
das
jge
cmpsl
add
sbb
pop
add
test
xchg
cwtl
cmp
push
add
mov
dec
fsubrl
dec
insb
dec
cmp
shll
imul
pop
gs
repnz
mov
out
jle
in
sbb
inc
fsubs
aad
xchg
je
mov
mov
push
shll
or
xlat
mov
xchg
ds
negb
xchg
ljmp
inc
in
mov
lock
cmc
sbb
mov
mov
push
push
mov
shrb
mov
scas
orb
fildl
mov
fucomip
pop
push
mov
mov
mov
inc
jnp
adc
rcr
xchg
push
sub
jne
sub
nop
xlat
test
pop
in
movsb
lock
ret
int3
aas
mov
adc
pop
mov
fcompl
add
pushf
xor
or
sarb
sub
mov
mov
or
cmp
fidivs
fcomps
ja
shrb
xor
add
mov
xor
mov
lods
or
shlb
cmpsb
push
and
mov
iret
das
or
imul
jg
or
notl
mov
pop
push
cltd
adc
pop
xchg
fildll
repz
gs
lods
mov
or
cmpb
fmull
clc
xlat
lock
xor
push
xor
shrb
mov
jne
or
pop
sub
mov
repz
cli
out
and
push
inc
mov
nop
mov
mov
clc
imull
mov
adc
bound
int
shrb
or
daa
xchg
loope
push
inc
jecxz
rorb
popa
rclb
popf
lock
bndldx
xlat
xor
push
mov
adc
or
insl
mov
cmpsl
push
data16
dec
and
pop
sub
or
rolb
inc
rcl
adc
push
mov
lock
mov
popf
and
push
enter
push
pop
cli
daa
inc
test
push
and
popa
shlb
sub
insl
stos
mov
test
shll
mov
lret
int3
lahf
dec
push
sub
jl
mov
push
cmpsl
mov
ret
dec
sbb
cmovns
insb
outsb
inc
pop
fwait
ss
mov
aam
inc
adc
push
pop
lret
call
gs
fsub
inc
push
mov
jmp
arpl
sub
pop
out
cli
outsl
nop/reserved
fmul
dec
jb
sub
test
or
or
arpl
inc
andl
leave
cmp
sbb
inc
jg
push
push
pop
ja
pop
sbb
mov
sub
outsb
and
lret
jmp
and
lock
lcall
lahf
mov
inc
and
push
mov
jb
outsl
or
jne
xor
daa
outsl
out
test
sub
mov
loop
xor
pusha
popa
mov
sar
sbb
add
push
call
xchg
lods
icebp
into
cs
xchg
inc
jl
insl
int3
dec
int
jge
jecxz
cmpsl
pop
test
mov
sbb
jg
lahf
mov
cmp
popa
shrb
into
push
aad
jl
fcompl
hlt
mov
lock
push
in
lods
pop
jmp
int
cld
mov
and
sti
pop
jo
js
out
lret
or
icebp
sahf
sbb
fnstenv
gs
enter
iret
pop
or
jecxz
out
int3
sub
popf
cld
push
and
jp
sti
stc
sti
sbb
testb
dec
stos
add
psubw
ds
jne
ss
jp
or
xor
add
mov
push
adc
mov
push
xor
lds
push
jb
sbb
mov
test
test
pop
cmpsb
pusha
lods
jl
mov
push
inc
jle,pt
xchg
test
adc
divl
jne
xor
stos
mov
je
aad
aad
jmp
jmp
adc
push
lret
xlat
dec
cwtl
mov
jp
jnp
fimuls
pop
jne
xor
push
dec
divl
mov
clc
push
or
push
insl
sub
popf
gs
mov
xcrypt-ctr
cmpsl
pop
notl
pop
fldenv
cltd
je
xchg
icebp
sub
and
loopne
outsb
rorb
dec
es
rclb
add
outsb
jge
add
addl
cs
sbb
push
push
jo
pusha
xchg
adc
lds
push
mov
arpl
int3
stos
push
loop
and
imul
mov
cmp
push
mov
iret
jne
shlb
mov
std
xchg
push
shlb
cmpsl
cltd
frstor
insb
jecxz
call
cld
pop
cmpsb
test
inc
dec
sbb
pop
sahf
cmp
push
jl
mov
xchg
fimull
aam
repnz
sub
mov
fsubrp
rorb
pop
and
sahf
sbb
xchg
clc
push
xor
outsl
fcoml
iret
shrb
ss
push
and
cmp
sub
or
dec
rol
lods
mov
pop
bnd
loop
push
xchg
mov
inc
xchg
jge
addr16
lods
lcall
ret
jg
push
test
mov
test
pop
test
cmp
or
pop
mov
inc
xchg
repnz
notb
leave
jg
adc
cmpsb
mov
loop
dec
scas
inc
inc
inc
and
jecxz
or
ja
ss
push
adc
pop
icebp
repnz
lods
lea
or
xor
mov
dec
and
pop
fsts
clc
jecxz
push
aam
cmp
popf
dec
sub
ja
aaa
aad
imull
xchg
adc
inc
xor
mov
mov
sbb
and
add
outsl
push
cmp
mov
js
jmp
dec
jne
lahf
mov
ret
jo
and
out
dec
inc
sub
mov
inc
cmpsl
mov
push
sub
add
arpl
outsb
mov
call
out
adc
cli
sub
outsb
xor
stos
cmp
mov
jecxz
cli
pop
and
adc
js
and
lcall
mov
repnz
iret
xchg
cltd
mov
fimuls
and
dec
cmpsl
jo
pop
or
aad
dec
pop
mov
in
mov
pop
sbb
movaps
mov
push
std
xchg
push
pop
cmp
mov
repz
lret
and
cmpsl
pop
test
pop
insb
test
mov
lahf
and
test
test
cwtl
clc
lods
scas
push
aaa
mov
mov
dec
rolb
insl
int3
fildll
jne
test
lock
add
xlat
xor
mov
jae
jg
loopne
fidivs
cmp
cltd
xlat
andb
jl
iret
cmp
js
das
jbe
pop
inc
lods
or
mov
fiaddl
out
pop
jge
cmp
jne
pop
insl
mov
subb
mov
repz
scas
pop
mov
jle
sbb
enter
mov
mov
leave
pop
xchg
sbb
pop
pop
mov
add
ds
adc
repnz
pop
mov
lret
dec
xchg
lods
xor
inc
jae
mov
cmpsl
dec
addl
ret
popa
lods
xchg
jg
cmp
clc
fstps
xchg
loop
int
shrb
int3
jno
cli
bswap
push
stos
enter
dec
outsl
xchg
std
ja
pop
cwtl
sbb
jnp
and
pop
mov
sti
mov
nop
dec
sbb
cmp
inc
iret
xor
mov
jb
mov
insl
or
sti
fiaddl
movsb
xor
and
and
inc
fldenv
pusha
stos
push
push
jne
pop
cmc
in
and
add
cmc
push
mov
inc
pop
insb
mov
xchg
push
enter
popf
cld
xor
or
adc
mov
xor
push
dec
xchg
jne
jg
imul
pop
add
andb
sbb
adc
pop
out
jge
bound
aam
xchg
cmp
jae
in
dec
stos
aaa
adc
lret
push
les
adcl
test
mov
pop
fsubl
inc
mov
cmp
xchg
xor
push
nop
dec
lret
stos
mov
cmp
test
push
repz
and
pusha
jle
cmp
mov
cmp
push
je
xor
scas
jne
jge
push
shll
mov
dec
xlat
out
mull
cmpsl
cltd
inc
add
pop
pusha
rcrb
mov
mov
fwait
pop
shl
clc
mov
xchg
mov
xchg
or
pop
xor
test
test
add
pusha
sbb
pop
jno
mov
enter
or
in
insl
jae
fcmovne
sub
mov
add
dec
sbb
add
sbb
push
and
out
sub
push
inc
pushf
jne
lret
stos
ja
xchg
rcr
andl
cs
push
in
dec
lret
test
mul
ds
push
jecxz
test
inc
mov
outsl
ss
sbb
ja
or
outsb
jns
into
iret
notb
cmp
mov
pop
fldenv
xchg
push
cmp
popf
jl,pt
js
jae
mov
je
jns
xor
dec
scas
cmp
mov
movsb
ret
mov
and
cld
sbb
mov
call
dec
jmp
jle
scas
fxch
or
fcoml
jne
rcll
aas
lds
vpavgw
inc
fmul
push
and
cmpsl
pop
mul
adc
sub
jns
and
ret
push
pop
mov
fmul
push
mov
dec
gs
or
adc
and
mov
movsl
inc
es
fwait
and
pop
daa
pop
rorb
lcall
and
push
notl
xchg
push
push
scas
in
jnp
sub
scas
mov
or
stos
mov
sub
leave
lds
add
push
lcall
push
jno
fwait
sbb
mov
xor
xchg
adc
cmpb
lret
dec
add
pop
jp
ss
mov
mov
jle
jb
cmp
pop
iret
pushf
jp
cmp
push
mov
adc
push
push
nop
lock
dec
int3
and
fsubrl
mov
jecxz
pop
and
mov
out
add
ficompl
jle
orl
outsl
iret
test
test
lods
lods
or
jp
dec
pop
rcll
jecxz
les
pusha
add
cmp
in
in
cwtl
dec
cli
js
pop
xchg
pop
out
jnp
out
adc
xlat
lret
and
lds
xlat
lret
mov
pop
lret
fstp
add
maxps
jns
cmp
sarl
mov
xchg
xchg
sub
sub
jp
xchg
int3
push
leave
lret
and
push
cmp
mov
in
mov
faddp
fcomps
ja
xchg
dec
loopne
shll
stc
icebp
push
mov
jl
lea
leave
ljmp
jae
pop
mov
inc
jno
bound
aam
sbb
fldl
loope
dec
sbb
into
xchg
dec
int3
sub
jp
mov
enter
cmp
add
cmp
popf
lds
mov
loop
xchg
push
pop
push
notl
int
or
lret
or
loopew
lds
sub
jle
cld
mov
mov
shll
mov
xor
pop
mov
sub
mov
mov
inc
js
aas
dec
xor
mov
test
pop
aaa
xchg
mov
icebp
enter
mov
cwtl
mov
jecxz
pop
aam
icebp
jne
dec
test
and
dec
inc
mov
mov
popa
sbbl
sub
fdivrp
sti
sub
pop
push
cwtl
adc
push
je
stos
sub
fsubrl
xchg
aaa
xchg
loopne
and
jno,pt
fwait
sbb
mov
push
mov
jne
xor
insl
inc
enter
pop
lret
pop
jp
aaa
test
mov
sbb
adc
mov
jp
cmp
sti
push
mov
nop
mov
repnz
jo
add
sub
lret
xchg
mov
popa
add
mov
je
cmp
mov
stc
scas
fwait
adc
mov
outsb
enter
sub
push
ljmp
enter
inc
movsl
lret
lahf
pop
mov
mov
jns
aaa
push
cli
int
cwtl
notl
xchg
mov
sar
in
mov
jnp
lods
or
popf
sub
pushw
jp
cmp
xor
pop
jp
jp
ja
mov
rclb
repnz
jno
inc
cmp
in
xchg
sbb
test
pop
xor
lds
sbb
dec
jg
cmp
out
fldt
clc
push
add
mov
repnz
in
pop
cs
mov
aad
jmp
cltd
and
push
int
pop
fbld
adc
cmp
clc
push
and
jl
jl
jo
mov
dec
inc
sub
call
push
lds
push
pop
dec
sbb
push
arpl
xchg
jns
aaa
xchg
xor
pusha
adc
popf
xor
pop
call
dec
adc
rolb
jb
in
adc
or
mov
pop
fiadds
jns
fwait
pop
push
pop
cld
pop
adc
sbb
or
dec
sub
xchg
and
add
aad
int
pop
jno
jno
imul
je
jle
out
pop
xor
ds
cs
outsb
dec
cwtl
jbe
stos
lods
sahf
push
sahf
ds
dec
cmp
jecxz
jecxz
fidivrs
sub
pop
pop
data16
and
jecxz
ss
lret
outsl
into
jmp
cmp
mov
es
ljmp
pusha
or
lea
enter
jg
leave
mov
push
jae
jno
ss
lods
push
ror
pop
aam
inc
xchg
push
in
leave
adc
push
jp
dec
lcall
lret
lahf
dec
jle
fisubs
push
cmc
push
push
in
cmp
xchg
loop
jae
stos
pop
and
pop
mov
mov
lret
cmp
xor
inc
push
cmpsb
fdivs
rolb
cld
pop
mov
sbb
int
xchg
push
jne
pop
das
icebp
jge
sbb
nop
adc
leave
sub
xor
cmpsb
inc
scas
les
jp
roll
add
pop
mov
ja
sbb
inc
xchg
mov
xorl
adc
jno
jmp
sbb
in
cmpsl
or
int3
clc
in
add
pop
cmp
xchg
lea
je
mov
mov
rcll
mov
imul
test
dec
daa
into
sub
leave
sub
sbb
xchg
inc
dec
cli
rcrl
push
rcrl
filds
push
stos
mov
xor
test
mov
in
dec
push
adc
add
sbb
lds
rcrb
mov
mov
xchg
shll
sub
mov
hlt
jge
lock
mov
movl
cld
ret
and
add
cmp
sbbl
shr
xor
push
lds
stos
push
push
adc
jg
les
sbbl
in
add
aam
pushf
pop
mov
pop
jo
xchg
hlt
mov
push
jg
jb
std
fstl
js
jecxz
mov
iret
aas
rolb
je
jo
test
and
pop
mov
cwtl
notl
ljmp
sbb
sbb
shrb
jbe
push
sub
rorl
popa
shrl
lahf
cwtl
lds
popa
outsb
call
lock
pop
and
push
repz
push
add
sub
push
mov
in
push
lods
xlat
sti
or
sti
cwtl
cmp
movsb
stc
jns
lcall
icebp
sub
xor
fldenv
pop
push
outsb
mov
fs
inc
in
dec
push
ret
and
pop
cli
cmpsb
pushf
sbb
xor
sbb
aaa
fstps
xor
outsl
into
pop
mov
int
bound
adc
adc
jo
iret
notl
jecxz
ret
popaw
jnp
inc
gs
pop
add
movsb
out
cwtl
je
mov
ret
cld
mov
out
call
ljmp
xchg
or
xor
push
or
and
mov
ss
cmp
inc
mov
add
int
outsl
lock
sar
jmp
test
xchg
jmp
adc
fmulp
and
mov
mov
push
pusha
push
jb
stos
adc
xchg
repnz
popf
cmp
pop
and
cmp
aam
call
inc
and
mov
out
rol
jle
cmp
xchg
roll
xor
ja
mov
xchg
push
push
icebp
mov
pop
mov
jmp
in
int3
testl
cmp
xchg
fwait
sub
pop
sbb
dec
fmul
imul
int3
or
into
aad
mov
push
gs
iret
sbb
inc
xchg
mov
mov
loope
cmp
sbb
cwtl
push
adc
adc
int3
mov
call
sub
scas
jecxz
mov
push
stos
lret
add
lods
jge
mov
ds
and
jb
xchg
andb
or
sub
jns
test
iret
das
inc
inc
loope
loopne
outsb
movsb
inc
out
and
in
sub
aam
push
pop
mov
test
stos
push
add
sub
push
mov
in
push
sub
ss
pusha
rcr
es
pop
inc
pop
je
int
mov
xchg
icebp
mov
or
insl
sub
or
clc
movsl
add
fldcw
aas
lahf
outsb
fdivrp
inc
mov
inc
jg
fdivs
sarb
mov
je
mov
in
mov
sbb
adc
gs
adc
lret
add
or
cld
sub
ss
hlt
mov
jle
btrl
in
dec
insl
mov
repnz
sbb
inc
cmpsb
push
std
fcoms
loop
clc
add
xor
movsl
add
popf
jl
cmp
add
sub
push
jne
push
addr16
mov
test
jmp
in
lret
sub
add
mov
shll
cmpsl
jge
std
adc
mov
xchg
push
jne
sub
xchg
jo
das
mov
xchg
xor
fs
inc
inc
xchg
push
dec
rcrb
jl
fnstenv
cmp
cwtl
lock
xchg
dec
push
jb
repnz
push
in
subl
hlt
sub
mov
dec
bound
add
xchg
sbb
popf
cwtl
sbb
jns
dec
xchg
mov
push
ljmp
inc
mov
sbb
dec
and
sub
pop
pop
test
inc
and
fstpt
xor
xor
push
mov
adc
repz
push
push
inc
sub
push
sahf
adc
xor
stc
dec
or
add
data16
jle
popf
std
cmpsl
mov
je
mov
sbb
cs
jp
xor
lret
mov
jecxz
or
add
cli
or
xlat
repnz
mov
pushf
jmp
fdivr
into
faddl
push
rorl
idiv
sub
push
in
push
pop
or
cmp
lds
pop
dec
int3
out
cmp
mov
shlb
cmp
shl
mov
ret
xor
xchg
dec
mov
popf
sbb
out
out
dec
aas
fmull
or
cld
ficoml
dec
bound
pop
pop
inc
sbb
xlat
sti
push
mov
xchg
mov
scas
mov
push
or
adc
lds
js
or
into
gs
sbb
loop
js
adc
xor
xor
popa
mov
dec
in
dec
outsb
bound
cmp
inc
mov
mov
adc
shll
bound
sub
push
fidivl
adc
inc
loope
inc
add
enter
mov
mov
pusha
shr
adc
push
sbb
outsl
mov
in
dec
lods
cmc
into
mov
sub
in
dec
mov
and
push
jnp
xlat
xchg
jns
cmp
and
xchg
mov
jb
xor
test
shr
arpl
sar
inc
loop
dec
sarb
jns
sbb
xchg
push
loope
add
mov
mov
push
lods
xchg
enter
inc
insl
or
inc
imul
and
pusha
cld
mov
cmp
clc
xor
hlt
je
mov
cmc
sub
push
mov
mov
sbb
mov
jo
leave
lret
xor
fstl
add
pop
loope
mov
pop
cmpsl
jb
cmc
testb
add
xchg
jecxz
push
test
cltd
enter
push
mov
iret
loop
pop
fcomip
sbb
pop
mov
add
out
sahf
dec
mov
jmp
inc
xor
lock
mov
xchg
push
addl
or
or
add
pop
mov
aas
inc
je
cld
jg
dec
pop
push
adc
push
cmp
test
xor
sub
lods
sbb
xchg
es
inc
and
rcrb
adc
or
pop
scas
adc
dec
aaa
adc
repnz
mov
mov
lea
imul
push
icebp
lds
sbb
ss
push
jge
fnstsw
cwtl
notl
pop
test
insl
mov
inc
shll
in
popa
jge
imul
sub
push
pop
jecxz
jmp
push
add
mov
ds
aas
mov
jp
clc
push
sbb
mov
into
sub
scas
pop
lods
push
insl
dec
or
lret
dec
lret
add
mov
loope
pop
lret
cmp
pop
mov
sbb
pop
shlb
xchg
dec
pushf
arpl
cmp
pop
shrb
in
mov
movl
push
add
clc
pushf
sti
pop
sbb
in
cli
xor
je
mov
into
sub
ljmp
adc
adc
ret
insb
and
dec
sub
pushf
cld
pop
and
mov
mov
outsl
xchg
aas
push
in
dec
stos
add
sbb
push
fisubl
and
pusha
lods
lods
mov
sahf
repz
out
lock
or
inc
lahf
cld
pop
dec
push
xor
repnz
cwtl
lcall
insl
ljmp
and
aam
or
jle
es
cmpb
test
lcall
cltd
ss
xor
outsl
mov
mov
fmull
and
sbb
adc
jl
sbb
data16
pop
push
pop
push
push
cs
js
xchg
lock
adc
pushf
xlat
jns
sub
test
dec
hlt
and
pop
sti
test
test
pop
nop
fnstcw
jmp
inc
mov
mov
sti
scas
mov
inc
js
jmp
outsb
jmp
mov
cmpsl
dec
mov
repnz
cmpsl
adc
pop
fsubp
clc
movsb
aaa
test
adc
fcom
mov
clc
pop
test
sbb
in
lret
or
inc
out
or
aaa
imul
inc
insb
mov
jne
cli
cmp
shll
iret
mov
mov
and
xor
pushf
push
fisubrs
call
inc
mov
mov
arpl
out
jmp
fcomps
jo
mov
jmp
push
shrl
xor
lcall
push
inc
push
gs
push
sbb
nop
or
push
mov
shr
popf
jne
pop
cmc
cwtl
mov
lods
or
inc
sbb
les
sbbb
push
jge
addl
arpl
lea
push
mov
pop
push
jge
mov
push
fdivr
fsts
dec
xchg
shlb
in
dec
and
and
mov
fisubs
fdivs
xchg
lods
lods
orl
mov
fnstcw
leave
sub
add
leave
lock
cmp
cmpsl
add
xchg
fdivs
inc
gs
push
push
hlt
adc
mov
insb
xchg
stos
imull
sub
jecxz
test
add
add
mov
sarl
cli
fdivrs
xchg
in
fs
pop
cld
ja
push
mov
outsb
inc
adc
insl
int3
xor
mov
ret
test
aad
mov
cmp
bound
jp
mov
lahf
mov
mov
cli
mul
sub
call
xor
cli
sbbl
push
and
mov
fnstcw
and
jge
push
cltd
xlat
shll
cs
outsb
xor
xchg
ljmp
jecxz
out
sbb
xlat
pop
jmp
in
sarb
xchg
cs
je
hlt
inc
xchg
adc
arpl
mov
dec
xorb
popf
outsl
shll
add
inc
mov
sarl
pop
dec
sahf
fnstcw
insb
push
sbb
xchg
repnz
push
lods
sbb
lea
imul
mov
dec
cmp
lds
add
sbb
jg
adc
inc
cmp
das
frstor
cwtl
inc
notb
sub
push
daa
jmp
xor
mov
hlt
push
adcb
pop
mov
add
enter
es
scas
insl
mov
leave
and
dec
or
pop
mov
bound
inc
movsb
loopne
xor
enter
sub
mov
icebp
call
xor
sub
xchg
cmc
xor
xorb
dec
aad
mov
in
dec
das
stos
mov
pop
add
inc
out
lahf
or
lahf
pop
jecxz
nop
cmp
pop
and
mov
adc
mov
push
cmpsl
rorl
or
pushf
shlb
cld
dec
xor
pushw
mov
test
dec
xchg
mov
jle
cwtl
loop
pop
or
dec
pop
adcb
xchg
lret
scas
jno
push
add
push
js
lsl
pushf
inc
clc
pop
cmp
inc
add
jl
out
xchg
cmp
cmp
jb
loopne
push
in
es
das
jo
mov
dec
mov
push
cmp
testl
mov
jo
mov
cmp
mov
pop
pop
dec
dec
in
insl
inc
inc
cmpsl
push
mov
inc
cmpsl
subb
or
jecxz
or
sbb
sti
pop
aas
push
and
dec
js
push
mov
call
push
mov
lods
mov
rorb
cmp
int
sub
xchg
jmp
cs
popa
push
aaa
cmp
fdivrs
xchg
loope
xchg
adc
ror
sub
cs
dec
je
dec
lret
cmpsl
in
and
cmpsb
cmp
pushf
cmp
fiaddl
stc
jp
lods
xchg
xor
insl
pop
xchg
mov
adc
push
mov
out
cmpsb
mov
movsb
and
add
jg
fstpt
fdivrs
sbb
shll
xchg
das
inc
pop
cmc
xlat
into
lea
cmc
nop
jp
ljmp
clc
daa
cmpsl
iret
jp
sub
cmp
loope
pop
lods
push
pop
sbb
mov
mov
outsl
mov
loopne
push
and
cmp
pop
ja
movl
and
inc
cmp
lds
ret
and
fnstenv
xchg
and
adc
popf
lret
push
mov
sbb
jnp
fwait
mov
xor
mov
jo
jno
test
clc
xchg
add
inc
lods
fistpl
push
dec
mov
jne
fistpll
mov
sub
insl
dec
lods
xor
adc
dec
sub
add
iret
pop
and
mov
xchg
mov
mov
xor
outsl
and
ds
in
xchg
repnz
xor
lock
dec
jp
or
dec
lret
insl
mov
pop
mov
inc
cmp
mov
cld
mov
in
xchg
inc
pop
std
insl
int3
xor
fcomip
scas
sub
mov
nop
rcrb
xor
cmp
add
mov
fnstcw
xchg
int3
int
mov
repnz
pop
mov
into
cs
out
xchg
and
dec
sub
cs
pop
movsb
and
lret
aas
push
jge
gs
pop
mov
pusha
mov
adc
add
fwait
push
ret
outsb
jp
mov
dec
mov
xor
es
bound
sahf
ret
pop
pushf
sti
pop
mov
fsubl
sbb
pop
adc
ss
cmp
push
in
dec
fidivrl
adc
fisubrs
adc
loop
jo
stos
push
cmp
fnstsw
sub
jns
cmp
mov
lret
aam
aad
push
out
xor
sbb
fcoms
or
scas
call
test
inc
sbb
test
inc
jecxz
jp
pop
sahf
ss
inc
rcl
push
int3
mulb
lret
sub
in
es
dec
shll
pop
push
pushf
jae
insb
jl
and
call
arpl
adc
mov
addr16
nop
adc
xor
or
xchg
pushf
ficompl
adc
mov
push
mov
rcrb
pop
mov
adc
sbb
inc
xlat
adc
push
stc
insl
sub
mov
es
rorl
and
inc
push
ljmp
cmp
aam
int
pop
notl
ja
xchg
push
popa
pop
cmc
push
or
shll
jb
int3
data16
dec
es
or
xchg
cmp
fwait
notl
mov
or
adc
mov
int
rcrb
sub
xchg
push
mov
adc
shlb
jb
popf
std
pop
push
cmp
sub
out
mov
dec
sub
xchg
adc
sbb
stc
pusha
mov
add
dec
jl
cmp
mov
dec
daa
xor
xchg
jns
adc
cmc
sub
cmp
in
dec
add
or
loopne
sub
xlat
and
sti
push
adc
mov
ds
addr16
mov
cmpb
in
jae
xchg
cmc
enter
outsb
sbb
cmp
scas
int
dec
lock
jmp
or
data16
imul
cmp
sar
jg
xor
mov
mov
xor
mov
sub
push
sub
mov
iret
cmp
mov
xchg
fnstsw
fdivrp
sbb
in
sbb
je
xor
push
jmp
jp
push
jle
dec
lret
out
sbb
dec
daa
jl
jle
lret
fidivrs
xchg
mov
clc
pop
cld
ja
dec
mov
sub
adc
insl
int3
push
mov
mov
in
mov
and
cmp
sbb
cmp
pusha
je
push
xchg
repnz
enter
cs
adc
je
enter
pop
in
dec
gs
push
mov
imul
test
in
pop
inc
fdivrl
adc
roll
xor
into
push
cmc
jno
or
add
jge
or
cld
mov
out
adc
int
pop
mov
mov
adc
mov
je
pop
xlat
xchg
shll
xor
dec
stos
mov
sub
repz
stos
push
cmp
mov
pushf
sti
pop
push
cmp
pop
mov
add
aas
xchg
push
dec
mov
jns
sub
mov
xchg
fmull
dec
mov
mov
inc
lock
inc
std
pop
mov
jl
sbb
xchg
adc
repnz
or
arpl
mov
jecxz
mov
mov
pop
xlat
pop
sbb
daa
add
xlat
jge
xlat
sub
adcb
lock
or
sti
in
ss
pop
cli
mov
and
cmpsb
fwait
inc
repnz
fidivrs
decb
aad
xchg
xchg
xchg
outsl
and
pop
stc
sahf
push
mov
sbb
and
jnp
jle
mov
mov
pop
pop
cs
mov
or
mov
lds
xor
lret
cmpsb
and
les
and
scas
inc
inc
jae
mov
push
jge
idivl
sbb
mov
xor
scas
sbb
mov
leave
lret
fsubrp
call
pop
out
addl
fidivrs
jmp
sbb
xor
cmc
dec
lea
lea
adc
sub
sub
repz
or
test
rol
sbb
mov
dec
roll
ljmp
shrb
popa
insb
cwtl
sbb
ss
mov
cmpsl
pop
insl
and
and
cmp
icebp
sahf
mov
xor
rorl
lock
cmp
cltd
imul
push
call
xor
iret
sahf
jns
xchg
inc
fcomp
push
pop
push
add
cwtl
adc
in
dec
push
mov
adc
ds
shlb
push
test
cmpsl
add
ja
jo
mov
pop
push
pop
ja
cmpsl
push
pop
cwtl
xchg
orl
adc
pop
rclb
dec
dec
and
add
shl
test
fistps
cmp
ja
push
mov
lds
and
mov
sub
pop
rcll
int
ss
mov
and
pop
and
arpl
lcall
mov
jmp
icebp
iret
cmp
cmp
das
int
lret
call
les
cmp
mov
add
mov
mov
fstpl
fstpt
sub
adc
sbb
push
insl
int
hlt
pop
xchg
rorb
imul
fcoml
enter
fstps
sbb
aaa
xchg
mulb
ficomps
push
xor
jo
sub
or
movsb
add
or
add
push
jle
aam
add
sbb
adc
repnz
adc
lret
shrb
scas
les
push
pop
bswap
stos
call
pushf
cld
sbb
mov
push
add
cmp
xchg
repnz
and
jb
and
dec
out
lcall
mov
lds
pusha
rcrb
sub
fistps
push
push
cmp
xor
xor
mov
or
inc
dec
dec
inc
cmpsl
push
add
and
jecxz
dec
test
mov
cmp
scas
pop
jns
repnz
sbb
or
xor
into
int
xchg
push
dec
stos
cmc
pop
cld
test
daa
test
inc
sbb
repnz
fcmovb
pop
fldcw
sbb
loope
jo
push
push
inc
push
cld
iret
mov
dec
sub
lds
aad
fistps
pop
rcr
push
cltd
adc
ljmp
call
iret
das
aam
xchg
out
push
outsl
out
sbb
dec
dec
inc
js
clc
add
int
xor
push
jg
ds
add
js
mov
lret
inc
repnz
mov
sub
int3
std
lret
or
addr16
inc
xchg
cmpsb
cmpsl
dec
addb
daa
cmpb
fistpll
sbb
mov
cmp
mov
lcall
out
scas
das
jbe
xor
lods
or
in
popl
and
mov
std
fnstsw
sbb
sbb
inc
fmull
rorl
jb
mov
int
sub
adc
adc
arpl
in
add
aas
push
lahf
andb
dec
movsl
mov
sbb
popa
xchg
je
jmp
xchg
repnz
js
mov
or
lods
call
xchg
inc
mov
sti
pop
mov
sbb
lcall
pushf
jl
inc
jb
jp
cli
lea
sahf
in
out
call
lods
add
pusha
call
pushf
mov
pop
mov
adc
push
aam
cmpsl
xchg
shll
mov
scas
enter
rorb
jmp
lods
add
or
movsb
and
cltd
jns
scas
sbb
stos
and
jne
pop
aad
dec
cs
in
jmp
xchg
push
int
daa
push
gs
and
inc
mov
jge
sbbl
icebp
cld
xchg
notb
mov
xorl
mov
cmp
jmp
stos
or
stos
dec
arpl
xchg
movsb
add
inc
test
add
jecxz
push
xchg
sbb
sti
sbb
add
icebp
fwait
jl
push
pop
xor
jo
iret
out
aad
adc
imul
popa
les
xchg
and
push
ret
and
add
cmp
ss
fidivrs
call
ss
das
mov
adc
scas
dec
sub
mov
sub
popa
cmpl
out
in
lods
mov
lock
sbb
cwtl
xlat
jb
insb
lret
sub
sub
jb
push
cs
gs
jle
daa
movsb
mov
push
ret
pop
xor
cwtl
aam
stos
xchg
repnz
lahf
call
xor
jo
out
lods
popa
lret
mov
je
call
inc
mov
and
movsl
rcrl
js
pop
cld
outsl
pop
ficompl
mov
ss
sub
xor
es
cld
jmp
out
fs
outsb
movsl
arpl
ret
out
pop
jg
lahf
popl
cmp
cmpl
pop
push
mov
xchg
mov
scas
push
push
ret
or
shlb
add
test
sahf
cmpsl
add
sbb
pop
add
push
sbb
sbb
je
xor
push
mov
lock
call
pop
int
call
or
movl
pop
jge
test
notl
loope
shlb
aam
cmc
push
lea
cmc
mov
mov
out
int3
xchg
pop
stc
pop
xchg
cs
and
inc
loope
dec
sbb
pop
mov
inc
mov
aam
and
push
mov
cmp
pop
or
das
stos
mov
pop
jns
lds
leave
push
or
lret
add
pop
mov
pop
loope
pop
push
xor
pop
insl
fsincos
pop
dec
int
dec
xor
es
mov
fisttpl
xchg
loopne
lahf
xor
pop
rcrb
mov
dec
push
mov
aas
dec
outsb
pop
icebp
push
repnz
in
adc
outsl
sub
sub
call
cmp
hlt
fnstsw
popa
stos
sbb
ja
cli
jp
rcl
xor
cmc
jne
das
lret
mov
ljmp
out
dec
and
call
test
cld
lret
pop
stc
jns
cmp
sti
sub
cmp
test
xor
mov
or
pop
push
and
incb
cmp
ss
addl
jg
sbb
push
sbb
sub
cs
out
jle
daa
push
gs
lods
inc
scas
insb
dec
push
or
pop
pop
test
daa
rcr
push
out
sbb
pop
repnz
mov
outsb
sbb
inc
leave
pusha
mov
int3
and
movsb
dec
xor
orl
sarb
fdivs
push
icebp
pop
cmp
cmpsl
mov
das
adc
js
mov
lods
xor
gs
je
jmp
movsb
test
inc
mov
add
push
lahf
sbb
insl
cmp
loopne
xor
or
mov
mov
dec
lods
lahf
outsb
lret
test
pop
gs
ss
inc
jbe
lods
mov
popf
std
cmpsl
pop
mov
lea
push
jne
aad
adc
adc
lock
leave
cld
add
or
mov
mov
sbb
xor
fnstenv
inc
mov
push
cmp
mov
xor
icebp
adc
dec
push
aam
adc
in
cmpsb
cmp
or
stos
and
mov
mov
pop
shll
ret
fidivs
cmp
retw
cmp
rorb
mov
sub
addr16
stos
int3
lret
fidivl
inc
aaa
cmpb
aas
pop
push
pop
mov
pop
mov
rcrl
aad
loopne
xchg
repnz
adc
js
jg
shld
mov
inc
mov
pop
test
jns
sbb
roll
hlt
xchg
sub
xchg
icebp
call
cs
inc
jecxz
in
dec
ljmp
sbb
int
cmp
clc
popa
mov
jo
fdiv
and
lret
shl
cld
repnz
pop
cmpsl
mov
xchg
sbb
mov
fs
ljmp
scas
and
add
shll
sbb
sbb
mov
int3
mov
mov
push
test
push
sub
mov
ret
out
cli
xchg
aam
add
sbb
jle
push
pop
stc
xchg
or
pop
push
inc
and
push
mov
in
mov
or
dec
call
xchg
jnp
mov
or
cli
mov
pop
fcomip
mov
mov
push
repz
mov
mov
push
sub
mov
in
leave
lret
and
push
sub
and
push
mov
orl
fcomp
cld
lds
push
adc
lods
push
push
cs
dec
push
and
sub
and
loop
sub
int
rorl
inc
inc
and
add
jno
push
xor
lcall
lods
cwtl
xchg
call
ret
std
jb
inc
pusha
adc
pop
out
jb
popa
inc
xor
cmp
dec
mov
mov
xchg
xchg
in
add
jb
sub
ja
mov
lret
mov
sbb
je
fnstcw
jbe
push
lock
adc
or
dec
daa
inc
mov
sub
icebp
clc
push
loop
add
imulb
cmp
stc
sub
repnz
cs
imul
dec
mov
sub
dec
mov
inc
stc
xchg
ret
daa
add
inc
dec
add
jge
mov
jbe
lret
jae
je
test
dec
divb
sbb
dec
pusha
jecxz
or
testl
in
call
add
xchg
jmp
mov
push
sbb
pop
orb
xchg
mov
into
lea
dec
int3
aam
add
xchg
movsb
add
test
add
jl
mov
xchg
mov
mov
cld
jmp
out
push
jb
std
xchg
repz
lods
jbe
nop
jmp
enter
test
fsubp
inc
mov
pop
fiadds
shll
sbb
push
pop
cmp
jbe
sub
scas
shlb
out
popa
andl
jecxz
bound
and
xor
pop
js
frstor
jp
lods
cwtl
notl
dec
std
aas
adc
jo
int
outsl
dec
lods
or
int
mov
jecxz
cmp
lds
aad
out
fistps
pop
sbb
adc
ljmp
repnz
mov
jae
das
mov
pop
or
adc
and
add
pop
mov
nop
movsb
ljmp
dec
mov
pop
dec
dec
or
xor
dec
jmp
test
out
inc
jle
mov
sbb
popa
shll
and
popf
std
pop
mov
ja
aam
insb
jl
enter
sub
out
lret
call
inc
sub
loop
push
sbbb
or
rclb
cmp
jns
add
shrl
pop
dec
sbb
lock
push
nop
pop
lret
int
xchg
loopne
mov
add
pop
sti
inc
push
dec
pop
pop
adc
cld
mov
adc
imul
paddq
add
scas
mov
add
jecxz
aas
jecxz
mov
jnp
fadds
loop
inc
addr16
pop
push
popf
push
mov
cmp
jp
fldl2t
pop
insl
in
adc
or
loop
in
sub
mov
and
fsubs
clc
pushf
clc
cli
jo
mov
sbb
mull
loopne
or
or
and
in
iret
jp
lds
cmp
inc
jp
cmp
cs
aas
cwtl
clc
xchg
pop
out
mov
cwtl
aad
shlb
sbb
dec
leave
enter
inc
lds
add
jecxz
xchg
add
repz
pop
popf
cld
scas
push
cmpsb
and
push
pop
xor
shlb
dec
orl
mov
or
or
test
rcrl
test
xor
sub
xchg
push
mov
xchg
mov
sub
sahf
mov
lods
lret
fs
outsb
or
add
inc
clc
leave
cs
push
fistpll
push
and
jp
jp
hlt
shll
fidivrs
into
cs
cli
xchg
stos
pop
das
insl
in
out
repz
dec
add
cmp
sar
and
pop
inc
pop
in
mov
call
jp
mov
pop
jle
adc
jns
shll
sub
or
cmpsb
test
outsl
sbb
jl
add
push
pushf
jb
push
sbb
mov
mov
or
repz
fwait
not
xor
lret
xor
adc
cmpsl
lods
in
and
cmp
mov
sbb
lahf
xchg
xchg
sarb
xlat
ss
sub
xor
mov
sbb
jbe
mov
jg
cld
mov
ret
les
cld
js
jae
mov
cmp
mov
leave
sub
in
and
loop
sub
inc
and
push
jge
lds
push
pop
cltd
adc
pop
mov
adc
ljmp
clc
or
inc
xchg
dec
shlb
cmpsl
dec
mov
arpl
mov
jge
scas
mov
jae
mov
sbb
dec
push
jl
pop
sub
adc
xor
fwait
insl
jmp
xor
mov
jle
mov
pop
fisttps
xchg
xor
mov
or
loop
rclb
lcall
out
mov
push
add
lds
mov
dec
rol
dec
in
add
jge
fldenv
out
mov
jae
lock
cmc
xchg
sub
jae
shlb
es
cmp
adc
inc
push
outsb
loopne
xchg
mov
popa
je
mov
jge
fnstcw
stos
mov
ljmp
int3
lods
filds
or
data16
jne
mov
insl
ret
fisubrs
sbb
mov
add
or
outsl
jle
iret
add
sub
aam
sub
mov
xchg
stc
movsb
aaa
sub
inc
mov
and
pop
mov
cmpsb
lret
xchg
fisttps
jno
adc
aas
loope
cmp
test
cmpsl
fildl
or
lcall
and
sbb
ja
out
in
push
jne
mov
pop
push
test
ja
mov
or
daa
inc
cmpsb
inc
test
hlt
and
loop
in
pusha
rcrb
pushf
xor
xlat
into
das
dec
div
std
lret
mov
inc
repnz
lock
mov
aam
rclb
incl
js
aaa
mov
sub
cmp
fldcw
sarl
or
shll
xchg
mov
bound
xor
fistpll
fisttpl
mov
jne
mov
nop
popf
push
in
bound
jp
add
jb
or
jb
sbb
pop
mov
das
int3
adc
dec
insl
arpl
mov
fldt
and
cmp
lret
fstp
mov
jl
mov
cmp
or
push
push
mov
shll
fidivl
inc
rorb
call
enter
and
add
loope
xor
jp
ja
fimuls
ja
aam
adc
cs
add
lds
mov
jecxz
movsl
popa
out
fidivrs
cld
arpl
rorb
shl
push
daa
adc
mov
sub
outsb
dec
rcrb
push
add
mov
ret
rcrb
dec
mov
jecxz
int
xor
push
jne
imul
mov
mov
shld
mov
test
cmp
add
push
add
inc
cmpsl
mov
sbb
and
jg
call
in
mov
sub
mov
mov
and
pop
test
test
cmp
sbb
mov
adc
jb
mov
mov
insb
lret
push
mov
lods
or
lret
mov
sub
inc
inc
in
movb
jns
cmc
fwait
outsb
test
ljmp
in
in
es
mov
incl
push
gs
jp
xor
repnz
dec
les
cmp
sbb
add
outsb
popa
stos
mov
inc
sarb
insl
cmp
sbb
or
fs
push
pop
adc
inc
fisttps
add
mov
inc
notb
mov
sbb
mov
test
or
into
rcll
les
sbbl
clc
nop
jbe
mov
pop
mov
cld
ljmp
xchg
xor
jg
cwtl
xchg
orl
sub
inc
and
rolb
mov
test
mov
ds
jns
xchg
pop
pop
adc
push
jnp
jb
jb
popa
lret
sub
push
sub
cmpsl
fidivs
lret
and
dec
add
pop
pop
std
mov
lock
xchg
pop
cli
jne
add
cs
add
loop
push
pop
sub
lods
orl
jg
bound
mov
arpl
cltd
and
push
mov
pop
fcoml
jno
mov
outsb
or
inc
aad
gs
fs
out
movsl
ret
cmpsb
sbb
fstps
push
pop
in
pop
pop
cld
pop
aaa
test
rcll
push
jne
repnz
test
dec
jmp
cs
stos
repnz
adc
mov
inc
mov
mov
dec
xchg
mov
popf
xor
das
lcall
mov
or
repnz
neg
mov
dec
add
les
pusha
mov
and
sub
loopne
cmp
pop
movsb
mov
mov
pushw
sub
adc
jecxz
adc
ret
test
decb
and
popf
inc
cmp
ffreep
jmp
mov
aad
mov
in
cmp
add
iret
dec
repnz
es
push
cmp
rcrb
shlb
mov
andb
inc
lods
xchg
icebp
cld
inc
sub
pop
mov
outsb
jae
mov
es
or
out
fs
mov
mov
mov
imul
push
mov
cmp
mov
sbb
jp
out
jne
sti
or
loop
mov
movsl
fbld
sbb
and
sbb
cwtl
lret
push
ss
jne
jne
out
into
cs
cmp
inc
daa
in
dec
ljmp
mov
fxam
xchg
addr16
loope
repz
cld
xchg
lods
jg
xchg
mov
jae
shlb
loope
insb
lret
push
ficoml
js
das
xchg
sub
test
pusha
adc
jle
jp
ret
sbb
jns
std
mov
fsubl
cli
dec
jae
nop
xchg
lods
lods
test
adc
pop
push
adc
sub
dec
or
push
jge
mov
push
fidivrs
xchg
imulb
fisubrs
push
adc
push
mov
dec
int
xchg
pop
dec
stos
cmc
sub
adc
ret
loopne
lahf
ret
loopne
push
and
mov
adc
mov
pop
push
adc
push
mov
sarw
les
int3
jp
into
add
movsb
jmp
mov
sbb
lods
xor
push
push
lret
aam
fidivs
cld
jne
and
add
sub
popf
lcall
iret
dec
add
push
std
jo
mov
flds
dec
out
repnz
dec
in
insb
lret
mov
mov
push
jle
movb
sub
mov
pop
cli
mov
clc
push
pop
ljmp
lret
cmp
pop
xchg
jb
and
fwait
call
xlat
and
add
cmp
sti
cwtl
mov
out
lcall
pusha
xor
adc
push
fwait
or
test
out
movsl
lret
fwait
pop
test
cmp
out
pop
inc
shll
xchg
hlt
aam
xchg
jno
sub
or
inc
cmpsb
add
lds
mov
inc
mov
jecxz
inc
jge
pop
std
mov
notb
push
push
inc
cwtl
push
mov
mov
inc
or
iret
stc
lds
mov
dec
cmpsl
lods
cmpsl
mov
out
loopne
push
cmp
jns
cmp
dec
push
rorb
shll
pop
mov
adc
lock
fisubrl
or
imul
lea
rol
jle
jbe
push
push
dec
nop
mov
push
je
jle
mov
mov
outsl
cmp
or
push
inc
stc
xor
and
and
pop
mov
sbb
test
notb
into
jae
xor
or
xchg
fcoml
iret
cli
push
xor
mov
fwait
arpl
lods
call
pusha
popa
sbb
rolb
jns
cs
rcr
cmp
xorl
repnz
pop
rclb
int3
lods
or
les
push
movsl
inc
mov
push
test
jne
sbb
ret
xor
push
add
and
cwtl
xchg
mov
std
mov
scas
stos
imul
jecxz
xchg
ljmp
sbb
pusha
loope
pop
test
sbb
jo
cmp
mov
ljmp
shll
dec
sub
in
mov
aas
nop
cwtl
mov
add
jnp
fnstcw
jecxz
inc
push
cwtl
clc
ret
clc
mov
push
inc
push
iret
jmp
in
or
and
lods
lods
stos
mov
pop
or
aam
or
cmp
scas
cli
out
mov
jecxz
mov
cwtl
testl
jns
xchg
push
shl
dec
scas
int
int3
imul
dec
jo
xchg
inc
movsb
add
or
mov
inc
aas
inc
mov
movsb
scas
hlt
lock
adc
sub
or
repnz
cmp
push
or
jge
and
mov
pop
mov
mov
and
hlt
mov
xor
outsl
into
out
xor
orl
sub
test
adc
das
std
or
mov
les
pop
mov
shrl
lock
lret
push
adc
inc
insb
lret
sub
lret
jne
mov
movb
inc
faddp
fimuls
cmp
cmp
cwtl
stos
rcll
inc
jne
pop
mov
push
jo
das
or
add
arpl
push
adc
lcall
ficomps
or
stc
js
hlt
fs
mov
mov
mov
sub
inc
enter
cmpsb
data16
flds
ret
popf
cmp
fistl
mov
je
clc
xchg
rcl
dec
cmpsl
mov
iret
xchg
fwait
lock
push
push
mov
out
scas
dec
lds
subl
out
pusha
mov
dec
std
sbb
sbb
jae
hlt
je
push
fistpll
sub
jo
dec
pop
xor
push
jecxz
gs
and
in
cwtl
mov
mov
ljmp
xchg
imull
lret
aam
fists
jne
out
scas
push
enter
leave
sub
stos
stc
and
inc
pop
push
pusha
rcrb
adc
mov
pushf
cmpsl
and
jb
cmp
repnz
sbb
adc
adc
cli
jb
push
lods
or
jmp
andb
mov
lds
hlt
pushf
sti
pop
ljmp
js
xchg
lcall
sbb
add
sub
lret
cltd
jp
xchg
ljmp
pop
stos
hlt
push
push
push
mov
fs
cltd
or
aam
addr16
movups
outsb
sub
cs
push
inc
dec
cmpsl
bound
mov
jle
xchg
pushf
sti
pop
adc
lcall
inc
cwtl
popa
fsts
sub
push
or
sbb
fadd
ds
lret
and
inc
arpl
rcr
fisubs
sbb
push
iret
inc
xchg
fnstcw
in
ja
lcall
xor
iret
push
and
insl
int3
dec
int
movsb
or
sarb
jle
mov
cld
pop
pop
push
lret
sbb
sbb
add
fcom
ja
push
xor
repz
jmp
in
dec
lods
adc
dec
sub
addr16
inc
mov
add
aas
sub
mov
pusha
jnp
adc
rcrl
leave
push
mov
into
jmp
insl
int3
sub
mov
sub
push
inc
movsb
roll
adc
mov
cltd
xchg
cld
pop
add
cmp
push
dec
icebp
push
mov
push
arpl
jo
sub
adc
cwtl
mov
call
shl
inc
mov
int
cmp
insl
jns
sbb
ds
mov
shll
fimuls
mov
repnz
jo
jp
push
cwtl
adc
cmpsb
push
sub
jnp
loop
in
push
std
nop
xor
add
and
adc
sbb
repz
mov
xor
int3
lea
mov
rol
lret
sub
sub
repz
fs
push
cmp
add
sbb
mov
shll
push
fs
lea
add
jmp
cmpsl
push
mov
loop
sub
loopne
add
mov
jbe
aaa
mov
pop
call
dec
jae
xor
push
dec
repnz
sahf
jg
mov
scas
sub
scas
in
sti
data16
jb
test
loope
add
or
sub
cmp
sub
sti
push
cmp
sbb
out
imul
xor
jmp
ficoms
mov
jbe
mov
pop
inc
mov
popf
aaa
mov
and
or
push
enter
dec
nop
mov
pop
jae
int3
mov
loopne
jp
inc
test
mov
mov
test
pop
mov
gs
or
popf
dec
loop
mov
shrb
shl
push
sti
cmpsl
pop
mov
cmp
pop
push
ret
shr
cld
sbb
lcall
adc
imul
testb
stos
pop
dec
in
shll
sub
ljmp
pushf
add
rolb
rcrl
mov
aam
push
jae
fstl
or
xor
xchg
sub
jb
orb
adc
andl
dec
jg
cmpl
jle
fs
je
shll
xchg
jne
xor
repz
add
scas
cs
out
inc
cmpsb
in
sub
es
inc
fidivs
cld
xchg
pop
mov
or
mov
hlt
je
mov
je
xor
push
mov
enter
sub
jnp
mov
loop
imul
movsb
mov
pusha
mov
add
sbb
flds
lods
mov
xchg
mov
xor
sub
test
dec
dec
push
add
test
xchg
mov
jo
mov
inc
mov
pop
inc
add
pop
mov
dec
shll
mov
aam
adc
nop
push
loope
rorb
outsl
or
cmpsb
in
or
mov
cmp
xchg
pushf
js
push
push
jmp
fdivrl
leave
repnz
jp
test
out
xchg
xor
jnp
cmp
test
xchg
inc
call
push
xor
loope
xor
cwtl
testl
cmc
mov
xor
mov
into
cmp
push
add
pop
and
loop
cmp
mov
jle
inc
or
cwtl
mov
fcoms
xor
push
push
mov
insb
mull
or
inc
test
add
cld
pop
pop
sbb
pusha
mov
and
dec
cltd
pushf
dec
andb
sub
mov
je
lods
aad
test
mov
test
fidivs
mov
fstps
jp
fldt
repnz
pop
lods
lea
dec
lods
loopne
insb
test
inc
push
mov
jge
or
cmp
mov
negb
jne
shll
xchg
dec
push
clc
mov
dec
sub
xor
out
cmpsb
leave
mov
pushf
mov
loop
inc
mov
jecxz
xchg
push
cld
pop
add
xchg
fcoms
adc
sahf
mov
std
leave
iret
cs
arpl
push
call
adc
xchg
pushf
mov
pop
sbb
mov
jecxz
sbb
dec
jne
cld
and
adc
in
sub
das
jmp
ret
iret
cmp
int
popa
rorb
mov
inc
divl
push
mov
mov
pop
aad
in
push
insl
jne
adc
test
std
and
and
cmpsl
fs
cmp
and
add
fidivrl
add
mull
jp
stos
mov
outsl
cs
and
bound
aad
sub
pop
push
gs
pop
shl
mov
jle
mov
push
fnstcw
rorl
hlt
push
call
jge
jo
repz
movsb
mov
mov
jle
cmpsl
daa
mov
dec
movsl
arpl
dec
sbb
fcoml
mov
dec
enter
sub
push
in
into
lea
imul
addl
jne
xor
adc
pop
mov
cwtl
shrb
adc
or
pop
mov
jp
fxch
imul
and
pop
out
add
cmc
mov
jg
daa
jno
pop
sbb
mov
clc
rorb
adc
insb
add
roll
imul
jl
and
pusha
popa
je
xor
cld
pop
push
xchg
imul
aam
xchg
dec
cmp
aas
jb
mov
sbb
mov
out
subl
inc
fwait
inc
pop
lds
movsl
bound
lods
cmp
pop
adc
outsb
xchg
pop
pop
cwtl
dec
outsb
xor
push
xor
mov
mov
jmp
xchg
lret
mov
ja
aas
lahf
cmc
add
jb
jl
mov
cwtl
inc
mov
xchg
rcl
dec
cmpsl
movsl
push
mov
xor
das
nop
add
imul
push
js
test
in
dec
mov
cmp
in
ss
notl
push
xchg
and
adc
mov
sarb
lret
sub
imul
jl
jecxz
jbe
loopne
and
cmpsl
std
cmp
adc
xchg
repnz
pop
inc
sbb
nop
mov
inc
test
lret
sub
es
data16
in
out
inc
add
imul
out
fnstcw
xchg
insl
fisubrs
ljmp
or
jo
add
lods
lods
mov
xor
addr16
jmp
mov
dec
loopne
pop
jb
rcrb
and
push
xchg
ds
sbb
ret
dec
scas
cli
das
in
sbb
test
or
pushf
stos
data16
cmp
xchg
inc
mov
jecxz
or
dec
js
xchg
cwtl
jmp
leave
adc
sahf
mov
push
iret
cs
dec
lods
push
fidivs
enter
cmpsb
rcrl
mov
pop
sbb
mov
jecxz
sbb
jne
cld
addr16
bound
mov
jmp
cmp
xlat
and
mov
rorb
cmpsb
adc
jp
or
sub
xchg
mov
pop
aad
xor
push
insl
jne
jns
test
std
and
adc
das
cmpsl
fs
push
shll
rorl
pop
pop
outsl
gs
fidivrl
add
mull
jp
push
or
jo
das
and
add
aad
enter
loop
out
cmp
fwait
and
push
mov
pop
push
les
sbb
call
pop
es
subb
and
rcrb
adc
pop
pop
scas
adc
fnstcw
fs
xchg
mov
jo
mov
push
mov
sub
vaddpd
ret
rcrl
mov
cld
cmpsl
and
fisubrl
cmp
rcl
dec
sub
mov
jp
scas
and
or
xchg
pop
call
stc
and
insl
lds
xchg
cs
lret
clc
push
add
and
xor
mov
rol
lret
sub
sub
repz
sbb
pop
and
dec
xchg
popf
std
cmpsl
std
mov
into
push
mov
dec
mov
xchg
inc
jo
lcall
mov
lea
pop
jecxz
dec
ret
subb
mov
popf
cld
test
jl
mov
xchg
cmc
and
ds
sbb
sub
das
adc
xor
test
mov
fstp
xor
cmp
add
cmp
pop
insl
repnz
and
add
mov
or
jl
dec
jo
pop
lds
add
sarl
pop
in
dec
mov
cwtl
push
push
lret
aam
fidivs
cld
jne
push
and
imul
popf
lcall
iret
dec
add
call
std
jo
into
jp
test
sbb
push
mov
es
xor
lock
dec
mov
push
jecxz
ret
cmc
and
inc
xchg
add
and
clc
xor
jns
cmp
je
je
cmc
mov
dec
dec
lea
psubsw
jb
stos
andl
stc
pop
cmc
inc
inc
lret
dec
pop
jle
mov
xchg
notb
xchg
pop
rorl
icebp
push
mov
lods
cwtl
lds
mov
ds
stos
jmp
or
out
in
sarl
and
jg
jb
jns
mov
cwtl
ret
sbb
loope
push
and
repnz
cli
in
dec
or
or
jmp
xor
jmp
dec
mov
push
loopne
aam
xor
push
jg
subl
cmpsl
or
adc
push
punpckhdq
imul
pop
pushf
les
test
mov
and
and
popf
in
imul
push
mov
cmc
jg
aam
movsl
xor
dec
int3
and
sti
sub
lret
xchg
cmc
in
imul
cmp
out
std
pop
pop
pop
sbb
pop
sbb
mov
pop
test
inc
jae
shrb
cli
dec
in
sbb
mov
jnp
add
sbb
and
lret
arpl
in
cld
pop
in
mov
cwtl
cwtl
or
data16
push
adc
mov
scas
push
xlat
inc
test
dec
dec
fimuls
cmp
daa
jae
xchg
mov
sbb
jge
pop
mov
jl
cmp
xor
test
jb
inc
inc
jo
ficoml
clc
adc
mov
jns
inc
lds
mov
mov
jecxz
into
mov
pop
test
dec
sbb
jne
jne
ds
scas
pop
iret
das
push
rcrl
ljmp
repnz
xchg
mov
xor
cld
mov
mov
in
sbb
aam
addr16
lods
loopne
push
cwtl
out
lret
mov
in
loop
dec
cmpsl
sarb
test
repz
shrl
mov
mov
mov
mov
cmp
xor
pop
xchg
push
jl
xchg
and
dec
xchg
loopne
inc
sub
jl
pop
cmpsl
push
adc
add
mov
mov
sub
in
pop
add
dec
inc
adc
cmpsb
or
scas
inc
push
push
sub
xlat
or
cmc
in
or
jns
aas
and
jg
mov
dec
fnstcw
loope
dec
sbb
jne
and
push
pop
rclb
cmp
sbb
adc
lds
test
sub
pop
mov
jp
mov
cwtl
mull
cmc
popa
loop
mov
inc
mov
fistpll
or
and
jle
shlb
ds
dec
popf
fwait
aad
clc
push
jg
pop
push
adc
nop
sbb
mov
mov
fidivl
in
out
inc
add
inc
push
stos
popf
std
and
cmp
mov
loope
aam
push
adc
popf
jo
sbb
dec
mov
xchg
or
mov
pop
xchg
shl
inc
lret
xor
rclb
lcall
cmc
sahf
sub
nop
xor
scas
push
pop
dec
js
lea
sti
cld
inc
add
cwtl
ret
add
aas
dec
inc
adc
pop
mov
ja
dec
sub
jne
fists
std
adc
mov
and
xchg
sbb
push
daa
in
enter
add
repz
cld
jge
sbb
jp
inc
mov
xor
pop
scas
out
jo
and
in
dec
testl
mov
pop
das
cltd
dec
add
shlb
and
popa
push
rorb
jp
add
xchg
push
mov
adc
mov
insl
int3
aad
push
push
data16
jo
orl
jg
stos
lahf
daa
mov
outsb
inc
mov
sarb
clc
nop
rclb
cmp
pop
inc
xor
cs
sub
and
call
cmp
jmp
outsl
adc
mov
inc
jae
add
shll
push
mov
rorb
loope
sbb
orb
jp
shl
aas
mov
popf
cmp
fistpl
push
xchg
cwtl
mov
mov
xchg
outsl
or
or
data16
jg
pop
add
daa
in
addr16
lahf
loopne
push
insl
insb
mov
jp
or
rcll
dec
scas
xor
data16
jo
jp
push
cwtl
in
out
cs
ljmp
pop
loopne
mov
jg
jg
dec
xchg
cmp
mov
or
mov
and
bnd
int
lock
fisubrl
or
orl
inc
mov
sbb
and
dec
mov
out
cmp
xor
xchg
mov
jmp
inc
fsubrl
or
jmp
xchg
loope
sarl
loopne
pusha
sahf
jge
cli
and
mov
mov
jae
pop
sub
mov
sbb
push
insb
int
mov
xor
fsubrp
mov
daa
inc
sub
dec
in
jecxz
imul
mov
add
data16
adc
outsb
xchg
dec
cs
jo
call
cmc
call
mov
push
loop
adc
addl
mov
and
cmp
push
adcb
into
imul
or
mov
inc
arpl
adc
stc
mov
mov
pop
cmp
sbb
push
jb
mov
fistpll
and
lret
sub
addr16
pop
mov
xchg
cs
scas
in
loope
jae
push
imul
mov
adc
or
adc
push
sbb
out
jmp
ja
call
lds
jge
or
xchg
mov
sbb
fidivrl
jmp
mov
lods
das
sub
ljmp
cmp
dec
or
dec
sub
inc
cld
pop
jp
push
push
ljmp
pop
mov
inc
stc
lods
insl
in
loopne
stc
imul
pop
push
lds
test
mov
and
jge
xor
cmpsl
push
mov
mov
jg
mov
popf
adc
lock
leave
sub
fsubrs
dec
mov
and
popa
aam
scas
fidivrs
jmp
cmp
and
repnz
cmpsl
push
adc
ficoml
cmp
lret
repz
loope
xchg
jp
push
test
mov
mov
lret
ds
push
mov
pop
loope
push
mov
mov
lahf
clc
mov
cmp
jo
add
dec
cli
lret
stos
addr16
jmp
or
and
push
ficomps
pop
jb
int
cld
pop
jl
and
push
xchg
ds
and
rorb
das
in
sbb
dec
xor
imul
movsl
cmp
xchg
inc
mov
jecxz
mov
cld
pop
add
pusha
push
pop
cwtl
jmp
adc
sahf
mov
ret
cs
push
sub
imul
mov
xchg
imul
popf
push
mov
mov
jecxz
sbb
jne
cld
addr16
nop
adc
in
sub
das
jmp
push
dec
cmpsl
iret
cmp
int
popa
rorb
aad
sbb
or
sub
test
mov
pop
aad
aas
js
insl
jne
popa
jmp
push
pop
adc
das
cmpsl
fs
enter
rcrl
popf
pop
pop
outsl
gs
fidivrl
add
mull
jp
push
mov
mov
iret
std
lods
lods
xlat
sub
aad
sub
push
push
gs
pop
jae
mov
pop
jle
mov
rcr
rorl
je
call
jge
jo
repz
mov
jmp
push
xor
daa
mov
dec
movsl
arpl
mov
xchg
and
sbb
in
mull
js
inc
cmp
ficoml
cmp
insl
in
popa
cmp
or
and
xchg
cmp
cmp
incb
sarb
ss
popa
lret
inc
sbb
jne
sub
push
nop
sbb
or
sahf
adc
dec
mov
iret
and
sub
mov
gs
clc
mov
push
xchg
fdivs
fiaddl
lea
popa
in
imul
lret
mov
and
mov
rcl
or
popf
dec
popf
pop
data16
lahf
ljmp
adc
jo
pop
rorb
jb
cld
inc
push
push
pop
and
and
popf
and
push
xchg
rcll
fists
jl
lock
sbb
pop
mov
or
jmp
loope
jecxz
jmp
xchg
lret
xchg
lcall
adc
rcll
and
cmp
mov
jmp
add
loope
inc
dec
and
sbb
xor
pop
and
hlt
jg
mov
mov
jo
add
lods
and
imull
mov
push
lret
test
inc
imul
mov
dec
std
pop
pop
pop
lcall
push
ds
xchg
bnd
int
lock
fisubrl
or
stos
mov
adc
movsb
and
add
popf
jle
mov
ja
jmp
jecxz
aad
aad
mov
das
mov
and
out
call
jo
out
shll
cmp
mov
inc
mov
mov
out
das
lock
pop
outsb
int
dec
or
dec
mov
mov
push
mov
inc
decb
add
or
sbb
push
cmc
xor
xor
and
sub
mov
dec
rcrb
lret
stos
push
adc
dec
jne
repz
pop
mov
cld
cmpsl
jne
ret
xchg
push
pop
push
push
push
mov
mov
iret
insl
mov
test
or
or
jnp
dec
in
sbbl
pop
jle
cmp
sbb
shrl
adc
adc
inc
push
mov
mov
mull
mov
icebp
mov
dec
jp
xchg
adc
sub
rcll
or
mulb
xor
mov
in
mov
aam
mull
daa
call
mov
and
movsl
sub
jge
hlt
and
lds
jecxz
sbb
xor
inc
xchg
mov
negb
insl
sub
mov
test
adc
out
fstps
cmc
fsubr
pop
jg
jmp
pop
fwait
jae
je
ljmp
vmovss
jo
push
fs
push
out
out
shlb
adc
popl
and
sub
cld
cmp
adc
push
pop
push
pop
dec
insl
xor
mov
xchg
addr16
in
call
add
xchg
pushf
cld
pop
mov
aad
push
ja
loop
clc
repnz
mov
pop
je
in
cmc
nop
cwtl
out
dec
fildll
ds
cmp
inc
inc
or
mov
fidivrs
sbb
outsl
lret
cmp
and
lock
xchg
xor
repz
repz
lods
ja
loope
mov
mov
les
dec
lcall
punpcklbw
loop
and
mov
pop
ficompl
leave
mov
rcl
gs
ds
scas
cli
das
in
sbb
jnp
insb
or
movsb
out
pop
inc
push
fs
ret
popa
mov
lahf
stos
pop
mov
jp
adc
notl
iret
pop
call
or
imul
jo
mov
mov
les
jmp
and
pusha
mov
dec
pop
mov
cld
ss
popa
mov
aam
int3
mulb
mov
ror
mov
daa
inc
jae
andb
inc
jle
cld
pop
mov
and
push
mov
cmp
mov
repnz
dec
mov
jb
jae
out
lea
loop
or
int
xor
andb
mov
cmp
popf
ficoms
cmc
mov
xor
push
insl
mov
inc
jae
insl
out
xchg
push
call
mov
inc
cmpsl
dec
pop
jecxz
and
inc
ret
mov
test
adc
and
negb
xchg
xchg
icebp
push
mov
mov
dec
mov
xchg
xchg
add
jo
or
movsb
adc
add
mov
pop
mov
cmp
fidivrl
adc
lods
sub
out
sbb
int3
dec
aas
add
adc
dec
iret
mov
mov
stos
cld
inc
mov
jge
cli
fldl
or
or
shlb
mov
mov
mov
outsl
sbb
or
iret
das
fnstcw
test
or
or
clc
call
ret
mov
pop
into
mov
fstp
adc
sar
cli
fnstcw
ficompl
mov
push
and
push
cmp
in
adc
test
movb
fisubl
pop
push
je
sub
pusha
lcall
mov
stos
flds
ss
mov
in
dec
ret
pop
cmp
fildll
jg
inc
mov
jnp
cmp
jb
les
notl
sbb
icebp
js
insb
into
sub
ljmp
xchg
inc
roll
mov
mov
inc
mov
or
loopne
jg
xchg
icebp
xchg
push
ja
adc
out
in
push
int
inc
cmpsb
add
aaa
movsl
and
sub
inc
test
jns
push
mov
xor
stc
push
aaa
int
xchg
lods
cmp
or
stos
jg
out
cmc
jno
dec
cmp
loop
out
insb
ret
cmpsl
mov
adc
mov
cwtl
clc
ljmp
sbb
add
jg
push
mov
xchg
loop
and
and
pop
pushf
mov
pop
mov
shl
dec
repz
mov
mov
outsl
iret
jmp
mov
in
mov
adc
rcr
xor
mov
add
flds
fdivs
cs
in
cwtl
jae
mov
outsb
gs
dec
scas
rorl
imul
test
and
cmc
push
jmp
jg
add
fnstenv
xchg
in
inc
sti
aam
xchg
test
fsts
int3
sub
or
aam
and
loope
test
inc
movl
cmp
pop
jns
sbb
cld
div
repnz
mov
mov
in
mov
je
jb
mov
in
call
push
dec
or
mov
inc
cmp
mov
push
mov
mov
lock
mov
insb
scas
iret
movb
pop
and
std
and
push
in
or
clc
push
mov
mov
xchg
inc
cmp
repz
cli
mov
repnz
inc
dec
cmpsl
push
mov
scas
mov
pusha
and
jmp
mov
shll
cmp
outsb
into
pop
movsb
xchg
lret
inc
xor
addr16
xchg
xorb
fidivrs
rolb
add
shlb
mov
sub
xor
jne
dec
add
adc
leave
sub
imul
and
jecxz
pop
in
jne
lret
pop
mov
cld
sub
xchg
lods
add
xor
scas
in
jecxz
cmp
dec
ljmp
mov
add
mov
mov
rcrb
cld
pop
adc
jnp
jle
not
xor
push
jb
push
shl
dec
sub
lret
movsl
lret
sti
inc
inc
mov
and
incl
fnstsw
neg
mov
jo
adc
jmp
mov
iret
cmc
lods
or
mov
add
inc
loop
nop
pop
repz
loop
add
notb
sbb
pop
jno
adc
ss
insl
int3
mov
pushf
lret
test
adc
daa
daa
dec
test
and
sub
jmp
push
and
jns
jle
xlat
adc
fldcw
movsb
outsb
imul
decl
clc
aam
adc
sub
xor
cmpsl
push
cmp
in
cwtl
cmp
add
ret
ljmp
jle
xchg
hlt
mov
mov
jne
loope
out
into
cs
fsubrs
sub
cmpsb
xlat
lods
in
and
out
xor
sub
or
notl
cld
xor
dec
pop
push
popf
lahf
push
rcl
aam
imul
push
movsl
sbb
push
sti
jmp
and
jle
cmp
sbb
pop
add
repnz
mov
adc
or
mov
sub
lds
mov
push
and
sbb
iret
fldt
int
cmp
jo
int
jmp
jno
dec
adc
sbb
pop
out
mov
push
es
test
cmp
negb
cwtl
test
mov
outsl
adc
imul
imul
int
enter
test
mov
std
add
add
pop
mov
sbb
sbb
je
jg
mov
pop
xchg
repnz
iret
outsb
sub
stos
or
xchg
in
nop
rorl
inc
in
dec
clc
iret
lret
add
inc
gs
fistps
push
mov
xchg
xor
push
add
shl
cmp
scas
ss
in
imul
lret
mov
icebp
andb
das
gs
cld
jp
cltd
fcompl
push
loopne
ja
aam
adc
mov
cmp
sub
in
dec
dec
and
lret
test
push
gs
add
inc
in
lods
mov
jle
cmp
mov
popf
popf
and
mov
jns
fistps
icebp
daa
pop
mov
int3
outsb
xor
xchg
out
shr
es
dec
rclb
loopne
mov
or
pop
inc
movsl
mov
sbb
sub
je
push
dec
shll
xchg
dec
lock
mov
lea
xor
add
loop
negl
lods
outsb
jmp
pop
cmpsl
addr16
mov
ja
ljmp
fmulp
sbb
fwait
cs
or
cmp
cmpsb
push
std
mov
pop
inc
pop
mov
test
fnstsw
popf
aas
xchg
shr
push
shrb
xor
sahf
das
adc
adc
in
insb
lret
rolb
xchg
jo,pt
dec
cmpsl
inc
or
add
movsb
ficoms
jp
mov
xchg
negl
xor
outsl
iret
lret
ljmp
lods
or
ja
or
les
cmp
mov
push
mov
shll
js
fucomip
into
sub
adc
xchg
jb
shl
out
sub
sub
and
pop
pop
mov
sbb
xlat
pop
mov
iret
je
push
sbb
orb
cmp
dec
lods
fiadds
jae
mov
cmpsl
cltd
jns
mov
and
ds
mov
dec
mov
sbb
jo
lea
sub
call
fldl2t
jecxz,pn
pop
fwait
xor
ja
inc
popf
mov
fnstenv
xchg
push
mov
sbb
stos
push
lret
sub
imul
imul
dec
mov
rcrl
push
jge
mov
xchg
negl
xor
repnz
xor
outsl
iret
lcall
xor
cmpsl
push
mov
scas
mov
push
sti
pop
jo
and
mov
lcall
mov
mov
fsts
dec
repz
pop
and
push
add
lods
test
sbb
and
cmp
cld
mov
fidivrs
sbb
notl
mov
outsl
mov
mov
leave
cmc
cmp
test
adc
dec
movsb
and
mov
sbb
inc
push
jns
mov
mov
jae
sarl
xadd
cmpsl
mov
jne
mov
sub
lret
pop
loop
sub
xor
jle
aam
dec
fidivrs
loopne
pop
cmp
scas
shll
xchg
mov
and
xchg
or
in
push
mull
leave
insb
adc
sub
jecxz
es
jle
add
jns
ss
and
sbb
push
mov
mov
iret
les
aam
xor
lret
int
es
gs
loope
cmp
inc
sahf
mov
and
popf
sti
pop
ret
pop
cmp
xchg
sbb
rcr
sub
or
sub
lock
repz
xorb
test
and
pop
mov
sbb
inc
push
xchg
fnstsw
cmpb
pop
popf
fildl
xchg
mov
in
mov
mov
test
out
scas
ljmp
mov
hlt
push
cmp
and
jp
mov
rorl
mov
dec
lock
push
xor
lea
push
dec
cmpsb
push
dec
mov
pop
pusha
lods
mov
inc
shlb
cmp
ja
jmp
xchg
jne
pop
iret
sbb
cld
push
mov
insb
mov
adc
dec
or
mov
lret
bound
pop
ret
ds
mov
pushf
shr
fnstenv
sbb
in
dec
dec
bound
sub
fimull
stos
leave
inc
sub
cmp
fnstsw
inc
mov
inc
push
mov
fwait
lock
xchg
icebp
push
mov
fdivp
cs
int
mov
testl
lods
enter
inc
imul
inc
lahf
dec
xchg
inc
push
jns
fldl
cmp
rcrl
sbb
push
test
lea
pop
add
sub
mov
inc
jae
mov
cmpsl
leave
jmp
mov
fstps
cmp
mov
je
jecxz
xor
outsl
mov
roll
lret
sub
jge
inc
push
or
and
pusha
adcl
pop
xor
cwtl
pop
and
insb
push
mov
das
ja
mov
ss
jmp
lods
mov
repnz
fistpll
out
popf
arpl
cld
pop
dec
mov
xchg
mov
test
lret
push
pop
mov
imull
imul
enter
pop
testl
cmp
jbe
adc
ss
sub
ljmp
xchg
aam
and
and
add
cmp
fcoml
mov
mov
cli
push
movq
shl
xor
push
insl
arpl
scas
dec
sub
and
push
and
dec
cld
jge
add
adc
rcll
push
iret
jae
shlb
mov
lret
movsb
cmp
pusha
gs
out
inc
lds
jmp
mov
std
idiv
push
mov
or
lcall
lahf
lods
jne
sbb
scas
push
xchg
cmc
xor
inc
inc
cmp
add
pushf
mov
fldenv
ficoml
in
aad
shrb
in
or
testb
aas
push
sub
gs
sub
cmp
adc
popf
adc
sti
xchg
testb
cmp
xor
sarb
mov
out
xor
pop
loop
xchg
xorb
test
pop
and
popa
or
cmp
mov
push
cs
dec
cmpsl
std
push
mov
lret
enter
int
enter
pop
xchg
sub
jo
pusha
fdivl
fnstsw
sbb
jnp
jp
add
ss
xor
lods
in
adc
mov
inc
insb
ljmp
mov
jle
mov
shl
sbb
and
cmp
xor
repnz
xchg
adc
and
xor
out
or
addr16
pop
push
adc
ret
test
out
inc
ds
cld
add
xchg
lds
mov
shrb
push
aad
cli
outsl
fcompl
aam
lret
sub
mov
add
and
jl
fucomp
or
sti
pop
add
and
mov
and
mov
sbb
lock
and
sub
aas
cwtl
push
stos
or
sub
dec
ds
and
cmc
pop
out
jg
mov
xchg
mulb
mov
icebp
push
in
pop
mov
fisttps
in
dec
inc
xchg
xchg
dec
lods
lret
test
mov
xchg
pop
add
mov
lds
lea
mov
lcall
push
jmp
in
jae
xchg
movsl
mov
dec
divb
and
jo
mov
mov
dec
imul
jbe
mov
cwtl
shrb
push
aam
cmc
into
iret
lea
in
outsl
push
insl
or
dec
mov
outsb
data16
imul
cmp
mov
fnstcw
xchg
notl
pop
dec
xor
xor
lcall
neg
mov
stos
loope
mov
in
push
pusha
gs
xlat
mov
lcall
adc
jae
xlat
push
or
sub
pop
sub
imul
jb
pop
test
mov
push
hlt
push
mov
cmp
call
je
int
stos
or
into
sti
lds
dec
out
and
xchg
mov
imul
ja
fstpl
mov
repz
pop
adc
or
fs
inc
test
lods
out
sbb
ljmp
fidivrs
lret
cmp
hlt
shll
jmp
jo
lea
mov
out
call
and
ret
flds
ret
mov
fidivrl
xchg
mov
aas
xor
repnz
jne
jo
cs
dec
push
mov
loope
insl
or
iret
dec
and
and
dec
arpl
jge
loop
inc
mov
inc
cld
jno
mov
xchg
sbb
mov
push
sub
scas
adc
dec
inc
inc
movsl
add
bound
bound
push
pop
cltd
lds
xchg
xor
std
push
aam
mov
dec
iret
push
xor
sahf
cmp
dec
iret
sbb
and
mov
rcrw
sbb
mov
cwtl
cmp
popa
shlb
push
xchg
mov
jo
jne
das
sub
mov
inc
arpl
loop
mov
jle
cmp
sbb
sub
jns
out
jnp
clc
push
add
and
lret
sbb
mov
or
jns
mov
and
cmp
sbb
cmp
push
mov
je
cmpsb
xchg
repnz
or
xor
mov
xchg
push
call
gs
cmpsl
dec
loop
sub
test
jb
inc
popf
cld
sbb
jb
stc
jne
jae
add
pop
ficoml
jae
push
lds
scas
cli
dec
mov
rep
stos
int3
dec
mov
xchg
and
pop
mov
cmp
sbb
pop
fs
cltd
leave
lahf
icebp
push
popl
mov
fcmovnbe
iret
cs
stos
cmp
ds
icebp
dec
cmpsl
addr16
mov
stc
jne
loop
mov
fninit
mov
xchg
xor
shll
xchg
sbb
adc
outsl
into
cs
inc
dec
stos
or
jl
out
scas
loop
cmpsl
into
jp
arpl
cmp
popf
std
inc
cmp
stos
pop
clc
push
jg
mov
adc
imul
lock
nop
or
daa
test
outsl
sbb
mov
mov
data16
loopne
ds
and
and
cmp
je
xor
jno
xchg
pop
or
mov
dec
push
and
mov
stos
lcallw
sbb
cmp
xor
pop
mov
pop
sbb
std
cmc
push
cld
mov
in
xchg
xchg
insl
sub
or
inc
sar
ret
rolb
mov
jg
mov
test
adc
es
aaa
lds
cmpsl
sbb
xor
pop
and
insb
stos
mov
sti
clc
fwait
sarl
sbb
leave
or
jbe
mov
dec
mov
cmp
das
mov
cmpsb
jo
pop
xchg
mov
loopne
jp
gs
or
jne
pusha
jg
mov
or
imul
jne
jb
fldt
scas
push
adc
es
fnstcw
xchg
cld
std
pop
mov
daa
notl
pop
dec
xor
xor
mov
mov
int3
cmp
xor
or
jne
cmpsb
or
ja
add
sti
cwtl
mov
pop
mov
ret
adc
clc
mov
sbb
ljmp
or
or
dec
and
cli
lcall
mov
out
sbb
xchg
mov
sub
push
leave
lret
aas
enter
jo
outsl
movsl
lds
or
jp
sti
cwtl
xor
lds
pop
jecxz
sbb
mov
es
in
sub
or
adc
xor
addr16
popf
sbb
lods
call
jns
cmp
icebp
mov
ret
lea
lea
adc
sub
jecxz
mov
jle
popf
ds
movb
adc
in
mov
jnp
sbb
adc
shrl
iret
sbbb
ror
sub
stos
andl
stc
ss
inc
inc
lret
jg
jle
jmp
sbb
pop
je
xor
cmp
push
cwtl
jecxz
cmpsl
dec
test
xchg
cmp
add
pop
or
mov
sbb
jns
out
pop
sarb
mov
mov
push
jo
bound
je
dec
leave
sbb
scas
sub
jb
push
das
fnstenv
sub
mov
popf
lea
ss
cmp
xor
loopne
sub
aad
dec
jne
decb
test
cmpsb
lret
popf
inc
cmp
hlt
cmp
push
popf
jns
imul
cltd
push
xchg
mov
mov
scas
xor
xchg
push
add
movsl
dec
cmpsb
pop
pushw
dec
mov
pop
jle
mov
dec
mov
popf
cmp
mov
mov
clc
repnz
mov
sub
cltd
lea
lret
lcall
in
push
lods
or
push
or
rcr
cs
movsl
outsl
sub
jns
mov
inc
fcoml
repnz
mov
inc
enter
jecxz
scas
int
dec
or
enter
push
sbb
and
sbb
lods
pop
add
xchg
pop
sbb
repnz
or
sti
xor
aam
ja
in
dec
aam
cmp
repnz
cli
ret
shl
mov
pop
fsubr
test
jecxz
and
adc
lea
sub
sahf
in
sahf
sub
dec
mov
dec
mov
jg
ds
in
inc
pop
jp
ja
loopne
add
scas
ret
push
cs
in
insb
push
loopne
addr16
es
cs
ret
test
popa
pop
pop
mov
jns
push
movsb
fistpl
push
mov
jmp
mov
jo
pop
and
ss
test
roll
add
roll
mov
popf
popf
sbbb
lods
leave
adc
outsb
rorb
push
push
ror
dec
test
jb
bound
push
xor
pop
mov
push
push
notb
pushf
or
mov
mov
jge
insb
dec
stos
dec
mov
rorl
jl
insl
push
cwtd
call
addb
rcrl
inc
fcomp
ja
je
sbb
vprotd
xchg
stos
mul
clc
or
and
cmpsl
mov
xchg
stc
inc
shl
xchg
popf
std
lcall
je
xor
jg
mov
nop
imul
iret
adc
test
push
call
cmp
cmp
in
in
fistpll
pop
std
pop
pop
lods
or
xchg
scas
loope
int
out
into
jo
lods
enter
call
je
cmpsl
cmpsl
dec
pop
jg
and
les
sub
jle
jo
mov
sub
pop
xchg
ds
mov
cld
adc
push
dec
dec
pop
mov
daa
sti
xor
lds
ret
add
cmp
sub
idivl
push
sub
add
lods
lret
stos
push
add
pusha
mov
out
sahf
mov
fsubr
mov
test
mov
mov
adc
dec
aam
insl
mov
sti
iret
or
les
add
mov
xlat
mov
cwtl
adc
push
mov
lods
push
sbb
push
outsl
into
std
pop
rorl
movb
mov
out
jmp
pusha
popa
rcrb
adc
jl
jecxz
sub
mov
jg
cmp
xor
repnz
insl
xchg
fcmovne
lret
in
dec
lods
or
push
inc
fidivrs
inc
cmpsl
call
inc
mov
jge
jle
aad
push
pop
js
push
ljmp
jae
xchg
ret
outsb
cltd
push
cmp
xor
inc
out
xchg
xor
cmc
inc
adc
dec
movsb
stos
add
sub
fnstcw
rclb
adc
pop
cwtl
imul
xchg
icebp
push
dec
lock
into
sub
and
dec
sub
repnz
pusha
jae
inc
inc
mov
sbb
jg
stc
jp
cli
mov
shll
pop
cwtl
push
xchg
xchg
xor
xor
fisttpl
sub
mov
fdivl
cmpsb
int3
xor
or
inc
add
in
jge
lahf
jg
imul
xchg
fwait
mov
clc
aad
jo
xchg
mov
sbb
add
dec
int3
aam
add
mov
mov
dec
bound
add
mov
cld
pop
mov
fldl2e
push
mov
cltd
addr16
aad
sarb
dec
mov
in
dec
mov
lods
mov
push
gs
loope
push
add
pop
inc
mov
pop
enter
cmp
adc
sbb
dec
ss
jl
push
mov
ss
sub
add
push
inc
ret
cmp
rep
loop
loop
rol
mov
notb
cmp
sbb
shll
scas
in
sub
lods
outsb
mov
mov
mov
dec
imul
out
cwtl
sub
mov
sbb
cwtl
push
adc
push
cld
mov
mov
scas
adc
lods
or
or
pop
les
cmp
mov
int3
mov
bound
jns
mov
cwtl
dec
ja
inc
adc
mov
lds
push
cmp
iret
das
shl
jb
scas
push
addr16
push
std
push
roll
data16
outsb
pop
fisubl
jge
clc
mov
jge
adc
or
jge
repz
adc
cmp
sub
or
vpand
loope
pop
std
and
or
and
sub
ficoms
outsb
mov
lock
jae
outsb
dec
test
xchg
inc
pop
int
inc
movsl
jns
or
sar
jg
mov
cmp
fwait
pop
shlb
push
push
aam
push
push
push
sub
mov
jne
fldt
or
lock
scas
gs
sti
cli
dec
cltd
mov
fists
out
jae
mov
cwtl
jbe
in
dec
enter
sub
les
fs
mov
fstp
cmp
jl
inc
iret
ret
cmp
cmp
push
pop
mov
and
in
insb
lea
ret
nop
out
and
pusha
outsl
sub
imul
jg
test
dec
mov
dec
not
xor
scas
xor
mov
enter
mov
cltd
shrl
fidivrl
inc
inc
adc
fisttpll
lds
push
out
repz
cmp
shl
mov
dec
dec
call
inc
enter
xor
loopne
sub
cmp
aaa
cmp
aam
xor
xor
sub
imul
lahf
xchg
insl
cmpsb
add
add
add
sti
cld
pop
mov
sbb
mov
popa
or
jae
inc
dec
stos
or
divw
out
or
dec
dec
dec
and
mov
outsl
mov
and
out
mov
fnstenv
pushf
jp
pop
and
or
ljmp
and
push
dec
mov
mov
xor
in
cli
jp
jne
adc
xor
icebp
iret
cs
rcl
xchg
dec
sub
vpunpckhbw
arpl
lods
xlat
sub
add
add
in
fdivs
mov
inc
aam
xchg
cli
jbe
or
adc
sub
dec
xchg
xor
inc
ror
ret
push
and
jg
add
mov
or
loopne
jg
xchg
icebp
xchg
push
outsl
mov
repz
in
dec
aam
in
push
int
lds
in
movsl
and
sub
inc
test
jnp
fmuls
mov
xor
stc
push
aaa
int
xchg
lods
cmp
or
testl
lds
jmp
mov
jl
lock
push
sub
xchg
repnz
scas
dec
negl
dec
and
mov
arpl
imul
movsl
test
or
pop
pop
cmp
sbb
mov
adc
cmp
xchg
inc
ds
outsl
jo
dec
dec
clc
lret
sub
cmpsl
js
stc
je
inc
inc
adc
xchg
mov
loop
stos
jl
idivb
rol
stos
mov
xor
scas
sub
outsb
int
shlb
sub
ret
jecxz
xor
movsl
mov
outsl
pop
fnstenv
xchg
icebp
mov
cmpsl
idiv
sub
push
push
stos
pop
fiaddl
inc
inc
mov
ja
cmp
pop
fdivl
fcom
ss
jecxz
scas
pop
jne
mov
out
into
ljmp
leave
sub
fdivrp
pop
les
repnz
adcb
pop
jle
mov
sbb
cmc
and
xchg
js
or
adc
mov
in
cmp
jbe
insl
add
cmpsb
mov
loope
dec
add
testl
movsb
and
bound
sbb
sbb
fistpl
or
adc
lret
sub
push
push
int
lret
daa
imul
dec
fadd
mov
inc
aas
rcrb
xchg
hlt
hlt
gs
adc
sbb
pop
je
xor
mov
call
push
inc
movsb
add
mov
loopne
loope
aad
ja
jg
jno
lock
xchg
negb
adc
jno
cmc
and
into
sub
rorl
call
inc
mov
jle
xchg
inc
pop
mov
fcomps
jp
lcall
push
mov
xor
sub
mov
mov
ljmp
push
jle
out
bnd
mov
sti
out
mov
mov
shlb
fildll
lret
sub
or
daa
test
jnp
add
inc
sarl
jecxz
push
push
adc
mov
iret
divl
mov
sub
push
dec
inc
insl
int
push
int3
inc
inc
cmpsl
xchg
mov
idiv
pop
mov
mov
mov
into
sub
outsb
int
add
push
adc
enter
iret
ret
jecxz
cmc
xor
mov
push
xor
call
push
ljmp
and
call
mov
mov
add
iret
stos
push
loop
mov
call
mov
sbb
repnz
mov
sub
cs
push
xchg
inc
lock
sub
pop
xchg
iret
mov
mov
out
cli
adc
iret
push
jns
cli
cmp
lret
shll
xchg
repnz
sbb
into
xchg
sbb
orb
or
and
mov
xchg
sbb
aaa
fistpll
sbb
push
cmp
jae
xor
xor
out
iret
jo
xchg
lock
mov
imul
loop
push
andl
cld
mov
cmp
xor
xchg
add
leave
jae
fwait
gs
cs
scas
cmpsl
lcall
lret
fcmovnb
movsb
add
mov
cld
popf
sti
pop
jb
sarl
mov
cwtl
negl
mov
lds
stos
or
and
gs
cs
out
pop
mov
mov
inc
fsubs
ficompl
sub
insl
icebp
push
mov
movlps
pop
stos
lods
lds
xlat
inc
jecxz
and
xlat
cwtl
cld
add
mov
popa
push
adc
fistpl
mov
sub
aam
cmpsl
mov
shll
into
xchg
adc
test
xchg
mov
cli
je
test
aaa
mov
inc
roll
mov
xor
add
mov
mov
iret
lea
and
mov
inc
arpl
andb
testl
lcall
in
aaa
xchg
mov
shll
imul
jl
dec
scas
aad
es
xor
ret
loopne
sub
cmp
push
aaa
xchg
cmp
xchg
lret
xor
push
test
mov
dec
call
or
test
xor
xchg
das
cmp
pop
out
jb
sti
pop
fdivrl
pusha
into
sbb
sbb
mov
ds
test
add
or
cmpsb
orl
in
loop
jo
or
pushf
cld
mov
adc
pop
cmp
or
add
jb
into
lea
ljmp
or
or
ficomps
jno
mov
and
mov
xchg
push
cmpsl
cmp
in
mov
mov
cmp
mov
jge
jns
jb
sbb
enter
orb
jae
adc
cmp
pop
daa
mov
pop
lea
ret
xchg
call
pop
and
jmp
loope
pop
cs
aaa
xchg
stc
fnstcw
cwtl
je
ljmp
int
lea
mov
jne
or
rclb
mov
fwait
sti
pop
cmp
lahf
cld
out
jne
xchg
ficompl
stc
push
stos
iret
mov
jb
mov
sbb
mov
sahf
in
dec
dec
dec
inc
inc
mov
add
xor
cltd
ds
inc
add
idiv
push
mov
arpl
lret
push
mov
mov
cmc
jb
lret
adc
cmp
cmp
jmp
pop
filds
xchg
out
std
adc
mov
push
imul
sbb
out
mov
cmpsl
cmpsl
js
inc
out
scas
sub
cmc
ret
pop
pop
fnstenv
xchg
mov
push
je
mov
into
sub
ljmp
xchg
aam
out
mov
call
pushf
rcrb
mov
pop
jp
pusha
dec
ljmp
push
mov
outsl
lods
sub
js
xchg
sub
or
cmpsb
les
outsb
je
inc
inc
xchg
rcrl
dec
popa
sti
stc
mov
xor
repnz
or
xor
push
icebp
pop
call
movsb
in
pop
in
cmp
mov
testb
pop
adc
fildll
dec
scas
push
stos
leave
sub
mov
es
jmp
loopne
cmp
sbb
pop
loope
push
push
mov
shr
dec
jne
jb
stc
scas
pop
or
dec
sub
mov
inc
arpl
rol
rcr
loop
mov
sub
cmp
mov
out
fistl
dec
shll
xchg
leave
add
dec
dec
scas
cli
das
in
sbb
dec
jg
and
inc
push
add
lods
test
cmp
push
mov
sbb
pop
aaa
xchg
fiadds
add
push
jecxz
adc
leave
push
int
inc
cmpsb
add
lds
dec
fnstsw
shr
fidivrl
ss
push
sub
xchg
icebp
das
scas
xor
push
rolb
out
stos
or
jbe
out
mov
cmp
cmpl
daa
loop
mov
pushf
xchg
ljmp
je
cmp
sbb
aam
addr16
dec
mov
cmp
outsb
outsl
push
insl
dec
gs
or
xchg
jp
jge
in
inc
repnz
jg
jns
cmp
inc
jp
je
xor
dec
insb
sub
iret
jmp
add
cwtl
or
push
ljmp
sahf
push
push
loop
mov
in
push
jge
push
popf
outsb
mov
shr
dec
div
stc
js
sahf
push
mov
cmp
pop
cmpsl
cltd
dec
int
lods
leave
es
mov
sub
or
mov
add
scas
pop
cwtl
je
pushf
or
adc
stc
inc
mov
out
out
popf
call
and
fldenv
mov
sti
pop
add
sbb
push
xor
outsl
lods
cld
aam
subl
movsb
xor
sbb
cmp
pushf
inc
mov
cmp
fcompl
sbb
sbb
mov
mov
dec
je
push
mov
xor
outsb
pusha
cmc
nop
lcall
jb
push
and
loopne
aas
pop
inc
push
loopne
cld
and
int3
adc
mov
int3
aam
xchg
repnz
sbb
daa
cmp
lea
insb
sub
icebp
cmpsl
cmpsl
cmp
sbb
mov
jle
pop
imul
push
pop
mov
jns
repnz
push
pop
xchg
icebp
push
in
stc
imul
xchg
xchg
lret
xchg
push
mov
cmp
sbb
lock
out
fcom
xor
xchg
adc
dec
cmpsl
and
mov
fldenvs
in
mov
sbb
or
mov
outsb
xor
ds
enter
and
sub
int3
dec
daa
inc
out
mov
cmc
shlb
ficoms
inc
push
adc
cwtl
inc
imulb
mov
mov
shlb
jb
in
inc
or
lret
sub
mov
pop
jp
jle
in
shll
inc
popf
std
pop
xlat
xchg
pop
mov
mov
dec
movb
out
dec
jo
lcall
fidivrs
sub
lds
popf
pop
lea
cld
pop
mov
cmp
lods
in
xchg
cmc
and
pop
xchg
xchg
movsb
fnstsw
outsb
mov
mov
faddl
ljmp
push
and
and
add
jae
aaa
rclb
push
pop
adc
ds
pop
xor
xchg
cwtl
or
cmp
iret
mov
test
mov
inc
mov
call
fstpt
jle
jge
xor
xor
xchg
adc
daa
push
aas
cmp
cmpsl
sbb
xchg
inc
xor
mov
sbb
sbb
nop
cmp
cmc
mov
jle
scas
sbb
xor
adc
or
add
push
mov
mov
stc
lahf
mov
pop
adcl
subl
xchg
push
in
or
dec
dec
dec
iret
and
mov
inc
lock
cmp
sbb
inc
push
xchg
shlb
ss
push
inc
push
adc
cwtl
movsl
leave
sbb
inc
fadds
js
das
aad
mov
js
pusha
and
xor
jns
pop
sti
icebp
aam
xor
vandnps
pcmpgtd
adc
movsl
xchg
and
in
xchg
js
mov
adc
push
dec
push
std
xor
xor
xchg
in
shlb
xor
aas
sbb
lret
jmp
andl
fs
cmpsb
faddl
stos
shl
mov
push
adc
xor
sbb
push
inc
insl
xor
inc
xchg
lret
add
leave
test
push
imul
mov
movsl
leave
push
mov
in
ret
cmp
sbb
aas
testb
mov
stos
mov
ficompl
mov
and
aad
pop
leave
push
arpl
pop
cmp
imul
add
sbb
xchg
mov
popf
aad
or
mov
ror
lods
gs
mov
or
daa
push
lcall
or
xchg
fidivrs
sbb
lods
fwait
notl
mov
movsb
pop
xchg
xchg
xchg
adc
pop
and
dec
rclb
lret
xchg
imulb
lds
adc
jb
jge
pop
push
sbb
cmp
aam
jae
data16
jo
jp
mov
out
imul
call
add
mov
js
inc
inc
pop
push
movsb
add
xchg
js
mov
shll
clc
mov
or
sub
pop
sbb
lea
add
mov
jb
das
loope
jno
test
sbb
repnz
push
adc
adc
je
in
mov
aam
mov
jo
inc
gs
stos
data16
inc
mov
jns
mov
sbb
push
adc
rcl
in
mov
xlat
inc
cs
sbb
daa
sti
fdivp
add
fdiv
scas
xchg
xchg
rolb
aaa
xchg
inc
and
cs
mov
xchg
cmpsb
fsts
dec
sub
mov
push
repnz
dec
mov
and
add
fidivrs
js
rclb
sbb
mov
fimuls
or
repnz
fisubrs
stos
aam
popa
add
shr
call
push
jecxz
mov
xchg
shlb
cmpsb
jecxz
lret
xchg
bound
xchg
je
cmc
adc
push
push
push
in
in
cmc
nop
pop
or
dec
loopne
int
mov
das
sub
pop
pop
cmp
popf
xchg
fsubrl
or
std
push
loop
dec
push
scas
mov
or
in
out
mov
lea
call
mov
push
ljmp
push
les
push
sbb
cmp
into
fidivrl
mov
push
mov
adc
testl
jge
cmp
push
or
in
in
pop
shr
push
cld
pop
popa
jl
and
mov
popf
gs
push
repnz
sub
into
adc
lret
int
or
sub
cmp
mov
pop
mov
pop
ja
add
ss
pop
push
enter
rcrl
popa
insl
push
mov
ljmp
mov
push
popa
rol
add
mov
adc
cmp
lcall
ja
outsb
in
insb
lret
push
add
decl
fwait
pop
lea
cmpsl
inc
or
or
popa
sbb
fistpll
nop
cld
lahf
sbb
pusha
int3
arpl
repz
lock
push
dec
cmp
dec
lods
lods
lock
mov
popf
in
gs
inc
mov
jge
hlt
daa
jle
cmp
sbb
fiaddl
push
cmpsl
xor
js
cmc
cs
mov
or
adc
add
push
adcb
shrb
js
jns
add
outsb
add
mov
movq
push
mov
ds
scas
dec
mov
and
mov
mov
xchg
aas
jae
fsubl
pop
dec
into
xchg
hlt
rcrb
popa
dec
aam
rcll
adc
shrb
outsl
andl
and
xchg
mov
mov
les
jns
jnp
lds
jge
jne
pop
cmc
mov
mov
popa
or
xchg
dec
lret
fnsave
mov
ja
mov
mov
xor
mov
sub
jne
sbb
fadds
mov
or
ss
dec
mov
stos
outsl
jle
loop
insb
ja
mulb
cmpsl
shlb
cld
pop
jecxz
pop
shll
cltd
insb
mov
icebp
cld
inc
sub
mov
in
outsb
mov
scas
or
add
jmp
movsl
lret
leave
pop
xchg
js
jae
rcrl
negb
mov
jb
and
pop
adc
leave
aam
add
sub
bound
add
arpl
mov
cmp
add
pop
push
cli
jnp
cmp
cld
divl
jno
mov
mov
iret
das
or
lods
aas
sahf
out
inc
dec
and
outsb
lds
fnstsw
push
fsubp
ficomps
shll
repnz
pop
mov
add
xor
insl
dec
inc
jae
sub
jecxz
dec
push
in
in
pop
cmp
mov
pop
mov
mov
push
mov
jne
imulb
inc
adc
sub
sbb
test
fildl
gs
cmp
push
xor
push
ret
pop
sbb
cmp
notl
dec
cli
jbe
sbb
add
add
add
dec
jo
mov
movsb
add
enter
call
pushf
shr
sar
pop
out
pop
jp
cmp
icebp
test
jns
push
stc
and
mov
mov
sbb
test
mov
cltd
jns
jge
push
ss
imul
divl
jno
mov
mov
iret
das
or
lods
fistpll
sub
loop
mov
mov
dec
inc
das
inc
pushf
cld
mov
mov
iret
lods
cmp
repnz
or
xchg
xor
adc
aad
sub
data16
pop
outsb
rcrb
inc
inc
jle
cmpsb
repnz
mov
ljmp
jne
sbb
cs
movsb
sub
jb
sub
loop
data16
mov
pop
jle
pop
leave
inc
mov
cmp
enter
ror
bound
lret
lea
jmp
stos
dec
mov
shll
add
and
add
lds
aaa
dec
bound
mov
lahf
jp
jno
out
repnz
jo
push
jne
je
in
or
add
inc
mov
movsl
mov
movsl
pop
fsubrl
mov
imul
or
dec
insl
dec
jb
jmp
outsb
cmp
lret
dec
pop
jp
mov
add
add
lcall
push
jne
or
in
push
lea
cmpsl
stos
sub
incl
int
or
jnp
sub
jg
inc
nop
std
push
sbb
sub
xchg
scas
shll
lret
push
mov
and
push
and
les
and
pop
fs
pop
sti
cwtl
cmp
bound
mov
mov
fildl
stos
xchg
fwait
push
or
int3
fdiv
mov
imul
pop
test
add
fs
push
sti
mov
and
adc
in
push
jbe
dec
lods
dec
mov
rorb
mov
inc
mov
jge
out
mov
push
sbb
sti
inc
cwtl
notl
ss
push
aam
out
shll
div
mov
or
or
mov
lds
subl
cmpsb
jecxz
loop
fidivrl
cmp
cmp
xchg
repnz
xchg
adc
and
shrb
jg
test
in
test
mov
mov
cwtl
notl
dec
mov
push
int3
xchg
repz
lock
and
insb
push
mov
push
imul
in
shll
loop
jae
fidivrs
sbb
sbb
xchg
cmc
push
sub
ret
scas
push
pop
insb
pusha
or
insb
enter
jmp
cmpsb
filds
popa
hlt
lcall
mov
sbb
cmp
xchg
push
shll
mov
dec
dec
cvtdq2ps
cmpsl
push
cmp
fs
inc
aam
mov
loopne
dec
aas
inc
fnstcw
faddp
lahf
pop
xor
jae
pop
push
mov
adc
lods
dec
imul
pop
mov
idivl
mov
inc
mov
jno
ds
std
cmpsl
pop
fsubrl
cwtl
clc
cmc
ss
jne
xor
dec
jecxz
inc
mov
scas
dec
out
push
or
lret
imul
jmp
add
outsl
dec
jg
mov
jl
cmp
loopne
dec
jl
xlat
lret
aad
addr16
xchg
adc
add
mov
sub
jmp
cmpsl
push
add
pop
fbld
push
inc
fcomps
sbb
xlat
xor
jb
jae
gs
dec
scas
ret
sub
xchg
outsb
imul
pop
ret
inc
xchg
jl
rcrb
jge
test
aas
mov
cwtl
rcrl
aad
push
mov
repnz
repnz
push
or
pop
mov
jecxz
inc
pop
pop
cmp
repz
add
xor
xchg
push
stos
sub
cmp
mov
push
jle
stos
or
mov
daa
push
gs
lret
inc
pop
jle
cmp
jo
fdiv
pop
rclb
loope
shrb
dec
lea
cmc
nop
movsb
or
dec
aam
adc
and
jmp
cmp
rcrb
adc
adc
cmp
xlat
cltd
aas
cli
idivl
inc
mov
pop
mov
imul
repnz
test
and
cmpsb
push
addl
cwtl
inc
inc
movsl
add
xchg
inc
ret
inc
jbe
adc
push
adc
add
mov
sbb
out
dec
repz
out
push
les
pushf
push
mov
mov
fcomp
fidivs
push
add
mov
out
aam
add
sub
mov
and
pop
in
fnstsw
sub
fcomps
out
fnstcw
cwtl
outsb
or
mov
imul
xchg
jg
daa
cmpsl
lods
cmpsl
repz
pusha
or
ja
pushf
cld
cmpsb
push
mov
roll
fnstsw
insl
mov
repnz
dec
in
jb
outsl
xor
lret
xchg
repnz
and
gs
lds
aaa
stos
andb
jmp
mov
cli
movsl
test
jne
pop
imul
repz
inc
arpl
shrb
ja
and
dec
push
mov
mov
xlat
cmp
jge
imul
cmp
js
nop
fnstcw
rorb
mov
xor
lcall
int
jae
outsl
mov
imul
push
and
mov
pop
enter
or
aaa
dec
mov
push
mov
sarb
mov
push
aas
or
rorb
sub
cmp
test
or
aaa
lcall
cmp
xchg
icebp
mov
pop
mov
mov
inc
cmpsb
pop
adc
mov
sub
or
and
fdivrs
add
xchg
js
mov
push
dec
jl
dec
scas
push
pop
xchg
push
aad
mov
movl
xor
cmp
jnp
aas
push
jl
or
xchg
dec
xlat
or
mov
push
mov
mov
sbb
dec
in
push
mov
xchg
scas
test
gs
or
cmp
adc
push
sarb
test
adc
mov
arpl
or
mov
jg
jno
xor
jnp
cmc
stos
xor
repnz
jo
dec
mov
or
adc
xchg
and
jp
je
jecxz
mov
icebp
ffree
cltd
pop
popf
mov
leave
int
xchg
mov
imul
repnz
leave
jb
out
inc
sub
les
ds
pop
jle
add
ja
mov
pop
mov
mov
mov
cmc
sub
sub
addr16
scas
lret
inc
rorl
cmp
mov
rcll
inc
popf
push
adc
push
jnp
decb
xchg
lcall
or
dec
xchg
rcl
lds
mov
add
lret
cld
add
xchg
xor
rcr
add
mov
cwtl
neg
push
adc
push
mov
sbb
lds
push
mov
dec
imul
test
xchg
jb
bound
jg
xor
pop
in
cmp
jne
jge
push
adc
nop
jo
aam
repz
insl
xor
sbb
and
in
enter
add
popa
cmpsb
jecxz
and
sbb
in
div
pop
lret
aam
rcll
adc
push
repnz
lret
mov
cltd
and
jle
mov
pop
fidivrs
lahf
sbb
cli
pop
lret
push
mov
xchg
push
xor
insb
je
test
es
add
mov
movsb
dec
or
jg
ds
aam
sbb
sub
adc
pop
jle
xchg
rep
rclb
jmp
mov
xor
imul
icebp
mov
add
aaa
cmp
sbb
add
rorl
sbb
lods
das
sub
outsb
or
mov
dec
fimuls
out
arpl
popf
sbbl
mov
test
outsb
pop
jmp
adc
std
pop
lea
int
xlat
cmc
adc
or
sub
add
or
insl
dec
pusha
cld
mov
ds
mov
add
pop
out
aam
fisubrs
scas
fincstp
pop
insl
in
repnz
icebp
xor
push
add
in
in
mov
push
ret
cmc
test
jg
jecxz
loop
cmp
mov
je
scas
popa
mov
mov
push
xor
xor
and
addr16
inc
xchg
cmpsb
cmpsl
inc
addb
loop
mov
and
arpl
stos
mov
cmp
xchg
ss
repz
lret
lds
das
or
ja
or
or
pop
inc
gs
movsw
pusha
fsubs
adcb
cwtl
imull
stos
inc
push
shrl
insl
int3
jb
sub
dec
test
push
incl
sub
jns
leave
fcomp
notl
cmp
and
xlat
or
mov
imul
push
dec
lds
imul
call
ret
sbb
ss
je
mov
icebp
ds
mov
in
or
divl
les
cs
mov
add
cli
sbb
fidivrl
insb
jp
test
je
fadd
rcl
mov
jo
xor
insl
clc
push
or
xor
dec
int
dec
lea
ljmp
push
push
dec
dec
mov
out
icebp
jl
sbb
push
mov
xchg
cli
daa
aam
lock
push
jb
mov
push
movl
aaa
jle
cmp
gs
cmp
sarb
cmp
outsb
into
add
add
sub
cmc
movsl
out
movsl
mov
pop
ficomps
sti
pop
pop
popf
cld
pop
add
fcmovnb
adcl
push
mov
adc
push
shlb
stos
or
inc
in
dec
add
push
mov
inc
bound
andb
lds
das
cmp
cmpsb
cmpl
cmp
imul
adc
imul
adc
sbb
and
andl
adc
ds
std
clc
sub
pop
fxch
mov
dec
shlb
pop
xor
leave
pop
cmp
mov
pop
data16
mov
sbb
adc
cld
std
pop
scas
or
cmp
mov
loope
dec
mov
fdivs
dec
add
dec
ret
or
sub
movsb
mul
inc
mov
xor
sbb
lcall
mov
arpl
lock
pop
jmp
mov
inc
xchg
je
inc
xor
jae
cmp
sbb
aam
cmp
xchg
fldcw
fucomp
dec
pop
stos
push
mov
mov
lds
aad
pop
lcall
je
fcompl
insl
fnstcw
jecxz
sub
rcr
xor
push
das
mov
hlt
bound
das
dec
inc
jo
jp
cmc
test
add
push
jg
xchg
cld
pop
mov
idiv
mov
or
fisubrl
jg
ds
dec
pop
inc
jo
jo
test
dec
loope
fisubs
popf
and
jg
addl
xlat
adc
sbb
dec
sbb
lret
call
or
rol
test
testl
jbe
xchg
cmp
rcl
push
pusha
dec
sub
fisttpl
enter
lock
rorl
lahf
cmp
pop
or
xor
jp
cli
enter
fidivrs
push
jo
jne,pt
pop
ljmp
jne
dec
cmpsl
push
cs
out
loopne
push
leave
cmpsl
cmp
jge
pop
sbb
lods
xor
notl
jg
mov
rorl
dec
iret
aam
mov
xchg
ds
cmp
inc
mov
pop
jle
shl
or
popf
std
cmpsl
mov
adc
fbstp
lods
lea
cmp
nop
or
movsb
test
jnp
push
rorb
pop
and
pop
cmpsl
mov
cli
inc
add
jne
pop
imul
repz
inc
arpl
shrb
mov
shrb
lods
sbbl
sub
or
adc
fistpl
cs
test
cwtl
mov
cld
in
fildll
mov
repnz
addr16
mov
dec
out
adc
cli
test
js
mov
pop
mov
pushf
popf
inc
push
gs
fdivrp
sbb
xor
loop
push
shrb
stos
or
inc
cmpsb
mov
xorl
imul
adc
ficomps
icebp
xor
mov
icebp
mulb
insl
mov
or
js
push
stos
call
pushf
inc
repz
push
pushf
rorl
push
mov
test
xlat
xchg
push
xor
xchg
push
dec
push
adc
repnz
push
adc
je
inc
loope
push
mov
mov
inc
jp
sub
cmp
sbb
mov
jecxz
mov
mov
xbegin
sub
repz
fldcw
mov
in
pop
mov
sbb
dec
push
movsl
push
xchg
mov
shlb
mov
sarl
pop
rorl
and
adc
mov
fstp
xchg
ret
jo
shll
pop
mov
push
test
adc
leave
sbb
sub
mov
xor
or
cmp
out
dec
pop
mov
lods
cmc
and
jne
out
fnstcw
jecxz
fldln2
dec
ljmp
lds
loop
dec
ffree
rcrl
jle
test
mov
xor
lock
xchg
push
cld
ja
lea
fnstenv
jo
mov
es
inc
cmc
pop
data16
imul
push
cmp
xor
popf
std
lcall
js
mov
mov
sub
outsl
es
jo
pop
and
fwait
lods
lods
or
cmp
lds
push
inc
jb
imul
notl
fwait
ss
pop
sbb
inc
and
sub
mov
xchg
lret
add
aas
ja
out
rol
sub
sbb
jae
outsb
shlb
idivl
rcrl
xchg
mov
scas
out
adc
mov
lock
add
iret
pop
push
loop
add
jg
jb
fcompl
jnp
cmp
popf
cwtl
aam
icebp
push
cld
pop
cmp
sbb
fwait
cs
aam
and
shll
imul
pusha
std
stos
dec
pop
add
jnp
mov
test
xchg
cwtl
pop
sub
jne
or
in
cmp
cmp
sub
movsb
pop
rorb
mov
jecxz
out
dec
sub
or
or
and
or
popf
std
pop
and
dec
fidivrl
cwtl
jmp
fcoml
lea
outsl
jo
ret
lahf
push
dec
lods
push
int
inc
push
gs
jno
gs
push
jge
mov
daa
fidivrs
or
push
mov
loope
xchg
cmc
popf
call
ss
rorl
jmp
adc
sub
lock
fsts
jecxz
inc
popa
rcrb
mov
out
push
jl
adc
cwtl
adc
dec
in
dec
cmc
jmp
lods
or
jae
push
and
mov
jle
push
lds
cld
cmp
jns
andl
inc
push
push
cld
jmp
cwtl
xchg
mov
push
rorb
dec
aaa
push
cmpsb
push
mov
lea
loope
inc
mov
cld
pop
adc
jge
mov
aas
je
jle
out
push
mov
cli
shll
nop
cmc
nop
inc
js
dec
loopne
mov
mov
arpl
pop
rolb
cmp
and
flds
pcmpeqd
cmp
aaa
lahf
xchg
xchg
xor
xchg
xor
orb
push
cmpsl
cmpsl
mov
call
lret
inc
fdivl
negb
xchg
aaa
jne
mov
xchg
out
cltd
roll
stos
lock
movsl
jns
fs
mov
jg
mov
lock
and
push
cmc
dec
dec
popa
jne
repnz
notl
testb
test
dec
aam
mov
push
out
les
lds
and
jmp
pop
mov
jo
das
lcall
push
loope
jne
inc
shrl
push
rcrb
scas
mov
push
push
push
push
gs
add
in
popa
shrb
ds
std
xor
add
fstps
je
adc
adc
dec
xlat
adc
repz
das
in
int
and
int
pop
mov
call
jge
ja
je
xchg
jle
push
lret
iret
lcall
lods
lods
je
push
lret
sbb
repz
mov
add
mov
and
add
jae
fsubl
push
mov
mov
dec
sub
outsb
inc
out
adc
and
jmp
push
push
xlat
ret
xlat
test
pop
jg
xlat
mov
js
lret
push
xor
repnz
repz
sahf
add
sub
dec
mov
dec
jp
mov
and
xchg
push
pop
cld
fnstsw
jge
push
fistl
jp
xchg
ja
mov
mov
mov
dec
lods
int
dec
rorl
fisttpl
es
les
leave
xor
jecxz
repz
xchg
dec
fnstcw
cwtl
clc
pop
lret
aam
adc
pop
push
insb
lret
sub
xchg
dec
jmp
adc
fcmove
pusha
pusha
ror
ja
pushf
cld
cmpsb
repnz
fnstcw
pop
mov
xchg
pop
in
enter
mov
adc
jo
out
outsb
dec
sub
fisttps
mov
add
cld
and
ret
fidivrs
sbb
inc
add
imull
rcll
push
mov
lock
bound
outsb
int
daa
jecxz
push
or
sbb
es
jecxz
mov
sbb
pop
cs
scas
fnstcw
mov
mov
call
in
mov
push
iret
ret
dec
lods
fistpll
mov
data16
pop
mov
dec
jp
mov
test
iret
pop
cwtl
notl
scas
jns
jne
repnz
mov
out
iret
das
popa
les
ds
and
cmp
jecxz
mov
shlb
pop
ds
aas
pop
jl
push
push
scas
aam
xchg
mov
clc
mov
jb
outsb
mov
push
stos
ds
not
mov
and
enter
ret
cld
andb
and
pop
mov
and
push
dec
jp
aad
call
out
adc
inc
xor
dec
lods
daa
mov
jge
push
lcall
sub
jns
in
inc
pop
dec
orb
lods
pop
push
xchg
cmc
or
or
and
sub
pop
push
sub
imul
xchg
mov
add
ret
fiadds
cmp
mov
ss
sbb
lds
jmp
mov
mov
lret
xchg
icebp
test
push
cmp
dec
out
sbb
andl
xor
xor
push
jno
mov
icebp
cmc
mov
or
lds
das
test
jg
push
fs
mov
rcrl
lret
aam
adc
adc
push
outsb
lock
xor
sub
ror
sti
xor
mov
je
mov
pusha
stos
dec
mov
test
push
lock
dec
cmc
xlat
mov
je
int3
int3
out
lds
les
incl
in
cmp
pop
inc
mov
cbtw
idiv
mov
push
push
in
jne
push
inc
mov
iret
xchg
jmp
fisubrs
ror
daa
inc
sub
jg
jge
in
arpl
sti
idivl
inc
pop
repz
les
sbb
xlat
push
shl
icebp
jb
lea
scas
mov
dec
cmpsb
bound
pop
popa
cs
leave
mov
lcall
or
stc
es
or
push
push
insb
dec
out
push
jg
aas
les
add
inc
lret
push
out
fnstsw
test
fimuls
in
shl
cmp
jno
ror
adc
mov
jne
imul
test
mov
add
shll
subb
add
mov
cli
idivb
push
sbb
xlat
aam
inc
and
lods
es
mov
mov
mov
imul
test
cmp
sbbb
mov
aaa
xchg
sbb
dec
xor
shll
mov
xchg
adc
in
cmp
stos
out
dec
adc
add
or
out
test
push
ljmp
xor
jns
aaa
push
xor
mov
cmpsl
add
sub
cmp
lea
subl
test
mov
jno
mov
push
hlt
je
mov
adc
adc
and
xchg
int
mov
pop
andl
or
popf
xor
pushf
cld
mov
shrb
push
mov
les
push
mov
push
mov
nop
push
ja
xor
shlb
mov
dec
cmpsl
pop
loop
or
add
insl
imul
push
jl
pop
or
cmp
or
pop
mov
push
adc
lea
mov
cmc
mov
jecxz
adc
fiadds
daa
adc
lock
jne
mov
mov
push
xchg
lahf
cmpsl
es
mov
push
ficoms
adc
push
mov
imul
cmp
push
mov
sub
out
push
mov
ljmp
fnstsw
sbb
ss
xchg
jnp
mov
sbb
inc
add
mov
cmpsl
or
rcr
inc
cmpsb
das
js,pn
ss
mov
add
push
cmp
add
xor
and
ja
dec
mov
lds
out
cltd
dec
scas
dec
out
xchg
xor
in
mov
in
push
pop
pop
cmp
push
sub
cmp
cmp
push
divl
arpl
mov
xchg
push
int
mov
out
cli
loope
and
mov
nop
jle
jecxz
adc
sbb
and
cmpsl
pop
scas
sub
adc
fisubrs
movsb
dec
imul
cmp
call
jns
popa
loopne
int
adc
imul
outsl
or
and
dec
stos
or
mov
ljmp
loop
stos
sub
push
ss
cmp
in
fcmovu
sbb
mov
shll
xchg
pop
into
ljmp
leave
in
adc
dec
push
and
pushf
jecxz
mov
inc
test
sbb
popa
sbbb
cld
jnp
jmp
xlat
push
js
xchg
lods
mov
rclb
fisttps
sub
jns
add
add
adc
jl
jecxz
std
out
repz
mov
cmp
aad
jnp
push
das
in
adc
stos
mov
sahf
leave
pop
test
sub
push
jge
cmpsb
movsl
and
mov
cwtl
notb
cmp
icebp
push
mov
mov
sub
es
dec
les
popa
ret
sbb
mov
mov
repnz
push
adc
cld
jl
mov
iret
pusha
into
iret
aam
jmp
inc
cmpsb
inc
loop
dec
add
jg
cwtl
outsb
inc
push
jle
add
sbb
add
mov
hlt
je
movsb
test
lret
paddsb
jmp
icebp
add
add
popf
add
orl
cwtl
sub
sbb
mov
sbb
rorl
hlt
imul
push
mov
in
ja
or
das
imul
adc
inc
mov
gs
arpl
cwtl
adc
sbb
push
mov
idivb
repnz
xor
ficoms
lea
dec
sub
dec
in
push
sub
adc
and
pusha
loopne
pusha
cmp
ficoml
lret
cmp
xchg
lock
js
inc
shll
add
fs
push
roll
and
popf
inc
add
hlt
shll
fsts
into
xor
outsl
adc
stos
push
mov
mov
imul
loop
daa
jmp
inc
cld
sbbb
lds
fdivrs
sbb
test
mov
ja
sbb
hlt
jnp
mov
rcll
sub
cmc
mov
scas
or
lret
pusha
jl
jle
cwtl
ljmp
mov
lcall
push
ds
jb
or
lods
jo
fildll
xorl
lea
movsl
out
add
hlt
and
clc
jmp
cmp
mov
xlat
mov
mov
pop
idivl
ss
cld
in
loope
cmc
or
xorl
in
jns
inc
mov
jb
gs
cld
scas
nop
outsb
mov
pop
cwtl
and
cmp
ja
xchg
mov
in
outsb
xor
fidivrs
iret
enter
mov
sbbl
and
popf
das
pop
cmp
negl
xor
push
test
jo
bound
fiadds
sub
pop
inc
lds
sub
fidivrs
cld
clc
push
ss
loopne
popf
lret
push
mov
sub
jp
test
or
into
stc
sub
dec
dec
dec
fs
sub
call
cld
sbb
movsb
das
daa
inc
cmp
inc
pop
ja
cmp
cmpsl
outsl
mov
shlb
fmuls
es
dec
inc
jo
sub
xchg
mov
movsb
inc
out
nop
or
lea
mov
lods
push
jno
add
lock
add
push
and
inc
or
and
pop
add
addr16
leave
inc
aam
inc
mov
xlat
cmp
pop
aad
xlat
jo
jmp
pop
scas
scas
inc
idivb
sub
stos
cmp
or
and
mov
lods
push
mov
popf
test
outsl
lock
insl
sbb
pop
fs
inc
pop
adc
xor
mov
xor
popa
inc
fisubrs
call
dec
or
insl
fisubl
out
test
lahf
rcll
mov
loop
adc
push
outsl
into
cs
rcr
jp
lock
je
mov
lds
cmpsl
bound
cmpsl
arpl
shlb
sub
fstpt
fs
jl
mov
fists
push
data16
mov
int
into
mov
dec
push
scas
sbb
int
push
xor
jb
insb
xchg
dec
or
xchg
xchg
orb
pop
pop
cs
stos
cwtl
clc
mov
pop
xlat
xchg
lahf
xor
adc
sub
pop
push
pop
in
lods
cmpsl
mov
fnsave
mov
stos
pop
loopne
jge
lods
jns
dec
cmp
pop
iret
pop
cmp
xchg
arpl
repnz
mov
shlb
call
sub
adcb
aas
mov
cmp
inc
and
pop
push
mov
pop
cmp
fbstp
lds
mov
test
add
xchg
mov
mov
pushf
push
xorl
push
push
add
sbb
pop
adc
vpmaxsw
das
shrl
popa
jg
cmp
arpl
js
adcb
out
jne
pop
jg
add
je
stc
and
sbb
xchg
mov
rcll
rcl
repz
add
scas
or
addr16
daa
cmpsl
sub
imul
loopne
and
sub
pop
outsb
pop
mov
dec
adc
push
mov
mov
mov
out
dec
lods
dec
mov
sub
call
sub
lret
stos
xchg
call
jle
fdivs
inc
faddl
shrl
popf
call
push
rcrb
aam
out
push
mov
in
ret
inc
int
movsl
out
andb
mov
mov
mov
ret
push
stc
jo
aaa
clc
popl
mov
rcl
fwait
divb
imul
popf
xor
cmpsl
push
and
push
lret
push
mov
or
jge
sbb
mov
sub
pushf
xor
adc
pshufw
adc
sub
cs
and
in
push
clc
and
popa
add
sub
cmp
cmpsb
lea
fnstcw
cwtl
clc
lcall
in
shll
push
add
push
xor
gs
jmp
adc
pop
testb
mov
loope
sub
int3
gs
je
mov
mov
adc
lret
dec
jle
lods
hlt
push
inc
arpl
adcb
pop
outsl
mov
mov
sti
pop
jno
pop
mov
cwtl
idivl
pop
sbb
and
sub
xchg
sub
jle
push
push
xchg
jecxz
loopne
add
in
popf
pusha
sarl
popf
lcall
das
mov
repnz
xchg
push
ljmp
or
sub
popa
jl
and
jge
jl
mov
sub
mov
sub
adc
outsl
iret
stos
test
push
mov
loop
fisubrs
jne
adcl
cmp
hlt
sarl
clc
mov
push
mov
lock
adc
nop
imul
enter
and
test
jle
ds
pop
inc
or
cmp
cwtl
arpl
fdivl
mov
xor
jo
push
jb
leave
test
cmpsl
imul
cwtl
jecxz
mov
cmp
mov
push
and
lds
jae
dec
popa
adc
addr16
xor
jo
scas
call
push
fwait
and
arpl
or
fcompl
imul
pushl
fsubrp
push
clc
fnstcw
adc
mov
xchg
lea
cmc
sub
addr16
andl
jmp
mov
sbbb
je,pt
sbb
mov
shll
adc
jo
push
fidivrl
dec
ds
dec
cmpsl
movsl
mov
push
arpl
mov
iret
push
call
frstor
mov
push
push
mov
add
shrl
ss
hlt
stos
imul
sub
cmp
dec
mov
lret
stos
test
inc
xchg
dec
add
pop
cld
jl
fstpt
adc
xchg
sahf
jnp
jae
mov
shrb
or
cmp
sub
sti
and
mov
aam
xor
jl
cmp
jo
adc
push
jmp
adc
adc
addr16
cmc
leave
or
sar
sti
call
xchg
les
pop
cmp
in
fnstsw
bound
fwait
testb
jp
jmp
lea
vmovaps
push
sub
sbb
pop
sahf
pop
jmp
cwtl
pop
mov
sbb
sbb
ds
cs
push
adc
mov
mov
arpl
mov
movsb
inc
cmp
jl
sbb
xchg
ja
lods
imul
sub
rcl
jb
or
dec
mov
sub
dec
dec
jmp
push
xchg
xchg
pop
sarb
je
fidivrl
pop
xchg
adc
xor
dec
std
jns
das
icebp
push
push
xchg
mov
fdivl
add
lds
les
ss
lds
clc
jg
and
pop
push
data16
or
jecxz
lret
dec
xor
inc
jmp
xchg
dec
and
scas
loopne
jnp
ficompl
test
negb
adc
dec
dec
imul
and
dec
jg
std
pop
test
jmp
insb
repz
cli
mov
lahf
and
clc
enter
jp
test
clc
sbb
in
insb
sub
mov
rorl
add
repz
xor
xchg
cmp
cmpb
fcmovnbe
in
cmp
clc
xchg
mov
outsl
or
push
adc
into
and
lret
sub
daa
sbb
test
adc
add
pop
and
rcrb
fidivrl
mov
addr16
es
rcl
ret
or
mov
stos
jns
call
lds
add
arpl
pop
jle
sahf
in
inc
pop
dec
mov
andl
das
lods
mov
jae
cmpl
repnz
cmp
dec
test
aas
cltd
leave
push
sbb
sub
sub
fsts
fcoms
repnz
adc
or
mov
sub
adc
loope
sub
aas
sti
xchg
mov
mov
clc
sti
cltd
test
pop
inc
push
in
xchg
or
inc
les
test
mov
test
sub
inc
mov
mov
loopne
sbb
mov
das
clc
xchg
adc
mov
adc
xor
mov
lahf
shl
inc
loope
inc
pop
jmp
cmp
dec
pop
repnz
pop
scas
lret
in
adc
into
das
aam
dec
push
int3
test
fdivl
push
gs
gs
jae
inc
cld
mov
js
pop
rorb
pop
cmc
push
js
ja
insl
pop
fisubrl
scas
lods
xor
insl
imul
inc
cmp
cwtl
loopne
in
test
sbb
pop
jle
test
cmpsl
rorl
lea
xor
outsb
mov
scas
dec
cmp
jecxz
or
int3
push
incb
mov
fcomps
dec
sbb
mov
sbb
ss
mov
or
iret
out
fwait
into
dec
inc
jmp
mov
cs
add
and
mov
mov
movsb
pop
out
hlt
xchg
je
add
adc
aad
out
shll
lock
nop
or
pop
sub
shlb
mov
ret
mov
inc
mov
idiv
popf
jp
repnz
xchg
mov
test
lods
insl
out
mov
mov
add
lret
inc
lcall
mov
add
pusha
stos
push
pop
enter
mov
xor
in
pop
inc
dec
add
rorl
outsb
int
gs
xor
mov
daa
clc
test
fbld
add
xchg
xchg
xor
sbb
inc
push
inc
push
push
out
xchg
cmp
popa
icebp
push
mov
imul
mov
sub
outsl
in
dec
lret
mov
ds
jge
stc
fnstcw
fisubl
scas
cmpsb
push
aam
imul
aam
rcll
sub
filds
pop
fnstenv
add
sub
lret
pop
fidivrs
fistpl
dec
popa
jl
lods
cmp
cwtl
fmull
adc
xor
and
int
insb
pop
mov
jle
mov
cld
std
dec
std
mov
ja
jo
dec
iret
mov
repz
fimull
mov
dec
dec
push
insb
cld
loop
cmpsl
push
or
pushf
xor
cmp
fwait
imul
jbe
xchg
cmc
popf
call
fldcw
lret
pop
dec
int
gs
jg
out
in
adc
lods
daa
lret
and
ja
lock
sbb
ljmp
jmp
outsl
mov
call
xchg
cmpsb
scas
adc
mov
xchg
jmp
jbe
push
push
incl
rcrl
popa
jl
mov
xor
repnz
or
iret
das
int3
adc
push
dec
jno
cmpsb
push
mov
shll
xor
inc
cmp
sbb
pop
mov
mov
pop
xchg
flds
into
xor
xor
ja
mov
mov
dec
cmp
and
loope
xor
popf
std
iret
pop
stc
cld
in
ja
pop
stc
ja
push
push
aad
adcb
test
push
push
in
shll
cmpsl
dec
lcall
pop
fidivrs
mov
cmp
cld
test
int
fnstcw
push
stc
inc
je
xchg
mov
jae
or
je
test
or
nop
dec
enter
sbb
mov
jecxz
add
aaa
xchg
ret
push
je
jns
aam
xchg
sahf
movsb
shr
in
femms
in
int3
dec
push
dec
dec
sub
mov
mov
dec
push
mov
insb
sti
cwtl
ss
fsubs
ficoml
lods
mov
out
mov
test
inc
nop
or
pop
sub
shll
mov
add
ds
nop
pop
mov
mov
push
dec
cmp
push
addr16
mov
mov
push
cwtl
jmp
mov
push
mov
pop
data16
add
cmpsb
dec
cmp
fisubrl
stos
pop
ss
pop
jo
stc
pusha
aam
mov
aad
and
shlb
lds
popf
inc
inc
ret
je
pop
jle
mov
sbb
scas
dec
or
xchg
icebp
daa
mov
lods
xor
push
outsb
int
or
dec
insl
pop
sub
and
cmp
aas
add
and
mov
out
lcall
aaa
pop
imul
adc
imul
icebp
push
daa
cmpsl
sbb
cmpsl
and
das
loope
arpl
call
loope
jge
testl
sbb
push
mov
icebp
inc
xchg
xchg
push
push
xchg
adc
int
cmp
xchg
mov
pop
sub
lds
popf
dec
mov
jg
xchg
paddw
cmp
lods
pop
cmp
pop
jecxz
shll
mov
shrb
ds
pop
data16
dec
fsubrp
arpl
popa
shll
fistpll
popf
lock
pop
js
mov
xor
idivl
das
mov
int
lods
into
leave
lea
xchg
inc
mov
add
fidivrs
sbb
fcompl
int
sub
test
scas
das
and
jmp
sub
imul
mov
fbld
mov
sbb
rclb
into
in
xchg
dec
icebp
imul
out
rorl
fcomps
outsb
enter
fwait
lret
fiadds
test
cmc
inc
mov
jge
xor
push
push
mov
adc
mov
repnz
inc
adc
iret
das
sub
aas
adc
iret
inc
inc
mov
outsl
ret
push
dec
mov
cwtl
clc
jmp
push
jne
iret
arpl
shll
leave
pop
mov
jle
jmp
xchg
adc
xchg
popa
shrl
jge
adc
sbb
mov
cmp
insb
pushf
jnp
fcoms
xchg
push
xchg
ret
stos
mov
mov
in
and
pop
cld
cmpsb
lds
loopne
cmp
mov
in
in
cwtl
cltd
jbe
fcmovne
mov
pop
ds
int
dec
stc
enter
adc
or
jae
mov
lock
sub
jp
outsb
sub
sub
inc
mov
aam
lret
stos
xlat
jecxz
mov
adc
and
test
inc
in
add
dec
pusha
inc
bound
jecxz
inc
cld
fcompl
push
ds
cmp
push
mov
out
shl
xchg
adc
lea
push
push
xor
add
sub
and
pop
insb
mov
adc
mov
cmp
popf
cmp
pusha
mov
lahf
jle
repnz
bnd
sbb
mov
mov
cmpsl
jnp
add
push
in
and
jg
jg
dec
xchg
cwtl
iret
mov
add
mov
lea
fimull
and
lret
lea
jecxz
fs
add
pop
mov
push
inc
cmp
cmp
xor
iret
jecxz
cmc
jno
adc
jo
insb
jl
es
subb
inc
and
jne
aas
pop
jg
add
inc
pushf
mov
insb
jl
xchg
mov
iret
push
outsb
les
push
repnz
xchg
cld
push
xchg
data16
shlb
and
mov
and
negl
mov
pop
dec
cltd
out
jo
jo
imul
iret
ljmp
lret
rcrb
sub
popf
jl,pt
pop
movsl
fnstcw
cwtl
lret
pop
pusha
je
push
insl
jns
xor
xor
or
or
test
and
loopne
loopne
fidivrs
cmc
pop
mov
cwtl
push
adc
jmp
inc
rcrb
or
sbb
lds
inc
mov
add
mov
js
aaa
mov
fnstcw
cwtl
pop
fdivrl
popf
push
in
fldl
lods
sbb
js
out
lcall
and
arpl
xchg
test
inc
outsb
aam
sahf
pushf
mov
add
cli
fdivrs
jmp
dec
fcmove
sbb
jnp
cs
mov
jns
push
imul
push
data16
in
int3
sbb
lahf
inc
ljmp
and
sub
dec
and
outsl
insb
mov
add
test
cmp
jecxz
mov
add
sbb
cwtl
enter
mov
adc
cmc
mov
aaa
rcl
dec
jb
test
cmp
ret
ds
pop
and
arpl
call
xchg
test
gs
cli
subl
inc
rolb
int3
ret
jno
dec
lods
dec
sub
les
cmp
and
or
addl
cmp
and
movsb
sbb
lcall
ficomps
outsb
cmpsb
fistpll
scas
push
xor
fsubrp
inc
enter
js
and
ret
or
fcmovne
adcl
xchg
push
int
and
mov
loope
or
aam
mov
push
out
sahf
lcall
mov
push
add
inc
test
clc
dec
add
cld
negl
lock
mov
mov
cs
rorl
jg
adc
xchg
in
into
loop
repnz
inc
inc
decb
jp
mov
pop
mov
xchg
push
negb
xchg
insl
mov
dec
cmc
pop
test
daa
dec
inc
adc
push
insl
arpl
inc
mov
ja
test
data16
cmp
push
mov
xlat
fistpl
mull
pop
aam
jmp
pop
jno
sbb
and
inc
pusha
std
loopne
cmp
lahf
js
mov
pop
in
fistpl
xor
lods
add
pusha
rorb
imul
js
jmp
cwtl
pop
sub
movsl
mov
cwtl
lahf
pop
sbb
sbb
cli
fsubs
movsl
aaa
cmp
push
aaa
iret
shrl
andl
int3
dec
jo
mov
lods
call
test
mov
test
mov
ja
sbb
notl
push
jno
in
clc
xor
shll
jmp
popf
test
stos
add
daa
mov
in
xor
jp
cmp
xchg
push
mov
and
adcl
jns
dec
cmp
test
add
adc
mov
or
dec
xchg
jne
xor
notb
adc
pusha
ds
or
inc
fxch
inc
fwait
pop
inc
lds
sbb
xchg
pop
cs
ret
loope
xchg
xchg
cmc
adc
aaa
jae
xor
lret
fadd
int
mov
xchg
int3
addr16
stc
mov
xlat
sbb
cmp
fidivrs
jl
das
lret
aam
xchg
test
std
push
shlb
lods
or
stc
mov
inc
in
mov
jge
mull
mov
andb
xlat
xor
shll
outsb
or
sub
jl
cmpsl
pop
cwtd
lods
out
ret
inc
mov
mov
push
pop
std
pop
mov
cwtl
xchg
mov
jnp
jb
insb
loopne
dec
mov
mov
gs
sub
lcall
mov
jg
ds
lods
push
cwtl
clc
sub
push
push
push
mov
mov
out
repnz
rorb
push
repz
ds
std
push
out
and
or
pop
imul
adc
xchg
sbb
cmp
jge
cld
data16
xchg
sub
jp
fisubrl
push
xchg
popf
inc
enter
mov
xchg
and
jecxz
mov
push
push
xchg
sbb
notl
jne
xor
push
dec
test
mov
fmuls
or
cmpsb
in
sub
push
bound
jecxz
call
sti
pop
xchg
fsubs
xchg
adc
xchg
push
cmp
jl
adc
or
mov
mov
test
cmpsl
xchg
and
pusha
pop
lret
shl
lret
std
lcall
je
std
fimuls
popf
jns
rcrl
jne
aad
aad
jmp
cmp
sahf
arpl
jle
mov
pop
fbld
in
pop
cmp
rcll
sbbl
cs
pop
dec
mov
dec
addr16
arpl
rorb
jb
or
dec
sub
sbb
and
mov
jecxz
clc
jb
xor
test
dec
push
pop
scas
iret
iret
test
push
dec
xchg
sahf
leave
adcl
movsb
stos
pop
loop
movsl
add
or
jecxz
mov
mov
mov
cmp
push
xchg
scas
shlb
dec
data16
inc
mov
pop
mov
stc
sbb
lcall
ds
mov
inc
mov
repnz
add
in
lods
cwtl
movsb
push
loop
or
sub
and
call
das
ret
add
sbb
les
aam
push
push
clc
xor
xor
or
loope
call
sub
test
aas
and
ds
pop
add
lea
inc
jle
repnz
cli
pop
push
push
lock
insb
dec
lods
call
gs
and
testl
pop
fsubp
sbb
sahf
stc
jns
pop
pop
std
call
mov
insl
cltd
div
ljmp
add
in
movsl
jmp
lock
mov
fstp
push
sbb
out
jp
pop
cld
sbb
fsts
mov
xlat
or
xchg
mov
imul
add
pop
into
push
jle
lds
push
jo
add
das
out
ss
insb
sbb
adc
in
repnz
push
jb
xchg
aam
add
sub
call
lds
jle
mov
ror
sbb
iret
iret
ja
mov
cmp
xchg
repnz
dec
mov
jb
cwtl
xorb
dec
or
mov
mov
mov
jmp
or
pop
mov
sbb
sub
jle
dec
push
xchg
pause
shlb
push
jge
lods
sahf
dec
pop
pop
xchg
fwait
or
cmpsl
and
lds
cmpsl
and
cmc
sti
pop
gs
mov
sbb
fstpt
cltd
push
xchg
icebp
inc
das
sbb
divl
mov
hlt
aam
xor
cmpsl
daa
dec
push
lret
jecxz
inc
imul
fsubs
movsl
aaa
cmp
pop
sbb
or
into
fildll
jl
dec
xchg
push
pushf
int3
lods
or
popf
cld
pop
ljmp
cmpsb
push
mov
inc
movsl
ds
jge
add
das
add
lahf
xor
call
jne
push
scas
mov
sub
testb
sub
stc
xor
inc
mov
jg
mov
sbb
mov
mov
into
fidivrl
sbb
clc
mov
sub
out
out
lea
pop
rclw
rcrb
mov
pop
ret
adc
test
xchg
push
jne
or
repz
notl
inc
lods
or
push
sbb
xchg
aas
call
movsb
and
add
rcrb
pop
pop
testl
and
push
mov
xor
sub
dec
int
shlb
in
dec
push
and
add
cmp
fsubrl
mov
mov
aam
pop
outsl
mov
lock
push
jae
or
rolb
test
mov
inc
mov
push
sub
cmp
ss
xlat
sbb
push
jne
push
dec
stos
outsl
mov
jo
aam
add
sub
mov
daa
or
mov
lahf
mov
mov
idiv
pushf
clc
sub
push
mov
mov
lock
das
popa
dec
test
arpl
dec
cmpsl
iret
mov
adc
cmpsb
mov
test
push
jp
cmp
cs
mov
je
clc
scas
jne
xor
xchg
cs
dec
dec
out
outsb
dec
sub
push
dec
lret
test
sarl
jnp
xor
in
inc
mov
inc
cmp
loopne
int
cwtl
jbe
xchg
cmc
push
mov
sti
pop
xchg
xchg
and
test
outsb
mov
stos
or
daa
xchg
loope
adc
jecxz
xchg
popf
popf
lock
je
jp
xlat
xor
cld
sbb
jo
ret
dec
lods
cmpsl
cmpsl
mov
xchg
push
cwtd
ss
inc
mov
mov
in
inc
mov
cwtl
inc
cltd
lods
pop
ds
repz
je
nop
mov
scas
xchg
xchg
int3
enter
test
push
jmp
jne
in
fidivs
mov
in
pop
mov
scas
jne
stc
adc
arpl
push
insl
adcb
cmpsl
pop
mov
flds
in
mov
jg
jge
loope
out
imul
push
push
or
mov
mov
xor
or
sub
gs
xor
pop
jle
add
pop
iret
mov
fnstcw
inc
xchg
repnz
add
pop
xor
ror
lods
gs
mov
or
daa
push
lcall
or
mov
push
cmp
jp
lods
fwait
notl
mov
movsb
pop
xchg
xchg
mov
jo
pop
decb
rclb
lret
xchg
dec
imulb
lds
adc
jb
jge
pop
push
fisubrs
cmp
aam
repnz
jo
jp
mov
pushf
out
imul
call
mov
and
mov
arpl
mov
sbb
movsb
js
imul
pop
hlt
shll
nop
arpl
scas
push
insl
call
sbb
cmp
cmp
in
adc
popa
shrl
lods
loope
out
lcall
mov
mov
xor
rep
jns
je
inc
lahf
testl
sub
cmpsl
push
adc
mov
cmpsl
mov
jle
add
rcr
ffreep
mov
cltd
xchg
and
dec
jb
adcb
in
xorl
inc
push
lcall
insl
das
add
out
mov
push
pop
dec
test
push
div
shlb
out
xor
out
mov
jo
imul
imul
popf
and
repnz
test
orl
xchg
sub
jbe
cmp
test
mov
and
js
jo
insl
mov
repnz
or
lret
and
inc
pop
inc
pop
mov
int3
jmp
sarb
ss
iret
inc
rcr
cmp
mov
ds
push
jae
test
pop
sub
scas
pusha
fimull
inc
imul
movsb
fcoml
push
in
in
fdivrp
and
xor
xchg
jns
cmp
mov
xchg
xlat
and
loopne
push
std
xor
shrb
and
mov
loopne
sbb
insb
ja
stc
mov
mov
gs
aas
aaa
xchg
cmp
adcl
jnp
sbb
ja
dec
push
sarb
test
mov
jp
fildl
rol
add
jns
add
lock
cmp
jne
cmc
arpl
into
sub
mov
sub
cld
or
cmp
je
mov
fcmovnu
lahf
loope
push
xchg
hlt
popf
cwtl
movsb
mov
push
sti
cmpsl
mov
sub
iret
pop
lds
mov
popf
out
adc
mov
sub
sub
fistpl
cmp
pusha
mov
and
out
push
mov
dec
call
adc
cmp
es
imul
or
pop
stos
mov
cld
pop
das
loope
mov
iret
clc
push
insl
sub
bound
std
dec
dec
repnz
pop
lea
inc
inc
gs
xor
jge
call
sbb
iret
dec
cmp
dec
adc
mov
dec
outsb
xor
adc
lds
out
push
lahf
decb
mov
mov
add
notb
pop
aas
dec
dec
in
jne
fsts
test
push
scas
test
mov
out
xchg
inc
dec
dec
das
cs
out
pusha
mov
cs
sbb
sub
das
xchg
cwtl
popf
cwtl
cmpsb
fdiv
push
cld
pop
push
stos
mov
jo
push
jbe
mov
mov
cltd
and
jle
mov
pop
fidivrs
lahf
sbb
pushl
xchg
repnz
mov
mov
addr16
push
and
push
std
inc
sahf
pop
cbtw
or
iret
and
mov
sbb
ja
cwtl
xchg
pusha
ss
cli
mov
fbld
and
lods
push
arpl
mov
jmp
gs
xor
jae
jecxz
fsubl
jle
movsb
sbb
inc
add
mov
sbb
push
outsb
push
scas
ljmp
xchg
add
push
sub
xchg
aas
jle
loopne
aaa
aam
push
mov
xlat
xchg
push
jmp
in
pop
inc
xchg
dec
dec
lods
mov
lret
sbb
dec
push
and
aas
fincstp
mov
mov
xchg
stc
cld
idivl
stos
push
mov
push
fists
shr
repnz
jle
inc
sub
andb
pusha
popa
jp
mov
cmp
add
scas
mov
xlat
int3
jg
imul
push
mov
leave
sub
jecxz
and
lods
notl
jns
rcll
shl
xor
test
jne
cmp
repnz
sbb
scas
xor
xchg
push
cmp
insb
rorl
lret
cmp
inc
insb
sub
cmc
mov
jmp
mov
cwtl
neg
clc
cmc
mov
mov
rclb
adc
and
or
lds
nop
xlat
in
ret
xor
es
xor
pushf
mov
jns
jns
push
push
push
dec
push
rclb
sub
imul
lods
stos
test
or
push
xchg
loop
mov
ss
pop
pop
xor
hlt
repnz
push
push
xchg
add
or
lret
in
xchg
out
or
test
gs
pop
xchg
mov
pop
dec
fnsave
testl
adc
push
cs
xchg
ljmp
or
lahf
cltd
addr16
inc
xchg
ret
mov
mov
mov
pop
sbb
dec
je
into
pop
data16
adc
sbb
lret
out
push
icebp
xor
gs
ror
sarb
cmp
lea
outsb
pop
repnz
xlat
sbbl
rcrb
shrl
mov
mov
sbb
loopne
loope
aaa
mov
xlat
xchg
jecxz
pop
fnstenv
in
jne
fbld
push
iret
sub
push
int3
dec
sub
fidivrs
lods
or
mov
jle
out
dec
fnstsw
pop
jl
fdivrs
pusha
je
rolb
aam
mov
rcl
stos
test
popf
test
push
pop
mov
cld
and
popa
push
fstpl
jp
jle
mov
push
popf
mov
insb
insb
xchg
push
add
or
lock
inc
and
imul
jle
jnp
dec
fcompl
divl
aad
push
push
xor
push
sbb
mov
and
jmp
les
iret
scas
mov
pusha
and
mov
lret
iret
fnstcw
inc
pop
fcoml
repnz
mov
outsb
or
dec
int
mov
mov
inc
daa
xchg
adc
jecxz
and
lahf
pop
and
inc
sbb
test
adc
cwtl
notl
cmp
outsl
into
js
test
aam
sub
cmpsl
add
dec
inc
mov
pop
cmp
xor
jp
or
xor
jne
xor
mov
cmp
mov
outsl
inc
xchg
adc
cmpsl
loop
jne
push
mov
nop
mov
pop
flds
fstpl
jle
xor
mov
mov
insb
add
jg
jle
jmp
pusha
mov
add
call
jns
mov
adc
repnz
sbb
cltd
dec
scas
lea
dec
jmp
inc
sbb
test
gs
in
mov
int3
lods
mov
cmp
lret
adcl
daa
mov
xchg
das
add
out
inc
mov
or
ficoml
out
mov
xlat
sbb
call
sbb
jnp
sbb
cwtl
mov
pop
outsb
adc
rcr
mov
push
cmc
push
inc
pop
xchg
jmp
push
cmp
js
aam
cli
pop
mov
xor
negl
jbe
lds
ret
stos
or
into
adc
sub
or
mov
out
lret
pop
sbb
loopne
cmp
pop
cmp
aam
mov
fistpl
arpl
insl
clc
dec
jg
sub
data16
pusha
scas
aam
mov
jg
xchg
pop
outsl
subl
add
jb
es
aad
or
repnz
mov
lock
lods
or
jns
call
lds
sbb
mov
jle
fdivrl
or
cwtl
imull
cmc
push
mov
pop
shlb
xchg
arpl
adc
sub
adc
or
cmp
ffreep
inc
fldenv
jecxz
outsb
mov
fidivs
push
sti
fnstcw
cwtl
imul
loop
xchg
adc
xorb
sub
mov
rclb
lcall
mov
jg
fnstcw
imul
mov
inc
sbb
jo
add
cmp
out
sub
test
mov
pop
loop
jge
std
popf
pop
jbe
and
jmp
xchg
jne
dec
xor
aad
dec
scas
shr
or
cltd
insl
jmp
movb
mov
xchg
jg
mov
or
stc
xchg
mov
ss
rcll
adc
jmp
jp
push
sbb
jns
lds
push
inc
cmp
jb
mov
and
cmp
jb
lret
popa
xchg
xchg
movsb
xorb
outsb
add
mov
daa
cli
mov
aam
mov
jg
jb
mov
mov
cwtl
ret
cmc
push
inc
inc
mov
sub
mov
loopne
or
cld
or
mov
in
mov
push
push
mov
xor
int3
out
mov
inc
push
mov
punpckldq
in
dec
repz
shr
into
loopne
sub
mov
cmp
fldl
aam
ds
fstpt
sbb
xchg
shr
mov
inc
dec
dec
rorb
out
sub
push
outsl
mov
or
add
arpl
and
call
pop
mov
int
xor
repz
repnz
adc
sub
inc
cmpsl
push
xchg
or
and
adc
cmp
pop
jns
testb
push
adc
repz
xor
aad
inc
pop
pushf
dec
dec
insl
scas
popf
jno
xchg
adc
mov
jecxz
mov
jge
pop
stc
push
mov
pop
pop
xchg
notl
adc
xor
inc
pop
xchg
in
cmovg
adc
sub
imul
inc
and
and
pop
mov
mov
ds
mov
xchg
mov
imul
dec
out
push
popa
or
jg
in
push
push
shlb
mov
inc
mov
pushf
jnp
mov
clc
push
mov
xchg
mov
test
iret
insl
int3
or
jle
insl
jmp
subl
dec
mov
popl
mov
mov
mov
insl
mov
jo
fmull
pop
iret
lret
call
adc
mov
jg
popf
popf
adc
sbb
ror
xchg
xlat
mov
inc
push
shlb
sbb
into
insl
xchg
dec
dec
outsb
imul
mov
add
and
sbb
add
jecxz
faddl
sbb
mov
lcall
sbb
into
imul
mov
or
aas
stos
mov
or
sub
icebp
push
xchg
ret
jle
push
mov
mov
cwtl
negl
hlt
fcoms
out
in
xchg
lods
insb
mov
push
pop
cmpsb
daa
inc
int3
and
jg
loopne,pt
pop
sbb
mov
jo
push
aam
mov
shrl
push
insl
out
push
test
or
cmpsl
addb
mov
sbbb
rcrl
lcall
jbe
xor
push
sub
daa
int3
jg
mov
ljmp
inc
ret
inc
and
pop
jnp
jle
cmp
scas
mov
cwtl
idiv
mov
mov
fwait
lock
shrl
stos
cmp
into
sub
movsb
mov
mov
lahf
jne
inc
pop
sbb
aaa
mov
rcll
jb
dec
cs
adc
dec
jmp
movsl
add
testb
mov
mov
cltd
notl
pop
dec
pop
push
pusha
les
das
xor
dec
or
or
cmp
arpl
xchg
ret
loopne
push
jne
sbb
sbb
testl
mov
mov
daa
cs
insl
int3
dec
int
insb
mov
sub
insl
ret
inc
in
mov
repnz
rcl
cmp
dec
cli
jnp
aad
xchg
push
icebp
mov
or
push
insl
out
loope
push
push
jb
rorb
pop
or
jle
les
add
jno
jle
and
jns
mov
cmp
xor
outsb
int
mov
jmp
dec
insl
and
mov
rcrb
movsb
pop
pusha
sbb
fnstcw
cwtl
idiv
aad
jne
testb
cmpsb
adc
das
adc
nop
or
les
lds
data16
add
sbb
sbb
aas
mov
xchg
xchg
adc
mov
out
sub
sub
scas
insl
call
movsb
pop
dec
adc
out
popf
cmp
xchg
scas
xchg
push
mov
sbb
xor
outsl
nop
jp
call
xor
sub
mov
sub
mov
and
into
mov
cwtl
inc
cltd
xor
loopne
jbe
idivl
hlt
jno
adc
rorb
mov
test
ljmp
loop
cmpsb
cld
or
mov
subl
lcall
mov
push
loopne
mov
xor
adc
mov
gs
bound
dec
les
out
jle
jg
xor
push
sbb
inc
jge
pushf
mull
jns
cmp
in
repnz
jo
icebp
or
lcall
dec
cmp
daa
in
pop
xchg
jp
mov
cltd
push
loop
sbb
mov
addl
or
jecxz
sub
or
jg
into
sub
pop
es
jmp
sbbl
mov
xchg
hlt
cld
jne
out
cmp
repz
xchg
push
xchg
out
add
rclb
add
flds
daa
movsb
mov
jg
lahf
xchg
dec
inc
sar
jp
sbb
jns
xor
push
insb
inc
pusha
sti
fistl
imul
sub
in
mov
add
pop
fwait
jbe
cld
cld
outsl
mov
jns
loopne
lcall
je
fwait
lock
in
jae
outsb
push
mov
stos
or
inc
movsl
out
lds
sbb
lahf
inc
arpl
data16
aaa
jecxz
xchg
mov
pop
mov
into
push
push
dec
jo
xchg
mov
lods
pop
xor
cmpsb
add
xor
mov
rcl
xchg
in
std
push
je
clc
lea
push
mov
jo
adc
leave
out
or
imul
sub
dec
fiadds
aam
sbb
sub
cmp
push
jne
push
into
mov
push
add
or
push
mov
insb
and
movsl
popa
shll
cmp
xchg
pop
loopne
popf
cmpsb
adc
repnz
jbe
aad
test
push
imul
mov
inc
imul
cmpsb
in
jecxz
mov
sbb
pop
ficoms
mov
jne
add
aam
push
ljmp
jae
xchg
or
daa
out
lods
and
les
ljmp
pop
out
loopne
cmpsb
pop
xchg
cld
adc
xor
dec
xor
or
push
mov
mov
lds
rcrl
pop
sbb
lods
pop
aad
push
icebp
in
sti
aad
push
test
iret
dec
lods
dec
lea
jmp
ret
pmaxsw
fs
sbb
and
pop
jnp
cmp
or
mov
and
rcll
push
orl
arpl
lock
fldenv
jg
mov
sbb
and
fstps
clc
mov
inc
jb
outsl
or
dec
sub
xor
mov
push
lds
sarb
ret
sbbb
cmpl
push
xchg
mov
sub
and
sub
repnz
mov
mov
ss
xchg
jo
sbb
inc
mov
jle
dec
shrl
mov
fwait
je
xor
int3
inc
xor
and
add
decl
ret
inc
sbb
sbbl
sbbl
cwtl
jp
out
jno
fisttpl
adc
mov
jmp
in
jne
lahf
jg
mov
sbb
jnp
mov
adc
adc
cs
push
xchg
mov
xchg
mov
pushf
jecxz
sbb
rcrb
ret
cld
pop
push
xchg
jl
ss
jne
out
outsl
iret
cs
push
lock
dec
jmp
call
sub
mov
fs
addb
mov
cmp
and
pop
push
ja
ss
scas
push
xor
jo
arpl
arpl
pop
or
or
incb
inc
mov
push
adc
aas
cld
xchg
cmc
aaa
cmp
fldt
cltd
iret
test
imul
cs
les
leave
inc
cmpsl
jecxz
mov
pushf
sti
and
filds
jo
lcall
xor
mov
icebp
adc
pop
cmp
pop
dec
inc
lea
popf
lods
pop
mov
pop
clc
popl
fnstcw
sbb
clc
ss
notl
sarb
jb
sub
in
and
sub
daa
and
cmpb
sti
mov
dec
rcl
xor
jb
xor
add
mov
out
mov
int3
sub
fbld
std
pop
mov
lahf
mov
and
lds
cmp
mov
into
sub
in
daa
lods
cmc
pop
adc
or
ljmp
cmpsb
lcall
rorb
jl
cmp
lahf
cwtl
mull
jns
mov
xor
dec
mov
mov
mov
inc
and
mov
popa
mov
cmp
rolb
mov
mov
xor
sbb
test
sbb
imul
push
inc
sub
inc
xor
add
add
pop
inc
fbld
lcall
sbb
push
pop
divb
adc
xchg
xchg
into
rclb
jne
jecxz
or
call
push
jbe
inc
in
lods
cli
add
add
rcrb
fidivrl
in
or
push
in
xor
mov
mov
lea
push
mov
adcl
out
xlat
hlt
sbb
mov
ss
negb
pop
cli
mov
jns
shl
repz
cs
dec
dec
fs
inc
push
mov
cmpsl
mov
pusha
into
add
xor
add
mov
lcall
inc
xchg
adc
mov
mov
mov
sub
push
data16
pop
fs
mov
inc
add
xor
jne
lods
push
jno
in
dec
sti
sub
xor
jecxz
rclb
std
cmp
fnstsw
test
inc
lcall
mov
cmc
in
mov
sub
bound
popa
lea
pushf
cmpsb
test
cltd
out
jp
add
in
out
pop
clc
mov
int3
stos
pop
xchg
jle
sar
jp
jb
mov
aad
daa
jl
mov
imul
inc
mov
inc
es
lds
pop
stos
insl
popa
pusha
mov
iret
fidivrs
out
push
xchg
rcll
xchg
jae
xor
scas
push
or
lock
xchg
add
inc
pushf
cmp
and
inc
mov
outsb
ret
stos
aad
xchg
outsb
pop
cmp
jne
iret
fwait
shll
mov
mov
mov
call
int
dec
jecxz
lods
add
xor
mov
mov
adc
lds
xchg
repnz
dec
das
das
mov
mov
lds
xor
and
add
test
jo,pt
clc
mov
icebp
stc
push
mov
dec
sub
adc
data16
nop
lock
sub
pushf
mov
dec
mov
mov
inc
mov
pop
icebp
and
jp
sub
stos
pop
in
xchg
pop
jo
in
aam
mov
in
lret
pop
sub
push
gs
movsb
mov
fsubrp
rol
rclb
pop
cmp
ja
push
xchg
rcll
jl
xor
scas
push
xor
out
or
dec
orl
add
pop
ds
mov
jg
mov
cld
pop
mov
xor
sub
xchg
repnz
js
lods
or
imul
lcall
popa
mov
pop
and
jp
rclb
jne
xor
push
push
mov
inc
dec
add
imul
mov
dec
inc
fcmove
and
popa
sub
sbb
fsts
clc
push
mov
cli
aam
mov
repnz
or
push
jb
popa
adc
imul
pop
lret
pop
jp
xchg
test
mov
sbb
adc
jns
push
cmc
pusha
mov
mov
fnstsw
xor
mov
add
out
mov
add
in
cmpsl
stos
mov
sbb
jmp
cmpb
jecxz
ljmp
cs
cwtl
fwait
sbb
cmp
shll
push
mov
dec
inc
jb
int3
daa
imul
mov
jnp
push
xchg
pushf
popf
lock
mov
push
push
jp
imul
adc
lock
daa
push
addb
popf
sbb
push
or
or
cmpsl
inc
inc
dec
push
arpl
fcompl
lcall
mov
repnz
mov
push
iret
jb
jecxz
dec
lods
int3
enter
dec
call
add
ret
xor
andb
jns
sbb
and
cld
push
rol
fcoms
dec
adc
xchg
adc
dec
or
mov
cmpsl
outsl
pop
lret
ss
loope
lahf
jae
push
cmp
fidivrl
cwtl
inc
and
cli
jne
loopne
xlat
push
cmc
jbe
adc
xor
test
ljmp
imul
inc
and
and
pusha
fdivrl
popf
cld
pop
jl
mov
mov
dec
or
xor
lock
scas
ficomps
stos
lods
int
lret
out
adc
dec
mov
test
mov
push
xchg
cwtl
mov
push
adc
mov
sub
jb
popa
arpl
xlat
sub
add
mov
jge
mov
lcall
sbb
adc
mov
mov
icebp
dec
dec
push
jecxz
add
mov
addb
std
mov
cwtl
mov
sbb
repnz
sbb
xlat
je
dec
je
xor
or
or
adc
adc
and
ljmp
push
repnz
sbb
and
out
xchg
mov
cld
mov
xchg
adc
sub
dec
cli
mov
ljmp
fsubl
mov
inc
filds
std
cld
mov
cwtl
lcall
cmpsl
jns
xchg
lock
xor
lcall
enter
inc
inc
test
and
jg
insl
sbb
scas
cmp
fnstcw
pusha
mov
xor
imul
xor
enter
sti
mov
sub
sbb
lea
jecxz
stc
loopne
lcall
lahf
jnp
cmp
bnd
aaa
mov
xchg
stos
push
sbb
jo
xor
rorl
adc
cs
mov
add
test
add
ret
sahf
les
mov
mov
cmc
adc
test
pop
xchg
sub
mov
mov
xchg
mov
jg
loope,pt
pop
sbb
mov
mov
xchg
xor
arpl
out
dec
gs
sub
enter
mov
jb
pop
popf
cld
add
mov
jge
adc
int
mov
xchg
and
outsl
aas
mov
jmp
loope
imul
es
jecxz
mov
sti
adc
push
fwait
cmp
xchg
cwtl
pop
mov
aam
jmp
push
mov
xor
push
jo
imul
mov
imul
ret
mov
pop
mov
cmp
mov
icebp
jae
aad
xchg
mov
cmp
in
xchg
mov
adc
dec
add
popa
lea
cmp
aas
cwtl
pop
and
js
xchg
pop
imulb
adc
pop
adc
shl
pop
lods
dec
int3
mov
das
and
movsb
mov
loopne
andl
mov
fildl
dec
cli
mov
outsl
mov
nop
mov
mov
into
out
outsl
arpl
fmul
daa
push
gs
jo
arpl
push
pop
pop
mov
sbb
cmp
pop
xor
push
rorb
jl
jno
nop
jmp
insl
pop
push
xchg
test
add
or
std
rolb
inc
pusha
pop
dec
jle
cmp
js
mov
fdivs
and
out
adc
dec
sub
insl
xor
stos
test
inc
insl
rcrb
ds
andl
dec
lcall
mov
das
repz
mov
je
out
inc
lock
movsl
and
and
mov
mov
sahf
sbb
fistl
jnp
pop
xlat
lret
filds
aam
ljmp
enter
xor
cwtl
enter
movsb
and
inc
inc
nop
incb
xor
cmp
mov
stc
scas
das
sub
icebp
lret
out
and
into
popl
lcall
jge
inc
pop
pop
cld
ja
cmp
mov
adc
outsl
repz
or
dec
out
adc
and
xchg
mov
inc
or
lock
mov
and
js
std
mov
stc
jp
pop
pcmpeqb
jns
outsl
andl
jo
shrb
cpuid
lret
shlb
aaa
test
mov
jb
cld
fcompl
push
ret
xchg
push
xor
clc
dec
xor
sub
aam
mov
mov
mov
inc
inc
mov
sbb
outsb
fdivrs
scas
or
and
dec
pop
pushf
jl
sub
shll
mov
cwtl
out
sub
lea
mov
in
jmp
movsb
and
aas
pop
pop
aam
arpl
popa
insl
fsubrp
scas
aam
pop
xor
sub
push
scas
dec
outsb
scas
lods
test
and
test
lods
bound
inc
test
mov
sbb
cmp
outsb
jnp
pop
sbb
jae
cwtl
push
lock
xor
es
xchg
and
test
push
ret
xchg
sbb
sti
pop
push
in
adc
cmp
icebp
xchg
xchg
xchg
sahf
or
mov
cmpsb
jo
lods
cmpsb
add
sub
jle
mov
xchg
cmp
subb
pop
das
mov
xchg
hlt
je
jle
mov
cwtl
lds
adc
cs
push
and
lds
cs
add
pop
call
fisttpll
sbb
cmp
jno
or
loop
insb
lret
sub
call
mov
push
arpl
push
pop
sub
jle
mov
mov
jnp
rcrb
adc
imul
mov
mov
pop
xchg
je
mov
js
and
out
popf
or
icebp
aas
add
pop
push
addr16
cmp
hlt
lcall
xor
test
inc
or
int3
bts
bound
pop
test
out
xchg
rclb
jecxz
sbb
mov
sahf
mov
cltd
movq
fidivrs
mov
outsl
in
pop
lea
dec
or
out
sub
add
push
and
push
movsb
std
xlat
mov
pop
clc
sbb
sbb
cli
push
inc
push
and
xorl
call
dec
mov
movsb
jp
adc
cli
cltd
jp
or
clc
jmp
push
jne
xchg
xchg
mov
mov
mov
imul
in
add
ficompl
pop
fidivrs
popf
std
pop
push
xchg
neg
cmp
adc
push
mov
xor
repnz
dec
mov
or
scas
gs
dec
pop
adc
and
sahf
jge
cli
ss
add
fnstcw
mov
xor
pop
push
shll
xor
mov
cmp
lods
sub
and
inc
test
arpl
fstpl
or
clc
std
add
add
je
fcomip
cld
cmp
adc
aaa
adc
adc
mov
outsl
outsl
lds
pop
pop
cmpsl
jge
lds
shll
sbb
cmp
cmp
mov
xor
mull
or
dec
add
and
icebp
popf
lret
pop
movsb
out
push
movsb
lahf
outsb
cs
push
dec
adcb
push
sbb
das
mov
int3
fcmovne
jmp
cmp
loope
push
insl
or
cmp
inc
decb
sbb
popa
or
pop
sub
mov
jl
stos
cltd
sbb
ss
aam
test
aam
daa
cli
xor
and
call
loop
push
ja
cmp
pusha
pusha
addl
insl
mov
sbb
adc
mov
push
into
ja
mov
mov
jae
or
fadd
and
add
call
inc
sbb
jae
popf
sbb
fnstsw
push
pop
rclb
leave
out
ds
rolb
push
lds
in
inc
and
add
fiaddl
mov
cmp
scas
push
pop
clc
jne
cmc
imul
sbb
gs
mov
mov
inc
mov
push
inc
shlb
cmp
lahf
sbb
imul
sbb
cli
insl
jns
inc
loope
fxch
dec
in
xor
dec
dec
int
pop
mov
enter
clc
daa
mov
insl
sub
jecxz
sbb
ljmp
sbb
stc
mov
jmp
adc
push
xchg
pop
mov
popa
stc
outsb
scas
mov
pusha
and
add
cmpsl
clc
sbb
lcall
mov
dec
jno
pop
mov
dec
cmpxchg8b
mov
dec
sahf
inc
mov
cwtl
cwtl
pushf
pop
cmp
sbb
jp
add
sbb
or
mov
adc
xchg
fdivp
or
dec
repnz
xchg
dec
mov
idivb
sbb
popf
or
pop
jae
shrb
jne
jg
adc
rclb
jo
jno
add
mov
ret
or
in
popa
xchg
fnstenv
inc
orb
je
sbb
notl
jp
jnp
iret
negb
rcrl
cld
dec
lock
out
out
pop
int
int3
sbbb
inc
aaa
mov
push
jp
shll
rolb
iret
jle
cmp
scas
pop
jbe
cmc
and
aam
xor
lret
cmp
sub
ret
mov
jle
sbb
sbb
and
ja
fdivr
pop
aam
xor
hlt
jno
int3
scas
rorl
jmp
call
enter
pushf
and
inc
inc
xor
push
or
inc
inc
fsubl
xchg
jle
dec
fisttpl
pop
mov
mov
iret
cmpsl
stos
xchg
mov
pushf
into
ljmp
iret
sub
ret
mov
dec
push
jge
jl
aam
lods
cmp
pop
lret
aam
aad
pop
push
inc
nop
pushf
int
stos
aas
mov
xor
mov
les
and
insb
test
ret
outsl
cmp
cmp
lret
push
mov
ret
push
rcrl
aad
sti
push
insl
int3
dec
dec
mov
xlat
or
and
push
jne
and
cmp
cmp
ja
fwait
mov
fadd
je
loopne
adc
mov
push
in
push
sub
dec
and
loop
cs
mov
jl
ficomps
js
xor
out
enter
xchg
mov
sub
lret
out
addl
jg
xlat
sbb
pop
fnstcw
adc
repnz
divl
fisubrl
mov
jmp
fidivs
movsl
xorb
xlat
inc
mov
jae
mov
and
dec
pop
pop
addr16
push
mov
daa
mov
add
in
dec
not
xor
outsl
cltd
std
outsl
lret
and
jbe
jecxz
add
sub
mov
pop
popa
jl
lods
inc
mov
push
jle
notl
lds
test
fildll
dec
lods
mov
cld
mov
cltd
sub
xchg
lcall
sbb
mov
cwtl
clc
cltd
and
mov
xor
jo
scas
icebp
adc
int
fwait
or
adc
xchg
pop
cmpl
std
jns
jns
jl
inc
and
or
rcl
mov
dec
jb
jbe
dec
gs
addr16
adc
enter
pop
fs
jb
call
pop
jg
jecxz
out
nop
fwait
outsb
pop
flds
adc
repnz
xorl
mov
les
arpl
cmpsl
xor
cmpsl
lds
call
mov
fcmovu
std
and
cltd
sti
out
inc
cmpsb
ja
repnz
mov
adc
not
gs
inc
mov
inc
and
dec
daa
shl
cmp
mov
ds
mov
std
js
stc
std
fcoml
clc
push
test
insl
int3
iret
ljmp
and
xlat
inc
in
and
mov
add
fidivrl
jmp
std
stos
divb
xor
mov
js
xor
inc
cmpsl
push
or
es
xchg
mov
rcr
cmp
mov
adc
cmpsb
xor
mov
xor
dec
test
int3
mov
push
pusha
out
mov
pop
xor
pop
jg
fsubl
xor
push
dec
mov
add
mov
mov
xchg
lea
sbbl
push
jne
jg
mov
mov
pcmpeqb
sbb
repnz
fsubrs
lret
push
imul
out
dec
mov
ret
gs
mov
jg
subl
jnp
adc
jne
dec
mov
jb
pop
cmp
jge
or
dec
int
jbe
dec
lret
push
jg
cmp
cltd
nop
cmp
pusha
ss
cli
scas
xor
loopne
jge
dec
rol
pop
loope
lods
jae
sub
call
and
xchg
inc
mov
js,pt
jns
ja
fstpt
adc
cmc
push
ja
lea
movsb
push
dec
scas
push
outsb
jno
jbe
pusha
imul
sbb
add
jecxz
add
xchg
pushf
jae
fiadds
sbb
pushf
mov
and
xor
jb
xor
test
cs
clc
outsl
sub
jmp
push
andl
push
jle
mov
fistps
sub
lcall
repz
hlt
inc
xchg
adc
jecxz
mov
dec
movsl
lea
push
mov
sub
lret
stos
sbb
ret
popa
shlb
xchg
jg
flds
jne
nop
clc
adc
dec
in
mov
nop
add
push
pop
jp
cwtl
test
cmpl
inc
mov
enter
or
dec
jae
sbb
out
dec
cmc
and
inc
inc
sbb
mov
popl
add
inc
cmp
sub
sar
dec
mov
ja
mov
push
sbb
push
xlat
jae
mov
in
or
inc
mov
xchg
jae
rcrb
aas
adc
lcall
mov
lea
push
add
dec
lods
or
dec
call
lds
mov
inc
mov
and
roll
stc
out
pop
loopne
jne
ja
repnz
repz
je
orb
in
or
int3
imul
mov
and
arpl
popf
inc
jo
cmp
push
jnp
repnz
mov
popa
mov
divb
adc
sub
sub
sub
out
push
or
repz
inc
loope
xor
jecxz,pn
cwtl
clc
repz
jnp
aad
and
push
mov
pop
adc
lods
imul
cmpsl
cmp
push
ljmp
lds
adcb
adc
xchg
and
pop
fistl
jae
rcr
mov
jecxz
ljmp
mov
inc
and
and
sbb
sbb
lock
sbb
lcall
pop
fidivs
dec
cli
push
lods
dec
lds
iret
rorl
pop
imul
in
cmp
call
cmp
xchg
fnstcw
sbb
xor
repz
fidivrl
lret
call
loope
jmp
rol
and
movl
ja
xchg
or
cmp
sahf
das
insb
lret
in
xor
dec
jo
scas
loopne
dec
ljmp
inc
mov
leave
and
push
inc
rorb
cmp
xchg
inc
out
mov
add
test
pushl
push
gs
stos
stc
or
fbld
jge
imul
or
test
notb
sub
xor
mov
sbb
jo
dec
adc
stos
cmp
into
scas
mov
sbb
test
push
outsl
mov
stc
jb
hlt
fwait
shl
pop
aam
je
xchg
int
bound
outsl
adc
sub
jp
aaa
add
out
cs
arpl
mov
cmp
mov
shll
push
push
cmp
lods
sarb
les
or
int
mov
sub
mov
dec
sahf
shll
popf
sub
mov
rorb
in
hlt
mov
mov
jb
in
call
rcr
mov
lret
imul
dec
add
popa
jae
push
ret
loope
popf
arpl
or
xchg
sub
dec
je
fisubrs
adc
leave
push
popa
xchg
rcrb
aas
xchg
mov
inc
cli
repz
push
decb
inc
sub
pop
xchg
sub
dec
push
subb
shrb
ds
mov
add
push
sbb
push
fsts
scas
in
xchg
stos
cmp
fwait
pop
mov
lds
ja
mov
rep
jge
adc
sbb
xlat
adc
dec
lcall
outsb
push
lret
pop
dec
lods
push
sbb
sbb
call
pop
inc
call
popa
xchg
adc
imull
aas
mov
js
adc
mov
adc
xor
or
repz
leave
jbe
inc
push
icebp
in
and
adcb
stc
test
mov
jne
xorl
ss
sub
ret
iret
adc
ja
mov
in
or
loop
dec
inc
inc
dec
nop
adcb
jle
add
sbb
xchg
xor
cmp
cmp
data16
cs
cmc
lock
aam
adc
out
call
mov
cmpsl
test
add
ret
sbb
pop
scas
cmp
fnstcw
daa
sbb
lcall
adc
dec
mov
lock
sub
inc
ljmp
pop
into
or
mov
das
cmp
sbb
mov
sub
jnp
aam
xchg
xchg
lock
push
scas
das
mov
mov
repnz
pusha
nop
ljmp
inc
mov
imul
cmp
mov
cld
shlb
xor
push
jno
repz
xor
jmp
inc
inc
xor
roll
popa
shrl
andb
and
negl
xchg
sbb
and
xor
aas
sbb
aam
das
mov
dec
lock
or
xor
cmpsl
movsl
mov
imul
push
lret
cmp
iret
sub
inc
lcall
xor
dec
scas
daa
rcr
xor
and
ret
movsb
add
sub
jb
in
sahf
sahf
inc
lahf
pop
jae
lods
popf
cld
and
out
divl
push
das
aaa
push
jb
into
cs
push
sub
lea
lea
in
sti
xchg
test
pop
mov
jl
sbb
mov
lods
pop
pause
inc
dec
stos
jbe
push
sub
outsl
faddp
or
dec
addr16
lds
arpl
addr16
jne
cmp
idiv
mov
in
sub
fwait
jne
push
mov
nop
stos
mov
ret
adc
ror
push
insl
jmp
and
out
inc
pop
add
mov
cwtl
clc
sub
mov
jbe
mov
mov
mov
push
aad
mov
std
int
out
dec
stc
or
jmp
inc
jg
jne
xchg
add
mov
push
test
fisubrs
mov
mov
push
cwtl
jmp
push
dec
cmc
movl
pop
loopne
aas
xchg
ret
jle
xlat
sarb
sbb
cwtl
add
frstor
dec
sbb
ljmp
add
inc
cmc
cmp
std
dec
gs
push
add
lcall
dec
sahf
hlt
jne
push
dec
jbe
sahf
rclb
out
clc
or
sbb
int3
dec
lcall
aad
inc
into
fidivl
fisubs
jge
cltd
repz
outsl
rcl
mov
aad
mov
dec
stos
dec
xor
stos
imul
ljmp
push
test
pop
std
mov
ja
lock
xor
and
aad
jae
fmuls
sahf
dec
repnz
mov
bound
sti
push
cld
inc
mov
fwait
sbb
repz
lcall
rclb
mov
mov
mov
stos
cli
data16
imul
mov
mov
jp
cmp
nop
mov
cmp
jbe
xor
repz
mov
xchg
mov
jmp
push
lds
xchg
mov
inc
xchg
and
cli
cmp
mov
repz
xchg
sub
repz
mov
stos
lret
mov
arpl
test
call
movsb
ret
popf
push
in
pop
addb
add
jp
cmp
mov
sbb
in
outsl
in
rcll
sub
icebp
jmp
test
inc
cld
test
ja
das
push
add
fwait
inc
push
dec
sbb
jbe
mov
or
shll
icebp
sbb
movsl
mov
mov
test
and
call
push
andl
mov
pop
push
data16
loopne
rclb
dec
adc
push
cmpsl
push
leave
cmpsb
scas
movsl
cmp
sub
arpl
pop
std
mov
sahf
ret
sbb
ror
iret
aad
jne
xor
fxch
rclb
jo
stos
dec
push
adc
into
dec
mov
inc
xlat
or
jnp
xchg
jmp
stos
mov
lret
and
les
jb
loop
adc
xor
lret
daa
cmpsl
pop
data16
lret
mov
xor
pop
mov
lock
ja
rcrl
xlat
int3
lock
rol
icebp
pusha
lock
scas
mov
std
ds
cmpsl
push
mov
push
pop
popa
test
addr16
es
inc
mov
mov
sbb
mov
inc
mov
mov
mov
jae
dec
leave
cld
out
cmp
or
in
xchg
popa
lahf
sbb
adc
jns
lret
cmp
dec
adc
jl
and
ja
push
adc
scas
outsl
lods
and
mov
icebp
add
jecxz
add
cmp
mov
pop
jp
cmp
cwtl
aad
adc
pop
icebp
inc
movaps
pushw
adc
sub
movsl
or
jecxz
lds
sbb
sbb
adc
xor
loopne
xlat
sbb
aam
adc
or
shlb
add
test
add
test
ret
inc
leave
push
or
out
mov
mov
je
mov
fdivrs
cmc
jns
adc
in
mov
xadd
or
push
arpl
bound
lret
mov
jo
add
xor
jno
xor
jo
mov
stos
out
mov
and
lds
pop
scas
sahf
cmp
rorb
bound
push
pop
xchg
nop
push
adc
lock
repnz
adc
mov
pop
insb
inc
push
test
add
or
jo
jecxz
repz
imulb
fisubs
enter
inc
cmp
addb
fs
pop
xor
jae
xchg
nop
mov
scas
ror
dec
dec
lahf
push
mov
push
inc
jecxz
jp
js
cmp
add
sbb
popa
sti
cltd
mov
je
xchg
mov
xor
into
insl
das
in
mov
adc
sti
mov
xor
and
add
cmp
roll
push
ljmp
pop
adc
nop
nop
lods
cli
push
push
pop
ja
imul
data16
lock
or
jmp
filds
std
sahf
mov
pushf
jmp
clc
cltd
push
cmc
repz
xchg
nop
mov
adc
mov
mov
stos
rolb
cmpsb
pop
addb
pop
inc
sbb
fnstcw
cwtl
not
scas
xchg
jo
and
lock
fldcw
stos
daa
aam
daa
scas
push
and
nop
outsl
movsl
call
pusha
pop
pusha
or
sbb
fwait
ss
push
push
js
jb
adc
mov
dec
insb
push
stos
int3
leave
lret
addr16
add
movsb
mov
mov
clc
and
xor
test
dec
insl
or
add
mov
jl
push
jg
vpackuswb
pop
into
pop
hlt
pop
rorb
std
sahf
pop
ss
fnstcw
cwtl
ss
int3
pop
adc
imulb
add
stos
jns
push
ljmp
nop
sub
data16
outsl
in
jmp
popa
popa
addl
dec
popa
pop
fildl
xlat
jae
insl
scas
repz
test
pop
das
das
aam
dec
or
imul
and
les
push
pop
jle
jge
mov
xchg
sub
mov
subl
sbb
sub
insl
ljmp
jmp
lds
adcb
mov
fsts
lods
js
or
test
test
cs
sub
mov
and
outsb
mov
mov
rol
mov
pusha
or
pop
add
xor
cli
mov
push
jbe
das
push
rep
lods
dec
outsl
sub
dec
in
test
dec
mov
and
inc
andl
mov
cwtl
jbe
xor
imul
shll
iret
std
push
push
xor
imul
data16
and
addl
mov
rorb
std
push
mov
hlt
cwtl
xchg
adc
iret
xchg
lock
cmp
dec
mov
sub
fs
add
rolb
fistps
mov
scas
xchg
cmc
adc
adc
mov
cld
dec
jns
shll
andl
and
incb
cld
sbb
fstp
cmp
cmp
mov
xor
inc
xor
aam
int3
fisubl
cmp
sub
mov
in
mov
sbb
sahf
cmp
mov
repnz
imul
dec
mov
pop
mov
sbbl
test
ret
pop
mov
xchg
jns
ficompl
fldt
test
aaa
xchg
xchg
aam
imul
loop
andb
int3
test
movsb
nop
mov
inc
lds
inc
daa
shll
adc
pop
ret
pop
pop
loope
fmul
mov
mov
jno
push
ror
xchg
je
out
pop
sub
out
or
pop
int3
xchg
in
mov
inc
xchg
aas
ret
andl
ret
repz
pop
add
xor
mov
lods
push
mov
repnz
and
jno
movsb
ss
lcall
mov
jae
jne
push
push
push
jbe
xor
repz
mov
enter
call
cld
push
inc
ja
mov
inc
adc
ficomps
add
out
mov
clc
cmp
push
repz
int
push
dec
lret
inc
dec
cmpsl
dec
iret
out
jg
jecxz
in
mov
add
and
sbb
rcrb
lret
aam
shll
jns
jb
popa
fldcw
iret
mov
out
addr16
lret
ds
cmpsb
mov
sbb
sbb
jnp
das
sbb
aam
insl
adc
jmp
cmp
and
std
outsl
scas
bound
dec
and
mov
cmp
sbb
mov
mov
cmp
push
cmp
imul
ljmp
inc
pop
addr16
loop
mov
pusha
inc
sub
cmp
je
mov
push
rorl
stos
jle
cmpsl
mov
leave
popf
mov
push
add
sbb
jp
push
pop
inc
cmp
pop
mov
hlt
dec
ja
ds
mov
call
dec
data16
cs
or
cmp
in
xchg
pop
bound
xor
mov
fwait
sbb
jns
les
push
imul
dec
and
rcrb
dec
dec
jo
enter
hlt
test
andl
popf
inc
mov
add
jge
enter
mov
adc
lods
hlt
jg
movsl
enter
sbb
cmp
in
or
xchg
je
rcrb
mov
mov
sbb
testl
xchg
adc
mov
dec
xor
cmp
stos
push
daa
enter
test
mov
cmp
dec
jle
mov
sti
stc
out
xchg
loop
test
test
mov
clc
pop
into
mov
jo
sub
push
outsb
mov
mov
mov
das
mov
cwtl
mull
sub
inc
into
iret
icebp
nop
dec
mov
dec
fisubrl
ret
in
sbb
jl
ja
popa
jne
jnp
fs
sbb
sbb
sbb
out
lock
fidivrl
loopne
cmp
dec
jg
jbe
data16
test
add
out
pusha
out
ss
mov
mov
push
nop
mov
and
add
cs
ret
inc
push
sub
mov
inc
fucomi
adc
loop
test
mull
pushf
icebp
cmp
ss
fisubrl
cmp
insl
mov
jae
mov
and
mov
outsb
mov
lods
imul
insl
movsb
cmp
sub
and
push
movsl
pop
jg
cld
into
ljmp
jle
and
mov
xchg
outsb
notb
stos
dec
clc
inc
cmp
dec
lods
mov
ljmp
inc
lds
das
cmovno
inc
cmp
jge
lds
pop
flds
pop
mov
cmp
movsl
lods
mov
fcomi
xor
push
xchg
lea
sbb
inc
mov
push
push
pop
and
jne
mov
inc
dec
cld
push
push
push
mov
jb
mov
mov
dec
add
sub
test
incl
add
pop
pop
in
fidivl
imull
pushf
mov
xchg
push
adc
cltd
jno
hlt
dec
outsb
loop
jmp
stos
or
dec
xchg
mov
cmpsb
loop
and
xor
ficomps
fnstcw
mov
icebp
push
or
mov
nopl
mov
mov
or
jmp
sub
cmpsb
fidivrs
cmp
xchg
negb
mov
mov
mov
push
push
mov
mov
lods
sub
inc
mov
xor
jp
int3
cwtl
ja
mov
pop
and
jmp
xchg
push
test
sub
push
add
mov
sahf
and
arpl
mov
add
mov
fcmovu
fists
cmpsl
std
nop
ficomps
adc
cs
mov
push
jp
mov
insl
or
jmp
inc
cltd
fimull
mov
cld
cwtl
push
loopne
pop
lahf
jne
nop
cmp
cwtl
pop
std
jle
dec
sub
movsl
lods
das
mov
mov
call
call
inc
push
add
add
out
mov
test
cmp
pop
jns
add
mov
jbe
int
hlt
jo
mov
das
lods
push
xor
add
das
fstps
shl
popa
and
mov
xlat
sbb
fisttpl
fstps
mov
ret
gs
xchg
insl
in
push
int
test
lret
pop
outsb
lods
push
ret
sarl
fisubrs
sbb
inc
xchg
hlt
je
push
bound
jle
push
xchg
adc
jo
dec
insl
jmp
mov
cmp
cwtl
in
mov
push
mov
sbb
lret
aas
lods
jg
xor
outsl
stos
pop
adcb
loopne
shrb
data16
pop
enter
sarb
push
jg
fistps
dec
pushf
mov
xor
xchg
enter
mov
adc
push
cmc
into
test
in
pop
cmpsl
lods
xlat
ret
jl
pusha
cmpl
cmc
adc
negl
sahf
daa
adc
int3
mov
cwtl
rclb
pop
jmp
dec
push
push
lods
cmpsl
test
mov
mov
cmc
mov
sbb
test
add
cwtl
out
dec
data16
popf
rcll
xor
jge
xor
das
dec
cmpsl
push
jp
test
mov
jge
imul
jbe
int
div
cmp
scas
xor
movsl
mov
mov
mov
movsb
gs
lret
dec
dec
dec
mov
addl
sbb
cmp
mov
cwtl
xchg
shll
xchg
push
popf
mov
insb
insb
push
hlt
push
repnz
inc
stos
cmpsl
pop
mov
leave
add
pop
and
cmp
sub
cmp
clc
push
mov
mul
cmpsb
ja
aam
adc
pop
in
imul
jo
das
mov
push
lock
enter
add
out
les
nop
in
inc
xor
jmp
cmp
push
xchg
push
push
pop
popa
mov
dec
dec
pop
mov
sbb
shrb
sbb
shll
pop
and
pusha
and
popf
in
fs
sub
jg
fwait
jo
cmpsb
sbb
xor
rcll
xchg
add
sub
xcrypt-ofb
cmpsl
in
dec
stos
or
dec
test
add
push
call
sbb
mov
lods
mov
test
lret
es
fcoml
lret
mov
lea
mov
or
lret
je
sub
xorb
sar
aas
rep
sub
pop
push
mov
add
xor
mov
outsl
mov
jno
mov
test
roll
clc
ljmp
sbb
cmp
jnp
cmp
cwtl
clc
sbb
xlat
lods
icebp
lock
mov
sub
xor
dec
xor
cmovb
inc
arpl
xchg
scas
or
xchg
cmpl
test
in
shrb
rcrl
ds
outsb
imul
cmp
cmp
fwait
stc
les
add
xchg
hlt
mov
in
fmulp
inc
jns
inc
mov
cmp
push
cmp
jbe
les
fcomps
mov
rcrl
dec
movsl
sarl
mov
das
hlt
cltd
mov
lock
cmp
stc
mov
test
dec
lods
or
es
fldenv
sub
jno
testl
repnz
nop
mov
xor
push
sub
add
subl
xlat
push
lcall
stos
push
lock
loop
push
xchg
nop
popa
jecxz
dec
pusha
ffree
fsubrl
inc
add
popf
test
adc
cmp
ss
cmp
pusha
push
adcl
adc
gs
scas
in
vpsraw
adc
inc
incb
and
pop
jg
cmp
incb
xlat
bound
fwait
repnz
out
push
cli
fnstenv
lea
sarl
repnz
test
dec
inc
push
enter
aam
mov
mov
jge
cmpsl
dec
jg
aas
push
out
push
push
sbb
adc
repnz
push
nop
mov
adc
inc
jg
and
or
bound
and
pop
loopne
pop
jl
sbb
mov
adc
xor
adc
loopne
shl
jmp
sub
inc
push
mov
sbb
and
ds
pop
mov
jbe
adc
xlat
fnstsw
xchg
repz
les
push
push
out
dec
inc
add
lock
inc
jg
xorb
and
add
xchg
add
xchg
xorl
push
mov
dec
repz
arpl
pop
dec
adc
shlb
push
cmpsl
xor
stc
add
movsb
ret
out
aas
pop
sbb
mov
or
leave
aam
hlt
icebp
repnz
xchg
cmp
inc
xchg
inc
dec
lods
mov
pop
lods
cmp
sahf
add
mov
fwait
addl
mov
mov
in
aad
dec
out
push
pop
rorl
inc
push
or
aas
dec
and
and
in
out
arpl
jecxz
ja
jnp
call
lcall
push
adc
pop
insb
je
xor
xorl
orl
inc
inc
loope
pop
rcll
pop
lahf
cwtl
fnstcw
xchg
mov
inc
xchg
pop
xlat
lock
xor
xchg
out
or
es
dec
movsl
mov
sbb
call
xor
add
ds
mov
jl
loop
out
push
loopne
mov
jle
mov
adc
scas
dec
int
outsb
or
xor
pusha
cmp
arpl
cmpl
jge
mov
cld
je
ja
inc
aas
js
data16
jmp
pop
dec
imul
les
dec
outsb
daa
flds
cwtl
pop
inc
mov
gs
flds
pop
stc
pop
pop
xor
cmp
xchg
ret
xchg
adc
sub
inc
lds
add
sbb
shl
fldenv
pavgb
dec
sbb
cmpsl
enter
out
push
int3
frstor
adc
andb
or
dec
pop
mov
cmpsl
cltd
enter
pusha
rcrb
fisubrs
add
mov
jne
mov
dec
cmc
push
jp
out
push
xor
add
ficompl
bound
fisttpll
lods
lds
roll
push
mov
insb
cmp
inc
jno,pt
xchg
pop
sbb
outsl
cld
clc
sub
daa
mov
outsb
add
nop
mov
inc
test
add
fldl
sbb
cli
shll
fistpll
sahf
std
pop
mov
xchg
test
inc
iret
cs
movaps
xchg
mov
and
enter
and
cli
jp
pop
pushf
jge
pop
jne
mov
push
jae
jge
or
dec
jno
mov
subl
insl
mov
lods
sub
dec
or
push
enter
mov
inc
pop
add
movsl
push
jg
sbb
adc
repnz
stc
pop
into
jo
push
ss
out
jno
loopne
and
mov
mov
outsb
movb
cli
loopne
jg
xlat
adc
pop
lcall
mov
lcall
push
sub
dec
aas
or
dec
jmp
and
mov
pop
mov
pop
mov
cmp
mov
jp
mov
adc
jmp
mov
in
cmpsb
and
add
mov
retw
movsl
incb
cmp
leave
mov
mov
call
nop
sub
inc
mov
shrb
push
add
and
jp
dec
sub
sbb
xchg
xor
cld
jae
cmp
push
add
movsl
shll
push
leave
pop
in
sub
leave
aaa
inc
arpl
pop
mov
out
push
mov
decl
call
icebp
fnstcw
cwtl
cmp
and
divb
pop
cld
pop
scas
sbb
xor
scas
sub
aam
xchg
pop
xchg
and
jl
enter
jp
cmp
xchg
addr16
aad
pusha
push
into
adc
shrb
popa
insl
test
fldcw
mov
out
jmp
push
clc
mov
subl
sbb
test
cmp
adc
xor
dec
jb
or
outsl
mov
shrl
daa
test
inc
out
gs
add
mov
cmp
sbb
mov
xor
sbb
mov
rcll
push
in
jge
lret
dec
dec
cmpsl
lds
pop
cld
add
mov
xor
aam
xlat
ds
test
divl
cmp
aad
xchg
xchg
sub
push
or
jnp
dec
cmpsl
pop
or
pop
test
arpl
push
les
jmp
lods
add
pop
pop
clc
push
mov
fdivl
imul
or
or
lret
cmp
push
lock
test
mov
lods
scas
inc
fstpl
sahf
xor
pushf
pop
xor
jae
cs
mov
mov
ja
push
dec
psrld
out
int
dec
movsl
mov
pop
rorl
cmpsb
rcll
jle
idivl
lcall
dec
into
divb
int
scas
mov
enter
repz
inc
repnz
adc
sarl
test
jmp
sbb
cli
popa
stc
ja
add
xchg
mov
xor
popa
insl
leave
out
outsl
fdivrp
andb
push
add
dec
jbe
adc
inc
pop
pop
sbb
aas
inc
fwait
cli
dec
sbb
lock
push
popf
jno
rcr
xor
push
mul
out
int3
data16
mov
dec
cmpsl
pop
test
or
sub
cmp
pavgb
aam
mov
push
xlat
sbb
adc
mov
int3
jo
add
mov
sub
xchg
pop
xchg
mov
and
arpl
mov
jmp
xor
data16
cmc
adc
mov
dec
sub
inc
inc
jmp
inc
jb
inc
inc
cmc
add
fisubs
add
mov
sbb
fcomps
or
jo
xor
mov
das
nop
or
test
push
scas
sub
out
jge
imul
andl
sarb
inc
lret
mov
iret
leave
inc
enter
and
jo
mov
cmpsl
xor
stc
filds
aam
xor
cmp
ds
adc
xchg
arpl
jp
aam
jae
jge
call
cwtl
jno
rcll
jne
es
cmp
inc
jno
int3
fldenv
data16
bound
dec
ret
test
sbb
xchg
clc
jl
push
adc
test
mov
std
or
mov
or
ret
and
mov
sub
pop
sbb
cmpsl
cltd
popa
fnstenv
dec
add
add
pop
jno
xor
or
test
add
jecxz
xor
push
pusha
pop
loop
mov
mov
lcall
test
jg
adc
or
xchg
out
jp
mov
lock
sub
arpl
test
mov
pushf
loopne
mov
mov
fdivr
loope
aas
sbb
xor
rcll
add
leave
fmuls
pop
sub
gs
in
push
frstor
mov
fdivp
rclb
in
adc
in
shr
and
repnz
enter
mov
push
mov
fistps
ja
aas
cltd
rcrl
jp
mov
cmc
push
pop
aam
add
or
daa
out
jno
ss
dec
gs
fists
dec
ljmp
xor
and
sub
rolb
sahf
add
mov
out
pop
mov
jne
lods
cmp
daa
aam
int3
clc
dec
cbtw
fiadds
xchg
sub
mov
add
add
popf
pop
jecxz
scas
cmp
sbb
sbb
mov
push
xchg
scas
push
cmpsb
push
shrb
dec
jb
xlat
dec
push
mov
jg
outsb
imul
mov
test
gs
dec
sbbb
push
sbb
sbbb
pop
stc
jne
repnz
xchg
mov
pop
scas
insl
out
stos
mov
sub
mov
inc
hlt
fidivrs
inc
cld
ja
fdivl
ja
cmp
insl
loopne
out
out
adc
je
mov
and
sub
mov
mov
add
add
repnz
mov
lods
sbb
or
iret
pop
mov
xor
insl
lret
or
adc
arpl
xor
ficoml
mov
fstpt
pop
cltd
or
mov
jne
xor
pause
push
fnstsw
push
mov
jo
das
mov
adc
cs
jmp
test
sub
cmp
add
repnz
mov
lcall
mov
into
mov
addr16
cs
mov
push
inc
aam
sbb
mov
sti
out
jne
cmp
cwtl
jmp
mov
jne
pop
jb
push
test
push
scas
mov
sub
icebp
daa
mov
call
dec
imull
gs
adc
mov
dec
lcall
rcr
vpaddw
mov
mov
inc
in
lea
add
test
lret
pop
xlat
test
and
out
push
int3
rolb
nop
dec
cmpsl
cmp
jno
inc
push
mov
fdivrp
jmp
inc
in
sbb
pushf
xchg
gs
fisubrl
in
mov
push
aad
shlb
mov
arpl
das
mov
xorb
cmpsl
cmpsl
cli
xor
and
out
arpl
jns
sti
sbb
in
mov
lahf
adc
xor
stos
shll
out
lea
lock
or
cmp
lods
add
pop
inc
mov
xor
or
sarl
push
es
lods
cmp
push
shlb
push
sbb
mov
iret
mov
test
jle
add
xor
clc
or
cltd
push
loop
pop
xorl
out
mov
adc
xor
insb
lret
sub
mov
jl
jns
sarb
gs
pop
pop
pop
xor
mov
xor
je
rolb
out
jno
or
rorb
movsb
sbb
test
data16
inc
pop
imul
jg
cmp
aad
mov
mov
mov
mov
dec
repnz
sbb
push
push
mov
dec
inc
in
mov
inc
mov
cmc
fiadds
cmpl
pop
add
jno
repz
xor
mov
jmp
mov
out
repz
popf
jl
lea
xor
ss
mov
xchg
cmp
sub
imul
ret
jmp
push
aaa
imul
jne
test
lds
ja
flds
hlt
push
dec
mov
stc
pop
repnz
aas
jb
sbb
xor
mov
fs
add
xchg
aad
jmp
pop
test
jg
jg
dec
sbb
pop
jbe
testb
bound
sahf
pop
roll
add
or
sub
jno
and
jp
in
test
roll
lods
or
dec
insb
lahf
mov
pop
fidivrl
aas
test
sub
jg
add
add
add
lret
inc
mov
add
sub
scas
xchg
push
sbb
inc
cld
pop
sub
jne
in
inc
dec
push
add
out
clc
pop
mov
scas
xor
mov
sbb
xchg
andb
sub
in
addr16
test
push
hlt
add
fcom
shll
xorl
cmp
mov
cmpsb
ja
in
ljmp
outsb
daa
pushf
sti
mov
mov
fcomp
dec
fidivrs
mov
fdivrs
xchg
adc
mov
mov
fmul
ret
cmp
push
jp
push
jecxz
jecxz
int3
jge
mov
lcall
sbb
pop
add
fldenvs
adc
loopne
aad
fildll
push
mov
add
outsl
inc
fsubrl
ds
mov
lcall
test
mulw
cmpsb
xor
test
xlat
mov
mov
pusha
rorb
stos
mov
lret
add
sbb
and
pop
pop
sbb
inc
xchg
push
jg
imul
test
add
or
inc
aas
and
jg
js
sti
add
aaa
push
and
push
mov
xor
xor
xor
imul
inc
push
inc
mov
decb
sub
sbb
fistpll
popf
jg
inc
test
repnz
hlt
jb
jo
mov
xchg
ds
into
loopne
loop
sub
mov
inc
jp
add
mov
push
mov
jne
orl
push
cltd
jns
mov
mov
dec
sub
out
pop
aaa
rolb
sbb
pop
cmp
jb
je
pushf
xchg
scas
fxch
cmpb
xchg
lock
mov
xor
cli
xchg
out
leave
mov
and
rclb
pop
inc
test
ficoms
cld
les
nop
jns
jbe
mov
pop
scas
push
outsb
int
outsb
add
insb
pop
in
movsb
stc
mov
movsl
add
aas
fmull
jae
xchg
fldt
mov
aaa
je
xor
adc
in
jne
inc
xor
lea
inc
pop
dec
pusha
cld
xchg
jge
lea
add
jo
das
jb
and
push
loopne
xor
pusha
fmulp
iret
iret
jno
fsts
adc
dec
pop
jmp
cwtl
movsb
xchg
inc
ret
rcl
fisttpl
mov
dec
push
mov
test
cmc
bound
fs
mov
lret
insl
jmp
insl
jmp
push
adc
add
addl
cmp
pop
aas
cli
ja
cli
xchg
cmp
xchg
adc
mov
mov
xlat
ss
mov
push
fs
fucomip
mov
adc
std
mov
in
mov
imul
sbb
shlb
xchg
lock
das
mov
test
leave
out
in
mov
and
cmp
mov
lea
ja
sub
test
div
fmul
jmp
or
inc
bound
dec
push
mov
les
movsb
push
jge
jle
pop
fstpt
push
cwtl
icebp
outsb
cmp
sub
lds
cmp
out
pop
pop
or
xchg
fxam
xchg
jno
cs
dec
mov
jl
loop
and
mov
jnp
mov
xchg
int3
divl
lea
fcoml
mov
lea
loopne
andl
fdivrp
sbb
adc
fistpl
xor
sbb
dec
scas
das
int3
mov
cs
xor
dec
mov
inc
jmp
movsb
fcompl
mov
cld
loope
xor
push
mov
mov
mov
fidivrl
int
loopne
sub
mov
inc
movsl
repnz
xor
loop
mov
cmc
pop
pop
mov
pop
notl
push
fsts
fildl
pop
xchg
sub
or
jno
xor
cwtl
and
sti
add
xor
jge
lahf
sub
fcmovu
dec
cmpsb
pop
inc
fdivs
fcoms
mov
aas
data16
movsb
loop
into
fsubrp
int3
pop
leave
push
cwtl
arpl
pop
data16
sbb
adc
dec
js
push
mov
aas
imul
and
mov
lock
scas
dec
out
xchg
pop
cmp
ljmp
jle
mov
movl
sarb
ss
jne
push
cli
pop
insb
scas
jmp
push
mov
or
lret
in
or
inc
xchg
test
pop
les
and
dec
sbb
cmp
lcall
jae
xor
adc
ds
jmp
adc
leave
ljmp
aas
add
pop
pop
idiv
jne
jne
cmp
mov
adc
or
add
in
popf
insb
or
cpuid
mov
sbb
and
daa
test
add
ficoms
loopne
sbbl
sub
div
push
push
icebp
in
rcl
sub
mov
addl
add
and
add
jl
pushf
sbb
insl
cmp
cmc
aaa
hlt
adc
int
jbe
pusha
sub
jbe
addr16
lret
dec
in
jmp
mov
xor
sbb
mov
imul
outsl
repz
xor
adc
iret
insb
rorb
or
cmp
ret
inc
inc
in
sub
pop
fisubs
pop
fcompl
pop
fsts
xlat
push
rcl
xor
dec
dec
mov
jecxz
das
scas
pop
sub
fmul
lret
lea
call
mov
jecxz
xchg
jecxz
adcl
fiadds
xor
jl
fsts
sub
aam
je
push
iret
jb
iret
dec
outsl
daa
push
ljmp
jl
aas
push
repz
fstpt
pop
sbb
jp
cwtl
cwtl
fnsave
push
gs
xchg
xchg
xor
jae
mov
dec
jo
lods
sub
push
xor
call
loopne
or
mov
pushf
cmp
xchg
xchg
pop
push
mov
hlt
jno
xchg
adc
dec
adc
add
out
andb
in
mov
jle
in
sbb
fadd
shl
push
mov
not
leave
pop
xor
iret
sub
lods
lods
push
out
push
lret
inc
cmpsl
push
and
es
dec
add
shll
aaa
or
sbb
ja
pop
ret
mov
into
mov
rorl
push
iret
dec
mov
outsl
or
movsl
ror
jge
cltd
push
mov
popf
popf
mov
pop
xchg
cmp
shll
icebp
xchg
adc
les
xchg
xor
pop
stc
movsl
sbbl
aas
inc
inc
lret
aas
mov
mov
lcall
testb
xor
out
test
push
stos
xchg
push
or
mov
inc
cmpsl
add
inc
and
adc
push
add
sti
jg
mov
idivb
mov
icebp
jne
mov
in
nop
nop
or
push
mov
xlat
mov
test
test
leave
cmpb
std
sahf
ret
pushf
cmp
jbe
xchg
push
cmc
repz
xchg
nop
mov
adc
mov
outsl
sub
call
sbb
sub
mov
push
fcompl
aad
fldcw
push
aam
xor
push
lahf
jle
out
xlat
push
iret
dec
jno
push
mov
lods
leave
movsl
push
andb
pop
pusha
or
sbb
aad
jbe
pop
adc
ss
push
push
dec
jae
insl
prefetchw
cmp
int
xchg
or
jo
inc
jbe
imul
push
mov
jge
pop
sub
dec
cmp
inc
sbb
mov
xchg
insl
in
mov
xchg
arpl
cmpsl
dec
mov
mov
arpl
add
lret
enter
test
fiaddl
out
lret
iret
std
ja
add
fsubp
mul
lret
popa
rcrl
jge
pop
clc
popa
push
mov
dec
data16
jo
add
gs
cmpsl
in
and
in
mov
scas
inc
out
scas
stos
mov
pop
jle
pop
stos
cmc
cmp
std
xor
mov
mov
cltd
sub
push
jg
sbb
inc
or
scas
fstps
arpl
andl
bound
arpl
movsb
orl
sahf
cmp
es
sti
or
dec
in
jmp
mov
stos
popf
movsl
adc
not
outsb
add
pushf
pop
mov
adc
and
out
xchg
mov
je
jl
jo
stos
dec
fisttps
into
aaa
lret
mov
inc
mov
and
imul
mov
mov
jae
imulb
inc
in
insb
sub
push
dec
out
xchg
and
inc
push
test
repnz
inc
rol
mov
sub
pushf
dec
cmc
fwait
push
fidivrl
cwtl
clc
mov
xchg
mov
add
loope
ja
push
mov
enter
push
push
inc
lret
lds
add
jecxz
xor
pop
mov
fdiv
clc
mov
cs
sub
adc
movsl
test
dec
insl
xchg
fistpl
xchg
push
loope
add
jl
mov
push
cli
xor
cmp
sbb
test
adc
shlb
adc
addr16
mov
sub
rcr
ja
mov
iret
jae
fnstcw
pop
push
and
in
adc
jo
js
jecxz
repnz
or
in
test
sub
and
jle
and
imul
jl
sarb
fidivl
inc
xchg
lods
push
adc
pop
adc
insl
push
lret
adc
movsl
push
sub
inc
jl
mov
clc
lods
push
push
jnp
inc
aam
sbb
scas
enter
test
btr
ljmp
push
jl
out
sbb
mov
dec
mov
jns
fnstenv
lcall
xor
dec
jb
push
dec
push
nop
push
mov
xchg
aas
pop
add
cltd
fidivs
sub
stc
sti
mov
dec
pop
repz
mov
cs
stos
cmp
and
insl
outsl
lea
jne
or
lock
in
add
test
imul
in
mov
sbb
outsl
adc
add
mov
or
sub
inc
enter
inc
mov
inc
fnstsw
mov
sbb
xchg
pop
jne
jg
xchg
cwtl
adc
aam
or
movsb
sbb
sub
lea
mov
cli
adc
fldl
arpl
insl
pop
xor
mov
stos
fimull
repnz
inc
scas
adc
mov
out
stos
dec
add
stos
test
add
jge
push
sti
and
sahf
and
jp
jmp
adc
sub
sbb
or
stos
imul
inc
out
jmp
jg
fcompl
ss
cmp
jns
mov
mov
rep
cld
xchg
dec
push
rep
leave
subb
cwtl
and
sbb
adc
jle
fcompl
bound
sahf
hlt
addr16
jp
inc
cmp
push
lods
mov
pop
dec
out
loopne
sub
and
loop
pop
or
cmp
cmp
sarl
in
adc
ss
push
mov
data16
cld
nop
lock
mov
push
insb
dec
iret
popa
or
arpl
cmpsb
inc
pusha
leave
mov
repz
sbb
and
repnz
jne
pop
mov
xchg
out
mov
or
fnsave
stos
or
or
addr16
icebp
and
jp
mov
jl
xchg
and
pusha
cltd
adc
int
xor
js
xchg
sub
jmp
pop
test
cld
mov
out
xchg
std
les
mov
mov
push
int
arpl
push
and
sahf
mov
test
ds
xchg
pop
push
daa
aas
xchg
aad
in
push
or
jmp
cld
cli
rclb
jg
cmpb
js
push
sbb
xchg
mov
dec
xchg
mov
das
daa
xor
in
push
jle
inc
int
and
add
lahf
arpl
pop
mov
aaa
les
xor
mov
ja
out
aaa
bound
inc
mov
les
inc
in
sbb
sarb
addb
mov
push
or
ss
fidivrl
cs
insb
dec
lcall
mov
mov
fisttps
jge
jle
sti
mov
pushf
jle
sbb
push
sbb
fdiv
xchg
dec
aam
jl
xchg
shr
out
adc
fstpt
adc
and
and
in
cmpsb
sub
add
inc
mov
jnp
pop
xchg
cwtl
sub
cmp
in
mov
inc
xchg
mov
mov
call
test
mov
stos
mov
sbb
and
testl
adc
fsts
jo
insl
mov
orb
dec
push
dec
mov
call
bound
jecxz
lahf
and
iret
jl
fnstcw
in
xchg
mov
das
fildl
pop
in
xchg
xor
lods
iret
mov
out
lea
stos
mov
dec
loopne
call
pop
ds
dec
cmpsl
cli
pop
notl
jb
mov
push
mov
or
mov
adc
icebp
mov
push
inc
dec
dec
movsb
inc
dec
xchg
and
add
cmp
ds
notl
shll
push
mov
mov
sub
test
int3
and
ljmp
pop
cmpl
jnp
cld
adc
sbbb
or
divl
je
lods
enter
lea
xchg
shrb
shll
add
cmpsb
inc
adc
test
lcall
inc
cld
sbb
mov
push
mov
scas
lret
stos
fldenv
xor
lea
push
mov
dec
cmpsl
pop
aaa
sub
mov
loop
mov
mov
mov
pop
pop
cmc
adc
mov
adc
mov
aam
push
repz
cs
push
enter
cmpsb
or
sub
inc
inc
cmpsb
adc
std
jo
aas
inc
push
loopne
adc
mov
push
xchg
ss
lock
and
hlt
int
lods
push
jmp
push
inc
jecxz
stos
stos
and
test
testl
notl
mov
outsb
mov
mov
dec
mov
mov
push
jo
jge
daa
dec
or
push
cmpsb
or
add
cmp
cld
pop
mov
pop
les
dec
adc
xchg
mov
fmull
mov
cmpsb
inc
insb
sbb
and
inc
test
inc
inc
addr16
jle
mov
fistl
pop
cmp
fidivl
aaa
aad
mov
nop
iret
adc
outsb
push
sarb
aam
inc
and
lret
in
or
push
dec
cmp
das
mov
fstpl
fidivrs
push
jl
nop
shll
dec
gs
jmp
ja
sub
cli
data16
and
arpl
mov
inc
incb
imul
pop
push
cli
sti
cmpsl
push
sbb
adc
cmp
rorb
jae
mov
stc
or
fbld
jge
imul
or
test
mov
xlat
xchg
and
adc
bswap
gs
sbb
sub
add
shrb
int
lret
rolb
push
mov
jg
mov
cmp
add
pop
cmp
adc
mov
insl
in
cvttps2pi
in
push
sbbb
push
cmp
push
loope
aam
cvtdq2ps
pop
lcall
fisttpll
popf
cld
mov
xor
scas
dec
mov
imulb
push
lds
dec
addl
loopne
and
sbb
lcall
and
nop
sti
jae
cs
aad
popf
cs
add
out
jmp
xchg
jp
out
pop
add
and
xor
and
xor
xor
mov
add
mov
ret
out
stos
test
cmp
enter
pusha
shlb
mov
mov
push
dec
cmp
std
shlb
xchg
mov
mov
imul
imul
mov
add
or
push
add
xchg
dec
jnp
ret
cwtl
xor
adc
aam
and
jnp
mov
repz
ds
cmp
arpl
andl
psubb
lahf
lcall
notl
ficompl
jbe
in
mov
icebp
scas
sub
sbb
xchg
andl
and
loop
scas
in
and
in
push
lahf
sbb
jae
icebp
rcl
sub
jbe
out
add
imul
sub
mov
dec
call
out
subl
gs
adc
cmp
lcall
lods
push
lock
inc
adc
push
jge
push
sub
in
scas
test
pop
outsl
dec
scas
ljmp
je
xor
sti
pop
mov
push
cmp
xchg
push
std
xchg
or
sub
adc
in
stos
or
scas
pop
pop
or
mov
fisttpl
mov
sbb
xchg
xor
mov
icebp
sub
scas
cs
std
mov
or
ljmp
inc
lds
sahf
bound
sub
jg
sahf
fcompl
mov
xchg
sti
or
ss
mov
xlat
call
cmp
lret
ret
pop
pop
lahf
aam
cmp
mov
push
sub
pop
xchg
inc
or
cmp
notb
xchg
iret
adc
push
stos
repnz
mov
fs
mov
ret
loopne
cmp
popf
std
lcall
clc
push
jbe
push
pop
cltd
movsl
ljmp
outsl
in
pop
scas
iret
lock
ret
es
iret
push
xor
ret
fiadds
jle
and
popf
mov
sahf
test
js
mov
out
test
int
adc
test
xchg
call
mov
rcrb
movsb
adc
sbb
cmp
pop
mov
push
dec
inc
sub
iret
cs
push
inc
std
ret
fmuls
gs
pushf
xchg
mov
mov
jp
jle
fucomip
fistl
lock
inc
push
icebp
iret
das
dec
dec
es
sub
test
or
orb
and
jno
fnstcw
fcmovne
mov
xchg
xor
or
repnz
push
adc
test
dec
cmpsl
lret
push
xchg
call
pop
ja
popa
stc
cs
mov
cld
mov
xchg
repz
das
scas
int3
jg
xor
lods
lods
or
fldt
jo
push
andl
enter
pusha
rolb
cmp
cld
sbb
stc
ds
lds
scas
or
xlat
sub
dec
and
xchg
shlb
dec
sub
pop
jecxz
pop
shr
mov
sub
sub
sbb
mov
mov
add
int
sbb
push
out
rcrb
xchg
sahf
adc
aam
lret
xchg
shr
int3
lods
or
jecxz
stos
lea
sub
jecxz
pavgb
filds
fwait
inc
sbb
push
xchg
cwtl
push
push
shll
pop
mov
sub
pop
in
movsl
lret
rcrb
mov
mov
sbb
cmp
cltd
clc
push
mov
std
aam
mov
lret
dec
aam
nop
int
dec
adc
mov
dec
call
mov
jp
sbb
outsl
dec
rcr
xlat
cltd
cmp
aam
lret
mov
add
jmp
push
test
call
push
pop
sbb
jecxz
adc
jb
aas
popf
cld
pop
xchg
push
mov
js
mov
push
mov
sbb
lock
fisttpll
jno
pop
cmp
movsb
scas
pop
pop
les
and
je
pop
fnstcw
cwtl
jg
jp
jno
xchg
lea
iret
and
sbb
mov
mov
mov
sbb
and
sbb
bnd
mov
scas
cmc
jne
imul
adc
push
ljmp
sbbl
add
test
push
add
pop
jae
xchg
fucomip
repnz
out
ljmp
adc
inc
pusha
cmpsl
pusha
dec
jmp
and
pop
lret
sbb
cmp
sub
popa
sbb
rcr
jl
mov
push
mov
outsl
fsubrl
dec
or
sub
leave
scas
lds
lods
add
add
pop
std
or
nop
pop
cmp
jns
dec
imul
cmpsl
push
push
sarl
mov
into
jmp
stos
outsb
mov
lret
loope
lahf
xchg
lds
xchg
jg
cmp
fcompl
mov
xor
insb
arpl
in
dec
outsb
scas
and
in
into
into
mov
and
and
movb
pop
cmp
jge
mov
fsubrs
mov
push
ss
repnz
mov
rcr
scas
mov
dec
movsl
insl
imul
xchg
inc
inc
dec
ret
arpl
jg
scas
cld
pop
mov
sub
push
sbb
jb
xor
sub
aam
insb
aas
test
mov
pop
data16
test
gs
rolb
pusha
jo
cmp
push
jne
inc
and
push
mov
into
imul
dec
lods
or
or
sub
lods
inc
sub
mov
ja
cmp
sub
aas
jg
pop
mov
adc
sbb
sar
dec
mov
dec
xchg
mov
call
mov
ljmp
cmp
jns
cmp
scas
ja
mov
std
mov
outsb
jns
shl
scas
movsb
xchg
and
sub
mov
or
daa
test
mov
stos
jp
jbe
notl
xchg
repnz
inc
adc
outsb
das
lods
movsb
int3
push
push
movsb
lcall
aas
fistps
ficomps
sbb
xchg
and
jle
cmp
and
mov
push
dec
das
ficoml
jl
add
ret
sbb
lret
mov
hlt
sbb
dec
mov
xchg
lods
gs
ror
sub
imul
test
bound
inc
out
popf
sub
pop
and
and
pop
sbb
lcall
cwtl
mov
mov
pusha
rorb
push
stos
shlb
dec
lea
sub
lcall
shlb
and
in
mov
test
pop
push
cltd
popa
pop
out
dec
pop
jl
pop
cmp
mov
scas
push
mov
mov
push
pop
fcomps
data16
lret
call
popa
xchg
pop
mull
mov
fdivr
dec
jae
dec
pop
dec
push
adc
adc
std
popa
std
fldenv
insb
and
pop
mov
sahf
sbb
fnsave
xor
mov
test
imull
mov
add
mov
out
mov
shll
sbb
add
inc
lret
cmpl
outsl
mov
out
dec
lods
dec
sub
ljmp
add
mov
jle
cmp
fadd
cld
add
sarl
into
sub
fstpt
mov
add
pop
xchg
push
test
movsb
mov
pop
daa
lahf
popf
popf
add
sbb
cwtl
cwtl
rcrl
fdivrs
mov
xchg
rcl
adc
mov
jecxz
sbb
and
dec
pusha
mov
pushf
shll
push
jle
mov
cwtl
inc
cmc
jg
mov
es
repnz
push
nop
mov
aam
test
jp
mov
out
popf
pushf
cmp
ds
popf
fistl
es
aaa
pop
mov
rclb
mov
shlb
cmp
out
mov
inc
ljmp
dec
xchg
pushf
pop
jle
inc
gs
cmp
sbb
aad
les
test
nop
mov
mov
xchg
outsb
in
imul
pop
insb
mov
mov
xchg
addl
cmp
mov
in
pop
xor
and
sub
lea
lods
adc
test
jecxz
aas
add
loop
daa
mov
fnstcw
xor
fwait
push
mov
sbb
repnz
leave
lret
or
or
cmpb
cmpsb
mov
in
jo
push
jp
test
mov
aam
lods
rcl
xchg
fadds
into
icebp
lods
ljmp
inc
lea
and
hlt
mov
pop
push
mov
sbb
sub
cwtl
mov
lret
es
mov
mov
cmpsb
scas
int
mov
fildl
or
daa
nop
mov
ret
sub
add
aaa
fptan
push
push
ss
cmp
mov
push
cltd
movsl
imul
mov
mov
loopne
call
movl
fwait
pop
loop
fdivrs
pop
lcall
pop
sbbb
scas
mov
push
dec
and
inc
jmp
dec
test
jecxz
bound
cmp
movsb
clc
xchg
ret
pop
xlat
sarl
mov
push
inc
rcll
sbb
mov
lahf
adc
mov
sahf
pop
mov
pushf
incl
inc
pop
sti
fsub
pop
add
jae
sbb
sti
jo
adc
in
dec
out
lret
in
out
inc
push
add
lret
dec
xor
push
daa
movsb
mov
arpl
or
out
je
jnp
cmc
fnstenv
ficompl
pop
das
clc
adc
lods
jae
push
jmp
rcll
sbb
out
mov
add
pop
daa
pushf
inc
mov
cwtl
sub
cli
xchg
jne
notl
cmp
stos
mov
xor
pop
fs
stos
jae
lock
loope
mov
push
in
push
inc
loop
mov
pop
mov
scas
mov
mov
aas
inc
js
cmp
pop
cmc
push
jae
popa
mov
pop
out
dec
scas
int
aas
adc
out
stos
or
or
add
popa
ficoms
mov
and
sbb
testb
push
xor
repnz
inc
pusha
lock
cs
mov
mov
lds
ja
ss
sub
inc
xchg
sbb
in
mov
jp
push
shll
push
in
dec
rcll
pop
inc
rorl
mov
cwtl
call
in
mov
sub
xor
stc
pop
mov
sti
notb
and
push
repnz
jl
push
insl
or
push
or
outsl
call
repz
std
pop
mov
ficoml
iret
mov
in
xchg
push
lret
stc
dec
nop
and
pop
scas
mov
leave
xchg
sbb
leave
push
jo
xor
mov
pop
loop,pn
pop
fdivp
into
mov
rcr
mov
jb
inc
cmp
xchg
mov
pushl
lods
sub
in
outsb
idivl
out
push
pop
test
add
cmc
add
mov
fidivrs
stos
xchg
nop
xchg
cwtl
cmp
aam
cmc
mov
mov
hlt
mov
sub
fs
mov
int3
aam
cmp
fwait
pop
cwtl
notl
jo
mov
push
xor
das
mov
scas
cmpsb
mov
add
or
mov
shr
ljmp
adc
mov
dec
cmpsb
int3
loopne
xor
in
adc
jnp,pn
in
out
test
es
test
mov
pop
cmp
pusha
int
fildll
inc
lahf
cmpsb
jne
dec
addr16
rclb
xor
mov
int
in
dec
lret
int3
rolb
rep
or
inc
cli
add
cs
cmp
and
xchg
lock
insl
and
insl
dec
stos
xchg
push
arpl
lahf
ljmp
inc
addl
push
sbb
imul
inc
imul
xor
cs
pop
sub
imul
inc
arpl
or
push
sti
pusha
inc
push
sbb
push
fistps
cli
iret
push
ficomps
hlt
sub
cmp
cmpsl
repnz
mov
push
xor
mov
dec
lods
dec
jg
mov
lds
movsb
fldenv
cmpb
pop
std
pop
mov
clc
mov
aam
divb
xchg
pop
arpl
nop
push
insl
mov
lret
pop
mov
add
in
orb
das
ds
std
sahf
faddl
pop
insb
in
push
mov
lock
insl
mov
jbe
insb
push
out
pop
dec
int
inc
dec
pushf
jo
loope
addb
mov
dec
imul
aam
pop
push
and
fnstcw
adc
cmp
xlat
jb
pop
hlt
shlb
push
sbb
out
test
and
add
inc
jecxz
inc
xchg
jnp
push
adc
mov
sti
pop
mov
pop
cmc
sbb
xor
sahf
and
mov
in
leave
movntdq
daa
popf
insb
leave
cmpsl
push
mov
xor
xor
jne
repz
inc
cmp
jge
cs
push
inc
icebp
push
push
jbe
mov
sbbl
inc
ret
xchg
leave
sub
mov
or
xchg
mov
andb
outsl
jno
pusha
data16
jle
pop
daa
repz
xor
cmp
xor
jmp
inc
insl
lea
jmp
inc
lret
sub
or
jns
adc
pop
loopne
sahf
pop
pop
test
jmp
sbb
rcll
push
or
gs
pop
inc
nop
add
or
push
xchg
inc
les
dec
adc
sub
fistps
jae
das
mov
scas
push
jb
cwtl
dec
repnz
fs
sub
dec
mov
dec
scas
loope
adc
add
aas
pop
sbb
push
jge
ficomps
inc
cwtl
notl
ja
popf
dec
pop
hlt
push
mov
insb
dec
ficoml
inc
out
sub
xlat
daa
shrl
push
inc
add
sti
add
sub
or
dec
mov
cmp
jno
repnz
push
aad
test
in
adc
xor
jecxz
or
daa
and
mov
movsb
ffreep
and
mov
jle
mov
pushf
dec
pop
jbe
shl
rclb
in
xor
insb
stos
or
or
call
mov
pop
jle
and
mov
mov
sbb
mov
mov
loope
insl
cmp
cmpsb
jo
out
int3
in
xor
imul
les
inc
mov
jle
pop
xchg
mov
int3
call
fs
xor
xor
or
out
jg
jge
inc
cmp
cmp
pop
fdivrl
stos
pushl
xchg
rorb
jno
mov
xor
push
imul
in
push
cmp
mov
mov
jl
pop
jp
push
cld
lret
pop
mov
jne
dec
in
push
mov
mov
mov
cmc
sti
test
cmpsl
pop
cmpsl
in
inc
adc
add
dec
jo
cmpsl
iret
adc
fnstcw
lcall
ret
jecxz
rclb
jb
jae
sbb
in
repz
push
call
cmp
imul
ret
lods
or
add
fcoms
pop
jle
data16
lcall
push
in
scas
ss
lock
mov
lcall
inc
cmpsl
js
clc
and
out
pop
out
fnstsw
jb
mov
push
sbb
push
xchg
push
sbb
push
insl
outsb
daa
scas
or
orb
inc
fstps
jecxz
gs
push
nop
sbb
aaa
aam
push
xchg
mov
aam
aas
xor
inc
adc
adc
in
dec
outsl
insl
ja
iret
xchg
popa
push
data16
imul
push
and
push
mov
mov
xchg
mov
xor
or
dec
int
mov
in
int3
imul
mov
cmpsl
pop
mov
mov
adc
pusha
popa
andl
sbb
jne
mov
xchg
xor
mov
shll
in
outsb
or
pop
orb
or
push
and
add
imul
mov
sbb
push
mov
mov
out
in
pop
jno
adc
scas
mov
mov
ja
sbb
push
push
push
mulb
bound
jl
jge
mov
cmpl
cmp
inc
lret
outsb
into
sub
xor
repz
stos
or
inc
lcall
jg
cli
ret
sarb
jg
fidivrs
cwtl
notl
cmpsl
andps
into
js
imul
in
lea
mov
and
sbb
add
sub
mov
lcall
mov
scas
pop
test
mov
mov
push
out
push
pop
or
sbb
pop
jle
inc
push
cmp
sbb
pop
push
ljmp
push
aam
mov
mov
divb
rcl
daa
xor
or
adc
inc
ds
pusha
dec
test
idivb
sbb
mov
jg
push
jle
cmp
popf
fcmovb
push
xor
test
and
or
xor
push
mov
mov
cmc
push
rcrb
pop
jecxz
movsl
add
sarl
cmp
lahf
je
push
in
pop
xchg
adc
lret
gs
or
xchg
inc
ljmp
pusha
and
push
pop
daa
jnp
mov
fildl
adc
mov
mov
in
in
nop
scas
inc
sub
sub
add
jns
in
into
jmp
jno
mov
pop
jge
push
sbb
mov
clc
repnz
cld
scas
scas
lea
nop
push
adc
mov
mov
lret
adc
cmp
divl
pop
mov
xor
sarb
cltd
jns
xor
add
in
adc
movb
push
dec
sbb
scas
sbb
xor
sub
push
xor
loopne
sbb
aaa
xchg
lock
xchg
mov
lret
inc
lret
call
mov
cmp
inc
xor
add
jne
stc
jns
mov
mov
std
xchg
mov
mov
xor
push
mov
sub
int
sbb
jns
inc
or
cmpsl
es
push
adc
rcr
or
jne
repnz
adc
lret
int
xchg
int
xchg
jo
sub
push
outsb
mov
test
lcall
jge
sahf
pop
pop
bnd
sbb
push
and
push
push
and
adc
mov
sub
pop
movsb
shll
loopne
mov
push
das
mov
cwtl
lret
sub
popf
or
mov
out
nop
or
push
repnz
lock
out
pop
rorb
lahf
and
xchg
jo
jae
add
outsl
mov
and
lods
ss
xor
imul
sbb
cmc
and
pushf
repz
sbb
fmul
lds
fs
jae
pusha
inc
pop
jle
cld
mov
and
popa
cmp
dec
lcall
mov
mov
shll
or
es
cmp
lock
in
addl
hlt
mov
dec
fists
jp
hlt
jl
pop
mov
out
jo
dec
cmp
movsl
adc
shr
dec
cmpsl
enter
add
cmp
jge
jl
in
stc
movsl
xlat
insb
xlat
mov
dec
aam
in
ret
adc
cmp
cmc
int3
dec
in
sub
cwtl
pushf
insl
call
aaa
out
test
lods
xchg
arpl
jo,pt
mov
sbb
leave
mov
mov
nop
loope
jecxz
dec
mov
sub
sub
mov
inc
xor
jg
es
mov
cli
mov
xchg
jne
pop
imul
popf
xor
jae
ja
lods
mov
bound
inc
gs
enter
pushf
mov
popf
cld
ds
fdivs
ds
cmp
xchg
cmc
sbb
push
push
ss
repnz
cmp
shrl
mov
ds
cmpsb
loop
inc
aas
testl
jle
rolb
xchg
repnz
aaa
test
mov
dec
subl
dec
xor
inc
adc
mov
adc
mov
cmp
add
cs
aam
xchg
out
aad
adc
dec
out
rcl
into
insb
inc
dec
dec
ljmp
test
gs
insl
jnp
jns
inc
test
mov
pop
xchg
xor
push
pop
lock
mov
das
into
pop
into
shlb
inc
adc
lret
sub
stos
les
incl
mov
loope
inc
je
mov
and
mov
jno
adc
sub
inc
in
mov
popw
outsb
or
mov
cmp
pop
cmp
sub
popf
cld
pop
sti
orl
in
jbe
push
or
mov
mov
push
cmpb
mov
or
push
or
sub
movsb
pop
push
cmp
aam
pushf
pushf
inc
push
mov
pop
notb
adc
mov
push
mov
outsl
mov
lea
leave
scas
shl
flds
gs
cmpl
jg
repz
jbe
lret
mov
dec
out
out
insl
push
jno
sub
test
repnz
or
add
cmp
lcall
stos
pop
xor
outsl
push
mov
xor
repnz
inc
imul
dec
sub
cs
mov
aad
and
test
es
inc
or
sbb
stc
pop
sub
ss
jo
out
mov
xchg
mov
and
push
pusha
sub
ror
pop
cmp
arpl
dec
inc
in
sbb
fadds
mov
jb
push
mov
into
ret
inc
movsl
jns
ret
inc
mov
inc
inc
test
loopne
dec
gs
mov
mov
sti
mov
mul
fildl
xor
icebp
dec
sbb
lds
lods
mov
add
addb
ret
into
lahf
sbb
mov
clc
adc
xchg
out
add
push
iret
insl
dec
icebp
leave
in
mov
sub
mov
xchg
push
xor
pushf
fsubrs
and
mov
add
xlat
jb
xor
aas
lods
xor
fisubrs
insl
outsb
jl
dec
push
stos
int3
pushf
cld
and
xchg
loopne
int3
jl
mov
add
mov
inc
sbb
dec
adc
sti
data16
call
xor
sub
call
adc
iret
andl
leave
cli
cmc
pop
sahf
addb
mov
push
jae
lret
scas
sub
int
in
mov
push
cld
inc
test
and
fcmove
sti
cmpb
xchg
je
jo
out
repnz
adc
enter
push
cmpsb
iret
int3
fnstenv
jb
mov
xor
pop
insl
add
add
cmp
xchg
mov
arpl
adcl
clc
cmpsl
mov
repnz
push
push
inc
and
push
call
cmc
data16
aaa
into
pop
xchg
icebp
cmp
pop
rcll
bound
lods
movsb
xchg
sub
stos
pop
int3
add
mov
pushf
and
jg
push
xchg
cmp
loop
xchg
sbb
jnp
cmp
ds
xchg
mov
jo
xchg
adc
mov
outsb
lret
gs
and
xor
inc
mov
mov
sbb
stc
mov
jae
jo
push
fidivs
cld
lret
movsl
inc
insl
push
mov
daa
xchg
jle
xchg
dec
mov
xchg
sbb
jg
jle
je
mov
adc
inc
sbb
mov
je
pop
in
xor
or
pop
loop
test
loop
mov
fidivrs
std
loopne
mov
clc
cmp
divb
repnz
jnp
xchg
or
xchg
cli
sub
xor
out
out
mov
fstpl
xchg
mov
push
and
mov
mov
xor
jb
hlt
xchg
sub
xchg
daa
pushf
or
jmp
dec
stos
pop
mov
clc
gs
pop
sbb
sbb
pop
mov
mov
push
ffree
lods
or
mov
stos
or
sub
xchg
add
cwtl
in
or
xor
fildl
stc
pop
or
xchg
adc
hlt
adc
adc
or
dec
test
lret
or
loopne
inc
jg
push
inc
mov
pop
jg
add
lcall
xor
clc
jns
sti
xchg
mov
mov
aaa
shl
jno
cmpsl
pushf
insl
scas
jmp
jmp
lahf
mov
mov
ds
jp
cmp
pop
cmp
xchg
repnz
jno
jne
mov
leave
das
lods
mov
inc
call
inc
test
sbb
ds
mov
fstpt
negb
mov
pop
shrl
lock
outsb
je
xor
inc
lret
or
sub
or
in
loop
and
bound
and
pop
jge
ljmp
cltd
lock
lea
push
dec
or
jmp
or
in
dec
out
mov
and
arpl
jae
xor
jle
jecxz
mov
xchg
jnp
gs
out
adc
dec
sbb
fs
pop
sub
xor
mov
scas
and
rclb
mov
rol
cmp
stc
jp
cmpsl
adc
xor
andb
jo
pop
add
dec
outsl
jno
cmp
push
push
cbtw
or
lds
add
pop
cmp
pop
fsts
xor
ss
mov
inc
iret
das
jbe
xchg
sub
xor
mov
ljmp
sub
jle
nop
xchg
arpl
mov
sbb
cli
lret
add
cmp
xchg
fdivs
push
fucom
mov
ror
xor
lret
mov
icebp
dec
jl
addr16
imul
or
ds
adc
popf
pop
frndint
popa
jmp
xor
xor
adc
icebp
data16
lods
iret
dec
sub
jmp
and
sub
popf
cmp
jnp
ret
mov
mov
cwtl
aaa
push
xchg
mov
xor
push
adc
mov
xchg
dec
loopne
jmp
stos
iret
xor
pusha
xchg
and
mov
inc
pushf
pushf
cmp
pop
aaa
sarb
xchg
adc
xor
outsb
inc
stos
or
fimuls
push
inc
and
jecxz
dec
lds
inc
mov
add
add
mov
cwtl
imull
bound
push
push
repz
adc
xchg
xor
mov
aam
lds
es
pusha
loope
and
push
stc
pop
cmc
lcall
jbe
push
lret
cmp
jno
cmp
imull
test
lea
lret
int3
mov
mov
arpl
out
add
mov
dec
test
push
push
mov
jo
cmc
push
lock
lods
iret
xor
dec
out
popa
fisubrs
mov
lahf
pushf
sbb
add
cmp
jns
xlat
pop
mov
mov
dec
enter
cs
outsb
nop
repnz
inc
add
int3
inc
fisubs
cmp
in
sbbl
movsl
xor
push
mov
sti
inc
negb
div
nop
jb
mov
mov
test
clc
mov
and
frstor
adc
sbbl
pusha
test
and
push
jne
mov
repz
notb
xor
pop
insl
push
jne
sub
mov
rol
lahf
fdivrl
pop
and
fnstcw
cwtl
cmp
adc
out
lea
push
dec
fucomip
pop
insb
xlat
add
mov
cs
out
arpl
insl
and
mov
jl
cld
cltd
and
rolb
int
adc
lods
jle
mov
or
jle
out
dec
lds
add
add
mov
jnp
notl
xor
adc
js
sub
mov
std
mov
dec
ljmp
xor
lret
mov
fnstcw
or
fstpl
jl
sbb
jne
out
int
or
notb
push
bound
add
inc
clc
and
push
jg
mov
mov
or
sbb
lss
pop
sarl
xor
insl
jmp
xchg
sarb
add
and
popf
aas
xchg
mov
cmc
mov
xchg
dec
xor
divb
je
push
je
scas
in
or
sub
stc
jmp
test
fsubrl
jno
push
mov
mov
leave
mov
jne
hlt
mov
jb
push
pushf
adc
daa
lods
and
or
jo
inc
xchg
test
fadds
add
dec
outsl
pop
repz
lods
lcall
stos
xchg
pop
daa
pop
int3
dec
ret
pop
push
frstor
loopne
pop
xchg
cmp
cmp
pop
pop
jo
mov
dec
adcl
xchg
lods
or
sub
lds
and
cmpsl
mov
arpl
bound
ss
cmp
pop
dec
xchg
cmp
subb
or
cs
mov
and
adc
jg
les
sbbb
jmp
cmp
mov
xchg
xor
xchg
mov
jmp
sub
in
mov
gs
cmpl
ficompl
sbb
stos
pushf
xchg
mov
cmp
shrb
cli
add
or
mov
loop
mov
inc
mov
inc
aas
aas
pop
sbb
icebp
fnstenv
jb
lcall
in
xchg
ja
mov
xlat
out
pop
mov
sub
sbb
test
or
cmp
mov
pop
mov
sbb
adc
adc
fdivl
mov
ret
leave
lea
or
movsl
and
das
mov
fs
inc
aam
fstps
ret
adc
jb
xchg
push
mov
pop
out
dec
ljmp
ds
dec
or
sbb
mov
arpl
mov
sbb
mov
adc
mov
add
das
cmp
lret
dec
mov
shlb
inc
mov
ret
fdivrl
inc
mov
xchg
xchg
push
lock
adcb
xchg
push
mov
mov
call
and
add
cli
andb
js
cmp
aam
xorl
xor
or
int
or
repnz
addr16
xor
jg
sbb
pop
jp
setae
xchg
jne
jl
test
mov
sbb
or
sub
inc
sub
inc
mov
loop
pop
mov
aas
fidivl
pop
dec
adc
xor
lret
jb
aad
shlb
push
outsl
test
dec
pop
lds
lret
push
mov
xchg
fidivrs
popf
fcmovb
jne
ds
cltd
adc
jne
push
pop
dec
xchg
cltd
inc
pop
adc
pinsrw
jmp
inc
cmp
pop
inc
mov
daa
movsb
mov
out
jns
ds
mov
sbb
cltd
xor
sbb
mov
push
adc
push
dec
and
push
fs
filds
popa
cmp
bound
inc
and
sbb
cmc
jecxz
pop
cmp
ficoml
xor
test
rolb
or
jne
cmpsl
cli
arpl
pop
sub
pop
loop
mov
pop
fcompl
repz
std
fsts
xchg
movq
inc
clc
xor
enter
or
stos
jecxz
scas
inc
lret
pop
fadds
inc
inc
pop
push
or
push
cs
loopne
mov
jl
fidivl
adc
pop
sti
mov
jg
call
dec
in
sub
das
cmpsb
inc
fimull
xcrypt-cfb
cmpsl
in
ds
and
add
inc
push
dec
adcb
xor
cld
push
js
mov
lods
push
mov
pushf
xchg
imul
and
add
push
testb
mov
pop
cmp
cmc
shl
jb
mov
cmc
xchg
pop
mov
dec
pop
xor
lods
push
sub
and
dec
inc
cli
jl
rclb
popf
xor
mov
cs
clc
int3
cmc
push
mov
pusha
rclb
push
mov
scas
sub
jmp
stos
enter
pop
ret
mov
inc
mov
fidivrs
lea
adc
mov
xchg
push
imul
pop
sub
dec
imul
dec
cmpsl
cltd
movsl
loope
insb
jecxz
inc
add
jb
sbb
pop
das
dec
adc
sub
mov
roll
push
ljmp
or
cmpsb
push
mov
vpandn
mov
cld
jnp
sbb
xor
push
xchg
jno
push
mov
mov
xor
dec
and
dec
test
in
lret
mov
mov
xor
rcll
sbb
bound
mov
cld
jmp
bnd
jbe
xor
mov
in
pop
mov
stos
mov
jge
call
lds
add
inc
or
xor
cmc
sbb
imul
mov
jns
cmp
imul
mov
cmp
lcall
push
jns
test
roll
icebp
data16
in
dec
ficoml
push
push
out
imul
lret
add
rcr
add
jp
sbb
pop
scas
fstpt
lcall
loopne
rcrb
sbb
lods
mov
sub
rol
iret
das
loope
inc
push
call
imul
cmp
sbb
and
je
mov
stos
cld
andb
push
adc
adc
lock
push
inc
in
mov
jp
flds
mov
sahf
cmc
jne
aam
jl
mov
or
mov
or
inc
or
inc
and
add
mov
pop
mov
and
lds
xorps
mov
mov
insb
mov
adc
inc
cs
pop
push
adc
imul
and
pusha
popa
add
ficomps
jne
mov
push
stc
push
mov
xchg
mov
movlps
outsl
das
lock
in
imul
ljmp
daa
les
sbb
loopne
fcompl
xchg
xor
aaa
js
pop
notb
xor
dec
icebp
or
or
mov
ljmp
mov
loopne
loop
mov
ret
push
jae
jnp
ljmp
push
jb
and
sbb
bound
or
fisttps
and
insb
xchg
sbb
xchg
in
jp
pop
jl
inc
movsb
fstpt
sbb
xlat
xlat
push
aad
mov
aaa
jbe
loop
lods
or
or
leave
enter
clc
inc
ds
jecxz
cmp
mov
push
ja
xor
push
pop
nop
pop
cmpsb
mov
sub
jno
ljmp
in
movsl
lock
jbe
arpl
out
fmulp
mov
push
mov
inc
fistps
scas
pop
aaa
sahf
sbb
push
sar
addr16
mov
jecxz
push
int3
bound
mov
in
insb
cwtl
xor
ret
mov
jne
cmp
xor
je
xchg
mov
stos
lods
dec
or
in
lea
jmp
das
shll
in
and
sbb
ret
iret
cwtl
push
mov
xor
aaa
clc
dec
jno
push
xchg
rcl
adc
out
or
sub
inc
sbbl
lret
sbb
sbb
in
push
stc
rcl
scas
xchg
mov
hlt
das
inc
jb
jnp
dec
lods
mov
jmp
xor
ljmp
xor
cmp
push
imul
inc
xor
dec
out
adc
dec
jmp
movsl
sub
or
in
dec
loop
add
pusha
iret
pop
cmp
in
mov
test
mov
xchg
repnz
add
es
sub
subb
in
and
inc
mov
jp
sahf
sbb
cli
cli
lcall
mov
aam
mov
mov
dec
lods
push
mov
aam
fisubl
inc
inc
push
and
jns
jg
out
mov
ds
jnp
cli
mov
ja
adc
jae
add
cmc
nop
lock
or
movb
lods
push
fld1
arpl
dec
push
mov
sbb
pop
add
gs
mov
xchg
out
mov
aaa
pop
bndstx
lahf
mov
pop
clc
sbb
push
sub
cmpsb
lock
adc
mov
sahf
inc
aaa
jne
cld
mov
xor
xchg
shlb
xchg
scas
scas
lods
in
inc
dec
jl
ljmp
cwtl
jae
shl
loopne
pop
clc
pop
push
lret
mov
push
rol
push
xlat
int
xchg
mov
mov
call
mov
test
xor
cmpsl
cmpsl
push
data16
dec
jbe
push
mov
les
sbb
mov
es
shl
adcb
cmpsl
aas
xchg
mov
cmp
add
shlb
add
jns
lods
and
push
ss
das
sbb
lods
inc
xchg
and
int
pop
jge
lret
sub
mov
push
test
arpl
int3
xchg
jl
lahf
decb
loope
xor
cmp
loope
jb
je
pushf
xchg
scas
fxch
sahf
lock
cs
adc
pushf
lods
push
mov
ret
out
cli
push
ret
push
or
mov
pop
mul
js
lahf
cs
xlat
mov
mov
inc
adc
mov
cwtl
push
insl
stos
mov
repnz
jg
mov
dec
les
pop
pop
loop
int3
stos
fsubl
sub
sahf
push
jne
xchg
xchg
dec
push
jmp
cs
xor
and
imul
dec
fs
je
inc
push
cmp
shlb
jnp
mov
cwtl
cmpsb
inc
sub
jne
jae
adc
adc
mov
or
dec
lods
or
dec
sbb
int3
dec
stos
pop
data16
test
nop
jae
rorb
fidivrs
cmp
sahf
mov
mov
push
mov
scas
inc
xchg
adc
aad
ret
scas
push
insl
or
inc
das
dec
cmp
dec
cmpsl
inc
jp
mov
inc
scas
lds
fistpll
pop
fdivrs
idiv
xlat
jae
dec
aam
daa
lock
fdivrl
inc
mov
out
push
scas
int3
push
inc
fadds
es
out
push
cmc
fs
jp
jle
fdivrl
aas
xorb
sarb
jbe
lock
xchg
cmpsb
push
jae
adc
insl
xorb
push
in
fwait
push
push
or
mov
and
inc
in
pop
mov
fmuls
mov
addr16
xchg
mov
adc
jmp
jecxz
xchg
jmp
movl
adc
lahf
leave
cmpb
and
sti
xchg
dec
dec
cmc
aam
shrl
push
aaa
pop
iret
das
mov
lret
xchg
dec
cmpsl
pop
das
push
addr16
jl
sbbl
jg
ja
idiv
cmp
mov
mov
xchg
sub
das
push
mov
nop
xlat
xchg
in
and
ret
lea
dec
pop
lret
sub
ret
test
or
vrsqrt14sd
push
pop
and
inc
pusha
jge
mov
enter
js
mov
xor
int3
fmulp
adc
pop
test
mov
mov
xchg
cmp
iret
popf
sbb
mov
mov
xor
mov
ds
notl
in
mov
out
dec
insl
test
arpl
imul
pop
fidivs
push
mov
cmp
aam
xchg
repnz
push
aas
popa
add
int3
dec
popa
out
or
jbe
int3
lahf
lcall
add
cltd
mov
xor
mov
mov
roll
imul
in
pop
inc
call
popa
popa
mov
cld
pop
mov
push
loopne
lock
push
sbb
lahf
repnz
mov
jl
jge
lret
mov
mov
sar
fdivrp
or
sbb
ss
cmp
add
push
jne
xor
push
xchg
fcoms
jo
mov
fiadds
sub
outsl
iret
loop
outsb
add
cmp
dec
cld
loopne
jecxz
xor
mov
in
lahf
adc
pusha
add
cmp
outsb
int
dec
jmp
call
xlat
loopne
push
je
and
jecxz
in
cld
arpl
fsubrs
ss
cwtl
icebp
xorl
pop
out
adc
xchg
add
add
xchg
jle
mov
ds
add
repnz
je
pushf
xchg
psubusb
adc
cmpsl
and
out
ljmp
inc
sti
inc
mov
mov
fdiv
pop
loopne
jb
je
mov
std
sarb
xchg
rclb
insl
int3
or
push
fisttpl
mov
or
lcall
sbb
leave
adc
or
adc
add
jge
adc
call
adc
imul
fldl
xlat
push
test
xor
mov
in
outsl
pop
icebp
mov
bsf
dec
dec
jno
enter
stc
xor
cmp
ret
loopne
cs
xchg
mov
jg
mov
push
bound
jp,pn
mov
movsb
cmpsb
dec
stos
or
lods
sbb
sub
leave
and
mov
testb
mov
jnp
jp
repnz
test
adc
push
xor
cmpsl
dec
inc
mov
in
jg
test
push
rcrb
clc
movl
push
pop
ds
push
out
xchg
ficomps
or
repnz
out
in
lret
ljmp
iret
das
inc
mov
and
shl
popf
std
dec
fwait
jno
inc
push
js
cmp
xlat
dec
inc
and
inc
push
mov
scas
push
call
sbb
and
lds
add
das
jns
cmp
xor
mov
aaa
lock
scas
dec
mov
aas
lock
or
xor
ja
inc
clc
mov
cli
addr16
lods
cmp
sbb
adc
xor
or
and
and
inc
rorb
lock
int3
clc
faddl
xchg
shlb
ss
jp
adc
sbb
jae
shll
push
mov
adc
nop
xchg
mov
mov
lret
call
cmp
test
mov
cmp
pushf
popf
cltd
xor
jp
push
cmp
sbb
fnsave
xchg
dec
in
lock
rcl
ljmp
lods
cmpsl
lcall
inc
mov
xor
std
or
xor
xor
repz
scas
mov
sub
sub
jp
sbb
inc
xchg
ds
inc
inc
fsubl
in
jle
xor
imul
pop
push
mov
xor
xchg
scas
loope
mov
out
adc
dec
inc
sbb
inc
and
test
lahf
adc
enter
fidivrl
xor
mov
mov
sbb
push
sub
ficoms
in
in
insl
call
movl
mov
mov
xchg
and
mov
jae
insb
xchg
jae
xchg
hlt
push
mov
mov
enter
sub
add
fs
push
ret
mov
and
mov
iret
scas
mov
mov
dec
cmp
sbb
adc
xlat
jb
adc
mov
shlb
stc
dec
mov
and
fbstp
sub
data16
lcall
add
pop
cmpsl
pop
cmp
loope
mov
int3
je
xchg
jb
mov
xor
mov
mov
andl
pop
bound
aam
pop
push
mov
and
cmp
imul
movd
int
pop
mov
aas
ljmp
add
and
in
dec
adc
xchg
notb
jp
cmp
ja
lcall
push
jne
mov
popf
mov
sbb
add
sti
repz
decl
jecxz
repnz
ja
mov
sub
jne
enter
test
push
adc
gs
ds
mov
ret
lods
or
pusha
shlb
cmp
adc
pop
iret
pop
jne
mov
sbb
sub
fmul
out
cmpsl
ss
lret
mov
push
mov
add
rcll
fstpl
in
sbb
xchg
imul
adc
inc
xor
mov
cmpsb
sti
int3
inc
and
and
mov
jle
stos
xchg
mov
and
scas
pop
jns
pop
pushf
aaa
mulb
xlat
shl
sbb
push
mov
mov
fldt
xchg
test
aad
inc
xchg
mov
jge
jge
aaa
jge
push
push
jge
stc
jne
in
jp
iret
dec
stos
cmp
lret
call
mov
add
ret
cmpl
xor
xchg
push
fstpl
mov
adc
sbb
push
das
push
imul
and
in
daa
mov
in
popf
fisubs
daa
mov
cwtl
ss
mov
xchg
shrb
mov
xchg
daa
push
aas
movntps
mov
addr16
arpl
addr16
test
sbb
inc
bound
cmp
jns
mov
lcall
cmc
idivl
and
push
test
cld
lret
jle
imul
add
iret
xor
mov
lock
call
dec
or
fwait
call
jge
stos
lea
daa
cmp
ret
jo
inc
sbb
push
fistpl
cmp
sti
rcrl
pusha
pop
mov
and
nop
or
mov
adc
out
ds
mov
movsb
call
push
push
cs
loopne
mov
jl
fidivl
adc
pop
sti
scas
mov
xor
aam
or
jmp
xchg
jl
aas
filds
xorl
ja
mov
jns
shl
ficoms
xchg
loop
mov
cs
push
pop
insb
insl
pop
adc
jmp
or
lock
sbb
aas
arpl
xor
gs
cltd
aad
xlat
es
and
dec
xchg
mov
push
je
mov
mov
and
popa
and
pop
fsubl
mov
mov
popf
inc
pop
mov
sub
xchg
xor
xor
lds
sub
int3
push
sub
out
mov
inc
ljmp
cmpsb
fidivrs
cmp
divb
cmp
adc
lahf
insb
cvtpi2ps
sbb
cmp
mov
fnstsw
ficoml
jnp
sti
aad
push
adc
push
ljmp
les
arpl
inc
pop
jle
mov
jle
fistpl
inc
pop
jl
adc
mov
mov
mov
imul
push
out
stos
test
mov
call
and
and
sbb
test
gs
clc
add
mov
mov
cli
fs
mov
adc
jmp
arpl
push
sub
or
fsubl
cld
push
xor
in
pushf
add
psraw
lea
jnp
pop
mov
mov
inc
js
sar
pop
xchg
scas
jno
pushl
sub
jmp
stos
or
fmuls
mov
inc
add
data16
lds
jno
sarb
jnp
cld
jns
sbb
out
mov
jge
lods
shl
imul
out
mov
sbb
shlb
arpl
pop
adc
push
xlat
jmp
cmc
or
rcrb
std
fbstp
fimuls
adc
jp
mov
mov
or
test
mov
cmpb
mov
mov
push
jne
cmpsl
adc
aas
xchg
push
pop
jbe
fdivrl
hlt
push
idivl
or
lods
or
cld
push
push
inc
aam
pusha
ds
cmp
into
mov
push
xlat
xchg
andl
adcb
in
or
and
dec
xor
xor
out
leave
mov
cld
repnz
inc
or
sti
cwtl
inc
mov
fidivrl
cmp
adc
add
xchg
xor
push
adc
es
lea
in
imul
jecxz
popa
and
adc
push
cld
pop
jp
js
xchg
cwtl
mull
jo
ss
outsb
xchg
cmpl
cmp
push
cmp
adc
xor
xor
loopne
jge
jle
mov
jns
mov
ja
mov
repnz
cs
pusha
jecxz
paddsw
insl
push
push
jne
xchg
sub
add
imul
jl
sbb
mov
mov
stc
fidivrl
jae
aam
lock
jno
or
dec
testb
or
sub
sarb
jne
mov
aas
ficoms
jne
jb
cmc
push
stos
xor
xor
outsl
icebp
in
lea
lret
cmpsl
lods
test
mov
add
mov
sbb
jg
mov
sbb
mov
repnz
cmp
outsb
outsb
xchg
int
in
ljmp
cmpsb
mov
push
popf
dec
cmc
jg
jg
jle
sbb
popf
aaa
sbb
sbb
mov
nop
cvtps2pi
push
leave
cs
push
shlb
mov
inc
std
jl
push
rcr
pop
push
test
add
xor
mov
mov
sub
lea
cmp
std
and
pop
loop
inc
push
add
cmp
ja
pop
push
das
notb
mull
jmp
aaa
mov
mov
lea
data16
pop
fisubs
cmp
mov
aad
jb
cmp
inc
mov
adc
mov
jno
scas
into
dec
into
in
mov
mov
mul
add
sbb
jp
mov
jne
push
xchg
cmc
scas
sbb
adc
push
sbb
aaa
dec
int
insl
or
stos
push
inc
gs
addb
push
sbb
cmp
and
rcrl
adc
jno
mov
jo
cvtps2pi
sub
push
mov
add
outsl
and
jl
addr16
cmp
jbe
notb
adc
jmp
lret
dec
dec
xor
cwtl
push
les
inc
and
ret
xchg
in
shlb
sbb
outsb
mov
jnp
icebp
adc
enter
pop
dec
push
gs
imul
mov
popf
les
mov
mov
cli
sub
sbb
xor
xchg
mov
mov
push
push
imul
jo
inc
pop
stos
pop
out
pop
xchg
imul
inc
adc
and
add
incl
lods
js
cmpb
testb
arpl
xor
push
cmpsl
xor
int3
outsb
push
imul
inc
push
movsl
inc
enter
out
jecxz
insb
sbb
push
mov
xchg
xchg
xchg
mov
pusha
jnp
insl
xorl
lods
jp
es
mov
fsts
mov
movsb
adc
sarl
fildll
mov
xchg
ds
inc
mov
out
mov
cmovnp
shrl
mov
inc
or
push
out
jecxz
mov
sbb
rcrl
sbb
andb
clc
pop
aam
mov
int
xor
jmp
add
arpl
or
push
and
loope
lea
sbb
jbe
fisubl
lds
mov
and
int
jns
push
sub
cmc
fcoms
roll
pop
ret
add
mov
push
sub
stc
pop
pop
add
inc
add
mov
pop
rcr
or
sbb
aad
inc
and
fucomi
and
icebp
lret
add
jmp
movsb
ja
les
icebp
shlb
xor
loop
push
fcmovnu
pushf
cmp
fimull
sbb
subl
cmpsl
add
sbb
add
mov
rclb
fcomp
mov
mov
pop
sbb
test
or
or
and
cmpsl
ret
es
mov
jo
sbb
jnp
notb
cs
in
das
stos
xchg
push
push
pop
int3
pop
cmc
and
mov
push
adc
int
and
jmp
lcall
inc
pop
pop
push
cmc
fidivrl
lods
lods
out
into
lods
or
ljmp
add
pop
inc
out
push
pushf
inc
push
mov
adc
mov
xchg
lcall
pop
stos
sahf
xor
rorl
ficompl
sub
xchg
rorl
lods
cmp
pop
push
popf
pop
aas
inc
test
ret
mov
bound
stos
cmpsl
je
xor
mov
and
cmp
imul
mul
jg
cwtl
adc
add
shrb
push
xlat
inc
sahf
sbb
lods
cmp
jbe
ficoms
rorb
orb
cmp
push
daa
jl
inc
ret
loopne
cmp
jp
jle
or
lret
aam
shll
clc
mov
mov
mov
jecxz
and
mov
inc
and
ja
mov
mov
test
stc
pushf
cmp
nop
scas
nop
sub
in
cltd
sub
sub
or
pop
dec
inc
testb
fs
jae
pusha
nop
pop
jle
fdivl
ja
jbe
loopne
subl
insb
dec
mov
lods
bound
lods
mov
push
xchg
pop
xor
repnz
mov
cmp
stc
mov
int
and
cmp
lods
pop
stos
jae
imul
xchg
test
sahf
mov
adcb
sbb
jge
mov
xor
ret
xchg
inc
jne
pop
jl
lea
mov
fwait
insl
ljmp
outsb
fstps
and
jp
xorb
sbb
aam
mov
xor
nop
shrb
adc
inc
add
imul
cmc
loopne
mov
mov
xchg
fadd
mov
js
lock
sarl
cmp
and
test
pop
imul
popa
xor
je
xor
lods
dec
xor
push
xlat
stos
dec
clc
out
les
jns
bndstx
js
insb
xchg
in
fs
imull
xchg
push
inc
dec
or
test
adc
roll
addl
dec
adc
into
mov
jge
adc
jne
jmp
cs
adc
push
sahf
mov
std
pop
cli
dec
cmp
add
pop
and
and
test
ljmp
es
push
hlt
cmp
movsb
and
pop
mov
sbb
mov
or
lea
adc
jle
and
lcall
cli
hlt
mov
jge
jmp
in
xchg
lret
rorb
or
les
loope
rorl
addr16
mov
lcall
push
fcom
pop
pop
fldl
push
dec
lock
nop
lret
jne
rcll
cmpsb
in
daa
out
cltd
jb
loopne
sub
subb
loopne
add
inc
xor
sbb
out
pop
push
sub
addb
into
xchg
push
mov
fisttpll
pop
cmpsl
xor
fwait
cmc
sbb
sbb
dec
loopne
jbe
jmp
adc
sub
inc
cmc
mov
inc
cli
aam
pushf
sub
mov
mov
repnz
pop
push
xor
xor
cmp
jmp
in
pop
je
inc
sbb
clc
cmpl
es
nop
inc
les
cwtl
stos
add
lds
adc
scas
mov
jmp
cmp
cmp
sbb
inc
ss
pusha
pop
mov
ljmp
popf
std
pop
cli
mov
fs
and
fists
sub
jmp
popl
mov
cmpsl
in
push
test
arpl
andb
iret
inc
pop
jle
pop
mov
push
leave
xor
pop
pushf
inc
mov
push
xchg
cs
dec
outsb
dec
jbe
push
cmc
mov
out
daa
out
add
rorl
cld
or
insb
pop
fldcw
sbb
std
xchg
xor
push
adc
lock
cltd
push
sub
mov
enter
test
test
mov
jns
sbb
dec
dec
js
mov
bound
jne
repnz
mov
sub
aam
or
es
dec
mov
pop
lds
fucomi
add
sub
jge
cmpsb
sbb
dec
cmp
xor
xlat
pop
aaa
inc
divb
xchg
test
xchg
daa
or
dec
add
test
or
pusha
inc
add
ret
inc
cmp
sahf
pushf
sub
pop
stc
push
mov
ja
out
lea
fisubrs
ljmp
call
mov
add
sbb
dec
mov
inc
cwtl
notb
push
in
mov
mov
ljmp
adc
mov
sub
movsl
add
fisubs
fcomps
cmp
or
xchg
add
cltd
jecxz
paddsw
mov
xchg
aam
xchg
adc
popf
xor
fnstenv
testl
frstor
lret
aam
rcll
push
xor
mov
push
pop
data16
push
mov
adc
sbb
sbb
inc
cmp
jb
je
fisubrl
adc
adc
adc
jb
or
dec
cmp
insl
xchg
lock
shl
inc
mov
leave
adcb
outsl
fstl
je
rclb
xchg
pop
mov
aaa
scas
jge
sub
into
iret
and
sub
dec
out
imul
pusha
and
pop
imul
and
xchg
test
mov
in
fldcw
xchg
and
cs
outsb
mov
push
rcr
pop
shll
add
addb
negl
jp
sbbl
lods
push
dec
pop
mov
xchg
xchg
je
sbb
inc
cmpsb
aam
push
and
bound
or
shlb
aas
pop
out
lcall
cmp
mov
adc
out
rorl
imul
push
mov
test
xchg
dec
jg
ds
in
decl
dec
mov
in
mov
adc
daa
pop
out
imul
out
jecxz
cmpsb
cmp
pusha
adcl
psubq
jle
sbb
pop
test
sbb
add
xor
call
cmp
gs
cmpsb
hlt
xchg
shlb
pushf
inc
pushf
xchg
aas
jge
mov
lcall
les
movl
push
mov
push
push
out
mov
sarb
std
xchg
pop
cmp
mov
outsb
mov
xchg
cmp
je
push
or
or
test
push
and
or
mov
fscale
daa
sar
jns
xchg
das
pop
out
xchg
hlt
cmp
test
cs
insl
jg
mov
or
lea
aas
lret
call
or
jle
int3
pushf
mov
pusha
iret
mov
sbb
jl
pop
or
cld
fnstcw
mov
dec
popa
popf
pop
test
xchg
cmp
rolb
popa
shll
roll
sbb
lahf
cli
xchg
pop
xchg
lahf
ss
addr16
outsb
push
leave
out
je
sub
call
and
and
inc
test
clc
lcall
mov
shl
jg
lock
or
int
mov
mov
add
fstps
jecxz
call
sbbl
notl
ja
xchg
stc
mov
adc
cmp
notl
out
pop
popf
mov
fs
aad
add
or
pushf
and
in
shlb
and
cmp
insl
jns
mov
rcr
jb
jmp
push
push
sbb
mov
pop
mov
xchg
push
xchg
divb
mov
mov
popf
and
xor
pop
jp
adc
mov
dec
test
adc
and
cmpsl
push
mov
addr16
inc
in
mov
out
xlat
push
adc
xchg
fwait
pusha
insl
xchg
xor
rclb
rolb
push
fisubrl
int3
mov
jg
lds
push
vaddpd
int
mov
jle
gs
mov
fincstp
mov
cmpsb
inc
xor
push
jno
push
clts
or
dec
ljmp
lds
fs
add
fidivrs
pop
bound
scas
xchg
jns
adc
nop
in
or
mov
push
adc
jg
data16
sub
pop
cmc
inc
mov
add
sbb
test
xlat
clc
pop
pop
adc
xchg
cmp
lds
cmp
sub
addr16
fimuls
mov
aam
cmp
xchg
std
pop
pop
mov
pop
or
push
dec
push
jl
inc
inc
shll
mov
btr
lret
scas
fisubrl
pusha
shl
inc
mov
sbb
sbb
jne
jb
idivl
les
mov
mov
push
fisttps
and
sub
vcomiss
rcrb
adc
sbb
in
pop
xchg
repz
scas
push
rclb
jecxz
outsb
int
js
mov
cmp
movsl
mov
adc
popa
mov
inc
pop
out
fildl
ret
and
scas
mov
inc
xorl
push
add
int3
fs
sub
cmp
push
cmp
inc
mov
call
ss
sub
sbb
std
mov
jo
jp
push
cwtl
push
jg
pop
push
fisubrl
sbb
mov
push
and
addr16
and
aaa
lret
mov
es
daa
xorb
mov
and
push
decb
cmpsl
cmpsl
fsts
or
filds
pop
in
lea
cld
cwtl
push
rolb
pop
sbb
mov
mov
aas
dec
lods
jae
adcb
lahf
jnp
and
sub
mov
lds
pop
jle
ljmp
xor
mov
pop
cmpsb
inc
sub
xchg
lock
and
out
std
dec
insl
mov
mov
add
jmp
mov
mov
std
pop
mov
mov
sbb
shll
or
xor
outsl
leave
or
fstl
fnstsw
jmp
mov
jmp
xor
sub
dec
adc
das
aad
sbb
mov
sbb
mov
pop
scas
or
push
pusha
pop
mov
aas
or
sbb
add
enter
aam
fstpt
sbb
push
shl
loopne
insl
fcoml
nop
daa
enter
in
pop
or
pop
loopne
adc
mov
ja
not
dec
push
jne
xor
lret
inc
mov
ficoml
and
pop
dec
push
imul
or
pusha
rcrb
xchg
inc
and
cwtl
or
push
mov
xchg
sub
xor
dec
cs
outsb
int
mov
lret
sbb
jns
add
add
rcrb
fidivs
in
scas
call
pop
stos
outsl
hlt
aam
push
adc
adc
mov
cs
shrb
cmpsl
fimuls
adc
adc
fdivr
ss
clc
jnp
inc
sbb
mov
jb
cmc
mov
sub
fs
or
mov
and
fdivrl
sbb
std
fisubl
aam
jbe
cmp
cli
push
sub
into
rorb
xor
int3
bound
mov
test
jecxz
call
cmp
mov
cwtl
clc
div
cld
xchg
push
sbb
push
icebp
adc
inc
cld
dec
xchg
lods
lods
sub
lret
addb
push
cmpsb
jg
pusha
sarb
and
push
inc
mov
sbb
fnstcw
cwtl
mov
xchg
fwait
push
mov
dec
cmp
adc
mov
lods
int
mov
enter
out
or
popa
rclb
jl
sbb
push
push
stc
adc
fsubrs
adc
stos
adc
adc
aam
fimull
lret
pusha
leave
in
movsb
mov
and
sbbb
std
ss
sarb
jle
xchg
xchg
jnp
jb
xchg
xchg
enter
aam
test
call
and
ds
call
mov
cmp
fwait
adc
hlt
loopne
xor
pop
add
out
lock
and
sub
inc
lret
pop
xchg
test
cmp
pop
push
inc
mov
rorb
mov
dec
jl
push
lret
clc
push
enter
or
or
dec
xor
cmp
js
add
add
push
outsl
mov
lods
jae
popf
ficompl
xor
adc
scas
addr16
xchg
aas
rclb
cli
mov
xor
rcr
add
jg
cmc
movl
sbb
xchg
cmp
int
mov
scas
aad
and
jb
mov
inc
in
xorl
xchg
dec
jecxz
xchg
aam
adc
mov
mov
hlt
add
xchg
lcall
sub
lds
mov
cmpsl
cmp
and
hlt
cmpsb
push
inc
out
dec
ljmp
push
addr16
cmp
fnstsw
mov
pop
cmp
inc
aad
repnz
ja
outsl
stos
test
adc
cmp
sti
int
jmp
mov
inc
push
cmpsl
mov
and
pop
out
jb
xor
test
adc
jne
pushf
int
out
movsl
in
dec
int3
cmp
lods
loopne
ljmp
ss
and
adc
lcall
mov
xor
mov
rcrb
cltd
cli
lds
scas
sub
dec
jo
int
pop
inc
lods
ret
pop
andb
mov
and
fdivs
out
cmp
popf
mov
xor
hlt
xchg
stc
cmp
jecxz
mov
dec
outsl
insl
imul
and
mov
jle
inc
mov
fcomip
sahf
add
mov
xchg
es
mov
sbb
xor
dec
das
mov
push
adc
in
push
pop
xchg
cmp
out
mov
das
fsubl
pop
scas
aam
cmp
adc
sub
adc
push
mov
pop
fiadds
js
inc
pop
push
pop
pushf
fistl
jb
fmuls
sub
cmc
jns
adc
or
shrl
fstpl
or
in
ss
js
pop
adc
test
dec
fisttps
dec
fstl
dec
leave
push
inc
movsl
add
lret
cmpl
inc
pusha
pop
xlat
sbb
into
adc
fstps
adc
mov
jo
jb
in
je
divb
push
mov
mov
cld
test
mov
sub
lcall
mov
adc
idivl
test
lret
out
dec
outsl
or
add
sub
daa
mov
loope
inc
push
loope
std
adc
fistpl
lds
xor
lret
mov
xchg
push
test
sub
popa
add
mov
sbb
mov
ja
xchg
cmp
cltd
mov
push
negl
cmc
push
enter
or
outsl
push
inc
pop
dec
les
and
cwtl
mov
mov
and
fisttpl
notb
cmp
xor
in
push
cmp
fcmovne
scas
cld
or
adc
pop
pop
push
or
ljmp
lods
stc
sub
cmp
cmp
push
jns
jle
aam
jae
cwtl
fadd
out
aam
xchg
repnz
inc
add
sbb
push
int3
dec
outsl
pop
lds
lret
sti
dec
cmpsl
push
push
inc
xor
inc
mov
and
push
jge
pop
cmp
sbb
cwtl
notl
mov
jne
out
das
mov
push
or
lods
jmp
outsb
enter
push
jmp
push
lcall
add
inc
lahf
js
mov
xchg
xchg
in
cs
shl
mov
cmpsl
and
and
arpl
dec
dec
mov
pop
push
mov
dec
sub
in
flds
adc
adc
in
mov
pop
xchg
lahf
add
sbb
xchg
insl
shrl
sub
mov
mov
fisttpll
cmp
xor
cmp
cltd
push
shll
in
or
push
pusha
jbe
push
repnz
mov
jae
mov
aad
lret
sub
adc
pop
mov
jecxz
inc
sbb
push
jns
out
mov
sbb
dec
jecxz
push
mov
jae
mov
cmpsl
sbb
cmp
mov
dec
push
lods
mov
sbb
xor
mov
push
push
xchg
gs
sbb
push
nop
das
push
in
dec
pop
add
mov
jp
dec
in
loop
push
push
out
xchg
testb
mov
pop
mov
mov
pop
xor
cmp
mov
mov
add
xchg
push
int3
or
lods
sbb
sub
or
mov
cmp
mulb
and
or
nop
push
mov
mov
jno
cmove
push
out
dec
inc
test
test
out
clc
call
push
add
fidivrs
pop
stos
mov
mov
mov
push
xchg
push
xchg
mov
scas
mov
fistpll
inc
fdivrs
mov
cmpsb
cld
xchg
push
inc
rcl
mov
cmp
jbe
jae
cmp
push
adc
outsb
push
repnz
stos
xlat
lds
or
fs
call
cmpsb
inc
jae
inc
jecxz
mov
arpl
ds
jle
jle
mov
adc
xchg
dec
dec
outsl
sub
pop
fidivrs
xor
ret
dec
cmpsl
push
inc
gs
fildl
loope
cmp
aam
test
shll
lock
mov
imul
mov
lea
cmp
push
and
lret
mov
push
pop
bound
add
pop
cmp
lcall
hlt
repnz
xor
mov
push
lods
mov
cmpsl
xor
mov
out
and
imul
ss
repnz
inc
cmc
stc
arpl
xchg
pop
or
xor
das
or
mov
push
mov
enter
pusha
cmpsl
add
sbb
cld
lcall
not
pushf
pop
mov
sbb
sub
mov
mov
ljmp
popa
add
jb
cmpsl
test
mov
nop
mov
push
movsl
pusha
in
adc
xor
stos
xchg
mov
dec
dec
in
pop
or
sub
mov
adc
pop
sbb
in
jle
loopne
xor
jecxz
outsl
mov
adc
push
insl
cli
pop
cmp
icebp
dec
sub
sub
ja
add
sub
jg
cmpsb
repnz
fnstcw
pop
sbb
cmpsb
aaa
cli
push
push
into
pop
mov
imul
stos
mov
lret
ret
pop
sbb
cmpsl
push
gs
xor
mov
pop
sub
mov
cwtl
or
cmc
push
xorb
mov
push
nop
loop
adc
out
addb
out
pusha
adc
xor
lods
cltd
aam
and
push
push
sbb
inc
push
xor
jo
sub
imul
test
push
sbb
test
les
fstps
icebp
fnstcw
cwtl
popf
cwtl
test
icebp
push
pop
xchg
jb
mov
inc
iret
stos
idivl
ljmp
loop
stc
movsb
jno
mov
cld
pop
mov
mov
push
andl
push
dec
mov
into
adc
rcl
cmp
es
cmp
jecxz
orb
jo
fidivrs
sbb
pop
scas
mov
stos
shl
xchg
repnz
fwait
cmp
add
jnp
lods
hlt
pushl
jo
lea
xlat
and
int
xlat
insb
dec
jge
gs
pop
mov
jns
add
shll
xchg
mov
push
rcl
push
pusha
int3
sub
push
inc
daa
dec
test
and
loopne
or
mov
jle
out
stos
fdivrp
sti
cld
iret
jecxz
xor
repnz
jo
push
aam
inc
popf
and
lea
add
fs
out
inc
add
adc
xorb
pop
subb
jmp
xor
out
pushf
insl
scas
push
mov
xchg
sbbb
jecxz
or
xchg
sar
sbbb
mov
xchg
cmc
mov
nop
sub
cmp
mov
cmp
mov
and
sarb
lods
add
inc
dec
sbb
popf
inc
adc
fdiv
push
ja
ficomps
push
ljmp
scas
in
cmp
gs
and
xlat
lret
test
add
cmp
ja
and
sub
notb
xchg
jae
lock
jae
fstl
sbb
loop
push
ljmp
xchg
cmp
push
jl
and
mov
pop
pusha
popf
sub
mov
in
inc
mov
xchg
mov
mov
mov
mov
ljmp
cmpsb
bound
xchg
push
call
add
dec
sti
aas
mov
insl
sbb
xchg
jne
mov
dec
cltd
push
lods
lret
jb
in
sub
or
dec
pop
mull
stos
clc
subl
fs
pushf
mov
fcmovu
adc
sbb
jne
mov
dec
cltd
push
repnz
jb
repnz
pushf
imul
scas
sub
inc
mov
push
mov
adc
sbbl
cltd
mov
xor
xor
jne
stc
rcll
mov
mov
je
in
sub
mov
inc
cmpsl
inc
imul
jge
xchg
sbb
aaa
sar
test
outsl
push
mov
mov
mov
mov
jno
enter
in
mov
leave
mov
add
js
sti
mov
pop
fdivrl
cmp
and
mov
dec
mov
lret
mov
pop
xor
fdivrs
and
jecxz
or
dec
lahf
inc
and
popf
add
adc
and
sti
icebp
lods
mov
sbb
out
call
dec
test
insl
ljmp
or
push
hlt
outsb
pushf
mov
fdivrs
or
pop
icebp
cmp
divb
in
pop
xor
adc
ljmp
jmp
or
xor
push
adcl
ficompl
push
jmp
xor
xor
jge,pn
cmp
push
data16
push
sub
call
inc
mov
add
loopne
pop
loop
bound
mov
xchg
test
jae
xlat
jno
adc
mov
dec
stos
int3
dec
in
out
or
test
lods
add
out
cmpsl
add
adc
fnsave
rcll
push
div
hlt
and
pop
mov
dec
lods
into
mov
dec
lods
pusha
xchg
loop
adc
or
mov
ficompl
bound
xchg
xchg
cmp
int
push
outsl
or
lock
add
pop
jne
leave
bound
sub
add
mov
push
scas
sbb
mov
imul
outsb
jmp
sub
push
es
lea
test
inc
jns
pop
dec
sbb
cwtl
cmp
scas
cwtl
jecxz
insl
xchg
xor
jecxz
mov
dec
cmpsb
mov
scas
imul
inc
cmpsl
leave
cs
out
popf
inc
jno
pop
xor
jle
cmp
mov
xchg
push
pop
aam
mov
movsl
push
dec
dec
aas
in
nop
stos
movsl
dec
dec
lods
dec
mov
inc
sbb
jge
xchg
mov
add
or
mov
push
sbb
lcall
repnz
xchg
cmpsl
lret
sub
stos
mov
idiv
sbb
pushf
jle
mov
loopne
pop
mov
cwtl
ss
jno
fmul
clc
xor
shr
adc
out
scas
mov
test
pop
test
inc
pop
sbb
and
inc
inc
adc
cli
push
imulb
lcall
push
js
in
out
outsl
adc
cld
out
or
and
cmp
sbb
xchg
sub
cmp
pushf
dec
fidivrl
cs
rcl
lcall
pop
adc
or
fs
ret
leave
repnz
push
rcl
jp
mov
push
shll
mov
xchg
push
inc
inc
sub
add
std
daa
pop
and
and
cmp
cwtl
pop
adc
test
mov
xchg
dec
roll
jmp
jno
repz
dec
divl
dec
jecxz
mov
pop
lock
push
add
mov
outsb
fbstp
mov
xchg
outsb
cmp
pop
sbb
out
jo
cs
mov
lds
sbb
int3
dec
dec
mov
test
mov
push
dec
adcb
fistpll
mov
xchg
fyl2x
mov
das
nop
lock
inc
out
mov
es
loopne
cld
daa
loope
jns
enter
lock
and
mov
mov
cmp
test
adc
xor
inc
daa
jno
movl
cmp
inc
pop
orl
idiv
fidivrs
fwait
mov
shll
sbb
test
xor
add
xor
frstor
nop
leave
scas
mov
addr16
popf
dec
arpl
pop
inc
es
xchg
cmp
push
pop
pop
cmp
in
xor
int
adc
shl
outsl
sub
lods
pop
clc
into
insl
mov
jge
dec
sub
mov
pop
addb
sbb
xchg
hlt
ss
pop
push
fdivs
mulb
hlt
cld
add
jno
icebp
and
shll
leave
cmp
andl
loop
jne
mov
pop
sbb
in
mull
xor
dec
or
xchg
je
pop
xchg
ljmp
pushf
mov
aas
jo
popf
std
xchg
mov
mov
shll
push
scas
xor
adc
adc
push
lods
rcrl
add
ljmp
pop
jle
pop
movsl
into
mov
xor
push
jae
ja
mov
sarl
mov
dec
imul
inc
les
mov
lds
movsl
jg
cmp
mov
notb
adc
xchg
mov
jo
scas
pop
mov
nop
jecxz
adc
loop
jo
inc
in
in
mov
add
hlt
add
xchg
fdivr
mov
or
dec
insb
dec
call
repnz
loope
inc
inc
or
insb
sub
push
jle
lret
jle
pop
cmp
sub
ja
mov
push
cld
hlt
sbb
xor
sub
xor
int
mov
pop
test
xchg
dec
das
stos
fs
rolb
add
or
mov
jne
jae
cmp
js
xchg
and
xor
xor
xor
xor
sub
stos
imul
adc
mov
push
fidivs
fdivrs
cmp
std
fistpll
int
jmp
dec
popf
ja
aad
lea
adc
stos
dec
bound
iret
stc
ret
mov
loopne
jne
cmp
cmp
lcall
les
bound
push
cs
test
cmpsb
dec
xor
pushf
add
pop
mov
in
push
adc
push
pop
icebp
outsb
cmp
and
mov
add
sub
or
pusha
lds
aas
movsb
mov
sbb
jle,pt
sub
cwtl
clc
xchg
jp
or
mov
cltd
imull
daa
push
jg
xor
lods
es
lock
inc
mov
add
sbb
incl
stc
xchg
xchg
test
insl
sbb
or
stos
push
popf
sub
cld
jae
and
jecxz
ret
call
popf
mov
add
cmc
pop
mov
xchg
aas
push
xchg
lock
idivl
call
or
clc
cmp
xchg
aam
mov
pop
pusha
fisubrs
mov
xor
xchg
jae
mov
inc
std
mov
push
icebp
je
cmp
or
ljmp
movsb
cmp
movsl
repnz
add
mov
ss
xchg
cltd
cwtl
pop
ja
cltd
lods
dec
mov
shll
insl
sahf
icebp
jmp
adc
xor
insb
lret
sub
lret
outsl
adc
bound
sbb
out
sbb
inc
cmp
shr
mov
mov
popa
mov
mov
dec
repz
cmpsl
fsts
or
fistpll
mov
in
call
int3
decl
jb
mov
sbb
lret
rcrb
inc
mov
cs
data16
imulb
lcall
mov
lahf
adc
mov
xor
cmp
cmp
or
imul
xchg
adcl
popa
sbb
imul
xchg
xor
adcl
push
jo
out
xor
cwtl
in
dec
lods
addr16
push
sbb
imul
cmp
lea
cmp
rcll
icebp
sub
push
hlt
jb
sub
dec
cmp
stc
or
test
lret
mov
cmp
mov
aam
jns
ja
gs
fists
mov
pop
xchg
mov
and
dec
xchg
lret
inc
add
test
or
sbb
push
test
pop
push
cmp
mov
add
lahf
xchg
scas
fnstenv
adc
lahf
push
outsb
rol
cld
in
outsb
call
repnz
daa
orl
pushf
push
pop
adc
cwtl
lods
scas
pop
jns
mov
fwait
jge
xchg
jae
sub
pop
enter
addr16
add
inc
add
inc
fs
sub
cmp
mov
mov
dec
cmp
mov
shll
dec
push
outsb
sub
add
dec
push
sbb
data16
dec
xorl
dec
pop
ds
jge
mov
clc
push
icebp
cmc
adc
cmc
xchg
sbb
shrl
pushf
in
or
je
add
or
adcl
jg
je
aas
cmp
sbb
or
cld
hlt
mov
xchg
ret
xor
mov
out
leave
dec
adc
inc
dec
daa
dec
test
pop
outsb
cmp
jp
arpl
add
je
cmp
xchg
mov
pusha
mov
repnz
xor
pop
cmp
or
gs
shlb
rcrb
add
inc
imul
pop
push
jge
cmp
rcll
out
stos
nop
sub
mov
sbb
sub
movsb
cmpl
aam
mov
mov
push
sub
adc
pop
add
in
test
mov
lods
add
cmp
cmp
dec
sub
sbb
enter
aam
xchg
xor
pop
cmp
dec
pop
lea
push
mov
ss
and
in
pop
mov
arpl
aaa
jg
pop
cmp
jns
pop
cmp
push
out
movsl
xchg
adc
mov
inc
adc
leave
outsb
mov
mov
lret
sbb
pop
ljmp
sbb
cli
subl
adc
fs
ret
scas
outsl
inc
sub
or
sub
call
lods
jge
inc
cld
cmpsb
fucom
mov
jecxz
ja
cmp
aaa
pop
int
and
mov
adc
or
sub
cmc
dec
jl
xchg
mov
dec
stos
or
pop
xchg
arpl
inc
inc
arpl
rcrb
mov
popf
mov
sbb
js
pop
pcmpeqw
xor
mov
cltd
iret
insb
mov
jg
dec
pushf
inc
push
mov
add
mov
imul
pop
pop
mov
pop
jl
pop
cmp
ret
xchg
jae
mov
jo
das
mov
or
lret
or
and
ds
popf
daa
mov
fnstsw
popf
mov
sti
xchg
jp
cmp
repnz
je
out
jno
xor
imul
cltd
fiaddl
mov
jg
ds
mov
push
mov
je
xor
xlat
shll
xchg
nop
xor
push
out
dec
lods
outsb
in
rol
imul
xor
daa
out
and
ss
adc
insb
clc
xor
jne
push
mov
jne
imull
enter
aas
pop
in
sub
daa
xchg
push
daa
mov
data16
xor
xchg
jo
xor
mov
icebp
popf
mov
or
push
pop
call
dec
xchg
fnstsw
sti
cwtl
inc
sbb
mov
bnd
popf
fdivp
or
push
repnz
jne
ljmp
cmpsl
into
jp
dec
add
in
cmc
leave
and
jl
cld
xchg
mov
sub
notl
outsl
push
jp
test
sub
push
insb
add
push
xchg
scas
data16
out
movsb
out
push
cmp
ds
or
jp
int
insl
dec
cmpsl
adc
imul
jg
ds
nop
sbb
lds
push
cmp
and
loope
sbb
sub
ja
fcoml
pop
inc
mov
mov
add
scas
icebp
or
ret
jb
in
icebp
ljmp
xchg
sbb
pop
dec
popf
cmp
enter
jp
cmp
addr16
jns
dec
sub
sysret
leave
sub
push
mov
data16
jge
sub
lahf
movsb
adc
bnd
xlat
in
mov
sub
mov
dec
push
or
or
and
hlt
mov
add
jecxz
call
std
cmpsl
jl
and
xlat
jecxz
jae
xchg
in
and
mov
sahf
adc
test
repz
mov
lahf
enter
in
mov
jl
cmp
push
aad
das
aam
xchg
in
jo
lret
outsl
xchg
and
xchg
leave
mov
gs
and
pop
in
enter
fidivrs
sbb
cwtl
notb
dec
inc
je
jae
xor
outsb
shrl
and
dec
stos
daa
cltd
movb
inc
subl
popa
clc
and
pop
cmp
jns
mov
je
loopne
jmp
cltd
mov
in
dec
lods
stos
adc
iret
pop
fs
bound
and
mov
mov
xchg
xchg
push
rclb
jb
mov
pusha
dec
int
in
push
lods
lds
sub
mov
test
mov
add
add
lea
pop
jne
aam
repz
sbb
fwait
xor
xor
xchg
lock
iret
imul
sub
jmp
and
test
repz
add
push
sbb
jp
repz
mov
mov
xchg
fsubl
stos
popa
jp
movsl
outsb
insl
mov
repz
gs
xchg
push
inc
sub
dec
mov
add
push
mov
xchg
push
xchg
scas
dec
sub
clc
pop
jmp
ljmp
xor
push
stos
lret
dec
ss
in
test
fisubrs
jle
xor
fists
inc
popa
mov
stos
scas
insl
jecxz
jmp
mov
dec
xor
pushf
xlat
repnz
fcompl
pusha
sahf
ja
stc
cwtl
scas
push
add
fwait
repz
mov
jno
rcll
cmpsb
pop
fcoms
lret
push
xchg
inc
add
or
cmp
movsl
push
ficompl
sub
cmp
sbb
repnz
test
or
arpl
out
mov
pusha
rcrb
mov
xchg
ss
outsl
loopne
push
mov
cmp
sbb
xchg
iret
hlt
mov
jle
or
in
sub
sub
cwtl
dec
sub
pop
and
push
loop
fsubr
lret
pop
mov
sbb
push
cmpsb
xchg
sbb
cs
iret
nop
gs
cmp
ss
gs
ret
popf
sbb
lcall
dec
hlt
add
jmp
data16
mov
xchg
mov
jae
jns
add
mov
inc
pop
aas
lcall
mov
inc
mov
in
push
xchg
pop
sti
jne
push
sbb
les
adc
insb
lods
outsl
pop
sub
or
movsb
lahf
popa
and
out
mov
and
sub
mov
xchg
ret
pop
or
dec
stos
cmp
jmp
into
pop
movsl
movl
cmpb
test
popf
clc
sbb
xchg
lods
and
mov
xchg
mov
or
out
mov
pop
out
loop
cmp
and
ds
mov
lods
divb
mov
test
or
adc
outsb
in
mov
add
movsl
lret
popa
sbbw
stc
fdivs
out
fadds
adc
cwtl
mov
pop
test
or
movups
and
loop
daa
insb
test
cmpl
adc
stc
icebp
pop
lret
push
mov
test
or
lods
sub
sub
jg
iret
ljmp
mov
leave
jne
sbb
add
sbb
push
je
sbb
mov
mov
sbb
lret
sub
bound
and
mov
push
lret
pop
cmp
pop
inc
aad
inc
add
xor
xchg
pop
xor
dec
inc
jne
lret
movsb
rorl
ret
or
xchg
in
cmp
sub
lea
pop
fistl
mov
mov
scas
push
scas
dec
les
movsl
inc
imul
pusha
cmpsl
fisubl
pop
sub
add
cli
push
dec
lea
mov
je
mov
dec
xchg
stos
loope
lds
cmp
cmpsb
xor
fstpt
cltd
ret
sbb
in
cmp
sti
pop
outsl
mov
xor
inc
je
insl
mov
mov
stos
lods
mov
pop
jle
loop
and
fcomip
lcall
mov
cli
mov
mov
in
adc
insl
dec
outsl
lock
jecxz
arpl
rorw
leave
movl
ficomps
xor
xor
movsb
xlat
out
rep
roll
int
scas
out
inc
push
mov
fldl
inc
inc
pushf
or
cmp
fbstp
xor
out
into
or
adc
roll
sub
dec
inc
fs
daa
sub
in
flds
sbb
lahf
orb
adc
add
sbb
movsb
push
rcrl
aam
mov
jp
adc
adc
loop
jnp
push
mov
jecxz
or
push
cmpsb
ret
out
outsb
scas
jo
jg
test
mov
xchg
rcrb
jo
pop
rorl
jo
dec
and
test
adc
popa
mov
movsl
insl
inc
mov
sahf
sbb
sbb
fadd
mov
xor
push
jge
mov
mov
fsubrl
push
and
jnp
popf
std
sbb
xchg
idivl
cmp
and
mov
lods
push
imull
scas
das
mov
inc
leave
mov
lahf
mov
movsl
ljmp
or
orl
mov
mov
pop
aam
push
push
xchg
mov
jb
jnp
xorb
xchg
nop
push
nop
outsb
xor
mov
sub
gs
jle
or
popa
add
cmp
inc
pop
jbe
icebp
push
xor
xor
jo
outsl
push
not
mov
jp
jp
test
sarb
push
jg
cmp
jp
xchg
sbb
lcall
lcall
fistpll
mov
inc
insl
fmuls
fiadds
in
sbb
test
lds
sbb
jne
sub
jb
jp
aaa
cs
dec
mov
into
push
lret
sbb
jmp
or
je
sahf
adc
push
adc
loope
scas
lcall
cli
lahf
test
xchg
lods
pop
hlt
mov
leave
or
out
push
in
pop
sbb
push
jg
mov
mov
mov
push
jge
data16
mov
sbb
or
xlat
push
adc
xor
mov
inc
cld
das
out
scas
js
pusha
xor
xchg
cltd
pushf
popf
ret
nop
icebp
imul
adc
jg
stc
jne
cmp
adc
dec
jo
loop
leave
lret
inc
dec
cmp
adc
adcl
cmpsb
xchg
fcoms
aam
cmp
lret
pop
daa
stc
jne
mov
sbb
xchg
adc
fdivs
push
wbinvd
mov
test
fidivl
or
mov
sti
std
pusha
popa
xor
bnd
mov
pop
jmp
fbld
fcoms
dec
test
or
aad
or
out
mov
add
pop
push
test
mov
xor
mov
jo
icebp
and
dec
lods
cmc
push
pop
adc
lds
dec
loop
cmp
inc
xchg
call
adc
jnp
sbb
cltd
cmp
sbb
aad
xor
inc
mov
fstpl
test
sub
out
mov
inc
bound
cmp
fcompl
or
lock
push
aam
in
and
cltd
movups
inc
sub
pop
or
in
push
inc
and
in
inc
inc
rcrl
jae
js
xor
sbb
addr16
xchg
icebp
and
add
jb
std
sub
or
lret
add
bound
popf
and
inc
dec
js
pop
and
jnp
fcmovb
or
adc
adc
dec
dec
mov
lcall
in
es
mov
fidivrl
ljmp
add
dec
aam
jae
mov
xchg
sub
or
out
mov
jae
dec
hlt
dec
dec
xchg
popa
xchg
test
jle
jg
jnp
mov
fdiv
sbb
sti
push
mov
push
mov
xchg
xorl
mov
dec
dec
pop
ljmp
adc
popa
mov
pop
adc
cmp
lcall
jae
hlt
jo
xchg
es
insb
sbb
imul
jnp
jmp
stos
out
dec
jecxz
ljmp
push
in
and
popa
mov
dec
xchg
xor
xchg
xor
lret
sub
je
add
in
int3
dec
outsl
imul
movl
lock
ss
and
clc
lahf
jle
push
jbe
add
jb
jne
jno
call
insl
je
inc
mov
sar
test
jp
and
cmp
xchg
mov
filds
out
je
lock
outsl
and
out
cld
pop
mov
xchg
popa
xor
lret
mov
outsl
cmp
mov
jne
jge
or
daa
sar
popf
cld
pop
jns
cmpsb
jl
shlb
bnd
ja
jmp
insl
sbb
adc
inc
or
dec
jg
and
mov
jge
ljmp
xchg
mov
mov
mov
in
dec
icebp
outsl
icebp
lahf
int3
jmp
or
cmp
jecxz
cld
add
and
mov
sub
cmp
push
pop
in
push
push
push
aas
adc
xlat
xor
dec
push
dec
jo
xor
cmpsl
or
jmp
push
or
push
cmc
popf
sbb
cmp
mov
xlat
rolb
adc
xor
lods
scas
xor
shl
jmp
xor
lds
mov
push
inc
sahf
jnp
add
sub
xchg
out
mov
cmp
inc
rcr
movsl
push
xchg
jecxz
scas
lock
int
test
inc
adc
sbbb
fidivrs
cmp
and
mov
iret
sbb
adc
outsl
mov
clc
nop
push
xchg
add
sub
in
mov
add
fs
jle
pop
add
xor
sti
stc
leave
sbb
push
iret
xor
in
das
das
jb
xchg
jl
dec
stos
lods
pop
mov
sbb
lds
and
push
call
sub
inc
aam
cmp
sbb
push
jno
rol
jmp
iret
lods
out
ret
mov
sub
dec
and
shlb
push
inc
subl
inc
ss
sub
push
jbe
sbb
hlt
xchg
rcrl
aad
insb
insl
lock
inc
test
mov
cmc
and
xlat
ret
outsl
jle
roll
cld
cwtl
push
cmpl
add
jp
mov
or
mov
and
and
push
out
call
fs
inc
add
inc
sub
cmpl
fidivrl
pop
aad
adc
lds
sub
icebp
dec
stos
cmc
push
cmp
adc
jnp
add
cld
sbb
add
cmp
stc
pop
inc
mov
xchg
adc
popf
in
int3
fists
inc
push
cs
gs
gs
jbe
aad
pop
popa
bound
cmp
mov
popa
shlb
add
sbb
cld
out
jo
cwtl
movsb
aad
lods
dec
addr16
add
dec
movsb
and
add
insb
stos
insl
inc
mov
test
push
call
bnd
aas
addb
mov
push
fsubrl
mov
cmpsl
ljmp
dec
in
mov
lock
std
mov
add
inc
adc
ret
push
cmp
jbe
push
xchg
js
outsb
out
mov
fs
jmp
loope
add
fnstcw
pop
pop
or
add
and
int
mov
lret
mov
mov
push
push
push
inc
movsb
cmp
cmp
mov
mov
push
xchg
inc
and
mov
add
stos
dec
mov
jb
adc
test
les
das
dec
movsb
and
fistpll
xchg
dec
pop
test
pop
add
addr16
adc
xlat
jmp
mov
insl
or
in
push
aaa
or
movsb
and
fidivrs
popf
cmp
test
testb
imul
jnp
jb
mov
xor
movsb
neg
mov
mov
inc
in
mov
jl
imul
pop
sbb
cmp
psllq
in
mov
sub
in
or
and
aad
mov
outsb
jl
sbb
push
std
mov
sbb
dec
push
insl
lea
xchg
or
and
inc
xchg
out
sbb
and
popa
xchg
xchg
popa
cmp
mov
mov
jno
xor
lcall
adc
inc
cmpsb
dec
or
or
push
aas
dec
push
test
cmp
push
loopne
cmp
xchg
mov
jne
xor
test
inc
pop
jo
lods
push
mov
or
lds
cmpsl
sbbl
pop
jle
aam
cmc
pop
mov
xchg
in
and
mov
sub
push
in
or
lock
mov
in
rorl
and
add
mov
jp
xchg
mov
jmp
add
jo
insl
push
push
pop
dec
mov
or
pop
int3
jnp
sub
jl
cwtl
ret
xchg
mov
inc
imul
cmp
cmc
fistpll
xchg
jo
pop
cltd
sub
ljmp
enter
cmpsl
and
imul
cltd
mov
sti
pop
mov
cmp
xchg
pop
mov
sub
popf
in
dec
stos
dec
rdmsr
outsb
sub
int
ljmp
mov
fnstsw
jmp
insb
fildl
loopne
das
clc
shll
cmp
jmp
mov
pop
iret
and
dec
into
insb
adc
test
adc
cmovne
in
push
and
incl
pop
fnstsw
cli
mov
inc
add
push
push
mov
xor
repnz
pushf
imul
dec
cs
mov
in
inc
ja
and
sahf
sub
shl
xchg
aaa
shll
cmp
cmc
ja
xor
outsl
in
rorl
cwtl
sub
sbb
repz
sti
pop
ret
jle
test
js
mov
sahf
push
xchg
icebp
push
push
lock
outsb
add
adc
cs
pop
out
int
push
add
aas
loope
out
mov
and
out
mov
sbb
aaa
je
cmpsl
ficoml
icebp
xchg
xchg
lods
add
ret
sbb
jecxz
inc
mov
gs
jge
pop
mov
cmpb
nop
adc
push
jae
lock
adc
shll
push
or
fwait
insl
out
xchg
dec
movsl
scas
or
ret
call
test
jl
xor
pop
mov
xchg
adc
mov
cmp
insl
jne
mov
enter
cli
xchg
ljmp
add
cltd
mov
mov
jbe
fisttpl
mov
add
mov
out
sub
iret
nop
int3
add
sub
inc
movsl
and
pop
cli
loopne
mov
jo
nop
sub
lcall
xchg
xor
xchg
lock
lods
sub
mov
inc
outsb
xchg
imul
add
rclb
lahf
test
dec
leave
push
test
add
aam
insl
cvtps2pi
pop
dec
andb
dec
test
and
jecxz
sbb
fwait
pop
inc
stc
xor
jae
xchg
push
inc
cltd
mov
pop
jl
adc
push
sets
ljmp
or
inc
fwait
in
jmp
sbb
ret
movsl
xchg
mov
std
sbb
jb
pop
stc
adc
jnp
repnz
mov
pusha
adc
nop
xor
fimull
mov
cmpsl
pop
test
mov
inc
stos
fnstcw
jle
cld
std
sbb
jg
clc
add
flds
xchg
repnz
lahf
data16
les
mov
leave
in
dec
xor
push
or
and
fldl2e
les
pushf
pusha
fdivrl
push
fcomps
push
jae
mov
inc
xchg
sub
mov
cs
call
or
xchg
xchg
call
inc
mov
add
shlb
mov
fdivrl
dec
xor
lcall
cltd
pop
sub
std
scas
in
into
add
ret
cmpsl
lds
pop
insl
jge
jnp
adc
pop
fcmovnbe
xchg
stc
cmc
pop
dec
in
icebp
ss
dec
jne
xor
and
mov
cmpl
mov
mov
ret
call
push
fistpll
into
std
pop
inc
outsl
cli
and
adc
rorl
mov
xor
movb
and
jg
out
mov
jl
loopne
cmp
lock
jne
out
rorb
inc
jmp
fisubrs
int
cmpsl
push
cltd
leave
xchg
xor
fistpl
flds
and
jge
push
sti
xchg
push
sahf
ds
notl
xor
xchg
xchg
lock
icebp
sub
xchg
in
cmp
repz
stc
roll
cli
mov
cld
xchg
mov
js
pop
je
stos
push
fdivl
cs
or
out
stos
push
jl
and
loop
movsl
push
ja
pop
jle
xchg
and
stos
fcompl
jp
cmp
aam
xchg
mov
sbb
mov
mov
adc
aas
push
in
dec
lods
bound
test
and
mov
jne
dec
cld
pop
mov
pop
mov
jl
push
stc
xchg
xor
mov
pop
xor
mov
dec
lds
inc
sub
leave
push
adc
inc
push
mov
or
adc
aam
cmp
mov
sbb
xchg
jle
in
cmp
cmpsb
ret
push
addl
jl
inc
sub
mov
mov
cwtl
notb
xchg
aas
adc
movsl
popf
pop
dec
xchg
or
push
insl
dec
xchg
call
imul
mov
loop,pt
mov
pop
pop
or
cmp
fdivs
or
aam
or
inc
jecxz
adc
loop
in
cltd
shlb
repnz
jl
push
jle
mov
xor
mov
pop
sub
imul
call
lods
addr16
mov
push
movsl
xchg
push
jne
clc
je
push
jne
mov
nop
lock
and
xchg
or
and
in
sub
sbbl
pop
mov
push
xchg
cltd
lock
xlat
rclb
test
inc
inc
add
jge
xorb
or
add
in
mov
cmp
cmp
icebp
lcall
or
mov
jae
notl
xor
sbb
dec
lret
ljmp
scas
out
sbb
popf
popf
ljmp
cwtl
xchg
adc
aaa
int
adc
mov
inc
mov
jge
test
scas
ret
test
dec
dec
test
xchg
xor
jne
xor
popa
jae
push
adc
push
out
call
insl
cld
rorb
cli
dec
enter
inc
in
dec
ret
arpl
movb
inc
mov
fcmovne
pop
mov
test
push
push
repnz
into
scas
push
insl
out
adc
int3
lret
call
pop
and
je
orb
and
pop
mov
sub
xchg
je
in
bnd
push
outsl
jb
inc
mov
lods
ffree
jae
inc
test
inc
cmpsl
inc
xchg
mov
mov
fidivs
je
mov
sbb
add
jne
xchg
aad
fimull
sub
outsb
int
rorl
push
sti
pop
push
add
push
inc
std
jle
iret
jg
sbb
or
mov
lcall
fbstp
and
addl
sub
xchg
sbb
sahf
pusha
sub
sub
sbb
cmp
sbb
xchg
inc
mov
scas
and
mov
int3
push
icebp
xor
dec
dec
test
ret
jg
loopne
fstpl
fidivs
adc
cld
xchg
insl
pushf
dec
rcll
add
dec
push
dec
jmp
sub
enter
mov
mov
loope
mov
cmpb
xor
xchg
push
lret
in
adc
lret
ljmp
add
mov
jae
mov
rol
sub
popf
cld
pop
inc
cld
jno
dec
inc
repz
xchg
sbb
fisttps
stos
scas
cmp
sub
dec
out
cs
pop
out
sbb
push
cmp
test
mov
and
pop
loope
jo
sbb
adc
mov
leave
sub
xor
jmp
or
lcall
jecxz
hlt
and
xchg
repnz
pop
pop
mov
pop
arpl
cli
jb
stos
out
fcmovne
icebp
cmc
das
dec
arpl
dec
inc
or
mov
fstl
fstl
xchg
jbe
ficompl
iret
pop
dec
iret
je
mov
and
scas
lock
ret
in
jo
or
out
test
xchg
or
xchg
jg
aas
push
aad
cmp
lods
aam
mov
add
aad
repnz
out
dec
rorb
or
dec
push
sti
outsb
push
test
sub
stos
imul
cmpl
dec
mov
mov
or
push
lock
mov
cwtl
jb
rcrb
mov
cmp
dec
mull
loop
mov
jo
outsb
adc
loope
cmp
xchg
xor
lea
xor
push
adc
lret
scas
or
inc
out
inc
data16
inc
loop
cmp
jno
repz
test
sbb
jnp
rcrb
ja
or
hlt
push
mov
int3
add
imul
mov
cwtl
in
scas
in
les
pop
rcrl
rcl
test
xchg
insl
push
stos
test
xchg
int3
sahf
fmull
cmpsl
ret
or
shll
and
mov
lods
pop
jnp
out
call
lds
nop
scas
nop
stos
push
test
add
lods
or
ret
or
fwait
push
std
inc
mov
cli
and
sbb
sbb
lret
cli
cmc
xor
add
xor
xor
out
dec
dec
mov
push
xchg
inc
xor
and
jno
pop
xchg
jns
pushf
sahf
lcall
rcll
idivl
loop
aam
ja
pop
push
mov
mov
ds
mov
jp
sti
cmp
cmp
loop
jecxz
cmp
xchg
jle
mov
ds
dec
in
shrl
sub
mov
fcom
mov
dec
leave
jae
mov
sub
out
mov
idiv
mov
fcmovnbe
xor
push
or
mov
mov
push
movsb
mov
in
loope
jnp
aas
or
stos
arpl
jp
pop
iret
jns
jle
das
aam
xor
xchg
xchg
add
mov
faddp
mov
mov
fcoms
and
xchg
push
add
ljmp
push
pop
lcall
cmc
push
inc
push
jae
xor
out
or
push
jnp
daa
out
inc
pop
mov
xchg
subb
popf
sbb
fsubrl
jp
dec
cmp
and
loope
cs
dec
lods
lret
mulb
xchg
or
daa
xor
imul
repz
movsb
jl
sbb
pop
out
aad
push
repz
mov
dec
enter
pop
xchg
addb
call
and
sbb
mov
push
jne
ss
ss
jne
jae
jo
push
jno
outsl
dec
scas
mov
and
mov
mov
add
fistps
cmp
mov
mov
mov
adc
push
or
sti
lret
int
into
ret
repnz
es
cmp
and
and
mov
jnp
mov
pop
pop
cli
js
cmc
xchg
jp
shlb
xchg
mov
lea
mov
stos
lret
out
leave
push
push
inc
aas
cmp
push
pop
mov
cmp
push
fdivrs
shl
xor
sbb
jecxz
add
leave
imul
or
add
inc
and
and
mov
push
and
sbb
nop
je
pushf
push
mov
xor
and
das
mov
xchg
inc
push
imul
fnstsw
sbb
pop
pop
in
mov
xchg
push
iret
dec
mov
adc
mov
sub
jb
xchg
outsl
inc
pop
lahf
mov
mov
mov
je
and
adc
repz
rcl
jge
pop
sub
add
and
and
mov
imul
mov
xchg
daa
adc
and
out
mov
xor
xor
int
stos
dec
sbb
cltd
add
ja
sub
inc
push
xor
mov
inc
into
pop
fdivrs
in
sti
pop
add
push
inc
cmp
testb
xchg
inc
push
xor
iret
dec
int
repz
test
data16
xor
inc
mov
mov
jp
push
pushf
inc
and
mov
xor
push
or
or
dec
lcall
dec
or
pusha
popa
cmp
inc
and
sub
addb
xchg
xor
lods
sarl
rclb
in
sub
in
imul
loope
jmp
fs
addb
inc
pop
sbb
mov
int3
sub
adc
insl
xchg
xchg
das
in
cmp
adc
mov
jo
mov
cld
movsb
mov
mov
aaa
aam
push
repnz
xchg
cs
repz
stos
insl
mov
mov
push
ret
pop
out
test
pusha
mov
or
jp
out
adc
pop
adc
push
cmp
aaa
ror
mov
dec
cmpsb
out
stos
pop
add
mov
push
jle
inc
imul
xor
ret
mov
call
adc
pop
in
mov
js
jbe
or
or
test
mov
cs
mov
jge
sarl
fs
adc
popf
jb
addl
dec
scas
mov
lock
lret
sub
das
push
push
pop
iret
shll
xor
push
movsl
lds
pop
pop
mov
pop
nop
adc
stos
lods
add
cmp
push
in
jae
gs
push
lret
cmpsl
or
mov
mov
cwtl
jmp
xchg
adc
mov
xor
lea
js
cmpsl
xor
popa
jmp
xchg
jg
ljmp
mov
scas
pushf
sbb
xor
jno
aaa
out
popf
lcall
xchg
das
xchg
lods
pushf
sub
pop
push
leave
shl
test
add
sub
add
sbb
fcompl
push
cmp
push
mov
or
insb
mov
dec
lods
or
add
ret
cmpsb
sar
andl
jb
sbb
mov
jle
sbb
xor
push
popf
jne
push
shll
xor
lea
xchg
cmpsl
add
inc
ljmp
rclb
mov
add
cmp
pop
xchg
mov
iret
pop
jmp
inc
dec
inc
rorb
leave
ret
or
xchg
and
cmpsl
sbb
sbb
dec
jg
jne
adc
cli
sbb
push
icebp
push
mov
xor
imul
mov
ret
jno
lret
add
lret
and
sbb
pop
mov
mov
jae
mov
outsl
into
jne
test
imul
inc
mov
movsl
sub
cmp
outsb
out
nopl
xchg
mov
popf
pop
sahf
push
mov
icebp
outsb
inc
adc
jp
test
cmp
or
and
imul
jl
jle
int3
repz
lea
adc
adc
jns
rcrb
lret
mov
scas
out
inc
cmp
ljmp
sub
mov
stos
les
into
jg
xchg
xor
adc
lcall
push
shlb
pop
cmp
jmp
inc
dec
lods
enter
add
lret
add
push
add
cmp
sbbb
inc
mov
pop
sbb
insb
xlat
pop
shlb
xchg
lock
stc
adc
add
xchg
lock
leave
ds
ss
fwait
gs
jle
cmp
xchg
inc
popf
repnz
xor
adc
jns
mov
aam
xchg
adc
cmp
mov
lds
int3
dec
popa
int3
cs
add
inc
in
mov
xor
pop
cmp
add
lcall
into
cs
nop
mov
adc
clc
fdivs
lods
call
push
in
or
fnstsw
jg
inc
mov
hlt
push
cmp
lcall
insb
mov
cmp
jge
lret
add
sub
sbb
or
inc
sahf
mov
push
add
shlb
mov
xor
rclb
or
shlb
cmpsl
push
xor
and
and
xchg
rolb
xchg
jbe
pop
cmp
pop
jecxz
xor
dec
pop
and
xor
push
aam
int
in
mov
mov
jo
filds
lods
cmc
fs
sub
in
pop
jae
es
out
mov
in
sub
out
sbb
adc
sarl
jns
sbb
jo
adc
rorl
leave
xor
fs
add
add
and
and
pushf
sti
and
call
dec
ss
shrb
icebp
push
jbe
les
adc
lods
cmp
xchg
adc
into
push
adc
addl
pop
mov
sub
mov
cmp
jl
adc
jno
lds
or
test
mov
inc
mov
sbbl
mov
pop
aad
sbb
lcall
pop
xchg
lds
repz
das
scas
ljmp
in
stos
mov
loop
lcall
loope
js
mov
push
aam
cmp
push
push
push
xor
push
jno
inc
out
jbe
dec
jo
imul
in
loopne
add
loop
js
rolb
push
add
js
inc
xlat
xchg
push
lcall
iret
mov
mov
jnp
mulw
push
xor
adc
loopne
mov
jle
adc
adc
popf
scas
mov
xor
data16
lods
ljmp
and
inc
pop
or
mov
push
cmp
repz
cmp
jnp
xor
pop
in
jne
fmuls
mov
imul
jecxz
inc
jmp
inc
push
mov
jne
dec
cmp
clc
add
mov
mov
jl
xchg
sbb
or
sub
aad
push
out
cli
dec
cmc
mov
mov
les
sbb
dec
pusha
pop
push
push
pushf
sti
pop
mov
fidivl
mov
xor
cmp
xchg
incl
movsl
and
arpl
aaa
fstl
sets
inc
pop
push
in
xor
hlt
mov
add
or
mov
leave
leave
mov
mov
dec
mov
jb
xchg
sti
mov
std
ja
stc
jae
mov
xor
jns
test
or
mov
sti
cmp
and
mov
add
popf
dec
or
jmp
add
aas
push
ljmp
mov
mov
mov
xchg
adc
xor
scas
in
addr16
pop
cltd
out
pop
ds
pusha
shrb
adc
push
jns
loope
sub
iret
sbb
and
mov
cmpsl
push
and
lret
xchg
pop
sub
pop
nop
sahf
cmpsl
push
mov
jnp
push
lret
cmp
pop
cmp
sub
dec
mov
dec
fstpt
mov
sub
inc
leave
mov
or
ss
jle
push
sub
ja
pop
dec
sub
push
xchg
dec
and
gs
push
dec
movsl
mov
cmpsl
and
xor
or
mov
popf
sbb
and
das
mov
xchg
xor
pop
jb
jo
fadd
and
divl
fsts
repz
inc
push
into
nop
orl
cmpsl
lcall
lcall
add
std
pop
mov
cmp
jmp
mov
push
shrb
add
add
mov
test
mov
and
and
jle
pop
mov
cli
jp
addr16
aam
ja
adc
adc
ss
shrb
mov
mov
negb
inc
and
addl
add
popf
nop
xchg
nop
mov
xchg
icebp
ja
mov
ret
jmp
pop
rcrb
push
cmp
lahf
gs
cmp
lds
jo
fcom
and
cmp
xor
xor
mov
and
out
xor
pop
adc
sbb
lods
or
jne
mov
sahf
xchg
je
add
into
ljmp
cwtl
imull
call
out
andl
packsswb
mov
mov
xchg
sub
add
jmp
insb
jp
sub
int3
jl
lret
mov
or
and
inc
add
popf
aas
mov
insb
pop
push
aam
xor
rol
repz
in
dec
xchg
lock
cmp
int
scas
imul
inc
cmpsl
leave
sub
jecxz
in
cmc
fcmovnu
cmp
fwait
push
push
cld
cld
out
push
outsb
notb
pop
out
adc
clc
mov
xor
sub
xor
in
and
xchg
in
pop
inc
inc
pop
leave
fdivrs
lahf
arpl
jg
mov
mov
outsb
mov
mov
setno
orl
sub
xor
call
jp
inc
sub
fwait
pop
fnstsw
sbb
ss
test
xor
sub
dec
or
and
ds
jbe
ffree
test
xchg
div
dec
mov
push
dec
jge
push
mov
stc
mov
pop
add
sub
jg
lret
mov
or
pop
loop
jle
pop
call
xor
cmp
lock
repnz
rorb
xor
or
fdivp
ret
inc
mov
and
lds
jge
js
xlat
insb
cmp
sub
mov
call
out
mov
out
dec
dec
int3
js
jno
aas
lahf
sahf
std
push
lahf
pop
repnz
rcr
scas
lods
jnp
shll
xor
adc
in
aad
push
mov
inc
in
inc
cmpsb
movsl
fdivrl
jne
pusha
dec
test
cmpsb
mov
sbb
and
stc
jp
pushf
call
mov
or
xlat
mov
lea
push
pop
out
xor
push
mov
mov
push
adc
jg
sub
jns
loope
mov
in
pop
adc
push
insl
mov
into
mov
in
sbb
xchg
mov
sti
test
add
pusha
fistps
adc
pusha
jb
and
aam
es
mov
cmpsl
push
and
lea
jne
hlt
out
lods
or
loope
out
jns
inc
mov
je
inc
sbb
cli
xor
pop
dec
xor
push
xchg
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
and
or
mov
cmpsb
pop
jae
and
call
sbb
jg
xchg
pushf
std
or
xchg
clc
adc
adc
adc
or
nop
stos
mov
imul
push
data16
pop
and
pushf
add
cli
jle
out
cld
pop
jge
jns
and
notl
push
aad
call
outsl
rcrb
jecxz
dec
jnp
push
in
xchg
outsb
pop
add
jecxz
push
add
aam
fidivs
sti
pop
add
fldcw
notb
insl
jae
js
shll
fisubrl
scas
jle
int3
sub
arpl
dec
rol
into
ds
movsl
push
mov
pusha
rolb
cmp
or
iret
push
mov
int3
shll
pop
dec
push
mov
into
cs
inc
dec
lods
xor
leave
sub
inc
cmpsl
cmp
les
cmp
xor
sbb
sbb
scas
mov
jbe
xor
dec
cmpsb
cs
and
or
mov
cmpsb
pop
and
add
xchg
pop
jg
adc
sbb
adc
jne
or
nop
mov
add
imul
mov
push
push
push
xchg
fwait
and
sbb
popa
xchg
xchg
jle
in
cld
pop
mov
fimull
insb
je
cmp
repnz
pop
outsl
shlb
bound
lret
arpl
gs
and
cld
add
jns
fisubs
pop
ljmp
push
repnz
jae
adc
xor
jecxz
sub
pusha
dec
stos
das
faddp
daa
xchg
inc
movsl
lea
add
jg
jle
cld
pop
sti
sbb
jns
notl
jl
aam
jp
push
icebp
mov
in
dec
in
shrl
push
call
lds
jecxz
loop
inc
mov
mov
jp
cmp
sahf
lods
mov
enter
mov
mov
pop
outsl
loope
adc
std
inc
inc
jns
lcall
sub
mov
and
ret
mov
cmc
je
xor
scas
cmpl
sbb
pushf
and
scas
popa
les
pop
ret
sub
das
iret
jne
mov
cmp
lcall
push
jno
fs
sub
lock
out
pushf
sti
imul
lea
sbb
repnz
sub
xor
not
das
in
movsl
jp
pushf
add
pushf
mov
mov
xchg
mov
out
xchg
aaa
adc
in
addr16
inc
push
repnz
mov
push
js
imul
scas
outsl
out
and
call
mov
lahf
ljmp
sub
repz
ja
cmp
movsb
adc
leave
or
and
mov
cmp
xor
inc
mov
pop
inc
mov
iret
inc
cwtl
xchg
out
mov
add
and
dec
add
je
imul
dec
cltd
std
ljmp
leave
jbe
inc
sbb
rcrl
fldt
or
dec
test
loopne
sbbl
cmpsb
adc
int3
adc
imul
popf
lahf
mov
cwtl
xlat
and
xchg
nop
jnp
xchg
ret
jae
std
sub
in
sbb
out
scas
ja
enter
lahf
and
mov
minps
xchg
adc
mov
loop
pop
mov
mov
je
jl
lret
inc
aas
dec
std
push
pusha
xchg
bound
cmp
addr16
test
sub
lret
pushf
mov
out
divb
xchg
int
sahf
pop
lret
and
push
imul
pop
jb
sub
mov
sysenter
mov
outsb
imul
fsubs
fwait
dec
dec
lods
ss
add
xor
push
cmp
or
icebp
nop
and
repnz
mov
xchg
xor
test
mov
push
ljmp
out
fistl
stos
sahf
and
gs
or
gs
sbb
push
dec
outsb
sahf
outsl
xor
xlat
jmp
shll
fnstsw
jbe
mov
stos
add
push
push
dec
sbbb
xor
or
shr
out
jmp
mov
xchg
ret
imul
or
outsb
mov
push
add
push
arpl
rorl
cld
es
mov
xchg
ss
cltd
test
adc
inc
cmc
scas
loopne
mov
outsb
mov
mov
mov
push
aam
lods
cmp
sbb
sub
in
jge
in
or
mov
jo
fisttpll
arpl
aas
mov
out
inc
loop
jbe
shlb
mov
add
mov
mov
sub
mov
jnp
mov
mov
aaa
cmp
xor
add
mov
pop
insl
test
mov
ds
repz
adc
jecxz
rclb
std
out
rorl
and
lea
aaa
xor
adc
popf
icebp
mov
jo
and
jb
cs
adc
and
sbb
or
sub
insb
pusha
add
in
out
lods
in
xor
rcr
lret
sbb
into
stos
xor
pop
mov
pop
xor
lea
out
sub
loopne
rorl
mov
or
sbb
push
and
test
dec
fmull
repz
test
mov
sbb
cmpsb
fwait
shlb
cltd
jb
push
notl
das
add
addr16
cmp
notl
push
jne
sti
out
push
mov
add
mov
add
mov
ffree
inc
mov
mov
sbb
mov
lock
push
leave
push
ljmp
test
rorl
push
insl
int3
or
mov
ljmp
mov
and
ds
std
pop
add
loop
mov
push
jne
xor
repz
mov
jo
das
mov
imul
jae
gs
arpl
cmp
pusha
out
pop
fidivrs
sbb
cmp
push
mov
xorl
fs
scas
mov
sub
test
and
inc
test
rol
mov
mov
cmp
xor
lret
dec
mov
add
lods
jp
sub
test
and
idivl
jmp
jge
sbb
cwtl
cwtl
shrl
xchg
xchg
out
adc
sub
mov
js
mov
mov
test
and
jg
ds
std
pop
mov
cwtl
clc
jnp
push
jne
mov
nop
nop
push
adc
push
mov
mov
or
jmp
loope
in
stos
add
insl
jle
fildll
sbbl
cld
push
push
jns
aad
in
in
push
push
inc
mov
dec
dec
mov
mov
popf
push
out
popf
andl
add
pusha
mov
pop
fimuls
fcompl
jl
fsts
out
xor
sub
mov
jmp
jge
sub
mov
stos
ror
test
mov
sahf
cli
push
mov
push
fidivl
or
sub
cmp
mov
mov
or
scas
sub
lods
lods
xchg
xchg
sub
mov
cmpsl
cmpsl
pop
fwait
je
aaa
adc
mov
das
cs
adc
push
int
outsb
cwtl
notl
push
jne
xor
mov
pop
mov
dec
adc
loope
pop
pop
push
mov
pop
repnz
adc
jg
jb
xlat
aaa
mov
inc
in
addr16
aam
mov
movsl
out
dec
stos
fidivrs
add
jmp
outsl
in
in
imul
fwait
call
fcompl
fcmovu
cmp
clc
push
stos
push
jne
xchg
xchg
repz
popf
add
idivl
dec
movsl
jp
push
jae
call
lds
jecxz
mov
jbe
mov
pop
pop
fstps
xlat
push
out
mov
cmpsl
push
mov
cltd
add
sub
lods
sub
pop
lahf
fwait
mov
mov
adc
xor
fidivrs
jmp
notl
adc
repnz
mov
jo
jle,pn
repz
call
lds
jmp
mov
sbb
sbb
mov
cmp
inc
movsl
in
cmp
test
mov
stos
mov
pop
mov
lds
shll
nop
lock
notb
sbb
jle
pop
cwtl
clc
xlat
mov
cltd
stc
push
mov
jb
xor
aam
scas
push
inc
int3
shrb
aas
jmp
and
pop
aaa
xchg
mov
fistpll
popf
std
pop
mov
sbb
mov
push
jne
mov
push
mov
inc
pop
xchg
aas
and
and
jnp
mov
jl
mov
add
add
mov
sbb
cmp
push
mov
add
dec
scas
push
outsb
int
mov
dec
stos
xchg
inc
movsb
and
and
inc
pop
mov
cmp
out
out
cmp
scas
mov
xor
dec
jo
cs
mov
lret
mov
lds
xor
pushl
pop
mov
imul
and
dec
repnz
mov
inc
test
and
jge
call
adc
fadds
xchg
adc
jg
jne
mov
mov
call
jne
out
jecxz
jb
xor
insl
int3
or
sbb
popf
dec
cmpsl
pop
data16
je
fadds
add
je
sarl
popf
std
pop
repnz
cmp
out
or
repz
addr16
rcl
ret
es
dec
and
sub
loop
lds
sti
inc
loope
rcrb
fidivrs
sbb
scas
pushf
xlat
push
xchg
cmc
push
mov
xchg
mov
cmp
scas
mov
dec
test
lcall
movsl
and
rol
and
mov
cwtl
notl
ret
jnp
xor
jbe
cs
rep
lods
mov
inc
cmpsb
mov
dec
cmpsl
popf
dec
and
test
inc
mov
cs
jge
adc
mov
lods
les
pop
push
mov
cmp
std
ret
loopne
jmp
cmpsl
pop
lods
sub
in
xchg
pop
mov
fidivrs
popf
std
add
dec
push
insl
dec
sub
push
mov
sbb
xchg
inc
cmp
loopne
fldenv
fdiv
mov
xchg
js
sbb
xor
lods
push
bound
sbb
add
cs
js
inc
dec
daa
or
bound
cmp
jnp
mov
cli
pop
fcomps
xor
mov
fwait
jae
mov
js
ss
outsl
dec
aas
mov
sub
inc
and
push
pop
and
fdivrl
push
jns
mov
cmp
hlt
mov
mov
xchg
xchg
pop
push
int3
jb
push
sub
in
sub
mov
xor
lret
sub
jle
push
jecxz
pop
add
and
idivb
xor
mov
mov
into
adc
add
pop
mov
outsl
sarl
dec
loop
out
test
add
cli
mov
sbb
loopne
popf
xchg
repnz
into
clc
in
lret
adc
cwtl
clc
push
out
int3
xor
lds
pop
loope
lahf
cmpb
xchg
fdivrl
aam
hlt
fcmovnbe
setno
loop
popf
std
pop
xor
xor
dec
sub
dec
inc
shrl
rolb
cmp
sbbl
push
gs
mov
push
adc
xchg
nop
jns
scas
or
int3
int3
sub
push
sub
or
lds
mov
pusha
inc
shrb
out
aas
sahf
jge
jmp
cmc
fimull
push
repz
lods
nop
mov
mov
inc
push
pop
lret
and
push
imul
outsb
sbb
mov
pushf
mov
mov
push
mov
rclb
cmc
outsb
das
push
sahf
fwait
notl
push
cmp
or
mov
pushaw
add
dec
fstpl
jns
add
push
mov
idivb
sbb
mov
jae
mov
and
jp
adc
xor
lret
lods
inc
add
movsb
or
fiadds
sbb
pop
xchg
push
cmp
sbb
les
jg
add
cmpb
mov
mov
sub
in
test
bound
popf
jnp
outsb
jmp
cmpsl
push
gs
xor
xlat
cmp
xchg
hlt
push
lods
xchg
or
in
dec
mov
sub
call
outsb
int
out
dec
stos
jno
sbb
mov
fwait
cli
xlat
mov
xchg
jae
mov
icebp
xchg
ljmp
mov
lods
or
inc
sub
loopnew
push
in
fldl
loope
mov
dec
cmpsl
and
mov
xlat
lock
inc
cwtl
jae
mov
test
lret
and
imulb
mov
push
pop
inc
outsl
aas
sbb
pop
and
loope
cs
loop
lahf
jp
mov
cmpsl
adc
ret
sub
popf
insb
enter
clc
and
dec
mov
push
jmp
inc
and
mov
test
loope
adc
clc
mov
mov
mov
mov
mov
mov
push
movsb
fstpl
or
out
dec
add
out
mov
sub
stos
movsl
imul
fisubrs
xchg
notb
jns
push
cli
divb
xchg
lock
scas
push
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
cmp
rcrb
fidivrs
sbb
fnstcw
xor
mov
lret
xchg
repnz
mov
jo
or
sub
imul
mov
dec
cmpsl
es
movsb
and
shlb
mov
pop
mov
mov
cwtl
jbe
mov
add
mov
je
das
mov
dec
lods
or
and
pop
lds
add
and
ds
std
fdivrs
xchg
neg
cmp
jne
mov
adc
insl
int3
or
lret
sub
inc
and
loope
shll
filds
std
pop
mov
out
push
push
xchg
mov
repz
mov
mov
dec
lods
lods
or
push
lds
push
lds
jecxz
push
loopne
aas
pop
jle
cmp
xchg
notb
cwtl
notl
cmc
push
mov
pushl
xor
jge
scas
push
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
rcrb
fidivrs
sbb
cmp
mov
and
aas
xor
mov
dec
lods
or
sub
lds
push
and
pop
mov
mov
cwtl
inc
xchg
push
jne
xor
out
cmpsl
adc
jo
das
mov
dec
lods
or
inc
cmpsb
push
call
lds
add
shlb
fidivrs
popf
std
fdivrs
xchg
neg
cmp
jne
and
adc
adc
insl
int3
or
lret
sub
lds
loope
shll
fistpll
popf
std
pop
mov
insl
push
push
xchg
es
aad
xchg
repz
insl
out
shrb
lods
or
sub
gs
xlat
loopne
mov
popf
cld
pop
aaa
xchg
notb
cwtl
notl
cmc
push
mov
xorl
add
scas
scas
ss
sub
jmp
stos
or
daa
xchg
inc
movsl
addl
pop
jg
cmp
sbb
cmp
inc
mov
xchg
repnz
mov
inc
sub
lods
or
sub
lds
jecxz
mov
dec
into
cld
jge
dec
jp
jp
cmp
jne
xor
jno
mov
cmpb
or
lret
call
lcall
popa
shlb
lcall
jp
cmp
repnz
mov
jb
xor
sbb
sub
data16
and
add
and
push
sub
jp
cmp
jne
lock
dec
shrb
mov
dec
test
push
sub
gs
mov
add
pop
jle
jno
pop
pop
xlat
ljmp
xchg
cmc
push
mov
jae
xor
outsb
int
int3
jnp
stos
or
daa
xchg
inc
movsl
add
jecxz
fidivl
mov
mov
cwtl
notl
adc
outsl
into
sub
mov
dec
lods
daa
fisubrl
cmpsl
push
lds
jecxz
mov
xchg
jge
pop
mov
cwtl
notl
push
lods
sub
adc
das
mov
mov
sub
loop
mov
add
and
xchg
cld
std
fstpt
cwtl
clc
shll
xchg
repnz
mov
jb
xor
insb
int3
or
lret
sub
jecxz
and
add
divps
sub
fidivrl
cwtl
clc
push
mov
jne
xor
repz
xor
jo
xor
dec
lods
lods
or
sub
gs
icebp
pusha
pusha
rcrb
fimuls
imul
push
xchg
cmc
push
mov
jae
xor
outsb
int
int3
cli
stos
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
rolb
cmp
push
push
aaa
cmp
jne
xor
outsl
into
sub
mov
dec
lods
daa
pop
test
cmpsl
push
push
movsb
and
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
je
lea
imul
mov
and
pop
in
and
add
cmp
popf
std
pop
mov
idiv
push
mov
jne
push
mov
into
cs
in
lock
scas
push
insl
int3
or
mov
push
out
adc
in
mov
jg
ds
std
pop
cmp
jp
adc
push
jne
xor
repz
mov
jo
pop
dec
dec
mov
dec
push
sub
lds
jecxz
mov
jle
cmp
sbb
aaa
cwtl
notl
test
xchg
lock
scas
push
outsb
int
add
sub
divl
movsl
add
jecxz
mov
jg
cmp
lcall
mov
jne
xor
jo
jle,pn
stos
lods
and
test
cmpsl
push
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
sub
lea
imul
mov
and
add
cmp
popf
std
pop
mov
idiv
mov
jne
push
mov
into
cs
in
lock
scas
push
insl
int3
or
mov
cltd
out
and
add
and
ds
std
pop
mov
stos
xlat
push
mov
jne
xor
repz
mov
jo
sti
dec
dec
mov
dec
push
sub
lds
jecxz
mov
sti
pop
cmp
sbb
jo
push
push
xchg
cmc
push
mov
jae
xor
outsb
int
sar
stos
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
mov
mov
cwtl
notl
adc
repnz
mov
jo
cs
sub
call
lds
cmp
lcall
push
jge
frstor
jns
cmp
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
les
pop
enter
inc
mov
jg
mov
sbb
stos
ja
push
mov
jne
push
mov
jb
xor
insl
int3
or
addr16
test
out
and
loope
mov
movsl
dec
cmp
lods
pop
fidivrl
cmpsl
push
aad
xchg
repz
mov
jo
das
mov
dec
sub
mov
les
and
and
jecxz
mov
jle
mov
sbb
inc
or
xchg
cmc
push
mov
jae
xor
outsb
int
jne
stos
sbb
mov
out
movsl
and
and
add
pop
jg
cmp
sbb
cmp
icebp
push
mov
cmc
xor
into
lock
jmp
cmpsl
and
mov
jle
cmp
jge
fcomps
ja
fcompl
cwtl
je
xor
loop
pop
jl
iret
das
mov
mov
lret
call
lds
add
and
mov
cli
jp
mov
push
jne
and
xor
insl
int3
or
lret
sub
inc
mov
loope
mov
movsl
dec
mov
sub
fidivrl
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
sub
call
xor
jecxz
repz
pusha
rcrb
fidivrs
sbb
cmp
push
mov
movd
std
jae
scas
push
out
je
or
dec
stos
and
out
movsl
add
jecxz
mov
jg
cmp
xchg
notb
jp
mov
icebp
push
mov
jne
mov
jo
xor
lods
sti
in
push
xchg
mov
dec
cmpsl
push
movsb
and
jecxz
mov
pop
mov
mov
cwtl
je
xor
repnz
mov
push
push
mov
into
push
ja
lret
fcomp
xchg
lds
add
and
ds
std
pop
mov
adc
jne
mov
outsl
pop
push
adc
pop
das
or
test
out
inc
mov
loope
cmp
sbb
cmp
xlat
push
xchg
fwait
pusha
mov
repz
insl
orl
lods
lods
or
sub
lds
jecxz
push
jge
and
fimuls
sbb
dec
or
xchg
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
xchg
inc
movsb
stc
in
movsl
movsl
adc
mov
inc
out
mov
mov
cwtl
notl
adc
repnz
mov
in
dec
stos
rcl
sub
call
movsb
and
jecxz
mov
pop
mov
mov
cwtl
je
xor
loop
pop
jl
iret
das
mov
inc
mov
lret
call
lds
add
and
mov
cli
jp
mov
je
mov
mov
loope
adc
insb
int3
or
xchg
push
push
data16
and
add
and
ds
std
pop
cmp
xlat
push
mov
jne
xor
rclb
adc
jecxz
dec
lods
lods
or
push
lds
push
sub
jecxz
in
pusha
rcrb
fidivrs
out
pop
fnstcw
cwtl
notl
xchg
icebp
push
adc
xor
xor
stos
or
daa
mov
test
inc
pop
mov
cmp
jo
cmp
cwtl
notl
xchg
jne
xor
fs
cs
loope
lods
or
sub
cmpsl
cmpsl
push
lds
xlat
and
fidivrs
jp
jp
cmp
jne
xor
repnz
mov
jo
das
mov
sub
fmul
dec
jb
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
mov
outsl
sub
adc
sub
push
push
data16
and
popa
popa
shll
fists
xor
pop
int3
pushf
mov
push
outsb
mov
xchg
repz
mov
jo
das
mov
dec
lods
lods
or
sub
loop
or
jecxz
and
fimuls
pop
pop
mov
cwtl
notl
cmc
push
mov
jae
xor
ljmp
sbb
mov
out
movsl
and
and
add
pop
jg
cmp
sbb
cmp
icebp
push
mov
pop
xor
xchg
lds
sub
lds
jecxz
mov
pop
mov
mov
cwtl
mov
xchg
push
inc
enter
push
mov
mov
dec
lods
or
or
in
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
mov
outsl
adc
adc
in
int3
or
xchg
sbb
pop
data16
and
add
and
ds
std
pop
cmp
xlat
push
mov
jne
or
push
push
mov
jo
lods
or
lods
lods
or
sub
lds
jecxz
mov
pop
fidivrs
xchg
notb
cwtl
notl
cmc
push
mov
cmp
scas
lea
sub
stos
stos
jbe
daa
daa
idiv
movsl
movsl
add
jecxz
pop
leave
rol
jg
cmp
ljmp
mov
dec
mov
xchg
repnz
mov
jo
cs
dec
lods
or
sub
loop
mov
icebp
ret
fidivrs
jp
jp
cmp
jne
xor
repnz
mov
jo
das
mov
sub
out
cmpsl
pop
xor
addl
fidivrs
popf
std
les
cwtl
clc
jnp
cmc
jne
aad
pop
repnz
nop
mov
lea
insl
int3
or
lret
sub
data16
and
add
pushf
cld
pop
inc
add
pop
int3
pushf
mov
push
outsb
test
aad
xchg
repz
mov
jo
das
mov
dec
lods
lods
or
sub
loop
or
jecxz
and
fimuls
pop
pop
mov
cwtl
notl
cmc
push
mov
jae
xor
ljmp
sbb
mov
out
movsl
and
and
add
pop
jg
cmp
sbb
cmp
icebp
push
mov
xlat
xor
in
dec
lods
pop
cmpsl
push
lds
jecxz
mov
pop
mov
sbb
mov
mov
imul
das
mov
and
mov
dec
cmpsl
pop
lds
add
and
mov
cli
jp
mov
push
jne
or
jb
xor
insl
int3
or
lret
sub
inc
mov
loope
mov
movsl
dec
mov
icebp
pop
fidivrl
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
sub
call
fisttpl
add
test
fisubs
jae
loopne
icebp
adc
outsb
in
or
sahf
imul
shll
loop
outsl
mov
pusha
in
xor
pop
out
mov
push
loop
mov
pusha
movsl
push
jno
notl
adc
repnz
mov
jo
cs
dec
lods
loopne
leave
sub
mov
inc
mov
pushf
cmp
sbb
mov
push
xor
xor
push
sub
mov
cmpsb
stos
or
and
mov
mov
and
cmc
sbb
pop
jg
sbb
fwait
adc
jne
mov
nop
int3
subl
cltd
jle
jmp
insb
cltd
and
pop
add
xchg
jle
in
adc
pop
mov
jns
pop
jo
push
stos
out
je
or
jmp
in
dec
jnp
push
loop
xchg
mov
add
jecxz
cli
add
ja
ficomps
sti
pop
movsb
jb
notb
insl
jae
jp
shll
pushf
call
int3
sub
jecxz
stos
jno
daa
idivl
ret
mov
fnstsw
cmp
fdivrs
xchg
mov
int3
shll
xchg
leave
push
mov
inc
into
cs
leave
sub
cmpsl
fnstcw
inc
mov
lods
mov
jge
xor
cwtl
add
mov
xchg
mov
jno
cs
mov
sub
sub
and
scas
cltd
mov
jg
xchg
pushf
std
adcb
jp
xchg
clc
or
xchg
adc
xor
inc
add
imul
mov
dec
mov
and
pushf
add
cli
jle
sbb
cmc
jns
sub
push
imul
aad
insl
repnz
mov
jo
int
in
dec
cmp
push
and
call
lds
jecxz
mov
jle
inc
popf
cld
pushf
push
sbb
aaa
cwtl
divl
cmc
push
hlt
cli
jae
jb
lock
out
xlat
outsb
int
or
dec
ljmp
inc
in
test
andl
jle
cld
pop
sti
sbb
cmp
push
fidivrs
dec
cmp
cmp
iret
cs
xchg
insb
inc
jmp
loope
pop
nop
comiss
mov
push
inc
test
push
es
pushf
adc
xor
cwtl
call
daa
mov
xor
out
mov
dec
stos
call
aas
jnp
repz
and
sub
cwtl
daa
pop
gs
inc
dec
test
mov
mov
test
jne
sub
repz
dec
cmpsl
stc
out
out
in
pop
orl
adc
jg
dec
out
test
loop
jg
xlat
xchg
lds
mov
dec
shll
sahf
xchg
out
xchg
stos
push
ret
pusha
dec
lahf
cmpsb
sub
xor
adc
push
test
and
and
adc
mov
cmp
xchg
push
out
xchg
imul
insb
push
dec
fwait
xor
pop
ja
sbb
add
mov
dec
xchg
outsl
cmc
std
and
jmp
ret
jns
jo
outsb
aad
xchg
movsb
lcall
push
in
pop
inc
insb
fwait
adc
jg
cmpsl
jle
cmc
xor
inc
popa
notl
adc
fwait
sarl
inc
enter
pop
test
inc
ret
jb
dec
adc
pop
out
mov
lods
mov
subl
icebp
js
cmpsb
push
xor
mov
jne,pt
push
pop
push
sti
xor
inc
movsl
int3
out
imul
push
shrb
push
dec
pop
mov
and
aaa
test
movsb
int3
pop
jp
cwtl
and
lock
ds
lcall
push
sub
jb
call
cmpsb
fimuls
and
ljmp
xchg
int
add
mov
insl
lods
pop
jae
xor
sbb
or
adc
daa
stc
das
ja
ja
push
sti
add
loope
imul
mov
pop
sti
bound
aas
push
mov
jb
cli
jno
inc
daa
addr16
lea
orb
and
mov
inc
filds
xchg
pop
push
sbb
mov
int
sbb
adc
dec
call
sub
shll
mov
movsl
fdivl
and
ds
arpl
inc
rorb
pop
adc
sbb
xorb
test
fnstsw
shll
lods
adc
or
pop
out
mov
mov
popa
pop
dec
jg
pop
ss
cmp
push
mov
pusha
mov
xchg
lea
adc
leave
call
mov
scas
aam
stos
rcrb
or
sub
or
push
nop
ds
pushf
jb
loopne
pop
push
scas
xchg
test
dec
stos
push
outsb
inc
mov
or
daa
popf
cld
or
lcall
adc
mov
jns
pop
push
fs
stos
dec
push
cltd
scas
mov
arpl
add
push
cmc
adc
stc
subl
xchg
insl
jmp
xor
cwtl
lahf
mov
imul
mov
ss
dec
cmc
mov
call
cld
mov
dec
sbbl
std
in
dec
jb
lea
es
adc
sub
push
inc
xchg
popf
fisttpll
jp
scas
lahf
cmp
movsb
mov
icebp
popa
mov
scas
push
out
jl
movsb
lcall
lea
jb
or
inc
out
dec
push
sub
rcrb
fstpl
int
les
ret
mov
fistps
mov
jb
jnp
push
ret
xlat
int
xor
lret
add
dec
mov
outsl
sahf
xchg
sub
mov
pop
jg
mov
inc
andl
xchg
dec
pusha
lahf
jbe
aam
or
push
cwtl
mov
inc
sbb
xor
repz
lock
call
lods
adc
add
stos
jnp
js
pop
add
jns
scas
out
ds
movsl
adc
scas
aaa
mov
lret
and
shlb
mov
pop
and
mov
std
mov
and
shlb
ds
push
sbb
clc
pusha
xchg
out
jne
imul
jmp
xor
xchg
int
imul
imul
insb
push
popa
clc
push
test
cmp
cmp
mov
je
xor
stos
inc
andb
lds
sub
mov
into
cmc
sub
arpl
xor
scas
std
hlt
insb
jnp
jb
pop
xchg
push
xchg
ss
ljmp
rclb
cmpsl
movsl
insl
jecxz
mov
mov
cmpsl
mov
add
cld
cmp
inc
mov
push
jle
sbb
shll
cltd
cltd
cs
insb
mov
inc
mov
cmc
int3
insb
cli
lret
clc
dec
aas
jle
cmc
insl
mov
popa
loopne
es
xor
mov
push
adc
lods
sbb
or
ss
insl
inc
or
add
mov
push
push
jge
mov
cmp
imull
sbb
or
dec
dec
testl
mov
ss
or
inc
jns
outsl
out
mov
mov
jb
pusha
aaa
outsl
gs
inc
lods
mov
ja
daa
into
cld
pushf
and
add
popa
lock
jmp
cmp
cwtl
push
cld
pop
push
sbb
sbb
add
ja
fldl
ret
add
xor
imul
xor
xchg
xor
xor
jg
cmp
imul
pop
data16
repz
jnp
dec
enter
in
push
sbb
xchg
hlt
cmp
icebp
mov
ss
mov
js
mov
sbb
mov
bound
lock
repz
leave
enter
cmpsl
push
or
stc
loope
mov
ja
jle
push
insb
mov
mov
cmp
add
mov
jmp
aad
push
pop
xchg
or
xchg
leave
push
xor
pop
lea
and
cmp
dec
inc
imul
popa
xchg
and
xchg
mov
in
orl
dec
cmp
jp
nop
cmp
iret
push
xchg
or
or
jo
negl
adc
pop
mov
hlt
cld
add
loop
push
fbstp
std
hlt
insb
mov
mov
out
ss
mov
mov
push
gs
mov
aaa
mov
jle
movsl
movsb
sti
sti
cmp
aas
int
sbb
int3
dec
xchg
cmp
das
lahf
mov
pushf
stos
gs
sub
inc
js
out
test
mov
fistpl
subb
negb
in
mov
cmp
jle
sbb
sbbl
xchg
mov
mov
cs
cmc
mov
or
daa
cmpsl
std
jbe
mov
xchg
aaa
ss
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
add
add
dec
lods
or
or
jg
add
add
add
sub
test
js
bound
adc
adc
cmp
in
imul
iretw
xchg
fs
mov
popa
fimull
fstpl
pop
ficoml
push
aad
jmp
push
rcl
arpl
dec
mov
pop
jmp
gs
fsub
jecxz
pop
popa
pusha
xor
pop
dec
icebp
fcmovu
fidivs
push
outsb
lock
mov
xor
push
stos
stos
loop
sub
ja
cmpsb
movsl
or
mov
mov
mov
ss
mov
bound
mov
lcall
add
stos
sub
daa
cmpsl
jmp
mov
mov
push
das
fwait
sbb
sub
xchg
and
jle
sar
or
inc
cld
add
add
testl
std
leave
ja
jp
jno
clc
dec
jno
jne
out
xchg
adc
insb
adc
sbb
imul
dec
fs
loop
popa
pop
loop
fcomip
pop
fstpl
pop
fisubl
fcoms
pop
push
aad
push
rcll
push
push
shlb
push
imul
jmp
gs
in
aas
scas
popa
pusha
adc
stos
test
fcmovu
xor
mov
dec
cmpsl
xor
mov
and
stos
popa
sbb
daa
sbb
ret
inc
mov
inc
ror
mov
mov
shrl
mov
outsl
mov
cmp
xor
jne
sub
jmp
arpl
cmpsl
movsl
and
loope
mov
cmpsb
loopne
jge
pop
sbb
add
sbb
rcll
rcll
adc
mov
movsb
mov
mov
xor
pop
dec
xor
fcmove
jg
imul
jp
movsb
clc
clc
shlb
adc
pop
pushf
nop
nop
movsb
pop
push
push
sbb
jmp
and
in
aas
xchg
popa
popa
outsb
xor
scas
pop
pop
imulb
ficompl
cmpsb
aad
inc
and
push
dec
adc
dec
idivb
popf
jge
call
enter
sbb
loope
outsl
ja
fiadds
jb
fsts
push
inc
insl
xor
cmpsl
push
xor
das
scas
pop
lods
sub
jecxz
stos
out
inc
test
dec
les
inc
xor
cmp
mov
aam
mov
push
xor
loop
mov
mov
xor
ficoms
lds
jecxz
mov
rcrb
mov
push
mov
jne
xor
add
iret
das
mov
dec
lods
or
push
mov
lds
shlb
bound
lcall
push
mov
jne
push
mov
jb
xor
insl
int3
or
or
xchg
data16
and
add
and
adc
int3
repnz
jp
cmp
lods
or
repz
mov
jo
das
mov
dec
lods
lods
or
sub
bound
pusha
rcrb
fidivrs
sbb
out
scas
es
int3
push
mov
jae
mov
xchg
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
fidivrs
sbb
cmp
notl
xchg
jne
xor
test
iret
cs
andl
subl
push
lds
jecxz
mov
pop
mov
mov
cwtl
or
push
jne
xor
jb
mov
out
iret
das
mov
cmp
mov
dec
fdivrl
jecxz
mov
jg
ds
std
pop
mov
cwtl
clc
push
mov
jne
aad
adc
dec
scas
push
in
int3
or
dec
sub
mov
inc
mov
notl
popf
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
outsl
mov
dec
fisttps
imul
mov
cmpsl
push
lds
jecxz
push
xchg
negb
jns
fidivrs
rcl
xor
cwtl
notl
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
cmpsl
call
cmpsb
movsl
add
jecxz
and
popa
rcrb
fidivrs
rclb
xchg
cwtl
idivl
gs
or
push
mov
jo
cs
dec
lods
or
sub
lds
lds
mov
cmp
mov
mov
cwtl
lods
or
xor
repnz
notb
pop
hlt
mov
dec
lods
or
lret
call
lds
add
and
mov
jp
fnstcw
cwtl
clc
mov
jne
push
mov
pop
sbbl
gs
push
insl
int3
rorl
mov
das
dec
cmpsl
pop
data16
and
add
and
ds
std
pop
mov
sbb
push
or
xchg
repz
xor
jo
scas
mov
dec
jle
mov
call
je
sbb
inc
mov
jle
cmp
sbb
cmp
push
mov
repnz
and
outsb
int
or
dec
stos
mov
daa
insb
and
inc
mov
inc
daa
pushf
push
xchg
out
int3
xchg
fnstcw
cwtl
notl
adc
repnz
mov
jo
sub
lods
adc
dec
cmpsl
xchg
and
jecxz
mov
rclb
add
and
testb
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
xchg
cmpsl
pop
and
inc
mov
jg
ds
std
adc
mov
cmp
das
mov
adc
xor
insl
int3
or
lret
sub
data16
and
add
xor
fistpll
popf
std
pop
cmp
jp
cmp
in
push
int
or
es
jle
and
xchg
lds
sub
lds
jecxz
mov
jle
fistpl
pop
inc
sbb
cmp
push
mov
jae
xor
inc
test
push
outsb
int
mov
mov
pusha
fst
add
mov
jg
cmp
sbb
cmp
inc
xor
xchg
repnz
mov
jo
cs
and
sbbl
adc
mov
cltd
mov
jge
pop
mov
cwtl
notl
push
jne
xor
mov
mov
mov
dec
lods
or
lret
push
cld
sbb
add
outsl
mov
xchg
shll
sub
cwtl
clc
push
mov
jne
push
mov
jb
xor
mov
mov
cmpsl
pop
inc
and
add
jbe
push
xchg
repz
xor
ljmp
lret
das
aad
xchg
repz
mov
jo
das
mov
dec
lods
lods
or
sub
gs
mov
inc
mov
jle
mov
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
sub
adc
add
cmp
lret
push
lds
jecxz
mov
pop
mov
mov
rolb
jno
out
and
sub
cmpsl
inc
iret
das
mov
mov
cld
pop
call
les
jo
repnz
push
jne
inc
cli
push
mov
paddq
repz
enter
adc
jge
mov
adc
popf
cmp
mov
sarl
shll
fildll
mov
scas
dec
out
dec
addr16
dec
lods
bound
cmp
cmp
xchg
inc
mov
je
lcall
mov
adc
stos
outsl
out
out
in
dec
sub
popl
lds
sbb
fmuls
jns
jg
cmp
jb
jnp
push
outsl
jae
lea
push
push
test
xchg
leave
stos
xchg
arpl
loopne
and
dec
aas
add
out
cmp
pop
call
jmp
lock
mov
cmovo
xchg
rorl
stos
push
das
leave
out
rolb
rolb
inc
imul
jmp
call
fiadds
push
push
jne
and
jb
mov
mov
test
push
test
or
pusha
inc
add
add
mov
push
xchg
into
mov
jle
cmp
adc
repnz
lods
adc
push
sub
push
inc
adc
bound
mov
loop
mov
sbb
mov
aaa
divl
jl
sbb
icebp
shlb
dec
mov
insb
in
or
daa
and
lock
scas
fwait
insl
movsb
sub
fidivrl
lcall
pop
mov
fcomi
rcrl
icebp
neg
out
xchg
clc
sub
int3
xchg
test
dec
dec
movsb
in
sub
call
pusha
lret
js
subl
idivb
sbb
data16
jae
aaa
xor
insb
leave
stos
adc
mov
es
or
pop
orl
xchg
pop
mov
les
adc
adc
icebp
mov
jne
leave
mov
inc
add
loop
or
loop
add
fstpt
aas
push
fnsave
mov
gs
xor
mov
mov
addr16
dec
test
inc
add
rolb
xchg
pop
mov
call
neg
push
sbb
mov
sbb
mov
hlt
cs
outsl
shrl
xchg
or
ret
fs
ljmp
scas
dec
outsb
int
mov
dec
stos
or
push
add
rcrb
cmp
add
mov
arpl
xor
cmpsb
mov
pusha
ds
sbb
arpl
stc
repz
aam
jmp
imul
mov
gs
imul
cmp
call
mov
mov
cmp
adc
fidivrs
popf
std
lea
scas
outsl
shrl
xor
mov
arpl
mov
leave
jns
fsts
jns
aam
addr16
push
and
push
xor
adc
xchg
ljmp
enter
data16
inc
rcrb
fstpl
inc
fdivrl
sbb
xchg
push
cmp
xchg
jb
dec
lea
or
mov
jb
xor
inc
mov
mov
fnstsw
shll
outsl
clc
rorb
dec
sub
sub
loop
ret
loop
or
js
pushf
sub
popf
add
cmp
cmp
push
shlb
nop
sbb
adc
push
loope
add
inc
xchg
sti
dec
jmp
sahf
jl
fdivs
lcall
adc
rdpmc
dec
fwait
or
scas
nop
imul
subb
shl
cmp
mov
mov
outsb
gs
cmpsb
je
mov
push
adc
dec
dec
adc
xchg
ljmp
enter
data16
loop
lahf
jecxz
es
fstpl
cmp
mov
xor
mov
push
iret
scas
sbb
into
mov
outsl
jns
add
lret
imul
mov
frstor
cmp
pop
enter
cli
adc
xchg
nop
jo
xor
jns
aaa
add
por
data16
xor
mov
jg
pop
ret
cmp
mov
and
ss
aam
lods
lea
fs
mov
sub
add
pusha
add
in
cmp
jl
pop
sbb
jge
shl
cmc
jg
repz
hlt
iret
jp
out
push
inc
or
xchg
inc
jb
xor
andl
sbb
mov
popa
mov
repz
std
pop
dec
push
fnstsw
inc
adc
inc
pop
mov
arpl
sbb
jge
jle
loop
aaa
pop
je
ja
push
pop
xchg
adc
xor
or
mov
mov
and
inc
xor
pop
roll
aas
fmuls
adc
push
fsts
xor
out
iret
in
xchg
push
ljmp
call
inc
ret
dec
pusha
push
sbb
or
call
gs
and
aaa
js
shlb
or
mov
push
fmul
decl
cmp
fcomps
je
xor
divb
xchg
outsb
push
adc
insl
clc
inc
xchg
dec
scas
mov
outsb
jecxz
call
scas
push
mov
sub
pop
and
test
test
jg
and
jp
inc
addl
aad
xchg
repz
mov
lock
lods
mov
push
movl
and
dec
inc
movsb
xor
cmpsb
lret
pop
sub
cwtl
notl
cmc
push
mov
jae
mov
lock
scas
sbb
sub
jmp
stos
or
daa
xchg
inc
movsl
add
jecxz
lcall
movsl
mov
pop
lret
mov
notl
out
sahf
sub
sub
add
lret
mov
jp
push
lahf
xchg
xchg
aad
clc
pop
cmp
jne
aam
push
push
lret
cwtl
aas
mov
xor
int3
or
add
pop
inc
cmpsl
cmp
sbb
add
not
cli
fnstcw
xor
jne
sbb
popf
std
enter
rcrb
loop
mov
add
out
mov
sahf
jnp
in
sbb
aaa
divl
ja
aad
nop
jo
popf
std
pop
xchg
repnz
ljmp
out
inc
add
xchg
ret
arpl
mov
sti
mov
leave
ret
mov
notb
outsl
dec
or
leave
cs
insl
imul
xor
sarb
sub
arpl
mov
xchg
aad
pop
mov
cwtl
cli
out
push
jne
into
xchg
jb
sbb
scas
mov
int3
dec
and
mov
lods
inc
imul
sbbl
push
cmp
outsl
push
mov
cmc
int3
mov
out
xor
lock
add
pusha
inc
xlat
adcl
les
ds
sbb
mov
fwait
stc
hlt
mov
movsb
mov
sbb
adc
call
sub
in
pop
out
pusha
push
push
out
pushf
sbb
mov
sbb
cmp
and
push
std
inc
and
adc
addr16
inc
inc
lret
mov
arpl
push
popa
sarl
inc
push
pop
adc
fcoml
ficomps
mov
push
or
loopew
test
pop
sahf
call
and
mov
popa
pop
xchg
inc
ljmp
sub
lret
in
lods
test
mov
ficoml
adc
cs
cmpsb
pushf
mov
jmp
push
cmpb
lds
das
mov
mov
lea
or
push
in
call
enter
repnz
mov
cmp
jne
in
dec
lods
or
and
cmp
sar
hlt
cmp
inc
popf
std
lds
jl
fnstcw
cwtl
clc
enter
or
sub
inc
dec
cs
cmp
sahf
xchg
ficompl
and
repnz
xor
xchg
add
pop
dec
push
jp
add
inc
cld
pop
aad
fcomp
mov
jb
rcrb
insl
cmpl
popf
adc
fcomps
rcrb
fsubrp
dec
xor
repnz
sub
or
lock
lods
cmpsb
fsubl
movsb
gs
das
scas
inc
rcrl
inc
inc
and
push
jle
out
movsl
jmp
sub
cwtl
das
push
xor
nop
or
cld
pop
mov
iret
test
push
push
repnz
mov
aaa
adc
cli
out
mov
dec
cmpsl
lods
or
xchg
fs
cwtl
adc
mov
andl
mov
xor
ja
daa
and
fbld
js
call
xchg
hlt
repnz
ja
pop
jbe
jg
and
shrb
insl
push
dec
sub
push
jne
or
test
xor
rcrl
dec
aas
int3
int3
or
add
fistpl
xchg
sti
pop
in
addr16
pop
outsl
push
sub
nop
lock
dec
repz
or
jle
aad
pop
inc
or
andb
popa
sarl
jle
push
lea
sbb
push
xor
nop
in
xlat
rclb
lock
fabs
mov
xchg
call
dec
inc
test
lods
sub
inc
mov
daa
jmp
push
inc
pop
out
jnp
xor
cmc
stc
popf
cld
pop
mov
sarb
lock
and
push
repnz
mov
test
gs
cmp
add
call
jl
mov
mov
aam
pop
aam
stos
or
lret
cmp
das
repnz
aam
xchg
aam
dec
icebp
xchg
bound
fwait
inc
inc
xchg
cmc
fidivl
clc
fcoms
adc
push
xchg
hlt
popf
std
and
into
inc
cmpsl
or
scas
movsl
add
lds
dec
scas
push
adc
out
add
dec
cltd
subl
or
mov
inc
adc
push
pop
orb
sub
jne
stc
in
mov
add
dec
xchg
pop
and
add
ror
enter
jecxz
push
cmp
rcr
cwtl
outsb
into
scas
xchg
sbb
dec
stos
cmp
scas
jnp
out
movsb
push
inc
adc
stos
outsl
pop
add
sti
jge
xchg
popa
shlb
add
int3
jae
cld
sub
cmp
test
or
repnz
mov
rorl
movb
loopne
add
call
jnp
lret
je
scas
xchg
aam
mov
jno
fmuls
in
dec
dec
cmp
xchg
push
mov
sbb
sahf
lea
sbb
mov
fdivrl
jecxz
mov
rclb
repz
xchg
sub
mov
shll
nop
xor
dec
aas
add
pop
inc
dec
loopne
pop
cltd
mov
xchg
sti
in
ja
rcll
dec
pushf
mov
dec
cmp
das
inc
jmp
inc
or
enter
clc
movsl
add
or
mov
jg
cmp
clc
in
mov
jle
and
ss
fst
leave
mov
push
mov
enter
inc
inc
or
inc
and
or
daa
mov
sbb
push
clc
xchg
jmp
adc
pop
mov
pop
das
or
pop
es
inc
test
iret
cs
and
fs
fwait
cli
jbe
sbb
cvtps2pd
and
pusha
xchg
cmc
insb
mov
mov
pop
test
je
or
inc
or
loop
mov
aas
dec
lods
or
push
popf
cltd
popa
fstpt
jnp
test
stc
cmp
push
std
lods
or
dec
lods
cmpsb
in
addr16
test
xchg
lret
jle
mov
sbb
mov
and
aam
xchg
mov
cmp
xchg
hlt
mov
sub
fisubrl
test
mov
bound
push
arpl
inc
andl
lcall
sbb
jbe
mov
in
xlat
cld
pop
ljmp
push
in
out
or
xchg
lock
scas
gs
mov
stos
loopne
sbb
movsl
mov
add
xor
jae
mov
pop
mov
dec
notl
dec
scas
mov
repnz
mov
stos
test
dec
lods
pop
mov
sbb
lds
sbb
into
mov
lock
lret
sub
dec
or
stos
mov
loope
mov
jge
aas
pop
lods
or
adc
mov
sub
add
jp
into
adc
lock
lahf
clc
jnp
add
mov
sahf
pop
mov
xor
xor
inc
lret
sub
sbb
pop
xor
fidivrl
xchg
pop
mov
repz
clc
push
pop
pop
aad
out
add
shlb
lds
loopne
mov
stos
pop
sbb
dec
adc
mov
rcrb
fisubs
int3
mov
push
adc
int
xor
cmpsb
mov
fnstsw
in
imul
cmpsl
mov
mov
or
into
hlt
out
popf
cld
pop
mov
dec
xor
gs
roll
outsl
cmpsl
and
aas
stos
popa
shll
clc
call
sbb
ds
jo
jp
cmp
es
icebp
push
push
mov
shlb
shll
sub
pushf
pop
fisttpl
js
popa
popa
shlb
inc
je
dec
adc
in
loopne
xchg
scas
stos
jo
ja
push
test
xchg
push
scas
popa
mov
fwait
negb
or
aam
pushf
stc
popa
popa
pop
not
xor
je
jmp
dec
insb
xchg
push
in
movsb
imul
out
inc
pushf
lods
or
mov
sbb
jbe
popf
xchg
icebp
push
add
pop
cs
hlt
out
sub
pop
dec
inc
or
sub
push
outsb
int
push
inc
cmp
lock
scas
pop
ss
cmp
inc
add
pop
mov
sub
push
scas
jno
xor
pop
push
fldenv
pop
data16
mov
push
fcomps
add
data16
sbb
rclb
or
jp
cmp
stos
mov
in
mov
jg
aas
add
lds
pop
pop
sub
xchg
pop
cmp
xor
sbb
mov
pop
test
ffreep
mov
je
xor
nop
xchg
sbb
add
pop
inc
sbb
fildl
data16
sub
hlt
xlat
les
pop
loope
popf
popf
std
pop
sub
dec
mov
sub
adc
mov
inc
aas
sahf
arpl
jg
repnz
jns
lahf
cmpsb
mov
cmc
js
xor
ja
cld
pop
pushf
int3
mov
or
xchg
xchg
mov
fs
addr16
movsl
sahf
icebp
pop
mov
fildl
daa
imul
clc
xchg
ss
sti
adc
push
int3
fsubr
in
shlb
jmp
dec
cmpsl
aam
rep
mov
inc
ret
pop
std
inc
cmp
add
mov
dec
cmpsl
stos
sahf
push
pop
loop
xchg
fcmovbe
adc
push
jge
lods
jb
mov
aam
dec
mov
xchg
push
or
movsl
mov
lods
or
push
ficomps
fwait
pop
fcomps
xchg
push
shll
mov
pop
pop
mov
ljmp
ljmp
push
jmp
ret
js
mov
fcoml
sbb
test
mov
jae
cld
call
mov
sub
jmp
mov
xchg
inc
outsl
xchg
repz
sbb
xchg
aas
add
inc
and
jns
aaa
lcall
fwait
jecxz
push
mov
outsb
push
cmpsl
mov
fcompl
int3
mov
outsl
imul
loopne
lods
cmpsb
repz
xor
stos
cmc
jecxz
rcrl
inc
lods
add
mov
cmp
cmc
sbb
add
jnp
rcll
or
ljmp
push
in
leave
movsb
test
icebp
ret
push
in
in
dec
lods
xor
jg
ficompl
push
popa
mov
cwtl
jne
rclb
push
push
xor
cmp
es
dec
cmpsl
mov
gs
sti
ret
mov
dec
cmpsl
pop
lods
pop
fsubp
lcall
rcr
ds
std
scas
or
out
into
sub
lret
sub
push
mov
mov
jle
mov
lods
lock
fldenv
stc
pop
inc
mov
fnstcw
sbb
sbb
adc
jo
sub
shll
movl
lds
mov
mov
dec
adc
cmp
andb
pop
mov
lcall
push
in
scas
xchg
icebp
icebp
shrl
mov
sub
or
add
push
outsb
int
push
inc
mov
jle
divb
xchg
xlat
icebp
xor
fidivrs
xor
adc
int
in
in
test
loopne
inc
add
dec
lods
in
mov
sbb
cmp
aaa
jns
shll
mov
lock
jge
lods
cmc
push
sub
in
dec
movsl
and
mov
mov
or
sbb
mov
xchg
je
cltd
xchg
je
push
sahf
xchg
push
mov
bswap
int
mov
sub
movsl
and
mov
mov
or
adc
xor
fwait
sti
je
xchg
push
fcom
mov
mov
sbb
out
xor
insl
ljmp
dec
inc
and
add
add
dec
or
and
loop
aas
pop
jl
sbb
adc
push
xor
fwait
popf
cld
pop
rorl
pxor
dec
fs
add
or
outsl
frstor
jg
pop
jl
adc
mov
mov
pop
dec
jo
cld
pop
mov
iret
cs
lock
and
sub
iret
cs
push
je
or
sub
and
fnstsw
xor
mov
jno
xchg
iret
xor
add
dec
nop
or
test
push
push
out
cmp
push
sti
mov
pop
sbb
ret
xchg
icebp
aad
mov
push
scas
mov
ror
sub
push
sbb
or
gs
movsl
add
ret
mov
jecxz
pop
mov
xchg
push
lcall
jae
jp
adc
jae
imul
fcmove
iret
ljmp
xchg
repz
movsb
jle
sarb
lods
or
xlat
call
lds
jecxz
dec
pusha
pusha
mov
popf
cld
pop
mov
cs
push
push
xchg
cmc
push
mov
loope
xor
outsb
int
mov
stos
stos
das
xlat
daa
daa
xchg
inc
movsl
and
and
dec
aas
rcrb
jno
into
xchg
ljmp
or
daa
or
adc
cs
push
arpl
lret
cmp
pop
pop
lds
sbb
xchg
inc
sbb
aad
pop
mov
iret
adc
or
push
mov
and
aas
pop
lods
or
push
pusha
inc
call
pop
fcmovbe
popf
xchg
je
inc
adc
rcrb
in
lret
stos
cmp
jne
xor
mov
test
andl
cmp
sbbb
adc
jne
xor
jno
ds
std
pop
dec
sbb
or
ss
daa
or
jle
lahf
arpl
mov
mov
adc
mov
mov
sub
outsl
ror
add
movsl
dec
bound
out
ret
fldl
loope
mov
sbb
cmp
xchg
push
mov
mov
loop
or
inc
test
add
pusha
xchg
dec
daa
xchg
inc
mov
jge
push
lds
mov
xchg
mov
sub
jb
scas
mov
test
dec
gs
loop
or
loop
iret
das
mov
sbb
ret
popa
pop
cmp
pop
ss
mov
mov
lea
jo
scas
xchg
sub
inc
in
sub
daa
inc
imul
mov
add
mov
add
mov
js
xor
mov
xor
lods
mov
sub
push
imul
jmp
aad
addr16
call
fnstsw
cmp
stc
fstpt
std
cwtl
cmp
jl
mov
jae
sbb
ja
mov
adc
jns
in
leave
inc
insb
out
or
add
add
sti
mov
sbb
mov
xor
xor
lods
shlb
adc
iret
push
dec
test
ret
bound
jecxz
and
cli
inc
pop
sbb
cmp
pop
negb
stc
ja
inc
mov
lea
stos
mov
leave
inc
insl
lods
in
xchg
inc
inc
add
push
pop
inc
and
pushf
pop
daa
push
pusha
inc
mov
cltd
jbe
sbb
outsl
mov
shr
sub
in
cmpsb
test
cmpsb
or
pusha
push
addb
sti
pop
pop
pushf
jnp
cmp
jns
push
sbb
je
sbb
mov
xor
sub
mov
and
jecxz
mov
and
cld
ret
and
call
pop
fwait
sbb
push
mov
repnz
lods
outsl
dec
lret
dec
leave
mov
jmp
inc
and
add
test
inc
fldl
inc
pop
lahf
bound
push
jp
icebp
shll
aad
adc
push
push
scas
mov
lret
push
push
inc
and
inc
and
sbb
testb
je
xor
ja
mov
js
dec
cwtl
push
shll
cmpsb
imul
mov
pushf
inc
mov
cltd
mov
pushf
mov
cmp
mov
mov
lods
nop
sbb
or
dec
scas
es
inc
and
pop
movsb
test
inc
and
pushf
pop
lahf
pushf
jnp
cmp
xchg
mov
xor
push
hlt
push
mov
push
out
mov
or
scas
test
leavew
outsb
shl
ljmp
movsb
cmpb
arpl
mov
call
fnstsw
sbb
icebp
mov
ja,pn
scas
lods
jno
mov
or
leave
inc
outsb
in
ljmp
and
pushf
filds
aaa
fdivrl
stc
pop
xchg
enter
cltd
movsl
out
mov
jp
scas
insl
dec
and
loop
movsb
mov
in
fldl
sti
jns
cld
popa
cmp
sbb
push
push
shrb
js
into
dec
mov
mov
jae
dec
inc
insl
lods
in
xchg
inc
daa
mov
cmp
pop
cmp
pusha
cli
fcomps
xchg
xor
xchg
jno
adc
or
mov
mov
inc
es
lods
xchg
shll
mov
sbb
ficoms
jle
mov
pop
xchg
push
xchg
mov
outsb
mov
mov
dec
dec
mov
sub
addr16
jmp
add
mov
out
dec
xchg
loopne
mov
sti
push
mov
xchg
pop
pop
push
xchg
jae
xor
in
push
mov
in
push
mov
sub
in
xor
fs
mov
loop
pop
sbb
pop
lahf
aaa
fdivrl
cld
adc
sbb
aad
mov
insl
dec
dec
mov
inc
test
daa
in
sub
mov
inc
and
bound
mov
faddl
sti
js
mov
adc
mov
cmc
push
dec
adc
insb
dec
leave
xchg
jno
lret
orb
mov
inc
mov
sbb
pop
call
cltd
jbe
sbb
hlt
push
mov
jae
mov
rorl
je
enter
inc
mov
push
enter
cmpsl
or
mov
add
push
mov
pusha
jns
mov
adc
push
cmp
lods
or
xchg
lods
dec
push
in
dec
daa
or
jle
cmp
jge
cmp
cwtl
test
popf
divb
iret
cs
mov
dec
sub
mov
inc
mov
fs
xor
ret
rolb
fnstsw
fcmovnu
sbb
pop
jae
sub
jae
xor
repnz
xor
es
movsb
imul
push
pusha
enter
push
sub
cmp
xchg
cmp
ja
into
adc
or
int
mov
leave
sub
push
loope
imul
and
loop
mov
fcomps
cmp
jo
push
add
adc
outsl
xor
lea
xchg
or
nop
lock
scas
inc
out
imul
mov
lahf
add
sub
pusha
or
negb
pushf
dec
push
push
xchg
pop
sbb
jb
repnz
dec
clc
push
and
test
bound
rolb
sbb
aas
cmp
popa
idivl
ds
jae
mov
icebp
mov
fwait
popf
cld
pop
popa
outsb
sub
or
rol
and
and
gs
mov
mov
xchg
notb
adc
shll
insb
cwtl
xor
outsl
into
pop
dec
xchg
sub
add
insb
mov
es
add
dec
and
dec
mov
arpl
jns
cmp
pop
aas
mov
js
aaa
xchg
je
inc
mov
jl
lods
cmc
or
das
sub
scas
adc
lret
add
inc
mov
popa
pop
mov
mov
xchg
mov
in
mov
push
in
mov
or
adc
shrl
test
lret
test
ret
loope
dec
scas
push
mov
jnp
fstps
jbe
aam
ja
mov
xchg
push
mov
je
insb
cltd
lods
xor
push
cwtl
clc
push
and
leave
mov
loope
cmp
fldenv
cli
xor
sahf
repnz
out
scas
xchg
mov
lret
int
adc
add
xor
sub
lds
pushf
gs
lcall
cli
adc
rcll
repz
in
lods
sbbb
fnstcw
fimuls
in
sub
cmc
mov
dec
lods
xor
cld
idivl
push
adc
mov
pop
outsl
movsb
repnz
mov
xchg
or
stos
cmp
or
ret
inc
ja
shlb
enter
imul
mov
xchg
jns
cs
pop
rcll
push
mov
int
sbb
mov
cs
jmp
inc
les
addb
scas
push
adc
jnp
cmp
incb
push
aaa
imul
add
mov
or
mov
push
push
ljmp
das
test
add
shlb
mov
cltd
stc
testl
jae
pusha
mov
popf
cld
pop
rorl
cmp
sub
call
outsb
int
imul
cmp
add
out
sbb
push
mov
repz
js
lods
sbbb
fnstcw
jns
in
in
test
inc
int
and
jo
cs
cmp
popa
lds
out
cmpsl
rcrb
pushl
cld
pop
push
cwtl
ja
push
xchg
not
into
aaa
stos
mov
cwtl
fs
jmp
loope
in
orl
jo
mov
loop
pop
cmpl
xchg
popa
pop
lcall
ss
mulps
xor
jb
dec
stos
mov
fnstcw
cwtl
clc
ret
mov
je
test
cmpsl
pop
add
add
inc
inc
mov
jle
push
aaa
jnp
ret
hlt
shll
filds
mov
jmp
sub
push
fisubs
jnp
call
pop
cmp
xor
ss
jne
into
mov
xchg
outsl
push
lret
push
sub
or
push
mov
out
inc
push
inc
push
push
ret
mov
jg
mov
xorb
fwait
jbe
push
jg
cmp
int3
dec
out
int
mov
stos
push
or
inc
and
fsubl
sbb
sbb
sbb
je
js
push
xchg
adc
push
mov
stos
aam
sub
dec
mov
cmpsb
lods
or
lret
lcall
xchg
fistpll
sahf
fwait
jns
xchg
fnstsw
rcll
push
ss
push
in
push
lock
and
daa
or
jle
addl
pop
push
popf
je
cmp
clc
aam
mov
cmp
mov
lods
dec
imul
in
sarb
xchg
and
cmp
jecxz
mov
jns
mov
xor
notl
xchg
or
sub
cmpsb
in
or
loop
mov
mov
dec
stos
je
mov
fdiv
sahf
mov
mov
adc
cmovle
push
xor
out
dec
push
jmp
in
test
arpl
mov
pop
push
ljmp
lcall
xlat
popf
jge
ds
pop
aad
xor
push
cli
repz
rsqrtps
fnstcw
cwtl
push
inc
push
stos
es
inc
andb
push
pop
mov
sbb
pop
xor
stc
push
xor
jno
adc
insl
clc
cmp
and
inc
or
inc
rorl
cld
mov
fwait
jns
cmpsw
jbe
push
xchg
hlt
repnz
xor
adc
shlb
lret
stos
mov
cmpsb
call
inc
cmpsl
popf
bound
mov
pop
pop
cmp
xor
jno
adc
mov
push
das
lea
subl
arpl
push
add
dec
stos
je
mov
xchg
adc
jp
push
push
jp
xor
cld
pop
mov
dec
scas
es
mov
and
push
fbld
add
aas
mov
faddp
cmp
and
mov
pop
icebp
xchg
adc
xchg
jne
in
xchg
or
xor
out
shl
stos
insl
add
test
xchg
fistpll
sbb
inc
cmp
mov
aad
jbe
cwtl
ja
repnz
pop
xor
adc
leave
mov
clts
int3
les
test
or
inc
or
and
pop
sahf
xchg
in
pop
cld
pop
xor
pop
std
mov
sub
ds
push
jne
rcll
rolb
sbb
fnstcw
mov
xor
jns
mov
xchg
popf
cld
pop
adc
jns
jecxz
sbb
stc
fisubl
inc
lds
test
test
and
fidivrs
sbb
push
push
jg
cmp
loope
mov
xchg
stos
test
movsb
and
lds
les
jg
jns
outsl
iret
divb
mov
bound
xchg
or
mov
add
mov
dec
loop
addr16
mov
jb,pn
mov
or
das
xchg
xor
jl
mov
sbb
xor
cs
jecxz
stos
imul
inc
xchg
xchg
or
xor
cs
mov
cmp
pop
cmp
jp
xor
cwtl
xchg
lods
mov
mov
adcl
dec
stos
xchg
cmpsl
and
pusha
inc
add
cld
and
pop
cmp
push
aaa
pop
pop
and
mov
mov
adc
mov
lea
inc
insb
out
es
enter
loopne
mov
mov
cmp
fmulp
daa
adc
jmp
mov
and
xchg
jae
lea
out
jmp
sub
in
iret
cmpsw
dec
lods
dec
hlt
test
cmpsl
aam
movsb
and
lea
mov
push
mov
jge
add
sbb
jno
adc
jle
push
mov
ja
or
hlt
or
sbb
add
adc
add
or
gs
jp
jecxz
clc
daa
pusha
cmc
jne
fidivs
sbb
nop
xchg
imul
push
mov
in
dec
loope
scas
lret
and
fcompl
pop
fidivl
mov
push
aad
fcmovbe
push
pop
push
dec
ror
aad
dec
inc
push
dec
push
shr
call
in
lret
jecxz
orb
clc
cmpsb
insl
and
in
pop
push
push
push
negb
xor
adc
sub
mov
stos
or
daa
daa
xchg
and
sub
shrb
mov
mov
mov
xor
xor
xchg
scas
cs
fbstp
sub
cmpsl
aam
movsb
and
or
mov
push
add
jp
add
cwtl
stc
jle
push
jno
adc
jl
push
mov
hlt
mov
jb
mov
out
xchg
push
insl
add
or
addl
pushf
in
std
adc
cli
jp
xorb
fdivp
jne
pop
jb
push
fsts
nop
test
aam
imul
out
lret
in
dec
loope
je
pop
fcomip
inc
fcompl
pop
fidivrl
inc
xlat
push
push
ficoms
pop
rclb
stc
push
int
nop
aam
push
push
call
testl
and
xchg
movsl
pop
pop
scas
and
flds
sbb
xor
stos
xchg
scas
scas
inc
adc
mov
sub
movsl
movsl
and
and
cmpsb
aas
rorb
cmp
pop
push
mov
mov
sbb
mov
adc
outsb
xchg
sub
insl
cmpsl
hlt
ljmp
add
cld
jge
cmpl
sbb
xchg
push
xchg
stc
adc
mov
jb
or
out
or
sbb
add
shrl
add
in
jg
arpl
loopne
jp
ja
jnp
cmc
jne
pop
jb
dec
xlat
adc
push
rorb
imul
add
out
jns
arpl
icebp
enter
inc
pop
filds
ret
fcompl
pop
fisubrl
cmp
mov
dec
rolb
push
dec
push
iret
call
rorl
cltd
enter
and
pop
pop
xlat
and
push
push
out
mov
cmp
push
scas
scas
dec
xchg
sub
in
stos
stos
jl
daa
daa
repz
movsl
or
aas
rcrb
cmp
add
xor
xor
xor
lods
sub
cmpsl
cmp
movsb
and
xchg
mov
mov
sahf
jp
dec
sbb
cwtl
lds
adc
dec
adc
mov
mov
or
xchg
push
push
addl
jmp
jl
bound
jp
cld
ja
outsl
cltd
cmc
jne
pop
jb
xchg
adc
sub
in
push
xchg
call
loope
mov
pusha
fcompl
pop
fimull
xlat
push
rcr
aad
push
rclb
push
dec
sarb
outsl
dec
push
in
call
gs
jecxz
test
pusha
hlt
jecxz
fisubrs
pop
pop
sbb
push
push
cmpsb
mov
xor
xchg
mov
scas
or
stos
stos
aaa
int
daa
lods
dec
movsl
movsl
and
and
inc
aas
rorb
cmp
pop
mov
xor
xor
xor
mov
sub
sub
cmpsl
cli
mov
in
lahf
jge
cld
jge
pushf
jp
jo
sbb
jge
adc
mov
push
mov
lea
mov
mov
test
add
jg
jle
std
inc
cld
cli
jp
jns
clc
xor
cmc
jne
xchg
jb
inc
adc
nop
mov
lea
insl
in
or
jmp
jmp
aam
arpl
dec
arpl
popa
pop
fcompl
pop
fiaddl
pop
xlat
push
pop
xlat
push
aad
push
rclb
rorb
add
dec
cwtl
in
dec
push
push
call
sti
gs
xchg
jecxz
pusha
or
fidivrs
ficomps
mov
dec
cmp
mov
mov
xor
xor
mov
scas
pop
das
sub
aam
stos
stos
dec
sub
daa
sti
test
movsl
jae
and
ret
aas
rolb
mov
mov
push
ss
xchg
mov
mov
mov
mov
lods
test
cmpsl
es
and
add
lahf
jmp
push
jp
mov
sbb
inc
xchg
adc
push
xchg
push
mov
jnp
mov
or
test
addl
std
push
cli
cli
jp
ja
clc
cmp
cmc
jne
jb
adc
adc
nop
lahf
lea
imul
mov
in
loope
popa
scas
pop
pop
fbld
fcompl
pop
fidivl
push
xlat
push
dec
aad
aad
push
rclb
rorb
int
int
inc
lret
dec
push
push
gs
arpl
jecxz
loope
pusha
cld
pop
outsl
fcompl
loope
cltd
xlat
push
push
adc
daa
mov
xor
lods
sub
mov
daa
daa
mov
movsl
movsl
sub
and
sarl
adc
mov
mov
mov
xor
xor
mov
mov
das
scas
jo,pn
sub
test
cmpsl
hlt
and
and
jnp
cld
jge
sbb
sbb
pop
xchg
push
xchg
xchg
adc
mov
or
or
test
lods
add
jg
jl
xor
jp
stc
ja
aas
jbe
jne
jo
adc
nop
fmuls
or
xchg
cld
add
data16
arpl
jmp
loope
sbbb
fcmovu
pop
scas
push
pop
fisubl
aad
push
jle
push
aad
rcl
push
mov
shlb
lret
int
fwait
dec
dec
push
call
shll
cltd
fbld
scas
pop
and
push
push
aad
push
ljmp
xor
stos
sub
loop
stos
stos
jp
daa
daa
out
and
inc
fcompl
aas
rclb
mov
mov
cwtl
xor
mov
xor
mov
sub
sub
cmpsb
cmpsl
push
and
xor
lahf
jmp
stc
jp
xchg
ja
cwtl
lret
xchg
xchg
push
aas
adc
xchg
into
nop
adc
push
mov
mov
mov
test
test
add
jg
cld
jl
test
jp
divl
jae
cmc
jne
bnd
add
adc
repz
imul
out
xchg
jecxz
in
pusha
loope
xchg
pop
fistps
pop
fcompl
pop
fimull
xlat
push
vandps
cmp
rclb
iret
dec
shrb
leave
int
inc
inc
dec
push
call
gs
jecxz
cmp
rcr
dec
push
pop
pop
cmc
aad
shlb
icebp
lret
scas
scas
xchg
sub
cmpsb
stos
stos
adc
mov
and
sbb
rclb
mov
mov
mov
mov
xor
stos
scas
cs
cmpsb
test
cmpsl
inc
mov
and
dec
sbb
jge
xchg
jp
ss
cwtl
jmp
xchg
push
popa
adc
jo
push
mov
mov
mov
addl
jmp
cld
jg
jns
std
push
idiv
jp
je
clc
sbb
outsl
jb
or
adc
sbb
or
test
sub
out
mov
fsubp
popa
lds
fistpll
pop
fcompl
pop
push
xlat
push
mov
dec
rclb
int
rol
dec
int
js
dec
push
inc
call
frstor
jecxz
fisubs
ljmp
pop
sbb
push
mov
jp
xor
sub
sub
les
daa
lret
lahf
movsl
movsl
and
inc
cwtl
lcall
ret
xchg
cmp
scas
mov
mov
sub
xor
push
sub
mov
movsb
and
pushf
and
xchg
pop
cld
jge
xchg
jp
sahf
adc
cwtl
pause
xchg
push
test
or
mov
orl
mov
xchg
sub
add
ret
cld
addl
mov
jl
dec
je
jp
bnd
pop
outsl
cmc
jne
insl
jb
jmp
nop
fsubrs
push
out
out
imul
push
outsw
jle
in
cld
loope
jl
pop
fists
fcompl
pop
fiaddl
rcl
push
xchg
dec
push
aad
int
push
mov
enter
inc
dec
push
inc
call
gs
jecxz
sub
pusha
pusha
in
pop
xlat
pop
pop
rcll
dec
rclb
mov
push
mov
pop
or
mov
dec
stos
std
rolb
testb
aaa
mov
pop
dec
xor
cmp
cmpsl
xchg
push
xchg
repnz
mov
es
imul
imul
inc
cmp
pop
ret
jbe
xor
cmc
fnstenv
lods
mov
out
in
push
mov
aas
sahf
sbb
add
loopne
xchg
pop
pushf
sbb
pop
xor
imull
lods
xchg
je
lods
ja
jp
je
dec
or
dec
dec
es
sbb
lds
scas
push
dec
add
pop
and
fcmovnb
cltd
cmpsl
pop
data16
lcall
mov
dec
inc
ds
std
pop
lahf
jle
cmp
pop
dec
ss
repz
push
jo
mov
lods
or
or
xor
test
inc
icebp
push
and
subl
shrb
pop
out
lahf
fwait
sbb
ss
jae
xor
mov
push
xor
jecxz
mov
enter
mov
outsl
dec
sub
dec
ret
fisubs
add
inc
and
nop
int
mov
xor
inc
xor
in
dec
lods
cmp
test
xchg
mov
mov
add
frstor
jl
mov
jns
cmp
or
adc
imul
int
daa
lock
inc
mov
fistpll
sub
sarl
and
rcrl
jmp
mov
js
jb
xchg
push
ret
insl
imul
push
mov
push
ljmp
shll
filds
loopne
scas
lcall
ds
push
cmp
out
mov
adc
or
pop
jl
xor
and
jecxz
test
ljmp
mov
inc
pop
fabs
pop
sbb
loopne
pushf
decb
lock
scas
notl
repz
inc
and
xor
xchg
inc
movsl
in
out
or
dec
stos
add
popf
cld
pop
mov
stc
push
sbb
ljmp
mov
rcll
mov
mov
mov
test
pop
jecxz
mov
add
cmp
sub
movsl
lcall
xor
jge
jo
das
mov
mov
outsl
xor
repz
mov
lds
gs
push
inc
or
std
les
mov
sbb
not
push
mov
lcall
ret
insl
imul
dec
lret
mov
fmul
xchg
xchg
pop
ljmp
sbb
cld
mov
stos
xchg
jg
push
sbb
push
arpl
lods
or
or
out
or
pusha
push
ret
adc
cmpsb
fwait
cmp
sbb
push
sbb
cmc
aam
nop
aam
inc
push
clc
int
stos
repnz
sub
arpl
mov
inc
imul
add
rcrb
sbb
jp
cmp
xor
or
push
mov
scas
cmc
in
dec
xchg
fsub
int3
xchg
mov
movsb
push
jecxz
pop
jecxz
mov
pop
fneni(8087
ds
jnp
cmp
notl
push
mov
push
adc
mov
xchg
mov
sub
ljmp
insl
out
or
cmpsl
and
loopne
lahf
popf
std
inc
and
pop
mov
push
mov
sbb
pop
aam
mov
and
fmul
lret
sub
xor
add
popa
mov
and
xchg
pop
sub
fistpll
ss
repz
lcall
xor
lret
call
test
subl
inc
fidivrs
pop
shlb
fistpll
adc
rorb
js
lods
push
rcl
movsb
pop
loopne
push
fistps
adc
enter
mov
mov
xor
mov
inc
aam
fdivrl
xor
dec
xchg
add
sbb
add
test
and
stos
mov
jmp
mov
sbbl
adc
mov
xor
mov
es
retw
insl
imul
mov
or
dec
inc
or
inc
es
pusha
inc
add
add
add
fdivs
lock
scas
push
push
lea
xchg
jae
mov
mov
dec
push
and
loope
pop
inc
mov
lcall
sub
push
jo
sbb
push
iret
xchg
jne
mov
nop
push
iret
dec
or
mov
sub
fisubs
movsl
pop
loopne
cmpsb
cs
les
jnp
call
dec
scas
js
lods
icebp
rcl
rorb
and
jmp
sub
jg
cmp
loope
push
lcall
xor
repnz
adc
adc
lahf
mov
dec
cmpsl
push
cmpsl
test
test
inc
mov
loope
mov
add
notl
push
aas
popf
std
fcom
daa
adc
ror
das
mov
sub
ljmp
test
xchg
lods
cmpl
and
cmp
out
int3
mov
sti
xchg
cmp
jnp
cmp
or
xchg
icebp
insb
das
cmpsb
pop
int3
pop
daa
icebp
out
or
out
movsl
xor
leave
mov
add
mov
fstpl
xchg
jg
push
fwait
je
das
adc
sarl
xchg
loope
xchg
lods
sub
inc
or
leave
sbb
jecxz
ljmp
mov
sbb
jae
xor
push
das
xchg
test
push
mov
dec
stos
je
stos
or
call
inc
inc
in
jecxz
not
les
jae
dec
mov
cmovle
mov
xor
push
addr16
xor
in
dec
lods
ss
jo
ljmp
stc
in
test
dec
and
jge
sbb
pop
fstps
mov
aas
xor
fdivs
pop
xchg
xor
mov
pmaxsw
adc
pop
xor
ja
dec
and
jg
popf
jecxz
mov
lcall
pushf
ss
nop
push
jp
mov
repnz
mov
dec
cmpsl
pop
data16
lret
lods
movsb
call
jg
test
inc
mov
lcall
mov
adc
rcl
xchg
cli
push
xor
nop
jb
sbb
mov
lds
jecxz
cmc
daa
rcrb
mov
test
in
sahf
fcmovnbe
lahf
jnp
mov
dec
scas
aad
scas
push
hlt
and
jmp
stos
daa
outsb
dec
sub
jmp
dec
ret
enter
ret
cmpsb
adcb
lcall
xor
pop
mov
sti
nop
mov
dec
lods
mov
sub
ljmp
in
sub
xchg
popa
dec
and
jge
movsl
and
mov
sbb
mov
sbb
rcrl
or
scas
sub
scas
sbb
and
enter
dec
inc
ds
std
ret
dec
cmp
jbe
scas
mov
daa
xor
repnz
scas
push
xchg
rep
xor
hlt
jmp
test
imul
and
in
loope
test
mov
cmp
cwtl
clc
push
std
fst
rcll
jo
xchg
jbe
cmp
sub
sub
jmp
lcall
jle
in
mov
cs
les
cli
cmc
mov
dec
scas
aad
xor
rcll
mov
enter
cmpsl
sbb
dec
ret
mov
mov
cld
pop
mov
int
mov
xor
mov
in
sti
nop
mov
dec
lods
mov
jno
fistpll
lds
mov
inc
and
jb
sub
loopne
mov
or
mov
mov
arpl
push
or
scas
mov
mov
leave
mov
inc
or
ret
jg
and
sub
lcall
ljmp
mov
je
shll
nop
push
xor
imul
push
xor
hlt
call
stos
xchg
mov
xchg
repnz
jg
loop
jle
aad
xchg
cmc
fdivl
nop
mov
dec
adc
push
jl
xor
and
jecxz
subl
out
pusha
xor
leave
ficomps
cld
mov
lods
js
ss
push
sbb
ljmp
jae
rorb
scas
test
add
shl
and
sbb
fcmovnu
cmp
sahf
jge
aam
or
push
mov
xlat
into
je,pn
mov
or
xor
int3
bound
inc
mov
aad
adc
enter
sarb
fisttpll
mov
ss
cmp
das
mov
repnz
xor
cmpsl
pop
lods
and
ljmp
popf
xchg
sbb
cwtl
clc
mov
mov
mov
lock
scas
push
xchg
sub
int
mov
test
outsb
push
or
pop
mov
dec
inc
ds
std
pop
andb
pop
dec
xor
xchg
repz
cwtl
jp
mov
je
iret
cwtl
lea
push
repz
lahf
jle
dec
lods
cli
push
mov
inc
mov
movsl
mov
adc
cmpsb
fwait
cmp
sahf
jnp
mov
mov
sub
push
mov
call
push
movsl
insb
dec
movsb
call
loopne
cmp
jp
mov
mov
fwait
xchg
pop
push
test
in
sti
nop
mov
dec
lods
xor
jno
xor
or
mov
jecxz
sub
notb
fcompl
inc
cmp
ljmp
adc
movsb
nop
pop
dec
dec
lods
or
sub
dec
mov
xchg
xchg
pop
cmc
loopne
lahf
popf
std
inc
lcall
push
mov
jne
xchg
ffreep
sarl
nop
xchg
scas
push
ljmp
dec
dec
sbb
and
lret
fimull
addl
pop
pop
cmpb
push
cli
in
mov
jne
sbb
sbb
out
dec
adc
in
mov
or
sbb
mov
dec
sub
inc
inc
cmc
add
pop
jecxz
cmp
lods
js
ss
cmp
clc
jge
xor
lock
int
hlt
aad
mov
fisubrs
movsl
insl
dec
sub
xlat
arpl
cmp
jl
and
adc
cmp
stc
aad
stc
add
sbb
mov
dec
or
sub
mov
fistpl
and
mov
mov
dec
ss
repnz
mov
cmp
repnz
scas
lea
push
stos
or
pusha
inc
or
mov
imul
and
rcrb
xchg
inc
push
push
mov
sbb
cmp
or
xchg
icebp
in
mov
out
push
sub
movsb
outsb
arpl
call
lds
pop
add
ss
xchg
repz
cltd
stc
hlt
mov
jbe
aaa
orl
iret
inc
or
lea
inc
and
bound
lods
js
ss
aaa
sbb
mov
xchg
outsb
pusha
sub
jmp
enter
scas
mov
inc
sub
dec
ret
inc
test
daa
lock
cmp
loopne
lahf
or
mov
jle
adc
cs
lods
outsl
mov
mov
dec
cmpsl
das
test
mov
popa
pop
mov
add
cmp
xorb
xor
mov
adc
js
imul
mov
xchg
xchg
mov
popf
std
inc
sbb
insl
pop
and
push
jne
mov
jbe
xor
push
add
mov
xchg
mov
mov
daa
and
dec
ret
mov
aam
imul
cwtl
pop
int
mov
repnz
cmp
jmp
and
clc
in
push
or
mov
in
dec
dec
movsb
jmp
jecxz
call
cmpsb
test
cld
cmpsb
fwait
cmp
push
jge
mov
mov
sub
lret
in
into
movsb
add
enter
test
inc
ljmp
adc
test
sbb
cmp
push
mov
fidivrl
cltd
jns
push
jle
adc
cs
stos
subl
add
inc
and
fistpll
es
inc
mov
push
mov
jecxz
xor
out
jg
dec
ss
repnz
mov
cmp
not
dec
xor
in
inc
sub
ljmp
in
dec
stos
xchg
loopne
ds
std
inc
sbb
fdivrs
mov
jne
xchg
pop
push
xchg
push
adc
mov
adc
pop
lea
ret
mov
and
popa
inc
mov
std
add
lcall
jo
xchg
clc
fdivs
ror
in
cmp
push
and
dec
sub
pop
leave
ficomps
inc
fistpl
js
push
mov
cmp
push
xor
cmp
mov
dec
stos
out
shll
stos
insl
push
es
in
movsb
mov
les
sbb
fcmovnu
cmp
popf
xor
xor
hlt
push
mov
push
cmp
repz
xor
mov
dec
cmpsl
sub
insb
xchg
xchg
inc
ss
sarb
ffreep
mov
sbb
cmp
push
mov
lahf
mov
dec
cmpsl
pop
sub
cli
fidivl
and
loopne
ds
std
and
jp
sub
loop
aam
mov
pop
sti
je
push
sti
lock
adc
mov
cwtl
jl
xor
and
lret
inc
push
adc
std
pop
and
mov
mov
ss
repz
xchg
sti
inc
xor
lock
dec
xchg
jb
mov
or
lret
xor
and
jecxz
push
push
xor
mov
ds
add
sub
fbstp
lock
movsb
add
mov
or
daa
in
dec
sub
outsb
inc
sbb
movsl
pushf
sbbl
lcall
sbb
fstl
in
sti
nop
mov
dec
lods
push
xchg
stos
iret
ljmp
jmp
and
mov
ja
test
arpl
adc
add
and
cmc
mov
jb
iret
das
mov
sub
push
mov
lds
lret
movsl
test
sub
jecxz
sbb
testl
push
imul
lock
scas
push
adc
shll
test
imul
and
jg
add
pop
rolb
clc
push
jnp
mov
adc
jo
adc
push
mov
repz
mov
mov
lret
subl
bound
add
cli
movsb
cs
les
jnp
ds
pop
xor
add
inc
movsb
add
mov
or
daa
in
enter
inc
sub
insb
loopne
cmp
fistpll
push
mov
push
xchg
fcom
push
xchg
xor
rorl
mov
lahf
mov
dec
cmpsl
sub
popl
mov
push
jge
mov
xchg
jl
fwait
pop
ljmp
cmc
push
mov
xchg
pop
xor
insl
aaa
sub
mov
lcall
es
addl
sarl
xchg
outsl
iret
das
mov
mull
xor
mov
sbb
or
mov
xchg
mov
aam
imul
add
inc
sbb
jne
stc
repz
sbb
movsl
nop
jp
dec
xchg
imul
into
enter
sbb
imul
pop
pop
push
pusha
or
popf
cld
pop
loopne
mov
cmpl
mov
push
sbb
fnstcw
cmp
mov
dec
stos
outsl
dec
xor
out
int
test
das
movsb
mov
fisubs
popf
in
mov
jmp
push
mov
inc
aam
repnz
push
repz
mov
push
rclb
push
cmp
lock
inc
mov
shrb
popa
fdivrs
std
loopne
mov
xor
cmp
add
mov
adc
filds
pop
call
jecxz
mov
dec
rclb
enter
jp
lahf
incl
mov
adc
lods
in
and
fmul
lret
sub
lods
es
call
sub
and
mov
lcall
xor
hlt
xlat
daa
adc
rcl
xchg
cmc
jno
scas
jo
mov
inc
cmpsl
push
gs
lds
loopne
sbb
pop
popf
cld
pop
pusha
sarl
cmc
push
mov
cmp
push
sarb
push
shrb
outsl
outsl
lret
cld
enter
test
inc
push
les
lahf
jmp
inc
aaa
xchg
fisttpll
mov
xor
adc
xor
out
sbb
push
call
xor
and
sub
adc
mov
sbb
inc
scas
lcall
fwait
adc
jb
xor
mov
adc
jne
dec
adc
pop
stos
lea
lret
imul
cmc
loopne
lahf
popf
std
mov
lcall
aam
mov
xchg
notb
dec
stc
arpl
push
or
adc
scas
stos
jo
pop
daa
icebp
out
mov
mov
lahf
imul
push
cli
in
mov
jne
jns
mov
movsl
nop
jp
dec
adc
lret
push
mov
ss
in
add
jecxz
faddl
cli
les
std
pop
mov
mov
sub
dec
xor
cmp
inc
popl
add
in
cmpsl
jne
inc
xchg
sbb
fcmovnu
cmp
mov
xchg
mov
push
movsb
nop
mov
leave
repz
int3
outsb
mov
xchg
xchg
mov
test
jb
sub
pusha
fnstenv
push
repnz
mov
mov
clc
shlb
adc
mov
cmpsb
in
ljmp
mov
shlb
and
loop
inc
popf
add
lcall
sbb
fildl
sti
lock
xchg
sub
iret
adc
call
xor
and
dec
sub
popf
std
pop
andl
mov
std
push
xchg
pop
ja
mov
lock
cs
in
push
repz
inc
lds
jecxz
dec
loope
out
pusha
or
popf
cld
pop
loope
pop
add
rorb
push
mov
aaa
sbb
dec
int
shlb
xor
imul
test
sub
rcrb
sbb
jp
cmp
mov
popf
jns
push
jle
adc
cs
stos
or
mov
push
pop
dec
adc
push
lds
mov
popa
dec
and
jge
and
fmul
mov
xor
mov
xchg
add
mov
lods
icebp
push
sub
lcall
daa
mov
dec
mov
sbb
and
pop
test
shll
nop
xchg
scas
fdivs
lahf
mov
dec
cmpsl
pop
data16
inc
shlb
and
adc
shrb
sbb
cltd
xchg
jns
sub
mov
dec
das
lea
mov
push
das
pop
inc
popf
jl
gs
dec
in
cmc
add
pop
jle
mov
jle
jmp
sub
push
xor
test
push
mov
dec
stos
in
dec
das
stos
insb
fsubrl
stc
pop
arpl
jae
dec
mov
jle
push
popf
xorb
pusha
hlt
repnz
mov
iret
cli
pop
in
ret
insl
imul
jmp
jno
out
es
inc
mov
shlb
jnp
cmp
notl
push
xlat
xor
pop
push
sbb
ljmp
js
imul
mov
test
lock
inc
mov
fbld
jl
mov
jge
mull
clc
sbb
or
jo,pn
mov
and
enter
in
jmp
loope
lahf
popf
std
pop
pop
loop
and
cli
in
mov
jne
xchg
jnp
cmp
jne
movsl
nop
jp
dec
xor
das
pmulhw
sbb
test
out
inc
in
add
and
es
fs
notl
cmp
decb
lock
scas
repnz
adc
jbe
enter
cmpsl
jmp
inc
popl
add
add
mov
inc
cmp
push
mov
push
popf
or
sub
icebp
into
lods
or
sub
ljmp
in
stos
mov
jecxz
ss
sarb
loope
mov
xorb
xor
push
mov
movsb
nop
pop
dec
dec
lods
or
lods
out
ljmp
and
dec
sub
imul
xchg
incl
jle
into
test
shll
nop
xor
insl
aaa
sub
mov
stos
push
int
and
add
ret
shll
fbld
std
xor
cli
in
mov
jne
xchg
jb
mov
ja
movsl
nop
jp
dec
xor
rorl
outsb
mov
gs
subl
sarb
pop
cmp
and
push
cwtl
adc
cmp
xchg
jnp
int
lock
cs
jo
stos
xchg
imul
lds
pop
jg
cmp
push
mov
mov
xor
jb,pn
xchg
jno
inc
sub
ljmp
in
jecxz
mov
popa
pop
mov
test
mov
xorb
xor
xor
xlat
cmp
or
test
jl
xor
and
sub
jecxz
es
cli
clc
mov
jne
fdivs
xor
repnz
scas
push
int
mov
lods
jmp
test
push
fldenv
inc
inc
add
jl
cmp
cwtl
clc
push
pop
cmc
pop
sbb
jns
mov
jb
rorb
jne
dec
testb
call
or
gs
mov
and
adc
push
cmp
jp
popf
lea
pop
push
shlb
repnz
cmpsb
xchg
scas
cltd
outsb
jmp
stos
imul
pop
cmp
jecxz
or
or
cmp
lahf
jmp
inc
cmp
pusha
push
adcb
push
jle
adc
outsl
mov
aad
shll
fcmovnb
xchg
xchg
pop
call
enter
pop
and
ja
aam
xchg
rcrl
cli
out
in
dec
lods
or
xchg
jb
dec
adc
pop
inc
jmp
lods
sbb
mov
andb
pushf
clc
loop
aam
mov
push
jns
mov
sbb
or
stos
out
push
enter
enter
in
push
les
adcb
lcall
ss
repz
xchg
xor
mov
dec
scas
push
int
or
xor
and
jecxz
test
pop
push
pusha
or
popf
cld
pop
sbb
mov
cmpl
mov
push
cltd
jl
sarb
in
lret
xor
push
movsl
add
dec
sub
or
movsb
add
les
int
mov
xor
clc
aad
movsb
nop
mov
shrb
scas
mov
add
xchg
xchg
mov
ret
movsl
lahf
jb
sub
stc
mov
ss
push
push
adc
iret
cwtl
cli
ret
insl
imul
mov
pop
lret
xor
in
out
mov
push
mov
lahf
imul
add
sub
loop
aam
mov
sarl
mov
adc
mov
enter
test
shll
fistps
in
mov
mov
jne
xchg
cli
push
mov
cli
int3
sub
fcmove
lods
lods
or
lock
nop
cli
push
mov
inc
mov
pop
mov
adc
cmpsb
fwait
cmp
xor
cmc
call
dec
scas
lock
mov
jmp
scas
adc
enter
test
inc
add
test
jae
dec
mov
jle
pop
pushf
pop
ljmp
mov
cltd
pop
mov
lcall
imul
add
es
inc
mov
mov
mov
cmp
push
push
sti
fcmovnb
mov
jb
iret
das
mov
adc
insl
dec
and
pop
dec
adc
pop
dec
mov
lods
mov
ss
loopne
ds
std
mov
cli
ret
mov
cld
xchg
cmp
jnp
cmp
or
lods
repnz
test
imul
sub
and
and
cli
clc
push
cwtl
fdivrl
xor
jb
xor
mov
dec
scas
push
xchg
decl
mov
inc
cmpsl
push
gs
push
lods
lea
inc
in
add
mov
inc
pop
sbb
xchg
cmc
push
mov
push
xor
jo
xchg
nop
clc
push
inc
push
clc
int
stos
insb
dec
sub
in
enter
in
movsb
mov
frstor
pop
jl
fnstcw
jp
mov
xchg
repz
cltd
xchg
xor
in
and
push
dec
dec
cmpsl
gs
ljmp
mov
push
jge
movsb
cmp
xchg
nop
insl
pop
and
push
rcrl
mov
into
cltd
cmc
push
ret
insl
imul
mov
mov
xor
arpl
and
es
sub
fs
push
mov
jne
cld
xchg
sarl
nop
dec
jae
mov
sub
iret
pxor
sub
mov
out
movsb
mov
les
sbb
ficomps
cwtl
jns
cltd
or
fbstp
hlt
outsl
mov
jb
dec
testb
call
cld
pop
gs
mov
bound
popf
sbb
pop
mov
push
sub
fbstp
push
dec
adc
add
mov
or
daa
dec
movl
jle
aas
popf
loop
mov
cmp
cmp
xor
push
jle
adc
cs
into
mov
insl
xchg
and
pop
dec
adc
push
lds
les
popa
dec
and
jge
cmp
pushf
int3
mov
xor
push
xor
push
ret
insl
imul
mov
or
nop
cli
in
movsb
mov
push
inc
or
std
mov
add
fiadds
jp
push
daa
xor
repnz
scas
push
lret
sub
xchg
outsl
ljmp
and
popa
sub
popf
std
pop
lcall
push
xchg
jg
mov
cmc
enter
jo
push
cmc
inc
and
loope
xchg
lods
sub
sub
push
lds
add
inc
pop
xor
leave
ficomps
mov
mov
mov
aaa
xchg
jl
rclb
push
mov
dec
stos
imul
cmpsb
pop
in
movsb
mov
lds
sbb
jp
cmp
mov
js
xor
adc
cs
xor
push
dec
dec
cmpsl
in
insb
in
pop
and
mov
fcmovnb
mov
lcall
ss
shll
nop
pop
dec
dec
lods
or
cs
dec
pshufw
xchg
inc
mov
loopne
adc
enter
jp
lcall
aam
mov
push
xor
dec
sbb
or
leave
or
mov
in
call
sub
add
push
and
loope
sbb
jle
and
cli
in
mov
jne
adc
push
mov
jb
movsl
nop
jp
dec
or
push
xor
shr
movsl
dec
mov
pop
out
mov
sub
sbb
and
pop
cmp
fdivrs
mov
sub
push
xor
enter
test
inc
add
mov
xchg
jne
pop
test
sbb
cmp
inc
pop
sbbb
xchg
mov
cltd
js
shll
ja
insl
aaa
sub
call
rcrl
in
test
inc
and
sarl
cmp
pop
ss
jmp
ror
das
mov
je
xor
pop
lds
jns
ret
jg
daa
test
sbb
cwtl
clc
mov
fidivs
jp
leave
daa
xor
repnz
scas
push
int3
jne
ljmp
pop
and
pop
cmp
jg
popf
lds
pop
cwtl
popa
mov
ss
repz
adc
push
mov
orl
jmp
mov
rcrb
ficomps
inc
mov
sbb
xlat
push
mov
mov
cltd
and
fisubrl
adc
sarl
movsl
in
inc
or
arpl
cmp
jp
mov
mov
mov
fwait
or
sar
nop
mov
dec
lods
imul
push
lods
mov
jmp
mov
sbb
inc
mov
sbb
aam
xchg
icebp
push
test
in
fwait
nop
mov
push
bound
mov
dec
cmpsl
pop
lds
out
ss
loopne
ds
std
mov
add
and
jmp
mov
sti
subl
cmpsl
icebp
shrl
cmp
ret
shll
fistps
in
scas
lcall
ss
repz
adc
fldcw
sbb
repnz
clc
in
push
jae
xor
pop
gs
mov
cmpsb
adcl
fiadds
cmp
xor
cmpsl
jae
xor
shll
push
jmp
enter
lods
sbb
dec
stos
or
inc
inc
adc
test
sbb
cmp
aas
popf
sbb
or
jle
adc
cs
adc
sub
or
mov
call
pop
mov
test
cmp
sbb
aam
xchg
push
pop
jnp
lds
jno
int3
xchg
mov
rcll
add
xchg
lahf
fs
sbb
cwtl
clc
mov
xchg
ds
sti
push
nop
dec
cmc
lock
repz
lahf
mov
dec
cmpsl
pop
and
test
jmp
ret
mov
pop
and
cli
in
mov
jne
xchg
jne
ds
jns
mov
lock
lods
lods
or
mov
daa
out
call
jecxz
and
movsb
fs
xor
mov
or
inc
adc
xor
mov
jle
mov
sahf
pop
pop
mov
movsl
xchg
arpl
inc
push
sbb
sysenter
xchg
sub
int3
adc
scas
stos
or
xchg
movsb
and
test
jns
popf
xchg
das
popf
jp
aad
stc
xchg
cmp
push
xor
stos
or
adc
loop
push
add
and
inc
add
sti
and
fstpl
mov
addl
sahf
jmp
std
sbb
jp
push
dec
sub
or
jne
push
mov
jb
xor
insl
int3
or
lds
aas
sbb
and
add
and
ds
std
pop
xchg
stos
xor
test
push
jne
xor
repz
mov
jo
das
mov
dec
xchg
jp
sahf
call
lds
jecxz
mov
jle
cltd
out
xor
imul
fnstcw
cwtl
notl
cmc
push
mov
jae
xor
jmp
add
mov
daa
xchg
inc
movsl
add
jecxz
mov
int3
hlt
rorb
jno
sbb
cmp
jne
xor
popa
add
lods
or
sub
lds
jecxz
mov
iret
xor
fcompl
jp
cmp
jne
xor
int
out
shlb
mov
dec
lods
or
lret
call
lds
ss
aam
fidivrs
popf
std
pop
mov
cwtl
clc
push
mov
jne
mov
mov
dec
scas
push
insl
int3
or
lret
sub
data16
cmp
and
ds
std
pop
mov
cwtl
clc
push
xchg
jae
or
jo
das
mov
dec
lods
lods
or
sub
cli
jne
cltd
jecxz
mov
jle
cmp
sbb
xchg
or
mov
jae
xor
outsb
int
mov
dec
stos
fstps
cld
js
fwait
movsl
add
jecxz
mov
jg
cmp
cmc
mov
int
stos
insb
mov
jne
xor
jo
cs
dec
lods
out
add
fnstcw
and
jecxz
mov
pop
mov
or
mov
cmp
jne
xor
repnz
mov
jo
das
mov
and
inc
and
dec
cmpsl
pop
lds
add
and
lods
in
ss
sbb
cmp
jne
push
mov
jb
xor
pop
orb
sub
data16
and
add
xor
sbb
xchg
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
out
dec
lods
lods
or
sub
lds
jecxz
iret
mov
cli
push
jle
cmp
sbb
cmp
push
mov
test
or
fs
scas
push
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
pusha
ja
fdivrl
fidivrs
sbb
cmp
lret
int
push
mov
jo
cs
dec
lods
or
sub
fcoms
mov
inc
mov
jge
pop
mov
cwtl
mov
add
xchg
repnz
mov
jo
das
mov
dec
lods
or
lret
ret
push
pop
inc
and
mov
jg
ds
std
pop
mov
call
jne
push
mov
jb
xor
insl
int3
or
lds
pop
data16
and
add
and
ds
std
pop
xchg
stos
ljmp
push
jne
xor
repz
mov
jo
das
mov
dec
xchg
mov
call
lds
jecxz
mov
jle
cltd
fisubrl
cmp
push
mov
jae
xor
jle
push
pop
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
mov
jo
cld
pop
mov
cwtl
notl
adc
repnz
mov
inc
and
mov
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
int
add
jo
das
mov
dec
lods
or
lret
call
lds
shll
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
movsl
out
jb
xor
insl
int3
or
lret
sub
data16
mov
mov
jg
ds
std
pop
mov
cwtl
clc
push
xchg
daa
leave
cmpsl
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
cwtl
lds
jecxz
mov
jle
cmp
sbb
xchg
insl
lret
test
adc
xor
outsb
int
mov
dec
stos
gs
mov
movsl
add
jecxz
mov
jg
cmp
cmc
lea
notl
adc
repnz
mov
jo
cs
dec
lods
out
sbb
cmpsl
push
lds
jecxz
mov
pop
mov
push
in
jp
cmp
jne
xor
repnz
mov
jo
das
mov
test
sub
lds
add
and
scas
icebp
into
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
sarl
popf
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
les
lods
lods
or
sub
lds
jecxz
xlat
xor
adc
sbb
cmp
push
mov
add
addr16
add
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
pusha
jbe
adc
xor
fidivrs
sbb
cmp
test
dec
movsl
out
jo
cs
dec
lods
or
sub
cmp
popf
jp
add
lcall
push
jge
pop
mov
cwtl
mov
insl
addr16
outsb
imul
push
mov
jo
das
mov
dec
lods
or
lret
ret
sbb
and
add
and
ds
std
pop
mov
dec
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lds
jmp
and
add
and
ds
std
pop
xchg
lods
xor
cmp
jne
xor
repz
mov
jo
das
mov
dec
xchg
daa
push
sub
lds
jecxz
mov
jle
cltd
insb
cmp
sbb
cmp
push
mov
jae
xor
orb
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
lock
sbb
cmp
jne
xor
inc
xchg
ret
in
dec
lods
or
sub
lds
jecxz
mov
mov
push
jge
pop
mov
cwtl
notl
push
jne
xor
int
dec
dec
movsl
iret
das
mov
dec
lods
or
lret
call
lds
cmp
fidivrs
popf
std
pop
mov
cwtl
clc
push
mov
jne
xchg
xchg
jne
in
add
insl
int3
or
lret
sub
data16
call
popa
shll
fistpll
popf
std
pop
mov
cwtl
clc
push
jnp
aam
inc
xchg
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lods
adc
mov
jle
cmp
sbb
in
ror
mov
jae
xor
outsb
int
or
dec
stos
pop
cmp
push
sub
pop
mov
adc
cmp
in
cmp
adc
repnz
mov
jo
cs
in
dec
lods
xor
jno
jns
dec
cmpsl
push
lds
jecxz
mov
pop
mov
ja
leave
cwtl
notl
push
jne
xor
repnz
mov
out
iret
das
mov
nop
sub
lds
add
shlb
xchg
fdivs
outsb
cwtl
clc
push
mov
jne
push
mov
icebp
shll
nop
xchg
scas
fidivl
movq
data16
and
add
xchg
cmp
push
iret
das
mov
cmp
jne
mov
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
int3
sub
lahf
and
jg
pop
fstps
adc
mov
fs
and
push
arpl
cmp
inc
ds
pop
mov
fwait
xchg
repz
mov
mov
mov
mov
into
mov
mov
sub
sbb
imul
call
jle
push
orl
out
cmpsb
jae
xchg
js
xor
adc
out
xor
outsb
jmp
stos
in
dec
loop
jns
pusha
inc
imul
loopne
cmp
mov
cmp
mov
xchg
jae
xchg
and
in
mov
mov
cwtl
clc
push
mov
jne
push
adc
dec
scas
push
insl
int3
or
dec
sub
data16
jbe
mov
shll
fistpll
aad
fisubl
push
jne
xor
repz
xor
jo
bound
dec
sti
inc
movsl
jg
inc
and
inc
cmpsl
push
gs
and
jecxz
pop
popa
pusha
push
jle
cmp
sbb
lcall
mov
std
xor
cltd
fwait
scas
scas
xor
sub
lods
xchg
stos
stos
and
daa
daa
mov
push
and
mov
rorb
cmp
pop
add
cmp
xorb
leave
pop
xor
mov
aad
sub
cmpsl
loopne
movsb
and
outsb
and
insl
imul
sbb
sbb
jno
adc
sbb
mov
pop
mov
push
xchg
mov
add
add
add
jg
dec
jl
or
cli
jp
inc
ja
cmp
cmc
jne
aas
jb
or
adc
sbb
xor
out
test
lods
loope
lcall
pop
into
es
fiaddl
xlat
push
rol
aad
rclb
mov
int
mov
xchg
call
gs
jecxz
or
fimuls
pop
pop
out
xchg
flds
push
push
mov
xor
iret
pushf
scas
scas
push
xchg
stos
stos
js
daa
daa
icebp
xchg
movsl
movsl
or
and
lea
rcrb
cmp
or
xor
xor
pop
scas
cs
sub
hlt
cmpsl
adc
movsb
and
out
and
popf
ljmp
stos
in
cwtl
and
push
fwait
loopne
xchg
mov
nop
adc
fisttpl
mov
or
dec
roll
mov
in
jg
dec
jl
dec
cli
jp
inc
ja
pop
ret
sarb
nop
mov
push
popa
xor
push
imul
pop
test
fcomip
fcompl
pop
fiaddl
and
push
pop
ds
aad
mov
dec
shr
mov
dec
bound
push
mov
call
or
or
and
pop
pop
scas
sbb
mov
push
push
add
mov
sti
xor
xchg
jns
scas
or
stos
stos
cmp
shld
stos
or
rolb
cmp
xor
mov
mov
jle
xor
pop
scas
cs
sub
shll
cmpsl
cmp
in
and
dec
out
jge
gs
pop
loop
cwtl
aad
xchg
push
push
fstl
xchg
stos
pop
nop
adc
mov
push
mov
rorl
mov
push
xchg
push
add
jecxz
addl
out
std
jo
cli
jp
ret
arpl
jne
mov
adc
or
mov
jmp
jae
arpl
in
sub
popa
test
daa
fcompl
pop
and
push
test
push
aad
mov
dec
rorb
mov
dec
push
mov
call
sub
or
rorb
pop
mov
dec
adcb
pushl
mov
scas
scas
cs
sub
test
stos
stos
aas
xchg
daa
daa
xlat
adc
inc
enter
bound
cmp
scas
add
xor
pop
scas
jo,pn
sub
repnz
clc
jo
and
in
and
popa
call
jp
jo
sbb
sbbl
cli
fcoms
mov
mov
into
xchg
push
dec
add
adc
addl
mov
cli
jp
fbstp
cmc
jne
mov
adc
adc
mov
jmp
movsl
stos
arpl
cmp
cmpsb
pop
fisttps
fcompl
pop
fisubl
pop
xlat
push
mov
cmp
push
lods
mov
int
cmp
dec
push
xor
call
jmp
mov
fiadds
push
test
roll
push
push
push
cld
mov
cmp
imull
sub
adc
daa
sti
or
and
or
shrb
cmp
clc
cmpl
xor
xor
xchg
hlt
sub
push
cmpsl
cld
int
and
imul
or
lahf
incl
jecxz
sbb
ficoms
xchg
sbb
push
push
mov
push
or
cmp
test
dec
jg
lds
arpl
jp
loopne
clc
sub
mov
adc
push
xor
imul
push
data16
loope
shrl
pop
fisttps
fcompl
pop
fcmovu
mov
push
aad
cmp
push
inc
mov
int
pop
mov
push
xor
call
add
mov
clc
pop
jno
pop
pop
jmp
adcb
std
mov
je
xor
or
scas
scas
and
stos
stos
adc
push
movsl
movsl
sub
sar
mov
mov
xchg
pop
stc
mov
cltd
ja
mov
hlt
scas
cs
jb
lods
and
test
cmpsl
aaa
lret
lods
dec
and
lahf
arpl
jge
loopne
sbb
fistl
xchg
mov
push
push
mov
rorl
mov
int3
xchg
pop
dec
add
iret
movl
std
pop
inc
cli
jp
pop
ja
dec
fcomi
jne
cmp
pop
mov
nop
fdivs
imul
out
jnp
arpl
repz
loope
insb
and
fcompl
pop
popf
xlat
push
jo
push
aad
cwtl
rclb
mov
rclb
mov
push
cs
gs
sub
jecxz
cmpsl
pusha
pusha
or
fiadds
pop
pop
mov
std
push
push
lods
jnp
mov
clc
xor
mov
repz
scas
jno
stos
and
mov
inc
rolb
mov
mov
aam
xor
xor
xor
mov
lock
cmpsl
out
movsb
and
dec
and
jno
cld
jge
loope
sbb
cwtl
fstp
xchg
push
jne
adc
inc
aad
mov
push
mov
rorb
mov
dec
xchg
mov
add
add
add
jg
inc
jl
or
cli
jp
pop
ja
sbb
cmc
jne
cmp
or
lea
pop
mov
imul
out
lea
arpl
and
es
fistps
mov
pop
fimull
xlat
push
sahf
sbb
aad
cmp
push
mov
dec
shrb
ror
dec
mov
int3
call
gs
jecxz
fs
pusha
pusha
faddp
push
aas
pop
pop
int
inc
sbb
mov
adc
scas
scas
dec
adc
loop
stos
stos
jp
daa
daa
repz
and
movsb
aas
sar
mov
mov
push
pop
mov
xchg
xchg
xor
mov
sub
or
cmpsl
adc
movsb
and
out
mov
jg
cld
jge
jg
sbb
jp
push
movsl
notl
xchg
sbb
repnz
mov
in
or
sbb
add
mov
addl
enter
and
cli
jp
pop
ja
xor
divl
sub
ret
rorb
imul
les
in
loope
je
pop
fisttps
pop
ds
fcmovu
mov
push
aad
mov
push
gs
rcr
ror
dec
js
dec
push
int
call
add
jecxz
pop
inc
pusha
pusha
hlt
ret
insl
inc
pop
pop
out
pusha
sbb
cli
cltd
mov
je
xor
or
adc
pushf
or
daa
xchg
stos
movsl
movsl
or
and
movsl
aas
rcrb
cmp
xchg
xor
xor
xchg
scas
cs
sub
or
cmpsl
xor
out
mov
lahf
add
jge
cmpb
std
sbb
aas
clc
adc
push
repz
mov
jno
or
out
or
push
jmp
addl
loop
jl
pop
jp
fnstenv
dec
push
cmc
jne
je
adc
adc
push
int
imul
jmp
addl
popa
xchg
inc
pop
fisttps
mov
pop
mov
push
aad
mov
push
xor
ljmp
dec
push
lret
test
gs
jecxz
js
pusha
pusha
adc
mov
jg
push
push
cwtl
xchg
mov
das
xchg
xor
test
sub
mov
mov
daa
lret
pop
movsl
movsl
and
and
and
rclb
mov
mov
les
xor
xor
adc
mov
xchg
scas
cs
lods
inc
mov
cmpsl
xchg
leave
bound
jge
jge
sbb
cwtl
int
xchg
push
gs
adc
pop
lock
mov
outsb
mov
jmp
mov
jmp
add
mul
addl
or
jl
sbbb
cli
fidivl
jae
cmc
jne
jne
adc
repz
stc
into
or
dec
push
test
in
inc
pop
fbstp
mov
pop
fisubl
aaa
push
aad
mov
push
lea
dec
rolb
mov
dec
lahf
dec
dec
push
lret
call
gs
jecxz
inc
inc
pusha
pusha
mov
mov
and
push
push
sahf
pop
mov
aaa
xchg
xor
mov
scas
scas
sub
stos
stos
pop
mov
daa
xlat
sub
inc
lret
shlb
cmp
push
pushf
mov
mov
xchg
mov
fstl
mov
xchg
scas
cs
movntps
or
cmpsl
testb
mov
addl
jge
fidivrl
jb
sbb
xorl
cld
lock
adc
push
mov
jmp
or
imul
pop
sbb
adc
addl
mov
pop
cli
jp
xlat
ja
sub
jne
shlb
sbb
adc
dec
jmp
imul
push
data16
arpl
sub
ds
filds
fcompl
pop
fidivl
aaa
xlat
push
lods
mov
aad
xor
push
pop
mov
rcl
sub
dec
push
dec
call
xlat
inc
jecxz
dec
shll
ds
jg
pop
pop
stc
cmp
fnstenv
push
push
in
xor
mov
xchg
xor
decl
scas
scas
push
lea
out
or
daa
filds
and
and
rorb
mov
mov
xchg
xchg
xor
xor
xrstor
js
sub
mov
cmpsl
and
movsb
and
andl
xor
lahf
ljmp
fstpt
jns,pt
cwtl
mov
xchg
push
je
xchg
sub
nop
adc
push
mov
push
mov
out
pop
inc
gs
mov
pusha
jg
fnstsw
pop
cli
jp
fdivs
push
push
cmc
jne
hlt
jb
dec
jno
nop
loop
lea
pop
insb
or
lret
dec
inc
out
lds
loope
loope
js
pop
fists
cmp
pop
cmp
push
pop
mov
aad
xor
push
outsl
mov
shr
cs
int3
dec
push
dec
call
gs
inc
jecxz
mov
pusha
pusha
and
mov
cmp
adc
xor
notl
scas
scas
adc
stos
stos
add
movsl
movsl
cmp
and
jle
shrb
mov
mov
mov
xor
xor
xor
lcall
sub
test
cmpsl
inc
add
aad
lahf
decl
cld
jge
clc
jp
inc
push
sbb
push
jno
xchg
enter
bound
fucomi
mov
or
xchg
pusha
addl
or
std
fdivr
jp
push
ja
jno
cmc
jne
push
jb
add
adc
repz
jmp
popf
ret
aaa
aas
loope
mov
fcompl
pop
ficompl
xor
push
aad
xor
push
cmpsb
scas
dec
rcrb
sub
dec
mov
es
gs
ret
fwait
aas
pusha
pusha
mov
sub
pop
pop
movsl
mov
push
push
mov
xor
xor
mov
sub
mov
daa
roll
inc
loop
aas
sarb
mov
mov
enter
inc
adc
mov
or
sub
xchg
cmpsl
clc
add
jmp
jl
jge
pop
jp
jb
sbb
test
adc
js
push
mov
imul
add
pop
jl
add
xchg
popa
addl
test
jl
sbb
jp
push
ja
paddq
jne
push
jb
and
nop
cltd
in
lea
adc
imul
mov
in
inc
loope
mov
pop
fildll
cmp
pop
mov
xlat
push
mov
push
aad
scas
rclb
sub
shrl
push
movsb
call
gs
cmp
pusha
fidivrs
pop
pop
int
inc
xor
ret
mov
sub
scas
scas
dec
sub
movb
daa
stc
andl
rolb
mov
mov
into
xchg
xor
xor
xor
nop
mov
lods
or
cmpsl
sbb
and
mov
ja
sbb
xchg
push
movsl
out
adc
xor
push
mov
in
mov
loopne
test
jg
pop
jl
cmp
cli
jp
push
ja
das
shl
jne
dec
jb
inc
int3
adc
xor
in
jmp
ret
in
mov
pop
fisttps
pop
ss
fidivrl
mov
push
push
xor
scas
rclb
sub
shl
stos
int
js
dec
push
movsl
call
gs
jecxz
jl
pusha
pusha
mov
pop
pop
jmp
xor
fdivl
xor
or
sub
xchg
daa
popl
and
jge
sar
mov
mov
mov
xor
xor
mov
lods
and
cmpsl
xor
jmp
mov
mov
js
sbb
jae
push
inc
lock
ss
mov
imul
pop
push
loope
test
pop
addl
loopne
jl
pop
push
cli
jp
shll
imul
adc
adc
or
bound
cld
loopne
data16
arpl
jmp
pop
pop
mov
pop
xchg
xor
sub
push
aad
lods
rclb
sub
or
and
push
mov
gs
pusha
pusha
ret
fidivrs
xor
fldcw
mov
push
cs
pop
lods
xor
cltd
sub
sub
and
stos
and
jmp
inc
sar
aas
rorb
cmp
pop
xchg
mov
mov
mov
mov
mov
lods
xor
cmpsl
loopne
movsb
and
cld
and
imul
jge
jne
sbb
sbb
jno
adc
subb
stc
out
or
or
xchg
test
faddl
jg
xlat
jl
or
cli
jp
shlb
sbb
int
adc
dec
adc
and
imul
out
lea
in
fsub
popa
pushf
cmp
push
mov
pop
shlb
fimull
xlat
push
ret
das
push
aad
lods
rclb
sub
das
test
dec
cmpsl
cmpsb
dec
push
and
call
mov
jecxz
sub
ficomps
pop
pop
shll
fldcw
push
out
mov
aas
lods
xor
mov
scas
scas
push
test
sub
add
daa
daa
stc
add
inc
ljmp
cmp
out
xchg
mov
mov
mov
jns
xor
mov
sub
cld
movsb
and
jp
mov
fwait
jne
jge
bnd
lods
jo
cwtl
es
xchg
push
lahf
imul
sbb
nop
adc
pushw
mov
popa
or
ss
add
scas
flds
jg
aam
std
cmp
jp
iret
ja
sub
lret
inc
dec
adc
push
inc
or
inc
push
data16
arpl
push
pop
loope
int
pop
filds
fcompl
pop
fcmovbe
das
xlat
push
push
lods
push
aad
sub
push
gs
sar
and
dec
push
and
call
add
jecxz
pop
cltd
pusha
pusha
hlt
ss
insl
mov
pop
out
pusha
scas
push
push
cli
sub
mov
stos
xor
or
movsl
sub
mov
mov
movsl
movsl
push
jnp
inc
cmpsb
clc
aas
rcrb
mov
mov
mov
mov
jg
xor
mov
and
rcrl
sbb
lcall
pop
mov
or
push
mov
les
xor
mov
add
mov
add
mov
sbb
cmp
inc
mov
shlb
or
sub
sar
mov
push
lock
scas
push
cwtl
loope
imul
pop
mov
adc
push
sbb
add
xchg
xor
pop
mov
or
push
and
repz
sbb
mov
dec
sbb
sbb
ret
cmp
repz
sbb
jbe
and
push
xchg
adc
sarl
jmp
iret
jns
popa
dec
xor
jno
push
mov
inc
sub
testl
jg
pop
push
jle
out
movsl
in
cmp
cmp
popa
shr
jae
dec
adc
push
outsb
cmp
mov
cmpsb
add
mov
and
orl
call
js
sbb
outsl
mov
push
jge
scas
icebp
shrl
push
cmp
sub
orl
enter
in
cmp
subb
xor
pop
mov
test
repz
std
les
ror
fnstcw
cwtl
clc
lahf
or
dec
es
and
scas
push
push
add
loopne
jmp
sbb
test
mov
jae
xor
jg
xchg
outsb
dec
sub
or
push
lahf
imul
push
lcall
dec
adc
fnstcw
lcall
aaa
sbb
push
popf
cld
pop
arpl
dec
sub
pop
imul
loop
or
int
jne
and
lock
jns
jp
mov
push
repz
dec
cld
pop
mov
iret
test
or
addr16
mov
roll
xor
mov
lds
xor
andnps
push
jge
lods
push
shll
test
push
das
sub
enter
cmpsl
jo
das
mov
sahf
add
mov
std
cmpsl
pop
scas
pop
js
mov
pop
mov
inc
dec
xor
into
das
nop
or
jne
or
mov
arpl
xchg
cld
ret
jns
pop
lcall
fcoms
icebp
mov
popf
std
pop
test
out
insl
xchg
sbb
bound
shr
fisubs
jg
sub
jg
cmp
jbe
xor
nop
je
cld
pop
arpl
mov
out
cwtl
notl
in
cmpsb
push
lock
scas
js
and
pop
mov
movsl
outsb
push
mov
jb
popa
shr
js
dec
adc
adc
call
fildll
nop
dec
and
fs
dec
lods
mov
cltd
jns
call
jl
aad
jns
dec
xchg
cli
jno
xchg
pop
dec
xchg
mov
dec
inc
mov
dec
inc
imul
mov
std
shll
sub
sbb
and
push
mov
and
ja
dec
adc
sbb
jb
inc
or
push
jne
insl
gs
mov
push
or
xchg
pusha
jecxz
mov
and
push
mov
adc
xor
test
dec
repz
push
mov
xchg
repz
fwait
enter
mov
dec
xchg
ret
mov
call
jne
lcall
push
xor
in
dec
push
or
push
loopne
inc
cmpsb
andl
lock
scas
jns
mov
mov
dec
stos
je
cmpl
cmp
fnstenv
popa
shrb
push
dec
xchg
btc
adc
scas
mov
jmp
cmp
lods
ss
add
fcomps
sti
pop
cmp
inc
mov
rclb
mov
out
lea
int3
jne
xor
mov
add
mov
lret
mov
stc
mov
lods
pop
pop
ss
js
jg
adc
xor
or
call
shll
scas
push
pop
sbbb
pop
mov
aas
adc
repnz
or
jp
add
scas
push
es
mov
bound
dec
xchg
pop
mov
call
pop
and
jecxz
push
mov
jns
jle
addr16
push
or
or
notl
in
or
jae
xor
loopne
mov
neg
test
icebp
fwait
jp
push
std
pop
mov
dec
repz
scas
jae
sub
dec
cmpsl
mov
dec
mov
iret
cs
mov
fwait
cmpsl
lods
push
sbb
sbb
mov
pop
mov
jmp
jne
xor
cmp
das
mov
loopne
mov
pop
ds
cmpsl
pop
lods
fidivrl
aaa
cld
repnz
shlb
and
or
xor
cmp
sub
mov
xchg
xchg
mov
mov
test
mov
xor
jg
test
xor
mov
jg
sub
jno
sub
movsl
dec
arpl
lret
movsl
ds
or
inc
sbb
jp
and
jecxz
fcoml
fsubp
xlat
rclb
outsb
cwtl
notl
dec
dec
cmpsb
imul
xchg
lock
scas
aad
mov
mov
fsub
inc
movsl
jmp
mov
mov
xor
xor
rorl
out
in
dec
or
mov
scas
xchg
xlat
stos
and
frstor
mov
fs
popf
lds
sbb
mov
push
mov
lock
mov
outsl
push
scas
push
mov
mov
push
mov
mov
jle
in
dec
lods
or
test
mov
jg
rcrl
shlb
and
or
jp
icebp
in
lods
stos
jmp
enter
adc
addb
out
subl
pop
mov
cld
test
mov
cmp
push
outsb
xor
mov
jg
imul
jcxz
test
out
dec
adc
mov
call
js
fwait
jecxz
ss
xchg
in
sar
pop
popa
iret
xor
or
cmpsl
in
lret
shlb
push
lds
sub
shlb
outsb
mov
stc
pop
jb
popa
shl
je
insl
adc
hlt
lret
cmp
or
dec
sub
xor
mov
jo
cs
mov
subl
sbb
adc
cmp
inc
mov
push
xor
inc
adc
push
das
xchg
cmp
aam
xchg
cmp
das
mov
loopne
mov
lcall
sub
and
xchg
push
dec
xchg
mov
dec
dec
or
xchg
mov
add
inc
sbb
arpl
cmpsl
pop
data16
pop
mov
xchg
and
test
insl
xor
sbb
jg
push
aad
out
ret
sub
xchg
loop
andl
push
pop
cmp
fdivrl
adc
fdivl
mov
outsb
dec
nop
or
pop
imul
xor
scas
aad
mov
sbb
imul
fnstsw
cli
xchg
mov
mov
or
loope
mov
cwtl
notl
fmull
insl
inc
sub
inc
jo
cs
rcrl
mov
lds
mov
xlat
cmp
rorb
or
fnstcw
cwtl
sub
xchg
cmp
add
das
mov
out
mov
cltd
arpl
lcall
push
sbb
popf
std
ret
das
sub
push
clc
mov
test
mov
and
sahf
arpl
adc
cmp
cmpsl
pop
data16
mov
jns
popa
pop
xchg
out
cwtl
xchg
jb
pop
add
scas
push
std
test
push
sbb
or
aas
push
fdivrs
gs
mov
cwtl
rcrb
fsubp
dec
push
adc
filds
adc
stos
mov
popa
inc
push
addr16
mov
test
cmp
jnp
andb
pop
adc
lock
cmp
dec
sub
push
mov
and
mov
push
mov
jecxz
imul
xor
sbb
ds
push
fcmovbe
sbb
dec
scas
xchg
outsl
mov
push
jge
stos
or
leave
push
cmp
lods
mov
repnz
mov
mov
push
aas
pop
lods
or
sbb
cmp
pop
pop
lods
adc
pop
aad
adc
xor
popf
std
ret
xor
cmp
enter
adc
dec
scas
push
xchg
cld
ret
loope
jmp
lcall
rcll
or
jp
jg
lods
mov
sub
xchg
fisubs
and
or
fstps
gs
mov
pusha
iretw
mov
je
cld
pop
popa
lret
or
notl
in
movsb
insl
sub
push
sub
push
or
daa
out
mov
mov
mov
sbb
out
mov
sub
sbb
cmp
mov
jmp
jne
xor
lods
push
mov
and
jle
in
dec
lods
xor
subl
popf
jge
cmp
lds
cwtl
xchg
repz
mov
push
xor
xchg
mov
cmp
add
sub
inc
jo
das
mov
sub
lds
push
mov
and
xchg
push
into
nop
repnz
mov
lods
or
xchg
movb
scas
push
adc
pop
mov
psubw
sbb
in
hlt
fcmovbe
jp
aam
add
lea
add
sub
aad
in
pop
out
inc
rorb
sarl
pop
mov
jns
mov
mov
out
rcl
xchg
dec
adc
cwtl
notl
in
or
lret
fsub
test
fs
int
repz
daa
out
fwait
xchg
hlt
cltd
jecxz
jmp
jg
cmp
lret
push
adc
scas
cmpsl
insb
mov
and
in
movsb
push
mov
pop
incb
xor
dec
cmpsl
scas
pop
push
pop
xlat
sbb
dec
sbb
icebp
into
lcall
dec
mov
mov
aam
xchg
mov
pop
das
mov
sbbl
and
push
mov
fidivrs
popf
std
inc
jb
xor
cmp
das
and
jecxz
and
xor
and
fildl
stc
frstor
cld
cmp
hlt
fldenv
je
push
adc
outsl
iret
outsb
or
inc
xor
repz
cltd
inc
es
loop
dec
xchg
inc
and
ffreep
cmp
cmp
push
mov
jae
mov
gs
rclb
pusha
dec
lret
mov
jae
xor
lds
test
and
mov
dec
stos
jb
enter
sbb
test
inc
ljmp
cmp
push
jp
cmp
sub
or
fildl
dec
jo
cs
cmpl
subb
mov
cld
and
xor
mov
xlat
push
sub
lret
fnstcw
cwtl
mov
popl
adc
and
fbld
loopne
cmp
fstpt
stos
xchg
pop
ss
adc
jg
push
mov
mov
dec
lods
mov
lret
test
mov
addb
int3
or
xchg
jnp
cmp
jbe
mov
mov
rcrl
insb
dec
lock
sub
mov
jne
sbb
bound
addr16
xchg
out
dec
xchg
pop
mov
call
fwait
jecxz
push
mov
xchg
cmp
lret
in
int
push
fsubp
scas
cmpsb
insl
int
xor
loopne
or
les
add
add
aad
movsl
insl
push
std
adc
mov
push
jg
cmp
aam
mov
cwtl
notl
pop
and
outsb
lret
bound
iret
cs
test
pop
and
sub
mov
js
sbb
push
rcrb
js
fcompl
inc
sub
dec
in
gs
xor
mov
mov
inc
in
dec
lods
or
sbb
fdivrs
lds
aaa
mov
jno
cwtl
lea
xor
lock
mov
adc
add
mov
insl
int3
or
xchg
jns
popf
cltd
cmpsl
pop
lea
and
xchg
repz
aam
int3
cmp
in
xchg
push
push
lret
sub
in
out
dec
adc
and
std
sti
cmpsl
push
mov
cwtl
adc
jle
loop
xor
lock
scas
sub
lret
addl
rol
mov
stos
out
mov
inc
movsl
jmp
sbb
shl
scas
push
popf
cld
pop
mov
scas
sub
aam
pop
sub
in
bound
xchg
shlb
dec
cmpsl
stos
pushf
jl
mov
xchg
xchg
lock
inc
int3
outsb
cwtl
cmp
mov
mov
push
mov
mov
jecxz
ds
or
add
ret
cmpsl
pop
sub
fidivrs
es
into
lods
in
rcrb
jp
mov
dec
or
dec
sub
push
mov
pop
add
ret
int3
or
jge
cmp
and
add
nop
jg
add
xor
or
dec
sub
addr16
in
xchg
jo
adc
and
add
std
mull
lcall
iret
cmp
testl
lods
call
in
es
loopne
and
outsb
int
rcr
mov
pop
fdivrl
xor
shl
jne
insl
lret
nop
outsl
scas
jp
cmp
or
lret
xor
mov
lds
iret
cs
cmpsl
cmp
mov
cwtl
fcoml
lds
popf
xchg
fdivrs
adc
paddsb
push
sbb
test
ljmp
iret
das
mov
and
mov
jl
fidivl
ja
mov
fidivrs
popf
std
mov
jno
clc
mov
push
cmpsl
jb
xor
pop
loope
imul
inc
cmp
sti
pop
or
mov
mov
jg
xor
push
das
shr
cmp
sub
inc
les
fs
mov
mov
push
mov
sbb
mov
nop
hlt
xlat
rclb
fimuls
push
scas
mov
data16
addl
test
pop
fs
cmp
fwait
loopne
lcall
in
repz
insb
xor
insl
xor
insb
push
jne
xor
xchg
push
inc
and
imul
das
cmp
jnp
popf
lds
aaa
adc
cmp
mov
xchg
jno
scas
fnstcw
cwtl
cmp
or
cmp
jecxz
inc
subl
lcall
jecxz
mov
mov
clc
jno
mov
out
int3
leave
push
mov
jne
test
mov
addb
loope
mov
stc
mov
in
hlt
push
aad
je
mov
popf
std
pop
add
leave
insb
int3
stos
aad
add
rclb
cmpsl
push
fcomps
gs
lcall
into
xor
pusha
leave
dec
push
jb
scas
stos
xchg
cmc
push
mov
popa
mov
call
pop
mov
sahf
clc
pop
enter
ss
push
jecxz
push
mov
push
popf
cld
pop
mov
iret
mov
mov
and
call
adc
cs
cmp
loop
mov
dec
cmpsl
lods
mov
je
sbb
inc
scas
push
outsl
push
scas
aam
pop
mov
iret
dec
sub
push
mov
push
imul
iret
das
mov
pushf
addr16
mov
xchg
loop
stos
adc
mov
cmp
or
mov
mov
mov
mov
jne
orl
add
sub
scas
push
xchg
cld
out
cmpb
negl
and
fnstcw
ds
std
pop
add
clc
push
cld
test
push
adc
xchg
fisubs
test
sub
std
pop
sbb
or
adc
mov
pop
pusha
lret
call
cmc
push
mov
bound
and
dec
scas
aam
and
add
cld
aas
enter
jge
jns
jecxz
push
cwtl
scas
push
popf
cld
pop
mov
dec
or
push
pop
mov
iret
cs
cmp
subl
inc
mov
and
xor
push
cwtl
mov
in
aaa
lods
jb
leave
fnstcw
cwtl
cmp
or
xchg
cmp
adc
movsb
addl
cs
sti
pop
sbb
xchg
jbe
push
cld
and
out
dec
scas
lock
mov
cmpsl
push
lret
and
jb
xor
mov
sub
mov
jle
add
outsl
into
push
adc
adc
or
test
jmp
repz
pop
sbb
arpl
add
or
fnstenv
xchg
fdivrl
and
push
add
fnstcw
pop
loope
mov
call
cmc
push
mov
dec
test
scas
push
inc
mov
stos
jo
sbb
movsl
imul
shlb
jns
xchg
hlt
mov
dec
or
mov
cs
repnz
mov
sub
add
dec
lods
xor
add
cmpsl
sub
lcall
inc
xchg
ja
mov
lock
out
dec
notl
push
cmp
enter
das
mov
sbb
aas
cmp
cmpsl
pop
sub
lcall
mov
je
std
and
ror
fnstcw
cwtl
clc
cmp
jmp
xor
pushf
decl
nop
jge
ret
pop
mov
mov
shll
filds
mov
adc
clc
push
jl
sub
xchg
fs
dec
xchg
pop
and
sub
cwtl
jbe
and
push
push
xchg
outsl
pop
jle
arpl
or
int3
xor
pop
imul
insl
in
push
jmp
dec
scas
push
popa
mov
stos
jo
mov
movsl
imul
mov
popa
shlb
lock
jo
dec
notl
pop
es
inc
sub
inc
loopne
fsubl
add
imul
scas
cmp
ds
and
xor
mov
rorl
or
jp
cmp
aam
xchg
mov
iret
das
mov
add
scas
xchg
fstp
sbb
pusha
test
jne
jg
lea
scas
jne
jp
mov
stos
or
enter
adc
add
ret
scas
push
adc
sarb
neg
cmp
jp
mov
xchg
mov
popf
std
pop
orl
fs
jmp
xorb
enter
pop
and
lret
call
je
and
pop
xchg
adc
pop
jle
and
xchg
notb
fsincos
iret
mov
mov
inc
mov
lret
data16
scas
icebp
lds
stos
in
sarb
xchg
popa
rolb
jae
jge
adc
dec
scas
push
mov
sub
outsb
inc
sub
jae
push
push
mov
lret
popf
cld
fldl
lds
cwtl
js
push
xor
lock
xchg
push
sarl
cmp
or
push
push
add
test
dec
lods
or
ds
cli
xchg
pop
jecxz
mov
xor
dec
stos
cmp
sub
addr16
andl
popf
cwtl
cmpsl
pop
data16
cmp
hlt
xchg
and
mov
or
sub
scas
push
sbb
out
imul
ret
inc
aas
add
lods
or
frstor
push
jbe
and
push
sbb
outsb
push
mov
xchg
insb
dec
test
mov
data16
or
loop
scas
icebp
popa
and
in
pop
sahf
loope
inc
movsl
xchg
fdivs
rolb
pop
mov
dec
notl
js
mov
repnz
mov
roll
dec
in
dec
lods
outsb
mov
jle
imul
jbe
mov
lods
icebp
ror
jne
cwtl
pop
test
push
push
mov
das
mov
std
ret
and
mov
stc
mov
inc
xchg
hlt
add
adc
sub
or
sub
cwtl
clc
flds
dec
stos
or
jb
xor
and
mov
stos
idivl
in
repnz
rcll
or
jp
fwait
or
or
andb
in
out
dec
das
pop
and
jp
cmp
inc
cmpsl
push
gs
lcall
into
mov
and
in
lret
sti
inc
or
dec
movsb
push
loopne
push
incb
out
movsl
mov
daa
mov
js
test
fidivrs
int3
jo
lods
notl
clc
sub
push
repnz
mov
and
fs
in
dec
lods
out
pop
sahf
jns
sbb
lds
cwtl
push
icebp
aaa
xchg
adc
ss
jae
fildll
cmp
or
in
push
mov
push
and
add
or
sbb
aas
cmp
cmpsl
pop
dec
pop
notb
cli
fadds
inc
adc
rorl
jp
mov
cmpsb
pop
imul
push
add
inc
and
cmp
lods
jns
cmp
cmpsl
pop
data16
clc
mov
mov
popf
std
pop
sahf
mov
dec
stos
dec
clc
push
cltd
test
inc
jmp
repz
xchg
sbb
gs
mov
sbb
fcompl
jl
and
jecxz
cmp
adc
shrl
push
jp
inc
test
int3
scas
and
inc
mov
stos
in
mov
inc
movsl
mov
xor
orl
insl
xchg
nop
outsl
sbb
cmp
cmpsb
mov
and
jecxz
repnz
mov
pop
xchg
loope
xchg
or
sub
sbb
push
lds
popf
jge
aad
cmc
jo
mov
repnz
xor
mov
push
mov
pop
outsb
dec
stos
repnz
mov
push
or
add
lds
sbbl
adc
jae
xor
sbb
jb
xor
push
jne
push
dec
mov
xor
out
cmpb
sub
pop
inc
adc
negl
xor
out
fbld
repnz
xchg
mov
lret
lods
aad
enter
enter
ret
movsb
or
pop
and
mov
push
sub
add
mov
jb
dec
xor
iret
mov
or
push
cli
lret
xchg
xor
lds
arpl
mov
dec
stos
outsb
cmp
fwait
movsl
or
xor
je
popa
rolb
lods
lock
cld
pop
mov
dec
notl
stc
sub
loop
mov
iret
jb,pn
test
imul
insl
cmp
jns
lds
aaa
clc
pop
push
xchg
xchg
outsl
mov
push
jge
lods
ja
enter
fldt
in
xchg
mov
das
mov
sahf
arpl
mov
cltd
pop
mov
sahf
inc
mov
xor
jp
mov
push
repnz
jne
test
stos
es
scas
push
xor
shll
jge
jmp
sbb
cmp
add
xchg
push
mov
or
out
push
lcall
push
xchg
mov
push
fldenv
mull
jecxz
push
mov
fiadds
sbb
jge
mov
mov
push
mov
bound
and
push
outsb
int
lock
daa
mov
jge
pop
push
std
pop
mov
dec
cmc
pop
xor
jno
sbb
cmp
lock
and
xor
mov
rcrb
mov
dec
lods
out
mov
dec
cmpsl
lret
jne
xor
inc
mov
outsl
push
xchg
or
pop
sub
scas
test
push
pop
and
gs
mov
push
pop
fs
aas
add
pop
mov
xchg
fcompl
lds
shlb
adc
mov
mov
dec
scas
test
iret
jne
orl
ljmp
xor
sarl
neg
mov
and
push
aam
adc
pop
ds
std
pop
lahf
mov
dec
outsb
or
mov
repz
xchg
xorb
enter
inc
and
sub
jp
pop
xor
jl
add
push
cmp
jne
cld
pop
pushf
push
xor
or
notl
dec
cs
sub
out
pusha
inc
cmp
inc
cmp
cmp
jbe
std
ja
add
adcb
rorl
fnstcw
clc
or
movsb
xchg
repnz
mov
cmpsl
push
push
insb
pop
add
cmpsl
sbb
inc
jecxz
mov
shrb
jne
fcompl
fimull
mov
aad
imul
cmpsb
iret
das
mov
fnstsw
loopne
call
jnp
cmp
jbe
iret
das
ds
std
mov
insl
dec
clc
mov
dec
das
aam
mov
rolb
inc
inc
sahf
int3
or
sub
sahf
dec
cmpsl
pop
data16
push
inc
mov
push
into
scas
je
pop
sbb
imul
pop
imul
in
xchg
out
dec
sub
inc
mov
jl
fadds
nop
jno
mov
jb
cld
pop
pushf
int3
mov
or
notl
in
mov
ret
loopne
test
ret
int
insl
lcall
jns
push
push
adc
orb
dec
mov
out
ljmp
aam
repz
or
in
dec
lods
insb
mov
jle
pop
lds
adc
jne
rcrb
pop
xchg
outsl
into
dec
mov
out
cmpsl
adc
ror
mov
add
pop
imul
mov
jmp
cmc
mov
jne
lcall
mov
je
std
cmp
mov
cmp
cmpsb
ljmp
shl
loop
pop
int3
or
stos
loope
inc
std
jns
mov
and
jae
mov
jg
pop
je
pop
das
mov
das
sbb
mov
in
push
jne
adc
adc
adc
add
ret
jg
cmp
stc
push
push
gs
clc
icebp
push
cwtl
andps
jle
lahf
push
mov
sbb
jp
scas
or
jne
sub
inc
and
jle
dec
stos
imul
faddl
jecxz
adcl
cmp
int3
adc
cmp
or
jne
xor
in
pop
mov
cmp
lods
in
mov
dec
cmpsl
out
jp
xlat
sbb
push
shrb
rcr
pop
mov
ljmp
imul
into
mov
sub
lds
push
sbb
and
push
mov
or
cwtl
clc
cmp
int3
sub
jmp
xor
pushf
popa
fidivrs
stc
fidivrs
adc
hlt
fcoms
outsl
push
fistps
pop
adc
jp
sbb
imul
lret
fs
insl
leave
repz
xchg
subb
gs
dec
scas
pop
mov
call
jbe
and
push
sbb
aad
jle
lahf
dec
xor
jno
jns
jp
sub
mov
bound
and
das
sahf
jecxz
daa
sbb
jmp
stos
imul
jns
inc
movsl
add
add
add
lea
mov
xor
xchg
inc
and
jo
cs
daa
xchg
inc
imul
ljmp
and
lcall
pop
mov
or
jp
cmp
sub
xor
push
imul
pop
mov
add
mov
clc
fstl
ja
jg
repz
push
adc
push
jp
out
push
dec
lea
enter
pop
ret
scas
push
scas
bound
jg
mov
data16
sti
clc
xor
and
lahf
adc
sub
iret
mov
sbb
scas
inc
jmp
repz
adc
and
dec
fisubs
sbb
sub
pop
jecxz
shll
ficomps
dec
xor
jnp
mov
in
cmc
push
mov
dec
test
or
outsb
int
out
movsl
mov
daa
jmp
cltd
jecxz
test
push
mov
adc
ror
sub
cmp
dec
and
xchg
repnz
mov
and
jg
in
dec
lods
in
pop
add
mov
dec
cmpsl
call
jecxz
mov
pop
mov
repnz
jp
cmp
les
xor
aam
out
roll
pop
aas
add
mov
jl
pop
sbb
ja
push
mov
pop
jg
xchg
push
dec
xchg
or
int3
lods
xchg
in
imul
add
dec
shrl
imul
lcall
shll
and
outsb
dec
sub
mov
push
cwtl
imul
push
xchg
addl
scas
pop
movsl
test
mov
cli
pop
push
fwait
xchg
inc
mov
xchg
xchg
hlt
push
xor
int3
scas
sub
clc
out
movsb
in
leave
sub
repz
mov
test
and
loopne
mov
movsl
push
push
jns
mov
popa
rolb
hlt
push
or
sub
cmp
lea
lods
aam
jne
mov
lds
push
popa
inc
imul
imul
testb
jbe
jecxz
mov
int
rclb
mov
dec
notl
push
push
es
cmpsl
and
and
and
imul
mov
jp
cmp
jns
add
in
cmpsb
push
dec
pop
mov
stc
dec
or
gs
push
mov
push
add
and
les
das
cld
les
sub
pop
mov
and
clc
cmp
popf
std
pop
popf
mov
push
and
dec
daa
push
xchg
subb
popf
loopne
dec
scas
pop
and
push
sbb
jbe
aaa
jecxz
jb
imul
push
fisubs
sbb
jnp
sub
movsb
push
loopne
mov
imul
daa
popw
aaa
cwtl
add
jecxz
add
fidivrs
into
sub
cmp
mov
mov
lods
mov
cmpsl
xchg
fbld
dec
lods
push
jg
pop
cmp
cmpsl
gs
jp
xor
psubusb
jne
fcompl
fmuls
jb
rorl
enter
gs
inc
pop
std
inc
imul
mov
pop
mov
inc
ja
push
pushf
shlb
cmp
jb
jp
insl
dec
leave
mov
mov
shl
lds
lret
loope
mov
dec
cmpsl
pop
data16
fidivrl
pop
je
mov
hlt
std
pop
sbb
push
adc
dec
bound
inc
mov
or
test
mov
cmp
jecxz
mov
jle
sbb
rorb
pop
into
leave
or
dec
scas
mov
leave
ret
lock
scas
in
les
stos
call
fadds
movsl
jecxz
xor
mov
jg
cmp
xor
fnstcw
imulb
test
mov
mov
rorl
aas
test
lahf
lcall
mov
mov
ss
aad
lods
repnz
lods
jo
scas
jno
addr16
xor
push
es
sbb
subl
sbb
and
push
xchg
jp
xor
jb
std
mov
mov
mov
imul
and
lret
nop
dec
add
mov
dec
fstpl
sbb
test
mov
and
pushf
xchg
jo
repnz
out
scas
lea
out
in
out
mov
jo
lea
add
inc
or
pop
cmp
movsb
pop
xor
pop
push
cwtl
pusha
lahf
push
cs
repz
xor
int3
mov
in
into
lret
push
xchg
out
test
sub
addr16
scas
in
pop
es
loop
dec
stos
call
sbb
jecxz
add
neg
icebp
xchg
adc
jns
jo
dec
cs
mov
and
in
repnz
mov
pop
xchg
loope
dec
lods
push
add
jle
push
lds
xor
push
cwtl
mov
push
aaa
scas
mov
dec
dec
movsl
mov
or
push
mov
orb
add
mov
pop
mov
inc
xchg
pop
push
pushf
adc
xor
not
ss
push
jp
mov
adc
shlb
or
adc
add
test
lret
cld
ret
and
fdivrs
cmpsl
pop
data16
pop
cmp
je
fistps
jmp
push
adc
dec
daa
pop
mov
jo
fisubs
push
fstps
movsb
aam
js
mov
jle
sbb
mov
insb
push
mov
cmp
stos
or
enter
loopne
mov
jmp
mov
daa
out
aaa
fdivrl
pop
jecxz
sbbl
repnz
push
mov
cmp
mov
leave
cmpsl
test
xchg
repnz
mov
sub
sbb
and
sti
les
not
sbb
loopne
cmc
pop
xor
push
jge
adc
or
enter
rorl
das
mov
add
inc
mov
fstpt
mov
cli
push
mov
and
cmc
icebp
mov
mov
in
lods
adc
lret
jmp
les
out
mov
jg
mov
daa
jle
mov
and
ss
outsl
push
fistps
lock
sbb
leave
test
jne
adc
roll
cmp
push
inc
cmp
notl
gs
xor
cli
sarl
popf
push
mov
fstps
cmc
push
mov
inc
scas
mov
inc
mov
jmp
stos
imul
jecxz
adcl
hlt
insl
xor
fnstcw
ja
adc
dec
mov
repnz
mov
and
add
mov
test
fcompl
fnstcw
mov
mov
xor
adc
int
cmp
or
roll
enter
das
mov
and
ds
cli
pop
cmp
cmc
push
shrl
jb
jp
insl
int3
dec
push
mov
jne
push
enter
scas
push
dec
loope
mov
dec
cmpsl
pop
data16
jns
fcoms
je
push
adc
outsl
xor
test
dec
sub
push
ret
movsb
mov
sub
push
gs
aas
sbb
pop
push
adc
jno
mov
sbb
stos
out
in
lods
test
cmc
push
mov
leave
cmpsl
and
inc
push
lcall
sub
inc
pop
cltd
jle
enter
cmp
hlt
fwait
xor
push
mov
fidivrs
int
fnstcw
ja
push
imul
repnz
mov
cmpsb
push
jg
in
dec
lods
ljmp
fnstsw
sbb
fnstenv
scas
jb
das
fnstcw
cwtl
stos
insl
sub
xor
shll
inc
loope
add
cmp
cmpsl
pop
inc
sbb
ja
push
popa
shlb
mov
jb
jp
mov
stos
mov
jne
test
movsl
insb
loopne
and
loop
insl
int3
or
leave
jnp
popf
sahf
cmpl
in
hlt
fnstenv
adc
xor
xor
mov
jne
adc
stos
movsl
add
and
loope
add
lods
or
gs
cltd
xchg
je
mov
jne
cmp
sbb
mov
in
inc
notl
out
or
enter
loop
add
jle
dec
stos
imul
cli
repz
jecxz
adc
cmp
mov
sub
push
jp
cmp
out
lods
aam
jb
mov
sub
lods
ljmp
fiadds
lds
xor
ud0
xor
outsb
mov
lea
pop
sub
jmp
push
es
mov
jle
in
dec
lods
or
sbb
aas
call
pop
je
sbb
mov
mov
ds
std
cmp
push
xor
outsl
cwtl
clc
ss
dec
stos
sub
dec
inc
or
xor
and
sarl
negl
pop
clc
cmp
add
outsl
dec
testl
scas
adc
dec
jne
adc
stos
or
movsl
add
mov
test
mov
lahf
gs
fwait
cli
mov
mov
icebp
push
xor
mov
inc
mov
bound
xchg
outsb
int
jmp
mov
sbb
push
cli
xchg
je
adc
decb
or
int
fnstcw
ja
mov
and
jecxz
repnz
mov
pop
push
jle
cmp
add
cmp
cli
push
lds
xor
push
inc
mov
xlat
cmp
pop
sub
dec
movzbl
push
and
leave
inc
or
mov
pushf
bound
sbb
mov
xchg
cli
jbe
cli
pop
mov
inc
adc
cs
popf
std
cmp
imul
out
push
ss
sub
in
adc
jecxz
lock
scas
push
dec
cld
pop
mov
daa
notl
sbb
fadds
add
fcomi
xor
popf
std
pop
sbb
dec
out
or
push
push
push
enter
lds
dec
les
fs
cmp
jmp
inc
mov
movsl
pusha
xor
pusha
mov
push
mov
mov
push
enter
mov
jae
xor
inc
mov
insb
inc
cmp
daa
addr16
jecxz
add
adc
cmp
clc
push
dec
cld
pop
mov
scas
cmpsl
insb
dec
adc
sub
imul
in
and
lcall
lret
sbb
lds
sbb
mov
jl
mov
pop
mov
jmp
mov
jne
xor
push
xchg
mov
jle
mov
dec
cmpsl
pop
lds
mov
shlb
xchg
ds
std
mov
cmp
inc
es
push
int3
loop
inc
sbb
fidivrl
faddl
and
mov
and
cmp
xchg
push
dec
sub
dec
mov
imul
push
adc
sub
call
lods
or
aas
sbb
movsl
cmp
pusha
mov
popf
cld
pop
fwait
push
int3
mov
cwtl
notl
dec
inc
mov
shlb
jno
aas
or
outsb
int
insb
pop
mov
daa
addr16
sbb
pop
cmp
inc
add
psllw
cmp
mov
mov
lods
notl
jne
push
xchg
xchg
inc
in
dec
lods
imul
faddl
lds
mov
pop
cmp
push
jge
adc
cwtl
mov
mov
xchg
cmp
iret
das
mov
or
sub
cmpsl
pop
cmp
movsb
mov
jg
sub
jp
stos
push
enter
pop
jns
adc
jge
mov
cs
mov
cld
pop
mov
xor
xor
psrld
sbb
xchg
cs
inc
test
mov
bound
jg
test
loop
sahf
popf
push
cmpsb
sbb
pop
push
cwtl
out
fwait
jl
jg
mov
xlat
add
pop
jle
pop
mov
mov
xchg
xchg
cmc
push
mov
mov
scas
scas
pusha
pushf
sub
fcompl
stos
stos
insb
les
daa
jmp
mov
popa
sarb
mov
jle
aaa
or
je
xor
movsb
add
sarl
inc
mov
sbb
cmp
popf
jns
aaa
sar
cmovle
shll
scas
cmp
loope
or
mov
repz
mov
stc
cmp
xor
shlb
dec
cmp
imul
sub
in
inc
imul
addb
cld
fdivrl
cli
fstps
sbb
sub
prefetchwt1
or
into
test
imul
gs
or
lret
ret
mov
dec
cmp
mov
sbbl
in
idivb
adc
outsl
dec
xor
stos
dec
addr16
insb
imul
out
es
fwait
pop
mov
mov
ja
aaa
mov
cmc
jp
xchg
push
xor
icebp
cltd
nop
jo
cld
pop
mov
add
add
mov
ret
dec
pop
pop
and
and
mov
jle
cmp
call
xor
xchg
jno
mov
jge
cmp
out
xchg
test
imul
adc
loop
mov
jle
add
icebp
out
pop
outsb
pop
pushf
jg
xlat
xor
divb
push
mov
shrb
xchg
shll
sub
ret
mov
je
test
sub
add
lds
xchg
mov
cmp
push
mov
jnp
aam
div
sbb
add
ljmp
adc
popa
mov
pusha
and
add
mov
cmp
popf
jg
fdivs
sbb
jno
xor
xchg
bswap
lret
jbe
inc
pop
imul
loop
or
mov
inc
ds
loope
out
movsl
xchg
arpl
push
shrl
pop
ss
into
repz
in
cmp
into
nop
mov
xor
xchg
lods
xchg
aam
jbe
pusha
push
sbb
add
inc
es
cmpsl
jae
jl
lock
mov
aam
and
inc
mov
mov
test
ljmp
dec
adc
and
movsb
sahf
pushf
popa
sarb
mov
sub
aad
mov
popf
std
mov
mov
mov
push
mov
mov
sbb
add
cld
shlb
dec
cmp
add
cmp
xchg
jns
mov
outsl
jno
scas
repnz
dec
mov
cmp
xchg
rcll
or
loopne
mov
jge
cmp
cwtl
rcrl
adc
xor
mov
je
push
pop
mov
xor
add
out
stos
or
inc
mov
pushf
fstpt
daa
adc
cld
movsb
xchg
push
mov
mov
outsl
mov
in
ljmp
jmp
fcomps
gs
stos
push
sbb
mov
jnp
cmp
loope
and
mov
jmp
mov
lods
stos
jo
leave
or
test
xor
mov
les
cli
fsubrs
imul
hlt
popa
shlb
dec
cmp
imul
sub
in
inc
imul
in
aas
addl
cmp
adc
not
mov
inc
cmp
sub
in
scas
cmp
lods
aam
in
mov
pusha
and
adc
sbb
fnstcw
gs
and
loop
push
mov
not
iret
mov
in
ficoms
mov
sti
pop
add
les
outsb
int
ds
add
sbb
lahf
loop
inc
sbb
mov
psubq
cmp
cmc
push
mov
ret
lods
icebp
adc
jns
mov
mov
cs
push
sub
inc
push
out
dec
enter
push
pop
fs
aad
movsb
and
pop
mov
mov
mov
aam
jbe
jno
lahf
inc
in
es
ss
iret
mov
imul
cmp
hlt
sbb
sbb
icebp
adc
repnz
test
jge
and
std
pop
push
mov
mov
je
jg
xlat
jl
outsl
lcall
dec
xchg
jne
xor
mov
cs
in
out
sbb
pop
xor
ljmp
out
pushf
aaa
jnp
aad
sub
addr16
rcll
mov
xchg
bound
push
cmc
push
mov
jb
xor
arpl
pusha
inc
cmp
ret
pushf
xchg
push
jl
shll
adc
nop
or
xor
jns
aaa
add
insb
xchg
movsb
cli
inc
daa
and
mov
cmpsl
decb
cmp
xchg
jae
jbe
leave
and
pushf
pop
mov
loop
pop
jmp
les
push
push
mov
jle
adc
push
mov
stos
xchg
and
cltd
sbb
outsl
scas
cmc
out
dec
xor
jmp
xor
lods
mov
gs
add
pop
inc
mov
mov
push
cmp
xor
dec
mov
pop
adc
jmp
call
imul
xor
pop
push
pushf
pop
jb
aam
fptan
push
xor
mov
call
int3
scas
adc
ret
rol
movsl
dec
inc
inc
jl
aas
or
pop
sub
sarl
xchg
sbb
xor
jns
rcll
or
lods
push
push
jp
cmp
insb
lret
push
mov
xchg
repnz
mov
inc
stos
hlt
push
mov
push
xlat
popf
add
fcomps
xchg
pop
mov
stc
jno
mov
push
aaa
pop
mov
mov
sub
dec
lods
or
repnz
mov
mov
adc
shll
mov
xchg
jae
xor
outsl
dec
mov
in
xor
outsl
into
inc
xor
xchg
lret
fs
dec
pushf
jge
lahf
sub
mov
aaa
ss
push
filds
repnz
sub
scas
stos
pop
mov
test
jne
rcll
rolb
mov
cwtl
js
mov
cmp
ja
repnz
adc
cmpsl
cmp
rorl
repz
or
les
jle
lahf
outsl
dec
aas
cmp
pop
sub
mov
jnp
mov
sub
xor
or
dec
sub
in
sub
pusha
arpl
or
jle
add
lahf
sbb
das
mov
ja
sbb
cmc
pop
pop
into
scas
outsl
rorl
mov
jo
dec
sub
push
inc
add
adc
pop
inc
pusha
and
jl
pop
sbbl
fiadds
mov
adc
xchg
imul
mov
lea
xor
lock
cmp
mov
jge
fisubs
loope
mov
lahf
jnp
xor
mov
shrb
icebp
mov
imul
and
out
sarb
and
pop
mov
sbb
push
mov
adc
iret
paddsw
or
or
mov
jmp
das
and
arpl
out
int
jg
mov
daa
adc
andb
push
mov
xor
out
lea
lock
ljmp
xchg
movsb
daa
in
lds
mov
sub
mov
cld
loope
inc
jp
mov
stos
sub
addr16
ds
shll
lret
out
movsl
and
jmp
jecxz
push
sbb
push
sbb
les
adc
adc
shll
out
ljmp
push
mov
mov
add
cmp
loope
sbb
sbb
xor
mov
repz
rep
jb
xor
lock
imul
jo
push
out
sub
jmp
fiadds
pushf
rorb
xor
cli
int
fimuls
push
push
lods
loopne
lret
mov
stos
in
out
es
cmpsl
or
lds
sbb
cmp
mov
xor
mov
lock
repnz
scas
mov
ljmp
aam
push
cmp
iret
cs
in
dec
lods
in
xor
dec
cmpsl
xchg
and
jecxz
mov
pusha
mov
mov
cwtl
rcll
jo
jne
xor
cmpsl
or
daa
mov
dec
lods
or
sbb
mov
lcall
flds
and
jb
push
mov
mov
or
xchg
movsl
push
inc
and
out
mov
xchg
jl
mov
and
push
ss
aam
ds
std
pop
xchg
repnz
lret
lods
dec
imul
call
pusha
ret
pushf
loope
or
sub
cld
lds
jecxz
cmp
divl
mov
or
call
push
or
shlb
jno
and
add
mov
daa
icebp
mov
jecxz
jb
js
ss
push
xor
mov
jp
cmp
xor
imul
jo
cs
cmp
loope
mov
dec
cmpsl
jne
jp
mov
inc
mov
jge
out
jp
mov
sbb
mov
mov
sbb
and
sarl
adc
sbb
jp
rclb
mov
mov
cmp
das
or
mull
arpl
and
xchg
mov
fistps
mov
cld
pop
xor
xchg
jbe
xor
mov
xchg
nop
popa
in
nop
repnz
leave
in
push
jne
lcall
and
inc
mov
lods
lea
dec
or
jns
mov
jb
fistl
lock
mov
outsb
ds
xchg
in
sub
insl
lret
pushl
es
push
outsb
int
lock
stos
stos
sbb
daa
fwait
cltd
movsl
movsl
adc
and
xchg
aas
rolb
cmp
nop
ljmp
addl
cs
add
lods
sub
sti
cmpsl
push
jns
and
mulb
mov
scas
icebp
cld
jge
outsl
jp
jp
cmp
pop
adc
nop
adc
push
mov
fisttpll
mov
pop
add
test
adc
jg
sarb
into
cli
jp
mov
jne
cmc
jne
inc
jb
xor
adc
inc
mov
push
lretw
in
push
loope
mov
in
pop
jge
pop
fidivl
int3
xlat
push
dec
sub
rclb
movsb
dec
sarb
pop
dec
push
popf
call
gs
jecxz
pop
adc
push
adc
lret
scas
inc
sub
add
mov
cmp
xor
xchg
and
sub
push
stos
stos
dec
sbb
daa
lds
and
adc
shlb
cmp
imul
fildl
scas
outsb
subl
sub
cmpsl
idiv
movsb
and
ja
mov
imul
sbb
cwtl
cmc
imul
ficoml
adc
pop
lds
add
dec
cmpsl
pop
ds
std
pop
jecxz
mov
jg
push
popf
std
xor
sbb
cmc
push
mov
jb
xor
insl
int3
sub
or
insl
int3
or
cmpsb
push
les
jecxz
mov
pop
add
fdivrl
lcall
ss
cmp
xor
lock
repz
insl
adc
jle
cmp
andl
jns
aaa
sbb
push
gs
sbb
aam
pusha
clc
iret
xor
pop
lea
jns
fistps
cmpb
mov
push
mov
pop
cmp
out
dec
lods
push
jae
dec
stos
je
scas
xchg
xchg
inc
movsl
push
in
pop
mov
loop
lahf
fs
pop
mov
cwtl
notl
hlt
cmp
pop
xchg
repnz
mov
sbb
lods
mov
sub
cmpsl
lods
sub
in
inc
mov
pop
mov
jmp
jp
cmp
aas
aam
xchg
sub
add
jo
das
mov
repnz
adc
mov
sbb
mov
and
cmp
ds
std
inc
sbb
fsts
push
jne
or
mov
movl
icebp
mov
nop
sub
mov
sti
pop
in
add
rorl
dec
fistps
jle
mov
jge
jne
xchg
sub
out
test
out
or
pop
push
pushf
pop
pop
popf
jg
aam
ja
mov
xor
jb
push
xor
ljmp
repz
adc
fs
and
enter
jl
aas
daa
pop
sbb
jecxz
hlt
push
xor
push
dec
clc
or
sbb
cmp
test
push
xor
push
inc
cmpsb
add
pop
mov
dec
cmpsl
inc
mov
jae
xor
jp
rclb
js
mov
lock
mov
cmp
jle
mov
daa
test
dec
in
dec
lods
or
test
pop
aad
pop
xlat
cwtl
inc
mov
rclb
lea
mov
jne
push
enter
inc
sub
arpl
sbb
mov
inc
pushf
je
cmp
mov
aad
adc
push
push
jb
xor
lock
clc
push
in
jns
xor
daa
mov
xor
cmp
and
fisttpll
aam
sbb
pop
mov
in
aam
or
fldcw
imul
xchg
and
dec
cmpsl
mov
xchg
sbbl
sti
xor
jge
aaa
popa
add
jecxz
xchg
loope
fyl2x
xchg
scas
stc
dec
adc
outsb
push
cmpsl
mov
cmpsb
mov
in
and
loop
sahf
mov
jge
cmp
mov
dec
cmpsl
sub
and
push
stc
pop
in
push
popa
inc
into
scas
push
in
xor
repnz
stos
dec
pop
pop
mov
cmp
ret
dec
jbe
iret
das
mov
xchg
mov
cmp
jns
jle
or
and
enter
imul
mov
int
ret
push
imul
sbb
inc
cmpsb
or
mov
sbb
arpl
sbb
xor
jecxz
bnd
mov
cmc
out
push
jle
rclb
int
adc
test
lea
pop
andl
or
sub
out
push
mov
xor
shll
adc
lret
lea
push
or
aaa
adc
pop
cmp
jns
mov
lods
es
mov
popa
shlb
mov
mov
mov
negl
pop
testl
push
mov
dec
lods
dec
imul
cmc
out
cmpsb
jae
sbb
cmp
outsl
mov
jge
scas
leave
out
into
lods
jno
dec
jp
mov
mov
loope
xlat
sbb
fcomps
adc
repnz
cmc
jo
xor
lea
stos
push
leave
outsl
dec
sub
xchg
push
out
or
cmp
loop
cmp
pusha
mov
mov
pop
xor
cmp
xor
mov
outsb
dec
int3
aad
ljmp
lods
inc
mov
lret
inc
xchg
pop
and
cmpsb
js
ret
cli
and
jecxz
mov
sub
xor
dec
mov
lock
sub
jae
xor
mov
loope
dec
stos
lock
mov
mov
test
inc
andl
add
and
lea
out
imul
in
jne
xor
cmp
pavgb
iret
cs
add
pop
and
loope
lds
sub
divl
xchg
jae
dec
stos
cmc
outsb
scas
sub
push
mov
sub
jecxz
mov
jg
out
jmp
cmpsl
pop
lods
js
push
sbb
in
ds
std
ret
add
or
push
jne
xor
adc
test
ficoms
pusha
test
psubw
and
je
xchg
jl
stos
cwtl
xor
js
out
repnz
xchg
sub
mov
bound
nop
leave
cmp
xchg
sub
pop
je
sbb
clc
push
push
ret
mov
outsl
in
adc
shll
mov
scas
les
sub
andl
add
inc
pop
or
out
movsl
xchg
arpl
inc
push
xor
jne
push
mov
add
adc
or
sub
or
sub
cs
add
jns
popf
xchg
cs
fnstcw
inc
jne
push
mov
repz
adc
out
lods
or
inc
and
lret
gs
cmp
push
pusha
inc
cmp
clc
mull
cltd
fcmovnbe
xor
mov
sbb
dec
fnstcw
cwtl
clc
ret
mov
je
jmp
inc
inc
pop
pushaw
xchg
out
cmp
incb
mov
jl
xchg
jle
mov
sub
je
lret
int3
nop
shr
cwtl
dec
scas
leave
or
pop
add
mov
dec
cmp
mov
std
cwtl
pop
mov
xchg
fcoms
mov
mov
or
push
mov
inc
ja
scas
repnz
mov
lds
push
and
sub
std
mov
mov
adc
popa
shr
and
fs
add
inc
mov
jns
or
cmpsl
movsb
outsb
dec
ret
lret
push
in
xor
pushf
pop
mov
dec
cmpsl
push
inc
jmp
lret
addr16
scas
fwait
movsbl
or
lret
leave
or
mov
mov
test
ja
mov
adc
lcall
cmp
mov
lcall
rcll
imull
xor
outsl
mov
nop
sbb
sbb
mov
subl
and
jle
sbbl
push
adc
rcr
xchg
xchg
add
add
test
push
ljmp
in
movsl
mov
inc
and
arpl
dec
cmp
and
add
aam
stc
hlt
aam
fwait
push
outsl
xor
lods
jno
mov
or
out
or
xchg
loop
call
jle
mov
xchg
push
sbb
cmp
xchg
out
mov
sub
into
notl
sub
ss
repnz
mov
outsl
or
pop
cmp
cmp
push
sarl
icebp
mov
push
mov
js
xor
or
push
leave
stos
dec
int3
push
mov
loope
in
xchg
pop
es
gs
mov
mov
pop
je
mov
shlb
dec
cmp
ror
sub
into
call
or
inc
or
leave
sarl
fisubs
std
jns
data16
jecxz
xchg
adc
out
mov
or
xchg
stos
mov
addr16
or
ret
cmpsl
inc
add
out
dec
cld
ret
xchg
sub
out
push
mov
xor
mov
jae
iret
lea
xor
insb
lret
repz
daa
in
sub
jae
xor
loop
and
inc
mov
fstpl
xor
je
push
adc
xchg
nop
sbb
jns
aaa
add
or
dec
inc
sub
bound
fbld
sahf
jle
pop
cmp
mov
dec
cmpsl
jae
jnp
lock
pextrw
xor
dec
xchg
stos
imul
cmpsb
xor
scas
and
or
in
iret
das
mov
jle
xlat
jg
jns
popf
mov
lcall
repnz
push
mov
imul
in
xor
push
xor
mov
dec
sub
push
jne
xor
mov
test
and
jns
sahf
xchg
jl
mov
fcmovnu
inc
mov
push
fisubrs
nop
shr
sbb
imul
mov
les
ret
mov
and
and
adc
push
cs
or
sub
imul
movsl
dec
shlb
sbb
lds
mov
jns
push
je
adc
xchg
adc
out
cltd
nop
sub
int3
adc
sti
fnstenv
xchg
aam
fcomip
mov
jle
mov
js
lahf
xchg
pop
mov
xor
ret
cmp
xchg
ss
mov
out
outsl
jmp
push
es
lods
mov
gs
dec
lods
or
leave
pop
mov
pop
push
push
sbb
inc
ja
aaa
mov
repnz
adc
mov
int
ret
or
ret
les
roll
lahf
cmpb
dec
cmpsl
pop
data16
jecxz
bnd
mov
cmc
out
add
or
or
out
bt
adc
mov
pop
mov
cmp
push
aaa
stc
hlt
repnz
push
push
mov
ja
push
lods
sarl
add
in
or
push
stos
and
inc
daa
mov
enter
sbb
mov
mov
xchg
scas
lea
dec
mov
cs
gs
inc
xor
int
push
push
inc
mov
lret
out
cmpsb
jae
sbb
cmp
repz
js
in
int
lock
in
dec
lods
cmpsb
jmp
push
les
adc
into
lea
add
pop
and
dec
sti
jbe
mov
push
mov
je
push
xor
fidivrs
popf
std
fistpl
jns
cmp
in
xchg
jne
xchg
pop
mov
rorl
push
xchg
icebp
out
int
fwait
mov
data16
jecxz
bnd
mov
cmc
out
add
aad
scas
lea
insb
int3
stos
or
add
add
les
push
les
sbb
sbb
sqrtps
cs
xor
push
aad
stos
dec
notl
int3
fs
ljmp
xchg
outsb
int
sbb
add
xchg
mov
push
jnp
je
xlat
mov
adc
aam
in
stos
insl
ljmp
push
addr16
mov
and
pop
fcompl
jp
aad
stc
ja
inc
mov
jl
xchg
lea
sub
in
dec
inc
xchg
gs
loop
data16
cmp
fistpll
cmp
mov
xchg
push
sbb
ss
cwtl
lock
cmp
test
test
movsb
or
inc
and
jecxz
sbb
loope
mov
pop
cmp
adc
mov
cmp
out
rorl
mov
ret
and
add
cmpsl
push
gs
and
movups
push
cs
mov
in
dec
dec
adc
iret
scas
cmpsb
and
mov
insl
sub
fbld
sbb
push
mov
je
push
fidivl
xchg
mov
sub
lock
lods
xchg
add
test
sbb
cmc
out
cmpsb
jae
cli
notb
jns
icebp
mov
pextrw
xor
push
lret
dec
das
inc
xchg
es
movsl
stos
pop
jmp
lods
or
leave
cli
mov
pop
pop
push
sbb
jo
jae
in
adc
ror
xchg
repz
inc
or
jae
sub
out
int
and
push
mov
cld
mov
push
cmpsb
je
mov
adc
je
insb
lods
ror
sub
in
or
daa
stos
pop
insb
pop
pop
mov
or
sub
cld
adc
mov
xchg
cltd
in
lock
lods
mov
in
add
les
gs
ret
outsb
int
sbb
and
jge
push
cmpsb
hlt
push
stc
adc
icebp
jnp
unpckhps
or
xor
outsb
imul
in
and
or
mov
lds
push
mov
imul
cmc
out
cmpsb
jae
cli
adc
cmp
arpl
adc
mov
push
sub
or
sub
gs
ljmp
mov
lods
or
leave
cld
mov
fistpll
rcrl
jae
xor
lea
sub
push
call
or
in
and
ret
cmp
loope
fldenv
sbb
inc
mov
mov
mov
dec
int3
nop
shr
sbb
xor
dec
in
xchg
bound
clc
push
stos
pop
add
pushf
sarb
xchg
mov
pop
push
mov
adc
push
cs
dec
rclb
in
mov
les
inc
and
add
cmp
pop
mov
aaa
jns
jge
cmp
sahf
cmc
pop
jg
cmp
xchg
or
iret
test
sub
fstl
orl
fwait
out
mov
cltd
jns
aaa
cld
fnstcw
mov
xor
outsl
sbb
js
int
cmc
jmp
or
adc
loop
push
add
test
dec
fldl
pusha
inc
cmp
popa
pop
cmp
adc
push
stc
jae
mov
outsl
dec
adc
push
push
leave
stos
push
mov
mov
push
mov
mov
jge
mov
stos
jns
sahf
cltd
jns
inc
sbb
mov
mov
push
icebp
adc
or
in
add
jo
mov
pop
mov
cmp
cmp
mov
jne
mov
mov
iret
scas
sub
add
loop
mov
sub
add
sti
fcompl
aas
mov
pop
adc
js
xchg
jae
mov
xor
xlat
mov
repnz
adc
call
inc
mov
iret
cs
aas
add
pop
mov
dec
cmpsl
cs
idivb
cltd
inc
mov
jmp
shr
mov
or
mov
dec
sub
dec
inc
imul
ret
cmp
icebp
jns
add
push
mov
sbb
jle
mov
mov
adc
mov
mov
das
or
lods
mov
jge
mov
addl
cmp
xchg
add
pop
fisubrs
nop
shr
cwtl
dec
scas
leave
or
mov
andb
data16
sbb
pop
pop
sbb
adc
repnz
cltd
jno
xor
icebp
dec
cs
sbb
add
lods
les
push
cmpsb
mov
pushf
ret
pusha
mov
sbb
adc
aaa
pop
je
mov
movmskps
push
xor
ss
lret
or
bound
ffreep
mov
fbld
push
incl
mov
notb
push
pop
cmp
jge
fcoml
push
into
add
push
push
mov
inc
stos
and
inc
mov
dec
dec
mov
loop
inc
lret
dec
cmpsb
in
into
cmp
mov
xor
in
lret
adc
sbb
mov
icebp
gs
out
mov
pop
les
fwait
loopne
sbb
pushf
jbe
mov
xchg
jae
xchg
je
mov
cwtl
adc
mov
adcl
in
and
mov
mov
sarl
cmp
xor
jae
xor
mov
mov
push
dec
xchg
adc
test
scas
fwait
insl
daa
sub
fisubl
stos
fcompl
xor
xchg
mov
cltd
xchg
rorl
icebp
jne
mov
push
and
in
ret
shlb
lods
js
add
cmc
aaa
adcb
aaa
jns
rcll
aam
xchg
js
xor
stos
jmp
mov
push
jno
dec
and
imul
xchg
jle
mov
sub
shlb
je
cwtl
xchg
jae
mov
mov
rcpps
nop
lea
sub
in
enter
or
add
push
pop
les
fwait
loope
cmp
or
sti
test
mov
mov
xchg
jno
stos
pushf
mov
dec
mov
ljmp
in
xchg
and
movsl
mov
cld
mov
sbb
pop
cmp
pop
xor
pop
mov
adc
add
mov
daa
cmpsb
dec
or
add
add
cmp
xchg
arpl
push
sbb
aad
into
pop
mov
lock
jmp
push
movsb
test
mov
pusha
inc
in
in
dec
lods
fsubl
cltd
cmpsl
pop
sbb
xchg
cmp
inc
mov
outsl
push
hlt
add
int
cmpb
std
cli
enter
or
dec
loop
dec
jbe
sahf
push
push
push
lods
or
cltd
sub
mov
sbb
shlb
dec
cmp
shrb
mov
mov
jecxz
out
and
addl
sbb
lahf
jae
in
icebp
ficoml
je
sarl
popf
std
pop
jae
jp
icebp
or
enter
aad
out
mov
add
or
pop
mov
xchg
fstpt
add
sub
adc
scas
fnstenv
cmpsb
push
out
lret
ljmp
scas
gs
sub
fnstsw
bound
lcall
xor
cld
pop
mov
scas
mov
call
dec
sub
dec
roll
aas
dec
lods
fdivrl
sub
jge
xlat
mov
inc
mov
rcrb
jmp
xchg
or
xor
or
adc
push
cs
mov
daa
xchg
mov
sub
fwait
cli
not
jecxz
mov
jg
jns
mov
mov
cwtl
clc
cmpsb
add
mov
or
xor
and
imul
mov
xchg
jns
mov
js
cmp
add
adc
fildll
push
xor
xchg
lods
push
inc
xchg
in
jmp
cmpsb
pop
in
fiadds
bound
mov
fs
mov
cmpsb
push
outsl
xor
hlt
push
lods
or
push
adc
inc
lret
test
out
sub
jae
xor
pop
daa
cmp
loope
xchg
loopne
pop
aaa
fstp
cld
fists
mov
pop
jg
cmp
xchg
adc
dec
lods
es
or
leave
inc
or
loopne
test
and
sub
out
cmpsb
jae
call
cmp
call
outsl
adc
push
aaa
dec
mov
jp
push
loope
imul
rcrl
mov
jge
aad
xchg
je
popa
shlb
adc
mov
dec
mov
imul
push
mov
or
dec
cmpsb
and
push
addl
jmp
xor
aam
sbb
cmpsl
xor
cmp
prefetch
das
push
xor
sub
imul
xchg
test
bound
rolb
push
js
fsin
sti
cmp
sbb
pop
push
cmp
repnz
jle
hlt
xlat
lods
xchg
cmc
sbb
add
out
les
push
cmpsb
mov
pushf
inc
pop
lcall
jle
fstpt
push
push
outsl
repz
mov
je
shll
mov
out
push
mov
ret
test
lds
sbb
pop
cmp
clc
push
lds
aaa
jp
add
pushl
adc
cwtl
leave
test
addr16
es
inc
movsl
mov
ret
inc
in
dec
lods
or
subb
cmp
pop
repnz
mov
jg
repz
xchg
or
dec
mov
insl
push
jne
push
mov
or
nop
xchg
loopne
mov
sub
cmp
sbb
xchg
xchg
add
outsl
mov
pop
jae
xor
test
enter
adc
in
out
dec
popa
pop
mov
call
pop
shll
clc
repnz
mov
pop
cmc
dec
mov
out
imul
mov
data16
or
push
add
daa
and
jmp
stos
jnp
sbb
movsl
jbe
jge
push
jbe
pop
jg
cmp
sbb
cmp
sub
or
push
mov
push
iret
fidivrs
xchg
inc
mov
std
cmpsb
jae
sbb
cmp
jae
into
je
mov
stos
imul
jno
ljmp
addr16
mov
jb
mov
ffree
mov
and
add
jbe
jg
shll
fnstcw
cwtl
clc
sub
jne
jmp
stos
mov
dec
scas
push
xchg
and
arpl
jnp
in
jns
scas
pop
and
adc
mov
push
in
imul
data16
shl
loop
dec
popa
pop
and
call
je
aaa
xchg
fsts
pusha
cli
pop
jle
ja
xor
add
in
or
push
inc
add
pusha
sti
mov
bound
push
jns
mov
jle
cmp
int3
ljmp
dec
lret
imul
in
in
dec
lods
inc
mov
dec
cmpsl
pop
lds
mov
mov
sbb
sbb
fnstcw
cwtl
scas
adc
xor
xor
les
adc
fsubl
add
mov
dec
cmpsl
pop
sbb
clc
hlt
push
sbb
and
clc
in
mov
mov
call
das
or
cwtl
xor
push
xchg
sti
pop
and
sub
cmp
fnstcw
pop
sbb
jbe
sbb
jg
xchg
insl
xchg
push
popa
mov
cmpsl
mov
out
dec
fs
mov
call
pop
mov
add
push
xor
pop
in
out
scas
sub
dec
sub
jae
xor
push
mov
sub
frstor
daa
rcll
mov
add
push
xchg
pop
mov
push
cmpsl
aam
lret
inc
xchg
stos
test
in
dec
lods
mov
repnz
call
lea
inc
mov
push
aaa
adc
sbb
and
mov
mov
mov
inc
iret
das
mov
popa
inc
and
sub
dec
push
pusha
and
dec
push
xchg
aad
adc
popf
std
lea
scas
outsl
push
sub
mov
jne
mov
jbe
xor
push
pop
sub
pop
cmpl
inc
and
hlt
aad
xchg
into
cwtl
xchg
push
push
adc
sbb
fstpl
rcll
jne
cli
enter
cmpsl
mov
mov
dec
bound
add
mov
popf
pop
jae
and
mov
adc
mov
cmp
int3
sub
out
imul
xor
loop
xchg
inc
and
rorb
cmp
inc
movsl
ja
jecxz
hlt
mov
shlb
fidivrs
into
dec
mov
jno
push
mov
jne
xor
and
andb
jnp
jge
cmp
adc
jecxz
mov
mov
push
jge
adc
cmp
addr16
add
data16
das
mov
sub
sti
pop
pop
addb
mov
add
es
mov
popf
bound
sbb
out
and
xchg
sbb
fdivs
mov
sub
sub
ret
mov
jg
adc
std
pop
xchg
outsl
jmp
out
cwtl
clc
push
or
xchg
sub
add
pop
in
cmp
add
mov
mov
xlat
pop
cmp
adc
rcrl
cli
mov
push
adc
shlb
aam
xchg
push
outsb
int
shll
fdivrs
mov
add
mov
lea
mov
dec
or
in
les
lretw
cs
stos
push
or
sub
xlat
jl
jcxz
mov
aas
mov
xchg
sbb
xchg
cwtl
iret
das
or
pop
loop
dec
add
push
xchg
xchg
in
dec
lods
or
pmaxsw
fdivrs
and
bound
and
ds
std
dec
mov
cwtl
clc
push
mov
jne
sbb
jne
aad
or
into
outsb
rcr
sbb
in
mov
pmulhuw
fidivs
in
std
cmc
popa
push
pusha
jg
into
add
lods
aam
fistpll
mov
fisubl
aas
ds
sti
into
lock
xor
std
nop
mov
outsb
std
rorb
inc
sub
imul
sbb
cmp
push
xlat
clc
shl
loopne
cmp
les
sbb
lret
sub
sbb
pop
cmp
xor
adc
mov
and
push
pusha
add
scas
mov
adc
test
mov
xor
mov
inc
sbb
test
lock
bound
or
int3
enter
inc
pop
jne
ja
aad
push
fucom
jne
in
aaa
xor
sbb
jae
mov
movups
mov
arpl
inc
gs
lock
cmpsb
sbb
popf
push
cs
cltd
xlat
push
int3
das
clc
mov
cwtl
mov
push
loopne
inc
sarb
stos
sub
mov
sbb
movsb
je
mov
add
es
fisubrs
scas
insl
orl
mov
out
dec
mov
int
arpl
mov
fidivs
pushf
sti
push
test
les
sbbl
in
cmp
cmp
push
inc
aas
xor
dec
fwait
xchg
sbb
imul
out
imul
inc
call
xchg
xchg
inc
sbb
pop
jo
stc
pop
addl
lods
hlt
push
xor
jl
jge
ficompl
sub
aas
xchg
inc
lock
xchg
popa
das
push
push
mov
lds
dec
add
jle
add
push
in
pusha
and
ja
mov
movzbl
adcl
jmp
jge
cmp
push
call
insl
push
or
push
dec
fs
pop
mov
and
aad
inc
aad
jne
cmp
cltd
push
add
aad
mov
xchg
jg,pn
int3
enter
adc
add
mov
out
xchg
sub
sbb
pop
xchg
negb
or
push
pop
cmp
and
js
mov
xchg
mov
mov
int
pop
sbb
dec
adc
and
jmp
ret
mov
mov
out
mov
pushf
sti
repz
inc
mov
jnp
pop
mov
mov
inc
jb
xlat
xor
mov
pop
sub
pop
pop
and
test
xchg
or
std
cmp
xor
sbb
cmp
xchg
push
sbb
test
mov
pop
insl
scas
inc
rcl
scas
sub
or
mov
in
dec
lods
dec
out
outsl
push
data16
test
inc
mov
jg
ds
std
pop
mov
cwtl
clc
push
test
je
xchg
xorl
xchg
jle
adc
insb
xor
outsl
jns
sbb
test
mov
and
mov
out
mov
push
mov
lea
lahf
jmp
enter
sub
call
fsubrp
dec
xchg
jno
mov
jle
add
ret
xchg
ss
push
movsb
or
outsl
push
xor
cwtl
notl
cmc
push
push
mov
cwtl
xchg
addr16
scas
push
jp
push
mov
dec
stos
or
daa
xchg
inc
movsl
add
aas
pop
mov
sti
ficoms
inc
mov
cwtl
notl
adc
cld
push
mov
ret
iret
je
xor
push
mov
lret
call
aad
test
inc
mov
pop
mov
mov
cwtl
sub
aam
xchg
test
iret
pop
mov
dec
test
lret
inc
dec
add
mov
inc
testb
shl
adc
aad
xchg
mov
jo
das
mov
jne
push
in
adc
shr
nop
lock
scas
push
insl
int3
or
lret
sub
inc
sbb
test
inc
mov
fistpll
popf
std
pop
mov
cwtl
je
mov
test
sbb
repz
mov
clc
jb
mov
dec
lods
lods
or
lret
call
add
call
jle
cmp
lcall
xchg
cmc
push
xchg
adc
xor
outsb
int
mov
dec
or
imul
add
mov
jg
cmpsl
loopne
dec
lahf
sbb
fstps
cwtl
notl
and
lret
and
call
mov
lods
pop
imul
pop
call
jl
je
sbb
push
mov
adc
aad
xchg
cwtl
notl
push
enter
les
adc
dec
orl
add
mov
inc
mov
jg
ds
lret
sbbb
cwtl
clc
push
mov
mov
jb
xor
insl
int3
test
lret
cs
sub
mov
dec
fbstp
sbb
nop
cwtl
rcll
push
dec
aad
xchg
enter
enter
mov
push
sub
call
mov
mov
jle
mov
sbb
cmp
ja
xchg
cmc
push
mov
jae
xor
jb
cs
stos
stos
adc
out
movsl
or
add
int3
fnstsw
sbb
cmp
jne
xor
repnz
mov
jo
cs
in
dec
lods
mov
jle
mov
jecxz
mov
pop
mov
mov
ja
push
mov
jne
mov
repnz
mov
jo
das
mov
dec
lods
or
into
cmp
dec
lds
add
and
ds
std
pop
mov
cwtl
cld
push
adcb
aam
mov
push
std
xor
dec
push
push
mov
aam
sub
push
jmp
inc
and
add
and
mov
add
ret
clc
push
ss
jne
xor
jb
test
xchg
aad
rorb
mov
push
gs
ror
es
movsl
sub
ficoms
in
mov
cwtl
notl
cmc
mov
xchg
and
dec
scas
push
jp
push
mov
dec
stos
or
daa
xchg
inc
movsl
add
icebp
inc
mov
jg
outsb
cmp
mov
cwtl
notl
adc
cmp
shl
iret
sub
jmp
nop
icebp
push
call
lea
inc
mov
sti
in
mov
cwtl
ja
mov
cmp
xor
mov
dec
lods
or
dec
sub
adc
mov
jg
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
dec
sub
inc
and
add
and
ds
std
pop
cmp
jp
cmp
push
aad
xchg
repz
mov
jo
scas
mov
dec
lods
lods
or
inc
jmp
lds
jecxz
mov
jle
jnp
pop
pop
cmp
jns
cmp
push
mov
jae
xor
mov
scas
loope
push
loopne
jmp
stos
or
and
int
add
test
inc
mov
jg
cmp
sbb
cmp
jns
xor
push
sahf
std
jo
cs
dec
sub
add
cmpsl
push
subb
add
test
loopne
push
cld
in
mov
cwtl
ja
mov
pop
les
repnz
xor
mov
dec
lods
or
xor
mov
dec
cmpsl
pop
lds
loopne
shlb
fisubrs
push
and
jp
cmp
jne
pop
jg
jb
enter
scas
scas
mov
or
int
mov
dec
cmpsl
pop
data16
and
add
and
scas
std
pop
fwait
inc
daa
cwtl
rclb
pop
aad
xchg
loope
mov
jo
mov
out
dec
mov
or
push
mov
cmpsl
push
fisttpl
and
mov
jle
cmp
dec
fcmovu
mov
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
mov
daa
xchg
inc
movsl
test
rcrb
pop
mov
cwtl
notl
xchg
jne
xor
movsb
scas
cs
imul
or
dec
cmpsl
push
lds
pop
and
pop
mov
mov
cwtl
and
xor
repnz
mov
out
iret
das
mov
dec
lods
or
lret
xchg
frstor
test
inc
mov
dec
cmpsb
test
adc
les
sub
add
fisubs
sbb
mov
and
add
add
mov
mov
stos
test
push
jmp
out
push
daa
pop
and
pusha
rcrb
pop
xchg
and
loope
cmp
cmc
negl
pop
fistpll
xor
ja
pop
jbe
pop
jle
cmp
popa
inc
xchg
aaa
cwtl
notl
jmp
mov
ljmp
repz
test
inc
xor
xchg
icebp
jbe
cmp
jb
sbb
cmp
pop
mov
mov
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
fwait
addb
loope
popf
pop
sbb
shlb
push
cwtl
mov
int
jb
ss
or
mov
cmpsb
repz
les
pop
inc
add
fistpll
pop
pushf
jge
mov
push
push
pop
jae
cmp
cli
pop
aad
xor
sysenter
insb
int
xor
dec
out
lods
addr16
push
inc
imul
rolb
add
lods
lods
or
push
pop
jle
pop
push
adc
and
jecxz
popa
push
scas
inc
pushf
jo
addr16
das
lock
aad
stos
dec
out
daa
int3
call
mov
lock
scas
jae
int
dec
jmp
stos
xor
xor
test
inc
and
loopne
dec
fidivrs
cmp
cmp
jne
xor
jae,pt
sbb
push
lods
jle
scas
stc
mov
dec
cmpsl
push
lds
inc
mov
jge
pop
mov
cwtl
ja
mov
xchg
jb
mov
jo
das
mov
aas
js
jno
cld
in
add
xor
mov
shlb
fidivrs
popf
std
adc
mov
clc
adc
push
mov
cmp
xor
inc
repnz
jnp
mov
fstpl
stos
and
leave
inc
inc
and
ds
std
pop
and
scas
je
cwtl
clc
push
push
clc
aad
adc
push
mov
lock
mov
lods
or
test
push
gs
and
mov
jle
cmp
sbb
cmp
push
mov
icebp
shlb
movsl
outsl
dec
scas
push
outsb
int
or
dec
stos
das
out
dec
lret
out
movsl
ljmp
shrb
fidivrs
sbb
cmp
notl
adc
repnz
mov
jo
cs
dec
lods
sub
pop
lods
cmpsl
push
lds
jecxz
mov
pop
mov
mov
jns
mov
jne
xor
adc
adc
das
outsl
lahf
int3
lods
or
lret
or
pop
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
into
scas
push
insl
int3
or
push
mov
dec
cmpsl
pop
inc
js
test
inc
mov
jg
ds
std
cmp
sub
jne
cld
xchg
repz
xchg
adc
pop
mov
dec
push
sub
gs
mov
callw
fsubp
mov
lods
aaa
xchg
notb
cwtl
notl
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
mov
cmpsl
in
dec
stos
or
inc
mov
pusha
bound
sbb
push
mov
pop
aam
xchg
repnz
mov
jo
das
mov
lods
or
lret
movsb
mov
pop
xor
and
add
shlb
xchg
dec
dec
mov
or
mov
jne
push
jmp
repnz
adc
hlt
sub
inc
pop
mov
and
add
and
sub
out
mov
cwtl
clc
push
cmpsb
push
jne
jns
aaa
mov
iret
push
out
dec
lods
lods
or
sub
mov
mov
jle
cmp
sbb
xchg
cwtl
notl
cmc
aam
rcll
mov
push
add
fidivrl
fs
rolb
xchg
inc
movsl
add
jecxz
mov
jg
cmp
lcall
mov
jnp
cmp
push
mov
jo
cs
dec
lods
notl
sub
lds
cmp
mov
pop
mov
mov
cwtl
jbe
mov
push
aam
xchg
repnz
mov
out
mov
mov
push
mov
push
lret
rorb
lds
add
and
ds
std
fcmovnb
pop
jp
pop
mov
jne
push
adc
adc
nop
out
dec
scas
push
insl
int3
or
lret
sub
data16
test
inc
mov
jg
or
jmp
mov
cwtl
push
push
leave
push
arpl
mov
dec
rorb
lods
ret
push
sub
jmp
cmp
cli
mov
push
ficoms
sbb
cmc
push
mov
jae
xor
pop
push
scas
adc
shll
pushf
jmp
stos
bound
daa
xchg
inc
movsl
imul
rcrb
inc
mov
sbb
push
mov
jne
xor
jo
cs
sub
call
movsb
and
jecxz
mov
inc
mov
xchg
ss
hlt
std
addr16
jnp
mov
repnz
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
les
loop
mov
pop
mov
lcall
ss
cmc
push
mov
jb
xor
insl
int
mov
dec
test
xchg
inc
movsb
add
ret
and
pop
fidivrs
sbb
cmp
je
xor
outsl
iret
cs
in
dec
mov
dec
stos
or
daa
xchg
inc
movsl
add
ret
and
pop
mov
fwait
cli
pop
mov
mov
jne
xor
daa
test
inc
and
ljmp
pop
jg
cmp
arpl
cmp
push
mov
aas
and
fidivl
into
jnp
cmp
fwait
inc
call
aaa
fistl
xchg
ficoml
adc
jbe,pn
dec
xchg
mov
cwtl
mov
add
js
das
shll
bnd
mov
inc
cmpsb
inc
mov
push
mov
inc
add
or
sbb
pop
pop
iret
testl
fisttpll
jae
shl
mov
mov
xor
dec
sub
mov
out
loope
ds
std
pop
les
sbb
cli
cli
cmp
push
std
pop
cmp
jns
cmp
mov
loop
out
dec
mov
mov
shrb
inc
mov
lcall
inc
fs
pop
addl
lds
shrl
js
push
lods
pop
aad
sub
outsb
jmp
sub
xchg
notb
lds
repz
sbbl
clc
mov
xchg
pop
pop
cmp
nop
xor
cmpsl
jbe
pop
mov
push
xorl
push
out
inc
push
fisttpl
iret
push
aaa
fdivp
push
inc
push
push
sbb
fwait
mov
cmp
js
loop
ljmp
into
dec
int
jbe
xchg
cmpsb
cmp
fdivrs
jne
sub
xchg
inc
loopne
jb
xor
mov
test
push
sbbl
jle
ljmp
scas
out
mov
ret
clc
lock
add
push
pop
inc
inc
ja
outsl
sahf
mov
xchg
stc
nop
adc
jmp
jmp
mov
mov
sbb
push
inc
pop
repz
push
ss
lahf
sbb
xor
popf
cmc
dec
fwait
sbb
dec
xor
imull
xor
push
xor
sub
jbe
in
daa
lds
pop
and
sbbl
fnstenv
movsb
sbb
push
scas
push
outsb
mov
jmp
mov
mov
jmp
inc
popa
fsubrp
jg
scas
les
sub
mull
mov
subb
jbe
ljmp
lods
fisttpll
cmpsl
or
std
pop
mov
mov
das
cmp
frstor
xchg
push
mov
lea
lods
pop
mov
sbb
lods
xlat
adc
add
inc
out
mov
jno
arpl
iret
out
and
and
fisttpl
pop
stos
lahf
push
aad
xchg
stos
fcomps
pop
adc
das
pop
hlt
inc
mov
cli
push
cmp
pusha
dec
xor
sahf
inc
vpblendd
rorb
push
arpl
push
popa
cmp
sbb
jnp
cmp
repz
xchg
ljmp
xchg
repnz
mov
jo
lock
sub
lds
jecxz
mov
pop
mov
mov
xchg
mov
sahf
jl
mov
adc
push
dec
xchg
pushf
arpl
sub
lds
mov
mov
je
int
jb
loop
lock
push
jmp
sub
test
je
ret
in
mov
insb
dec
mov
pop
inc
mov
xchg
push
xor
clc
sub
pop
mov
push
mov
icebp
xchg
das
mov
dec
lods
lods
or
sub
lds
jecxz
push
add
and
cmp
sbb
cmp
push
mov
data16
ss
lods
mov
dec
jae
clc
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
das
jp
cmp
movzbl
jne
xor
sub
jle
and
call
sbb
jecxz
mov
ss
xchg
sbb
adc
dec
aam
xchg
repnz
mov
jo
das
mov
dec
lods
pop
out
outsl
push
data16
test
inc
mov
jg
ds
std
pop
mov
mov
pop
xor
adc
sti
push
jb
xor
insl
int3
or
lret
xor
jmp
jmp
sub
and
ds
jp
cmp
jne
xor
repz
mov
sub
lret
dec
inc
cmpsl
push
into
lds
sub
arpl
cmp
sbb
movsl
mov
out
push
mov
lcall
and
jmp
stos
ret
daa
xchg
out
movsl
pop
test
inc
fiaddl
push
rclb
cmp
sbb
cmp
mov
jne
xor
mov
jo
cs
and
jecxz
mov
cmpsl
fisubs
and
jecxz
mov
sti
and
mov
mov
jne
xor
repnz
mov
jo
stos
mov
push
test
dec
cmpsl
xchg
and
add
jb,pt
mov
hlt
jp
cmp
scas
mov
jne
push
jmp
sub
fists
lret
int3
imul
push
les
data16
and
add
lds
mov
cwtl
clc
push
mov
jne
xor
repz
mov
push
shrb
xor
dec
mov
sub
call
lds
jecxz
and
pusha
rcrb
fidivrs
sbb
mov
notl
cmc
push
mov
jae
xor
push
int
cli
jmp
stos
loopne
mov
movsl
repz
inc
mov
jg
insb
sbb
and
cwtl
jecxz
ficoml
repnz
mov
jo
cs
pop
scas
or
sub
dec
imul
lds
jecxz
mov
pop
mov
mov
xchg
testl
jnp
push
jns
ror
testb
lret
push
sub
movl
jg
inc
mov
jp
cmp
jne
sub
dec
cmp
fdivr
jecxz
lods
xchg
cmp
add
dec
cmc
lret
sub
cmpsl
dec
outsl
push
push
popa
push
or
cmp
sbb
cmp
mov
push
mov
icebp
xchg
das
mov
dec
lods
lods
or
sub
lds
mov
mov
jle
aas
popf
cld
pop
mov
cwtl
notl
aas
push
add
mov
dec
scas
outsl
and
mov
in
imul
movsl
add
jecxz
and
popa
ds
jg
cmp
lcall
mov
jne
xor
jo
test
or
sub
shlb
cmpsl
test
and
sbb
mov
pop
mov
mov
cwtl
ja
mov
jne
xor
jb
mov
jo
das
mov
lods
or
lret
push
lds
add
and
ds
std
pop
mov
js
mov
jne
push
mov
repnz
nop
lock
scas
push
sub
dec
sub
inc
and
add
clc
pop
fistpll
sbb
mov
push
jne
lock
push
in
and
das
mov
dec
lods
lods
jae
cmpsl
lock
inc
cld
cmpsl
push
lds
pop
inc
mov
jle
cmp
not
cmp
sti
xchg
push
loope
jae
xor
ljmp
or
inc
movsl
add
lret
pop
and
popa
aas
pop
jg
cmp
lcall
mov
jne
xor
pop
push
mov
jo
and
lods
or
sub
or
add
jecxz
mov
pop
mov
mov
cwtl
negl
xchg
jne
dec
xchg
ficoml
rcl
iret
das
mov
dec
lods
or
lret
call
and
add
and
xchg
std
sub
pusha
clc
mov
push
mov
hlt
shll
mov
scas
push
movups
dec
sub
data16
and
add
and
jmp
sbb
cmp
jne
xor
repz
xor
jo
das
mov
dec
sub
or
sub
lds
jecxz
mov
jle
mov
sbb
mov
cmc
push
mov
xor
adc
dec
scas
push
outsb
int
or
dec
stos
or
daa
sarb
cmpsb
movsl
test
rcrb
pop
mov
pop
notl
adc
repnz
mov
jo
cs
dec
lods
or
sub
cmp
jae
push
lea
xchg
pop
mov
adc
in
dec
add
jmp
ret
dec
inc
or
rorl
or
lret
call
lds
fdivs
pxor
xchg
cmovg
sub
mov
inc
cmpsb
pusha
scas
mov
pusha
es
arpl
lahf
cld
aas
sahf
dec
cmpsl
pop
data16
and
imul
adc
xor
sub
int3
repnz
sbb
add
ss
push
pop
mov
popa
mov
lcall
pop
jle
pushf
in
adc
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
and
add
inc
in
pop
push
pushf
call
aaa
sbb
jl
mov
push
popf
cld
outsl
xchg
mov
iret
push
mov
out
insl
add
loop
add
test
lds
mov
sbb
push
mov
cmp
cwtl
fcomp
xchg
mov
push
xor
lea
stos
outsl
loope
insl
mov
enter
aam
mov
or
lret
test
fidivrs
add
pop
sahf
or
sub
jmp
test
fistpll
add
sbb
xor
push
repz
repz
ja,pn
scas
out
out
dec
lods
sbb
mov
sub
lds
jecxz
mov
jle
cmp
stc
lret
ret
fstp
fs
pop
aaa
mov
jno
pop
cmpsl
test
int
ror
nop
nop
jmp
out
mov
cltd
xor
adc
push
insb
xor
xchg
jno
lods
mov
aam
fnstcw
cmpsl
push
gs
dec
repnz
incb
gs
ss
negb
push
jge
mov
cmp
jne
xor
repnz
mov
jo
das
mov
dec
add
mov
les
xchg
inc
mov
jg
ds
std
mov
fnstcw
cwtl
clc
xchg
mov
ja
xchg
push
hlt
push
xor
repnz
xor
lea
lret
lds
add
and
cmp
sbb
cmp
je
xor
outsl
shrb
mov
dec
lods
or
jmp
lret
call
cmpsl
test
add
inc
push
in
mov
add
test
and
test
add
movsl
test
add
ret
arpl
mov
sbb
fidivrs
fidivrs
ficoml
cmp
sub
aad
sbb
jecxz
mov
dec
jo
outsl
ficomps
call
cltd
ja
push
inc
mov
inc
mov
mov
pop
mov
insb
sar
mov
mov
xchg
repnz
pop
shrl
mov
mov
or
dec
mov
pop
cmc
pop
orl
pop
pop
fisttpll
xlat
sbb
mov
inc
pop
mov
ret
xor
xor
fmuls
test
push
push
sti
lods
and
add
pushf
ret
fcompl
clc
nop
lahf
ljmp
mov
dec
daa
jb
in
mov
cmpb
or
mov
imul
sahf
mov
popf
cmp
pop
fwait
sbb
xor
js
xor
outsb
pop
mov
xor
or
in
test
int3
ror
fiaddl
xchg
incl
mov
pop
mov
test
cwtl
adc
xchg
xorb
icebp
out
lret
lea
xor
rcll
mov
mov
and
pop
xchg
popf
fidivl
sub
push
test
das
icebp
test
mov
cmp
scas
and
xchg
sbb
jnp
test
data16
repnz
mov
fidivrs
popf
std
fucom
jno
mov
or
mov
jne
mov
push
adc
adc
fimull
mov
dec
out
pushf
and
stc
mov
inc
mov
in
fdivl
cmp
leave
xchg
cmpsl
jbe
push
xchg
push
pop
lock
pushf
push
int
outsl
cmp
jns
data16
xchg
add
insl
adc
jno
nop
fidivrs
repnz
xchg
xchg
cmc
push
ja
sarl
popa
hlt
loop
xor
int
add
aas
inc
repnz
and
fnstsw
daa
notl
xchg
jne
xor
push
mov
adc
cs
push
mov
jae
xor
sbb
fwait
clc
paddq
cs
mov
sbb
inc
leave
stos
dec
imul
andl
sub
call
pop
and
add
js
fwait
adc
fcoml
xchg
mov
scas
shll
stos
paddsb
lods
cwtl
clc
ret
add
mov
sbb
out
pop
cmp
mov
test
jp
cmp
fcoml
lods
repz
mov
mov
lea
jne
xchg
jg
mov
inc
rolb
loopne
and
mov
sbb
adc
repnz
adc
sub
xchg
insb
dec
lret
mov
cmpsb
jb
les
fs
call
jge
mov
in
aaa
pop
adc
mov
xchg
push
xchg
icebp
cltd
into
xor
cmp
imul
and
jle
sbb
pop
jns
incb
cmc
lcall
aaa
inc
inc
or
pop
mov
adc
mov
mov
insb
call
int3
xchg
xchg
pop
push
sbb
rorb
inc
mov
pop
sub
add
push
je
outsb
xchg
mov
rorl
pop
icebp
gs
push
jecxz
test
and
jle
mov
pusha
ficomps
popf
negl
jnp
in
ja
push
cwtl
outsl
xor
dec
sbb
lret
iret
out
in
add
or
repz
and
pop
rcrb
sarl
jecxz
and
pop
fstpt
sbb
xchg
sbb
mov
mov
cwtl
notl
sub
inc
or
mov
sbb
push
fisubl
cmc
push
xlat
pop
add
jecxz
mov
inc
movsb
sbb
cld
pop
mov
cwtl
notl
adc
repnz
mov
jo
sub
cmp
sub
xor
push
movsl
add
mov
xor
sbb
std
fstl
or
fildl
add
push
pop
pop
and
push
lahf
cmpl
mov
pop
cmp
ja
mov
jne
xor
push
cmp
jmp
aam
pop
mov
cmpsl
add
les
or
lret
sub
inc
sbb
test
inc
mov
fistpll
popf
std
pop
mov
cwtl
je
mov
jge
sbb
repz
adc
jb
mov
dec
lods
lods
or
inc
xchg
push
gs
call
jle
cmp
imul
xchg
cmc
push
mov
jae
xor
outsb
shrl
mov
daa
pop
out
movsl
pop
test
inc
fiaddl
cltd
rorb
adc
mov
popa
testl
xor
or
gs
and
jecxz
mov
cmpsl
and
jecxz
mov
pop
mov
add
xor
cmp
jne
xor
repnz
mov
jo
das
mov
dec
sub
imul
mov
les
xchg
inc
mov
fidivrs
popf
std
pop
lds
jp
gs
fsubl
pushf
jnp
sbb
mov
jb
xor
lock
scas
iret
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
aas
mov
jne
xor
repz
aam
repz
dec
lods
lods
loope
add
lret
push
push
fdiv
aaa
andl
inc
stos
pusha
jae
xchg
fisubrs
mov
jae
xor
mov
int
mov
xor
lock
scas
ljmp
stos
std
imul
inc
xchg
add
cmp
je
push
cmp
push
mov
jne
xor
ss
or
or
dec
mov
dec
cmpsl
push
lds
jecxz
mov
pop
loop
jge
fdivrs
sbb
stos
mov
jne
xor
repnz
push
insl
int3
sub
mov
dec
lods
or
lret
gs
in
lds
es
shlb
fidivrs
popf
std
pop
mov
push
cli
push
jne
mov
add
stc
nop
mov
int3
or
imull
pop
data16
and
add
and
mov
sbb
cmp
jne
and
movsl
shlb
and
lods
and
sub
jae
jmp
inc
adc
add
imul
cmp
sbb
cmp
mov
adc
xor
lock
adc
outsb
int
xchg
jmp
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jo
cmp
imul
mov
jne
xor
jo
lods
push
in
dec
lods
out
imul
or
dec
cmpsl
and
or
jecxz
mov
pop
mov
push
lcall
mov
jb
mov
jb
repnz
cmpb
jae
fisubrs
mov
mov
lds
add
and
pop
test
fcmovne
mov
sbb
aam
mov
jb
xor
insl
mov
imul
pop
inc
and
add
and
ds
cmp
in
fnstcw
test
jns
and
pop
rclb
lods
imul
mov
cmpsl
push
and
and
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
mov
sub
jmp
stos
je
stos
daa
insl
out
movsl
pop
test
inc
fiaddl
cltd
rcrb
fidivrs
or
fnstcw
cwtl
notl
adc
jae
mov
jo
cs
cmc
push
mov
jae
xor
in
push
scas
push
iret
add
imul
lret
adc
lds
notb
popa
rorb
das
pop
fcomps
mov
push
mov
mov
dec
push
mov
mov
mov
xor
pop
mov
das
pop
mov
mov
push
mov
pop
mov
test
mov
xchg
cmc
push
mov
jb
xor
insl
int
mov
add
mov
std
pop
mov
cwtl
clc
push
sub
mov
int3
mov
push
outsb
lds
scas
les
cmp
ja
mov
mov
pop
xor
cmpsb
or
fidivrl
mov
adc
mull
jl
xchg
psubsw
cmp
ja
sub
jb
enter
cltd
inc
dec
add
xchg
mov
xor
insb
mov
pop
jle
add
jg
jmp
xchg
inc
cli
mov
jmp
nop
gs
sbb
pop
notl
aam
testb
add
mov
mov
fcoms
sbb
mov
jge
imul
repnz
sti
jb
lret
stc
or
xor
adc
popf
jno
test
imul
xchg
sbbl
jb
xchg
pop
aam
inc
xchg
xor
dec
sub
dec
or
negb
adc
aas
xor
movl
loope
lods
enter
jno
loopne
out
sub
adc
mov
pop
mov
into
out
ds
inc
xor
sbb
pop
cs
subb
sub
sub
es
add
push
ret
pop
xor
mov
pop
in
insb
repnz
sarl
xchg
addr16
pop
arpl
jg
cmp
in
jo
jae
mov
xchg
inc
xchg
rcll
or
add
dec
jo
clc
lds
jecxz
mov
fistpll
mov
cwtl
adc
popf
push
jne
xor
ret
pop
mov
inc
mov
sub
int3
add
hlt
adc
pop
insl
les
leave
mov
pop
xchg
push
jl
sbb
dec
ja
pcmpeqb
adc
repnz
repnz
ss
imul
enter
cld
repnz
pop
sahf
cs
push
inc
mov
stos
push
mov
nop
rep
add
mov
popf
shrb
pop
xchg
xor
sub
fidivrs
or
mov
jb
aas
icebp
fs
mov
xor
stc
imul
push
fists
vmovapd
jmp
or
mov
inc
je
jo
iret
repnz
mov
sti
mov
jl
mov
jecxz
cmp
fisubrl
sbb
lea
mov
rcrb
xchg
xchg
xchg
test
pushf
jb
movsb
adc
mulb
pop
rorl
popa
int3
pop
aam
cmp
fwait
push
ret
mov
or
sbb
mov
sub
mov
aaa
and
xor
add
les
into
inc
pop
and
xchg
out
jle
push
ret
inc
dec
sbb
xchg
movsl
or
bound
jno
pop
jg
ljmp
push
pop
jo
nop
sbbb
std
movsl
mov
movsb
divl
mov
mov
dec
cmpl
shlb
gs
vpsubw
sarb
and
jae
xor
in
sub
jecxz
arpl
jmp
inc
movsl
add
mov
pop
sbb
cld
pop
mov
xchg
mov
aam
xchg
repnz
mov
loop
cs
dec
lods
or
jmp
sub
call
insb
adc
stos
xor
daa
mov
outsl
mov
jb
push
mov
jo
popf
jle
gs
adc
cmpsb
das
mov
mov
pusha
jns
adc
fcmovnbe
movsb
bound
and
xchg
push
into
nop
hlt
push
push
add
int3
les
jecxz
stc
add
adc
or
sbb
pop
sbb
lcall
ds
xor
push
ja
repnz
ja
mov
stos
pop
int3
mov
dec
lods
inc
jmp
dec
bound
add
pop
loopne
xchg
and
lcall
cltd
xchg
pop
pop
push
mov
not
push
xchg
notl
out
lods
inc
xchg
scas
les
add
call
and
popf
aaa
mov
and
je
cli
push
cltd
sbb
sub
adc
xchg
scas
in
lods
mov
pusha
aas
sbbl
test
not
jl
test
inc
mov
adc
loope
test
rcrl
mov
add
sub
imul
mov
jge
cmp
adc
push
xchg
neg
int
ds
std
fdivrs
xchg
mull
mov
jne
nop
adc
sahf
jle
aas
dec
jecxz
cmp
dec
cmpsl
pop
insw
adc
inc
mov
fbld
repnz
inc
lods
int
aaa
cwtl
jg
mov
lret
daa
pop
orb
scas
or
test
mov
dec
faddp
cmp
and
out
pusha
pusha
rcrb
ficoms
or
mov
imul
add
mov
mov
lcall
cld
fbstp
ret
and
sbb
cmp
inc
mov
notl
ljmp
popa
mov
xchg
pop
mov
movsb
cltd
push
cmp
rcrb
ja
inc
sahf
hlt
xlat
into
cmp
cli
xor
or
push
mov
jne
xor
sbb
nop
adc
das
mov
test
clc
fcomps
fwait
cmc
push
pushf
jg
aad
js
cmp
mov
in
shrb
mov
mov
xchg
sbb
out
gs
mov
sub
int3
or
jb
push
mov
lods
lahf
mov
mov
xchg
into
sub
adc
into
stos
push
imul
ljmp
add
outsb
and
jle
imul
inc
mov
gs
mov
pusha
pusha
rcrb
ficoms
or
mov
imul
hlt
cmp
inc
andb
enter
and
lahf
stc
inc
cmpsb
add
addb
rolb
cmp
push
cmp
int3
sub
call
out
xchg
test
popa
aad
jg
pop
mov
stc
and
pop
mov
fnstcw
cwtl
and
push
jne
xor
scas
adc
int3
sar
and
cli
pop
lahf
add
inc
cmp
xorl
jp
into
xor
rcr
mov
sbb
lea
push
mov
mov
jb
xor
insl
int3
or
lahf
cmpsb
jmp
mov
js
xor
fcom
pop
jo
sahf
out
outsb
sub
ljmp
shrb
xor
mov
dec
shrb
sub
lds
jecxz
jle
mov
push
stos
or
mov
call
push
xor
cmpsb
addl
bound
or
mov
cld
fbstp
ret
inc
mov
imul
push
cmp
dec
scas
daa
call
cmp
cs
dec
lods
loopne
sub
popf
cwtl
cli
push
mov
pop
mov
fwait
xchg
fistpll
mov
jp
jp
cmp
stos
es
daa
xchg
inc
int
data16
sub
lds
lret
fxch
adc
ljmp
outsl
push
leave
aaa
xchg
push
jne
push
mov
jb
xor
insl
int3
or
lahf
cmpsb
jmp
inc
sbb
xor
cwtl
xor
pop
arpl
pop
fidivrl
cwtl
clc
push
mov
mov
jmp
ret
ret
and
jnp
mov
sbb
and
jecxz
out
pusha
pusha
rcrb
ficoms
lret
jb
sub
cmpsb
je
sub
icebp
push
dec
scas
ss
sub
jmp
stos
jg
test
je
sbb
xchg
das
nop
xor
cmp
cwtl
notl
xchg
jne
xor
jo
cs
dec
lods
lds
dec
cmpsl
adc
mov
pop
mov
mov
cwtl
push
mov
xor
loop
pop
jl
iret
das
mov
dec
lods
or
lret
call
lds
add
and
sub
mov
clc
rclb
int
and
adc
insl
int3
or
mov
data16
and
add
or
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
cld
pop
mov
cwtl
notl
cmc
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
or
mov
cwtl
mull
mov
jne
xor
and
jle
cmp
sub
cmp
cli
data16
je
xor
outsl
mov
stos
sbb
sub
gs
xchg
loop
mov
mov
dec
xchg
or
lret
rorb
pop
dec
lds
add
or
movsl
std
fs
pop
clc
sbb
jne
xor
pause
mov
jbe
xor
sub
xor
in
mov
mov
pop
cmp
cli
fidivrl
push
cmc
aad
xchg
jb
xor
lock
lods
mov
sub
call
sub
mov
fidivrs
pop
cli
sbb
push
mov
jae
adc
xor
outsb
int3
sub
jmp
stos
or
daa
xchg
inc
movsl
add
rcrb
fnstsw
add
cmp
push
mov
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
push
mov
jo
jo,pn
sub
insb
popf
in
push
lds
jecxz
mov
jnp
push
jge
push
sbb
add
cwtl
cwtl
orb
std
lret
jnp
adc
clc
lds
or
lret
out
cmpsl
pop
lds
add
and
ds
std
dec
mov
cwtl
clc
fdivl
mov
shll
nop
jo
scas
push
xor
or
iret
sub
dec
and
add
and
mov
sbb
cmp
push
jne
cmp
adc
cmp
or
sub
gs
and
jecxz
mov
jle
test
jns
or
push
mov
jae
xor
outsb
int
jb
dec
stos
call
out
movsl
insl
test
inc
or
popa
shlb
cmp
loope
fnstcw
std
notl
fidivs
xor
mov
jo
cs
dec
lods
inc
imul
into
call
lds
jecxz
mov
insl
mov
mov
cwtl
clc
push
mov
pop
aam
xchg
mov
mov
jae
das
mov
lret
cmpsl
dec
cmpsl
pop
jmp
inc
mov
jg
ds
std
sarl
clc
lret
jne
push
mov
mov
xor
insb
int3
or
jl
mov
lret
cmpsl
pop
data16
add
and
movsl
popf
std
pop
rcrl
fidivrl
cwtl
clc
push
fists
jne
mov
repz
mov
mov
dec
sub
or
call
cmc
arpl
and
mov
jle
dec
or
pop
mov
dec
notl
cmc
push
mov
aas
add
xchg
lock
scas
outsl
stos
or
stos
pop
out
daa
es
je
test
inc
mov
jg
cmp
sbb
cmp
jb
xor
insl
iret
cs
dec
lods
movsl
jmp
push
push
mulb
and
jecxz
mov
pop
mov
mov
cwtl
aaa
push
mov
jne
xor
push
dec
mov
jo
das
mov
lret
lods
or
stc
cmp
rorl
aad
xchg
outsl
test
inc
mov
jg
ds
std
pop
mov
cwtl
clc
push
mov
jne
icebp
ret
shll
nop
pop
shrb
jbe
sub
hlt
sbb
test
inc
mov
jg
ds
std
pop
sti
mov
clc
push
push
shll
push
mov
cltd
int
sbb
call
cmc
outsl
jecxz
or
push
fimuls
popf
cld
pop
jecxz
lcall
mov
mov
sti
scas
scas
je
int
call
imul
movsl
mov
rolb
fidivrs
pushf
jp
cmp
aam
jge
xor
push
mov
lret
shll
cmpsl
int3
lds
into
and
jge
cld
jge
pop
mov
cwtl
in
mov
imul
pop
push
mov
cmpb
mov
lods
or
or
jo
add
int3
inc
mov
jg
ds
std
jle
cli
jp
cmp
jne
push
mov
jo
adc
or
or
sub
ret
test
inc
mov
cld
pop
mov
sbb
cmp
jne
xor
repz
mov
or
dec
sub
cmpsb
lds
push
loope
rcrb
fiadds
pop
fstps
cmc
push
mov
jae
xor
lock
iret
adc
sub
jmp
stos
push
imul
movsl
add
jecxz
inc
add
and
cmp
aas
jp
pop
pushf
notl
adc
repnz
rcll
iret
cs
dec
lods
adc
dec
call
lds
jecxz
ret
mov
jge
pop
mov
cwtl
notl
push
sbb
xor
notb
adc
das
mov
or
lret
jmp
cmpsl
pop
mov
and
jle
ret
and
ds
std
and
cli
jp
cmp
jne
push
mov
dec
lahf
adc
push
lcall
cli
xchg
out
sub
nop
loope
cmpsl
and
push
stos
fcompl
jp
dec
cmpsb
xlat
push
ret
push
jne
sub
rclb
adc
rcrl
int
mov
adc
call
out
out
jecxz
xchg
mov
jns
cld
pop
or
hlt
cwtl
notl
loopne
mov
jae
xor
outsb
int
mov
stos
stos
xchg
daa
mov
test
inc
mov
sbb
aaa
je
fnstcw
sbb
push
mov
jne
xor
jno
mov
jo
cs
push
sub
imul
call
lds
jecxz
mov
fidivrs
sbb
and
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
sbb
scas
push
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
fs
lds
jecxz
push
jge
rcrb
fidivrs
sbb
mov
jae
xchg
cmc
push
mov
jae
xor
outsb
int
addr16
stos
jne
enter
inc
movsl
int
jecxz
sbb
popa
shrb
fidivrs
cmp
cmp
push
mov
hlt
aam
dec
jb
mov
in
dec
stos
pop
in
dec
lods
out
lret
call
lds
inc
mov
jge
pop
mov
cwtl
dec
mov
mov
shll
mov
dec
lods
or
lret
call
lds
add
mov
std
pop
mov
mov
jne
push
mov
push
pop
divl
dec
scas
push
insl
int3
or
xchg
push
pop
data16
and
jmp
fistpll
popf
std
sbb
out
mov
mov
jne
shlb
jle
mov
jo
das
xor
nop
aaa
roll
lret
ja
lods
or
in
leave
inc
xchg
lcall
fildll
sarb
jecxz
sti
subb
rcll
sbb
lahf
sub
in
inc
and
insl
je
pop
les
sahf
gs
mov
imul
dec
imull
dec
orb
xchg
inc
mov
mov
mov
fidivl
loope
cmpsb
sar
jno
test
mov
rorb
ss
aad
sarb
cmp
pop
fsubrs
cltd
adc
lahf
add
xchg
lahf
xor
js
nop
loopne
imul
iret
aaa
loope
mov
lcall
dec
mov
push
fs
mov
sysenter
push
int3
clc
push
cmp
orb
movsb
add
negl
cmpsb
mov
repz
xlat
mov
jne
xor
repz
mov
daa
popa
out
jo
mov
jg
insl
aam
int
movsl
pop
adc
adc
pop
dec
jge
mov
push
pusha
je
jnp
in
loop,pt
in
cmp
sahf
pop
sbb
clc
sbb
loope
mov
mov
mov
mov
dec
adc
lahf
mov
lcall
push
lds
repz
adc
add
mov
dec
fbld
ljmp
ja
jb
sbb
aam
mov
jp
fldlg2
std
insl
clc
les
dec
aam
or
fisubl
xchg
and
xchg
pop
sahf
dec
xchg
std
adc
test
push
sub
push
lds
repz
jns
in
fmull
insb
and
insl
adc
pop
or
and
mov
into
sub
insl
ljmp
mov
fstp
mov
cmovo
mov
add
inc
cmp
mov
fldcw
xchg
xor
daa
pop
mov
popf
mov
jp
ror
mov
imul
xor
push
orb
enter
push
xor
jno
pop
push
adc
jb
xlat
xor
imul
mov
sub
daa
xor
ljmp
in
cwtl
notl
adc
repnz
mov
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
dec
lods
or
lret
call
lds
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
push
mov
jb
xor
insl
int3
or
lret
sub
data16
and
add
and
ds
std
pop
mov
cwtl
clc
push
mov
jne
xor
repz
mov
jo
das
mov
dec
lods
lods
or
sub
lds
jecxz
mov
jle
cmp
sbb
cmp
push
mov
jae
xor
outsb
int
mov
dec
stos
or
daa
xchg
inc
movsl
add
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
jo
cs
dec
lods
or
sub
lds
jecxz
mov
pop
mov
mov
cwtl
notl
push
jne
xor
repnz
mov
jo
das
mov
add
add
inc
or
xor
add
add
push
or
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
add
ror
dec
dec
sub
nop
jmp
call
stc
clc
rol
dec
stc
sub
rol
jmp
ret
add
add
jmp
call
loop
cltd
call
jae
mov
and
jmp
stos
or
sub
out
cmpsb
add
add
sbb
sti
sbb
call
aam
adc
jge
mov
ret
lock
adc
or
leave
roll
test
sub
inc
mov
pop
sbb
test
xchg
mov
xchg
fcoml
adc
sub
cmpsl
loopne
in
idivl
inc
dec
test
xor
xor
xchg
cmp
cmc
xor
adc
insl
push
out
in
dec
out
psubsw
addr16
mov
test
sub
roll
pop
ret
mov
ret
cmp
cld
in
push
js
ss
repnz
cmpsl
adc
jne
lret
sub
movsl
xor
ret
inc
in
movsb
mov
outsb
adc
mov
cwtl
notl
pop
mov
insl
mov
icebp
adc
rcrb
mov
lods
stos
shrb
lret
inc
imul
and
popf
add
cld
sti
and
xchg
mov
leave
xchg
xchg
xchg
push
push
mov
sub
nop
sub
test
arpl
add
ds
mov
pushf
rcrl
jns
cmp
push
aam
push
xor
adc
iret
mov
insl
in
adc
mov
cmp
inc
inc
add
mov
pop
loop
outsl
sahf
sbb
jp
ss
mov
xchg
xor
lock
cld
fs
lea
dec
loopne
push
sub
xchg
xchg
cwtl
inc
jg
xchg
pop
fisubs
sbb
shrl
adc
sbb
dec
rorl
ljmp
mov
mov
loope
jg
cmp
cld
pop
mov
adc
push
mov
adcl
aam
in
pop
dec
mov
push
jns
out
xor
add
jecxz
fisubs
ret
es
inc
cmp
pop
jge
jnp
xchg
fcomip
ds
push
jge
mov
inc
lock
adc
mov
push
mov
xor
jmp
push
jp
jl
divl
mov
jnp
fcoml
shll
out
outsl
addr16
lods
pop
sub
les
jbe
fbld
adc
into
sbb
dec
xchg
xor
outsl
shrl
rorl
enter
out
popa
sub
adc
cmp
sbb
cmp
adc
dec
mov
iret
loop
add
insb
push
lret
dec
push
sarl
xchg
add
sar
mov
jg
cmp
push
scas
sbb
xchg
adc
jns
adc
mov
in
in
call
dec
outsl
sarb
adc
mov
mov
pop
test
fsts
cmc
sahf
push
test
push
xor
in
movsb
mov
lods
inc
sbb
cmc
push
movsb
lret
xchg
inc
add
loopne
pop
es
fsts
inc
js
xor
iret
test
push
jae
sub
in
pusha
xchg
or
jmp
cmpsl
add
les
lret
push
repz
adc
rcrb
xchg
push
popf
push
pop
mov
lock
mov
in
int
mov
sub
mulps
bound
outsl
bound
inc
nop
dec
bound
mov
jg
rclb
rorb
adc
scas
or
out
fists
inc
cltd
fidivrl
pop
jl
scas
xchg
jo
inc
pop
mov
dec
nop
sbb
xor
std
icebp
push
ljmp
jle
inc
push
mov
and
dec
mov
fcmovnb
cmp
insl
stos
mov
mov
mov
mov
add
popa
nop
mov
frstor
test
and
std
fisubrl
and
pushf
fistpl
sbb
mov
mov
pop
aam
push
movsl
jb
iret
mov
jnp
push
outsb
mov
call
or
enter
inc
in
popa
and
mov
sahf
and
cmp
std
cwtd
fnstcw
xchg
xor
push
ds
push
push
adc
lea
imul
sub
pop
or
aas
dec
data16
popa
cmc
jbe
rcrb
pop
mov
push
lahf
leave
mov
fcmove
mov
mov
iret
dec
mov
sub
je
inc
fistpl
test
fnstsw
and
cld
sbb
les
es
adc
adc
in
icebp
mov
jmp
or
adc
hlt
ljmp
gs
xchg
jmp
inc
mov
pop
mov
fstp
repz
xchg
pop
cltd
hlt
mov
hlt
rcl
push
sarl
sbb
mov
push
leave
add
lds
lods
ret
shll
movsl
sbb
call
cmc
ds
std
fcoml
shlb
add
int
dec
add
rsm
icebp
and
add
jg
add
mov
and
fs
cwtl
pop
stos
ja
lfs
je
xor
cltd
mov
rep
push
cmpsb
nop
jo
pushw
inc
pop
bound
ljmp
lcall
cltd
push
sbb
xchg
jb
std
cmpxchg
mov
scas
or
ljmp
les
and
sar
jg
mov
ss
cmc
inc
ficoml
ss
xchg
mov
adc
jmp
mov
cmpsb
int3
xchg
jbe
xchg
mov
xor
insl
xchg
xchg
inc
add
je
pusha
fcomps
test
insl
cmp
cmp
pop
aas
xor
dec
popa
mov
orb
enter
scas
and
inc
ds
and
clc
fmuls
pusha
cli
ret
cmp
or
push
dec
xchg
shll
xchg
lret
mov
mov
outsb
mov
int3
dec
push
push
xor
inc
cmpsb
push
cmp
fidivrs
popf
mov
iret
lahf
pop
idivb
xchg
mov
mov
jb
addr16
adc
out
add
jmp
mov
test
mov
subb
mov
jge
mov
mov
adc
mov
bswap
bswap
dec
scas
aad
sub
mov
jg
and
out
test
inc
fdivl
pop
fiadds
pop
xchg
sbb
mulb
outsl
xchg
fdivl
lock
mov
sub
pop
or
sub
pop
inc
inc
sbb
inc
pop
outsl
add
cmp
inc
addr16
mov
cmp
scas
xor
jp
lds
imul
push
mov
sub
out
arpl
test
push
adc
fnop
fdivrl
fwait
loope
push
shrl
je
xor
cltd
inc
popl
adc
mov
dec
mov
daa
jmp
pop
call
xor
pop
pop
mov
ljmp
mov
push
add
push
ss
ss
mov
pop
mov
dec
xor
push
and
cmp
xlat
das
movsl
out
adc
movsl
mov
pop
aad
mov
arpl
stos
fists
adc
cmc
hlt
inc
dec
shlb
mov
fisttpll
sub
mov
test
sub
mov
sub
shlb
out
outsl
add
pop
mov
adc
jb
movsl
data16
pop
inc
add
andl
das
push
mov
mov
bound
in
movsb
adcl
data16
push
pop
sbb
insl
test
adc
push
lods
movsb
icebp
push
clc
mov
fsts
fucomip
loop
lcall
mov
xor
js
pop
mov
cmp
push
mov
xor
xor
lock
aaa
daa
rorb
test
es
mov
mov
test
ds
pop
add
cmp
cmp
aam
stc
pop
xchg
aaa
ss
xor
adc
xor
mov
lret
dec
dec
les
xchg
and
jecxz
lret
add
adc
fidivl
lcall
xor
lahf
mov
outsl
into
sub
or
adc
data16
incb
loop
mov
jle
cmp
sti
pop
mov
mov
push
jl
roll
test
bound
sub
decl
aaa
and
les
inc
mov
jle
cmp
sbb
cmp
je
xor
outsl
into
cs
in
dec
stos
or
sub
les
loop
shll
fistpll
sahf
pop
mov
jns
cmp
je
xor
outsl
iret
cs
in
dec
stos
or
sub
lds
jecxz
mov
jle
cmp
sbb
jbe
xor
adc
xor
insb
int3
sub
cmpsl
push
lds
jecxz
mov
jg
cmp
sbb
cmp
jne
xor
movq
sub
or
sub
les
and
mov
jle
cmp
sti
pop
mov
xchg
notb
adc
shll
xchg
icebp
xor
insl
int3
sub
ljmp
cmpsb
add
loop
mov
jle
cmp
sbb
cmp
je
xor
outsl
into
cs
in
dec
stos
or
sub
les
loop
shll
fistpll
sahf
pop
mov
jns
cmp
je
xor
outsl
iret
cs
in
dec
stos
or
cmp
pop
pop
sbb
cli
pop
jecxz
mov
pop
arpl
push
leave
scas
or
xor
inc
sub
test
std
pop
fs
pop
sub
loop
mov
arpl
push
pop
pop
mov
outsl
push
inc
or
icebp
push
mov
outsl
scas
fs
cmp
loope
mov
inc
cmpsb
add
adc
mull
xchg
lock
cmp
sti
mov
or
enter
je
adc
test
xor
mov
dec
leave
out
mov
sbb
mov
mov
xor
sub
jmp
rorb
dec
cmpsl
mov
je
add
add
xchg
add
add
add
add
adc
add
add
add
xor
add
add
add
fs
imul
inc
gs
jb
arpl
fs
jae
adc
add
add
add
add
add
add
add
or
add
add
dec
add
add
add
add
add
add
add
faddp
add
in
jo
add
jo
add
jno
add
jno
add
jo
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
jmp
cmp
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
int
add
add
add
sbb
fwait
stos
sbb
lcall
ror
pusha
mov
je
call
or
push
movsl
sub
mov
and
push
fiadds
int
icebp
and
or
or
lock
push
lods
popa
mov
lock
push
je
sub
lahf
mov
xor
cmc
and
sti
mov
ljmp
cmpsb
aad
sbb
jbe
iret
jo
dec
or
call
aad
xor
jmp
xor
fcoml
nop
clc
pop
jle
add
xor
push
insb
jmp
push
xorl
push
mov
in
insb
dec
gs
in
aaa
cmp
lods
pop
pop
imul
mov
cmp
mov
inc
xchg
push
repnz
push
cld
xor
in
mov
fstl
dec
es
mov
jne
cmp
js
dec
push
cmpsl
mov
jl
push
cli
loope
jg
call
mov
mov
fwait
cld
subl
or
xchg
lods
jbe
test
cmp
and
ss
mov
repz
out
xchg
int3
jne
loope
jle
clc
mov
es
mov
push
mov
jno
or
decb
outsb
insl
scas
in
and
pushf
and
cmpps
add
dec
andb
push
sub
jbe
jno
data16
mov
xchg
test
lea
negl
pop
xchg
or
icebp
pop
icebp
or
cmc
mov
scas
test
jnp
not
das
cltd
insb
repz
dec
data16
cmp
in
adc
sarb
jb
jno
shlb
jecxz
push
add
sti
sbb
jnp
add
out
jae
inc
mov
dec
fucomp
inc
pop
mov
out
mov
jmp
gs
xchg
icebp
lock
dec
rcll
mov
lret
dec
nop
cmp
shlb
mov
test
adc
das
mov
sub
imulb
ffreep
orl
mov
stos
lret
popf
mov
in
mov
out
pop
outsb
jne
and
and
mov
mov
inc
push
mov
sarl
push
mov
push
mov
imul
and
mov
xor
aas
jmp
popf
push
movsb
xchg
les
add
hlt
leave
dec
jp
mov
mov
xor
jmp
ljmp
pop
mov
in
shr
je
sti
popf
imul
shlb
sbb
adc
jle
jg
rsm
xchg
add
fnsave
scas
pushf
aad
push
lods
xchg
stos
and
sahf
cmp
add
xorb
fmuls
int3
mov
out
ret
lahf
adc
repnz
call
dec
outsb
push
xor
xchg
sbb
mov
hlt
mov
imul
shll
ja
mov
xchg
dec
adc
mov
cli
xchg
cmp
pop
incl
sbb
push
xchg
dec
lahf
repz
stc
jle
movsb
or
xor
fldcw
adc
sub
orl
inc
cmp
cmc
int
add
pop
lods
or
jo
test
lahf
pop
pop
into
aaa
inc
sbb
fwait
add
cmpsl
mov
ret
test
jno
sbb
xor
mov
mov
out
lods
push
idivb
add
dec
xor
call
jg
movsl
out
popf
test
lea
mov
adc
addr16
std
loop
sub
jnp
xor
xorb
dec
inc
sarl
adc
cmpb
cmp
push
push
fcoml
daa
inc
and
cmpsl
aad
inc
xchg
inc
lret
lea
out
clc
fucomp
movsb
test
mov
daa
movsl
push
adc
sbb
pusha
jp
out
mov
xchg
jae
cwtl
push
in
ret
loopne
jns
movsl
adc
and
jne
adc
mov
sub
sar
push
xchg
imul
cs
sarl
cli
fldt
push
mov
int
and
mov
lods
pop
inc
mov
push
adc
pop
pop
in
xchg
adc
pushf
jmp
jne
inc
loopne
mov
lea
pop
call
iret
sub
mov
add
js
in
xor
das
rol
jno
lcall
and
rcll
arpl
test
mov
loope
repz
mov
adc
adc
mov
or
pop
cmp
and
push
outsb
test
data16
into
cmp
out
pop
add
sarl
and
push
mov
nop
sbb
inc
sbb
rcrb
jg
or
mov
enter
cmpsl
lock
jns
leave
in
ja
or
dec
dec
cmp
cli
xor
push
sub
dec
xor
dec
mov
xchg
cmpsl
add
popa
stos
cld
addl
jg
push
lret
mov
dec
sbb
ljmp
ret
xchg
push
or
roll
cmp
xchg
sbb
sbb
testl
mov
push
sbb
pop
fs
loope
leave
add
push
nop
or
cwtl
loop
add
jmp
push
jne
sbb
dec
test
jno
or
pop
les
insl
add
dec
adc
cmpsl
cs
xchg
mov
in
cmp
clc
xor
out
or
push
mov
jno
lret
add
mov
enter
test
cmpb
cmp
jg
jmp
iret
cmpsl
jmp
ds
sub
cmpsb
leave
cli
popf
jo
push
enter
dec
pop
fsubs
scas
int
and
popf
push
xchg
push
cmpl
das
lahf
sub
popa
fildll
arpl
mov
xor
rclb
dec
in
dec
sub
pop
pop
test
pop
jp
in
jl
imul
adc
pusha
jecxz
ss
inc
xchg
clc
xchg
or
in
inc
add
mov
mov
cld
test
shr
pushf
jb
jne
jge
push
ds
test
fsts
push
fwait
pop
lcall
cli
mov
mov
mov
int
xchg
cs
call
jge
icebp
sbb
fldcw
stos
lock
out
clc
dec
dec
ret
xchg
mov
sbb
shll
into
ss
mov
pop
pop
jne
inc
dec
jb
insl
sub
or
pop
popa
cmp
popa
popa
movsl
pop
dec
mov
mov
scas
sub
fsub
out
inc
push
xor
faddl
jmp
mov
add
lcall
cmc
xorb
mov
xor
enter
mov
push
mov
fstl
jbe
cli
xor
andnps
pop
mov
sbb
outsl
insb
fsubs
push
sbb
test
rorb
repz
data16
inc
lods
mov
pushf
mov
test
mov
fs
out
fcmovnb
and
call
cli
mov
ss
mov
jbe
lds
pop
cs
sbb
cs
lret
fsts
loope
bound
jp
out
dec
push
dec
insb
mov
xchg
loope
sbb
shr
cwtl
push
dec
dec
sbb
in
lret
lods
int3
repnz
aam
dec
add
data16
add
lock
ljmp
clc
add
lods
testb
je
pop
hlt
jg
jo
xchg
jmpw
adc
punpcklwd
sahf
lods
cmp
or
dec
lea
push
pop
xchg
and
add
mov
leave
pushf
out
test
or
mov
add
cmc
in
cmc
mov
lods
fsub
push
inc
test
int3
mov
sub
xor
loopne
stos
jle
je
inc
repnz
jg
les
jecxz
scas
xor
les
push
xchg
jecxz
jl
psubd
insl
rclb
outsl
ret
mov
out
sub
push
xor
movsl
mov
cli
insb
and
scas
add
add
adc
inc
repnz
hlt
sub
out
dec
sahf
mov
loopne
lock
movsb
enter
fidivrl
cs
and
dec
call
js
sub
push
jl
in
loopne
inc
sbb
inc
push
xchg
pop
decl
daa
mov
pop
shll
mov
inc
outsb
loop
push
add
pop
xchg
les
mov
mov
lret
stos
fs
repnz
outsl
mov
sahf
pop
stc
in
in
xchg
cmp
out
les
mov
inc
fldenv
mov
bound
out
mov
call
xor
mov
mov
enter
jmp
mov
ret
xor
nop
out
push
and
shlb
fstp
jg
cmp
int3
or
and
clc
out
adc
pop
loop
pop
nop
fisttpl
push
call
xchg
aaa
int
jmp
push
lock
mov
shrb
daa
cmp
or
lds
push
stos
pop
jecxz
inc
xor
int3
adc
fwait
inc
jns
clc
cwtl
dec
fcomp
jmp
pop
gs
ja
xchg
in
cmp
pop
add
xchg
leave
lods
dec
push
test
sbb
rcrl
push
cwtl
sub
push
mov
push
addr16
cmp
adc
adc
inc
jnp
mov
dec
outsb
xchg
int3
roll
dec
testb
sbb
pop
subb
push
mov
push
push
xchg
mov
push
xor
lods
xor
les
jns
daa
in
fwait
sbb
add
stos
out
push
addr16
iret
xlat
scas
pop
sub
pop
xchg
das
xchg
inc
loopne
mov
xor
jle
jp
dec
outsb
dec
sub
pop
jbe
testl
sub
push
in
imul
int3
sub
cmc
dec
and
out
out
xchg
nop
inc
das
or
in
adc
divl
mov
cld
adc
jbe
jle
outsl
xchg
adc
stos
dec
xor
dec
js
je
in
aad
cmp
sti
icebp
out
mov
push
daa
loope
bound
mull
loop
ds
les
pop
stc
es
addb
lock
mov
out
cmpsl
in
mov
jp
cld
mov
xor
mov
adc
test
cmp
pop
pop
bound
adc
and
add
adc
jecxz
fsubs
enter
jbe
jg
loop
jb
adc
xlat
mov
mov
filds
push
mov
jle
sarb
jne
mov
push
push
sbb
mov
add
dec
outsb
in
jb
xchg
clc
sbb
push
into
pusha
xchg
push
lock
out
mov
jg
mov
cli
popf
out
stos
inc
rep
insb
fwait
pop
inc
loope
xor
xchg
inc
inc
and
adc
sub
fisubs
and
movsb
imul
jge
movsb
shrb
mov
pop
add
xchg
inc
jnp
je
cmp
gs
loope
mov
dec
inc
xchg
and
pop
adc
jg
mov
mov
add
hlt
inc
jnp
fimuls
inc
das
test
mov
inc
mov
inc
xchg
jmp
leave
mov
xchg
inc
inc
mov
fisttps
dec
mov
push
aas
jmp
outsb
jle
push
push
mov
shr
leave
repz
test
sub
ficompl
adc
jmp
dec
mov
insb
jo
jo
pop
xor
inc
mov
inc
test
xor
and
sti
mov
ja
fdivrs
movsl
fcoms
add
push
gs
push
push
pop
pop
xor
mov
mov
ds
push
loop
lahf
mov
or
mov
dec
pop
test
sbb
test
lea
enter
push
xor
sarb
pop
outsl
ds
shr
xchg
fwait
sbb
imul
mov
xchg
jmp
push
mov
jg
and
test
push
push
les
cld
mov
int3
xchg
lea
call
pop
sbb
mov
xchg
imul
cs
and
cmp
mov
mov
jb
pop
or
jle
inc
jmp
push
mov
pop
xchg
and
cmp
enter
pop
push
cmp
scas
mov
fidivl
int
xchg
in
cltd
dec
xor
aaa
enter
sub
push
out
pop
sub
and
int3
push
pop
jg
jo
pop
cltd
cmp
mov
push
cmp
ds
dec
clc
cmp
xchg
mov
imul
bound
in
push
test
sub
iret
cli
fdivs
xchg
into
xchg
lods
and
pop
jmp
arpl
cli
adc
into
roll
cs
mov
jbe
push
push
xor
adc
add
jne
lcall
dec
cmp
scas
shlb
lcall
mov
push
loopne
xchg
add
inc
xor
push
pusha
jb
xlat
lods
push
adc
xor
pop
loope
dec
loop
mulb
xor
imull
mov
cmp
ror
aaa
add
loop
or
mov
aam
test
xlat
fcomip
lock
push
ret
pop
je
data16
and
mov
sub
jge
test
sub
aad
test
add
fildll
int3
test
aas
shll
cmp
cmp
jns
iret
adc
xor
push
movsl
xor
hlt
aam
mov
cltd
and
lds
jge
cltd
cwtl
mov
fidivrl
rcl
jp
and
push
xchg
and
sub
mov
cmp
push
adc
add
mov
sbb
stos
adc
inc
stc
decb
aas
fnstenv
lcall
test
jne
inc
outsb
ja
xchg
sbb
mov
dec
es
jp
sti
dec
push
jmp
or
cld
xchg
sbb
push
xchg
imul
adc
sub
or
jne
divl
adc
mov
dec
mov
sub
ret
sub
xor
popf
insl
ljmp
push
iret
add
mov
add
xor
cwtl
add
pop
mov
xor
loope
inc
push
sahf
adc
imul
cmp
sbb
xchg
jg
push
mov
scas
popa
jo
shlb
movb
notl
cmc
fwait
xor
jl
out
sarl
rorb
push
mov
jno
jecxz
pop
lret
repz
dec
shll
shrb
jb
lcall
popa
scas
inc
sub
jle
dec
mov
inc
xchg
es
and
sbb
pop
xchg
push
inc
and
sub
jl
adc
adc
mov
xor
mov
movb
sbb
cmp
push
hlt
insb
sbbb
movsb
mov
sahf
outsl
add
dec
jl
cli
xchg
dec
mov
stc
movsl
lret
pop
cmp
ret
movsl
mov
push
enter
and
push
and
notl
test
cmpsl
loopne
lret
das
pop
mov
bound
ficomps
ja
jl
xor
fimuls
jno
dec
pop
cmp
xlat
jle
inc
add
mov
or
xchg
push
jecxz
test
push
or
and
pusha
and
mov
mov
aam
out
push
test
out
mov
test
inc
mov
out
xor
ljmp
and
inc
bound
ds
rcrl
imul
mov
push
and
xor
sub
aas
and
cmp
inc
lock
adc
sahf
cmp
insb
bound
ja
cmp
jno
xchg
lahf
jae
outsb
pushf
push
cmc
or
dec
and
ret
inc
and
push
sbb
movsl
and
mov
mov
mov
sub
sub
lods
add
dec
jg
mov
andl
xor
push
sbb
jl
scas
fcomip
push
xchg
into
jo
ja
mov
adc
or
cmp
adc
mov
xor
push
mov
loop
shr
and
aam
repnz
or
ret
call
push
dec
testl
add
js
loopne
push
int
ds
xchg
mov
call
cmpb
pop
out
xor
lahf
pop
xchg
loop
movb
dec
sub
sahf
xor
xlat
sbb
or
or
jg
sbb
or
or
sti
xchg
lret
cld
dec
xchg
lock
xorl
pop
lock
aas
enter
sbb
ret
lret
sbb
shlb
int
int3
icebp
xchg
cwtl
or
rclb
dec
xchg
pusha
jne
loope
mov
rclb
push
jecxz
add
mov
adc
cmp
in
cmp
jbe
sub
xor
icebp
imul
test
in
mov
dec
mov
push
pop
jp
in
pop
loopne
dec
bound
lea
mov
mov
fdivrl
pop
es
subb
stos
sub
dec
mov
ficompl
lods
xor
pop
fmul
push
xor
mov
test
adc
leave
sarb
fstl
ror
jge
mov
mov
es
inc
and
sbb
in
pop
mov
test
cmpsb
pop
call
or
jmp
adc
add
mov
or
or
mov
and
insb
push
adc
add
in
mov
mov
call
dec
mov
gs
adc
and
add
jne
repnz
stc
inc
in
xchg
ja
mov
mov
cmpsl
int
jae
stos
loopne
dec
outsb
xor
cmp
mov
mov
pop
xorw
jle
xor
subb
mov
lods
gs
imul
add
xchg
push
jge
xor
scas
pop
aas
faddl
inc
sbb
pop
cmpsl
in
fwait
inc
mov
clc
aad
test
sub
push
add
mov
inc
mov
test
in
push
shrl
in
jne
iret
out
or
arpl
fildl
int
aam
sub
shlb
mov
dec
dec
das
pop
dec
xor
jg
push
test
cltd
dec
jle
lock
mov
jecxz
mov
lret
inc
lock
imul
jno
aas
xchg
sbb
or
jb
push
lods
in
adc
icebp
mov
stc
js
mov
cmp
addr16
pop
adc
data16
lds
repnz
dec
andl
jno
imul
ja
cmpsb
scas
nop
adc
mov
testl
outsl
cmp
mov
and
jecxz
sbb
orb
frndint
lcall
pop
fdivrs
jl
xor
push
sbb
xor
dec
mov
aad
dec
sar
std
movl
push
mov
push
nop
ljmp
jecxz
insb
jl
in
cwtl
inc
out
mulps
pusha
arpl
pop
dec
sti
loope
in
vaddsubps
mov
mov
cwtl
add
negl
mov
test
jne
push
jnp
in
fisttps
xor
adc
push
daa
ljmp
cmp
pop
aaa
mov
add
mov
mov
sbb
cld
fadd
icebp
or
push
mov
mov
mov
pop
shl
lock
mov
inc
mov
cli
xorl
or
je
cmpsb
cmp
xchg
mov
mov
sub
pop
fmul
mov
popf
rcrl
loop
push
into
adc
movsb
and
mov
dec
or
addr16
insl
jge
leave
data16
xchg
pop
dec
mov
das
stos
jb
sbb
neg
lahf
inc
push
popf
pushf
int3
or
push
add
lock
or
addr16
mov
add
fcomi
mov
jle
push
dec
add
push
add
mov
outsl
movsl
add
sahf
sbb
adc
mov
imul
clc
pop
xor
xchg
fs
add
cmc
test
lods
sbbb
scas
stc
jge
push
mov
mov
adc
sarl
shr
loop
jnp
mov
xor
mov
test
fwait
pop
int3
and
dec
sbb
sub
dec
sbb
push
pusha
adc
mov
test
sub
fucom
sbb
push
push
fidivrl
cmp
test
add
pop
mov
push
repz
sub
fldcw
insl
jo
push
stos
dec
lods
dec
stos
add
cltd
xor
or
testb
subl
movsb
xor
cmp
out
movsb
adc
push
cmp
and
addb
pop
sub
movl
mov
pop
movsb
jb
lds
adc
xchg
adc
xorl
mov
repz
add
mov
sub
and
add
stc
xor
xchg
and
dec
mov
push
mov
xchg
inc
pop
and
out
pusha
mov
mov
bnd
sub
repz
data16
lods
jae
dec
fstps
push
aas
bound
pop
fadds
push
lods
inc
test
adc
inc
push
lahf
xchg
leave
and
lahf
sub
daa
lock
add
out
insb
xchg
push
je
test
xchg
data16
stos
and
rcll
lea
sub
gs
mov
repz
mov
push
repz
jae
in
adc
mov
mov
jle
mov
test
dec
mov
popf
inc
mov
test
dec
add
in
jecxz
jle
lods
movsb
std
enter
push
int
mov
loop
sub
scas
idivb
sbb
movsl
pusha
lds
lret
in
fisubs
inc
jo
rcrb
aas
dec
and
add
adc
movsl
out
sbb
out
sub
stc
push
jle
scas
pop
mov
stos
and
cmpsl
pushf
dec
add
xor
lret
adc
or
or
fdiv
loopne
xor
xor
aas
xor
adc
inc
std
cmc
xchg
add
shll
jns
pop
mov
inc
xchg
xor
testb
icebp
iret
push
enter
test
or
aas
sbb
and
jle
mov
dec
push
stos
dec
ds
mov
add
rolb
out
mov
subl
xchg
lcall
aas
fs
xchg
jns
push
sahf
jae
jo
dec
in
cmp
dec
call
pop
mov
pushf
and
dec
push
xchg
fs
movsl
loopne
or
ret
cwtl
xchg
xorb
sbb
jle
pop
in
gs
fmuls
push
mov
mov
and
mov
or
data16
enter
sbb
sub
jl
fwait
inc
filds
jb
inc
and
das
mov
cmp
or
cmc
jmp
negb
mov
sub
mov
xchg
std
out
xor
clc
mov
repz
mov
js
sbb
lock
inc
lahf
xchg
jp
ds
sub
push
inc
aad
aaa
in
scas
cwtl
xchg
pop
into
cld
insl
or
fwait
mov
call
dec
and
xchg
and
lods
inc
mov
pop
jl
jle
ret
pop
or
xor
es
out
xlat
pushf
cld
addr16
adc
addb
test
sbb
jnp
aaa
repz
scas
jp
in
daa
inc
insb
mov
sbb
jg
into
mov
xlat
and
mov
rorl
test
je
roll
mov
call
cmp
mov
loopne
fidivrs
test
push
cmpsl
adc
int
outsb
push
sbb
imul
out
idivb
add
lock
adc
push
fwait
xor
sbb
lods
inc
adc
add
push
lea
push
cmp
xor
inc
lret
cmp
iret
aas
sbb
sub
test
adc
int
add
in
adc
mov
mov
aas
jb
or
ljmp
negl
sbb
test
daa
jecxz
popa
jg
outsl
sub
pop
jecxz
aaa
cld
pop
addl
stos
lock
cmpb
and
adc
cmp
mov
dec
fdivl
inc
xchg
add
aaa
repz
mov
or
out
mov
jnp
dec
lock
inc
or
and
sti
shlb
fmuls
cmc
sub
mov
jno
mov
cmpsb
xchg
test
mov
repnz
xchg
pop
jge
sbb
mov
shrl
push
and
sbb
xchg
dec
lods
ffreep
push
adc
xchg
shlb
jno
sub
mov
ds
xchg
sti
lret
jnp
fadds
jb
mov
pusha
sub
xchg
enter
mov
adc
test
mov
xchg
xchg
xchg
mov
mov
add
pop
imul
adc
es
push
cmpsl
mov
pop
sub
xchg
mov
xlat
mov
adc
mov
adc
xchg
sub
sub
cwtl
call
mov
jge
fcompl
aad
iret
or
test
mov
leave
sbb
sbb
jbe
or
insl
push
push
sbb
add
and
xor
mov
jle
dec
and
sahf
inc
sbb
mov
jl
adc
or
lock
mov
adc
ficomps
loop
and
out
outsl
mov
jns
or
xchg
mov
inc
cmpsb
test
and
dec
test
test
xlat
mov
and
mov
test
mov
or
aaa
jle
mov
insl
inc
fidivl
je
mov
xor
xchg
in
inc
enter
mov
mov
xchg
inc
in
adc
mov
jb
pop
fstpl
lret
jmp
push
cmp
xchg
shll
adc
adc
and
mov
xor
lret
lds
ds
and
push
adc
mov
xor
je
sub
int
push
pop
fistps
push
add
dec
gs
cmp
and
inc
sbb
in
movsb
adc
or
sbb
pop
inc
add
insb
xchg
outsb
jp
stc
mov
xor
dec
xchg
test
test
std
inc
aas
and
cwtl
sbb
pop
sbb
scas
pop
movsb
fistpl
mov
jno
xchg
dec
jp
out
cli
scas
lods
push
popf
sti
xor
aas
inc
fs
jmp
jnp
shll
sti
inc
pop
fisttpll
ret
pusha
mov
inc
pusha
incl
test
push
insb
and
lock
out
dec
cmp
add
pop
dec
icebp
sub
insb
push
inc
cmp
int3
aam
push
inc
mulb
mov
pop
ds
push
sub
inc
mov
pop
mov
jg
mov
sub
jp
push
rcrb
les
adc
mov
adc
cmpsl
mov
jns
xchg
lock
cmc
mov
cmp
adc
jmp
dec
add
adc
jmp
jbe
mov
fsubrl
fdivrs
jp
inc
sahf
mov
mulb
jecxz
call
cmp
in
jmp
popa
sub
dec
adcl
in
mov
addr16
jae
mov
xor
in
scas
fisubs
xlat
sub
or
sbb
inc
stc
shlb
loope
sub
popf
das
xor
enter
xchg
imul
xchg
cs
xchg
sub
xchg
jl
adc
xor
adc
shlb
insl
sbb
andl
xchg
mov
stos
inc
sbb
adc
ret
pop
mov
mov
imul
jae
sub
inc
push
mov
add
icebp
add
xchg
cmp
sub
gs
test
mov
paddsb
and
lea
dec
int3
int3
sub
and
jmp
cs
jecxz
xorb
add
cmc
pop
cs
rcr
xchg
lretw
fdivs
pop
jmp
imul
xchg
stc
js
mov
rcrl
inc
jecxz
fnstsw
icebp
daa
add
insb
cs
in
mov
insb
xchg
dec
movl
test
pop
faddl
cmpsb
popa
movsb
mov
fiaddl
addr16
or
mov
jge
dec
test
movsb
xor
inc
xor
adc
mov
jb
ss
adc
lea
add
pop
jmp
inc
movsb
push
mov
or
ret
fldt
or
sbb
bound
pushf
imul
push
bound
sbb
add
out
jle
sbb
test
fucomi
or
rolb
add
xchg
mov
rclb
pop
and
add
xchg
inc
pop
lods
outsb
fildll
xchg
ficompl
cli
rolb
sub
lods
popa
or
add
push
in
pushf
insl
in
sbb
imul
imulb
inc
push
xchg
xchg
hlt
push
jge
mov
testl
sbb
mov
mov
add
mov
cmp
mov
pop
movsb
lods
push
mov
popa
mov
out
and
inc
pop
lret
dec
ds
mov
or
jns
fimuls
push
orb
pop
jmp
or
scas
fimuls
push
lahf
arpl
cs
adc
jmp
jno
cmpsl
pop
das
aam
mov
mov
fisubl
and
xchg
les
outsb
push
nop
push
cmp
test
sub
and
mov
lods
lds
loop
out
push
lds
push
popa
arpl
test
dec
mov
shrb
pop
ds
inc
pop
cmp
clc
mov
sub
icebp
inc
repz
cmp
mov
add
adc
mov
daa
invd
dec
xlat
push
xchg
bound
lret
cli
jecxz
mov
jge
xchg
clc
adc
xchg
adc
jl
pop
cmpsl
sti
sub
stos
mov
sbb
inc
pop
push
dec
arpl
dec
ffree
enter
fisttpll
sbbl
add
stc
mov
mov
rorl
push
or
mov
xor
inc
mov
or
out
ret
jecxz
or
lahf
xor
cmp
jo
scas
nop
mov
jp
iret
sahf
jb
sbb
sub
fstl
pop
or
lds
aas
and
jmpw
add
mov
int
sti
adc
mov
testl
loopne
mov
or
out
sub
fldcw
mov
dec
stos
xor
icebp
decb
jge
jns
push
out
pop
push
xchg
pusha
addr16
push
add
push
ret
sub
out
mov
pop
xor
dec
jp
and
inc
jle
idivl
xchg
cli
xchg
scas
out
shl
popf
cwtl
xor
clc
gs
inc
iret
dec
push
pushf
push
dec
rcrl
xchg
sbb
or
push
pusha
xchg
jo
pop
hlt
cmpsl
int3
push
adc
mov
pop
popf
pushf
sbbl
adc
repnz
fisubl
mov
or
insl
mov
sbb
mov
xor
in
sbb
cli
inc
jae
dec
dec
rol
jb
jns
inc
dec
leave
ss
mov
sub
cmpsb
das
loope
js
jle
mov
pop
mov
fdivl
ret
lcall
cld
out
les
mov
mov
fnstsw
dec
dec
outsl
xchg
fbld
pop
mov
pusha
out
adc
or
rorb
mov
loope
or
add
mov
test
xchg
jmp
pop
xor
or
cmp
insl
insb
testb
js
popf
aaa
int3
pop
push
inc
jno
dec
and
mov
cmc
movsl
xor
adc
or
push
xor
fs
xchg
sbb
cmpl
stc
aam
add
jne
or
jp
xchg
andl
or
pop
dec
or
aad
push
or
xchg
insb
addb
or
cmp
repz
rcr
and
loope
adc
add
ss
xor
fwait
or
sbb
inc
repz
lods
cltd
push
stc
out
mov
addr16
sub
lret
dec
mov
sbb
mov
or
incb
adcb
fcomps
and
add
and
dec
mov
sti
fcoms
in
stc
cs
dec
pmaddwd
int3
inc
popf
pushf
cmp
xor
divb
int3
bound
addr16
jp
es
addr16
cmp
mov
ja
fs
imul
dec
mov
xor
sub
sbb
adcl
push
xchg
popa
loope
push
shll
xchg
aam
fs
lret
jbe
xchg
out
jae
xchg
mov
dec
mov
nop
jae
aam
fs
leave
cmpsl
rol
sub
xlat
js
pop
xchg
push
mov
movsb
pusha
mov
and
frstor
cltd
jg
aaa
clc
inc
lea
mov
mov
pop
mov
aam
popf
lcall
jp
outsl
xchg
fsubrl
in
hlt
arpl
dec
cmp
xorb
call
imul
ret
lock
ss
icebp
pop
stos
jbe
mov
mov
push
addr16
xor
insb
shll
sub
ds
jle
mov
mov
lods
ret
sub
movsl
sti
shl
jl
dec
mov
outsb
dec
and
cmpsb
adc
cwtl
loopne
mov
or
push
push
stc
dec
fs
push
lea
lock
subb
dec
imul
or
pusha
call
ja
mov
icebp
clc
lahf
outsl
dec
rcr
mov
scas
jg
jge
fildl
fistps
jbe
jb
stc
loope
jns
shll
fisttpl
ror
sahf
loope
jbe
push
mov
stos
jle
insl
je
add
jo
jg
fistl
int
test
xchg
ficomps
adc
inc
test
push
xor
mov
mov
call
lahf
pusha
stc
and
mov
test
arpl
sbb
shrb
popa
clc
fnstenv
aas
outsb
inc
mov
imul
push
xchg
outsl
imul
and
xchg
cwtl
lock
daa
imul
divb
mov
ret
mov
xchg
in
cmp
mov
dec
jecxz
ss
jg
xor
outsl
insb
push
outsl
rcll
adc
pushf
mov
int
popf
dec
out
insl
test
dec
std
cmpb
int3
insb
cwtl
cmp
jno
mov
cmp
jmp
pop
test
imulb
imul
pop
jg
frstor
negb
mov
ja
add
lods
add
mov
cs
pop
adc
lods
dec
pop
mov
jecxz
mov
push
lret
cmpsb
jo
out
ja
add
shll
dec
shlb
idivb
adc
iret
addb
adc
mov
into
adcl
hlt
cmpsb
sbb
in
sahf
inc
xchg
dec
in
add
push
cwtl
in
inc
jo
xchg
out
es
fcomi
jb
adc
xchg
cltd
inc
sbb
shrl
aam
inc
dec
dec
pop
xchg
aas
movb
adc
dec
jnp
jle
or
jne
adc
jmp
clc
div
mov
adc
inc
cmp
sub
rcll
dec
pop
insl
mov
dec
aam
pusha
inc
cwtl
mov
push
mov
push
inc
dec
andb
inc
je
lcall
xor
test
add
stos
mov
rol
lock
push
xchg
scas
xchg
into
xchg
jmp
enter
xchg
inc
mov
and
inc
test
inc
dec
repnz
or
xor
or
ljmp
mov
jle
pop
cli
outsl
add
test
arpl
pushf
stos
pop
sbb
adc
jb
insb
insb
xchg
jecxz
mov
mov
sub
dec
out
fldt
pop
ret
adc
loope
or
mov
fimull
gs
ss
mov
jbe
mov
dec
shlb
das
jp
scas
dec
push
daa
lret
mov
pop
jmp
movsb
sub
ss
mov
cmpsl
mov
les
mov
gs
out
lods
xchg
fcmovnb
sbb
add
cmp
or
enter
hlt
push
inc
in
adc
jne
cs
repnz
divb
jo
sub
in
lcall
push
jecxz
xchg
push
lret
or
push
or
and
js
xor
test
pop
nop
mov
cmp
mov
test
pushf
mov
into
push
in
fidivl
into
sbb
xchg
jae
add
jno
xor
push
clc
sub
sub
inc
dec
mov
inc
dec
push
sarl
mov
xor
xchg
fs
xlat
fmull
repz
gs
movsb
out
pop
stc
mov
adc
add
scas
iret
fistps
loop
xor
mov
dec
sar
mov
mov
pushf
jno
insb
icebp
movsb
pop
inc
call
mov
bound
insl
push
ficoms
xchg
inc
roll
lret
jp
mov
adc
repz
pop
pusha
and
daa
inc
daa
test
jo
or
loopne
mov
dec
and
add
out
mov
xor
xchg
imul
cltd
xlat
mov
cmc
cli
cld
push
and
or
insb
inc
push
adc
jge
jb
dec
jl
stos
das
jg
xchg
xorb
and
xchg
clc
push
jb
mov
xchg
inc
cli
lahf
pop
pop
sbb
add
aad
call
xor
push
xor
jmp
stos
test
shrb
mov
gs
add
negl
clc
stc
icebp
testl
std
ret
stc
fld
imul
or
xor
push
mov
and
mov
andl
out
fistps
inc
xor
lds
and
ret
adc
insb
pusha
inc
into
push
pop
lods
add
xor
adc
xchg
dec
mov
fs
test
pop
fcompl
mov
and
fwait
add
xor
jbe
lret
cmp
and
mov
xor
xchg
xor
adc
fisubrl
mov
jmp
and
add
mov
rorl
xchg
jl
sbb
mov
mov
lock
lods
push
or
nop
xchg
pop
sbb
pop
mov
mov
add
inc
rclb
add
movhps
scas
pop
scas
and
mov
fwait
fisttps
sti
or
mov
into
outsl
stos
pop
ficomps
or
imul
movsl
cld
out
jg
mov
xor
jae
mov
xor
xor
jmp
lods
sub
scas
cltd
lcall
pop
push
les
sub
sub
or
imulb
add
sarl
add
pop
jge
mov
mov
sub
mov
xchg
dec
jno
mov
push
iret
mov
testl
sbb
mov
mov
cli
push
and
js
ss
push
je
lret
push
call
or
lds
mov
mov
scas
mov
inc
jge
xchg
adc
aas
stos
xchg
ljmp
loop
cmp
popa
add
and
sub
xchg
scas
xchg
sbb
cmp
pop
jp
push
sarb
push
cmp
push
push
out
fisubl
jns
pusha
xor
lea
inc
pop
or
jmp
pop
stos
int3
out
movsl
cmp
mov
jl
data16
xor
push
mov
xchg
push
push
sbb
jns
xor
repz
xrelease
lds
sbb
iret
es
add
sahf
jne
sahf
mov
hlt
push
mov
mov
scas
push
out
stc
add
leave
add
roll
stc
subb
pop
and
subb
sbb
fsubs
or
nop
push
push
fiaddl
into
loopne
insb
push
dec
pop
pop
sbb
sub
jno
xchg
aaa
xchg
jmp
inc
cs
popa
fldt
xchg
xchg
inc
xor
mov
push
rcll
pusha
test
jge
pusha
add
mov
push
fnstenv
and
lods
into
add
lea
popf
mov
icebp
into
mov
xor
loopne
sub
divb
cwtl
fnsave
adc
dec
out
out
and
jne
mov
fcomps
mov
mov
lds
stos
pop
mov
cmp
jns
outsl
sub
mov
dec
fldenv
mov
adc
cmpsb
mov
cli
dec
ret
sub
xor
testb
outsb
js
jo
dec
jbe
dec
cmc
jns
mov
cltd
jmp
and
stos
cmp
sub
pop
mov
mov
aad
sub
ret
xchg
xor
sub
shrb
add
jge
jbe
inc
push
dec
inc
dec
dec
add
insb
aaa
cmpsb
cld
call
ficompl
popf
push
add
adc
fxam
fstps
out
xorb
ljmp
or
in
scas
adc
sub
inc
mov
cmp
sbb
adc
sahf
xchg
adc
cli
pop
call
mov
mov
lods
adc
lahf
movsl
out
mov
and
fdivs
or
rcr
or
lret
xchg
push
pop
cwtl
adc
jns
fildl
push
insl
jo
sub
loopne
sarb
bound
push
sarb
rol
jmp
shlb
dec
and
adc
bound
mov
cmp
arpl
mov
icebp
stos
cmc
lcall
pop
pop
add
ret
add
jge
hlt
or
xchg
fmul
pop
cmpb
or
pop
mov
aad
mov
push
sbb
adc
pushf
pop
sbb
das
stc
jecxz
addb
ret
push
or
and
mov
pop
cli
jp
aad
dec
lret
mov
sbb
adc
leave
not
jle
cltd
xor
push
pop
or
jbe,pt
call
jp
test
mov
inc
push
push
je
shr
mov
jno
xchg
mov
lcall
arpl
test
nop
mov
cmpsb
movsb
cmc
and
xchg
enter
repnz
xchg
mov
jnp
sbb
frstor
sbb
pop
add
cmpsl
sub
popa
sti
xchg
pop
mov
shll
mov
in
dec
rolb
fildll
mov
xor
xor
mov
stos
push
fs
das
adc
mov
dec
in
sbb
inc
add
push
push
int3
pushl
jecxz
inc
fnstcw
sbb
xorl
dec
xchg
sub
loop
cmp
push
or
clc
test
adc
aas
lret
into
pop
sub
insl
mov
sarl
lret
mov
int3
jae
movsl
lds
dec
xor
push
lods
pusha
mov
add
xor
push
orl
xchg
push
xchg
or
xor
fmul
push
aad
inc
sbb
rcrl
aaa
dec
scas
add
push
xchg
aad
mov
cmp
idivl
shll
out
push
int3
test
fldcw
ja
sbb
dec
aaa
pop
cmp
sbb
stos
jl
lods
xlat
lods
mov
in
pop
int3
int
outsb
cmp
aad
pop
rolb
push
sbb
stc
inc
cli
lret
pop
pop
lea
cmpl
loop
mov
pushl
pop
test
sarb
inc
fcmovne
aaa
out
enter
rorb
les
or
pusha
xchg
cmc
cmpsb
and
dec
jl
loopne
dec
xor
sub
push
pop
loopne
adc
adc
js
rcll
mov
fcmovbe
sarb
mov
inc
push
loop
jp
test
cmpsl
pushf
sti
adc
pop
out
mov
mov
fsubrl
dec
mov
cltd
mov
cmpl
xchg
push
rol
out
aam
jae
xchg
ja
mov
fdivr
out
xchg
iret
mov
push
mov
stc
push
xor
push
fdivp
mov
mov
mov
xor
fmull
sub
fwait
lret
repz
xchg
arpl
bound
arpl
lock
mov
xchg
hlt
dec
or
es
pop
xchg
call
popf
adc
pop
add
cmpsb
push
call
mov
mov
ret
movsb
test
mov
xlat
cmp
lret
cmp
out
cmp
xchg
pop
adc
in
dec
stc
dec
jno
and
push
or
ss
pop
loope
adc
jmp
sbb
xchg
jle
fs
scas
jns
stos
jmp
cmpsl
xchg
and
xchg
push
dec
jns
dec
inc
add
dec
insb
nop
cmp
fwait
lds
push
into
jne
xorb
jp
mov
adcl
xor
xchg
mov
push
mov
xchg
xor
test
pop
fldl
mov
aas
out
cmpsl
jno
mov
push
aad
adc
mov
js
add
cs
push
mov
and
call
lret
scas
push
test
and
lret
sti
enter
aad
push
fisubrl
cmp
xor
cli
mov
jl
xor
pusha
in
pop
repnz
cli
fsubr
mov
jge
jmp
sbb
std
xor
shll
mov
cmc
int3
xchg
mov
into
sub
adc
fisttpl
test
out
shll
adc
pop
mov
daa
cmp
inc
aam
imul
mov
jno
cmp
xchg
pop
loope
inc
pop
and
pop
ja
xchg
sti
leave
ss
jae
jecxz
stos
jb
cs
dec
fildl
sub
and
xor
mov
mov
jo
subb
fldcw
cld
pop
ja
and
shlb
sub
adc
cmp
pushf
or
ret
and
inc
test
adc
lret
adc
imul
dec
xor
mov
pop
test
int
stos
shll
adc
lcall
cmc
jo
arpl
inc
jo
stc
or
shll
and
xchg
inc
scas
aam
scas
cmpsb
outsl
push
out
aam
in
in
dec
lock
add
fbstp
or
cmp
push
aad
dec
cmpsl
bound
or
mov
push
sbb
in
sbb
insb
sub
jg
fidivs
add
cli
das
mov
jo
xchg
mov
imul
fwait
mov
jae
cwtl
lret
pop
inc
sub
int3
popf
push
mov
or
push
cmp
mov
es
leave
jge
fidivs
xchg
movsb
or
sub
xor
decl
lock
sti
movsl
fiadds
mov
das
pop
rcr
into
loopne
xchg
shrl
setns
aad
jge
mov
push
jnp
adc
xchg
scas
iret
lea
sarb
scas
adc
xchg
xor
xchg
scas
fdivl
sub
sbb
jno
jns
pop
mov
pop
scas
xor
sahf
sub
shll
test
dec
mov
movsb
es
cmp
jbe
and
dec
mov
push
out
xchg
inc
or
loopne
xor
lahf
push
in
xchg
lds
ljmp
popa
in
and
mov
lods
adc
lahf
arpl
popf
jge
jbe
jp
cmpsb
push
cltd
in
pop
push
jl
lods
imul
pusha
mov
ss
cmp
mov
push
mov
mov
pop
pop
jnp
negl
scas
fwait
inc
scas
sbb
adc
int
jo
dec
movsb
inc
xorb
insb
sti
xchg
push
hlt
movsl
popa
maxps
es
lds
xor
push
mov
ss
mov
movsl
mov
aaa
lea
cs
cmpsb
xchg
out
int
sub
outsb
daa
or
in
bnd
or
pushf
arpl
leave
add
arpl
js
cs
or
adcl
xlat
mov
aam
lds
jmp
aam
popa
dec
xchg
inc
dec
out
add
add
out
xor
mov
jg
popa
inc
push
add
jns
xchg
mov
call
repz
ficomps
mov
push
pop
push
cld
pop
inc
mov
stos
cwtl
pop
gs
cmpsb
push
push
fs
push
inc
add
dec
mov
xlat
pop
xchg
or
xchg
gs
mov
mov
imul
and
nop
dec
cmp
dec
xor
mov
out
stc
push
out
insl
fs
sub
adc
je
mov
fmull
lods
mov
in
dec
leave
push
ja
imul
sub
out
stc
movsl
inc
gs
out
stos
in
or
jmp
mov
ret
lods
lret
sbb
xor
cmp
ja
or
xchg
jecxz
fsubl
inc
jge
xchg
es
das
and
cmp
dec
sbb
push
pop
andb
push
mov
aaa
cmp
sbb
jg
dec
popf
imul
repz
dec
mov
or
jne
aam
mov
jbe
scas
std
push
xchg
mov
ret
loop
mov
cld
in
mov
stos
in
dec
aaa
mov
test
mov
ljmp
ret
cmpsb
jb
dec
aas
push
xchg
dec
or
test
sub
repnz
and
mov
insb
lds
pop
xchg
mov
nop
cltd
out
inc
jo
outsb
inc
sbb
xor
xchg
cmp
lock
sbb
dec
mov
or
push
or
pop
cmp
or
xor
fdiv
sbb
shrb
out
jg
fiadds
clc
pop
adc
mov
jno
sahf
ret
mov
das
sub
inc
pop
repnz
push
rcr
roll
jns
pop
dec
sbb
push
adc
std
out
adc
or
cs
push
and
addr16
mov
std
int
xor
adc
lcall
jno
lock
push
ljmp
lods
pop
sbb
fmuls
gs
push
sbb
inc
icebp
sahf
mov
xchg
pop
jge
sti
push
add
repnz
out
outsl
mov
sti
jecxz
or
jp
mov
out
dec
lahf
pop
and
add
leave
ds
push
addr16
inc
addr16
dec
jne
mov
xchg
jb
add
push
jne
adc
mov
js
and
push
jl
movsl
mov
cmp
pop
jecxz
dec
lds
fdivs
jbe
add
imul
mov
cmp
pop
cmp
int3
and
and
mov
inc
jns
fmull
or
mov
loopne
and
ja
lahf
dec
cmp
jno
icebp
jl
movlps
lcall
fsub
jmp
jl
push
xor
fsubr
dec
fistpll
mov
adc
sahf
inc
mov
sbb
adc
rcrb
inc
dec
cmpsb
inc
nop
pop
aaa
or
leave
add
xor
out
pop
lret
inc
inc
imul
push
push
fcmovnb
ja
test
scas
arpl
pop
and
fldcw
and
mov
aas
or
push
test
pop
insl
icebp
push
inc
fwait
push
pop
mov
fiadds
jge
sub
mov
mov
rep
xor
push
ficomps
icebp
leave
out
push
insb
lcall
int
dec
and
imul
mov
mov
jno
inc
mov
repnz
jg
cmp
ja
rcrb
mov
xor
cld
adc
js
jno
pop
gs
ficoms
into
xchg
sbb
ljmp
xchg
int
xchg
xor
scas
fcmovnb
push
mov
xchg
into
das
cwtl
push
pop
mov
mov
loop
arpl
pop
les
adc
cmp
xchg
and
lods
leave
mov
push
jne
fwait
lock
jae
mov
cmp
nop
jmp
jp
gs
pop
lods
or
sbb
mov
cmp
outsl
out
jb
outsl
add
bound
jl
or
or
adc
lods
sub
std
and
mov
jno
sti
fcomip
adc
mov
iret
shr
lret
mov
int3
mov
cli
xchg
adc
pop
pop
push
pop
cwtl
daa
cmp
lahf
add
int
adc
sahf
sbb
cmp
cmp
int3
icebp
fnstsw
mov
push
xor
mulb
push
in
out
ja
adc
mov
nop
xor
sub
pop
fldl
sub
gs
test
pop
sbb
jp
shll
mov
dec
mov
mov
sbb
arpl
in
add
jp
pop
jnp
cmp
rcrl
movsl
lods
cmp
fnsave
popa
sbb
lahf
icebp
loop
subb
push
or
ss
pop
inc
in
es
mov
sub
jle
adc
mov
addb
lock
lret
or
fcomps
icebp
std
add
sahf
testb
out
xlat
dec
lock
jp
popf
sub
ret
and
inc
mov
jnp
in
push
fmuls
clc
and
dec
dec
fildll
push
arpl
add
add
mov
je
or
ljmp
fimuls
and
xchg
dec
nop
xor
dec
jnp
xchg
pusha
adc
jmp
aam
fsubrl
jbe
jne
lcall
cmp
aaa
loopne
test
pop
push
xchg
cltd
inc
insb
mov
roll
fbld
xchg
xchg
out
adc
dec
pop
cmpsb
jecxz
mov
fildl
sub
das
lods
jno
lahf
and
in
push
incb
fsts
jae
push
and
xor
mov
cmp
lcall
mov
xchg
imul
fiaddl
out
pop
js
push
shrb
pop
data16
loop
in
shlb
lret
pop
inc
pop
fsubrl
push
fldcw
inc
test
iret
je
cmp
sahf
aam
out
insl
addr16
mov
add
es
adc
or
and
or
nop
jae
pop
sub
filds
add
adc
mov
mov
loope
inc
sbb
push
in
dec
test
xchg
pop
loop
dec
pop
adc
mov
cs
rol
rol
loope
inc
test
out
fidivs
popa
out
fcoms
ljmp
push
pop
add
stos
cmp
jmp
sub
lods
loop
shrl
pop
and
insb
jle
aad
out
jo
xor
xor
repz
fwait
leave
and
out
xchg
loope
add
shr
push
pusha
stc
mov
or
sti
jb
jp
std
ljmp
sahf
inc
jne
xor
fwait
pop
jbe
pop
xor
push
mov
pushf
jecxz
jbe
repz
push
cmp
cmc
xchg
lds
loopne
es
jbe
popa
ret
pop
bound
inc
xchg
fistpl
sti
movsb
idiv
into
notl
mov
dec
sub
pop
int3
cmpsl
sub
mov
push
faddl
pop
adc
lods
jl
pop
out
mov
dec
das
mov
insl
push
imul
mov
inc
leave
push
cmp
cmp
pop
jb
sbb
sub
out
or
cmpsl
sbb
cmc
clc
add
sti
xchg
sub
jg
mov
sbb
out
cmp
incl
push
in
add
fnsetpm(287
imul
je
mov
stc
popl
cmpsb
addl
mov
add
insb
outsl
pop
aaa
lods
jmp
movsb
pop
xor
out
push
fidivl
xchg
inc
fldt
jl
setae
mov
mov
pop
mov
dec
mov
out
pop
add
inc
or
dec
and
adc
addr16
or
icebp
and
cmp
test
cmp
andl
push
push
stos
inc
or
lods
add
arpl
inc
adc
sub
mov
lcall
hlt
jb
mov
xlat
lret
jne
cld
or
jb
mov
inc
mov
test
nop
or
push
ja
jle
jbe
cmc
in
and
test
push
sbb
rorb
dec
and
repz
mov
mov
loope
jp
cmp
and
xor
inc
idivb
aaa
loopne
aad
cmc
sbb
scas
out
pop
sbb
std
xlat
cmp
ljmp
stc
xchg
push
ret
cmpb
push
imul
sbb
mov
lods
ss
mov
jno
push
gs
int
adc
add
mov
les
pop
pop
std
scas
dec
sbb
xchg
mov
dec
cmpsl
repz
frstor
sbb
das
jle
cmp
aas
nop
xchg
inc
and
mov
sub
cmp
pop
pop
pop
adc
jo
std
jg
inc
subb
clc
fcoms
cmpb
hlt
arpl
loopne
lea
fsubrp
je
out
ret
std
and
fldcw
sub
adc
loopne
jns
adc
jg
xchg
and
push
loopne
scas
push
xchg
sub
bound
divb
imull
lret
rolb
mov
cs
ret
shr
adc
lcall
cmp
in
dec
or
test
jp
std
lods
insl
mov
add
das
movsb
cli
and
sbb
push
push
ljmp
xchg
fldl
xchg
mov
adc
inc
adc
push
movsb
fdivr
int3
and
xor
je
sbb
sbb
mov
mov
pushf
aam
in
rcr
lret
lods
cwtl
fs
in
cmc
fistps
cltd
cmpsl
dec
push
mov
jo
pushf
cmpb
mov
dec
add
xchg
cmp
in
fwait
leave
add
loopne
shrl
out
lods
and
adc
pop
outsb
fisubl
leave
sub
pop
lods
sub
imull
jae
repz
stos
xor
insb
push
cmpsb
mov
cmpsl
sub
mov
mov
pop
dec
sub
push
fdivp
xchg
nop
mov
sbb
ret
outsb
call
jbe
jae
xor
dec
jge
cmpsl
xchg
icebp
out
mov
das
pusha
gs
pop
mov
aam
fcomps
lcall
outsb
movsb
dec
out
aaa
cmp
lret
xchg
jo
inc
inc
mov
sti
xchg
popf
test
fcoml
call
repz
sarb
lods
and
sbb
stc
inc
les
push
cmpsl
adc
sahf
popa
and
loopne
repz
sbb
xor
ss
lds
pop
push
arpl
mov
out
in
and
es
and
shll
cmc
icebp
jnp
imulb
cmp
cltd
les
ret
pop
jns
fimull
test
nop
daa
sub
cld
popl
xchg
mov
leave
imull
xor
lret
sbb
popw
cmp
lock
hlt
fs
dec
sbb
cmp
cmpl
in
cltd
mov
pop
and
rol
dec
sub
aad
rclb
sbb
jbe
sbb
sarb
xor
push
sub
popl
in
mov
loop
daa
sbb
pop
pop
or
xchg
jnp
jmp
push
inc
inc
enter
add
or
mov
addr16
clc
insl
inc
xor
sar
mov
fiadds
jo
lret
sbbl
xchg
shlb
pushf
pop
sbb
outsb
dec
dec
and
pop
loopne
in
push
pusha
mov
xchg
push
test
mov
mov
call
lea
in
dec
pop
and
mov
sbb
loop
lock
jno
mov
sub
or
fstps
jge
and
and
push
int
pop
mov
mov
enter
loope
inc
inc
cmp
inc
jle
js
movsl
sbb
lcall
cli
xchg
aad
sbb
mov
sbb
daa
sub
fwait
xchg
js
test
cmp
je
popa
imul
outsl
dec
idivl
jmp
mov
pop
cmp
add
or
test
int
icebp
sbb
bnd
pop
sbb
push
pop
xchg
mov
cmc
popa
push
pop
pop
jbe
dec
sub
arpl
mov
cmp
mov
xor
outsb
mov
push
mov
push
cmp
jns
mov
mov
lds
movsl
sbb
rcl
test
dec
dec
cwtl
cld
scas
fldcw
shl
call
into
divl
pop
pop
cmp
pop
or
jecxz
mov
jmp
sub
pusha
notl
sub
jnp
push
mov
pop
fstpt
fucom
outsl
out
int3
and
cmp
xor
xor
aaa
cmc
adc
pushf
enter
jne
sbb
js
test
jecxz
inc
test
mov
xchg
push
mov
movsl
dec
adc
fbld
rolb
mov
sbb
lods
in
shrl
xor
mov
fsubrl
adc
or
jb
xor
inc
sbb
xchg
test
inc
xchg
inc
pop
aas
pop
fsubrs
pop
stos
inc
orl
cmpsb
insb
mov
rcll
lcall
push
fcoml
mov
fisttps
inc
push
sbb
iret
pushf
js
mov
lods
sbb
outsb
in
mov
push
sub
fmul
cmp
jl
sbb
bound
or
and
notl
lods
jno
xor
filds
loop
push
adc
lods
imul
pop
mov
add
enter
mov
jnp
pop
mov
pop
repnz
add
into
push
xchg
mov
fdivrl
in
jno
add
add
jae
ret
mov
les
and
jp
jno
les
dec
cmp
jb
mov
mul
dec
cmp
loopne
roll
cltd
cmp
movsl
mov
out
jmp
pop
fwait
push
fninit
ds
dec
cld
xorl
and
xchg
jecxz
fcoms
cmp
mov
cmp
nop
xor
nop
les
imulb
mov
jmp
dec
int3
mov
jb
mov
std
or
lahf
ljmp
xchg
fwait
xchg
popf
scas
into
movsb
xorl
add
mov
mov
sub
jl
pop
fs
push
jnp
cmpl
test
mov
push
adc
pusha
into
cmpb
jbe
punpckhdq
push
and
inc
cmp
add
xor
pop
pop
insl
and
daa
xchg
or
aad
mov
xor
fnstcw
das
pop
ret
pop
pushf
loop
xchg
jno
popf
rorb
inc
dec
mov
in
loopne
add
cwtl
into
sbb
inc
sbb
sub
sahf
decl
filds
sub
outsl
xchg
imul
aas
imul
jp
jns
fs
mov
cmp
lret
aas
shlb
nop
hlt
popa
cmc
xchg
push
mov
nop
imul
sti
jmp
test
cmp
in
sbb
stc
add
pop
jmp
push
dec
xchg
jg
pop
enter
xor
movsl
out
mov
mov
mov
and
push
or
bound
fldt
push
movsl
pop
lds
outsl
jae
add
sub
and
sub
adc
pop
mov
loopne
mov
dec
daa
movsl
mov
jg
pushf
mov
mov
dec
mov
sub
pop
js
das
or
mov
inc
adc
mov
in
inc
mov
jl
adc
xor
dec
andl
icebp
sahf
negb
push
sub
iret
jne
jbe
out
mov
insb
jge
ret
xor
and
in
scas
call
sub
or
orb
dec
xlat
xor
jge
and
jne
gs
sub
mov
inc
and
cmp
and
jp
xor
xchg
jb
daa
jecxz
adc
cmc
lock
shr
mov
inc
jns
mov
movsb
shlb
int
imul
xchg
jne
sub
lods
js
jns
or
test
jg
je
mov
pop
aam
pop
sub
sbb
pop
in
in
adc
or
movsb
popa
popa
cmc
data16
sbb
das
pop
mov
sub
push
inc
xor
cs
add
adc
fcomip
clc
xchg
cmc
shrl
xor
or
arpl
xor
or
in
add
or
or
les
adcl
or
jnp
inc
sub
movsb
cmp
and
bnd
test
pushf
sarb
movsb
add
out
push
fadds
js
std
push
lret
repz
jo
sti
es
or
adc
ljmp
incb
addr16
xchg
mov
shl
xchg
movl
jl
mov
out
sbb
cmp
stos
dec
or
test
aad
insl
cmp
nop
jns
hlt
adc
test
push
mov
pop
repz
cs
jge
mov
and
gs
in
lods
jp
mov
cli
fdivrl
cmc
xchg
rclb
mov
shl
fs
adc
inc
mov
mov
pop
faddl
cld
jae
testb
rcrb
cli
shll
xchg
or
jns
or
mov
fadds
mov
lea
xor
jno
dec
xor
int
fistpll
xor
data16
lahf
mov
lock
or
xchg
mov
inc
pushf
mov
das
push
and
rcrl
ret
xor
ljmp
mov
into
fwait
push
mov
mov
in
mov
je
push
pushf
push
mov
fcmovu
fmul
pop
imul
adc
aad
and
or
pmaxub
lret
push
xchg
mov
arpl
cmp
cwtl
std
clc
pop
or
stc
nop
mov
dec
dec
pop
repnz
lea
fistps
leave
aaa
adc
aaa
or
cmp
lret
mov
cmp
mov
ss
movsb
xchg
mov
pushf
add
push
clc
lcall
sub
jl
xchg
lea
add
cmp
jnp
push
cli
cmp
jb,pt
sbb
lret
test
lahf
adc
mov
stos
xor
call
mov
push
mov
adc
movsb
or
jne
cmp
adc
adc
sub
inc
adc
push
mov
sub
repnz
std
cmp
jb
inc
testl
xchg
ljmp
xchg
and
pop
insl
push
pop
shl
call
enter
xchg
test
mov
sub
sbb
sub
mov
or
shufps
xor
sub
adc
fimuls
sub
push
xor
fwait
sbbl
xchg
js
lcall
sbb
in
push
push
pop
cltd
xorl
xchg
xor
and
sbb
out
arpl
or
stos
daa
movsb
dec
aad
outsb
pop
test
jb
gs
test
dec
and
push
mov
sub
fwait
clc
add
sub
pop
dec
cmp
adc
scas
mov
bound
imul
push
cmpsb
cld
lea
out
mov
test
or
in
ja
mov
les
hlt
rcl
add
cwtl
mov
mov
pop
je
imul
cmp
lods
cwtl
or
sub
sbb
scas
push
std
inc
dec
sub
sub
sbb
stos
jns
shrl
mov
dec
adc
and
push
ss
sub
lahf
mov
push
adc
pop
jecxz,pn
lret
push
lahf
inc
push
or
jmp
fnsave
mov
mov
insl
or
insl
out
jl
dec
pop
and
enter
or
addr16
stc
xchg
jne
xor
test
sbb
stos
cmp
push
jae
sub
outsb
pop
jae
movsb
inc
lods
sbb
cs
movl
mov
mov
imul
decl
xchg
sub
rorb
js
stc
dec
adc
aaa
mov
aad
lcallw
dec
jno
cmp
pop
cmp
jb
push
add
in
or
rorl
xchg
loopne
and
mov
test
push
mov
lock
mov
pop
ret
cmp
add
pop
fdivr
pop
dec
xor
mov
adc
inc
lret
daa
fstps
sbb
loope
and
das
movsl
stos
or
and
and
jecxz
les
or
add
fistpll
push
pop
xchg
stc
fstpt
mov
stc
mov
cmc
cmpsl
sbb
pop
into
popw
dec
sbb
add
cmpsb
dec
fbld
jl
xchg
dec
adc
or
inc
inc
pop
insb
or
and
icebp
and
xchg
in
subb
add
cmp
movsl
push
jb
xor
out
icebp
jle
pushf
inc
jae
sbb
daa
add
out
sub
pop
into
sti
imul
xchg
adc
xor
cmp
mov
pop
out
xor
mov
ret
xor
sub
and
lods
insl
mov
jg
jbe
add
sub
dec
sahf
add
jbe
mov
les
test
out
stc
adc
jp
or
cmc
and
xor
pusha
rcll
mov
out
pop
mov
out
mov
mov
push
vmovshdup
mov
dec
adc
loop
repnz
movsb
mov
insb
icebp
mov
jno
sbb
jne
sbb
inc
jnp
leave
stos
pop
xlat
adc
mov
sub
out
stos
sub
jne
push
ljmp
repnz
dec
fs
hlt
cmpsl
rcr
mov
adc
xchg
jbe
add
mov
repnz
xchg
mov
ds
data16
icebp
adc
movsb
mov
sti
fidivs
push
sbb
sbb
movd
lods
pop
adc
push
in
jg
sarb
jl
pushf
stos
sahf
fsubrs
insl
loop
inc
out
push
mov
cmp
add
cmp
mov
push
mov
popa
sbb
fs
cltd
loope
adc
in
and
mov
js
iret
add
jbe
jl
push
cwtl
xor
sub
mov
rorb
lods
pop
cs
cmp
push
outsb
mov
decb
fwait
pop
inc
rolb
add
xor
into
jecxz
roll
inc
jns
je
fsts
gs
repnz
test
ret
pop
pop
pushf
xchg
ss
shrb
mov
or
xor
xchg
push
pusha
in
sub
push
and
nop
call
sbbl
stos
loop
loope
mov
inc
xor
jle
outsb
rcl
jo
call
fimull
test
inc
push
cmpsl
in
adc
pop
pop
stos
inc
jmp
lahf
call
fidivs
jp
xchg
jae
push
popa
jg
or
je
fisttps
dec
push
jle
xchg
jecxz
mov
je
jge
mov
adc
fmuls
test
push
popa
int
push
and
add
mov
sbb
pmullw
scas
stos
add
sub
mov
cmp
push
arpl
sbb
pop
xor
jge
mov
sbb
int3
mov
leave
stos
inc
stc
inc
imul
xchg
bound
jge
out
ret
nop
leave
mov
aaa
pusha
loope
mov
insl
fcomi
test
push
fnsave
or
cmp
fistpll
rol
repz
pop
gs
test
sub
mov
inc
inc
or
fldt
lret
mov
insb
push
in
cwtl
mov
xchg
shrd
lods
insl
and
xchg
inc
push
imul
loop
mov
sbb
or
cmp
xchg
fsubl
push
push
ljmp
lret
mov
test
sbb
dec
add
out
insl
test
cltd
ret
rolb
sub
mov
fdivr
mov
pop
push
movsl
xchg
pop
add
out
sub
dec
adc
cmp
bound
daa
inc
rcr
int3
push
dec
insb
jno
arpl
pop
push
or
jbe
inc
dec
mov
pop
movsl
fistpl
jl
movsb
jge
mov
fwait
xor
test
pop
or
pop
enter
int
mov
inc
ss
shrb
rdtscp
mov
inc
jmp
cwtl
xlat
pop
or
sbb
ljmp
pop
ljmp
icebp
jb
insl
pusha
notl
fwait
pop
movsb
das
pop
les
fisttpl
das
pop
imul
dec
inc
jb
sahf
outsb
popf
das
outsl
rcl
pop
lcall
rcr
scas
call
pop
popa
sbb
bound
push
jecxz
jmp
mov
je
pop
pop
popa
xor
popa
push
add
inc
mov
out
push
enter
loope
adc
orb
pop
mov
jne
dec
mov
pop
call
cltd
addr16
jmp
and
add
jg
dec
clc
inc
and
xchg
stos
xor
jbe
add
or
dec
insl
lods
inc
cltd
mov
mov
pop
xchg
scas
mov
adc
mov
xchg
mov
clc
mov
xchg
pop
scas
shufps
adc
clc
testl
sub
ja
lods
pushw
ret
lahf
sub
rorl
aam
mov
subb
mov
test
repz
insb
xchg
sub
out
mov
and
mov
inc
enter
and
lcall
lock
jmp
lea
push
test
dec
push
pop
ret
fcoml
fimull
fwait
sbb
mov
shlb
push
pushf
mov
xadd
cmp
or
xchg
mov
mov
pusha
add
sub
adc
roll
rolb
imul
push
jmp
jmp
mov
pop
or
outsb
add
pop
sar
jnp
jns
daa
outsl
xchg
call
or
in
call
mov
pop
sti
and
adc
orl
addr16
lahf
pop
push
jmp
inc
fldt
adc
fs
fs
scas
jecxz
popf
movsb
mov
dec
iret
lret
es
repz
mov
xor
mov
push
xlat
fdivl
imul
and
test
cwtl
sbb
sbb
in
dec
iret
cs
add
sub
cmp
xor
xchg
mov
or
loope
sti
xor
push
dec
pop
mov
fs
pop
dec
pop
or
mov
mov
jp
sbb
scas
gs
sub
sarb
aaa
and
lds
mov
fisubl
add
inc
dec
pop
aad
outsl
nop
ficomps
or
dec
xor
xchg
testl
and
xchg
xlat
jecxz
hlt
fs
add
inc
jne
inc
mov
cmp
test
inc
outsb
dec
scas
xor
in
cmpsl
fcmovu
loopne
xchg
xor
enter
mov
push
push
out
push
mov
pop
into
int
lcall
mov
xor
jl
push
inc
stos
leave
aas
popa
push
aas
leave
popa
mov
mov
and
shl
test
popf
stos
jecxz
xchg
mov
negb
inc
push
mov
daa
addr16
insl
cmc
mull
and
repz
cmc
mov
iret
cli
aam
inc
call
adc
pop
push
scas
mov
pop
xchg
movsl
hlt
int
push
push
mov
andps
pusha
in
xchg
add
mov
jge
xor
or
outsb
in
cmpsl
lds
imul
outsl
xchg
xchg
mov
loop
dec
xor
ja
cmc
mov
sub
pop
inc
addr16
dec
clc
push
jae
push
jp
imul
in
clc
loope
and
clc
movsl
stc
imul
xchg
xlat
push
aad
inc
mov
or
in
lock
jns
xchg
cmc
and
push
xor
add
xor
ds
cmp
or
jno
int
xchg
es
sbb
out
cmp
mov
jmp
xor
jle
inc
pop
xchg
ja
andl
movsb
pop
xchg
mov
jg
shlb
pop
add
sbb
mov
ja
sub
and
lret
out
or
negl
dec
xor
sub
mov
cmpl
ss
push
test
mov
ja
imul
std
mov
or
call
subb
add
pop
xchg
mov
ja
xchg
push
popa
inc
mov
into
jns
and
xor
ret
jge
sarb
sub
mov
out
bound
repnz
mov
das
adc
pushf
cmp
sbb
jp
pop
add
fcomip
cmp
nop
xor
sbb
mov
push
outsb
sahf
shll
inc
push
je
push
imul
dec
sti
mov
sbb
push
sbb
adc
addl
test
loopne
shlb
mov
mov
aad
add
sub
push
ret
nop
inc
dec
xor
or
fldenv
xor
push
add
addl
pop
and
popf
adc
and
addr16
imul
and
sub
pop
stc
mov
xor
dec
daa
mov
xor
sub
shrb
fwait
add
jecxz
nop
sub
add
push
mov
and
lea
xchg
inc
ds
xchg
pop
fs
jne
repz
xchg
es
stos
inc
dec
or
rolb
xchg
aaa
sbb
stc
jbe
pop
nop
pop
cld
push
mov
hlt
pop
stos
popf
aas
push
scas
aaa
cmp
mov
dec
mov
mov
out
test
leave
repz
sbb
repz
and
inc
add
lods
pusha
or
shrl
ret
sbb
adc
mov
push
imul
fdivp
sbb
sti
daa
jae
stc
add
stos
mull
test
mov
cld
mov
or
push
xchg
cmpsb
fimull
adcl
adc
cmp
xchg
or
test
push
popl
push
sub
jbe
inc
out
inc
fcom
xor
fs
divl
mov
jl
ds
xchg
aas
stos
in
sbbb
xchg
xor
sbb
cmp
mov
and
push
xchg
cmp
mov
jno
sub
inc
jp
sub
gs
pop
addl
lcall
fdivrl
push
daa
lret
aam
cmc
inc
aaa
out
shlb
dec
mov
mov
and
lret
mov
lods
leave
in
jp
jns
cli
push
xchg
adc
xor
stos
dec
sub
cmp
mov
mov
imul
cmp
sub
imul
sbbb
push
stc
and
cli
jmp
xchg
cmp
icebp
and
ds
dec
cmp
loope
push
adc
pop
clc
and
sbb
sbb
jle
movsb
aaa
iret
aad
push
out
leave
jmp
push
loop
test
aam
or
push
or
sahf
mov
rep
fldt
stc
mov
roll
cltd
mov
mov
cmp
aas
cmpsb
insb
jg
adc
das
add
xchg
sbb
mov
test
cmc
jg
mov
iret
mov
jne
cs
add
cltd
sub
mov
lcall
mov
push
adc
adc
jnp
movsb
jo
lock
sbb
pop
mov
jp
ret
push
mov
repnz
fildll
mov
dec
push
jge
stos
pop
cmpsb
push
jbe
incb
sub
push
roll
pop
mov
icebp
pop
aaa
in
pop
es
sbb
scas
push
test
aaa
aam
mov
push
into
repz
call
inc
pop
inc
pop
pop
jmp
aam
stc
lret
leave
std
add
stos
and
cmp
fildll
jb
sub
outsb
loop
in
inc
fcomp
push
mov
fdivp
mov
imul
pop
inc
cmp
jns
shr
and
cmp
aam
stos
lods
test
data16
aas
jb
stc
xor
repz
lea
pop
mov
scas
mov
pop
cmc
ret
out
movsl
add
addl
mov
es
xchg
out
pop
inc
sahf
stos
mov
ja
push
dec
enter
xchg
xor
jno
insb
stos
mov
adc
adc
mov
xchg
mov
dec
xor
dec
mov
in
mov
enter
popf
pushf
push
sbb
and
mov
sub
push
jle
fdivrp
cmp
cli
jl
mov
xor
sub
lods
lds
mov
jl
dec
pushf
ss
in
sbbb
repz
and
pushf
nop
loope
sti
jno
dec
xchg
jno
scas
in
xchg
xchg
negl
add
jp
mov
inc
mov
popf
ror
dec
adc
add
pop
add
jo
mov
push
and
mov
xor
mov
mov
clc
xor
pop
jns
add
data16
ret
push
cmp
lock
inc
dec
inc
outsb
adc
sub
xor
roll
mov
lahf
sbb
popa
scas
xor
fnstcw
adcl
or
mov
mov
jae
shlb
dec
sbb
pop
and
xrelease
nop
testl
or
or
xchg
cld
sbb
adc
jb
mov
lock
loopne
jne
and
cli
mov
adc
leave
pop
push
or
imul
arpl
lret
pop
mov
mov
xor
aaa
jb
sar
in
daa
jnp
movl
insb
sahf
test
and
mov
cmpsl
enter
iret
fcoml
leave
xorl
mov
xchg
pop
xor
xlat
dec
push
mov
cmc
lods
adc
in
xchg
add
jo
out
daa
mov
or
loopne
stos
lds
iret
add
xchg
ss
aam
jae
dec
or
xorb
call
in
add
mov
int
fsubrs
jecxz
out
pop
fs
mov
movsb
mov
sbb
add
push
popl
and
inc
or
xchg
je
add
pop
scas
pop
fnstsw
jns
cmpb
dec
aam
ret
inc
jno
sar
loop
por
mov
xor
imull
pop
push
fsubl
mov
mov
pop
cli
hlt
pop
xor
add
fwait
jbe
aad
adc
xchg
or
imul
xchg
cwtl
fnstsw
fmuls
hlt
adc
stc
mov
ljmp
insl
arpl
fstps
push
subps
shll
push
jns
mov
dec
sub
clc
mov
xchg
and
test
ret
arpl
pop
sahf
jecxz
addl
jecxz
jle
gs
push
sbbl
mov
lock
lret
cld
jg
inc
and
or
jecxz
ret
ret
xor
iret
and
xor
jnp
iret
jge
sarl
and
mov
fiaddl
sbb
xchg
adc
pop
and
fidivrl
mov
cmpsb
mov
shl
mov
aam
movsl
mov
test
enter
hlt
sbb
iret
pop
cld
fimuls
icebp
das
call
ja
insl
xchg
popf
lea
rclb
icebp
xchg
insb
mov
les
hlt
xchg
push
mov
ds
jno
mov
lds
xchg
mov
mov
roll
mov
xor
pop
fwait
fs
out
ljmp
inc
loopne
xchg
mov
or
and
clc
inc
add
mov
mov
iret
mov
loope
mov
enter
push
mov
sbb
lret
bound
adc
aam
cmp
sbb
in
repz
or
aas
dec
or
insl
lock
adc
or
fists
test
xor
push
or
cmp
ror
es
int
fcmovnu
or
and
aad
pop
imul
cmpsl
mov
adc
lahf
inc
int
cltd
or
outsl
aad
mov
adc
pop
mov
stos
push
test
cmp
scas
mov
ret
pop
mov
or
mov
adc
push
repnz
sti
lcall
pop
pop
mov
test
in
loopne
mov
mov
iret
mov
movb
sub
leave
in
or
pop
xor
mov
push
pop
mov
mov
jo
pop
sbb
or
dec
out
loopne
xchg
dec
nop
dec
pushf
mov
testl
and
and
hlt
or
push
mov
outsl
jecxz
inc
insb
pop
mov
xor
adc
cli
add
call
pcmpeqd
enter
and
cmpsb
cmp
jae
or
sbb
in
push
add
jae
jmp
in
sbb
mov
pop
adc
sub
inc
xchg
sbb
into
movsb
imul
lret
or
sub
dec
enter
sub
movsb
sbb
cmpsb
negb
jl
shlb
mov
xchg
test
and
xorb
addr16
xor
loope
jne
fnsave
dec
loop
mov
xchg
pop
or
sar
jg
sbb
adc
aaa
aam
ss
fwait
xchg
dec
cmc
enter
mov
and
outsb
mov
pop
add
or
les
sbb
inc
and
push
call
adc
andl
test
xchg
loopne
xor
mov
inc
pop
rorb
xor
push
scas
jo
pop
es
mov
aas
mov
hlt
xchg
jmp
pusha
mov
rorb
xchg
xchg
jbe
xorb
or
mov
dec
in
jmp
inc
imul
out
adc
mov
pop
lods
pop
sub
dec
test
xchg
faddl
out
fidivrs
dec
jne
sar
clc
aam
mov
clc
arpl
fs
cmpsl
sbb
mov
cmpb
fistps
sbb
cmpsl
and
dec
adc
cmpsl
dec
inc
fisttps
cmpsl
or
roll
aas
iret
inc
mov
mov
scas
repz
inc
dec
out
dec
ja
mov
repz
imul
cmc
sub
sahf
pop
pop
jno
fdivl
out
xor
dec
push
dec
out
iret
mov
dec
dec
sub
cli
lods
mov
and
das
rclb
repz
and
movsl
test
sarb
insb
xchg
movsb
add
dec
jp
add
sti
mov
push
xchg
cmp
out
push
lcall
test
and
fldenv
jo
rcrb
leave
and
jp,pn
mov
sti
test
sbb
lds
cld
push
xchg
and
mov
jmp
push
and
push
stos
cmp
mov
xor
mov
imul
sbb
in
aam
add
repnz
pop
add
mov
jge
in
rcrl
pop
int
gs
int
adc
cltd
and
das
cmp
int3
xor
lods
and
sbb
dec
insl
mov
jo
dec
je
jecxz
cmp
fs
or
leave
popf
xchg
sub
adc
sarb
push
cmp
call
jns
movsb
dec
mov
outsb
mov
stos
imul
cmp
or
cltd
and
sbb
loope
jle
cmpl
cmp
rcrb
xchg
mov
and
push
fidivrs
mov
fisubs
xor
push
clc
rorl
sarl
sub
xor
xchg
out
jg
flds
push
pop
rcr
add
push
add
mov
mov
or
fcomip
or
clc
js
adc
dec
sub
aas
mov
dec
sub
cli
out
shll
mulb
mov
cmp
sub
inc
mov
pop
fwait
sub
aas
mov
imul
lds
jns
mov
cmp
imul
fs
xor
lcall
cltd
out
sbb
and
xchg
bound
lret
out
hlt
stos
cld
xchg
mov
mov
loope
xchg
shl
pop
adc
mov
loope
dec
adc
ds
jnp
je
ficompl
out
in
jle
adc
sbbl
lock
jnp
enter
or
je
jb
mov
pop
sbb
xor
xor
movsb
fnstsw
negl
hlt
mov
ret
mov
outsl
mov
jns
inc
push
sahf
or
pop
cmpsl
pop
push
mov
mov
jnp
push
out
mov
into
mov
sbb
jne
jle
mov
and
enter
push
push
sub
push
frstor
jmp
inc
cmp
hlt
dec
push
add
xchg
jae
cwtl
ret
adc
xor
test
add
mov
xlat
mov
loope
sbb
xor
fists
add
jne
inc
add
cmpsl
jmp
mov
jae
jb
mov
lcall
test
push
xor
stc
adc
test
hlt
scas
enter
frstor
dec
scas
movsl
pop
push
cmp
dec
out
xor
cmp
loopne
fisubrl
repz
das
insl
jecxz
mov
inc
inc
scas
xchg
jge
sahf
dec
sub
pop
fisttps
inc
push
inc
mov
pop
insb
shrb
aam
out
test
fisubrl
fdivrs
add
stc
or
jne
dec
scas
push
mov
hlt
fsts
adcb
sbb
and
imul
addr16
loope
in
shr
std
inc
inc
stos
dec
data16
into
cwtl
pop
jnp
outsb
adc
or
ret
adc
dec
fdivrp
xsavec
jp
adc
sub
popa
aam
clc
push
xlat
sar
repnz
mov
xor
cmpsl
int3
pop
imul
loopne
repz
push
outsl
cmp
pop
sar
add
loop
xlat
pop
int3
ljmp
scas
adc
int
xchg
cmp
mov
and
push
aas
imulb
dec
pop
cld
add
adcl
add
in
in
push
popf
pop
push
fstl
xchg
xor
push
and
push
sbb
ja
inc
xchg
imul
je
cmpsl
jp
push
xchg
inc
push
inc
add
add
pushf
push
fcomip
inc
pop
adc
push
cmp
mov
int3
leave
movsb
aas
aaa
clc
clc
dec
xchg
mov
push
pusha
and
pop
and
mov
mov
jmp
je
mov
mov
lcall
mov
jecxz
xchg
es
push
jle
in
mov
push
ret
adc
jne
cmp
pop
pop
push
pushf
sahf
jl
fiaddl
filds
mov
icebp
jnp
sbb
mov
inc
xor
add
fyl2x
xor
cmp
jl
push
lcall
mov
push
fwait
rclb
cmp
mov
or
add
loope
inc
mov
stos
xor
sbb
stc
out
sub
xor
xchg
leave
or
jmp
xor
out
mov
mov
test
filds
add
sahf
loop
cmp
xor
lods
fs
lea
out
add
fsincos
arpl
lret
mov
xor
dec
ret
fstpl
mov
sub
sti
sub
lock
inc
adc
shll
jmp
cmp
dec
in
addr16
outsl
adc
insl
jge
scas
fnsave
out
mov
int
push
sub
jge
loope
shrb
je
shr
mov
pop
jb
xor
sbb
xchg
movsl
adc
jb
popa
inc
pop
adc
scas
movups
and
sbb
cmp
jno
sbb
push
imul
mov
xor
mov
adc
lea
cmpsl
imul
inc
sbb
imul
xor
inc
or
inc
add
cmc
repnz
repz
jp
or
jne
andb
push
jb
ret
pusha
fidivrs
cmp
push
pop
pop
ror
pop
jmp
scas
das
cmp
push
lahf
dec
or
cmp
icebp
pusha
sbb
jns
and
pop
shll
jmp
daa
js
fsubrl
pop
push
pop
shll
call
mov
lods
adc
sub
out
xor
rol
push
xor
jge
push
inc
sar
cmp
ljmp
sbb
outsb
nop
mov
movsb
and
fnstenv
pop
arpl
cmovl
xchg
cwtl
push
in
rcrb
xchg
lcall
lods
call
rol
add
out
cmp
mov
mov
add
or
rolb
xlat
insl
mov
and
ret
ret
notl
mov
stc
adc
and
js
push
inc
push
add
adc
sub
mov
cmp
cmc
jbe
add
lahf
loop
sbb
sbb
and
shll
lret
adc
repnz
and
pop
sub
rep
daa
xor
or
movsl
adc
sub
cmp
xor
xchg
mov
pop
adc
inc
dec
bound
cmp
inc
inc
inc
mov
sub
xor
arpl
cmpsl
jns
fwait
nop
pop
or
hlt
leave
inc
inc
fmull
jg
ljmp
xlat
mull
in
push
sub
cmp
dec
fsubl
push
dec
es
and
outsb
or
scas
adcb
xor
adc
idivb
test
cmpsl
lock
jle
mov
vmwrite
sub
adc
add
insl
je
popf
mov
imul
pop
jno
test
mov
mov
hlt
hlt
jno
lods
not
fs
jns
mov
je
decl
pusha
outsl
lods
mov
inc
add
repnz
idivb
jmp
fmull
mov
icebp
sbb
and
filds
sbbb
inc
and
test
mov
add
lcall
jno
js
dec
repz
jno
aad
scas
jl
stc
cmpsb
adc
fbstp
daa
pop
dec
ds
jo
sbb
lods
stos
lock
stos
aad
aas
fstpt
imul
fldcw
sbb
push
int
fs
inc
inc
std
xchg
add
fnstenv
fistps
mov
ljmp
sub
stos
fbstp
push
mull
mov
cmp
stos
je
push
cld
in
sub
pop
mov
adc
jecxz
xor
in
popa
sbb
repnz
cmp
push
stos
int
mov
lods
adc
xlat
repz
movsb
mov
cmovns
cmp
pop
stos
addr16
cmpsl
ja
xor
sbb
adc
push
aam
inc
loope
sbbl
bound
xor
and
mov
mov
mov
leave
loope
adc
out
sub
ret
or
out
test
arpl
push
loopne
faddp
fsubrl
mov
add
into
lock
push
pop
and
out
push
sub
lahf
mov
pop
leave
mov
fs
cmp
fcmovnb
rol
pop
loopne
cmc
pop
xor
test
dec
push
add
mov
add
xor
aaa
adc
out
inc
mov
adc
call
loope
icebp
je
out
leave
mov
aam
push
sub
sbb
js
imul
pop
mov
subl
pop
xor
xchg
mov
pop
nop
faddl
pop
lcall
dec
lods
lret
mov
int3
mov
or
movsl
adc
insb
rclb
jb
stos
jo
in
dec
fs
scas
xchg
lods
gs
dec
dec
push
out
mov
je
nop
xor
pop
stc
mov
xor
movsl
xor
or
repz
sub
je
push
sub
xchg
nop
add
dec
and
add
jl
and
repz
adc
into
push
xchg
das
sbb
push
or
ja
mov
mov
inc
push
push
add
lahf
sbb
cmp
loope
jmp
filds
push
sub
inc
push
cmp
adc
add
das
jb
andb
in
pcmpgtw
es
cmp
ficoms
insl
add
in
add
mov
and
rcll
cmc
xchg
leave
jp
lds
shll
int3
sbb
sub
mov
add
jmp
int3
jns
pop
xchg
nop
les
pop
dec
xchg
jl
inc
insb
iret
xor
sbb
jecxz
add
jne
pop
clc
cmp
inc
cmp
ljmp
jmp
sahf
cmp
ss
mov
imul
ja
adc
inc
repz
fisttps
out
cmc
ret
daa
push
lret
and
fs
or
insl
negb
sbb
jecxz
fildll
mov
add
notb
xlat
xor
in
pop
xor
mov
mov
cmp
adc
add
into
out
cmp
mov
and
sarl
fistl
int3
mov
dec
out
adc
mov
insb
fstps
or
leave
icebp
adc
insb
and
adc
push
xorb
popf
in
push
test
xchg
adc
ljmp
fdiv
sbb
cld
inc
dec
mov
jl
test
add
mov
mov
or
lahf
add
loope
ja
addr16
leave
and
pop
mov
cmp
jecxz
push
xchg
ret
push
adcb
lahf
cmp
sbb
mov
push
add
dec
dec
bound
hlt
cld
add
loopne
cmpsb
into
pusha
mov
movsb
adc
sub
sbb
gs
pushf
lahf
sub
stc
push
inc
movsl
shll
xlat
xchg
xor
sub
nop
movsb
dec
mov
mov
dec
jnp
dec
sub
icebp
pushf
daa
cmpsl
pop
cltd
negb
in
and
jecxz
mov
add
sbb
aas
cmc
repz
pop
flds
cmc
lret
test
inc
fsubrp
adcl
int3
jno
xchg
add
pop
std
push
push
gs
add
fmul
in
fdecstp
cltd
xchg
sbb
lret
lret
pop
out
dec
insl
aam
sub
daa
fnstsw
sub
je
and
loopne
pop
jo
sub
mov
insb
outsb
stos
add
movsb
jne
outsl
cwtl
ds
mov
data16
jg
shlb
push
or
loop
fildll
adc
adc
mov
push
sub
mov
mov
lock
mov
inc
into
xor
mov
inc
jbe
push
sbb
fwait
stos
push
jo
popa
jge
testb
mov
lss
jne
push
xchg
loop
negl
pop
pop
push
mov
orl
orb
fidivl
in
xorl
cltd
icebp
jo
lret
pop
push
mov
inc
je
aad
roll
xchg
sbb
clc
sub
addr16
out
push
stc
loop
dec
mov
inc
pop
cmpsl
mov
cmpl
cli
je
adc
add
into
inc
or
iret
pop
inc
cld
outsl
jle
aas
fucomp
sub
mov
movsb
xor
shlb
cmp
popa
mov
cmpsl
imul
add
add
in
fwait
mov
jo
mov
adc
lret
push
sbb
xchg
inc
fimull
repz
aaa
or
cmpb
and
mov
in
sub
lds
inc
rcrb
sub
mov
leave
sub
int
mov
mov
aad
iret
data16
scas
sub
pop
data16
mov
sub
push
in
mov
xchg
arpl
adc
fwait
shr
push
cmp
scas
mov
pop
and
imul
movsb
aaa
or
adcb
cmpsl
and
push
xchg
ret
loopne
and
add
shr
jecxz
mov
arpl
hlt
cltd
xchg
das
push
mov
aam
pop
hlt
jmp
lahf
mov
stos
ljmp
popa
cmpsl
pop
mov
jbe
adc
daa
cwtl
xadd
ja
iret
imul
and
les
adc
pop
lcall
jne
outsl
xchg
out
repz
xchg
out
scas
adc
mov
push
mov
cmpsl
insl
sti
push
arpl
cmp
int
orl
shll
mov
xchg
fs
inc
imul
push
adc
test
lea
adc
icebp
sub
lcall
mov
fdivrs
fs
dec
scas
out
push
push
jb
stos
sbb
ds
cmp
push
in
sti
mov
inc
add
lock
or
and
xchg
aad
jp
cmp
fwait
jnp
lcall
pop
sbb
sub
push
mov
xor
mov
cltd
aaa
mov
mov
nop
push
lds
iret
insl
push
mov
cmc
pop
lret
mov
pop
or
lcall
imul
out
cli
cmc
jg
dec
mov
mov
mov
push
outsb
inc
pop
push
add
cwtl
xor
shrl
and
lods
iret
loop
xor
mov
gs
push
pushf
incb
mov
push
popl
xor
cmpsl
leave
jg
movsl
out
into
mov
or
je
int
stc
outsl
jae
das
lret
add
outsb
test
dec
fimull
push
jge
rcrb
sbb
decb
sbb
repnz
adc
sbb
icebp
clc
push
mov
or
push
lcall
mov
sbb
adc
xor
lcall
jo
icebp
dec
clc
into
xor
jns
imulb
jae
xor
in
loop
mov
push
test
les
pop
add
dec
test
lret
vcmpss
push
dec
data16
jg
daa
jae
push
mov
xchg
lods
cs
mov
jae
push
daa
test
pop
fidivs
pop
fstp
dec
cmp
cmp
fisubrl
push
das
pop
mov
sahf
and
sub
and
pop
iret
stc
mov
sbb
arpl
bound
pop
popa
lret
aas
inc
jg
jb
push
movsl
add
or
lahf
cs
jl
insb
aas
sub
aaa
bound
jno
or
jg
shl
adc
xchg
jg
arpl
cli
add
cmp
cmpsb
jge
aad
push
push
rcr
das
shrl
add
jbe
xor
pop
push
push
push
iret
or
fwait
jns
push
mov
pushf
in
push
roll
inc
push
xchg
inc
rol
sbb
or
stos
push
pop
dec
xchg
pop
in
pop
in
pop
inc
jle
imul
dec
pop
je
sbb
push
sbb
frstor
pop
mov
pusha
and
xchg
mov
fdivl
jle
add
jmp
mov
gs
aam
mov
cltd
cltd
inc
dec
dec
mov
and
xor
loope
out
xlat
pop
outsl
stos
dec
xor
lds
mov
add
jno
and
add
add
stos
iret
loop
aam
sbb
mov
lods
stos
cmp
cmp
pop
lock
dec
cmc
cmpsb
add
xchg
orb
mov
scas
inc
clc
test
mov
sub
jmp
fadds
mov
movsb
int
test
dec
fs
pop
orb
adc
flds
ds
gs
ret
push
test
bound
testb
mul
mov
cmp
into
cmp
fs
das
lahf
cmp
pop
sbb
xchg
lcall
sub
pop
in
add
push
ja
inc
mov
xchg
add
xor
pop
sbb
cmpl
hlt
and
scas
iret
mov
mov
jbe
mov
mov
push
stc
popa
jae
mov
aaa
outsl
xor
mov
or
pop
jl
adcl
or
push
mov
ljmp
insl
sub
iret
push
int3
cmpsl
pop
adc
fimull
fwait
jo
mov
xor
out
test
test
ret
daa
cld
loope
cltd
into
xorb
jb
icebp
xchg
insl
int3
int
inc
pop
push
and
add
adc
lock
arpl
and
cmp
ljmp
adc
cmpsb
xor
mov
fmull
outsb
and
cltd
dec
mov
mov
xchg
scas
mov
subl
push
stos
je
xchg
lods
test
scas
lea
rcll
push
mov
daa
and
pop
stc
mov
lods
cmp
xchg
cmp
jle
cwtl
mov
sarl
fsubrp
xchg
mov
add
rcrl
scas
and
xor
xor
jns
ds
xchg
sbb
sbb
lods
xchg
pushf
scas
lods
mov
push
sub
xchg
ljmp
mov
push
les
xchg
push
mov
aas
and
mov
lock
and
sarb
loop
mov
xchg
sub
sbb
mov
in
out
fisubl
add
ror
rcll
adc
fldt
mov
ljmp
stos
pop
jg
mov
arpl
fs
hlt
stos
push
ret
test
sbb
ret
push
hlt
imul
and
xor
lods
adc
add
dec
sub
jbe
push
mov
jmp
push
ss
mov
test
mov
add
cmpsb
jecxz
cmp
push
fcoms
in
push
fisubrl
lods
or
push
movsb
std
ja
cmp
and
jmp
sti
pop
mov
dec
icebp
xchg
xchg
push
test
cwtl
test
jg
mov
clc
loopne
pusha
pop
push
push
shrl
xchg
jle
sbbb
dec
ret
fcmovu
jno
int
js
fcomip
add
into
ret
jl
cmp
xchg
mov
mov
push
addr16
aad
xchg
out
outsb
add
mull
mov
fldcw
add
jle
push
push
scas
test
adc
popa
data16
pop
push
sbb
or
xorb
fcoml
dec
cmp
adc
pusha
roll
mov
mov
lods
ja
sub
and
lock
and
push
bound
pop
cmp
sub
mov
mov
pop
xorb
test
aad
adc
cmpsb
loopne
outsl
add
lret
push
add
cli
pop
mov
xchg
push
xor
push
stos
hlt
pop
mov
inc
sbb
fcmovbe
mov
scas
mov
xchg
test
cmp
aas
shll
cmp
outsl
ss
jne
sub
leave
add
lock
outsl
loope
cltd
call
pop
ud0
cwtl
cmpl
sub
pop
popa
inc
mov
lahf
jmp
or
repz
cmp
mov
or
mov
adc
xchg
dec
dec
sbb
ds
daa
es
inc
dec
jo
cmc
push
add
cltd
out
pushf
jno
pop
mov
or
mov
cmp
dec
mov
dec
mov
jno
imul
call
fstpt
mov
nop
outsb
ds
mov
fisubl
sbb
inc
js
faddl
dec
jbe
clc
add
fnsave
leave
push
adc
cmpsb
add
pop
test
pop
test
push
or
in
je
sarl
insb
pop
jp
mov
jle
mov
mov
jbe
mov
hlt
loop
shlb
xchg
aad
mov
inc
lret
cli
enter
mov
or
stc
jnp
testl
jo
mov
jo
mov
jge
int3
pusha
cmp
xor
jmp
iret
imul
in
cmpsb
das
addl
in
out
dec
mov
les
das
pop
pusha
rclb
fwait
lock
push
jmp
gs
out
jnp
adc
mov
push
sub
pop
daa
fistpll
out
pop
pop
xchg
push
das
cmpsb
subl
sarl
insb
mov
xchg
fwait
loope
bound
int
adc
adc
sbb
inc
nop
loopne
test
fdivrp
dec
test
jb
out
dec
lds
or
outsl
jns
push
es
or
pop
pop
int
jne
mov
fisubs
pop
fsts
daa
fisubrs
mov
sti
or
sarb
adc
xchg
jbe
popf
pop
outsl
or
dec
inc
cli
xchg
jecxz
cld
repnz
lcall
mov
pop
cmpl
imul
pop
pop
ret
jg,pn
lahf
std
sbb
cmpsl
std
aaa
mov
inc
inc
aad
icebp
dec
cli
push
or
clc
pop
testb
pop
mov
pop
xchg
testl
mov
popf
pop
xor
fmull
jb
pop
pop
sub
mov
bound
jb
jp
or
out
jecxz
incb
mov
dec
xchg
cwtl
and
mov
dec
stos
mov
imul
les
cmp
push
xor
shlb
ret
outsl
jecxz
rclb
jnp
and
jmp
dec
pop
xchg
xor
pop
das
arpl
adc
popl
adc
lret
ds
out
jl
dec
out
es
add
xor
inc
jbe
fs
push
xchg
mov
stc
cld
jmp
jge
fdivp
adc
fxtract
je
xchg
push
movsl
xchg
and
addr16
in
xchg
pop
mov
cwtl
mov
mov
adc
hlt
xchg
fsubrp
movsl
dec
pop
add
call
xchg
hlt
lods
pop
adc
ficompl
scas
push
hlt
into
sbb
sbb
jge
xor
jb
loop
inc
mov
jbe
aaa
into
pop
xchg
loopne
sbb
cmp
dec
clc
icebp
test
adc
jg
hlt
pop
sbb
and
ljmp
nop
fisttpl
push
rclb
andl
or
lock
ret
xchg
jo
das
movsb
test
mov
fcomp
pop
das
pop
ljmp
sbb
xor
mov
lcall
xor
adc
inc
xchg
push
sbb
inc
rcll
enter
add
adc
jmp
jge
ss
inc
or
lret
push
mov
sahf
cli
adc
xchg
adc
stc
xor
into
cmp
popa
pushf
lods
ds
icebp
pop
out
fdivs
popa
push
mov
js
pop
jmp
shlb
pop
jmp
jmp
lret
rolb
cmp
scas
add
sub
inc
cmp
idivb
orb
out
sub
mov
lahf
enter
xor
fstps
jle
mov
push
fbld
lahf
cmp
or
rclb
fimuls
nop
jns
dec
inc
xor
ret
and
inc
out
fsubrl
inc
in
loope
testl
adc
out
push
fdivr
lods
pop
in
add
or
mov
add
sub
aas
testl
xchg
mov
xchg
daa
dec
xlat
shll
mov
testb
addr16
dec
add
das
sti
mov
adc
xchg
sbbl
pushf
mov
fldl
pop
xchg
lods
xchg
cmpsb
sub
jb
push
add
push
adc
dec
adc
js
jno
jne
lret
sub
mov
in
rcrl
mov
in
ljmp
lret
mov
std
cmp
cmc
cld
ds
stc
pop
fdivp
or
push
outsl
cmc
jns
jo
into
fiadds
push
popw
mov
pop
xor
and
sti
push
push
jns
xchg
dec
jbe
mov
fisubl
push
adc
stos
xor
mov
notl
ds
adc
std
push
rcrb
jg
testb
rcll
in
sbb
mov
jle
dec
pop
je
or
scas
sub
ret
mov
and
jbe
push
push
adc
loopne
pop
sbb
push
or
xor
mov
pusha
mov
cwtl
mov
xchg
cld
inc
fmuls
mov
pusha
insl
dec
mov
nop
test
add
icebp
pop
mov
xlat
mov
xor
inc
mov
mov
sub
dec
lock
adc
jl
cltd
in
outsb
stc
rcll
pop
lds
xchg
in
arpl
in
jp
pop
mov
adc
or
call
or
sbb
mov
int3
pop
mov
sbb
inc
adc
inc
movsl
inc
fldt
mov
pusha
jle
inc
outsl
in
xor
hlt
jp
rolb
push
nop
mov
incl
sbb
sub
cmp
jl
testl
xlat
cld
sti
fninit
rcl
sub
fcoms
mov
dec
insl
sub
xor
test
test
fistpll
jnp
popa
lret
push
mov
and
rclb
mov
xchg
jb
sub
xorb
loopne
fwait
aam
enter
mov
mov
sub
scas
pop
xchg
jo
jge
xor
lret
test
dec
mov
mov
loope
lcall
xor
cmpsl
ja
pushf
stc
out
jbe
pusha
cli
pop
das
mov
sbb
mov
and
jo
mov
lahf
pop
ret
idiv
in
out
and
inc
jns
mov
fdivrs
inc
inc
movsb
push
and
std
mov
fstps
arpl
adc
jo
xchg
jb
loopne
test
dec
bound
mov
cs
mov
mov
lcall
or
xchg
aam
xchg
sbb
je
shrl
fistpl
ds
dec
stc
bound
cmp
in
iret
ss
addr16
dec
insb
mov
cmp
pop
rorb
mov
fdivrs
xlat
jl
hlt
and
nop
jns
pop
dec
lods
mov
out
test
or
mov
xor
out
loop
ljmp
lods
inc
push
jge
push
out
xor
gs
mov
mov
fsubs
in
dec
push
pop
dec
movl
sub
xor
xchg
sbb
imull
std
and
jp
rcll
sub
pushf
xor
pop
add
and
push
clc
push
clc
pop
and
jb
fstpt
scas
sti
push
popa
idiv
mov
pop
mov
jge
in
test
xchg
sar
out
sahf
mov
pop
sbb
dec
add
into
int
je
inc
and
xchg
pushf
adc
jne
mov
sub
nop
sub
rorb
inc
pop
adc
xlat
cltd
mov
pusha
aaa
mov
and
adc
mov
test
pop
mov
ficoms
or
cmp
cmp
jnp
test
sub
lret
je
movsl
sbb
inc
cmp
xor
pop
mov
lea
ss
mov
sbb
pop
aaa
ja
adc
adc
jno
pop
sbb
mov
inc
in
movsl
push
dec
or
sahf
and
cmp
enter
push
jg
push
rcrb
dec
ss
dec
call
add
or
sub
shll
pop
dec
je
push
and
jae
roll
iret
mov
fimuls
inc
mov
leave
adc
lods
rorb
sahf
loopne
loopne
dec
rcrb
pushf
shlb
pop
xchg
xor
icebp
pop
or
jo
outsl
add
scas
aaa
js
nop
push
inc
shl
mov
jge
mov
adc
mov
scas
dec
fstpt
cli
add
daa
add
inc
inc
pop
push
mov
sub
ja
insb
pop
nop
int
stc
sbb
mov
sbb
sbbb
cmp
in
pushf
cmp
adc
stos
aas
jmp
sub
sub
daa
lock
mov
pop
push
or
insl
test
adc
mov
leave
scas
mov
push
xor
push
push
xor
mov
mov
loop
inc
pop
xor
mov
jae
cmpsb
sbb
or
mov
fs
adc
imul
dec
xor
arpl
or
fs
mov
es
popf
sub
mov
psubsb
sub
in
xchg
xlat
add
jp
jl
push
ja
pop
dec
rorl
jae
and
cltd
mov
movsb
add
les
data16
in
cmp
or
je
aaa
or
loopne
and
add
push
push
call
jae
xor
xlat
and
scas
ljmp
sti
ret
imul
inc
ja
int3
dec
call
imull
addps
rcll
or
add
loopne
rcll
adc
into
sbb
sub
movsl
sub
arpl
push
fwait
mov
lods
mov
dec
fisubl
dec
es
clc
sahf
lods
rcr
pop
daa
jp
call
dec
pop
jl
sub
stos
popa
movb
pushf
sub
fstpl
iret
xlat
test
and
xchg
fs
add
divl
sti
lret
repnz
fisubl
jb
adc
jmp
xchg
push
mov
psubusw
and
add
lea
pop
cmp
daa
jae
mov
dec
add
out
fsubl
fnsave
iret
dec
mov
sub
out
stos
xchg
sub
or
push
outsb
dec
inc
and
push
push
movsb
fwait
imul
or
mov
dec
mov
std
fwait
pop
std
mov
cmpsb
enter
and
fdivs
pop
stos
aam
add
add
inc
jl
xor
je
dec
fstl
loope
and
shll
leave
mov
fsubp
mov
or
lcall
mov
mov
dec
add
call
or
jmp
scas
pusha
inc
hlt
push
out
push
lods
test
mov
sbb
in
cs
pop
push
add
scas
sub
push
sub
jns
mov
mov
push
pushf
inc
push
stos
mov
fdivs
dec
int
icebp
cld
sbb
sbb
sbb
ret
loopne
arpl
mov
cmpsb
adcb
mov
xchg
shlb
fstpt
pop
pop
ret
sbb
adc
adc
jbe
ljmp
addl
inc
repnz
cld
adc
pop
xchg
push
fsubp
lcall
lods
subb
dec
insb
jno
dec
roll
out
jmp
cwtl
sbb
xlat
mov
fdivrp
pop
lods
dec
or
xor
fisubrs
movsb
jbe
mov
ficompl
jmp
push
mov
outsl
push
aas
dec
insb
gs
in
lods
loope
aad
cs
add
mov
mov
dec
inc
icebp
xchg
sub
fucomp
mov
jo
sbb
stos
rol
ja
sub
in
adc
xchg
mov
in
pop
shr
jmp
adc
jne
pop
movsb
mov
test
cmpsb
mov
mov
js
test
inc
mov
xchg
mov
test
je
mov
pusha
pop
add
je
xchg
inc
mov
lret
xchg
push
inc
push
test
int3
mov
loop
or
xlat
fcomp
ja
popa
adc
and
inc
sub
pop
xchg
adc
scas
cmp
subl
aaa
xor
add
jmp
out
push
inc
mov
movsl
mov
sbb
loope,pt
stc
jmp
jno
dec
xchg
cmp
imul
rcll
pop
out
jno
shll
std
jl
ljmp
fucomip
push
in
sbb
jne
mov
cmpsl
es
fdivr
insb
lret
pop
or
and
loope
lods
shrb
adc
or
push
inc
or
xor
jo
pop
adc
jl
sarl
out
lahf
cs
inc
and
js
imul
in
and
push
test
popf
mov
inc
pop
lds
repnz
mov
dec
cmpsb
repz
mov
add
dec
ret
sub
movsb
fldenv
in
xor
sbb
mov
lods
mov
mov
sub
push
daa
inc
ficoml
dec
hlt
cmpb
lods
aam
jp
loop
fwait
or
and
js
mov
push
push
test
lret
data16
or
lock
ja
cmc
mov
aaa
lcall
jge
add
jle
outsl
pop
push
in
es
cld
loop
cmpsl
inc
dec
xchg
xlat
jne
clc
mov
mov
aad
idivl
fmul
sarb
and
mov
mov
loop
sbb
mov
int3
sub
cs
je
mov
or
inc
or
jne
stos
lcall
push
add
pop
xchg
pushf
fs
in
pop
lea
cli
stos
fsts
or
sbb
repnz
adc
pmuludq
hlt
push
mov
mov
xchg
or
adc
popf
dec
pop
or
adc
test
cmpsl
sub
dec
mov
mov
dec
inc
pop
lods
rorb
pop
sbb
mov
xor
movsl
mov
inc
push
xchg
icebp
jge
adc
aaa
xor
push
in
push
xchg
rcr
mov
fisubl
loopne
stc
xorb
add
ret
cmpsl
cmc
or
xor
mov
xor
jecxz
neg
mov
out
sbb
xchg
movsb
cld
repnz
insb
movsb
ret
or
stos
pop
scas
xor
inc
jmp
mul
jns
ret
inc
in
mov
movsl
mov
add
decb
pop
cmpsl
mov
push
ja
movsl
push
nop
daa
mov
test
icebp
ret
mov
add
sbb
sub
jmp
and
mov
mov
or
scas
clc
lcall
jle
dec
push
or
add
xchg
imul
pop
insb
or
jecxz
fldenv
mov
sbb
in
das
jmp
jge
aam
les
fists
test
xlat
fidivl
and
inc
fldenv
lahf
clc
out
sbb
mov
int3
add
jne
test
popf
sub
std
fwait
mov
in
ret
out
out
ret
and
ret
icebp
nop
imul
xor
stc
daa
sbb
fwait
lock
dec
sub
adc
call
push
jp
or
xchg
or
test
add
jo
push
decb
loop
inc
cmpl
into
repz
pop
mov
mov
scas
jnp
dec
insl
out
in
mov
hlt
lods
test
and
js
stc
stos
dec
lea
sbb
pusha
adc
js
pop
fidivrs
enter
push
inc
shlb
xchg
or
mov
movsb
pop
fisttps
sub
mov
lret
dec
imul
mov
push
adc
fisubs
cmp
and
sbb
mov
popf
pop
xchg
mov
mov
push
fcomps
in
movsl
fildl
leave
xchg
outsl
fwait
cmp
mov
js
mov
fcmovnbe
xor
test
repnz
sbb
pop
jmp
ror
jo
stc
outsb
mov
test
test
mulb
jno
test
and
ss
and
xchg
outsl
xchg
or
in
cli
mov
mov
lea
test
cs
loop
int
cmpsb
outsl
or
sti
push
add
push
xlat
in
cmp
not
adc
loope
stc
and
and
xor
adc
xchg
push
push
xchg
mov
cmp
xchg
call
jecxz
insb
loopne
sub
aad
ja
dec
pusha
daa
into
movsl
jl
and
jecxz
lds
mov
push
mov
pop
mov
jmp
inc
cmp
sub
cld
pop
mov
ds
insb
pop
fsubrs
adc
jns
pop
mov
cltd
outsb
js
out
lret
clc
lods
pop
and
mov
jnp
dec
mov
cmpsb
ret
pop
sbb
iret
push
loop
jle
add
mov
fld
outsl
adc
mov
mov
pushf
mov
add
push
or
pop
cmpsl
push
in
dec
cmp
aaa
and
stos
push
repz
or
lea
aad
xchg
dec
pop
data16
notb
dec
dec
dec
cmp
or
out
inc
cmp
xchg
add
repz
jo
stos
aad
aad
int3
js
movsb
repz
out
mov
std
in
std
pop
pop
or
adc
xchg
sub
loopne
int3
sti
sub
jnp
xchg
adc
dec
cmpl
pop
pushf
jl
dec
and
js
rorb
and
inc
and
adc
in
dec
push
pop
jbe
icebp
xchg
dec
fs
aad
ljmp
mov
add
cmp
loopne
xchg
mov
inc
cmc
push
loopne
sbbb
js
or
inc
flds
add
mov
pop
adc
ficomps
je
push
adc
fldt
jp
sub
adc
jl
ret
lds
mov
mov
pop
inc
into
xchg
scas
mov
mov
xlat
xchg
xor
mov
insl
lds
cmp
mov
mov
dec
xor
daa
outsb
sti
ds
das
fistpll
sar
jb
xchg
add
mov
inc
mov
mov
fsub
faddl
jo
sbb
scas
pusha
imul
lods
aas
movsl
mov
leave
fbstp
out
mov
scas
jbe
pop
mov
jle
lods
and
mov
imul
daa
fsts
test
or
cmp
cvtps2pd
sub
sbb
jp
aas
or
mov
call
xor
enter
repnz
inc
sub
insl
sub
inc
cltd
xor
sarl
imul
je
jo
mov
mov
je
lock
faddl
and
xor
xor
loop
adc
cmp
fsubs
jle
std
xor
inc
sbb
sbb
mov
pop
xlat
fidivrs
std
cmpl
cmpsb
icebp
call
push
dec
shl
je
xchg
sbb
or
or
mov
scas
orl
outsb
inc
mov
push
test
sub
add
adc
xor
cmp
aaa
mov
std
out
pop
stc
arpl
xor
sbb
dec
xor
les
cmp
add
loopne
push
hlt
pop
sbb
push
xchg
pop
hlt
inc
inc
ja
shrb
or
popa
and
mov
sbb
clc
outsb
pop
push
jb
inc
sub
pop
mov
xor
pop
aad
jp
dec
xor
pop
inc
in
mov
push
lcall
sub
mov
arpl
outsb
in
cmpsl
mov
cmp
loop
out
andb
push
adc
sti
es
mov
add
repz
cs
hlt
icebp
stc
stos
aad
pop
stos
scas
inc
les
jnp
xchg
dec
mov
arpl
arpl
mov
mov
push
xchg
rcll
lcall
push
jle
xlat
xchg
mov
insb
cmp
mov
repnz
mov
dec
cs
push
rol
loop
mov
stos
mov
cwtl
mov
out
movb
push
cltd
push
imul
enter
loop
shl
sti
mov
cmp
movsl
push
mov
stc
aam
imul
mov
pop
clc
xchg
push
inc
sbb
push
jl
mov
lock
out
jmp
call
cmp
rclb
je
sbb
fistpll
jmp
adc
out
dec
les
repz
in
push
test
push
xchg
inc
test
mov
movsl
pop
pop
cwtl
lret
lret
dec
test
insl
outsl
test
xchg
clc
sub
or
out
repnz
mov
int3
hlt
dec
or
aam
pop
loope
cld
dec
jmp
pop
stos
test
xor
xchg
dec
out
pop
or
add
ss
push
jecxz
pop
mov
std
mov
add
test
pop
inc
es
mov
xor
repz
test
es
daa
pop
fdiv
out
dec
out
mov
mov
xchg
cltd
out
and
cmp
dec
repnz
or
imul
stos
pop
cmpl
mov
iret
in
cmpsl
rcrb
aad
push
mov
jo
push
push
mov
adc
es
into
inc
push
mov
movsl
das
xor
cmp
ss
mov
push
popa
call
in
cmp
rorb
ja
flds
js
cld
push
adc
test
outsl
outsl
nop
dec
fstps
sub
cld
lea
mov
test
add
and
pop
push
jecxz
xor
dec
orl
in
xchg
mov
add
js
imul
jmp
test
sub
xor
scas
or
mull
xchg
or
mov
cmp
ljmp
xchg
shll
jmp
dec
lret
andb
cld
and
pop
addl
rcr
push
sub
aad
xor
cmpsl
push
cltd
inc
pusha
loopne
js
add
pop
andb
jp
loopne
subl
fneni(8087
insl
in
iret
mov
dec
fcompl
aas
cmp
rorl
int
jae
cmpsb
outsb
jg
testl
lret
mov
dec
cmp
jb
les
push
or
xchg
push
std
cmp
xlat
aad
cmp
cmpsl
test
or
pop
xor
pushf
cmp
cmp
push
imul
sbb
js
xor
divps
and
mov
ret
push
adcb
or
js
inc
cwtl
mov
dec
sbb
pop
aaa
sub
push
test
pop
cmp
stos
out
out
cmp
ret
push
xchg
inc
in
push
stos
push
push
cmpsl
mov
cmp
fdivp
in
test
or
xchg
pop
ja
xchg
push
mov
jle
fiadds
mov
and
inc
mov
repnz
sbb
pop
or
outsl
sbb
sar
sbb
in
daa
bound
mov
insl
cmp
xchg
xchg
filds
push
xchg
mov
pop
jo
imul
push
aam
cmpsb
movsb
or
fcomps
fcomi
clc
sbb
pop
push
pop
loopne
mov
add
inc
iret
aas
loop
add
push
sub
lcall
mov
int
punpckhdq
ret
push
add
and
movl
call
dec
mov
xchg
mov
rolb
fmull
dec
and
pop
push
cs
mov
testl
xor
cmpl
sub
fucomp
cltd
stos
cmp
movsl
or
les
dec
jle
pop
sbb
adc
cltd
std
das
dec
xor
ss
xchg
divb
mov
or
mov
and
andb
addr16
mov
inc
push
cmp
inc
ficomps
test
pushf
sbb
mov
mov
es
dec
or
mov
aas
in
mov
lods
fstps
cmpsb
in
pushf
gs
in
push
jbe
mov
test
and
dec
xor
sbb
mov
jecxz
sbb
jb
shrb
adc
and
daa
cmovl
fcmovu
push
pushf
xlat
mov
ja
jno
mov
inc
mov
pop
movsl
lods
xchg
jmp
xchg
lea
fnstsw
shlb
jmp
in
xor
mov
lea
mov
xor
lock
or
pushf
jo
out
inc
repz
in
js
fildl
dec
xchg
insb
push
pusha
daa
es
inc
add
add
insb
jge
imul
xor
jge
loopne
inc
cmpsl
dec
lcallw
add
pop
mov
mov
jp
insl
stos
mov
push
push
outsl
pushf
cld
push
lahf
mov
or
test
outsb
lock
lods
and
mov
sub
cmc
lock
cmp
adc
adc
aam
cmp
jne
mov
inc
insb
mov
dec
adc
inc
pop
fcoms
cmc
and
mov
loopne
lea
jecxz
push
lahf
jae
or
jl
push
jp
add
push
into
sub
push
out
mov
mov
in
lea
cld
xor
adc
fildll
xor
pop
mov
or
mov
or
and
mov
cmpsb
out
fdivs
and
stos
push
bound
jae
cwtl
fisubs
pop
or
aaa
aam
arpl
pop
dec
in
insb
xor
test
js
mov
jmp
pop
daa
bound
out
xchg
lcall
movsb
enter
mov
int
sti
out
add
cs
es
inc
add
lret
call
out
jnp
pop
repz
sub
fcomp
sti
in
outsb
mov
lods
in
fmull
out
lds
xchg
ja
lods
push
nopl
xor
jnp
cli
jae
jg
stos
adcl
enter
test
fistps
cmpsl
shr
call
sbb
outsb
inc
jns
test
xlat
or
and
cwtl
loope
push
sub
outsb
mov
out
cmp
aam
add
jns
sub
cmpsb
or
sbb
jb
mov
dec
dec
sbb
pop
std
test
push
jae
das
sub
rorb
repnz
and
jbe
fisttpl
inc
gs
pusha
add
sti
jp
xchg
lock
jmp
mov
data16
imul
jg
inc
out
test
adc
inc
ljmp
fistpl
cmp
sarb
cwtl
add
inc
insl
je
insl
cmp
xor
xor
cmp
jno
pop
pop
insb
insb
xchg
jl
mov
xchg
icebp
mov
xor
and
dec
push
imul
mov
sub
aaa
nop
int
mov
mov
inc
in
inc
repnz
inc
movsl
sbb
xor
push
stos
pusha
xchg
out
inc
stos
cwtl
fisubs
adc
push
mov
aam
mov
int
loopne
add
jbe
stc
cmp
cli
add
ret
xor
inc
adc
add
repz
sahf
popf
popf
repz
push
nop
inc
push
fmul
jb
xor
jmp
or
nopl
jb
dec
pop
les
out
ljmp
xchg
jl
jecxz
sub
mov
push
sub
mull
ficoms
in
outsl
stc
add
inc
cmpsl
jbe
pop
adc
mov
xor
mov
cmpsb
stos
daa
lcall
je
mov
call
xor
enter
movsl
in
nop
cmp
test
and
sub
mov
add
ret
fistl
mov
push
or
sbb
cmp
inc
repnz
jno
aad
add
cmp
call
popf
and
pop
add
sbb
loope
ds
insl
adcb
fiaddl
push
ds
push
pop
dec
jne
cmpsl
mov
and
loope
adc
into
add
xchg
mov
ds
sahf
mov
mov
inc
out
xor
icebp
sub
pop
ljmp
dec
lret
jns
or
sbb
vcvtph2ps
aas
mov
xchg
jmp
lea
xor
xchg
sti
pop
jnp
test
inc
shlb
fdivs
push
loop
pop
sub
popa
fstpt
sbb
mov
xor
add
sbb
mov
jo
mov
push
aad
lahf
test
lods
test
xor
fiadds
std
push
int3
clc
mov
jo
mov
or
shlb
jno
or
sub
dec
lcall
inc
jge
repz
jecxz
negb
daa
jge
mov
and
subb
mov
fmulp
in
push
aaa
pushl
fisubl
stos
mov
test
mov
fnstsw
push
or
mov
adc
mov
cmp
xchg
xchg
mov
xor
popa
push
ret
cwtl
inc
test
enter
pop
sub
sub
popa
idivb
sti
fildll
dec
pop
outsl
es
xchg
jl
cltd
mov
dec
addr16
adc
in
dec
repnz
mov
push
das
aad
jae
or
inc
add
ja
ja
movsl
inc
jb
mov
je
sbbb
xchg
nop
in
fiadds
das
ja
movsl
mov
icebp
jo
fdivrs
or
fsubrp
stc
push
fxam
out
int3
xchg
fs
inc
mov
rcll
shll
cmpsb
mov
pop
scas
leave
jp
ficomps
xchg
cmpsl
dec
jns
into
cli
mov
sub
sub
inc
pop
pop
xchg
ret
mov
inc
push
xor
out
das
incl
sub
push
mov
lods
jl
ret
push
in
mov
jp
push
xchg
insb
add
sub
and
scas
adcb
sahf
fdivp
jne
movsb
unpckhps
add
in
mov
inc
jno
out
mov
adc
fnstcw
cwtl
mov
stos
jae
int
pop
mov
imul
aas
mov
inc
push
lcall
pop
xor
jno
icebp
xor
in
movsb
jae
in
adc
stos
mov
jge
dec
subb
mov
mov
test
daa
and
ret
push
negl
sub
test
dec
out
insb
out
mov
xlat
pop
dec
pop
icebp
xorl
jns
arpl
xor
mov
pop
iret
subl
int3
xor
mov
push
ret
inc
adc
shll
mov
pop
enter
dec
xchg
lret
cmp
inc
and
push
scas
lahf
jmp
daa
ds
xchg
stc
xchg
push
movsb
dec
int
fistps
xor
jne
add
adc
repnz
jb
mov
test
mov
pop
fistpll
clc
pop
sub
mov
sub
ds
mov
shlb
adc
sbb
test
push
sbb
xor
pop
loop
fsubr
dec
push
addl
loope
addr16
jb
push
jo
test
pop
xchg
pop
mov
fincstp
clc
xor
enter
inc
mov
js
fldl
testb
xchg
arpl
lcall
cmpb
mov
push
xor
rcl
mov
mov
inc
ljmp
cli
dec
iret
in
xor
nop
ret
cmp
std
inc
and
movl
loop
leave
fmul
inc
dec
popf
int
es
lods
pop
inc
stos
mov
mov
negl
mov
in
cs
out
jg
xchg
mov
xchg
pop
cltd
jge
test
les
or
pusha
jecxz
inc
and
xorl
xchg
in
negb
fmull
xchg
push
cmp
leave
inc
sbb
jne
cmp
jl
sarb
xchg
out
jo
out
or
jnp
fwait
mov
fdiv
pusha
cmp
xchg
lret
dec
mov
repz
add
cmpsb
pop
clc
cmpsl
and
shlb
and
popf
and
pop
cs
arpl
stc
ds
insb
jnp
jle
in
pop
fcmove
and
pusha
sbb
hlt
ja
add
movsb
rorb
cwtl
lahf
je
rcl
sub
outsb
int
movsl
aad
mov
xor
jecxz
xchg
push
push
mov
movsb
loope
decb
inc
pop
imul
jmp
rsm
movsl
sbb
mov
in
fildll
ret
ss
das
mov
jp
scas
xor
cs
mov
fisubrl
and
cmp
or
xchg
popf
inc
mov
or
pop
cmpsb
pop
xchg
mov
jb
stc
stc
pcmpeqb
in
pop
les
mov
lods
data16
scas
push
mov
sub
sbb
lret
push
jns
hlt
mov
dec
mov
adc
fbld
faddl
in
push
aaa
pop
fs
jns
stos
sub
daa
sahf
jbe
cmpb
mov
mul
andb
test
pop
pushf
mov
stos
scas
push
pop
ljmp
inc
cmpsl
ret
inc
jl
movsl
mov
iret
inc
out
lods
jnp
aam
cltd
cmpsl
inc
mov
sub
mov
cmpsb
dec
xchg
cmp
test
adc
sub
mov
movsb
xor
scas
mov
sbb
outsl
mov
inc
loopne
fstpl
and
jl
or
cmc
and
repz
int3
mov
pop
xor
inc
sbb
and
test
mov
xlat
in
mov
cld
lock
lret
adc
adc
mov
aaa
nop
div
adc
insb
dec
dec
aam
push
stc
mov
inc
mov
es
clc
mov
out
push
cmp
push
mov
or
cmp
xchg
pop
add
mov
mov
adc
pusha
mov
jg
fnstsw
pop
subl
mov
leave
leave
sbb
test
dec
pop
fsubl
add
loop
mov
imul
addr16
leave
out
jno
mov
cmp
inc
js
mov
in
js
popf
jge
ss
jl
xchg
mov
aaa
add
mov
cmp
call
repz
in
mov
pop
mov
jno
mov
imul
cltd
xor
dec
cmp
cmp
dec
lret
mov
insl
subl
in
cmp
cmp
mov
add
fidivrs
jnp
movsl
into
push
pop
mov
rol
insb
andb
add
and
push
xor
lret
test
lcall
jae
lret
es
cmp
adc
push
pop
ljmp
unpcklps
fldt
push
lea
fiaddl
test
addr16
mov
lret
or
cltd
fadds
xchg
lret
fwait
cmpsb
adc
add
out
sub
mov
xadd
shrb
loopne
xchg
inc
mov
sbb
sbb
test
into
dec
out
jle
mov
pop
jb
xor
mov
inc
cmpsb
push
xchg
inc
dec
sbb
mov
mov
dec
sbb
adc
daa
dec
push
mov
cmp
mov
adc
int
dec
sbb
stos
inc
fidivrl
mov
fwait
push
mov
adcb
insb
fisubrl
loope
pop
inc
rcll
push
sbb
mov
or
std
jg
adc
pop
scas
hlt
loope
aas
mov
clc
sbb
divps
shrl
jb
jp
inc
stos
mov
inc
mov
jle
sbb
adc
or
sub
shll
movsl
daa
loop
fildl
out
es
daa
mov
inc
bound
sub
lock
inc
push
iret
lcall
dec
fisttpll
inc
arpl
add
cmp
fisubl
cmp
pop
test
jno
xor
mov
cmpsb
and
add
roll
cmpsb
addr16
es
mov
fisubrl
cmc
push
jmp
dec
insb
jno
lcall
or
or
int3
imul
cmpsl
mov
xor
push
and
xchg
icebp
mov
xchg
push
clc
aad
add
iret
repnz
sti
mov
insl
dec
ffree
sub
cltd
cmp
loop
cwtl
movsb
fs
cmp
adc
test
add
stc
in
adc
bswap
outsl
fidivrl
jle
mov
push
in
xabort
outsl
mov
out
xchg
cmpsl
jae
loop
outsb
sub
cli
in
sub
fwait
or
cwtl
stos
les
adc
mov
pop
jne
jmp
bnd
data16
inc
inc
cmp
push
mov
scas
jecxz
inc
dec
xor
in
adc
lcall
popa
adc
and
out
lock
adc
sub
add
xor
mov
sub
jae
cmp
push
inc
or
mov
cs
sbbb
xor
rcrb
hlt
scas
mov
sbb
insb
cltd
lret
addr16
dec
jns
mov
adc
xor
mov
jg
ss
sub
push
cmp
js
push
and
fildll
mov
stos
lcall
push
xor
ljmp
ret
pop
pusha
ss
add
out
in
int
xchg
insl
push
jns
push
jns
mov
out
mov
lock
outsl
aas
aam
jb
push
pop
push
stos
jb
sub
adc
insb
jge
cmp
dec
push
into
mov
lahf
pop
push
and
pop
dec
cmpsl
mov
inc
in
aas
aad
test
fucom
dec
lahf
push
pop
push
cmp
fld
sahf
sub
and
push
ret
mov
lret
sarl
mov
popa
rclb
jg
nop
fistps
in
sub
fucomp
dec
aad
int3
mov
mov
or
flds
push
mov
and
xchg
inc
push
mov
mov
mov
lea
xchg
outsl
fimuls
pop
mov
test
arpl
adc
and
je
sti
sub
jnp
or
dec
stc
adc
lods
int3
cld
push
mov
dec
mov
scas
insl
or
pop
iret
push
push
inc
add
ds
adc
das
mov
push
es
insb
cmp
dec
push
ljmp
dec
sahf
sahf
jno
mov
gs
pop
xchg
jns
adc
cmp
or
addr16
cmp
mov
bsf
fimuls
jp
dec
inc
in
push
stos
jo
cld
fsubrp
fdivrl
insb
cmp
sbb
and
test
push
jg
lods
hlt
enter
pushf
shr
mov
je
out
test
xor
cmp
xchg
add
cmpsb
mov
push
inc
adc
sbbl
lock
mov
dec
sbb
adc
push
aas
lods
int
sub
fcmovbe
sub
adc
mov
fmull
mov
dec
dec
or
out
incb
je
pushf
or
aad
gs
xchg
dec
fistl
fs
jg
out
add
movzbl
mov
dec
rclb
add
jae
mov
movsl
jb
cmp
lods
test
fists
jnp
andl
cmp
jecxz
push
aam
jmp
xchg
outsl
dec
push
ja
cld
roll
ret
push
lahf
push
or
xchg
inc
push
inc
push
loop
outsl
or
push
xor
push
and
aaa
int
mov
cmp
adc
jmp
les
jg
out
add
xor
xor
lcall
clc
xchg
pop
dec
int
arpl
test
xlat
aam
roll
leave
ret
cmp
insb
xchg
in
xchg
cmp
loop
add
jo
sub
push
adc
sub
ret
ret
xchg
or
fucom
ret
mov
inc
cmpsl
mov
pop
dec
nop
test
mov
add
jle
mov
jmp
xchg
lea
loopne
rcll
repz
cli
ljmp
jnp
jmp
mov
push
mov
xchg
imul
stos
neg
or
cmpsb
cmp
mov
xchg
mov
xchg
jb
pop
ret
sub
jno
adc
fbstp
test
sti
int3
mov
and
rcll
ficompl
repnz
inc
jb
xor
rcl
mov
push
push
hlt
lods
xchg
mov
pop
xor
stc
adc
ror
shl
and
mov
cwtl
and
dec
roll
cmp
dec
xchg
jmp
inc
jo
ljmp
mov
jns
sti
std
push
pop
cmc
loop
data16
fcoml
nop
insb
push
fcomps
mov
or
aaa
sahf
sub
cs
fisubl
jg
pop
xor
insl
jnp
pop
mov
test
xchg
es
gs
loop
loopne
fildl
notb
cltd
mov
sbb
mov
scas
out
lret
movsb
jmp
shr
sub
pop
in
xchg
jle
push
pusha
daa
test
cmpsb
dec
cmpsb
and
adc
stc
repz
or
pop
pop
cs
inc
test
test
pusha
clc
adc
xor
lcall
or
sbb
or
and
xor
jmp
lret
out
mov
rclb
adc
mov
dec
mov
jns
jl
jne
sbb
cmp
repz
hlt
aad
sub
lahf
mov
insb
mov
pop
and
push
popa
popa
cmpsb
jnp
daa
movsl
xchg
les
xchg
mov
cmp
int3
test
sbb
sub
stos
xchg
adc
pop
xor
mov
or
push
adc
or
ret
mov
xchg
fwait
mov
sub
mov
das
es
jle
ret
sub
jge
sub
ret
sbb
xor
movsl
std
enter
sub
fldlg2
sub
sub
xor
pop
or
jnp
cmp
jns
add
insl
add
jp
push
movsl
mov
pop
or
or
cld
jnp
push
rcll
pop
push
xchg
popl
test
push
loope
push
aaa
dec
adc
jp
lds
push
mov
sahf
jnp
push
jbe
sbb
push
mov
fmull
fsts
and
jbe
js
in
shll
xchg
ror
xor
add
popa
idivl
mov
addr16
add
jmp
jmp
aas
lock
orb
hlt
mov
push
lds
xchg
push
pushf
sub
push
adc
fwait
in
cmp
shrl
mov
add
mov
repz
divl
mov
jno
lods
and
push
mov
push
insb
addb
adc
sti
outsb
mov
cli
les
add
into
adc
das
iret
in
sti
jo
xchg
mov
mov
js
sbb
mov
stos
inc
jg
inc
pusha
cmp
xor
sbb
push
stc
xor
rorl
push
jl
xchg
mov
dec
les
mov
sbb
daa
cli
das
xor
lcall
fisttpl
xchg
push
addr16
out
sub
shlb
ffree
pop
xor
sbb
xor
in
shll
pop
lahf
inc
loopne
mov
or
repz
dec
addr16
inc
fistpl
cld
pop
das
push
mov
enter
pop
clc
or
outsl
icebp
ret
pop
jmp
mov
out
sarl
mov
das
aam
add
test
mov
lcall
outsl
and
inc
push
sub
dec
clc
outsb
xchg
fsub
leave
add
clc
adc
ljmp
inc
jg
jmp
xor
sbb
das
inc
push
addr16
enter
mov
cmpsb
push
cli
xor
lret
jge
sub
incl
popa
fsubrl
arpl
add
testl
adc
push
push
push
inc
rcrl
aad
sti
or
scas
sbb
adc
jb
popf
sub
or
ficomps
sbb
push
lahf
mov
ljmp
mov
call
fsubrp
mov
in
cld
mov
cmp
mov
sub
aam
pop
or
cmp
xor
mov
jae
bound
insb
push
mov
fcmovnbe
outsl
adc
push
push
popf
pop
dec
xlat
dec
icebp
mov
adc
rorl
add
cmpsb
or
jge
and
add
xchg
sbb
clc
adc
xlat
mov
cltd
add
inc
cmp
sbb
int3
idivb
and
mov
dec
mov
xor
stos
inc
jmp
pushw
xchg
push
mov
push
out
roll
and
sar
pop
lds
add
lea
xchg
outsb
clc
in
mov
into
sahf
sub
out
pushf
push
out
cmpsb
push
fnstcw
rcrb
push
je
push
xor
imul
cli
pop
cmc
es
sbb
add
lods
and
lods
mov
out
mov
test
int3
sub
push
rcr
sahf
xchg
fiadds
add
cld
pop
aad
xor
out
lods
cmp
pop
jnp
push
adc
leave
sahf
sub
xor
outsl
and
and
loop
lret
cmp
pop
xchg
cmp
outsb
mov
xlat
and
insl
xor
lret
faddp
js
out
adc
or
or
lea
dec
push
sbb
std
aas
test
mov
lcall
jp
sbb
or
dec
inc
in
push
enter
push
mov
cli
jo
ficoml
push
inc
nop
xlat
divl
into
fldl
fnstsw
pop
cmp
ret
jae
sti
mov
mov
mov
mov
icebp
movsb
add
or
pop
arpl
repnz
es
jp
inc
daa
dec
push
movsl
pop
jno
mov
pop
daa
add
movb
es
sahf
mov
imul
jno
jmp
sub
sbb
dec
insb
es
cwtl
imul
sahf
stos
or
jp
or
adc
and
sbb
mov
xchg
jl
xlat
lahf
xor
stos
mov
xor
pop
ds
in
pop
test
push
push
les
adcl
jle
clc
mov
iret
cmp
add
imul
and
adc
push
inc
adc
dec
les
push
mov
cmp
push
push
ret
and
call
xor
add
and
fildll
cmpsb
adc
push
in
mov
mov
xchg
or
fwait
test
sbb
push
repnz
sbb
adc
jecxz
into
fdivr
ss
jg
sarb
rorb
mov
pushf
in
aad
pop
loope
mov
inc
stos
test
mov
in
push
loop
dec
movsb
fsubrl
ss
enter
sbb
mov
pop
push
jbe
stos
pop
sbb
mov
cltd
call
aam
pop
pop
in
mov
test
test
ja
cmpsl
xchg
sahf
push
cmp
loopne
fisttpl
jle
stc
sbb
ljmp
mov
loop
call
adcl
or
jae
std
xchg
jae
mov
xchg
sbb
dec
cmp
push
repnz
mov
ds
xor
and
dec
cltd
mov
adc
sbb
aam
cmp
cmp
and
lret
cmp
ljmp
adcb
mov
loopne
push
dec
dec
int
test
jae
mov
fsts
jp
push
adc
or
das
jo
in
pusha
outsl
scas
inc
aad
mov
cli
xchg
xchg
dec
pop
and
out
inc
dec
add
add
outsl
cld
out
cmc
in
add
sahf
mov
cmp
pusha
pop
push
and
sarb
in
push
add
shll
sahf
seta
sarb
adc
lret
push
adc
in
jne
rcrl
xchg
sub
or
cltd
adc
adc
mov
pop
fnstcw
imulb
test
fwait
jns
fistl
call
or
neg
inc
xor
add
mov
nop
fsubrl
xor
ficoms
imul
movsb
mov
xchg
mov
fs
xchg
xchg
idivb
cmp
outsb
sarb
pushw
and
into
push
test
push
sub
jl
inc
pop
in
or
push
mov
lcall
mov
sub
pop
sbb
dec
mov
mov
mov
cmp
push
and
lods
mov
cmp
mov
xchg
out
push
fmuls
outsb
in
pop
aad
push
data16
xor
filds
mov
ljmp
cmpsb
push
cmp
add
js
jmp
or
push
or
enter
mov
decl
inc
call
arpl
cmp
xor
stc
add
dec
cmp
dec
and
or
jge
scas
das
daa
adc
js
xchg
in
aad
sti
dec
aad
push
adc
jnp
daa
sti
add
imul
push
lret
pop
in
or
mov
mov
adc
add
jge
push
adc
neg
adc
pop
jmp
scas
or
loop
popa
mov
cmpb
cld
inc
pop
mov
pop
and
in
inc
aad
push
imul
dec
jb
sti
movsl
xchg
or
adc
adc
inc
rclb
ss
lock
sbb
ret
lret
popa
sub
xor
pop
dec
stos
push
ror
int3
orb
ret
jae
xchg
lods
popa
mov
sub
fimuls
iret
push
push
push
outsl
inc
pop
repnz
mov
inc
js
cwtl
pop
femms
rol
mov
push
aas
arpl
mov
lea
adc
dec
dec
mov
insb
bound
dec
sub
rcrl
gs
ficoml
lcall
std
fcomip
lahf
mov
adc
je
jnp
sbbl
cmc
dec
shlb
aaa
inc
mov
push
xchg
jmp
mov
or
cmp
stos
adc
loop
jb
and
scas
lea
pop
int3
add
sub
mov
mov
inc
roll
adc
call
pop
in
push
push
inc
bound
repz
push
mov
gs
out
push
pop
sbb
jnp
out
test
xor
dec
cmp
and
pop
dec
pop
arpl
stos
inc
dec
dec
sub
pop
xor
and
sub
push
imul
lret
incl
js
or
jmp
faddl
jecxz
stos
cmp
cmp
testl
xchg
mov
push
jge
push
xchg
mov
data16
jmp
repnz
and
lock
dec
and
jbe
mov
je
ss
shl
xchg
and
mov
jle
cwtl
inc
insl
ret
or
push
mov
sbb
incl
and
pop
xor
test
cmp
es
dec
pop
jp
cmp
ja
sbb
pop
shll
clc
pop
mov
lret
test
in
data16
pop
jno
cs
or
jns
jge
popf
jbe
fidivrl
pop
sahf
sti
add
bound
cli
pop
mov
adc
aam
jl
stos
mov
jno
or
cmpsl
outsb
jle
inc
es
xchg
push
jl
mov
sbb
and
cmc
div
dec
pop
inc
popf
xor
dec
jle
pop
popf
add
xchg
push
cmpsl
mov
aam
test
mov
imul
incb
fistps
mov
movsl
xchg
push
push
jecxz
mov
push
in
push
outsb
imul
loope
cwtl
mov
std
int3
cmp
xor
jne
add
ss
or
cmp
push
test
mov
dec
jle
pop
push
add
jns
je
pop
icebp
cmp
in
mov
pop
ss
or
sbb
jle
in
rolb
incl
popa
mov
std
sub
ficoml
jnp
mov
ja
in
sub
test
dec
clc
mov
fimuls
or
scas
lods
add
mov
xchg
mov
movsl
push
dec
jno
inc
hlt
push
outsb
div
pop
fisttpll
les
daa
xchg
push
jl
xchg
adc
jmp
mov
mov
scas
add
cs
ficoml
lea
ljmp
xchg
push
pusha
sub
mov
push
in
out
or
jge
cmp
or
call
push
repz
das
sti
ljmp
scas
jno
fwait
push
xor
adc
leave
and
adc
pop
xchg
cmp
repnz
mov
test
mov
cmp
int
pushf
sbb
stos
ja
stos
insb
es
inc
xlat
push
imul
adc
xchg
das
loope
mov
sbb
xor
push
mov
inc
xchg
test
mov
out
je
out
test
inc
in
mov
outsl
bound
inc
stc
call
inc
mov
xor
subl
xlat
push
cmc
dec
mov
xchg
pop
xor
js
call
mov
in
scas
mov
hlt
mov
int3
xchg
ljmp
sti
push
outsl
dec
xor
iret
push
icebp
push
and
scas
jo
pop
cmp
add
test
xchg
dec
xor
imul
mov
or
xchg
imulb
push
push
inc
rol
fwait
enter
inc
sub
movsb
popf
ja
mov
es
comiss
or
add
xor
hlt
js
or
xchg
pop
xchg
lea
testb
push
cli
mov
push
xor
inc
jmp
cmp
inc
xchg
cmp
cltd
iret
sub
inc
add
rcr
xor
sub
mov
imul
lahf
pop
test
xor
leave
jmp
cmp
jne
icebp
mov
mov
pop
lea
test
fs
xchg
fs
cli
subb
in
in
dec
push
inc
orl
lcall
out
jns
jbe
fistps
push
inc
loop
mov
inc
out
mov
pop
pop
mov
sub
jns
lock
cmpsb
aaa
jno
xor
leave
xchg
loopne
jb
popf
out
dec
add
rorl
data16
rcrb
imul
sbb
enter
xchg
jb
loop
inc
in
add
test
mull
mov
sbb
lds
mov
ror
mov
repnz
cmpsb
inc
inc
inc
xchg
mov
cmc
add
and
cmp
push
outsb
leave
add
adc
bound
push
push
xor
ret
xor
js
and
jmp
loopne
push
sub
add
notl
repz
push
jp
mov
adc
lods
xchg
add
pop
sub
leave
push
add
lret
sti
mov
lret
rolb
mov
cli
adcb
bswap
mov
lret
sub
jno
sahf
dec
and
mov
xchg
cmp
sub
pop
test
in
imul
mov
rcll
xchg
test
test
lock
lahf
sbb
push
out
jns
push
fsts
push
sub
mov
inc
xor
sbb
insb
imul
rcr
stos
pop
fbld
xchg
rorb
adc
mov
xchg
pop
jmp
sub
lods
es
sbb
push
adc
pop
sbb
fidivs
adc
add
daa
pop
in
popa
idiv
bnd
sub
repz
jne,pt
xchg
pop
loope
ret
repnz
xchg
clc
ret
pop
cli
iret
or
lock
incl
cmpsl
mov
imul
mov
cwtl
adc
mov
xrelease
adcb
pop
jbe
dec
and
sub
jne
sbb
inc
xchg
hlt
fcmovnb
xchg
pop
xlat
sub
mov
adc
jbe
and
xchg
cwtl
jecxz
dec
inc
arpl
in
add
ds
jae
test
and
ja
rclb
sarb
mov
xor
test
add
mov
testl
cmp
pop
mov
mov
or
add
sub
addr16
and
andl
inc
push
and
mov
lods
cmp
aas
shrb
std
or
ds
dec
dec
cli
das
aas
push
into
aas
fistl
cmp
jl
stc
dec
jbe
mov
xchg
fs
sbb
rolb
aaa
mov
xchg
loope
mov
mov
pop
mov
xchg
cmp
add
pop
jne
add
xor
ljmp
pop
xchg
mov
push
adc
inc
pushl
dec
movsl
lea
imul
and
fisttps
adc
push
or
mov
or
add
cmp
ret
sti
dec
mov
dec
jns
inc
push
lahf
enter
out
mov
cmp
insl
cmpsl
push
lret
jns
rclb
add
pop
add
jnp
sahf
cli
pop
lods
inc
repz
add
jo
movsb
cmp
pop
loopw
aad
adc
mov
ror
add
nop
fwait
pop
xchg
dec
xchg
fidivs
or
add
aas
xchg
dec
gs
add
pop
in
jne
jnp
jl
pop
rorb
or
bound
dec
add
sub
dec
pop
cs
push
and
sti
jae
pop
lock
sub
push
rcll
cmp
pop
xor
jp
cmp
jb
push
mov
dec
push
jle
add
ret
xchg
jb
cltd
cmp
in
iret
cmpsb
mov
hlt
pusha
lods
push
dec
rcll
mov
dec
xchg
fs
jmp
xchg
jle
icebp
int3
shrb
mov
cmp
lods
pop
repnz
mov
fs
sub
repz
sbb
sub
mov
fidivl
daa
pop
subl
rorb
xchg
pop
xlat
xchg
fadd
add
pushf
loopne
dec
jg
jo
fcompl
or
pop
sbb
fcmovb
inc
adc
xchg
lea
push
imul
fisttps
xchg
mov
cmpsb
sahf
daa
add
fisubrl
popa
pop
loopne
iret
push
loop
sub
dec
and
sub
rcll
mov
je
xchg
stc
cltd
pop
stos
push
or
mov
fwait
and
sub
sbb
arpl
jb
fdivrp
cltd
inc
jecxz
xchg
popa
insb
mov
jnp
xor
xchg
mov
lock
xchg
ljmp
pop
cmc
cmp
sbb
inc
loop
imul
push
dec
loope
dec
xchg
jns
cmp
cmp
jge
sub
jmp
mov
dec
cmp
push
mov
mov
je
mov
jg
push
in
insl
stc
pop
mov
dec
xchg
clc
in
pop
jnp
add
xchg
ftst
scas
and
decb
mov
pushf
mov
add
out
mov
int
xor
outsb
add
outsl
in
iret
sub
jo
mov
data16
pop
pop
dec
adc
sub
cltd
sub
insb
sbb
xlat
mov
lods
scas
sub
movsl
loopne
mov
sbb
xchg
jp
scas
xorb
lahf
ljmp
insb
inc
push
stos
xor
jbe
aaa
mov
cmpsb
loopne
repz
mov
mov
mov
inc
adc
sub
fsubs
cli
xlat
sbb
pmulhuw
fcom
inc
cmp
mov
xchg
xorb
pop
xchg
lret
dec
push
daa
out
inc
xchg
mov
xchg
aas
and
add
lahf
fimull
int3
jo
sub
movsl
cs
xlat
scas
push
mov
imul
in
pop
int3
scas
mov
stos
mov
ja
xchg
cmc
fcompl
sub
or
jnp
inc
or
imul
cmp
int
scas
inc
jno
or
inc
int
dec
daa
sub
sub
push
fistps
sub
filds
mov
sub
push
fucom
stos
mov
lret
imul
subb
mov
loope,pn
js
pop
dec
in
push
xor
cwtl
aam
ret
cltd
leave
in
add
punpcklwd
test
add
or
sbb
in
shlb
or
mov
fimull
out
jl
lods
push
jmp
fildl
push
scas
frstor
cmpsl
sub
mov
add
mov
mov
in
push
repnz
jbe
xor
cmpsl
dec
sbb
loope
lret
outsb
sub
pop
out
movsl
sbb
cmc
insb
push
test
xchg
dec
jge
mov
cmp
jnp
into
pop
orb
pop
fsubrl
inc
mov
cwtl
movsb
clc
lock
cld
movsb
add
xlat
test
mov
and
push
shrl
fdivrl
pop
lods
nop
loope
jp
shr
ds
icebp
and
idivl
ret
inc
fistl
cmp
add
mov
test
fcoms
in
loopne
adc
test
mulb
lahf
test
mov
ret
pop
adc
xor
in
int3
popf
pop
clc
cmpsb
inc
cld
sbb
and
mov
das
in
xor
pop
andps
mov
sbb
push
popa
sub
paddsb
cmp
movsl
xchg
lret
bound
or
out
adc
jno
mov
inc
dec
pop
movsl
dec
jno
fcoml
ficoms
jne
shl
inc
add
push
negb
jecxz
aad
stc
cmp
in
in
pop
adc
and
mov
mov
and
jmp
decb
dec
push
jle
cmpsb
cmp
cmp
inc
addl
lock
adc
je
mov
add
xchg
sbb
cli
pusha
fisttpl
or
xor
sub
add
cmp
xchg
shl
cwtl
andl
ss
cld
adc
es
out
pop
icebp
jnp,pt
fistpl
sub
mov
rcrb
orb
xchg
inc
pop
lret
les
xchg
sbb
sub
and
xchg
daa
hlt
mov
cmp
btc
loopne
mov
pusha
loopne
popf
cmp
ret
mov
or
cmp
pop
stos
inc
pop
ljmp
ja
or
mov
es
fwait
sbb
pusha
jns
and
dec
and
sub
arpl
mov
jge
jmp
sbb
sub
fistpl
bound
sub
jecxz
pop
cmp
cmp
in
lock
sbb
cli
lret
add
out
or
outsb
test
dec
xor
data16
scas
aam
mov
rcrb
test
out
data16
dec
add
push
sub
xor
xchg
js
repz
lret
nop
inc
aas
dec
fwait
mov
sbb
mov
inc
int
jmp
push
ficoml
xchg
sbb
sbb
mov
mov
dec
inc
adc
push
test
push
add
orl
shl
mov
into
adc
call
test
inc
sbb
and
cmp
fcoms
lods
nop
pusha
ds
mov
shl
loope
mov
inc
push
push
adc
mov
push
jns
sbb
jecxz
pop
inc
xchg
adc
pusha
lret
xor
add
inc
imul
mov
lret
sbb
jmp
push
pop
mov
fcmovnbe
and
or
popa
clc
ljmp
jbe
movsl
call
rorl
pop
mov
inc
dec
ss
sbb
test
inc
lods
nop
push
scas
mov
cwtl
and
clc
jae
xchg
ds
add
push
dec
jo
test
orl
mov
fdivrs
mov
mov
or
ss
cwtl
mov
fistpll
lahf
push
adc
xchg
sarb
addb
aas
or
xor
cmpl
mov
leave
or
xor
add
aad
jae
ja
mov
or
mov
fnstsw
loopne
inc
fisubl
cmpsl
addr16
and
xchg
stc
pop
pop
sub
int
sub
icebp
cltd
test
shl
and
and
jp
jae
push
mov
mov
stos
adc
xor
push
hlt
pop
test
cmovae
cli
mov
mov
insb
push
sub
xchg
pop
push
addr16
lret
pop
out
in
pop
imul
andb
mov
jno
or
cmp
and
scas
pop
leave
les
push
inc
adcl
push
das
nop
mov
xchg
repz
iret
xchg
repz
mov
ja
and
mov
loopne
pop
mov
xchg
mov
mov
mov
int
clc
xlat
xchg
xchg
dec
and
fs
das
call
sub
add
dec
lcall
jne
push
dec
aam
mov
sbb
cld
xchg
cmc
fimuls
mov
mov
and
or
adc
jmp
mov
stc
mov
or
push
mov
sub
leave
fwait
pushf
push
cli
cmp
mov
pusha
add
push
sub
fcmovbe
pop
pop
dec
gs
out
andb
pop
rorl
arpl
xor
lcall
mov
movsl
das
cmp
lock
mov
hlt
adc
push
cwtl
es
in
scas
push
mov
jl
mov
lea
pop
jp
movsb
inc
iret
lock
push
mov
pop
pop
cs
cwtl
cld
jge
mov
mov
mov
stos
xor
cmpsl
push
push
pop
sbb
sbb
cmp
sub
add
add
adc
pop
psubw
jge
pop
inc
clc
pusha
dec
or
adc
cmc
in
test
inc
mov
push
mov
pop
pop
fptan
pop
test
shlb
push
insl
push
jbe
aad
pop
sbb
imul
xor
mov
xor
inc
lds
data16
dec
or
xor
dec
and
ret
jle
hlt
in
adc
test
mov
ljmp
loopne
mov
sahf
mov
test
in
ret
and
out
loopne
int
mov
inc
daa
pop
fistps
xchg
cli
in
imul
lods
and
and
mov
inc
fwait
push
lahf
add
mov
sub
push
mov
dec
push
enter
fmuls
sbb
cmp
adc
pop
add
dec
aaa
fcmove
or
xor
cmpsl
sub
jecxz
jecxz
push
push
cmp
pusha
fistpl
mov
cmp
cli
arpl
outsb
loopne
xor
stos
cmp
xchg
pop
sub
mov
cld
mov
and
jge
imul
push
adc
sbb
mov
pop
jnp
sub
aad
mov
shrl
inc
push
mov
cmpsb
inc
jge
cmp
pushf
pop
or
or
mov
cmp
cs
int
mov
mov
mov
int
icebp
dec
leave
dec
loop
push
inc
adcb
mov
cwtl
in
xor
push
cwtl
add
mov
mov
movsb
enter
pop
push
cmp
rolb
or
repz
ss
outsl
sbbl
jnp
jg
or
pop
shlb
insl
sbb
xor
cmp
and
sub
sub
fdiv
mov
dec
insb
pop
jle,pt
push
jl
repz
mull
mov
loope
pop
cmc
ljmp
push
xchg
js
xor
gs
add
cmpsl
lds
call
test
lret
xchg
lret
mov
mov
jmp
ds
in
mov
xchg
push
in
scas
sbb
and
adc
aam
outsl
jmp
xchg
ret
jne
call
incb
or
push
xor
lcall
loopne
xor
push
inc
cld
gs
mov
sti
jl
clc
xlat
mov
and
push
in
pop
fdivrl
nop
pop
ret
sbb
andb
cmp
cwtl
scas
add
xchg
add
xchg
sbb
sbbl
jbe
test
jp
fs
pop
rcrb
cmc
mov
je
test
ljmp
bound
out
lret
movsb
mov
and
ljmp
in
stos
stc
dec
add
add
push
lret
aas
push
add
div
test
sbb
inc
xor
iret
mov
imul
push
sbbl
mov
push
cmp
mov
addl
push
mov
ret
leave
xor
cmp
shlb
jae
test
add
sub
insl
cmpsl
pop
in
cmp
outsb
fdivr
push
test
jge
push
add
lret
repz
pop
xor
mov
sbb
repz
add
xlat
les
or
mov
divl
outsl
in
leave
sarb
aas
insb
pop
test
ss
not
in
addb
cwtl
testl
dec
and
fildll
lcall
cwtl
repnz
or
jmp
pop
shrl
clc
jecxz
rorl
out
sarl
imul
xlat
sub
cs
aad
cmpl
dec
repnz
jg
outsb
imul
xchg
ljmp
sub
cmp
daa
outsb
mov
cmp
xor
xchg
sub
popf
std
adc
xor
sbb
mov
into
jo
stos
wrmsr
mov
std
pop
int
dec
mov
rcrl
rcl
push
lea
add
pop
mov
insl
ret
or
imul
or
rclb
fs
popa
iret
add
mov
mov
dec
popa
popa
sub
and
and
call
xchg
call
pop
in
sahf
mov
xlat
orl
dec
mov
pop
mov
inc
test
or
cli
aas
dec
xchg
add
es
es
mov
inc
sub
fwait
ret
mov
or
and
lods
sti
shlb
and
xchg
push
inc
xor
addr16
push
adc
adc
cmc
test
sbb
pop
mov
es
add
orl
push
mov
cmp
jb
cltd
push
inc
mov
movsbl
jmp
xchg
ja
call
je
dec
vmovq
push
imul
mov
int
xor
jno
stc
jle
loope
adcl
decl
dec
mov
mov
xorl
jno
push
pop
mov
mov
sahf
pop
int3
cmc
sbb
sbbl
push
cmp
in
cld
push
push
adc
jl
sbbl
add
cmpsl
sub
ds
inc
jb
mov
cld
push
and
jb
sbb
arpl
ds
loopne
iret
sub
inc
jge
jno
ljmp
push
movsl
int3
push
add
xchg
and
and
scas
pop
sbb
dec
std
mov
iret
push
test
les
mov
jne
scas
sbb
add
psadbw
test
idivb
arpl
add
mov
or
cmp
fildl
or
xchg
loope
mov
pop
sbbb
push
mov
push
fwait
dec
pop
add
adc
or
fsts
sub
out
testb
sub
pop
inc
shl
insl
cltd
loope
adc
inc
ds
rol
jmp
push
testl
push
mov
out
lods
cli
mov
inc
insl
shl
push
xchg
jne
rcrb
enter
test
les
lret
cli
das
or
popf
mov
stos
std
mov
pop
or
lds
addl
jg
ficoml
mov
les
ja
jnp
fucom
rolb
push
ret
dec
subl
lea
inc
push
xchg
jno
add
sbb
subl
in
dec
cmp
sarb
dec
push
lods
inc
xchg
out
push
cli
std
cld
xor
push
pop
aam
movsb
mov
or
pop
rcrb
push
cmp
lret
mov
adc
enter
hlt
dec
sbb
rclb
xchg
cmpl
je
mov
lods
lahf
mov
daa
inc
ss
sarb
xor
fcomps
mov
inc
ret
jbe
sbb
outsl
jle
cmp
jb
sub
dec
jo
fsub
mov
lea
xor
jb
jno
mov
mov
enter
shl
std
or
cmpsl
mov
and
dec
push
sti
pop
adc
call
insb
push
inc
add
movsl
jo
fimull
lea
fisttps
xor
adc
sbb
dec
repz
in
and
inc
inc
ret
cmp
repnz
xchg
shr
cmpsl
jmp
imul
jp
shlb
loope
lret
out
dec
fdivs
loop
adc
xor
xor
mov
cmp
add
cwtl
mov
aaa
lea
lea
lret
fidivrs
clc
xor
shlb
push
cmp
je
add
jge
xchg
hlt
pop
mov
ret
add
push
lods
in
adc
clc
fistl
mulb
loopne
add
add
push
jecxz
push
lahf
jecxz
xchg
es
adc
and
jae
dec
dec
cli
jmp
lds
fiaddl
ljmp
add
jmp
and
xorl
popa
sbbb
shll
fisubl
push
mov
in
dec
mov
mov
xchg
les
push
or
or
aad
in
dec
lds
mov
cld
and
mov
imulb
out
aaa
sbb
cltd
popa
xchg
mov
mov
in
movsl
jge
jae
popl
and
inc
fmull
mov
aad
repz
ss
call
ljmp
sbb
out
cmp
popa
clc
pusha
ljmp
js
lock
aaa
js
mov
jle
inc
push
jg
cld
jbe
pop
ret
xor
cmp
jmp
jnp
dec
sub
mov
jmp
mov
mov
adc
stos
cmp
jmp
and
mov
mov
pop
lds
dec
mov
pop
sub
inc
imul
add
xchg
daa
push
aas
jmp
inc
pop
mov
int3
push
push
rol
shlb
aad
test
jge
ret
rcrb
add
ror
xor
in
xchg
and
aas
popa
jbe
mov
orb
das
cmp
sub
aad
sub
jns
cmpsl
sub
shrl
clc
gs
mov
dec
mov
and
test
lret
arpl
ja
lahf
and
pop
pop
cmpsl
stos
sbb
loope
movsl
dec
fistpl
adc
dec
js
stc
sub
adc
pop
lea
leave
addr16
jge
or
adc
mov
outsb
inc
adc
sub
sub
mov
add
pusha
fwait
aad
sahf
sarb
or
outsl
xchg
xchg
mov
inc
cmp
daa
push
mov
xchg
pop
daa
jbe
xchg
jno
and
stc
popf
test
pop
je
dec
js
loope
or
xor
push
xchg
in
or
jb
movsl
add
arpl
out
mov
scas
std
data16
pop
push
arpl
aas
sub
insb
xchg
jo
test
in
push
imul
push
adc
adc
mov
cld
repnz
jl
xchg
sbb
lret
mov
div
jge
nop
xlat
subb
or
into
mov
ret
and
daa
xor
inc
mov
xor
cli
mov
shll
inc
push
popa
sbb
std
inc
sarl
sub
mov
xchg
xor
pop
je
sti
inc
mov
cmp
sub
or
int
leave
test
inc
cltd
sarl
data16
insl
mov
call
pop
movsb
mov
or
in
pop
shrl
ss
repz
or
sbbl
push
cmp
mov
sbb
cltd
test
or
mov
pop
outsb
and
loopne
movsb
adc
add
cli
and
adc
adc
sub
lds
int3
outsl
ljmp
lds
in
xor
inc
add
test
leave
push
inc
sub
fcompl
repnz
fidivl
mov
cmpsl
negb
popa
push
adc
enter
loope
jb
jmp
dec
pop
sbb
mov
xchg
setb
lds
ror
sbb
sti
icebp
imul
sbb
sbb
xchg
xorl
imul
cwtl
loopne
icebp
pop
xchg
push
lea
mov
test
lods
mov
lret
mov
mov
shrb
pushf
je
lock
mov
subb
or
dec
xchg
into
xchg
mov
xchg
add
fs
outsb
ret
jge
push
xor
pop
mov
daa
fcoms
in
cld
mov
jge
and
mov
sbb
repnz
push
xor
push
or
pushf
jno
inc
inc
sub
adc
int
sbb
ret
mov
cld
and
imul
nop
addr16
movsl
and
dec
iret
xor
jp
jb
adc
inc
call
js
sub
outsb
rol
mov
ljmp
pop
dec
jp
int3
cmpsb
xchg
lds
inc
iret
sbb
mov
sbb
scas
xchg
and
scas
add
dec
push
out
nop
sub
xlat
sub
lods
pop
in
jmp
push
dec
cmp
mov
push
nop
cmp
stc
add
mov
lahf
and
popf
fstpl
inc
push
push
push
lods
mov
and
gs
fnstsw
fistpll
add
push
or
mov
outsl
push
sti
pop
xchg
xchg
add
pop
xchg
scas
push
jl
movsl
and
mov
jb
xor
lds
and
pop
outsb
xchg
jl
sbb
insl
lcall
inc
pop
mov
dec
and
fldenv
scas
mov
jl
mov
movsb
div
outsb
call
call
gs
sub
xor
cmpsb
lret
and
test
aaa
ficomps
lds
push
test
scas
imul
jns
out
mov
sti
loopne
ror
repz
jno
pop
ljmp
jle
inc
mov
push
imul
mov
arpl
jle
aam
pop
es
movb
xchg
xchg
add
mov
adc
mov
mov
inc
in
ffree
lods
arpl
jae
in
cltd
inc
imul
lock
addr16
incl
iret
mov
pop
cmc
cli
mov
andl
xlat
stos
jge
cmp
jl
add
test
xor
jns
nop
push
add
or
out
lret
jmp
push
cld
cltd
sub
cwtl
jp
test
push
cs
es
add
xchg
cld
fwait
and
mov
int
aad
push
sub
gs
hlt
sarl
mov
and
or
and
in
dec
adc
mov
adc
in
or
fldt
call
mov
mov
xor
push
dec
or
sbb
pop
cs
xor
loopne
in
jmp
fucomip
stc
in
cmpsl
dec
add
mulb
sbb
int
cmpsl
inc
cwtl
test
xor
or
xchg
leave
fcoms
cmpl
xchg
xlat
stos
jbe
in
pop
xor
ds
aad
das
mov
push
scas
cwtl
adc
leave
mov
mov
sahf
les
cmpsb
cmp
stos
clc
ret
sbb
movsl
sbb
xchg
cltd
jmp
daa
mov
xchg
nop
dec
fs
loope
mov
vmovd
mov
ret
or
fidivs
enter
inc
scas
lret
dec
out
lds
jns
pop
pop
jl
dec
xchg
inc
mov
inc
sbb
push
ret
arpl
data16
push
movsl
jb
pop
popf
ret
fldcw
add
fildll
xor
or
repnz
imul
hlt
test
lret
dec
rorb
xor
rcll
adc
cmp
mov
add
cld
adc
ja
sub
pop
addr16
ret
aaa
pop
jb
cwtl
into
sbb
in
rcrb
in
mov
scas
cmp
push
mull
mov
popf
movsb
sbb
lock
mov
push
aas
jmp
jb
stos
cli
mov
dec
jno
mov
les
ret
jno
xchg
pop
jmp
aaa
into
sti
mov
stos
mov
jb
into
lods
jle
scas
sub
out
mov
jecxz
aad
jge
pop
test
dec
aad
dec
lret
insl
movsl
pop
sbb
lret
in
out
ja
frstor
or
cltd
ja
ret
dec
adc
push
push
push
sti
into
jle
add
notb
pop
out
cmp
mov
pusha
adc
sub
mov
out
mov
xor
fs
pop
lods
jae
push
xor
out
push
dec
icebp
pop
stos
mov
fisttpl
mov
or
push
loopne
rep
scas
and
pop
adc
mov
jge
bound
and
jge
add
sbb
in
lahf
int3
push
or
data16
insl
sub
cs
pcmpeqw
out
xchg
ds
div
cmp
addr16
nop
shll
sub
popa
mov
scas
mov
and
aad
jbe
push
xchg
push
fmul
movsl
mov
and
sbb
xor
test
cmpsb
jno
sub
and
and
out
into
xor
cmp
jb
es
adc
fisubs
add
pop
push
int
mov
mov
jo
rcrl
add
mov
mov
adc
mov
fisttpl
loopne
jb
add
push
int3
out
dec
into
mov
sub
idivb
cwtl
jne
test
mov
pop
xchg
pushf
sbb
push
aas
test
arpl
ret
adc
inc
mov
push
and
das
push
push
add
iret
push
cs
pop
adc
xchg
sti
shlb
adc
mov
xor
es
enter
incb
lret
cmpsl
inc
xor
scas
mov
sahf
inc
int3
sbb
ror
sbb
adc
lahf
aad
sbb
stos
ljmp
mov
sbb
pop
loope,pt
or
ja
int3
sub
jle
fs
and
fcomps
lock
add
mov
ljmp
xor
fcmovne
jb
sbb
pop
shr
mov
loope
into
dec
and
pop
inc
leave
xchg
das
xchg
shr
jecxz
jo
movb
sub
fldcw
sub
jae
push
xlat
or
push
add
mov
les
jl
ljmp
in
rorb
pop
xor
dec
xchg
sub
jle
addr16
mov
adcl
pop
pop
roll
or
mov
mov
insb
jge
jle
shll
cs
pop
loop
push
jo
xchg
jno
mov
ja
cmp
push
stos
loope
adc
lods
rclb
rcl
adc
adc
push
mov
sahf
mov
addr16
rorb
adc
lods
testl
sahf
lahf
and
loope
push
and
cli
data16
sbb
jns
lret
push
enter
and
cmp
mov
scas
add
ljmp
or
cs
subb
mov
mov
mov
xchg
or
loope
andl
mov
iret
cli
decl
lods
mov
cld
xor
mov
inc
adc
mov
daa
loop
stos
xlat
sahf
mov
mov
loope
xor
dec
xor
hlt
aaa
pop
push
mov
sbb
lcall
stc
pop
std
and
push
std
cmpsl
xlat
stos
lahf
push
shlb
pop
xchg
addl
mov
sub
pop
fdivrp
pop
imul
pop
aam
push
dec
movsb
sub
mov
mov
ret
nop
jne
ja
mov
add
inc
pop
pop
dec
clc
ret
mov
popa
addr16
push
sub
leave
push
mov
mov
in
in
stc
stc
or
notl
sbb
addr16
rcrl
mov
in
lods
inc
popa
lods
out
sub
leave
or
push
jmp
frstor
push
insb
sbb
pop
leave
pop
mov
icebp
xchg
sub
repz
loope
test
xchg
mov
ficompl
sub
jmp
xlat
std
inc
fwait
int
fidivrs
aam
mov
xchg
push
jne
loope
mov
inc
cld
push
add
inc
fisttps
push
daa
dec
es
add
pop
push
add
jg
pop
ljmp
insl
and
mov
inc
inc
cmp
jb
and
icebp
adc
lds
shl
dec
add
mov
ds
inc
mov
in
xchg
testl
xchg
rcrb
sub
idivl
push
test
xor
movsl
fmulp
mov
mov
js
stc
adc
push
push
pop
stc
lcall
out
fildll
frstor
repnz
sub
dec
dec
or
push
adc
mov
xorb
inc
push
das
pushf
xchg
xchg
in
dec
xchg
add
imul
add
pop
or
sbb
out
adc
inc
insb
test
adc
or
inc
xchg
lock
les
cmpsb
jbe
lahf
jecxz
mov
lea
jbe
sub
jle
ljmp
inc
addb
out
bound
sbb
mov
inc
mov
lods
sbb
xchg
push
xor
testb
jp
mov
pop
pop
aam
xorb
lods
stos
mov
in
insl
xchg
mov
dec
xchg
mov
mov
out
ljmp
cmp
out
mov
add
pop
sub
or
mov
aad
and
and
mov
fimuls
push
dec
sbb
call
in
dec
or
fmul
and
push
jecxz
addb
test
pop
pushf
popf
pop
sbb
add
lret
cwtl
adcl
mov
add
jb
or
pop
testb
mov
pop
xor
xor
bswap
lret
movsl
push
jmp
jle
xor
sbb
xor
mov
sbb
in
daa
or
pop
les
insb
enter
xlat
mov
inc
push
push
sti
push
repnz
int
dec
inc
or
pusha
xor
sahf
scas
jae
fs
sbb
addr16
mov
inc
add
mov
inc
ja
sbb
enter
notb
cmp
jae
cmp
cld
jge,pn
push
addr16
jge
movsb
ss
test
cwtl
test
mov
jp
ficoml
mov
aas
or
ret
push
lods
aas
test
jae,pn
push
jb
add
pop
rorl
push
mov
mov
pop
addr16
int
inc
test
dec
jbe
ljmp
cli
xor
push
dec
xorl
cmpsl
pop
xchg
enter
push
out
in
into
rcl
fsubl
jmp
scas
mov
mov
stos
jle
add
repz
cmpb
xchg
mov
pushf
bound
inc
sub
and
or
xchg
push
hlt
xlat
inc
cmp
xor
pushf
jae
mov
jmp
rcl
jae
add
cmp
shrb
jae
movb
push
lock
jne
mov
int
xchg
xchg
jno
adc
fwait
outsb
loope
adc
xor
pop
idiv
int
xor
loopne
jae
inc
push
cwtl
lcall
test
push
pusha
dec
cmpsl
fnstenv
pusha
lods
int
lods
xchg
pop
and
mov
es
loopne
pop
xchg
leave
sbb
dec
sbb
aam
ds
mov
imul
add
hlt
bound
lret
lods
cmpl
aad
push
or
mov
jo
add
scas
mov
shlb
orl
fiaddl
sbb
or
push
fidivs
jl
xlat
xchg
jns
scas
out
push
iret
icebp
int3
popf
xchg
and
sub
ret
addr16
fdivp
and
pushf
dec
push
add
popl
xor
shlb
aas
lds
xchg
and
arpl
outsb
sbb
call
jl
movsb
mov
pop
and
adc
mov
rol
adc
shrb
cmp
xorb
sub
daa
lret
xchg
push
push
dec
ss
jb
pop
inc
sub
rcrl
ffreep
dec
inc
xor
add
xchg
shll
flds
pop
in
cmp
mov
cmpb
push
push
xchg
mov
cltd
cmp
sub
lret
in
mov
sbb
pop
and
in
rcrb
repz
iret
sbb
cmp
push
je
test
bnd
push
xchg
jle
xchg
sub
jl
cmc
or
and
mov
mov
lret
add
xor
dec
pop
out
movsl
xor
subl
xchg
mov
adc
pop
adc
xor
adc
mov
std
arpl
fmuls
jmp
test
movsl
mov
ljmp
icebp
sub
test
je
leave
and
mov
in
sub
std
and
ficompl
lret
dec
js
mov
mov
adc
jecxz
sbb
adc
mov
lcall
out
mov
push
inc
outsl
mov
test
xchg
inc
jb
cmp
sbb
mov
dec
shrb
ret
add
pop
fsubrl
fiaddl
out
sub
sti
or
popf
into
leave
cli
jmp
pop
insl
xlat
pop
push
inc
insl
jge
inc
rclb
add
inc
addl
push
lret
ljmp
mov
and
sub
mov
jnp
in
mulb
fst
call
push
insb
out
jb
jnp
jnp
mov
popf
xor
aad
stos
lock
loop
mov
adc
push
pop
pop
pop
sub
daa
mov
orb
push
add
pop
fildll
xchg
xlat
sub
in
jmp
xchg
out
xchg
icebp
lret
inc
push
les
orl
sub
inc
gs
adc
push
mov
sub
inc
or
mov
push
stos
mov
xor
cld
or
pop
sub
imull
aas
cs
sbb
shll
test
loop
pop
sahf
mov
cmp
jecxz
xchg
dec
pop
out
sti
iret
inc
and
shrb
daa
outsb
lods
loopne
mov
sahf
test
fs
xor
ss
cltd
aad
sub
stos
scas
icebp
add
imul
jne
test
ss
aas
xchg
inc
test
mov
and
lret
xor
push
outsl
jnp
jle
or
enter
repz
xchg
aam
sub
add
mov
negl
pushf
mov
jecxz
cmpl
int
jne
mov
pop
dec
sub
mov
and
push
or
clc
add
and
inc
mov
sbb
lcall
inc
push
jmp
int
lcall
cmp
adc
insb
mov
mov
lods
aad
nop
clc
pushl
dec
rcrl
adc
cmp
mov
std
cmp
shlb
in
in
xor
roll
mov
and
push
lea
cwtl
aad
cltd
jns
sbb
ja
push
pop
js,pn
cmp
inc
mov
sub
enter
or
jns
fadds
ror
jne
xchg
cmp
cmc
scas
jmp
sti
rorb
jae
cs
adc
mov
or
mov
mov
adc
fstl
aam
sbb
insl
testl
cmpsb
aad
sbb
aad
mov
fwait
sbb
pop
push
push
daa
stos
movsl
cs
fisubrs
pop
mov
pop
xchg
or
push
jbe
loope
sub
and
add
xchg
mov
out
clc
bound
or
pusha
sarb
test
ss
pop
push
pop
inc
imul
lea
pop
jl
pusha
pop
adc
imul
push
push
mov
jne
push
lods
loope
loope
xchg
mov
ret
mov
dec
ja
fmull
and
jmp
dec
lcall
aas
push
out
jb
pop
fcoml
test
imul
addr16
fisubs
sub
add
xchg
stos
and
testb
std
pop
adc
iret
lret
pop
jno
push
orl
idivb
mov
fdivl
xor
inc
clc
dec
cmp
test
gs
lret
or
xor
push
mov
dec
and
insb
movsl
ljmp
jle
mov
sub
sub
icebp
sub
sahf
cld
mov
mov
and
jge
inc
dec
jg
sbb
add
push
inc
or
inc
stos
insl
je
mov
pop
jae
sbb
dec
js
imul
cld
xchg
pop
xor
inc
jmp
mov
fldcw
sbb
mov
bound
fs
bound
xchg
mov
out
add
lcall
push
adc
test
sbb
sarb
loopne
add
imul
push
shll
sti
aam
add
pushw
ds
lods
lea
mov
sub
mov
scas
shr
sub
cmp
jmp
jmp
dec
bound
sbb
cwtl
push
pop
stc
add
cmp
or
inc
push
sbb
sbb
mov
push
js
push
sbb
push
and
lods
clc
popf
pop
jo
test
movsb
and
mov
push
fsubrs
pop
push
call
mov
rol
and
aad
add
scas
outsl
sub
pop
pop
bound
jnp
jp
hlt
jo
in
xchg
jle
cs
nop
adc
imulb
xchg
arpl
adc
aas
xchg
shl
hlt
xor
xor
lods
arpl
outsb
or
xorb
pop
mov
outsl
jae
xchg
inc
push
ss
adc
or
add
dec
mov
cltd
sbb
mov
jmp
push
ficompl
add
imul
ret
aaa
mov
fisttpl
loop
sbb
mov
shrl
push
or
dec
test
cmp
les
push
divb
or
sbb
pop
les
dec
adc
fdivr
lcall
movl
jl
aaa
jae
mov
add
pop
out
xor
cmp
mov
mov
adc
push
jo
in
jne
roll
ljmp
sti
std
mov
lret
ds
adc
mov
cmp
cmp
ret
ljmp
imul
mov
out
jne
jo
gs
jg
into
adc
jne
rol
add
sahf
insl
push
arpl
lret
sub
pop
jo
dec
xlat
insl
and
test
jnp
jb
movsb
sbb
lock
das
push
mov
outsl
mov
and
push
xchg
scas
adc
add
loopne
imul
shl
jmp
pop
xor
aad
es
pop
push
cmp
pop
adc
sub
jl
rcr
pop
cmpsb
stos
pop
jae
std
cmp
ljmp
sarl
sbb
sbb
scas
mov
or
insl
fdivrl
in
mov
add
enter
xchg
popa
in
mov
pop
out
or
into
sbb
xchg
notb
sub
popa
loopne
mov
pop
fisttpl
addr16
hlt
mov
sbb
cli
ss
fisttpl
add
jo
fstp
mov
aam
enter
sbb
cmp
sbb
loopne
mov
mov
xorb
adc
mov
push
test
pushf
cmpsb
in
xor
faddl
sub
popa
in
xchg
enter
push
gs
xchg
ret
insl
xor
icebp
iret
sbb
lahf
cmpsb
movsb
mov
pop
pop
shll
pop
decl
lahf
std
repz
lahf
fidivs
das
mov
in
scas
push
adc
sbb
out
movsb
or
nop
xchg
lea
inc
int3
out
scas
popa
push
addr16
popf
daa
pop
pop
cwtl
sarb
test
ret
sub
mov
dec
ficoms
cwtl
out
xor
add
mul
mov
sub
and
popa
xchg
push
cmpsb
pop
push
movsl
or
loop
sbb
mov
xor
clc
mov
cmp
enter
inc
pop
sahf
push
out
xchg
fcoms
mov
jl
frstor
xor
xchg
push
pop
xchg
push
jle
jns
xchg
popf
dec
push
mov
mov
dec
push
cmpsl
add
adc
iret
push
divb
xor
cwtl
xor
push
pop
or
ja
push
pushf
leave
inc
sti
sbb
fdivrs
cmpsb
mov
dec
or
icebp
rcl
and
mov
dec
jne
push
stos
xor
sub
jae
inc
sbb
jo
sub
es
fiaddl
sub
adc
out
push
cmpl
fsubr
call
xor
and
ja
call
sbb
xor
stc
data16
jmp
test
in
test
in
sbb
mov
mov
fildll
out
pop
add
xchg
cmp
cmp
icebp
add
dec
jbe
jmp
insl
lcall
mov
jl
or
into
ret
cld
push
jae
jg
mov
push
gs
sub
ror
sub
sbb
pop
shrb
loope
jae
scas
mov
add
mov
pop
outsl
and
insb
cmp
lcall
cmp
punpckldq
sbb
sarl
std
in
std
sbb
pop
imul
cmp
jl
imulb
dec
inc
fcom
call
mov
mov
shll
inc
cmp
shl
xchg
dec
add
scas
mov
lret
inc
pop
jl
jp
add
mov
push
dec
in
cld
std
cmpsl
insb
jle
mov
inc
out
lcall
or
psraw
fsubrs
lods
inc
xlat
and
imul
add
fldt
xor
sbb
lahf
or
imul
jl
cmp
cmp
and
lcall
fldcw
cmc
or
sahf
inc
mov
cwtl
pop
jg
mov
or
push
push
pop
rorb
ficoml
inc
and
test
jo
add
or
mov
frstor
popf
cmp
or
jp
adc
xchg
inc
insl
cmp
imul
push
ljmp
xchg
sti
sbb
mov
aaa
mov
insb
jmp
popa
adc
jno
push
dec
push
mov
sub
rorl
mov
out
cmc
and
push
out
push
add
scas
in
mov
pop
sbb
mov
movsl
inc
test
add
call
adc
mov
pushf
test
and
cwtl
outsb
jge
in
xchg
and
es
xchg
mov
icebp
push
flds
xchg
in
mov
xor
or
and
mov
mov
je
cmp
movsl
rol
lock
xchg
xor
std
pop
into
push
test
pushf
outsb
sbb
mov
pop
sbb
out
aaa
inc
inc
pop
enter
movl
sub
push
push
in
adc
and
sub
ds
cld
mov
hlt
inc
loope
adc
mov
push
data16
aad
std
jo
and
sbb
lret
les
sub
and
push
in
ljmp
out
inc
mov
pop
dec
push
clc
call
lahf
xlat
imul
cmovg
les
rorb
xchg
lods
add
inc
mov
jns
aaa
mov
sub
repz
cmpsl
pop
in
mov
mov
into
mov
ja
and
inc
jp
pushf
mov
stc
imul
pop
mov
stos
stos
test
sub
test
inc
sarl
or
jp
aad
push
js
int
or
or
xor
or
out
cmp
daa
mov
jno
test
sti
es
lock
mov
pop
ljmp
pop
inc
pop
daa
add
clc
div
or
dec
and
shlb
push
cmp
push
mov
je
sar
shl
into
mov
test
aam
mov
or
push
divl
hlt
push
and
mov
out
adc
repnz
push
leave
subb
ja
cmp
pusha
mov
shrl
pop
dec
mov
pop
js
fimull
decl
or
repnz
inc
push
dec
pusha
dec
scas
mov
ds
aas
aas
orb
stos
and
clc
in
push
int3
mov
push
scas
or
test
lea
sbb
dec
adc
push
in
xor
clc
mov
test
sub
ss
pusha
or
insl
clc
ss
ficompl
mov
loope
mov
xchg
add
adc
fimull
xor
dec
mov
and
ret
mov
ficompl
shll
lcall
repnz
loopne
lods
sbb
adc
rcr
adcl
jecxz
adc
xchg
out
push
xorl
jb
shl
lcall
and
pop
int
addr16
cmp
das
mov
pop
imul
sbb
in
jbe
sbb
iret
outsb
lcall
xchg
jge
out
rorb
loop
mov
lcall
add
mov
dec
mov
loop
in
fcoml
cltd
popa
pop
mov
iret
cmpsb
mov
inc
fwait
daa
mov
sbb
or
cmpsl
sbb
es
push
outsl
arpl
push
orl
push
mov
pop
mov
sbb
lock
mov
push
and
mov
cmp
lcall
cs
and
sbbb
or
dec
cs
inc
popf
inc
ret
mov
jl
sub
push
pop
lahf
mov
lcall
mov
popf
outsb
pop
lcall
adc
test
jge
mov
das
sub
or
pop
inc
daa
push
mov
adc
and
pop
sub
pusha
jp
iret
rcrl
stc
xor
mov
sbb
popl
mov
push
mov
out
into
fadds
test
lahf
mov
mov
out
fstps
sub
and
stos
les
in
jecxz
in
pop
lahf
pusha
or
push
push
fisttps
jo
rolb
cmp
incb
nop
pushf
mov
lcall
jle
pop
push
addr16
lods
add
clc
push
jge
mov
cmp
xchg
or
nop
pop
adc
popl
or
add
subl
add
outsb
adc
push
movsb
mov
mov
in
pop
jnp
xchg
pop
int
jp
fnstsw
cmp
stos
scas
sub
push
aas
les
cmp
mov
gs
insl
lods
adc
das
pusha
loope
cmc
mov
fstps
jo
lret
sbb
dec
jmp
addr16
mov
inc
jne
push
fldt
xor
push
add
sub
mov
jb
jg
scas
push
in
and
aaa
push
pop
dec
pop
imul
pop
cmpb
adc
pop
sahf
lcall
dec
xchg
jmp
fbld
adc
pop
mov
sbb
cmc
push
sbb
mov
in
xor
pop
fistl
data16
and
xor
or
jl
loope
xchg
repnz
mov
push
jb
lret
xor
mov
adc
mov
mov
xchg
pop
lods
sub
lret
sahf
loopne
push
mov
pop
dec
adc
add
add
stc
mov
fisubrl
fdivr
es
movsl
inc
push
pop
pop
dec
shl
inc
in
push
cmp
sbb
out
mov
int
out
jle
adcb
push
jne
in
lds
movsl
cltd
dec
pop
sbb
popf
fiadds
or
mov
outsl
js
jecxz
das
cli
adcb
add
andl
std
push
ja
fsts
push
pop
stos
in
movsb
xlat
xor
sub
xchg
and
xchg
leave
aad
test
mov
xchg
add
push
cs
cli
pmaddwd
into
inc
adc
fcmovnbe
mov
mov
lcall
stc
fstps
ljmp
dec
cmc
add
push
inc
xchg
jg
mov
and
pop
mov
xchg
push
jl
mov
mov
and
shrb
inc
or
cmp
aad
enter
mov
daa
ficoms
rorl
push
ds
sub
push
pop
dec
xor
lods
js
test
mov
mov
decb
aaa
test
xchg
nop
sti
xchg
sti
inc
aaa
cmpsb
push
repnz
cmp
in
bound
xchg
in
inc
cmpsl
popa
testb
std
and
dec
or
sub
fsubs
pop
jne
into
adc
mov
fwait
jbe
xor
add
or
mov
push
in
fucom
mov
mov
clc
jmp
jne
adc
adc
fs
push
push
arpl
mov
pop
xchg
movsb
cmp
xchg
mov
push
sub
insb
ficoms
cmc
ss
nop
shll
or
int3
dec
jne
repz
push
fistpl
pop
xor
ficompl
gs
fildl
mov
adc
and
pop
cs
push
cmpsl
cmc
out
enter
cmp
dec
in
lods
lds
clc
outsb
mov
das
mov
imul
jb
push
jle
sarl
lret
rcrb
xor
mov
pop
jne
inc
push
mov
outsl
fdivrp
loop
xlat
cmpsl
and
sub
pop
sarl
pminsw
jecxz
mov
es
dec
enter
cmc
cmc
sbb
mov
mov
pop
outsl
jge
sub
pop
bound
cmc
xor
add
adc
and
aad
sbb
test
jno
or
out
push
mov
es
xchg
pusha
jnp
jae
mov
jno
xor
test
fs
mov
std
lea
into
jbe
or
inc
pop
cmp
aas
sarl
aad
movsl
xchg
adc
dec
pop
mov
test
cwtl
clc
push
pop
dec
jmp
shll
fcompl
sbb
rdpmc
jne
pop
out
and
iret
add
cmp
lcall
leave
ljmp
mov
cmp
cmp
aad
xchg
and
jle
dec
outsb
mov
shrb
push
cltd
dec
ljmp
and
xchg
and
jp
xor
rcrl
adc
add
test
stos
scas
inc
add
les
jp
jecxz
data16
loopne
push
mov
mov
in
adc
das
sub
lret
and
sbb
xchg
lds
cmp
movsl
sub
push
and
test
pop
ja
rcrb
add
cltd
pop
shr
cmp
inc
in
scas
jnp
and
add
mov
sub
loope
les
and
shlb
sbb
add
lea
push
jbe
shll
fldl
in
xchg
xorb
insb
push
sbb
int
fisttpl
push
sub
push
mov
cmp
mov
adc
pop
sub
fisttpl
out
inc
mov
popf
add
dec
lods
je
movsb
lds
imul
jne
jecxz
das
and
mov
rol
sub
fisttpll
test
push
push
jg
inc
int3
scas
fbstp
jnp
sahf
mov
xorl
loopne
dec
add
daa
gs
jp
dec
lock
ror
fwait
sbb
aas
sub
repnz
das
repnz
movsl
in
in
jecxz
pop
xor
sub
fsubs
rcl
out
je
xchg
and
push
les
aam
cmpsb
mull
cmp
cs
jmp
fiadds
cld
push
test
mov
sub
push
aam
mov
adc
inc
mov
adc
xor
aam
pop
add
scas
and
lock
cmp
stos
inc
call
daa
inc
jb
mov
mov
pop
mov
sbb
jecxz
jne
dec
sbb
or
push
lret
scas
jb
xchg
jmp
ja
or
hlt
push
pop
iret
pusha
in
lcall
mov
lea
bound
jge
addl
std
dec
rcrl
test
mov
cmp
mov
shrb
pop
pusha
xchg
mov
cmp
dec
lret
pop
in
lods
fdivp
jp
or
xor
hlt
cli
sbb
mov
or
xchg
pop
xchg
js
inc
scas
shr
add
and
into
fwait
pop
push
sahf
cmp
pop
loopne
xchg
mov
jmp
test
jnp
sqrtps
es
push
adc
mov
sbb
cmp
jp
dec
rolb
mov
lods
dec
scas
push
jecxz
aad
inc
sbb
test
sbb
scas
and
mov
push
outsb
test
scas
and
inc
pop
ds
stos
cltd
mov
stc
loopne
repnz
mov
stos
mov
mov
out
mov
dec
leave
push
add
jmp
mov
jb
in
rorl
push
addr16
scas
sbb
xchg
popf
repz
ljmp
cmpsl
in
cmp
pop
imul
test
or
pop
xor
leave
mov
lods
mov
pop
xor
popa
arpl
in
icebp
mov
push
ja
movsl
xor
push
fucomi
lods
lea
mov
or
xor
imul
xor
leave
pop
sbb
pop
in
add
jg
sbb
movsl
dec
xor
cmpsb
cmp
imulb
cmp
adc
adcl
add
enter
neg
daa
stc
in
popf
and
pop
mov
mov
ljmp
test
mov
pop
adc
jnp
das
jae
ss
inc
mov
and
push
jmp
insl
mov
outsb
mov
int
sub
lods
pop
je
jl
pop
rcll
pop
ja
cld
inc
xchg
pop
mov
sbbb
mov
repnz
inc
or
loope
or
sub
sbb
sbb
adc
pop
in
ss
cwtl
jp
and
es
call
insl
jbe
and
or
xor
loopne
cmp
sbb
mov
cmp
in
call
jae
xor
mov
ss
xchg
cld
rolb
arpl
sub
cmpsl
add
xlat
xchg
mov
jmp
insb
fucom
les
jne
mov
inc
das
mov
aam
fs
cmp
cmp
and
aad
cltd
rcr
cmp
call
lods
incl
pop
sbb
sub
push
sbb
add
mov
adc
push
adc
cmp
imul
insl
push
movsb
arpl
jg
xor
aaa
xchg
pop
dec
add
jno
pop
pop
adc
iret
push
into
out
mov
fwait
or
mov
jns
les
adc
mov
lods
lds
add
stos
jp
fimuls
cmpsb
xchg
cld
sbb
lahf
sbb
mov
jns
subl
mov
and
test
fs
mov
dec
or
push
mov
mov
in
int
push
pop
sbb
mov
test
jge
js
mov
or
iret
int
ret
sub
movsb
xchg
ret
outsl
sahf
and
sbb
bound
nop
sbb
or
inc
cltd
mull
push
orl
push
dec
mov
test
aas
lcall
faddl
add
and
or
sti
jnp
icebp
call
push
sub
mov
sub
ret
outsb
adc
scas
sub
fs
sahf
cltd
mov
inc
cmp
pusha
pop
fdivrl
push
xor
jnp
scas
mov
push
xlat
add
dec
jp
cs
rcl
and
xchg
pop
popf
jecxz
sbb
mov
jae
sbb
or
cli
daa
int
mov
cmpsb
mulb
push
jmp
into
lods
xchg
sub
adc
test
cmp
outsl
inc
cwtl
jecxz
ret
cmp
and
push
mov
je
inc
pushf
jbe
dec
inc
call
test
movsl
lret
adc
ja
xchg
dec
aad
fisubs
mov
mov
or
inc
cli
fwait
cmp
repz
mov
dec
sbbl
lcall
dec
sub
pop
push
mov
pushf
jl
call
mov
aad
pop
cmp
std
add
cmp
or
mov
mov
lea
jge
mov
ficoml
push
lahf
out
scas
add
mov
jnp
fisttpll
push
ja
shr
sahf
aam
mov
add
data16
mov
pop
pop
dec
mov
cmp
mov
ljmpw
out
add
mov
pop
sbb
jmp
aaa
ficoml
pop
lea
shlb
mov
outsl
push
fs
push
xchg
jnp
pop
repz
lret
lcall
das
mov
inc
mov
pop
mov
dec
push
xchg
imul
leave
mov
lret
ljmp
out
in
inc
les
arpl
insb
dec
or
inc
cs
jnp
adc
pop
dec
jae
out
jl
loop
ret
mov
inc
pop
lret
ror
data16
out
fnstsw
movsb
mov
add
push
lock
xor
int3
xor
icebp
loop
xor
mov
je
es
jg
dec
sbb
xchg
or
lods
outsb
dec
movsl
dec
lock
enter
sbb
icebp
mov
push
int
lock
jg
fwait
inc
shrb
push
add
lahf
cmp
popa
pop
cmp
aam
repnz
mov
loope
in
ja
add
cmp
mov
jne
jbe
push
ret
jo
repz
sbb
xchg
pop
call
xor
aad
fwait
loope
jp
sbb
mov
repz
test
negb
iret
in
cmc
shr
push
push
adc
jmp
adc
adc
clc
rcl
out
and
fidivrl
gs
out
or
je
add
sahf
adc
inc
pop
and
and
mov
imul
addr16
jge
dec
xor
fstp
ds
mov
sahf
or
loope
aam
orl
mov
adc
lds
inc
mov
ljmp
imul
les
movsb
jl
insb
add
push
sbb
and
in
pop
mov
pop
xchg
icebp
push
jno
es
lret
jp
dec
testb
daa
int3
push
adc
mov
shrb
jne
int3
push
mov
or
in
jo
mov
jns
lock
popa
push
ficompl
adc
ret
ljmp
inc
inc
sarb
cltd
xor
rclb
adc
add
xorl
mov
mov
jae
mov
outsl
pop
nop
lock
les
test
push
outsl
pushf
cmp
jns
jbe
xchg
sbb
add
push
add
sub
mov
xorb
sbb
int
insb
xor
in
pop
pop
jnp
jne
push
bound
xchg
sbbl
pop
mov
and
fisttpll
ljmp
add
pop
sub
dec
inc
insb
lods
scas
cmp
lcall
fs
cltd
cs
repz
jle
xor
movsb
shr
out
stos
scas
scas
outsl
jb
mov
loop
xor
mov
pop
jp
add
xchg
cmc
fsubrp
fidivrl
push
int
xor
push
mov
outsl
cwtl
test
pop
sbb
and
das
xchg
jns
fldz
xor
lea
lds
mov
push
and
mov
jecxz
mov
xchg
push
fdivrs
jg
jl
adc
addl
notl
in
sub
clc
push
mov
jecxz
xchg
orb
cmpsb
or
ja
insl
push
xchg
outsb
inc
ret
mov
dec
adc
cwtl
mov
scas
xor
jle
mov
aaa
fsub
pop
aas
call
cmp
das
lods
push
xchg
lds
fistpl
dec
cmpsl
lahf
test
scas
cmp
and
sbb
int3
ja
iret
shrb
test
push
nop
dec
testl
mov
inc
jmp
shufps
sbb
call
xchg
cmpl
orb
fxch
test
cmp
sti
sbb
js
pop
pop
lret
or
mov
sub
push
bound
dec
stos
push
in
daa
and
lcall
sti
inc
dec
and
cwtl
lea
mov
fdivp
data16
scas
jae
and
pop
sub
push
sbb
arpl
pushf
outsl
imulb
pop
mov
divl
mov
inc
sbb
stos
or
jbe
lret
fcmovu
mov
cwtl
incl
imul
sarl
inc
rol
es
mov
lahf
shl
cmp
repnz
rol
lret
mov
push
iret
movb
inc
jno
mov
fnstenv
test
imul
mov
test
imul
shlb
pop
mov
scas
inc
loope
addr16
test
jo
add
sub
shl
mov
aam
cmp
lods
and
cmpsb
mov
cli
adc
insl
dec
xchg
lds
mov
stos
popf
sub
adc
rcr
jns
dec
xchg
add
insb
push
repz
inc
mov
popa
xchg
mov
mov
addr16
enter
adc
fwait
lods
adc
pop
lret
jo
into
xchg
and
adc
loop
xor
sub
jle
call
sbb
add
dec
xchg
and
ljmp
jae
xchg
lahf
dec
jns
jae
aad
hlt
inc
shl
mov
mov
jp
daa
in
jbe
lock
xchg
dec
fstpl
push
and
mov
xor
stos
stc
or
fucomi
pushf
clc
aaa
xor
pop
popa
imul
dec
dec
mov
mov
loopne
addl
dec
adc
int3
push
mov
jb
les
mov
fsubl
or
insb
jp
test
push
roll
mov
clc
add
inc
fisubrl
data16
mov
mov
outsl
addl
rclb
dec
ss
lahf
test
fdiv
mov
lret
insb
xor
sahf
outsb
shlb
cmpb
add
xchg
filds
sub
mov
pop
lret
adc
jecxz
xlat
push
mov
aas
add
adc
ret
loopne
inc
aam
sti
jl
sub
inc
data16
xchg
mov
sti
leave
pop
fisubrs
sub
jecxz
inc
sub
in
mov
dec
fsts
jmp
roll
mov
pop
test
push
jnp
dec
dec
stos
adc
mov
adc
outsl
xor
hlt
push
dec
stc
lds
mov
mov
inc
push
stc
int3
repnz
dec
out
jbe
es
rorl
xor
test
movsl
dec
and
cmp
loope
mov
xor
in
movsb
dec
das
clc
mov
mov
jno
or
orl
repnz
push
sbb
rcl
dec
aas
popa
test
ja
xor
cmpsb
aad
lds
fcom
mov
clc
leave
xchg
or
sub
sbb
inc
dec
or
or
int3
adc
mov
scas
loope
push
sbb
push
dec
xorl
mull
xchg
jp
mov
adc
lea
mov
or
jno
pop
shlb
popf
int
dec
nop
inc
xor
lret
adc
and
inc
xchg
sbb
in
push
sti
mov
inc
pop
loopne
fwait
stos
shl
or
inc
dec
test
movsl
mov
cmc
ss
cld
cltd
add
mov
mov
xlat
xchg
jnp
xchg
lcall
fs
sub
or
push
daa
lret
shr
sahf
mov
or
mov
xchg
xchg
adc
pop
sbb
mov
scas
pop
sbb
int3
scas
test
lahf
sbb
fadds
adc
and
pop
aam
rolb
push
push
cmpsb
imul
je
lods
fdivl
or
inc
pusha
ljmp
ss
push
push
xchg
fdivrs
cli
lods
lock
pop
cmpl
nop
pop
testb
add
jbe
push
out
movsl
xchg
sub
mov
push
aad
cmpb
in
outsb
push
imul
push
and
stos
inc
lock
pop
push
ljmp
fs
lock
pop
xchg
and
dec
test
aam
xchg
inc
add
call
dec
dec
pop
das
adc
test
fdivl
movsl
jp
dec
aaa
xchg
mov
or
test
or
mov
pushf
sti
xor
xchg
cwtl
mov
call
mov
rcll
ret
inc
in
lahf
xor
sarl
xchg
pop
mov
inc
sub
imul
or
xor
insb
jne
and
test
out
fs
push
in
inc
stos
fdivl
xor
idiv
imul
out
test
nop
lret
psubsw
inc
mov
cmpsb
lock
das
loop
xor
test
sub
lods
jo
dec
mov
mov
sub
jp
fucom
dec
cltd
mov
rep
das
out
mov
iret
cmpl
arpl
pop
fucom
jmp
shl
stc
inc
inc
xor
push
and
mov
mov
cmp
adc
mov
add
cli
push
insl
mov
jbe
vphsubwd
mov
push
push
mov
adc
sbb
lea
rcr
cmpsb
call
in
addr16
mov
mov
pusha
mov
enter
popf
dec
fisubl
mov
ss
into
fsubrp
mov
outsb
das
aaa
sbb
dec
clc
daa
in
negl
arpl
dec
mov
fisttpll
pop
cmp
outsb
push
loope
scas
es
dec
ja
push
xor
dec
lahf
sbb
test
adc
jmp
test
xchg
daa
movsb
jns
arpl
sbb
jle
sub
sarb
ret
fsubs
add
insb
push
jle
pushf
push
outsl
repz
fwait
lods
inc
pop
push
sbb
push
xchg
repz
fcoms
cmpsl
inc
jae
ret
push
lods
mov
inc
stos
shll
or
test
add
and
addr16
adc
fs
jo
adc
inc
sbb
mov
and
hlt
icebp
aaa
sbb
jecxz
icebp
dec
imul
or
mov
mov
sbb
cld
loop
stos
add
loop
cs
sbbl
lock
inc
mov
mov
in
inc
jp
aad
sub
loopne
lcall
sbb
lret
mov
dec
push
fldt
lock
imul
sbb
scas
add
notb
add
pushf
inc
sbb
sbb
imul
push
pushf
aaa
nop
push
repnz
mov
dec
xor
xor
test
insb
cmp
movb
sub
shrl
mov
push
fldl
pop
jnp
in
cmpsb
xchg
xor
or
push
or
cmp
imul
daa
sub
mov
lods
ja
mov
sbb
or
test
adc
les
push
test
mov
sub
repz
push
mov
aam
inc
hlt
mov
jl
mov
repz
or
cmovs
or
dec
lret
test
std
push
or
ficoms
and
xchg
add
xchg
push
push
mov
or
pop
cli
loopne
sar
repnz
aam
mov
jecxz
rclb
mov
sub
push
rorl
sbb
xchg
jge
adc
inc
cmp
pop
hlt
scas
dec
out
das
push
mov
mov
mov
push
add
xchg
clc
sbb
add
test
js
add
jg
lods
xor
lods
lret
pushf
xor
cmc
inc
sub
shrl
xchg
sub
dec
mov
mov
add
inc
or
inc
pop
push
mov
cwtl
lods
mov
popa
jae
clc
cmc
ret
shl
jl
sub
xchg
mov
fisttps
push
stos
imul
push
push
int
cltd
jnp
mov
rorl
int
popa
add
jnp
das
pop
pop
outsl
mov
mov
jecxz
popa
mov
push
iret
icebp
int3
fpatan
sbb
and
ret
mov
lret
xchg
das
dec
push
pop
inc
insl
and
dec
les
jle
push
mov
mov
xor
lea
fnstsw
cmpsl
xor
fbstp
mov
push
sub
test
scas
fmuls
pop
or
or
mov
rcrl
es
pop
jecxz
enter
cmp
jns
int
into
rcrl
fnstenv
jb
mov
lcall
cli
and
enter
xor
repnz
xchg
es
cmp
mov
mov
and
push
mov
xor
xor
adc
shrl
imul
push
jb
add
flds
fcmovne
xchg
mov
inc
cmp
cs
aaa
arpl
or
dec
stos
ss
lret
lcall
hlt
mov
pop
xchg
mov
dec
jne
xchg
inc
mov
nop
dec
daa
mov
mov
mov
push
cmc
les
xchg
testl
jecxz
mov
mov
cld
mov
dec
sub
push
jmp
test
scas
jno
sub
out
xor
rol
aam
xchg
fld
iret
insl
das
xchg
push
scas
loop
outsb
cmp
ds
rol
ror
fildll
dec
pop
rclb
popa
les
lods
flds
popa
fildl
adcb
aaa
jns
sub
sti
lds
adc
enter
sub
lock
xchg
and
lret
mov
out
call
adc
popf
imul
subl
xor
dec
imul
sti
les
cmp
sti
dec
push
dec
dec
mov
inc
lods
out
pop
in
sub
cmp
dec
or
lahf
xchg
cmpsb
cmp
jns
and
fistps
mov
das
ret
xchg
xchg
pop
aad
ja
pop
pop
xchg
mov
stos
ret
pop
push
jp
popa
out
pushf
and
mov
stc
xorb
adc
enter
inc
mov
xor
movsb
stos
sbb
push
sti
cs
push
and
loope
lock
repnz
and
data16
gs
mov
rcll
jge
imul
aam
movsb
xor
rorl
fstpl
dec
pop
mov
adc
sahf
icebp
dec
adc
jne
loope
aas
adc
pop
stc
pop
xor
pop
shrb
or
shlb
add
mov
ds
or
fiaddl
dec
repnz
sbb
and
pop
out
pmaxub
dec
push
sahf
sub
mov
jnp
lds
dec
xchg
cmc
xlat
shl
es
les
dec
mov
push
xchg
lcall
pop
push
xchg
mov
hlt
sub
inc
adc
in
aas
inc
cld
push
add
nop
ds
push
bound
ret
jae
enter
nop
js
mov
stos
fs
jmp
mov
bound
lods
and
jl
ficomps
and
scas
or
ret
insl
shrb
pop
out
arpl
sbb
mov
les
std
fsub
mov
shr
cmpsl
pop
test
test
imul
fs
jae
in
sbb
mov
xchg
pushf
out
ss
mov
dec
pcmpgtw
test
xor
cli
push
dec
cld
shrb
pop
cmpsl
dec
or
pop
sub
add
dec
ds
shlb
and
xchg
jns
sti
jmp
xchg
mov
std
inc
outsb
sub
pop
and
mov
aaa
call
pop
fldt
jecxz
cld
les
js
in
jg
cmpsb
jo
mov
mov
push
ds
aad
add
test
daa
pop
rorb
cld
mov
fisubl
bnd
lret
add
pushf
outsb
ret
mov
adc
dec
adc
mov
ret
add
stos
sub
enter
stos
push
into
stc
jbe
cmpsb
cmpsl
es
xchg
adc
and
mov
or
loopne
lcall
insl
mov
jge
mov
shl
add
jo
pop
dec
inc
jb
jg
stos
push
jecxz
xchg
aas
rcrl
sub
test
insl
movsb
dec
or
ja
sub
mov
push
scas
xchg
inc
dec
xor
lods
push
cs
idivb
dec
xchg
aam
jbe
iret
jo
mov
jp
sbb
xor
out
jl
clc
insl
mov
rorl
pop
xchg
test
call
jne
gs
shrb
jnp
jg
ret
add
jl
inc
dec
add
xor
shll
test
aad
icebp
cli
mov
add
cmp
jno
add
sub
cmpsb
add
sbb
jge
stos
and
add
sbb
adcb
rcl
push
aam
xor
add
cmpsl
cltd
fsubr
or
pusha
sub
js
xor
test
mov
daa
cmpb
ja
outsb
cmp
and
dec
sub
xchg
ficoml
mov
xor
pop
bound
sbb
mov
push
fmuls
fadds
inc
clc
add
repz
sub
cltd
sbb
mov
in
enter
es
sbb
ret
jae
rolb
cltd
push
mov
js
cwtl
pop
and
push
sub
je,pt
dec
dec
mov
jns
xchg
xchg
andb
test
adc
inc
add
lods
rclb
push
adc
dec
cmp
insb
lahf
push
stc
lock
cwtl
dec
arpl
loopne
jle
sbbl
je
jl
fiadds
sub
adc
jmp
imul
stos
mov
imul
icebp
in
push
lret
arpl
mov
pop
cmp
inc
xor
js
add
push
mov
mov
mov
pop
gs
std
loop
jb
data16
in
jbe
mov
stos
negb
xchg
pop
jle,pn
adc
mov
addr16
xlat
jnp
jge
add
sub
cs
mov
inc
arpl
stc
mov
or
and
mov
scas
pop
aad
inc
sub
push
stos
lods
cmp
jns
adc
sbb
mov
int
mov
pop
lcall
push
imul
pop
lret
enter
mov
daa
das
ret
mov
lock
add
mov
rcl
call
xor
punpckldq
jl
ljmp
test
rclb
mov
xchg
inc
sbb
fs
pop
out
test
es
fwait
and
jnp
insb
cmp
dec
push
mov
sub
xor
mov
in
notl
mov
cmp
or
xchg
fcmovnb
jnp
shr
jle
pop
gs
out
sbb
or
mov
loope
sbb
mov
ret
stos
or
sbb
mov
lret
inc
xchg
mov
xchg
stc
jle
ret
test
mov
mov
data16
push
sbb
fldenv
lds
sub
das
lods
lret
xor
icebp
or
mov
fidivs
mov
sbb
jle
or
stos
std
sbb
bound
mov
mov
cld
loop
shlb
dec
and
mov
ds
sbb
jne
nop
xor
roll
repz
pop
dec
pop
cmp
mov
xchg
inc
insl
pop
pop
out
gs
call
and
sub
sahf
ret
inc
or
mov
dec
push
push
aaa
nop
sub
or
test
and
leave
into
aaa
loopne
xchg
push
int3
and
xchg
xor
add
ss
aam
in
adc
sbb
dec
pusha
leave
or
push
repnz
int
push
dec
sti
mov
mov
xchg
push
inc
scas
dec
fnstcw
push
xor
pushf
mov
int
out
out
xchg
aas
xlat
inc
inc
sbb
out
sub
mov
add
sbb
hlt
xor
sbb
lods
pop
dec
gs
adc
ret
mov
pop
mov
jl
mov
add
call
and
push
das
pushf
and
pop
push
mov
daa
dec
lret
push
xor
jecxz
push
adc
jne
sub
fs
adc
add
jae
fstl
inc
mov
dec
sbb
sbb
cmp
dec
mov
cmp
je
addr16
jecxz
xchg
or
dec
bswap
push
add
lods
add
jns
push
fwait
and
xor
pushf
aad
jle
adc
loop
cmp
imul
lcall
pop
pop
push
dec
loope
mov
in
or
push
ret
add
negb
sbb
add
das
or
shl
cmp
mov
imulb
ja
repz
or
notb
and
pop
repnz
and
aam
pop
mov
je
mov
stc
leave
and
fists
and
scas
imul
out
mov
gs
sbb
inc
call
arpl
mov
cmp
add
rcrb
push
mov
lods
das
ljmp
pop
pop
dec
xor
repz
jle
pop
scas
test
mov
xchg
jmp
and
fwait
jmp
mov
in
in
pushf
clc
testb
sub
push
add
les
fisttpl
fwait
cmpsl
push
shrb
insl
ror
subl
xor
shll
mov
sub
sub
xchg
testb
repz
jp
imul
pop
add
mov
jg
lock
jg
push
sbb
enter
push
add
mov
es
xchg
insl
aad
mov
test
push
popf
cmp
pop
adc
jbe
pop
mov
out
xchg
xor
into
mov
repz
jl
xchg
out
pop
or
rorb
push
lds
imull
pop
fsub
jno
repz
inc
loopne
pusha
jbe
lds
test
add
adc
in
push
mov
xor
cmp
outsl
pop
lds
pop
push
stos
jnp
fdivs
data16
sbb
sti
push
movsl
inc
shrb
loopne
decb
jns
ss
mov
sbb
jp
add
inc
xlat
test
cwtl
stos
out
push
lret
shl
inc
cmp
bnd
push
popf
push
mov
inc
cmp
mov
fwait
xor
mov
mov
imul
cmpsb
jno
stos
dec
andl
push
das
shlb
dec
jecxz
or
lock
bnd
jo
call
mov
lea
push
scas
push
push
inc
xor
std
jnp
mov
add
data16
and
pusha
ljmp
lret
adc
clc
cmp
ja
mov
pop
in
pop
cmp
jmp
into
xor
mov
dec
icebp
push
lcall
out
inc
in
data16
scas
dec
rcr
jmp
cmc
jno
fs
dec
aad
pop
enter
xchg
xchg
mov
jo
mov
cmc
js
jge
jle
sti
xchg
dec
pop
movsb
jecxz
fmul
lea
dec
mov
in
cld
inc
cmpsb
dec
out
add
movsl
or
mov
cwtl
adc
push
std
xor
inc
xchg
and
add
sub
jb
pop
jae
loope
sbb
dec
prefetcht0
xchg
push
xchg
mov
inc
addb
imul
mov
or
inc
jae
repz
movsl
pusha
mov
cmp
movsl
pusha
ret
cltd
jge
xchg
cmp
sbb
and
or
xchg
add
pop
shl
adc
in
and
das
add
insl
mov
sub
insl
pop
loopne,pt
sbb
dec
inc
mov
inc
das
in
imul
pop
or
mov
push
push
loopne
pop
sub
mov
nop
inc
imul
sub
lcall
inc
mov
xchg
pcmpeqw
mov
popa
popl
loopne
mov
inc
ja
pop
loop
outsl
cmp
pop
ffreep
pushf
sbb
rcrb
push
ret
inc
fadd
pop
jp
or
push
je
adc
sub
out
insb
dec
out
mov
rcll
dec
mov
dec
pop
rcll
sub
dec
xor
pop
dec
sub
and
mov
das
xlat
mov
addr16
mov
insl
jnp
mov
push
and
mov
mov
adcb
adc
jnp
and
stos
jge
pop
sub
repz
or
shlb
adc
scas
xchg
or
iret
rolb
mov
jo
push
jbe
add
or
xchg
or
xchg
arpl
or
and
and
push
push
cmp
cmp
enter
jle
scas
mov
or
mov
sbb
movsl
in
ja
sbb
push
gs
mov
sbbl
jp
lods
in
pop
shlb
int
imul
andb
dec
sar
sub
adc
gs
xchg
adc
into
sub
mov
shrb
movl
cli
xchg
pop
pop
adc
cmp
incb
jbe
test
jo
insl
insl
mov
inc
insl
mov
sbb
lea
dec
and
mov
jae
push
iret
adc
cmpsb
out
push
ds
hlt
sub
push
mov
cli
sub
sub
jmp
mov
mov
sbb
fsubs
rcr
mov
pop
and
pop
mov
mov
stc
dec
cli
stos
fstps
adc
out
enter
aas
adc
jecxz
inc
pushf
dec
jle
rorl
call
inc
push
jnp
or
ds
or
mov
addb
pop
cli
rcrb
pop
dec
sbb
in
pop
push
push
scas
push
and
lods
jae
mov
jb
xchg
adc
mov
mov
test
cld
add
jbe
jnp
sub
push
fists
or
addb
mov
add
fsts
enter
mov
sub
sbb
test
ret
sbb
fstpl
push
rcll
inc
icebp
mov
inc
mov
jb
nop
ficoml
xchg
mov
popa
cmpsb
mov
push
cli
imul
jge
xor
fmuls
adc
add
xorl
xor
dec
fcoms
aam
pop
mov
fmull
add
inc
mov
lahf
dec
xchg
es
icebp
jmp
dec
add
pop
pusha
jg
lock
pop
addl
pop
out
xor
test
mov
fadd
mov
cmpsl
pop
pop
cmp
mov
into
mov
lret
jl
xor
mov
mov
dec
cmp
lret
cwtl
cwtl
addl
dec
les
insb
and
inc
leave
test
clc
lea
mov
cmp
cmp
mov
push
or
gs
inc
outsb
sbb
rcrl
mov
cmp
sahf
ljmp
sub
daa
rolb
xchg
jnp
insl
data16
mov
mov
xchg
and
push
test
xorb
lea
ss
cmp
js
inc
mov
jecxz
addr16
fcoms
repnz
mov
sbb
jmp
mov
fbld
and
fadds
test
dec
fnstsw
faddp
insl
push
imul
sbbl
mov
ljmp
test
jp
mov
sub
lea
pop
fldt
outsl
mov
insl
cld
leave
clc
popa
clc
addr16
cld
and
pop
in
mov
push
jge
or
mov
into
cli
ret
lock
aam
js
xor
adcb
outsb
cld
adc
lods
cmpsl
in
mov
into
dec
subl
sub
cmpsl
mov
sbb
mov
add
xor
xchg
hlt
jb
pop
sub
clc
jg
jae
mov
xchg
adc
aad
adc
mov
ret
add
les
in
sub
cmc
pushf
test
and
mov
iret
lea
les
and
push
ficoms
xlat
sbb
inc
cmpsb
sbbl
xor
mov
out
clc
inc
dec
jle
mov
ljmp
mov
sub
add
mov
rcr
js
insb
xlat
je
incb
jecxz
adc
es
jl
inc
adc
inc
das
or
dec
nop
jbe
rclb
mov
movsl
fsubs
ljmp
les
sbb
scas
adc
sbbl
jmp
push
daa
cwtl
pop
fwait
imul
out
sub
xchg
out
xchg
fcmovb
push
or
lea
jne
inc
fdivl
lods
fists
sbb
xor
add
fistpl
push
popa
loopne
or
loope
dec
mov
mov
inc
in
fcmovb
cmp
xor
clc
pop
add
add
ss
repz
sbb
scas
or
jecxz
scas
dec
loop
inc
and
add
jl
movb
push
or
or
int3
or
arpl
stos
jb
sub
subb
jb
push
xchg
xchg
cmp
lret
push
int3
js
cltd
add
imul
out
ja
adc
add
sbb
mov
fbld
add
mov
mov
subl
add
adc
inc
adc
ret
mov
mov
push
push
stc
lods
lret
xchg
mov
xchg
js
dec
scas
or
adc
ds
sbb
jmp
out
add
nop
repnz
sub
pop
mov
mov
es
lret
adc
out
xor
pushf
add
xchg
inc
xor
arpl
aaa
xchg
or
lret
xor
subl
out
sub
pusha
sbb
adc
adc
fnsave
popf
adc
sub
adc
sbb
inc
ds
fisttpl
gs
ljmp
jle
mov
add
pushf
jmp
fwait
aas
mov
aaa
std
sbb
push
adc
fists
insb
and
dec
cmc
aaa
fwait
aaa
adc
fld
jo
stos
pop
fs
pop
mov
icebp
push
or
xor
out
dec
clc
int
sub
mov
outsb
add
lret
das
inc
xchg
aas
lcall
dec
movsb
iret
or
fstps
mov
loopne
xorb
test
arpl
test
ss
dec
pop
push
or
test
or
jp
cmp
pop
adc
enter
sub
dec
jbe
in
cld
or
mov
dec
dec
jl
insb
jge
jg
lcall
dec
icebp
cmp
push
popa
movsl
fcomi
lret
rcrb
push
lds
fisttpll
xor
cmp
sub
jbe
inc
push
in
and
mov
js
lret
and
stc
mov
mov
sub
and
xor
loope
stc
popf
jmp
sub
and
stc
jmp
jecxz
mov
push
popa
mov
mov
xchg
lods
mov
sti
lret
pop
jbe
cmpsl
jb
xor
pop
dec
jp
inc
je
xor
loop
jnp
cmp
enter
mov
fnstsw
adc
pop
cld
add
daa
ss
mov
mov
and
adc
orb
cmp
daa
iret
jl
outsb
jb
push
repnz
repnz
enter
adc
sub
pop
je
lods
dec
jl
add
fcoms
test
repz
xchg
sbb
lret
xchg
cld
xor
loopne
jge
xchg
mov
sbbb
push
dec
lods
push
aas
dec
insl
and
addr16
fldenv
pushf
sub
or
xor
fs
sti
mov
out
popa
popf
je
mov
aad
arpl
mov
ret
mov
sub
sbb
dec
jle
mov
aas
out
adc
aam
stos
add
cmp
xor
nop
mov
push
inc
push
pop
sub
and
push
lahf
sbb
pop
test
inc
in
xchg
xor
or
aad
push
adc
es
adc
mov
cwtl
cmp
clc
push
inc
subb
and
adc
imull
sbb
leave
mov
dec
adc
imul
xor
jmp
fs
mov
jmp
push
dec
mov
cli
gs
cmp
movsl
lods
fdivr
mov
int3
inc
popf
sub
in
jnp
cmp
fucomip
adc
stos
cltd
xchg
cwtl
fdiv
mov
imulb
inc
int
and
repz
mov
push
mov
idivl
fdivrs
sarl
rorl
out
scas
ss
stos
mov
or
xor
fisttps
adc
popl
or
lcall
out
xor
or
stos
and
std
test
jle
adc
and
jmp
jns
imul
pop
push
fisubl
xchg
push
inc
movsb
jmp
test
mov
add
xor
xchg
rol
test
or
add
add
mov
push
inc
mov
ljmp
jno
ds
aas
outsb
sahf
xchg
adc
jnp
popf
aas
enter
xor
lcall
int
out
int
push
insl
push
mov
sub
shlb
cwtl
lret
push
push
nop
lds
cli
bound
cwtl
into
mov
out
mov
cmpsl
je
mov
xchg
fucomi
sub
dec
shll
shll
xor
dec
rcrb
out
out
push
stc
or
sbb
push
xlat
sbb
bound
mov
rcrb
and
lcall
shufps
outsl
sub
mov
stos
push
or
ljmp
movb
movsl
test
aas
fmull
enter
jle
dec
int
sub
lcall
adc
mov
fwait
repnz
inc
xor
sub
inc
jb
lods
stos
mov
test
loopne
iret
sub
and
rcl
lock
loopne
add
adc
movsb
hlt
scas
int
fldl
and
sub
sub
dec
push
arpl
clc
notb
inc
dec
test
pop
mov
push
jb
xchg
pop
sbbl
push
inc
xchg
negl
testb
rcll
inc
xor
push
push
inc
pop
insl
shll
cmp
mov
popa
ljmp
sbb
ss
dec
jmp
dec
repnz
pop
pop
or
fwait
jecxz
cmp
and
dec
movsb
outsb
nop
ss
aad
pushf
ret
push
leave
jecxz
sbb
mov
push
arpl
mov
in
out
inc
icebp
ret
rclb
push
pop
and
sti
outsl
add
inc
and
ret
mov
and
mov
call
out
ret
jmp
int
sbbl
jl
pop
test
jg
aaa
mov
adc
je
fiadds
or
shrb
jmp
xor
dec
in
sbb
outsb
mov
push
mov
push
cmp
add
shrl
fidivrl
dec
hlt
rorb
pop
ds
push
push
mov
jno
enter
mov
dec
cwtl
out
dec
xor
int
aaa
and
xor
cs
cmp
push
imul
nop
pop
and
mov
push
pop
lock
sbb
mov
and
aad
sbb
scas
sbb
inc
cmp
shrb
cmp
call
adc
sbb
sbb
clc
jno
popa
mov
lcall
lock
and
push
sub
xchg
jae
shrl
leave
push
ljmp
cmp
inc
lea
cmpsl
jno
or
lcall
mov
loope
add
clc
orl
jle
push
xor
leave
out
nop
sbb
push
mov
jb
sbb
repnz
out
out
mov
sub
insl
xchg
ds
xor
dec
out
cmp
mov
inc
jbe
int3
push
sbb
ret
roll
add
int3
dec
mov
mov
push
inc
ljmp
into
cs
jo
testb
sbb
push
sbb
loopne
lcall
cltd
lea
stc
cwtl
rcrl
jge
jbe
xchg
xor
mov
dec
js
pop
loope
cli
cmp
adc
sbb
cmp
pop
leave
mov
lret
jmp
das
push
out
jle
imul
xchg
cmc
push
aam
popf
inc
pop
pushf
lcall
into
int3
mov
push
inc
jmp
outsl
pop
mov
dec
insl
xchg
mov
cmp
movsb
test
dec
add
shlb
shrl
test
loop
jle
inc
repnz
or
push
hlt
sub
push
fisubrs
jle
pop
ret
adc
push
sub
mov
imul
mov
xor
aaa
adc
mov
push
push
adc
fists
setne
pop
insl
mov
movsl
cld
andl
sub
movsl
pop
lds
xchg
rcrb
bound
and
jle
mov
pop
sub
fwait
popa
mov
js
xchg
or
jecxz
cmpsb
mov
out
or
insl
mov
adc
mov
xchg
repz
xchg
lods
imul
ficomps
xchg
cli
ljmp
pop
lods
push
mov
pusha
lret
repz
lea
inc
lcall
fwait
div
sbb
arpl
and
fmulp
ret
push
jecxz
cmp
xchg
and
addr16
lret
dec
mov
xchg
and
mov
loop
ret
push
cmp
inc
movsl
dec
shlb
mov
je
data16
mov
xchg
nop
mov
xchg
pop
mov
mov
in
jg,pn
lea
loope
in
popf
out
or
adc
sbb
pushf
sarl
int
rcl
ficomps
into
andb
xor
and
mov
jbe
jbe
push
in
out
pop
add
lds
lret
dec
pop
mov
rcrl
or
pop
pop
push
rcrb
inc
lea
aad
or
push
lods
pop
mov
aad
js
cmp
sub
aas
pop
out
jbe
rorb
pop
jle
lods
xlat
sbb
leave
adc
leave
out
xor
cmp
mov
sub
fwait
dec
sbb
cmp
and
xchg
mov
inc
dec
test
mov
shrb
inc
adc
adc
lahf
lds
mov
leave
aam
pop
xor
out
jnp
test
jae
add
pop
push
insl
xchg
push
popa
rclb
imul
adc
mov
fdiv
cmp
dec
dec
push
cmp
fwait
pop
iret
int
flds
push
cmpsl
mov
push
in
insl
mov
mov
jl
inc
andl
lea
pop
stos
loop
inc
dec
fidivl
xor
sub
das
roll
enter
aas
fstpt
sahf
xchg
pop
pop
xor
or
sub
inc
mov
mov
xor
outsb
adc
cmp
test
pop
cmpsb
cmp
push
arpl
fwait
ja
xchg
fsubrp
outsl
cs
fcoml
mov
or
lahf
shrl
aam
adc
rcl
push
lea
out
icebp
pop
ja
ss
aaa
and
mov
jmp
xor
push
subl
mov
push
out
repz
mov
mov
mov
jl
subb
mov
push
cmp
out
loop
jmp
mov
lods
out
mov
cltd
sbb
mov
add
sahf
xchg
ficompl
adc
adc
mov
imul
inc
aas
outsl
call
jecxz
nop
ret
aad
ja
ja
add
inc
push
rcll
sbb
cltd
xchg
jb
sbb
dec
push
push
jae
ret
cli
xor
fstps
in
dec
xchg
cwtl
lret
xorb
xor
jmp
sub
shrb
out
mov
out
fnstcw
rcll
push
lods
out
popf
ret
test
xor
sbb
inc
mov
cmp
sub
ret
outsb
loope
and
inc
inc
fildll
push
dec
sbb
icebp
add
and
sub
lock
nop
mov
xchg
xchg
arpl
movsb
mov
sbb
jno
pop
cmp
pop
push
pusha
addr16
and
jmp
pop
sub
pushl
iret
dec
push
dec
jmp
enter
ja
imull
ljmp
mov
cmc
inc
lds
std
xchg
mov
movsb
mov
in
in
pop
dec
out
add
clc
sarl
cld
daa
shrl
push
mov
fcompl
mov
xlat
pop
push
ja
mov
mov
movsb
in
push
int
orl
adc
sub
loop
in
imul
xchg
xchg
push
sub
rcr
icebp
jle
inc
outsl
dec
das
xor
and
sti
add
hlt
push
mov
dec
pop
lahf
inc
add
test
lret
inc
test
negl
icebp
jnp
loope
je
mov
pop
push
xchg
pop
add
push
ret
push
test
add
stos
pop
lock
inc
xchg
dec
pop
push
scas
cwtl
xor
ret
cld
cwtl
xchg
addr16
out
xchg
bound
into
mov
out
cmp
addb
xor
mov
mov
jge
fcmovnbe
lret
out
fisttps
mov
jae
adc
dec
add
xchg
jmp
sti
sti
cmpsb
insb
dec
stos
sbb
sbb
cmp
pop
sahf
loope
fiaddl
adc
test
mov
in
fcoms
ds
out
sti
jns
mov
sbb
mov
sbb
pushf
xchg
dec
je
or
dec
out
test
call
sub
insb
aam
das
sbb
xlat
pop
fwait
fmuls
pop
and
sub
ljmp
add
add
mov
cmp
push
imul
add
inc
jno
mov
jnp
lret
mov
cmp
fldl
dec
int
or
arpl
mov
test
xchg
daa
pop
sub
jge
sbb
cld
lea
or
aaa
adc
xchg
pop
enter
stos
or
push
jl
test
bound
fdiv
xchg
add
fldenv
scas
jae
sbb
hlt
jno
repz
push
jp
pop
sahf
add
xor
xor
mov
pop
push
add
dec
mov
and
fsubr
aad
push
dec
mov
test
ljmp
cmpsb
shl
in
xchg
call
sbb
jg
sbb
lret
push
enter
sbb
mov
and
cmp
cmp
mov
test
mov
pop
movsb
cmc
push
test
cmp
in
mov
mov
jae
popa
les
mov
pop
add
subl
sbb
and
xchg
and
add
sub
cmp
dec
outsl
lods
scas
and
das
xor
jb
stos
inc
rcrb
jo
add
repz
rcr
cli
in
mov
mov
repnz
mov
jmp
mov
les
or
sub
xchg
cltd
jae
popa
lret
in
mov
roll
jg
or
iret
push
daa
push
sub
cmpl
sub
push
pop
mov
rolb
adc
lret
pop
mov
jmp
mov
aas
mov
add
test
mov
sbb
mov
mov
jno
xor
sbb
inc
addr16
and
ljmp
aam
fisttpll
jne
fucomi
inc
adc
push
test
add
out
test
pusha
mov
pop
push
bound
mov
jp,pt
inc
addr16
shlb
shlb
ja
and
repz
mov
mov
sbb
or
call
jae
jae
push
les
cmp
push
add
sub
aam
imul
mov
cli
ja
insb
mov
xor
cmp
jmp
popa
jns
adc
nop
fs
dec
subl
adc
cmpsb
loopne
add
cwtl
leave
lret
jl
rcll
mov
test
jecxz
clc
mov
jo
in
loop
pop
pop
push
ret
mov
and
mov
fildll
ret
addr16
mov
aaa
sub
mov
pushf
inc
out
lods
xchg
xor
sub
bound
enter
and
push
ja
rcr
dec
in
sub
push
out
enter
mov
cwtl
fsqrt
mov
mov
subl
data16
mov
es
inc
xchg
mov
rclb
dec
pop
sbb
xchg
sub
sbb
ss
xorb
jne,pn
out
outsb
movsb
fdivl
lock
jl
in
mov
cmc
or
mov
movsb
out
aad
push
mov
gs
or
xchg
lds
shl
aas
testb
mov
into
pop
mov
inc
dec
cmp
out
and
stos
push
push
xor
in
imul
mov
enter
inc
repnz
or
insl
and
mov
sub
or
mov
test
cwtl
das
adc
cmp
mov
push
scas
xor
imul
jae
imul
lea
scas
lods
dec
push
adc
adc
adc
adc
fcompl
adc
inc
lahf
aam
mov
mov
add
mov
mov
jae
xchg
mov
test
or
xor
out
xor
jmp
aas
lods
xchg
jb
pop
movsl
push
mov
push
lods
jbe
dec
cmp
int3
pushf
out
ret
mov
jae
adc
pop
pop
xor
or
xchg
pushf
mov
lods
arpl
sbb
pop
jle
iret
dec
repz
jl
mov
icebp
nop
xor
ja
adc
jns
sbb
cmp
and
out
call
mov
subb
mov
fidivs
out
adc
ja
adc
sbb
sub
jnp
add
leave
jp
mov
xor
xchg
push
ja
rcl
fisttpl
bound
push
mov
pop
inc
pop
fisubrs
jg
mov
dec
fcoms
pop
and
in
loopne
push
mov
inc
nop
sbb
iret
dec
mov
xchg
lcall
hlt
mov
test
lcall
cld
stc
cli
and
xor
leave
jmp
outsb
push
add
sbb
push
lods
call
push
or
push
shr
mov
imul
fwait
into
cmp
out
cli
aas
lods
das
inc
xor
xchg
test
out
ljmp
inc
ret
jns
test
fwait
fwait
push
leave
out
sub
addr16
das
and
dec
sbb
mov
push
jae
je
scas
push
bound
repz
xchg
lcall
aaa
jge
push
add
sarl
imul
mov
loope
mov
jmp
hlt
or
sub
sub
stos
mov
jg
pop
data16
jle
mov
inc
je
push
aas
xorl
lods
sub
sbb
mov
push
xchg
xor
pop
ja
fs
loope
and
jne
and
dec
imul
mov
fwait
shrb
xor
adc
mov
inc
push
push
jl
fbld
fidivrs
dec
mov
pop
pop
fildll
orb
jp
add
fcoml
cmpsb
cltd
jae
inc
add
out
push
or
insb
mov
ret
arpl
clc
fldt
in
pop
pop
mov
sar
inc
into
movsb
or
sbb
ret
mov
out
fsub
and
xorb
movsb
cmpsl
ficompl
iret
rclb
daa
inc
xor
push
inc
addr16
fbstp
scas
xchg
add
rclb
ret
test
xchg
add
test
dec
sub
sub
out
daa
rcl
push
aaa
push
mov
stos
inc
xchg
adc
sahf
pop
loop
push
mov
mov
js
shrb
idiv
jnp
inc
dec
mov
rcl
loopne
xchg
push
add
fsubl
and
sub
popf
insb
repnz
lock
lret
outsl
adc
loop
jg
xchg
iret
jnp
aaa
aad
mov
xor
jns
lret
sub
inc
ret
jp
cld
loopne
out
fwait
jae
repz
out
mov
sti
sub
sbbb
bound
nop
out
sub
ss
mov
xchg
sbb
sub
mov
in
push
jle
and
cmp
pushf
sub
add
mov
fwait
push
lahf
mov
ret
stos
inc
nop
xchg
xchg
ret
inc
push
push
jmp
in
in
arpl
cmc
add
push
mov
int
dec
mov
mov
xlat
push
pop
and
arpl
bound
jnp
push
mov
push
fimuls
inc
mov
stc
jae
or
fs
sub
push
push
pop
lret
dec
jns
xchg
add
pop
cmc
test
jo
sub
rolb
int3
cmp
out
mov
sub
movsl
and
popf
test
dec
imul
insb
sahf
das
mov
jno,pn
push
aad
in
add
aaa
xor
mov
fst
xor
mov
mov
mov
fistl
pop
imul
lret
inc
jb
and
push
out
mov
std
adc
adc
popf
cmp
sbb
es
sub
dec
cld
ret
cmpsb
cmc
mov
dec
mov
and
cmp
adc
xor
push
sarl
outsl
adc
mov
shlb
adc
iret
jne
dec
fisubrl
or
out
inc
and
test
or
sub
dec
enter
mov
inc
or
loope
and
xlat
fisttpll
push
pop
dec
add
mov
fwait
xchg
sub
push
adc
push
adc
mov
sbb
andl
sbb
ret
sub
xchg
std
add
bound
push
jl
daa
dec
jno
scas
incb
mov
cld
push
shufps
xchg
js
movsl
dec
enter
xchg
nop
mov
sbb
jmp
cld
daa
xor
add
inc
dec
jb
jno
adc
aam
not
outsl
addr16
mov
outsb
fs
dec
push
mov
xchg
xchg
jns
int3
fwait
pop
cltd
fisubl
pop
mov
fwait
xor
mov
xchg
iret
dec
jns
cli
daa
cltd
andb
negb
sbb
enter
outsl
sub
jnp
inc
ds
push
cmp
jle
ret
jecxz
leave
mov
test
shll
inc
dec
push
cli
stos
cmpsb
loop
movsl
push
inc
lahf
data16
ret
ficomps
mov
enter
fs
add
jbe
mov
in
sar
or
jle
loop
out
cmp
xchg
loopne
clc
dec
sub
mov
xchg
jle
cvtdq2ps
dec
sarb
and
mov
inc
xchg
test
inc
xchg
and
push
jns
addl
ret
jecxz
dec
push
test
in
test
mov
int3
pop
add
ss
jo
pop
jmp
inc
xor
lock
popa
pusha
aaa
or
mov
adc
dec
repz
dec
sbb
pop
mov
fs
add
dec
pop
mov
mov
push
and
pop
push
pop
mov
push
mov
ljmp
pushf
jg
mov
loopne
xor
out
pop
mov
cwtl
mov
ds
fsubs
xlat
in
cmp
jecxz
cmp
daa
or
in
jae
loop
adc
jnp
mov
dec
popf
sbbl
cmp
xchg
loop
pop
pop
fs
inc
repz
fcmove
inc
sbb
sub
mov
pop
push
sub
and
je
add
and
sub
loop
rcrb
jmp
fildl
in
lahf
js
pop
test
aaa
pop
repz
add
imull
rorb
insl
xchg
fimull
push
mov
mov
out
enter
mov
pop
aad
jbe
stos
das
insl
mov
adc
aad
xor
pop
mov
aaa
orl
mov
loop
dec
outsl
dec
mov
mov
xchg
lods
jp
pusha
inc
inc
ss
cmc
loop
fdivrs
pop
or
je
adc
int
aam
xor
int
push
and
std
dec
xchg
jo
mov
xchg
cmpsl
movsl
dec
int3
rclb
mov
stc
gs
jge
outsb
stos
cmp
incl
jno
xchg
movsb
divl
xchg
mov
lock
push
sti
das
inc
test
test
add
and
mov
mov
sbb
cmp
xchg
in
int3
cmpsb
pop
add
dec
pop
jne
enter
cmp
cwtl
popf
inc
cmp
dec
sub
cmpsb
dec
dec
test
and
jle
xor
mov
lret
fsqrt
xor
pop
or
adc
ja
cmp
ficoml
or
dec
push
test
ret
xchg
ljmp
and
dec
out
jg
lahf
push
addl
xorb
rorb
out
movsl
sti
add
sub
sahf
inc
in
mov
in
inc
test
add
scas
jl
mov
ja
cmp
lea
sub
jne
sbb
sarb
and
lret
adc
mov
add
fdivl
or
out
add
sbb
test
je
out
ljmp
adcl
sub
mov
jmp
arpl
adc
in
jno
mov
scas
mov
or
xor
mov
and
fucomip
rorb
lcall
lret
mov
pop
pop
adc
jmp
pop
add
dec
int
mov
or
call
push
sub
add
mov
push
xor
pop
lock
add
cmpl
mov
jbe
sub
mov
das
cmp
push
sub
sbb
sbb
sbb
push
call
sub
mov
sahf
loop
dec
ret
and
outsl
jg
cmp
adc
nop
fildll
dec
push
sub
cmc
mov
pop
arpl
inc
or
pop
sahf
push
inc
push
jnp
xchg
inc
pop
in
pop
and
mov
cltd
mov
in
jno
jo
sbb
lock
mov
sub
out
xor
and
hlt
sbb
faddl
lods
loope
nop
in
xor
add
and
inc
inc
xchg
mov
hlt
sahf
sub
lret
dec
int3
mov
enter
lret
or
cli
std
push
jno
idivl
shrl
test
mov
popf
test
inc
mov
jnp
popa
enter
inc
cmp
cmp
xor
cmp
jne
inc
icebp
xor
ret
dec
and
jbe
ljmp
in
jae
dec
jae
sub
enter
js
mov
lahf
add
rolb
add
lahf
xchg
mov
shrl
rcr
jg
push
adc
test
frstor
xor
cmp
ds
pop
mov
mov
dec
xor
les
jmp
mov
aad
stos
xor
mov
fbld
imull
jmp
pop
sub
scas
sub
int
shlb
xchg
cmp
enter
pop
inc
or
lods
testl
dec
shr
sbb
es
out
dec
push
call
and
int
in
cmp
cmove
mov
push
xchg
cmp
mov
add
jae
inc
xor
into
aam
add
andb
lock
bound
je
ficomps
shlb
stos
lcall
add
mov
xor
sbb
fstl
pop
out
lret
popa
adc
cmp
test
push
adc
out
jge
inc
dec
cld
int
out
sub
clc
mov
push
enter
add
or
insl
scas
push
movups
xchg
jnp
mov
out
stos
push
dec
in
pop
aad
xchg
icebp
xchg
xchg
out
rolb
xchg
sub
push
dec
aaa
scas
inc
dec
jp
sarl
popf
hlt
jg
push
or
dec
lods
sahf
jg
push
movd
xchg
mov
dec
jg
lcall
lcall
inc
add
sub
loope
xor
adc
pop
mov
shll
mov
cwtl
sbb
aam
jle
popf
in
sub
and
cmp
sbbb
arpl
jns
bound
dec
xchg
ljmp
loop
in
clc
fists
stc
rorl
inc
xchg
jmp
ret
push
ljmp
inc
pop
mov
cmp
push
or
clc
cs
fcom
cwtl
sahf
insl
jne
pusha
movsb
idivb
in
rclb
xchg
scas
inc
mov
xchg
adc
ljmp
push
push
lds
mov
sbb
lea
push
lahf
and
add
ljmp
pop
mov
popf
js
push
pusha
or
push
push
aas
add
and
fistpl
mov
or
mov
push
or
mov
mov
mov
lret
iretw
pop
jle
cs
pop
jp
addr16
loope
mov
push
in
push
dec
into
add
dec
xchg
repnz
cmp
pusha
adc
repz
mov
push
cwtl
fs
xchg
in
push
enter
xchg
or
sub
cld
mov
cld
ja
das
add
in
cli
mov
jle
icebp
pop
xchg
mov
inc
jge
cmc
push
shrb
ja
fldt
testl
pop
movsl
stc
xchg
push
cmp
std
and
je
fnop
dec
xor
jno
adc
inc
pusha
in
mov
dec
pop
enter
outsl
sub
test
xchg
shlb
mov
inc
incb
iret
das
mov
jns
fs
scas
cmp
push
mov
pop
xor
mov
xchg
arpl
xchg
dec
inc
subl
push
xchg
or
inc
gs
jge
add
xchg
jg
push
out
in
outsl
pop
inc
xchg
xchg
subb
stc
and
lcall
movsb
push
pushf
add
fucomp
aaa
and
es
adc
adc
lret
mov
pop
scas
fwait
or
push
scas
inc
push
pop
mov
lret
jl
lret
push
mov
pusha
sbb
in
xor
mov
jle
pop
cmp
or
add
daa
or
pop
movsb
mov
or
rorl
ljmp
fldenv
dec
cmp
xchg
in
inc
or
dec
testb
pop
xlat
pop
xchg
push
lods
or
ja
sbb
sbb
cmp
insb
jg
dec
out
sar
and
xor
cwtl
xchg
pusha
mov
add
test
push
jno
data16
notb
ja
or
mov
lods
ret
sub
insl
sub
adc
mov
cmpsb
sbb
pop
xlat
cmp
xchg
mov
loop
popf
mov
mov
mov
jns
das
push
sub
in
pop
retw
jmp
hlt
jp
insb
push
in
push
push
scas
xchg
add
dec
mov
xor
test
lcall
mov
in
hlt
pushl
hlt
xor
inc
xor
sub
into
in
stc
inc
push
mov
popf
cs
jno
xchg
mov
mov
mov
mov
mov
data16
int
and
inc
hlt
addr16
jmp
testb
mov
sahf
iret
add
popa
dec
lret
movsl
mov
adc
test
pop
test
push
pop
lahf
aas
adc
lods
or
lds
iret
inc
or
fwait
mov
sbb
cmp
pop
xchg
ss
dec
fmuls
jnp
or
and
aad
jg
push
jb,pt
ret
push
or
daa
or
fwait
insb
test
mov
add
mov
leave
cmp
pop
orb
gs
sbb
ficoms
add
cmc
xor
orb
insb
push
aad
scas
jle
fbld
xor
jae
mov
popa
sbb
mov
loop
xor
pop
jge
lods
or
add
out
or
cmp
nop
cmp
xchg
xor
mov
fcmovnu
xor
jo
ret
or
insl
dec
dec
adc
stos
xchg
pop
je
call
adc
xor
cmc
mov
and
es
mov
mov
mov
in
add
mov
mov
xchg
divl
imul
mov
xor
mov
dec
mov
adc
dec
rorl
in
and
ds
add
jne
jl
mov
mov
fldl
mov
push
test
mov
mov
cltd
add
jp
dec
test
push
out
adc
mov
loopne
sub
inc
mov
jle,pn
push
clc
aaa
jo
sbb
xchg
sub
sbb
mov
adc
lret
mov
cmp
sbb
pusha
adc
jmp
xchg
push
mov
das
or
push
je
push
push
dec
cli
shrl
fadd
push
ror
out
add
lret
cld
repz
ret
lock
mov
outsl
mov
call
dec
xchg
push
dec
lret
jle
pop
std
icebp
pushf
outsl
cmpsb
sub
ret
dec
insb
call
pop
ljmp
pop
xchg
fdivs
xchg
loopne
iret
mov
dec
mov
xchg
dec
mov
cmpsl
xchg
insb
cmp
dec
pop
add
push
fs
leave
cmp
dec
jae
in
adc
xchg
jno
int3
insb
mov
scas
insl
pop
mov
iret
xchg
imul
bound
aad
insb
int3
jne
jecxz
and
jp
xchg
in
push
out
pusha
pop
xor
or
and
imul
jb
sub
lea
mov
jmp
mov
mov
or
fldl
mov
out
mov
cmp
dec
pop
cltd
add
imul
out
adc
outsb
and
push
or
popf
repnz
cmpsb
mov
push
sti
jns
mov
pop
push
jle
sub
and
into
adc
out
xchg
add
sub
ljmp
mov
rcll
subb
mov
je
imul
sub
pop
jo
shl
push
loop
hlt
cmp
dec
std
pop
enter
mov
push
mov
sbb
dec
jns
ds
add
push
push
out
jg
sbb
int3
call
rcl
fwait
repz
adc
fcoms
fwait
xchg
cmpb
out
jo
adc
pop
mov
xchg
mov
imul
test
xor
stos
push
add
jb
scas
hlt
sub
jb
jp
sub
outsl
xchg
xchg
sarb
dec
out
lret
loop
mov
lock
sbb
stc
lds
mov
test
rcr
mov
mov
jno
jle
std
sub
mov
pop
mov
add
mov
xor
cmp
pop
ljmp
icebp
cmpsl
jns
pop
shrl
iret
and
lods
xchg
dec
pop
mov
fiaddl
xchg
jecxz
imul
cmp
sbb
push
mov
vmovlps
movsb
outsb
pop
loop
and
xor
aam
cltd
xor
cmp
repz
sbb
xor
and
cs
dec
cltd
shrl
add
stc
inc
sub
cwtl
adc
jecxz,pn
loope
sub
test
insb
ret
mov
sub
mov
popa
sbb
pop
stos
outsb
pop
dec
rolb
cmp
inc
mov
mov
fdiv
in
nop
call
push
add
cltd
test
jno
pop
sti
push
pop
rolb
popa
xor
adc
push
mov
mov
push
mov
or
push
fwait
movsw
andl
idivb
push
sbb
pop
jg
mov
adc
dec
int3
sbb
push
scas
out
repnz
stc
dec
adc
jbe
cmp
and
rol
adcb
push
hlt
mov
push
lcall
ret
sub
out
sub
pop
xchg
lret
loop
jae
and
rclb
out
aas
xchg
repz
mov
cmc
rsqrtps
xchg
mov
dec
addr16
xlat
lods
roll
dec
mov
rorb
cwtl
bound
push
pusha
xor
cmp
aas
fwait
ret
sbb
int3
test
dec
fsubrs
rolb
fnstsw
xchg
push
jecxz
lret
es
mov
sbb
scas
mov
mov
inc
int
ss
lds
adc
gs
inc
stc
outsb
xchg
jp
fs
lock
mov
ret
rcrb
sub
outsl
mov
sbb
jecxz
bound
mov
pusha
cmpsb
sub
xor
call
nop
jne
sbb
push
lods
in
mov
mov
insl
sub
stos
into
movsb
mov
xchg
xchg
testl
or
adc
push
nop
stos
loop
js
cs
sub
sti
inc
ljmp
lods
dec
cld
mov
push
fdivr
push
mov
or
add
jl
adc
lods
test
add
testl
mov
repnz
fstl
or
xchg
jg
repnz
fstps
sti
xor
mov
pop
rcrb
cmc
push
out
out
cli
call
xchg
pusha
sub
jg
mov
call
xchg
cli
enter
lds
xchg
test
jnp
mov
inc
repnz
into
push
pop
pop
aad
outsb
mov
gs
inc
test
jecxz
push
shl
out
push
fdiv
mov
sub
std
push
movsl
repnz
push
mov
inc
mov
dec
ljmp
int3
cmp
and
pop
lock
out
shl
mov
dec
xor
pop
adc
insb
shll
add
mov
rcrl
jb
outsl
dec
shrl
aam
sbb
aas
popa
loopne
fidivs
or
and
and
mov
xchg
sbb
lea
popf
mov
lods
lock
xchg
cmp
mov
stos
enter
popf
mov
test
out
imul
push
enter
loopne
lcall
ret
aas
loop
mov
leave
add
adc
dec
je
aas
inc
sti
fcoms
jo
fwait
cmpsl
fldt
imul
lods
xchg
scas
push
jbe
incb
inc
and
mov
lahf
add
ds
stos
push
ficomps
inc
pop
adc
or
sahf
sbb
push
push
stc
loope
fisubs
mov
inc
inc
out
shll
iret
dec
stos
cmp
in
aam
negl
incb
mov
xchg
mov
push
xchg
sbb
mov
or
xor
ja
stc
rcll
insb
scas
adc
pop
mov
mov
inc
xchg
jbe
cmp
or
andb
and
push
push
adc
xor
dec
into
loopne
pop
pushf
rorl
dec
es
ja
adc
mov
xchg
mov
ljmp
push
push
repnz
and
in
int
or
jmp
sahf
or
in
jns
out
push
outsb
add
stos
test
xrelease
cs
stc
sti
push
pop
inc
cmc
mov
rcrl
or
shr
popa
xchg
and
ss
in
adc
sub
fdivrl
lods
pop
aad
sti
xchg
mov
icebp
xlat
ljmp
insl
lret
shl
and
xor
hlt
sub
push
and
cmpl
push
out
pop
adc
or
rcr
dec
mov
lea
aaa
fadds
push
jns
inc
loop
xchg
mov
je
sub
xchg
mov
push
inc
push
cwtl
sub
insl
add
add
pop
xor
push
ret
cs
push
sub
data16
orb
aas
nop
lret
pop
adc
stos
xchg
jnp
cltd
cmp
add
lahf
and
int
push
xor
gs
push
jl
mull
int3
xor
mov
jno
lods
in
xor
cmp
push
fnstsw
add
mov
inc
jmp
mov
xchg
add
mov
inc
jmp
jns
or
je
inc
or
cmp
xchg
std
insb
mov
icebp
filds
or
les
xchg
and
aas
mov
ss
mov
xor
outsb
add
jmp
cltd
stc
int3
dec
mov
clc
in
dec
inc
mov
mov
cs
imul
and
cmp
hlt
mov
adc
insl
pop
movsl
iret
push
pop
xlat
cmc
push
push
cltd
cmp
mov
test
je
pop
xchg
sbb
test
shl
push
pop
call
fcmovbe
sbb
jnp
pop
mov
das
cli
sti
and
lods
cli
in
pop
push
inc
xchg
jno
pushf
jo
or
inc
mov
jno
sbb
adcb
stos
out
lret
mov
aas
mov
mov
in
xchg
test
mov
xchg
imul
pop
fwait
adc
push
xchg
aaa
jl
rep
or
insl
sbb
jp
sbb
lods
test
insl
mov
mov
jle
jecxz
and
pushf
fcomps
sub
xchg
dec
stos
int
or
sub
mov
mov
in
and
adc
aam
lcall
dec
aad
mov
xchg
loopne
insl
inc
loopne
jg
jp
in
xchg
pushl
subb
mov
sub
sbb
jecxz
inc
push
aas
xor
mov
or
sbb
xor
jno
push
ret
imul
cmp
ja
stos
mov
aaa
cmp
lea
pop
xchg
jae
test
jecxz
or
lock
add
mov
push
xchg
mov
pop
aaa
out
shl
sub
flds
mov
sub
fstpt
in
jo
sbb
or
stc
mov
test
scas
add
insl
std
mov
push
sbb
adc
cwtl
mov
mov
hlt
push
push
xchg
or
test
jg
mov
lret
or
push
push
outsb
and
xor
inc
mov
add
and
lret
sbb
xchg
cld
xchg
rolb
nop
adc
das
repnz
mov
lahf
xchg
xchg
dec
cli
sub
jle
rclw
xor
add
push
fwait
setne
jbe
pop
xor
xor
in
inc
cmp
jne
cmpsl
jns
lds
xchg
sub
jle
mov
clc
mov
hlt
inc
cwtl
in
es
jae
push
loop
pop
stos
add
aad
in
out
js
icebp
pop
add
or
push
bound
jo
push
js
push
mov
gs
xchg
in
ljmp
dec
mov
cmc
pusha
fmuls
mov
cmpsb
mov
pop
mov
cli
mull
jne
std
std
cmp
lds
pop
movsl
xor
add
dec
popa
mov
mov
pop
iret
cmp
sbb
fstl
add
or
ds
sti
and
pop
lods
add
and
sub
push
xor
in
incb
add
je
loopne
push
push
into
adc
push
jmp
int
mov
ljmp
mov
jno
jmp
ds
mov
fdivp
shl
xor
arpl
mov
aam
hlt
divl
sbb
rcl
cmp
jno
mov
bnd
cmp
adc
sub
xor
jb
enter
enter
mov
cmp
pushf
sub
pop
pusha
jo
es
icebp
cmp
xchg
dec
pmullw
sarb
repnz
fmull
in
cltd
and
and
sbb
fdivrl
repnz
push
lahf
loop
dec
jne
inc
mov
js
fs
mov
shll
push
dec
sbb
push
mov
lea
mov
xchg
loope
and
popf
sbb
insb
mov
jle
fsubp
mov
ret
fcmovnb
test
fisttpll
push
cmpsb
xchg
and
xchg
sub
inc
mov
jno
inc
das
sub
orb
dec
pop
mov
cwtl
xor
stos
cmpsb
jnp
ds
das
pop
je
ja
jae
aas
int3
sub
imul
lcall
jae
cmc
push
mov
lret
cmp
push
aaa
das
mov
push
jb
add
je
sub
outsl
push
cmc
xchg
jp
test
cmp
sbb
pusha
xor
insb
in
pop
cmp
mov
dec
and
mov
out
int
jno
dec
lahf
jp
push
shrb
ds
mov
je
in
mov
test
sbb
in
pop
das
pop
push
cmp
enter
mov
jno
fcmovbe
cltd
cmp
or
pop
mov
dec
jnp
mov
mov
push
lds
xchg
int3
cli
test
pop
popf
ljmp
movsb
fsubs
rcll
xor
pop
outsb
mulps
ljmp
xor
mov
movsl
scas
shll
cmc
mov
aas
push
daa
sbb
mov
imul
sqrtps
mov
xor
inc
repz
and
mov
inc
push
mov
add
in
idivl
push
loop
mov
push
dec
jbe
push
xchg
movsl
scas
leave
shrb
mov
xor
and
xor
and
xchg
out
insb
jne
cltd
les
mov
jb
jg
xlat
divl
dec
mov
pusha
dec
adc
mov
jae,pn
pop
cmc
add
iret
sbb
in
ret
push
sub
icebp
cli
sub
mov
lods
cmp
push
fcomp
mov
inc
pusha
fucom
add
push
iret
jne
push
jbe
dec
xor
sarl
outsb
insl
aam
test
sbb
cmp
fs
outsl
jno
imul
lcall
push
ds
push
xor
cwtl
pop
push
mov
fnstsw
insb
inc
inc
int
mov
xchg
mov
jno
je
and
pop
push
mov
cld
mov
push
insl
push
dec
dec
xchg
enter
adc
test
mov
or
jg
jg
lods
and
or
xchg
fidivs
pop
inc
cld
sub
cld
xchg
scas
inc
push
je
push
sbb
ja
es
in
in
fdivl
inc
or
pop
and
cmc
sub
fcoms
cld
mov
and
addps
push
pushf
les
or
ds
mov
ret
lds
call
xchg
ret
pop
shrb
popa
js
orb
jmp
adc
stc
jge
dec
shll
je
xor
loop
loope
pop
test
pushf
in
push
je
jae
mov
cmc
sbb
sub
mov
inc
push
sub
aaa
je
ret
inc
xchg
outsl
jge
mov
loop
jo
mov
mov
dec
popa
bound
xchg
sbb
popa
cmp
xor
push
ds
pusha
jne
jae
mov
test
inc
jo
sbbl
and
jne
push
sub
gs
push
xchg
testb
adc
or
fisubrs
sti
inc
fsubrl
sbb
xor
mov
cmc
sbb
movsl
adc
mov
cwtl
loope
inc
mov
cmc
stc
in
sbb
mov
xor
jnp
lods
jmp
jns
cmpsl
dec
lret
aad
xor
mov
dec
xchg
and
leave
insb
cmp
or
addr16
inc
adc
xchg
cmpsl
xor
sbb
pop
push
push
sbb
into
dec
dec
cmpsb
popa
outsb
daa
aad
aam
mov
sbb
xchg
lods
int
mov
jne
and
mov
idivl
push
nop
xchg
push
jbe
movsl
xchg
iret
out
ss
mov
jb
push
xor
add
enter
mov
insl
mov
mov
std
ficoml
filds
and
sti
gs
pop
in
mov
pop
fistl
or
sub
shl
mov
addr16
pop
push
dec
bound
xchg
popa
jge
cmp
push
push
imul
stc
out
xor
cmpl
xor
or
shrb
jge
jnp
insb
mov
cli
pop
outsb
lds
push
mov
hlt
push
fists
dec
dec
xor
es
cli
mov
in
sti
addr16
mov
arpl
addr16
jecxz
mov
sar
std
cmp
dec
cmc
ret
lret
xor
push
lods
mov
cmp
repz
xchg
insb
adc
shll
jnp
in
lods
imul
outsl
fsubl
in
inc
mov
arpl
dec
mov
ds
mov
jp
fcmovbe
loop
adc
jp
lds
inc
out
pop
test
dec
xor
or
les
fistps
aas
mov
push
js
lea
mov
xor
add
aaa
add
ficoml
xor
fs
test
popf
inc
out
pop
adc
xchg
movsl
xor
push
jbe
xchg
jno
in
push
sub
dec
push
dec
shlb
pop
iret
clc
push
outsl
adc
mov
out
xchg
pop
sbb
mov
sti
sub
jbe
test
jg
imul
movsb
outsl
pop
sub
neg
inc
lahf
adc
sub
mov
les
jp
nop
sbbb
jl
pop
mov
jnp
push
jmp
test
cwtl
cmc
jecxz
pusha
mov
imul
lds
or
sahf
cmp
push
xor
mov
test
movsl
data16
test
out
clc
shrl
dec
mov
ja
fistl
sbb
mov
cmpsb
dec
roll
push
cmp
aam
push
jg
mov
out
lock
lret
subl
cltd
fcomps
out
push
call
scas
push
loop
lock
stc
scas
mov
mov
push
jne
lock
mov
pop
popf
push
jo
push
enter
or
jmp
push
cmpsb
adc
adc
call
lods
cmp
inc
sbb
cmp
lcall
inc
cmpsl
out
sbbb
ss
ficomps
ret
cmpsl
std
push
std
mov
mov
xor
call
adc
mov
push
rolb
mov
daa
stos
aad
hlt
dec
add
rcrb
aas
push
mov
sbb
daa
loopne
pop
sub
jg
inc
sub
jge
fsubrs
push
pushf
add
pop
mov
cmc
mov
cmp
enter
cmp
xor
inc
ret
ja
js
and
inc
dec
cwtl
cli
sti
inc
adc
jno
cmp
jp
cmc
pop
test
fsubr
es
je
mov
add
push
or
mov
cltd
xchg
push
adc
mov
pop
pop
and
es
xchg
jg
mov
sub
xchg
gs
inc
sub
jns
fnstsw
xor
and
push
adc
lcall
and
xchg
stos
or
sti
adc
cmp
ja
jne
aas
ficoms
or
inc
pop
imul
cmpsb
dec
sub
int
sbb
sbb
add
adc
push
push
sub
add
shll
dec
fsub
mov
cltd
es
jl
xchg
dec
out
incl
cmc
dec
adc
fwait
loop
stos
add
in
hlt
or
insl
test
mov
gs
inc
mov
and
jo
in
dec
out
fldl
shll
lods
mov
jecxz
jb
cmpsb
fcmovu
cld
lcall
ret
popf
rcr
cmc
push
mov
fildl
inc
mov
mov
lock
or
je
jae
xchg
mov
std
movsb
lea
fs
lods
cwtl
mov
ret
mov
aam
sub
es
pop
or
mov
sub
daa
mov
data16
icebp
clc
cmp
lcall
xchg
jp
mov
dec
mov
dec
xor
cmp
mov
push
emms
push
shrl
push
mov
mov
aas
popf
or
jecxz
leave
adc
shll
lcall
push
mov
out
es
xchg
in
sub
add
add
fiaddl
cmc
push
jle
sbb
mov
iret
inc
xchg
arpl
cltd
int3
cmp
cmp
mov
pop
mov
daa
incl
stos
cli
and
dec
iret
jp
rolb
jne
cmpl
out
ret
iret
and
mov
push
push
fwait
std
pop
jmp
xchg
cmp
scas
ffree
pop
test
inc
out
pop
mov
sbb
mov
icebp
inc
push
fnstenv
adc
out
popa
test
gs
call
dec
rcll
aam
loopne
xchg
pop
dec
repnz
mov
scas
xor
addl
out
mov
pushf
push
xor
and
das
out
pop
jecxz
fistps
fs
repnz
mov
cmc
xor
daa
xchg
out
push
andl
xchg
xor
and
fcoms
xor
jb
xchg
push
and
loope,pt
adc
xchg
fldcw
mov
outsb
out
mov
dec
inc
inc
mov
and
in
fdivs
hlt
jmp
push
mov
xor
flds
scas
dec
sbb
mov
cmp
adc
insb
das
inc
xorl
mov
fdivp
sbb
cmc
fistpl
popf
andb
cmp
or
xor
xor
out
push
loop
aam
push
jbe
mov
mov
int3
inc
xchg
push
pop
push
cmp
out
cmpsl
loopne
cmc
and
call
pop
daa
das
test
incb
mov
scas
bound
adc
movb
ret
cltd
xchg
push
xchg
dec
mov
shll
daa
push
sbb
subl
cmp
outsl
pop
mov
pop
xchg
sbb
in
jnp
test
test
test
xchg
popf
sbb
adcl
sbb
push
pop
mov
jae
mov
adc
inc
movsl
cwtl
mul
lret
xorb
dec
pusha
and
push
push
dec
add
rol
pop
ficoml
jno
outsl
push
push
gs
jb
dec
sbb
pop
sub
jge
pop
lahf
in
ret
xchg
jne
xchg
cwtl
xchg
dec
subl
fnsave
insb
mov
nop
into
dec
jg
mov
pushf
cli
xchg
lcall
popf
cwtl
sub
push
sbbb
mov
mov
xor
sub
ficompl
repz
aad
xlat
mov
mov
int
pop
test
outsb
xor
inc
lcall
popf
push
fstpt
aad
cli
pop
cmp
xor
lret
ja
sahf
fsubrl
inc
cmp
std
push
dec
pop
lahf
cmpsb
lret
lea
mov
adc
lds
mov
push
mov
das
popf
jnp
aam
cmpsb
mov
les
dec
mov
loop
mov
xor
shr
sub
xchg
add
mov
mov
lret
enter
negb
xchg
jmp
or
sub
stos
and
mov
imul
and
aaa
inc
stos
dec
push
gs
dec
dec
xchg
pop
shl
mov
test
xor
pop
fs
lock
inc
inc
sahf
adc
loope
scas
cmp
aad
and
fcmovnbe
add
sbb
stos
mov
movsl
add
pop
loopne
adc
jmp
sbb
and
dec
mov
mov
jecxz
stc
je
push
rclb
pusha
ja
ja
int3
rcr
in
push
movsl
outsb
nop
ds
ficoms
fstp
pop
fsubrl
fisubrs
jecxz
enter
adc
test
out
xor
in
sbb
int
das
add
lds
jns
cmp
testb
adc
enter
jp
adc
rcrb
push
icebp
adc
add
add
lds
cmp
stos
bound
ss
cltd
jns
sub
sub
test
lret
mov
inc
xchg
pop
out
cmp
fnstenv
push
xchg
mov
push
pop
mov
add
pop
push
push
mov
pop
xchg
cld
fisttpll
dec
iret
js
mov
mov
sbb
inc
insl
and
dec
clc
dec
leave
repnz
cmp
aaa
imul
mov
and
mov
xchg
fistpl
ret
fmul
mov
mul
roll
int
mov
sbb
fwait
cs
arpl
jmp
inc
xor
fiaddl
stos
xchg
fdivrl
fisttpll
jle
int3
cli
dec
adc
xchg
iret
in
push
inc
sbb
dec
mov
outsl
mov
std
jle
cmpl
cli
jne
ret
fs
mull
mov
sbb
sti
testl
sub
ret
outsl
pop
mov
lret
xor
out
loope
dec
mov
roll
test
sarb
dec
push
lcall
outsl
adc
pop
loop
xor
sub
cs
push
lds
mov
ficompl
mov
cltd
lea
mov
popa
test
cmp
bnd
mov
out
xor
repnz
xor
inc
cmp
dec
insb
inc
push
ret
sbb
dec
jno
out
insl
je
icebp
mov
or
add
ret
xchg
jg
ret
push
or
push
arpl
xchg
bound
fstpt
push
rolb
push
cmp
jne
je
add
xchg
pop
dec
sub
fcomip
iret
enter
push
nop
mov
jle
pop
mov
int
shll
cld
in
sti
jmp
imul
mov
insb
pop
jbe
dec
xchg
pop
or
add
aaa
roll
sub
xor
jo
stos
sub
dec
inc
les
ret
std
scas
fsubrs
mov
add
in
xlat
pop
into
xchg
lods
popa
call
fcomps
jbe
mov
push
lds
cmp
cs
test
in
test
dec
jo
stos
movsb
or
add
mov
jmp
movsb
cmp
mov
xchg
vcomisd
pop
leave
fwait
roll
sbbb
dec
mov
jae
aas
mov
stos
lahf
xchg
nop
pop
icebp
repnz
rdpmc
add
scas
cmp
in
add
imul
jp
ret
push
push
inc
push
cmp
out
mov
mov
nop
sub
inc
add
ficompl
push
notb
dec
xchg
lret
cmp
dec
mov
leave
fstl
sbbl
jne
hlt
and
mov
idiv
inc
add
arpl
stos
mov
pop
repnz
negb
ja
inc
dec
shrl
sbb
test
pop
std
mov
inc
pop
das
mov
cli
and
sbb
jp
cmp
xchg
add
idivl
adc
xchg
mov
nop
scas
out
inc
frstor
lea
loop
out
jbe
sbb
add
xor
fwait
loope
adc
xchg
pop
ds
sbb
inc
stos
mov
stc
in
lods
leave
push
andl
or
jge
fcompl
aad
js
jge
cwtl
sarl
int
popa
or
test
add
sub
add
cmp
push
jbe
hlt
ljmp
adc
pop
ja
xor
pop
jle
std
shl
or
jb
mov
jp
hlt
insl
and
add
je
fisttpl
cmp
xor
sbb
mov
inc
jl
into
mov
arpl
mov
xchg
rcll
add
lds
cmp
jl
push
roll
pop
je
jge
mov
xchg
in
and
ljmp
adc
sbb
lock
test
jno
mov
jl
fdivrl
out
imulb
les
sahf
pop
shlb
stc
sbb
or
xor
aaa
dec
and
test
popf
or
lods
lods
xchg
mov
daa
or
mov
aas
xchg
jae
xor
inc
sbb
cs
xor
mov
mov
lcall
in
adc
mov
jmp
fisubl
inc
push
mov
dec
pop
out
mov
jp
shrl
sub
pop
imul
call
icebp
cmp
xor
mov
or
insl
mov
fsubs
pop
out
mov
add
mov
dec
icebp
sub
xor
cmp
inc
cwtl
ljmp
sub
stc
and
cld
mov
push
lods
push
push
pop
push
cmp
mov
shl
xchg
mov
gs
mov
fcmovbe
into
adc
cmp
testb
loopne
add
fcmovbe
imul
stc
gs
mov
mov
adc
and
aaa
add
movsb
cltd
insb
out
cmpb
fs
outsb
dec
out
push
jp
inc
mov
sub
lahf
int3
cs
push
jg
ds
rcrl
lock
imul
addr16
insb
pop
ss
push
sarb
push
inc
push
out
xchg
test
pop
fwait
movsl
mov
pop
rorb
repz
cmp
lods
jg
ds
enter
dec
pop
sub
lods
mov
pusha
popf
push
xchg
dec
push
xchg
adc
pop
pause
lods
pop
imul
lods
mov
pushf
ret
sbb
aam
cmp
ret
movsl
cli
rolb
sbb
dec
inc
insl
mov
or
fisubrs
arpl
inc
cmc
cmp
daa
rorb
xchg
hlt
mov
int
pop
int3
sub
xchg
movzwl
sbb
jle
mov
mov
imul
inc
jp
sahf
sbb
arpl
sub
je
stos
inc
mov
xchg
lds
push
push
jmp
in
mov
mov
pop
add
jp
call
adc
aam
or
inc
and
and
out
jmp
and
xchg
ficompl
fwait
popl
nop
mov
arpl
mov
dec
dec
sub
fnclex
or
sub
jmp
jbe
push
adcl
mov
std
xorl
add
or
js
sub
mov
ret
or
aam
cmp
jne
stos
adcb
sub
jbe,pt
fdivp
es
push
movsb
cld
cwtl
les
out
push
jmp
fnsave
adc
fsubr
cmc
adc
jecxz
inc
imul
in
inc
jecxz
insl
xchg
outsl
iret
dec
xchg
cmp
adc
fs
pop
movsb
out
mov
xchg
jbe
lret
mov
jno
and
das
stos
jne
aas
fcmovne
adc
clc
mov
daa
inc
xchg
xchg
add
lahf
fbstp
adc
icebp
pop
mov
pop
and
xchg
fildl
out
xor
ja
mov
cmp
and
push
aas
add
pop
jg
ficoms
push
ret
add
xchg
adc
and
pop
mov
movsb
adcl
cmc
pop
leave
push
dec
cmp
pop
cld
jecxz,pt
into
aas
xchg
push
pop
mov
jae
cli
dec
pop
pop
mov
push
xor
insb
mov
in
mov
mov
mov
mov
pop
jmp
mov
movb
mov
push
loopne
push
es
dec
mov
cmc
ss
inc
addr16
xchg
in
push
lods
mov
inc
std
cmp
push
and
lock
xchg
pop
xor
pop
ljmp
pop
lea
hlt
adc
cmp
pop
mov
pop
sbb
mov
xchg
scas
daa
iret
inc
mov
repz
test
mov
adc
insb
lock
jns
mov
popf
xor
cwtl
inc
mov
rclb
lahf
sub
and
sbb
cwtl
addl
aad
faddl
jns
pusha
out
lods
sub
aas
push
fisttpl
fadds
cltd
jae
daa
das
divl
mov
xor
mov
jmp
aad
stos
test
or
js
mov
gs
xchg
shlb
inc
test
xchg
mov
inc
aaa
sti
cmp
out
xchg
lock
cmp
lock
je
inc
jne
and
adc
out
add
pop
sub
or
mov
sbb
out
ret
push
adc
mov
nop
cmpsl
sbb
add
xchg
fcoml
cltd
xchg
dec
dec
addr16
mov
mov
jge
adc
test
jge
sbb
imul
push
je
cwtl
aad
lcall
jg
in
repz
rcrb
cmp
sarb
mov
dec
fnstenvs
dec
pop
inc
cmp
jne
pop
rolb
push
sub
push
push
and
outsl
add
in
imul
pop
adc
popa
or
and
push
aas
dec
or
sbb
pop
lahf
int3
rcrl
and
loopne
outsl
sbb
sbb
out
mov
inc
cld
nop
loopne
xor
imul
inc
mov
movsb
jmp
subl
push
loopne
lcall
mov
sahf
pop
repz
cmpxchg
rcrl
jp
and
cmp
sahf
fldcw
jp
daa
sub
or
mov
pop
or
mov
std
outsl
in
mov
xor
scas
insl
imul
adc
mov
or
and
sub
jb
cmp
or
lret
push
sti
push
dec
mov
mov
pop
jno
cmpsb
push
xor
sar
lcall
inc
dec
cwtl
cmp
int3
movsb
lods
sub
enter
or
dec
add
push
add
xor
fdivrl
xchg
mov
sub
push
or
xchg
in
clc
repnz
leave
adc
push
in
xchg
xchg
xor
addr16
fwait
aaa
and
cmc
or
sbb
stos
mov
shrl
test
jns
mov
sub
mov
daa
jge
inc
mov
pop
mov
adc
mov
stc
in
mov
jge
push
out
or
jle
add
push
cmpsb
mov
or
js
xor
mov
popa
nop
mov
adc
jae
fstpl
mov
sbb
adc
repz
cltd
cmp
rcll
outsb
das
gs
mov
xor
jns
sti
and
ficomps
in
ds
test
scas
mov
mov
loop
pop
je
pop
jns
cmpsl
mov
test
pop
cmp
mov
cwtl
scas
inc
nop
movsl
dec
sub
cmc
int3
mov
loope
xchg
movsw
push
bound
mov
rcl
inc
enter
arpl
push
jo
xchg
sub
cltd
idivb
pop
sarb
fldenv
cmpsb
inc
iret
jp
shll
int3
and
sub
fistps
sbb
jmp
iret
xor
sub
out
testb
out
jle
xchg
jmp
adc
push
icebp
cmc
fcmovne
add
mov
repz
inc
push
add
xor
jns
nop
push
or
xor
dec
punpckhdq
test
sbb
inc
shll
cs
lds
or
mov
rcrb
jo
dec
jnp
in
xor
or
pop
aam
mov
dec
aad
and
cmp
mov
lds
mov
bnd
out
in
inc
cmp
je
call
push
aad
aaa
outsl
hlt
addr16
sbb
in
pushf
and
cmpsb
mov
push
out
xchg
mov
call
and
dec
xor
jnp
push
mov
adc
lea
jecxz
inc
fisttps
and
add
aas
repnz
push
dec
push
daa
cltd
push
sbb
test
mov
push
aam
pop
imul
stos
sub
sahf
in
push
inc
movsb
push
bound
int
imul
int3
xchg
mov
xlat
mov
fld
repnz
inc
ja
and
mov
rep
mov
ds
out
leave
pop
xor
xor
cmp
flds
xor
dec
insl
mov
repz
stc
jbe
inc
mov
pop
or
pop
lret
fisttps
adc
xchg
sub
rcrb
dec
pop
sbb
test
mov
sbb
out
cmp
pop
mov
cltd
fwait
pop
mov
sti
mov
mov
pop
adc
cmp
arpl
ljmp
inc
insb
sbb
sub
call
mov
xchg
aas
imul
inc
pop
lea
dec
ljmp
pop
fwait
hlt
push
pop
ret
xchg
sbb
sub
lods
jp
xor
pop
adc
movsb
icebp
je
fcompl
pop
pop
ja,pt
mov
dec
pop
pop
in
inc
fwait
ret
fnstcw
shll
lds
mov
mov
gs
add
mov
ss
leave
cltd
jg
leave
push
test
adc
xchg
or
js
dec
incb
mov
xor
nop
mov
daa
into
das
mov
jecxz
mov
add
test
fisttps
hlt
out
jbe
lcall
ljmp
xor
adc
add
push
inc
sub
add
loope
jl
popf
rcr
mov
lds
stos
pop
movsb
loop
movsl
mov
and
jbe
push
adc
push
sub
add
dec
adc
sub
sbb
sub
sub
iret
push
cwtl
lods
lds
call
fdiv
iret
sbb
pusha
add
mov
mov
dec
add
push
push
xlat
cs
jno,pt
or
inc
lods
testl
aaa
mul
aam
push
push
addr16
xlat
push
push
mov
lahf
mov
fs
rcr
insl
jecxz
jnp
sbb
cld
push
movsb
adc
mov
inc
dec
aad
mov
insb
andl
sub
inc
rcr
aaa
cmpsl
scas
xchg
or
pushf
inc
dec
jne
mov
pop
lods
in
jno
xchg
mov
lahf
pop
jo
cwtl
test
cmp
pusha
pop
mov
or
pop
popf
jb
shll
fs
dec
clc
xchg
xlat
push
gs
nop
mov
fsubs
cld
adc
push
loopne
sbb
daa
sbb
movsl
std
dec
or
fidivrs
mov
pop
mov
call
std
je
xchg
idivl
dec
xchg
jae
fwait
inc
cmp
cmpsl
dec
or
testb
push
repz
in
arpl
repz
mov
shll
sbb
dec
addr16
lds
mov
out
cmp
in
pop
nop
adcl
mov
mov
mov
mov
lea
sti
movsl
sub
dec
lock
popf
cmpsb
fs
add
mov
test
sbb
insb
sbb
xchg
cmp
cs
int3
pop
jmp
adc
lahf
add
jle
mov
xchg
sbb
or
xchg
andb
in
adc
stos
xor
clc
dec
adc
sub
add
mov
pop
push
imul
decb
out
and
mov
sti
aaa
ret
xor
xchg
les
dec
sbb
cmp
inc
mov
xchg
fcomp
sbb
out
cmp
fstps
add
dec
jle
loopne
push
push
enter
inc
ret
cli
jge
cmpsl
mov
mov
dec
das
jmp
or
shl
sub
repz
mov
pop
clc
cli
fsubrp
sbb
cli
ret
arpl
lahf
lret
dec
das
shrl
insb
pop
dec
push
xchg
cltd
mov
sbb
pop
pop
add
dec
shll
jge
sub
outsb
or
xor
pushf
adc
faddl
lods
sbb
xchg
mov
test
shrl
adc
lea
sub
popa
inc
inc
or
aaa
jmp
in
inc
dec
inc
xlat
mov
mov
inc
nop
bound
sahf
jle
cmpsl
fwait
cld
test
sub
add
sbb
call
nop
pop
repz
in
mov
push
push
mov
mov
dec
mov
ljmp
sub
adc
cmp
xchg
mov
pusha
data16
mov
ret
push
xor
popf
jnp
popl
ffree
add
inc
adc
dec
mov
ljmp
push
fwait
xor
sub
pop
push
cli
push
pop
sbb
and
outsb
inc
mov
adc
mov
into
xchg
nop
sbb
dec
mov
pusha
shlb
and
pop
pop
pop
mov
mov
lcall
cwtl
jns
aas
rolb
enter
loope
sti
imul
adc
mov
lret
stos
xchg
push
gs
test
je
mov
fisubrs
pop
xchg
movsb
movsl
push
push
mov
sbb
fcomps
in
aaa
dec
test
push
in
sbb
or
inc
and
in
dec
push
cwtl
lea
out
jnp
adcb
jnp
bound
push
sbb
mov
stc
sbbb
mov
mov
mov
leave
jge
jbe
lret
insl
mov
add
test
dec
sbb
stc
dec
xchg
aaa
sbb
test
sbb
aad
mov
pop
cmpsl
repnz
cmc
test
mov
sub
or
mov
out
or
repnz
ss
add
aam
mov
jno
dec
aaa
scas
and
cmp
dec
call
sbb
sbb
push
cmp
mov
mov
sbb
push
and
pop
test
add
sub
cmpsl
imul
push
and
scas
mov
call
mov
jnp
leave
fbstp
and
push
cmpsb
es
mov
push
rorb
cmp
lds
in
sahf
pusha
shll
xchg
inc
call
xchg
sub
xchg
pop
out
orl
jbe
sub
fiaddl
adc
add
mov
fs
mov
test
push
push
fdiv
xor
pop
pop
hlt
add
add
pusha
movsl
fistpll
xchg
cs
in
pushf
xlat
push
cmpsl
aaa
fsts
call
jle
mov
lcall
shrl
sbb
cmp
mov
push
push
ret
in
lahf
mov
andb
psllw
scas
mov
xchg
sbb
int
mov
dec
lahf
push
fnsave
jg
cmp
xchg
insb
cmp
push
and
xor
mov
lcall
mov
mov
scas
aam
cmp
xor
shrl
jp
cmp
mov
dec
sbb
mov
nop
in
pop
jmp
clc
xor
jb
cmp
mov
xlat
adc
loope
dec
fsubp
mov
lods
idiv
sbb
cmp
inc
pop
cltd
dec
jb
xchg
xchg
or
insl
mov
jns
fucomp
sub
insb
or
adc
push
sarl
adc
mov
cmp
pop
xchg
adc
push
push
jno
or
xchg
mov
lods
mov
or
inc
cmp
xor
ljmp
or
and
std
pop
mov
jo
cwtl
add
dec
jmp
or
in
je
movsl
mov
dec
bound
jecxz
cmpsl
jg
push
mov
xchg
xchg
inc
pop
dec
jnp
sbb
imul
mov
cmp
mov
and
fbld
mov
adc
fsubl
mov
lahf
or
fwait
xchg
cmp
test
test
push
cmp
nop
in
call
or
jmp
jae
outsb
cmc
adc
mov
int3
mov
je
mov
mov
push
int
and
clc
stc
xor
fcompl
hlt
mov
inc
into
scas
bound
lcall
sbb
shll
push
rcr
fldz
ret
rcrb
js
push
pop
stc
enter
and
bound
or
inc
es
xchg
jb
jge
jecxz
ss
sarb
faddl
adc
test
rcll
ret
movsb
out
je
int
icebp
into
mov
mov
add
adc
inc
imul
mov
jl
fwait
divl
xchg
xlat
ret
lret
xchg
dec
xor
pop
lret
or
mov
push
stc
mov
shll
push
jo
fstp
pinsrw
das
xor
xchg
int3
jmp
fs
pop
dec
xor
dec
xor
or
dec
jne
pcmpgtd
pop
push
and
inc
jle
into
or
daa
lcall
sbb
fldenv
repnz
lods
add
cmp
cs
cmpsl
iret
idivl
ljmp
inc
mov
dec
adc
jns
mov
adc
dec
or
mov
les
mov
mov
jb
mov
mov
and
xchg
xchg
jne
inc
and
mov
rcrb
fadd
rorb
mov
out
cs
lret
dec
push
inc
xchg
push
dec
xor
dec
xchg
mov
adc
es
cmp
scas
stc
je
mov
jnp
in
test
xchg
inc
push
push
cli
inc
aam
mov
out
add
int3
mov
sbb
jb
add
adc
mov
fst
push
pop
and
jo
cwtl
lcall
sbb
cmp
pop
and
pop
inc
fdivs
cmp
iret
mov
sbb
call
dec
mov
xor
leave
gs
cmp
lock
sub
xor
adc
fwait
shll
sbb
adc
push
xchg
jl
pop
xchg
mov
cld
nop
das
fldl
fdivl
in
cvttps2pi
cmpsl
xchg
popa
push
andb
fldenv
push
sbb
dec
es
lret
pop
inc
rorl
xchg
faddl
scas
aad
test
pop
rclb
sarb
divb
ss
and
enter
xlat
jne
sbbl
mov
dec
test
iret
insb
add
mov
pop
sbb
das
add
dec
pop
fdivs
test
shrb
int
cmp
mov
decb
flds
cs
lahf
mov
dec
fsts
cwtl
cwtl
imul
fmuls
popl
mov
sub
xchg
xor
xor
adc
jno
mov
repnz
sbb
jb
lods
out
in
vpshufd
push
loopnew
inc
loopne
cwtl
stc
xchg
test
adc
or
mov
xchg
out
dec
push
rcr
movsb
cmpsl
jg
inc
sub
fisubrl
pushf
in
movsb
test
mov
or
xor
mov
out
mov
icebp
sbb
inc
adc
adc
mov
std
shlb
ret
das
out
push
mulb
xchg
sub
movsl
ss
mov
adc
jg
mov
stc
frstor
pop
sarl
mov
adc
inc
adcl
mov
movsl
ffreep
mov
nopl
aad
add
fnsave
sahf
in
mov
cli
xchg
jae
stos
sbb
jnp
add
and
adc
sbb
outsb
mov
shll
bnd
daa
lods
adc
push
cmc
mov
adc
mov
mov
fsubrs
loope
or
adc
inc
jecxz
fnstsw
sub
add
ret
cmc
out
mov
fidivl
test
out
adc
jo
mov
pop
jno
cmc
cltd
outsb
xor
add
adc
xor
mov
xor
cltd
mov
cmp
adc
aaa
pop
pop
aad
inc
std
pop
lods
xchg
xor
pop
leave
mov
das
dec
cmpsb
mov
add
push
xlat
sub
bound
repz
mov
mov
dec
dec
mov
orb
mov
push
push
andl
dec
loop
aas
cmp
cmp
adc
mov
jg
dec
or
and
push
lods
mov
jne
inc
dec
add
adc
add
mov
into
scas
mov
mov
ss
lock
mov
pop
jo
adc
cmp
mov
loope
jno
out
out
roll
inc
or
push
test
pushl
xchg
push
xchg
fistpll
mov
jae
mov
test
mov
xor
mov
cltd
jns
mov
inc
adc
and
test
dec
push
cwtl
enter
xchg
pop
call
add
mov
lcall
cmp
fnstsw
shlw
mov
fcoml
sub
inc
in
lahf
adc
ror
or
enter
mov
iret
test
es
jecxz
add
xor
pop
test
shl
mov
je
fdivrl
insl
loop
popf
add
pop
and
fs
xchg
mov
cmpsl
cmp
insb
loopne
aaa
mov
orb
add
divl
push
gs
cmp
xchg
xor
lahf
out
aad
arpl
ljmp
shll
test
sub
xchg
push
pop
imul
push
cs
int
mov
cmc
imul
mov
cwtl
jecxz
add
adc
xor
test
sti
std
mov
lcall
sub
jle
movsb
scas
jnp
sub
scas
mov
out
jns
fptan
pop
stos
imul
mov
xchg
int
ret
aad
push
adc
lds
je
jb
lock
xor
sbb
stc
shlb
mov
out
outsl
faddl
dec
inc
outsl
mov
dec
std
js
and
lcall
jl
divl
and
dec
push
push
or
mov
clc
insl
jo
ljmp
in
mov
flds
pop
int
insb
inc
pop
test
pop
dec
cmp
jl
bound
add
mov
je
cmp
adc
push
jns
movsb
in
pop
das
scas
popf
cltd
inc
adc
add
xor
adcb
repnz
pop
loope
mov
jmp
rclb
dec
pop
jl
pop
and
sbb
fdivl
xchg
xchg
movsl
std
hlt
jno
sub
aam
xor
mov
mov
xchg
sbb
push
xor
sarl
decb
stc
jno
test
sarb
xor
sbb
mov
jmp
lcall
mov
pop
pop
mov
mov
test
add
repnz
stos
or
adc
dec
shlb
pop
and
inc
in
je
aam
test
ret
mov
js
mov
test
mov
int
into
or
adc
and
addr16
mov
dec
mov
popf
xchg
stos
pop
nop
dec
movsl
push
and
mov
jno
fcmove
mov
repz
pop
dec
push
cld
mov
ret
nop
clc
adc
sub
xor
testl
add
movsl
popa
fwait
push
push
jmp
or
roll
ljmp
scas
imul
pop
cs
into
insb
das
dec
cs
jb,pt
scas
sbb
out
pushf
inc
mov
inc
outsl
push
adc
test
mov
cld
or
add
adc
popf
mov
mov
inc
mov
dec
test
out
test
mov
inc
xor
mov
repz
jecxz
hlt
mov
mov
push
sub
popaw
test
sub
add
and
iret
hlt
jl
ss
mov
pop
ret
jl
push
jae
jle
in
mov
push
call
leave
sarb
je
shll
clc
inc
and
popa
popa
and
rcrl
and
imul
push
xchg
test
push
aam
cli
sbb
pop
mov
inc
inc
sub
roll
pusha
es
dec
lock
pop
and
inc
dec
push
pop
ret
jmp
stc
hlt
xchg
adcb
call
adc
into
mov
fcomps
stos
adc
ret
scas
cmp
sub
jnp
ficoms
add
pushf
push
xchg
pop
add
test
sbb
imul
or
sbb
adc
jns
leave
mov
imul
adc
xchg
stos
scas
in
test
pop
push
inc
xor
xor
mov
mov
xor
loop
int
out
shrl
dec
inc
int
dec
fcomip
mov
mov
fdivrl
pop
cmpsb
jg
xchg
repz
in
repnz
scas
mov
xchg
fsubrl
nop
paddw
inc
dec
mov
pop
sub
xchg
inc
outsb
and
jne
jp
mov
sbb
cmpsl
test
sub
xor
push
xor
xorl
addr16
or
jge
fwait
cmp
jb
lds
jle
mov
out
setne
and
movsl
call
mov
mov
adcb
test
sub
sahf
and
insl
inc
sbbl
dec
test
mov
jae
lock
xchg
dec
stos
insl
mov
mov
dec
push
imul
ljmp
shll
pop
xchg
sub
and
in
inc
jmp
lret
or
pop
jae
sbb
jb
das
cmp
and
in
mov
fwait
outsb
xor
cmpsb
adc
or
jge
and
xchg
movsb
aaa
lods
dec
cmp
jmp
sbb
aam
mov
shll
dec
call
xor
lea
ja
shlb
pop
stc
arpl
rclb
lds
fidivl
adc
jl
jge
int3
les
clc
mov
sbb
idivb
jbe
mov
data16
sbbl
xchg
out
jns
jnp
lret
sbb
repz
jno
inc
ljmp
inc
pop
xchg
push
arpl
lds
fs
pop
add
push
mov
inc
adcl
pop
mov
mov
mov
mul
scas
daa
mov
mov
mov
jbe
sbb
jl
js
mov
jno
out
mov
ss
inc
pop
rolb
cmpsl
in
lock
jle
jne
mov
fnstsw
or
scas
jp
sub
sub
les
popa
adc
iret
data16
xor
jmp
dec
push
push
ljmp
push
push
test
bnd
rcrl
push
cs
inc
out
fdiv
out
cmp
push
push
test
push
std
arpl
mov
dec
push
loopne
cld
adc
xor
add
fists
or
mov
inc
in
add
cwtl
in
xchg
sub
idivb
add
pushf
lds
stos
insl
cs
subb
xchg
rcr
and
mov
cmp
rclb
or
push
dec
rorl
xor
aad
xor
lcall
mov
xor
push
cmp
in
sbb
mov
cld
push
stc
mov
or
mov
push
pop
lahf
lock
fstp
jecxz
jns
loopne
and
lods
jg
icebp
adc
cmpl
xor
stos
cmpsl
mov
aad
stc
xchg
or
fbstp
cmpsl
inc
adc
xchg
dec
aam
jns
push
xchg
popa
std
popa
testb
shlb
push
jb
pop
ljmp
push
in
sub
inc
scas
ds
lcall
movsl
dec
enter
mov
xchg
mov
mov
sbb
adc
es
xlat
stc
lret
lret
pop
add
pop
push
test
jmp
iret
xor
out
push
mov
xchg
mov
inc
mov
call
cmp
imul
push
in
mov
pop
imul
je
adc
xor
fwait
adc
cmp
dec
nop
or
jno
mov
fidivs
add
es
fcmovnb
push
fcmovnbe
mov
fisubrs
sub
fsubl
andb
mov
pop
pop
lret
ret
pop
inc
popa
mov
daa
and
lcall
int3
xor
pusha
jbe
sub
out
call
mov
insb
cli
int
lahf
scas
adc
aam
or
inc
jno
out
jne
sbb
das
push
xchg
jmp
cmp
jnp
aaa
dec
jno
aad
cs
jmp
xor
loop
imulb
pop
sarb
pop
lock
push
xchg
and
pushf
inc
mov
cwtl
ds
movsl
fistpll
popf
cmp
xchg
and
mov
and
add
cmp
inc
lret
add
cmp
js
xchg
xlat
inc
mov
jo
sub
jle
push
xchg
cmp
and
loope
or
cmpb
and
xchg
repnz
jge
jle
xchg
rcrl
ds
push
lcall
ret
jg
push
sarl
pop
aas
popa
push
mov
lock
jo
mov
clc
mov
test
outsl
or
cmp
loope
dec
sbb
or
movsl
add
test
clc
mov
cmpsb
clc
dec
repz
xchg
mov
pop
push
dec
xchg
in
xor
imul
fcompl
push
xchg
add
sahf
fstps
inc
and
sub
push
aas
mov
add
sbb
popl
ret
dec
xchg
les
mov
movsl
pop
fsubl
popf
sub
inc
es
xchg
mov
lret
sahf
inc
cli
sti
lods
pop
jecxz
dec
ret
mov
push
stc
cmp
jae
and
scas
aas
add
adc
push
pop
add
push
push
sub
sub
or
mov
mov
movsb
shrb
pop
dec
test
mov
aad
mov
adc
insl
cmp
mov
mov
sbb
stc
and
jae
sti
mov
mov
js
dec
adc
lock
stos
push
pusha
imulb
mov
lds
fsubrs
loope
xchg
scas
adc
mov
loopne
ljmp
leave
lahf
xchg
push
push
dec
loop
lcall
fnsave
pop
jb
or
mov
xor
imul
mov
jge
and
les
push
push
jl
and
es
fcmovne
das
mov
push
mov
mov
cli
shll
sub
ss
test
push
jo
dec
cwtl
and
imul
cwtl
mov
inc
repnz
adc
lea
or
and
adc
ja
ss
add
and
pop
jge
adc
addl
aad
push
sbb
or
lret
ret
lods
bound
sbb
jno
mov
lods
repz
xchg
cld
dec
mov
ljmp
mov
push
es
ret
repnz
jbe
dec
scas
lcall
inc
jge
int3
fs
inc
das
or
out
aas
sub
aad
sbb
out
data16
icebp
push
dec
jge
adc
and
xor
push
jno
fmuls
sbb
sub
lea
and
mov
idivl
and
imul
mov
pushf
andb
ljmp
mov
bound
jns
rcll
sarb
xor
ljmp
shll
daa
push
fistps
frstor
idiv
add
xchg
mov
inc
push
add
xor
or
movsb
inc
push
test
cmp
xchg
push
movsb
push
repnz
inc
shl
ljmp
stc
shll
outsb
sti
scas
ds
jl
push
lret
subb
imul
rolb
fwait
jne
jns
xor
or
fadd
shrb
mov
sti
inc
cmp
rorl
jge
sbb
sub
call
arpl
xchg
xchg
adc
pop
sbb
adc
jno
mov
inc
fld1
pushf
xchg
in
fcmove
add
cld
std
pop
cltd
ret
push
sub
ja
adc
dec
cmp
decb
push
in
push
pop
rcrb
cld
sbbb
repnz
mov
loopne
xchg
adc
dec
shl
adc
dec
call
and
popf
push
sbb
cli
test
add
das
in
push
inc
dec
shll
cmp
mov
xor
mov
rcrb
sbb
push
ds
cmp
pusha
faddl
mov
lods
mov
ljmp
pop
scas
loop
adc
and
cmp
dec
sbb
ret
andl
in
lds
jmp
pop
notl
mov
into
and
sbb
or
dec
mov
aaa
data16
jl
xchg
shl
push
sbb
inc
rcr
ds
jle
leave
mov
sub
and
leave
out
std
add
push
add
adc
iret
cmpsl
rorl
sbb
pop
cmp
in
mull
add
mov
inc
pop
mov
sbb
stos
mov
add
test
xchg
mov
and
xor
pop
imul
mov
pop
aam
outsb
lock
dec
xor
cmp
pop
push
xor
jmp
insb
popl
out
sub
dec
jmp
jno
lock
lods
or
pop
dec
inc
push
inc
xchg
imul
fcomps
sub
and
xchg
mov
push
stos
sbb
call
push
mov
push
repnz
aad
popf
andb
dec
jbe
loop
mov
add
jb
shlb
ds
mov
xchg
test
pop
rcl
mov
add
or
jne
mov
shrl
in
pop
aad
scas
mov
sub
add
icebp
movsb
fs
test
cmp
xchg
aaa
push
neg
ds
push
ds
xor
adc
add
mov
cmp
dec
sbbl
adc
ja
pop
and
pop
notb
cmp
cmp
ror
daa
pop
pop
cld
sbb
push
xlat
mov
aad
pop
jg
pop
stos
stos
lock
add
pop
in
loope
mov
mov
test
ja
fwait
insb
in
inc
mov
orb
inc
in
repnz
iret
push
mov
mov
outsb
jecxz
shlb
iret
shl
mov
xchg
push
into
sub
rorl
push
fsubr
xor
cmp
push
sti
data16
dec
adcb
popf
pop
or
sbb
sbb
fwait
and
mov
test
dec
xlat
or
not
daa
ret
loope
fstps
pop
add
jg
mov
cwtl
data16
in
pop
pop
lcall
jno
in
scas
cvtps2pd
jns
xor
inc
sbbb
cwtl
push
or
out
out
mov
addl
fistl
imul
xor
xchg
rol
jns
sub
ja
mov
mov
mov
repnz
dec
xorb
in
fs
dec
subl
outsb
push
jle
movsl
cmp
cli
adc
jle
pop
cmp
mov
outsb
repnz
xor
scas
and
jmp
dec
dec
into
subb
push
addr16
cmpsb
aas
lret
into
inc
lds
cmovno
jp
addb
xor
scas
dec
pushf
mov
jmp
lods
es
cld
in
push
fidivrs
pop
xchg
jge
inc
js
sub
cmp
xchg
movsb
gs
push
cld
imul
sbb
ficomps
stos
mov
testb
lock
fists
cli
shlb
adc
sub
fwait
roll
movsl
cltd
sbb
xchg
inc
clc
or
cwtl
ja
inc
cs
ret
mov
jl
adc
ja
enter
ss
adc
cmp
sub
sbb
scas
popf
stos
aad
das
adc
es
dec
pop
iret
fwait
push
aam
cmc
addb
adc
dec
sahf
and
push
dec
in
or
xor
insb
aad
mov
add
scas
aad
dec
repnz
inc
jo
xlat
insl
insb
jl
adc
dec
data16
fimull
xbegin
imul
cwtl
or
jge
and
lds
ret
stos
ja
adc
out
xor
xchg
inc
xchg
pop
xchg
xor
jg
rclb
and
lret
popa
icebp
jae
push
clc
push
out
add
pop
std
pop
jnp
mov
add
jp
mov
into
or
stos
enter
lret
lods
mov
or
js
jae
pop
add
push
push
add
xor
setle
sub
and
shll
js
inc
mov
jmp
hlt
jecxz
into
xor
inc
cld
sbb
je
sbb
inc
lds
mov
jl
cs
and
std
imul
jb
iret
xchg
sub
cmp
into
pop
mov
sti
cmp
jle
pop
and
bound
leave
and
inc
xor
test
push
into
out
lahf
cld
shlb
mov
jb
pop
out
int
xlat
and
jo
ljmp
test
inc
push
je
dec
jge
push
lods
not
and
push
imul
pusha
mov
and
and
icebp
fdivl
mov
imul
push
dec
fisubl
push
sbb
mov
mov
mov
fsubr
outsl
and
test
in
cld
and
jmp
xor
mov
add
and
cmpsl
stos
cltd
mov
popa
enter
sub
dec
xlat
sub
in
mov
push
les
int3
mov
in
lret
pop
fcoms
mov
inc
jb
add
inc
into
imul
call
jge
xor
lock
mov
stos
mov
push
movl
aam
xchg
ljmp
or
jo
mov
sub
iret
mov
lea
add
add
push
xchg
rolb
dec
push
pop
push
out
cmp
int
ds
imul
mov
or
jno
dec
jnp
inc
cmp
test
cmp
jecxz
aaa
popf
enter
or
mov
add
inc
loopne
test
push
cmp
xchg
push
push
fs
push
and
mov
icebp
mov
push
aad
inc
sub
fs
pop
cld
das
pop
movsb
das
dec
or
cmpsl
jne
test
adc
mov
fcmovnb
push
aas
mov
mov
cmpsb
jl
xor
pop
ja
imul
fdivrs
leave
xchg
or
mov
in
scas
push
iret
mov
loope
xchg
xor
call
add
ljmp
pop
xchg
sti
les
lock
das
aas
and
adc
dec
jp
cli
aas
mov
mov
add
xchg
aam
mov
push
out
cmpsl
rcrl
fwait
xchg
pusha
clc
xchg
jae
inc
pushl
or
lahf
into
testb
fs
fidivs
jno
sbb
out
mov
and
sbb
or
pusha
sbb
addr16
in
cli
xchg
adc
je
out
call
adcb
mov
pop
rcrl
cmp
and
dec
test
addr16
cli
cmp
push
pop
ja
or
mov
pmuludq
imul
adc
add
fadd
cmp
jge
subb
arpl
mov
fsubs
out
test
xchg
ret
sub
nop
dec
pop
repz
in
jg
outsb
pop
cwtl
shlb
xchg
pop
orl
sub
cmp
stos
out
cld
add
mov
pop
and
popf
jg
int3
aaa
pop
shll
dec
pop
sarl
lret
aaa
in
adc
jg
dec
je
cmpsl
scas
sahf
mov
sub
dec
sbb
pop
sub
mov
xor
fstpl
adc
add
mov
jmp
sbb
icebp
pop
and
and
es
cmpsl
repnz
not
xchg
fldl
insl
mov
into
shrb
out
pop
fidivrl
imul
sbb
xchg
rcll
out
hlt
lods
inc
pop
pop
popf
int3
call
test
mov
or
xchg
mov
inc
addr16
mov
rolb
push
inc
mov
mov
je
add
into
sub
sbb
pop
orl
nop
bound
push
mov
mov
lea
ret
push
push
xchg
jnp
and
inc
push
movsl
fmuls
or
xor
int
mov
test
sbb
push
mov
sub
push
pop
sbb
inc
ja
add
mov
jmp
test
push
pop
xchg
outsb
test
insl
fs
mov
dec
imul
insb
adc
mov
mov
les
adc
add
outsl
test
cmpb
cltd
mov
ja
adc
enter
push
push
add
nop
jbe
rcr
rolb
notb
mov
cmc
push
in
push
xorb
lret
sbb
and
stos
xchg
xor
lods
pop
mov
push
add
inc
jno
js
cmp
sub
adc
popf
pop
sub
add
pop
mov
test
xlat
outsb
xchg
negb
stos
dec
mov
subb
pop
movsb
ret
mov
movsl
in
in
outsl
mov
jg
test
xorl
jb
loopne
xchg
sarb
xchg
sti
pusha
cs
shrl
mov
in
jge
sahf
dec
icebp
and
fwait
mov
aaa
jbe
call
addb
xchg
xchg
or
outsb
stos
mov
xlat
bound
push
stc
outsb
test
ja
je
or
or
sub
pop
mov
ss
sti
cmp
add
jo
mov
mov
insl
les
ds
rcr
out
pop
add
cmp
xchg
xchg
adc
sarl
pop
aam
fucom
sarb
xchg
fnstcw
je,pt
sub
addl
int
inc
jnp
mov
sarl
pop
in
mov
sub
mov
scas
pop
jbe
shl
pop
sti
cmpsl
out
xchg
cmp
push
pop
xchg
or
push
mov
pop
int
test
aas
das
aaa
insl
mov
lock
xchg
push
cmpsb
cmpsl
sbb
mov
data16
out
lods
shrb
divl
xor
mov
push
mov
xor
xchg
mov
lods
adc
arpl
andl
push
dec
xor
daa
push
cli
pop
sub
les
adc
mov
sub
mov
pop
arpl
or
or
cmpsl
fs
dec
xchg
mov
fadds
mov
mulb
fwait
mov
rorb
inc
mov
mov
ss
mov
les
fisttps
incb
in
add
fcmovnu
cmp
sti
push
or
lcall
shlb
aaa
in
mov
rcl
loope
into
add
stos
das
sub
stc
test
lock
mov
popa
mov
rclb
pop
jne
cwtl
xchg
pop
subl
inc
xor
lcall
outsb
dec
inc
out
and
ror
sahf
test
push
adc
inc
sahf
aas
xchg
dec
cmpsl
mov
push
jne
fsubs
jne
mov
ret
movsb
lea
sub
push
mov
mov
repnz
push
ret
xchg
out
add
push
hlt
icebp
outsl
cmp
rorb
jne
mov
adc
sbb
adc
mov
cs
mov
lods
cs
fidivs
inc
or
adc
sub
insb
mov
sbb
fwait
movsb
cltd
inc
enter
cld
popf
xchg
xor
and
dec
xchg
mov
cli
cli
xor
xor
push
cltd
dec
sub
mov
roll
loope
jbe
iret
in
inc
fimuls
fcompl
and
pop
scas
push
pop
add
cmp
or
mov
cmp
popf
xchg
push
jl
divb
push
or
bound
mov
aam
dec
shll
in
test
in
loopne
jl
aad
add
test
sti
jo
jmp
clc
cmpsl
fidivrs
or
push
test
hlt
mov
sbb
ds
jno
push
stos
lea
add
clc
xlat
sub
sub
je
icebp
mov
dec
testb
stos
dec
mov
jno
call
ja
inc
inc
inc
xchg
dec
or
sub
test
hlt
shlb
mov
lea
shll
dec
push
fsub
cmp
push
dec
xchg
jecxz
cmp
call
mov
xchg
test
cmpsl
pop
or
adc
or
insl
fs
in
jmp
popf
adc
adc
rcll
inc
pop
testb
xchg
mov
push
or
arpl
loop
mov
addr16
jmp
or
cmp
faddp
xor
fcoms
mov
jmp
mov
add
sti
lock
outsl
lea
outsb
push
sti
pop
push
sarb
popa
shlb
or
xchg
inc
xchg
sub
adc
je
jg
dec
adc
dec
xor
mov
jo
sar
lcall
adc
out
push
out
or
dec
push
jbe
faddp
out
mov
test
pusha
mov
fcmovbe
xchg
adc
arpl
add
xchg
cmp
popf
push
mov
out
enter
insb
jmp
aas
mov
je
sahf
rolb
jnp
fldenv
adc
or
out
and
push
add
add
mov
or
mov
loope
sti
cmpb
mov
cmp
xchg
movsl
push
inc
shr
jns
test
inc
cmp
push
mov
pop
mov
outsl
dec
xchg
dec
adc
xor
cmpsl
sub
sbb
xchg
int
add
mov
add
xchg
push
or
push
lea
pop
out
adc
loop
inc
pop
addr16
call
or
jecxz
shlb
shll
daa
in
add
and
mov
lods
mov
mov
mov
aaa
test
mov
jns
pop
mov
xchg
or
inc
insb
jl
xor
lods
xor
pop
in
and
in
lds
xor
cmp
and
mov
shr
mov
push
adc
daa
cmpsb
js
movsb
sbb
ljmp
inc
outsb
or
filds
mov
hlt
lret
aam
popa
mov
mov
sub
cmp
imulb
not
rcrb
mov
xor
lahf
out
jle
clc
jmp
add
xchg
inc
mov
lcall
sbb
test
mov
dec
or
cmp
dec
xor
shrl
fistps
out
dec
inc
ds
mov
sbb
cli
and
add
cmp
xchg
and
fcmovne
mov
add
addr16
cltd
add
sub
notb
rorb
out
sub
push
and
jg
outsl
push
repnz
pop
imul
ffree
lods
pop
pop
jp
cmp
mov
lcall
out
mov
adc
aad
jb
movsl
fimull
sub
sbb
push
ljmp
dec
js
lods
testb
inc
rcl
mov
sbb
add
rclb
sub
mov
mov
mov
mov
cmc
jp
pop
popf
mov
xlat
pop
out
test
lahf
out
push
dec
xor
mov
push
and
fidivl
lcall
fwait
out
sbb
or
jl
and
add
popa
mov
outsb
push
mov
sub
sbb
in
pop
cmc
stos
popf
mov
pop
mov
mov
cmpsb
fadds
mov
mov
mov
pop
fsts
push
fcomp
enter
scas
mov
decb
arpl
mov
pop
js
add
into
inc
faddl
xor
dec
jg
movsl
stos
loop
xor
sub
icebp
jl
icebp
aam
adc
scas
out
inc
sbb
add
fmull
push
sub
xchg
popf
mov
int3
dec
fisttps
insb
pusha
and
push
and
repnz
cmp
add
sti
and
dec
inc
inc
add
push
dec
jle
dec
xchg
cmpsb
inc
xchg
pop
fs
pop
dec
mov
jmp
rol
push
in
mov
aam
lret
mov
xorb
lea
cmc
aaa
or
fiadds
mov
rorb
sbb
pop
stos
adc
fidivrl
leave
cvtps2pd
sub
fdivs
scas
xor
add
iret
and
insb
jg
aad
pop
lahf
xchg
fwait
test
pop
push
push
add
xchg
inc
dec
xchg
mov
hlt
cmp
xchg
sub
pushf
daa
jae
and
aas
add
and
sub
sbb
stos
mov
ret
pop
fnsave
loopne
fbstp
and
repnz
jae
jnp
mov
mov
out
ljmp
sub
cs
jae
iret
mov
push
out
test
lods
vextractf32x4
adc
push
lods
cli
and
fsts
cld
mov
cmp
dec
mov
inc
pop
jo
cld
cmc
mov
sub
pushf
addr16
jns
lahf
push
addl
sti
sbb
mov
rcr
imul
inc
adc
ret
inc
rclb
mov
ret
mov
xchg
mov
cmp
daa
and
bound
pop
or
sbb
into
outsb
pusha
push
inc
mov
testb
xorl
or
gs
ret
mov
fcomp
jge
js
ss
xchg
mov
mov
fdivrs
jmp
xor
mov
data16
cltd
subb
pop
and
hlt
je
sub
mov
adc
mov
insl
mov
pop
or
std
push
mov
pop
xchg
mov
mov
imul
popa
dec
mov
pop
fldt
pop
test
adc
adc
mov
inc
jge
movsb
mov
cmp
sbb
mov
ret
call
js
mov
sahf
fdivrl
iret
jo
or
cmp
xor
test
iret
cmc
push
mov
cld
fstpl
mov
push
sbb
or
xchg
dec
ljmp
js
loopne
jae
sub
cld
insb
and
stc
mov
lahf
cld
cmpsb
and
jne
roll
shrl
mov
xchg
mov
pusha
mov
jle
movsl
add
xor
adc
lods
sbb
xor
aas
out
jnp
negl
sbb
decl
testb
dec
and
rorl
in
mov
sbb
cwtl
push
scas
xor
and
jmp
jns
int
sub
adc
jle
jl
stos
mov
mov
stc
sahf
js
and
jnp
mov
fisubrl
repnz
hlt
add
push
negb
aam
mov
out
call
fmull
ret
push
lods
mov
mov
pop
push
xchg
sbb
xor
arpl
mov
scas
adc
cmc
pop
cmp
mov
jge
and
sbb
test
adc
jae
pop
and
mov
mov
xchg
sbb
jmp
test
nop
mov
iret
icebp
mov
xchg
stos
push
sbb
cli
push
shrl
xchg
fimull
xchg
or
xor
lret
aaa
stos
mov
push
sub
inc
fnsave
mov
icebp
jmp
jbe
sti
mull
xchg
pop
adcl
inc
or
pop
jecxz
and
jb
out
inc
out
mov
aaa
xor
std
cmp
lods
icebp
xor
loop
clc
xor
add
test
push
js
punpcklwd
xchg
sahf
xchg
ss
jp
sub
sarb
mov
aam
popw
scas
cmp
mov
pop
dec
bt
int
sub
mov
jo
sub
dec
stc
mov
fistpll
push
outsl
jp
xchg
jo
cmp
push
fisubrs
xorb
adc
xchg
outsl
xchg
push
dec
and
shr
push
sub
mov
in
or
mov
xor
cmp
mov
cmp
or
jmp
mov
lea
pop
icebp
mov
outsl
enter
iret
lock
cli
int3
scas
push
cmp
cwtl
out
inc
mov
cmpsl
es
cmp
pop
xor
mov
add
popf
pop
cmp
dec
cmp
inc
mov
inc
push
jl
push
sub
inc
ljmp
loope
pop
in
leave
push
movb
insb
test
xor
shlb
loopne
fldenv
mov
mov
sub
mov
fstl
push
loop
movsb
sbb
aaa
inc
jo
std
das
ss
and
add
ret
pop
es
rclb
xchg
jle
bound
jecxz
jl
adc
push
cmp
jbe
jno
pop
int
lret
mov
pop
or
adc
jae
fidivs
ljmp
sbb
lods
mov
fdivp
daa
scas
cmp
mov
dec
mov
int
loop
push
fwait
cmp
inc
cs
mov
push
fldl
int
sbb
pusha
push
or
push
mov
pop
xchg
orl
xchg
mov
jge
mov
ss
insl
mov
jo
pop
sbb
inc
sub
and
add
out
and
push
mov
xchg
imul
adc
lahf
mov
mov
push
ds
xchg
lock
int3
movsl
shlb
add
jno
das
cmpb
sbbl
dec
out
mov
ljmp
mov
sbb
adcl
mov
jmp
mov
pop
add
cmp
fists
mov
inc
sbb
push
xor
test
dec
xchg
xchg
xor
aaa
jae
mov
adc
test
or
loope
mov
test
add
fadds
dec
cs
movsl
or
lock
shlb
lds
daa
jns
inc
das
cvtpi2ps
xchg
lods
xchg
mov
adc
loope
inc
in
push
mov
mov
jne
push
pop
les
lret
xor
adc
mov
mov
pop
icebp
pop
test
stos
mov
inc
sarb
addb
jecxz
lret
xor
sbb
loope
sbb
and
stos
lds
test
in
mov
outsb
insb
test
xchg
and
adc
nop
lret
push
mov
mov
loope
inc
es
ja
popa
and
or
sbb
aad
add
addb
outsl
pop
inc
lea
cmp
cmp
dec
iret
fcmovbe
xchg
outsl
add
sbb
test
fistl
test
loope
test
jge
adc
push
div
jnp
test
repz
pushf
fs
push
xchg
scas
sbb
cli
mov
in
lds
cmp
mov
adc
pop
mov
cmpsb
mov
and
in
push
cwtl
in
sbb
adc
hlt
gs
and
sub
mov
mov
inc
cwtl
mov
iret
aas
cmp
ljmp
in
push
jb
fidivs
dec
test
xchg
adc
mov
sub
xchg
sub
movl
cmp
lret
fcomps
filds
js
mov
lahf
add
xor
inc
pop
movsl
push
dec
divb
mov
and
scas
sub
mov
loope
lds
push
shlb
mov
shrl
pop
xor
fisttpll
xor
sbb
lcall
movsb
ds
loopne
lcall
subb
pop
or
mov
notb
lods
out
dec
lock
insb
mov
das
inc
push
movsb
or
lret
and
inc
int
scas
jg
sub
sub
add
adc
pushf
enter
les
clc
fcomps
and
mov
fbld
adcl
pushf
je
adc
test
cmc
sti
or
xor
xchg
push
and
xchg
jge
into
sub
xchg
and
push
mov
dec
cmpsb
aad
jns
pushl
xchg
test
iret
enter
iret
xor
insb
inc
push
mov
dec
shlb
mov
inc
daa
xchg
scas
mov
jle
cmc
push
push
test
mov
out
sbb
mov
mov
fdivrs
pop
repz
and
loop
mov
ljmp
mov
sbb
inc
mov
pop
int
lret
sub
mov
cltd
mov
sbb
ss
xor
dec
call
pop
add
xor
sbb
sub
jbe
add
rorb
and
shr
in
jecxz
mov
shlb
jg
loop
sbb
or
js
pushf
and
inc
mov
jnp
add
lahf
jg
in
fmul
pop
mov
pop
mov
aaa
add
daa
fsubl
pop
in
and
inc
dec
dec
shll
ret
xor
inc
scas
mov
lret
lcall
inc
lcall
xchg
andl
stc
mov
nop
add
add
enter
aam
inc
or
addr16
out
jg
lock
das
insl
and
call
sbb
fwait
imul
push
icebp
loope
popf
out
lcall
out
push
lea
enter
xchg
xchg
test
mov
add
sub
jbe
cmc
outsb
lret
testb
and
lret
jno
or
mov
addr16
add
jg
pop
xorb
push
push
sub
iret
xchg
movsl
xchg
mov
mov
push
lods
gs
test
repz
inc
call
loope
das
ret
and
inc
sti
test
pushf
pop
popf
addl
fsubs
xchg
fstpl
jmp
jns
jne
or
mov
and
push
jmp
in
in
lods
ret
arpl
notl
mov
dec
outsl
inc
mov
gs
ror
mov
xor
jl
mov
or
js
test
dec
aaa
mov
adc
push
and
rolb
orb
test
outsb
pop
out
pop
rclb
mov
push
icebp
mov
imul
out
mov
xchg
shl
and
outsl
mov
xlat
adcb
mov
xor
pop
mov
jmp
adc
repz
pop
xchg
lcall
notb
das
cs
mov
mov
dec
mov
lea
push
ds
lock
gs
arpl
clc
push
test
sub
shl
xlat
mov
lret
xchg
dec
out
js
xchg
pop
push
adcb
in
std
mov
outsb
fstl
mov
add
loope
or
es
mov
and
mov
test
int
test
adc
mov
shrl
clc
out
mov
pop
inc
idivb
push
cmp
loope
jecxz
sub
mov
out
xor
push
inc
jne
ljmp
in
ja
sbb
dec
sbb
mov
test
xor
aam
arpl
loope
jno
jb
out
clc
mov
repz
xor
testb
mov
orl
jns
cmp
mov
orl
aaa
into
push
int
mov
cmp
add
add
adc
xor
jmp
fidivl
pop
and
icebp
sub
outsb
lcall
mov
jno
pop
imulb
sbb
pop
repz
or
add
dec
hlt
lret
rcll
mov
jmp
dec
xor
or
fisubl
mov
lret
jle
push
mov
dec
repz
inc
test
dec
inc
add
mov
ss
imul
xor
mov
sti
inc
xor
cwtl
and
mov
pop
into
dec
test
cmp
int
push
movsl
add
repz
mov
dec
fiaddl
outsl
mov
xor
pop
xchg
or
jae
insb
add
divps
int
int3
push
mov
dec
sbb
rcll
jle
pop
push
push
mov
mov
cltd
fildl
mov
leave
jns
xchg
cmp
test
dec
imul
add
scas
xor
idivb
fisubrl
dec
inc
mov
cmpb
adc
out
fucom
rolb
mov
adc
fwait
out
lock
sbb
call
sub
mov
out
in
xchg
dec
testl
cmp
jg
cli
lods
repz
je
mov
adc
jmp
dec
add
cltd
or
fisubs
dec
jecxz
fmul
imul
in
cmp
mov
icebp
stos
repnz
std
jp
xchg
push
cmp
aas
call
pop
lds
mov
lret
mov
sub
imul
inc
cmp
pushf
cmpsl
xchg
loope
sbb
in
mov
push
sub
add
pop
xor
adc
xor
pusha
jbe
jo
cmp
jg
in
int3
stc
leave
sub
mov
stos
mov
loop
in
push
ds
xor
pushl
cli
jb
add
pushf
inc
bound
or
sbb
pop
std
pusha
mov
sub
push
pop
push
fcompl
xchg
cmp
cwtl
xchg
divb
dec
pop
outsl
dec
repz
mov
cmp
jnp
ds
add
push
xor
dec
sub
leave
adcb
outsl
jle
mov
push
mov
sbb
adc
ret
icebp
adc
das
pop
fsubs
pusha
jecxz
aas
ljmp
imul
sbb
cmovs
cmp
dec
push
adc
push
xchg
xchg
imul
ja
xchg
mov
orl
pushf
push
shr
dec
jp
jno
inc
dec
and
scas
pusha
adc
in
or
mov
in
mov
out
mov
repz
popa
test
nop
or
cmp
pop
inc
mov
or
mov
push
mov
dec
movsb
ja
scas
arpl
fisubs
test
mov
and
bsr
xchg
inc
xor
lods
inc
stos
orb
icebp
dec
push
addb
mov
push
pop
xchg
xchg
roll
fildll
inc
xor
testl
mov
in
push
add
cwtl
mov
mov
jmp
mov
div
out
cmp
nop
push
out
jmp
cs
cmpl
adc
xor
xor
outsl
dec
test
jp
loopne
jp
mov
or
gs
loop
scas
sbb
lret
mov
and
cmc
ret
adc
sbb
les
push
test
push
repz
push
aas
cmp
lods
jmp
out
dec
fistpl
movsl
jb
loope
xor
sub
jno
ftst
jp
cld
cmp
jae
mov
sub
and
mov
sbb
out
divb
insl
mov
test
fsubl
ljmp
and
aam
cltd
cwtl
filds
and
cmpsl
icebp
into
sub
mov
cmpsl
shll
sbb
push
insb
sti
loope
push
cmp
push
lods
push
sub
aam
inc
dec
inc
dec
xchg
fildll
push
push
int
in
test
mov
sti
dec
pop
inc
mov
out
mov
fsts
dec
push
pop
rorl
xchg
lds
inc
mov
in
mov
mov
mov
mov
gs
or
lret
imul
or
pop
push
lock
and
pop
xchg
adcb
std
push
xchg
pop
push
jmp
cs
sub
in
dec
mov
testl
jnp
clc
popa
sbb
outsl
push
cwtl
adc
ret
incl
pop
pop
xor
fildl
js
lods
mov
rcrb
jne
movsl
imul
dec
mov
icebp
sub
loop
ja
aam
ljmp
ror
stos
jg
mov
mov
insb
jae
push
adc
sub
push
dec
inc
xchg
lea
inc
insb
aad
sbb
and
lods
rcrb
in
insl
dec
cmovge
mov
mov
imul
fs
mulb
pop
push
push
aaa
movl
dec
adc
cmp
mov
mov
cltd
je
jne
ds
mulb
add
mov
xor
pop
pop
push
dec
psadbw
mov
imul
add
push
out
pop
xchg
lods
outsl
loop
mov
and
cli
adc
movsb
loopne
mov
push
fists
test
mov
jge
mov
rclb
aam
cmpsl
ljmp
push
call
ror
push
adc
push
cmp
pop
mov
leave
js
jle
ss
sub
xor
inc
xlat
popa
jl
out
jbe
imul
and
jecxz
retw
push
cld
loop
xchg
sbb
sbb
xchg
xor
insb
jae
xor
inc
int3
inc
mov
rcll
loope
in
sbb
nop
or
mov
jge
jo
push
pop
les
mov
leave
negb
dec
cwtl
outsl
mov
xor
lcall
fs
fwait
insb
sub
daa
jmp
insl
jmp
loop
sar
addr16
push
jne
fsts
xchg
xchg
scas
movb
ja
sbb
insb
adc
dec
or
dec
or
push
push
pop
cmp
lret
cmpsl
or
dec
popf
std
adc
sub
pushl
lret
into
out
ja
movsb
sbb
cmp
mov
xor
jb
mov
mov
mov
add
xor
addl
jno
and
jbe
ljmp
dec
sub
inc
inc
std
enter
xor
popf
stos
jns
dec
stos
add
jg
into
in
das
and
sti
mov
pop
rcll
mov
or
in
lods
and
shr
movsl
jb
push
out
jmp
int
xor
fdivrl
xor
pop
lcall
jl
inc
decb
push
adc
test
bound
adc
popf
pop
xchg
xor
adc
or
jns
in
testl
xchg
sahf
cld
insb
stos
mov
shrb
push
test
rorl
xchg
jo
test
mul
addl
adc
push
xorb
cmpsl
cmc
xor
in
shl
sub
cmpl
leave
into
mov
orb
pop
inc
loope
mov
push
xchg
out
inc
push
je
jl
js
fildl
mov
cs
ja
vmaxsd
push
ja
jmp
jns
cmp
xor
mov
rcl
adcl
into
jnp
adc
pushf
jge
inc
cmp
add
nop
add
pop
mov
pop
hlt
push
jge
jae
dec
in
or
in
xor
sbb
pop
push
sbb
sub
test
pop
adcb
lahf
jmp
aaa
in
cmp
xchg
out
popa
das
push
insl
cmp
scas
loop
mov
xorb
int
jle
hlt
add
aam
mov
scas
inc
gs
cmpsl
lods
fists
or
pop
outsl
stc
mov
mov
xchg
enter
popa
cmp
xchg
xchg
dec
xor
xor
out
or
lahf
loope
inc
cmp
pop
mov
shr
mov
dec
into
ret
inc
jnp
movsb
rolb
mov
jmp
inc
shlb
inc
cwtl
cmp
scas
pop
dec
add
inc
mov
or
ljmp
xlat
mov
movb
mov
daa
xchg
ret
pop
mov
addr16
mov
sbb
popf
mov
fucomip
lds
loope
mov
aas
lods
xor
push
mov
cmc
inc
mov
pop
and
add
add
dec
pop
testl
mov
dec
repz
jg
imul
scas
outsb
cmp
arpl
into
movsl
lahf
mov
or
jg
test
in
lds
mov
push
xchg
push
pop
inc
inc
xor
fnstsw
jg
fld1
add
sti
cmpsb
icebp
lret
test
mov
cltd
sbb
shlb
push
cmpsb
cmp
adc
push
into
jnp
sti
insl
into
cld
inc
mov
lret
push
and
push
loopne
adc
jge
fsts
or
cli
cmp
cmpsl
insb
testb
or
sahf
push
and
jns
mov
jl
je
and
inc
push
lds
rclb
test
sub
and
xor
repnz
stc
subl
add
mov
or
sub
flds
ss
jg
scas
iret
cld
sbb
sub
es
push
push
stos
into
xlat
push
add
xor
aad
test
mov
or
push
and
push
shlb
rcll
push
popa
sbb
cmpb
clc
aaa
in
sti
sbb
xchg
pushf
fimull
and
sub
xchg
xor
les
sbb
xorb
mov
fcmovnb
fs
mov
dec
jae
std
inc
fxch
mov
mov
mov
jno
sub
cmp
inc
sub
mov
and
sub
and
cs
mov
ffreep
cmc
lahf
shr
add
shlb
jnp
popa
dec
cmpsb
cltd
jmp
shrb
ja
xchg
pop
into
xchg
push
dec
jg
js
adc
push
adc
cmpsl
in
mov
scas
push
and
out
leave
push
test
xor
movsl
stc
mov
clc
out
ffreep
mov
adc
rcll
push
add
mov
popf
jge
test
in
aas
inc
xor
arpl
scas
sub
pop
and
jp
jno
stos
push
addr16
xchg
adc
out
loopne
fildl
add
mov
sub
jno
dec
std
push
int3
shll
adc
aaa
or
push
ljmp
inc
lret
dec
jmp
ret
jbe
aad
and
scas
xor
push
xor
arpl
icebp
inc
mov
testb
popa
adc
add
sbb
dec
cli
dec
pop
or
lcall
imull
hlt
pusha
mov
hlt
cmc
push
mov
in
push
push
jmp
inc
mov
dec
shrl
lret
xor
push
jg
mov
push
mov
and
lea
mov
cmp
mov
ss
popf
aas
sbb
sub
or
mov
fwait
iret
fnsetpm(287
push
dec
adcb
sbb
cmc
cmp
mov
sbbb
push
dec
and
mov
das
in
jle
jmp
jne
and
sbb
or
hlt
push
inc
fld
adc
dec
jne
mov
test
cmp
test
mov
inc
out
sbb
sbb
nop
sub
scas
lds
sub
sti
loopne
shrl
mov
loope
sub
in
inc
scas
sub
out
ret
sub
cs
mov
sbb
jle
jmp
mov
popa
xchg
jle
dec
into
lret
lds
scas
sub
mov
mov
mov
push
jo
ret
cmp
add
mov
notl
mov
jle
inc
rcrb
adc
jle
jae
inc
negl
ror
push
ret
and
mov
mov
in
sub
jne
rorl
faddp
test
fiadds
xchg
cmp
sub
sahf
xor
call
jo
aaa
cmpsl
loop
jnp
popf
lds
cmp
and
lea
add
fldl
add
hlt
add
into
stos
jbe
sbb
imul
imul
aad
pop
sub
cld
mov
sub
cmp
cmc
add
test
fs
add
je
popa
addr16
ds
imul
lods
dec
outsb
fildl
and
xchg
mov
out
test
and
xor
xor
adc
outsl
in
add
jno
lods
mov
inc
lret
mov
mov
sub
and
idiv
add
dec
shll
outsl
aam
inc
sarb
push
out
or
aaa
orl
inc
mov
pop
jo
mov
add
jg,pt
in
cmc
adc
inc
pop
sti
loope
adc
mov
test
sbb
jp
mov
xchg
cmp
filds
sub
fwait
lahf
mov
test
cmp
lcall
and
in
imul
daa
lods
mov
out
jnp
in
cwtl
cmp
xor
outsb
or
sbb
push
inc
fbld
cltd
incl
in
lods
and
mov
and
dec
or
aad
std
fisubrs
inc
sahf
outsl
pushf
push
hlt
push
cwtl
das
sbb
fistpl
pop
loope
sub
es
mov
subb
out
ret
mov
stc
leave
add
or
push
add
sti
sub
xlat
mov
je
enter
jns
inc
xor
adc
out
les
scas
stc
or
sbb
inc
cltd
mov
push
gs
dec
jg
in
scas
add
pop
sbb
ja
mov
stos
pop
sub
xchg
lods
fwait
rcrb
mov
fsincos
les
subl
dec
mov
inc
aas
xor
inc
cmp
mov
fwait
cs
ss
mov
or
out
orl
sub
adc
idivb
or
std
rclb
int
stos
xchg
fwait
jp
stos
and
and
in
xchg
fsts
std
jl
inc
mov
push
xorb
and
push
inc
scas
pop
jmp
mov
stos
mov
cs
xchg
ret
addr16
adc
dec
inc
mov
clc
rcrb
fadds
insb
xor
dec
jg
adc
enter
inc
and
adc
mov
adc
ret
pusha
bound
pop
out
push
adc
mov
out
and
dec
adc
pop
mov
les
jmp
cmp
jge
insb
decb
cmp
test
dec
mov
sub
out
add
pop
loope
cld
push
xor
aaa
lds
adc
sbb
xchg
mov
js
imul
sub
inc
les
jl
sahf
cmp
jg
ret
loopne
std
pop
and
push
xchg
cld
test
aaa
sbb
jnp
sub
xor
aaa
mov
mov
ret
mov
imul
dec
dec
pop
dec
jmp
jle
push
push
scas
dec
sub
adc
movsb
rcrb
aas
pop
in
cmp
cmc
ds
jle
jo
xchg
aam
push
mov
jne
xor
adc
xlat
push
test
push
popa
cmpsl
test
mov
aam
sub
sbb
xchg
ja
das
popf
pop
sub
test
lcall
push
or
ds
xchg
and
fsubrp
enter
mov
fldt
addr16
lea
mov
leave
loopne
inc
stos
sub
mov
scas
test
dec
xor
shll
cmp
jno
rcll
rcr
cltd
and
inc
jge
mov
mov
inc
or
popf
sbb
js
ljmp
insb
jmp
fdivs
dec
shll
push
mov
xchg
dec
dec
repnz
loop
popa
sub
jns
push
mov
mov
mov
or
movsb
mov
ja
xlat
insb
xlat
hlt
and
add
mov
cmp
sti
sub
outsl
dec
nop
add
lret
jp
es
push
lods
movsb
push
bound
pop
test
adc
unpcklps
adc
jbe
mov
sub
xchg
aaa
xlat
cld
fisttpl
outsb
lock
inc
push
pusha
fisubs
inc
jmp
pop
inc
out
fnstcw
mov
fsubl
ret
mov
push
lods
lcall
out
dec
sub
flds
mov
adc
sub
aas
insb
es
das
js
movsl
xchg
and
mov
mov
cltd
adcb
xchg
cmp
xlat
sub
sub
icebp
push
add
rclb
add
mov
mov
lret
into
xchg
cmp
mov
and
pop
fs
jle
test
pop
out
adc
rcll
daa
fs
push
jle
mov
xor
pop
pop
jne
xchg
daa
mov
push
das
adc
mov
leave
or
into
mov
cltd
or
push
xchg
sti
pop
ret
push
int
jge
in
push
ret
sbb
ds
cmpsb
in
pop
pop
addr16
xchg
xor
outsb
fstpl
add
jnp
ss
xchg
jbe
iret
adc
cltd
mov
cltd
pop
mov
xorb
pusha
jge
inc
aaa
or
loop
push
mov
sub
orl
into
stos
inc
repz
lcall
pop
pop
loopne
pop
je
mov
lea
cmpsb
xchg
imul
dec
and
movsl
pushf
in
aad
test
add
addr16
sbb
mov
rolb
fdivs
cmc
sub
or
jno
push
incl
insb
adc
pushf
xor
in
and
xor
add
jb
adc
push
push
es
or
mov
insb
and
je
loopne
aad
cmp
or
dec
pop
mov
mov
or
push
mov
xchg
int3
push
js
in
call
or
adc
push
inc
fisttps
cmp
insl
es
xorl
lods
dec
stc
add
insb
mov
cmc
lret
int
mov
xchg
sub
addl
jp
xlat
mov
out
das
int3
lret
stc
out
cmp
pop
fs
mov
cmp
ljmp
fsub
ljmp
push
outsb
jp
rorb
push
sarb
xchg
pop
stos
mov
xor
pusha
test
add
mov
mov
insb
data16
insl
mov
mov
ret
cld
imul
push
pop
push
push
loop
inc
xchg
nop
int
mov
cli
je
mov
pop
inc
mov
pop
pop
push
lock
jno
pop
out
mov
test
cmp
pop
iret
js
and
fcoms
leave
adc
dec
fisubl
sub
adc
shlb
pushf
dec
mov
jge
repnz
jle
leave
loope
cmpsb
hlt
jbe
fildll
dec
adc
mov
out
movsl
sahf
pusha
push
sbb
jno
xor
push
sbb
int3
xchg
jmp
pop
xchg
mov
scas
mov
cmp
and
dec
mov
movsl
jnp
add
ret
int3
pop
jp
pop
daa
inc
in
cwtl
push
push
addl
sub
ret
out
sbb
xlat
mov
push
lds
push
adc
mov
aam
and
pop
and
repz
xchg
pop
cld
mov
sbb
sahf
dec
pushf
sbb
mov
mov
pop
loope
inc
gs
lret
or
mov
xchg
mov
movsb
adc
into
jle
mov
or
outsl
push
cmpsb
iret
cmp
jmp
mov
enter
mov
cwtl
sub
int
pushf
aas
mov
popf
add
xor
sbb
pop
into
xlat
pop
and
frstor
pop
cmp
scas
out
mov
fwait
xchg
sti
pop
dec
lods
call
pop
pop
int
in
or
in
xor
loope
jecxz
dec
xchg
out
pop
sub
test
stos
sub
sbb
pop
mov
sbbl
rorl
movsl
dec
sbb
inc
cltd
insb
cmp
adc
adc
mov
lea
push
dec
lea
or
pusha
jmp
xchg
cmpl
cmp
or
mov
jle
cmp
push
jg
pop
test
jo
addr16
daa
sar
gs
xchg
pop
and
xchg
les
sbb
cltd
and
outsb
sbb
addr16
lods
cltd
loope
sbb
aad
popa
clc
mov
mov
out
cld
cmp
icebp
pop
fistps
and
cmc
pop
fimull
or
mov
enter
clc
pop
add
push
dec
xchg
call
aam
mov
dec
insl
lret
inc
aas
jne
dec
xchg
pop
jne
cld
rorb
repnz
push
pop
inc
fisubrs
mov
imul
mov
inc
adc
movsb
sbb
push
inc
mov
mov
ja
pop
cmp
rep
mov
out
lods
jecxz
lret
enter
ret
xchg
or
fwait
mov
lods
fsubr
xlat
mov
in
cmp
nopl
ljmp
sub
enter
xor
xchg
cli
pusha
movsl
jno
mov
rcr
mov
xchg
add
mov
aam
js
cmp
mov
jo
loope
add
rclb
dec
and
push
out
cmc
iret
repz
aaa
andb
jb
dec
ds
sbbl
and
mov
into
xor
mov
and
in
xor
jmp
cmp
insl
lods
sahf
adc
push
in
and
ds
add
mov
xchg
xchg
sub
xor
add
lret
ljmp
inc
cmp
mov
stos
in
repz
pop
fiadds
divl
cmp
imul
int3
add
cltd
clc
add
shrb
std
out
pop
pushf
mov
sub
fstpl
std
clc
xor
jnp
dec
ret
dec
push
daa
hlt
sub
push
outsb
icebp
dec
push
mov
in
xor
aas
dec
dec
sbb
fsubl
mov
in
xlat
stc
xorl
push
xchg
cmpsl
decl
mov
mov
out
aas
out
data16
test
or
fstpl
cwtl
loope
fistpl
mov
dec
xchg
or
sub
mov
jbe
adc
mov
mov
sbb
pop
movsl
and
sahf
les
lret
jo
add
inc
mov
and
stc
mov
pusha
pop
je
enter
test
mov
cmp
mov
iret
xchg
rcrl
mov
test
lret
or
sbb
aam
or
xor
push
jle
push
sub
mov
mov
inc
sub
cmp
cmp
fcoms
pop
push
dec
cmp
xchg
js
clc
shrl
loopne
adc
mov
imul
fwait
in
and
xchg
xchg
lret
aad
aaa
aam
or
mov
pushf
dec
movsl
stc
mov
iret
popf
pop
xchg
scas
mov
int3
out
inc
push
mov
mov
movsb
push
mov
movsl
sub
fsts
int
and
fildll
pop
cmp
pop
enter
mov
cli
jle
or
iret
popa
test
or
xchg
mov
fsubl
add
iret
not
je
arpl
dec
add
imul
add
or
mov
or
add
push
xchg
xchg
inc
fwait
sahf
pop
sbb
add
scas
mov
adc
mov
das
dec
pop
clc
ljmp
maxps
rclb
out
pushf
bound
dec
and
xchg
mov
fdivr
lock
dec
dec
mov
xchg
push
test
notl
and
adc
xchg
mov
adc
das
lods
arpl
push
cwtl
incb
sbb
fwait
in
lcall
jle
cmp
mov
repnz
or
jg
fnstenv
ss
sbb
inc
idivb
mov
push
fnstcw
jae
inc
add
sbb
out
data16
aaa
push
pop
cmp
cmp
pop
in
js
or
into
popf
scas
and
rorl
inc
adc
cmovs
stos
mov
stos
dec
mov
loopne
movsb
and
add
test
sub
adc
std
into
pop
jmp
repnz
lods
sub
pop
test
sub
or
sahf
mov
lret
idiv
int
inc
in
out
aas
loop
pop
add
addr16
inc
fwait
pop
call
cs
out
add
fcomp
dec
push
setge
pop
imul
mov
inc
push
pop
in
jns
lret
push
hlt
test
int
pop
push
add
or
cmpsb
out
xchg
sbb
mov
mov
or
cmp
cmp
inc
inc
push
and
les
hlt
mov
loope
shll
scas
jne
add
sti
flds
fidivs
xor
jns
and
or
push
shrb
in
jmp
addr16
push
mov
inc
bnd
and
dec
js
and
jae
addr16
mov
loopne
sbb
imul
mov
pop
repnz
and
cs
loope
scas
mov
cmp
cmp
ljmp
push
cmp
repnz
adc
lcall
sahf
cld
add
negb
jl
fisttpll
jno
lret
aam
mov
dec
mov
outsl
jno
es
je
xchg
test
cmp
int
pop
jo
xchg
add
lret
test
sti
xor
cs
int3
popa
dec
lea
push
or
inc
clc
test
dec
popa
xchg
out
push
xor
mov
dec
xchg
insl
fistps
nop
mov
jmp
sti
arpl
daa
push
movsb
jno
mov
cli
stos
imul
repnz
mov
repz
pop
loopne
mov
adc
mov
iret
and
add
push
sahf
jno
push
mov
mulb
jecxz
std
push
jo
push
nop
cmpsl
std
pop
cmp
and
cmp
and
push
loopne
pushf
adc
push
xlat
mov
inc
dec
add
rcl
sub
sub
aam
cmpb
xchg
push
dec
and
fs
mov
mov
ficompl
int
fs
scas
outsl
bound
pandn
push
test
sbb
ret
enter
jl
mov
mov
pop
mov
inc
dec
or
mov
and
fsts
cmp
ret
popl
enter
pop
cmpsl
outsl
cmc
fsubrs
fsubl
pop
cli
push
dec
lods
xor
jb
arpl
xchg
xchg
xchg
sub
xchg
leave
pop
in
aad
stos
sahf
mov
ret
mov
loop
repnz
sbb
mov
sub
in
das
lret
push
fisubrs
adc
cld
test
jae
arpl
inc
icebp
test
stc
pop
and
mov
push
push
push
mov
add
fldl2e
dec
and
push
push
mov
test
inc
mov
sbb
out
adc
clc
mov
es
add
or
xchg
and
out
popl
jg
neg
mov
scas
in
xchg
add
push
mov
int
lret
ret
arpl
xor
jnp
xor
sbb
push
mov
xor
int3
adc
pop
mov
jl
add
enter
cmp
sub
push
inc
enter
push
lods
out
xchg
nop
dec
lock
inc
out
cmc
out
or
sub
sub
add
push
pop
push
in
fildl
adc
mov
out
lcall
call
dec
inc
aam
xchg
lea
leave
dec
mov
push
aam
mov
inc
cmp
inc
sub
sti
push
icebp
aas
ret
mov
out
push
out
or
es
pop
xchg
in
decl
jb
dec
mov
sbb
test
xchg
xor
pop
xor
mov
je
add
hlt
idiv
jno
pop
mov
iret
repz
adc
imul
xor
dec
mov
push
add
aad
sub
jnp
adc
inc
lret
fsubr
inc
adc
bound
test
repnz
jb
pmaxub
inc
fisubs
adc
and
les
arpl
je
jbe
xor
add
mov
in
xchg
jmp
sub
ss
lea
jnp
adc
adc
movsb
cwtl
mov
dec
push
jns
and
jnp
jo
aas
mov
insb
insl
push
adc
mov
repnz
test
aad
and
sub
dec
mov
fninit
es
repnz
push
push
cmp
test
xchg
sub
loop
scas
push
lods
inc
push
xor
shlb
ds
jb
lds
sub
or
pusha
push
ret
daa
mov
cs
gs
in
pop
push
jp
mov
jo
bound
clc
inc
fldcw
sbb
mov
rcr
jle
pop
daa
and
inc
int
mov
in
xchg
ret
imul
aad
jno
scas
sbb
out
subl
jge
in
xchg
dec
mov
scas
mov
mov
jecxz
xor
jmp
pop
mov
and
push
daa
test
mov
test
dec
fcmovne
mov
imul
pop
inc
push
sub
popf
xchg
sub
mov
sub
insb
push
or
cmp
in
lock
ljmp
daa
int3
sbb
jo
inc
push
std
mov
pusha
adc
adc
xor
sbb
sub
out
lret
sub
jle
subb
adc
out
jp
sbb
adc
imul
jne
adc
cmp
leave
dec
sti
iret
outsb
bound
lret
mov
sarl
repz
outsl
xor
add
cs
popf
add
cmp
stos
sbb
xchg
add
imul
adc
and
shrb
movsb
aad
cmp
mov
in
arpl
sarl
mov
jne
rcll
push
mov
jp
into
scas
enter
aad
out
addr16
pop
xchg
stos
pop
or
lods
icebp
fs
dec
or
xor
pop
mov
jno
cmp
aam
repz
fisttps
insb
jl
jp
cmc
stc
mov
fsts
inc
xchg
and
xchg
adcl
xchg
jb
jg
cmp
push
pop
mov
imul
lret
inc
adc
sarl
lahf
rcrb
loope
imul
std
call
fidivrl
pushf
xchg
mov
pushf
ret
mov
ret
std
fadd
xchg
dec
and
inc
push
lahf
add
in
out
sbb
sub
fidivrl
andl
mov
shlb
dec
pop
lock
or
sub
inc
mov
inc
std
pavgb
mov
xor
test
inc
lods
mov
call
push
jecxz
jle
jnp
icebp
test
hlt
imul
sub
pop
out
loopne
ljmp
dec
cwtl
adc
xor
sub
out
or
iret
rcrl
mov
subb
adc
sub
movsl
aas
fisubrs
xchg
out
out
dec
in
mov
cmpsl
bound
idivb
pop
dec
imul
cmc
jp
lahf
jg
std
scas
pop
repnz
dec
add
pop
jecxz
ficomps
sti
in
icebp
mov
repz
xor
test
xchg
push
mov
jmp
sahf
addb
add
adc
sbb
jg
popf
mov
insl
pop
inc
lea
shll
into
in
cmp
adc
int3
js
add
sub
rcr
sub
mov
rolb
inc
ficompl
pop
repz
jns
ret
dec
xchg
push
int3
ljmp
xchg
sbb
mov
lods
sarl
inc
and
ds
xlat
pop
mov
inc
shlb
jnp
push
push
out
into
and
xorl
jge
sbb
push
and
shlb
shlb
mov
and
adc
in
mov
out
test
test
test
stos
lds
inc
es
mov
lods
pushf
hlt
popa
jne
inc
dec
fadds
outsl
inc
pop
or
pop
out
adc
jp
insb
lea
ficompl
jns
arpl
xlat
orb
mov
jne
pop
lret
and
sub
fmuls
xchg
leave
popa
xchg
bound
ficoml
lds
sbb
out
test
dec
mov
mov
scas
dec
fadds
clc
mov
jbe
pop
js
mov
sub
out
outsl
fdivs
shrl
push
adc
dec
or
push
mov
cwtl
and
loope
mov
fcoms
hlt
iret
and
shll
in
test
mov
mov
pminsw
stos
push
in
mov
add
jne
popf
adc
mov
inc
mov
cmpsl
mov
dec
scas
xlat
or
pop
sbb
ljmp
imul
pop
aas
cmp
push
pop
cs
dec
push
sub
ret
pop
scas
gs
push
push
mov
cwtl
inc
and
rclb
fs
neg
jecxz
cmpl
mov
adc
cmp
adc
dec
or
mov
add
xchg
test
loop
push
movsb
bound
dec
mov
sub
lods
ret
in
pop
jl
test
mov
inc
pop
inc
jle
fwait
add
push
mov
sub
push
mov
xor
aad
jp
repnz
push
mov
lock
xchg
fisubs
ret
or
stos
xlat
inc
lret
rorb
dec
inc
or
pop
in
jb
out
scas
jle
xor
ljmp
stc
or
iret
pop
imul
push
add
mov
add
adc
or
dec
loop
jae
leave
das
mov
stos
imul
xorl
pop
push
sbb
hlt
and
ljmp
clc
adc
or
pop
and
movsb
aas
dec
fdivr
fstpt
or
loopne
aam
ljmp
rcll
into
aad
pop
es
mov
orl
das
pop
ja
stc
lret
pop
test
clc
sub
sub
lods
daa
push
mov
cld
mov
pop
pop
lods
adc
loope
ja
pop
pop
fwait
nop
or
mov
mov
call
jle
daa
and
jne
mov
xor
ja
pop
hlt
pop
into
jae
xchg
cld
add
icebp
or
mov
rclb
jbe
push
push
scas
imul
xchg
cmp
add
cmp
mov
sarl
push
push
jmp
in
mov
pop
cmp
mov
fisttps
loope
test
mov
lcall
xchg
adc
xlat
mov
xor
or
cmc
sarl
add
movl
stos
jmp
lea
mov
adc
fldt
gs
dec
sub
mov
scas
loopne
xor
jno
test
mov
cmpl
rorb
jo
pop
sbb
int
and
fxch
dec
mov
lret
sti
dec
imul
outsl
adc
repz
push
dec
jno
int3
dec
popf
negb
in
pop
rcr
loope
pop
movsb
lahf
inc
outsb
ljmp
mov
fwait
call
push
neg
adc
pop
add
aaa
jl
pop
mov
sub
insl
xlat
sbb
cli
fiadds
jmp
push
aam
cltd
mov
js
jmp
add
jle
aad
add
and
xchg
fwait
add
mov
out
insl
cmpsb
sub
jmp
imul
fstpl
std
and
pop
push
test
push
jo
pop
fsts
dec
xchg
pusha
inc
push
mov
mov
ror
je
sbb
xor
sub
mov
xchg
jb
repnz
mov
aam
ja
cmp
ss
mov
adc
dec
shrl
and
add
jl
fdivrs
pop
popf
cwtl
dec
out
dec
pop
jns
dec
or
push
jmp
ljmp
mov
push
pusha
outsl
into
jb
dec
out
mov
push
mov
sub
cmpsb
push
fists
fldl
jo
push
je
mov
out
in
or
push
mov
mov
iret
push
push
mov
inc
mov
mov
and
rorl
in
xchg
xchg
pop
mov
mov
test
or
inc
icebp
int3
out
dec
xchg
das
inc
insb
mov
imulb
rcrl
or
fcomps
je
loope
out
mov
ret
adc
push
lret
xchg
push
jge
inc
ja
push
push
cltd
arpl
mov
push
cmp
add
and
popf
lahf
lret
jb
jl
dec
int3
jp
jecxz
out
xor
jle
jmp
cmpsb
xor
dec
gs
inc
sarl
scas
xchg
mov
scas
dec
fstpl
add
xor
cld
xchg
out
xor
xchg
jl
pop
push
cmp
dec
jae
add
iret
enter
leave
push
pusha
mov
sti
popf
stc
ljmp
sbb
xor
daa
mov
scas
out
jl
and
push
or
imul
and
mov
lea
jne
add
sbb
and
xor
cltd
test
jl
jnp
call
into
rclb
jne
or
jbe
pop
cmpsl
xorb
xchg
mov
pop
ja
and
sbbb
mov
mov
pusha
adc
sub
inc
push
sti
aam
add
xor
into
jmp
inc
out
push
negb
sbb
cltd
push
imul
mov
or
icebp
clc
mov
pop
insl
out
sbb
fldl
sub
jge
adc
xchg
xorl
cmpsl
xor
jae
adc
mov
pop
sar
jg
ret
mov
push
sbb
fsubrl
pop
xor
fidivrs
mov
or
jmp
jecxz
xchg
stc
or
loope
leave
mov
fmul
subb
mov
loop
mov
mov
mov
into
loope
push
fistpl
sub
enter
jnp
xor
inc
lcall
jl
ss
push
push
cli
jne
xchg
sti
mov
add
push
outsl
xlat
loop
enter
adc
pop
lods
je
xchg
add
mov
and
xchg
push
jno
mov
sub
pop
jg
fsub
pop
cmp
pop
ret
sub
pushf
add
fmul
sbb
dec
pop
xor
sub
popf
xchg
flds
lret
and
sbb
mov
loopne
jl
dec
imul
popf
jp
and
adc
mov
xchg
shrb
push
cwtl
repz
xor
sbb
mov
sbb
das
sub
cmpsb
jb
jle
imul
mov
and
mov
xchg
js
pop
sbb
add
dec
daa
sbb
and
call
pop
adc
jnp
push
ficompl
pop
call
fstpl
mov
add
pop
outsl
sahf
xchg
popa
push
cmp
aad
mov
add
add
sub
sbb
sbb
std
sbb
adc
outsl
add
rcl
add
jle
xchg
cmp
in
adc
dec
lods
outsb
dec
inc
xor
or
cmp
out
and
les
mov
cmp
mov
cltd
popa
mov
out
push
stos
and
or
rcl
mov
sub
cld
call
jge
lcall
ret
ja
sub
movsl
push
sub
xchg
xor
mov
lret
loope
and
xchg
sub
cmp
xor
jnp
cltd
cmp
cmp
mov
aad
cli
jge
mov
mov
call
cmpb
jle
inc
xchg
loope
ud0
xorl
mov
dec
sbb
sub
jnp
jg
sbb
cmp
cmp
das
mov
enter
xor
dec
cmp
sbb
lock
pop
jnp
out
mov
lret
push
cmp
cmpsb
jae
add
cmp
cmp
jmp
ret
xchg
or
cmp
push
btc
jle
adc
sbb
imul
jmp
test
lock
test
inc
xchg
in
jno
icebp
mov
add
popf
cmc
mov
movsb
cld
ja
out
and
in
mov
loopne
mov
cwtl
je
aas
loopne
das
pushf
adc
ss
lea
sub
mov
push
nop
xor
lahf
mov
fisubs
fucomi
iret
testl
add
test
and
pop
mov
ret
xchg
cwtl
aam
sub
in
inc
cli
sbb
jl
adc
aad
jns
addb
and
jae
insl
fucomip
adc
or
xchg
adc
aad
notl
out
ds
sub
xchg
xchg
nop
inc
jns
adc
and
xor
mov
in
sti
mov
test
add
add
sub
cmp
jecxz
lds
scas
ret
xor
adc
mov
loop
jge
fisttpl
scas
xor
sub
inc
xchg
repnz
xchg
xor
add
rcrb
sub
inc
or
dec
fs
pusha
inc
xor
and
lret
cmp
push
fs
xchg
mov
cmp
jecxz
mov
xorl
push
push
cmp
mov
pop
sbb
pop
mov
xor
jns
out
cmp
and
pop
xchg
popf
dec
shlb
fsubl
inc
sbb
push
outsb
sbb
ja
inc
aad
inc
jl
scas
jecxz
sub
jbe
jae
jecxz
std
outsl
sbb
ds
push
loope
or
xchg
adc
push
stos
scas
cmp
in
xorl
jno
push
dec
lock
lods
sbb
push
xor
jo
dec
mov
aas
add
mov
imul
or
subb
out
out
sub
lret
stc
lcall
aad
sti
arpl
jo
push
ret
mov
mov
jnp
sub
pushl
jmp
mov
mov
sarl
pop
inc
push
or
xchg
and
xor
std
pusha
es
mov
rcr
ret
xchg
xor
sub
push
mov
sub
loope
xchg
je
or
andb
inc
dec
add
test
mov
sbb
fsubrp
pop
jl
rorb
cmc
lahf
xlat
inc
jmp
mov
jl
jmp
cmc
mov
sub
cmp
and
aas
jle
subb
js
or
ja
dec
or
and
rol
pop
sarb
cmp
xchg
test
jge
dec
xchg
push
lea
and
ja,pt
inc
lea
fimull
test
mov
sbb
shll
les
outsl
xlat
cmp
xchg
xchg
out
ds
pushf
or
test
xchg
ss
shlb
lock
aaa
dec
addl
jl
jne
pop
xchg
xchg
ljmp
and
insb
dec
inc
adc
mov
pop
dec
mov
rorb
jl
mov
or
and
dec
add
subb
xchg
out
adc
std
xchg
mov
push
or
xchg
cmp
push
jge
stos
and
lahf
sbb
push
pop
cmpsb
push
push
ds
mov
fs
mov
push
or
cld
and
xor
das
cmp
xor
cwtl
ds
enter
xor
inc
pushf
punpckhwd
inc
mov
aam
push
mov
cmp
mov
push
aam
xor
push
mov
adc
mov
mov
adc
mov
inc
cmp
mov
push
pop
sub
push
jecxz
mov
in
dec
and
inc
repz
test
repnz
test
int3
push
mov
fsubrl
lods
ss
xchg
ret
xor
sub
or
loopne
mov
jp
sub
mov
sub
test
das
mov
cmpsb
xchg
add
or
pop
jecxz
sbb
scas
jnp
push
xchg
cmpl
push
stc
add
mov
xchg
cli
mov
jmp
mov
bound
lahf
in
xchg
arpl
insb
movsl
mov
inc
jo
mov
test
rolb
mov
cmp
adc
test
inc
rcrl
fisubs
outsb
sti
pop
cli
pop
test
inc
mov
pop
cmp
ljmp
flds
add
aad
fwait
loop
movsl
outsl
mov
inc
test
inc
rclb
mov
xor
xchg
mov
and
dec
test
int
mov
mov
stc
add
add
jns
mov
or
les
popa
fcomps
inc
push
ret
xchg
cld
clc
iret
dec
adc
sbbb
shrb
fs
mov
jge
pop
inc
cmp
gs
jns
sub
jp
adc
nop
sbb
test
dec
ret
cmpsb
dec
jae
leave
shll
mov
out
fisubrl
icebp
imul
shlb
mov
testl
jbe
add
sbb
pop
sbb
or
outsb
test
mov
fldcw
sub
mov
mov
push
fbstp
test
pusha
cld
or
jae
pop
xchg
xor
das
in
ficoml
idivb
test
outsb
fistps
loop
add
ret
rclb
mov
cmpsl
test
dec
insl
data16
stos
ss
or
sub
sbb
dec
sahf
js
sti
push
xor
mov
adc
and
add
mov
jg
imul
outsl
inc
xor
lea
loopne
icebp
xchg
cmp
add
and
out
and
sbb
dec
dec
enter
sub
shr
cmp
xchg
sub
in
int
sub
loop
mov
aaa
mov
gs
sbb
mov
clc
xor
nop
out
cmp
or
sbb
in
add
lods
fidivl
cmpsl
mov
call
mov
fisubrs
or
adc
daa
pop
jmp
sbb
ljmp
xor
mov
sbb
or
repz
sub
nop
ss
lret
stc
je
jecxz
or
rcrl
sub
lock
pop
adc
add
in
cmpsb
test
push
cli
add
test
add
mov
mov
cmp
xlat
sahf
and
rcl
fisubrl
scas
xlat
dec
cwtl
xor
roll
xor
jbe
dec
shll
add
das
sbb
loopne
mov
add
sarl
in
adc
and
mov
insb
icebp
xchg
mov
in
addr16
cmpsl
roll
jmp
push
mull
test
adcl
dec
imul
sbb
sbb
js
call
and
loop
scas
aam
jmp
pop
or
fists
adc
cmp
push
lods
dec
add
test
nop
inc
jne
sbbl
out
mov
insb
pop
jmp
fstpt
mov
sbbl
pop
and
test
fnstcw
cs
xchg
fnstenv
or
or
lock
sub
pop
jae
adc
cltd
in
sub
data16
popa
xlat
scas
sbb
cmpsl
add
and
in
outsb
mov
add
sti
sub
push
push
jp
aaa
and
add
dec
daa
movsl
sub
mov
call
ficompl
ljmp
push
sar
mov
inc
and
cwtl
pop
or
xchg
and
sti
mov
mov
ret
add
push
mov
fistpl
xchg
jae
cmc
loop
icebp
adc
and
rsm
pop
and
inc
inc
or
lcall
aas
dec
sbb
test
loope
mov
mov
loopne
lea
xor
inc
test
push
cmp
jp
xchg
sbb
sbb
cmpl
mov
or
outsl
inc
push
xor
int
mov
mov
aam
jne
imul
inc
jg
xchg
push
sub
pop
aaa
and
dec
notb
mov
jns
xchg
mov
enter
shrl
push
filds
xchg
test
or
hlt
xor
ss
fidivs
mov
test
sbb
test
iret
or
dec
xchg
cmpb
pop
ret
int3
and
std
xchg
popf
or
popf
nop
in
or
cmp
insl
jp
sub
jae
inc
stos
cmp
push
loop
dec
push
mov
cli
mov
jecxz
adc
enter
stos
dec
jns
push
icebp
lods
mov
inc
dec
inc
and
test
scas
insb
jmp
outsl
xchg
add
xchg
aaa
sbb
enter
mov
mov
shlb
int3
leave
jp
in
loop
xor
pop
divb
cmp
push
sbb
xchg
lahf
test
pushf
xchg
inc
out
mov
mov
push
cmpsb
cmp
stos
jbe
incl
dec
inc
aas
sbb
xor
imul
popa
cwtl
dec
and
cmc
in
cmp
mov
fwait
shl
int
push
fmuls
dec
test
inc
cmp
inc
cmc
add
flds
or
mov
jle
mov
push
fcmovne
push
push
sbb
cltd
and
lods
push
cmp
dec
test
mov
inc
out
scas
fwait
xor
xchg
hlt
or
outsb
mulb
mov
add
jp
jbe
cmc
testl
cwtl
push
jp
bound
mov
cltd
sub
inc
sub
stos
test
cld
mov
cmpsb
pop
push
xchg
addr16
mov
and
fisubrl
cld
jl
push
jnp
push
pop
cmp
pop
pushf
setae
and
popa
add
mov
fwait
push
mov
das
fadds
mov
mov
mov
pop
dec
dec
xchg
adc
outsb
adc
stos
xchg
jno
sbb
sub
add
iret
jle
push
imul
mov
cmp
loope
push
or
cli
jg
pop
adc
lcall
sahf
add
and
stc
pop
or
fdivrs
xor
mov
aas
push
repnz
loop
in
mov
dec
repz
sbb
xchg
mov
dec
lcall
sbb
inc
mov
add
dec
mov
enter
cmpsb
sub
inc
pop
inc
xchg
inc
daa
mov
stos
adc
hlt
jecxz
push
cli
sbb
js
movsb
cld
sub
mov
cld
pop
cwtl
add
cmp
pop
cld
or
push
pop
aaa
xor
sbb
ret
pusha
mov
lret
mov
push
into
int
in
pop
add
in
not
stos
mov
fldt
push
roll
repz
pop
xchg
sarl
jge
sub
dec
cmp
mov
xor
in
call
and
adc
pushf
sbb
adc
fisttpl
push
jmp
shrb
mov
les
mov
das
andps
xchg
jmp
loop
mov
movsb
test
fistpl
push
fcmove
sbb
push
or
scas
std
jecxz
push
cmp
shl
stos
push
addr16
pop
shll
pop
sar
ret
jo
inc
hlt
pop
adc
sbb
sbb
xor
call
xchg
xchg
sub
out
sbb
mov
dec
xor
mov
inc
add
pushf
lret
mov
cmovae
pop
popa
out
rorl
test
cmp
jae
xor
and
sti
enter
dec
shr
rcrb
sub
push
js
mov
das
pop
imul
mov
imul
js
lock
jno
insl
xor
aas
movsb
imul
aaa
push
or
insl
fildll
or
enter
cmp
xor
ja
ror
insl
lcall
push
hlt
mov
loopne
shll
lret
in
jns
mov
addr16
mov
mov
outsl
or
sbb
pmullw
andb
rclb
push
nop
shl
in
mov
dec
repnz
and
pop
mov
add
and
cs
test
lods
rolb
add
stos
and
loopne
pushw
bound
and
addr16
repnz
sahf
fisttpll
or
popa
test
pop
outsl
cmp
mov
add
ss
jmp
movsb
sub
mov
or
push
out
ror
popa
push
stc
mov
mov
test
or
push
xchg
inc
int
inc
xor
icebp
inc
fnstenv
add
pop
push
inc
pop
pop
push
cli
inc
dec
aad
aad
push
jl
cmp
js
imul
dec
insl
subl
dec
repz
pushf
mov
fst
aad
fadds
xor
movsb
ds
or
jno
sbbl
pop
pushf
stos
sti
out
mov
mov
stc
sbb
push
repnz
push
rorb
ficomps
and
je
mov
call
test
pop
scas
inc
daa
or
lods
pop
cmp
call
in
jbe
add
sbb
rcrb
adc
push
xchg
pop
stc
cmp
dec
jp
sub
sub
sub
lds
stos
xchg
adc
cmp
int
mov
fdivrl
or
adc
imul
add
jno,pt
aaa
in
adc
aaa
pop
mov
data16
xchg
jnp
inc
pop
enter
flds
dec
movsb
dec
jo
mov
jg
sub
push
mov
mov
pop
push
fs
lods
jns
mov
mov
movsl
ljmp
cld
icebp
jl
mov
mov
into
popf
xor
ficoml
mov
add
mov
in
pop
mov
notl
hlt
fisttps
insl
fcompl
push
lret
rcrb
lea
sub
push
and
dec
scas
inc
cld
pop
xchg
shrl
cmc
cmpsl
adc
pop
outsb
cmp
stc
iret
seto
int3
movsb
outsb
add
jecxz
outsb
clc
jecxz
test
scas
xchg
jnp
movl
ljmp
adc
out
out
and
in
and
lods
fcompl
in
cmpsb
adc
ljmp
ja
ljmp
sbb
or
or
xchg
imull
cmpsb
ficoml
cltd
lahf
and
add
xchg
out
jnp
mov
xchg
sbb
imulb
pop
jle
or
xchg
pop
mov
or
mov
arpl
pop
pop
xorl
adcb
scas
mov
mov
mov
out
jae
mov
icebp
daa
xor
fildll
lahf
add
fidivrl
es
je
xor
loopne
push
stos
iret
pop
jae
adc
lock
pop
cld
lcall
int
and
xchg
and
inc
pop
add
sub
mov
cmpsb
movsb
fisubrs
adc
mov
lret
or
aam
out
xor
mov
xor
int
mov
adc
out
mov
rcr
jg
sub
jecxz
ja
aaa
adc
enter
pop
mov
mov
pop
shr
ret
rcrb
das
imull
sub
dec
mov
sbb
insb
mov
push
mov
pop
adc
jg
sahf
jg
outsl
inc
jbe
or
cwtl
aaa
movsl
sarb
popf
daa
push
sarb
stos
jecxz
mov
mov
je
and
or
dec
add
out
sti
mov
popf
je
sti
pop
mov
mov
test
sbb
ficompl
icebp
pop
loope
jno
icebp
out
mov
push
push
adc
notb
std
add
ds
xchg
lret
add
cmp
mov
add
cmp
int3
inc
int
push
jne
inc
and
ret
loope
xchg
orl
mov
jne
sbb
das
pop
lods
shll
push
pop
add
fwait
and
mov
test
xchg
xor
fdivp
out
enter
or
fidivl
cmc
mov
lret
ja
fdivrs
cmp
lods
pop
pop
fst
adc
dec
hlt
ljmp
push
andb
popa
fsubrs
ss
insl
cmp
test
sub
in
and
mov
adcb
negl
inc
inc
inc
aad
mov
mov
bound
imul
shll
mov
and
addr16
cwtl
pop
call
sub
cs
xchg
push
jl
xor
outsb
push
jne
sahf
inc
lret
or
sub
pop
mov
aad
add
out
ficoms
mov
call
mov
dec
fadds
xchg
popf
js
pop
xchg
xchg
ret
fldt
addr16
ss
xchg
pop
pop
sbb
push
push
fidivrs
xchg
jne
cld
cmpsb
inc
add
out
cmp
mov
in
sub
pop
cmp
adc
xchg
stc
je
pop
mov
mov
iret
xchg
insl
cld
movsb
fs
out
pop
imul
scas
push
mov
pminsw
fbstp
xchg
push
pop
icebp
outsb
adc
arpl
mov
sbb
sbb
std
aaa
mov
je
and
cltd
ret
dec
cmp
mov
orb
adc
and
push
mov
in
ret
push
dec
cmp
ds
flds
stc
ja
xlat
stos
sbb
pop
sbb
xchg
pop
fwait
push
xchg
inc
adc
std
mov
leave
fwait
dec
stos
leave
dec
or
pop
popl
hlt
in
sbb
or
dec
orl
stos
sti
stc
sub
cltd
inc
add
mov
outsb
aam
add
lock
loopne
inc
adc
clc
shl
jbe
push
pusha
jbe
or
cld
mov
out
mov
arpl
pop
and
jns
mov
jp
js
stos
jle
mov
xor
adc
and
mov
xchg
xlat
xchg
pop
or
add
and
sbb
imul
loope
sbb
ja
enter
xchg
push
in
scas
jo
lods
sarb
dec
xor
in
or
in
test
sbb
std
jmp
test
and
in
inc
adc
movsb
mov
sub
sarl
or
cld
daa
notb
jmp
pop
mov
popa
fdivr
mov
add
mov
rolb
hlt
ja
testb
mov
dec
mov
dec
es
fwait
orl
adc
sahf
into
cmp
popa
jecxz
ret
movsb
lahf
xchg
int3
addr16
stc
jecxz
mov
or
mov
gs
mov
push
ss
add
sub
loop
xchg
inc
mov
pop
aad
fldenv
push
int
jle
jl
outsb
fsub
mov
iret
sbb
int3
in
sti
xor
and
andl
enter
insb
cmp
adc
sub
mov
cmpsl
add
dec
push
xorl
jne
push
lods
fisttpl
pop
or
repz
ds
lret
lock
cmc
inc
or
xchg
fsubrl
push
inc
xlat
leave
and
xor
jle
push
mov
jo
fwait
dec
imul
jb
jnp
rcll
mov
imul
scas
jbe
and
push
ds
bound
test
push
sub
mov
xor
pop
int
jb
xor
sbb
xchg
jecxz
sbb
es
mov
lret
push
data16
push
jg
jl
pop
pop
dec
shlb
out
idivl
push
add
dec
les
or
cmpb
cs
movsw
push
aam
out
arpl
outsl
loopne
mov
xor
xlat
add
out
xorl
mov
insl
icebp
xbegin
pop
rcr
std
or
gs
xor
adc
mov
push
test
addr16
hlt
and
cmp
rcrb
adc
push
xchg
jg
xacquire
add
test
movsb
fs
dec
mov
lods
jg
add
cmpsb
leave
into
test
sub
mov
faddp
inc
mov
dec
jns
daa
test
xchg
cmp
push
inc
xchg
ds
pop
adc
insb
push
loop
je
ret
out
inc
jae
inc
mov
pop
mov
lods
pop
mov
push
inc
dec
repnz
js
stos
adc
xchg
loope
int3
fcoml
scas
je
orl
aam
dec
ds
pop
sub
shrb
sub
mov
mov
xchg
subb
stc
and
loopne
push
mov
mov
aam
jbe
jb
cli
mov
xchg
ja
call
addr16
and
decl
cli
cli
inc
inc
cmc
mov
pop
clc
or
cmp
and
lea
sbb
das
ret
test
mov
cmc
mov
dec
in
push
mov
add
and
repnz
xchg
dec
cmp
inc
xchg
sbb
sti
aaa
andb
sub
inc
push
iret
jnp
xchg
loopne
jns
dec
pusha
jb
pop
aas
jecxz
add
adc
shlb
cwtl
fmul
fcoml
stos
cmpl
popf
out
pop
imul
out
pop
add
mov
mov
inc
fistpl
xchg
mov
xor
jmp
aas
in
insl
sarb
sub
in
inc
xchg
outsl
loop
mov
std
movsb
lods
mov
xor
popf
mov
ljmp
fsubl
add
pop
frstor
mov
adc
mov
sbb
icebp
mov
decl
aam
fdivrl
fs
push
and
jmp
scas
sbb
dec
movsl
aam
jbe
and
inc
inc
push
lds
imul
fldl
int
rorb
sub
arpl
sbb
in
push
rcll
rolb
dec
outsl
movb
mov
and
lds
scas
call
push
pop
adc
pop
mov
stos
push
xchg
call
call
inc
repnz
cmp
jecxz
fldcw
add
jns
movsb
repz
sahf
sub
lcall
jge
daa
and
mov
scas
or
adc
mov
push
and
adc
mov
sub
scas
xchg
outsl
mov
xor
cmp
sub
adc
enter
pop
dec
and
mov
insb
mov
sbb
in
adc
lcall
mov
sub
dec
mov
enter
fstpl
fs
add
jne
dec
fcompl
inc
mov
mov
push
dec
add
mov
lcall
sbb
das
in
aaa
xchg
xchg
fwait
loope,pt
jmp
push
loopne
addr16
into
cmp
cli
fldenv
rorb
ret
add
mov
sbb
sahf
adc
xchg
mov
lods
lods
xor
loop
jecxz
inc
xchg
xchg
fiaddl
bound
mov
cli
cmpsb
fwait
lahf
shr
pop
movd
mov
lds
aaa
aad
pop
popa
ret
jnp
cld
dec
pop
dec
pop
sbb
dec
outsl
lods
leave
sti
jmp
ds
inc
xchg
cmc
aam
out
push
jg
add
cmp
pop
push
mov
movsl
in
sub
ja
outsl
sub
xchg
dec
pop
daa
addr16
push
adc
les
adc
pop
xor
mov
gs
dec
pop
xchg
push
sub
xor
xchg
mov
or
mov
mov
inc
mov
jb,pn
and
in
je
cmpsl
scas
xchg
sbb
loope
loopne
adc
movsb
out
add
cmpsb
mov
add
mov
mov
pop
ss
inc
daa
add
sub
sub
cmp
mov
sub
sub
enter
out
push
daa
sbb
cs
adc
xchg
lret
push
jl
ja
movsl
sub
testl
cwtl
sub
mov
fsubs
mov
sbb
loopne
call
into
mov
sti
sarb
hlt
push
and
in
xor
jno
mov
fisttpll
sar
sub
sbb
lcall
xchg
fs
inc
lock
frstor
loop
lahf
xchg
in
mov
lds
mov
test
jo
xchg
gs
jmp
icebp
loope
fbld
sbb
push
and
push
scas
lods
mov
outsl
out
negb
ret
pop
cmpsb
pop
lret
push
inc
adc
xor
push
push
pop
and
xchg
imul
in
pop
inc
mov
pop
lcall
test
addr16
inc
mov
pop
clc
cmp
mov
jo
imul
push
outsl
ficoms
mov
jl
jge
dec
inc
das
stos
dec
cmc
and
cmpsb
xorb
mov
inc
mov
dec
dec
mov
and
mov
popl
ds
sbb
rcr
adc
int3
mov
mov
xor
out
cmp
mov
sub
push
mov
and
pop
shr
dec
test
dec
mov
sub
and
mov
push
js
push
mov
xor
xlat
rclb
mov
mov
scas
in
sbb
cmp
loop
sahf
aas
fisttps
das
pop
push
jecxz
movb
mov
sbb
frstor
loopne
and
es
mov
inc
aam
cltd
mov
clc
ja
out
cmc
mov
jmp
and
fwait
inc
dec
inc
jb
into
mov
push
and
and
mov
cmpsl
add
pop
xchg
enter
xchg
pop
aas
addr16
out
push
test
sub
pusha
insl
ljmp
loope
icebp
mov
jle
lods
rcrb
xchg
sarb
cli
addr16
imul
sub
push
dec
leave
xor
pop
adc
xor
lahf
in
xor
inc
nop
lcall
xor
mov
clc
cmpsl
xor
outsl
rcr
hlt
adc
stos
jb
ljmp
rcrl
and
es
inc
icebp
push
into
aaa
nop
mov
xor
cmc
mov
jb,pt
mov
daa
push
pop
and
fcompl
icebp
out
cwtl
jno
ret
or
lods
xchg
sbb
orl
enter
test
mov
adc
xor
in
sbb
std
adc
lret
hlt
out
adc
lea
xor
inc
filds
xchg
cmp
lahf
dec
sbb
add
cmp
addr16
adc
push
mov
gs
cmp
ret
aaa
ds
std
popf
pop
insb
addr16
or
mov
cmp
add
into
and
or
jnp
cmpxchg
bound
inc
sbb
or
cmpsl
adc
push
psubusw
or
pop
aad
and
mov
mov
loope
add
pop
aas
mov
ljmp
mov
pop
and
cmp
adc
inc
clc
mov
fstl
xor
cmc
popa
dec
mov
insl
setp
xchg
push
mov
ja
pop
jp
stc
sahf
sbbb
adc
mov
arpl
xchg
cmpl
adc
sarb
xchg
mov
sub
jecxz
jl
push
popf
sbbb
data16
enter
sbb
dec
push
inc
les
mov
test
dec
cmpl
mov
adc
inc
xor
std
mov
enter
test
mov
popa
rcll
xlat
inc
shlb
push
jno
sub
mov
iret
in
mov
inc
xor
lds
shr
div
ja
int3
mov
pop
mov
daa
jge
or
cmp
jne
imul
and
pushf
inc
std
inc
xchg
and
mov
push
arpl
fs
mov
push
outsl
das
push
jl
lods
inc
cltd
popf
ja
lret
jge
scas
xor
shll
cmp
push
sbb
cmp
xor
xchg
inc
sub
in
push
dec
insl
inc
mov
insb
inc
cmp
mov
xabort
adc
imul
movsb
cmc
adc
xor
leave
cli
dec
ja
xchg
scas
jp
les
cmp
mov
in
cmp
mulb
lret
mov
dec
and
int
pop
inc
add
mov
fcompl
sub
ret
mov
push
push
dec
xchg
and
cmp
cltd
outsb
dec
cmp
xlat
sarl
aam
inc
sub
add
inc
adc
or
push
je
shrl
call
jle
cwtl
sbb
sahf
push
repnz
xchg
fistpll
aad
sub
push
fwait
cwtl
fsubs
pop
cmp
loop
xchg
negl
int3
cwtl
daa
cmp
test
sbb
test
and
push
pop
jno
nop
pop
fbstp
jmp
addb
mov
mov
mov
insb
arpl
jmp
xchg
fmull
mov
mov
pushf
cmp
cmp
xchg
mov
lret
imul
mov
lcall
dec
scas
das
mov
jb
dec
jmp
loop
pop
fsubrs
mov
pop
and
out
bound
mov
jo
push
outsb
cmpsl
lds
aam
xchg
xor
dec
xchg
xchg
mov
sbb
adc
das
push
mov
jge
add
jp
es
xchg
jbe
mov
mov
cwtl
cmpsl
shlb
std
stc
cmpsb
sbb
loopne
scas
inc
sarb
or
sbb
roll
mov
mov
cltd
dec
leave
aaa
enter
iret
cltd
cltd
adc
sbb
adc
aad
sub
data16
stos
mov
mov
ret
movsb
xchg
stos
xchg
lods
cltd
popf
xor
push
shr
push
sbb
pop
xor
xor
lcall
lret
je
stos
adc
cmp
push
sbb
sbb
pop
jnp
lods
faddl
dec
test
lret
ret
test
sbb
and
std
scas
cli
lds
mov
dec
mov
cld
and
sub
cmp
ja
jne
movsb
xor
fiadds
jbe
xchg
adc
jecxz
shll
dec
movsl
test
adc
jae
add
ds
pop
xlat
push
mov
or
mov
jecxz
push
fwait
lcall
sub
sbb
fsts
jmp
pop
call
out
scas
and
push
adcl
aas
dec
in
push
cld
or
xchg
outsl
aam
xlat
sub
sbb
sub
ds
adcb
cmp
lret
out
sti
das
sub
mov
xor
push
xchg
out
xchg
mov
xorl
in
push
mov
dec
sbb
sub
push
movb
stos
xchg
stc
xor
push
mov
push
arpl
pop
sbb
mov
jns
push
push
inc
sti
push
in
or
adc
inc
shll
mov
adc
divl
xor
push
xor
std
insl
ljmp
inc
cmp
push
and
lret
adc
stos
mov
xchg
pop
popa
divl
mov
test
cmp
jno
sub
inc
inc
cmp
nop
stc
mov
add
add
sbb
insb
sub
and
test
jl
in
mov
cld
out
aam
mov
outsl
sahf
sbb
mov
lods
fdivs
mov
sti
and
les
push
lods
bound
stc
jl
cs
pop
adc
repz
xor
mov
sbb
inc
jmp
popf
mov
imulb
mov
jbe
cwtl
test
mov
fsubrl
adc
xchg
orb
out
enter
inc
lea
cltd
in
lret
aaa
inc
mov
jns
cmpsb
xlat
leave
pop
mov
jp
cli
jg
mov
orl
sub
cmp
das
cld
hlt
inc
push
add
clc
dec
xor
loop
mov
sbb
test
adc
jbe
xchg
fcomps
nopl
gs
addl
ret
inc
xchg
aas
push
int
xchg
lcall
clc
aam
fbld
outsb
sti
sub
sbbb
cltd
loop
loop
mov
shrb
shr
ficoms
push
mov
into
xchg
pop
je
fimull
add
mov
xor
jne
pop
iret
stos
cmpsb
pop
adc
mov
add
sahf
int
mov
dec
add
pop
xchg
test
pop
add
inc
mov
stos
pushf
nop
lahf
out
push
adc
rclb
in
filds
lock
xchg
inc
mov
imul
sbbl
mov
fs
pmaxsw
stc
pushf
mov
add
or
pop
ret
sbb
les
pop
xchg
dec
loop
mov
scas
fldenv
sbb
jo
addb
mov
and
push
lcall
cmp
mov
sub
lret
lret
js
frstor
mov
shll
lock
mov
adc
xchg
mov
out
ljmp
shl
jmp
mov
xchg
and
mov
loop
enter
mov
inc
ret
or
push
mov
pop
cmp
push
rclb
loop
mov
test
add
jbe
dec
push
lahf
loop
sub
xor
movsb
lods
push
mov
sub
ss
shrb
xchg
xchg
pop
adc
inc
mov
xchg
sbb
loop
and
jno
mov
shlb
jp
xchg
dec
sbb
das
pop
lcall
insl
fisttpll
mov
inc
adc
dec
les
cmp
and
adc
mov
or
pop
mov
mov
stos
shll
movsb
push
sub
lods
inc
xchg
nop
push
mov
rorl
fisubrl
cmpsb
xor
adc
loopne
hlt
jecxz
and
pop
mov
jno
loop
jno
je
es
repnz
mov
arpl
scas
daa
cmpsl
inc
mov
pop
sub
jmp
test
jmp
cld
jp
out
xor
into
leave
fcmovne
and
pop
insb
arpl
inc
sarb
and
gs
roll
mov
stos
sbb
cmp
or
fnstcw
jno
pop
shll
cltd
out
push
jne
mov
out
cltd
sahf
xchg
add
cmp
sbb
daa
mov
dec
pop
push
fdivs
lcall
push
leave
roll
or
pop
xor
andl
pop
inc
push
push
lea
test
xchg
roll
int3
repz
inc
mov
sub
mov
sbb
jno
push
iret
jmp
cltd
mov
push
sub
dec
sub
push
test
ljmp
push
jmp
mov
mov
fcom
sbb
aaa
push
hlt
outsl
nop
cmpsl
cli
nop
outsb
addl
push
into
addb
lcall
and
inc
xchg
xchg
mov
out
sbb
icebp
mov
outsb
xchg
movsb
lock
arpl
jbe
movsl
sbb
pop
pusha
sbb
mov
mov
setae
pop
mov
pop
mov
xor
sub
pop
pop
jb
jno
in
out
or
xchg
cmpsb
push
pop
jg
dec
hlt
pop
sub
sti
xor
rorb
push
negb
xchg
orl
jmp
mov
fbstp
inc
clc
cltd
or
fidivrl
mov
xor
sbb
xor
or
int
push
jle
aas
dec
incl
push
fs
inc
insl
mov
adc
sub
ret
jl
pop
cwtl
stc
lahf
aaa
mov
fstps
mov
stos
sbb
mov
push
xchg
mulb
insb
pop
mov
xchg
cwtl
rcll
stos
mov
loop
dec
sub
push
jecxz
add
or
push
bound
cli
dec
shll
jae
fdivl
test
je
cmp
ror
fdivrp
push
dec
mov
in
ljmp
dec
mov
fisubs
mov
mov
aas
mov
jg
cs
xor
aad
lret
popf
rorl
or
jbe
dec
nop
xchg
lock
aas
xchg
mov
ret
sub
rcrl
bound
xor
mov
iret
pop
out
ja
fdivrl
push
clc
mov
xchg
jmp
adc
sar
adc
gs
xchg
shll
popf
push
sbb
mov
in
pop
flds
sbb
inc
shll
cmp
inc
or
in
and
pop
add
xor
inc
addr16
mov
movsb
sti
pop
mov
jb
nop
mov
cmpsb
or
leave
jno
push
xchg
cltd
ljmp
jmp
cmp
or
ret
sub
jle
nop
sub
fs
outsb
insb
cmp
daa
dec
aaa
jne
insb
push
ss
mov
push
mov
add
arpl
pop
outsl
jns
aas
dec
cmp
or
in
xchg
sub
jbe
pop
jp
mov
and
daa
pop
push
shlb
lods
in
dec
sub
cmc
push
add
sub
ret
and
and
test
mov
sbb
mov
ljmp
mov
outsb
cmp
adc
fistps
fdivs
inc
sbb
pop
imul
mov
xor
movl
popa
xor
pushl
jno
sbb
sbb
in
mov
rcll
enter
loop
mov
jns
lret
adc
test
scas
movl
int3
fcompl
cmc
mov
xor
inc
sahf
fmulp
mov
mov
mov
sbb
movsl
push
push
jne
mov
fwait
int
xor
lret
mov
dec
inc
repz
xchg
fnsave
sub
scas
fmulp
daa
movsl
jp
cmp
and
pop
or
mov
jns
rclb
pop
out
sub
jns
add
loop
scas
push
pop
ret
test
rol
jge
push
and
popa
sbb
insb
mov
int3
out
jo
pushl
bound
push
ja
in
xor
das
adc
push
push
push
pop
lock
jle
jno
jp
xchg
push
sub
pop
lcall
or
je
cld
and
out
scas
adc
push
jne
inc
cmc
or
mov
push
jne
cmpsl
lods
fidivrl
outsb
cmp
sub
cmp
mov
jg
push
and
das
fwait
scas
jle
mov
gs
cmp
cmc
mov
add
pushf
or
cmc
loop
cltd
mov
or
jnp,pn
cld
test
jg
pusha
insb
aas
jmp
mov
shr
out
cmpsb
inc
mov
les
jns
or
xor
jb
dec
or
pop
fs
push
out
jne
lds
push
jle
fs
sub
mov
in
pop
push
lock
xor
mov
jns
pushf
xchg
sub
jge,pn
clc
pop
loope
or
dec
adc
fidivrl
add
aad
cltd
aaa
xchg
add
mull
sahf
inc
imul
mov
xchg
cltd
stc
add
jl
pop
scas
mov
scas
cwtl
pushf
fcompl
adc
imul
jns
out
lods
cmpsl
lock
and
add
lret
pop
mov
and
lret
xor
data16
popa
inc
push
inc
call
fwait
push
add
or
hlt
add
push
cmp
dec
pop
test
leave
adc
dec
test
push
push
adc
xchg
push
rolb
xor
pop
or
data16
daa
test
xchg
stos
fwait
cmp
ds
lds
movsb
aaa
lds
or
aas
mov
idivb
pushf
jae
jae
push
xchg
jecxz
das
jge
xchg
adcb
ret
lret
dec
cmc
jbe
mov
call
in
inc
push
or
cmp
cmp
mov
jne
inc
jno
iret
shlb
sub
xchg
hlt
shll
xchg
mov
ficomps
mov
loop
cmpsb
dec
mov
adc
xchg
fnstsw
ret
pop
int3
pop
lret
push
xor
movsb
out
cmp
jge
aad
aas
or
ret
or
mov
push
xchg
pop
cmp
push
mov
out
or
and
and
lods
pop
pop
mov
out
scas
push
add
cld
inc
adc
and
clc
test
arpl
ret
push
imul
outsl
mov
add
dec
add
dec
stos
xchg
lock
cltd
jmp
push
ss
frstor
popf
push
negl
outsb
dec
imul
jmp
fnop
push
insl
mov
push
push
jge
js
xchg
das
jmp
sub
ss
xor
mov
dec
cmp
out
sub
xlat
sti
and
or
dec
sbb
mov
fcom
jle
cltd
mov
loopne
pushl
ror
pop
aad
fsubp
push
pop
fisttpl
cmp
mov
dec
xor
dec
pop
repz
sbbl
xor
insl
sbb
add
aam
insb
shlb
push
aam
daa
push
not
or
or
cmc
dec
sar
shlb
pop
or
lock
push
popf
xor
mov
icebp
cmp
mov
xor
jg
and
adc
dec
mov
push
cmp
xlat
push
fcmovne
cltd
fs
stc
xchg
pusha
lret
mov
shlb
aam
push
or
sbb
fwait
dec
sub
dec
lds
jp
xor
xchg
fidivrs
inc
insb
mov
lods
icebp
jg
inc
loope
pop
cmp
cmp
nop
adc
push
sub
aaa
loopne
pop
xchg
andl
pushf
sub
sbb
pop
pop
arpl
add
add
sahf
sbb
jns
mov
stos
xor
outsl
dec
icebp
lock
and
mov
cwtl
lcall
dec
nop
mov
push
jno
js
loop
push
dec
movsb
and
cmp
or
imul
std
dec
pop
push
xchg
cmp
sti
aad
mov
movsl
lahf
pop
outsl
xor
arpl
pop
inc
sub
xor
sahf
jnp
lods
cs
pop
add
sbb
lret
lods
lret
push
jb
push
dec
iret
or
je
js
pop
mov
out
bound
xchg
xor
bound
insl
ds
add
mov
adc
lods
mov
inc
adc
data16
cmp
pop
jae
or
dec
loopne
mov
clc
andl
aam
cmp
xor
loope
cmp
popa
sub
and
stos
sub
dec
movsb
sbb
rcrl
pushf
sbb
sbb
adc
adc
mov
aad
in
xchg
inc
mov
fcoml
jmp
stos
push
call
dec
lret
imul
test
fcoms
jp
push
push
inc
push
in
into
pop
aad
sti
mov
cmp
int
jmp
xchg
add
outsb
sub
or
cmp
push
xor
jp
jg
sti
icebp
jp
cmp
test
inc
xchg
out
pop
pop
push
aam
fcompl
cmpsb
pusha
pushf
sub
push
lods
cmp
lock
or
in
popa
cmp
mov
and
pushf
cld
jp
add
jo
push
aaa
fcmovne
push
mov
mov
in
and
sarb
and
mov
in
add
xchg
jg
sub
repnz
push
out
cld
xor
sub
scas
lcall
adc
xor
mov
imul
loop
mov
sahf
push
rcl
int3
cmp
adc
sub
int3
outsl
mov
jnp
xor
jnp
mov
mov
mov
xchg
pop
icebp
lahf
shrl
data16
scas
scas
imul
hlt
push
mov
xchg
mov
imul
push
ret
fidivrs
jle
loopne
or
pop
xor
in
repnz
push
mov
dec
add
repz
xchg
xor
pop
jmp
xor
cmpsl
mov
ds
jb
add
out
xchg
ds
sti
push
repz
push
mov
addr16
roll
inc
push
mov
jns
jp
xchg
test
mov
loopne
stos
push
cmpsl
sub
sub
aaa
ds
xor
enter
and
xchg
iret
push
test
and
cmp
pusha
insl
cmpsl
gs
mov
mov
pop
jns
inc
les
adc
push
cmc
and
cwtl
jle
lds
pop
mov
mov
sub
in
daa
mov
addb
bound
xor
and
xchg
xor
mov
insl
pop
psadbw
imul
test
push
stos
fcomps
loop
int3
outsb
jl
imul
push
cmp
fisubrl
adc
push
mov
push
out
test
or
ljmp
nop
and
pusha
leave
dec
data16
ja
movsl
mov
js
cltd
cmp
arpl
sarb
add
dec
add
pop
xor
push
push
mov
pusha
mov
or
jmp
sbb
sbb
dec
lea
xor
push
push
mov
sbb
jbe
jnp
dec
cmpsb
pop
lods
sbb
mov
lds
decl
add
add
aas
or
shll
mov
into
andl
cltd
sahf
jb
mov
xchg
lahf
outsb
adc
lods
jne
and
int3
scas
adc
xchg
aad
test
pop
mov
scas
imul
and
pop
fbstp
inc
push
sub
out
and
and
dec
jne
clc
inc
dec
lahf
xor
out
mov
mov
cmp
add
mov
cmpsl
push
and
fdivs
lcall
pop
add
or
cmpsl
cmp
inc
rcrl
insb
xchg
orb
cmp
js
scas
sub
imul
out
mov
push
ret
aam
push
adc
lret
cmp
xchg
sbb
ljmp
cmp
ljmp
test
and
push
lods
mov
test
fldl
gs
cltd
cmp
pop
bound
xchg
rorb
inc
mov
pop
stc
dec
jno
mov
cmp
jge
inc
pop
aam
aaa
nop
inc
mov
popa
mov
mov
dec
shlb
mov
imull
les
cltd
dec
xchg
cmc
sub
sub
pop
inc
orl
jbe
bound
pop
push
dec
xchg
xchg
cmp
dec
imul
dec
push
adc
cld
lods
std
push
mov
add
jo
mov
pop
add
xor
push
cld
sub
stos
gs
pop
dec
mov
jne
jle
mov
push
das
xchg
jne
push
leave
add
sti
imul
xchg
mov
push
xchg
sbb
inc
ljmp
addr16
stos
inc
and
outsl
je
cs
lods
xchg
rcrb
or
and
je
pop
mov
sub
call
cmpsb
call
sub
inc
adc
pop
inc
sub
aad
pop
push
inc
cmp
rcl
cs
add
gs
stos
push
popf
jge
arpl
nop
add
cltd
mov
mov
popa
call
adcb
sub
iret
pop
push
into
insl
rcrb
pop
ja
xchg
cli
sub
lods
cmc
lret
push
and
xchg
cmpsb
js
sbbb
jl
js
in
ljmp
pop
sbb
stc
aas
stos
jmp
mov
cli
les
sub
sub
incl
jp
in
add
mov
mov
loop
mov
test
imul
scas
push
repz
adc
mov
in
cmp
aas
push
jns
jnp
shl
imul
rcll
ret
inc
scas
mov
adc
pop
jne
in
cmp
cmpsl
adc
push
push
xchg
lods
push
jnp
loopne
les
fucomip
frstor
cmpsl
xchg
stc
leave
pushf
jp
imul
inc
je
inc
cld
popf
in
mov
xchg
ds
mov
add
jae
pop
in
pop
jb
sbb
inc
fwait
popa
sbbl
xchg
test
dec
jnp
add
push
out
fistl
pushf
sbb
test
xor
push
scas
sub
cmp
icebp
push
leave
pop
jae
out
mov
sub
mov
aaa
pop
inc
xchg
movsb
in
dec
sub
sub
insl
xchg
xor
out
pop
or
test
xor
adc
or
stos
pusha
cli
outsb
dec
repnz
bound
and
ss
cmp
or
iret
pop
insl
mov
outsb
sbb
jp
scas
repz
scas
insl
lcall
dec
mov
mov
cwtl
scas
or
aam
fstps
ja
pop
stc
pop
mov
pop
pop
add
and
push
test
push
sarl
or
xchg
test
push
fwait
jae
add
cmp
ret
jo
test
lds
loop
mov
insb
pop
sub
xchg
rcrb
adc
popa
insl
imul
pushf
sbb
out
adcl
inc
add
ds
inc
mov
cmpsb
hlt
pop
neg
insb
dec
lret
mov
fstpt
jle
mov
and
xchg
or
inc
popf
cld
jbe
out
dec
test
add
or
pop
sub
mov
fsubl
mov
divl
fisubrl
push
dec
out
inc
mov
mov
add
shrb
testb
negl
fcomps
popf
cmp
add
push
inc
and
mov
test
in
fildll
cmp
inc
pushf
sub
cld
dec
and
dec
bound
inc
int
mov
pop
pop
in
stos
aad
jns
in
in
add
push
das
pcmpgtd
xchg
mov
bound
push
sub
dec
inc
leave
repnz
mov
sub
xchg
stc
sub
xchg
sbb
lahf
mov
adc
dec
jne
ja
ss
pop
sub
mov
out
pop
mov
or
fdivp
sub
aad
xchg
dec
iret
xor
rclb
test
aam
lea
mov
lock
adc
xor
mov
cmp
push
mov
mov
das
out
iret
add
mov
clc
mov
ja
mov
lea
mov
mov
and
cmpsb
imul
aaa
adc
faddl
not
insb
jb
in
mov
lds
rcl
sbb
stc
jmp
test
lcall
test
stos
popa
inc
jmp
xchg
adc
dec
cmpsl
xchg
test
shll
lcall
mov
mov
or
mov
rcrl
flds
jmp
mov
js
cmpsb
xor
and
sub
imul
push
xor
mov
shrl
cmp
xchg
ss
rorl
imull
mov
popf
jl
lahf
xor
or
and
cmp
fstl
fwait
cmpsb
and
rorl
icebp
rclb
ficoml
sti
inc
rclb
jbe
pop
shrl
scas
subb
dec
pop
and
ds
js
push
push
insb
movsl
rorl
popf
xor
imul
out
leave
rcr
xchg
out
loop,pt
lahf
addr16
or
inc
jp
push
lds
rorb
jecxz
add
and
nop
dec
pop
xchg
sbb
mov
or
mov
test
jno
xchg
sub
ljmp
enter
push
sbb
and
or
push
sti
stc
cltd
sub
adc
aaa
imul
and
rcl
ja
lcall
movb
mov
mov
aas
jecxz
sub
jg
ljmp
pop
loop
int3
test
js
loop
add
push
bound
icebp
or
mov
xor
dec
sbb
insl
xchg
mov
xor
in
fcomi
sub
push
pop
mov
mov
addr16
ret
pusha
fimull
mov
es
adc
push
aaa
xchg
inc
mov
dec
xchg
shrb
sarl
inc
inc
movsb
mov
pop
inc
adc
dec
imul
xor
dec
mov
movsl
mov
inc
and
or
mov
add
cmpsl
fstpt
dec
xchg
mov
mov
inc
and
scas
mov
push
or
xchg
sbb
sbb
bound
pop
in
sarl
mov
dec
loopne
push
xchg
mov
cmpsl
mov
mov
sbb
inc
push
or
lret
mov
dec
lret
add
inc
lahf
cltd
push
cmpl
mov
sbbb
test
stos
stc
jmp
fbld
adc
das
sbb
clc
daa
popf
out
sub
pop
push
xlat
xor
cld
andb
and
icebp
inc
aas
inc
sbb
loope
mov
jecxz
ljmp
insl
push
xchg
pop
pop
loopne
and
sub
push
into
and
xorb
mov
inc
out
push
cmp
inc
push
xchg
cmc
loop
iret
fldl
or
and
adc
or
lret
cs
push
mov
lret
pop
mov
arpl
aas
or
mov
mov
int3
cmp
pusha
mov
push
sbb
mov
xor
mov
rcrb
mov
adc
mov
insb
test
xor
pushf
loop
sahf
xchg
ds
xor
adc
leave
mov
xor
arpl
scas
mov
movsl
in
push
fnstsw
int3
popa
or
adc
pop
imul
sbb
jno
cmp
cs
lods
and
jno
sahf
mov
pop
popf
xchg
dec
and
mov
fisubs
and
jnp
mov
mov
ds
jecxz
in
fwait
xor
xor
insb
push
xchg
jmp
sbb
mov
es
mov
bnd
dec
sub
cmp
mov
dec
sbb
ret
shll
into
rcrl
xlat
and
xor
mov
cmp
cmc
sub
add
jno
cmp
loope
loope
data16
cmp
add
jmp
aas
mov
xor
mull
mov
sub
mov
push
lcall
incb
stos
jp
sti
pusha
dec
shrl
push
gs
xchg
inc
imul
cmp
cli
mov
jns
sbb
cmp
mov
dec
sub
enter
popa
adc
dec
aas
or
movsl
loop
push
iret
xchg
xor
sub
out
ljmp
insb
lea
cli
sar
fs
in
cwtl
int3
inc
or
inc
mov
xor
repnz
dec
sahf
rorb
adc
jbe
movq
mov
sbb
push
push
xchg
xchg
lea
inc
sti
test
add
into
and
or
pop
imulb
cmp
xchg
jle
test
rorl
cs
cs
push
scas
jl
stos
sbb
adc
push
mov
cmpsl
dec
mov
popl
mov
andb
lret
jnp
lods
mov
insl
dec
loope
mov
mov
jmp
inc
adc
fcomps
cmp
rorb
in
sub
hlt
or
xchg
jle
into
test
push
rcr
jbe
imul
cld
int
and
dec
xchg
xor
dec
dec
and
mov
out
adc
movsl
adc
cmp
jle
popf
push
fadd
ficoml
jg
or
mov
push
das
movsl
jg
mov
in
push
jae
jno
add
mov
xchg
aaa
out
xchg
mov
add
jno
or
aad
jmp
xchg
es
jns
jmp
cmp
movsb
sbb
aas
mov
xchg
gs
clc
adc
in
sub
mov
nop
movsl
mov
xchg
jno
sbb
mov
jle
push
push
pop
push
call
adc
inc
fidivrs
push
daa
das
and
jmp
sahf
pop
out
out
icebp
ret
jo
enter
int
ss
adc
mov
testl
outsb
and
in
mov
jno
xchg
push
xorb
lods
pop
push
movsb
sub
divb
cmp
pop
out
xchg
pusha
flds
dec
rorl
fdivs
cmc
inc
jg
inc
pop
das
inc
movsl
xor
pop
mov
aas
cmpsb
aam
sub
hlt
and
idivl
btc
xlat
rolb
scas
push
in
mov
icebp
or
inc
mov
insb
addr16
stos
lea
push
outsl
xor
add
mov
and
xor
mov
pop
roll
push
leave
sbb
mov
mull
sbb
test
cltd
in
in
sti
std
ret
mov
aas
mov
sahf
inc
arpl
int3
mov
or
les
icebp
sti
stc
icebp
out
paddusw
insl
cmc
cmp
adc
int3
cmp
mov
add
pop
loop
sbb
mov
mov
mov
push
inc
inc
test
js
push
sub
lock
pop
push
mov
sbb
push
jp
int
add
sub
jne
into
jns
ss
imul
repz
xor
add
popf
cmp
les
pop
enter
fistpl
test
sbb
adc
xor
sbb
pop
mov
insb
imul
dec
ds
into
adc
cmpsl
outsl
mov
outsl
inc
rcr
daa
xor
xlat
addr16
push
push
cmp
sub
divb
mov
mov
mov
mov
xchg
mov
sub
shlb
cmp
enter
scas
xor
dec
xchg
xor
cli
adc
pop
sub
lea
sub
std
xchg
pop
jns
dec
sub
jp
pushf
ja
fcomps
mov
xor
mov
pop
add
sti
call
lds
push
push
ficoml
out
adc
es
fs
lods
pop
mov
and
cmpsl
clc
test
mov
negb
pop
cs
imul
loopne
sarb
adc
sbb
xchg
mov
xchg
sub
jbe
dec
mov
pop
aam
xchg
push
in
cmpb
sahf
hlt
add
sbb
xorl
adc
jge
sub
out
dec
data16
popf
scas
mov
sbb
sbb
mov
mov
xchg
mov
popl
xor
dec
mov
sub
and
shlb
je
xchg
daa
mov
dec
inc
into
xchg
js
ret
and
and
fldl
mov
mov
add
lret
je
ret
xchg
jmp
fisttpl
inc
push
clc
jae
fstl
and
repnz
in
ret
jae
xor
jge
push
lahf
xor
xchg
hlt
xlat
stc
testb
cld
int
cmp
inc
test
push
and
dec
repnz
mov
mov
movsb
stos
pop
adc
insl
lods
icebp
cltd
push
repnz
sbb
scas
xchg
adc
or
rcll
jge
jecxz
mov
sub
gs
or
inc
scas
inc
mov
js
sbb
lods
xchg
js
dec
xor
pop
xchg
jp
xor
xchg
shrb
addr16
out
jmp
rolb
lcall
pop
push
cli
fists
test
mov
notw
or
cmp
insl
inc
or
sti
xor
sbb
inc
lret
push
inc
out
inc
or
hlt
mov
mov
inc
popa
rclb
and
pop
adc
enter
iret
js
xchg
pop
sahf
fs
jae
ss
repnz
lods
adc
push
push
mov
cmc
jae
sub
pop
xlat
je
mov
jp
jnp
mov
out
aad
fdivl
and
sub
rorb
dec
mov
push
mov
mov
cltd
jo
jno
pcmpgtb
xchg
negl
data16
lods
sbb
push
mov
mov
dec
add
cmpsl
add
lret
and
clc
push
outsb
aas
dec
leave
call
sbb
mov
gs
int3
jns
xor
mov
mov
mov
push
inc
loop
cmp
test
test
mov
and
movsb
add
pop
mov
push
negb
or
xorb
push
jb
test
and
cmpsl
cltd
lahf
pop
stc
lahf
mov
or
shll
pusha
jmp
add
or
and
ljmp
inc
rcr
mov
or
mov
sub
call
mov
in
pop
jecxz
aas
ss
add
mov
xchg
std
imul
mov
fisttpl
sbb
loopne
xor
insl
push
sub
pop
xchg
adc
insl
fisubl
dec
insl
xchg
mov
bound
data16
mov
xchg
mov
inc
js
mov
xchg
xor
cs
mov
mov
lret
stos
das
pop
sbb
out
pop
lods
lahf
cmpb
pop
das
mov
jnp
sbb
pop
inc
imul
cld
adc
call
jmp
lock
mov
fdivl
add
sbb
movsl
in
dec
mov
pop
push
adc
in
in
xchg
jae
nop
test
stc
ss
dec
pusha
jmp
cmp
pop
sub
pop
fwait
or
jb
sub
aaa
add
repnz
push
add
and
push
mov
into
jnp
inc
push
lea
daa
mov
jbe
pop
jns
mov
mov
std
into
push
pushf
jmp
sub
shl
aad
lds
sahf
mov
lret
add
dec
mov
inc
inc
xchg
in
inc
adc
lods
or
fs
push
pop
stos
ret
das
mov
lock
mov
jae
mov
filds
mov
or
stos
mov
fcmove
jns
je
dec
repnz
sbb
sbb
outsb
push
mov
imul
pop
mov
je
out
push
test
repz
xchg
xchg
adc
cmp
mov
sbb
sub
xchg
popf
xor
xchg
sbbb
cmpsl
scas
imul
or
or
pop
and
filds
lods
lret
adc
pop
outsb
sub
fs
pop
or
and
pminsw
xchg
sbb
fidivrl
lods
xchg
subb
xchg
addb
sarl
cld
jbe
data16
xchg
movsb
push
mov
pop
sub
frstor
std
adc
push
out
stos
in
jg
push
jp
insl
pop
or
push
mov
jae
popa
inc
push
sahf
insl
cmpsl
adc
and
dec
bnd
mov
sub
push
adc
sbb
fcmovnu
push
in
je
loope
insl
push
aas
mov
shrl
test
data16
aad
or
icebp
ja
sub
pop
imul
jne
ja
rcll
or
add
fmul
adc
push
or
jge
orb
outsl
mov
shrb
inc
js
lock
dec
mov
das
or
sub
das
movsb
icebp
imul
out
dec
idivb
loopne
fidivl
sti
inc
dec
ja
leave
inc
jmp
icebp
inc
enter
fidivrs
xor
cmp
xchg
xchg
setl
add
arpl
push
jle
fwait
shrb
in
fldenv
stos
popf
mov
movsl
stos
bound
inc
int3
mov
lea
inc
pop
sub
inc
enter
aad
lods
jg
out
outsl
notl
sbb
incb
sub
aam
jg
inc
push
test
jno
or
jne
xchg
push
cld
mov
xchg
inc
mov
mov
xchg
dec
adc
xchg
arpl
mov
adc
ds
ret
push
aam
fisubs
test
stos
add
push
repz
xchg
lret
lahf
leave
lods
adc
jno
lcall
pop
fstpl
lds
outsl
or
mov
adc
pop
pop
adc
dec
sbb
push
mov
push
cmp
jg
inc
sub
out
inc
sub
or
loop
adc
jecxz
pop
push
pop
fnsetpm(287
jmp
icebp
pop
mov
negb
lods
movsb
test
pop
rcrb
jb
arpl
mov
dec
movl
out
xlat
adc
das
sub
data16
or
jae
sbb
jo
mov
mov
cld
cld
sbb
add
pop
inc
lret
mov
lret
xchg
jecxz
inc
iret
push
stos
les
addr16
or
pushf
mulb
clc
xchg
push
xchg
pop
push
push
jne
insb
mov
push
cmpsl
push
push
xchg
imul
dec
lahf
mov
add
or
push
dec
fcompl
sub
iret
push
sarb
repz
in
pusha
ja
pop
inc
mov
push
movsl
dec
dec
and
sbb
xchg
mov
rorb
push
cmc
lret
cmpsl
xchg
test
clc
jmp
mov
mov
jp
je
cmpl
push
idivl
int3
mov
gs
test
outsl
testl
adc
test
push
negb
inc
test
pop
push
xchg
test
push
hlt
mov
and
sbb
testl
mov
cmp
frstor
sub
pop
aam
je
mov
fucom
xchg
test
mov
xor
push
pop
popf
push
pmulhuw
cmpl
push
jno
inc
add
inc
dec
shlb
gs
xchg
scas
ds
mov
sub
stos
xor
inc
jns
push
fucomi
ret
fmuls
xchg
pop
mov
mov
mov
stos
aad
pop
lcall
push
cmp
int
popa
outsl
sub
or
pop
jbe
or
les
lahf
scas
mov
add
testb
lret
and
je
js
pop
mov
xchg
jne
inc
loope
in
pop
mov
xor
push
dec
mov
daa
je
inc
push
loopne
cmp
popf
dec
daa
adc
mov
mov
mov
nop
shrb
cmp
std
cs
mov
xchg
imul
pop
xchg
lea
xchg
daa
and
ret
inc
bound
xor
push
dec
je
mov
cmp
sbb
aam
enter
jae
test
mov
jno
dec
stos
subl
push
lods
dec
repnz
xchg
leave
lock
lahf
int
movsl
insb
cmc
mov
add
cltd
cmp
dec
clc
lahf
lret
jmp
test
ljmp
into
les
jl
mov
mov
mov
int
mov
in
rolb
das
and
add
push
scas
mov
push
jmp
mov
je
subb
cmpsb
lods
lods
jno
mov
adc
adc
and
js
pusha
cmp
dec
int
fimuls
decb
lcall
fnstenv
fisubrl
scas
pop
imul
scas
nop
pop
cmp
out
mov
xchg
pop
xchg
out
pop
sub
pop
insb
ret
cmc
xor
inc
aaa
xor
sub
test
add
arpl
gs
pop
xchg
jmp
ret
je
mov
add
sbb
call
mov
cs
lret
dec
std
jnp
in
jmp
pop
cli
push
pushf
inc
add
pop
jmp
xchg
and
pusha
push
sub
out
daa
sbb
arpl
sbb
xor
push
mov
sahf
ja
cwtl
stos
xor
cmp
jg
jnp
pop
incb
push
push
shlb
adc
push
loopne
insb
xor
fmull
xchg
cmp
outsb
push
rcrb
lahf
mov
and
test
add
aam
hlt
les
popf
and
mov
movsl
dec
jno
ljmp
jge
pop
sbb
push
nop
loop
loop
cld
popf
adc
call
ja
push
shrb
adc
loope
fimuls
in
ret
aad
shlb
mov
or
or
shrl
insb
inc
cwtl
js
inc
cmpsl
cmp
fdiv
and
nop
fdivr
sub
fld
sbb
rcr
es
aad
dec
loopne
adc
xchg
mov
and
push
arpl
lods
xchg
fcompl
dec
adc
rcpss
pop
ss
std
outsl
ds
call
sub
pop
into
xchg
out
stc
popl
mov
std
or
pop
iret
jo
popf
mov
mov
and
push
inc
and
sti
push
adc
add
sub
leave
mov
aam
out
fidivrs
adc
inc
sahf
cmp
aaa
nop
xor
add
repnz
xchg
cmpsl
data16
ret
je
fists
jbe,pn
cli
insl
xchg
lcall
mov
mov
je
stos
fs
in
mov
lods
mov
inc
ret
dec
ss
test
rolb
mov
ret
ret
bnd
nop
mov
std
pop
nop
dec
mov
pop
test
clc
in
sti
dec
pusha
in
mov
lea
inc
sbb
ja
jge
xchg
rcll
aaa
sti
inc
cltd
sbb
inc
and
leave
pop
sub
push
into
add
jmp
lea
sub
in
test
mov
or
jmp
cmpsb
mov
fs
mov
adc
push
bound
mov
mov
cmp
xchg
sub
jg
scas
aaa
je
lret
icebp
push
sahf
xchg
addr16
mov
rcr
cld
ret
jne
das
or
notb
mov
lret
loope
call
push
mov
das
mov
and
fiaddl
xchg
xlat
sbb
mov
mov
dec
xor
pop
js
xchg
movsb
fcomi
iret
xchg
aad
jns
fcoms
mov
mov
popa
jmp
mov
int3
cmp
mov
sub
inc
cld
sbb
xchg
mov
add
in
iret
xchg
ds
lret
fcomps
push
aas
loop
bound
sti
dec
push
or
enter
lcall
out
not
syscall
inc
and
jo
addb
scas
popa
mov
add
das
pop
jns
in
pusha
sbb
out
add
lds
mov
xchg
mov
mov
push
testl
lcall
pop
mov
add
push
xchg
mov
rolb
mov
jle
repnz
jge
sar
roll
mov
add
cmp
push
or
mov
js
lods
pop
jne
movl
aas
jp
enter
jns
aas
xchg
push
xor
sub
adc
das
cmp
pop
inc
push
aas
mov
xchg
fcomip
ret
nop
mulb
inc
xor
xchg
mov
mov
sti
cmp
jnp
fisubrs
arpl
out
mov
sbb
into
in
sub
push
sarl
sbb
repnz
ja
rcrl
or
jg
mov
pop
insb
push
push
mov
scas
xchg
pop
pusha
ror
outsb
mov
mov
jae
lods
bound
lcall
sbb
negb
dec
arpl
xchg
jae
fcoms
mov
emms
pop
mov
jecxz
sbb
sbb
pop
stc
je
les
mov
dec
xchg
mov
pop
pop
jno
push
aam
in
mov
cwtl
push
cmpsb
push
loopne
nop
lret
adc
pop
xor
movsb
add
sub
call
adc
jg
jb
in
ficoml
pop
in
stos
out
and
jmp
iret
xchg
stos
mov
mov
test
jl
fisubrl
and
popf
add
aaa
shll
mov
cmpsb
addr16
jecxz
xchg
xchg
aaa
notl
es
scas
add
mov
jg
lods
mov
adc
cmp
nop
lods
mov
lods
xchg
loop
in
inc
cwtl
mov
adc
mov
mov
sbb
fwait
inc
cmpsb
cltd
je
xchg
inc
cwtl
mov
push
mov
scas
mov
or
js
popf
pusha
popa
lock
repnz
jnp
arpl
jl
mov
aad
cld
nop
xor
addr16
fdivs
cli
mov
into
mov
mov
mov
clc
xchg
mov
cmp
inc
loopne,pn
ficomps
rcrl
sbb
push
hlt
rclb
mov
or
add
cmc
push
add
mov
dec
pop
mov
cwtl
jge
add
dec
loope
std
inc
cltd
mov
jge
xchg
push
xor
sbb
ret
jp
push
jle
in
inc
and
xchg
xchg
dec
pop
test
stos
cmp
sbb
lea
mov
outsb
enter
rcl
outsl
cltd
sub
mov
jg
jne
aas
inc
mov
cmp
ret
cmp
inc
mov
push
xlat
push
sti
out
fidivs
inc
mov
push
lahf
mov
mov
enter
cmpsl
mov
or
es
insb
jno
inc
xor
movsb
jl
fdiv
movsb
mov
mov
sar
sub
cmp
inc
xchg
inc
pop
in
lret
cmp
or
push
std
xchg
push
int3
pop
lcall
adc
repnz
cmp
xchg
repnz
xchg
mov
xor
addr16
out
jno
sbb
out
aaa
xchg
mov
sbb
repnz
out
imul
xchg
and
or
aaa
stos
les
pop
mov
mov
mov
jno
stos
push
jp
jp
shr
push
xchg
hlt
in
xchg
pop
int
enter
sub
imul
mov
fisubl
sbb
xor
pop
negl
push
jns
mov
mov
sbb
lds
scas
addr16
jp
xor
mov
cltd
jns
mov
jbe
inc
call
cmp
cltd
out
jae
sbb
add
icebp
jns
dec
push
pop
jns
mov
sbb
push
sub
sbb
fdivrs
push
inc
sbb
mov
lods
das
imul
loopne
daa
insb
aas
adc
sub
jae
inc
nop
adc
xor
lahf
in
push
dec
addr16
lods
rcrl
arpl
mov
in
and
shll
movsb
xor
cwtl
fiadds
icebp
adc
and
mov
call
in
mov
outsb
xchg
ficompl
es
sbb
xlat
sub
lea
or
add
data16
ret
push
mov
xor
cmovl
test
cwtl
lods
xchg
add
mov
stos
push
add
mov
les
dec
lret
lcall
inc
test
sbb
aaa
js
pushf
push
orl
subb
dec
mov
fisttpll
aas
push
cmp
cmp
or
enter
jp
add
loop
sub
and
push
add
movb
xor
popa
cmp
dec
pushf
push
push
lret
ja
out
popa
mov
loope
cltd
jg
das
outsl
test
rcrl
mov
lods
ss
nop
test
xor
scas
pop
ja
in
je
mov
test
mov
pop
push
jo
cmp
mov
mov
jae
repz
mov
dec
xor
sub
popa
dec
mov
adc
call
ja
pop
jmp
ds
add
fs
pop
xchg
cmpsb
and
pop
jge
nopl
inc
lods
xchg
lcall
mov
xlat
push
popf
imul
pop
mov
sub
mov
push
jl
clc
jnp
iret
mov
notb
es
stc
push
stos
cmpsb
sbb
loope
adc
sub
add
push
leave
sbbb
test
stc
push
or
fsts
pop
cltd
sti
and
ja
push
jle
sarb
jl
cmpsl
xor
lahf
mov
adc
inc
fidivl
std
ja
movsl
imul
aad
pop
popa
inc
adc
adc
lds
insb
jmp
jno
inc
ss
hlt
into
popa
add
lods
fimull
push
clc
xorl
call
clc
lock
loop
fwait
aad
xor
and
jg
lret
add
mov
sub
imul
dec
dec
jns
pop
inc
xlat
scas
dec
jns
icebp
xor
hlt
pusha
outsb
xchg
negb
jbe
mov
mov
rolb
dec
movsb
and
js
mov
daa
popa
les
adc
fmulp
push
push
popa
xchg
out
pop
call
push
lret
repnz
mov
fldcw
sbb
sahf
shlb
stos
or
xchg
mov
sbb
fsts
or
xor
dec
rcll
mov
std
mov
inc
cs
or
mov
and
cs
cwtl
jb
jne
insl
mov
jns
aam
dec
test
cmp
add
test
sbb
in
sub
jge
add
cmp
mov
jg
sar
mov
or
addl
das
xor
xchg
hlt
sub
movsl
mov
mov
jnp
mov
push
push
pop
jne
jb
sub
cmp
jg
ljmp
aam
arpl
pop
mov
imul
bound
pop
mov
adc
xchg
adc
ja
cmp
xor
or
xor
inc
sub
sbb
outsb
das
xchg
repz
jae
andb
add
dec
xlat
jle
out
cltd
outsb
xchg
popf
pop
mov
rcl
mul
mov
mov
jns
lods
add
das
mov
popf
cmpsb
xchg
mov
hlt
rorl
fcmove
cmp
sub
mov
popf
sti
and
pop
mov
js
insl
adc
pop
sbb
and
pusha
xlat
out
xor
push
mov
mov
add
test
lret
fidivrs
fnstenv
mov
insl
loopne
and
popa
inc
mov
in
stos
data16
xor
loopne
xchg
push
jl
lret
insb
and
push
lods
pop
mov
and
and
jo
lods
dec
and
icebp
std
pop
push
sbb
loop
mov
lea
shrb
mov
cmp
icebp
mov
push
test
or
and
mov
aas
mov
or
ret
rorl
cmp
popa
and
add
jmp
shlb
stos
loope
das
sahf
and
push
jo
mov
idiv
push
jecxz
inc
mov
mov
sub
shrl
mov
in
pop
add
jge
imul
xchg
cmp
cmc
ss
add
out
out
mov
sbb
xor
dec
movsb
mov
sub
jp
bound
call
mov
and
jae
popa
cltd
inc
mov
mov
push
mov
dec
cmc
frstor
lods
mov
scas
xchg
inc
adc
lret
add
fs
inc
icebp
in
pop
frstpm(287
push
sbb
pop
xor
iret
ret
faddl
jb
sbb
sub
sbb
test
push
jns
lret
aam
xchg
mov
mov
in
cmpsl
pop
mov
sbb
mov
out
loope,pt
xchg
jno
arpl
lret
cli
mov
lods
test
sub
ljmp
and
hlt
pop
gs
pop
mov
xor
xlat
xchg
mov
dec
scas
sbb
pop
sar
xor
mov
jge
inc
imul
insb
xorb
fwait
call
repz
pop
xchg
in
jns
ficoms
cmp
xchg
inc
or
push
or
inc
xor
xchg
sub
sbb
mov
and
repz
mov
push
cmpsl
mov
xchg
gs
push
or
push
pop
xchg
pushf
cmpsb
jp
xchg
clc
add
jo
adc
mov
mov
xchg
stc
out
addb
adc
inc
dec
repnz
rol
sbb
stos
lret
push
ja
push
inc
mov
sbb
jno
fcmovnb
stos
and
js
out
xor
subl
cwtl
scas
out
jb
push
daa
inc
push
xchg
adc
sti
in
out
insl
or
sub
loope,pn
insb
sub
decl
movsl
lock
mov
mov
popf
jno
movsb
xchg
bound
repnz
popf
pop
mov
leave
popf
xor
aam
add
jecxz
xor
movsl
mov
jl
pushf
cli
lods
test
inc
int3
sti
jno
leave
repnz
jl
out
cmp
imulb
cld
cmp
mov
xor
shl
mov
cwtl
test
mov
sbb
stos
cmp
into
shlb
out
stos
in
push
mov
jno
inc
ss
movsb
test
cmc
xchg
xchg
adcl
adc
sub
cmp
es
ret
mov
mov
sti
sbb
pop
jne
and
icebp
test
xchg
out
add
orb
cltd
jecxz
adcl
mov
mov
add
insb
mov
push
xor
pop
adc
in
ret
inc
loop
dec
fistps
mov
loope
sti
pop
push
fistpl
mov
cmp
and
sub
dec
xor
rorl
ljmp
das
push
in
push
popf
aad
icebp
mov
adc
mov
sub
mov
out
cmp
jno
ljmp
je
roll
push
movsl
out
rcrb
sub
test
xor
cmp
adc
cmpb
int
popf
xchg
inc
mov
test
fs
dec
scas
jnp
xor
lret
push
push
cmpl
mov
aad
data16
xor
fisubl
pop
push
mov
out
ss
or
leave
mov
lcall
push
inc
cs
mov
xchg
inc
pop
inc
aas
lock
iret
lods
jbe,pt
aaa
sbb
cltd
xor
cmpsb
std
xlat
sbb
xor
xor
sbb
std
dec
cltd
cmpsb
jb
push
pop
sbb
push
out
pop
in
cmp
pop
cmp
nop
cmpsl
xchg
xor
inc
pusha
jl
insl
sahf
jb
jge
test
or
sbb
adc
inc
inc
js
mov
push
xor
sbb
xor
adc
mov
movsl
rorb
push
call
hlt
pushf
and
xchg
mov
mov
cmc
cmp
in
fsubrl
sti
pusha
push
leave
pop
in
in
sub
leave
sbb
xchg
or
in
sbb
ds
dec
xor
scas
sub
jecxz
push
fimull
repz
dec
mov
cs
daa
cmp
ret
das
imul
and
pop
xchg
and
mov
jle
lea
sbb
pop
test
xrelease
pop
rcrl
stc
inc
sti
mov
jo
popf
iret
in
rcrb
enter
add
sub
push
es
pusha
xlat
loopne
cmp
push
sbbl
mov
icebp
fwait
shll
xchg
xchg
dec
inc
add
inc
bswap
data16
subb
xchg
arpl
scas
sbb
pop
jb
sbb
ret
jbe
lods
cs
mov
push
sahf
sub
sbb
inc
lds
lret
nop
and
ljmp
fiadds
pop
dec
jge
jbe
dec
clc
movsl
pop
xchg
sub
jecxz
pop
leave
inc
pusha
mov
outsl
push
pop
and
push
hlt
jae
ja
loopne
jmp
scas
mov
pop
insb
jl
aaa
cmc
mov
sahf
mov
sub
pop
scas
aam
je
mov
mov
pushf
xchg
test
fistpll
mov
out
dec
sbb
lcall
cmp
push
dec
and
in
pop
sbb
dec
mov
pop
xor
push
push
or
test
dec
pop
fidivl
mov
xchg
sbb
dec
test
pop
add
cmp
fsubrl
xchg
xchg
jno
xor
je
test
data16
or
rcll
sbb
call
xlat
call
pop
xchg
cmp
adc
mov
or
pop
imul
fwait
lahf
or
popa
xor
ja
shll
andl
iret
xchg
cmp
test
mov
jl
mov
dec
std
mov
les
dec
mov
ret
iret
out
xchg
incl
dec
popf
divl
push
dec
lods
mov
pmaddwd
push
xchg
xchg
xor
xor
or
outsb
cmp
dec
push
repz
add
popa
bound
fstpt
add
sbb
sarb
ret
mov
jge
shlb
and
dec
std
cmp
stc
pop
sbb
or
in
inc
leave
loope
ret
cmpsb
or
mov
cmp
sub
xchg
lret
jmp
stc
inc
ror
shr
and
and
rorl
and
sub
outsb
loopne
arpl
or
jmp
cs
gs
cmp
and
lret
adc
aam
jne
std
or
lods
sub
add
in
div
mov
or
or
cmpsl
mov
and
cs
insl
leave
cmp
leave
mov
icebp
pop
out
add
jo
pop
adc
fbstp
dec
inc
fiadds
into
mulb
addr16
sbb
ret
xor
mov
xor
rolb
std
and
xchg
push
outsb
mov
add
fwait
xor
stos
aas
popf
loop
push
outsb
out
sbb
lea
push
aam
movsl
out
pop
rcl
fdivl
hlt
lea
mov
test
gs
ret
jb
das
insb
mov
push
test
cmp
sti
lea
inc
mov
push
fnstcw
inc
imul
mov
pop
sti
xchg
dec
sarl
out
xor
dec
adc
lcall
les
pop
mov
xor
mov
add
loope
in
and
and
sbb
pop
movb
or
sbb
lret
cmp
aas
adc
dec
pop
mov
sbb
lret
xchg
jnp
or
jmp
mov
stos
pop
insb
pop
xlat
stos
mov
mov
pop
mov
sbb
inc
adc
sub
test
stos
fs
mov
nop
push
mov
sbb
adc
shlb
rolb
dec
aam
mov
ficoml
mov
jecxz
fldenv
cmp
pop
mov
cltd
hlt
sti
push
into
loop
je
xchg
ret
outsb
ss
std
test
jnp
and
jb
adcb
xchg
add
inc
inc
jb
stos
movsl
cs
into
pop
pop
negb
mov
inc
jge
inc
mov
dec
int
adc
loopne
dec
lea
in
inc
xchg
enter
imul
notl
daa
jl
test
sub
loopne
les
mov
imul
jge
pusha
sti
out
push
pop
jecxz
mov
pop
dec
mov
addr16
call
cmpb
sarb
jns
out
fildl
push
mov
dec
roll
sub
inc
std
outsl
push
pop
push
lea
cltd
jle
iret
ljmp
adcb
iret
test
pop
add
mov
cmp
pop
inc
pop
aam
and
sahf
dec
ret
int
mov
in
scas
and
cli
addb
mov
icebp
jl
push
fstpl
fiaddl
adc
dec
jecxz
nop
xchg
or
test
addr16
bound
pop
push
sub
insl
pop
rcrb
jo
rcrl
stos
xor
and
xorb
sbb
repnz
fistps
push
push
stc
dec
cmp
scas
mov
push
and
and
test
xor
xchg
cmc
fdivr
mov
ds
add
sbb
mov
pop
jecxz
push
adc
pop
jb
pop
test
notb
add
ljmp
out
mov
sarl
dec
hlt
decl
and
int
mov
cs
sbb
push
push
cwtl
mov
ficoml
mov
pop
out
scas
out
push
jmp
les
or
frstor
pusha
jno
out
inc
popf
shrb
rclb
incb
cltd
xchg
test
lea
adc
adc
jbe
mov
mov
insl
jg
fcoml
mov
sahf
jbe
lods
push
xor
inc
ds
mov
ja
mov
mov
cwtl
mov
test
xor
mov
addr16
addr16
aad
pop
jecxz
mov
mov
sbb
xor
call
mov
inc
and
adc
mov
scas
cltd
enter
jne
stc
test
or
ror
adc
popf
nop
ss
mov
out
mov
fidivs
or
ret
das
or
cli
cld
pop
mov
xchg
arpl
adc
adc
out
aas
mov
lcall
or
insl
push
orb
insb
call
les
mov
adc
fadd
inc
fsts
repz
mov
mov
mov
call
push
inc
inc
enter
out
mov
ds
stos
daa
stc
fimull
cmc
int
in
hlt
or
adc
ja
outsl
dec
and
jge
adc
sbbb
in
mov
push
sbb
leave
cltd
xchg
push
mov
mov
adc
or
or
aaa
pop
enter
lahf
cli
and
stos
call
sub
hlt
pop
and
lea
pusha
adc
sti
push
nop
mov
xor
jle
mov
inc
push
hlt
jno
pinsrw
jnp
inc
inc
sbb
sub
jo
xchg
cs
cmp
psubsb
jle
js
and
sbbb
pop
mov
jmp
xchg
lea
mov
sbb
xor
movsl
test
inc
push
aam
push
dec
outsl
xor
in
or
cld
jne
imul
mov
insl
out
inc
adc
insl
nop
sub
ds
shrb
xor
or
mov
stos
jbe
jns
das
cmp
shlb
mov
sub
push
out
dec
mov
sar
mov
and
imulb
mov
dec
loope
push
dec
mov
adc
mov
mov
mov
inc
insl
xchg
outsl
jo
clc
mov
jne
mov
jmp
mov
rdtsc
mov
aaa
popf
iret
xor
dec
div
div
cmpxchg
push
out
mov
fcomps
ss
jne
je
mov
imul
push
mov
int3
xchg
jae
insb
and
fadd
pop
mov
mov
mov
es
add
scas
jmp
jecxz
dec
mov
mov
and
mov
in
loopne
dec
mov
jmp
dec
sbb
addr16
add
mov
sbb
pop
jp
pop
inc
jmp
add
or
in
js
out
adc
shlb
jno,pn
xchg
sbb
inc
sbb
negb
test
sbb
jge
fldz
popa
and
in
cmp
fucomip
push
call
fstps
and
jp
sbb
dec
subb
aaa
nop
bound
test
es
jle
fistpl
mov
sub
or
mov
pop
sub
cld
pop
xlat
addl
xchg
pop
dec
sub
cmp
pusha
mov
lahf
jnp
pop
popf
xor
xor
je
jae
mov
andb
fbld
stos
xchg
pop
addr16
or
test
sub
sbb
in
cltd
aas
cmp
or
xchg
ret
inc
jne
dec
and
stos
shlb
mov
push
mov
lods
das
mov
xor
cwtl
mov
icebp
ficomps
daa
repnz
bound
and
push
pop
idivl
pop
mov
sub
adc
push
sub
sbb
enter
dec
ja
mov
push
lods
push
test
push
cmpsl
jl
rorb
mov
mov
cld
add
nop
int
nop
dec
cwtl
rcr
dec
jb
dec
inc
cltd
mov
movsb
pop
xor
test
jae
xchg
mov
lret
rcll
xchg
xor
or
ja
mov
cwtl
jbe
pop
pop
cmp
push
aam
xor
ror
lods
inc
and
jle
push
and
jg
pop
xor
jbe
lahf
mov
jmp
mov
mov
pop
mov
test
mov
mov
mov
and
out
mov
lea
fldenv
icebp
cmpsl
or
mov
test
cmpsb
sub
pop
imul
mov
mov
movsl
inc
dec
fsub
out
sbb
lret
dec
aam
in
cwtl
fdivrp
icebp
jg
pop
loope
lds
jl
dec
js
shrb
mov
add
icebp
sbb
cmpsl
lret
or
ret
cmp
sbb
cwtl
mov
rcrl
ss
adc
mov
and
and
or
inc
in
xor
scas
mov
cmp
pop
sbb
pop
ret
pop
fs
movsb
out
add
jno
push
jns
push
jge
pop
push
bound
sub
mov
lds
loope
push
cmpsl
repz
loop
ret
cmp
sbb
cmp
les
cmp
pop
out
icebp
mov
xchg
adc
mov
out
push
cmp
xor
mov
push
add
shrd
and
and
cmp
jmp
push
jge
ds
mov
xor
das
sbb
sub
fildl
scas
adc
ss
hlt
cpuid
shll
cmpsl
std
dec
pop
adc
aad
fstl
pop
adc
into
xchg
popf
inc
std
push
daa
lcall
outsb
push
xor
pop
sbb
sbb
xchg
mov
mov
push
lea
sub
xchg
fwait
hlt
stos
in
add
fucomip
push
mov
addr16
jg
insl
pop
rcrl
pop
ret
mov
dec
out
mov
xchg
xor
aam
jb
mov
lock
mov
fimuls
dec
mov
push
or
fldcw
lcall
dec
and
repnz
ret
cmc
rolb
rolb
ljmp
shll
inc
adc
pop
ret
xchg
xor
sub
nop
outsl
aad
shrl
into
sub
aad
in
sahf
scas
pop
mov
add
dec
jg
cmp
adc
dec
pop
jns
pusha
sti
and
int
inc
leave
add
test
inc
movsl
bound
pusha
in
jp
shlb
add
pop
mov
aad
hlt
cli
adc
push
mov
xchg
adc
outsl
stos
push
xor
push
jecxz
addb
sbb
jne
cld
int
cmpsb
into
jmp
jmp
ret
pop
adc
fs
stos
mov
es
ss
fdivr
inc
fyl2x
test
leave
popa
nop
loope
mov
xchg
nop
pushf
test
sti
pusha
and
sbb
xor
sub
dec
mov
sbb
mov
dec
inc
push
inc
stos
mov
or
add
fs
lret
dec
jle
std
inc
push
mov
and
inc
insb
xchg
or
fs
push
inc
push
incb
sarb
xchg
leave
dec
out
jmp
xor
mov
xchg
jecxz
shlb
mov
dec
cmp
sahf
fcomp
lea
xchg
fiaddl
mov
mov
repnz
cmc
pop
mov
mov
clc
sub
xor
out
popa
imul
hlt
adc
aas
and
std
jg
fnstsw
cmp
addr16
mov
test
adc
xor
pop
fnstcw
or
cs
mov
repnz
jle
scas
gs
pushf
imul
sub
mov
push
aas
sub
jns
je
insb
insb
movsl
aaa
shlb
and
sub
inc
inc
jmp
jecxz
inc
mov
adc
and
jo
pop
mov
push
adc
add
and
les
mov
mov
sbb
cmpb
lea
add
movsl
iret
jmp
dec
push
jecxz
mov
inc
cmpsl
je
mov
or
jne
add
inc
jb
mov
popf
ds
dec
jb
and
mov
arpl
jle
adc
xor
sub
sbb
nop
in
cltd
inc
movsl
iret
pop
daa
pushl
int3
pop
push
lock
shll
stos
pop
sub
jb
add
inc
scas
inc
fwait
aaa
add
out
xchg
insl
out
mov
sub
shll
pop
pop
sti
pop
outsb
push
ret
mov
xchg
inc
int
scas
out
mov
je
mov
jne
mov
adc
jnp
fcmovu
mov
pop
outsl
cs
xorl
inc
bound
pushf
lret
aam
inc
jns
mov
push
daa
scas
cmp
mov
lcall
test
and
in
imul
or
iret
pop
lds
xor
add
pop
xor
jae
sub
push
pop
jo
movsl
les
int
mov
test
push
jae
push
mov
inc
mov
insb
test
out
movb
bound
mov
stos
sub
add
in
lods
in
cmc
mov
mov
and
xor
push
cltd
js
dec
pusha
jo
jbe
push
lock
sub
cld
and
jae
inc
lods
mov
lret
xchg
popa
mov
ja
mov
imul
sbbb
adc
fadds
sub
daa
repnz
in
and
stos
into
xlat
repz
xchg
cmpsb
movsl
imul
sarl
shlb
fldl
mov
xor
pop
cmp
xor
push
xchg
mov
pop
cmc
ds
mov
mov
adc
lods
fistpl
add
and
adc
add
xor
cmp
mov
dec
mov
fsubl
mov
pop
push
pop
jle
or
add
xlat
scas
ljmp
repnz
rcl
sarl
ljmp
in
out
sbb
inc
jae
imul
mov
push
jo
xchg
push
cmc
call
movsl
faddp
or
jnp
test
popa
mov
jbe
imul
sub
pusha
das
mov
cld
and
pop
or
or
push
mov
es
sub
fcoms
fmuls
sub
push
mov
xor
cmp
rolb
push
jmp
and
out
test
das
rcll
ja
ja
lea
cmc
fidivrl
pushf
fwait
mov
pop
xlat
int3
data16
rolb
outsl
rol
repz
jo
adc
jae
pop
mov
and
fidivl
pop
sbb
repnz
adc
js
fists
mov
cmp
jbe
stc
xchg
ret
stc
aaa
mov
fsubl
sbb
add
adc
inc
and
pop
pushf
in
inc
rcrl
ds
mov
cmp
insb
into
mov
xor
shrb
push
sbbb
jbe
push
cmp
dec
and
daa
insb
xchg
lret
or
jge
pop
push
in
decb
daa
fisttps
loopne
inc
cld
addr16
mov
shr
iret
xor
pop
xor
leave
subb
jmp
sbb
addl
jb
xor
push
lea
cmp
movsb
ja
add
or
push
shll
imull
pusha
xor
pop
pop
mov
into
sbbl
lahf
push
repz
lahf
arpl
imul
pop
js
dec
push
cs
push
mov
jns
mov
xchg
aam
or
insl
mov
leave
std
fsub
adc
mov
arpl
popa
shr
sbb
inc
sti
rcll
push
sbb
gs
xor
stc
insl
add
filds
dec
pop
cmpl
jecxz
dec
and
pop
cmc
cmpsb
lret
push
cwtl
push
pusha
xlat
fstpl
or
orl
fs
and
fxtract
cld
and
jae
dec
fadds
mov
int3
pop
or
xchg
jmp
sub
xchg
leave
mov
stos
mov
adc
xlat
scas
pop
ret
cmc
mov
mov
mov
fistps
jno
and
scas
pop
ja
cli
and
adc
dec
fwait
push
fwait
jg
push
xchg
push
adc
mov
jmp
sbb
or
push
test
pop
and
sbb
iret
dec
mov
scas
add
clc
ret
aad
pop
sub
or
push
xchg
cmpsl
and
push
popf
dec
fldcw
call
les
pop
and
arpl
adc
add
and
xlat
xchg
fnstcw
int3
inc
pop
xlat
cmp
xchg
mov
jbe
lret
pop
xchg
fprem
pop
cmpsb
add
es
ljmp
mov
fildl
test
or
cmp
mov
cmp
ss
aas
sbb
push
cmp
jmp
jmp
and
clc
mov
or
ja
sti
outsl
sub
imul
dec
test
lahf
movb
jl
cmpsb
mov
push
ror
std
fnstsw
adc
mov
push
xchg
hlt
mov
inc
add
mov
outsl
or
dec
adc
out
ret
daa
cmp
jp
sub
sbbb
jecxz
movsb
lret
adc
cmp
aas
cmp
rol
cmp
inc
test
xor
stc
data16
dec
cmpsl
ja
sub
cmp
rcll
movsb
inc
jge
pop
xor
data16
push
fwait
sbb
push
jecxz
push
jle
sub
xor
leave
sbb
ds
dec
pop
pop
test
repnz
or
rcrb
fistl
arpl
push
xchg
mov
in
push
lods
adc
cmpsb
push
mov
push
ds
cmc
add
push
fnstsw
fwait
inc
jns
aam
loop
pusha
adc
xchg
ret
nop
ja
cmp
mov
sub
or
movsb
lret
add
mov
pop
sti
lds
lret
jne
mov
xor
and
dec
test
fisttpll
inc
cmp
rol
lea
das
cmpsl
sub
sti
mov
addr16
cmpsb
sbb
ss
stos
xchg
lock
and
cmp
inc
push
pop
cmpsb
mov
pop
pop
dec
xchg
cmp
xor
mov
int3
dec
repz
sbb
lods
popa
jb
cmp
aam
sub
jl
mov
movsb
mov
ljmp
sub
jae
orl
fsubrs
outsl
mov
insb
out
push
inc
adc
cmp
add
lcall
dec
xchg
dec
inc
pop
pop
add
shrb
mov
cmp
bound
sub
jp
fsts
sub
gs
cmc
orl
js
test
lret
imul
rol
lret
aad
mov
lock
pusha
and
adc
xchg
mov
movsl
adcb
add
sbb
sub
movsb
cmc
jl
jmp
or
imul
mov
fwait
pop
fsubr
pop
daa
shl
imul
in
cld
push
clc
out
iret
mov
pop
xchg
cltd
mov
cwtl
dec
sbb
decl
out
jne
out
and
sbb
stos
enter
enter
add
dec
jae
adc
sbbb
mov
add
sub
pushl
repnz
jg
push
cltd
lret
and
pusha
push
cmovbe
or
cmpsb
les
loop
aam
popf
mov
cs
cli
enter
fsubrs
cmp
sbb
jbe
lcall
movsb
loop
push
xor
pop
leave
lock
rclb
sarb
mov
or
fwait
push
jle
inc
pop
sub
mov
pop
sub
sub
enter
cmc
in
in
cs
jmp
or
fistps
mov
cmp
push
mov
in
ds
mov
lds
sub
mov
and
adcb
lds
mov
loope
lahf
stc
adc
or
inc
lcall
xor
sbb
ret
push
loopne
or
sbb
cmp
stc
sbb
repnz
push
je
test
aas
repz
pushf
aam
mov
mov
scas
leave
add
xchg
push
xor
scas
lcall
out
and
pshufw
cmpsb
xor
outsl
add
dec
mov
xorb
push
test
clc
out
mov
pop
adc
rorb
pop
mov
jo
xor
idiv
fistpl
test
fbstp
inc
rorb
negl
xchg
and
inc
daa
dec
roll
cli
adc
push
lret
es
icebp
insb
out
mov
add
sbb
adc
adc
dec
sub
mov
in
sub
mov
aaa
cmp
jo
cltd
push
dec
dec
pop
lret
adc
icebp
adc
and
cltd
xor
es
pop
sub
mov
xchg
or
or
jp
fcmovb
xor
mov
mov
mov
aam
insb
ss
mov
sbb
std
test
rol
int3
mov
sti
pushf
das
aad
xchg
ds
popa
pop
or
lock
sbb
and
cwtl
je
add
mov
mov
popf
add
andl
xchg
jle
inc
lea
jecxz
aam
jp
outsb
stos
stos
out
xor
icebp
mov
popf
jo
cli
xchg
adc
aad
xchg
mov
push
pop
jle
sahf
outsb
pushf
mov
xor
jae
lea
mov
into
aam
mov
cmp
mov
shlb
in
mov
xor
int
xor
mov
xchg
pusha
push
sub
fcoml
xchg
xchg
and
mov
add
es
and
xor
js
shlb
in
inc
sar
mov
and
sbb
pusha
add
dec
sbb
movsb
scas
sub
adc
daa
add
and
cmp
mov
mov
aad
inc
dec
and
popf
in
int
rolb
shr
jnp
push
sbb
mov
mov
iret
outsl
jae
mov
ljmp
imul
xchg
push
push
jno
shl
pop
push
xchg
push
inc
cli
jae
mull
ss
out
ret
div
aam
dec
cwtl
jae
xchg
xor
cmp
pop
push
int
out
inc
xor
mov
sub
jne
js
aas
lods
push
into
dec
lods
xchg
das
and
jnp
sbb
sbb
or
out
addr16
jnp
call
subb
enter
xchg
xchg
jbe
add
mov
cmp
jno
and
inc
add
aaa
addl
in
or
push
jmp
add
mov
lds
call
mov
shlb
jg
and
push
and
mov
sub
ret
in
xor
xchg
and
jmp
fs
por
mov
fs
ficomps
mov
inc
pop
jge
jns
pop
cli
shl
hlt
or
test
push
jbe
push
mov
fsubr
add
dec
inc
dec
mov
lahf
js
sti
pushf
add
push
iret
jae
jle
cmp
cmpsb
test
clc
or
push
dec
push
sarb
cmp
jb
jno
and
sahf
daa
push
xchg
dec
leave
stos
pusha
test
pop
test
jl
fisubl
mov
add
lahf
jmp
movsb
popa
sbb
push
pop
insl
dec
push
jl
repnz
jbe
cmp
inc
xor
stos
not
xchg
cmp
jo
cmp
or
pop
orb
ficompl
xor
xchg
sbb
ja
and
jge
push
inc
mov
jae
xor
add
mov
call
sub
cmpl
ljmp
sub
loope
divps
fwait
mov
xor
push
pop
aam
or
sahf
outsb
inc
jg
call
fwait
dec
xor
dec
xor
test
or
std
hlt
in
sub
mov
outsb
push
lea
xor
mov
add
les
mov
sub
xchg
arpl
insb
in
adc
sbb
push
xchg
pop
adc
push
iret
push
add
jmp
xor
in
sbb
in
clc
popf
aam
jbe
jns
out
mov
scas
popf
inc
and
or
out
cld
mov
ret
adc
xchg
aad
jbe
dec
push
sarb
mov
sbb
xor
ds
push
cs
and
inc
ret
lahf
cmpl
shl
stos
push
sarb
sub
es
push
jg
test
ja
cld
shlb
cmp
out
gs
pop
mov
xor
mov
insb
mov
xor
mov
lea
dec
dec
insb
subb
mov
mov
cmpsb
cmp
pop
lcall
mov
incb
lock
arpl
cs
jo
mov
adc
pop
addr16
ljmp
insl
jp
mov
or
stos
pop
mov
push
into
adc
fsub
xor
cmp
ss
shll
ret
ds
push
push
stos
jo
outsb
and
in
pop
scas
div
push
test
mov
movsb
icebp
inc
sbb
adc
or
dec
pop
into
add
push
sub
jnp
test
cmp
bound
shlb
jnp
cmpsb
test
mov
push
xchg
dec
sub
or
ss
sub
shl
xchg
out
fdivr
adc
pop
push
in
add
pop
cli
xor
es
mov
and
dec
call
and
jmp
andb
pop
push
lods
adc
aas
dec
mov
or
jge
fldenv
imul
pop
in
xchg
aaa
jo
xchg
xchg
lahf
ret
mov
jns
jnp
mov
icebp
pop
in
sbb
pusha
jp
cmovbe
xor
inc
mov
pop
pop
jge
daa
adc
call
jmp
mov
jge
icebp
fwait
sbb
mov
outsb
mov
push
lret
in
in
adc
cmpsl
stos
push
sbbb
jg
pop
sub
ficompl
lds
into
adc
jle
sub
push
stos
filds
and
pusha
sahf
aad
push
pop
mov
in
cmpsl
sbbb
sub
lods
or
pop
and
in
fisttpl
sbb
stos
daa
xor
mov
pusha
xor
test
fldenv
ret
pop
outsb
jb
cli
fwait
push
fistpll
adc
imul
xchg
mov
pop
clc
mov
sub
mov
cli
jecxz
fdiv
rcrb
inc
xor
lahf
lahf
pop
popf
ds
push
test
into
movsb
sub
dec
fistl
xchg
jno
xchg
repnz
cwtl
inc
cmp
push
sub
es
adc
pop
pop
push
jne
fisubrl
shl
add
lods
lods
jl
xchg
mov
mov
cld
imul
rorl
xor
rclb
mov
jl
jmp
inc
sub
out
pop
jecxz
xor
mov
loope
sarl
cmp
insl
and
mov
mov
xchg
inc
cmpsb
int3
and
sti
hlt
into
pop
fisttpl
pop
jecxz
incl
push
push
and
push
jp
sub
js
push
jo
clc
pop
sub
sbb
dec
inc
sbb
outsb
sbb
jg
mov
cmp
mov
call
ljmp
scas
movsb
inc
popa
and
sbb
sarl
mov
xchg
jne
js
mov
pop
js
mov
cmpsl
popf
in
adc
stos
mov
jnp
xlat
jl
jae
aas
ds
cmpsl
pop
fdivrs
inc
mov
xchg
add
sbb
mov
xchg
sub
sbb
test
outsl
add
cmc
or
mov
sub
jnp
dec
adc
push
add
fwait
mov
jl
enter
mov
mov
cmp
std
sti
dec
lods
inc
xchg
daa
cmc
fwait
addr16
add
push
mov
fldenv
sbb
adc
xchg
out
cmc
inc
data16
stos
movl
pop
mov
clc
int
sahf
arpl
xor
add
push
xchg
ror
adc
int3
das
jo
mov
das
xlat
mov
lods
xchg
push
sub
pop
and
scas
push
mov
push
inc
aaa
xchg
adc
and
xlat
pop
jae
jge
ret
ret
lret
imul
xor
xlat
mov
add
mov
cmpsl
cmc
cmp
mov
mov
lcall
sbb
push
in
lahf
mov
xor
dec
sub
pop
mov
imull
icebp
aas
dec
push
inc
add
aam
jmp
stos
filds
sub
lcall
iret
adc
leave
stos
fidivrl
xor
aas
scas
inc
jle
cmp
lea
stos
mov
add
sbb
adc
adc
bnd
add
ljmp
cmp
popa
pop
sbb
mov
fwait
add
dec
xchg
ret
mov
js
ret
test
int3
enter
test
dec
cmpsb
push
sub
add
sbb
inc
cmpsb
push
jl,pn
fisubs
pop
pop
frstor
add
mov
push
mov
mov
roll
or
xchg
pop
pop
mov
inc
add
stos
push
mov
sar
enter
inc
xor
lcall
sub
push
scas
mov
xor
adc
jmp
imul
sti
push
dec
mov
xor
dec
call
inc
adc
cmpsb
dec
inc
loop
cmp
mov
stos
jle
sub
ret
mov
mov
ret
int
arpl
aaa
mov
ljmp
xor
or
jo
aad
rclb
mov
mov
add
mov
jno
popa
add
or
es
lret
mov
xchg
iret
cmp
mov
pop
aas
fcomps
lds
mov
cli
data16
adc
in
clc
movsb
mov
stos
jl
and
fs
aad
or
movsb
stc
dec
push
xchg
and
ja
flds
icebp
xchg
sub
push
repnz
out
lds
sub
pop
pop
push
cmp
fistl
jmp
jbe
mov
xchg
xchg
and
sub
imul
mov
sahf
lods
fimuls
mov
push
dec
cmp
mov
or
xchg
je
pop
adc
push
lahf
pop
fistpll
lret
ljmp
push
hlt
xor
pop
mov
rcrb
inc
pop
sub
push
lret
sbb
jne
stc
aam
lret
fiadds
sbb
or
dec
cs
dec
add
ja
mov
cmp
mov
out
xchg
cs
add
cmpsl
inc
sub
aaa
movsl
mov
jmp
pop
fsubrs
test
les
and
imulb
test
adc
insb
inc
adc
sbb
mov
insb
lret
cs
push
leave
and
xor
jl
mov
cmp
sub
mov
insl
xor
out
lods
cs
pop
ss
adc
cwtl
mov
lock
push
stc
cmc
int
js
addr16
push
int
cs
pop
pop
jl
sub
pop
sbb
ja
jl
loop
mov
lds
je
jnp
mov
mov
dec
loopne
dec
cmpsl
cmpsb
pop
popl
add
sahf
lret
add
out
movsl
jle
mov
adc
les
fsub
push
lock
or
cmpsb
imul
dec
dec
push
inc
imull
test
and
jge
add
gs
pop
cmp
in
cmc
pop
cmp
aas
in
out
inc
sbb
mov
ljmp
mov
jp
pop
js
pop
and
js
xlat
jno
dec
mov
fdivp
iret
jae
xchg
gs
and
test
jo
and
ficomps
pop
fdivrs
loope
inc
in
jle
xchg
stos
jnp
pushl
lret
mov
cmc
lock
add
sbbl
int
or
jns
icebp
pushf
push
adc
push
push
cwtl
push
add
adc
mov
sub
out
or
dec
xor
lahf
and
adc
xlat
xor
hlt
jae
xor
sti
popa
or
fstpl
bound
fsts
add
jno
mov
and
mov
les
lcall
sbbb
dec
add
jmp
jl
lock
outsl
pop
das
push
adc
and
ficompl
icebp
xor
loopne
adc
addl
jmp
and
xor
push
out
xchg
pushf
shrl
les
ljmp
insl
test
in
jnp
push
sub
imul
jmp
add
xor
push
add
xchg
arpl
push
sbb
adc
test
xor
fxch
bound
pushl
and
inc
add
sub
mov
test
repnz
aam
add
or
dec
outsb
insb
xchg
mov
xlat
jge
or
xchg
loope
lds
inc
mov
xchg
xchg
and
mov
mov
mov
mov
mov
jbe
pop
sub
adc
cmp
std
jno
add
std
mov
pop
sub
pop
cmp
enter
xchg
mov
hlt
in
cmp
cmp
fwait
or
cmp
inc
divl
xchg
cmp
scas
insl
fidivrl
jb
cmp
jecxz
dec
leave
test
out
stos
mov
outsl
ret
and
loop
shl
xor
mov
dec
or
in
and
push
nop
dec
push
jg
je
and
je
add
pop
vrcpps
movsl
pusha
push
mov
push
nop
adc
dec
push
fdivs
and
push
jge
xor
mov
data16
bound
adc
aaa
cmp
xor
jle
cld
and
lahf
mov
adc
sub
pushf
pop
ds
mov
push
cmc
fwait
addl
dec
ret
jmp
xchg
ret
jg
lea
sub
sbb
rcll
mov
es
adc
fisubrs
sub
mov
lcall
mov
stc
adc
or
adc
pop
scas
scas
jae
insb
nop
outsl
insb
bound
sub
inc
cmpsl
xor
mov
push
push
mov
cwtl
imul
test
push
fdivs
jnp
push
mov
cmp
ret
jecxz
ds
inc
loopne
push
test
andb
push
push
arpl
inc
add
ror
out
cmp
xchg
iret
adc
xor
cmc
dec
inc
push
insb
imul
add
pop
mov
lods
adc
mov
jbe
int
mov
jnp
push
jecxz
xchg
mov
jle
stc
xchg
outsb
shl
in
pop
push
mov
bound
mov
and
fstpl
sbbl
dec
lds
testl
fadds
je
and
into
stc
or
sub
into
sub
daa
int3
or
adc
adc
test
add
data16
sbb
sub
rcr
or
pusha
dec
clc
fcoms
inc
jge
test
addr16
adc
xchg
sbb
fdivrs
cmp
repz
in
pop
jl
sti
scas
xchg
jbe
mov
aad
icebp
popf
add
jmp
jnp
xor
mov
pop
test
lods
mov
pop
or
js
jne
and
mov
dec
shrl
push
loope
fs
mov
sahf
cwtl
dec
jne
out
xchg
xchg
fistl
inc
cli
sti
xor
cmp
adc
xchg
pop
leave
stos
pop
sub
fsubs
in
dec
imull
daa
jbe
lods
pop
dec
sarl
jecxz
std
mov
loope
ret
inc
int3
xor
lret
dec
mov
and
call
pop
lea
clc
pop
jmp
mov
jnp
dec
adc
sub
enter
mov
push
ss
push
push
cli
pop
repz
push
enter
adc
cwtl
push
ret
std
sbb
sbb
into
outsb
mov
xchg
imul
xor
rorb
mov
js
mov
cmp
dec
cltd
es
jb
movsb
iret
mov
mov
sbb
scas
mov
xchg
push
scas
push
adc
dec
and
fcomip
int
and
cmpsb
or
pop
or
adc
cmp
sbb
lea
jo
mov
or
pop
xchg
sbbl
xchg
gs
sbb
xchg
in
sub
mov
in
jns
mov
fdivs
shl
sti
add
push
add
lahf
movsb
imul
jne
jns
xor
jno
xor
outsl
jns,pt
repz
imul
mov
fsts
xchg
testl
mov
inc
add
outsl
dec
xor
add
fstl
lods
push
shl
fldl
sbb
popf
stc
icebp
scas
incl
push
xchg
sub
out
into
inc
call
sub
sub
push
mov
movsl
scas
dec
pop
fs
adc
sbb
fstpl
in
push
sub
cmpsb
adc
ret
dec
cmpsb
lret
mov
lret
rol
outsb
cs
outsl
mov
leave
cmc
divb
int3
xchg
cmp
pop
and
mov
loop
xchg
cmpsb
jae
mov
dec
sub
mov
fistl
cmp
mov
addr16
xorl
gs
pop
or
xchg
lods
ds
mov
push
inc
shrl
rclb
xor
sub
pop
adc
inc
ficoms
xchg
or
xchg
xchg
pop
scas
cmpsl
lock
out
jmp
and
inc
xlat
xchg
rcr
and
es
mov
cmpsl
inc
xchg
adc
bnd
aam
sbb
fstl
cmp
fstpl
stc
push
dec
mov
sahf
pop
adc
or
sahf
rclb
and
test
lahf
stos
hlt
xchg
mov
ljmp
add
adcb
jns
push
dec
lods
ljmp
cmp
pop
jle
fwait
jne
xor
mov
dec
adc
mov
inc
xchg
cmp
outsl
mov
pushf
adc
cltd
and
mov
cmp
add
sub
repz
insb
cmp
jbe
mov
xchg
sti
out
stos
insl
loop
sub
push
ds
mov
cltd
das
cmp
xor
cmp
fs
xchg
jp
pop
dec
iret
xchg
xchg
out
push
pusha
lahf
xchg
add
jmp
or
sahf
pop
cmp
sahf
int
pusha
xchg
mov
xchg
inc
xchg
mov
nop
jbe
and
add
cmp
loopne
sbb
pop
push
xchg
popa
movb
call
dec
nop
adc
push
mull
loope
cmc
add
rcrb
das
cmp
cltd
jl
scas
push
jne
jnp
and
push
insl
xor
out
mov
cmp
ss
mov
hlt
mov
hlt
arpl
or
addb
pop
fsts
sbb
xor
pushf
cwtl
adc
lods
and
insb
sti
scas
inc
imul
sbb
psllq
out
out
sbb
xchg
lret
inc
inc
out
inc
es
push
lock
scas
sbb
mov
dec
jae
jnp
sub
out
adc
lret
cmp
sub
in
call
dec
test
pusha
rcrl
cmpb
jae
repz
inc
pop
test
push
adc
cs
xchg
sar
loope
and
and
mov
enter
ljmp
insl
mov
lcall
mov
repz
mov
ja
pop
out
ret
ja
in
xchg
adc
or
cmpsl
clc
divl
or
insb
fstl
jmp
cwtl
xchg
mov
negb
jb
add
xor
rcll
mov
mul
add
fst
into
mov
cmp
pop
pop
xor
xchg
jmp
cmpsb
mov
xchg
cmp
xchg
xor
sbb
sahf
arpl
sbb
outsb
movsl
add
stc
gs
jbe
sbbb
cmp
je
mov
lods
cmp
ret
inc
dec
inc
popa
cmp
xchg
lea
or
leave
or
mov
jle
mov
rcl
paddq
adc
dec
rcrb
stos
ljmp
xor
sub
mov
outsb
xor
pop
sbb
xor
nop
std
pop
test
lahf
xchg
into
roll
aas
ss
mov
push
and
push
daa
xor
inc
xor
adc
cmp
xor
xchg
leave
imul
pop
inc
jo
ret
add
outsb
ja
pop
mov
mov
cld
pop
cwtl
or
imul
outsl
outsl
aad
cs
push
pusha
arpl
sub
xchg
in
pop
dec
aad
addb
push
jecxz
bound
xlat
mov
js
mov
popf
dec
xchg
lds
inc
clc
and
shl
sub
ret
cmp
dec
arpl
sub
mov
sub
push
adc
movl
push
loope
mul
sahf
ss
cmpsl
pop
imul
outsl
cmc
dec
into
mov
push
xchg
xchg
xchg
cmpsl
add
xor
xchg
push
pop
xor
cs
ja
test
mov
inc
and
dec
daa
out
rcrb
inc
lods
mov
or
push
pop
mov
jle
xchg
cld
mov
jbe
dec
mov
inc
mov
mov
jmp
adc
push
into
fcomp
js
sub
popa
pop
cmp
lahf
inc
sub
xchg
clc
cmpsb
push
inc
or
add
cs
in
fistps
inc
jb,pt
loopne
ds
imul
or
push
clc
cmc
cmpsl
sub
sub
mov
mov
mov
dec
xchg
sub
pop
push
lahf
dec
dec
jp
outsl
xorb
mov
adc
loopne
xchg
mov
ret
pop
lock
push
push
push
jne
out
inc
xlat
cmp
pop
js
mov
aam
xor
jl
loop
dec
or
loope
mov
imul
jae
cmp
insb
jle
mov
aad
fdivrs
push
fnsave
or
xor
mov
mov
adc
mov
sbb
shrl
adc
cwtl
mov
insb
aam
sti
dec
dec
push
lea
outsb
mov
andb
or
sbb
xlat
fcompl
rcrl
pop
sarl
orl
mov
cmpsb
daa
dec
imul
dec
cwtl
cmp
scas
xor
js
xchg
je
sub
pop
or
mov
lods
ss
cmpsb
pop
je
xchg
sbb
lods
test
mov
sti
daa
cmp
push
adc
aad
adcl
cmp
popa
lcall
imul
imul
jnp
scas
sbb
fiadds
cmp
pop
enter
mov
adc
fstps
mov
dec
aad
daa
xchg
outsb
pop
inc
pusha
mov
mov
adc
testl
adc
or
stos
dec
mov
fwait
inc
int3
loopne
repnz
mov
sub
xchg
mov
clc
enter
mov
inc
jb
pushf
js
int3
cltd
lods
icebp
mov
jbe
or
push
xchg
mov
jo
cltd
add
jno
sub
sbb
mov
dec
pop
push
mov
aaa
adc
rcl
pop
jnp
sarb
push
scas
nop
pushf
pop
adc
sbb
ret
dec
mov
and
jbe
cmp
sub
scas
cmpsb
jne
out
into
pop
pop
and
jno
adc
enter
dec
shl
lret
fnstenv
dec
bound
mov
mov
add
pop
ja
push
xchg
mov
push
cmp
or
psubusb
add
mov
rcll
out
repnz
loopne
popf
adc
xchg
adc
pop
push
mov
fwait
lods
shlb
outsb
mov
mov
pop
leave
sub
dec
jg
out
fsubr
push
int
repnz
outsb
add
loope
ja
mov
incb
int
subb
or
pop
mov
sub
lret
scas
lret
inc
lahf
and
mov
ljmpw
cs
dec
movsb
fmulp
adc
jo
fdivrs
and
sbb
dec
mov
jp
and
jne
shll
fsub
shrb
stos
mov
loop
dec
mov
cwtl
out
lret
rcll
push
add
adc
inc
lds
addr16
xor
int3
cmpsl
push
mov
pop
push
in
pop
lcall
imul
mov
movsb
lahf
out
push
pop
fldt
js
lcall
push
xor
js
sbb
xchg
and
hlt
mov
xchg
test
sar
push
jne
push
push
xchg
jns
movb
fwait
inc
pop
jg
push
adc
addr16
push
mov
pop
test
loope
out
mov
xor
daa
data16
mov
sub
and
and
inc
int
gs
js
and
dec
outsl
das
jmp
xor
sbb
sub
cmpsl
decb
stos
jg,pt
pop
pop
ja
jp
add
jl
push
sbb
dec
xor
push
lods
adc
and
jge
hlt
jns
es
add
icebp
cwtl
jl
cltd
ret
cli
xchg
out
mov
lcall
push
dec
jnp
sub
lods
xor
pop
cmpb
xchg
mov
dec
jnp
sub
hlt
sbb
cmc
jno
scas
fisttpll
jg
and
mov
pop
das
lods
ja
sub
call
test
xchg
in
and
sbb
scas
cmp
jae
sub
sub
push
das
xchg
lods
add
js
arpl
aas
js
inc
mov
in
xor
dec
test
stos
lret
push
mov
xchg
lock
xchg
aad
inc
pop
test
xor
xchg
jecxz
push
xchg
aam
mov
shll
orl
mov
add
test
insl
and
mov
negl
mov
dec
inc
mov
pusha
fisubs
in
notb
mov
jbe
das
call
sbb
jns
loopne
test
mov
iret
push
in
push
inc
lods
inc
lcall
fsubp
std
lret
jge
inc
inc
jge
and
add
adc
push
fists
ds
cld
cmpl
xchg
lahf
adc
or
frstor
lret
add
pop
xchg
sahf
inc
es
jnp
push
lret
in
inc
jl,pt
aad
psrld
push
ret
out
mov
add
mov
cmp
mov
push
cmc
xchg
pop
clc
clc
xchg
mov
mov
arpl
push
pop
mov
jns
out
mov
negb
mov
sbb
mov
inc
jb
push
pop
sub
call
add
mov
shlb
push
push
xor
out
fmul
mov
push
pop
in
cli
jp
xchg
pop
nop
xchg
push
fdivrs
mov
adc
push
mov
mov
sahf
sti
shl
ss
icebp
dec
out
ret
out
addb
les
pop
dec
jg
jl
aad
cltd
sbb
inc
fdivrs
nop
sub
loope
lahf
push
roll
sbb
cmp
das
pop
xchg
adc
repnz
cmp
lret
scas
or
fidivrl
mov
inc
inc
mov
mov
or
js
fnsave
fs
dec
add
fidivrs
pop
out
and
xchg
out
pop
pop
scas
fwait
aaa
cmp
mov
outsl
pop
xchg
ja
iret
push
inc
sti
or
aaa
das
inc
lcall
mov
pop
outsb
mov
addr16
ljmp
and
mov
loope
adc
add
pop
or
testl
dec
nop
pop
stc
lea
sub
inc
scas
mov
je
std
fistpl
dec
popw
clc
xor
in
inc
or
mov
scas
jo
and
lcall
cmp
or
mov
gs
mov
jg
push
dec
jl
in
ss
sbbl
xor
push
and
jle
push
hlt
pop
and
repz
inc
jno
dec
mov
out
fimull
ds
mov
daa
je
xchg
sub
idivb
out
je
jo
xchg
push
int3
cmp
add
and
nop
or
and
xor
add
and
sbb
cmp
fisttpll
repz
mov
xor
test
sbb
jmp
mov
inc
lock
sub
test
imul
and
cs
sub
xlat
aam
adc
addr16
lcall
jnp
xchg
and
int
in
fld
or
out
std
pushf
lock
jp
cltd
xchg
clc
jmp
jg
xchg
mov
stos
into
dec
adc
fdivr
sarl
jp
pop
jl
or
imul
cli
iret
xchg
mov
test
push
lret
lods
adc
divb
adc
bound
inc
fcmovne
cmp
sub
and
fstpt
shrb
mov
pop
xchg
cmc
add
aad
ret
pop
int
call
mov
dec
adc
jg
and
dec
jnp
das
pushf
push
test
sbb
xor
fistl
fldt
mov
dec
pop
rcll
push
fisubs
ret
adc
pop
mov
pop
inc
jnp
mov
imul
pop
lods
push
test
mov
stos
mov
xor
jle
and
mov
and
rorb
repnz
mov
mov
test
shll
hlt
loop
and
lods
mov
jmp
pushf
lods
fwait
pushf
mov
loop
js
ret
sub
jo
mov
arpl
mov
jb
ficompl
stos
inc
add
xlat
add
pop
and
pop
cltd
loop
fsub
test
cwtl
fsub
mov
pusha
rol
loopne
addr16
es
jbe
int3
pop
jbe
pop
or
loop
fchs
adcb
inc
push
or
lock
jae
je
daa
pop
jae
push
mov
inc
icebp
in
xchg
aad
test
jnp
sbb
lahf
lock
lds
mov
sub
sub
hlt
int
inc
jae
fxch
scas
jg
pushf
shrb
clc
dec
mov
push
shll
inc
in
lods
jno
push
ljmp
scas
sti
inc
xchg
idivl
in
jne
data16
add
push
sub
in
rolb
mov
rorb
push
or
cmp
enter
cmp
pusha
in
mov
mov
dec
shl
sbb
or
xchg
insl
and
cmp
rorl
in
pop
test
lahf
adc
loopne
fildl
mov
out
push
stos
stc
js
push
sti
cli
pushf
cmp
jae
mov
sbb
pop
xchg
daa
mov
jo
cmpsb
addl
mov
jmp
jnp
mov
push
inc
cmp
popf
fiaddl
in
sahf
sub
mov
sub
rolb
pop
pop
fisubs
mov
lea
dec
mov
jp
push
cmp
daa
push
imul
ja
cltd
fists
int3
clc
mov
inc
push
das
xchg
add
fld
or
arpl
mov
call
mov
cmp
pop
movsb
cmp
add
jp
rorl
jmp
sub
push
xchg
add
sub
jae
inc
mov
xchg
xchg
test
aaa
mov
push
mov
bound
sbb
cmpsb
pop
jmp
rcr
cmpsl
call
mov
shlb
pushf
inc
sbb
cmp
push
out
jmp
and
xor
or
jle
vpsubd
enter
jb
fstpl
pop
pusha
fnstenv
test
pop
jnp
iret
lods
sub
movsb
outsb
scas
or
sbb
aaa
dec
and
pop
push
mov
imul
xchg
jae
les
add
ret
sahf
cli
incl
es
mulb
cwtl
repnz
enter
mull
fcom
dec
movsb
adc
lods
mov
pushf
movsl
mov
xchg
nop
stc
jp
cmc
xchg
xor
std
inc
test
jl
add
mov
or
pop
fnstenv
cwtl
pop
xchg
jmp
mov
hlt
push
movsl
out
mov
add
out
or
fistpl
movsl
cmpsl
jecxz
popa
out
or
or
mov
mov
ror
cmp
aaa
jbe
stos
mov
aad
lods
or
ret
arpl
scas
and
mov
jns
xchg
out
or
mov
jns
iret
fsubs
add
insb
sub
xchg
aam
bnd
addr16
dec
dec
sbb
insb
cltd
adc
mov
adc
or
pop
ss
xchg
xor
frstor
and
cmp
push
pop
shlb
fisubrl
mov
sahf
ret
rcrb
mov
ss
xor
cs
mov
pop
ljmp
push
pop
mov
aaa
pop
inc
lock
leave
js
in
push
pop
mov
sub
mov
mov
imul
fs
push
jecxz
shll
sti
int3
fildll
or
outsb
outsb
jle
nop
jo
sbb
mov
mov
cld
push
adc
and
or
jne
xchg
out
mov
pop
or
popa
pop
lahf
cld
xchg
push
lret
mov
and
and
lret
fimuls
aas
sbb
out
mov
inc
insw
in
and
mov
xchg
xchg
fbstp
adc
int
fnstcw
insl
mov
pop
fldt
bnd
push
mov
jl
xor
aad
xor
cmp
push
shrl
mov
scas
and
or
mov
test
adc
bnd
fcom
sub
xchg
fstpl
fs
cmpsl
pop
int3
pop
jecxz
ror
frstor
dec
dec
sbb
dec
mov
sub
in
dec
sahf
stos
test
ret
gs
jo
mov
cmpsb
pop
push
imul
sbb
aas
or
pop
arpl
mov
cmp
xchg
push
sub
stos
fs
fnstenv
pop
scas
out
cmp
mov
pop
jle
mov
in
sub
inc
adc
dec
dec
mov
cmp
add
daa
gs
insl
cli
movsl
inc
stc
sbb
sub
adc
or
mov
xchg
cmpsl
dec
push
les
sbb
lds
mov
mov
mov
out
mov
orb
clc
int3
imul
dec
frstor
xor
lods
and
sahf
sub
jbe
add
cmpsb
icebp
pusha
adc
fwait
arpl
mov
pop
pop
aad
sbb
gs
ret
xor
movsb
pop
push
fimull
icebp
jae
out
inc
scas
lcall
mov
pop
or
pop
neg
dec
frstor
ret
lods
cmpsb
push
push
and
adc
aas
insb
popf
push
call
mov
mov
xchg
out
addr16
and
mov
jbe
sahf
xchg
cltd
popf
or
fldt
sub
mov
pop
mov
xor
or
or
mov
push
dec
mov
mov
cld
clc
mov
addr16
push
pushf
cmp
xchg
adc
cs
xchg
cld
fcomps
lret
in
sbb
jns
or
xchg
pop
lea
push
or
shlb
stos
sarl
mov
pop
add
sbb
mov
sub
movl
ss
adc
push
clc
fdivl
sbb
mov
adcl
push
and
push
stos
call
dec
call
or
shll
jno
jle
bound
mov
cs
cmp
xor
insb
dec
mov
xor
out
into
jge
in
inc
adc
mov
mov
mov
cmp
repz
shr
and
scas
xor
adc
pushf
mov
push
push
cmpl
jb
inc
sti
and
dec
inc
es
pop
push
jae
popw
ficoms
imul
pop
pushf
cli
cmp
pusha
fisttps
nop
xor
stc
fdivl
arpl
mov
pop
mov
nop
pop
orb
repnz
push
mov
je
aad
std
lahf
test
xchg
inc
mov
inc
pop
mov
push
cld
test
addl
jno
cmp
cmp
cmc
testb
sub
xchg
push
jl
mov
lret
mov
mov
ret
lock
adcl
testb
sahf
aas
adc
push
dec
sbb
or
mov
mov
cwtl
ret
cmc
cmpsl
mov
jno
out
adc
xor
decb
aaa
cmp
fistpl
push
rcrl
adc
cmp
mov
pop
jg
adc
add
test
sahf
pop
cmpsl
inc
sub
inc
pop
push
test
sbb
scas
sbb
xchg
stc
cltd
out
nop
or
fwait
int3
sbb
mov
cmp
jg
test
sahf
or
jbe
test
popf
imul
xchg
stos
dec
mov
sarb
fdivl
sbb
adc
test
cmp
jg
jecxz
push
lea
pop
loop
stc
int3
inc
push
sub
dec
pusha
popf
test
dec
mov
jnp
xchg
fucomp
jo
out
push
lds
pushf
int3
pushf
or
cwtl
in
sbb
xchg
pop
add
jno
dec
pop
xlat
add
loope
mov
rcl
cmp
std
xor
lahf
call
imul
mov
inc
pop
dec
push
or
pushf
sbb
shrl
mov
inc
mov
xchg
mov
push
jge
cmp
pop
push
rorb
mov
cmp
mov
sub
jp
loop
mov
push
add
data16
dec
imul
sub
jae
or
imul
fs
loopne
ljmp
jmp
sbb
jl
sbb
hlt
xor
and
js
inc
cmpsb
mov
leave
mov
adc
adc
adc
sahf
inc
mov
mov
and
push
aas
fisubl
jne
idivb
aaa
push
test
out
xchg
push
cmp
or
das
int3
stc
adcl
bound
mov
rcr
negb
xchg
push
aam
cmp
cmp
jl
test
mov
mov
mov
cmp
push
mov
pop
sbbl
and
scas
popa
lods
sub
jecxz
loopne
jae
add
mov
jecxz
stos
ljmp
sub
sarl
jb
jo
aam
lods
cltd
jnp
fwait
in
or
scas
adc
inc
cs
dec
xor
fs
jle
cmpb
cmp
xchg
inc
loop
cmpsb
sub
enter
fsubs
mov
repz
outsb
pop
xchg
pushf
and
pop
push
fs
or
jbe
movsb
jle
xor
ficompl
gs
fldcw
cmpsb
fwait
out
imul
or
or
mov
rorb
sbb
out
dec
imul
je
jecxz
inc
shll
sub
lods
or
push
inc
aad
mov
lods
sub
or
call
stos
mov
adc
call
addr16
push
loopne
loop
xlat
push
cmp
xor
mov
xchg
in
mov
adc
add
cwtl
xor
jo
mov
iret
dec
jmp
cmpsb
mov
or
jle
int3
mov
loop
cmpsb
mov
test
push
out
ljmp
stos
sbb
popf
loope
push
hlt
add
add
icebp
xor
test
sahf
xor
pop
xlat
pusha
mov
lds
cwtl
lahf
pop
push
scas
addr16
cs
bound
scas
jo
iret
fiadds
xor
inc
fdivp
lcall
frstor
mov
adc
jmp
fimull
xchg
rcl
pop
push
pop
add
test
xchg
pop
in
xchg
cwtl
rcl
dec
outsl
or
mov
xchg
stos
add
push
and
mov
cmp
icebp
popf
icebp
in
and
aam
push
dec
xchg
dec
push
outsl
aas
in
mov
push
push
add
jne
xor
xor
aam
popf
lock
mov
mov
loopne
call
jl
push
mov
push
mov
test
stos
outsb
in
adcl
lea
jle
mov
and
mov
or
lds
arpl
xchg
dec
and
inc
pop
and
in
cld
rcrl
and
in
dec
or
icebp
stos
sbb
cmp
cmp
push
or
gs
or
pop
mov
sub
cld
pop
push
pop
mov
mov
pop
pop
sbb
lcall
outsl
je
cmp
rcrl
out
mov
in
imul
sub
jno
out
out
lea
lret
jecxz
fsubp
pop
lcall
cltd
insl
lahf
dec
lea
mov
testb
shll
shl
jb
sub
adcb
loop
fnstenv
mov
inc
lahf
call
ljmp
pop
daa
pop
aas
iret
pop
push
adc
movsb
sub
dec
in
or
adc
call
mov
inc
xor
adc
aaa
xor
cmpsl
lcall
jmp
and
pop
and
fimull
pop
mov
fiaddl
je
jns
pushf
testl
das
movsl
adc
mov
jmp
jmp
add
cmpsl
jecxz
and
cmp
mov
mov
pop
int
xor
inc
xchg
fdivrs
scas
dec
dec
jl
mov
fadds
cmp
jae
arpl
adc
add
jae
push
xchg
mov
scas
and
loopne
fwait
pusha
mov
xchg
cmp
push
xor
cmc
mov
or
and
cmp
sbb
mov
testb
pop
mov
mov
xchg
add
roll
jb
pusha
push
inc
scas
pop
or
cmp
ficoml
lock
addr16
into
enter
fwait
push
mov
test
dec
adc
add
fldenv
xchg
loop
bound
xchg
lret
push
pop
xor
addr16
repnz
int3
das
lcall
cmp
es
fstpt
xchg
pop
or
daa
and
sub
pop
push
add
or
jle
jg
mov
cmpsb
sahf
sbb
mov
and
je
mov
leave
jmp
out
cmp
push
pop
dec
jno
pop
push
fwait
in
cmp
imul
aaa
in
test
mov
jne
cwtl
ret
les
js
or
ror
loope
dec
push
and
or
sub
pop
lret
stc
pushl
in
sbb
int3
pusha
arpl
sahf
cwtl
stos
movsb
icebp
les
jb
cmp
add
pop
bound
movsb
add
and
mov
inc
sub
loop
push
pop
inc
aas
shl
fcoms
add
outsb
and
and
push
sti
sbb
push
inc
or
in
cltd
dec
mov
stos
flds
js
pop
fcomps
out
mov
test
pop
lahf
pop
into
scas
and
jg
inc
xor
cmpl
xor
dec
jno
test
jle
adc
outsb
add
lock
push
dec
xor
push
shl
outsb
inc
cmp
mov
sti
jle
and
out
xor
daa
mov
sar
sub
push
imul
mov
xor
adc
bound
mov
pop
xchg
xchg
adc
hlt
hlt
inc
inc
and
dec
popf
or
stos
std
mov
loopne
lret
cmp
inc
fwait
push
adc
stos
pop
push
outsb
dec
ds
fs
gs
int3
xlat
mov
mov
call
in
ds
inc
ds
push
add
sub
inc
aas
mov
divb
inc
xor
push
insl
mov
and
in
cmp
push
shlb
or
iret
or
adc
adcl
mov
add
mov
sub
inc
cmp
jae
scas
ja
xor
ja
pop
inc
mov
repnz
mov
stos
xor
pop
fcoms
cwtl
rolb
cmp
fucomp
pop
out
pop
stc
scas
pop
mov
fxch
pushl
and
mov
xor
daa
test
mov
subb
jne
push
pop
cmp
or
lahf
mov
cmp
cmp
leave
and
sub
cmp
lcall
test
out
fcompl
xchg
mov
inc
gs
mov
sbb
or
lock
xor
insb
decl
mov
mov
mov
inc
mov
repnz
nop
pop
popa
pop
sbbl
loope
pushf
rcr
xor
test
cmpsl
enter
stc
adc
scas
add
push
cmpb
aas
lock
fadds
mov
les
fiadds
push
dec
push
and
or
fs
jno
inc
or
les
hlt
lcall
fiadds
cmp
inc
adc
add
dec
jno
mov
xor
mov
inc
cmc
addb
and
fwait
mov
or
popl
leave
in
stos
std
dec
iret
sar
xor
pop
pop
sbbl
loope
punpckhdq
outsb
lahf
or
jnp
inc
sub
lret
inc
insb
cld
mov
pop
jns
xor
lahf
cmp
test
lds
xchg
mov
cmp
lea
jb
dec
sahf
sbb
movsb
mov
xor
push
push
imul
xor
fs
ds
push
and
mov
inc
adc
in
mov
sub
mov
xchg
mov
out
test
xor
pop
jmp
popf
sub
fwait
xor
loopne
int3
lds
mov
mov
cld
push
cmp
clc
not
and
das
fldt
mov
mov
xchg
xor
dec
pop
imul
das
std
xchg
aaa
mov
fcoms
dec
pop
adc
das
add
mov
cltd
add
jo
cli
or
push
dec
mov
xor
jb
lock
jno
mov
loopne
jns
test
xlat
test
pop
mov
je
pop
mov
adc
jp
jnp
in
cwtl
fwait
mov
push
aam
add
int3
loope
dec
xchg
out
adc
movsl
sbb
sbb
ja
push
sub
std
out
pop
bnd
mov
scas
adc
fnstenv
jne
fdivs
ds
adc
inc
jl
adc
xchg
add
jp
mov
nop
add
fsubr
dec
pop
hlt
xor
mov
shrl
cmp
imul
push
orb
cmp
adc
stc
push
movsl
jle
testb
mov
inc
cmp
out
dec
adc
lahf
or
rcrb
jmp
mov
imul
dec
add
pop
lods
rclb
pop
inc
mov
jae
hlt
sar
xor
add
sub
fistpl
movsb
mov
js
lret
sbb
xor
xor
jle
loope
mov
mov
add
movsl
dec
xor
out
mov
mov
lahf
rorb
lock
cld
test
cs
dec
test
xchg
xchg
int3
cmpsl
imul
xchg
stos
inc
scas
cmp
push
add
xchg
adc
scas
inc
sub
add
adc
repnz
xchg
and
xor
dec
lods
add
sbb
dec
cmc
dec
xor
fcmovnb
adcl
pop
mov
xor
lock
and
lds
mov
xor
cld
inc
mov
lock
inc
pushf
jle
push
push
and
sarb
inc
pusha
loopne
mov
mov
or
nop
pop
adc
pusha
xchg
mov
outsl
add
dec
xor
inc
adc
mov
or
mov
lods
push
aad
ja
jl
lods
xor
js
sbb
data16
cmp
mov
jecxz
dec
mov
push
push
mov
insl
in
jo
jp
lahf
loop
imul
pusha
rcrb
cltd
push
clc
xchg
stos
and
into
dec
es
cltd
xchg
rorl
push
sti
das
sbb
test
jmp
mov
gs
pop
mov
ljmp
and
mov
sub
outsl
xor
shrb
xchg
xchg
testl
push
sbb
mov
bound
add
inc
xor
dec
filds
sbb
ds
clc
dec
jb
mov
add
out
aad
iret
sub
fwait
pop
icebp
and
xchg
outsb
mov
jne
pop
mov
pop
cli
aas
push
mov
cli
addr16
bnd
arpl
xchg
jb
mov
outsb
scas
xchg
mov
push
and
shl
ficoms
mov
xchg
ds
pop
pop
iret
push
nop
inc
pop
sti
inc
cmp
inc
mov
xchg
xor
cmp
sub
dec
sbb
aas
in
lret
scas
int
sti
rorl
out
adc
pop
cmp
test
push
add
inc
jecxz
mov
jecxz
push
sbb
ret
stos
dec
leave
add
mov
jp
cmp
dec
push
mov
out
ss
pop
fsqrt
ss
enter
shlw
mov
aam
inc
cmp
movsb
aaa
mov
shrb
mov
fcmovu
daa
call
or
push
sub
mov
or
adc
popf
loopne
mov
push
js
push
xorl
scas
in
and
jmp
cld
cltd
ljmp
mov
mov
out
mov
sti
adc
jmp
out
dec
add
dec
sub
add
std
xor
jmp
pop
jno
test
sub
arpl
mov
aad
lahf
cld
xchg
loopne
jb
push
mov
stc
dec
jbe
mov
jns
mov
dec
jmp
call
mov
iret
jge
xchg
in
jb
mov
imul
sub
in
in
mov
ds
push
push
aam
pop
lret
fildl
cmp
fwait
xchg
mov
sub
data16
sub
loope
sub
scas
inc
sahf
adc
cmp
mov
popf
or
sbbl
fmul
iret
push
pushf
mov
movsb
test
xor
sub
mov
xor
pop
bound
jecxz
pop
es
jns
mov
jecxz
pop
int3
jl
dec
cmp
aam
mov
aam
inc
cmpsl
adc
adc
xor
adc
out
loopne
mov
mull
dec
jge
aam
lret
int3
call
inc
scas
mov
xchg
int3
lods
xchg
incl
pop
sbb
outsl
mov
or
enter
sub
lods
cmp
mov
pop
leave
and
mov
jmp
fistpll
or
add
add
loop
popf
ljmp
into
jmp
mov
adc
adcb
imul
fwait
jo
repz
jns
sbb
ficomps
dec
loopne
jno
hlt
into
add
scas
lods
push
mov
out
movsb
dec
iret
and
sbb
mov
pop
stc
or
icebp
sbb
adc
dec
sti
rcll
jmp
int3
mov
out
xor
jo
jle
xchg
mov
popf
xor
rolb
fmuls
and
sub
imul
call
js
je
jecxz
popa
mov
shlb
clc
inc
icebp
dec
out
outsl
mov
pop
lods
pop
dec
or
insb
mov
pop
sbb
sbb
mov
cwtl
inc
add
xor
xchg
imul
mov
mov
or
or
aas
sub
jb
cli
lods
test
mov
mov
iret
jns
insb
enter
fnstsw
stos
mov
xor
imul
xor
into
jae
negl
push
addr16
int
stc
in
push
push
clc
out
mov
aas
sub
mov
mov
add
adc
push
add
sub
aas
leave
test
pop
add
lahf
inc
jb
and
cmp
imul
mov
dec
inc
es
mov
or
mov
add
sub
or
in
test
in
daa
scas
pop
dec
add
cmp
cli
rolb
imul
sub
inc
shrb
mov
repnz
iret
or
loop
fsqrt
inc
subl
push
pop
inc
addr16
xor
dec
movsl
sub
sub
mov
pop
cmp
push
loop
and
sbb
adc
jno
xchg
cld
in
jecxz
xchg
sti
fisttps
mov
jnp
inc
lcall
adc
das
pop
loop
adc
sub
mov
cwtl
or
std
pop
add
fstps
mov
and
lods
clc
mov
sbb
lock
lock
sub
and
insl
or
stos
mov
jo
mov
mov
and
mov
pusha
or
jnp
xchg
cmc
enter
dec
xchg
fwait
xor
ds
mov
jmp
fstpl
loope
arpl
lods
xchg
in
lahf
adc
repz
stc
addl
jo
sahf
push
popa
in
add
test
cmpsb
mov
in
inc
fs
inc
mov
mov
cmp
in
add
mov
push
cmp
cmp
sahf
jecxz
add
decb
repz
xchg
sbb
cld
sbb
cwtl
push
pop
dec
push
test
inc
movsl
cmpsl
je
cmp
lods
add
dec
test
dec
xchg
cli
movsl
xchg
jns
aas
pushf
mov
xchg
in
lods
pop
xchg
mov
cs
lret
shrl
mov
xlat
jnp
out
xor
pop
cmp
sbb
sbb
jne
jae
fs
mov
scas
jl
mov
lock
gs
shl
jno
or
dec
mov
or
cmp
sbb
scas
or
mov
dec
sarl
adc
mov
cmp
jbe
out
lods
push
push
jae
pop
daa
push
nop
mov
out
push
outsb
lahf
push
jno
sar
fwait
mov
leave
mov
mov
stos
inc
enter
rcrb
call
aaa
data16
pop
mov
rcll
mov
mov
jp
and
in
push
xor
out
adc
xor
and
idivb
popf
mov
dec
test
inc
mov
fmuls
les
imul
out
xlat
push
cmp
insl
out
push
push
fwait
pop
dec
or
xor
std
ljmp
lods
fxch
andl
and
sub
jno
movsb
mov
lret
cmpl
mov
scas
fidivrs
mov
loope
mov
mov
xlat
dec
inc
out
or
sbb
inc
push
mov
stc
idivb
jle
rcll
pop
mov
imul
or
and
shll
fadds
ret
inc
leave
leave
pop
dec
add
pop
push
leave
scas
dec
push
ss
or
es
pop
hlt
jle
stos
ljmp
and
sbb
cmp
insb
or
flds
sbb
mov
xchg
and
pop
and
adc
inc
inc
rcrl
cmpsb
dec
pop
adcl
jmp
ljmp
cld
pop
jmp
jne
daa
sbb
divl
sti
fldl
popf
and
aad
push
pop
pop
test
sbb
popf
adc
sub
sub
xor
in
mov
div
stc
dec
xor
mov
lods
dec
lret
and
push
mov
jae
mov
movsl
cmpb
sub
test
das
dec
inc
jbe
pop
rclb
inc
mov
add
lds
xchg
daa
ror
out
cli
add
sub
jg
adc
loopne
rclb
pop
push
int3
flds
inc
loop
jbe
and
fs
xchg
dec
adc
jp
mov
into
jnp
xor
xchg
jae
and
inc
xor
pusha
mov
lea
lcall
call
fadds
pop
and
fldcw
outsl
outsl
xchg
jns
inc
insb
sbb
je
mov
push
aam
inc
sarb
test
ret
push
out
pop
sahf
ss
movsb
hlt
int
and
jnp
pop
adc
push
sarl
jge
insb
ret
repz
aam
cmp
mov
jecxz
jae
adc
hlt
mov
pop
cmp
push
mov
ja
out
and
pop
cmp
mov
jo
inc
pop
dec
test
mov
shrl
das
faddp
mov
subl
test
mov
jmp
out
inc
fisubs
idivb
ljmp
dec
xor
loopne
pusha
enter
hlt
push
pop
popa
out
pop
pop
mov
mov
fmuls
lods
cmp
sub
push
clc
fsubl
dec
loope
pop
cmp
ja
mov
movhps
fwait
mov
push
ss
pop
mov
or
push
sbb
dec
sahf
xor
test
aas
or
stos
cmp
repz
test
pop
add
mov
rorl
cmpsl
scas
or
enter
test
repz
mov
shll
inc
push
shll
loopne
dec
push
mov
mov
scas
mov
xor
ds
cwtl
mulb
ss
jae
pop
jg
loop
pusha
add
test
dec
or
insb
jb
fnstcw
jg
iret
pop
jecxz
mov
repnz
scas
cli
mov
movsl
mov
adc
lcall
jo
xchg
ret
push
mov
or
and
pusha
push
sti
adc
cmp
mov
ljmp
clc
das
repnz
xchg
loop
aaa
jbe
aaa
sub
dec
xor
push
cmp
lahf
mov
enter
rorb
push
int3
inc
pusha
mov
sbb
mov
popf
test
popf
fs
es
hlt
fdivr
outsl
iret
cltd
std
mov
movsl
push
or
or
cmp
sahf
arpl
xchg
pop
and
dec
scas
pop
push
jmp
je
pop
mov
sbb
or
scas
aaa
sbb
into
sarb
std
imul
mov
pop
lds
jecxz
movsb
pusha
cltd
lods
test
mov
and
push
jb
xchg
mov
fcoms
push
fisubrl
cli
push
add
mov
jg
sub
andl
les
xor
ss
sbb
mov
scas
pop
or
adc
dec
in
inc
pop
addr16
je
adc
std
sahf
mov
hlt
in
jno
inc
jp
xor
push
frstor
test
imul
ljmp
or
fxch
add
xor
add
pop
xor
and
lock
dec
jbe
xchg
stos
xor
aaa
sub
jns
push
stos
mov
adc
mov
out
push
adc
in
repz
add
dec
fstl
aaa
icebp
lret
push
int
sbb
insb
js
leave
in
sahf
push
push
lret
fidivrs
xchg
and
addr16
mov
popa
out
mov
and
outsl
pop
sbb
cmp
fdivrs
aam
inc
sbb
inc
pusha
add
sbb
inc
test
mov
push
push
arpl
lahf
mov
sahf
cli
pop
jmp
pop
push
insl
mov
cmp
divb
jl
xchg
add
enter
fcoml
jns
mov
gs
movzwl
mov
mov
bnd
dec
push
enter
cmp
addr16
push
inc
or
call
lods
inc
pop
push
aas
stos
or
loopne
xchg
loop
xor
pushf
rcrb
jne
js
or
repnz
push
pop
orl
lea
das
mov
inc
int
and
push
push
int
sbb
cli
in
and
subb
xlat
jne
insl
test
test
and
mov
adcl
mov
jg
xor
jno
in
cltd
xchg
lea
sbb
sbb
pop
or
adcb
xchg
adc
daa
jp
lahf
and
add
xchg
fcoml
fstpt
stc
and
ficoml
push
aaa
aam
cmpsb
mov
and
dec
jecxz
ret
outsb
mov
xor
inc
arpl
inc
adc
and
in
pop
mov
pop
cwtl
xchg
mov
jnp
mov
push
push
pop
jge
mov
or
push
pop
pop
pop
and
dec
out
jb
adc
scas
mov
adc
ficomps
and
push
test
cmc
xor
negb
xchg
mov
lods
mov
test
xchg
aam
leave
test
pop
add
repnz
inc
sub
dec
mov
or
inc
xchg
push
fs
push
xor
arpl
mov
rcl
adc
in
fldcw
cmp
sbb
leave
jbe
fwait
ds
jne
and
mov
xchg
inc
mov
ficoml
pop
ficoml
or
ret
lods
mov
adc
mov
in
int3
add
xchg
outsl
gs
icebp
and
int3
insb
sub
fcompl
xchg
das
pop
jecxz
sub
filds
xchg
pop
lds
filds
jl
ret
or
lcall
and
outsl
pop
mov
jnp
insl
jae
daa
loopne
mov
dec
hlt
jbe
cmp
pop
cmc
lock
ret
aas
push
test
sti
fldenv
call
std
in
cmp
adc
sbb
rcl
lahf
inc
into
fs
xchg
pop
push
mov
test
sbb
push
icebp
mov
inc
dec
push
mov
cmp
cmp
in
sub
sbb
int3
jp
mov
scas
push
outsl
and
push
cmp
inc
sub
cmp
cmp
cmp
dec
repz
jp
xchg
data16
into
mov
loopne
push
mov
mov
or
sbb
lods
push
das
pop
jecxz
jle
and
pop
stos
mov
fadd
inc
cmp
loope
sti
push
xor
cmpsl
inc
in
cld
cltd
xchg
jmp
push
pushf
arpl
cmp
fadds
sarl
adc
clc
jecxz
inc
iret
jmp
xchg
ret
inc
xor
inc
stc
dec
dec
cwtl
jge
aad
and
lret
sahf
mov
insb
dec
cmp
lods
cs
sbb
xlat
add
xor
fwait
inc
roll
xchg
mov
sub
fmuls
dec
mov
push
lret
bound
add
xor
push
out
in
add
loopne
xor
repnz
fisubrs
xor
leave
int
xchg
dec
les
dec
imul
mov
add
andl
mov
push
adc
daa
pop
clc
sub
pop
scas
xor
sarl
cmp
mov
test
into
cmp
sti
jne
mov
jo
mov
add
cmp
sbb
mov
pop
cmpl
lret
adc
stc
lods
js
lret
xchg
lock
and
mov
ljmp
push
mov
pop
cmp
lds
mov
pop
xor
and
mov
lret
das
cld
shrl
mov
out
fstpt
cmpsl
shl
fdivs
es
sahf
mov
repz
cmpsl
out
cmp
mov
scas
push
jns
out
sbb
mov
sbb
ds
push
lock
mov
imul
out
cmpsl
xor
stos
movsl
jbe
mov
mov
aas
add
stos
mov
sbb
faddl
or
push
mov
sahf
testb
sub
jnp
cmp
daa
clc
sbb
and
pop
push
mov
icebp
adc
in
lods
dec
xchg
sub
or
pop
cwtl
dec
into
lret
insl
loopne
stos
incl
fcompl
subb
cmc
sarb
loopne
out
adc
cmp
out
pusha
aad
repz
add
jp
mov
and
mov
in
adc
push
and
mov
push
xchg
scas
and
rclb
dec
xchg
movsb
aam
or
or
aad
push
push
adc
pop
es
mov
add
fwait
shrl
fcmovnu
adc
cltd
lods
add
ds
or
mov
stos
add
clc
sahf
and
adcb
lahf
and
dec
or
dec
incl
cmp
pop
and
movsl
sbb
lods
adc
jp
iret
sub
push
iret
pop
dec
aad
fisubrl
inc
and
fwait
in
sbb
ljmp
pop
pop
cld
les
imul
out
fcom
test
daa
fists
lcall
aas
or
mov
xor
xor
les
aad
adcl
insb
mov
push
popf
fiadds
jle
push
imulb
aad
mov
lahf
cmp
lahf
pop
sbb
shlb
push
mov
pop
jbe
xchg
xchg
insl
ljmp
mov
rorl
gs
push
ret
fstps
cmpb
adc
les
loop
pop
mov
or
mov
xor
lea
inc
fistpll
aaa
push
gs
and
imul
pushf
rcrb
repnz
stos
inc
inc
inc
out
add
lock
sub
lret
adc
mov
pop
pop
sbb
lds
scas
sub
sarb
xor
ljmp
adc
ret
inc
out
inc
ret
push
hlt
rclb
fisubs
imul
push
mov
outsl
adc
ss
int3
ljmp
push
mov
pop
sbb
sub
sahf
in
adc
mov
adc
xor
add
sbb
sub
xor
mov
cmc
inc
add
shl
pop
aas
into
add
mov
icebp
ss
cmp
mov
aas
inc
and
sbb
sbbl
dec
cmp
adc
dec
insb
jmp
add
ds
fisttps
push
push
or
jecxz
and
dec
sub
test
lahf
mov
xor
xor
cmp
dec
xor
enter
xchg
jge
stos
sbbb
fdivp
sbb
imul
and
xchg
lret
sti
fsqrt
fisttpl
stc
xchg
inc
mov
lods
jo
mov
push
pop
inc
fisubs
sub
jb
and
jae
scas
scas
adc
cmc
mov
and
pop
enter
add
inc
jmp
cld
popa
sahf
cmpsl
cltd
outsb
add
jo
lret
mov
cmpl
adcl
mov
and
jle
test
pushf
pop
in
cwtl
jo
jg
xor
push
push
iret
cmp
pop
sub
dec
adc
adc
mov
in
cmp
enter
ds
dec
pushf
loop
test
in
enter
mov
sarb
sbb
fmul
inc
or
jae
fimuls
inc
cli
push
bound
adc
aaa
bound
and
mov
lds
icebp
enter
or
sbb
out
mov
adc
dec
aas
push
or
cmp
and
lcall
or
cmc
mov
ret
mov
or
dec
xor
and
pop
push
loopne
inc
daa
dec
leave
jle
ret
sbb
inc
cmp
xlat
in
shll
push
pop
insl
cmp
sti
jo
mov
jo
jae
and
xor
and
pusha
das
loopne
out
pop
into
cmp
or
jmp
mov
sahf
test
es
jle
clc
push
ret
mov
adc
xchg
aas
and
pop
sbb
js
inc
lock
xchg
in
ror
ret
jns
out
inc
mov
addb
in
neg
xchg
push
shrl
icebp
ret
pop
and
mov
push
mov
xchg
je
jae
jl
and
hlt
xchg
pop
ret
stos
scas
loop
inc
xchg
ljmp
into
cli
push
iret
iret
or
mov
or
decl
imul
jg
or
cpuid
xchg
nop
xchg
call
push
int
dec
test
pusha
adc
icebp
stos
sti
sbb
push
mov
xchg
loop
cmpsb
rep
xor
jmp
aad
pusha
sub
add
imul
push
xchg
sub
or
in
divl
inc
fistpl
cltd
ja
adc
mov
repz
mov
int
hlt
fsts
popa
out
movsl
addr16
jmp
sbb
jo
test
notb
add
push
add
lret
leave
mov
push
xor
mov
jo
ds
lea
rcl
cld
xchg
fdivrs
jno
inc
fsubs
scas
sbb
mov
add
xchg
sub
xchg
or
rolb
push
mov
xor
add
xor
loopne
scas
sbb
fmull
mov
xor
stos
aad
mov
sub
mov
rclb
push
in
hlt
cwtl
mov
leave
mov
mov
sub
out
fsts
insb
outsb
xchg
mov
xchg
lcall
aad
or
push
leave
sub
rorb
pusha
icebp
mov
mov
aas
cld
cmp
xchg
cmc
test
outsb
push
rcrl
xlat
add
out
je
pop
mov
mov
push
push
leave
inc
bound
out
pop
xor
cmpsb
into
inc
mov
sub
into
js
jg
jbe
orb
shll
mov
mov
sbb
push
mov
xchg
clc
arpl
lahf
pusha
imul
jle
mov
and
xchg
out
push
xor
jmp
data16
add
cltd
decl
shll
mov
xchg
std
pop
adcb
jmp
clc
cmp
adc
or
jb
dec
xchg
add
add
test
mov
shr
loope
test
dec
hlt
movsb
rorl
mov
sbb
push
sub
mov
sbb
or
xchg
mov
xor
mov
jg
fwait
ljmp
pop
cwtl
or
outsl
xchg
pushaw
add
xlat
movsl
mov
cwtl
outsl
add
ja
mov
fnsetpm(287
jbe
in
clc
test
movaps
repz
add
popa
iret
std
loop
mulb
cmp
insl
lahf
pop
in
mov
nop
inc
addb
xchg
in
cmpsl
and
imul
pop
push
rorl
inc
jb
inc
push
jg
or
push
jne
and
xchg
push
lods
dec
aas
rorl
hlt
rcll
pop
pop
clc
aaa
sbb
lock
push
dec
insl
pusha
test
out
push
imul
out
loopne
fwait
mov
ss
imul
xor
stc
inc
cmp
movsb
sbbb
add
lahf
dec
add
xor
jge
fisubl
imul
js
cwtl
test
mov
mov
add
faddp
push
push
enter
popf
lock
push
out
fcoms
in
test
xchg
insb
sbb
or
arpl
push
cmc
out
push
les
add
or
ret
pusha
ret
or
in
pop
xchg
fwait
xchg
jb
int3
mov
pop
bound
mov
push
rorb
sbb
movsl
mov
rcrb
dec
shl
adc
and
lcall
test
mov
push
fdiv
out
fadd
xor
sub
push
mov
and
cli
sbb
jp
mov
out
ret
cltd
mov
das
addr16
enter
jg
cltd
cmp
cmp
xorb
out
sbb
sbb
inc
sbb
in
sti
jnp
into
xchg
mov
in
inc
jnp
add
test
aad
mov
xor
enter
daa
into
xchg
mov
xchg
sub
mov
sub
lret
mov
aad
rorl
and
or
jge
aaa
push
imul
sub
mov
stc
std
test
add
inc
in
jg
ss
lea
rcr
enter
adc
mov
test
add
cmpb
xchg
mov
and
mov
sub
ljmp
in
xchg
mov
and
gs
das
pop
xor
cli
cwtl
dec
sbb
lcall
mov
adc
xor
mov
aas
mov
xchg
icebp
je
mov
jecxz
jl
push
jnp
cmp
add
push
adc
mov
mov
xchg
pop
hlt
mov
jo
andb
out
jmp
jle
sub
scas
sbb
cwtl
loopne
ret
pop
adc
pop
ds
adc
dec
out
cmp
push
xchg
cmpsl
out
inc
dec
testl
jp
sub
mov
popa
orl
outsb
cwtl
adc
cmp
xor
jns
and
pop
psubq
mov
xlat
in
fmuls
ljmp
mov
fsubrs
add
imul
pushf
mov
cli
scas
add
xchg
movsl
negb
cmp
push
add
and
sti
bound
xor
das
jo
inc
mov
mov
push
jp
cmp
mov
imul
push
imul
iret
es
aas
adc
inc
add
rclb
pop
push
push
dec
dec
cmpb
jecxz
add
in
sub
data16
xor
outsl
push
insl
lods
adc
ljmp
pop
jnp
push
int
and
icebp
fld
jo
mov
or
and
mov
loopw
mov
inc
or
xchg
in
xor
in
outsb
insl
sbb
mov
subb
std
or
outsb
sbb
fdivr
andl
xchg
repnz
gs
inc
sbb
fisubrl
inc
push
adc
test
cmp
xor
dec
ss
rcrl
and
js
popf
cmp
inc
int3
add
sbb
je
sbb
outsb
jne
add
clc
sub
jae
das
les
icebp
outsb
movsb
lret
fsubs
pop
mov
fldcw
mov
sub
inc
inc
in
in
dec
sbbl
dec
jle
and
aad
push
ret
scas
aam
mov
cmp
in
stc
inc
jns
dec
sub
fnstsw
lock
jecxz
add
mov
outsl
jle
lods
adc
test
pop
inc
pusha
inc
push
xchg
ds
lods
sbb
sub
pushf
dec
aad
insb
out
push
leave
enter
xchg
adc
decl
cmpsl
cmp
cmp
add
arpl
lret
jmp
jb
cs
jnp
daa
mov
aaa
cmp
shlb
insb
cmp
fs
stos
ja
test
cwtl
or
hlt
arpl
lods
orb
ret
leave
jae
ja
mov
out
jo
pop
xor
jmp
push
pop
add
and
sub
out
cmp
lahf
cmc
in
or
iret
and
sub
jg
inc
aam
lcall
js
popf
push
jns
iret
rorl
inc
add
inc
xchg
mov
test
inc
mov
inc
sub
insl
stos
xchg
inc
dec
push
lret
mov
sbb
daa
movsl
dec
xchg
bound
jbe
nop
dec
lcall
jg
fldcw
imul
adc
mov
and
rcl
push
popa
mov
inc
lods
sub
flds
stc
push
push
sub
or
aaa
add
push
lcall
push
lret
or
imull
xchg
mov
mov
pop
xchg
xchg
sti
leave
jae
jbe
fldcw
jl
push
mov
outsl
xchg
divb
pop
push
pop
loop
ja
add
es
cmp
xchg
add
scas
shrl
movsl
icebp
loopne
aam
bound
js
sbb
movsl
dec
js
fmuls
into
ss
or
jbe
repnz
adc
cmpb
pushf
outsb
incl
pop
int3
cmp
mov
jo
cld
lahf
pop
mov
xor
bound
sub
js
das
sub
idivl
sub
mov
psllq
mov
jp
lret
fistpll
ss
xor
leave
sub
push
scas
mov
dec
mov
adcl
dec
arpl
fs
int3
fldt
or
lret
and
sahf
mov
mov
sbb
outsl
je
fwait
popa
push
mov
ficomps
fcoms
jp
cli
and
or
sbb
lds
inc
test
mov
mov
cld
fnstenv
or
loopne
lea
cld
and
push
and
out
pop
add
mov
pop
stos
push
sub
add
ret
xchg
xchg
fnstcw
pop
fdivr
cmp
scas
push
mov
dec
icebp
sub
ret
addb
leave
cli
inc
je
dec
jno
das
je
fldl
mov
aaa
adc
xchg
hlt
loopne
popl
pop
call
inc
movsl
mov
fs
lds
jp
mov
icebp
jbe
mov
aas
test
add
cld
fwait
scas
push
mov
popl
shll
fdivr
sti
push
push
xchg
push
cmp
cmp
xor
mov
test
pop
add
int
test
mov
in
test
push
xor
int
fstpt
shrb
shrb
sbb
stc
xorl
jo
mov
sti
or
roll
xor
fs
in
inc
cwtl
into
sbb
inc
cmp
cmc
and
aad
aas
aam
inc
mov
cmp
out
mov
mov
xor
inc
dec
push
mov
fisttpl
scas
shll
inc
xchg
addr16
or
ret
mov
add
pop
dec
dec
out
cmp
dec
test
and
cs
cli
lock
lock
mov
xlat
mov
in
jno
push
or
xor
dec
sbb
ss
pop
insb
loopne
imul
loope
loop
enter
push
inc
cmp
mov
in
lds
cmp
jne
rclb
into
popa
push
cld
ds
in
push
mov
bound
adc
movb
dec
sub
out
enter
cmp
and
cmp
lods
pop
gs
cmpsl
loop
popa
ja
ret
adc
sub
lret
dec
popf
inc
or
pop
shr
sub
xor
dec
scas
outsb
dec
movsl
xor
movsl
bound
jns
sbb
jbe
cmc
stos
fisttpl
lods
outsb
mov
push
sub
xchg
cmp
jno
xor
rolb
imul
inc
ds
fwait
sbb
inc
xor
inc
adc
fimull
adc
mov
imul
fnsave
stc
gs
mov
sahf
movsl
mov
stc
in
loopne
movsb
shll
cmc
sbb
adc
pop
test
fcoml
adc
push
imul
push
xchg
jmp
mov
xchg
pop
daa
mov
cmp
fcom
jo,pn
movb
jle
iret
mov
jecxz
cmp
sbb
test
mov
je
scas
imul
push
test
mov
shll
bsf
mov
jnp
fwait
es
fimull
inc
mov
jge
xchg
dec
ret
clc
mov
div
outsl
icebp
cld
and
mov
cld
cmp
call
mov
add
add
lods
adc
test
mov
jge
daa
mov
mov
ds
push
push
inc
movsb
repz
xchg
cwtl
rol
jge
dec
cmpsb
push
add
mov
mov
pusha
sarb
jp
mov
fcomip
out
std
xchg
rclb
fistps
imul
push
ds
push
cmp
pusha
mov
stc
or
xor
inc
add
lds
aaa
aas
cli
mov
cmp
dec
adcb
add
mov
mov
inc
rorl
mov
les
cmp
sbb
pushf
sub
push
shrl
aam
xchg
gs
jecxz
fadds
dec
jae
aaa
inc
les
xchg
mov
out
aaa
mov
mov
adc
out
iret
pmulhw
inc
rorl
sbb
jb
test
mov
sbb
insl
push
jecxz
test
push
inc
inc
add
dec
aam
or
mov
stos
push
jmp
mov
loopne
jo
shll
or
imul
and
sbb
es
xchg
or
cmp
add
mov
into
cmpsb
mov
cltd
mov
adc
in
sub
sub
ja
jg
fstpt
or
imull
out
inc
sbb
insl
std
popa
testb
dec
cli
inc
js
ficoms
xchg
xchg
aam
sbb
int3
adc
and
fwait
pop
js
test
push
xor
scas
bound
les
fs
fisubs
imul
xchg
add
adc
fbld
mov
hlt
cmp
xchg
dec
dec
xchg
sub
cmp
push
arpl
repz
jns
aaa
decl
loope
jmp
sarl
adc
orl
mov
sti
das
xchg
adc
call
and
test
cmp
into
cmpsl
dec
pop
mov
leave
push
hlt
dec
lock
xor
pop
insb
jbe
sbb
dec
call
or
popf
lea
cmp
dec
pop
mov
repz
jne
scas
fnstcw
pop
ljmp
mov
ss
enter
inc
stos
leave
dec
leave
iret
idiv
ss
aam
jmp
pop
ficompl
fdivrp
call
lcall
popa
test
cmpsb
sbb
iret
ret
push
push
insb
dec
and
int3
xchg
mov
xor
fdivrp
or
out
jmp
mov
or
daa
cli
int
cmp
sbb
cmp
pop
ja
es
dec
jae
mov
xchg
jg
push
or
test
inc
dec
aas
add
mov
xchg
mov
xchg
das
add
xchg
out
bound
hlt
mov
movsb
adcb
and
icebp
jno
or
loope
xchg
push
xchg
bound
sub
push
mov
push
xor
int
cmc
cld
shlb
sbb
mov
rorb
mov
lahf
push
or
mov
sub
push
lret
jo
push
imul
cmp
dec
lods
mov
and
test
es
dec
scas
lock
xchg
pushf
sbb
xorl
int
lods
insl
mov
add
arpl
inc
xlat
push
mov
in
push
and
shll
mov
sub
sub
loop
xor
and
add
sub
mov
jp
fistps
insl
jne
gs
jp
iret
das
test
jp
sub
cmpsb
inc
mov
insl
fisubrs
xchg
insb
pop
ja
mov
das
add
pop
iret
dec
cwtl
sbb
pop
imul
pop
in
xchg
mov
cs
adc
adc
repnz
jns
xor
addb
popa
ja
sbbl
ja
jbe
mov
stc
ret
mov
stos
jno
pop
sbb
cmp
movsl
mov
js
imul
jae
test
scas
dec
mov
mov
mov
jg
sub
mov
inc
aam
scas
mov
or
lret
jp
out
bound
setg
sub
imul
inc
icebp
pop
sub
scas
and
sub
jns
ja
cmp
rcrl
mov
int3
in
leave
lret
call
loope
inc
mov
jne
sub
dec
in
jae
xor
sbb
std
cmpsl
xchg
jmp
movsb
rcrl
cli
sub
push
rcrl
pop
out
mov
cmp
sbb
lahf
dec
and
push
ljmp
call
push
push
aas
push
xor
into
lods
sub
cmp
cmp
daa
out
rclb
out
mov
jbe
scas
lock
movsb
decl
lcall
js
mov
and
pop
cmc
sahf
in
inc
xor
jnp
pop
or
lcall
orl
cld
sbb
xor
mov
adc
sub
dec
aam
and
xchg
xlat
and
outsb
mov
dec
pop
stos
cmp
pusha
nop
mull
adc
js
jns
mov
aad
dec
outsl
sarb
testb
sub
bound
mov
ja
out
cmp
cmc
jp
sbb
mov
pop
jae
xchg
dec
fdivl
mov
pop
mov
loope
push
mov
movsb
inc
aaa
dec
iret
xlat
push
and
mov
or
movsl
jmp
lods
pop
adc
les
cmp
scas
fcomp
cmpb
cld
lret
sar
movsl
outsl
shlb
data16
mov
mov
mov
adc
std
int3
sbb
sar
sahf
pop
and
xor
loope
enter
jl
xchg
mov
pop
mov
jbe
pop
push
ja
pop
inc
sbb
dec
push
in
pop
iret
and
or
mov
shl
push
dec
imul
mov
lods
ja
out
xor
shlb
jne
mov
cwtl
in
scas
push
adc
inc
imul
push
mov
jg
sbb
int3
bound
jo
scas
mov
lahf
or
xchg
idivb
stos
push
jp
rolb
inc
xchg
fwait
les
cs
or
push
inc
insb
sarb
dec
sbb
xor
mov
rcrb
inc
xlat
arpl
imulb
mov
adc
adc
cmp
int3
adc
mov
fistl
add
adc
sbb
les
adcb
mov
lret
sub
fsubl
mov
pop
pop
or
mov
mov
cli
push
mov
scas
xchg
pushf
jecxz
call
cltd
test
in
or
mov
nop
jl
xlat
out
pop
js
or
inc
mov
xchg
fisubrl
pop
test
jl
xchg
sub
jp
orl
pusha
push
and
bound
icebp
popa
ret
insb
xacquire
shl
mov
stc
and
lock
jecxz
nop
and
iret
pop
xor
out
xchg
sub
icebp
fwait
lods
or
js
add
push
inc
lahf
xchg
mov
fcmovb
rolb
addr16
add
jae
sbb
jae
enter
pop
roll
pusha
jle
or
jge
fwait
jecxz
shl
je
jnp
rcrl
pop
scas
xchg
fstp
scas
push
sbb
mov
jae
mov
lock
scas
mov
insb
inc
jne
xor
mov
adc
pop
xchg
bound
aaa
xchg
adcl
gs
add
adc
andl
xchg
out
lahf
test
repnz
cmp
pop
dec
loopne
daa
cli
jns
dec
lret
outsl
mov
xor
outsb
jl
stc
out
aad
and
fisttpll
mov
call
push
fdivrp
cmpb
dec
or
mov
push
imul
pusha
sub
or
shll
mov
lahf
shl
loopne
movsl
or
jb
cmpsl
xchg
movsl
dec
pop
dec
dec
iret
cmp
inc
jno
arpl
xor
dec
jmp
call
clc
and
or
les
out
out
jno
mov
lcall
lods
lods
cwtl
int3
or
push
dec
shrl
js
and
or
iret
mov
ja
mov
hlt
fildll
xlat
xorl
mov
movsb
arpl
scas
aad
stc
cmpsl
repz
in
daa
and
dec
lods
adc
xchg
aas
mov
pop
test
lret
xchg
sbb
jns
pop
inc
mov
jne
callw
add
icebp
mov
das
and
inc
cmp
loope
sub
jl
mov
cmp
mov
jb
inc
sub
push
jo
test
inc
push
pop
xor
adc
shrl
insb
cld
je
jnp
repz
outsl
adc
fstl
popa
popa
stos
cwtl
test
aas
sbbb
int
and
ret
jp
add
push
xlat
scas
rol
mov
daa
out
xchg
dec
clc
clc
mov
bound
rcrl
insb
push
xchg
lea
dec
dec
push
xchg
lds
mov
cmp
popa
cmp
cmpsl
aaa
rolb
lock
push
and
imul
pop
scas
lods
int
popf
mov
xchg
shl
test
dec
fstpl
out
inc
push
push
push
and
mov
test
push
mov
imul
out
mov
aas
dec
jb
aas
pop
cwtl
or
inc
lret
addl
pop
add
dec
lcall
mull
mov
jecxz
adc
adc
loop
mov
call
jne
sub
dec
bound
and
xchg
loop
inc
xchg
sbb
add
inc
pop
dec
xchg
push
scas
sub
push
cmp
lret
ds
add
mov
cltd
and
addr16
out
sub
mov
xchg
js
out
mov
aad
mov
jp
out
imul
xchg
jle
dec
in
out
aam
arpl
fdivrl
mov
daa
aam
mov
push
movsb
or
push
testl
mov
outsl
and
jl
add
mov
insb
pop
fists
cld
outsl
push
sub
xchg
xchg
and
lret
xchg
shrl
dec
inc
stc
xchg
mov
cmp
out
subb
call
push
push
stos
test
popf
jle
mov
popa
in
test
adc
dec
mov
mov
add
rsm
adc
out
addl
ja
sbb
mov
mov
pop
rorl
leave
jo
outsb
mov
clc
sub
in
sbb
hlt
lds
mov
fs
aas
push
inc
dec
aam
jae
sbb
mov
mov
mov
mov
popf
xchg
push
test
dec
adc
inc
inc
cs
cld
mov
jo
xor
sub
lods
testl
jbe
mov
subl
lods
negl
push
xchg
adc
jge
sbb
in
jge
sub
inc
xchg
and
mov
adc
mov
sti
inc
ret
test
sbb
pusha
aam
loopne
or
mov
inc
insb
push
test
nop
aad
ficoms
sbb
scas
or
negb
xlat
xchg
mov
ret
stos
mov
aad
hlt
insb
gs
inc
mov
jae
jmp
lods
fwait
sbb
dec
push
jae
sbb
pop
inc
adc
aam
push
pop
test
jb
jno
jno
jle
and
aaa
push
ss
mov
sahf
or
ds
xor
jne
mov
mov
xchg
mov
sbb
icebp
xchg
aas
aaa
outsb
rol
daa
inc
ss
push
inc
pop
orb
aas
test
nop
push
sub
cmp
add
cmp
in
sbb
xchg
insb
add
dec
js
cmp
out
mov
mov
imul
test
je
sub
xor
insb
pop
pop
jl
std
push
rcrb
imul
or
or
imul
cmp
hlt
add
cs
cmp
sbb
push
cltd
jne
dec
dec
std
std
lds
loope
loop
in
jge
stos
jg
lock
or
push
stc
fdivrl
scas
push
pop
ljmp
xor
mov
and
out
lock
pop
lcall
and
rclb
mov
shrl
pushl
in
cmp
fbld
popf
test
test
lea
sub
push
mov
cld
add
jno
sti
jecxz
dec
sbbb
ljmp
inc
and
sahf
and
les
inc
jecxz
mov
orb
sub
adc
addr16
push
cmp
inc
add
aad
and
xchg
lock
jge
es
xchg
data16
hlt
jnp
cmp
dec
cmpsl
push
jne
test
mov
test
dec
insb
adc
xor
jne
mul
or
push
mull
rcrb
xchg
xchg
lahf
pop
dec
das
jecxz
push
lock
ret
cmpsb
shr
xchg
out
push
pop
xchg
mov
push
int
jp
das
inc
not
pushf
cld
xchg
sbb
mov
mov
mov
cmpsl
out
xor
lods
pop
sbb
jmp
call
loopne
rcl
pop
cmp
jp
mov
idivl
sub
shll
lea
mov
pop
jb
lret
lahf
arpl
jno
pop
repz
imull
push
pop
std
mov
aas
mov
in
mov
mov
dec
pop
sbb
daa
xchg
add
pusha
ja
jno
ret
or
lcall
jmp
je
pop
add
or
jb
bound
into
rcll
xor
push
or
xchg
std
inc
mov
pop
scas
popa
inc
sbb
mov
call
test
aam
loopne
mov
aas
bound
stos
std
iret
pop
jb
movsl
xchg
adc
jecxz
int
sbb
sbb
xchg
add
jg
xchg
sbb
rcll
adc
addl
sub
push
mov
cltd
pop
fsubs
insb
dec
sbb
adc
stos
pop
inc
repz
arpl
sbb
mov
adc
in
mov
jecxz
lret
mov
and
add
and
jo
push
push
scas
jno
popa
inc
enter
out
mov
pop
or
fcomip
call
fmull
adc
lock
inc
in
add
idivb
arpl
cmpsl
pop
ljmp
sbb
leave
ljmp
dec
and
out
aad
js
insl
jl
mov
add
std
loop
arpl
das
mov
dec
or
ljmp
aam
pop
mov
fwait
mov
add
cmpsb
icebp
int3
shlb
mov
pushf
xchg
fdivs
aas
movsb
stos
push
lret
inc
aad
test
lcall
repz
sbb
fisubl
aad
mov
and
jmp
xor
imul
push
stc
push
lret
adc
scas
mov
mov
pop
sbb
sbb
cmp
pop
cmp
and
pop
push
inc
push
hlt
and
mov
sbb
test
dec
sbb
imul
mov
jnp
jbe
scas
gs
mov
xor
jne
pop
xchg
adc
cmc
mov
pop
dec
test
mov
nop
into
in
inc
xchg
push
imul
xchg
gs
sarl
inc
xor
je
adcb
jns
push
fld1
dec
mov
pop
jmp
jecxz
sbb
push
jae
cmp
cmp
or
stos
jne
mov
dec
sub
fs
test
mov
jne
imul
shlb
rolb
aam
test
call
add
notl
fidivrl
ret
inc
jge
nop
hlt
out
sub
adc
jge
mov
add
jnp
aaa
mov
xchg
dec
data16
jb
addr16
test
or
in
sbb
or
cmp
popf
movb
cli
pop
and
cmp
or
or
out
xchg
cmc
stos
add
fwait
cmp
outsl
xor
loopne
inc
jbe
adc
rol
or
imul
or
push
ror
and
mov
jmp
addb
and
sti
pop
mov
inc
xchg
and
mov
xchg
adc
jb
mov
ds
xor
or
je
shlb
mov
lods
sbb
add
lcall
nop
pop
aad
inc
popa
shlb
int
lods
ret
scas
aaa
cmc
adc
cmp
cli
repnz
jnp
gs
in
push
adc
subl
xor
mov
push
push
inc
push
hlt
xchg
mov
add
sub
movsl
daa
ss
sub
pop
je
lods
sbb
daa
mov
cmp
mov
add
dec
popa
push
cmp
and
loop
icebp
push
xor
cmpsb
addr16
push
mov
cmpsb
mov
cmp
dec
jb
jns
inc
ret
mov
mov
mov
mov
es
in
adc
push
lahf
js
push
sbb
add
addr16
and
or
dec
cmpsl
lods
fimuls
movsl
shrl
cmp
pop
je
add
push
dec
mov
arpl
sbb
imull
mov
dec
mov
xor
pop
or
or
cmpsl
and
lret
or
fsubr
lock
mulb
inc
push
cmp
inc
inc
mov
lock
fdivs
push
pop
dec
bound
out
add
jecxz
or
jbe
push
sub
xchg
sub
leave
jl
add
sub
stc
data16
ret
push
out
adc
or
hlt
mov
bound
dec
add
aaa
inc
dec
fwait
add
add
je
ret
push
sbb
scas
push
sub
rcpps
jl
pushl
and
cmpb
sbb
pusha
test
lods
packuswb
or
dec
and
sub
pop
and
int3
ret
cmpsl
data16
pusha
cmpl
mov
movsb
pusha
lock
mov
and
push
out
xchg
js
in
mov
inc
lods
cmp
xor
inc
xor
enter
xchg
jns
aam
lret
sub
cmpsb
xchg
cld
and
pop
dec
aaa
in
jp
cmp
mov
cmpsb
popf
push
push
xchg
call
jno
or
or
sub
pushf
loope
xor
mov
testb
cmpb
out
mov
dec
mov
and
mov
stc
jp
or
adc
xchg
mov
fs
roll
lds
dec
cmp
out
hlt
mov
adc
push
idivb
repz
sub
adc
push
sub
mov
sahf
sub
scas
pop
jb
sub
mov
push
loopne
sbb
icebp
mov
out
fcompl
stc
mov
push
add
adc
insb
pop
pop
out
cmp
inc
lret
inc
sub
scas
ds
cmp
or
dec
lea
ja
sub
cmp
test
jle
cmp
mov
or
cmpsl
lcall
mov
adc
add
movl
test
insl
add
xor
mov
xor
mov
pop
rcr
lods
mov
scas
jbe
bound
fcompl
je
add
adc
test
xor
push
push
imul
jecxz
mov
push
outsl
sbb
outsl
pop
xor
movsl
mov
xor
lea
ds
sti
scas
repnz
loop
mov
jl
mov
mov
sti
inc
push
and
cmp
inc
aam
mov
sbbb
das
inc
cli
into
or
mov
cs
in
lock
dec
cltd
push
data16
ret
in
push
add
adc
inc
adc
pop
add
mov
mov
mov
loope
xchg
pop
jecxz
imul
outsb
cwtl
bound
sti
popf
shl
fistpl
inc
mov
leave
dec
stos
pop
sub
mov
data16
ljmp
stc
inc
cli
dec
out
repz
lret
adc
adc
pop
inc
int3
dec
jmp
mov
cmp
xor
sarb
xor
xchg
mov
dec
xor
dec
xlat
shlb
lock
subl
xchg
fisttpll
std
ja
jp
pop
subb
in
inc
inc
hlt
mov
adc
clc
pop
test
das
dec
rcrl
push
jnp
jecxz
jmp
loopne
scas
pop
pop
pop
inc
jge
pusha
rolb
inc
jmp
lds
inc
cmpb
push
or
cmpsl
movsl
shl
in
andl
xor
and
pop
fcompl
lret
adc
data16
sbb
dec
pop
or
fwait
addb
stos
sbbl
pop
shl
and
cmp
adc
in
xor
aas
and
dec
push
jnp
mov
sbb
fsubrs
icebp
nop
dec
add
in
push
in
test
inc
loopne
rorl
lahf
dec
mov
or
cmpsb
push
mulb
mull
movsb
lods
push
mov
mov
clc
mov
xor
outsl
in
xor
cmp
roll
adc
in
jo
jmp
test
jbe
fcompl
adc
jns
movswl
push
out
sbb
sbb
mov
jne
out
pop
lret
pushf
outsb
xchg
cli
mov
sahf
push
enter
push
in
jns
movsl
adc
xchg
or
ja
or
push
dec
xor
int
in
mov
mov
test
lea
sbb
std
rol
sbb
arpl
add
push
les
adcb
int3
mov
imul
xchg
scas
sbb
mov
sbb
loopne
xor
test
xor
imul
jp
data16
push
std
loopne
cld
push
sbb
inc
xor
insb
aam
cltd
fimull
loope
sub
dec
pop
cmp
xchg
outsl
out
lahf
push
adc
or
pop
sbbl
push
orl
sub
mov
fwait
je
mov
out
movsl
in
pop
sub
jb
and
sbb
enter
leave
pop
dec
push
aam
add
push
mov
jo
inc
cltd
push
mov
adc
out
push
faddp
aad
repnz
hlt
fs
pop
aam
sahf
dec
stc
es
daa
xchg
xorb
int
dec
repz
cmpsl
or
rol
popa
mov
jo
ja
out
movsb
xor
mov
mov
ret
dec
push
push
sub
mov
inc
lods
movsl
std
mov
mov
stc
xchg
rolb
mov
lcall
mov
orl
mov
mov
lds
sbb
nop
rolb
pop
cs
and
xor
inc
push
out
lea
mov
sti
sub
stos
jne
addl
imul
or
out
iret
pop
lret
dec
insb
adc
add
js
push
stc
mov
clc
pop
jae
fucom
inc
cld
or
xchg
add
les
shrl
psubw
mov
mov
push
sbb
movsl
std
xor
jns
bound
push
or
jp
adc
jle
pushf
cltd
ss
fidivrs
pop
decb
adc
add
cld
sub
xchg
daa
shlb
sub
sub
aad
je
pusha
jmp
adc
mov
popl
push
movzwl
inc
jmp
sub
jbe
mov
jg
xorl
xlat
sahf
jle
mov
sub
test
cwtl
mov
aam
dec
cmc
out
cld
sub
pop
mov
cli
xlat
shrb
or
or
inc
shlb
lods
dec
gs
and
mov
imul
mov
mov
negb
pop
lahf
in
xchg
add
scas
hlt
aad
data16
scas
sub
das
or
cld
repz
sbb
dec
aam
inc
push
cmpsb
or
ficoms
xor
inc
cwtl
and
add
xor
push
inc
adc
dec
cmp
add
lods
paddusb
add
inc
push
rorb
repnz
dec
cmp
pusha
cmp
adc
insb
subb
push
and
mov
sahf
adc
and
in
fistpl
js
sbb
movsb
xlat
mov
pushl
icebp
mov
fisttpl
shll
fists
insl
xchg
mull
cmp
ljmp
cmp
cmp
jp
jmp
aad
pop
hlt
pop
mov
cmc
lock
cmpb
divl
fwait
dec
std
cwtl
fs
test
fs
push
iret
mov
test
scas
cwtl
enter
ja
movsb
dec
popa
add
aas
cli
mov
pusha
mov
movsb
push
das
push
test
mov
ret
fsubl
xchg
xorb
add
lods
in
sahf
jbe
pop
adc
fists
mov
lods
es
lods
pop
mov
adcb
pop
insb
or
push
dec
mov
popf
sbb
push
or
loope
sub
pusha
rcl
cmp
out
inc
or
lods
stos
sub
mov
jne
inc
ret
xor
mov
lods
in
pusha
cmp
insl
dec
cmc
test
ret
xchg
mov
xchg
mov
dec
jno
sahf
out
mov
sarl
mov
xor
sbb
enter
mov
lahf
dec
add
mov
mov
push
mov
adc
push
shll
enter
ret
pop
mov
std
inc
cs
cmp
movsb
sub
xchg
enter
mov
xor
aas
lock
insb
and
div
ret
xor
cmp
ds
nop
xchg
sysenter
mov
cmp
arpl
insl
jae
sbb
out
mov
or
inc
movsl
jne
out
aaa
cli
xorb
fucomi
sbb
shr
adc
adc
dec
fmull
dec
sahf
mov
lock
out
shrl
outsl
in
dec
inc
mov
cmc
pushf
imul
in
icebp
aam
fcomps
xchg
lods
stos
outsb
into
je
adc
in
dec
iret
push
outsl
sbb
xor
imul
in
mov
pop
fsts
xor
jnp
jle
add
stos
xchg
movsb
mov
jns
test
jmp
mov
fistpl
ret
mov
mov
mov
cltd
out
pop
data16
int3
loopne
add
pop
xor
aaa
mov
into
je
idivb
mov
mov
rol
xor
pop
sbb
push
pushf
pop
push
add
inc
test
and
mov
test
pop
inc
dec
add
add
test
imul
lods
jns
lods
jnp
mov
or
mov
mov
inc
pop
aaa
pop
sbb
adc
mov
ss
lcall
push
call
add
test
sub
pop
aad
orl
pop
ja
cmp
ss
dec
lods
cld
scas
icebp
xor
mov
ss
inc
pop
sbb
gs
mov
in
fnstcw
inc
es
cmp
lods
and
imul
out
or
cmp
addl
adc
jno
jl
in
out
add
mov
mov
shlb
or
fst
les
in
add
test
mov
repnz
stc
push
dec
int
sub
test
or
add
nop
stos
push
outsl
xchg
xor
movsl
and
mov
sarl
int
testl
mov
mov
dec
pop
imul
addr16
inc
cmpsb
mov
add
inc
cmp
inc
sahf
sbb
cltd
loope
outsl
sbb
mov
push
dec
addr16
sub
sub
xchg
aas
mov
pop
xchg
pusha
icebp
notb
jle
arpl
mov
out
mov
mov
cmp
sub
mov
ret
sub
hlt
xchg
out
jnp
dec
and
or
inc
sbb
sub
push
or
push
aaa
jp
ja
push
ret
repz
stc
xlat
lods
scas
fldenv
pusha
add
arpl
cmpsl
ss
out
jae
jae
push
cli
cmp
cmp
gs
mov
adc
and
clc
push
xchg
add
lcall
add
sbb
dec
mov
hlt
arpl
or
inc
rol
sub
xchg
pop
daa
pop
jle
push
orb
xchg
jb
andl
pop
inc
or
adc
pop
cwtl
fstpl
int3
test
xchg
jb
in
add
xchg
pop
mov
add
dec
out
int
xchg
mov
insb
mov
xchg
adc
adc
cmp
cmp
jnp
jo
and
rclb
and
or
and
nop
lea
jno
aad
pushf
push
mov
stos
or
iret
xchg
lods
sbb
mov
int
loope
jnp
and
dec
mov
leave
cmp
pop
inc
in
bound
int3
mov
sub
pop
out
outsb
jecxz
out
ss
or
push
xchg
cmp
test
int3
mov
cwtl
push
add
subl
mov
inc
lods
testb
jne
loope
or
pop
sbb
adc
or
mov
fwait
sbb
loop
jno
xor
sbb
cli
fimull
inc
inc
inc
xchg
stc
ret
lea
add
ret
in
cmpsb
pushf
jne
shr
cmp
and
sub
fmuls
mov
and
nop
xor
push
pushf
jae
pop
mov
mov
clc
xchg
fbstp
into
fwait
repnz
lods
add
lods
in
shlb
into
nop
inc
lea
jns
lock
pop
into
lock
fistps
or
add
and
les
aas
ljmp
push
lods
out
and
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
add
add
add
jo
add
