mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
ficoms
jmp
mov
lret
popf
das
jne
or
xor
add
jge
add
aaa
or
push
jnp
adc
shlb
pop
cmc
mov
jne
sarb
jno
sbb
push
test
and
adc
mov
test
aad
inc
adc
pusha
pusha
cltd
pop
adc
and
jne
idiv
dec
jno
hlt
sub
lock
test
mov
jno
jnp
in
mov
sub
leave
inc
ret
jbe
cmpsl
or
xor
pop
or
jg
ffree
jle
jb
cli
mov
aam
and
mov
jl
je
loop
push
sub
movsl
mov
enter
add
jne
addr16
push
cmp
sub
rorl
mov
push
dec
jmp
dec
movb
enter
pop
lea
es
shl
lock
ss
sarl
mov
pop
mov
fnsave
lods
push
stos
adc
int
xchg
sbb
lret
mov
sti
mov
push
jno
in
push
add
pop
mov
sbb
rcrl
popa
or
mov
mov
inc
movsb
inc
mov
lds
adc
imul
out
lds
push
test
sbbl
popa
ljmp
push
adc
pop
jg
daa
push
fs
xchg
sub
xor
popa
addr16
jno
adc
into
jle
push
xlat
xorl
std
xlat
rorl
mov
cmp
pushf
clc
rorb
gs
sbb
pop
jno
mov
ljmp
int
nop
loope
mov
mov
inc
jno
lds
jle
gs
ret
mov
add
aad
fbstp
jnp
cmp
shlb
cmpsb
fimuls
cmp
loop
dec
cli
inc
cmp
pop
aam
cmp
loope
push
lahf
test
imul
and
add
push
mov
call
daa
sti
cld
into
out
into
leave
pop
pop
sbb
xor
xorb
mov
je
push
dec
push
fisubrs
mov
xor
pop
sbb
stc
inc
int
xor
or
adc
and
dec
and
adc
dec
fiadds
push
xlat
jo
cld
jle
mov
jb
lock
sbb
ljmp
mov
nop
je
repnz
ficoms
or
in
cli
sbb
cmpsl
cwtl
cmp
and
inc
pop
mov
shrb
in
out
cmc
dec
jg
out
inc
and
fisttpl
push
sbb
xchg
in
xlat
in
jge
fwait
stc
add
punpckhbw
enter
cmp
mov
daa
dec
cmpl
sub
cmp
push
mov
add
int
pop
sbb
fsqrt
fld
scas
ds
repz
jbe
push
out
jne
fildll
sub
mov
aas
jmp
cmp
stos
adc
push
lahf
or
fmul
std
and
pop
clc
mov
push
sub
push
mov
or
xchg
add
cld
daa
sub
test
sbb
inc
sub
pop
sahf
xlat
fwait
xor
sarb
jle
lahf
mov
ror
gs
sbb
push
fisttpll
xorb
and
mov
hlt
cmp
and
sahf
adc
sbb
test
repnz
rclb
push
sub
int
push
fldl
fcompl
add
mov
mov
push
iret
loop
fadd
xor
pop
sahf
pushw
pop
out
test
lcall
ljmp
and
add
lods
and
lcall
mov
lds
adc
popf
lcall
lret
rcl
and
xchg
lea
mov
pop
lret
sbb
in
mov
xor
lods
sbb
adc
cmp
sarl
jnp
iret
daa
dec
xorl
sub
outsl
pop
dec
jmp
sbb
mov
loopne
test
add
in
push
outsl
mov
mov
mov
imul
mov
pop
adc
ficoml
lods
inc
outsb
xchg
ret
pusha
mov
leave
push
fisubl
into
cli
lret
adc
mov
test
push
inc
push
fildl
bsr
adc
adc
notl
sub
mov
cmp
out
rcl
subl
xchg
sub
dec
sbb
push
rcrl
add
das
or
in
out
test
sub
inc
insb
pop
cmpsb
mov
xor
ja
fwait
jmp
aad
fsubrs
loope
pop
aas
push
push
mov
inc
mov
xchg
mov
push
icebp
push
repz
shl
or
push
xchg
cmpsb
inc
inc
int
adc
sub
das
push
inc
call
fsubrl
js
xchg
cmpsl
aad
cmp
mov
push
or
insl
and
xchg
mov
mov
pop
mov
lock
cmp
sbb
int
push
mov
sub
enter
xchg
sahf
in
jns
fsubrs
dec
mov
adc
sub
out
push
insl
lds
xchg
jp
fstpl
sbb
loop
lods
jo
movsl
mov
rolb
and
movsb
shr
xor
jb
std
je
fstl
out
xor
imul
jp
xchg
mov
out
cmc
lcall
jmp
out
dec
cmp
jne
ljmp
leave
adc
cmp
pop
add
jno
dec
int
rclb
inc
vpsubsb
lock
pop
sahf
adc
arpl
sbb
stos
cld
and
push
out
jae
pop
leave
xor
lock
xchg
pop
inc
xor
add
mov
bound
stos
adc
mov
jge
dec
scas
pop
inc
dec
sub
sti
push
push
jl
dec
into
pop
mov
push
pop
and
fs
test
cld
mov
js
cmp
xchg
pop
in
in
push
mov
and
pushf
adc
mov
mov
adc
push
loopne
mov
mov
xchg
adc
mov
f2xm1
xchg
and
inc
cmp
repnz
cmp
fstpt
pop
or
adc
test
sub
sbb
jb
in
sub
les
inc
jmp
xor
push
outsl
pushf
jg
or
xchg
pop
pusha
clc
clc
daa
mov
shll
push
sarl
jo
jmp
cli
sub
mov
mov
cmpsb
cs
xor
jl
cmp
icebp
ret
gs
out
icebp
or
ficompl
lods
popf
jmp
and
inc
xchg
and
mov
jp
cli
mov
mov
sahf
sub
lahf
add
xorb
lock
adc
clc
ficoms
cld
sub
aam
mov
int
mov
mov
lods
fdecstp
aam
fnstsw
mov
pop
push
dec
mov
into
jns
idivb
jle
cli
jl
int
pop
adc
adc
mov
test
push
sub
je
and
xchg
rorb
xchg
cmp
lods
sbb
fidivs
sbb
xchg
call
fists
push
test
add
mov
xor
jg
pop
mov
jge
outsb
pop
push
mov
or
xchg
out
and
cld
in
not
icebp
repz
out
xor
add
adc
repnz
pop
mov
out
jecxz
insb
jne
insb
into
bound
or
fidivs
addr16
sti
cmc
scas
adc
cmp
inc
mov
mov
sbb
div
mov
xlat
bswap
fcompl
inc
addr16
push
pop
push
mov
cltd
xchg
push
cmp
outsl
or
or
pop
adc
xor
push
cmp
mov
jnp
jle
push
pop
mov
add
push
ja
push
jecxz
hlt
ss
icebp
call
outsl
xchg
ljmp
lods
pop
mov
mov
mov
mov
mov
leave
sub
xchg
add
cmp
or
mov
pop
int3
out
jb
scas
in
add
sbb
int
mov
ja
shlb
loope
leave
or
and
test
pop
cmp
mov
std
in
mov
xor
mov
sahf
mov
jl
inc
add
int3
rolb
push
pop
enter
cltd
add
cmpb
inc
js
xlat
mov
stos
xor
pop
int
ja
test
xor
stos
xchg
mov
mov
lahf
cmp
je
sub
xchg
test
jl
pop
cmp
lock
int
jle
sarl
mov
ss
test
aaa
stos
dec
add
shrl
lcall
add
sbb
stc
lock
out
xor
fs
sbb
fs
lds
xor
mov
lahf
dec
pop
iret
push
mov
cwtl
jbe
arpl
das
adc
pusha
pop
mov
xchg
add
ficomps
cmp
data16
lock
jb
nop
outsb
pop
xchg
jne
dec
js
jmp
sub
mov
adc
jmp
out
mov
sbb
add
cmp
popf
arpl
test
sub
sub
ja
xor
inc
xor
in
in
les
inc
movsl
bound
add
cmpsl
pop
jo
push
xchg
push
addb
inc
ss
jne
xchg
sar
push
sbb
pushf
push
stc
scas
cld
les
xchg
addb
cmpsl
movsl
xor
mov
pop
cmpsl
addr16
out
inc
movsl
data16
pop
lock
push
es
fwait
jne
adc
hlt
jmp
or
and
je
pop
sbb
lea
jecxz
mov
jo
xchg
push
stos
dec
jge
mov
iret
lds
or
and
jmp
add
mov
aas
xchg
aad
mov
mov
lahf
mov
out
fstpl
xchg
in
int
cli
mov
dec
push
dec
popf
add
mov
xchg
mov
mov
jle
ja
mov
les
inc
movsl
and
sti
mov
push
or
and
xchg
aaa
xchg
movsb
sahf
aas
mov
xor
mov
mov
je
ret
cs
iret
adc
and
cld
cmpsb
or
xchg
out
push
mov
in
lret
inc
pop
cmp
push
int3
scas
sub
mov
jmp
mov
inc
sbb
sbb
aad
int
sti
push
mov
pushf
fwait
cwtl
cmp
dec
jecxz
mov
movsb
daa
sbb
pop
cmp
es
xlat
popf
outsb
inc
sub
push
inc
pop
cmpsb
orl
iret
push
or
inc
pop
mov
fdivrs
insl
lcall
mov
cs
sub
pop
fiaddl
push
push
sub
in
fildl
xor
lods
sbb
fiaddl
mov
mov
pop
out
cmp
rcrl
xchg
pop
jle
test
leave
jecxz
movsl
mov
and
fs
scas
and
cmp
add
jbe
xchg
mov
repz
xor
sbb
les
xorl
and
pop
push
sub
addb
and
es
mov
dec
aad
jle
and
jmp
clc
inc
add
or
push
jno
lea
push
dec
addb
loopne
inc
test
fucomip
inc
jl
xor
loopne
fwait
inc
push
mov
je
pushf
icebp
sub
out
scas
scas
push
mov
pop
fists
adc
sbb
pop
clc
adc
xchg
xor
mov
mov
lods
inc
cli
repz
ljmp
mov
add
xchg
sbb
cmp
cli
push
sahf
callw
leave
adc
jbe
inc
mov
fdivp
lret
jp
cmp
sbb
cltd
test
lods
mov
dec
mov
or
scas
add
sub
or
jge
jg
outsl
in
cmpsb
push
movsb
test
or
xlat
add
arpl
repnz
fsubrl
jns
inc
or
push
ss
dec
fsubl
sti
ret
xor
pop
imul
lcall
and
jg
lret
das
arpl
idivb
fistl
lahf
jns
nop
pushf
and
mov
xor
fistpll
jbe
shlb
fwait
outsb
std
or
jb
mov
mov
xchg
bound
call
repz
xor
gs
das
test
cld
jns
cmp
bound
stc
es
pop
xor
jl
ja
test
sub
jbe
rorb
xlat
hlt
jle
cwtl
movsl
mov
int
movsb
xchg
dec
sub
nop
add
xchg
mov
fisubl
mov
in
sbb
imul
mov
xchg
mov
mov
enter
fs
dec
sbb
stos
cltd
call
add
outsl
in
mov
add
cmp
dec
or
sub
popa
hlt
leave
pop
mov
daa
imul
lods
leave
rcrl
adc
adc
jnp
pop
and
mov
mov
fs
mov
stc
mov
adc
cmp
jbe
pop
pop
mov
xchg
mov
loop
and
lea
loopne
mov
out
sbb
das
mov
std
jl
nop
shl
aad
fwait
cmpl
cmpsl
dec
pop
insl
cmp
jle
sub
add
lret
int
loope
mov
fwait
pop
push
loop
stos
shr
hlt
ja
outsb
into
jge
mov
insb
in
add
cmp
cmp
jle
shr
adc
mov
testb
or
lret
push
push
movsb
shrl
cmc
lahf
sub
mov
inc
rcll
cmovno
pusha
mov
sub
test
cs
inc
dec
stos
inc
ret
bound
sbb
push
inc
sub
shll
fnstcw
sub
cmp
pop
cmc
push
arpl
pop
sub
insl
sub
icebp
imul
lret
inc
push
sub
inc
adc
cld
jnp
adc
repnz
stos
or
cld
std
jnp
pop
push
jle
xchg
push
jmp
test
nop
xor
lret
mov
xchg
sbb
jg
xor
push
movsb
aas
gs
in
addr16
jmp
push
inc
fldt
insl
inc
in
jp
mov
or
mov
aas
das
mov
dec
adc
scas
push
cmp
pop
push
cmp
cld
and
adc
push
cs
xchg
cmpb
std
cmpsl
movsb
inc
and
inc
add
cld
mov
test
cmp
movsl
mov
or
cmpsl
out
scas
add
clc
push
mov
inc
cmp
push
pop
xchg
push
push
jg
aad
lea
inc
insl
sti
imul
outsl
das
xchg
fisttpll
cmc
icebp
pop
or
rcr
js
pop
mov
and
std
cmpsb
lret
hlt
mov
adc
fsubr
or
mov
xor
and
cmp
push
xor
or
adc
insl
dec
cli
push
cmp
dec
shll
push
mov
or
cmp
add
mov
cmp
out
repnz
sbb
call
es
sbb
sbb
add
xchg
push
adc
cmp
or
push
mov
mov
sbb
nop
or
inc
leave
cmpsb
fwait
dec
push
stos
push
jno
mov
lods
mov
fiadds
aad
cltd
push
jbe
iret
mov
and
mov
jnp
push
sbb
jecxz
jp
jnp
into
xor
mov
sub
js
mov
pop
sub
xchg
dec
test
push
sarb
mov
ret
ret
nop
std
outsl
dec
outsb
xor
out
int
xchg
add
outsl
inc
add
lret
out
push
mov
fldenv
mov
push
lahf
cli
inc
outsb
push
cmpl
outsb
mov
adc
sbb
inc
add
lock
rolb
mov
es
scas
push
flds
cmp
insl
ficomps
ds
dec
pop
sub
mov
or
and
add
out
or
push
pop
jns
lock
testb
jmp
fbstp
in
sub
not
fs
scas
push
or
stc
mov
lret
aam
in
mov
jae
cli
in
xchg
je
push
jb
pop
outsl
and
lret
repz
push
je
mov
pop
lea
jne
pop
or
daa
cmc
jno
xchg
hlt
icebp
xor
dec
pop
cli
fbstp
lret
lcall
push
int
fistpll
mov
sbb
idivl
mov
cmp
aad
lcall
add
add
jae
cmp
pop
mov
stc
scas
ds
xchg
popf
andl
pop
int
mov
sbb
mov
ljmp
scas
enter
fstpl
xor
jmp
movsb
movsb
push
stos
nop
outsl
jns
mov
nop
fimuls
xchg
jge
lods
cltd
iret
pop
outsb
test
lea
pushf
dec
add
xlat
xchg
adcb
fmul
adc
negl
fldenv
sbbb
jp
cltd
dec
jle
popa
pop
dec
filds
fcmove
jbe
dec
ret
jmp
add
jno
xchg
pusha
call
lods
mov
jnp
inc
mov
iret
daa
adc
mov
pop
mov
sub
out
lods
xrstor
mov
adcb
jecxz
jge
sub
pop
out
je
in
stos
mov
dec
jl
jns
adc
and
inc
std
je
sub
mov
lahf
and
sbb
stos
dec
pop
push
fbstp
iret
sbb
jb
pop
xor
inc
movsb
dec
fwait
data16
mov
inc
xor
add
repz
shr
xchg
and
xor
push
arpl
int
imulb
pop
mov
mov
or
push
mov
scas
jl
loope
popf
sub
sub
add
inc
int
lods
pop
dec
fst
icebp
dec
jmp
pop
bound
and
popf
mov
dec
testl
and
das
repz
cwtl
xchg
xor
lcall
inc
dec
fldcw
cmp
das
sub
jbe
adc
shrb
cwtl
cmp
or
addb
mov
mov
mov
call
stos
xor
lret
xchg
xor
cld
test
shlb
js
add
mov
push
outsb
mov
fimull
cld
jbe
movsl
adc
outsb
mov
pop
repnz
dec
cwtl
mov
int
enter
arpl
sarb
cmp
sbb
cld
cwtl
das
out
jle
addb
lahf
adc
outsl
push
cmpsl
inc
fidivrl
repz
cmp
cmpsl
mov
sahf
push
mov
sbb
or
out
and
imul
add
in
mov
divl
jg
loop
lods
pop
lds
scas
bound
cld
repnz
call
xchg
movl
or
adc
mov
jae
pop
fs
lret
mov
push
js
adc
push
dec
cmpl
insb
loop
jbe
cmp
fidivrs
loopne
cmp
inc
mov
xchg
push
mov
shrb
jbe
inc
movsl
inc
xchg
shlb
test
inc
sbb
fldenv
mov
scas
inc
lea
ja
imul
add
jle
sub
gs
jne
scas
aad
jge
cmp
cli
ljmp
in
mov
inc
int3
rorl
lock
lcall
paddsw
push
scas
fcoms
inc
and
inc
nop
lahf
inc
jle
add
and
imulb
scas
out
and
pop
aam
stos
mov
sub
and
dec
jnp
adc
aam
decb
push
dec
scas
mov
hlt
movl
fmul
dec
sbb
mov
lea
xor
xchg
in
inc
dec
aas
cli
pop
ja
mov
lea
lea
test
out
xor
dec
mov
pusha
xchg
stos
repz
fwait
mov
mov
and
pop
xchg
push
stos
cmpsl
lret
fwait
and
cwtl
sbb
lahf
sub
mov
cmc
testb
sbb
int3
sahf
dec
xor
mov
sahf
mov
in
shrb
mov
push
loope
cmp
or
pop
mov
gs
inc
dec
adc
call
mov
popf
and
and
rcrb
sub
and
cmc
push
mov
clc
pop
inc
int
mov
test
cmpsl
adc
int
es
add
cmc
bound
in
aad
cmpsb
xor
push
mov
fmull
inc
mov
loopne
cmp
mov
xor
cmpsb
pop
insb
je
dec
push
jmp
add
hlt
cmpsl
push
test
add
cld
mov
sbb
push
xor
stos
jge
push
push
in
cmp
pop
jmp
es
mov
std
jbe
add
sub
inc
rcll
push
ror
inc
cmp
pushl
mov
adc
pop
xchg
lret
xchg
mov
int3
and
xorb
and
test
sahf
push
cmp
into
inc
je
lods
push
scas
inc
out
xchg
fcompl
dec
mov
sahf
mov
pop
sbb
mov
movswl
inc
mov
cmc
call
and
inc
mov
mov
inc
mov
cmp
sub
cmp
insb
mov
pop
adc
mov
iret
aaa
fmull
cmp
mov
xlat
push
jb
jge
dec
test
adc
mov
jmp
out
cmc
pop
dec
pop
lret
dec
mov
jle
das
and
mov
or
push
pop
inc
add
fimuls
jl
gs
jge
outsb
lods
in
sbb
imul
gs
enter
stos
in
pop
sbb
inc
lods
inc
pushf
imul
ja
add
mov
lcall
in
iret
cs
pop
fnstenv
xor
les
mov
cmp
stc
lcall
pop
adc
push
jle
inc
or
cmp
cmp
mov
cs
cli
jge
dec
push
outsl
loop
mov
nop
and
movsb
push
js
dec
fistps
jne
and
dec
add
aam
cmc
push
pop
push
pop
ja
inc
adcl
insl
cmp
fists
sub
mov
cmpsb
dec
in
jmp
sbb
idivl
xchg
mov
aam
and
xor
mov
jae
data16
vmovaps
ret
add
out
xchg
mov
aam
ss
test
dec
lods
adc
imul
adc
add
push
fldcw
sbb
mov
push
cli
jb
push
push
xor
pop
add
dec
push
fdivrl
push
loopne
mov
jecxz
sub
pop
dec
insl
cmp
movlps
shrb
push
pop
inc
cmpsb
xchg
pop
jp
add
leave
or
lea
xor
insl
stos
sti
or
daa
sub
mov
stos
mov
jo
loope
je
xchg
xor
outsl
push
xlat
mov
inc
pop
mov
mov
int
add
test
das
rcl
sbb
movsb
mov
aad
push
push
ljmp
into
xchg
loope
cmpsb
lcall
sub
xchg
and
adc
pop
lret
mov
xchg
fsts
adc
out
push
pop
push
xor
pop
and
push
dec
xchg
shrl
iret
xchg
into
ds
dec
sub
or
fwait
clc
inc
scas
rolb
xchg
ret
mov
inc
mov
outsb
add
imul
mov
sub
mov
xor
xchg
xlat
pop
dec
decb
xorl
lods
jb
cli
and
inc
bnd
mov
nop
mov
jns
fwait
test
punpckhdq
xor
lea
and
decb
inc
xchg
ljmp
test
fbstp
pop
push
pop
dec
mov
jp
pop
inc
xchg
inc
insl
push
cld
inc
mov
jne
pop
enter
repnz
xchg
jl
leave
xchg
push
inc
leave
insl
in
out
test
inc
jmp
fidivs
push
roll
or
sbb
andb
xchg
xchg
test
std
mov
push
mov
fsubrl
sub
popl
repnz
fwait
mov
and
sbb
mov
dec
inc
jne
mov
insb
push
or
aad
loope
push
cmp
iret
fnstcw
stos
lods
dec
push
pop
or
jne
lret
call
jbe
xchg
insb
mov
fsubrl
jmp
and
mov
and
adc
sbb
fs
mov
sbb
jl,pn
fsubrl
cmovs
js
push
out
insb
movsl
das
stos
mov
int3
or
push
in
lods
push
jns
ret
clc
add
sbb
lcall
push
cld
push
outsl
dec
movsl
and
mov
test
aas
dec
or
js
sarl
or
pop
leave
or
pop
mov
popa
pop
xlat
nop
movsl
in
aaa
mov
iret
movsl
adc
sbb
mov
cmp
add
in
mov
popa
lret
inc
aad
sbb
cwtl
lea
add
lahf
sub
dec
mov
pop
push
push
or
dec
fnsetpm(287
mov
fildl
test
fimuls
lods
cwtl
fistpl
jl
cmc
in
xchg
add
fsubrs
push
jecxz
jl
xor
xchg
push
adc
add
inc
push
lea
lret
jmp
sbb
jbe
jae
xor
push
pop
popa
xlat
xchg
mov
jg
jno
adcl
pop
ja
enter
dec
lret
fcoml
mov
mov
test
cmp
inc
aaa
ret
inc
mov
sbb
mov
pusha
xlat
lret
and
mov
bswap
push
xchg
mov
xlat
xor
aam
push
sbb
push
frstor
push
popf
aas
xor
shl
dec
xchg
pop
js
add
cmp
in
movsl
pop
sbb
or
cld
jmp
mov
sti
in
sub
insb
addl
push
xchg
sub
adc
sbb
lret
mov
adc
sub
psubd
or
shl
sbb
sbb
pop
xor
addb
inc
push
rcr
adc
mov
mov
mov
adc
add
and
adc
mov
rorb
xchg
out
repnz
lret
add
xchg
sub
icebp
cmp
cmp
jge
mov
inc
rolb
mov
xchg
jg
lea
xchg
jge
fs
subb
mov
pop
inc
sub
inc
mov
in
aas
aas
fmuls
clc
shrl
jmp
lahf
cmc
push
add
mov
inc
cmp
loopne
lock
icebp
pop
ficomps
pop
scas
shrl
int3
adc
xorb
sub
and
mov
or
clc
jp
mov
scas
icebp
int3
fcompl
ret
loop
jle
xor
add
fdivrl
rorb
fs
inc
sub
fidivl
outsb
jmp
adc
sbb
push
push
ror
jns
andb
inc
outsb
xchg
jno
das
mov
xor
call
rcl
inc
xchg
inc
push
inc
sbb
movsb
xchg
je
pop
xchg
insb
and
lahf
mov
cmp
ja
fstl
lock
mov
jae
dec
cwtl
mov
add
push
out
add
loopne
xchg
in
pop
hlt
popa
adc
cmp
jmp
push
and
xchg
mov
cmp
dec
lods
add
into
mov
stc
hlt
ret
adc
mov
mov
out
lret
mov
cltd
mov
cmp
lds
xor
pusha
mov
pop
inc
pop
pop
inc
cmp
xor
shrl
sub
dec
stos
inc
dec
dec
int3
adc
mov
inc
test
xor
adc
loopne
mov
movsb
jp
popf
negl
lea
fiaddl
sbb
pop
movsl
jbe
daa
fdivrs
inc
roll
and
xorb
mov
loope
jne
scas
iret
push
mov
add
das
arpl
dec
pop
aaa
enter
mov
cs
sbb
imul
push
jmp
mov
ja
fisttpll
sbb
cmp
adcl
data16
jbe
jbe
test
popa
pop
adc
ret
lods
jmp
lret
mov
vrcpss
subl
int
aas
loopne
cwtl
ljmp
shll
lahf
lods
test
ret
or
mov
lcall
push
mov
iret
arpl
enter
xlat
shrb
jnp
arpl
pop
sbb
sub
xor
push
lcall
repnz
sub
clc
popa
jecxz
push
cmp
adcl
gs
fdivl
xchg
and
mov
out
xor
neg
movsl
cmc
sahf
jns
outsl
ss
daa
jns
lods
mov
ss
adc
adc
mov
lock
add
pop
in
icebp
js
into
fcoml
mov
jge
sbb
inc
mov
stc
test
mov
xlat
lods
mov
adc
dec
xchg
fisttpll
fimuls
jno
xchg
insl
scas
and
or
jnp
cs
xorb
push
or
dec
add
mov
mov
xchg
push
adc
push
jno
mov
sbb
mov
mov
jns
push
jp
mov
nop
jmp
ret
ljmp
inc
xchg
fdivrs
cmp
dec
and
pop
cmp
xchg
add
push
xchg
sub
fcoms
push
push
jne
fs
mov
fcoms
pop
cli
test
mov
fwait
inc
loopne
mov
jp
push
insb
mov
enter
out
pop
fcmove
jp
repz
int
add
mov
lret
or
push
cld
or
or
push
cmpsb
repnz
pop
sub
outsb
push
push
sbb
xor
pop
dec
inc
cmpsb
cmpsb
cmp
cmp
fnsave
dec
stos
xchg
cmp
jge
fxch
dec
sub
cmp
dec
jae
add
lea
shll
lret
lods
test
dec
fistpll
and
xchg
iret
mov
out
repz
jb
movsb
push
hlt
xchg
xchg
ret
addr16
cltd
out
mov
call
testl
aam
pop
inc
xchg
jno
lock
push
and
adc
mov
lret
outsb
popa
sub
ds
scas
cltd
mov
fadds
cld
fdiv
cmp
fnsave
xchg
pusha
mov
xchg
mov
rcll
shl
inc
lds
xor
sub
mov
jmp
xor
pop
mov
je
adc
jecxz
sub
mov
sub
cmp
in
or
pushf
or
fwait
pusha
ss
out
fcmove
inc
mov
stos
insl
and
sub
xchg
iret
data16
hlt
fnstenv
dec
jmp
dec
xor
pop
stos
xor
pop
add
iret
or
mov
add
push
imul
enter
dec
inc
sub
or
cli
icebp
cli
cmpsb
xchg
mov
mov
lds
das
dec
ljmp
cmp
inc
fcomip
jne
scas
dec
scas
mov
jns
xchg
or
cli
cmp
cld
daa
shlb
outsb
jbe
pop
imul
repz
daa
push
test
repnz
cld
and
add
imull
aad
adc
sub
loop
loopne
sti
mov
mov
jle
negb
pop
adcb
jle
push
lods
push
push
cmc
shrl
rcrl
test
jg
lock
ret
out
cld
and
mov
push
adcl
ret
cltd
into
cmp
jb
and
test
push
add
pusha
jp
jl
sub
aad
cs
cmp
sarb
mov
pop
mov
cmpsb
and
inc
js
jmp
dec
lahf
cmc
scas
je
shll
mov
jg,pt
out
jnp
inc
cld
mov
cmc
mov
add
fbstp
stc
or
push
mov
fld1
in
into
nop
orl
imul
cld
ja
jns
inc
xchg
lods
std
jo
inc
pop
dec
mov
inc
insb
test
std
sub
xor
pop
bound
aad
dec
jmp
adc
in
xchg
ficompl
or
cmp
nop
xchg
ja
add
stc
in
push
std
add
adc
or
pop
cmp
enter
cmp
xor
cwtl
cld
aad
or
scas
cmpsl
sub
pop
aam
jns
int
aas
rcll
mov
or
das
pop
aad
in
and
lea
cld
mov
outsl
xchg
sub
mov
sarl
aad
orb
sbb
ret
mov
xor
xchg
lret
mov
pop
orb
mov
sbb
into
push
cmpsl
lea
jns
xor
and
aaa
mov
jge
mov
jne
xchg
mov
or
je
and
out
push
sti
in
jns
adc
lods
scas
add
xlat
jne
daa
scas
rol
push
loope
sub
lock
or
and
mov
mov
mov
jg
xchg
lds
mov
jge
mov
dec
mov
and
imul
enter
and
in
andl
and
out
push
ds
arpl
outsb
ror
sti
adc
rorl
pop
fistpll
push
das
cmpsb
insl
insb
xor
mov
mov
imul
test
in
fstl
mov
das
push
imul
pop
outsl
fistps
hlt
shrl
fiadds
test
xchg
mov
dec
or
fcomi
scas
shl
inc
jp
xchg
push
adcb
xchg
or
shlb
repnz
mov
xchg
cmpsb
repz
jl
dec
das
jnp
hlt
gs
dec
inc
imul
adc
cmpsb
xchg
mov
pop
lret
sub
in
div
jo
push
cltd
mov
push
jg
imul
out
cmp
fbld
lock
inc
imul
icebp
repnz
sbb
shrb
and
and
pop
test
stos
dec
fiadds
xor
mov
jae
cltd
insb
dec
icebp
test
fnstenv
mov
lcall
popa
fsubl
pop
dec
aam
dec
mov
or
cmp
dec
adc
rcll
arpl
dec
push
fidivs
xor
inc
mov
pop
push
jle
fldl
jne
xor
popa
fcoml
and
sti
pop
jge
aam
mov
in
pop
sahf
jge
or
cmp
js
nop
sbb
push
dec
out
and
add
or
sbb
in
fisubrl
cmp
push
ffree
jno
xchg
add
sub
scas
xor
ja
xchg
test
sbb
mov
fidivrs
daa
cmp
mov
jbe
daa
dec
mov
mov
jge
mov
cmp
es
movsb
xchg
insl
mov
nop
xor
aas
pop
loope
decb
hlt
pop
icebp
xchg
lahf
mov
mov
in
cmpsb
jne
cmp
inc
adcb
xor
push
jmp
and
aam
ds
cmp
sub
sub
sbb
cmc
sub
fs
ret
dec
loope
iret
rcll
sti
outsb
push
in
mov
test
adc
lods
imul
ds
iret
call
ja
hlt
mov
cli
fcmove
cli
mov
stos
sub
xchg
push
xlat
jnp
sahf
pusha
jmp
shlb
mov
and
inc
pop
dec
and
cmc
xor
mov
jo
jp
insl
enter
cmpsb
inc
mov
dec
jl
pop
mov
xchg
xchg
cmp
shll
scas
test
mov
divb
inc
mov
mov
jns
xchg
push
mov
mov
lea
adc
adcl
insb
js
xchg
ror
mov
xchg
cmc
cmpsb
pop
pop
jge
sbb
sub
lds
pop
rcrb
sub
loopne
decl
xor
aad
dec
in
push
ja
clc
or
add
lds
fldcw
cmp
push
in
mov
adc
jmp
int
test
pop
test
aas
or
inc
popa
aam
mov
mov
cmpsb
mov
pop
repnz
loopne
xlat
jno
pop
xchg
fwait
sahf
dec
jle
mov
jne
pusha
arpl
inc
jae
aam
adc
mov
jmp
xchg
inc
add
in
cmp
push
inc
jb
sub
data16
pop
fidivs
dec
or
ret
in
pop
movsb
lds
mov
sbb
clc
int3
stos
dec
jle
mov
jg
cld
pop
and
mov
cltd
into
inc
mov
inc
lahf
or
movsl
mov
test
les
mov
jecxz
jge
jno
daa
xor
jno
push
out
rol
dec
xor
push
cmp
and
mov
pushf
in
lock
or
insb
insl
lret
push
shrl
pop
pop
pop
mov
add
inc
or
xchg
xchg
xchg
imul
inc
push
dec
loopne
xchg
lds
mov
cmp
xchg
imul
pop
adc
push
mov
dec
mov
add
je
imul
out
cmp
bound
arpl
jae
shlb
cmp
jmp
lods
xor
mov
push
hlt
pop
fs
out
mov
cmp
add
mov
out
dec
adc
ja
aam
xor
xlat
pop
fstpt
sub
dec
dec
add
fisttpll
mov
xor
add
lahf
mov
push
aam
cmp
loop
sbb
mull
cmp
adc
shr
mul
in
in
inc
aam
in
inc
and
orb
dec
mov
mov
rorb
or
imul
cwtl
jb
rorb
jmp
movsl
push
fimuls
xchg
imul
inc
push
mov
into
sub
cmp
push
movsl
cld
push
fmull
cmp
les
mov
jmp
subl
push
popa
ret
dec
xchg
ret
mov
adc
popf
ret
xchg
jo
imul
adc
cmpsl
xchg
mov
out
add
lods
sbbb
rcr
and
mov
add
cmp
sti
cmp
xor
jmp
rcll
dec
push
cwtl
xor
push
sub
and
pop
pop
sarb
sub
xor
ss
mov
xchg
mov
testl
clc
rcrl
jg
clc
filds
cwtl
fwait
outsb
push
dec
cmc
idivb
push
scas
push
pop
js
test
push
pusha
sub
outsb
aas
dec
lock
jns
nop
adc
inc
ret
addr16
mov
fs
insb
pop
jbe
stos
sub
scas
cmp
xchg
mov
cmp
enter
iret
and
stos
mov
xor
sar
hlt
jecxz,pn
mov
sub
pop
test
xor
push
bound
pop
rclb
loope
repnz
in
lods
add
xchg
jp
cltd
push
and
lock
adc
fbld
orl
scas
mov
sarb
sub
shrb
sub
jno
scas
movsl
movsl
adc
nop
mov
in
push
cmp
mov
pop
push
jmp
pop
insl
or
aas
fildl
inc
fidivrl
fidivrl
enter
sub
and
in
inc
pop
pop
inc
xchg
nop
add
sub
cmp
leave
fisubl
or
sub
pop
xchg
cmp
cmp
out
jo
lret
adc
adc
in
inc
inc
xor
cli
push
shr
mov
pop
jg
into
clc
push
movsb
mov
loop
cmp
mov
test
mull
jmp
sbb
mov
xchg
push
pop
ret
add
in
iret
lea
adcl
add
xchg
fisttpl
divl
adc
push
sub
push
jns,pt
jecxz
push
fs
bound
orl
leave
and
out
shll
add
pop
outsl
lahf
dec
add
add
aas
push
push
mov
jb
mov
loope
aas
pop
loopne
inc
pop
sbb
movsb
addr16
out
sbb
dec
mov
scas
inc
mov
push
in
subl
lret
dec
test
mov
mov
jle
dec
call
sub
dec
mov
movsl
pop
xchg
pusha
dec
insl
jmp
sbb
out
push
xchg
aad
and
and
mov
lds
mov
jnp
mov
lods
push
fwait
jg
mov
ret
push
cmp
iret
cmp
sub
add
std
lea
add
pop
pop
out
mov
jge
popf
jno
movsl
xchg
and
aas
jecxz
mov
sbb
xlat
dec
add
jns
jb
adc
call
add
dec
test
sub
sub
repnz
jae
xchg
and
mov
fisttps
cmp
mov
cmp
daa
rcrb
testb
lret
scas
xor
jle
addr16
fstpl
iret
mov
or
or
mov
es
adc
pushf
pop
pusha
cmpsl
cmpsb
loop
ficomps
push
arpl
ds
inc
test
stc
sbbl
jg
pop
pop
clc
add
fldt
xchg
or
sbb
fcompl
or
into
cs
stos
push
pop
int3
lods
dec
add
mov
ret
mov
ret
scas
and
cmpsb
lock
mov
outsb
lcall
aaa
fdivp
cmp
mov
out
cmp
sahf
jns
push
pusha
lea
cmc
cmc
mov
cli
aam
or
cmp
sub
call
mov
adc
lret
addl
test
mov
test
mov
and
leave
fucomip
sbb
and
icebp
xchg
andb
add
lds
sub
dec
movsl
out
xor
inc
inc
daa
out
cmp
add
ret
popf
jae
xchg
sahf
ror
orb
int
inc
ljmp
mov
enter
pusha
test
jno
outsl
jb
rolb
push
test
add
push
inc
push
ficoms
cmp
add
dec
nop
test
cld
or
add
je
sbb
mov
fst
data16
cmp
dec
inc
lods
dec
dec
cmp
pusha
inc
dec
idivl
adc
iret
cmpsb
pop
inc
and
jnp
cmpsb
arpl
or
cmp
mov
sub
test
inc
ljmp
xchg
fisttpl
out
push
cmpsb
or
or
jo
mov
fistps
outsb
add
scas
adc
xchg
pop
scas
sbb
gs
inc
sub
push
stos
push
push
and
in
pop
pop
sbb
jno
fiaddl
pop
pop
push
mov
jg
jae
push
mov
je
sbb
jl
stc
push
jo
sub
inc
jle
add
sub
cs
mov
mov
dec
imul
inc
xchg
pop
int3
mov
and
adc
ja
pop
pop
rorb
mov
icebp
scas
mov
jl
mov
lods
stc
enter
xor
mov
mov
test
scas
adc
adc
in
aaa
out
jmp
mov
pop
mov
sbb
inc
scas
out
mov
cmpl
adc
mov
repz
ret
xchg
mov
mov
addr16
lods
jbe
lahf
repz
pusha
pop
fwait
sub
pop
daa
sub
jl
lret
out
sbb
movsb
in
lahf
pusha
mov
aaa
xor
enter
popf
mov
shr
mov
add
fisubs
nop
inc
push
cmp
mov
lret
push
xor
sub
in
cltd
das
lret
mov
cld
adc
loop
xchg
bndstx
push
ret
mov
push
andl
popa
sbb
pop
lock
mov
adc
xor
subl
or
jge
mov
pop
popf
mov
out
std
imul
and
leave
movsb
icebp
inc
sub
push
shlb
pop
mov
push
mov
enter
lahf
xchg
repz
add
xchg
movsb
jno
sub
shl
nop
out
call
cmp
jb
stos
out
lcall
dec
or
mov
jo
fmull
fwait
add
out
js
leave
mov
mov
hlt
jbe
scas
les
outsl
push
mov
sti
mov
jo
mov
dec
cltd
stc
pop
sub
shll
fwait
lods
pop
test
fucomp
ret
fstpl
fisttps
loop
loope
mov
sub
ja
inc
lcall
dec
and
jne
call
aaa
adcb
popf
dec
cwtl
add
add
lds
xchg
jnp
dec
repnz
nop
pushf
xchg
rcrl
and
scas
mov
lcall
mov
and
sbb
sub
cs
xchg
ds
in
test
lcall
movb
add
sbb
jne
push
ljmp
and
sub
sti
mov
xor
dec
push
jne
lods
flds
scas
cmpl
inc
or
cmp
push
nop
popa
sahf
fsub
ret
mov
scas
cmpl
sub
mov
mov
cmp
inc
add
addr16
cmp
mov
fsubs
test
add
jp
repnz
outsl
bound
into
lods
sub
ret
pop
es
sarl
enter
push
inc
xchg
iret
mov
icebp
iret
xor
mov
cli
cmc
fidivrs
gs
xchg
and
xchg
fmull
mov
jns
mov
mov
xchg
ja
stc
cli
add
pop
fwait
out
das
xor
lock
cltd
insb
push
sub
aad
lods
sbb
leave
neg
mov
getsec
mov
int
faddl
cmpsl
jno
and
hlt
pop
mov
sahf
mov
cmp
xchg
push
lods
stos
push
cld
xor
lret
dec
lods
xor
and
pop
mov
cmpsb
pop
and
sbb
scas
stc
cs
cli
in
sbb
loope
addr16
stos
leave
add
stc
pop
call
push
stos
mov
cwtl
mov
sbb
into
xor
dec
xlat
hlt
pop
fnstenv
xlat
out
in
pusha
popf
push
addr16
mov
dec
or
daa
sbb
or
loop
push
mov
pop
dec
fdiv
mov
andb
adc
rcll
adcb
outsl
jmp
aas
jp
lret
addl
decb
das
pop
out
cld
xlat
fdiv
mov
sti
adc
jmp
jne
pop
lock
or
leave
lds
jle
add
pushf
out
das
pushf
daa
push
xchg
out
into
jmp
cmp
ss
clc
roll
jle
pop
movsl
lods
fsubr
subb
popa
inc
iret
mov
inc
cmp
dec
push
sub
inc
iret
mov
pop
loope
add
lcall
fs
mov
or
fildll
lret
gs
cltd
movsl
mov
jae
mov
pop
mov
pushf
add
xchg
int3
dec
aaa
rolb
xor
clc
mov
inc
loope
sbb
mov
lds
jnp
neg
je
insl
fstps
loope
cmc
cmpsb
fiadds
std
mov
or
inc
and
dec
jb
dec
nop
push
adc
push
stos
aam
scas
nop
ret
cmp
mov
out
aad
adc
mov
pop
inc
lods
movsl
ret
cmp
sub
adc
shr
mov
pushf
inc
fdivrs
push
out
inc
stos
pop
mov
sub
sbb
arpl
mov
scas
inc
xchg
gs
xor
in
cmp
or
orl
xchg
ret
loope
adc
xor
filds
mov
inc
dec
movsb
dec
push
fdivrl
adc
pop
push
xchg
std
xchg
adc
js
stc
out
mov
jmp
sub
lods
push
in
int
ja
fadds
add
cmpsl
fnstenv
insb
pop
cld
je
dec
or
mov
insb
cmpsb
push
int3
and
pop
pusha
pop
mov
ret
movsl
xchg
xchg
popa
add
jbe
in
jp
int3
je
push
dec
jge
sbb
cltd
mov
push
cmpsb
shlb
jno
sbb
inc
fdivs
leave
and
jge
push
out
xor
sub
std
shl
push
jge
movsl
and
xor
mov
gs
cltd
mov
fists
in
mov
lcall
or
sub
pop
addr16
cmpsl
repz
xor
insb
iret
pop
ret
xlat
xor
cltd
sbb
mov
cmc
push
xor
mov
sub
xor
mov
aad
in
ss
jg
outsl
jne
idivl
notl
fwait
push
in
aaa
into
mov
popa
in
jp
in
cmp
out
in
cmp
mov
insl
outsb
mov
jmp
out
and
push
cwtl
sbb
mov
inc
dec
aas
fcmovbe
cmp
inc
cmp
call
lret
dec
in
cmp
imul
add
mov
out
fldl
test
stc
psrlq
stc
pop
or
notl
inc
into
jmp
outsl
sbb
mov
cmp
or
jnp
shl
je
or
lds
imul
adc
jmp
cwtl
out
pusha
into
cltd
mov
push
arpl
imul
jae
arpl
jge
addr16
xchg
pop
in
push
fildl
daa
jns
popf
adc
mov
rorl
sub
pop
mov
dec
cmp
jb
cmpsb
sarb
push
and
loop
popf
and
leave
test
mov
fildl
inc
xchg
cmc
loope
inc
mov
inc
push
add
rcrb
inc
fidivrl
dec
push
fldl
push
mov
pusha
clc
pop
adc
pop
pop
jmp
dec
cs
cltd
push
mov
sub
dec
mov
andb
cwtl
in
ss
cmp
test
rcrl
rcl
lock
cmp
rorl
cltd
inc
pop
nop
jno
push
ljmp
push
pusha
adcl
xor
pushf
mov
mov
divl
lods
sub
test
sub
xor
popf
sti
dec
es
aam
loop
jecxz
hlt
sahf
inc
mov
icebp
pop
cmp
and
movsl
fdivrl
push
adc
sarb
repnz
fsubs
adc
repnz
cltd
mov
arpl
mov
mov
xor
mov
mov
sub
out
stc
sub
sub
pop
dec
push
cmp
push
scas
out
xchg
outsb
jae
stc
sti
test
mov
push
iret
imul
add
sub
inc
loopne
jecxz
sbb
or
mov
test
stc
mov
mov
mov
loop
inc
add
pop
dec
push
pop
ret
addb
pop
xor
in
mov
ss
scas
rcrl
icebp
dec
xchg
imul
cld
inc
mov
sub
xor
loopne
push
and
jbe
jb
mov
shrl
sarl
hlt
push
dec
pop
imul
shlb
mov
rclb
loop
pop
cmpb
mov
stos
fidivs
sbb
dec
bound
or
adc
jbe
xor
js
or
imul
add
jne
xchg
sahf
daa
mov
arpl
lods
fdivp
mov
or
jbe
lea
sbb
xchg
testb
dec
cmp
jae
lds
mov
sti
insb
popa
xor
mov
pop
movlhps
cld
aam
cmp
cmp
mov
ret
jmp
mov
cmp
dec
fildl
pop
adc
mov
out
xlat
or
xchg
push
pop
mov
mov
pop
mov
or
push
rcrl
jbe
pop
popf
fcoms
fsub
stos
scas
jns
movsl
xchg
mov
decb
cmp
adc
adc
mov
mov
bound
mov
mov
in
test
sbb
xchg
pop
icebp
jmp
cmc
addb
pop
mov
repnz
jbe
mov
mov
add
dec
inc
inc
xlat
xchg
xor
in
aad
cmpsl
or
pop
test
jge
arpl
xor
sub
jne
jg
mov
adc
movsb
test
ret
int
fbld
push
movsl
push
fwait
sub
sarl
adc
adc
adc
stos
movsb
ja
cmp
std
cwtl
outsl
xchg
iret
mov
nop
movsb
sub
adc
call
dec
fcomps
or
jmp
ret
or
loope
and
sub
dec
in
push
mov
fisttps
mov
das
add
mov
cmc
pop
xor
push
and
in
pop
call
in
xorl
mov
inc
insl
dec
movl
mov
ret
icebp
les
push
mov
adc
jno
jmp
cmpsl
loop
orb
jp
sub
iret
mov
sbb
mov
or
pop
mov
adc
cmpsb
pop
sub
mov
movsb
add
out
cmp
sahf
or
leave
jg
mov
dec
call
add
mov
jbe
jmp
or
add
out
loope
jnp
aad
fcompl
mov
cmpsb
shrl
sub
lds
jns
cmp
jb
test
imul
push
cwtl
dec
movups
fcmovnbe
in
push
add
out
leave
icebp
test
mov
adc
sub
adcb
mov
stc
dec
push
cld
or
jne
jle
sbb
gs
cmp
sub
fs
in
nop
jle
jge
push
insl
jmp
ret
xor
jge
push
mov
iret
gs
dec
outsb
jg
iret
push
ja
fisttps
aad
mov
ret
ds
sbb
sarb
int
add
movl
pop
into
hlt
cmp
lods
mov
mov
shll
mov
lret
in
cmp
xchg
mov
dec
push
cmp
aaa
xchg
ret
loop
lcall
movsl
mov
stc
sbb
pop
mov
or
xchg
pop
push
pop
out
ja
push
stc
xchg
bound
mov
sbb
sbb
sbb
xchg
dec
cmpsl
jno,pt
or
mov
jno
pop
bswap
push
and
in
xchg
cli
ds
add
dec
jmp
sbb
jg
or
pushf
adc
sbb
jae
fsubrl
arpl
push
cmpl
aam
inc
xchg
pop
lret
je
bnd
adcb
and
xor
std
idivb
mov
jns
cmpl
mov
inc
vmulpd
jno
loop
jno
and
inc
insl
jge
adc
sbb
xchg
fdivs
faddl
dec
sahf
inc
repz
cmp
dec
dec
and
shl
sub
mov
test
xchg
jmp
ss
mov
push
xchg
icebp
mov
loopne
shll
xchg
xchg
bound
loop
adc
pop
in
pop
aas
ret
adc
ds
mov
lods
xchg
add
mov
adc
popf
lret
push
inc
push
cld
pop
sub
jne
xchg
mov
ljmp
dec
mov
mov
dec
push
scas
shlb
fildl
icebp
sbb
add
pop
ss
pushf
enter
add
mov
xchg
test
cmp
vmovshdup
inc
xchg
or
inc
adc
mov
jg
lahf
fisttpl
or
inc
mov
aaa
mov
movsl
in
icebp
sbb
push
imul
clc
adc
loopne
mov
dec
cmp
aam
pop
pop
add
fisubrs
int3
outsb
leave
xor
inc
sti
adc
dec
call
testl
xchg
push
mov
mov
jae
cmc
add
pop
inc
enter
loope
movsb
loop
push
pop
test
test
ja
mov
sbb
adc
int3
lret
push
jge
xchg
sub
stos
fcmove
lahf
int
sub
mov
adc
xor
and
loop
xchg
cmp
jmp
or
and
xchg
leave
add
sub
and
mov
pop
push
mov
jg
pop
inc
test
jno
loop
std
xchg
mov
and
cmp
imul
sarl
push
adc
add
jnp
lret
add
xchg
dec
fadd
insl
shlb
mov
push
cli
stc
pop
sbb
xor
cld
cmp
push
xchg
in
dec
fwait
or
xor
inc
fisubrl
fwait
enter
jle
scas
loop
sbb
xchg
in
push
cmp
or
imul
xor
xor
popa
mov
in
outsl
xchg
push
fdivrl
xchg
and
cld
adc
jge
sub
inc
mov
adc
aaa
out
lods
dec
loopne
push
jl
fldenv
divb
int
sub
and
sub
mov
and
call
mov
xchg
lret
pop
andb
pop
iret
lds
mov
sahf
adcb
lods
mov
out
or
xchg
aam
push
inc
or
sbbb
jge
in
addr16
cmp
lea
add
mov
cmp
jl
rorl
jecxz
or
inc
cs
test
hlt
jae
cmp
ljmp
pop
xor
dec
stos
inc
out
sbb
in
mov
jle
punpckldq
mov
cmp
out
leave
xchg
mov
jg
aas
inc
lret
out
lods
mov
test
lcall
or
js
jg
jnp
dec
sarl
cmp
in
jne
inc
xor
inc
pop
cmp
movsb
jnp
loope
cmp
mov
sahf
dec
scas
xchg
test
pop
movsb
jne
imul
orl
pop
jo
ljmp
clc
movsb
xor
cmp
dec
or
dec
push
jmp
dec
mov
clc
xor
out
mov
jno
ret
pop
sub
cltd
test
cmp
das
push
mov
cmp
icebp
cli
mov
fs
adc
xor
cld
in
push
xchg
mov
push
jno
lret
push
inc
addl
xchg
fdivrl
push
add
inc
xchg
inc
xor
mov
je
into
push
daa
je
lahf
rcr
ja
test
loopne
sahf
lcallw
mov
mov
popl
mov
out
inc
and
fdivrs
pshufw
dec
popa
adc
and
mov
hlt
fst
std
adc
push
out
mull
fldcw
mov
jbe
cmp
in
push
xchg
out
test
cmp
int3
imulb
movntps
into
imul
dec
mov
aaa
push
sbb
leave
ss
in
cmpsl
ficoml
sub
jo
call
sbb
xor
cmp
mov
inc
test
scas
sbb
jle
mov
sub
mov
loop
sti
int
pop
sub
sub
repz
jno
in
mov
scas
cs
xor
sahf
test
xlat
js
jge
out
gs
pop
push
jnp
jp
or
mov
pop
push
jmp
pusha
lcall
mov
and
insl
inc
sarb
insb
or
mov
sub
int3
clc
jb
dec
sbb
jmp
icebp
pop
hlt
pop
adc
scas
das
pop
xor
call
enter
pop
lret
sub
mov
dec
push
push
dec
fisubs
push
rclb
add
jo
push
fidivs
cmpsb
imul
cmp
xchg
push
mov
testl
popf
inc
pop
jbe
pop
mov
imul
das
mov
mov
pop
lods
and
push
mov
jne
push
xorl
stos
fsubp
pushf
pusha
and
cmpsl
cmp
pop
aad
cmp
jecxz
mov
adc
mov
adc
clc
sbb
inc
sbb
jbe
movsb
dec
jae
jae
repnz
pop
fs
fisubs
dec
mov
lcall
cli
inc
push
inc
gs
pop
out
pushf
frstor
test
sti
jp
negl
jecxz
ds
pop
push
and
xor
int
cli
sbb
cli
add
lret
out
aaa
cli
cmp
scas
dec
rcll
enter
sbb
sub
lods
mov
jnp
movl
lcall
jae
push
ficoms
or
loop
sub
cmp
mov
xor
inc
jbe
xchg
mov
pop
inc
and
xchg
mov
mov
inc
or
iret
rcll
or
out
stc
jg
jb
movsl
xchg
sbb
popf
cwtl
cwtl
cmp
stos
outsl
leave
scas
ret
xor
mov
sub
pop
and
add
jl
jp
inc
xor
enter
fadd
in
or
shrl
add
mov
cmp
nop
and
fstl
xor
push
dec
pop
stos
movsb
je
into
cmp
dec
sub
mov
addr16
fidivrs
or
cmp
mov
test
xchg
les
in
mov
iret
jg
mov
push
pop
inc
inc
mov
lock
mov
fsubrp
pop
insl
data16
xchg
pop
stos
lcall
mov
gs
loope
jecxz
jno
push
and
cltd
lds
and
mov
add
pop
gs
cwtl
add
es
cs
jae
int
ljmp
iret
test
inc
cmp
fstp
popf
xor
jb
mov
test
sub
jo
lods
lret
or
xchg
xor
insl
data16
je
ret
or
push
jnp
push
mov
movsb
rclb
lret
mov
cs
jl
sub
jno
pop
mov
leave
bound
rol
inc
aas
ror
add
in
repnz
icebp
push
xor
xchg
mov
add
cmp
or
pop
sbb
sbb
cltd
aaa
pandn
add
out
and
out
daa
aam
test
cmp
xchg
sbb
mov
aam
jp
arpl
bound
jo
mov
popf
pop
pop
add
testb
jno
adc
xchg
int3
xor
aam
aam
pop
test
out
sub
jb
ja
subl
pop
pop
cmp
push
sahf
loopne
mov
sbb
lock
xchg
pop
push
sbbl
aaa
jle
mov
outsb
push
mov
xlat
sub
mov
jo
push
jmp
stos
out
adc
fcomp
mov
pop
xchg
xchg
addr16
dec
arpl
imul
ljmp
fsts
jg
xor
lods
push
mov
into
rol
fucomi
cmp
test
xor
das
incl
lcall
decl
imul
stos
testb
mov
sbb
aam
push
xlat
jmp
inc
inc
divb
sbbl
gs
mov
sub
cli
sbb
addl
push
xor
or
adc
inc
bound
xchg
ljmp
mov
bound
dec
sbb
mov
mov
insl
mov
popa
dec
xor
sti
lods
sbb
mov
sti
rcrb
pop
cmp
dec
in
prefetcht1
adc
pop
call
inc
cld
jge
out
insb
push
cmp
xchg
sub
cmpsl
xchg
fs
mov
lods
test
fucomip
mov
divl
rcrl
dec
cmpsl
push
cmp
ret
cmc
ret
loop
icebp
call
rcl
cmp
adc
push
data16
mov
jg
cwtl
iret
dec
mov
and
inc
sub
mov
and
cwtl
ss
jne
nop
clc
testl
les
addr16
movsl
mov
jle
xor
mov
xor
lcall
out
sbb
jp
arpl
pop
jmp
ret
push
add
cmpsl
xor
pop
int
ss
cs
jo
mov
insb
adc
jno
addr16
cmp
fcmovu
mov
adc
nop
mov
sbb
add
fstl
scas
cmp
dec
jb
sbb
xchg
add
mov
add
loope
sbb
and
jl
aam
enter
call
or
inc
test
testl
sub
popa
lods
rcl
imul
leave
cld
pop
scas
adc
fsubrl
or
lcall
into
ds
sub
or
out
jg
shrb
enter
cld
loopne
add
mov
pop
rclb
jno
out
inc
cmpsl
mov
push
aad
push
movsl
xor
push
aad
sub
or
fwait
into
add
gs
or
and
fs
adc
iret
cmp
adc
mov
sbb
lods
mov
xchg
int
je
sub
mov
ljmp
ret
sbb
or
mov
int3
int
dec
push
push
add
enter
mov
hlt
mov
jp
mov
jns
lods
xchg
std
dec
mov
scas
and
fsubs
into
fbstp
bnd
xchg
rorb
arpl
repz
ret
lret
sbb
cmpsl
sbb
pop
push
cmp
hlt
cmpsl
scas
xchg
xor
enter
sub
mov
jle
icebp
out
out
add
outsl
in
mov
add
mov
add
mov
test
enter
mov
mov
push
aad
mov
lret
and
loope
inc
arpl
xor
pop
mov
add
sub
repz
jne
fcmovu
sahf
out
or
cld
mov
jns
imul
jbe
stos
mov
inc
pushf
pusha
nop
jnp
pop
lds
cs
adc
or
bnd
fld
and
mov
insl
adc
bound
dec
adc
dec
insb
das
sti
pushf
stc
imul
sbb
int
mov
xchg
test
jb
arpl
pop
fdivrs
shlb
mov
add
jbe
and
sbb
fstps
mov
xchg
dec
mov
cwtl
cmp
cmp
add
leave
mov
and
imul
mov
mov
sub
das
add
loope
pusha
cld
scas
sahf
push
test
xchg
stc
rorl
ss
inc
mov
fdivrl
mov
orl
jl
cwtl
xor
push
call
inc
nop
clc
pop
xlat
cli
popf
mov
out
cmc
mov
lret
or
pushl
and
movsb
mov
lret
adc
add
shrd
jp
mov
and
in
sbb
test
xlat
pop
push
add
xchg
pop
add
mov
or
repz
mov
in
jo
jno
aaa
out
inc
das
inc
xor
dec
pop
inc
sbb
adc
sbb
adc
fsubrl
adc
pusha
pop
imul
inc
fcompl
sarb
ss
loope
pushf
jns
sbb
ja
fstl
imull
addl
push
push
mov
rep
out
cmp
les
and
and
and
scas
jmp
fs
add
push
adc
lods
js
sub
sub
mov
or
mov
dec
test
mov
das
jno
adc
fdivl
pop
dec
movsb
jle
xor
movsb
mov
xchg
fimull
push
fcomps
mov
lcall
seta
inc
push
sub
jo
pop
mov
iret
mov
or
jns
jle
leave
ret
repnz
rcrb
scas
subb
inc
fwait
mov
and
int
sub
or
mov
loopne
cmp
push
add
push
jns
mov
pop
aaa
sbb
repz
cmpsl
fmull
hlt
adc
daa
pop
mov
jnp
rol
dec
outsb
adc
sub
mov
shlb
jbe
or
out
aam
push
mov
lock
inc
ss
lahf
mov
mov
xorb
cmc
outsb
push
cmpsl
mov
pusha
sbb
lods
push
adc
pop
and
leave
es
jmp
fwait
dec
aad
cltd
cmp
sub
xor
push
xchg
mov
repnz
je
xchg
add
fiaddl
imul
xlat
mov
rclb
stos
dec
pop
daa
push
test
pusha
push
into
mov
cmp
xchg
test
imull
adc
lds
xchg
xchg
test
jnp
sti
mov
jge
jg
into
iret
std
imul
nop
xchg
dec
mov
bound
add
or
js
out
or
test
lds
add
icebp
adc
add
cmp
mov
add
add
pop
inc
cmpsl
js
rorb
sbb
ljmp
inc
xchg
xor
push
mov
cld
jb
orl
pop
cwtl
sbb
imul
std
cmpb
test
rclb
arpl
and
scas
cmp
and
mov
pop
push
out
push
mov
mov
cmp
cmp
cltd
fbstp
xor
sbb
hlt
jle
or
cwtl
loope
popa
scas
outsl
push
xchg
sbb
in
sub
xchg
movsl
cwtl
mov
out
jne
adc
mov
adc
roll
stos
xchg
les
mov
loopne
sahf
sub
mov
cwtl
or
cli
fsub
je
aas
inc
add
mov
xchg
inc
mov
fnstenv
mov
repnz
adc
dec
psubd
or
sbb
jge
mov
sbbl
xchg
dec
int
scas
inc
aaa
xor
mov
jb
and
xchg
out
xchg
cmp
mov
push
adc
shlb
cmp
out
mov
push
pusha
stos
dec
dec
dec
dec
xor
ss
sbb
and
popl
pop
sub
mov
fwait
cwtl
loopne
sbb
mov
pop
pop
sbb
and
pushw
add
jno
jns
lahf
xchg
xchg
fidivrs
xor
mov
daa
clc
push
sbb
ret
mov
push
stc
and
enter
aas
pop
ficompl
enter
icebp
aas
fisubrl
lods
and
jge
xchg
andb
lock
movsb
mov
rclb
sub
pop
data16
dec
outsb
push
pop
add
mov
movsb
inc
push
lods
mov
out
in
popf
and
rcr
pusha
push
dec
pop
lahf
cmpsb
in
or
cwtl
lea
xor
test
cmpsl
dec
pop
mov
inc
xchg
or
mov
leave
ret
sbb
xchg
add
cmovnp
test
dec
inc
sti
ss
setns
stc
cmp
addl
add
in
lods
insb
lcall
out
addl
add
std
mov
push
stos
or
insb
sub
jle
lods
cwtl
pusha
dec
jmp
in
in
ja
es
popf
dec
lret
sub
out
mov
int
jl
xchg
and
insw
fcompl
andl
lret
mov
add
ret
or
icebp
incl
lods
repnz
data16
and
cli
fwait
mov
pop
dec
clc
push
lods
push
cli
jb
cmp
call
dec
inc
addr16
cli
stos
call
cmpsb
clc
and
push
fwait
xor
inc
jle
call
dec
sub
and
scas
push
inc
push
push
fisttpl
mov
scas
sub
into
cmpsb
js
jno
xor
stc
shlb
xchg
out
sti
outsl
pop
adc
aam
lret
add
and
test
fnstenv
je
jecxz
mov
cltd
arpl
cmpsl
rcrb
cmp
movsl
jle
xchg
pop
or
dec
inc
in
pusha
and
cmp
xchg
fcomp
xor
imull
mov
push
bound
lock
je
shlb
sbb
sbb
xchg
inc
sbb
xchg
sar
sbb
sbb
lcall
add
xchg
mov
xchg
das
or
jno
and
xor
les
and
movsb
cs
loop
jecxz
xor
into
ret
ljmp
arpl
mov
cld
pop
xchg
sub
mov
roll
fsubl
xchg
ret
dec
jb
cmp
mov
add
imul
push
jns
scas
sub
outsb
sbb
jge
sub
shr
jo
pop
xor
cs
inc
and
sarl
push
and
loopne
mov
int3
out
js
std
add
jne
mov
pop
filds
sarl
or
and
test
sbb
ja
push
cmpsl
dec
pop
test
inc
mov
fsubrl
sub
cli
mov
daa
pop
js
lods
aam
mov
aad
int3
das
dec
cmp
nop
mov
mov
call
mov
leave
pop
stos
imul
fildl
mov
jbe
dec
insb
loope
and
nop
cmp
out
sbb
sbb
shll
mov
pushf
xor
xchg
jnp
into
lock
mov
mov
and
ljmp
pushl
pop
psubq
push
jle
movsb
repnz
cli
bound
ja
aam
xorb
dec
leave
push
push
roll
les
frstpm(287
add
adc
sti
frstor
insb
test
mov
call
push
add
cmp
xchg
push
jbe
jno
inc
pop
bndstx
or
mov
xchg
test
or
ret
loop
or
icebp
testb
jmp
mov
xor
mov
enter
les
daa
stos
mov
int
mov
dec
ss
mov
and
mov
or
fmull
inc
je
sbb
jne
ret
lock
or
test
sub
xor
ret
dec
stos
xor
popa
or
jo
dec
pop
stos
ds
fxam
or
int3
xor
aam
push
test
push
in
ljmp
cmpl
shrb
and
jge
pop
test
mov
push
sbb
mov
cmpsb
sub
inc
cltd
jge
test
int
fnsave
lret
fs
sub
pusha
jmp
mull
mov
push
jae
popa
sbb
inc
mov
and
int3
push
inc
push
aas
out
imul
movsl
ret
lcall
mov
add
push
inc
test
xchg
sub
into
push
loop
sub
push
incb
mov
jb
js
aam
int3
push
add
pop
pop
jb
push
or
mov
or
lcall
sub
jae
mov
push
movsl
pop
cwtl
mov
gs
adc
cmp
rclb
aaa
dec
dec
mov
mov
cmp
ret
cmpsl
clc
cmp
cmpsb
mov
push
rolb
xchg
mov
out
arpl
pusha
xchg
mov
dec
mov
push
or
pop
push
js
push
xor
jno
add
jge
loop
arpl
xchg
pop
cmp
les
dec
clc
pop
adc
pushf
xor
and
enter
test
xor
sbb
sarb
data16
xchg
ret
pop
ffree
int3
roll
push
mov
jns
leave
into
lock
xchg
std
adc
or
xchg
push
ret
mov
dec
mov
js
cmp
out
jnp
mov
xchg
das
scas
ret
lock
test
adc
rclb
mov
mov
xor
lret
add
cmp
pop
subb
xchg
and
lret
xchg
pusha
nop
icebp
cmp
imulb
lods
inc
mov
dec
shll
mov
movsl
mov
loopne
insl
hlt
pop
inc
add
test
jl
pop
sub
std
leave
and
sub
in
out
in
mov
mov
pop
dec
sub
insl
icebp
mov
push
mov
xchg
aas
jmp
dec
filds
movsb
and
cmp
rol
orb
inc
xor
popa
std
arpl
sbb
sbb
dec
cltd
mov
inc
nop
fistl
xor
iret
sbb
push
push
and
sahf
mov
add
sub
aam
ja
mov
pop
pushf
clc
dec
in
or
pop
dec
xchg
sub
dec
lret
cmp
lea
shrb
xor
je
test
dec
mov
xchg
or
popf
mov
ljmp
das
dec
mov
push
into
lret
add
jl
cmp
pop
into
lret
ljmp
fs
mov
mov
push
enter
mov
in
mov
mov
enter
inc
das
cmc
xchg
or
sub
fdiv
xchg
ficoml
jo
rcrl
push
test
cmp
inc
pop
cli
adc
xchg
rol
xchg
mov
mov
test
out
add
outsb
mov
xor
xor
xorb
xchg
shrl
xor
gs
fstpt
sub
xor
stos
pushf
fwait
sbb
or
mov
lods
mov
pop
adc
mov
cmp
ljmp
inc
fdivr
movsb
shl
rclb
sti
dec
adc
mov
dec
lahf
adc
divb
jle
sbb
push
mov
fwait
lret
jp
pop
cmp
out
xchg
popf
ljmp
fwait
stos
aaa
out
cmpsl
jnp
push
lahf
ss
cmp
rol
sbb
mov
sbb
jnp
fildl
pop
add
loopne
mov
jns
imul
pop
pop
sbb
insb
into
mov
cmpsb
xor
mov
pop
xchg
push
andl
mov
xor
inc
repnz
imul
sbb
and
pop
je
mov
insb
sbb
mov
adcl
dec
clc
dec
xchg
xchg
xchg
popf
mov
mov
imulb
inc
cli
scas
sti
loopne
das
mov
mov
aaa
adcb
pop
dec
mov
dec
or
lahf
cmc
out
and
shr
mov
xor
stos
incb
jo
dec
cmp
loope
rorl
test
scas
cmp
mov
call
fstps
daa
or
mov
push
nop
push
test
in
and
push
dec
hlt
cmp
ret
xchg
mov
sbb
or
jl
mov
aad
sub
out
fwait
rolb
stos
mov
pop
lds
adc
xchg
mov
inc
insb
std
cmc
or
xchg
and
add
and
pop
push
sbb
repz
nop
fdivl
int
sbb
rclb
xchg
negb
stos
dec
in
dec
cmp
sbb
inc
in
cli
push
ja
sbb
sub
rolb
push
outsl
hlt
jmp
inc
add
pusha
sbb
sbb
loopne
sbb
das
call
bound
mov
imul
pop
gs
dec
add
dec
aas
jne
inc
sub
int3
js
stc
jecxz
scas
add
jnp
adcb
pop
cwtl
stos
into
pushf
subl
xchg
xor
cld
cld
pop
cmpsl
pop
jo
mov
xchg
mov
mov
sahf
adc
rolb
insl
negb
jb
std
scas
ret
inc
xor
adc
mov
and
mov
and
sti
sub
insl
inc
lahf
xchg
sub
pusha
sub
mov
jg
loopne
aad
insl
cli
aad
pop
jmp
mov
in
push
jle
cmp
sub
jg
mov
and
fisubs
sbb
jns
leave
mov
and
scas
out
repnz
data16
xor
sub
icebp
sub
mov
mov
stos
movsl
aas
sub
inc
dec
outsl
push
insb
sub
fnstsw
loop
xor
mov
outsl
int
push
dec
mov
lahf
add
inc
test
mov
mov
stos
or
bsr
insl
push
add
movzbl
inc
xor
adc
sub
out
or
jae
sub
insb
push
jge
push
lret
movsb
pop
push
add
mov
push
lock
int3
mov
add
bound
pop
out
pusha
in
cmp
mov
xor
push
sub
shl
fiadds
dec
mov
jae
mov
push
dec
cld
scas
xchg
jecxz
in
outsb
jge
imulb
shlb
cli
roll
repz
or
inc
out
push
mov
add
xorl
lea
fadds
push
sbb
jg
sbb
dec
pop
mov
repnz
mov
pop
daa
jnp
mov
push
lea
or
ret
xchg
sbb
add
mov
cmc
in
test
jmp
jnp
inc
lcall
pusha
orl
inc
stos
or
xchg
stc
sub
add
icebp
lahf
xchg
sbb
shrl
les
inc
std
and
ficoml
jns
dec
in
rolb
adc
mov
mov
dec
hlt
jne
add
stos
sbb
inc
notl
pop
inc
cld
add
repnz
mov
ljmp
add
lea
cmpsl
jle
out
add
mov
jb
add
pop
jne
popa
cmpl
int
mov
mov
es
jns
mov
int
loopne
cmp
cmp
cltd
sbb
dec
dec
shrl
sbb
imul
sub
insb
icebp
xlat
arpl
addr16
push
cmpsb
cwtl
je
gs
cltd
mov
loope
mov
out
and
cltd
inc
scas
adc
insl
sahf
stos
sbb
adc
xor
pop
pop
push
xor
fstpt
pop
mov
shlb
clc
push
inc
pop
out
cmp
call
fldenv
or
inc
pop
lret
pop
bound
pushf
xchg
dec
mov
icebp
ret
imul
cld
hlt
jmp
adc
push
imul
mov
pop
mov
ret
ret
imul
lds
adc
cmp
test
ljmp
inc
outsb
jne
cmp
sbb
push
dec
xchg
push
jmp
sub
pop
push
adc
aaa
dec
xor
cld
adc
cmp
bound
loope
mov
arpl
lahf
subb
inc
and
jo
push
fadds
stos
jns
push
pop
shlb
movsl
aas
mov
addr16
movsl
cltd
das
jnp
xchg
pop
nop
cmpsb
jmp
dec
rcrb
test
push
pop
test
xchg
mov
lods
scas
scas
adcl
or
pop
aad
notb
or
ds
into
arpl
xchg
popf
rol
or
push
or
xchg
out
out
jno
push
sbb
mov
jnp
xor
hlt
mov
cli
add
add
cmc
shll
and
ret
mov
jno
pshufw
xor
mov
mov
pusha
or
mov
cmp
mov
rclb
popf
ret
inc
popf
pusha
scas
jl
mov
pushf
lock
inc
imul
push
jp
clc
adc
mov
addr16
incl
bound
dec
hlt
imul
lahf
mov
addr16
scas
and
pop
daa
mov
fucomi
mov
mov
mov
inc
xchg
jbe
stos
or
imul
test
mov
aas
push
push
sbb
mov
mov
sub
sahf
ffree
pop
add
aas
xor
push
ss
stos
push
fidivrl
xchg
bound
xchg
lods
scas
fcoms
add
lds
pop
popa
xchg
and
jo
pop
ss
jae
jp
pusha
xor
pop
fdivrl
sbb
jns
sbb
pop
js
push
test
sbb
cmpsl
mov
ss
add
jmp
cld
cli
imul
pop
sti
jle
cmp
xchg
adc
xchg
mov
jg
pusha
and
inc
inc
xor
sbb
push
jo
enter
jae
xor
rcll
add
dec
adc
add
scas
inc
xor
xor
xor
xorl
dec
sahf
jo
mov
sbb
shr
mov
dec
mov
insb
movsb
jg
in
xor
jnp
nop
ds
push
inc
xchg
in
xchg
mov
mov
int3
cmp
nop
cmp
sarl
divb
mov
inc
je
mov
sbb
out
loop
andl
lods
ret
sbb
jne
fcompl
xor
subl
aaa
cmp
ds
mov
xor
xchg
mov
ja
imul
bound
sbb
fidivrs
loope
sbb
push
imul
or
icebp
xchg
jmp
sub
and
sub
insl
mov
imul
push
cmp
inc
lods
int
mov
cmpsl
js
xchg
mov
cltd
push
clc
fsubs
inc
loopne
pop
in
gs
in
out
cmp
xchg
or
mov
paddsb
jne
inc
shlb
enter
sub
pusha
xchg
movsb
pushf
push
ja
push
jmp
dec
lock
jno
and
mov
sbb
mov
fwait
xchg
jmp
fsubs
jbe
ss
xor
imul
outsl
jmp
das
stos
pop
mov
lahf
repz
testb
fnstenv
cmc
ss
cmc
inc
dec
sbb
push
repnz
xchg
loopne
ljmp
idivb
int
stos
out
xor
bnd
lods
pop
outsb
mov
pop
adc
cmp
or
or
gs
xchg
int3
pushf
xchg
pushf
cld
adc
mov
shll
dec
fst
pop
lea
adc
sub
data16
js
sbb
cltd
jns
jp
rclb
xor
xchg
inc
scas
cli
or
loop
add
dec
stos
mov
sub
mov
enter
push
call
add
orb
mov
sub
daa
xor
bsr
and
xchg
out
cwtl
push
dec
imulb
fsubrp
and
addr16
fcoms
loopw
loope
cmp
cld
lret
cmp
xor
fadds
adcb
fnstenv
lds
add
pop
adc
gs
xor
jecxz
sub
mov
push
pop
xor
sarb
mov
sub
daa
jbe
imul
jb,pt
push
mov
andb
xchg
mov
pusha
mov
in
adc
cmc
cmpsb
clc
scas
mov
mov
out
sbb
mov
push
mov
out
or
inc
repz
add
sub
xor
adc
cmp
out
stos
jecxz
movsl
inc
jae
inc
xchg
inc
mov
push
aam
loopne
mov
sub
xchg
je
ret
xor
mov
sub
cmp
iret
mov
push
fadds
ds
or
out
ret
push
cmpsl
adc
repz
push
fsub
popa
ret
mov
clc
mov
push
lea
ror
inc
call
adc
xor
or
push
jbe
jbe
repz
xor
pusha
fcmove
lods
push
aad
mov
insb
enter
mov
pop
mov
out
lock
mov
jns
pushf
inc
jo
into
mov
xlat
int
insb
in
in
xlat
jecxz
add
pushf
out
xchg
inc
outsl
xor
push
hlt
mov
xchg
dec
bound
mov
rcrl
fcomps
add
rorl
cli
pop
jno
aaa
pop
enter
mov
inc
xchg
mov
xlat
xchg
pushf
jle
mov
pop
cmc
push
call
pop
adc
dec
mov
xchg
insb
pushf
movsb
xchg
add
iret
add
test
push
or
fldl
jp
xor
mov
mov
cmp
aam
test
adc
icebp
cwtl
loopne
pop
in
jl
iret
imul
call
lret
test
mov
pop
cwtl
ret
std
or
mov
fnstsw
cltd
je
xchg
aad
aam
sbb
sub
clc
in
shlb
pop
jne
outsb
rclb
call
mov
out
cmp
lcall
pop
push
mov
jl
rcrb
cld
and
and
cmc
adc
jo
lods
or
jl
movsb
sahf
and
xor
push
mov
lret
pop
aaa
cmp
mov
fmuls
scas
test
testl
pop
inc
out
push
sbb
scas
cmovb
pop
in
shll
orl
push
mov
sbb
imul
icebp
pop
add
sbb
punpckhdq
dec
or
xor
xchg
cmp
mov
lret
ds
fistps
cltd
fcoml
into
lock
cmp
lret
clc
add
repz
mov
aaa
mov
inc
cmp
iret
lret
dec
push
inc
outsb
bound
sarb
dec
xlat
mov
add
jne
test
fs
bound
pusha
mov
adc
xor
ljmp
mov
adc
pop
std
js
jne
stc
jmp
fcmovu
enter
inc
push
adc
mov
addb
loope
fwait
repnz
stos
xor
dec
les
push
push
adc
in
ficompl
imul
mov
sbb
gs
and
das
mov
fiaddl
mov
int3
andl
call
cmp
pop
jo
std
sbb
imul
mov
dec
sbb
inc
scas
aaa
jae
sahf
jne
cli
divb
lods
mov
sub
and
xchg
add
repz
mov
cmp
xchg
lret
add
in
pop
dec
lds
sbb
sbb
adcl
adc
fbld
cmpsl
into
out
push
and
jmp
push
cli
adc
out
push
mov
fwait
divb
xchg
std
cmp
jo
fadds
mov
fdivl
sbb
loop
fistpll
ljmp
inc
dec
out
cmp
mul
mov
jle
sbbl
mov
or
mov
sbb
out
or
jbe
or
test
push
aaa
fidivrl
add
js
imul
pop
mov
hlt
outsl
into
pushf
jle
into
pop
sub
sbb
fwait
pop
test
stc
sub
xchg
sub
dec
cmc
inc
sbb
sub
mov
movsl
mov
fmull
in
ret
into
div
psubw
inc
push
rcr
popf
lods
push
test
rcll
sub
and
scas
push
test
xchg
ret
loop
mov
xchg
dec
cmp
test
mov
sub
scas
pop
mov
pushf
rorb
xlat
pusha
mov
lods
pop
fdivp
hlt
out
push
mov
aam
out
sub
sub
popw
daa
loopne
in
fcompl
inc
add
pop
cmp
sbb
in
outsb
inc
sub
cmp
jne
into
adc
mov
test
repnz
inc
or
loop
mov
add
bound
in
jp
ljmp
dec
push
pop
loope
pop
inc
dec
fs
das
inc
sub
xor
fnstcw
sub
ret
stc
out
andl
arpl
jecxz
pop
push
jecxz
std
xacquire
mov
xor
sbb
mov
cmpsl
jle
adc
pop
dec
insl
pop
mov
cmp
leave
std
repz
dec
inc
sbb
loop
mov
mov
mov
and
shlb
push
aam
gs
mov
push
repz
xchg
jo
and
imul
repnz
orb
ss
nopl
push
add
sub
jecxz
aas
fildl
add
sbb
and
xchg
repz
mov
cmp
or
mov
mov
lods
fidivl
mov
popf
in
cmp
mov
into
insb
and
and
icebp
arpl
adcl
adc
lcall
xorl
sub
cmp
pop
popf
out
enter
pop
out
imul
cmp
adc
or
outsb
clc
adc
sbb
dec
pinsrw
bound
hlt
les
rorl
imul
scas
vhaddpd
cmp
inc
addr16
push
outsl
pop
stc
add
cs
popa
inc
clc
jo
aaa
insl
sbb
mov
and
mov
rol
adc
dec
insb
fiadds
hlt
dec
sbb
stos
pop
xor
fs
lods
add
inc
xor
push
pop
xchg
stc
sti
xor
movsl
aas
idivl
enter
insb
lahf
js
ss
jno
lahf
inc
jns
lret
repnz
frstor
jl
jb
inc
sbb
lcall
fnstcw
fstpt
idivb
into
mov
popf
xchg
pushf
inc
lret
dec
call
inc
jge
imul
dec
pushaw
fsubrs
fwait
scas
movsb
and
cmc
std
fwait
rolb
sbb
into
lock
clc
mov
mov
hlt
arpl
sub
call
add
lahf
cmp
sbb
insl
imull
add
add
jg
stos
xor
and
stc
xchg
push
stos
mov
jp
xchg
jp
ss
cwtl
pop
mov
add
mov
inc
lock
test
dec
mov
cmc
jne
xor
addl
inc
mov
mov
mov
aas
dec
lcall
jb
out
scas
loopne
and
fadds
inc
fwait
ret
jbe
lds
sub
nop
jmp
jg
inc
mov
insl
pop
cmp
inc
sahf
popf
sti
popa
mov
out
push
fbld
rclb
adc
fsubs
jns
sti
cmc
inc
jp
inc
lret
test
insb
les
addl
les
mov
sbb
xchg
or
in
cmp
mov
pushf
sub
jbe
cmp
loope
sub
scas
mov
sti
cld
dec
hlt
jbe
pop
lock
mov
jge
inc
rolb
xchg
cltd
mov
mov
daa
or
lret
mov
imul
or
add
and
leave
xor
cltd
int
push
rcll
lock
nop
movnti
std
mov
jns
movsl
push
push
dec
jns
dec
fmuls
nop
pop
mov
push
or
std
push
adc
test
nop
test
mov
aaa
jns
dec
divb
loopne
push
fcmovb
jmp
mov
shrb
cwtl
inc
or
pop
pop
inc
mov
js
push
les
add
or
enter
add
adc
out
mov
inc
inc
pop
cmp
pop
mov
cld
or
es
out
in
sbb
jnp
popf
popf
mov
jmp
andl
inc
testl
add
push
das
test
push
sbb
lret
cmp
data16
dec
or
loop
add
es
popa
mov
movsb
cmp
in
mov
leave
in
xor
dec
add
lea
cli
cmpsb
add
outsl
nop
out
js
push
rorb
js
adc
cmpsl
adc
mov
or
ficoml
push
imul
pop
sbb
adc
mov
pusha
shlb
mov
stc
pop
add
sbb
push
dec
push
mov
int
jle
push
cmc
inc
dec
inc
rcrl
jb
mov
lcall
xor
mov
and
imul
rolb
mov
lret
add
dec
lret
jg
aas
cli
mov
out
mov
cs
or
fidivl
mov
ror
ss
enter
subb
lds
push
stc
mov
xchg
add
push
mov
leave
add
jns
stc
sub
inc
xor
sbb
sbb
add
sar
or
sbb
push
hlt
bound
add
out
sub
mov
sbb
xor
mov
push
hlt
sub
push
int3
dec
cwtl
mov
testl
xchg
jne
hlt
not
iret
imul
cmp
pusha
and
xor
mov
mov
lcall
adc
lcall
mov
in
inc
fistpl
arpl
push
cld
sub
dec
jbe
in
mov
sub
dec
mov
hlt
cmp
sbb
nop
test
pop
stos
dec
hlt
enter
les
jae
out
pop
mov
orl
mov
mov
and
add
hlt
sbb
outsl
cmp
jne
mov
push
mov
push
fstl
fsincos
dec
jno
adc
jnp
fisttpl
lret
movsb
sbb
mov
push
sbb
faddp
xchg
aam
and
scas
inc
pop
or
dec
xchg
sub
push
xchg
add
adc
and
xorb
ja
es
pop
lret
jae
shrd
jns
ficoms
in
loopne
movsl
in
push
lcall
xchg
xlat
xor
jmp
je
mov
popa
aas
adc
or
in
adc
in
rcll
mov
in
outsl
ret
mov
das
cmpl
xor
sarl
sbb
loop
jle
push
dec
jl
mov
in
mov
cmp
lods
lods
sbb
stos
add
mov
xor
stc
ror
pusha
cs
scas
mov
jo
repnz
pop
fldt
leave
mov
pop
xchg
push
mov
sub
in
or
add
enter
xor
test
push
popf
sarl
sti
xor
dec
sbb
mov
add
jge
lret
or
cmp
imul
test
adc
rcrb
or
mov
xor
mov
inc
jns
push
inc
js
fxam
scas
dec
or
call
xchg
aad
cmpsb
insb
and
lret
cmpsb
push
xor
sbb
mov
cmp
lds
dec
fidivs
lret
popa
retw
sub
fs
push
add
mul
insb
pop
add
mov
loope
ret
push
pusha
and
pop
fucomip
jecxz
in
sub
sbb
adc
outsl
jnp
stos
inc
ror
adc
xchg
sti
rclb
mov
cmp
cmpsl
lods
bnd
push
ret
jbe
stc
aaa
loopne
mov
mov
movsb
or
lds
xor
sbb
stos
pop
fldenv
aad
add
jno
mov
mov
jle
in
sub
aaa
pushl
push
sahf
xlat
dec
gs
mov
jle
cmp
notl
out
lret
and
insl
test
fbstp
fisttps
pop
xor
ret
pop
add
in
pop
mov
xlat
and
push
ss
sbb
pushf
and
cwtl
dec
stos
push
lea
aad
xor
push
jo
xchg
cmpb
sub
movsl
push
sub
mov
mov
inc
loopne
mov
lods
ss
cmp
sbb
jnp
shr
add
stc
test
add
xchg
fs
iret
sbb
js
insb
adcl
sub
lcall
jecxz
pop
dec
or
sbb
adc
lea
leave
mov
nop
mov
adc
jp
data16
jns
xor
enter
popaw
inc
pop
cmp
in
test
repnz
pop
into
sub
and
adc
pop
js
out
jle
inc
inc
std
ret
pop
cmp
jbe
sbb
push
je
fdivl
ds
or
lahf
rol
or
xchg
cwtl
movl
js
cmp
daa
movsl
pop
arpl
aaa
xchg
fnstsw
push
jo
pop
dec
imul
fcmovnu
dec
and
ja
xor
mov
mov
push
push
xor
fxch
jno
jp
and
enter
dec
ss
imul
loope
cmp
mov
popa
lock
into
push
push
mov
pushf
aaa
lock
sbb
lret
adc
lds
addr16
out
adc
dec
enter
add
push
pop
leave
arpl
lods
adc
imul
fimuls
mov
sub
clc
adc
repnz
mov
lahf
out
ljmp
dec
push
mov
cmpsl
testb
in
jb
sub
arpl
ljmp
push
call
cmc
jne
push
push
jmp
lea
stos
decb
sarb
cmpsb
pop
mov
pop
nop
imul
adc
nop
mov
out
addr16
je
repz
and
mov
xrelease
bound
xchg
fs
imul
sbb
cmovg
sti
inc
mov
add
inc
icebp
mov
dec
sub
or
out
lahf
mov
adc
and
mov
inc
mov
dec
cmp
mov
cmovnp
push
movl
movsl
cmp
inc
gs
pop
mov
xor
cmpsl
movsl
loope
cmp
bound
into
jle
loop
enter
xchg
push
mov
lahf
cmpsl
int
pop
sub
lea
hlt
mov
push
and
xchg
enter
jnp
mov
loope
dec
jae
aaa
xor
mov
data16
fistpll
popf
push
subb
sbb
or
inc
or
imul
add
adc
jge
arpl
insb
cmp
fstpl
ja
mov
lock
pop
xorl
or
std
sub
jmp
das
stos
hlt
dec
cli
dec
or
addr16
or
mov
pop
xor
iret
insl
jg
pop
mov
jbe
xchg
dec
mov
mov
push
dec
and
bound
repnz
mov
arpl
ret
mov
jecxz
add
dec
add
adc
push
fs
clc
clc
notb
es
daa
das
dec
lods
cltd
pop
movsl
add
in
jo
push
mov
inc
jno
sbb
das
and
sbb
jb
adc
lcall
jne
jg
popf
dec
and
add
xor
arpl
mov
jmp
lret
inc
es
inc
aad
or
sbb
fisubl
shl
fs
mov
ljmp
adc
jo
dec
out
jg
adc
pop
jbe
imull
sbb
int
ja
or
aaa
addr16
adc
and
cmp
mov
push
jge
test
repnz
lret
les
mov
lret
push
mov
cmp
push
pop
ret
dec
jge
in
clc
movsl
out
cmp
test
out
mov
inc
push
xchg
addl
dec
sub
fldcw
push
imul
jbe
and
add
mov
or
sub
sbb
jecxz
xor
das
dec
push
add
jne
rol
cwtl
loop
inc
mov
mov
mov
jne
cmp
mov
dec
in
jb
mov
test
fildl
enter
adc
stc
or
push
add
scas
imul
adc
rclb
xor
imulb
mov
lcall
mov
jp
pop
push
jbe
cmpb
jnp
cmc
jbe
pop
adc
aaa
shlb
dec
ljmp
push
int3
ret
mov
sbb
fistps
pop
adc
and
and
and
mov
xchg
test
push
icebp
pop
xchg
notb
gs
pop
ret
jnp
and
xchg
jne
jbe
mov
scas
mov
popf
loope
lock
aaa
sbb
sub
add
dec
adc
into
sbb
imul
fsts
test
call
lret
xchg
push
jge
jno
out
lret
nop
lahf
mov
scas
jg
es
ret
imul
inc
mov
mov
test
out
or
push
and
sub
mov
pop
push
cld
inc
pop
icebp
arpl
test
icebp
or
add
fcmovb
shlb
out
xchg
jno
xchg
jg
out
push
adc
xor
mov
and
inc
aad
mov
and
push
inc
mov
fisubrl
jbe
inc
ds
shrb
mov
inc
idivb
pushaw
cmp
adc
xchg
sti
pop
push
push
test
push
cld
inc
lods
inc
pmovmskb
mov
xchg
sarl
mov
mov
add
ret
xlat
pop
loopne
add
or
sarl
lahf
adcl
push
pop
stos
arpl
xor
jbe
jg
popa
lret
xchg
add
pop
repz
dec
xchg
jns
sbb
decl
push
mov
fs
or
xchg
push
sbb
popa
mov
je
test
les
xorl
rol
jecxz
outsb
mov
fld
stc
dec
and
lcall
push
call
add
stos
notl
and
mov
test
cwtl
paddusb
and
std
icebp
and
ret
testb
cmc
jl
xchg
fucomip
sti
repnz
lea
jle
je
and
cmc
int3
fstl
pop
pop
xchg
and
jo
jmp
add
xor
sti
push
mov
fistpll
js
adc
dec
mov
jecxz
shlb
and
mov
stos
cmpsb
aas
shll
arpl
push
push
jle
cmpsl
lds
mov
xor
ljmp
jae
iret
call
outsb
add
cmp
push
mov
mov
cmp
clc
lods
jle
xor
mov
mov
pop
pusha
insl
inc
lcall
out
sub
inc
out
and
xchg
pop
push
pushf
lds
add
in
mov
jns
ja
pop
xor
outsb
cli
mov
and
mov
in
xchg
xor
call
frstor
inc
icebp
fwait
push
adc
adc
iret
push
repnz
ja
mov
add
mov
mov
mov
imul
adc
cmpl
fcoms
jne
mov
cmpsl
imul
dec
mov
imul
test
push
lsl
orl
push
cmp
in
xor
aam
inc
lods
and
imul
imul
in
ret
imul
push
or
xchg
loope
or
adc
lea
jle
popa
js
or
mov
add
mov
pusha
xor
movsb
push
popf
inc
sub
and
fisttpl
inc
lods
mov
or
push
xor
loopne
mov
leave
out
xor
call
mov
mov
mov
roll
adc
mov
jnp
mov
mov
popa
int3
imull
pop
sbb
fs
aaa
aam
sub
lock
dec
out
jmp
push
imul
mov
xor
mov
test
or
jae
test
jmp
dec
or
out
mov
pop
mov
push
rol
pop
movb
out
mov
add
jns
stos
jo
jo
cltd
add
sub
sub
or
lock
idivb
les
clc
pop
daa
in
iret
neg
nop
ja
cmp
fimuls
dec
sbb
sbb
push
jle
call
lcall
scas
std
andl
xor
test
or
and
pop
gs
sub
mov
out
and
scas
push
cmpsb
repz
adc
sbb
jp
jl
sbb
sub
or
imul
iret
adc
or
sub
inc
ret
call
mov
je
or
call
mov
cwtl
mov
push
pop
mov
fcomps
inc
loopne
insb
addr16
aaa
jnp
fsubrs
sub
mov
pop
adc
rcll
jbe
mov
aaa
aas
iret
cli
imul
les
xor
xchg
bound
inc
scas
es
orb
bound
repnz
ficoml
mov
pop
negb
jbe
iret
add
cwtl
xrelease
testb
lds
xchg
xor
jnp
in
rcrb
fldcw
or
div
cld
xchg
int3
sub
push
push
xchg
add
add
xor
cmp
dec
jb
out
or
cli
push
dec
pop
push
cmpsl
hlt
mov
add
adc
movsl
mov
xor
cmp
dec
mov
popf
xlat
loop
dec
fistpll
mov
fcompl
adc
jbe
aaa
rorl
mov
xchg
or
outsb
mov
negb
div
jecxz
outsl
xchg
mov
addr16
ret
lret
and
dec
inc
ret
mov
xchg
lods
fstps
lods
mov
out
ss
sub
or
xor
dec
sub
stos
xchg
cs
mov
sahf
xchg
or
and
and
pop
add
loopne
hlt
adc
jmp
sub
int3
add
xchg
shrl
out
fsubs
xor
and
push
insb
mov
sar
pop
xor
and
push
stc
add
in
sahf
push
in
fisttpl
in
xor
inc
lods
add
jmp
adc
mov
fists
push
xor
or
xchg
mov
lock
pop
dec
cmpsl
push
cmc
shll
les
movsb
lcall
inc
stos
or
or
mov
rol
dec
push
mov
lret
dec
add
sbb
rolb
or
mov
push
sub
repnz
ds
stc
popf
outsb
enter
int
and
cmp
lret
push
cmp
cmpl
call
adc
xor
cwtl
add
dec
add
sbb
adc
mov
in
mov
cmc
pop
lods
cwtl
cli
sbb
push
cs
or
shll
mov
sahf
shlb
jp
mov
lods
jae
add
outsb
addr16
repz
xchg
mov
push
mov
fiaddl
jecxz
in
shll
xchg
xor
fdivl
and
xor
xor
rclb
insl
test
jg
daa
push
sub
je
cmp
dec
jmp
out
mov
cmp
and
xchg
jo
stos
loope
jb
ja
ds
push
imul
sbb
addb
cmp
mov
gs
hlt
adc
fisttpl
adcl
call
imull
fnsave
push
pop
xchg
roll
add
xchg
inc
xchg
xor
imul
xchg
lods
lcall
mull
xchg
mov
fadd
lret
xchg
or
pop
jae
sbb
pop
xchg
push
and
test
jge
push
jns
insb
mov
stos
mov
fcmovnbe
out
cld
out
leave
int3
pop
xchg
cld
mov
add
shlb
fists
pop
push
in
fidivrs
and
loop
cmp
loope
ret
cmpsl
or
jno
cwtl
cmp
ja
or
clc
add
sub
repz
xchg
stc
in
cs
cmp
out
dec
inc
les
scas
lods
cmp
jbe
adc
ret
test
aaa
dec
aaa
lods
incl
cmp
pop
pop
test
orl
jo
aad
sbb
iret
loope
add
jp
loop
inc
testb
adc
mov
call
sub
xor
movsb
adc
notb
dec
cmpsb
and
je
ds
xlat
push
mov
cltd
xchg
cmpxchg
sbb
dec
pop
jb
outsb
ret
xchg
cld
test
cwtl
cmp
les
fcmovu
inc
fstl
mov
jmp
testb
lcall
mov
aas
jnp
jb
push
xor
ficoms
mov
cmp
outsb
xor
or
fnstenv
lods
arpl
and
or
imul
ret
repz
inc
or
pop
mov
es
fstpt
add
test
xlat
into
sbb
xor
add
and
insl
dec
pop
pop
fldenv
bound
xor
add
icebp
out
mov
or
mov
inc
call
jne
jne
imul
cs
inc
pop
call
imul
cli
lcall
jmp
imul
mov
sub
push
test
mov
lods
xchg
in
js
mov
test
xor
xchg
lods
mov
and
ljmp
ljmp
popa
loop
call
xchg
cs
loop
push
inc
test
fwait
push
sub
cmc
push
mov
pop
lods
adc
aad
dec
sub
cmp
sbbb
add
or
jge
inc
adc
sub
rcr
dec
add
jmp
mov
inc
sahf
sub
daa
cmpsb
sub
pop
mov
inc
lods
adc
and
jg
subb
paddsw
add
mov
ljmp
or
ret
adc
xchg
push
popf
mov
and
roll
fcoml
adc
bound
mov
cmp
xchg
xor
inc
stos
ret
bound
je
es
scas
in
in
xchg
in
fcmovu
pushl
or
xor
sarb
data16
push
bound
lret
lds
sbb
mov
divl
roll
jg
sub
lods
popa
fisttps
sahf
lods
scas
fwait
in
push
icebp
es
sbb
imul
and
and
sarb
mov
sbb
xchg
int3
cmp
insl
sbb
cmp
out
mov
fldl
or
inc
popa
fldenv
mov
cmpsl
mov
int
push
mov
lret
add
stos
xor
sbb
jmp
dec
adc
mov
jmp
push
push
fsubrs
xor
insl
arpl
push
fidivrl
in
push
sub
decl
mov
mov
andl
lds
pop
stos
dec
dec
lods
fs
call
leave
clc
adcb
nop
ret
dec
das
cltd
jns
mov
push
lret
sub
xor
stos
cmpsl
push
scas
es
insb
rcll
xchg
out
fidivs
xor
mov
cmp
rep
movsb
shl
lcall
aam
and
int3
xor
or
sbb
pop
fildl
test
dec
push
int
shlb
nop
in
push
std
icebp
push
stos
jnp
addr16
arpl
fsubp
outsb
fcompl
je
fbstp
lret
call
fmuls
pop
mov
cmpsb
ret
out
cmpsb
and
and
xor
scas
pop
pop
mov
cmp
popf
aam
scas
cmp
icebp
int
pop
das
cmp
into
jge
inc
ljmp
add
mov
add
pop
lods
andl
ljmp
out
hlt
dec
lret
sub
and
sahf
test
mov
arpl
test
popa
out
cli
inc
jne
mov
dec
rorb
cs
cmpsb
sbb
push
shrb
sub
dec
jp
pop
xchg
mov
push
arpl
fmull
fmuls
inc
daa
pop
pop
add
jbe
jb
xchg
mov
dec
or
cmp
lret
movsb
addr16
inc
cmp
in
jl
aaa
js
pop
jae
inc
dec
out
sti
lods
jg
mov
xchg
cmpsb
shlb
add
test
fcompl
sbb
fstl
imul
inc
repz
fdivrl
mov
push
jmp
mov
lahf
dec
fimull
mov
mov
push
movq
mov
inc
addb
dec
notb
inc
fisttpll
loope
and
loope
mov
adc
test
pop
cs
sub
fwait
lret
insl
loope
pop
mov
mov
push
mov
push
js
bound
testb
and
insb
add
mov
test
cmpsl
movsb
cmp
popa
inc
mov
popf
jmp
jmp
mov
insl
add
cmp
mull
mov
jb
add
loopne
testb
xor
in
les
add
mov
notl
js
xor
push
clc
jmp
mov
adc
jne
and
jg
jns
orl
add
sub
rcrb
jae
mov
test
sbb
mov
pushf
out
lcall
movsl
pop
pop
scas
jno
imull
and
icebp
in
inc
xor
std
push
test
push
stc
mov
push
nop
add
pop
push
scas
add
jg
cmp
idivl
out
rcrb
pop
pop
or
mov
cmp
add
insb
ret
inc
xchg
out
push
mov
inc
scas
sub
sub
jbe
loop
enter
pop
mov
bound
in
push
push
rclb
pop
les
or
mov
add
sbbb
imul
fs
repnz
adc
pop
mov
jo
leave
push
sbb
mov
or
mov
or
dec
sbb
push
push
aad
cld
mov
push
bound
in
inc
popa
add
xchg
or
or
repnz
adc
sbb
lods
mov
lea
mov
ret
out
clc
mov
dec
add
fisubrl
push
xchg
jecxz
es
repz
cmpsl
dec
inc
xor
cmp
xchg
pop
cld
pop
mov
mov
sub
jbe
outsb
push
daa
cwtl
ja
dec
ss
dec
xlat
push
lock
inc
cmp
imul
insl
je
fcomp
outsb
sahf
and
into
push
mov
jo
aas
pop
mov
cmp
push
pop
test
xchg
xchg
mov
xorb
sub
iret
dec
jecxz
xor
mov
mov
sbb
fwait
adc
xchg
jl
lods
pop
pop
loope
out
mov
pop
sbb
fwait
xchg
and
mov
and
inc
jmp
pop
pop
sub
push
lahf
adc
insb
hlt
lcall
inc
in
insb
pop
iret
pop
out
imul
mov
cmpsl
popa
mov
out
popa
sub
push
adc
add
cld
push
jmp
mov
cmpsl
dec
outsl
pop
mov
out
bswap
dec
fisubs
xor
mov
pop
iret
shl
jo
mov
pop
int
mov
pusha
and
cmpsl
push
sahf
jbe
lods
popa
fldcw
stos
test
xlat
sar
mov
jns
cltd
jns
repnz
inc
hlt
sarb
mov
iret
add
ret
lods
add
mov
mov
out
mov
aaa
icebp
add
insb
sbb
dec
int
or
sarb
test
jne
ljmp
mov
inc
dec
std
sti
pop
mov
or
mov
mov
pop
dec
mov
jno
inc
shl
mov
jno
data16
repnz
lods
pop
stc
pop
inc
adc
insb
daa
xor
jns
aas
insb
push
jbe
mov
ja
mov
data16
lcall
not
push
or
int
mov
sbb
push
out
movsb
fnsave
outsb
int3
jle
das
and
and
xchg
push
and
arpl
sub
sbb
cmpsb
cmp
cmc
pop
or
add
ret
pop
sub
inc
stos
sub
xchg
xlat
jo
dec
outsb
add
mov
inc
pop
ret
dec
sbb
jge
cmpb
cs
xor
or
adc
cmp
pop
jge
or
pusha
sub
out
lcall
int
pop
cmc
fstpt
incb
xchg
sub
sub
add
in
mov
divb
daa
out
das
mov
push
hlt
pop
or
repnz
fdivrl
lahf
test
loop
inc
ja
inc
xchg
pop
mov
sub
loopne
and
sar
and
or
aaa
xlat
mov
int
fwait
pop
mov
sbb
jns
and
pop
ja
sbb
mulb
mov
icebp
lret
shl
fsubs
push
mov
fcompl
les
push
inc
jl
outsb
sub
push
out
and
jg
lcall
ja
fs
xor
cmp
xchg
aas
outsl
inc
nop
xor
cmp
and
xchg
pop
sub
cld
mov
jae
jne
cmp
sti
addr16
lods
sub
lods
mov
aam
sbb
ds
filds
lds
out
test
mov
add
sbb
or
cmpsb
or
mov
push
into
sub
out
mov
add
fwait
inc
daa
stos
mov
popf
pop
or
enter
lret
add
ret
aas
inc
mov
negl
ret
outsb
pop
inc
movsl
adc
pop
mov
clc
ror
sub
fisubl
dec
add
dec
mov
repz
outsl
addl
ret
sbb
jns
mov
add
jo
xchg
sub
jnp
outsl
lods
xchg
fdiv
lret
xchg
mov
pop
inc
push
lea
fistpl
jb
roll
out
dec
std
outsl
sub
rcll
and
mov
mov
xor
test
dec
pop
adc
pmaddwd
dec
push
or
push
inc
and
push
aad
in
inc
push
or
ljmp
xlat
sbb
push
or
or
stc
jecxz
cs
cmp
jmp
sbb
test
jp
and
jle
lods
out
incb
inc
mov
xor
loop
sbbl
add
mov
dec
outsb
fdivrl
or
push
dec
cmpsb
push
stos
fs
fwait
lcall
das
movb
pop
fmull
jg
out
out
mov
xchg
cltd
outsb
popf
push
aam
outsb
xchg
dec
cmp
in
jle
fnstenv
repnz
ret
cmpsl
lret
or
std
aaa
test
mov
int3
adc
inc
cmc
jns
mov
pop
dec
adc
int
inc
adc
cmp
filds
dec
add
popf
scas
insl
fs
xchg
dec
xlat
or
or
cltd
popw
rclb
addr16
aam
test
imul
mov
das
push
or
mov
call
lock
inc
test
fs
imul
jmp
hlt
lds
cmp
daa
test
daa
push
lea
lret
push
fistpl
in
pop
xchg
loope
sbb
inc
stos
es
adc
in
pop
lret
or
cmp
cmp
mov
jl
stc
in
push
shlb
imul
inc
cmp
xor
arpl
scas
jecxz
fdivrl
push
inc
jmp
jno
mov
cli
mov
and
xchg
imul
mov
jno
enter
lock
push
cmpsl
inc
ret
insl
dec
insl
push
or
repz
nop
iret
imul
add
sbb
cmc
inc
or
addr16
mov
add
xchg
pop
in
mov
xor
sub
nop
sub
add
push
and
clc
push
lds
push
dec
lcall
lea
mov
pop
clc
cmp
hlt
inc
or
pop
or
sub
sbb
xor
fstpl
imul
and
imul
or
std
sub
jbe
adcb
rcll
scas
ds
pop
cmp
inc
js
lods
shlb
aam
push
scas
lret
fildl
lock
lds
fiaddl
cs
fwait
ljmp
in
fadds
test
mov
cmp
pop
mov
into
js
daa
inc
sahf
dec
outsl
dec
dec
outsb
pop
and
bnd
and
cmp
sahf
add
sub
mov
adc
stc
test
mov
and
jo
mov
or
cs
orl
dec
xor
mov
push
and
xlat
popa
cmpsl
imul
cmp
stos
adc
fwait
inc
dec
add
fidivl
cltd
sarl
cld
and
ret
dec
insl
shll
xchg
out
xor
cmp
lahf
ljmp
popf
mov
xor
hlt
and
imul
add
out
xchg
add
push
pop
cmp
pusha
push
adc
mov
jmp
rcrb
stos
xchg
dec
xchg
add
call
les
decl
hlt
cmp
cmc
ds
lcall
das
inc
add
jne
xchg
mov
scas
aas
pop
mov
rcrb
mov
cmp
aas
mov
mov
sbbl
das
jl
ss
pop
out
dec
jecxz
addr16
les
jo
dec
outsb
insl
arpl
cld
mov
add
loopne
aas
jno
loopne
push
sub
out
cmp
mov
adc
addr16
lcall
jl
cmp
aas
fldenv
or
lahf
inc
outsb
mull
add
fstpl
lods
scas
xchg
in
leave
int
mov
adc
std
cmp
insb
leave
fldt
lock
outsb
inc
sti
push
in
push
inc
int
push
and
pop
inc
push
mov
fstl
sub
insl
aas
xchg
fwait
shlb
lds
or
pop
inc
cltd
ror
popa
adc
sbb
xor
xor
inc
jge
cmp
dec
cwtl
add
pop
mov
test
adc
subl
dec
jmp
repnz
adc
jae
and
ret
mov
inc
dec
repnz
pop
andb
inc
or
or
push
lock
ljmp
push
popa
lds
push
daa
fiaddl
fs
adc
mov
xchg
lods
mov
ret
fmull
and
xchg
movsl
add
out
mov
lahf
xor
mov
fmull
popf
and
sbb
shrl
int3
dec
xchg
cmp
ljmp
loop
cmp
jo
push
dec
dec
pop
jnp
mov
ja
aas
pop
cmpsl
inc
pop
mov
pop
mov
iret
hlt
xchg
lock
jo
cmpsl
add
mov
jo
in
outsb
call
popf
outsb
into
mov
enter
outsl
pushf
enter
cmc
out
adc
mov
maxps
or
xor
push
inc
aam
push
fadd
imul
cmc
lods
jo
icebp
xchg
mov
fneni(8087
arpl
mov
xorl
mov
cs
std
and
push
sbb
jnp
jg
call
adc
sbb
xchg
jbe
jle
popf
cmp
mov
test
and
paddq
lds
lahf
cmp
add
xchg
scas
mov
push
mov
ret
dec
repz
xor
inc
mov
cmpsl
in
int3
push
daa
ret
and
xor
mov
or
mov
jmp
adc
jnp
aaa
inc
xchg
jbe
push
mov
and
jmp
mov
dec
mov
ret
jno
pop
jle
test
outsb
sbb
xor
pop
dec
push
mov
xchg
in
inc
call
sti
fisubrs
and
xor
xchg
dec
or
jge
and
nop
mov
inc
scas
flds
dec
decl
mov
add
mov
out
imul
pop
and
xor
movsb
push
push
test
jp
pop
cmp
loopne
pop
pinsrw
sbb
add
xchg
bnd
xchg
int
gs
add
orb
rcll
mov
lahf
ret
mov
pop
imul
inc
mov
mov
pop
ljmp
cs
sbb
mov
les
sub
push
lods
mov
loop
lock
inc
fsubrs
into
ljmp
call
test
xchg
mov
lret
imul
or
lods
arpl
cs
push
outsl
negl
jo
dec
aaa
cmp
mul
mov
sbb
xor
mov
sub
dec
pusha
ficoml
rcrb
bound
push
sbb
out
in
cltd
mov
xchg
adc
fldpi
pop
pavgw
dec
inc
xchg
ds
insl
fdiv
je
sub
push
xchg
mov
decb
mov
ret
addr16
sbb
dec
fimuls
xchg
inc
mov
fildl
adcl
stos
shrl
daa
mov
nop
xchg
loop
lret
cmpsl
stos
idivb
mov
mov
adc
outsb
dec
divl
inc
rorb
mov
imul
pop
mov
imull
outsl
sub
mov
test
jle
scas
test
hlt
add
pop
lahf
xchg
pop
sub
lods
in
mov
outsb
fs
xchg
sub
mov
jmp
scas
xor
fstps
ja
mov
ds
test
xchg
xchg
pop
xor
jg
mov
cmpsb
mov
adcb
push
insb
pop
jl
movsl
jne
push
loopne
xor
pop
inc
push
or
dec
enter
jge
sti
cmp
cli
mov
or
add
xchg
mov
mov
sbb
push
stos
in
loope
test
movsb
adc
cli
fsubrp
push
rcll
dec
cli
loop
sub
push
ds
cmp
push
js
in
js
addr16
jb
dec
push
mov
inc
imul
ja
xchg
shr
test
inc
inc
adc
adc
leave
incb
stc
push
scas
pop
aaa
push
mov
pop
fs
dec
inc
iret
xchg
js,pn
imul
dec
daa
lcall
incb
jnp
ds
cmc
dec
jb
aaa
jp
call
clc
mov
mov
mov
xchg
mov
fmul
out
jo
push
ja
push
push
and
sarb
xor
add
sbb
stos
pushfw
mov
or
cmp
fldt
loope
push
outsb
mov
sub
xchg
add
imul
daa
mov
iret
sbb
shrl
pusha
sbb
clc
mov
sub
mov
xchg
inc
orl
or
xorl
mov
cmp
sbb
inc
sarb
and
mov
lods
mov
vcmpps
fidivrl
sub
pop
cwtl
out
cmp
pop
push
sbb
inc
mov
test
sbb
jmp
inc
mov
add
pop
cmp
pop
std
dec
or
adc
cmp
std
shlb
push
dec
inc
push
and
rclb
or
jmp
adc
fistl
inc
add
cs
push
inc
mov
outsl
notb
jae
add
sub
jno
sbb
fs
test
or
sub
iret
scas
pop
sub
enter
dec
cmc
mov
fs
addr16
ror
inc
arpl
or
xor
add
dec
into
add
add
add
and
dec
ficompl
jmp
rcll
lret
daa
cmpsb
lods
push
pop
push
adc
sbbb
mov
sub
decb
orl
mov
add
inc
mov
in
insb
cwtl
or
jmp
in
jmp
lcall
or
xchg
por
out
clc
loop
sub
xor
lods
mov
aas
ljmp
and
das
push
pop
push
stos
sbb
mov
iret
cmp
push
enter
cltd
add
adc
xchg
ja
mov
out
or
into
mov
jecxz
shrb
shl
in
add
out
adc
in
outsb
popf
stos
and
cmc
movsl
push
pusha
xchg
call
std
adcb
fs
pop
punpckhdq
je
push
mov
daa
sbb
sub
ds
hlt
mov
sub
cld
lods
jnp
in
shlb
iret
dec
mov
jnp
push
xchg
dec
cmp
xor
daa
xchg
ret
sbb
inc
or
push
and
data16
repz
lret
cmp
dec
cmc
sbb
inc
mov
jnp
xorb
lcall
pop
add
loopne
pop
ljmp
xchg
push
inc
sahf
ret
mov
jnp
cmp
sbb
aam
add
push
xchg
ret
or
xlat
inc
cmp
mov
jp
testb
or
leave
sub
mov
xchg
inc
push
cltd
arpl
inc
mov
pop
xchg
scas
loope
rol
jnp
inc
cli
xor
cli
inc
gs
xchg
mov
dec
fwait
cmp
jno
dec
or
pop
pop
xor
pop
jae
imul
mov
xchg
in
fsubl
scas
mov
mov
mov
lods
xchg
sub
push
xor
dec
insb
add
pop
jmp
in
adc
mov
inc
cmpsl
js
cmp
fisubl
mov
push
mov
push
pop
outsb
daa
ret
lret
insb
pop
pop
es
cmc
test
out
push
bound
mov
or
push
xor
cmp
pxor
add
xlat
dec
and
das
pop
push
cmc
das
or
inc
inc
adc
ficoms
xchg
pusha
mov
jp
xlat
cmc
jne
or
icebp
pop
pusha
add
mov
mov
shlb
mov
cmp
pop
mov
fcoml
adc
mov
inc
inc
sub
mov
psrlq
mov
popa
cmp
jp
shlw
lcall
aas
ja
push
shl
dec
imul
push
imul
pop
int3
mov
mov
adc
stos
in
and
cmp
dec
xchg
fistpl
mov
push
sub
les
outsl
xchg
push
mov
sbb
xor
pop
or
jne
xchg
push
insb
outsb
shrb
shl
mov
test
loope
dec
pop
fsubr
mov
aam
cli
inc
jns
push
out
pop
lods
pop
sub
pusha
xor
fstpt
add
aam
push
push
rorb
movsb
pusha
sahf
int3
cwtl
xchg
mov
inc
jne
ret
jns
cmp
xchg
cmp
clc
jge
lds
adc
out
fdivrs
insl
or
push
mov
call
push
dec
pop
mov
mov
cmp
enter
addr16
xchg
adc
mov
mov
jo
into
sarb
lahf
mov
dec
sahf
int
jecxz
scas
inc
test
enter
push
jns
mov
xor
sub
pop
sub
mov
js
inc
push
repnz
test
mov
das
lods
push
dec
jo
xor
ljmp
mov
adc
das
add
pop
sbb
in
xchg
test
jg
mov
sub
sub
jbe
jnp
pop
test
inc
mov
lock
stos
mov
push
andl
js
nop
cmpsb
iret
inc
and
aam
mov
inc
lcall
push
int
shrl
sbb
xor
orb
mov
xor
enter
popa
add
lcall
cmp
push
xchg
orl
or
mov
insl
aas
sub
xorl
mov
scas
mov
cwtl
push
aad
cmp
mov
loopne
xor
mov
mov
xchg
mov
xchg
xor
dec
xorl
dec
ret
mov
lret
test
xchg
lret
loope
cltd
sti
sbb
mov
rcrl
popf
stos
popf
ret
popf
sti
lahf
les
jne
inc
sub
push
nop
ljmp
cmp
jnp
jle
in
lods
arpl
cmp
jo
and
mov
mov
xchg
xor
jl
lods
mov
ds
jl
repnz
data16
pusha
int
xor
sti
sbb
mov
aaa
ret
mov
aaa
pop
roll
dec
jg
mov
mov
cmpsb
movsl
or
mov
adc
idivl
inc
pop
insl
int
dec
cld
call
push
pop
fs
in
addb
xor
in
scas
stos
shrl
adc
push
cltd
pop
jl
mov
ret
xlat
popf
int
popa
push
loopne
jmp
sub
dec
imul
scas
and
pop
addr16
jle
sbb
repz
mov
fs
jecxz
fwait
pop
enter
mov
mov
jno
cmp
or
nop
add
push
dec
imul
inc
lea
or
jle
mov
inc
mov
repz
pop
bound
iret
or
lcall
and
lods
xor
jecxz
mov
shl
gs
imul
out
in
ja
incb
mov
fcmovu
cwtl
js
rol
pop
push
push
pushf
dec
sub
fwait
xchg
lock
push
add
or
nop
mov
adc
and
lea
sub
mov
in
dec
jg
testl
mov
xchg
sahf
cmp
sub
mov
imul
scas
sub
cmp
ja
jns
sbb
cli
out
test
je
test
cmp
ds
dec
push
sub
int
push
fadd
xchg
pop
jmp
popa
inc
fnsave
xchg
ret
int
add
xchg
adc
mov
shrl
add
aas
mov
and
movsl
lods
mov
adc
add
xchg
push
dec
out
dec
test
dec
shll
cmp
loope
mov
xchg
int
int
mov
mov
outsl
sbb
adc
cmpsb
test
addr16
lret
pop
xor
stos
inc
in
lret
data16
push
subb
fdivrl
pop
sub
fwait
xchg
mov
or
pop
mov
pop
sub
inc
outsb
xchg
out
iret
sbb
add
dec
pop
sub
and
pop
and
mov
push
push
mov
mov
cmp
push
xchg
cs
fsts
jg
cmp
adc
push
out
pop
popa
lds
hlt
cmp
cmp
mov
scas
addr16
mov
bound
push
nop
inc
daa
xchg
inc
cltd
mov
repz
pop
xchg
dec
fimull
lret
mov
lahf
dec
enter
mov
out
or
aam
dec
mov
imul
test
in
flds
push
pop
sbb
pop
or
daa
loopne
fst
sahf
mov
push
jbe
jne
pop
lahf
mov
fsubrs
adc
data16
or
push
loope
mov
sbb
mov
stos
or
enter
push
notl
push
xchg
in
xchg
mov
stos
sub
fbstp
into
sub
inc
test
xor
shlb
push
pop
test
cmp
mov
mov
add
cmp
inc
in
or
sub
negb
test
imul
inc
aaa
rclb
mov
pop
lods
ret
fadd
xchg
push
push
sbb
dec
pop
or
adc
movsl
xor
sarb
jne
add
add
sbbl
insl
jge
sub
xor
jl
xor
mov
hlt
sbb
mov
jae
sbb
in
mov
sub
sbb
mov
push
andl
pop
rorb
sub
xor
and
xchg
cmp
fcomp
pmaddwd
pop
xor
xchg
shr
add
mov
ds
adc
mov
or
rcl
das
jb
add
ds
pop
adc
push
sub
push
mov
mov
ficoml
imul
xchg
out
push
push
dec
add
xchg
pop
xor
insl
out
pop
cmp
dec
push
push
sub
sqrtps
or
stc
rolb
int
xor
dec
mov
test
inc
pop
sbb
inc
push
data16
addl
imul
adc
push
in
mov
mov
push
push
imul
mov
xor
adc
jmp
dec
or
filds
xchg
and
fisubs
push
cmp
xchg
and
cmpsb
insl
or
push
ss
je
inc
bswap
jp
scas
iret
aaa
jns
pop
outsb
and
and
adc
data16
pop
sub
pushf
push
cmp
pop
adc
pop
in
and
add
hlt
in
pushl
add
movswl
push
scas
lret
stos
mov
sbbl
push
out
or
xor
mov
loop
call
xchg
sti
or
in
fnsave
mov
inc
enter
mov
mov
dec
mov
inc
sub
xor
or
popa
mov
in
dec
push
fimull
int3
rol
push
adc
aad
cs
pop
call
mov
xchg
jae
shll
dec
pop
ret
mov
sbb
pop
aaa
push
inc
fildl
and
push
inc
cltd
mov
mov
adc
pop
fnstsw
mov
ret
cmp
int3
cmpsl
inc
pop
int
aas
adc
je
cmpsb
nop
lods
pop
xor
insb
mov
xchg
enter
or
push
dec
xor
negl
out
sbb
std
sub
jnp
hlt
repnz
pop
fisttpll
dec
push
out
mov
sub
cmp
dec
inc
and
cmp
test
xor
push
rcll
movl
pushf
push
dec
iret
adc
fcmovb
aas
shlb
out
sahf
dec
fidivs
lods
adc
mov
push
jbe
mov
je
in
jae
mov
mov
and
mov
dec
movsb
inc
adc
cld
sub
inc
xchg
std
push
push
je
das
pop
push
xor
je
fst
jp
push
in
cli
lcall
sti
jo
jne
lods
cld
frstor
mov
push
jecxz
xchg
push
cli
shll
and
xchg
nop
movsl
insb
and
cs
lahf
sub
in
cmp
movsl
xor
jbe
and
icebp
and
out
sbb
add
xchg
sbb
stc
or
adc
cmp
adc
sub
mov
cmpb
mov
mov
shl
xor
adc
sub
mov
jge
test
and
jmp
pop
mov
adc
pop
jns
push
mov
mov
decb
std
lods
imul
shl
cli
jg
aam
jns
or
jo
mov
and
dec
push
lds
sbb
and
leave
ret
mov
pop
mov
cmp
rolb
fmuls
jbe
into
push
lds
add
cmp
je
andb
addr16
add
decb
rolb
movl
and
movsl
test
lret
ss
outsb
fs
sbb
add
mov
xor
push
mov
pop
mov
pop
or
sub
jp
int3
scas
jbe
inc
leave
pop
ficompl
jge
fsub
std
cs
pushf
lret
mov
mov
and
and
roll
aas
popa
push
js
lods
in
jecxz
ss
push
int3
mov
add
mov
xor
sbb
adc
test
in
fwait
inc
repnz
test
pop
sarl
hlt
jge
push
rcll
cli
xor
pop
aad
mov
sbb
jo
jno
xor
mov
inc
adc
cmp
ret
pop
movsb
loopne
mov
sbb
mov
gs
fldenv
test
outsb
cmc
cmp
dec
scas
rcrl
sub
mov
iret
out
int3
lcall
mov
or
mov
mov
mov
and
outsl
mov
les
push
cld
pop
or
jmp
in
mov
leave
and
out
into
sti
sbb
push
sub
mov
cmp
adc
or
addb
call
fcmovb
mov
insb
pop
ds
xchg
sub
aaa
lea
push
outsb
bound
iret
xor
pop
daa
or
gs
shll
popa
jmp
into
out
outsl
inc
nop
rorb
dec
repz
xlat
pop
loop
jge
adc
mov
pop
cwtl
ljmp
sub
sub
ja
mov
inc
rcl
push
xchg
push
pop
in
fists
jne
lods
fisubs
sbb
sbb
push
sbb
les
jge
dec
inc
mov
out
mov
xor
xchg
pop
dec
mov
pop
lds
xchg
jb
inc
out
add
dec
dec
xor
jp
adc
adc
pusha
rcll
call
sbb
dec
cwtl
pop
dec
lret
fiadds
fldt
mov
mov
int3
add
sbb
mov
inc
outsb
in
cmp
aaa
out
push
mov
sub
jae
mov
popf
mov
mov
cmp
ss
cs
ret
icebp
leave
lret
inc
out
mov
test
lea
cmpsb
sub
ficomps
xlat
in
ds
inc
xchg
ja
push
sub
sub
insl
test
call
pop
outsl
in
imulb
das
dec
add
rcrl
lret
adc
xchg
add
add
adc
push
and
and
in
lea
mov
adc
int
dec
and
pop
aam
nop
roll
sub
mov
mov
dec
sbb
pop
pop
cmc
pusha
enter
jecxz
or
xlat
call
xchg
adc
cmp
int3
sahf
es
sub
adc
mov
stos
and
cmp
xlat
inc
stos
adc
cld
xchg
aas
loop
jl
aad
push
push
int3
add
mov
rol
push
mov
xchg
dec
popa
jne
stc
jns
xchg
push
push
sbb
pop
fiadds
jge
fs
xor
ret
out
inc
and
add
push
hlt
cmpsb
dec
fildl
bound
aam
adc
jno
sarb
int3
adc
lods
sub
inc
mov
dec
cmp
mov
adc
xchg
jbe
clc
cmp
add
inc
xchg
fists
cmp
mov
rclb
adc
fcmove
mov
sahf
pop
insl
repnz
loopne
or
sbb
xchg
mov
jge
mull
xchg
fdivl
pop
xchg
cmpsb
pop
dec
int
push
loop
addr16
scas
mov
pop
add
pop
lods
jle
mov
adc
lods
andb
adc
mov
or
cmpb
aam
add
add
jge,pt
popf
mov
test
cmp
xchg
xchg
int3
xchg
push
or
sbb
cmpb
sbb
add
je
pop
sbb
gs
scas
add
fwait
outsb
aam
ret
in
sub
xor
inc
ret
arpl
out
jae
stos
and
lret
mov
mov
lods
subb
jge
ja
ret
mov
inc
sbb
xor
xor
dec
das
ss
fcmovne
xchg
out
mov
or
inc
scas
outsb
fdivr
pushl
jno
inc
test
inc
rcl
xchg
punpckhdq
scas
or
mov
in
les
fidivs
divb
mov
push
mov
mov
xor
inc
pop
fsubrl
and
das
enter
inc
ficoms
fistl
hlt
xchg
aaa
das
push
in
out
jbe
fldt
popf
into
movl
pop
cltd
psrld
in
pop
xor
out
jp
and
pushf
pop
dec
fcmovnb
xor
cld
xchg
popa
lods
cmpsb
sahf
xchg
sti
pop
jno
frstor
mov
mov
and
fmul
pop
jecxz
addr16
inc
add
es
push
repnz
in
sub
push
cmc
inc
mov
pop
shll
test
incl
out
mov
push
jmp
jb
mov
xor
push
add
mov
mov
xlat
sbb
add
lock
js
and
cmp
and
lods
xchg
arpl
dec
and
mov
add
mov
pop
push
mov
dec
or
imul
iret
insb
xor
mov
scas
mov
mov
jnp
in
fs
cltd
fcoms
mov
inc
cmc
pop
and
sti
push
ss
stc
mov
push
jns
lea
xchg
and
mov
ficoms
fmull
dec
nop
imul
in
std
lds
mov
jne
and
xchg
jl
stc
add
ret
adc
inc
jnp
test
mov
dec
nop
mov
lahf
sub
jbe
out
mov
jne
loop
cmp
shlb
loop
into
stos
imul
imul
inc
jp
enter
aam
stos
mov
testb
xor
cmp
or
push
push
jmp
repz
mov
lock
xchg
mov
push
jecxz
call
out
repz
sub
cli
mov
jg
insb
mov
mov
jo
outsb
lret
loope
lds
or
mov
inc
cmp
xor
rol
mov
xor
out
out
mov
lods
cmp
xor
xor
pop
mov
imul
mov
xor
sub
and
jmp
cwtl
mov
cltd
pop
lea
add
or
nop
cmp
ljmp
adc
int3
ds
in
and
hlt
dec
adc
adc
mov
neg
dec
sbb
loopne
mov
fiaddl
fiadds
jmp
arpl
dec
mov
pusha
xor
or
jmp
mov
sbb
or
lret
xlat
out
cwtl
push
cltd
or
push
cmpl
test
les
movsb
clc
cld
lcall
inc
adc
add
imul
mov
xchg
mov
mov
fdivs
movsl
inc
inc
push
sbb
push
mov
mov
stc
xor
pop
popa
cmp
in
inc
adc
or
or
int3
push
jns
movlps
mov
mov
fadds
cmp
mov
fistl
cli
fdivs
mov
clc
orb
popf
ds
sbbl
jge
mov
mov
jns
cmc
adc
jnp
fwait
mov
or
fs
add
enter
sahf
push
sub
or
stos
and
sbb
mov
push
sub
shll
jb
pop
pop
add
xor
sbb
lcall
jns
fmuls
dec
fucomp
das
dec
les
jg
push
pusha
or
ja
rol
sub
push
inc
int3
mov
test
add
add
repz
icebp
cmp
or
cs
iret
dec
addl
pop
stc
inc
mov
push
jg
xchg
mov
test
mov
pushf
push
in
ret
ds
mov
out
es
cmp
add
mov
lea
ret
stos
movsb
xor
adc
jno
bnd
xchg
adc
in
jge
loopne
dec
scas
sbb
frstor
shlb
add
nop
mov
mov
aas
push
inc
das
mov
je
inc
mov
fmuls
push
cltd
sahf
sbb
pop
ja
and
cmp
sub
loopne
inc
test
clc
cmp
dec
cs
inc
push
xadd
iret
stc
cmp
iret
lea
mov
pusha
shrl
fstl
cmp
inc
or
test
dec
lods
xor
aaa
outsl
lret
and
out
dec
fcomp
insb
sbb
mov
dec
mov
dec
and
shlb
testb
inc
inc
xchg
pop
js
or
insb
fwait
dec
pop
add
fldl
ret
inc
push
xor
dec
sarb
mov
leave
out
rorl
andl
cmp
adc
cmpsl
mov
pop
adc
mov
repz
and
lea
ds
mov
sti
test
xor
sti
xchg
push
in
mov
rclb
xchg
push
rorl
fs
push
ficomps
sub
xchg
cli
jnp
pop
icebp
mov
lahf
lret
adc
ret
xor
jecxz
fcomip
out
mov
dec
dec
fadds
inc
loopne
cwtl
mov
mov
sbb
inc
dec
nop
js
and
xchg
or
dec
dec
push
roll
sbb
in
mov
cmp
out
add
jg
add
fistl
and
test
or
mov
cmp
or
rcrl
inc
adc
pop
xchg
mov
mov
test
cmpsb
dec
push
cld
gs
dec
cmp
lret
cmc
std
fsts
add
push
fs
scas
dec
push
mov
mov
jp
scas
pop
dec
jl
sahf
movsb
out
rcr
outsb
dec
xor
sub
xchg
ss
push
dec
mul
sub
fnsave
push
push
xorl
xor
stos
xchg
cmp
add
pop
jecxz
adc
lahf
mov
push
inc
or
jne
mov
aad
mov
cli
dec
divl
loop
xor
enter
jne
ret
movsb
xor
rol
out
pop
daa
dec
pop
out
std
add
cmc
mul
mov
adc
das
add
shll
mov
les
in
pop
loope
mov
xchg
mov
popa
popf
leave
mov
out
out
xchg
xchg
or
mov
addb
sbb
nop
cmp
mov
push
loop
shl
dec
shrl
incl
lcall
shrb
addb
stc
cmp
xor
push
dec
sub
cmpl
std
push
enter
add
arpl
mov
sbb
mov
pop
xchg
mov
pop
cmp
mov
dec
pop
adc
mov
into
cmp
or
mov
pushf
cmpsl
lds
xchg
outsl
dec
out
lcall
mov
add
out
and
inc
cmp
je
iret
mov
adc
movsl
mov
jae
lods
pop
cmp
pop
dec
mov
adc
sahf
fsubs
mov
push
mov
fldcw
sub
mov
xor
inc
jns
sub
dec
mov
mov
je
lret
sbbb
cld
jae
sbb
dec
adc
aas
xchg
or
mov
arpl
cmpl
stc
cwtl
arpl
movsl
inc
dec
mov
push
adc
outsl
adc
push
sub
push
inc
ljmp
test
adcb
lods
rolb
fsubrs
adc
repnz
adc
mov
jmp
test
cmpl
jecxz
xor
xchg
sbb
push
xchg
mov
clc
test
pop
lock
leave
sub
test
bound
fsts
push
jl
cwtl
int
out
hlt
enter
mov
mov
pop
mov
imul
jp
xchg
test
call
dec
cmp
int
test
shll
imul
mov
sti
sub
dec
das
sahf
xor
xchg
sub
mov
push
fidivrl
rolb
xor
jp
adc
fwait
pop
mov
in
push
mov
jbe
inc
aas
imul
sbbb
mov
rcr
leave
add
in
imul
clc
ljmp
inc
cmc
out
je
jne
cmp
mov
or
xchg
push
imul
lock
fmul
jmp
test
ret
inc
xor
lea
cmp
xor
filds
fcoms
inc
sbb
ret
mov
mov
dec
xor
test
aam
push
inc
insl
sti
fnstenv
cmp
mov
std
xor
jno
pop
in
sub
push
outsb
or
outsb
cld
adc
and
push
push
add
jae
sbb
pop
mov
mov
add
pop
push
sbb
loop
out
imulb
pop
mov
dec
or
add
mov
out
cmp
jbe
fdivl
cltd
jno
push
and
aas
push
inc
cltd
popa
dec
loope
jecxz
xor
xor
cmp
das
sbb
cmp
shl
mov
ds
or
mov
addl
lret
ja
sub
mov
mov
es
dec
mov
mov
push
fcomip
and
jnp
inc
call
cltd
xor
and
rolb
mov
popa
push
aaa
pop
xchg
pop
push
icebp
or
movsl
fisubl
mov
in
faddl
fisubrs
addr16
xchg
outsl
push
das
lret
pop
add
xchg
aaa
xor
lret
test
stos
lock
vpunpckhwd
push
lcall
push
pop
stos
aam
cmc
cmc
cmpsl
push
idivl
vmovaps
adc
mov
xor
lea
dec
scas
inc
sbb
das
ljmp
adc
sti
shll
xchg
xorl
test
fdivrs
cli
mov
shl
xchg
stos
mul
cmp
jno
xchg
adc
movsb
jno
nop
jne
xchg
jmp
and
std
rorl
mov
stos
cmpl
mulb
cmp
dec
fs
inc
adc
ljmp
pop
movsb
push
push
mov
stos
push
pop
int
sub
shl
imul
or
pop
or
sub
loopne
inc
xor
cwtl
xor
movsb
sbb
stc
jnp
inc
addr16
jbe
xorb
mov
sarl
inc
lret
ljmp
mov
push
adc
sbb
js
dec
xchg
sbb
sub
inc
mov
scas
fiaddl
add
sbb
mov
lret
inc
mov
cs
jbe
push
lock
jbe
pop
stos
shl
mov
mov
xchg
popaw
push
sub
mov
femms
or
push
inc
mov
fst
mov
mov
cmp
lcall
into
cmp
mov
cmp
jbe
inc
movsl
lret
fs
ja
loop
outsl
mov
mov
aaa
rclb
hlt
pop
std
ds
pop
ljmp
fisttps
sub
xor
jnp
sub
int
inc
inc
mov
aam
mov
inc
xchg
push
je
sahf
pusha
push
insb
rcl
out
mov
cmpsl
jbe
cwtl
idivb
int3
arpl
into
mov
mov
div
call
movsl
adc
dec
daa
int
add
or
clc
or
test
sbb
jno
xchg
int3
cmp
call
fwait
pop
push
xlat
std
stc
or
jae
jp
lahf
dec
or
add
jecxz
adc
pop
icebp
scas
cmp
sbb
dec
je
push
dec
mov
outsl
and
and
inc
pop
jne
pop
sbb
nop
test
pop
mov
shlb
and
js
insb
push
je
lds
lret
xchg
orl
sti
inc
std
pushf
pop
clc
xor
lcall
sbb
xorl
out
jb
aam
fldl
jl
xchg
out
pop
adc
dec
sub
xchg
repnz
cmp
push
cmpsb
cmp
jle
inc
mov
fiadds
and
cs
and
mov
orl
cmp
int3
gs
scas
enter
lret
dec
jnp
shl
push
xor
push
pop
dec
cmp
sub
fstps
jnp
in
mov
jle
mov
sub
dec
cmp
pop
jle
pop
adc
orl
sub
jl
mov
cld
roll
sub
jge
xchg
test
lock
jle
js
fnsave
cmc
std
mov
pop
and
mov
shll
out
stos
sbbb
rcll
adc
mov
aad
clc
shll
mov
in
in
jle
call
lret
icebp
stos
mov
fs
ljmp
imul
notb
or
cmc
xor
lret
lods
cmp
lret
push
scas
xchg
or
sbb
or
popf
pop
push
jmp
faddp
std
outsb
fadds
jmp
outsb
cs
jae
xor
repz
cmpsl
mov
arpl
js
xor
mov
sbb
mov
loope
xchg
aad
sub
stos
mov
and
inc
mov
insb
jg
adc
in
fnstcw
mov
cld
mov
push
cltd
sbb
mov
jno
pop
subl
lock
cmc
adc
jl
fsubrs
pop
push
test
aad
pop
and
jb
lods
ficoms
lret
testb
add
pop
push
mov
addr16
cmc
or
lods
cld
movsl
or
dec
das
sti
mov
cmp
leave
into
mov
insl
push
or
addr16
mov
xchg
xchg
ss
cmpsl
sub
sbb
std
cltd
icebp
cmp
outsb
pop
repnz
fisubrs
outsl
mov
cmp
push
mov
or
pop
scas
sahf
insb
cmp
fs
add
out
movsl
cwtl
xorb
jecxz
adc
sahf
push
inc
inc
aam
fs
lret
popf
rol
inc
fsubp
repz
in
pop
cmc
mov
push
aas
sbb
scas
ficoms
sub
or
arpl
loopne
add
mov
ds
jno
push
jo
cmp
les
out
push
mov
cmc
out
shrl
stos
pushw
out
outsl
and
dec
push
popa
jmp
sub
fcomi
cmpsb
jb
addr16
lock
call
xor
sub
and
pop
add
inc
movsb
adc
das
ret
enter
adc
or
cwtl
out
mov
repnz
in
scas
ds
mov
cmpb
subb
xor
bound
in
push
pop
leave
or
add
dec
das
setbe
insb
jge
mulb
sbb
inc
movsb
pop
hlt
das
and
mov
mov
and
test
sub
add
jb
jmp
dec
sbb
test
dec
mov
fcoml
loopne
mov
xchg
pop
int3
sbb
gs
mov
add
mov
sbb
es
dec
inc
mov
sub
es
xor
add
and
pop
xchg
sbb
into
test
adc
ret
test
ficompl
insl
shll
or
mov
push
inc
xor
push
test
pop
xchg
jne
dec
push
inc
int3
shrb
fsub
into
fidivrl
and
cwtl
cmp
jae
xchg
adc
cli
xchg
xchg
sub
cmp
repnz
out
dec
pop
add
dec
pushf
jnp
xor
or
sarl
loop
icebp
jmp
es
inc
fcoml
xchg
push
add
jb
and
movb
sbb
out
xchg
cli
push
mov
cs
imul
inc
cmpsl
and
push
xor
call
xor
or
sbb
pop
xorb
adc
sbb
shlb
mov
int3
loopne
arpl
inc
fidivs
add
js
icebp
jmp
fcmovne
lcall
iret
push
test
cli
mov
sbb
adc
push
adc
cmpsb
iret
in
xchg
shll
mov
push
pop
pusha
jmp
inc
jbe
js
lods
adc
icebp
mov
xor
out
add
xor
mov
data16
je
stc
cmp
and
aas
push
pop
or
and
scas
adc
inc
test
lds
cs
rolb
leave
or
inc
pushf
ret
jns
leave
add
push
filds
adc
xorl
test
daa
and
lret
or
mov
or
cwtl
filds
lods
call
int3
push
adc
in
sub
iret
mov
sub
cltd
cmp
xchg
or
dec
push
fwait
lods
fmuls
xor
sahf
insb
sub
cmp
xchg
stos
xchg
mov
aas
movsl
adc
divl
mov
cltd
cmp
add
fcom
add
mov
out
xchg
push
sub
out
data16
dec
nop
std
fs
lds
andb
jns
push
dec
pop
mov
les
jno
and
adc
or
jge
sub
int
in
les
xor
lods
xchg
xchg
sbb
or
mov
insl
lea
push
adc
jge
pop
popf
mov
das
jbe
jne
sahf
adc
adc
enter
jo
adc
push
int
mov
stos
pop
cmc
movsb
xchg
arpl
jb
fwait
lds
shl
add
or
orb
movsl
mov
addr16
pop
imul
addr16
mov
imul
icebp
sub
or
jo
cs
fucom
cmp
jmp
and
and
hlt
cmp
xor
jmp
in
cmp
bsf
and
add
jp
xchg
sub
fwait
lock
call
push
pop
xor
stos
mov
scas
lret
movsl
inc
pop
stos
imul
or
loopne
push
adc
aas
and
sbb
std
pop
aam
lock
push
sbb
insl
cmp
insl
fwait
pop
xchg
test
cmp
and
ljmp
les
sub
int
in
shrb
xchg
cld
adc
int
and
shrb
test
push
out
in
cmpsl
rcll
mov
fcomps
pop
sbb
shr
int3
sbb
fdivs
jmp
cli
outsl
push
imul
es
inc
shll
dec
out
push
in
or
sub
jle
mov
std
subl
jle
mov
daa
dec
sbb
subl
cmp
xchg
push
push
adc
xchg
out
mov
push
or
push
scas
cs
test
add
inc
add
cmc
adc
lcall
cmp
dec
dec
or
push
fstps
sbb
inc
mov
scas
stos
add
lods
imul
fldcw
mov
sub
int
stos
push
test
push
xor
imul
loop
mov
push
and
xor
cmp
int
jno
jne
add
imull
push
outsb
cmpsl
gs
mov
add
add
xchg
push
mov
ret
xchg
inc
mov
push
mov
push
sub
cmpsl
mov
loopne
loop
cld
test
mov
push
nop
lods
fisubs
inc
stc
and
out
push
int3
inc
in
call
pushl
addl
fstp
mov
dec
fs
in
jle
mov
in
or
jle
xor
pop
dec
rcr
fcoms
stos
mov
pop
aad
sub
mov
cmpsl
dec
push
cmp
xorb
lds
add
sbb
jo
inc
call
stos
pop
xor
ljmp
push
in
dec
dec
xor
in
sbbb
mov
or
xor
dec
push
ret
icebp
push
cmp
mov
pusha
mov
jmp
adc
mov
mov
adc
popf
das
scas
pop
sahf
dec
stc
xchg
aad
pop
xchg
imul
repz
pop
rcll
addr16
push
pop
scas
cwtl
repz
out
insb
fcoml
pop
mov
push
shll
mov
or
mov
lahf
sbb
aaa
inc
iret
or
pop
cmp
imul
mov
je
pop
mov
xchg
imul
add
outsl
or
fcmovu
pop
xchg
dec
sub
imul
gs
fistpll
inc
iret
add
decl
inc
dec
add
popf
addl
and
mov
hlt
push
repz
movb
and
repz
int3
mov
and
jmpw
pop
imul
cmp
push
cwtl
stc
mov
into
xor
in
andb
jmp
call
popa
ljmp
sbb
aad
mov
jecxz
lcall
xlat
mov
mov
jmp
popa
jmp
pop
and
sahf
lods
inc
loopne
jge
pop
xor
addr16
jnp
ja
lods
imul
negb
mov
gs
loop
in
test
addr16
pop
mov
int
sbb
mull
mov
add
test
icebp
aas
cli
std
cmp
mov
adc
jl
jl
dec
js
push
xor
cld
sbb
mov
cwtl
out
movsb
pop
scas
cltd
cs
dec
push
ret
stos
int
insl
imul
pop
adc
xor
out
inc
push
sbb
stos
ret
cmp
dec
mov
popf
jnp
cmp
frstor
adc
inc
sarb
mov
cmp
jp
inc
mov
add
or
ds
sti
mov
ds
cmp
xor
and
xchg
sbb
jle
sahf
cpuid
inc
jno
scas
ds
dec
mov
lods
mov
and
xchg
push
sbbl
stos
insb
jnp
xchg
mov
mov
sbb
out
push
mov
inc
xchg
lcall
sub
pusha
add
mov
pop
mov
mov
jb
xchg
add
jle
sahf
shrb
lods
inc
sarl
fldenv
addr16
data16
or
xchg
inc
ja
inc
mov
outsb
andl
mov
fwait
mov
mov
sub
mov
mov
test
jo
cmp
nop
repnz
test
and
and
mov
lock
jle
insb
xchg
sbb
jno
mov
dec
fdivrl
add
ret
xchg
ds
push
and
mov
push
push
jl
push
icebp
pop
icebp
popa
scas
es
dec
pop
cmp
ss
add
xor
movsl
clc
adc
jge
or
push
mov
xchg
sub
xchg
lahf
cmp
sahf
mov
cmpsl
xchg
xor
inc
mov
add
add
imul
xor
jbe
jb
sbb
lock
xchg
imul
std
stc
jo
adc
push
mov
or
xor
js
adc
insl
shll
xchg
jne
les
pop
push
mov
je
sbb
inc
jnp
mov
inc
ja
pop
ret
sar
shlb
pop
test
xlat
jg
out
int3
test
mov
test
rorl
or
xor
mov
cmp
icebp
or
sub
iret
adc
das
inc
js
cmp
sub
add
mov
cmc
jge
jge
dec
ds
xchg
dec
xchg
insl
fcmovbe
add
and
xchg
dec
mov
xchg
pop
lahf
cmpsl
dec
jbe
mov
xor
push
sub
push
or
cmp
jmp
mov
insl
mov
and
mov
cmp
sub
pop
xchg
dec
push
xor
dec
sahf
gs
cltd
cwtl
and
lea
lods
cmp
int
sarb
push
iret
jb
js
lock
fstps
jl
adc
dec
sbb
sbb
insb
mov
hlt
mov
jg
push
adcl
and
ss
mov
mov
or
jns
xchg
push
pushf
movsl
cld
rolb
mov
jmp
mov
sub
mov
test
popf
test
hlt
sbb
dec
sbb
fnstcw
and
je
cmp
mov
shr
pop
sarb
xchg
sub
or
xchg
mov
ds
cmp
xor
popa
pushf
push
shrb
fcoms
popf
ja
mov
push
sbb
inc
inc
fwait
pop
and
jne
adc
movb
hlt
mov
mov
inc
cmp
fsubr
pop
adc
jecxz
or
js
loopne
push
cmpsl
push
mov
mov
daa
pop
push
sub
pop
jae
cli
dec
cmp
stc
xor
int
add
inc
xchg
jbe
xchg
cli
std
popa
ljmp
rcr
popf
mov
ret
gs
xchg
shll
inc
xor
add
arpl
scas
or
mov
fdivrs
xchg
pop
cmp
nop
mov
add
push
je
sub
clc
sub
or
jns
sarb
dec
leave
jne
fnstsw
loop
sbb
into
sbb
xchg
pop
test
mov
test
icebp
jno
xchg
adc
ror
dec
cmp
lds
mov
sub
xchg
push
jae
stos
stos
fldt
aam
ljmp
mov
mov
mov
inc
sub
rclb
sub
xor
pop
dec
jno
test
gs
push
lcall
mov
mov
mov
mov
and
or
movsb
bound
add
test
sbb
mov
mov
sbb
int
mov
in
aam
xor
push
aam
sahf
and
xchg
imul
loop
or
notb
sbb
and
lcall
shll
sbb
mov
ret
ljmp
jnp
inc
dec
xchg
and
push
js
xchg
test
loop
lret
mov
inc
incb
sub
mov
pop
nop
pop
mov
sbbb
pop
outsl
sub
xchg
push
add
test
icebp
push
fs
sbb
jns
aas
and
mov
aaa
mov
mov
sub
pop
dec
ja
ss
sbb
cmp
jle
arpl
call
inc
xor
cmp
movsb
incb
sti
adc
lds
sbb
out
loop
enter
test
xchg
jmp
js
testl
push
pushf
rorb
or
mov
into
fstp
ss
popa
dec
or
inc
test
cmp
nop
incb
rcr
mov
jl
mov
mov
push
and
sbb
push
push
add
jbe
leave
xchg
out
pop
dec
fsub
hlt
sub
xchg
jne
dec
jne
stos
arpl
and
nop
push
jnp
outsb
jno
imul
and
push
bound
add
inc
inc
lcall
stc
aad
sbb
mov
mov
addr16
add
ljmp
dec
mov
stos
jle
mov
cmpsb
inc
jns
or
lcall
ja
add
mov
sarb
add
sbb
cmpsb
add
nop
out
aas
shll
inc
stos
inc
lods
inc
sbb
cmp
inc
popa
mov
test
or
in
out
sarb
insl
jbe
sbb
mov
xchg
scas
into
fldl
cmc
ficompl
dec
jnp
push
rcl
movsl
jl
lods
cmp
jns
sub
xor
jge
sbb
andb
imull
push
mov
and
xchg
bound
adc
adc
mov
pop
dec
and
je
xchg
and
and
mov
fsubrs
std
lahf
outsb
xlat
lea
lods
lock
mov
cmp
sub
into
xor
repnz
mov
outsl
ret
into
lods
adc
inc
loop
jae
mov
mov
in
inc
lea
jne
in
mov
add
push
pop
mov
shl
test
loop
mov
mov
push
cmpsb
popf
js
jne
imul
pop
xchg
stos
shl
mov
jb
movsb
scas
mov
mov
inc
in
aad
js
or
shll
ret
push
pusha
scas
and
out
mov
cmp
and
and
xor
jne
inc
in
add
push
inc
ja
push
movsl
xor
xchg
enter
stos
mov
jae
push
test
jmp
push
mov
imul
lahf
and
sub
push
add
js
ss
pop
push
into
or
xor
sbb
jb
test
fistpll
loope
pop
lods
daa
fwait
adc
jno
shll
cltd
sbb
fstp
pop
icebp
inc
sbb
rcrl
sbb
dec
std
mov
inc
xchg
stos
les
push
jnp
jg
mov
jmp
pop
arpl
add
jl
jp
icebp
xor
sbb
or
clc
push
aad
repnz
xor
push
push
sahf
lds
iret
mov
or
add
nop
call
imul
mov
xor
mov
mov
test
orb
add
mov
mov
iret
xor
xor
cmp
in
jg
mov
push
and
out
xchg
add
shll
aad
lea
scas
xor
aas
sub
xor
push
data16
adc
out
test
clc
loope
xchg
mov
cmp
xchg
vmwrite
mov
cmpsl
das
fldt
and
adc
cld
out
jae
gs
test
mov
sub
push
ljmp
into
test
inc
and
scas
xchg
nop
lods
push
mov
mov
mov
inc
adc
movsb
sub
test
add
imul
jl
loope
dec
sbb
adc
out
jmp
xlat
mov
daa
loop
pop
lods
div
cmpsb
jnp
sbbb
jne
adc
push
cmp
nop
pop
push
and
aaa
and
insb
jp
int3
cli
popf
iret
mull
enter
fmull
cwtl
xlat
pusha
mov
sub
nop
inc
bound
dec
nop
add
das
enter
rclb
out
xorb
ret
pop
mov
add
jno
lcall
dec
jle
and
lret
lcall
cmc
pop
cld
and
push
movsl
cmp
les
incl
and
jmp
hlt
xchg
jb
or
jae
or
push
jp
cmc
push
jle
inc
mov
loope
cwtl
jp
icebp
xchg
rcrl
mov
cwtl
xor
adc
sbb
mov
cld
jne
subb
push
and
fnstcw
and
xchg
stos
lock
mov
mov
ss
mov
sub
cmc
or
dec
daa
les
test
sti
push
xchg
xchg
cmc
sbb
mov
dec
lahf
pop
fwait
push
mov
loopne
int
cmpsl
cwtl
jns
scas
imul
std
stos
roll
push
insb
int
fnstcw
cmpl
jl
and
dec
lcall
pop
push
dec
cmp
pop
lcall
or
mov
das
pop
add
test
push
xor
pusha
stos
addr16
inc
sub
jge
push
cltd
sub
in
dec
xchg
int3
lcall
mov
and
dec
sarl
sti
adc
pop
shrl
pop
push
out
sbb
push
jg
inc
test
push
jb
mov
xor
xor
jae
inc
xor
loop
jb
lahf
xor
pop
test
arpl
xlat
adc
push
or
dec
and
mov
pop
jb
mov
xchg
inc
mov
aam
aaa
mov
mov
jbe
cmp
sub
pop
push
fs
jl
jge
pop
out
ret
pushf
xchg
cmpsb
mov
or
mov
xchg
inc
jbe
jmp
incb
and
stos
flds
pop
mov
ret
call
notb
or
scas
mov
cmp
adc
jns
sti
add
inc
daa
aas
lods
lock
adc
mov
add
inc
enter
fstpt
and
aas
fimull
arpl
mov
iret
rolb
scas
lret
rcrb
insb
rcr
fistps
jno
repnz
test
inc
adc
insb
iret
xor
sahf
pop
dec
dec
adc
adc
jns
scas
imul
js
cmp
bound
pushf
pusha
push
loopne
out
sub
add
sub
xchg
pop
jmp
or
fildll
lahf
push
sar
xchg
les
popa
mov
arpl
xchg
cmc
mov
outsl
jnp
iret
push
int3
xor
leave
mov
loope
jnp
xor
sbb
push
mov
aas
cli
vpmulhuw
mov
fs
sbbb
arpl
nop
std
pop
lea
mov
movsb
mov
push
jns
jne
in
out
jno
jg
mov
adc
fsubs
sub
sbb
mov
fcmovu
and
out
jnp
sbb
pop
leave
jns
cwtl
pop
push
or
push
sub
daa
pop
sub
ss
fistpl
testl
xor
test
aaa
insl
fimuls
sub
lahf
lea
loopne
adc
inc
das
xlat
sti
sub
fs
mov
je
push
in
cmpsl
lock
mov
pop
adc
pop
mov
dec
add
movsb
outsb
stos
add
mov
sbb
pop
addr16
fwait
into
stos
mov
pop
ret
lea
aam
mov
repz
sbbb
add
psraw
mov
mov
daa
outsl
inc
jmp
jle
xchg
mov
pop
sbb
sub
imul
xchg
xchg
inc
repz
mov
test
jl
andb
push
push
adc
or
hlt
mov
imul
push
lret
pop
sbb
xchg
rclb
out
push
and
jmp
std
cmpl
pushf
ja
adc
push
dec
inc
push
insl
cmp
mov
int
pop
or
inc
in
sbb
std
js
push
ds
repnz
pop
sbb
add
daa
ret
mov
jnp
insb
testl
dec
ret
and
jne
imul
add
es
and
mov
xor
iret
imul
mov
stos
or
test
sub
inc
and
sub
inc
sbb
xchg
push
sti
mov
adc
mov
jmp
insl
push
dec
dec
jl
xor
test
es
sbb
lcall
push
loopne
test
xchg
bound
shrl
shlb
test
inc
aam
test
bound
mov
out
jg
adc
std
icebp
mov
adc
negb
pop
fistps
gs
lods
mov
stos
xchg
pop
mov
or
roll
repz
mov
lcall
inc
outsb
adc
inc
inc
flds
cmp
jns
lods
in
jle
jae
pop
mov
sbb
push
push
adc
sbb
dec
aaa
and
fadds
mov
jmp
insl
xor
cld
mov
and
mov
in
jb
test
mov
xchg
insl
fs
cld
push
adc
cld
lahf
insl
imul
and
aas
pop
jle
out
cmpsl
and
out
inc
out
call
enter
je
mov
out
adc
xor
cs
xchg
dec
mov
ja
outsb
add
push
sti
cs
cmc
cmp
mov
call
mov
fidivs
push
sub
xor
lcall
stos
stc
enter
lret
ss
andb
into
ja
pop
ret
aad
movl
outsl
adc
mov
jmp
popf
add
lds
das
inc
call
imul
mov
pushf
repnz
add
rol
xchg
in
mov
ret
push
ljmp
enter
clc
rcr
std
pop
fisubl
flds
pop
jb
ret
outsl
mov
lcall
inc
jae
mov
mov
mov
bound
push
push
push
imul
aaa
xchg
cmp
fidivl
cli
pop
cmpsl
add
xchg
lret
or
pop
addb
clc
subb
mov
test
popf
daa
jl
and
daa
adc
jne
js
xchg
mov
pop
shll
out
add
scas
mov
pop
std
jae
and
inc
in
into
jl
in
sub
mov
mov
jnp
push
cwtl
mov
mov
add
jo
jmp
iret
sbb
in
addr16
fs
mov
cmp
stos
pusha
mov
stc
scas
dec
divl
dec
icebp
lea
jae
in
jno
iret
lods
or
test
xor
ss
nop
pop
das
icebp
rcrb
popa
pop
xorl
lods
push
pop
jne
xchg
test
roll
dec
or
ss
repnz
jno
sub
shl
popf
and
arpl
or
dec
or
jge
scas
mov
insb
fdivl
sbb
lods
pop
gs
loope
xchg
and
mov
jge
pusha
pop
push
sti
xor
mov
mov
pop
xlat
mov
pop
add
and
or
add
push
pop
fnstcw
cmp
ret
cmp
and
test
mov
in
pop
loopne
das
mov
pop
push
scas
in
loopne
das
bound
lea
cmp
inc
pop
inc
dec
jge
cmp
gs
and
push
bound
sar
sysret
mov
sbb
icebp
mov
mov
cmp
ds
aad
cs
loope
ret
push
cli
sbb
ljmp
cwtl
pop
ret
pop
movsl
popa
movsl
mov
aam
pop
mov
pop
ds
xor
enter
std
stc
push
rcl
pop
jecxz
pop
out
or
xor
mov
or
dec
outsl
scas
mov
or
adc
dec
sub
gs
ljmp
gs
insb
xor
cli
sbbb
rclb
adc
into
add
sub
or
movsl
and
mulb
add
xchg
push
pushl
call
cltd
fwait
sahf
sbb
cmpl
in
sti
xchg
mov
inc
sub
out
leave
xlat
sbb
or
fnstcw
fcomps
adc
push
xor
addr16
pop
roll
cmpsb
and
pop
dec
push
inc
lock
mov
fldcw
xchg
rclb
adc
sarl
dec
aas
rorl
arpl
or
mov
sub
or
xor
ret
ds
cld
icebp
mov
cmp
mov
and
push
aaa
dec
insl
xor
adc
insl
mov
test
in
jge
push
push
jne
adc
ficoml
jg
mov
adc
inc
push
lods
roll
xor
jns
xchg
cmp
push
jp
jecxz
imul
mov
or
les
imul
cmp
out
maxps
pop
sub
mov
incb
insl
pushf
scas
pusha
push
cltd
movsb
sub
addl
cmp
sti
lret
sbb
cmp
pop
push
nop
loop
in
arpl
lea
dec
aas
rcl
adc
mov
cmp
push
test
jmp
sar
xor
mov
aas
pusha
add
cli
xchg
int3
lret
cmpsl
add
imulb
into
push
std
ljmp
pop
or
jecxz
jg
fcompl
arpl
push
ss
jle
rcrl
cmp
push
repz
or
lcall
cmp
ffreep
fbstp
mov
jne
mov
dec
dec
iret
or
sub
pop
mov
aad
mov
pop
bound
imul
adc
insb
xchg
push
sarl
and
jg
fldcw
push
imul
sqrtps
aam
xor
stc
inc
push
jnp
inc
jb
mov
jns
mov
xchg
lret
cmpsl
pop
mov
das
pop
sub
into
jge
shll
iret
loopne
or
orb
pop
sub
jns
inc
or
inc
repz
xor
hlt
adc
push
scas
iret
mov
es
lret
add
sbb
mov
cmp
pop
aam
nop
pusha
sti
aam
addr16
mov
dec
dec
in
test
add
mov
ds
in
or
scas
cmpsb
insl
pushf
sub
leave
add
sbb
dec
jle
or
jmp
jo
pop
sbb
mov
leave
lcall
dec
das
cwtl
mov
push
fiadds
cmp
or
iret
gs
and
movsl
adc
movsb
mov
mov
loop
imul
xchg
repnz
cmp
push
outsl
or
cmp
push
adc
push
jecxz
dec
movsl
in
loop
out
cmp
jl
pop
push
mov
push
pop
push
lock
test
ja
rclb
dec
loop
out
add
mov
in
xor
dec
cltd
jge
and
pop
gs
inc
ljmp
dec
xor
inc
mov
stc
lods
sub
clc
cmp
iret
mov
add
pop
xchg
pop
fs
pop
pusha
roll
repz
insb
sbb
imul
pop
fstpt
aaa
mov
ss
sti
mov
push
dec
pop
stos
mov
sahf
mov
mov
loope
adc
or
loopne
and
fstp
outsl
sub
out
jp
push
pushf
rol
jo
push
into
imul
or
stos
das
fildll
subl
lds
xor
fimull
adc
cwtl
imul
cltd
lahf
pop
into
mov
mov
test
mov
dec
cmp
in
mov
lds
adc
inc
imul
xchg
xor
xor
addr16
lods
fs
cmc
add
cli
sub
push
lock
xor
mov
int3
dec
jb
mov
add
les
and
fwait
add
add
testl
mov
ljmp
movsl
mov
sbb
cmpb
inc
and
and
xchg
mov
jp
inc
cli
add
inc
fisttpl
xchg
out
fwait
sub
pop
push
int
jb
hlt
push
mov
jb
sar
jmp
outsl
add
loope
rdmsr
or
cwtl
sbb
dec
out
dec
insl
xchg
cwtl
push
mov
in
mov
sub
out
add
rclb
scas
push
xchg
sub
cmp
rorb
nop
jbe
mov
call
addl
sahf
adc
in
sub
sbb
stos
mov
mov
loopne
xor
cmp
hlt
incl
out
hlt
and
outsb
mov
fiaddl
int
fdivrp
jge
arpl
xchg
ss
out
mov
repnz
cmp
xor
xchg
aas
adc
add
test
adc
div
add
inc
xchg
shll
nop
dec
inc
jbe
mov
shl
roll
xchg
xlat
pop
orb
out
bnd
in
jecxz
in
mov
hlt
adc
mov
push
mov
cmpb
sub
xor
push
in
xorl
dec
outsb
fmuls
xchg
push
adc
lret
xchg
sbb
ljmp
dec
xchg
fwait
adc
dec
add
pop
and
in
push
mov
or
test
add
inc
sbb
mov
cmp
cmp
in
push
in
xchg
mov
lcall
mov
jbe
repz
mov
icebp
sbb
dec
mov
sub
aam
mov
push
mov
push
aaa
mov
ret
icebp
add
mov
ljmp
cmp
xchg
and
mov
outsl
mov
jmp
clc
mov
xor
mov
xor
push
fisubs
ss
push
cs
testl
push
mov
inc
sbb
mov
xor
mov
or
iret
dec
mov
dec
push
movsb
add
sbb
sti
test
loopne
cmp
cmc
test
insb
gs
outsb
pop
dec
xchg
push
push
lea
stos
in
xchg
push
test
dec
push
adc
stc
mov
cmp
shl
fld
dec
sub
rol
mov
pinsrw
daa
mov
jne
mov
sub
add
sbb
jmp
mov
and
cmp
dec
fsubs
and
mov
aas
sti
cmp
dec
xor
jbe
scas
cmp
hlt
call
jns
jae
out
xchg
xor
mov
cmc
jg
jle
xor
mov
push
sub
stos
push
add
arpl
pop
dec
cmp
or
add
lret
imull
and
mov
xor
mov
icebp
popf
cmp
xor
mov
inc
cmpsl
into
jbe
adc
sub
sub
andl
std
and
cs
push
scas
lock
inc
rol
outsl
imul
jb
stos
inc
jb
fldcw
push
jbe
mov
mov
push
jg
add
arpl
adc
jmp
out
ficoml
lods
add
sbb
add
mov
push
arpl
add
ds
loope
cltd
cmp
popa
testl
inc
jnp
mov
andb
sbb
clc
cmp
inc
lret
pop
sub
push
push
cmp
add
cld
rep
fcmovnb
mov
push
adc
int3
mov
test
mov
and
cmc
xchg
inc
cmp
adc
lock
dec
push
lahf
mov
cmp
inc
aam
and
mov
daa
into
and
sub
idivb
out
xor
sbb
cmp
mov
add
xchg
cld
cmp
cld
push
dec
stos
out
fistpll
lock
insb
cs
or
pusha
imul
adc
movsb
sub
push
sbb
dec
subl
andps
out
outsb
mov
and
cmp
gs
idiv
pop
adc
dec
pop
sbb
push
mov
xchg
rclb
imul
mov
stos
int3
lahf
jb
jmp
popl
cmp
test
sbb
mov
xlat
pop
test
stc
and
les
xor
rcrl
jae
sbb
cmp
jnp
ret
daa
mov
push
je
aam
neg
push
mov
or
lahf
inc
mov
movl
nop
pusha
or
mov
inc
fstpt
lret
push
aam
rolb
insl
movsl
je
aam
cmpsb
arpl
movsb
push
mov
adc
push
xor
add
and
outsb
sub
jne
sbb
daa
xchg
push
call
sbb
pop
inc
daa
pushf
push
push
imul
jne
mov
xor
jb
lret
inc
lods
cld
push
jbe
sbb
adc
and
test
rclb
sub
push
mov
fildll
insb
inc
mov
push
mov
outsl
notb
sbb
ja
cmp
push
xor
shlb
cmpsb
into
inc
pusha
dec
rorl
mov
ret
test
shlb
clc
mov
push
scas
pop
lods
adc
jp
and
test
mov
inc
and
add
sti
sbb
adc
fisubrl
xchg
aam
and
jnp
cltd
pusha
and
test
hlt
sbb
push
call
cwtl
and
pop
pop
je
fnstsw
das
rorb
ja
bound
or
xor
cmp
mov
imul
in
xchg
add
in
mov
mov
push
jbe
jg
fstl
scas
or
and
push
sub
iret
or
pusha
xor
gs
mov
sahf
icebp
mov
ror
inc
push
cs
pop
lahf
pop
xor
and
mov
outsb
out
int3
pop
scas
sbb
mov
add
lcall
fidivs
pop
leave
ds
into
jecxz
aam
fwait
mov
push
in
mov
mov
pop
mov
inc
lret
andb
dec
push
inc
jl
pop
mov
cmp
mov
and
pop
in
mov
sub
inc
dec
mov
into
sub
push
mov
sbb
lds
aam
sbb
xchg
lods
inc
pop
sbbb
fldl
mov
mov
xchg
sahf
jge
or
nop
adc
mov
xchg
jno
test
xor
and
inc
icebp
aaa
cmp
lahf
gs
xchg
pop
xchg
xchg
add
gs
shrb
xor
inc
jno
mov
mov
xchg
sub
pusha
dec
loope
sbb
and
stc
shlb
je
pop
push
outsl
cmp
xchg
mov
jecxz
jo
scas
iret
or
cmp
or
jg
mov
in
mov
aas
cltd
lcall
push
push
xchg
ljmp
mov
push
push
std
pop
in
bound
xorl
pop
dec
jo
iret
xchg
add
cmp
sub
sti
inc
insl
movsl
dec
mov
inc
popa
pop
pop
mul
mov
dec
xchg
in
mov
mov
mov
cmp
aad
sbb
sahf
out
push
out
call
cli
mov
inc
daa
les
cmpsb
jns
into
push
sbb
loop
call
ds
andb
pop
test
lahf
leave
xlat
nop
adc
push
test
pop
sub
test
pop
add
pop
jecxz
mov
lods
mov
mov
ficomps
clc
call
aas
pop
es
out
test
scas
push
je
test
das
pop
pop
clc
leave
insb
mov
sti
sbb
mov
mov
mov
sub
push
ja
ds
andb
roll
cmpsl
mov
daa
jmp
fisttpl
repnz
out
notl
test
adc
mov
xchg
push
mov
cmpsb
or
push
fnstcw
lock
out
mov
arpl
into
popf
pop
jp
sbb
and
out
or
je,pn
movsl
dec
inc
test
mov
rcrb
mov
call
mov
imul
repnz
jb
jmp
jp
divb
cltd
cs
jo
lcall
push
lods
gs
test
push
sub
push
into
lret
fbld
xchg
sbb
pushf
or
popl
dec
out
push
jg
mov
imul
pushf
aaa
jae
data16
cmpl
gs
push
insl
out
mov
mov
in
rcrb
dec
insb
mov
inc
loope
sbb
loop
js
inc
jns
and
repz
outsb
pop
push
cs
dec
andl
out
add
inc
jge
lock
ret
nop
push
dec
mov
xor
hlt
ss
pop
mov
cmc
icebp
fwait
je
adc
faddp
fs
pushf
mov
fpatan
dec
mov
sub
repz
inc
jl
add
mov
and
bound
lods
mov
lock
jp
orl
inc
loope
pop
sbb
mov
ds
cs
jo
jecxz
push
ficompl
pop
scas
mov
shlb
cwtl
mov
push
sti
in
and
repz
mov
and
lds
sub
xchg
xlat
mov
push
sbb
dec
pop
or
push
jge
mov
cmpsb
lea
das
shll
mov
push
shrl
cmp
pop
outsb
adc
movsl
sub
xor
sbb
cld
sub
pop
sub
jge
add
cmpsb
aad
xchg
popa
lret
inc
mov
cltd
mov
in
lcall
and
and
ja
xor
test
lock
adc
std
or
jns
jp
mov
loopne
outsb
in
scas
push
inc
jecxz
push
xor
cmc
mov
pop
jbe
fisubs
add
stc
mov
repnz
stos
loope
sti
mov
dec
inc
add
rcl
mov
xchg
push
and
adc
pop
xor
sub
in
pop
mov
mov
cli
jns
adc
insb
push
sbb
mov
mov
sbbb
sub
adcb
mov
jecxz
push
gs
mov
pop
sbb
mov
out
aam
in
inc
cmpsb
in
sbb
jle
lcall
jle
out
cli
cwtl
mov
ficoms
cmpsb
cli
xchg
out
push
fnsave
push
dec
and
or
add
pop
or
loope
add
mov
cmp
inc
xchg
push
dec
mov
arpl
fcomi
in
in
stos
in
mov
cli
jne
fcoms
fnstcw
lock
cltd
stos
cmp
sti
mul
sub
pop
dec
dec
pusha
ret
idiv
and
test
test
add
push
add
and
je
pop
mov
cmpsl
int
mov
stos
aad
mov
out
sub
xchg
cmc
mov
jno
push
mov
cmp
inc
inc
mov
add
push
loop
jp
in
xor
cmp
xchg
inc
daa
and
adc
and
mov
inc
mov
mov
sub
mov
or
fsts
lret
mov
lcall
pop
add
jg
aad
fwait
xchg
mov
dec
or
dec
mov
test
imul
imul
ja
sub
inc
es
mov
jbe
jge
sbb
inc
addl
or
jno
and
xchg
clc
mov
ss
cmpsl
cmp
insb
shll
sub
and
daa
jmp
shll
cmp
dec
pop
loopne
and
adc
push
sbb
aam
fs
push
idiv
inc
dec
push
dec
adc
and
pop
outsl
xor
mov
stos
subb
inc
rorb
in
xchg
cmpsb
test
adc
repnz
mov
insb
jmp
inc
mov
lods
jo
xchg
test
movsl
imul
fisubrs
cltd
lods
sub
push
stos
lock
pop
mov
sarb
cmpsl
sbb
jmp
arpl
sbb
mov
hlt
mov
fisubs
add
outsl
mov
or
loope
lds
xchg
in
mov
xchg
mov
push
jnp
mov
push
mov
mov
adc
leave
mov
in
cmp
xchg
adcl
dec
or
cmc
les
jno
insl
stos
nop
jns
sbb
or
mov
lods
adc
adcb
xor
pop
adc
adc
xchg
popf
jno
shl
or
push
cmp
and
jns
inc
stos
mov
cmp
scas
xchg
push
or
repnz
mov
dec
fistpl
push
sbb
pop
mov
cmp
add
jne
pop
lods
adc
mov
mov
xor
pop
into
cmpsl
push
jne
pop
inc
fldl2e
inc
aas
adc
xchg
shll
std
pop
inc
xor
repnz
das
lock
xor
icebp
and
mov
push
mov
jb
movsb
sub
test
cmp
mov
lods
jl
shll
mov
dec
jmp
xchg
es
cld
loopne
loopne
gs
fisubrs
inc
and
pop
inc
imul
and
jno
lds
or
test
adc
lea
and
bound
xor
dec
push
test
xchg
pop
sbb
lea
in
daa
into
or
and
mov
stos
jno
insl
cmc
xchg
pop
xchg
pop
lret
pop
call
xchg
es
fdivs
pop
out
xor
xchg
daa
mov
add
mov
mov
jns
mov
aad
ja
daa
mov
sti
cld
inc
jb
lret
sahf
xor
fistl
lock
icebp
cmp
cvtdq2ps
cmc
or
test
dec
gs
adc
imul
lock
jle
or
jl
xchg
lahf
jmp
add
out
add
testb
gs
roll
inc
jnp
add
jb
lods
in
fistl
mov
sub
mov
dec
jne
inc
add
fsubr
mov
or
push
mov
out
cmp
lcall
call
repnz
pop
push
mov
pop
lret
cmp
mov
test
out
add
movsb
mov
or
adc
xor
sub
push
sti
and
push
mov
pop
adc
mov
mov
enter
sahf
sub
fst
jecxz
lds
sub
insb
pushf
stos
ljmp
pop
sahf
add
jb
pop
movsl
sbb
das
pop
in
cmp
sub
fcmovbe
jae
mov
sub
ret
jmp
shlb
lcall
in
jge
pop
mov
pop
xchg
les
xor
call
and
stos
xchg
loopne
lahf
gs
adc
jge
sahf
pop
push
pop
push
setae
ljmp
enter
cmpsl
popa
stc
in
jnp
pop
or
inc
jle
inc
nop
outsl
xchg
lret
mov
mov
push
imul
mov
cmp
pop
movsw
in
jnp
sub
xor
cs
imul
jae
icebp
scas
mov
sub
pop
call
jns
xchg
mov
out
mov
lcall
sti
imull
repz
jmp
idivl
adc
subb
sbb
inc
outsb
and
xchg
addr16
add
xchg
xchg
inc
jnp
push
ja
inc
test
mov
imull
jge
jb
cmc
adc
jns
fistpl
aam
pop
xchg
enter
jnp
fsubrl
shrb
iret
cmc
xchg
fbstp
ja
stos
mov
iret
popf
data16
cmp
lods
xchg
mov
and
test
fimull
in
jmp
jg
int
cmp
sub
inc
mov
sbb
adc
add
ror
jecxz
imul
ljmp
inc
dec
call
sahf
out
dec
dec
xor
push
int
imul
mov
mov
cmpsl
xchg
fstl
icebp
mov
in
sbb
and
sbb
cltd
dec
add
pop
ljmp
mov
dec
or
push
mov
or
mov
cltd
jmp
cmpsl
sysret
fnstenv
shl
mov
push
push
pop
ret
inc
dec
fldt
lds
cmp
js
shrb
pop
xchg
add
xor
out
hlt
inc
lahf
pop
ja
out
mov
mov
ljmp
arpl
icebp
leave
sub
push
out
fadds
xchg
fcomp
xor
xchg
inc
jle
gs
mov
mov
cltd
cmp
rcrb
loopne
mov
or
fwait
scas
mov
xor
xchg
jecxz
xchg
das
in
pop
jne
iret
adc
out
in
movb
xchg
sbb
aaa
or
jno
aaa
dec
sub
mov
orb
out
xchg
lods
fsubrs
inc
enter
pop
imul
pop
jp
nop
pop
repz
mov
gs
mov
aaa
pop
jge
push
out
pop
in
and
mov
sahf
xor
sub
dec
fcmovnbe
jmp
dec
add
mov
mov
pop
in
popf
or
xchg
insb
lea
les
push
pop
adc
cmpsl
or
xchg
xor
xor
sub
js
lret
dec
jbe
inc
test
les
xor
addr16
sub
cmp
xchg
push
xchg
xchg
mov
hlt
adc
jno
test
sti
jge
mov
mov
adc
fidivl
mov
jl
pop
mov
inc
add
sbb
out
pop
sub
ret
fldcw
lret
into
mov
repnz
mov
shlb
inc
aas
shrl
in
ret
sbb
jge
push
int3
or
test
es
mov
push
and
pusha
fisubrs
or
sbb
push
je
xchg
mov
pop
mov
or
mov
pop
mov
mov
or
jmp
jnp
push
sub
movsb
dec
mov
dec
mov
pop
push
icebp
sub
push
pop
out
and
xchg
ja
mov
and
xor
jecxz
jp
sub
mov
pop
mov
fnsave
xchg
ret
pop
pop
dec
insb
insb
or
insb
dec
loope
xor
pop
or
mov
push
adc
push
int3
adc
je
scas
cmp
lahf
push
xorb
movsl
sti
ret
xchg
mov
adcb
loop
pushf
sbb
out
leave
jg
outsl
lods
add
loopne
sub
add
andb
insb
or
cltd
pop
pop
mov
hlt
icebp
push
movsb
xchg
lea
scas
xchg
mov
xor
shll
jmp
sbb
push
imul
mov
mov
adc
aaa
jbe
push
std
pop
test
xchg
sub
sbb
faddl
cltd
mov
mov
cmpl
test
mov
dec
xor
mov
cli
xor
scas
mov
pop
stos
jb
fs
add
or
or
mov
pextrw
sub
hlt
js
pop
insl
cld
popa
ds
out
mov
ret
xchg
into
in
or
xor
or
ja
dec
mov
sub
js
test
cltd
xchg
xchg
es
icebp
leave
xor
xchg
mov
pop
inc
roll
xchg
inc
pop
sub
pop
adcl
inc
cmpb
and
fdivrs
push
sbb
ficomps
mov
ret
jae
mov
jne
rcr
nop
inc
mov
cwtl
ds
cmp
imul
jp
pushf
add
stos
mov
and
pop
inc
add
jo
xchg
push
pop
fsubs
outsl
repnz
pusha
jo
scas
pop
push
inc
xor
or
cmp
test
repnz
sub
ss
icebp
frstor
loopne
adc
ljmp
enter
out
cmp
lods
loop
scas
dec
mov
mov
in
or
sub
xchg
xchg
mov
icebp
outsl
sti
lret
mov
lret
or
shll
andb
scas
and
adc
sub
cmpsb
xchg
push
push
popf
jmp
pop
testb
xor
pop
mov
cmp
ss
fisubl
or
in
xchg
sbb
or
mov
inc
and
add
xchg
stc
mov
fldenvs
cmpsl
jne
mov
adc
push
daa
inc
in
xchg
lods
push
loop
jb
lods
shlb
adc
dec
rcrb
insl
aam
cmp
fidivl
jl
mov
repz
and
jo
cmp
xor
or
inc
movsl
mov
in
adc
jmp
jae
and
fimuls
jns
popf
push
je
shll
xchg
xor
ret
sarl
lret
sub
pop
andl
mov
fs
cld
mov
add
daa
je
jecxz
xor
mov
ss
insb
cmp
mov
decl
and
adc
pop
test
mov
pop
adc
xchg
ja
mov
add
xchg
daa
mov
mov
jmp
and
jge
cmc
pusha
sahf
inc
cs
pusha
lock
insb
stos
fsts
fistl
imulb
add
dec
sarb
sbb
mov
jnp
xchg
push
enter
aad
icebp
ljmp
scas
call
hlt
out
sub
loop
mov
and
insl
inc
insb
push
hlt
inc
pop
or
sbb
jmp
adc
push
cmpsb
into
andb
dec
mov
and
test
das
insl
icebp
scas
push
jnp
scas
jmp
mov
cmp
icebp
mov
cli
jmp
jmp
add
mov
fstl
sub
ffree
loope
sub
sbbl
push
jl
push
sub
movsl
mov
faddl
xchg
dec
call
les
insl
loop
sarb
scas
jl
dec
repz
sbb
sub
lahf
add
mov
imul
push
inc
jp
jo
aam
add
xlat
loopne
bound
mov
negl
sti
rcrl
loope
push
sbb
aam
add
and
adc
fisubl
cwtl
inc
pop
gs
aam
int
aas
imul
sbb
jecxz
cmp
mov
mov
sbb
mov
jo
loop
or
jns
add
jp
pop
sbb
fstps
pop
popa
or
adc
std
sbb
mov
mov
pop
adc
test
lock
fld
lahf
bound
sbb
mov
mov
test
insb
data16
cmp
mov
subb
or
mov
daa
rcr
or
dec
pushf
bnd
push
ret
sbb
out
dec
mov
in
and
mov
adc
ficoms
adc
movsb
cmp
icebp
and
adc
push
ja
fwait
jecxz
aad
pop
cmpsb
out
cmp
test
inc
js
clc
out
dec
hlt
imul
sti
lea
ds
jmp
adc
loop
in
movsl
das
lock
jns
sbb
or
roll
inc
or
rcl
xchg
fists
adc
push
repnz
sbb
lea
sub
xchg
cli
mov
dec
arpl
in
mov
or
inc
stos
repz
and
mov
jne
int3
test
fs
popf
push
aam
sbb
xchg
and
dec
cbtw
ret
addb
nop
sbb
adc
pop
and
push
std
enter
ja
dec
mov
jb
add
movsl
iret
jnp
imul
mov
cli
fwait
jle
pop
mov
cwtl
lret
rcrb
push
in
xor
inc
push
sub
rolb
repz
add
mov
aad
pop
xchg
jb
test
enter
data16
or
mov
add
loope
xchg
enter
test
sarb
daa
repz
mov
or
or
test
xor
lahf
aaa
imul
ds
nop
les
or
repz
inc
insl
test
popw
fildll
int
divl
adc
xchg
std
repz
cli
out
xchg
push
out
cmp
mov
xchg
pcmpeqd
popf
outsb
lea
in
sub
mov
test
pop
movsb
das
cmp
jl
std
or
scas
stc
and
out
enter
add
pop
test
add
sbbb
pop
pop
xor
pusha
shrl
out
ret
inc
lock
push
adc
addr16
fmuls
cmp
popa
sbbb
shl
movsl
inc
lcall
cwtl
jbe
cwtl
mov
sub
xchg
jo
cmp
testl
data16
ja
bound
inc
push
out
xchg
insb
or
gs
pop
je,pn
es
imul
stc
fldenv
xchg
imul
test
lds
pop
movsl
mov
imul
scas
sub
sub
xchg
xor
pop
fs
ljmp
jg
jne
pop
in
stos
in
mov
xchg
push
sbb
les
xrelease
dec
daa
daa
fidivrs
add
rolb
sbbb
mov
ja
and
loope
push
sub
loope
rclb
test
sub
sbb
cld
and
idivl
push
or
icebp
movsl
movsb
cmp
rcl
es
dec
arpl
arpl
icebp
hlt
pop
jmp
out
cmpsl
sti
cmpsb
mov
mov
dec
pushf
or
test
fistpll
lods
lds
adc
lahf
or
xchg
popf
dec
inc
daa
std
aam
imul
pop
jecxz
orb
lret
incl
sahf
pminub
xchg
xlat
shr
lret
clc
or
and
and
xchg
adc
clc
scas
xchg
aaa
out
ret
jg
movsb
int
mov
pop
add
iret
and
sarb
daa
xchg
popf
adc
mov
xchg
aad
mov
addl
pop
fs
pop
cmpsl
dec
mov
cli
cmpb
dec
cmp
jg
ffreep
pop
xor
inc
sub
and
pop
push
and
xor
das
ror
mov
mov
pop
push
fwait
out
js
test
push
cmpsb
ja
sub
xlat
ds
jmp
int3
mov
in
mov
add
mov
jo
jno
adc
ret
lods
setg
add
outsl
loope
out
insb
pop
mov
mov
filds
mov
cld
xchg
xchg
xor
pusha
popf
push
dec
xor
ret
mov
cltd
add
or
push
ret
in
jecxz
adcb
pop
mov
repz
addl
dec
bound
push
je
lret
jmp
pop
fwait
pop
jmp
mov
nop
fiaddl
mov
xor
cmp
imul
pop
movsl
push
xlat
sbb
movsb
push
or
cmp
lods
adc
insl
cli
xor
cmpsb
leave
sbb
push
push
test
sarl
add
dec
mov
cmpsb
aad
lahf
cmpb
and
jmp
add
test
xchg
fcoml
rolb
movsb
mov
out
in
je
mov
ret
push
sub
or
loop
mov
in
xchg
xchg
dec
add
test
add
jnp
xor
cmp
mov
mov
seta
out
es
pop
hlt
cmp
out
sbb
or
hlt
inc
mov
jmp
daa
pop
roll
filds
push
inc
jns
xchg
and
pop
in
xor
in
sub
mov
rolb
jns
imulb
push
sbb
mov
mov
out
jmp
push
movsl
in
adc
out
xchg
aam
out
push
xchg
sub
pop
or
jp
mul
stc
add
std
out
sub
dec
je
push
insb
pusha
xor
repz
outsb
test
movsb
cmc
rorb
or
xchg
incl
xor
std
daa
push
test
push
push
lahf
aaa
adc
adc
imul
lret
jno
loop
imul
mov
jge
push
adc
jo
add
rcrl
shlb
cli
xchg
popa
int3
mov
lds
mov
out
outsb
jmp
cmpsb
add
jae
call
mov
test
fwait
mov
pop
insl
cld
std
outsb
sbb
add
jne
xor
scas
rcrb
sbb
sarl
pop
aad
and
movsl
and
mov
int3
cmpb
add
dec
jb
sub
imul
cmpsb
sbbl
push
stos
xchg
repz
xchg
cwtl
faddl
loop
xchg
mov
subl
cmp
jecxz
aad
push
sub
dec
shl
test
inc
in
pop
sbb
jb
js
sarl
loope
shl
adc
mov
jns
xor
add
lock
pop
mov
lcall
jle
lods
aas
in
push
xor
xchg
or
sub
jl
push
sub
es
mov
mov
mov
mov
test
cmp
les
jno
push
dec
adc
lahf
ret
and
push
push
mov
lret
add
into
sbb
ret
clc
dec
enter
lcall
mov
cmp
xchg
push
cld
insb
pop
dec
xor
dec
fst
cltd
xchg
xor
ljmp
xchg
mov
test
movsb
in
sbb
push
out
icebp
mov
fdivrs
mov
andl
js
dec
pop
cmp
xlat
push
sub
int
adc
xor
fwait
test
mov
jl
es
movsl
movsl
jecxz
insl
push
cltd
dec
xor
dec
mov
or
sbb
pop
popf
aad
fldt
outsl
cltd
push
xchg
cld
mov
inc
pusha
sub
loop
push
leave
jge
imul
imul
loop
adc
out
lea
pop
dec
les
jmp
rcrl
shrl
fbstp
mov
adc
or
jmp
dec
push
mov
cmpsl
inc
test
outsl
in
or
popa
mov
mov
lods
jl
sbb
shr
sub
jge
mov
lea
cmc
iret
divb
adc
mov
divl
xchg
jb
leave
push
or
xchg
and
icebp
test
leave
sarb
pusha
sbb
xchg
pop
loop
leave
fsubs
mulb
cmp
xchg
rclb
scas
push
ret
mov
jnp
xchg
iret
into
push
push
sbbl
sub
jo
xchg
rol
in
out
fwait
dec
jns
xor
mov
stos
inc
lds
dec
test
movsb
cltd
pushf
or
hlt
mov
or
into
push
jnp
push
sti
mov
in
or
ret
out
gs
xchg
mov
ljmp
cli
mov
pop
push
mov
push
jecxz
push
mov
rorl
movsl
mov
pop
inc
js
inc
das
lds
sbb
mov
roll
cs
lcall
mov
out
jle
sub
pop
clc
add
fsubr
push
test
sbbl
adc
fistpll
in
mov
and
mull
mov
and
pop
hlt
xlat
jne
inc
faddl
push
inc
jp
jns
stc
aad
mov
sbb
xchg
push
pop
lds
clc
inc
gs
jbe
pop
dec
mov
sahf
sahf
add
push
sbb
roll
xor
aas
dec
cmc
rcll
jbe
das
roll
cwtl
mov
mov
out
lock
aad
inc
out
fcoms
adc
sahf
mov
out
mov
push
out
dec
fucompp
mov
je
mov
loopne
inc
aas
jnp
fadd
push
jo
ret
mull
xlat
cmp
xorb
push
nop
dec
xchg
mov
mov
lret
sarl
les
mov
test
push
mov
int
faddl
cmp
aaa
sbb
push
mov
push
pop
add
pop
pop
pusha
dec
leave
push
xchg
shl
ficomps
in
jecxz
ljmp
lahf
aam
push
pop
test
cmp
hlt
bound
ss
lods
add
aaa
and
xor
popf
add
aaa
test
js
aad
inc
inc
dec
lahf
xchg
cld
outsl
loopne
imul
push
insl
fs
lea
lds
imul
dec
push
sbb
das
aam
scas
and
adc
outsl
xchg
mov
jbe
or
cmp
and
add
enter
imul
daa
xor
lea
mov
clc
sbb
inc
jne
jmp
cmp
add
ret
xchg
dec
mov
pushw
cltd
push
mov
jg
jnp
out
sbb
out
loop
addr16
cmpsb
jnp
imul
enter
xor
pop
mov
ss
add
jae
lods
jno
ljmp
and
mov
dec
lret
and
fidivrs
addr16
jno
push
addr16
push
cs
mov
in
test
push
mov
lret
loopne
out
push
lahf
les
xchg
fdivs
inc
add
in
mov
jae
enter
jno
fidivrs
pop
sub
gs
outsl
test
jl
dec
mov
pusha
fwait
cld
xchg
int3
test
loop
push
inc
cmp
jp
xchg
and
push
push
inc
mov
loope
mov
xorb
ds
test
xor
clc
and
out
xchg
in
mov
scas
hlt
js
xor
outsb
lahf
lea
mov
adc
jo
aad
inc
push
mov
inc
lea
pop
pop
outsl
push
cmpb
dec
push
cli
or
into
cmp
loopne
dec
mov
mov
and
fsubrl
pop
sar
iret
jb
repnz
std
cmc
mov
pushf
push
sbb
out
cvtdq2ps
lea
sbb
outsl
mov
addr16
adc
scas
mov
xchg
imul
jno
fsubr
andps
and
es
icebp
mov
mov
js
sub
movsb
pop
imul
mov
xchg
dec
mov
inc
xchg
jno
adc
inc
mov
pushf
xchg
cltd
addr16
jno
pusha
jecxz
test
andb
ret
into
and
add
push
movsl
roll
fsubl
ljmp
iret
pop
js
lea
fmuls
jno
inc
push
jb
fcmovbe
ja
stos
sub
aad
cmp
jg
push
sbb
mov
es
xchg
aam
push
dec
xchg
pop
inc
hlt
add
add
test
sub
es
lods
aam
std
movsl
add
mov
cmc
mov
push
sar
std
scas
ficoml
dec
xor
jmp
jle
jns
aas
ret
hlt
xchg
inc
inc
cs
dec
pop
sub
sbb
push
jno
dec
or
lret
es
xor
xchg
cmp
in
xchg
movsb
cmc
out
pop
mov
bound
divb
sub
dec
push
or
mov
stos
push
cld
jne
outsb
shr
and
push
repz
loope
adc
push
or
sbb
int
dec
xor
pop
add
movsl
add
cmpsl
call
xchg
outsb
xchg
pop
pop
cmp
rcrl
pop
push
outsb
mov
sub
mov
add
xchg
ror
sub
out
lcall
stc
xchg
adc
push
stc
movl
inc
loope
ficoms
xchg
das
xchg
sub
xchg
out
mov
inc
pop
xor
orb
push
lds
push
mov
test
sbb
cld
pop
loope
mov
repz
adcl
pop
call
cmpsb
movsb
js
adc
and
lahf
aam
scas
jns
aam
ret
pop
icebp
notl
mov
sub
sub
or
pop
loopne
pop
adc
sub
sbb
inc
adc
xchg
fs
into
mov
cltd
negb
leave
rcrl
dec
or
jle
ljmp
add
push
hlt
ja
outsl
and
push
adc
jbe
pop
xor
mov
cwtl
mov
ss
push
mov
add
pop
stc
mov
pop
mov
cld
pop
out
test
gs
or
mov
adc
or
xlat
cli
push
inc
out
dec
fdivs
sub
jp
loopne
cli
pop
push
cmpsl
test
ss
xchg
inc
jbe
jge
test
jae
cmpsb
push
fwait
cltd
xorl
cmp
addb
pusha
mov
mov
sbb
dec
cmc
pop
jl
testb
pop
adc
into
ds
std
jne
aad
jp
insl
testb
insl
mov
cmp
popf
fxch
push
mov
or
das
in
jns
mov
movsb
sbb
stos
sbb
add
loop
out
das
test
leave
push
mov
aas
stos
into
in
xchg
jecxz
test
in
push
mov
shrb
call
sbb
inc
adc
jb
das
mov
dec
jns
lcall
sub
add
xor
inc
push
dec
test
push
in
mov
adc
xchg
repz
addl
test
sahf
mov
mov
je
xor
xor
xchg
in
imul
es
ret
adc
out
daa
pop
sti
clc
mov
mov
outsl
jmp
cld
mov
mov
inc
sbb
adc
xor
roll
sbbl
xchg
mov
pop
imul
mov
ljmp
push
fdivr
jecxz
in
lahf
dec
mov
dec
push
jb
iret
dec
data16
iret
push
mov
adc
mov
mov
fcmovb
xor
popf
mov
push
push
inc
fucom
or
sbb
pop
je
push
cli
jo
ss
js
icebp
cltd
aad
ljmp
jbe
hlt
mov
jge
clc
es
inc
and
shll
jmp
or
xchg
push
aad
or
subl
movsl
xchg
lahf
adc
popf
inc
popa
aas
stc
xchg
jns
push
xchg
jnp
clc
nop
iret
jne
dec
out
add
add
push
test
fistps
gs
popa
push
pop
lea
push
das
push
inc
xor
pop
sti
mov
push
sbb
jecxz
xchg
dec
sti
push
adc
fs
adc
test
lock
and
lret
push
pop
push
loope
xor
mov
mov
mov
jne
and
dec
dec
jne
enter
popa
jae
mov
addr16
push
pop
adc
les
out
int
test
dec
sbb
dec
xlat
loop
xor
add
sub
pop
mov
lret
cmp
daa
jl
sti
sahf
jg
mov
adc
sbb
mov
push
loope
in
in
adc
xchg
out
test
dec
aaa
gs
mov
loope
pop
add
mov
adc
js
and
push
push
adc
cmp
push
sub
outsl
inc
add
inc
jp,pt
dec
pop
inc
aam
fmuls
lcall
push
add
lret
iret
test
popf
sub
xor
out
movsl
dec
test
mov
sub
pop
cmp
pushf
pop
pop
fs
inc
nop
cmc
dec
dec
adc
sub
fisubs
loop
jge
insb
daa
cltd
xor
gs
mov
dec
push
xchg
jno
sbb
jno
decl
and
adcb
fiaddl
push
test
jne
movaps
xor
sub
adc
mov
mov
adc
in
fisubs
adc
xchg
push
ret
imul
imul
lea
cli
dec
and
iret
and
cmp
jo
lret
adc
sbb
add
or
inc
push
insb
into
xadd
add
mov
xor
xor
loope
pop
sub
test
dec
xchg
jecxz
push
cmpb
into
cld
xor
xchg
jb
push
insb
les
cmp
notb
jl
into
sahf
jno
xor
pop
inc
ficoml
xor
lea
mov
mov
sar
popf
mov
cld
test
xor
cmp
xor
jne
pop
daa
or
das
jge
fldt
dec
xchg
cmpsl
aad
sbb
lahf
mov
pop
nop
inc
ds
out
sbb
sbb
xor
jmp
js
push
outsl
call
add
jo
sbb
imulb
xchg
js
jno
pop
pop
pop
loope
mov
inc
popa
mov
loopne
cmp
sarl
js
inc
xchg
cltd
shl
stc
std
dec
jl
cmp
lods
je
test
repnz
lret
jmp
fldl
faddl
scas
sub
mov
test
repnz
fadds
gs
aad
arpl
cmpsb
mov
pop
push
out
faddl
jb
jmp
mov
cld
shrl
insb
jb
xchg
icebp
jge
outsl
stos
cmp
in
aad
sub
cli
jmp
dec
xchg
xchg
push
pop
and
inc
iret
xor
mov
pop
mov
xlat
or
and
out
stc
push
mov
pushf
or
push
inc
cmp
stos
lcall
mov
ret
dec
fsubr
cli
and
or
dec
ficoms
fwait
cltd
lret
jle
inc
add
mov
and
outsl
nop
dec
lret
add
mov
shrb
stos
adc
in
les
dec
imul
sbb
jge
jg
xchg
in
pop
pop
push
jnp
adc
mov
rcrl
cmpl
jb
cmc
pop
fldl
xchg
lds
into
xchg
inc
movsl
mov
xchg
pop
adc
pushf
ret
and
jae
test
pusha
xchg
cmp
cltd
xchg
and
repnz
sub
fidivl
jg
add
adc
sub
or
std
fst
ljmp
movsl
imull
jno
or
cwtl
movl
wbinvd
lock
dec
lcall
vmovapd
push
sahf
in
sbb
sbb
xlat
inc
jl
ljmp
outsl
jecxz
insb
call
lcall
add
sbb
fidivs
push
movsl
out
and
sbb
loopne
push
aaa
test
mov
adc
movsb
add
mov
lea
xorb
pop
leave
dec
into
and
jbe
fsubs
mov
out
inc
out
adc
push
xchg
cmp
and
aad
mov
mull
test
and
xchg
stos
fisubrs
jb
or
and
xor
push
btr
pop
daa
xchg
aam
adc
cmc
xchg
jmp
jb
loop
in
dec
cmc
push
push
loopne
xchg
jno
in
mov
mov
fsub
inc
mov
out
and
test
outsb
inc
scas
clc
rorb
xor
sbb
popf
jnp
mov
pop
ja
add
out
rorb
dec
pushf
cmp
idivl
cmpsb
and
xor
cwtl
jnp
jp
pop
adc
dec
sub
in
data16
rcrl
dec
ret
adc
imul
pop
clc
sbb
cmc
cmp
mov
call
mov
cmpsb
in
push
bound
out
stos
mov
cmpsl
rol
mov
aam
movsl
xchg
push
mov
push
inc
cmp
pop
fs
lods
test
ss
insl
sbb
sbb
cmpsb
xor
xchg
js
jp
xchg
pop
insl
and
and
inc
inc
lock
mov
pop
popa
pop
sub
push
inc
rcrb
xlat
test
xchg
mov
dec
rcr
dec
xor
in
jmp
mov
das
nop
push
push
sbb
xlat
adc
idiv
out
in
out
add
test
lret
scas
push
insl
xorb
adc
sahf
xchg
bound
dec
dec
sub
xchg
shl
test
les
int
les
jns
push
popf
js
mov
jge
or
leave
jbe
inc
pop
lcall
ja
or
push
mov
sbb
push
adc
pop
fidivrl
mov
shll
sar
xchg
shll
xchg
loopne
mov
mov
sar
mov
test
dec
add
and
mov
mov
xchg
xchg
push
orl
testb
fisttps
je
cmp
mov
adc
ret
push
jnp
cmp
sub
xor
adc
out
dec
ret
inc
leave
jge
push
adc
sub
pusha
mov
sbb
loope
mov
inc
fldl2t
mov
dec
popa
push
mov
shlb
lret
push
pop
enter
xchg
sbb
xbegin
cmpsb
insl
or
repnz
or
stc
or
sbb
stos
in
jae
inc
insb
mov
jmp
mov
push
addr16
jmp
cld
js
cmp
clc
lcall
dec
sti
mov
call
aaa
dec
or
sub
pop
notl
cltd
int
push
je
or
xchg
mov
mov
push
pushf
add
jp
lods
ret
push
leave
mov
loop
mov
pop
insl
add
jmp
mov
pop
fisttps
mov
mov
pushf
mov
inc
jecxz
mov
jl
pop
dec
push
pusha
in
ds
xchg
add
mov
inc
and
ss
scas
cmp
rcrb
daa
jp
push
adc
repz
fwait
imulb
xor
sti
or
push
in
pop
adc
sub
cli
lret
or
mov
push
movsb
and
ret
je
out
imul
je
jle
es
lods
loopne
xchg
dec
pop
les
mov
mov
adc
stos
xor
and
xlat
cltd
sub
mov
mov
jns
lods
cli
in
test
dec
jbe
xor
dec
cmp
push
aam
lcall
jne
hlt
xchg
pop
dec
sbb
mov
inc
movsb
shl
inc
push
inc
fstpt
adc
xchg
jl
push
pop
iret
inc
ja
jbe
jbe
adc
lods
cs
cmpsl
and
jecxz
in
lcall
fildll
cltd
jle
addr16
insl
mov
jge
jne
iret
out
sub
inc
push
cmp
repz
cs
mov
sbb
sbb
cltd
mov
filds
js
aam
xchg
and
out
jns
jae
and
ficomps
add
mov
jns
push
repnz
fstpl
jp
mov
dec
int3
ss
out
adc
sti
adc
loop
enter
mov
push
aas
lea
aaa
xor
ret
addr16
or
push
and
mov
xlat
jl
ds
nop
and
negl
stc
pop
mov
aaa
xchg
orb
add
sub
lea
pop
cld
push
xchg
ret
stos
push
aam
sti
jne
sbb
and
lcall
sahf
and
rorl
popf
or
repnz
sub
pusha
cmpsb
jne
bound
mov
jmp
shrl
push
dec
arpl
cmp
mov
fs
nop
jecxz
xchg
xor
or
gs
les
stc
pop
outsl
mov
aam
imul
mov
out
inc
repz
jp
sbb
add
sbb
js
sti
lods
addl
cltd
rep
xchg
test
mov
mov
out
sbb
xor
insl
dec
fsts
and
dec
pop
nop
fadds
sarl
stos
jge
sarb
add
or
xor
jae
ror
iret
popa
add
jo
into
shlb
adc
push
cmp
leave
or
add
sbb
mov
lock
jle
mov
xchg
mov
mov
xor
cmpsb
mov
cs
sub
adc
and
inc
loop
out
test
movsl
dec
mov
bound
movups
aad
test
jno
xor
pop
leave
sub
push
mov
push
and
push
and
out
pushf
es
mov
xor
jge
imulb
iret
fcoms
daa
sbb
dec
adc
inc
xor
imul
out
xor
outsb
out
push
rclb
je
xchg
ss
pop
push
sub
lcall
in
in
dec
mov
rorl
cwtl
js
pushf
cwtl
inc
fildl
dec
out
xchg
adc
iret
and
fists
inc
cmp
int
jmp
sub
cmp
jecxz
aaa
pushf
mov
in
lret
mov
aad
add
sbb
ja
arpl
jg
pop
add
mov
arpl
data16
lahf
out
std
mov
adc
mov
loop
jne
xlat
pop
sbb
cld
imul
cmp
cld
xchg
mov
movsb
xchg
js
pusha
add
scas
mov
cli
imul
shll
stc
inc
je
es
les
out
fwait
push
lcall
lea
arpl
mov
mov
fstl
xchg
rcl
mov
xchg
pop
adc
test
pop
cmp
shr
cmp
mov
add
cltd
add
xor
shrl
xchg
ds
pop
and
xchg
push
cmc
inc
adc
sub
adcl
mov
and
loope
sbb
je
inc
mov
inc
out
jmp
dec
hlt
xchg
aam
add
in
lret
and
test
push
movsl
daa
xchg
or
sub
inc
cmc
dec
dec
and
sti
mov
test
jnp
pop
mov
or
out
in
or
dec
push
rcrb
dec
lods
mov
lods
mov
popa
enter
leave
push
push
daa
ds
adc
andl
pop
sbb
in
fildll
add
mov
les
mov
lock
jno
dec
sub
push
lahf
xor
push
fcmovb
outsl
push
mov
leave
xor
stc
mov
cmp
mov
into
cli
and
or
mov
ret
ret
and
int
jmp
pusha
repnz
sahf
mov
adcl
xchg
aad
push
or
inc
mov
std
push
sub
add
insl
push
jne
xchg
mov
loop
jne
sahf
xor
fmuls
dec
push
mov
sbb
mov
mov
mov
popf
add
mov
jnp
mov
sub
xchg
inc
mov
fsub
xor
cmp
push
aam
decl
xlat
jbe
lock
jge
pop
lret
add
loopne
insb
adc
dec
aas
inc
mov
js
push
inc
fwait
pop
mov
inc
cs
push
jne
push
inc
pop
xor
or
repz
std
jbe
fidivl
jmp
cmp
leave
jne
inc
outsb
lret
nop
ljmp
inc
insb
outsb
sub
inc
pop
xor
loopne
dec
mov
push
sbb
pop
call
jl
scas
jl
pop
adc
adc
inc
mov
sti
jbe
sub
cmp
cltd
scas
dec
pop
jg
push
add
shr
scas
mov
push
insb
rcr
xlat
sub
dec
jg
pop
sbb
arpl
cmp
cld
adc
in
lahf
lret
std
lahf
lahf
pop
imul
xchg
dec
hlt
cmc
mov
dec
cltd
adc
pop
loope
cld
sbb
xor
loop
test
dec
jb
push
push
mov
dec
sub
jmp
inc
test
stos
fadds
add
test
lret
shlb
div
lcall
fs
cld
aas
in
push
pop
mov
push
dec
push
rcrl
or
xor
push
imul
push
ss
sbb
push
lret
test
pop
sub
cmp
mov
add
jnp
test
xor
inc
fldl
jl
das
dec
xchg
lods
mov
adc
scas
jmp
js
xchg
sub
leave
aad
or
cmp
sbb
pop
push
xchg
loopne
add
inc
and
inc
outsl
dec
stc
cwtl
cli
lods
jbe
pushf
dec
mov
pop
mov
push
icebp
inc
movsl
mov
out
loopne
orl
mov
call
mov
add
add
daa
stos
aas
test
inc
test
jp
int
inc
roll
rol
xchg
gs
sti
dec
inc
xchg
pop
xchg
push
and
scas
les
cmp
cmp
add
lcall
xchg
xlat
test
dec
pop
aam
arpl
jb
sub
jne
xchg
jb
insb
mov
mov
xor
pop
sti
cmc
xor
adc
jb
or
aas
inc
jno
inc
lcall
data16
jecxz
jecxz
lahf
sub
mov
rcrl
ja
aaa
dec
leave
lea
xchg
mov
mov
dec
xor
sbb
repnz
mov
sub
xchg
bound
stc
enter
cmp
mov
ja
jge
xor
daa
jmp
pop
inc
sbbb
mov
push
push
push
inc
jbe
dec
push
jne
push
xchg
mov
xchg
test
fucomip
mov
pop
mov
mov
pop
pop
xchg
jge
jp
shl
aas
inc
fldcw
outsl
repz
orb
sbb
sub
int3
out
js
xor
movb
loope
add
je
jne
fstpt
fisubs
stos
lods
imul
stos
cmp
popa
ja
mov
fiaddl
dec
mov
push
add
jmp
xchg
inc
push
movsb
sbb
js
arpl
inc
pop
adc
movsb
in
in
add
leave
ss
dec
sbb
jno
rcrb
ds
xor
cmp
ss
mov
addl
and
fcoms
movsl
stc
iret
roll
nop
or
fistps
sbb
popa
outsl
addr16
pop
pop
imul
lods
lret
lahf
pusha
inc
xlat
adc
enter
mov
lds
jo
shlb
lock
fiadds
cmpsl
sbbl
xchg
xchg
adc
sub
ljmp
pop
and
dec
ret
xchg
push
cli
sti
bound
jne
jae
fsubl
dec
fdivs
push
sub
sti
adc
sahf
nop
daa
cmc
pop
js
loope
in
pop
xor
in
xchg
xor
mov
mov
and
je
aaa
pop
ljmp
leave
mov
add
push
inc
movsb
sbb
dec
dec
call
mov
lea
sbb
out
jbe
mov
cmpsl
les
inc
inc
fwait
cmp
push
sub
pusha
push
xor
mov
cld
cwtl
pop
jno
dec
insb
pop
dec
das
push
fdivrs
push
and
xchg
add
adc
fisttpl
xchg
jo
pop
dec
dec
sub
imul
jg
stc
mov
sub
adc
mov
repz
fisubs
pop
in
inc
lock
fadd
and
popa
mov
into
cmpsb
inc
hlt
aas
pop
mov
xchg
mov
or
push
xor
mov
hlt
cwtl
jmp
ds
mov
or
pop
add
fisttps
or
jp
or
adc
mov
lret
sbb
ljmp
and
push
push
hlt
and
mov
cmp
test
lcall
stos
jge
xor
push
in
hlt
in
ret
mov
and
fwait
xchg
data16
dec
cmp
imul
cmp
mov
or
movsl
pop
sahf
hlt
dec
and
pop
data16
or
dec
adc
or
push
push
fisubs
cmc
int
xor
mov
cld
rcrb
push
outsl
cmp
mov
sbb
les
mov
std
mov
push
cli
cmp
pop
xchg
fistpl
stc
ljmp
fists
pusha
addr16
mov
xchg
div
loop
es
int
sub
test
xchg
pop
aam
lea
mov
movsl
cmpsl
lock
sbb
mov
cltd
and
push
xlat
add
aad
push
inc
sbb
sbb
jge
jl
repnz
add
data16
mov
aad
cwtl
fs
push
xchg
mul
ret
sub
adc
push
ljmp
mov
or
movsb
test
jo
es
aad
dec
and
inc
aas
and
loopne
jmp
into
int
fwait
hlt
sub
push
dec
or
adc
dec
xchg
push
fwait
adc
imul
dec
push
insl
cmp
inc
cmp
out
iret
inc
jle
test
imul
mov
cmp
mov
insb
jae
call
in
fld
lcall
cs
mov
stos
cmpb
int3
std
jg
hlt
mov
clc
push
into
ja
int3
and
pop
xor
sbb
subb
aas
fcoml
int3
mov
mov
mov
and
cmpsb
int3
and
outsl
mov
jo
push
add
insb
or
lahf
aam
ret
pop
gs
dec
mov
stos
adc
push
int3
sub
mov
and
push
mov
xchg
add
sbb
jecxz
or
addr16
add
popf
dec
fiaddl
or
jle
out
dec
cmpb
in
iret
mov
push
lock
push
mov
adc
add
mov
aaa
dec
adc
cmp
int
push
movsl
cli
xor
aaa
rcrl
andl
jp
jb
jb
fwait
mov
cld
das
scas
mov
test
add
pop
push
pop
add
add
repz
jecxz
mov
int3
cmp
mov
sbb
int
inc
mov
int3
sbb
outsl
cltd
inc
xchg
fildl
and
push
imul
ret
mov
jns
add
test
cmpsl
push
or
testl
push
push
aas
hlt
push
sbb
sbb
aad
xor
adc
fldl
notl
mov
sti
xor
sub
stos
in
mov
push
fcmove
and
enter
stos
cli
cmpsl
aas
jae,pt
rolb
xlat
pop
jg
notl
shll
in
mov
out
jns
sub
cmp
mov
sub
inc
roll
xor
sbbl
mov
cltd
xor
fs
sbb
gs
push
test
int3
cld
mov
es
pop
pop
test
outsb
mov
lea
ds
rcll
cwtl
fst
jg
mov
cmpsl
mov
xchg
xlat
mov
dec
push
xor
push
sbb
outsb
pop
out
ret
sbb
stos
or
es
mov
iret
adc
push
aad
ficoms
xchg
mov
cmp
dec
mov
adc
xchg
inc
jp,pt
push
add
fadds
mov
pop
or
test
data16
push
jae
aaa
popf
scas
sub
leave
shl
hlt
push
inc
and
adc
loope
or
mov
testb
or
call
mov
and
pop
jno
mov
stos
cmpsb
xchg
loop
cld
jb
or
mov
mov
mov
sbb
lahf
outsb
leave
xchg
inc
sub
adc
jbe
cmp
dec
jmp
gs
add
movsl
sub
gs
daa
mov
addr16
sbb
sar
push
inc
bound
call
arpl
adc
fs
mov
push
lods
sub
loopne
shll
int
insl
sahf
jle
jo
push
iret
ljmp
mov
xor
inc
sahf
inc
int
sarl
into
xchg
fwait
dec
jle
popa
bound
jmp
cmp
or
xchg
lods
aam
imull
mulb
repz
shr
stos
cmp
pop
jbe
and
movsl
cld
or
or
sbb
xchg
or
sbb
aas
add
pop
xlat
mov
pop
divl
and
mov
adcb
xchg
pop
in
xor
push
xchg
cmp
jle
fdivl
into
mov
and
add
push
add
test
lods
push
mov
inc
add
jb
add
outsb
push
test
jl
jmp
test
mov
inc
and
xchg
sub
and
mov
pop
jbe
in
call
lahf
addr16
nop
aam
in
cs
or
call
sub
stos
repz
arpl
popa
pop
xlat
pop
xlat
movsb
dec
mov
inc
std
xor
sbbb
sub
xchg
cmpsl
fldcw
jnp
jl
movsl
sti
std
in
sbb
xchg
xchg
adcl
js
sub
std
or
mov
fidivs
xchg
add
cmp
rcrb
or
adc
push
mov
jne
inc
test
mov
xor
adc
adc
dec
popf
push
insl
inc
rorl
mov
push
fldenv
out
mov
mov
cmp
outsb
sbb
and
out
out
mov
std
xchg
fwait
jecxz
or
jg
out
jnp
dec
and
mov
add
pop
inc
mov
loopne
adcl
sbb
je
push
mov
std
cmpsb
pop
mov
pop
inc
add
pop
mov
pop
loop
cld
add
scas
or
pop
test
add
enter
add
inc
add
std
into
adcl
push
inc
mov
in
jecxz
push
andl
and
popf
lcall
sub
mov
test
outsb
jg
aad
add
popa
insl
filds
add
fstps
enter
sbb
insb
inc
add
dec
mov
out
inc
sahf
lea
neg
mov
push
out
mov
mov
sub
mov
cwtl
out
sub
das
fstps
inc
icebp
lods
cmp
in
jb
cmp
or
testl
add
dec
icebp
ret
andb
or
jns
dec
aas
sbb
and
jb
dec
mov
cmp
sub
in
nop
jae
js
xchg
std
mov
fcoms
insb
test
popf
jo
jns
mov
les
adc
mov
dec
push
sbb
pop
inc
fidivs
xchg
loope
mov
jmp
fnstenv
fiadds
mov
sbb
jge
inc
aas
ss
hlt
test
inc
call
cwtl
mov
ret
jb
cmp
mov
add
pop
inc
or
shrl
adc
or
sbb
ret
test
inc
push
push
loope
sub
push
mov
pop
repnz
push
int
jo
dec
stos
pop
lock
xchg
mov
lahf
xchg
add
jo
hlt
xor
rcrl
pop
stos
mov
aaa
dec
and
out
or
stos
cmpsl
outsl
jmp
adc
mov
mov
clc
sbb
outsb
mov
push
mov
leave
dec
inc
nop
dec
xchg
test
sbb
xor
push
sub
sbbb
imul
mov
outsb
pushf
mov
pop
cmp
ljmp
pop
push
lea
or
pxor
dec
out
sahf
out
cli
push
iret
mov
outsb
imulb
sub
adc
fistps
fwait
pop
push
icebp
jo
dec
cmp
mov
add
add
bound
adc
rorb
loop
out
mov
cmp
faddl
push
inc
cs
fnstenv
push
sub
push
adc
out
push
iret
or
in
xchg
out
cld
addr16
dec
jnp
stos
lds
xor
sub
sbb
lock
or
clc
mov
xor
push
and
xlat
push
dec
out
popa
das
sbb
repnz
xor
stos
adc
add
bnd
sbb
sbb
leave
fucomi
imull
fcoml
mov
add
jge
je
sarl
inc
pop
jg
jns
sbb
js
jl
cmp
dec
loop
add
mov
repz
bound
adc
adc
adc
jmp
adc
es
orl
sahf
aam
push
in
mov
out
jns
pop
fs
or
push
or
les
roll
dec
into
ja
cmc
fbstp
aaa
xchg
or
push
mov
xchg
mov
and
dec
mov
lock
mov
test
mov
xchg
mov
lea
addr16
mov
or
hlt
dec
pop
aam
mov
xchg
fcmovnu
xor
ljmp
stc
fnsetpm(287
push
sub
scas
push
or
or
pushf
pop
pop
jne
mov
ja,pn
adc
and
adc
xchg
jmp
std
pop
sub
push
inc
sub
lods
daa
sub
iret
pop
int3
scas
sub
sub
mov
mov
rorb
mov
push
into
stos
mov
icebp
lds
push
cmp
popl
shlb
xchg
add
xor
push
pop
outsb
aam
mov
std
jbe
mov
push
in
xorb
in
lahf
fmuls
cmpsl
sbb
mov
sub
sbb
aad
mov
repz
cli
sbb
aas
test
ret
sahf
jns
cmc
je,pt
jp
popf
lahf
mov
aam
or
pop
or
sbb
adc
push
mov
dec
mov
cwtl
stos
mov
call
dec
dec
int3
or
add
xor
shrb
dec
inc
and
cmp
mov
adc
cmc
inc
fidivrl
sub
mov
repnz
mov
mov
ds
loope
ret
cmp
fidivs
scas
mov
sub
testl
lods
push
loop
and
xor
dec
cmpsl
data16
jns
imul
jecxz
jmp
js
cmpsl
jecxz
pushl
in
nop
sbb
test
cmp
cmp
adc
push
cmp
xor
iret
in
jno
pop
loope
lahf
xchg
ds
mov
outsl
pop
out
mov
adc
into
add
and
mov
push
mov
xor
test
mov
xchg
add
jl
loopne
xor
mov
add
inc
movsb
jo
add
fimull
sbb
ljmp
xor
cwtl
test
cmpsb
leave
or
push
aaa
ret
stc
insb
add
and
pop
les
out
sarl
mov
xorb
jbe
jp
cwtl
pop
pop
cmpsl
push
lea
mov
shl
sbb
fwait
loope
push
rorl
mov
dec
gs
pop
fcompl
mov
xor
out
xor
cltd
sub
dec
ss
insl
jmp
or
cli
insb
popf
dec
daa
out
xor
stc
gs
lods
and
in
outsb
add
mov
cmpsl
insl
dec
jmp
loopne
in
push
add
je
mov
jnp
pop
push
dec
ja
int3
xlat
outsl
aad
push
mov
pushf
pop
dec
mov
stos
mov
xchg
loop
movsb
cs
inc
xor
mull
mov
jo
stos
outsl
shlb
mov
jb
iret
jg
imulb
inc
sbb
imul
cmp
hlt
js
jmp
sub
mov
mov
iret
addl
push
mov
repz
jmp
xchg
mov
jle
jbe
sbb
jge
push
or
fcmovu
add
xor
mov
push
push
add
dec
mov
ja
mov
cmp
scas
push
pop
cmp
lahf
loop
lahf
push
mov
sbb
lahf
jb
mov
test
mov
dec
xchg
and
imul
xchg
sub
shlb
cmpsb
test
loopne
rcl
xor
xor
inc
xor
jo
addr16
push
enter
shrb
push
dec
cs
ss
adc
out
dec
mov
adc
add
mov
movsl
inc
movsl
pop
inc
and
and
jge
jmp
jl
inc
inc
mov
or
push
sbb
pop
jle
pop
aad
je
mov
mov
notl
xor
ror
jno
add
bound
je
cmp
in
iret
mov
iret
mov
xchg
enter
hlt
push
mov
movsb
test
test
sti
pushf
mov
mul
sub
rorb
xchg
cmp
push
adc
inc
jle
or
outsb
insb
mov
mov
inc
sub
cmpsb
mov
mov
or
testl
in
imul
fisttpll
push
or
push
stc
mov
adc
lock
pop
or
jle
popa
in
sub
insl
mov
adc
sti
lcall
push
pop
mov
push
sub
iret
test
cmc
lret
loope
popa
sbb
rclb
jp
int3
loope
fbstp
cmp
outsl
pop
dec
lods
clc
mov
add
dec
push
push
sti
jp
sbb
movsl
rorl
cmpsl
sbb
dec
sarb
and
add
pop
bound
pop
mov
jl
push
popa
addr16
aas
icebp
jae
push
jns
clc
jle
loope
xchg
roll
add
aaa
imul
inc
mov
inc
xchg
repz
fs
dec
dec
xchg
fdivrl
sbbb
sub
xor
inc
cmp
mov
or
add
xchg
in
jmp
push
cwtl
adc
lret
fs
shl
fcompl
scas
je
mov
imul
push
aam
leave
pop
push
push
cmp
leave
fsubl
bound
add
ljmp
mov
out
cmp
call
daa
jns
jo
mov
das
pop
in
mov
std
mov
cmp
jo
les
je
jmp
icebp
mov
dec
out
jmp
mov
sbb
xchg
add
jnp
push
insb
jmp
cmpsl
mov
mov
iret
jnp
mov
imul
and
push
repnz
nop
jp
adc
push
lea
jbe
and
gs
pop
mov
mov
orb
add
pop
cmp
xor
cmpsb
movsl
lret
popa
pop
fsubrl
scas
jne
xchg
sbbb
dec
adcl
in
jb
outsl
aaa
insl
pop
mov
push
mov
cmp
sahf
popa
jo
leave
test
out
test
test
xor
sbb
arpl
cs
xchg
cmpsb
jl
dec
dec
mov
mov
push
add
gs
sbb
sub
test
sub
sub
sub
nop
add
repnz
insl
icebp
stc
and
push
jmp
arpl
pop
fwait
push
and
dec
cmpsl
pop
bound
rclb
adc
mov
fsubl
push
outsb
insl
push
std
jnp
in
sub
sahf
mov
into
xchg
jae
adc
adc
xor
mov
pop
xchg
pop
xor
out
scas
push
rcr
aam
cmp
pushf
sti
inc
pop
out
cwtl
test
push
jmp
fidivrs
push
jo
es
hlt
mov
insb
lock
daa
call
xchg
cwtl
adc
out
xchg
mov
pop
push
dec
mov
and
xchg
sbb
sub
jnp
xchg
pop
les
cmpsl
sub
neg
add
popf
sbb
pop
lret
sub
jae
pop
pop
lods
mov
gs
je
outsl
pop
add
jg
mov
cmc
pop
cltd
iret
je
adc
dec
mov
insb
xchg
cwtl
out
or
scas
sub
cmc
dec
aas
push
cmpsl
jmp
adc
cmp
out
jbe
cmp
adc
ror
or
inc
jnp
stos
fadds
mov
adc
sub
cmp
fucompp
dec
push
sub
mov
mov
xor
mov
sti
sahf
lock
mov
mov
sub
push
sbb
inc
mov
shl
popa
adc
test
and
out
sbb
push
orl
iret
pop
enter
aad
xchg
or
mov
stc
int
xchg
in
or
in
loopne
fnstenv
js
mov
scas
inc
inc
xchg
scas
inc
inc
sbb
dec
jecxz
and
and
add
dec
sub
jmp
stc
iret
mov
fnsave
iret
pop
jecxz
lcall
inc
mov
movsb
ret
push
mov
push
xor
in
mov
or
adc
pop
sub
daa
mov
or
les
and
push
cmpsb
andb
fimuls
loope
jns
lcall
shll
inc
pop
adc
in
mov
dec
aaa
cmpsb
int3
add
popa
xchg
imul
cmp
lahf
lahf
or
hlt
fldcw
push
fidivrs
fmull
popf
shrb
sub
mov
mov
mov
enter
sub
xchg
hlt
cmp
incb
pusha
out
notb
into
pop
dec
rcrl
out
ss
xchg
lea
ret
push
les
mov
in
or
pop
mov
cmpsb
sbb
ror
aas
xor
ret
push
pop
stos
dec
mov
rcrb
outsb
push
pop
mov
icebp
mov
sub
lahf
out
jmp
jnp
cmp
das
call
ljmp
icebp
sub
sbb
sbb
daa
inc
dec
arpl
cmpb
lea
push
dec
pushf
bound
inc
xor
xor
push
cmp
sbb
faddl
adcl
in
push
add
mov
dec
xlat
push
or
ret
imul
aaa
aad
push
ljmp
fs
cld
jo
leave
bound
int3
stos
insl
sub
cli
movsb
jecxz
dec
cmp
or
cmp
push
or
dec
ds
xchg
dec
fistpll
xchg
popf
jbe
sub
xor
pop
lock
push
and
and
inc
in
push
ficoml
lods
cmp
push
push
push
js
push
mov
pop
xchg
mov
sub
test
inc
cmp
jle
or
mov
xchg
enter
imul
add
adc
inc
push
je
mov
pop
sub
mov
popf
outsb
sbb
loop
push
fimuls
in
lock
aam
addb
cmp
int
cmp
fiaddl
xorl
fisttpl
mov
inc
dec
cmpsb
in
movb
or
out
mov
es
mov
out
iret
mov
jmp
ss
pop
or
adc
test
test
cld
pop
cs
filds
mov
xchg
mov
mov
in
fstpl
add
xor
ss
adc
push
insb
xor
mov
or
mov
das
push
sub
call
hlt
inc
jle
add
subb
xor
ret
imul
adcb
xor
mov
inc
out
stos
inc
jmp
dec
dec
push
outsb
mov
insb
movsb
mov
enter
adc
adc
int
push
add
call
stos
jb
cmc
ds
js
ds
xchg
cltd
andb
ss
rcl
imul
lods
cmp
jo
xchg
pop
mov
pushf
movsb
fdivs
mov
add
and
push
pushf
lcall
add
mov
ret
inc
xchg
push
mov
test
out
loope
int
xor
pop
ljmp
scas
scas
sbb
pop
lds
push
and
dec
sbb
xchg
decl
arpl
repz
rcl
xor
dec
insb
adc
jmp
jne
adc
lods
imul
ficomps
cwtl
sub
in
fadd
adc
add
mov
in
lret
add
data16
popa
das
add
adc
incl
ret
add
pop
popa
cwtl
xchg
adc
mov
and
mulb
iret
cltd
mov
gs
or
jne,pt
push
lods
adc
aam
out
push
jmp
push
sbb
sarl
push
scas
jno
xchg
and
add
sarb
mov
adc
pop
ljmp
loope
xor
or
adc
mov
sbb
dec
in
sbb
inc
jg
add
out
cmc
cmpsl
sub
or
lods
xchg
xchg
notb
push
lret
adc
jecxz
jl
pop
subl
outsl
stos
dec
ss
cmc
je
dec
push
aaa
movsl
call
cltd
or
jecxz
mov
into
outsb
outsl
nop
pop
mov
xor
rclb
lods
int
mov
roll
inc
jl
cmp
int3
cmp
mov
adc
jp
gs
adc
mov
insb
push
jl
sub
mov
insl
and
test
fiaddl
jb
mov
and
mov
popf
push
outsb
sub
lahf
mov
test
lahf
outsb
inc
clc
xchg
pushf
cwtl
js
xor
adc
stos
mov
sbb
call
lcall
aaa
fsubr
in
cmp
sahf
xor
add
cmp
xlat
cld
push
push
cmp
aas
aad
call
xchg
xchg
push
mov
fs
lret
jne
leave
xor
xchg
add
popa
or
popa
mov
lods
pop
sub
mov
dec
cltd
jne
int
gs
xor
test
aam
inc
mov
cmp
push
aas
adc
lods
mov
pushf
adc
cmp
sbb
insb
cmpxchg
insb
pop
pop
dec
call
shrl
xchg
repz
jno,pt
push
mov
std
cmpl
xor
pop
xlat
mov
sub
jle
mov
pop
decb
jae
inc
or
inc
adc
ja
sbb
or
pusha
push
xlat
xchg
iret
or
ja
outsb
ljmp
mov
call
aad
pushf
push
xchg
push
es
cmp
sbbb
pop
nop
jl
adc
mov
cld
fidivl
test
and
jo
mov
enter
loopne
add
aad
inc
and
outsb
repnz
jo
ja
adc
cmp
lock
daa
test
js
gs
adc
sbb
mov
scas
lods
gs
adc
scas
cmpsl
orb
dec
loope
push
inc
or
jbe
sub
mov
leave
call
inc
std
fwait
fwait
sbb
dec
sahf
aam
or
pop
cmc
popf
lret
inc
mov
inc
pop
pop
jo
adc
xor
lcall
xchg
mov
dec
int
and
mov
sti
push
es
shlb
xchg
inc
mov
rorb
pop
mov
ljmp
push
test
cmp
push
leave
pop
shlb
mov
popf
iret
out
xchg
jg
sbb
xchg
lcall
pop
xchg
loopne
fistps
pop
mov
inc
mov
lret
and
jg
inc
ret
pushf
xchg
movsb
leave
sub
cld
es
push
lods
xor
dec
add
daa
pop
cli
dec
flds
push
lods
xor
push
dec
rolb
into
jl
dec
jl
in
lcall
xchg
mov
shll
pop
addb
fdivrs
dec
in
cmp
mov
into
pop
mov
mov
and
lret
pusha
mov
dec
mov
hlt
xlat
movsb
cld
test
jl
sub
rcrl
hlt
jmp
das
cmpsl
aaa
ret
push
dec
in
cmc
push
mov
lret
mov
dec
repnz
fisttpll
out
cwtl
pop
jmp
fisttpl
sbb
fsubrs
popf
ss
pop
scas
jbe
add
mov
pop
pop
and
xchg
dec
dec
into
cmp
inc
adc
jl
mov
push
ficoml
push
ss
imull
out
inc
addr16
dec
xchg
pushf
repz
adc
loop
xchg
out
popf
fnstsw
xor
fcompl
iret
idivb
add
and
mov
jnp
adc
lret
mov
adc
push
cld
xchg
adc
nop
jmp
jmp
pop
sbb
loop
push
jge
rcll
bound
pop
or
dec
sbb
testl
xor
sbb
mov
sbb
adcl
lret
sbb
inc
pop
cmc
ret
cmpsl
xchg
mov
in
dec
mov
jmp
dec
lods
icebp
sahf
mov
inc
lods
fmuls
psrlq
je
into
sbb
cvtps2pd
mov
mov
cmc
cmp
pop
outsb
stos
pop
scas
in
in
dec
fidivs
aas
ret
ret
ss
pop
cmp
jmp
ret
ret
mov
sub
cmp
popf
negb
lahf
or
push
popf
mov
test
mov
inc
mov
mov
shrl
sti
popa
mov
lret
pop
sub
sub
enter
lds
stos
lds
push
ret
fsubr
add
jge
jae
mov
insl
sbb
inc
scas
push
push
int3
out
popf
pop
and
and
mov
jb
imul
xor
dec
add
clc
lods
push
fsubs
xchg
mov
negb
inc
sub
adc
push
inc
dec
inc
test
mov
shll
push
push
movsl
lahf
pop
dec
jmp
add
dec
iret
lea
fsubrp
inc
rcl
xchg
imul
sub
jp
lret
movsl
or
insb
cmpsl
mov
lods
mov
int
sub
inc
push
iret
lahf
add
aad
mov
inc
rcrl
sub
imul
fs
jns
repnz
cmp
mov
jle
pextrw
xchg
imul
gs
mov
std
inc
fisttpl
and
push
sub
mov
movsb
in
cmpsl
mov
adc
cmp
pusha
xor
dec
cli
pusha
jp
mov
filds
adc
flds
dec
and
scas
mulb
jmp
add
adc
test
loope
mov
cmpb
add
or
and
stc
dec
out
fsts
test
xchg
adc
push
ret
enter
std
cmpxchg
mov
push
mov
pop
test
icebp
sbb
js
jg
je
scas
hlt
in
dec
insl
jl
iret
add
jne
xchg
push
loop
ret
repnz
and
xchg
outsl
dec
mov
test
dec
popa
cmp
sbb
iret
lock
inc
mov
leave
imul
fwait
repnz
pusha
std
and
test
cmpsb
cli
shrb
xor
arpl
mov
xlat
and
pop
js
test
pop
sub
cmpsl
hlt
stc
sub
xchg
rolb
int
into
aaa
cs
nop
jp
cmp
add
fwait
push
and
and
dec
stos
and
ljmp
es
mov
mov
test
jne
in
sahf
stos
push
push
ret
sub
add
lret
scas
ret
sub
insl
das
and
lds
stos
cmp
xorb
je
lcall
data16
aaa
sub
arpl
addr16
in
add
push
mov
dec
scas
push
adc
cwtl
sbb
vmread
lret
pop
sub
cmp
out
in
ret
mov
ja
cld
push
jle
aas
sbb
or
fidivl
stos
iret
mov
rcrb
out
or
sbb
in
sbb
scas
iret
loopne
push
jbe
mov
popa
std
and
in
icebp
fmul
mov
inc
cwtl
js
orb
mov
pop
xor
mov
xor
sub
ds
ret
lods
sbb
push
mov
mov
pop
push
xchg
cmc
cltd
jle
daa
repz
fs
and
ja
mov
hlt
or
mov
cli
pop
mov
mov
add
shlb
fists
xchg
mov
das
cwtl
jns
mov
cmc
mov
sti
xor
push
pop
jecxz
sahf
dec
mov
iret
xchg
xchg
ror
xchg
icebp
sahf
xchg
push
dec
mov
cmc
lock
jo
into
cmpsb
mov
xor
dec
iret
pop
icebp
or
cmc
in
xor
dec
pop
bound
sub
fcomps
int
pop
dec
pop
dec
enter
dec
xchg
cltd
and
fcoml
xchg
shll
jne
test
pop
cld
push
add
jb
push
fwait
add
push
sub
xchg
cmpsl
inc
je
dec
add
inc
fisttpl
cmp
sub
dec
pop
cmp
cmp
lret
mov
insl
jbe
rorb
xor
push
cli
xor
int
pop
xchg
insb
mov
clc
jbe
inc
lods
push
jne
xchg
mov
call
jmp
push
inc
inc
es
shlb
mov
cmpsl
cmp
repz
loope
ljmp
cmp
mov
adc
popa
rolb
test
daa
inc
rorb
imul
rcrb
outsb
xchg
jno
mov
and
inc
inc
sbb
ds
int
cli
pushf
lcall
mov
and
sub
bound
iret
sbb
adc
js
add
sahf
jno
xchg
and
jle
adc
pop
paddsw
in
pop
lods
inc
mov
negb
ljmp
shrb
xchg
dec
pop
sahf
mov
ficompl
test
shr
dec
jns
push
and
stos
sti
inc
xchg
jecxz
xchg
cwtl
in
push
and
or
jnp
rolb
aaa
pop
fwait
dec
jbe
cmp
insb
icebp
out
add
aad
scas
popf
je
sarl
mov
icebp
push
sbb
mov
xchg
pop
das
arpl
faddl
cwtl
mov
out
dec
out
dec
pop
sbb
nop
adc
mov
sbb
test
jae
xchg
shll
dec
sar
fcompl
jmp
mov
aaa
sub
lods
cmpb
dec
frstor
test
lahf
jge
sub
pusha
lahf
lods
mov
push
mov
jne
jp
orb
or
pop
dec
stos
sbbb
jp
or
pop
icebp
mov
out
cmpsl
dec
jmp
movsl
dec
cwtl
repnz
adc
and
shll
cwtl
pop
sbb
push
pop
minps
mov
xchg
and
test
xchg
pusha
xor
xor
adc
fsubr
xor
sbb
push
jae
jge
lret
scas
mov
lock
dec
jae
mov
pop
mov
faddl
inc
cwtl
push
adc
pop
push
sub
push
add
daa
cmp
add
add
inc
inc
inc
mov
dec
repz
sub
insb
repz
loope
mov
inc
xlat
mov
mov
sub
test
cltd
mov
mov
daa
and
inc
or
out
dec
jl
push
push
mov
mov
fnstcw
test
fcomps
cwtl
cli
cmc
mov
push
aas
mov
flds
mov
cmc
iret
xchg
movsb
lcall
xchg
lcall
or
push
lret
and
xchg
xchg
inc
jmp
pusha
push
pop
mov
cwtl
jl
repz
pop
stos
repz
push
jae
popa
loopne
fcoml
test
bound
push
das
es
xchg
imul
movsl
cwtl
add
push
outsb
xchg
xor
loope
or
js
push
mov
bound
popa
pop
stos
xor
sbbl
lcall
mov
xor
mov
xor
push
pop
adc
mov
psrlq
cld
pop
data16
sbb
insl
jl
movsl
repnz
push
pushf
adc
mov
dec
xor
jnp
mov
fiaddl
xor
daa
fs
in
sub
dec
out
dec
mov
mov
js
pop
orl
std
add
mov
popa
insb
xchg
test
cltd
cld
mov
popf
mov
aam
adc
insl
sbb
sub
push
fldcw
cs
mov
mov
daa
xchg
cwtl
cmpb
sub
mov
outsb
or
ds
lcall
xchg
dec
add
jo
or
pop
scas
fmuls
es
mov
mov
leave
loopne
xchg
fdiv
pop
or
enter
adc
sbb
fcmovne
jg
mov
fists
or
add
add
pop
add
inc
insb
orl
jmp
jle
dec
in
dec
fcom
call
xchg
inc
lcall
call
sbb
lods
loopne
popa
shll
fiadds
and
cmp
popf
in
jbe
jp
test
jecxz
sbb
das
add
xor
xchg
add
lcall
pusha
push
iret
dec
push
cmp
adc
xchg
dec
mov
sbb
es
test
orb
sub
test
aas
fs
insb
add
sbb
mov
data16
js
jge
pop
cltd
test
pop
mov
hlt
movsl
xchg
rol
inc
imul
pusha
lea
ss
call
shll
aaa
loopne
adc
push
pop
lods
or
aas
jge
sub
lea
jg
cmp
sbb
pop
lds
lret
frstor
pop
pop
call
mov
xchg
ja
lods
mov
mov
aad
into
test
cld
cmp
jecxz
add
xchg
insb
push
adc
popf
mov
push
xor
or
mov
xchg
jo
pop
scas
call
cmp
cs
push
lock
and
dec
inc
inc
imul
pop
inc
mov
push
add
lret
jnp
pop
data16
or
fmul
xor
ljmp
mov
pop
lret
cld
cmp
addr16
jo
pop
icebp
mov
popf
sub
mov
out
push
inc
mov
adc
popa
dec
je
mov
jp
mov
cmp
je
out
mov
sarb
adc
fsubr
shl
mov
jge
fildll
testl
or
out
and
adc
and
dec
fcompl
inc
inc
psrld
push
in
int
movsl
sub
cwtl
and
sbb
jbe
or
adc
enter
jbe
aad
fistpl
loope
dec
dec
test
add
repz
in
hlt
jnp
out
jo
dec
cwtl
jmp
mov
cmp
sti
repz
bound
inc
lods
pop
ret
mov
or
mov
scas
in
movsb
pop
xlat
pop
sub
cmp
mov
jmp
pop
jle
cmpsl
cmpl
cmp
xor
cmpsb
pop
aas
aaa
mov
mov
mov
rorb
shll
lret
or
push
mov
add
jmp
jne
mov
xor
stos
das
cmpl
jge
fisubs
push
sub
mov
aad
imul
jecxz
mov
aas
jb
jle
lret
ror
repz
or
fcomps
lock
pushf
dec
shlb
cs
jnp
gs
jae
dec
stos
int
mov
dec
aas
imul
fsubrl
mov
pushf
lcall
bound
sti
testb
aas
sub
not
popa
pop
mov
push
je
das
push
shrb
xor
push
out
jle
add
mov
fildl
outsb
add
jmp
ror
inc
cs
mov
in
cmp
lret
shlb
inc
stos
or
adc
mov
test
jp
outsl
cs
enter
fstps
jmp
xor
fadds
jns
jmp
or
inc
pusha
or
fnstenv
push
dec
and
lds
jmp
xchg
mov
test
jbe
xor
les
adc
fcmovu
add
and
dec
cwtl
xor
add
clc
ret
cmpsl
pop
fstpl
pop
in
pushf
sti
mov
fmul
and
mov
mov
cltd
sbb
mov
rorl
shrb
mov
mov
neg
push
insb
icebp
pop
cmc
mov
mov
jg
pop
adc
cmp
arpl
fldenv
decb
into
cmp
mov
test
rcrb
das
add
pushf
ret
lods
icebp
mov
sub
stos
fsts
icebp
mov
daa
movsb
lcall
mov
mov
push
in
sbb
inc
sahf
repz
fsubrs
das
push
rdtsc
fistl
inc
dec
mov
stc
test
pop
cmpsb
and
icebp
imul
dec
mov
mov
or
movsb
mov
divl
mov
fidivl
dec
dec
mov
jg
jns
adc
and
aaa
mov
pop
and
addl
sahf
aas
jecxz
inc
fisttpll
aad
pop
dec
xlat
mov
push
pop
scas
js
pop
inc
xchg
adc
cmp
scas
xor
inc
popa
sub
xchg
push
xchg
notl
ret
xchg
int
adc
imul
les
add
jg
pop
daa
pop
add
stc
mov
push
repz
sub
iret
pop
jnp
je
and
test
xchg
test
and
adc
sub
pop
outsl
out
testb
add
add
xor
cmp
push
outsl
or
push
incb
icebp
pop
mov
cltd
push
cltd
fwait
lret
stos
imul
pop
jmp
add
mov
add
test
pop
ss
test
add
and
sub
or
jp
les
sbbb
jl,pt
test
cmc
sub
aas
inc
cmp
mov
fdivl
adc
xchg
push
cmp
mov
test
mov
imul
insl
pop
jnp
pop
sbb
or
xorl
or
shl
pop
sbb
pop
and
mov
addl
ljmp
cs
or
mov
xchg
sub
cld
dec
jmp
push
loopne
pop
add
flds
or
out
pop
push
arpl
iret
fldl
mov
mov
mov
sbb
cwtl
idivb
mov
lcall
mov
xor
push
adc
out
jo
or
push
ss
sub
loopne,pn
fwait
pop
pop
pop
ss
mov
rolb
mov
leave
arpl
stos
and
inc
mov
rolb
push
inc
xchg
icebp
fnsave
rorb
mov
pop
sbb
cmp
jnp
stos
pop
mov
xor
pushf
movsb
jg
jne
loope
mov
ljmp
clc
jmp
or
bound
popf
add
jmp
pop
data16
addr16
rcrb
aaa
jae
dec
test
loop
push
mov
mov
testl
sarl
and
stc
and
fisubs
add
fwait
pop
inc
mov
jle
jo
adc
into
dec
into
cwtl
loop
xchg
sub
gs
pop
outsl
mov
mov
jno
add
daa
movsl
jne
cmp
jae
cwtl
outsl
ss
das
andb
cmp
mov
dec
sbb
inc
outsb
lods
mov
sbb
in
jno
repnz
insl
test
push
push
cld
aad
pop
xchg
jl
cmp
mov
nop
fdiv
xlat
pop
lds
stc
cmp
pop
dec
lahf
push
mov
sbbl
xchg
sahf
movsl
aam
pop
dec
and
out
mov
outsl
dec
adc
mov
dec
mov
xchg
and
in
dec
sahf
push
mov
int
and
je
xor
xchg
jnp
and
mov
and
mov
aas
pop
push
stc
mov
bound
jns
push
jecxz
out
add
mov
lods
xor
fnstenv
pop
or
test
in
mov
add
jae
imul
rcr
dec
stos
jno
dec
push
push
ret
or
jns
imul
inc
das
pop
jle
lahf
xchg
jae
enter
xor
stos
or
adc
inc
daa
ljmp
out
push
push
pusha
insl
les
and
shrl
and
dec
cmp
aaa
pop
push
loopne
out
adc
push
push
mov
and
shr
jb
clc
and
mov
int
outsb
fsubrl
fcmovnbe
lret
insb
mov
lcall
pop
adc
pop
and
pop
stc
mov
sbb
loopne
flds
repnz
test
xchg
sarb
jmp
ds
das
sti
xor
dec
mov
into
outsb
lcall
push
test
out
insl
ret
sbb
lret
packssdw
jp
jnp
nop
inc
cmp
jbe
pop
out
sahf
loopne
repz
sub
gs
and
enter
popa
stos
mov
sub
lahf
cs
mov
iret
pushf
ds
movsb
dec
mov
lret
fwait
cmpsl
adc
add
lcall
mov
cmpsl
mov
dec
sbb
mov
sbb
or
push
dec
mov
inc
push
or
cmp
test
sbb
sti
jg
jno
jnp
pop
xchg
add
repz
in
loop
cwtl
aas
shr
repz
add
outsb
into
sbb
pop
or
xchg
jb
push
sbb
or
cmp
adc
push
xchg
xchg
addl
mov
cmp
ja
cmp
jle
inc
std
mov
xor
jmp
ds
aas
leave
pop
mov
js
push
pop
and
cmp
das
mov
mull
adc
stos
sub
lea
mulps
rcr
bound
add
xorl
sahf
xchg
jnp
pop
sub
jg
les
insb
adc
ja
aam
stc
sub
mov
rclb
cmp
icebp
fcoml
leave
mov
mov
int3
inc
fdivrl
xor
add
mov
xchg
sub
xchg
test
cld
lcall
pusha
mov
mov
fcoms
rorl
lret
xor
mov
mov
jae
pop
mov
sub
mov
mov
fcmovb
push
sbb
mov
xchg
xchg
aaa
jmp
xchg
aad
mov
mov
faddl
add
sub
lock
sti
scas
xor
sbb
sbb
or
cmp
pop
adc
fildl
cmp
mov
mov
repnz
or
int
add
out
je
div
mov
pop
add
lcall
sub
mov
test
cmc
push
inc
int3
dec
hlt
jbe
pop
sbb
scas
jo
movsl
push
in
fnstcw
mov
push
mov
fwait
repz
add
jmp
add
movsl
and
andl
mov
iret
loopne
lds
ret
adc
bound
addr16
jno
out
fisubl
lret
fcmovnb
imul
mov
ficoml
jae
repz
or
push
sub
mov
mov
fsubrs
or
jns
mov
es
lea
cli
fdecstp
xchg
stos
sub
fisubl
push
in
xchg
push
xchg
mov
aad
aam
aas
notl
rcl
dec
fidivl
dec
push
xchg
stc
rcrl
cmpsb
xchg
dec
xchg
adc
or
repz
xor
shrl
mov
push
pushf
clc
push
add
scas
push
testb
out
push
add
inc
loope
popa
inc
xchg
ds
cmp
hlt
adc
mov
mov
mov
jo
test
sarb
andb
popa
mov
sbb
jns
sbb
mov
xchg
cmp
jg
pop
loope
xchg
sbb
fs
cmpsl
adcl
test
lds
cmp
dec
ljmp
or
add
or
pop
sub
aad
adc
mov
sbb
cmc
fldl
pop
pop
das
lret
mov
push
mov
cmpsb
test
out
aaa
data16
jle
inc
fwait
push
scas
in
pop
stos
movb
out
jmp
jecxz
lret
sub
fstpl
and
jae
mov
imul
push
cli
pop
insl
mov
repz
pushf
rcl
mov
sub
jecxz
daa
dec
adc
icebp
xor
push
fidivs
ds
cmpl
and
jne
pushl
in
cmpsb
ficoms
cmc
in
add
or
adc
adc
cltd
iret
into
mov
clc
and
sub
add
inc
out
ja
cmp
sub
xor
adc
sar
mov
aaa
das
jns
iret
popa
mov
inc
mov
daa
arpl
popf
add
jno
cmpsl
xor
in
test
mov
shll
push
cmp
or
addl
jmp
lahf
mov
and
jp
enter
mov
cld
stos
outsb
and
or
int
bndcl
dec
sbb
pop
cs
out
aaa
and
nop
out
mov
jmp
iret
xchg
fistps
xchg
mulb
outsl
jne
mov
pop
sub
or
sar
lret
fwait
jnp
mov
mov
stos
pop
orb
dec
outsl
in
lock
fistpll
or
bound
rcrl
pop
ret
xchg
aas
push
cld
sarb
xchg
sub
out
push
and
les
push
mov
stc
ret
repnz
in
lock
mov
push
into
lea
stos
lahf
lahf
inc
inc
add
and
xorl
andl
sub
mov
push
push
mov
adc
sub
or
adcl
pop
xlat
stos
push
inc
mov
hlt
or
cmp
popa
adc
fstl
je
adc
pop
xchg
mov
mov
shlb
or
jno
and
push
mov
push
cmpsb
pop
lret
daa
jae
rcrl
adc
add
dec
xor
fldenv
mov
and
test
dec
sub
add
push
lcall
stc
add
bound
mov
push
or
sub
arpl
in
notl
adc
sbb
inc
ljmp
fidivrl
xchg
into
pop
clc
iret
push
lcall
shl
cmpsb
adc
in
mov
mov
ret
xor
sub
cmp
push
mov
and
adcl
rclb
push
fwait
mov
cmc
xor
mov
stc
pushf
clc
lret
es
cld
jle
jae
adc
mov
inc
jno
pop
adc
fwait
jno
lret
insl
lds
dec
out
movsb
cmpsl
xor
ds
and
aad
outsl
aaa
cmp
fldl
jae
data16
cmp
cld
xchg
push
push
cmp
pop
sbb
aas
jmp
imul
rol
iret
lds
jno
jmp
adc
push
dec
stos
cwtl
movsl
pop
push
push
or
test
xchg
cwtl
fisttpl
dec
push
pop
dec
out
mov
mov
popf
xor
cmp
loop
push
sti
ret
int3
xchg
sub
mov
cmc
sub
outsb
aas
js
lahf
sub
pusha
inc
fsubl
pop
mov
mov
lahf
int
push
pop
push
dec
popf
pop
push
cmpb
mov
jnp
dec
and
mov
ljmp
push
int
add
rcrl
jae
test
xor
imul
hlt
sbb
xor
cmp
out
mov
add
mov
add
pop
xchg
cwtl
mov
and
int3
leave
int3
jp
mov
mov
sahf
dec
out
ret
sub
js
enter
xchg
and
jnp
xchg
arpl
xchg
cmp
outsl
lods
xchg
mov
ds
mov
dec
cltd
ss
jmp
mov
jae
clc
dec
or
jbe
sbb
mov
aaa
jbe
cwtl
cli
sbb
xor
xchg
lods
and
cmpsl
jmp
add
inc
sub
mov
test
iret
aas
push
jne
sub
test
sub
fiaddl
mov
test
scas
pop
or
arpl
lock
lcall
sbb
out
jo
adc
sub
paddd
mov
aaa
mov
sub
add
popf
cld
xchg
ss
sbb
jbe
push
ret
cmpsb
adc
and
xchg
loope
jne
out
mov
pop
add
pop
xchg
mov
xchg
ljmp
jae
addr16
test
lods
pop
push
pop
scas
jmp
movb
in
pop
dec
mulb
jmp
mov
jmp
scas
jbe
in
cmp
mov
push
orb
push
out
orb
cmp
pop
mov
jmp
push
or
fisttpl
jnp
imul
mov
popf
add
push
test
andb
pop
iret
mov
cmp
gs
stc
push
idivl
push
das
outsb
es
stos
out
and
add
xchg
outsl
fldcw
add
movsb
loopne
ja
sbb
clc
fmuls
jbe
jno
mov
out
out
cmc
sub
mov
popa
cltd
out
jl
es
jmp
ljmp
jle
mov
cwtl
in
inc
repz
and
sahf
push
mov
pop
arpl
adc
mov
sbb
rorl
xchg
sub
inc
lea
or
ret
outsb
lahf
mov
repnz
mov
xorb
dec
cmpsl
adc
enter
stos
int3
sarb
adc
or
out
in
cltd
mov
cmc
sub
and
pop
mov
aam
mov
xchg
lods
jecxz
fisttpl
cwtl
jmp
xlat
sub
push
mov
sbb
das
nop
or
and
dec
inc
mov
adc
pusha
into
mov
out
cld
jns
popf
sbb
push
dec
adc
rol
idiv
pushf
aad
dec
test
add
mov
loop
sbb
cwtl
pop
roll
iret
sbb
mov
mov
aaa
inc
cmp
cmp
mov
mov
icebp
popf
idivl
aas
push
cmp
dec
dec
cmpsb
or
and
int3
and
fstpl
xor
nop
cltd
push
pop
lea
fdivrs
sbb
fwait
cmc
mov
stc
hlt
addr16
mov
lea
mov
mov
jnp
or
int3
xchg
cmp
mov
jne
jp,pt
sub
dec
loope
stc
mov
and
mov
aad
add
sti
repnz
repnz
dec
push
mov
mov
pop
mov
into
mov
arpl
add
and
mov
cmp
outsl
mov
scas
add
jge
mov
jge
in
mov
int
lods
inc
push
icebp
mov
mov
cld
and
shll
int
adc
mov
aad
and
insb
es
testb
xchg
cmpsb
push
fistpll
push
mov
cmp
dec
movsl
adc
adc
sbbb
pop
cmp
cmp
mov
mov
inc
push
sub
leave
mov
push
insb
imul
dec
jmp
data16
js
fwait
iret
cmp
xlat
mov
push
loope
es
lret
mov
xchg
rclb
fisubl
mul
movsb
pusha
dec
sysenter
sahf
pop
jp
lret
mov
stc
mov
sti
divb
push
loopne
push
and
mov
out
mov
or
das
push
test
lock
scas
lods
sbb
loope
xchg
push
mov
cmp
sbb
mov
lcall
js
mov
mov
imull
inc
sbb
iret
xlat
outsl
sbb
sbb
subb
fwait
addr16
stc
xor
xor
adc
test
dec
es
lahf
gs
xlat
mov
jge
mov
cmp
stc
mov
rcr
ja
push
dec
push
push
cli
loop
aad
mov
sub
pop
or
push
outsl
pop
mov
dec
cltd
test
test
cmp
rol
jecxz
test
pop
sub
divb
add
dec
and
enter
mov
lock
pop
imul
or
mov
sbb
mov
sub
sbb
jmp
add
and
aad
mov
xor
mov
and
or
xchg
pop
in
adc
mov
jns
push
adc
fists
or
scas
mov
mov
push
xchg
xchg
scas
shrb
sub
imul
fdivs
xchg
jecxz
fsub
mov
into
cld
mov
in
inc
push
rorl
add
gs
xchg
movsb
inc
mov
icebp
lret
or
adc
cmp
add
mov
sub
subl
mov
les
mov
push
ret
cs
pushf
cmpb
dec
xchg
mov
xchg
jno
es
test
rorb
icebp
gs
jg
mov
lock
mov
jnp
jmp
xchg
mov
xchg
movsl
lods
lds
add
dec
insl
push
sub
pop
cs
out
inc
loop
and
jne
mov
sub
sbb
cmp
mov
dec
into
lret
mov
mov
and
inc
out
das
push
ret
fbld
mov
sbb
in
jl
out
or
xor
xchg
jne
and
das
sbb
jmp
mov
stc
fstpl
and
or
or
jnp
xor
mov
jae
clc
sbb
mov
rolb
aas
jmp
mov
mov
mov
imul
or
mov
dec
sarl
dec
popa
aad
and
cmp
icebp
aad
mov
ds
adc
xor
insl
and
insl
dec
push
scas
imulb
out
popa
aaa
addr16
and
dec
out
mov
nop
pusha
js
push
push
rolb
sbb
jb
pop
mov
mov
mov
pop
clc
cmp
push
imul
fdivrl
cwtl
xor
fisubrl
mov
jle
shl
sti
and
insl
jb
xchg
adc
push
mov
xchg
in
push
or
rcrl
mov
xlat
out
dec
in
movsb
imul
jg
mov
push
loope
mov
mov
loopne
push
mov
mov
addr16
inc
lcall
push
js
dec
js
jmp
nop
es
es
pop
xchg
lods
xchg
jl
sbb
mov
imul
jb
test
leave
adc
pop
popa
fsubrl
xchg
jl
mov
inc
pop
add
in
pop
push
xchg
subl
in
mov
ficoml
call
push
inc
out
mul
push
pop
add
loope
arpl
cmpsb
fcmovb
dec
int3
xchg
xor
adc
add
aad
push
enter
rcr
out
inc
inc
xchg
loop
xchg
popf
out
inc
test
dec
xchg
lods
xchg
or
pop
mov
jp
jo
mov
mov
or
fcomip
enter
arpl
clc
and
push
xor
push
insl
dec
outsl
insb
jbe
mov
push
xchg
pop
mov
insb
jp
test
xor
daa
or
inc
fs
sbb
enter
mov
mov
xchg
mov
addl
push
subl
xchg
jne
dec
cwtl
iret
lods
cmp
cmp
ret
jg
aad
fcom
loopne
pop
xor
fs
xlat
movsb
scas
sbb
int
lods
add
cli
inc
mov
mov
dec
or
adc
and
imul
ret
pop
cwtl
push
push
pop
pop
les
pop
jnp
jmp
mov
repz
bound
sbb
pop
mov
pop
imul
fwait
cmp
test
dec
imul
ljmp
or
cwtl
push
jbe
neg
pop
xor
lret
push
outsb
and
insb
dec
insl
inc
mov
pop
jp
out
jns
sbb
lret
repz
mov
xor
pop
cs
xor
push
jle,pn
ja
push
xor
mov
fisubrs
xchg
or
es
sbbl
pop
insb
sahf
dec
sarb
lock
je
ja
rcl
std
pop
rcrl
ret
xor
push
pop
ja
pop
mov
push
add
movsl
iret
pop
mov
sbb
push
call
mov
imul
in
jecxz
mov
fcoms
fnstcw
inc
pop
jne
push
push
and
out
pop
js
mov
mov
in
push
or
not
cmc
sub
into
imul
in
repnz
pop
sbb
fdivs
lods
dec
xchg
mov
in
ss
sgdtl
mov
mov
or
test
outsb
mov
lret
add
fistpl
lcall
push
notl
repnz
adc
sub
cmp
mov
fldt
mov
xorb
add
out
pop
sbb
mov
jne
fs
mov
cltd
in
push
es
push
jae
sbb
bound
mov
je
mov
shl
jne
addr16
lret
push
adc
xlat
jb
push
jno
pop
ja
insb
xchg
dec
sahf
cmpsl
lahf
dec
daa
add
mov
sbb
mov
ja
xor
dec
mov
pushf
jge
mov
mov
inc
nop
pop
jl
jo
and
xor
push
mov
or
lea
jl
jns
loopne
add
shlb
stc
test
movsl
popa
mov
sti
dec
stos
add
push
nop
out
mov
movsb
imul
mov
xlat
dec
xchg
xor
mov
dec
cmp
xor
mov
sqrtps
in
mov
sar
je
sub
push
iret
inc
scas
cmpsb
leave
xor
or
or
sbbl
sar
out
lock
mov
sub
loopne
sbb
sbb
sbb
out
in
cltd
cmp
enter
cmpsl
jmp
cmp
sbb
call
push
push
adc
push
pop
and
dec
pandn
shrb
pop
ds
mov
in
pop
and
adc
in
aam
iret
mov
popa
test
mov
mov
dec
sahf
addr16
faddl
sub
ret
mov
dec
std
push
int3
xchg
add
pop
cmp
in
mov
stos
mov
add
mulb
cmp
add
jo
mov
test
les
lcall
enter
into
mov
jg
iret
mov
xchg
mov
sbb
sbb
mov
push
jge
dec
lret
stos
or
pop
pop
push
lds
pushf
adc
into
sbb
xchg
mov
and
jl
mov
xor
mov
pop
jno
movsb
pop
das
jbe
shl
pop
sarl
stos
enter
xor
stos
test
faddp
add
sbb
add
shll
jle
movsl
add
dec
pop
sbb
sub
mov
adc
mov
iret
mov
inc
out
subb
xor
xchg
pop
push
ficompl
cmp
xchg
dec
imul
xchg
addr16
clc
push
mov
pop
and
inc
mulb
cmpsb
shr
push
mov
mov
je
jbe
inc
xchg
cmpsb
bound
std
adc
inc
in
xchg
xor
rcr
aad
xchg
and
imul
mov
ret
mov
in
xchg
push
aas
mov
and
in
test
int
dec
js
fcompl
xor
aad
jge
sahf
xor
jne
ret
std
or
sahf
lods
cmp
cmp
mov
pop
and
pop
sub
pop
shll
inc
push
pop
sub
sahf
arpl
xchg
fisubrl
mov
movsl
xor
roll
add
and
inc
add
lret
int3
mov
ficoml
rcrb
pop
inc
fwait
mov
das
arpl
jbe
int3
int
das
dec
imul
cmc
mov
les
dec
mov
mov
xchg
mov
cmp
mov
movsb
push
lock
ret
inc
jle
mov
pop
xlat
hlt
jmp
movsl
lods
sub
adc
mov
sub
push
mov
out
push
xorl
scas
push
insb
lcall
shll
rcrl
ljmp
or
std
mov
or
shlb
stos
test
daa
scas
mov
mov
mov
lahf
jmp
stos
pop
mov
mov
add
dec
enter
pop
loope
jl
into
js
mov
jecxz
adc
push
inc
dec
adc
push
jbe
lret
or
popf
pop
mov
stc
dec
jno
dec
pop
sti
insl
and
mov
add
sub
mov
push
ja
inc
mov
arpl
sub
fimuls
fwait
sub
cmp
stos
cltd
pop
loop
rcrb
jecxz
and
add
sahf
mov
dec
dec
pusha
pop
popa
stos
fsubrs
xchg
jns
adc
mov
les
test
ljmp
push
lret
adc
adc
or
xlat
gs
push
dec
sbb
mov
mov
lea
xchg
add
and
adc
insl
mov
das
movsb
adc
fmuls
in
push
xchg
in
add
shll
jae
repz
xchg
sub
sub
mov
jns
insb
push
xor
xchg
addr16
ret
mov
movl
jo
mov
sub
jle
lea
fsubl
mov
movsb
xchg
test
xchg
daa
aas
rclb
jmp
pop
out
ja
lret
enter
nop
adc
mov
push
or
mov
mov
jo
mov
push
or
imull
pop
inc
xor
jns
lods
pushf
dec
cmpb
lock
pop
cmp
mov
cld
cmpsl
adc
xor
inc
test
test
jae
in
cmp
sub
cwtl
iret
fdivr
inc
icebp
pop
mov
adc
push
jb,pt
bound
dec
scas
or
ja
pop
outsl
add
and
subb
cwtl
push
inc
sbb
mov
mov
repnz
aam
test
aam
mov
das
sub
das
aas
inc
es
movsb
mov
hlt
xchg
xchg
cmp
push
push
repz
dec
scas
jb
push
popf
jl
lcall
loope
push
xor
push
loop
or
pop
mov
adc
dec
mov
cmpb
lcall
cli
xor
push
pop
xchg
xchg
into
mov
int3
out
into
mov
pop
cmp
or
and
loope
lahf
sub
or
in
pop
scas
add
out
add
xor
xchg
lret
cmp
adc
iret
adc
sbb
push
out
cmpsb
mov
pusha
daa
jg
push
jb
and
insl
add
cwtl
sub
js
aas
jle
sub
xor
xchg
sbb
lds
into
loope
imul
arpl
jnp
push
sub
mov
clc
dec
fcmovnu
insb
push
mov
pop
lret
mov
sub
sar
dec
arpl
popf
scas
pusha
ds
pushf
out
cmc
ret
add
sti
lods
or
push
adc
jne
notl
js
popa
dec
mov
jbe
add
repnz
dec
fists
push
into
rorl
cmp
adc
sbb
adc
clc
jne
inc
xchg
test
arpl
in
pusha
xchg
pop
jl
outsl
xlat
test
cld
mov
add
push
lods
or
pop
outsl
dec
test
fs
jmp
mov
shll
mov
mov
add
lcall
adc
fadds
movsl
icebp
lds
aam
fstp
outsl
mov
jb
jns
jmp
fidivl
fisubrl
hlt
mov
imul
ljmp
push
int3
arpl
sub
icebp
daa
jecxz
clc
icebp
scas
pushf
fistpll
xor
sbb
shll
adc
cmp
rcrb
addr16
mov
mov
in
enter
push
int
das
add
int3
or
lret
outsb
repnz
mov
insb
fwait
mov
sbbb
fdivrp
cwtl
adc
imul
jmp
adc
pop
adc
idivl
loop
pop
pop
mov
rcl
out
inc
repnz
mov
ss
or
mov
iret
loopne
outsl
les
repnz
xor
out
jbe
adc
mov
pop
dec
in
mov
out
jecxz
shrb
sub
inc
mov
cs
iret
push
into
out
stos
ret
mov
jg
gs
ja
mov
roll
popf
shrl
mov
add
mov
adc
movsl
in
xchg
dec
jbe
xorb
cld
jns
fwait
jnp
dec
mov
ja
imul
add
ja
nop
lcall
cli
stos
es
stos
sub
mov
in
sub
mov
in
or
aas
sbb
hlt
enter
inc
test
or
int3
enter
in
add
rol
in
mov
adc
icebp
pop
insb
mov
cmp
loopne
push
andb
ja
pusha
mov
jne
les
pop
leave
fwait
adcl
sarb
and
or
push
js
popf
and
adc
outsb
or
push
shrl
fsubr
ret
les
xchg
test
xlat
sub
lahf
cs
sub
mov
fldcw
addr16
out
call
repnz
lods
jb
pop
pop
scas
sub
adc
push
dec
push
inc
test
sbb
jle
jne
jle
adc
icebp
jl
sbb
movsl
adc
inc
cs
mov
mov
inc
adc
out
mov
mov
subl
add
adc
movsl
xor
xchg
xor
popf
les
lock
lahf
mov
ror
bound
in
cmpsb
popa
xchg
dec
or
sub
lcall
adc
or
xchg
or
decl
pop
test
cmp
xor
cmp
into
push
inc
movsl
movsb
pop
xchg
iret
pop
inc
pusha
aam
fsubrl
data16
cli
fistps
cmpsb
addb
mov
jo
int
fisubrs
insb
mov
sbb
popa
mov
adc
xlat
jmp
push
popf
in
in
shll
or
aas
push
jmp
loop
mov
shr
aad
or
mov
enter
and
ret
jle
or
and
ficoml
pushf
rcll
and
adc
data16
cmpsb
repnz
pushf
ja
je
out
aaa
pop
subb
sarb
adc
jmp
mov
xchg
shll
cmp
cmp
cmc
xorb
out
mov
cld
imul
stos
lods
mov
insl
lcall
insb
in
je
lret
xor
outsb
repz
stos
leave
test
pop
fimull
into
mov
ss
mov
ret
or
cmp
insb
dec
mov
mov
daa
lds
bound
stc
sub
popf
cmp
lods
ret
insl
mov
fs
jnp
std
aam
mov
sub
cmpsl
dec
and
scas
out
into
sbb
jg
loope
adc
sti
ss
xor
dec
rcrb
std
mov
mov
insb
out
xchg
cmp
cmp
cwtl
xor
mov
hlt
or
jmp
push
ja
aam
and
push
add
stc
fildl
addr16
int3
ss
mov
cmc
jg
lea
lock
es
iret
cltd
pop
test
jno
jle
or
or
stos
popf
jo
ds
in
nopl
add
test
sbb
pop
call
push
stc
fcompl
pop
ja
sub
addb
sub
int3
lret
mov
test
pop
sbb
shlb
inc
inc
xchg
mov
sbb
aam
mov
mov
mov
js
pusha
mov
push
bound
or
push
mov
xchg
sbb
adc
xor
sahf
jnp
add
or
addr16
dec
sub
mov
outsb
inc
xchg
test
andb
inc
lret
in
add
xor
aam
inc
andl
mov
mov
lea
pop
adc
ficompl
jb
mov
xor
xchg
roll
int3
or
dec
xor
push
insb
adc
repnz
rorl
pop
sbb
imul
arpl
pop
insb
jnp
ljmp
hlt
filds
mov
jecxz
test
push
jg
xchg
sbb
and
es
lods
int3
jo
shl
push
mov
inc
leave
add
hlt
add
mov
lock
xor
ds
faddl
loop
into
pop
jge
setge
pushf
jnp
or
xlat
out
jno
mov
outsl
sbb
xchg
sbbl
inc
int3
dec
sbb
cmp
xor
outsl
fwait
cmp
cwtl
popf
dec
pushf
sbb
inc
in
and
push
repz
push
cmpsb
stos
les
or
pop
and
aaa
loope
cltd
daa
add
push
out
fs
cmpsb
ja
sti
lods
xor
in
movsb
orb
pop
ret
cld
pop
inc
inc
add
cmc
xor
pop
nop
sub
push
test
adc
pop
leave
add
rcl
outsl
lds
out
repnz
lret
jmp
push
inc
mov
es
testb
adc
adc
inc
push
adc
adc
adc
cs
std
dec
mov
jns
cli
pop
lods
sbb
fcoml
jl
std
dec
push
cmp
inc
push
jbe
insb
sar
data16
imul
mov
cmp
adc
and
push
popa
stos
mov
or
sbb
sbb
pushf
dec
in
add
add
jl
pop
enter
imul
dec
dec
stos
sub
test
pop
les
pop
sub
je
and
ret
les
lahf
scas
mov
inc
jbe
push
push
xchg
push
dec
int3
rclb
cmpsb
out
adc
jp
jecxz
cmc
push
adc
andl
movsl
xor
andl
inc
adc
and
mov
cs
fnstcw
add
clc
cs
inc
dec
lock
xor
adc
aaa
fnstsw
les
dec
dec
loopne
inc
mov
pop
decl
jge
mov
mov
addr16
icebp
rcll
fstp
push
cmp
jecxz
xlat
test
xor
mov
js
movsb
ljmp
in
mov
sar
scas
enter
cmpsl
jl
sbbb
movsb
sbb
ljmp
icebp
test
push
push
repnz
jne
cmp
shl
daa
xorb
ljmp
std
mov
jmp
lret
cs
call
pop
or
cwtl
push
xchg
aam
add
rclb
mov
xchg
das
and
jl
and
in
jae
sbb
mov
xlat
out
dec
mov
ljmp
imul
xor
cli
mulb
aas
mov
movsl
or
jae
int3
sbb
add
cwtl
xor
mov
mov
mov
inc
push
sub
shlb
aas
mov
adc
push
in
popa
inc
loope
jno
and
lds
xchg
mov
jno
ds
lahf
sbb
stos
jecxz
sub
add
lods
ljmp
mov
jmp
cwtl
mov
movsl
in
lock
xchg
lods
inc
lret
cmp
add
clc
out
xor
xchg
mov
dec
sbb
std
dec
in
dec
notb
je
push
jns
movsb
sub
daa
cmp
adc
rorb
jmp
pop
inc
repnz
mov
mov
fcomi
stc
or
inc
xor
lcall
pop
call
sbb
mov
inc
imul
mov
aas
fnstenv
fimull
mov
xor
sti
scas
mov
xchg
jns
or
inc
ljmp
sub
dec
stos
cmpsb
adc
lods
and
add
xchg
xor
into
xchg
aad
neg
pop
inc
addr16
jmp
jbe
cwtl
pop
lahf
xchg
fmuls
add
daa
push
mov
mov
les
ljmp
js
pop
iret
add
push
xor
ja
push
shl
push
add
mov
mov
xchg
lea
cwtl
cmp
mov
jle
in
cmc
push
pop
mov
push
arpl
movsb
cs
lock
mov
xchg
mov
stc
pusha
mov
in
jmp
adc
pop
icebp
loope
cmpsl
cmp
call
mov
and
shlb
mov
add
pop
js
call
dec
pop
add
sub
scas
mov
cmp
arpl
adcb
hlt
lods
pop
mov
mov
cmp
adc
insb
or
xchg
divb
imul
sub
pop
int3
addb
pop
cmp
push
and
shll
push
popf
and
cld
adc
xchg
cmp
icebp
iret
add
mov
xchg
ljmp
ljmp
xor
loope
rep
mov
pop
xchg
loopne
stos
sti
adc
stos
add
jp
fcompl
xchg
fisttps
js
xchg
inc
daa
jo
repnz
inc
je
fwait
popl
xchg
xchg
pushf
jmp
and
iret
and
xchg
push
test
lods
rcrb
aas
repz
adcb
push
sub
aad
lahf
and
mov
xor
dec
bound
jo
fsub
sahf
repz
bound
or
adc
xor
push
and
aas
pop
stos
ftst
stos
cmpsb
jae
sub
jb
xor
xchg
rcll
sahf
sahf
jnp
or
xchg
mov
cs
bound
pop
aas
adc
fidivrl
enter
pop
aaa
jmp
ljmp
xor
mov
adcl
cmc
imul
push
out
and
imul
pop
in
or
sbb
inc
or
int
jns
fs
jmp
cld
negb
sub
fisubrs
das
cld
mov
rol
dec
ljmp
fiadds
lods
repnz
lret
shlb
adc
imul
jmp
iret
ret
dec
mov
inc
and
nop
mov
icebp
add
mov
mov
cmpl
in
test
xchg
mov
fs
dec
inc
ja
hlt
fldt
dec
sub
sbb
pop
and
jns
sub
fimull
mov
push
ficomps
sub
in
and
lds
jge
addr16
xor
push
push
int
filds
dec
jae
or
scas
in
pushf
fstpt
icebp
test
or
push
int3
mov
xchg
ss
add
xchg
ret
pop
je
inc
addl
pop
repnz
rcll
cmp
leave
ljmp
cmp
mov
sub
cwtl
je
lcall
pop
fisttps
xor
push
pop
sbb
insl
mov
inc
mov
adc
sahf
push
add
jge
fcoms
xor
push
hlt
and
adc
shlb
pop
scas
jno
push
inc
add
push
gs
xchg
out
iret
and
sahf
xor
inc
call
iret
pop
cmp
mov
xchg
sub
sbb
mov
cmpl
mov
int
jp
aad
pop
dec
loop
inc
add
add
pop
stos
cmp
in
xor
gs
movsl
fildl
xor
loope
push
insl
adc
scas
scas
scas
jp
adcb
push
mov
in
jae
mov
test
mov
aaa
mov
add
mov
xchg
lcall
xchg
popa
sbb
add
subb
xchg
daa
jmp
stc
push
jge
test
lds
aam
jb
sbb
add
push
fldl
or
div
and
outsb
mov
addb
or
jmp
dec
xor
filds
addb
dec
xchg
jge
movsb
int3
cmp
scas
xor
push
popf
cmp
shll
lds
mov
mov
mov
daa
mov
adc
mov
mov
dec
pop
sub
outsl
inc
pop
jl
and
arpl
cmp
scas
fists
out
xchg
add
sbb
in
and
jb
pop
js
rcl
push
ss
jb
xchg
loopne
fidivl
pmaxsw
inc
out
lea
cmpsl
cld
xchg
inc
xchg
add
jns
mov
push
insb
sub
mov
and
cmp
inc
xlat
adc
cmp
lds
not
lcall
cld
mov
shr
mov
xor
aad
je
dec
inc
sbbb
or
xchg
mov
es
adc
stos
jbe
and
jbe
push
add
ljmp
inc
ss
popf
cmp
add
sbb
lods
in
mov
repz
cs
cmp
dec
xor
loope
pop
mov
test
mov
in
and
es
into
cs
xor
or
adc
repnz
mov
sub
pushf
jne
aad
stos
xchg
sarl
and
lret
iret
outsb
ret
leave
ret
xor
and
xor
sub
or
xor
or
mov
add
int
mov
add
arpl
cltd
call
hlt
inc
movsl
lock
aas
xor
out
mov
mov
mov
aas
mov
jmp
xor
cmp
es
lahf
mov
andl
out
push
sub
fidivl
mov
loopne
shlb
cmp
out
dec
adc
xor
push
xor
cmpsb
std
adc
mov
adc
or
test
out
test
mov
dec
pop
mov
pop
scas
insl
xchg
mov
push
scas
and
lock
push
pop
mov
inc
lret
xchg
mov
cli
push
xor
jne
sub
adc
lea
sub
dec
adc
mov
pop
adc
or
mov
lahf
sbb
int3
push
add
leave
movl
add
shll
addr16
into
xchg
or
sarl
loop
rolb
jnp
sub
mov
mov
rcrl
xchg
cwtl
pop
packssdw
and
sbb
xor
ret
out
rcl
adc
sub
jns
fcomp
add
push
outsl
mov
aad
outsb
sbb
sbb
adc
or
and
in
outsb
push
jnp
jge
mov
mov
fwait
mov
fsubr
scas
cmpsl
mov
mov
jns
ret
pop
mov
dec
mov
adc
ds
push
in
cmp
jae
test
push
test
dec
push
mov
jnp
adc
test
cli
stos
jmp
jmp
ss
sub
std
inc
push
xchg
sbb
xchg
pop
fstps
jne,pt
dec
xchg
push
and
js
test
inc
jno
aas
iret
and
inc
int3
stos
add
cli
ds
int
pop
clc
jle
fcmovnbe
popf
xchg
icebp
mov
adc
mov
mov
arpl
testl
mov
add
les
sub
mov
sbb
mov
mov
cmc
pop
lds
test
push
xor
fcompl
sbb
fisttps
sbb
sub
mov
jo
sbb
mov
and
insb
xchg
jp
mov
sahf
adc
in
sub
js
scas
xlat
test
add
xlat
addl
cmpb
sti
cmpsl
inc
sbb
mov
adc
adc
and
cltd
pop
lods
push
mov
dec
jae
jp
call
movsl
pusha
jb
xchg
and
into
outsl
mov
test
les
inc
popf
mov
lret
sahf
iret
sub
insb
pushf
int
icebp
cmp
cmp
gs
push
xor
mov
addr16
rcl
rorl
in
dec
lcall
mov
push
mov
inc
jmp
mov
lret
xor
add
dec
push
out
inc
leave
add
adcb
mov
jp
in
mov
sub
pop
iret
outsb
loopne
cmc
imul
jnp
fsubl
lods
push
out
jp
xchg
jns
out
jnp
loopne
pushf
sbb
int3
jecxz
and
imulb
and
jecxz
rolb
arpl
cmpsl
mov
cmp
jno
jno
add
mov
sbb
lret
pop
imul
out
push
loope
cmp
cmp
ret
lea
out
xchg
push
and
fcoms
sub
mov
mov
xor
lcall
cmp
cmpsb
ss
dec
cs
enter
repz
aad
and
movsb
xchg
or
cmpsb
cld
push
inc
insl
out
dec
int3
mov
aaa
jbe
lret
cwtl
push
arpl
dec
mov
fisttpl
mov
ret
clc
push
add
das
shl
sbb
mov
idiv
fisubs
je
mov
jns
sbb
cld
jno
xor
sbbl
lret
jno
bnd
stos
cmc
inc
ret
mov
mov
sub
arpl
dec
dec
subb
outsb
and
pop
sub
or
sbb
mov
mov
roll
xchg
int
pop
sbb
mov
aas
gs
mov
jne
jle
adc
add
xor
xor
jae
add
mov
mov
ret
mov
leave
jbe
sbb
sub
mov
test
mov
bsf
mov
movsb
aad
fxch
and
ja
ss
push
es
lret
push
mov
test
idivb
fbld
inc
adc
leave
scas
mov
xchg
neg
imul
cmp
lock
shlb
stos
push
pop
sub
pop
fstpl
sbb
fs
adc
leave
xor
jne
push
jle
add
mov
bound
fidivl
mov
fcoml
rolb
fwait
stc
adc
mov
xchg
int
xchg
rcll
fwait
inc
or
mov
mov
outsb
push
push
dec
jmp
in
xor
ret
jmp
std
dec
adc
repnz
sbb
push
jecxz
into
sbb
not
std
or
cmp
push
cmpsb
pusha
aad
lds
sbb
jg
mov
dec
xchg
ficompl
out
sbb
call
hlt
xchg
sbb
inc
jb
cmp
and
pop
jno
les
les
pop
es
movhps
lock
sub
int
rcr
ret
aaa
cltd
xor
in
aaa
in
pop
mov
call
dec
out
cmp
cwtl
xchg
nop
inc
sbb
std
lods
dec
add
lret
fwait
cmp
add
inc
add
jmp
divl
add
pop
or
mov
ljmp
gs
cmpsl
and
or
jns
iret
out
movsb
scas
mov
adc
into
ret
call
sub
adc
out
cld
gs
sub
mov
rolb
movsb
mov
fsubl
jecxz
mov
mov
sarl
fs
out
xor
xor
clc
outsl
mov
in
idivl
cmpl
cmp
push
insb
jb
les
inc
jg
cmc
sub
dec
stos
inc
rolb
addr16
cmpsl
dec
aaa
pop
jg,pt
sub
mov
push
imul
cltd
fstp
cmp
incb
cmp
aam
mov
xchg
cmpl
aaa
push
aad
or
sahf
repnz
jmp
pushf
cltd
rclb
mov
mov
adc
mov
insb
xchg
stc
xchg
xchg
shlb
jne
cmpsb
sbb
mov
push
sarb
cmovno
rorl
outsb
and
lcall
push
in
mov
dec
lods
lea
jbe
add
ljmp
orb
inc
pop
out
mov
push
int
out
aaa
int3
and
mov
cmp
ret
test
mov
xchg
jge
jb
test
rcrl
push
inc
out
loope
es
push
in
sarl
lds
or
es
adc
fdivr
aam
std
mov
push
mov
in
dec
inc
sarl
pop
cltd
mov
scas
pop
or
mov
push
in
push
popf
and
jo
mov
pop
pop
xchg
xchg
divl
sub
jg
xor
mov
xchg
mov
cmp
mov
inc
bound
jp
push
dec
fnstenv
ss
cmp
push
sbb
in
hlt
out
add
xlat
clc
mov
sub
sbb
push
scas
cs
pop
mov
pop
icebp
sahf
test
xor
jp
ficompl
lret
xor
inc
nop
pop
mov
aaa
popa
mov
sub
inc
fwait
jg
mov
xchg
or
mov
imul
leave
mov
sbb
mov
mov
and
outsl
jae
and
inc
mov
add
pextrw
pop
sahf
pop
xchg
jecxz
sub
jle
mov
loopne
decb
and
jbe
es
into
mov
cmpsl
add
inc
add
push
mov
les
std
xchg
pop
das
shrl
xchg
lea
pop
jne
popf
xchg
xor
mov
or
sub
cmc
ret
mov
mov
sbb
sbb
mov
sub
pop
sbb
xor
mov
sbb
dec
mov
push
push
popa
cltd
stos
dec
sbb
cmp
lret
jecxz
fs
sti
and
out
xchg
inc
sub
mov
jmp
incl
movsb
xchg
lret
sbbb
jge
push
cmp
ret
stos
xchg
pop
jmp
test
jge
movsb
push
sub
adc
ja
shrl
xor
xor
sub
and
sub
pop
push
movsb
popa
in
test
jns
imul
enter
daa
lea
lods
push
fmul
cli
jmp
jecxz
clc
sbb
pusha
mov
cmp
repz
cmc
mov
xor
or
mov
rol
jmp
fistpll
cmpsb
aaa
imul
jo
cmc
enter
mov
loopne
pop
cltd
clc
sub
rcll
push
adc
xchg
test
out
test
add
xor
imul
aaa
test
xlat
push
sub
inc
xchg
leave
rcll
sub
fidivrl
loope
out
dec
mov
push
sbb
push
repnz
ds
sbb
jge
mul
fisubs
push
aas
dec
or
andnps
lods
add
mov
adc
clc
pop
mov
sub
data16
jbe
xchg
lds
push
fbld
jecxz
sub
ret
fdivs
inc
scas
mov
mov
scas
mov
mov
out
icebp
dec
sbb
and
test
notb
loope
xor
lea
and
dec
mov
pop
mov
repnz
das
push
aad
add
mov
sahf
xor
xchg
jns
mov
nop
hlt
mov
iret
imul
lcall
xor
pop
insb
adc
movsb
pop
icebp
shlb
insl
or
insl
xor
mov
outsb
xchg
xchg
mov
xor
lods
aam
addl
adc
lcall
adc
or
jo
call
lea
leave
pushf
cli
mov
ja
addl
popf
pushf
fsincos
lods
shlb
out
testl
insl
sbb
xorb
test
arpl
mov
out
fnstenv
pop
pushf
push
xor
out
pop
mov
xchg
pop
call
xchg
mov
sub
mov
pop
dec
cmp
xchg
mov
fnsave
fnstsw
cmovge
dec
lock
insl
pop
fpatan
add
mov
dec
push
push
mov
jmp
adc
mov
or
inc
pop
sbb
jmp
add
fsubr
repnz
cld
stos
xchg
test
int
add
das
test
nop
in
daa
dec
mov
pop
mov
outsb
push
mov
aas
in
std
xor
jns
out
outsb
mov
pop
scas
cld
into
or
mov
jmp
mov
add
add
push
push
add
cmpsb
jmp
add
insb
rorb
add
add
rorb
add
add
add
rorb
add
add
add
lcall
add
rorb
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
add
add
add
add
sub
popf
stos
pusha
leave
fildll
push
dec
decb
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
ret
sbb
and
or
or
cmc
hlt
sbb
xchg
or
adc
and
sbb
cmpb
insl
or
and
sub
jmp
push
sub
pusha
sbb
push
or
sbb
adc
jl
jo
mov
mov
mov
sbb
inc
js
and
cmp
stos
call
push
sbb
sub
pop
sub
mov
or
seto
add
lock
insb
or
movsb
jbe
add
lea
stos
add
jnp
add
jae
test
adc
testb
and
bnd
inc
sahf
fists
rep
push
pop
add
divl
jb
outsl
add
or
popa
dec
test
int3
push
call
mov
mov
xor
lea
inc
loop
or
jl
loope
mov
jo
lods
cmp
xchg
lret
sub
or
loop
add
push
push
negb
inc
add
nop
mov
or
xor
shlb
and
lret
xchg
lea
mov
xorb
mov
je
push
and
push
xor
cmp
sbb
test
push
pusha
stos
inc
push
aas
push
inc
adc
insl
xchg
or
sbb
test
adc
xor
mov
jne
or
inc
and
pusha
add
add
movb
rolb
daa
xchg
mov
call
cmp
and
push
add
or
fcmovb
test
pop
pop
pop
pop
or
or
cld
stos
call
pop
sub
push
add
push
call
dec
add
inc
sar
scas
sti
rorl
adc
push
aad
mov
cld
inc
stos
pop
xorl
push
ret
in
lods
push
jne
scas
leave
push
dec
dec
scas
push
nop
add
dec
pop
out
cmpsb
rclb
lods
scas
pop
add
jmp
cltd
and
inc
or
call
ficoml
xor
stc
cs
jmp
sbb
mov
movzwl
test
nop
dec
fimull
outsl
ja
js
lock
push
cld
inc
pop
adc
add
cmp
jge
cli
in
add
push
inc
movzbl
add
sub
shll
add
push
enter
sbb
cmp
or
rclb
iret
sbb
dec
les
push
add
xor
inc
jmp
pop
pop
mov
aad
xor
jne
xor
jmp
push
mov
clc
xor
adc
pop
or
and
pop
mov
das
push
pop
mov
push
jb
fucomip
push
push
test
inc
in
push
je
loopne
test
pop
or
jge
dec
or
sar
rep
mov
and
jnp
push
cli
and
adc
movsb
outsl
rcrl
stos
lret
fwait
or
cmp
cmp
sub
ret
jne
mov
mov
add
lock
push
push
xchg
push
movsb
fmull
mov
mov
outsb
dec
sub
xchg
mov
ss
and
leave
nop
int3
jl
pusha
lret
dec
enter
push
hlt
push
dec
or
cwtl
mov
push
push
push
in
rcr
sub
je
inc
adc
adc
mov
in
jmp
pop
sbb
jl
pop
push
stc
jmp
fiaddl
int
inc
sbb
or
sub
dec
pop
scas
push
cmp
fimull
inc
or
aas
dec
shrb
mov
xor
cmp
das
hlt
mov
add
inc
or
lret
test
and
test
push
push
push
push
cmovo
test
adc
lds
pop
orb
adcl
jno
testb
dec
lock
aas
mov
sarb
fwait
ret
inc
inc
test
and
mov
loopne
mov
xor
add
testb
push
dec
data16
inc
push
pop
inc
xchg
dec
pop
test
jmp
jmp
icebp
add
pop
mov
push
inc
sbb
pop
imul
jmp
ljmp
cld
inc
call
divl
sub
mov
loopne
sbb
cwtl
mov
cld
jmp
cmp
in
sbb
push
mov
mov
adc
jl
sbb
daa
inc
jmp
dec
mov
cld
push
pop
add
pop
mov
test
add
mov
inc
adc
sbb
mov
gs
xor
xchg
and
or
ljmp
movsb
and
add
popa
je
outsb
and
popl
ds
push
jo
arpl
and
fildll
jbe
outsb
je
and
jbe
pop
imul
inc
dec
inc
cs
imul
outsb
insb
and
inc
imul
jne
je
sub
sbb
xchg
bnd
cmp
xor
je
push
jnp
inc
outsl
js
ja
leave
test
data16
pop
xor
stos
stos
ja
dec
cltd
sbb
or
add
imul
pop
outsb
xor
repnz
jo
out
adc
out
mov
leave
adc
sbb
lret
inc
mov
pop
arpl
stos
lret
popf
ret
clc
add
and
add
dec
xchg
lds
or
sbb
add
shl
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
or
js
add
aam
add
cli
fisttpl
add
rorb
add
or
add
inc
add
rorb
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
