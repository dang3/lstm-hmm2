arpl
push
ret
pop
sub
sbb
xchg
adc
push
sbb
es
jbe
mov
roll
int3
loop
icebp
sbb
and
push
cli
add
scas
inc
repnz
lret
fimuls
insl
and
sbb
in
adc
inc
sbb
cmp
loop
sbb
xor
add
fldz
in
inc
xchg
mov
xlat
dec
das
rep
push
adc
cmpsl
stc
iret
jge
or
jecxz
fdivrp
ds
inc
sbb
dec
hlt
xchg
lds
std
iret
jnp
adc
scas
aad
repnz
jbe
out
into
dec
push
notb
ret
rorb
xor
mov
push
add
sub
pop
mov
shll
cmpsb
scas
mov
scas
fcoml
aas
pop
enter
mov
lcall
cli
lods
pop
mov
aad
cmp
popa
push
outsb
push
outsb
xchg
mov
fistps
push
add
jp
jno
nop
fsubp
ficoml
das
pushf
and
fisttpl
mov
cs
cmc
fbld
cmpsl
sbb
stc
cs
add
jecxz
jmp
xor
adc
cmc
out
jmp
xor
push
in
jmp
jmp
sbb
sbb
cmc
out
ds
push
repnz
lret
mov
adc
fst
testb
and
sti
adc
iret
ret
mov
sub
idiv
jae
push
pop
mov
cmc
add
lret
mov
testb
das
iret
daa
xor
aad
xchg
push
xor
and
mov
pop
mov
push
add
adc
iret
repnz
cli
addr16
shl
sahf
mov
rorb
out
adc
add
sbbb
test
int3
pusha
arpl
sahf
and
aas
cmp
das
and
adc
jp
sbb
mov
xchg
outsl
jmp
inc
test
cli
cmp
mov
pop
lcall
xor
push
add
call
adcl
test
push
sbb
inc
push
out
xchg
pop
ljmp
inc
aad
cld
mov
adc
push
or
push
pushf
dec
sbb
test
mov
dec
into
outsl
dec
mov
clc
push
mov
fnstcw
add
or
imul
adc
and
loopne
mov
xor
fstl
lcall
push
jne
addb
sub
and
pop
or
fcmovnb
mov
mov
sbb
push
jne
fs
out
imul
fcmove
jl
jp
sbb
es
decl
out
sarl
into
inc
movsl
por
jle
inc
and
outsb
int
xor
and
movsb
and
addr16
push
xchg
bound
orb
push
push
js
jp
loopne
in
inc
or
push
add
mov
inc
out
mov
push
bound
outsl
add
clc
and
lea
aas
loop
mov
loop
push
push
xor
jmp
lock
bnd
jns
aas
inc
add
cmpb
clc
sub
xchg
xor
scas
orb
mov
xor
fstpt
mov
fldl2t
leave
mov
xlat
cld
and
or
fninit
xchg
xchg
cmp
jne
lcall
sbb
repz
push
or
shll
lea
cmp
jne
pop
xor
cmp
out
pop
repz
adc
dec
dec
rcll
xor
loop
add
xor
ljmp
mul
lret
and
test
cld
jmp
notl
pop
push
imul
or
inc
pop
loop
leave
and
sub
cmp
or
and
inc
ds
daa
data16
push
pop
dec
xchg
push
push
dec
fbld
lret
in
mov
jle
push
adc
dec
sbb
ss
sbb
repz
cmc
js
mov
sbb
fisubs
mov
ss
adc
aaa
popa
add
minps
and
jnp
mov
lcall
add
add
and
mov
pop
lock
jb
jecxz
ds
out
inc
int
sub
sub
xor
adc
mov
jle
popf
mov
cmp
sbb
pop
in
dec
icebp
xor
xchg
inc
icebp
cs
sub
inc
imulb
mov
int
xor
mov
push
icebp
jne
push
sbb
out
jge
add
xchg
bound
repnz
dec
popa
sahf
xchg
jne
jmp
xchg
sbb
dec
pop
add
loop
jne
rcrb
out
js
cltd
cs
shll
dec
insb
fxam
dec
rcr
and
mov
push
push
dec
cld
pop
push
jae
push
push
cli
pop
xor
push
data16
in
dec
jecxz
push
sbb
push
sub
push
xchg
push
or
lcall
sahf
pop
insl
or
repz
push
push
jbe
jecxz
push
out
or
popf
fcmovu
fs
dec
addr16
xor
test
sub
movsl
and
xchg
scas
dec
movsl
xor
and
dec
pop
lds
inc
dec
out
pop
imul
pop
inc
inc
jno
sbb
pop
adc
jb,pn
gs
mov
or
jnp
jbe
mov
shrl
dec
data16
imul
xchg
sub
enter
popa
outsb
mov
mov
sbb
push
lcall
add
loope
jno
sahf
xor
ret
inc
pop
push
xchg
repnz
ljmp
popf
out
mov
push
jmp
mov
into
sbb
xchg
inc
mull
mov
in
sbb
dec
pop
and
clc
mov
cltd
mov
sti
or
xchg
jge
daa
xor
fsubrs
outsl
int
bound
loopne
mov
xor
cmp
mov
inc
inc
and
dec
sbb
sbb
inc
test
out
push
xchg
sub
lods
pop
gs
mov
jmp
int
lret
jb
pop
iret
push
repz
bound
mov
mov
push
jae
xlat
inc
mov
shll
rorb
into
pop
outsl
fmuls
sbb
outsl
ljmp
inc
pop
inc
das
repnz
das
cmpsb
fnstenv
das
data16
das
mov
fstps
xor
lcall
push
xor
pop
mov
or
push
data16
mov
loop
nop
xchg
pop
pop
fistl
pop
cmc
daa
push
xor
inc
xchg
jp
jge
stc
ss
and
lretw
push
sbb
sub
sbb
js
testb
xor
aas
cltd
inc
jnp
inc
out
push
out
roll
rorl
sahf
pop
and
pop
jg
out
arpl
fnstenv
jno
or
inc
push
repz
imul
push
pop
sub
call
cmc
scas
scas
push
inc
in
xor
repnz
sbb
ljmp
or
enter
pop
sbb
or
jno
int3
push
dec
fscale
jno
in
pop
adcb
lret
jmp
cmp
xchg
out
outsb
shr
adc
cmp
daa
data16
xchg
and
mov
lahf
jne
popa
dec
cmp
jb
enter
cs
push
push
cmpsb
jl
and
push
in
sbb
mov
cld
fimuls
dec
jbe
flds
outsb
mul
sub
loop
push
out
ror
push
pushf
add
and
adc
mov
loop
data16
inc
push
inc
cmp
push
scas
out
add
es
jb
and
pop
fisubs
fcmovu
adc
push
and
push
jle
sub
mov
cmp
vpsubb
push
out
lret
rclb
add
jb
icebp
jns
clc
fiaddl
adc
test
push
add
fiadds
inc
stos
ljmp
jb
adc
pop
bound
in
lcall
push
jae
cmp
aas
mov
loope
cltd
dec
cltd
fistl
stos
dec
cld
cli
pop
mov
pop
adc
mov
jg
aad
pushf
cmp
or
cwtl
es
imul
sbb
sbb
pop
or
mov
cld
scas
pop
add
cmp
sbb
fs
call
arpl
mov
rolb
js
inc
push
in
scas
pop
jge
ds
cmp
push
pop
push
mov
hlt
out
sub
cld
stos
stos
stos
daa
xchg
popf
mov
icebp
inc
rcr
push
pop
sbb
jb
pop
dec
dec
lods
shlb
add
inc
cs
jns
jb
icebp
sbb
inc
sahf
inc
add
xor
mov
das
decb
sbb
sahf
inc
in
xor
es
pop
push
xchg
icebp
cmp
scas
sahf
jne
das
bound
xchg
sbb
add
mov
out
pop
jmp
into
push
aad
inc
or
ljmp
pop
or
insl
fldenv
pop
ljmp
push
neg
pop
aam
push
ds
xor
repnz
inc
jno
xchg
sbb
pushf
lock
insb
cmp
out
outsb
inc
add
jl
jecxz
adc
push
insb
and
xlat
outsl
xor
cmp
mov
inc
rcll
sahf
shr
das
mov
aas
aam
xor
push
daa
inc
jmp
xchg
dec
inc
push
jle
inc
into
xchg
sarb
das
adc
or
dec
push
ficompl
mov
out
xor
add
sub
ret
loop
cmp
ds
add
fdivrs
cmp
push
inc
adc
js
shlb
dec
dec
movb
mov
cltd
negb
sub
xchg
and
mov
scas
in
fistpll
and
adc
aad
add
push
hlt
inc
rcrb
add
jb
bound
and
pusha
cmc
dec
and
test
int
push
mov
cmp
nop
dec
dec
int3
mov
stc
out
movsl
fimuls
sbb
mov
pop
rcrb
pop
dec
cmp
lret
pextrw
push
shlb
loope
pop
lahf
mov
push
jae
dec
hlt
daa
fisubl
jo
push
orl
pop
mov
les
std
sub
mov
jmp
iret
das
gs
pop
fistl
mov
stc
dec
sub
inc
mov
insl
fldenv
mov
aam
ds
pop
rorl
mov
sbb
fwait
jnp
sub
repz
mov
inc
cmp
lds
lods
push
adc
xor
rcll
shll
fwait
into
imul
mov
testl
pop
testb
push
or
pop
add
in
inc
rcrl
xchg
cmp
pop
xorl
lock
lret
dec
cmp
sbb
pop
adc
in
cmp
rcr
inc
xchg
push
hlt
mov
into
jbe
in
inc
cmp
add
sbb
lods
jnp
jns
sbb
rcrb
and
cmpb
jp
push
jb
and
dec
pop
push
sti
sbb
pop
sbb
mov
mov
inc
fucom
pop
fistl
inc
ss
or
daa
xchg
inc
outsl
ficoms
pusha
xchg
aad
sbbl
push
mov
lret
lea
mov
rorl
adc
pushf
vcvtss2sd
sbb
sbb
lret
imull
and
das
push
sub
js
mov
pop
push
push
lahf
push
xor
ret
fsubrp
mov
pushf
in
rclb
adc
ret
sbb
lcall
or
roll
mov
pop
mov
ljmp
idivb
subb
or
or
aad
movsb
push
lock
mov
mov
xchg
mov
push
lret
das
inc
add
adcb
sub
dec
in
sub
pop
lret
fstpl
orb
pop
dec
jecxz
jl
and
es
xor
adc
mov
test
cmc
and
jns
out
pcmpgtd
repnz
test
nop
into
xchg
cmp
and
loop
inc
outsl
xor
pop
sub
cmovb
cs
xor
out
out
or
sahf
adc
dec
aaa
cmp
mov
dec
mov
ja
ss
xor
dec
ja
icebp
jl
daa
leave
sub
in
xor
cmp
add
mov
stos
mov
or
mov
cmp
in
mov
in
jbe
mull
lret
repnz
jne
loopne
rcrl
addb
pop
cmp
adc
popa
adc
sahf
mov
push
testb
fldl
outsl
xchg
ficomps
imul
push
cltd
sub
loop
subb
shrl
sub
sbb
mov
push
sbb
sbb
outsb
push
cltd
and
popa
cmp
ljmp
pushf
or
push
sbb
jns
dec
jbe
mov
test
scas
dec
jp
aad
mov
popa
or
ret
dec
add
int3
pop
icebp
xorb
jmp
and
push
push
les
int3
add
inc
aas
addr16
sbb
sahf
cmp
rcrb
pushf
xor
jle
adc
decl
ljmp
mov
push
shlb
or
mov
or
shr
loop
xor
fwait
xor
movsb
flds
cmp
cmp
rcrl
out
pop
push
repz
add
xor
jno
test
add
xchg
dec
mov
daa
rcl
test
jb
orl
cli
aam
addb
repnz
xchg
shufps
dec
dec
lret
adc
jae
cmp
jecxz
push
int3
mov
xchg
mov
inc
push
xor
addr16
popf
roll
pop
jns
xchg
mov
push
mov
dec
lds
add
cmc
sahf
sarb
jbe
lret
push
shrl
movsb
and
rolb
add
aas
mov
adc
je
mov
mov
and
cmp
scas
pop
pop
pandn
add
punpcklwd
aas
sbb
pop
jnp
push
push
enter
andl
mov
xchg
aas
into
lret
mov
add
sbb
fdivrl
cmp
jno
aam
xchg
ljmp
lock
jae
mov
fisttps
das
divl
jg
xor
pop
cltd
outsb
or
jo
in
inc
std
pusha
pop
lock
mov
push
aam
dec
adc
ljmp
cltd
mov
or
pop
out
cmp
fnsave
add
xor
adc
imulb
dec
mov
addr16
adc
jae
sub
movsb
xchg
rol
add
das
mov
xchg
xlat
or
dec
or
movsb
int3
inc
sbb
lea
or
pop
es
repnz
pop
cmpl
adc
dec
sahf
pop
dec
sbb
adc
mov
or
push
xchg
lcall
jnp
movsl
fidivs
scas
jo
push
cmp
mov
push
jne
lods
ss
scas
pusha
js
jo
hlt
cmp
jbe
fdiv
ss
xor
mov
push
sbb
sub
daa
cwtl
ds
dec
rcll
notl
mov
sub
cmp
lahf
cmp
or
pop
mull
mov
into
lods
pop
rcll
repz
lret
add
in
inc
and
inc
and
out
jnp
adc
inc
add
mov
cltd
xchg
cmp
dec
inc
ds
sub
ds
jge
es
push
cmpsl
outsl
mov
xor
jl
cld
mov
sub
mov
ret
clc
int3
nop
push
orb
xchg
cltd
push
push
fscale
dec
jp
je
and
stos
loop
shlb
fwait
add
or
push
xor
ss
cli
adcl
aam
mov
pop
jmp
dec
inc
xchg
inc
test
jmp
xlat
in
fs
push
sub
in
jbe
jne
mov
push
sub
test
xlat
pop
push
xor
dec
std
adc
incb
mov
test
bnd
mov
comiss
inc
jmp
popa
sbb
notl
dec
inc
cld
stos
add
xor
add
sub
aas
sub
mov
xlat
dec
jecxz
cld
and
xlat
sub
int3
stos
lret
push
pop
inc
pop
cli
jle
pop
cmovnp
inc
mov
fs
fistpll
sbb
iret
pop
cmp
or
subl
outsb
icebp
loopne
hlt
dec
enter
out
in
mov
sbb
sub
sub
movsb
sub
jae
scas
or
fwait
mov
dec
loop
pop
stos
loopne
dec
icebp
and
loope
jno
inc
in
fwait
sti
cmp
aaa
fst
mov
dec
add
push
jns
jecxz
xchg
add
stos
push
add
aad
xchg
sbb
dec
adc
jle
fwait
dec
mov
add
or
jbe
repnz
xor
mov
cmpsb
clc
aad
bound
push
xchg
pop
pushf
cltd
addr16
out
int3
cli
icebp
testb
push
xor
ret
dec
push
mov
pop
imul
mov
sarl
iret
pop
push
add
sbb
push
jle
insl
push
ret
int3
fiaddl
repnz
pushf
and
cmp
aas
adc
pop
or
mov
jge
or
cmp
dec
xor
in
sbb
mov
jle
inc
pushf
xor
fmulp
in
pop
jg
lock
jb
cmp
pop
push
pop
mov
js
mov
insl
sub
add
add
sub
add
out
int
lock
jnp
mov
pop
inc
popl
scas
ficompl
bound
mov
xor
sub
dec
dec
fnstsw
das
lret
or
cli
inc
scas
in
fwait
push
inc
or
movsb
cmp
inc
jmp
jo
push
fiadds
ds
sub
sub
pop
mov
dec
mov
rorb
mov
sub
in
jns
cmpsb
imul
imul
mov
xchg
and
pushl
push
scas
inc
pusha
adc
cltd
xor
and
dec
push
push
sarl
popf
inc
rcll
sahf
cmp
pop
mov
and
subl
insl
test
dec
pop
mov
arpl
sti
out
fstp
das
enter
hlt
aam
or
inc
icebp
sub
push
imul
leave
or
popa
or
push
push
inc
mov
lock
and
mov
jmp
fistpl
ds
lcall
push
cmpsb
pop
out
ds
xor
jle
stc
jge
loope
xor
xor
scas
data16
mov
das
neg
adc
scas
sti
notl
ljmp
push
cmc
fwait
ret
xchg
inc
sbb
incb
out
push
or
rcll
call
pop
out
mov
loope
pop
push
cmp
push
push
roll
out
bound
xchg
inc
jle
es
es
mov
loopne
push
cmp
jmp
and
in
bound
bound
xchg
jge
jb
and
pop
hlt
lret
cmpsb
or
dec
inc
mov
adc
cmp
sbb
repnz
mov
pop
inc
icebp
dec
ljmp
sbb
push
inc
fldcw
pop
push
aaa
loope
into
inc
jge
xchg
popa
dec
aad
sub
and
inc
dec
insl
js
repz
stos
jnp
ljmp
xor
adc
and
popa
insl
jbe
and
inc
mov
sub
das
and
out
test
mov
adc
rcrb
push
xchg
push
or
cmpb
stos
sahf
push
mov
pop
scas
loope
cmp
and
insb
inc
fsubr
add
xor
xor
std
add
pop
xchg
push
xchg
xchg
sti
test
mov
lods
das
pusha
cmc
mov
pop
cmpsb
shll
gs
cmovp
scas
jecxz
lods
lock
gs
jb
loop
std
aaa
sub
xchg
mov
or
popa
inc
push
jo
in
inc
adc
mov
add
loopne
aaa
adc
xchg
xor
jp
in
jb
jle
dec
and
xor
dec
inc
sub
mov
gs
inc
fidivs
out
push
popf
xchg
xchg
and
cmpsl
test
loope
popf
push
or
sahf
push
push
mov
fwait
adc
repnz
stos
dec
jl
out
push
mov
cmc
pop
mov
stos
shrb
out
or
inc
stos
sbb
lcall
inc
pop
mov
inc
xchg
rcrb
dec
daa
jg
fisttpll
arpl
push
adc
mov
pop
xor
cld
cmp
stc
out
xchg
and
arpl
push
xchg
dec
aas
cmpsb
xor
dec
cmpsb
and
aas
lcall
div
and
add
and
fbstp
insl
scas
jecxz
in
push
movsl
inc
cmp
push
and
ret
sbb
out
push
fistpl
movsb
cmp
xchg
sbb
movsl
mov
sahf
stc
or
repnz
mov
mov
jp
inc
adc
push
mov
shll
aaa
sbb
adc
xor
fnclex
adc
pop
xchg
jb
push
jge
jns
fwait
mov
sbb
lret
sbb
movl
pop
mov
mov
sub
in
adcl
sar
jo
inc
mov
push
lret
daa
pushf
test
in
enter
andb
jp
mov
inc
stc
stos
xchg
or
jge
fsubrs
jge
fcomip
lods
jno
sbb
mov
lahf
adc
aad
or
aas
xor
into
adc
call
push
sbb
adc
les
stos
lcall
rcr
and
xor
into
mov
and
inc
lret
pop
ljmp
cli
scas
push
jns
adcb
sub
push
jmp
jne
lea
insl
call
xchg
push
pop
fsubs
ja
sub
jmp
inc
dec
push
sbb
pop
inc
and
insl
loope
or
inc
ret
jne
pop
pop
jno
rolb
fcmovu
mov
pop
jbe
push
fstp
repz
sub
inc
fistps
push
xor
add
add
and
orb
icebp
inc
jmp
mov
out
push
mov
lcallw
mov
lods
mov
pop
in
push
arpl
xchg
jnp
fnstsw
movsb
aad
mov
pop
mov
adc
sti
into
inc
cs
repz
add
xor
adc
add
gs
mov
sbb
fsts
fcomi
mov
xchg
add
daa
js
jmp
ds
imul
ficomps
neg
and
mov
lods
fwait
pop
inc
add
adc
lods
and
mov
enter
mov
imul
lahf
repz
fstl
jge
jmp
dec
aad
pop
xchg
out
inc
flds
ret
cwtl
es
push
or
dec
jo
call
pop
sahf
iret
xchg
mov
test
inc
xchg
jl
testl
loopne
ja
lret
and
sbb
dec
testl
sbb
div
lret
fistl
fdecstp
sahf
xchg
and
loope
jecxz
notb
bound
xchg
inc
repnz
cmp
pop
cs
ret
subl
adc
inc
pop
inc
cltd
test
cmp
or
cs
pop
mov
mov
sbb
mov
lods
jmp
adc
xchg
pop
lods
dec
and
xor
outsl
out
aas
cmpsb
pop
mov
js
int
int
loope
and
into
xor
cltd
cld
mull
repnz
inc
mov
mov
repnz
inc
mov
dec
sbb
sahf
cmp
sbb
inc
repnz
in
jae
fnstcw
pop
popf
out
add
sbb
sbb
aad
popa
inc
mov
lods
push
stc
ret
xor
cmc
std
push
fimuls
pop
inc
ds
push
scas
ljmp
pop
push
out
add
test
out
mov
dec
sbb
pop
pop
sbbb
or
popa
testb
pop
sub
xor
mov
pop
shl
and
mov
xchg
pusha
icebp
mov
pop
and
fs
jle
push
xor
xchg
pop
pop
daa
movsl
inc
or
sbb
aas
adc
sub
dec
sbb
or
iret
pop
sbb
push
mov
stos
pop
out
sbb
loop
fdivrs
imul
das
fistl
sub
fmulp
fisubs
adc
int3
sbb
in
sub
xor
sub
rcl
mov
cmp
repnz
cmp
cmp
push
fidivs
repnz
jle
add
test
xchg
pop
testl
decl
add
cwtl
leave
and
sbb
and
sbb
stos
dec
sbb
add
sbbb
sbb
data16
mov
push
and
pushw
mov
hlt
xorl
in
cmp
push
xchg
ljmp
cmpsl
or
add
rclb
ljmp
subl
data16
inc
and
dec
jb
ljmp
mov
mov
jo
mov
add
imulb
lret
ret
ljmp
mov
loope
fistpl
xchg
scas
and
loop
sbb
clc
cmp
ljmp
inc
sbbl
imul
loope
jge
push
xchg
pop
shlb
sbb
dec
mov
jbe
pop
fmuls
adc
sub
test
notb
iret
aad
insl
inc
pop
in
dec
lcall
mov
sub
call
frstor
and
cmp
insb
sbb
je
ljmp
aam
xor
dec
jmp
pop
popa
aam
and
ljmp
dec
push
add
and
push
xchg
jl
sahf
call
push
or
das
ret
lds
fistps
inc
pop
pop
out
in
ljmp
and
sbb
por
jp
insb
daa
out
roll
xchg
lret
jle
add
jl
dec
xchg
jl
popf
ficomps
aam
lods
lret
in
push
loop
mov
sub
sbb
out
jmp
loope
es
sbb
pop
aaa
adc
push
lret
fbstp
and
push
xchg
jmp
add
jg
adc
inc
popa
xlat
inc
xchg
rorl
mov
inc
xchg
repnz
sub
sub
es
incl
fnstenv
jp
xchg
aad
and
outsl
xchg
icebp
cmp
pop
push
cwtl
je
lods
add
mov
add
add
and
clc
jge,pt
pusha
xchg
in
outsb
cmpsb
jg
jne
fmull
pop
pop
cli
out
pusha
adc
pop
cltd
push
out
iret
fs
pop
cmp
push
inc
jmp
scas
mov
jg
dec
pop
sub
ljmp
movsb
cmpsl
lcall
fsin
fdivrs
or
xchg
and
pop
sbb
stc
push
dec
jnp
daa
rcll
dec
rclb
pop
std
out
inc
ljmp
int3
aad
xchg
jl
sahf
mov
or
das
xchg
fldcw
push
loop
push
mov
or
sbb
jmp
fistl
sbb
push
sbb
fistl
call
fldlg2
rcl
jne
cmp
cli
orl
mov
pop
push
and
sub
xchg
add
dec
push
dec
call
mov
je
cli
xchg
and
mov
mov
je
pop
scas
mov
xchg
das
fistps
iret
cmp
pop
cmp
adcl
pop
and
divl
and
xor
or
lret
xchg
loop
xchg
les
test
sahf
cmpsb
ret
ss
cwtl
imul
jle
insl
push
jnp
sub
or
stos
ds
fwait
sbb
loopne
cmc
jae
mov
int
jmp
rcrl
adc
pop
mov
out
xchg
incl
push
cli
addr16
into
xor
je
nop
and
jo
out
pusha
ljmp
or
inc
pop
icebp
and
xor
js
aam
loopne
out
test
adc
repnz
add
ja
pop
and
xchg
cs
and
dec
fstp
ret
aam
jmp
lock
or
add
inc
mov
pop
ficoml
sti
dec
lret
fisttpll
push
pop
int3
sbb
jnp
and
adc
mov
add
adc
pop
stos
shrl
or
xor
mov
push
inc
jge
push
cmp
and
ror
mov
fimuls
lods
pop
sub
jle
pop
imull
pop
inc
lods
sub
les
lahf
xor
das
sti
sbb
mov
cmpsl
addr16
fisubrs
add
cmp
xchg
inc
xlat
dec
or
fsubrs
jnp
popa
fs
call
push
jne
pop
imul
stos
mov
inc
imul
jl
sbb
mov
add
push
jno
or
add
inc
jb
mov
out
jp
mov
or
loope
pop
inc
fwait
sub
and
int
movsl
movzwl
subl
negb
mov
stos
push
out
je
adc
sub
les
loope
addr16
and
test
xchg
in
inc
ljmp
xor
add
jp
xchg
push
push
pop
cmp
fnstenv
scas
cltd
ljmp
lds
decb
pop
rcrb
jg,pn
popa
out
inc
mov
dec
out
div
xor
sarb
jnp
inc
aas
mov
out
jle
dec
sbb
sbb
and
orb
or
lcall
lret
adc
cltd
je
enter
lods
lahf
push
add
mov
xchg
push
mov
mov
and
mov
loopne
cltd
bound
xor
aas
pop
fldenv
sbb
das
xor
inc
subl
push
add
xchg
push
stc
xor
push
stos
xchg
pop
test
and
out
sbb
push
push
popa
and
mov
sbb
dec
push
xlat
ds
in
adc
fsubrs
pop
out
xor
fisttps
addl
jns
and
test
aad
mov
clc
and
repz
dec
psrad
mov
xor
movsl
pop
jbe,pn
inc
outsb
fsub
push
lret
pushf
sub
sub
test
out
pusha
cmp
rol
jle
bound
in
ror
hlt
mov
rcr
mov
lahf
xchg
mov
insl
out
jbe
xchg
push
dec
cmp
jo
cli
and
dec
dec
cmp
jmp
jle
push
xor
fwait
inc
or
xor
bound
loop
bswap
push
repz
fisubs
and
fmulp
push
cltd
or
fists
bound
repnz
push
xchg
sub
pop
mov
push
jmp
mov
fdivr
in
cmp
adc
aas
pop
loope
and
xor
and
dec
xor
ret
add
dec
or
sub
sbb
fnstenv
sbb
lock
sbb
xchg
data16
fsubrs
mov
push
or
sub
pop
cli
outsl
insl
dec
mov
mov
pop
inc
jg
test
out
rclb
cmp
adc
xor
stos
and
cmp
or
gs
cmpsb
mov
push
stc
dec
jns
popl
into
scas
dec
jg
cwtl
cltd
outsl
jae
adc
lcall
adc
imulb
pushf
insb
pushf
sub
xchg
scas
push
shll
pop
jb
movsb
pop
or
call
and
cmp
inc
repz
push
notb
and
out
push
sub
sbb
mov
sbb
sbb
out
pop
mov
in
inc
mov
ret
pusha
loopne
jo
popa
dec
movsl
add
xor
push
loopne
lcall
test
mov
aad
cmp
xchg
mov
outsb
xchg
sub
xor
dec
lcall
mov
xchg
out
sub
inc
dec
icebp
mov
out
or
btc
mov
cmpsl
popf
in
adc
iret
cmp
xor
or
bound
xchg
lcall
inc
mov
or
dec
insb
out
loop
mulb
add
loope
loope
push
add
jg
push
popf
or
push
push
ss
rcl
adc
in
jbe
mov
imulb
xchg
into
sahf
sbb
or
sub
xchg
jg
pop
inc
ret
pop
lcall
fidivrs
out
adc
add
fistpl
lcall
aam
in
das
dec
mov
mov
jge
imul
push
and
dec
jo
popf
fsubl
ret
sbb
testb
inc
in
pop
push
pop
outsb
jbe
and
xor
lret
and
sub
loop
cs
outsb
push
in
push
lret
ret
data16
xchg
cs
sbb
add
cmp
dec
jo
mov
int3
mov
pop
dec
push
mov
mov
push
shlb
xorl
mov
mov
fwait
xor
push
sti
sbb
mov
push
and
cmpsl
dec
aam
cltd
out
pushf
or
mov
jge
fcomip
out
xchg
add
or
mov
std
jnp
dec
mov
arpl
adc
jb
adc
add
sub
cmp
push
jnp
add
dec
mov
stos
in
push
mov
xchg
mov
inc
cmp
xor
fsts
or
or
shl
mov
cmp
push
lock
andb
and
cmp
and
nop
mov
lea
sti
pop
aam
ret
pop
bound
jg
jle
add
push
mov
out
push
jl
mov
pop
jb
cli
xor
and
lcall
push
mov
push
xchg
push
int3
icebp
test
mov
sti
outsl
add
dec
ljmp
and
push
lahf
push
mulb
pop
fsubs
popf
ret
outsl
cmp
int3
xor
add
sbb
dec
sbb
lcall
cwtl
mov
sbb
negl
mov
xor
push
mov
outsb
xor
jns
cmp
cmp
lcall
in
js
pop
dec
push
insb
adc
and
mov
stos
stc
push
sub
add
arpl
mov
int
pop
cmpsl
repnz
daa
mov
lcall
shl
pop
pop
jb
jmp
push
mov
or
push
cld
mov
pop
push
lret
inc
fnstenv
mov
mov
das
pop
popa
adc
xchg
xor
lret
cld
jmp
in
das
or
push
push
push
push
pop
iret
shrb
push
push
push
mov
mov
mov
test
in
negl
sbb
je
cmp
add
test
jecxz
shll
pop
popa
jecxz
pop
icebp
aad
adc
jae
xchg
jmp
and
fistl
or
fwait
cld
push
cmp
mov
pop
std
popw
cmp
mov
cmp
pop
loop
int
jmp
add
fsubrs
xchg
ret
ja
push
push
xor
cmc
xchg
jne
and
js
dec
std
div
jno
inc
cs
cmpsl
push
xor
mov
jle
jmp
sub
and
popf
mov
xor
push
das
stos
push
jne
notl
test
dec
rolb
insb
mov
xchg
mov
fnstsw
daa
dec
rcll
xchg
xor
aam
inc
or
xlat
push
cld
into
push
push
rclb
lds
idivb
add
or
xor
sub
dec
ja
sbb
xlat
xchg
pop
mov
and
mov
jl
adc
push
xchg
int
mov
mov
mov
cli
out
iret
cmp
mov
and
pop
xor
out
sub
jnp
in
mov
or
push
popa
inc
fidivrs
jmp
xor
inc
xor
xor
dec
sub
daa
add
ds
and
idivb
adc
push
and
adc
pop
sub
sub
jns
pop
cltd
and
mov
xor
sbb
sbb
stc
jb,pn
sbbb
rolw
test
inc
dec
mov
mov
pusha
aas
xchg
and
shll
cmp
mov
mov
call
cltd
or
sub
jnp
dec
and
and
out
notb
lret
cwtl
cwtl
mov
rcrl
ficoml
or
pushf
repz
xchg
dec
sar
fisttpll
or
cs
jecxz
pop
repnz
jns
mov
push
leave
dec
push
dec
push
and
gs
xorl
es
cwtl
xchg
movsl
jmp
and
stc
cli
ret
push
stc
sbbb
ja
xchg
jmp
push
das
adc
add
mov
jl
xchg
push
jb
cltd
ja
fwait
jl
push
and
dec
push
in
push
mov
loopne
divb
test
adc
or
scas
xor
xchg
xlat
out
mov
or
inc
mov
sbb
in
dec
jecxz
cltd
cltd
cmc
std
or
in
into
push
jmp
pop
das
mov
shr
lds
pop
mov
aas
or
pop
xchg
ljmp
or
loope
mov
push
jecxz
cmp
fstl
fldcw
lret
aas
sbb
mov
xchg
filds
pop
cmc
imulb
jle
test
or
dec
and
ljmp
jl
xchg
daa
jne
in
mov
push
stc
mov
or
test
das
dec
jnp
out
push
sbb
xchg
mov
pop
subb
add
les
add
jns
imul
cs
sub
lds
bound
sbb
inc
push
adc
cld
dec
imul
out
xlat
jb
jb
sti
jmp
xchg
sub
stos
insl
cmp
scas
sub
sbb
adcb
xor
and
cmp
sbb
in
xorl
push
ljmp
pop
or
push
shlb
dec
outsl
call
xor
mov
mov
xor
jbe
popa
xchg
pop
sub
mov
xchg
in
sub
mov
or
inc
mov
and
sub
mov
fadds
rcll
into
adcl
lret
test
mov
jmp
mov
sub
cmp
push
iret
sbb
xlat
sbb
repz
sub
push
pusha
xor
jb
jge
divl
dec
jno
dec
xchg
scas
ljmp
call
sub
push
or
and
jb
add
pop
jge
ljmp
mov
inc
jbe
dec
mov
gs
adc
ficoml
pop
aaa
lcall
insl
or
imul
nopl
inc
les
leave
jge
stos
xchg
leave
in
or
daa
data16
push
push
adc
jbe
hlt
es
es
fnstenv
in
insb
add
clc
xchg
fistpl
adc
pushf
or
cmp
jae
enter
jmp
inc
aad
push
lds
addr16
fadd
loop
in
and
pop
repnz
mov
repz
icebp
rol
push
jl
jle
loop
mov
rcr
fisubs
jmp
fs
ljmp
pop
mov
push
pop
sbbl
insb
and
sub
lret
sub
jp
in
add
in
pop
aam
lret
bound
dec
lcall
shrb
stos
outsb
daa
cld
fdivr
jo
mov
in
jge
negl
dec
xchg
out
repz
hlt
sbb
push
int
test
mov
fs
loop
in
shl
jmp
pop
stc
xchg
mov
das
mov
add
pop
lahf
jle
cmpsb
enter
jge
inc
dec
push
push
adc
xlat
test
push
imul
pop
push
pop
rolb
push
lea
aam
int
inc
ss
js
rorb
scas
and
add
loope
popl
sub
sub
xchg
sbb
push
in
out
pop
lret
push
stc
dec
test
pop
adc
lock
dec
outsb
or
pop
push
dec
ljmp
push
aam
test
push
pop
setne
sahf
dec
mov
xchg
dec
sbb
cmpsb
jle
add
jb
cld
sub
dec
dec
imul
fimuls
sbb
ja
mov
test
data16
xchg
loop
add
mov
dec
sbb
pop
clc
cmp
inc
ljmp
mov
mov
pop
mov
mov
pop
jbe
mov
xchg
jl
idivl
dec
gs
pop
pop
into
xchg
shll
sbb
dec
sbb
inc
cmp
imul
das
inc
fstps
push
insl
dec
cmp
loop
sub
movsb
sbb
jmp
out
xor
sbb
mov
fidivl
ret
xchg
inc
std
pop
push
out
xchg
inc
jl
push
jbe
mov
pop
push
js
pusha
jb
sti
adc
jmp
fwait
cmc
fwait
xchg
jl
negl
and
bound
loope
sbbb
pop
and
or
das
inc
sub
into
shll
in
push
mov
pop
lret
sub
cs
dec
add
jle
jmp
inc
jl
ljmp
ss
pushf
pop
ss
es
adc
je
push
xchg
sbb
js
pand
addl
in
jmp
xchg
sar
mov
stc
es
or
jg
cwtl
flds
lods
fsubrl
lock
bound
sbb
push
pop
ficomps
fmull
push
sbb
dec
ficoms
outsl
out
inc
in
jmp
xor
dec
push
in
pusha
pop
les
in
push
int
or
ljmp
mov
out
dec
mov
adc
ja
jmp
push
mov
pop
xchg
lods
or
or
pop
orl
aaa
sub
mov
push
dec
popl
sti
stc
and
sbb
inc
adc
nop
sbb
or
mov
ret
push
scas
and
addr16
inc
or
push
jb
dec
cmp
cmpsl
out
sbb
push
scas
pushl
ljmp
add
int3
xlat
addr16
fwait
mov
int3
mov
movsb
ret
mov
pop
or
sub
or
sbb
popa
fcoml
sahf
es
push
pusha
dec
cmp
push
inc
sahf
movsl
mov
cmp
ds
adc
ss
pushw
xchg
ss
inc
push
pop
mov
add
push
add
xchg
cmpsb
pop
sbb
ja
add
fldenv
ds
pop
fsubr
clc
icebp
cmp
lret
jmp
nop
lcall
rcl
adc
fsubs
lock
fwait
repnz
pop
fldcw
icebp
js
push
out
xchg
in
in
mov
es
in
xlat
xlat
jnp
jle
shl
scas
ret
loope
pop
mov
decb
jle
ja
imul
ds
push
cmp
push
sbb
push
dec
and
pop
mov
ret
dec
xor
shr
imul
pusha
lret
add
sbb
mov
pusha
xlat
jp
push
add
xor
sub
fists
mov
and
xchg
dec
fnstcw
in
inc
dec
in
fistpl
sub
dec
sar
and
inc
out
popf
in
sbb
jnp
in
adc
mov
adc
xchg
pop
ret
stc
iret
out
in
ret
loop
and
div
rcll
xchg
addl
push
fs
push
sub
pop
xlat
adc
jmp
stc
push
xor
inc
mov
out
xchg
push
cmp
push
and
and
xchg
dec
adc
jecxz,pt
pop
int3
loopne
in
notl
icebp
adcl
in
outsb
inc
clc
sbb
out
inc
sbb
mov
mov
inc
mov
aad
push
das
mov
out
mov
cmpsl
jmp
nop
imul
inc
dec
and
jbe
jecxz
inc
in
mov
inc
xchg
mov
jbe
fcmovb
insb
pop
mov
cmpl
repz
inc
loope
add
shll
sbbb
dec
push
aad
jnp
push
std
mov
xor
jne
push
icebp
pop
mov
dec
stos
add
inc
out
jecxz
and
xor
int
add
icebp
or
add
pop
not
lahf
xchg
lret
out
and
or
xchg
mov
stc
mov
cli
push
scas
inc
fnstsw
push
cmc
mov
xchg
lret
cmp
add
or
imul
and
in
cmp
dec
addr16
add
clc
enter
xchg
or
jns
sti
inc
call
das
inc
fnstcw
jno
ficoms
dec
pop
ret
es
mov
jae
dec
dec
sbb
int
sub
xor
out
in
ret
jbe
icebp
pop
push
push
xchg
daa
bnd
and
mov
push
outsb
push
cmovbe
in
push
xchg
ljmp
jle
jl
ret
rolb
out
pop
dec
inc
xchg
loope
xchg
jl
sahf
sub
es
pop
push
in
pop
das
dec
sub
repnz
out
pop
mov
pop
jle
iret
add
or
sub
fistpl
push
xchg
jl
sahf
les
cli
pop
iret
xchg
iret
icebp
lcall
aaa
sahf
dec
pop
loope
push
out
stos
jle
add
enter
lahf
sub
and
pop
jmp
ret
xor
sbb
pop
jmp
cmpsb
mov
dec
xor
mov
out
xor
out
inc
in
mov
data16
loope
push
push
jmp
jb
cmp
lahf
lret
scas
mov
push
test
mov
fs
and
dec
int
fcoms
jae
add
hlt
frstor
scas
xor
fst
inc
jp
dec
push
cwtl
test
jo
mov
xchg
das
push
jle
sar
sbb
lea
ss
xor
pop
sub
fldt
ffree
xor
cmp
push
pop
fldt
pop
ljmp
rcl
bound
lods
fnstsw
push
and
lahf
xchg
mov
in
xchg
xchg
dec
pop
jb
hlt
fcomps
bound
popa
jno
and
fiaddl
add
xchg
lock
out
and
inc
mov
or
fsubp
pop
popa
fidivrs
push
jb
outsb
lea
xchg
loop
cmpb
push
cmp
mov
xor
add
dec
loop
cwtl
fidivrl
mov
loope
insb
mov
or
jmp
rcrb
push
push
dec
pop
sbb
lea
xor
clc
add
and
fdecstp
dec
dec
popf
mov
jae
fmulp
mov
sbb
xchg
xchg
repnz
rcl
xlat
aaa
jb
inc
loope
ret
cmp
jnp
pop
int
sbb
cmpb
pop
jle
and
pop
inc
out
jmp
frstor
mov
fcmovnb
ds
adc
das
lret
sar
push
add
mov
inc
sbb
pop
imul
mov
dec
pop
xchg
pusha
int
mov
push
jg
push
into
adc
repnz
lea
xor
add
dec
test
cmp
mov
and
sbb
inc
and
pop
mov
pop
xchg
or
gs
mov
and
adc
lret
lret
pop
add
cmp
in
rorl
mov
push
jo
rorl
push
pop
out
xor
push
dec
jne
push
cmp
pushf
cmc
dec
and
jbe
in
jbe
mov
pop
hlt
sbb
loopne,pn
cmp
xchg
pushf
imul
and
xlat
mov
push
lea
aam
dec
and
inc
cmpsb
nop
stc
sbb
fwait
pop
das
pop
or
mov
test
cmp
cmp
mov
cmp
sbb
andb
sti
bound
insw
mov
pushf
testl
inc
clc
jo
stc
dec
and
sbbl
mov
insl
inc
pop
xchg
cmp
sahf
loope
mov
jg
lahf
sub
or
lea
jo
fistps
cmp
inc
ss
cld
arpl
sbb
inc
push
idivl
mov
ljmp
dec
leave
pusha
pop
jecxz
loop
out
mov
sbb
mov
dec
stc
aam
sub
jmp
imul
les
outsb
movsb
xchg
cmp
sbb
ret
test
js,pn
data16
jae
pop
pop
sub
fmull
push
xchg
in
and
dec
pop
inc
adc
mov
dec
insb
mov
pop
push
bound
in
js
lret
xchg
bound
jnp
xchg
notl
dec
stos
je
insl
hlt
pop
in
rol
out
jge
sbb
aaa
out
push
sbbl
jge
scas
test
test
dec
push
testl
loop
shll
sarb
das
or
cmp
cmp
in
pop
ljmp
ss
dec
mov
jae
mov
jg
mov
add
xchg
stos
rcrl
mov
fists
imul
ds
lods
mov
ficoml
decb
jg
in
mov
mov
js
dec
sti
les
into
outsl
xchg
repnz
inc
sar
jbe
out
movsl
fnstenv
dec
push
jbe
mov
stc
in
arpl
andb
inc
and
mov
popf
xchg
dec
fnstcw
inc
add
fstp
cs
or
outsb
inc
push
or
fistl
loopne
rcr
push
xor
sbb
pop
daa
push
sbb
inc
mov
inc
jne
mov
addr16
aad
mov
stc
xchg
sbb
or
ret
push
mov
sub
decl
dec
fisubrs
push
jb
mov
inc
xlat
sti
mov
ja
push
jl
sbb
sub
mov
ret
push
aad
sbb
pop
je
mov
cmp
inc
mov
push
popf
push
sbb
imul
push
sub
imul
pushf
mov
adc
xchg
clc
mov
ljmp
arpl
js,pn
hlt
scas
push
mov
lcall
stos
push
dec
scas
dec
cmp
push
aam
fidivrl
divb
inc
cli
jl,pn
aas
adc
jbe
nop
adc
xlat
adc
push
lret
sub
or
mov
call
dec
out
xor
call
aam
sub
adc
push
clc
cmp
subb
pop
stc
pop
inc
pop
cld
cmc
pusha
or
divb
out
decb
adc
mov
movsb
shrb
inc
sub
aad
lcall
lcall
sbb
jbe
dec
mov
jns
push
pop
add
cmp
push
push
bound
cli
enter
cmp
dec
push
jne
push
in
cmp
pop
sbb
popa
mull
in
push
sbb
into
aas
pop
jmp
das
dec
push
pop
dec
aas
jge
sbb
inc
stos
negl
gs
mov
fisttpll
jge
jae
stos
sub
in
daa
push
sti
insb
push
loope
lods
push
int
or
sbb
cmp
add
into
stos
mov
dec
pop
movsb
pop
cs
or
addr16
dec
ds
enter
jne
sub
cli
push
fisttpl
addb
fnstsw
push
fisttpll
stc
roll
cmp
sbb
sbb
pop
lods
adc
dec
jne
ror
cli
and
jb
in
mov
adc
mov
cmp
ds
adc
mov
dec
xchg
xchg
mov
xorb
mov
adc
xor
adc
dec
sub
frstor
push
inc
leave
rorb
push
in
push
jb
adc
aad
sbb
rclb
adc
call
das
mov
jl
das
bound
jp
pop
das
iret
fsub
jnp
mov
fwait
sbbb
lds
push
jbe
stc
mov
sub
popf
push
rcrl
and
xor
lods
adc
rorl
pop
cmp
cmp
xchg
scas
int3
push
inc
pop
fstps
test
insb
andb
aad
mov
pop
mov
and
push
arpl
out
cmpsb
push
aad
mov
adc
fstl
pop
callw
xor
int3
xchg
jb
into
ss
inc
pop
xor
das
std
add
xchg
ret
push
add
addb
addr16
cmc
adc
hlt
cmp
xchg
aam
xchg
loope
cmp
cli
or
scas
inc
jp
stos
iret
lret
and
jg
inc
clc
leave
jbe
sti
das
cmp
aad
push
inc
loope
cs
push
cli
popa
aas
and
pusha
aas
fimull
pop
in
fldcw
xor
fstpt
frstpm(287
shrb
mov
mov
jge,pt
out
call
cmp
and
lcall
rcr
cmp
sbb
adc
cmp
and
in
mov
sbb
fwait
jle
xchg
adc
or
xchg
mov
arpl
out
sub
push
rorb
pop
mov
lret
popa
dec
shrb
fldenv
cld
pop
ljmp
outsl
stos
xchg
ret
dec
mov
xchg
out
sub
aad
orl
push
cld
pop
fs
sbb
loop
addr16
cmc
inc
mov
xor
std
aam
add
sub
push
mov
sbb
push
inc
cmp
and
inc
sub
xchg
data16
lret
fldl
and
fs
lret
in
lret
push
mov
sbbb
pop
push
mov
inc
call
dec
iret
pop
js
bnd
xlat
add
push
xor
lds
leave
mov
xchg
out
clc
and
pop
pop
pop
inc
ja
aad
jle
or
and
xchg
inc
xchg
sbb
js
or
push
pop
arpl
mov
div
dec
pop
jae
push
adc
xor
sar
and
in
imulb
sti
repz
repnz
sbb
jbe
mov
adc
cmpsb
xor
mov
sbb
ja
js
push
repnz
push
push
lods
pop
push
movsb
cmc
push
pop
jge
mov
push
sbb
jae
fistpll
cmc
ds
mul
js
mov
pop
out
sbb
dec
jnp
scas
cld
push
dec
cs
jle
xchg
jbe
or
cmp
xchg
adc
fidivl
mov
rcl
xlat
push
scas
xor
dec
in
pop
in
loopne
jnp
iret
sbb
ljmp
xlat
mov
outsb
out
jbe
fadd
inc
jbe
les
lea
dec
inc
aaa
cwtl
adc
sbb
test
jb
dec
shrl
pushf
pop
cmp
fabs
mov
fisubl
xchg
push
fisubrs
mov
in
sbb
icebp
pop
push
adc
in
scas
jne
dec
push
scas
movb
iret
iret
mov
push
loop
cmp
cmp
jno
stos
xchg
in
das
cmc
pop
pop
incb
cmp
cmpsl
pop
xchg
push
push
jmp
gs
fs
push
pop
cltd
dec
mov
mov
faddp
aaa
in
and
clc
xchg
stos
xchg
es
push
dec
lods
roll
push
in
mov
push
mov
out
loop
jne
das
rcrb
cmpsl
ficoms
push
sbb
push
out
cmc
lock
fidivs
shrl
cld
pop
movsl
xor
ret
sbb
adc
push
rcrb
mov
fildll
stos
lock
ficomps
repnz
rcrl
or
aaa
sbb
fildll
mov
stos
and
notb
fxam
xor
push
into
pop
pushl
jle
mov
inc
mov
out
dec
jg
rclb
and
dec
push
lahf
dec
out
shll
or
push
das
out
aas
pop
gs
pop
pop
out
outsb
xlat
in
and
test
jp
pop
mov
xor
pop
imulb
and
inc
add
push
testl
aas
iret
jne
mov
and
or
jno
loope
dec
and
dec
aad
movsl
mov
out
and
fmull
pop
cmp
cmp
xchg
and
notb
jp
mov
cwtl
ret
mov
mov
cmp
lahf
cmp
sbb
mov
jns
cli
and
cli
dec
jb
cmp
dec
stos
pop
lea
add
sarl
push
jno
and
mov
aam
dec
push
inc
into
or
int3
mov
stos
mov
lcall
lock
fs
xor
mov
pand
pop
jnp
shll
push
cmp
test
sti
mov
pop
pop
xor
fs
dec
incb
ror
cmc
gs
pusha
rcrb
sbb
fcomip
mov
sub
pop
mov
push
push
dec
std
lcall
cmp
lds
xchg
push
dec
into
sub
adc
push
dec
or
jle
mov
mov
mov
jb
cli
mov
int
and
xchg
xchg
mov
pop
leave
imul
ret
std
loop
push
dec
pop
xchg
cmpsb
xor
push
imul
dec
cld
lret
mov
cmpsl
sahf
fimull
not
ret
mov
scas
shlb
adc
cwtl
negb
push
cld
jp
sub
xor
lahf
fs
les
lds
xor
lods
popa
call
push
ljmp
mov
arpl
mov
xlat
and
jp
in
iret
jb
loop
mov
adc
scas
nopl
pop
es
enter
xor
out
sti
in
xchg
test
mov
repz
mov
sub
enter
insl
aaa
dec
adc
jp
je
jge
push
push
or
cmp
out
mov
repnz
push
push
or
out
jne
push
jae
pop
cmpsl
mov
and
and
jno
mov
out
mov
dec
je
xchg
out
bound
cmp
loopne
push
push
mov
test
and
jg
xchg
mov
into
pushf
pop
or
mov
push
bound
dec
push
cld
dec
mov
es
lds
xor
mov
ds
sarb
data16
pop
jae
mov
fisubrs
push
shll
and
dec
subl
dec
std
ja
inc
pop
xchg
xchg
sbb
in
push
adc
xchg
mov
push
and
cs
popf
dec
mov
ret
stos
add
push
shlb
les
int
adc
xor
sbb
sub
fs
xor
push
icebp
rclb
frstpm(287
jle
push
aad
es
iret
or
mov
dec
add
sbb
dec
jbe
adc
mov
inc
add
mov
jbe
cmp
pop
cmp
pop
cmpsb
cmpsl
jb
jg
pop
sbb
mov
in
inc
in
insb
fisttpll
mov
cwtl
mov
bound
push
sub
daa
jns
inc
push
sbb
jmp
stos
push
sub
mov
insl
push
mov
sahf
aam
and
rclb
cmpsb
out
push
xchg
sub
inc
or
mov
sbb
divl
xlat
cmc
pop
pop
pmaxsw
push
push
stc
cwtl
mov
scas
jmp
pop
sbb
dec
push
add
movsb
mov
push
clc
aam
imul
inc
mov
jp
pop
ds
mov
inc
dec
inc
mov
lcall
mov
insb
inc
sbb
les
mul
hlt
cmp
popa
fnstcw
or
push
mov
and
jae
inc
sub
jmp
pop
ss
sbb
adc
stos
adc
pop
mov
incl
psubsb
mov
xor
lea
mov
pushf
mov
push
jg
and
add
loopne
mov
xchg
pushf
dec
push
push
mov
inc
push
cmp
jb
inc
xchg
mov
jecxz
dec
cmp
pop
push
mov
andb
cmp
imulb
in
inc
push
bound
pop
das
xor
cmp
cmpsb
ljmp
mov
bound
bound
dec
icebp
subb
in
cli
addr16
shlb
push
jmp
mov
incl
xor
add
cmc
dec
sub
cmc
idiv
loope
jno
xchg
addr16
dec
aas
jp
and
and
imul
ds
pusha
and
ja
xchg
insb
rcrb
dec
pop
push
jl
loope
out
dec
mov
cmp
fisubs
push
push
inc
add
and
mov
pop
fnstsw
lock
xchg
cmp
iret
jg
jle
stc
and
cmc
das
and
stc
and
mov
and
mov
pop
jmp
ret
in
add
push
cs
mov
int
cs
and
cli
jp
pop
xchg
mov
sub
push
pop
xorb
mov
xchg
sub
pop
pop
sbb
mov
sbb
mov
adc
cmp
fimull
fidivl
adc
je
mov
push
mov
mov
lcall
pop
pusha
ss
rcll
xchg
mov
push
lds
sbb
andb
dec
mov
psubsb
pop
mov
loop
shrl
and
das
pop
aad
sahf
pop
loopne
jbe
add
adc
pop
ljmp
adc
jo
flds
das
imul
dec
dec
int3
in
lock
sti
in
fdiv
and
mov
cmp
ljmp
mov
leave
cmp
push
ds
push
inc
or
sbb
je
cli
cwtl
nop
loopne
jl
fisttpl
jnp
mov
jne
push
xchg
adc
aaa
arpl
adc
test
aas
out
mov
and
mov
or
xchg
inc
pop
dec
jo
pop
pop
test
add
hlt
repz
and
inc
loop
jge
mov
sub
pop
push
sub
dec
and
and
pop
inc
out
mov
pop
mov
jbe
and
cmp
and
hlt
cmp
add
push
ds
inc
shll
movsl
clc
dec
mov
scas
cmc
aam
test
lds
xor
out
fs
lcall
jecxz
fucomp
idivb
jmp
or
fisubs
mov
dec
and
mov
stos
sbb
xor
test
mov
push
in
xchg
inc
ja
clc
cmp
sub
iret
loope
pop
cld
push
les
pop
hlt
stc
xchg
loopne
shrb
loopne
mov
fwait
jb
pop
add
dec
sub
pusha
lret
jge
xchg
cmp
scas
inc
push
push
ljmp
sub
push
arpl
mull
fdivrl
mov
sub
xlat
mov
cmpsl
out
into
fcomi
jle
test
clc
sbb
cli
mov
cltd
lea
inc
inc
mov
ds
sub
sub
mov
lahf
inc
sbb
push
xlat
add
ss
mov
mov
inc
sbb
clc
xchg
jmp
negb
sbb
call
addb
enter
aam
bound
xor
sarb
stos
jbe
and
and
jle
outsl
das
xchg
ds
scas
jns
mov
jne
ficomps
aas
xlat
cwtl
pop
mov
repnz
scas
dec
in
jmp
sub
inc
inc
leave
dec
mov
fldcw
repnz
sbb
jo
js
or
std
xchg
lret
push
cltd
fimuls
dec
and
rclb
xchg
arpl
jmp
fdivrs
int
das
dec
push
xchg
mov
xchg
push
push
dec
add
subb
dec
add
pop
mov
lahf
mov
mov
push
ljmp
stos
sbb
dec
cmp
fucom
gs
push
jle
cltd
dec
adc
cld
cltd
insb
pusha
dec
stc
movsl
mov
add
cmp
sbbl
dec
aad
out
mov
sarl
lcall
lahf
lods
lret
mov
and
mov
inc
mov
mov
out
or
stos
push
mov
je
repnz
stos
inc
mov
push
push
loop
imul
jle
push
enter
loop
in
xchg
in
mov
fbld
inc
loope
push
ret
mov
cltd
mov
insl
and
insb
out
jmp
adc
scas
mov
ljmp
popa
jae
push
lret
test
pop
xlat
or
scas
call
xchg
rcr
add
mov
xor
adc
test
pop
pop
pop
xor
rclb
pop
stos
mov
mov
mov
or
mov
sub
subl
push
xor
cmc
std
inc
add
ret
popa
jbe
and
sub
xchg
rclb
mov
cmpsb
xor
dec
cmp
push
xor
aad
pop
adc
int3
mov
jns
xor
imul
insb
push
ret
nop
into
cmp
stc
cmpsb
mov
rorl
mov
ss
repz
ja
sbb
testb
fdiv
in
add
jb
es
pop
inc
lcall
or
sahf
lods
pop
mov
sub
into
inc
mov
and
jl
imul
jbe,pn
popa
add
divl
and
inc
aaa
dec
sbb
pop
int3
pop
fldenv
ja
fnsave
sub
scas
cmp
push
psubusb
adcb
xor
inc
mov
xchg
or
push
stc
enter
mov
pop
orb
dec
imul
push
push
daa
pop
push
and
and
dec
hlt
and
mov
loope
loop
dec
call
scas
pop
xor
xor
xchg
xlat
in
movsl
mov
call
lods
ret
into
xor
add
cmp
pop
mov
dec
cmp
in
mov
push
outsl
xchg
repz
std
cld
nop
int
jne
movsl
xor
push
dec
push
int
add
fisttpl
mov
sbb
sub
data16
dec
jo
ss
jo
push
cmp
adc
push
cwtl
xor
cmc
cmp
pop
sub
xlat
jb
loope
sbb
xchg
fs
inc
out
divb
stc
dec
fcmovnu
in
add
rcrw
addr16
xchg
dec
arpl
out
rorl
push
sti
push
fsubs
and
cltd
sbb
or
lds
cld
fwait
movzbl
sub
mull
jno
pop
cmp
pop
sbb
mov
imull
ret
into
fcompl
xchg
ja
push
xchg
lds
sub
adc
es
xorb
or
leave
cmp
cwtl
scas
and
pop
pop
dec
outsb
inc
jp
inc
push
nop
out
shrb
add
loop
fimuls
xor
or
aad
dec
lock
loop
push
call
mov
inc
jp
sbb
pushl
pop
out
int3
std
sbb
pop
push
cmpsl
popa
test
clc
pop
mov
aad
jne
pusha
push
in
jmp
nop
js
stos
ds
mov
test
dec
mov
sub
inc
shr
add
insl
lds
scas
clc
insl
xor
mov
insb
pop
insb
inc
mov
cmpsl
lods
cmpsb
andl
jge
dec
mov
xchg
orl
leave
js
sub
mov
pop
adcb
sub
sub
loop
fidivrl
adc
lods
and
int
jp
add
inc
dec
inc
inc
xor
push
cmc
add
jmp
mov
inc
lahf
mov
in
xchg
xchg
adc
push
cmpb
inc
or
mov
cmp
inc
call
or
je
test
cltd
rcrl
jle
xlat
mov
dec
lret
shll
xchg
pop
stc
xchg
insl
std
adc
int3
or
in
cli
and
clc
or
adc
or
das
push
shr
lcall
scas
repnz
inc
jmp
and
loopne
pop
cmp
mov
sub
xor
cld
adc
push
repnz
xor
pop
mov
jmp
xchg
shl
dec
test
fistpll
add
xchg
repnz
push
mov
jbe
test
in
aad
jmp
jbe
aam
dec
jp
into
adc
out
call
inc
sbb
sub
push
mov
and
pushf
test
dec
cli
mov
xlat
es
dec
jle
dec
inc
and
and
pop
xor
rcrl
xchg
dec
xchg
inc
mov
dec
dec
pushf
and
jnp
xchg
fcmove
fimuls
xchg
repnz
xor
xor
add
stos
jnp
std
mov
dec
xor
out
rorl
pushf
jmp
and
sti
js
sbb
out
mov
sbb
aas
fisubl
loop
dec
adc
push
les
into
sahf
xchg
sarl
sti
cmp
sbb
insb
adcb
sbb
xchg
fwait
cmp
cmp
xor
sbb
jns
inc
mov
ud1
inc
push
scas
fwait
insl
scas
sbb
aam
mov
or
cs
dec
insl
out
jg
int3
cld
mov
mov
shlb
ljmp
jb
enter
jne
push
and
out
in
and
lds
enter
sub
sbb
int
or
or
mov
lret
mov
or
fisttpl
cmp
mov
imul
xor
adc
xchg
mov
daa
mov
scas
in
add
imul
or
pop
cmovge
out
cmp
adc
cmp
dec
ljmp
shl
pop
inc
push
xor
fwait
dec
scas
jl
pusha
cmp
xchg
mov
inc
hlt
cltd
cld
mov
testb
sbb
in
ficoml
inc
dec
cwtl
xlat
cmp
pusha
and
rorb
aad
test
push
imul
test
fisubl
jae
cwtl
mov
push
mov
incb
pop
sbb
dec
repnz
cmp
jmp
js
xor
mov
loopne
jmp
notb
shrl
dec
jp
pop
jmp
xchg
aaa
lock
xor
out
sub
push
addr16
sbb
mov
push
arpl
aad
inc
insb
xchg
pop
mov
or
mov
cmp
pop
fstl
mov
repnz
lods
or
cli
leave
in
lock
ds
cmp
adc
add
out
pop
cli
ljmp
cmp
dec
jl
sbb
nop
ljmp
cmpsb
jge
mov
push
and
cmp
xor
pop
mov
jle
or
dec
enter
popf
pop
mov
mov
fldenv
cmp
cmp
hlt
repz
mov
fnstsw
aaa
sbbb
sub
jb
sub
sbb
mov
repnz
dec
mov
inc
pop
push
dec
pushf
scas
daa
les
mov
out
fildl
mov
cmpsb
outsb
sub
pop
cmp
test
rcll
fstps
popl
in
icebp
test
pop
mov
mov
cld
mov
daa
xlat
adc
mov
fistl
sahf
cld
push
mov
xchg
dec
enter
int
cmpb
pop
mov
fsub
jle
push
fstl
sarl
xchg
dec
cmp
xchg
xlat
fwait
push
mov
jge
hlt
add
out
pop
sub
jmp
xor
out
xchg
and
or
sub
sbbl
mov
mov
xor
adc
lock
cmp
inc
js
insb
add
mov
jnp
mov
insl
ds
or
outsl
lock
call
dec
mov
cmpsb
lahf
fstl
ss
sti
jl
or
loopne
jno
cmp
add
jecxz
mulb
jl
imul
in
push
rclb
pop
ret
xor
adc
ja
call
daa
sub
aas
hlt
adc
cmp
lock
gs
cmpsb
xchg
add
push
shrl
stos
xor
xchg
arpl
or
push
pushf
cwtl
push
push
out
cltd
mov
inc
push
push
xchg
add
es
in
push
pop
ljmp
ljmp
sbb
test
test
sub
mov
call
addr16
rcll
fstl
adc
sbb
imul
rcrl
pop
inc
rcrl
xchg
test
and
in
dec
div
and
lcall
decl
sbb
cltd
jp
inc
push
jg,pn
out
add
dec
aas
out
xor
xchg
sbb
enter
lock
fidivrs
daa
or
push
jnp
psubq
or
in
arpl
popa
sbb
mov
xchg
add
pop
pushf
sub
cmp
cwtl
cmpl
adc
xor
jbe
pusha
movl
scas
mov
scas
lea
pop
inc
movsl
leave
push
mov
ljmp
mov
out
add
cmpsb
imul
dec
cmpsb
test
or
scas
dec
sub
pop
push
add
cmp
and
fsts
xor
push
rorb
hlt
dec
jnp
fidivrs
cmovb
cmp
lea
scas
loop
xor
pop
adc
dec
nop
out
xlat
mov
rcrb
push
dec
es
adc
aam
jno
dec
dec
xchg
sarb
jno
xlat
mov
adc
daa
scas
mov
pop
push
or
push
xor
sub
push
xchg
sbb
inc
test
in
aad
scas
ret
sub
add
cwtl
cmp
mov
xchg
xchg
lahf
push
cmpb
adc
gs
leave
aas
add
dec
andb
xchg
outsl
mov
push
mov
pop
js
mov
push
mov
imul
mov
fisubl
sahf
mov
aas
pop
push
sub
in
sub
pop
shll
sbb
or
sahf
xlat
and
jecxz
xor
rdseed
notb
hlt
mov
pop
add
popa
xor
stc
jbe
adc
inc
jne
xchg
fnstsw
xor
arpl
stc
in
xor
out
dec
dec
mov
bound
mov
les
int
mov
push
pop
dec
dec
push
outsl
popf
inc
loopne
pop
int3
sbb
popf
clc
sub
outsb
pop
adc
cs
pop
and
push
insb
icebp
insl
add
imul
inc
hlt
sahf
rorl
xchg
add
and
jb
clc
imull
mov
sbb
mov
jle
jbe
or
popf
insl
sbb
fnstcw
imull
mov
push
xchg
fisubl
movsb
inc
xor
cmp
iret
jae
mov
pushf
gs
adc
stos
jb
test
pop
pop
push
pusha
or
sarl
sti
fcomps
out
pop
add
cmp
sbb
aas
jp
jg
pop
xor
sti
push
inc
fldt
add
mulb
and
pop
pusha
popa
dec
fstpl
div
sub
jbe
ljmp
lret
adc
add
sub
push
popa
push
daa
cmpsb
das
xchg
adc
mov
into
push
mov
fcoml
push
jns
es
aad
sahf
push
push
mov
rol
in
dec
lcall
mov
xchg
std
or
dec
icebp
push
dec
sub
lret
lds
mov
es
fsubl
sbb
test
rcrb
bound
sub
xor
push
mov
push
shl
xor
pop
cmp
sub
push
cwtl
sbb
and
pop
addr16
subb
test
popa
mov
aaa
pushl
ds
add
jb
or
mov
ficoml
sti
and
lret
clc
ret
les
pop
push
xchg
and
aas
or
repnz
clc
sub
xchg
xchg
mov
xchg
push
cmp
ret
push
adc
ret
jmp
push
add
mov
push
mov
cmp
inc
pop
ss
inc
mov
jecxz
push
stc
stos
mov
popf
nop
or
ss
mov
ds
pop
sub
mov
push
data16
test
pop
pop
jbe
pop
loop
mov
loopne
loop
in
arpl
sub
xor
sub
inc
lods
inc
rcrl
jecxz
xchg
ss
sbb
dec
xor
sti
lcall
das
add
xchg
sbb
xchg
mov
push
out
cmp
push
inc
fimull
inc
push
fidivrs
mov
addl
out
fwait
pop
jp
add
out
jg
int
jnp
fdivrp
mov
sti
in
mov
sbb
sahf
xchg
mov
ss
add
cs
sbb
shll
jbe
cmp
test
ret
push
xchg
mov
jae
lcall
mov
push
das
cmp
pcmpgtd
cmp
mov
in
cli
lods
stc
pusha
inc
mov
adc
movsl
push
loop,pt
outsb
jae
sbb
loop
insb
fstpt
dec
sbb
fidivrl
adc
push
sub
into
pop
and
cmc
out
pop
xor
sarb
cs
pop
xchg
lcall
loopne
xor
mov
lds
adc
xchg
lret
mov
int3
jbe
lcall
or
mov
xor
xor
ljmpw
jp
push
xor
xchg
sti
push
lods
mov
js
pop
rcrb
inc
adc
cs
out
sbb
sbb
hlt
mov
or
lock
cmp
jmp
push
addr16
popa
fadds
add
lds
repz
and
xchg
imul
ljmp
mov
imul
into
hlt
push
call
es
dec
aaa
add
aaa
mov
adc
inc
call
push
dec
push
and
sbb
push
nop
adc
mov
push
ss
imulb
adc
stos
cmp
dec
psrld
jg
adc
push
jno
mov
pop
inc
out
inc
jmp
icebp
sub
jecxz
das
inc
xchg
or
dec
or
adc
push
xchg
push
push
inc
int3
pop
xor
rorb
push
aad
adc
adc
pop
cld
cmp
dec
js
and
xchg
mov
cmp
sbb
adc
scas
out
fsubs
stc
xchg
testl
cmpsl
adc
arpl
mov
lds
push
test
or
ss
bound
repnz
xchg
xchg
push
insl
sbb
pop
cmpsl
lea
xchg
mov
je
repnz
mov
xlat
lret
jo
mov
fisttpl
mov
mov
ja
aaa
mov
sub
sub
xchg
or
hlt
ljmp
add
jg,pn
hlt
aas
adc
push
mov
cld
dec
mov
lds
inc
pop
int3
pop
and
cmpsl
addr16
int
jge
loope
pop
loope
lahf
mov
fistl
and
mov
jno
push
push
xchg
adc
cmp
not
mov
neg
mov
cmc
imull
addr16
pushf
mov
jo
xchg
mov
jle
sahf
fdivrs
rcll
ror
loopne
or
or
sub
xchg
add
std
inc
out
data16
idivb
push
scas
ss
stc
mov
xchg
mov
jno
fucomp
xor
mov
jbe
fucomp
sub
enter
add
cmpsb
inc
mov
test
push
sbb
jne
cmc
test
aas
inc
add
out
into
out
lods
loop
mov
neg
sahf
das
cmp
jnp
sub
or
call
xchg
imull
sbb
pop
ljmp
pop
idivb
lcall
test
mov
adc
pop
and
fbld
int3
push
and
push
mov
cmp
cmp
jae
inc
and
rcrl
add
movsl
data16
out
xchg
and
adc
mov
out
push
dec
bound
xchg
or
lcall
aaa
cmp
push
pop
sahf
ds
scas
xchg
sbb
ja
sub
mov
ds
jb
xor
jp
pop
cmp
fs
and
movsl
in
lret
add
and
cwtl
pop
and
jmp
push
ss
fucomp
stos
popa
adc
and
inc
test
fstps
in
xchg
cwtl
mov
xchg
in
pop
pop
outsb
dec
mov
cs
lcall
cmp
rol
jb
sarb
adc
stos
mov
push
dec
cs
mov
push
ret
xor
xchg
jle
rorb
cmpb
xchg
push
mov
sub
pop
mov
xchg
pop
push
lret
jno
rorb
outsb
gs
pop
cmpsb
rorb
jbe
cmp
ret
mov
adc
cmp
xor
loop
jb
icebp
loopne
and
and
ja
out
and
dec
push
jle,pt
daa
push
fstps
and
outsb
jmp
testb
sbb
lods
out
scas
scas
out
mov
jg
jb
xor
and
std
mov
mov
xor
bound
mov
fsubrs
mov
mov
xchg
ss
sub
fstps
sub
mov
mov
lock
les
aam
jg
test
addr16
sahf
pop
pop
mov
out
add
cmp
loop
jae
xor
xchg
in
les
je
hlt
add
adc
dec
cld
xchg
xchg
mov
imulb
add
outsb
and
xlat
add
mov
lcall
jp
push
aaa
repnz
cmp
xlat
or
es
jno
jle
mov
push
sub
cli
int
fs
cmp
push
in
lret
fsubrl
push
xchg
push
inc
add
push
loop
cli
outsb
push
fildl
aad
and
cmpsl
xchg
scas
xchg
mov
insb
add
jle
mov
sti
out
or
dec
sbb
ljmp
mov
test
xchg
pop
cmp
addr16
loope
push
out
cs
dec
ja
cmp
mov
xor
js
imul
rcrl
mov
mov
insb
es
cwtl
test
call
cltd
push
loope
fwait
icebp
imul
pop
pop
fistpl
lds
movsb
jl
mov
mov
xchg
fidivs
lcall
mov
dec
cltd
loop
in
icebp
pop
fsubs
and
shrb
pop
fdivs
push
xor
pop
mov
mov
cmpsb
sahf
mov
je
cmp
or
add
rolb
jl
shlb
jns
xchg
sbb
lods
rolb
loop
out
imull
ret
jb
repnz
das
push
sub
sahf
out
in
cltd
out
sub
fldenv
cmp
rorl
push
ficomps
dec
fwait
hlt
dec
push
adc
je
pop
in
gs
into
movsl
fnstcw
push
sub
bound
and
pop
sbb
push
loope
stos
mov
aam
lret
repnz
push
cmp
or
adcl
adcl
sub
sub
cli
xchg
xchg
fistps
lahf
adc
stc
lds
pop
or
jns
es
loop
insb
cmp
fbld
out
sub
and
sub
sbb
nop
clc
fbld
or
adc
shrl
jmp
ds
sbb
std
mov
dec
inc
ss
pop
notb
lods
push
scas
xor
or
cmp
popf
xchg
addr16
clc
mov
cli
repnz
dec
jge
call
leave
insb
fsubl
aas
repnz
jb
mov
loopne
mov
outsl
or
push
and
fwait
in
sub
mov
or
lea
pop
popa
mov
idivl
xor
push
push
arpl
insl
dec
push
sub
adc
dec
push
sbb
popa
sub
mov
xchg
imull
rorb
inc
mov
jmp
jmp
add
inc
or
movb
jecxz
push
inc
jle
or
sub
and
clc
imul
les
mov
xchg
dec
xchg
cld
ret
lahf
sub
rolb
ds
xchg
jns
push
ret
and
icebp
jg
jno
pavgw
xlat
jne
leave
mov
lahf
daa
out
dec
xchg
in
mov
dec
fldt
test
mov
sub
inc
ficoml
sub
icebp
insl
dec
mov
cltd
adc
sti
fs
loope
pop
hlt
out
dec
mov
xor
xchg
out
fwait
lock
scas
pop
ljmp
mov
xchg
and
in
and
sub
mov
pop
rol
rcrb
push
fs
add
enter
cs
mov
ljmp
sub
push
enter
iret
inc
push
mov
mov
pusha
jbe
insl
xchg
push
cmp
sbb
ret
popa
dec
mov
mov
xor
dec
xorl
loopne
ja
push
push
or
sub
lds
iret
xchg
xor
dec
sub
xchg
ficompl
fistpl
stc
inc
mov
addl
adc
faddl
out
cmp
repz
pusha
outsb
scas
push
xchg
cs
xchg
or
mov
pop
ss
ret
mov
mov
sahf
push
leave
xchg
mov
ljmp
push
fwait
pop
dec
jp
pop
outsb
in
in
add
jbe
mov
xchg
loop
clc
mov
ds
xchg
fbstp
aad
pop
lds
leave
xchg
nop
shl
push
dec
cmpsl
ja
mov
idivb
xchg
jl
mov
lret
mov
push
movl
pop
sbb
and
call
idiv
jbe
repz
repnz
xchg
iret
aas
data16
mov
xchg
pop
sub
dec
dec
fidivl
add
in
mov
orl
repnz
cmp
adc
and
add
xor
adcb
shrl
clc
and
sahf
dec
movsb
int3
imul
cs
out
stos
cmp
mov
push
rol
dec
lods
adc
jp
lods
mull
xchg
fimuls
push
inc
xchg
sti
mov
pushf
mov
sarb
push
call
test
or
lock
mov
mov
lahf
mov
ret
int
lods
out
rorl
hlt
negb
rcr
jge
aad
pop
xchg
lods
xor
dec
js
pop
jns
cli
les
mov
push
xchg
mov
inc
inc
sub
cmpsl
fidivs
lock
pusha
fidivrl
sbb
pop
xor
into
xchg
dec
aam
jb
into
dec
jle
jns
rcrb
daa
sti
mov
xchg
gs
call
pop
gs
sbb
inc
out
out
out
lea
out
mov
xor
fs
and
lcall
popl
cmpl
cmovnp
cmp
xchg
out
imul
sbb
cmc
addr16
out
ss
fstpt
gs
mov
pop
mov
out
jbe
int3
add
fwait
push
cli
add
mov
push
pop
jne
mov
xchg
lods
dec
jl
cmpsb
pop
int3
jbe
mov
jb
mov
lret
push
adc
fldenv
mov
add
push
arpl
add
mulb
sbb
int3
arpl
dec
mov
inc
das
das
cwtl
imul
mov
lods
dec
push
xchg
and
movsl
ljmp
lods
outsl
and
mov
cmpsb
ret
sub
sbb
orl
mov
ds
mov
sub
mov
adc
add
in
jge
hlt
push
addl
pop
inc
cmp
mov
xchg
and
stc
add
ret
push
aad
cmp
mov
test
into
ja
xor
sbb
cmp
insb
cld
imul
push
ficoml
data16
mov
lock
adcb
push
inc
outsl
mov
mov
mov
loop
sub
push
fisttpl
sbb
adc
je
or
cmc
mov
stos
pop
or
xchg
mov
push
pop
push
pop
loop
sbb
cmp
mov
outsl
call
add
xor
mov
pop
in
and
stos
xlat
mov
sbb
js
jge
mov
inc
cmc
shlb
sahf
loop
or
sbb
adc
inc
pop
push
or
out
pop
and
andb
imulb
movsl
push
fs
testb
mov
rolb
imul
sbb
or
lcall
adc
jne
mov
fdivr
iret
call
dec
cmpsb
daa
fldenv
mov
inc
push
xor
mov
jne
add
movsl
jnp
xchg
aas
sarl
daa
dec
sub
lea
sub
ret
sub
data16
or
mov
inc
pop
mov
lahf
push
imul
lret
ficoml
cmp
cmp
add
js
inc
jg
out
adc
xor
or
inc
dec
pop
push
ret
pop
push
jecxz
leave
dec
imul
sahf
jmp
push
sbb
add
inc
pop
fcmovbe
fistl
dec
mov
scas
push
je
clc
push
repnz
xchg
cmp
sahf
mov
lret
pushf
jle
or
add
aaa
xor
loop
sbb
lcallw
inc
out
pop
jb
sub
xchg
pop
rcrl
out
mov
adc
pop
out
xchg
pop
jb
xor
out
mov
fcom
pop
dec
mov
sub
incl
push
addr16
push
xchg
jge
push
xchg
dec
loop
pushf
insl
dec
sbb
push
fs
push
sahf
ljmp
push
push
push
arpl
rcr
dec
divl
arpl
out
loope
cld
jg
dec
inc
jb
mov
ljmp
push
fildll
xchg
scas
imul
inc
add
mov
jns
fisubrl
mov
in
fwait
xchg
int
mov
dec
dec
popa
xor
syscall
repnz
ret
scas
push
into
pushf
push
adc
jge
xlat
stos
lea
jae
pushf
test
pop
mov
ljmp
push
js
and
xor
sub
pop
push
arpl
fsubl
mov
faddp
jns
adc
cmp
jno
mov
stos
sbb
push
adc
sbb
dec
jge
pop
adc
movsb
addb
push
sbb
cmp
jnp
ja
add
jecxz
gs
out
arpl
sbb
daa
jo
icebp
xor
cwtl
shll
repnz
push
jmp
cmpsl
jae
dec
and
mov
ret
mov
pop
sub
xchg
dec
int
lds
ljmp
push
fisttpl
push
addr16
lock
lea
mulb
dec
aam
dec
out
enter
adc
mov
cmp
movsl
xlat
mov
sbb
and
sbb
loopne
dec
push
adc
and
cmpsb
mov
xchg
out
push
pop
sti
or
and
pop
ljmp
jnp
loop
aam
lock
inc
adc
xchg
xchg
dec
sbb
cwtl
out
mov
adc
in
mov
xor
dec
push
cmp
xor
and
mov
jb
addr16
iret
int3
mov
push
sbb
mov
fdivrl
sbb
das
fwait
inc
and
scas
mov
adc
adc
push
shl
stc
rcrl
pop
lahf
lea
xor
adc
cmp
pop
je
loop
pop
jg
add
push
or
push
les
cmc
pop
add
push
lock
lret
mov
pop
mov
icebp
and
inc
mov
pop
xor
inc
into
inc
add
pop
mov
and
xchg
push
je
pop
xorb
pop
sbb
stc
pop
arpl
call
pop
and
inc
xor
cmp
lahf
test
and
aas
pop
arpl
arpl
mov
mov
pusha
push
je
pop
mov
inc
aas
inc
sbb
mov
negb
in
insb
sbb
daa
or
pop
sti
stc
xchg
xlat
push
cs
cmpsl
incl
cmp
dec
loope
inc
sbb
nop
movsl
sti
jmp
push
dec
data16
pushf
or
scas
sbb
xor
cwtl
sub
mov
jge
stos
or
rcrl
fisubl
adc
adc
xchg
imul
ret
test
js
lods
cltd
sarb
sbb
or
das
loope
cltd
mov
sbb
jb
mov
inc
je
test
xor
sub
adc
ret
push
insl
dec
xor
jl
mov
sahf
add
xor
imul
outsb
push
cltd
leave
mov
add
pop
inc
div
scas
xor
adc
jno
pop
pop
lret
or
push
ljmp
stos
xor
dec
call
enter
lea
popf
test
fisubs
cmp
out
insl
sbb
orb
mov
and
cmp
aaa
or
std
push
inc
out
sbb
enter
iret
mov
add
mov
mov
cmp
or
push
rcll
cli
in
mov
xlat
cmp
mov
xchg
xchg
es
je
lea
not
ret
sbb
enter
xchg
cmp
pop
mov
jno
push
ds
mov
or
sbb
sub
xchg
and
dec
cmp
push
clc
lea
jmp
or
ja
aas
jb
ljmp
dec
in
ret
sbb
cs
addr16
daa
and
popa
cmp
jl
mov
xchg
andb
inc
repnz
sbb
dec
or
ret
hlt
push
cli
xor
testl
rolb
loope
xor
xchg
and
cli
and
or
cmp
out
xchg
mov
and
push
dec
jo
adc
push
xchg
jge
adcb
pop
in
dec
pop
adc
and
movl
cmp
sti
dec
dec
shl
xchg
loope
and
stos
fmull
fwait
pushf
add
scas
cld
fnstcw
ljmp
cmpsb
cmpsl
cli
insb
iret
outsb
and
mov
sbb
xchg
lret
or
pop
push
icebp
add
pop
pop
sub
sbb
mov
xchg
outsl
sti
add
and
fistps
ret
push
jg
push
or
or
fwait
dec
pop
mov
sbb
mov
js
sbb
pushf
cmp
lea
pop
and
popf
bound
adc
pop
jmp
sbbb
ret
mov
pop
jmp
popa
jne
fldenv
push
add
push
testb
mov
iret
cmc
and
int
jo
adc
lret
sbb
dec
js
lds
mov
cmpsl
adcl
imul
rcll
adc
mov
fnsetpm(287
cmp
sahf
dec
add
lcall
dec
or
adc
outsl
icebp
mov
pfcmpgt
cld
jns
icebp
daa
add
xchg
cwtl
into
xchg
add
dec
mov
icebp
and
shll
adcl
cmp
sti
mov
pop
mov
mov
push
sub
cmc
into
mov
adc
rol
mov
psubusw
mov
mov
jmp
lds
adc
into
xchg
pop
orb
jbe
jmp
hlt
push
lcall
push
xchg
pop
ds
fildl
je
lret
adc
mov
loop
or
mov
addr16
frstor
pop
lahf
adc
aas
dec
fldl
fisttps
jp
xchg
aas
ljmp
aas
mulb
out
add
sbb
push
pusha
int3
mov
ljmp
pop
popw
jecxz
push
stos
sbb
loope
outsb
push
fisubrs
inc
hlt
js
je
sbb
inc
ret
push
addr16
pextrw
push
xchg
mov
push
aam
mov
push
and
pop
pop
or
icebp
pop
push
mov
lds
scas
outsl
mov
xor
adc
pop
int
ja
xor
insb
outsb
psrad
fsubrl
mov
fcompl
inc
fistps
testb
arpl
mov
mov
fdecstp
pusha
and
pop
ret
push
mov
fiadds
and
push
mov
sarb
leave
pop
mov
xorb
add
movsb
out
xchg
mov
mov
cwtl
sbb
fcoml
xor
shrb
add
push
mov
mov
sub
pusha
cmp
mov
stc
xchg
stos
mov
in
lock
dec
test
or
paddd
ljmp
iret
mov
adcl
out
cmp
sbb
xchg
jecxz
dec
incb
jp
inc
lods
fimuls
sub
fstps
cmp
inc
xlat
not
loope
addr16
xchg
es
in
cmc
and
or
jge
xor
scas
pop
dec
icebp
jb
fidivrs
sahf
cmp
mov
pop
fwait
jbe
and
jl
wrmsr
ds
inc
rcr
testb
loope
dec
inc
fstpl
xchg
push
mov
les
push
xor
dec
rorl
push
decb
outsl
sbb
pcmpgtd
xor
in
lds
mov
mov
addr16
fstpl
in
lret
xchg
ds
testb
cmp
jmp
movsb
ficomps
adc
rcrl
pop
push
fldl
shlb
mov
push
sti
popa
jbe
in
dec
outsb
lret
add
aas
movsl
inc
jo
sub
or
nop
into
mov
sbb
and
sti
mov
add
mov
icebp
jns
inc
incb
or
out
imul
gs
fdivp
inc
or
aas
sub
ret
popa
loop
fwait
push
lods
push
sbb
stc
mov
or
mov
push
pop
loop
pop
adc
mov
movsb
addl
iret
inc
mov
dec
call
movb
loope
in
xchg
xor
xor
sbb
push
imul
xchg
sub
dec
movsl
bound
mov
pop
jg
jecxz
movsl
and
pusha
sbb
shrb
jecxz
jmp
mov
ljmp
dec
lock
in
cmc
push
mov
fs
pop
insl
pop
imul
popf
inc
fisubrs
nop
adc
push
sbb
xchg
jbe
imull
rcrl
bound
mov
inc
mov
adc
lea
mov
fcomps
dec
push
fcom
adc
aas
aam
fwait
mov
sbb
sub
mov
lods
mov
imul
cmpsl
pop
repnz
sahf
jmp
cli
inc
int3
cwtl
aam
loop
out
outsb
fidivl
cmp
pop
or
jle
and
lea
mov
mov
sahf
dec
aaa
push
aam
fnstenv
push
in
imul
addl
pop
cli
repnz
cs
jbe
or
push
fs
sbb
loopne
aaa
inc
loopne
cmp
jecxz
pop
addr16
inc
fdivp
rcll
sti
icebp
std
push
jge
adc
stos
and
lea
movsl
popf
cs
or
inc
push
push
in
fs
push
sub
jge
add
or
lock
and
pop
pminsw
xor
out
out
out
xor
sahf
rorb
andb
mov
cmp
add
pop
xor
dec
lret
dec
data16
mov
push
movsl
std
xor
mov
sub
jno
arpl
mov
sbb
roll
outsl
pop
popf
or
pop
push
repz
scas
gs
addb
arpl
roll
add
jbe
pop
sahf
test
dec
repnz
or
das
xchg
outsl
lock
and
fsubs
imul
xor
jg,pt
rorb
loopne
adc
out
mov
push
mov
stos
cld
test
pop
xlat
pop
lahf
jle
frstor
xchg
push
leave
cld
loop
dec
add
sarb
loopne
into
insl
pop
dec
jle
or
mov
mov
mul
test
fisubl
add
lock
scas
mov
lahf
xchg
cltd
movsl
inc
xor
movsl
jne
mov
jecxz
dec
in
inc
dec
repz
fidivrl
and
jbe
sub
add
enter
pop
sahf
push
jmp
and
pop
push
aas
xor
add
lcall
sub
rcrl
pop
xchg
das
mov
pop
mov
xchg
arpl
cmp
fldt
jae
mov
adc
es
mov
out
mov
pop
xchg
mov
dec
inc
daa
adc
xchg
and
in
jmp
inc
jl
push
ss
jmp
add
inc
mov
sahf
push
fimuls
pop
imul
fscale
sarl
push
repnz
xchg
loop
pop
inc
inc
add
sub
mov
cmp
sbb
mov
aad
mov
add
inc
pushf
mov
mov
pop
aad
repz
test
in
aas
or
in
xor
pop
or
popf
cmp
mov
jo
jb
das
add
add
imul
sbb
cmpsb
pop
and
es
jne
sub
mov
rol
inc
pop
popf
adc
mov
push
int3
call
jmp
lds
sbb
dec
dec
fisttpll
outsl
sub
cmpb
pop
imul
adc
sub
inc
push
sbb
out
es
cmc
ds
push
dec
lds
orl
xlat
pop
jmp
push
push
repnz
xchg
push
ffreep
inc
ret
sbb
mov
sbb
lods
mov
push
and
cli
ret
sbb
outsb
lock
out
ret
dec
in
jbe
loop
sbb
fcomp
jp
data16
ljmp
pop
adc
cs
adc
mov
into
push
mov
sub
push
jbe
clc
or
jmp
inc
xchg
sub
xor
adc
out
or
mov
cli
dec
arpl
xchg
and
fstpt
add
cmp
xchg
dec
lock
mov
mov
sbb
xchg
dec
push
push
jle
xbegin
dec
and
add
aaa
ljmp
bound
out
and
into
jbe
mov
repnz
fstenv
xor
sub
sub
push
pusha
sub
pop
ljmp
jb
rcrb
sub
enter
negb
inc
pop
mov
ljmp
xchg
mov
or
aam
rorb
adc
jp
inc
jp
cs
in
addr16
dec
enter
xchg
insl
les
cmp
cld
xchg
pop
int
mov
movsl
jg
lret
orb
ret
in
cmp
adc
out
popf
out
ret
inc
dec
stos
mov
push
lcall
xor
cli
aaa
cld
mov
sahf
into
mov
adc
push
xor
mov
xor
and
stc
rcrb
out
inc
jbe
push
aas
pop
daa
orl
mov
outsb
xchg
dec
dec
xchg
inc
mov
lret
mov
sbb
inc
dec
stos
rolb
jns
sub
inc
push
push
mov
cld
lret
push
cltd
push
push
cmp
je
fdiv
icebp
scas
sahf
xlat
inc
shll
mov
and
push
fistpll
scas
xlat
repnz
xchg
jmp
mov
sub
shl
cld
fmuls
and
adc
and
notb
mov
in
mov
imul
cltd
scas
inc
xorb
je
cltd
not
xor
out
adc
push
bound
mov
jbe
push
pop
jb
fcoml
xor
mov
jmp
adc
adc
jge
add
pop
dec
jg
pop
sub
inc
mov
icebp
push
push
xor
sbb
mov
in
ret
adc
or
lods
push
leave
sbb
jnp
sub
xchg
add
sub
clc
aas
fisttps
mov
dec
lret
cwtl
mov
pusha
mov
xchg
push
adc
jecxz
inc
test
pop
pusha
lcall
int3
aaa
mov
lock
frstor
js
dec
insl
loop
mov
stos
jno
ds
or
mov
mov
imul
fstpl
inc
cmp
test
push
push
aam
sub
or
cli
rdmsr
lods
cmp
mov
cmp
mov
pop
lcall
sbb
xchg
and
mov
lods
mov
in
sbb
fiadds
les
dec
lods
int3
jno
push
adc
scas
inc
icebp
push
xor
add
jmp
push
mov
imul
dec
jae
push
fistpll
loop
xchg
pushf
push
sub
cmp
or
adc
sub
add
stos
jne
fidivs
ret
ficoml
and
loopne
pop
in
test
push
dec
or
mov
fisubrs
scas
push
cld
xchg
test
xchg
dec
cmpsb
std
enter
movb
mov
and
mov
shrl
loopne
ljmp
xchg
mov
adc
sub
mov
sub
xchg
dec
cmp
lret
fs
not
mov
psubsb
adc
pop
pop
ja
push
iret
cwtl
xchg
dec
loopne
jno
sbb
mov
pop
adc
out
sub
repnz
rcll
jecxz
push
push
jb
out
inc
je
jle
mov
mov
insb
sub
jns
ljmp
lods
jecxz
jecxz
and
pop
inc
fcmovbe
and
out
push
push
dec
dec
stc
aas
add
bound
xchg
push
repnz
dec
out
push
cmpb
lods
xchg
add
push
push
or
outsl
stc
cmpsb
fldt
cli
insb
adc
arpl
push
hlt
inc
xchg
fcompl
sti
incb
in
sub
mov
adc
mov
push
sarb
sbb
pop
int3
adc
lahf
jb
mov
or
sbb
aam
pop
fmuls
adc
hlt
pop
ds
push
daa
and
arpl
push
xchg
hlt
enter
sbbl
sbb
jp
negl
adcb
lret
cld
dec
rorl
mov
addr16
das
jns
popa
rclb
xchg
lahf
mov
movsl
sub
scas
add
pop
fnstenv
movsb
jnp
or
in
clc
adc
jmp
fsub
lock
loop
sub
push
jae
jl
andb
fbld
test
mov
bound
pop
sti
pop
push
or
es
xchg
xorb
xchg
pop
outsb
mov
jne
shrl
or
jle
pop
les
mov
xchg
xchg
andl
pop
shlb
inc
cmp
inc
xor
ljmp
lock
and
out
cmpsl
mov
add
fdivs
loop
sbb
mov
cmp
xor
psubsb
sbb
sbb
fnstsw
mov
sti
sub
adc
cwtl
pop
push
lret
xchg
scas
mov
in
jbe
frstor
leave
neg
fidivl
pusha
fwait
and
xchg
jl
cmpsb
push
xchg
mov
mov
jns
xchg
adc
cli
inc
shrl
jnp
add
xchg
jne
push
jnp
fiaddl
xor
dec
sbb
xchg
aas
dec
xchg
loop
icebp
and
or
ret
xchg
aad
loope
ds
addr16
cmp
mov
dec
sub
inc
loopne
dec
idivb
mov
mov
push
test
iret
call
xchg
lea
mov
filds
icebp
lcall
rclb
iret
sbb
inc
add
push
sub
cltd
rcll
cmp
jno
sbb
faddl
xchg
ljmp
or
lret
fbld
pop
ljmp
fnsave
in
je
nopl
mov
jg
lahf
cmpsl
sub
push
dec
sarb
les
pushf
xlat
dec
jns
test
mov
fidivs
cli
mov
cmp
cmpsb
push
pop
ret
push
xor
xlat
das
ds
jbe
std
mov
aas
or
push
mov
add
jecxz
inc
inc
cmp
lds
lods
pop
pop
repnz
xor
fsts
dec
jmp
outsb
xchg
mov
push
lret
js
sar
movsb
ds
repnz
sbb
std
xchg
lret
std
push
inc
ret
push
popa
or
movups
jp
pop
dec
inc
das
popf
adc
loopne
inc
or
xchg
jg
insl
inc
mov
dec
xchg
adc
mov
arpl
fdivs
in
sbb
push
lcall
shll
xor
fistl
addr16
int3
in
rcr
out
cltd
lret
inc
fwait
out
xlat
fdiv
out
sbb
add
aam
shll
inc
add
std
or
adc
add
and
push
and
mov
adc
test
adcl
cmp
sbb
ds
adc
mov
sbb
imul
pop
rorb
jmp
xchg
loopne
lret
cmc
pop
lea
sbb
dec
push
mov
sub
lock
rcll
xchg
rolb
addr16
mov
or
popf
lods
jae
push
or
xchg
or
mov
mov
add
int
fdivl
mov
inc
mov
pop
sub
dec
jne
rcrl
mov
jo
pop
jmp
hlt
fsubrs
jo
sbb
sahf
pop
jg
add
daa
sbb
rolb
sbb
cmp
adc
xchg
cmp
xor
dec
shll
mov
std
rcrb
push
cli
insb
mov
xor
out
out
and
addr16
mov
adc
inc
jmp
add
outsl
add
jno
xor
pop
xor
mov
mov
jl
or
test
and
pop
sarl
xor
mov
imul
pop
pop
dec
iret
stc
push
enter
xor
aaa
mov
addr16
or
sbbl
pop
add
lds
jp
dec
das
movsb
fadds
leave
stos
fcomps
mov
cmp
sti
mov
or
in
cmp
es
xlat
divb
fisttpll
sbb
pop
cmpsl
ljmp
ret
sub
movb
push
pop
add
aas
aas
sbb
andb
iret
out
aam
test
int3
out
dec
repnz
jne
sbb
or
lcall
insl
xor
loop
dec
pusha
mov
cmp
mov
mov
jae
out
arpl
push
aaa
xchg
cltd
lock
dec
add
mov
std
out
add
mov
insb
pop
fisubl
lds
push
xchg
fmul
stos
pop
pop
dec
mov
push
js
js
fldenv
cltd
adc
cltd
ds
mov
clc
popa
das
lock
aaa
out
test
in
imul
push
pop
popf
adc
in
and
into
ss
mov
adc
xchg
pop
insb
adc
ror
cmp
add
xorb
or
ficoms
loop
nop
dec
sbb
jmp
push
fucomp
pop
mov
in
fstl
test
lret
mov
movsl
enter
pop
lock
add
inc
push
in
insb
mov
mov
out
repnz
adc
push
popl
jne
loopne
in
fdivrs
dec
pop
jns,pt
push
jle
sarb
test
cltd
pop
add
gs
imul
icebp
jmp
mov
inc
cli
sbb
sub
stos
mov
fistps
or
sbb
repnz
pusha
cltd
mov
test
or
mov
mov
jns
rcrb
sarl
xchg
cmc
scas
in
insb
clc
and
movsb
ds
mov
lds
rorl
and
add
jmp
xor
gs
or
mov
lods
mov
cmpsb
iret
popf
pop
pop
fstps
add
or
ffreep
and
repz
push
push
int3
mov
pop
jnp
sbb
dec
ljmp
push
js
fistl
and
fs
adc
cmp
and
xchg
pop
repnz
ret
xchg
mov
push
ret
jg
jle
imul
adc
scas
fimuls
cs
dec
imul
imul
loop
pop
lock
fiadds
shll
cmpsb
lds
cmp
loop
push
in
ror
or
dec
fst
inc
mov
mov
jg
adc
mov
outsl
sbbl
jbe
fldenv
jge
repz
orb
sbb
sbb
imul
dec
dec
icebp
inc
adc
scas
movsl
dec
xor
gs
or
pop
bound
std
adc
pop
sbb
jmp
dec
and
ss
adc
dec
loopne
jb
fwait
pop
decl
or
sub
cmp
cwtl
push
test
repnz
jle
xchg
repnz
push
cmp
mov
or
push
xor
sub
pop
vdivps
adc
sbb
ficompl
lret
aad
xorb
xchg
push
mov
ret
inc
dec
jecxz
add
mov
pop
mov
xor
inc
call
lock
fwait
mov
call
ss
xchg
pop
mov
nop
gs
mov
add
pop
jb
repnz
push
xchg
inc
into
pop
push
push
iret
aaa
jbe,pn
fnsave
out
aad
shr
xchg
lds
cmp
mov
adc
pop
cli
or
in
sarb
pusha
enter
inc
mov
fwait
addb
aas
outsl
pop
loop
lret
add
add
mov
dec
push
cmp
xchg
pop
jecxz
dec
cwtl
iret
aas
fcmovu
inc
jnp
fcmovu
cld
in
cmc
es
pop
fadds
sbb
xchg
or
push
in
pop
push
lret
bound
test
out
pop
pop
cli
dec
outsl
loope
dec
mov
mov
push
fs
jae
xchg
cvtpi2ps
xor
jmp
cmp
jo
mov
pusha
fsubrs
stc
jnp
push
mov
or
xchg
pop
jge
mov
pop
or
enter
sbbb
aam
mov
and
leave
adc
pop
fwait
xchg
cmpsl
cmpsl
adc
pop
mov
testl
mov
xor
adc
add
popa
aaa
jnp
cs
mov
test
pusha
nop
out
gs
pop
pushf
ja
dec
adc
xlat
idivb
jmp
and
and
dec
lret
movsl
icebp
mov
push
push
cmpb
cs
add
stc
rol
cld
sbb
sbbl
dec
xchg
push
cmp
cmp
fcomi
jmp
push
cmp
sbb
je
test
xchg
mov
decb
pop
cmp
mov
and
aas
or
roll
rol
mov
xchg
shl
movsb
push
das
bound
dec
jge
faddl
out
push
or
mov
vfnmsub231ps
push
out
ret
mov
inc
inc
jp
lcall
sub
pop
js
icebp
orb
call
inc
fsubs
inc
push
push
stos
fwait
cli
cmc
and
jb
mov
xchg
gs
leave
or
in
pop
inc
clc
sub
daa
push
test
clc
inc
iret
sbb
xor
mov
sbb
pop
rorb
mov
sub
dec
aas
push
mov
ja
clc
loop
out
enter
je
mov
mov
and
mov
fistpll
adc
pop
mov
sbb
jmp
rcrl
dec
das
popa
imul
mov
lods
and
testb
jbe
xor
fisubs
clc
lret
pop
loope
pop
cmpb
mull
mov
sbb
xor
jbe
in
and
call
push
pop
push
popw
int
enter
adc
stos
in
sbb
mov
lret
js
jne
stc
ds
sub
pop
sarl
pusha
pop
mov
es
jecxz
or
jns
pusha
sub
inc
add
dec
decl
add
js
or
popa
lods
or
int3
push
mov
mov
ljmp
mov
jb
adc
cmp
fldenv
sub
jg
lcall
pop
ds
mov
push
and
and
sub
pop
push
iret
push
mov
xchg
testl
notl
push
cmp
cwtl
jl
ficompl
lea
xchg
lahf
dec
repnz
cmc
xor
lds
adc
xor
daa
inc
cmc
cmpsb
rclb
iret
dec
lods
lahf
mov
lahf
lret
mov
add
adc
fsubrl
push
xor
and
mov
ljmp
out
sbb
xchg
dec
sbb
mov
cmp
adc
cmp
cmp
pop
mov
out
sub
rcll
jns
and
cmp
pop
test
inc
adc
sub
and
data16
or
out
mov
faddp
or
dec
mov
sub
es
cmp
lock
imul
xor
mulb
or
cmp
jne
mov
cmp
adc
in
popf
lds
lret
imul
int3
sbb
leave
xchg
das
xor
inc
dec
fisubrl
cmp
or
dec
mov
imul
jb
inc
adc
sub
ret
and
mov
jg
mov
xor
inc
repz
mov
xor
imul
das
adc
sbb
adcl
in
lcall
rcll
adc
pop
push
sbb
and
in
xchg
pop
mov
and
iret
mov
aaa
stos
les
fdivr
jge
and
and
add
pop
push
testl
mov
das
adc
ss
lods
outsb
stos
into
mull
out
cltd
jle
xor
mov
mov
push
or
das
outsb
rcrb
jns
cmpsl
fs
push
pushf
in
sbb
jg
or
pop
add
xlat
scas
into
mov
inc
mov
push
xchg
xchg
mov
xchg
push
lret
or
sub
ds
mov
aam
xor
pop
in
mov
adc
data16
mov
loope
cltd
mov
addr16
mov
sub
inc
aas
and
test
sbb
xchg
mov
xchg
idivb
cmpsl
repz
jae
pop
sbb
or
mov
xchg
clc
mov
iret
gs
dec
lret
mov
xchg
or
es
ds
fwait
test
adc
mov
outsb
cmp
xor
in
push
dec
ffree
and
pop
mov
push
pop
inc
xchg
subl
xor
jb
pop
mov
mov
inc
sub
xchg
lahf
divb
cs
push
push
fistl
sbb
out
test
jns
imul
jecxz
dec
int
sub
xchg
hlt
ss
js
fmuls
je
movsb
es
int3
out
add
xchg
iret
cmc
mov
dec
mov
inc
div
mov
out
pop
arpl
and
ret
jle
mulb
mov
jmp
add
xlat
cmp
mov
sub
dec
sbb
dec
sub
sti
fstpl
fcmovne
pusha
scas
pop
dec
xchg
lcall
xchg
xchg
ljmp
xchg
rorl
dec
push
fbld
andl
inc
dec
aam
sahf
adc
mov
and
outsb
scas
loop
add
sbb
sbb
cmc
in
dec
dec
jp
fucom
std
test
dec
jg
mov
neg
adc
cmc
rcl
lahf
dec
mov
sub
popa
cwtl
iret
out
or
jns
imul
jb
inc
test
adc
sub
imulb
sub
or
dec
or
imul
icebp
and
loop
jbe
mov
and
fs
sbb
pop
fisttpll
ret
fs
mov
mov
adc
push
pushf
rclb
out
cmpsl
pop
fldcw
push
cltd
fdivs
repnz
cld
loope
test
shll
into
scas
subb
mov
popa
mov
fsubp
jge
dec
pop
jecxz
sahf
in
sbbl
mov
and
push
xor
mov
push
scas
inc
test
ret
test
jb
dec
push
lcall
stc
xchg
dec
call
paddw
dec
or
add
mov
sahf
adc
jle,pt
in
jp
mov
push
popf
lock
int
sub
cmp
xchg
scas
add
das
fwait
mov
mov
jle
pop
lock
gs
add
mov
xchg
inc
jnp
adc
push
push
rorl
mov
cmp
inc
jb
pop
xor
push
pop
xchg
inc
jae
in
dec
repnz
inc
cmp
pop
cmpsb
push
test
rcrl
pushw
pushf
mov
xchg
lods
aad
dec
add
es
or
sbb
xchg
sti
lods
ja
pop
aam
fnstenv
inc
and
ds
sti
gs
jle
sub
scas
cwtl
inc
test
insb
mov
pop
setg
scas
ret
add
xchg
jbe,pt
add
mov
pop
repz
daa
sbb
mov
push
xor
dec
fwait
xchg
push
pushf
inc
xor
dec
dec
pop
cli
and
std
iret
dec
mov
cwtl
add
mov
mov
pop
push
int3
aam
dec
aad
lock
inc
stos
inc
xchg
aam
insb
xlat
mov
sbb
subl
adc
sbb
fxch
repnz
int
dec
jo
cmc
dec
xchg
jnp
and
mov
int3
push
push
and
jecxz
in
mov
or
mov
dec
mov
pop
movsb
shlb
fistps
neg
mov
icebp
dec
adc
mov
aad
inc
bound
popa
lock
inc
ja
imul
pop
mov
xchg
adc
es
popa
mov
jae
ja
fcmovb
int3
mov
mov
imul
push
push
mov
adc
rol
popa
pop
pop
movsl
xchg
jns
add
dec
pop
lds
sub
or
jl
jnp
nopl
jno
xchg
mov
push
repz
cmp
icebp
mov
mov
jp
mov
sub
inc
test
call
test
in
pop
sub
sub
xor
sarl
inc
jg
dec
mov
loop
clc
adc
cwtl
mov
lret
lahf
jge
xor
fs
pop
divb
scas
mov
int
pop
mov
rolb
or
dec
pop
rolb
jnp
sti
add
scas
ret
jge
cmp
arpl
scas
sbb
rcl
inc
mov
std
or
jb
icebp
clc
pop
xor
inc
push
loope
pop
push
iret
lods
and
jnp
imul
inc
cmpsb
je
xor
mov
es
xchg
jp
mov
xor
ret
pusha
cli
mov
sbb
pop
aad
jmp
fdivrl
aam
lcall
mov
pop
push
xor
popf
dec
cs
and
or
mov
cmp
jle
cmpsl
aas
and
sub
int
lret
mov
popf
int3
jns
jns
pop
push
lods
dec
int
ss
xchg
mov
push
in
jg
out
lcall
xor
fscale
dec
ret
addb
push
iret
pop
stos
xor
mov
pop
push
nop
sbb
xor
mov
xor
sub
dec
jp
pop
repnz
cltd
ret
int
jmp
aam
jmp
push
shl
xor
das
rcrl
gs
inc
jp
xchg
enter
or
pop
fsts
mov
in
inc
inc
inc
aas
rorl
ljmp
int3
mov
adc
fildl
fmuls
movsb
fidivs
aad
vrsqrtss
sbb
xor
mov
movsl
cmp
or
mov
sahf
cmp
adc
ret
fxtract
test
push
andl
xor
cwtl
or
xor
call
addr16
fidivrs
xchg
push
out
inc
sbb
jb
repz
or
lret
and
lahf
loopne
in
or
test
rorl
inc
les
popa
fcoml
inc
sub
and
adc
dec
sub
pop
pop
popf
aam
fdivs
mov
cmpsl
xor
inc
mov
xor
add
les
adc
inc
repz
loop
into
imul
xlat
ljmp
inc
xchg
js
sbb
mov
mov
push
xor
adc
pop
fisttps
jno
adc
repnz
fimuls
sahf
pop
sub
xchg
sbb
fs
mov
sub
inc
adc
mov
cmp
dec
inc
loope
adc
pop
pop
push
cmp
pop
jb
push
xchg
clc
mov
imul
fsub
inc
mov
cmp
enter
xlat
xchg
xor
dec
sbb
pop
in
mov
inc
jbe
push
dec
jbe
mov
outsb
test
mov
add
lahf
nop
outsl
imulb
adcb
or
fdivl
dec
sub
xchg
push
and
xchg
movsb
das
ret
mov
adc
mov
adc
notl
int
mov
pop
dec
repz
xor
mov
fstps
es
jp
fwait
push
push
aam
inc
cmpsb
sbb
hlt
or
mov
jecxz
and
out
push
push
dec
fnstsw
push
dec
cmpsl
hlt
cmc
xor
jb
out
jnp
sbb
dec
xor
push
dec
push
out
add
dec
sub
or
push
sub
mov
pop
and
jbe
pop
in
repz
and
out
push
inc
jb
repz
inc
in
ret
mov
xchg
int3
lret
lods
adc
pop
mov
cmp
les
andb
push
sahf
lods
and
sbb
dec
in
clc
and
sti
or
and
lea
jb
clc
je
sbb
insl
mov
sbb
pop
movsl
pop
add
lock
pop
data16
lock
xor
mov
out
int
bnd
adc
jg
std
decb
test
dec
mov
repnz
inc
pop
out
or
or
nop
dec
mov
sub
aam
fidivl
cmc
pop
cmp
jns
add
pop
fisttps
or
push
xor
push
jl
pop
or
mov
sbb
xor
pushf
lds
cmp
mov
out
icebp
jmp
and
aad
ret
sbb
sbbl
sub
lds
std
push
in
xor
ret
mov
jnp
mov
xor
jl
sahf
out
pushf
mov
sub
cmp
fcmovne
xchg
sti
out
addr16
mov
sbb
sahf
mov
dec
sbb
or
xchg
in
or
sub
push
jne
mov
in
and
and
push
mov
xor
imul
std
cltd
jne
adc
add
sbb
inc
cwtl
std
add
dec
cmp
popa
mov
dec
or
add
xchg
scas
or
jo
push
dec
repnz
stc
vpextrw
lds
or
dec
ds
or
cmpb
xor
inc
pushf
es
sti
hlt
imul
mov
dec
xlat
cltd
pop
mov
sub
lock
sbb
xor
add
imul
lret
insl
movsb
mov
mov
push
xchg
js
leave
not
mov
fwait
mov
sbbl
fistpll
shll
mov
shll
jbe
xchg
pop
ficompl
inc
jmp
mov
push
mov
xchg
das
lds
frstor
sbb
dec
out
jmp
in
data16
in
ret
jno
out
arpl
sbb
lds
mov
aaa
out
push
cmpsb
xchg
int
jl
popf
les
rorl
mov
inc
mov
or
pop
jmp
cmp
mov
xchg
xor
push
and
cmp
in
data16
adc
cli
or
imul
mov
ret
cld
ret
cmpsb
insl
fnstcw
pop
insl
pop
das
addr16
bound
and
icebp
xchg
mov
adc
xor
mov
dec
jne
xlat
idiv
outsb
std
nop
pop
test
hlt
dec
adc
adc
add
arpl
cltd
jne
pop
shl
or
adcb
xchg
ja
out
dec
inc
push
mov
cmp
fnsave
ret
mov
adc
and
scas
jle
fistl
aas
adc
adc
cmpsb
or
or
push
pushf
xchg
mov
lcall
loopne
inc
jge
ljmp
mov
inc
stos
mov
xchg
cltd
aad
dec
sbb
sarb
add
addr16
add
push
adc
rclb
and
adc
mov
cwtl
jo
xchg
xchg
jb
xchg
lea
xchg
or
cmp
and
adc
jbe
cltd
jae
out
lcall
xchg
out
mov
adc
stc
inc
repz
and
aaa
lock
add
scas
jge
dec
rcrb
or
sti
push
mov
xchg
stc
popa
int
clc
fsubrp
shr
or
jle
mov
imul
mov
adc
xchg
pop
repnz
mov
addr16
in
dec
xchg
jge
movsl
add
inc
mov
arpl
jb
dec
mov
es
dec
aaa
push
idivl
jg
in
sub
hlt
addb
testb
cmp
test
das
aad
push
xchg
or
mov
stc
shr
pop
aaa
nop
daa
sbb
ss
call
aad
xor
insl
inc
mov
fstl
ret
jbe
stc
sbb
in
aad
mov
pop
pop
add
sub
sbb
cmp
xchg
pushf
mov
and
enter
gs
mov
dec
pop
cltd
shrl
ret
push
sbb
xchg
or
adc
mov
fldt
inc
mov
and
cli
sub
and
xor
pop
mov
and
xor
pop
push
pop
lret
and
mov
shl
in
mov
mov
test
push
mov
xchg
pop
inc
pusha
jmp
xchg
inc
dec
aad
sbbl
xchg
insb
mov
and
icebp
add
xchg
mov
pop
dec
pop
jp
xchg
and
notl
cmp
xchg
and
adc
dec
ret
push
mov
jae
mov
cmp
add
sbb
or
ljmp
sbb
nop
dec
mov
xchg
arpl
and
xchg
adc
cmp
jo
sub
push
int
jecxz
jecxz
sbb
add
mov
xor
ljmp
lods
push
lods
ret
sarb
jnp
testb
xchg
repnz
cltd
sarb
and
aam
repz
insl
and
sbb
push
pop
xor
mov
scas
stc
inc
je
push
addr16
sbb
into
xchg
mov
fwait
xchg
mov
fisubs
xor
pop
ja,pt
test
loopne
out
nop
cltd
push
loopw
xchg
sub
bnd
loop
sarl
push
dec
scas
fstpl
leave
les
stc
aad
push
cltd
in
bnd
jle
ss
mov
aaa
es
movsb
into
add
pusha
mov
mov
adc
sbb
int
xorb
mov
es
cltd
and
inc
stos
clc
clc
gs
pop
mov
mov
test
or
aad
xchg
adc
mov
xchg
xchg
add
insb
push
ficoms
sbb
pop
sbb
mov
sbb
inc
xor
xchg
mov
cmc
adc
inc
xor
mov
lcall
xchg
test
int
cmp
and
push
adc
sbb
xor
inc
adc
mov
dec
test
or
dec
inc
xor
jmp
sbb
bound
sbb
loope
mov
inc
add
add
or
xor
cmc
xchg
das
mov
xchg
ljmp
xor
add
jbe
orl
or
xor
jg
push
stos
push
out
mov
cmp
mov
xor
xor
fwait
mov
testb
mov
add
mov
cmp
popa
mov
inc
mov
xor
int
dec
cmc
or
es
xchg
enter
aaa
push
aas
mov
clc
xor
pusha
xchg
mov
aam
add
xor
ljmp
sbb
push
call
adc
inc
or
adc
pop
loopne
and
pop
xor
xchg
xchg
stos
lret
jns
fistl
cld
cmp
jns
sahf
stos
sub
xchg
push
sbb
cli
xchg
and
dec
add
inc
dec
xor
test
pop
in
sbb
outsl
mov
dec
jp
repz
pop
test
pop
aad
bound
orl
add
inc
push
xor
or
inc
dec
mov
cmovg
pop
jbe
adc
out
popa
and
mov
mov
xchg
popa
jmp
lret
shll
pop
sub
push
stc
sti
in
sub
xor
push
pop
and
sar
dec
nop
cltd
nop
jp
push
inc
mov
nop
mov
xchg
pop
pop
testl
pushf
push
faddp
dec
jp
inc
mov
aaa
push
mov
nop
or
sub
in
arpl
sub
fwait
mov
bnd
data16
dec
dec
mov
mov
mov
add
icebp
sbb
dec
dec
pop
inc
movsb
dec
int3
cmpsl
mov
xor
jl
stc
daa
pusha
fiadds
test
sbb
stos
cmp
movsb
testl
stc
in
lock
xchg
sub
mov
and
and
mov
mov
xor
push
sbb
lock
adc
sbb
mov
sub
sub
dec
sub
aam
and
scas
xor
dec
push
pop
mov
push
aad
mov
inc
fstps
movsb
lret
int3
pop
adc
gs
dec
hlt
sub
adc
fadd
loop
cld
push
dec
repnz
adc
jne
xchg
mov
push
mov
stos
lea
fcomp
push
adc
xor
imul
lea
ja
popa
insl
add
ret
arpl
jle
test
out
lods
in
jg
jecxz
sbb
orl
popa
pop
jle
or
mov
add
dec
pop
subb
rol
test
xchg
insb
nop
xchg
add
pop
dec
fsubrl
mov
out
pushf
out
in
jmp
sub
loope
ret
xchg
push
add
push
out
add
arpl
pop
cwtl
stos
push
jmp
dec
lahf
test
push
aaa
scas
loop
push
dec
dec
enter
or
roll
add
mov
jmp
mov
in
sarb
adc
pop
jg
scas
sbb
xlat
pushf
adc
dec
jae
outsl
xchg
daa
mov
pop
lea
pop
fstpt
adc
shrl
loope
inc
shl
push
mov
rclb
es
imul
ds
insl
cli
mov
push
aas
push
push
and
mov
and
or
push
pop
sbb
in
pop
pop
dec
push
inc
movsb
aad
or
jmp
mov
subb
std
cmp
push
mov
mov
outsb
adcb
mov
dec
call
dec
dec
out
mov
lods
mov
push
sub
cs
cmpb
sbb
in
stos
lahf
and
fcoml
scas
loope
push
sarb
leave
xor
jbe
cmp
adc
cmp
shlb
mov
add
ret
or
enter
jmp
fldl
xchg
ds
add
pop
sbb
mov
push
sub
stc
pushf
xchg
sarl
push
mov
dec
movsb
out
jne
mov
add
mov
xchg
mov
imul
mov
adc
and
dec
pop
rorb
push
lcall
mov
in
aaa
cs
inc
jp
dec
lret
test
add
aam
out
mov
fwait
imulb
cwtl
scas
or
xchg
mov
push
gs
jns
cmp
mov
xor
dec
adc
es
add
shlb
jge
xlat
sbb
jmp
stos
push
insl
lret
cmp
call
sar
jmp
sbb
jb
and
xor
sbb
mov
dec
pop
scas
sub
popa
lods
dec
mov
rcrb
fldcw
fsubrs
or
xor
and
and
inc
in
mov
lret
lret
and
sahf
push
xchg
mov
imul
arpl
pop
pop
mov
and
gs
dec
inc
lods
ss
dec
mov
jl
cmp
xchg
stos
mov
and
pop
insl
lea
mov
mov
je
andb
dec
cwtl
mov
sbb
mov
fsubrs
push
add
addb
dec
lock
pop
call
shll
inc
inc
mov
fisttps
outsl
and
xor
mov
inc
pusha
inc
out
or
pop
push
cmp
dec
shlb
test
push
adc
sub
push
gs
ret
dec
cmp
pop
frstor
dec
popf
fnstcw
mov
roll
or
cmpsb
and
stos
jne
push
testl
test
data16
enter
mov
pop
int3
pop
aad
jge
jl
insb
std
mov
jb
inc
aas
repnz
cmp
rorb
fptan
mulb
dec
jecxz
xchg
cmp
push
pop
adc
adcl
hlt
repnz
mov
pop
aas
aaa
dec
pop
pop
sub
jbe
xchg
in
stos
adc
into
fwait
loopne
fildl
add
adc
std
sub
aaa
es
mov
ret
fsts
lods
bound
nop
adc
and
adc
ds
mov
dec
outsb
fstps
pop
dec
dec
ss
vmovhps
stc
inc
fcoml
push
scas
in
dec
xor
outsl
and
cmp
add
adc
cmp
jge
mov
stos
jmp
sbb
lcall
int
jne
std
cwtl
dec
sbb
int
pop
push
outsb
ss
pop
xlat
dec
loop
es
cltd
mov
pop
pop
stos
or
out
addr16
mov
movsl
xchg
jne
push
dec
xchg
cli
in
xchg
add
es
cmp
jbe
or
mov
pusha
mov
lea
outsl
insl
push
dec
jo
call
ljmp
shlb
mov
pop
lea
jle
sub
inc
jbe
adc
out
movsl
push
and
push
jge
cmp
faddl
sbb
pop
or
fs
stos
and
rolb
shrb
mov
pop
jp
icebp
mov
mov
xchg
lea
mov
cmp
decl
inc
push
sbb
imul
out
testb
mov
adc
mov
in
sahf
lret
lods
adc
pop
movsb
xor
in
lret
rorb
dec
fists
dec
lret
ret
sahf
int
add
es
jbe
mov
icebp
dec
push
sbb
mov
inc
jecxz
movsb
shl
cmp
jo
cmp
jg
js
stos
mov
jbe
or
push
sub
xlat
jno
pop
add
out
inc
stos
test
scas
pushf
mov
push
and
test
ret
push
pushf
pop
lods
leave
adc
imul
cltd
xor
sub
ja
adc
lods
mov
add
jae
xor
mov
shrb
xor
push
and
xlat
movsb
push
int3
mov
das
pop
and
test
std
push
test
xchg
cmp
dec
lods
dec
std
add
mulb
jns
xchg
mov
scas
mov
lret
add
fstl
mov
addr16
pushf
test
into
test
push
cltd
or
mov
and
shrl
inc
lcall
adc
add
scas
add
push
in
cmc
jmp
mov
popa
dec
ja
imul
or
dec
or
stc
mov
fucom
adc
cmp
in
push
mov
jge
imul
sbb
xor
push
ljmp
and
ljmp
cmp
ljmp
xchg
add
cmpsb
testl
ds
aam
pop
push
lods
pop
xchg
xor
pop
sub
mov
mov
stc
sub
and
pop
pushf
push
ds
dec
or
sbb
inc
jmp
and
add
call
add
pop
insb
mov
pusha
movsb
aaa
or
and
dec
push
mov
mov
push
lahf
jl
pop
mov
xchg
ljmp
loope
pop
push
cmp
aam
add
pop
iret
in
lds
call
das
loop
int
or
ja
or
mov
sub
dec
lock
dec
sub
imul
faddp
sub
xchg
into
jp
mov
lods
adc
movsl
in
mov
loope,pn
push
push
ret
gs
leave
shll
jnp
add
mov
dec
call
cs
loope
scas
mov
jae
shrb
fidivs
mov
dec
outsb
or
scas
push
jp
stc
int
mov
xchg
aad
or
mov
cmp
push
and
push
and
aam
or
sahf
pushf
and
imul
and
mov
push
std
adcb
jg
cmp
dec
sbb
xchg
or
mov
dec
sbb
incb
lods
test
add
and
dec
sbb
mov
sub
xlat
jae
push
cli
lcall
notl
mov
jecxz
pinsrw
sbb
jecxz
enter
fisubs
mov
hlt
popa
dec
dec
sbb
gs
mov
out
aam
negb
inc
ret
xor
rorl
jnp
rorb
inc
xor
stc
jo
sahf
cmp
pop
dec
inc
rcrb
out
fwait
xor
dec
jae
setle
and
out
and
ret
shll
jp
fnstcw
mov
mov
xorl
pop
jle
loope
nop
or
lahf
cmc
or
ret
mov
adc
mov
rcrl
or
lds
fcmovnbe
les
mov
inc
rorl
frstor
loop
loop
scas
push
push
dec
jmp
push
jl
pop
das
movsb
cmpsb
adcl
pop
jbe
dec
cwtl
sub
jg
mov
mov
sub
popf
sbb
out
jg
psrld
dec
daa
ret
orb
pop
into
shlb
mov
sbb
pop
lret
fsts
push
sbb
jmp
push
push
lock
pop
add
aam
mov
mov
jecxz
mov
sub
mov
or
out
clc
jp
push
out
dec
sbb
and
mov
dec
call
push
ret
jo
sbb
push
add
dec
inc
pop
adc
dec
lret
call
mov
js
into
rcrb
and
ror
xor
or
mov
adc
lods
sub
int
nop
cltd
pop
shll
movsb
or
add
push
mov
xor
pop
cld
stc
aas
and
pop
stos
inc
test
or
jg
test
aas
addr16
inc
or
iret
adcl
aaa
lea
xchg
ds
push
sti
aas
sub
push
insl
test
sub
add
push
ss
pusha
fildll
imulb
in
pushf
jmp
movsb
pop
add
outsl
pusha
ds
fstpt
and
xchg
fsubs
sbb
sub
or
lock
jno
jmp
inc
aad
cli
jb
xchg
cli
mov
inc
adcl
clc
stos
jbe
outsb
nop
xchg
mov
fnstenv
jmp
jbe
pusha
test
shll
add
pushf
inc
cmc
pop
mov
and
xchg
andl
fistl
mov
int
pop
mov
adc
xlat
lahf
xchg
xlat
pop
test
xor
pop
outsb
leave
cmp
lods
into
dec
jmp
mov
imul
pop
adc
add
dec
in
inc
in
jno
pop
fstps
or
mov
xchg
pop
or
sub
and
fisubrs
cmc
int
in
sbb
jle
aam
mov
out
mov
out
clc
popa
sti
or
imul
and
cs
popa
jp
cld
aad
adc
pusha
fimull
faddl
add
jo,pt
out
cmp
jmp
ret
stc
sub
mov
push
stos
bound
push
lret
rcr
movl
into
push
push
sbb
push
and
jecxz
inc
std
add
and
rcrb
and
mov
stc
sub
and
or
notb
nop
cli
ficoms
dec
jle
mov
push
mov
cmp
dec
in
out
jecxz
adcl
shr
dec
subl
and
cmc
dec
pop
pusha
lcall
data16
aas
push
jb
mov
shll
sahf
repz
adc
push
mov
xchg
cmp
and
test
sub
push
lods
leave
pop
jle
adc
jae
jp
in
es
sub
inc
notl
ret
sahf
rcrb
and
mov
sti
jno
dec
cli
arpl
imul
ffree
dec
pop
or
imul
fcmovb
jb
les
sarb
pop
xor
fbstp
add
jl
mov
sahf
mov
js
ret
xchg
ficoml
rcrb
pop
pop
data16
addr16
popa
add
popf
push
test
fldenv
adc
pop
mov
cwtl
sahf
push
xor
xor
daa
lret
out
fstl
add
and
lds
xchg
jge
jmp
sarb
inc
leave
jp
cs
and
popf
ja
pop
mov
inc
cmc
in
imul
sbb
mov
xlat
pusha
or
dec
iret
mov
push
fwait
push
add
iret
in
cli
iret
and
jmp
rorb
icebp
mov
mov
pop
scas
divl
add
sbb
pop
test
inc
incb
cs
and
in
xchg
dec
xor
dec
fadd
sbb
xchg
jecxz
xchg
pop
cmp
and
fs
shll
jmp
xchg
and
sub
sub
stos
cmp
xchg
mov
mov
popf
dec
fucompp
adc
arpl
out
xchg
dec
bnd
out
xchg
aad
into
pop
push
sbb
mov
cmp
push
pop
xchg
push
lret
cmpl
xor
pop
xor
in
ret
mov
lret
lcall
lods
jo
dec
jb
int
outsb
lret
ror
xlat
inc
scas
add
popf
stc
or
lods
mov
pop
out
adc
pop
mov
hlt
dec
mov
leave
pop
and
inc
cli
sub
popf
shrl
xor
push
dec
insb
pop
mov
cli
or
push
sahf
iret
mov
loopne
bound
xchg
xchg
sub
adc
add
scas
sti
lds
cmc
stc
mov
jne
add
cmpsb
sub
or
rorb
lret
mov
movsl
mov
in
sub
push
ss
fcomi
mov
sbb
sbb
std
sub
rcr
jmp
pop
fdivp
mov
inc
roll
xor
repnz
stc
mov
rclb
push
jmp
push
js
insl
repnz
mov
and
fwait
push
jecxz
dec
loopne
mov
pushf
xchg
pop
int
push
mov
sbb
sbb
cmp
mov
adc
dec
out
ds
push
jecxz
ds
mov
mov
sbb
adcb
sbb
add
clc
or
jg
and
pop
out
push
loop
jne
push
mov
inc
jecxz
ret
pop
repnz
adc
rclb
push
jle
push
lret
popa
sub
pushf
cmp
rorl
sbb
pusha
iret
rclb
inc
inc
xlat
orb
adc
xlat
add
fiaddl
inc
mov
xchg
push
mov
jecxz
sub
fstl
xor
jae
sub
sbb
sbb
popa
xor
push
mov
pop
testb
hlt
xor
sarl
insl
jp
jmp
mov
dec
insl
adc
mov
sarl
addb
sub
xor
fcomps
ja
and
pop
mov
or
lret
cmp
push
sti
push
add
pop
inc
popf
xchg
shll
xchg
fwait
orl
test
invlpg
movsl
in
fcomps
repnz
cmp
inc
pop
push
mov
mov
mov
jbe
repnz
sbb
push
xchg
add
pop
cmpsb
ret
add
sbb
xor
lea
mov
inc
push
idiv
xchg
les
out
push
mov
pop
shr
negl
adc
lcall
ss
jecxz
dec
roll
dec
xchg
mov
nop
lahf
jl
push
jb
push
or
das
ljmp
xchg
xchg
shll
pop
pop
sub
and
out
in
iret
testl
mov
dec
and
cmpsb
sbb
test
lret
in
lds
aad
mov
adc
add
mov
repnz
pop
jg
pop
imul
divl
popa
inc
push
and
insl
insb
fsqrt
imul
inc
imulb
lock
call
lock
push
outsb
xor
nop
cwtl
lahf
insl
mov
aas
out
lds
andl
repnz
push
dec
ljmp
mov
jns
cmp
daa
and
push
ljmp
imul
add
sbbb
cmpl
mov
or
das
sti
or
aad
xchg
je
cmp
sbb
xchg
pop
cwtl
add
mov
sub
xor
stos
insl
cld
inc
addr16
xchg
sbb
xor
dec
cmp
scas
adc
xchg
pushf
enter
or
push
and
sahf
mov
push
addb
add
jo
ret
xchg
jb
pop
pusha
mov
mov
xchg
test
mov
push
es
cli
jg
call
pop
cmp
enter
call
es
lods
dec
jo
sarl
jnp
xchg
lahf
std
pop
and
out
es
inc
push
jge
pop
negl
dec
push
sbb
adc
xor
in
mov
sub
addr16
and
ds
jae
out
orl
cwtl
xchg
mov
cmp
in
repnz
adc
inc
test
lahf
or
outsl
imul
popa
shlb
inc
in
lds
movsl
mov
notl
and
insl
test
fstps
push
adc
cmp
mov
aad
outsb
push
sbb
xchg
cld
xchg
test
pop
das
ficoml
enter
out
int
repz
test
mov
pop
mov
pop
and
dec
shrb
gs
mov
pop
or
lret
mov
enter
cmpsb
push
pushf
mov
imul
sbb
fldt
aam
call
loop
scas
fstl
mov
xchg
and
jl
push
mov
int
aad
hlt
jnp
in
repnz
movl
inc
scas
push
in
leave
xchg
sub
jp
outsl
jmp
push
stc
or
push
aaa
popa
xchg
mov
push
and
fstps
cmp
in
rorb
sbbl
add
push
dec
dec
xchg
dec
in
fstp
xor
sbb
cmpsl
test
negl
scas
rcll
jecxz
mulb
mov
into
xchg
push
mov
jnp
imulb
or
icebp
test
push
stc
xchg
repnz
xor
lcall
xlat
add
rcr
push
pushf
fcoml
mov
fs
xchg
xchg
sti
pop
dec
dec
cmc
shrb
js
divl
adc
es
rep
and
sbb
mov
fstpl
pop
jp
mov
insb
sub
add
pop
xchg
stc
jbe
out
cs
pop
sbb
in
mov
or
aaa
out
icebp
pop
scas
mov
jmp
rcll
mov
jp
in
cld
das
pop
cli
inc
mov
sti
adc
stos
jecxz
xchg
lea
pop
adc
loope
dec
push
dec
es
push
aad
mov
insl
mov
jg
sahf
pusha
sub
fcoms
push
imulb
aam
mov
jl
test
fdivs
mov
xchg
inc
push
mov
mov
mov
xchg
subl
xchg
clc
jg
dec
scas
ficompl
push
dec
fsubl
es
fwait
or
mov
loop
in
movsl
into
xor
mov
repnz
mov
mov
in
pop
sar
and
lret
aam
sahf
mov
cmp
mov
daa
inc
popa
lret
ret
mov
stos
fidivrs
out
imull
cmp
xor
xor
inc
ret
or
add
in
cmp
fld1
push
fwait
push
lock
test
ds
mov
lcall
pop
pop
sti
aam
dec
or
push
sbb
imul
pop
cli
sub
aas
and
lea
add
xor
jge
cwtl
or
and
imul
iret
ja
into
iret
and
loopne
xchg
mov
nop
sbb
movsl
jo
das
mov
mov
aas
xlat
popa
xchg
xchg
pop
fidivl
push
cli
lods
sbb
insb
outsb
cmpsl
movsb
jmp
clc
fnstenv
add
pop
pop
fptan
js
xchg
repnz
adc
test
adc
cld
add
ss
pop
adc
and
push
mov
into
or
ror
sahf
lahf
inc
mov
or
mov
cld
imul
dec
adc
mov
testb
call
stc
pop
mov
ljmp
add
xor
shr
xor
mov
insl
out
push
es
mov
fadd
iret
mov
cmpsb
xchg
ret
xchg
decb
icebp
inc
lds
shl
enter
notl
aaa
xchg
sub
push
sbb
cmp
negl
cmp
es
sbb
jp
dec
pop
jbe
and
cmpsb
jp
xlat
jne,pn
mov
lret
sti
push
stos
cmc
and
jnp
outsb
jge
roll
negb
dec
insl
test
pop
jge
sub
xchg
insb
and
sub
fsubr
mov
jle
aam
cwtl
jb
in
lret
sbbb
sahf
pop
and
fstps
test
and
rclb
jne
xchg
dec
fistps
inc
mov
sbb
and
sahf
inc
mov
arpl
sub
insl
lcall
xor
xor
lods
push
or
pusha
repnz
xor
cmc
out
lea
iret
mov
push
xor
repnz
adc
leave
outsb
loop
insb
inc
push
xchg
rclb
push
cwtl
pop
push
outsb
aas
dec
pop
sub
cmp
fimull
loop,pn
and
dec
sahf
sahf
sahf
insl
jmp
jge
out
jg
cmp
cmp
push
adc
shll
test
cmp
inc
and
jne
mov
out
data16
jl
xor
fincstp
and
push
aad
sbbb
addb
mov
lea
aad
faddp
insb
and
xor
lock
pop
mov
inc
or
mov
cltd
in
jg
adc
push
insb
out
into
jbe
popf
cli
rcl
int3
orl
mov
test
add
adc
xchg
sahf
sub
mov
in
insb
sub
push
dec
mov
loope
jbe
xor
scas
xor
xor
add
dec
pop
fildll
xor
out
insb
jle
cmc
adc
xchg
cmp
cmp
pop
pop
or
lds
aas
inc
mov
sub
dec
sub
dec
je
cli
movsl
or
mov
cmp
push
mov
mov
lcall
mov
test
cmp
fisubl
rorb
dec
add
xor
mov
in
inc
stos
popf
nop
push
out
xchg
repnz
mov
cmp
loopne
insl
xchg
insb
push
add
or
fcoml
outsl
xchg
xor
cmp
mov
push
pop
adc
loope
cwtl
fdivl
sbb
dec
jns
mov
push
stc
dec
pop
stc
in
mov
or
pop
call
mov
push
and
lock
js
not
decl
mov
scas
sbb
stc
xchg
cmp
push
add
xor
sbb
fidivl
push
bnd
out
cmpsl
mov
push
jecxz
dec
idivb
cmpsl
in
pop
xchg
fimuls
mov
clc
out
sti
gs
dec
ja
push
mov
insb
in
inc
sbb
and
mov
jl
sub
gs
xlat
adc
sub
adc
fisttpll
inc
lds
fldenv
jge
and
cli
lods
push
or
xor
pop
scas
push
push
push
push
sub
mov
shll
sbb
mov
popa
mov
cmc
xchg
in
dec
dec
dec
pop
xchg
sbb
mov
sub
xchg
loop
sbb
mov
jnp
jae
ss
or
sarb
xor
sub
psubd
arpl
call
jle
pusha
sar
or
mov
mov
popa
xlat
and
mov
xchg
dec
mov
jle
les
clc
mov
in
test
mov
push
dec
mov
jp
mov
pop
in
mov
cwtl
stc
inc
shlb
jl
dec
cli
jno
push
test
cld
sbb
pop
pop
sub
idivl
or
js
out
repz
insl
scas
mov
jb
addr16
adc
int3
mov
push
aad
pusha
push
dec
and
cmp
adc
xlat
mov
lock
jnp
or
into
out
lods
jbe
dec
ret
ljmp
add
cmp
rcrl
cmpsb
xor
cmp
or
rolb
repz
or
lock
add
outsb
sub
or
inc
jl
jne
mov
lods
mov
out
fnstenv
push
push
pop
mov
dec
and
dec
rcll
cmpsl
xchg
scas
pop
inc
mov
mov
and
into
xchg
lret
and
cmc
push
adc
int
sub
iret
loope
jno
jne
mov
shlb
mov
sbb
xchg
loop
arpl
aas
mov
gs
push
daa
int3
jl
sub
push
stos
jp
ljmp
or
sti
loope
add
add
mov
cltd
adc
sahf
add
rorl
pushf
cmpsb
push
rcr
ds
add
and
cmpb
jmp
inc
js
cltd
xchg
jae
sahf
mov
pusha
outsb
fmull
int3
or
pushf
xlat
rcrb
push
jecxz
mov
inc
xor
rcr
fcomip
mov
in
arpl
cmp
hlt
xor
scas
lret
cmp
test
xchg
jo
outsl
mov
jp
inc
inc
push
cmp
sbb
mov
ficomps
jl
or
repz
ficoms
mov
xchg
mov
leave
xchg
mov
or
inc
and
sub
ret
sbb
pop
das
repnz
scas
je
mov
mov
dec
jge
notl
jb
jmp
pop
xchg
andl
into
cmpsb
add
adc
mov
xor
xchg
pop
ret
xchg
xor
negl
out
popf
out
inc
jne
and
mov
xchg
mov
data16
sbb
ficoms
xor
xor
lret
pop
inc
shll
xor
xchg
mov
adc
push
mov
xor
xchg
lock
aam
movsl
fbstp
push
mov
fsubrp
dec
imulb
fcmovu
push
fldt
xchg
or
sub
leave
inc
das
test
xchg
xchg
stos
js
sbb
xlat
aaa
dec
mov
pop
sub
and
mov
out
bound
jle
pop
push
add
rolb
cmp
sub
lret
int
ret
dec
into
cmp
lods
push
xchg
inc
shl
or
ret
jl
add
cmp
xor
xchg
cli
cmp
lret
cmp
xor
inc
and
jle
out
flds
and
push
xor
test
pop
inc
push
cs
cli
les
mov
cltd
push
cli
pop
push
aam
sahf
or
call
scas
jns
jo
jl
sub
fdivrs
ja
mov
push
dec
lock
sbb
jmp
insl
jl
sub
or
and
or
sub
mov
sbb
xchg
fwait
push
scas
dec
fsubs
sub
mulb
dec
or
stos
bound
xor
cmp
jo
es
adc
lret
mov
addr16
mov
and
and
int3
pop
push
fwait
xchg
sub
inc
inc
mov
rcrb
subb
aas
and
jnp
fiaddl
dec
sub
lret
addr16
js
inc
repnz
mov
adc
mov
xorb
aaa
dec
inc
pop
insb
dec
je
jb
rcrl
and
cli
mov
jbe
push
inc
or
push
xor
dec
mov
push
dec
push
cs
scas
sbb
sbb
xchg
rclb
xor
jp
pop
outsb
fdivl
push
jmp
pop
dec
test
inc
dec
sahf
sub
push
or
into
dec
mov
insb
rcr
jl
or
pop
mov
imul
xchg
aam
cld
cmp
cli
push
push
andl
add
xchg
adc
out
into
test
sub
aaa
sub
cmp
pushf
lcall
les
lods
or
jnp
arpl
jne
jnp
push
sub
or
dec
xchg
pop
mov
jo
imul
mov
pop
fwait
mov
loope
cmc
pop
sbb
js
fisttpl
loope
out
mov
lods
mov
push
xor
push
scas
fldcw
lods
mov
push
push
jl
subb
in
es
cmpsb
ret
pop
xchg
mov
fs
pop
or
mov
mov
lcall
dec
push
ds
jg
mov
data16
stc
mov
fcmove
insb
int3
hlt
jp
sbb
lods
sahf
leave
sbb
pop
rolb
mov
scas
and
or
push
in
ljmp
sbbb
inc
mov
fmull
fldt
call
pushl
aas
jmp
dec
sub
insl
test
cli
je
xorl
aas
mov
add
imul
jb
fisttpll
xchg
mov
xor
es
push
je
mov
repz
pop
mov
rcrl
ss
inc
lcall
outsb
je
add
fiaddl
nop
cmpsb
dec
pop
sbb
aad
lods
adc
out
cltd
sarl
push
pop
adcb
idivl
push
mov
lcall
cli
fcmovb
dec
jnp
and
mov
lret
fstpt
or
scas
mov
sar
lock
insb
sahf
sbb
in
jmp
push
lea
add
lock
outsb
rcl
enter
inc
jmp
inc
pop
push
mov
sub
test
dec
jne
dec
mov
sub
addb
bound
cld
sahf
xlat
and
push
psrlq
adc
xchg
pop
cmp
jle
mov
fimull
pop
inc
js
ja
in
aam
inc
std
sub
jne
adc
cld
mov
subb
mov
or
pop
testl
test
pusha
xchg
pop
negl
adc
jo
mov
add
inc
das
jmp
aaa
aas
repnz
jo
push
and
icebp
and
shlb
cli
and
nop
jae
popa
cmp
repnz
insl
mov
mov
bswap
lret
cld
cld
push
push
fcomi
outsl
push
pop
daa
bound
cwtl
add
stc
jno
mov
mov
add
or
jp
ds
pop
pop
int3
movsl
or
cld
inc
jmp
popa
orl
mov
push
cmp
jb
test
dec
pop
fwait
out
cltd
and
xor
je
into
stos
mov
inc
pop
adc
repz
in
push
cmp
imul
mov
push
rorb
cmp
xlat
push
and
add
sub
mov
ret
sub
in
popf
push
int3
jne
jns
lods
push
push
popa
push
js
rcrb
ss
mov
push
xchg
cmpsl
xchg
repz
and
pop
fisubl
fstpl
das
je
int3
or
push
insl
xor
lds
mov
decb
jp
scas
push
rcr
and
jge
lds
sbb
por
mulb
mov
orl
popa
lds
sub
xor
push
enter
rcrl
inc
lahf
cltd
sub
push
loope
pop
out
nop
mov
stc
cmp
into
das
mov
incl
ds
push
inc
fisubs
enter
push
or
repz
dec
loop
and
xor
xchg
rcrl
fs
div
insb
or
jge
rcll
lahf
fucomp
jb
orl
repz
sub
xchg
sbb
test
mov
xchg
movsl
movsl
sbb
and
jb
pop
push
adc
inc
sbb
jae
cmc
ds
mov
adc
or
push
shrb
inc
xor
mov
push
push
imul
and
jns
jmp
mov
out
in
repnz
sbb
pop
out
data16
xchg
pop
and
cmp
mov
repnz
movsb
insb
adc
sbb
das
push
into
sbb
outsl
cli
popa
pop
inc
pop
sbb
pop
cs
aaa
pop
stos
stos
aad
push
mov
jns
jno
aas
out
loop
jge
faddp
cmc
lret
mul
xchg
iret
rcll
rclb
das
sahf
xchg
stos
lret
and
in
ja
jecxz
push
push
jmp
push
push
jmp
sub
sub
hlt
mov
or
lea
or
lahf
cmp
sbb
fstpt
pusha
aas
mov
and
lds
adc
mov
or
dec
and
mov
call
pop
add
fcoml
mov
jg
jle
push
xchg
adc
jbe
rorb
pushw
arpl
into
movsl
movsl
inc
iret
mov
dec
pop
mov
fbstp
pop
mov
adc
cwtl
mov
out
jb
xchg
add
mov
sbb
pop
sub
ret
adc
jge
bound
mov
int3
pop
stc
sub
dec
loopne
fs
lock
popf
sbb
jne
sbb
xchg
xchg
ljmp
mov
cmp
insb
add
js
scas
xchg
add
jp
cmpl
pop
mov
mov
push
fidivs
push
push
repz
push
lret
sahf
push
xchg
popa
push
mov
hlt
iret
and
mov
and
push
fiaddl
add
dec
jge
js
imul
mov
sbbl
clc
ficoms
out
jmp
push
cmpsl
jmp
add
js
pop
ljmp
lahf
lret
xor
addb
pop
mov
jmp
fiaddl
leave
pop
cmp
adc
mov
stos
imul
add
mov
lret
in
in
add
in
add
jne
inc
jge
xchg
rol
and
mov
xchg
out
cld
fnstsw
ret
out
inc
mov
xor
cmp
jb
aaa
inc
mov
xor
mov
mov
enterw
mov
pop
mov
fsubs
push
adc
stos
subb
mov
or
sbbl
and
add
iret
sbb
push
lret
jmp
or
clc
popa
fucom
stc
mov
mov
ret
aas
xlat
mov
rcr
jne
cmp
loope
push
mov
rcrl
ret
popa
mov
outsl
nop
lods
dec
add
lret
push
cmp
xor
outsl
arpl
cmp
lock
stc
dec
jb
sbb
shll
cli
adcb
lods
das
rclb
jg
mov
cmpsb
inc
push
or
mov
xor
jb
sbb
stos
pop
lea
cmc
decb
stc
xchg
mov
hlt
aam
mov
pop
and
icebp
jnp
mov
xchg
xlat
dec
jecxz
lea
push
cmp
add
js
out
jg
xchg
jmp
or
mulb
xor
mov
pop
int3
imul
lahf
xchg
dec
sbb
pop
mov
test
xor
push
sbb
push
push
add
shrb
es
fmull
mov
scas
and
mov
dec
push
inc
sbb
icebp
dec
cmp
cmp
pop
fildl
repnz
sbb
pop
pop
mov
push
clc
xlat
repnz
sub
jo
adc
mov
dec
sub
rorl
jg
ljmp
xor
gs
das
cltd
fs
sub
dec
mov
push
add
jl
cmpsb
xorb
mov
leave
rcrb
aaa
test
cmp
xchg
repz
xor
adc
arpl
cmp
lea
cld
dec
dec
sub
je
lret
jp
ret
pushf
rcll
scas
dec
or
mov
mov
pop
cmp
in
sub
adc
push
sub
push
and
fcoml
dec
cld
xchg
sbb
inc
cmp
sub
lods
lret
or
cmpl
xor
into
cmp
pushf
pop
adc
inc
scas
mov
pop
sub
and
dec
outsl
push
xor
fisttps
lock
aas
loope
or
adc
andb
pop
jp
xor
mov
dec
loope
ret
in
inc
lods
xchg
push
mov
sbb
data16
mov
out
aaa
test
and
ljmp
subb
hlt
push
in
aaa
notl
das
jae
sub
in
mov
call
mov
test
insl
inc
and
dec
lcall
pop
mov
call
and
xor
mov
jp
push
adc
mov
add
cld
adc
push
add
mov
shrb
popa
pop
push
dec
lahf
lds
scas
dec
mov
pop
pop
xor
test
pop
jmp
add
roll
jo
xchg
cmc
je
call
gs
xlat
cmpsb
jns
out
jle
push
xchg
aas
loopne
jp
mov
or
add
les
add
pushf
sti
xchg
adc
dec
lods
inc
sub
sbbb
loopne
jne
in
out
mov
pop
inc
fldenv
test
pop
out
es
hlt
jl
data16
mov
pop
movsl
shlb
lret
test
mov
movsl
push
push
push
int3
aaa
xchg
rcrl
and
out
fdivrs
add
outsb
pop
outsb
xor
incl
push
inc
xchg
out
xchg
jp
push
fistl
and
leave
mov
in
cmp
mov
cli
cmp
cmpsl
mov
mov
test
sub
in
lods
xchg
cmp
pop
ss
rorl
ljmp
xchg
mov
negb
sub
dec
mov
push
or
jecxz
sbb
mov
divl
cld
inc
push
ja,pn
sbb
cmp
addl
imul
lods
push
and
push
adc
dec
fsub
pop
aad
rcll
sub
jle
pop
pop
and
mov
fcmovnbe
in
mov
mov
pop
jbe
xchg
pop
push
int3
ss
or
cmp
neg
sbb
cmp
dec
fistl
xrelease
and
xchg
xchg
push
and
cwtl
sbb
aam
adc
push
or
les
or
aaa
out
xlat
cmpsl
stos
sub
add
sub
mov
fmul
pusha
out
pop
fcoml
aaa
sub
push
stc
dec
fwait
xor
lret
inc
xor
fadd
fcomp
jmp
xor
xchg
adc
push
xorb
mov
in
ret
leave
xor
rol
mov
test
xchg
pusha
xlat
and
or
jmp
xor
dec
xchg
add
cltd
sbb
push
adc
leave
jae
popf
out
sti
idivb
inc
mov
psubw
mov
int
inc
cmp
push
sbb
mov
sub
imul
out
iret
cmp
pop
ds
aas
pushf
and
imull
xchg
ljmp
jno
fmuls
add
inc
push
lcall
bound
subb
rcr
in
js
mov
daa
jne
inc
add
leave
mov
jo
cmp
pop
dec
inc
aad
sbb
xchg
das
cld
aaa
adc
push
das
mulb
jo
imul
stos
mov
ffree
sbb
push
gs
ficomps
xor
incl
pop
inc
xchg
test
out
aam
cmpsb
mov
lods
push
push
dec
adc
hlt
scas
sarb
rorl
bound
or
sbb
bound
lcall
push
aaa
add
ficomps
cmp
mov
dec
jnp
sarb
fildll
dec
dec
add
adc
fs
hlt
std
mov
rorl
fdivp
push
mov
inc
repz
mov
cmp
out
sub
and
cmp
int3
idivb
adc
jne
dec
lods
ljmp
jne
ljmp
dec
adc
push
les
mov
rclb
push
iret
push
mov
sub
aas
dec
clc
xchg
aam
mov
sbb
sbb
pop
ret
gs
inc
in
pop
ret
fwait
mov
and
and
fldenv
adc
sbb
push
enter
pop
push
out
mov
and
repnz
mov
and
and
hlt
in
fwait
xor
sbb
pop
pop
cld
fcomps
fiaddl
add
enter
mov
int
xor
xchg
and
ret
popa
pop
into
adc
pop
aad
lods
mov
addl
ret
mov
in
mov
and
hlt
mov
int3
push
dec
loopne
jmp
jb
popf
shrb
or
push
add
jmp
or
jnp
or
insl
dec
not
jge
push
cmp
sbb
xlat
std
les
push
dec
add
xor
pop
lret
loop
dec
xchg
push
ficompl
inc
aas
mov
xor
sbbb
add
dec
cli
sub
leave
fsubrl
mov
fadd
push
cmp
out
call
loop
cwtl
stos
mov
adc
adc
sub
jl
jge,pt
dec
mov
add
cmp
jbe
jbe
mov
push
push
shll
jmp
repz
cs
out
sbb
pusha
jne
data16
sub
aad
add
imul
xor
test
push
push
mov
mov
xchg
dec
filds
jae
lahf
pop
fsubl
int
das
arpl
insb
xlat
adc
ret
int3
push
xor
fs
gs
shrb
out
fwait
xorl
pop
repnz
fs
imul
adc
cmpsl
scas
lret
pop
repnz
mov
or
pop
std
fsubs
stos
or
pop
aaa
divb
outsb
cwtl
enter
or
and
aas
fnsave
outsb
ja
lds
pushf
pop
push
jmp
iret
push
sub
cmc
cmpsb
and
subl
sub
and
std
out
ss
loop
sbb
clc
fisubl
loop
push
arpl
push
test
push
cmp
lds
sahf
jp
shll
mov
xor
dec
aaa
inc
push
imul
pop
push
sarl
push
jp,pt
or
out
pop
add
fdivs
inc
fnsave
sub
cmp
or
and
pop
es
int
pop
out
icebp
xchg
fistpll
and
sub
fidivs
ficomps
lret
or
or
push
xchg
jg
dec
dec
dec
add
jne
loopne
sbb
imul
mov
in
xor
xchg
jmp
xchg
lock
mov
in
add
repz
pop
shll
jbe
pop
xchg
push
into
inc
fistpl
or
dec
pop
out
or
dec
sbb
sbb
sti
mov
push
arpl
jns
add
push
mov
sub
mov
movsl
scas
data16
into
add
pop
xchg
xchg
es
mov
push
mov
orb
sub
addr16
scas
push
push
hlt
sbb
fldl
xor
fld
fsubs
loope
mov
loope
mov
adc
xor
cmp
loopne
ds
and
mov
cmp
or
jmp
sbb
movzbl
xchg
rorb
outsl
mov
rorl
or
pop
fstpt
xor
repz
jge
iret
cmp
or
lds
loope
adc
inc
pop
sub
xor
mov
and
push
pop
jne
sti
cwtl
inc
push
sub
lcall
pop
pop
imul
jnp
xor
fwait
jnp
mov
mov
sbb
xchg
and
xor
mov
aad
ja
mov
loopne
add
inc
add
ss
mov
into
adc
cli
inc
adc
inc
scas
add
test
dec
push
cmp
inc
fldenv
aas
movsb
ss
pop
adc
push
lahf
push
or
or
cmp
ds
xchg
fisubrs
ljmp
jo
cmp
in
mov
or
cmpsl
out
push
rol
ss
jnp
repz
subb
mov
xchg
fwait
insl
mov
pop
inc
mov
out
cwtl
mov
sbb
lahf
les
hlt
xchg
add
push
push
xchg
mov
mov
aad
pop
popa
sub
mov
pop
pushf
loop
cmpsl
aad
scas
inc
movsl
jecxz
and
cld
sbb
es
or
sbb
lea
push
jb
addr16
int
mov
or
mov
mov
xchg
mov
cpuid
cmp
mov
jo
xchg
arpl
lods
xchg
mov
ljmp
stos
sub
inc
in
rorl
mov
sti
pop
fiadds
jge
xchg
jo
cmp
movsb
and
sbb
mov
loopne
xor
pop
adc
mov
push
pop
lret
dec
fisttps
stc
arpl
adc
and
xor
push
adc
sub
cwtl
int
out
pushf
in
sub
and
and
add
icebp
stos
push
jmp
aas
data16
mov
mov
stos
cmp
sbb
mov
in
int3
cmp
dec
cltd
add
cs
fistpl
sub
testl
mov
mov
jmp
or
adc
fst
dec
jne
add
sub
jge
xchg
adc
mov
xchg
cltd
into
jno
xlat
jb
cmp
xor
int
in
imul
mov
pusha
imul
jno
and
or
imul
rclb
sbb
push
sub
scas
daa
in
nop
cltd
xor
sub
and
push
ret
stos
fcompl
xadd
inc
and
pop
push
or
faddp
lret
adc
lods
mov
sahf
cmp
fwait
pop
jle
ret
cmpb
inc
ljmp
repnz
mov
jle
sbb
sbb
add
cmp
sti
pushf
es
push
movl
sahf
mov
fimull
fmull
sar
push
inc
inc
mov
mov
push
sti
lea
dec
xlat
jl
xlat
and
arpl
mov
cmp
cmpsb
clc
sarb
xchg
mov
dec
out
pop
mov
fmuls
push
push
inc
cmp
sbb
test
ja
sub
pop
sub
xchg
mov
pushf
mov
je
xor
outsl
subb
push
pop
cmp
cmpsb
dec
sbb
lds
push
jecxz
sbb
insb
dec
icebp
int
sub
cld
jae
push
or
pusha
jae
sbb
fisubrl
push
cli
ljmp
or
fwait
out
push
movups
ss
into
jl
fisttpll
sbb
int
pop
or
lock
mov
imul
pop
sbb
repz
les
mov
mov
stc
outsb
pusha
add
inc
cmp
cmpsl
mov
push
sbbl
js
insl
in
movsl
push
and
dec
cmpsb
add
or
mov
in
outsb
pop
roll
mov
insl
and
mov
loop
fisttpl
cmp
add
and
cmp
gs
ljmp
sti
cmp
std
mov
cmp
add
and
mov
sub
xchg
fdivl
xor
int
lods
mov
jb
fistpl
es
scas
int
cmp
cmp
add
add
andb
jbe
jo
pop
out
pop
in
pop
mov
xchg
mov
cmp
daa
imul
inc
sub
and
pusha
in
xor
add
pushf
xchg
pop
scas
sub
ficomps
inc
sbb
fxch
add
sbb
int3
ds
xor
push
test
ss
mov
sbb
stos
and
loop
into
jo
dec
movsl
and
xorl
and
adcb
sti
gs
dec
push
pop
rolb
fdivs
pop
mov
adc
sub
mov
enter
sub
cmp
cs
add
sub
lcall
xchg
sub
inc
dec
add
call
sbb
and
push
xor
ljmp
popa
cld
xor
pop
jb
adc
xchg
bound
pusha
dec
jmp
or
lds
in
jmp
fmuls
sahf
enter
in
cs
mov
dec
imul
repnz
jle
adc
and
repz
xchg
gs
mov
outsb
outsl
lock
ret
stos
mov
sbb
xchg
and
push
jl
dec
push
mov
add
xchg
fdivrs
lea
rcrb
leave
push
sbb
dec
xchg
mov
add
pop
xchg
push
in
or
xlat
mov
sbb
mov
adc
mov
pop
xchg
ja
or
adc
cs
mov
insb
pushf
pop
dec
adc
or
ljmp
dec
sbb
leave
pop
arpl
cmpsl
dec
fcoml
inc
in
or
ret
imul
xor
dec
or
loop
sub
and
cld
clc
jbe
std
cmp
jg
cmp
out
fs
stc
add
cs
and
push
mov
sbb
pop
pusha
stos
int3
sbb
test
fidivrs
in
or
jecxz
or
ret
rorb
dec
adc
icebp
mov
cmp
out
mov
nop
adcl
idivb
int3
or
scas
cmp
xlat
xor
fs
cmp
je
inc
fisubrs
aas
ds
jbe
out
test
fs
xchg
sbb
mov
inc
out
pusha
push
lcall
fwait
test
inc
mov
jnp
xlat
outsb
xchg
sub
inc
out
pusha
xacquire
jns
push
xchg
pop
shll
and
mov
insl
mov
ret
pop
imul
dec
xchg
aas
xor
nop
out
xor
dec
shrl
xchg
data16
mov
or
lock
out
aas
shlb
popa
scas
repnz
pop
outsl
jne
cmc
and
jae
sbb
and
dec
lock
daa
les
mov
mov
dec
inc
dec
and
fcoml
mov
push
xchg
pushf
shlb
sub
jo
cld
mov
in
cmpl
loop
cmp
cltd
test
popa
push
cmp
daa
loop
fdivrl
push
div
cmp
movsl
mov
das
outsl
outsl
mov
pop
cltd
cltd
nop
push
mov
fcomps
sti
out
lret
push
bswap
data16
cs
les
push
pusha
stc
mov
fisubrs
bound
stos
mov
inc
or
xchg
push
sarb
cmpsl
xor
xchg
mov
add
out
lcall
hlt
jne
int
add
inc
mov
mov
pop
sbb
and
data16
and
cwtl
sarl
mov
cmpsb
idivb
insb
mov
mov
repnz
jle
les
xor
push
jo
add
mov
push
pop
dec
scas
sti
pop
pop
or
decb
xor
fsubrl
and
or
stos
data16
sub
xor
bt
sub
imul
add
jne
aad
test
dec
data16
jl
cli
orb
dec
cltd
jns
xor
dec
shlb
or
inc
sub
lret
pop
jb
out
cmp
pushf
sbb
push
movsl
add
test
push
mov
std
cmp
sarb
popa
mov
loopne
ss
pop
mov
adc
and
insl
cmp
or
nop
adc
ds
mov
imul
ror
inc
ret
insb
out
jb
iret
adc
adc
std
repz
sarl
fcmovnu
sahf
inc
rol
lret
xchg
pop
fistpl
add
and
or
and
push
mov
dec
out
dec
fucomi
jb
jecxz
fldenvs
mov
aam
xchg
andb
xbegin
and
add
xchg
jbe
fcmovnb
ficomps
fwait
xchg
cli
and
sub
sbb
cmpsb
mov
mov
test
xchg
jl
lret
mov
xchg
mov
and
push
es
cmc
je
or
pusha
mov
ret
inc
decb
xor
dec
jmp
lock
dec
dec
sub
cltd
xor
pop
cli
adc
mov
cmp
popa
inc
or
rolb
inc
mov
mov
insl
out
xchg
jmp
shlb
imul
sarb
sbb
pop
repnz
xchg
cmpsl
stos
inc
icebp
xchg
mov
aas
sbb
inc
xor
mov
and
push
mov
cs
mov
inc
rclb
mov
sub
outsl
lahf
push
aam
pop
jo
cmp
mov
sahf
shrl
fidivl
or
shrl
ret
enter
sub
xchg
gs
sbb
sbb
add
and
mov
insl
xor
mov
mov
jbe
mov
testb
sub
out
mov
xor
stos
cmp
and
lock
add
and
in
adcl
mov
sbb
xor
ljmp
leave
inc
loopne
xchg
in
inc
add
cmpsb
sbb
dec
sbb
das
cmp
test
add
jecxz
std
pop
jg
mov
push
sbb
mov
iret
xor
cld
mov
add
jmp
or
mov
test
xor
dec
popa
out
cmp
int
jne
ffree
imul
dec
mov
je
pop
fldl
and
jle
leave
into
and
mov
xchg
and
xor
dec
imul
jno
pusha
add
aad
push
je
ds
mov
out
adcb
and
lret
ficoml
fcmovu
in
imul
cmpsb
call
je
sbb
cld
sbb
push
sub
or
insb
xchg
sbb
dec
addr16
shll
push
dec
imul
xor
test
fisubs
xchg
test
inc
pop
rcrb
stos
movsb
loope
xor
mov
leave
or
cmp
ficoml
imul
cltd
xor
mov
and
mov
add
dec
xor
cli
pop
dec
into
cmp
jecxz
mov
pop
push
mov
fs
dec
or
mov
push
cmp
sti
call
ss
inc
adc
pop
inc
cld
jne
dec
inc
int
inc
ror
inc
sbb
or
hlt
sti
outsl
jge
scas
sbb
push
mov
mov
mov
pop
xor
and
mov
and
jg
gs
cmpl
leave
cmc
cmp
out
dec
je
add
xchg
cs
out
pop
cmp
xchg
sahf
fisttpll
push
and
fadds
scas
shlb
pop
and
cltd
adc
das
push
sarl
xchg
shrb
into
inc
mov
dec
mov
xchg
cmp
repnz
mov
adc
push
fstps
and
and
pop
cmpsb
stos
ljmp
and
dec
cmp
repz
outsl
sub
outsb
jnp
mov
jl
jl
add
aaa
xor
dec
mov
sbbl
cs
out
jp
out
shlb
repnz
jle
imul
xchg
pop
ret
and
aas
and
sub
mov
outsl
sbb
push
movsl
and
cs
mov
lods
lds
add
inc
pop
sbb
pop
es
pop
add
popa
adc
mov
mov
sub
ret
sbb
in
pop
dec
push
mov
mov
fs
rcrl
cwtl
push
xor
inc
lahf
cmp
das
cli
dec
test
ret
nop
sbb
pop
lcall
dec
rclb
cmp
push
mov
adc
mov
jp
pushf
cmc
std
aaa
cmp
inc
push
int3
fstps
cltd
clc
add
ror
ljmp
fisubrl
push
shrb
adc
lock
xchg
mov
or
mov
es
jo
add
fiadds
in
out
and
bound
loopne
adc
mov
and
dec
adc
nop
outsl
mov
and
inc
je
gs
jmp
mov
pop
adcb
pop
loope
jle
mov
adc
jns
stc
xor
jmp
addl
mov
enter
bound
cmp
lods
xchg
jg
loopne
in
xorl
push
cmpsb
mov
imul
iret
into
cmp
lds
lds
dec
stos
fsubrs
scas
aas
arpl
mov
adc
in
imul
int3
sti
jmp
jp
add
cmc
xchg
dec
dec
xchg
add
cld
loope
mov
push
mov
mov
andb
mov
scas
adc
mov
push
std
xor
orb
inc
dec
lods
cmp
fsubrs
pop
sbb
push
mov
int3
pop
push
jns
lods
cltd
test
mov
loopne
inc
pushf
xor
cmp
insb
xorl
adc
and
mov
mov
cli
lods
movsb
mov
xor
push
das
pop
sahf
dec
mov
jge
in
add
inc
ret
fsubrl
xchg
jge
es
pop
stos
dec
je
xchg
in
sar
pusha
jo
out
gs
mov
aam
push
call
fiadds
push
sbb
pop
das
push
fdiv
jle
int
and
rolb
jecxz
cmpl
jne
xchg
xchg
pushf
out
or
mov
sti
and
xchg
fwait
aas
ret
add
mov
inc
clc
inc
push
cld
int
je
xchg
bsf
dec
push
mov
inc
jecxz
ret
push
xchg
inc
cmp
sbb
inc
mov
xchg
add
push
cmp
mov
pop
jmp
aas
jmp
in
fnsave
icebp
jmp
add
fsubl
cmp
mov
in
sti
add
cwtl
ds
sbb
adc
push
push
repnz
scas
xor
pop
int
pop
aad
adc
and
addb
bound
negb
pop
cmp
dec
dec
ficoml
cmpsb
push
fadds
fninit
inc
outsb
push
xchg
int
and
test
add
test
xchg
stc
lods
out
xchg
scas
aam
inc
cmpsl
sti
je
cmp
mov
push
and
addr16
mov
inc
sbb
xchg
and
fmuls
mov
mov
cmpb
and
sbb
lods
push
xor
sbb
lcall
pop
xchg
fisubs
mov
jecxz
sarl
pop
ljmp
arpl
stos
shrb
push
add
pop
cmc
lock
dec
fisttpl
rcll
pop
dec
cmp
inc
rclb
test
arpl
sub
cmp
mov
das
mov
jp
lret
int3
ljmp
loopne
in
insl
sub
push
pusha
xchg
sbb
and
daa
sbb
jno
mov
int
inc
dec
lock
jno
pop
ljmp
daa
and
aas
push
jmp
movl
ds
lods
sub
and
adc
aam
cmpsl
pop
push
and
adc
mov
cmp
or
ficomps
pop
add
or
mov
and
dec
mov
cmp
shlb
lods
dec
ljmp
cmp
xchg
xor
mov
mov
call
addr16
in
cmp
out
add
mov
fsubl
fdiv
mov
inc
pop
sbb
in
inc
sbb
or
xor
test
ffree
xchg
lock
and
icebp
out
out
sahf
div
outsl
xchg
pop
enter
out
sbb
dec
xlat
lods
setbe
jae
push
xor
fwait
lea
push
es
rclb
pop
dec
sub
in
hlt
mov
insb
pop
pop
stos
or
sti
jmp
adc
enter
fnstsw
fisubrl
or
sub
sub
addl
loopne
clc
xchg
adc
shr
ret
add
xlat
cmc
scas
aaa
cmp
das
xchg
mov
mov
insl
jmp
sbb
cwtl
mov
adc
xchg
sti
xor
gs
ss
or
push
xlat
sub
inc
xor
pushf
push
xor
inc
pop
adc
mov
mov
push
mov
sbb
xchg
mov
test
cmp
xor
and
jmp
push
repnz
and
sbb
sbb
aaa
shlb
aaa
pop
mov
and
mov
mov
xor
mov
xor
push
ss
lret
je
loop
ds
rcll
shll
sbb
push
iret
mov
sti
addl
and
pushf
dec
and
xor
sti
cmp
sahf
mov
je
xchg
xchg
test
add
imul
add
in
sbbb
sbb
xor
imul
mov
cmp
insl
shrl
enter
mov
pop
cmp
lahf
pop
push
leave
arpl
push
popa
and
arpl
out
gs
addr16
out
int
or
add
ss
xchg
adcb
sti
cmp
hlt
add
xchg
idivl
cld
push
fldenv
sahf
dec
sub
push
jmp
jbe
in
movsl
pop
lret
insl
cmp
xchg
xor
aad
ficoms
jle
int
sub
push
jne
dec
outsl
lods
nop
and
inc
stc
out
sbbb
push
outsb
loope
std
xor
out
or
aas
inc
push
cmp
and
aam
hlt
iret
adc
pop
lcall
ficompl
xor
cmpsb
jno
or
sbb
inc
dec
rcrl
mov
xchg
jge
and
dec
negb
jne
add
addl
bound
test
cli
frstor
cmp
jle
outsl
mov
fidivrs
inc
mov
repz
add
ret
mov
add
xchg
outsl
add
dec
xor
lea
loop
dec
cmp
mov
mov
mov
dec
clc
and
notl
add
mov
clc
push
rorb
filds
mov
cmp
dec
lret
sbb
outsb
rorb
dec
mov
fwait
or
es
pop
out
xor
pop
sbb
sbb
mov
sub
xchg
imul
adc
inc
nop
scas
stc
cmc
aam
in
add
clc
ds
ffree
dec
sub
int3
loope
cmp
add
cmp
add
adc
sti
push
add
repnz
jae
loopne
fstps
addb
pop
xor
std
push
xchg
jp
mov
xchg
cld
nop
repnz
movl
fcomps
add
xor
popa
inc
xor
and
adc
fistpll
adc
loope
pop
sahf
xor
pop
fwait
jbe
sub
bound
aam
push
out
mov
push
xchg
mov
mov
jns
mov
jp
sbb
dec
je
ja
adc
ficompl
mov
push
faddp
mov
sbb
inc
mov
in
test
repnz
dec
dec
jnp
and
cltd
cmpsl
jae
ret
lcall
dec
ss
push
fwait
jne
cmp
enter
inc
mov
mov
sbb
mov
fdiv
pop
aad
xor
push
and
cmp
mov
loope
in
jns
pop
inc
arpl
mov
popf
cmpsl
sbb
ficoms
or
in
inc
mov
and
imul
sbbl
fstl
imul
movsl
sbb
and
stc
mov
mov
mov
enter
mov
xchg
repz
ljmp
out
clc
jb
rolb
cld
push
cmp
push
and
lcall
addb
adc
insb
jmp
aam
in
test
leave
stc
insb
shr
adc
into
adc
jge
ret
rcrl
jp,pt
push
dec
outsl
dec
inc
inc
pop
sub
jp
dec
ret
cmp
dec
or
insl
sbbb
addr16
insb
sbb
pop
pusha
sbb
push
jecxz
out
xorl
and
pusha
hlt
int
mov
stos
xchg
out
call
xchg
push
pop
pop
add
jecxz
fcoms
dec
insl
imul
inc
adc
ja
psadbw
inc
cmp
cli
and
xorl
imulb
dec
jne
mov
mov
jle
jp
das
ret
sbb
es
add
aad
lea
sbb
push
cmc
fcomps
sub
pop
push
xor
test
xor
add
sub
cmpsl
call
mov
addr16
enter
shl
iret
push
testb
xlat
cltd
lea
in
fadds
loope
jns
xchg
es
das
test
mov
daa
inc
inc
insb
dec
inc
dec
push
sbb
jmp
out
pop
dec
jo
dec
dec
out
shrb
pop
lock
dec
inc
lea
adc
xchg
sti
aaa
mov
call
daa
or
ret
daa
clc
aas
adc
cwtl
inc
xchg
or
xlat
in
shll
lods
push
sub
lret
into
fwait
jle
fdivrs
pop
push
and
jg
inc
fs
lahf
fbld
or
pop
je
cmp
pop
mov
aaa
das
mov
lret
xchg
ljmp
cmc
aam
hlt
in
insl
mov
mov
fldenv
push
shll
inc
and
stos
cs
and
adc
sbb
adc
cmp
test
addl
cltd
push
orl
cmpsb
jo
adc
xor
int3
push
mov
xor
loop
push
out
add
sub
push
or
in
rolb
ds
and
popa
dec
loopne
add
loop
outsl
push
stc
out
dec
jge
mov
push
loop
cs
jno
addb
fnstenv
xchg
xor
ds
out
pop
gs
std
andb
push
jbe
cmp
mov
jp
jb
xlat
and
mov
stos
push
mov
cmp
ret
or
jl
lock
mov
imul
popa
dec
xchg
sbb
mov
xchg
adcl
lods
push
ljmp
xchg
cmp
incl
pop
or
pop
pop
adc
and
in
xchg
jno
lea
jl
mov
cmp
pop
add
adc
xor
insb
add
xchg
pop
dec
movsl
dec
dec
insb
sbb
and
jo
pop
ja
adc
fbstp
mov
test
mov
xor
mov
inc
out
fs
pusha
cmp
ds
push
cmp
jns
inc
add
dec
jg
pop
ret
dec
or
pop
mov
testl
mov
cli
gs
add
jbe
push
dec
cmp
sub
or
pop
adc
enter
fisubrl
add
test
add
cmp
push
orl
xchg
fcmovu
dec
inc
cmpl
repnz
in
pop
ror
mov
cmp
fnsave
repnz
fisubrl
or
mov
jp
cs
popf
pop
xor
pop
mov
push
push
cmc
mov
pushl
popa
data16
sbb
dec
sbb
stc
arpl
dec
jge
je
lods
sbb
ss
ljmp
bound
push
sbb
sbb
sbb
pop
sub
hlt
push
jbe
xor
jmp
push
sub
jecxz
sbb
fimuls
push
dec
pop
push
cmpsl
push
push
push
or
cmp
repnz
jle
sbbl
xchg
mov
jae
ficoms
cld
mov
scas
sahf
and
push
and
sbb
adc
jns
or
xchg
inc
or
and
push
or
ss
push
xor
and
movsb
dec
mov
es
xchg
jge
and
mov
mov
adc
pminub
mov
jbe
and
cmp
mov
mov
sbb
aaa
jo
jno
cltd
dec
ret
lds
inc
pop
call
push
lods
or
aad
lahf
ss
jge
xor
lods
mov
stc
pop
mov
inc
jg
loopne
ret
sub
loop
pusha
out
and
push
push
nop
cwtl
shr
jne
sarl
mov
data16
push
xchg
dec
jmp
leave
enter
push
xchg
rcrl
push
mov
dec
imul
adc
sub
outsl
imul
aam
xor
rclb
mov
xchg
inc
mov
mov
mov
cmp
pop
dec
jle
sub
cld
inc
dec
ss
jb
jne
lock
xchg
xorl
xor
cmpsb
shl
xchg
dec
pop
repz
mov
inc
neg
aas
cmp
ds
lock
mov
and
jecxz
scas
sti
cmp
pop
mov
sub
out
imul
scas
push
and
sbb
mov
add
out
jle
adcl
or
hlt
xchg
fdivrl
ret
jge
dec
loope
pop
cld
into
xlat
test
mov
imul
mov
movsb
cmp
dec
loope
sbb
sbb
and
inc
subl
dec
inc
inc
ficomps
rcl
jae
mov
push
push
mov
loope
mov
dec
push
push
lods
inc
or
fwait
xlat
add
hlt
into
icebp
sahf
arpl
jae
outsl
push
sub
test
mov
mov
sahf
xchg
jno
sbb
push
stc
pop
test
ret
cmp
xchg
jle
rcrb
dec
rcr
xor
repnz
sub
into
fldenv
data16
dec
movsb
adc
sub
popf
xorl
out
add
or
dec
inc
ficoms
and
cltd
pop
loope
xchg
mov
mov
xor
mov
rcrl
pop
sbb
xor
iret
std
pop
pop
jle
adc
adc
imul
hlt
jg
add
cmc
enter
jl
push
push
cmp
jo
ljmp
cwtl
dec
lock
ljmp
push
mov
push
mov
mov
jle
addr16
incl
lahf
test
lea
and
and
mov
adc
loopne
push
or
or
decb
ljmp
mov
cmp
and
and
jb
stc
pop
jae
mov
pusha
in
jmp
mov
add
cs
imul
fnstsw
cwtl
ja
mov
mov
pop
mov
mov
cmpsb
xchg
sub
fsub
lea
xor
and
add
push
iret
jge
or
aas
cmpsl
testb
sub
in
mov
and
lds
call
adcl
and
movsl
mov
out
aad
sub
out
stos
hlt
push
repnz
or
lret
loope
aam
cmp
lea
ljmp
cmc
jns
jp
fcomps
outsb
push
adc
iret
data16
pop
add
aam
dec
inc
lods
push
xlat
sub
and
dec
call
in
js
xor
sub
mov
pusha
int
fidivrs
into
mov
pop
outsl
icebp
fcmovnu
popa
cli
mov
mov
mov
jl
loop
ret
loope
dec
mov
cmpsb
jns
jmp
popl
pop
jl
adc
stc
jo
adc
cmpsb
pop
iret
jmp
test
popa
ja
and
add
sbb
popa
loope
scas
pusha
gs
in
jbe
test
push
hlt
xchg
loop
add
xor
or
call
dec
fisttpl
rcrl
inc
jno
push
cmpsb
jle
xchg
ljmp
or
xchg
push
mov
inc
sbb
data16
call
sahf
je
movb
mov
mov
dec
aam
stos
out
cmp
sbb
adc
mov
inc
es
jnp
push
add
mov
push
push
in
and
stc
mov
push
push
repz
mov
sub
or
addr16
add
out
or
pop
mov
xorb
jb
pop
outsb
xor
decl
push
push
sbb
push
mov
and
test
cmp
cmp
ret
mov
mov
and
ret
mov
sub
jge
mov
xchg
gs
mov
cwtl
push
mov
push
mov
inc
lock
push
push
in
add
ja
xor
test
dec
push
jmp
repnz
out
adc
cmp
push
xchg
stc
push
jno
nop
jp
loopne
sbb
push
xor
or
div
mov
imul
pop
jae
mov
or
fmuls
out
jmp
jne
rcrl
shrl
xor
pop
adc
cmp
or
out
je
or
push
inc
enter
ret
out
les
push
mov
add
mov
testb
and
lahf
push
out
jns
xchg
data16
popa
je
pushf
ret
cs
addr16
fisubrl
fidivrl
repnz
xor
popa
dec
sub
adc
test
cmp
cmp
pop
shl
add
jno
and
or
andl
ret
and
cmpsl
add
cmp
add
out
or
push
pop
dec
lcall
push
stc
sbb
inc
or
and
jno
iret
cmp
imull
adc
pop
jb
xchg
add
mov
sub
mov
sub
add
adc
lock
ljmp
jl
dec
xor
aas
dec
add
adc
daa
pop
fcompl
mov
pop
mull
cmp
dec
sub
push
int
std
insl
sbb
cwtl
jo
pop
sub
push
popa
loop
clc
jb
sbb
pop
mov
icebp
addr16
nop
jg
xor
xchg
push
sti
cmp
test
cmp
lods
xor
or
push
ret
shl
sbb
ljmp
cli
shll
insl
or
push
out
sbb
ss
fisubrs
pusha
pop
mov
mov
aam
dec
push
or
mov
cmpsl
pop
aas
xchg
mov
fmull
and
pop
clc
jp
sahf
cmp
mov
mov
gs
stos
insb
adc
sarl
lock
push
pop
out
sbb
adc
push
pushf
ss
fisttpll
mov
or
mov
xchg
xor
adc
or
push
cli
fsts
dec
ret
and
fs
stc
xchg
push
gs
es
xchg
js
xchg
cld
scas
daa
inc
hlt
imul
pusha
ret
fildl
sbb
mov
cmc
xor
rcrb
lahf
lea
shlb
jmp
dec
pop
mov
add
in
sbb
push
xchg
jno
lcall
dec
dec
jmp
push
std
xor
xchg
xchg
bound
popf
insb
fidivs
mov
add
aas
out
dec
test
cmp
add
stc
mov
lcall
mov
fisttps
xchg
inc
nop
pop
out
cmp
scas
loope
icebp
mov
lds
adc
movsb
sub
lcall
out
mov
ljmp
dec
int3
dec
jne
xor
sahf
imul
push
shrb
xchg
cmp
movsl
or
in
jecxz
cs
lcall
outsb
push
xchg
sarb
xor
adc
emms
push
in
xor
in
pop
imul
sbb
rol
push
xor
push
and
push
stos
xchg
inc
push
mov
data16
xchg
pop
push
nop
add
mov
inc
sbb
call
add
das
mov
pop
je
mov
adc
aam
or
arpl
push
insb
dec
jmp
add
int3
cmc
repz
insl
cmp
add
test
scas
clc
lahf
mov
xor
leave
orb
stc
jns
sbb
mul
add
push
mov
cltd
xor
cli
cmpsl
lea
es
inc
pop
mov
and
pop
mov
mov
pop
aam
dec
pop
scas
mov
xchg
es
fldl
ss
stc
cmp
xchg
int3
cmp
jp
dec
add
mov
das
mov
ds
seta
fnsave
sahf
and
dec
ljmp
cmp
scas
sbb
pop
fiadds
pop
sub
and
stos
int3
sarb
inc
repnz
mov
js
insb
dec
iret
xor
jno
inc
xchg
push
and
sbb
inc
or
in
or
mov
les
inc
loopne
lret
nop
popa
dec
lea
xchg
decl
mov
aas
push
mov
out
mov
push
fidivl
aam
popa
out
pop
gs
xchg
aaa
mov
loope
pop
shr
jb
jns
jo
dec
out
into
dec
test
ret
jo
cmpsb
out
cli
cs
adc
mov
dec
fcmove
cs
mov
add
out
rclb
cld
xor
out
xchg
insl
int3
add
fsts
sub
sar
les
jnp
shlb
pop
cmp
inc
add
nop
mov
dec
cmp
inc
or
mov
ljmp
xchg
shrd
mov
pop
aad
testl
xor
incb
call
fcmovbe
je
or
xchg
clc
and
jle
cmp
sbb
pop
notl
xor
and
mov
push
mov
mov
data16
outsl
jne
jp
mov
xor
sub
pop
cli
call
int3
push
jecxz
jbe
add
jle
loope
inc
push
fisubs
shll
mov
sarb
inc
mov
jnp
in
je
xor
mov
daa
pop
inc
pop
xchg
xchg
es
lahf
fcomp
orl
push
and
dec
push
es
push
mov
repz
pop
and
push
in
popf
aas
xor
fadd
test
out
and
pushf
pop
pusha
sahf
cmc
adc
testl
cmpsb
call
arpl
sbb
loope
es
call
sar
cmp
add
roll
or
mov
push
fisubl
lret
mov
dec
adc
in
pop
pop
mov
out
dec
or
dec
inc
add
push
hlt
pop
push
pusha
ljmp
push
ljmp
push
add
push
into
cmpsb
adc
fsubrl
inc
or
clc
jl
rclb
inc
jecxz
pop
and
and
iret
xor
ss
jae
adc
sahf
sarb
into
jle
push
cmp
dec
mov
xchg
out
or
repnz
adc
mov
push
sub
movsl
pop
cmp
add
sbb
outsb
and
cmp
push
pushl
insl
call
adc
ljmp
mov
cs
scas
lock
jmp
shlb
xchg
popf
jns
cld
mov
dec
icebp
testl
pop
pop
mov
inc
mov
stc
lret
inc
aas
and
rcrl
jecxz
int
subl
ret
and
mov
jg
out
jb
icebp
add
xlat
and
es
testb
fstp
in
or
call
popf
xor
out
xchg
sub
movb
dec
in
ss
pop
popa
imul
sbb
xchg
std
aad
in
into
jmp
loop
xchg
cli
push
or
lods
testl
sahf
push
mov
sbb
outsb
fisttpll
mov
shl
popa
mov
arpl
in
xor
pop
testb
jmp
dec
lret
mov
rcrb
xchg
jmp
inc
jp
mov
pop
cltd
bound
aas
mov
pop
je
imul
dec
fsubs
popa
adc
fildl
inc
aaa
cmp
push
into
scas
adc
mov
and
and
cmp
push
xor
popl
daa
and
jecxz
mov
mov
cmp
testl
loopne
ret
pop
inc
push
adc
test
push
fnstenv
pop
xchg
daa
sti
mov
sti
pushf
xchg
xor
adc
jae
insl
rorb
iret
mov
sub
aam
push
jle
or
cmp
hlt
push
or
mov
mov
push
hlt
mov
mov
negl
bound
adc
push
movl
mov
fdivrl
xchg
sub
out
or
stos
xchg
push
out
gs
aaa
sbb
mov
enter
xchg
call
inc
in
jns
icebp
ds
ficomps
mov
leave
frstor
out
push
lahf
mov
adc
mov
imul
xor
pop
sbbl
insl
test
insl
or
popa
dec
push
fwait
enter
mov
lret
repnz
cmp
adc
fldt
or
imul
jl
std
mov
pop
mov
ds
cmp
stos
add
jmp
cmp
inc
mov
faddp
pop
fs
add
adc
popf
inc
jge
jae
mov
or
out
mov
mov
mov
inc
rol
pop
sub
push
not
fnstcw
jp
dec
outsb
out
ljmp
and
imul
jl
jno
cltd
mov
or
mov
stos
js
test
cmp
push
adc
outsl
or
shll
fisttpl
xor
sub
rcl
clc
nop
jecxz
push
push
fsubrs
addl
xor
ficoml
add
xor
out
ljmp
aas
test
ss
push
xor
lods
adc
adcb
mov
aas
sub
testb
inc
jmp
mov
xlat
xor
ljmp
jl
ds
sbb
lret
dec
dec
outsb
fsubrs
xor
push
cld
es
ficomps
and
push
inc
push
lret
adc
rorl
aaa
ror
inc
cmp
ljmp
dec
outsl
sub
inc
mov
cmp
fimuls
filds
xor
mov
adc
das
push
insb
inc
inc
movsb
fsubl
xchg
inc
lds
and
sbbb
decb
gs
repz
faddl
cmp
inc
or
sbb
ss
insl
mov
leave
adc
orl
add
sbbb
fdivrs
lcall
cs
jl
insb
pushf
xchg
out
dec
xchg
dec
sbb
repz
mov
cmp
aam
add
or
or
inc
sbb
jae
call
gs
pop
aaa
xor
aam
pushf
ljmp
push
cmpsb
ficoml
add
adc
jb
sub
or
push
lods
out
xor
scas
push
pop
aaa
add
cmp
fbld
js
lods
in
jl
push
or
pop
jb
and
push
out
or
push
loopne
mov
mov
jecxz
inc
sbb
popf
add
push
dec
or
sub
mov
fwait
xchg
jo
jecxz
dec
dec
inc
sbb
inc
sub
les
gs
add
cmp
mov
fwait
notl
pop
jmp
sub
in
scas
test
scas
jmp
shr
stc
adcl
xchg
xor
sub
mov
insb
pop
mov
mov
xor
int3
jl
xchg
mov
insl
iret
inc
and
fcmovu
lret
mov
int3
iret
mov
push
xlat
dec
test
dec
dec
iret
dec
aas
push
mov
orl
cmp
adc
dec
iret
insl
mov
inc
stos
int3
push
andb
pop
or
or
pop
cli
mov
xor
dec
test
cmp
mov
fs
test
loopne
aaa
not
pushf
rorb
int3
ds
fnstenv
test
pop
xor
push
int
out
popa
rorl
stos
push
mov
pusha
pop
xchg
push
push
push
inc
mov
lods
movb
inc
dec
mov
lret
sti
lods
imul
add
notb
sbb
shrl
roll
aad
sarb
inc
push
pusha
and
pop
repz
mov
jmp
push
pop
test
cmpsb
pop
xor
or
dec
sbb
xchg
sbb
outsl
out
pop
stc
sub
adc
mov
pop
jbe
pop
loopne
test
sub
dec
les
icebp
and
mov
pop
dec
dec
push
sub
pop
fsubs
xchg
add
push
push
outsl
nop
sbb
and
inc
sub
in
pusha
mov
aas
mov
lret
fimull
lahf
dec
pop
cmp
gs
mov
jmp
sbb
cmpsb
outsl
cltd
pop
mov
dec
es
movsb
addb
jmp
push
jb
adc
sub
xor
lock
ja
into
fdivp
mov
mov
ljmp
pop
dec
je
mov
mov
sbb
pop
mov
sbb
cmp
lcall
inc
lahf
jnp
push
mov
iret
es
sbb
mov
flds
add
into
pop
out
jo
ds
testl
inc
cmp
cmp
stc
je
iret
movsl
cltd
dec
dec
push
pop
ret
fisttpl
jne
ficoml
dec
ror
inc
pop
jp
lret
sub
outsl
stos
gs
xor
shrb
cmp
test
scas
mov
leave
ret
in
mov
jbe
adc
mov
adc
loop
bound
iret
dec
leave
dec
iret
in
mov
mov
iret
rclb
push
sbbl
xchg
xor
dec
jbe
iret
xor
cmp
mov
stc
xchg
js
push
sbb
ficompl
imul
je
dec
cmpsl
data16
mov
lea
sahf
repz
mov
xchg
mov
test
ljmp
scas
sub
mov
sbb
pop
inc
xchg
pop
scas
adc
add
outsb
insl
xchg
dec
shll
push
or
subb
lret
inc
or
dec
pop
xchg
mov
sbb
dec
int3
aaa
aas
push
fistl
xchg
aam
xor
fcomps
shlb
fisubl
inc
xlat
fisttpl
cli
bound
dec
in
ja
sbb
shl
scas
inc
stc
jl
or
stc
inc
dec
sahf
dec
pop
jg
xchg
pop
fisubrl
nop
mov
roll
adc
push
or
inc
rcll
ret
sbb
fisubs
xor
pop
push
jmp
fcom
sahf
cwtl
jl
sbb
pop
pop
fprem1
push
dec
adc
cmpsl
popa
sbb
dec
fisubrl
fs
mov
sti
add
dec
dec
adc
cltd
pop
lahf
movd
cld
pop
daa
imul
or
out
lcall
fcomip
mov
push
pop
dec
rol
arpl
shr
add
movsl
push
jne
or
add
ror
push
cmp
mov
negl
clc
scas
ret
push
add
test
inc
mov
outsl
ja
test
dec
mov
or
pop
mov
rep
stos
add
notl
into
sbb
repnz
xor
icebp
mov
jp
push
mov
clc
jg
xchg
sbb
push
in
inc
outsl
xchg
mov
lea
repz
xor
ficomps
xor
or
dec
adc
dec
push
adc
fists
int
mov
mov
into
and
mov
cmp
or
faddl
mov
mov
pop
or
mov
fdiv
shrb
mov
fidivrl
enter
xchg
inc
loop
sbb
ret
xchg
pop
mov
dec
xor
cwtl
mov
rol
filds
mov
pop
xor
shlb
add
popf
insl
pop
outsl
jge
and
cmp
dec
and
scas
xlat
and
xchg
jne,pn
xchg
fisttpl
push
xchg
mov
pop
sahf
pop
sarb
and
mov
push
ret
mov
push
rorl
pop
jmp
test
lret
out
call
mov
pop
aas
push
dec
fs
mov
pop
ss
insb
fsubp
test
inc
mov
pop
cmc
cmpl
hlt
sbb
jle
add
cs
dec
out
bound
jne
dec
jbe
bnd
sbb
xor
or
dec
mov
jb
push
cmp
jnp
sub
loop
mov
rcl
jle
mov
fsubrl
sub
iret
push
mov
ds
int3
xor
push
shll
sub
dec
loop
cld
adc
xor
mov
push
xchg
ucomiss
cmp
jp
daa
adc
cmp
and
loop
int3
ljmp
xchg
outsb
cwtl
jbe
jl
stc
mov
jmp
in
dec
dec
sub
ret
into
in
jne
incb
dec
ljmp
jb
in
adc
or
fidivrl
mov
dec
scas
out
out
dec
pop
std
aad
fcmovnbe
jmp
fstps
pop
test
lcall
sbb
push
sub
or
roll
dec
sti
mov
jl
divb
mov
or
cli
inc
push
in
call
lea
xchg
mov
mulb
sahf
arpl
ja
inc
out
adc
stos
add
fwait
pop
sarl
in
movsl
cmp
jl
sbb
pop
pusha
sbb
out
xchg
jne
ja
pop
sbb
pop
pop
loope
mov
push
cmp
mov
push
and
add
sub
and
dec
cmp
int3
push
xchg
inc
aad
mov
pop
adc
add
lahf
fs
in
add
and
movsb
sub
mov
negb
sub
and
insb
out
push
and
pop
xchg
jns
xor
sbb
mov
xchg
shl
xchg
into
xchg
movsl
loop
cvtps2pd
fistps
aas
xchg
inc
pop
pop
add
je
enter
pop
push
pop
and
fcompl
mov
ss
and
cmpsb
cmp
mov
pop
push
dec
loope,pt
scas
mov
mov
inc
dec
push
mov
lcall
cld
cmpsb
jmp
lea
decb
subb
inc
or
adc
or
pusha
adcb
cmpsb
cli
and
icebp
mov
push
scas
nop
adc
lea
jmp
cmp
pop
pop
es
pop
push
mov
push
shl
and
decb
inc
mov
repz
dec
stos
clc
inc
mov
notb
mov
aad
jne
jg
in
mov
shrb
hlt
add
inc
int3
mov
pop
test
bound
mov
mov
or
adc
repnz
lock
sbb
popf
sbb
out
sub
in
push
push
cmp
int
jo
les
das
add
push
inc
and
daa
xor
push
out
xor
aad
scas
sub
xchg
fwait
std
jnp
pop
cld
fildl
xchg
mov
mov
ret
pop
enter
loopne
repnz
xchg
sbb
in
mov
cmp
jb
push
fisubrl
leave
movsb
lods
pop
sbb
dec
or
jmp
dec
and
and
adc
and
lret
enter
push
xchg
dec
or
dec
iret
push
sub
sbb
jbe
shrl
mov
add
pop
imul
add
nop
pop
out
inc
lds
adc
mov
stos
jne
loop
jp
jl
xor
mov
mov
adc
stos
mov
lcall
inc
inc
ficoml
dec
push
sbbl
dec
lret
xor
pop
inc
inc
inc
jle
sbb
lods
js
ds
xchg
sbb
cwtl
arpl
imul
jle
out
mov
ljmp
mov
jecxz
xchg
icebp
dec
insl
inc
push
dec
test
push
lret
lock
adc
mov
adc
scas
xlat
int3
add
and
test
fdivl
test
ficoml
push
pop
repz
ds
dec
mov
popf
rol
mov
mov
xor
int3
fs
iret
out
lret
ja
aaa
inc
xchg
add
sbb
decl
aad
loop
mov
jno
dec
movsb
adc
ret
imul
add
xlat
lods
negb
hlt
bound
frstor
jns
jb
dec
pop
cli
fldenv
cwtl
dec
push
jae
jo
idivb
cmp
popa
stos
cs
cmp
dec
push
jge
popa
adc
daa
jge
xlat
jp
dec
in
scas
cld
jnp
nop
aad
xor
fsts
shll
cmp
mov
push
fcmove
out
mov
push
fldt
mov
dec
insl
xor
inc
fcoms
pop
dec
push
sbb
rcll
imul
xchg
rcrb
je
fildl
or
fsub
test
cmp
shlb
cmp
es
push
mov
jge
mov
imul
movsl
adcb
ds
adc
rcr
and
mov
clc
push
jnp
pusha
pop
aam
sti
pop
js
popa
jmp
sahf
push
pop
pop
imul
fistps
mov
xchg
add
xchg
or
repz
dec
push
and
lret
and
das
xchg
inc
add
inc
dec
push
and
test
pop
jbe
mov
dec
xor
push
and
cmp
testl
inc
cmpsl
and
push
das
dec
push
and
dec
lret
dec
jno
inc
pop
arpl
sbb
cmpsb
addr16
out
outsb
pushf
mov
cmp
leave
pop
mov
and
mov
push
fstpt
sub
stos
ret
xchg
push
jb
jge
sbb
stc
push
and
aas
inc
shll
lcall
mov
jno
in
inc
add
inc
adc
jge
pop
sar
daa
push
roll
movsl
ljmp
bound
dec
pop
cmp
test
and
dec
dec
adc
aam
loop
dec
pop
sbb
mov
pop
adc
fstl
push
dec
ret
sbb
push
pop
nop
fisttpll
add
mov
jp
sbb
rcrb
adc
loop
sbb
jbe
aad
push
dec
adc
ljmp
testl
inc
mov
and
sub
adc
out
dec
rcll
fstl
int
aaa
or
insb
xor
mov
and
fcompl
into
outsl
out
arpl
mov
int
lock
insb
xchg
or
push
xor
jle
ficoml
ljmp
cmp
or
ret
push
ds
adc
lcall
ja
aaa
cs
das
mov
or
add
cmp
loopne
cli
sub
outsb
pop
ret
cmp
push
mov
adc
out
sbb
sarl
and
insb
pop
sub
daa
sahf
xor
xchg
push
push
mov
aad
sbb
mov
mov
and
adc
or
mov
push
scas
sub
repz
pop
bound
sub
dec
iret
cli
and
out
mov
jmp
mov
jnp
add
jl
sub
xor
cmp
jnp
out
in
stos
inc
push
mov
mov
push
les
pop
mov
out
scas
loope
and
inc
lahf
call
pop
push
lret
outsb
jecxz
jnp
es
fldt
stos
jnp
dec
cmp
add
push
mov
add
dec
out
scas
in
sarb
push
outsl
mov
inc
dec
jo
push
stos
cmp
xor
xchg
stc
push
jl
sti
sbb
iret
incl
scas
stc
imul
in
jo
push
lahf
mov
sahf
push
in
inc
push
sahf
adc
sub
mov
jo
sbb
pop
sbb
shll
pop
dec
dec
jb
mov
rorb
jmp
jp
addr16
or
pop
xchg
inc
inc
mov
ud2
fdivl
pop
fidivrl
orl
sbb
filds
mov
add
jmp
add
mov
inc
lea
push
gs
mov
xchg
bound
mov
push
ffreep
pop
sti
popf
stc
imulb
jge
xchg
in
repnz
push
pop
inc
loope
imul
shl
decl
adc
dec
movhps
jmp
pop
outsb
or
icebp
jbe
add
pop
ljmp
sahf
mov
fbstp
sbb
lock
into
mov
popa
jno
or
aas
lcall
push
pop
adc
shrb
dec
imul
or
cmp
ljmp
fwait
add
aad
inc
repz
sbb
repnz
cmpsl
xor
cli
mov
jecxz
or
sub
mov
aad
and
push
push
loop
mov
cmp
pop
inc
mov
sbb
mov
ret
sub
and
jbe
mov
jns
dec
pop
jle
sbb
mov
dec
loope
lret
push
sbb
pushf
enter
xchg
stc
out
add
pop
sub
fdivl
jge
jnp
ds
jecxz
jl
mov
push
mov
imul
push
ret
push
data16
jmp
xor
sub
mov
mov
or
js
addr16
adc
andb
cwtl
ret
fs
jnp
sbb
dec
dec
dec
inc
jecxz
push
pop
xchg
or
sub
inc
xchg
xor
aad
add
shrl
int3
fidivs
jb
inc
and
adc
xchg
clc
xlat
aam
out
bound
lods
in
dec
inc
mov
adc
xchg
jmp
lcall
sahf
cmp
rcrb
repnz
dec
outsl
mov
pop
lcall
cld
pop
lock
push
xchg
mov
mov
mov
int
adc
addr16
mov
pop
pop
or
cmp
jae
imul
repnz
jmp
push
jmp
fimull
dec
loop
jg
nop
test
sbb
inc
fsubrs
fadds
lds
rclb
xlat
mov
mov
aaa
stc
push
or
fwait
mov
ret
inc
rorl
jo
or
aad
in
sbb
scas
cmp
loopne
or
sahf
pop
mov
stos
call
fdivrs
lahf
cli
in
sbb
int3
push
pusha
cmp
repz
rorl
dec
xor
int
mov
pop
pop
mov
cmpsb
jecxz
mov
lahf
push
dec
pop
xchg
mov
inc
addr16
sub
pop
and
cmp
es
sbbl
into
gs
xor
sahf
in
xchg
or
sbb
loop
cmp
faddl
out
dec
rolb
cltd
sbb
and
out
jge
push
fstpl
pop
repnz
sub
fsub
stc
jnp
lret
imull
filds
and
xor
and
xorl
std
mov
test
scas
stc
je
sub
jle
jnp
bound
into
mov
or
pop
xchg
add
jb
mov
ds
jns
subb
loop
jg
pop
mov
daa
testl
or
stos
movsb
leave
stc
cmp
mov
push
fwait
imul
mov
lock
fdivl
jnp
lret
shlb
mov
mov
lds
mov
fstps
iret
cmp
and
adc
jge
xchg
daa
mov
or
movsl
cmp
cmp
pop
mov
mov
cmp
dec
or
cmp
loopne
negb
mov
shl
fsubl
aad
mov
out
enter
mov
test
stos
pop
outsl
mov
scas
sbb
pop
loopne
fstl
sbb
mov
xor
daa
test
stc
lock
imul
mov
outsb
pop
gs
mov
mov
mov
js
xchg
push
fdivrl
adc
push
ljmp
or
stc
xchg
scas
xor
mov
dec
jl
inc
into
inc
dec
idivl
orl
sub
testl
rolb
xchg
cs
pusha
idivb
jl
pop
movsb
jbe
jbe
xchg
imull
mov
std
push
jo
add
mov
mov
rorl
cs
divb
cmc
std
mov
xor
inc
xchg
enter
js
in
mov
mov
cmpsb
iret
hlt
sub
cmp
dec
fidivs
stc
push
cwtl
test
dec
mov
and
pop
inc
lods
dec
push
insl
fisubrs
fimuls
ret
fstps
dec
and
mov
das
and
fstpt
pop
pop
pop
iret
xor
lds
test
comiss
pop
push
in
and
push
fs
mov
sbb
out
mov
nop
fcomps
nop
xchg
sbb
xchg
xchg
in
jmp
fiaddl
cmp
xor
push
outsb
add
xchg
lahf
sbb
imul
add
lea
add
mulb
xchg
sbb
fdiv
xor
mov
imul
xor
pop
mov
out
jecxz
fidivrl
shrl
iret
and
loope
mov
std
dec
stc
xchg
int3
repz
mov
adc
nop
ja
and
xchg
daa
loopne
std
rcrb
imul
dec
cld
lret
add
shrl
pop
nop
cli
or
rclb
popa
adc
xor
mov
or
add
xor
inc
mov
dec
ds
and
cs
pop
jne
and
pop
test
inc
roll
lcall
mov
lock
ds
push
aam
cmpl
jbe
or
out
mov
divb
loop
cmp
push
stc
cwtl
paddd
and
jns
cli
mov
jnp
mov
sbb
out
xchg
cmp
xchg
cmp
bound
sbb
ss
das
mov
add
sbb
sti
popf
insb
mov
pushw
adc
test
int
fwait
loope
imul
lret
mov
ljmp
ss
xchg
popa
xor
stos
cltd
cmp
out
push
adc
jmp
ljmp
out
out
xchg
add
jl
dec
cld
mov
dec
pop
test
popa
sbb
adc
push
out
inc
xor
sahf
mov
push
mov
cmc
pusha
and
out
adc
shrb
adc
out
pop
dec
mov
out
and
jns
lret
in
scas
fcomi
dec
dec
inc
outsl
shlb
aad
and
mov
jae
in
addl
js
repnz
ljmp
nop
or
sbb
and
inc
push
sbb
mov
dec
push
mov
cmp
pop
push
mov
enter
data16
jle
mov
mov
jb
bound
mov
lods
inc
fstl
jle
orb
mov
ljmp
out
aam
jb
jns
pop
movsl
sub
cmpsl
or
pop
lods
mov
push
and
mov
or
xor
inc
aam
imul
lods
adc
xchg
test
push
or
bound
xor
push
testl
int3
mov
adc
mov
add
add
mov
cld
mov
orb
insl
push
mov
and
in
push
and
ss
xor
inc
insl
jo
inc
pop
or
mov
test
aas
pop
cmp
adc
fwait
add
mov
mov
fcomps
adc
jge
inc
insb
aaa
ja
mov
dec
pop
jb
mov
mov
or
lahf
pop
mov
leave
sbb
hlt
adc
outsl
push
cltd
iret
push
icebp
jg
cs
mov
inc
sub
mov
mov
or
adc
xchg
push
push
xchg
lods
aam
jmp
sub
cli
rcl
cs
cmp
iret
mov
loopne
lcall
cmp
add
mov
out
out
mov
mov
rcrb
xor
pop
lods
shlb
cmp
mov
sbb
cs
add
imulb
jo
addl
jmp
sub
test
mov
fcomp
adc
shll
in
mov
sbb
cmp
push
shll
fcompl
sbb
sub
adc
push
mov
in
pop
ja
cli
xor
lahf
dec
and
imul
andl
lock
mov
add
and
lods
pushf
js
cwtl
mov
cmpsb
lcall
cmovp
repz
push
enter
push
adc
fdivrs
jp
sbb
jg
ffreep
fdivl
push
mov
outsb
jge
xchg
idivb
int3
or
cmp
rolb
dec
sub
fimull
rcrl
mov
out
pop
stos
xor
xor
divl
push
jo
ret
js
dec
cwtl
cmovle
sbb
daa
xor
loop
add
dec
jne
and
lret
orb
dec
loopne
test
pop
mov
jns
ja
xchg
scas
dec
movsl
adc
fisubrs
mov
cmc
mov
in
sbb
andl
fsubrl
add
mov
das
mov
xor
dec
sub
loop
dec
mov
test
filds
orl
xor
inc
lcall
inc
jmp
mov
aas
out
jmp
adc
sbb
aaa
jb
fistpll
scas
clc
sub
inc
paddb
xor
cmp
cs
scas
call
push
icebp
inc
pop
xorl
xorb
outsl
push
xor
les
cs
fscale
pop
loop
fcmovb
xchg
mov
lret
cmp
jg
jl
aas
insb
sbb
hlt
mov
or
mov
pop
jge,pn
fsubrp
push
cli
lret
je
stos
mov
mov
int3
fbstp
adcb
jmp
jmp
xchg
mov
pop
ds
outsl
fnstcw
pop
test
sar
sbb
sarb
inc
pop
xchg
dec
cmp
and
js
in
loop
lods
ficoms
mov
dec
sub
mov
mov
cmp
std
adc
mov
xor
sbb
jl
int3
test
je
add
rolb
push
aam
in
stc
lods
sbb
push
mov
decb
ret
daa
jle
dec
jg
xchg
inc
dec
push
adc
dec
and
call
xor
insb
or
mov
add
or
repnz
movsl
dec
data16
mov
xchg
and
aas
out
test
call
scas
out
daa
adc
rcrl
or
mov
push
push
fistpll
cmpsb
push
cmovae
cld
or
mov
je
pusha
sub
push
nop
imul
push
rcrl
inc
mov
mov
cmp
jp
sbb
push
cmp
mov
ljmp
sahf
inc
les
mov
mov
add
adc
mov
pop
aas
push
cs
adc
loop
add
xchg
xlat
cmp
pop
les
loop
inc
fstpl
inc
cmp
popf
or
mov
pop
sbb
mov
and
aaa
and
sub
mov
xchg
xlat
je
sbb
push
ret
cltd
dec
mov
insb
jnp
mov
mov
movsb
push
jp
mov
add
test
sub
fcoml
shlb
push
lods
xchg
stc
lahf
push
push
in
mov
sbbl
insl
rcl
or
iret
rcl
aad
cmp
or
mov
sbb
jno
mov
adc
test
arpl
inc
jae
sub
mov
fucomi
test
xchg
dec
pop
aam
cmp
mov
aas
jecxz
lea
adc
adc
lds
jle
push
out
idivl
orb
sbb
jg
dec
lahf
sti
mov
xor
sahf
addr16
cwtl
iret
sbb
aam
int
inc
push
mov
pop
sbb
movsb
fldcw
xor
cs
push
insl
scas
arpl
xchg
dec
rcl
or
inc
adc
dec
inc
jb
lds
push
cltd
sub
xchg
inc
popa
fdivrp
ljmp
xor
stos
sar
or
push
inc
jmp
fs
jg
popa
into
xchg
ret
add
aam
xchg
sub
cmp
call
in
orl
and
adc
fsub
fcmovnu
lock
dec
pop
repnz
and
punpckhwd
insl
mov
dec
lret
mov
aad
fsts
pop
pop
aas
adc
or
pop
imul
and
push
or
fiadds
adc
push
mov
mov
cmp
out
sar
jo
push
and
xor
xchg
fisttps
dec
pop
or
mov
dec
pop
cmp
cmp
mov
repnz
cli
mov
cltd
nop
es
idivl
cmp
mov
push
mov
inc
xlat
or
dec
and
insl
and
clc
fists
dec
xlat
subl
call
imul
xchg
pusha
mov
sbb
push
es
push
push
jge
push
mov
mov
or
call
pushf
push
push
sbb
cltd
ficoms
ret
mov
nop
push
xor
push
ss
fwait
jne,pt
push
pop
mov
cwtl
inc
inc
jp
sahf
test
or
jg
mov
pop
je
inc
lods
cmp
outsl
fldt
mov
jle
sbb
arpl
jae
push
repnz
add
pop
aaa
scas
rcl
sub
or
mov
cmp
iret
aas
sarl
inc
insl
inc
out
cmpsb
pop
rclb
dec
sbb
sub
sub
jp
sub
les
bound
add
imul
rcrb
arpl
in
inc
or
out
pop
or
sbb
or
fsubr
cmp
jmp
testl
and
mull
shlb
idivb
xlat
dec
pop
ret
and
fcmovb
mov
add
fnsave
movb
enter
mov
popf
pop
or
mov
pop
or
repnz
mov
and
adc
pop
inc
inc
aaa
lret
pop
lods
test
lods
das
and
adc
jne
aam
push
movsl
cmp
and
xlat
nopl
adc
push
mov
dec
push
xchg
test
scas
jmp
ret
pop
or
sarl
mov
nop
rolb
add
adc
icebp
mov
jno
fcoms
dec
push
xchg
mov
mov
in
out
adc
jl
sub
xor
fnstenv
mov
fmuls
push
mov
cli
sbb
out
mov
lods
fsubl
jne
mov
pop
mov
insb
mov
and
push
jecxz
in
sub
loope
pop
mov
ror
mov
sbb
stos
mov
push
pop
sbb
icebp
pop
mov
rcr
and
mov
fistpl
movsb
pop
cltd
dec
jge
fisubs
push
pop
mov
xlat
sbb
rcll
add
in
ret
scas
mov
icebp
sbb
push
stc
in
pushf
ret
cmp
dec
xchg
adc
pop
dec
inc
inc
pop
cltd
inc
pop
mov
enter
aad
or
icebp
adc
loop
pop
dec
xlat
cltd
mov
js
stos
push
sbb
xchg
mov
popa
pop
fld
xor
xchg
inc
pop
loopne
iret
idiv
stos
int3
mov
add
mov
xlat
mov
jbe
jno
pop
pop
sbb
clc
ljmp
xchg
mov
xor
inc
orl
into
add
insl
pop
sub
mov
int
cli
call
mov
mov
sub
jbe
shlb
test
xchg
mov
js
scas
or
jb
xor
mov
sar
adc
testb
sub
out
rclb
cmc
jae
mov
xlat
xchg
out
aas
lock
ret
inc
xor
dec
add
xchg
ds
shl
data16
sub
ret
cmp
rcrl
sub
repz
push
in
sbb
faddp
cmp
sub
iret
out
aad
mov
stos
test
lods
sbb
loopne
xchg
sbb
rorb
mov
cmp
and
fadds
dec
int
push
inc
ja
or
ds
out
fdiv
xorb
rcll
aam
sbb
cmp
sbb
xor
pop
xchg
pushf
adc
jb
mov
push
sahf
xor
jge
mov
inc
push
or
test
out
scas
in
stc
outsb
and
mov
cmpsb
cmp
test
pop
lods
mov
movsb
in
imul
sub
cmp
das
ljmp
pop
repz
mov
ret
shlb
lcall
cmpsb
inc
jmp
xchg
adcb
test
stc
jp
imulb
pop
jns
lcall
notb
fildl
pusha
jg
inc
ds
jl
insl
dec
mov
inc
mov
ljmp
jbe
cmpb
xchg
mov
jbe
jp
jp
das
dec
dec
cs
or
lahf
dec
sub
ds
jp
sbb
dec
xlat
xor
cmp
pop
scas
dec
std
pop
sti
sbb
jl
femms
sti
mov
aam
mov
xchg
pop
cmp
mov
sbb
enter
lea
outsb
xchg
pop
negb
orb
int3
imul
divb
jecxz
xchg
jl
xchg
and
or
or
es
or
cmp
adc
xchg
mov
jnp
cmp
enter
pop
xchg
cmp
fisubs
jp
cs
xor
in
or
outsl
addl
xchg
or
jge
push
jns
cmp
jle
mov
pop
adc
mov
sub
notl
or
mov
adc
mov
arpl
arpl
scas
std
cs
push
mov
sahf
cs
push
sub
xchg
push
bound
jge
lods
push
es
das
fcmovnb
jb
gs
scas
filds
dec
adc
and
mov
dec
ljmp
rcl
or
testb
mov
subb
inc
mov
cmp
adc
xor
mov
sbb
nop
mov
dec
pop
add
cld
xlat
mov
jl
xchg
cmp
or
sub
mov
pop
mov
inc
aaa
cmp
mov
inc
pop
jae
cld
inc
push
iret
movsl
pop
out
loopne
push
push
mov
out
push
call
insl
lds
dec
imul
push
lcall
loopne
push
xor
dec
or
pop
push
xchg
cmp
std
add
bound
cli
mov
jo
and
fiadds
inc
xchg
das
fadd
xor
mov
fwait
xchg
test
cld
shll
mov
aad
adc
fmulp
jp
idiv
in
loope
jmp
out
mov
push
jle
and
stos
rclb
push
cld
sbb
lds
cmp
adc
jb
sahf
add
and
insb
fldenv
lock
ficompl
sahf
into
fists
dec
ljmp
lcall
pop
add
sub
pop
mov
sbb
aas
push
pusha
lea
sbb
lret
xlat
jne
dec
mov
lcall
xchg
cmp
pop
hlt
inc
pop
add
fdivs
or
rcll
inc
lret
lea
sbb
adc
cmp
lods
xchg
or
and
bound
or
jne
js
fwait
outsb
mov
ret
je
mov
push
adc
call
out
jge
push
call
popf
aas
add
mov
sub
negl
aas
dec
dec
adc
fwait
and
pusha
mov
or
ljmp
mov
pop
into
lods
loopne
inc
sarb
pop
xchg
adc
adc
int
jns
and
jno
and
mov
mov
jl
shll
and
das
bound
dec
jg
stc
inc
sub
lock
push
jbe
push
negl
xorb
dec
insl
call
fnstenv
lret
mov
xchg
push
ficoms
push
pop
in
dec
pop
shlb
push
lcall
sbb
pushf
lds
pop
into
sbb
fildll
es
cli
or
mov
nopl
dec
inc
fists
pop
gs
mov
andb
lcall
out
mov
or
ss
shlb
lock
jbe
ljmp
in
cmp
xor
pop
push
sub
mov
xorb
dec
lock
xchg
test
or
subl
sarl
adcb
or
dec
mov
cmpsb
shll
jb
ljmp
cmpsb
call
ss
jne
dec
outsl
cwtl
xor
inc
inc
gs
adc
fsubrp
adc
cmp
dec
mov
jo
jp
and
xor
cld
loop
stos
mov
xchg
pop
cmp
sbb
gs
bound
push
mov
in
sti
pop
cmp
mov
lret
pop
push
imul
jbe
ret
push
ja,pt
test
adc
cmp
addl
int
mov
push
frstor
cs
dec
xor
cmpsb
mov
add
push
mov
dec
movsl
dec
xor
adc
adc
xor
ss
jecxz
cmp
jg
push
mov
sbb
ret
dec
hlt
scas
mov
pop
pusha
out
test
divl
dec
sub
sub
dec
pop
push
dec
dec
dec
es
outsb
push
sti
push
sub
out
aas
dec
cmp
dec
fs
or
les
inc
fisubrs
insl
out
shrb
sbb
inc
mov
fcoms
stc
push
dec
inc
mov
test
cltd
pop
xor
push
add
mov
mov
inc
dec
sahf
inc
jmp
add
mov
popa
and
mov
pop
out
push
sub
inc
or
icebp
adc
icebp
stos
test
mov
and
ja
add
lcall
int3
xchg
pop
mov
push
shll
jp
jns
in
add
pop
loope
fwait
stc
jno
push
cmp
fistpl
add
int
jns
cld
and
lret
sbb
jae
in
jne
lret
push
loopne
cmp
jno
pop
fwait
mov
notb
aaa
sbb
mull
pop
dec
or
scas
into
into
out
jmp
jmp
negl
je
inc
push
push
mov
arpl
stc
in
push
ljmp
pop
js
add
ds
shr
pop
cmp
test
inc
bound
or
jno
mov
call
fstpl
cmp
cmp
mov
jnp
push
mov
leave
dec
push
ja
mov
inc
movsl
xchg
inc
hlt
cltd
mov
bound
out
daa
dec
add
or
subb
xchg
test
jns
nop
lock
fs
adc
int
cltd
popf
push
popf
dec
mov
sub
jp
fistpll
xor
aad
adc
inc
mov
popf
sbb
ss
pop
int
out
cld
push
popa
clc
aad
out
lds
testb
sbb
out
loope
add
mov
insb
repz
ret
nop
jmp
mov
in
inc
popf
incb
lea
pop
int3
xlat
lods
js
sbb
jo
lret
add
subl
jo
mov
in
push
out
jbe
xlat
icebp
mov
cmc
mov
cmp
jns
sub
mov
add
or
lods
xor
insb
and
xchg
in
cmpsb
pop
add
adc
cmp
insb
xor
ret
pusha
arpl
fdivs
test
add
add
and
es
push
jl
xor
mov
dec
out
xchg
call
das
loop
push
pushf
rorl
or
sbb
mov
into
adc
sahf
subl
int3
add
mov
movsl
inc
dec
mov
jne
dec
push
std
rcrb
pop
aam
mov
popa
gs
push
mov
inc
xchg
aaa
rclb
es
sbb
push
ret
fadds
inc
jb
daa
clc
cli
mov
add
dec
fcmove
pop
clc
cmc
scas
popf
push
dec
push
mov
aaa
std
aam
mov
lahf
cmp
sbb
repnz
mov
push
push
out
mov
jae
jl
popf
push
sub
xor
pop
scas
cmpsl
repnz
call
sub
cmp
lods
pop
fwait
push
loopne
dec
daa
xor
in
jg
mov
negb
lahf
mov
test
scas
in
test
loop
pop
outsl
mov
in
std
inc
push
sbb
pusha
adc
test
rcl
mov
loopne
addr16
repnz
and
aam
imul
lock
bound
jo
es
and
inc
xor
jnp
pop
pop
mov
push
out
add
lds
jg
mov
int
pop
xchg
dec
insl
push
mov
or
insb
iret
jp
shrb
aaa
jbe
xchg
pusha
ss
dec
xchg
scas
cmp
jae
add
cs
cmpsb
insb
pushf
pop
ficomps
sbb
xchg
out
or
aad
test
sub
testb
or
outsl
repz
out
xchg
stc
in
xchg
add
outsb
add
fistpl
sbb
mov
fsubrl
xchg
pop
test
dec
out
lret
adc
xchg
shll
outsb
lods
in
fidivs
inc
jb
out
and
pop
nop
xor
adc
push
mov
aaa
push
mov
ficoms
lcall
dec
out
adc
repnz
getsec
pop
jbe
fcompl
sahf
xchg
mov
and
rorl
push
pop
fcmove
pop
imul
pop
jns
jno
loope
clc
mov
loop
scas
pop
mov
roll
insb
pop
pop
and
sbb
scas
rolb
inc
and
jl
test
pusha
mov
lcall
ds
cmpsb
add
incl
mov
xor
out
pop
stc
mov
adc
fdivr
lahf
push
push
xor
std
jle
out
inc
enter
fnstenv
push
loop
xor
les
mov
rorb
cmp
sti
fldcw
mov
iret
xor
aad
into
ja
xlat
int3
les
dec
pop
gs
push
repnz
into
aam
ret
mov
lret
lret
loop
dec
push
into
dec
add
cld
jle
pop
in
mov
repnz
jle
and
not
jle
xchg
arpl
imul
sti
nop
mov
into
scas
add
cld
inc
iret
jmp
loopne
jg
push
xlat
or
sbb
jnp
cltd
mov
mov
clc
mov
das
pop
imulb
push
mov
push
test
int
out
les
call
iret
sbb
fsubrs
jbe
jp
mov
pop
sbb
ret
dec
lret
std
add
push
or
jae
repz
cltd
mov
mov
scas
cmpsl
ficoms
pop
push
push
adc
jp
mov
fidivrs
mov
test
andb
jno
stc
in
inc
stos
test
mov
pop
pop
push
xlat
call
sbb
mov
sub
adc
mov
rcr
nop
imul
out
or
rorl
das
mov
rclb
jae
imul
inc
cwtl
aas
mov
sub
pop
int
push
xor
and
xchg
sbb
fucomip
sub
pop
je
push
daa
mov
loop
adc
dec
jg
pop
in
imul
sub
mov
pop
mov
movsl
jo
das
push
ret
ds
or
test
insl
mov
frstor
pop
jne
mov
xchg
and
stc
popf
ljmp
subps
inc
js
or
movsb
mov
pop
adc
std
outsl
les
cmp
xchg
dec
jecxz
xchg
xchg
repz
push
mov
hlt
mov
dec
ljmp
orl
mov
fxch
jge
arpl
xor
or
cmpsl
ret
in
out
sub
paddusw
pop
or
cmp
xchg
xchg
sub
idivl
daa
xchg
repz
cltd
xchg
fstps
pop
push
push
insb
add
pop
xchg
adc
mov
or
std
sbb
mov
jbe
insl
push
pop
cmp
jecxz
push
mov
out
rcl
in
jp
pop
xchg
mov
out
xchg
stos
xchg
and
mov
jbe
test
mul
sub
xchg
shll
sbb
xlat
push
mov
fwait
inc
dec
lret
subl
jae
jg
ficoml
stc
inc
aad
lcall
xchg
push
and
inc
jno
push
and
es
das
inc
insl
inc
imul
gs
jbe
lcall
xchg
cltd
jmp
cmp
mov
pop
xchg
push
push
mov
or
mov
sub
clts
aaa
adc
mov
aaa
cmp
xor
int3
push
fs
mov
repnz
aad
jl
and
and
dec
adc
push
adc
and
or
js
imul
push
ljmp
pop
jbe
sbb
in
enter
sbb
out
add
mov
aaa
dec
scas
jnp
aas
sbb
adc
inc
adc
mov
sbb
and
xor
adc
sub
je
jmp
std
ss
and
fisttps
mov
xchg
fisubl
lods
daa
js
jae
dec
mov
xchg
or
pusha
test
xlat
jnp
into
xor
rorb
xor
test
insb
into
dec
clc
or
xor
pop
dec
out
cmp
fstl
das
fistpl
int3
inc
outsb
int
testb
push
ljmp
mov
jbe
push
ret
pop
xchg
testb
and
bound
xor
in
adc
adc
mov
into
sbb
push
sub
push
sub
insb
sbb
cmp
add
aaa
pop
outsl
or
in
cmc
sbb
or
and
fsubrl
stos
incl
and
push
sbb
push
iret
sbb
cmp
or
dec
mov
cmp
loopne
mov
mov
icebp
inc
test
xchg
das
sbb
outsl
inc
dec
mov
sub
cmp
fsubrp
push
iret
sbb
xchg
sub
push
pop
mov
pop
xor
repz
dec
cli
popa
inc
out
adc
sbb
out
imul
xor
xor
lods
push
mov
push
lret
nop
pop
jbe
in
sub
fisubrl
call
cmp
mov
pop
or
sbb
pop
inc
xor
testb
push
iret
xchg
jecxz
addl
jmp
in
adc
inc
mov
jle
push
and
out
rcrb
out
ds
mul
ss
push
nop
rclb
jl
cmp
aam
clc
inc
icebp
sub
push
fstpl
mov
out
sbb
dec
js
fdiv
xchg
push
inc
push
call
mov
dec
jl
lret
in
arpl
push
inc
add
orb
push
pop
sbb
dec
les
outsl
push
lods
test
dec
push
or
popl
push
loopne
mov
out
inc
mov
loope
insb
lock
and
add
sbb
enter
sbb
mov
test
pop
cmpsl
inc
jp
xchg
xor
test
es
pusha
pop
xor
aad
push
or
dec
js
pop
hlt
add
pop
scas
fstps
insl
in
cltd
daa
test
sub
inc
pop
out
outsl
or
fnsetpm(287
in
lods
cmc
lcall
or
in
fisttpl
mov
fidivrs
sbb
mov
add
js
push
lods
std
outsl
testb
out
cmc
mov
pop
xor
push
dec
shl
cmp
lret
push
fs
sbb
ss
cmc
js
sbb
push
sbb
jo
divl
cld
out
int
scas
xor
imul
decl
push
push
jo
dec
loopne
jno
cmp
lret
iret
xchg
arpl
jp
fiadds
sbb
dec
cmc
or
leave
xlat
xor
lea
in
jle
bound
push
data16
mov
fbstp
je
sahf
dec
ljmp
or
mov
sub
xor
cltd
dec
dec
scas
and
xor
push
jns
sub
test
addr16
push
loopne,pt
cmc
sbb
xchg
xor
mov
cmp
pop
add
and
mov
adc
pushf
jecxz
and
adc
iret
pop
sub
and
xchg
xchg
ss
and
lret
repnz
repnz
aad
fcoms
popa
push
jg
cmp
ljmp
cli
xlat
and
es
push
lret
adc
mov
push
cmp
mov
cmpsl
xchg
pop
dec
lea
push
mov
clc
adc
adc
push
push
and
in
scas
stos
iret
pop
dec
popa
aas
out
jb
loop
insb
sbb
xchg
data16
and
arpl
imul
sbb
mov
lahf
jl
push
jmp
lods
xchg
ret
jg
stos
mov
sbbb
lahf
pop
add
adc
cmpsl
lods
dec
mov
fstpl
cmp
out
mov
push
loop
xchg
es
popa
ficompl
mov
movq
add
push
idivb
fiadds
hlt
sub
and
sub
inc
imul
imul
dec
je
mov
popa
dec
pop
out
jge
xor
push
push
and
inc
fdivrp
addl
cs
movsl
bound
loop
insb
mov
cld
dec
dec
xchg
mul
mov
sub
sbb
fstpl
lea
cmp
mov
adc
add
mov
adc
mov
xor
repnz
cwtl
icebp
ljmp
cli
xor
xor
and
std
and
mov
lods
dec
push
sbb
mov
iret
and
pop
sahf
sbb
stos
and
inc
rcrb
imul
or
sbb
xchg
push
or
out
cmp
out
pop
push
inc
sbb
mov
push
and
jbe
add
mov
idiv
cmpsb
or
rorl
pop
adc
dec
popa
sbb
jl
mov
test
or
std
add
fdivs
sub
mov
data16
clc
stc
jns
movsl
mov
stos
sarl
jl
jbe
and
xchg
sti
dec
pop
out
push
fucomi
cmp
dec
stc
add
lcall
inc
push
xchg
sbb
fincstp
push
lret
pop
sbb
and
ss
cmp
xor
sbb
xlat
push
mov
xor
stc
dec
inc
cmp
in
pusha
xor
test
cli
jp
daa
mov
xchg
xchg
fdivrs
pop
test
ja
ficoms
jae
and
out
push
dec
sahf
ljmp
xor
sahf
or
sbb
jb
and
into
sbbl
pop
mov
repnz
faddl
sbb
inc
xor
jbe
sti
mov
mov
scas
mov
shl
add
mov
testb
cmp
jbe
stos
subl
subb
jo
cld
ret
or
les
inc
mov
xor
outsl
pop
jmp
jle
out
xchg
loopne
sti
pop
pop
lret
out
jo
idivl
fwait
lea
add
mov
mov
mov
add
das
sbb
test
pop
xchg
cmp
insl
jecxz
push
sbb
cmp
push
and
dec
mov
and
adc
xchg
push
movsl
sarl
pop
xchg
dec
sti
sbb
imul
das
adc
cmp
sbb
and
jmp
mov
adc
stos
inc
dec
imull
loopne
pop
imul
pop
popa
push
sahf
jne
out
pop
mov
leave
xchg
out
inc
std
xchg
push
xchg
into
in
data16
sahf
push
cmc
push
popf
out
add
adc
sahf
adc
pop
ret
pop
in
xchg
sarb
je
scas
rorb
jge
stos
mov
and
fmulp
leave
jbe
sbb
xchg
add
xchg
out
mov
push
xchg
cli
xchg
rolb
xchg
int
mov
dec
pop
push
mov
sahf
or
push
jle
mov
adc
sub
xchg
mov
push
cmp
dec
add
and
mov
and
jno
and
add
cwtl
mov
std
add
xchg
ljmp
movsl
pop
xor
hlt
xorl
xchg
loop
sbb
add
pop
shl
orl
sti
mov
mov
mov
pushf
ror
and
cmpsl
cmp
add
sti
jmp
dec
dec
inc
pop
push
imul
and
sub
cmpsb
in
data16
imul
mov
lcall
xor
cmp
in
pushf
adc
mov
fisubl
cwtl
and
push
cmp
add
lea
or
andb
stos
in
dec
cmpsb
dec
lahf
test
repz
mov
dec
call
movsb
repnz
dec
pusha
icebp
sbb
pop
jb
out
lcall
pusha
mov
mov
push
sbb
xor
pusha
lret
or
out
sub
xchg
pop
mov
pop
dec
fs
out
mul
and
add
gs
inc
icebp
sub
and
jns
push
sub
pop
mov
mov
and
arpl
shlb
xchg
imul
push
dec
pop
jns
xchg
orl
adcb
add
imul
frstor
adc
repnz
dec
push
push
loopne
je
cmp
pop
sahf
lock
movsl
pop
rolb
mov
mov
xchg
adc
rclb
bound
aad
cmp
js
out
mov
out
jbe
roll
pop
fidivl
and
repnz
lock
xchg
fimull
adc
pop
fbstp
push
jp
ljmp
lea
mov
push
inc
in
xor
add
push
mov
sahf
fstpl
cmp
sub
xchg
test
or
xchg
outsb
jne
cmp
and
arpl
xlat
mov
ss
mov
cmp
call
fisttpl
xor
inc
pop
mov
sbb
mov
mull
cmp
cli
xchg
clc
dec
fisttpl
test
pushf
stc
stc
test
negb
test
sbbb
sarb
mov
mov
enter
and
pushf
sbb
and
adc
movsb
xor
loopne
lret
or
push
bound
jle
imul
inc
rclb
pop
cltd
daa
in
or
jecxz
cmp
dec
or
pop
ret
lds
add
sub
dec
jb
loop
inc
std
iret
xor
daa
mov
out
loop
jb
inc
arpl
or
mov
push
ljmp
mov
js
pusha
cmp
xchg
pop
test
xchg
sub
in
mov
xor
mov
test
inc
or
mov
out
sbb
dec
loope
mov
rcll
add
pop
sbb
adc
outsb
push
daa
ljmp
push
outsl
xor
push
sahf
cmp
js
loopne
pusha
pop
lret
push
cltd
push
push
pop
popf
fimuls
pop
stos
mov
sbb
sub
sbb
sbb
inc
mov
mov
mov
jp
mov
inc
xor
ret
lahf
jge
mov
test
push
nop
loop
dec
mov
jne
dec
push
cwtl
icebp
fisubl
icebp
outsl
cmpsl
dec
cmp
adc
add
pop
mov
sub
sub
push
cmp
lds
dec
push
stos
mov
popf
int
lea
mov
in
sbb
int
cmc
mov
fwait
sbb
mov
dec
and
mov
mov
jno
out
enter
aad
testl
sbb
mov
aad
push
jns
mov
out
and
roll
or
jecxz
bswap
xchg
fwait
xchg
sub
sahf
and
stc
push
nop
shl
loopne
bnd
push
and
sahf
pop
ds
loope
pop
inc
push
sahf
arpl
pop
pop
nop
fistps
fisttpl
cwtl
pop
aam
xor
sarl
xor
arpl
sbbl
test
ljmp
push
dec
sbb
sti
dec
mov
mov
mov
ret
jg
sub
gs
jmp
scas
jecxz
sbb
sbb
fsts
xchg
lret
bound
loop
aaa
jg
out
sbb
dec
call
movsb
clc
ljmp
pop
pop
xchg
inc
jne
pop
mov
xchg
or
rclb
shll
loopne
or
xor
and
pop
cs
sti
add
cmp
sbb
lods
cld
fisubs
pop
cltd
dec
jbe
push
ljmp
jecxz
adc
aas
dec
push
xorl
leave
sbb
jns
ss
out
lods
dec
sti
inc
nop
pop
ja
push
jl
das
push
outsb
lods
mov
es
inc
add
inc
pop
into
pop
or
je
test
push
loope
and
pop
jp
dec
jbe
adc
fstps
scas
pop
dec
xchg
outsb
pop
cmp
mov
pop
shl
in
push
fists
icebp
adc
mov
xor
mov
fimuls
pop
fmull
ffree
lret
jmp
adc
dec
xchg
daa
jg
insl
dec
jp
test
jb
push
xor
scas
mov
fwait
ds
pop
cmpsb
push
in
mov
jle
add
sbb
dec
sbb
lcall
aam
mov
cmp
fldt
daa
decl
dec
add
lock
mov
cs
test
mov
mov
and
xchg
dec
push
jge
insl
add
fwait
pop
outsl
outsl
pop
jl
mov
sub
xor
mov
mov
jmp
mov
cmp
rolb
adc
or
mov
testb
push
pop
clc
push
popf
mov
cmpsb
out
and
sbb
and
add
and
scas
adc
insb
adc
ret
or
ret
adc
mov
sub
pop
into
and
xchg
sub
test
xchg
cmpsl
xor
adc
jle
fxam
jp
enter
pop
and
pop
xchg
mov
push
xor
xor
insl
inc
ret
pop
push
scas
xchg
out
adc
push
jmp
cwtl
rcll
and
and
das
aam
mov
fiaddl
inc
dec
pop
orb
jb
push
cmp
in
adc
push
loop
jo
iret
call
iret
aas
push
or
test
aad
xor
es
scas
test
gs
or
xor
push
push
data16
in
sbb
jmp
and
je
and
outsb
push
sub
arpl
pusha
ds
sub
loope
sbb
jmp
orb
repz
jmp
cmp
inc
xor
xlat
adc
push
jg,pt
stos
sti
shrb
in
mov
repnz
je
sub
lock
and
cmp
dec
daa
aam
cli
out
xchg
pop
fsubrp
mov
test
xor
ja
adc
inc
xor
or
fiaddl
dec
sbb
or
push
mov
jnp
pushf
add
std
pop
ret
orb
adc
rol
rcr
mov
mov
adc
lods
xchg
push
dec
dec
push
dec
jl
inc
xchg
aad
xor
xchg
mov
ds
bound
loop
adc
out
stc
sahf
sbb
inc
cmp
imul
push
ja
insb
addl
fmuls
push
test
add
das
dec
enter
add
aam
out
sbb
xchg
adc
mov
adc
push
cmpl
arpl
test
arpl
aas
aad
out
xchg
lcall
rcl
loopne
fucomp
and
fld
cmp
xor
bound
out
js
aas
dec
inc
xchg
inc
fs
dec
cwtl
and
or
or
inc
push
lret
fsts
cmp
sbb
push
popf
cpuid
mov
cli
out
ljmp
out
ficompl
data16
imul
and
or
pop
stos
mov
arpl
loope
sub
sbb
hlt
bnd
dec
adc
pop
jns
clc
in
push
mov
cmp
mov
fsubs
pop
and
jecxz
jp
mov
cmp
mov
jl
add
ds
fldenv
lods
dec
repnz
int
cltd
sub
stos
mov
jle
jle
add
inc
pop
loopne
test
mov
cmpb
insl
add
lock
mov
bnd
in
ljmp
sbb
flds
jp
mov
psllw
mov
dec
push
jg
push
sbb
jb
pop
enter
shrl
jge
lret
mov
pop
insl
movsl
icebp
jb
leave
js
je
add
add
inc
stos
sbb
aam
cmp
inc
out
lahf
cmpsl
and
les
sti
ds
minps
inc
inc
dec
ret
idiv
sub
xchg
je
fs
ret
mov
lcall
or
inc
jmp
aad
push
test
sahf
and
stos
xchg
mov
ss
int
mov
xor
dec
dec
sub
pop
or
push
xchg
jecxz
add
add
and
push
lahf
repnz
inc
jle
push
mov
mov
fisubl
pop
cltd
test
nop
sbb
shrb
adc
insb
add
adc
xchg
ret
mov
fwait
add
and
cmc
push
adc
ret
jg
sbb
or
aad
push
mov
jo
push
mov
xlat
rorb
cwtl
clc
xchg
inc
int
sbb
cmpsl
daa
aam
inc
loop
and
movsl
sub
js
repnz
mov
mov
addr16
dec
xchg
mov
arpl
mov
loop
mov
or
test
out
in
push
ss
and
repnz
jb
or
xor
xchg
lods
scas
ret
sub
mov
lahf
arpl
sbb
adc
push
cmp
insb
mov
rclb
cmp
lahf
outsl
jbe
fnstsw
push
xor
dec
out
aas
and
iret
sbb
mov
lds
inc
jo
or
inc
adc
xchg
xor
sub
faddl
add
jnp
scas
gs
pop
je
rorl
cmp
popf
in
in
mov
mov
sub
stos
aam
mov
jno
imul
mov
push
pusha
lods
ds
ret
imul
xchg
adc
jmp
test
ljmp
mov
arpl
clc
mov
ficompl
push
mov
js
pop
sub
inc
xchg
adc
jle
test
insb
or
push
dec
mov
push
dec
mov
out
mov
xchg
nop
mov
test
inc
xchg
fadd
repnz
push
scas
inc
xchg
jo
mov
inc
or
pop
stos
je
bound
xchg
sbb
mov
ret
fdivrp
jle
bound
adc
pop
inc
mov
scas
shl
mov
in
pop
dec
jmp
add
mov
ficompl
ja
hlt
push
daa
mov
aad
dec
sub
sahf
fdivp
pushf
cltd
pop
sbb
mov
push
ret
sbb
adc
push
jle
insl
or
stc
nop
sub
mov
adc
adc
push
and
sbb
jecxz
cmp
int
sub
xchg
aaa
popf
dec
mov
cwtl
popf
inc
pop
or
addr16
mull
ret
mov
lahf
in
js
insl
jno
out
std
jmp
aas
outsl
stc
movlps
cld
cmp
icebp
lods
xor
outsb
jae
add
add
or
push
xchg
inc
pop
cmp
inc
mov
pop
std
xchg
loop
rorl
inc
jae
pop
ljmp
call
enter
in
movsl
xchg
mov
gs
cmpsb
jnp
mov
xor
or
and
jp
pop
lds
push
sarb
jbe
es
es
push
fstps
imulb
jae
jmp
cmp
cwtl
repnz
mov
call
ret
rcrl
test
hlt
lahf
out
push
cltd
ficoms
jle
dec
negb
out
test
scas
mov
adcb
sbb
lock
sbbb
aaa
mov
jg
push
fcoml
out
repnz
es
xchg
push
pop
adcb
shll
xor
pop
gs
lcall
test
pusha
and
mov
or
add
orl
push
iret
jno
adc
outsl
sbb
insb
fistps
shlb
dec
pop
and
sarb
mov
cmp
dec
or
pusha
hlt
imul
mov
add
dec
fldl
push
imulb
xor
and
negb
fisttpll
lods
leave
testl
fcmovbe
popa
cmc
popa
lcall
or
dec
imul
pop
movsl
ds
scas
xor
insb
mov
insb
out
inc
and
inc
push
pop
cmp
adc
dec
into
in
or
or
rorl
and
fwait
inc
cmpsl
push
dec
fnop
repnz
loope
pop
rorl
adc
sub
inc
ret
or
arpl
fidivrs
sub
data16
mov
cmp
jns
mov
mov
into
inc
ss
xlat
lods
xchg
pop
cltd
out
movsl
dec
xchg
cltd
ljmp
enter
lds
xor
push
mov
arpl
add
lods
divb
add
enter
loopne
mov
test
stc
cld
mov
in
or
cli
xor
xor
dec
lods
fnstsw
inc
jb
lock
push
std
mov
arpl
sbb
in
ret
dec
out
add
pop
cmpsb
shrl
dec
push
xor
pusha
data16
lods
je
sub
push
loop
jg
imul
addr16
mov
int3
daa
inc
mov
and
rorl
es
and
dec
call
les
and
mov
mov
dec
or
dec
or
iret
sbb
cltd
jae
int
fsubs
and
fucomi
das
std
cmp
mov
cwtl
movsl
inc
rcll
enter
dec
jns
adc
cld
orl
push
inc
inc
loopne
dec
insb
or
imul
scas
xor
jb
xor
je
dec
adc
and
jmp
mov
push
xchg
imul
jmp
movsb
jmp
movsb
dec
push
aam
cltd
adc
aam
cwtl
mov
mov
ret
push
xchg
out
xchg
rclb
rclb
dec
xlat
test
or
adcl
jmp
sbb
inc
inc
out
sbb
dec
adc
lods
std
mov
pop
or
sub
in
repz
mov
or
xchg
lock
cmp
mov
ds
sbb
xor
jmp
scas
repnz
push
cmpl
nop
sub
push
pushl
mov
fwait
std
pop
ljmp
fisubl
push
repnz
lcall
insl
mov
mov
sti
adcb
insb
mov
mov
das
jae
ss
xchg
jbe
dec
or
cmp
adc
stos
cmp
mov
stos
sbb
imul
cltd
mov
cmp
outsl
movsb
aam
arpl
push
sahf
inc
out
push
push
ds
pop
and
cmp
nop
mov
xor
push
sub
cmp
in
sar
inc
push
ja
clc
push
shrb
push
leave
adc
int3
mov
and
in
fdivl
cld
mov
push
xchg
push
das
pop
dec
push
pusha
adc
xor
or
push
jnp
dec
pop
insb
mov
pop
lock
aam
dec
loopne
lds
mov
xchg
dec
les
dec
and
cli
iret
inc
test
mov
xchg
jg
jmp
out
mov
mov
adc
cmp
push
mov
mov
dec
pop
push
fadd
pop
aam
push
jo
insl
pop
push
stos
pextrw
repnz
fstpl
mov
pop
mov
mov
repz
nop
addb
dec
out
lock
and
iret
pop
pushf
imul
orl
pop
mov
in
xchg
mov
stc
je
cmpb
push
or
repz
movsb
mov
les
popa
add
je
scas
aad
or
push
jge
je
addr16
mov
xchg
rolb
push
push
clc
mov
lret
sub
int
add
lret
mov
rep
rcrl
scas
sub
es
jns
ret
sbb
adc
pushf
pop
into
sbb
cmp
adc
inc
imul
sbbb
icebp
adc
sti
cli
lods
out
int3
push
js
mov
fsubs
sbb
mov
dec
rclb
dec
cltd
jmp
xor
out
nop
int
xchg
inc
push
lock
call
addb
int
ljmp
jns
dec
fimuls
sbb
add
sbb
add
mov
int
sub
lea
cmp
out
or
lods
pop
lods
cld
ss
aas
loope
movsl
mov
xor
cmp
int
sub
cmp
and
adc
loop
mov
lock
mov
ljmp
sbb
ss
sbb
or
jo
adc
add
or
sti
rolb
je
aam
stc
dec
movsb
jbe
test
ficoms
jmp
xchg
jbe
sub
scas
mov
clc
in
jl
xlat
push
push
ds
mov
xchg
xor
lods
fsubr
or
rcll
js
test
and
testb
adc
aas
or
mov
jns
sub
cmc
lea
mov
lds
mov
fsubrp
add
pop
mov
push
and
sbb
add
sbb
push
pop
mulb
push
fistps
and
push
and
sub
xchg
and
jmp
aas
sub
es
movsl
add
es
lret
dec
xor
dec
xchg
cmp
mov
shrl
rcrb
push
inc
mov
fiaddl
add
int3
dec
addr16
inc
movsl
arpl
dec
movsb
stos
setns
pop
test
stc
xor
cltd
stc
inc
xor
and
adc
cmp
mov
add
jge
lea
fsubs
cmp
push
push
dec
push
adc
aas
add
pop
cmp
gs
out
mov
inc
jnp
adc
mov
xlat
and
dec
mov
xchg
xchg
mov
repz
xorb
pusha
js
pusha
shlb
push
testb
out
cmp
sti
jmp
mov
jmp
mov
xchg
dec
mov
cmovle
pop
add
mov
push
xchg
jmp
push
aaa
xor
mov
mov
aaa
sbb
out
ds
ficoms
iret
adc
mov
dec
sub
ret
loop
lea
js
shlb
icebp
pushf
aam
inc
push
jo
dec
mov
pushf
add
mov
jmp
or
push
and
stc
xchg
arpl
cmp
shr
mov
int3
sub
int3
outsb
fdivrl
divl
setp
jnp
push
mov
lock
xchg
into
sub
movsl
pop
out
lods
dec
push
sbb
sarl
gs
or
cld
pop
dec
sub
push
xor
scas
adc
fstl
push
jmp
lock
mov
insb
addr16
mov
movsl
sti
aaa
jbe
jbe
xor
push
loop
mov
sti
dec
and
adc
jecxz
lret
jae
in
out
push
sbb
cs
das
xchg
les
arpl
mov
mov
mov
push
adc
mov
add
sub
es
mov
cltd
scas
mov
popa
dec
es
mov
out
rolb
sub
mov
arpl
dec
and
jl
xchg
cld
mov
push
cmp
mov
and
mov
dec
xchg
out
push
push
pop
sbb
in
inc
mov
mov
out
js
shrb
arpl
sti
pop
bound
dec
dec
mov
pop
in
cmp
adc
pop
dec
jbe
scas
rcrl
push
mov
aaa
jo
dec
ficomps
mov
lret
dec
and
rorb
adc
bswap
push
idiv
rcrw
or
frstor
xchg
imul
es
adc
mov
fildll
push
jecxz
stc
loope
xchg
ret
or
push
mov
cmp
test
cmp
add
add
addr16
xchg
push
mov
mov
fisubrs
jae
cmp
popa
aas
pop
shll
stos
insl
fisttps
add
ljmp
rcr
stc
std
push
inc
sbb
mov
es
cs
sub
adc
lcall
lock
and
jbe
mov
xchg
fnstsw
cs
in
test
and
icebp
push
jmp
cmpsb
mov
jle
aad
dec
popa
push
cli
add
mov
dec
jbe
pusha
sbb
push
int3
icebp
add
cmovo
leave
sbb
mov
jmp
cwtl
ret
cwtl
pop
xchg
das
nop
sbb
fwait
adcl
mov
sbbl
into
dec
fadd
jb
movl
or
add
repz
mov
jg
cmp
das
test
aam
ss
sub
sbb
dec
mov
int3
imul
cmp
fcoml
sarb
in
fldl
ljmp
jge
dec
movsl
pop
fprem1
arpl
enter
push
rcll
nop
xchg
or
sbb
pop
cltd
ds
xadd
xchg
in
inc
jne
mov
or
jge
jb
in
aam
inc
pop
sbb
pop
cltd
xor
cld
shll
cmp
add
xor
sub
inc
and
push
xchg
dec
inc
mov
cs
gs
xor
fildl
popa
xchg
testb
xor
into
push
ds
cwtl
jg
frstor
icebp
sbb
sarb
shl
dec
xchg
push
decb
test
push
sbb
mov
inc
shl
sub
clc
rcrl
clc
js
es
xor
insb
loope
stos
enter
lock
or
mov
push
lea
push
xchg
mov
test
lret
in
orb
aad
cld
cmc
daa
or
ficompl
iret
sub
stos
push
xor
fists
rcr
pushf
adc
arpl
cmp
push
sub
dec
into
pop
pop
or
fadds
icebp
in
xchg
sbb
lods
push
ret
repnz
inc
mov
lcall
dec
adc
lcall
dec
inc
xor
ret
xor
and
dec
out
lcall
mov
mov
and
inc
js
adc
lret
pop
and
pop
ret
sub
sbb
scas
add
les
mov
adc
dec
in
xchg
xchg
fbstp
fists
adc
sub
inc
stc
pop
push
dec
test
cmp
jns
movb
filds
lods
aam
sub
or
xorl
and
or
mov
push
dec
int
xchg
mov
sahf
mul
ds
push
xchg
jecxz
push
push
dec
stc
imul
jo
inc
mov
int
mov
sbb
push
je
lock
cmp
push
call
push
sub
pop
or
mov
push
pop
push
sti
loop
mov
out
test
pushf
push
mov
sub
popf
mov
lret
sbb
push
xor
and
loop
sbbb
lds
mov
movsl
pop
fisttps
and
xchg
add
rcrb
into
aaa
mov
gs
jg
pop
mov
mov
push
sbb
push
pusha
xchg
pusha
imulb
xchg
pop
jmp
aaa
and
push
xor
cmpsb
scas
lret
test
sbb
jns
shrl
dec
xor
adc
std
push
sub
xor
xorb
push
ja
add
je
pop
cmp
jnp
cmp
scas
mov
mov
mov
aaa
inc
scas
cli
loop
in
sar
test
fadd
inc
imul
cmp
int3
jge
add
pop
pop
cmp
adc
movsl
cmp
mov
andb
imul
lcall
adc
nop
lock
push
inc
mov
xor
fists
push
xor
les
shlb
cmp
push
insb
jns
inc
dec
ret
pushf
dec
pop
sbb
xor
lods
aaa
fs
out
arpl
jle
and
jle
testb
cmc
shl
mov
mov
sub
sbbb
mov
repnz
xchg
dec
icebp
lahf
hlt
cmpsb
mov
push
jp
sub
pop
jo
inc
arpl
scas
negb
rolb
lea
dec
pop
jmp
jnp
jle
add
push
out
xor
sub
jp
out
ret
mov
sbb
mov
jle
and
mov
fsubl
mov
dec
adc
shlb
notb
add
ljmp
mov
mov
mov
xchg
jo
xchg
les
fwait
rcr
in
adc
loopne
addr16
lahf
jmp
push
sarb
ss
push
mov
fildll
jnp
fcoms
cmp
adc
inc
mov
rorb
mov
int
or
xor
xorb
add
pushf
cmp
notb
das
or
and
mov
fdivs
and
lahf
pop
stos
xchg
inc
jl
jns
push
dec
inc
adc
cmp
shll
lahf
xchg
outsl
stc
dec
test
adc
adc
mov
in
or
in
loope
dec
or
sbb
in
xchg
dec
enter
adc
in
dec
sub
mov
dec
aad
lret
mov
lret
lds
pop
sbb
lahf
push
pushf
sub
mov
inc
fbstp
jle
in
push
mov
std
bound
push
loopne
push
fidivl
fcomps
fldenv
in
pop
and
sub
in
or
adcb
pop
mov
rcll
sub
cmpsb
dec
add
mov
and
std
jno
scas
and
jl
pusha
in
ret
add
dec
dec
pop
out
pop
in
and
mov
mov
and
fidivl
fs
jge
dec
xchg
in
adc
lret
push
mov
movsl
push
dec
push
es
jp
push
pop
adc
sub
rcll
and
cmc
out
mov
mov
jp
adc
mov
or
and
sahf
sbb
sub
stc
enter
addr16
pop
adcl
aaa
lahf
and
loope
ljmp
shrl
stos
mov
int
jg
dec
stos
inc
sbb
inc
loop
lds
add
push
sti
mov
adc
ror
jmp
in
push
xchg
pop
inc
cmc
cmp
push
cmp
into
inc
adcb
push
arpl
and
pop
mov
cmp
lds
leave
jns
mov
xchg
inc
mov
mov
into
cmp
sbb
lds
lea
or
in
sbb
data16
pop
js
mov
mov
fsubrl
inc
inc
pop
xor
sti
sub
stc
mov
push
inc
sbb
xchg
jle
adc
inc
dec
sbb
lds
mov
movsb
pop
cmpsl
loope
inc
mov
sbb
inc
arpl
jnp
shr
jnp
xchg
inc
dec
ds
inc
jecxz
sbb
dec
mov
jle
mov
sbb
pop
or
inc
dec
testb
push
xchg
cmovo
dec
push
lds
sbb
jne
xchg
cmp
dec
adc
or
aaa
add
pop
cld
mov
xor
dec
cld
fstp
cs
lock
cwtl
test
shll
or
call
mov
fnstsw
jge,pt
adc
inc
jne
scas
adc
loopne
push
ficomps
push
dec
mov
xchg
adc
xchg
lret
in
fsubl
adc
in
test
sbb
in
fistps
lods
pop
lea
or
mov
push
sahf
add
jb
call
add
pop
or
addr16
out
xchg
xor
lea
outsb
shr
scas
jmp
push
cmp
divl
shl
mov
fimuls
mov
pop
push
sub
inc
fstl
push
cli
iret
ja
out
push
xchg
cmp
pusha
aas
xchg
push
pusha
and
bound
pusha
arpl
call
scas
add
outsb
inc
mov
pop
sbb
xchg
inc
cmpsl
in
add
insb
popa
lret
dec
incl
pusha
ja
pop
fisttpl
cwtl
insl
push
arpl
push
jle
aam
pop
ss
adc
sti
sbb
or
das
mov
lds
dec
adc
mov
outsb
es
aam
mov
popa
xchg
pop
imul
insl
inc
insl
push
sbb
adc
stc
fidivl
sub
pop
cmc
aaa
push
fiadds
pop
xor
sub
fnsave
loop
sbb
sub
mov
dec
push
inc
xchg
cli
push
mov
je
dec
push
ror
shl
in
in
jle
popa
cwtl
insl
dec
push
imul
mov
add
push
out
mov
movsl
ret
pop
stos
ljmp
int
out
jle
push
aad
jmp
shlb
mov
es
pusha
sbb
je
out
aad
lcall
push
repnz
pop
dec
mov
sub
hlt
fdivrl
aaa
adc
pop
mov
sbb
and
stc
sbb
sub
push
jo
mov
repnz
and
jno
arpl
cli
jae
lcall
jmp
dec
sub
jne
addr16
ss
out
xchg
pop
cmpsb
jb
mov
sub
fstl
mov
pop
jb
in
call
push
push
dec
mov
and
std
sub
mov
xor
sbb
into
dec
rcll
add
pop
sub
mov
ds
jmp
fucomi
or
inc
mov
adc
inc
xlat
jp
and
xor
mov
xor
stc
mov
pusha
push
push
pop
cmpsb
das
inc
fstp
sbb
lock
dec
mov
or
sbb
imul
repz
ret
aas
sarb
jbe
nop
imul
fisttps
cmp
xlat
push
iret
jle
scas
push
push
xchg
lret
ds
adc
lds
mov
pop
cli
and
jecxz
sbb
dec
test
push
lahf
outsl
pop
bound
inc
and
loope
pop
mov
jg,pn
dec
push
push
loope
adc
push
sti
and
loopne
cmc
leave
das
push
pop
arpl
js
pushf
lcall
push
das
stos
fimuls
add
mov
dec
push
ja
mov
stc
push
repz
es
movsb
pushf
mov
mov
xlat
and
mov
pop
lock
sub
cli
push
int3
ror
mov
fstpl
cmpsl
outsl
mov
sti
push
and
es
rcll
mov
jp
loopne
push
lret
cld
xchg
ds
sbb
dec
ljmp
sbb
lret
mov
int3
cmp
push
cmpsb
les
pop
mov
mov
testl
adc
cmp
jge
sub
ds
fs
xchg
loope
jne
pop
ds
cmp
xor
stos
ss
add
lret
adc
sbb
lock
cmp
sbb
sub
jmp
xchg
int3
iret
lds
loop
push
jp
dec
lea
jl
adc
mov
js
lock
push
push
scas
mov
cmp
jb
fsubrs
xchg
std
or
cld
push
mov
push
pop
push
mov
testl
jo
outsl
lods
fidivs
cs
aam
sbb
push
rcl
aas
scas
fisubl
bound
or
dec
js
cmp
out
sahf
cmpsb
in
sub
inc
mov
popf
add
inc
in
stc
pusha
jbe
sahf
scas
cli
xchg
sub
loope
mov
into
cmp
jns
inc
jmp
std
fdivrl
xlat
es
mov
pop
push
sub
and
jecxz
icebp
or
sub
rcrl
push
push
stc
mov
fimull
roll
mov
sbb
mov
and
xlat
adc
int
sbb
mov
jb
rorl
ljmp
lahf
pop
cmp
and
out
not
cmc
jle
jmp
imull
jmp
pop
mov
dec
sarb
xchg
or
xor
cmp
adc
push
aas
lret
or
fxch
ds
ficoms
inc
rclb
cmp
fstl
inc
cwtl
loopne
ret
sbb
xchg
xchg
std
dec
xchg
mov
inc
cld
sbb
stc
or
inc
shlb
mov
dec
test
test
outsb
stc
and
inc
or
aad
lret
aaa
sbb
insl
mov
test
in
sahf
mov
mov
cmp
loop
es
stc
mov
clc
xchg
push
jnp
or
dec
mov
sub
fbld
mov
xchg
dec
mov
xchg
pop
shlb
dec
outsl
negb
mov
jl
repz
dec
das
pop
mov
jns
movsl
frstor
inc
outsb
xchg
jle
movsl
popf
add
inc
enter
es
outsl
mov
scas
dec
cmp
mov
or
inc
daa
xor
xor
cltd
jne
loopne
test
adc
xchg
mov
popf
mov
testb
in
scas
dec
or
cmp
cmp
xor
lret
pushf
dec
mov
push
xor
or
fistps
sbbl
mov
inc
mov
lock
adc
xor
push
mov
insl
jbe
bound
test
fcomps
hlt
push
stc
loope
fimuls
or
pop
in
pop
hlt
xor
inc
inc
adc
std
std
add
adc
mov
xchg
lret
dec
fcmovnb
push
push
rcl
je
out
mov
pop
test
out
aam
cmp
xchg
in
int
aas
lret
mov
and
movl
xchg
push
shlb
or
sbb
je
jmp
jns
or
into
fsubs
and
mov
push
pop
fistps
repnz
mov
sbb
dec
xor
notrack
pop
lock
mov
jge
shl
push
mov
rorl
inc
test
str
add
insl
mov
frstor
push
rolb
mov
add
and
jl
and
inc
adc
test
mov
inc
daa
jo
cmc
dec
sub
into
sahf
pop
mov
sbb
jns
rcrl
sbb
and
fidivrl
sbb
sub
sub
adc
out
out
adc
sbb
and
xchg
xlat
ja
push
or
jns
xchg
nop
dec
pop
pop
push
pop
or
sbb
popf
mov
das
cli
imul
pop
cmp
ja
inc
sbb
pop
inc
jmp
push
mov
fcoms
out
loopne
pop
push
popa
pushf
test
idivb
arpl
or
arpl
js
dec
pop
mov
mov
mov
add
or
aad
push
loopne
mov
push
imul
inc
adc
scas
cmp
ror
pop
sbb
negb
imul
outsl
add
stos
push
lock
adc
jbe
push
xchg
in
cmp
jns
les
add
cltd
fsubrp
pop
push
push
xlat
repnz
push
dec
mov
mov
dec
and
roll
push
roll
roll
push
out
rcll
out
and
xchg
dec
mov
and
jns
dec
jl
dec
inc
das
cmp
sbb
mov
rorl
out
shlb
sbb
inc
test
sti
xchg
mov
cld
add
vmovups
mov
das
adc
lret
mov
fsubs
lock
jl
or
mov
pusha
clc
js
add
in
mov
fyl2x
adc
fisttpl
push
imul
shlb
push
iret
add
fimuls
inc
cmp
cltd
popa
push
pusha
fwait
inc
int3
pop
lcall
pushf
xchg
cmp
cmc
fwait
iret
mov
test
xchg
and
xor
lock
bound
cmp
pop
adc
push
ficomps
stc
or
mov
cli
jp
or
int3
daa
add
dec
int
dec
cmpsb
pushaw
cltd
cmc
nop
iret
mov
les
loop
sbbb
sub
decl
xor
adc
outsl
inc
int
dec
in
lret
pop
inc
adc
cli
mov
mov
frndint
loopne
adc
pop
sub
lods
arpl
jl
pop
iret
test
jb
pop
mov
adc
enter
icebp
in
push
bound
outsb
scas
mov
les
sbb
adc
rorb
hlt
mov
jae
adc
sbb
xchg
js
mov
movsb
enter
out
jnp
adc
jnp
dec
inc
xchg
jle
mov
iret
xchg
icebp
push
mov
pushf
pop
cwtl
mov
outsl
pushf
or
negb
mov
fcomps
adc
cmp
pop
sti
adc
cmovle
shl
inc
rcl
arpl
and
cmpsb
mov
sub
lds
out
test
lret
jne
imull
mov
bound
mov
push
fld
mov
add
lret
stos
into
jge
imul
loopne
scas
rclb
mov
sar
aam
push
mov
jecxz
sbb
mov
jae
fnstsw
pop
repnz
xlat
movsl
shl
jmp
push
sub
add
dec
mov
sbb
cmp
lret
fidivs
lods
xor
xchg
jo
pop
ret
pop
movsb
jecxz
testb
or
sbb
jle
xor
call
push
mov
push
mov
repz
test
mov
aaa
mov
pop
xor
faddl
dec
xchg
add
dec
rcll
inc
ret
out
mov
fisttps
and
cs
xchg
push
sbb
sbb
xchg
in
mov
addr16
mov
xchg
lods
pusha
aad
mov
mov
das
fsubl
fdivrs
rcrl
fmuls
jl
test
pop
mov
sbb
sbb
jns
add
cli
mov
rcll
rol
sub
xchg
out
pxor
jl
imul
and
pop
in
pop
pusha
sbbb
sahf
xor
les
and
scas
arpl
das
rcll
pop
dec
pop
iret
les
dec
std
cmp
push
cmp
mov
xchg
push
lret
jb
sbb
jecxz
mov
jl
ret
inc
or
sbb
jmp
popl
out
push
and
pop
repnz
int
dec
movsb
cli
cld
dec
xor
mov
cmp
sahf
loope
push
shrl
dec
loopne
pusha
jae
and
rcll
mov
lahf
push
rclb
sub
test
gs
lea
mov
cmpl
in
popa
mov
in
roll
ret
fs
imul
sub
add
jg
pusha
pushf
stos
and
and
insb
fidivrl
aad
outsb
movsb
dec
cmp
mov
xor
cmpsl
mov
test
orl
xlat
mov
rclb
sbb
mov
or
test
shll
and
pop
subb
out
push
mov
lock
sarb
pop
out
mov
lea
push
push
pop
and
or
es
mov
fisttps
cmpsb
dec
cmp
sahf
add
out
mov
add
mov
xchg
xlat
aad
in
cmpsl
cmc
inc
jecxz
and
or
jecxz
lret
dec
bnd
inc
adc
or
out
ds
add
test
dec
pop
scas
xchg
hlt
sbb
xor
hlt
xor
mov
fstl
aas
dec
and
push
nop
testl
stos
ficoms
fs
fists
lret
fistpl
push
lods
xor
add
addl
push
xor
fdivr
mov
mov
jb
je
mov
or
mov
fcomps
lock
loop
and
jecxz
mov
fldenv
inc
dec
popf
out
insl
lods
lcall
hlt
xor
sbb
fwait
adc
add
ficoms
and
jle
fnsave
iret
out
add
dec
arpl
lret
push
daa
imul
lea
dec
add
sub
xchg
adc
or
ret
mov
add
pop
hlt
add
faddl
sahf
sub
inc
in
es
leave
in
push
ds
xchg
mov
icebp
push
jp
adc
outsb
add
out
mov
aaa
or
or
or
dec
mov
mov
rclb
cltd
into
pop
aaa
pop
and
cmp
dec
dec
and
jae
push
push
jmp
mov
aas
push
aad
jmp
cli
shrb
dec
sar
cmp
rorb
pop
out
ret
adc
cmp
loop
jmp
pop
add
data16
lods
xor
nop
subb
loope
dec
xor
ds
push
push
loope
mov
cli
outsl
shll
mov
js
xlat
pop
push
sbb
call
outsb
rolb
mov
dec
mov
push
ret
jge
test
je
ljmp
cmp
pop
aad
or
mov
out
into
cmp
imul
and
sub
add
cs
sti
adc
push
movsl
sar
lret
subb
and
adc
dec
pushf
mov
sbb
adc
push
lcall
add
mov
cmp
ljmp
aas
mov
sub
sbb
sarl
loop
and
pop
imul
and
xchg
xchg
jg
insb
xchg
pop
mov
mov
scas
lret
and
mov
xor
mov
pop
jnp
push
jns
adc
mov
loop
xchg
mov
sahf
insl
cltd
jp
loope
fbstp
or
xor
fstps
aaa
ds
aas
pusha
arpl
pop
mov
sub
pushf
sub
dec
sti
loope
rcrl
pop
pop
push
mov
ret
push
push
lds
dec
movsb
xchg
adc
xchg
xchg
test
and
data16
stc
dec
hlt
pop
mov
push
push
and
dec
imul
in
dec
inc
rclb
in
test
orb
loop
inc
xchg
repz
cmp
and
scas
cli
jns
lret
xor
pop
js
jae
adc
stos
jbe
mov
mov
or
jnp
nop
cs
sbb
fcomip
cmp
add
dec
push
outsb
xchg
xchg
mov
das
cmp
and
rcrb
addb
pop
ret
sbb
jg
ds
sti
xchg
rcll
repnz
jbe
cmp
jge
out
xor
add
mov
mov
das
call
arpl
cmp
xor
clflush
dec
stc
jbe
cwtl
add
cmp
out
inc
jnp
cmp
cmp
mov
and
sarl
mov
pop
sahf
outsl
daa
ret
xchg
dec
gs
add
icebp
xor
addr16
cmpsb
imul
push
mov
cmpl
out
rorl
inc
outsl
movsb
outsb
cmp
mov
dec
mov
pop
jecxz
jg
fmulp
lea
cmp
andl
inc
sti
loope
adc
imul
outsb
enter
lock
fucomip
out
pop
int3
adc
sbb
sbb
push
jno
pop
pushf
dec
daa
lock
push
xchg
popf
movsb
push
in
rol
fisttpll
lret
jno
sub
aam
push
push
cmpsl
push
fisubrs
push
jnp
dec
cmp
pop
inc
mov
cmpsb
out
push
outsb
enter
int
cs
xchg
push
test
fcoml
pop
les
ret
adc
cmp
popa
mov
fwait
xor
add
jnp
iret
pop
clc
sub
jle
loopne
minps
inc
rcrl
jns
inc
es
cli
test
sahf
inc
sahf
out
mov
jmp
sbb
pop
push
inc
xor
cmp
fbstp
push
or
inc
aad
and
aas
mov
ficoms
shr
shl
rolb
jp
inc
push
into
flds
inc
cmovnp
dec
cmp
adc
push
gs
xlat
mov
adc
cltd
jae
fwait
insb
loop
std
ds
and
lea
jge
and
or
inc
jp
es
lret
mull
stc
subb
lock
lahf
nop
pushf
adc
mov
cli
xor
cmp
dec
fisttps
mov
int3
out
std
cmpsl
jns
and
scas
daa
nop
repz
cmc
lods
gs
push
int3
loopne
inc
cmp
xlat
cmpsb
and
adc
nop
and
psubsb
jb
outsb
push
sbb
xchg
adc
andl
push
pop
lret
cwtl
dec
int
xchg
dec
push
cwtl
pushf
subb
or
ficompl
int3
in
dec
mov
mov
rcrb
das
inc
xchg
xlat
jl
add
jb
mov
xchg
mov
jp
daa
arpl
mov
dec
test
push
jo
mov
gs
mov
sahf
outsb
jb
xchg
xchg
jb
stos
sbb
adc
imul
cs
pushf
roll
repz
jae
mov
les
imul
push
lds
ret
add
test
xor
stc
mov
jle
xchg
jno
sbb
sbb
rorl
mov
das
sub
cmp
pop
adc
add
mov
ss
out
push
sti
ffree
das
lock
adc
xchg
inc
sahf
aad
jge
mov
cmp
xchg
lret
or
aas
ja
les
mov
mov
jo
add
pop
insl
or
mov
add
inc
fildll
adc
inc
in
fisubrs
iret
mov
rolb
push
sub
shl
push
xchg
push
sysenter
ret
call
fwait
daa
ret
sbb
enter
iret
jmp
sbb
xor
les
inc
inc
fadd
adc
xchg
inc
sbb
mov
sbb
xor
adc
out
cmp
inc
lret
cmp
jae
rcr
ss
iret
push
leave
adc
in
ret
icebp
inc
mov
daa
mov
lds
sub
sti
pop
je
sti
cmp
xlat
pop
lods
int3
pop
adc
iret
insb
sbb
or
inc
adc
imull
dec
mov
cmp
push
ror
stc
inc
cli
pop
lock
pop
adc
test
adc
add
jae
shrb
pop
cmp
inc
mov
fcmovb
xchg
mov
rcrl
push
mov
pop
mov
ret
add
sti
call
mov
lea
mulb
or
mov
or
ds
xor
cmp
fnsave
movsl
rcll
sbb
in
dec
push
stos
push
mov
int3
push
pop
or
scas
inc
lret
xor
dec
push
inc
and
cmc
ja
aaa
cmp
mov
rcr
ja
lahf
fwait
mov
out
xor
clc
call
jg
push
sbb
jne
push
jecxz
xor
aad
daa
jecxz
movsl
imulb
or
out
and
mov
fisttpll
ljmp
xlat
and
xchg
in
mov
ficoms
jbe
cmpsb
xor
imul
data16
sbb
adc
jp
cmc
fs
adc
jge
aas
add
pop
add
or
dec
xchg
push
sub
dec
sub
in
xor
push
jmp
push
and
jmp
add
mov
and
clc
insb
sub
add
sahf
push
daa
loopne
cmp
insl
call
call
jno
sbb
push
cmpsb
mov
adc
insl
pop
jb
fisubs
xchg
inc
push
add
xchg
jmp
sbb
xchg
fucom
fwait
lret
mov
outsb
cmp
push
or
fwait
shll
sbb
xchg
iret
and
arpl
ret
sbb
jno
jns
xor
hlt
fbld
mov
mov
xlat
xor
mov
add
fstps
jno
xchg
mov
sub
push
sbb
push
mov
xchg
adc
orl
pop
mov
or
jno
jg
add
loope
sbb
jnp
in
cmp
fldenv
sbb
or
ds
pop
int
mov
sbb
lods
push
adc
and
fstps
mov
fdiv
jnp
push
imul
sub
mov
int3
call
mov
push
jnp
movsb
xchg
or
dec
add
mov
fisubl
cmp
push
mov
xor
push
fstpt
mov
mov
mov
inc
sbb
or
out
jp
mov
xor
cwtl
sbb
lods
jbe
cmp
and
sub
and
jno
jle
dec
mov
iret
imul
repnz
jg
fbld
pusha
into
bnd
cmp
es
inc
fidivrs
in
shll
jp
stc
add
xor
repnz
and
or
not
mov
xchg
mov
notb
imul
int
jmp
cmpl
jne
fwait
and
mov
fisubl
jecxz
sti
and
and
lret
pop
cmp
mov
and
sub
or
jmp
adc
loopne
and
pop
stos
adc
jg
into
scas
jne
pop
adc
dec
inc
ret
decb
or
sub
inc
dec
hlt
xor
js
push
pop
jo
cmpsl
jle
add
pop
sbb
mov
inc
fbstp
push
data16
pop
cmp
mov
sbb
out
push
shl
xchg
stos
into
int3
jmp
mov
and
fsubl
jp
cli
or
cltd
loopne
scas
outsb
inc
rclb
stc
dec
insl
push
push
cmp
in
pop
arpl
pop
xor
mov
or
imul
stos
lcall
mov
enter
cmpb
sbb
test
inc
test
xor
or
pop
adc
xor
cmp
mov
xchg
sti
push
out
arpl
cmp
fisubs
cmp
inc
mov
cmc
cmp
icebp
stc
cwtl
ds
repnz
rcrb
ljmp
mov
push
ljmp
lea
pop
bnd
jl
iret
and
mov
push
xchg
pop
popf
inc
fs
lret
push
add
and
clc
arpl
lcall
mov
sub
addr16
and
dec
xlat
mov
pop
adc
pop
ret
rcr
mov
or
test
iret
rcrb
rorb
fcoml
adc
insl
sbb
mov
aad
pop
cs
push
lret
pop
dec
int
push
xchg
pop
jbe
adc
dec
xor
add
sbb
lods
js
mov
or
fdivrs
mov
pop
pushf
fisttps
in
outsl
jns
into
pop
push
cmp
gs
call
sbb
jp
jg
dec
jecxz
adc
ljmp
pop
enter
mov
dec
sub
dec
cmp
cld
inc
dec
mov
and
adc
scas
icebp
ret
shrl
in
ss
dec
sahf
pop
call
fistps
imul
mov
outsl
sbb
lock
inc
int3
jp
imul
lods
mov
pop
fsubs
adc
in
xchg
mov
and
out
jg
je
notl
insb
xchg
cmc
arpl
das
mov
out
pop
pop
jns
test
sub
out
xlat
adc
pop
dec
dec
mov
pop
add
fistpl
push
cltd
stos
mov
push
jb
or
sti
fwait
dec
push
imul
ficomps
das
mov
movsb
int3
movsb
inc
mov
and
mov
cmpsl
pop
cmp
out
push
pop
sti
mov
mov
outsb
rcrb
cld
cmpsb
clc
out
push
sbb
or
in
push
xchg
jae
pop
cs
cld
mov
and
dec
mov
xchg
mov
push
add
inc
push
cmc
jg
loope
xchg
pop
daa
push
mov
addr16
inc
lret
xor
outsl
cwtl
lcall
int
psubsb
cmp
loop
scas
aaa
cmc
or
ret
push
push
int3
repz
roll
std
push
push
notl
out
jbe
sub
adc
dec
mov
inc
sbb
adc
neg
filds
mov
xchg
test
rcll
cmp
xlat
push
dec
dec
inc
movsb
lret
test
jle
arpl
jmp
insl
push
out
lahf
test
add
cltd
in
in
pop
sbb
push
in
and
xchg
out
push
cmpsb
call
lock
push
jmp
das
pop
divl
inc
enter
cmpsb
fistl
xchg
mov
push
pop
add
xor
cltd
mov
fiadds
out
dec
mov
pop
jp
push
outsl
add
sbb
ja
push
add
rorb
pushf
nop
lea
cli
aaa
cmpsb
xchg
js
push
pop
mov
and
lcall
aad
clc
sub
dec
sarl
rol
pop
test
cmp
push
pop
jp
pop
call
cmp
fstpl
sbb
jmp
nop
aam
sub
mov
cli
jge
jo
mov
cmpsb
sbb
push
sbb
push
fisttpl
scas
imul
rdpmc
insb
std
lret
xchg
shll
movsl
rclb
psubq
ficompl
pop
mov
jne
push
sub
sbb
rcll
cli
test
fistl
cltd
cmpsb
leave
dec
in
add
sarb
push
test
in
movl
mov
sub
mov
iret
out
push
imul
jbe
xchg
cmp
fiaddl
mov
adc
pop
lds
jbe
jmp
adc
lds
insl
mov
lahf
mov
icebp
pop
repnz
sarl
jl
xchg
jo
cmp
ret
fldl
dec
loope
xlat
push
inc
fisubs
mov
cmp
adc
push
sub
cmc
imul
pop
jmp
fimull
pop
aam
push
inc
pop
in
popa
jmp
lock
inc
negb
in
push
mov
imul
and
out
jns
jmp
leave
icebp
sub
out
sbb
push
add
int
pop
popa
mov
push
push
rorl
test
inc
xchg
inc
shrl
loop
lret
pop
mov
test
inc
sub
add
cmp
out
xchg
or
mov
shll
je
push
pop
clc
out
and
adc
pop
or
jae
mul
pusha
xchg
xor
mov
cs
mov
or
pop
inc
lret
or
xchg
mov
add
out
cmp
aad
adc
sbb
inc
fwait
cs
cmp
test
push
mov
lret
cld
xchg
sub
movsl
and
pop
aam
inc
adc
aas
xor
jecxz
notb
lahf
push
enter
frstor
mov
inc
into
dec
add
repnz
mov
push
cmc
dec
and
inc
jno
ss
adc
cmpb
test
and
aad
lea
lock
add
mov
iret
xor
bound
mov
xchg
imul
mov
insl
test
nop
xchg
outsb
jmp
stc
cltd
scas
or
out
mov
outsl
aad
int
stos
nop
sub
xchg
and
push
stc
lret
push
outsb
clc
mov
mov
inc
daa
lds
mov
call
xchg
mov
pop
aas
mov
scas
fadd
loopne
and
xor
add
jne
xor
pop
pop
sub
cmpsb
cwtl
jo
pop
imul
and
mov
pop
addb
lcall
xor
stos
push
pop
das
movsl
add
pop
lahf
dec
nop
add
arpl
xchg
push
adc
push
jmp
mov
or
les
popf
lea
aad
xchg
icebp
inc
imul
in
xchg
sbb
ficompl
mov
jmp
outsb
pop
push
pop
iret
std
out
in
xchg
in
daa
inc
jbe
int
fists
fcompl
push
lahf
push
adc
cld
add
add
jmp
xchg
push
mov
loope
inc
scas
mov
pop
inc
movsb
faddl
xlat
mov
repnz
scas
sbb
ret
cmpsb
fdivrs
ds
push
inc
jl
dec
sub
and
fstl
xor
test
inc
into
xchg
ficoms
jg
cmp
sbb
adc
lahf
adc
xchg
mov
xchg
xchg
loope
pop
lret
mov
inc
test
jae
add
xchg
fisubrl
rol
jo
pop
rorb
ja
les
lods
pop
jns
cld
outsb
xchg
lods
cld
or
repnz
mov
data16
pusha
adc
sbb
xchg
pop
hlt
mov
pop
ljmp
xor
lods
push
mov
test
ret
inc
sub
adc
in
aaa
inc
ficomps
add
xchg
sarl
outsb
insb
cmp
insb
lock
imulb
xchg
pop
es
ss
lahf
mov
pop
add
jle
mulb
mov
fisubrs
inc
outsb
lods
adc
push
add
gs
cwtl
jno
mov
pop
push
jo
add
dec
mov
and
and
cmpsl
mov
stos
push
and
mov
out
fcom
cmp
push
xchg
mov
xchg
mov
cmpsb
enter
lods
cmp
pop
push
es
es
dec
push
cmp
mov
or
mov
nop
adc
stos
xor
dec
and
sbb
xlat
dec
xor
xchg
adc
pop
push
imul
xor
js
xchg
data16
ret
sub
rcrl
push
cld
mov
mov
movsl
lahf
push
and
inc
jnp
loope
fildll
dec
adc
mov
sub
in
and
insb
iret
xor
push
xor
outsl
xchg
mov
xor
jae
cmp
movsb
sbb
es
and
aaa
repz
or
out
pop
push
test
icebp
xor
push
inc
jecxz
xorb
cmp
adc
movsb
pusha
mov
lcall
mov
cmp
rcll
jge
enter
jae
push
in
push
test
repnz
pop
leave
imul
mov
pop
sub
test
ds
xchg
lea
inc
addb
sub
ds
mov
pop
inc
inc
lods
dec
pop
loop
in
in
lcall
arpl
dec
cmpsl
or
fs
xor
lods
std
mov
mov
test
and
push
imul
jecxz
into
mov
inc
push
pushf
or
out
push
pushf
xchg
fsubrl
loope
rcll
cmp
dec
jl
jl
push
sbb
fdiv
and
push
inc
sub
aam
fstl
xor
push
in
shl
jp
addb
and
fidivs
fcoml
rolb
jno
dec
push
and
dec
pushf
xchg
cli
xchg
rorb
xor
sbb
mov
pop
and
fdiv
lea
movb
hlt
lret
dec
in
pop
aad
lock
mov
sub
mov
cmp
loop
mov
sbb
fld
inc
inc
or
push
in
cs
dec
sar
test
xchg
fdivrs
scas
loop
and
or
fisttps
insb
roll
cmp
mov
dec
push
lods
xchg
jno
mov
es
push
cs
pop
out
in
sarb
fists
and
jecxz
test
cmp
stos
cmp
mov
xchg
repnz
pop
pop
and
enter
out
hlt
adc
xor
daa
or
shlb
dec
sbb
add
andl
fldl
mov
xor
es
inc
xor
and
lock
xlat
daa
push
movsl
pop
mov
loopne
les
cli
xchg
pop
test
xchg
push
pushf
rep
jne
movsl
cmpsl
cwtl
or
cmpsb
ret
sub
pop
loop
aaa
fistl
addb
enter
dec
insl
jecxz
xchg
mov
popl
push
mov
xor
out
xor
call
js
fcmovnu
sbb
xchg
bound
xlat
lods
cwtl
arpl
jmp
dec
sti
add
and
lds
adcb
je
lock
arpl
rcl
mov
stc
inc
pop
lret
push
push
mov
and
inc
xchg
add
mulb
cli
mov
lret
push
mulb
xchg
popf
mull
push
cli
fstpl
add
mov
sarb
mov
cmp
dec
mov
pop
push
lods
mulb
jl
mov
pop
dec
mov
push
jmp
movsl
mov
mov
xchg
ss
xor
cmpsb
sbb
mov
popf
sub
clc
mov
xchg
les
sbb
mov
adc
xchg
ja
test
mov
push
dec
lods
cmp
push
data16
jae
sub
hlt
xor
jae
cmp
xchg
cwtl
jae
jb
jmp
lret
dec
mov
and
out
mov
enter
cs
fwait
xchg
mov
cmpsl
pop
inc
mov
add
add
jbe
fisubrl
push
cmc
sbb
test
and
add
dec
ds
xchg
sub
cli
mov
xchg
push
outsl
icebp
fmulp
into
rorb
push
cwtl
or
dec
fsubrs
adc
mov
jecxz
sbb
push
add
dec
cs
cmc
insb
and
mov
cmp
jle
adc
pop
sbb
mov
int3
movsl
dec
mov
fcoml
mov
mov
sub
mov
cmpsl
push
or
into
scas
rcll
cmp
xchg
xor
lret
push
sahf
push
out
push
add
loope
sub
xor
mov
dec
mov
scas
fsave
jl
call
pop
shl
pop
sub
jns
mov
lret
es
popf
and
inc
sub
fsubr
sbb
and
push
add
pop
jne,pt
rclb
iret
cmpsl
mov
cmp
imul
pop
fsubp
xchg
mull
sub
jb
mov
into
insl
dec
jb
fcompl
mov
pop
and
adc
ret
push
mov
adc
mov
sub
movsl
mull
adc
push
clc
es
movsb
imul
mov
pop
jp
and
lock
jne
push
add
mulb
stc
pop
je
ss
pop
inc
lsl
test
test
cmp
loope
int
sbb
mov
cltd
sub
cmpl
hlt
cmp
or
gs
xchg
sub
sbb
in
push
inc
cld
imul
push
xor
pusha
icebp
cmp
out
lahf
sbb
add
daa
stc
jne
mov
sub
rcr
xor
lret
cmpsl
push
popa
stos
cmp
lret
push
xor
out
mov
inc
inc
mov
mov
subl
cli
pop
mov
daa
faddl
mov
loope
dec
enter
and
add
sub
inc
popf
push
outsl
push
sti
popa
add
push
sti
pop
scas
xor
push
movsl
add
stc
loope
stc
jge
daa
test
mov
mov
mov
lret
test
pop
push
fs
scas
sbb
ds
pop
andb
idivl
popa
push
int
xchg
test
in
loope,pt
pop
cmp
aad
rclb
sbb
fs
jmp
pop
div
and
int3
cmpsb
cmc
aaa
into
hlt
xor
loop
dec
mov
and
insb
mov
push
inc
xchg
add
mov
addps
andb
cs
hlt
cmp
jmp
mov
insl
cli
stc
shll
jae
jle
sahf
cmp
and
jns
data16
xchg
dec
mov
dec
fldl
xor
shlb
ds
xor
test
xchg
sub
adc
mov
call
pop
in
out
cs
cmpsl
out
bound
push
lods
push
cmp
cmp
pusha
mov
xor
mov
add
imul
jg
cmp
in
xchg
fcomps
inc
push
xchg
push
es
addl
out
outsb
fidivrs
add
popf
mov
and
ja
in
inc
sub
paddw
adc
data16
nop
popa
int
or
sub
add
cwtl
pop
push
push
cli
vandps
sahf
push
andl
and
mov
mov
xlat
jnp
push
clc
stos
push
pop
mov
nop
xor
fadds
cmpsb
aam
mov
jb
push
push
or
ja
addl
out
dec
adc
dec
lret
sbb
push
fidivrl
lea
lret
dec
pop
ljmp
xchg
mov
xor
popf
ret
imul
stc
mov
sbb
xchg
push
mov
xchg
cwtl
sbb
in
add
sub
mov
and
out
mulb
sub
pop
fnstcw
pop
or
jmp
stos
xchg
shll
pop
jnp
call
rolb
sub
adc
jp
xchg
dec
push
push
add
push
add
push
aad
dec
ljmp
out
add
ljmp
in
into
stos
mov
cltd
fsts
cltd
lret
cld
sub
push
jmp
imul
push
inc
incb
scas
movsl
aaa
jp
stc
daa
arpl
aaa
roll
rcrl
push
clc
shrl
ja
xlat
into
rol
pop
int3
nop
add
arpl
pop
test
sub
je
bound
jcxz
in
stos
pop
pop
xchg
pop
sub
stos
push
repz
in
cs
in
and
outsl
call
cmp
cmp
add
bound
pop
push
loopne
test
mov
adc
je
mov
rcr
cmp
icebp
test
repz
fs
dec
dec
scas
adc
int
addr16
pop
mov
add
loop
icebp
test
add
aas
dec
push
xchg
mov
arpl
dec
rcl
and
sti
sub
cmp
lods
out
jns
cld
push
pop
push
xchg
pop
adc
dec
adc
es
mov
das
xchg
int3
rolb
rcrl
lcall
scas
mov
mov
jge
pop
lds
push
test
rcrl
jo
cmp
mov
out
xchg
mov
jmp
add
in
mov
pop
push
imulb
xor
jle
bound
cmp
push
rcr
push
sub
pop
xchg
push
pusha
mov
in
mov
pop
jno
sub
cmp
mov
jl
ljmp
xor
cmp
xchg
fwait
or
push
add
lret
fsts
sbb
jecxz
iret
das
cmpsl
push
and
sahf
push
outsl
jle
rcrb
pop
fcmovu
movsl
pop
aad
ljmp
stos
sbb
dec
cmc
mov
das
aad
into
in
jo
popl
ret
popa
enter
pop
pop
iret
mov
inc
lock
cmp
sub
loope
push
mov
inc
mov
cmp
loop
sub
push
sbb
dec
and
pop
sub
pop
movsl
lea
fs
xor
scas
aas
adc
mov
arpl
fdivrl
lods
dec
fdivl
dec
jno
test
cmpsb
mov
push
mov
push
ljmp
mov
mov
push
pop
fistpl
mov
pop
jnp
mov
loope
ds
dec
sub
jne
xor
ficompl
jmp
inc
mov
nop
fwait
xchg
sarb
pusha
cwtl
data16
rcr
loope
xor
and
xchg
or
push
mov
arpl
mov
dec
pushw
sti
scas
aam
and
add
push
and
dec
testb
xor
jno
pusha
ds
pushf
mov
sahf
test
push
pop
mov
jne
inc
movsl
xchg
mov
sbb
inc
cmp
fisttpll
scas
inc
into
fwait
shll
stc
push
scas
adc
and
in
bound
push
ds
int3
jg
ds
cmpsl
sub
xchg
pop
orl
outsb
mov
ljmp
and
and
fstpl
imul
neg
jg,pt
ja
lods
or
sub
arpl
pop
sbb
pop
mov
movsb
sti
fwait
int3
push
or
pop
in
sub
sti
inc
inc
push
push
inc
inc
pushf
insl
jge
xor
or
je
and
rorb
xchg
out
fcmovnb
add
add
push
xchg
arpl
fcmovb
or
sbb
enter
mov
push
js
push
push
xor
outsb
inc
in
rolb
das
xchg
lods
cmp
sarl
xchg
icebp
das
mov
cmp
loope
call
push
xor
faddp
repnz
cmpsl
push
inc
cmp
mov
ljmp
ljmp
dec
dec
cld
ror
repz
jb
shlb
enter
fimuls
xor
popf
xchg
ja
out
fsubrl
xor
add
adc
in
push
or
inc
adc
test
out
sbb
jae
fidivs
add
or
lcall
shlb
mov
cmp
push
nop
shlb
daa
loopne
inc
aam
push
push
fcoml
jnp
call
add
rolb
pop
mov
sbb
rorl
xchg
adc
mov
bound
pop
mov
jnp
dec
and
test
int3
into
das
cmp
ljmp
mov
or
imul
movb
add
add
sti
imul
or
push
sub
daa
out
dec
ret
fsubp
cltd
andl
cmp
mov
lret
mov
fistpl
xlat
xchg
push
dec
jp
lock
xlat
outsb
lods
and
adc
sbb
rdtsc
xor
cmp
adc
aaa
sub
cltd
add
stc
or
mov
sub
xor
into
sbb
dec
jg
pushl
add
mov
cmp
add
test
dec
sub
adc
icebp
mov
lock
cmpsb
insb
mov
mov
inc
push
cs
push
xlat
adc
enter
fiaddl
jb
cmp
sub
xchg
mov
jne
das
add
pop
stos
and
jmp
mov
mov
or
dec
mov
mov
das
mov
mov
sbb
hlt
add
fwait
mov
inc
or
or
cld
imul
out
les
cmp
sub
push
outsl
jg
jbe
xlat
adcl
fisttps
jae
lods
aaa
pop
pop
sbb
aas
pop
ja
and
sub
jecxz
cmpsl
add
xchg
outsb
int3
fcomps
out
imul
repnz
jle
mov
sysenter
sub
cld
in
ret
cmp
mov
ficompl
xchg
data16
add
adcl
xchg
push
ret
pop
call
mov
add
in
stc
adc
jle
jmp
jo
ret
push
mov
push
pop
mov
push
cmp
out
pop
into
cmp
imul
psubq
mov
fstpl
push
or
mov
mov
orb
push
rcr
mov
mov
outsb
xor
mov
gs
mov
mov
push
jp
jg
pop
out
in
mov
or
jge
pop
loopne
jb
into
push
pop
xor
cltd
mov
sub
test
call
movsb
je
fiadds
cli
pop
jne
in
mov
dec
ret
in
lock
dec
loop
add
iret
lahf
fst
push
insl
mov
mov
addr16
adc
rcl
jns
pusha
popa
iret
cltd
pop
push
jg
push
sti
lret
sub
repnz
xchg
data16
pop
adc
rcrl
push
mov
mov
mov
xchg
and
inc
mov
out
add
add
jae
sub
leave
insb
lret
lds
daa
sbb
and
adc
push
and
fldenv
js
fsubr
dec
les
and
scas
sbb
mull
add
aas
int
and
mov
repz
and
sub
inc
jo
or
out
mov
mov
mov
and
jg
push
dec
push
rcl
jae
lahf
lret
hlt
or
adc
dec
inc
jmp
pop
imul
js
xchg
xlat
jbe
fimuls
push
mov
mov
pop
inc
repnz
rolw
xchg
inc
jmp
test
dec
pop
mov
dec
fdivrl
fiadds
mov
lret
cmc
and
repz
pusha
stos
jmp
and
les
stc
sub
rorb
jno
fmulp
dec
lods
movaps
test
push
adc
lahf
sbb
mov
sbb
cmpsb
inc
aaa
push
add
pop
push
push
adc
fisubl
adc
out
sarb
decb
cmp
jg
insl
xchg
mov
xor
dec
cmc
fdiv
sub
ret
mov
cmp
cmc
inc
xchg
mov
push
and
xor
test
jbe
in
and
in
xchg
out
popf
stos
or
push
push
mov
into
ds
aad
out
loope
sbb
cmpsl
ret
pop
lahf
adcl
add
and
mov
imul
add
daa
aam
inc
mov
inc
inc
push
sub
pop
inc
pop
stc
cli
cmp
pop
sahf
loop
test
cmpsl
and
fs
mov
mov
clc
mov
out
cwtl
imul
fdivrl
int
add
imul
and
inc
mov
push
fstpt
xchg
inc
adc
je
pop
mov
xchg
imul
mov
fwait
ds
cwtl
inc
dec
adc
mov
pop
jle
or
fimuls
push
sub
add
mov
mov
adc
pusha
or
iret
cmc
enter
sbb
int3
fisttps
add
cmp
fcomps
insl
push
lea
stc
out
or
aad
lret
sbb
xchg
lcall
mov
mov
fisubs
push
mov
jae
loope
inc
shlb
ret
clc
stc
stos
js
xor
clc
and
mov
pop
pop
and
and
add
negb
push
pop
ficomps
sbb
xchg
jg
ror
roll
sbb
cmp
ss
in
addr16
aas
outsb
daa
imul
and
int3
sbb
vcvtdq2pd
arpl
dec
sub
cld
xor
pop
xor
scas
lahf
dec
or
cmp
mov
mov
lahf
fbld
js
sbb
cmp
mov
or
cmp
ja
or
xchg
outsb
mov
pop
into
xor
sti
ljmp
call
push
mov
and
call
jge
in
push
and
mov
pop
mull
push
in
mov
sub
jl
cli
jns
dec
jns
lock
xor
ja
xchg
and
cmc
sbb
addr16
clc
pop
xchg
push
negb
icebp
dec
mov
js
ss
lock
xlat
push
enter
nop
xchg
sbb
add
flds
dec
aaa
jo
int3
out
shl
inc
sarb
scas
mov
addr16
and
jl
cmpsb
dec
inc
mov
pop
loopne
movsb
inc
dec
xlat
xor
sub
cwtl
dec
stos
inc
mov
xchg
xchg
fs
inc
cmc
fnstcw
orb
xchg
dec
pop
pop
outsb
and
loope
cmp
xlat
pusha
sub
frstor
mov
jne
xchg
mov
les
adc
sub
mov
jb
fdivrl
jecxz
cmpsl
sbb
dec
jg
adc
mov
mov
or
fsubr
mov
xrelease
or
notb
push
push
add
xchg
cmp
mov
push
nop
ror
pop
add
adc
jmp
mov
jo
or
xchg
nop
rcr
out
lea
into
hlt
repnz
add
xchg
dec
or
lock
cltd
mov
insl
aad
lret
div
lret
mov
jp
cmp
inc
jl
mov
in
push
xchg
sub
jl
rorb
ret
pop
jmp
mov
push
mov
xor
ret
stos
fadds
int
fidivrl
pop
mov
mov
dec
jo
xchg
and
shll
mov
sub
testl
fsub
cltd
fisubrl
daa
mov
cmp
sti
adc
mov
popl
outsb
loopne
pop
aaa
out
shl
adcl
lock
fwait
daa
je
pop
dec
out
scas
roll
sahf
cs
and
push
inc
ds
and
mov
and
sub
sub
pop
das
push
and
jecxz
ja
and
movsb
xor
into
mulb
cmp
in
shr
cmp
cmp
int
bound
bswap
dec
adc
cmp
jg
push
and
jmp
cmp
jbe
out
sub
xor
mov
xor
sbb
gs
lret
push
ficoml
repnz
mov
push
mov
iret
pop
loopne
in
sub
call
xor
dec
xorb
cwtl
popa
adc
mov
stc
data16
sub
push
into
push
fwait
inc
push
mov
jb
sub
and
fisubl
into
cmpsb
mov
mov
jmp
pop
dec
sahf
mov
mov
test
into
add
sub
mov
rclb
push
dec
and
lret
mov
mov
and
sbb
sarl
inc
sbb
loopne
jge
pop
jge
adc
fdivp
addl
loop
clc
add
mov
sbb
mov
mov
jb
jno
xchg
rcll
scas
cli
adc
inc
idiv
cli
mov
jmp
testb
jmp
test
push
movsl
cs
push
add
stc
xor
call
dec
mov
inc
mov
pop
inc
cmp
pusha
es
mov
hlt
push
es
leave
dec
mov
mov
cld
cmp
add
or
and
xchg
mov
or
leave
pop
nop
add
lret
push
fnstsw
shll
sub
and
jl
dec
movsb
stos
mov
fimuls
cwtl
int
xchg
or
adc
pop
aad
pop
add
cmpsb
cmp
out
adc
pusha
mov
and
and
sub
aad
and
sbb
lds
push
inc
add
jecxz
cld
and
mov
mov
add
adc
xchg
dec
cmc
pop
lods
xchg
and
add
jl
aad
mov
cmpsl
xlat
pop
cmpsb
outsb
mov
enter
pop
jle
push
cmp
or
outsb
hlt
gs
cli
clc
ljmp
dec
fs
je
out
aad
or
loop
nop
and
inc
loope
jb
test
les
shll
enter
sbbb
mov
adc
ja
cs
imul
dec
sbb
ss
jmp
xor
inc
mov
inc
sub
int
stos
shrb
divb
xchg
xlat
mov
and
fidivs
xchg
push
cmp
stos
out
push
hlt
cmpb
mov
adc
cmp
jle
rolb
clc
repz
inc
shrb
pop
push
aam
test
sbb
fldenv
mov
and
pop
cltd
cmc
repz
lret
mov
icebp
inc
movsb
negl
dec
gs
mov
clc
sbb
dec
lds
and
out
xor
lods
xchg
mov
sbb
xchg
outsl
cmp
xor
cmp
fs
xor
fstp
and
shrl
ja,pt
ret
movsl
sbb
fs
inc
leave
lods
sti
push
es
push
or
push
fadd
sbb
dec
cld
sahf
pop
mov
sahf
inc
jnp
inc
setnp
cmpsl
pusha
mov
in
ret
test
inc
mov
aad
cmpsl
lods
stos
inc
pop
lret
fiadds
dec
add
mov
stos
shll
cmp
and
mov
bound
scas
sub
fidivrs
push
cmp
in
sbb
lods
loopne
dec
mov
jmp
fists
fisubrs
aam
ds
adc
ds
incb
mov
add
adc
sub
cmp
cmc
pushf
adc
sub
and
out
jae
push
cmpsl
out
mov
dec
movsl
cwtl
pop
add
sub
fnstcw
data16
jmp
xor
cltd
inc
xor
stos
pop
cld
addr16
fsubp
adc
fcompl
push
xchg
jecxz
ja
cmpsb
lret
cmp
sub
call
dec
rcrl
mov
adc
fistl
jae
cwtl
test
push
sahf
sbb
inc
and
sbb
fcomip
fstl
repnz
fmull
mov
push
jbe
insl
jle
test
idiv
inc
and
inc
mov
xchg
or
imul
repz
add
mov
rclb
cmp
xor
and
movsl
cmc
cmpsb
cwtl
hlt
sbb
lret
mov
loope
adc
movb
rorb
push
dec
inc
pop
push
or
jnp
inc
sbb
fdivs
inc
fstpl
mov
jns
sbb
pusha
push
loop
lcall
cmp
push
cmp
ljmp
cmp
jp
ljmp
lret
jecxz
xor
fbld
stos
pop
test
repz
cmp
hlt
inc
scas
xlat
pop
popf
insb
cmp
ja
repnz
mov
and
add
mov
stc
inc
divb
inc
sbb
xchg
add
add
jecxz
icebp
and
shll
mov
loop
rorb
test
inc
es
rcrb
rcll
aad
mov
stos
shll
dec
cli
xchg
sbb
cld
mov
xchg
mov
jl
xor
outsb
mov
hlt
ret
rorb
repnz
cmc
push
mov
repnz
int
popa
idivl
or
jns
clc
inc
sbb
cli
sbb
sbb
mov
pop
nop
sbb
dec
sbb
mov
add
ljmp
pop
lret
jo
pop
ljmp
xchg
test
adc
fs
sbb
mov
es
daa
fiadds
lcall
aad
icebp
inc
xchg
pop
mov
jp
out
adc
and
testl
stos
lods
fmul
push
jg
data16
and
mov
sti
leave
cmc
xchg
pop
push
push
sbb
pusha
dec
sbb
aas
add
clc
sub
mov
sbb
mov
nop
push
xor
jbe
insb
sub
and
lea
jbe
pop
clc
arpl
pop
push
scas
rorb
or
in
in
ds
sbb
insb
push
loope
fsubl
mov
aad
jge
inc
xchg
js
mov
xor
xchg
cmp
jb
lahf
movsb
jae
add
xchg
sub
cli
cs
pop
sbb
adcb
mov
pop
vmread
mov
push
mov
test
pop
pop
lock
das
adc
jg
loopne
push
enter
dec
in
negl
les
out
aas
push
andl
mov
not
jmp
dec
das
lods
xchg
and
mov
push
shr
push
rolb
scas
cwtl
addl
lds
inc
inc
adc
js
je
jne
cmpsl
ret
sarl
adc
jae
pop
cmp
push
cltd
jg
test
cs
add
dec
dec
or
test
dec
cld
es
adc
es
js
enter
xor
fdivs
int3
pop
inc
shlb
ret
dec
push
xchg
dec
lret
push
mov
pop
imul
cmp
push
js
outsb
or
inc
xor
dec
cmp
jae
cmp
int
jl
sahf
and
stos
and
cwtl
fldenv
lock
rcll
sbb
adc
out
movsl
shrl
out
xchg
mov
sub
les
jmp
pop
pop
bound
cmp
jnp
fs
sbb
and
xchg
cmp
xor
outsb
das
dec
daa
xchg
fistpll
ficomps
ret
cmp
dec
ja
push
sub
dec
rcl
cs
int3
jg
repnz
gs
mov
leave
lock
sub
mov
rcrl
dec
xor
pop
jecxz
pop
mov
hlt
loope
fwait
xchg
and
aaa
or
xor
push
xchg
xchg
gs
jb
fnstenv
aam
mov
mov
mov
pop
sub
xor
xor
and
and
dec
or
lahf
jbe
rcr
test
cmc
jne
add
dec
push
sub
mov
test
lret
stc
dec
loop
push
imul
pop
testb
mov
mov
jne
stos
sbb
add
popf
sbb
and
pop
mov
es
mov
mov
and
push
gs
mov
cmp
pop
cwtl
fistl
xchg
sti
add
subl
pop
inc
mov
addr16
adc
jp
mov
sub
shll
inc
xor
push
pop
mov
test
insb
out
and
aad
jg
data16
push
stos
jae
test
push
push
inc
popa
jo
pushl
or
sub
inc
pusha
sbb
cmp
stos
xchg
push
lret
push
xchg
outsb
fsts
ss
mov
repz
lock
call
fs
popf
shll
adc
out
cmp
sahf
sbb
dec
out
mov
imul
sti
iret
lcall
push
loopne
shrl
or
push
xlat
xlat
cmp
loop
and
xchg
mov
in
pop
into
mov
mov
xchg
push
sar
xchg
cmp
push
stc
nop
mov
cmp
cli
je
jg
inc
mov
jb
ss
sbb
mov
xchg
jge
adc
or
dec
out
adc
cwtl
scas
adc
sbb
aad
ficoml
inc
int
dec
add
add
xlat
stc
dec
dec
adc
sub
fcompl
popf
pop
and
cmpsb
cmp
add
pop
inc
lret
lds
and
and
imul
jp
std
pop
and
dec
lea
ret
cmp
aam
mov
popf
mov
inc
jecxz
mov
decl
jg
pop
insl
pop
xchg
xor
jl
inc
xor
or
popa
push
adc
in
addr16
adc
fstps
xor
pop
dec
push
orb
jno
fiadds
mov
sbb
fstpl
aam
adc
into
and
pop
inc
sbb
cmp
xchg
jmp
mov
into
dec
mov
inc
push
rcl
out
xchg
cwtl
insl
repz
sbb
or
mov
mov
lret
sub
inc
std
cmp
ds
cs
sbb
or
jge
xchg
sub
es
mov
pop
into
push
ret
loope
shrb
pushf
rcrb
mov
lret
sub
add
test
ret
xchg
rcl
xchg
icebp
mov
inc
or
icebp
push
lods
inc
pop
and
lods
leave
test
pop
cmp
fisubl
push
rcr
fwait
lds
fsubrs
das
scas
lret
arpl
push
sbb
xor
mov
loop
sub
pop
cmc
add
aad
jae
mov
and
cwtl
call
movl
pop
mov
jo
cli
dec
mov
inc
add
cli
inc
es
rol
add
test
aad
adc
push
out
mov
mov
fidivl
sub
inc
fs
enter
mov
mov
xchg
sbb
imul
fwait
xchg
xor
mov
int3
push
lcall
sbb
push
call
mov
imul
xor
sahf
lahf
jmp
andl
outsl
fdiv
xchg
rol
addr16
mov
cs
dec
ss
adcl
xor
loope
xchg
xchg
ret
add
xchg
pop
add
push
jp
pop
pusha
push
rorb
dec
xor
jg
adc
test
or
jge
sub
fcompl
aad
adc
loop
enter
xor
xchg
adc
mov
or
dec
pop
shrl
ret
ret
xlat
out
icebp
cmpsb
std
cmp
xor
aad
dec
mov
lea
enter
sbb
mov
cmpsl
fcomps
ret
cmpsl
int3
sbb
mov
push
add
fldl
and
ficomps
cld
aad
sti
adc
mov
cmp
negb
pop
push
and
fwait
test
sbb
loopne
sbb
adc
fimuls
inc
push
fmuls
daa
sbb
xor
mov
xchg
jle
shl
jle
push
je
mov
sbb
cmp
jae
pop
cmp
jb
jae
ss
mov
in
dec
dec
sti
xchg
stc
popa
rolb
in
ss
add
sbb
add
push
in
nop
jle
mov
xchg
movsb
shlb
jle
cld
mov
jg
adcl
inc
or
jge
clc
cld
jbe
pop
pop
xchg
mov
xchg
mov
xor
jo
cmp
pop
adc
pop
adcl
ret
dec
add
cs
pushf
mov
bound
cmp
mov
clc
js
add
cli
mov
pop
inc
inc
loop
mov
aam
fcomp
lcall
adc
dec
div
ja
ljmp
jo
enter
xor
mov
inc
jae
sbb
sahf
or
dec
loop,pt
loope
and
fdivrs
sbb
dec
add
outsl
add
inc
iret
sti
xor
sbb
cmpb
aas
inc
aaa
jle
mov
ret
mov
scas
sbb
inc
adc
pop
push
loope
and
jle
pop
fidivrl
or
or
in
les
fisubrs
pop
jnp
mov
lret
mov
ds
and
jmp
imul
loop
pop
shl
push
sbb
hlt
dec
dec
jne
inc
leave
negb
mov
rol
cli
cwtl
inc
xor
xchg
cmp
iret
insl
pop
sub
cmp
mov
icebp
jbe
imul
sub
push
dec
mov
or
jecxz
imul
into
or
movsb
decl
sub
arpl
sub
ret
cwtl
pop
add
movsb
scas
sti
out
fbstp
cmp
loope
fucomip
pop
dec
sub
nop
cmp
jmp
add
scas
dec
fildl
add
jns
push
shlb
in
pushf
and
aam
fwait
mov
ret
mov
add
insl
xor
pop
test
pop
test
jg
xlat
aaa
add
adc
dec
pop
lret
or
pop
sbb
sbb
sbb
aam
sbb
mov
and
add
ror
jmp
cld
push
inc
shlb
inc
iret
inc
xchg
add
in
in
jle
or
fisttpl
jle
pop
je
mov
and
pop
sbb
dec
int3
jb
divb
sbb
data16
jb
push
sahf
push
test
or
pop
aad
lcall
xchg
std
mov
dec
cmp
sti
sub
sub
push
jmp
pushf
fstp
mov
push
mov
shll
test
jmp
mov
pop
jae
and
xor
fbld
dec
stos
sub
cmp
or
lcall
lret
test
and
out
dec
push
sub
dec
sub
mov
pop
popf
fildll
sbb
pop
movsb
and
jnp
mov
lsl
cmpl
out
dec
cmp
pop
or
aam
sti
and
push
stos
loop
jb
std
jno
mov
cmp
ds
insl
mov
push
bound
ja
shll
push
cmp
or
imul
or
pop
xchg
mov
repz
dec
xor
dec
mov
pop
mov
mov
adc
add
cmpsb
sub
cld
mov
gs
dec
sahf
repz
roll
in
imul
pop
push
lods
pop
repz
enter
loopne
sub
pop
mov
das
and
mov
mov
in
pop
xor
mov
ss
jae
add
adc
mov
daa
lcall
je
iret
shll
loop
enter
dec
dec
pushf
gs
test
sub
xlat
test
sbb
hlt
in
mov
mov
add
mov
dec
mov
xchg
ficoms
push
ja
sbb
dec
jb
gs
call
add
pop
xor
loopne
sbb
xchg
imul
les
mov
push
ds
ss
xor
pusha
ljmp
rol
rorl
push
cmp
push
or
jmp
fnstsw
mov
xchg
out
xchg
push
dec
push
pop
repz
loop
fnstsw
mov
stc
xchg
insb
iret
cmp
fcomps
repz
lret
cmp
stos
jne
repnz
sarb
sub
fistpll
rcr
inc
imul
pop
mull
jle
int
xor
addr16
pop
int
sub
ds
jp
or
xchg
gs
mov
rcll
popa
outsl
pop
lock
cmp
test
cmp
push
push
xlat
aas
fwait
in
or
lods
or
mov
je
jns
pop
adc
rorb
int3
cmpsb
inc
cmc
pop
cmpsb
daa
jmp
dec
lret
push
repnz
xchg
dec
mov
jb
fimull
and
aas
loopne
loopne
pop
insb
adc
inc
shll
adc
jp
xor
lock
xor
cld
popf
imul
push
inc
into
sarb
out
add
inc
hlt
push
mov
loope
addl
push
loop
outsb
xor
and
pusha
mov
mov
add
jae
inc
icebp
mov
sub
adc
mov
sub
pop
mov
movsb
sub
loope
xor
lret
out
xor
jle
insl
in
inc
xor
pop
pop
mov
cs
sti
mov
mov
imul
mov
adc
pcmpgtw
mov
push
xor
cld
add
jne
dec
clc
rorb
jle
xor
call
xchg
icebp
or
mov
xchg
lea
mov
aas
aad
es
mov
add
cmp
adc
fprem1
mov
add
rclb
icebp
inc
and
xor
ficoms
rcr
xchg
fisttpl
stc
insb
or
sbb
mov
and
cwtl
test
mov
sbb
int3
outsb
loopne
cwtl
jb
push
or
je
rcr
fstl
cmp
dec
fimull
or
jo
dec
jl
adc
jl
aaa
inc
hlt
jne
adc
sarl
loope
outsl
dec
nop
fdivrs
push
lahf
lfs
in
push
mov
inc
leave
out
loope
movsl
inc
ljmp
inc
lea
jmp
cmp
xor
jnp
fadds
sahf
push
int
push
outsl
fbstp
scas
out
cmp
fyl2xp1
stc
je
sbb
pusha
mov
inc
pop
pop
pop
push
leave
test
es
xor
mov
pop
dec
push
rorb
mov
mov
pop
fsts
or
push
ljmp
jbe
imulb
test
pop
mov
or
pusha
sub
sbb
popa
movsl
pop
movsl
cmp
mov
cmp
xchg
mov
loope
lods
inc
je
cmp
jecxz
xlat
and
push
outsb
aad
mov
leave
cmp
jne
add
call
mov
sbb
lret
sub
sahf
in
cmpl
adc
into
jle
int3
ret
or
cltd
mov
inc
sub
add
je
xlat
sbb
and
inc
add
mov
xlat
mov
mov
test
test
sub
repnz
outsl
mov
xchg
imul
pop
cmp
mov
repnz
incl
push
cli
pop
and
xor
movsl
imul
dec
add
pop
repnz
mov
jg
ljmp
int
rclb
and
loop
shlb
lahf
rcll
fcoms
add
fidivrl
cltd
add
mov
hlt
sub
sub
adc
aad
ds
fiaddl
test
push
mov
mov
in
pop
jae
pop
rcrl
and
pop
sub
pop
into
push
pop
or
push
fisubs
jecxz,pt
pop
and
xchg
jae
je
mov
push
test
jge
pop
push
pop
inc
fs
cmp
hlt
lea
sub
mov
ficomps
adc
mov
dec
lret
divl
jne
mov
imul
ljmp
xor
add
daa
roll
adc
mov
or
cs
arpl
rolb
daa
push
test
ret
xor
xchg
cmpsl
movsl
jnp
dec
xor
mov
popa
xor
jbe
int
dec
shll
push
pop
xchg
call
fdiv
imul
and
clc
inc
arpl
cmp
rolb
out
dec
mov
inc
mov
and
out
inc
pop
inc
cmc
pushf
jnp
pushf
or
dec
cmpsb
pop
sub
aam
and
mov
call
dec
push
leave
fisubs
test
out
cmpsl
fnsave
aas
and
sub
lcall
cmpb
mov
jne
mov
sub
negb
ds
xor
inc
sbb
mov
jmp
mov
ljmp
sub
mov
and
mov
dec
bound
out
xchg
mov
inc
testl
inc
sub
mov
add
push
inc
jnp
push
ret
movsl
xchg
rcl
lods
dec
push
hlt
xchg
mov
pop
jb
lret
rcrb
data16
dec
jmp
mov
inc
lods
dec
pop
scas
clc
cmp
shl
aam
or
decb
pop
icebp
out
das
mov
lods
out
mov
movsl
das
cld
les
sahf
push
int
lds
movsl
or
lahf
push
pop
or
push
xor
sub
jno
sub
jne
jge
les
arpl
ret
push
movsb
lahf
jecxz
xchg
cli
or
mov
dec
inc
stc
loopne
or
pop
pop
shll
jnp
adc
fdivp
mov
cmp
or
lret
enter
sbb
push
pop
cli
sub
push
fcmovb
cmp
inc
mov
stc
jl
cmp
mov
loope
and
mov
in
or
jecxz
cwtl
push
and
popa
inc
out
aaa
and
dec
and
in
inc
inc
movsl
xchg
mov
loop
push
adcl
out
repnz
test
jbe
mov
push
out
into
xor
pusha
subb
shrb
fcom
sbb
ss
lock
in
popf
imul
in
std
fwait
pop
sbb
outsl
adc
dec
adc
icebp
or
imul
push
cltd
add
adc
mov
and
jbe
cmp
lea
ljmp
aam
mov
aad
scas
outsb
shlb
mov
cs
cmc
mov
loope
lcall
pop
adc
pop
adc
sarb
scas
dec
inc
and
mov
test
push
mov
cbtw
lret
adc
jo
mov
call
das
cmp
pop
cmc
bound
fwait
and
adc
aaa
fucomip
mov
in
sbb
outsb
xchg
insl
je
xor
rcl
ja
dec
xchg
dec
test
dec
mov
push
lods
jns
mov
hlt
notb
adc
jp
enter
lcall
sub
lods
push
push
adc
fdivl
inc
fnstcw
call
pop
data16
fidivl
pop
cmp
outsl
sub
inc
repnz
out
ret
scas
out
mov
lahf
push
test
in
inc
jp
js
sub
xlat
push
push
jnp
xchg
rorb
cmpsb
aad
mov
into
leave
add
fucomp
pop
pop
lret
mov
popl
mov
pop
fildll
adc
mov
into
lock
or
and
adc
inc
movsb
lret
test
cmp
dec
je
push
inc
push
es
mov
sahf
mov
subb
jne
sub
fwait
pop
or
mov
mov
int3
xor
notl
xchg
dec
mov
mov
cli
push
outsb
mov
jno
insb
mov
cmp
data16
loopne
sub
add
dec
loop
insb
js
fnstenv
push
ficoml
jo
repz
sbb
mov
lret
sub
sbb
mov
jbe
out
fcomp
or
and
pop
push
ljmp
fmulp
and
xchg
sub
push
xchg
js
or
cld
inc
cmp
push
inc
enter
dec
int
jg
sbb
xchg
push
fimull
or
sahf
inc
jno
mov
jne
cmc
push
repnz
fiaddl
nop
daa
push
cmp
sbb
cli
fnstcw
loope
sahf
outsb
in
add
xor
xor
stc
arpl
mov
xchg
and
lret
dec
mov
lods
sbb
subl
mov
cs
pop
repnz
and
sbb
in
push
xchg
in
and
ss
and
lret
jb
sbb
je
lods
ds
jb
sbb
inc
pop
icebp
dec
jle
add
pop
inc
xchg
dec
pop
jne
rcrb
dec
push
jbe
mov
inc
out
test
fwait
ret
xchg
pop
xchg
push
dec
or
xor
ret
addb
mov
lahf
jl
fsubrs
stc
push
ret
push
popa
stc
ss
stos
rclb
mov
int
xor
mov
pop
mov
out
sbb
or
js
or
js
popa
les
and
ds
cwtl
cmp
mov
loopne
ja
dec
xchg
and
in
out
hlt
mov
mov
es
ljmp
xchg
pop
inc
jp
xchg
fwait
inc
adc
je
push
data16
cmp
inc
push
scas
inc
cmp
or
push
xor
jb
sub
jbe
sbb
jp
or
cli
fwait
repnz
fwait
lret
fwait
lret
inc
imul
sbb
dec
xchg
cwtl
sbb
ret
int3
in
sub
mov
push
jmp
inc
push
mov
inc
pop
mov
xor
cmc
mov
jns
push
push
dec
jo
sub
xchg
push
ljmp
inc
fwait
sbb
ret
int3
cmpsb
popa
pop
push
in
jb
shlb
divb
push
and
aas
inc
hlt
rorl
jbe
enter
fcomps
arpl
int3
cmp
jmp
dec
js
adc
push
arpl
sub
mov
inc
out
inc
sbb
cmp
out
cs
ss
lods
jbe
jmp
pop
int
ss
insb
cs
out
sbb
mov
xorb
cli
or
xchg
xchg
mov
outsb
mov
jb
scas
loop
rorb
scas
add
arpl
ret
pop
stos
adc
jae
repnz
and
out
pop
inc
mov
dec
xchg
mov
or
inc
cmpsb
subb
mov
pop
cmp
loopne
fdivrl
cmp
pop
call
push
jecxz
adc
xchg
push
or
cmp
pop
inc
jge
gs
jbe
aam
cmp
cwtl
adc
popf
dec
in
insl
out
xchg
ret
fwait
xchg
pushl
cmp
mov
cmp
sub
fbstp
push
ds
xchg
pop
adc
cmp
sbb
in
cmp
les
addr16
ja
pop
std
subb
sti
adc
sub
divb
jp
inc
mov
stc
inc
add
stos
push
mov
filds
loop
pop
mov
push
loopne
fsubl
adc
xor
mov
ret
mov
sbbl
clc
mov
cmc
fstps
jbe
dec
dec
mov
mov
sbbl
in
out
cmp
mov
int
push
std
push
dec
push
out
ffreep
mov
push
and
js
and
cmp
das
lock
xor
mov
xor
outsb
call
ficompl
mov
push
shrb
fisttpll
xchg
lret
xchg
in
fdivrs
hlt
xchg
loopne
sub
xchg
scas
stos
lret
lret
sub
mov
cmp
repnz
jl
xchg
fldl
iret
call
gs
mul
push
and
push
shr
lock
jmp
lret
pavgb
and
jg
lret
es
out
cmc
ljmp
out
pushf
jl
enter
dec
push
cwtl
or
in
jae
loopne
data16
dec
daa
push
cmp
cmp
pop
clc
sbb
pop
jle
push
vunpckhps
cmp
and
int
dec
test
mov
inc
mov
mov
jae
jp
leave
push
orl
loope
test
mov
dec
jle
cwtl
ds
rcl
jbe
add
sub
divb
adc
sar
mov
mov
inc
lods
sub
imul
movsb
daa
adc
fimuls
repnz
sub
nop
pusha
and
inc
jo
mov
jbe
cli
cmp
loop
sbb
mov
test
xchg
mov
lea
lret
mov
xor
out
and
les
cmp
movsl
mov
int
jne
pop
icebp
push
scas
stos
sub
mov
test
mov
push
fidivrl
negl
ss
es
mov
popf
mov
pop
arpl
hlt
xlat
das
mov
lret
adc
sbb
xor
mov
xchg
imul
sub
shrb
int
in
divl
or
add
nop
test
xor
xor
push
xor
in
ret
push
test
mov
and
jp
mov
or
jp
in
jae
mov
pop
push
dec
dec
jg
sub
fwait
adc
inc
mov
pop
stc
dec
outsb
rorb
add
movsl
jmp
in
jl
and
add
jle
sbb
mov
jp
mov
lea
mov
pop
sbb
loop
add
ret
dec
mov
push
imul
sbb
sbb
mov
pop
dec
mov
inc
mov
inc
repz
int
cwtl
mov
mov
xor
jns
sbb
cmp
nop
sbb
push
adc
add
popf
adc
pcmpeqb
add
insl
cli
mov
jp
and
jae
jbe
push
pop
sub
les
sti
jle
cltd
insl
std
lret
xor
add
out
pop
sub
ret
cmp
pop
sbb
and
xchg
aad
lret
adc
int
sbb
mov
pop
daa
lahf
rcl
or
dec
repz
hlt
add
dec
int3
enter
cmpl
clc
pop
rclb
mov
or
fistpl
pusha
cmc
aam
inc
mov
call
mov
mov
js
sbb
ja
lods
imul
mov
xchg
xchg
sbb
idivl
test
dec
push
pop
into
or
push
cmpl
das
mov
sub
and
pop
jle
and
stc
aas
push
dec
dec
ljmp
and
daa
dec
ret
pop
imul
xor
rolb
insb
shll
mov
sub
pop
push
scas
gs
adc
add
scas
dec
ljmp
mov
es
mov
cmpsl
pusha
scas
and
mov
xchg
clc
inc
iret
sar
repnz
aas
and
popa
dec
xchg
dec
pop
imul
push
sbb
xor
push
xor
mov
pop
inc
xchg
inc
test
jecxz
mov
lret
adc
jle
and
add
lcall
add
out
cmp
dec
mov
es
push
cli
or
loop
iret
ds
js
aam
dec
add
mov
mov
loopne
push
mov
push
mov
add
dec
xlat
ds
into
mov
les
stos
jb
jecxz
in
xor
and
mov
inc
andl
arpl
test
les
mov
push
aaa
jmp
aaa
cmp
loop
mov
in
xor
jmp
fimull
pop
js
push
and
div
cmp
and
adc
cs
enter
mov
aad
xchg
dec
add
fnstenv
xchg
fs
and
in
sbb
xchg
xor
xchg
setnp
sub
stos
adc
movsl
loop
nop
pusha
ljmp
fdiv
shr
xchg
inc
imul
jge
pop
inc
iret
pop
cmpsl
sbb
jb
push
cmc
imul
cmp
inc
sbb
xchg
sahf
aad
inc
adc
pop
mov
icebp
sub
dec
aas
fists
push
stc
inc
push
jle
adc
stos
int3
orl
pop
pop
mov
addr16
stos
dec
fidivrs
jl
jp
stc
mov
sbb
mov
gs
push
add
mov
sub
inc
inc
int3
icebp
pop
das
loopne
add
rcr
push
idivl
cld
pop
dec
mov
ss
addr16
or
add
in
jo
nop
outsl
in
das
idivb
and
and
test
mov
xor
fstpl
inc
dec
dec
aas
stos
xor
into
into
pop
ret
and
adc
ss
sbb
addr16
das
fwait
xor
add
fwait
sub
sub
andl
ljmp
sbb
psubsb
fwait
push
lret
outsl
pop
or
sub
js
daa
and
out
cmp
fs
push
add
sbb
and
stc
popf
jp
push
inc
or
pop
pusha
or
inc
addr16
enter
xor
adc
je
ja
pop
add
cmpsl
pop
je
pusha
push
orb
cmp
mov
int
ja
push
inc
dec
stos
fildl
adc
jmp
shlb
clc
popf
jno
jle
pushf
push
in
mov
jle
les
sub
outsl
mov
iret
xlat
cmc
hlt
stc
mov
sbb
pop
or
xchg
mov
movsb
les
pop
sbbl
leave
fcoml
mov
aas
add
es
push
or
xchg
jbe
xor
dec
jp
pop
dec
notb
stos
cwtl
sbb
imulb
mov
lea
iret
and
mov
mov
rolb
hlt
movsb
xchg
pop
jle
loopne
push
dec
rcl
pop
xor
aas
fistpl
push
pop
enter
lret
sbb
ds
xchg
scas
negl
bound
out
add
push
and
js
bound
sub
and
adc
add
out
ret
mov
sahf
inc
and
nop
and
xor
push
popa
sbb
lock
dec
lahf
addb
leave
or
cmovbe
push
mov
leave
orl
lahf
jp
adc
insb
and
arpl
inc
inc
notl
je
inc
mov
xlat
add
test
mov
fwait
add
and
adc
and
mov
pop
outsb
fbstp
jmp
cwtl
sbb
jae
sub
jnp
sub
pop
call
out
mov
jmp
cmp
sub
pop
iret
rcr
repz
ss
jl
dec
xchg
dec
ljmp
enter
xchg
pop
xlat
xchg
push
test
fiadds
mov
mov
shrl
insl
fists
ret
mov
loopne
pop
ret
cld
into
dec
nop
lock
mov
sub
jmp
lea
sarl
mov
shrl
push
pop
fsubp
in
mov
test
incl
push
stc
icebp
fistpl
ds
sbb
shl
cmc
mov
into
movb
outsb
dec
and
dec
fistpl
mov
xchg
dec
cld
lret
jae
clc
mov
lock
xchg
push
push
ss
and
je
jmp
iret
adc
pop
repnz
xchg
xor
mov
lret
cmp
das
xchg
or
sub
data16
ficompl
inc
add
dec
inc
sbb
xchg
or
or
lret
idivb
inc
xchg
add
push
fidivrl
and
movsl
std
xor
out
scas
cli
mov
les
das
test
mov
push
cmp
mov
dec
push
dec
rol
cmp
das
std
hlt
jmp
fnsave
ljmp
sti
jmp
push
cltd
repnz
jbe
and
andl
ret
mov
fldl
pop
repnz
mov
xchg
jmp
sti
add
lret
and
pushf
or
daa
repz
loop
xor
notb
and
xchg
lds
pop
out
sbb
arpl
ret
mov
mov
inc
push
rorl
pop
jl
or
pop
push
cmp
ds
aas
mov
pusha
mov
imul
sar
imulb
les
arpl
mov
ja
push
ret
dec
inc
push
adc
push
push
pop
stos
aas
fs
ret
inc
in
in
idivb
mov
jmp
add
clc
repnz
mov
inc
dec
mov
xchg
cmc
sub
out
stc
cwtl
call
mov
jbe
push
xor
arpl
adc
lods
or
jae,pn
lods
adc
sbb
jae
jp
imulb
dec
xor
in
xor
xchg
or
add
or
jae
fstpt
mov
mov
push
xor
xchg
insl
shll
xchg
outsl
adc
dec
push
mov
cmpsl
fs
dec
xor
das
cld
jl
sub
imul
push
and
push
faddl
fnstenv
ja
dec
sar
ljmp
or
mov
jns
sbb
adc
fisubl
mov
cmp
xor
mov
fisubl
jae
leave
mov
out
inc
mov
xchg
sbb
insb
and
jnp
cmpsl
or
test
adc
stos
pop
pop
das
nop
aad
sbb
and
xlat
cmp
inc
mov
nop
sbb
insb
fldl
int
stc
test
fldcw
dec
or
repz
jl
inc
or
mov
imulb
js
cmp
inc
cs
mov
cwtl
gs
pop
or
xor
xor
push
mov
dec
shl
cmp
jns
adc
shll
sbb
push
add
cltd
push
dec
cs
nop
and
dec
push
out
cmpsl
test
sbb
test
lahf
cmp
xchg
jae
out
fmull
mov
fldl
loopnew
outsb
sbb
insb
hlt
pop
test
jno
ljmp
inc
test
mov
mov
xchg
fildl
xor
push
fbstp
dec
in
push
and
or
dec
inc
lcall
mov
or
dec
stos
pop
pop
lea
daa
ds
push
push
les
inc
mov
mov
lds
int
fs
xor
sbb
sub
sub
shll
inc
jmp
inc
pop
mov
jge
add
cmpsb
mov
aam
pop
mov
lds
int3
lods
rcl
into
mov
xchg
ret
jo
cli
xchg
es
pop
arpl
mov
shrl
xchg
sbb
aam
das
inc
cmpsb
push
ss
std
gs
icebp
sbb
mov
fcomps
push
lret
xlat
bound
or
mov
inc
icebp
cs
push
imul
push
call
or
rcr
movsl
xor
fisubrs
daa
pusha
rol
sub
mov
hlt
dec
sub
add
pop
nop
push
test
loop
insl
cmp
add
dec
stos
orb
jl
pop
dec
cmpsl
push
test
jns
fmul
sbb
add
hlt
push
xchg
into
das
dec
adc
cs
cmpsl
or
and
ds
sub
out
pop
gs
mov
fdiv
gs
fists
lret
mov
popa
arpl
jbe
in
jnp
push
arpl
and
or
clc
jmp
push
sahf
xor
mov
idivb
bound
loop
sbb
sbb
push
jecxz
pop
sbb
dec
xor
cmp
push
pop
sub
in
pop
pushf
and
push
inc
fldenv
pop
cmp
mov
inc
cli
outsl
jb
push
pop
jmp
adc
insl
sbb
and
lods
fistl
sbb
mov
mov
fsubrl
sbbl
xor
jecxz
push
stc
faddl
pop
mov
pop
jns
shr
push
sti
jbe
test
out
mov
or
into
roll
xor
jmp
sti
mov
jp
shlb
add
adc
lret
mov
mov
pop
pop
sti
jo
xchg
jge
cmp
clc
xor
cli
sbb
ret
test
mov
mov
icebp
push
mov
cwtl
into
jge
fwait
hlt
push
loope
out
sbb
or
sbb
jecxz
pop
negl
clc
cmp
mov
pop
or
dec
icebp
inc
dec
push
into
and
sti
loop
cld
les
jnp
inc
push
pusha
push
ret
mov
or
adc
cs
xchg
inc
sar
xchg
inc
jbe
add
loop
pop
test
adc
push
sti
inc
bound
push
frstor
xchg
stos
mov
mov
add
sub
sbb
dec
in
fnsave
in
aaa
stos
lret
dec
add
jb
pusha
mov
add
pop
mov
add
sbb
aad
dec
jo
xor
push
aad
icebp
xor
cmp
into
inc
adc
xchg
push
xorl
sbb
pop
aas
mov
shr
adc
aaa
add
shlb
int
pop
jns
sbb
pop
sub
sahf
not
mov
icebp
pop
xchg
xchg
fdivl
pusha
out
mov
push
lahf
mov
ljmp
imul
in
pusha
mov
cltd
pop
fstl
xchg
pop
repnz
sahf
push
aas
add
test
js
pushl
pop
xor
outsl
mov
and
mov
jb
and
enter
fnstsw
and
adc
adc
bound
sbb
jl
xchg
sahf
pop
and
lret
mov
cmp
nop
iret
sbb
mov
mov
repz
es
outsb
daa
add
sbb
or
adc
push
pop
aas
xchg
fdivrl
xchg
push
stc
add
add
scas
mov
aaa
mov
imul
repnz
push
mov
aad
fcmovbe
mov
push
sub
cmpsb
mov
sbb
mov
jns
xor
sbb
arpl
ret
mov
or
adc
aad
gs
xor
in
or
rorl
fists
inc
sub
sub
push
andb
fildll
ret
out
sti
and
int
jl
sub
inc
inc
shr
mov
sbb
mov
push
cmc
jb
push
xchg
fisttps
cmp
lret
xorb
imul
subb
push
and
push
lret
shlb
adc
lret
cmp
fmuls
mov
push
sarl
into
pop
mov
hlt
jmp
pop
push
sbb
sti
ficoml
pop
icebp
sbb
ljmp
imul
repnz
cmp
lahf
cmp
mov
in
xor
aam
insb
sub
xlat
fldenv
stos
inc
lea
fisubl
jo
cmp
fwait
out
sahf
push
out
test
jmp
jnp
rcrl
ret
ret
sbb
or
lret
adc
ror
mov
fwait
mov
aad
loopne
xor
sub
pop
cli
or
dec
lock
dec
pop
and
sahf
mov
fwait
dec
inc
lret
add
inc
cld
out
add
lahf
xchg
push
dec
dec
out
sbb
or
fdiv
mov
cmpsb
xlat
pop
sahf
cs
adc
adc
clc
arpl
les
arpl
lods
notl
adc
jmp
and
subb
mov
pop
lock
sub
push
xchg
je
xchg
std
adc
out
sbb
pop
xchg
jno
xchg
lahf
mov
imul
cli
add
test
push
jle
inc
stc
adc
insl
ljmp
ljmp
inc
pop
icebp
cmp
into
xchg
push
gs
lret
arpl
iret
xchg
ret
cmp
cwtl
fstps
notl
pop
into
ds
fadds
adc
lret
mov
in
cmp
mov
aam
jmp
mov
dec
or
cmp
cmc
and
add
mov
push
test
mov
sub
add
not
mov
xlat
addr16
insl
mov
das
lahf
or
bound
into
mov
xchg
sbbb
cli
data16
data16
out
mull
lret
out
and
dec
test
pop
repz
cmp
mov
loopne
pop
ss
imul
int
xor
icebp
std
js
cwtl
xor
test
mov
or
or
push
lahf
insb
adc
add
roll
sub
aaa
or
jb
pushaw
sub
cli
data16
rcrl
jb
mov
push
bound
call
push
in
push
inc
scas
pushf
aad
movsb
xchg
add
lcall
inc
enter
out
pop
inc
and
xor
adc
push
dec
lods
fdivr
lock
cmpsb
cmp
and
int
daa
cmp
stc
popa
repnz
jo
and
or
ret
xchg
jns
cmp
ret
addr16
push
fidivs
dec
sbb
pop
sahf
ds
test
mov
adc
pop
add
in
pop
push
ret
adc
arpl
std
jle
aam
xor
mov
push
and
clc
adc
arpl
push
scas
fisttps
inc
cmp
fldcw
pop
push
sbb
sbb
and
data16
outsb
cmp
lret
je
dec
xchg
jmp
cmp
and
xchg
xchg
shll
adc
ret
add
mov
mov
icebp
mov
adc
jle
and
outsl
jge
cmpsb
je
scas
push
mov
push
bnd
xchg
out
push
jno
jmp
jne
dec
sub
mov
les
pop
stc
add
dec
mov
sti
aas
pop
xor
mov
adc
ljmp
or
jg
ds
dec
inc
mov
cltd
imul
sub
and
adc
mov
nop
push
hlt
hlt
cld
pop
and
dec
fdivp
testl
or
pop
jb
jnp
mov
insb
lods
sbb
in
icebp
scas
insb
lea
gs
and
xor
inc
test
stos
ljmp
push
push
ljmp
inc
xlat
and
mov
push
rcrb
pop
jbe
rorl
insl
sub
xchg
leave
mov
ret
cmp
pop
xor
test
xor
lret
pop
ret
dec
imul
pop
push
push
test
fbld
in
jnp
rorl
mov
stc
stos
sub
out
test
pop
fidivl
lcall
mulb
add
test
fs
loopne
xchg
cmovne
addb
outsb
lods
addb
and
jne
pusha
cmp
mov
xchg
and
fidivrs
das
fstpt
jns
movsb
or
pop
aas
mov
insl
and
sub
xchg
push
insl
loop
ret
dec
xor
mov
mov
and
fdiv
pop
push
mov
loope
ja
fcoml
push
sbb
mov
xor
dec
push
cmc
sarl
sbb
popa
sub
push
ljmp
loopne
xchg
xlat
xor
jmp
cmc
shll
fimuls
mov
push
movsl
or
repz
pop
lret
int3
fsubl
and
pop
and
sbbl
sbb
out
lcall
pop
rorb
call
loope
or
dec
pop
sbb
cmp
shlb
lods
es
adc
inc
jg
cmpsl
xorl
jmp
adcb
lahf
push
push
repnz
jecxz
test
sar
and
leave
mov
adc
bound
push
fs
pop
mov
xorb
add
xor
push
cltd
cwtl
negb
shlb
mov
or
repz
push
xor
xor
icebp
dec
jmp
jecxz
and
pop
inc
sbb
stc
lods
adc
fisubrl
inc
jp
mov
popa
mov
into
push
sbb
pop
shll
jecxz
push
xor
jno
fidivrl
push
and
push
scas
fcomi
js
mov
inc
pop
xchg
push
sbb
xor
jb
push
popa
and
or
cmpsl
mov
jne
jg
int
jno
fiaddl
inc
sbb
cld
sar
jg
fwait
aad
adc
and
fcomip
cmp
int3
add
xlat
aad
arpl
dec
xor
cs
ss
pop
lods
out
push
loope
mov
loope
imul
or
loope
inc
mov
sbb
adc
ret
fcoms
outsb
ret
cmpsl
sbb
shr
adc
out
or
insb
ficompl
leave
pusha
cmp
jmp
cmp
out
leave
insb
push
fsubl
aaa
jmp
xchg
and
mov
mov
adc
push
inc
add
fs
cmp
inc
test
xlat
pushf
mov
dec
inc
sub
test
popl
shlb
pop
in
xchg
scas
rorb
push
es
push
jp
mov
cmpsl
jnp
adc
cmp
mov
orb
fbld
cltd
int3
push
fwait
pop
pop
add
add
push
push
test
push
ds
pop
dec
mov
push
pop
shlw
and
div
loop
xchg
mov
test
cmp
pop
out
inc
addr16
fisttpl
xchg
inc
aam
sub
pop
or
add
mov
sbb
inc
insb
das
jo
roll
ret
data16
push
mov
and
clc
fbld
popf
add
cmp
notl
ds
fisttpll
fstp
sbb
push
sbb
in
inc
fprem1
adc
sbb
and
fsubr
and
bound
dec
pusha
pop
shlb
lods
bound
rcl
jmp
push
sbb
inc
mov
sarb
mov
and
or
inc
negb
mov
push
cmp
mov
pop
cmp
sbb
sti
sti
push
fstps
or
inc
shll
xchg
dec
lret
xchg
push
outsl
adc
shll
mov
push
jmp
pop
sub
es
xor
mov
lods
jns
mov
ficoml
jg
dec
leave
rcrl
into
dec
repnz
jae
cmp
movsb
sub
testl
lahf
add
jo
sti
pop
adc
cmp
dec
and
les
dec
stos
aaa
iret
xchg
js
insl
fimuls
fistl
adc
xor
push
fsubrp
sub
out
add
xchg
mov
jbe
cmp
test
jnp
mov
pop
pop
test
pop
mov
jle
test
stc
mov
ret
jne
sbb
or
push
xchg
cmp
mov
jns
fisubs
inc
rcrl
sub
adc
or
dec
xchg
mov
or
inc
sbb
sahf
sub
xchg
xchg
push
test
fisubrs
inc
int
xor
arpl
inc
cmp
jb
pop
xor
pop
imull
scas
inc
std
inc
pop
iret
xorb
stos
cwtl
lock
mov
xor
scas
in
and
dec
imull
stc
cmpsb
mov
cmpb
out
into
jne
pop
xor
mov
daa
cs
add
push
pop
fld
lods
lret
int
and
pop
sbb
push
in
add
xchg
sub
dec
jb
clc
negb
lret
je
jnp
jb
shrb
cmpsb
dec
pop
add
insl
mov
and
bound
mov
inc
adc
cmp
xchg
mov
cmpsl
stos
repz
sbb
push
and
push
test
xor
and
rol
in
mov
repz
dec
xchg
leave
mov
movsl
mov
in
pop
loopne
test
xchg
fwait
dec
fnstsw
fcmovnbe
fstl
rcr
mov
push
mov
loop
jo
sbb
push
iret
cmp
out
jo
add
mov
xchg
xchg
or
xchg
fucomi
lock
adc
mov
test
mov
adc
mov
or
cli
and
add
jo
shll
cmp
xchg
adc
fidivrl
test
push
cli
shll
punpckldq
xchg
adc
jns
cwtl
dec
cmp
fnstenv
aas
or
fstl
sahf
sarb
outsl
push
adc
pop
xlat
popf
cmpsb
pusha
adc
orl
lcall
cmp
push
push
shll
jno
and
aaa
neg
fcoms
xchg
leave
inc
ljmp
imul
jnp
adc
inc
rcrl
sarl
lahf
jmp
push
inc
outsb
inc
cld
push
je
push
pop
cmp
and
jbe
add
mov
adc
daa
inc
jno
push
aad
loope
pop
pusha
lret
mov
dec
cmp
loope
mov
outsb
ljmp
add
xor
addr16
push
mov
dec
fs
pop
dec
xor
pusha
sbb
and
int3
fdivrl
push
dec
nop
lds
pop
lcall
mov
out
testl
pop
inc
iret
iret
add
outsb
stc
inc
mulb
xchg
mov
sbb
aas
lea
pop
loope
cwtl
dec
push
fbstp
test
mov
push
push
repnz
dec
cld
add
gs
ds
xchg
aaa
cmpsb
ficompl
cmp
xchg
imul
add
xor
sbb
fildl
mov
dec
movsb
orl
mov
mov
adc
or
imul
sahf
dec
xchg
mov
push
in
inc
scas
in
add
push
and
mov
icebp
xchg
inc
test
mov
xor
std
addl
fbstp
faddl
leave
cmp
sahf
fisubl
and
dec
xorl
fcompl
in
ss
out
jl
push
push
adc
xchg
int3
or
test
pop
sbb
pushw
cltd
xchg
mov
push
sbb
hlt
test
movsb
lret
mov
add
push
lea
or
mov
jle
cli
call
clc
les
sub
push
or
and
xor
stos
out
aas
or
xchg
test
inc
fwait
das
outsl
bound
lock
shll
popa
adc
and
ljmp
mov
fstl
mov
rcl
add
addl
icebp
dec
jbe
sbb
mov
dec
lcall
or
push
mov
pop
cmp
xchg
popf
fcmovnb
mov
cmpsb
pop
sub
fcomip
ss
lock
xchg
aas
in
pop
dec
bnd
adc
movsb
data16
sub
lea
int
out
fimull
sub
cmc
lods
cmp
sbb
fucomp
fcomps
add
fidivrs
mov
sbb
or
loopne
out
sbb
loopne
pop
testl
subb
xor
rol
jmp
dec
push
push
mov
push
ficoml
std
inc
xlat
dec
gs
repz
mov
and
push
mov
or
add
out
push
pusha
lds
mov
sbbb
sti
iret
mov
addr16
popf
push
addr16
jns
pop
mov
or
sub
adc
pop
cmp
add
adc
rolb
mov
push
jmp
cmpsb
leave
dec
push
pop
inc
sbb
and
out
mov
ficoml
pushf
jl
push
inc
dec
mov
and
sbb
xchg
insb
sahf
adc
xor
icebp
sub
and
adc
xchg
fwait
jns
fdiv
int3
test
enter
neg
pop
popa
in
pop
lods
pop
enter
rcll
pop
idivb
cmp
ret
push
lea
add
fs
fisubl
add
ja
xchg
pop
fisubrs
xor
hlt
shrb
push
stc
repnz
xchg
dec
dec
cmc
adc
push
pop
sub
xchg
cli
lock
xlat
stos
aad
mov
xor
cmp
xor
das
daa
ljmp
into
test
sti
push
lea
hlt
daa
sahf
cmp
xchg
in
push
out
mov
call
test
adc
xchg
push
roll
sub
xchg
sbb
pop
out
testb
sbb
std
jo
jne
or
sub
sub
sti
mov
push
out
in
dec
pushf
mov
sbb
inc
push
ror
inc
inc
xchg
dec
popf
pop
movsb
repnz
xor
cmp
ret
ja
jg
clc
mov
jns
push
xor
bnd
movsl
pushaw
mov
dec
lock
add
push
mov
jp
mov
sub
pop
and
aas
add
xor
aas
lock
cmp
out
and
pushf
orl
lcall
jnp
inc
mov
repz
shr
shrl
and
mov
or
xchg
xor
lret
rorb
leave
pop
loopne
dec
inc
inc
pop
adc
mov
adc
pop
xor
add
push
daa
fisubrl
pop
test
fistl
mov
mov
add
enter
lcall
mov
into
inc
xchg
lret
into
xor
cmp
nop
inc
jge
or
stos
jnp
shrl
fidivrl
push
dec
shrl
lods
fs
or
mov
xor
into
icebp
cltd
lea
cmp
scas
pop
jnp
roll
dec
mov
sub
cmp
addr16
out
popa
test
xchg
sbb
dec
daa
add
loop
push
fiaddl
int3
cmp
stc
sahf
lcall
xchg
clc
jl
out
insl
test
pusha
mov
ss
in
insl
fwait
pop
repz
sbb
imul
and
pop
testl
faddp
xchg
inc
pop
aad
sbbl
in
or
add
int3
jae
jnp
orl
add
xor
aas
scas
loop
cmpb
jl
loope
mov
jge
and
xor
mov
test
mov
sub
test
sub
dec
cld
dec
or
xchg
cs
orb
cld
jne
int
ljmp
cli
mov
pop
dec
test
or
cmc
push
and
sub
dec
mov
lock
xorb
cmp
and
xchg
push
ljmp
adc
clc
loopne
and
mov
or
je
outsb
int3
sbb
sti
xor
arpl
test
or
cld
xlat
pop
cmp
mov
xchg
or
popa
xchg
mov
mov
test
dec
lods
ljmp
rcrb
lods
pop
imulb
jge
clc
fsubrp
ret
cmp
jle
pop
xchg
jmp
fists
or
mov
out
in
out
shl
xchg
push
scas
jl
sbb
cmp
pop
stos
cs
iret
repnz
cltd
ja
paddusb
shr
push
push
xchg
aad
addr16
mov
adc
mov
and
aad
sbb
inc
adc
shll
ret
pusha
ficompl
stc
loop
sahf
lock
pop
imul
fisubrl
jbe
es
sbb
or
scas
mov
stc
in
inc
out
aad
lods
les
dec
scas
adc
pop
inc
xchg
aam
incl
or
and
mov
mov
jp
inc
rclb
stos
andb
popa
jge
std
ret
lea
cmp
xor
rorb
stos
inc
insb
mov
and
in
xlat
sbb
pop
sub
inc
jp
test
nop
cmp
inc
scas
movl
adc
in
in
inc
jne
rclb
xchg
cli
inc
inc
xchg
or
xor
sbb
int3
je
insl
daa
test
xchg
arpl
mov
or
andb
sbb
divl
xor
add
sbb
mov
mov
mov
dec
sbb
lret
addb
out
fdivrs
jge
xchg
sub
loope
sub
dec
mov
xchg
pushf
add
in
lret
dec
add
cmp
cmp
sbb
pop
cmpsl
daa
jmp
or
add
cmpl
sbb
push
enter
in
mov
add
sub
mov
mov
push
pop
adcb
rorb
mov
sbb
add
jb
sub
popw
or
popa
mov
add
mov
sti
bound
jmp
leave
jge
mov
cld
loopne
enter
jb
inc
je
cmpsl
js
cwtl
mov
out
lea
jl
jmp
fists
in
leave
push
ljmp
imul
sub
fidivrl
jge
enter
lcall
or
fbld
cld
hlt
jne
imul
stc
outsl
push
cltd
fildl
in
add
inc
ds
pop
xlat
je
dec
mov
into
dec
in
in
shlb
and
lock
pop
adc
movsl
pop
ja
adc
lahf
faddl
jns
jns
dec
and
mov
xchg
sub
jg
dec
or
push
fsubs
or
inc
xorl
pushf
jp
xchg
xchg
add
jle
lret
adc
add
sbb
push
divb
mov
lret
in
int
cmp
icebp
pop
and
mov
cmp
mov
inc
push
mull
lods
mov
fimuls
aaa
xchg
imul
das
shl
xor
test
jg
loope
cmp
lock
mov
test
add
inc
adc
push
jnp
dec
xchg
inc
ds
mov
fldl
imul
inc
dec
arpl
gs
orl
adc
xchg
sahf
out
in
ficompl
mov
ljmp
or
mov
jns
xchg
bound
cmp
imul
jnp
sbb
repz
pop
jae
xor
xchg
pushf
add
testl
fdivrl
jl
xchg
popf
hlt
cmp
xor
test
add
imul
lock
mov
cmp
je
xor
sub
dec
add
and
xchg
cmpsb
sub
andb
rorb
pop
ds
mov
dec
rcr
scas
xchg
mov
sub
out
fcompp
mov
push
mov
sbb
mov
fucomp
lea
sahf
jg
ljmp
cli
push
lods
dec
loop
ds
mov
sub
mov
popa
push
sbb
subl
xchg
rolb
jg
arpl
and
mov
push
jle
push
movsb
pop
mov
push
jo
lea
imul
sub
pop
enter
mov
repnz
jmp
dec
imul
loop
and
lret
fstpl
in
nop
shll
in
push
arpl
sub
dec
insl
xor
cmp
sysexit
push
hlt
ss
xlat
mov
inc
aad
jb
sbb
sub
cltd
clc
imul
xlat
pop
rclb
jle
dec
enter
lret
push
out
push
into
cli
push
aas
xchg
mov
xlat
not
jmp
out
adc
fsubp
and
inc
movsl
shrb
fldenv
mov
mov
ss
repz
into
jne
jl
mov
sbb
adc
sub
mov
int3
add
aad
sub
icebp
loope
jge
or
adcb
adc
sahf
nop
pop
mul
scas
push
jge
add
imul
scas
jne
and
mov
scas
out
jge
and
push
addb
clc
dec
jbe
in
hlt
fiadds
jl
xchg
lret
jbe
or
pop
pop
sti
cld
mov
mov
pusha
aad
add
inc
aam
fs
push
sbb
mov
sbb
jns
mov
xor
int
adc
mov
fisttps
inc
hlt
and
movsl
push
cli
rcll
pop
xchg
shrl
gs
nopl
pop
imul
xchg
ds
inc
rorl
sub
test
fs
ljmp
push
pop
scas
cmpsl
repnz
xchg
push
addr16
dec
push
aaa
jbe
pushf
pop
filds
push
cmp
mov
push
push
and
inc
es
and
scas
mov
jbe
mov
cld
mov
lcall
push
ror
dec
sbb
mov
rolb
out
jge
cmp
adc
gs
cmp
xor
insb
mov
cmp
xor
and
jp
dec
mov
sbb
jecxz
stc
test
mov
xor
xchg
lcall
ja
xchg
inc
push
shll
stos
inc
adc
push
mov
bound
popa
add
sti
fcomps
neg
mov
or
fldenv
pop
fidivrs
cld
and
and
movsl
jne
test
mov
xor
daa
mov
xchg
jne
pusha
hlt
jo
lea
cmpsb
cmc
pusha
mov
fmuls
lock
fisubrs
push
mov
and
daa
dec
fidivrs
inc
lea
clc
push
dec
jecxz
xlat
and
xchg
scas
fldt
mov
or
ljmp
mov
or
inc
orl
sbb
mov
aad
xor
pop
pop
push
add
rclb
push
and
xchg
push
in
and
ret
mov
inc
dec
cltd
xchg
cld
xchg
mov
push
repz
push
nop
jmp
jmp
gs
das
fldt
ds
jne
shlb
fistpll
jl
outsl
icebp
inc
fwait
push
rcrl
lock
je
test
sub
pop
scas
fstpl
inc
xchg
loop
std
stc
loope
int3
test
mov
xlat
dec
sti
fldenv
int
push
cltd
inc
ret
neg
cmp
es
cltd
les
jne
insl
xor
push
inc
sub
jg
cmp
in
sahf
cwtl
jae
ljmp
mov
out
fdivrs
xor
jb
push
pop
rorb
adc
push
stc
in
and
pushw
mov
add
xchg
xlat
in
cld
push
sub
in
push
lret
jmp
ret
pop
push
xor
rclb
stc
xchg
ficomps
mov
jae
dec
js
adc
sub
jp
adc
das
and
dec
sarb
xchg
pop
mov
mov
xchg
inc
pop
out
sti
sub
and
sbb
pop
sub
ja
sarb
aaa
mov
add
jg
cmp
xchg
mov
mov
movsl
lahf
into
ret
add
jbe
push
out
out
test
jae
lsl
add
pop
arpl
xor
gs
lea
lods
sub
fwait
outsb
and
or
das
adc
mov
in
call
mov
in
xchg
sub
sti
sub
mov
xchg
xor
mov
xor
lods
mov
dec
notb
and
adc
adc
or
jmp
inc
jge
lock
imull
sub
decb
sahf
mov
mov
lds
sub
cmpsb
dec
notl
xor
mov
ss
mov
sbb
js
je
add
std
pop
jle
xor
jne
aam
inc
mov
fdivrl
jne
test
ljmp
loope
dec
or
push
ljmp
push
cld
addr16
ss
loop,pn
movsl
sub
and
popf
adc
test
dec
loop
pop
lea
adcl
scas
scas
roll
lcall
ficompl
push
inc
xor
aas
xchg
ja
out
xchg
adc
and
scas
xor
imul
xchg
add
loop
aas
js
cmp
xor
push
dec
jecxz
cs
aaa
sbb
pusha
lea
pop
es
nop
dec
dec
fidivrs
push
mov
shr
repz
ljmp
int3
out
decb
lock
popa
xchg
mov
pop
ljmp
sbb
push
sub
pop
lret
add
jl
and
cs
adc
movb
sbb
or
popf
jmp
xchg
rdtsc
movb
fistps
jne
sbb
dec
mov
adc
jmp
dec
cmp
rcr
cmpsl
push
lea
leave
mov
jp
and
jb
leave
pop
xchg
adc
inc
push
sub
sahf
mov
adc
push
testl
cmc
cmp
int
sub
testb
xor
jg
mov
pop
mov
movsb
lock
push
fnstenv
add
dec
test
jp
mov
sahf
leave
dec
pop
popf
mov
lahf
push
pop
xchg
lret
cmpsb
iret
cmp
ja
in
xor
fstpl
jne
out
xchg
dec
jg
imul
push
into
and
rcl
adc
jb
inc
cmpsb
popa
sarb
adc
jne
dec
adc
dec
push
fldl
mov
ja
adcl
mov
fbstp
fdivrp
jle
ret
clc
shr
pop
outsl
mov
filds
std
push
ret
insl
in
mov
sbb
push
push
jge
fisubl
push
mov
mov
cmp
das
mov
stos
leave
mov
imul
cmpsl
cmpsb
fs
jecxz
push
pop
mov
inc
leave
jp
stc
push
fdivs
xor
ss
rcl
movsb
push
popa
in
cmc
aas
push
mov
pusha
inc
jb
pop
xlat
push
scas
lret
stos
cmp
push
pop
pop
shrl
iret
iret
iret
mov
outsb
xlat
sub
mov
cltd
sbb
lahf
sbb
div
fstpt
push
ret
in
push
cmpsb
cmp
imulb
lcall
aaa
rolb
mov
cmp
cmc
popf
pop
mov
pop
in
mov
jp
das
mov
ds
mov
jne
cltd
mov
cmp
mov
pop
cmp
jg
mov
mov
stos
add
fdivs
shr
sbb
out
mov
jl
mov
xorb
xchg
sbb
test
cmpsb
add
movsl
mov
push
push
in
xchg
dec
jecxz
push
leave
cmpb
notb
in
mov
sbb
fnstenv
jae
stos
clc
jmp
out
aad
ds
in
ljmp
pop
dec
sahf
pop
adc
dec
ss
xchg
js
out
or
mov
mov
jmp
fisttpll
sub
push
cmp
rcl
inc
xor
cmp
int
mov
call
inc
jl
in
or
test
push
call
pop
xor
repz
push
xchg
sub
neg
cmp
decb
enter
cmp
lret
mov
out
or
inc
in
adc
call
push
roll
lcall
in
lods
push
adc
dec
fs
inc
xchg
ja
leave
popa
rcrl
scas
or
sti
inc
sbb
sub
iret
inc
loop
cmp
sub
pop
clc
sti
adc
mov
idivl
push
movsb
jl
mov
lret
imul
out
out
in
xchg
jns
jb
leave
sti
add
xlat
sbb
fdivs
jo
jecxz
mov
and
int
fisttpll
sbb
cmpl
inc
push
sub
aad
test
clc
sahf
mov
mov
mov
mov
or
jmp
leave
inc
xchg
adc
mov
imul
inc
hlt
adc
push
mov
xchg
adc
and
je
lahf
pop
aas
mov
movsl
sub
cmp
jne
or
loop
mov
cld
jl
adc
cld
jne
shr
lcall
test
aaa
adc
movsb
lcall
mov
add
push
lret
je
sbb
push
fucomp
adc
sub
sbb
int
sub
loopne
mov
aas
jmp
fstpt
repnz
mov
add
fwait
adc
xor
jno
loope
fistl
sarl
test
lds
negl
sub
sbb
sub
sahf
pop
mov
arpl
cmp
lret
std
dec
sbb
cmp
mov
sub
fisttps
pop
out
rcrb
push
ja
sub
cmp
jecxz
bound
xor
in
jg
fisubs
inc
addr16
xor
sub
int
std
les
add
xchg
mov
or
push
dec
loope
fs
loope
pop
mov
hlt
jge
dec
ffree
lahf
idivl
push
pop
xchg
aas
sub
pop
push
fnstsw
fst
push
push
cmpsb
xor
jl
nop
push
mov
fstps
pusha
mov
aaa
jp
aaa
sbb
outsb
jnp
or
out
pushf
push
lods
nop
push
push
cmp
dec
jae
fmuls
in
test
jecxz
xor
lret
rolb
inc
fistpl
icebp
pushf
frstor
ja
testl
nop
inc
cmc
push
mov
xchg
lret
push
jns
lods
cmp
test
adc
xor
mov
mov
mov
mov
xor
stc
ljmp
out
aaa
xchg
arpl
xor
addb
mov
sbb
inc
or
add
lret
cmp
popa
insl
cs
mov
jg
fwait
and
insb
inc
or
inc
xor
pop
es
loopne
mov
daa
sbb
adc
sub
repz
pop
xchg
out
popa
jge
push
cwtl
xchg
sbb
mov
sbb
pop
shll
dec
stc
lret
inc
push
scas
cmp
andb
pop
sbb
jmp
pop
loop
cli
mov
inc
cmpsb
rcr
inc
popf
test
lahf
push
dec
pop
sub
or
jmp
add
sbb
add
dec
jb
enter
aaa
and
or
jl
out
sub
xchg
ret
cmp
shlb
jnp
repnz
sub
out
hlt
jl
xlat
sbb
and
push
je
and
xor
sahf
push
cli
dec
add
add
mov
loopne
and
cs
shl
mov
push
lea
sbb
fs
cli
aaa
mov
sub
jb
addr16
inc
faddl
popf
xor
inc
mov
sti
add
inc
cltd
mov
push
fucomi
aam
data16
xor
popa
adc
pop
cmp
mov
sbb
dec
pop
push
cmpsl
stos
xlat
cmp
push
insb
test
jmp
adc
pop
sub
nop
aaa
movsl
mov
int3
mov
dec
cmc
in
ds
or
mov
cwtl
clc
inc
cmpsl
or
xlat
outsb
leave
xor
idivl
daa
fldcw
push
pop
pop
jl
sbb
pop
pushf
mov
cmpsl
daa
dec
pop
add
cmpsb
movsl
shll
lahf
loop
inc
xchg
jecxz
or
xchg
into
jo
loopne
add
xor
cmc
iret
js
xchg
leave
aam
arpl
push
mull
aad
das
leave
jbe
and
outsl
jle
cmp
addb
dec
popf
pushf
or
out
cmp
movsb
cmp
lret
js
xor
outsl
inc
add
pushf
mov
imul
add
popf
fdivrl
jb
add
cltd
mov
in
xor
mov
and
pop
call
mov
aas
out
inc
pop
pop
mov
in
push
out
cmc
cmp
adc
pop
cmp
loopne
cmp
mov
int
adc
arpl
aam
push
bound
sub
stos
in
xor
les
addr16
and
sti
inc
pushf
mov
icebp
xor
or
or
push
shl
cmp
lods
cmp
test
sbb
push
inc
dec
xchg
cmp
push
adc
pop
lods
pop
cmp
inc
rcll
cmp
xor
xchg
scas
adc
adc
mov
push
sub
push
xor
sti
push
pop
push
fldl
ffree
mov
loope
push
adc
jp
cmp
push
inc
xchg
repz
inc
outsl
mov
jle
bound
je
cmp
jns
dec
jno
add
push
imul
sbb
push
notl
out
xchg
xor
sti
cmpsl
cmp
or
xchg
fisttps
and
or
inc
mov
adc
xor
adc
and
pop
adc
sub
mov
jp
jo
or
or
xchg
mov
adc
or
sub
inc
push
loop
ja
jno
jg
or
mov
aam
push
cmp
xor
inc
mov
cld
sbb
mov
push
push
bound
sbb
es
inc
mov
loopne
clc
dec
ljmp
outsb
int
cli
xor
shll
xchg
cmpl
mov
fs
push
jmp
xchg
arpl
fstp
push
jmp
dec
jle
adc
sbb
pop
or
adcb
adcb
add
sarb
jg
pop
push
jle
push
xor
icebp
fcompl
jb
mov
cmpsb
sub
cmp
popf
lock
or
jmp
cli
add
adc
cmp
pop
lahf
cmp
dec
adc
fiadds
mov
mov
xchg
mov
out
adc
jae
jnp
and
cmpsl
xor
jp
aad
adc
test
lock
ljmp
jl
dec
sub
dec
rcrb
std
dec
mov
mov
enter
sub
sbb
sub
or
pop
jmp
cmp
pop
test
adc
dec
and
ss
push
fcomps
mov
sbb
push
cmpsb
dec
cmp
cmpsl
ss
ret
icebp
insl
stos
fcmovnb
mov
cmp
test
scas
stc
incb
inc
int3
or
inc
fstps
mov
dec
adc
adc
sbb
mov
pop
icebp
or
push
push
add
insb
xchg
inc
inc
das
jns
in
clc
lcall
xorb
adc
fmul
dec
aas
fcomp
mov
aaa
pop
push
inc
xor
decb
cmp
stos
jecxz
inc
scas
mov
pop
sub
inc
jl
rorw
std
mov
popl
ds
call
jo
push
xor
cwtl
inc
ljmp
inc
scas
push
cmp
jmp
dec
mov
fidivrl
fisubl
pop
dec
mov
pusha
mov
outsb
inc
cltd
or
jle
jno
add
leave
roll
fiadds
outsl
gs
outsl
push
fsts
and
push
std
cmp
push
or
xor
ds
dec
shll
push
lods
xchg
aad
and
jae
cmpl
mov
sbb
jae
sub
bound
add
add
dec
dec
and
inc
fiadds
push
push
sbb
fisttpl
ficomps
push
aad
stos
dec
adcb
xlat
jbe
push
or
fwait
mov
push
stos
push
and
and
and
jge
pop
mov
fisubrs
pusha
outsb
pop
hlt
sbb
sbb
mov
push
inc
inc
mov
out
xor
sub
sub
cmpsl
inc
jne
adc
movsb
dec
stos
cltd
sbbl
movb
insl
sub
mov
enter
mov
inc
imull
push
lret
aaa
je
andb
cmp
jp
and
sahf
xor
jecxz
test
xchg
ret
loopne
lods
push
sub
dec
fwait
push
ret
xchg
mov
pop
sbb
pop
xchg
cld
sbb
inc
push
or
mov
adc
mov
jp
mov
ljmp
sti
lea
mov
dec
jne
scas
dec
xor
ret
mov
jnp
call
gs
push
adc
or
mov
fmull
push
and
call
insb
daa
sbb
outsb
jo
repnz
lods
popf
inc
imul
outsb
sbb
push
lret
orb
je
pop
in
negb
testb
pop
lods
lods
xchg
xor
pop
xchg
fidivl
jno
inc
push
dec
sbb
mov
push
pop
cmp
push
outsl
cmp
sbb
adc
xchg
mov
add
pop
xor
push
ja
cmp
cli
cmp
pop
jne
jmp
cmpl
mov
jne
xor
std
mov
fcompl
inc
scas
fldt
push
fcmovu
and
int
out
out
inc
add
or
sub
adc
push
xchg
ljmp
mov
fucom
lcall
or
jl
dec
dec
xchg
mov
push
jl
jmp
fildll
addb
fs
dec
sub
push
ljmp
dec
xchg
fisttpl
mov
dec
adcl
push
pop
dec
mov
add
sub
into
test
out
push
sub
scas
sbb
imull
mov
push
jp
sbb
popa
lahf
cmp
test
xor
or
lret
xchg
sub
test
cmp
addl
pop
sbb
xchg
sbb
sbb
and
dec
lahf
jp
sub
pmullw
pop
mov
sub
sub
subb
or
and
pusha
or
inc
mov
sub
jbe
push
int3
cmpsb
push
push
out
cmc
xchg
repz
or
repnz
push
pop
mov
mov
movsb
cmpsl
fisubs
xorl
xchg
je
xchg
pop
cltd
jecxz
jbe
jmp
mov
fisubrl
xchg
sarb
insb
outsb
xchg
push
xor
cmp
sub
adc
mov
xchg
lahf
cwtl
push
fwait
insb
icebp
dec
ret
mov
adc
outsb
mov
pop
and
out
sbb
psllq
jl
push
jne
fnstsw
mov
scas
jge
movsb
push
int
inc
lods
xchg
mov
jl
test
adc
mov
dec
ficoms
test
cmp
pop
push
adc
jge
mov
out
out
dec
cmp
sub
sbb
inc
mov
stos
test
mov
jle
pusha
or
jo
jmp
out
lods
pop
push
inc
orb
rcl
xor
in
sahf
das
flds
push
lret
sti
addb
or
dec
out
sahf
daa
pop
and
mov
cmp
push
xor
cmpsl
mov
shlb
mov
int
pushw
mov
mov
lock
xchg
lock
ret
inc
jnp
popa
dec
lods
mov
hlt
cmp
push
push
bound
cmp
enter
aas
or
loop
dec
lock
dec
adc
mov
out
pop
xor
aaa
jo
push
fldenv
outsb
fisttps
test
cmp
dec
xor
mov
ror
data16
cmpsl
and
xchg
in
inc
jl
cmpsl
sub
mov
jb
std
and
and
mov
sub
push
pop
xor
sub
adc
mov
sub
lock
sbbb
cli
into
push
jne
in
jo
loop
jns
fstpl
ss
jecxz
lock
or
and
ret
sbb
push
les
js
push
xor
xlat
repz
add
cmp
lahf
jmp
sbb
fimuls
les
adc
das
mov
or
in
jns
cmc
push
xchg
in
icebp
xor
sbb
jnp
dec
xor
jo
fnstsw
push
test
daa
jo
movsb
sarl
jbe
mov
pop
repnz
bound
repnz
xchg
push
mov
arpl
dec
jl
movsl
xor
shl
sbb
pusha
sahf
sub
fstl
xor
int3
dec
dec
test
pop
and
inc
cltd
loop
mov
sbb
or
stc
mov
daa
ficoms
adc
push
xor
and
loop
dec
push
stos
punpckldq
repz
push
adc
jnp
xchg
jmp
xchg
inc
inc
sub
mov
cmc
pop
rcll
movsb
imul
cmp
js
loop
xchg
pop
sbb
jp
and
fisubrl
add
jle
out
call
test
imul
ja
stos
add
jns
sbb
shlb
pop
inc
adc
inc
stos
inc
pop
push
jp
adc
repnz
pusha
sbb
fnsave
outsb
ret
pop
sbb
cli
sbb
lea
push
mov
dec
push
push
in
cmc
fidivrl
add
sbb
sti
shll
test
cltd
cmc
cmc
xor
push
outsl
mov
imul
mov
or
mov
fxam
pop
or
sub
fwait
sub
pop
cmpsl
sbb
mov
gs
dec
aas
fsts
inc
jbe
gs
add
ds
in
bswap
mov
adc
mulb
mov
mov
xchg
in
add
push
lcall
das
push
or
or
sub
ret
mov
pop
ss
icebp
cmc
pop
and
push
outsb
push
lahf
add
in
or
cmp
push
outsb
and
sarb
mov
sub
inc
add
fs
scas
pop
bound
outsb
mov
dec
inc
cmp
push
cld
dec
or
pop
aas
jl
loopne,pn
ficoms
leave
lret
inc
add
es
push
mov
jle,pn
cmp
and
sarb
iret
sbb
mov
lret
jbe
lea
loope
jbe
inc
es
sbb
fbld
dec
adc
icebp
adc
dec
outsl
mov
push
sub
into
lods
fidivrs
mov
push
mov
and
lret
push
scas
out
fsin
ret
out
ret
lret
lret
leave
inc
sub
gs
jmp
repnz
loop
ss
push
int3
pop
jle
stos
es
push
dec
out
mov
jno
cmp
mov
lret
ss
mov
and
fistpll
bound
push
pop
push
push
cmpsb
xchg
out
inc
push
sbb
sub
jmp
or
fld
push
js
cld
sbb
std
dec
sbb
or
testl
and
dec
mov
jmp
inc
es
adc
push
add
xor
orb
ljmp
call
push
jge
adc
sbb
xchg
cs
add
jo
xchg
test
sbb
sbbb
mov
mov
call
bound
jp
popa
test
mov
push
mov
mov
and
dec
xor
mov
test
lcall
and
adc
mov
frstor
jge
cmp
dec
lret
leave
data16
xchg
dec
sbb
outsb
ja
cs
pop
pushf
std
sub
adc
lock
add
js
stos
loope
xchg
jnp
add
daa
or
dec
pop
lret
pop
stos
je
xor
mov
jnp
mov
xor
outsl
sbb
int3
sbb
jo
xchg
and
jle
sub
xchg
fisubrs
xchg
bound
test
fidivs
inc
sub
pop
std
push
loopne
push
sbbb
sub
cmp
and
mov
insb
clc
sub
or
sub
flds
lods
mov
mov
add
outsl
fidivrs
jae
add
jo
loop
out
or
lds
dec
int
inc
pop
xor
push
mov
mov
jmp
outsb
xchg
inc
xchg
inc
rcrl
les
push
jnp
mov
and
test
jnp
jne
mov
test
push
pop
jno
fldt
std
push
push
in
dec
push
sbb
inc
lods
or
dec
jbe
pop
mov
loop
ss
inc
dec
jmp
adcl
jg
pop
daa
dec
das
dec
scas
pop
lds
push
inc
push
jle
cmp
cmpsb
add
and
mov
pop
aaa
pushf
jle
pop
sbb
or
dec
lret
stos
dec
in
pushf
xor
cmpsl
mov
xor
inc
mov
cmp
or
mov
out
jl
mov
dec
and
sbb
xor
insb
sub
xchg
sbb
lahf
gs
xchg
inc
mov
bound
loop
mov
ss
pop
sub
adcl
outsl
loop
insb
clc
xor
and
add
sub
sbb
mov
insb
leave
fwait
dec
push
dec
das
sub
aad
sub
inc
pop
jg
pop
adc
inc
inc
in
push
adc
jo
dec
fldcw
lret
les
cmp
aam
in
inc
push
cmp
dec
ss
pushf
xor
lahf
cli
data16
adc
in
cltd
mov
dec
push
imul
inc
ficoms
and
sbb
adc
das
pop
hlt
mov
mov
into
fisttpll
push
icebp
inc
ss
lea
in
or
aas
dec
popf
push
inc
orl
nop
dec
lea
dec
in
sbb
jnp
ljmp
push
mov
cs
xor
cmp
xchg
nop
sbb
jle
bound
out
into
loop
pop
neg
in
cmp
or
jmp
mov
leave
stc
add
sub
fwait
and
out
pop
sbb
inc
adc
das
or
sbb
or
ds
sub
lahf
pop
sub
xor
mov
insl
loop
ficoml
fcmovnb
xor
adc
xchg
fsubr
lock
adcl
fdivr
cltd
jmp
icebp
sbb
pop
dec
sti
test
aad
int
aad
insl
outsl
aad
mov
fidivrs
jge
adc
andb
insb
movsl
lea
arpl
mov
jg
fwait
ds
cmp
fucomp
subl
outsl
mov
and
std
lods
ja
mov
or
pop
jmp
sub
repz
xchg
hlt
scas
mov
mov
jae
mov
fs
std
push
pop
fiadds
xlat
in
xchg
xchg
fmull
sub
gs
sbb
movsb
jbe
mov
mov
xchg
sahf
sub
sarl
es
incb
xchg
ja
xchg
sub
shrb
sti
pusha
ljmp
out
ljmp
cld
mov
cmp
in
call
pusha
mov
imul
jmp
add
nop
test
xlat
sbb
push
ja
add
pop
push
jecxz
dec
enter
leave
adc
and
push
pop
loop
lods
add
push
sbb
dec
cld
push
ret
sub
std
and
mov
jb
or
popa
push
jle
mov
cmp
and
sbb
sti
pushw
outsb
inc
cmc
addl
lods
xchg
lds
dec
xorb
sbb
adc
pushf
jp
jle
bound
adc
orb
sbbl
push
cs
jl
fisubl
shl
test
pop
jnp
es
sahf
jp
xor
addb
xchg
lea
xchg
push
enter
mov
outsb
dec
and
andb
pop
stos
jge
jae
xor
cmp
xor
dec
cmpsl
lret
push
in
int3
insl
jle
iret
fwait
push
je
rcrl
das
pop
lcall
inc
rcr
pop
push
jmp
jmp
outsl
std
mov
inc
mov
mov
push
or
dec
pop
adc
je
push
es
aas
fcoml
les
push
xchg
imulb
ficompl
int3
lods
int3
sub
dec
jbe,pn
cmp
cmp
and
mov
rclb
xchg
rorb
test
scas
inc
pop
scas
or
dec
loop
fwait
sahf
xchg
das
xor
cmp
sbbb
shrl
mull
inc
pushf
in
mov
fisubs
xchg
dec
mov
fcoml
repnz
sbb
mov
sub
push
repz
push
sarl
mov
adc
push
and
mov
incl
notb
add
out
cs
pop
mov
rcll
pop
dec
inc
and
dec
xchg
movsl
inc
sbb
mov
leave
in
inc
or
subb
pop
nop
addl
ret
outsb
dec
adc
shlb
and
addr16
sbbl
push
loope
inc
adc
repnz
imul
jp
dec
test
sub
dec
loop
mov
mov
jo
sub
xchg
push
and
lods
scas
outsb
inc
ficoml
push
sbbl
pop
inc
pop
inc
fdivs
rorb
fiaddl
popf
push
mov
inc
ljmp
push
std
and
scas
call
cmp
das
out
inc
shrl
inc
jns
out
pop
jle
pop
xchg
lret
xor
adc
ljmp
loop
test
or
push
les
popa
stos
fisubl
jle
mov
scas
and
push
aad
and
adc
cs
inc
dec
push
fisubrs
std
movsl
inc
ds
inc
ljmp
pop
xchg
out
inc
or
fadd
cmp
mov
lret
cld
cmpsb
jb
mov
aaa
or
cmp
mov
inc
xchg
fisubrl
dec
loopne
push
aad
mov
out
stos
dec
lock
fldcw
ja
cmc
pop
and
mov
inc
inc
push
xor
jno
inc
jl
lods
aad
test
cmp
or
adc
jge
fcmovnu
sbb
sub
addr16
pushw
push
add
outsl
cmpsb
sti
inc
push
inc
inc
sbb
mov
dec
popa
imul
dec
sahf
lret
pusha
popf
jge
ss
cmp
movsb
push
sti
pop
in
addr16
sbb
mov
inc
mov
ss
aaa
cmpsb
ds
and
sar
and
in
in
cmpsb
out
cmp
xor
xor
test
hlt
lret
dec
je
imul
lcallw
pop
ss
jae
jae
ljmp
xor
out
adc
jmp
jae
adc
dec
fbld
push
sbb
ss
movsb
mov
sub
mov
dec
cmp
out
subl
pusha
outsb
icebp
data16
loope
inc
sarl
pop
jno
xor
rorb
imulb
lock
or
scas
pop
push
arpl
in
dec
std
stc
ja
dec
adc
dec
cltd
fisttps
mov
addr16
mov
mov
ret
ret
mov
adc
notl
pushf
inc
pop
insb
je
out
shr
daa
imulb
add
sbb
or
xchg
jb
and
lcall
sahf
pop
gs
mov
jne
mov
or
mov
push
adc
push
cs
jnp
fstl
pop
out
xor
push
dec
lds
clc
push
sub
push
xor
jmp
push
loop
pop
dec
mov
sbbb
repnz
and
lret
jle,pn
add
adcb
lahf
xchg
jmp
push
mov
inc
cli
mov
push
sbb
fsubrp
adcl
or
call
test
clc
add
fimull
aad
push
dec
loope
cs
inc
pop
or
push
mov
and
pop
dec
xor
popa
call
lret
clc
fidivrs
mov
or
xor
lahf
jmp
push
jbe
pop
push
dec
sbb
data16
jb
xor
push
and
in
gs
rcrb
xor
or
ljmp
push
loopne
fsubs
jmp
rcll
dec
lret
dec
fwait
add
mov
and
sbb
mov
test
fidivs
jns
jge
sub
xor
insb
or
imul
fcmove
adc
jp
adc
push
sbb
pop
add
cmp
mov
je
dec
cmpsl
data16
jns
and
and
lret
cmp
push
inc
cwtl
inc
lock
push
fdivs
outsl
faddl
outsb
out
sub
loope
scas
shll
xor
sub
push
aas
sar
add
js
sub
xchg
mov
xchg
and
cld
dec
filds
stos
push
jle
or
out
push
ss
ja
cmp
scas
or
jnp
sub
dec
cmpl
popa
jg
sub
mov
jns
jp
rcr
das
add
jmp
out
leave
adc
xorb
jle
lock
outsl
dec
or
outsb
push
enter
pop
rorb
daa
sub
mov
xor
cmp
cmp
sbb
add
scas
cmp
mov
cmp
dec
cmp
out
mov
pop
push
enter
push
out
std
out
lret
cmpsb
add
push
xchg
daa
dec
xchg
xchg
data16
fdivp
movsl
insb
xlat
adc
xchg
shll
dec
rcl
daa
test
dec
clc
out
mov
dec
cltd
in
push
xchg
adc
adc
iret
popf
push
mov
popa
movsl
add
mov
push
sbb
cmp
xlat
fs
call
pusha
mov
std
in
mov
dec
leave
xchg
movsl
xor
fucomi
das
lret
cmp
and
or
in
mov
cs
jp
add
add
sbb
mov
xchg
popf
push
lds
outsb
in
cmp
dec
into
jb
mov
dec
jns
les
cmpsb
jo
mov
adc
pop
inc
or
mov
fwait
aad
stos
mov
data16
jo
icebp
stos
mov
in
gs
loopne
rolb
cmp
sub
cltd
adc
mov
xor
xchg
push
inc
xor
icebp
pop
sbb
call
jo
roll
and
out
jle
xor
aas
cmp
mov
dec
scas
pop
cld
push
loop
lods
inc
sbb
mov
adc
pop
fsubrp
lret
ror
aad
ljmp
add
roll
mov
pusha
mov
sub
in
hlt
sub
jmp
ja
mov
add
movsb
sub
and
jle
inc
and
call
daa
pop
enter
dec
xor
sahf
pop
cwtl
stc
mov
mov
xchg
adc
repnz
jb
xchg
lds
jno
sub
add
dec
pop
mov
mov
cmpsb
lcall
shrb
sbb
jae
xchg
or
fidivrl
mov
or
pop
push
lea
inc
jg
rorl
sub
ficoml
arpl
lock
inc
and
sbb
inc
add
xor
mov
sbb
cmp
out
mov
push
in
xchg
jp
sbb
jg
dec
inc
pop
or
jmp
push
cmp
sub
dec
cmpsb
push
ja
dec
outsl
sti
xor
inc
and
sub
push
sub
xchg
mov
test
sub
stc
push
pop
gs
xor
and
xor
sbb
bound
sti
pop
rcll
jae
adcl
bound
jle
rolb
sbb
scas
and
cmp
shr
nop
lock
push
lret
test
jl
ds
cmpsl
lock
shl
clc
cmc
push
adc
adc
nop
and
sbb
in
jl
daa
inc
inc
cmc
xlat
lret
decb
insb
xor
cmp
fstps
jg
or
int3
aaa
cs
scas
das
jl
xor
bound
inc
mov
mov
imul
jp
mov
rol
fwait
dec
popf
sbb
loopne
push
cli
aaa
das
aaa
mov
test
sti
mov
push
insb
js
ss
cmpsl
sub
push
lods
mov
add
mov
jbe
aaa
in
das
cltd
jae
jb
stos
sub
nop
in
divl
adc
ds
xchg
les
imul
push
pop
sub
push
push
imul
inc
aam
add
das
movsl
mov
mov
shlb
std
jb,pt
imul
pushf
stos
in
xor
pusha
data16
ljmp
sub
movsb
rorl
jns
xor
out
inc
push
mov
cmp
repnz
add
jecxz
inc
sti
jecxz
decb
test
jmp
decl
or
stc
lods
and
std
bound
gs
into
lcall
mov
cmpsb
push
xor
sub
jae
mov
sbbb
pop
sbb
sahf
inc
pop
adc
jae
cmp
out
lods
scas
adc
ss
inc
dec
jnp
rorl
mov
inc
daa
push
push
cmpsl
lds
mov
jp
jge,pt
icebp
cli
lahf
and
dec
movsl
ret
sub
in
dec
jg
test
dec
sub
push
lea
jo
mov
jmp
jle
jne
ret
or
mov
inc
nop
xor
lods
pop
xchg
daa
mov
testb
and
enter
call
in
push
popf
cld
inc
dec
pop
push
je
jae
aam
popf
sahf
push
add
cli
jle
push
ljmp
xor
aam
push
mov
movswl
out
addr16
push
xor
inc
xchg
inc
jp
dec
cwtl
addr16
popf
lds
fdivrs
not
pop
push
subb
jb
push
loope
mov
stc
jno
js
push
mov
cmc
pop
sbb
inc
sbb
arpl
and
cld
xchg
mov
ja
mov
adcl
orl
inc
sub
mov
lret
nop
arpl
int
insb
inc
or
dec
outsb
dec
popf
add
out
mov
cmpsl
ret
jmp
rolb
lock
xor
or
cmp
or
pushf
out
and
lahf
cmp
jo
or
jae
and
mov
sub
sahf
sbb
loope
inc
and
jmp
xor
movsl
jmp
dec
rcll
lcall
jae
mov
push
push
test
mov
pop
jecxz
push
loopne
rol
aaa
shlb
clc
lea
fwait
repz
inc
mov
or
mov
and
shll
push
daa
and
aas
aad
faddl
add
inc
into
jbe
les
sbb
xor
ret
pop
sub
mov
adc
xor
push
cld
jmp
or
or
imul
mov
or
mov
ficomps
dec
mov
sub
dec
test
pop
sub
shll
orl
inc
enter
sbbl
jp
fwait
mov
xor
fldt
push
jb
or
ja
inc
pop
loop
insl
scas
ljmp
movsl
push
sub
data16
xchg
sbb
loop
inc
lods
fimull
insb
mov
outsl
test
push
jp
and
pop
fadd
les
inc
xlat
mov
xchg
mov
negb
mov
test
jecxz
push
jno
push
adc
cli
sbb
cmp
dec
push
mov
inc
adc
dec
sti
and
fld
dec
dec
insl
jnp
aam
mov
pop
dec
push
cmpsb
rolb
xor
push
arpl
or
and
dec
pop
add
bound
ljmp
dec
lret
push
sbb
mov
inc
dec
shll
mov
mov
mov
pop
xchg
sub
ficompl
lcall
sti
je
pop
jnp
add
test
das
xchg
divb
jae
xchg
cmpsl
add
cmp
pop
mov
sahf
scas
idiv
pop
js
cmpsl
jl
aas
and
rclb
pop
cmp
test
inc
xchg
bound
scas
xor
inc
movsl
fstpl
push
mov
mov
lods
frstor
xchg
js
into
mov
sub
push
add
sub
pushl
pop
push
pop
mov
es
fisubs
cs
shlb
xchg
and
pop
int
fimuls
adc
rcl
out
jle
mov
out
orl
cmp
sub
shlb
int3
data16
sbb
dec
jg
pop
in
mov
jle
mov
in
adc
sub
cltd
ljmp
filds
int3
and
aas
cmpsb
stc
mov
add
mov
dec
push
idivb
mov
repnz
pop
mov
mov
ss
movsb
decb
pop
iret
scas
cmp
push
xchg
mov
jo
xchg
das
push
test
push
or
mov
add
add
push
jmp
sti
mov
ret
lods
add
inc
jge
adc
pop
cmp
test
xchg
inc
push
mov
xor
out
testl
mov
cmp
dec
repnz
lods
mov
into
ja
jnp
sub
mov
sbb
pop
bound
lahf
das
nop
imul
dec
fsubr
aam
and
push
fldl
mov
imul
xchg
push
lods
and
test
pusha
pop
insl
fwait
mov
iret
fstp
sbb
add
mov
jns
and
pop
es
inc
lret
mov
mov
mov
mov
push
or
repz
leave
jnp
clc
cld
test
ja
inc
pop
pop
adc
shrl
andl
ljmp
popa
loop
cmp
sahf
push
filds
mov
jbe
scas
jle
dec
cmpsl
cmp
ret
and
lahf
jno
mov
add
pop
xor
pop
sub
sub
iret
mov
daa
push
jne
insl
dec
pop
outsl
std
pop
out
xor
lock
jp
dec
push
dec
out
rcr
sahf
cmpsl
cmp
sbb
das
xor
fisubl
push
scas
jne
fsubr
and
mov
or
aaa
ret
dec
mov
test
repnz
and
sbb
rorl
push
xor
push
popa
cmp
pushf
insl
jle
jle
jecxz
sbb
ret
or
mov
rcll
jg
fstpl
add
or
xor
or
and
push
bound
cmp
clc
mov
push
test
dec
mov
and
and
push
jns
fistl
push
sub
out
push
mov
sbb
cmp
mul
or
lea
out
jge
cli
jmp
frstor
cmp
lahf
cld
pop
jo
add
out
int3
xchg
xor
inc
pop
repz
xor
push
repnz
mov
flds
pop
shll
bound
inc
mov
test
shlb
imul
test
scas
cli
das
push
inc
add
dec
push
jb
lahf
or
es
add
mov
xchg
and
jb
std
adc
dec
push
loop
cwtl
adc
adc
mov
sbb
inc
aas
sbb
mov
sub
jecxz
push
fmulp
xchg
arpl
mov
sbb
in
xor
loopne
mov
pop
xor
and
mov
ja
jne
daa
ds
fwait
mov
push
push
daa
lods
in
sub
and
faddp
arpl
xor
adc
jl
test
stos
jge
popa
xor
nop
pop
outsb
shll
fucomp
cltd
inc
or
inc
out
fdivrs
mov
push
ljmp
jecxz
mov
cmovns
cmpsb
call
sub
inc
push
add
jo
push
add
outsl
fstl
stc
loope
add
dec
std
orb
sbb
out
int
icebp
push
mov
push
add
mov
insb
popf
cmpsb
fisubrs
cwtl
mov
std
fidivrl
mov
rclb
shrl
test
push
and
adc
cltd
hlt
cs
in
mov
and
xchg
mov
mov
mov
mov
adc
and
inc
dec
cmp
jbe
rcll
jmp
aam
push
mov
testl
xor
xchg
push
push
pop
add
adc
insb
and
icebp
iret
test
cmpsl
scas
lret
cltd
int3
jp
sbb
dec
sub
mov
add
fldenv
inc
push
cmc
xor
and
cli
xor
mov
add
xchg
imul
dec
addr16
shrb
stc
pop
or
push
pop
jae
ds
insl
xor
push
inc
mov
ret
cwtl
imul
or
sti
mov
add
je
add
ds
push
leave
xchg
add
scas
movsb
loopne
add
cmp
sbb
popw
mov
mov
mov
in
mov
dec
xchg
and
rolb
xlat
mov
inc
cmpsb
mov
cs
movsl
lea
dec
scas
stc
add
lds
dec
je
cltd
fbld
fchs
andb
pop
inc
lcall
cmpsl
ficompl
sbb
dec
and
out
jle
int3
fildl
mov
rol
shll
insl
inc
push
pop
cmp
dec
test
or
test
loop
push
mov
mov
sub
dec
inc
jle
loop
inc
pop
dec
jle
xchg
out
stos
pushf
xor
sbb
push
mov
sub
bound
cmp
sbb
sahf
lds
mov
jb
mov
clc
xor
bound
cli
push
xor
icebp
sub
add
push
mov
mov
sub
test
stc
fnsave
adc
jb
and
dec
popa
cmp
ss
adc
stos
sub
les
sbb
movsb
imul
dec
out
in
or
dec
mov
inc
pop
iret
cmpsb
loopne
inc
sub
inc
cmpsb
mov
jmp
dec
jno
sbb
daa
jbe
js
test
pop
inc
push
mov
repnz
jo
loopne
sahf
xchg
sub
mov
push
jbe
cmp
dec
or
cmp
xor
cvtps2pi
pop
and
and
and
cmpsl
add
and
loopne
inc
pop
insl
xor
mov
push
out
mov
pop
popf
outsl
cmpsb
fstps
nop
shl
xchg
repz
xor
out
mov
or
cmc
adc
mov
xor
mov
inc
jns
xchg
mov
xor
daa
mov
jne
bound
fisubrl
ljmp
and
xchg
cmp
pop
lods
je
or
int
push
roll
popl
add
outsb
daa
std
inc
push
test
sbb
xchg
cld
cmp
aam
ja
inc
push
enter
pop
mov
cli
xor
clc
cmpsb
pop
scas
xor
fcomi
lcall
scas
or
xchg
movsl
mov
pop
loop
outsb
lods
movsl
ret
shrb
imul
and
filds
out
scas
jmp
fsubl
jge
ret
inc
stos
pop
ror
ficoms
lahf
sub
and
iret
stc
jns
adc
lock
in
es
sbb
rclb
xor
sub
push
stc
in
es
loop
pop
push
xor
add
out
xchg
mov
stos
or
add
inc
cmpsl
adc
cmp
fwait
jmp
dec
inc
shll
iret
cltd
test
sub
cmp
shlb
dec
out
inc
mov
adc
adcb
add
dec
imul
movsb
sub
cmpsb
add
das
adc
jbe
dec
jecxz
mov
dec
mov
popf
int
stos
add
adcb
dec
sub
adc
fstpl
pop
ss
push
xchg
sarb
testl
mov
pop
sahf
dec
pop
jbe
jo
enter
popa
pop
dec
aaa
push
and
popa
dec
mov
sub
movsl
clc
cmovle
in
and
add
das
sub
add
push
push
push
dec
xchg
push
pop
cli
test
xchg
jp
test
add
mov
mov
sub
pop
push
outsl
mov
mov
js
pop
push
cmp
mov
ljmp
mov
mov
pusha
cltd
sahf
popf
scas
cmp
mov
xchg
fisttpl
lret
pop
push
ret
test
mov
cmpsl
add
ret
mov
pop
ret
clc
cmpsl
sub
lcall
xchg
cmp
cmp
jae
inc
lret
and
cmp
dec
push
adc
in
test
or
sbbl
cmpsl
jae
jle
push
loopne
dec
pusha
jb
pushf
imul
outsb
int3
loope
push
push
cwtl
jge
mov
out
push
enter
outsl
mov
ret
jmpw
and
add
push
mov
ret
das
sbb
adc
push
jb
fidivrl
mov
add
push
xchg
jb
or
and
pop
jle
jae
ret
pop
lods
jae,pn
ds
ficomps
fdivs
and
fildl
ret
cmpsl
push
pop
repnz
sub
jp
and
notl
sbb
cmpsb
push
movsb
data16
dec
sahf
mov
mov
pop
in
pop
lock
loop
mov
add
add
outsl
fistps
mov
mov
sub
push
and
lods
test
inc
pop
pop
jmp
add
je
aaa
sub
jbe
sbb
movsl
jl
scas
jle
mov
gs
lret
xor
mov
mov
inc
push
incl
jb
fs
and
push
xor
xor
mov
adc
lret
add
jo
mov
push
mov
addl
loop
nop
inc
jae
enter
dec
jns
cld
not
xchg
icebp
arpl
arpl
and
fs
push
ret
and
mov
outsb
mov
or
or
push
mul
sub
cmp
jg
sub
rcrl
ss
insb
ss
rorb
stc
pop
push
xor
fsts
push
push
outsb
movsb
adc
or
sbb
fwait
inc
and
inc
and
xchg
test
aaa
idivl
nop
jge
cmp
clc
repz
add
test
push
inc
insb
lea
jns
pop
incl
lret
cs
lahf
add
stc
jno
sbb
outsb
cmpsb
push
pop
cmc
pmaddwd
sbb
movsb
jo
xchg
pop
insb
testw
mov
fsts
push
mov
ffreep
das
dec
mov
mov
mov
xchg
lret
popa
push
fcmovb
test
sub
adc
xor
into
xchg
pop
sbb
adc
dec
push
repz
adc
pop
add
into
adc
mov
push
xor
imul
add
cmc
xchg
cmp
popa
mov
mov
jle
and
js
bound
and
push
mov
or
sub
xor
cmp
sub
mov
push
clc
divb
out
insl
add
dec
adc
dec
cs
add
sbb
mov
xchg
jmp
ret
in
lds
repnz
mov
mov
lcall
movsb
push
pop
cmp
cld
and
js
cs
std
leave
add
push
jge
add
stos
adc
imul
jle
adc
ffreep
aam
inc
push
sub
sub
sbbb
push
pusha
xor
jae
imul
add
mov
lahf
cmc
ss
push
lcall
xor
outsb
repz
gs
xor
mov
mov
out
rorl
and
pushf
dec
sub
repnz
jns
sbb
fildll
lds
and
subl
sub
add
or
mov
lods
inc
adc
mov
shrl
dec
adc
ds
add
dec
dec
sub
mov
das
mov
or
sub
scas
out
pop
ret
cmp
mov
or
jns
pop
inc
or
mov
xchg
in
popf
std
or
xor
mov
ficomps
jns
scas
sub
mov
cmpsl
test
fldl
mov
jge
test
fdivl
adc
popa
sub
or
or
mov
js
pop
fsubrp
sub
dec
sbb
imul
adc
sbb
lock
add
mov
ljmp
test
add
dec
cmc
push
imul
iret
fildl
jae
mov
ret
dec
clc
cmc
shlb
fists
rcrb
test
jle
ljmp
mov
call
fisttps
scas
das
stos
mov
icebp
sub
subb
fwait
sub
lcall
imul
pop
hlt
inc
mov
xchg
repnz
repnz
jnp
lods
lods
orb
lds
fneni(8087
cld
mov
pop
test
pushf
jno
ss
fisubl
xchg
fmuls
xor
in
test
pop
lock
mov
outsb
imul
in
test
jle
or
fwait
inc
filds
jge
mov
mov
xchg
xchg
dec
ss
pop
add
push
dec
testb
mov
push
data16
outsb
into
fsubrp
push
push
jo
dec
mov
ljmp
or
push
inc
cmp
scas
jae
jmp
cmpsb
pop
inc
dec
sarb
pop
sub
scas
inc
cmp
or
cmp
pushf
xor
out
push
dec
jno,pt
rorl
cwtl
xchg
adc
gs
fdivr
fbstp
xlat
in
popf
addl
push
arpl
mov
scas
ror
push
pop
pop
push
lods
cmpsb
sbb
cmp
int
stos
xchg
enter
incl
lahf
iret
in
or
ficomps
ds
inc
repz
cmp
lods
pop
loope
mov
and
shll
push
pop
cmpsl
fadds
inc
in
push
fists
add
xchg
cmp
sbb
jg
scas
stos
lods
rorb
pop
dec
rolb
xor
sbb
sub
mov
iret
subl
test
jae
inc
stos
push
int3
lds
scas
or
ror
aad
push
test
jb
fldln2
jne
aas
inc
mov
fdivs
sahf
fcmove
xchg
loope
loopne
movsl
ja
test
pop
pop
sbb
je
mov
xor
pop
xchg
test
sub
cmpsb
fldl
mov
push
inc
push
mov
inc
aaa
cmp
jmp
sbb
inc
adc
mov
pop
cmp
sbb
stc
out
push
xchg
jb
dec
test
xchg
inc
pop
add
popf
test
aad
scas
push
xchg
inc
pop
out
dec
jb
lods
mov
enter
scas
sub
sbb
ds
xchg
adc
in
xchg
push
cmp
add
dec
sbb
push
sbbb
jmp
jae
sub
in
aad
or
pop
mov
out
outsl
jge
sbb
mov
sbb
sarl
das
dec
mov
pop
enter
push
sbb
mov
jecxz
pop
jb
fnstsw
dec
sub
jns
testl
int
and
stos
jecxz
pop
jbe
or
sahf
pop
lea
adc
cwtl
and
dec
dec
insl
es
cmp
cmp
inc
sub
xchg
cmp
and
bound
sbb
inc
pop
aas
insb
inc
daa
mov
cmp
mov
inc
fcmovnbe
test
loope
lahf
movsb
xchg
push
mov
push
inc
lret
jl
out
inc
je
push
loop
xchg
ljmp
in
xor
je
lcall
pop
out
xchg
lods
and
ss
and
ja
inc
and
xchg
sbb
ja
xchg
ja
fidivs
loope
outsl
out
mov
pop
shr
jo
adc
jmp
sarl
xor
out
dec
xor
dec
int
jmp
push
jns
ficomps
int
movsl
add
mulb
dec
stos
rolb
xor
cs
push
subl
pop
arpl
inc
fstl
or
inc
std
cmp
pushf
sarl
orb
jb
cmc
and
and
enter
ds
sahf
xor
add
add
cmp
jns
inc
dec
movsl
std
push
and
repnz
push
test
daa
mov
lea
loop
aas
cmp
fdivl
pop
loop
mov
subb
clc
push
fimuls
xor
push
dec
es
aaa
mov
xchg
out
add
out
sbb
push
je
inc
ja
test
push
cmpsl
dec
cmp
mov
mov
mov
movntq
shl
mov
jns
mov
xor
jmp
inc
fs
stos
cmp
call
push
enter
mov
dec
ret
mov
inc
fstp
pop
mov
jg
jae
cmp
jnp
add
rorl
cli
pop
dec
xlat
outsb
out
sub
fisttpl
add
call
ret
sbb
inc
sbb
sbb
or
pop
arpl
jne
cmpsl
xor
push
stos
cmp
xchg
mov
stc
fs
add
sub
mov
sbb
sbb
jae
fisttps
push
cwtl
mov
loop
lcall
sbb
sub
in
nop
push
add
fwait
insb
enter
int
mov
fldl
filds
pop
push
inc
aas
lods
icebp
inc
popa
lret
dec
inc
das
shl
mov
mov
mov
xchg
fidivrs
push
out
jae
in
and
dec
pop
push
and
test
xchg
push
cmp
dec
jge
push
ljmp
inc
mov
sub
cmp
les
push
xchg
inc
or
and
hlt
and
sahf
pop
mov
mov
jbe
push
out
dec
push
xor
test
pop
fidivl
jnp
stos
adc
sub
fcoml
in
cmp
jb
push
fdivp
in
shll
inc
mov
push
sub
stc
mov
je
xor
sub
sub
jle
mov
mov
sub
push
jnp
cmp
rcrl
cs
dec
popa
xor
push
dec
jmp
mov
repnz
push
jae
enter
lret
push
out
or
adc
lock
ljmp
stc
jae
dec
lock
in
xor
pop
in
xchg
pop
push
mov
jne
in
dec
inc
das
jg
pop
ljmp
icebp
fldln2
inc
mov
cmp
sbb
mov
fsubrp
inc
orl
lock
subb
push
lahf
push
scas
inc
aaa
inc
lock
xor
out
inc
fnstenv
jg
add
sar
mov
or
xor
aad
dec
scas
sbb
jbe
adc
sub
sbb
mov
ds
inc
lods
push
jae
std
pushf
xchg
rcll
jge
mov
inc
xor
ret
pop
push
subb
andl
testb
cmp
es
xor
xorl
pop
iret
xor
orl
jno
jo
insb
mov
push
dec
push
test
and
mov
jo
xchg
lea
mov
adc
loope
adc
je
or
inc
xor
hlt
addr16
inc
push
sub
out
xchg
lock
sub
inc
fidivrl
mov
mov
test
mov
sub
das
das
jle
test
test
scas
push
cli
pop
fidivrl
sbb
push
mov
into
add
outsb
nop
ret
shll
mov
imul
out
pop
call
jbe
cli
ja
rcrl
cmpsl
dec
loop
mov
push
cmpsb
jle
cmp
jmp
inc
enter
pop
jno
outsl
arpl
test
ja
and
insl
sahf
sbb
stc
or
jbe
js
pop
xchg
dec
mov
decb
xor
xor
mov
test
cmpsl
out
out
lret
lds
daa
and
repnz
dec
idivl
scas
jae
pushl
je
lods
cltd
mov
xchg
dec
loop
cmpsl
and
pop
leave
repnz
push
les
pop
xor
push
cmp
test
jb
pop
ja
jecxz
sahf
inc
push
add
inc
sar
cmpsl
mov
fwait
out
out
sbbb
inc
outsl
push
mov
dec
js
sub
loop
subl
push
fimull
jg
sbb
out
add
lcall
mov
jo
fsubs
and
pop
pop
xor
aad
jb
fiaddl
dec
cmp
divb
xchg
outsb
mov
mov
cmpsb
mov
cmpb
dec
dec
in
dec
mov
push
cmp
jae
aad
cmp
push
out
out
fldenv
sub
lea
jo
pushf
not
lret
and
sarl
cmp
rorl
mov
aaa
out
nop
jno
ss
aad
mov
fs
adc
jne
loope
push
xor
pushl
pop
movsb
pop
je
xor
lea
stc
pop
cli
xchg
xor
mov
andb
mov
push
ljmp
inc
dec
sub
and
bnd
mov
nop
loop
or
neg
push
int
inc
xlat
jg
or
and
mov
sub
cmp
adc
inc
cld
sbb
lret
enter
outsb
scas
dec
push
dec
xchg
int
push
xchg
cmpsl
ljmp
jne
pop
and
push
push
push
pusha
je
sbb
ja
lahf
pushf
mov
mov
mov
es
push
dec
fbstp
fldcw
es
inc
adcb
jne
pop
bound
aaa
mov
adc
inc
movsl
adc
mov
ds
rcl
cmp
xor
mov
pop
outsb
xor
fidivs
andl
sbb
addr16
and
es
pop
jle
pop
mov
out
out
out
mov
orl
inc
loop
xchg
dec
inc
aaa
xchg
dec
jl
out
xor
dec
pusha
imul
cwtl
cmp
xchg
xchg
aam
es
fstps
sahf
mov
cmp
cmp
pop
gs
fwait
adc
out
fcoms
mov
arpl
data16
adc
dec
out
pop
inc
lods
inc
push
fisubrs
dec
jb
imul
push
fwait
cmp
pop
ss
scas
ja
sub
xchg
ljmp
fstps
dec
xchg
ret
xchg
push
or
sbb
fimuls
cmp
xchg
mov
or
sub
dec
push
push
movsb
imul
push
push
sub
and
test
mov
lcall
xchg
cmp
add
xchg
out
push
inc
pop
loope
cmpsl
lock
mov
inc
pop
push
in
mov
cmpsb
stos
xor
add
jmp
pop
or
or
push
das
mov
mov
lret
push
cs
cltd
cltd
inc
mov
jne
inc
outsl
add
dec
popf
cmp
int
adc
mov
testb
pop
push
loop
pop
push
andl
mov
ds
sub
dec
jnp
cltd
mov
fstps
fimull
fidivrs
mov
out
sahf
and
push
cmpsb
sbb
cmp
sbb
push
xchg
inc
cmp
lret
rorb
pop
jo
out
cmpb
lret
pop
push
rcll
xor
xchg
scas
sub
mov
add
and
mov
sbb
fsubp
jp
inc
bound
test
fstl
dec
push
fisubs
sub
sbb
jne
dec
inc
int3
jbe
fnstcw
test
aad
clc
or
pop
lcall
cs
mov
push
xchg
push
test
sbb
lea
test
sbb
mov
push
divb
repz
out
rclb
mov
mov
and
je
cmp
cmp
cmp
int3
fiaddl
shll
leave
add
shlb
mov
loopne
movsb
pop
mov
insl
or
roll
cmpsl
fidivrl
in
and
dec
fldl
xchg
daa
add
sahf
lret
inc
rcr
ja
sahf
jbe
or
cmp
jg
mul
jle
cmp
roll
ss
jecxz
loope
loop
fstpt
mov
pop
shrl
dec
repnz
cmpsb
sbb
rcrb
in
in
sub
in
or
in
cltd
xchg
sti
daa
jl
sahf
jo
stos
jae
fdivl
mov
lds
movsb
inc
add
dec
ljmp
in
cltd
in
push
jg
xchg
ljmp
inc
pop
or
dec
decl
lcall
jl
fdiv
push
dec
and
out
cwtl
movsb
cmp
cmp
adc
add
push
inc
cmp
int
mov
jnp
adc
loop
and
sub
scas
xchg
shrb
mov
rol
jns
jp
or
fnsave
fdivrl
push
movsb
out
mov
out
jge
pop
int
add
or
leave
aam
rcl
out
sbbl
jge
int3
scas
pop
push
addr16
and
inc
jne
push
dec
jbe
ss
add
push
jb
and
inc
nop
cmp
mov
ds
mov
fwait
adc
cmp
sbb
push
jnp
addr16
test
inc
ljmp
aad
mov
pop
push
dec
dec
mov
sahf
fidivrs
cmp
pop
jp
ss
xchg
mov
mov
ja
insl
mov
pop
or
pop
push
inc
xor
fisubl
daa
cmp
out
out
pop
rorl
push
lahf
jge
sti
push
xor
fcmovu
mov
bound
divb
mov
clc
inc
jge
cmp
xor
lret
aaa
adc
cmpb
jge
push
out
add
sub
ds
out
or
hlt
in
push
pop
cmp
push
xor
push
push
shlb
aad
fiadds
mov
and
jecxz
pusha
push
xchg
xchg
lock
stc
movsl
push
int
inc
pop
pusha
aad
mov
testb
iret
mov
xor
mov
aaa
das
into
test
pop
cmpsb
loop
jp
jmp
mov
daa
xor
addr16
bound
out
in
test
out
loop
pop
in
fnstcw
outsb
lahf
cmp
push
sarl
push
sbb
and
sub
dec
or
cmp
sub
xor
lods
mov
mov
aad
test
jnp
inc
and
out
and
je
jns
es
cmp
out
pop
cwtl
dec
sub
fidivs
add
pop
or
out
pop
mov
sbb
pop
sarl
fs
adc
dec
pop
mov
mov
mov
mov
pusha
xlat
cmp
cmp
aaa
mov
inc
push
insb
aam
push
rorb
fdivl
loop
mov
sbb
lods
pop
orl
mov
ficoms
sbb
rolb
xlat
pusha
and
sahf
sbb
inc
and
sbb
lret
xorb
lods
xor
sahf
xor
test
dec
cmp
jp
jge
xor
in
dec
daa
es
pushf
inc
lock
out
pop
sbb
jl
cltd
dec
mov
ret
mov
sahf
sub
hlt
les
negl
mov
mov
cmpsb
adc
mov
outsl
sbb
xchg
inc
push
loop
pxor
jl
cmp
mov
jl
dec
push
cmp
push
mov
and
andb
cmpl
push
lret
sti
push
cld
into
jge
sti
mov
inc
cmp
icebp
out
mov
out
pop
les
inc
lahf
xchg
sbb
cmp
push
das
add
sbb
pop
mov
mov
in
push
fs
cmp
in
in
fnstsw
int
fiadds
push
cmpsb
cmpsl
and
mov
rcr
push
mov
xor
je
jl
xchg
repnz
lcall
in
mov
insb
insb
push
rcr
sbb
jbe
je
mov
mov
jl
jnp
cmp
xlat
mov
iret
inc
inc
and
push
jmp
shll
mov
fidivrs
add
xchg
cltd
shll
ficomps
mov
mov
lock
shll
fmuls
movsl
out
loopne
xor
lea
dec
lret
out
repnz
sub
inc
clc
loop
cmp
lahf
mov
call
jns
pusha
popf
gs
js
pop
inc
add
dec
jnp
aad
and
jge
ficomps
data16
andl
jmp
cmp
mov
xor
dec
mov
pop
clc
pop
ret
jge
lock
pop
jmp
mov
adc
mov
mov
pop
ret
push
jo
lods
jmp
push
stos
or
mov
push
cmp
dec
jmp
jno
lods
insl
adc
cmpsl
stos
sbb
add
test
cld
sub
push
jge
bound
dec
inc
filds
scas
or
out
fcoml
imul
outsl
jp
pusha
xor
dec
dec
rcrl
out
mov
aaa
jmp
dec
mov
inc
push
adc
insb
mov
test
or
inc
pop
shrb
js
repz
add
or
loop
ss
inc
jo
mov
sti
in
cltd
inc
mov
mov
std
inc
mov
aaa
push
xor
or
xor
jmp
loop
push
dec
rcrl
mov
pop
inc
daa
push
loopne
cltd
sub
xchg
arpl
fstp
xchg
inc
cmp
test
inc
lcall
jecxz
fwait
cmpsb
push
ljmp
lock
jo
cmpsl
call
push
movsl
sbb
or
test
fiaddl
int3
shll
aas
jp
cmp
jae
mov
jge
movsb
push
sbb
dec
add
add
out
fidivrl
scas
dec
addl
stos
mov
fldl
jp
ljmp
sbb
xor
jbe
hlt
jo
cmp
and
or
inc
sbb
ja
sti
aad
mov
inc
pusha
arpl
nop
ljmp
mov
lcall
inc
outsl
mov
sti
je
mov
movsl
rolb
jmp
dec
stos
sub
adc
dec
sbb
xchg
repz
dec
xor
fldl
aaa
mov
mov
es
jle
loope
aad
jne
rcrl
xchg
pop
xor
sbb
cmp
in
xchg
jle
cs
and
test
out
je
nop
pop
jge
mov
push
push
clc
in
pushf
xor
pop
push
mov
mov
nop
dec
inc
add
js
loop
dec
mov
sahf
lfs
ss
sub
or
xchg
arpl
hlt
inc
dec
mov
jae
and
xchg
fisubl
loop
aad
or
dec
mov
fwait
imul
daa
add
sahf
out
sti
inc
dec
mov
test
fst
scas
xchg
push
inc
jmp
push
inc
or
lods
push
inc
jl
movsl
loop
ja
shrl
xor
pop
shlb
pop
pop
or
shll
pop
daa
loop
xchg
mov
jbe
push
ss
gs
inc
pop
sub
addr16
aaa
mov
scas
sti
inc
pop
inc
cmp
inc
sub
sbb
or
inc
int
mov
jne
es
loopne
mov
and
iret
cmpsl
cmp
push
inc
cmp
dec
inc
test
cmp
jge
ret
jmp
adc
mov
dec
orb
push
mov
jg
pop
fiaddl
cmp
repz
sbb
daa
sarb
stc
push
notl
xor
shrb
cltd
icebp
or
sbb
xorl
push
aaa
or
fistps
sub
stos
lahf
out
cs
in
xor
jb
popf
out
mov
stos
fimull
push
inc
inc
push
pop
aaa
or
dec
pushf
loop
mov
push
notl
int3
inc
or
pop
jo
or
loope
xchg
cmpsb
pop
out
dec
pop
out
mov
fwait
cmp
test
loope
mov
ret
push
sbb
add
push
in
clc
push
lahf
xor
push
stos
stc
xchg
dec
mov
scas
xchg
aaa
lret
daa
and
jno
in
popa
lea
stos
jg
jmp
out
out
cmp
sbb
es
inc
nop
lds
movsl
jle
and
xor
out
imull
js
sub
jbe
mov
sub
xchg
mov
and
into
pushf
mov
outsb
out
push
xchg
mov
inc
mov
add
xchg
or
dec
bound
mov
inc
sti
gs
fcoms
jnp
inc
pop
popf
aad
jl
inc
ret
daa
ret
andl
mov
inc
inc
jg
dec
nop
repnz
pop
data16
push
xchg
pop
insb
sbb
cli
mov
sbb
pop
sub
sub
ja
or
and
sar
jp
idiv
xor
sub
fidivs
sbb
les
loop
cmpsb
xchg
out
pop
pop
cmp
fwait
dec
arpl
jbe
fscale
and
repz
or
jp
repnz
sub
daa
cmp
inc
test
xchg
xchg
xor
sti
loopne
push
scas
int
xchg
push
lret
mov
jmp
decl
or
mov
pop
rcrl
xlat
lcall
lahf
pop
and
in
xchg
fiadds
cs
push
adc
repz
rorb
fcomp
aaa
mov
fwait
out
dec
sbb
lds
imul
pop
and
jle
rorl
lods
or
popa
addb
cmp
xor
xchg
mov
movsl
cli
aad
xchg
dec
lahf
cmpsl
pop
jo
flds
mov
ja
clc
jns
rcr
push
jbe
mov
xor
mov
xadd
js
inc
cmc
ficoms
or
dec
sbb
addr16
cmp
bound
into
in
jno
loop
mov
cli
or
call
add
vmovshdup
jmp
push
push
in
pop
cmp
dec
cltd
imul
xchg
push
cmp
cmpsb
in
dec
push
mov
or
call
fcmove
popf
clc
ljmp
lret
in
xor
or
xor
jmp
push
mov
imul
into
pop
xchg
sbb
push
push
ret
out
rcll
outsl
ficomps
lret
sub
add
xchg
xor
cmp
cli
mov
pop
sbbl
and
out
lds
push
fidivl
pop
loope
cs
push
and
and
pop
xor
sahf
or
call
stos
lret
insl
clc
mov
add
test
lahf
cs
roll
jno
push
testb
pop
jmp
push
jb
pop
pop
dec
sbb
addr16
inc
sbb
in
jns
out
mov
testb
out
pop
mov
dec
roll
mov
xor
int3
jg
fists
sbb
inc
and
pop
data16
or
call
ljmp
mov
pop
mov
add
adcb
lahf
xchg
jmp
push
stos
inc
pop
xchg
dec
push
cli
mov
pop
jne
push
mov
push
es
lret
je
xchg
push
xor
or
mov
cli
xchg
pop
sbb
ljmp
xor
push
scas
bnd
mov
push
arpl
ljmp
pop
cmp
dec
adcb
pop
pop
and
push
push
inc
and
pop
data16
or
call
lret
popf
clc
ljmp
fnstcw
imul
bound
jbe
cmp
pop
dec
sbb
loop
test
pop
xchg
xor
push
stos
out
ret
mov
push
imul
in
push
jmp
stc
inc
orb
push
pop
sbb
push
push
inc
and
pop
data16
or
call
fcmove
mov
into
cltd
mov
lea
rolb
fistps
lcallw
in
dec
push
ret
xor
or
call
fcmove
popf
clc
ljmp
mov
mov
mov
inc
pop
or
push
lret
sbb
inc
xchg
mov
push
xor
adc
shr
jns
out
test
dec
popf
cli
out
xorb
adc
lcall
cmp
dec
pop
adc
bound
in
push
push
mov
or
call
lret
cltd
clc
out
test
shll
jnp,pt
sbb
cmc
sbb
push
push
and
pop
dec
xor
gs
ret
clc
into
jle
stos
xchg
push
fdivrl
xchg
inc
jl
push
pop
in
xor
or
jp
sbb
xor
push
call
scas
lret
jne
jle
sahf
xchg
or
mov
push
adc
lahf
xor
fld
or
fisubs
jle
std
xchg
push
adc
xchg
sub
dec
cmp
xchg
pop
sbb
xor
xor
or
call
dec
shl
out
mov
cli
ds
add
clc
push
xor
mov
push
xor
adc
jge
ljmp
fiadds
mov
push
cld
jg
out
aad
and
stc
sbb
push
and
pop
dec
xor
popa
call
lret
clc
fidivrl
mov
and
leave
xor
push
fcmovb
inc
shll
pop
loope
bound
and
adc
xor
cmp
xchg
push
xchg
lret
popa
clc
scas
jle
mov
adc
mov
es
leave
push
ss
adc
and
std
push
outsb
pop
adc
sub
jbe
cmp
xchg
pop
xchg
lret
xor
adc
out
dec
pop
into
dec
xchg
cli
fiadds
mov
push
cld
sbb
pop
fstps
ss
adc
xchg
jmp
push
mov
dec
cli
lcall
sbb
cli
in
mov
xor
push
lret
int
popl
in
xor
add
sbbb
dec
sub
jbe
cmp
pop
dec
sbb
adcl
push
mov
ret
mov
nop
pop
inc
jmp
push
pop
icebp
pop
inc
dec
add
sbb
push
inc
and
pop
push
fimull
call
ljmp
fimull
aad
push
dec
loope
xor
or
pop
xchg
push
and
pop
pop
xor
or
call
jle
mov
and
lds
ss
lret
adc
divl
jle
adc
mov
xor
cmp
cli
sahf
andb
pop
jne
cli
push
mov
push
and
xor
ljmp
pop
fildl
xor
adc
jle
pop
bound
jbe
cmp
pop
dec
sbb
fsubrp
adcl
or
call
push
ret
int
pop
inc
jmp
push
push
in
pop
ss
stc
stc
inc
orb
push
pop
sbb
inc
and
pop
data16
or
call
out
test
rclb
inc
jmp
xor
xchg
sahf
fildl
mov
pop
lahf
jmp
push
fidivl
mov
sbbb
imulb
push
into
and
push
rcrb
sub
or
jbe
cmpsb
xor
sub
push
xchg
dec
clc
sahf
jle
jbe
loop
test
repnz
push
adc
cli
or
xchg
push
push
pop
divb
bound
call
lretw
sub
push
xchg
mov
adc
out
jmp
push
xchg
pop
loop
movsl
cli
repnz
out
inc
fstps
dec
in
stc
cmp
push
push
and
pop
xor
push
call
mov
jne
ret
mov
xor
adc
lahf
cs
shrl
inc
lea
and
and
or
retw
sub
push
xchg
lret
pop
clc
cmpsb
jle
adcb
adc
push
and
clc
push
dec
in
push
pop
divb
bound
push
pop
lret
and
outsb
jle
dec
xchg
mov
adc
fsubrp
adcl
xchg
cli
out
lods
addr16
pop
shll
push
xchg
xchg
push
lret
rolb
pop
pop
sbb
clc
cmpb
xchg
fldt
ficoml
jle
ljmp
loop
movsl
cli
cli
add
add
loop
ret
in
xor
sbb
pop
jle
cmp
adc
adcl
popf
cli
ljmp
jns
scas
xchg
popa
xor
sbb
push
push
and
sbb
xor
inc
call
cmpsb
lret
imul
xchg
lahf
sub
int
add
and
in
push
pop
pop
add
jb
push
push
ret
sbb
pop
sub
jbe
cmp
xchg
bound
loop
xchg
add
cli
incb
mov
lret
fbstp
pop
cmc
sbb
push
push
and
pop
inc
xor
pop
call
ret
clc
jle
mov
cmp
xchg
out
pop
loope
xor
adc
sub
push
xchg
pop
xor
dec
call
stos
lret
insl
clc
mov
push
fsubrl
lahf
es
leave
push
ss
adc
and
add
xor
sub
jbe
cmp
mov
push
clc
sahf
jle
jbe
loop
test
repnz
push
adc
cli
add
mov
cmc
push
stc
pop
inc
dec
or
jmp
int
and
or
pusha
imul
stos
dec
es
pusha
dec
dec
cmovae
and
add
pop
jg
pop
pop
cmp
es
insl
mov
mov
adc
imul
fistps
fidivrs
xor
divb
inc
loop
add
sbb
pop
dec
sbb
or
pop
push
inc
xchg
insl
mov
jb
or
xchg
push
xor
stc
icebp
mov
add
or
jbe
movsl
adc
jg
mov
pop
cs
shlb
in
or
popa
aad
and
or
and
cmp
adc
std
push
pop
add
movsb
sbb
add
les
cmp
stos
mov
xor
paddw
ss
out
inc
fcomps
loopne
cltd
xchg
es
bound
rcrb
sub
je
pusha
mov
aas
ss
aad
sbb
in
lea
sub
mov
lock
jmp
lret
adc
std
scas
cltd
rcrb
push
loop
dec
rorl
mov
mov
lret
cld
shr
sbb
out
xor
or
gs
mov
xchg
imul
cli
out
push
inc
jle
sbb
jge
and
push
xlat
adc
xor
or
orb
and
sbb
add
sbb
lcall
mov
in
xchg
push
dec
cs
and
jo
sub
push
addr16
push
dec
adc
lods
pop
adc
mov
adc
adc
sub
sub
fwait
mov
ret
in
loopne
pop
mov
adc
jl
mov
movsl
cmp
insl
lahf
lea
test
repnz
sbb
or
scas
jl
adc
orb
and
out
test
lret
cmpsl
sub
aam
lcall
cmp
sbb
std
push
popa
push
sbb
cs
or
mov
std
into
push
dec
jp
or
stos
mov
popf
incb
paddb
adc
movsb
pop
inc
pop
outsl
roll
add
pop
cli
inc
sbb
push
adc
jbe
sahf
clc
test
or
push
sub
pop
aam
insb
mov
pusha
in
adc
dec
xor
sbb
ret
ror
push
adc
jecxz,pn
xor
jg
pushf
aaa
pop
cmpl
mov
add
and
mov
or
lret
jge
cmp
jl
xchg
mov
and
adcb
pop
mov
push
jp
dec
jnp
cmp
push
and
jp
xor
lret
mov
xor
mov
jecxz
or
popf
inc
push
mov
cli
mov
inc
fs
pop
sbb
fldenv
push
ss
adc
mov
mov
cmp
pop
jge
cmc
and
repz
fnstsw
out
xchg
jp
push
xchg
in
cmpsb
sub
lcall
cmp
stc
fyl2xp1
dec
and
inc
sub
mov
stos
sar
rclb
mov
std
ljmp
sub
mov
lahf
imul
inc
push
sub
jge
sub
movsb
faddl
and
mov
adc
sub
cmp
aad
fldt
nopl
cmpsb
data16
es
push
mov
jge
xor
xor
adc
cmp
mov
lahf
sub
loopne
addr16
xor
cmp
test
cwtl
addr16
cmpsl
push
jg
dec
int3
mov
sub
icebp
inc
inc
inc
xor
xlat
sub
or
cli
fstps
mov
shr
push
mov
mov
jbe
dec
cmpsl
pop
xlat
jo
mov
push
loopne
iret
add
icebp
xchg
sbb
dec
imul
inc
push
xchg
ret
xchg
push
mov
cltd
into
insb
inc
dec
mov
in
ss
stc
xor
scas
jg
mov
clc
bound
test
cld
repnz
cmpsb
mov
aaa
pop
jecxz
xsha1
cmpsb
into
or
rorl
repnz
mov
inc
mov
mov
loop
mov
sbb
movb
inc
adc
xor
cmp
and
in
stc
not
in
add
aas
or
push
and
sti
dec
notb
jno
shlb
push
enter
out
leave
pop
lahf
testl
gs
jbe
sub
adc
out
push
inc
sbb
cli
movntq
adc
clc
and
inc
cmp
add
int3
push
sbbb
fsub
iret
les
fld
dec
push
inc
jb
dec
popa
jmp
in
int3
in
or
xor
aaa
hlt
lea
dec
loop
test
push
push
pushf
scas
adc
pop
repnz
pop
jmp
in
pavgb
add
add
je
lret
dec
sbb
or
lret
push
push
jns
shlb
xor
add
sbb
sub
sub
in
xchg
popa
sub
and
and
cmpsl
stc
aam
mov
dec
sub
into
clc
in
pop
je
fldenv
ret
aas
mov
call
dec
cmc
enter
rep
add
adcb
and
pop
sub
fisubrl
mov
cmpsb
mov
mov
jnp
push
adc
cmp
sub
sahf
lock
das
pop
or
insb
ret
xor
fcompl
ja
test
mov
decl
lods
and
add
fptan
fwait
push
aaa
scas
leave
lds
xchg
je
mov
insl
ss
jnp
flds
fldt
lock
mov
lea
test
inc
push
cmc
adc
mov
subb
popa
repnz
test
mov
dec
nop
mov
scas
sub
imulb
mov
mov
lock
cmpsl
icebp
mov
jmp
subl
and
jp
sti
pop
pop
or
mov
mov
mov
mov
cmp
dec
or
data16
adc
cmpl
jnp
dec
cmpsl
mov
adc
pop
outsb
lods
jecxz
pop
clc
shl
cmp
mov
data16
js
fisubrs
and
xchg
icebp
icebp
xorb
xor
sub
cmc
add
scas
sbb
cmp
lahf
sahf
in
in
ss
inc
cmp
das
scas
xorl
or
shlb
cmp
add
adc
daa
dec
and
xchg
lahf
insl
insb
mov
and
data16
lcall
mov
inc
mov
jecxz
mov
int
lahf
in
dec
clc
lock
xchg
out
push
sbb
repz
ja
test
and
scas
sub
cmpsb
mov
fldcw
lahf
rclb
addr16
mov
lods
adc
aas
cmp
imul
lods
hlt
sarl
das
push
fdivrs
sbb
cwtl
loopne
bound
pop
incl
and
cmpsb
jmp
outsb
rol
xchg
add
adc
fcomps
dec
adc
and
inc
dec
jmp
into
jne
int3
ficoml
adc
rcrb
push
fstps
mov
and
mov
adc
xchg
mov
mov
pop
test
lcall
adc
adc
out
xchg
popa
inc
aaa
dec
add
rorl
pop
sbb
lds
cs
outsb
cmp
push
and
mov
rorl
fistps
es
lret
sbb
push
mov
dec
pop
inc
shrb
push
rcrl
aaa
stos
sarl
nop
orb
fldcw
repnz
popf
lret
jae
sbb
pop
call
xchg
stc
ficoml
es
mov
xchg
pop
cmpsb
pop
mov
sbb
cld
inc
lret
xorb
rorl
inc
outsl
mov
rcrb
cmp
sub
and
lahf
mov
pop
cmovno
sbb
inc
push
ss
ds
int
leave
pop
adc
popa
lods
jmp
fmuls
rorl
cwtl
mov
push
xchg
cmp
mov
xor
mov
loopne
inc
aad
adc
addr16
ss
in
rorl
xor
jnp
xor
inc
push
loope
cmp
divb
mov
in
loop
int3
incl
stos
std
inc
inc
mov
cwtl
into
jb
shll
jno
mov
pop
ss
gs
icebp
ss
loope
lods
cmp
stos
inc
mov
pop
push
leave
aad
adc
push
ficompl
push
mov
into
or
add
jne
xlat
fcoml
imul
add
add
hlt
bound
sbb
lret
scas
push
ret
mov
fs
iret
loopne
lea
lock
inc
imul
imul
pop
cmp
add
out
pop
lret
adc
push
sbb
jbe
dec
lahf
cmp
into
ss
jo
jecxz
inc
andb
addb
dec
in
sahf
add
mov
leave
cmp
dec
or
pop
pop
push
divl
adc
incb
cmpsb
in
push
pop
jne
mov
mov
sbb
stos
xor
dec
subb
out
xor
and
loop
inc
and
inc
and
cmp
mov
mov
or
aad
fdivr
mov
scas
xor
push
hlt
sub
jle
mov
and
fstl
mov
insl
xchg
test
mov
filds
or
out
jp
or
movsl
imul
sub
repnz
leave
inc
call
push
pop
xchg
daa
ret
sahf
push
jmp
jbe
inc
push
data16
and
dec
into
sbb
pop
arpl
push
cld
ret
cld
pop
repnz
mov
cmp
ja
das
aad
call
adcb
idiv
xchg
and
dec
jne
outsl
leave
shlb
les
mov
loop
inc
xor
repnz
sbb
pop
jp
fsubs
cvtps2pi
pushf
in
push
xor
xor
push
cmp
mov
bound
icebp
dec
cmp
adc
aad
sub
rcr
mov
sahf
xor
jecxz
jnp
xchg
cmpsl
cmpsb
std
cmp
jne
rorb
lods
pop
scas
scas
shl
jg
ficomps
jae
shr
cli
jge
xchg
daa
frstor
add
in
inc
int3
pop
cltd
ds
xlat
push
cmp
and
ret
or
in
clc
shl
push
scas
loopne
xor
lcall
ret
hlt
mov
loope
mov
push
je
loope
inc
push
push
out
enter
aas
adc
inc
push
out
xchg
shlb
mov
mov
scas
ret
and
je
xor
cmp
imul
adc
mov
es
insb
jp
outsl
pop
dec
aam
mov
sub
push
es
shrl
push
aas
or
mov
mov
push
cmc
pop
sub
jmp
xor
out
and
push
cli
daa
push
test
fldt
pop
inc
pop
cld
lret
fyl2x
jle
sti
fisttpll
into
out
sarb
push
ljmp
lds
cli
mov
inc
movsl
inc
add
mov
add
pop
push
je
inc
mov
jmp
cs
mov
jne
sub
push
xor
add
lret
pop
pusha
mov
lcall
out
push
movsl
and
sbb
push
jbe
sbb
sub
clc
pop
subb
repz
cmpsl
xor
orb
mov
addb
leave
iret
sub
cmp
sub
fimuls
xchg
mov
or
or
and
jle
ja
push
shlb
sub
or
push
mov
push
push
dec
mov
push
test
mov
ljmp
pop
push
sub
sti
push
push
fdivr
addr16
jnp
in
push
ds
or
mov
push
gs
xchg
negb
jbe
mov
sbb
mov
push
sbb
pop
xchg
dec
test
mov
aaa
mov
push
push
mov
add
stos
ds
fists
cmp
fstl
shl
lock
sar
lock
adc
es
mov
in
mov
jecxz
push
pushf
sbb
imul
test
xorb
fs
stos
adc
sub
lret
jg
xchg
jmp
sbb
aaa
fistpl
inc
test
scas
jno
add
inc
lods
call
ljmp
or
dec
or
sbb
rcrl
inc
jae
repnz
arpl
push
stos
adc
mov
lds
cld
xor
adc
push
adc
rcrb
inc
jno
ljmp
add
or
lock
and
scas
mov
aas
aad
adc
test
or
das
rcrb
cmp
lock
pop
cmpsb
sti
addr16
sti
inc
cld
addl
dec
and
andb
sti
sbb
push
roll
fsub
cmp
pop
lcall
dec
fcoms
sub
data16
mov
push
push
in
es
and
xchg
xchg
in
cmp
ret
cmp
fwait
inc
fistl
jmp
repnz
stc
push
jae
test
sub
les
push
insl
or
mov
ds
dec
outsb
xchg
add
movsl
ds
ret
cmp
pop
insl
out
xchg
lcall
gs
outsb
cmp
outsb
rolb
lds
iret
mov
jae
inc
pop
sahf
add
mov
mov
adc
ret
jae
ficoms
lods
push
or
into
js
daa
pop
cs
test
fnstenv
dec
pop
xchg
idivl
scas
mov
jns
jb
insb
rcrl
cmp
lods
movsl
cmp
shll
or
add
pusha
scas
js,pn
lret
cmpl
sbb
test
popf
mov
pop
fildll
scas
cmp
mov
lret
push
repnz
sub
jmp
dec
fdivs
sahf
jnp
sub
shl
cs
xlat
dec
pop
fisttpll
fcomps
movsb
sub
push
xchg
xchg
inc
inc
inc
mov
add
cmp
mov
decb
mov
testl
xorb
pop
lods
mov
fistpll
xchg
mov
add
aad
mov
or
js
sbb
icebp
sbb
movsb
push
and
dec
sub
adc
hlt
loopne
rorl
movsl
mov
xchg
stos
cmc
repz
or
ss
xchg
inc
xchg
stc
repz
push
mov
inc
ds
outsb
push
lods
sti
fsubl
xor
xlat
adc
dec
jge
popf
repnz
xor
fidivrl
sub
loopne
mov
mov
gs
adc
add
lods
inc
enter
fstps
dec
pop
nop/reserved
mov
jbe
in
hlt
scas
mov
jge
sahf
gs
push
rcll
mov
or
faddl
jbe
dec
add
cs
xlat
pop
xchg
sbb
in
inc
or
push
add
lret
bound
xor
scas
push
mov
adc
push
pop
xchg
rorl
inc
adc
inc
sti
add
add
inc
push
les
jle
test
in
lahf
dec
ds
rcr
ljmp
mov
mov
sub
inc
lahf
adc
jmp
jp
outsb
push
xor
out
and
cmp
jns
jno
stos
push
inc
pop
call
arpl
xchg
xor
ss
push
cli
sbb
push
stos
mov
lods
xlat
pop
repnz
xchg
repnz
daa
jae
xchg
dec
add
cmp
and
mov
cs
jle
lcall
mov
jp
cmp
inc
fstpl
stos
cmp
xor
int
push
ds
ljmp
fldenv
cmp
pushw
sub
pop
and
push
dec
xchg
dec
leave
subb
jge
inc
fxch
pop
push
clc
jecxz
cmp
clc
sbb
stc
outsb
push
out
out
inc
fsubl
inc
sbb
fcmovne
adc
add
mov
roll
arpl
jl
fldln2
cvtdq2ps
ficoms
ret
pusha
jbe
enter
in
mov
bound
dec
inc
dec
push
ret
fst
adc
cmpl
or
mov
xor
insl
in
or
in
sbb
test
fs
jb
cmpsl
dec
dec
sti
inc
sti
push
mov
add
cmpl
ret
xchg
iret
and
xchg
jbe
repnz
ret
enter
scas
aas
cmp
sub
push
and
mov
adc
push
mov
data16
ret
jmp
sub
fiadds
ror
rol
rcr
invd
ds
or
test
cmp
ficoml
pop
aad
nop
push
jecxz
shl
adc
clc
jle
ljmp
repnz
das
push
cmp
dec
dec
fsubrs
jle
adc
cli
mov
xchg
sbb
stos
test
ss
fsts
mov
sub
jne
xlat
cmp
shll
ds
jnp
lcall
sbb
xchg
push
daa
movsb
roll
sbb
outsb
jb
xor
mov
xchg
mov
add
dec
insl
mov
jmp
cmp
fstps
in
notb
push
cmp
inc
sub
ds
mov
repz
les
lret
aas
jge
leave
adcb
xor
mov
movhps
pop
jle
scas
jge
hlt
shlb
sti
imul
in
addb
hlt
dec
xor
jp
cli
inc
dec
daa
cmp
shll
repz
int3
popf
xchg
and
push
mov
test
sbb
sbb
xchg
mov
push
push
cmc
inc
es
jle
out
enter
mov
jno
scas
dec
cli
paddsb
pop
or
xchg
push
roll
stos
aaa
xor
sti
cmp
pop
call
bound
mov
test
ss
fldcw
shll
test
jle
cmp
push
push
lahf
jbe
sbb
ds
add
rcrb
lea
hlt
dec
xor
dec
bound
inc
aaa
test
and
sbb
push
mov
pop
lds
pop
push
mov
dec
imul
push
cmp
add
xor
cs
inc
xchg
jmp
and
lock
push
cltd
in
xchg
xchg
les
sub
cmp
jnp
jae
loopne
stos
or
sahf
cs
in
inc
rcll
jns
and
test
fisubs
or
mov
js
inc
dec
push
push
pop
out
pop
sbbb
mov
pop
or
xor
fsubrs
or
out
lds
push
push
test
and
sbb
bound
and
outsl
pushf
sub
push
lahf
das
cmp
jp
ss
popa
cmp
jecxz
ds
test
jae
add
sub
pop
shll
and
ds
dec
pop
lods
jno
shr
adc
mov
fisttpll
rolb
fisubs
sub
dec
add
shlb
push
cli
push
jmp
fiaddl
dec
dec
nop
push
cmp
cmpsb
cmp
fmull
fcomps
xor
iret
xor
cltd
jle
loope
xchg
inc
pop
sbb
add
fiadds
lret
fnstenv
mov
inc
cltd
fisttpll
les
push
clc
aam
cmp
adc
int3
sbb
daa
scas
push
push
jns
gs
xchg
sub
aas
xchg
inc
test
push
mov
inc
fldl
je
dec
adc
rol
push
and
mov
jmp
add
mov
or
inc
scas
inc
rorb
dec
push
ljmp
pushf
adc
or
ds
jp
icebp
int
jbe
sub
push
shl
loope
push
popa
add
notb
pop
pop
cmp
mov
int3
mov
inc
mov
add
push
xor
sarl
jno
adc
and
xchg
and
in
rolb
cld
or
sub
or
inc
ja
xchg
inc
pop
std
pop
sbb
insl
dec
div
into
push
bound
adc
or
xor
ds
outsl
je
into
xchg
xchg
xchg
or
xchg
sub
ret
fdivs
testl
push
push
cmp
adc
mov
jecxz
sub
aam
dec
and
and
mov
xor
in
jp,pn
jns
push
out
mov
fildl
inc
inc
addb
cmp
and
fcmovbe
xor
jb
clc
rcr
add
mov
pop
addr16
push
jo
push
inc
rorb
ds
pop
repnz
sbb
subl
pusha
and
mov
adc
inc
in
sbb
repnz
repnz
cwtl
xchg
push
push
fcmovnb
push
cmp
mov
pusha
dec
fxch
sub
add
je
loop
push
add
bound
call
aaa
xor
xchg
daa
das
into
or
pop
lret
mov
loop
add
adc
jp
sti
mov
mov
fs
mov
shlb
xor
es
pop
std
mov
std
std
jmp
cs
call
pop
int3
ret
testb
adc
in
push
leave
xchg
push
pop
mov
cmp
xchg
addr16
fs
aas
and
dec
je
cmp
shl
mov
lret
jno
inc
nop
mov
sbb
jbe
mov
xor
mov
cmpsb
push
leave
loope
xchg
add
jmp
mov
popa
mov
cmp
xor
mov
lock
mov
loop
xor
inc
fxch
jmp
insl
mull
hlt
cmp
sbb
mov
testl
pop
cmp
jp
sub
mov
sub
xchg
mov
nop
sub
ret
fidivl
test
push
and
adc
jg
movsb
and
xchg
xchg
mov
fstpl
scas
sti
jp
arpl
push
test
std
rol
int3
addr16
jle
lahf
push
and
xor
stos
into
jg
arpl
cmpxchg
mov
jge
ja
je
sbb
aad
outsb
testb
lahf
xor
lret
xlat
mov
xchg
es
mov
fwait
movsl
hlt
insb
pop
or
test
sub
movd
stos
inc
add
xor
inc
call
sti
cwtl
push
xchg
loope
pop
inc
fstpt
xor
outsb
push
icebp
mov
icebp
sbb
pop
shlb
inc
lea
test
add
popf
hlt
push
repz
push
xchg
lods
faddp
mov
cmc
aam
xchg
clc
jmp
ss
ss
add
arpl
jp
fbld
stos
out
add
mov
addr16
pop
stos
ljmp
mov
push
xor
out
xor
dec
aam
xor
sbb
mov
dec
roll
and
cmp
jle
sbb
es
subps
outsl
adc
in
cmp
mov
jle
pop
dec
xchg
pushf
movsb
cmp
bound
out
mov
xchg
fists
jle
mov
push
insl
pop
push
mov
xor
jp
jg
leave
popf
aam
xor
pop
ss
push
in
fmull
sub
nop
xchg
pop
xor
add
pop
pop
xchg
or
sub
push
xor
aad
pop
xchg
leave
mov
lret
xlat
push
cmp
scas
js
leave
or
xor
pusha
cmpsb
pop
sub
mov
adc
mov
adc
mov
dec
or
insb
cmpsb
lds
out
xor
xchg
fidivl
cli
or
push
inc
testb
cmp
xor
sbb
push
das
push
jns
sub
push
ficoms
mov
pop
leave
xor
sahf
mov
dec
dec
mov
sub
mov
xchg
cwtl
xor
lods
data16
dec
push
pop
dec
push
movsl
mov
outsb
sub
lods
dec
bnd
mov
pop
add
negl
mov
aad
bnd
inc
clc
gs
imul
lret
out
dec
xchg
jae
mov
pop
pop
lahf
rorl
mov
das
es
inc
dec
jp
rcrb
cltd
ret
xchg
sub
adc
add
stos
jg
data16
out
leave
les
push
add
test
adc
arpl
pop
repnz
js
or
pop
fisubl
xor
dec
adc
cmp
cmpsb
aas
leave
movsb
clc
fwait
enter
inc
cli
jns
push
or
push
push
push
call
dec
fcomip
idivb
pop
adc
inc
push
out
and
jmp
adc
push
mov
xor
js
cmp
lods
test
mov
lahf
sti
ret
xchg
dec
subb
mov
leave
jbe
cmp
shll
stc
pop
mov
add
push
pop
jmp
push
cmp
jbe
push
jae
add
into
xlat
icebp
cs
sub
inc
lods
and
inc
dec
cmp
sbb
std
test
dec
sbb
xchg
insb
shll
bswap
xchg
jmp
inc
push
push
inc
cmp
mov
sar
dec
jbe
dec
push
rolb
mov
sbb
push
pop
inc
jne
leave
mov
repz
clc
cmp
adcb
dec
xchg
mov
lods
xchg
cwtl
xchg
pop
adc
cli
pop
test
cmp
pop
cld
stos
push
cltd
push
scas
adc
jle
cmp
push
mov
fincstp
mov
push
repnz
or
push
sub
out
pop
rcrl
mov
dec
test
dec
and
insb
ds
inc
inc
clc
dec
test
push
fs
ja
dec
int3
loopne
xchg
mov
rclb
pop
ljmp
inc
inc
pop
or
push
adcb
pop
pushf
xorl
pusha
lahf
pop
jno
push
lret
ljmp
and
mov
sbb
inc
je
lahf
clc
jne
out
popf
ljmp
or
sub
sub
add
sbb
adcl
pop
sbb
ljmp
inc
les
leave
fildl
leave
cli
aad
cmp
mul
sub
das
push
inc
stos
add
cmp
lahf
popf
arpl
xchg
push
pop
mov
add
les
leave
and
ja
pop
cli
in
filds
cmp
sbb
es
and
jns
lret
xchg
lret
fucom
pop
test
jecxz
subb
pushf
cmc
dec
jl
test
push
cmp
push
inc
dec
cmp
imul
mov
sbb
jns
shlb
gs
jg
inc
inc
ss
or
push
mov
rcl
xor
test
inc
das
call
inc
outsb
shr
jo
lahf
aam
out
and
push
xor
pop
pop
adcl
mov
sub
leave
test
pop
xlat
aad
sbb
dec
mov
cmc
push
xchg
scas
push
sub
cmp
test
pop
leave
dec
test
sbb
daa
mov
mov
in
shrl
fmuls
mov
cmp
or
adc
repnz
dec
mov
xchg
xchg
lahf
dec
mov
dec
movsl
cltd
fbstp
push
scas
jae
arpl
mov
mov
ret
shlb
test
sbb
cmp
xorb
pop
js
dec
leave
dec
jmp
cmpsb
xlat
push
in
xchg
and
stc
push
in
div
test
cmp
push
xchg
jecxz
pop
leave
push
adc
ror
aad
mov
cmp
test
test
cmp
ret
and
mov
xchg
dec
mov
scas
sub
mov
lret
mov
xor
dec
fldt
cli
push
push
jmp
and
dec
add
mov
mov
cld
xor
das
pop
mov
jmp
ljmp
sub
mov
pusha
in
lcall
pop
enter
dec
add
inc
cmp
cmpsb
dec
pop
shlb
imul
loop
jecxz
movsl
inc
inc
pop
jnp
jl
and
addr16
fcompl
inc
push
stc
or
aad
mov
push
xor
push
sbb
dec
dec
xchg
xor
rolb
leave
push
pop
cmp
sbb
out
mov
fmull
cmp
fucomip
scas
ljmp
out
scas
jle
andb
jg
lods
pop
enter
ds
jle
mov
outsb
pop
mov
sbb
inc
lods
push
push
push
mov
mov
enter
mov
xor
stos
lret
imul
jle
xchg
dec
aaa
repz
jle
pop
dec
adcb
lret
ror
mov
xchg
pop
lea
xlat
inc
stc
dec
xchg
mov
stos
xchg
subl
mov
enter
cmp
xlat
xor
and
cwtl
jae
xchg
test
and
xchg
sbb
cltd
mov
outsb
addr16
clc
push
xchg
dec
add
dec
in
and
add
shrb
je
dec
mov
dec
ficoml
pop
js
fisubrl
cmp
cmpsb
mov
gs
jbe
iret
push
push
and
ss
jno
pop
mov
shll
xor
les
ficoml
inc
sbb
pop
jge
jb
dec
das
mov
push
pop
push
stc
jnp
sbb
jle
popa
test
cli
sbb
into
jne
dec
inc
sub
test
mov
and
aad
mov
pop
push
push
pop
jge
and
fsubrs
test
dec
int
push
jge
xlat
nop
insb
das
repnz
inc
add
or
leave
sarl
or
sbb
sbb
out
xchg
pop
mov
mov
jecxz
cmp
pop
into
mov
pop
ljmp
xor
loope
xchg
aas
xchg
not
jle
mov
jnp
xchg
scas
push
xchg
dec
xchg
sub
imul
repnz
aas
shl
adc
fnstcw
sbb
pop
inc
add
add
push
lea
std
idivb
mov
mov
shl
in
test
outsb
mov
leave
cs
scas
idiv
test
adc
jae
rclb
daa
scas
push
call
pop
jns
sbb
push
cmp
testb
mov
dec
mov
addl
mov
dec
in
mov
pop
shlb
or
inc
pop
and
inc
aad
popf
mov
int3
inc
push
mov
int
out
out
lcall
jb
shll
clc
lret
loope
cmp
cmp
ds
scas
inc
inc
mov
adcb
inc
loop
gs
jl
loop
jmp
iret
lea
cli
cld
push
mov
or
sbb
inc
inc
lods
fisubl
xchg
sub
mov
mov
dec
mov
dec
mov
sub
rolb
add
int
lret
push
or
ss
push
sub
fisubrs
fiadds
fwait
push
inc
std
sbb
pop
mov
int3
sbb
mov
lret
push
inc
ret
fsubp
push
ss
xchg
sub
imul
sahf
lods
mov
dec
mov
xchg
pop
mov
mov
jle
out
scas
jl
lea
mov
and
jns
test
outsb
sub
imul
fsubs
jns
adc
push
nop
into
mov
pop
movsl
sbb
into
lcall
pop
lret
add
jmp
or
pop
cli
dec
test
fidivs
cmp
pushf
adcl
dec
fnsave
out
jns
jmp
ficoml
xor
push
cli
aad
js
fisttps
pop
adc
mov
mov
adcb
fisttps
jl
outsl
cmp
cmp
pop
loop
jb
aad
insl
fwait
mov
push
inc
mov
dec
shl
fcomps
in
jl
leave
sub
sbb
cmp
add
ja
sub
add
mov
mov
push
inc
enter
out
pop
xchg
jne
xor
xchg
xchg
lods
cmp
add
sub
push
pop
cmp
dec
mov
rorl
aaa
fidivrl
xchg
mov
xor
cmp
jmp
fs
movsb
push
fstl
std
stc
repnz
cmc
out
mov
repz
lahf
inc
or
dec
andl
jbe
xchg
test
adcl
faddp
mov
pop
daa
outsb
js
mov
es
pop
dec
cltd
inc
jg
push
lcall
xor
stc
aad
adc
mov
rolb
dec
xchg
test
aad
cmp
mov
lret
int
fsub
js
pxor
xchg
jae
ss
jbe
sbb
sti
sbb
sub
out
fsubl
and
out
sub
jmp
pop
pop
add
mov
mov
test
dec
dec
js
push
jbe
adc
adc
push
iret
pop
sub
pop
push
mov
xor
shl
dec
inc
dec
in
cmp
inc
push
jns
ja
and
scas
lock
fnsave
dec
or
mov
pop
add
push
jbe
sbb
mov
mov
fcmove
cld
and
push
push
je
pop
pop
adc
dec
mov
lock
cli
xor
outsb
test
stc
push
jl
mov
mov
leave
xor
ror
lea
imul
or
lods
or
das
push
stc
dec
bound
push
je
mov
adc
cmp
fcompl
and
push
sbb
cwtl
ds
sahf
push
jg
cltd
ljmp
mov
push
mov
mov
push
or
cmp
fnstsw
inc
imul
popf
inc
cwtl
or
jb
gs
testb
cld
cmp
cmc
inc
xchg
or
movl
dec
mov
xchg
pop
inc
push
dec
xchg
sub
xchg
inc
shrl
push
jb
xchg
fiaddl
orl
icebp
scas
scas
xor
test
movsl
add
push
flds
or
mov
pop
jno
popf
inc
mov
call
lods
cmc
xchg
in
inc
sbb
or
outsl
add
idiv
jno
stc
inc
mov
icebp
xchg
insb
stc
inc
add
push
mov
cmc
insb
decl
inc
mov
sti
adc
mov
lds
ss
pop
repnz
or
inc
xor
in
jb
sbb
sti
jb
cmp
clc
jno
or
outsl
push
mov
xchg
popf
inc
push
shll
xchg
outsl
loopne
jae
inc
divl
das
in
lahf
inc
sbb
das
cmc
sahf
lahf
lds
xchg
push
das
adc
sub
das
mov
lahf
mov
xchg
jae
lods
cmp
cs
jae
xchg
cmp
subb
jae
pop
cmp
lahf
push
fistl
sbb
lcall
and
ds
daa
xchg
out
clc
pop
insb
push
push
insb
add
das
insl
cmp
push
daa
mov
daa
ds
stc
adc
push
ja
popa
lret
mov
aad
cmp
addr16
push
cmc
fmull
mov
fldcw
adc
idivl
cli
adc
sub
mov
push
pop
addr16
push
jnp
out
inc
fwait
dec
xor
sbb
add
mov
and
and
call
add
stos
gs
shlb
fdiv
sarb
sahf
out
js
jg
fildl
aas
dec
cmp
cmp
dec
arpl
lock
in
mov
pop
dec
and
cmc
and
push
sahf
xor
sbb
sub
add
cmpb
test
push
aaa
dec
mov
xor
or
in
sbb
push
and
and
icebp
in
ret
mov
xor
jno
xchg
dec
ficoml
lret
xchg
cs
mov
dec
cli
negl
lret
push
fs
negl
jle
and
lret
xor
jb
lcall
push
jle
mov
or
cs
insb
dec
repnz
rcr
das
test
or
xor
pop
pop
add
in
lea
push
push
xor
ficompl
repnz
jo
sub
std
push
icebp
dec
jmp
push
sub
mov
icebp
push
stos
xchg
fld
ds
clc
sbb
sbb
inc
mov
xor
or
je
push
std
mov
sbb
add
xchg
fdiv
jp
dec
ficoms
leave
rorl
popf
bound
or
dec
adc
data16
xchg
push
outsl
add
push
inc
jbe
insl
inc
cld
jge
dec
pop
cltd
or
call
xor
xchg
xor
stc
dec
jo
xor
dec
inc
cld
pop
or
pop
jns
rolb
add
je
jmp
adc
imul
pop
push
loop
jns
mov
push
scas
cmc
mov
ror
jmp
test
sahf
xor
in
ret
mov
fidivl
xchg
mov
in
outsb
lea
pop
fstps
into
dec
push
inc
sub
xlat
push
std
rcll
in
loope
ds
push
pop
lahf
lea
sub
aaa
scas
xor
arpl
xchg
push
mov
lahf
inc
xor
data16
cmpsl
sahf
sub
shlb
enter
or
popf
xor
cld
jbe
popa
out
loop
mov
mov
add
pop
js
add
jecxz
sahf
or
scas
sbb
subb
inc
test
inc
call
insl
pop
dec
pop
jle
std
inc
and
jg
jno
loopne
lea
mov
into
pop
inc
push
mov
push
xchg
pusha
cs
notb
daa
push
push
or
inc
mov
and
es
ja
repnz
and
outsb
inc
decb
pop
clc
add
or
pop
xor
lds
push
jnp
jae
dec
es
ds
popf
daa
aam
add
adc
fs
std
xchg
sbb
inc
lcall
mov
addr16
xchg
dec
rclb
jne
xchg
sarl
or
push
mov
sub
ret
out
ljmp
outsl
and
cmp
aam
pop
mov
fidivl
neg
sahf
out
push
pop
hlt
jne,pt
sub
pop
cmp
stc
sub
dec
cli
out
stos
inc
sarb
jnp
push
addr16
popf
pop
mov
xchg
adc
subl
ja
jnp
pop
mov
or
mov
idivb
inc
pop
sub
stc
dec
cmp
je
inc
insl
lds
fcoml
mov
in
mov
loop
fs
je
lahf
in
xor
jmp
xchg
js
jno
and
or
add
inc
gs
sub
add
out
stos
mov
push
mov
leave
pop
adc
mov
jne
xchg
lock
test
int3
iret
mov
notb
or
pop
sbbb
xor
daa
xchg
loop
cmp
push
ds
xor
xor
imul
inc
jb
cmp
cmpsl
push
fsubr
mov
frstor
mov
sbbb
jno
and
out
or
fiaddl
cmp
jno
add
add
dec
fcmovbe
push
push
xchg
sub
mov
fdivl
pop
adc
cmp
xchg
sub
sti
cmp
jno
jp
add
je
adc
jmp
outsl
div
enter
push
jge
stos
movb
loope
addr16
pushw
stos
xor
mov
imul
lret
sub
jmp
xor
add
in
inc
add
cmp
jmp
jecxz
mov
popa
lahf
scas
push
andb
je
movsb
adcb
nop
cmpsl
pop
jmp
push
jmp
leave
jns
nopl
jbe
xchg
pop
xchg
fwait
xchg
pop
push
inc
dec
xchg
sbb
cmp
dec
insl
ljmp
sahf
aaa
xor
addr16
stos
cli
add
jle
sbb
or
aad
sbb
jl
push
clc
ds
pop
cmp
insb
std
daa
scas
pop
or
push
fiaddl
jg
je
sbb
into
dec
popa
sbb
xchg
sbb
arpl
add
push
mov
cwtl
xlat
imul
add
pop
push
stos
adc
sbb
xchg
add
adc
adc
test
xchg
mov
aaa
stos
inc
sbb
mov
pop
pop
mov
inc
sar
jmp
lret
insb
cmp
jb
iret
push
sbb
add
push
or
testl
out
xlat
fbstp
jge
mov
test
test
inc
orl
dec
imul
daa
filds
js
subb
adc
xor
pop
bnd
inc
inc
mov
dec
cld
add
ljmp
push
jns
sarl
push
int
push
fstps
xchg
inc
dec
adcb
jp
lret
dec
and
loope
ds
inc
mov
aas
and
mov
push
cmp
mov
mov
dec
hlt
call
stos
test
cs
decl
in
xchg
sbb
mov
xor
dec
sbb
les
mov
aam
popf
int3
or
negb
ja
inc
shlb
test
cmp
or
sub
mov
cmpsl
add
je
fdivs
test
insb
mov
mov
rep
test
mov
imul
sbb
cmp
pop
mov
movsl
pushf
xor
xchg
lret
sarl
xor
pop
xor
call
push
sarl
aaa
xchg
std
cld
ja
cmc
push
push
jne
inc
jb
xchg
push
push
jge
orl
sub
or
fisubs
or
ret
mov
add
imulb
out
push
jbe
das
les
fstl
adcl
jbe
sbb
clc
jb
or
sub
les
jmp
or
adc
fsubs
iret
lock
pushf
xchg
jmp
daa
daa
mov
dec
mov
stc
push
sub
xchg
cmpsb
imul
lods
fld
scas
cld
daa
and
mov
xchg
out
mov
dec
or
mov
sbb
mov
add
sbb
cmp
in
add
mov
xchg
push
push
lahf
test
adc
xchg
ja
xor
xor
and
mov
push
mov
mov
xchg
loope
inc
out
mov
subl
imulb
les
lcall
xorb
dec
scas
xor
sub
test
cmp
adc
jle
pushf
jo
lret
and
repnz
and
xchg
call
into
xchg
cmp
pop
cmpsb
mov
mov
cld
jle
cmpb
aas
xorb
rcll
jbe
mov
lock
lret
inc
add
popf
or
lahf
test
pop
inc
lods
shr
xor
sbb
add
mov
loop
pop
aas
add
fdiv
dec
cmp
inc
jb
add
rcll
aam
test
aad
pop
jbe
xor
out
jg
nop
xor
fists
xchg
sbb
pop
lcall
inc
pop
sbb
iret
out
xchg
out
int3
pop
in
or
jne
pop
xchg
sub
sub
mov
or
mov
sbb
fsts
sbb
and
icebp
dec
sbb
add
mov
das
pop
cmc
fldenv
sub
sbb
and
adc
dec
sysret
fadds
add
stos
push
inc
decl
iret
rcrb
inc
mov
jb
inc
xor
fdivrs
jecxz
jo
fstpl
aas
jg
jno
push
add
dec
sbb
add
adc
inc
add
mov
out
push
clc
inc
mov
mov
fst
daa
sbb
push
es
push
lds
cli
push
ss
in
push
es
and
int3
divb
into
sti
fxam
out
mov
adc
int
adc
mov
jle
push
sub
fldcw
or
xor
sbb
adc
add
int
pop
add
fnstcw
repnz
imull
xor
lods
test
pop
ja
ljmp
test
sahf
adc
shr
cwtl
inc
leave
outsb
adc
sbb
shll
sbb
jno
fstl
cmpsb
loop
inc
fcmovnbe
mov
ret
lret
pop
or
push
cmp
mov
xor
sbb
pusha
test
sbb
mov
into
enter
mov
jle
push
aas
dec
inc
ds
add
sahf
adc
out
push
inc
sbb
sbb
lret
inc
das
push
imull
lds
adc
jbe
sbb
je
pop
xlat
inc
test
inc
mov
into
rolb
ficoms
jp
nop
add
xor
adc
das
pop
push
xor
cmp
movsb
pop
rcl
mov
jno
aam
seto
xlat
push
lods
and
fisubl
aaa
test
sbb
jnp
aam
psadbw
stc
and
stc
cmp
pop
js
pop
clc
ss
in
xchg
xchg
loope
out
mov
inc
setne
pusha
xchg
das
adc
addl
inc
xchg
xor
xor
popa
jl
inc
data16
jns
mov
daa
inc
pop
fcomps
test
int
mov
mov
jmp
inc
pop
cmp
int3
add
lcall
repz
mov
int3
enter
mov
xchg
pop
or
xor
cmp
nop
lds
push
push
sbbb
adc
xchg
pop
insl
ret
inc
fcomps
mov
push
cmc
mov
dec
xchg
mov
in
jns
and
outsb
add
aam
outsl
push
sub
movsb
fsubrl
std
inc
ljmp
sub
divb
js
push
mov
mov
in
sbb
jle
mulb
loopne
pop
sub
testb
test
test
and
mov
sbb
icebp
lds
mov
sahf
dec
in
inc
jp
pop
aad
mov
push
incb
in
or
xchg
push
and
xor
sbb
data16
fstps
icebp
pop
imul
ffreep
pop
test
mov
xchg
je
adc
pop
ljmp
jge
insb
pop
pop
cld
or
mov
pop
push
popf
push
or
add
gs
mov
clc
aas
lret
addr16
mov
in
sahf
pop
lds
xchg
push
out
adc
pop
ret
add
push
push
fs
sarl
pop
push
iret
dec
dec
xchg
std
mov
enter
testb
add
jb
dec
mov
pop
jnp
popf
xor
call
pop
repnz
cmp
stc
in
xchg
inc
sbb
or
sahf
popa
lds
xchg
push
dec
adc
jbe
sub
jecxz
sbb
xor
in
push
sub
jp
pop
push
push
push
jnp
sub
jge
mov
or
shr
jle
es
ljmp
inc
jmp
adc
push
jb
in
jmp
stc
xchg
mov
mov
es
jg
test
adc
es
aaa
inc
test
mov
xorl
pop
adc
sahf
inc
orb
jle
inc
fdivrl
insb
and
pop
iret
loope
ds
testl
pop
ret
sbb
or
or
xor
ja
in
rol
mov
push
and
jo
sbb
cmp
sbb
sub
mov
pop
imul
mov
dec
jle
sub
mov
stc
stos
js
cmpsl
mov
add
and
mov
popf
lret
cmp
add
sbb
inc
sbb
std
jns
mov
mov
push
out
in
push
xchg
cmp
ret
lahf
dec
fnstsw
into
jbe
mov
adc
andb
pop
push
iret
cld
add
and
add
inc
jb
pop
fidivs
lret
and
add
jns
jle
or
fisubs
and
xor
stos
jne
cmp
decw
outsb
lods
aas
add
cmp
inc
mov
insb
or
insl
sub
cmpsb
push
sbb
loope
cs
mov
idivb
push
fcmovb
cli
dec
lea
xor
insb
xchg
push
cmp
pop
push
sbb
arpl
add
cs
mov
cmpsl
pop
in
sbb
je
inc
lret
mov
dec
jb
cmp
outsl
jne
mov
divb
icebp
jecxz
and
clc
dec
jae
popa
push
sahf
and
gs
xor
add
or
insl
loopne,pn
push
das
out
sub
inc
xor
arpl
inc
inc
nop
jo
cmp
mov
cli
gs
lret
arpl
sub
xor
and
imul
fwait
push
and
pop
mov
fidivs
cmp
repnz
sbb
xor
xor
mov
push
scas
mov
push
or
sbb
jns
inc
nop
sbb
xchg
mov
xchg
xor
sub
repz
xchg
jp
mov
ljmp
add
xchg
or
das
inc
mov
call
mov
mov
sbb
popf
mov
mov
jg
cs
sbb
mov
xor
cmp
inc
lds
cmp
leave
das
push
push
lods
mov
loopne
loop
decb
and
ret
and
cmp
fildll
repnz
cmpsl
mov
fbld
cmp
in
or
sub
jnp
ss
and
insl
dec
xchg
dec
sbb
mov
icebp
dec
and
dec
pop
inc
mov
push
xlat
aaa
lods
std
mov
fbstp
ret
or
out
mov
xor
cld
and
push
sub
lret
orl
fistps
push
mov
xchg
sub
push
sbb
pusha
jg
test
imul
andl
sbb
xor
cmp
sub
sbb
inc
cmp
aaa
or
add
mov
pop
mov
dec
dec
cmp
insl
pop
sbb
pusha
stos
lds
call
stc
mov
adc
pop
cwtl
stos
loopne
sti
test
icebp
mov
lock
adc
idiv
ljmp
daa
add
fsubrs
and
xor
mov
stos
cmp
lods
lcall
je
call
sbb
sbb
lahf
nop
mov
fcomps
mov
or
jmp
movsb
arpl
xlat
dec
sub
jns
inc
add
stos
and
cmp
mov
mov
in
ds
xor
out
cmp
dec
cmp
stos
or
add
push
sbbl
jnp
das
stos
mov
out
inc
inc
sub
ljmp
loop
outsl
lods
shrl
fcmovne
xlat
xchg
sbb
add
sarb
push
mov
dec
push
or
sbb
adc
ret
jnp
mov
pop
dec
in
or
iret
push
jmp
dec
ja
pop
fcompp
jge,pn
lcall
jmp
loop
add
ja
mov
inc
leave
adc
loopne
mov
mov
cli
cmpsl
movsb
subb
fidivrl
aas
sub
sub
adc
outsl
ljmp
push
cmpsb
in
dec
cmp
xchg
push
pusha
lods
stos
gs
lods
push
loope
lods
mov
dec
xchg
mov
subl
mov
jp
shlb
or
pop
daa
test
cmp
push
jmp
push
jl
pop
sub
or
icebp
and
mov
sub
push
add
pop
pop
test
arpl
rcll
aas
pop
sbb
push
xchg
dec
inc
sqrtps
out
sub
ss
xchg
loop
or
jge
es
adc
xor
sbb
or
add
jb
in
inc
je
pop
jge
xor
inc
or
mov
jg
lret
xor
test
pop
xor
sub
or
in
mov
popf
and
jmp
and
int3
xchg
or
inc
cmp
mov
adc
pop
std
pop
mov
xchg
adc
sub
sbb
fmuls
jnp
cmp
xor
cmp
mov
mov
imul
inc
insb
pop
mov
and
repz
xor
xchg
sbb
lds
jbe
std
out
cmp
xchg
jne
daa
ss
sbb
es
daa
shlb
fldenv
cmovb
std
je
inc
dec
jge
and
push
mov
push
pop
cmp
add
cmp
push
loopne
repz
jns
inc
add
je
cmp
aaa
pop
shll
add
pop
pop
test
inc
pushf
and
call
shrb
sub
leave
stos
negl
fs
dec
in
cmp
jo
lea
outsb
and
cmpsb
dec
xchg
lock
aaa
shll
mov
insb
adc
inc
mov
inc
mov
cmp
push
sahf
sbbl
adc
divb
inc
cmp
inc
add
out
stos
es
mov
jp
push
cld
inc
cmp
aaa
ret
iret
jne
sub
insl
xor
das
lcall
clc
stos
push
test
iret
adc
fdivs
lods
cltd
fstpt
dec
test
push
mov
dec
push
pop
int3
test
out
lea
xchg
inc
mov
pop
push
pop
fmuls
pop
pop
adc
push
jp
inc
loop
pop
pop
fwait
ret
mov
fidivrs
fdivp
out
push
mov
adc
std
sarb
testb
leave
daa
dec
nop
push
and
adcb
pop
mov
pop
jo
pop
dec
popa
scas
inc
inc
push
cmp
dec
loopne
xchg
stos
pop
cmp
std
dec
and
mov
mov
popa
pop
jge
scas
daa
pop
ss
mov
ds
push
test
popa
push
sbb
int3
inc
in
push
cmpsl
and
sahf
cld
pop
and
sub
lret
cmpsl
jae
popa
jo
in
dec
icebp
stos
fdivs
jno
iret
ret
ds
xchg
repnz
pop
lret
filds
jmp
xor
jmp
mov
es
iret
fistpll
inc
push
adc
lret
mov
push
pop
xchg
loope
push
xor
push
aaa
xor
push
stos
jge
xlat
pop
ret
test
mov
jnp
cmp
lods
pop
ds
mov
inc
enter
pushl
pop
mov
push
push
pop
imul
in
mov
rol
subb
jge
or
push
or
sub
sbb
dec
and
cmp
mov
cli
stos
cld
dec
sub
cmp
push
push
push
repz
jl
dec
ljmp
add
xchg
push
push
psrad
mov
cmc
cltd
mov
jmp
pop
cmpsb
jbe
lahf
mov
jno
ficoml
mov
and
loop
dec
frstor
sti
testb
mov
jle
adcb
xchg
lret
inc
adc
sub
nop
and
jle
ljmp
add
mov
loope
pop
pop
into
sbb
adc
lods
push
push
jp
fstl
mov
jmp
push
inc
aad
jmp
inc
pop
fcmovnu
loopne
sbb
xchg
inc
faddl
loop
adc
pop
popf
lret
imul
push
mov
in
cltd
sahf
sbb
out
sub
push
adc
loope
xchg
lret
sbb
dec
push
cli
xchg
leave
loop
das
dec
pop
pop
mov
cli
and
fdivrp
or
push
adc
jbe
push
and
ret
loope
loop
or
fs
push
adc
xchg
xchg
fbstp
mov
orl
shrb
add
cs
mov
insl
call
or
rcrl
rclb
pop
mov
fists
push
pop
xchg
push
push
mov
jp
repnz
mov
xchg
mov
inc
xchg
jg
jne
sub
and
inc
adcb
adc
and
pushf
mov
dec
push
or
or
out
divl
mov
sbb
lahf
xchg
sti
or
sub
mov
pusha
lea
pop
test
adc
pop
push
andl
inc
shl
jae
call
mov
push
rcr
ja
push
xlat
cmp
stos
aas
push
push
adc
arpl
push
aaa
rcll
mov
andl
sbb
push
jmp
push
mov
xor
cmc
jl
or
imul
aaa
cmp
aas
inc
mov
adc
xor
lahf
sub
jns
andb
add
outsl
cmp
mov
repnz
imul
or
scas
jmp
add
cmp
cs
jb
lock
and
orb
pop
xor
add
adc
ret
testl
mov
shll
mov
imul
add
mov
and
xchg
idivl
lods
and
push
mov
outsl
push
xor
or
adc
cmp
in
cmp
fidivs
inc
cmp
mov
filds
jne
or
lcall
fwait
sub
fwait
pop
out
shlb
cmp
push
mov
test
mov
push
and
rolb
out
and
cmc
push
inc
pop
stos
int
imul
sub
xchg
lods
pop
sti
dec
addb
enter
xor
test
and
sub
xorb
pushf
iret
cmpsb
insb
xchg
decl
iret
in
jnp
sub
dec
xchg
repz
dec
cli
xchg
dec
gs
or
xor
add
add
push
push
mov
jle
xor
sub
insb
and
test
jnp
fsubrp
add
loop
pop
popa
lahf
or
jne
hlt
dec
push
sbb
movsl
pop
inc
lock
jmp
call
inc
je
push
and
cmpsb
or
fs
in
sub
out
cmpsb
sub
fbld
jae
jge
pop
adc
xchg
ja
paddusb
mov
scas
xchg
fistpl
fidivl
jns
mov
dec
pop
test
fstl
bound
inc
pop
pop
jo
xchg
scas
sbb
push
mov
cmp
pop
or
xorb
popa
aam
jne
sub
push
js
pusha
cmp
inc
mov
mov
rclb
ss
or
inc
es
mov
cmpsl
adc
inc
xchg
mov
xor
adc
in
int3
dec
sbb
addb
outsb
sub
and
jbe
mov
sar
lds
mov
and
jnp
sub
ljmp
inc
adc
xor
sbb
nop
jns
clc
cltd
das
mov
mov
push
inc
iret
mov
dec
std
aad
nop
pushf
enter
int
xchg
ficoml
mov
adc
xor
femms
push
jb
push
pop
jb
or
push
data16
push
or
lahf
xchg
sub
sbbl
imul
xchg
dec
jae
and
fiadds
test
aas
aad
outsl
dec
adc
pusha
andl
dec
inc
or
aas
stos
aaa
jg
mov
mov
aas
scas
xor
mov
adc
mov
sbb
xorl
xchg
aas
pop
mov
or
jge
sahf
mov
inc
jle
movsb
movsb
mov
in
icebp
adc
sarl
jo
jb
jne
aaa
inc
add
push
add
push
add
das
mov
scas
mov
lret
enter
jne
xchg
xor
ficoms
jnp
out
aam
jno
push
sub
sbb
inc
push
cld
dec
pusha
sub
subl
test
sub
cmpsb
inc
add
mov
xchg
sub
ds
cmp
jae
dec
xchg
push
bound
cmp
pushf
je
es
xchg
adc
cmp
adc
fwait
xchg
clc
xchg
sbb
xor
out
rcrb
jg
sub
aad
add
aas
pop
lds
sarl
mov
loopne
call
lcall
push
and
mov
push
mov
sbb
rcrb
out
icebp
push
nop
arpl
bound
mov
shll
cmpsl
aas
ljmp
filds
pop
lcall
pop
adc
push
pop
outsl
inc
out
cmp
test
inc
mov
inc
cmpsl
int
dec
sub
ficoml
lods
cld
push
mov
and
pop
dec
jae
and
jg
jmp
mov
bound
sub
add
scas
psadbw
xorl
nop
mov
dec
pushf
jmp
jle
clc
out
jmp
orb
call
clc
outsb
jae
es
xor
push
xor
sbbb
or
dec
fidivl
cmp
pop
shlb
adc
push
loop
jp
xchg
sub
out
sbb
dec
cs
sbb
jbe
mov
inc
push
sbb
push
adcl
xchg
push
cmp
sbb
add
mov
xchg
rorb
ss
lea
sbb
notb
sbb
mov
dec
addb
aas
inc
mov
in
and
std
push
das
pop
and
or
hlt
cmpsb
or
jmp
jle
sbb
int3
call
and
jge
stos
ds
and
sbb
pusha
push
ret
cltd
add
popf
scas
mov
ljmp
popf
inc
sub
mov
push
jp
pusha
push
sbb
xchg
add
mov
jp
cli
inc
mov
pop
xchg
mov
push
orb
lock
or
hlt
data16
dec
mov
imul
mov
cld
adc
mov
inc
pushf
add
add
xor
or
push
ja
std
out
jp
aas
jp
add
cmp
or
and
je
cmp
inc
push
insl
loop
add
icebp
subb
outsb
cmp
sbbb
sub
adc
divl
jo
mov
fwait
mov
dec
or
scas
xor
gs
sbb
rcr
das
pop
xchg
xor
jmp
push
mov
aaa
cli
jle
cmp
pop
aas
sbb
mov
pop
pop
xor
or
call
mov
jle
jo
ficoml
js
fsubrp
jnp
loop
pop
mov
cmpb
pop
jg
hlt
push
xchg
and
in
mov
xor
push
movb
sub
out
push
jmp
push
stc
pop
inc
dec
or
push
adcb
jb
push
dec
and
mov
pop
mov
lret
cltd
clc
ljmp
fldcw
sub
ds
add
dec
adcb
xchg
in
xor
xor
gs
ret
clc
jle
mov
and
lds
xor
pop
push
push
pop
fbld
pop
in
xor
push
and
sbb
pop
xor
mov
dec
call
scas
lret
jne
ret
sahf
xchg
push
fdivl
lahf
cs
lods
pop
aad
es
push
push
and
adc
xor
inc
call
mov
jle
mov
or
scas
lahf
sbb
mov
jp
stos
fbld
ret
in
xor
sbb
push
jle
sub
scas
adc
mov
jno
ret
cli
jge
cmp
out
ficompl
and
inc
cmp
cmp
outsl
dec
inc
inc
jbe
add
cmp
and
leave
loopne
movsl
shl
jp
inc
fldcw
dec
dec
or
insb
cmp
cmpsl
mov
das
arpl
cmp
adc
out
push
mov
add
jg
xchg
aaa
mov
lahf
jp
lahf
mov
xor
xor
adc
addr16
push
stos
ror
adc
cmp
add
sar
mov
and
pop
std
inc
jne
add
test
sub
pop
add
xchg
add
push
fdivl
pop
mov
jb
aad
dec
ret
push
lret
pop
pusha
loop
inc
jo
inc
je
lods
rcrl
fsubl
arpl
sarl
cmp
and
mov
mov
inc
dec
cld
add
cld
adc
pusha
sub
add
mov
sahf
dec
push
fwait
movsl
sbb
inc
pushf
ljmp
xchg
push
pop
fnstsw
lret
jle
adc
je
test
xchg
inc
adc
cmp
rolb
jns
rcrb
out
push
push
ret
out
leave
push
ss
fidivl
jle
stc
xchg
data16
xor
push
lahf
mov
sub
and
cli
jo
sub
sbb
push
inc
and
pop
dec
xor
dec
call
xchg
lret
push
clc
cwtl
jle
xchg
rcr
jno
fisubrl
mov
mov
adcb
loopne
push
scas
and
jmp
out
mov
out
mov
insb
lds
inc
outsb
cmp
arpl
pop
push
dec
cld
mov
mov
jge
inc
aad
and
jle
in
fisubrs
push
je
sub
notb
bound
push
lahf
jb
adc
adc
cli
outsb
subb
mov
push
data16
out
fistpll
test
inc
das
cmp
pop
imul
push
push
add
jb
clc
jbe
ficoms
dec
fwait
in
inc
jno
push
lret
out
dec
sti
aad
lcall
pop
add
inc
ret
mov
jno
mov
clc
mov
pop
xchg
clc
aaa
push
pop
hlt
sub
es
dec
orl
or
jge
sqrtps
xlat
inc
dec
daa
push
dec
out
mov
add
iret
decl
addl
std
and
movsl
fisttpll
and
shll
insl
mov
fisubrl
cmp
xor
sti
cmp
mov
je
fistps
pop
cmpsb
out
fistpl
or
cmp
imul
je
std
dec
xor
adc
xor
xchg
clc
xor
fs
movsl
adc
out
and
mov
ss
jo
dec
jbe
mov
dec
nop
andl
xor
adc
pop
shlb
jge
jecxz
cli
mov
and
in
out
sbb
add
sub
xor
int3
push
or
dec
dec
cmp
arpl
mov
fstpl
fmul
out
mov
mov
fnsave
cltd
adc
pop
faddl
xor
add
enter
and
jns
push
fwait
adc
cld
add
inc
in
outsb
in
sahf
cmp
inc
mov
mov
pop
pop
push
pop
jp
cmp
out
pop
xchg
sub
cmpsb
adc
in
repnz
decl
sub
test
xor
testb
int
addr16
mov
mov
pusha
jbe
cmp
xlat
cltd
and
pop
cwtl
cmp
mov
or
orl
cld
jb
arpl
mov
icebp
iret
mov
jg
mov
adc
aad
inc
rolb
inc
cmp
stos
and
in
mov
cwtl
push
loopne
xorl
es
stc
int
aaa
or
inc
mov
hlt
add
mov
dec
gs
aam
fsubp
push
sbb
mov
inc
fs
mulb
xchg
lods
jns
mov
cmpsl
mov
fdivl
jmp
dec
scas
fimuls
cmp
fsubrs
inc
test
adcb
or
sub
stc
jg
nop
jmp
in
pop
jmp
push
cmpl
mov
xchg
mov
andb
adcl
xchg
jns
mov
pop
adc
push
sub
fildl
pop
sahf
lds
sub
repz
pop
inc
enter
stc
jnp
lahf
lods
cmp
mov
out
fcmovu
call
cmp
xor
scas
add
xor
cmp
xor
popf
dec
fwait
jno
mov
sub
mov
mov
je
sub
bound
push
cmpb
in
mov
aas
lods
outsb
ljmp
popa
xchg
jle
jg
push
pop
pop
pop
or
stc
inc
test
jne
sub
stc
es
std
push
xor
flds
push
std
sbb
mov
out
cmp
add
rclb
xorb
out
pop
sti
fnstenv
pushl
sbb
xor
jmp
jb
xchg
xchg
xchg
sub
lods
or
xor
sub
jo
cli
mov
int
enter
add
out
sbb
push
out
mov
push
loop
cmp
aad
inc
aad
add
mov
mov
xor
pop
in
xchg
mov
ja
or
and
rolb
cmp
or
sbb
push
in
push
and
and
lret
sti
cmp
fcmovnb
cmp
cmp
fnsave
xchg
mov
and
out
add
outsb
aaa
sub
cld
fistpl
lods
add
clc
mov
jg
aam
seto
sub
mov
dec
xchg
and
addr16
push
call
popf
das
repz
test
das
adc
icebp
sbb
movsb
in
jle
scas
arpl
scas
mov
xchg
icebp
sti
cs
adc
nop
gs
sub
les
push
push
ljmp
pop
mov
mov
push
icebp
or
movsb
jo
lret
inc
fucom
in
mov
mov
pusha
inc
repnz
cmp
movsb
cmp
jnp
push
pop
call
inc
dec
push
icebp
hlt
das
cwtl
add
outsl
adc
fisubrs
sahf
push
xor
xor
test
mov
sbb
jns
and
jns
jno
stos
out
mov
subb
mov
cmp
mov
pop
push
mov
mov
in
jnp
sbb
sub
push
add
outsb
and
shlb
add
dec
adc
mov
lods
and
mov
arpl
sub
jae
mov
aam
mov
jmp
add
cmp
ss
test
sbbb
jnp
je
stos
in
inc
push
lcall
cmc
std
xor
jbe
jno
mov
inc
sub
icebp
xlat
int
rclb
inc
push
mov
sub
inc
dec
add
sbb
mov
ret
jg
jg
or
mov
and
rorl
mov
adc
loope
sub
mov
insl
into
lret
mov
popf
lds
out
pop
scas
fldenv
addr16
test
cltd
cmp
jle
add
aam
xlat
mov
inc
loopne
fbld
imul
hlt
fadds
lret
mov
int
sub
imul
mov
std
prefetch
mov
or
push
push
mov
lods
leave
jae
jl
xchg
push
es
shr
addr16
lods
cmp
mov
in
clc
test
mov
lds
stc
dec
stc
mov
call
clc
test
cmp
shlb
add
repnz
cmp
push
inc
inc
leave
xchg
or
ljmp
adc
sbb
lret
dec
stos
sub
pop
sbb
idivb
ljmp
xor
call
stos
cmp
popa
pop
test
xchg
adc
pop
sbb
cmp
push
adc
xor
sbb
insl
sbb
pop
dec
xchg
cs
into
insl
sub
xchg
jbe
inc
repz
fs
inc
incl
insl
divb
sbb
ds
pop
std
cmp
imul
adc
ret
adc
into
xchg
pop
push
xor
dec
call
lret
clc
fidivrs
mov
enter
sub
or
push
loope
jg
fs
mov
pop
scas
inc
fmull
mov
sahf
in
mov
jp
jo
loopne
je
andl
add
dec
das
add
insl
sub
jle
out
fnstsw
pop
inc
sub
int
and
pop
adc
lods
inc
adc
jns
mov
stos
shll
push
negb
jl
into
lods
sbb
stc
jp
sbb
fistps
jno
pop
pop
sbb
mov
in
sbb
scas
push
xchg
jl
adc
idiv
jge
adc
cmpsb
and
push
dec
xchg
dec
mov
pop
lock
lret
mov
jmp
jb
rcrb
fs
cs
out
stc
jp
jo
lods
sub
mov
pusha
lret
js
nop
test
and
test
cmp
lds
arpl
add
xor
mov
imul
xor
push
iret
sti
mov
scas
sub
sub
xor
or
cmp
pushf
push
push
pop
jnp
movsb
jl
sub
in
fisttps
mov
repnz
pushf
dec
mov
sbb
sahf
andl
pop
dec
mov
sub
fidivs
and
lods
and
sub
mov
aad
cld
cltd
sti
pop
inc
or
aam
cmp
pop
aad
jl
xchg
push
cwtd
out
test
mov
out
clc
lods
xchg
movl
jle
in
incl
jno
rorb
push
push
jg
iret
pop
sarb
les
xlat
and
aas
mov
and
imul
xchg
mov
or
test
lret
add
dec
loopne
jb
fscale
lds
sub
subb
inc
mov
data16
mov
cli
bswap
push
mov
leave
adc
test
mov
mov
mov
jg,pt
jle
and
jmp
in
movsb
fsts
cmovno
pop
outsl
mov
or
out
and
daa
mov
lods
adc
into
push
and
adc
imul
mov
cmp
xchg
popf
stos
mov
xchg
xchg
adc
inc
jmp
push
inc
aas
fstps
cmc
popl
sbb
ja
rolb
sub
sbb
sbb
pushf
dec
xchg
and
xor
dec
push
pop
cmp
pusha
cmp
xorb
xor
sub
imulb
call
movsb
sub
xchg
mov
lds
sarb
test
shr
jo
loope
mov
push
sub
ficoml
leave
in
bound
pushf
sub
dec
ss
cs
jp
aaa
adc
mov
jmp
test
lea
imul
scas
lret
sbb
sub
test
or
adc
addl
dec
mov
add
inc
mov
xchg
lret
loop
hlt
scas
push
adc
xlat
or
jns
enter
clc
fistpl
inc
sbb
sbbl
or
pusha
dec
pop
out
in
and
jl
jp
cmp
ret
sbb
mov
ds
add
xlat
jl
sarl
pop
sbb
cmp
pop
adc
sahf
fimull
cmp
in
in
mov
rcl
push
pop
jge
bound
in
adc
cmp
cmp
xchg
sub
xchg
sbbb
jne
dec
and
adc
push
jge
xor
jp
int
int
or
faddl
lret
icebp
cmpsb
pusha
jge
add
fwait
mov
outsb
fstpt
in
sbb
es
sbb
cmpsl
xor
mov
outsb
rcl
sub
cmp
add
xchg
pop
data16
addl
in
jb
pop
add
dec
sbb
jnp
rcr
push
cmp
adc
cmpsl
mov
adc
rcrb
xchg
mov
lret
das
sbb
stos
cmp
out
jns
jecxz,pn
cmp
add
sub
cmp
in
push
inc
outsb
xor
rcll
push
or
sub
fisubl
sbb
add
xchg
lret
aas
rcr
inc
ds
xlat
data16
fsubrs
lahf
xor
bound
sbb
imulb
ja
cwtl
inc
mov
push
ds
dec
inc
jnp
or
jbe
adc
cwtl
ud0
jg
in
mov
movsl
nop
adc
sub
fisubl
arpl
rcrb
sub
pop
pop
lret
push
jmp
cmp
xlat
cmp
ror
pop
adc
loop
cs
sub
movsl
in
fucom
or
loopne
cmp
fstl
inc
insl
fsts
lcall
cwtl
loopne
ficoms
outsb
push
fldl2e
mov
aas
or
jno
outsl
sti
insb
mov
movsb
sbb
push
push
lahf
jle
add
mov
repnz
pop
repz
mov
imul
es
shrb
insl
mov
sbb
popf
scas
in
pop
test
adc
cmp
jmp
cmp
fstps
int
es
into
stc
sbb
rcrb
sbb
sbb
sahf
inc
mov
fstpl
dec
and
int
es
cmp
cmpsl
dec
or
push
enter
arpl
out
mov
lcall
cmpsl
sub
je
cmp
push
push
cmp
mov
xchg
pop
cs
dec
dec
xchg
rcll
and
jae
dec
push
sahf
ficoms
lea
adc
cmc
push
inc
mul
imul
pop
loopne
inc
loopne
loop
ljmp
out
push
dec
jecxz
fistps
dec
pop
push
or
dec
in
add
pop
cli
xor
repnz
lds
sbb
jle
ficoml
dec
sar
cmpb
sbb
push
loope
sbb
ljmp
push
out
ret
into
pop
loope
lret
fcomip
mov
pop
fstpt
pop
adc
pop
jmp
xchg
cmp
lea
int
lds
daa
mov
lret
push
inc
jge
pusha
ficompl
test
or
push
hlt
pop
divb
ljmp
cmc
out
xchg
das
addr16
ds
test
push
mov
roll
mov
or
fcoml
rcrl
insb
out
adc
in
adc
das
enter
lret
lahf
sub
hlt
push
int
fld
lcall
and
pop
jp
loope
push
inc
jmp
push
popa
mov
test
sbb
shll
popf
lcall
icebp
lock
mov
add
inc
repnz
fimull
push
push
push
rol
pop
enter
dec
inc
mov
add
and
rorl
out
into
loopne
xor
cpuid
flds
inc
out
dec
int3
and
shr
mov
ror
xchg
dec
sbb
ds
shlb
push
cmpsl
loope
dec
into
cmp
sbb
inc
or
outsb
pop
imul
imul
inc
or
fstl
out
mov
add
xchg
mov
stc
or
push
sub
push
lea
pop
push
or
dec
imul
xor
aad
cmp
movb
ficomps
popf
or
xchg
fiaddl
fsub
je
mov
lea
dec
cmp
shlb
or
pop
pop
loop
sub
jbe
sbb
mov
sbb
push
and
push
ret
add
push
pop
popa
insb
pop
push
add
add
jl
sbb
or
xchg
cmc
repnz
popf
xchg
or
push
jnp
dec
leave
dec
fisubrs
bound
fistpll
jae
inc
xchg
jg
push
jb
sbb
jb
sub
and
xchg
loop
cmpb
lcall
data16
stc
daa
push
cmpsb
push
icebp
adc
jo
push
imul
mulb
jno
cmp
fstpl
push
and
sbb
aad
and
push
and
arpl
and
inc
jnp
push
pop
mov
rolb
sub
int
or
dec
addb
jb
cs
or
out
mov
addr16
sbb
xchg
bnd
sub
in
mov
mov
ret
std
out
inc
mov
movsl
test
and
mov
mov
pop
outsb
roll
cmpsl
jns
ljmp
add
mov
mov
xchg
rcrl
arpl
dec
jle
cmpb
and
das
notl
aas
fisubs
sub
loope
dec
cmpb
dec
shlb
into
push
sub
push
jo
xchg
fldlg2
inc
xchg
mov
shrl
jmp
ret
adc
push
dec
std
rcrl
pop
inc
ss
shlb
push
into
xchg
push
and
inc
sbbl
push
lahf
or
ficoms
mov
out
stos
adc
jp
icebp
lock
dec
mov
out
sub
sbb
xchg
mov
inc
shl
cs
lods
adc
jmp
lods
xchg
pop
or
pop
jb
xchg
pop
mov
inc
xchg
adc
sahf
out
or
scas
jl
jbe
push
push
and
mov
notb
and
and
sub
in
or
push
outsl
arpl
rcrl
xor
and
pop
or
push
dec
pop
lcall
jns
mov
les
sbb
loope
cmp
push
orb
loope
ds
rcll
ss
fstp
jp
jmp
mov
neg
mov
shl
mov
cmp
lcall
xchg
mov
and
sbb
sub
push
xchg
stos
mov
testb
lret
dec
leave
push
fistps
popa
inc
shll
mov
mov
push
xchg
adc
lcall
add
pop
dec
xchg
cmpsb
push
pushf
push
ret
inc
inc
mov
rclb
das
pop
cmp
inc
xor
and
pop
pop
adc
dec
lret
stc
divl
jle
in
xchg
dec
frstpm(287
xor
ficomps
pop
dec
into
and
out
lds
pop
mov
iret
add
pop
ljmp
push
mov
cmp
mov
and
cmp
stos
lret
add
push
movd
dec
cmp
adc
pop
aas
cmp
push
mov
jns
rorl
pop
xor
fdivr
mov
outsb
and
jmp
adc
xchg
icebp
pushf
outsb
shll
daa
xchg
movsb
aad
pushf
and
pop
mov
add
sub
mov
stc
mov
jg
mov
bound
xor
mov
push
adc
loopne
aad
pop
cmp
mov
mov
mov
adc
push
mov
push
int
pop
test
fs
xor
push
and
push
test
lods
mov
pusha
lret
dec
loopne
push
jmp
rclb
and
jb
pop
mov
push
jg
mov
mov
imul
or
loope
mov
adc
data16
mov
inc
repnz
xchg
mov
push
fwait
dec
ficoml
xchg
enter
mov
jnp
jno
fbstp
push
xor
adc
xor
in
into
add
xchg
mov
or
test
cmp
rcrb
mov
adc
rorb
into
adc
adc
sbb
sahf
add
pop
cmp
dec
lret
out
std
pushf
add
lahf
loop
push
andb
pop
dec
sbb
mov
ret
loopne
aas
jp
into
xchg
inc
js
rorl
push
xchg
push
mov
stos
sbb
rorl
pop
dec
inc
mov
pop
xchg
stos
and
incb
mov
sbbl
and
arpl
mov
pop
jp
lea
xchg
dec
dec
cli
ss
mov
arpl
fcoms
cmc
sub
sub
bound
les
mov
mov
clc
mov
jne
scas
push
xchg
mov
pop
cmp
cmp
dec
adc
mov
sti
push
imul
fbstp
sbb
in
leave
mov
xchg
shl
mov
loopne
aad
mov
leave
outsb
xorl
dec
insl
cmp
sub
pushw
jnp
clc
mov
mov
jle
lock
leave
je
xchg
and
pop
adc
repnz
pop
lea
mov
insl
xchg
in
cld
inc
or
nop
hlt
lods
and
push
xchg
pop
adc
mov
inc
pop
and
push
popf
jmp
fidivl
in
fsts
mov
adc
sbb
push
in
mov
fs
inc
shl
sarb
in
add
mov
mov
dec
sbbb
adcl
mov
fs
enter
jmp
xor
inc
push
push
adc
clc
enter
mov
or
cmp
sbb
and
lret
cmp
mov
or
lret
repz
jmp
or
fldz
iret
xchg
adc
insl
pusha
data16
gs
and
jns
out
mov
mov
