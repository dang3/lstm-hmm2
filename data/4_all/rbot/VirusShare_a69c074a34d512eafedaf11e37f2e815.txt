jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
mov
mov
mov
mov
nop
push
nop
mov
nop
nop
mov
nop
mov
nop
mov
nop
inc
nop
dec
jne
nop
pop
mov
pop
ret
lea
push
push
push
push
add
mov
mov
mov
call
mov
movb
movb
xor
mov
mov
inc
inc
test
jne
xor
xor
mov
mov
cmp
jge
mov
mov
mov
jmp
movb
inc
cmp
jl
xor
mov
add
add
mov
mov
xor
mov
mov
mov
xor
mov
lea
mov
mov
inc
dec
jne
add
pop
pop
pop
pop
ret
xor
mov
call
ret
lea
push
mov
push
push
push
push
mov
dec
test
jl
inc
mov
mov
incb
xor
mov
mov
add
xor
mov
mov
push
xor
mov
lea
pop
mov
xor
mov
mov
xor
mov
add
and
mov
xor
and
mov
inc
inc
decl
jne
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
call
push
mov
call
push
mov
call
mov
mov
pop
call
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
lea
call
xor
push
push
pushl
mov
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
call
push
call
mov
mov
add
add
mov
add
mov
mov
mov
dec
test
jb
inc
movl
mov
mov
add
mov
shl
add
mov
add
mov
mov
call
push
push
call
test
je
incl
dec
jne
mov
mov
add
mov
add
add
movzwl
mov
mov
mov
shl
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
mov
add
mov
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
test
jle
mov
mov
mov
mov
lea
mov
dec
call
mov
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
call
pop
ret
add
add
call
add
add
aas
jo
aaa
pop
jo
outsb
push
jge
jns
cmp
push
push
mov
mov
push
push
dec
jne
push
push
mov
xor
push
push
pushl
mov
nop
nop
nop
nop
lea
call
mov
lea
mov
call
mov
call
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
call
mov
nop
lea
call
mov
lea
mov
call
mov
call
push
call
mov
lea
call
mov
lea
mov
call
mov
mov
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
mov
lea
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
lea
call
mov
lea
mov
call
mov
call
push
mov
push
call
mov
push
call
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
decl
add
xchg
add
lret
dec
jns
jno
sbb
add
add
decl
add
add
or
add
decl
add
fwait
add
fimuls
pop
jno
sbb
add
add
decl
add
add
dec
sub
and
jmp
call
add
add
inc
es
repz
add
decl
add
mov
inc
push
add
add
add
call
add
add
push
das
or
pop
sbb
in
orb
call
add
add
push
and
shl
xchg
mov
add
call
add
add
push
das
or
pop
sbb
in
orb
decl
add
add
inc
sbb
xor
adc
jecxz
add
call
add
add
jae
add
push
fldl
xchg
xchg
pop
lea
add
decl
add
add
inc
es
sub
out
aad
add
call
add
stos
adc
inc
cmp
and
ret
divb
popf
lahf
sbb
add
call
add
add
sub
cmp
jecxz
add
add
decl
push
inc
cmp
inc
cmp
sub
push
jmp
decl
add
mov
inc
cmp
sub
push
jmp
decl
add
mov
inc
cmp
sub
push
jmp
decl
add
add
inc
sbb
sub
add
repz
add
decl
add
add
push
and
add
decl
add
mov
dec
cmp
inc
cmp
sub
push
jmp
decl
add
add
dec
sub
ds
call
add
add
dec
das
sub
xor
in
adc
decl
add
mov
pop
or
inc
cmp
sub
int
add
add
call
add
add
dec
cmp
sub
pop
ret
popf
mov
call
add
add
inc
aas
add
or
loop
or
add
call
add
add
inc
cmp
sub
push
jmp
push
mov
add
decl
add
add
inc
and
cmp
call
add
add
inc
cmp
and
cmpb
decl
add
add
dec
cmp
adc
or
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
lea
movzwl
add
mov
ret
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
lea
xor
mov
call
lea
xor
mov
call
movl
xor
mov
mov
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
mov
mov
call
test
je
movb
xor
push
push
pushl
mov
movl
lea
push
mov
push
mov
mov
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
mov
mov
call
test
je
mov
push
mov
push
mov
mov
call
test
jb
cmpl
je
mov
mov
add
mov
mov
sub
mov
mov
sub
mov
mov
sub
push
push
add
push
add
push
add
push
mov
mov
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
xor
mov
mov
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
mov
mov
call
test
je
lea
push
mov
call
push
mov
push
mov
add
push
mov
push
mov
mov
call
inc
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
mov
mov
call
test
je
mov
mov
add
mov
lea
push
mov
push
mov
mov
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
mov
mov
call
jmp
mov
push
mov
mov
call
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
add
mov
mov
xor
mov
call
push
lea
push
push
call
mov
mov
mov
call
mov
mov
call
add
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
nop
mov
nop
lea
push
lea
call
mov
lea
mov
call
mov
call
push
push
mov
mov
call
test
jne
lea
push
mov
push
lea
push
push
lea
call
mov
lea
mov
call
mov
call
push
mov
push
mov
mov
call
test
jne
xor
nop
mov
push
mov
mov
call
nop
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
call
or
leave
dec
es
sbb
cld
cmp
jmp
decl
add
add
push
and
add
push
call
neg
sbb
ret
add
add
push
cs
jb
jns
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
mov
push
push
mov
push
mov
mov
call
mov
push
mov
push
mov
mov
call
mov
push
mov
push
mov
mov
call
mov
push
mov
mov
call
mov
test
je
push
mov
mov
call
mov
pop
pop
ret
nop
push
mov
push
push
push
push
xor
push
push
pushl
mov
or
mov
mov
call
mov
cmpl
je
mov
mov
call
mov
call
mov
mov
mov
call
lea
call
mov
lea
mov
call
mov
mov
call
push
mov
call
push
lea
call
mov
xor
pop
call
test
jmp
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
or
dec
out
add
cmp
add
ss
add
cmp
add
cmp
add
cmp
add
out
add
cmp
add
cmp
add
out
add
cmp
add
inc
out
add
inc
out
add
out
add
inc
out
add
add
out
add
out
add
add
out
add
add
add
in
add
mov
call
xor
push
push
pushl
mov
push
push
push
call
push
call
push
push
push
call
push
push
push
push
call
test
je
push
call
call
call
test
je
push
mov
mov
call
call
test
je
push
call
movw
push
call
push
call
push
push
push
push
mov
mov
call
call
test
je
push
call
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
call
mov
add
add
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
or
add
mov
add
out
add
add
add
add
add
add
in
add
add
add
add
inc
add
push
add
add
mov
and
pop
inc
jne
outsl
fwait
clc
cld
aad
dec
xchg
lcall
call
dec
cli
or
fs
aas
jle
ss
rcr
fmuls
pusha
cltd
cwtl
shlb
les
mov
xchg
cmpsl
pop
jne
xchg
and
dec
adc
lods
ja
jo
ficoml
push
ret
xchg
das
inc
xchg
inc
js
sahf
call
iret
nop
xchg
xchg
scas
hlt
cmp
in
fcom
mov
mov
sbbb
imul
ficompl
mov
mulb
xchg
inc
loopne
movl
jns
test
out
adc
enter
dec
push
std
push
es
push
cmp
cmpsb
dec
adc
jge
fidivrs
ret
xchg
aas
xor
xchg
mov
rol
insl
mov
jl
sub
cmp
inc
bound
mov
push
sub
lods
repnz
in
aad
into
scas
jecxz
cmp
sub
mov
mov
push
imul
or
insb
add
repz
sub
dec
xchg
xor
lea
jp
outsb
out
fs
addr16
push
inc
fnstenv
daa
test
loopne
outsl
xchg
gs
in
popf
nop
loopne
pop
repnz
mov
pop
sub
jle
adc
and
mov
mov
sbb
xchg
cli
sub
insl
mov
pop
repnz
adc
fcoml
add
mov
das
push
jmp
dec
mov
xor
movsl
mov
and
cld
sbb
scas
and
mov
lcall
scas
mov
aaa
inc
lret
push
das
xchg
ja
mov
imul
pop
cmc
jns
inc
jno
mov
lds
xchg
lea
out
cmpsb
or
push
scas
sbb
addl
xchg
or
ret
or
mov
pusha
mov
clc
dec
or
push
cltd
incb
mov
sbb
enter
arpl
rcrb
lds
ds
loope
sub
repz
ljmp
and
push
jg
ret
add
imul
xor
xchg
popa
pop
ljmp
or
pusha
neg
xchg
scas
stos
add
fbstp
sti
adc
add
lock
xor
aaa
call
daa
jae
test
push
inc
negb
sub
xchg
je
xor
rcrb
hlt
dec
and
mov
adc
repnz
pop
push
ja
leave
roll
movl
pop
in
push
lods
jge
xor
pop
sub
sahf
test
aam
inc
or
hlt
adc
push
dec
jo
cmp
in
jae
bound
pop
iret
sub
pop
cmp
cmpsl
scas
or
inc
or
cltd
ja
andl
repnz
dec
andnps
jae
mov
scas
fwait
imul
insl
lds
fcompl
jb
rorb
mov
std
ljmp
movsl
in
jnp
sub
cmpb
and
pop
add
cmp
faddp
cmp
pop
repnz
jnp
sbbl
leave
iret
or
push
dec
popf
or
daa
push
pop
mov
push
ficoml
or
cmp
mov
aas
adc
cmp
or
mov
mov
ret
and
jnp
push
sub
inc
mov
outsl
pop
in
cld
sub
mov
scas
aam
inc
cmp
clc
mov
imul
sti
sbb
jp
mov
adc
sub
and
lret
mov
sbb
or
fldenv
inc
sub
aas
sub
scas
stos
xchg
std
dec
test
lret
mov
icebp
stos
lret
adc
cmc
cmp
addb
out
out
cmpsl
add
adc
in
icebp
ljmp
sub
dec
scas
cmp
cmp
inc
scas
rcrl
pop
inc
leave
rcll
inc
pop
cld
scas
fbstp
jnp
fs
insb
mov
or
cmp
clc
xor
shl
xchg
aas
dec
js
enter
outsl
sub
add
arpl
lods
jns
xchg
dec
sub
sbbb
jle
jp
lret
inc
fldenv
int3
pusha
ja
mov
sbb
out
roll
loopne
inc
scas
ja
sub
mov
jg
dec
cmp
jbe
in
or
mov
scas
push
movsb
mov
and
aam
inc
insl
mov
daa
add
jns
lahf
aam
scas
and
sarl
inc
xor
stos
outsl
sarb
add
fbld
or
clc
mov
int3
or
xor
pop
cmp
mov
js
out
addr16
jae
add
lods
int
xchg
xchg
pop
f2xm1
pshufw
push
in
xchg
cltd
push
mov
xchg
test
popf
mov
shl
sar
jne
mov
in
lret
in
xchg
inc
pushw
in
lods
or
push
rcrl
pop
into
movsl
or
loope
fsubr
popa
clc
sub
cmp
mov
lahf
mov
sbb
xchg
dec
imul
cmp
push
add
dec
inc
rol
xchg
into
or
popa
divl
dec
xlat
les
insb
sub
sbb
je
clc
mov
push
in
movsl
mov
subl
ja
imulb
mov
fcomps
mov
xor
push
mov
jg
jge
rcl
inc
iret
xchg
imul
outsl
loopne
and
popa
pop
adc
jne
xlat
xchg
push
pusha
inc
lcall
mov
rclb
sahf
dec
sarb
je
and
rclb
fsubrl
in
push
mov
add
jne
int
mov
ret
out
inc
push
vpavgw
ds
in
cwtl
xor
jno
sbb
int3
es
rolb
js
xchg
cmp
cwtl
add
xorb
subb
fstl
dec
fsubl
sub
test
clc
mov
add
cmp
mov
std
cld
ss
push
and
sbb
mov
sahf
pop
sub
inc
add
add
mov
shlb
fwait
adc
sub
pop
not
enter
dec
cmc
aas
fnsave
add
insb
roll
data16
cwtl
out
jmp
enter
sbb
jne
cmp
xor
sub
leave
jecxz
outsb
stc
in
call
inc
stos
add
aaa
mov
mov
mov
int
dec
inc
jp
pop
jge
pop
inc
rorb
shrb
arpl
fs
jmp
mov
fisubrs
ss
jo
pop
ss
push
jae
popf
jae
xor
out
imul
and
test
mov
adc
cmp
mov
insl
add
jg
push
sbb
and
sub
ret
add
imul
dec
adc
dec
lods
pop
cmpsl
idivb
adc
xor
repz
mov
cmpsb
inc
icebp
aas
adc
mov
loopne
stos
inc
fidivl
lret
pop
pop
or
insb
jns
add
xor
and
jne
xchg
scas
pop
fcomip
push
mov
scas
mov
nop
mov
shll
out
or
inc
jecxz
stos
stos
call
movsb
mov
adc
dec
aad
inc
vfmsubps
sbb
stos
mov
and
test
out
xchg
and
and
repnz
clc
fnstenv
std
repz
in
scas
jae
xchg
and
imul
into
xor
roll
xchg
fcomi
push
roll
push
push
pop
test
xchg
add
push
mov
sbbb
bound
xchg
das
in
push
cmp
nop
not
nop
nop
aaa
sbb
shrl
dec
das
cs
call
mov
ret
jmp
in
cs
push
stc
xchg
adc
es
int
sti
sub
cmp
gs
mov
pop
lret
dec
and
mov
add
fiadds
add
pop
inc
mov
aad
inc
out
faddl
add
jg
xor
lea
xor
fisttps
pusha
xchg
or
dec
sbb
addb
inc
int
or
sbb
pop
nop
rcrl
aas
push
popf
imul
push
push
ss
jl
leave
xor
movsb
sbb
fdivrs
add
push
lea
lea
int
adc
bound
pop
xor
ds
in
aaa
stos
outsb
jbe
or
and
mov
mov
sbb
mov
push
out
mov
incl
insl
cmp
imulb
sub
test
iret
inc
call
and
xchg
jecxz
test
mov
xorb
cmp
popa
add
and
cmp
push
ficomps
and
aas
mov
mov
js
dec
adc
xor
jmp
es
outsl
mov
enter
test
insb
out
push
inc
inc
inc
pusha
aad
mov
out
call
cld
or
cmpsl
push
push
inc
pop
dec
imul
mov
mov
js
pushf
jo
lds
inc
in
and
pop
movsb
jns
pop
mov
pop
cwtl
subb
cmp
mov
mov
loopne
repz
js
dec
leave
dec
lock
mov
mov
or
mov
dec
pop
fcomps
push
lret
push
loope
loop
fisubrl
dec
std
data16
mov
lods
test
jp
jno
xchg
dec
mov
xchg
mov
mov
je
add
pop
sti
cld
psubsb
test
out
inc
adc
aam
rcl
sahf
lods
dec
call
push
loope
loope,pn
mov
scas
pop
int3
jne
dec
add
pop
fistl
movsb
jl
inc
jb
aas
addr16
xchg
hlt
inc
dec
cmp
lock
hlt
or
add
sti
ret
push
or
lds
push
cmp
movsl
mov
in
ret
scas
pop
enter
addl
repnz
pop
cmp
insb
dec
sbb
fcoms
movsl
jo
and
pop
mov
in
jecxz
imul
dec
aam
or
cwtl
shr
mov
pusha
and
int
add
xchg
js
mov
xor
mov
pushf
ja
shlb
test
jp
xor
js
and
dec
cmp
xchg
test
ret
or
push
popf
jnp
rcr
insb
pop
out
ds
lcall
xor
push
add
ja
pop
repz
add
cmpsl
mov
lret
out
cltd
cmpsl
shlb
sbb
stc
xchg
lods
inc
roll
xchg
dec
jg
in
stos
aaa
cmpsl
cmp
sub
lods
jnp
roll
mov
mov
bound
ds
adc
jge
mov
aas
jp
sbb
mov
pop
cmp
jp
jne
sub
jge
pop
mov
and
mov
fdivrs
pop
dec
push
pusha
inc
inc
xchg
shll
dec
out
add
fs
gs
pop
call
fldt
dec
xor
jmp
mov
xor
pop
fwait
loopne
xor
xor
cmpsl
and
lock
in
xor
mov
insl
jns
or
pop
sbb
sub
mull
inc
adc
out
xor
push
orl
mov
mov
jg
ds
jmp
outsb
leave
cltd
cmp
add
sbb
mov
data16
push
cli
cmpsb
push
sub
pop
aaa
jle
or
mov
inc
pop
movsb
aam
xor
jmp
jl
push
sbb
mov
fldt
decl
push
rol
stc
pusha
mov
pop
sarb
aad
popf
test
lods
int
outsb
and
call
adc
in
popa
push
and
xchg
mov
or
mov
mov
in
pop
out
test
or
ja
lods
call
lcall
imul
xor
icebp
mov
jmp
push
out
push
ror
push
dec
int
das
ljmp
mov
mov
mov
sbb
push
push
cmpsl
sub
lock
jle
inc
loop
int
or
pusha
sbb
mov
ror
stc
adc
jno
mov
movsl
aas
cmc
ror
xchg
dec
sub
xor
stos
xchg
pop
add
das
xor
xchg
cmp
cmp
mov
fidivl
aaa
inc
pop
cmp
push
int3
cmpsl
add
jle
push
hlt
nop
push
push
ljmp
insb
and
mov
jl
pop
pop
push
adc
sub
cmp
mov
mov
icebp
inc
mov
and
push
jnp
inc
dec
ss
fs
dec
jnp
sub
popf
mov
mov
mov
out
test
out
lods
aam
add
cmp
jge
jae
cmpb
inc
jns
sub
aaa
xchg
fistl
dec
inc
pop
push
jae
pop
jle
ds
pop
lds
mov
xor
test
sub
dec
insl
xor
or
sub
int
mov
lds
push
negl
out
and
inc
push
nop
sbb
adc
cmp
lahf
gs
fmulp
mov
xchg
ljmp
pop
std
aaa
loop
popf
and
scas
sub
pusha
insl
scas
pusha
out
es
mov
mov
push
dec
jo
shll
cld
pop
cs
mov
or
sti
cld
js
cmp
sahf
jns
shl
xchg
push
nop
dec
inc
cmp
lock
mov
sub
xchg
push
xchg
call
imul
mov
mov
xchg
dec
fcoml
ljmp
mov
aaa
cwtl
mov
pop
jmp
cwtl
scas
fistl
mov
lahf
or
std
xor
out
mov
mov
or
sbb
ljmp
fcmovnbe
out
cltd
sub
jmp
push
mov
cmp
add
and
push
orl
popa
test
pop
inc
repz
jle
inc
inc
dec
adc
stos
add
xchg
cmpsl
sbb
out
dec
xchg
lods
not
add
inc
icebp
sbb
or
sbb
sahf
xchg
and
dec
cld
aad
in
lahf
sub
or
mov
and
or
push
sub
adc
es
out
daa
add
sbb
dec
fwait
jg
pop
lods
shl
dec
pop
lahf
int
test
insl
aaa
inc
imul
and
iret
lods
sbb
dec
shrl
mov
jecxz
xor
inc
test
sbb
dec
jne
cmpsb
into
aas
imul
gs
imul
scas
xor
fdiv
gs
xchg
leave
scas
rcrb
stc
imul
push
push
sub
mov
adc
inc
aas
xchg
pop
and
xchg
add
sbb
xor
mov
adc
mov
int
repz
in
inc
pop
jae
adc
scas
out
fidivrl
mov
rcl
je
xchg
out
inc
xchg
mov
add
insb
add
out
les
or
and
mov
cmp
jne
scas
mov
and
or
adc
call
int3
add
fwait
iret
gs
sbb
popf
dec
jno
mov
sarb
push
mov
mov
enter
cwtl
inc
fucomi
push
jo
jg
ja
hlt
pop
xor
pop
jnp
arpl
mov
mov
adc
loope
pop
adc
adc
cmp
cwtl
xchg
test
or
sbb
push
push
cwtl
nop
movsb
in
inc
dec
sbb
insl
stos
dec
push
mov
and
loop
adc
sub
arpl
push
insl
loopne
mov
stc
imul
inc
stos
push
je
popa
data16
mov
push
cmc
push
dec
mov
icebp
or
push
push
dec
popf
pop
mov
mov
cli
aad
js
push
fs
test
pop
cmp
cltd
push
nop
mov
inc
add
sub
mov
insb
push
dec
pop
pop
pusha
fcoml
dec
mov
mov
add
jnp
mov
and
sti
pop
pop
popf
xchg
leave
add
inc
and
loopne
and
cs
les
fwait
imul
mov
push
cmpsl
dec
js
int3
pusha
cwtl
xchg
xchg
iret
mov
data16
subl
insl
dec
jne
test
mov
adcl
pop
mov
sbb
insl
inc
adc
mov
dec
ja
push
sbb
push
loope
dec
nop
addb
movsl
mov
rcrb
in
jno
aad
stc
mov
test
add
dec
lods
sbb
frstor
fdivrl
pop
test
orl
scas
xchg
pusha
aad
pop
shr
aam
outsb
inc
and
dec
sub
fistl
mov
pop
mov
ja
sbb
mov
push
popl
lods
pop
sbb
dec
insb
repz
adc
cmpsb
mov
mov
adc
sbb
test
loope
leave
cmp
sbb
lcall
sbb
sbb
in
push
test
xlat
jl
sarl
push
addl
fcomps
lahf
mov
mov
push
cltd
jl
xor
push
sub
sti
fisttpl
xchg
xchg
jle
dec
xor
mov
mov
dec
fcomps
adc
jecxz
or
cmp
imul
push
add
daa
shll
lods
arpl
and
mov
lret
adc
daa
adc
rcrl
and
dec
aaa
mov
add
inc
cs
cltd
push
dec
aam
pushf
xor
pop
mov
cltd
lds
pop
clc
int
aad
jp
imulb
or
xor
lcall
mov
sbb
push
cmc
pop
ja
sub
pop
jns
xchg
cs
cld
testb
jnp
sbb
and
loopne
or
and
pop
inc
repz
pop
arpl
cmpsb
fsubrl
fstpt
daa
shr
shufps
jno
xchg
lret
cmc
cmp
roll
test
cmpb
or
dec
arpl
je
and
add
adc
es
fdivr
jp
lea
fdivl
mov
aad
cmp
outsl
repnz
sbb
lds
mov
push
mov
mov
dec
cmp
dec
cs
or
je
and
mov
add
mov
pop
lods
xor
adc
inc
fcoml
dec
inc
ds
stos
mov
add
pop
arpl
cmp
push
pop
jmp
jbe
mov
sbb
adc
mov
mov
jbe
pop
xor
mov
ret
or
leave
int3
outsb
jo
clc
gs
xchg
push
dec
int
stc
and
add
lods
gs
or
mov
cmc
out
int
inc
test
iret
dec
pop
cld
in
dec
or
mov
pop
into
cld
sub
clc
insb
imul
xchg
mov
loop
push
shl
sbb
lahf
int
sbb
xchg
leave
dec
cld
or
cmpsl
mov
or
rorb
pop
call
mov
or
pop
pop
addl
mov
out
jg
test
pusha
cmp
cmp
imul
jecxz
lahf
adc
arpl
es
call
pop
out
out
add
or
daa
std
mov
ds
es
mov
xchg
pop
inc
push
sub
rorb
cmp
dec
jge
ss
mov
lods
pop
inc
enter
push
inc
jl
ja
xor
shlb
adc
sahf
inc
ljmp
xchg
push
loopne
div
or
jbe
jb
shlb
sbb
pusha
pop
ds
bound
inc
xor
bound
mov
xchg
fsubrp
pushf
xor
sar
or
outsl
sbb
mov
sub
xlat
int3
pop
test
mov
mov
dec
mov
rcrl
clc
cmc
mov
and
inc
cmpsl
cmp
lods
ss
add
push
xchg
negl
xchg
jae
mov
aad
lods
scas
mov
or
add
sbb
lcall
mov
rorb
mov
in
dec
mov
arpl
ret
movsb
in
subl
out
sti
sub
rorb
or
mov
test
lret
fsubs
in
enter
and
iret
pop
pop
addr16
inc
and
mov
aas
mov
outsb
xchg
lret
xchg
aaa
adc
test
dec
enter
mov
scas
icebp
cmpsb
push
scas
jne
popa
in
ljmp
push
lret
mov
adc
dec
repnz
das
psrad
in
aad
xor
pop
xchg
mov
cmpsl
dec
mov
sub
movsb
mov
xorl
cmp
lret
or
cmp
sbb
jns
pushf
add
or
sub
mov
fisttpl
in
xchg
out
rclb
sbb
xor
in
adc
xor
add
repz
push
popf
testl
int3
add
packuswb
test
test
das
aad
les
sub
jns
pusha
mov
loop
je
and
mov
push
or
sbb
ljmp
popf
inc
jb
das
movsb
pusha
jmp
push
inc
mov
nop
add
inc
mov
loop
and
mov
aam
les
ficompl
jae
outsl
and
lea
mov
repz
ss
test
mov
ljmp
test
cs
xor
mulb
mov
rolb
inc
pop
and
sub
mov
mov
lock
adc
movsl
mov
mov
out
push
mov
or
lea
push
push
add
xor
cmpsb
xchg
inc
push
pop
icebp
mov
push
pop
adc
dec
mov
xor
sub
push
add
std
push
inc
or
movsb
mov
stos
jnp
push
std
or
mov
dec
jg
jge
jb
orl
fstps
push
cmp
add
xchg
xor
jl
push
add
fstpl
mov
fwait
or
in
adc
xor
mov
arpl
inc
leave
subb
iret
cmp
icebp
dec
lods
dec
js
pop
mov
popa
aad
jmp
or
adc
push
daa
mov
adc
mov
lods
cmp
test
cmp
add
cmp
xlat
loope
xor
js
sub
test
jb
lcall
aam
jg,pt
xor
push
sbb
nop
cmp
cli
cmp
cmp
and
mov
dec
mov
xchg
lcall
xchg
adcl
test
call
cmpsl
divl
mov
lea
pop
int3
fxch
sub
enter
jg
lods
jecxz
cs
mov
mov
lcall
loop
sbb
and
lret
dec
es
xor
ljmp
mov
repz
push
jge
or
xor
mov
inc
stos
push
push
dec
aaa
dec
fdivs
mov
xor
add
or
sbb
jmp
daa
ficoms
cmp
mov
mov
test
mov
push
stc
or
sbb
insl
cltd
sahf
ljmp
xor
mov
pop
and
imul
mov
nop
mov
in
popf
inc
jge
shlb
jg
pop
ret
and
xor
mov
inc
sbb
mov
inc
mov
push
push
test
jmp
xor
dec
nop
dec
sub
and
pop
jne
clc
imul
add
into
sbb
sbb
pop
cmp
sbb
jns
les
dec
jmp
in
stc
inc
ja
pop
out
push
iret
jl
mov
scas
xor
mov
int3
mov
xchg
jp
mov
out
scas
sbb
aad
or
jle
or
in
xchg
inc
test
push
popa
jmp
adc
outsl
and
icebp
pop
or
push
and
pop
scas
loopne
subps
sub
call
loopne
xor
in
or
ret
push
ljmp
dec
and
daa
inc
and
bound
xchg
fadds
dec
cs
xor
jne
imull
in
push
push
mov
and
mov
dec
sub
jl
call
lock
das
sub
dec
lods
and
stos
jne
outsl
out
aad
fidivs
mov
cltd
xor
lea
mov
testb
sub
push
jle
xor
out
or
sbb
mov
subb
and
sbb
push
sbbl
cmp
or
lods
pop
pushf
xchg
dec
mov
clc
leave
int
cmp
imul
ss
lahf
lea
stc
push
pop
xor
fucom
xchg
repz
jg
les
inc
pop
test
push
les
cmp
jns
data16
sub
js
lods
mov
adc
adc
enter
scas
jbe
push
sbb
insb
fs
in
jno
in
hlt
pop
xchg
add
mov
or
cmc
xor
hlt
mov
into
or
mov
data16
mov
call
insl
cmpsb
pop
pop
sbb
mov
mov
pop
inc
push
adc
aad
lahf
fs
adc
mov
dec
cmp
and
test
pop
adc
push
pop
xorb
aam
jecxz
scas
mov
sbb
lods
addr16
sqrtps
xlat
aad
xor
mov
push
fistl
enter
loope
ror
mov
cltd
jmp
xor
loope
inc
xchg
xor
xchg
ret
mov
leave
pop
dec
pop
js
jle
out
in
sub
sbb
popa
adc
pop
mov
sub
push
nop
push
push
int
or
dec
push
cs
stc
call
rolb
out
add
xor
ret
out
xchg
xchg
std
jnp
test
xchg
lock
inc
fxch
or
test
fidivrl
out
or
aad
hlt
out
shll
popa
and
in
lret
jle
adc
test
jne
ss
push
inc
ret
and
sbb
pop
mov
in
xor
adc
sti
enter
repz
pushf
jmp
adc
dec
iret
clc
nop
sti
dec
mov
pop
sub
mov
xor
dec
jecxz
or
inc
adc
sub
push
dec
cs
pop
shll
jl
mov
pop
dec
enter
mov
pop
xchg
mov
into
cmp
jmp
add
adc
cld
and
pop
test
fs
xor
stos
lods
sub
and
mov
fidivs
dec
sbb
mov
sub
jns
test
lcall
icebp
sub
mov
dec
mulb
xor
push
inc
in
sbb
mov
ds
and
mov
cmp
push
add
and
jne
out
mov
xchg
jge
cmp
negb
sbb
fcmovbe
cmpsl
sub
je
rcrb
cmp
clc
aas
popa
das
add
flds
pop
xchg
vmwrite
adc
lcall
or
shll
pop
xchg
out
push
fbld
or
pop
and
mov
out
adc
pop
add
xchg
xor
movsl
imul
sti
push
push
pop
mov
aad
call
aaa
sub
fldcw
add
fsubrl
std
sub
ja
repz
mov
pop
mov
addl
mov
sarl
cmpsl
or
mov
mov
aad
movsl
rolb
add
fsubs
lret
aaa
sbb
inc
lahf
adcb
dec
adc
pop
mov
fmuls
or
loope
xchg
repz
jle
lea
minps
xchg
adc
movsb
sbb
jle
or
fimull
mov
dec
sub
subb
fdivl
inc
jbe
mov
push
dec
sbb
aam
aam
imulb
pop
mov
mov
mov
xor
aaa
loope
mov
insb
in
test
pop
inc
out
mov
arpl
xchg
ljmp
shrb
imul
jge
fisttps
iret
or
mov
pop
inc
loope
jnp
jne
mov
dec
pop
inc
dec
fcompl
pop
pusha
inc
mov
mov
in
call
femms
push
jae
imul
xchg
dec
mov
jmp
jnp
jmp
arpl
bound
mov
sub
dec
xor
push
roll
jae
add
dec
cmpsb
xor
icebp
or
jns
jg
scas
mov
out
test
inc
out
push
call
in
adc
out
lods
daa
mov
loopne
xchg
das
inc
mov
insb
in
mov
lret
cmc
out
and
xchg
int
xor
sbb
inc
fucomip
pop
mov
icebp
test
jl
shlb
std
fs
movsb
shr
lods
pop
mov
roll
xor
mov
call
mov
mov
cmp
lods
lods
cli
sbb
adc
test
stos
loop
push
lea
mov
jne
vpunpckhqdq
jecxz
scas
mov
mov
cmp
test
loope
in
xchg
sahf
popf
outsb
mov
xchg
adc
mov
sub
lock
pop
fnstsw
push
add
fwait
xchg
cwtl
clc
adc
adc
andl
push
and
repz
ja
call
jp
movsb
and
sbb
call
xchg
mov
jo
push
int
les
jecxz
xor
cmc
xchg
mov
adc
insb
inc
shll
inc
mov
push
sti
pusha
adc
pop
push
jbe
dec
jns
mov
sub
inc
ret
enter
sbb
xchg
addr16
nop
outsb
movsb
daa
out
jmp
pusha
data16
outsl
mov
mov
jmp
inc
test
mov
jp
fildll
mov
fs
arpl
loope
xor
decb
loopne
test
addr16
arpl
sbb
and
jp
dec
mov
jbe
jo
aaa
jo
cli
dec
xchg
cmpsl
les
pusha
aaa
pop
xchg
imul
dec
and
push
mov
fs
ret
push
inc
mov
and
fstpl
inc
mov
rcrl
dec
cmp
cmp
int3
fs
push
movsb
clc
dec
mov
jl
jle
add
push
loope
mov
sarl
mov
cld
into
rcl
adc
mov
data16
jae
adc
dec
mov
mov
je
fadds
adc
dec
scas
mov
push
test
inc
inc
shlb
xchg
xchg
adc
jne
jmp
fcomps
sti
push
add
jg
lock
pusha
jmp
leave
out
std
inc
test
xchg
lcall
jp
sub
sbb
clc
push
push
add
imul
dec
in
ret
inc
pusha
in
cmp
test
outsl
daa
sbb
lcall
icebp
pop
jne
jle
push
ds
imul
lret
mov
pop
cmpsb
xor
insb
cmova
insl
je
cld
mov
es
cmp
xor
push
sub
or
es
scas
out
bnd
dec
out
dec
setle
call
dec
xchg
lret
xor
outsl
dec
out
jg
daa
sbb
and
leave
cmp
jmp
push
mov
mov
enter
mov
clc
xchg
addr16
or
and
sbb
int3
jnp
aaa
dec
fcomi
push
xchg
cmpb
daa
int
mov
xor
popf
dec
inc
xchg
ret
pop
fimull
jno
pusha
dec
jno
mov
ds
cmp
mov
pop
roll
pop
cmp
leave
outsl
ror
jp
imul
ds
and
sti
shlb
jge
inc
push
in
pop
xor
fimull
loopne
xchg
push
mov
movsl
inc
lock
sub
movsl
cmp
inc
mov
add
jb
sub
pop
stc
jo
js
mov
loop
aam
notb
movsb
adc
inc
inc
lret
inc
cli
xor
mov
cld
xor
push
jl
mov
adc
insl
jl
dec
pop
sub
cmp
dec
xor
ss
add
inc
sbb
mov
push
inc
cmpsl
xchg
leave
jmp
shlb
mov
shlb
pop
icebp
mov
dec
out
mov
pop
repnz
rolb
data16
iret
popf
push
aas
mov
rcll
icebp
stc
jl
sbb
imul
adc
aad
and
rcrl
je
xlat
ror
mov
lods
test
lods
sbb
lods
pop
and
push
jo
out
test
mov
rcll
mov
and
cmp
xchg
rolb
ljmp
leave
shrb
data16
push
incl
ljmp
cwtl
inc
in
inc
lods
mov
xchg
movsl
jmp
test
adc
cmp
int3
fdivrp
inc
in
test
jle
lods
aas
and
nop
sub
jns
mov
fmull
push
fwait
data16
xchg
push
imul
and
mov
adc
cli
adc
dec
addr16
jne
popa
xchg
popa
push
push
sbb
xor
or
insl
jge
jp
mov
jne
jmp
mov
mov
les
or
fwait
or
lock
xchg
cmp
outsl
movsb
push
repnz
jmp
add
enter
and
adc
pop
pop
dec
or
inc
pop
xor
mov
cs
jo
adc
push
mov
imul
jmp
cld
push
lods
dec
in
inc
and
mov
movsb
test
jmp
jmp
push
mov
insb
add
movsl
push
fimull
cwtl
loopne
sub
fwait
sub
jnp
jbe
or
cs
pop
lods
mov
rclb
into
iret
mov
notl
frstor
pop
shr
push
int3
mov
sub
rcrb
xor
movsl
cmpsl
lods
int3
inc
mov
fsubs
xor
pop
mov
cmp
jge
jl
sbb
mov
inc
mov
sbb
mov
shrl
push
cs
push
in
repnz
aad
psrld
sbbl
fwait
adc
push
mov
cmpsb
xchg
sub
jns
arpl
fcoms
adcl
imul
or
xchg
xchg
sti
lock
and
in
in
lods
cmp
sbb
push
enter
mov
mov
or
fisttps
and
arpl
adc
loope
stc
lock
jmp
jp
jg
xchg
icebp
jle
call
in
ds
int
orb
xchg
mov
into
fstpl
cmp
add
fstps
out
jnp
fisubrs
cmp
js
xchg
sub
mov
clc
fcompl
jmp
ret
not
sub
daa
cli
sub
sbb
jb
leave
push
testb
push
call
push
adc
in
adc
gs
dec
inc
mov
lahf
cmpb
mov
stos
setle
pop
push
fisttpll
idiv
arpl
and
mov
mov
lock
and
mov
mov
data16
pop
cmp
xor
push
cmp
sbb
scas
mov
cmp
inc
out
fsubl
dec
push
es
sahf
jg
mov
idivb
push
int3
pop
rol
push
aaa
and
xor
pop
cmp
les
add
add
inc
aas
nop
mov
or
aas
adcb
loop
nop
mov
mov
inc
icebp
xchg
lret
addr16
dec
mov
push
adc
lods
sbb
and
mov
aas
jno
shrb
jne
jp
cwtl
std
jo
lea
negb
shlb
addb
and
aaa
pop
or
rcll
adc
xor
push
push
sub
jno
mov
push
pop
repnz
les
aas
ja
loopne
sbb
cmp
mov
jne
and
pop
arpl
into
dec
sub
fcoms
mov
xchg
imul
sti
sub
cld
mov
pop
mov
adc
fisubs
pop
sbb
arpl
ljmp
sub
adc
cmpsl
movsl
mov
push
sub
push
sbb
stc
pop
dec
mov
jl
cmp
cld
adc
lods
mov
mov
test
shrb
inc
push
sub
ljmp
jno
and
xor
mov
inc
mov
cld
jb
or
or
fucomi
xor
inc
test
jp
adc
add
int3
add
shl
xor
inc
loop
dec
pop
mov
hlt
negb
test
adc
repnz
push
nop
or
test
or
orb
fs
mov
ret
cmp
jae
out
add
or
dec
es
add
std
jno
es
dec
les
ja
adc
clc
push
add
scas
jl
stc
pop
and
xor
and
leave
insb
pop
je
jo
sbb
fnsave
fildl
repz
xchg
pop
cld
fildll
cli
xchg
popa
push
movsl
pushf
mov
cmp
in
dec
dec
sub
adc
sub
out
push
xor
cmp
push
mov
adc
cmp
xchg
cs
fistpll
sbb
fnstcw
push
adc
test
sub
arpl
and
cs
loopne
daa
and
enter
insb
jl
mov
dec
outsl
mov
cwtl
mov
arpl
and
ja
ret
inc
popa
xor
aaa
aad
mov
insb
cmpsl
in
out
loope
scas
fxch
pop
call
xor
std
jne
mov
and
push
mov
fcmove
or
rcll
jbe
add
sbb
stos
scas
inc
sbbl
or
inc
and
mov
lock
rclb
das
mov
jmp
in
adcl
add
dec
push
cmp
ds
test
inc
lret
and
cli
sbb
cmp
sbb
hlt
xchg
ja
mov
aam
daa
das
push
add
xor
push
jb
jp
dec
xchg
and
sub
fldenv
mov
incl
push
fisubl
cmp
call
pop
xchg
cli
fisttpl
cmpsb
xor
in
and
sub
xlat
inc
hlt
xchg
mov
xor
inc
inc
mov
jno
imul
inc
sub
cmc
mov
repz
cli
loopne
sar
sbb
jo
mov
add
cmp
mov
dec
nop
into
mov
pop
call
lret
sbb
cs
mov
sbb
jno
js
loop
or
incb
test
fstpt
and
mov
cmp
outsl
pop
mov
ja
jo
mov
pop
js
push
cmp
push
jmp
cmp
mov
aad
lea
mov
cmp
jl
insl
or
dec
fcmovne
pop
push
inc
lea
mov
or
rorb
pop
cltd
mov
mov
ja
sub
mov
cmp
push
dec
mov
xchg
push
sbb
mov
rcll
andb
testb
xor
enter
mov
sub
subl
push
lea
inc
add
lahf
stc
pop
test
out
mov
decb
test
or
jp
das
jmp
mov
ds
sti
cmpsb
jl
dec
ffree
push
scas
jnp
mov
clc
inc
jae
jge
pop
inc
test
xor
mov
push
adc
pop
dec
in
and
cli
insl
leave
xchg
negb
xor
es
cmp
ss
jecxz
lods
aaa
mov
in
jo
pop
cli
push
lahf
push
daa
stos
or
sub
out
push
daa
pop
into
xchg
cli
jmp
cmp
clc
imul
push
icebp
pusha
xchg
xchg
fwait
movsb
jle
mov
pop
pop
das
xchg
push
xchg
je
ficomps
push
inc
daa
inc
scas
rolb
icebp
lock
call
sbb
inc
loopne
jg
call
scas
cwtl
cmp
lds
push
xchg
inc
pop
loop
jmp
dec
int
hlt
cmp
inc
in
and
sahf
ja
push
mov
xchg
mov
dec
pop
test
lock
repz
lret
into
inc
jl
jg
ljmp
mov
add
push
popf
pop
xor
mov
fwait
in
adc
jecxz
mov
jae
data16
sub
push
cmp
divb
jl
mov
repz
cmpsl
fisubs
jmp
hlt
nop
add
out
or
cli
jecxz
mov
stos
jecxz
xchg
xchg
and
and
sub
push
int3
xor
jp
imul
jae
lcall
pop
add
movl
inc
aam
or
ss
pushl
cwtl
jmp
push
jnp
cmp
lock
pop
push
jecxz
fidivl
fildl
jnp
add
sub
adc
add
leave
lods
lea
in
hlt
xor
pusha
mov
ret
test
in
dec
mov
pop
mov
jmp
out
add
jns
mov
pop
mov
jecxz
mov
push
mov
lahf
insl
in
jle
inc
mov
scas
mov
mov
movsl
sub
mov
in
and
xchg
std
add
stc
xor
mov
mov
add
lret
sbb
loop
sub
lods
out
and
sahf
popf
fildl
fscale
xorb
imul
bound
test
dec
lea
mov
xor
dec
movsb
jnp
mov
xor
bound
adc
fiadds
negb
loopne
ret
sub
mov
out
mov
push
das
jecxz
jecxz
push
movsb
jbe
mov
add
jno
or
ljmp
mov
xchg
pmaddwd
aam
ss
fwait
mov
scas
adc
add
push
push
shll
mov
in
jb
imul
mov
mov
pusha
or
ret
enter
sub
pop
sbb
pop
jl
lcall
sahf
sbb
nop
sub
insb
imul
sahf
enter
inc
cmp
mov
icebp
push
cmp
mov
mov
pop
bound
pop
daa
je
mov
fs
pushf
or
sub
push
dec
push
loop
mov
cmp
cwtl
or
mov
dec
pop
mov
insb
jmp
push
cmc
in
iret
aad
push
mov
cmpsl
xchg
sti
stc
sbb
fstps
dec
insl
pop
cmpb
cli
add
jmp
out
out
jbe
pop
push
ret
jns
xchg
mov
insb
add
mov
cmp
xchg
sub
sbb
push
cmp
ss
pushf
out
xchg
rcrb
adcl
fcmove
xor
lds
mov
adc
push
sbb
add
inc
push
leave
arpl
xchg
mov
jo
mov
jl
cs
jg
cmp
dec
dec
pop
popf
jmp
loopne
icebp
xchg
test
sarb
ret
scas
popa
mov
negb
mov
ret
inc
or
in
sbb
leave
mov
cmp
xchg
call
rclb
arpl
or
push
inc
gs
cmpsb
ficoms
lock
aas
sub
fcmovb
hlt
push
aas
stos
mov
popa
xchg
xchg
mov
les
push
xchg
fdivl
jno
mov
mov
rcr
je
mov
ss
mov
into
dec
mov
push
loop
aaa
xor
mov
push
sub
fbld
cmp
and
int
loopne
sahf
mul
test
xchg
jbe
jo
pop
lret
dec
cmpsb
adc
push
call
push
imul
pushf
andl
xorl
jo
mov
adc
aaa
pop
push
inc
call
and
js
add
int
enter
mov
js
lock
inc
adc
hlt
mov
shrl
add
jbe
mov
jp
push
mov
decb
jp
cli
out
lock
daa
push
movsl
xchg
mov
hlt
sbb
clc
lea
pop
mov
xor
setge
mov
outsb
or
scas
out
add
push
add
jg
loop,pt
mulb
adc
mov
push
xchg
xchg
jmp
pop
pop
pushl
and
pop
ds
movsb
int3
in
in
push
call
cmp
clc
inc
add
mov
leave
or
dec
xchg
dec
and
lds
jl
xchg
in
inc
cmpsl
sbb
inc
inc
in
xor
xchg
sub
push
imul
pop
test
sbb
jmp
xor
adcb
xchg
mov
out
or
push
cwtl
and
xchg
xor
or
andl
imulb
sahf
arpl
leave
ret
lret
sbb
cwtl
push
lods
scas
dec
imul
cmc
in
inc
test
negb
xchg
lock
mov
cmpsl
pushf
inc
adc
push
pusha
arpl
lcall
inc
adc
jns
mov
pop
dec
adc
jg
outsl
jne
cmp
scas
and
icebp
das
sub
movsb
loope
jecxz
repnz
xor
dec
mov
aam
inc
pop
mov
hlt
inc
sbb
pop
movsl
mov
lret
push
and
sub
jbe
je
pushf
cli
pop
sub
movsl
push
or
lea
ja
bound
fidivrl
mov
jae
jns
sub
sarb
sub
sub
movb
out
xor
notb
push
pusha
add
push
cmp
movsl
mov
rorb
cmpsb
rcl
push
dec
xchg
test
fsub
call
jge
std
cwtl
dec
addr16
int3
clc
dec
dec
shlb
imull
movsb
or
jl
in
push
or
mov
cmpsb
loop
or
bound
test
lods
insl
cltd
add
data16
sub
mov
jns
ret
flds
loop
mov
mov
clc
loope
lahf
push
adc
pop
adc
cmc
repnz
ffreep
int
push
in
sub
jnp
jmp
popa
repz
pop
mov
ds
add
popa
jmp
sub
xorb
movsl
push
push
pop
sbb
stos
dec
sbb
arpl
or
sbb
mov
add
ja
data16
dec
gs
sti
scas
stos
mov
add
cltd
jle
or
mov
mov
push
push
xlat
and
test
aas
dec
inc
pop
pop
inc
iret
and
mov
xchg
nop
sbb
sbb
jae
jecxz
stos
dec
idivl
push
sbb
jmp
jmp
xlat
fcomps
stc
xchg
cmpsl
jno
mov
sbb
or
sub
fsubl
fistl
les
xchg
out
and
jmp
mov
je
adc
xchg
insl
and
ret
stc
loop
jge
cmp
cmp
push
cltd
cmp
jmp
sbbl
xchg
or
pop
sti
xchg
shl
or
pop
nop
push
or
cmp
dec
jge
push
pop
xor
jno
inc
pusha
cmp
or
add
ret
sbb
lods
cmp
push
inc
dec
sbb
pop
lods
inc
inc
ret
xchg
imul
push
xchg
mov
ds
mov
jle
ror
cltd
inc
jp
dec
ret
dec
sarl
das
out
mov
loopne
mov
jg
jno
inc
stos
jp
inc
and
mov
cmp
bnd
xchg
subb
nop
pop
loop
lret
sarb
cmpsb
stos
lret
cwtl
xor
rcl
xchg
popa
push
cmp
sub
xchg
ds
push
ret
scas
rcrb
stc
ret
cli
shlb
push
adc
pop
xor
inc
xchg
cmpsl
mov
adc
loopnew
decb
inc
add
adc
popf
add
lods
out
cli
inc
mov
mov
mov
or
in
lods
mulb
out
xor
xchg
dec
push
mov
xchg
dec
clc
add
add
hlt
leave
lret
xchg
pop
addl
dec
mov
xor
cmpb
jo
mov
jae
in
cmp
sbb
dec
stc
mov
call
ret
jbe
and
movsl
fwait
dec
sbb
adc
jecxz
js
inc
jbe
sub
test
popf
cmp
enter
in
mov
pop
adc
aam
popa
jmp
mov
sahf
cmp
pusha
insb
add
jae
cmp
ret
andb
inc
sbb
mov
nop
cmc
push
cmpsl
inc
test
test
imul
push
int3
sub
jle
xchg
mov
mov
inc
or
jbe
cmpl
pusha
inc
and
aaa
int
lret
sbb
push
dec
out
mov
push
scas
in
int
test
dec
lret
or
daa
adc
and
hlt
adc
int
mov
xlat
xchg
add
stos
adc
cmp
std
sub
pop
aad
and
ficoml
out
or
fstpl
pop
or
pop
ficomps
or
cwtl
jno
lods
movsb
movsl
xchg
aad
aas
adc
loop
and
add
ja
or
std
xor
aam
movsl
fcmovnu
xchg
pop
ret
sub
int3
shrd
dec
in
js
xchg
pop
pop
jns
xor
les
testb
cwtl
sub
lret
cmp
sub
lods
push
fstps
test
or
movsl
jl
cld
push
fwait
imulb
add
push
adc
arpl
enter
add
dec
das
mov
cmp
test
sub
cwtl
movsb
inc
nop
fidivl
fadds
jl
std
and
pop
addb
in
adc
and
mov
dec
cmp
cbtw
dec
adcl
pushf
push
xor
pop
cli
adc
daa
jnp
cmpsl
stos
mov
and
aad
sub
inc
pop
mov
mov
xor
imull
pusha
fucomip
std
cmp
data16
push
cmp
into
mov
lods
aaa
test
dec
jae
cld
mov
jb
pand
aas
pop
bound
pushf
xor
mov
scas
sub
ret
cmp
ret
fwait
push
xor
insl
pop
push
jne
xchg
or
lret
mov
addr16
jg
mov
mov
pushf
jbe
fstpt
lods
jo
cmpl
je
aam
jg
testb
cmp
add
fdivl
xor
lret
call
jnp
cmp
mov
mov
lcall
je
mov
sbb
adcb
mov
xlat
jnp
pop
add
mov
xlat
pop
push
push
jg
jecxz
leave
lods
xor
xchg
sub
fsubp
in
jno
repnz
cltd
dec
xor
call
call
jae
mov
adc
pop
and
ja
ss
ret
lods
mov
pop
cmp
mov
das
inc
mov
lods
outsb
push
sbb
sub
ds
inc
cltd
pop
cmp
mov
enter
sub
enter
es
mov
test
popf
stos
ljmp
mov
dec
dec
out
cmpsl
jl
jl
dec
inc
mov
scas
cmp
xchg
mov
mov
out
addr16
inc
push
jae
inc
jecxz
sub
insl
jmp
testb
inc
hlt
pusha
or
mov
add
ret
cmp
aad
ficomps
sub
stos
adc
ljmp
inc
neg
lret
movb
loopne
jnp
add
cltd
push
outsl
cltd
lret
push
icebp
lcall
lea
mov
pop
push
cmpsl
movsl
xchg
pop
inc
aad
mov
mov
push
fwait
sahf
inc
xor
gs
xchg
sti
or
ret
adc
push
cmp
stos
movsl
jmp
insl
call
lret
or
sbb
lods
mov
and
lods
mov
add
xchg
push
jl
inc
adc
into
dec
xlat
mov
in
inc
repz
rcll
jns
mov
int
xchg
inc
dec
pop
stos
jp
add
inc
sahf
and
add
push
outsb
insb
or
mov
cmpsl
inc
add
ret
xor
sub
or
xchg
mov
lcall
pop
fldlg2
jbe
in
jecxz
push
cmc
lahf
loop
pop
lahf
das
pusha
xchg
leave
inc
sbb
mov
mov
mov
fstp
loopne
mov
mov
popa
sub
aas
dec
mov
cs
fcomps
push
lahf
inc
push
sbb
mov
mov
faddp
push
add
popa
push
inc
sub
mov
push
arpl
ja
sub
mov
push
adc
cmp
dec
call
jbe
ja
ret
insl
jg
dec
xor
dec
lret
pop
lods
cmp
insl
cmp
push
xchg
and
mov
aam
pop
inc
and
push
xor
pop
rorb
xorl
or
cmp
pushf
out
outsl
cld
faddl
dec
in
and
mov
mov
in
cmp
xor
ret
add
sub
xchg
call
and
push
pusha
loope
shll
mov
jg
int
cmpsl
mov
hlt
jg
lods
mov
pop
call
in
ss
cwtl
nop
cmpsl
mov
fbld
pusha
mov
shll
out
test
hlt
jge
jle
sub
sub
out
push
int
mov
sbb
sub
add
aam
orl
out
incb
iret
int3
inc
mov
cmpsl
pop
jecxz
fs
xchg
mov
cltd
push
cmp
cld
dec
and
inc
out
pop
cmp
int3
pop
dec
dec
pop
iret
sbb
popa
mov
and
sbbb
das
adc
repz
popf
outsb
sbb
leave
mov
lods
sub
hlt
in
popl
stos
aad
sub
mov
pushf
dec
test
jg
jnp
lret
daa
lcall
or
xchg
popa
xchg
in
pusha
loope
jb
in
push
int3
pop
out
xchg
data16
mov
sub
leave
int
mov
pop
ljmp
cmp
push
hlt
sub
movsb
mov
or
add
mov
popa
xor
outsl
mov
and
pop
iret
data16
cmp
pop
test
data16
jne
cltd
clc
mov
lock
sub
std
pop
hlt
push
add
call
imul
dec
testl
dec
pop
jmp
sahf
sub
push
mov
lret
adc
rcll
lahf
adc
ret
xchg
xchg
rolb
and
in
sbb
pusha
cmpsl
rcll
push
movsb
pop
cld
xchg
mov
imul
xorb
ficoms
jmp
out
sahf
andl
sbb
test
sub
lahf
inc
fmul
aas
cli
les
daa
nop
lock
and
adc
call
inc
jecxz
aaa
mov
dec
xlat
jmp
push
loop
in
pop
dec
xor
movsb
outsl
cmp
mov
jo
les
jbe
test
pop
call
imul
test
or
cmp
mov
out
sbb
or
imul
jg
sbb
lret
add
lock
cs
pop
out
ret
mov
int
xchg
add
pop
mov
push
mov
sarl
pop
sahf
jno
mull
js
div
inc
test
inc
xor
dec
bound
ret
movsl
cmp
pop
call
adc
sbbb
mov
xchg
and
call
xchg
sti
cwtl
inc
rclb
inc
inc
pop
or
sub
and
mov
fdivr
std
cmp
adc
test
sbb
add
daa
stc
jbe
xchg
rol
sub
scas
pushf
mov
ja
stos
mov
jns
add
fldt
add
xor
lods
iret
mov
cmp
movsb
push
mov
cwtl
mov
add
popf
subb
xlat
pop
inc
in
push
jg
mov
dec
ret
adc
aaa
int
jp
add
pop
mov
in
sbb
mov
push
xchg
ss
sti
stc
xlat
or
icebp
jne
lret
rorb
jmp
sub
xor
pop
mov
scas
mov
cmpsl
les
test
cmp
mov
decb
popl
and
push
inc
mov
pop
xor
add
out
aad
jl
pop
js
adc
lds
inc
xlat
push
in
int3
movsl
mov
imul
push
clc
das
pop
test
adc
lret
lcall
movl
inc
push
dec
inc
inc
jp
int
add
push
insb
andb
lods
mov
in
inc
aaa
or
add
and
outsl
push
pop
and
push
enter
out
sbb
sahf
mov
xor
test
dec
jae
loopne
mov
lods
in
cmp
sub
fwait
shll
inc
ja
test
movsl
lods
fisttpll
add
dec
push
out
mov
mov
xchg
mov
mov
int
hlt
fisttps
jne
rcrb
and
push
jns
pop
aaa
dec
or
repz
push
cmp
sub
arpl
sbb
pop
sub
pop
inc
outsl
sub
out
lret
mov
arpl
mov
out
imul
pop
hlt
mov
inc
sub
in
fcoml
add
mov
pop
xchg
xor
aaa
pushf
jbe
mov
jecxz
jmp
js
nop
ret
or
inc
mul
or
and
lds
mov
dec
dec
add
int
mov
mov
or
xchg
lods
xchg
xchg
lods
xlat
icebp
into
jo
ds
rcr
adc
and
lods
lods
stc
inc
lret
je
mov
jg
xlat
mov
sbb
add
in
sbbl
test
jge
xorl
mov
data16
and
pop
xchg
or
xchg
lret
mov
lcall
ds
ljmp
ret
pop
xchg
into
pop
mov
ret
fldl
repnz
pop
ja
stos
jl
pop
fstpt
es
out
daa
test
imul
js
mov
sub
jp
lahf
mov
ss
hlt
add
clc
lods
mov
add
stos
cwtl
or
pop
enter
les
ljmp
xchg
sbb
jne
lcall
inc
inc
pop
dec
or
lcall
outsb
jle
stos
pop
mov
into
lock
jbe
js
es
repnz
mov
push
stos
addb
movsl
pop
sbb
cmpsb
gs
leave
and
push
int
adc
cmp
call
ja
bound
pop
lcall
cs
fidivrs
pop
fwait
cmp
xchg
fcoms
inc
push
test
popa
repz
inc
sbb
pop
cmp
sbb
in
dec
lcall
cli
adc
ss
mov
daa
xor
repz
clc
ret
das
mov
out
cld
std
sub
adc
mov
andb
mov
dec
jbe
scas
xchg
mov
and
mov
arpl
in
in
push
jp
jo
jne
test
cltd
aaa
out
dec
and
loopne
aad
adc
out
mov
xchg
pop
jmp
les
or
cwtl
mov
mov
repnz
fisubs
outsl
enter
aam
call
or
fsubl
mov
jmp
push
adc
mov
popa
add
lcall
xchg
cmp
push
data16
jecxz
push
add
jns
and
int3
mov
scas
add
jbe
mov
or
mov
and
sahf
pop
xchg
cli
cmpsb
out
xor
add
sbb
cmpl
xlat
outsb
roll
cmp
mov
daa
test
jne
mov
mov
out
cwtl
xchg
popa
out
xchg
sub
jnp
test
sub
inc
aad
or
arpl
fisttpl
mov
rol
xchg
xchg
popa
pop
out
pushf
hlt
out
push
test
in
rcrb
popa
stos
or
push
dec
xchg
or
cld
in
xabort
push
popf
lods
int
jne
or
out
push
mov
lods
adc
dec
cmp
cmpsb
loop
adc
pop
push
or
mov
scas
xchg
dec
repz
leave
ret
dec
sub
mov
mov
xor
push
iret
inc
sub
mov
out
lret
pop
loope
mov
cltd
push
mov
clc
adc
sbb
loope
and
xor
aam
jb
inc
pop
inc
iret
lods
sub
jge
ljmp
gs
or
push
fadds
cltd
int
out
or
xor
mov
or
cmp
sbb
mov
lret
dec
mov
jmp
push
imul
or
das
sub
lahf
cld
or
test
dec
outsb
addr16
and
cmp
int3
fildl
mov
xrelease
sbb
jns
in
mov
hlt
pop
sbb
and
mov
sub
int
cmc
mov
xchg
sbb
pop
mov
aas
sti
dec
pop
das
dec
mov
push
fsubrp
add
mov
cltd
into
push
movsl
leave
out
mov
movmskps
sbb
or
cmc
xor
lock
jb
inc
and
daa
dec
jnp
iret
mov
dec
dec
cltd
mov
pop
negl
and
mov
jb
pop
jae
dec
xor
jl
cmp
hlt
xlat
or
faddl
or
adcb
aas
movsl
cmp
jns
not
push
mov
sbb
mov
icebp
or
stos
pop
or
insb
mov
mov
hlt
pop
lret
outsb
stos
cmp
xor
jge
in
pop
cmc
lret
add
mov
bound
jmp
shrl
xchg
cmp
push
andb
xorl
out
push
out
xor
mov
imul
and
xchg
mov
leave
mov
jl
shlb
lods
add
xchg
notb
xchg
mov
and
ds
stc
andb
push
adc
push
mov
jmp
fidivl
jae
lods
adc
mov
imul
xor
cmp
daa
push
movsb
lods
nop
clc
jp
push
xchg
movsl
pop
sub
mov
add
inc
pop
addr16
mov
push
test
jae
xchg
inc
jecxz
ret
ficompl
data16
add
out
pushf
mov
arpl
mov
out
dec
jge
mov
sahf
lret
cmp
cli
mov
ret
mov
std
mov
jge
xchg
cmp
icebp
btc
xchg
mov
repnz
jne
sub
dec
push
sbbl
testb
mov
mov
sbb
mov
jnp
cld
icebp
movsl
je
push
sbb
inc
js
test
mov
xor
xchg
inc
imul
push
pushf
in
adc
repnz
bound
cmpsl
les
xchg
push
mov
outsl
pop
push
jmp
sbb
pop
sbb
cmp
pop
ret
push
xor
dec
push
or
mov
pop
nop
loop
jns
js
add
add
push
pop
lods
xor
fimull
jecxz
adc
sub
mov
xchg
mov
subl
lea
stc
lcall
data16
scas
xor
testl
lahf
jnp
icebp
rcr
pop
pop
cmp
push
cmp
cmp
adc
ja
mov
daa
pop
pop
mov
sbb
aam
or
xor
mov
aam
scas
test
xchg
stc
and
out
insb
or
ljmp
ja
fnstsw
insl
out
mov
mov
mov
sub
lahf
lods
lock
jae
jp
mov
xchg
mov
arpl
loopne
cmpsl
add
lods
and
xchg
xchg
pop
imul
or
fs
xchg
mov
or
dec
popf
sub
push
sub
push
mov
jecxz
aad
jbe
inc
mov
add
jge
mov
or
mov
test
sbb
adc
test
stos
adcb
out
hlt
xlat
test
fildll
lcall
adc
test
cmp
arpl
pop
inc
mov
sbb
call
sbbl
sbbl
sbb
sub
pop
mov
pop
inc
insb
mov
lock
in
not
sbb
fsubrp
jle
clc
xor
cmc
outsl
aaa
test
mov
repz
js
mov
push
cmp
or
loop
xor
cmp
fsubr
mov
mov
pop
pop
pop
and
repnz
xor
fld
or
dec
or
sbb
iret
cmp
lea
mov
mov
decl
jno
pop
push
pusha
push
cwtl
fwait
ja
imul
fildll
jae
rolb
out
out
fimuls
inc
inc
sub
out
xchg
scas
mov
aam
movsl
mov
scas
stos
lret
lret
dec
dec
add
and
pop
inc
inc
and
mov
push
push
mov
rol
fs
xchg
fsubrl
push
in
xchg
dec
lret
pop
in
cmp
mov
xor
dec
mov
cmc
test
pusha
inc
cltd
pop
mov
xor
movsl
movsb
lret
push
in
mov
and
mov
jnp
mov
mov
leave
subb
push
mov
mov
outsb
push
add
mov
adc
push
or
jle
js
cmp
hlt
in
jg
sarl
xor
inc
aad
sbb
out
cli
rorl
sbb
add
fnstsw
cmp
lods
mov
sbb
call
dec
sub
dec
add
or
inc
repnz
fstpl
popf
das
add
call
xchg
mov
xchg
and
cmp
adc
loop
data16
fidivl
ficoms
out
das
sub
inc
popa
mov
push
mov
rcrl
jb
jge
adc
and
and
mov
and
loope
adc
and
popa
push
mov
add
inc
jp
movsl
adc
notl
je
jns
cli
cs
das
mov
arpl
pop
mov
push
fstps
adc
aam
pop
or
popf
sbb
pop
mov
nop
and
mov
cld
leave
test
dec
sub
int
call
outsl
sti
iret
fs
pop
ret
sarl
frstor
push
cmp
popf
push
xchg
push
popa
adc
insl
mov
idivl
enter
or
pop
ffree
sub
sbb
pop
mov
sub
xor
popa
clc
fcmovnu
std
icebp
fisttps
insl
outsb
mov
pop
pop
or
push
fndisi(8087
sbb
in
jle
sarl
sbbl
xor
xor
push
inc
mov
inc
mov
push
xchg
enter
xchg
mov
pop
jge
and
out
sub
femms
jno
sub
jmp
sbb
fisubrs
xchg
cld
cmp
lret
push
hlt
cmpsl
or
test
in
add
fisttpl
adc
lcall
iret
enter
cmp
or
aam
imul
scas
lret
adcb
sub
lret
cmp
fcoml
data16
nop
push
aaa
sahf
pop
sarb
jbe
subb
aaa
mov
mov
cli
push
sbb
mov
aas
lcall
dec
mov
rcrb
add
ficomps
pop
mov
lahf
mov
or
dec
fnstenv
sub
movsl
loop
hlt
adc
out
ljmp
sub
lcall
std
data16
mov
xchg
mov
or
rolb
xchg
mov
cmpsb
or
int3
dec
jae
mov
jge
shl
fidivrl
push
insl
in
push
les
sbb
hlt
adc
mov
push
enter
les
lds
nop
les
cld
aas
xchg
addb
pop
jmp
mov
add
cmc
pminsw
and
daa
mov
cmp
ljmp
in
push
and
loop
inc
xchg
fbstp
insb
jno
sub
fisttpll
ret
cmp
mov
inc
sub
adc
les
mov
or
sub
jo
sub
test
xchg
xor
jae
hlt
scas
lods
clc
lahf
xor
jbe
nop
push
and
inc
ficomps
or
jb
jge
es
add
loope
sbb
inc
scas
push
sbb
test
mov
loope
rol
xor
addr16
lcall
dec
pushf
cmp
or
pushf
ds
mov
mov
cmp
subb
scas
cmp
add
lahf
inc
sub
inc
fcomps
inc
xor
pushf
mov
push
push
mov
mov
xchg
shlb
sub
mov
cmp
lcall
shll
filds
subl
gs
xchg
xchg
lret
nop
popa
xchg
sahf
daa
gs
popf
scas
push
mov
out
mov
cwtl
loopne
cmp
pop
cmp
and
cmp
xor
sub
xor
xchg
lods
fisttpll
std
loope
mov
lock
in
out
shl
or
push
les
enter
scas
adc
adc
push
pop
sub
push
aaa
mov
jecxz
inc
std
jmp
incb
lcall
jo
xchg
mov
pop
mov
xor
push
mov
fldl
lds
lock
pusha
call
xchg
mov
mov
mov
sbb
push
fnstsw
xchg
lds
movsl
add
ficoms
fwait
add
mov
ror
enter
and
cs
cmp
pop
and
xor
add
in
xchg
sahf
cli
fld
pushf
pop
cld
push
xor
xor
lahf
icebp
mov
insl
lock
popa
or
pop
out
xchg
aaa
ja
pop
jae
enter
cwtl
dec
je
mov
fmul
adc
xor
add
dec
arpl
popa
sarl
sti
notl
or
jp
mov
or
xchg
jnp
cmp
imul
cmpsl
sti
mulb
test
mov
mov
ud0
jo
and
test
cltd
and
cmc
sbb
repnz
shll
inc
addr16
mov
jmp
sbb
add
xor
lcall
sti
aas
jnp
lods
test
pop
outsl
aas
cwtl
mov
jbe
repz
addr16
imul
pop
push
add
fnstcw
aad
mov
lret
push
mov
icebp
jb
mov
xchg
pop
out
les
ss
cmp
push
jp
inc
inc
test
push
adc
pushf
std
mov
mov
jg
mov
sbb
and
sbb
jae
mov
cltd
stos
repz
add
bndldx
adcb
out
pop
adc
inc
mul
mov
es
mov
inc
movsb
dec
adc
sub
popl
mov
cs
or
lods
cld
cs
mov
divl
and
xor
inc
sarl
xor
aaa
ljmp
add
and
xchg
mov
mov
dec
sahf
mov
pop
mov
pop
enter
sbb
cmp
lcall
adc
mov
aaa
frstor
cmp
jmp
or
xchg
mov
mov
mov
inc
sub
xorl
mov
push
add
out
add
xor
push
xlat
push
push
xlat
mov
mul
dec
cmp
mov
mov
aam
fucompp
cmpl
dec
icebp
nop
cli
roll
sub
lahf
test
or
shr
in
jnp
int3
jo
xchg
push
or
jnp
pop
arpl
sub
in
scas
aaa
shll
push
jns
mov
repz
mov
cld
jp
adc
incl
pop
les
push
lock
pop
mov
sub
adc
test
cmp
int3
lock
gs
jb
mov
inc
std
xor
adc
mov
and
mov
sbb
clc
or
mov
push
leave
inc
in
sub
dec
push
in
sub
cmp
fdiv
and
xchg
and
pop
sahf
add
adc
jb
adc
icebp
pop
pop
inc
enter
cld
mov
popa
add
push
lods
jmp
xchg
inc
lahf
pop
jge
or
out
mov
jp
jne
inc
lods
push
repnz
imul
insb
xor
fwait
push
xorl
xchg
sbb
pusha
sbb
xchg
mov
sarl
push
jmp
int
imul
jecxz
fistps
pop
lcall
ljmp
jmp
scas
mov
lret
in
cld
out
mov
inc
sti
jle,pt
mov
pusha
adc
xor
pusha
and
pop
inc
fcoml
test
sub
add
push
ds
push
shrb
imul
int
xchg
ja
xorl
dec
dec
jecxz
fistl
and
imul
mov
pop
out
cmpb
add
sahf
call
jne
push
pusha
enter
mov
adc
pop
push
int3
loop
or
cs
jp
jne
or
les
lcall
in
inc
inc
pop
sub
add
fldcw
dec
outsb
and
lds
and
and
mov
pop
lcall
xchg
xchg
push
push
xchg
test
mov
jne
insl
loop
ja
jge
pushl
scas
outsl
ds
les
inc
lret
mov
filds
es
cmp
subl
mov
out
pop
jg
div
mov
inc
push
mov
mov
gs
cmp
push
or
neg
cmovs
push
xchg
or
mov
mov
xchg
adc
lds
faddl
and
fcoml
int3
adc
int3
sub
cmp
jle
push
imul
jle
fcomp
jp
mov
xchg
xchg
dec
dec
push
jnp
mov
xchg
mov
mov
call
pop
cld
sbb
incb
orl
pop
sub
fists
mov
pop
inc
ficoml
insb
iret
lret
pop
mov
sbb
rorl
or
lahf
mov
sub
sbb
push
imul
in
sub
ljmp
push
into
push
mov
movsb
shrl
mov
inc
mov
sub
pop
xchg
cmp
mov
mov
push
ljmp
add
sbb
jmp
add
popa
inc
pop
mov
push
mov
gs
mov
lret
gs
scas
push
mov
jmp
and
enter
rcl
ret
cmp
push
popa
iret
sub
sub
mov
push
mov
inc
insb
fisubrl
in
mov
inc
lcall
loop
aad
sub
cmpsl
aas
pushf
fcompl
or
leave
and
fucomp
addb
jl
std
add
adc
out
lret
xchg
in
mov
cld
hlt
pop
enter
push
cmp
cmp
stos
pushf
xchg
jnp
cmp
jbe
inc
inc
inc
or
lret
je
sub
and
mov
sub
int3
sbb
mov
pop
aam
into
cmp
mov
push
add
add
fiadds
or
leave
inc
incb
jno
mov
fnsave
pop
mov
arpl
and
out
ss
adc
jecxz
cmp
mov
jb
addr16
mov
fsts
shrl
add
mov
in
pop
lea
and
cli
xor
cwtl
mov
jg
push
in
mov
nop
jg
fistl
xor
push
xor
into
push
mov
incb
jg
and
push
imul
jns
outsl
bound
sbb
mov
lcall
xchg
push
test
cltd
scas
and
mov
fdiv
mov
adc
ljmp
or
sbb
push
xchg
icebp
jbe
int3
sub
pushf
fwait
jl
jns
xor
mov
test
shl
xchg
je
or
out
mov
sub
and
mov
sub
jo
std
lock
gs
xchg
mov
hlt
push
jmp
out
xchg
jne
mov
jb
cld
pop
or
shlb
notb
lods
sbbl
leave
adc
sti
arpl
in
mov
cmp
jmp
sub
sbb
mov
cli
push
ja
dec
repnz
push
ljmp
stos
loope
adc
clc
xchg
jne
add
je
das
jmp
adc
push
iret
xchg
mov
sbb
loop
ja
and
scas
mov
and
jmp
sbb
fdivrl
roll
inc
cmp
into
or
shlb
add
pop
jmp
loope
sbb
lahf
loop
imul
test
insb
in
sahf
adcl
add
adc
sahf
dec
sbb
test
lods
daa
and
mov
cs
inc
cs
shrl
mov
aam
xlat
jecxz
in
inc
fwait
scas
xchg
mov
xor
imul
pop
fwait
and
ret
fcoml
or
adc
dec
dec
leave
dec
loope
pop
sahf
xchg
fisubrl
lds
iret
clc
lret
push
loope
and
rcll
iret
popa
push
and
ss
lods
pop
lret
push
repz
xor
movsl
adc
lfs
adc
jo
pop
mov
pop
push
outsb
mov
or
dec
ret
sbb
je
or
jns
sbb
or
or
movsl
jl
xor
int3
jge
mov
std
jmp
data16
mov
aas
ss
mov
or
adc
cmpb
repz
stc
leave
into
xor
xor
outsb
stc
pusha
int
je
lret
xor
sub
icebp
dec
inc
rcll
jl
stos
sub
gs
in
enter
stos
into
inc
idiv
movsl
pop
xlat
add
mov
jp
mov
pop
cmp
das
mov
movsb
mov
loope
shll
mov
sub
fisubrs
adc
adc
xor
mov
sbb
gs
aas
std
adc
lock
mov
int
sbb
mov
inc
paddb
stos
leave
cmp
cltd
inc
movl
and
jns
lcall
fdivrs
or
out
in
in
xchg
call
sub
pop
into
dec
lahf
fwait
pushf
mov
xchg
mov
jmp
in
pavgb
adc
jle
jle
mov
nop
mov
dec
sti
pop
insl
popf
adc
stc
and
mov
shl
xor
in
aad
and
sub
les
mov
mov
lea
or
out
aas
sbb
pop
into
sbbb
es
in
std
mov
mov
xchg
stos
mov
mov
dec
pop
std
sbb
test
movsb
cmp
push
dec
add
adc
add
aas
aaa
xchg
aas
test
or
xchg
mov
jecxz
popa
sub
nop
sub
addr16
xchg
pop
push
sti
pop
ret
mov
lcall
dec
pop
or
jp
pop
enter
scas
in
call
es
aaa
cltd
mov
inc
push
xchg
lods
loop
mov
je
xor
adc
mov
sub
cmpsb
mov
in
mov
int3
stos
dec
xchg
or
loope
jb
ret
add
lds
push
test
xorl
clc
sbb
and
mov
sahf
sarl
jle
add
pop
lret
dec
jns
cmp
cmpsl
sbb
cli
movsb
pop
jb
test
flds
add
pop
ljmp
xor
pop
sbb
cmp
sub
sbb
xchg
lock
fsubrs
mov
and
fdivrl
sbb
jnp
repnz
xchg
ja
ror
mov
push
pop
mov
in
and
lea
sbb
sub
std
cs
repnz
insl
pushf
pop
lcall
cmp
mov
push
dec
adc
pop
mov
jbe
in
dec
lock
push
mov
or
mov
dec
insb
adc
lock
out
cmp
jge
sub
lea
das
push
ja
push
inc
push
or
in
idivl
pusha
cmpsb
and
xor
fldl
or
add
mov
xchg
and
or
stc
fwait
lret
rcll
mov
loop
xchg
pop
lock
adcb
imul
jmp
push
lahf
inc
mov
test
cmpsb
cld
adc
lds
in
jge
and
jns
adc
repz
out
jo
fsubp
hlt
pop
fcomp
ss
jmp
xor
mov
jp
fldl
fs
adc
xor
and
roll
shll
fstps
clc
lock
push
dec
add
dec
nop
jno
or
cmc
sbb
pop
in
imul
push
xchg
mov
test
icebp
test
pop
xchg
sbb
int3
xor
js
imul
xor
mov
jp
fsubs
mov
ja
hlt
mov
insb
fisttpl
daa
in
mov
fdivrl
in
fidivs
dec
sahf
stos
and
lss
fidivl
into
rol
icebp
mov
rcl
push
in
aas
and
scas
mulb
lret
mov
jbe
ljmp
jl
shlb
push
add
inc
mov
notl
jne
lea
mov
arpl
sti
adc
test
cld
push
mov
cmp
jecxz
clc
inc
sub
pop
stc
push
leave
aad
push
sbb
rolb
insb
jae
mov
iret
lds
mov
pushl
pop
pop
cli
imul
ret
mov
std
in
or
push
lds
decl
popa
jnp
cmp
cmpsl
cmp
hlt
jmp
mov
sbb
dec
mov
daa
xlat
mov
mov
fcom
push
jp
xor
push
gs
in
mov
leave
mov
jne
fsubrs
pusha
push
sti
enter
div
loop
pop
insl
loop
sub
jle,pt
mov
bswap
cld
jmp
orl
cmpsb
notb
lock
movsl
js
ja
adc
daa
ja
int3
mov
push
mov
testl
enter
loop
out
ficompl
xorb
pop
sub
call
fldenv
out
arpl
out
out
les
pop
lcall
adc
in
xchg
sub
pusha
jo
aad
dec
push
cmp
shrb
dec
call
popa
inc
or
movzwl
or
loope
rclb
pop
repnz
push
fbstp
lahf
cmp
rcrl
sti
jg
data16
cld
mov
mov
sahf
imul
cmp
pop
mov
push
data16
fsubrs
cmp
cmp
fmuls
add
lcall
js
jp
mov
mov
push
iret
imul
leave
inc
fisubs
scas
imul
push
sbb
xchg
jnp,pt
xor
rolb
push
mov
les
dec
dec
adc
outsb
mov
mov
xor
push
call
dec
jb
add
aaa
cwtl
call
cmp
jl
clc
dec
inc
pop
jmp
dec
inc
add
daa
inc
les
add
jno
cmp
mov
lea
adc
add
jg
mov
sbb
ljmp
popl
jmp
xor
repnz
aaa
lea
lds
push
jo
cmp
add
pop
in
sub
mov
outsb
test
xchg
push
adc
les
adc
sub
out
push
dec
cli
loopne
push
dec
jno
dec
xchg
inc
in
mov
jecxz
mov
fsubrl
flds
inc
popf
sbb
mov
dec
in
test
ret
cmp
mov
sbb
push
adc
jae
sub
nop
jl
iret
aam
or
ss
jo
and
outsb
into
cmp
inc
mov
lcall
les
sub
inc
pop
or
das
or
popa
ja
cmc
mov
fwait
out
pop
inc
loop
xchg
je
mov
stos
fisubs
fwait
sub
dec
inc
popf
daa
sbb
sub
bts
aas
lods
push
in
add
add
mov
xlat
insb
loopne
pusha
data16
and
cmp
rcr
mov
jl
cmpsl
shrb
loope
addr16
leave
add
push
sbb
xor
or
xchg
sahf
cmp
test
mov
push
mov
or
stc
pop
inc
arpl
adc
lods
xchg
sbb
stc
push
enter
mov
nop
or
mov
mull
jo
mov
push
mov
push
mov
mov
enter
test
xor
lods
jmp
arpl
loopne
pop
in
mov
xchg
dec
int3
mov
dec
ja
mov
dec
dec
inc
push
or
stos
sti
arpl
int3
xchg
mov
sub
sti
imul
push
aam
lcall
adc
cmc
lcall
nop
jecxz
addl
je
xchg
fucom
pop
jecxz
push
and
jg
or
xchg
xchg
popa
divl
loopne
mov
or
lret
pop
or
pusha
push
push
ret
add
shr
decb
fwait
pop
subl
js
pop
int3
mov
lcall
mov
jmp
mov
jns
sbb
xor
pop
mov
sbb
loop
dec
xor
dec
xor
and
cs
inc
lds
xor
in
pushf
ret
data16
das
inc
cmc
adcl
cmp
or
lahf
mov
decb
into
fcos
inc
pop
xor
push
mov
push
push
aad
movsb
sbbl
sbb
repnz
xchg
mov
mov
sbb
sbb
pop
xchg
mov
jbe
sub
mov
cmp
dec
std
ret
add
enter
add
and
xchg
jmp
sbb
inc
xchg
cmpsb
adc
lret
stos
sub
add
leave
xchg
in
push
jnp
jae
iret
nop
mov
jns
subl
ss
iret
jne
int3
shrb
pop
in
inc
push
mov
pusha
push
jge
ja
fistpll
push
and
ja
in
mov
push
hlt
jnp
test
jp
sub
nop
aad
push
arpl
ja
pop
rcrl
pop
xor
aaa
sbb
aad
mov
negb
jb
sub
les
jb
mov
gs
adc
lock
addr16
insl
mov
pop
ljmp
lock
sub
mov
insb
xlat
sub
push
dec
dec
cmp
fistpl
jno
das
ljmp
nop
mov
lds
data16
sbb
and
pop
mov
insl
add
mov
int
insb
and
lea
aas
and
and
aas
add
fs
adc
sub
pushf
mov
aas
cltd
mov
sbb
lock
xor
or
sahf
rcl
in
insl
setg
adc
jecxz
xor
lretw
mov
ror
fdivs
jp
jns
push
jbe
sbb
xchg
inc
xorb
pop
inc
sub
adc
jne
test
js
addr16
push
dec
push
and
mov
and
sbb
pop
mov
mov
xor
lea
adc
rcrl
pop
inc
stos
loope
mov
jb
and
mov
adc
subl
jb
shrb
lcall
push
mov
stc
mov
cli
push
mov
and
ficoms
add
iret
push
aad
test
add
pop
in
rclb
add
mov
sub
jo
mov
jg
ret
dec
pop
xor
mov
loope
ss
test
jl
or
mov
mov
xorw
dec
lahf
fsubl
xchg
stos
adcl
mov
or
push
sahf
pop
and
cmpsb
jmp
jl
xchg
jo
xchg
or
cmp
out
mov
jno
outsb
xchg
in
push
rolb
cmp
mov
ret
adc
add
out
add
lods
mov
jmp
neg
mov
outsb
insb
movsb
roll
xadd
add
lahf
sbb
jbe
iret
mov
aas
dec
scas
scas
arpl
push
dec
setns
sbb
dec
mov
jp
dec
push
mov
adc
cld
lcall
jecxz
lds
xchg
mov
sbb
and
psrad
std
sub
out
pop
mov
push
push
sar
subb
inc
out
aad
pop
xchg
lds
inc
push
cmovns
mov
dec
sub
aam
mov
shl
jmp
xchg
in
ret
into
dec
cmc
rclb
mov
mov
adc
pop
or
pop
sahf
shlb
mov
sub
and
mov
push
sbb
jbe
or
mov
insb
repnz
fldenv
pop
test
dec
jb
dec
adc
sbb
int
push
xchg
cmp
push
outsl
pop
push
sbb
add
xchg
mov
sbb
push
testl
push
mov
lea
xor
and
jl
sbb
mov
jnp
loop
cmp
xchg
inc
in
push
add
adc
xchg
pop
jo
and
adc
sarl
lea
xchg
and
repz
cmp
movsl
jbe
lahf
mov
adc
sub
inc
inc
mov
sub
or
sbb
loop
dec
cmc
loope
sbb
push
mov
pop
mov
xor
adc
pop
mov
pop
xchg
mov
cmc
mov
in
into
loopne
push
push
pusha
mov
sbb
mov
js
pop
imul
add
mov
xor
aas
add
jge
mov
and
and
pop
mov
insb
mov
xor
ja
fs
rcrb
sub
inc
and
add
leave
mov
or
gs
std
les
pop
mov
adc
ficoms
add
decb
lret
or
subb
add
andl
cmc
faddl
rdmsr
aas
mov
notb
cmp
adc
push
xchg
in
mov
push
xchg
mov
mov
test
aaa
fbld
scas
mov
ss
inc
add
loope
adc
fdivs
pop
test
or
out
or
jae,pn
fs
pusha
pop
aas
xchg
adc
out
dec
push
dec
es
bound
inc
adc
popf
jbe
mov
jmp
sub
and
clc
mov
sbb
mov
arpl
sti
out
xchg
fdivrp
jecxz
inc
mov
das
push
xor
dec
pushf
mov
leave
sar
int3
rcr
das
mov
add
pop
fsubl
in
inc
adc
push
and
leave
fs
popa
xchg
rorl
jnp
xlat
sbb
push
jge
mov
and
add
cs
pop
inc
pop
pop
inc
push
pop
lods
repnz
sbb
cmp
sbb
and
or
sub
pop
mov
push
mov
mov
not
pop
bound
sub
int
call
push
popf
xchg
xor
add
insl
data16
ja
mov
popa
cmpsl
or
fs
mov
div
movl
mov
and
test
xor
aad
adc
pop
inc
push
das
pop
not
fnstsw
push
negb
cs
sub
jae
cwtl
notl
nop
and
or
pop
xlat
fdiv
lcall
fwait
pop
fisttps
sti
imull
dec
inc
and
call
cmpsb
fs
mov
jbe
mov
xor
movsl
and
and
push
ss
jbe
les
xchg
cmp
jle
push
arpl
outsb
loopne
aaa
test
je
out
mov
shl
jmp
invd
lret
movsl
cmp
dec
add
and
dec
test
sub
inc
rcll
dec
and
jmp
add
cmc
mov
mov
fildll
adcl
dec
lods
sbb
mov
pop
adcl
pop
mov
scas
sub
dec
imul
xchg
xchg
pop
jns,pn
ja
add
xor
jo
cmp
cwtl
mov
adc
ret
mov
idivb
mov
pushf
inc
pop
lret
push
fnstcw
test
push
pop
arpl
jns
leave
xchg
lock
sarl
cmc
jne
mov
jge
lods
push
movsb
divb
scas
ret
xor
addr16
das
out
mov
loope
jno
nop
pop
push
aam
fsubp
mov
decb
push
call
stos
fidivrs
or
mov
ficoms
fnstsw
xor
pop
in
les
nop
fwait
add
or
add
out
std
mov
and
ret
jb
and
in
mov
cmp
roll
sub
dec
add
xorl
call
shlb
add
imul
push
ret
mov
in
out
and
addr16
mov
inc
outsl
sbb
pop
pop
jle
sub
les
or
ja
out
cwtl
sbb
out
add
jne
ficoml
dec
in
pop
xor
repnz
and
pop
cmp
mov
stos
xchg
inc
mov
jmp
adc
hlt
sbb
call
loop
test
nop
push
dec
dec
jne
mov
push
iret
adc
or
mov
pop
imul
lods
jge
repz
enter
push
aaa
icebp
mov
int3
sbb
loope
fucomp
inc
dec
outsl
or
lea
mov
mov
push
fucomi
sub
mov
mov
outsl
push
je
imull
ds
sbb
les
test
or
fdivs
xor
pushf
add
pusha
cmp
push
repnz
pop
shl
cmp
nop
lret
rcrl
sub
lret
adc
out
xlat
mov
out
addl
or
rorl
cmp
scas
rol
dec
loopne
nop
out
movsl
loopne
add
mov
xchg
mov
mov
jg
scas
lahf
loope
int
out
jae
imul
fidivl
fcoms
and
push
lret
roll
lea
and
add
ss
inc
lahf
push
stos
adcb
stc
rcrb
negb
outsb
sahf
mov
aas
imul
stos
cmpsl
and
pop
adc
fstpl
gs
mov
mov
adc
add
sub
xor
adc
or
add
int
aam
lret
pop
call
lods
inc
pop
sarl
fcompl
arpl
les
in
inc
xchg
mov
mov
and
mov
dec
dec
loopne
pop
cli
cmp
cltd
lahf
jecxz
insl
aam
das
incl
push
movsl
sbb
sbb
inc
aas
and
repnz
mov
xchg
aas
sti
mov
inc
pop
inc
sbbb
fldt
ret
sub
xor
lcall
dec
in
xchg
mov
nop
xor
das
jge
repnz
aad
or
negl
ret
call
add
cmp
inc
fxch
mov
fdivl
dec
js
mov
cmova
inc
sahf
arpl
xchg
pop
or
add
stos
int3
data16
jb
jge
jnp
test
inc
cltd
test
sbb
mov
mov
cmp
add
cmpsb
fstpt
add
js
mov
repnz
int3
jl
mov
ljmp
adc
out
lods
mov
clc
dec
sub
movsl
push
in
inc
loopne
popl
insb
push
xor
out
int
fisttpll
les
mov
dec
pop
loope
out
and
jle
sbb
push
mov
scas
or
jb
cmpsl
xor
mov
mov
xchg
lret
cmp
scas
lea
xchg
outsl
fxch
out
pop
movsb
fnstsw
mov
popf
test
aaa
ja
jecxz
fcom
bt
pop
push
daa
out
inc
sbb
cmp
js
pop
es
iret
imul
repz
stc
addr16
js
push
push
imul
sbb
enter
lds
popa
fildl
jbe
pop
nop
test
lock
dec
fisttpl
push
stc
pop
fwait
in
xor
adc
out
lahf
dec
or
xor
lcall
and
ja
fnstenv
or
dec
or
add
ret
repz
es
dec
xchg
cmc
mov
fwait
sbb
xchg
mov
and
loope
lock
mov
mov
xchg
and
mov
clc
loop
int3
adc
sbb
cmpsb
jns
xchg
stc
sbb
mov
rclb
ja
jge
sbb
adc
aaa
popf
mov
scas
cmp
push
movsl
jne
xchg
stos
call
fistps
sahf
clc
test
inc
pop
push
aas
xchg
xlat
xchg
jns
cmp
jge
int3
push
das
pop
xchg
sbb
jmp
clc
mov
out
sbb
lods
andb
xorb
jae
test
fnstcw
mov
pushf
jg
pusha
adc
or
jp
jge
add
sbb
dec
cs
fdivrs
in
jl
pop
mov
dec
popa
mov
mov
mov
xchg
clc
jp
mov
push
daa
repnz
dec
imul
mov
pop
sbb
subl
adc
ffreep
dec
loope
f2xm1
loop
lea
cmpsb
fcmovu
neg
hlt
add
and
mov
sahf
xchg
test
cmp
adc
mov
outsl
dec
or
mov
cmp
push
pusha
sub
adc
daa
pop
mov
lock
sub
add
mov
pop
cltd
outsl
das
sarl
sub
dec
mov
insl
xlat
inc
inc
push
and
jmp
sahf
inc
sbb
push
xchg
or
mov
xor
aaa
adc
mov
jae
gs
sbb
jns
movsb
movsb
xchg
nop
popf
cmp
fiadds
cmpsb
je
sarb
or
mov
push
sbb
jmp
add
inc
lods
mov
iret
mov
lret
bound
out
sub
xchg
lods
dec
jmp
test
fcoms
stos
push
dec
imul
xor
xchg
rcll
xchg
lcall
stos
dec
sbb
dec
cltd
cmpsb
out
in
sbb
adc
jp
push
mov
cmp
jmp
pop
fdivrp
imul
dec
sub
cmc
gs
out
xchg
out
arpl
jb
pop
js
sbb
mov
dec
rolb
push
fiadds
dec
jb
sbb
daa
lcall
movsl
or
fsub
mov
shll
pop
jl
int3
sbb
xor
sahf
roll
xchg
pop
shll
pop
or
xchg
enter
mov
pop
fcompl
pop
outsb
test
lcall
paddw
outsb
mov
dec
push
or
jp
sbb
pop
outsb
push
imul
xchg
xchg
xor
outsb
sahf
pop
shl
outsb
lock
lea
sarl
es
dec
add
and
xor
nop
pushf
cld
in
xchg
and
sub
add
out
scas
and
lret
sbb
jnp
xor
movsl
push
or
shll
add
pop
jb
push
fnsave
lods
mov
scas
xchg
fildl
xchg
icebp
push
fistpl
out
stos
or
push
pop
mov
jns
xchg
mov
mov
or
adc
call
lea
notl
pop
fwait
rcrl
push
cmpsb
dec
pop
mov
sub
or
jle
mov
stc
jnp
popa
mov
daa
in
jg
jns
push
xchg
mov
and
jns
pop
mov
rorl
sub
dec
and
hlt
jecxz
mov
scas
sahf
cli
pop
cs
repnz
or
mov
loopne
aad
mov
rol
divl
push
pusha
shll
inc
outsb
nop
fs
inc
mov
andb
cltd
pop
fsubl
or
jbe
mov
add
dec
cs
jne
cmovle
adc
dec
dec
push
cmp
pop
xor
mov
sbb
pop
and
movsb
jne
outsb
push
pop
lsl
into
mov
ja
sar
cli
dec
push
sub
hlt
cwtl
xor
push
sahf
fs
inc
add
ja
outsb
add
or
and
inc
push
lock
and
mov
ja
fs
adcl
rol
xchg
lret
cmp
pushf
in
adc
sub
dec
inc
xor
fildll
cli
je
sbb
cmc
push
mov
lds
and
adcl
leave
stos
pop
ret
mov
pop
test
pop
xchg
push
movsl
fsubrl
inc
je
jg
mov
fsubrl
adc
cli
ds
sbb
push
stos
in
mov
ja
and
sarb
movsl
lods
or
gs
test
nop
test
dec
into
jae
and
mov
push
jmp
and
mov
pop
aam
scas
std
add
ficomps
or
cmpsl
stc
jo
pop
push
fsubrp
lcall
mov
and
and
mov
mov
es
and
lret
xor
frstor
sub
mov
popa
insl
cmp
push
aaa
loopne
mov
jb
dec
mov
or
mov
es
ficoml
imul
hlt
jg
or
inc
mov
sbb
cld
lods
es
cs
push
scas
mov
shll
dec
jp
jmp
fsub
mov
xlat
aaa
aas
aam
xor
mov
arpl
in
xor
push
aad
stc
xor
jne
movsb
cmc
js
outsl
xchg
nop
scas
repnz
push
pop
sub
xchg
sbb
pop
pop
std
pop
test
sbb
inc
or
dec
dec
fs
je
cs
aam
cld
pusha
sub
mov
jle
mov
mov
inc
cmpsl
iret
sti
xchg
xchg
adc
cld
leave
xor
daa
shll
adc
imul
push
fmuls
jne
mov
pop
jp
pushf
lahf
arpl
xor
enter
push
out
dec
sbb
mov
mov
or
jg
jmp
dec
in
stos
xchg
xchg
mov
and
and
pop
xchg
adc
jl
cltd
add
mov
or
imul
inc
fisubl
inc
mov
hlt
or
stc
cmpsl
test
add
push
jecxz
pop
sbb
sbb
insl
lret
ljmp
lock
inc
fcomps
push
xor
jno
xor
xlat
ss
push
pop
add
arpl
add
push
ss
dec
xchg
rcrl
dec
lcall
mov
loopne
add
mov
push
mov
lret
mov
icebp
les
xchg
pop
int
add
mov
xchg
dec
mov
push
aad
cmp
cwtl
adc
fidivrs
lds
pop
jmp
fsubl
in
rolb
inc
shlb
mov
imull
aad
mov
ja
icebp
cmp
popa
or
jo
mov
and
mov
rcrb
xor
lea
cmc
aam
add
shl
jg
in
test
fbld
cli
add
cld
ljmp
and
mov
sbb
sub
sbb
inc
and
or
cmpsl
int3
mov
std
lahf
orl
es
shrb
mov
mov
or
push
mov
add
pop
mov
mov
add
loope
sub
shll
mov
sti
loop
loopne
xor
imul
pop
mov
es
xor
lcall
xchg
lds
cmc
mov
rol
fldt
sub
js
pop
leave
pop
mov
xor
insb
push
xchg
movsb
das
jle
jae
mov
dec
roll
je
lods
call
std
movsb
sbb
test
inc
xchg
ret
push
jl
adc
mov
dec
dec
neg
sub
push
fdivrs
mov
jae
jmp
mov
mov
je
mov
mov
and
pop
andl
pushf
adc
es
pusha
adc
call
inc
sti
arpl
dec
ja
or
int
in
dec
mov
in
lods
jae
add
mov
int3
push
mov
aam
xor
mov
adc
outsb
out
pushf
cmp
xchg
and
xor
sub
cmpsl
ljmp
inc
into
push
pop
nop
xor
jnp
xchg
mov
out
fsts
inc
leave
or
popa
stos
xchg
add
rorl
sbb
mov
decl
xchg
stos
jno
xchg
js
mov
sbb
sti
adc
adc
mov
mov
or
repz
imul
inc
pop
jne
cwtl
inc
cmp
and
jno
outsb
pop
insb
es
mov
xor
mov
testb
mov
xlat
or
push
ret
ds
xor
add
arpl
mov
sarb
cwtl
popa
jecxz
sti
dec
movsl
out
pop
idiv
jecxz
icebp
mov
loope
loope
mov
mov
leave
pop
push
jg
mov
cmp
imul
mov
or
xchg
xor
sub
addr16
or
movb
cmp
bound
std
ds
xor
fwait
out
pushf
or
sbbl
inc
inc
lods
insl
loop
push
mov
push
icebp
loopne,pt
xchg
in
stos
pop
mov
push
or
loope
ret
inc
mov
push
neg
dec
iret
or
cmpsb
ljmp
dec
loop
call
add
jne
jae
mov
xchg
fmul
push
xor
jo
out
stos
cli
ss
dec
push
inc
xor
stos
mov
hlt
out
mulb
pop
pop
sub
jle
jle
icebp
sub
out
lret
fbstp
adc
mov
repnz
nop
subb
aam
push
insb
cmp
cmc
xchg
mov
adc
mov
out
cmpsb
jge
jne
xor
sub
stc
cmp
sub
push
mov
jl
decl
mov
inc
daa
xor
mov
sbb
sbb
jae
mov
ret
test
into
movl
imul
inc
and
xlat
out
data16
jp
lahf
adc
xor
into
call
add
lds
fisttpl
mov
xchg
lret
pop
add
jnp
jns
jle,pn
cmpsl
inc
pop
insb
pop
lahf
xor
dec
cmp
rcrb
pop
cmpsb
push
pop
sti
inc
inc
inc
push
test
shrb
adc
mov
test
sbb
pop
sub
in
jno
shll
orl
xchg
mov
fnstsw
cmp
inc
sbb
jbe
inc
sub
insb
jmp
in
aaa
xor
clc
test
shrb
cs
pop
adc
jecxz
mov
cli
add
mov
push
shrl
dec
jae
aas
ds
mov
shrb
and
je
aaa
subl
add
pop
scas
lcall
ja
ljmp
int
in
aas
lret
jg
add
loopne
mov
sub
xorb
mov
inc
and
push
inc
rolb
fadds
cmp
jle
imul
mov
dec
mov
lock
adc
or
aas
inc
roll
andl
sbb
gs
jno
gs
insl
xchg
sub
fstpt
jae
je
fcompl
jmp
adc
jne
lahf
popf
fistpll
sub
outsb
scas
mov
movsb
jbe
int3
aam
xor
add
cmpsl
mov
stos
mov
mov
sbbl
jp
inc
repnz
mul
loopne
fsts
xchg
xor
add
or
dec
out
sbbb
sbb
out
mov
loop
jnp
movsb
aad
xchg
or
pop
sub
test
dec
js
ljmp
sbb
sahf
bound
jnp
sbbb
mov
or
dec
outsb
mov
and
repz
mov
mov
xchg
pop
jg
rolb
jp
dec
test
add
lods
inc
pop
fistl
fsubl
mov
notl
pop
sub
pop
add
push
shll
loop
scas
inc
adcl
aaa
pop
lods
jb
movsl
cmp
inc
lods
push
xor
lods
or
xlat
dec
xlat
cltd
mov
dec
mov
call
das
push
ret
popf
xchg
sbb
push
or
addr16
push
gs
sub
lret
dec
cwtl
jge
test
stc
repnz
lds
pop
gs
test
inc
data16
jae
data16
ret
xchg
imul
sbb
xor
jle
mov
call
push
or
stos
jmp
fistpl
ret
lret
aad
push
in
mov
mov
or
push
shl
push
sbb
cmp
test
xchg
add
mov
cli
dec
roll
outsb
jae
out
inc
sub
por
xor
subl
ret
adcb
je
sarl
jge
packssdw
mov
cmp
push
mov
xchg
enter
scas
test
fstl
jbe
inc
stc
icebp
sub
test
notb
adc
push
mov
frstor
or
jno
out
push
loope
stc
xlat
mov
dec
xor
xchg
adc
popa
fistl
sbb
loope
push
xchg
test
in
lahf
add
xorl
push
inc
adc
popf
jmp
sbb
and
or
scas
mov
setg
imul
xor
fwait
repnz
mov
mov
adc
mov
lret
scas
xor
fbstp
add
add
mov
in
out
fst
dec
mov
mov
arpl
push
mov
mov
ljmp
or
daa
push
sbb
mov
incb
lock
dec
dec
xor
addl
popa
push
adc
and
sub
fsubs
sti
cmc
dec
cmp
sbb
pop
mov
ror
xor
push
jmp
mov
sub
es
outsb
leave
rclb
or
dec
adc
fs
aad
pop
scas
pusha
in
and
cmpb
and
in
in
outsl
lcall
into
fistl
jl
and
lcall
test
jbe
xor
data16
cmp
cwtl
add
sub
xchg
pop
sub
add
pop
imul
shll
iret
inc
inc
inc
push
xor
mov
test
insl
sub
sbb
mov
cmc
add
mov
pop
loopne
jb
and
test
add
or
jno
xor
iret
out
mov
test
sbb
or
mov
xor
inc
fnstcw
jae
sub
xor
and
xor
mov
loop
or
and
cmpsl
pop
repz
or
mov
add
enter
fldl
sbb
and
dec
cmpsb
inc
stos
pop
inc
sub
mov
mov
sub
cwtl
lcall
add
bswap
mov
into
sahf
dec
sbb
int
pop
cltd
xchg
iret
cmp
sbb
cmp
loope
mov
adc
add
mov
jo
jmp
fdivrl
xchg
repnz
sti
stc
cli
fsub
add
cmc
stc
mov
jmp
and
mov
add
repz
movsb
test
jnp
mov
xor
popf
test
inc
movsb
leave
cwtl
nop
ret
aad
nop
push
xor
push
pcmpeqd
ret
or
sbb
xchg
inc
stos
sub
sbb
inc
dec
ja
cmp
push
mov
inc
call
sbb
jnp
push
push
push
add
and
push
xlat
arpl
arpl
inc
jae
push
popa
gs
call
pop
sub
fwait
cmp
dec
mov
sub
int3
stos
and
xor
mov
sub
inc
fnsave
adc
daa
push
mov
lods
lds
sub
and
jecxz
rclw
ljmp
adc
push
pop
mov
jae
dec
or
or
pop
in
dec
ss
sub
jnp
out
adc
mov
ret
mov
jmp
js
mov
fldt
mov
out
pusha
mov
aad
into
pop
imull
cwtl
sub
add
mov
adc
dec
push
punpcklbw
test
das
lcall
xchg
mov
into
inc
dec
mov
out
hlt
jp
pushw
or
outsl
push
adc
ficoml
sbb
and
into
cli
pop
and
xor
pop
mov
adc
jmp
add
fildll
pop
xchg
ja
pop
inc
jecxz
imul
aam
les
fidivrl
mov
xchg
add
and
jbe
dec
xchg
loop
ds
cmp
xchg
add
sub
stos
in
shl
push
push
fildl
adc
mov
pop
cmp
adc
je
or
sub
xchg
lds
sub
sub
fsubrs
jmp
and
add
ljmp
xor
adc
mov
test
mov
std
loop
and
pop
xor
dec
imul
pop
pop
push
call
es
pop
inc
fs
sbb
adc
cli
test
mov
addr16
fdivrl
lods
sbb
jp
cmpsb
sbb
lods
sbb
dec
jge
jmp
xchg
fwait
cmc
cmp
adcb
leave
xchg
xchg
xchg
into
mov
mov
andl
push
jns
cmpsb
or
jb
addl
xchg
sar
in
ss
movsb
push
out
jo
pop
imul
jmp
lcall
or
lds
mov
les
fucomi
mov
jne
scas
dec
inc
test
cmpb
jns
outsl
or
lock
shr
mov
psubusb
jl
jecxz
fisubrl
cltd
sub
push
xchg
adc
push
or
mov
stc
cmpsl
cltd
fldcw
shr
ret
sub
es
lahf
fisubrl
mov
cmp
jne
insb
inc
in
nop
in
xor
ficoms
or
les
mov
lods
les
inc
sbb
cmp
inc
mov
cwtl
shlb
xor
pop
pop
inc
mov
movsl
lcall
jecxz
mov
mov
mov
mov
sub
xlat
mov
and
push
daa
inc
ret
sbb
mov
in
in
scas
fxch
out
negl
xchg
es
imul
dec
pop
and
cmp
dec
idivb
insl
sbb
fsubs
inc
mov
cmp
cmp
sti
aas
les
rcrb
les
mov
cwtl
push
pop
cli
xchg
mov
arpl
xchg
popa
orl
jl
roll
aaa
frstor
test
mov
out
aas
mov
push
ja
xlat
into
movsb
pop
mov
push
adc
fstps
jmp
clc
cmc
std
mov
dec
cmpsl
xchg
jo
test
xlat
stos
insl
cmpsb
sarl
ret
pop
and
push
or
fs
out
dec
mov
sahf
icebp
mov
es
into
lea
int
dec
ja
sbb
out
fwait
sbb
pushf
inc
adc
xchg
test
pop
scas
adc
hlt
adc
xor
cmp
dec
popa
sub
adc
dec
cmp
mov
jg
xlat
fdiv
adc
leave
mov
jb
cmpsb
mov
fimull
sub
xchg
fnstenv
sarl
adc
loope
sbb
cmp
addr16
popa
add
xorb
push
test
push
or
lret
orb
jp
mov
rorl
xchg
stc
stc
out
sub
sbb
imul
xor
cmp
pusha
in
dec
rcll
xchg
sbb
call
mov
sti
jle
in
lods
in
adcb
pop
jmp
xor
out
les
les
test
lahf
mov
jle
shl
dec
movsl
push
pop
ret
xor
test
or
std
lahf
jne
dec
pop
scas
mov
pop
add
and
fisttpl
repnz
push
call
fs
out
dec
adc
and
scas
movsb
add
clc
dec
mov
int3
mov
mov
pop
sahf
push
xor
imul
test
enter
xor
add
or
xchg
mov
movsl
mov
sub
mulb
das
outsl
jb
hlt
jle
or
mov
out
inc
pushf
inc
cmp
leave
dec
jp
je
sahf
jne
cmp
int
stos
cltd
fdivrs
aaa
dec
ljmp
jno
in
jno
add
cltd
test
pop
pop
imul
jmp
lods
adc
xchg
cmp
inc
paddq
and
repz
xchg
sbb
lods
mov
mov
mov
loope
jns
int
xchg
push
and
in
loopne
inc
push
je
icebp
dec
or
out
cltd
or
adc
or
mov
jnp
pop
ja
sbb
and
jle
inc
pop
orb
stc
jns
xchg
cwtl
ss
adcl
push
lock
mov
add
mov
xchg
add
fcmovne
loope
pop
push
aas
pop
fldt
cmp
jl
scas
xor
jbe
cltd
mov
mov
leave
push
jbe
imul
in
icebp
imul
sub
fucomip
je
sbbl
jne
push
inc
in
rorl
pop
das
rcrl
fidivrl
or
xor
mov
xor
inc
ds
insl
aam
imul
stc
into
stos
repnz
cli
lahf
ret
cmp
jne
fs
push
call
call
in
or
mov
inc
sahf
cmpsl
xchg
int
icebp
aas
ficompl
scas
aad
nop
lahf
lret
jge
imul
and
ret
int
jl
popa
xor
call
das
orl
cld
cmp
adc
xchg
es
out
lret
fwait
xlat
scas
xchg
add
push
push
aas
xor
test
dec
adc
mulps
mov
repnz
push
cmpsl
aad
out
jl
sar
cwtl
xor
imul
adc
ret
insl
mov
xchg
scas
fisubl
ret
movsl
ljmp
lock
data16
insb
pusha
notl
jle
into
mov
xor
fnstcw
mov
ret
cmp
cli
jo
sbb
insl
lret
xor
adc
rcrb
push
dec
sub
mov
pop
imul
inc
pop
mov
es
repz
dec
shr
into
sbb
cmc
lcall
mov
cmp
lds
add
insl
jl
or
pushf
idivl
adc
cmp
push
dec
mov
test
movsb
cmp
jne
xchg
xor
rorl
and
cmp
xor
mov
std
push
ljmp
adc
push
jle
shrb
mov
mov
ljmp
dec
insb
arpl
js
xchg
ja
bound
lret
push
inc
pusha
notb
ficoml
das
int
sub
or
cmp
int
fimull
or
pop
xor
push
dec
push
and
movsb
movsb
jae
dec
arpl
xorb
add
cltd
dec
dec
out
or
sbb
lods
test
and
jecxz
push
sub
push
mov
jns
sti
pop
pop
or
dec
pop
mov
lods
jmp
shlb
outsl
fsub
push
pop
xchg
imul
mov
or
in
loope
dec
pop
mov
add
xchg
pop
dec
fstpt
repz
mov
nop
daa
ljmp
mov
das
int
mul
xchg
pop
xchg
pusha
loope
mov
ret
dec
mov
insl
or
mov
addr16
or
test
add
repz
cwtl
jg
pop
cmp
or
mov
pop
or
adc
outsl
mov
xor
pop
insb
divb
pop
fwait
adc
jae
cmp
push
fisttpl
pop
popf
xchg
stc
dec
pop
cmc
mov
jmp
push
loop
pushf
pop
lret
pop
fdivp
xor
rcl
inc
es
icebp
push
sub
iret
dec
int3
dec
loopne
add
arpl
in
in
shrl
movsb
mov
aad
xchg
xchg
data16
mov
stc
jnp
add
inc
push
imul
js
sub
clc
lock
out
les
push
inc
dec
outsb
pop
test
fcoml
mov
mov
cmpsl
lods
xchg
cmc
in
scas
mov
xlat
loopne
gs
or
lds
out
dec
test
shr
sub
and
outsl
mov
arpl
outsb
pop
loopne
bound
and
rol
je
jno
xchg
cltd
xor
idiv
mov
fstl
cltd
lds
pushf
pop
inc
sti
loope
jnp
stc
push
xchg
xor
loope
jnp
jmp
mov
stos
push
push
stos
sub
or
test
push
inc
out
mov
push
jmp
cmpsl
fisttpll
mov
mov
jmp
lods
lcall
fcompp
add
cmp
mov
add
pop
or
lret
cwtl
andl
orb
gs
and
cld
mov
xchg
add
notb
ret
outsb
int3
dec
jns
popl
hlt
inc
pop
xchg
sub
or
iret
cmp
dec
mov
dec
aas
daa
add
sub
sbb
inc
mov
or
xchg
sbb
in
fwait
jno
mov
repz
nop
push
sub
mov
std
pop
lods
js
mov
push
mov
rcrl
inc
fwait
adc
mov
dec
mov
inc
ja
inc
xor
pusha
add
not
pop
fsubrs
lahf
xlat
mov
mov
or
xlat
and
aaa
fadds
adc
mov
call
push
jbe
mov
das
xchg
jl
dec
std
jb
mov
lcall
dec
shll
jl
pop
movsb
or
push
cwtl
or
jo
mov
sub
mov
fdivrl
xchg
mov
jb
int3
jg
jbe
lcall
lret
add
dec
lock
mov
jno
scas
loopne
cmpsb
mov
insb
adc
hlt
pop
in
mov
or
lret
xchg
ss
inc
out
lret
jle
sbb
stc
pusha
adc
sti
dec
fsubs
mov
mov
movsb
fldl2t
mov
rorb
lods
xchg
xchg
andl
out
test
popf
mov
jae
cmp
shlb
pop
xor
adc
mov
repz
sub
incb
push
in
xor
imul
out
adc
scas
or
loop
mov
xor
or
ret
enter
xorl
stos
shrb
inc
jb
xchg
add
mov
sbb
jo
scas
popf
mov
arpl
cmp
or
loopne
mov
mov
loop
lds
mov
clc
and
mov
xchg
jno
sub
dec
mov
rclb
adc
inc
iret
xchg
cmp
popa
iret
js
cmpsl
or
jno
adc
ja
int
loop
xchg
repnz
pushf
imul
loope
adc
jl
outsl
ds
notb
or
sbb
in
push
not
mov
xchg
in
xor
jbe
dec
into
mov
jge
push
aam
insl
fisubrs
cld
mov
push
push
jg
enter
push
outsl
xchg
add
sarb
jne
xchg
and
imul
popf
rolb
pop
or
xchg
adc
push
or
pop
cltd
xchg
mov
cmp
js
js
push
aad
push
or
pop
hlt
out
mov
popf
ret
je
dec
hlt
insl
dec
test
int
and
and
cmp
mov
popf
sbb
es
adc
ss
aad
push
stc
leave
lds
jg
inc
popf
bound
mov
add
fisubl
sub
adc
fnstenv
pop
adc
push
and
mov
ret
orl
adc
dec
cmp
dec
or
dec
ret
popf
ret
loope
dec
insb
xchg
loopne
push
adc
dec
das
push
mov
clc
mov
cs
fwait
mov
les
mov
push
clc
add
inc
mov
cmpsl
repz
jge
cmp
cmp
ret
das
pop
lock
shlb
in
cmp
fisttpll
flds
stc
adc
push
rclb
or
cmp
rcll
sbb
pusha
addr16
movl
or
addr16
sti
inc
aas
mov
mov
sbb
iret
stos
xchg
adc
stc
js
sub
dec
insl
mov
negl
dec
adc
push
movsb
mov
cmp
pop
dec
xlat
mov
and
xchg
je
jno
ret
ficomps
rep
add
popf
sarb
dec
loope
je
add
mov
add
pshufw
addr16
test
mov
fstpl
pop
fcomps
push
jp
mov
push
dec
ret
pop
mov
push
jp
icebp
and
jns
mov
jl
fisubrs
out
push
les
fchs
xchg
mov
push
and
xchg
mov
jno
lahf
fsubr
lds
and
xlat
ds
loopne
subb
pusha
jno
popf
int3
and
xor
sar
add
cli
push
mov
daa
mov
out
fwait
adc
jecxz
test
mov
and
xchg
cwtl
and
sbb
imul
shrl
xorl
mov
imul
out
mov
xchg
add
push
mov
jbe
adc
and
leave
mov
pop
pop
mov
xchg
jge
ret
lret
push
in
ficoms
movsl
mov
xchg
lods
cli
dec
mov
sub
cld
imul
add
or
add
mov
jb
xor
lret
and
push
out
and
dec
mov
or
cmc
cmc
mov
cwtl
xor
fidivrs
stc
sgdtl
mov
iret
jne
sbb
cmc
sahf
scas
mov
jmp
test
add
sub
cmp
jle
ljmp
adcl
push
lret
js
test
pop
shlb
push
sbb
xor
ds
xlat
sysenter
or
arpl
mov
xor
pop
out
ds
lods
mov
popa
pop
cs
imul
cmp
mov
mov
sti
and
outsb
xchg
pop
aam
mov
cmp
fstpt
je
xor
push
xor
aad
add
adc
pop
stos
xor
push
cmp
jg
aas
cmc
add
stos
xchg
add
sahf
xor
fs
fldt
loop
paddusb
or
or
jg
call
sub
out
adc
mov
ljmp
mov
jmp
subb
mov
testl
insb
xor
fnsave
insl
cmp
cmp
bound
ficoml
adc
ficoms
shrb
xor
stos
sub
or
pusha
mov
iret
add
mov
mov
test
add
inc
mov
xor
ss
jae
push
add
xor
cwtl
mulb
das
mov
lods
mov
sbb
les
sbb
fs
cmp
push
dec
mov
add
xlat
and
or
lcall
addr16
int
pop
mov
pop
sti
pop
rolb
inc
mov
fmulp
call
cmp
dec
lcall
repnz
jnp
add
fsubrs
test
or
xchg
subl
icebp
fwait
pop
ljmp
in
popf
sub
test
mov
dec
add
and
lcall
adc
andl
sub
sbb
sbb
std
into
nop
cmp
mov
inc
aaa
mov
and
loop
add
jne
mov
mov
add
xchg
push
inc
sub
jne
sarl
daa
add
cmp
mov
movsl
test
loopne
jbe
push
and
stos
jle
stos
fwait
imul
jle
and
aad
inc
je
jbe
jl
call
ss
push
jge
cli
pop
jnp
out
cltd
sbb
pop
in
mov
clc
dec
jle
sub
sbbl
pop
push
imul
dec
sbb
inc
sub
int3
enter
fldcw
sbb
in
js
pop
test
in
je
mov
xchg
cmpsl
test
in
cmp
imul
fbld
cli
mov
pusha
popf
cld
cltd
rorb
push
dec
xorl
mov
addr16
pop
xor
sti
sbb
mov
jl
pop
xor
mov
xor
lahf
adcb
rcrl
mov
xor
xchg
adc
cwtl
out
jge
xlat
jno
fistl
ds
pop
popa
scas
popf
dec
test
push
and
shr
iret
mov
mov
inc
stos
test
stc
pop
out
add
jo
sbb
in
cli
and
bound
jno
daa
fldcw
adc
in
jp
dec
xchg
or
in
and
jmp
xlat
lcall
or
das
xor
call
pop
and
fsubr
repz
daa
mov
mov
push
mov
add
lret
sub
repz
sbb
notb
sar
lret
add
aam
jle
lock
jmp
stos
data16
inc
mov
sbb
idiv
aaa
fwait
xor
cmp
repnz
iret
add
popa
jg
and
pop
cmp
xor
push
inc
adc
xchg
popl
push
pop
pop
inc
stos
jne
xlat
lcall
lods
adcl
cmp
dec
jno
pop
jno
addl
lods
filds
jne
ds
xchg
scas
cli
pusha
cmp
fnstsw
enter
sub
xchg
dec
and
in
mov
lods
movsl
test
xor
loopne
pop
jnp
and
lods
mov
sbb
or
arpl
aaa
sti
int3
adc
ja
unpcklps
jne
loope
test
stc
fldt
ret
repz
test
jae
push
leave
addr16
in
pop
notl
mov
dec
or
rcll
lcall
imul
lock
add
cwtl
jl
jge
shr
shrl
ret
add
mov
pop
gs
in
rolb
add
xchg
mov
pop
pop
sbb
lock
mov
lahf
clc
pop
and
xor
dec
enter
enter
lret
pop
sub
in
test
dec
sbb
fwait
push
in
ficompl
add
mov
fbld
sub
cmp
sarb
mov
aaa
lahf
dec
scas
cmp
xchg
mov
or
cld
subl
cmp
aam
je
shlb
ja
js
mov
sbb
lcall
push
and
ja
in
inc
jmp
mov
add
iret
setp
outsl
mov
jbe
dec
xor
cmpsb
test
in
mov
jns
leave
loop
mov
cmp
out
out
xor
mov
test
xor
jmp
mov
and
mov
cmp
mov
mov
pop
pop
mov
test
enter
clc
sub
xor
jecxz
into
imul
sub
xchg
sbb
xchg
lahf
iret
je
mov
in
out
clc
dec
shl
mov
sub
cli
movl
jne
mov
rolb
lret
jmp
ljmp
mov
rcrb
cmpsl
xchg
mov
lea
ret
out
pop
subl
xchg
pop
movsl
pop
insl
mov
mov
push
mov
sub
test
shll
jbe
test
fildl
les
aad
ss
jae
mov
jmp
aas
fwait
jae
mov
clc
dec
push
sub
xchg
lret
xchg
aaa
mov
cmp
jb
rorl
pop
sti
sbb
lods
mov
inc
pop
push
insl
jecxz
aam
clc
in
or
mov
dec
mov
cli
and
cmp
inc
add
fldcw
nop
insb
aad
in
pusha
xchg
push
xrelease
clc
push
loope
out
xchg
stos
or
das
xorb
aad
mull
scas
mov
inc
dec
fxch
scas
into
pop
sub
fldl
in
pop
pop
jo
daa
sbb
in
pop
mov
loop
inc
inc
int
xor
rorl
jmp
push
adc
jl
mov
cmpsb
sub
pop
cmc
pop
idivl
lret
ret
faddl
into
aas
fcoml
test
shll
mov
lods
popf
scas
jns
sub
inc
and
pop
pop
loopne
xor
orl
daa
sarb
push
jne
mov
xchg
lds
jns
lahf
int
push
rcll
mov
call
xor
sahf
test
adcb
test
adc
jnp
pop
xchg
andl
xchg
inc
xlat
stos
ds
sbb
dec
mov
xchg
xor
int3
xchg
pop
cmp
lds
add
mov
call
sti
scas
testb
popa
mov
sub
loopne
lahf
pop
cmpsb
test
mov
nop
jbe
outsl
xor
jecxz
jmp
data16
xchg
mov
sbb
call
cmpsb
leave
xchg
imul
mov
cmc
roll
test
mov
dec
clc
mov
mov
cmc
movsb
or
xchg
roll
insl
jecxz
insl
pop
movsl
sbb
dec
jno
add
aas
dec
xchg
jae
sbb
push
pop
mov
daa
fnstcw
push
xchg
in
push
mov
mov
jbe
or
mov
mov
repz
mov
cmpsb
imul
int
mov
ret
daa
inc
in
dec
xchg
lods
jae
jle
jae
lcall
arpl
shl
int3
js
cmpsb
push
mov
fmuls
mov
pusha
jecxz
cmc
xchg
sub
cmpsb
and
std
lret
push
push
inc
mov
outsb
repz
dec
fwait
pop
lcall
cmp
pop
sub
fs
cli
leave
aam
sbb
xor
cmpsb
mov
xor
mov
stos
push
das
xor
fists
pop
mov
sbb
sbb
push
push
jle
pop
shrl
xchg
add
hlt
sub
jne
imul
dec
inc
lods
lea
fcmovbe
xor
xchg
push
lods
push
arpl
mov
lods
outsl
sbb
outsb
adc
inc
push
mov
pop
sub
adc
dec
pop
jne
pop
inc
mov
jns
in
mov
mov
lret
rolb
or
jp
and
mov
test
mov
mov
jbe
fs
sbb
and
outsl
inc
std
xlat
cltd
mov
dec
cwtl
adc
stc
pop
fsubrs
rcrl
aaa
jns
xor
inc
mov
out
pop
popf
inc
xor
mov
jl
sar
out
loope
daa
jne
push
push
and
inc
or
push
lret
lcall
mov
test
pop
lahf
iret
cli
mov
outsl
outsl
fmull
out
out
clc
scas
lahf
and
jae
mov
pop
dec
lds
sti
cltd
mov
addr16
mov
push
in
fidivrl
pop
and
in
cmp
mov
popa
jbe
xchg
mov
dec
shl
aam
inc
movsl
and
fdivl
cltd
or
xchg
jb
out
icebp
in
xchg
movsl
mov
push
mov
ljmp
sub
and
stos
jg
lcall
shrl
mov
push
dec
rcl
or
fisubrl
loop
adc
add
jg
stos
mov
dec
mov
idiv
in
mov
and
outsb
inc
push
sbb
xchg
sbb
mov
adc
push
mov
sar
and
nop
and
je
cltd
lds
movsb
fildll
xchg
inc
outsb
fsubrl
pop
mov
inc
or
pop
inc
adc
push
fidivs
pop
or
sbb
mov
aad
mov
cli
mov
sub
sbb
maskmovq
push
sbb
cmpsb
sub
repz
jno
adc
and
xchg
imul
aas
and
push
jo
mov
add
mov
pushf
and
xor
and
addl
cmpsb
xchg
pop
sub
add
insl
in
cmp
cmp
cmc
lods
sbb
push
cmc
ja
jne
addr16
sbb
movsb
dec
jb
inc
adcl
rorb
sarb
adc
fisttps
fists
pop
push
orb
lock
aam
inc
dec
jnp
dec
jo
inc
and
pop
sbb
cmp
mov
mov
or
lods
bound
and
outsb
ja
or
out
jp
or
xor
pop
fs
test
add
jns
cmpsb
push
jno
fisubl
in
lds
test
dec
dec
mov
jne
xor
into
scas
outsl
dec
addr16
mov
push
leave
mov
mov
sbb
push
addr16
fcompl
sti
xchg
jge
movsb
shll
sbbb
rorb
xchg
cmp
pop
and
inc
mov
jb
or
lods
and
pop
das
jb
rcl
mov
pop
and
loope
mov
cmp
push
mov
mov
adcl
insb
scas
and
xchg
mov
jge
cmpsl
cmp
and
ds
sbb
mov
mov
in
rcrl
inc
scas
and
cld
jno
sbb
cmp
xor
pop
or
pop
push
sbb
cmp
sbb
push
mov
andb
xchg
dec
push
cmp
test
fisttpll
ljmp
add
imul
test
push
imul
pop
pop
inc
or
xchg
push
sbb
inc
cmp
dec
adc
cmp
mov
je
iret
orl
out
div
inc
loope
fwait
cld
or
pop
aad
xchg
lret
and
mul
lahf
cmp
or
bts
rol
sar
rorb
xchg
test
popf
jl
lret
sub
jp
gs
sti
aad
cwtl
pushf
sub
adc
cltd
and
push
imul
enter
or
pop
sub
push
jmp
add
fcompl
aad
mov
int3
insl
lret
nop
xlat
mov
xchg
mull
or
in
cltd
xor
and
sahf
inc
shll
loope
popf
pop
jp
jle
scas
xchg
shll
enter
mov
add
lret
push
shlb
xchg
popa
sub
sub
or
or
push
stc
leave
and
mov
mov
imul
std
mov
adc
cmp
add
xor
pop
mov
cwtl
cmp
in
push
mov
mov
adc
sbb
add
xchg
stos
leave
imul
cmp
jns
xor
mov
add
popa
mov
xchg
lahf
xchg
int3
pop
call
fldcw
xor
orb
cmp
nop
push
add
push
in
bound
add
dec
sti
hlt
cmpb
out
mov
stos
jmp
add
test
imul
outsb
subl
dec
fstps
insl
in
imul
xor
add
sbb
xchg
scas
cs
fdivl
xor
and
mov
lods
arpl
push
out
mov
enter
call
adc
xchg
movsl
out
clc
out
jbe
and
xor
mov
inc
mov
loope
cmp
lret
mov
out
sub
sbbl
dec
lcall
jmp
ljmp
pop
mov
dec
lods
cmpl
cmp
js
loope
xchg
rolb
inc
adc
aaa
mov
xchg
xchg
lahf
xor
insb
lds
jmp
popa
clc
sub
lock
pusha
das
arpl
mov
cltd
fmull
negb
dec
testl
adc
stc
adc
in
dec
pop
ds
mov
dec
mov
dec
dec
shll
add
mov
mov
xor
icebp
inc
lahf
out
sbb
rcll
xchg
pop
sub
mov
aas
pop
pop
jb
sub
pop
or
adc
je
fwait
xchg
test
loop
adc
xchg
jb
test
mov
sbb
mov
sub
sbb
cmp
imul
test
sbb
insb
inc
orb
mov
xor
mov
mov
loopne
xorl
mov
stos
insb
mov
in
mov
inc
lock
jno
stos
push
les
pop
xor
pop
nop
cmpsl
into
xchg
out
aad
clc
fsubrs
xchg
fisubrl
hlt
cmp
jae
aas
mov
daa
add
mov
mov
mov
or
jno
jne
out
repnz
pop
lea
jb
cmp
fstpt
lea
dec
dec
mov
loopne
xchg
mov
mov
jno
adc
mov
addl
cli
pusha
mov
flds
xor
out
jae
movsb
xchg
xor
push
in
xchg
inc
xor
add
sahf
ljmp
cmp
js
xor
push
mov
mov
push
jno
rcr
lods
test
and
test
subb
jp
mov
sub
jns
xchg
mov
sub
inc
into
push
pop
popf
cmp
add
js
push
clc
movsb
roll
adc
lret
pop
mov
xchg
and
jecxz
cmpsb
add
add
lret
iret
add
and
rep
int
mov
xor
movsl
adc
pusha
bound
mov
ljmp
mov
test
shll
inc
mov
aam
jns
mov
xchg
sub
outsl
out
rcr
arpl
xchg
xor
int
loope
test
out
fcmovnb
lahf
popf
ljmp
cmp
out
mov
inc
xor
jno
sub
aaa
mov
aad
lret
push
mov
push
fwait
ja
pusha
or
ret
sbb
adc
sahf
mov
mov
mov
push
dec
into
lock
shrl
mov
pop
ljmp
mov
jmp
jl
stos
dec
fwait
repz
mov
adc
int
fbld
aaa
mov
fisubrl
pop
fsubl
loop
xchg
mov
mov
test
es
mov
fistps
in
lds
add
les
lahf
add
mov
insl
mov
mov
lods
mov
aaa
test
stc
ror
push
cmpsl
cmpsl
cld
fcmovnbe
pop
push
push
mov
xchg
cmpl
xchg
cmc
daa
push
loope
xchg
push
insl
mov
orl
imul
out
mov
pop
dec
jle
movsb
mov
mov
in
pop
xchg
pop
lods
cmp
inc
pushf
or
xchg
mov
push
stos
inc
shrb
movsb
add
ret
sbb
jl
data16
xchg
bound
xor
xchg
push
setb
stos
xor
shlb
sbb
out
mov
fucom
inc
div
insl
fsubs
sahf
mov
mov
mov
sub
stos
out
mov
and
or
xchg
inc
mov
mov
mov
repnz
fildl
rcrl
mov
ljmp
sub
hlt
arpl
repnz
pushf
sub
push
sti
and
psrld
pop
mov
jnp
cmp
jns
xor
xchg
add
jnp
insl
lods
es
cltd
in
repnz
jmp
fwait
mov
sub
stc
mov
repnz
filds
inc
mov
xor
movsb
xchg
test
cli
imul
or
popa
out
sbb
mov
cltd
dec
hlt
and
dec
icebp
mulb
jmp
dec
push
lea
iret
mov
add
faddl
mov
fistpll
add
lds
jmp
std
mov
mov
or
imul
xchg
push
cmpsb
mov
inc
fnstsw
inc
mov
nop
jg
and
std
daa
dec
in
jecxz
xor
aad
rcll
jbe
jno
popa
dec
xchg
out
cmp
cmp
loop
outsb
lcall
in
subl
xchg
cs
push
ret
sahf
add
ret
and
mov
icebp
leave
and
mov
adcb
test
xchg
adc
mov
fwait
xchg
and
call
sub
cmpsb
rolb
lret
mov
int
subb
gs
ss
test
xor
mov
lahf
enter
cwtl
cltd
js
mov
and
mov
add
and
jl
mov
scas
push
pop
rcrl
mov
fisttps
jmp
sarb
or
jns
xor
jge
subb
es
xchg
xor
fwait
ss
pop
inc
int3
es
test
repnz
mov
jbe
stc
jmp
sbb
in
int3
jmp
and
sahf
mov
loope
push
out
lods
jns
pop
imul
lret
pop
stc
into
arpl
mov
iret
jg
add
sub
jmp
in
or
xchg
js,pn
jp
hlt
repz
cmpsl
gs
push
fistpll
ficoml
jl
cld
pop
in
mov
ljmp
in
scas
lret
enter
pop
xchg
push
mov
sub
mov
add
cltd
jl,pt
je
out
shl
push
adc
addl
add
lahf
mov
push
inc
ja
xchg
mov
dec
sbb
out
jnp
test
data16
popf
sti
mov
outsb
jb
dec
cs
inc
mul
mov
push
imul
add
xor
adc
lret
push
cvtdq2ps
fstpt
dec
gs
inc
outsl
dec
or
enter
sbb
dec
dec
pop
mov
in
rcrb
sbb
pop
jae
inc
repz
dec
aas
jecxz
jb
int
aam
pop
clc
lcall
maskmovq
notl
ja
aaa
push
roll
dec
stos
dec
out
enter
inc
cmpsl
mov
pop
leave
sub
xchg
mov
lcall
movsl
stos
es
add
mov
mov
int
testl
mov
pusha
lods
sub
jmp
cmp
pop
jbe
test
insl
int
fwait
cmpb
add
aas
cld
popf
daa
inc
sti
xchg
dec
mov
test
loopne
sahf
adc
pop
push
mov
jae
sbb
inc
or
sahf
pop
xorl
xchg
loop
push
jns
xchg
mov
ljmp
test
xchg
jbe
in
dec
imul
lret
add
faddl
mov
lds
push
cmp
out
and
mov
cwtl
push
lcall
jae
loope
dec
xor
mov
data16
sub
repz
ljmp
and
out
dec
stos
jmp
push
mov
jle
outsl
sar
inc
xor
pop
mov
or
jne
or
nop
adc
es
jb
sbb
pushf
mov
hlt
jle
pop
cmp
pop
ds
mov
push
shrb
adc
negl
xchg
inc
in
mov
push
sbb
sub
xchg
pop
pop
mov
inc
cs
roll
xlat
mov
sub
js
lock
jmp
push
scas
xchg
add
mov
xchg
mov
cmc
outsl
hlt
mov
pop
sub
add
pushl
fcoml
mov
ljmp
push
hlt
insb
pop
loopne
fsubl
sbb
adc
pop
ror
bound
fwait
adc
fnsave
int3
sbb
inc
push
andb
sbb
jecxz
call
xchg
xlat
test
pop
sub
shll
jns
aad
pop
bnd
sub
jmp
xchg
dec
and
xchg
in
cmpsl
and
in
xorl
sti
mov
cmp
repz
outsb
mov
imul
mov
enter
jmp
into
mov
int3
into
jns
mov
sbb
mov
sub
adc
test
pop
push
sbb
xchg
adc
inc
jns
and
call
mov
adc
push
in
mov
fld
pop
mov
lds
std
xchg
cs
sbbb
out
neg
outsb
int3
push
out
pop
pop
add
lock
inc
stos
stc
lret
adc
push
sbb
ret
pop
sbb
es
lea
ret
jns
xchg
sbb
stos
jnp
ss
ljmp
outsl
lds
lods
test
addr16
ja
inc
fxch
push
xchg
rcrb
retw
cmc
insb
imul
in
jl
sub
fs
loopne
je
push
cmpxchg
rcl
adcl
iret
sub
or
cmp
adc
dec
fnstenv
fidivl
sub
xchg
sub
cmc
pop
add
or
push
movsb
cmp
jmp
cmpsl
movups
push
adc
stc
push
add
lcall
ds
mov
xlat
repnz
clc
jg
mov
pushf
jne
pop
aam
mov
scas
and
and
mov
movsb
addr16
mov
inc
fstpt
mov
add
cmp
fldt
call
enter
movsb
inc
inc
imul
es
out
or
add
cmp
push
xlat
push
sahf
xchg
neg
test
insb
xchg
int
lods
sub
shl
or
jns
stos
imul
mov
test
iret
push
loope
add
mov
imulb
push
cld
scas
or
lret
aad
loope
fs
loopne
push
lcall
cmp
xor
lock
cmp
stc
sbb
stos
adc
jle
in
pop
xchg
adc
push
adc
xchg
clc
sub
loope
dec
roll
cmp
jle
mov
push
dec
pop
inc
xchg
enter
fsts
xchg
leave
xor
movsl
xchg
inc
std
or
or
cmp
stos
test
aad
dec
das
icebp
sarb
es
pop
sbb
test
xchg
outsl
test
scas
xor
sbb
ljmp
dec
stos
fcoml
jmp
or
cs
jmp
add
das
jb
rorb
cmp
sahf
into
cmpsb
sub
xchg
cltd
jmp
andl
int3
loop
lods
lock
sahf
jo
push
std
fmull
es
inc
add
mov
push
mov
fisttps
jne
sub
adc
push
add
icebp
xchg
cmp
shl
dec
mov
cmp
mov
add
ror
cmpsb
fwait
sbb
insl
inc
mov
or
or
les
pop
popf
push
js
iret
jp
mov
jmp
out
or
dec
cmp
and
push
push
test
push
xor
dec
mov
mov
call
dec
daa
sub
pop
mov
mov
and
repnz
fs
or
dec
repnz
dec
mov
gs
sbb
adc
in
out
sbb
and
inc
push
push
sbb
xor
out
ljmp
js
test
add
lods
or
sbb
fwait
or
fucomp
pop
out
add
jne
in
scas
jae
pop
xor
movsb
cmp
jbe
jb
aam
jbe
pop
jnp
aam
adc
sbb
dec
sbb
aas
gs
out
lahf
mov
jnp
cs
lea
lods
idivb
shlb
pop
pop
sbbb
sub
push
aad
jbe
mov
int
aas
popf
in
push
push
push
sub
mov
mov
mov
cmp
mov
into
dec
cmpsb
gs
sbb
shlb
shrl
jl
cmp
fs
pop
fwait
sbb
jg
es
test
jb
repz
mov
loop
lods
jmp
mov
jae
mov
jne
fisubrs
adc
push
mov
xor
loope
lahf
cmpsl
in
cmp
les
lods
mov
rcrb
sbb
sbb
loop
addr16
clc
mov
mov
pop
pusha
mov
cmp
adc
mov
mov
push
call
pop
dec
test
add
mov
popf
icebp
mov
fcompl
xlat
cmp
popa
xchg
loop
xchg
mov
je
cmp
sub
cmpsl
jmp
int
inc
iret
mov
cmp
dec
cmp
dec
sbb
test
loope
mov
lret
sarb
fsubl
xchg
jb
stos
mov
mov
mov
or
or
mov
mov
add
mov
loopne
out
mov
pop
add
mov
andl
cmp
inc
movsl
adc
or
js
push
cmpsb
inc
test
sub
daa
push
sti
mov
lret
jmp
jp,pt
cmp
out
dec
lds
arpl
cmpsb
icebp
imul
out
mov
scas
push
mov
add
idivl
cltd
das
lret
out
aad
aaa
pop
pop
popa
mov
sub
fwait
pop
mov
mov
mov
or
inc
scas
cmp
fwait
push
mov
mov
inc
mov
push
pop
adc
mov
dec
aaa
in
and
mov
fmuls
and
int3
in
fstpl
jmp
mov
ljmp
xorl
aaa
filds
cld
cmp
iret
pop
mov
sbb
neg
in
xchg
jns
mov
imul
or
or
repz
pop
xorb
in
fnstcw
movb
sub
xchg
sub
inc
add
call
mov
das
mov
mov
stos
aam
pop
iret
add
pop
cmp
call
cs
std
lahf
jp
fldl
subb
jae
mov
ret
call
inc
push
jbe
mov
adc
gs
and
movsl
lret
repz
push
sub
subb
push
pop
in
and
or
jmp
icebp
xchg
movsl
dec
add
popa
test
movb
dec
gs
aaa
ja
sub
stos
push
sub
cmp
pop
aas
imul
fwait
mov
jecxz
jecxz
or
cltd
fnstenv
pushf
add
gs
mov
je
inc
inc
mov
or
scas
cmp
add
add
jmp
popa
mov
jecxz
pop
clc
daa
inc
out
into
dec
int
push
inc
push
cmpsl
xor
in
mov
lock
push
das
adc
xor
repz
inc
rcl
fdivp
sub
iret
add
or
into
pop
inc
mov
hlt
addr16
sub
mov
cmp
aas
xchg
orb
loope
insb
arpl
test
sahf
dec
ret
or
rorl
daa
test
pop
cli
mov
jnp
fdivrl
daa
xchg
repz
in
adc
scas
lret
add
inc
dec
lret
jl
idivl
pop
lahf
jecxz
or
adc
cmp
lea
push
push
and
cli
insb
scas
into
lcall
mov
or
jge
or
aam
adc
pop
sbb
xlat
mov
xchg
pop
add
cltd
cld
mov
xlat
jae
mov
in
bound
and
sbb
fistpl
push
nop
test
xor
push
mov
inc
sub
insb
add
clc
lods
nop
nop
and
mov
rorl
stos
lret
fmulp
push
push
arpl
mov
dec
out
mov
and
add
fwait
add
and
and
mov
push
je
sarb
call
test
pop
xlat
push
xlat
mov
out
pop
imul
mov
mov
jl
fwait
jl
int
push
mov
fildll
adc
pop
out
and
cmpsl
sub
adc
cmpsl
js
mov
xorl
push
repnz
or
jle
jb
inc
jl
sub
push
leave
cs
pushf
inc
out
jo
pop
xor
dec
or
aas
dec
adc
sub
gs
pushf
push
xchg
lcall
movsb
repz
lret
push
addr16
sbb
mov
mov
add
negb
aam
jbe
ja
cmp
out
aad
xor
fdivl
sbb
pop
xchg
add
xor
jp,pn
in
xchg
test
pop
scas
xchg
adc
ss
mov
xor
mov
pop
fstpt
mov
jle
sub
push
cld
dec
dec
jecxz
lcall
xchg
adc
imul
movsl
ret
inc
jge
icebp
cmc
out
push
mov
subl
sti
mov
cli
add
inc
pop
test
push
inc
into
and
mov
mov
xor
mov
jecxz
cs
and
push
push
sub
and
jbe
aaa
gs
lahf
add
int
int3
je
outsl
xor
mov
push
in
in
pop
std
mov
pop
pop
inc
inc
jo
mov
sti
stos
aas
insb
popa
rorl
ffree
xor
xchg
sub
push
inc
aam
aas
cwtl
push
inc
mov
sbb
enter
adc
leave
mov
aaa
inc
mov
dec
ror
xor
in
lods
ja
mov
sbb
repz
imul
sub
fs
call
sahf
sub
out
divb
mov
les
imul
jl
add
fs
jno
jns
rclb
xchg
sbb
pop
vmovaps
or
mov
addr16
lea
repz
into
xchg
mov
pop
bound
adc
or
cmp
xchg
fidivrl
sbb
xor
shll
insl
xor
outsb
shl
or
iret
adc
push
mov
inc
pop
icebp
push
ja
cltd
cmp
popa
out
jp
daa
loop
push
jne
sub
rorb
jno
mov
add
xchg
scas
adc
lock
dec
mov
lea
imul
sahf
adc
cmp
into
cmpb
fiadds
adc
mov
pop
icebp
faddl
push
test
and
incb
mov
stos
dec
popf
xchg
aaa
xchg
xor
testl
and
pop
insl
push
int
pop
daa
and
and
jns
xor
sub
or
dec
fdivl
pushf
jg
test
lock
aas
int3
inc
cmp
mov
cwtl
daa
jp
arpl
dec
push
lret
xchg
fstl
sbb
push
bound
ljmp
mov
out
push
lret
negb
dec
mov
in
jo
popa
jg
xor
fists
push
mov
scas
into
fwait
mov
mulb
dec
jmp
inc
mov
sbb
lcall
mov
push
and
test
jle
pop
mov
insl
test
or
push
lock
daa
test
inc
pop
jl
inc
sarl
cmpsl
nop
ds
sahf
pop
es
test
add
jp
test
es
xor
insl
cwtl
xor
adc
icebp
or
ss
sub
xchg
or
loope
stos
outsb
dec
xchg
cmp
jecxz
sbb
jo
mov
scas
mov
xlat
ljmp
pop
xor
push
and
in
arpl
xor
sarl
mov
pop
dec
mov
test
push
outsl
lret
jne
gs
cmp
xor
jne
rcrb
dec
mov
insb
mov
push
fstl
push
xchg
push
lahf
into
test
popf
pop
xchg
shrl
pop
adc
jno
test
int
push
sbb
int
jnp
and
xlat
enter
pop
arpl
lea
pop
jp
cmp
outsb
and
es
or
cs
xor
push
inc
cmp
addl
cmp
xchg
sbb
ficoms
mov
nop
xor
into
pusha
dec
insl
push
into
pop
pop
filds
cmpsb
cmpb
pop
sarl
sti
mov
adc
or
xor
pop
hlt
pop
dec
popa
out
sub
adc
and
mov
icebp
scas
cs
addr16
add
jmp
fbstp
sbbb
iret
sbb
gs
add
sub
stos
push
mov
push
inc
adcw
int
fsts
lea
and
and
popf
cmp
cmp
fildl
cmp
rep
push
or
lret
cmp
push
fisttps
pusha
xor
out
aas
push
sbb
cmp
or
dec
imul
and
daa
cmpsb
lods
out
lret
xor
push
scas
scas
xchg
clc
pop
sbbl
in
test
push
xor
adcl
dec
cmp
clc
pusha
push
inc
idivl
dec
jp
cmp
mov
bound
push
imul
or
pop
push
lret
cmp
push
dec
jmp
ffree
adc
ss
movsl
jno
clc
lret
jae
fisttpll
inc
into
shl
mov
clc
out
and
mov
gs
mov
std
xchg
pop
push
clc
jg
negl
xor
lcall
mov
out
and
inc
mov
jmp
nop
xor
popl
int3
jns
insb
mov
enter
aad
jecxz
jne
cmp
test
cmpsl
fstp
xchg
sbb
inc
repz
nop
push
mov
jne
loopne
pop
mov
cli
mov
les
xor
xchg
out
xor
add
pop
mov
testb
mov
lea
cltd
in
nop
movsb
jle
and
stc
gs
and
or
test
add
xor
es
push
shlb
imul
into
or
push
jg
mov
scas
test
and
xchg
xor
insb
push
mov
mov
pop
imul
pop
add
sbb
mov
pop
rcll
into
js
cmp
pop
adc
dec
in
enter
mov
sub
test
loopne
in
scas
pop
fcoms
nopl
pop
scas
inc
fistps
in
sarb
jbe
xor
rol
jecxz
sarl
dec
clc
inc
test
std
pop
pop
xor
sbb
or
das
lods
cli
mov
fisubrl
xlat
inc
arpl
insl
jns
cltd
add
and
xor
stc
jne
mov
lea
ds
jmp
mov
dec
lret
sbb
into
dec
add
mov
adc
mov
das
lret
xchg
test
mov
cmp
xor
adc
pop
imul
jbe
pop
inc
pop
mov
pop
ret
xor
fsubrl
imul
xor
lods
sahf
stos
xor
and
xchg
lret
fistpll
insb
mov
das
push
jle
sub
lock
lds
cmp
sub
insl
stos
cmp
jno
enter
jmp
out
pushf
pop
fucomp
icebp
daa
out
sub
jb
fwait
mov
jae
in
ja
andb
mov
xchg
mov
mov
xor
lret
lret
mov
sub
ja
inc
div
push
cmp
outsl
inc
xor
lret
pop
push
jmp
add
lods
sti
sub
scas
pop
popf
nop
insl
mov
push
fidivl
xlat
jg
clc
inc
mov
sbb
mov
xor
mov
mov
jecxz
mov
mov
xor
jge
cmp
pop
in
xchg
mov
xor
lods
pop
cmpsw
loop
jb
fiadds
push
roll
jae
insl
lret
scas
cld
xchg
pop
cmp
movsl
jl
test
mov
or
xchg
outsl
out
lret
sahf
call
dec
lods
cmp
or
push
imul
fisttpl
mov
jl
scas
dec
inc
lcall
mov
mov
or
cld
dec
mov
push
sbb
sti
cmp
sub
fstl
out
jns
jne
je
mov
inc
pop
daa
test
imul
ret
mulb
and
js
xchg
jo
dec
push
inc
enter
push
cmc
jle
repz
push
ja
pop
fwait
jle
shr
scas
ret
dec
ret
movsl
mov
sahf
aam
mov
shl
fadds
dec
mov
clc
mov
ret
out
rcll
hlt
das
lret
mov
push
dec
xchg
repz
adc
and
outsl
stc
out
stos
out
sti
mov
jg
repz
hlt
sbb
jge
push
or
xchg
push
add
loop
test
dec
mov
xchg
xorl
rol
cli
and
pop
push
xor
mov
ret
jg
pop
ljmp
and
add
leave
pop
loope
pop
je
jl
ds
and
lahf
xchg
and
out
dec
fcomps
cmc
add
lcall
arpl
adc
subb
cmpsl
mov
mov
add
cmc
insb
push
inc
push
xor
push
mov
test
add
fstpl
icebp
mov
inc
mov
xlat
push
fldt
jnp
pop
add
mov
outsb
ret
push
xchg
scas
pop
push
inc
aaa
dec
ficoml
dec
cmp
sub
xchg
push
leave
ljmp
add
stos
mov
shll
ja
push
pop
int3
xor
loop
dec
mov
scas
outsl
dec
sbb
inc
cmp
mov
push
loopne
and
and
push
mov
add
fnstenv
xchg
testb
hlt
int3
add
pusha
push
int
xor
sahf
mov
push
repnz
xor
jg
or
dec
add
insb
jno
lds
inc
and
inc
jno
pop
cmc
out
movsb
nop
mov
add
inc
pop
adc
aas
enter
push
test
xor
cmp
repz
fisttpl
dec
stos
ds
fwait
rcll
test
movsb
mov
or
pop
cmp
pop
call
or
sub
jb
nop
sar
test
test
pop
mov
decb
pcmpeqw
cwtl
add
push
inc
or
stos
sub
adc
mov
pop
mov
cmp
xchg
faddl
lds
cmpsl
and
mov
scas
cmp
or
out
xchg
sub
clc
dec
mov
stos
inc
mov
mov
push
pusha
dec
mov
cwtl
hlt
mov
scas
inc
nop
xchg
cld
jae
cmpsb
jne
hlt
or
call
daa
fnsave
push
repz
add
mov
sub
fsubrs
push
pop
push
mov
pop
mulb
and
shll
pop
cmp
mov
cmp
mov
test
jl
cwtl
stos
pop
lock
adc
call
xchg
outsb
repz
adc
mov
inc
adc
xchg
add
fists
add
mov
sub
testb
adc
jmp
push
shrb
out
xchg
inc
addr16
sub
xchg
add
mov
xchg
outsl
lds
fldenv
ss
fwait
adc
xor
addl
or
imul
and
jle
pop
call
sub
jno
mov
xor
jne,pt
icebp
jg
jp
mov
ror
in
xor
mov
mov
aaa
in
mov
cltd
adc
or
mov
fisttps
inc
lea
adc
shll
repz
pop
xchg
imul
bound
cmp
mov
cmp
js
and
scas
inc
js
or
mov
sub
stos
lock
inc
outsl
mov
lret
xchg
add
mov
push
pop
les
mov
inc
in
lret
test
insl
mov
dec
int
fidivs
sbb
xchg
and
sbb
popf
inc
pop
push
addr16
xchg
outsl
xchg
inc
jg
xchg
and
mov
fdivrs
pop
xor
ja
pop
sbb
repnz
add
imul
adc
repnz
fmull
pop
inc
lret
push
add
mov
pop
xor
or
out
cmp
jno
push
xchg
daa
xchg
sbb
sbb
sbb
xor
rol
xchg
mov
add
mov
scas
cli
adc
fildll
cld
xor
inc
xor
das
shll
adc
jg
jb
shrl
fdivs
xchg
ds
call
lret
pop
xor
cmp
sbb
dec
mov
stc
mov
push
jle
adc
xor
jmp
je
int3
int
fs
lods
popa
xor
stos
dec
sbb
mov
lods
mov
leave
mov
repz
call
mov
and
push
dec
jns
pop
add
repz
ja
push
mov
shl
iret
les
lcall
mov
push
orb
sbb
test
lret
out
cmc
call
sahf
lcall
in
dec
xchg
dec
mov
pop
or
mov
outsb
mov
pusha
fsubrs
inc
cmp
pop
push
jae
and
movsl
xchg
dec
xor
outsl
es
xchg
paddd
jo
xor
cmp
mov
xchg
or
js
inc
out
mov
push
insb
push
adc
and
adc
pop
ret
mov
add
das
mov
or
cmpsl
pop
inc
jo
hlt
fs
xor
lea
rclb
pop
push
mov
pop
pop
sti
test
cmp
fdivrl
sub
addb
add
aad
popl
int
cli
roll
scas
icebp
jle
xchg
push
pop
ds
sahf
sahf
aas
or
push
pop
inc
mov
xlat
jp
mov
adc
popf
lock
xchg
jecxz
loope
sub
cmp
shrb
jb
test
inc
push
lds
mov
or
hlt
mov
xlat
sahf
insl
sub
push
xchg
aad
js
jmp
hlt
mov
sbbl
fmull
stc
push
insb
loop
out
in
pop
outsb
push
popaw
aam
ret
dec
cli
or
xchg
adc
cmp
stc
incl
or
cwtl
push
cli
js
jmp
ret
sub
ss
jns
push
push
push
dec
jmp
pop
mov
pop
push
add
sub
sbb
leave
sbb
test
shll
dec
mov
shrb
arpl
dec
adc
loope
add
mov
mov
enter
push
inc
mov
pop
lock
stos
pop
jae
push
sub
movsb
fsub
push
ret
xor
and
mov
in
out
pusha
jge
mov
mov
sbb
and
sub
mov
mov
push
xchg
pushf
xor
test
mov
std
fs
fisubs
lret
cmp
aas
mov
in
xchg
ret
adc
lahf
es
mov
int3
icebp
cltd
int3
lods
mov
push
aam
ljmp
cltd
fstpt
xor
insb
cmc
lock
flds
pop
sbb
inc
jae
xchg
stos
inc
fcomps
lret
jbe
mov
inc
rclb
add
outsb
fsts
inc
lret
arpl
sbb
push
sbbb
test
and
outsl
lret
xor
bound
outsb
popf
jl
xor
mov
mov
adcl
sbb
pusha
mov
dec
or
mov
pusha
int
sti
fists
adc
push
vmovq
fisubs
mov
into
xor
or
push
dec
fwait
outsb
mov
mov
add
push
mov
std
loopne
call
adc
test
int3
fs
pop
cmp
jmp
stos
sub
xchg
fcmovu
cmc
sub
and
movsb
stos
jns
add
icebp
jecxz
cltd
ret
sbb
js
add
mov
xchg
mov
jbe
jp
cmpsb
adc
adcb
mov
dec
and
stc
push
and
push
enter
popf
pop
ss
outsl
xlat
cltd
jle
cmp
pop
jl
out
negl
fsubrl
scas
sub
mov
dec
es
clc
xlat
ret
jb
adc
es
pushf
adc
aad
lock
outsl
lahf
xchg
xor
push
add
cmpsl
xchg
xchg
or
jne
sarl
loop
aad
push
lods
sub
mov
xchg
fs
sbb
push
sbb
out
push
pop
jae
or
mov
mov
leave
insb
mov
pop
pop
les
icebp
push
xchg
pcmpeqw
mov
and
filds
sbb
dec
add
xor
pop
jmp
mov
mov
cmpsl
xchg
jno
inc
inc
sbb
inc
pop
jecxz
xchg
or
mov
dec
in
enter
test
dec
mov
gs
daa
shrl
xor
popf
fwait
andb
push
sbb
mov
adc
push
leave
cmp
ss
jo
mov
push
sub
dec
jnp
xchg
push
mov
lahf
mov
jp
inc
mov
adc
push
jno
jle
cld
xchg
sbb
fs
int
fdivp
divb
rclb
lea
jae
cmpsb
imul
push
sti
hlt
push
jle
addr16
imul
mov
neg
mov
xor
xor
jge
fbld
es
fwait
aaa
setge
inc
push
jmp
sub
js
div
fbstp
pop
shlb
gs
jo
sbb
popf
pop
mov
ds
mov
or
cli
cmp
xchg
iret
push
add
filds
lret
mov
push
inc
push
lcall
enter
pushf
push
lahf
push
mov
jno
mov
mov
loope
jp
aas
dec
mov
pop
and
in
sahf
push
push
js
adc
jb
mov
ficomps
add
xchg
sbbl
call
sbb
xchg
cwtl
ljmp
xchg
sti
arpl
xchg
inc
addl
mov
cmpb
xor
sbb
lcall
push
addr16
dec
subb
cmp
aad
mov
or
mov
adc
enter
add
lods
jae
mov
cs
stos
test
pusha
xchg
inc
sti
mov
sahf
xchg
mov
inc
mov
stc
mov
mov
scas
lods
mov
dec
mov
jbe
jns
cmp
or
jmp
cltd
call
mov
sbb
out
sarb
sar
or
inc
movsb
jecxz
scas
mov
popw
cmp
adcb
fistps
sub
lahf
add
sbb
push
rclb
mov
enter
test
flds
adc
sub
repz
dec
xchg
test
push
jmp
fadds
dec
out
mov
in
xor
pop
cmp
lock
dec
cmp
fidivs
lcall
shrb
mov
add
in
fildl
rcrb
es
je
xlat
sbb
not
xchg
jg
dec
inc
pop
cmp
xchg
cmp
xchg
movhps
sbb
popf
pop
xchg
xchg
cmp
imul
add
pop
cmp
add
jmp
ret
push
dec
lods
and
push
insb
xchg
or
shrb
test
fnstcw
mov
xchg
mov
fucomi
shll
ja
lock
mov
and
out
xchg
hlt
iret
push
adc
outsb
mov
xchg
insb
sub
sbb
add
enter
iret
aad
jecxz
in
call
and
and
clc
push
fs
data16
xchg
icebp
pshufw
call
xor
popa
cmp
inc
nop
xchg
sbb
dec
rcl
jge
mov
mov
xor
cmp
out
jne
movsl
aas
inc
pop
sbb
dec
mov
xor
pop
cmc
sbb
out
mov
mov
mov
pop
adc
les
fnstenv
mov
pushf
in
pop
fidivrl
pusha
jbe
arpl
pop
push
fs
into
int3
ljmp
aam
xchg
fcoms
repz
das
into
push
cld
subl
sub
test
mov
adc
les
cs
mov
movsb
scas
leave
mov
push
inc
in
aad
sbb
push
in
lret
add
lret
xor
or
mov
movsl
cmpsb
push
push
jecxz
sbb
dec
inc
ljmp
xchg
push
fistpl
xor
inc
arpl
cmpsl
cmp
fs
int
add
jo
and
or
icebp
xor
or
pusha
lret
jne
and
push
scas
stos
addr16
cld
xchg
in
jbe
and
lcall
nop
cld
add
les
sbbb
in
mov
or
push
clc
mov
push
sub
cwtl
fcomps
cmpsl
aas
mov
test
loopne
mov
ljmp
addl
mov
lods
mov
pop
mov
pop
stc
orl
cli
lock
mov
test
insl
add
xor
xor
loope
imul
push
adc
ret
push
je
fsubp
add
dec
jl
xchg
or
mov
add
lcall
pushf
scas
mov
lcall
repz
rorb
jno
imul
cli
push
mov
mov
push
leave
ret
or
push
int
out
shll
adcb
push
jge
or
xor
pop
push
inc
dec
scas
fld
push
mov
repz
stos
mov
dec
aaa
mov
pushf
test
adcb
push
jl
clc
loop
mov
xor
jge
les
fidivrs
sub
cld
int
jmp
sbb
pavgb
jle
or
subb
scas
cmpl
stc
popf
fistl
sub
hlt
fidivrl
dec
je
test
lock
sbbb
aaa
xor
shrb
jl
popf
pusha
popa
inc
in
dec
and
xor
aas
fldcw
mov
add
and
movsl
cmpsl
push
incb
ret
sahf
push
test
inc
je
sahf
sbb
xlat
incl
idivl
aaa
mov
jp
dec
in
or
outsb
mov
sbbb
cmpsb
sub
mov
cmp
cs
or
xchg
dec
fs
add
mov
sbb
cmp
sub
add
sbb
push
popf
mov
hlt
pop
fwait
lret
inc
loope
insl
mov
rol
pop
pop
mov
xor
add
cwtl
adc
sti
mov
test
mov
mov
dec
ret
dec
pop
scas
hlt
jp
or
pop
std
sub
loopne
cmp
iret
popf
mov
pop
sub
mov
jne
push
idiv
divl
jp
cmp
in
das
jnp
fildll
das
pop
mov
ss
shl
lock
jo
ds
fcoms
dec
mov
imul
ret
pushf
adc
jns
rcr
lods
cltd
xchg
xchg
push
movsl
add
push
add
popf
inc
outsl
inc
insl
inc
mov
push
test
inc
xchg
add
sub
adc
mov
push
sub
sub
jp
rorl
loopne
in
loop
add
dec
add
cmp
mov
mov
or
mov
dec
repz
test
sarb
or
arpl
cmp
xchg
popf
push
ret
inc
inc
jle
xchg
push
loop
aad
incl
add
popa
test
jae
jge
xor
test
dec
stc
xor
jb
or
fldl
shr
hlt
inc
movsb
adc
xchg
out
sub
add
xchg
mov
ss
sbb
aad
test
xchg
xchg
into
mov
fwait
popf
xor
aas
ret
and
sub
cmp
sbb
mov
je
in
lahf
out
and
add
sub
imul
data16
lret
mov
sub
test
dec
shrl
cmp
addl
mov
mov
xor
and
add
mov
inc
out
xor
loope
hlt
inc
dec
mov
cmpl
xor
sbb
fists
jns
lcall
cmp
pushf
popf
pop
cli
xchg
and
cwtl
jmp
loop
into
or
or
xchg
sub
negl
sbb
shrl
dec
outsb
je
into
gs
je
rcrl
pop
lods
jl
xchg
out
pop
popa
cmp
out
mov
xchg
cmovge
xchg
sbb
ret
cmc
fsts
mov
fwait
insb
dec
push
dec
das
xchg
iret
pop
rcll
mov
xor
hlt
dec
or
je
mov
adc
mov
imul
adc
js
adc
nop
imul
dec
push
orb
jo
cmpsl
mov
dec
push
xor
inc
mov
mov
lcall
iret
ds
push
mov
cmp
subb
aas
jl
sbb
mov
mov
ficoms
sbb
pop
das
and
outsl
cmp
xor
cs
xchg
cmp
call
mov
outsl
divb
sbb
insb
sbb
mov
inc
pop
jecxz
je
adc
les
inc
mov
pop
in
js
and
scas
addr16
cmp
or
pushf
xor
dec
sti
popa
roll
cli
and
adc
fwait
int
bound
mov
cltd
mov
mov
lahf
xlat
jg
mov
repnz
push
jne
jge
pusha
sahf
dec
cmp
push
xor
add
cmp
lods
fwait
xor
sub
or
sub
push
inc
mov
stos
add
xor
call
fs
cmp
mov
clc
stos
mov
and
stc
jne
sti
jno
dec
pop
mov
out
mov
mov
lcall
cmp
idivb
movsb
in
ds
lods
mov
and
xchg
lahf
aad
push
test
test
addr16
or
mov
xchg
jle
adc
clc
jae
mov
sbb
and
call
and
pop
loop
popa
sbbl
out
loope
cltd
data16
dec
mov
stc
in
mov
mov
lods
test
repnz
sub
xchg
xor
das
add
mov
sar
mov
daa
insb
add
xor
sub
sub
ja
jae
add
lods
push
int
pop
daa
aam
mov
sub
mov
stos
xchg
lock
mov
ret
or
filds
rorl
out
ljmp
imul
mov
jmp
fnstenv
sub
lods
push
add
adc
pop
mov
push
rcrb
push
sub
and
mov
mov
ja
loop
push
lcall
jb
sbb
lcall
pop
mov
movsl
out
subl
mov
jp
mov
pop
mov
arpl
sahf
lods
insb
lock
lahf
out
lahf
loope
inc
xchg
inc
mov
push
jb
mov
pop
jb
xchg
lcall
inc
push
push
cmc
push
xchg
mov
jmp
jp
outsb
aam
shlb
test
cltd
sbb
fsubr
push
in
das
popf
scas
cmp
js
sbb
mov
out
test
out
xor
jae
mov
outsl
aaa
rorb
test
loop
inc
testl
pop
lret
notb
dec
fs
mov
test
sbb
fcmovnb
aad
in
rep
out
das
pop
repz
adc
imul
xchg
sub
dec
daa
xchg
push
stos
jp
and
out
push
xchg
jae
xor
xor
dec
xlat
xchg
lds
push
mov
pop
push
popa
das
jmp
push
dec
pop
mov
and
sahf
ficoms
je
inc
addb
jl
fsubrs
mov
addr16
rcrb
lods
outsl
idivb
dec
jnp
cwtl
aam
mov
out
xchg
mov
shll
lea
inc
lods
mov
ud1
ljmp
push
mov
mov
adc
xchg
sahf
repnz
push
ret
pop
mov
mov
cmp
repnz
xor
mov
jnp
out
pop
aas
adc
push
inc
cmp
repz
jo
movsl
and
xor
inc
outsb
movsl
out
push
enter
sahf
jl
cmpl
les
nop
call
jbe
out
das
cmpsb
ds
in
jle
cld
addb
inc
mov
inc
loope
xor
cmp
sub
in
mov
fs
push
lea
decl
shll
xor
fwait
arpl
xchg
repnz
jecxz
xor
xchg
and
jl
add
aas
push
dec
aad
frstor
xor
fistl
and
jle
sbb
out
xorl
jg
out
mov
repnz
pop
clc
icebp
mov
mov
out
insb
cli
adc
lahf
daa
sbb
loop
out
outsl
jne
push
sahf
call
mov
mov
int
xor
into
lahf
in
push
xchg
push
sbb
and
ljmp
pusha
mov
inc
sub
pop
idivb
insl
loope
add
xchg
movl
or
push
cld
push
jbe
mov
leave
push
stos
pusha
add
xor
rolb
sub
lock
adc
sbb
or
test
stos
or
inc
insb
add
pushf
subl
fdivrl
or
fcomps
leave
xor
pop
fists
xchg
mov
cmc
push
jl
xlat
leave
clc
cwtl
out
mov
sbb
movsl
lock
jnp
cwtl
test
xchg
addr16
xchg
fistl
mov
inc
adcb
mov
lods
lods
cwtl
jmp
xor
mov
bound
inc
cs
push
and
xchg
mov
movsb
mov
sbb
add
lods
lods
insb
mov
and
jns
cltd
fisubrl
inc
mov
jecxz
xor
jle
fstps
sub
or
int3
gs
daa
repnz
dec
mov
xchg
or
sbb
pop
push
je
xor
push
das
dec
jecxz
stos
push
jg
or
cwtl
pushf
sub
adc
or
int
jg
inc
scas
xchg
mov
sbb
mov
notb
push
or
out
pop
mov
sub
into
xchg
sbbb
shlb
dec
adc
inc
sbb
pop
add
add
jo
sbb
fcoml
mov
push
cmp
adc
sub
imul
inc
mov
test
shll
jo
push
cmp
sub
push
and
jo
fsubs
loopne
fiaddl
sub
pop
cmp
sub
ja
sbb
out
mov
je
push
cmpsl
mov
movsl
addl
sti
mov
insb
aas
mov
scas
scas
pop
ja
pusha
xchg
sub
add
adc
hlt
fiaddl
outsl
mov
loopne
pop
rorb
mov
pop
cmp
jb
mov
test
xor
fimull
pop
in
add
jle
jp
and
in
mov
jno
mov
popf
test
sbb
fcmovb
xchg
and
outsb
mov
pop
out
pop
add
sub
dec
stc
mov
test
xchg
scas
dec
add
into
add
rcll
cmp
cwtl
into
stc
stos
inc
mov
icebp
push
cld
and
mov
add
inc
rcl
ss
push
dec
push
jbe
pushf
cld
rol
hlt
add
dec
mov
cmp
sbb
push
cs
xor
mov
xchg
lock
adc
adc
and
and
cs
push
loope
and
sbb
ret
ret
jg
jae
pop
ds
or
or
mov
shll
insb
mov
xchg
adc
out
jno
adc
push
data16
test
and
xor
lahf
xchg
mov
scas
xchg
lds
mov
insb
shl
popa
in
jo
aas
roll
xchg
ret
outsl
sbb
jne
ds
and
sub
jg
xchg
xor
sbb
lods
mov
fsubr
adcl
or
cmp
cmp
bswap
shrl
push
xor
ffreep
dec
stos
sub
add
mull
inc
and
cmc
xor
inc
push
loope
mov
add
dec
mov
lret
lods
dec
subb
xchg
repz
outsl
mov
cmp
sub
shrl
stc
dec
jb
push
jecxz
xor
ss
pop
push
or
push
aaa
push
int3
jl
jbe
negl
and
mov
jno
mov
cmpsl
xchg
mov
jp
sti
sbb
push
dec
or
test
pop
test
xor
or
sub
out
gs
jge
dec
pop
sbb
bnd
adc
add
jnp
testl
addr16
lock
sub
out
jno
movsl
rol
orb
or
cs
lock
push
pop
sbb
push
xor
xor
aam
mov
cmpb
cmpsl
insl
and
in
jmp
loope
sbb
sbb
aas
test
lds
mov
fbstp
pop
shlb
scas
jl
dec
out
lret
pop
pushf
aas
arpl
data16
pop
shrl
xor
daa
pop
mov
inc
sbb
mov
jbe
in
pop
adc
hlt
data16
push
outsb
jmp
ret
mov
cmc
aas
nop
xchg
sahf
mov
adc
jb
sub
cmp
jge
xor
sbb
adc
xchg
xchg
pop
sahf
xchg
insl
andl
or
sub
in
arpl
dec
scas
xor
scas
sub
sbb
test
pop
push
sub
pop
lea
sbb
sub
lock
cltd
out
mov
roll
add
push
sbbb
bnd
pop
rcr
xor
daa
rcll
ljmp
jb
mov
dec
rcrl
sbb
xor
push
push
andb
add
loope
mov
rcr
shl
push
scas
sub
lahf
xor
sbb
mov
testb
sub
inc
popa
lret
xchg
pop
stos
or
push
adcb
in
stos
mov
mov
aas
mov
inc
pop
in
sub
cmpsb
adc
cmc
dec
jnp
je
add
push
pop
insb
add
insl
and
push
ret
jnp
popf
push
int3
or
jae
imul
xor
dec
inc
add
in
mov
cmpsb
pop
mov
or
js
or
outsl
adc
inc
scas
pop
mov
js
hlt
cmc
cltd
xchg
test
fiaddl
fwait
add
mov
jbe
ficoms
pop
jae
mov
gs
xchg
hlt
pop
push
std
mov
fnstcw
inc
xchg
divl
arpl
cmpsb
stos
fsubp
cmovs
clc
add
adcl
and
or
pop
dec
insl
rol
add
sbb
loope
das
jno
add
shll
les
cmp
outsl
xor
movsl
cmp
js
cmp
and
lcall
jne
mov
andb
jae
xor
int3
inc
push
mov
adc
inc
scas
adc
jae
inc
sub
xchg
sbb
jae
add
mov
ss
dec
inc
xchg
adc
pushf
sbb
mov
jo
mov
dec
sub
outsb
and
jecxz
cmp
ljmp
hlt
mov
mov
addb
cmpsb
dec
jae
and
xchg
adc
jle
cmp
mov
in
test
pop
addl
sbb
aad
pop
push
ljmp
mov
pop
pop
xlat
scas
inc
in
xor
pop
cmp
sbb
inc
xchg
pop
and
dec
fisubrl
pop
add
mov
lds
push
push
lods
add
adc
ficoml
clc
loope
sub
fidivl
push
pop
xchg
mov
mov
add
and
stos
xor
out
cmp
idivl
stos
hlt
mov
cli
push
decb
add
negl
das
and
mov
negl
imul
repz
and
or
inc
jb
jge
sbb
rcl
adc
sbb
mov
out
in
xor
and
and
adc
sub
mov
xor
cmp
xchg
daa
rorb
push
in
leave
add
xor
subl
jle
mov
jbe
dec
push
sub
push
arpl
mov
push
imul
jge
sbb
adc
mov
mov
and
or
inc
pop
mov
ds
dec
ja
and
mov
push
mov
push
cmp
lock
cmpsb
es
push
daa
dec
mov
and
pop
lods
dec
jg
jne
repz
imul
jecxz
call
idivl
leave
hlt
lret
sbb
adc
popf
sahf
cmp
push
mov
xchg
das
pop
pop
sub
leave
popa
clc
subb
xchg
push
mov
icebp
cmpsb
push
xchg
inc
inc
lock
ss
xchg
mov
and
add
dec
movsl
sub
lret
aam
push
mov
call
shll
inc
xlat
sbb
repnz
loopne
mov
mov
int
hlt
and
mov
pop
into
add
rorl
jmp
sar
sbb
outsb
mov
xor
push
xchg
xor
loopne
pop
loop
or
roll
out
jns
lods
icebp
or
sti
pop
add
sbb
pop
xor
jmp
dec
repnz
icebp
jae
push
notb
sub
adc
stos
dec
jle
ds
inc
mov
jge
lods
sbb
fs
sub
mov
xorl
insl
jp
dec
xor
add
test
test
js
inc
ljmp
rcrl
add
add
xlat
dec
adcl
cltd
inc
sbb
cltd
imul
jecxz
xor
stos
sub
data16
mov
pop
push
dec
xchg
sbb
test
cmp
in
cmp
es
fbld
xchg
xor
push
lea
insb
movsb
pop
ret
sbb
les
lea
cmovb
jmp
es
nop
mov
fcmovne
mov
mov
push
movsl
andl
sub
stc
pop
iret
rcr
or
call
xor
in
imul
xor
xor
dec
mov
mov
dec
fsts
inc
pop
jmp
movsl
mov
sbb
push
int3
add
jmp
popa
mov
adc
sbb
imul
stos
lahf
ret
add
adc
enter
sahf
cmp
scas
ljmp
xchg
push
popf
xchg
stos
insl
movsl
xchg
and
imull
js
mov
mov
and
inc
jmp
loopne
test
mov
fwait
add
jbe
sti
aaa
in
sbb
loope
mov
inc
mov
inc
shr
enter
sub
pop
pushf
stos
iret
pop
cmp
mov
sub
sbb
clc
test
inc
cld
mov
xchg
pop
mov
push
nop
mov
push
rcrb
popa
shrb
or
es
test
dec
into
sti
push
call
sti
in
scas
fdivs
es
sub
or
sub
subb
ret
sbb
xchg
xchg
mov
add
ret
jge
repnz
movsl
nop
stos
xor
xor
cmp
into
fimuls
adc
aad
in
mov
sub
add
les
push
cmp
cmc
sarb
or
rolb
js
add
or
jecxz
int3
sub
sbb
aad
mov
cmpsb
pop
mov
dec
dec
cwtl
dec
or
sbb
cmp
or
sbb
mov
lret
out
cmpsb
std
dec
pop
push
dec
call
loopne
in
cmp
shr
pop
xor
dec
inc
ss
fmul
xor
mov
inc
push
insl
outsb
cmc
jbe
dec
adc
mov
jecxz
dec
incl
mov
xlat
inc
in
xchg
add
js
pop
call
xor
jecxz
faddl
test
in
mov
into
popf
push
sub
or
xorl
add
bound
xor
xchg
fists
add
mov
mov
lods
mov
insb
repnz
aad
insb
test
sub
sub
sbb
or
jb
mov
orb
sbb
cmp
shlb
iret
stos
jns
jne
dec
push
imul
cmpsl
fisttpl
ficomps
dec
xor
jp
mov
pop
add
push
loope
lahf
pop
inc
in
pop
inc
dec
xchg
loopne
stos
loopne
push
stos
dec
mov
inc
jecxz
out
ficompl
popa
in
jge
mov
fxch
cmpsb
lea
cli
cmp
test
ret
mov
jp
ret
addr16
cmp
je
sub
scas
mov
rcrb
mulb
xchg
inc
jbe
fldenv
out
ljmp
and
mov
mov
mov
lahf
mov
mov
ror
push
mov
dec
in
outsl
add
sub
fucomp
jecxz
jmp
xlat
inc
inc
cmp
stos
xchg
loopne
jle
fstpl
ljmp
jno
mov
add
mov
sbb
xchg
xchg
xor
lods
sub
enter
mov
pop
cmp
out
and
xor
and
and
sbb
es
scas
in
adc
das
cmp
cmp
fimuls
cltd
ds
int3
and
fwait
xchg
int
fadd
sbbb
sysret
xchg
rorb
dec
push
mov
ret
loope
adc
ljmp
stc
mov
shrb
leave
and
mov
inc
and
add
sbb
mov
push
rcrb
adc
sbb
out
sbb
out
mov
add
push
inc
xchg
ljmp
mov
push
jl
inc
jns
cmp
movsl
xchg
pop
mov
dec
icebp
pop
push
jbe
or
pop
sbb
mov
push
decl
and
xchg
jle
xchg
rcrb
xor
inc
repnz
cmpsl
push
dec
push
jne
sarl
fwait
cld
cmp
dec
push
adc
mov
sti
push
sahf
arpl
xchg
xor
fcoml
mov
mov
push
cld
das
popf
sub
xchg
fadds
aad
movsl
mov
testb
int3
xchg
rorb
call
xchg
je
or
push
sbbl
cwtl
jno
xchg
lret
fs
orl
lods
lock
add
arpl
xchg
ja
sbb
and
leave
push
inc
loop
inc
pop
mov
cmp
dec
fadd
xchg
repz
mov
cld
std
in
rorb
andb
pop
imul
mov
xor
in
sub
insb
jbe
sub
sar
rolb
mov
cmp
nop
aas
pop
sbb
mov
dec
sbb
push
cmp
dec
clc
adc
call
pop
ja
and
sbb
mov
leave
in
jl
adc
mov
lock
and
mov
movsb
push
sti
ret
mov
dec
sbb
adc
cmp
orl
movsb
data16
inc
xor
jge
sub
cmp
lock
movsl
repnz
in
xchg
shl
xchg
repz
add
jl
mov
gs
sub
in
add
xor
or
jg
and
mov
sbb
int3
pop
es
popa
mov
mov
adc
inc
mov
mov
mov
xchg
or
nop
repz
adc
dec
sub
das
sbb
test
sbbl
imul
aaa
mov
xchg
jo
leave
jle
jmp
xchg
jno
xor
jge
scas
stc
out
pop
std
sbb
adc
jnp
insl
add
data16
jno
jnp
jnp
ds
mov
popa
stos
in
in
lods
lods
fsub
insl
mov
dec
shrl
inc
insb
shrl
dec
out
cwtl
mull
in
js
xor
aad
pop
mov
and
mov
das
inc
jb
test
xor
rorb
sub
jbe
cmp
dec
pop
sub
jle
cmc
or
xchg
cmpsb
push
pop
or
cltd
gs
outsl
fists
inc
fisubs
dec
push
call
lcall
inc
cmp
fwait
cmp
mov
cs
push
fildll
repz
push
sbb
stos
call
mov
nop
push
lahf
aad
xor
jmp
xor
xlat
test
sub
fldenv
movsb
adc
mov
cld
sbb
shlb
cmp
lods
dec
int
sub
lahf
in
pop
adc
xchg
cmpsb
or
scas
dec
loop
mov
push
xchg
inc
mov
fldenv
jb
subb
fwait
pop
pop
int3
mov
sub
pop
xchg
sbb
mov
aas
sub
add
aaa
mov
pop
test
mov
xor
inc
fisttpll
sub
adc
sti
push
ret
jmp
jle
sbb
lret
jo
jo
nop
dec
add
mov
and
jne
int3
jnp
inc
cmpsl
pop
mov
stos
js
lcall
xor
inc
jge
aaa
push
bound
daa
test
lea
push
add
outsb
movsb
inc
cmp
xchg
in
jge
mov
and
cltd
movsl
push
jle
mov
xchg
inc
or
in
aad
rolb
loop
lea
adc
mov
jnp
xchg
rclb
sbb
mov
cmp
push
ja
xor
mov
stos
movsl
or
outsb
cmp
dec
movsl
flds
cmp
cld
cmp
int
popl
leave
das
sbb
insb
sbb
jne
inc
mov
hlt
jno
sbb
fwait
adc
in
sahf
add
lcall
adc
or
mov
in
dec
sub
jbe
pop
cmp
cmc
push
call
xor
pop
out
stc
outsb
mov
lds
cmp
jb
or
xchg
mov
sub
xchg
jns
mov
std
lds
repnz
loope
push
add
mov
ret
ror
jo
cmpsb
push
jae
jp
sbb
adc
gs
pop
or
shlb
dec
pop
cmpsl
pop
xchg
sub
pusha
testl
sub
push
mov
sub
mov
cltd
mov
pop
mov
add
repnz
movsb
lea
pop
popf
mov
test
mov
mov
cltd
dec
mov
or
or
or
js
xlat
adcl
ds
fbstp
gs
enter
mov
dec
dec
fs
push
or
or
jl
into
mov
jne
lods
cmc
fnsave
shl
pop
cmp
xlat
inc
fbld
add
fcmovbe
push
pop
insb
dec
test
and
mov
pop
and
js
inc
mov
mov
insl
call
enter
stc
sub
sahf
inc
fdivp
lahf
popa
repnz
cmpsb
out
sub
fsub
fldcw
and
and
imul
out
stc
rcll
mov
lds
sbb
pop
inc
sbb
or
add
fsubr
mov
popa
lcall
mov
dec
push
sub
sti
lret
sbb
fldt
xor
dec
xor
xchg
out
sbb
push
fnstenv
in
cmc
xchg
push
bound
mov
pop
icebp
push
xchg
call
or
jmp
push
add
fwait
mov
das
xchg
stos
add
std
imull
push
inc
imul
mov
sahf
mov
mov
mov
outsb
xchg
jnp
ret
enter
pop
jb
ret
add
cmp
ja
aaa
sbb
fwait
xor
mov
adc
mov
inc
inc
jecxz
inc
dec
and
sub
jno
sub
jmp
jp
lret
pop
in
xchg
outsb
xor
xchg
sbb
mov
out
sbb
sub
or
mov
xchg
dec
jne
pop
mov
or
aas
mov
mov
pop
mov
out
cmp
cmp
jl
jecxz
mov
not
xchg
adc
cmp
mov
pop
nop
cmp
mov
lock
jb
lret
xor
xor
notb
in
cli
jle
lea
fwait
jbe
icebp
pop
loopne
imull
add
mov
nop
inc
dec
js
adc
and
mov
nop
les
and
dec
popa
aad
rolb
mov
xor
scas
loopne
fsubrl
ficoms
stos
inc
push
mov
inc
sbb
mov
loop
sbb
pusha
test
sub
es
enter
cmp
in
adc
sbb
sbb
int3
je
mov
mov
add
xchg
lcall
mov
xor
adc
testl
inc
mov
dec
gs
inc
push
push
les
ss
dec
sbb
repz
daa
in
shrb
adc
and
or
sbb
loope
inc
push
xor
mov
mov
rclb
mov
inc
rorl
in
ror
ja
xchg
mov
cmpsb
repz
std
xchg
test
testb
mov
mov
dec
xor
add
and
dec
push
xorl
aam
popa
addr16
bt
aaa
mov
testl
insl
lods
lods
xor
push
inc
pop
sbb
jnp
popa
inc
and
sub
or
cmp
xchg
xchg
adc
inc
push
jp
cmp
popa
loopne
or
xchg
and
rorb
or
sahf
push
pmaxub
mov
dec
daa
cld
jo
shrb
mov
imull
mov
inc
mov
jnp
insb
mov
mov
dec
push
je
int
lea
std
std
aam
dec
sbb
aaa
adc
and
sub
insb
adc
jmp
cltd
xchg
gs
inc
je
lock
push
cld
jl
lock
out
add
into
lret
aad
xchg
in
dec
clc
in
xor
out
sbb
mov
aam
je
arpl
rolb
adc
push
add
enter
push
fistpl
jmp
pusha
or
scas
push
dec
pop
popf
dec
mov
mov
xor
or
xchg
jg
and
ret
ss
addb
or
cmp
hlt
sub
pop
sarb
icebp
nop
roll
push
ret
and
movsb
andl
xor
lea
ss
xchg
call
dec
iret
fistl
push
icebp
rcrb
dec
call
xchg
jbe
mov
adc
gs
in
push
mov
mov
lds
push
inc
insb
mov
or
adc
adc
mov
sub
pushf
lods
xchg
pop
enter
lock
inc
mov
into
fisubrs
dec
outsb
mov
and
xchg
cmp
stc
mov
mov
dec
pop
movsl
adc
mov
cmp
dec
js
cmp
xor
imul
mov
cmc
cmpsb
inc
pop
sbb
scas
jg
mov
mov
stos
shrl
lahf
or
inc
or
es
gs
jb
fdivrl
sub
sub
or
mov
and
mov
lock
pop
scas
mov
addb
je
add
push
xchg
data16
movsb
and
leave
push
pop
cmp
and
add
int3
push
mov
jg
or
orb
sub
mov
notb
xchg
mov
xchg
notl
pushf
lea
push
xor
xchg
insb
mov
inc
sbb
iret
sub
xor
sub
jno
dec
sbb
arpl
repnz
mov
or
mov
leave
imul
and
dec
sahf
sub
cmpsb
sbbl
dec
mov
sub
sbb
fwait
repnz
in
cwtl
dec
orl
push
fs
xchg
icebp
sub
stos
mov
xor
pop
xlat
and
adc
pop
das
add
push
push
jp
mov
dec
mov
fsubl
cmc
jae
inc
cli
call
ljmp
aam
xchg
add
cmp
ficoml
dec
je
mov
into
adc
or
mov
push
scas
test
aas
xor
dec
jb
jno
test
mov
jb
fwait
test
adc
shlb
fcomps
bound
roll
bound
js
rclb
fisttpll
aad
fs
jp
ljmp
adc
outsb
mov
mov
or
mov
clc
mov
push
mov
adc
cmp
outsb
jno
pop
movsb
iret
jnp
inc
sbb
push
repz
jmp
add
in
dec
mov
jmp
movsb
cmpl
test
cld
movsb
push
xchg
mov
cld
xchg
sub
or
js
out
das
jl
cmp
daa
lret
dec
pop
incb
mov
outsb
test
lret
clc
cmp
or
or
add
jo
sbb
call
sub
push
int3
insl
inc
dec
cld
xor
inc
mov
sub
lahf
pop
mov
dec
or
mov
or
adc
push
mov
adc
shlb
mov
inc
fcomip
cwtl
lock
pop
dec
mov
adc
mov
xorb
cld
mov
dec
add
into
mov
jmp
jns
jae
sbb
lcall
sbb
and
addr16
mov
js
mov
xchg
addb
and
mov
orb
mov
jg
stos
aam
aas
push
scas
icebp
iret
imul
inc
push
in
xchg
std
cld
xchg
mov
sarb
lret
xchg
and
add
and
mov
add
hlt
aam
adc
push
scas
pop
or
dec
les
shl
push
jns
rcrb
push
lods
add
jns
jbe
out
or
xchg
fiaddl
in
inc
fidivs
sub
lret
les
jmp
sbb
adc
js
aas
sub
xchg
loopne
outsb
das
jns
jae
scas
xchg
roll
in
mov
sbb
arpl
add
movsl
mov
pop
pop
repz
in
xchg
push
pop
mov
jmp
jmp
add
ficompl
jl
adc
pop
pop
aam
gs
inc
es
xor
js
out
imul
es
push
sbb
adc
jmp
cmpsb
fnstenv
test
adc
or
or
sbb
movsl
and
dec
lods
int
lock
sbb
leave
xor
fyl2xp1
sub
out
dec
or
adc
push
dec
pop
mov
lea
jno
and
out
push
outsb
mov
xchg
pop
xchg
jo
enter
jge
adc
or
ja
jg
movsl
push
je
adc
mov
mov
dec
mov
adc
nop
xchg
repz
push
out
loopne
insb
sbb
mov
lahf
jg
dec
jo
sub
sub
mov
lods
ficoms
repnz
shlb
mov
or
cmp
pop
mov
sbb
pop
inc
mov
stos
nop
sbb
test
imul
ror
jge
ss
xchg
add
pop
cmp
fcmovb
arpl
sub
or
xchg
loop
gs
dec
pop
adc
pop
dec
adc
jno
cmpsl
idivb
push
push
fsqrt
xor
das
sub
mov
out
pop
xchg
mov
lods
pusha
cmp
or
out
jecxz
movsl
cmp
pop
and
mov
push
push
jle
cltd
gs
xor
loopne
sub
mov
ror
hlt
adc
fimull
out
cmpsl
mov
cmp
insb
shlb
test
imul
cwtl
add
jge
popf
mov
xchg
sbb
pop
jl
call
das
test
xchg
sbb
mov
popf
das
test
or
daa
cmp
xchg
lods
sub
or
or
jae
test
or
jg
sbb
pop
jns
in
pop
mov
icebp
add
or
inc
dec
movsb
inc
mov
jnp
imul
subb
stos
inc
pop
dec
or
movsw
dec
push
data16
cmpsl
fcomps
aad
sbb
cwtl
imul
dec
repnz
xchg
inc
jnp
lods
jg
push
jns
inc
push
inc
mov
ljmp
pop
adc
cmp
lods
ljmp
cmpb
dec
mov
sahf
lea
das
jns
xchg
ret
lahf
pop
lods
inc
and
jno
cmp
jb
jns
sub
repz
int3
mov
inc
les
xchg
mov
ret
fsubrs
test
shl
add
mov
mov
inc
std
aas
aaa
mov
mov
leave
push
arpl
faddl
imul
xlat
in
sbbl
or
minps
mov
lea
pusha
mov
lretw
stc
divl
xor
imul
mov
nop
xor
fdivrl
dec
pushf
in
cmc
push
shl
outsb
loopne
popf
fbstp
scas
negb
dec
aam
mov
aad
pop
roll
fsub
les
mov
in
mov
mov
inc
jmp
inc
pop
or
repnz
sub
lds
ds
mov
leave
scas
in
stos
jb
pop
mov
push
add
cmp
inc
jno
xchg
ret
xchg
lret
mov
xchg
jae
pop
mov
cs
aad
and
mov
aam
call
sti
inc
insl
jge
jle
cltd
jecxz
mov
les
test
and
std
fwait
es
cmpsl
push
push
xor
pop
out
loopne
jmp
mov
outsl
test
jo
dec
out
insl
mov
lret
lret
cmp
lret
sub
cmp
xlat
loope
jae
cmp
lock
in
cli
mov
enter
imul
imul
jmp
sbbb
lret
fwait
lea
add
push
fdivrp
repnz
inc
fisttps
fcoml
and
cwtl
imul
pusha
fcomip
push
imul
push
jae
xchg
mov
mov
cmp
sbbl
outsl
xchg
jge
push
adc
mov
add
mov
xor
pop
in
aaa
adc
adc
into
nop
mov
and
sbb
adc
sbb
scas
adcb
mov
and
mov
mov
sbb
jno
add
enter
imul
sub
cmp
xchg
sbb
add
movsl
test
shrb
mov
stos
ret
dec
jb
stos
cs
aad
adc
add
popf
rorl
popf
xchg
jnp
les
rcll
test
loop
outsl
xchg
mov
mov
pop
push
cmp
cmp
mov
cmpsb
ret
adc
test
inc
pusha
nop
adc
in
jmp
cmp
and
and
mov
and
adc
in
int
mov
idivl
add
mov
mov
mov
gs
iret
add
and
js
mov
bnd
mov
andl
mov
add
ftst
jle
inc
leave
and
jae
inc
inc
lock
mov
jbe
leave
adc
movsl
cmp
mull
lods
adc
and
mov
add
or
fs
cmpsb
inc
or
xor
mov
lahf
xchg
xchg
and
jge
or
cmp
test
push
adc
ret
sub
out
loop
jmp
jo
xor
ss
or
mov
gs
sub
insb
cs
adc
dec
rcl
leave
shll
fisttpl
sahf
in
or
insl
jge,pn
or
scas
and
loop
in
cld
repnz
es
push
dec
cmpb
cltd
pop
in
and
cmp
les
adc
add
data16
add
cld
xor
fs
test
mov
mov
mov
fadd
mov
xchg
cltd
out
mov
inc
xchg
inc
push
and
aam
dec
clc
daa
das
jo
lahf
pop
aam
pop
gs
xor
dec
push
xor
lea
fistpll
loopne
into
inc
ret
add
pop
icebp
scas
and
add
cmp
fnstsw
mov
in
aas
mov
inc
jnp
inc
push
adc
and
xor
jg
add
ret
adc
add
fcom
insl
mov
aaa
enter
xchg
mov
cltd
aad
sahf
out
xchg
sub
pop
lcall
push
and
dec
pop
addr16
mov
adc
push
xchg
xchg
mov
or
scas
and
pop
mov
sbb
je
sub
nop
out
jno
add
nop
aad
rcrl
xchg
and
pushf
mov
aam
xchg
mov
repz
inc
lods
inc
pop
xchg
popf
scas
sahf
sub
movsl
mov
fisubrs
shr
push
mov
test
fimull
dec
icebp
out
dec
jno
xor
mov
out
push
fildl
adc
lea
push
cs
movsb
xchg
and
add
mov
and
jne
aad
scas
pusha
push
stos
les
push
cmc
mov
mov
pop
inc
inc
ds
icebp
ljmp
cmp
inc
out
in
pop
outsb
in
cmp
mov
clc
call
test
and
and
aas
sbb
mov
daa
mov
and
lret
in
fcomps
daa
inc
cmp
pop
fsub
inc
nop
shl
mov
mov
push
lcall
inc
repz
sbb
stos
mov
jnp
mov
fs
repnz
inc
sub
dec
test
fsts
negb
mov
loope
or
dec
leave
pop
daa
fadds
shll
mov
aaa
pop
les
mov
xchg
add
mov
jb
inc
adc
add
adc
mov
mov
pusha
sbb
ss
rcrb
add
mov
movsb
or
pop
jae
add
in
cmp
cmpb
mov
fisubl
xlat
aas
jnp
xor
add
inc
out
xchg
out
sarb
cmp
xchg
mov
or
cld
sbb
pushf
xor
orl
mov
ficomps
lds
and
popa
or
mov
movsb
and
mov
add
aaa
mov
lcall
test
xorl
repz
cltd
cld
lods
imul
mov
movsl
dec
xchg
in
movsl
adc
xchg
push
outsb
or
xor
sub
pusha
cmp
shll
xchg
mov
push
push
cmpsl
inc
out
ror
adc
adc
dec
scas
add
aas
lahf
je
sbb
push
pop
in
pop
xchg
pop
push
push
imul
mov
mov
roll
aaa
jmp
mov
lea
hlt
push
daa
dec
sahf
sub
push
fidivrs
int3
push
dec
aam
cmpb
insb
sub
aam
loopne
xchg
mov
iret
mov
inc
sub
pop
movsl
mov
add
std
cmc
les
mov
bts
xchg
pusha
imul
in
xchg
and
lods
cmp
aas
cmp
gs
jp
xor
inc
mov
sbb
repz
mov
jl
outsb
gs
cli
cltd
cmp
cli
push
in
sub
cmpsb
and
sbb
push
jl
lods
pop
popf
ret
and
lock
cmp
cmpsb
xor
xchg
mov
jmp
cmp
mov
popa
inc
shll
push
adc
bound
movsl
scas
mov
sti
cmpsb
imul
cmp
adc
sbb
mov
mov
dec
push
dec
jb
xor
arpl
sub
out
dec
or
or
dec
and
sbb
repz
insb
aad
xor
push
mov
std
std
mov
aam
sbb
lret
not
xchg
inc
mov
cmp
adc
dec
jecxz
mov
cmp
popf
inc
fwait
hlt
jecxz
sub
out
cmpsb
jae
jbe
int
scas
jmp
ret
sahf
or
inc
hlt
in
aaa
sbb
lret
lods
sbb
mov
loop
xchg
inc
ss
sbbb
mov
mov
xchg
mov
fidivs
adc
and
popf
jbe
or
pushl
push
insl
popf
mov
gs
rcll
cmp
std
mov
lods
add
xor
aam
and
pop
out
mov
lret
xchg
inc
out
cmp
loop
pushf
subl
test
jl
xchg
bound
push
xor
xchg
or
inc
call
mov
xor
stos
hlt
cs
inc
mov
rcrb
jae
mov
ss
test
and
jmp
mov
lock
fmuls
xor
cwtl
xor
cwtl
jle
pop
scas
fldenv
lods
push
xchg
push
push
cltd
ss
jl
fisubrl
sub
mov
inc
or
dec
jns
and
mov
addb
inc
lahf
add
rorl
or
movsb
mov
jae
adc
stos
xor
scas
mov
mov
movsb
in
loop
dec
mov
dec
lahf
fndisi(8087
cmpsl
mov
pop
inc
in
jnp
decl
mov
pop
addl
cmpsb
ficomps
inc
addr16
imul
mov
adc
repnz
sbb
jne
inc
imul
and
xor
fcmovu
xchg
fimuls
or
xchg
pop
pop
push
sub
pop
push
pop
xchg
cmpsl
mov
and
push
and
sub
rcrb
pop
add
pop
mov
rcrl
dec
sub
dec
es
mov
cmpsl
or
and
pusha
es
sbb
notb
lcall
fcmovnu
int3
subb
andl
test
je
add
or
arpl
jmp
add
clc
mov
lahf
fisubrs
ret
in
fsubrs
adc
adc
sahf
int3
shll
jae
ret
int
out
sub
repz
jnp
outsl
stos
inc
dec
rclb
mov
mov
dec
adcb
adc
xchg
pop
adc
sub
add
in
xchg
pop
ret
mov
repz
cs
inc
or
xor
pop
shrb
out
push
dec
ret
adc
aaa
push
pop
adc
pop
outsl
lods
sub
inc
mov
movsb
adc
std
xor
mov
pop
cmc
js
xchg
lret
cmp
mov
jae
ss
cs
dec
jmp
outsb
xor
mov
dec
fld
sahf
dec
in
fldenv
ret
jle
lcall
and
or
imull
rcl
jecxz
dec
push
mov
jnp
inc
arpl
add
sbb
sub
iret
mov
call
add
daa
pusha
jmp
pop
fdivrl
push
shlb
pop
movsl
sbb
in
ljmp
enter
in
icebp
test
jnp
popa
loope
jecxz
or
rorl
stos
mov
or
mov
das
lods
mov
sbb
sbb
rclb
jnp
ret
mov
cwtl
rcrb
xchg
dec
stos
icebp
jnp
jle
add
out
cwtl
push
ds
dec
ret
ljmp
sub
dec
orb
cli
dec
mov
inc
add
xor
aad
aaa
loope
push
movb
call
adc
jmp
mov
add
dec
dec
lahf
popa
test
leave
adc
scas
sub
lret
and
or
sbb
inc
incb
cmp
xchg
cmp
and
ljmp
clc
or
sub
outsl
sbb
daa
jg
lods
sti
adc
push
xor
sub
xchg
out
push
dec
jae
lock
popf
fwait
das
addr16
jecxz
sub
in
out
mov
out
jno
cmp
aam
xchg
out
stc
xorb
add
fists
outsl
add
test
sti
jno
jg
sub
push
fisttpl
xor
rolb
loop
popf
insb
xchg
aam
cs
fisttps
ret
fs
inc
and
jne
lret
mov
or
fwait
nop
cltd
sti
mov
pop
jmp
mov
mov
push
pushf
subl
xchg
sahf
jle
xor
jmp
push
dec
adc
mov
mov
lret
cmpsl
mov
pop
in
cld
or
and
jno
imul
add
ret
inc
pop
out
mov
dec
in
pop
test
sahf
dec
sti
arpl
or
adc
orb
cwtl
cli
arpl
iret
cwtl
add
jbe
daa
push
jle
mov
mov
ss
test
adc
ffree
outsl
sti
adc
sahf
pop
pusha
jmp
pop
sahf
test
insb
add
adcb
scas
pop
mov
insb
test
and
stc
stos
cmc
mov
pop
push
push
xor
add
inc
adc
in
das
fbstp
or
dec
lea
push
push
aas
fsubs
cmpsl
cmp
ret
dec
in
sbb
xor
sbb
and
out
jnp
mov
mov
fsubp
aas
test
fstpt
hlt
pop
sahf
jno
sarb
cld
jne
cmp
xor
sbb
mov
fisttpll
jmp
xor
mov
adc
pop
push
jmp
push
mov
aam
addr16
lock
ror
cmp
loop
xor
imul
ss
dec
in
or
test
mov
lods
inc
push
mov
mov
lahf
loopne
jmp
aam
or
pop
imul
lea
fstpt
and
hlt
in
xchg
push
sub
push
mov
xchg
outsb
xor
inc
add
sbb
in
in
push
out
and
repz
jecxz
sbb
xchg
adcb
jp
cmc
jg
sbb
mov
into
cmpsb
mov
bsf
es
pop
lods
sub
xchg
push
xor
insl
mov
dec
es
and
daa
mov
mov
shl
repz
sbb
sub
jno
sbb
das
icebp
push
iret
adc
dec
sub
or
push
dec
and
push
inc
mov
ret
clc
push
jb
testb
into
ja
push
daa
inc
adc
xor
jnp
loop
subb
test
jmp
pop
mov
movsl
pop
jbe
adc
adc
aas
out
xchg
fstp
or
sbb
push
test
in
pop
pop
push
es
xchg
ficomps
js
stos
inc
xchg
add
lret
cmp
pop
pop
fbld
hlt
jmp
pushf
xchg
gs
cwtl
jmp
mov
dec
pop
and
call
pop
xchg
mov
inc
aaa
pop
cmp
sahf
ret
mov
std
xchg
fidivs
test
dec
push
clc
fldl
dec
int3
aaa
outsb
and
cmp
js
mov
inc
pop
xchg
dec
dec
in
pusha
mov
dec
dec
lock
fisubrl
and
xchg
cmp
shr
insl
adc
pop
iret
ret
call
ds
shll
mov
adc
xor
aad
sahf
loope
test
in
pop
mov
in
sbb
or
xor
mov
inc
pushf
adc
cmp
dec
es
nop
stos
fs
and
fdivl
lods
icebp
inc
mov
adc
dec
cwtl
cmp
jp
lret
shr
xchg
jecxz
cmp
dec
lods
mov
mov
pop
xchg
inc
aad
xchg
lds
mov
in
idivb
jmp
inc
xchg
out
in
test
dec
push
nop
add
mov
dec
sbbb
icebp
rcll
xor
pop
out
jl
xchg
add
mov
push
fdiv
xchg
xchg
adc
lea
mov
sbb
sub
cli
ficoms
pop
xor
in
iret
cmp
sub
mov
test
out
mov
subl
jge
mov
ss
dec
pop
cmp
aaa
shrl
or
fcoms
fldt
fisubrl
cmp
dec
shr
stos
add
and
out
es
pop
inc
popaw
add
dec
xchg
inc
lret
mov
ret
adc
ret
push
scas
out
adc
fistps
cltd
js
inc
mov
push
fdivrp
ja
push
andb
push
push
push
les
jae
push
push
in
in
repnz
lret
fwait
mov
jo
js
lds
dec
ret
sahf
sub
cmpsb
stos
lret
enter
insl
into
xchg
xor
xchg
inc
enter
mov
and
and
sub
jl
jge
xchg
rcrb
dec
dec
loope
shl
pop
dec
xchg
add
cmp
testl
icebp
lock
inc
cmp
dec
std
lock
inc
movsb
mov
pop
xchg
push
ss
mov
adc
xlat
icebp
inc
adc
inc
push
mov
mov
xchg
xchg
mov
lcall
cltd
cs
fwait
popa
std
dec
push
push
rcr
insl
add
xchg
dec
or
adc
std
cmpsb
sub
enter
aam
mov
mov
out
jo
cmc
fistpl
mov
mov
insb
loopne
adc
mov
jo
mov
jl
mov
in
and
lahf
xlat
lods
or
push
imul
lods
ret
hlt
enter
insl
add
push
out
out
ljmp
cmp
dec
out
orb
xchg
test
rcr
out
insb
cmp
lea
leave
push
inc
xor
repnz
loop
jp
lret
loope
test
jmp
pop
cli
and
dec
aad
sbb
loope
cmc
pop
lea
call
mov
push
aas
mov
enter
dec
mov
sbb
pop
inc
mov
jo
sbb
add
push
xor
lcall
adc
push
mov
pop
gs
imul
and
adc
cmp
xchg
push
testl
call
std
insb
pop
sarb
pop
xor
jg
test
cmp
sahf
andb
add
outsb
test
lcall
repz
push
mov
stos
pushf
fstps
in
or
jle
inc
inc
bound
xor
lahf
into
cmp
out
jle
add
mov
gs
xor
aam
lret
and
rcr
in
sub
mov
mov
test
xchg
aas
lret
mov
mov
insb
fwait
ret
inc
mov
jmp
xorl
rorl
out
push
stc
mov
nop
sbb
dec
xor
icebp
faddp
ja
and
push
lods
ss
js
out
mov
jb
clc
cmp
cmp
mov
push
adc
fwait
xchg
mov
fsubl
sbbb
xchg
sub
pop
iret
rcr
and
pop
nop
leave
andl
pop
cmp
lret
cmp
xchg
add
loope
jne
jns
pop
dec
dec
jmp
dec
fsubr
xor
in
push
loop
in
and
add
daa
mov
add
cmp
add
push
jmp
push
mov
scas
cs
adc
cmp
xor
push
pop
pop
into
aas
xchg
mov
ffree
fnstsw
shlb
enter
cltd
push
ljmp
std
lahf
sbb
movsb
inc
loop
push
cwtl
cmp
int
lret
scas
mov
push
ret
movsb
add
jae
mov
fcoms
xchg
jne
jae
test
popl
out
out
pop
jp
movsl
jmp
push
xor
daa
lock
xor
jo
pop
add
xchg
inc
xor
sbb
mov
push
xchg
xor
repnz
lea
js
ficompl
mov
and
lods
push
stos
arpl
sti
dec
in
hlt
movsl
out
pop
xchg
lea
cli
adc
je
sub
pop
mov
cs
and
je
or
pop
pop
add
mov
cs
mov
lcall
outsb
loop
rolb
in
push
pop
push
test
aas
daa
fmul
leave
cmc
bound
jno
cmp
mov
push
fdivrl
clc
repz
call
movd
mov
or
dec
or
aad
fbld
subl
sbb
iret
jmp
push
ja
sub
fiaddl
mov
mov
movsb
aas
movsb
xor
cld
mov
movsl
clc
int3
leave
lcall
mov
and
adc
xor
pop
jp
out
jmp
jno
bound
movsl
fstp
sbb
sub
fwait
xchg
pusha
pushf
sub
push
adc
inc
bnd
mov
and
imull
push
push
mov
and
dec
mov
push
mov
lock
pusha
shll
mov
inc
call
pop
xchg
cmp
push
arpl
mov
sahf
mov
loope
push
sbb
enter
lods
das
sbb
adc
mov
jns
mov
push
mov
push
sbb
shrl
in
int3
mov
xchg
mov
test
pop
imulb
sarl
lret
adc
popa
sub
adc
testb
or
lcall
xchg
lods
fsubrs
jb
dec
ja
fisubrs
dec
jp
sbb
cmp
sub
pop
xchg
or
or
lea
mov
push
fstps
add
repz
es
push
ret
jno
ret
jbe
iret
in
repnz
sbb
enter
orl
pop
push
sahf
pop
test
stc
outsl
pop
inc
ja
pop
sub
push
push
mov
cs
adc
cltd
cs
sbb
mov
ja
roll
aam
inc
imul
jb
inc
cmp
popl
add
mov
xchg
leave
stos
lds
in
mov
mov
pop
xor
and
cmpsl
addr16
int
push
sub
push
das
outsl
jmp
scas
adc
jg
movsb
and
add
imulb
pop
leave
iret
push
mov
push
jecxz
and
lods
inc
fnstenv
stos
dec
sti
addr16
cmpsl
lea
jae
flds
inc
clc
adc
xchg
ljmp
pop
jbe
adc
jnp
adc
jo
scas
mov
sbb
dec
jl
loop
shrl
mov
xchg
or
and
ret
mov
mov
in
test
jg
adc
cmc
js
adcl
pop
xchg
xchg
pop
sub
insl
cltd
or
jg
jnp
call
std
xor
sub
and
fwait
mov
sbb
inc
inc
and
fiadds
jne
adc
loope
dec
and
and
arpl
cmpb
pop
xor
in
xor
cmp
cmp
push
dec
das
push
orb
test
imul
xchg
subb
imul
xor
cmpb
dec
scas
pop
inc
ljmp
cltd
lea
nop
pop
scas
add
mov
out
jmp
adc
fmul
testb
mov
dec
and
insb
jne
rcrb
cs
pop
sbb
in
xchg
sbb
pop
mov
sbb
mov
cli
ret
cmp
xor
call
pop
std
cmp
jmp
lock
sub
outsb
idivb
jns
or
adc
inc
or
sub
popa
iret
mov
mov
into
push
cld
clc
jmp
push
cmp
push
push
mov
sbb
adc
arpl
jp,pt
sbb
ja
div
jb
cmp
scas
shlb
cltd
mov
cmc
xlat
xchg
loope
add
repz
adc
add
xorb
hlt
icebp
arpl
sbb
sarb
sarb
lahf
cld
and
out
inc
fsubs
shrl
inc
test
loopne
filds
movb
xchg
pop
sbb
adc
imul
adc
ss
jg
fisubl
test
adc
add
popa
out
sbb
fistpl
add
stos
cld
pusha
bnd
or
xchg
xor
pop
adc
test
cli
push
enter
lahf
mov
mov
shl
add
inc
sub
sbb
mov
fs
mov
lea
sarl
adc
cmp
iret
or
dec
mov
in
std
pop
int
cmp
add
lock
xor
adc
dec
subl
clc
lcall
add
mov
inc
icebp
and
jg
push
sbb
outsl
nop
cmp
jns
incl
insb
fstl
imul
pop
add
aaa
loopne
dec
inc
es
ret
loopne
rcrl
pop
push
sub
mov
adc
or
out
xor
jp
push
enter
xor
xlat
icebp
stos
add
or
xor
pop
aam
aam
dec
aam
jg
leave
lock
rcll
sti
repnz
xlat
and
xchg
lretw
or
mov
fwait
in
sub
inc
out
adc
sbb
shlb
fistpl
sbb
cli
lahf
popa
stc
setnp
adcl
shufps
fisubs
xchg
arpl
xor
cwtl
mov
lcall
xchg
loop
jnp
iret
push
add
ficoms
add
arpl
push
sub
scas
and
jmp
cmp
push
jbe
xchg
test
ljmp
test
je
add
adc
push
js
mov
mov
pushf
add
and
xor
add
jg
add
adc
scas
mov
and
push
aam
bound
add
jno
push
inc
sub
mov
rolb
fimull
mov
cmp
sbb
mov
xchg
mov
pushf
cli
mov
jae
jns
dec
add
jmp
mov
insb
adc
repz
push
into
nop
fldt
ds
dec
andb
lods
fnstsw
jo
out
test
orb
jo
clc
add
mov
push
dec
xchg
push
pop
push
in
lods
pop
sbb
icebp
ljmp
mov
popf
jae
jle
jo
out
mov
nop
jecxz
test
out
shl
mov
adcl
stos
out
or
jae
rep
jae
sbb
jnp
sub
mov
ret
xchg
test
lea
and
clc
mov
loop
inc
insl
aas
js
movb
pop
and
outsl
dec
inc
cmc
dec
mov
ja
mov
das
dec
and
jne
jle
and
mov
push
jmp
roll
std
dec
fsub
dec
pop
out
jnp
aad
test
sub
aas
and
jp
xor
jg
sub
push
jge
mov
lret
adc
mov
ljmp
ret
sbb
xchg
adc
mov
dec
xor
xchg
sbb
dec
lret
mov
dec
js
sub
mov
bound
lret
xor
call
int
pop
lds
push
sbb
loopne
mov
cltd
push
arpl
ret
and
inc
pop
sbb
or
addr16
shr
push
jo
test
mov
sbb
subl
adc
cmp
and
hlt
mov
mov
cmpsb
dec
movsb
mov
dec
cltd
inc
and
or
jb
pushf
lds
roll
repnz
call
pop
sub
or
sub
int
inc
sbb
or
sbb
pop
ss
inc
aas
inc
scas
mov
mov
cld
loop
adc
or
outsb
repz
lods
rorb
je
xlat
add
arpl
cmpb
into
sarb
mov
test
xchg
pop
dec
cmp
pop
add
roll
add
xor
repnz
pop
out
mov
in
sub
push
fnsave
jle
dec
add
loope
pop
imul
out
std
add
xor
sub
mov
mov
cmp
mov
adc
pop
mov
lods
jno
cmp
jp
ret
add
shll
addl
sarl
mov
in
jae
or
shrl
mov
cmpsl
jb
addb
dec
mov
les
jl
push
mulb
sbb
jne
out
xchg
aaa
push
sub
cli
push
shlb
mov
jmp
cmp
add
je
mov
and
adc
notb
nop
inc
fs
movsl
sub
fcom
mov
xchg
and
lret
rclb
sub
scas
shll
loop
icebp
dec
pop
dec
lods
fadd
xor
and
or
cmp
dec
pop
cld
testl
jle
scas
mov
cltd
add
pop
and
fildll
dec
xor
pop
inc
mov
aas
xchg
loopne
jb
pop
and
cmc
stos
dec
or
mov
ret
pop
out
shr
sub
add
fiadds
add
or
sbb
cmp
repz
out
add
call
pop
mov
lcall
push
mulb
sahf
leave
sbb
loope
push
dec
loop
add
rorb
mov
les
xorl
cld
movsl
mov
insl
or
sbb
push
cmpsb
mov
or
rcrb
adc
jmp
aas
hlt
out
enter
push
mov
cld
and
sbb
sti
outsl
xlat
push
nop
push
cs
xor
xor
cmp
or
movsl
imul
lret
xchg
push
dec
mov
addb
mov
add
mov
ret
inc
repnz
jne
push
in
jge
cmp
xlat
mov
jne
imul
fnsave
push
nop
mov
or
xorl
mov
mov
jl
mov
scas
insl
cmp
xchg
test
inc
pop
mov
out
out
pop
popa
call
das
out
dec
jl
imul
negb
mov
xor
xor
into
jo
pop
shll
or
xor
rorl
mov
or
sbb
dec
fs
jmp
jno
cmp
pop
jo
es
adc
push
xchg
xchg
pop
xchg
in
add
cld
ja
jns
mov
test
inc
adc
jge
pushl
cmp
mov
cmp
hlt
movsb
sbb
inc
xchg
std
idivb
adc
sub
and
movsl
sbb
jmp
daa
enter
mov
mov
movsl
das
sbb
ljmp
mov
adc
add
push
xchg
push
test
enter
call
bound
jp
push
sbb
call
and
adc
stos
mov
lea
inc
into
and
mov
cld
inc
sarb
ss
or
xchg
and
mov
movsl
ss
in
pop
sbb
cmp
mov
cwtl
sub
scas
mov
xchg
mov
out
arpl
into
inc
lods
adc
lods
add
hlt
xor
xchg
gs
fistpll
add
testl
push
push
jg
ds
dec
out
imul
xor
test
out
decl
push
out
setle
xchg
mov
shr
add
mov
add
sbb
pushf
hlt
int
mov
jg
out
bound
sub
push
and
mov
out
loop
mov
lret
xchg
push
into
lcall
out
ss
adc
fsub
stc
cmp
out
sbb
sbb
cmc
adc
inc
adc
add
jp
movsl
xchg
xor
jnp
cmpsb
subb
es
xchg
lret
lret
adc
cmp
adc
lret
clc
mov
inc
fst
pop
daa
push
popa
rorl
icebp
das
cli
push
mov
loop
push
mov
sbb
sbb
cli
test
mov
cmp
dec
movsl
xor
fiadds
mov
lods
hlt
push
dec
popa
scas
loopne
mov
and
mov
mov
xchg
lock
out
cld
inc
add
mov
jnp
lcall
inc
mov
add
push
jecxz
insb
inc
bound
dec
arpl
dec
push
das
push
and
flds
and
cmp
add
inc
fists
lods
sbb
sbb
add
popf
cmp
adc
cmp
sbb
push
add
jmp
fmuls
xor
push
jb
mov
mov
lret
pop
pop
cmp
pop
mov
pop
inc
out
mov
sbbb
scas
inc
outsb
stos
inc
sub
sub
cld
icebp
addr16
shl
cmp
cmp
fnstsw
or
jno
lret
popf
inc
mov
imul
inc
pop
in
xor
imul
sub
mov
imul
daa
pop
mov
test
inc
fdivrl
in
adc
ds
dec
adc
test
daa
fdivp
aas
add
or
pop
xchg
push
lock
adc
cmpsl
cmovp
mov
ss
subl
push
sub
int
xor
mov
ror
mov
rorl
aam
movsb
add
js
mov
pop
cmp
push
sub
add
mov
jbe
packuswb
push
push
std
popf
movsl
fucomip
sbb
int
les
lcall
push
or
dec
jb
sahf
into
stc
outsb
and
xchg
cs
add
jecxz
out
mov
push
push
adc
mov
out
cltd
xchg
bswap
cltd
lds
xchg
aad
pop
clc
mov
mov
mov
adc
leave
mov
inc
stos
ret
aam
xchg
push
cli
inc
je
nop
in
cwtl
stc
setg
aad
mov
dec
fwait
xchg
aas
movsb
mov
pcmpeqb
in
dec
jmp
xor
mov
arpl
xor
je
mov
pop
jns
ficoms
stc
xchg
insb
int3
jmp
inc
inc
aad
sub
ja
pop
lds
inc
aad
xor
ret
xchg
lock
xor
lea
cmp
sarl
cmp
imull
movsb
inc
push
inc
vmovaps
in
xchg
jne
test
sub
fisubrl
xchg
cli
mov
push
cmp
adc
rcrb
mov
pushl
xchg
add
jmp
mov
stos
out
lds
pop
mov
and
pop
enter
dec
cmp
mov
daa
mov
pushf
push
or
scas
lret
inc
test
in
xchg
jmp
lock
mov
bsr
enter
sbb
push
rorl
dec
push
adc
sub
mov
stc
or
imul
cmpsl
lret
test
ss
imul
addr16
mov
xchg
in
iret
pop
movsb
inc
inc
inc
js
lcall
lods
push
xor
rorl
mov
andl
subl
add
inc
test
pusha
fadds
fwait
in
cli
pop
movsl
aad
cmp
sub
add
xor
aad
fadd
cwtl
jb
adc
lds
mov
daa
sti
sub
je
pop
or
mov
pop
or
out
test
pop
cmpsb
hlt
ret
mov
cmpsb
xchg
jae
pop
imull
mov
mov
mov
lahf
setb
push
push
push
fisubs
inc
stos
push
arpl
stos
pop
outsl
mov
mov
jnp
sti
add
or
pop
addr16
fcoms
aas
decl
pop
xor
xchg
imul
shlb
fdiv
pop
pop
sbb
mov
mov
pusha
xorb
jmp
adc
outsb
cmp
rolb
clc
fwait
push
frstor
sbb
mov
inc
mov
sbb
stos
imul
in
jo
push
sbb
shlb
pop
add
mov
mov
arpl
outsl
out
dec
mov
in
or
mov
fcoms
push
dec
cmp
cmpsl
pop
push
and
clc
adc
sbb
orl
fbstp
pop
xchg
insb
pop
sub
mov
mov
shrl
pop
xor
or
lret
iret
mov
jg
and
lods
lcall
ja
test
int3
test
fstpt
stc
shrl
clc
sbb
sub
mov
jb
pop
inc
aaa
inc
lahf
jecxz
leave
sub
add
mov
aad
icebp
jmp
dec
jle
inc
sub
mov
adc
xchg
mov
lret
cmp
add
or
sub
mov
mov
js
lcall
cmp
je
je
loopne
jp
push
daa
lcall
sub
mov
bound
mov
pop
ret
int3
pop
popf
ljmp
int3
mov
push
lock
push
jnp
stos
add
jmp
jmp
fisttpll
aad
sbb
aaa
sbb
cmp
imul
jmp
push
push
lahf
pop
push
add
mov
js
scas
mov
ljmp
fld
lret
add
mov
jmp
mov
lods
fidivrs
loope
jns
fsub
lret
in
rorl
cli
mov
loop
inc
arpl
sahf
push
add
movsl
xor
and
or
jl
jbe
out
pop
and
js
pop
push
pop
out
pop
add
mov
cmc
mov
dec
dec
adc
xchg
xor
ja
in
jne
xchg
mov
test
push
dec
and
cmpsb
mov
mov
loop
push
cltd
xchg
mov
fs
or
push
jne
bound
mov
lret
mov
pop
xchg
lock
imul
arpl
mov
mov
mov
aad
sub
hlt
lea
push
mov
test
in
roll
jnp
push
outsl
sub
adc
dec
es
push
lods
fistpll
or
sub
mov
dec
inc
les
adc
add
xor
js
lds
addr16
mov
jno
or
pop
cmc
dec
add
outsl
xor
int
mov
test
fsubl
shll
test
or
rorb
gs
ja
inc
dec
mov
mov
jmp
cmp
hlt
cmp
pop
clc
push
imul
cld
sbb
push
lods
jle
mov
xlat
fidivrl
adc
aad
push
or
push
js
fcoml
pop
adc
ret
xchg
sbb
pop
mov
dec
pop
fsubs
cmpsl
xchg
addr16
test
and
mov
test
sahf
mov
or
imul
mov
mov
jo
push
pop
es
adc
fstps
negb
sti
call
pop
or
inc
xchg
mov
push
lock
int
cmpsl
lods
or
aaa
imul
mov
jno
mov
jo
repz
pusha
jge
push
test
lds
lods
cli
lahf
aad
data16
inc
inc
mov
icebp
jl
loop
inc
xor
adc
pop
inc
js
nop
aam
mov
addr16
inc
or
fcmovnb
fs
lods
sub
gs
add
sub
adc
or
ret
shlb
and
jp
dec
aam
dec
mov
pop
call
cmp
lahf
sbb
mov
out
les
cmp
cmp
test
adcb
xor
jmp
pushf
push
dec
ljmp
clc
xchg
js
push
andb
xchg
jl
lea
jle
insb
lea
int
mov
imul
mul
repnz
int
xchg
lea
push
xor
outsb
sub
mov
scas
lods
jns
mov
lock
ret
pop
pushf
fildl
and
push
push
pop
xor
xor
cld
fdivrs
sahf
dec
sbbb
or
xchg
xchg
jecxz
pop
inc
mov
mov
movsl
cmp
out
push
dec
push
jne
std
add
xor
add
pop
or
mov
push
fbld
int
add
test
dec
mov
stos
stos
out
mov
mov
dec
mov
and
nop
xor
mov
fcmovnbe
cmpsl
test
mov
cli
push
mov
mov
enter
aad
mov
jb
insb
push
lock
enter
mov
cwtl
adc
inc
fidivs
shlb
xlat
dec
xor
or
add
mov
incl
in
in
sbb
loop
cmp
mov
je
xlat
adc
xchg
xchg
mov
sahf
and
xor
pop
mov
shrl
cmpsl
aad
pop
bound
jp
sbb
arpl
push
sbb
xor
cs
adc
adc
popf
push
jle
or
mov
jns
cmp
xchg
dec
dec
shll
call
loop
mov
push
in
in
jne
mov
dec
jno
cmp
jmp
ds
ss
push
xchg
fsub
int
inc
push
fistl
scas
and
and
add
loop
sub
test
dec
jmp
or
mov
cmpsb
fcomps
xchg
cld
and
jle
jo
mov
sbb
push
sub
aam
lea
gs
sbb
orb
ja
or
not
mov
imul
insl
xchg
cltd
pop
lcall
adc
fstps
push
test
sub
pop
mov
xor
out
cs
mov
dec
test
mov
and
je
dec
pop
pop
sub
loope
fcom
inc
nop
pop
gs
ret
divb
sbb
mov
cmp
repnz
loope
xchg
sti
dec
push
jp
sub
ja
inc
aas
test
cmp
mov
or
pop
pop
shll
rorb
fmull
sbb
insb
fcmovb
xchg
pop
iret
inc
pop
inc
cmp
movsb
cltd
lods
dec
add
bswap
or
in
xchg
scas
xor
xchg
call
popa
arpl
mov
adc
fs
mov
je
sub
and
mov
imul
inc
sarb
movntps
jno
adc
dec
ja
mov
out
insl
shll
dec
stos
andb
xchg
sti
xchg
mov
inc
in
sub
mov
clc
fidivrs
arpl
clc
mov
pop
xor
push
push
aas
dec
xorl
pop
mov
lea
ja
jl
push
bound
cmp
cmp
scas
rclb
pop
cmpsl
scas
lret
and
cli
jo
outsb
xchg
jecxz
dec
scas
push
add
add
sub
fisubrl
xor
sub
lcall
dec
dec
and
pop
xor
pop
divl
in
push
sub
imul
dec
aad
adc
add
and
mov
inc
mov
pop
xchg
xchg
cmp
pop
das
ficoml
test
mov
stc
test
cmp
lea
fwait
leave
sub
out
mov
aaa
add
faddl
aaa
scas
adc
cs
mov
xchg
imul
mov
movsl
cmp
xor
out
int3
sbb
sbb
fs
fldcw
cmpb
dec
sahf
xlat
adc
mov
decl
xor
out
and
cltd
stos
dec
rcll
xchg
xlat
cmp
pop
decb
imul
mov
aam
in
push
push
addr16
imul
shlb
movsl
pushf
dec
mov
int3
scas
pop
pop
mov
jmp
rorl
add
or
add
cmp
add
iret
xorl
push
jne
lahf
and
add
xchg
dec
mov
cmp
push
cmc
test
pop
cmpsl
sub
clc
add
or
sub
insb
or
sbb
mov
adc
cmp
push
pop
mov
add
sub
inc
xchg
inc
fdivl
ds
fstpt
cs
imul
mov
movsb
int
emms
push
jp
adc
imul
xchg
mov
lods
and
add
js
cmp
mov
outsw
push
cmc
cld
negb
pmaddwd
push
inc
aad
xchg
mov
mov
or
push
data16
sbb
mov
sahf
mov
mov
test
ss
imul
sub
adc
aas
mov
xchg
rcll
popf
mov
mov
add
cmp
mov
mov
mov
inc
into
mov
dec
mov
cs
int3
call
fisubrl
sbb
dec
shl
stc
aaa
lods
scas
lea
xor
mov
pushf
dec
aam
repnz
xchg
lcall
cltd
push
jne
jle
sbb
fsubrs
jmp
aam
andb
bound
xor
and
inc
xchg
pop
mov
mov
add
loop
rcll
call
clc
mulb
iret
and
sbb
jae
cmp
xchg
mov
movsl
adc
leave
or
movzwl
push
xchg
sub
sbb
push
movb
subl
mov
inc
push
test
cmpsb
into
push
loope
inc
inc
jo
mov
dec
pop
stos
jge
jl
push
sub
aam
add
mov
inc
rcl
ljmp
pop
mov
jmp
inc
xor
dec
mov
pop
incb
push
push
mov
jmp
mov
int
pop
jb
push
push
in
mov
sub
scas
std
cmp
pusha
fistl
jl
or
out
dec
inc
jecxz
cltd
hlt
ljmp
aas
in
xor
sub
adc
pop
or
lcall
inc
fldt
xor
fstp
inc
aad
pusha
pop
in
fsubs
pop
sbbl
fwait
or
jbe
jge
dec
sahf
cltd
test
hlt
adc
stos
out
push
addl
int
mov
xchg
mov
xchg
or
xor
and
nop
ja
loope
xchg
mov
lahf
add
fidivl
ret
and
ljmp
cld
jno
jo
popf
icebp
pusha
dec
in
out
adc
addr16
xchg
shll
mov
sub
xchg
std
insl
repz
push
sbb
inc
dec
into
mov
pop
sahf
jge
mov
mov
jecxz
iret
inc
mov
imul
sub
mov
or
iret
push
jmp
popa
and
cmc
rorb
aad
and
adc
xchg
sbb
rcl
cmc
ret
xchg
push
xor
add
stc
and
push
mov
sub
movsl
inc
adc
jl
xor
test
hlt
sub
jne
lret
fadds
xchg
movsl
test
fidivs
push
dec
cwtl
add
and
dec
xchg
mov
pop
incl
out
arpl
movsl
push
mov
xchg
adc
lret
scas
lret
sub
cmc
xor
jbe
or
pop
mov
pop
nop
ja
jnp
adc
pop
pop
test
sbb
pop
cmpsb
lock
sub
cwtl
jno
mov
fldcw
sahf
dec
mov
pop
lahf
sbb
xlat
cs
cmp
dec
and
clc
jbe
push
frstor
scas
dec
loopne
fwait
push
mov
fistpll
sub
in
pop
mov
andps
incl
or
icebp
xor
jae
repnz
push
fs
sahf
push
or
sbb
mov
push
sbb
imul
mov
rcl
jne
xchg
je
mov
sbb
mov
divl
fadds
sub
adcb
dec
push
arpl
cmpsl
cmp
lahf
lahf
mov
repnz
push
rol
add
sub
into
imul
stos
cmpsb
test
dec
jge
pop
lret
lcall
pop
rcrl
ljmp
cmp
imul
pop
add
lds
or
arpl
mov
push
in
xchg
cld
outsl
aam
mov
icebp
dec
xchg
mov
rcl
shr
pop
mov
jmp
mov
mov
mul
ror
push
push
add
cmp
aas
ja
je
pop
push
push
xchg
mov
lcall
imul
nop
dec
mov
int
in
enter
mov
cmp
adc
jbe
inc
sbb
xchg
into
add
cltd
clc
push
cltd
ja
mov
xchg
mov
loope
int
js
xor
dec
test
popa
fcmovnu
fs
pop
inc
xlat
add
jns
inc
push
test
clc
jbe
out
loopne
enter
push
inc
xchg
jb
pop
fstpl
jg
popf
and
inc
outsb
daa
ret
inc
pcmpeqd
shrl
shrl
or
roll
add
push
inc
xchg
or
adc
and
mov
sarl
lret
lods
xchg
push
out
out
push
es
data16
push
aam
dec
push
aas
daa
ret
mov
in
es
cwtl
sub
int
or
xor
sar
sub
sbb
dec
jno
dec
dec
stc
bound
jl
ret
pop
sarl
daa
in
push
fildll
insl
dec
outsl
popa
lods
cmpsl
xchg
mov
xchg
inc
mov
sbb
push
fistl
cmp
repz
xchg
dec
push
stos
xchg
jne
push
push
lret
insl
and
out
jb
add
xchg
in
aad
mov
inc
aaa
xchg
xchg
cmc
sub
ds
ja
shrb
fs
cmp
clc
ret
mov
stos
js
loope
xorb
test
leave
cmp
notl
fdivrp
xor
inc
cld
ficomps
pop
ret
out
cmpl
int3
scas
into
mov
addr16
inc
int3
cmpb
orb
jp
popa
mov
adc
pop
outsb
fs
jns
sbb
fcmovnbe
and
cmp
shll
mov
sbb
lret
pop
sub
icebp
ret
sbb
mov
subb
pop
cmpsl
sahf
and
mov
cmp
loope
adc
in
xlat
adc
adc
or
sub
jb
outsl
add
push
lret
rcll
mov
mov
lds
enter
mov
adcl
fwait
xchg
call
pusha
pop
ds
adc
push
adc
dec
cmp
cmpsb
repnz
push
out
xor
lret
jae
fadds
mov
or
cld
push
pop
add
pop
lcall
int
xchg
mov
push
out
ret
call
xchg
or
loope
push
aas
scas
test
cmp
orl
imul
test
mov
and
mov
jns
push
sbb
sbb
aam
jae
aad
dec
add
rorl
pop
or
inc
test
add
xchg
fpatan
gs
gs
int3
mov
adc
inc
or
sub
adc
shrb
add
add
pop
ret
pop
pop
xchg
ret
incb
and
sub
dec
or
push
lods
jne
xor
pop
repnz
movhps
es
inc
ret
ja
mov
int
cmp
fsts
in
roll
mov
lahf
lds
xchg
push
xor
push
es
lea
lock
dec
hlt
cli
or
add
dec
and
repnz
xor
xor
lret
lret
mov
inc
fldl2t
push
push
aaa
std
dec
lret
insb
inc
xchg
aam
push
inc
sbb
cmp
pop
ffree
bound
xchg
mov
cmp
addb
cld
jno
mov
out
pop
mov
loopne
shr
mov
addb
scas
gs
filds
cwtl
push
dec
cmpsl
out
dec
lds
arpl
rcrl
pop
adc
hlt
or
aam
sbb
jecxz
pop
lea
loope
mov
pop
pop
aad
icebp
xchg
and
movl
dec
mov
xchg
dec
mov
pop
into
mov
lahf
push
or
gs
push
push
add
out
sub
dec
repnz
pop
les
out
leave
jnp
dec
cltd
in
sub
lret
test
mov
out
cltd
clc
inc
inc
mov
loop
sbb
cmp
in
cmpsb
and
bound
aas
xchg
out
dec
sti
add
shlb
loop
mov
mov
rorb
dec
pop
mov
xchg
push
sbb
lcall
add
jb
scas
sbb
inc
xlat
sub
jg
icebp
imul
sub
and
dec
out
cmpsb
rorl
popa
ljmp
shlb
add
mov
mov
pop
cmp
mov
lret
mov
aam
fsubr
repz
rolb
ljmp
xorl
rdpmc
sub
shrb
mov
in
fcmovbe
icebp
cmp
dec
fidivs
stc
pop
icebp
inc
and
dec
adc
shrl
aad
push
xchg
loopne
dec
movsb
mov
pop
pop
ja
fmul
popf
test
push
insl
or
fwait
push
cmc
mov
je
fdivp
xor
cmp
cld
in
popa
inc
test
xlat
xchg
out
jb
and
sbb
jae
imul
or
int
sbb
add
sub
lcall
in
push
lret
adc
pop
andl
xchg
inc
fisubs
stc
ljmp
sbb
loop
stc
jae
xchg
pop
pop
ret
inc
sti
mov
lods
pop
aas
lahf
sbb
pushf
sahf
cmp
mov
js
sahf
fisubrs
and
gs
mov
dec
ds
lds
push
dec
scas
test
je
mov
jns
sbb
jmp
sbb
ret
push
in
mov
mov
mov
subl
popf
and
mov
out
arpl
mov
aad
cld
test
in
mov
in
xor
cmp
in
jg
mul
call
xor
xchg
pushl
in
neg
ficomps
push
aam
jae
decl
mov
fisubrl
js
enter
je
xchg
adc
or
les
xorb
push
roll
add
fwait
out
jle
outsl
repz
pop
fsubl
stc
and
clc
jo
pop
test
fidivl
or
push
dec
adc
lock
leave
js
mov
pushf
cmovl
push
insb
scas
or
dec
mov
xchg
hlt
sarl
inc
add
jge
enter
insb
dec
add
mov
mov
fistpl
cmp
icebp
orl
pop
test
sub
test
int3
jo
pop
mov
outsl
and
adcl
mov
in
add
pop
loope
rol
cltd
outsl
mov
jmp
jae
ficomps
mov
jmp
outsl
add
adc
add
mov
mov
xchg
adc
clc
xor
shrl
je
loopne
jecxz
mov
ja
sub
loope
imul
imul
into
rcrl
fnstenv
and
or
leave
add
neg
xor
mov
jae
int3
lret
cmp
into
ds
adc
pop
test
xchg
test
pusha
or
pop
jne
jnp
repnz
rclb
lea
xor
int3
inc
dec
xchg
cmp
add
adc
outsl
mov
xor
arpl
icebp
shrl
lock
mov
adc
mov
push
push
sbb
icebp
imul
dec
inc
int
into
or
pop
out
dec
jae
fldenv
push
mov
push
lcall
ja
jmp
xchg
and
jb
out
pushl
out
push
jecxz
add
lock
out
imulb
xor
or
or
jle
jle
ds
es
push
xor
loope
aam
aas
sbb
sti
cs
clc
mov
dec
mov
ret
imul
cwtl
pop
out
xchg
out
fmul
sbb
cmp
inc
hlt
mov
fucomi
jp
push
lock
dec
and
dec
jmp
test
mov
notb
cmp
mov
lret
inc
cwtl
push
dec
sub
xchg
inc
loope
pushf
or
mov
int
xchg
add
aaa
sahf
xchg
pop
mov
adc
cmpsl
test
inc
xchg
sahf
push
adc
xlat
nop
adc
dec
sub
js
xor
sbb
jo
fldt
adc
scas
movsb
loope
data16
xlat
loop
xor
cmpsl
jne
adc
sub
add
or
fstpl
lock
ljmp
mov
cmc
sbb
inc
ljmp
in
je
push
shrl
jg
shrb
adc
add
roll
test
sbb
sub
daa
out
mov
stc
popf
jns
out
pop
mov
rclb
or
and
dec
adc
mov
ss
mov
add
cmpsb
cwtl
sbb
and
push
jge
sbb
mov
lahf
xchg
jmp
in
fucomip
orl
std
jp
add
movsl
sbb
pushf
mov
or
gs
mov
rorb
out
sub
stos
add
rcl
insb
scas
cmp
xchg
mov
js
mov
sbb
mov
push
cwtl
pop
adc
scas
shrb
jae
push
rclb
xchg
daa
aam
rol
inc
sbb
dec
mov
push
ss
negl
push
scas
add
subl
js
adc
scas
push
sarb
jae
testl
sbb
cltd
dec
shrl
movsl
inc
je
xor
push
and
mov
mov
stos
sub
sahf
in
inc
sub
mov
cmp
lret
mov
insb
repz
in
aaa
push
aam
push
jg
xor
jle
add
jge
add
sbb
hlt
push
nopl
aam
adcb
push
mov
aas
mov
or
xchg
or
jno
daa
scas
lds
adc
sub
pushf
cmc
pop
sbb
leave
scas
sbb
dec
mov
movsl
pop
decb
xor
sarb
jnp
mov
les
jbe
cmpsl
fcompl
roll
ret
mov
pusha
jmp
sub
mov
jae
insl
ss
xchg
xor
cmp
jnp
sarl
ret
push
loop
int
hlt
and
cmp
das
pop
fwait
dec
loop
pop
sar
lret
hlt
xor
movsb
aad
push
pop
fcoms
idivl
mov
das
mov
dec
add
mov
inc
movsb
sub
cltd
test
ds
ret
jo
and
mov
outsl
xchg
bound
push
pop
xchg
cmp
ljmp
std
imul
fidivrs
sahf
adcb
pop
movsl
cmp
mov
sub
lcall
xchg
test
icebp
sbb
out
addr16
jbe
adc
fwait
cmp
out
aam
pop
mov
or
inc
mov
pop
scas
hlt
sbb
loope
stos
hlt
add
aaa
or
pop
loope
xchg
push
mov
imul
xchg
mov
mov
or
inc
xchg
xor
out
adc
popf
mov
cmp
ja
mov
push
mov
add
dec
mov
fstl
icebp
mov
out
sub
cmp
or
sbbl
xchg
lods
mov
xchg
sbb
xchg
ds
adc
enter
inc
call
jb
loope
adc
shll
xchg
pop
xlat
adcl
fbld
cwtl
jb
cmp
pop
lret
ja
lret
sarl
xlat
sbb
aaa
ja
mov
mov
push
cmpsl
mov
scas
and
sti
jge
cli
adc
xlat
test
rol
pop
mov
xor
mov
cltd
addb
mov
fbld
push
movsb
sar
repnz
adc
inc
and
cmc
mov
fstpl
fcmovnb
jb
xor
imul
jmp
lret
push
inc
mov
fsubrs
fisubl
or
lret
lods
insb
push
mov
mov
std
fs
data16
mov
ljmp
xchg
aas
dec
cmpsb
ret
add
movl
cmp
pop
movsl
aam
adc
jp
jge
iret
mov
outsb
inc
add
stos
fs
dec
mov
fwait
cmpsl
lret
jb
test
xor
mov
sub
mov
xchg
or
xor
mov
loopne
push
and
mov
ja
mov
inc
jecxz
or
test
repz
out
movsl
cmpb
cli
xor
push
jge
popa
mov
mov
xchg
aaa
push
lods
mov
pop
cli
fidivrl
dec
jg
lret
in
mov
inc
dec
mov
dec
in
sub
xorb
push
sbb
test
push
das
adc
jg
out
and
sarb
xchg
sti
xchg
sbb
out
jmp
pop
lret
inc
rol
cld
xchg
mov
iret
mov
pop
lahf
adc
add
add
jmp
cmp
in
or
lock
xlat
aas
arpl
outsb
pop
leave
lds
cltd
adc
and
jle
inc
push
mov
or
push
xor
add
cld
rolb
inc
int3
sbb
or
inc
mov
adc
push
xor
in
je
xlat
cmp
sbb
scas
es
rolb
jmp
popa
mov
dec
mov
aaa
repnz
js
sbb
xchg
fbstp
aam
cwtl
testl
mov
xchg
inc
lcall
dec
jne
data16
sub
xchg
ret
ret
mov
mov
inc
mov
mov
ljmp
push
jp
popl
cmp
or
mov
lret
incl
mov
addl
int3
iret
xchg
lcall
or
jae
xchg
xor
push
lcall
mov
mov
cmpsl
notb
sub
out
sub
mov
hlt
lods
dec
inc
andb
inc
movsb
cmp
or
int
mov
add
cmpsb
fdivp
out
out
or
cli
sub
pop
daa
cli
fnstsw
xchg
mov
in
push
jo
hlt
fadds
jg
fmul
pop
cmpsb
int3
mov
incb
sti
rcl
xchg
into
mov
inc
pop
mov
mov
pop
cltd
icebp
loope
pop
push
cmp
xor
jl
fsub
pop
and
jecxz
sti
lahf
call
int
mov
loopne
jle
mov
or
stos
mov
push
sub
cld
jg
xlat
mov
in
icebp
mov
jne
sahf
es
das
repz
inc
cmp
mov
mov
sub
mov
mov
mov
xchg
mov
lret
popf
and
fisttpl
fs
fs
adc
push
fwait
out
add
mov
push
pop
sbb
jno
or
or
movsb
sbb
mov
dec
in
add
push
daa
pop
add
mov
pop
sbb
stos
dec
cmp
jno
test
xchg
iret
xchg
je
mov
pop
mov
push
inc
imul
sbbb
inc
sub
es
out
shl
inc
push
mov
test
je
scas
mov
jmp
loopne
lock
add
leave
orb
loopne
mov
or
lods
mov
fcoml
lahf
pushf
roll
and
adc
stos
loope
xor
sbb
push
mov
sbb
jmp
cli
xchg
mov
dec
xor
lods
adc
mov
xchg
pop
insl
sub
adc
dec
sti
mov
cmp
notb
mov
int3
pop
pop
andl
in
sub
and
xchg
leave
mov
mov
aaa
or
push
in
cmp
xor
dec
push
std
sbb
mov
insl
mov
xor
out
fsubs
xlat
push
std
push
js
aas
cmpsb
cmp
in
pop
je
fcmovnbe
ljmp
daa
bound
flds
test
add
add
sti
lock
insb
mov
dec
add
mov
repnz
mov
sub
rcrl
imul
pop
mov
and
adc
lret
cltd
sub
pop
mov
in
adc
pop
imul
cmp
bound
inc
jmp
sbb
add
les
cmpsb
shl
cmp
sbb
fidivrs
fs
ret
divb
push
sub
or
cltd
aaa
jle
sub
andb
sbb
xchg
inc
lock
push
ja
call
les
add
popa
and
fwait
or
into
sbb
lret
add
out
push
call
out
test
jl
push
out
subb
push
pop
jb
push
mov
push
or
arpl
jns
lods
cmp
push
faddl
movsb
mov
inc
jl
mov
pop
adc
mov
movd
add
push
push
xchg
dec
repz
inc
shlb
jbe
arpl
pop
sarb
add
in
popf
movsb
jns
cltd
sub
push
imul
mov
leave
sub
pop
js
mov
popa
fidivrs
dec
push
sbb
or
jnp
outsb
shll
stos
lret
fisubs
bound
adc
sub
pop
mov
or
out
jp
xor
pop
mov
mov
cld
std
test
and
lcall
dec
cmc
dec
adc
xchg
jns
sbbl
push
ss
pop
dec
bnd
enter
sub
aad
jns
fs
xchg
mov
fwait
arpl
sbbl
sbb
mov
rolb
jl
push
fs
enter
cmp
ficompl
loop
mov
cwtl
outsb
cvtps2pd
pop
js
icebp
fisttpl
adc
lods
subb
sti
nop
repnz
inc
xchg
popa
les
mov
setne
gs
add
std
add
mov
out
or
ds
sbb
jecxz
xchg
mov
xchg
les
xlat
sub
push
test
cmpsb
jg
popf
inc
jns
xchg
inc
pop
js
sbb
pushf
aad
xchg
sbb
fs
fisubs
xor
xor
aad
cmpsl
xchg
es
cmp
inc
in
xchg
mov
jno
and
repnz
mov
test
call
repnz
test
sbb
push
pop
in
subl
pop
jg
lcall
outsb
cmp
mov
sub
jmp
inc
gs
cmp
in
lock
or
dec
cs
xlat
out
xlat
dec
inc
test
icebp
sub
lock
jb
fstpl
fldl
push
jo
jns
je
add
aaa
std
pushf
push
fnsave
mov
dec
add
add
sub
pop
adc
movsl
xor
push
nop
jge
jmp
fiaddl
dec
jbe
mov
mov
pushf
in
fidivl
cmp
shll
xchg
imul
orb
rcrl
inc
xchg
dec
xor
mov
lahf
lret
fs
popf
jno
lahf
outsb
push
push
bound
xchg
gs
xchg
mov
jecxz
fs
adc
xor
mov
pop
lock
je
notb
sbb
push
lods
repz
lahf
jbe
lret
mov
jg
push
aas
xchg
or
insl
scas
add
subl
nop
es
push
or
push
sahf
addr16
hlt
ret
clc
jno
mov
loopne
push
rolb
repz
ja
fs
out
jle
adc
pusha
mov
sub
pop
sbb
jns
push
xchg
cltd
sbb
jno
xor
cvtpi2ps
mov
mov
repz
mov
sbb
cmp
cmp
add
std
mov
dec
icebp
mov
jle
and
xchg
fsubl
jno
jle
sti
pop
push
jmp
xchg
popf
mov
shrl
sbb
or
mov
xchg
mov
xor
inc
pop
ret
insl
mov
cld
jbe
mov
sbb
fdiv
add
cmp
or
cld
mov
aaa
jns
mov
add
sbb
adc
in
push
sar
push
adc
mov
lods
mov
rcrl
pop
decl
shrl
mov
fs
xor
mov
dec
dec
lds
dec
add
clc
imul
enter
adcl
call
sbb
stos
call
cmpl
jns
cmpsb
test
jnp
add
aam
mov
jne
outsb
pushf
subb
add
aam
imulb
jb
fisubs
lahf
xchg
test
adc
dec
mov
test
nop
jne
cmpsb
and
and
mov
push
mov
xor
lods
sbbb
push
fwait
sbb
movsb
inc
leave
cli
mov
inc
stos
xorl
data16
jo
sbb
iret
add
mov
xchg
aaa
xchg
sub
or
lret
dec
xchg
lret
shll
in
ret
add
inc
outsl
test
pop
dec
fs
xchg
jp
lahf
inc
imul
mov
and
sbb
fwait
and
out
cld
cwtl
pop
int3
cmp
push
stos
xor
imul
out
ss
ret
mov
mov
and
push
ja
cltd
outsl
push
cmpsl
lds
dec
lret
xor
push
fdivrl
mov
and
fs
repz
cld
cld
pop
or
adc
mov
in
push
sub
negb
cmovl
repnz
xchg
shll
pop
shrl
sub
jmp
aam
lahf
jmp
movsb
or
jl
test
sub
leave
add
xchg
outsl
pop
ja
push
xor
in
imul
pop
fsubs
je
fistps
add
pop
mov
mov
insl
and
xchg
subl
repnz
jbe
fmuls
mul
xorl
lcall
mov
mov
je
cs
out
int
sbb
mov
push
jle
decb
fdivrs
dec
lds
lea
mov
subb
lods
xor
std
jle
out
in
mov
mov
int
jmp
mov
daa
mov
pop
sub
stos
shl
lahf
aad
xchg
push
jbe
xor
cmp
pop
xor
daa
shlb
sti
dec
cmp
and
sub
call
jecxz
sbb
lahf
out
pop
cmp
pop
pop
jge
lea
pop
fstl
ret
push
push
ret
adc
cmovae
sub
repz
sbb
adc
fnsave
adc
add
add
jp
xor
iret
shrb
jb
push
jo
xor
adc
das
clc
mov
mov
mov
adc
int3
pusha
lds
aas
out
add
sub
lods
xchg
mov
add
mov
cmpsl
adc
pop
outsl
push
add
jb
or
mov
xlat
cmpsb
pop
inc
cmpb
ret
xor
inc
mov
and
dec
mov
sub
add
jo
pushf
and
test
cwtl
mov
sti
jne
scas
shrb
adc
and
not
dec
cmp
adc
and
adc
shl
pusha
pop
cld
cmc
in
sbb
cs
xchg
enter
cmp
aaa
pop
push
jae
pop
int
mov
fldcw
mov
sub
aaa
dec
inc
insl
jmp
inc
dec
and
cmp
or
cwtl
ds
aam
cmp
add
ret
and
outsb
test
and
into
mov
ja
sbb
aam
fcmovnu
lahf
sub
inc
mov
sbb
repnz
fdiv
das
les
ljmp
pop
cmp
jle
xchg
cmp
mov
rcl
mov
push
popf
mov
pop
sub
pop
xchg
sub
or
xor
out
pop
cmpsb
mov
adc
ret
jb
ret
dec
imul
mov
bound
inc
xor
adc
stc
in
scas
testb
xchg
pop
fisubl
adc
cs
push
mov
sub
fstl
inc
aam
mov
inc
mov
cmp
ss
mov
lret
mov
mov
inc
push
mov
sub
ficompl
xchg
and
cwtl
mov
sub
mov
sub
pop
mov
cld
fwait
lods
pushf
push
jnp
xor
jo
add
pushf
cld
mov
cld
jmp
gs
pop
fsubs
loop
dec
rolb
inc
mov
mov
lea
into
imul
xchg
push
repz
mov
pop
xor
inc
or
or
inc
neg
xchg
stos
mov
cld
icebp
das
enter
or
inc
sti
lahf
ss
pop
cmp
xchg
fs
jle
pop
call
xor
and
xor
inc
jg
inc
mov
dec
xchg
aad
shl
loop
gs
xchg
mov
fcoms
mov
push
push
fsubr
sbb
pop
rep
inc
inc
sbb
out
cld
rolb
les
mov
mov
into
leave
test
fcmove
das
xor
hlt
xlat
imul
ss
int3
cltd
jp
xor
pop
or
mov
ds
pop
push
notl
xchg
sub
mov
lret
addb
mov
adc
test
daa
mov
add
ljmp
mov
or
popa
xor
loop
pop
push
rcr
jle
push
fistps
shll
mov
and
sub
cld
jbe
pop
dec
mov
and
xchg
shl
add
adc
sub
push
jb
sarl
mov
jmp
mov
dec
mov
icebp
lret
mov
aas
popf
mov
addr16
lret
inc
das
and
and
ljmp
sub
sbb
mov
in
xor
decl
adc
aaa
cli
das
or
lods
push
mov
sbb
mov
out
dec
inc
jns
dec
lods
sub
xor
lea
imull
cmp
in
or
fidivrl
mov
jge
or
inc
pushf
add
mov
xchg
imul
stc
jl
sub
push
pop
mov
rcr
outsb
adc
pop
or
mov
fisttpll
nop
inc
aas
mov
sti
mov
push
ds
sahf
int
mov
push
decb
inc
imul
push
dec
xor
xor
loop
sti
arpl
scas
lds
inc
xchg
imul
fisubrs
cs
dec
mov
aas
lret
daa
gs
ds
js
fnstcw
push
fwait
mov
addl
jp
push
mov
jno
in
mov
push
test
stc
jp
mov
int
adcl
or
mov
aas
ja
ds
ss
out
out
ljmp
sti
mov
cmp
enter
sub
mov
inc
decl
mov
cmp
mov
clc
cmp
xor
loope
in
mov
inc
shrl
dec
inc
rcr
idivl
movsl
pop
jb
out
out
arpl
test
and
xchg
adc
pusha
push
dec
dec
call
inc
xchg
sub
sub
push
cld
push
pop
push
cltd
or
aas
fistl
lock
xchg
mov
cmpsl
jle
sbb
jo
and
rclb
mov
lods
cmp
ljmp
out
push
adc
insb
push
jge
hlt
adc
aad
sub
test
push
jns
jecxz
pop
mov
and
sahf
pop
pushf
sbb
mov
loope
leave
jno
jl
push
jbe
sti
lcall
rsqrtps
insl
stos
add
mov
cmp
jl
jbe
jno
mov
pop
sbbb
aam
imul
adc
mov
push
push
mov
mov
jmp
xchg
dec
ss
nop
sti
daa
xlat
dec
ds
fwait
pusha
mov
fdivrl
sbb
nop
cmpsl
testb
xchg
repz
int3
jbe
push
leave
out
push
mov
mov
mov
std
test
int3
in
test
fwait
lahf
jne
xor
mov
dec
imul
mov
add
jle
scas
mov
clc
push
pushf
ljmp
sti
mov
xchg
mov
aad
fadd
daa
test
mov
xchg
cwtl
jg
aas
mov
les
jle
into
cwtl
fstps
lods
icebp
repz
mov
icebp
popf
cmc
dec
jno
mov
cmc
inc
or
in
sub
xor
mov
mov
loopne
cs
dec
inc
dec
mov
sbb
jbe
or
xor
xchg
fnstcw
dec
insl
xor
aaa
aaa
int
ret
lret
out
sarb
mov
push
inc
dec
bound
mov
popf
mov
aam
mov
test
daa
clc
jb
jo
inc
lret
loope
sbb
add
mov
mov
cld
cli
lret
shl
cmpsl
cmp
mov
sahf
jb
cwtl
sbb
test
data16
repz
cmp
in
or
add
dec
lock
rolb
decb
data16
cs
lock
adc
fs
add
dec
cli
adc
lods
dec
dec
jge
add
push
xor
jg
mov
cmp
fiaddl
scas
pop
xor
loope
fnstenv
enter
cmpsl
outsl
dec
ss
pop
sub
jecxz
cmp
sub
mov
shlb
fiadds
fs
xor
aaa
or
adc
xchg
fistpl
popa
adc
mov
pop
jns
in
stc
outsl
cmp
mov
int
aas
bound
lods
scas
and
sbb
fs
xchg
pop
dec
add
push
adc
fisttpll
decb
lahf
mov
cmp
add
loopne
sub
dec
mov
cmp
arpl
int3
xor
and
mov
jge
test
ds
mov
in
or
inc
pop
xor
movsl
adc
cwtl
leave
lret
push
inc
leave
test
outsl
jle
in
aas
push
inc
or
out
mov
sub
push
cwtl
or
xlat
pop
adc
jl
xchg
pop
std
inc
pop
arpl
cmp
xchg
adc
cmp
cmp
fldenv
cmp
inc
xor
loopne
add
xchg
ds
push
inc
sub
movsl
out
xor
pop
pop
out
xchg
sbb
test
sub
data16
repz
hlt
push
sbb
fldl
lods
push
stos
jnp
mov
sub
loopne
push
mov
mov
push
cmpl
add
add
xchg
imul
pusha
dec
xor
sub
outsl
mov
xchg
pop
sub
ret
push
daa
mov
call
cmpl
fsubs
adc
jbe
push
popf
popf
out
movsl
sbb
out
add
out
test
push
bound
pop
lahf
dec
outsb
cmp
add
fldcw
mov
sti
jne
or
pop
insb
add
adc
ss
jmp
movsl
and
stos
xor
aaa
mov
mov
out
inc
enter
je
scas
mov
cmc
sbb
fstpt
pop
adc
lret
pop
sub
mov
or
push
loope
pop
cmpsl
push
mov
dec
push
in
js,pn
les
mov
fsubrs
mov
loope
add
je
int3
pop
add
sbb
sub
inc
and
push
and
and
ret
fs
fidivs
sub
std
push
jecxz
into
loope
lcall
sahf
add
aas
scas
mov
dec
dec
lods
or
shll
pop
cltd
pusha
ljmp
sub
fisttpll
pop
inc
jp
lret
int
or
loopne
enter
push
adc
pusha
div
daa
stc
xor
test
push
add
dec
jmp
lods
fdivrs
jge
popa
add
or
or
pop
sbb
out
mov
test
outsl
cmp
sbb
in
ljmp
and
mov
fs
sarl
fsts
mov
jp
pop
pop
std
mov
jno
mov
jbe
add
addl
int3
mov
scas
dec
incl
rorb
add
pop
xchg
sbb
cmc
ljmp
jae
scas
xchg
lock
xor
sarb
aaa
jecxz
adc
pop
cmp
jle
mov
outsb
add
xchg
fmull
adc
mov
mov
xchg
into
lret
push
enter
adc
push
dec
ret
scas
pop
mov
icebp
outsl
pop
les
cmpsb
pop
adc
imul
and
test
in
test
jne
sub
cmpsl
clc
popa
movsl
adc
add
in
out
sub
mov
cmp
xchg
sarl
jp
les
xchg
fisttpl
sbb
ret
mov
sub
push
mov
repnz
sbb
and
sbb
scas
pop
testl
shr
aad
push
ljmp
sbbb
dec
inc
xchg
adc
pop
sub
imul
push
sbb
roll
add
and
push
outsb
fildl
iret
dec
cmp
mov
js
xor
in
jp
jg
and
xchg
jbe
pop
push
ret
mov
inc
icebp
mov
aad
std
das
ret
jb
stc
inc
andb
mov
push
cltd
outsl
adc
lods
mov
mov
lods
popa
jp
in
jl
jb
add
pop
mov
stos
pop
dec
push
mov
mov
xor
xor
sbb
dec
fnstenv
mov
jmp
les
cwtl
inc
sahf
scas
pop
push
xchg
jmp
outsb
movl
inc
mov
insb
movsb
jae
push
negb
sub
xlat
out
inc
add
dec
jne
jns
cmc
stos
fldt
and
jno
fists
add
inc
sbb
movsl
addr16
xchg
push
jecxz
hlt
push
scas
mov
ss
icebp
push
xchg
int
decb
sub
pop
xor
or
xor
push
dec
ror
push
cmp
mov
xchg
mov
jp
sti
jo
xchg
aam
ss
mov
shr
stc
inc
shll
push
data16
loopne
mov
pop
insl
rorb
sbb
daa
mov
ljmp
mov
mov
jbe
insl
fnstenv
jae
or
mov
and
mov
cmpsl
push
mov
adc
dec
xchg
sarl
sbb
sub
dec
cmp
imul
mov
hlt
inc
scas
sti
mov
mov
or
rorl
sub
clc
pop
mov
js
jmp
jbe
jmp
mov
mov
or
daa
cld
xlat
push
cmp
out
adc
scas
sub
sub
push
rclb
imul
xchg
mov
jb
jl
inc
aam
sahf
insl
gs
pop
out
js
mov
xchg
aad
sub
xlat
jb
pop
fdivr
scas
cmp
dec
xchg
in
adc
mov
lds
xchg
out
sbb
push
call
push
ja
sbb
adc
mov
mov
xor
mov
mov
mov
adc
pop
jecxz
mov
arpl
adc
dec
pop
out
xlat
sub
mov
fs
mov
mov
dec
or
mov
daa
test
jb
hlt
or
mov
xor
data16
pop
inc
push
mov
and
popf
dec
lods
sti
ret
stc
pusha
dec
push
nop
scas
mov
sahf
cmp
aas
sbb
jnp
sbb
xchg
sbb
das
loope
pusha
dec
fnstenv
fists
in
clc
mov
into
pop
dec
add
pop
rcll
cmp
lods
mov
inc
fildll
jb
sarb
mov
pushf
hlt
and
cmc
adc
mov
dec
inc
dec
dec
mov
cwtl
hlt
pop
adc
push
inc
push
sub
fldenv
xor
or
inc
repnz
inc
in
jbe
icebp
xchg
dec
cmpsl
int
sbb
leave
int3
test
dec
nop
int3
loopne
pop
leave
jb
pop
xchg
xchg
in
lock
mov
jae
test
mov
sbb
in
dec
xchg
jbe
sub
cmc
sbb
pushf
xadd
jp
sub
cmp
xor
dec
cmp
and
dec
push
and
adc
push
shll
ret
push
test
add
lret
movsb
jmp
push
movsl
mov
cmpsl
pop
cltd
insl
fidivs
xor
ja
xor
cs
adc
out
jl
insb
test
push
cld
cmp
repnz
les
mov
jo
lds
lret
mov
jcxz
es
frstor
movsl
icebp
jg
push
jg
fwait
pop
mov
ret
scas
inc
pop
into
mov
ss
shll
and
jg
test
xchg
out
xchg
mov
push
ret
sub
pop
pop
outsb
movb
mov
sete
mov
call
mov
test
xlat
out
adc
ss
adc
adc
shl
js
push
mov
std
pop
add
xor
faddp
sahf
sub
cld
jb
mov
imul
lock
frstor
xchg
xlat
or
fdivs
aas
scas
imul
ret
jo
push
sub
push
jo
lods
jno
dec
add
push
jp
and
sub
call
mov
mov
xchg
mov
in
idivl
and
cmp
lods
out
or
inc
nop
pop
sbb
push
mov
popa
lcall
lcall
mov
add
pop
in
pop
sub
xor
or
arpl
in
mov
stos
cmpl
sbb
movb
mov
dec
lahf
mov
stc
mov
or
ds
push
xlat
and
popf
cmpsl
push
lahf
sbbb
inc
out
shrb
cmc
cmp
xor
fisubrl
mov
dec
stc
xor
lods
out
stos
fimull
out
cmpsb
sahf
inc
sti
out
into
push
les
rcr
call
imul
mov
mov
shlb
repz
mov
xchg
mov
sbbl
dec
cmp
add
add
sarb
xchg
xadd
xchg
aas
jae
mov
in
out
leave
mov
lods
push
repz
or
or
adc
shlb
lret
push
out
pop
scas
cmpsl
adc
repz
xor
cld
jge
mov
movsl
cwtl
dec
jo
mov
lcall
inc
xor
inc
xlat
lret
xor
aas
mov
lock
rorb
sahf
sarb
int
leave
push
nop
addb
pop
mov
and
test
push
pop
das
mov
adc
inc
sbb
andb
repz
fistpll
out
psubb
lcall
pop
mov
js
out
sub
jle
pop
xor
xchg
imul
imul
cmp
mov
adc
test
jl
sahf
sub
rorl
les
testl
int
cmpsl
adc
mov
adcb
pop
adcb
mov
inc
fimuls
mov
lahf
inc
pop
sbb
push
cli
or
sbb
mov
out
invd
in
and
dec
imul
sarl
mov
out
enter
icebp
les
xor
mov
aam
xor
fidivrl
xchg
jae
ljmp
sahf
sbb
adc
scas
fcmove
fsubp
mov
imul
sbb
fs
pop
sub
add
jnp
or
test
imul
pop
shlb
and
xchg
clc
inc
mov
mov
adc
xor
roll
rsm
sbb
adc
mov
out
sarl
sbb
xor
cmp
cmp
cmp
mov
xchg
paddusb
jmp
outsb
jb
xor
mov
jmp
movl
and
inc
xor
dec
xor
test
out
mov
repnz
sbb
sub
icebp
fdivl
mov
add
lcall
sbb
mov
pop
jns
ss
fs
fdivrl
subb
and
push
sbb
xchg
adc
cmpsl
jecxz
mov
js
push
movsb
xor
insl
cmp
aad
and
loope
mov
aam
cmp
divb
scas
rcll
mov
das
mov
sbb
scas
in
into
stos
or
fdivl
push
test
dec
clc
arpl
fisttpll
lret
hlt
sarl
or
mov
cmp
jnp
loop
in
dec
jle
jne
dec
inc
fcomps
lahf
jl
sub
cmpsb
cmpsb
xchg
sub
mov
sub
ds
test
call
icebp
jp
jae
pop
add
pop
dec
inc
cmc
lds
or
outsb
imul
sbb
int3
push
mov
jecxz
pop
fwait
xchg
add
jns
inc
inc
loope
es
stos
jmp
leave
sbb
dec
mov
js
xchg
out
sub
mov
pop
sahf
jo
xchg
lret
outsl
fmul
pop
or
sub
xchg
bound
mov
mov
or
enter
mov
sbb
loopne
add
jg
jle
decb
ljmp
sub
aaa
and
and
cld
mov
add
popf
mov
fisubs
dec
sbb
pop
je
lods
fcoml
mov
icebp
cmpsl
stc
test
daa
xchg
sbb
push
aam
sbb
cmpsb
mov
mov
sbb
add
add
jnp
or
fisttps
dec
mov
ret
jecxz
data16
leave
jnp
push
inc
mov
nop
cmp
call
push
fsub
xchg
cld
jnp
and
sub
movsb
cmp
xor
nop
inc
mov
dec
mov
addr16
in
cs
or
cmp
cwtl
xchg
clc
or
sbb
dec
sar
addb
xor
and
dec
jne
dec
adcl
repz
hlt
inc
or
and
cwtl
mov
fnstsw
ss
push
fistpl
jae
add
dec
sub
notb
mov
sub
xchg
dec
add
sbb
ljmp
sbb
mov
push
mov
pop
adc
or
cvttps2pi
xor
lds
adc
sar
imul
bound
sti
or
cmp
lcall
or
ja
push
dec
sbb
leave
mov
cmp
push
jbe
dec
push
xor
mov
sub
add
adc
push
fsubrs
aam
aam
pushf
daa
notl
inc
dec
dec
andl
ss
movl
push
cmpsb
sbb
jnp
push
mov
cmp
cmp
leave
push
popw
mov
sbb
adc
sbbl
int3
pop
push
int
push
js
aaa
mov
add
adc
jnp
inc
sub
dec
mov
push
inc
jge
adc
ljmp
add
inc
subl
xor
outsl
imul
subl
mov
or
pop
ret
out
aad
pop
mov
scas
xor
fcompl
in
aam
test
mov
lret
add
mov
fidivs
and
loop
push
jg
and
xchg
je
mov
xor
cmp
cmp
xor
xchg
aas
hlt
sub
add
in
sbb
or
cwtl
mov
enter
fwait
cli
clc
fwait
or
mov
cmp
lahf
inc
or
ja
fwait
inc
push
push
dec
mov
pop
cmp
inc
rorb
push
xchg
cmpsl
enter
cmc
out
mov
mov
fdiv
insb
cmp
outsl
add
addr16
stos
mov
jp
rol
cs
mov
push
xor
and
sub
pop
fs
sti
aas
int
mov
inc
sub
and
mov
fidivs
dec
cltd
sti
inc
stos
imul
negb
popf
inc
ret
xchg
lret
icebp
vsqrtss
cmpsl
cmp
pop
sub
jmp
scas
test
and
or
cwtl
in
xorb
pop
jg
popf
popl
mov
dec
andb
out
out
sub
xlat
cli
fcoms
into
aad
push
cmp
inc
aad
cwtl
cmp
jle
loope
pop
jge
lods
lods
cmp
out
loop
xor
and
dec
jmp
add
faddl
add
cld
add
mov
fcompl
push
dec
shll
hlt
cmp
rcrb
test
icebp
and
xchg
lock
jns
jecxz
pushf
leave
pop
push
out
jno
jns
add
iret
jge
mov
add
ss
mov
lret
popl
mov
jle
push
dec
inc
imul
out
insl
cmc
pop
or
inc
out
cmpsb
fs
test
jo
jecxz
dec
in
sbb
pop
sbb
or
jo
fidivrl
clc
xchg
je
mov
fists
pop
movsl
xchg
inc
ljmp
lahf
inc
loop
ds
cmpsl
mov
cwtl
sbb
sbb
sub
mov
mov
addr16
or
in
shlb
shll
jns
xorb
jmp
xchg
or
cmp
sub
jo
iret
or
jp
push
insb
mov
xchg
push
push
fiaddl
daa
dec
jge
xchg
inc
dec
push
and
lret
jns
dec
xchg
in
push
add
pavgb
xchg
movsl
sub
pop
sarb
cli
push
lods
dec
or
push
sbb
or
and
movsb
out
enter
lods
mov
mov
js
bound
cmpsl
test
xor
cmp
popa
sahf
shrl
and
jecxz
into
ret
jle
ss
out
and
in
pop
add
rolb
popfw
jb
test
out
daa
sub
movsl
mov
lock
stos
pop
scas
cmp
adc
aas
dec
jl
adcl
add
or
leave
lods
adc
inc
pop
sub
lock
xchg
and
pop
fisubl
push
adc
cs
adc
scas
addl
mov
xchg
je
rolb
sub
inc
and
and
sub
rorb
mov
fucomp
sarb
dec
mov
and
push
loopne
mov
jo
add
imul
inc
popf
dec
pop
mov
int
sub
xor
xchg
cmc
xchg
push
push
pop
push
or
lods
dec
pop
das
nop
sub
xchg
push
std
adc
jg
cmc
imul
sbb
push
out
and
pop
mov
jg
call
push
mov
lods
mov
jae
repz
in
pop
loope
scas
popa
shrb
jo
fdivs
sahf
jecxz
xchg
mov
rcll
sub
inc
pop
lcall
cmp
rcrb
xchg
push
clc
int
sbb
and
mov
loop
popf
fstp
int
add
push
xchg
dec
cmp
pop
and
rolb
adc
jg
dec
aas
fwait
or
out
sbb
and
add
or
cmc
lcall
clc
hlt
mov
pop
xor
inc
mov
ret
push
mov
jb
movsl
aam
sbb
sub
lcall
xor
les
add
pop
sub
movsb
es
andb
fisubl
pop
rcr
sbb
adc
loopne
loopne
pop
sahf
and
push
dec
inc
xor
fiadds
cld
push
shl
xchg
test
pop
mov
lret
ja
rcll
out
idivb
fucom
imul
mov
std
jp
cltd
data16
and
push
jg
pop
sub
aas
mov
rcrl
mov
stos
scas
xchg
jae
cmpsb
rcr
pusha
pushf
push
cmp
push
mov
mov
pop
and
enter
dec
xchg
jmp
xor
mov
fisubs
or
xor
int
add
fisubl
and
sub
or
push
btr
xlat
inc
dec
pop
into
cmp
or
pop
mov
lods
and
rcrb
enter
call
xchg
out
xor
push
scas
lods
out
fiadds
leave
gs
sbb
sub
scas
test
stos
cli
push
pop
mov
lret
repnz
add
pushf
stos
sub
insb
pushf
push
jns
cwtl
gs
jno
pop
jb
mov
pop
out
gs
xchg
nop
fidivl
mov
daa
add
div
jnp
push
dec
aad
dec
fldt
inc
add
mov
imul
sbb
out
pop
rcrb
mov
mov
pop
mov
lea
fwait
push
mov
fnstsw
fiadds
shlb
nop
pop
push
ja
cmp
sbb
std
add
stos
dec
fisubs
fs
test
pop
or
test
stos
test
and
clc
sbb
cld
xor
imul
mov
lds
adc
add
dec
test
nop
lock
call
inc
orb
ret
xchg
xor
push
push
sub
cmp
call
fmul
push
addr16
stos
mov
mov
fwait
or
fcomp
insb
test
es
cmp
movsb
jp
dec
adc
lds
iret
cmp
test
mov
fcoms
dec
loope
fsubrp
and
lcall
pop
adc
or
out
dec
fcmovnbe
imul
jb
push
hlt
pusha
cmp
push
add
dec
jo
jmp
adc
inc
or
sbb
xlat
das
or
lret
int3
jp
pushf
test
orl
mov
roll
inc
jb
sub
cli
test
call
mov
xchg
sti
dec
fsubr
push
add
clc
jb
mov
imul
lods
mov
sub
push
cmc
cld
jmp
or
pusha
or
pop
ja
cmp
dec
xor
pop
sub
rcrl
nop
outsl
sub
dec
dec
mov
rorl
ret
scas
fsubr
fstps
stos
movsl
push
push
push
cmp
sti
ja
test
and
xchg
or
mov
jg
les
xchg
cltd
iret
add
int
out
or
call
xlat
and
sbb
cmp
push
incb
dec
cli
mov
inc
fwait
aam
inc
or
inc
mov
pop
js
mov
dec
out
and
arpl
mov
dec
scas
ljmp
adc
fidivrs
repz
jns
in
adc
inc
sahf
jp
movsb
jnp
insb
jnp
push
or
add
sub
sub
mov
inc
loope
pop
push
xchg
lcall
fbld
out
sti
mov
aas
mov
pop
adc
or
sub
xor
cmp
and
adc
jo
popa
lret
mov
mov
mov
xorl
jp
pop
in
lock
sbb
ja
das
addb
scas
lea
mov
fldcw
negb
xor
in
xor
mov
xchg
ja
or
lret
ret
mov
pop
imul
loopne
inc
aas
mov
test
mov
test
xchg
dec
movsb
jbe
or
xchg
pop
repz
and
je
jge
icebp
lret
aam
pop
pop
test
scas
scas
and
out
sub
push
pop
out
lock
push
scas
repz
jno
and
stc
addr16
pop
out
or
add
shll
scas
lret
shll
mov
or
dec
cmpsb
jg
cld
sub
xchg
push
adc
out
cwtl
inc
sub
sti
push
aaa
loop
and
cli
cmpsl
ret
mov
mov
arpl
mov
jle
leave
and
ret
int3
jge
and
push
loop
xor
push
bnd
pop
add
stc
and
and
adcb
int3
push
xor
rcr
mov
inc
hlt
cmp
ret
pushf
lods
sti
inc
pop
sub
aaa
js
jns
cwtl
cs
shll
xlat
pop
fwait
in
sub
ret
pop
out
sub
and
cltd
fnstsw
icebp
dec
aam
loopne
add
sub
out
add
lods
je
std
jg
and
jo
mov
or
mov
xor
dec
addr16
ret
inc
mov
dec
out
adcl
push
test
mov
push
xor
pop
cli
sub
mov
adc
hlt
popa
popf
cs
cmp
push
xor
jg
mov
dec
loope
and
mov
dec
std
or
mov
enter
cmc
inc
loope
sub
jle
call
adcl
cs
hlt
add
aas
adc
filds
rclb
xor
or
ds
cmc
mov
add
shrl
popf
shr
les
rcr
ss
insb
cmc
adc
rorl
clc
ret
jns
push
adc
push
adc
testl
cli
mov
mov
std
mov
fldcw
pushf
mov
adc
sbb
imul
out
mov
pop
outsl
insb
cld
jmp
cmp
xlat
xchg
jge
call
mov
in
jns
push
test
dec
fildl
mov
clc
jmp
clc
or
cmc
or
js
jmp
insl
test
imul
sbb
shrl
add
movsl
mov
addb
and
lcall
fildll
or
jmp
jbe
shl
lcall
adc
outsb
add
out
insl
and
dec
lods
stc
mov
lea
sahf
dec
mov
add
andl
addl
push
leave
push
pop
arpl
pop
out
push
pop
or
mov
in
out
mov
push
stc
jp
push
cmpsl
es
pop
sub
movsb
mov
pop
or
and
nop
sub
jp
mov
les
push
test
add
nop
mov
fdivl
test
jl
lds
adcb
dec
mov
and
push
subl
push
push
xor
cmp
aam
xchg
inc
adc
cwtl
das
push
jno
cmp
pop
xor
or
mov
dec
lods
push
pop
add
push
xor
aas
cmp
cwtl
dec
lret
jmp
mov
mov
es
jp
sarb
orb
mov
push
fisubl
sbb
adc
mov
add
lcall
dec
ret
mov
adc
pop
add
ret
dec
adc
adc
loop
mov
or
das
jp
in
xor
sahf
xchg
mov
cwtl
push
fildl
ficoms
cmp
jne
xor
subb
mov
je
mov
daa
lock
aam
mov
lock
add
rcl
pop
cmp
in
dec
push
stos
insl
stos
inc
inc
pop
movsl
pushf
sbb
pusha
push
call
inc
in
idivl
lret
mov
mov
mov
loope
cltd
cmp
into
cld
divb
push
stos
xor
dec
cmp
push
push
outsl
testl
ljmp
cmc
push
pop
loope
punpckhdq
inc
jecxz
fcoms
adc
dec
lea
imul
mov
mov
test
lock
cld
push
sti
call
cwtl
push
daa
insb
mov
pushf
mov
fldenv
mov
mov
ret
and
push
lods
test
imull
bound
fmuls
sarb
scas
add
pop
pop
sub
mov
pop
std
sbb
push
jp
adc
xor
push
xchg
sub
jb
push
sbb
mov
lds
pop
int
pop
lds
cmp
push
cs
cmp
adcb
aad
mov
imul
lods
sbb
jecxz
xor
sbb
sti
cmp
sbb
mov
mov
and
and
xchg
cwtl
inc
inc
test
mov
test
jecxz
xchg
jno
in
mov
cmp
cmp
push
pop
cld
inc
into
ds
repnz
fwait
lret
scas
add
inc
fstpl
mov
pop
mov
xlat
push
mov
push
loop
pop
inc
out
jne
mov
dec
fsubl
bnd
in
sbb
push
fs
cli
mov
sbb
jge
sarb
test
cld
mov
fisttpl
sbbl
xchg
shll
ret
dec
push
add
fsubrl
lds
mov
outsb
loopne
xchg
dec
push
add
push
das
icebp
or
cmp
pushf
in
mov
repz
pop
or
jne
lahf
and
pop
hlt
mov
popa
push
push
adc
mov
lahf
xlat
cmpsl
bound
frstor
int3
jge
xchg
cs
fdivr
rcr
mov
pop
ljmp
or
bound
inc
and
pop
sbb
sti
insl
cli
mov
arpl
mov
pop
movsb
mov
adc
in
repnz
xor
sub
or
sub
sub
jbe
rorb
das
jle
jge
adc
iret
pop
loop
popa
jno
fs
in
pusha
cwtl
pop
xchg
cmp
aaa
fcmovnbe
add
lahf
cmc
sbb
pusha
in
in
add
aas
pop
pop
adc
movl
into
arpl
sub
popf
test
ja
or
imul
mov
insb
js
leave
sbb
lahf
add
mov
rcrb
push
cmp
sahf
in
out
scas
xor
adc
mov
sti
pop
push
sbb
lds
add
test
sahf
xor
sbb
cli
loopne
and
inc
je
cmp
xchg
aaa
cmp
cli
test
repnz
sbb
mov
out
push
mov
mov
jne
lea
je
stos
xor
outsl
sub
popa
pop
notb
sahf
cwtl
jg
pop
or
sbb
push
imul
cmp
int
ret
fistpll
fwait
pop
mov
push
fptan
cmp
in
scas
or
cmp
push
adc
inc
pop
loopne
inc
mov
and
sti
pop
andl
dec
sbb
pop
jecxz
test
push
mov
push
lea
notb
aad
mov
pop
cli
fwait
scas
jmp
mov
repnz
icebp
sub
out
sbb
daa
adc
xchg
or
fldl
adc
aaa
inc
mov
add
popa
cli
inc
pusha
ret
daa
pop
xchg
or
int3
pop
ja
inc
and
adc
mov
arpl
divl
xor
lea
push
in
cmc
mov
or
xor
es
ds
mov
mov
sub
inc
mov
xor
mov
sahf
add
mov
dec
dec
fsubs
pop
xchg
sub
call
dec
mov
cmp
daa
jne
hlt
cmp
sbb
fsubl
loop
push
fnstenv
sbb
dec
jg
loope
inc
adc
ss
jb
or
mov
nop
int
mov
je
insb
cmp
dec
aad
push
mov
dec
repz
mov
inc
dec
insl
cmp
add
cwtl
sub
add
cmc
mov
jle
inc
aad
adc
ret
cmpsl
dec
int
mov
mov
mov
mov
imul
xorb
call
pusha
sub
sub
ljmp
movsl
mov
aam
nop
enter
push
add
outsl
and
stc
je
pusha
or
fdivs
nop
rolb
push
int
popf
cli
mov
mov
mov
dec
test
das
inc
pop
sub
cmp
fs
int3
call
jae
outsb
sbb
jno
jnp
adc
dec
pop
mov
sbb
mov
incl
sbb
push
add
negb
adc
sub
cmp
add
xor
xor
dec
test
loopne
test
or
push
mov
fiaddl
or
mov
mov
pop
into
addb
sbb
push
push
sub
popa
sub
mov
shlb
or
mov
cwtl
sti
add
mov
mov
mov
fwait
push
mov
jmp
mov
mov
aaa
add
cs
insb
or
shll
jbe
imul
xchg
mov
cmpsb
xchg
into
inc
mov
out
ror
stc
dec
clc
mov
iret
push
ljmp
movsl
out
lea
lods
in
mov
jb,pt
imul
push
not
and
cmp
iret
dec
cs
mov
lret
jl
ljmp
push
pop
fldlg2
adc
jp
sub
cmpsb
cmp
stos
xchg
sub
je
push
xchg
rolb
inc
mov
rcll
cwtl
pop
cmp
test
sbb
mov
int
nop
out
outsb
or
pop
lods
sbb
in
jl
imul
mov
mov
cli
jmp
inc
dec
pusha
or
push
enter
fwait
xchg
cmp
xchg
jecxz
mov
mov
decl
imul
je
cmp
jns
nop
gs
pushf
dec
bound
sarl
pop
aas
add
fidivl
cmp
jne
lods
push
dec
jg
mov
jae
cmp
pop
sub
cltd
je
fistps
dec
loopne
idivl
fisttps
sbb
and
outsb
sub
int3
insl
add
repz
sti
dec
mov
leave
or
jg
jb
adc
xchg
in
sbb
ror
pop
xor
jg
pop
dec
repnz
mov
xchg
gs
js
add
shl
adc
scas
sub
sub
cli
ficompl
jecxz
dec
sbb
dec
xchg
loop
mov
jp
xchg
add
adc
dec
repnz
fwait
ja
stos
pop
dec
cmpsl
cmp
aam
mov
cld
xchg
push
sbb
jecxz
inc
mov
test
pushf
dec
inc
xor
popa
mov
ret
pushf
cltd
and
inc
test
xor
cmpsb
popf
lret
push
nop
pop
sbb
add
xchg
xor
push
movsb
cmpsl
mov
imul
das
sbb
inc
jnp
out
out
shr
mov
rolb
and
jl
and
jbe
cli
cmp
sub
out
xlat
jbe
inc
mov
bswap
arpl
xchg
insl
mov
adc
dec
cmpb
xchg
xchg
add
inc
and
test
dec
loop
adc
xor
fs
iret
mov
sbb
pusha
push
ljmp
ja
mov
pusha
sti
scas
popa
mov
imul
stc
cmpsl
pushf
sbb
or
push
jbe
test
test
leave
or
repnz
adc
mov
sbb
jae
fisubs
cmp
in
lret
test
pop
aam
icebp
and
es
gs
mov
fbld
and
pop
pushf
or
sbb
cmc
rcrl
insb
pop
ja
lock
push
out
imulb
into
insb
xchg
xchg
xchg
pop
jl
mov
cmp
xchg
popa
daa
or
int
or
outsb
sbb
cmp
dec
bound
fisubrl
repz
subb
jmp
sbb
adc
aas
jg
and
pusha
adc
inc
inc
mov
ficoml
lds
test
mov
icebp
xchg
pop
lcall
jmp
mov
call
and
scas
sbb
cs
sub
imul
mov
sar
outsb
add
shll
call
rcrb
xchg
mov
push
test
mov
dec
neg
sub
jl
jg
jge
data16
pushf
xor
mov
stos
or
or
push
dec
xor
dec
lods
mov
mov
push
jnp
test
push
cwtl
xchg
mov
mov
sbbb
stos
int3
jmp
movb
repnz
out
push
into
pop
mov
add
adc
stos
xchg
cltd
fucomp
jae
pop
fisttpl
movsl
dec
sbb
or
and
pop
and
jp
push
fcom
sbb
mov
push
dec
or
movsb
push
fcomi
pop
ss
adc
mov
cmp
mov
jo
rolb
aad
push
loope
cmp
push
fists
adc
add
jo
aaa
ds
je
jp
pop
mov
xorb
ret
push
push
jae
test
sub
xchg
shll
scas
int
aad
sbb
xorl
adc
dec
push
shlb
repz
add
jae
mov
add
clc
shlb
dec
movsl
clc
push
ljmp
mov
lock
pop
mov
ljmp
repz
push
je
in
push
pop
push
fdivs
aaa
scas
or
lea
negb
adc
lcall
das
imul
mov
and
dec
scas
pop
mov
dec
divb
into
loope
in
or
mov
jae
push
repz
pop
xlat
aam
push
out
jg
incb
cmpsb
inc
jo
pop
fcomps
mov
lds
xlat
cs
mov
sub
lea
cmc
fcomps
popf
inc
mov
pusha
inc
dec
mov
xorl
in
fadds
adc
xchg
jl
jge
lahf
add
bound
std
stos
in
fs
mov
js
scas
fsubrl
rolb
shll
fdivl
je
mov
sbb
or
or
imul
mov
push
mov
xor
lret
pop
xor
lock
cwtl
inc
out
fistps
push
aas
ljmp
dec
std
mov
xchg
and
aas
sbb
xlat
test
jo
lcall
jae
fnsetpm(287
mov
xchg
push
imul
out
test
popa
addr16
in
aas
cltd
xor
push
cltd
sahf
stos
cmp
mov
add
arpl
mov
jae
push
push
or
shr
loop
stos
inc
pop
pop
loope
jmp
pop
iret
dec
dec
sub
mov
lahf
jmp
iret
xchg
js
or
inc
mov
jle
cmpsb
add
fs
outsl
dec
xor
divl
mov
or
jg
test
testl
fldln2
inc
in
xchg
mov
movsl
sbbb
inc
xor
sahf
fldenv
rorl
or
sub
repz
jae,pn
xchg
les
arpl
stc
and
and
mov
adc
add
cltd
mov
jp
dec
aas
pop
xchg
or
mov
inc
add
jg
and
sbb
jmp
rcl
pop
jo
sub
jecxz
dec
imul
push
sub
xchg
shll
adc
fdivrl
test
int3
xchg
test
outsb
ljmp
insl
lods
fwait
loope
movb
sbb
ret
ret
jno
and
push
rcr
mov
jle
sbb
cli
pop
enter
cld
js
dec
test
mov
adc
adc
loop
sub
or
lret
lea
and
int
pop
aam
jnp
and
sti
sbb
xchg
xor
or
mov
xchg
jecxz
addr16
add
mov
popf
les
add
add
push
and
aam
int3
push
or
ficompl
popf
cmp
push
mov
mov
movl
cwtl
xor
out
les
sahf
shrl
jmp
mov
mov
inc
add
rolb
pop
and
xor
dec
pop
mov
inc
test
push
adc
jo
out
pop
pop
test
test
test
and
sub
out
ret
cli
xchg
dec
mov
mov
icebp
lea
jl
sbbb
mov
or
js
and
mov
push
mov
xor
cmp
imul
inc
add
push
psrlw
dec
push
inc
dec
or
mov
dec
mov
jne
sbb
cmc
inc
int3
mov
push
mov
sub
test
pusha
pop
into
or
dec
cmp
out
and
out
in
fwait
sub
pop
mov
jno
pop
cltd
ja
fsubl
cmp
xlat
std
mov
adc
les
insl
push
cmpsb
clc
ss
or
adc
lock
mov
sub
out
or
jnp
shll
addr16
and
stos
cli
xchg
out
out
dec
mov
xchg
push
test
pop
movsl
add
pusha
adc
mov
push
scas
sahf
pop
flds
pop
cld
mov
shll
clc
iret
popa
call
loop
hlt
mov
lods
pop
es
pop
dec
pop
jne
mov
xor
mov
aam
or
xchg
ret
jb
imul
popf
dec
fistpll
inc
cmp
data16
push
push
fwait
xor
pop
and
add
roll
xchg
xchg
or
or
and
notl
jno
jno
lahf
xor
or
outsl
ret
lods
movsl
xchg
loop
dec
jns
stos
xchg
std
xor
lret
les
popf
jnp
push
dec
rcrl
loope
das
icebp
pop
mov
xchg
inc
pop
stos
xchg
les
lods
dec
jbe
inc
inc
jno
adc
cmp
push
mov
stos
les
lcall
xor
pop
dec
cltd
adc
push
lea
test
cmp
push
sahf
and
imul
adc
int3
mov
push
cwtl
cmp
dec
lea
mov
js
negb
adc
divb
insb
push
mov
orb
adc
in
mov
jecxz
test
sahf
adc
in
push
xchg
sbb
lret
mov
lock
test
jnp
movsl
js
mov
popa
mov
inc
sub
push
lock
cmp
lahf
frstor
imul
cmp
sbb
xor
loopne
jne
fwait
adc
cmp
pop
jbe
lock
pop
jno
mov
mov
fwait
and
adc
jle
shl
dec
das
jo
inc
add
jbe
cmpsl
dec
inc
mov
inc
jl
movl
inc
stos
dec
sbb
push
dec
inc
sub
jge
push
inc
mov
fidivrs
mov
scas
inc
icebp
or
fs
scas
movsl
cmp
fs
sahf
mov
mov
jge
adc
icebp
pop
addr16
hlt
lods
or
cmp
inc
xchg
sub
out
sub
sar
lods
mov
push
sbb
dec
pop
inc
jae
shll
gs
test
mov
mov
jne
cmp
js
xor
shrb
idivb
out
pop
outsl
and
lods
cmpsl
pop
mov
arpl
ja
ret
into
movsb
mov
push
fstps
jmp
dec
mov
aad
loope
mov
adc
mov
cli
xor
xchg
pop
mov
cmp
call
sbbb
push
or
jp
popa
xchg
sub
ret
xchg
ret
push
and
mov
xor
add
imul
or
test
inc
mov
es
sub
and
mov
out
enter
and
xchg
push
mov
out
jge
clc
or
or
in
pop
fmulp
mov
fstps
pop
rcrb
xchg
cltd
jne
std
lret
mov
int
jo
mov
imul
addr16
lea
dec
jno
daa
les
sarl
stos
inc
push
xchg
inc
cmp
mov
mov
mov
xchg
cmp
in
push
out
int3
pushf
add
dec
push
push
pop
mov
add
orb
imul
sub
mov
inc
int3
mov
sbb
dec
sbb
xor
cltd
out
or
sub
out
out
fwait
mov
dec
dec
out
mov
mov
pop
cmp
pushf
aam
mov
enter
sbb
sqrtps
setge
xor
pop
test
sbb
or
pusha
ja
inc
movsl
cwtl
mov
popf
daa
leave
and
push
push
add
cmp
xor
aaa
outsl
imul
pop
jo
ficoms
or
mov
popa
jbe
test
fildll
jns
inc
scas
add
sub
push
dec
sar
push
mov
aad
mov
add
iret
sti
lock
fstpt
cli
cmp
pop
repnz
pop
ret
push
cli
lahf
jbe
stos
cmp
mov
sbb
loop
daa
ja
push
out
xchg
jg
in
add
scas
movsl
cmp
jg
xor
add
push
cmp
std
rcl
into
sub
pop
stos
outsb
mov
insb
pop
out
mov
dec
dec
adc
scas
stos
mov
aas
jae
jp
push
les
jnp
pop
mov
xor
es
mov
dec
push
pop
std
inc
inc
push
leave
lea
outsb
push
pushf
and
dec
sub
test
push
mov
cli
pusha
ret
inc
add
fs
lods
sbb
out
mov
out
adc
shll
dec
mov
mov
add
push
repnz
jmp
in
xor
or
or
pop
xchg
shll
xor
jmp
jo
fisubrs
mov
dec
adc
push
ret
lcall
cwtl
fsubrl
movsl
bound
mov
sbb
or
lds
inc
lret
imul
push
cmpsb
jl
dec
movsl
pop
xchg
andl
dec
and
fistps
push
daa
hlt
out
or
stc
mov
ljmp
je
subl
out
rol
xchg
fincstp
push
pop
adc
lods
mov
je
jg
and
movsb
mov
xchg
pop
sbb
and
lea
cmp
outsl
xchg
repnz
div
popf
fs
push
sahf
loopne
sti
mov
movl
push
jl
pop
or
out
mov
dec
cmc
pop
ficoms
adc
cld
loope
imul
mov
push
sub
ljmp
jg
lock
mov
rol
cmp
mov
cmpsb
cld
and
movsl
insb
and
jno
sbb
xchg
lahf
imull
push
outsl
bound
dec
int
les
cmpl
imul
pop
or
adc
mov
clc
arpl
sub
sti
mov
dec
push
outsb
repnz
xchg
sub
xchg
sbb
fisubl
mov
ret
std
inc
daa
mov
add
cmp
lods
fimuls
andl
dec
sbb
lods
xor
sub
cli
shlb
pop
jecxz
mov
xorl
mov
sbb
stos
dec
jp
outsl
in
ss
test
xor
mov
jns
mov
inc
stos
sti
pop
cmpb
xchg
dec
pop
je
and
push
push
enter
adc
scas
out
testb
jl
cltd
rol
cmc
push
cmp
add
sti
bnd
jo
adc
imul
push
mov
stos
leave
mov
xchg
push
int
call
or
roll
push
outsl
mov
push
jb
inc
aas
ret
sub
inc
rorb
mov
mov
mov
in
aaa
imul
out
mov
jecxz
fs
jb
and
mov
call
mov
sub
fisubrl
add
iret
dec
test
imul
arpl
push
pop
enter
sub
fwait
dec
push
lret
xlat
dec
inc
xor
jo
test
hlt
jp
aam
cmp
mov
fnsave
push
cmp
test
setle
lret
insb
movsb
cmp
or
jne
inc
sbb
cmp
pop
in
fistps
push
andw
ficoml
jg
inc
out
push
inc
sub
push
popa
adc
fnstcw
cmp
fmull
or
in
sbb
hlt
in
push
dec
xlat
xchg
inc
je
fdiv
pop
outsl
mov
jb
jge
ljmp
pop
dec
dec
in
ja
je
push
test
ret
gs
or
orl
pusha
insb
jp
xchg
jecxz
dec
lods
data16
loope
lret
call
int3
xor
testl
inc
mov
lahf
xchg
data16
mov
and
in
test
mov
mov
fstl
xchg
pop
leave
sahf
outsb
or
pop
cld
pop
mov
test
ljmp
shrb
movb
sahf
rol
js
gs
dec
lret
pop
sbb
add
inc
xchg
fs
jnp
js
cmp
pop
add
pop
sarl
cmpsl
mov
roll
cwtl
push
jp
add
fisubl
and
das
aaa
lds
pop
push
dec
adc
cmp
incb
inc
iret
sti
sbb
xlat
and
adc
push
ret
jmp
inc
sahf
aaa
mov
nop
jmp
aaa
push
bound
pushf
pop
test
jg
jbe
mov
ret
ret
repz
xchg
cmp
xchg
lret
xchg
jle
xor
lahf
mov
sub
jp
jmp
ja
cmpsl
mov
add
pop
outsl
cmp
or
ret
out
cld
pusha
jb
fldcw
in
jne
mov
mov
rorl
xor
cmp
cmp
xchg
repz
lahf
xchg
push
adc
pop
aaa
jge
jb
and
stos
fildl
pop
or
mov
add
pop
pop
lock
inc
lock
test
cmpsb
pop
xor
lods
loope
sub
inc
dec
add
pop
pop
pop
add
inc
push
outsb
rorb
mov
aam
test
xchg
lea
into
xor
mov
inc
sub
out
dec
fidivrs
mov
and
in
insb
sub
mov
inc
xor
sbbl
sub
mov
inc
mov
inc
or
sbb
notl
mov
test
add
cmpsb
dec
in
sub
xchg
stos
nop
je
repz
out
out
sub
add
cs
into
pop
xor
add
loopne,pn
push
out
int3
in
mov
and
pusha
sar
cmpb
jbe
sti
je
xchg
add
lcall
dec
and
sbb
je
subb
arpl
js
fs
cmpsl
cmp
xor
push
mov
cmp
ljmp
mov
mov
dec
clc
inc
cltd
in
sbb
inc
jg
les
adc
int
mov
shl
mov
push
mov
lcall
lods
jo
stc
enter
cmp
mov
arpl
sub
or
movsb
or
push
test
lret
repnz
shl
pop
mov
test
fwait
pop
aas
sbbl
cwtl
and
push
test
adc
stos
or
cmpl
loopne
add
adc
or
pop
sbbl
call
cli
mov
ljmp
lods
jmp
enter
repz
jg
stc
fisubs
mov
pop
inc
in
icebp
lods
arpl
cmp
mov
pushf
pop
jp
and
push
or
subl
push
cmp
repnz
enter
mov
inc
lea
fimuls
pop
push
lcall
cmp
dec
push
scas
xlat
stc
lea
shlb
es
xchg
cltd
shrl
mov
and
jmp
pop
add
mov
popa
xchg
lahf
ret
aam
cmp
loope
push
outsb
mov
movsb
pop
or
fbstp
or
mov
push
dec
nop
inc
andb
in
loope
inc
jge
or
dec
aaa
mov
pop
mov
jae
fnsave
pop
int3
fs
mov
fisubrs
movsl
mov
cmp
xor
mov
push
sub
out
dec
in
lret
sub
jns
jb
out
fdivs
jmp
in
jne
dec
xlat
rcll
pop
adc
sub
sub
mov
cltd
mov
adc
or
sysexit
mov
mov
icebp
mov
sbb
jo
mov
mov
add
int
inc
xchg
xor
lahf
xchg
mov
fistpll
dec
pop
sub
cmp
or
mov
sbb
test
sbb
idivl
cmp
imul
sub
repnz
rol
fistpl
pop
pop
lret
jp
xrelease
push
mov
dec
jnp
enter
push
jae
pop
inc
mov
add
or
xchg
jle
shrl
adc
jg
xlat
mov
dec
neg
test
outsl
cmp
pop
hlt
jle
dec
or
lods
inc
mov
xchg
dec
push
mov
xchg
xor
out
mov
push
aas
ljmp
scas
add
adc
xchg
and
dec
lods
cmpsb
cmp
call
mov
stos
inc
jb
rclb
mov
cmp
stos
scas
lock
lods
or
fldenv
fsubrs
cli
push
jno
outsl
mov
adc
mov
mov
pop
pushl
push
adcl
pusha
cmpsl
mov
adc
je
pop
lea
pop
mov
jo
test
into
adc
push
nop
push
lods
imul
mov
inc
sbb
xor
cmpsb
dec
and
mov
sbb
jl
push
into
fdivrs
and
adc
jne
les
pop
out
mov
stos
push
push
icebp
sbb
mov
adc
int3
mov
inc
and
pop
cmp
rcl
add
sub
fsts
cld
push
insl
pop
or
sti
mov
pop
pop
outsl
std
fcomps
pop
lret
mov
push
and
leave
xlat
repz
fldt
sub
mov
pusha
aaa
pop
mov
add
lret
into
lret
or
outsb
or
inc
xor
xchg
lea
jp
rol
mov
leave
inc
movsl
mov
mov
push
ficomps
shl
movsb
sub
or
sub
psllq
mov
adc
and
iret
cmp
pop
add
adc
lds
aas
bound
pop
addl
mov
or
pop
push
jp
push
ss
pop
cmpsb
in
cmpsl
shr
out
loopne
pushf
pop
mov
cmp
mov
fisttpll
movsl
lret
mov
sbb
mov
lret
in
pop
js
xor
leave
mov
push
pop
jp
lret
cld
xchg
out
cmp
mov
or
push
mov
lods
in
add
pop
shlb
or
mov
mov
dec
bound
lcall
fistps
outsb
lret
cmp
arpl
je
pop
mov
mov
jecxz
push
mov
dec
xor
inc
out
and
sub
mov
sub
fnstsw
mov
push
lods
aaa
iret
pop
dec
inc
enter
xor
popf
inc
js
stc
mov
call
mov
pop
dec
fildl
insl
stos
scas
and
pop
lds
mov
mov
add
in
mov
cmpl
jns
mov
push
cmp
or
jl
gs
aad
test
and
and
lock
mov
and
or
cltd
dec
mov
mov
lods
add
pop
mov
daa
andl
push
dec
imul
jnp
ja
in
xchg
outsb
mov
stos
test
jmp
dec
mov
cmp
xor
mov
ret
add
mov
jl
fnstenv
pop
push
mov
fisttpl
mov
lret
pop
jle
test
inc
iret
imul
sbb
lds
sbb
les
mov
lahf
mov
jo
xor
daa
jno,pt
test
fldt
out
les
sbb
mov
dec
cmc
aad
mov
mov
repnz
mov
lock
leave
insl
push
cmp
shrl
mov
dec
insb
add
aaa
hlt
fsub
mov
ss
lea
sbb
lcall
repnz
lds
inc
xchg
add
fwait
stos
das
sbb
adc
jmp
fidivs
or
popa
sbbb
in
js
push
aaa
fs
scas
inc
adc
or
mov
xor
jg
adcl
mov
dec
and
stc
or
jp
push
jns
hlt
push
xor
loopne
mov
add
mov
call
and
sbb
jl
jne
mov
fs
xor
or
loopne
mov
std
inc
cmp
mov
pop
and
pop
outsb
cld
das
push
xchg
or
xor
mov
fs
mov
hlt
add
gs
ja
mov
lock
or
lcall
pop
out
xor
fisubs
call
clc
push
mov
add
cmp
adc
dec
fdivrs
in
pop
jnp
inc
dec
arpl
push
mov
xchg
xchg
int
or
push
sarb
scas
mov
jp
loope
mov
sub
or
sub
mov
xchg
inc
scas
jo
out
int3
push
pop
gs
mov
mov
sbb
add
cmc
jmp
popa
aaa
mov
xchg
mov
mov
xchg
call
add
sti
dec
mov
js
mov
jl
inc
int3
or
cmc
lds
or
test
push
jmp
sbb
cmp
shlb
je
jne
nop
or
or
ja
ljmp
jno
adc
ljmp
je
cmp
les
mov
ss
sub
cli
pop
sub
dec
sbb
xchg
inc
aad
std
jnp
push
add
rclb
shl
and
push
fdivrs
or
roll
jge
inc
sbb
pop
add
pop
sahf
cli
dec
and
or
ljmp
divb
mov
mov
adc
cmpsl
daa
shll
movsl
outsb
xchg
mov
mov
mov
add
sbb
xor
lock
aad
ret
or
cltd
mov
lock
xor
movsb
iret
js
dec
fdivs
std
mov
mov
enter
pusha
inc
mov
jle
inc
in
and
cmp
jo
mov
mov
ret
cwtl
sbb
mov
popa
cmp
insl
jecxz
bound
mov
ss
mov
loopne
dec
ret
xchg
sub
xor
or
lock
insw
add
mov
aaa
aad
shrb
lret
lret
fimull
and
xor
push
jae
test
cmp
repnz
push
add
cmp
pop
mul
xor
cwtl
and
push
cmp
xchg
jle
add
add
mov
mov
mov
cmp
cmp
dec
insl
movsl
lock
clc
lahf
add
or
movsb
fsubs
sub
fisttps
lret
sbb
cli
nop
scas
pop
push
and
xor
xor
pop
add
imul
jo
fidivl
sub
addr16
cli
add
jnp
inc
inc
sti
mulb
daa
xor
insb
pop
fdiv
sahf
sub
sbb
stc
mov
out
add
int3
bound
mov
inc
lahf
jae
aaa
inc
mov
sar
andb
insb
es
xchg
jae,pn
call
ret
and
aas
rcr
lods
xchg
into
popa
dec
push
jecxz
ret
and
insl
addr16
shlb
xchg
ret
mov
stos
fsubrs
mov
push
loop
loop
inc
fwait
mov
rorl
addr16
push
pushf
jo
loopne
icebp
xor
jecxz
daa
fs
mov
cmp
xchg
aas
jmp
mov
addr16
mov
pop
fisttps
test
add
shll
inc
stos
and
pusha
or
jge
mov
mov
mov
mov
ss
mov
pushl
or
mov
cs
sub
and
jecxz
mov
and
das
fstl
pop
clc
dec
mov
repnz
push
movsl
rorl
fwait
adc
lock
negl
repz
repnz
add
mov
hlt
jno
mov
sub
inc
loop
inc
xor
adc
iret
iret
sbb
pushf
mov
outsl
lock
jbe
mov
bound
aaa
mov
xchg
out
not
inc
pushf
dec
mov
ljmp
adc
pop
outsl
xor
push
sbb
lcall
push
xor
insl
push
add
call
inc
idivl
mov
xchg
nop
jno
ret
repz
pushf
scas
sbb
add
dec
and
pop
sbb
adc
movsb
in
loopne
out
jne
dec
jmp
and
add
xchg
in
cmp
mov
sbb
insb
pop
push
orl
sti
dec
or
mov
aad
mov
jle
ret
cwtl
sbb
push
and
ja
negl
jne
out
mov
xlat
cs
dec
and
add
mov
or
jl
xor
and
cmp
xor
std
push
mov
inc
mov
or
pop
repz
inc
mov
lods
and
ss
cmp
mov
rorb
imulb
adc
icebp
shll
lods
jns
sahf
adc
pop
mov
das
dec
popf
or
stos
popa
jbe
mov
in
pop
in
hlt
imul
xor
xchg
stc
inc
sub
das
sbb
loope
jnp
mov
inc
into
pushf
inc
and
inc
cmc
pop
nop
insl
loopne
mov
sub
adc
sub
cmp
add
xor
std
xchg
lock
adc
aad
mov
pop
sbb
or
ficomps
stos
subl
jbe
or
mov
shlb
in
push
pop
push
jle
xchg
push
cmovl
pop
mov
or
jp
adc
sub
mov
cmp
loopne
add
loopne
mov
mov
mulb
push
test
jmp
cmpsl
jmp
inc
mov
sub
inc
in
cwtl
sub
cwtl
xor
add
test
add
pop
imul
js
mov
jle
repnz
sub
test
xchg
push
jecxz
push
sbb
adc
seto
sar
fidivs
addr16
xor
popa
lock
cmpsl
sarb
mov
or
pop
pop
mov
mov
fsub
repz
sub
xchg
mov
xor
push
xchg
cmpb
aas
mov
push
pushf
in
adc
mov
outsl
xor
fsubr
xchg
adcb
push
sub
int
insl
xchg
fdivp
shll
aas
aas
mov
fidivl
cmpb
movsb
stc
push
add
out
mov
shr
add
jmp
inc
in
adc
leave
in
add
gs
ss
add
dec
jbe
xor
imul
lods
imul
arpl
push
pop
xchg
jge
call
sbb
xlat
push
cmp
sub
seto
in
xor
insb
insb
mov
push
in
sahf
js
and
arpl
imul
push
lods
fdivl
push
cmp
cli
mov
icebp
xor
push
mov
jnp
xor
aaa
out
outsl
mov
sbb
jmp
mov
cmp
icebp
pop
push
cmpsb
pusha
ror
xor
xor
xor
dec
ja
xor
adc
cli
xor
dec
and
add
cmpsl
fwait
pop
repnz
out
xor
insb
jns
lds
cli
sahf
sbb
loopne
outsb
adc
out
jp
mov
leave
jmp
jo
lret
insb
mov
and
enter
push
jno
filds
xchg
push
mov
imul
pop
aas
jecxz
fistpll
rcrl
cmp
cld
inc
adc
and
imul
daa
andb
jbe
pusha
sarb
fsts
add
loopne
add
or
leave
push
add
dec
mov
dec
mov
cwtl
xor
cli
lods
cmpsb
mov
pop
popf
mov
lret
xchg
adc
imul
insb
pop
or
clc
push
mov
int3
jecxz
js
cmp
inc
les
xchg
pop
ret
mov
jg
mov
xchg
movsb
cmp
stos
sbb
and
or
aam
mov
dec
gs
xor
pushl
xor
pop
dec
ret
push
pop
inc
inc
mov
and
je
dec
xchg
scas
push
jl
lret
popf
inc
mov
scas
pusha
jns
and
addb
idivl
ja
mov
inc
or
aaa
push
add
cmpsl
mov
push
test
sbbb
lret
sbb
dec
mov
loopne
cmp
pop
movsl
xchg
pop
add
lods
test
and
jmp
lcall
lods
mov
pop
and
hlt
inc
cmpsl
sbb
imul
lret
adc
mov
cmp
aaa
pop
push
sbb
mov
fistl
sub
js
test
xchg
adc
add
mov
jmp
lods
imul
jbe
or
mov
pop
int3
or
jae
or
sub
sub
and
lods
pop
fwait
aam
inc
into
jle
das
pop
enter
in
mov
sbb
push
pop
repz
sbb
xor
rcr
add
add
cmp
mov
loope
jne
popf
pop
andb
gs
dec
test
cli
or
push
int
cmp
cmp
mov
arpl
ffree
jae
lcall
and
inc
lret
add
imul
leave
lock
cmp
icebp
dec
ret
sub
sbb
inc
loopne
sbb
hlt
push
data16
add
mov
add
sub
cmp
daa
xor
jmp
mov
and
add
into
jle
jb
rorb
loopne
fsubs
divl
mov
ds
ljmp
push
pop
push
in
cmpsb
sbb
mov
sub
mov
add
sbb
insl
push
mov
scas
jg
adc
cli
cltd
inc
test
inc
gs
pop
test
cmp
out
stos
sbb
add
outsl
inc
fcmovnb
lock
inc
and
cltd
lret
cld
cmp
sbb
inc
xchg
lahf
sbb
cmp
add
inc
cmp
movsb
inc
add
push
sub
add
ja
and
jl
push
pop
fucomi
xor
into
sbb
aas
in
inc
mov
xchg
call
push
add
dec
jae
sub
xchg
jle
out
mov
mov
mov
aad
cwtl
cmp
sahf
fs
fisubrl
pop
test
sbb
out
xlat
sbb
sahf
and
add
aas
mov
div
adc
lds
add
push
sub
aaa
or
and
pushf
cmpsl
push
push
dec
jbe
inc
jns
cwtl
ret
mov
mov
roll
sub
xchg
sahf
negb
xorl
push
es
out
push
and
jmp
outsl
mov
xor
inc
dec
jno
ret
xchg
not
mov
stc
push
inc
sub
imul
mov
mov
mov
loopne
ret
stos
in
mov
mov
stc
test
aad
push
inc
test
cwtl
mov
popf
xchg
cmpsl
clc
bound
popa
adc
adcl
aaa
dec
pop
paddsb
lock
jno
push
add
ljmp
mov
outsl
mov
jmp
cmc
xchg
jns
lret
enter
insl
fnstenv
cmp
lods
dec
mov
and
mov
nop
cmp
xchg
in
fucomp
mov
sub
imul
loope
lret
jg
clc
inc
je
push
rorb
int
icebp
aad
dec
push
es
cld
mov
fiadds
mov
je
jne
loopne
pop
orb
fisttpl
lahf
mov
push
fldt
mov
bound
outsl
sub
xor
fadds
pop
sub
and
iret
int
jae
cmp
out
shrl
shlb
repz
aam
and
adc
fwait
dec
imul
lret
add
lods
popa
mov
xorl
mov
push
xchg
xchg
fstl
and
xor
in
add
ret
xor
inc
push
mov
or
movsb
cmp
or
vmwrite
cmpsl
cmpb
dec
iret
add
cld
mov
pop
shlb
cltd
mov
pop
inc
push
dec
add
pop
sub
sbb
out
or
int3
scas
int3
stos
out
jecxz
cld
and
push
ret
fwait
mov
cmp
cltd
jae
out
faddp
ret
je
jne
enter
add
rclb
fucomp
lea
push
adc
xchg
cmp
pop
pushf
mov
jbe
sub
dec
lahf
cmp
pop
repz
aad
cmp
sbb
add
mov
ljmp
pop
in
inc
faddl
rol
xor
pop
lods
int
push
mov
mov
rolb
push
mov
imul
stc
shlb
aas
dec
and
and
repz
push
push
jo
mov
adc
and
mov
jp
and
or
mov
incl
lcall
insl
cmc
push
or
jge
in
inc
push
lahf
or
out
push
cmp
jp
push
hlt
lret
js
shlb
pop
mov
daa
xchg
dec
aad
in
mov
fldcw
and
mov
xlat
sbb
test
adc
divl
je
je
es
imul
mov
and
push
cmpsl
cmp
cmc
push
push
xor
ret
or
or
jg
add
nopl
ret
popf
arpl
push
and
inc
sti
jno
dec
sbb
cld
ljmp
cmp
push
lock
das
clc
stc
leave
mov
mov
shlb
outsb
pop
repnz
ss
sub
and
mull
push
into
fmull
mov
add
jp
movb
pcmpeqd
subb
dec
push
pop
mov
push
mov
outsl
lds
popl
pop
or
mov
or
inc
jg
inc
add
jnp
mov
xor
sub
fs
jmp
out
or
loopne
nop
out
push
loop
and
dec
loop
shlb
push
jae
loope
cmp
push
inc
filds
inc
les
icebp
cmpsb
sub
movl
insl
cmpsb
sbb
js
sub
and
subl
orb
leave
sbb
inc
cmp
or
mov
scas
or
int
mov
rcr
add
jno
mov
xchg
mov
xchg
dec
cmpsb
outsl
fnsave
dec
xchg
mov
test
or
mov
test
jbe
inc
aam
fldt
or
aam
mov
inc
cmpsl
xchg
adc
pop
and
xor
and
flds
dec
pop
cli
stc
pop
insl
inc
fisttpl
mov
imul
push
sahf
outsl
adc
push
js
mov
inc
lahf
mov
cmp
lahf
sbbb
or
mov
das
inc
inc
mov
inc
enter
dec
ret
push
mov
pop
inc
mov
fwait
push
jb
imul
in
push
inc
inc
push
lods
mov
int3
push
and
loop
loopne
pusha
es
popf
adc
xchg
mov
nop
and
rorl
std
fmull
in
int
xlat
push
xor
ss
sbb
popa
test
test
negb
lret
mov
mov
xchg
push
or
test
mov
inc
jae
aas
aaa
jne
xchg
mov
std
lds
loopne
jp
and
or
or
mov
jmp
inc
int
mov
nop
mov
dec
cld
sub
jmp
add
movsl
test
sub
cwtl
mov
adc
test
inc
bound
pop
stc
pxor
lret
shlb
loop
gs
mov
sub
inc
fs
scas
fdivs
mov
cmp
xlat
jle
mov
fwait
mov
dec
roll
ja
or
sub
push
hlt
neg
mov
ljmp
sub
cmc
lock
push
adc
and
sbb
pop
jecxz
and
mov
jg
lods
insl
inc
jnp
cmp
test
dec
dec
inc
inc
aas
popa
mov
and
cwtl
xor
fdivrs
movsb
sub
iret
outsl
js
sbb
ret
cmpsl
insb
push
loop
xor
and
adc
inc
enter
push
xchg
mov
mov
sub
out
cli
and
iret
fstl
outsl
xchg
pop
bound
in
insb
loopne
dec
pop
lds
cmp
in
repz
adc
inc
je
pop
mov
cmp
cwtl
dec
fdivs
scas
mov
xchg
pop
inc
je
dec
mov
ds
or
inc
add
add
jle
adc
add
es
jno
push
rorb
aaa
dec
call
loope
ds
mov
pop
in
pop
lods
jne
cmp
fistpll
into
fldcw
and
pop
pushf
aaa
mov
cmp
loop
inc
lea
xchg
xor
cmp
xchg
fs
js
loopne
fsub
outsl
adc
jge
addb
add
ds
das
sub
inc
or
adc
aaa
mov
insl
cmpsb
inc
insb
ficomps
jmp
jbe
in
cmpsb
inc
xor
sbb
dec
lret
dec
mov
jmp
mov
inc
je
inc
push
pop
ds
mov
mov
insl
iret
pop
clc
ljmp
add
xchg
loope
dec
xor
jge
cmp
mov
sbb
call
xchg
inc
fmuls
mov
pop
in
xchg
dec
xchg
inc
pusha
jne
mov
adc
mov
popf
fs
dec
mov
jb
clc
sbbb
decl
mov
arpl
sbb
ljmp
ret
sub
adc
pop
and
inc
lret
lret
push
in
push
movsb
aaa
mov
mov
mov
xchg
sub
sub
mov
lahf
fisttpll
sub
fnsave
xor
inc
xor
xchg
mov
js
lcall
xchg
mov
pusha
mov
movsl
imul
xor
fwait
mov
sbb
mov
xor
test
inc
imul
jl
and
insb
test
mov
mov
dec
loop
ret
adcl
inc
insl
mov
out
or
lret
out
iret
inc
sahf
loope
cmpb
mov
push
adcb
ret
push
mov
sahf
pop
mov
lods
xor
dec
xor
mov
xchg
dec
inc
aas
mov
movsl
xchg
dec
jl
sub
bound
int3
mov
jle
adc
and
outsb
je
scas
xchg
cmp
add
xchg
popf
inc
adc
inc
shl
in
mov
out
xchg
mov
xchg
and
ret
lods
push
repz
push
imul
xchg
pusha
xchg
push
ret
into
cs
adc
outsl
sub
inc
insl
xchg
aas
scas
add
mov
stc
adc
cs
aas
push
gs
xchg
cmp
test
scas
lods
ds
xor
shr
out
cmp
dec
push
inc
mov
xchg
cwtl
sub
icebp
loop
cmp
pop
enter
imul
nop
and
cwtl
aad
xor
test
xorl
or
push
or
sub
sub
jp
adc
int
adc
xchg
adc
sahf
push
push
add
pop
fistpl
inc
arpl
jge
pusha
pop
js
sub
and
xlat
mov
out
cmp
enter
xchg
idivl
add
outsl
clc
dec
lar
jmp
fisubrl
outsl
or
rorb
ret
mul
push
mov
punpckhbw
loope
std
mov
in
cmp
sbb
testl
and
jl
shrl
loope
loope
jge
es
mov
jg
in
and
ret
enter
xor
fnstsw
arpl
adc
jge
sub
addr16
jbe
jns
mov
jmp
push
frstor
call
gs
fmuls
push
jmp
xchg
rorb
in
xor
inc
mov
mov
repnz
outsb
inc
sub
lods
jns
vmread
dec
sub
adc
das
lods
dec
mov
das
jo
repnz
ljmpw
ret
jle
aaa
cmp
sbb
xchg
insb
mov
cmc
fdivrp
mov
andl
cli
rolb
lret
cs
clc
sbb
outsl
push
rolb
rcl
jo
add
or
sub
and
aas
js
or
pop
push
mov
fucomp
in
arpl
scas
dec
movsb
sub
dec
xrelease
lods
pop
out
fimull
or
enter
lret
push
lods
lea
aaa
sbb
dec
scas
mov
dec
sahf
inc
cwtl
jp
les
mov
inc
xchg
or
in
shll
divb
adc
bound
inc
xchg
and
sti
pop
sub
jp
add
call
stc
jmp
xchg
adc
and
adc
add
sub
xor
jp
mov
imul
mov
popf
add
or
push
testl
pop
popa
mov
xor
lock
xor
fcompl
dec
jo
push
jo
cmp
dec
mov
xchg
je
clc
adc
bound
sbb
mov
push
pop
leave
sbb
mov
push
sub
dec
sub
sub
rorb
cmpsl
jge
loopne
out
sbb
dec
pop
dec
xchg
stc
unpcklps
lret
outsl
test
fmull
sbb
xchg
aaa
leave
dec
insl
fstpl
shlb
stc
add
fcomps
push
cmpsb
stos
mov
pop
xor
push
ljmp
sub
jnp
ds
mov
int
lcall
mov
inc
arpl
jmp
jecxz
xchg
cltd
pop
xchg
inc
cltd
push
in
mov
in
stc
scas
add
fidivrl
pop
xchg
hlt
dec
sub
repnz
xchg
mov
add
in
out
aam
daa
push
loope
mov
pop
fiadds
daa
jecxz
dec
cmp
or
or
cmp
sbb
bound
or
cli
sbbb
add
mov
push
xlat
hlt
subl
ror
mov
faddl
sbb
je
jge
xchg
sub
dec
add
sub
dec
push
and
sbb
push
adc
out
mov
xchg
rolb
stc
add
xchg
xchg
inc
push
mov
cmp
dec
loopne
inc
push
in
repnz
jb
dec
mov
xlat
mov
outsb
xor
mov
sbb
lods
out
div
jb
aad
notb
jb
loopne
cld
das
xchg
aas
push
ret
cld
jecxz
test
xchg
andb
xchg
out
mov
cmp
in
sub
or
inc
out
pop
mov
ljmp
mov
lcall
jo
xor
pop
pop
mov
mov
orl
bound
push
jns
adc
jbe
ja
or
out
or
xchg
clc
adc
dec
lcall
adc
add
movsl
cmc
vcvtss2sd
jmp
shl
xchg
inc
negb
clc
in
add
sbb
das
loope
popa
shll
add
movsl
sbb
adc
xchg
mov
dec
xchg
xchg
insb
sar
mov
mov
pop
jp
pop
sahf
lods
inc
lock
sahf
ret
in
out
inc
rol
and
ljmp
shr
or
out
mov
scas
cmp
and
push
jge
out
adc
cmp
cmp
pop
pop
ret
adc
sbb
xchg
xchg
add
int3
xchg
mov
inc
push
mov
lahf
lret
dec
cmpsb
out
outsl
lods
or
xor
jnp
inc
mov
mov
insl
and
jg
popa
es
pusha
ss
in
cltd
push
lock
pop
test
pop
fldcw
add
jnp
add
or
es
insb
fisubl
xchg
das
loopne
cmp
sbb
imul
rorl
cmp
addr16
pop
jb
in
push
mov
mov
xchg
cmpsb
inc
mov
mov
mov
fadd
addb
jecxz
cmp
mov
xor
mov
add
fwait
subl
dec
mov
xor
pop
flds
or
jne
lock
mov
nop
push
adcl
sbb
push
into
leave
xchg
push
xor
dec
lret
mov
and
ja
loope
sbb
divb
mov
xchg
test
sbb
ss
mov
repz
das
imul
or
movsl
pop
repz
ljmp
pop
out
xchg
scas
add
popa
push
clc
push
lea
cld
cmpsb
popf
test
push
addr16
cmpsl
int3
fcmove
bound
xor
test
popf
mov
leave
jp
pop
pop
fs
push
mov
dec
mov
imul
fwait
data16
mov
mov
xchg
mov
cmp
xchg
push
and
dec
pop
inc
sbb
push
push
sbb
out
sbb
jne
push
push
icebp
in
out
push
imul
push
inc
or
loope
rclb
fsts
loope
loopne
xchg
mov
push
ret
cmp
popl
dec
lock
xlat
mov
sub
cmpsl
jno
jnp
pop
add
test
jno
cmp
ljmp
xor
mov
jmp
jne
xchg
adcl
mov
push
enter
aam
enter
xchg
xor
or
xlat
in
inc
dec
imul
shlb
scas
inc
scas
pop
push
dec
inc
fsubrs
or
jge
lock
dec
jnp
stos
dec
icebp
inc
in
jnp
push
and
push
xchg
fs
iret
lods
int3
mov
cmp
and
fistl
clc
xor
push
pop
dec
andl
fsubl
mov
addr16
nop
int3
and
cmp
jbe
xchg
fidivrs
xlat
jno
or
dec
push
jecxz
jecxz
outsl
pop
pop
jl
jnp
fnstenv
sbb
fstpl
out
push
in
ss
sbb
push
sub
ss
rcr
cwtl
in
leave
add
jge
or
scas
jns
adc
jne
test
out
dec
pop
push
ret
stos
adc
mov
push
add
mov
lret
lret
pushl
sahf
loope
add
mov
xor
mov
sbb
fistpll
hlt
lea
xchg
frstor
and
pop
push
imul
xchg
pop
fldcw
mov
out
ret
or
cmp
adc
push
cmp
jae
lds
push
ret
loop
add
shlb
sbb
mov
data16
sub
sarb
jge
xchg
add
test
lock
cmpsb
cld
or
adc
xor
orl
sbb
hlt
repnz
xor
pop
pop
mov
adc
popa
or
test
add
call
mov
fnstsw
movsb
lret
out
add
iret
inc
jnp
mov
pop
imul
imul
cmpsl
in
rcrl
mov
fcomps
lock
dec
xlat
add
idivb
push
inc
pusha
test
subl
mov
stc
pop
ficomps
jecxz
pop
rol
xlat
shrl
loope
lahf
cmp
popa
ret
in
into
or
arpl
adc
and
mov
add
or
lcall
outsl
rcr
rcll
outsl
pop
insl
jae
and
cmpsb
push
lods
adc
insb
or
cwtl
test
adc
mov
hlt
or
cmpsb
and
sub
fld1
push
sbb
insb
lahf
nop
dec
cwtl
rol
push
enter
mov
sub
xchg
movsb
fsub
rolb
mov
xchg
lahf
decl
imul
xor
push
xchg
call
gs
icebp
jg
dec
and
xchg
jb
dec
daa
inc
lds
xor
xor
xor
push
cmpl
stc
xchg
mov
lret
out
scas
test
call
adc
out
cld
lcall
adc
test
cld
pop
jle
push
subl
pop
inc
inc
add
push
je
pop
adc
jmp
push
xchg
jbe
xor
mov
sub
xchg
jae
jno
cwtl
test
movsl
xor
test
inc
xor
pop
inc
repnz
jno
dec
cmp
push
in
jns
loope
paddd
mov
add
aam
xchg
cmp
loope
mov
lret
loop
iret
aas
gs
std
mov
push
or
pop
or
mull
loop
jae
dec
xor
jmp
and
aam
mov
sbb
ljmp
dec
push
pushf
rolb
mov
aas
lds
int
jl
clc
dec
xor
cmpl
imul
mov
outsl
and
cld
or
jge
outsb
jle
int3
xchg
arpl
sbb
xchg
sbb
call
dec
lcall
fs
nop
dec
lahf
push
fisubs
test
imul
or
sbb
cmp
pop
or
and
negl
mov
jmp
and
scas
push
cmp
mov
imul
pop
outsb
mov
push
cmp
mov
leave
xchg
negl
sub
or
push
inc
dec
fstps
push
aad
push
fisubl
inc
in
push
imul
lret
dec
dec
or
mov
push
mov
push
out
or
jle
mov
xchg
mov
aaa
jp
pop
xchg
mov
cmp
test
test
sub
shll
push
std
xchg
clc
or
pop
pop
mov
mov
shrb
lret
stc
bnd
ja
outsb
sahf
mov
aas
mov
jle
sub
xor
xchg
inc
dec
fistps
jns
xor
into
xchg
xchg
mov
mov
sub
fs
lahf
dec
inc
and
ljmp
rol
cmc
mov
add
cli
sahf
mov
std
in
vmwrite
insl
push
adc
adc
hlt
xchg
ficomps
xchg
sub
push
lods
xchg
sahf
ja
je
sbb
add
mov
std
in
add
mov
sbbb
pop
movsb
adc
xchg
adc
pop
addr16
nop
or
cmpb
minps
add
cmp
inc
enter
inc
mov
pop
push
shll
cli
dec
icebp
stos
pop
push
aas
daa
jns
jo
stos
fmuls
shll
sahf
icebp
jne
outsb
shrl
aas
jmp
les
dec
and
sti
add
loop
into
andb
pop
push
adc
or
or
mov
ret
idivl
mov
sahf
hlt
lock
inc
fwait
xor
int
enter
inc
pusha
fcomps
hlt
and
fnsave
sub
adc
xor
pop
pop
xor
mov
add
aad
imul
test
dec
mov
test
and
stos
sbb
stos
scas
mov
xchg
push
roll
inc
xor
cmp
test
dec
sbbl
jne,pn
push
cmpsb
aas
repnz
jge
cwtl
sti
negl
xor
add
in
xor
jnp
mov
mov
xor
insb
int
sbb
dec
popa
loope
xor
fildl
jge
call
jne
xchg
lret
cltd
gs
add
arpl
mov
mov
int3
repnz
lahf
jle
imul
mov
jno
pop
pop
cli
lea
jne
mov
add
push
in
clc
cld
xor
pop
stos
loopne
add
mov
loop
sub
sbb
and
sbb
pextrw
popf
pop
pop
in
cmpsb
aaa
loopne
imul
dec
xor
out
ficoms
je
xor
xor
mov
xlat
or
fistpl
sahf
and
imul
dec
rorl
inc
jbe
jae
out
add
pop
jae
adc
mov
sub
xor
jb
cld
jmp
shl
sbb
stos
adc
ljmp
mov
adc
push
test
adc
outsb
cmp
jnp
pop
fnsave
fstpl
cltd
fiaddl
movsb
lcall
pop
jae
mov
adc
bound
fsubrs
cmp
rcll
and
inc
ss
push
cmpsb
or
mov
out
jmp
in
sbb
mov
inc
push
aas
jle
icebp
enter
jmp
pop
leave
daa
in
es
xchg
xor
rcl
jg
and
clc
bound
or
test
dec
xchg
outsb
sqrtps
mov
fs
fisttpll
mov
ljmp
imul
or
test
sub
push
xorl
bound
loop
and
aaa
adc
rcrl
and
cmc
ljmp
nop
and
in
sbb
js
cmp
shll
xor
fistpl
jb
mov
and
xor
pandn
or
mov
and
pop
in
xchg
aad
lcall
rcl
sbb
ja
dec
and
out
nop
inc
out
push
lahf
sbb
sbb
imul
xor
mov
sbb
cmp
dec
out
cmp
push
sahf
mov
mov
lcall
jg
mov
fsubr
mov
mov
repz
shlb
cmp
sub
loop
repz
rcrl
icebp
sarb
mov
xchg
in
cwtl
add
fildl
push
clc
push
ret
lods
clc
push
cwtl
dec
dec
push
leave
inc
ja
aas
sub
jbe
jne
xor
dec
int3
xchg
pop
lock
pushaw
pop
stc
xchg
inc
dec
pushf
cli
sbb
imull
and
aaa
int3
imul
stos
arpl
mov
mov
das
imul
add
or
test
xchg
pop
inc
fadds
mov
cmpsb
inc
int3
dec
mov
inc
jnp
inc
stos
sub
mov
dec
lret
inc
sbb
sub
inc
sbb
dec
push
out
or
stos
movsb
lea
push
push
gs
into
xor
pop
xor
add
mov
in
loop
xor
adc
mov
xor
mov
inc
outsl
mov
cmp
shl
sub
mov
cmp
pop
adc
inc
mov
dec
push
ret
in
add
cmp
bound
mov
or
cmpsb
mov
xchg
inc
jo
movhps
jl
mov
sarb
sbb
mov
and
aaa
out
dec
mov
mov
adc
mov
and
cwtl
inc
dec
inc
data16
xlat
mov
cs
sub
inc
add
jae
cmp
add
push
arpl
repnz
cmpsb
movsl
adc
xchg
repnz
out
push
inc
sbb
push
inc
fs
sti
divl
or
jo
cld
xor
cltd
dec
in
mov
mov
ret
stc
leave
in
call
mov
bound
popf
mov
inc
push
xor
das
int
inc
xchg
aas
test
popf
sbb
xlat
inc
push
fsubl
or
fnstcw
lcall
sub
push
decl
pop
jbe
andl
aas
sbb
gs
int3
xchg
pop
push
lcall
addl
cmp
sarl
gs
lea
jne
dec
mov
out
xchg
xchg
jge
push
mov
mov
add
dec
fwait
adc
pop
aaa
adc
shrl
mov
loopne
push
adc
push
bswap
sub
in
mov
stos
xchg
sbb
sub
out
aad
mov
sbb
cli
sub
sub
std
or
test
loopne
inc
les
gs
cmc
hlt
movsb
sti
push
mov
enter
pop
xor
push
insb
mov
inc
add
shrl
xor
test
mov
mov
add
xor
xor
jo
lret
adc
push
lods
loop
jl
js
cmp
mov
push
test
inc
cwtl
xor
loop
jecxz
mov
push
mov
leave
xchg
xchg
xor
cli
push
push
jle
sbb
jl
xchg
jmp
flds
jae
sar
xchg
mov
stc
aas
xchg
xor
cld
cwtl
lea
mov
pop
das
add
lods
fists
mov
xchg
xor
imul
cmpsb
rclb
rcll
sti
mov
ss
insl
or
iret
pop
and
call
sti
jo
sub
ret
mov
mov
xor
rolb
xor
or
inc
out
dec
aaa
sbb
cmp
dec
imul
fdivrs
push
xchg
cmp
movl
outsl
push
int
inc
xorl
loop
push
aad
dec
sti
sbb
int3
repnz
jno
mov
shll
or
sbb
and
les
pop
xor
les
rcll
push
daa
mov
add
repz
jecxz
and
test
aaa
mov
xor
cmc
xchg
mov
fbstp
add
pop
fiaddl
mov
inc
or
stc
pop
mov
add
mov
bound
push
bound
enter
mov
shlb
xchg
jno
sti
ds
xchg
fwait
rol
adc
add
mov
mov
pop
cmp
call
mov
repnz
pop
mov
imul
sub
cli
cld
push
shrb
adc
mov
push
repz
mov
cld
push
nop
fcoms
in
push
jg
int3
lea
lret
push
sarb
cmp
call
sub
loope
stos
pop
pusha
jmp
add
dec
sub
movsl
mov
outsb
out
jno
sbb
mov
addl
push
das
add
cmp
nop
cmp
xor
jbe
pop
xor
add
into
ss
pushf
pop
dec
leave
lcall
scas
or
xchg
xor
pop
aas
xorb
add
adc
dec
jle
fnstcw
sarl
cmpsl
test
out
mov
out
mov
mov
repz
add
jno
mov
mov
test
sub
cld
flds
jmp
cmpsb
int
or
jmp
rorl
wbinvd
add
push
scas
mov
int
test
nop
ret
mov
cs
mov
fnstsw
fmuls
in
mov
rcll
or
insb
jnp
cmp
sbb
insb
sub
cmp
sub
sbb
mov
mov
mov
push
adc
shrb
sub
movlps
clc
out
repnz
or
xor
in
aaa
data16
and
out
dec
decl
adc
mov
push
fwait
popa
mov
jo
cmp
jmp
jnp
pop
mov
repz
out
shrl
insb
mov
es
xor
jae
iret
sahf
xacquire
cltd
mov
cmp
lods
sub
movsb
sub
adc
or
push
push
jl
sub
js
out
cmp
sbb
mov
dec
jmp
rcrl
insl
xor
mov
shll
sbb
or
cltd
clc
sbb
pop
mov
divl
xchg
test
lretw
outsb
js
and
stos
xor
inc
mov
sub
les
jb
pushf
inc
mov
xchg
fildll
mov
inc
sbb
fstpt
add
adc
dec
fmuls
rol
sbb
adc
jns
cmpsb
mov
in
inc
xchg
popf
sub
inc
cmp
pop
sahf
xor
scas
dec
xor
xchg
rorl
mov
mov
adc
cs
cli
lock
sti
call
mov
loop
dec
push
fprem
je
imul
dec
in
outsl
or
int3
rclb
add
or
add
lret
aas
lock
int3
jecxz
pop
mov
repnz
rcll
push
inc
pushf
jnp
sbb
lcall
sub
out
in
jmp
popf
ljmp
adc
add
mov
inc
push
and
xchg
sahf
push
aaa
dec
in
mov
in
mov
sbb
hlt
mov
jb
inc
adc
pop
add
into
or
jnp
bound
add
mov
cmc
outsb
shl
xchg
ret
pop
clc
cmp
pop
std
sahf
cmp
sbb
fbstp
adc
push
xchg
roll
xchg
addr16
outsb
rol
jnp
iret
cmp
jge
xchg
loope
sub
adc
inc
outsb
inc
dec
dec
ret
sbb
mov
int
test
mov
mov
pop
test
mov
xchg
adc
cmc
xchg
cmp
xor
sti
hlt
jp
xor
hlt
jae
or
mov
or
pushf
xchg
push
call
stos
xchg
jne
lret
xchg
ljmp
push
aad
cmp
ja
popa
mov
mov
iret
push
sub
inc
xchg
adc
xor
adc
and
les
jmp
enter
sbb
lahf
cmp
pop
xchg
fistpl
dec
cld
movl
xor
mov
fmul
shr
ja
xor
test
ljmp
mov
inc
mov
dec
dec
xlat
mov
ja
jmp
mov
sti
jge
sbb
cmp
jnp
mov
push
call
std
std
inc
xchg
add
pusha
mov
punpcklwd
mov
shlb
fcoml
and
es
dec
cmc
hlt
adc
pop
push
mov
fdivr
push
mov
sbb
cmp
lcall
mov
leave
cli
shl
leave
cmp
pushf
testb
sub
cld
loop
cmp
pop
pop
test
mov
fcmove
daa
lock
std
rcll
mov
and
jmp
adc
sub
sti
ss
push
push
add
mov
adc
dec
or
lods
cmp
test
test
mov
dec
push
in
cmp
loope
pushf
aaa
repnz
shrb
bound
mov
pop
jnp
cmpsb
enter
dec
dec
and
andl
inc
pop
iret
and
addl
mov
jb
lods
inc
mov
ror
inc
pop
pop
pop
adc
xchg
push
adcl
in
sbb
test
fmul
cmp
inc
imul
in
in
xchg
adc
repnz
daa
add
xchg
sub
inc
ret
int3
dec
mov
xor
xrelease
lret
or
add
sahf
cmp
push
inc
dec
xchg
in
xchg
mov
js
repz
mov
and
sbb
nopl
jae
addl
sub
inc
inc
outsl
cmp
xchg
ds
je
hlt
inc
pop
into
cmp
xchg
inc
sahf
popa
mov
inc
mov
lods
xlat
aad
out
aam
mov
xchg
fwait
clc
push
test
cmp
adc
hlt
sub
cmpl
mov
dec
fwait
outsl
adc
jns
push
and
inc
xor
sub
xchg
mov
cs
lea
pushf
xor
imul
dec
orl
in
jge
lods
stos
pop
sti
lcall
add
nop
arpl
in
loopne
mov
vcvtps2dq
mov
out
push
mov
out
test
leave
lcall
xor
cltd
cmp
out
jge
dec
mov
xor
pop
mov
ffree
jo
fldenv
xor
cmp
cli
cwtl
roll
mov
mov
push
add
fwait
cmp
cli
push
mov
or
lahf
jo
xchg
mov
sub
sub
pop
movsl
div
sbb
mov
xor
or
scas
mov
test
xor
test
mov
cmp
data16
mov
push
fs
shll
xchg
leave
cmc
and
sub
mov
jb
rolb
arpl
adc
scas
jnp
aas
sub
push
mov
jle
sbbb
adc
jg
add
movsl
test
scas
jne
fs
mul
mov
jmp
mov
ja
je
pop
sbb
adc
std
adcl
xor
xor
mov
inc
ss
xchg
push
inc
and
add
sbb
jmp
adc
push
stos
int
or
adc
cmp
lahf
enter
cmp
cld
push
fdivrl
xor
push
cmpb
and
inc
out
push
cmp
lcall
mov
dec
jb
loop
mov
sbb
rorb
and
pop
push
adc
mov
jno
push
imul
scas
popf
movsb
cli
notb
divl
inc
lahf
mov
or
cld
push
aas
das
clc
adc
shlb
jae
inc
lods
imul
jmp
add
loopne
lods
fdivrp
stc
push
js
clc
lcall
out
scas
mov
adc
mov
imul
or
mov
cmpsl
or
inc
divl
lea
mov
ss
dec
dec
popa
push
arpl
test
sub
pop
jmp
mov
jcxz
or
mov
jmp
mov
faddl
cmp
or
scas
xchg
fwait
jne
cli
dec
mov
shrl
fsubrl
and
xchg
scas
dec
lock
insb
xor
flds
add
pop
js
movsb
mov
pop
mov
jns
or
sub
jne
xchg
push
or
lods
int
movsb
stc
sbb
add
out
dec
push
out
push
lret
pop
sbbl
pop
jmp
fdivrl
dec
ret
bound
inc
xchg
movsl
popf
aad
fs
sbb
mov
fs
mov
pop
mov
and
lret
xchg
lret
mov
mov
xor
rol
scas
cmp
movb
push
sti
mov
out
imul
shlb
xchg
inc
sub
add
jp
add
xor
adc
mov
loop
sbb
je
cmc
dec
sub
jmp
js
cltd
push
pop
adc
jmp
leave
xlat
data16
shrb
dec
xor
push
pop
and
inc
ret
loop
sbb
pusha
outsl
jb
dec
js
sub
dec
cld
sub
sbb
sti
jno
push
loopne
add
iret
or
pop
stos
sbb
cwtl
loop
ss
mov
cwtl
jle
push
ret
cmp
cmp
sub
add
ret
lock
loope
push
or
aaa
sub
pop
das
in
loopne,pt
movsl
sbb
xchg
sub
or
and
push
pop
cs
popa
or
mov
xor
sub
inc
mov
push
ja
scas
pop
inc
or
pop
fidivrl
shll
mov
dec
repz
xchg
pusha
pop
test
cmovae
mov
mov
or
in
bound
inc
or
cmp
lea
dec
lods
test
in
leave
push
xchg
aaa
lock
divl
aad
mov
add
mov
fs
push
cltd
pusha
lret
pop
movsb
out
xchg
dec
aas
iret
sub
jns
mov
push
scas
mov
push
jae
insb
inc
xor
imul
dec
sbb
loope
push
jae
cmp
mov
cmp
pop
sub
sbb
jge
xor
push
roll
inc
sbb
mov
xchg
imul
stc
sub
mov
mov
sbb
lock
mov
inc
jecxz
push
lds
fadd
pop
int
push
sbb
push
fmull
inc
xlat
jp
push
mov
mov
pop
out
xor
ds
xlat
nop
fdivs
popa
mov
in
mov
jecxz
pushf
mov
hlt
xchg
inc
push
stos
fwait
mov
mov
sub
sarb
jae
fs
mov
sbb
ds
jno
xor
ljmp
push
pushf
cli
popf
xor
test
fwait
in
sbb
arpl
adc
decl
dec
adc
in
push
movsl
outsl
inc
inc
imul
movsl
pop
sub
jle
xchg
fnsave
xor
outsb
ss
xor
push
mov
or
repnz
cmp
les
movsb
inc
pusha
dec
sub
cwtl
xor
dec
aaa
xchg
or
nop
fdivrs
imul
sub
xchg
mov
or
mov
mov
adc
jnp
lcall
arpl
sahf
shlb
mov
fldl
lds
mov
cmp
inc
test
mov
ret
mov
mov
jp
inc
jb
lret
add
lcall
add
xchg
sahf
pop
sub
ja
mov
aad
in
push
mov
sub
sbb
outsl
movb
cmp
cmc
push
xchg
pop
inc
mov
jle
pop
sub
sahf
cwtl
sahf
cmp
fwait
lret
push
xchg
mov
push
gs
and
mov
cltd
hlt
pop
cmpsl
movsl
jnp
xchg
mov
fidivrs
dec
pop
sbb
dec
add
push
xchg
adc
xchg
push
test
test
fdivrs
mov
in
ss
subl
imul
js
dec
push
pop
or
es
jp
or
push
aaa
stc
adc
dec
sti
pop
out
sqrtps
push
pop
orl
ss
lock
pop
push
xor
jg
mov
pop
add
mov
xorl
iret
pop
inc
push
mov
cmp
popw
out
iret
aas
and
mov
fdivs
popf
and
ja
push
add
mov
mov
mov
into
mov
jo
or
fcomps
mov
jle
roll
dec
sub
cmp
mov
fadds
mov
jmp
fbstp
mov
and
bound
popa
mov
dec
cli
iret
and
jle
cltd
ds
xorl
mov
or
xor
fadd
icebp
dec
or
shrl
stos
sbb
lods
push
lods
jl
xchg
sbb
or
imul
mov
out
out
imul
jno
mov
xchg
or
fwait
insl
or
push
loope
scas
adc
loop
fimull
andl
jae
dec
andl
mov
cwtl
pusha
addr16
mov
cmp
in
xchg
bswap
aad
add
mov
xchg
fs
test
dec
push
mov
ljmp
push
stos
dec
gs
pop
mov
jmp
add
or
sub
dec
pushf
mov
adc
bound
xor
lret
cmp
icebp
xchg
mov
and
ret
mov
iret
iret
mov
jne
xlat
mov
shrl
loopne
xchg
mov
and
mov
into
cld
or
push
sbb
cmpsb
sarb
lock
cmp
dec
lcall
out
pop
out
pop
xor
dec
popa
pusha
and
or
add
stc
addr16
stos
inc
cmp
cmp
fdivl
sbb
stc
adc
shrl
and
mov
enter
or
mov
push
jne
jl
ljmp
in
imul
sub
jnp
sub
cli
cmp
jge
dec
jl
stc
inc
sbb
push
dec
mov
or
clc
das
inc
test
jecxz
dec
mov
movsl
sbb
daa
insb
aad
or
mov
adc
xchg
jae
aaa
scas
adc
bswap
xor
out
sbb
jecxz
movsl
dec
jecxz
mov
or
insl
pop
test
loop
pop
std
daa
lcall
and
loopne
lock
or
dec
scas
cltd
call
insl
shr
pop
and
sbb
out
shll
in
pop
xor
pop
lds
hlt
fld
inc
pop
fisttpl
push
pusha
rorl
add
aam
cli
out
pop
dec
xchg
sbb
mov
loop
pop
je
insb
pop
cltd
dec
adc
pop
aaa
sub
inc
imul
inc
mov
shl
or
pop
push
adc
imul
cwtl
mov
data16
sub
fsubr
and
hlt
pusha
aas
outsl
ficoms
inc
or
pop
shlb
out
fcomi
scas
jmp
jecxz
out
insl
dec
aas
xor
xchg
fcoms
lahf
rol
ljmp
or
cs
add
lahf
dec
adc
mov
push
adc
gs
aam
xlat
push
jge
mov
shll
test
xor
dec
leave
insb
push
xchg
fisttps
aam
add
movsl
les
out
push
pop
shrb
stos
sbb
pop
cmp
adc
cmp
test
xchg
rclb
or
xchg
sub
xchg
add
je
add
inc
lret
loope
and
or
adc
jo
cmpsl
cmp
call
mov
sbb
cmp
cmpb
sub
jnp
add
sbb
fs
inc
sbb
and
aas
dec
mov
pusha
xchg
push
xchg
cmp
xrelease
push
sub
jb
aad
call
mov
stos
mov
jl
adc
xlat
fcoml
jge
mov
lcall
pushl
mov
mov
push
nop
fcomps
pusha
icebp
arpl
std
inc
lods
cmc
add
inc
stos
jnp
loope
xor
cltd
xor
mov
mov
ficomps
mov
ja
mov
jns
mov
sar
pusha
sbb
mov
inc
movsl
mov
cltd
js
xchg
and
aam
fnstenv
ret
movsl
dec
enter
lea
cli
ficoml
inc
pop
inc
lret
dec
fcompl
scas
mov
insl
pop
xor
xor
popf
inc
lock
std
dec
add
xor
pop
out
mov
add
pop
mov
outsl
or
test
icebp
cmp
xor
insb
rol
jl
fstpt
out
dec
sbb
adc
or
sub
push
sub
sub
mulb
bound
shll
push
inc
jecxz
mov
js
pop
mov
xchg
pop
add
int
sub
arpl
sti
jge
xor
sbb
mov
dec
jae
scas
jno,pn
and
test
dec
inc
inc
xchg
insl
adc
sub
xchg
in
pop
mov
cli
xor
ret
adc
loopne
gs
cltd
mov
mov
push
les
pushf
jle
sahf
sub
sbb
movq
in
popf
int
sarb
push
orb
dec
push
jmp
cwtl
hlt
jne
mov
cs
test
jmp
pop
xor
inc
out
loope
cmp
add
sbb
shl
pop
pop
ret
aaa
dec
lea
fbld
inc
cli
fcmovnbe
xor
mov
mov
fs
mov
pop
mov
cmp
cmpsl
dec
jmp
inc
out
or
popa
sub
lds
mov
dec
hlt
loopne
rcl
shll
test
test
inc
jb
fimull
xchg
add
xorl
jl
jno
scas
lods
add
push
out
pushf
mov
sub
mov
std
aam
adc
push
out
inc
inc
jno
cmp
mov
xor
jle
mov
pop
lcall
nop
push
jmp
lret
mov
xchg
push
stos
dec
popf
sub
mov
adc
cwtl
cmpsb
cmp
push
clc
lcall
lret
or
jmp
out
mov
out
xchg
dec
rcrb
out
in
or
outsl
mov
mov
fistpll
lods
cmpsb
sbb
scas
mov
pop
ss
push
neg
inc
int3
mov
pop
jae
mov
inc
testl
ret
mov
out
inc
add
data16
pop
je
cwtl
shlb
jmp
lret
cmc
mov
repnz
insl
pop
fstpl
outsb
ja
push
pusha
fmulp
int3
push
aam
cmpsl
or
jg
dec
lret
popa
scas
mov
divl
fildl
lods
inc
nop
enter
dec
fnstsw
mov
loope
mov
jne
add
sqrtps
out
xchg
nop
loop
inc
mov
jmp
lea
mov
cmp
ffree
lret
xchg
mov
fistps
lahf
cmp
or
inc
test
nop
or
inc
andb
sbb
loopne
jnp
sbb
xchg
inc
and
sub
cli
hlt
popa
divl
sub
cmp
repz
xor
mov
fwait
in
mov
cmp
xchg
mov
pop
icebp
add
stc
xchg
pop
xor
out
loop
jge
jmp
mov
and
js
mov
iret
loop
insl
push
jle
mov
enter
add
fbstp
mov
mov
and
les
pop
jmp
enter
loop
adc
add
jno
mov
insb
lcall
jns
in
or
xor
mov
les
push
rclb
xchg
fbstp
jo
pop
in
cwtl
xchg
bound
push
cmp
jns
rclb
es
adc
stc
lret
adc
and
arpl
push
mov
fwait
out
jo
ret
cmp
cwtd
pop
pusha
xlat
adc
and
cmp
mov
fs
sbb
out
pop
cmp
mov
das
sub
das
jns
ja
nop
xchg
lds
add
sbb
mov
pop
adc
xor
jae
push
mov
mov
cmp
aam
ja
les
cld
rcrb
cltd
in
push
push
push
popa
xchg
scas
and
lret
popa
aam
pop
xchg
xchg
rclb
dec
iret
mov
insb
repz
shl
mov
mov
jns
mov
mov
mov
sbb
ljmp
add
fs
xchg
aas
push
pop
rcl
loop
cli
bnd
mov
inc
dec
sbb
adc
shl
ret
leave
loopne
xor
lds
xor
insl
in
cmp
push
mov
sbb
fstps
fs
push
pop
cmp
lret
jb
xchg
pop
stos
dec
adc
push
ljmp
push
popa
imul
jb
jb
icebp
xchg
xor
push
lret
lcall
rcl
pusha
xor
les
mov
xchg
pop
lds
fwait
and
mov
jge
or
jp
xor
cmp
hlt
hlt
cmp
std
pop
inc
arpl
and
xchg
cli
je
stos
aam
jge
xchg
fistpl
lahf
add
loopne
sub
inc
adc
xchg
xor
pop
idiv
outsb
cwtl
enter
addr16
fnstcw
lahf
ljmp
sub
arpl
sub
and
movl
mov
jb
sub
cmp
ljmp
cli
mov
xchg
std
icebp
mov
or
cmp
mov
repnz
mov
shll
loop
mov
mov
popf
xchg
adc
xchg
sbb
cmpsb
add
frstpm(287
and
xchg
and
push
add
sti
andl
or
or
int3
js
mov
rolb
and
adc
test
insb
mov
and
imul
js
fsubs
dec
fistpl
ret
sbb
or
sbb
mov
ret
ficoml
push
cli
fwait
jne
stos
xor
out
xor
fcmovnu
xchg
test
fmull
pop
les
mov
sbb
or
jb
insb
ret
imul
adcb
cs
into
arpl
push
leave
inc
mov
cwtl
js
cmp
pushf
sbb
cmpb
jo
xlat
and
mov
jae
fsts
lods
sbb
mov
pop
mov
fdiv
and
shl
inc
call
fildl
loop
es
div
addr16
les
inc
mov
in
jl
push
xchg
mov
pop
insb
insl
cmpsb
hlt
or
or
xchg
dec
cli
callw
xor
xchg
jb
dec
movsl
pop
pop
push
fsubl
cmp
mov
in
repnz
cmp
aam
jns
fsub
add
mov
arpl
adc
int
movl
out
std
gs
fs
xchg
xor
push
inc
jp
aas
test
push
adc
xlat
fbld
pop
xchg
inc
cmp
stos
jo
loope
inc
and
aaa
enter
jne
mov
pop
or
mov
les
push
sub
mov
sub
xchg
xchg
popf
aaa
sub
adc
sub
cmpsb
popa
or
ficomps
andl
add
dec
and
or
test
push
sbb
push
mov
or
lahf
mov
add
ret
jle
movsl
jne
sub
mov
xchg
fisttps
xor
inc
jg
add
loope
pop
adc
les
push
imul
shlb
sub
out
dec
xchg
leave
xor
in
push
cmp
jb
dec
cmp
cmp
lcall
int
lahf
les
xor
lret
cmpsl
fidivl
movsb
add
fstps
sbbb
pop
ja
icebp
imul
pop
inc
mov
into
testb
ror
out
fucomp
test
imul
xchg
mov
mov
push
adc
les
xchg
mov
call
aam
adc
xlat
std
or
pop
pop
push
pop
mov
jno
mov
mov
mov
outsb
cmp
pop
outsl
jl
xor
mov
and
pop
repz
pop
xchg
dec
es
sbb
clc
jge
jecxz
lods
es
stc
mov
xchg
sar
xor
pop
dec
adc
test
mov
call
cltd
sub
pop
je
inc
add
hlt
sbb
test
lods
in
mov
and
jae
aad
in
mov
lahf
mov
push
cmp
arpl
cltd
call
lret
imul
stos
adc
or
lret
push
lock
shlb
repnz
popf
cmpsb
sub
les
loope
cmp
ret
jo
enter
int3
cmc
adc
jg
xchg
sti
cmc
sti
loopne
push
std
cmpsl
mov
movsb
xor
adc
test
jns
fisttps
adc
test
aam
mov
adc
adc
sti
adc
dec
or
xor
inc
rcll
inc
ror
stc
jae
ja
in
jo
inc
outsl
div
adc
lea
paddq
sti
adc
rcl
outsb
cmpsl
adc
stos
xchg
out
or
xchg
enter
std
into
adc
mov
xor
cli
inc
push
jo
popa
scas
mov
inc
and
addr16
mov
cmp
ret
xchg
jbe
insb
imulb
sahf
push
fwait
movsl
aam
fistpl
fsub
sub
cs
imulb
push
outsb
fimuls
xor
sti
sbb
xchg
mov
xor
inc
lret
lods
lea
in
pusha
jne
xchg
iret
mov
popf
das
inc
and
jnp
jbe
dec
decb
mov
out
gs
dec
mov
enter
aam
dec
sahf
cmp
hlt
mov
bound
loop
jg
xor
std
test
cmp
mov
sbb
mov
dec
cmp
xchg
push
orb
xchg
lcall
inc
sub
lods
clc
iret
imul
sbb
daa
or
std
out
mov
repnz
lds
jbe
or
jecxz
dec
pop
push
cmp
sbb
mov
aaa
ret
es
jnp
pop
cmp
lsl
add
out
add
add
add
xor
shll
les
mov
ret
into
mov
adc
mov
sub
cmpb
dec
fsubl
mov
int3
stos
mov
sub
ffree
xchg
arpl
in
sub
jmp
loopne
mov
sar
mov
jnp
das
hlt
out
std
repz
mov
add
push
lods
mov
xchg
cs
pop
jo
repz
inc
adc
in
rorb
les
xchg
out
ret
aad
xor
fs
add
inc
inc
stos
xor
std
ret
xchg
outsl
or
dec
xor
sub
repnz
cs
push
xor
or
sti
inc
test
add
sbb
mov
mov
xchg
xchg
icebp
mov
les
jbe
pop
dec
push
jg
jmp
sub
inc
pop
push
pop
xor
sub
cmpsl
cmpsl
push
imul
in
sbb
jp
adc
jo
lds
leave
inc
cmp
push
mov
and
sbb
mov
pop
insb
sub
sbb
sub
loope
int3
mov
mov
pop
xchg
fs
mov
mov
std
inc
imul
scas
mov
xchg
add
leave
jbe
hlt
cmpsl
test
in
ja
in
push
xchg
fldcw
addr16
adc
aam
es
pop
std
outsb
push
jmp
sar
pop
xchg
idivl
shll
adc
or
in
xchg
sbb
ficomps
popa
sbb
xor
nop
mov
cli
insb
cld
cmp
mov
sub
push
and
ss
in
add
mov
iret
dec
pop
inc
cmc
mov
lods
scas
out
xchg
inc
pop
addr16
push
test
xor
addb
pop
into
pop
inc
adc
sbb
push
add
movsl
jecxz
push
jecxz
cmp
mov
push
jecxz
pop
mov
out
xchg
aad
jbe
sub
xorb
mov
loopne
inc
hlt
mov
mov
test
fwait
or
jne
idiv
sbb
mov
rcll
mov
mov
sbb
int
test
sbb
or
jo
mov
dec
int3
add
sbb
js
sbb
sahf
jmp
les
inc
loop
mov
pusha
leave
mov
imul
inc
mov
fprem1
fmuls
mov
xchg
stos
mov
inc
sub
and
ret
jns
pushf
std
rorb
mov
test
mov
push
mov
scas
insb
mov
scas
inc
dec
faddl
xchg
popf
lret
rorb
cmp
adc
test
nop
push
jmp
sarb
mov
in
adc
push
ret
dec
fsubs
cltd
gs
lock
lret
cmp
xor
scas
ret
mov
and
jmp
mov
jns
and
rorl
dec
fldl2e
stos
sbb
addr16
jmp
pop
repnz
adc
xor
fs
ret
sbb
pusha
inc
or
scas
xchg
xchg
jp
jb
dec
pushf
cmpsb
and
jne
cs
hlt
jl
pop
in
pusha
sbb
xor
sbb
stc
or
lock
imull
fisubl
xlat
hlt
xchg
cmp
out
pop
add
sbb
cmp
mov
mov
ds
into
xor
add
clc
mov
shlb
cmp
cltd
add
lret
in
rcll
or
pop
or
pop
pop
and
mov
ret
mov
mov
shrb
repnz
xchg
and
or
dec
out
jle
mov
sahf
xlat
lcall
lea
aad
das
fiadds
lret
xlat
lret
push
outsb
jns
cmp
inc
cmp
and
popf
push
push
xor
into
xchg
mov
roll
cmpb
scas
test
mov
xor
movl
popa
stos
outsb
xchg
mov
nop
xchg
fwait
or
jae
jle
xchg
jecxz
lock
push
jle
hlt
push
enter
inc
cmp
test
aas
jns
movsb
lock
fdivl
xchg
cmpsl
mov
mov
cmp
jp
dec
jo
loopne
cwtl
shlb
add
xor
push
insb
add
mov
mov
jbe
iret
mov
shr
stos
push
mov
icebp
insb
jbe
cs
add
loopne
in
xorl
push
call
push
lods
and
popa
fcompl
stos
in
outsb
inc
xchg
xchg
sbb
mov
xor
mov
cmpsb
ud1
scas
pop
cmpsl
aas
ljmp
es
lock
mov
lcall
arpl
outsb
xchg
and
mov
pop
or
dec
out
sbb
aas
cli
ss
sbb
lahf
xchg
dec
insb
mov
popa
shr
mov
sub
in
jecxz
sub
or
mov
pop
lea
fwait
movsb
fldcw
add
test
out
lds
inc
pushf
mov
jle
imul
xor
lea
int
das
movsl
push
repz
xor
and
dec
outsb
push
sub
jo
outsb
xchg
sub
lods
jno
xchg
sbb
dec
adc
gs
or
mov
xor
dec
push
jnp
add
dec
xor
iret
out
std
pop
pop
cmp
aad
add
push
popa
xchg
movsb
dec
jecxz
push
cmp
and
adc
jl
jecxz
cs
mov
pop
dec
ret
cs
mov
sub
or
mov
divl
outsl
inc
pop
inc
mov
inc
cmp
xchg
test
inc
imul
aad
dec
sub
sti
in
mov
ljmp
aaa
shlb
in
js
or
addb
out
fwait
std
jmp
xchg
jns
sbb
test
repz
insb
jg
imul
iret
je
stos
sub
test
fdivl
sbb
nop
int3
jno
xor
loope
shrb
jns
mov
dec
sahf
repz
arpl
and
movsl
push
dec
imul
cmpb
testl
out
pop
fwait
jge
sbb
and
sbb
gs
cmp
pop
xor
push
dec
push
mov
push
xorb
bnd
cmp
push
inc
rol
out
xor
dec
pop
jne
pop
mov
popf
loop
inc
aam
in
clc
add
pop
mov
mov
scas
adc
or
negl
stos
and
jle
and
es
mov
dec
stc
cmp
cmp
mov
cmpsl
imul
or
ljmp
test
xchg
insb
and
xor
and
rclb
out
jecxz
aad
mov
push
cmp
gs
icebp
sahf
in
je
push
aad
xor
dec
mov
and
std
arpl
daa
lock
inc
lret
xlat
negl
pop
test
push
push
movsl
pop
mov
xchg
push
sti
mov
ja
cmp
xor
cs
add
lods
fidivrs
rorb
dec
lret
mov
xchg
mov
push
or
lret
add
aam
sbb
subb
sub
lret
fcoml
cmp
adc
ds
imul
mov
xchg
add
mov
or
mov
push
mov
xchg
xchg
cmp
inc
sub
int
arpl
mov
sbb
xchg
pop
mov
pop
push
pop
jmp
out
loopne
es
negb
popa
movsb
and
sbb
nop
pop
cs
xor
cmp
xchg
adc
jecxz
dec
aas
mov
dec
icebp
lock
mov
sbb
push
mov
inc
out
xchg
sub
call
mov
outsb
mov
mov
pop
jae
leave
js
fsubp
push
std
push
jb
lret
shlb
out
ljmp
dec
dec
stos
xlat
and
scas
scas
lea
xchg
sbb
in
xchg
aad
lods
mov
cmc
es
pop
loop
lods
or
jae
push
sub
jmp
movsl
cmp
mov
jb
push
adc
dec
xor
fidivl
cmpb
mov
pop
sbb
pop
cltd
test
je
pushf
sbb
test
cmp
dec
cmp
sub
mov
mov
clc
mov
fs
xchg
repnz
inc
cmp
mov
into
int3
cmp
mov
cmp
sub
cmp
outsl
iret
nop
in
cs
es
sarb
pop
mov
leave
xchg
packssdw
xorl
add
mov
or
cmp
addr16
daa
sbb
jo
mov
adc
mov
subb
or
pop
push
fldcw
imul
mov
fsubrl
dec
aaa
cmp
es
cmp
inc
sub
inc
sbbl
or
fisttpll
out
in
ret
and
imul
sub
movsb
sub
mov
xchg
fidivl
ret
out
imul
in
insb
cltd
cld
push
rolb
insl
and
cmp
mov
mov
push
scas
cmc
adc
out
mov
lods
insb
cltd
jecxz
mov
fwait
add
std
pop
sbb
add
dec
pusha
xchg
add
sti
pop
je
cltd
fdivr
mov
sub
ljmp
sub
enter
xlat
sbb
xchg
out
aad
in
xor
jbe
ljmp
dec
nop
or
imul
mov
loope
cmp
jne
fnstenv
dec
or
sbb
dec
sub
je
shrl
mov
sbb
or
cld
sub
inc
rolb
adc
mov
xor
fbstp
mov
xor
push
lods
sub
sub
sahf
push
mov
jl
sub
or
insl
addr16
std
xchg
jecxz
sub
call
cmp
icebp
xchg
lcall
jle
rcl
cli
es
push
and
popa
xor
test
aaa
xchg
inc
nop
cltd
sbb
das
xchg
sarb
xchg
jp
out
fisubs
icebp
mov
inc
imul
or
mov
jnp
pop
test
push
out
dec
ljmp
xor
xchg
mov
dec
dec
lret
push
out
dec
inc
sbbb
bound
xorl
dec
loope
mov
fstpl
dec
popl
rorl
rcl
sar
push
loopne
and
and
cmp
sbb
pop
repz
cmp
ret
stos
call
test
movntq
add
sub
movb
mov
lcall
stc
insl
mov
cmp
jmp
clc
pop
mov
out
push
sbb
mov
mov
and
in
jb
loopne
fsts
inc
ja
adc
lock
ja
movsl
jecxz
gs
fs
arpl
fdivrp
jnp
xchg
rcrb
push
lea
daa
mov
or
add
xchg
fisttpll
cmp
add
pop
imul
out
jb
scas
mov
mov
jle
ret
add
cs
mov
mov
jg
add
sub
add
pop
aad
adc
test
dec
or
hlt
jecxz
sbb
sbb
in
push
mov
adc
xchg
stos
test
inc
bnd
cli
pop
mull
push
aaa
pop
frstor
push
push
ret
xor
sub
aas
mov
mov
jecxz
mov
in
xchg
pop
cmpsb
mov
xlat
pop
or
adc
xchg
out
rol
pushf
in
ret
dec
ljmp
outsl
push
sbb
sbb
jae
das
jl
outsb
leave
stos
mov
in
jg
add
xlat
push
sbb
lahf
mov
xchg
fistpl
jb
mov
rorl
jl
add
push
iret
xchg
or
sbb
fdivrl
je
add
dec
cs
lods
adc
add
lahf
jge
ss
in
int
lds
xor
hlt
ss
sahf
mov
push
int
fucomi
xchg
adc
daa
sbb
cmp
sub
jne
push
fs
cmp
xor
xchg
mov
cmp
pop
push
out
gs
xchg
mov
mov
into
adc
cmpsl
cmpb
jmp
and
arpl
sub
pop
cli
in
xchg
and
push
pop
movsl
mov
shrb
cmpsb
lds
jae
pop
mov
insl
push
pusha
sti
xor
add
or
repnz
mov
add
and
push
cs
stos
jne
cmpsb
adc
push
mov
push
dec
sub
xorl
sub
sub
push
fistl
xchg
lock
mov
fcmovne
andl
test
out
repnz
push
adc
imul
jbe
pop
cmp
xchg
icebp
fwait
enter
adc
pop
outsl
xchg
ret
repz
pop
dec
shrb
pop
inc
int3
xor
dec
inc
inc
sti
lcall
jecxz
lcall
xchg
push
rcll
test
lcall
js
fistps
inc
sbb
arpl
fidivrs
test
sbbl
scas
mov
xchg
mov
adc
pop
dec
divb
test
xor
or
pop
lahf
icebp
outsl
sub
dec
inc
pop
jmp
mov
push
fdiv
rcr
jecxz
mov
push
hlt
imul
jbe
adc
and
jp
scas
scas
mov
testb
loopne
mov
xor
js
mov
mov
pop
or
leave
add
pop
out
dec
fs
mov
rcrl
fldt
xor
add
in
jno
push
xlat
sbb
xor
mov
leave
hlt
xchg
mov
andb
xchg
mov
add
jecxz
dec
adcl
xor
or
push
outsb
notl
loop
cli
dec
push
push
ffree
subl
mov
fsubrs
lret
pop
stc
and
mov
pop
in
mov
mov
cs
decb
sub
out
stc
pop
add
inc
addr16
mov
and
leave
inc
push
insb
std
cmp
les
je
iret
push
push
call
fs
sub
scas
cmpsb
adc
xor
add
stc
outsl
mov
mov
mov
push
pop
stos
movsb
lcall
je
mov
add
mov
call
xchg
ljmp
push
dec
sub
inc
jmp
mov
jle
mov
clc
cmp
lock
movsl
cli
and
xchg
cld
loope
sub
jnp
jmp
pop
addr16
inc
out
dec
mov
add
shl
xchg
add
mov
mov
xchg
je
stos
lods
repz
jmp
cmp
jmp
mov
add
sbb
cs
mov
in
mov
sbb
mov
data16
push
ret
in
cld
cmc
fnstcw
cmp
subl
xchg
xor
divps
lret
scas
dec
xor
jmp
xchg
jbe
xor
fistps
ja
sbb
pmulhuw
insb
mov
push
push
test
jns
nop
mov
xor
out
testb
add
push
xor
sti
push
fwait
out
cmc
das
add
jg
test
pop
push
or
arpl
jecxz
and
arpl
xchg
fisubrs
push
movsb
jl
rcrb
push
mov
push
jle
push
out
loopne
dec
cmpsb
aas
inc
sbb
mov
mov
insl
pop
mov
aaa
lods
sbb
scas
repz
mov
inc
mov
std
fadds
mov
fucomip
dec
or
sbb
ret
bound
lods
cwtl
in
fwait
pop
test
sub
lock
mov
aas
jno
sub
lods
jp
aam
or
and
push
jp
es
push
loope
fstpl
rcll
ror
pop
jns
pop
sub
hlt
out
lods
hlt
out
cmpsb
add
mov
jp
pop
adc
dec
push
fadds
in
cmpsb
in
lret
out
or
popf
xchg
popa
cmp
lcall
movsb
mov
loop
xchg
cmpsl
jbe
mov
decb
jnp
scas
cs
faddl
es
dec
bound
mov
jb
cli
jne
shlb
adc
lar
into
jb
push
int
adc
mov
ficoms
popa
sbb
push
pop
adc
mov
mov
adc
lahf
sbb
aad
xchg
sub
aad
xor
dec
insb
clc
stos
orb
addr16
divl
fwait
push
loopne
fwait
push
xchg
cld
xlat
movsb
outsb
rcl
jno
shrl
pop
jg
mov
or
cmp
mov
in
not
cmp
adc
test
inc
lds
xchg
cltd
insl
xchg
jo
mov
or
dec
jae
addb
jne
sti
cli
mov
fdiv
js
jns
pop
icebp
adc
sbb
push
loopne
push
sub
sub
sub
test
mov
dec
std
sbb
inc
leave
fsubrl
jne
xchg
and
test
shrl
and
dec
lahf
scas
jbe
xlat
cwtl
rcll
inc
idivb
test
icebp
pop
int
sub
xor
cwtl
inc
or
pop
repnz
xor
jno
dec
xor
mov
loope
fisttps
jle
jp
insl
xchg
imul
mov
mov
lods
xchg
daa
add
mov
fistps
iret
push
es
mov
mov
das
push
je
mov
lret
popa
sub
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
xor
cmp
xor
xor
xor
xor
add
sub
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
add
xor
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
xor
xor
add
add
add
add
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
add
imul
and
dec
add
insl
add
add
push
add
outsb
add
add
js
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
xor
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
