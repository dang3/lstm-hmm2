loopne
pop
xchg
sub
dec
stc
push
incl
out
inc
loope
mov
or
fildl
xor
dec
repnz
dec
stc
and
push
mov
cmp
inc
add
cmp
subl
fbld
mov
mov
shlb
cltd
xor
xchg
or
fwait
sbbb
cmp
add
mov
add
jle
out
inc
ss
adc
les
cltd
add
jns
repz
mov
les
das
add
retw
rcrb
or
fstps
ja
or
xor
popa
in
dec
xor
shll
add
add
mov
nop
jb
cld
sub
mov
add
mov
ficomps
fdivs
and
xor
cmp
mov
xchg
inc
mov
jo
mov
andb
fs
mov
add
movsl
wbinvd
xor
dec
push
xchg
cmp
mov
mov
fwait
xor
call
or
cwtl
cli
jge
add
call
cmp
add
add
cmc
shrb
pop
mov
subb
jb
mov
add
cmp
jp
pop
pusha
call
gs
mov
scas
pusha
je
cltd
and
adc
imul
int3
push
mov
and
inc
ret
mov
movsb
mov
lods
sub
lcall
sub
pop
in
mov
xor
mov
mov
sbb
xchg
or
adc
loopne
push
push
pop
cmp
jbe
pop
mov
scas
mov
cmp
fistpll
add
into
jno
out
adc
mov
sahf
arpl
outsb
add
aas
ljmp
pop
sbb
aas
adc
add
mov
pusha
ja
outsb
and
adc
jbe
cmp
or
or
das
and
pop
add
lds
pop
sbb
out
clc
nop
xor
add
test
jns
add
jae
fistl
sub
cmpl
imul
lahf
int3
xchg
and
mov
dec
adc
xor
ret
pop
js
mov
cld
add
test
sbb
lahf
and
and
cltd
in
sbb
cwtl
hlt
jne
dec
addr16
cmpb
add
push
mov
or
cmp
hlt
and
adcl
jo
push
jmp
add
inc
cmc
xor
data16
aam
test
daa
mov
and
jb
sbb
jae
add
pushl
loop
adc
pop
outsl
loopne
jo
andb
xchg
arpl
lahf
pop
stos
sbbb
adc
add
lods
cli
bound
sbb
push
or
std
icebp
int3
pop
pop
ss
in
cld
push
mov
mov
mov
ffreep
add
push
addb
into
jb
sbb
les
inc
mov
mov
sbb
or
mov
jne
scas
push
inc
mov
add
cwtl
push
adcl
sub
mov
add
dec
xchg
lea
adc
cmp
push
and
push
and
push
cs
pusha
pop
inc
push
add
lock
add
fs
mov
fcmovbe
rolb
xor
add
push
nop
shlb
inc
jmp
xor
adc
and
jb
pop
sbb
fxch
add
cwtl
adc
add
fwait
and
and
add
jl
mov
sub
stos
pop
jecxz
nop
sbb
es
cmp
fdivs
fwait
jo
add
aad
shrl
xchg
mov
add
adc
movsb
stos
insb
add
and
xchg
jl
push
sarl
cmp
cmp
inc
xchg
imul
stos
std
add
xchg
scas
cmp
es
nop
cld
into
mov
loopne
fcomps
rcrb
xor
mov
push
xchg
jle
ret
add
jbe
inc
xchg
cs
jmp
pusha
add
outsl
push
dec
xchg
cmp
xor
or
mov
orl
pop
aam
ret
pushf
loope
pop
sbb
icebp
in
fnstenv
cmp
lret
pop
jb
and
dec
cs
setae
bound
movsl
add
addr16
xchg
paddw
xorb
jbe
icebp
subb
outsb
mov
mov
jne
bnd
pop
cmp
adc
mov
sbb
add
in
rcrb
in
sbb
enter
aas
das
xchg
fsubl
cmpl
add
xchg
xchg
push
sti
int3
andb
mov
cli
mov
bound
cmp
mov
cmp
jmp
shrb
aas
add
dec
clc
pushf
sbb
or
xchg
or
jl
call
mov
mov
xor
jo
pushf
fcoms
pop
pusha
sbb
mov
aaa
xchg
loop
shll
aaa
cmc
xor
subb
mov
pop
das
mov
add
into
add
xchg
mov
mov
mov
xor
insb
pop
jecxz
fistl
inc
mov
jle
push
cmp
pop
dec
push
push
cmpsb
push
rcr
jecxz
sbb
hlt
mov
rolb
mov
addr16
push
and
pushf
sbb
fsubr
jmp
add
xor
push
sbb
nop
cmp
or
pop
sbb
add
lock
push
xchg
insl
sbb
test
push
js
lcall
fisttpll
jbe
mov
repnz
cmp
sarl
fs
lcall
out
sti
nop
cmpb
in
call
xor
adc
push
jne
and
or
cld
mov
mov
test
or
es
mov
add
mov
xchg
outsb
insl
mov
lock
xorb
push
push
xchg
movsl
lahf
aad
add
faddl
in
ja
jmp
lds
adc
lods
rolb
dec
xlat
cmp
add
cli
sbb
sub
dec
add
stc
cmp
ret
cmc
cli
ja
mov
sub
cmpsl
mov
jp
inc
xchg
pop
sarb
outsl
mov
inc
add
sbbb
jbe
cmp
add
or
rorl
add
pop
test
add
subb
push
inc
cmp
pusha
mov
add
jbe
pop
orb
sahf
mov
dec
icebp
lods
dec
or
jp
inc
in
push
popl
roll
sbb
mov
lock
jbe
imul
sub
cmp
lods
cmp
and
repz
test
add
jne
inc
leave
dec
cmc
adcb
add
or
psubsw
rol
dec
cmpsb
inc
push
or
inc
fisttpll
xor
push
push
fimuls
add
cmp
test
movsl
ret
and
int
adc
test
push
pop
jp
jnp
rcll
repnz
add
lods
testl
add
sbbb
sub
fs
jle
jp
ds
int
lret
sub
lcall
das
imul
rcr
add
ret
or
cmp
xchg
leave
cmp
dec
rclb
bsr
add
adc
repnz
sbb
aam
sub
sub
shrb
or
fldcw
or
adc
push
cmp
pop
nop
add
add
in
jne
push
sbb
jns
jno
cltd
clc
dec
in
add
inc
xchg
and
mov
sbb
pop
shlb
lods
ja
js
add
and
jl
les
xorl
bound
inc
dec
fbstp
add
insl
inc
aam
pop
mov
frstor
pop
clc
mov
pop
dec
add
popf
inc
sbb
add
mov
jge
mov
fwait
lock
adc
jae
mov
sti
loop
and
add
pop
push
or
mov
cmpl
add
outsl
push
pop
xor
fstpl
push
mov
mov
test
or
mov
lods
push
jg
xchg
jo
cmp
xor
jle
push
push
push
pop
push
fcoml
mov
cmpb
imul
dec
in
inc
sub
mov
faddl
xor
cmpsl
call
jae
inc
scas
adc
cltd
and
push
je
push
and
and
out
lret
arpl
pop
jnp
rorl
loopne
int
in
add
js
mov
inc
or
lcall
daa
jb
cmpsb
pop
fs
ss
lock
mov
loopne
xchg
add
testl
xchg
arpl
add
xor
cmp
stos
ljmp
jno
sbb
pop
dec
fcoml
pop
das
add
xor
jne
scas
fwait
adc
sbb
xor
mov
adc
inc
les
pop
nop
sbb
xor
mov
sbb
jbe
adc
inc
push
pusha
xor
pop
dec
jmp
movsb
inc
xor
adc
xlat
xor
add
jg
out
xchg
xor
add
lret
shrl
and
cmpsb
push
rep
jg
insb
std
imul
lods
cmc
test
rcrb
add
mov
movsl
fmull
int3
xchg
sub
push
scas
fldenv
and
pop
xchg
sub
fstl
pusha
iret
jbe
leave
cmp
test
cmpsb
rcll
addl
sbb
dec
stos
cmp
ror
loope
sbb
jb
xchg
rcrl
cmp
pop
fs
jo
addb
adc
jbe
pop
inc
inc
or
cmp
adc
sub
push
mov
fcmovbe
icebp
jbe
mov
or
sti
sbb
daa
sub
cmp
ljmp
xchg
fldcw
adc
clc
clc
inc
and
mov
test
inc
das
fs
mov
xor
dec
push
repz
inc
adc
ficoml
mov
int3
add
sub
adc
cmp
std
xchg
fstpl
inc
or
xor
lock
push
sub
add
dec
fs
shl
or
pusha
int3
cwtl
inc
dec
mov
fs
jg
or
stc
imul
sub
and
xchg
loope
fs
lods
das
pop
mov
or
jecxz,pn
cmp
jo
xor
add
mov
bound
mov
psubd
add
push
in
sbb
sbb
pusha
add
xor
and
jg
incl
aas
mov
dec
mov
popf
add
das
lock
cmp
adcl
cmpsb
mov
pop
rcll
movsb
inc
pop
lcall
inc
mov
sbb
out
jae
shl
in
dec
testl
dec
mov
xor
add
or
dec
lea
movl
xchg
cltd
add
push
or
lds
out
jmp
add
std
pop
roll
daa
stc
inc
idivl
or
in
or
lret
aaa
sbb
roll
js
bound
rcll
push
mov
or
dec
push
or
fmull
mov
push
pop
inc
sarl
rclb
pop
add
mov
inc
pop
add
inc
inc
rorb
stos
add
shrl
in
fstps
xchg
jae
push
lret
mov
pop
sarb
adcb
or
inc
sbb
push
fadd
jo
inc
pop
dec
adc
insl
push
add
js
jb
cltd
inc
enter
nop
bound
push
popa
stos
pop
push
and
xor
add
mov
dec
lahf
push
loopne
push
add
rclb
mov
mov
leave
jge
add
sub
and
sbbb
sbb
xchg
inc
outsl
and
add
adc
xchg
jo
aam
dec
push
sub
adc
scas
int
push
cmpsl
dec
fisubs
push
sub
jp,pn
mov
pop
lods
sub
mov
mov
adc
mov
mov
add
push
xor
cmp
data16
aam
xchg
andl
out
andb
cmpsb
in
adc
mov
adc
jae
lahf
in
cmp
mov
dec
xchg
mov
iret
push
sub
outsl
xchg
sub
ficomps
dec
popa
sub
xor
ret
inc
xchg
into
jb
pop
sbb
mov
mov
out
xchg
mov
mov
stc
mov
push
push
cmc
lds
and
push
ret
dec
and
orb
and
loopne
das
and
nop
scas
int3
sub
jne
add
inc
adc
mov
adcb
add
jb
imul
loope
sarl
mov
xchg
jbe
push
adc
rolb
lcall
mov
dec
mov
mov
rorb
push
adc
push
fldl
sub
push
stos
cmp
sbb
xchg
les
lea
daa
in
push
push
fstpl
orl
jae
or
mov
xor
sarb
movsb
add
pusha
sub
faddp
addb
sahf
xchg
mov
pop
shrl
das
sub
pop
xor
jnp
cld
orb
cld
sti
add
xchg
out
mov
shll
push
jae
push
push
dec
add
in
testl
fimuls
pop
clc
shl
jae
add
mov
mov
les
add
test
int3
sahf
add
mov
shl
jns
ja
or
adc
mov
dec
lret
push
mov
add
aad
in
jp
xor
cs
jo
addr16
jae
fisubs
inc
or
sbb
jo
mov
sbb
dec
inc
mov
pusha
adcb
adc
inc
leave
test
pop
inc
movsb
mov
dec
stos
and
add
scas
clc
fildll
lds
mov
pop
out
jle
mov
add
stos
adc
insb
jnp
pushf
lods
popa
sub
sub
ss
inc
movsb
inc
and
push
lock
inc
jl
mov
add
inc
std
addl
xchg
pop
mov
shll
add
fidivrs
ja
dec
iret
add
out
mov
adc
xchg
add
shll
sbb
mov
lret
nop
xor
mov
repz
add
inc
aaa
lea
leave
jmp
fsubrs
xor
add
testl
pop
fs
sub
mov
dec
push
adc
cmpsl
push
imul
imul
xor
xchg
stc
jmp
sbb
lods
pop
add
mov
loopne
mov
aas
add
adc
xchg
andl
push
add
jl
pusha
sti
shrl
int3
sbb
sarl
jp
inc
pop
es
bswap
mulb
pop
fsubs
inc
or
push
xchg
subl
fsts
push
test
into
lods
adc
out
cltd
add
fs
aas
add
mov
sahf
mov
sub
fbld
stos
addr16
or
add
dec
and
xor
fs
mov
mov
stc
pusha
push
pushf
or
mov
mov
adc
xlat
add
jmp
mov
repnz
out
push
add
lods
in
cmpsb
test
pop
lcall
loopne
lock
fdivrs
call
mov
adc
loop
adc
lea
fildll
cwtl
push
into
adc
inc
mov
pop
and
jo
or
inc
adc
mov
add
and
push
fs
inc
and
insl
inc
or
mov
mov
test
push
push
pop
sbb
or
inc
jmp
rcl
dec
add
mov
push
cld
mov
movsl
loope
xchg
mov
cwtl
cmp
cs
dec
and
mov
fcmovnu
mov
jg
and
adc
mov
rorb
pop
test
and
and
cwtl
adc
in
sub
add
mov
mov
pop
jo
pop
add
repz
jae
jbe
xchg
addb
or
cmpsb
js
cwtl
dec
inc
push
xor
cmpsl
pop
jns
xchg
mov
and
mov
pop
push
inc
jne
or
xorb
or
rclb
das
repnz
xor
xchg
pop
dec
pusha
adc
add
into
push
pop
pusha
cmc
jp
insb
inc
mov
fs
dec
inc
data16
daa
stos
add
xor
push
and
xchg
add
incl
push
rcrl
add
sbb
clc
xor
dec
dec
rclb
adc
jbe
xchg
insb
cmp
pop
lock
xchg
test
cmp
aas
or
in
or
jl
xlat
push
inc
mov
andl
xchg
push
cwtl
test
gs
xchg
jno
filds
lods
iret
mov
popa
cmc
outsl
es
sub
dec
into
mov
cld
lret
push
add
lcall
add
loopne
or
mov
shrb
ficoml
pop
jg
out
add
cltd
in
xchg
les
xchg
xlat
and
add
imul
add
pop
add
aam
sbb
inc
jae
into
je
outsl
popa
out
adc
adc
js
js,pt
add
aas
xor
or
ret
out
sahf
sub
and
and
testb
loop
cmp
or
mov
add
dec
in
clc
xchg
test
jmp
mov
out
or
aaa
arpl
pop
jp,pt
mov
das
xchg
bound
inc
push
xchg
aam
mov
lret
or
xor
fstl
jmp
je
add
dec
push
and
shlb
jns
xchg
int
push
and
xchg
mov
shlb
test
mov
xor
call
push
xchg
je
repnz
push
cmp
push
xor
jg
mov
dec
enter
fcmovbe
lods
movsb
add
outsl
push
xor
sub
push
cmp
clc
mov
inc
frstor
mov
add
push
imul
jne
sub
sub
jns
and
push
rolb
push
inc
test
stos
inc
shll
inc
jno
add
pop
jl
and
sbb
sub
sbb
ret
or
cli
ss
add
pop
sbb
arpl
inc
mov
jnp
jg
xchg
or
js
adcb
dec
jo
pop
xchg
add
sub
add
mov
repnz
add
jmp
mov
adc
adc
push
sbb
xor
add
xor
adc
push
adc
divl
mov
dec
mov
and
mov
xchg
icebp
add
mov
roll
and
cs
add
mov
sahf
push
rol
pop
or
inc
cmpsb
dec
jle
adc
or
mov
sub
inc
pop
xchg
xlat
xchg
pusha
in
fstl
adc
dec
jmp
cld
bound
idivb
and
repnz
out
push
sbb
jge
dec
and
push
push
add
dec
sarb
adc
pop
dec
inc
sub
enter
inc
ret
js
adc
add
cmp
lahf
mov
cmp
repnz
cmp
shr
mov
push
arpl
dec
mov
add
loop
fistpll
jb
rolb
push
insl
popf
dec
cmp
and
mov
cmp
loopne
int
icebp
aas
sbb
mov
xchg
je
adcl
outsb
cmp
js
imul
std
aam
cmp
mov
pop
hlt
xchg
and
inc
cmp
mov
mov
mov
pop
loopne
add
adc
fdivs
popl
divl
les
add
xchg
mov
ret
cli
push
mov
xor
mov
loop
in
jl
xor
mov
jae
or
xor
adc
call
daa
sahf
ljmp
pop
test
inc
andl
push
jp
call
inc
testl
fisttps
sub
pop
jle
xchg
stos
lock
int
mov
pop
test
inc
out
inc
inc
js
ljmp
jbe
mov
adc
push
sub
xchg
xchg
leave
sub
jne
add
into
adc
rorb
outsb
dec
fisttpll
sub
out
jo
mov
iret
in
inc
push
rolb
jecxz
mov
dec
sub
insb
add
out
mov
pop
add
add
and
cmpsb
xchg
ficoms
fmull
lods
rcll
movsl
pop
push
test
push
hlt
inc
mov
xor
add
mov
imul
cmp
mov
clc
rcrb
pop
dec
dec
loopne
leave
inc
jecxz
add
roll
and
mov
push
clc
dec
xor
orl
lcall
add
add
ret
clc
pop
repnz
arpl
popw
test
lock
add
push
popa
pushf
sti
xor
pop
inc
or
adc
cmpl
in
and
bound
test
sub
or
push
out
ss
xorl
adc
cmp
cmp
add
fadd
and
clc
xor
shl
inc
dec
imul
aam
outsb
add
aaa
pop
cmp
jae
and
jo
sub
lcall
push
jbe
subb
pop
xchg
push
ljmp
outsl
mov
in
pop
enter
xor
jno,pn
jnp
adc
psrlq
inc
jo
or
mov
mov
mov
je
fwait
negb
pusha
mov
in
push
insl
orl
inc
pop
pushf
loopne
pushf
mov
or
ror
add
pusha
add
xor
movsl
stc
mov
pop
cwtl
call
adc
mov
enter
inc
pop
lcall
bound
mov
sub
cltd
in
mov
sarb
into
insl
inc
add
std
mov
jbe
jns
add
popf
xchg
xor
adc
or
fmull
push
xor
movzbl
inc
mov
add
out
jg
cmpsb
inc
add
insb
enter
pop
mov
push
pushf
sub
addl
lock
les
sub
cwtl
jl
ss
inc
sbb
test
sbb
in
movsb
xchg
add
sbb
mov
or
push
cltd
and
addl
icebp
mov
adc
repz
test
add
cmp
ljmp
jnp
cmp
lods
rclb
cmpsl
hlt
sub
call
xor
insb
fdivl
rorl
stos
dec
add
pop
inc
decl
mov
jo
add
push
inc
in
pop
outsb
jb
inc
addl
dec
add
mov
in
jecxz
push
xchg
mov
push
push
clc
movsb
les
add
rolb
inc
add
andb
sbb
mov
lret
fisubrl
add
inc
repz
pusha
adc
dec
rolb
enter
pop
xchg
jno
mov
jbe
add
mov
dec
imul
popl
pusha
stos
andl
call
inc
adc
or
or
xor
subb
cltd
test
sub
add
mov
sbb
gs
incb
dec
outsl
shlb
xor
or
aas
jecxz
cmpsl
and
cltd
sahf
and
pop
data16
xchg
sub
xchg
mov
mov
dec
rcr
cwtl
test
mov
inc
rclb
mov
jnp
xchg
mov
jp
mov
scas
dec
in
inc
dec
push
push
cmp
and
ljmp
mov
in
rorl
dec
jg
shll
movsb
pcmpeqw
or
shr
movsb
pop
cmp
xchg
nop
inc
notb
outsb
push
mov
inc
add
mov
mov
in
jp
popf
std
rcrl
xchg
rcl
repz
push
les
bound
pusha
add
insb
adc
mov
xor
pop
and
push
js
inc
in
add
ss
movsl
jae
daa
pop
cmp
les
inc
lret
js
jo
sbb
adc
add
adc
aam
lds
cli
and
nop
push
xchg
xor
mov
push
sub
pushf
push
jge
in
in
insl
xor
pop
inc
add
lret
js
push
cmp
inc
addb
cmpsb
mov
popa
pop
leave
hlt
bound
lods
roll
xor
jg
xchg
stc
mov
faddp
mov
mov
adc
xor
cli
add
das
dec
lods
pop
cltd
into
std
xchg
adc
xchg
adc
dec
aam
push
mov
subl
pop
jmp
push
fcom
pop
pop
add
imul
js
dec
sbb
and
xor
popa
add
and
and
lcall
cmp
jmp
sub
popa
xchg
aas
add
sbb
divl
gs
outsb
add
ljmp
push
cmp
pop
jne
mov
sbb
rcl
sbb
and
dec
cmp
dec
nop
fimuls
cmp
inc
adc
mov
jmp
jb
inc
mov
movsb
cmpsl
out
call
or
sub
roll
add
sahf
mov
mov
ret
rorb
cmp
push
push
shll
add
lahf
pushf
ss
or
rcl
mov
in
je
idiv
and
imul
loopne
out
xchg
cwtl
add
jge
pop
mov
pop
or
faddl
inc
imul
arpl
adc
lds
pop
imul
test
sub
inc
fwait
and
repnz
je
shlb
andl
popa
dec
dec
adc
lock
imul
sub
cwtl
fs
rcrl
adc
or
adc
mov
inc
ficoml
insb
jne
enter
jae
and
in
ljmp
add
mov
mov
fisttps
nop
add
mov
adc
push
pop
fadds
ret
popf
sahf
mov
inc
cwtl
mov
or
xor
xchg
addr16
lea
shrb
and
push
mov
jns
ret
fiadds
jno
inc
lods
pop
mov
cmp
cmc
fs
rcll
sbb
pop
cmp
and
dec
or
or
or
fmull
push
cld
mov
push
mov
repnz
pushf
add
inc
inc
subl
out
jae
sub
in
pop
adc
or
mov
or
rorl
sar
xor
cli
adc
test
or
jge
dec
aas
adc
pop
jg
add
and
ja
push
enter
test
aas
sbbb
sbb
xchg
add
movsb
int3
rcrb
shrl
faddl
hlt
jbe
push
inc
ja
cmpsb
cmpb
cld
add
loope
clc
mov
call
mov
inc
outsl
and
pop
dec
add
cmp
jge
cmpsb
or
jg
inc
sbb
outsl
aad
jno
adc
sbb
iret
clc
js
dec
xor
test
das
cmp
fwait
cmp
nop
and
into
inc
adc
loopne
add
mov
je
enter
cmpsb
iret
cmpsl
mov
cmp
sbb
clc
cmp
add
stos
jo
in
mov
mov
aam
mov
mov
ret
gs
xor
out
or
jae
cmp
adc
adcl
jbe
adc
mov
add
frstor
mov
mov
and
addb
lcall
mov
scas
mov
loop
add
mov
cmp
dec
ds
push
jl
jnp
scas
inc
loopne
cmp
int
push
cld
rclb
in
adc
adc
push
push
cli
cld
adc
xor
outsb
ret
add
in
add
xchg
sbb
fstpl
arpl
add
push
cmp
mov
add
std
xor
sub
add
and
das
frstor
hlt
adc
cld
xorb
mov
add
mov
fildll
sbb
shrb
dec
or
fldl
adc
adc
mov
andb
call
jge
jnp
xchg
inc
mov
sbb
mov
int
inc
out
adc
test
dec
pop
daa
inc
mov
aad
psrlq
cmpb
mov
fadds
pop
loop
add
les
pop
mov
in
push
sbb
jp
or
pop
inc
lea
pop
nop
lods
jbe
popf
adc
add
test
mov
adc
ljmp
pop
out
repnz
xchg
js
mov
inc
adc
loope
rorl
mov
pop
dec
xchg
rcrl
jo
push
adc
aaa
mov
roll
rcll
sbb
test
pop
dec
push
xor
aam
lcall
push
outsb
dec
add
lods
jecxz
clc
mov
xor
or
rclb
cli
push
cld
mov
dec
add
sub
cmp
xchg
lahf
js
addl
jp
sub
cmpsl
fcoms
push
mov
sbb
out
sub
mov
daa
scas
jae
xlat
sbb
and
jp
arpl
cmp
add
jnp
jb
inc
test
lret
add
and
shufps
test
loop
jmp
sbb
xor
rorb
fcomps
mov
pop
cmp
adc
xchg
pop
cmp
mov
sub
mov
fcoms
add
or
push
push
xlat
add
xchg
jnp
pusha
loop
lret
out
ficoms
andb
sbb
add
cmpsl
push
subl
aad
cmp
and
sbb
inc
inc
clc
mov
cmpsl
mov
sub
js
bound
fstl
ss
mov
addb
add
xor
sbb
fxch
jmp
add
outsl
stos
add
repnz
sbb
push
xadd
insl
loopne
or
xchg
add
mov
mov
cmp
lret
in
add
mov
mov
xchg
cltd
add
xlat
pop
shll
mov
inc
add
mov
scas
or
fwait
imul
aaa
icebp
addb
and
adc
xchg
fs
sub
rcrb
insb
add
pushf
mov
push
stos
add
xor
cmp
xchg
jmp
jno
and
xlat
and
inc
and
and
xor
repnz
adc
lods
ret
shufps
jl
add
mov
mov
jp
add
sub
js
and
sar
loopne
fadds
xchg
loope
popa
push
lret
ljmp
pop
repnz
jle
xor
pushf
jg
sbb
xlat
jo
add
jmp
outsl
mov
shll
push
mov
sbb
popa
xlat
popa
sbb
cwtl
dec
add
push
xor
xchg
ja
add
ds
jo
mov
add
scas
jecxz
out
or
aaa
pop
pop
nop
cmpsl
punpckldq
std
or
adc
xchg
lahf
cmp
test
and
mov
cmp
mov
mov
fiaddl
mov
mov
sbb
push
fsubrp
pop
xchg
jbe
pop
ss
leave
sbb
pop
loop
movsb
fwait
cld
loope
cmp
loopne
and
daa
pop
add
jmp
mov
jne
add
iret
das
mov
cli
fsubs
inc
pop
sub
pop
inc
mov
scas
and
test
aaa
pop
std
push
loopne
incl
jge
jae
add
addb
add
xchg
xor
mov
in
add
mov
add
icebp
or
imul
fmull
cmpl
lds
cld
enter
add
pushf
push
popf
add
xchg
jp
and
adc
aad
int3
adcb
or
mov
pop
popf
jl
xchg
jnp
inc
in
mov
add
in
xor
sbb
and
pop
xorl
push
std
xchg
je
sub
in
dec
push
es
sub
aam
pop
incb
fnstsw
and
shrl
push
test
sub
sbb
aaa
ffreep
mov
mov
aam
push
dec
jne
add
lea
dec
inc
add
pushf
mov
rcrb
shrl
pop
push
int
pop
popa
pusha
loope
inc
pusha
gs
dec
sub
mov
xchg
add
xlat
pushf
rolb
jp
or
in
dec
mov
or
addr16
inc
fistl
push
nop
test
ficoms
roll
sub
mov
ret
push
stc
popa
fiaddl
mov
arpl
add
jl
bswap
fstpt
push
mov
mov
adc
jl
sub
inc
sub
sub
and
add
cmpsb
stos
ret
rorb
mov
mov
pusha
jmp
sub
add
or
xchg
pop
ret
jmp
jne
or
out
iret
cwtl
sub
sbb
xchg
bndstx
push
add
cltd
push
popa
pop
clc
sub
cwtl
pushf
jl
pop
pop
scas
xor
shlb
inc
shlb
push
ds
hlt
mov
and
cmc
sbbb
lods
mov
fadd
ljmp
imul
cmp
and
mov
jle
adc
cltd
fcomp
dec
jb
xor
adc
dec
inc
dec
inc
jl
jecxz
fnstenv
call
data16
xor
pushf
mov
sbb
mov
insb
je
rcll
mov
in
xor
ret
std
or
je
add
iret
push
mov
outsl
xchg
inc
sahf
clc
repnz
mov
xor
test
mov
sub
pop
shll
lret
mov
inc
lock
mov
mov
mov
test
outsl
pop
dec
iret
mov
mov
adcb
add
or
mov
je
inc
cs
aaa
add
adc
lods
pop
mov
outsl
pusha
mov
add
insb
cwtl
jp
loope
cli
in
pusha
aam
and
sbb
cmp
cmp
or
add
adc
out
add
inc
xchg
add
mov
movsb
movl
fs
adc
mov
adc
add
dec
xchg
pusha
aaa
test
push
fildl
aaa
or
or
repnz
iret
adc
inc
repnz
mov
nop
or
mov
dec
loopne
leave
dec
add
and
sarb
xor
cmpb
push
inc
ja
int
bound
mov
idivb
mov
ja
add
sbb
dec
sub
rcll
fwait
xchg
sbbb
outsb
ret
movsl
cmp
mov
add
and
push
mov
call
cmpsl
or
fwait
mov
cmp
mov
sbb
xor
test
sub
mov
test
inc
sub
lret
je
mov
jmp
fdiv
lea
push
ficoms
frstor
push
repz
lods
dec
or
loopne
mov
rolb
push
add
popl
das
je
xchg
mov
xchg
add
inc
xchg
ss
sbb
stc
test
das
in
aas
xchg
repz
cmpsl
pop
push
sub
addb
inc
mov
jge
fs
adc
add
jo
add
jbe
repnz
push
fistps
popf
add
sbb
mov
aam
je
movsl
out
or
daa
mov
push
and
mull
sub
aaa
inc
xchg
jb
push
cwtl
add
cmc
out
call
movsb
jns
addb
or
or
ss
and
movsl
mov
and
adc
add
push
dec
testb
jo
das
xchg
mov
add
xchg
movsl
es
xchg
add
scas
fadds
mov
cmp
out
sub
mov
mov
out
adcb
mov
mov
insb
jle
lock
add
xchg
lods
icebp
adc
das
xor
inc
push
pop
xchg
add
das
subb
pop
dec
pop
and
xorb
and
add
lods
xchg
mov
or
and
fcoms
xchg
mov
push
jb
int3
cmp
loop
add
popf
mov
add
xchg
dec
sub
add
cwtl
mov
pusha
rolb
xchg
stos
add
lcall
adc
add
sub
gs
and
add
stc
xor
sbb
jge
pop
pop
adc
add
mov
out
cmp
repnz
hlt
insb
and
jmp
add
xchg
pusha
mov
aas
add
xchg
outsl
jle
cmp
pop
sub
ret
mov
adc
xlat
xor
adc
scas
stc
push
pusha
sbb
adc
mov
add
ret
aad
fisttpll
and
mov
jp
and
and
add
push
xor
lret
pop
enter
orb
pop
lods
xchg
add
sub
lock
stos
and
add
push
add
orb
bound
cmp
stc
iret
add
xlat
mov
mov
js
rdtsc
push
add
add
jecxz
push
fmull
push
sub
pushf
push
mov
aad
xor
cmp
pushf
ficoms
cmp
lcall
xchg
xchg
addl
inc
add
bound
add
cld
and
jecxz
in
mov
push
add
in
lods
subl
jbe
cmp
inc
or
or
out
nop
add
cmp
movb
sub
cltd
push
dec
in
cmp
push
add
xchg
lea
cltd
das
sbb
mov
mov
test
inc
add
dec
mov
repnz
in
sarb
push
or
pop
call
mov
xchg
and
inc
testl
or
jecxz
les
popf
jg
bound
lea
std
pop
inc
mov
int
add
jbe
andb
xchg
inc
cmp
std
and
nop
int3
push
mov
ds
or
sbb
test
xchg
mov
xor
insb
or
rcr
adc
and
dec
int3
add
mov
mov
mov
mov
mov
inc
jae
cmpsb
mov
adc
dec
enter
push
sub
fstl
sub
std
dec
nop
mov
jmp
push
add
jbe
add
in
sbb
xor
int3
add
mov
mov
cwtl
add
add
inc
clc
nop
into
sbb
jo
xor
xor
sbbl
add
subb
add
xor
lock
mov
mov
dec
stc
loopne
xchg
lock
or
je
jno
aam
xchg
into
inc
xor
cld
push
bound
int3
inc
int3
push
and
std
pusha
dec
loop
mov
push
or
addb
filds
aam
inc
mov
cmp
cmp
addl
push
mov
mov
stos
mov
and
xor
mov
xchg
js
mov
add
mov
imul
stos
mov
test
mov
jge
or
jb
ljmp
outsb
les
sbb
mov
in
push
sub
loopne
add
pop
xor
jg
sub
aam
adc
dec
cmp
adc
pushf
push
test
mov
in
aad
fcmovbe
ss
dec
rolb
andb
aas
fdivs
and
adc
mov
nop
or
add
jae
xchg
xchg
push
cmp
clc
add
lock
fld1
pop
push
mov
jnp
in
mov
xlat
push
jne
mov
nop
insb
jle
into
cld
mov
xchg
add
hlt
and
xchg
mov
rcll
nop
hlt
loop
insb
rcrb
js
inc
inc
xchg
ss
outsl
and
jbe
hlt
movsl
les
inc
int3
add
dec
cmp
add
cld
iret
push
xor
pop
mov
aaa
and
mov
andb
dec
flds
bound
mov
ss
inc
lret
hlt
sbb
lock
test
dec
sub
adc
and
mov
in
adc
push
loopne
fcmovnb
cwtl
mov
inc
xchg
inc
dec
mov
aam
out
mov
sbb
push
lahf
fdivrl
dec
sub
lds
xchg
jne
lods
mov
and
mov
leave
sub
jno
int
shrb
ds
sbb
leave
mov
pop
add
push
bound
xor
pop
jecxz
sub
movsb
sbb
xchg
or
and
or
scas
js
push
jbe
mov
and
idivl
push
mov
aam
std
cmp
sub
add
mov
add
xchg
xor
aaa
cwtl
ss
inc
pop
int3
cmp
add
push
mov
jle
dec
frstor
call
outsl
pusha
aaa
shrb
fidivl
jbe
jmp
sbb
sub
mov
jp
cmpb
aam
add
sahf
movsl
jl
subb
jnp
frstor
popa
inc
xor
fmul
scas
xchg
push
in
cmpl
popf
xor
jno
add
stc
xchg
dec
add
int
in
mov
push
dec
mov
pusha
cltd
aaa
xor
pop
andb
daa
pop
mov
mov
pop
xchg
cmp
add
cmp
push
push
or
insl
and
or
int
adc
ss
lahf
add
mov
es
xchg
mov
cmp
cli
in
std
aam
push
hlt
cmp
add
push
xor
repz
add
lods
movsl
stos
push
jnp
push
jbe
or
cmp
add
test
dec
xor
pop
pushf
mov
dec
add
cmp
pusha
pusha
mov
add
push
lret
dec
cmp
mov
je
popa
sarl
cmp
sub
xchg
and
call
pop
mov
and
fsubrs
orb
arpl
sbb
cmp
inc
add
hlt
mov
sub
and
cld
mov
add
add
jns
pushf
mov
cmp
les
cwtl
pusha
mov
fbstp
jnp
jl
test
mov
decl
and
adc
xchg
jb
add
push
mov
dec
iret
daa
xor
sarl
clc
orl
in
int
pop
xchg
das
add
sub
test
cmp
clc
or
xchg
jl
pop
push
jo
add
nop
xor
stos
sbb
lea
pop
lcall
rolb
popa
incl
in
mov
jmp
repnz
je
mov
mov
addb
out
jnp
iret
hlt
xor
enter
xlat
xor
xor
mov
and
fldcw
jb
add
outsl
mov
inc
hlt
adc
and
add
repnz
or
shll
stos
pusha
add
pop
jo
sub
add
je
clc
and
fcmove
inc
and
imul
rcrb
add
fisubs
inc
aam
data16
push
mov
jb
in
xchg
sub
pop
pop
add
insb
or
jo
push
sub
sahf
mov
and
ror
repz
decl
jle
pop
out
add
add
repnz
je
xchg
mov
add
bound
std
push
mov
cmp
je
outsl
nop
loopne
push
in
int3
mov
cmp
stos
mov
push
mov
mov
cmp
call
push
add
mov
cmc
push
rcrl
cmp
cmpb
ja
push
testl
or
add
aam
add
std
popa
pop
mov
repnz
mov
mov
cmp
or
in
lds
push
inc
sub
xchg
rclb
pushf
outsl
jo
hlt
xchg
add
fwait
pop
mov
and
fildl
jmp
fisubs
icebp
rolb
inc
cmp
test
sub
ja
clc
sub
fldl
add
sub
mov
pushl
es
cmp
inc
add
sbb
pop
inc
and
pop
pushf
add
ret
stos
std
pop
pop
cmp
or
mov
jnp
call
add
outsb
inc
sub
mov
mov
add
lret
imul
add
sbb
push
sbb
test
add
mov
repz
out
cmp
dec
dec
les
cmp
xor
ljmp
pusha
mov
int3
icebp
lock
roll
mov
rorb
pop
sbb
int
test
jns
add
mov
dec
and
repz
cld
test
xchg
inc
mov
mov
xor
dec
dec
push
xchg
or
cld
mov
aaa
out
add
and
popl
add
cmp
inc
out
xlat
xchg
enter
movsb
faddl
scas
stc
adc
add
test
sub
aas
pop
cmpsb
inc
or
mov
dec
icebp
add
les
xchg
leave
add
sub
xor
fsubr
jp
inc
mov
lret
push
and
xor
iret
mov
dec
clc
add
test
pop
xor
ds
add
mov
pusha
mov
ror
test
sete
inc
aaa
push
jbe
jo
mov
push
inc
incl
mov
arpl
faddl
xchg
daa
sysret
pushf
push
xchg
dec
shlb
mov
sub
movb
cmp
lock
sbb
dec
aaa
pop
fdivs
test
cwtl
in
nop
js
jecxz
push
cs
repnz
cmp
cmpsl
xchg
inc
inc
and
jno
pop
and
lret
lods
push
insl
xchg
add
mov
sub
nop
xor
into
mov
test
xor
cmc
inc
daa
mov
test
sub
nop
adc
cmp
mov
mov
nop
clc
out
imul
pushf
adc
sbb
and
addb
sbb
cmp
lret
xor
rolb
sti
out
pop
cltd
jns
add
adc
cld
inc
out
jbe
or
cmc
fldcw
mov
sbb
stc
dec
and
inc
fcmovnb
mov
add
jns
pop
sbb
sbb
nop
add
shl
mov
cmp
dec
adc
add
add
adc
fs
mov
add
push
push
mov
lret
cmp
add
in
je
xor
inc
cmpsb
pusha
pop
test
pusha
mov
cwtl
mov
notb
sub
or
pop
cmp
cmp
lret
jno
add
and
je
adc
out
bound
int3
cmp
sub
mov
pushf
and
push
nop
lock
popa
das
jo
jbe
xor
std
or
aas
mov
testb
and
add
movb
and
and
out
test
jmp
pushf
shlb
xchg
mov
fdivrs
outsl
xlat
mov
cmpl
push
pop
mov
ret
rdseed
cmp
shlb
mov
push
outsb
mov
jb
pusha
and
movsb
in
clc
adcb
add
cmp
push
and
sub
cmpsl
lock
add
mov
pop
popa
mov
jb
fdivs
lods
or
ljmp
inc
mov
push
stos
fdivrl
add
pop
jecxz
xchg
mov
and
xchg
xchg
add
movsl
jge
adc
aas
adc
shlb
mov
sub
orb
mov
sahf
addr16
cmp
aam
sub
mov
inc
lret
dec
jae
pop
xchg
lea
nop
das
test
add
out
and
lret
jo
or
push
loope
cmp
or
leave
pop
call
add
sbb
pop
mov
mov
cmp
fbstp
je
adc
or
sbbb
inc
xchg
add
subb
push
outsl
lods
inc
xchg
inc
arpl
cmp
jg
movsl
mov
rcl
stos
mov
lea
add
sub
sbb
add
add
in
pop
add
popa
addr16
mov
test
mov
bound
mov
push
test
pop
push
sub
pop
add
push
scas
add
adc
xchg
adc
lds
mov
mov
pop
jle
sub
daa
clc
xor
scas
enter
dec
out
mov
nop
push
aas
pushf
mov
and
aaa
add
gs
cmp
mov
mov
cwtl
inc
int3
push
dec
add
pop
push
leave
xor
inc
adc
into
add
or
insb
outsl
xor
dec
dec
aaa
adc
lahf
jl
pop
roll
test
xchg
popl
sub
pop
mov
mov
cmp
xchg
mov
adc
aam
clc
pop
das
nop
jl
sbb
out
jle
xlat
mov
adc
pop
sub
js
pop
call
inc
addb
add
and
sarb
shlb
lret
mov
clc
fisubl
or
mov
adc
sub
xchg
lahf
mov
xchg
push
add
dec
fs
in
popf
pusha
mov
pop
in
or
add
rorb
xchg
add
push
sbb
mov
shrb
sbb
pop
hlt
push
add
or
subl
add
mov
push
cmp
faddl
xchg
clc
cmpsl
mov
aaa
mov
sbb
in
inc
sti
dec
stos
pop
add
adc
cmp
sbb
pop
cmp
pushf
lcall
fisubrs
fcoml
or
test
add
fldcw
pop
lcall
inc
push
xor
jmp
pop
cmc
xchg
cwtl
push
mov
sub
fcoml
inc
sub
jne
fs
pusha
mov
xchg
mov
mov
pushf
mov
cmp
mov
inc
sub
fcoms
add
push
push
cmp
mov
add
pop
jecxz
fldenv
add
xor
sub
mov
repnz
out
inc
sbb
cmp
cwtl
cmp
outsb
mov
aas
js
add
sbb
es
mov
push
add
xlat
lret
fidivl
jecxz
xchg
mov
mov
dec
add
mov
lea
out
addb
adc
and
int3
mov
jo
add
push
stos
insb
mov
and
add
sbb
in
mov
push
ds
push
or
fisubrs
adc
push
shl
ja
loopne
push
jmp
sbb
cli
or
mov
cmp
and
mov
xchg
inc
aas
sbb
push
push
cmp
pop
push
mov
addr16
xor
lods
nop
adc
shr
mov
jp
mov
lcall
mov
addr16
xchg
movsl
inc
cmc
mov
or
out
ds
push
arpl
loopne
adc
std
scas
mov
or
xchg
es
mov
shll
addb
les
jb
outsl
or
jae
mov
les
fwait
std
bound
addr16
add
mov
inc
cmp
jl
jle
lock
imul
xor
repz
add
lret
stc
sbb
es
scas
iret
add
or
add
and
in
jl
jae
aas
push
fmull
bound
or
and
add
jae
xchg
test
ror
adc
cmp
shrl
stos
xor
repnz
sti
mov
lcall
push
lods
dec
loop
shlb
xor
ds
push
or
and
or
fdivl
popl
add
mov
xor
pushf
inc
inc
jp
adc
rclb
imul
xchg
dec
enter
sbb
mov
push
shll
jnp
add
or
nop
sub
adc
enter
xorb
repnz
sub
nop
push
xchg
lock
push
mov
inc
mov
fs
test
xchg
addb
sub
fcomps
enter
outsl
mov
test
and
and
in
adc
add
push
les
mov
mov
inc
xchg
fisttpl
sub
int3
or
mov
dec
test
pop
movsl
fdivp
cmp
inc
fisttps
adc
xchg
pushf
mov
adc
xchg
shlb
in
or
movsb
data16
and
adc
add
iret
mov
pushf
push
pop
push
sbb
pop
aas
insb
in
inc
inc
sub
push
mov
mov
dec
aas
mov
lds
sub
mov
jl
out
lret
jg
ret
push
enter
cwtl
mov
movsl
inc
xor
lock
iret
ja
pop
and
adcl
add
in
addb
add
add
repnz
inc
mov
xor
adc
bsf
test
add
dec
movsbl
imul
sub
test
and
xchg
xor
bswap
jmp
int
cmc
sub
mov
btc
mov
add
xchg
btc
adc
push
inc
mov
movzwl
pop
imul
xchg
adc
push
shld
mov
mov
pop
test
imul
shl
add
test
bswap
mov
add
xadd
repnz
add
bsf
adc
shl
add
lea
imul
test
sub
and
imul
adc
push
sub
add
jmp
pushf
not
imul
add
bts
adc
btc
add
jmp
in
btc
inc
push
push
adc
movzwl
repnz
mov
mov
not
add
bswap
xadd
mov
add
adc
test
repnz
inc
mov
rcl
push
push
pop
add
repnz
and
add
shld
repnz
add
movzwl
lea
inc
sub
test
shl
bts
push
push
dec
imul
cmp
pop
shld
btc
mov
mov
lea
shld
shld
add
shrd
bswap
xadd
xor
add
xadd
adc
mov
add
shl
xchg
inc
add
bswap
jmp
xchg
shrd
add
rcl
xadd
adc
add
test
inc
inc
add
movzwl
rcl
repz
adc
imul
mov
add
bsf
xor
mov
add
shl
test
mov
add
jmp
daa
cmp
btc
add
bt
lea
test
and
add
movzwl
inc
movzwl
add
lea
lea
repnz
inc
lea
btc
add
imul
mov
test
push
pop
add
xadd
neg
sbb
add
bsr
rcr
repz
rcr
bt
jmp
mov
add
sbb
rcr
jmp
mov
add
imul
mov
sbb
add
movswl
test
jmp
jae
ret
shll
xadd
test
add
jmp
push
dec
sbb
add
bsr
shrd
bt
add
sbb
bt
bswap
push
sub
add
xor
shld
xadd
add
lea
xor
xor
add
mov
lea
inc
add
lea
shl
imul
add
not
btc
xor
add
xor
shld
test
add
mov
mov
shld
add
bsf
mov
xchg
pop
push
push
push
add
mov
xchg
bt
add
shl
test
bt
sub
dec
mov
jmp
les
shl
enter
iret
mov
shld
sub
jmp
lods
bts
bts
sub
movzwl
not
mov
sub
mov
inc
and
sub
xchg
xadd
not
sub
lea
mov
repnz
add
jmp
or
shld
add
mov
dec
jmp
faddl
add
mov
imul
repz
shrd
inc
mov
popl
cmp
test
shrd
sub
cmp
lea
shrd
sub
xchg
inc
repnz
mov
mov
mov
sub
bsr
shld
xadd
sub
bswap
inc
bswap
sub
shl
xadd
imul
sub
bswap
and
test
sub
shl
jmp
fsubr
add
das
mov
add
mov
add
ljmp
lea
push
sub
jmp
mov
fisubl
iret
sub
and
and
jmp
sub
out
pop
add
add
stc
imul
shld
add
mov
and
test
mov
bts
test
bt
sub
and
bsf
and
sub
mov
inc
test
push
sub
imul
sar
bsf
add
shl
shld
shld
push
repnz
xadd
popl
and
lea
bswap
sub
repz
lea
sub
cmp
xadd
mov
sub
movzwl
test
inc
sub
bsf
lea
movsbl
sub
mov
shrd
shl
sub
bts
and
bts
sub
lea
movsbl
shl
xor
btr
shrd
bswap
add
mov
dec
sub
pop
sub
btr
mov
sub
push
shrd
sub
neg
pop
test
bswap
test
pop
sub
test
lea
btr
xor
test
mov
test
pop
pop
sub
adc
adc
lea
add
imul
btc
mov
pop
cmp
jl
jmp
jnp
les
scas
fidivrl
mov
add
repnz
bswap
add
bswap
bswap
mov
add
xchg
bts
btc
add
bsf
mov
btc
sub
test
inc
imul
pushl
or
mov
mov
pop
adc
xor
bsf
sub
test
mov
mov
sub
bts
test
mov
sub
btc
shl
test
add
test
xor
mov
pushl
imul
shld
imul
pop
and
jmp
cltd
not
add
shl
imul
bsf
sub
and
shl
imul
and
mov
sub
push
mov
push
add
btc
bsr
not
pushl
pop
sub
btc
xchg
mov
pop
push
add
sar
dec
mov
add
sub
bsf
lea
adc
pop
add
push
add
btc
shl
imul
mov
sub
xor
xchg
not
add
adc
mov
xor
mov
sub
test
inc
mov
add
inc
btc
mov
mov
sub
xchg
repnz
pop
add
pop
cmp
jae
inc
jne
jmp
sub
inc
jne
xor
or
not
bswap
push
lea
mov
mov
pop
bswap
test
shld
pop
pop
push
cmp
cmp
jmp
aas
pop
cmp
bt
xadd
dec
xor
mov
and
inc
push
mov
push
test
mov
bsf
pop
inc
mov
test
push
add
bsf
btc
rcl
add
sub
movzwl
bswap
test
push
pop
add
sbb
movswl
mov
mov
sub
repz
adc
mov
add
test
xadd
shrd
mov
sub
sbb
xadd
repz
jmp
mov
cli
bt
mov
sub
movswl
bt
imul
add
pop
add
mov
xor
sub
pop
dec
jne
sub
bts
xchg
xadd
pop
add
xadd
repnz
pop
sub
shld
rcl
xadd
xor
shld
and
cmp
sub
lea
movzwl
shld
ret
add
jne
arpl
push
clc
lahf
fiaddl
cli
movsl
fwait
mov
jbe
pop
std
xor
test
ljmp
insl
and
mov
push
sbb
mov
or
dec
rol
iret
in
lea
pop
inc
mov
pop
jo
ss
enter
hlt
gs
jmp
mov
loop
js
fisubs
rclb
push
pop
jl
push
xor
dec
dec
ja
add
xchg
fcomps
movl
mov
mov
scas
pop
mov
push
loopne
outsw
or
mov
addr16
cmp
fstl
repz
lds
inc
inc
inc
dec
insb
or
jle
les
mov
pushf
mov
outsb
xlat
je
sub
and
scas
int3
lods
bound
clc
jns
daa
and
pop
sti
push
xchg
xchg
popf
shlb
aam
or
add
push
cvttps2pi
ret
fnstcw
inc
test
mov
jg
std
xchg
inc
idivb
out
inc
inc
cmp
mov
push
cwtl
sbb
mov
out
mov
mov
gs
jg
jle
mov
orb
inc
aam
shll
jo
mov
jmp
lea
xor
push
or
lods
push
cld
dec
add
out
in
dec
inc
inc
leave
inc
gs
mov
sbb
test
pop
xchg
decl
mov
adc
and
movsl
pop
mov
sbb
cmc
jb
sub
push
add
rolb
and
pushf
mov
decb
int
pop
mov
cmp
jle
arpl
xchg
outsl
loopne
cltd
jg
mov
jnp
sbb
movl
subb
adc
mov
aas
add
popf
xchg
dec
stos
clc
and
shlb
push
adc
xlat
inc
sbb
loop
gs
lds
add
mov
push
xor
add
jcxz
xor
rorl
ss
movsb
out
lds
dec
mov
mov
add
and
xchg
data16
pop
add
push
or
jp
push
add
neg
lret
js
cmc
jg
jae
cltd
in
sub
test
loop
or
push
mov
add
cmp
call
les
pop
in
xor
scas
jecxz
imul
inc
ret
xchg
xchg
and
dec
mov
gs
push
jb
outsb
push
test
cmpsl
adc
sahf
and
or
or
and
jp
mov
sub
jmp
cli
outsl
call
cmp
push
insb
push
in
sub
jb
notl
insb
push
mov
fmull
pop
or
mov
adc
sub
jb
out
rcll
movsbl
fidivs
mov
ret
mov
add
pop
dec
mov
mov
lret
insl
out
out
out
clc
loop
and
into
dec
jge
cltd
adc
std
jbe
sbb
test
addr16
std
int
dec
xchg
mov
iret
rolb
push
and
sub
aaa
notb
push
lods
sbb
push
xchg
lods
mov
adcb
bswap
or
pop
push
sbb
fwait
scas
xor
popa
call
mov
scas
adc
dec
push
push
lcall
lods
and
mov
shll
pusha
xlat
mov
jbe
pop
sbb
xchg
dec
mulb
dec
mov
adc
xor
pushf
push
mov
lea
ror
push
jno
push
xor
or
xor
add
clc
or
adc
pop
push
icebp
shrl
fcmovbe
in
add
stos
cmp
fnstenv
lret
test
mulb
xor
or
or
ljmp
sar
in
lret
jge
add
shlb
ret
ficompl
mov
dec
jge
popf
stc
mov
mov
popa
push
dec
push
xchg
inc
pop
dec
sbb
aaa
inc
jne
lret
loope
mov
add
adc
push
add
ret
cmp
repz
lds
jns
dec
pop
rorb
insb
lahf
cmp
inc
and
and
sub
adc
mov
test
mov
xchg
mov
test
jp
adcl
out
xchg
add
notb
les
rorl
addr16
adc
and
sub
outsb
mov
sub
xor
das
pusha
sbb
adc
cmc
sub
mov
dec
pop
ret
add
cltd
das
cli
and
fucomi
rclb
sbb
pop
mov
mov
fwait
sub
mov
add
and
adc
and
in
xchg
mov
jne
outsl
dec
adc
xor
jnp
mov
imul
jne
nop
xor
rolb
in
call
pushl
fcomi
mov
cmp
mov
fiaddl
pop
fistps
insb
fdiv
cmp
test
cmpsb
xor
lret
add
pop
mov
pop
pop
data16
push
decl
or
or
rol
cmpsb
cmp
inc
fsubp
stos
jg
roll
cmp
cmp
jp
sarb
cwtl
test
int
adc
dec
adc
pop
adc
loope
out
xchg
dec
ds
out
xlat
ljmp
jg
cmp
inc
mov
push
sbb
mov
addl
stc
mov
sbb
hlt
push
sbb
dec
inc
addb
ds
shlb
adc
mov
xchg
dec
pop
sbb
incb
notb
neg
stc
xchg
xor
mov
jmp
cmp
and
inc
mov
sbb
ja
gs
mov
pop
inc
in
dec
dec
mov
xchg
jns
dec
cmp
mov
fwait
inc
fwait
stos
je
sub
lods
cmpsl
call
adc
xchg
roll
adc
sub
out
cmp
stc
mov
xor
jge,pt
xor
mov
sarb
add
aam
mov
ja
cld
push
add
ret
clc
push
sarb
bnd
xor
jecxz
cltd
cltd
cmp
into
pushf
mov
dec
lods
pop
ficoms
mov
jo
arpl
jno
loop
push
push
sbb
mulb
mov
enter
xchg
xchg
test
jae
ret
jle
and
sti
popa
sub
mov
sbb
jbe
jle
xchg
or
fstps
mov
cmp
aad
pusha
aam
insl
fsub
fs
test
andl
aaa
mov
xchg
sub
add
ret
pop
lea
sbb
out
xor
adc
pop
bound
cmpsb
push
ds
shll
mov
dec
mov
xor
ror
aad
frstor
xchg
repnz
fsts
popl
in
jmp
rcrl
mov
and
sub
push
pop
mov
add
adc
pop
test
sbb
lret
mov
mov
pop
aas
insb
xchg
ss
mov
enter
das
xlat
les
outsl
fidivrs
imul
xchg
dec
fnstcw
cmp
sub
cwtl
mov
push
dec
sub
xchg
call
jl
push
lret
insl
lock
inc
or
xchg
mov
hlt
lods
pop
mov
rorl
movsb
je
or
js
pop
popa
loopne
dec
jne
mov
inc
xor
cld
rorb
out
sub
repnz
jo
lret
or
inc
out
jle
jbe
in
div
pop
fsubrs
dec
sbb
out
lret
mov
sbb
jl
mov
mov
and
sbb
out
cltd
repz
jl
dec
shl
ja
loope
and
daa
inc
clc
shll
or
push
inc
xlat
inc
les
adc
cmc
push
cmc
aam
mov
inc
call
pop
mov
pop
jg
repnz
pop
xchg
data16
jns
mov
cs
fcmovb
jnp
cmpsl
mov
xchg
mov
outsb
jg
lahf
pop
out
mov
push
push
repz
lahf
sub
lods
fidivl
dec
gs
mov
lock
push
pop
sti
test
movsb
xchg
and
test
sub
push
dec
mov
xor
add
jnp
scas
out
mov
call
cmp
xchg
xchg
insb
mov
mov
stc
dec
cmc
fwait
mov
or
jbe
int
dec
daa
lret
or
je
jecxz
xchg
inc
mov
in
jl
xor
push
and
je
cmpsl
mov
sbb
add
loop
or
nop
cmp
lret
in
in
lret
push
xchg
testb
inc
mov
mov
and
addl
iret
ret
ja
inc
pop
test
cmp
dec
inc
cmp
mov
dec
mov
push
lahf
pop
bound
sbb
xchg
jbe
jecxz
xor
fistl
repnz
popa
enter
or
push
js
out
or
sbb
and
out
dec
les
fbstp
sub
mov
hlt
mov
and
sbb
mov
push
add
loop
loope
push
mov
pop
insl
adc
cmp
xchg
das
mov
push
cmpsb
sbb
cltd
sub
jnp
bound
sub
stos
scas
lds
mov
pop
in
in
nop
sub
mov
xorb
insl
mov
cmp
inc
sub
inc
mov
fs
subl
mov
pop
scas
xchg
popf
hlt
ss
adc
inc
dec
mov
cmp
je
cmc
mov
sub
js
cmp
inc
dec
bound
sbb
dec
stos
imul
call
xchg
push
xchg
outsl
mov
ficoms
arpl
xchg
icebp
and
js
lcall
lret
out
testl
lock
sarl
lahf
add
pop
fldln2
push
xchg
dec
lods
movsl
cltd
call
addr16
jmp
jp
lods
rcrb
mov
ss
inc
push
imul
mov
cmp
imul
outsl
repnz
pushl
push
ss
push
fldenv
sbb
dec
shl
pop
sbbb
mov
pop
mov
cli
pop
sbb
cmc
popl
jae
adc
add
aad
push
repz
imul
aam
das
add
jns
cltd
inc
test
sbb
cmpsb
inc
adc
xor
push
adc
lret
movsl
push
loopne
fistpll
std
pop
fcompl
mov
outsb
imul
ffree
or
sbb
dec
xchg
bound
and
je
pop
ret
ljmp
sahf
or
dec
add
dec
subb
negl
insb
iret
add
cwtl
ficomps
test
mov
jo
test
insb
int
jp
sub
xor
int3
push
jns
daa
out
into
jo
push
jmp
push
arpl
push
cmp
pop
out
loopne
mov
adc
inc
push
lret
xor
das
daa
ss
mov
dec
aam
sbb
dec
lods
or
mov
fsts
movsb
orb
dec
popa
adc
mov
ja
adc
xor
dec
mov
mov
mov
mov
loopne
pushf
add
and
push
mov
xor
pushf
stos
mov
ret
mov
mov
jne
xchg
das
sti
jle
mov
pop
cwtl
repnz
fisubrs
mov
mov
fsubs
mov
cmpsb
jns
movsb
cwtl
or
xchg
stos
push
loope
and
lock
inc
xchg
xchg
push
mov
clc
fldt
stos
nop
movb
mov
xchg
cli
ja
inc
loopne
sub
dec
mov
xchg
pop
sub
sbb
cmp
adc
int3
stc
push
outsl
push
and
mov
inc
mov
inc
or
xchg
enter
push
icebp
cmp
xlat
mov
imul
ds
xor
clc
pop
adcb
add
push
jl
in
loopne
jg
arpl
inc
nop
push
mov
jl
nop
out
call
loop
pushw
and
aas
pop
pop
loop
lret
sub
fiaddl
arpl
lods
ret
sarl
inc
push
mov
addr16
mov
pop
cmpsb
push
mov
shlb
scas
sbb
mov
dec
or
sar
scas
imul
je
test
inc
andb
pop
nop
mov
jmp
es
pop
inc
dec
sbb
and
cmpsl
shll
shlb
xor
xchg
dec
mov
xchg
movsl
and
mov
iret
pop
or
inc
movl
push
int
shl
test
inc
ficomps
shll
lods
mov
xor
pop
test
ljmp
and
loope
push
add
lods
cli
push
pop
jge
fstpl
call
leave
adc
mov
sbb
jbe
push
lcall
mov
jae
das
fsubrp
pop
add
out
fisubrs
rolb
insl
scas
psubd
xchg
in
adc
sbb
sti
call
imul
jbe
pusha
lret
test
mov
repnz
and
imul
fsts
cmp
daa
push
je
cmpsl
adc
pop
pop
mov
sub
cmp
xor
push
xchg
cmpsb
rorl
fwait
pop
gs
inc
fstl
in
mov
jmp
int
mov
push
lret
dec
scas
aaa
adcl
mov
add
push
lock
lock
aam
scas
je
rol
outsl
jmp
lock
lea
mov
cld
push
popf
into
mov
dec
pop
inc
cwtl
adc
or
inc
mov
sbb
cmp
test
popa
lcall
jecxz
out
jp
mov
xor
jne
mov
add
int3
pushw
scas
jmp
frstor
subl
mov
repz
stc
xor
push
push
call
inc
push
insb
imull
addr16
hlt
ds
roll
aas
inc
mov
or
cmpsl
mov
stos
stc
cltd
mov
outsb
in
arpl
mov
fistpll
cmp
jne
stos
cmp
leave
outsb
ss
in
pop
loopne
outsl
fbld
push
xchg
aaa
push
ja
sbb
icebp
jnp
loop
and
gs
jo
test
scas
xor
repz
stos
pop
arpl
adc
push
cmp
cltd
ffreep
sub
push
push
adc
shll
jg
movsl
mov
imul
sbb
mov
scas
mov
adcb
sub
neg
cmp
jae,pn
mov
dec
xor
fisttps
pop
dec
clc
mov
subl
mov
jno
cmp
test
sbb
cmp
xchg
jbe
loopne
arpl
or
push
adc
and
xchg
pop
mov
or
addl
je,pt
dec
hlt
sbb
cmp
lea
dec
rcll
inc
push
in
sbb
outsb
movsl
mov
js
mov
dec
jl
movsb
lahf
add
out
mov
push
setnp
into
data16
rol
iret
pop
imul
push
aad
test
adc
adc
lock
push
xchg
cmpsl
enter
adc
xor
imul
ss
xchg
popl
ja
addr16
add
jg
mov
xchg
inc
pusha
jge
push
cmc
repnz
jge
add
test
pop
push
pop
repnz
nop/reserved
jmp
negl
dec
adc
push
sbb
cmpsl
xlat
xchg
mov
aas
jle
adc
add
fldl
inc
dec
fwait
loop
int3
fsubrp
flds
dec
fwait
or
dec
mov
dec
and
xchg
mov
mov
xor
xchg
or
xor
in
inc
lret
adc
int3
pop
push
inc
jb
fldl
xchg
mov
and
cmpsl
mov
mov
jno
hlt
ss
scas
cld
adc
lods
jbe
adc
xor
mov
hlt
jns
xor
pop
in
mov
incl
dec
xor
movb
cld
cmpsl
data16
pop
mov
jl
xor
xlat
flds
call
subb
xor
das
dec
lcall
aad
rep
mov
mov
arpl
int3
das
aaa
cmc
pop
repz
dec
add
aam
fcomps
stos
mov
mov
aad
adc
sbb
fs
mov
fcoml
fmull
mov
sbb
push
fwait
cli
out
add
lods
cltd
incl
test
mov
cmc
and
dec
xchg
jg
lret
into
pop
xchg
rolb
adc
inc
jp
fs
mov
push
cli
and
hlt
in
sub
xor
adc
mov
mov
andl
inc
ret
pop
lods
or
push
daa
mov
jbe
xchg
dec
xlat
xchg
adc
inc
test
sub
frstor
and
outsb
in
push
cld
jnp
xchg
jle
sub
mov
adc
mov
dec
outsb
cli
imul
jp
add
popa
jo
add
gs
loop
pushf
push
xchg
or
push
int
jle
mov
xor
bound
aaa
jp
xchg
bound
mov
dec
int
cmpsl
icebp
sbb
repnz
adc
jne
out
lret
jno
and
adc
mov
out
cmp
mov
aad
xor
stc
mov
xor
mov
sbb
inc
mov
sbb
out
mov
inc
pop
ret
pop
dec
sub
pop
mov
pushf
cs
bswap
xor
mov
out
cmp
mov
pusha
mov
loopne
cmp
xchg
lret
das
scas
and
dec
inc
jno
repz
mov
xor
jnp
movb
pop
into
xchg
aam
or
sbb
faddl
out
scas
adc
lea
jne
idivl
sbb
arpl
adc
aad
xchg
gs
sub
out
insb
mov
je
or
lock
cld
adc
push
shrl
push
in
cli
mov
sub
sbb
arpl
pop
xchg
sbb
cmp
jo
test
mov
mov
push
aad
das
testb
and
popf
push
mov
out
adc
stos
out
in
int
or
inc
push
aad
push
jne
or
jmp
dec
bound
inc
leave
out
into
inc
and
jo
and
scas
aad
sahf
push
pusha
mov
inc
mov
mov
ret
push
mov
ljmp
fidivl
shlb
sub
aaa
sub
loope
add
adc
sbb
insb
lret
cwtl
mov
and
aam
pop
pop
adc
cmp
cmpsl
cltd
jecxz
fcomps
jmp
mov
je
jp
jno
and
decb
jae
insl
sub
out
out
mov
cmpsl
push
sub
mov
cmpsl
adc
pop
das
out
mov
mov
pushf
das
sbb
mov
fiadds
mov
insl
mov
in
sbb
push
aaa
jne
jo
repnz
notb
or
bswap
gs
or
clc
insl
fld
jb
jae
rcrl
pop
inc
inc
pop
cld
aaa
aam
cs
shll
jp
mov
cmp
mov
aam
enter
pop
cs
ret
mov
mov
fildl
nop
mov
dec
mov
xchg
push
jmp
movsl
dec
ja
sbb
jno
adc
movsl
pop
xchg
and
out
test
add
mov
shll
sahf
sbb
out
inc
cld
and
lods
or
dec
jg
je
or
inc
cmp
xor
int3
mov
es
sahf
sbb
std
jmp
ja
mov
fisttps
call
cltd
clc
out
dec
jns
cmp
call
mov
xchg
pop
aaa
xchg
sbb
icebp
inc
lds
inc
insb
lfs
cmp
add
jp
mov
das
sub
cmp
jo
xor
xor
shll
pop
test
mov
push
add
push
pop
inc
in
add
jnp
pusha
lea
into
xor
push
testb
insb
sbb
inc
push
push
lcall
out
jg
jo
rclb
inc
movsb
xchg
daa
or
sti
or
mov
out
sbb
jge
ret
mov
in
dec
adc
je
push
loop
addb
out
mov
add
cld
jg,pt
lods
shll
pop
push
ficompl
fbld
inc
xchg
adc
xor
mov
push
fidivl
out
mov
inc
std
inc
push
xlat
sahf
arpl
movsb
aaa
add
faddp
sub
adc
inc
and
sbb
mov
repz
pushf
mov
outsl
in
jmp
shlb
mov
add
test
mov
loope
movsl
dec
xlat
fistpl
and
push
xor
xor
jae
and
bound
cli
outsl
fidivl
imul
jp
jecxz
add
mov
pop
lret
iret
and
es
aad
sub
adc
daa
push
pop
adc
mov
mov
xor
jno
loopne
mov
push
mov
movsl
arpl
lret
push
test
cli
loopne
ret
repz
test
lods
dec
mov
in
push
or
or
shll
out
in
iret
leave
add
pop
fistl
roll
push
sbb
xchg
jp
xchg
sti
loop
ret
sbb
subl
push
mov
or
repz
outsb
addl
stc
and
or
jmp
inc
fmuls
mov
dec
sub
ds
jb
testl
in
sub
lret
xor
push
movsb
xchg
popa
inc
push
sbb
stos
arpl
lock
jg
mov
xchg
sub
dec
cmc
adc
sub
pusha
push
fsubrl
in
cmp
pop
jno
shlb
push
mov
or
jge
add
pop
or
bound
sbb
and
mov
xor
lret
shrl
jne
push
sbb
test
fs
xor
xchg
loop
mov
inc
xchg
inc
sub
inc
or
xorb
add
push
nop
add
lret
xchg
adc
inc
sub
je
xor
cmp
loope
sub
jno
inc
jb
dec
je
xlat
movsb
es
sbb
scas
xchg
sub
cmp
pop
pop
dec
imul
jp
mov
sbb
orb
xchg
cli
mov
mov
jle
add
inc
or
push
pop
xlat
add
pop
out
or
xchg
in
xchg
xorl
xchg
push
sub
ds
movsb
dec
lahf
jno
sbb
popf
jg
sub
xchg
jb
sub
in
mov
push
movsb
mov
cmp
repz
jl
sub
mov
outsl
pop
pop
neg
sti
mov
outsl
push
push
adc
pop
mov
xor
sbb
aad
jl
fildll
jno
stos
xchg
das
test
mov
into
add
in
in
enter
fiaddl
push
xor
fildll
sub
mov
jbe
adc
dec
cmp
out
jb
jbe
mov
mov
xlat
jae
push
inc
push
xchg
jecxz
lods
sbb
dec
in
bound
in
test
leave
jb
sahf
xchg
sti
sub
in
xor
pop
sar
imul
xor
push
in
and
push
and
clc
and
ret
cmp
jp
out
jl
lret
or
cmc
cmp
jbe
dec
sarb
jge
pop
jle
dec
mov
jae
xor
mov
or
mov
lcall
inc
pop
idivl
pop
push
xchg
add
lcall
sub
pop
cmp
add
lcall
movsb
in
xchg
call
cmc
and
dec
mov
and
into
mov
sbb
xor
jne
sbb
movsl
icebp
xor
ret
xchg
aaa
mov
jle
jno
sbb
insb
in
add
test
nop
push
mov
xchg
mov
fwait
div
sbb
push
inc
je
dec
xor
sti
sbb
add
ret
test
inc
in
nop
cmp
je
adc
xchg
xor
xor
outsb
cmc
stc
icebp
aas
cmpsb
sub
add
jl
je
jo
mov
adcl
idivb
cwtl
mov
imul
push
and
mov
pop
mov
jno
jo
orb
popf
pop
dec
daa
jnp
ja
mov
adc
cmp
pop
mov
rcrb
xchg
das
std
repnz
mov
mov
stos
push
pop
push
add
loop
push
and
jecxz
pop
repnz
adc
sbb
in
and
stos
psrlq
mov
movsl
add
das
mov
pop
cmc
test
and
cmpsl
pop
add
xlat
xor
pop
outsl
push
lret
test
mov
add
repz
cmp
pop
scas
and
imul
xchg
fwait
int3
ret
sub
cmp
repz
jmp
inc
add
mov
stos
out
leave
add
add
sarl
xor
jns
rcll
fsubs
stos
inc
adc
dec
sarb
push
xchg
push
lods
and
push
adc
popf
xchg
inc
imul
push
enter
cmp
add
lods
lahf
lahf
xor
xor
push
pop
test
mov
repnz
stc
mov
mov
jns
imul
push
jge
test
sahf
xchg
push
idivl
mov
inc
ds
cmpsb
push
inc
mov
xor
jo,pn
jle
mov
or
ljmp
push
dec
xor
das
dec
lea
mov
push
cmp
sbb
aas
cmc
ret
mov
or
pushf
stos
add
imul
out
mov
push
or
adc
add
add
ret
push
jg
aam
dec
xor
sbb
outsl
rcrl
jnp
adc
and
dec
jecxz
lock
push
gs
fcomp
inc
push
xchg
jns
jp
push
jmp
test
push
dec
mov
sbb
subb
imul
rorb
push
cmp
pop
fmul
in
imul
mov
jle
or
lea
scas
cmpsw
mov
bound
fildl
lods
push
into
test
pop
inc
test
fwait
nop
mov
sahf
jecxz
mov
lock
je
sbb
lods
jg
xchg
fmull
test
enter
mov
frstor
xchg
rol
mov
pop
xor
arpl
orl
push
mov
mov
cmp
pop
push
or
xchg
add
loope
xchg
repnz
cmpb
and
fcomip
adc
xor
jg
shlb
xor
dec
sti
fwait
leave
xchg
mov
into
mov
add
mov
arpl
rcll
aad
das
lods
or
cmp
jge
je
sub
andl
and
jg
div
lock
imul
mov
dec
nop
inc
mov
call
hlt
xor
push
inc
push
mov
push
jns
clc
xor
xchg
cmp
xor
xor
inc
mov
outsb
shll
ljmp
xorb
cmp
sub
stos
adc
xor
mov
movsl
adc
push
lea
push
sbb
jle
je
aad
pop
xor
add
xorb
mov
sar
mov
into
popa
in
decl
or
mov
arpl
cmp
mov
dec
cld
pop
lret
lahf
mov
shl
testb
xor
inc
imul
repnz
mov
push
bound
or
inc
push
and
insb
add
push
ret
pop
popf
pop
push
daa
mov
aaa
cs
adcl
clc
js
jle
jo
pop
pop
sub
push
scas
imul
outsl
rorl
pop
xor
xchg
enter
outsl
test
push
aad
in
mov
lds
dec
adc
shlb
xchg
inc
sub
repz
xchg
outsb
das
flds
or
repnz
aas
data16
sub
out
pop
xchg
pop
add
sbb
xor
or
inc
lds
das
mov
movsl
insl
and
aad
movsb
pushf
inc
cmp
in
xchg
xchg
mov
and
xchg
int
call
nop
jmp
push
mov
mov
inc
ss
adc
in
xchg
xchg
cmp
loop
sbb
lods
sbb
and
pop
frstor
adc
mov
push
push
dec
cmp
sbb
sub
dec
jle
dec
mov
jns
cli
cmc
repnz
js
pop
sahf
dec
xchg
pop
add
imul
sub
cs
push
iret
js
int3
push
les
sub
ret
xchg
outsb
mov
dec
push
cwtl
outsl
adc
pop
mov
cs
iret
int3
pushf
lods
dec
std
hlt
dec
inc
insl
bound
cmp
xchg
sub
jecxz
lea
mov
ja
mov
pop
or
loop
xchg
and
rol
fiadds
xchg
dec
dec
add
arpl
pop
adc
jb
jne
pop
push
dec
lea
out
xchg
mov
jmp
dec
dec
loope
inc
in
mov
stos
jae
add
mov
pop
sub
inc
insb
xchg
notl
andb
cmp
mov
mov
popa
push
movsl
aaa
rorl
sbb
mov
pushf
dec
mov
sbb
inc
sub
lds
xchg
loope
add
add
push
test
mov
jmp
push
fs
daa
jbe
sub
sahf
mov
or
ret
iret
sub
lea
pop
jp
jecxz,pt
inc
pop
fdivrl
dec
subl
stos
mov
fwait
mov
dec
pop
jne
dec
popa
push
cmp
mov
jl
fsubs
pushf
sub
cltd
xchg
pop
push
pop
xor
mov
xor
cmpsl
inc
das
daa
dec
stos
or
flds
fcoml
xchg
insb
mov
mov
jmp
cmp
adc
dec
fpatan
cmp
xchg
clc
lods
jmp
push
sbb
pop
filds
adc
fisubrs
jbe
int3
xchg
in
and
repz
cli
hlt
imul
jp
stos
and
jmp
sub
push
mov
xchg
dec
rorl
cmpsb
push
mov
inc
xchg
push
std
leave
out
ss
lret
mov
fists
outsb
xchg
std
adc
pop
aas
int3
aas
pop
pop
mov
xchg
pop
inc
mov
sub
add
das
sbb
into
and
inc
repz
mov
lods
test
lea
mul
gs
ret
pop
ficoml
scas
and
enter
out
cmp
rolb
test
clc
out
imul
lret
aas
shrl
inc
adc
lock
filds
js
pop
fcmove
adc
add
cltd
and
in
xchg
inc
fs
push
xchg
jo
jnp
ljmp
xchg
sub
adc
dec
cmp
lahf
xchg
or
jge
xchg
aad
aas
testl
and
inc
mov
insb
fcomi
xchg
rclb
popw
stos
icebp
fldl
pusha
dec
inc
ret
xor
jne
mov
add
adc
mov
sbb
sbb
mov
sbb
mov
sti
int3
inc
jne
ret
jns
sbb
stos
in
hlt
xor
push
cmpsb
or
pop
shrl
pop
cmc
fcmovb
leave
mov
jo
mov
mov
out
imul
inc
movsb
in
addl
mov
into
ret
inc
mov
adc
movsb
sbb
cs
and
imul
xor
inc
pop
push
cmp
lahf
js
aaa
movb
rcll
mov
jno
in
loopne
mov
dec
add
aas
push
inc
mov
imul
pop
ds
sbb
mov
cmp
pop
add
or
int
aaa
daa
jno
dec
mov
test
xlat
stos
mov
xor
orl
xlat
mov
mov
repnz
aam
mov
jae
mov
in
push
movsl
dec
jmp
repnz
adc
jecxz
data16
pop
sub
sbb
pop
jmp
rorb
mov
loop
ss
cmp
add
pop
inc
call
add
push
add
lahf
int
sbb
imul
addr16
xor
sarb
sub
sub
jbe
loop
cmp
outsb
imul
cmc
insb
jne
cmc
outsl
iret
add
es
pop
pop
or
bound
or
cld
in
inc
out
dec
cmp
bound
push
std
xchg
xchg
inc
cs
sub
shlb
pop
pop
xor
mov
pop
push
lods
or
jb
outsl
ret
mov
dec
pop
rorl
push
push
sbb
dec
popf
sub
and
xor
je
mov
push
or
or
xchg
add
movsb
pop
div
xor
iret
mov
or
xchg
scas
push
mov
jecxz
cmc
sbb
mov
jne
adc
mov
and
mov
push
fmuls
stc
sbb
int
cmp
mov
fadd
sub
leave
lret
fcmovu
sub
repz
xor
jb
adc
xchg
pop
xlat
adc
repnz
mov
jg
mov
ss
push
ror
fcoml
or
cmpsb
cwtl
xchg
leave
aam
pop
dec
scas
xchg
cmp
mov
sub
and
popa
divl
roll
cmp
add
pop
call
mov
mov
ss
xchg
dec
jg
call
inc
sahf
inc
dec
cld
cmpsb
mov
insb
xchg
dec
xchg
fisubs
fimuls
imul
les
nop
sbb
pop
js
out
lahf
pop
jno
dec
add
jp
xchg
js
lret
xor
cmp
divl
in
mov
cs
push
rcr
add
xor
pop
jo
mov
aaa
cmc
or
pop
mov
add
push
lods
mov
outsl
lcall
inc
cs
insl
sub
mov
lock
rorb
div
sub
sarl
mov
jmp
xchg
clc
push
data16
mov
test
add
inc
mov
dec
aas
adc
cmc
dec
loopne
jl
dec
push
jno
mov
in
cmp
popf
js
imul
jbe
jo
xchg
sub
pushl
push
mov
jecxz
lahf
lahf
add
mov
dec
adc
inc
dec
subb
pushf
js
xor
inc
mov
fbstp
add
imul
push
popa
cltd
fs
push
jo
mov
add
xor
pop
mov
mov
mov
add
add
in
and
stos
push
mov
adc
cmp
xor
push
cld
jns,pn
add
nop
push
mov
fdiv
jo
cmp
in
mov
push
and
pusha
fildll
enter
outsl
lock
xchg
jb
repnz
mov
mov
adc
outsl
adc
out
mov
add
outsl
mov
cli
mov
imul
push
outsb
fs
test
pop
nop
inc
scas
adc
daa
mov
pop
cwtl
inc
mov
sub
aad
test
add
xchg
popa
mov
xor
inc
and
jns
pop
lock
cld
jmp
and
icebp
jg
jb
insl
ljmp
arpl
push
out
movups
mov
cmp
dec
mov
dec
ficoml
pop
movsl
stos
cltd
popa
movsl
mov
and
lods
ret
lcall
xor
fdiv
xor
js
je
add
stos
inc
or
jno
xor
dec
mov
xchg
add
push
movsl
cmpsb
cmp
mov
sbb
popa
inc
mov
call
and
cmpb
jno
arpl
sub
mov
xor
mov
pop
int3
adc
ds
out
or
push
jp
push
fxch
sub
mov
adc
push
cmp
or
pop
sub
ficomps
pop
aad
leave
loope
out
imul
ret
enter
xchg
mov
pop
sbb
addr16
add
jns
jle
test
inc
into
jp
repz
push
stos
jo
test
pop
in
ret
cmpsl
stos
rol
xchg
lds
ja
jb
inc
and
adc
sahf
dec
arpl
leave
cmp
ljmp
push
fwait
mov
into
rcll
fcoms
gs
js
sbb
jb
sbb
push
mov
pop
xchg
js
and
xor
mov
jae
jbe
fildl
js
popf
stos
fcoml
xchg
or
push
cmp
cmp
cmpsl
ret
in
pop
les
in
es
iret
pop
not
xlat
lret
cmp
inc
daa
dec
div
sbb
cmp
icebp
cmc
clc
dec
lds
pop
mov
xchg
push
leave
les
sarl
sbb
loop
dec
movsl
push
es
lods
adc
clc
add
stos
inc
sbb
and
jmp
mov
aas
rcr
pop
adcl
aas
xor
test
ret
sub
fnsave
das
repz
cmpsl
mov
jg
push
or
and
dec
push
xchg
inc
add
xchg
loopne
xor
test
xchg
inc
fs
fwait
sub
test
pop
repz
adc
push
loopne
aam
dec
cmp
jo
jmp
mov
xor
dec
shl
incb
mov
arpl
imul
clc
outsb
sti
jp
scas
out
jle
and
cmp
clc
inc
nop
push
mov
mov
cmp
arpl
inc
ds
aaa
jl
pop
mov
fwait
xor
test
pusha
jno
xchg
jno
pop
ds
jnp
sub
je
mov
test
lods
repnz
cld
xchg
cld
cmp
and
or
inc
inc
push
leave
inc
push
dec
mov
hlt
xchg
shl
mov
rolb
ss
es
adc
loope
jmp
rclb
data16
xor
xchg
and
add
push
repz
dec
mov
das
cld
decb
mov
fisubrs
cmpsb
add
and
iret
call
cmpsb
pop
ljmp
test
mov
andb
xchg
pusha
jl
addr16
lods
or
scas
mov
arpl
test
mov
stos
lcall
test
mov
sub
movsl
les
and
in
inc
push
mov
pop
out
add
and
in
mov
cli
jno
mov
fmull
xchg
push
call
xchg
xorl
push
mov
inc
out
imul
stos
sub
cmp
mov
je
cld
inc
pop
xor
popa
outsb
int
repz
mov
inc
scas
icebp
dec
jmp
shll
ljmp
in
xchg
jg
into
sahf
mov
das
rol
arpl
decl
xchg
cmp
sti
les
pusha
lret
jle
pop
cmp
fs
mov
les
out
fimuls
popa
push
sbb
sahf
out
rol
dec
lret
jecxz
cmp
inc
push
sub
mov
lods
addr16
add
dec
sbb
sub
push
divl
sbb
inc
mov
sbb
inc
repnz
mov
lahf
xchg
sahf
push
iret
sub
das
mov
mov
and
mov
mov
std
pop
addr16
mov
cwtl
sar
outsb
pop
repz
out
test
adc
cmp
les
cmp
addr16
loope
push
setae
orb
dec
scas
ja
xchg
xor
xor
xchg
stos
inc
fst
fldt
mov
xchg
out
pop
add
jmp
dec
push
xor
pop
fstl
mov
flds
xchg
jmp
xor
jecxz
leave
dec
ret
mov
cmp
cli
popa
test
mov
mov
inc
daa
rcl
mov
shr
out
sar
inc
decb
sbb
jge
dec
notl
pop
hlt
sbb
mov
es
xchg
ja
mov
mov
adc
stos
rcl
scas
pop
cmc
mov
inc
je
fidivrl
or
xchg
pop
pop
pop
pop
leave
fmull
jp
les
mov
clc
jne
sbb
in
inc
lds
sub
into
xchg
ret
popa
imul
scas
push
sbb
je
pop
push
mov
jl
lock
test
jnp
jp
into
cmp
jbe
into
pop
xor
push
loop
jbe
sbb
bound
cltd
sub
mov
mov
scas
cwtl
sbb
jmp
mov
sar
addr16
aad
stos
cmp
cmpl
mov
xchg
inc
xor
xor
loope
jne
aad
inc
sbb
add
mov
mov
rorb
das
test
push
add
stc
xchg
repz
dec
inc
cmp
adc
out
ud2
xlat
dec
icebp
insl
jnp
and
mov
or
cmpsb
xchg
push
sahf
clc
cmp
out
sbb
dec
cmpsl
jge
mov
call
push
xchg
sbb
push
mov
mov
jge
sub
pop
data16
mov
mov
in
stc
gs
sahf
stc
mov
shll
xor
ljmp
add
xchg
sbb
cmp
shl
stos
sbb
mov
sub
rclb
inc
fldl
adc
xchg
jbe
mov
and
inc
rcll
dec
lahf
jno
push
pop
inc
mov
sbb
clc
jg
mov
jl
jle
xchg
into
test
adc
lods
mov
in
adc
in
shlb
out
lea
loopne
dec
inc
filds
sub
ror
movsb
adc
movsb
and
fmuls
inc
test
dec
into
ret
fsubrl
jne
cmp
insl
jno
xchg
fidivs
cmp
leave
jecxz
scas
popa
loop
sub
clc
ja
leave
pop
data16
test
mov
inc
cmp
stc
add
mov
pop
outsb
and
xchg
adc
mov
stc
dec
push
enter
ret
pop
lods
mov
push
js
jbe
les
popa
jmp
jno
add
sub
test
sbb
mov
jecxz
gs
mov
icebp
dec
je
js
test
mov
mov
pop
mov
jg
inc
add
repz
stos
ljmp
js
mov
inc
add
mov
pop
sarb
lret
adc
les
or
mov
add
mov
or
fucomi
pushf
dec
sub
out
or
rclb
adc
nop
mov
jno
mov
pop
mov
xchg
xor
cmpsl
enter
and
adc
or
int
negl
sbb
test
dec
cmpsl
mov
scas
insb
fbstp
loope
or
mov
xor
ss
clc
sbb
adc
lods
je
insb
es
pop
xor
clc
int3
mov
roll
daa
jbe
jg
adc
or
cmpsb
in
hlt
imul
pop
and
mov
xchg
in
push
pop
cwtl
sub
xor
mov
insl
pop
xchg
ret
in
mov
das
cli
imul
loopne
jmp
adc
mov
ret
mov
movsb
sbb
neg
push
adc
or
push
xor
cmpsb
push
jae
pusha
sub
fcmovnu
mov
pop
jge
add
repnz
outsb
sub
shlb
cmc
jmp
mov
dec
pop
dec
out
fs
or
xchg
fcom
push
in
movsb
jmp
or
mov
test
lret
data16
jno
xchg
push
mov
jmp
lret
cli
aam
pop
add
and
aas
push
imul
xchg
test
test
ds
mov
jne
sub
adc
out
cmpsl
xchg
xchg
sti
jb
insb
cwtl
insb
lock
retw
mov
addr16
sahf
jnp
xchg
xchg
and
dec
hlt
aad
inc
mov
ret
popf
ret
ljmp
and
dec
push
push
loopne
push
pop
lahf
movsb
jns
sbb
mov
fs
repz
sub
add
call
dec
scas
cmc
dec
int3
stc
js
add
inc
pop
imul
sub
or
sub
push
push
push
and
inc
aad
jb
lret
xchg
stc
loope
int3
jnp
cmp
in
fwait
push
sub
gs
fwait
add
int3
mov
bnd
dec
fidivrl
ror
mov
cmp
or
in
mov
adc
adc
and
mov
jge
cltd
sub
push
repz
sub
xorl
pop
pop
or
pop
sub
xorl
mov
fwait
scas
pop
rol
inc
or
lcall
sub
into
sub
jnp
or
adc
lea
fisubrl
adc
cmp
jmp
jno
daa
loop
out
std
out
imul
xchg
mov
out
cwtl
insb
ss
js
sbbl
out
mov
mov
mov
lock
fadd
push
lods
cmp
ficoml
push
test
cs
iret
or
push
icebp
scas
aam
mov
cmp
inc
cmc
mov
xchg
and
jns
jmp
mov
pushf
dec
cld
fcomps
xchg
mov
rclb
aas
add
xchg
fiaddl
xlat
ljmp
dec
sub
xorb
iret
mov
xor
xchg
popa
cld
outsl
push
mov
in
lret
xchg
jns
xor
jnp
jecxz
and
adc
push
std
outsb
inc
stos
mov
movsl
mov
adc
stos
imul
mov
and
inc
movsl
ljmp
popf
mov
into
imul
mov
aas
cmpsl
addr16
jb
lods
fwait
ja
adc
icebp
rorb
or
jbe
add
cmpsl
shr
in
dec
and
sub
xor
andl
fadds
ds
inc
or
and
jg
cmp
jb
mov
fistl
jge
cmp
lahf
std
rcl
scas
outsb
cmc
pop
iret
push
and
mov
or
xchg
jmp
pop
add
lcall
sahf
inc
ljmp
pop
push
shlb
aad
leave
scas
mov
filds
pop
jecxz
xchg
cld
fidivrs
sbb
lahf
pop
sti
or
lret
pop
jl
pushf
mov
ja
and
ljmp
ret
lea
sbb
into
lock
in
aad
outsb
mov
sbb
out
lcall
xchg
cmpsb
dec
lret
xchg
test
nop
enter
dec
xchg
pop
adc
add
pusha
and
mov
pop
mov
aam
shrb
push
out
lods
daa
out
loop
and
sti
inc
xchg
xchg
xchg
mov
addr16
xchg
jnp
out
xor
lret
lods
sub
cmpsl
push
mov
lahf
in
jno
cmpsb
mov
iret
out
arpl
xchg
sbb
and
jle
inc
dec
push
sbb
out
cwtl
pushf
xor
lods
xor
mov
cmp
enter
sbb
jmp
loope
push
int3
loop
sbb
sub
cmpsb
push
rorl
xchg
and
ret
mov
in
into
lcall
fldcw
xchg
pusha
cli
addr16
insb
push
and
adc
push
jnp
jecxz
xor
jae
add
push
push
xchg
inc
shlw
fucom
cmpsb
iret
rcll
sbb
pop
jo
imul
mov
jl
xchg
loop
outsl
ret
dec
mov
aad
in
add
into
hlt
ja
arpl
or
psraw
mov
pop
clc
inc
jbe
subb
repz
jns
jl
mov
outsb
daa
shrl
lock
in
fiaddl
repz
push
xchg
movsb
push
mov
add
cmp
sub
cltd
mov
dec
xchg
adc
fdivp
xchg
fsts
mov
mov
add
mov
daa
nop
lret
or
cmpsl
pusha
or
sbb
rclb
ds
pushf
mov
in
movb
aam
inc
in
cmpsl
push
push
pop
push
jo
dec
movl
adc
cs
mov
pop
leave
pop
stos
test
mov
ss
and
and
add
mov
fcompl
addl
or
xchg
shr
dec
jmp
xchg
jbe
and
cmpsl
xchg
ret
xorl
dec
js
pop
lock
push
pop
mov
jo
rcll
outsb
and
sub
in
lcall
test
push
xor
mov
call
sbb
xor
mov
rol
insb
jp
xchg
or
pop
lods
lret
stc
inc
push
dec
push
outsl
xor
mov
test
pop
outsb
adc
sbb
addr16
sbb
cmp
arpl
sub
mov
add
test
inc
int
mov
in
and
mov
fistpll
push
cltd
or
daa
mov
scas
leave
xchg
add
les
mov
jno
push
dec
pop
pusha
dec
sbb
test
or
ja
iret
lock
loop
pop
aas
mov
adc
xchg
xchg
or
pop
inc
cmp
rolb
sbb
rcrb
insl
test
mov
jne
adc
adc
gs
bound
mov
sub
mov
push
loope
in
sub
jecxz
push
stc
jmp
sahf
mov
stos
inc
push
cmc
xor
adc
int3
mov
push
std
inc
sbb
movsb
sub
pusha
je
shrb
les
cmpsl
push
loopne
out
cmpsl
popa
rcr
inc
xchg
sahf
mov
fdivrl
xchg
push
add
rorb
stos
mov
add
ret
sub
mov
clc
pop
add
fbstp
orl
lea
popa
push
lret
mov
leave
lods
test
lret
xor
pop
pop
inc
mov
mov
add
lock
daa
pop
sbb
stos
adc
out
das
popa
repz
outsb
mov
data16
jnp
mov
pop
pop
shrl
iret
mov
pop
lods
nop
push
std
fists
xchg
mov
cmp
sub
adc
jle
lods
xchg
mov
sbb
dec
imul
jns
mov
int
cmc
je
outsb
lret
inc
xor
mov
adc
inc
icebp
xor
push
lahf
ljmp
sbbl
pop
pop
cli
aaa
add
fadds
inc
jmp
xor
rclb
repz
jae
push
or
sub
jge
push
or
lret
add
push
jo
mov
cltd
xorl
incb
push
or
xor
data16
ret
out
xchg
les
dec
pop
enter
or
out
jg
cld
pop
jmp
push
fistpl
pop
mov
push
imul
std
arpl
xor
push
test
push
dec
add
stos
loopne
cli
cli
push
xchg
jae
ljmp
pop
int
push
and
popa
xchg
ret
push
call
mov
xor
xor
cmc
lds
ds
jne
mov
sbb
pop
insb
or
pushf
ret
mov
sbb
dec
subps
xor
outsb
jae
cmp
lods
add
cwtl
mov
push
fs
int
sub
shlb
insb
mov
std
sti
lret
inc
enter
push
idivl
fstps
mov
in
ljmp
mov
jne
inc
add
xchg
lret
int3
dec
outsb
movb
add
out
stc
cmpsb
xchg
and
lock
div
xchg
shrl
sub
and
add
lock
in
pop
adc
jmp
xchg
inc
movsbl
aam
ret
aad
xchg
fisubrs
push
shrl
in
loopne
mov
fisttpl
dec
xchg
jmp
lcall
stos
pop
and
test
push
xor
rclb
sbbl
or
fmul
scas
mov
cmp
mov
mov
cmp
cmp
rcr
subl
jmp
stos
enter
lahf
stos
pop
lret
fsub
mov
ja
mov
ficompl
cmc
scas
mov
mov
xchg
js
ret
mov
test
lcall
jg
sub
lea
aas
xor
test
xchg
div
movsl
jae
stc
push
push
mov
cmpsl
loopne
insl
mov
imul
je
cwtl
outsb
into
nop
or
ja
sub
add
xor
pusha
dec
inc
and
mov
jns
mov
fcmovbe
roll
repz
mov
imul
sub
pushf
mov
int
in
sub
arpl
xor
mov
cltd
or
jnp
mov
lahf
push
dec
sub
sub
mov
cmc
pop
push
scas
aam
flds
xchg
insb
imul
xchg
and
popf
sub
adcl
or
int
stos
jl
ja
pushf
call
arpl
in
xor
push
call
movsl
loope
dec
mov
sub
adc
mov
mov
sub
or
sub
cmp
stos
mov
jae
and
jno
mov
push
pop
sub
xlat
cltd
jns
pop
xor
je
sbb
cmp
mov
scas
aaa
inc
les
popa
cmc
mov
cwtl
sub
stos
pop
xor
push
fidivs
adc
fists
inc
cmc
xorb
movsl
int3
add
stc
rolb
cmc
cmp
jge
mov
lock
or
jbe
mov
inc
out
inc
sbb
movsb
jge
negb
scas
inc
cmpsb
or
insb
and
repnz
lods
push
sti
je
dec
jmp
mov
xchg
call
xchg
sarb
mov
mov
lret
jo
js
pusha
stos
stos
adc
movsb
jo
insb
mov
fnsave
pop
fwait
insb
inc
aaa
lahf
sbb
push
imul
call
inc
inc
mov
jmp
sahf
mov
ja
in
fbstp
pop
setle
loopne
jae
push
fsubl
pop
je
adc
mov
and
add
loopne
adc
pop
mov
pop
outsb
xor
and
jae
and
aaa
pop
mov
inc
lds
jp
inc
inc
incb
pop
out
testb
ds
lcall
mov
mov
stos
push
lcall
or
fldenv
mov
pop
cmp
mov
fdivs
call
sub
lret
dec
push
repz
imul
jmp
push
mov
movsb
mov
inc
mov
push
xchg
inc
andl
mov
das
push
cmp
sub
adc
cli
cmpsl
lcall
lahf
add
mov
insb
xorb
sbb
adc
add
pop
add
sub
sub
cld
pop
js
pandn
nop
ss
cwtl
mov
push
xchg
add
and
sub
pusha
adc
sbb
addl
dec
lret
dec
pop
shl
pop
jnp
lret
adc
ss
ret
push
mov
inc
out
lcall
sbb
add
lret
cmpsl
mov
sbb
stc
pop
addr16
fildl
dec
das
popf
push
xchg
xor
and
adc
sbb
test
pop
cmp
and
jbe
out
pop
ret
jge
sub
add
inc
shl
js
push
add
sub
lock
add
add
dec
rolb
dec
pop
jbe
pop
dec
pop
ja
xor
cmp
subb
xchg
lcall
jecxz
xchg
sub
mov
bound
outsb
add
mov
push
arpl
or
inc
adc
push
inc
dec
int
mov
inc
pop
lcall
and
sbb
mov
jno
xor
iret
inc
mov
jmp
sub
push
fyl2x
mov
pop
daa
push
and
js
shlb
iret
fisttpll
icebp
test
and
aad
out
mov
fwait
adc
repnz
dec
sbb
jmp
rep
cmp
push
sub
cld
iret
sarl
mov
and
je
pushf
outsb
lret
push
lods
fsub
xchg
push
mov
adc
imul
dec
inc
mov
mov
nop
sub
dec
and
mov
or
mov
insb
ja
das
ret
shrl
negb
mov
nop
lock
aaa
mov
cmp
jno
pushf
jns
jge
pop
out
mov
xchg
inc
ljmp
scas
out
mov
dec
fldt
leave
inc
in
insl
pop
std
mov
enter
xor
and
xlat
stos
and
cmp
inc
divb
fmuls
scas
in
jmp
and
aas
cwtl
mov
mov
test
mov
les
pusha
push
stc
out
cmc
loop
imul
pop
push
pushl
mov
jle
sub
daa
cmpsb
daa
rcrb
pop
pusha
pop
aaa
fisttpll
adc
push
or
mov
cli
scas
sti
stos
loop
shld
inc
dec
js
addl
xchg
lret
mov
stc
sub
bound
push
out
jae
pushf
iret
shlb
push
mov
std
test
shrb
test
xchg
mov
mov
or
dec
pop
ss
mov
xchg
mov
lds
insl
stos
mov
lods
jle
or
clc
sub
out
push
push
pop
in
shlb
arpl
sbb
inc
push
xor
pop
in
dec
jp
sarl
push
movsl
jne
inc
js
cli
pusha
popa
es
mov
outsb
or
scas
lahf
xchg
icebp
push
addb
xchg
sub
sti
jb
push
mov
xchg
mov
inc
mov
mov
loop
cwtl
add
cli
leave
cld
and
or
mov
fbld
scas
push
jmp
aam
mov
push
movsb
in
jae
pusha
jno
imul
outsb
jl
js
add
lcall
es
mov
aam
rcrl
fisubrs
xor
sarb
call
mov
out
lret
and
inc
or
pop
xlat
popf
adc
repnz
push
jae
push
enter
mov
add
int3
dec
sub
add
incb
dec
mov
daa
sbb
dec
scas
jmp
xchg
jnp
mov
add
sub
pop
pop
clc
cmp
addr16
rcrl
push
daa
rcrl
cs
push
sti
jb
mov
mov
inc
pop
jnp
shr
popa
sbb
imul
fildl
fdivs
or
push
in
mov
rclb
add
in
pusha
fsts
xchg
cwtl
sub
push
fwait
cmp
scas
mov
jl
mov
shrl
das
lods
inc
inc
mov
xchg
pop
ja
xor
clc
xchg
ljmp
rcrb
inc
inc
loop
outsb
pushf
sbb
inc
and
push
jle
test
das
inc
jns
mov
sbb
lds
adc
icebp
dec
je
fsubl
fisubl
push
and
pop
fmull
cmp
jno
imul
and
and
mov
cmp
dec
jb
mov
cmpsl
outsb
jae
mov
sub
dec
pop
mov
es
lret
fsubr
scas
pop
les
cmp
add
and
xlat
pop
inc
sbb
in
xchg
xor
call
xchg
sub
inc
and
loop
jg
ja
adc
sub
sbb
ja
fstpl
pusha
cmp
clc
test
lret
xchg
jecxz
lea
cmp
aad
call
out
mov
bound
jg
push
lcall
lock
es
mov
daa
pushf
cmp
jecxz
sub
aas
into
dec
xor
cli
dec
sub
adc
lret
add
mov
jmp
mov
insl
cwtl
cli
lods
pop
xor
adc
inc
sbb
orb
loopne
pusha
std
mov
xchg
insl
imul
add
sbb
xchg
adc
pop
cli
fildll
xor
cmc
popf
pop
cmpsb
and
and
loop
sbb
pusha
mov
mov
pushf
or
mov
adc
jl
lahf
into
in
int3
mov
roll
mov
mov
stc
stc
jns
pop
pop
sub
push
mov
add
or
ds
test
jno
adc
and
scas
fdivr
leave
js
imul
jae
mov
arpl
sbb
dec
pop
xchg
xchg
or
ds
push
icebp
fisttps
sbb
fmull
mov
movaps
push
scas
scas
fistl
addr16
mov
ret
add
je
adc
pop
arpl
adc
xor
test
pop
test
cmp
or
aam
push
nop
jno
in
or
cmp
cld
adc
sub
int3
inc
and
arpl
pop
inc
addr16
fsubl
fisubrs
mov
xor
adc
mov
pop
push
jo
sbb
mov
pushf
cmp
test
icebp
fdivs
inc
pop
add
lahf
gs
push
scas
mov
scas
mov
icebp
mov
mov
imul
push
add
push
ja
je
std
loopne,pt
adc
ja
sbb
loopne
js
lods
hlt
xchg
lods
xchg
xchg
mov
dec
js
pop
clc
insb
and
ret
scas
cwtl
or
lea
pushf
add
mov
xlat
xchg
jle
inc
mov
cmp
push
sbb
shll
jae
arpl
jmp
adc
int3
mov
test
repz
movb
adc
cmp
dec
stc
sbbb
xlat
jecxz
jnp
xchg
pop
inc
mov
popa
inc
push
imul
mov
imul
xchg
outsl
ds
lahf
pop
dec
xor
arpl
pop
sbb
sahf
sub
mov
or
cli
movsb
fsubp
sbb
mov
pusha
sbb
into
push
cs
leave
push
pop
adc
add
cs
pop
cmc
lods
bt
gs
jp
arpl
xor
fistpll
cmp
ja
xor
and
or
ss
test
cmpsl
push
sbb
lock
movl
cmp
mov
dec
imul
jle
sbb
mov
mov
orl
notl
mov
dec
cmpsl
adc
aas
clc
mov
nop
mov
int
inc
cmp
xchg
stc
cmp
je
adc
inc
push
mov
lock
das
add
lds
pop
imul
inc
push
iret
add
xor
ja
xor
adc
scas
movsb
aad
iret
in
cld
mov
sub
and
add
mov
jns
lea
and
xchg
xor
mov
xchg
shld
ret
je
call
mov
xchg
pop
jnp
sbb
sub
movb
lea
mov
imul
ret
jns
out
or
shll
pushf
out
add
popf
movsl
popf
icebp
adc
pop
out
mov
cmp
aas
in
lret
push
bound
lods
fwait
push
cmp
outsb
insb
jl
pop
popa
and
hlt
pusha
xor
call
pop
fbld
out
daa
adcb
and
je
push
push
sub
ja
lods
mov
mov
xor
in
or
mov
lds
mov
cs
fld
cli
in
test
or
push
mov
and
xor
cltd
aas
scas
adc
jge
jae
mov
cmp
pop
js
in
lock
jl
sub
daa
rcll
sub
add
sbb
and
cld
lret
sahf
mov
lret
cmp
sti
pop
sub
sbb
cmp
insb
inc
addr16
adc
add
in
dec
add
hlt
jl
and
inc
and
pop
aaa
sti
testl
out
xor
mov
sarb
aad
cmc
fwait
mov
jno
in
sti
dec
pop
repz
dec
stos
test
jmp
xchg
cmpsl
mov
ds
pop
cmp
data16
fstpl
and
jno
clc
daa
repnz
mov
inc
add
xor
xor
cmpsl
cmp
mov
mov
jmp
shl
arpl
cmpsl
inc
push
into
jecxz
or
lock
mov
pop
sbb
sbb
aam
jo
cmpsb
es
out
cmp
dec
mov
idivb
xchg
popl
inc
mov
cmpsb
nop
mov
lock
pop
iret
shll
jo
add
outsl
fdivrs
sub
or
push
jbe
int3
push
xchg
ds
xchg
ljmp
pop
mov
insl
scas
enter
fidivrl
inc
sahf
xor
loop
gs
scas
repz
fnstcw
je
sub
clc
loopne
push
mov
push
std
in
xor
adc
test
cmc
xchg
dec
fstpl
popa
mov
and
push
repnz
ret
dec
int3
push
sub
mov
cltd
nop
rcl
mov
loopnew
adc
aas
push
add
popa
add
jbe
cld
dec
gs
out
movl
int3
add
fisubrl
mov
shr
shlb
outsb
movsb
pop
cmp
ja
push
js,pn
sti
in
jnp
movsb
roll
roll
xor
xchg
xor
addr16
push
xchg
repz
inc
pop
imul
adc
bound
call
scas
pop
jecxz
shr
xlat
xchg
mov
adc
in
cmc
scas
rcll
jmp
rorl
fmull
in
xchg
push
lock
sub
lcall
jnp
pop
ja
popa
mov
imul
dec
adc
inc
mov
sbb
cmp
ret
data16
cld
mov
adc
dec
xor
out
std
push
push
sub
inc
adc
lret
stc
xchg
push
mov
mov
xchg
cmp
jo
scas
cs
cmp
loopne
lahf
adc
jle
cwtl
xor
push
pop
jg
sahf
pop
shrl
aas
adc
or
inc
lods
fcomp
mov
cli
cwtl
jne
ret
cmp
repnz
ljmp
cmp
jmp
mov
inc
shl
xor
cmp
sub
jg
mov
cmc
or
xchg
add
shll
mov
ret
xchg
jae
out
push
sbb
inc
mov
enter
mov
ja
scas
mov
inc
in
hlt
or
stc
xor
mov
xor
xchg
pop
loopne
cmp
inc
movsl
or
push
arpl
push
scas
rorl
filds
jle
lds
sti
stos
in
sbb
loop
jecxz
dec
inc
mov
pop
cs
shrl
imul
jae
sub
popa
loopne
lcall
pop
fidivl
pop
inc
sahf
fldenv
mov
insl
jae
mov
xor
cs
bound
mov
jno
push
mov
fimuls
or
ret
shrl
mov
std
testb
sub
pop
push
jb
aaa
pop
lahf
and
imul
mov
bound
mov
dec
lds
cmc
iret
adc
mov
or
inc
daa
out
sub
repnz
call
pop
pop
test
notl
inc
imul
xchg
subb
out
icebp
push
add
mov
mulb
mov
rcr
pushf
fprem
gs
and
mov
dec
push
adc
jmp
pop
movsl
pop
and
jecxz
idiv
pop
ret
push
in
mov
frstor
fldl
mov
lea
daa
mov
subl
mov
bnd
mov
dec
sbb
add
sub
stos
cli
sub
jge
repz
sbb
std
fimuls
enter
shrl
inc
mov
sbb
mov
repz
cmp
fists
adc
loope
pop
push
jbe
xchg
push
xchg
stos
das
mov
or
xchg
xchg
xor
hlt
mov
int
or
and
cmc
sbb
sub
add
xor
jl
cmpsb
in
cmc
cmp
ret
push
dec
and
inc
iret
repnz
out
pop
iret
push
aam
adc
sbb
clc
pop
fistl
cmp
cmp
xchg
incl
aas
mov
sbb
sbb
sbb
movsb
mov
loop
adc
sbb
fidivrl
xchg
or
ret
sbb
ja
fsubs
xor
lods
enter
out
out
push
xchg
fdivrs
mov
outsl
mov
xor
daa
mov
sbbl
call
xchg
je
push
scas
dec
adc
aaa
imul
inc
enter
repnz
sahf
push
int
fs
stos
out
and
sbb
xor
sub
push
shll
inc
in
lods
rorl
mov
hlt
mov
mov
or
mov
scas
jl
cmp
sub
int
push
clc
mov
mov
xchg
insl
xor
dec
xchg
mov
mov
push
mov
out
jg
in
and
sbb
jb
hlt
popf
lds
stc
mov
in
lock
sarb
popf
pop
jecxz
call
arpl
or
aad
pushl
fs
and
ja
push
fiaddl
push
inc
pusha
loope
jno
jmp
mov
xor
or
imul
jle
inc
movsb
sbb
insl
ja
pop
dec
jp
jecxz
loop
adcl
mov
int3
xchg
loopne
lock
sahf
and
or
cld
mov
jnp
insb
test
cmp
lcall
jb
cmp
mov
lahf
test
fbstp
sbb
xchg
ljmp
hlt
mov
cwtl
pop
dec
mov
cld
push
popa
nop
adc
adc
scas
push
adc
sub
sub
js
cmp
lods
andb
out
or
xor
push
add
pop
insb
repnz
cmpsb
je
dec
bound
les
fcomps
add
pop
icebp
mov
mov
pop
dec
or
pop
scas
test
xor
movsb
push
stos
mov
in
mov
mov
jo
xlat
and
mov
and
std
fwait
jecxz
mov
add
cmc
cmp
das
push
aad
fbstp
aad
jl
xchg
add
cmp
add
and
jnp
pop
lahf
xor
cmp
sti
aaa
stos
cmp
adcl
pushf
gs
sahf
xchg
mov
insb
xchg
or
jp
leave
inc
in
jl
aaa
pop
and
push
add
lret
sub
dec
loop
mov
adcb
inc
outsl
mov
popf
inc
mov
xor
mov
jl
adc
bound
mov
jne
lock
xor
mov
jmp
mov
test
aas
or
stos
cmp
dec
adc
in
mov
pushf
xchg
andl
arpl
sahf
xchg
ret
sbb
lret
movsl
in
inc
and
jge
xchg
cli
in
adc
and
insb
je
cmp
aam
jno
std
push
push
dec
jne
cmp
xchg
cmpb
add
cmp
pshufw
lret
in
dec
and
pshufw
cmp
or
push
shll
dec
push
sub
cld
test
mov
cmp
loop
int3
shll
pop
test
lret
aaa
jno
stc
int3
aaa
and
push
sbb
inc
shll
loope
imul
rcrl
or
sbb
sti
xlat
push
mov
add
shll
shll
xchg
ljmp
test
sub
lods
lret
mov
sarl
adc
imulb
push
dec
loope
push
add
in
mov
je
in
xor
loopne
das
ds
je
push
inc
sbb
xchg
mov
cmp
and
lock
lock
cmp
sub
in
inc
sbb
out
subb
pop
xor
adc
bound
icebp
dec
xor
divl
sub
mov
lock
hlt
in
data16
cmp
inc
outsl
test
imul
ror
lea
js
leave
mov
mov
popf
push
fucomp
pusha
pusha
mov
icebp
push
mov
pop
les
addr16
fisttpl
ja
add
jle
jp
aam
out
mov
flds
pop
repnz
xor
iret
jecxz
xchg
js
sub
stc
popa
int
mov
mov
rcrl
fdivrs
insl
call
and
popf
mov
mov
or
sbb
dec
pop
mov
xlat
in
xor
cmp
call
icebp
inc
loop
addr16
out
xor
sti
test
in
push
add
mov
hlt
in
adc
or
adc
jbe
out
jae
pushf
or
lret
jno
out
add
ljmp
mov
out
lock
mov
add
push
adcb
push
xchg
and
mov
and
out
xor
scas
push
xchg
inc
iret
popa
insb
into
in
call
cmp
insl
pop
out
aad
cmp
fwait
jbe
imul
mov
popf
shrl
inc
push
sahf
mov
mov
mov
lret
ja
idivl
fnstcw
cmp
inc
jge
aad
out
pop
adc
fwait
outsl
sbb
cltd
es
sbb
insb
mov
pop
jp
mov
or
jo
insl
sub
xchg
iret
mov
iret
clc
jecxz
movsl
js
xchg
roll
jo
mov
push
popa
xor
ret
aas
push
jo
sub
or
jl
push
adc
mov
in
cmp
daa
add
pop
dec
arpl
jg
adc
or
push
dec
sbb
lcall
subb
pop
popl
out
std
push
sub
jb
mov
dec
sub
aaa
imul
cmp
lds
adc
lcall
fmuls
jo
out
add
cmp
jp
mov
pop
int
insl
pop
inc
iret
scas
sub
test
cwtl
popf
lods
mov
push
adc
rorb
leave
xor
push
popf
mov
test
mov
les
in
push
arpl
xor
add
std
or
pushf
dec
adcl
push
inc
push
stos
ret
out
repz
aaa
test
movsl
xor
and
cs
addl
movsl
dec
inc
mov
cld
and
mov
test
icebp
add
mov
lahf
mov
mov
mov
call
leave
insl
mov
fcoml
inc
rcrl
inc
jb
pop
lods
sub
dec
in
pop
cmp
into
test
jmp
adc
cs
cmpsb
daa
outsb
add
je
leave
ror
in
and
adc
or
imul
ret
test
mov
push
pusha
mov
push
mov
mov
orl
jnp
xchg
sbb
mov
mov
stos
inc
mov
jge
cmp
cmpsb
mov
loop
das
scas
test
inc
pop
shrl
fwait
stc
xchg
je
adc
inc
cmp
div
pop
mov
es
xor
pusha
adc
sub
or
sub
outsl
arpl
xlat
mov
sub
push
lret
addr16
inc
into
nop
lret
xor
lods
jp
cmp
jge
or
leave
mulb
inc
leave
adc
adc
out
mov
inc
mov
rcll
sbb
cli
ret
repz
xlat
dec
loop
push
and
mov
fdivl
dec
sub
adc
js
jnp
lods
jl
loop
repz
test
jmp
ret
imul
dec
loope
push
into
int3
insl
mov
in
stos
in
test
and
and
dec
addr16
mov
xchg
mov
aam
xchg
in
or
mov
sbbb
xor
insl
sub
ret
idivl
jmp
outsb
cmp
add
in
addr16
cmp
aam
mov
push
aaa
mov
lahf
jle
je
lret
fidivs
cmp
imul
mov
les
cmp
mov
sub
jbe
fists
or
mov
add
add
fisubl
pop
pop
jbe
pop
mov
fbstp
xchg
dec
xchg
test
ljmp
adc
sahf
xchg
add
stos
out
aas
xchg
stc
jae
insl
je
pop
and
sbbb
sbb
lahf
push
lret
repnz
aad
ss
sbb
lods
adc
imul
psraw
sub
cmp
movl
jbe
jb
in
jp
mov
sbb
sub
pop
mov
sbb
je
or
jp
popa
xchg
punpckhbw
cltd
ja
cmp
dec
ret
pop
mov
xor
mov
xchg
xor
popf
negl
hlt
arpl
lock
loope
ret
cmpsb
stos
jnp
fwait
addr16
push
cmp
adc
je
or
cmpsb
pop
cltd
cli
dec
sbb
or
push
aaa
hlt
fwait
cmpsl
cwtl
sbb
mov
sub
test
fisttpl
stos
fwait
movsb
loopne
popa
pop
push
loope
sbb
inc
adc
decb
jae
sub
jb
push
mov
inc
out
inc
sub
xchg
sbb
nop
mov
sti
and
mov
xor
in
sbb
into
adc
div
sub
fistl
lcall
repnz
push
add
shlb
insb
dec
inc
leave
adc
std
fsubl
popf
push
ret
movb
mov
push
sub
cmp
jl
jno
ret
stos
sbb
insb
jo
dec
jecxz
outsl
movsb
inc
mov
pop
imul
cld
imul
mov
add
fisubrl
mov
js
sti
mov
push
std
popa
mov
jp,pt
and
negb
into
out
push
sahf
and
mov
mov
in
pushf
hlt
aam
push
xor
push
fistpl
jp
push
clc
jne
je
inc
outsl
lds
dec
out
jo
pop
adc
mov
push
stos
push
mov
push
inc
call
push
jo
enter
sbbb
or
scas
sub
mov
xor
js
ljmp
inc
out
inc
clc
test
add
hlt
in
out
jnp
jecxz
adc
lcall
jae
inc
pop
jbe
mov
pop
loop,pn
xchg
or
popa
jno
ljmp
sbb
insb
ret
pusha
mov
jne
shl
popf
arpl
fnsave
stos
cwtl
mov
inc
pop
xor
aad
outsb
mov
sub
sub
js
aam
mov
mov
insb
cld
imul
jmp
or
fbstp
cmp
push
lds
xor
mov
test
push
mov
mov
dec
push
add
mov
xchg
orl
sub
dec
or
mov
add
adc
push
int3
ja
and
mov
pusha
neg
mov
daa
test
cmp
insb
mov
cmovl
mov
fisubrl
push
pop
mov
add
in
fst
ds
mov
out
cltd
int
das
das
into
in
dec
sbb
inc
jecxz
dec
mov
mov
dec
rsqrtps
dec
add
jmp
mov
mov
bound
mov
push
pop
mov
push
push
icebp
lret
aad
outsb
out
out
aas
leave
icebp
sbb
dec
sbb
pop
lods
mov
outsl
arpl
xor
lahf
sbb
cmpsl
addr16
push
sub
fstps
dec
xchg
inc
cmp
fists
xchg
add
and
and
scas
prefetch
jne
aad
jge
fs
and
mov
mov
push
mov
adc
ljmp
jno
clc
es
dec
js
lods
dec
stc
je
mov
lods
mov
int3
mov
or
test
xchg
sbb
or
fdivl
test
addr16
pop
add
cmp
pop
stos
out
ja
addr16
and
add
xchg
imul
pop
xlat
jnp
loope
xor
jecxz
orl
add
xlat
popa
fdivr
push
xchg
push
push
push
add
mov
andb
push
and
inc
add
push
mov
sub
mov
into
jg
cmpsl
mov
iret
xor
adc
ljmp
pop
push
jmp
lods
aas
jmp
loop
mov
hlt
inc
int3
mov
sub
pop
adc
inc
sub
and
leave
sub
les
pop
loopne
jbe
pop
push
xchg
dec
ljmp
jo
push
pop
enter
leave
jnp
hlt
mov
mov
inc
add
data16
push
loop
adc
mov
mov
daa
loop
jne
add
push
jge
jb
jns
bound
jbe
xchg
add
pushf
adc
imul
mov
fistpll
or
dec
add
notl
cli
loop
out
jno
daa
xchg
inc
mov
ds
sbb
das
xchg
stos
stos
in
test
movsl
xlat
roll
jmp
sarb
call
cmp
loop
shll
or
imul
aad
dec
cmp
xor
jns
add
jle
in
sub
jne
push
sbb
or
xorl
jg
clc
daa
stc
mov
fstp
xor
mov
pop
insl
incb
jp
xchg
or
fwait
sbb
jno
sub
imulb
sub
inc
stc
xor
push
or
mov
dec
jp
push
in
inc
movsb
xor
dec
xor
mov
xor
ret
sbb
jne
sbbb
shll
aad
iret
or
in
push
mov
lock
push
subl
into
and
int3
or
inc
stc
adc
push
cli
int3
in
into
jmp
cs
movsb
int3
push
or
cmp
inc
out
push
leave
addl
and
or
out
and
mov
in
lret
iret
mov
mov
push
sti
out
inc
dec
in
mov
sub
dec
jle
add
cmpsl
fsubr
movsb
outsb
lds
pop
bound
cs
fnstcw
sub
sbb
setge
lcall
inc
add
lahf
cmp
les
dec
xchg
fsubp
cld
and
int
stos
push
inc
inc
cmp
inc
shll
dec
sbb
mov
out
popf
jp
std
fs
scas
xchg
bound
cld
push
shl
sarl
mov
pop
add
add
loopne
jno
shr
sub
subb
std
les
cmp
push
mov
imul
ret
shll
jb
in
dec
push
mov
pop
div
enter
sbb
fmull
cwtl
xor
adc
dec
mov
push
or
outsb
popf
xchg
jno
aas
lcall
out
xor
inc
rorl
aad
pop
movsb
repnz
cmp
jmp
imul
in
xchg
jmp
xor
cmc
bound
push
test
pop
inc
mov
subl
orb
imul
jg
jns
imul
std
addr16
pop
xor
aaa
sub
test
pushl
add
pop
pop
cmp
jecxz
test
imul
mov
aam
mov
int
and
cmpsb
ss
sbb
repz
stc
add
jmp
sbbb
popf
mov
and
push
push
mov
dec
sub
mov
rol
test
movl
xchg
fstps
iret
lret
lods
test
jge
enter
les
imul
dec
push
ds
sbb
andl
add
in
out
xchg
shl
into
jle
or
push
je
mov
push
loopne
rclb
das
xchg
repz
stos
inc
cwtl
lcall
sub
lds
mov
lahf
xlat
out
jno
pop
and
divl
mov
orl
adc
mov
cmp
adc
shl
xor
pop
lea
push
add
mov
jge
lret
cmp
movsb
mov
into
lea
out
popa
adc
mov
movsb
jbe
aaa
pop
jae
nop
mov
gs
imulb
outsl
sbb
jb
jmp
ljmp
pop
cmpb
mov
aam
popf
jle
xor
out
xor
mov
pop
jae
das
jle
bound
cmp
jl
cwtl
dec
lds
cmp
pushl
or
jo
add
fmull
shl
pop
xor
inc
push
dec
test
cmp
adcl
es
subb
jge
dec
and
fildl
jecxz
andl
pushf
pushf
in
xchg
lret
and
push
insb
pop
jmp
inc
add
stos
push
mov
xor
mov
ficoms
shr
xchg
jb
std
pop
call
jle
rclb
push
test
repnz
fcomps
adc
lcall
fsts
sub
adc
sbb
pusha
aaa
popf
and
sub
paddusw
lret
pop
ja
int3
cld
mov
popa
insl
push
lahf
lcall
jge
dec
cmp
test
clc
pop
gs
popa
movsl
leave
push
int3
mov
or
into
nop
inc
dec
imul
mov
mov
fldl
pusha
popf
mov
add
stc
dec
cltd
push
test
and
leave
popf
les
into
imul
inc
cmpsb
sub
repnz
mov
push
mov
push
loopne
or
add
jmp
fmull
mov
loope
lods
scas
roll
fs
loop
mov
dec
negl
add
xchg
or
arpl
jg
dec
and
pop
pusha
mov
jbe
pop
inc
and
jne
dec
test
xlat
test
scas
sub
pop
push
sbb
mov
lahf
in
fiadds
push
rorb
or
jne
mov
in
pop
and
leave
mov
xlat
sub
enter
sub
xchg
addr16
cmp
mulb
les
mov
inc
scas
out
aaa
mov
repnz
dec
push
notl
fs
outsl
ja
jmp
lods
adc
pop
addl
stos
shl
sahf
jae
inc
dec
in
js
cmp
push
mov
adc
jg
or
cltd
add
mov
xchg
ret
dec
xorb
out
movsb
clc
dec
dec
add
or
jne
pop
cmp
movsl
inc
cmpsb
xchg
mov
push
sbb
inc
dec
into
cmp
mov
or
push
test
clc
sbbb
jg
push
pop
mov
xor
mov
and
push
loopne
inc
ret
cmpsl
jp
inc
jmp
jl
test
dec
push
pop
pop
push
push
cmc
pusha
fdivs
das
inc
jne
pop
loopne
in
shl
addb
hlt
mov
xor
jnp
jne
sub
mov
subl
in
xlat
cmc
xchg
mov
dec
jle
arpl
mov
push
mov
mov
andb
pop
adc
pushf
mov
movsb
sub
xchg
or
dec
mov
ljmp
cmpsl
pop
rcr
sub
lret
je
or
ret
and
into
sub
sub
pop
or
and
imul
jg
and
mov
movsb
jp
jle
sub
test
add
dec
out
ret
sub
ror
sahf
stos
shrl
fs
pop
adc
sbb
js
test
roll
push
sbbb
gs
cmp
cs
inc
sbb
add
pop
push
daa
int
adc
push
ret
inc
out
in
xchg
mov
inc
data16
addr16
jp
xor
adc
add
dec
pop
xlat
sbb
mov
test
cltd
sti
nop
mov
imull
xor
cmp
ret
loop
sbbl
jae
nop
flds
rcrl
scas
lea
in
dec
aas
scas
ret
out
inc
leave
ficoms
fstl
std
in
inc
das
xor
sahf
mov
inc
pop
push
push
in
or
sub
repz
repnz
es
cmp
push
inc
ds
sti
jg
leave
pop
push
cmc
mov
adc
cs
push
loope
push
push
jns
outsl
push
lock
xor
out
repnz
add
es
xchg
dec
xchg
jo
les
pop
ret
imul
outsb
cmp
scas
je
neg
das
sub
push
sbb
stc
mov
mov
scas
sub
sub
xor
and
sub
jecxz
cli
mov
mov
mov
add
ds
push
sbb
stos
jbe
inc
jp
mov
sub
test
dec
pop
add
push
adc
inc
shl
dec
push
push
repnz
cld
dec
xor
out
jmp
lret
ret
mov
add
ljmp
mov
or
jg
fimuls
out
pop
push
push
sahf
iret
inc
es
jg
nop
push
xchg
inc
movsb
dec
pop
sbb
out
and
pop
sbb
lcall
jb
out
je
aas
and
outsl
jmp
jb
imul
ds
in
jne
data16
cltd
out
sbb
mov
and
lds
inc
sarl
dec
inc
pop
fdivs
enter
or
push
divb
out
in
imul
addr16
adc
or
dec
lret
inc
jg
mov
push
jno
xchg
mov
stc
idivl
lahf
stc
cmp
mov
jp
stos
inc
pushf
add
faddl
xchg
cmp
jmp
bound
pop
xchg
daa
fdiv
test
sub
sbb
push
ja
fidivs
fists
loopne
mov
inc
int
and
lret
mov
sub
mov
movsb
imul
mov
fucomip
jle
cmpsl
mov
mov
jb
mov
pushl
stos
pop
es
pop
jecxz
negb
test
repz
stc
inc
inc
pop
ljmp
pop
test
repz
in
mov
jb
aas
push
fsubrs
mov
xchg
mov
cmp
jl
mov
repz
scas
jae
repz
rcrb
popf
fstps
sub
mov
and
shl
push
mov
and
mov
cmp
cmpsb
push
in
sahf
fistl
push
add
sbb
dec
push
stc
sub
mov
mov
scas
dec
adc
test
ret
push
dec
cmc
es
divl
mov
es
jecxz
sbb
lret
imul
inc
pop
je
mov
ss
inc
adc
ja
mov
js
mov
xchg
inc
in
and
jge
push
jecxz
or
ja
jno
jp
test
mov
xor
pop
lods
out
sti
push
or
leave
jne
adc
icebp
ljmp
adc
mov
test
dec
iret
ja
pop
and
xchg
and
ds
adc
sarl
mov
push
movsl
test
xchg
sbb
sub
rcrb
fadd
ret
dec
xlat
push
mov
mov
push
loopne
push
push
iret
jp
dec
mov
xchg
enter
in
and
xchg
fimuls
jo
sbb
inc
sarl
icebp
jns
lds
mov
add
jne
mov
lret
or
mov
mov
mov
int
inc
xchg
and
mov
pop
mov
cmpsl
or
mov
ja
lcall
mov
cmp
xchg
mov
lds
mov
cmp
lds
outsl
or
in
mov
mov
imul
in
jb
popa
cmp
cmc
cmp
add
mov
movsl
cmp
ljmpw
test
aad
sti
mov
adc
pop
jae
cmpsl
pop
fbstp
roll
repnz
mov
in
into
or
jle
jae
push
dec
mov
rep
lahf
sbb
mov
call
sub
insb
std
cmp
xchg
int3
push
je
jo
fldl
xor
cmp
fwait
xor
ss
lock
mov
mull
mov
xor
sub
call
lret
mov
rcl
jmp
subl
movsb
data16
enter
adc
test
jae
cmp
sarl
adc
pop
pop
cmp
mov
data16
out
dec
mov
pop
mov
cmp
xchg
push
xlat
pop
gs
into
push
pop
hlt
and
add
add
hlt
ss
loopne
fcompl
das
xor
cmp
div
jecxz
xchg
shlb
mov
cmp
or
xorb
sub
lret
cmp
xor
popf
cwtl
xor
in
out
pop
mov
pop
pop
pop
fists
jecxz
mov
bound
cmp
mov
cmp
test
arpl
adcb
aam
adc
loope
out
call
mov
xor
icebp
dec
push
popa
mov
daa
in
das
imulb
notl
fstps
or
mov
movsb
pusha
andl
xchg
sbb
sahf
imul
xor
push
das
sbb
punpckhwd
mov
mov
adc
add
mov
xchg
sbb
adc
fs
pop
popa
das
mov
outsl
jno
cmp
xchg
mov
or
cmp
orl
dec
repnz
movsl
cmpb
or
lods
push
add
les
fsubs
add
and
sub
lea
mov
dec
mov
adc
repnz
lods
mov
fsubs
fimull
cmpsb
imul
outsb
or
fsubl
lods
lcall
jecxz
orb
lods
rcll
jne
xchg
cmp
jb,pn
popa
add
stc
push
pop
and
xchg
sub
mov
call
and
aad
mov
add
xchg
sahf
or
sbb
test
push
daa
cmp
pop
adc
ss
lock
into
imul
bound
ret
jb
lock
shll
stos
lea
add
inc
push
inc
ret
mov
fwait
hlt
int
mov
add
jns
ret
stos
hlt
push
fnstcw
or
es
cwtl
dec
dec
push
rorb
mov
push
mov
jne
and
popf
mov
push
xchg
push
pushf
mov
ljmp
sbb
sbb
popf
mov
inc
aad
sbb
pop
sbb
sbb
cmp
out
aam
stos
mov
xchg
push
add
jnp
int3
fmul
mov
cli
and
jmp
push
push
xchg
in
int3
mov
push
js
lret
addr16
insb
fsubl
xor
mov
int3
aad
sbb
push
adc
fists
fsubl
ret
or
sub
iret
lds
xor
pop
mov
jmp
insl
dec
fwait
add
or
adc
adc
ret
inc
repnz
jb
cs
jle
mov
pop
sbb
add
mov
jecxz
add
add
lcall
dec
pop
pop
pushf
push
iret
fisubs
or
xchg
dec
xor
inc
push
insb
repnz
cmp
add
mov
mov
pusha
mov
ljmp
inc
int3
inc
cmp
xor
sub
inc
addb
movsl
in
enter
xor
insl
ss
jns
test
jmp
pushf
push
xor
mov
mov
les
and
adc
fsubl
dec
add
sub
sahf
stos
rcll
sub
sbbl
sbb
stos
push
fcoms
test
imul
loop
pop
ljmp
ret
imul
jb
xchg
daa
lock
pop
movb
sub
shl
clc
and
popf
aad
rolb
fiadds
les
mov
jg
and
mov
rcrl
mov
jne
push
leave
or
inc
jne
mov
mov
daa
push
out
sbb
lock
or
addr16
std
bound
cmp
movb
gs
mov
in
stos
fsubs
or
or
jmp
jecxz
mov
js
xchg
mul
xchg
xchg
add
out
sbb
imul
dec
jns
ficomps
out
add
or
in
stos
aad
lock
push
gs
cmp
fwait
call
sbb
incl
cmp
dec
sbb
rcr
ss
lret
inc
je
jmp
mov
push
leave
mov
mov
add
pop
mov
and
jmp
loopne
jl
jns
mov
xor
jno
scas
mov
fisttpll
inc
xchg
xlat
js
movsl
xor
mov
push
pop
mov
scas
mov
xchg
lcall
mov
dec
jno
fidivs
push
and
dec
into
or
pop
loop
jb
ss
mov
scas
jmp
inc
adc
enter
dec
adc
jnp
loop
les
adc
cmp
jbe
and
adc
ja
mov
mov
xchg
mov
xchg
jnp
div
shll
xlat
sbb
sub
jl
shll
cmp
mov
inc
xchg
add
dec
pushf
add
shlb
mov
sub
pop
punpckhdq
mov
push
inc
dec
jae
nop
adc
sub
add
adc
or
push
sub
insb
iret
mov
bound
xchg
or
arpl
cltd
and
push
stc
pop
bound
shr
push
std
mov
jg
imul
sbb
sub
jmp
push
add
inc
into
test
fwait
add
xor
out
cmp
mov
inc
add
adc
mov
daa
inc
cmp
and
cmpl
adcl
pop
mov
out
adc
sbb
hlt
test
iret
lock
xchg
pop
pop
mov
xchg
push
jle
cmp
mov
cmp
ret
jnp
hlt
inc
loope
ljmp
xlat
andl
lret
loope
jecxz
pop
xchg
nop
add
inc
mov
cmp
jmp
jno
inc
iret
pop
in
xlat
cmp
and
push
ret
outsb
inc
mov
cltd
jp
mov
push
xor
test
movsb
dec
inc
shlb
dec
lret
imul
flds
sbb
jnp
push
pop
ljmp
int
inc
xor
roll
jmp
adc
inc
rolb
subb
mov
fadds
fmull
ljmp
push
mov
call
cld
enter
push
cmp
push
popl
xchg
jp
dec
dec
cwtl
jmp
ret
js
pop
cmc
dec
lahf
je
mov
ja
add
jecxz
dec
adc
dec
mov
icebp
in
lods
inc
outsl
out
ret
jle
fsubrp
rol
pop
stos
es
fs
fcoml
enter
mov
das
out
sub
cli
cltd
jns
jbe
lods
lods
cmp
mov
je
adc
inc
faddl
std
call
cmc
jbe
push
sbb
rcrl
std
or
xchg
imul
mov
mov
cmp
sahf
ljmp
jne
cmp
dec
mov
cmc
inc
xchg
xor
dec
inc
jae
and
cmpl
xor
push
pop
add
pushf
packuswb
cmp
inc
inc
outsl
push
and
sub
test
cmp
jl
shrb
rolb
pop
movsl
xor
std
jno
pop
push
dec
pushf
scas
mov
or
movsb
ret
mov
mov
pop
fnstcw
inc
push
or
sbb
shrb
mov
inc
movsb
adc
out
sbb
pop
sub
ret
xchg
sbb
sbb
xchg
mulb
jecxz
addr16
inc
cmp
xor
enter
cld
outsl
int3
jg
insl
sub
aaa
mov
and
insb
test
sbb
in
push
icebp
ja
pop
dec
sbb
adc
call
fldt
arpl
push
sub
cwtl
imul
add
dec
ret
fadds
rcl
cmpb
in
std
xor
cwtl
jno
sub
mov
fcomi
mov
sub
sbb
in
xor
pop
cld
inc
mov
in
jne
aaa
pop
out
pop
sarb
stos
jnp
mov
shll
lods
add
xchg
sub
sub
add
das
jae
add
es
pop
ljmp
mov
fsub
in
dec
fnstenv
pop
arpl
mov
mov
in
fs
mov
lret
dec
push
pop
push
cld
lea
cmc
std
ljmp
push
ficoms
mov
mov
pop
sub
stos
xchg
mov
std
add
lret
mov
aaa
dec
imul
fxch
lods
out
out
adc
push
jl
add
lret
cwtl
sahf
into
fwait
jecxz
jecxz
xlat
xor
sub
daa
cmpsl
add
imul
pusha
mov
push
out
rcrb
xchg
ret
jb
lock
adc
mov
mov
mov
scas
cld
jno
cmp
jp
pushf
insl
xchg
scas
fisubs
fidivrs
sub
inc
jl
clc
mov
sbb
xchg
int
and
sbbb
dec
bnd
into
xchg
mov
add
les
pusha
into
xchg
add
jecxz
movsl
std
leave
sahf
and
rcrb
xchg
sbb
fucom
xor
stc
popa
pop
cmp
xor
and
push
out
enter
popa
cmp
cmpsl
xchg
sar
dec
adc
add
mov
xchg
aam
lods
cmp
data16
lcall
add
mov
lret
xchg
jns
rcr
jmp
add
rcrb
scas
out
pop
pop
aad
mov
lods
xchg
cwtl
adc
in
inc
add
in
sub
lods
sti
std
sbb
and
mov
and
mov
clts
jno
ss
bsr
add
mov
pop
mov
call
out
in
in
pop
and
bound
in
ljmp
dec
or
and
paddw
sbbl
or
sbb
fcmove
xor
inc
and
lcall
cld
cmc
xchg
mov
js
fisubrs
out
call
xor
xor
movsl
ljmp
push
dec
es
and
repz
adc
pop
adc
dec
dec
adc
aas
adc
jae
jmp
add
jge
jge
mov
fs
mov
or
mulb
sahf
pop
sti
cmp
aaa
lret
sbb
xchg
test
sub
dec
cmp
pop
add
mov
or
fstl
pop
gs
dec
xor
popa
out
or
cmp
and
cmc
mov
data16
js
push
cmp
dec
push
push
mov
adc
xor
mulb
xchg
sub
pop
test
push
lea
addr16
dec
pop
dec
or
jl
out
adc
mov
xor
jnp
mov
daa
lock
data16
cmpb
pushl
dec
jnp
and
mov
mov
rorb
out
mov
pop
sbb
or
imul
sbb
or
je
mov
and
test
dec
sbb
lahf
mov
sbb
jg
arpl
int
jmp
out
cmovs
rcl
hlt
dec
or
imul
sub
lret
push
sbb
lods
sti
push
scas
cld
lea
or
fistpll
jno
push
dec
xor
adc
pop
and
cmpl
or
aam
gs
fstpt
push
lret
outsl
sub
or
xor
push
aas
add
xchg
mov
or
mov
jle
push
jne
mov
iret
ja
sub
mov
mov
daa
mov
les
push
cld
add
dec
imul
flds
mov
adc
add
mov
js
std
ljmp
jmp
insb
xor
push
adc
loope
fs
ror
icebp
jns
inc
jmp
mov
jle
pop
ret
into
test
imul
mov
jle
dec
ds
sbb
andl
aad
adc
popa
sub
adc
pop
adc
lea
dec
out
in
mov
sti
addr16
sub
sub
pop
dec
dec
sahf
push
iret
das
das
mov
jmp
fmuls
jo
fnstenv
hlt
pop
mov
jge
sub
test
addr16
icebp
jo
xor
test
sub
inc
or
sub
mov
rolb
outsl
sbb
add
xor
push
ja
and
cmpsl
cli
ds
xchg
les
pop
outsl
imul
push
jo
std
daa
insl
out
sbb
mov
ss
es
inc
repnz
sbb
aam
test
mov
test
jnp
add
inc
and
insb
fsubs
shr
orl
jo
inc
stos
xor
icebp
loop
jnp
and
in
in
inc
mov
xor
mov
sbb
sub
jp
mov
jne
stos
adc
dec
and
inc
enter
xor
sub
outsb
xchg
jmp
mov
cmpsl
int
rcrl
stos
and
xlat
lods
out
data16
cld
je
ljmp
arpl
sbb
sahf
or
sti
add
fldcw
mov
adc
add
int
movsl
test
mov
push
dec
repz
push
cmpsl
test
jae
mov
mov
mov
mov
jns
mov
sub
shrb
test
xchg
outsl
xor
fstpt
lods
sub
sbb
cmp
mov
push
std
push
xchg
mov
jmp
aas
xor
fisubrl
lcall
std
movsb
jle
inc
repz
testl
adc
ljmp
cmp
pop
cmp
subb
in
in
cmp
jmp
addr16
xchg
insb
mov
mov
stc
cld
jmp
push
xor
mov
push
bound
int
sub
bound
je
dec
mov
bound
daa
xchg
sub
xor
cwtl
inc
imul
out
xchg
out
cwtl
mov
xor
dec
in
scas
pop
lcall
mov
sbb
outsb
push
inc
test
rcr
lahf
dec
in
pop
pop
adc
jge
into
mov
shlb
push
stc
cmp
cmpsb
dec
fcoms
or
inc
pop
in
lcall
adc
adc
sbb
sbb
outsl
sub
dec
inc
test
xchg
ret
pop
js
cmp
adc
int3
les
mov
adcb
sub
out
ja
ret
mov
jae
popa
cs
icebp
dec
adcl
pushf
cmp
inc
dec
into
pop
in
mov
mov
sbb
mov
sbb
out
test
pop
mov
xor
push
jo
and
push
pop
in
pusha
sbb
push
and
inc
cmp
push
xchg
ljmp
and
cmp
dec
into
pop
aam
lock
popf
mov
fsubr
push
mov
mov
pop
fsubrl
xchg
xchg
push
push
sub
and
add
int3
imul
int
adc
lahf
mov
movsb
fcomp
sub
pmulhuw
dec
sbb
lcall
pop
mov
mov
sbb
dec
clc
add
add
fadds
pop
and
cwtl
add
jne
iret
jno
test
imul
ljmp
xor
mov
cwtl
cmp
fsubs
sbb
add
push
je
jmp
and
sbb
sbb
push
inc
dec
dec
loop
sub
add
mul
or
in
stc
pusha
dec
mov
outsb
mov
shr
sahf
loop
fistpll
aam
lock
loopne
adc
loope
imul
jb
scas
daa
dec
lock
lods
lods
push
mov
pop
and
lahf
cmp
mov
scas
popa
push
cmpsl
add
mov
subb
jg
sbb
xchg
sub
sub
enter
cltd
aam
clc
aad
pop
xchg
lret
inc
loope
popa
ss
dec
push
adc
or
add
adc
sbb
jp
mov
sahf
stc
fnstsw
call
sub
nop
push
into
andl
pop
xbegin
repz
js
xchg
mov
or
cwtl
mov
insl
cmp
mov
aad
out
icebp
cmp
imul
movsl
inc
jb
mov
iret
mov
mov
mov
fldt
dec
pop
int
je
or
ds
mov
pop
in
adc
je
outsl
xchg
les
incl
scas
xchg
xchg
sbb
mov
and
sbb
adc
cs
test
pop
mov
fidivrl
cmp
fsubrs
cmc
mov
mov
fnsave
inc
outsw
pop
xor
ljmp
or
rcr
pop
sub
pop
mov
inc
xchg
xchg
adc
cs
in
mov
rcrl
lcall
frstor
sub
mov
lock
shll
xchg
arpl
pop
inc
adc
and
mov
dec
jo
orl
sbb
xor
mov
bnd
sar
add
mov
adc
jmp
inc
and
sub
lock
lock
call
daa
mov
push
in
data16
movsl
dec
hlt
fs
sub
rcll
inc
mov
outsb
and
mov
loop
ss
clc
cs
shrb
or
loop
jno
and
mov
shl
loopne
inc
jecxz
fwait
and
cmp
ss
ja
stos
sub
xchg
jae
push
dec
daa
leave
ljmp
jo
clc
inc
jp
pop
pop
inc
jge
aam
sbb
leave
mov
mov
rolb
mov
in
add
jbe
jle
mov
mov
push
inc
xchg
iret
pop
mov
cmp
frstor
js
test
add
scas
sbb
pop
push
xchg
fidivl
test
loopne
xchg
lods
out
mov
imulb
jnp
jo
pop
in
ljmp
jmp
adc
es
pusha
test
sbb
fdivrs
into
mov
ud1
fcoms
inc
xchg
int
cltd
hlt
loopne
dec
add
dec
fldl
add
xor
and
aad
rcll
mov
fldcw
test
jns
cwtl
ret
inc
inc
out
arpl
mov
xor
std
or
xchg
add
ret
adc
lock
sub
mov
andb
int
out
xrelease
ljmp
enter
push
sub
add
pop
sub
maskmovq
notl
ja
sub
lock
inc
aad
lock
ja
add
xchg
out
ss
and
cmpl
out
add
or
adc
inc
addr16
pop
fistpl
ljmp
aad
xchg
xor
mov
inc
test
loopne
repnz
ljmp
lods
jmp
cmp
xor
jo
cmp
pop
inc
pop
push
cmp
shll
adc
cmpsl
stos
xchg
inc
movsb
leave
call
cmp
mov
in
movsl
jmp
es
or
ja
sar
movsb
adc
ret
cmp
cmp
addl
loope
test
sub
lahf
push
inc
mov
xor
mov
les
mov
sub
incb
xlat
push
in
repz
in
jle
test
xchg
std
mov
mov
imul
sbb
mov
xchg
adc
push
sbb
in
jp
xorl
push
jle
jne
out
mov
mov
sbb
test
pop
outsb
push
loope
movsb
lods
xchg
sbb
mov
scas
std
js
add
jns
mov
jbe
push
pop
pop
cmpsl
lcall
aam
adcl
jnp
mov
rcr
jmp
jge
add
les
jle
mov
into
jno
scas
cwtl
push
jp
jo
mov
ficoms
sbb
xlat
lock
sbb
std
add
roll
pop
jge
jmp
scas
shll
xor
cmp
or
adc
push
xchg
roll
movsb
mov
sbb
mov
lcall
lret
daa
jb
test
leave
xchg
rorb
push
nop
ja
lahf
std
jnp
mov
sbb
out
or
xchg
jg
lock
sahf
pusha
lcall
ret
mov
sub
pop
sub
xchg
or
cmp
dec
loope
cmp
push
sbb
mov
jns
jns
lcall
push
repnz
loope
movsl
mov
incl
jno
js
dec
fisubl
cs
jnp
lock
or
test
movsl
das
adc
stos
pop
inc
aad
and
pop
js
sbb
inc
gs
daa
add
adc
fsubl
jecxz
cmp
fs
movsb
repz
ret
movsb
repz
dec
fidivrs
out
sbb
cmp
pop
cmp
test
cmp
pop
jne
dec
push
push
sub
xor
ret
mov
sub
mov
jl
and
data16
insb
adcl
mov
mov
cmp
push
xchg
fwait
call
and
push
cmp
xor
jns
and
sbb
push
mov
xlat
in
insl
jl
jle
pop
ja
in
mov
cmp
jns
mov
stos
pop
xor
inc
popf
xor
or
out
push
rcll
mov
sub
leave
es
cmp
or
dec
dec
outsl
mov
mov
outsb
fisttpll
xor
pop
mov
and
push
cs
jbe
mov
jno
out
jg
mov
mov
rorb
sti
or
mov
mov
loopne
mov
push
jp
mov
push
pusha
test
and
jnp
ljmp
pop
enter
adc
inc
aam
jo
lea
and
adc
roll
test
xor
inc
shrl
scas
push
dec
xor
cmp
jb
lods
push
xor
imul
cmp
sub
sub
cld
data16
fimull
xchg
in
mov
xchg
notl
aaa
xor
xchg
daa
roll
sarb
lods
shl
dec
cmp
or
add
or
lret
sarb
add
sub
xchg
push
inc
and
dec
imul
aad
arpl
sbb
mov
jo
xchg
js
push
pop
lods
mov
scas
sbb
roll
and
jle
out
into
cmp
jno
xor
sub
lock
xlat
xor
pop
movb
xlat
mov
jle
int3
ret
sbb
fnstsw
int3
mov
or
dec
sub
fnsave
xchg
jbe
divl
mov
int3
mov
dec
adc
jmp
mov
mov
idivl
shll
xchg
pop
test
mov
cmp
mov
pop
mov
xchg
cli
lods
popf
lret
adc
lcall
je
push
xor
cmp
dec
scas
pop
mov
jb
fidivrs
in
aaa
andl
or
mov
pop
jmp
or
mov
popa
es
xchg
sbbb
push
xor
cmpsl
fwait
lcall
aam
cmp
dec
mov
les
cld
divb
in
ret
ret
add
sbb
add
xor
fs
and
rclb
ret
cs
add
cmpsb
dec
jbe
mov
dec
aaa
aaa
push
lock
xchg
call
dec
jno
pop
scas
nop
mov
pop
cmc
sahf
rorb
cltd
pop
dec
mov
push
and
shl
dec
loope
rdmsr
xchg
xlat
cmp
mov
stc
sahf
mov
jge
sbb
mov
mov
fnstsw
cmpsb
dec
push
add
sbbl
sub
xor
push
outsb
mov
in
pop
adc
mov
jns
sub
aaa
add
mov
jp
sub
icebp
in
pushf
mov
leave
call
into
pop
or
or
jp
daa
test
ret
shlb
outsb
stos
mov
inc
jge
dec
int
stos
and
lock
in
mull
loopne
jmp
xchg
jo
or
mov
cmp
sub
inc
movsl
mov
mov
cmp
jo
pop
mov
ljmp
push
sbb
outsb
gs
cli
and
jle
jge
ss
and
test
push
gs
inc
sub
ss
mov
jecxz
pop
out
mov
fisttps
add
pop
jbe
sub
push
sub
sbb
add
mov
cmp
mov
cltd
add
cmpsl
outsb
mov
ficoms
mov
nop
ret
inc
xor
popl
outsl
mov
mov
popa
push
push
mov
xchg
cmpsl
insl
int
push
sbb
loopne
fwait
lahf
adc
jne
push
insb
mov
das
xchg
dec
push
pop
popa
cmp
adc
xchg
rcrb
push
cmc
push
pop
sahf
loop
cmp
pusha
adc
xor
out
pushf
or
mov
repnz
or
add
dec
mov
jno
sarb
mov
pop
cmpb
dec
inc
push
decl
lods
inc
cmp
pusha
fstps
aam
lret
movsb
sub
xchg
sub
mov
les
dec
cltd
dec
outsl
fiaddl
fidivrs
mov
mov
jae
icebp
js
cmpb
push
sti
mov
mov
and
repz
xor
insb
add
adc
sub
add
cmp
addr16
jmp
inc
dec
lret
jp
lods
mov
inc
movsl
lcall
insb
mov
decl
push
lcall
into
test
out
ss
test
push
ljmp
idiv
pop
mov
add
scas
stos
aam
jmp
popa
test
in
sti
out
adc
arpl
jp
push
adc
adc
sbb
cli
shll
ffreep
popf
mov
push
outsl
and
jg
mov
xor
sub
out
dec
leave
ds
adc
andl
xor
sub
and
sahf
mov
je
fcmovnbe
shll
push
xor
push
inc
and
fdivrs
push
inc
jne
sub
movswl
jns
out
adc
jne
add
gs
cs
sbb
jno
das
mov
cwtl
jge
incl
insb
xchg
pushf
push
int
shr
and
repz
sbb
sbb
dec
clc
xchg
mov
mov
sbb
cmc
popa
pop
in
movsl
cmpsb
cmp
cmp
stos
adc
in
cmp
xor
mov
insl
cmc
inc
gs
cmpsl
das
popf
and
jno
divb
call
pop
lcall
leave
pop
push
jge
pop
and
push
add
cmpsb
xchg
rcr
mov
fwait
lock
add
outsl
sub
popa
dec
and
adc
mov
xor
je
mov
xchg
dec
mov
and
loop
push
sub
inc
jg
pop
sbb
xor
push
inc
and
popa
hlt
sub
jne
xchg
je
std
sahf
dec
mov
ljmp
mov
push
xchg
pushf
push
loope
icebp
ljmp
ljmp
pop
push
or
scas
repz
out
cmp
inc
cmp
xchg
add
mov
adc
adc
add
sbb
mov
mov
xchg
int
cs
add
cmp
daa
adc
xchg
mov
dec
shlb
sbb
jecxz
sub
lods
jge
xchg
movsb
bnd
cmpsl
cmp
add
xchg
mov
add
test
or
xchg
xor
dec
fldcw
jno
inc
cwtl
loop
mov
lahf
xchg
mov
aaa
dec
or
int
xchg
xchg
push
stos
stos
fwait
xor
dec
push
movsl
cmp
jo
jnp
insl
je
lds
jecxz
and
and
aaa
in
inc
fcmovne
or
xor
pop
ss
sbb
jmp
push
mov
push
and
cmpsl
jp
fisubrl
cltd
mov
fidivs
fldenv
dec
or
fnstsw
xchg
clc
dec
jg
insb
mov
pop
pop
pop
and
or
lods
ret
push
push
cmpsb
imul
mov
cmp
nop
iret
jb
sbb
inc
jg
iret
mov
rcrb
ss
pop
arpl
jbe
stos
out
int3
xor
adc
jecxz
xor
out
xor
jg
mov
inc
shrb
shlb
xchg
pop
iret
mov
jg
mov
das
sub
aas
dec
call
shrb
dec
fidivl
or
mov
pop
jge
fldl
lea
testl
rcll
adc
cmc
push
pop
and
dec
scas
dec
xor
mov
xchg
inc
xchg
inc
insl
out
std
xchg
and
push
inc
out
pop
in
insb
insl
sub
in
xor
std
psadbw
mov
in
adc
mov
and
jge
adc
stos
dec
jp
std
arpl
shll
xchg
pop
xchg
out
mov
jo
mov
inc
int
xchg
and
out
test
push
sahf
in
lret
inc
test
dec
mov
xor
jmp
mov
pop
scas
mov
push
jle
and
or
inc
test
popa
aam
hlt
mov
dec
mov
imul
sarl
popa
sti
ret
or
inc
lods
cmp
in
and
push
add
rcrl
inc
sub
push
scas
xchg
orl
subl
cmc
mov
mov
dec
mulps
fidivrs
popf
mov
arpl
outsb
outsb
inc
inc
push
push
push
jb
cld
jbe
inc
pushaw
mov
jg
movsl
imulb
sbb
or
pop
ja
xlat
mov
int
into
pop
dec
xchg
repz
cmp
dec
aaa
rclb
push
pop
sarl
loop
pop
inc
mov
add
sub
adc
xchg
repz
sahf
es
or
mov
push
ret
test
add
and
xchg
insb
jmp
fnsave
sbb
or
cmp
ficompl
dec
mov
add
add
mov
sti
mov
or
pop
cli
bound
add
or
push
mul
sub
mov
lea
pop
pop
cli
mov
xchg
shrb
push
stos
add
icebp
and
aaa
loope
sbb
bound
push
sub
enter
imul
mov
dec
lea
fiaddl
mov
or
xor
add
addl
pop
jns
cmpsl
rcrl
aaa
imul
int3
adc
dec
or
pmulhw
adcb
popf
out
mov
jge
push
stos
pop
jp
add
lds
add
lods
dec
stos
fadds
push
push
mov
ret
lds
mov
sub
sar
xlat
inc
insb
out
je
mov
xchg
or
add
mov
sub
cltd
inc
sub
cmp
add
jle
gs
jno
push
jge
pop
fnstsw
pop
or
add
sub
popl
jecxz
aas
adc
jb
sbb
jne
xchg
or
mov
jno
jecxz
adc
push
add
movsl
clc
jmp
stos
roll
sti
sub
popf
nop
cli
in
dec
nop
mov
mov
lret
mov
mov
andl
gs
push
aas
jge
and
adc
add
icebp
lcall
fs
xor
adc
in
lret
jbe
insb
mov
pop
inc
sbb
xor
ss
mov
cmp
test
fwait
sti
cmp
test
xchg
out
push
mov
loop
pop
dec
mov
test
out
ja
iret
add
std
data16
push
add
fildll
push
push
shr
lcall
cs
mov
xchg
push
or
fcoms
sub
pop
or
repnz
push
mov
hlt
cmp
jne
mov
out
xor
roll
lds
sarl
sbb
jb
mov
inc
lods
lret
repnz
xchg
mov
arpl
movsl
repz
xor
or
nop
cmp
sbb
or
in
lods
pusha
add
lods
inc
pop
push
int3
lock
rol
sub
add
pop
mov
pop
stc
daa
xchg
pop
xor
xchg
ja
ljmp
jne
xchg
pusha
fnstsw
jnp
push
pushf
xchg
mov
or
inc
outsl
das
push
adc
icebp
mov
adcb
add
outsl
add
insl
rcr
lods
stos
mov
adc
lcall
gs
push
inc
ja
in
mov
push
fstl
lea
dec
fsts
imul
push
dec
in
mov
or
aas
cltd
pushf
cltd
test
mov
sub
insb
inc
mov
in
inc
adc
and
ja
mov
sub
inc
es
xlat
outsb
jne
movsb
cmpsl
mov
add
mov
or
fwait
into
lods
popf
xor
fimuls
imul
push
mov
das
test
inc
roll
lds
loop
jecxz
jmp
mov
clc
mov
xchg
out
imul
xor
add
rolb
cmp
int
aas
cmpsb
mov
icebp
sub
push
loop
movsl
insb
insb
and
and
push
pop
sub
fcmovnbe
dec
cmp
sub
loope
pop
lods
sbb
mov
cli
mov
sbb
pushf
js
or
cmc
js
ljmp
pop
lret
inc
push
ss
push
mov
rorl
fbld
das
xor
rorb
leave
ja
fildl
out
jl
or
push
subb
fldenv
mov
lea
sbb
pop
dec
and
cli
mov
adc
std
adc
clc
xorb
not
ljmp
test
enter
test
pushf
test
pop
push
loop
dec
fucom
outsl
outsb
imul
dec
icebp
fldt
test
sub
adc
mov
sub
inc
fld
pop
cmpsl
inc
pop
mov
inc
sahf
inc
shr
cmpsb
jbe
xchg
push
push
out
daa
fistps
xchg
iret
loopne
push
sahf
rcrl
mov
dec
inc
jg
adc
cmc
ss
pop
cs
dec
iret
dec
ljmp
cltd
inc
flds
outsb
sbb
mov
pusha
sbbl
stc
fnstenv
cltd
sbb
sub
sub
loope
jmp
push
jl
lcall
fcmovnbe
adc
sub
lock
xchg
lret
je
je
ja
sbbl
lods
in
stos
xor
int
or
stos
popf
cmc
sub
fucomp
adc
in
xlat
and
inc
pop
lahf
adcb
mov
cmp
sub
lcall
xchg
xor
sbb
push
movsl
push
and
iret
pop
mov
mov
bound
jl
lcall
jg
out
push
fsubs
adc
mov
jg
popa
dec
adc
inc
lret
stos
add
sbb
imul
push
push
ljmp
pushf
and
ficoms
test
sbb
rclb
pushf
mov
cmp
loopne
ja
jno
push
dec
lret
orb
mov
popf
push
or
push
gs
div
test
jmp
and
stos
adcb
int
stos
mov
inc
add
jl
jbe
outsb
cmp
sub
stos
insb
xor
push
pop
and
sbb
pop
and
andl
mov
pop
hlt
fwait
jl
popa
push
push
sbb
stc
lock
imul
cwtl
jle
scas
icebp
and
adc
sti
mov
fcompl
fwait
adc
adc
test
gs
mov
or
adc
dec
jge
xor
mov
adc
dec
sub
adc
repz
test
fnstenv
mov
psubusw
mov
nop
fdivrs
cmp
inc
inc
mov
sti
daa
dec
mov
or
mov
or
add
cmp
fwait
mov
pop
cmp
add
or
in
out
xchg
addb
rcl
adc
aam
mov
lods
dec
ja
adc
rcll
sti
jbe
xchg
jmp
sbb
push
mov
vpshaw
ja
jecxz
xchg
lea
test
push
sub
sbb
dec
or
aas
sub
daa
jbe
push
ja
out
sbb
jmp
test
or
daa
sahf
ffree
push
add
pop
sub
int3
push
es
repz
sbb
dec
cmp
sub
mov
es
mov
and
enter
push
lock
test
push
repz
dec
xchg
pop
adc
or
pop
lcall
repz
xchg
dec
test
dec
leave
les
cmpsl
stc
xchg
lds
sub
jne
shll
jbe
or
aam
sahf
pop
jb
sbb
scas
pusha
insl
fwait
and
mov
fs
push
mov
inc
outsb
push
mov
std
sbb
xchg
lock
cmp
lds
lods
mov
pop
add
jg
repz
ret
cltd
mov
xchg
lea
xchg
xor
scas
mov
popa
adc
pop
mov
out
hlt
std
jbe
inc
push
sbb
mov
dec
sub
aas
sub
add
jge
mov
push
enter
push
add
jb
scas
mov
push
stos
push
sbb
or
inc
stc
mov
and
mov
jmp
jmp
fstpt
cmpsl
mov
enter
adc
xchg
les
jmp
and
cmp
mov
andb
xor
mov
dec
movsl
sarb
mov
mov
sub
lock
imul
lods
iret
xor
ret
mov
cmpb
into
xor
popa
jmp
outsl
push
xchg
mov
inc
int
lds
repnz
out
pop
arpl
dec
push
mov
add
cmpsl
dec
int
shrl
cmpsl
mull
mov
xchg
test
and
sub
das
ljmp
loop
in
sub
or
out
cmp
nop
sbb
mov
mov
rorl
lock
sub
mov
and
or
xor
out
inc
mov
mov
sbb
pop
jno
xchg
orl
scas
push
cmp
xchg
shll
sbb
sarb
push
xor
fiaddl
lret
cmpl
sarb
outsl
rolb
in
out
mov
push
jmp
adc
mov
stos
sbb
pop
dec
adc
ret
mov
andl
out
movsb
push
testl
fmulp
mov
in
fisttpll
push
ds
ret
mov
fs
rcrl
and
pop
mov
jne
stc
jp
sbb
xchg
movsl
ja
dec
xor
lea
add
and
arpl
push
and
jge
pop
rcrb
fucomip
out
lret
pop
add
sub
data16
outsb
inc
inc
fwait
pop
pop
pop
int3
or
into
cmpsb
fwait
in
mov
xchg
sbb
xor
movsb
push
fwait
js
arpl
insb
popf
aam
jnp
sbbl
test
stc
stos
adc
mov
cwtl
cmpsl
pusha
adc
cmp
pop
mov
stos
jp
mov
mov
imul
mov
pop
xor
pushf
sbb
add
dec
mov
jle
push
jbe
das
pop
mov
ljmp
enter
jb
jbe
mov
push
imul
mov
movsl
jmp
cld
jbe
clc
xchg
ss
mov
xor
or
mov
mov
popa
das
mov
std
mov
mov
decl
inc
pop
push
jp
sahf
push
loope
mov
imul
subl
cmpsb
iret
test
xor
mov
push
aas
movsb
imul
in
ficoms
inc
aas
and
ss
fwait
outsl
or
cs
inc
or
in
pop
test
cmpsl
bound
push
cwtl
mov
push
jle
mov
sub
inc
mov
jnp
mulb
cs
mov
sahf
testl
bnd
xchg
pop
sbb
sbb
xor
cmpl
dec
mov
sbb
add
jns
sbb
fwait
cmpsb
sub
sbb
pop
mov
add
lods
sbb
out
mov
cmp
pop
mov
mov
in
shl
repz
pop
dec
adc
cmc
mov
shll
push
pusha
mov
push
mov
stc
jecxz
sub
in
mov
push
mov
loope
add
jge
js
movsbl
stc
pop
aas
das
or
pop
roll
or
jl
cld
stc
aaa
jne
addr16
aam
aaa
mov
xor
sti
mov
mov
gs
push
jbe
dec
jb
mov
bound
fisubl
lock
aas
xchg
mov
xchg
insl
sbb
imul
mov
int3
call
push
icebp
aad
mov
iret
and
iret
sahf
movsl
pop
lret
sbb
adc
pop
jmp
and
mov
mov
mov
push
pop
jns
stc
push
decb
shrb
stos
fcoms
mov
add
mov
xor
cwtl
lock
xor
stos
fimull
neg
mov
jg
stos
rcll
out
and
insl
lea
pop
cmp
mov
dec
cmp
xchg
out
imul
pop
scas
movsl
mov
out
dec
lret
sbb
fisubrl
inc
into
push
inc
mov
jns
insl
jae
out
sahf
sub
inc
cs
sub
or
adc
sbbb
pop
scas
or
in
sub
and
cwtl
or
xchg
mov
sbb
dec
out
test
and
ficoml
xor
cmpl
mov
rcll
sti
dec
cmp
insl
pop
xchg
dec
test
inc
xchg
jp
lahf
and
mov
out
fnstcw
stc
in
stos
icebp
inc
and
ss
sbb
jg
jnp
cwtl
stos
cwtl
cmc
cmc
imul
mov
jp
cmpsl
jno
cmp
push
dec
mov
dec
arpl
iret
repnz
jp
inc
ljmp
mov
adc
dec
shl
mov
notl
push
dec
repnz
out
dec
push
inc
push
jg
xor
jbe
cmpsl
dec
ja
sbb
adc
sbb
daa
loop
dec
fdivl
sti
in
mov
push
insl
flds
xor
arpl
sarb
pusha
and
mov
cmpsb
mov
fldenv
les
push
dec
mov
in
inc
mov
gs
sub
mov
fmul
sbb
out
hlt
or
imul
lahf
shrl
push
mov
pop
scas
jo
aam
and
aas
inc
mov
sbb
dec
aaa
sbb
lods
adc
ret
in
jb
js
ja
and
in
cmp
cmp
push
sbb
into
add
add
idivb
cwtl
jno
imul
and
sti
stos
mov
mov
and
push
clc
loop
fstl
movsl
adc
jecxz
push
shrl
lret
push
incb
cld
inc
xchg
adc
loopne
repnz
int3
or
outsl
ret
out
jnp
push
mov
mov
xor
mov
xchg
push
jnp
xlat
and
subb
insb
mov
and
pop
scas
test
pop
push
jl
jge
out
jnp
ljmp
push
inc
sti
adc
xor
shrb
mov
push
clc
and
test
shlb
movsl
mov
movsb
les
mov
in
mov
outsb
sub
popf
mov
cmp
rolb
adcl
sbb
jge
pop
add
add
lcall
int3
pop
std
call
push
insl
dec
xchg
push
cltd
push
xchg
daa
add
loopne
lret
push
xchg
sbb
pop
mov
std
add
sub
mov
and
fnstenv
lea
lcall
call
outsl
inc
or
lcall
or
adc
inc
inc
dec
push
adc
push
mov
iret
mov
or
aam
adc
xor
sti
pushf
nop
push
popa
cmp
jp
lcall
or
pop
add
stc
pslld
sbb
or
je
xor
ds
fldenv
orl
out
push
lret
or
xchg
js
xor
mov
push
sub
dec
es
leave
dec
sbb
shrb
lods
out
pop
mov
loopne
cmpsl
lcall
jmp
insb
dec
xor
cs
out
inc
jns
jle
pop
fsubrs
mov
sub
or
ja
mov
dec
jnp
outsb
dec
ret
mov
or
mov
sub
js
pop
data16
cmpsb
push
add
adcb
lret
lcall
sbb
add
rcl
stc
sub
stos
ret
test
aad
into
push
out
mov
insb
stos
mov
sub
pop
ja
pop
cmc
shrl
mov
or
loopne
dec
clc
xor
and
out
cmp
dec
inc
dec
jge
in
push
ja
cwtl
in
jp
fs
xchg
icebp
xchg
dec
lahf
pop
fsub
mov
mov
inc
fstps
sub
push
mov
shll
or
shrl
repnz
popf
scas
imul
cmp
ja
fistpll
inc
dec
bound
fldt
insl
cmp
and
or
inc
xor
in
loope
mov
cmpl
femms
add
xchg
pop
mov
xor
inc
or
push
out
cld
xor
les
mov
in
xor
shl
push
dec
out
enter
xor
jno
push
mov
lahf
sbb
out
sbb
push
mov
ja
loop
xor
cs
or
xchg
imul
xor
pop
scas
div
push
xor
xchg
movl
out
mov
mov
pop
pop
and
cmp
adc
mul
jecxz
mov
test
mov
outsb
xchg
dec
inc
out
xchg
pusha
mov
jle
lret
dec
mov
push
mov
outsl
mov
nop
scas
in
sbb
adc
leave
dec
repz
sti
or
cwtl
js
pop
mov
mov
xchg
xchg
mov
sbb
int3
pop
mov
sbb
mov
and
push
into
xchg
jno
mov
inc
outsl
add
bound
lea
clc
cmp
inc
aaa
adc
push
scas
mov
pop
mov
mov
mov
arpl
ret
gs
and
or
adc
jecxz
pushf
ja
hlt
loopne
test
dec
cmpsb
inc
mov
rcrl
lahf
push
mov
popf
cmp
push
sbb
stc
sbb
aaa
call
and
addr16
add
js
and
in
lahf
xor
jle
mov
pop
es
sti
push
fldt
aaa
imul
mov
arpl
inc
test
jns
imul
mov
in
cmp
inc
or
cmp
loop
hlt
cmp
sub
fidivl
mov
cltd
popl
xchg
pop
nop
mov
or
add
shrl
cli
pop
testl
push
push
out
ss
and
xor
popf
adc
pop
pop
push
bound
hlt
mov
shll
cltd
xchg
jno
inc
in
scas
loop
and
or
aas
out
addr16
cmpsl
dec
dec
sahf
filds
int
je
or
cmpsl
mov
lods
sub
cs
repz
xchg
lock
mov
jb
leave
mov
or
loopne
flds
fs
popl
insb
decl
mov
daa
dec
cld
lds
cld
outsl
mov
mov
loop
scas
scas
inc
add
mov
lock
xchg
out
xor
mov
call
pop
dec
ret
lahf
fists
add
inc
cld
push
mov
xchg
popf
and
div
cmc
adc
fildll
mov
sbb
mov
ds
pop
push
and
xchg
cmpl
add
adcb
or
pushaw
loope
cltd
fildl
addr16
cmp
lds
cwtl
or
fnstsw
cltd
je
test
adc
dec
test
rcrl
inc
push
mov
mov
pop
cmp
sub
mov
cmp
int
dec
mov
adc
dec
push
mov
or
pop
pop
push
fisttpl
jno
adc
pusha
xchg
repz
xchg
xchg
cwtl
jb
xor
in
xor
inc
sbb
dec
lcall
pushf
jno
sbb
stos
sub
pop
fsin
test
mov
and
push
sub
push
mov
orb
dec
mov
ja
mov
loop
into
cs
jbe
or
mov
popf
gs
mov
mov
mov
push
dec
dec
jge
lcall
mov
sti
insb
mov
push
sbb
fwait
mov
cli
mov
in
jge
push
outsl
popa
push
cs
clc
ret
mov
cmc
dec
sbb
or
xchg
ss
cmp
iret
jo
andl
pushf
sbb
mov
sub
adc
and
xlat
mov
adc
pop
mov
das
pop
arpl
fists
dec
inc
ljmp
es
add
popa
lods
insb
cmp
xor
jge
repnz
pop
mov
xor
mov
mov
or
jle
inc
test
mov
push
inc
movsl
sti
sub
adc
add
cmp
cwtl
movsl
mov
jbe
subl
sbb
adc
sub
aam
add
push
mov
adc
out
jno
pop
andb
jae
sbb
and
dec
push
adc
dec
into
aas
mov
push
sahf
mov
pshufw
jp
les
or
cli
movsl
movsl
out
in
ret
mov
jp
aas
add
sub
jmp
push
daa
shrb
popa
pop
mov
ljmp
mov
push
stc
enter
mov
imul
inc
xlat
sbb
addr16
loopne
or
dec
fsubs
sub
add
mov
iret
adc
mov
ret
jne
imul
mov
sub
mov
cltd
cld
fstpl
cmp
rolb
pusha
inc
hlt
and
mov
jle
fsubrs
adc
loopne
lahf
imul
js
iret
sub
and
sub
faddl
imul
lahf
pop
or
push
push
btr
mov
sbb
arpl
xchg
inc
and
mov
inc
clc
dec
fs
idivl
fldenv
out
mov
dec
lds
arpl
xor
aad
dec
push
xchg
out
xchg
imul
nop
jle
loop
inc
ja
flds
in
push
jge
inc
push
jecxz
arpl
cwtl
outsb
inc
lret
add
jnp
negb
or
xor
mov
mov
cmp
xlat
dec
leave
scas
aaa
sub
js
std
fldl
mov
xor
add
xchg
and
test
xor
insl
jecxz
xchg
out
sub
pusha
sbb
clc
nop
or
jmp
rcrb
dec
dec
movsb
es
aaa
xor
test
mov
mov
jmp
lret
sbb
push
push
enter
sti
out
push
or
or
xchg
cmp
mov
mov
in
jns
inc
pop
mov
mov
loopne
rcl
push
loop
stos
fwait
sub
dec
scas
adc
daa
imul
mov
fnstenv
push
arpl
dec
push
cmpb
jns
cmc
cmp
adcb
movsb
movsb
push
sub
jmp
fisttps
dec
es
scas
fimull
clc
in
shll
stos
cld
or
fcompl
sub
lret
add
sub
ljmp
stos
sub
fidivrl
hlt
fwait
and
imul
add
push
dec
jmp
xor
dec
push
into
js
fimull
daa
mov
stc
sub
ds
shrb
das
cmp
aad
mov
popa
cmove
mov
sbb
mov
push
and
sbb
cld
sub
fisttpll
movsb
adc
cmp
dec
std
push
enter
imul
sbb
mov
mov
push
test
push
inc
and
jecxz
jl
fcoms
sub
adc
ret
add
jns
push
insl
shr
xlat
dec
jl
cltd
je
cmc
inc
loop
pop
aaa
dec
imul
jns
xor
cmpsl
mov
inc
dec
hlt
adc
mov
out
adc
dec
loop
push
sub
int3
cmp
push
outsl
cmp
inc
push
cmp
xchg
sbb
lahf
iret
jle
push
sbb
mov
jne
gs
insl
add
icebp
mov
test
cmpsb
mov
repz
jg
or
test
jecxz
and
sbb
fbstp
ss
mov
imul
negl
fcoml
dec
mov
cmpsb
stc
jae
nop
mov
sub
out
pop
jnp
sbb
test
push
cmp
rcrl
ror
inc
xchg
ret
cmpsl
adc
and
xchg
dec
loopne
ljmp
pusha
push
push
stos
push
cli
lea
je
repnz
cwtl
rcll
sbb
dec
fcoms
mov
mov
mov
inc
lods
push
xor
sub
adc
ja
in
mov
popf
push
test
mov
xchg
ret
push
cmp
insl
dec
xor
mov
mov
pop
aas
and
decl
and
js
push
rol
lret
lret
mov
push
lret
int3
xor
repz
lahf
stc
hlt
sbb
dec
cli
push
mov
lods
test
fidivrl
loopne
and
scas
push
movsb
pop
movsl
dec
js
cltd
lods
push
loope,pn
int
cmp
outsb
adcl
jp
mov
mov
imul
and
adc
out
pop
cmp
mov
dec
inc
sub
mov
sbb
loopne
lcall
and
test
in
cmp
lahf
pushf
sub
push
lret
scas
and
outsl
add
call
imul
jbe
jp
fiadds
scas
dec
mov
das
push
pop
push
sbb
and
sbb
mov
dec
nop
xor
test
adc
pop
cmp
pop
and
jbe
lock
adc
cwtl
mov
push
push
call
ja
pop
insl
and
cld
push
sub
aam
out
daa
cli
sbbb
andb
jne
adc
sbb
push
inc
cmpsb
or
aam
push
xchg
outsl
incb
outsb
mov
pop
lds
jmp
sub
push
pop
cmpb
sbb
and
jp
data16
pop
jb
and
lods
cld
fisubl
cmp
pop
sbb
repnz
jno
mov
mov
out
xchg
xchg
aas
mov
pop
sub
stos
dec
xchg
cmp
scas
inc
dec
pop
pop
xor
cmp
sub
mov
lret
lods
cmp
cmpsb
icebp
or
outsl
fdivrl
rorl
jnp
push
in
cs
pushf
cli
fbld
lcall
idivb
pop
int
adc
jmp
pop
mov
pushf
scas
dec
push
mov
sbb
mov
sbb
push
cmp
outsb
xchg
sub
and
imul
shlb
push
mov
cmp
push
mov
adc
ret
lods
loopne
xchg
in
cli
es
sti
push
mov
xchg
sti
insl
jns
push
cmp
out
jle
fsubrs
adc
loopne
adc
jns
push
cmp
ffree
inc
aad
mov
sti
push
push
mov
mov
add
jmp
out
mov
sub
push
jnp
xchg
push
jl
loopne
push
mov
pop
adc
cmp
repz
call
sar
test
data16
xor
xor
add
lret
aam
or
roll
or
mov
pop
sbb
xchg
inc
pop
sbb
xor
mov
loopne
push
push
push
mov
dec
pop
int3
movsb
push
mov
js
ds
jle
jge
mov
addl
cmc
xchg
sarl
mov
ss
jle
jge
add
mov
mov
in
adc
aam
dec
xor
sub
xor
jg
jne
cmp
out
arpl
and
sub
adc
xchg
mov
fcmovnb
fsubs
adc
in
add
lea
hlt
inc
sub
push
sub
stos
cmc
sbb
mov
cmc
jl
push
push
jb
push
stos
jle
adc
icebp
das
adc
lcall
jmp
int
adc
nop
popa
mov
push
iret
sbb
flds
ja
or
mov
pop
sbb
jb
pop
xchg
or
fs
aaa
lcall
out
and
ja
into
adc
push
jle
aam
sub
outsb
push
sbb
mov
sbb
cmp
jle
mov
cs
test
push
xor
mov
movsb
cmp
int
dec
jb
inc
adc
fstl
fcmove
pop
and
sub
inc
mov
les
das
and
sbb
repz
rcr
mov
adc
pop
mov
fcmovu
push
xchg
jle
push
adc
sbb
mov
xchg
or
repz
push
xor
jg
mov
xor
cltd
pop
inc
jne
fadds
add
xchg
into
add
jo
or
dec
or
outsl
sbb
es
loope
mov
sbbb
jnp
test
xchg
xchg
pop
gs
icebp
mov
or
pop
in
sarl
fisttps
popa
out
lock
ds
scas
push
dec
iret
or
add
icebp
and
or
mov
xchg
out
in
lret
mov
and
xchg
out
add
pop
and
into
xor
test
lea
movsb
xchg
sbb
pop
or
inc
lods
js
sub
cmp
rcrb
sbb
outsb
push
push
and
mov
sub
rcll
js
mov
xchg
std
sbb
leave
and
loopne
mov
and
popa
incb
out
fstl
daa
sub
clc
jo
inc
sbb
mov
arpl
push
pop
inc
xor
adc
jmp
icebp
inc
imul
push
sarl
xchg
test
pop
ss
popf
mov
in
les
dec
jno
int
sub
adc
stc
xchg
fisttpll
and
mov
out
test
or
mov
cli
dec
push
aas
mov
jp
or
lcall
pop
lahf
add
loope
inc
mov
jmp
cltd
xor
xor
je
sub
jge
addr16
mov
arpl
cmpsl
cmp
shll
sarb
xor
push
xlat
outsb
pushf
xchg
and
pop
inc
push
sbb
int3
mov
inc
ss
or
adc
or
mov
lahf
stos
mov
dec
sbb
push
xor
shlb
lcall
icebp
xor
xor
xchg
mov
cmpsb
es
xlat
xor
adc
mov
lock
inc
shll
xchg
aam
jb
ret
mov
leave
ds
mov
xor
cltd
mov
ljmp
lret
aam
sbb
and
and
ficomps
dec
out
mov
sub
dec
pop
into
sub
mov
push
fsubs
arpl
xchg
sub
loopne
mov
push
push
cmp
sti
mov
in
sbbb
add
pop
imul
mov
imul
or
cmp
or
adc
fdivs
fsubrl
ljmp
inc
mov
in
pop
mov
daa
hlt
outsl
cmp
cs
push
ret
fcmovnu
addr16
inc
inc
mov
je
jmp
leave
xchg
xchg
movsl
pop
jmp
aaa
xchg
enter
lds
stc
xchg
movsl
and
sbb
jmp
push
push
jg
ret
sarb
fistpll
xchg
cli
mov
gs
cli
adc
mov
mov
sbb
nop
add
push
out
sub
sbb
ror
inc
iret
mov
inc
imul
mov
mov
cmp
jge
or
lret
daa
jle
mov
or
dec
adc
xchg
cmc
adc
sbb
sbb
adc
cmp
mov
pop
pop
loopne
xor
lcall
pop
mov
outsb
inc
in
jo
roll
cmp
ffree
mov
ja
pop
push
ret
pusha
cmp
in
scas
stos
iret
mov
repz
adc
sbb
adcl
in
lock
or
inc
ja
xor
adc
stos
jp
mov
or
call
js
mov
mov
ljmp
aaa
mov
movsb
popf
nop
inc
pop
rclb
fsubrl
fildl
cmp
or
mov
jmp
jmp
stc
dec
pop
leave
mov
outsb
dec
popf
loop
cwtl
scas
push
add
sbb
pop
and
repnz
in
add
fwait
int
cmp
sub
jg
sbb
xchg
pop
pop
push
pop
std
mov
mov
out
rcrl
sbb
push
mov
xchg
into
call
push
inc
cmp
push
fs
lds
pop
add
adc
pop
or
push
mov
jne
xor
enter
adc
inc
lret
not
fcmovbe
dec
fstl
stos
inc
adc
mov
rcl
vpmacssdql
dec
and
sbb
lcall
dec
repz
xchg
adc
mov
mov
and
hlt
cs
aaa
lahf
mov
xor
in
mov
out
hlt
lods
inc
mov
clc
cs
out
xlat
or
data16
jl
movsb
xor
sarb
mov
inc
lea
popa
out
pop
adc
and
lds
mov
aad
and
dec
xchg
fcmovnu
in
pop
sahf
xchg
stos
inc
jl
test
jg
stos
stc
pop
lods
aas
inc
enter
loopne
ljmp
push
dec
sbbb
or
hlt
sbb
js
jp
sub
das
cli
pusha
addr16
mov
out
repnz
popf
pushl
mov
les
ja
add
cli
mov
push
testl
out
push
movsb
movsb
f2xm1
add
lahf
outsb
div
xchg
and
pop
loope
adc
cmpsb
push
addps
stos
movsl
mov
imul
popf
fiaddl
lods
sub
je
sub
std
mov
xlat
iret
jp
jb
mov
fsts
insb
mov
inc
lret
icebp
push
and
iret
in
scas
xor
dec
aaa
pop
cmp
push
mov
push
cli
xchg
into
data16
jge
stos
rcrb
in
or
ds
bound
push
mulb
test
dec
out
into
iret
push
test
mov
je
enter
jge
xchg
or
mov
pop
out
mov
test
mov
jmp
icebp
pop
adc
mov
lods
movsl
mov
mov
ficoms
add
aam
adc
in
mov
ror
outsb
adc
push
xor
ret
int
repnz
mov
out
lods
or
testb
xchg
sub
xchg
fidivrs
int3
clc
out
mov
jp
rcll
ljmp
jb
push
es
or
push
dec
popf
pop
add
in
jmp
jmp
cmp
in
mov
sahf
ret
dec
subb
ljmp
out
divb
xchg
insl
jbe
mov
imul
ds
cmp
ret
pusha
ds
fisubl
jp
in
or
jnp
icebp
cmc
jns
mov
sub
arpl
aaa
adc
sbb
in
push
mov
aad
jnp
jecxz
inc
xchg
enter
sar
sti
pop
sbb
mov
inc
int
out
insl
mov
pop
leave
pop
xchg
cld
shll
fsubrl
scas
sbb
nop
in
enter
adcl
mov
aad
push
add
test
adc
in
mov
push
jne
xor
and
outsl
call
cs
xchg
jns
nop
push
xlat
lcall
cld
sub
repz
mov
xchg
pop
lods
mov
xor
clc
rcr
lods
dec
cltd
push
push
dec
mov
xchg
or
in
fisttpll
aad
or
push
loope
fdivs
push
mov
sub
sub
push
rcll
dec
mov
fcmovne
adcb
bound
adc
test
sti
pop
dec
int
int3
cmp
push
std
inc
ret
in
jnp
in
mov
cmp
xchg
imul
adc
popa
and
fisttpl
xchg
pushf
aaa
call
aad
mov
cmc
out
adc
pop
aam
and
leave
fdivp
pop
mov
popf
les
jne
insl
push
sub
xlat
mov
fadds
mov
push
mov
cmc
xchg
outsb
add
js
bound
aad
cmp
test
jae
add
push
lret
mov
fimull
arpl
arpl
insl
pop
test
clc
inc
cmpsb
outsb
dec
mov
stos
xor
sub
xchg
cmp
cmpsl
mov
add
push
and
mov
in
mov
fdivp
std
mov
sbb
xor
fcomi
push
orb
push
adc
lods
push
ds
mov
pop
push
cwtl
bswap
movsb
test
jae
and
jg
mov
sarb
inc
cmp
jmp
inc
leave
jecxz
in
shlb
mov
xor
dec
sti
out
lods
and
push
sti
xchg
cwtl
and
jne
sbb
mov
add
jne
paddsb
sub
jne
jl
jg
cmpb
test
sarl
add
fs
and
mov
and
lods
mov
ljmp
roll
pop
lea
clc
lret
lds
lcall
mov
enter
sbb
fildl
cld
mov
and
xchg
dec
push
incb
jno
cmpsl
stc
sub
into
mov
inc
int
adc
mov
negl
addb
mov
dec
inc
inc
enter
sbb
jl
movsb
mov
pop
cmpsl
pusha
hlt
loopne
cs
mov
loopne
stos
or
sbb
rcrb
pusha
adc
rep
rorb
push
mov
loope
mov
inc
xor
imul
fsubl
mov
pop
pusha
je
xor
lods
rolb
cli
xor
mov
aaa
mov
lea
add
movsl
out
pop
pusha
sub
testl
cmp
loope
fs
xchg
sub
push
cmpsl
arpl
imulb
ljmp
xor
out
pushf
pop
fdivs
imul
sbb
pop
or
xchg
inc
outsl
mulb
pop
scas
sti
popf
aam
popf
out
mov
cmp
xchg
add
ss
cmp
xchg
mov
out
and
adc
orb
push
or
in
xor
loope
cwtl
ret
iret
mov
sbb
mov
cmp
aaa
enter
lea
cmp
cld
cmpsb
jle
inc
mov
mov
adc
popf
or
pop
jmp
sub
dec
fnsave
xor
fwait
or
sub
xchg
cmp
out
in
lret
inc
cs
and
stos
test
xor
mov
adc
push
pop
push
ret
mov
test
and
mov
dec
or
outsb
sub
pop
mulb
pop
push
nop
or
cld
inc
jo
ret
push
sub
mov
ja
in
fildll
adc
jg
test
mov
mov
inc
sub
int
leave
jno
and
lods
movl
sub
sub
mov
repnz
pop
int
inc
ljmp
loopne
jae
mov
push
fsubrl
call
push
pop
pop
pop
je
inc
rcll
nop
scas
and
cwtl
aad
mov
xchg
mov
add
filds
push
pop
xchg
outsb
sub
xlat
cmp
pop
fsubrl
clc
lret
arpl
jmp
xchg
rcr
rcr
xchg
stc
add
push
jne
sbb
cmpsl
lods
sub
pop
pusha
repnz
jecxz
adc
loope
je
idivl
sbb
addr16
jnp
inc
xchg
add
ss
adc
clc
inc
outsb
push
xor
insb
aad
inc
scas
push
mov
sbb
shrl
jg
stc
lock
fs
les
sbb
sub
cli
push
mov
std
rol
or
jl
inc
fucom
shlb
cmp
mov
int
inc
pusha
push
sub
hlt
ljmp
mov
adc
push
pop
and
push
arpl
rorb
pusha
test
rcrl
pushf
ja
jbe
sti
daa
cmp
sbbl
inc
ror
xchg
int3
fcmove
arpl
rorb
ljmp
sub
jo
repnz
push
stc
adc
mov
pop
or
sub
push
push
or
sti
loop
inc
xor
arpl
das
pop
sub
push
enter
jecxz
addl
stos
stos
rorb
inc
cmpsl
add
push
mov
sbb
fists
add
or
lcall
or
les
sti
jg
xor
mov
or
gs
cmp
fsubl
je
sbb
mov
xor
mov
push
adc
dec
sahf
test
xchg
leave
inc
ja
xor
rol
je
push
ds
pop
mov
mov
xchg
jl
mov
sbb
pop
dec
bound
loopne
outsb
or
and
dec
jg
dec
pop
ret
aam
adc
jo
loope
rorb
fiaddl
xchg
xor
mov
or
nop
ss
cmp
adc
hlt
arpl
fs
pop
sbbb
icebp
lret
es
loopne
das
push
stos
cmp
inc
jnp
imul
int
fs
add
mov
popf
test
mov
push
out
insl
lret
fcomip
bound
insb
dec
popf
pop
movsb
push
cmp
in
lods
popa
adc
addb
mov
fsubr
cmp
adc
sbb
and
imul
movsb
outsb
pop
adc
arpl
int
pop
or
jns
imulb
and
jmp
jecxz
xchg
sub
hlt
mov
push
push
js
sbbb
mov
jecxz
lcall
mov
and
sub
into
mov
jge
scas
sbb
aad
jns
cmc
jl
inc
cmc
adc
cmp
sub
sub
xlat
cwtl
insb
pop
or
dec
mov
inc
test
and
fstpt
loopew
ret
pop
lahf
fcomps
loop
mov
pop
mov
imul
ljmp
sbb
mov
scas
push
adc
movsl
andl
test
cmpsl
sbb
or
push
movsb
lcall
add
sbb
lock
movsl
imull
stos
xchg
movsl
lret
das
adc
nop
sahf
push
aaa
xchg
mov
fistpll
imul
rcrb
icebp
imul
xlat
jmp
push
mov
mov
out
mov
mov
add
fsubrl
add
or
push
pop
sbb
push
push
push
int
jb
fcomip
cmp
hlt
hlt
add
push
cmp
xor
mov
adc
arpl
out
into
adc
pop
add
and
cld
push
enter
dec
in
fs
xchg
mov
mov
lds
scas
inc
push
or
add
movsl
or
inc
cmp
mov
cmp
outsl
lahf
pop
mov
sbb
mov
repnz
int3
xchg
sub
orb
dec
stc
fstps
cmpsb
mov
jmp
push
adc
stc
push
mov
push
xchg
push
inc
mov
push
mov
xchg
dec
push
fstp
in
jle
add
inc
jl
add
dec
js
xchg
fidivrs
mov
jae
jnp
out
in
lock
push
loope
es
adc
stos
sub
vmulss
aaa
insl
int3
sub
push
mov
fwait
lret
insb
loope
push
iret
movsl
or
stc
mov
push
dec
pop
push
leave
jmp
mov
jg
xchg
sbb
ljmp
or
pop
sub
hlt
mov
dec
imul
jecxz
orb
inc
call
shrl
pop
mov
movsl
jle
and
xor
rcr
jns
mov
je
outsl
dec
cmpsl
ret
std
lods
or
test
daa
aam
sbb
cmpsl
mov
inc
test
jl
cwtl
rclb
cmp
loope
adc
mov
jmp
jae
inc
in
pop
cmp
adc
xor
mov
mov
test
dec
or
xor
cmpsl
stos
int
sbb
jg
jp
cmpsl
mov
add
mov
mov
jno
sbb
xor
movsb
push
mov
cmp
xor
push
dec
mov
test
aas
adc
sti
sti
test
fucom
leave
mov
lahf
in
inc
fwait
push
mov
popl
adc
jl
stc
jp
push
mov
sbb
addr16
imul
ds
sbb
or
xchg
mov
loopne
dec
fadds
cmp
xor
inc
cmpb
arpl
add
inc
jp
test
loopne
or
sub
adc
inc
scas
xchg
jo
nop
xlat
fldt
out
decb
std
push
xor
mov
hlt
lods
mov
and
rorl
in
pop
push
test
loopne
xor
dec
jecxz
jne
mov
pop
stos
into
sarb
sbb
push
jne
jnp
sub
rorb
push
out
sarb
ja
aas
or
jg
push
sub
imul
push
cmp
repnz
or
ret
sbb
sub
or
mov
lods
push
out
insl
movsb
ds
mov
xor
xchg
mov
cs
inc
inc
idiv
sbb
cmc
icebp
cmp
fcoml
ret
cmpsl
popa
pop
xchg
dec
pop
enter
jo
pop
adc
les
sbb
cmp
add
push
push
divl
inc
xchg
xchg
sub
repnz
sbbb
mov
insb
hlt
nop
adc
sbb
jbe
mov
movsl
pop
mov
xor
cwtd
push
add
cmpsl
inc
loopne
test
sarl
mov
sub
push
sbb
leave
lret
lods
cld
jae
lahf
adc
ret
add
cmp
adc
shl
hlt
test
pusha
lcall
popf
in
cmp
fs
inc
jbe
mov
push
int
pop
aam
rolb
or
push
mov
int3
jne
testb
sarb
sahf
jle
mov
sarb
aad
add
mov
sub
lret
or
jl
setnp
cwtl
sbb
pop
xchg
cmc
nop
jmp
and
dec
jne
pop
add
inc
jg
add
inc
jle
add
mov
in
stos
test
out
xor
push
xor
add
jns
cmp
imul
adc
shlb
nop
inc
popf
and
nopl
push
call
ret
sbb
repz
xor
jae
cmp
cs
outsl
pop
fdivrs
xchg
adc
filds
into
lods
inc
movsb
mov
push
ret
pop
rclb
cmpsb
rorb
push
jecxz
stos
popf
push
ret
movsb
clc
jecxz
lahf
push
fldt
mov
adcl
jmp
clc
cmp
outsb
mov
adc
xlat
lret
cmp
or
fistpll
hlt
lods
add
call
stos
gs
stos
outsl
lahf
enter
jo
jne
movsb
sbb
addr16
xchg
movsl
mov
lret
xor
mov
test
xchg
xlat
call
ret
inc
cmc
sahf
cwtl
outsb
dec
mov
decl
iret
into
xchg
scas
imul
jl
sbb
pop
icebp
cltd
lahf
jge
mov
adc
xor
mov
cli
popf
movb
mov
std
pop
xorb
lcall
in
xor
cli
push
arpl
fs
addr16
push
out
cmc
push
inc
adc
jo
xor
repnz
mov
arpl
mov
jp
imul
adc
into
in
loope
outsb
pushf
xor
dec
test
notb
cmc
push
jp
dec
push
sbb
push
mov
movsl
inc
cli
ss
push
xor
push
xchg
or
mov
adc
test
test
pop
movsb
lcall
loopne
mov
test
scas
xor
inc
jne
sub
adc
pop
lret
jne
ds
and
push
popa
popf
dec
shr
fnstenv
outsb
inc
inc
test
les
mov
ficompl
pop
push
ret
cltd
mov
mov
cwtl
lea
mov
and
pop
jno
cwtl
fcmovbe
xchg
push
ja
aas
inc
out
addr16
jmp
jno
notb
push
ljmp
add
cltd
pop
clc
or
xor
sub
cltd
xor
aaa
jge
cmp
arpl
mov
int3
sbb
pushf
jo
mov
aaa
pop
add
mov
ror
scas
fidivs
xchg
into
xor
jg
xchg
inc
dec
lcall
mov
fdivrp
xchg
pop
push
push
add
pop
and
cld
xchg
inc
out
cmp
adc
ret
mov
push
jmp
in
mov
cmp
stc
jmp
lret
call
jnp
idivl
.byte
.byte
dec
push
.byte
