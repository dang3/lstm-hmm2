sub
stos
push
or
cmc
cmp
movsb
ja
add
lret
cmpl
or
mov
push
dec
jmp
mov
ret
xor
test
enter
or
pop
popa
add
int
mov
inc
cmp
jmp
jmp
sbb
dec
and
pop
and
xor
cmpsl
fistpl
fidivrl
and
mull
pusha
mov
adc
adc
cmp
daa
push
rcll
mov
loop
mov
out
scas
das
inc
mov
cmp
inc
mov
cltd
jg
push
mov
jo
jg
sti
cmp
fs
lea
icebp
shl
stos
insl
cmpsb
std
mov
sub
not
mov
push
out
test
xchg
xorb
sarb
mov
fcompp
mov
negb
lods
xor
ret
je
stc
push
notl
jle
sbb
arpl
dec
add
pop
dec
imul
dec
sarb
ret
xchg
xchg
repnz
xor
out
ret
mov
mov
inc
stos
dec
fwait
nop
rcrl
mov
dec
sarb
xchg
xor
push
mov
pop
mov
dec
sub
sub
icebp
dec
xchg
jns
fdivp
jbe
xlat
push
add
mov
mov
pushf
addr16
ja
mov
clc
test
negb
lock
mov
adc
dec
push
sub
movsb
jae
sbb
sbb
dec
rol
jg
dec
jmp
loop
arpl
add
jecxz
jne
in
shlb
es
sbb
adc
test
add
aam
mov
daa
cmp
mov
cmp
in
out
sbb
xlat
jle
sti
rol
adc
sub
push
jo
cmp
in
pop
mov
loope
adc
add
in
mov
popf
push
jecxz
inc
mov
jns
pop
jne
fadd
dec
jbe
mov
jno
xchg
mov
movsl
xor
lods
mov
mov
fdiv
cmp
inc
mov
mov
cld
imul
lods
adc
push
je
enter
dec
test
mov
sarb
cld
cmc
mov
mov
mov
push
call
in
shlb
call
pop
dec
inc
or
mov
mov
pushf
push
adc
sub
scas
jo
and
mov
mov
adc
push
cmpsb
arpl
repz
jmp
clc
cmp
xchg
pusha
cld
inc
dec
add
lods
cwtl
pop
inc
std
fildl
push
mov
add
jmp
out
dec
jbe
mov
mov
iret
sahf
jl
scas
inc
lahf
outsb
pop
fmul
mov
push
orb
ds
jo
fistpl
sbb
adc
mov
inc
fimull
iret
dec
outsl
and
pushl
hlt
dec
faddp
sti
inc
cmp
pop
js
xor
inc
sbb
cli
adc
push
scas
xchg
test
cltd
jl
cwtl
lcall
stos
inc
arpl
repz
lods
add
inc
dec
xor
push
cmp
cmpsb
incl
xor
cmp
cmp
je
inc
adc
or
fisubrl
in
hlt
xor
int3
mov
fsubp
or
ret
pop
jmp
jb
xor
je
mov
arpl
loope
xor
cld
add
in
jae
lret
inc
adc
sub
pop
mov
test
out
jb
rol
insl
leave
movsl
ret
ret
les
int3
sub
jo
jnp
jmp
hlt
fdivrl
xchg
sbb
push
mov
inc
push
mov
shlb
sbb
inc
fbstp
sbb
sub
inc
mov
cld
adc
xchg
cs
sub
sub
cmpsl
fdivrp
imul
xor
mov
sti
pop
cli
in
std
xor
loopne
cli
stc
jl
cmp
xor
and
in
dec
mov
bswap
test
sahf
inc
cmpsl
lret
mov
or
push
icebp
inc
xor
dec
mov
imul
jge
cmc
movsl
out
ret
cmc
jns
adc
or
in
out
loope
lods
cli
sbb
incb
and
mov
adc
iret
lods
jno
insb
fcmovb
jge
sub
push
nop
ja
inc
xchg
movsb
nop
dec
pushf
int3
mov
mov
loop
mov
jmp
inc
int
lahf
pop
sbb
xor
cmpsl
pop
cltd
outsb
inc
out
jbe
push
pop
xor
jo
push
in
mov
outsl
mov
jne
lock
mov
mov
dec
or
push
shlb
test
fcmove
xor
jp
mov
push
lcall
push
and
fcmovnb
dec
jmp
cmpsb
jmp
jo
dec
jecxz
lahf
fs
aas
mov
mov
pop
ret
cltd
filds
arpl
lret
inc
ret
dec
add
sbb
sti
sub
cmp
lea
cmpsl
inc
imul
dec
daa
sub
mov
sbb
mov
out
inc
scas
mov
mov
test
push
push
fstpt
dec
xor
xor
mov
out
repnz
rcrl
dec
ja
sub
mov
mov
adcb
inc
sbb
imul
mov
jp
lods
imul
lret
inc
lea
out
cmp
mov
mov
inc
subb
or
and
adc
pop
push
out
jno
add
push
or
mov
popf
jae
adc
ss
push
int
lcall
lcall
jns
cmp
push
xchg
lea
sbb
xor
cmp
aad
inc
sub
mov
test
lock
imul
xor
add
mov
cmp
mov
ljmp
dec
xor
xlat
add
insb
inc
lea
sub
pop
data16
out
inc
jnp
arpl
xor
dec
sub
icebp
fwait
sub
stos
mov
iret
sub
xchg
lea
mov
cltd
mov
dec
outsl
je
call
adc
daa
in
icebp
lds
sahf
pop
negl
fstpt
cmp
sbb
hlt
pop
aam
and
out
scas
js
movsb
xchg
or
mov
inc
ds
cwtl
add
mov
aad
adc
mov
or
sub
shlb
addr16
dec
mov
stos
and
lods
inc
or
xlat
lret
js
mov
std
daa
shlb
jnp
xchg
mov
lret
mov
and
test
mov
repz
jbe
add
sub
mov
xchg
pop
xchg
dec
adc
pop
repz
inc
mov
pusha
aas
mov
and
mov
mov
cwtl
jge
dec
sbb
add
adc
cmp
xchg
cmp
mov
ds
fstpt
test
mov
and
xchg
mov
mov
sub
addr16
jle
jae
mov
add
add
add
rorb
lea
js
out
js
sub
repz
push
add
jg
test
and
arpl
sub
pop
xchg
jbe
test
mov
arpl
mov
or
dec
sbb
dec
jne
repnz
daa
adc
out
pop
adc
or
movsb
sub
aad
mov
sub
mov
fs
add
push
movsl
rolb
jp
jle
hlt
ret
dec
inc
dec
push
adc
hlt
mov
fidivs
jmp
sub
negb
addr16
and
js
test
xor
leave
imul
inc
js
outsb
repnz
fsubp
xor
sub
insl
ja
mov
jns
push
or
in
mov
loop
hlt
push
mov
mov
mov
dec
ja
test
aad
pop
jp
sbb
outsb
in
push
mov
push
cmp
cwtl
xor
imul
sar
mov
dec
test
push
push
pop
shlb
outsb
out
mov
loop
cwtl
mov
lret
jecxz
sbb
jb
mov
outsl
add
out
test
data16
fmul
mov
in
cmp
adc
pop
sbb
mov
test
mov
pop
mov
xor
xchg
int3
nop
push
or
idivb
cmp
fldt
jge
jmp
cmp
adc
imul
jno
xchg
and
adc
test
out
pushf
mov
cld
jecxz
or
sti
jg
mov
add
fisttpll
or
arpl
outsl
stos
jg
mov
inc
inc
div
mov
mov
enter
das
xchg
and
loopne
ficompl
jbe
cmp
fs
push
aam
xlat
repz
stos
dec
lcall
lods
add
inc
out
push
pop
mov
push
sub
or
repnz
fwait
xor
leave
dec
mov
xlat
xorb
insl
and
std
pop
pusha
or
pop
inc
jp
hlt
adc
push
cs
out
add
mov
lret
sub
aad
pop
add
insl
or
push
aas
out
cli
std
stos
dec
add
test
ficompl
push
and
test
jbe
leave
and
jg
mov
jmp
fidivrs
out
daa
popl
popf
hlt
inc
pop
sti
jb
xchg
cld
test
add
jp
daa
mov
movsl
pop
scas
sub
sarl
pop
or
inc
inc
mov
sbb
sar
jp
int
inc
call
arpl
jge
mov
rol
fists
mov
leave
sti
jmp
jo
je
rorb
pop
jb
mov
pop
int
pop
add
loop
xor
push
outsl
das
dec
gs
cmp
testl
outsl
push
mov
jecxz
mov
xchg
mov
push
ljmp
mov
ja
mov
out
jmp
cmc
ss
in
xchg
xchg
orb
test
das
rclb
nop
xchg
inc
xchg
int3
push
mov
inc
dec
loop
inc
push
push
repnz
hlt
cld
push
jp
pusha
push
pop
mov
hlt
test
adc
inc
mul
addr16
decb
or
repz
fisubs
jae
jg
xchg
push
repz
xchg
adc
sahf
enter
mov
or
pop
or
adc
dec
testl
cmp
push
and
sar
cmp
mov
pop
aas
test
xchg
add
imul
mov
in
ss
jo
fs
or
or
pop
test
sti
in
ds
mov
cli
and
xlat
adc
xor
inc
sub
xchg
sbb
int
xor
push
stos
int3
xchg
jae
jno
lods
cmp
rcll
stc
xor
xorl
sbb
jl
push
dec
insb
jecxz
inc
push
mov
dec
aam
pop
leave
dec
xchg
out
sub
push
jne
add
popa
fbld
stos
es
and
xor
ds
inc
gs
repz
xchg
cli
xlat
aas
hlt
divl
outsl
iret
lret
mov
orb
repnz
xor
sub
and
dec
cmpsb
dec
nop
rorb
mov
mov
out
imul
push
stc
imul
in
sbb
test
and
mov
jl
xor
in
insl
mov
outsl
xor
pop
and
and
sub
push
mov
aaa
sub
xchg
js
in
gs
cmp
cmpsl
test
and
cmp
lds
xchg
dec
or
sbb
dec
lcall
lock
std
mov
je
jp
pop
stc
sbb
test
movsb
dec
add
mov
pop
faddl
mov
xchg
int3
or
cld
call
inc
leave
mov
or
insl
and
inc
push
and
xchg
gs
out
rcr
push
ret
fldenv
mov
test
out
inc
mov
dec
cmpsb
les
dec
pusha
addl
fmuls
push
addr16
ljmp
popa
int3
pushf
hlt
jle
ljmp
sbbb
xor
ja
lret
pop
push
xor
das
stos
scas
push
adc
and
insb
loop
cli
push
xchg
scas
add
jno
sbb
fdivr
rol
pop
cs
fwait
mov
add
mov
and
retw
jecxz
fcoms
jae
out
push
dec
movl
mov
mov
lds
popf
comiss
jbe
fcompl
mov
and
dec
dec
subb
and
testl
sbb
jge
es
lods
sub
mov
lock
imul
push
cmp
fdivrl
push
inc
pusha
or
out
mov
dec
scas
mov
or
inc
dec
dec
cmc
pusha
xchg
jb
leave
daa
xchg
shlb
jne
jns
lods
inc
sub
add
xchg
xor
shrl
mov
jg
xchg
mov
orb
sar
divl
jge
stc
sarb
dec
sub
mov
or
mov
iret
cmp
pop
dec
adc
lods
je
and
add
fwait
mov
sbb
in
push
jge
sub
cmp
jg
add
dec
test
mov
fs
xor
sbb
clc
jecxz
orl
add
popf
jecxz
lock
add
pop
ss
xor
outsl
add
out
adc
jb
push
ss
in
jp
xlat
cmp
pusha
int
sub
pop
jl
aad
shlb
movsl
xor
cmp
stos
pop
mov
sub
inc
fnstcw
cmpsl
je
aad
pop
cwtl
sahf
adc
insb
pop
movsb
sbb
inc
jb
jnp
loopne
push
jo
loope
and
lret
mov
sub
mov
sub
cmp
and
xchg
push
shll
inc
jb
fs
aaa
and
xor
jne
lret
in
jno
out
xchg
pusha
movsl
loope
pop
stos
mov
jle
fldl
jns
scas
pushf
dec
push
jle
mov
int3
icebp
cmpsl
shll
mov
cmpl
cs
xchg
jle
aas
call
ss
gs
pop
xchg
movl
std
cmp
inc
mov
pop
fldl
jg
hlt
movsl
loopne
fimull
xor
stos
fcmovb
mov
mov
std
push
imul
push
stos
cmp
push
cmc
lea
bound
fucom
sarl
push
mov
pop
xchg
outsl
inc
or
das
add
ficomps
add
shll
out
jmp
pop
rolb
cltd
add
pop
mov
out
add
cmc
sbbl
push
jge
push
bound
icebp
dec
sar
hlt
jmp
loope
ljmp
cmp
xchg
cmc
jge
or
aaa
sbb
out
insl
mov
pop
mov
sti
loopne
add
mov
xchg
imul
loopne
fcmove
xlat
cmpl
test
sti
xorb
sbb
mov
jb
and
movsb
insb
adc
insl
push
mov
mov
sub
popf
popf
test
js
mov
push
push
gs
jg
xlat
mov
adc
bound
sahf
pop
xchg
add
mov
cmp
cmp
enter
adc
sbb
and
lret
in
mov
daa
rclb
push
and
stc
rcrb
xor
mov
add
das
mov
fs
inc
cmpb
and
mulb
sub
lods
js
inc
cs
out
jl
rcll
shld
nop
ror
cmp
test
xchg
lret
mov
movsl
pop
sub
sbb
xor
fwait
outsb
gs
xchg
fisubrs
jge
subl
lods
jnp
shl
sbb
int3
cmpl
imul
xchg
and
add
cmp
sub
inc
pop
lahf
mov
dec
fmuls
fdivrp
push
xchg
xchg
xchg
jmp
mov
sub
xrelease
push
mov
and
mov
mov
dec
push
sbb
ja
mov
adc
sub
cwtl
xchg
pop
lods
inc
rcrl
std
enter
jne
push
xchg
mov
lcall
push
lea
data16
cmp
push
mov
xor
add
mov
fs
daa
cmp
arpl
icebp
rorl
push
std
hlt
cwtl
mov
mov
sbb
mov
xchg
jle
scas
insb
clc
jae
mov
mov
cmp
dec
xchg
jae
mov
cmp
dec
push
or
jge
push
dec
xor
lock
mov
fisttpll
ret
mov
stos
mov
out
mov
hlt
sbb
jne
nop
pop
dec
inc
fucomp
cmp
aas
sbb
fs
fidivl
mov
sub
dec
mov
sub
jl
push
fnstsw
jns
jp
adc
add
data16
fidivrl
jns
adc
in
lods
or
outsb
mov
mov
ss
outsb
jecxz
jmp
dec
adc
cmp
pop
and
jae
cltd
mov
gs
xor
roll
aas
out
push
leave
bound
add
mov
insl
stos
sbb
mov
mov
es
mov
mov
stos
mov
add
pop
jne
aaa
outsb
mov
enter
dec
stos
gs
les
ja
sub
and
cmc
stos
les
push
out
adc
sbb
pop
rorb
xchg
pop
xchg
sub
pop
and
mov
orb
pop
loope
xchg
imul
inc
push
addb
daa
mov
aas
loopne
mov
mov
or
loop
mov
inc
xchg
icebp
cmpl
xor
or
sar
dec
loopne
pop
fnstsw
and
in
jb
ret
dec
ret
pop
and
xchg
and
fsts
loopne
xchg
hlt
sbb
cmp
cmp
ror
adc
out
rcll
aas
jbe
mov
test
adc
cs
fidivs
inc
jle
pushf
cmpsl
mov
lahf
sbb
mov
sbb
mov
and
or
sbb
push
cmc
in
ljmp
and
fmulp
rcl
jb
xchg
sub
dec
xchg
push
xor
pushf
adc
rorl
roll
out
adc
adc
push
nop
mov
into
lahf
cmp
insb
fucomp
inc
xchg
dec
in
inc
pop
ja
pop
push
sbb
push
ja
adc
iret
pop
push
iret
xchg
lock
push
dec
add
in
xchg
push
cs
imul
cmp
lea
and
jnp
xor
jecxz
sbb
mov
pop
lret
jle
in
popa
test
pop
fimull
sub
pop
adc
lods
movsl
mov
subb
mov
cmpb
rcrl
loopne
movsl
xchg
xor
out
mov
or
mov
les
or
movsl
xor
inc
or
cltd
aad
mov
fbld
pop
sahf
pop
inc
pop
xchg
sub
pop
ret
xlat
call
jno
cli
sbb
sub
fadd
or
mov
push
sti
sbb
repnz
cmp
and
test
cmp
jne
dec
sbb
push
repz
add
shrb
les
mov
cwtl
push
sahf
insb
fisubl
aas
dec
push
sbb
or
incl
inc
cmpsb
lock
ss
and
lods
je
jno
out
in
loop
adc
adc
adc
xchg
call
xchg
pop
int3
xor
insl
out
sbb
dec
aam
lods
sbb
shll
dec
pusha
pop
stos
and
mov
xchg
adc
sbb
inc
mov
xchg
inc
lret
leave
roll
add
ret
jne
loope
cmpl
pop
pop
cmp
xor
pop
int
pop
xor
dec
loopne
test
test
repz
fidivrl
adc
je
and
mov
fdivs
hlt
pop
int3
movsl
aas
lret
popl
push
es
call
cmp
fists
test
inc
ds
insb
aam
cmp
adcb
xor
xchg
cmp
mov
fnstcw
lret
mov
mov
rolb
push
jmp
mov
lcall
xchg
test
lret
lods
repz
in
sub
sahf
pushf
jge
out
testb
scas
add
push
shrl
aaa
mov
mov
jmp
rolb
add
aad
pop
fimuls
out
scas
xchg
ljmp
adc
xchg
push
sbb
push
adc
lret
lcall
jmp
icebp
nop
mov
pushf
scas
xchg
and
add
pop
and
cmp
rolb
cmp
xchg
mov
es
push
adc
dec
adc
xor
add
in
sub
aaa
cmp
xchg
pop
and
fists
xor
aaa
addr16
test
es
jge
and
test
cmc
mov
fmull
sub
int3
stos
cmp
lret
xor
xchg
pop
jecxz
daa
xlat
in
dec
and
in
jnp
mov
mov
mov
daa
aas
push
cli
iret
and
cmp
adc
mov
adc
dec
pop
hlt
into
mov
ret
outsb
cs
sub
cld
dec
ficompl
outsl
pop
pop
or
data16
and
lret
mov
mov
out
lods
fidivl
sub
or
jg
adc
pop
aaa
cld
jo
jnp
stc
out
sti
out
inc
jmp
adc
push
push
nop
aas
push
fdivl
mov
xor
jns
int
fwait
push
loop
push
in
cltd
shlb
xor
sbb
loopne
mov
jns
shl
scas
jnp
mov
lock
cmp
push
push
pop
push
mov
dec
lds
xchg
jecxz
call
popf
outsb
sub
adcl
je
sbb
popa
out
inc
loopne
stos
mov
xchg
std
dec
mov
mov
loop,pt
enter
hlt
sbb
dec
dec
jno
cmp
inc
loopne
mov
xor
lea
push
lods
ljmp
cmpsb
sub
shrl
fsubl
fimull
cmp
pop
jmp
mov
fs
ljmp
or
stos
dec
aad
dec
jp
lret
loopne
xchg
lods
popf
pop
negl
sub
and
loop
push
adc
and
movsb
les
or
and
cli
adc
fs
addb
push
test
mov
and
aaa
popa
jge
mov
sbb
repnz
sarl
mov
rcll
out
and
das
adc
pop
cmp
and
jns,pt
push
xchg
cmp
jp
mov
jl
sqrtps
stos
sbb
or
test
imul
mov
and
push
adc
hlt
push
mov
negl
xchg
jg
hlt
dec
mov
lahf
push
in
pop
add
shrl
jno
inc
push
outsb
push
call
out
ja
adc
adc
xor
mov
repnz
xchg
jp
mov
mov
or
sbb
movsb
insb
lods
and
push
jle
xlat
lcall
ja
test
mov
cmp
cmp
inc
mov
aaa
mov
inc
mov
dec
dec
into
sub
aaa
fdivrl
xchg
jp
pop
jl
movsb
dec
mov
loope
insl
sbb
daa
xor
adc
stc
mov
sub
push
daa
out
pusha
inc
sub
jo
lods
stos
ja
les
adc
xor
cmp
mov
cmp
xor
enter
shlb
pop
sbb
insb
and
and
mov
pop
stos
pop
rcll
leave
pop
xchg
push
aaa
int3
xchg
pop
pop
imul
icebp
jmp
mov
clc
bound
imul
or
mov
mov
addl
fisubrs
xor
aas
in
jmp
xor
cmp
je,pt
adc
cmp
cmp
pushf
aam
xlat
dec
mov
mov
daa
mov
je
aad
inc
xchg
mov
into
bound
push
mul
jb
mov
mov
or
movsb
cmp
mov
pop
add
in
scas
push
push
sub
dec
push
mov
add
popf
decl
sub
mov
push
push
addr16
fisubs
imul
mov
rolb
cld
jo
fldcw
lret
mov
adc
outsl
fldcw
inc
mov
mov
mov
dec
sti
nop
mov
jnp
cmp
inc
adc
xchg
int
hlt
and
add
lods
cmp
adc
push
add
xor
in
out
jne
js
nop
xor
es
jle
cmc
loope
cmpsl
stos
ss
add
clc
mov
test
sbb
cmp
int
pop
loope
adc
cmc
xchg
mov
push
aas
int3
adcb
xor
mov
adc
bound
mov
and
loop
shrl
clc
push
les
psllw
aad
fisttpll
arpl
pusha
adc
mov
add
adc
mov
cmc
jb
mov
cmp
dec
mov
rcrb
xor
das
sti
imul
ljmp
or
sub
jecxz
mov
pusha
sub
ja
dec
jbe
ds
idivl
sar
dec
xlat
ret
outsb
jno
rcl
jo
fxch
add
das
out
int3
daa
lcall
shlb
cmp
and
test
shlb
scas
and
clc
inc
push
aaa
imull
in
ret
mov
ja
dec
push
jl
jmp
stos
mov
negl
ss
lea
and
ja
inc
ljmp
xchg
cmpsb
and
mov
mov
and
jb
adc
cmp
sbb
js
jae
add
cwtl
add
out
pop
aas
xchg
movl
pop
aad
xchg
stos
in
bound
mov
rcll
and
outsl
pop
mov
add
leave
add
sub
jo
jmp
notl
pmuludq
mov
jb
xchg
jns
les
ror
mov
loop
or
or
jo
and
and
lcall
outsb
and
adc
sbb
in
lods
rcrl
fmull
fidivs
pop
ds
push
pop
inc
dec
pushw
mov
repz
sbb
test
and
loop
lcall
addl
pop
fsubrs
mov
gs
dec
jb
jge
sbb
xchg
inc
leave
sbb
imul
stc
push
or
sbb
xchg
mov
mov
loop
xchg
and
iret
out
adc
mov
mull
into
mov
mov
das
push
out
inc
pop
mov
mov
sahf
add
in
push
mov
insb
fstpt
jp
fistl
les
jo
cld
imull
mov
fists
or
ret
jecxz
inc
cmp
and
jmp
arpl
sub
sbb
dec
push
mov
push
popf
dec
int3
or
inc
xor
sahf
lods
xor
cmpsl
cmp
push
ret
jle
jl
jno
push
mov
or
data16
sbb
sbb
jg
loope
test
arpl
cld
or
data16
sbb
pop
rolb
dec
jo
in
test
push
in
jo
push
cltd
stos
icebp
adc
xor
lods
pop
mov
cmp
push
fdivs
xor
repnz
int3
pop
jb
hlt
je
repnz
stc
daa
fisttpll
mov
inc
inc
inc
xchg
clc
nop
push
sub
clc
mov
add
inc
sti
pop
cmp
out
mov
xchg
rcrb
dec
fsubp
fstpt
lcall
or
stc
lea
jp
int3
xchg
inc
repnz
sub
adc
fxtract
mov
movsb
nop
insb
jbe
mov
xchg
mov
dec
dec
shrb
pushf
mov
cltd
loope
nop
pop
xchg
loopne
rclb
jg
repnz
push
sbb
lret
insb
iret
imul
ja
fcmovu
dec
mov
and
cmpsb
dec
cwtl
xlat
je
das
cmp
test
cli
movsb
and
rolb
and
add
shlb
add
ret
or
insb
in
mov
das
push
adc
adc
ss
nop
sti
mov
xor
dec
push
fnsave
cmp
pop
and
xchg
xchg
xor
in
sahf
cmp
ret
jmp
and
adc
mov
aam
push
push
shll
inc
jno
sub
movsb
lahf
dec
les
mov
mov
insl
sahf
pop
cmpl
jg
fiaddl
loopne
adc
in
jb
pop
xlat
out
adc
in
loopne
ljmp
ret
push
bound
push
dec
mov
xor
popa
xchg
lahf
sub
addr16
loop
fimuls
test
test
mov
ljmp
jbe
sti
flds
data16
adc
mov
push
andb
pop
cmp
pop
pop
lods
push
fdivr
xchg
std
inc
in
das
pop
dec
test
out
pop
jp
pop
jbe
std
mov
rcll
add
ss
jns
adc
dec
push
mov
jl
mov
sub
jbe
or
adc
mov
rclb
mov
addr16
test
mov
enter
fnstcw
mov
cmpsl
addb
sbb
in
nop
std
jns
adc
bound
cmpsb
std
in
cwtl
lods
xor
mov
add
cli
push
loopne
cmpsb
jnp
mov
add
insl
mov
fdivrs
xchg
push
push
subb
rcl
iret
ja
loope
sarb
sbb
fs
sti
clc
xor
lret
jne
mov
pop
fsts
mov
cli
negl
les
scas
sbb
xchg
jns
test
mov
dec
movsb
pop
cmc
push
loop
cmp
cmc
inc
mov
in
jns
test
cli
sbb
lods
jecxz
push
mov
push
ss
out
push
outsb
jno
test
push
repz
push
cmpsb
movsl
imul
add
sbb
es
xor
or
pop
jne
loope
dec
pop
xchg
or
addr16
jo
lret
scas
cltd
dec
fld
pushf
daa
jl
ljmp
push
inc
mov
in
nop
outsl
fstl
adc
or
pop
mov
insb
stc
inc
scas
lret
popf
rcrl
or
add
leave
xchg
dec
pop
mov
lret
xor
xchg
lahf
xor
dec
ljmp
push
jge
inc
adc
cmp
cmc
xor
dec
cmp
mov
arpl
add
in
dec
sar
xor
dec
or
xchg
lds
pop
or
or
test
jp
in
cmpsb
ret
insb
sbb
aam
mov
adc
add
imulb
rorb
xchg
data16
sbb
xchg
dec
mov
enter
dec
popf
lods
xchg
push
shr
test
pop
call
mov
popa
adcb
scas
orl
mov
loopne
fcoms
xchg
gs
fisubrs
aaa
popf
dec
lods
sub
pop
sarl
imul
repz
adc
lahf
inc
shr
addr16
test
mov
fwait
xchg
in
sbb
xor
adc
add
in
dec
dec
testb
std
sbb
pop
dec
fisttpll
data16
xchg
jbe
or
out
outsl
xor
insl
hlt
test
rorl
scas
pop
out
sbb
sub
movsl
in
add
stc
pop
sub
cld
inc
ljmp
outsb
push
fisubl
adc
mov
les
int3
push
loopne
clc
ljmp
rcll
popa
rclb
fsubrs
fimuls
push
arpl
aas
shrl
sub
fdivrp
or
std
push
popf
nop
adc
inc
mov
xor
sub
lods
sbbl
push
in
adc
shlb
in
scas
pushf
test
lret
xchg
call
cs
sub
mov
loop
fnstsw
shr
cs
add
mov
jge
cli
dec
aam
cmp
adc
mov
mov
pop
mov
mov
rcrb
sti
cmc
gs
ret
jno
stos
push
xchg
xchg
xchg
jnp
pop
in
mov
movsb
xchg
push
hlt
cmpsb
and
popf
dec
sub
ss
pushf
jg
mov
jmp
push
inc
xchg
xchg
pushf
jo
rolb
xor
imul
add
mov
pop
scas
add
fs
cmp
jecxz
out
mov
shll
lcall
xor
call
adc
mov
dec
pop
lock
pop
add
icebp
out
inc
outsb
popf
imul
mov
int
jl
xchg
lods
loope
push
rorl
out
pop
mov
leave
sti
scas
sub
sarb
sahf
inc
nop
clc
mov
idiv
push
pop
mov
imul
pop
out
jle
stc
pop
addr16
xchg
les
xchg
movl
xchg
or
adc
stc
jp
pop
daa
sub
insb
les
and
into
sub
lret
es
jae
adc
lcall
scas
mov
or
pop
movsl
push
sarl
pop
pop
movsl
adc
insb
aad
and
push
push
inc
das
xchg
mov
jne
mov
inc
push
sub
mov
xchg
test
das
pop
sub
out
sub
adc
ljmp
test
lea
mov
mov
cld
jns
bound
jmp
jge
es
icebp
dec
adc
scas
cmp
add
shl
repnz
lahf
mov
mov
int3
xor
and
mov
cmpsl
dec
lock
mov
push
andl
adc
outsb
cmpsl
inc
push
int3
xor
aaa
mov
mov
cs
movsl
pop
push
dec
int
cmpsl
cmp
into
mov
push
cltd
mov
in
stos
inc
mov
push
lcall
mov
ret
stos
push
movsb
push
lock
jle
xor
cmp
div
popf
push
cmpb
mov
cwtl
mov
cmp
mov
fidivs
loope
pop
adc
inc
dec
sub
dec
sbb
adc
mov
addr16
std
and
das
dec
bnd
pop
stos
mov
sub
loope
pop
sahf
mov
fwait
cli
lret
mov
cmpsb
xor
or
pop
add
cltd
stos
jl
pop
sub
out
xlat
mov
lcall
push
lds
daa
flds
mov
test
loope
sbb
into
add
pop
xor
and
xchg
mov
mov
push
int3
dec
in
pusha
dec
fsubl
in
push
icebp
jb
xchg
ffreep
int
adc
or
aad
and
lods
rcll
sbb
aam
imul
test
mov
xchg
inc
dec
popf
sub
cli
sub
insb
stos
xchg
jno
imul
dec
sahf
jg
cmc
jne
lret
cmpsb
add
incb
sahf
ret
fisubrl
shrl
sbbl
insl
fstps
insl
ss
dec
pushf
inc
sbb
push
or
pop
loope
addr16
pop
test
andl
std
fwait
push
pushf
push
cmp
test
mov
pop
cwtl
pop
adc
into
scas
fistpll
sbbl
fprem1
out
adcl
sub
gs
push
add
mov
push
dec
insl
shrl
or
lods
add
sub
lods
xchg
adcb
sbb
sahf
mov
dec
scas
push
mov
push
jmp
xchg
inc
add
jbe
daa
or
scas
jae
test
loope
out
ss
sub
je
add
shl
push
insb
mov
sahf
mov
inc
sbbb
mov
pop
jo
pop
jmp
test
fimull
inc
int3
shlb
adc
jns
or
sbb
xchg
ds
fucomip
or
outsb
movsb
pop
js
clc
movsb
cmpsl
loop
mov
addr16
ret
add
or
push
dec
inc
xchg
adc
insl
cltd
aaa
cli
cmpsl
mov
push
scas
inc
adc
sbb
scas
pop
je
js
mov
and
cltd
lods
add
in
int3
push
mov
imul
cmpl
jmp
sbb
sbb
push
xor
xchg
dec
rclb
mov
andb
faddl
dec
popa
shr
push
mov
test
jb
loope
mov
dec
adc
jl
mov
mov
xchg
and
lock
jae
fisttpll
andl
sti
bound
ds
es
movsl
dec
sahf
lret
nop
adc
and
ja
arpl
adc
int
or
xlat
dec
cld
faddl
add
sti
ja
adc
or
mov
dec
jne
mov
aad
inc
pop
and
rsm
mov
or
pusha
les
xchg
gs
adc
inc
out
icebp
inc
mov
cli
push
mov
or
add
and
add
mov
das
push
aam
stc
lods
xor
js
decb
das
jne
push
rorl
mov
stc
push
add
incb
insb
mov
push
push
add
pop
jmp
jmp
cld
shlb
cmp
in
inc
add
lods
fs
jmp
jge
sub
test
push
shlb
jae
jle
insl
or
xorb
dec
fiaddl
pop
notb
rcr
mov
icebp
adc
inc
cwtl
push
xchg
scas
adcb
popa
xchg
mov
in
inc
faddl
push
sbb
push
push
mov
xlat
sub
lea
int
lahf
fstpt
push
xor
mov
cld
ss
xchg
dec
repnz
push
adc
or
ljmp
scas
imul
lret
mov
push
cmpsl
aaa
sub
in
aas
fcoms
adc
jge
cmpsb
leave
lret
shlb
push
repz
andb
sub
test
mov
sar
cld
pop
add
mov
push
cmc
xchg
lret
dec
out
in
inc
inc
fcom
xor
stc
add
cmp
inc
fstps
and
call
rcll
pop
xor
sbb
fdivl
add
test
test
jp
xor
iret
inc
repnz
and
mov
push
test
xor
es
movb
clc
cmpsb
pop
sub
rcll
and
repz
xchg
or
sahf
lcall
xor
iret
jno
mov
js
adc
das
or
or
int3
jno
icebp
fsubrs
pop
clc
cmp
jle
dec
das
jl
movsb
xchg
sub
xchg
andb
lret
jp
sub
sub
in
and
mov
dec
cmpsb
and
aaa
xchg
jg
jl
mov
or
andl
push
mov
inc
sbb
int
inc
loop
xchg
inc
sbb
push
out
dec
dec
or
push
data16
cmpsb
mov
shll
nop
test
add
pop
cmpsl
lds
mov
rcll
mov
lahf
cmp
loopne
jg
push
xchg
and
dec
data16
mov
xchg
add
cltd
xchg
cli
cs
cwtl
mov
in
pop
js
loope
jb
stos
sbb
mov
mov
ficoms
inc
push
stos
cmp
cwtl
cld
mov
dec
mov
enter
ret
lods
ds
das
rcr
pop
movsb
enter
cmpsb
push
ret
out
arpl
dec
jae
out
clc
mov
in
jmp
test
data16
push
lock
xor
outsb
push
iret
inc
adc
mov
cmp
mov
push
mov
xlat
shll
pop
mov
add
rorl
xor
mov
inc
call
sub
aam
stos
sub
dec
or
ret
and
adc
lea
inc
lock
pop
hlt
mov
push
add
xor
lods
out
es
outsl
jns
daa
pop
fmul
loop
test
enter
mov
xchg
in
adc
adc
loop
sub
or
dec
pushf
clc
test
jecxz
pop
adc
cmp
addr16
cld
cmpsb
add
mov
jecxz
adc
dec
lds
repz
or
mov
mov
xor
cmpsl
and
or
je
add
add
or
pop
out
psllq
dec
sarb
add
ss
call
mov
mov
fs
xor
shr
pop
sub
mov
xor
xor
push
iret
dec
icebp
mov
aam
adc
fstpl
outsb
inc
lods
xchg
fwait
mov
jne
xchg
fwait
shlb
mov
js
adc
and
nop
test
push
sti
lret
cmp
sahf
inc
add
add
jns
rorb
jmp
into
xchg
cmp
jl
dec
cmp
or
mov
sbb
cmpsl
xor
push
jg
lea
imul
in
pushw
lret
sti
mov
outsl
les
dec
cld
push
mov
out
cmc
cmc
divl
les
push
test
ret
inc
loope
dec
jmp
adc
call
sub
js
inc
cmpsb
mov
mov
cld
push
jae
xchg
add
aam
or
cmp
sub
les
arpl
sub
cmp
fisubrl
push
jb
add
add
das
loopne
iret
int
insl
sub
test
fcmovb
push
fwait
mov
cmp
jp
jae
pop
cmpb
xchg
mov
inc
test
mov
adc
fcompl
dec
mov
add
aaa
shl
test
daa
xor
pop
inc
shll
arpl
pop
mov
mov
mov
icebp
cld
sub
dec
movl
data16
insl
pop
lods
sahf
movsl
adc
sti
fisttpll
jecxz
daa
cli
cmp
clc
mov
movsl
mov
xchg
addr16
jmp
inc
adc
push
cld
or
addr16
aas
mov
cmpsb
sbb
sbb
pop
push
aad
dec
dec
push
int
xchg
push
lds
fbstp
mov
test
xor
jg
bound
inc
jl
cmp
jae
idiv
pop
icebp
insl
push
cmp
add
popf
dec
jno
inc
daa
dec
add
hlt
mov
insb
cs
sbb
push
xadd
pop
insb
fldenv
lret
into
push
cmp
jns
sahf
subl
cmpsb
pushf
scas
add
lahf
sti
pop
iret
loopne
xor
xchg
xchg
ds
xor
lahf
push
icebp
pop
adc
lds
in
push
fbld
push
xor
outsb
sti
shll
xchg
xor
cmp
lods
push
fimull
mov
add
xchg
sub
cmp
bound
and
xchg
int
xchg
fidivrl
mov
ss
or
popaw
fmuls
cltd
nop
dec
xchg
inc
inc
es
jae
xor
jmp
stos
jg
data16
inc
ja
jmp
out
mov
mov
out
xor
push
sahf
test
jns
cltd
dec
xor
xor
mov
or
dec
adc
mov
push
lods
or
adc
mov
std
scas
sub
and
sub
fistpl
lock
fdivl
out
push
push
std
ja
dec
mov
xlat
es
xchg
jle
and
jge
cmp
loope
and
cmp
jb
push
push
lret
push
xchg
insb
loope
test
xchg
in
stc
loope
cmpsb
es
aad
push
push
pop
and
mov
cli
sub
xchg
test
loope
call
dec
mov
ds
icebp
rcll
xchg
in
repnz
pop
mov
test
leave
push
insb
fistps
stc
push
data16
xor
sub
fiadds
add
jmp
and
rcrl
inc
sub
dec
stos
jg
icebp
inc
mov
ja
sahf
cmp
in
rcr
pop
xor
aaa
outsl
ret
lret
movb
pop
pop
and
mov
lahf
adc
out
push
inc
sbb
cmp
jge
cmp
lret
sub
xchg
dec
jo
rcrb
adc
lea
pop
lcall
and
push
stos
sbb
imul
jecxz
cmp
pop
ffree
int
pop
out
and
fs
cmp
inc
icebp
and
and
mov
mov
movsb
add
lahf
and
or
sbb
js
push
cmp
mov
jl
shrl
repz
and
addr16
pusha
lahf
add
shll
mov
iret
jecxz
clc
insb
cmp
pop
ficoms
mov
das
bound
dec
aam
inc
xor
pop
insb
rcr
jb
inc
gs
inc
clc
bound
or
data16
pop
and
push
lcall
inc
xor
hlt
stc
mov
iret
outsb
xchg
cmp
jmp
xor
fldcw
std
je
lcall
enter
ret
mov
xchg
pop
inc
out
jne
adc
ljmp
test
neg
xchg
sbb
movsb
lods
push
test
jae
dec
inc
and
das
mov
js
sbb
xchg
shll
popa
insb
push
mov
mov
cmp
dec
add
add
and
jle
sarl
lods
xorl
add
iret
push
ja
in
sbb
adc
in
mov
cmp
orb
sub
mov
aaa
mov
mov
jmp
pop
cltd
adc
scas
pop
mov
sub
sti
jmp
or
jmp
cld
fimuls
mov
jle
jl
mov
nop
cmp
pushf
icebp
mov
lret
sbb
mov
mov
movsl
inc
pushf
test
out
and
arpl
xchg
cmpb
jmp
mov
jecxz
mov
ds
xor
dec
or
mov
jne
adc
movsl
shrl
mov
mov
sahf
movsb
push
inc
movsb
lods
stos
pop
jns
pop
mov
inc
sub
aas
mov
sbb
daa
lahf
inc
jae
out
jmp
mov
jmp
pop
push
sub
sbb
adc
dec
push
fstpl
fdivl
push
mov
dec
inc
add
inc
push
xor
test
jp
out
inc
out
lret
clc
xchg
cmpsb
fcoml
es
cli
inc
ret
loope
and
fistpl
jo
sbb
data16
js
out
inc
sub
lahf
repz
mov
mov
mov
pop
push
xchg
xchg
fimull
xchg
ljmp
xor
stos
scas
cmpsl
mov
jns,pt
iret
mov
sub
cmc
aad
clc
stc
sbb
call
jb
cltd
stos
adc
mov
fistl
leave
jp
movsl
inc
sub
notb
outsb
and
or
sar
pop
stos
and
scas
mov
lods
fwait
cmpsl
mov
lods
xchg
pop
pop
clc
add
stc
loop
xchg
ja
sahf
sbbb
xor
push
sbb
fmulp
adc
dec
out
adc
adc
inc
xor
call
jbe
mov
out
stos
lcall
decl
push
mov
jecxz
scas
adc
and
pop
ret
mov
icebp
xchg
add
and
xor
cmpsb
dec
jl
sbb
cmp
xchg
pop
movsb
in
ds
mov
pop
xor
fbld
push
sbb
jne
addr16
ss
icebp
in
out
sahf
and
inc
pop
and
add
repnz
pop
pop
insb
inc
add
out
add
jmp
jl
sbb
es
dec
clc
insl
inc
jbe
or
add
mov
dec
adc
xchg
jae
fsts
cmp
icebp
inc
or
stos
cmpsb
dec
xchg
testb
push
outsl
jnp
rorl
test
push
push
dec
insl
gs
jno
mov
lods
mov
cmp
fidivs
nop
adc
cmp
ret
sub
mov
xchg
imul
out
push
adc
test
and
fadds
imull
cmpsb
insl
lret
incb
lret
enter
pop
cli
adc
out
cmc
ja
scas
dec
sbb
loope
rolb
cmc
and
test
push
lods
dec
xchg
scas
gs
sbb
jne
and
hlt
loopne
aaa
xor
xchg
cs
gs
xor
mov
pusha
mov
aas
cmp
sub
mov
sbb
push
sbb
mov
cmp
dec
stos
mov
adc
sarl
mov
test
sub
stos
push
rcll
mov
jl
xor
lret
push
sub
pop
and
sahf
fcompp
dec
sbb
mov
leave
repz
xchg
sub
sbb
adc
loopne
dec
icebp
inc
sub
call
icebp
hlt
icebp
repz
adc
cmp
int
cmp
or
jnp
ja
sahf
out
adc
or
neg
std
cmp
mov
shlb
pusha
iret
outsl
cmc
bound
in
mov
and
ficoms
mov
jge
mov
lods
imul
push
adcb
xchg
shll
popa
and
loopne
and
lock
pushf
or
add
mov
inc
mov
adc
add
in
adc
push
sub
inc
sahf
into
imul
je
or
mov
cmpsl
jo
iret
aam
lea
mov
mov
and
icebp
iret
arpl
andl
xchg
loop
gs
inc
sub
inc
inc
mov
lods
mov
adc
inc
incb
mov
xchg
mov
mov
out
dec
dec
das
or
xor
push
adcb
jno
jge
mov
sarb
out
ret
adc
sbb
jecxz
ss
cmp
xor
dec
push
stos
xlat
fldl2t
movsb
xchg
xchg
cli
sahf
mov
inc
adc
mov
bound
jb
xchg
inc
push
push
ja
xchg
das
jmp
xchg
mov
lods
mov
mov
push
mov
call
cmpsb
xchg
xor
hlt
mov
dec
gs
jo
cmc
icebp
pop
and
inc
cmpsb
inc
cltd
fists
insb
ds
mov
movsb
stos
mov
inc
sbb
loope
out
jle
xchg
push
adc
popa
arpl
add
inc
popf
cmp
outsb
lods
lods
fcmove
cmpsl
inc
shl
sti
pop
rcr
and
mov
pop
lods
xchg
pop
das
jle
jo
rcrl
scas
jae
xor
jecxz
pop
cmp
push
sub
xor
cmpsl
adc
mov
js
inc
and
iret
adc
ja
push
sub
sub
cmp
cltd
les
adc
and
scas
lahf
mov
cmpsl
icebp
mov
lahf
jl
in
lret
and
jge
mov
lock
sti
cmp
sub
jmp
lret
sub
fsubrs
repz
stos
push
dec
dec
mov
mov
jecxz
and
insl
jns
lock
lods
push
in
xchg
or
jge
jne
icebp
fistl
add
and
lods
jl
sbb
add
sub
push
push
pop
mov
addr16
dec
mov
fnstcw
icebp
jb
daa
add
jmp
or
sbb
mov
sbbl
inc
mov
mov
jns
mov
les
mov
std
imul
enter
push
inc
data16
sub
sub
out
and
arpl
push
mov
jmp
push
mov
mov
dec
mov
dec
sbb
mov
sub
outsl
pop
and
out
stos
stos
push
and
push
mov
lods
popl
adc
dec
xchg
jp
cld
and
sbb
jns
subl
push
jnp
aad
scas
dec
or
lds
mov
adc
jl
xorb
dec
or
jg
jl
sub
ljmp
add
int3
xlat
insl
push
mov
xor
mov
mov
mov
imul
in
and
imulb
lea
dec
or
xor
in
sub
test
xor
loop
mov
adc
call
pop
xlat
daa
out
ljmp
sub
sbb
icebp
sub
and
cmp
dec
repnz
pop
xor
mov
mov
dec
cli
mov
sub
xlat
fstps
sbb
inc
mov
sub
test
sti
adc
or
fnstenv
arpl
cmp
call
ror
int3
xchg
lods
xchg
push
jb
jmp
sub
inc
in
movsl
pop
dec
adc
scas
cwtl
test
jb
ss
dec
xchg
imul
mov
ret
inc
push
aam
cld
cmp
xchg
or
lret
jae
repnz
frstor
lods
rcll
jle
jbe
push
pop
outsl
outsb
pop
push
ret
stos
mov
sub
clc
lcall
push
xchg
pop
unpcklps
mov
stos
ror
popf
push
push
add
pop
adc
pushf
xchg
push
push
lret
rorb
data16
fistl
clc
frstor
dec
xchg
add
clc
adc
mov
push
in
push
cmp
push
les
dec
push
xor
cmp
jns
out
jb
cmp
adc
add
mov
lahf
dec
pop
aas
movsl
xchg
mov
into
pop
push
push
fisubrs
cmpsb
mov
jo
lods
sub
xlat
add
jge
mov
outsl
inc
pusha
pop
push
jge
or
push
test
cli
inc
inc
imul
sbb
aaa
mov
push
mov
mov
xorb
imul
imul
xchg
inc
sub
lret
cmpsb
inc
shlb
cmovae
xchg
test
pop
es
dec
rclb
and
jb
inc
orb
mov
dec
int
loope
vpmaddwd
inc
hlt
inc
stos
mov
out
imul
stc
enter
dec
jbe
lahf
xor
aam
sub
fwait
stc
stos
repz
mov
sub
push
dec
jg
add
repnz
push
pusha
xor
popw
push
call
dec
mov
sbb
pop
fcomip
pop
inc
cmp
xchg
xchg
test
cmp
jb
mov
aaa
mov
scas
sub
js
mov
test
orl
fsubrs
repnz
rclb
xlat
and
mov
arpl
stos
hlt
and
inc
and
jg
in
rclb
xchg
je
mov
test
mov
mulb
sub
mov
mov
xchg
sbb
mov
test
mov
cli
sahf
je
mov
mov
adc
int
adc
push
leave
cld
iret
and
xchg
das
popa
lret
fdivl
mov
sub
mov
push
add
xchg
stc
sub
mov
cmp
ds
stos
int3
sbb
std
fwait
pop
push
jae
bound
fsubrs
cmpsl
bound
ja
cltd
inc
jmp
gs
ds
scas
pop
add
adc
cmp
nop
ja
mov
xchg
gs
aam
cld
repnz
sahf
repnz
mov
aas
fs
xchg
or
leave
imul
cmc
cmp
test
xchg
cmp
rorb
rclb
insl
js
je
jle
fsubs
sub
mov
pop
inc
rorb
xchg
add
std
jecxz
dec
jecxz
cmc
fwait
mov
mov
sub
pop
jg
cmp
jno
mov
xor
dec
imul
dec
movsl
add
sti
dec
push
cmp
faddl
jae
addr16
push
fnstsw
scas
pop
push
lret
pop
xlat
fstpl
and
aad
gs
adc
add
xorb
cmp
jae
movsl
lahf
pop
int
sub
dec
out
cmpsb
scas
jecxz
cmp
mov
jae
inc
jg
sbb
enter
sub
add
pop
add
pushf
inc
lret
lds
xor
fwait
push
mov
push
fdivr
adc
aam
xor
cmp
jg
push
mov
repz
sub
adc
sub
adc
mov
cwtl
popa
pop
sbb
mov
pusha
jg
aad
aam
outsl
or
push
cltd
push
jns
and
insl
stos
shll
dec
xlat
sbb
cmp
xchg
std
push
sarb
mov
and
dec
add
push
imul
ljmp
xchg
testb
mov
loop
cmp
insb
adc
xchg
popa
lock
inc
aaa
lods
inc
pop
cmc
arpl
mov
loopne
cmp
shrl
fistpll
and
mov
ficompl
push
dec
push
mov
lret
dec
xor
aaa
push
js
nop
jp
in
inc
cli
scas
mov
loope
inc
aad
mov
and
ret
mov
xchg
push
nop
sub
mov
aam
sti
jecxz
jne
lds
cmpsl
loop
fnstcw
out
fistpl
ljmp
aam
clc
mov
out
jae
mov
sub
mov
push
subb
cmp
xchg
or
inc
mov
mov
mov
lock
lcall
pop
adc
sbb
mov
xchg
pusha
add
jmp
sub
addr16
sub
sub
sbb
and
or
adc
xchg
and
loope
fstl
inc
adc
movsb
fnstcw
fisttps
mov
aad
add
mov
inc
adc
popa
pop
mov
lods
push
lds
icebp
ljmp
mov
cwtl
jnp
and
and
inc
aaa
outsb
dec
adc
das
xor
mov
and
mov
loope
mov
shlb
and
icebp
push
sub
push
repnz
and
scas
ret
jb
sbb
call
cmp
dec
and
fimull
mov
or
shlb
ficompl
rol
inc
nop
aam
mov
inc
dec
cwtl
adc
stos
jo
fsubrl
jns
lcall
inc
movsb
mov
stos
add
dec
inc
push
sub
jl
lahf
push
movsb
outsl
push
movsb
repz
or
repnz
and
pop
or
iret
fwait
ljmp
sub
xlat
rorl
shrb
pop
fists
mov
dec
arpl
in
xor
dec
les
movsl
or
add
sub
rorb
cli
fidivl
lods
inc
push
jne
insl
pop
sbb
push
adc
popa
out
int3
cmp
outsl
push
add
push
add
mov
push
jne
or
mov
aas
and
jmp
call
mov
xor
xor
jbe
test
arpl
sbb
je
mov
nop
js
aas
aam
sbbb
sbb
cmpsl
or
rcl
cli
enter
push
or
gs
jne
and
repnz
out
xchg
repz
sti
outsb
push
mov
fdivr
lods
pop
cmpsb
jo
xlat
xchg
add
sub
mov
clc
into
lret
enter
push
jb
icebp
sbb
add
aad
arpl
mov
or
and
push
jle
mov
mov
pop
mov
jmp
mov
mov
scas
out
insb
out
scas
lods
lock
cld
data16
fldenv
inc
push
clc
push
cmp
in
fs
in
xchg
add
rcrl
cld
call
jo
and
clc
or
push
push
lret
adc
mull
and
mov
dec
ja
es
lret
clc
adc
lods
icebp
test
leave
inc
stos
mov
aad
stc
paddsb
xchg
cmp
mov
sub
mov
insl
push
addb
push
fcoml
lret
jge
fimull
out
sbb
sbb
dec
mov
cli
int3
mov
mov
les
pushl
adcl
sub
add
arpl
pop
dec
jle
cmp
inc
mov
push
or
mov
fcomi
jle
leave
shl
pop
ljmp
adc
mov
add
jp
adc
pop
xchg
pop
leave
dec
push
and
das
push
xor
addr16
mov
shrb
mov
xor
add
cmp
push
mov
or
fisttpl
cmc
push
dec
adc
mov
test
push
enter
xor
lods
in
rclb
pop
ret
mov
mov
jl
icebp
pop
fldz
push
xlat
sti
cmp
add
sbb
cmp
xchg
adc
cmp
xor
shlb
out
sbb
int3
mov
call
fcomip
sbb
or
fs
ret
inc
das
or
and
iret
sub
dec
negb
sub
jb
es
cld
sbbl
jne
jb
orb
jge
xchg
cmp
sahf
mov
push
jb
test
pop
sub
or
mov
int
test
mov
je
in
scas
mov
jle
insl
lret
mov
adc
push
shrb
xchg
gs
push
loope
fcmovb
sbb
dec
sub
out
or
stos
sub
enter
fnsave
loop
dec
dec
subl
sbb
xor
outsl
mov
popf
cmp
cmpsl
xchg
in
cli
add
pop
sti
stc
xchg
mov
xchg
mov
pop
push
popa
out
jle
sbbl
scas
adc
gs
mov
xor
clc
or
sahf
xchg
mov
pop
xchg
roll
sbb
mov
stos
mov
xchg
scas
xchg
sbb
fcomp
xchg
pop
ds
or
scas
jnp
jl
fdivs
and
jl
pop
jp
xchg
push
stos
les
xor
cmp
dec
fdivs
sti
leave
inc
scas
sbb
test
and
jmp
test
adc
xor
dec
pop
mov
and
sahf
faddl
mov
or
dec
or
lock
loopne
aaa
pop
stc
andl
rcrb
xchg
pop
sub
jmp
add
repnz
push
je
dec
push
cli
pop
arpl
xchg
dec
aad
xchg
sbb
outsl
jle
iret
and
subb
int3
aaa
push
pusha
sub
pop
xchg
lcall
inc
adc
fcomps
mov
push
pop
out
sbb
js
in
test
push
push
xlat
leave
mov
out
push
cmp
cmpsl
pop
cmp
pusha
ss
daa
push
iret
mov
sar
loop
mov
leave
in
repnz
pop
lods
xor
mov
out
sbb
inc
dec
lods
add
or
and
shrb
addr16
push
pop
popf
and
cwtl
leave
add
ficompl
adc
adc
mov
mov
jo
xchg
push
ret
mov
push
imul
jmp
lock
mov
sbb
sbb
out
push
mov
add
push
out
ja
cmpl
push
insb
jle
cmpsl
decl
incl
push
inc
xchg
aam
outsb
daa
dec
mov
push
int3
into
aam
lock
inc
test
jbe
jl
sub
mov
add
add
xor
lds
in
mov
mov
sub
push
stos
push
sub
gs
xchg
pop
orb
les
ss
cmp
pop
ss
es
jl
faddl
lcall
aad
cltd
jmp
fstl
adc
lds
clc
sbb
sub
scas
ss
xor
outsl
push
gs
stos
jl
hlt
outsb
ja
sub
pop
and
fwait
rclb
adc
pushf
cmc
scas
iret
lret
std
pop
test
sbb
xchg
sbb
inc
js
mov
xchg
scas
mov
jle
lret
mov
outsb
sub
roll
iret
popa
icebp
or
daa
aas
mov
lock
roll
dec
imul
mov
jle
shl
adcl
in
daa
ret
push
sti
mov
imul
add
daa
ds
jnp
xor
pop
cmp
lods
outsb
add
lea
push
mov
adc
sbb
ja
and
and
mov
shlb
mov
mov
mov
mov
pop
decb
and
jns
cltd
xchg
xor
into
sar
adc
jl
lods
add
ja
xor
data16
cwtl
loop
push
dec
mov
xor
lock
jmp
fistl
cmp
and
sub
mov
mov
sbb
fwait
xchg
sarb
loopne
cmp
mov
out
std
imul
shld
in
mov
pushl
call
rcrb
jb
push
add
aad
rcr
insb
js
dec
mov
es
in
inc
lock
lea
adc
push
data16
movsb
std
out
stc
out
cs
lods
insl
mov
ror
and
mov
or
adc
test
enter
or
inc
in
in
ret
push
psubusb
sbb
lret
dec
mov
and
mov
and
push
jp
and
pop
xchg
mov
sbb
out
dec
lcall
sub
mov
sbb
bndldx
dec
sbb
push
test
sbb
jg
call
push
jnp
jnp
push
pop
mov
enter
ss
stos
mov
jecxz
mov
or
sub
lcall
ss
cmp
out
cmp
cwtl
pop
loope
ficoml
popf
sbb
or
mov
or
out
and
test
mov
add
out
insl
jl
xlat
xchg
mov
pop
push
push
hlt
sti
xchg
icebp
or
loop
inc
cwtl
xchg
jl
jmp
clc
mov
sub
sub
pushf
test
lcall
fimull
clc
stos
inc
adc
push
testb
push
les
pop
aam
push
and
fisubs
dec
aaa
mov
pop
mov
mov
loope
mov
sub
xchg
repnz
int3
mov
mov
add
in
out
mov
mov
rcll
add
mov
mov
jbe
add
jmp
adc
jge
pusha
int
adc
les
das
js
dec
out
sbbb
xchg
mov
dec
out
xchg
jns
mov
jb
mov
in
mov
sbb
cs
fisubl
push
pop
lcall
fnstsw
cs
inc
add
imul
sahf
es
and
mov
loopne
leave
subl
cmpb
jno
xor
mov
loopne
popf
sub
sbb
add
mov
add
inc
or
add
movsb
pop
das
xor
insl
test
jo
push
pop
fs
cltd
lahf
xadd
or
jns
push
inc
and
mov
or
and
lods
fldenv
insb
pushf
rcrl
loope
dec
push
stc
xchg
push
pop
cmpsb
ds
or
xchg
or
ja
insb
test
and
sbb
adc
cmp
sub
pushf
xor
or
sbb
mov
jne
ljmp
push
mov
mov
jnp
pop
insl
inc
dec
inc
xor
adc
data16
and
inc
ret
cs
shrb
dec
xchg
xchg
xchg
mov
scas
outsb
stos
fistl
jmp
sub
call
scas
mov
popf
dec
push
mov
inc
addb
add
xor
test
push
add
pop
inc
daa
or
mov
out
inc
mov
insb
je
imul
jns
lret
les
loop
loopne
movsb
push
ret
dec
jmp
icebp
cli
inc
fstpl
out
sub
jbe
lahf
mov
mov
push
inc
add
mov
xor
pushf
xor
inc
sbb
lahf
movsb
and
or
adc
and
in
mov
stc
jecxz
fstpl
dec
dec
rcrb
cmp
ljmp
aas
out
fisttpll
mov
add
icebp
mov
xchg
push
adc
mov
cmp
pop
inc
in
icebp
lods
ret
shll
lds
test
ror
sahf
jno
rclb
addr16
into
pop
adc
or
pushf
sbb
lock
std
jle
hlt
popa
ds
aas
in
jb
push
shll
arpl
out
xchg
lods
in
jae
xchg
cmp
and
mov
loop
or
lret
push
cmp
fisttpl
xchg
fwait
movsl
call
arpl
inc
adc
in
xchg
cli
dec
add
jmp
mov
loopne
popa
and
sub
lds
push
scas
shlb
inc
mov
incb
insb
mov
push
mov
icebp
decl
and
movsl
jp
imul
mov
push
pop
popa
sub
cmp
mov
cmp
dec
out
mov
and
push
inc
daa
test
adc
jle
mov
stc
out
xlat
and
sbb
pop
push
movsbl
xchg
adc
jnp
aam
xor
lods
rclb
fildll
add
jp
cmpsb
lods
mov
cmpsl
jnp
mov
mov
cmp
mov
jge
fistpl
xchg
sbb
xchg
mov
push
mov
pop
pop
sub
mov
ss
or
addb
shrb
jbe
in
fcomps
push
mov
insl
int
add
mov
mull
xchg
jae
push
stc
fdivrs
ja
test
shl
xchg
pop
mov
push
pushf
adc
mov
in
ljmp
insb
and
cmpsb
imul
cmp
call
les
cmpsb
push
jns
pop
push
and
js
mov
iret
dec
pop
sub
or
and
push
jne
lcallw
pusha
or
xchg
sbb
cmp
arpl
stc
jne
fwait
mov
into
popa
cwtl
and
push
in
test
cmpb
xchg
pcmpeqb
jb
xchg
rcrl
test
xor
pushaw
pop
mov
sub
rclb
xor
mov
in
inc
mov
xor
fsubrl
out
inc
fwait
lret
pop
addl
and
lret
lret
std
sbb
dec
and
cmp
push
aad
inc
jmp
mov
std
cmp
sbb
stos
lret
hlt
pop
sub
addb
shl
pop
fwait
ss
inc
mov
mov
jg
out
pop
scas
xor
inc
jmp
mov
mov
mov
mov
je
push
sbb
jp
gs
cld
cs
cmp
xorl
mov
xorb
xor
sahf
xchg
int
jbe
ja
test
push
jecxz
push
popf
or
fbld
mov
mov
or
std
xor
pushf
ret
mov
pop
xorl
fnstcw
mov
call
cltd
cmp
sub
pusha
jns
ljmp
iret
sub
fcmovnbe
ljmp
dec
cmpsb
loope
jne
jb
sbb
adc
out
sub
xchg
adc
jbe
shlb
inc
or
stc
sub
aad
add
cmp
xor
repnz
mov
jge
and
push
xchg
jp
mov
cli
add
call
ror
das
jo
or
or
lret
iret
mov
dec
mov
dec
insb
xor
outsb
cmpsl
push
in
test
movsb
xor
mov
cmp
fwait
push
xlat
jae
test
je
inc
fidivs
int3
rorb
or
rcll
rorb
mov
stos
sbb
and
push
dec
xchg
adc
mov
out
cld
dec
aas
pusha
xchg
cvtps2pd
das
or
loope
cli
pop
dec
faddp
std
dec
cmpsb
in
loop
cltd
cmc
std
div
xchg
rol
sbb
loop
cld
enter
nop
cmc
sbb
movsb
xchg
inc
xor
pop
sbb
shl
adc
sti
or
or
nop
jnp
or
inc
sbb
pop
idivb
pop
subl
loope
adc
cmp
inc
inc
inc
cld
pop
jbe
cmc
lret
iret
mov
mov
sub
push
inc
lcall
sub
cltd
in
xchg
jmp
aad
sub
cmpsb
aas
data16
test
and
jne
jge
push
das
xchg
inc
jne
adc
mov
aam
cmp
or
cmp
std
shrb
sti
data16
bound
mov
inc
jg
pop
lods
insl
ja
mov
out
mov
fldl
push
add
xor
imul
loopne
jae
mov
std
push
arpl
std
xor
mull
jmp
or
xor
in
loop
das
cmpsb
adc
test
loope
clc
cwtl
xor
fmulp
bound
mov
push
orl
enter
outsb
sub
in
mov
or
push
xchg
jg
stos
mov
insb
add
adc
aaa
and
add
addb
loop
repnz
mov
lret
fs
pop
dec
sbb
rclb
sub
loop
and
and
jmp
ret
sbb
xchg
add
loopne
mov
mov
int3
sub
mov
fsubr
or
js
addr16
adc
push
int3
movsb
or
leave
mov
add
sub
xchg
mov
dec
aad
cmp
or
mov
pop
mov
in
rolb
xlat
sub
jae
aam
movq
mov
leave
sbb
cmpsb
test
and
adc
xor
mov
dec
orb
mov
mov
roll
jl
mov
jg
mov
frstor
js
xchg
pop
cmp
and
popf
lret
ficompl
mov
cmc
xchg
fidivl
test
cmp
cmp
out
cld
lock
in
jo
mov
xor
adcb
pop
inc
inc
mov
stos
pop
push
scas
sub
xchg
mov
dec
fs
stc
cli
dec
xchg
jg
repz
mov
testb
lods
jbe
mov
sbb
mov
mov
xchg
jl
cmp
mov
addr16
mov
mov
inc
les
loop
enter
push
mov
es
add
gs
pop
adc
aaa
mov
lds
adc
mov
adc
mov
stos
jp
xor
or
fdiv
push
movsb
pusha
out
jl
mov
lret
mov
dec
jg
ss
mov
loop
shlb
rcrb
cltd
cs
add
and
push
xchg
orb
push
push
cmpl
mov
test
js
repz
ljmp
add
add
sbb
or
test
sbb
xlat
test
add
mov
rcr
popa
xchg
repnz
sub
pop
mov
rcrb
fldenv
rolb
jl
cmpsl
inc
in
jne
mov
and
cltd
arpl
repnz
andb
popa
out
ja
sbb
add
jno
mov
mov
inc
add
daa
movsl
xor
movsb
cmc
out
jae
loope
dec
mov
or
popf
and
outsl
jecxz
mov
jnp
andb
test
xchg
xor
adc
loop
out
xrelease
and
push
add
inc
add
stc
arpl
sub
or
iret
pop
ljmp
sbb
push
push
mov
fcomps
negb
inc
or
adc
adc
xlat
dec
jo
sbb
inc
and
mov
outsl
push
mov
pushf
shll
adc
add
andb
aas
and
test
popf
mov
mov
dec
push
mov
scas
movsb
scas
or
or
sbb
out
xchg
jno
push
rorl
and
sbb
and
mov
add
popa
daa
aas
and
outsl
jle
mov
iret
adc
mov
dec
mov
sub
out
mov
xchg
xlat
lahf
cmpsb
dec
test
and
and
dec
pop
cmp
lea
and
push
lods
ret
sub
xchg
fildll
pop
test
pop
push
and
mov
mov
adc
in
insb
adc
lods
testl
jp
arpl
xchg
adc
adc
enter
es
dec
mov
and
push
imull
leave
fsubrs
testb
stos
imul
ja
inc
adc
cld
sahf
pop
push
inc
pop
jnp
ret
repnz
fsubrs
push
pop
jnp
pop
faddp
imulb
inc
jecxz
jae
mov
adc
insb
aas
push
mov
push
jmp
inc
push
xchg
insb
or
jl
adc
cmpsl
push
and
js
dec
inc
mov
pop
add
stos
test
pop
cmpb
push
cmp
jns
cmp
imul
or
leave
sub
inc
fiadds
pop
jge
aas
mov
lock
mov
pop
into
jo
enter
lods
or
sub
adc
lock
jle
or
aad
adcl
out
in
shlb
sbb
push
push
mov
repnz
jg
dec
push
mov
je
add
mov
mov
xchg
les
xor
jge
mov
fs
sub
cmp
cmpsb
out
test
sub
lds
in
cli
pushf
cmpsl
mov
lret
mov
fbld
inc
push
jnp
aad
adc
dec
stos
push
test
or
iret
mov
mov
ljmp
je
outsl
pusha
ss
adc
push
add
xchg
sbb
push
lret
sub
inc
sub
lcall
mov
or
fdivrp
test
in
cmpsb
mov
adcb
mov
jbe
test
cmp
mov
nop
or
pop
or
sbb
enter
arpl
sub
aad
scas
pop
adc
cmp
push
xchg
and
pushf
adc
lcall
nop
int3
daa
lock
test
sub
lahf
xor
shrb
mov
pop
imul
xor
dec
repz
cmp
cwtl
scas
mov
js
dec
fadds
adcl
sahf
aad
xchg
xor
push
movsl
inc
inc
mov
sbb
inc
imul
and
mov
sahf
call
lea
bnd
sbb
rorb
fcmovbe
sub
int
pop
out
add
ja
dec
aaa
scas
mov
cmpsl
add
outsl
pop
lds
adc
aaa
aaa
push
dec
sbb
mov
or
push
mov
jge
xorb
xor
add
mov
push
xchg
pop
test
dec
in
enter
jo
sar
sbb
lods
out
call
jmp
iret
push
fcom
lret
mov
daa
pop
fdivrl
cltd
pop
cmpsb
cmpsb
cli
enter
adc
popf
imul
adc
sbb
out
cmp
repnz
nop
sbb
nop
adc
sahf
push
adc
aas
push
testb
clc
push
fsubrl
inc
push
cmp
out
fbstp
sub
mov
loopne
cmp
xchg
test
lahf
pop
xchg
adc
int
xor
add
cmp
or
sub
pop
cwtl
pop
dec
inc
pop
cmpsb
outsl
je
and
sbb
mov
rcll
dec
in
and
das
cmp
jne
mov
rcrb
xor
dec
ret
add
and
sbb
inc
xor
into
xor
stos
push
test
or
pop
les
lahf
jp
outsb
aas
cmp
fmulp
or
pop
in
mov
pop
stc
jp
sbb
fistps
cmp
and
cmp
and
sbb
add
mov
stos
adcl
adc
in
jbe
stos
xchg
add
inc
test
cmp
sti
mov
iret
xchg
int
pop
arpl
push
dec
scas
lahf
shr
arpl
ret
jge
push
fidivrs
loope
shlb
fwait
mov
jmp
cmp
sub
js
xor
cmp
pop
into
sbb
sahf
das
lcall
sub
add
cmp
aad
push
insb
sahf
lock
bswap
sub
cs
mov
les
pop
js
test
jl
lcall
mov
movsb
aaa
ljmp
insl
out
adc
or
loopne
mov
inc
fdiv
in
jmp
ret
into
sbb
lea
imul
jl
pop
pop
xchg
add
jle
clc
std
arpl
imul
test
pop
dec
adc
inc
xchg
addl
sub
loop
and
add
frstor
add
int
mov
dec
mov
call
stc
pop
pop
xchg
add
call
add
imul
adc
scas
stos
test
pop
ss
out
enter
xor
cmp
xlat
mov
dec
jns
sbb
pop
sti
xor
bound
sbb
fldl
jmp
rolb
ja
inc
rcrl
and
lcall
stos
jns
in
jne
add
ret
ror
and
xor
repz
aas
cmp
out
mov
idiv
mov
and
push
mull
inc
inc
hlt
xor
das
test
cmpsb
add
cmp
fists
jbe
into
jl
inc
or
pop
leave
ret
pusha
pop
push
pop
jbe
divb
lds
push
push
dec
pop
lds
jbe
jae
and
addr16
inc
shr
insl
mov
rcrl
aas
mov
pop
jmp
push
xchg
dec
and
dec
outsb
sub
sbb
js
adc
scas
and
ja,pt
mov
lahf
mov
push
sti
mov
mov
in
and
mov
leave
dec
fisubrl
mov
push
idivl
in
inc
nop
mov
or
es
jae
in
and
out
push
cmp
rcll
lock
je
mov
mov
inc
jnp
push
push
jno
inc
mov
fldcw
lcall
sahf
outsl
shll
add
shll
pusha
xor
push
popa
fbstp
imul
jmp
jae
fildll
es
in
inc
js
cmp
adc
out
or
push
mov
int
in
add
rolb
sti
push
xchg
ret
jp
inc
cmp
repnz
adc
sub
xor
xor
sub
mov
inc
mov
rol
jle
pop
sbb
cmp
inc
test
dec
lds
fists
test
fistps
bound
sbb
cmp
push
insb
mov
fimull
mov
mov
ficompl
xor
fnstcw
mov
cmp
cld
dec
stos
xor
push
sbb
fs
pop
neg
std
dec
insb
imul
xchg
fld
mov
ret
out
xchg
sub
int
lcall
shlb
sbb
xchg
jge
pusha
jmp
rorl
and
xchg
pop
xor
into
aad
and
repz
cmp
push
das
fwait
dec
inc
movsl
push
jge
stos
and
test
sub
addr16
int
ret
dec
stos
and
ja
leave
enter
fldenv
or
pop
enter
xor
xor
add
xor
shll
ficompl
mov
inc
test
pushf
fmuls
ror
mov
and
xor
pop
ja
push
mov
aas
sbb
xchg
call
mov
subl
cmpl
fldenv
adc
push
pop
push
jae
mov
aam
jae
neg
push
ss
adc
push
cmp
aaa
xlat
adc
adc
xchg
jmp
addr16
mov
push
mov
pop
stc
and
jnp
bound
aas
cmc
adc
xchg
call
dec
and
push
push
xor
rcrb
xchg
jmp
and
or
jbe
dec
movsl
sub
cltd
divb
lret
mov
in
es
pop
inc
add
push
aaa
mov
shlb
sub
mov
adc
mov
push
mov
nop
test
and
jp
adc
lock
mov
mov
sub
pop
insb
pop
inc
sbb
mov
cmc
outsl
nop
sub
fs
gs
mov
pushl
jge
scas
adc
jns
popa
push
addr16
dec
dec
fldcw
roll
xchg
ds
or
cmp
test
cmc
pop
add
add
in
icebp
or
fists
stos
inc
outsl
loopne
es
pusha
xor
lahf
dec
stc
pop
loop
push
out
adc
dec
sbb
pop
repnz
dec
jmp
loop
xchg
pop
jmp
scas
dec
fcoms
fldl
clc
jg
shlb
insl
ficoml
xor
sarl
outsl
gs
js
pop
cld
repnz
es
mov
stc
aaa
out
mov
push
xor
loope
and
lods
pop
mov
arpl
cli
dec
enter
std
in
adc
movsb
outsl
imul
add
jno
cmp
mov
pop
fistpl
mov
cld
fwait
xchg
add
inc
out
lahf
scas
inc
pop
ds
pop
mov
fnstcw
iret
cmpsb
sbb
loope
mov
arpl
gs
cmp
fadd
test
xor
adc
pop
daa
jo
pop
out
pop
fs
push
or
push
and
pop
fistpll
add
testb
xor
fwait
sub
call
jle
movl
ljmp
je
push
in
out
dec
inc
js
mov
leave
sbb
push
bound
push
add
pop
pop
cwtl
adc
addr16
iret
or
data16
addr16
sbb
sbb
sbb
adc
and
loopne
movd
dec
bswap
xchg
outsb
and
inc
loopne
adc
out
sbb
mov
add
xor
aam
dec
add
push
ret
std
fisttpl
faddl
cmp
stc
pop
arpl
cmp
mov
inc
xor
xor
pop
inc
cmpsb
loop
jmp
jg
pop
mov
aas
outsl
cli
jge
mov
or
fnstenv
out
jmp
lcall
stos
xlat
jmp
pop
or
mov
cli
test
dec
stc
cmp
sub
pop
insb
cltd
loopne
sbb
mov
xchg
addb
inc
cmp
dec
lret
cmp
pop
mov
dec
add
jns
outsb
pushf
fstpt
sarl
xor
imul
sub
xchg
mov
inc
inc
pop
cmp
adc
lea
gs
add
js
shrl
cmp
out
dec
ds
pop
dec
adc
xor
out
dec
test
lea
fs
mov
mov
ss
push
xor
xchg
cmp
inc
pop
ljmp
pop
std
shrb
es
xchg
push
cmp
or
jp
sti
mov
in
push
rcr
movsl
inc
mov
rorb
js
rorl
or
lcall
pop
pushf
sub
inc
fnsave
scas
inc
inc
mov
mov
push
fsubrs
sbb
movsb
xchg
sbb
ds
mov
pop
mov
dec
add
scas
scas
fwait
or
mov
into
jb
push
xlat
pop
mov
cmp
adc
mov
xchg
popf
xchg
lret
add
test
pushf
sbb
leave
clc
inc
scas
mov
fsts
push
lods
push
enter
inc
fs
mov
lret
xor
pop
mov
cmpsb
cli
mov
xchg
inc
xlat
bound
mov
pop
cltd
cmp
aad
mov
in
adc
pop
lret
xor
pop
sahf
fwait
adc
xchg
pusha
push
cmp
mov
xchg
mov
push
call
pushf
push
int
lahf
pop
fidivrl
cmpsl
or
movsl
mov
outsl
out
fdivrp
push
popa
js
and
lods
bound
or
out
cmp
jb
inc
cld
andb
int
inc
rorb
add
mov
mov
rcrl
pop
sarl
push
xchg
xlat
push
mov
test
mov
ljmp
jmp
jp
pop
stos
pop
fwait
push
pop
mov
mov
ds
jae
add
pushf
fisttpl
lods
adc
sahf
cmp
mov
call
inc
addr16
mov
movsb
mov
dec
push
jl
adc
adc
pop
push
dec
aas
push
xchg
ja
lret
int3
fldenv
push
add
xchg
mov
sbb
jl
push
cmpsb
sti
xchg
cli
shr
pop
clc
inc
mov
jle
xchg
stc
jo
push
test
popf
mov
jecxz
inc
dec
enter
stc
in
aas
dec
sbb
ljmp
sub
ret
dec
subl
mov
hlt
insl
call
ficompl
dec
imul
pop
shrb
jbe
test
pusha
loope
rcrb
popf
adc
icebp
sub
push
mov
out
jbe
pop
dec
shll
inc
sub
and
or
inc
mov
lods
mov
pop
aas
in
insl
xor
cld
xor
xchg
mov
pop
and
std
or
lahf
cmp
ret
add
and
sbb
cltd
clc
lea
lret
std
push
inc
push
and
push
nop
mov
and
hlt
sbb
loopne
and
push
imul
test
loop
lcall
lods
lahf
push
or
dec
fnstenv
dec
call
and
cmp
mov
loope
sahf
mov
push
roll
or
xor
xorl
jns
aam
jg
cltd
mov
lea
stc
pop
popf
daa
and
fcomps
adc
jmp
lods
aaa
push
adc
push
jae
shrl
and
sub
mov
scas
and
jecxz
mov
or
push
mov
jne
ja
lock
bound
dec
loope
iret
sbb
flds
pop
fdivrl
pop
and
dec
jne
mov
xlat
cmpsb
insl
pop
mov
mov
and
cmp
jbe
mov
mov
xor
add
test
cwtl
xchg
sbb
and
mov
jle
lcall
sti
and
jnp
pusha
inc
test
int
mov
leave
ja
loope
lahf
pop
mov
imul
iret
sub
add
ret
sub
cmp
pusha
not
xchg
push
sbb
rclb
inc
les
sbb
daa
cmpsl
push
sti
jg
les
std
adc
ret
aaa
mov
mov
ret
out
mov
cmc
mov
test
mov
mov
inc
cmp
xchg
cmpsl
test
inc
lea
pop
leave
test
lcall
mov
lds
or
add
push
lcall
push
imul
sbb
roll
cmp
mov
adc
hlt
jne
nop
mov
inc
adc
cmp
iret
jns
adc
xchg
cld
sub
sbb
negl
cli
es
fsubr
adcb
sbb
jle
aad
call
sbb
jns
jl
insb
popf
jbe
push
mov
mov
enter
enter
cmp
pop
push
lret
cli
dec
shrl
or
fisttpl
pop
popf
jnp
mov
fbld
rolb
and
mov
fcom
push
xlat
jg
stos
addr16
mov
inc
nop
loop
cmpsl
scas
dec
daa
and
add
cmpsb
push
lds
pop
mov
mov
or
adc
loope
pop
cmp
sbb
repnz
sbb
jnp
xchg
rcll
pop
and
mov
push
stos
lret
movsb
jne
push
mov
xor
add
or
jnp
hlt
push
scas
pop
add
stos
sbb
clc
leave
push
ficoms
sbb
test
mov
iret
jge
test
scas
mov
int3
pop
lock
std
inc
pop
and
lock
fidivrl
xchg
add
mov
jmp
stc
sub
mov
in
mov
nop
and
cmp
and
movsb
jg
sti
xchg
loopne
push
mov
or
cmp
xchg
mov
adc
mov
cmpsl
xchg
or
pop
jne
jle
lods
pop
adc
call
out
frstor
cli
jl
outsl
iret
sub
insl
insl
sbb
stc
leave
data16
jbe
pop
test
inc
cwtl
inc
sbb
in
imul
or
add
les
xchg
pop
popa
bound
jmp
or
inc
jnp
xchg
or
stos
cmpsl
pop
push
std
jbe
fstps
inc
mov
mov
loopne
pop
xor
xor
outsl
xchg
out
pop
lds
outsb
sbb
icebp
dec
std
mov
cli
mov
fldl2t
jb
dec
xchg
add
push
xchg
into
clc
adcl
jl
cmp
and
dec
dec
fistl
int3
scas
clc
mov
jecxz
ret
pop
stos
pushf
adc
data16
mov
je
dec
in
popf
pop
loopne
loop
sub
cmp
lock
int
pop
in
ret
loopne
push
push
mov
jp
jmp
movsl
dec
pop
xlat
dec
dec
movsb
sbb
aad
inc
mov
mov
adc
cli
call
pop
bound
lret
and
mov
and
arpl
dec
sbb
xlat
dec
movsl
pop
enter
push
icebp
popa
mov
xchg
test
push
sti
test
cmp
in
popl
or
jmp
loope
mov
jg
push
or
mov
daa
fdiv
or
std
xchg
jecxz
cmp
pop
scas
and
stc
jns
cwtl
fstpt
divb
pop
mov
lds
gs
insb
mov
jecxz
imulb
jmp
push
mov
and
jg
data16
dec
incb
sub
insl
or
adc
sub
or
cli
jecxz
dec
mov
add
into
cmc
loopne
push
lods
dec
pop
imul
xchg
popa
mov
sub
cmp
imul
scas
xor
cmp
aas
lahf
aam
fbld
add
xor
mov
add
mov
push
arpl
fildl
stc
inc
arpl
out
repz
jnp
mov
dec
pop
stos
stos
mov
xchg
roll
xor
insb
sbb
xor
fcomi
out
inc
push
jg
sub
mov
ss
das
and
notb
mov
divb
fdivs
aad
shll
hlt
xchg
mov
mov
fisttpl
sub
xor
lret
sbb
pop
mov
inc
dec
add
mov
movsb
cmpb
in
cwtl
cmp
test
sbb
push
cld
mov
ret
xor
lcall
shll
mov
insl
adc
movsb
adc
xlat
mov
mov
shll
leave
pop
outsb
mov
cmp
adc
iret
sub
pop
xlat
fistpll
mov
adc
mov
inc
lcall
cmp
cmpsl
ds
adcl
movsl
sti
cmp
jne
in
and
dec
mov
dec
fwait
add
pop
mov
xorb
cli
sub
mov
aaa
add
jo
mov
cmp
mov
mov
sahf
xchg
ds
shrb
imul
mov
addr16
jns
add
mov
or
pop
mov
jmp
data16
hlt
push
stos
xlat
mov
aas
jle
jo
ljmp
sbbl
mov
or
pop
xor
xor
lahf
mov
je
mov
pop
add
std
jbe
fbstp
pop
adc
imul
lock
or
fwait
cwtl
mov
mov
pusha
xor
inc
vpmullw
push
mov
mov
pop
and
pop
cmpb
jne
sbb
cmc
jg
push
mov
jb
pop
test
cmc
rcl
repnz
push
cmpsb
fadds
fwait
pop
jo
into
fs
cmc
pop
xchg
pop
and
sbb
dec
sbb
fidivs
movsb
fwait
in
cltd
push
bound
cmp
rcrl
in
xchg
dec
push
sub
cs
xchg
cmp
out
xchg
xchg
jbe
dec
fbld
cmp
xchg
jns
xchg
cmp
shrl
cltd
fsub
cmpsl
imul
push
imul
lcall
jns
adc
test
dec
mov
push
insb
retw
std
popa
es
fadds
and
xchg
lds
dec
push
popa
mov
out
or
loope
mov
and
imul
mov
std
mov
push
mov
popa
notb
xlat
gs
arpl
push
lds
push
dec
lea
in
mov
mov
pop
call
call
rcl
pop
xchg
in
mov
mov
fsubrl
xorl
imul
int
jmp
mov
lods
and
ss
pop
sub
cli
adc
xorb
cmc
sbb
enter
mov
out
push
xchg
push
mov
lret
mov
sbb
cmp
xlat
ja
push
adc
clc
pop
test
out
das
inc
test
inc
push
ret
mov
cmp
xor
pop
scas
xchg
aas
mov
and
mov
pop
clc
mov
pop
cmp
loop
aam
rol
test
mov
popa
pop
jne
popf
fwait
pushf
and
push
jno
or
out
mov
les
and
xchg
jl
dec
inc
pop
mov
add
sub
push
jb
mov
mov
push
pop
mov
and
lcall
rcll
scas
mov
add
jns
mov
dec
push
mov
xchg
js
test
or
call
lds
sub
xchg
sub
dec
scas
or
es
xchg
cs
xchg
dec
repnz
mov
mov
cs
pop
jmp
pop
xor
mov
ret
lds
inc
fwait
movsl
add
cmp
push
ss
flds
pop
sub
imul
cltd
clc
cmpsl
pushf
mov
lds
jge
lahf
pop
in
mov
or
push
sbb
fnstenv
dec
loopne
or
arpl
jp
lcall
outsb
scas
push
push
out
xlat
into
and
cmp
mov
in
jle
cmpl
fdivrs
out
enter
data16
xor
addr16
flds
jg
jecxz
movsb
ljmp
mov
cmp
add
test
gs
and
xor
loop
push
lret
pop
mov
push
adc
xchg
jne
insl
sbb
cmp
mov
xchg
shrb
cmp
mov
insb
loop
insl
cmp
mov
and
add
dec
sbbb
push
fldl
imul
out
cld
fwait
out
pop
or
and
ret
movsb
jp
mov
sub
ljmp
mov
xorl
shlb
cmp
jo
xchg
sbb
and
jne
jb
xchg
or
jnp
add
dec
add
xchg
mov
js
sbb
ds
mov
out
int3
outsl
movsl
inc
std
jns
lret
or
aas
subb
inc
arpl
sub
jmp
xlat
push
fwait
in
rcrb
add
mov
outsl
adc
add
jl
inc
push
xchg
jae
xchg
out
xchg
gs
shlb
sub
aaa
dec
cmp
aas
into
jno
cmp
cwtl
or
fisttps
insl
sbb
xor
jo
mov
nop
out
test
jg
imul
cwtl
or
mov
lret
fldcw
movsl
outsb
imul
sti
cs
lods
stos
xor
cltd
ljmp
or
xchg
sbb
jb
fwait
jl
push
inc
sbb
adc
lock
jp
pop
cld
mov
movsb
in
sbb
inc
jne
push
lds
xchg
cmc
sar
mov
pop
fisttps
outsb
cmp
sbb
push
and
mov
push
sbb
test
lcall
inc
xchg
fdivrp
ffree
xor
mov
pop
es
vpsllw
sbb
mov
arpl
push
repz
adc
movsl
fcomps
gs
js
cwtl
movaps
mov
scas
mov
mov
inc
out
push
mov
jp
cmc
lahf
test
mov
inc
leave
cli
ljmp
mov
mov
sub
movsb
or
push
shll
shr
pusha
stc
lods
mov
scas
mov
add
push
mov
lds
outsl
loop
int3
xor
jecxz
xchg
and
popa
hlt
jl
not
popf
xlat
nop
xor
mov
js
mov
fwait
sub
repz
rorb
incb
prefetcht2
xlat
or
add
cwtl
lahf
mov
adc
sub
or
xor
aas
jg
inc
pop
and
shrb
xchg
adc
daa
sbb
imul
sbbl
or
pushf
jg
fsts
sbb
mov
jl
mov
ret
stos
mov
pop
xor
cmpb
rcll
adc
or
sbb
loopne
xchg
jno
dec
push
rcll
jne
insb
adc
cmp
fsubr
flds
js
sub
call
cmp
cmp
rorb
sub
xchg
sbb
gs
push
mov
xchg
idivb
std
loop
mov
and
pop
loopne
into
xchg
add
xchg
push
xchg
dec
rorl
push
enter
jno
flds
xor
mov
std
inc
push
icebp
inc
repz
test
imul
or
addr16
mov
or
outsb
cmp
cltd
xchg
push
enter
dec
aas
cmp
int3
outsl
push
sarb
cmc
cli
dec
out
lret
inc
stos
mov
mov
jle
xchg
or
sarb
sqrtps
cmp
cmp
aad
aam
xchg
mov
pop
adc
icebp
std
cmp
mov
xor
jge
test
xchg
and
cmp
add
ds
sahf
in
add
lods
aad
jp
imul
stos
lock
test
subl
push
movsb
push
mov
movsb
dec
aas
mov
into
xbegin
push
and
loope
push
stos
xchg
sub
std
jge
lds
push
mov
mov
mov
inc
sbb
lods
mov
xchg
aas
aaa
jmp
mov
xchg
jns
lahf
push
and
js
lods
mov
jl
daa
addr16
push
fisubrl
jmp
cmp
bnd
push
iret
lret
adc
and
cmp
scas
lock
enter
ljmp
in
and
adc
adc
jns
jp
lods
imull
sti
call
dec
sti
insl
add
jns
xchg
xor
pop
imul
sub
sub
sbb
jecxz
stos
divb
sbb
mov
icebp
pop
adc
and
dec
ds
cmp
inc
mov
nop
mov
push
pushf
rol
int3
orb
js
mov
sbb
pop
pop
dec
ffreep
iret
and
jbe
jecxz
rcll
in
xchg
inc
int3
sbb
test
lret
and
jecxz
out
inc
leave
add
sbb
and
xor
fucom
xchg
cmp
adc
in
mulb
mov
add
nop
ss
pop
jnp
bound
test
xlat
adc
xlat
and
les
sub
inc
fcmovb
mov
or
nop
ret
outsl
cmp
mov
xchg
dec
repnz
push
inc
mov
in
jae
cmpsl
jecxz
into
insl
and
dec
pop
push
and
enter
cmp
mov
sub
and
pop
push
scas
loope
popa
sbb
jge
cmp
loop
xor
mov
fcoml
call
jle
add
outsb
pop
lret
pushf
cmc
inc
and
sub
lods
lds
or
push
push
fdivp
roll
cmpsl
ss
call
lods
es
cmp
call
sub
pushf
jp
jmp
sub
sub
mov
and
adc
arpl
xchg
out
mov
mov
psubb
popa
push
lods
push
loop
and
shll
in
or
cld
neg
out
or
dec
pop
clc
mov
sbb
or
adc
sbb
rcrb
cmpl
mov
in
cmp
xor
test
daa
inc
rol
es
or
jmp
adc
iret
xor
sbb
sub
push
push
fwait
pop
sbb
dec
jno
rorl
dec
icebp
daa
lret
call
cltd
insb
orb
adcb
fistpll
xchg
shl
pop
xor
xorl
and
ljmp
add
ds
mov
js
cmp
adc
nop
pop
fists
xchg
push
lods
xchg
push
ud0
mov
pop
pushf
mov
sbb
and
out
jmp
in
lret
xor
push
adc
inc
xor
out
push
and
jl
bound
xchg
xor
loopne
aad
mov
sub
cmpb
scas
aas
mov
add
or
imull
sub
test
add
insb
mov
jecxz
jo
stos
fisttps
in
cld
or
jecxz
mov
gs
mov
aam
add
ss
mov
mov
and
pop
int3
inc
sbb
dec
mov
das
cmp
pushf
ja
loopne
lock
xchg
les
inc
sbb
rcll
ja
addr16
test
and
test
aaa
fbld
aam
push
into
insl
and
cmpl
jmp
rcll
repz
cli
fists
push
sbb
imul
fbstp
sarl
js
ss
adc
out
bound
aas
das
xchg
push
mov
cld
cli
loopne
xor
xor
sarl
repz
fdivs
and
lods
add
test
das
xchg
aas
xlat
mov
jnp
pop
sub
or
inc
fdivrs
cld
call
repz
insb
jns
mov
push
xor
mov
mov
lock
xchg
addb
inc
aas
ret
inc
mov
mov
cmp
push
xor
lea
movsl
push
das
cmp
xchg
cli
dec
out
xchg
out
int
mov
cltd
lods
jecxz
jecxz
aad
xor
fs
lret
jbe
lret
fxch
cmpsb
and
outsl
sbbb
enter
and
arpl
aad
xchg
sub
es
loopne
ljmp
mov
fsts
lret
dec
stos
aad
in
cmc
add
icebp
imul
push
adc
out
nop
enter
pop
and
loopne
jmp
pop
aaa
cmp
ljmp
mov
push
xchg
and
lods
mov
inc
ficompl
dec
lcall
push
cs
add
adc
mov
movb
pop
add
clc
lcall
or
xor
mov
in
enter
in
hlt
jge
jmp
jno
outsb
jnp
aas
subb
stos
rorb
pusha
fistpll
les
fidivs
or
in
mov
push
hlt
and
movsl
jbe
xchg
sub
jno
clc
dec
fiaddl
inc
cmp
shlb
inc
lods
mov
cld
add
mov
lock
rcrb
mov
ret
lcall
lods
fldt
sub
cmpsb
inc
xchg
mov
pop
cmp
test
divb
cmc
loop
mov
push
adc
lahf
adc
outsl
sbb
push
xchg
dec
adc
push
aad
push
call
push
add
fstp
xchg
outsb
cli
push
push
in
sub
outsb
mov
or
aas
push
cmp
mov
and
jne
cmp
mov
into
das
push
add
mov
and
inc
sub
fnstsw
dec
mov
push
lret
ret
cs
dec
mov
lea
cmp
xor
in
dec
adc
std
jmp
daa
and
push
dec
lcall
popa
xchg
pushl
cmp
inc
stc
stos
inc
test
js
hlt
inc
ja
cmp
repz
jmp
pop
aam
and
stos
mov
cmp
sub
add
jle
sti
mov
fs
fldl2t
or
mov
inc
divb
pop
xchg
andl
mov
stc
jnp
inc
inc
jmp
or
in
fildll
vunpckhps
push
push
or
xor
sahf
pop
inc
and
pop
and
andb
jns
cmpsb
jnp
pop
lret
xor
leave
cmp
xor
or
faddl
sbb
fwait
adc
in
aaa
push
daa
push
cmp
mov
aas
int
xor
jb
fs
and
icebp
movsl
rorl
push
test
fdivr
mov
or
pop
mov
outsl
std
push
ja
mov
enter
mov
jb
pop
xor
push
rcll
or
out
fstpt
into
loopne
addr16
fistpl
aaa
sti
sti
mov
sti
mov
jo
sub
push
out
ret
shlb
push
rcrb
inc
cmp
mov
imul
lret
popa
daa
pop
lret
sub
outsl
inc
cld
push
xlat
jo
pop
imul
jmp
insl
xor
mov
nop
mov
add
push
fidivs
jmp
add
sahf
sub
xchg
mov
notl
push
in
outsl
or
dec
out
int
hlt
clc
pop
or
xchg
mov
mov
xchg
sarb
lret
and
loope
mov
fbstp
mov
add
cmp
add
mov
subl
lods
lret
mov
adc
cmpb
shlb
sub
out
outsb
imulb
mov
ret
mov
jo
fsubrl
fstpl
testl
push
xchg
dec
inc
out
std
inc
jp
pop
xchg
and
jg
xchg
out
sub
inc
inc
cwtl
fs
mov
cmpsb
rolb
and
aad
adc
nop
mov
sbb
jg
sbb
cmpsb
mov
mov
mov
jne
dec
cld
fs
mov
sub
cmpl
into
loopne
sub
dec
pop
rcrl
hlt
mov
ret
jge
idivl
jne
mov
out
pusha
mov
mov
xchg
pop
idivl
idiv
mov
test
jne
dec
jmp
push
in
xchg
jge
jmp
clc
sbb
push
movsb
aas
outsb
test
pop
das
repz
lahf
adc
sbb
lods
push
lahf
clc
notb
xchg
loop
outsb
mov
sub
and
push
fdivr
xchg
cmp
nop
xchg
fiaddl
daa
jne
adcl
adc
sarl
cld
sbb
hlt
sbb
add
in
fsubrl
mov
cmc
adc
leave
mov
jbe
jge
lahf
push
jmp
pop
mov
daa
lea
mov
aam
cmp
pop
xchg
and
sub
sub
dec
mov
stc
sbb
outsb
repnz
jb
cmpb
push
in
jo
aas
rcr
and
mov
and
and
push
jg
mov
mov
mov
xchg
add
lret
adc
push
ss
add
pop
bnd
sub
xor
stos
pop
imul
mov
iret
pop
xchg
mov
dec
testl
xchg
fmulp
mov
je
je
jg
sub
pop
jle
xchg
pushf
cli
aaa
test
xor
mov
or
out
repnz
push
jne
push
outsl
movsb
sub
enter
je
iret
jo
jmp
loope
pop
mov
scas
jnp
adc
cmp
lahf
arpl
push
test
and
shr
and
xchg
shr
dec
adc
test
adc
mov
push
in
push
adc
push
cli
test
inc
xchg
mov
notl
jbe
movsb
scas
pop
push
adc
cmpsl
add
jb
xchg
lret
mov
pop
cltd
scas
mov
jecxz
mov
in
jns
xor
mov
mov
jp
fwait
jecxz
mov
push
lock
lds
pop
aas
fs
shll
add
mov
sub
xor
lret
xor
test
das
iret
test
daa
xor
xchg
jg
or
adc
pop
dec
mov
loop
xor
pop
adc
fs
bound
movsb
mov
in
test
lods
enter
mov
aas
push
test
sub
test
inc
and
aam
out
cmp
dec
insl
mov
mov
inc
dec
cmp
mov
gs
loop
mov
call
clc
es
ja
jo
pop
in
negb
mov
shll
lret
lret
mov
jp
repz
and
or
stc
cmp
shl
pop
sub
mov
cmp
mov
jl
outsb
add
insl
js
sub
clc
in
sub
addl
out
pop
sub
and
jg
mov
push
lods
icebp
lods
rorl
or
pop
pop
xchg
sub
mov
inc
ja
insb
and
fsubl
pop
push
iret
dec
mulb
inc
repnz
int
hlt
jge
inc
es
outsl
jae
xor
js
or
outsb
adc
and
cmp
in
xchg
or
push
pop
int3
inc
sbb
xor
push
arpl
dec
loop
shlb
mov
cmp
call
xor
sti
mov
mov
insl
inc
push
mov
mov
sbb
sti
cmp
repz
jmp
das
test
popf
lcall
push
test
inc
inc
cmp
sbb
in
push
xor
shll
pop
mov
fistps
xor
dec
sub
pop
shrl
cmp
outsb
mov
movsb
loop
fistpl
cwtl
pop
mov
cmp
out
lea
addl
xchg
ljmp
imul
add
fs
lea
pusha
fwait
mov
and
imul
aaa
lcall
xlat
inc
fistpll
pop
inc
cmp
inc
outsl
mov
mov
mov
push
push
popa
mov
cmp
mov
or
cmpsl
mov
fsincos
in
arpl
je
xchg
data16
in
mov
mov
fstps
jmp
pop
aam
or
xchg
imul
sbb
and
xchg
std
sbb
cmc
mull
dec
jbe,pt
dec
pop
xor
or
sub
mov
sbb
testb
jg
jno
das
int3
enter
sbb
and
nop
cltd
mulb
fcompl
push
inc
lds
add
or
pop
sbbb
add
test
adc
mov
inc
mov
sbb
aaa
fsubrl
or
sub
jecxz
sbb
dec
imul
lods
ficompl
stos
sub
shrb
sbb
rcrl
mov
jo
push
mov
imul
scas
in
pop
insl
sbb
stos
cmpsb
out
add
shll
cmp
push
jb
adc
or
pop
aad
pop
push
dec
int
pop
dec
clc
sbb
enter
jae
hlt
inc
adc
pop
popa
addb
lret
sahf
mov
mov
rorl
aaa
mov
jmp
int
icebp
aam
cltd
cmp
and
aas
mov
push
xor
jle
ss
std
ret
call
test
out
or
add
or
ljmp
ret
test
dec
lret
lcall
outsl
mov
cltd
lods
adc
ss
and
jne,pn
xchg
fs
adc
stc
ljmp
scas
inc
lahf
repnz
decb
push
aas
call
add
and
dec
pop
mov
out
mov
mov
or
fnstsw
push
push
jb
lds
jge
inc
out
push
cld
mov
mov
cmpsl
outsl
dec
sahf
fbstp
int3
cld
out
fcoms
out
hlt
jno
addb
dec
sub
xchg
sbb
push
xor
push
push
and
aaa
test
mov
orb
ret
les
mov
xor
sub
pop
lret
leave
and
sti
xchg
push
inc
es
arpl
int3
pop
push
xchg
jo
fcompl
call
adc
lahf
popf
mov
addr16
in
xor
xlat
sbbl
repz
insb
lods
mov
into
push
repz
add
lock
push
pop
push
cmpsl
xor
or
jecxz
into
or
xor
mov
mov
mov
hlt
in
rorl
mov
inc
add
add
lea
adc
mov
adc
iret
ret
push
and
nop
insl
cmovo
push
divl
iret
adc
lcall
and
frstor
idivl
das
lcall
aam
dec
addr16
mov
roll
and
lods
jle
xchg
mov
and
pop
cmpl
add
add
sub
sub
ljmp
sbb
jmp
inc
xchg
fmuls
sub
cld
cmpl
jmp
sbb
shl
add
sub
and
adc
pop
fs
push
push
jge
add
pop
rclb
fisttpll
sbb
mov
out
mov
xchg
lret
sub
sub
sbb
push
and
out
mov
ret
and
xor
out
or
cmpsb
mov
scas
imull
into
fisttpll
clc
push
xorl
dec
mov
js
cmp
lods
ja
adc
inc
mov
xlat
push
mov
icebp
fwait
adc
lds
xchg
dec
sbb
cwtl
mov
repnz
mov
sarb
das
je
lcall
addr16
xor
sahf
push
loop
mov
mov
mov
dec
mov
mov
sbbb
add
or
roll
loope
cmp
lods
addb
mov
sarb
cs
sbb
push
scas
cs
mov
mov
popf
outsb
dec
sbb
insl
mov
outsb
push
aaa
xchg
push
mov
jmp
or
dec
stos
sbb
divb
lods
xor
or
pushf
mov
dec
lds
sbb
ja
xchg
cli
das
adc
test
movsb
addr16
fisubs
mov
mov
gs
and
das
xor
std
jne
dec
popl
enter
add
gs
xchg
xchg
or
push
sahf
ret
mov
mov
div
pop
test
dec
insl
mov
inc
jecxz
data16
sub
daa
lods
add
daa
sti
mov
push
mov
ljmp
sub
cmp
testl
dec
lret
add
and
fmuls
pusha
ja
jne
sub
xlat
sbb
ffreep
les
lds
rcrl
pop
outsl
bound
adc
cwtl
inc
pop
push
imul
inc
loope
scas
insl
lods
xchg
xchg
mov
sbb
out
js
out
jle
jmp
ss
pop
add
fiadds
cs
cmc
sahf
xchg
cli
out
sbb
lock
test
mov
mov
mov
js
arpl
sbb
insl
mov
repz
scas
gs
nop
in
pop
addb
in
mov
or
inc
lods
adc
jg
jns
push
push
dec
jbe
bound
and
dec
cwtl
daa
pop
mov
push
je
pop
adc
adc
xor
xor
xchg
push
lret
scas
push
add
stos
pushf
sbb
pop
insb
lret
fldcw
pop
rclb
sub
inc
mov
test
inc
push
loop
jnp
int3
inc
pop
nop
and
test
test
dec
xor
and
rorl
adc
imul
dec
decl
mov
cwtl
and
mov
ds
add
subl
push
mov
andl
clc
in
sbb
jg
cs
faddl
fildl
ljmp
repz
addb
xchg
push
cmp
sti
and
cmp
push
fists
or
mov
loop
xor
pop
fstps
mov
repnz
inc
mov
adc
aas
fdivl
add
xchg
sbb
daa
cltd
ss
cld
xchg
add
leave
inc
xchg
movb
mov
jo
or
xor
pop
in
dec
adc
add
test
or
mov
push
pop
in
call
aam
fildll
lret
fwait
jmp
jmp
mov
insl
repnz
stos
insl
mov
ljmp
cli
sti
mov
and
mov
out
sbb
xor
and
rcrb
push
inc
adc
das
dec
mov
inc
mov
mov
mov
mov
imul
outsb
imul
loop
mov
aad
mov
xlat
lods
aad
mov
fs
imul
ja
cmp
das
in
movb
mov
sub
in
xor
adc
add
push
sbb
pop
loopne
rcrl
ds
jle
cmp
int
add
add
ror
add
popa
icebp
outsl
sub
xor
xor
and
stc
mull
push
or
push
ljmp
mov
mov
push
adc
mov
scas
mov
mov
and
and
in
sahf
cmp
sbb
xor
stos
xor
lret
sarl
dec
mov
or
lret
pushl
test
out
ss
repnz
sti
faddl
or
xchg
mov
repz
lock
push
jg
push
jmp
outsl
lock
mov
lods
xor
sub
push
push
jbe
ds
imul
pop
les
dec
jmp
dec
stos
jp
out
jecxz
scas
add
insb
popf
mov
or
jbe
shrl
add
inc
adc
ds
int3
push
into
inc
in
fistpl
mov
dec
bound
rcr
ret
jnp
xchg
aam
jg
in
mov
add
sti
ret
neg
iret
and
inc
vsubsd
in
and
das
orl
mov
cltd
ljmp
test
sti
mov
aad
inc
in
mov
in
pushf
sbb
mov
pop
testl
adc
jge
push
icebp
sub
jle
or
das
test
ffreep
dec
lea
sub
push
cmp
popl
adc
test
push
cmp
dec
into
push
pop
adc
cmp
inc
ja
stos
adc
daa
push
stos
mov
xchg
or
in
cltd
cmp
adc
jge
or
hlt
lea
out
jbe
xchg
aad
mov
fdivs
mov
dec
or
ret
add
pop
in
arpl
loopne,pt
jnp
dec
lret
cmp
adc
mov
jmp
nop
dec
push
cmp
hlt
sbb
data16
sbb
lret
jae
sti
insb
xorl
jmp
test
adc
mov
mov
or
lods
negl
mov
xor
aaa
ljmp
scas
inc
or
faddl
or
sbb
mov
hlt
mov
data16
or
sub
rcl
fwait
xchg
outsb
push
pop
add
scas
test
pop
mov
push
xchg
loopne
mov
ss
mov
push
jnp
mov
jg
sar
inc
xlat
in
loopne
sbb
lock
add
imul
mov
not
jnp
lret
xchg
pushf
iret
jle
sub
push
cltd
jnp
outsl
lea
inc
in
lahf
cwtl
ljmp
jnp
cmc
xlat
lods
mov
addb
bound
mov
add
jmp
sub
std
or
mov
dec
xor
lock
or
mov
fsubrl
pop
cmp
sbb
fs
sbb
sbb
jbe
fsts
sahf
mov
into
jo
lods
mov
jb
jns
xor
adc
mov
ret
mov
icebp
loope
sbb
loop
or
cmp
repz
mov
mov
icebp
add
in
in
push
fldenv
imul
dec
xchg
ja
fs
inc
arpl
pop
push
sub
dec
jecxz
xor
pop
fwait
xchg
cwtl
cmp
mov
mov
sbb
sub
insl
loop
mov
and
jg
lcall
test
rclb
fdivs
mov
stos
imul
das
pop
or
pop
movsl
daa
xchg
jo
cltd
repz
add
mov
stos
push
dec
and
inc
push
push
pop
xchg
nop
bnd
xchg
sahf
mov
shlb
sbbl
xlat
das
pop
daa
flds
push
ds
cld
mov
push
mov
mov
push
inc
xor
add
cmp
dec
hlt
push
scas
or
into
push
adc
xchg
cld
mov
sbb
sbb
fbld
into
push
cmc
add
ja
roll
and
mov
jno
loopne
jne
fsubrs
clc
inc
into
and
sub
test
ffree
test
shrb
mov
js
jno
inc
test
push
movsl
lds
shll
shl
pushf
jo
or
inc
add
xchg
adc
cwtl
mov
and
mov
scas
push
cmp
les
hlt
xor
outsb
fldl
mov
out
push
aad
scas
nop
sub
or
jae
dec
and
lds
cmp
inc
sbb
dec
fcomps
movsb
cmpsl
sub
int3
ret
xor
mov
sub
xorb
mov
xchg
call
push
sti
repnz
mov
popf
sbb
xor
jmp
andb
push
cld
lahf
fiaddl
pop
sahf
fisttpl
jbe
inc
insl
mov
sbb
xchg
xchg
out
mov
add
test
xor
mov
test
jle
inc
insb
sub
sub
les
mov
jae
repz
in
xor
push
pop
dec
cltd
sub
xchg
add
jl
dec
mov
repz
xchg
fldcw
dec
jmp
push
dec
sub
outsb
push
into
mov
cmp
inc
pop
sub
call
sub
xchg
inc
push
sub
fcomps
sti
xchg
lea
mulb
faddl
cmp
nop
fnstcw
fcmovnu
insl
push
dec
rorl
or
push
xchg
popa
jmp
lcall
xchg
push
fadds
pop
mov
cld
or
fnstcw
inc
dec
dec
js
sbb
bound
xor
mov
and
xchg
ret
ret
jecxz
sti
lcall
in
out
jl
insl
arpl
pop
cmp
repz
xchg
mov
add
and
adc
sub
jl
mov
mov
cmc
add
fistpl
popa
cmc
in
call
sbb
popf
mov
cld
lret
xchg
xchg
or
pop
xor
movsl
movsb
dec
adc
xor
cld
fistl
cs
jbe
lods
and
and
and
mov
ds
rorb
out
pop
stos
xor
lret
pop
or
imul
add
jno
and
jne
xor
int3
movsb
into
dec
les
xchg
out
pop
mov
into
push
add
jb
lret
pop
ret
push
ficomps
aas
in
mov
jg
out
outsb
cmp
push
out
divl
rcrb
sbb
push
adcb
and
shll
pop
push
push
jg
push
fstpt
iret
rclb
mov
push
xor
mov
push
sti
repnz
insl
bound
or
popa
pop
cli
repz
dec
fnstsw
xchg
dec
mov
es
shrb
and
daa
aaa
sub
cmp
cld
das
adcb
cmp
sub
inc
xchg
or
lods
mov
ss
push
xor
jbe
cmp
push
sub
scas
scas
inc
dec
adc
aam
mov
in
adc
stc
ficompl
cld
testl
sub
decb
sub
loope
sub
inc
xlat
jbe
push
dec
sarb
sahf
mov
lods
mov
mov
mov
cmc
adc
imul
test
xor
aaa
decl
adc
sti
addr16
xorl
jecxz
inc
mov
mov
push
pop
enter
push
or
lea
mov
mov
aaa
mov
test
stos
outsl
sbb
cmp
popl
daa
xchg
xor
xor
jne
mov
fwait
and
jnp
jmp
jl
rcl
adc
rclb
decl
inc
cwtl
xor
ds
inc
lods
jb
sub
test
adc
dec
pop
jno
in
repz
mov
call
xlat
xorl
and
push
sbb
mov
insl
lret
mov
rorb
mov
xchg
sbb
mov
xor
inc
sbb
bound
cltd
neg
push
fisttpll
icebp
dec
frstor
or
add
imul
imul
cmp
sahf
cmpsl
push
xchg
jb
mov
rorb
test
push
cmp
or
outsb
rol
in
testb
mov
inc
into
sbb
hlt
test
ja
mov
loop
hlt
lds
stos
in
fwait
sub
rcll
fldenv
icebp
push
repnz
addr16
mov
lret
jecxz
jns
daa
inc
scas
add
aaa
scas
sub
xchg
add
jns
fildll
cmp
xchg
xor
mov
subl
jne
inc
mov
test
pop
cmp
orb
dec
push
cmpsl
cmp
dec
add
lods
lahf
cmp
jmp
subl
and
pop
cmp
lret
je
lret
rolb
and
call
mov
ja
test
in
sbb
cmp
hlt
jne
push
jle
call
mov
xchg
pop
lret
je
pop
and
subl
mov
and
xchg
insb
test
jb
hlt
neg
xchg
or
pop
das
adc
mov
jmp
loopne
in
rorb
mov
adc
aam
rcr
sbb
rcrl
push
test
ret
cmpsb
sbb
test
ja
adc
mov
sbb
repnz
cwtl
into
sahf
sbb
push
iret
xchg
int
pop
jae
inc
xchg
or
loop
insl
movl
repz
repz
stos
movsl
cli
clc
push
and
sahf
xchg
pop
xor
inc
push
mov
idivb
adc
imulb
xor
std
jp
mov
mov
fbld
xor
das
je
sti
push
sub
xchg
int3
jecxz
adc
shrl
loope
int3
int
daa
jb
push
add
xlat
pusha
fwait
arpl
mov
xor
mov
inc
push
lret
lods
or
mov
xor
inc
xchg
xlat
mov
mov
ds
jno
xor
push
mov
xchg
scas
and
xor
xchg
jp
or
pop
clc
lods
jnp
xlat
mov
and
xchg
dec
lock
push
cld
push
ficompl
stc
xchg
add
sarb
mov
out
enter
adc
pusha
push
xlat
mov
dec
insl
mov
mov
push
mov
jp
test
xor
and
mov
les
rep
je
mov
std
hlt
dec
in
and
cmp
in
fwait
sub
mov
popa
xchg
adc
xchg
jmp
out
cs
push
bound
sub
dec
push
sti
jp
inc
shlb
and
ret
mov
pop
mov
mov
mov
pusha
mov
pop
inc
inc
or
xor
mov
fstpt
stos
loope
add
mov
mov
fsubrs
icebp
sahf
xchg
inc
mov
mov
int3
mov
idivl
pop
adc
sbb
sti
jge
xchg
cld
dec
lcall
mov
jp
jecxz
clc
cmpsl
aad
mov
sbb
ret
add
cs
fidivrs
aam
and
pop
aad
xchg
imul
hlt
inc
lahf
clc
push
rolb
std
fwait
and
add
and
hlt
test
push
or
push
or
insl
inc
lods
jmp
adc
popf
xchg
dec
dec
adc
inc
sti
inc
cmp
jecxz
shll
mov
fiaddl
dec
rcr
sub
jmp
push
stos
dec
mov
mov
jb
mov
jnp
adc
lcall
push
inc
mov
dec
les
test
shll
movsb
push
or
lock
jp
idiv
and
call
adc
mov
jno
stos
pop
scas
jnp
cmpsb
mov
adc
adc
sub
imul
clc
or
rclb
jns
test
stos
push
add
jg
mov
push
jle,pt
in
and
sarb
mov
lds
cmp
adc
fisttpl
pushl
int3
jecxz
fsts
dec
subb
aaa
iret
pop
xor
pop
inc
stc
scas
test
or
jb
inc
enter
test
sub
sbb
xchg
adc
popa
inc
pop
jle
aaa
sti
psubsw
scas
and
adc
pushf
xchg
add
iret
xlat
cmp
aad
dec
call
loope
sarl
ja
stc
hlt
xor
je
and
in
jp
cmpsb
cli
pop
mov
test
xchg
adc
fs
adc
jecxz
and
out
out
rorl
call
rcrb
outsl
rcl
sub
lds
mov
jmp
stos
jle
xor
lds
add
cmpsb
sbb
mov
insb
pop
jne,pn
mov
and
adc
es
out
arpl
pusha
cld
dec
popf
push
lds
fdiv
addr16
xchg
fmull
shrb
inc
insl
test
scas
pop
xchg
jecxz
cmp
push
push
xchg
popa
in
sbbb
xchg
iret
lods
sbb
push
jbe
mov
jl
xor
std
fimuls
jmp
bound
imul
cmp
inc
xchg
cld
movsbl
adc
repnz
cwtl
pop
jle
mov
add
addr16
sbb
xor
mov
add
pushf
mov
jbe
sbb
ret
mov
ret
gs
out
fdivr
cmp
jno
xchg
add
jecxz
loop
xchg
mov
mov
ja
mov
imul
int
pop
xor
lret
fwait
mov
stos
inc
popa
push
jb
sarb
inc
xor
mov
and
xor
int
aas
push
rolb
loope
cli
ja
sub
jbe
call
call
inc
icebp
sub
dec
pushf
inc
in
outsl
icebp
adc
push
stos
mov
mov
xor
mov
movsl
aaa
imul
xchg
pop
xor
mov
xchg
js
repz
xchg
xchg
into
and
sub
sub
out
sbb
push
clc
arpl
or
jg
adc
in
or
sub
cmp
subb
js
add
popl
inc
insb
add
mov
push
scas
xchg
lret
jle
or
mov
loope
sti
nop
xor
mul
sbb
in
movsb
add
loop
push
outsl
dec
cwtl
popa
xchg
jecxz
mov
bound
outsl
pop
sbb
ljmp
jne
inc
and
stos
lret
mov
rcl
daa
in
inc
or
push
fsub
xor
lret
cmp
add
push
mov
sti
xchg
cmp
inc
fildll
fimuls
mov
enter
inc
loope
inc
and
cmp
or
lock
or
dec
mov
cmp
pop
ret
jl
imul
rclb
add
sub
or
mov
test
xchg
hlt
mov
adc
jg
sbb
fistps
jb
xchg
les
lea
pop
xchg
jbe
adc
out
js
mov
rolb
pop
jne
adc
mov
mov
sbb
or
jbe
push
and
and
arpl
xor
sub
rolb
lods
or
aad
dec
and
lock
mov
out
lea
add
andps
fnstenv
and
dec
pop
bound
fisttpl
leave
push
in
or
mov
push
and
push
call
iret
mov
cmp
jne
push
pop
mov
lods
repnz
xchg
sub
imul
mov
mov
jle
add
bnd
mov
cltd
movsl
mov
and
xchg
ljmp
sub
inc
and
push
lcall
dec
icebp
inc
stos
push
lret
repnz
jne
push
sbb
aam
dec
adc
mov
push
adc
adc
inc
jo
inc
repz
iret
ja
add
jns
push
rcr
daa
add
jbe
ss
fisubrl
dec
insb
sub
xor
mov
mov
and
cs
test
int
pop
out
enter
mov
iret
fcmovnbe
jmp
and
outsb
and
negl
aam
js
adc
xor
popf
sbbl
sbb
movsl
test
inc
jb
lret
ljmp
outsl
enter
mov
mov
adcl
pushf
lcall
dec
loopne
out
cwtl
xchg
in
in
and
push
stos
sbb
fwait
xchg
xor
cmpsb
jnp
add
in
xor
jl
pop
mov
cmpsl
rol
out
add
push
xchg
std
out
aas
jl
out
jo
and
jno
mov
fs
xor
enter
lods
jmp
pop
pop
jns
pmulhuw
insb
shrl
ret
jg
xchg
xor
aad
mov
sbb
push
sbb
aas
cwtl
imul
and
adc
daa
sub
add
int
cmpsl
dec
inc
push
cmpsl
shlb
arpl
sbb
xlat
stos
dec
insl
xlat
and
push
cmp
fldt
jecxz
rol
xor
mov
idiv
enter
das
adc
xchg
fistpl
mov
cmc
and
cmp
xchg
sub
icebp
lret
loopne
out
sbb
pushf
sbb
mov
adc
dec
adc
xlat
out
or
jle
xor
inc
xchg
dec
aas
xlat
dec
pop
jnp
mov
dec
popa
mov
push
lea
std
xor
xor
ficoml
cli
testb
pop
xor
jge
adc
clc
shlb
js
push
inc
cmp
inc
fstpl
push
in
jp
jnp
popf
inc
mov
xchg
mov
mov
ret
bound
pushf
add
xchg
adc
mov
mov
mov
in
lods
cltd
repnz
ljmp
jne
or
xchg
mov
push
inc
mov
imul
inc
icebp
cld
lds
mov
dec
aam
je
cs
cmc
dec
mov
mov
out
scas
xor
rolb
fldcw
push
adc
aas
inc
jg
repnz
and
ja
mov
xchg
push
cltd
cmp
inc
ja
push
inc
inc
scas
fsubs
push
push
xor
pop
leave
pop
pop
scas
or
int
cmp
jg
push
in
add
cltd
cltd
push
sbb
inc
movsb
jns
jecxz
pop
js
popf
jecxz
lea
orl
inc
xchg
out
pop
push
fstp
imul
xor
int3
jae
mov
fnstsw
xor
cmp
jmp
push
cs
or
ljmp
out
and
lahf
push
cmp
xchg
int3
add
and
sbb
loop
sbb
pop
sub
dec
jle
dec
imul
xor
cvtps2pi
or
inc
sbb
mov
movsl
out
sbb
inc
cwtl
or
mov
movl
aas
cmp
mov
aaa
mov
push
out
mov
es
pop
ficoms
mov
sub
and
or
mov
mov
jae
repnz
xchg
imul
xchg
inc
test
rcrb
lahf
jo
jae
stos
dec
xor
mov
xchg
jmp
cmova
outsb
dec
jno
out
cmpsb
out
cmc
popf
adc
mov
lret
fs
pushf
push
mov
mov
or
pop
shrl
and
and
mov
data16
in
sbb
sti
icebp
ss
mov
loop
repnz
ljmp
pusha
addr16
jl
loop
cmpsb
pop
cmp
std
jno
lcall
push
pusha
orb
xor
cmp
and
sub
push
aaa
pop
bound
dec
sbb
subl
or
cmpsb
sbb
sbb
jnp
dec
jbe
inc
mov
push
push
push
dec
aad
push
lea
aas
push
add
js
inc
add
les
or
outsb
gs
imul
mov
fs
and
mov
scas
sub
lods
sub
loopne
mov
cmp
adc
or
mov
inc
xchg
fisttpl
sbb
jo
push
push
mov
mov
aam
mov
mov
mov
ds
push
sbb
push
inc
inc
nop
std
or
xchg
mov
xor
xor
adc
dec
mul
mov
stc
push
movsl
jne
add
adc
xchg
adc
inc
scas
cmp
jns
and
inc
sti
mov
popa
sub
adc
in
xchg
or
mov
pushf
movsl
fcompl
push
add
pop
fwait
cmp
das
subb
dec
out
pop
adc
lret
ljmp
test
in
sbb
stc
push
sti
cmp
mov
clc
mov
jecxz
clc
loope
popf
fstpl
outsl
in
scas
mov
add
add
sbb
js
adcl
in
pusha
push
test
scas
lods
cmovbe
call
cmp
mov
mov
inc
jp
inc
mov
sbb
xchg
mov
push
cltd
repnz
xchg
lods
cmpsb
pusha
mov
inc
mov
adcb
add
ret
shrb
aam
lahf
pop
or
ret
and
loope
hlt
fbld
add
jl
jbe
push
add
inc
leave
icebp
dec
mov
xchg
ret
sbb
xor
sti
gs
lret
pop
inc
ljmp
lret
cmp
mov
xor
in
movsl
mov
mov
imul
movsb
add
shlb
imul
and
call
sub
fnstcw
in
push
int3
aaa
push
fcoms
cmp
sarl
sbb
inc
out
add
inc
aaa
dec
imul
scas
add
int3
push
lret
sbb
adc
mov
in
sub
mov
fmul
mov
xor
dec
dec
xor
xor
popa
int
dec
fiaddl
test
stc
iret
push
cmp
fwait
xorl
jbe,pn
int3
jecxz
add
rorl
mov
add
loope
ss
mov
popf
jmp
aad
std
aad
fs
adc
data16
outsb
out
add
add
xor
mov
daa
hlt
and
dec
xchg
jne
sbb
add
call
clc
push
rclb
sar
or
or
test
mov
mov
outsl
push
test
hlt
jbe
cli
xchg
push
adc
aad
out
ret
inc
or
mov
inc
fsts
mov
movl
or
jns
aas
or
mov
sub
aad
pop
push
and
movsl
int3
pop
jae
xor
sbb
lods
xor
mov
add
adc
mov
and
ja
iret
mov
cmp
push
sub
mov
jl
insl
xor
cmp
filds
cmc
or
nop
push
movsl
dec
xchg
bound
mov
or
int
pop
cmp
movsb
mov
leave
cmp
dec
fsub
adc
cmp
fs
pop
inc
xor
jl
sub
lods
jmp
sbb
sbb
shl
inc
push
or
jo
inc
pushf
subl
add
mov
ja
cmp
mov
xchg
dec
dec
mov
xor
jns
test
pop
pop
adc
mov
stos
pop
insl
mov
mov
aad
sbb
addr16
cltd
aad
sbb
mov
mov
xchg
sub
mov
in
and
cs
jmp
cli
sarb
sub
xor
in
xchg
filds
ja
adc
sbb
mov
test
shrb
xor
aad
add
cltd
pop
test
popf
cmp
cmp
sub
push
add
push
loope
add
lcall
push
mov
or
cmp
subb
in
xor
out
push
sbb
inc
adc
hlt
push
lds
mov
sub
outsb
ss
mov
cmpsl
push
mov
mov
notl
cmpl
pop
pop
mov
fsubp
jnp
repz
mov
xchg
xchg
xlat
mov
arpl
mov
fnsave
mov
imul
cmpsl
cmpsl
lcall
sub
outsl
out
cmp
mov
xchg
mov
repz
jle
fldenv
enter
xchg
es
call
lods
fbstp
cmpb
imul
add
int3
outsl
mov
xchg
mov
cs
lea
xor
lods
sub
ret
stos
and
sbb
or
mov
das
pop
movsl
in
xchg
jmp
sub
ja
cli
ss
cmp
scas
mov
repz
test
insb
sub
std
inc
insl
mov
lcall
cmpsl
divps
pop
add
and
and
push
sub
shlb
add
pop
push
jmp
push
or
jmp
in
test
scas
xor
mov
insl
push
dec
xchg
mov
je
inc
mov
ja
mov
data16
push
loop
fldt
subb
push
lds
test
pop
push
mov
orl
repz
dec
test
aad
mov
imul
push
jle
pop
jo
add
add
and
stos
xor
pop
sub
ret
cli
adc
repnz
sub
adc
insl
popa
xchg
push
pop
dec
loope
pop
sbb
adc
int
imul
mov
jno
aas
adc
pop
outsl
outsl
mov
push
and
cmp
divb
jg
mov
testl
sbb
sahf
mov
push
mov
lods
xchg
lea
arpl
push
xlat
pusha
push
add
mov
js
sub
pop
js
push
xor
in
fs
adc
mov
inc
jge
lea
dec
insb
dec
js
jl
into
out
out
lods
sahf
clc
lahf
stos
orl
jecxz
int3
adc
stc
fisttps
push
jo
loop
push
push
leave
or
and
aaa
mov
or
mov
jae
dec
in
aaa
or
test
imul
fnclex
pushf
push
sub
das
outsl
sbb
xor
test
nop
sbb
dec
pusha
popf
or
iret
inc
xchg
je
je
push
mov
cmp
push
repz
outsb
jg
test
pop
das
push
or
in
push
mov
das
push
cmp
fst
cmpsb
rcrb
pop
in
adc
add
sarl
out
incb
lea
mov
es
ss
pop
or
fidivl
repz
add
loope
outsl
and
cwtl
xadd
mov
dec
leave
pop
lret
xlat
mov
aaa
inc
jmp
mov
and
xchg
push
xor
jecxz
jno
pop
test
cmp
imul
jo
xchg
gs
ret
mov
or
nop
out
movsl
push
clc
dec
imul
and
out
jo
ljmp
aaa
es
or
call
mov
mov
test
jle
cmpsl
push
sahf
mov
inc
xchg
mov
sub
sbb
les
push
inc
jbe
push
jmp
rclb
mov
movq
adc
or
repz
sub
xchg
inc
sahf
and
stos
pop
sahf
push
jno
cmp
xor
adc
adc
ja
lods
popf
inc
xchg
inc
add
lea
pop
and
in
mov
add
or
mov
loopne
add
or
mov
in
sbb
inc
ss
fcoms
dec
mov
shlb
mov
xchg
pop
and
mov
mov
mov
loop
push
cmp
pop
adc
xchg
xlat
mov
mov
pusha
sub
icebp
sbb
inc
xor
push
pop
dec
inc
shrb
push
lahf
pop
lock
es
mov
and
repz
repz
rorb
out
test
mov
xchg
out
ss
xchg
inc
push
lcall
xor
mov
sbb
pop
clc
lods
repz
ljmp
mov
dec
aam
jl
mov
lcall
xchg
test
push
or
arpl
sti
add
push
hlt
push
mov
stc
cwtl
cmp
dec
into
jbe
sbb
or
shlb
pushf
dec
adc
pop
popf
pop
pusha
jbe
add
adc
stos
mov
add
cmpsb
je
jmp
sub
notb
mov
push
xor
insl
loope
data16
xlat
jmp
cwtl
push
jae
inc
aad
xchg
or
add
lea
nop
adc
dec
rorb
mov
sbb
aaa
mov
xor
cmp
adc
les
mul
rol
and
sbb
lock
ror
pop
add
push
adc
nop
call
add
insb
or
stc
mov
and
rorb
push
and
movsl
mov
popa
fcoml
pushf
cmpsl
xor
cmc
loop
mov
push
push
fcomps
push
fcmove
pop
push
repnz
lds
dec
enter
push
fwait
jl
daa
int3
push
pop
lcall
add
test
stos
cmp
xchg
and
adc
into
aas
clc
mov
push
loope
pop
arpl
mov
xlat
sub
stos
dec
push
in
mov
push
xchg
push
or
lret
and
cwtl
mov
in
in
and
sahf
loop
sbb
jnp
int3
int3
lcall
mov
pop
ljmp
push
clc
in
insb
xor
adc
rcl
jo
shll
jle
bnd
ror
insl
or
mov
adc
adc
dec
out
jmp
iret
gs
dec
cs
int3
mov
push
mov
or
call
insb
subl
sbb
lret
andl
test
ror
and
aam
iret
xchg
movsb
ljmp
jecxz
lods
mov
clc
mov
mov
push
cmpsl
call
shlb
repz
or
and
pushf
inc
mov
mov
mov
daa
pop
gs
pop
inc
in
jecxz
jnp
icebp
mov
rorb
adc
sbb
push
mov
out
decb
mov
cmp
mov
jl
lret
mov
add
jmp
push
fcmovu
les
cmp
mov
pop
push
into
xchg
mov
testb
cmp
data16
or
jge
ror
ret
lret
daa
adc
pop
stos
push
ja
cli
ds
call
mov
pop
mov
mov
bound
or
pop
ds
sbb
mov
cmp
test
and
movsb
cmpl
push
pop
data16
sub
imul
lcall
add
mov
push
jmp
mov
fcmovbe
test
sub
cmp
repz
scas
sbb
movsb
jne
and
daa
xor
pop
push
mov
push
mov
mov
test
aam
ret
clc
enter
fcomip
pop
lahf
jo
es
sub
xchg
dec
pop
mov
push
sbb
jl
mov
cmp
cmp
lahf
fs
les
sysexit
les
mov
nop
xchg
push
add
ss
mov
mov
sub
add
pop
icebp
outsb
xchg
cmp
push
mov
out
fsub
xor
xor
xor
addr16
push
pusha
or
rorb
bnd
and
lea
xorl
out
add
xchg
pop
mov
mov
pop
push
inc
cmp
ss
adc
ret
stos
dec
pusha
in
aam
pushf
sbb
arpl
out
jg,pt
movsb
xchg
stos
das
in
cmp
arpl
adc
mov
das
lret
lods
scas
mov
sub
xchg
movsb
pop
addr16
inc
repz
lret
mov
rorl
shll
pop
sbb
jno
mov
sub
push
cmp
fsubrs
ficompl
xor
dec
dec
adc
push
pop
mov
sbbl
or
cmp
loop
jg
popf
mov
push
rorl
shl
lea
xchg
ja
addr16
push
or
cmpl
fsubs
hlt
xchg
mov
cli
ret
jecxz
lret
pop
xlat
in
stos
imul
and
xor
cmp
dec
xchg
mov
call
xor
iret
aam
inc
and
mov
ds
stc
mov
andb
idiv
out
sub
or
je
adc
cltd
outsl
push
mov
iret
pop
adc
fdivp
loop
xchg
nop
fisubrs
pusha
ror
repz
fnsave
xchg
subl
pop
sbb
jb
cli
cmp
leave
movsl
or
imul
cmpsl
das
pop
call
lahf
je
stos
pusha
mov
mov
mov
ss
xchg
pop
loope
pop
xor
nop
es
insl
ficoml
mov
js
rcrl
movsb
mov
sahf
xchg
call
mov
lcall
pop
daa
out
dec
mov
insb
ret
pushf
add
mov
or
inc
popa
add
call
jg
arpl
and
out
xchg
add
jmp
fimuls
inc
mov
xor
lret
iret
or
insl
push
enter
cmpl
jmp
push
add
jne
mov
pop
aas
sbb
mov
dec
mov
jge
xchg
mov
sub
fbstp
out
jl
inc
pop
leave
add
mov
xchg
shrl
fs
popf
ja
cmp
fists
insb
sub
in
mov
mov
fidivrl
addr16
or
mov
xchg
pop
xchg
pushf
jae
pop
stos
cmpb
pop
fs
push
mov
adc
or
ret
repnz
push
mov
xlat
stos
xchg
bnd
call
dec
faddl
dec
jmp
in
xor
cmpb
ret
jbe
jmp
adc
iret
cmp
fs
es
xchg
jmp
out
mov
outsl
test
mov
addr16
cmc
in
test
je
cmp
outsl
shll
pusha
lcall
mov
call
push
xor
out
cmpsl
popa
sbb
dec
pop
icebp
mov
xchg
sti
repnz
aas
or
in
gs
cmp
push
fsubrp
cltd
xlat
push
xchg
popa
lret
mov
push
pop
xor
subl
movsb
mov
sarb
jg
sub
stos
pop
fldl
jne
or
roll
data16
fwait
push
inc
scas
fsubl
xor
or
mov
lret
addr16
ret
sub
adc
movsl
push
dec
dec
adc
ds
sub
xchg
adc
popf
add
pop
scas
cmp
std
popf
mov
cs
pop
xbegin
daa
mov
xchg
cmp
das
aad
andb
dec
sbb
xchg
jbe
jp
pop
adc
xchg
shll
repnz
cmp
sbb
mov
push
bound
xchg
xchg
sub
jbe
loopne
pop
scas
es
cwtl
push
sbb
xchg
je
nop
fcompp
jl
iret
pushf
pop
scas
lea
out
pop
push
icebp
aad
mov
pusha
pop
shr
pop
inc
ret
pop
pusha
ja
sub
pop
or
rcrl
lods
sub
test
add
pop
fistl
notl
scas
aaa
ds
out
pop
pop
fmull
inc
or
outsb
or
dec
and
out
std
in
stc
das
aad
mov
das
or
xchg
loopne
fwait
in
inc
xor
dec
fcmove
jb
or
ds
aam
ljmp
mov
push
aas
push
pop
mov
mov
mov
popa
lcall
test
sub
add
xchg
xchg
mov
imul
push
add
jg
cmp
add
push
pop
pop
push
push
fcmovu
in
xor
repz
and
push
dec
mov
cmpsl
xchg
cmc
sub
xor
add
cmp
add
push
push
int3
aaa
outsb
ss
dec
sbb
fisttpll
subl
add
lds
push
jnp
in
and
popa
sub
in
int
test
pop
mov
xchg
pop
add
idivb
loopne
rcrl
jmp
sahf
mov
sbb
iret
aad
dec
inc
cmpsl
push
hlt
xchg
pusha
or
xchg
hlt
aaa
pop
and
inc
add
call
jno
cmp
push
xchg
lods
or
addr16
fstpl
sbb
mov
cmp
cmpsb
pop
daa
pop
ds
in
jo
shl
pop
xchg
push
xor
jge
cmc
xchg
add
aaa
mov
mov
in
sahf
divl
mov
xchg
pop
or
fisttpl
not
jmp
cmp
sti
jle
lret
outsl
and
jle
arpl
sub
les
dec
xchg
add
je
xchg
aam
lock
mov
inc
add
push
fstpt
in
stc
push
cmc
dec
or
cld
xlat
pop
jle
or
sar
jns
xor
mov
cltd
jb
jne
sub
push
pusha
cmp
movsl
mov
insb
outsl
pushf
dec
push
and
xor
stc
xchg
or
dec
add
sahf
ja
fimuls
add
push
es
testb
clc
mov
sub
ljmp
ss
popa
and
addr16
mov
xchg
push
sbb
xor
cmp
xor
and
rcrl
insb
xor
mov
test
inc
int
pop
jbe
popf
icebp
sub
addb
mov
adcb
arpl
adc
je
xor
jne
subl
jp
stos
mov
adc
lea
enter
movsb
arpl
call
rolb
jle
pop
inc
xor
int3
ficoml
push
shl
repnz
ds
pushf
idiv
ljmp
fwait
in
fists
sub
pop
fwait
xchg
xor
jmp
and
add
push
lods
fbstp
jno
outsl
add
inc
xchg
inc
data16
xor
adc
hlt
je
xchg
mov
cli
pop
inc
mov
xor
test
repnz
or
pop
mov
ficomps
into
lcall
push
aam
mov
mov
test
sub
add
push
test
cmpsb
xchg
push
inc
add
popa
cmc
in
push
mov
scas
mov
pop
lock
push
sbb
mov
pusha
cmpsb
push
pop
movsb
sbb
sbb
cmpsl
bound
xchg
jge
shll
dec
xor
push
mov
mov
sub
loopne
inc
int
pop
pop
jbe
inc
jns
pusha
jmp
inc
mov
int3
andb
frstor
push
pop
or
loopne
fsubp
stos
or
loope
jbe
nop
push
pop
rol
xchg
aaa
push
imul
push
xchg
in
xchg
imul
sub
mov
xchg
xlat
or
sbb
sub
lcall
divl
std
fstpt
pop
movb
aaa
mov
cwtl
fs
ret
mov
inc
xchg
xorb
inc
out
or
or
addr16
icebp
pop
fucomip
std
lock
xchg
xchg
mov
ret
inc
aad
mov
mov
lret
mov
add
xchg
mov
xor
scas
in
push
jecxz
loop
loope
pop
xor
dec
mov
xchg
push
xchg
scas
pop
ret
xlat
repnz
movd
fisubrl
scas
call
stos
pop
xor
add
jg
xchg
sub
lods
enter
lret
inc
adc
inc
outsl
clc
lods
jbe
ret
cmp
fstpl
shl
pop
jl
sbb
fcmovnb
dec
fwait
mov
inc
pusha
adc
roll
cmp
mov
pusha
in
imul
jecxz
fstp
and
cli
dec
push
push
ss
aaa
imul
add
cltd
push
movsl
imul
jp
cwtl
ficoms
lods
mov
sbb
ss
jp
aas
js
sbb
inc
cmp
xor
int3
fisubrl
fsubs
cmp
xchg
cmp
sbbb
adc
dec
xchg
push
sub
in
repz
into
adc
sub
push
xchg
add
jg
sub
call
pushf
jnp
dec
insl
mov
inc
cwtl
lea
dec
std
push
mov
add
cltd
mov
push
dec
mov
or
lahf
aas
daa
rdpmc
mov
sti
mov
lods
xchg
ret
inc
jmp
sub
aad
sub
and
lods
jmp
bound
push
cmp
push
and
mov
sub
scas
imul
sbb
popf
test
mov
sahf
jle
xabort
sti
out
mov
das
enter
jnp
in
ljmp
mov
mov
sub
cmc
hlt
push
daa
mov
fistpll
mov
push
out
rol
rol
movsb
gs
sahf
icebp
or
sbb
dec
lods
inc
pop
std
and
jo
mov
pop
push
sub
rorb
ss
or
xor
enter
push
je
sbb
inc
mov
sbb
fisttpl
ljmp
fldt
bnd
fidivrs
jp
xor
mov
hlt
xor
fidivs
fdiv
pop
or
addr16
pop
push
imul
xchg
hlt
mov
enter
inc
test
lock
mov
jecxz
pop
stos
or
enter
aad
push
iret
add
mov
outsl
xlat
or
and
lea
enter
addl
repnz
adc
push
shrb
in
jno
es
adc
mov
cmpsl
outsb
popf
sub
iret
adc
into
idivb
and
inc
jge
ljmp
mov
or
lods
jge
int3
idiv
mov
or
pushf
mov
imul
adc
call
xor
int3
adc
mov
lds
push
adc
arpl
lock
inc
xchg
popf
cmc
movsb
xor
data16
sub
in
pushf
or
dec
sub
mov
test
lods
sub
push
and
gs
adcl
adc
mov
and
xchg
fs
sbb
in
sbb
sti
imul
cmp
clc
movsb
sbb
dec
test
or
sub
test
sub
std
in
pop
xchg
pminsw
and
orl
push
push
cmp
push
mov
add
push
fcmovu
jg
aam
cmp
int3
mov
je
loop
fs
imul
int
ret
insl
pop
scas
fs
add
sahf
stos
fisubrs
out
sub
dec
mov
sub
outsb
cli
dec
xor
or
adc
push
xchg
je
enter
sub
fxtract
lcall
call
add
popa
push
add
pop
push
and
cwtl
ret
mov
xchg
js
xor
paddusb
dec
lods
insl
cmc
scas
movsl
inc
outsb
push
mov
push
lcall
out
popl
adc
cmp
sbb
xlat
add
sub
aad
jle
inc
jo
xchg
movups
jecxz
and
jmp
mov
scas
push
sarl
cs
addr16
inc
pop
cmp
out
inc
cmp
push
fmull
shll
pop
pop
cltd
rorl
ss
push
fsub
or
inc
icebp
nop
and
dec
daa
xchg
je
xor
rcll
cwtl
mov
mov
shl
scas
enter
pushf
and
xchg
es
adc
in
popa
addr16
rcr
pop
jecxz
lcall
mov
into
dec
mov
mov
scas
add
push
or
lret
pop
pmullw
mov
fdivl
add
enter
sbb
leave
push
push
test
jp
jae
or
mov
mov
jae
dec
ljmp
repz
xchg
roll
scas
xor
movsl
add
mov
dec
icebp
jae
addr16
test
mov
fld
xor
sbb
pop
add
arpl
lahf
enter
inc
mov
jg
adc
sub
push
pop
inc
test
add
cwtl
add
xlat
sti
and
iret
xchg
xor
ljmp
jae
fdivs
fadd
repz
enter
sub
sub
and
movsb
push
testl
sbb
and
sub
add
out
sub
or
adc
cmp
mov
mov
adc
xor
mov
mov
push
pop
sub
add
adc
dec
fimuls
sbb
push
fs
sbb
inc
mov
or
iret
xlat
sub
xchg
sbb
outsl
das
inc
or
pcmpgtd
push
mov
out
xchg
fisttpll
xchg
hlt
je
and
xchg
arpl
sbb
add
and
rolb
jne
xchg
add
sbb
test
popa
add
mov
mov
cmp
pop
imul
sbbl
inc
lahf
xchg
out
xchg
mov
test
fiadds
sbb
cmc
push
out
sub
daa
pop
repz
fistl
sub
out
out
out
push
imul
jne
sbb
clc
ret
sbb
fiaddl
cmpb
or
inc
inc
fcompl
shll
nop
fld
lahf
movsb
sbb
sub
jg
adc
fbld
and
mov
cmp
inc
ds
cmp
cmc
int
xchg
sub
jecxz
andb
rorb
scas
push
sbb
andl
jg
inc
aad
cli
ljmp
pop
out
fs
jns
cmp
aas
xor
mov
xor
ds
pop
js
xor
out
ja
mov
shl
mov
pop
or
outsl
mov
mov
and
push
xchg
mov
push
ds
std
test
push
mov
leave
test
nop
loopne
popf
test
cmp
fcompl
mov
lods
sbb
negb
sub
mov
mov
dec
push
cmpsl
lea
mov
div
adc
sub
dec
add
cmpsb
or
mov
ficoms
pop
jo
mov
add
lahf
dec
test
in
add
das
jbe
popf
cwtl
adc
scas
inc
sbb
jmp
inc
jbe
js
shl
xor
into
call
std
push
outsb
sbb
add
push
mov
repnz
push
cmp
mov
sti
inc
out
jo
aas
lret
mov
cs
ljmp
insb
dec
dec
xor
adc
push
jmp
int3
xlat
notl
dec
addl
inc
inc
lea
mov
pop
pop
and
mov
cwtl
push
fadds
push
fistps
mov
xchg
das
sbb
sub
xchg
addr16
cmp
inc
fimull
mov
outsl
jl
in
add
fdivl
std
adc
xchg
ljmp
sub
cmp
mov
aas
push
mov
fucomi
cmp
xor
cli
in
cmp
std
imul
pop
adc
mov
mov
shr
bound
jo
aaa
fiaddl
les
fcoms
popf
in
rolb
test
push
pop
mov
sbb
cli
pop
loopne
mov
loop
dec
or
dec
sub
je
or
jns
bswap
xchg
pop
push
cmp
mov
pop
rorb
push
mov
addl
push
adc
test
jp
jl
mov
cld
or
int3
xor
sub
lret
xchg
mov
pop
stos
das
rorl
out
pop
andb
xor
jbe
xchg
or
ja
in
pop
lods
in
andb
sbb
lea
and
dec
in
insb
push
or
adc
sahf
mov
inc
aam
push
jnp
adc
cmpsl
pop
icebp
cmp
loopne
data16
pop
stos
mov
jecxz
subl
mov
cs
or
ret
pop
xor
hlt
cwtl
lds
or
inc
and
pushf
ja
lret
movntps
mov
mov
das
fnstcw
sub
addr16
add
jecxz
push
mov
data16
dec
repnz
inc
sub
cmp
fcmovnu
outsl
in
ds
addr16
stc
push
mov
std
dec
xor
mov
push
fdiv
data16
pop
insl
or
out
ret
ja
loopne
and
ret
cmc
or
or
fs
dec
int3
hlt
shrl
rorl
sub
jmp
pop
call
mov
inc
jmp
cmp
sub
stos
sbb
mov
sbb
sbb
jmp
jle
notb
movsl
fcoms
pop
push
out
pop
jno
shr
xchg
dec
cmp
sbbl
jecxz
test
stos
mov
jg
cs
out
dec
ss
xlat
mov
lods
cmp
addr16
out
cmp
mov
or
lods
pop
cvtps2pd
xor
cmp
aam
inc
sahf
add
mov
stc
sahf
divb
jno
inc
inc
pop
in
lahf
xor
mov
pop
jnp
loop
popa
mov
pop
sbb
ret
lea
push
add
or
cmc
cmp
mov
scas
xor
xor
xchg
add
jp
fs
iret
bound
in
pop
jnp
leave
cld
adc
jne
or
push
jl
lcall
loope
dec
cli
xchg
xor
scas
int3
mov
mov
jge
orb
sbb
push
out
mov
repz
in
fidivl
push
xchg
mov
push
mov
imulb
icebp
icebp
rol
push
add
inc
pusha
imul
adc
adc
or
das
ljmp
ret
negb
dec
std
push
loop
loope
sub
in
mov
in
hlt
push
xchg
jg
popf
adc
test
js
xlat
scas
add
pop
stos
cmpl
fcomps
js
cmc
xchg
jmp
adc
ret
add
rorb
stos
jmp
fcmovnbe
outsb
cs
subb
ja
xor
cmp
arpl
cs
adc
adc
shlb
push
mov
stos
sub
xchg
or
int
cwtl
inc
sahf
aam
mov
push
loope
jae
vmread
jb
out
push
ljmp
sub
xor
or
fstps
fnsave
mov
mov
out
push
jle
pop
sbb
push
inc
and
lea
jno
icebp
fdivrl
sbb
scas
xchg
pushf
iret
mov
cmp
jg
mov
push
aas
sub
sub
je
mov
xor
pop
int3
test
push
and
push
arpl
jae
inc
xchg
fdivs
add
out
cs
mov
incl
xor
inc
imul
jae
cld
addr16
jno
notl
xor
mov
adc
cmp
ret
neg
jmp
test
push
pop
adc
push
pop
sbb
add
pusha
stos
test
adc
repnz
adcb
cwtl
cmp
xchg
dec
mov
ss
jbe
jge
jbe
je
ja
mov
out
jnp
leave
pop
js
ror
push
out
push
sbb
fimull
adc
shrl
add
cli
cmpsl
lea
mov
imul
std
or
jmp
js
dec
int
dec
scas
shll
rcrl
loop
rorl
jns
stos
sub
mov
rclb
jge
les
fstl
sub
mov
xchg
sub
dec
fsts
xchg
popa
mov
push
idiv
push
loopne
popf
pop
into
mov
stos
jno
ficoms
pushl
and
push
push
pusha
dec
dec
add
jge
push
enter
movsl
xor
imul
dec
stc
inc
and
repz
std
jno
pop
mov
es
mov
test
xor
mov
pop
push
scas
pop
jnp
adc
arpl
xor
mov
leave
or
sub
sbb
call
adc
stos
cs
fmul
mov
shlb
jge
js
cs
lods
push
inc
fstpl
xlat
popf
mov
out
sti
xchg
xorl
add
mov
in
test
mov
inc
jge
imul
pushf
in
sti
in
add
cli
add
bound
inc
add
pushf
xor
inc
bound
aam
xchg
mov
cwtl
xor
shrl
lods
sbb
incb
dec
sbb
and
mov
xor
cmp
push
clc
jl
dec
xchg
aaa
sahf
das
adc
cmpb
lret
fnsave
pop
lahf
sbb
je
push
xor
lea
xlat
loop
mov
push
inc
mov
cmp
cli
in
dec
pop
insl
mov
push
adc
pusha
dec
mov
and
sub
pop
or
rcrb
jmp
data16
lods
lods
lods
mov
mov
dec
mov
mov
mov
push
lcall
add
rcrb
out
lcall
insb
rcrb
push
out
inc
ja
and
adc
or
clc
stos
sbb
or
divl
push
mov
xor
ds
push
sbb
xchg
jo
xor
dec
or
mov
mov
xchg
cmp
out
mov
int
add
pop
xchg
inc
jmp
popf
jecxz
scas
adc
mov
push
andb
in
jb
or
or
out
pop
imul
loope
mov
les
jns
lcall
insb
lds
cmpsl
ret
imul
fs
stc
push
xor
push
gs
in
divl
jns
dec
dec
sub
jno
mov
cs
mov
or
mov
jecxz
mov
daa
sarb
ja
mov
mov
stos
push
mul
ja
das
cmpsb
push
push
sbb
and
sbb
insb
and
adc
scas
mov
mov
rcll
inc
pop
xor
jb
scas
dec
xchg
dec
decl
push
pop
movsl
int
xchg
ja
adc
pop
test
ljmp
mulb
lcall
ss
insb
pop
ljmp
pop
inc
js
push
addr16
add
rclb
xchg
loopne
in
jbe
or
call
xchg
jo
and
mov
dec
fwait
test
loop
pop
inc
xchg
push
jg
xchg
cmp
and
pop
sbb
mov
scas
cmp
jo
xchg
shlb
int3
daa
lock
loope
fdivrs
lea
mov
sub
mov
movsb
fcmovne
add
lock
sub
xlat
arpl
push
or
jp
xchg
ds
jno
cmpsb
in
pop
out
test
xchg
sbb
js
jne
xorb
pop
and
popa
imul
dec
test
or
scas
insl
mov
cmc
jmp
sub
push
dec
adc
sahf
stc
fsubs
aaa
cs
pushf
les
jo
insb
mov
test
cld
add
pop
test
popa
sub
mov
add
loop
fisubrs
inc
cmp
cmp
cld
dec
jbe
mov
fmul
xchg
push
jg
scas
lcall
jne
jbe
out
insb
fildl
xchg
mov
jl
jno
fistpl
add
mov
adc
xchg
mov
mov
or
pop
dec
and
into
mov
aaa
cs
push
sub
std
es
lods
push
gs
test
movsb
xor
jnp
loope
roll
dec
xchg
sbb
mov
data16
lods
int3
mov
jns
loope
jbe
push
ret
pop
push
mov
cmp
andl
jae
pop
outsb
iret
imul
and
mov
xchg
cmp
mov
icebp
adc
clc
sbb
mov
arpl
sub
add
jne
or
imull
outsl
retw
movsl
xchg
mov
mov
dec
pop
mov
repz
sub
std
pop
movq
movsl
shrl
loopne
pop
push
aad
dec
pop
imul
into
jle
out
cmc
sub
outsl
add
in
mov
push
xchg
loop
jo
push
and
inc
pop
and
push
jne
adc
and
aaa
cmp
mov
sahf
repz
and
imul
fidivrl
push
inc
movl
push
pop
push
mov
es
lret
sub
lods
inc
leave
cwtl
unpckhps
bnd
repnz
push
jnp
push
jbe
enter
fstl
jl
mov
pop
push
mov
dec
cs
ret
pop
cmp
jp
icebp
mov
dec
add
scas
rcll
mov
lahf
mov
add
popf
add
xchg
pusha
insb
pusha
cmpb
sub
in
lea
cmp
movsl
push
out
xlat
xchg
xor
mov
pop
xor
inc
out
or
je
pop
sub
daa
sti
movsl
scas
les
out
fbstp
add
jl
movsl
pop
pop
mov
push
xchg
adc
and
push
shlb
rclb
in
stos
jnp
jecxz
sarb
xchg
dec
adc
pop
stc
xorb
fwait
lods
mov
jbe
sbb
inc
mov
stc
jb
ja
pop
int
aam
data16
jbe
iret
ljmp
fiaddl
inc
jnp
jno
insl
cmp
ficomps
inc
inc
frstor
lcall
cmp
rcrl
std
push
add
rcrb
lock
mov
and
aam
dec
mov
dec
lahf
rorb
push
loop
scas
or
fs
adc
es
cmp
ret
repz
push
mov
leave
xchg
push
icebp
pusha
test
outsl
mov
push
inc
sub
add
xor
fwait
add
sbb
and
mov
mov
rcl
jae
sub
xchg
movsl
fldcw
mov
jo
and
mov
sub
or
or
daa
lods
pop
inc
mov
and
and
inc
and
jp
inc
add
push
mov
cltd
inc
sbb
mov
push
sahf
pop
mulb
jb
in
cmp
cmp
rep
dec
call
jno
dec
stos
shr
lret
iret
mov
inc
std
add
ljmp
cmp
test
push
and
iret
hlt
lods
cmp
mov
push
popa
or
or
call
cmp
dec
sub
dec
ret
outsl
mov
xor
fistl
nop
daa
inc
or
std
sub
ss
mov
mov
fs
add
outsb
rclb
mov
in
hlt
sbb
int
xchg
dec
addr16
lret
jnp
pusha
daa
inc
movsb
loope
cmp
dec
jnp
push
sbb
sbb
pushw
aas
pop
add
inc
dec
push
jb
jnp
enter
fndisi(8087
push
mov
and
push
enter
jg
shll
jae
cwtl
cmp
jge
mov
int
movsb
xchg
xor
je
xchg
ret
stos
and
sti
nop
inc
push
imul
adc
inc
push
clc
imul
daa
push
cmp
mov
roll
addr16
fs
cmp
fimuls
out
mov
lret
aam
sbb
mov
les
stc
jecxz
popf
and
jne
sahf
imul
mov
sbb
imul
imulb
fisttpl
pusha
pop
in
lds
lahf
sub
aas
fmull
andb
ja
into
cld
and
icebp
xlat
pop
push
dec
sbb
jmp
popf
in
and
loop
push
jge
in
mov
jns
ja
mov
fsubs
jno
inc
inc
int
fwait
or
xchg
sbb
xorps
mov
lahf
and
add
fnsave
orl
or
mov
xor
mov
lret
add
xor
ror
mov
pop
add
aaa
lods
push
push
xchg
jl
scas
cli
cmp
loope
pop
dec
inc
xor
and
ja
pop
push
xchg
sahf
add
outsb
xor
cmp
shrb
cmc
dec
andb
mov
into
fiadds
cmp
fwait
adcb
mov
pop
ja
inc
in
leave
loopne
inc
arpl
cmp
aad
fisubrl
ss
insl
fldcw
sarl
cmpsl
pop
sbb
loop
dec
push
int3
stos
loope
test
sti
push
xchg
or
test
lds
cmc
pop
das
lods
test
andl
mov
aam
and
stc
dec
adc
add
or
les
jne
call
mov
sbb
pop
lods
shrb
or
push
pop
mov
stc
adc
mov
adc
pop
mov
aad
dec
cmp
addr16
adc
xchg
int
sub
into
add
fmuls
xorb
sti
stos
dec
sbbl
cmp
xchg
pop
call
test
adc
int
xchg
scas
mov
insb
scas
sahf
xchg
das
mov
jg
push
mov
sbb
jp
push
push
aad
xchg
cmp
push
cmp
js
loop
ja
mov
lds
push
pop
cmpb
test
ds
xchg
call
fcompl
in
sub
test
mov
mov
and
xchg
mov
test
in
imul
popa
mov
xchg
mov
gs
and
fstl
mov
lods
push
push
push
into
jp
loop
push
or
pop
push
push
adc
int
rcl
xchg
mov
adc
jl
mov
lcall
popf
inc
les
adc
loope
dec
mov
jg
jne
in
enter
sub
leave
enter
push
mov
lahf
stos
mov
push
adc
negb
pop
cli
add
mov
frstor
cmp
mov
dec
sahf
or
pcmpgtd
fldt
repnz
test
push
bound
ret
mov
leave
add
fldcw
popf
aas
repz
pop
and
and
enter
nop
mov
inc
nop
data16
xchg
cmp
pop
push
push
jb
jbe
mov
sbb
xor
or
xchg
xchg
loopne
shlb
ret
xchg
cmp
adc
mov
scas
rcrb
inc
movsl
adc
out
cmp
add
je
in
jnp
adc
sbb
xchg
push
roll
pop
xchg
xchg
fistpll
lods
jle
pusha
add
ss
and
or
adc
ds
dec
stos
jge
sarb
or
cmp
jo
cmc
push
and
imul
outsb
popf
cli
loope
push
scas
and
out
xchg
xchg
stos
ret
mov
mov
or
lds
aad
scas
fldl
pop
inc
rclb
enter
cmp
xchg
push
pop
insl
fsubl
cmp
mov
hlt
fcmovnbe
push
cmpsb
test
js
or
adc
faddp
sbb
insb
mov
or
outsb
jno
inc
mov
movsb
add
inc
jns
cmp
fisubl
pop
in
in
mov
iret
jmp
jle
sub
addr16
movsl
jbe
aad
or
push
jnp
and
xchg
sub
mov
adc
shlb
aad
dec
mov
lret
push
loopne
mov
loope
pop
fldenv
jmp
mov
dec
notb
pop
filds
test
fstpt
cmp
push
mov
subl
sub
lds
aad
mov
jp
and
cli
push
xor
jb
or
shrl
lock
addb
pop
addr16
mov
mov
cmp
das
dec
cltd
xchg
mov
aam
xor
dec
mov
cmp
add
push
sbb
div
int3
int3
or
out
fs
out
or
mov
jno
jbe
push
loope
iret
aas
into
lock
cmpsl
pop
ss
add
mov
inc
daa
fdivl
hlt
mov
mov
mov
pusha
push
adc
pop
data16
fdivrl
lret
aaa
jns
push
in
jmp
cmc
mov
bnd
push
pusha
mov
adc
lods
mov
mov
aam
rcl
les
rcrl
call
xchg
and
imul
xchg
mov
gs
sbb
jnp
lea
fistpl
jae
pushf
imul
pop
push
or
mov
in
les
xchg
mov
sbb
cmp
push
cli
insl
jo
in
outsb
movsb
push
rcll
pop
gs
aad
pmuludq
push
in
sbb
xor
xchg
xor
iret
lods
lods
push
daa
xlat
mov
xchg
sti
and
jge
sahf
jge
inc
add
cmpsb
push
ret
mov
pop
and
loope
fdivr
xor
jnp
fdiv
or
daa
push
inc
mov
addr16
lret
shr
in
adc
loope
ljmp
imul
in
lea
in
ret
clc
cmp
sbb
aam
push
pop
ljmp
lea
xor
movsl
lahf
dec
pop
ret
loop
inc
mov
xlat
and
fldcw
xchg
lds
adc
mov
das
fnstsw
aam
add
xchg
or
test
or
stc
inc
or
jle
dec
adc
imul
mov
outsb
push
mov
mov
push
mov
iret
mov
out
pushf
mov
cmp
loope
pop
cwtl
or
out
pop
xchg
cwtl
fstenv
xchg
clc
ret
out
imul
cmp
dec
fisubs
in
inc
xchg
test
es
push
jbe
repnz
sbb
leave
sti
mov
in
adc
arpl
js
scas
push
sbb
dec
xchg
shlb
stc
popa
std
repnz
stos
sbb
movsl
jp
sbb
and
pop
sub
mov
scas
sbb
add
jbe
jb
cmp
jns
xchg
rcl
jno
fwait
mov
lret
imul
mov
mov
icebp
loope
repz
push
pop
dec
arpl
fldcw
cwtl
cmp
aas
divb
pop
xor
imul
push
popf
sbb
nop
or
stos
push
and
push
mov
push
js
push
xor
fcmovu
inc
in
push
add
pop
add
dec
mov
sub
mov
in
cmp
rolb
mulb
push
stos
dec
aas
dec
add
add
shrb
add
cmp
iret
dec
pop
add
rol
mov
adc
xlat
das
rcll
pop
cmp
bound
pusha
or
lcall
fstpt
mov
ss
mov
imul
push
jno
push
inc
xchg
push
test
out
push
out
add
xchg
and
or
int3
daa
imul
xor
mov
lcall
jae
dec
mov
cli
dec
jo
mov
enter
adc
lods
xchg
and
cmp
aad
sbb
push
and
and
cmp
jb
lahf
push
ss
jp
or
data16
inc
or
fnstcw
push
cmp
and
xlat
fs
out
shl
in
and
jl
leave
or
or
or
dec
les
lea
aaa
add
divb
mov
sbb
mov
fxch
mov
push
sub
jb
push
sbb
pop
or
sbbb
xor
xchg
sub
inc
in
xor
or
ds
dec
cld
dec
aas
cmpsb
adc
addr16
daa
sahf
and
mov
rcll
mov
mov
cmpsl
popa
adc
adc
sbb
jge
addr16
test
jmp
jb
pop
cmc
andb
fnstsw
fcomps
jb
out
sbb
bnd
or
cmp
call
pusha
sbb
movsb
sbb
jae
sub
scas
push
je
lret
test
and
mov
ret
hlt
xchg
test
fwait
mov
pop
and
rolb
jmp
xchg
movsb
outsl
lock
mov
and
mov
sbb
mov
outsl
mov
out
inc
scas
ja
add
lods
sub
push
jmp
dec
mov
mov
pop
dec
loopne
mov
mov
sbb
and
ficoml
lea
addl
cli
jb
int3
hlt
push
xor
scas
fimuls
jne
jae
cmc
mov
paddb
xor
add
xchg
lea
ret
ret
mulps
addr16
sbb
fisubl
fldcw
dec
shll
push
push
ret
ret
or
add
jmp
pop
pop
or
notl
sub
sbb
outsl
mov
imulb
xor
mov
push
test
sbb
adc
es
or
fwait
push
sbb
cmpsl
out
mov
jl
icebp
sub
stos
mov
cmp
or
mov
adc
mov
dec
sub
mov
mov
xchg
sbb
cli
stos
mov
jbe
mov
rcll
js
jl
jns
mov
bnd
jecxz
adc
push
xchg
js
rcr
cmp
outsl
push
outsb
fbld
lods
inc
adc
lret
dec
push
je
pop
pop
or
or
xchg
addb
mov
dec
icebp
aad
xor
lret
push
scas
pop
movsb
xor
test
movb
out
fisubrs
ret
xlat
shlb
pop
lcall
outsl
and
xlat
pop
stos
inc
push
mov
sbb
push
cld
sub
mov
rcl
inc
push
test
jecxz
or
sbb
push
test
push
sarl
bound
and
add
xchg
adc
push
lock
lods
pushf
dec
mov
insb
mov
jmp
cmp
mov
ret
inc
jg
pcmpeqw
push
mov
lds
pushf
rcrl
sub
mov
inc
cmp
xor
jae
mov
lret
sub
arpl
push
and
nop
cmp
popa
and
push
sub
mov
aam
dec
dec
mov
aas
or
pop
clc
mov
add
add
fdiv
into
and
stc
test
je
xlat
xchg
lret
adc
movsb
jns
adc
fdiv
leave
int
pop
imul
sub
gs
jle
cmp
faddl
xchg
or
mov
mov
adc
jp
xchg
jae
mov
jns
sub
aas
fisttpll
and
dec
mov
inc
mov
loop
mov
popaw
pusha
addl
cwtl
ret
xor
repnz
jbe
sub
das
push
adc
mov
fcom
cmp
pop
js
repz
mov
sbb
pop
jge
das
push
mov
cmc
jno
adc
push
or
cmp
shlb
push
test
out
mov
ss
sub
out
test
lret
push
ds
dec
repnz
add
mov
adc
xor
mov
jne,pt
push
sahf
push
xchg
insb
cmp
push
inc
dec
scas
inc
in
testb
imul
sar
mov
xchg
mov
add
cltd
xchg
push
push
mov
jnp
xor
rcrb
insl
xchg
push
dec
loop
or
icebp
gs
dec
jmp
std
and
rclb
xlat
push
loop
mov
xor
sbb
pop
xor
out
sub
repz
jge
push
mov
aad
pushf
aaa
das
push
iret
rorb
pop
xor
push
aam
inc
mov
and
ret
mov
lds
decb
push
stos
mov
lock
clc
cmp
incl
xchg
add
mov
in
call
bound
inc
jg
mov
ss
and
ret
jle
pushf
inc
jae
shrb
popa
pop
sub
dec
and
push
dec
sahf
adc
pop
add
aaa
xlat
pushf
push
mov
aam
int3
mov
ret
add
mov
or
adc
js
fldcw
push
cmp
mov
cmp
leave
rorl
dec
out
mov
mov
adc
push
and
lock
add
out
or
mov
test
enter
or
mov
scas
shr
orl
xchg
jg
cmp
inc
dec
addr16
ficompl
stos
mov
mov
xchg
xchg
pop
shl
dec
rcll
jo
lock
jle
push
ret
lcall
testl
mov
pop
and
pop
jle
movsb
popa
mov
mov
fwait
push
sub
popf
and
scas
add
cmpsl
jge
fnstenv
xor
push
cmp
lahf
ja
ret
xor
lods
test
jae
sbb
ljmp
fadds
push
inc
pusha
jp
je
repz
cltd
inc
sub
sbb
into
mov
mov
mov
int
pop
xor
add
or
dec
insl
lcall
in
jle
fadds
fwait
cmc
sbb
lods
ljmp
xlat
into
aas
scas
cmp
je
add
jg
pop
jb
xchg
dec
leave
or
xor
pop
sub
icebp
push
std
inc
sti
and
dec
mov
push
cmpsl
add
std
pusha
or
adc
jb
jo
loope
lods
and
sub
jbe
push
lea
negb
mov
mov
mov
test
dec
push
sub
add
in
jne
insb
fsubp
mov
push
les
divl
cld
pop
mov
jmp
insl
push
lods
in
push
sub
push
push
jb
pushf
inc
fnstcw
mov
pop
or
pop
cmp
stc
aad
mov
push
in
push
sbb
and
inc
mov
in
lds
mov
cmp
mov
scas
daa
popa
je
push
or
mov
fwait
mov
cmp
insl
andl
in
pop
pushf
fstl
ret
gs
mov
cmp
insl
jae
cmp
and
cmp
lea
les
push
mov
hlt
xchg
mov
jge
lahf
adc
insl
call
int
stc
cld
pop
push
xchg
sti
sub
pop
popa
cmpsl
xchg
cwtl
mov
movsb
gs
nop
jno
inc
mov
pop
es
and
cmp
dec
push
jmp
hlt
xlat
or
data16
lret
out
lds
pop
mov
add
imul
rorl
clc
lea
and
sub
jle
lods
cmp
jae
sbb
fnstsw
ds
dec
fs
dec
push
or
mov
xor
mov
mov
mov
pop
into
sub
cld
lret
into
ret
jae
lcall
filds
loopne
sbbb
jmp
jle
cmp
test
out
pop
adc
cmp
add
movsb
or
popf
adc
cmp
mov
xchg
mov
mov
ja
call
dec
pop
and
insb
arpl
jnp
ficoml
xor
in
dec
add
decl
xchg
xor
xor
and
repnz
mov
gs
cmp
sub
pusha
cltd
xchg
mov
lock
add
cwtl
shr
iret
leave
call
mov
nop
out
out
lahf
adc
sbb
out
inc
and
dec
bound
movsl
jae
xchg
add
inc
outsl
add
add
test
sub
not
loop
add
pushl
jg
dec
gs
mov
pop
fnstenv
add
xchg
fwait
aam
divb
adc
dec
xchg
push
push
cmp
fisttpl
aad
xchg
pop
cmc
mov
enter
out
in
fisttpl
inc
out
adc
popf
mov
mov
ljmp
pop
lret
imul
cs
repnz
cmp
fistpl
insb
sbb
iret
push
data16
icebp
int3
scas
fsubrs
pop
int3
adc
pop
fnstcw
sti
mov
xchg
push
pop
xchg
push
or
ss
add
lahf
aam
sbb
adc
repnz
dec
inc
fbstp
scas
movsl
int3
and
lock
in
mov
enter
inc
mov
sub
sbb
clc
pop
lret
inc
sarb
mov
enter
std
push
pushf
test
je
lock
rcll
hlt
fiadds
mov
push
bound
sub
mov
cmp
cmp
testb
inc
sbb
inc
mov
jno
mov
jecxz
add
cli
push
xchg
popf
jg
or
hlt
pop
dec
inc
cwtl
pop
leave
mov
sub
notb
cmp
stos
adc
push
push
add
xor
lcall
out
pushf
or
addr16
mov
mov
cmp
scas
mov
pop
xor
mov
inc
xchg
dec
jb
pushf
dec
and
test
xor
loopne
sbb
out
sub
mov
mov
shlb
es
jle
mov
hlt
sub
aaa
xchg
call
sbb
popa
adc
fidivl
cli
mov
lahf
insb
dec
aaa
sar
imul
daa
arpl
xlat
movsl
push
gs
push
jns
ja,pt
inc
lret
outsl
rcr
pop
adc
call
test
xor
std
pop
inc
cld
outsl
daa
lods
adc
insb
xchg
ret
loope
mov
mov
jl
jne
jne
js
xchg
pop
loope
add
dec
pop
sbb
nop
cwtl
aam
cmc
push
mov
test
int
std
into
xchg
outsb
movl
and
fimull
and
inc
jecxz
or
mov
jl
je
jb
xchg
dec
pop
std
testl
out
ss
imul
jge
mov
dec
cli
stos
mov
in
outsb
inc
loope
lea
aaa
dec
repnz
mov
and
pop
loop
mov
push
flds
or
bound
in
add
out
mov
negl
lods
std
and
inc
sub
xor
mov
adc
cld
sub
xor
jb
aaa
mov
nop
mov
mov
dec
cltd
mov
movsb
mov
xor
arpl
mov
lahf
mov
leave
jg
nop
push
cmp
scas
mov
je
loop
pop
roll
inc
into
fldl
fwait
daa
add
pcmpgtd
iret
xchg
mov
sahf
jle
dec
xchg
inc
dec
cmp
xchg
in
stos
jnp
add
jb
xchg
in
sbb
cltd
xchg
dec
mov
adcb
shlb
dec
test
fiadds
jo
lret
add
and
xor
jne
cmp
in
enter
or
xlat
hlt
and
push
enter
mov
mov
lret
mov
test
jle
jb
dec
dec
sbb
into
and
in
clc
je
push
decb
push
std
pop
jle
mov
inc
in
ljmp
sbb
ret
ret
sbb
int
inc
pop
push
andl
out
iret
leave
cltd
push
or
es
xlat
ret
out
mov
inc
dec
popa
rcrl
jle
loope
mov
jno
out
sti
sub
adcl
ret
inc
sti
dec
sbb
jns
add
sub
and
jo
lods
xor
stos
std
sbb
adc
in
push
frstor
cld
fs
sahf
test
sub
xchg
insl
mov
jmp
adc
add
jg
insl
pop
jo
jl
das
lea
loopne
sbb
ret
imul
xchg
push
test
stc
sbb
sub
scas
out
push
adcb
lock
pop
decl
insl
cwtl
xor
sbb
fiaddl
gs
jbe
addr16
inc
cmpsb
mov
inc
cmp
cmc
sub
cmpsl
cmp
mov
pop
pop
decl
dec
mov
das
pop
mov
repz
mov
dec
sbb
add
fsubrs
xchg
dec
dec
lods
cmc
mov
and
hlt
add
adc
dec
push
fdivrs
sub
or
shl
fwait
inc
stos
clc
xorb
fisttpll
faddl
mov
icebp
pop
mov
jno
xorb
pop
das
cmp
xchg
ret
dec
scas
dec
fldcw
loop
ret
pop
or
int
out
mov
push
sub
push
jp
popl
or
mov
inc
nop
popl
inc
in
pop
sbb
mov
loopne
xchg
jo
hlt
cmp
pop
sbb
mov
xor
pop
sbb
cmpsb
jle
xchg
out
cmpsb
inc
jge
push
arpl
cwtl
loopne
sub
and
in
int3
lahf
and
pop
and
outsl
sub
xor
push
sahf
pop
out
sbb
in
in
loopne
lret
mov
outsb
inc
call
mov
frstor
mov
jmp
rcl
push
test
out
inc
xchg
pop
mov
hlt
movsl
outsb
cmp
mov
mov
test
sub
negl
cmp
int3
mov
inc
jae
mov
insl
imul
movsb
lret
mov
imul
adc
cmp
mov
sub
ficomps
sub
cmp
sarl
scas
aas
and
jo
adc
push
insb
or
fsts
mov
mov
xchg
cmp
rcrb
jg
mov
cld
inc
popf
lds
das
mov
mov
and
sbb
lods
mov
xor
sub
fwait
sub
mov
out
in
or
shrl
lods
test
mov
lret
aam
loopne
mov
push
bound
pop
mov
jne
addr16
gs
popa
xor
test
das
jg
rorl
out
fwait
pop
inc
pusha
pop
jne
cmc
jnp
ret
cltd
stos
jbe
xchg
push
mov
push
jecxz
add
cmp
in
push
and
push
sub
pop
mov
shlb
xchg
cmp
mov
pop
daa
jo
setns
popf
ret
jne
push
xor
sbb
movb
and
jle
jmp
pop
xchg
ret
mov
call
add
scas
or
clc
movsl
xchg
imul
pop
rorb
lods
dec
jmp
les
mov
std
jle
jp
add
push
sbb
mov
cmpsl
xor
fs
xchg
int3
inc
xorl
jmp
xchg
xorb
repz
or
call
jne
loope
imul
shll
inc
mov
xchg
lock
pop
ds
mov
fld
cld
lea
jle
jg
iret
sahf
lods
sahf
xorl
js
pop
jmp
ret
inc
lahf
push
mov
push
cmp
xchg
jecxz
or
mov
jge
xchg
jp
adc
mov
movsl
xorl
lds
insl
mov
sbb
adc
pop
cmp
push
pop
imul
dec
jae
loope
mov
fld
push
sarl
jo
ss
imul
int
push
mov
xor
pop
xchg
repz
pop
std
xchg
loop
inc
dec
mov
test
shr
jns
std
movsl
mov
dec
dec
add
inc
jo
call
out
mov
mov
loopne
scas
scas
mov
sbbl
xor
inc
js
cmp
daa
loopne
cmp
add
add
pop
mov
stos
dec
push
push
pop
loopne
sub
popf
pop
dec
shrl
jno
sbbl
loopne
dec
sahf
cmp
jge
jb
rcll
sbb
and
cld
call
xchg
and
mov
xchg
or
les
pop
mov
cmpsl
jbe
dec
cmp
out
icebp
sub
test
push
sti
insl
sbb
andl
cmp
in
aaa
mov
xor
and
push
mov
push
sub
popf
xchg
ret
cmc
mov
xor
cld
subb
sbb
inc
mov
imul
xor
pop
mul
insb
hlt
adc
fwait
ljmp
out
push
sbb
sbb
jle
not
mov
cmp
xchg
pop
and
dec
cmpsb
jbe
cmp
push
mov
rcl
scas
movsl
mov
in
inc
cmp
xor
sub
xchg
xchg
mov
clc
scas
and
fadd
adc
adc
test
adc
es
mov
add
lods
and
inc
dec
lea
es
repnz
lods
aaa
lods
cmc
mov
repz
jo
fwait
dec
insl
fdivrl
out
dec
mov
or
sti
aaa
pop
push
adcl
imul
stc
dec
out
jle
add
ja
cmp
test
mov
push
daa
and
aas
mov
inc
xor
iret
mov
ja
nop
mov
loopne
jno
shr
xchg
cld
xor
adc
jp
jbe
jbe
sti
sub
xor
jno
push
fstpl
imul
repz
sbb
sub
sbb
or
std
jg
or
mov
mov
std
insb
rclb
arpl
int
ja
jl
lods
pop
test
sub
xchg
dec
dec
pop
ljmp
xchg
fiadds
sub
stos
mov
and
add
dec
pusha
clc
sub
sarl
ds
pop
jno
jns
nop
and
sub
or
and
aad
imull
insl
int
pop
sti
sbb
sub
lods
popf
xchg
cmp
or
jb
mov
pop
addr16
inc
sbb
fs
adc
sub
add
dec
adcb
stc
xlat
mov
xchg
pop
outsl
fldcw
sub
lahf
in
fnstsw
push
or
sub
imul
pop
sti
shll
mov
push
int3
inc
jl
int3
adcb
js
mov
xchg
aas
mull
ljmp
test
push
imul
push
add
adc
inc
mov
or
dec
sub
fcos
mov
jp
pop
xor
push
adc
xchg
out
xchg
lods
dec
or
das
int3
fbstp
or
lock
inc
stos
in
pop
ret
or
cmpsl
ja
xlat
sahf
loop
pop
lock
cmp
dec
fnsave
and
hlt
icebp
repz
stc
call
jp
or
adc
in
filds
divb
ret
testl
xlat
adc
xchg
xor
inc
nop
scas
inc
sbb
xchg
cmp
pop
adc
fcmove
in
xchg
nop
movsl
adc
xchg
jl
jg
mov
ss
mov
arpl
inc
xor
push
in
mov
lret
push
mov
lods
xor
xchg
and
lods
lahf
jecxz
test
pop
shll
int
and
inc
les
and
mov
in
loope
jmp
pop
fnstenv
dec
add
les
dec
jnp
mov
loope
sub
and
lock
or
test
adc
dec
xor
xchg
jne
cmp
mov
lcall
jmp
mov
addb
dec
bound
add
xor
or
sub
out
inc
std
insl
mov
inc
sub
push
push
lcall
arpl
sub
scas
xchg
pusha
aad
jmp
ljmp
ss
cmc
lods
ja
arpl
sahf
test
sub
notb
jmp
sbb
divb
adc
lcall
mov
or
cmp
xchg
popa
or
inc
push
iret
outsl
mov
testl
in
ja
pop
scas
fists
sarl
mov
gs
enter
or
push
loop
jmp
sub
or
je
movsl
iret
add
mov
subl
dec
popa
inc
cmp
loopne
mov
and
dec
cmc
inc
mov
sub
out
pop
std
fdivrl
sbb
imul
mov
ja
aas
lret
ja
daa
sbb
lea
in
scas
cmp
pop
std
push
vfmsubadd231ps
dec
fwait
jge
lahf
push
ficomps
into
mov
popa
lods
jo
out
sarl
imul
dec
or
adc
idivl
imul
adc
mov
mov
decl
out
aaa
pop
inc
mulb
add
insb
xchg
add
shlb
xor
mov
fisubs
orl
addr16
lret
mov
loop
cmp
xchg
rcr
pop
test
mov
out
mov
jle
scas
pop
mov
jg
divb
lea
cmp
loopne
dec
or
js
aad
jnp
leave
cmp
into
mov
out
pop
imul
mov
sbb
fs
cltd
addr16
lods
frstor
push
fninit
das
pusha
sub
insb
rorb
cmpsl
outsl
sub
pusha
dec
mov
fs
das
aas
fisttpl
adc
dec
sar
int3
dec
jne
mov
mov
sarl
je
xor
xchg
scas
push
dec
out
push
push
mov
mov
dec
popa
pop
in
lret
stos
iret
adc
ljmp
sbb
inc
push
pop
ds
push
lret
aas
fwait
iret
pop
xor
rcrl
rcr
inc
dec
xchg
sbb
ljmp
idiv
jecxz
mov
lcall
jecxz
sbb
icebp
cmp
dec
add
std
mov
push
leave
inc
or
jns
leave
test
jmp
inc
inc
movzbl
pop
push
test
fwait
hlt
mov
or
dec
pop
jno
inc
xlat
add
inc
jb
adc
xor
dec
sub
stc
arpl
movsl
jne
popf
fldt
sub
add
dec
insb
popa
and
rcl
fnstsw
mov
mov
mov
inc
andb
rcl
cmp
fists
in
fwait
add
cmpsb
xchg
insb
cmpsl
jbe
sbb
sbb
mov
cld
enter
scas
jns
test
push
mov
add
mov
sbb
or
xchg
xor
push
dec
addl
enter
adc
cmp
sbb
das
pop
daa
loopne
rorb
dec
mov
into
or
xor
cmp
mov
sbb
aaa
xchg
sub
adc
mov
pushf
jns,pt
mov
jg
scas
fbld
or
dec
and
scas
cmpsl
sti
repnz
push
jae
sbb
mov
pop
stos
lea
add
mov
push
mov
push
out
push
jecxz
sbb
mov
cmovl
pop
in
push
es
sbb
xchg
gs
add
cmp
inc
lret
mov
mov
push
mov
addr16
cmpsb
cld
imul
in
adc
pop
add
repz
or
add
les
xchg
sbb
add
scas
ds
xlat
inc
fsubs
loop
sub
xchg
insl
pushf
jmp
scas
dec
fucomi
ret
inc
aad
mov
iret
adc
test
ljmp
jp
adc
add
test
stos
push
sti
push
push
adc
fs
xlat
not
sub
loope
pop
inc
mov
jge
in
movsb
jo
and
xor
aas
dec
push
movsl
dec
xchg
lds
sbb
or
jb
lret
js
out
pop
stos
lcall
sub
test
push
sub
lcall
ret
pushf
mov
movsb
lahf
mov
push
sbb
add
xor
sbb
xchg
sub
lds
dec
adc
sub
mov
or
inc
iret
or
test
add
push
push
outsl
mov
mov
sub
lret
adc
push
dec
punpckhdq
inc
fisubl
shl
push
shlb
popf
xor
cmovne
mov
sub
xchg
mov
stos
xchg
or
cmp
test
lock
dec
mov
sub
nop
mov
ds
cwtl
movl
lea
rcr
jp
mov
loop
stc
stc
arpl
lret
pop
sbb
stos
movsb
mov
fdivl
sti
aam
int3
mov
jle
mov
insb
insl
ss
inc
cmp
mov
xchg
pop
push
adc
daa
or
or
scas
add
adc
lret
aad
or
mov
les
xchg
adc
or
and
add
leave
inc
adc
notl
mov
int
nop
leave
outsb
adc
into
fcompl
push
jne
mov
xor
mov
test
inc
insl
fstpl
mov
popf
inc
rcrb
orb
xchg
lods
pusha
or
add
hlt
stos
sbb
or
loop
in
pop
or
or
cwtl
lea
mov
sbb
lods
je
imul
test
outsl
ficompl
cmpsb
add
frstor
or
inc
jns
clc
stc
dec
lods
fldt
push
and
adc
aad
js
and
push
push
test
push
mov
xchg
gs
cmpb
mov
scas
das
arpl
xchg
call
xchg
mov
push
mov
fcmovnb
jecxz
xor
pop
mov
xchg
call
cld
pushf
sub
add
out
insl
cmpsl
jno
cld
adc
push
repz
je
or
testb
mov
fildl
fists
mov
lock
hlt
sbb
pusha
inc
or
mov
test
jae
scas
in
out
push
pop
pop
sub
xor
mov
adc
dec
mov
sub
xlat
lds
push
mov
xchg
mov
test
stc
scas
mov
nop
inc
negb
movsl
sbb
into
mov
ss
mov
dec
add
inc
add
es
mulb
out
sar
push
je
subb
mov
aam
fisubrs
aaa
mov
mov
mov
and
lret
fsubs
push
pop
pop
lods
loopne
add
lea
movsb
cmp
cld
and
mov
clc
or
inc
lret
push
mov
mov
repz
shrd
lahf
test
cmc
sbb
bound
pop
lret
pop
daa
loopne
push
sahf
mov
in
stos
dec
xchg
cld
sub
adc
add
arpl
mov
aam
dec
cmp
adc
test
insl
jae
xor
or
mov
pop
jns
lock
loope
lea
fadds
aas
adc
push
inc
insb
sti
pop
mov
dec
mov
pop
cmc
sub
cmp
test
mov
and
mov
add
xchg
leave
syscall
xchg
mov
or
add
stc
pop
aam
outsl
jle
mov
pusha
pop
mov
xchg
sbb
jae
lods
stc
sbb
pop
sub
pop
ficoms
jno
mov
std
imul
sahf
mov
movsl
in
clc
scas
dec
dec
scas
les
mov
mov
jae
and
dec
lock
mov
sub
fwait
xor
aam
and
add
sub
fildl
sub
out
xor
lret
xor
test
mov
dec
cmp
inc
arpl
sbb
sub
in
xor
inc
or
sub
ljmp
mov
add
int
and
push
data16
inc
hlt
ljmp
sbb
ficoml
shlb
push
int
sub
sbb
rorb
dec
and
mov
mov
push
xor
fisubl
and
les
iret
addr16
cmp
inc
fsts
leave
into
es
add
pop
data16
mov
rcr
jo
xlat
nop
mov
cli
xor
jo
mov
cmp
mov
pop
dec
push
lea
xchg
jle
clc
mov
insb
cmp
lcall
outsb
and
xor
adc
js
fiaddl
xor
lods
lds
daa
add
test
cmp
fcoms
clc
and
sub
leave
sbb
pop
test
push
movsl
push
ret
mov
gs
in
push
sbb
hlt
add
inc
out
xor
mov
jg
shll
outsb
mov
and
xor
addr16
cmp
popa
pop
mov
andl
cmp
out
jge
jmp
nop
adc
mov
dec
and
mov
int3
or
mov
sub
or
call
loop
js
aas
xor
js
cmp
adcb
inc
or
in
ret
and
mov
nop
sub
mov
and
stos
std
mov
mov
fwait
jg
adcb
stc
adc
cwtl
jno
or
xor
sub
call
sarl
push
jg
sub
xor
add
sbb
rcrl
notb
ss
ja
jle
aaa
lods
cwtl
dec
or
pop
aad
mov
sbb
mov
add
jb
pop
cld
dec
lret
popf
lea
push
test
testl
xorb
fidivl
sub
cmp
jg
repnz
scas
jns
aad
daa
mov
inc
jl
fists
ds
in
jp
ret
movsb
out
movsb
mov
pop
dec
xor
fs
lcall
dec
dec
cwtl
fwait
push
mov
and
sti
sub
jmp
shlb
dec
add
push
sub
adc
sbb
stos
pushf
xor
ret
pop
adc
jge
cmp
ja
mov
push
cli
test
cmp
clc
shlb
fimuls
mov
sahf
jbe
pop
and
cmp
lahf
ret
and
mov
divb
pop
mov
add
test
std
outsl
jb
xchg
lret
sub
or
in
jecxz
push
cli
push
hlt
jnp,pt
adc
iret
mov
xchg
dec
fwait
fwait
sub
pop
add
enter
movsb
das
mov
or
add
mov
add
jmp
sbb
xchg
aam
adc
mov
nop
adc
xchg
fstpt
fisttps
add
pop
sbb
int
iret
scas
daa
mov
or
mov
pop
inc
push
les
inc
add
imul
push
and
jp
dec
mov
sbb
cmp
or
sub
in
mov
push
xchg
out
loopne
jb
mov
pusha
xlat
test
inc
mov
sti
jb
leave
out
test
mov
fmuls
and
mov
loope,pt
test
dec
andl
mov
mov
iret
shll
sub
jmp
sbb
ja
pop
scas
inc
lret
jp
scas
lret
pop
sub
sbb
cwtl
lods
loopne
xor
pop
test
mov
xchg
adc
shlb
jecxz
inc
push
adc
and
lret
push
mov
ficompl
out
call
addr16
jns
or
inc
ss
dec
in
mov
jmp
cltd
sub
loopne
pop
lahf
les
adc
out
or
jno
lock
xchg
and
sbb
js
shll
push
andb
dec
adc
daa
je
lret
mov
jmp
sub
and
cmpsl
fldenv
or
add
ret
xor
loope
cmp
pusha
sub
loope
push
pop
lret
sahf
lock
aaa
push
sub
imul
arpl
pop
adc
mov
mov
mov
ret
jp
and
jbe
je
lods
xchg
pop
push
fwait
lea
fisubs
push
jb
mov
popf
cld
decb
outsl
mov
shlb
mov
sbb
jle
repnz
repz
sti
xor
into
gs
fsubr
fmuls
in
inc
xor
and
push
sbb
inc
aaa
mov
insb
fstpl
ljmp
dec
jbe
xchg
fisttpl
and
jmp
lret
cmp
sub
mov
pop
sbb
dec
xchg
and
pop
mov
addr16
jmp
sbb
in
dec
out
sbb
sbb
sbb
jno
xor
jb
dec
jns
xor
gs
adc
pop
test
and
push
repnz
addb
adc
xor
jmp
fdivrp
jnp
pop
ret
insl
pop
daa
dec
push
push
sbb
test
mov
push
mov
ja
rcll
lret
out
test
mov
das
in
mov
dec
pop
nopl
jl
stos
inc
inc
push
push
je
push
push
stc
jl
rolb
test
sub
adc
imul
xlat
cld
ret
and
cwtl
js
mov
das
pop
pop
xor
cmp
in
ja
in
dec
cmpl
sbb
in
test
inc
daa
popf
test
enter
mov
cmp
std
insb
cmp
in
mov
in
jge
addr16
rol
rcrb
cmp
mov
jne
pop
fldl
mov
sbb
pop
and
stc
scas
sbb
pop
cmp
push
dec
add
jae
repnz
mov
mov
fimull
outsb
xchg
or
or
push
jnp
inc
pusha
cwtl
test
adc
mov
xchg
mov
insb
sbb
aaa
mov
dec
push
sbb
sub
aam
sbb
xor
inc
pop
cmpsl
in
aaa
ret
popf
pop
ds
scas
mov
and
loop
jo
dec
cmpsb
push
stos
sbb
inc
ds
scas
shll
lods
dec
push
ss
int
ljmp
fs
push
and
lock
inc
rorb
pop
xchg
popf
nop
ret
sbb
punpckhwd
ss
xchg
jle
jo
pop
xchg
int
cli
test
add
mov
lds
gs
cs
popa
xchg
lods
and
jmp
imul
dec
stos
mov
rolb
insb
int3
and
mov
call
push
outsb
cwtl
in
add
popf
pushf
sub
push
fucomp
mov
sarl
fcompl
outsb
ret
cltd
inc
and
jge
cmpsl
fstpt
insl
aaa
int
rclb
jno
iret
dec
inc
daa
packssdw
push
adc
addl
dec
xchg
into
sahf
jg
out
pop
xor
pop
iret
sub
aad
jbe
in
arpl
inc
push
inc
cmpsl
not
popa
imul
mov
mov
imul
popf
mov
insl
ficoms
sti
lret
dec
jno
adc
iret
lock
push
cmpb
dec
xor
popa
leave
cmova
pop
adc
sahf
negb
xchg
fsubs
jno
inc
dec
addr16
sub
mov
add
test
cmp
sbbb
mov
xor
mov
adc
jnp
fucomip
call
add
xchg
sbb
hlt
pop
sub
cmp
add
xchg
sub
mov
xor
aaa
out
iret
jae
lcall
dec
daa
popa
je
sub
mov
enter
cmpsl
out
mov
mov
inc
push
jecxz
push
mov
fwait
or
das
int3
mov
push
xor
dec
lea
and
cmp
sti
push
cmc
rorl
into
scas
pop
add
inc
ret
push
mov
cmpsl
out
mov
popf
inc
mov
decb
pushf
repz
mov
adc
adc
sub
jns
inc
mov
xchg
repz
pop
cltd
push
jg
aaa
das
stos
lds
jne
cmp
push
and
ret
xchg
ljmp
inc
jo
fwait
mov
cmc
mov
rorl
lret
dec
pop
aaa
mov
ljmp
pop
addr16
jno
cmp
rorb
mov
cltd
add
push
iret
in
loop
aad
pop
into
sbb
int
and
mov
enter
add
mov
push
xchg
pop
scas
add
movsb
push
cs
mov
lret
mov
lds
or
push
imul
lea
jmp
mov
inc
xor
test
jle
and
push
testl
popa
inc
iret
adc
mov
pushf
lods
test
jecxz
scas
pop
and
and
mov
rorl
lock
xor
jo
loopne
stos
mov
add
mov
sub
xchg
mov
mov
sub
cmpb
xor
dec
aas
pop
push
nop
rorb
popa
dec
lcall
faddp
call
and
adc
jbe
cld
repz
push
mov
test
insb
or
lret
in
and
mov
and
scas
mov
ret
leave
mov
idiv
in
ret
mov
xor
or
add
lea
and
jmp
mov
roll
into
jns
stos
push
mov
pop
push
mov
sub
fs
pop
dec
xchg
cmc
rcr
sbb
sub
mov
lret
or
mov
or
push
xchg
dec
push
ret
sbb
sub
lock
cmp
in
or
jg
xor
iret
fidivl
in
mov
divl
cli
pop
sub
leave
mov
adc
xlat
fstpt
cltd
push
fidivs
ret
icebp
fistps
xchg
das
cmp
out
push
mov
push
addr16
std
fwait
lods
dec
addb
sbb
and
xchg
idiv
dec
cwtl
gs
push
in
xchg
push
sbb
pusha
mov
inc
and
push
or
cmp
out
fnstenv
xchg
mov
call
outsb
jo
xchg
xchg
lahf
adc
adc
stos
inc
adcl
shrb
push
mov
rsm
mov
mov
rcrb
cwtl
imul
les
ljmp
and
add
pop
cmp
push
cmpsb
lahf
mov
or
pop
adc
xlat
or
fistpl
dec
adc
jo
aam
rcll
pop
mov
loop
mov
mov
pop
in
or
notb
ror
insb
aas
push
cmp
xor
dec
cmp
das
pop
shr
add
inc
pop
fwait
outsl
mov
jo
xchg
sti
aas
aas
or
adc
je
xor
les
sbbb
cmp
mov
push
pushfw
adc
shl
dec
pop
push
xlat
adc
mov
popa
in
loope
shr
sarb
fidivs
adc
cltd
sbb
jle
push
add
cltd
adc
pop
in
xchg
jl
shl
inc
jecxz
lret
bound
pop
mov
push
pop
out
dec
xor
lock
frstor
inc
dec
imul
adc
fstpl
insb
or
or
test
stc
repnz
data16
or
inc
call
shrl
test
mov
fistl
movsb
adc
cmp
cmovbe
push
imul
sub
xor
xchg
pop
iret
std
dec
test
sarl
rorb
dec
push
push
repz
or
sbb
cmp
js
pop
xchg
cmpl
sbb
dec
mov
pop
mov
inc
loope
fsubr
push
fcoms
xchg
stos
jno
and
jge
arpl
pop
mov
aaa
test
outsb
or
mov
daa
push
mov
adc
add
inc
lea
push
lea
inc
fimuls
scas
lods
push
icebp
stos
sbb
add
xor
scas
leave
push
push
cli
aaa
fwait
mov
sbb
shrl
jecxz
add
mov
rorb
cwtl
in
imul
fdivr
aam
in
int
mov
mov
add
pop
cltd
stos
ja
dec
subl
stc
cmp
xor
in
scas
fwait
dec
add
popf
sub
lds
xchg
sahf
push
push
in
adc
int
sarl
repnz
add
push
not
rorb
sub
and
push
cmp
mov
test
xchg
mov
adc
and
fnstenv
inc
movsb
js
pop
sub
cwtl
inc
mov
popf
jecxz
subps
and
loop
and
es
jnp
int3
and
xchg
mov
loope
popa
add
loopne
test
or
in
adc
in
add
fptan
mov
sbb
clc
adc
ds
aad
xchg
sbb
aam
sbb
test
std
xor
xchg
and
mov
jle
fidivrs
fwait
cli
in
in
das
fstpl
add
and
sbb
enter
fldl
into
cmc
rcrl
sub
insb
mov
lea
cli
sarl
imulb
movsb
adc
outsl
cmp
xchg
inc
xor
adc
add
mov
stc
pop
add
cmp
jp
xchg
adc
sub
inc
or
jnp
push
fnstcw
fs
mov
je
addr16
arpl
arpl
dec
cmp
xchg
xchg
pop
ljmp
stc
popf
fs
out
loopne
ret
add
mov
dec
sub
mov
rcrb
jecxz
shlb
in
mov
push
add
sti
or
jl
mov
aam
or
xchg
pop
add
cmp
aaa
xlat
iret
inc
mov
lret
imul
iret
fistps
push
add
jg
pushf
mov
dec
repnz
inc
or
divl
roll
in
je
xchg
fbstp
xchg
xchg
xor
mov
lock
pop
hlt
nop
clc
cmp
xchg
fadds
mov
js
push
xchg
lahf
fnstsw
int
inc
cmp
push
xchg
flds
and
out
daa
lret
push
add
cmp
jg
mov
ds
rorl
cmpsb
adc
adc
repz
cmp
leave
cmp
cli
subl
stc
pop
cmpsl
lret
mov
aaa
fiaddl
mov
jae
mov
in
shrl
jne
sbb
add
imul
or
shr
roll
lret
stos
stc
xor
mov
or
pop
jp
inc
adc
mov
sub
push
and
fwait
mov
sbb
arpl
jnp
push
testb
dec
xor
push
data16
mov
fnsave
pop
cmpl
stos
adc
xor
sarb
xor
ljmp
add
cmp
dec
mov
out
mov
sahf
cmp
xchg
inc
dec
jns
mov
pop
les
push
outsl
mov
ret
sub
jne
aad
cmpsl
jo
add
add
push
inc
xor
adc
fwait
pusha
inc
pop
fstps
mov
inc
adc
loope
xor
daa
aaa
aaa
push
subb
and
cltd
sub
rorl
jmp
push
mov
jge
incl
adc
stos
test
add
inc
push
mov
jnp
arpl
push
mov
inc
popf
mov
and
xor
dec
and
sub
adc
dec
dec
pop
cwtl
scas
jbe
pop
dec
cs
mov
icebp
xchg
ds
mov
inc
leave
repz
mov
inc
cmp
mov
mov
dec
leave
out
lahf
inc
inc
fisubs
jecxz
insb
jns
lods
in
cld
cs
adc
test
and
cmp
mov
mov
or
fnstsw
xchg
sbb
mov
sbb
pop
fldt
inc
push
sbb
stos
mov
sub
out
fwait
in
sbb
pop
loopne
data16
ret
cmp
inc
jl
popa
icebp
movsl
popf
scas
mov
push
mov
dec
aaa
sbb
or
push
push
scas
add
das
mov
popf
imul
dec
mov
lret
jnp
nop
stos
out
mov
je
lods
sbb
push
inc
out
int3
shlb
inc
mov
daa
shrl
inc
rorl
cmp
xchg
xor
div
push
movsl
rcr
aas
push
jmp
xchg
pop
xchg
mov
mov
pop
pop
es
sbb
xchg
mov
jmp
push
cmc
dec
adc
inc
mov
mov
cwtl
gs
xor
mov
add
scas
adc
or
pop
scas
mov
mov
sub
or
sub
sbb
adc
sbb
ljmp
repnz
mov
sub
xor
pop
lcall
pop
xor
out
adc
cld
adc
fisttps
test
cwtl
mov
xchg
das
xor
or
shld
push
push
xor
scas
cmp
inc
adc
pop
xchg
test
mov
pushf
test
lret
das
sti
lret
ja
lret
xlat
xchg
stos
sub
sub
in
cmp
int
cmp
movsl
or
stos
sti
sbb
dec
ret
and
test
shll
repz
out
les
sbb
add
ljmp
loop
xor
dec
pop
jmp
lret
cmp
dec
push
lea
jmp
push
mov
adc
es
nop
xchg
jecxz
sub
scas
xchg
xor
jae
sub
fisttpll
rol
cmp
mov
cltd
clc
jge
jge
out
test
adc
jns
fwait
ds
sub
lret
push
inc
pop
jmp
popf
jne
or
cltd
jb
mov
cs
sub
lahf
dec
enter
ret
cmpsl
test
inc
lret
cmp
shrl
es
mov
dec
fsub
xchg
cmp
dec
stos
test
jne
mov
bnd
inc
dec
in
xor
pop
outsb
repz
mov
pushf
adcl
cli
stos
test
ljmp
rcll
movsb
dec
lods
repnz
mov
pop
and
stos
cltd
pop
aas
mov
jl
mov
fstps
dec
mov
dec
xchg
xor
sbb
add
jge,pt
lahf
bound
lret
arpl
pop
xor
xchg
psrlq
mov
xchg
xchg
hlt
cmp
jne
outsl
test
push
push
lcall
cmpsb
sbb
xor
not
jl
sbb
jae
dec
and
hlt
jmp
rorl
aam
ljmp
test
xor
aaa
hlt
loope
xsha1
cmpsb
or
lahf
jl
xchg
rcrl
in
add
in
mov
dec
testb
mov
jae
adc
stos
cwtl
xchg
rorb
dec
cli
out
xor
jl
int
ret
in
jae
fldenv
add
stc
add
mov
loopne
inc
adc
movsb
mov
bound
sahf
out
fwait
shrl
cwtl
push
outsb
pop
pop
push
bound
jle
les
test
or
inc
fxch
in
mov
inc
cmp
test
out
cmp
jnp
xchg
mov
outsb
bound
lods
push
imul
in
fildl
loop
add
ret
mov
jbe
xchg
shll
mov
inc
decb
and
loopne
shlb
test
popf
push
in
push
je
adc
sub
clc
jne
pop
repnz
hlt
jns
sub
adc
dec
dec
arpl
dec
push
xchg
or
cmp
popa
outsb
pop
jnp
and
mov
sub
sahf
lahf
sbb
lret
pushf
and
mov
pusha
sbb
and
mov
xor
mov
mov
test
adc
scas
aam
pop
in
rorb
lods
adc
mov
push
push
shrl
mov
nop
pop
js
bound
divb
int
xor
cs
test
lret
cmp
out
xchg
mov
in
int
dec
or
or
xor
dec
fnstenv
cmp
mov
sarb
je
cld
mov
jp
xchg
cmp
movsl
push
xor
adc
or
fcmovbe
inc
repz
sbb
cld
out
push
sti
jmp
xchg
add
xor
ss
push
in
and
cmp
jae
cmc
pop
shll
and
sbb
imull
mov
push
xchg
clc
mov
sub
scas
subl
mov
push
sbb
fdivr
mov
icebp
pop
dec
sbb
not
out
sti
xor
pop
push
mov
ficomps
adc
cmp
cltd
jge
shlb
mov
xchg
int3
jnp
cmpsb
mov
testl
or
in
fildl
pop
add
std
call
mov
cwtl
movb
dec
and
subl
xor
mov
movsl
xchg
xor
push
xchg
pop
cmpsl
incb
inc
cmc
ljmp
nop
add
lea
test
faddp
or
in
fisubrl
enter
mov
sahf
cli
adc
sbb
inc
mov
repz
jnp
mov
sub
sub
subl
sbb
sbb
popf
mov
dec
and
push
mov
cmp
adc
add
jno
pop
dec
fcompl
pushl
xchg
mov
cmp
dec
sub
mov
sub
sbb
movl
push
cmp
enter
dec
mov
xchg
mov
loop
cltd
rclb
xchg
xor
mov
pop
xchg
iret
pop
fdivp
ja
mov
out
xchg
das
insb
xchg
mov
popa
repz
ljmp
jp
cld
sub
lds
add
mov
je
push
insl
mov
icebp
push
scas
xchg
push
dec
mov
dec
sti
mov
aaa
into
xchg
aad
cmpsb
enter
sub
cwtl
rcrl
mov
sbb
pop
ljmp
cmp
arpl
inc
nop
adc
rol
daa
sbb
imul
aad
dec
jns
repz
sbbb
push
fisttpll
mov
xchg
cmpsl
inc
int
movsb
shr
xor
pusha
jno
ja
adc
out
vmwrite
xchg
mov
aam
lcall
mov
xor
lock
jp
movups
testb
pop
ret
popa
lock
push
mov
lcall
pop
pushf
leave
mov
repnz
cmpsl
movsb
mov
jo
inc
sahf
or
pop
lock
jne
mov
xor
loope
sub
repnz
lahf
cmp
test
adc
ss
cmp
dec
fdivrl
pop
call
sub
std
and
outsb
rcl
fsub
dec
mov
sbb
mov
outsb
mov
sbb
popf
fisttpll
pop
stc
ljmp
dec
jl
je
jne
jnp
xchg
mov
leave
adc
cmp
xchg
mov
push
dec
add
enter
jmp
xchg
out
jmp
in
psrlq
lods
pop
scas
xchg
mov
jnp
adc
add
pop
mov
sahf
jae
outsb
jle
ljmp
bound
lock
inc
loope
testb
sar
sbb
mov
xchg
mov
outsl
adcl
test
movb
loope
sahf
add
shlb
iret
mov
filds
aaa
pop
std
mov
push
jmp
xchg
xor
push
pop
xchg
jb
cmp
mov
adc
arpl
push
push
pop
add
aaa
pop
sbb
imul
pop
cmp
xor
mov
lods
mov
add
mov
je
in
mov
stos
repnz
xor
iret
lods
cmp
xchg
cmc
aas
adc
or
push
bound
lcall
testl
repz
cmp
fldl
inc
scas
out
jle
iret
add
ret
test
add
fcoms
in
arpl
fnstsw
imul
scas
mov
pop
jb
ror
imul
pop
xchg
push
std
roll
xor
xlat
push
xchg
pop
sub
outsb
fcompl
mov
jbe
rclb
adc
sti
mov
sub
sub
add
clc
fdivr
sti
xor
mov
arpl
jb
mov
fildll
repz
loope
lods
adc
jp
mov
mov
inc
jo
test
dec
popf
stc
popl
enter
sbb
sbb
out
test
pop
mov
mov
mov
xlat
xor
les
outsb
sbb
decb
mov
out
dec
out
push
in
adc
lds
inc
icebp
jno
aam
pop
imulb
std
out
lcall
cmp
cmpsl
outsl
call
rorb
icebp
xchg
mov
lret
push
test
daa
and
aad
pop
imul
add
lret
mov
xchg
mov
mov
icebp
aad
or
mov
in
jle
incl
scas
repnz
sbb
cltd
push
dec
mul
cmp
xchg
xchg
pop
jl
rorl
adc
pop
cmp
push
jae
lcall
jp
lahf
jae
mov
lret
outsb
xor
sbb
pushf
or
push
imul
jmp
loopne
arpl
xchg
stc
test
adc
fucomip
int3
icebp
mov
lea
mov
popf
sbb
lea
gs
pop
int
sbb
les
fdivl
dec
gs
lahf
mov
aas
xor
repnz
in
push
dec
xchg
fsub
pop
sti
sbb
lds
mov
push
lock
or
xchg
jnp
sbb
mov
jl
mov
loope
das
add
popf
movsl
andl
les
dec
lcall
ret
jle
mov
int
pushf
out
mov
sbb
shr
pop
les
fsubrs
or
push
jae
mov
mov
ljmp
clc
dec
outsb
inc
scas
xor
pop
mov
sub
jno
pusha
pop
lods
fwait
xchg
leave
fucomip
inc
push
or
mov
and
pop
rorb
scas
pop
lahf
imul
and
fwait
gs
inc
push
test
sub
outsl
outsl
push
mov
adc
mov
sub
jne
push
push
jmp
insb
xchg
int3
pop
stc
xor
repnz
cmp
fisttpl
cmp
mov
pop
int
in
jb
push
repz
data16
scas
inc
nop
ror
fcmovbe
pop
stc
add
cmp
cmp
out
fcmovb
sub
in
push
cmp
aam
lahf
xchg
daa
lcall
xor
icebp
lret
cs
pop
lods
rclb
dec
cmpb
adc
repz
ja
push
es
xor
call
test
mov
aaa
ljmp
pushf
push
shrb
xchg
and
fimuls
scas
pop
loope
fsubrs
mov
sbb
inc
cld
sbb
popf
adc
xor
xor
faddl
js
aam
mov
lods
mov
aad
stos
fstp
outsb
mov
add
add
rcr
sarb
enter
pop
lea
mov
cltd
cmpsb
in
repnz
jle
push
fildl
mov
dec
call
sbb
pop
lock
movsb
popa
pushf
je
mov
push
cmpl
aaa
ja
pop
jecxz
mov
data16
pop
and
out
xchg
add
jecxz
sahf
loope
push
jg
mov
cmpl
sub
jbe
lods
data16
pushf
pop
jns
out
stos
test
fmuls
les
and
push
add
jne
lret
mov
ja
aam
aaa
or
fmull
arpl
inc
cmp
push
aam
insb
lahf
scas
adc
fs
in
or
lock
jge
and
push
dec
add
leave
add
loop
inc
jae
inc
pushf
mov
xor
ljmp
mov
add
push
lahf
or
icebp
or
lods
out
xchg
lcall
mov
mov
mov
or
fcomps
xor
ret
xlat
xor
and
iret
jle
mov
mov
pop
xchg
jb
les
test
aam
or
jbe
xor
filds
pop
and
adc
lock
mov
cmpsl
jmp
lret
rorl
lahf
or
fidivs
fildl
jp
add
sbb
jae
mov
das
add
jno
jnp
dec
sarb
or
fimull
sub
jno
inc
cld
ret
sti
xor
arpl
fdivr
and
or
push
inc
clc
add
cmpsb
xchg
insl
movsl
mov
pop
inc
ret
into
ja
jmp
test
mulb
fdivrs
iret
inc
inc
xchg
and
xchg
sbb
and
push
aaa
stc
loopne
sbb
lret
imul
push
sarb
call
sti
std
iret
cwtl
cmp
xlat
sahf
inc
lods
test
repnz
mov
or
xor
in
imul
inc
dec
adc
lds
adcb
cmp
not
aam
pop
add
das
sbbb
push
sub
inc
push
push
cmp
lahf
enter
clc
cs
mov
jle
push
xchg
cmp
test
pop
stos
push
push
insl
nop
pop
mov
pop
cmpsb
xlat
inc
pop
cmp
xor
mov
inc
adc
or
add
xchg
scas
jno
nop
in
fs
pop
loop
cli
mov
popf
movsb
je
mov
aad
lret
push
mov
sbb
lgs
add
iret
insl
or
movsl
and
mov
repnz
push
pop
xlat
jb
cmpsb
or
int3
scas
adc
push
nop
jno
clc
cltd
or
icebp
or
iret
ficoml
data16
cli
sbb
in
push
add
push
ja
stos
xor
out
out
xchg
xor
push
je
in
in
scas
xchg
testb
lods
cmp
lods
stos
sub
cmp
call
notl
cld
roll
xchg
xor
add
out
dec
arpl
std
fists
in
pop
xor
lahf
cmp
stos
jl
lret
push
mov
inc
rorl
push
xchg
addl
addr16
das
out
dec
sahf
sbb
shrb
adc
adc
lods
sbb
adc
mov
adc
rorb
cwtl
hlt
jl
sub
mov
fidivs
and
fcomi
adc
icebp
mov
xlat
mov
addr16
mov
xchg
pop
jo
dec
push
cmpl
jbe
mov
inc
fyl2xp1
mov
or
add
mov
test
mov
mov
xor
adc
ret
lods
testl
mov
out
or
movsb
fistps
push
faddl
pop
or
movsb
inc
push
stos
pop
in
aas
mov
ja
push
les
mov
mov
adc
and
mov
outsl
frstor
sbb
jo
jnp,pt
ljmp
rcll
sahf
mov
shll
out
cltd
arpl
std
repnz
pop
iret
ret
sbb
or
dec
jge
loope
xchg
sbb
pop
ljmp
sbb
pop
loop
stc
cmp
mov
adcl
add
mov
mov
shrb
loopne
pusha
push
insl
jns
call
or
les
stc
add
std
mov
push
loopne
jnp
jo
add
or
sahf
lret
scas
inc
rolb
int3
pop
dec
mov
and
cmc
mov
sbb
add
add
or
fcoml
mov
test
cmp
push
je
dec
adc
and
sarl
leave
mov
push
rorb
insl
imul
push
mov
mov
dec
jb
pushf
xor
adc
es
push
out
mov
add
shld
cmp
or
adc
jnp
clc
mov
scas
cwtl
ds
test
test
sahf
add
jo
push
sbbb
lret
lods
movl
shlb
fcoml
or
insl
test
jno
shrl
insb
pop
ret
jp
add
into
rcll
movsb
mov
scas
call
fcmovnbe
insb
xchg
ljmp
jnp
sub
bound
add
ja
dec
icebp
xchg
call
push
jmp
jbe
cli
rorb
xlat
movsb
imul
xchg
int
data16
add
fsubs
sti
loopne
lret
jbe
mov
xor
clc
mov
aaa
cwtl
jmp
push
cmp
les
xor
mov
dec
dec
data16
push
dec
fwait
xor
mov
and
lods
fs
ret
das
jg
mov
jge
pusha
jg
das
jnp
cmpsl
and
into
or
dec
adc
fwait
cld
lea
sub
popa
stos
push
xchg
cld
or
scas
imul
rolb
aad
in
cmpsb
gs
and
mov
pop
fstpl
rcrb
rcrl
cmp
jae
lea
ret
mov
orb
mov
out
inc
insl
cmp
mov
in
faddl
movsl
cmpsl
xchg
or
push
mov
dec
mov
and
ljmp
mov
std
jge
pop
mov
or
and
mov
pop
and
cmpb
cmp
mulb
cmp
mov
ja
cld
mov
ktestw
jne
xchg
cmpsb
out
mov
dec
clc
dec
loopne
push
xchg
dec
rcl
cmp
pop
fucom
pop
lidtl
mov
movups
jb
sti
rolb
cwtl
and
movsb
jecxz
in
fcmovne
movsb
stos
fwait
popf
sahf
cmp
movsb
jp
pop
mov
stc
inc
lahf
push
xchg
ret
add
mov
add
mov
dec
adc
mov
mov
enter
jns
fwait
insb
pop
add
add
xor
lds
pushf
in
out
sbb
iret
jae
mov
inc
movsl
addr16
pushf
out
call
aam
movsb
jb
sbb
bound
fdivl
sub
push
test
fdivp
in
rclb
int3
cmp
movsb
mov
bound
inc
pslld
enter
mov
lods
ror
loope
call
fidivrl
mov
cltd
add
es
rcrb
inc
popf
ds
scas
lcall
in
mov
clc
mov
loope
js
sub
ds
das
ret
rcll
sbb
iret
scas
bound
jmp
sub
shll
xchg
test
nop
nop
and
lahf
jge
fisubrs
pop
les
and
adc
jns
ljmp
sub
das
lcall
arpl
aas
push
ss
push
pop
pop
xor
fdivrs
jl
stos
push
push
je
inc
lods
mov
sbb
cmpb
icebp
mov
addr16
mov
lds
pop
ficoml
ljmp
pushf
inc
mov
pop
push
pop
dec
xchg
xchg
rolb
cli
divb
mov
out
movsb
dec
sahf
mov
adc
xchg
jmp
and
jne
adc
cmp
dec
das
jno
inc
dec
dec
push
loopne
cmp
cwtl
jmp
adc
and
adc
shl
mov
int3
mov
pop
repz
sub
fnstsw
push
pop
aas
sub
xor
push
xor
inc
pusha
lock
pop
cmp
sbb
cmp
negl
mov
std
inc
rcrb
push
jmp
dec
inc
sub
mov
cli
jbe
inc
jnp
fs
nop
sub
pop
repnz
sti
pop
add
dec
popa
xchg
dec
mov
pop
dec
out
fdivrl
mov
add
xor
pushf
and
in
add
cli
mov
or
stos
add
dec
stc
adc
addb
cmp
rcr
inc
add
imul
das
ljmp
mov
andb
jnp
ja
pushf
sbb
xchg
dec
int
sahf
cmc
subl
or
mov
sub
sbb
lcall
xor
test
cmp
sahf
sbb
mov
in
int3
bound
xor
pusha
lods
ret
xor
dec
jmp
sub
add
inc
jb
add
jle
pushf
and
pop
test
leave
sub
test
sbb
movsb
cmpsb
std
outsb
aam
xor
arpl
cli
sub
and
cld
out
jle
inc
mov
fiaddl
mov
fidivl
lods
mov
xchg
rclb
pop
xor
fwait
xchg
xchg
insb
mov
icebp
addl
addps
divl
es
pushf
mov
sarb
or
daa
pop
arpl
pop
lea
dec
jl
mov
sbb
std
icebp
jns
pop
loope
icebp
mov
cli
mov
addb
and
or
inc
sti
xlat
scas
inc
adc
loopne
scas
cmpsb
cmp
dec
ds
mov
mov
jmp
les
cld
pop
fwait
sub
imul
pop
shrl
stos
popa
xor
dec
int3
inc
push
pop
xchg
bts
pushf
lock
test
mov
jno
nop
mov
arpl
cld
cmp
es
add
cmpsl
ss
aaa
mov
dec
cwtl
mov
push
push
pop
arpl
jbe
sbb
fwait
dec
mov
sbb
aaa
and
pushf
xor
pop
subl
jae
ret
std
mov
mov
cmp
jb
movsb
stc
dec
aaa
dec
or
lds
and
cmp
jg
xchg
test
dec
outsb
cwtl
push
imul
sar
fs
mov
push
shrl
add
std
rorb
pop
insl
mov
sub
adc
sub
and
outsb
xchg
jb
sarl
pop
lods
add
ficomps
jbe
xchg
sahf
lret
mov
lock
add
push
inc
mov
mov
adc
xor
mov
fmull
push
out
lods
js
sbb
scas
jb
pushf
pushf
mov
repz
sbb
ret
xor
mov
and
sub
jnp
aam
jle
inc
mov
mov
out
mov
push
or
add
jl
sbb
les
clc
cmpsl
mov
fstpt
roll
push
sahf
movsb
xchg
dec
js
or
xchg
xchg
xor
push
mov
std
cli
ret
test
bound
gs
movsl
inc
dec
xchg
pop
cmp
inc
jae
push
xor
aaa
mov
gs
and
test
push
mov
xor
push
aaa
jo
push
in
sbb
in
cmc
mov
pop
imul
lock
fs
mov
outsb
mov
test
in
test
mov
jecxz
or
fmull
ret
inc
and
xor
data16
imul
pop
ja
mov
cltd
inc
orb
mov
bound
mov
sub
cmp
inc
lds
jmp
add
insb
push
setle
xor
xchg
jmp
std
push
fbstp
icebp
data16
mov
out
cmpsb
mov
inc
jmp
enter
loope
mov
pop
int3
in
aad
xchg
mov
mov
aad
test
jge
je
icebp
js
fstpl
xchg
movl
pop
cld
data16
xchg
lret
stc
test
pusha
sub
pusha
push
cmp
pop
loope
inc
xor
fnstenv
xchg
mov
notb
push
inc
mov
inc
mov
leave
jns
sbb
out
lret
sbb
mov
movsb
out
push
sbb
sbb
lret
imul
jmp
imul
add
and
and
cmp
xor
gs
rolb
cmp
xor
push
adc
in
fbld
nop
stos
dec
test
or
pop
ficomps
xchg
mov
dec
mov
cwtl
lock
pop
mov
js
test
movsb
jnp
dec
mov
in
enter
lods
lahf
xor
sarb
push
xchg
lds
decb
das
idivb
pop
ret
sbb
push
push
icebp
out
xchg
rcr
pop
ss
push
push
mov
clc
push
mov
shlb
jnp
sub
lds
pop
nop
adc
xor
hlt
outsb
pop
push
jl
pop
scas
adc
and
out
cmp
sbb
shlb
inc
outsb
in
and
in
and
faddl
jl
push
ds
cmpsb
mov
mov
cmp
stc
in
mov
rcrl
xor
mov
xchg
ljmp
push
dec
mov
and
lea
sbb
faddl
out
pushf
scas
cmp
or
lock
loopne
cld
test
push
test
std
loope
sub
jno
movsl
cmp
movsl
pop
mov
cmp
fwait
add
test
adc
aaa
mov
sub
xchg
outsl
cmpsb
stos
inc
repz
mov
sub
in
xchg
sti
xchg
imul
xor
inc
xor
shrl
mov
add
stos
mov
mull
movsb
jmp
into
or
and
addr16
dec
mov
ret
mov
inc
xor
dec
sbb
xchg
call
fcoml
in
adc
jo
pusha
pop
adcb
fidivrs
jmp
push
out
xchg
inc
cmp
insb
and
inc
jnp
mov
sub
mov
daa
mov
add
inc
mov
orb
inc
je
jle
test
pushf
mov
sub
sbb
mul
cwtl
cmpsl
inc
data16
push
sbb
enter
ja
cmp
dec
inc
dec
xchg
mov
mov
jg
jg
clc
gs
lret
mov
mov
inc
sub
cltd
repz
adc
cmp
xchg
inc
lods
sub
jno
das
cmp
lcall
sub
xchg
adc
addr16
test
lods
lds
scas
jg
pop
pop
movsb
in
lahf
leave
stc
xlat
cmpl
rcrl
ret
xlat
rorb
xlat
mov
and
cmp
mov
xchg
inc
pop
jno
push
sahf
xchg
lret
inc
hlt
pusha
pop
mov
ljmp
mov
imul
or
pop
aas
sub
movsl
data16
aas
pushf
aad
scas
rorb
outsl
mov
pusha
pushf
xchg
mov
sbb
int
push
jmp
cmp
xchg
shl
add
jle
adc
mov
js
push
push
insl
sbb
lret
jp
out
cld
clc
or
mov
repnz
test
xchg
arpl
mov
xchg
rorb
insb
jge
pop
test
adc
hlt
iret
push
jmp
mov
inc
cmpsl
mov
push
shrl
gs
or
out
rorb
jl
inc
stos
jle
pushf
mov
scas
sub
mov
outsl
mov
xchg
or
and
jl
adc
sti
inc
add
fbstp
lret
out
sahf
iret
jne
jne
out
jne
cltd
insb
add
nop
add
xor
add
out
enter
inc
mov
jae
mov
ror
ficompl
fcmovb
mov
pop
fldt
xchg
xor
xor
sub
subb
cli
and
push
into
repz
dec
aas
mov
loop
lods
in
pop
pop
add
repz
mov
shld
adc
cmpsb
push
xchg
xchg
push
inc
jmp
jno
jp
inc
lea
jbe
jo
xchg
lock
repnz
sbb
leave
pop
mov
mov
or
fs
ljmp
pop
xchg
adc
push
and
es
and
lds
in
push
sub
addr16
xchg
dec
mov
fs
repnz
mov
jmp
lds
mov
mov
js
fiadds
cltd
stos
hlt
lret
add
or
jl
pop
ffree
jmp
insb
sub
adc
mov
push
mov
jo
lea
jae
fcomip
mov
daa
pusha
xor
fs
push
inc
jns
lahf
jl
test
sbb
dec
push
mov
adc
lods
dec
gs
mov
sahf
sub
aam
divl
or
mov
push
pop
and
push
adc
fsub
xor
inc
add
int3
int
add
cmp
leave
repz
hlt
cmp
push
cltd
xlat
das
aas
sub
adcb
jbe
adc
pop
mov
aam
adcb
mov
cmpsl
or
mov
mov
cwtl
test
jno
mov
sub
imul
fmuls
cmc
leave
outsl
push
add
gs
xchg
xor
jg
jnp
shrb
lods
fcmovb
add
rorb
sahf
jle
std
rolb
lahf
xchg
std
or
dec
jbe
pop
out
outsb
movsl
or
add
push
idivb
xlat
add
mov
out
jecxz
bound
stos
fldl
add
inc
fnsave
jecxz
pop
popa
jno
jp
sub
and
adc
nop
mov
mov
cmc
pop
dec
icebp
fs
xchg
pop
cli
mov
xchg
lock
stos
fmull
xchg
jbe
dec
subl
fbstp
add
or
inc
sbb
push
loop
push
add
arpl
and
push
mov
pop
xchg
xlat
jnp
js
fisubs
mov
or
cmp
and
cwtl
addb
cwtl
ljmp
repnz
mov
jge
adc
aam
subl
add
ret
adc
sar
icebp
sahf
jmp
cmp
rcrb
adc
mov
add
or
repz
cmp
cmp
mov
sbb
adc
gs
mov
sub
lods
pusha
in
mov
movsl
aaa
xchg
negb
mov
lods
mov
fsubrs
pop
fiaddl
jae
jb
dec
lea
or
cmp
adc
xchg
mov
stos
jg
arpl
insb
outsl
test
rcrb
cld
das
insb
fidivl
imul
sahf
enter
rcll
fwait
sbb
arpl
inc
sbb
sbb
test
mov
popf
popa
sarl
scas
xchg
adc
jle
andb
jb
adcb
orl
inc
cmp
jg
xor
sub
rorb
cmp
imul
fidivrs
cmpsb
leave
or
insl
fidivrl
scas
mul
cwtl
int
xchg
mov
iret
xchg
jb
adc
mov
mov
js
scas
dec
dec
xchg
add
pop
fs
cmpsl
fidivs
dec
xchg
cmp
daa
jmp
adc
xor
and
outsl
and
in
inc
jge
push
jmp
shlb
xor
pop
sub
cmpsl
pop
sub
mov
inc
sbb
test
aam
xor
and
out
aam
dec
and
lret
out
dec
sbb
adc
jbe
adc
pop
mov
stc
pop
inc
test
cwtl
stos
cwtl
into
jecxz
and
adc
rolb
mov
call
sahf
xchg
pop
decb
test
push
aas
sbb
insb
jl
sub
and
cs
ret
insl
fucomp
ds
sub
std
push
cmp
push
mov
pop
jecxz
mov
push
mov
fs
int3
pushf
sub
popa
push
ljmp
pop
cs
icebp
mov
pusha
push
mov
loopne
or
cmc
and
jg
lea
shrl
or
add
mov
sbb
nop
pusha
ja
xchg
push
aas
stc
mov
jg
mov
adc
add
rcr
out
pop
inc
and
push
cwtl
or
das
popf
or
repz
push
inc
fcmovnbe
movsb
fiadds
jnp
outsl
jg
mov
lahf
jno
mov
inc
sbb
push
pop
mov
cmp
jmp
mov
rcl
inc
lea
mov
pushf
cmp
test
or
rorb
ljmp
clc
int3
mov
and
insb
mov
dec
xchg
mov
cmp
dec
xor
enter
sbb
xchg
adc
testl
mov
push
mov
push
or
jnp
or
add
fs
mov
outsl
addr16
aad
and
lods
jg
rcrl
call
cmp
call
sbb
dec
loopne
stc
adc
adc
daa
mov
mov
popa
pop
mov
inc
loope
xlat
fs
fsubs
mov
sbb
inc
jns
aas
hlt
into
in
mov
inc
outsl
inc
adc
mov
xchg
stos
mov
xchg
mov
in
pop
push
in
inc
sbbl
sub
insl
cmpsb
in
dec
mov
xlat
dec
or
jnp
nop
mov
xorb
mov
mov
mov
sbbl
cmpsb
ss
jmp
mov
sbb
dec
pop
test
cmp
insl
jp
lds
and
lret
sub
data16
and
out
out
roll
adc
cmpsb
test
xchg
arpl
pop
in
mov
mov
or
inc
mov
xor
pop
adc
daa
mov
test
jnp
jb
sbb
xor
or
stos
xchg
sbb
xchg
sbb
mov
cmp
mov
jp
mov
inc
mov
push
inc
bound
adc
leave
scas
adcb
xor
aam
inc
stc
out
push
push
inc
nop
jnp
int
test
jne
inc
lods
rcrb
sbb
jl
jmp
adc
loope
imul
adc
scas
sub
bound
or
shrb
push
adc
sub
not
jns
adc
lret
decb
inc
jnp
setae
in
pop
sbb
fnstenv
lea
je
mov
mov
xor
or
ljmp
inc
pop
sub
adc
or
mov
jg
rorl
cmp
cs
push
test
loope
inc
gs
cmpsb
int3
sbb
xchg
dec
cmp
andl
push
mov
aaa
int3
inc
imul
dec
push
or
or
bound
test
pop
xor
jno,pn
imul
pcmpgtw
rclb
adc
sub
std
fists
ja
int3
xacquire
adc
pop
in
mov
mov
xlat
dec
push
adc
cld
in
pop
add
imul
test
jbe
inc
xor
sub
ror
mov
push
inc
push
pop
xchg
mov
sbb
add
jg
inc
test
sahf
mov
dec
adc
int
arpl
and
inc
dec
push
pop
out
in
jns
pushf
adc
xor
mov
mov
call
sub
dec
mov
outsl
icebp
pop
movsb
aas
sub
jo
push
sbb
inc
sbb
mov
xor
mov
mov
adc
cmp
test
xchg
fidivs
test
les
faddp
cmp
pop
xchg
mov
jp
arpl
ss
xor
xor
out
mov
or
lahf
mov
inc
jns
rol
xchg
mov
js
fidivrs
inc
adc
push
xchg
mov
sub
jo
and
inc
outsb
arpl
roll
xchg
push
mov
test
nop
fcompl
jo
inc
or
pop
jbe
mov
movsb
sarl
push
cmp
aad
mov
dec
push
lock
aaa
cmp
mov
stc
popa
setno
jno
sbb
lahf
mov
lods
rcll
dec
inc
jno
adc
add
ja
loope
sub
and
mov
into
sbbl
add
mov
mov
xchg
mov
rorb
imul
jl
push
sub
jg
imul
hlt
adc
and
test
jno
jle
jge
lock
xor
jne
out
stc
lret
pop
push
add
inc
cmpsl
sbb
out
cmpb
push
bound
push
pop
out
mov
cmpsl
testb
push
and
xor
xchg
stos
stc
inc
sub
addr16
rolb
test
sarl
sarl
lcall
jbe
or
testl
jns
ret
push
ror
sbb
rorb
stos
add
out
je
hlt
scas
pop
clc
clc
xchg
mov
mov
clc
xchg
dec
in
mov
stos
xor
lods
aaa
popa
xchg
sbbb
nop
lock
dec
add
in
mov
xor
add
mov
daa
xor
pop
into
decl
mov
inc
int
bswap
stc
sbb
out
sbb
into
jbe
lret
cmp
std
call
sbb
subl
mov
pop
cmp
in
js
hlt
test
test
es
mov
mov
popf
outsl
shrb
sub
inc
sahf
daa
push
mov
dec
mov
push
bound
scas
sbb
and
fnstcw
ficompl
stos
ss
jl
fdivl
lahf
mov
mov
cltd
jo
xorl
fcom
in
out
mov
fwait
push
push
outsl
push
cs
test
xchg
pop
add
mov
add
mov
xchg
clc
daa
out
xor
sbb
push
mov
add
test
inc
xchg
pushf
movsb
sub
repz
subl
pop
sub
pop
lea
cmc
movsb
push
mov
aam
imul
incw
adc
cs
pusha
fimull
insb
and
iret
mov
push
ret
movsb
sahf
jno
adc
lods
jb
sbb
and
movsw
testl
cltd
mov
test
loop
loope
lods
jo
pop
pop
mov
mov
arpl
mov
lret
dec
leavew
out
mov
xor
cld
fimuls
lds
loope
int
dec
mov
imull
jmp
jmp
jne
scas
cli
xchg
or
stos
inc
cld
sahf
leave
push
fxam
bound
pop
cmpsl
sbb
xor
fisubrs
mov
push
movsl
sbb
ss
pop
aam
jmp
in
std
inc
mov
adc
cld
mov
mov
cmp
gs
jle
xchg
dec
int
or
cmpsb
lahf
adc
sub
dec
sti
sbb
lods
adcb
jecxz
fisubl
and
lcall
mov
jns
mov
loope
cmp
shll
or
test
aas
mov
jp
fs
repz
movsb
jl
or
xchg
mov
and
mov
cmp
mov
lcall
sbb
hlt
push
xchg
sub
sbb
in
xor
daa
inc
daa
and
movsb
sub
push
aaa
mov
xchg
imul
je
lcall
pop
add
add
out
jp
idivl
daa
hlt
adcb
inc
mov
cmc
in
jecxz
fwait
movsl
or
sbb
dec
fcomps
and
cmpl
stc
push
push
push
jp
adc
jnp
pop
in
loop
add
addr16
and
lds
jnp
mov
dec
lods
lret
fwait
mov
out
push
lock
sbb
jb
jno
enter
sbb
pop
adcb
rolb
cltd
xchg
sarb
or
pmaxsw
mov
push
fcmovnbe
mov
pop
nop
jne
fidivrl
adc
lcall
push
fldt
fidivrs
pop
test
mov
test
or
arpl
add
push
inc
pushf
lcall
pop
repz
or
xchg
sub
popf
jl
push
out
lret
push
sbb
sti
ret
ret
and
ss
stos
jns
inc
pop
push
inc
or
cmc
pop
mov
add
adc
jns
pop
xchg
add
mov
pop
imul
or
mov
std
out
ret
sub
lea
rcrl
std
push
mov
or
and
sbbb
test
pop
sbb
inc
sbb
add
pop
sub
or
rcrb
jle
sub
lods
ljmp
sub
daa
dec
inc
iret
repz
sbb
mov
push
movsb
xlat
jo
aas
loope
sbb
sub
inc
mov
xor
in
sub
adcl
mov
xorl
jecxz
adc
int3
mov
pop
in
cmp
stos
push
sbb
add
pop
adc
fs
mov
or
jnp
addr16
jp
cli
outsl
out
mov
push
push
nop
nop
add
mov
mov
int3
in
insl
test
dec
int
lods
sub
or
pop
clc
inc
out
dec
lret
int
f2xm1
aaa
push
adc
roll
dec
lahf
aad
push
imul
shlb
add
in
test
jns
iret
mov
test
or
add
iret
sub
into
lods
or
hlt
push
xor
xor
push
lret
sti
es
dec
sub
popf
in
xor
clc
outsl
int
and
push
inc
stc
out
pop
xor
or
mov
dec
pop
jno
xor
and
xchg
mov
mov
mov
lahf
xchg
repz
add
cmp
mov
stos
pushf
pusha
int
stos
xchg
and
leave
sbbb
pushf
shrb
out
lds
not
subb
pop
cmp
insb
into
cmpsb
addr16
ljmp
addb
les
fs
mov
add
out
das
xchg
jecxz
faddp
popa
inc
fsts
mov
pop
jo
sub
insl
cmp
neg
cld
data16
lods
jo
fisubs
sbb
mov
adc
sbb
mov
push
xlat
scas
je
pop
jmp
pop
xchg
repnz
fidivrs
insl
decl
xchg
mov
push
jle
jb
pop
jbe
lods
push
mov
in
xor
andl
jbe
cmp
daa
adc
insb
push
scas
dec
sahf
aas
idiv
inc
or
sbb
push
cmp
adcb
loop
mov
xchg
xchg
sti
xchg
ret
cmpsb
and
clc
data16
das
pop
mov
lret
cld
or
rolb
scas
outsb
pop
xchg
inc
dec
hlt
add
imulb
jne
je
cmp
les
pop
dec
mov
lcall
cmpsb
pop
sub
dec
out
cli
mov
or
addr16
jge
mov
call
inc
lods
mov
aad
push
das
sbb
mov
pop
test
adc
pop
jmp
in
or
lods
sub
mov
cmp
inc
daa
mov
in
pusha
and
sub
call
mov
mov
pop
fsts
std
xchg
sub
insl
lret
or
fwait
insb
sbb
inc
pop
sub
push
jp
insl
nop
std
addb
imulb
xor
pop
ficoml
repnz
jns
les
outsb
or
and
add
jne
insl
ret
pop
ja
rcll
inc
popf
fisubl
cltd
shld
in
out
ret
adc
repz
xchg
cmc
cmp
jo
aas
into
lock
stos
pop
movsb
std
arpl
inc
xor
dec
cmpsl
mov
inc
cld
lea
dec
jecxz
mov
out
cmp
cs
sub
test
outsl
xchg
mov
cmpsb
xchg
mov
loope
cmp
inc
cmpb
mov
dec
not
mov
dec
inc
sbb
subl
jg
push
cmpsb
or
mov
in
lret
stc
mov
add
inc
mov
in
xchg
lea
sub
repz
bound
mov
leave
dec
nop
loop
cmpsl
ds
mov
mov
lea
jb
jle
addl
movsb
adc
sbb
cli
or
daa
loopne
xchg
jno
jns
and
frstor
sti
in
outsl
inc
mov
jae
add
ret
pop
fistl
push
mov
sbb
cmpsb
fs
and
data16
jno
std
roll
cwtl
fwait
xchg
push
inc
pop
sbb
mov
xor
cmpsl
sarl
pushl
xchg
xor
in
imul
loopne
dec
loopne
dec
sbb
lock
sbbl
pop
les
ficoml
imul
data16
sbbb
into
jne
ljmp
outsl
gs
lods
and
divb
xchg
sub
cmp
punpcklwd
inc
mov
insl
subb
cmpsb
or
jl
add
jg
xor
out
or
aaa
adc
sbb
mov
jp
dec
sub
pushl
xor
mov
sub
cwtl
sbb
clc
test
jbe
push
lret
icebp
je
je
scas
dec
push
pop
mov
jne
pop
adc
data16
out
push
add
lods
jno
lret
xchg
dec
inc
inc
in
sub
cs
repnz
mov
xchg
fcomp
in
inc
cmp
out
dec
shl
insb
notb
cltd
int3
jno
lods
and
adc
mov
stos
leave
sbb
lea
test
jmp
mov
and
add
sarb
pusha
push
int
dec
fidivs
repz
mov
cmp
ret
mov
pusha
pushw
fimuls
idivl
cld
xor
add
frstor
stc
add
cltd
pop
inc
sbb
cld
pminub
push
stos
mov
fistpl
mov
ljmp
adc
nop
es
add
inc
and
cs
nop
or
pop
arpl
std
adc
adc
xlat
rol
jnp
sub
push
adc
or
movsb
inc
clc
repnz
and
shll
movb
lahf
xlat
inc
or
mov
popf
repz
jae
xchg
cltd
inc
pop
lcall
pop
shll
xchg
rclb
add
out
mov
and
xor
xchg
adc
aas
imul
loop
or
lcall
or
pop
in
mov
cmp
repz
mov
out
inc
aaa
mov
js
in
mov
xchg
ljmp
sahf
jge
out
jge
and
adcb
test
push
dec
bound
test
mov
mov
sub
lock
sbb
push
stos
je
inc
jns
repnz
jnp
mov
jmp
and
iret
xchg
mov
mov
push
test
mov
jge
lea
enter
dec
jmp
pop
leave
jne
dec
shll
xchg
das
shrl
test
adc
popl
mov
dec
dec
add
mov
xchg
pop
adc
xchg
test
jo
cld
add
adc
shrl
bound
cmp
xchg
mov
sub
xchg
pop
adc
add
jmp
imul
cmp
das
mul
pop
sub
jp,pn
fs
xchg
std
push
pushf
sbb
es
notb
or
jno
lock
cmc
daa
ror
cmp
jne
test
test
pop
bound
stos
xchg
mov
mov
xor
push
leave
pop
mov
dec
jg
mov
mov
aaa
push
xchg
mov
scas
mov
fists
dec
imul
mov
or
xor
mov
fstl
test
daa
xor
mull
mov
repnz
mov
sahf
js
nop
mov
add
das
ret
rclb
xor
cmc
sbb
add
mov
mov
shlb
sbb
mov
push
adc
out
out
cli
mov
roll
mov
call
push
inc
mov
mov
cmp
aaa
push
adc
stos
in
loope
movsb
push
mov
push
or
push
aam
movsb
mov
lcall
add
cli
jl
add
mov
scas
pop
xor
out
aaa
ret
adc
and
pusha
sub
sbb
sub
mov
xor
fstpt
jnp,pn
sti
mov
outsl
es
lock
clc
push
add
jecxz
xor
mov
js
fnstcw
adc
lahf
fwait
xor
lcall
xchg
aas
xor
mov
rorb
iret
inc
in
xor
mov
pop
call
enter
mov
or
cmp
rorl
mov
ret
lcall
stc
xor
leave
mov
cmp
sbb
in
aaa
scas
or
sbb
ret
jns
push
push
subl
and
lds
push
pushf
inc
cmp
push
xor
icebp
add
aad
pusha
jbe
test
cmpsl
jbe
nop
xchg
shl
js
adc
push
mov
inc
or
sub
adc
int
test
pop
sti
inc
rcrb
enter
ret
mov
push
xacquire
roll
scas
pop
mov
xchg
test
stos
add
sbb
shll
enter
out
imul
inc
mov
mov
pusha
adc
jle
pop
mov
loope
lret
fwait
or
cmovns
inc
aam
repz
int3
jmp
dec
mov
mov
push
fimull
bound
xor
jp
xchg
stc
hlt
dec
repnz
xchg
dec
or
mov
mov
jge
movsb
sub
bound
push
loopne
or
outsl
mov
pop
dec
scas
xchg
lcall
ficoms
jle
or
movsl
ja
push
mov
ss
cli
fs
movsl
in
enter
mov
addl
xchg
aam
sub
mov
mov
sbb
jne
inc
or
xor
xchg
cmc
lret
rcl
mov
cmpsb
popf
or
sahf
test
pop
jmp
mov
fnsave
inc
int
inc
add
jmp
mov
stos
aad
jg
clc
adc
out
je
xchg
divb
cwtl
jns
out
sahf
push
cmpsb
orb
fldcw
das
aam
fstl
jae
add
outsl
mov
pop
dec
adc
jecxz
pop
cltd
pop
test
inc
fcmovnbe
add
shrl
ja
adc
xor
xor
inc
sbb
aam
sub
add
js
mov
pushl
push
in
lcall
jle
ds
stc
push
jbe
lds
call
xchg
imul
test
shlb
sbb
cs
mov
dec
xchg
cmp
fstpl
scas
mov
es
es
sbb
das
loopne
cmpsl
insb
mov
push
push
cmp
jo
xchg
sbb
sbbl
or
std
mov
lods
jmp
in
std
int3
dec
jle
push
cmpl
xchg
xchg
pop
jno
int
jge
dec
jecxz
clc
je
mov
bound
int3
mov
inc
add
mov
jp
call
sbb
mov
shrb
push
jge
notb
dec
ficomps
fadds
inc
or
jno
and
xchg
pop
pusha
lret
loop
fdivrl
add
mov
lret
imul
rclb
dec
push
xor
imul
lret
xor
push
shlb
mov
adc
jmp
scas
cmpsl
fsubrs
xor
cmp
push
scas
inc
or
inc
loop
add
sbb
add
loopne
pop
push
inc
fsubrl
outsl
xchg
fdivs
inc
in
mov
js
pop
lock
or
sbb
push
push
mov
mov
lods
mov
sub
sbbb
lret
test
add
add
sbb
stos
xor
dec
in
lds
ja
dec
or
mov
es
rcr
sub
loopne
inc
fst
inc
pop
fcompl
stc
insl
fwait
sbb
aaa
fs
lds
sub
mov
add
mov
clc
addr16
cmp
nop
int
push
inc
js
mov
stos
lcall
push
sbb
xor
sbb
pusha
push
push
pusha
hlt
push
jge
or
jb
in
lea
out
jno
dec
add
mov
icebp
xor
add
aaa
pushf
adc
xchg
and
mov
cs
fsts
ljmp
or
adc
xor
rcr
rcl
and
jno
pop
cwtl
inc
inc
xchg
mov
repz
rcll
mov
mov
arpl
sbb
sbb
dec
js
adcb
nop
mov
dec
es
popa
popf
jb
xchg
rclb
jp
inc
cmpsb
dec
push
insl
out
ds
jecxz
push
or
push
sub
sub
test
dec
inc
push
dec
enter
cmp
ja
sahf
add
cmp
push
sub
out
sarl
cmc
icebp
outsb
rolb
lods
insb
addb
sub
or
adc
xor
mov
or
imul
push
cltd
jno
mov
add
push
dec
mov
insb
fmulp
or
stos
inc
dec
cwtl
out
xorb
mov
inc
lods
lock
lcall
hlt
bound
je
jecxz
in
cs
test
ljmp
add
lds
xchg
outsb
dec
mov
sbb
into
rorb
pop
push
into
sub
cmp
fisubrl
xor
fsubrl
mov
xor
test
adc
movsb
imul
int3
pop
mov
pop
xor
adc
inc
mov
cmp
or
ret
pop
cld
jecxz
call
sub
xor
push
mov
and
mov
in
cli
subl
addl
clc
out
or
loopne
stos
out
ja
out
jns
xor
mov
xor
daa
call
jmp
inc
mov
lods
cmp
adc
cmovbe
dec
sbb
ja
mov
mov
pop
pop
stos
push
out
aas
sbb
inc
jge
adc
fldl
push
pushf
mov
mov
fiaddl
jl
subb
or
test
mov
pop
sbb
xor
iret
pusha
mov
dec
movsb
add
adc
sub
out
ss
inc
xchg
xchg
aas
mov
insl
popf
aaa
dec
call
lods
xor
add
cmp
div
mov
or
inc
xchg
xlat
fstp
fcomip
sbb
adc
xchg
and
add
sub
mov
out
mov
xchg
gs
rorb
or
or
pop
fwait
pop
fildll
and
into
inc
dec
xchg
loopne
xchg
sahf
inc
cmp
pop
sbb
cli
repz
pop
int3
addl
iret
jle
roll
or
jg
clc
filds
and
loope
push
jp
fcomps
sbb
sbb
fcompl
jle
xlat
xchg
pop
cmp
add
jbe
cmp
sbb
lret
pop
in
sahf
sbb
fsubrs
mov
push
or
les
jno
sbb
mov
xor
adc
push
insl
leave
jmp
xchg
push
mov
cs
dec
jle
les
adcb
xchg
shll
xchg
mov
sub
popa
pop
fldl
fcomps
xor
push
add
sub
mov
dec
insl
fstp
push
cwtl
fiadds
in
lock
and
sub
rorb
mov
std
cmpsl
js
enter
stos
add
push
xchg
shll
test
fisubrs
out
pop
lock
ljmp
imul
mov
jbe
addl
sub
push
movsl
decb
mov
ffree
add
and
inc
dec
pop
stos
mov
add
into
rcll
out
mov
push
or
gs
xor
dec
mov
jge
in
stc
cmp
test
inc
inc
jb
jecxz
stos
ss
ret
sub
faddl
mov
mov
lea
xor
mov
mov
fsubl
stc
leave
mov
mov
xor
xchg
test
les
arpl
pshufw
pusha
in
mov
push
jmp
inc
nop
mov
insb
clc
loopne
mov
out
pop
dec
adc
sub
sbb
add
lret
lods
sbb
xor
adc
xor
mov
cmc
xchg
and
or
dec
ffree
dec
jle
sahf
ja
repnz
xor
push
inc
inc
lock
cmpsl
lcall
inc
mov
pop
movsl
cli
sbb
mov
div
adc
scas
jo
mov
dec
into
ss
pop
je
das
mov
cwtl
adc
sub
xor
xchg
xchg
addb
xchg
scas
and
jb
hlt
bound
xchg
mov
lahf
ss
cmpsl
jmp
pop
inc
aam
test
push
inc
xor
push
dec
push
outsl
cmc
out
add
or
push
fists
push
sti
shll
mov
repnz
stos
adc
push
idiv
sub
jmp
adcl
sbb
lahf
pop
call
mov
sahf
insl
lret
mov
adc
and
bound
cs
or
cmp
dec
fdivl
inc
daa
xchg
icebp
shlb
adc
xchg
xchg
stos
jb
sub
je
jne
and
or
rol
std
adc
mov
adc
insl
xor
ljmp
in
mov
add
push
xchg
fnstenv
imul
add
pop
jg
pop
mov
cmpsb
adc
sub
mov
stos
daa
repz
mov
ja
daa
xchg
mov
mov
xchg
loope
xchg
pop
xchg
jne
pop
es
ss
add
mov
push
es
repz
dec
inc
cmpb
jne
push
stos
pop
addr16
ljmp
mov
push
sbb
mov
lret
icebp
lock
jle
int
sub
aam
xchg
pop
jl
dec
cld
xor
fiaddl
mov
cld
insl
test
lods
xchg
aaa
inc
imul
push
xchg
cmc
add
sub
pop
push
mov
cmpb
aas
and
imul
clc
dec
loope
sti
pop
mov
cmpsb
pop
gs
inc
stos
loop
out
sbb
ljmp
jo
data16
popf
adc
test
sub
shlb
loope
sub
call
test
out
or
hlt
inc
imul
test
mov
push
aad
inc
add
inc
outsb
push
push
in
fwait
ret
or
jnp
pop
lock
testl
xchg
cmc
das
xor
shrb
aam
sub
cmpsl
adc
test
loope
repnz
cmp
mov
mov
scas
mov
mov
lock
lcall
xor
sub
sarb
mov
pop
sbb
mov
inc
imul
leave
addr16
cmp
insl
pop
pop
call
fcmovb
ja
mov
and
or
pshufw
outsb
xchg
push
pop
pop
mov
icebp
adc
in
sbbb
sub
cwtl
fisubrl
pop
aas
popa
aaa
cmp
cmc
cmp
jnp
mov
movq
adc
and
roll
xor
pushf
out
sub
jle
fwait
lods
test
xchg
jae
pop
adc
mov
xchg
cmpsb
jns
jne
push
fstpt
sub
push
arpl
repnz
in
pushf
push
push
nop
add
push
lods
shlb
cwtl
mov
test
jne
cltd
in
adc
jle
inc
mov
sbb
add
jnp
les
adc
jno
repnz
imul
sbb
sbb
fcompl
xlat
jmp
les
int
cmp
mov
dec
adc
fsubl
mov
jns
cs
ja
loop
iret
fisttpll
es
jne
scas
mov
repnz
add
imul
or
inc
xlat
cld
or
xchg
mov
inc
mov
jecxz
roll
and
cmp
inc
std
adc
insl
adc
movsl
aaa
daa
shlb
ret
cmp
lods
xor
mov
jle
inc
ficoms
cmp
pop
jnp
and
pop
jl
xor
push
arpl
idiv
mov
adc
mov
enter
out
ljmp
cmp
xor
inc
push
adc
sub
mov
jecxz
xor
aad
dec
test
mov
push
mov
in
insb
add
push
aas
mov
sbb
jno
jno
mov
push
pushf
sbb
lahf
cmp
jnp
xchg
movsb
sbb
lret
leave
fs
fdivrs
aad
ret
out
xchg
jl
xchg
lret
mov
or
push
arpl
dec
xchg
mov
scas
lea
femms
bound
pop
dec
and
pop
lock
outsb
mov
in
jns
dec
add
movsb
mov
jbe
cmpsb
push
movsl
stos
sahf
rolb
lock
scas
lods
pop
or
ja
push
jp
imul
ret
in
lods
adcb
pop
xchg
cmp
imul
and
dec
cld
sarb
and
scas
testb
lcall
int
or
mov
andb
stos
movsb
cmp
cmp
cmpsl
aaa
in
jg
into
repz
jbe
sbb
and
or
aad
cmp
lea
dec
pop
insb
das
ret
adc
adc
imul
iret
add
fistpll
adc
add
aad
sub
out
jo
clc
insb
sub
lahf
pop
inc
dec
outsb
lods
pushf
aaa
mov
add
clc
jmp
jo
push
xor
or
adc
lret
sbb
leave
inc
pusha
dec
push
shr
push
rorl
scas
push
repnz
push
test
repz
test
jge
cmp
xor
or
out
imul
xor
ret
and
push
jb
xor
inc
mov
jo
sub
orb
dec
fisubl
xchg
lods
sub
add
and
jge
icebp
push
test
cmp
xlat
mov
cld
insl
cmp
inc
test
adc
push
mov
notl
inc
pusha
or
mov
js
in
lahf
aaa
and
mov
inc
cmp
jnp
sbb
lock
sub
or
jge
and
or
mov
push
inc
dec
push
lcall
cmc
ret
rcrb
xchg
aam
stos
mov
mov
loope
popf
mov
les
pop
mov
mov
inc
cmpb
scas
dec
sub
call
sub
xchg
shl
insl
cmpsb
ds
sub
mulb
imul
jmp
aas
jno
mov
or
jbe
push
test
arpl
xchg
fnstsw
push
mov
cmp
cmp
ljmp
mov
inc
dec
cmpsl
mov
jecxz
xchg
ret
push
pop
and
jle
arpl
dec
or
lret
push
jmp
aad
mov
pop
in
xor
inc
popa
jmp
or
loope
mov
jmp
dec
stc
push
and
inc
mov
cli
movsl
hlt
push
int3
int3
push
fsubr
jb
add
push
fpatan
mov
push
cltd
fcomi
pop
mov
lock
pop
mov
jg
add
or
pop
lea
jecxz
cwtl
dec
jl
and
jbe
lods
cmp
inc
in
ret
dec
out
mov
push
stos
mov
sbb
pop
sbbl
fisubl
jns
add
mov
cmp
clc
adcl
and
nop
lret
xor
cmpsb
stc
out
xor
sbb
popa
push
out
mov
sub
push
xchg
int
bound
lods
in
and
sbb
cmp
mov
stos
mov
in
fistps
sub
mov
add
cs
mov
int3
cwtl
push
jae
lahf
mov
sub
mov
jnp
dec
int3
or
fisttps
in
mov
xor
mov
fsts
pop
xchg
xchg
cmpsl
xor
sub
sbb
add
pushf
xor
imul
mov
ljmp
stos
sub
pop
mov
mov
call
push
add
bound
pusha
mov
mov
out
cmc
stos
mov
mov
inc
cmp
jl
mov
outsl
jo
fcoms
inc
xchg
lcall
test
fsubr
test
into
sbb
pop
inc
roll
jae
mov
adc
dec
int
cmp
mov
daa
fs
pop
ss
les
rolb
cmp
add
cmp
inc
aam
test
sahf
mov
jle
pop
roll
scas
sub
nop
lcall
inc
jg
sti
mov
bound
pusha
inc
lret
cmc
mov
cs
inc
sub
jmp
xor
jl
sbb
xor
mulb
mov
das
mov
mov
mov
cld
push
adc
test
in
in
sbb
pop
mov
outsl
dec
jnp
sbb
sub
data16
cli
jl,pn
mov
call
inc
jno
icebp
jno
jg
cli
mov
fsubrl
loopne
xbegin
inc
pop
mov
ret
add
gs
mov
orb
lods
inc
incl
ja
loopne
dec
adc
jg
aaa
sti
pop
stos
jno
neg
push
and
dec
fisubs
lods
sub
out
loopne
xchg
imul
cmpsl
push
movsl
xchg
sub
mov
pop
movsl
sub
repnz
test
cltd
adc
fisttps
jae
inc
in
pop
push
or
sbb
dec
dec
mov
lock
icebp
sub
in
jp
or
ds
xor
rcrl
filds
pop
sbb
lret
nop
push
xchg
xchg
jmp
xchg
lret
inc
scas
mov
repz
ds
add
pop
divb
mov
in
push
imul
lods
push
test
xchg
sahf
adc
xchg
mulb
xchg
aaa
and
rclb
cmp
pop
add
cld
add
mov
mov
loopne
dec
mov
xchg
jo
mov
xchg
imul
movsl
add
or
push
add
in
dec
mov
ds
decb
xchg
jge
cmp
sahf
dec
fstps
jo
push
cmc
mull
mov
sbb
mov
cmp
xor
sub
sub
add
add
out
imul
in
notb
out
add
jg
push
stos
pop
outsl
mov
gs
lods
and
loop
in
testb
mov
xor
sub
lcall
jle
iret
sbbb
push
cmpb
ficoml
dec
dec
mov
jnp
and
ret
adc
sbb
int3
inc
fnstenv
add
mov
test
insl
in
and
fadds
add
fnstenv
roll
ss
xor
xchg
fbld
mov
mov
pop
or
jae
out
adc
aaa
mov
cltd
lds
pop
or
std
and
xchg
sub
lods
rclb
mov
in
mov
add
push
movl
notl
fdivs
lods
cmc
mov
pop
fistl
fmul
iret
ljmpw
bound
push
cmp
sub
sti
jl
push
outsb
jb
sbb
and
test
mov
popa
std
push
and
clc
or
leave
enter
mov
and
sub
fwait
fs
jle
outsl
adc
inc
loope
adc
out
cmp
mov
into
mov
push
sbb
pop
rcll
sub
loop
pop
xor
jne
mov
jno
dec
add
sub
faddl
xor
fildl
jl
daa
xchg
popa
pop
pop
add
and
shr
jns
xchg
mov
inc
sub
popa
adc
lret
jge
cmovl
pop
popf
push
inc
inc
jl
push
push
fsubrs
ret
lea
sarb
loop
sub
cmp
sbb
cmp
lock
lahf
xor
rcl
dec
cmpsl
cli
gs
aaa
sti
push
imul
pop
addr16
push
fs
fcmovbe
cmpsb
stc
push
ret
pop
test
imul
push
add
jno
jbe
test
xor
xlat
shrw
jmp
js
jnp
mov
inc
mov
or
jl
sub
add
jb
add
xor
jbe
cli
or
sbb
mov
mov
adc
and
inc
mulps
jg
lret
insb
mov
sbbl
xchg
xchg
mov
bound
jle
add
add
out
jb
adc
dec
cmpl
jmp
into
sub
insl
fimuls
cmpsl
xchg
dec
aam
shlb
clc
mov
adc
or
dec
and
mov
inc
aam
sbb
fwait
int3
mov
js
pop
or
xor
sbb
push
jp
xor
dec
push
adc
or
sub
stc
mov
push
mov
enter
mov
mov
ret
xchg
fisubrl
aas
inc
jecxz
daa
insb
sbb
mov
rcl
testb
iret
and
sub
fbstp
das
inc
mov
sub
rorb
enter
mov
pop
mov
sbb
mul
out
fisttpll
iret
lcall
push
mov
iret
jne
xchg
sbb
repnz
add
das
pop
mov
clc
dec
out
cmp
dec
sahf
in
push
xchg
std
je
push
gs
test
jne
daa
in
mov
cld
adc
inc
adc
push
test
xor
sub
push
das
and
repnz
ljmp
daa
xchg
jb
and
and
xor
cmp
out
scas
lods
cmc
aas
push
lea
stc
lods
in
movsb
push
and
and
ret
mov
cltd
pusha
xorb
cld
xchg
xchg
jns
dec
xchg
cmpsb
push
adc
sub
sbb
dec
sbb
mov
dec
stc
ja
dec
xor
sbb
mov
cmp
xchg
inc
mov
loope
push
leave
or
sub
lahf
imul
push
test
sub
jbe
notl
xchg
nop
sub
fadd
jmp
push
add
nop
push
push
cmpl
outsl
rorb
inc
fldcw
daa
shlb
popa
cmp
or
dec
nop
inc
mov
xor
lret
rcr
nop
lds
mov
fdiv
jae
xchg
mov
ret
jno
aad
jle
jnp
jbe
ja
adc
adc
pop
faddl
jmp
xor
movsb
fidivs
sbb
int
jecxz
negl
popa
inc
sub
shlb
jae
mov
xor
in
pop
jbe
aas
sbb
sbb
cmp
pop
arpl
mov
popf
popf
rcrb
add
fcmovnb
mov
js
push
mov
das
sbb
jmp
pop
xlat
jg
fists
outsb
mov
jmp
repz
sti
lret
shr
sub
xor
sbb
cwtl
int3
cld
or
fnstcw
inc
add
cmp
sub
ss
mov
arpl
pop
lods
adc
out
test
xchg
outsb
push
fwait
xor
movsb
ret
sbb
das
iret
adc
leave
sahf
fcmovne
ror
imul
ja
out
outsl
mov
jbe
sbb
push
cli
fsubl
pop
and
jmp
add
fld
ljmpw
sbb
fstp
mov
rolb
cmp
pop
sub
push
mull
push
sbb
les
lods
dec
sub
mov
outsl
cmp
jno
xchg
mov
data16
mov
in
sub
fiadds
dec
xor
pushf
push
out
dec
in
clc
jl
fs
jbe
add
xchg
cmp
inc
cmp
mov
insb
shr
dec
fmuls
das
lods
xor
in
lock
mov
xor
sar
addr16
jecxz
das
pop
cmp
pop
loopne
fildll
enter
jg
repz
add
xchg
sbb
add
lea
subl
icebp
fs
adc
mov
pop
insl
ljmp
cmc
fcomps
pop
popf
addr16
xlat
mov
call
ja
or
ja
sub
pop
nop
in
dec
xor
sbb
or
mov
lods
xchg
aad
fcmovnb
in
dec
or
cmp
push
inc
cmp
and
or
or
sub
jecxz
and
push
out
pop
sub
push
xchg
out
daa
sub
xor
fwait
in
adc
mov
lds
lea
push
jo
cltd
dec
outsb
test
dec
adc
adc
fs
cmp
pop
out
std
push
repz
in
mov
cli
jns
fsubrs
sub
fdivs
pop
inc
xor
or
jp
loop
loopne
sub
push
xchg
mov
or
dec
inc
mov
sbb
das
xchg
mov
and
push
lahf
dec
adc
mov
lock
sbb
cmp
fisubs
movsl
in
ret
rcrl
xchg
adc
movl
cmpsl
cmp
adc
ljmp
inc
aaa
test
lods
adc
mov
int
sbb
leave
inc
repnz
jb
cmp
fisubrs
scas
dec
pop
pop
push
xor
mov
idivb
mov
push
movsb
jae
push
cmc
lock
mov
sub
js
dec
scas
scas
idivb
sub
dec
adc
sbb
push
shl
insl
mov
cmp
popa
imul
fwait
inc
movsl
jb
sub
mov
pop
jae
iret
cmp
loopne
lods
mov
sbb
cmc
adc
fidivrs
icebp
fildll
xchg
imul
aad
and
xchg
in
loop
popf
add
jno
shrb
xorb
hlt
dec
cmp
lret
sarl
mov
mov
dec
fnstenv
out
cmpsb
cmpsl
xor
repnz
scas
mov
fbstp
into
mov
stos
xor
hlt
pop
cmp
dec
popf
ja
daa
mov
loopne
cwtl
stos
inc
jmp
je
subps
aam
and
jne
rcl
sbb
mov
lods
mov
or
scas
int
pop
inc
pop
pop
out
daa
add
or
cmpsb
mov
decb
inc
mov
xor
mov
pop
pop
pop
mov
xor
jae
xorl
pop
pop
jae
cld
jbe
insl
pop
stos
insl
shl
test
fldcw
jb
aam
push
aam
loope
subl
push
mov
mov
sbb
jl
mov
cmpsl
je
loopne
gs
int
jecxz
xchg
jmp
ret
and
pop
and
or
dec
jge
pop
jne
js
and
enter
or
cmovle
mov
test
ficoms
cli
sbb
loopne
jecxz
cs
jnp
mov
mov
sub
lock
rorl
stc
add
rolb
jo
leave
sbb
lret
adc
jl
sbb
mov
test
push
push
push
jnp
outsl
adc
inc
push
out
mov
flds
out
add
sti
orb
popf
jno
ret
dec
pop
jg
push
xor
add
fwait
or
lcall
leave
in
sub
les
mov
and
out
mov
ja
xchg
test
push
push
xor
call
shll
sbb
xor
rcll
in
cmpsl
test
add
movsl
leave
js
xchg
rorl
insb
stos
mov
inc
or
arpl
dec
or
and
cmp
mov
mov
aaa
insl
mov
pop
cmp
fldl
mov
add
sub
push
xchg
mov
cli
mov
aas
lahf
push
mov
mov
adc
repnz
mov
cmp
arpl
dec
fwait
insl
lds
pop
or
cli
in
add
sti
add
sub
out
shr
mov
xchg
xchg
cmp
dec
dec
dec
test
aaa
cmp
xor
cmp
jp
or
xchg
adc
idivl
aad
pop
xor
mov
dec
pop
jnp
cli
cmpsb
pop
mov
dec
jl
xor
cs
mov
addr16
sub
imul
adc
lret
adc
mov
outsb
xchg
sub
aaa
fsubrs
lret
icebp
xor
push
ja
enter
adc
fidivs
cmp
and
and
outsb
pop
arpl
cmpsb
in
pop
ror
xor
mov
fwait
icebp
xor
sub
popf
or
leave
and
mov
mov
mov
lea
gs
jae
pop
jns
repz
and
nop
std
sub
push
jno
xchg
fnstsw
mov
iret
aad
in
cmp
mov
inc
jns
into
add
cs
popa
push
push
adc
fcom
dec
int
shlb
js
fwait
mov
lods
mov
and
jle
imul
pushf
xchg
sub
pushl
mov
jl
pushf
lcall
mov
aaa
int3
mov
sub
imul
test
push
nop
fildl
push
sub
clc
sub
inc
ja
das
adc
pop
sub
push
mov
pop
push
mov
xchg
inc
test
das
jnp
enter
sar
ds
in
jp
lcall
int3
sbb
sbbb
fiadds
dec
aam
cli
push
outsb
push
xlat
cmc
cmp
call
push
mov
mov
lods
mov
xor
sub
cmp
das
jecxz
and
out
adc
mov
hlt
or
sub
pop
jmp
cmp
xchg
sub
rcl
mov
fcmovu
daa
or
inc
mov
aad
in
mov
cmpsb
or
test
mov
dec
lods
repnz
add
or
push
insl
pop
or
movsb
adc
insl
frstor
dec
lahf
insl
rcrl
push
sub
cmp
in
add
add
mov
xchg
add
aas
out
test
pop
sahf
xor
jb
daa
shr
ds
std
jo
fcoml
outsb
or
fidivrs
mov
stos
mov
add
cltd
nop
popf
jae
pop
pop
mov
xor
jbe
fbstp
sub
pop
out
adcb
lret
xchg
dec
sub
pop
ror
push
push
push
lock
dec
mov
xchg
pop
and
add
mov
daa
inc
lret
fs
int3
inc
and
xor
push
inc
icebp
jnp
shlb
out
arpl
mov
mov
sub
sub
cmp
push
dec
mov
int3
push
jno
xchg
mov
dec
inc
stos
ja
sarb
jmp
fbstp
mov
faddl
pop
mov
lahf
xchg
jnp
daa
and
mov
or
insl
push
xchg
fimull
jne
iret
arpl
xchg
sub
jno
mov
fdivs
fsubrp
cltd
xchg
call
add
ljmp
rcll
fbstp
outsl
lret
mov
orl
leave
sbb
call
inc
mov
mov
testl
shr
sarl
xchg
and
sbbb
test
jnp
ss
int3
push
pop
fsubl
sbb
dec
inc
popa
pop
mov
addr16
push
outsb
pop
imul
mov
fwait
or
movsb
or
out
pop
mov
rcll
jge
rclb
jo
xchg
jecxz
scas
mov
repz
loopne
adc
pop
jno
cs
stc
jmp
jecxz
test
xchg
subb
mov
nop
lock
lock
mov
idivl
add
pextrw
jbe
in
xchg
xlat
popf
cmpsl
icebp
andl
mov
dec
sbb
xor
fnsave
stos
mov
mov
mov
mov
or
cmp
xchg
js
jp
sbb
mov
dec
fdivrs
sub
dec
fwait
add
int
fwait
repz
leave
and
sub
fmuls
push
jmp
or
outsb
outsb
fwait
mov
lea
mov
aam
test
mov
gs
mov
lock
dec
jb
mul
sti
in
outsb
push
add
pop
mov
shrl
mov
add
pop
out
movsb
in
lock
cltd
das
pop
stos
aas
push
lods
jg
ja
or
jnp
sub
and
adc
and
inc
inc
xchg
fstp
filds
xor
pop
test
pop
aam
aas
jno
or
mov
test
sub
cmp
in
outsl
xchg
sbb
xor
jp
lahf
mov
aaa
movsl
clc
das
ret
and
arpl
loopne,pt
xchg
mov
mov
mov
mov
adcl
imull
mov
mov
sub
and
in
mov
sbb
loope
subl
jnp
push
imul
sbb
aam
rol
push
cmp
icebp
mov
push
fisubl
pop
icebp
lcall
xchg
andl
push
ss
sti
mov
push
fcmovbe
or
repnz
mov
lret
mov
ja
enter
popf
lock
xorl
inc
and
push
sub
dec
fsubrs
or
mov
xlat
movsl
inc
push
mov
aas
xchg
xchg
push
pusha
sbb
fidivl
dec
jl
and
mov
mov
sub
cmp
aaa
jbe
cmpsl
aam
ficoml
sbb
mov
inc
pop
das
rorb
sub
std
sub
sub
fcmovnu
orb
movl
sub
push
adc
loop
mov
push
dec
imull
aad
jns
std
movsb
scas
fisubl
fcmovu
arpl
iret
jno
cmp
ret
adc
sub
mov
fdivs
jecxz
les
add
cmpsl
xchg
lcall
xor
xchg
mov
push
test
mov
ret
insl
mov
out
pop
cli
in
fldt
jle
prefetch
jmp
pop
je
call
mov
test
mov
adcl
test
gs
out
js
lods
mov
js
sub
test
jecxz
mov
sar
call
adc
inc
xor
rorl
push
sub
mov
lods
sbb
xor
lds
frndint
push
push
and
repz
lock
fs
dec
mov
xchg
pop
scas
rep
push
out
jne
hlt
sub
push
pushf
insl
inc
jle
inc
stos
pushf
data16
filds
pop
aam
xor
add
fsubs
iret
ds
cmpsb
sub
mov
fbld
pop
fldcw
outsl
or
cmp
aam
out
dec
mov
cmpsb
mov
or
jl
fildl
and
jnp
lcall
lahf
orl
mov
xchg
ds
dec
mov
mov
cs
fiadds
cmc
aas
aad
inc
fists
sbbl
mov
cmp
lahf
inc
add
xchg
int
jno
xor
cmp
mov
add
jns
cld
lcall
cmpsl
pop
xor
xor
xchg
je
lods
add
push
push
mov
addl
loopne
out
cmpsl
andb
les
pop
inc
repz
ret
adc
inc
loop
dec
xchg
mov
mov
fcoml
in
lock
or
movsb
push
mov
cld
inc
mov
xchg
pop
fistl
sub
dec
cs
mov
lea
xor
lea
xor
insl
sub
sub
jl
movsb
mov
push
scas
je
or
push
sbb
cs
or
mov
fildl
sub
in
insb
ljmp
push
pop
shrl
push
sbb
rclb
mov
call
stc
adc
push
jb
not
xorb
lods
jno
loop
push
in
sub
push
and
cmp
sub
and
mov
mov
mov
aam
sbb
and
insl
jmp
and
jecxz
subl
pop
fcoms
inc
xor
mov
popa
jg
into
and
loop
dec
insl
jb
push
mov
pusha
xchg
push
ret
mov
push
cld
lea
push
lret
cwtl
add
gs
jb
cli
movsl
out
mov
cli
dec
push
out
or
or
dec
mov
or
jge
mov
push
orl
jp
push
loop
mov
add
mov
call
fidivrs
int
sub
xchg
loop
mov
int3
ret
pop
add
inc
fidivrs
add
arpl
cld
inc
adcb
aas
cld
bound
mov
push
add
mov
int3
mov
or
jbe
and
movsb
mov
lods
outsb
sub
mov
inc
decb
andb
or
andl
xor
push
mov
and
pop
js
cs
mov
ss
fnstsw
inc
dec
push
movsb
cmp
cmp
mov
push
add
push
ret
sub
mov
or
mov
leave
fistps
mov
test
jno
imul
or
or
sub
and
imul
nop
enter
jo
sub
scas
sahf
or
ja
dec
imul
lock
in
sbb
xor
fdiv
fildll
cmpb
fists
inc
or
outsl
fisubs
mov
xchg
test
dec
lea
xchg
inc
dec
popa
in
insb
pusha
cs
mov
hlt
inc
dec
xchg
and
jbe
jnp
xchg
mov
sbb
ficomps
sub
les
mov
xchg
jg
call
leave
pop
sbb
testl
jbe
lea
xor
je
xor
mov
mov
add
xchg
jle
mov
mov
ds
aad
xchg
xor
jnp
in
xlat
dec
and
dec
cmp
jl
sub
xchg
insl
and
and
sbb
jnp
lds
les
jae
test
in
call
mov
mov
lock
pusha
pop
cli
repz
mov
sti
cmp
lahf
fwait
movsl
pop
scas
fld
or
in
mov
imul
cmpsb
or
adc
adc
lods
pusha
inc
jae
inc
xchg
outsl
adc
lock
cmc
scas
and
cmp
fisttpll
adc
lret
adc
js
lock
inc
rorl
mov
shr
mov
and
adc
cmp
push
add
xor
call
add
pop
sbb
jle
cmp
repnz
ja
mov
pop
fcomip
ljmp
das
inc
insl
mov
lcall
gs
test
fists
ljmp
cmpsb
mov
xchg
jns
or
test
dec
cmp
sub
fs
jecxz
sbb
leave
push
push
jno
fsubr
cli
cmp
std
adc
and
daa
push
xchg
enter
jmp
push
stc
call
stc
jle
pop
mov
jno
adc
cmp
or
dec
test
fs
inc
je
sub
xorl
and
push
adc
add
test
add
outsl
sti
ficoml
mov
push
cmp
xchg
xor
xchg
lret
mov
cs
push
stc
xchg
jo
xor
stos
in
sbb
xchg
inc
or
pusha
loope
lret
lock
sbb
push
fwait
stos
je
mov
dec
in
add
sbb
lods
loopne
or
and
js
mov
fwait
mov
jae
xchg
cmp
stc
mov
fs
inc
repnz
lea
stc
data16
ljmp
inc
cmp
mov
pop
out
cmp
cmp
mov
lret
pop
rorl
or
mov
sti
loopne
adc
xchg
pop
popf
sub
test
aam
inc
mov
mov
icebp
cmp
or
xchg
into
aas
jmp
stos
rorl
repz
test
push
xchg
maxps
rcl
xchg
mov
inc
orb
cmp
adc
or
movsl
fs
loope
enter
jae
and
ljmp
int
xchg
repnz
dec
fisubrl
dec
inc
cld
push
jge
cli
aad
xchg
test
lods
jl
arpl
stos
std
test
fmull
cmp
inc
loope
sbb
loopne
dec
pusha
jb
lret
and
nop
jb
xlat
dec
jge
mov
out
das
insl
xchg
stos
roll
xor
fidivs
or
xchg
popa
int
pop
dec
iret
icebp
or
xlat
ss
call
add
je
add
lods
mov
jae
mov
jo
es
inc
dec
fmull
add
jl
les
fs
push
or
mov
push
fcomps
push
pop
inc
popa
roll
push
pop
aaa
aas
sub
cmpsb
and
cltd
leave
jns
and
jae
shrl
int3
xchg
lcall
imul
aad
aaa
and
aas
ja
mov
aaa
aam
in
jb
bound
adc
out
mov
mov
rorb
out
push
lahf
dec
or
mov
sbb
pop
jb
fcmovnbe
loop
dec
adc
and
add
mov
inc
adc
call
cld
out
fcoms
outsl
popa
jg
inc
test
xor
dec
lea
xor
pop
xor
lea
aam
popa
jl
idivb
sbb
test
dec
sbb
test
sar
jecxz
int
add
push
stos
push
loope
enter
fimuls
cmpb
ret
push
cltd
mov
mov
popa
add
or
xor
sbb
mov
mov
jb
lahf
mov
movsb
xchg
xchg
dec
jg
into
xor
dec
loope
xchg
inc
scas
pusha
or
pop
push
pop
arpl
or
jnp
mov
leave
in
and
dec
ret
lret
adc
out
xchg
lea
dec
repnz
dec
out
test
xor
inc
or
push
jl
ljmp
dec
cmc
xchg
cltd
rclb
mov
mov
sti
fmuls
jg
je
lods
and
jno
push
fldcw
hlt
cmp
mov
js
jg
xchg
and
mov
rclb
jmp
stc
jns
dec
lods
shrb
roll
mov
sbb
jns
mov
jg
shl
out
jno
pop
cmpb
ret
std
mov
and
ret
mov
cmp
movsb
lods
or
mov
cmp
xor
leave
sbb
lahf
sub
pop
sub
shlb
imul
mov
aam
mov
adc
ret
ss
ss
flds
mov
in
popa
in
mov
insb
jno
and
pushf
lock
pop
mov
lock
pop
test
lret
pushf
lock
and
cmpsl
pusha
add
std
loope
adc
outsb
lods
out
repnz
mov
mov
fisttpll
sahf
fisubs
jge
mov
dec
adc
jae
and
jno
fwait
adcl
fisubrl
dec
jno
sbb
fs
fwait
mov
push
ds
cmp
cmc
loope
cmc
mov
mov
add
pop
dec
mov
popa
sbb
inc
sahf
sbb
aam
and
inc
mov
xchg
adc
icebp
pop
push
je
push
mov
das
mov
mov
pushf
aad
test
jnp
fs
cli
andb
shl
fstp
movl
jg
out
hlt
mov
ror
cli
insl
addl
scas
mov
mov
add
test
push
fimuls
push
popf
rolb
cld
fmuls
daa
jmp
fimull
jb
aas
fldenv
cs
incb
das
iret
sub
push
xchg
mov
push
sbb
nop
or
int
xchg
jg
mov
push
add
cli
dec
dec
ret
pop
sti
aas
cmp
or
jge
cmp
idivl
daa
mov
xchg
lahf
shll
add
std
pushf
mov
or
adc
xchg
fsubl
dec
jae
test
xchg
sti
or
dec
xlat
push
mov
lret
lods
sub
aad
push
repz
out
xor
sub
cwtl
es
iret
jae
push
insl
mov
popf
xor
js
jp
aaa
inc
mov
push
inc
and
push
dec
cmp
mov
lahf
push
jl
in
mov
or
shrl
imul
inc
das
mov
sub
mov
je
mov
xchg
mov
pop
inc
icebp
sbb
call
pusha
aad
xor
jb
jne
and
jne
mov
imul
data16
xor
cmpsl
enter
rcrb
out
cli
pop
addr16
mov
in
mov
mov
mov
fcomip
sahf
stos
lcall
push
or
scas
sub
outsb
into
pushf
inc
stos
and
ja
call
in
mov
pushf
push
dec
inc
sub
out
in
movsb
cwtl
hlt
call
lods
push
inc
dec
hlt
sbb
or
mov
ret
jge
sub
fimull
test
jl
sub
mov
popf
push
pop
jp
inc
mov
fidivrl
outsl
jl
mov
fsubrl
inc
jle
add
xchg
ss
inc
data16
add
push
scas
shll
cmc
clc
scas
enter
je
es
cmp
out
les
mov
cmp
mov
ja
pop
in
nop
pop
cld
cltd
fisttpl
out
pop
test
dec
mov
dec
jmp
movsl
inc
loop
bound
cmp
test
add
out
test
pop
dec
out
out
lret
push
pop
adc
push
sahf
add
inc
push
es
or
enter
incl
mov
aaa
in
and
fimuls
sbb
imul
out
mov
scas
jbe
leave
mov
jne
or
mov
sbb
mull
sbb
push
jno
dec
lock
pushf
clc
bound
insb
call
xchg
mov
mov
out
sub
pop
testb
ret
sub
imul
push
push
les
cmp
push
mov
cmp
les
lods
xor
dec
lea
jo
push
and
sub
fistps
mul
dec
sbb
jo
or
xor
imul
aam
notl
jne
mov
inc
rorb
add
xor
dec
cs
sbb
adc
jmp
mov
fs
xor
cmpsb
leave
adc
inc
pop
scas
adc
pop
rorl
mov
jecxz
outsl
dec
stos
clc
mov
xor
ljmp
daa
push
mov
adc
andb
aaa
lods
xchg
mov
adc
imul
sub
movsb
cmp
pop
pop
shll
jne
movsl
dec
mov
lods
mov
loope
adc
push
jmp
sub
cmpsl
dec
mov
jge
push
cmp
jl
mov
xchg
jp
pop
rcll
and
loope
dec
adc
out
test
mov
aaa
stc
sbb
cmp
rorb
mov
aam
lds
cmp
in
sbb
adc
sbb
sub
imul
repnz
pop
xchg
pushf
gs
xchg
adcl
jge
jmp
sbb
loope
scas
sbb
mov
cwtl
not
jbe
sbb
jne
ds
ror
sbb
cltd
lret
pop
dec
inc
jne
ret
push
arpl
push
mov
adc
sbb
and
shl
into
enter
mov
jle
nop
mov
xor
cld
cli
fs
fsin
mov
adc
mov
out
shll
dec
pop
mull
je
bound
sbb
dec
dec
lret
adc
outsl
mov
pop
push
vrcp14ss
test
xor
sub
pop
mov
inc
or
test
dec
and
sub
cltd
sub
cmp
mov
sbb
es
cld
pop
popl
je
mov
rolb
adc
xchg
out
sub
push
scas
mov
shrb
loope,pn
mov
xor
mov
sub
out
out
outsl
cmp
andb
sti
repz
push
into
es
out
fwait
ja
push
sbb
dec
push
jae
mov
andb
jg
inc
mov
xchg
pop
dec
cs
icebp
xor
call
jmp
in
lods
arpl
sub
pushf
xchg
mov
cmp
lret
add
loope
push
cmc
sub
dec
sarb
adc
sub
push
sbb
lcall
adc
lret
aam
adc
movsl
xchg
repnz
mov
scas
jo
aaa
jbe
imul
dec
movsl
inc
mov
sub
xchg
das
dec
insb
jmp
shrl
aaa
jbe
push
push
test
mov
addr16
ret
adc
mov
xlat
test
jecxz
aam
inc
int3
aad
mov
mov
gs
rcl
xchg
rorl
or
jns
xchg
iret
mov
mov
mov
movsb
ficoml
sbb
repnz
andl
adc
gs
xor
je
push
push
inc
cmp
or
jmp
mov
mov
lods
fldt
mov
and
test
mov
fwait
push
data16
mov
js
inc
jg
hlt
mov
or
mov
dec
call
push
pop
push
mov
xlat
pop
loope
sbb
xchg
mov
adc
add
mov
aaa
imul
mov
ljmp
jp
bound
cmp
xor
pop
mov
add
mov
pop
enter
and
sub
jmp
push
adc
sub
push
sti
pop
jae
stos
outsl
and
mov
cli
mov
scas
xchg
mov
data16
pop
mov
testl
unpcklps
icebp
sbb
iret
sub
fbld
repz
cmp
adc
sbb
incl
add
mov
jmp
clc
inc
repnz
stc
sbb
add
ja
test
ffree
mov
rorl
cmpsb
adc
jno
aam
dec
in
int
stc
test
outsb
mov
shll
cwtl
add
push
jb
xlat
sub
jmp
xor
mov
jl
push
sarl
cmp
add
je
cmp
or
ficoml
pop
xchg
sti
push
xor
js
fnsave
sub
icebp
dec
pop
imul
inc
stos
add
push
jbe
sbb
inc
add
mov
orb
mov
lahf
in
dec
mov
into
sbb
mov
xor
sub
iret
dec
pop
mov
arpl
movsl
imul
lret
inc
xchg
lock
jle
fs
and
add
xor
sub
fidivs
pop
mov
pop
jp
cmpsb
in
pop
xchg
lahf
cmp
shrl
lret
push
test
pop
aad
sub
sub
add
jl
jae
fldenv
pop
adc
subb
gs
pop
add
into
inc
mov
divb
adc
sbb
or
ret
sub
icebp
cmpb
jae
fidivl
mov
negb
pop
fwait
push
stos
xchg
adc
in
loope
cmpsl
stos
inc
icebp
xchg
pop
loopne
xor
inc
insb
and
daa
fmuls
xlat
je
lods
inc
sahf
push
sbb
inc
push
xchg
sub
int
inc
adc
mov
aas
xor
daa
dec
push
push
pop
push
xor
fnstcw
shrb
dec
or
and
insb
mov
movsl
lret
xchg
adc
std
insb
daa
xchg
scas
inc
xlat
negl
mov
scas
pop
push
scas
mulb
xor
dec
mov
hlt
xor
dec
mov
aam
mov
pushf
xchg
xchg
dec
jge
jb
repz
enter
repz
clc
mov
push
push
jecxz
pop
jbe
inc
sti
sbb
cmp
nop
jno
mov
dec
or
mov
push
adc
add
xchg
cmp
lret
inc
ret
cmc
pop
ret
cmp
ljmp
push
ds
ds
icebp
cmp
pushf
dec
clc
add
out
loopne
sub
loopne
sub
xor
lds
lret
xor
mull
or
mov
dec
adc
std
je
adc
clc
xchg
popa
ret
outsl
ds
push
sbb
iret
out
in
test
loop,pt
adc
xchg
dec
mov
mov
ret
add
xor
add
iret
sub
insl
lea
icebp
or
mov
das
je
lods
mov
add
mov
fldenv
pop
pop
cmc
test
dec
xchg
xor
ja
pop
adcl
pushf
xchg
ret
mov
lret
movsb
or
ljmp
fimull
fisubrl
leave
std
call
roll
test
add
jnp
mov
jle
js
stc
jne
mov
int3
fnstcw
test
shrl
xlat
sub
imul
repz
mov
std
loop
xor
cmp
or
cmc
adc
inc
xor
mov
lock
mov
daa
push
cld
cmp
jno
gs
sbb
and
cmpsb
repz
out
or
mov
fiadds
sub
and
dec
out
sub
movsb
pop
lea
fldt
jge,pn
adc
lock
daa
aaa
dec
mov
mov
outsl
testl
fs
inc
adc
mov
mov
insl
jg
je
mov
js
jb
pop
sbb
clc
pusha
jl
outsb
xchg
test
push
inc
add
and
jno
mov
inc
insl
std
test
dec
lods
xchg
push
es
ja
jnp
inc
mov
jno
es
mov
ljmp
gs
mov
mov
pop
push
call
mov
cmp
jecxz
or
ds
loopne
jmp
cmp
push
scas
push
arpl
dec
cmp
test
add
rcrl
push
test
lret
cwtl
or
cwtl
lcall
cmp
mov
add
loope
scas
clc
lock
sub
lock
and
xor
xchg
and
lret
fcmovne
dec
lcall
pop
adc
cmpsl
mov
js
or
xlat
out
adc
fidivrl
jge
mov
call
and
hlt
ret
lret
pop
mov
mov
les
mov
push
lret
arpl
mov
jge
inc
outsl
dec
fstpt
out
sahf
push
pop
add
std
xchg
lcall
adc
xchg
jae,pn
push
rcrb
dec
mov
jbe
mov
push
add
fxam
inc
test
cli
inc
add
inc
ficompl
push
mov
aaa
sbb
pop
pop
cmp
sarl
dec
mov
lods
sti
or
push
stos
pop
xlat
popa
xchg
outsl
xor
sbb
sti
ljmp
or
pop
les
aad
jns
or
xorl
sbb
es
stc
es
rcr
push
sub
lock
or
pushf
testl
xchg
adc
cmp
jno
mov
sahf
test
stos
pop
push
or
mov
sub
jne
mov
add
push
or
cmp
daa
dec
iret
iret
inc
sbbb
mov
lahf
or
fs
jns
imul
or
or
add
ds
fcompl
xchg
dec
push
cltd
and
xchg
lods
or
xlat
cmpsl
push
fisttpll
lods
ficomps
add
jg
xchg
sub
pop
jle
mov
add
aad
jb
repnz
xor
test
hlt
scas
and
andps
push
mov
clc
mov
pop
xchg
pop
rolb
decl
icebp
pop
xchg
mov
out
sub
and
lods
ficoms
inc
dec
lahf
loopne
shll
sub
stos
adc
fisttpl
mov
xor
std
and
or
mov
call
negb
adcl
xchg
ljmp
arpl
mov
dec
into
jle
and
cmp
cli
mov
repz
popf
ret
dec
cmc
dec
jns
dec
mov
loopne
jecxz
inc
arpl
jmp
scas
ret
lahf
addl
add
cmp
mov
xchg
cmp
pop
aaa
dec
lods
dec
aaa
std
pusha
dec
in
pushf
mov
lods
push
and
jno
in
es
dec
xor
sub
inc
mov
out
cwtl
arpl
addr16
in
stc
inc
mov
cmp
lret
leave
add
mov
imul
js
out
test
in
pop
insl
and
jecxz
xchg
jge
movsl
mov
push
xchg
dec
pop
jle
add
mov
jb
lret
shl
gs
pop
fidivl
cmpsl
adc
inc
adc
or
test
out
in
and
out
bswap
mov
adc
sahf
cmpsl
push
or
mov
mov
lods
and
ss
mov
xchg
pop
or
idivb
mov
out
mov
aas
cltd
push
ds
out
or
xor
mov
sbb
mov
bound
lock
js
pop
lcall
mov
pop
mov
stos
das
dec
push
jns
pop
repnz
and
sti
xchg
sub
adc
dec
jl
cs
cmp
leave
insb
xchg
faddl
test
mov
cltd
jbe,pn
jb
jbe
pop
ror
repz
jecxz
mov
xchg
mov
clc
jo
inc
sbb
addr16
mov
hlt
dec
inc
or
lcall
mov
mov
ljmp
je
cmp
fdivs
push
out
xchg
mov
stos
or
jno
adc
mov
cmc
add
in
divb
stos
call
dec
lods
leave
mov
jb
test
test
out
not
adc
loop
int
cmp
mov
fidivl
jb
addr16
push
push
jecxz
movsb
fwait
jns
mov
jbe
les
jb
pop
jecxz
stos
repz
or
insb
in
aas
and
mov
addr16
rol
dec
cwtl
fs
sti
jns
lcall
and
add
stc
cmp
xor
mov
jbe
push
je
rorl
sub
pop
leave
mov
pop
in
enter
sbb
in
jb
scas
je
adc
push
xchg
into
sub
shl
clc
cmp
cltd
dec
push
inc
sub
sbb
sarb
pushf
insb
sub
mov
and
or
xchg
mov
push
mov
jmp
xchg
lcall
xor
mov
pop
pop
test
dec
test
in
fsubl
mov
sub
js
jne
movsb
sub
test
jmp
dec
fs
ljmp
adc
stos
out
adc
leave
js
rorl
rep
add
mov
or
cmp
cmpl
inc
inc
jo
idivb
inc
repnz
insl
cwtl
sbb
in
rorl
dec
rcrb
add
mov
and
test
cmpsb
into
adc
lea
bound
push
in
xor
xlat
pop
and
lea
mov
xlat
mov
rcl
mov
imul
sub
arpl
push
subb
movsl
and
dec
mov
pop
jae
cmp
imul
inc
inc
test
lea
fstpl
orl
je
cld
cmp
add
arpl
cmc
orl
lods
xor
scas
pop
mov
xchg
cmpsl
cmp
pop
adc
mov
mov
in
lret
loop
test
bound
icebp
mov
dec
scas
add
arpl
out
inc
clc
sub
dec
xor
push
movsb
add
jmp
je
hlt
jne
stos
int
mov
add
cmp
mov
mov
add
mov
stos
jg
sbb
xchg
or
cs
mov
inc
push
shll
out
sti
adc
leave
push
jae
xor
bts
out
or
sub
add
mov
outsb
jno
mov
xor
sbb
inc
mov
jnp
mov
mov
mov
mov
aad
rcrl
mov
sarb
mov
lret
clc
and
mov
cli
xor
and
inc
mov
mov
cli
xlat
dec
push
daa
hlt
and
adc
mov
or
mul
sbb
push
xchg
in
or
out
test
cmp
incb
jnp
sbb
lods
js
jae
mov
aas
xor
fs
fs
add
cli
cwtl
push
mov
inc
je
subb
mov
flds
dec
mov
jl
mov
sbb
mov
pop
pushf
ret
sub
cli
push
and
pushf
push
and
cld
int3
jne
iret
jno
test
stos
push
fucomp
dec
sbb
mov
inc
sbb
push
stos
sbb
in
fs
add
jne
mov
ljmp
mov
pop
mov
in
out
add
push
ficomps
fidivs
or
sbb
insl
jge
cmp
adc
hlt
das
push
fbld
mov
insl
mov
xlat
fs
lods
mov
stos
in
fisubl
jno
fldcw
jb
repnz
sub
cmp
ret
popa
loop
icebp
push
std
push
ret
xor
push
lahf
and
jnp
out
jmp
mov
cs
in
hlt
sbb
inc
scas
insb
pop
rcll
xchg
mov
stos
cmp
adc
mov
popf
cmpsl
mov
mov
repnz
xor
pop
dec
movd
outsl
dec
jle
negb
sbb
andl
add
lods
test
add
mov
mov
xchg
mov
movsb
jge
add
add
inc
or
adc
aad
mov
inc
rol
jno
hlt
adc
imul
data16
ss
aaa
jo
cs
fnstcw
mov
push
cmc
add
loope
pop
jns
clc
ret
rol
mov
aas
insb
xor
bound
mov
mov
pop
dec
push
add
mov
jg
push
sbb
test
mov
xor
add
lds
ss
mov
jl
push
cwtl
repz
outsl
xchg
roll
gs
add
pop
jge
pop
jnp
loop
add
xchg
aaa
inc
sub
jecxz
pavgb
jmp
jo
les
sti
xchg
or
inc
das
insl
push
outsb
orb
xor
repnz
add
jle
fildll
jecxz
popf
fisttpll
test
dec
adc
mov
or
popa
cmp
insl
insl
inc
ja
inc
fadd
xor
mov
adc
sbb
dec
cs
inc
jne,pt
call
out
outsl
jmp
mov
jecxz
jmp
inc
loop
cmc
cltd
adc
adc
enter
out
shlb
mov
sub
xor
in
sub
or
cmp
sbb
sub
and
loope
mov
insl
xor
negl
adc
sub
aas
dec
andl
popf
repz
scas
mov
cmp
sub
mov
mov
adc
dec
out
adc
aaa
lock
add
filds
pop
inc
in
xchg
imul
out
sarl
fidivs
jg
divb
loop
stos
cmp
jge
movsb
mov
push
sbb
cli
jno
pop
pop
inc
testb
inc
js
push
jmp
mov
sub
cmp
mov
cmp
dec
cmpb
and
jns
gs
fwait
loop
in
fsubl
sbb
jae
jae
in
test
jp
adc
ss
sub
xchg
and
jecxz
mov
pop
mov
pushf
mov
push
xchg
mov
fmuls
xlat
in
imul
adc
inc
or
cltd
in
leave
sbb
fst
mov
out
xchg
mov
cmp
rclb
add
lea
movsl
mov
fstps
xor
pop
mov
ds
je
pusha
aaa
bound
enter
sub
cmp
sub
mov
mov
cwtl
and
sub
test
leave
out
ss
int3
test
lea
inc
out
pop
push
mov
cmp
jecxz
fildl
mov
repz
cmp
cltd
es
ret
lgs
divb
stos
cmp
or
mov
xor
xchg
dec
cmc
xchg
sti
mov
xor
jns
pop
test
inc
stc
lret
and
add
clc
popa
push
je
repz
or
cmpsb
ficompl
cmpsl
test
testl
fldl2e
movsl
nop
mov
inc
stos
mov
es
mov
loop
rcl
lret
push
enter
cmp
mov
test
scas
decl
sbb
adc
xor
jns
push
and
jns
es
int
insb
mov
and
jo
mov
jbe
pop
jns
sub
xor
jl
in
push
sbb
add
orl
test
fisubl
ss
test
xchg
ljmp
mov
or
jp
in
lods
adc
or
test
cmp
jno
popa
fs
nop
jmp
or
subb
mov
popf
pop
out
repnz
push
out
cli
cmc
mov
inc
mov
dec
sbb
scas
pop
cmpsl
in
outsb
mov
adc
pop
dec
mov
xor
rcll
mov
pop
incb
iret
and
aad
xchg
and
dec
cmpb
mov
xchg
mov
test
test
adc
and
add
jge
lret
mov
and
fwait
addr16
push
mov
imul
cmc
aam
cwtl
and
inc
pop
shll
sub
pop
xchg
cmp
movsb
and
rol
cmc
or
or
push
mov
mov
loopne
xor
movsl
imul
push
sbbl
popa
lahf
fstp
jnp
mov
rcll
pop
xchg
sub
cmp
lock
ja
xchg
scas
addr16
mulb
ja
orb
orb
and
dec
daa
sbb
pop
xor
jmp
add
cwtl
ja
push
xor
cmp
mov
lcall
mov
and
fstp
aam
push
lock
bound
jae
testb
outsl
sbb
pusha
shrl
popf
xchg
lds
mov
test
hlt
xor
cmp
inc
xchg
xchg
push
test
jo
mov
cmp
push
shlb
sti
scas
orl
and
dec
imul
call
cmp
subb
xor
cltd
out
fs
mov
mov
cmp
or
xlat
shlb
pop
cmpsl
insb
mov
add
int3
dec
iret
sbb
je
dec
jg
icebp
mov
jp
adc
mov
sti
mov
dec
ljmp
testb
and
mov
pop
push
rclb
xor
xchg
repz
rclb
cmc
cmp
les
repnz
sub
imul
insl
dec
sbb
lds
mull
lds
ret
xchg
cmpsl
push
aad
dec
xor
movsb
dec
adc
movsb
lock
insb
ds
jmp
addr16
mov
adc
cmp
mov
and
ss
sub
out
stos
movsb
enter
jae
les
notb
addl
out
and
or
addl
pushf
xor
aaa
aam
sbb
notl
js
mov
sbb
rol
add
add
ljmp
xchg
add
test
shlb
push
mov
pushf
adc
clc
aam
jne,pn
mov
pop
rcrb
push
mov
jne
addl
cmpsl
ja
cwtl
adcl
adc
and
xor
mov
push
andb
test
jl
test
arpl
ja
xchg
pop
in
xchg
sti
les
pop
out
je
aaa
cld
and
cs
int
push
and
pop
mov
cltd
mov
bound
mov
fisttps
add
ss
pop
and
mov
pop
std
bound
add
xchg
sbb
fs
scas
jmp
or
mov
iret
jecxz
jge
cltd
fcoml
call
add
mov
daa
mov
push
out
sbbl
mov
jno
sti
lea
imul
adc
lret
jne
push
adc
std
mov
loope
into
or
mov
mov
pop
into
lret
mov
out
popf
stos
icebp
sub
nop
push
push
ss
cltd
ja
dec
push
filds
ljmp
fistpl
pop
or
pop
scas
mov
inc
rep
sbb
ds
push
lcall
pop
pop
popf
mov
xchg
jnp
lods
in
aas
dec
ja
jmp
mov
sbb
in
shll
sbb
and
dec
mov
or
testb
adc
sahf
mov
inc
xlat
push
xchg
ror
cwtl
and
popa
mov
mov
popa
mov
dec
cmp
sbb
lds
repnz
cmp
fwait
add
xchg
mov
mov
push
mov
mov
scas
and
xchg
in
sub
xchg
push
out
fildll
jns
cmp
mov
fcoml
dec
fs
lock
mov
adc
sti
jle
adc
sbb
inc
sub
push
jg
jo
jmp
and
pop
dec
call
ja
push
pop
cmp
and
mov
cmp
adc
cmp
cmp
mov
mov
jmp
xor
enter
cmp
mov
cwtl
mov
mov
cmpsl
mov
shll
pop
sbb
dec
xchg
sbb
inc
sbb
xchg
adc
xor
in
ja
icebp
mov
sarb
lods
movsb
insb
icebp
inc
xchg
enter
test
cmpsl
fwait
cmp
adcb
enter
jno
test
adc
mov
aad
xor
arpl
dec
in
in
je
popa
aaa
out
cwtl
push
inc
xchg
lcall
mov
jno
arpl
test
testb
push
cmp
cld
or
jp
mov
mov
jmp
icebp
mov
call
fsubp
jmp
mov
fsubr
outsb
inc
insl
adc
notb
pusha
mov
cmp
shll
dec
sub
push
test
ja
xchg
jnp
int3
scas
dec
je
xchg
pop
std
gs
lods
xor
inc
aad
lds
mov
jb
addr16
cmpsb
jb
cmp
int3
push
mov
jnp
sub
xor
and
adc
ficompl
xor
ret
stos
ret
ja
fcoms
shll
sti
cmp
cmpsb
add
addr16
and
inc
ss
xor
mov
mov
add
jecxz
xchg
pop
mov
add
xchg
inc
cmp
sub
repz
sub
lcall
sbb
push
ljmp
gs
adc
push
adc
in
and
jg
loop
jmp
fs
jg
in
popf
mov
xchg
cmp
test
xchg
scas
xchg
popa
arpl
xchg
and
push
or
mov
ljmp
out
fistpll
das
pop
mov
fstpt
sub
jo
imul
cmp
mov
pop
int3
sbb
adc
push
decl
cwtl
mov
xor
test
lods
inc
popfw
mov
mov
incl
pop
push
arpl
mov
adc
jno
jp
lds
in
mov
sub
xchg
inc
dec
dec
insl
adc
mov
jmp
mov
aam
xchg
aaa
pop
and
lods
mov
push
xchg
les
lcall
das
ljmp
in
int
mov
adc
test
adc
cld
cmp
adc
push
pop
es
fidivl
xchg
pop
fidivrl
pop
inc
gs
pop
inc
into
or
adc
out
mov
push
into
push
sbb
ror
loope
jbe
imul
cmp
insl
rclb
scas
add
rcl
scas
push
lds
mov
int3
dec
pop
xchg
pop
xlat
lahf
in
ja
pop
lret
xchg
push
ret
sub
movsl
mov
lds
cmc
stos
test
pop
mov
cmpsl
xchg
inc
xchg
ds
je
imul
loope
pop
sub
jns
cmp
adcl
inc
jp
jg
jbe
lods
xor
int
fadds
mov
fisttps
out
mov
or
in
test
mov
xlat
icebp
jbe
add
pusha
push
cli
cmp
scas
fwait
popf
in
or
ljmp
into
sbb
out
jmp
dec
mov
mov
mov
dec
lock
xchg
mov
jne
fmull
das
daa
pop
imul
dec
sahf
or
loopne
into
or
cmpb
xchg
cltd
pop
cli
jno
dec
mov
mov
push
add
outsb
imul
out
xchg
and
add
add
lods
sbb
in
add
int
scas
loop
scas
fildl
mov
and
fidivl
cmpsb
lcall
jbe
mov
add
in
cmp
jmp
cltd
adc
adc
push
aaa
xor
mov
or
testb
es
fidivl
inc
es
jae
rcr
sbb
jge
out
push
mov
fldenv
in
loopne
xor
ljmp
sbb
outsl
aas
push
push
inc
fisttps
jnp
push
imul
fsubr
ret
loopne
aam
dec
jnp
mov
inc
cltd
loope,pt
sbb
inc
imul
fs
xchg
ret
rorl
arpl
mov
xlat
jnp
sub
in
add
shll
adc
loopne
add
jl
test
das
xlat
and
add
or
arpl
les
ss
mov
jae
sub
sarl
int
in
xchg
push
ret
sbb
ss
dec
push
cmp
test
mov
or
jns
push
movb
pop
int
fwait
sub
les
loope
add
sbb
jmp
data16
pop
mov
sub
stc
addb
loopne
notl
and
inc
gs
out
adc
outsb
push
push
add
dec
out
mov
xchg
and
packsswb
or
xlat
movsb
scas
aaa
inc
add
dec
fistps
and
inc
push
jno
mov
pop
popw
sbb
dec
and
in
pop
mov
sti
imul
mov
nop
xor
mov
pop
lea
mov
adc
or
pop
inc
cmc
js
test
cmp
sbb
in
ljmp
shr
pop
insl
repz
hlt
pop
and
enter
and
rcl
addr16
jge
xchg
dec
lods
cmpsb
pop
cmp
into
mov
and
mov
push
add
mov
es
popf
js
cmp
or
test
test
lahf
sarb
pushf
push
push
inc
ss
inc
mov
in
ljmp
in
fs
pop
mov
insb
inc
inc
mov
dec
les
add
lds
or
jmp
inc
mov
repnz
xchg
xorb
dec
sbb
frstor
addr16
pop
adc
test
xchg
sbb
in
xor
mov
les
int3
mov
cmpl
nop
xchg
call
xorl
pop
dec
bts
in
jno
jecxz
mov
out
outsb
pop
mov
inc
nop
dec
push
movsb
sahf
insl
data16
rcrb
pop
cmp
mov
icebp
xor
sbb
jns
negb
aam
leave
inc
inc
mov
sbb
jne
and
aas
mov
cmpsb
loope
aaa
int
test
fs
xor
loopne
addr16
mov
repz
aaa
pop
xchg
ret
pop
pop
loopne
ljmp
cs
adc
dec
arpl
inc
dec
cmp
sbb
inc
sbb
mov
fs
les
dec
shr
js
cmp
enter
lcall
inc
pop
into
fldl
and
push
mov
add
xor
ret
dec
cmpl
pop
scas
je
dec
mov
jg
xor
rcll
push
jbe
out
test
sahf
out
sub
loop
cmp
and
push
adc
fidivrs
or
xchg
fwait
and
add
lcall
push
inc
dec
or
into
ss
in
shlb
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
out
mov
arpl
mov
rcl
push
dec
and
int
dec
sbb
lahf
push
lcall
mov
xadd
fwait
movsb
mov
add
mov
or
rcpps
in
int3
add
fistpll
xor
cs
addr16
imulb
stos
sub
lahf
xor
sbb
shll
sbb
movsb
sub
test
and
cs
and
adc
xchg
stos
mov
test
ja
bound
cmp
jl
cwtl
xchg
dec
iret
fsubrs
cs
mov
js
popa
mov
mov
mov
mov
rolb
jo
mov
sbb
or
mov
shll
mov
movsb
add
push
xchg
dec
pop
inc
or
or
bnd
xchg
jb
aas
std
pop
adcb
push
outsb
pop
sbb
call
xor
shlb
call
popf
fcmovnb
fxch
add
inc
xchg
cwtl
ret
push
pop
push
push
push
inc
add
scas
inc
insb
in
push
and
negl
jo
mov
test
movsb
xor
adc
mov
mov
rcrb
ds
jnp
iret
fwait
lods
loope
popf
xchg
mov
in
push
cmc
or
cmp
xor
sub
js
jne
fcomps
mov
in
adc
push
sbb
or
in
bound
mov
mov
jne
push
cmc
loope
mov
mov
imul
ret
inc
popf
mov
sahf
jnp
lock
add
jo
jmp
js
dec
add
js
add
data16
lods
mov
mov
popa
pushf
push
xchg
aam
and
daa
popf
shrb
iret
mov
data16
jmp
imul
and
imul
mov
sub
rcrl
hlt
pop
mov
sub
jns
mov
push
sti
cmp
sub
jo
in
lods
sahf
mov
lret
ss
mov
out
xchg
je
cmp
orb
add
jp
fsub
psrlw
sarb
mov
stos
mov
xor
lcall
hlt
fists
dec
stc
dec
test
shlb
sbb
jp
xchg
xchg
or
dec
cmp
pop
loop
xor
lret
cltd
jge
aad
mov
shll
adc
xor
push
lahf
scas
ror
xchg
pop
ljmp
or
clc
test
fistpll
or
jne
inc
out
out
dec
lahf
call
rcrl
dec
test
pop
cmpl
inc
repz
lea
mov
lcall
mov
push
ja
xchg
xchg
pop
stos
xchg
push
or
inc
cmp
daa
cld
movl
shlb
sub
mov
and
stc
xchg
fstps
push
fst
ss
sbb
movsb
mov
rol
andl
in
add
dec
or
lds
and
stc
lods
jmp
loopne
mov
jl
xchg
pop
bound
pop
fstl
cmp
into
outsb
out
gs
lret
in
cmp
mov
push
js
pop
mov
xor
jmp
xchg
push
xor
lret
add
sarb
jg
mov
icebp
adc
sbb
mov
stos
ja
les
xor
pop
inc
out
leave
add
fs
stos
fwait
inc
fnstenv
cld
dec
adc
cmp
cmc
shll
clc
xchg
leave
cmpsb
popf
mov
into
add
sub
pop
cwtl
lea
xchg
imul
xor
loope
lds
push
out
adc
jns
lahf
test
xchg
xchg
mov
hlt
popa
js
popf
xor
dec
push
and
data16
sub
movsl
in
loop
fadds
out
sub
aad
and
push
scas
add
sbb
out
loope
adc
mov
icebp
xchg
inc
ds
cltd
in
test
inc
iret
push
insl
loope
adc
insl
dec
fidivrs
xchg
stos
call
pop
xchg
mov
das
lret
jae
sub
mov
bound
cs
rcl
insl
dec
sbb
fdivrl
push
push
lock
pop
jge
jle
add
push
push
jnp
mov
mov
mov
sbb
add
popa
sbb
js
sahf
adc
pusha
aaa
pop
mov
es
daa
cmc
jle
mov
mov
cwtl
and
sbb
popa
inc
jns
repnz
clc
or
push
ja
ljmp
and
pop
inc
iret
mov
sub
lds
int
mov
xchg
sarb
push
clc
icebp
in
imul
in
pop
xchg
and
int
and
testl
add
jnp
addr16
aaa
jg
inc
dec
ret
xchg
hlt
aam
and
lahf
frstor
xchg
gs
add
fnsave
jns
mov
test
int
jno
jmp
sbb
and
adc
mov
dec
pop
cmp
aad
insl
insb
sbb
or
gs
push
cmp
loop
test
repnz
mov
add
dec
and
mov
fcmovu
push
mov
cmp
pop
push
sbbb
sbb
pop
lret
xor
mov
lcall
stos
add
add
pop
fdivp
fwait
adc
and
mov
lods
out
pop
push
insb
lret
iret
adc
or
lock
inc
mov
adc
mov
jmp
xchg
jg
insl
mov
add
stos
insb
fs
sti
fcomps
insl
cmp
enter
shll
ret
aad
scas
xchg
push
push
sbb
xor
cmp
int3
add
rclb
fcmovu
xorb
pop
jae
nop
add
call
stc
cli
incl
sub
xchg
adc
xchg
dec
inc
ss
popl
ss
fimuls
cmpsb
mov
jne
dec
cmc
pop
pop
push
push
cmp
push
ja
mov
adc
sbb
add
mov
mov
mov
adc
stc
push
insb
js
call
or
ret
adc
dec
cli
and
sub
scas
std
adc
adc
loopne
dec
rorl
sub
cmpsl
push
rclb
inc
jp
dec
pop
pop
jns
in
mov
jge
pop
fxch
xor
js
inc
jp
loope
xchg
lock
arpl
ss
pushf
or
mov
xchg
lret
adc
adc
cmp
mov
ret
inc
nop
test
mov
mov
mov
push
std
int
inc
scas
sub
mov
fnstcw
mov
xchg
sahf
loope
out
icebp
and
mov
test
inc
adc
sbb
sbb
out
mov
jno
pusha
sbbb
dec
popa
shl
shll
mov
push
jmp
xchg
push
jl
mov
int3
sub
rcrl
adcb
out
orl
mov
push
into
data16
fcompl
stc
mov
mulb
mov
dec
sub
mov
loope
dec
cwtl
jle
add
xor
dec
fmull
dec
decb
sarb
sub
leave
push
dec
inc
and
push
pop
sub
cmp
icebp
xchg
pop
xchg
fbld
adc
sarb
cs
sahf
mov
add
dec
jb
xchg
sub
and
std
insl
lret
loopne
cmp
jecxz
ljmp
jns
mov
xor
mov
push
mov
and
mov
push
xor
push
push
inc
ljmp
sti
pop
stos
xchg
jne
mov
mov
jge
push
imul
scas
test
pop
rcl
mov
and
jae
xchg
int3
int3
cmp
insl
or
ja
outsb
mov
sub
cs
adc
call
sti
pop
insb
repz
mov
popf
mov
aam
fcomps
movsl
movsl
cmp
sub
imul
or
xor
test
fdivl
push
mov
xchg
in
cmpsb
jae
push
or
insb
mov
xor
arpl
xchg
dec
push
jbe
pop
push
inc
je
cmp
loop
icebp
push
jmp
adc
mov
in
sbb
push
lret
gs
mov
lods
xchg
cmc
inc
push
jle
jb
into
jp
adc
cld
mov
xor
repz
outsl
xchg
xor
imul
sbb
loopne
jns
ds
lahf
and
inc
orb
jge
add
adc
scas
pop
nop
stos
das
xchg
add
add
mov
ja
pop
test
mov
cmpsl
daa
adcb
fwait
mov
loop
fistl
jae
xchg
or
jle
mov
sbb
xchg
imul
jno
repz
mov
fs
cmp
outsl
cmpsl
or
out
data16
lods
mov
pusha
jne
mov
fadd
lds
pushf
adc
pop
fcmovu
out
ss
test
cmpsb
or
inc
mov
add
ja
popa
insl
fdivs
fmull
call
adc
outsb
into
hlt
pop
stos
inc
rclb
out
sub
cmp
fadd
sbb
cwtl
inc
popl
aad
pusha
ret
xchg
inc
dec
or
addr16
fisttps
push
rcr
xchg
mov
rcrb
popa
or
push
in
call
rolb
addl
adc
sbb
enter
hlt
mov
leave
cmpb
push
inc
js
iret
in
fs
push
stos
into
and
adc
sub
add
sbb
mov
pop
and
lret
push
cmc
pop
mov
pop
lds
fwait
pop
mov
fcmovne
stos
shrb
inc
xor
rorl
es
mov
nop
lds
cltd
and
cmp
push
in
mov
movsb
cmp
xor
mov
cmovno
aam
sub
mov
inc
inc
cmp
enter
sarb
loope
xchg
enter
ljmp
mov
nop
push
popa
mov
mov
or
push
push
add
imul
pop
sub
or
mov
bt
sbb
sarb
cli
ljmp
push
aas
pop
push
movsl
fnstsw
and
jg
ja
movsl
orb
sbb
and
inc
into
cmp
mov
notb
inc
bound
rorl
leave
out
sub
mov
push
xor
in
sub
pop
scas
in
int3
jl
lods
sbb
jbe
loopne
pop
das
mov
pop
cmp
or
pop
outsb
andl
stos
adc
lret
mov
in
pop
xor
xchg
lods
push
dec
cmp
sbb
cmp
cmc
xor
xchg
repnz
or
mov
hlt
std
mov
divl
xor
jp
add
and
bound
adc
sbb
adc
les
xor
and
cmp
xor
adc
jae
or
jle
aaa
jmp
movsb
push
movsb
fidivrs
lcall
idivb
dec
in
mov
sbb
cvttps2pi
mov
xchg
nop
push
das
and
xchg
in
addb
movsl
shrl
dec
sbb
out
jl
jnp
adc
cmp
jno
faddp
and
in
stos
mov
xchg
mov
jmp
pop
cmp
adc
jno
push
and
mov
std
sub
pusha
gs
jmp
adc
push
leave
or
test
fists
sub
into
jbe
les
mov
mov
je
pop
and
or
test
dec
in
cmp
push
movsb
pop
pop
sub
jnp
bound
adc
mov
andl
or
add
rorb
mov
lret
mov
adc
lods
sbb
int3
mov
rolb
xor
jmp
cmpsb
imul
sbb
fsubs
daa
dec
nop
aaa
add
push
fdivrp
int3
push
lock
mov
stos
adc
pop
jp
mov
mul
out
adc
sbb
in
stc
lods
xchg
mov
fstp
divl
sub
mov
fcom
adc
out
xchg
hlt
push
mov
mov
aaa
mov
jmp
scas
sahf
ja
pop
lcall
das
xchg
inc
adc
pminub
stos
sbb
xchg
or
mov
ficomps
hlt
push
mov
out
loope
outsl
push
in
scas
push
adc
roll
sbb
xor
push
shlb
pop
pop
mov
mov
or
cmp
adcb
jns
xor
jecxz
adc
int3
jns
lods
and
cltd
shrl
imulb
xor
push
jae,pt
jmp
jbe
fimuls
rorl
xchg
and
pop
push
xorb
pop
aam
nop
mov
pop
cmovo
std
aam
icebp
mov
arpl
shrb
pop
jb
xchg
js
push
inc
jbe
dec
icebp
and
cmp
in
faddl
inc
push
lahf
or
inc
xchg
nop
lods
xchg
int
push
ret
mov
push
dec
fwait
push
into
fisttps
cli
mov
jge
nop
popf
pop
pop
or
aad
sar
mov
adc
ret
inc
clc
js
shr
add
in
sti
fcoms
cmp
inc
addr16
dec
and
rorl
ds
je
outsl
sub
jg
in
jae
sub
xchg
xlat
mov
loop
xor
lock
stos
jmp
xor
in
shrb
shr
sub
scas
negl
jo
or
outsl
xor
mov
arpl
sbb
stc
mov
jnp
push
lods
arpl
je
push
rclb
hlt
cli
aas
lods
pop
in
divl
loop
cwtl
and
ljmp
mov
dec
mov
mov
outsl
adc
cmp
xlat
test
push
addl
push
mov
or
xor
in
daa
pop
inc
xchg
sub
sahf
adc
push
pushf
loop
sub
lds
mull
or
lret
push
and
js
dec
imul
xchg
xchg
adc
pop
pop
cltd
or
jp
xor
xor
test
addl
movsl
and
pop
add
sbb
xchg
mov
idivb
sub
and
jno
xchg
xchg
mov
and
pop
arpl
jecxz
pop
or
mov
loop
lock
or
mov
xchg
sbb
inc
nop
loope
sbb
push
mov
push
and
cmpsl
jbe
ja
xchg
pusha
mov
lods
xchg
or
repz
cmp
in
sbb
enter
jl
ja
addr16
pop
jecxz
sub
leave
inc
daa
inc
and
xchg
jp
ja
mov
mov
jecxz
and
test
hlt
out
stos
add
jne
int
mov
jb
dec
pop
ret
sti
test
bound
je
shl
xor
jle
or
inc
test
negb
inc
aam
fadds
incb
sbb
xor
test
lcall
sbb
imulb
cmp
dec
mov
sub
mov
fdivrs
add
aam
adc
cmp
sub
int3
popa
sub
jae
pop
or
inc
mov
in
aas
fisubl
add
pop
hlt
fcompl
push
and
dec
mov
aaa
dec
jb
xor
push
adc
push
fsubs
ss
push
sarl
out
je
bound
mov
les
test
cmpsb
inc
and
jle
fisubs
cmp
mov
add
outsb
sub
stc
repz
mov
inc
in
nop
push
test
mov
fld
clc
sbb
adc
xor
inc
insb
loop
leave
mov
sub
hlt
faddl
pusha
mov
push
aam
outsl
push
cmovl
hlt
into
icebp
les
insl
inc
iret
xchg
movsb
push
daa
fcoms
repnz
test
sahf
adc
in
add
fcmovnu
fwait
add
mov
adc
das
pop
push
repz
notl
scas
inc
imul
pop
sub
pop
push
lock
movsb
and
and
test
sbb
cwtl
imul
enter
std
mov
cld
les
fcomps
xchg
outsb
pop
fimull
push
shll
es
bound
fsubp
sub
repz
mov
xchg
mov
hlt
ljmp
mov
lods
outsb
pop
testl
xor
gs
adc
ret
in
out
or
cmp
sub
add
add
test
xchg
inc
iret
loope
lock
mov
jnp
xchg
das
in
adc
stc
lock
ljmp
xchg
shrb
stos
pop
cmpsl
xor
adc
inc
add
mov
leave
cld
sbb
push
jno
les
xchg
test
insl
adc
jg
data16
mov
ds
scas
repz
jno
and
xor
push
decl
pop
stc
xchg
data16
fsubs
jl
push
fstl
mov
adc
mov
inc
mov
jns
jmp
jge
iret
dec
mov
mov
push
and
js
mov
pop
sbb
inc
leave
test
xchg
push
jne
fistl
cs
sbb
out
xchg
pop
ss
push
cmpsl
cmpsl
jge
dec
loope
out
inc
shl
es
lret
bound
mov
repz
pop
stos
fidivl
sti
push
and
enter
es
fadd
mov
dec
mov
mov
cmp
adc
mov
pop
insb
icebp
iret
test
mov
cmpsl
mov
sub
les
jno
dec
mov
xchg
xor
mov
cmpsl
cwtl
adc
arpl
push
and
adc
mov
rcrl
fnstcw
lock
inc
sub
pop
add
mov
sbb
mov
mov
pusha
call
les
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
dec
adc
