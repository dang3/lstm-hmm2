outsl
rol
push
dec
mov
push
xchg
std
jl
lret
rcll
or
cwtl
dec
clc
cltd
push
mov
shlb
flds
sub
dec
add
arpl
mov
sbb
stc
in
test
lock
movsl
push
sysret
les
xchg
mov
mov
xor
cwtl
arpl
test
pop
adc
pop
inc
rcrb
sbb
mov
pop
pop
push
sti
adc
push
std
jns
add
clc
pop
orb
xchg
push
pop
jbe
mov
jecxz
xor
jmp
cmp
pusha
sbb
shl
into
dec
xchg
inc
cmc
ljmp
or
or
or
sbb
mov
call
shlb
cmp
scas
xchg
or
adc
pop
add
mov
sub
ret
xlat
ret
add
lds
and
dec
dec
jno
pushf
insb
pop
cmp
icebp
sbb
dec
xchg
push
pop
pop
cmpsl
test
fldt
pop
subl
mov
xchg
sbb
test
pop
mov
cmp
xchg
nop
sbb
enter
icebp
ljmp
shl
scas
mov
ret
dec
fs
out
mov
dec
push
pop
inc
popf
sbb
daa
sub
push
repnz
in
pop
lods
mov
repnz
pop
test
sbb
or
div
xchg
rorl
cwtl
pop
loopne
mov
add
pop
nop
lods
rclb
insl
ficoms
test
cmp
pop
nop
ret
pop
mov
insl
pop
roll
pop
rorb
xchg
shlb
sub
lds
inc
pop
loope
call
mov
cmp
xchg
sbb
ret
dec
push
pop
mov
call
sub
leave
lods
push
leave
lret
ror
jae
dec
scas
rclb
arpl
shrl
lock
dec
add
push
test
sub
xlat
dec
out
push
rcrb
pop
sub
adc
pop
mov
dec
add
cmp
cmpsl
scas
lcall
rolb
cmp
daa
dec
or
adc
into
aad
leave
mov
out
inc
cwtl
or
insb
nop
loopne
jl
cld
iret
adc
test
int3
xchg
les
imul
dec
enter
mov
push
push
test
or
stc
stos
add
fstpl
lcall
push
mov
add
rcl
insl
loop
loopne
es
cmp
test
movsb
pop
add
dec
jmp
fsubr
adc
cli
loopne
mov
push
xor
mov
adc
pushl
enter
sbb
mov
sbb
pop
leave
add
ljmp
xor
in
sbb
ss
cmp
fsubl
cltd
into
clc
nop
fcomps
jo
adc
xchg
sbb
pop
xor
mov
rcll
xchg
mov
sub
mov
mov
xchg
sub
jle
js
cmp
lock
dec
inc
test
inc
in
cmp
cmp
or
out
or
xlat
adc
pop
aam
insb
push
sub
loop
xlat
cmp
lods
adc
ret
push
shlb
sbb
or
insl
std
xchg
mov
ret
gs
sbb
xchg
and
xchg
sbb
sub
sub
push
movsb
adcl
mov
or
insb
mov
fidivrs
pop
ficompl
cmp
enter
cmp
xor
inc
add
into
idiv
mov
or
testl
push
cmc
int3
in
scas
and
sarb
add
ret
xchg
sub
addb
mov
fs
or
jecxz
add
lret
sbb
and
das
mov
xchg
bound
ja
pop
pusha
pushf
add
pop
repnz
sbbl
and
mov
cmp
xor
enter
jns
out
jle
cmp
xorb
dec
fmuls
scas
das
cmp
pusha
gs
ljmp
push
xor
fldl
mov
repnz
and
rolb
pusha
mov
andb
and
sbb
sbb
lea
or
jecxz
cmc
scas
inc
xchg
sbb
pop
push
xor
subb
xchg
cmpsl
int3
loopne
and
push
adc
cmc
scas
rorl
dec
inc
or
lret
stos
dec
mov
fmulp
and
stos
add
fistpll
jno
or
dec
mov
ret
and
in
rcl
into
clc
mov
fisubrl
fnstcw
pop
ljmp
and
test
jle
ficoms
jo
cltd
in
out
daa
pop
cmp
movl
imul
or
pop
jge
movsb
mov
in
scas
int3
jae
xchg
mov
sti
fildl
xchg
jbe
mov
into
pop
aam
andl
and
movsl
lock
sub
clc
clc
scas
cmp
mov
jg
shll
sbb
lahf
movsb
add
popf
or
clc
pop
ja
push
dec
sbb
jno
popf
or
jns
pop
repz
insb
lahf
and
pop
cmc
cmpsb
popf
xor
sub
mov
iret
daa
cmp
loopne
push
into
dec
sarb
fstpt
xchg
cmp
js
shr
push
or
fcompl
icebp
sbb
ret
xor
jge
rolb
push
sbb
and
add
mov
jmp
mov
icebp
adc
mov
int
out
push
mov
decb
div
popf
imul
mov
and
mov
mov
dec
lock
das
push
fmul
add
adc
sub
in
xor
enter
dec
aas
ret
ds
mov
mov
xchg
pop
shr
roll
dec
jb
fsub
push
adc
dec
xchg
stos
repnz
pop
cmp
js
push
add
dec
std
jo
int
out
stc
bound
jbe
es
stos
adc
push
mov
movsb
lcall
adc
ret
pusha
sahf
xor
xlat
add
pop
jecxz
movsb
pop
fnstsw
cmp
cmpsl
cmp
mov
xchg
pop
aam
lods
mov
mov
push
or
lock
pop
sbb
jg
roll
xchg
xchg
in
pop
js
xor
inc
test
jae
test
push
inc
addr16
outsb
xchg
sub
lret
lret
adc
inc
pmaddwd
dec
aas
xchg
adc
mov
mov
inc
incb
mov
stc
add
popf
lret
ret
cmp
or
aad
adc
jge
fmul
dec
inc
in
popa
pop
xchg
xchg
mov
sbb
pop
or
sahf
lret
pop
mov
int3
test
mov
pop
lods
jp
repz
fimull
xor
cmp
in
xorb
xor
out
push
movsl
sub
imul
popf
outsl
xor
inc
jl
fcmove
cmp
pop
mov
insb
ljmp
ret
ret
mov
push
inc
fs
sbb
movsb
sbb
push
mov
int3
xlat
push
negl
shlb
testl
mov
xor
push
inc
mov
mov
jne
adc
and
je
bound
cwtl
push
xor
pop
add
fsubl
adc
lret
jge
lahf
out
mov
andl
negl
stc
or
cmc
lea
rclb
xchg
into
inc
shll
jno
or
fisubrl
hlt
ret
les
fsub
mov
xchg
jp
pop
in
in
lods
les
pop
xchg
jnp
fildll
mov
push
and
bswap
cmpsb
inc
ret
add
cmp
es
cmp
cmp
lret
lock
popl
pop
cmpb
pop
inc
shlb
das
jns
es
arpl
cmp
cmp
push
xor
xor
lahf
int3
out
or
mov
jns
std
pop
jns
add
xchg
mov
add
and
add
push
orl
mov
dec
pop
js
or
add
ljmp
add
sub
jl
mov
push
icebp
in
push
jp
pop
sti
aad
fimull
xchg
mov
out
pop
stos
mov
inc
in
mov
in
js
sub
sti
sarl
push
sti
add
iret
jo
inc
adc
mov
mov
or
std
jbe
aaa
test
movsb
call
pop
enter
inc
pop
inc
push
leave
test
out
pop
add
es
roll
jno
jne
out
and
test
lock
or
add
lods
mov
sahf
shlb
sub
cmp
sub
sarb
outsl
sbb
in
cmp
popa
sub
out
and
daa
inc
sub
cmp
pusha
inc
mov
clc
jecxz
shlb
int
push
mov
fwait
pop
fdivs
sub
mov
das
sbb
mov
addb
stos
repz
sub
push
pop
aam
movsl
outsb
fildl
ss
mov
in
mov
scas
pop
push
rcr
pop
nop
or
sbb
jecxz
mov
adc
xchg
testl
xchg
in
add
andl
pop
and
xorb
cltd
sbb
loope
jg
test
orl
prefetcht0
lds
js
das
add
and
push
ret
popf
stc
xor
cmpb
insb
test
ljmp
cwtl
dec
mov
fmull
add
mov
mov
hlt
add
push
inc
fiaddl
sub
sbb
cwtl
lcall
sbb
and
mov
xor
xor
or
fsubrl
pop
scas
or
cmp
dec
fdiv
mov
in
mov
dec
in
inc
and
test
push
clc
mov
in
push
fisttpll
loope
add
mov
iret
jmp
xor
scas
mov
pusha
add
lock
iret
inc
out
adc
mov
pushf
add
or
mov
cld
xchg
add
pusha
fisttpll
cltd
aam
add
mov
outsl
push
mov
mulb
stos
fdivrl
test
mov
loopne
test
pop
shll
or
jecxz
pushf
mov
sbb
pop
add
fucom
sub
xor
arpl
push
pusha
jp
out
push
in
cmpsl
hlt
insb
xrelease
ljmp
xchg
cmp
mov
jge
xchg
inc
pop
push
in
orb
lcall
call
jb
shr
fwait
xchg
mov
add
addr16
mov
sbbb
adc
arpl
pop
ss
roll
lds
mov
mov
in
loopne
jg
inc
mov
movsb
cwtl
xlat
fcoml
dec
pop
mov
inc
ret
scas
mov
mov
outsl
inc
mov
push
je
int3
in
int3
pusha
jne
mov
dec
ss
pop
stos
push
push
mov
shlb
add
lock
pop
fsts
push
mov
or
hlt
add
daa
mov
mov
cmp
lcall
add
dec
and
pusha
shlb
jle
xchg
jb
in
jbe
inc
cmp
pop
xor
pop
loope
sub
sub
add
test
jge
jne
push
push
cmp
mov
add
dec
sbb
inc
mov
out
cltd
inc
mov
cmpsb
mov
mov
push
dec
hlt
xor
xchg
mov
sub
cs
and
push
lcall
loopne
sar
cmp
mov
fnsave
loop
jb
cmpsl
jp
pop
movsl
idiv
mov
jl
repz
mov
jnp
aas
or
in
xor
test
cli
sbb
xor
mov
repz
adc
push
rcrb
dec
inc
xchg
push
test
pop
jl
cmp
out
push
pop
les
call
jl
orl
int3
jg
into
outsl
addl
inc
adc
sbb
out
cld
test
clc
cwtl
imul
sbb
xchg
mov
test
call
pusha
outsb
in
jo
pop
or
movsl
or
mov
push
in
push
fisubl
inc
adc
pop
aam
shll
test
pop
jle
pop
inc
add
mov
loop
fiaddl
xor
mov
inc
xchg
jle
sbb
xor
out
xchg
pop
shr
clc
sub
rorl
pop
sbb
sub
test
cltd
sub
mov
sarl
xor
jp
dec
mov
aas
push
arpl
bound
jae
cld
das
filds
jl
ja
sub
pusha
push
dec
jae
xor
sub
jb
dec
dec
mov
mov
xor
push
cmp
pop
push
jb
fdivr
loop
in
cmp
leave
inc
or
icebp
daa
daa
xchg
loope
test
or
rcrl
sti
and
dec
std
ret
ror
add
and
sbb
dec
and
ss
mov
ljmp
cmpsl
xchg
mov
xor
jecxz
int3
lock
xlat
inc
out
and
lods
or
or
sbbl
dec
inc
rolb
xor
mov
push
out
inc
mov
cmp
mov
lock
jmp
popf
cmp
push
enter
add
dec
stos
or
inc
and
push
stos
xchg
scas
xchg
xchg
repz
sbb
repz
lds
cmp
pop
js
adc
mov
pop
sub
xchg
aam
mov
shrl
lods
inc
repnz
lret
cmpb
fs
sarl
ret
insl
loop
push
sbb
pop
mov
fildll
dec
cmpsl
pusha
mov
clc
xlat
cli
rorl
mov
scas
in
and
mov
mov
cmpsl
mov
dec
outsl
xchg
aam
or
add
frstor
sub
scas
mov
in
in
add
push
cmp
jle
ss
insb
sub
lock
cmp
shl
imul
sbb
inc
xor
fisubrl
lods
les
sbb
mul
sbb
lods
jge
pushf
sub
das
push
pop
and
mov
pop
out
dec
loope
arpl
pop
add
loope
data16
and
pop
push
or
mov
ja
jb
sub
sti
pop
xor
test
lods
pop
cwtl
shll
mov
shl
jp
inc
pop
add
inc
cmp
sub
pop
rcrl
jecxz
lret
and
fwait
cld
mov
push
rol
pop
xor
addr16
cli
dec
push
jp
imul
or
cmp
dec
fidivl
add
sub
push
cld
lcall
cmc
adc
mov
sbb
out
jae
dec
lods
cmp
divb
jl
cmp
push
inc
insl
test
or
or
mov
or
mov
rolb
dec
xchg
dec
mov
mov
pop
push
jno
dec
push
pop
out
lock
add
lahf
mov
out
cmpb
aad
rep
in
movsb
fisubrl
jle
repz
add
cmp
aam
arpl
lds
xor
jecxz
cmpl
mov
xorl
aad
sbb
push
daa
fs
popf
push
and
bound
loopne
sti
ret
lods
adc
cmp
lods
int
pop
jecxz
cmp
pop
pop
and
movsl
decl
pop
stc
mov
sbb
les
in
sahf
les
mov
adc
mov
rorl
stos
pop
inc
dec
jp
das
je
mov
mov
in
mov
shl
in
rolb
inc
sbb
add
cmp
pusha
outsb
test
pop
and
cld
ficompl
fisttpl
pop
sbb
enter
rcrb
out
pusha
adc
mov
iret
mov
test
inc
pop
out
out
ds
in
or
mov
andb
inc
mov
mov
movsb
js
mov
and
sub
inc
jp
les
imul
sbb
jnp
adc
in
adc
es
test
stos
mov
pop
sbb
out
pop
test
pop
mov
mov
pop
out
add
ret
aaa
cmp
mov
sbb
hlt
pop
pop
scas
call
fcompl
das
imul
cld
jns
addb
stos
add
sub
pushf
xor
add
lock
xlat
mov
adc
fisttpll
or
add
ret
xchg
icebp
and
sub
lods
xor
jecxz
mov
movsb
repz
icebp
fstpl
lock
mov
pop
inc
pop
lock
das
cmp
inc
hlt
jl
sub
int3
ds
adc
fyl2xp1
xorb
pusha
pop
xchg
insb
pop
push
repnz
pop
sahf
shlb
stc
cmp
add
mov
pop
mov
sti
icebp
andb
test
pop
push
jmp
mov
popa
test
fldt
sbb
cmpb
mov
scas
adc
sbb
mov
mov
pop
gs
ret
popa
or
or
scas
rclb
pop
cmc
pop
mov
mov
ficompl
sub
add
jp
sbb
pop
pushf
pop
in
fs
in
daa
out
cmpb
fcompl
sub
adc
mov
cmp
dec
adc
push
arpl
ljmp
lods
cs
xchg
insl
arpl
clc
jecxz
mov
jge
or
fstpt
icebp
pop
mov
xor
adcb
mov
fsubp
cwtl
cld
push
repnz
dec
pop
in
pushf
pop
out
mov
icebp
adc
dec
in
add
fldt
push
sub
push
out
cmp
xor
into
mov
cs
dec
in
or
das
jge
ret
jae
dec
hlt
cmp
xchg
inc
mov
pop
push
dec
enter
shll
mov
pop
or
dec
jno
pop
mov
fcoml
nop
xchg
pop
test
mov
dec
push
pop
nop
test
shrb
mov
in
mov
mov
xor
shll
dec
loopne
sbb
inc
out
sub
stos
sbb
repz
addl
push
leave
pop
jecxz
push
push
stos
push
and
adc
adc
sub
mov
int
addb
ss
popa
les
in
mov
std
outsl
mov
in
xchg
push
scas
ret
mov
faddl
mov
outsb
in
sub
sub
xor
mov
cmp
out
xchg
xchg
test
push
stos
fldenv
adc
ds
pop
sub
sbb
enter
stc
mov
jle
sub
orb
aad
aad
shr
stos
fldenv
lea
sbb
outsl
push
lods
iret
pop
loopne
add
xchg
cmpsb
pusha
push
sbbb
scas
mov
insb
test
xchg
mov
shrb
loopne
cld
lods
bnd
sub
test
mov
aad
inc
cmp
jo
jo
mov
mov
add
fnsave
cs
and
pop
in
lret
scas
push
add
pop
sub
lds
add
inc
fnstcw
fcmovnb
pop
inc
prefetch
or
pop
cmp
into
xor
cmp
pop
and
push
cmp
sub
add
sbb
dec
or
aas
gs
adc
ficompl
sbb
bswap
mov
mov
push
arpl
das
ja
cmpsb
sbb
scas
sub
pusha
in
mov
add
mov
ret
inc
std
loopne,pt
mov
hlt
mov
jp
sub
loope
aam
adc
pusha
decb
push
jns
dec
das
std
loope
inc
and
xchg
xorl
or
dec
icebp
xor
add
add
cld
loopne
xor
je
push
cmp
inc
sbb
rolb
xchg
xor
push
mov
test
sub
test
jl
shrb
mov
rorb
sbb
scas
popa
fimull
cwtl
inc
cmp
popa
rcrb
jnp
fidivrs
out
mov
stos
dec
sub
mov
aam
add
test
scas
imul
sbb
xor
push
jo
add
sub
or
les
adc
out
stos
push
and
pushf
mov
mov
add
outsb
mov
xchg
fisttpll
xchg
stos
mov
jnp
adc
xchg
cmpsb
test
int
mov
iret
ret
sbb
sar
std
and
pop
cmc
sahf
out
push
dec
icebp
lods
in
lret
lods
push
addb
pop
aaa
in
push
out
out
xchg
js
lds
test
pop
faddp
mov
mov
sub
jo
ss
lods
mov
sub
popa
xor
int3
dec
icebp
dec
in
loopne
lock
clc
add
inc
rcrl
iret
mov
xlat
xchg
or
lahf
sub
pusha
loope
and
ljmp
adc
movsl
in
test
cmp
cwtl
cmp
pop
add
fisttpl
xchg
popa
dec
sbb
push
or
push
jl
inc
mov
mov
out
imul
pop
pop
pop
test
jne
movsb
push
addl
mov
in
sbb
push
in
mov
popf
test
push
inc
lahf
sbb
fdivl
or
or
fcmovu
ljmp
inc
pop
rolb
sbb
stos
jge
cmp
mov
lcall
scas
repz
add
jmp
mov
je
mov
int3
nop
xlat
je
aad
mov
outsb
neg
mov
mov
dec
push
and
sbb
mov
test
rcll
mov
test
dec
adc
hlt
je
sbb
out
push
test
andb
jnp
lea
rcrb
add
ret
fildl
sbb
enter
rorb
vsubss
xor
inc
mov
lods
fsubs
mov
inc
repnz
xchg
addr16
cs
add
ljmp
mov
test
or
pop
lcall
jae
and
sti
pusha
fidivs
xchg
mov
pop
dec
mov
in
xchg
aad
hlt
push
rcrb
cmp
or
loop
mov
dec
mov
mov
xor
dec
inc
sbbl
gs
imul
pop
inc
xorb
xchg
cmc
pop
cmp
iret
in
or
and
sbb
adc
ror
push
adc
sbb
sbb
andl
cmp
xchg
adc
lcall
mov
cmp
pop
or
rcrb
shll
stos
hlt
cmp
sub
scas
test
pusha
fldenv
cmp
add
add
sbb
in
hlt
jge
aad
in
adc
daa
pop
sbb
mov
es
inc
dec
cmp
mov
adc
cwtl
movsl
cmp
ss
in
add
ja
xchg
sub
arpl
out
subb
icebp
push
rclb
pop
scas
pop
dec
out
mov
xchg
xorl
jl
mov
rclb
icebp
in
push
cmp
inc
xchg
mov
mov
dec
sbbb
fxch
lods
lea
out
adc
cmc
decb
stc
sub
inc
pop
call
cltd
lock
cmpsb
stos
mov
filds
outsl
in
mov
lds
shl
push
push
addl
into
jle
nop
and
or
add
out
in
les
loopne
xorl
adc
jecxz
test
push
dec
dec
aaa
loopne
xor
cs
inc
mov
mov
dec
rcll
cmp
movsb
icebp
inc
std
jl
lret
mov
loopne
int3
add
lods
pusha
insl
notb
dec
adc
in
push
lahf
jge
adcl
ret
or
push
mov
lret
pop
cmc
int3
push
mov
xor
test
out
cmp
fdivs
icebp
test
cmp
dec
movsb
mov
sub
sub
and
xor
mov
mov
xchg
aas
jecxz
inc
addl
in
imul
cwtl
mov
mov
pusha
data16
dec
shlb
pop
xlat
xchg
hlt
insb
lcall
and
add
pop
ljmp
dec
or
lods
scas
sub
out
ret
mov
adc
mov
mov
mov
push
cmpb
test
sbb
jae
xlat
adc
mov
shrb
movl
mov
or
dec
jnp
sub
outsb
add
inc
fimuls
sub
imul
repnz
push
xor
add
std
mov
roll
xchg
loop
shr
pop
test
sahf
push
mov
aam
adc
jae
push
push
rcr
in
mov
sahf
push
push
mov
repz
mov
dec
loop
movsb
push
sahf
mov
mov
pop
mov
mov
in
rolb
mov
sbb
mov
inc
cmp
test
jp
inc
gs
mov
pop
xchg
pusha
insb
pop
adc
inc
int
dec
lods
mov
cmp
push
in
inc
gs
and
jge
pop
test
into
jmp
xchg
mov
in
push
xor
aam
in
pop
bound
mov
mov
xor
push
outsl
aam
scas
lret
frstor
pop
and
popa
dec
mov
sbb
dec
mov
inc
roll
pop
push
sahf
dec
xor
fsubrp
cltd
in
data16
mov
adc
lock
jge
inc
and
or
outsb
outsb
ljmp
add
int
pop
mov
add
dec
cli
bound
arpl
push
iret
add
outsl
stc
neg
push
pop
ja
dec
add
icebp
mov
push
push
pop
push
pop
or
sbb
lcall
dec
call
sub
pop
aad
xor
push
das
cs
mov
add
loop
or
jecxz
lock
adc
pusha
scas
hlt
adc
lock
enter
enter
ret
jl
dec
mulb
sub
repz
int
and
push
jmp
sarb
stos
std
popf
test
adc
pop
push
xor
rcll
hlt
out
pushf
inc
and
cmp
fcomps
es
data16
push
adcl
inc
push
adc
lock
stos
popa
push
in
insl
mov
leave
cmpsb
loop
icebp
cmp
mov
push
fs
add
dec
dec
fistpl
pop
scas
mov
icebp
cmp
in
sub
sub
or
jne
aas
xchg
inc
xchg
cmpsl
adc
pop
jo
mov
call
mov
call
fs
add
mov
lds
pop
pop
dec
mov
shll
jle
out
hlt
mov
rcl
cld
dec
sub
pop
push
test
imul
fsubrl
mov
out
jmp
or
xchg
call
pusha
cmp
lahf
push
mov
xchg
sbb
sarl
mov
xor
ret
push
js
mov
mov
popl
fs
mov
cmp
push
mov
les
xchg
lret
repnz
orl
inc
xorb
and
arpl
pop
xlat
bswap
pop
out
stos
lods
mov
pop
js
cmp
out
lds
and
mov
inc
mov
pop
test
ror
stos
addr16
push
lods
fstpl
inc
pusha
jl
lcall
xorl
daa
cs
bound
pop
lcall
dec
icebp
les
sarl
xor
stc
popf
cmp
jnp
mov
pop
sbb
fwait
jb
les
andb
inc
mov
push
sub
jecxz
out
or
repz
pop
mov
pop
adc
push
in
sub
pop
inc
mov
mov
shll
arpl
scas
pop
fs
sub
lds
int
cmp
xchg
jb
leave
int3
fs
pop
fwait
iret
sarl
inc
sub
dec
push
mov
jle
lahf
push
outsb
push
cmpsb
pop
jno
daa
lock
lds
and
mov
and
jo
sub
and
stos
ret
insb
test
ret
pushf
enter
lods
cmp
stos
mov
add
sbb
stc
loop
lea
loopne
pop
push
pop
xchg
movsb
pavgw
add
cmp
dec
dec
or
push
jns
push
sbb
push
add
pusha
sub
inc
iret
aam
outsl
push
jp
cld
les
pusha
popa
addb
test
test
pushf
pop
dec
imul
loope
add
pop
faddl
push
out
loopne
jmp
hlt
mov
out
jno
mov
jle
dec
into
push
push
inc
jl
xor
mov
pop
mov
pop
into
divb
pop
or
mov
fs
dec
movl
pop
xchg
and
sub
int3
faddl
mov
pop
push
pusha
stos
inc
cmpsb
xchg
pop
popf
lds
int
test
mov
icebp
jno
or
sub
nop
js
cmp
mov
push
and
sub
xchg
push
out
mov
adc
jo
inc
xchg
jecxz
pop
inc
iret
cmp
add
sbb
add
dec
out
subl
mov
jl
xor
out
aas
in
lret
mov
shlb
aas
sub
test
and
mov
cmc
stos
cmc
into
sbb
pop
mov
inc
call
push
inc
rorb
stos
mov
cmp
jge
sahf
cmp
mov
push
mov
sub
mov
ficoms
dec
rclb
cmp
cmp
fcmovnbe
xchg
pop
sbb
cmp
test
inc
scas
lods
into
lea
mov
dec
lahf
sub
fmul
das
jo
and
pop
movsb
aas
mov
xchg
idivb
cmp
pop
xchg
mov
sbb
sbb
and
stc
daa
icebp
or
daa
cli
fnstcw
mov
test
xor
dec
mov
adc
pop
ljmp
sub
pop
jg
mov
jge
das
jg
sub
cmp
jo
shl
pusha
test
roll
mov
cmpsl
mov
cmp
pushf
out
or
and
andb
pop
ret
or
add
loopne
push
fldl
in
inc
enter
into
movsl
sahf
xor
xor
jl
mov
sub
sahf
shll
scas
dec
pop
loop
loop
or
push
cmpb
mov
sub
dec
pop
loope
popa
push
and
mov
pop
xor
popf
cmp
sub
lods
nop
in
subb
mov
xor
sub
vmread
rcrb
inc
lcall
sbbl
mov
sbb
insb
push
xchg
lds
cmp
daa
imul
lahf
sti
mov
movsb
inc
lods
or
pop
loopne
in
mov
sbb
or
test
jp,pt
pop
mov
adc
daa
lods
clc
je
or
scas
into
jae
dec
ds
std
es
clc
pushf
ja
mov
jle
pop
cwtl
fdivs
sub
lea
call
cmc
inc
aas
shlb
lds
lahf
and
mov
out
mov
dec
jmp
fdiv
sahf
mov
add
push
xor
or
push
xchg
pop
cld
out
push
aaa
rclb
mov
outsl
testb
les
hlt
dec
sarb
aas
and
lds
lock
stos
les
jle
cli
cli
mov
ja
push
ret
cli
jge
test
mov
das
rcrl
js
shrb
cmc
pop
pop
mov
pop
dec
mov
push
sbb
add
add
test
mov
mov
inc
jg
pop
lock
pop
mov
lcall
cmp
mov
shr
aaa
lret
cwtl
ss
ss
bnd
test
shlb
clc
hlt
cmc
adc
sbb
xor
repz
mov
cmp
pushf
pop
mov
pop
js
ret
enter
or
mov
je
sub
add
jl
sub
push
sbb
sbb
mov
xchg
mov
das
clc
sbb
andl
cmc
das
hlt
addb
pop
pop
cmpb
sub
cmp
in
clc
fldt
movsl
jae
pop
adc
sbb
inc
adc
test
pop
mov
rcl
rcrb
pop
popf
jmp
enter
dec
mov
sarb
insb
cld
inc
repnz
jecxz
mov
mov
enter
adc
repz
push
sar
jno
jp
das
test
add
stos
dec
inc
pop
mov
or
adc
popa
cmp
pop
dec
cmpsb
sub
ret
and
pop
fdivl
icebp
pop
pop
lret
jb
hlt
xor
push
ficomps
into
xor
sbb
stos
mov
test
push
push
sub
pusha
mov
or
je
bnd
int3
pop
int3
mov
in
enter
shrl
lcall
sahf
mov
imulb
add
jne
inc
push
call
outsb
inc
sbb
mov
ljmp
adc
jle
cmp
mov
add
inc
cld
pop
and
jbe
inc
lods
dec
pop
fidivl
xor
call
cmp
pop
cmp
xchg
dec
pop
inc
inc
mov
mov
inc
mov
xchg
add
in
push
adc
sub
sbb
subl
enter
in
subl
fsubl
jo
imul
sub
mov
xlat
pushf
fwait
sahf
inc
or
mov
sub
dec
adc
lock
xchg
das
pop
fmuls
les
pusha
data16
sub
pop
and
adc
mov
cmp
insb
and
lods
lods
mov
xchg
aam
clc
inc
mov
mov
sbb
out
dec
es
push
imul
jno
pop
cmpb
mov
push
mov
mov
pusha
mov
int
mov
fildl
mov
dec
adc
mov
mov
sbbl
cmp
sarl
pop
mov
mov
pop
dec
mov
test
sbbb
add
call
fs
sub
add
ss
in
cli
cli
xor
in
fidivrl
int
ret
jno
adc
pushf
sub
mov
sbb
enter
mov
inc
mov
loop
jae
fisubrs
mov
dec
rol
cmp
sahf
adc
cmpl
push
pop
sub
sbb
pop
sub
fimull
test
aas
pop
mov
fs
fs
into
in
pop
rcrl
jp
and
lods
dec
add
rcrb
mov
or
sub
cld
or
roll
out
mov
aas
aam
test
or
pop
les
pop
dec
add
out
ja
push
mov
in
sub
cmp
loopne
pop
fstps
jo
rolb
fidivl
sub
mov
dec
inc
decb
fs
or
addl
sub
fdecstp
test
or
call
xchg
popf
cli
add
cld
mov
inc
push
int3
mov
mov
push
in
xor
mov
pop
pop
pop
icebp
cmp
in
mov
lahf
test
jmp
inc
mov
fiaddl
or
pop
icebp
shr
pop
lcall
mov
nop
pop
out
rcl
in
sbb
push
sub
or
insl
mov
push
test
fidivrl
mov
sub
in
mov
aam
test
fcompl
hlt
sbb
jnp
mov
sub
xlat
insl
jns
dec
mov
cs
into
pop
push
sub
dec
ret
mov
lcall
in
push
mov
or
mov
or
jge
push
cmp
gs
or
or
push
in
push
in
cmp
push
aam
pop
sbb
add
adcl
sbb
data16
and
ret
add
jg
mov
adc
cmpb
stos
fcompl
jecxz
pop
in
inc
mov
xlat
out
mov
fisubs
stos
mov
outsl
pop
fadd
rcrb
movsb
or
es
inc
pop
and
lock
aad
sbb
data16
and
xchg
push
lods
push
mov
lock
loopne
sub
in
call
push
lds
cmp
stos
inc
cmpb
dec
mov
or
cld
pop
mov
pop
sbb
repnz
xchg
mov
repnz
dec
repnz
sbb
icebp
clc
aas
pusha
addb
in
aam
cs
sub
add
jl
sub
test
mov
and
xchg
jp
das
lds
mov
or
sub
repz
sub
push
sbb
sbb
dec
repnz
imul
sub
scas
repnz
push
test
les
cmp
movsb
inc
push
stos
inc
inc
pop
insl
inc
cmp
sbb
sbb
inc
rorl
push
pusha
mov
rclb
add
cld
jbe
stos
pop
hlt
fs
mov
pop
pushf
pop
ret
adc
je
and
addl
cld
jnp
jg
es
scas
jmp
shr
fisubl
mov
test
mov
ficomps
xor
cs
stos
mov
cld
mov
jmp
xlat
test
mov
in
fidivs
add
pop
xor
inc
mov
pop
jno
orb
xchg
pop
xchg
daa
push
sub
add
xor
iret
pusha
push
pop
lods
add
xchg
pop
aam
jl
pop
mov
xchg
fwait
rolb
cmp
stos
sbb
les
stos
xor
jb
leave
lret
or
outsl
lret
cmpsb
pop
divl
sarb
scas
sub
xchg
inc
mov
sarb
or
cwtl
inc
mov
add
hlt
pop
pop
and
ret
ret
inc
inc
repnz
mov
mov
sub
cmp
push
jae
adc
pop
fs
sbb
adcb
xchg
jo
sbb
mov
or
notb
je
mov
cmpsb
shrb
ret
enter
loope
cmp
pusha
ljmp
mov
mov
ret
enter
lret
loopne
sub
in
push
fistpl
stos
pop
mov
mov
aam
inc
sar
repnz
shrl
dec
test
mov
cmpl
push
sub
and
xchg
call
jle
push
inc
jl
jge
and
sbb
mov
mov
stc
adc
aas
inc
ja
stos
xchg
jge
pop
inc
paddq
inc
sbb
or
leave
push
cmpb
push
mov
fldt
or
push
mov
pop
push
das
jl
adc
add
push
inc
push
cld
pop
cmc
inc
push
das
sbb
adc
xlat
adcl
fchs
mov
ds
les
cmp
lcall
pushf
jecxz
and
insb
add
rolb
cmc
popa
pusha
mov
in
aad
push
pop
movsb
lods
imul
out
jbe
inc
adc
pop
add
ret
adc
rorl
and
cmp
das
add
xchg
daa
jp
lods
mov
push
repz
push
mov
xlat
mov
aaa
inc
jno
and
data16
xchg
clc
movsl
cmc
mov
push
sbbl
ss
xlat
fistl
jo
bound
cli
inc
xchg
and
fsubl
jge
iret
add
or
mov
into
xor
and
stos
mov
xor
insl
pop
arpl
cli
das
les
pop
sub
test
arpl
cmp
sub
loope
add
in
incl
cmp
cmpb
out
movsb
out
test
cs
fbstp
mov
das
frstor
pop
je
pop
jbe
fcmovnbe
jmp
xor
adc
xchg
test
ss
mov
inc
jo
add
int3
inc
outsl
jmp
in
daa
mov
pop
iret
in
jl
and
enter
jecxz
repnz
js
in
cmp
xchg
fsubrs
imul
jle
add
pop
repnz
lahf
cmpsl
inc
or
cmp
loopne
or
mov
ja
scas
out
sub
fs
in
dec
cli
pop
rcrl
xchg
nop
mov
movsb
ss
mov
ret
mov
insb
dec
loop
test
dec
pop
add
out
or
push
mov
pusha
rcrl
jmp
mov
adc
nop
push
js
lea
loop
sbb
cld
inc
inc
addr16
cmp
push
and
mov
cld
jae
addr16
jne
lahf
mov
pop
call
and
lret
aaa
shlb
andb
jmp
xor
loop
xor
push
fabs
and
sbb
jmp
movsb
mov
and
or
mov
sub
nop
outsl
lock
mov
loop
leave
cmp
sbb
cld
lock
pop
fs
add
pop
sbb
sbb
out
xchg
mov
lcall
shl
xchg
jg
notl
pusha
inc
pop
out
daa
pop
stc
fs
hlt
jecxz
cmp
iret
js
inc
cmp
xor
jge
sub
jg
sbb
mov
cmpb
movsb
pop
lret
adc
shrl
fldenv
or
jl
fsubr
lods
mov
push
push
nop
out
and
arpl
nop
orl
dec
cmp
adc
add
pop
pusha
xchg
or
xor
ret
std
lods
inc
jl
mov
push
sqrtps
inc
fcmovu
testb
out
loope
in
js
and
push
cli
dec
xor
leave
add
lock
cmp
std
or
les
in
sub
sbb
or
loop
sub
fcoml
test
jne
inc
dec
jmp
sub
js
sbb
rcrb
pop
repnz
or
add
imul
mov
cmp
shlw
jle
pushf
lea
xor
adc
out
adc
insl
loopne
xchg
jo
mov
and
lea
xchg
icebp
adc
subl
inc
dec
movsl
xchg
pop
cmp
in
mov
add
dec
inc
mov
pusha
add
cli
pop
das
pop
int3
shr
pusha
cli
shl
sub
test
or
cmp
in
add
fistps
outsb
es
test
add
adc
in
or
cmp
or
sub
xchg
adc
mov
sbb
xor
pop
cmp
movsb
push
pop
lods
int
pop
cmpsl
test
sub
sub
pusha
scas
inc
ja
xchg
test
mov
pusha
jp
rolb
mov
fiaddl
sahf
inc
pop
mov
in
test
or
jmp
cmp
push
lret
stc
inc
sti
sub
vmread
cmp
pop
xchg
jmp
jecxz
stc
movsb
or
cmp
mov
inc
out
or
mov
xchg
jle
lea
or
cmc
mov
je
int3
jle
rcr
out
cmp
push
pop
mov
xchg
sahf
data16
or
lret
pop
pop
dec
popa
push
xchg
shr
pop
cmpsl
sbb
scas
test
mov
pop
sub
jmp
jl
cmpsb
mov
xor
fmuls
jge
sub
xchg
daa
or
fdivrs
cwtl
daa
sbb
aaa
cld
aam
inc
icebp
movsb
pop
pop
popa
rcrb
cmp
cli
fistpl
sbb
pop
aaa
fcoml
add
sub
xor
movsb
xor
jecxz
jne
mov
jns
adc
fistl
push
mov
stos
sub
hlt
test
icebp
xchg
push
inc
daa
add
mov
insb
cmp
mov
fwait
divl
xor
cwtd
mov
lcall
and
sub
xchg
lds
rcrl
add
fimull
test
inc
stos
insl
aam
mov
cmpsl
or
nop
mov
lds
jb
enter
xchg
je
out
inc
sub
jl
push
inc
orb
js
into
das
fcoms
add
xchg
add
xchg
jne
jnp
mov
mov
insl
cld
sub
aas
dec
and
out
cli
pop
decb
fnstcw
dec
outsb
sub
push
enter
pop
andb
mov
cmp
xchg
test
hlt
pop
repnz
push
push
sbb
pop
sub
movsl
pop
cmp
rcrl
mov
push
sbb
movb
adc
jae
das
dec
stos
into
dec
cld
pop
mov
xor
mov
je
jg
pop
jb
inc
rorl
mov
cmp
inc
sbb
pop
adc
mov
cli
js
cmp
mov
sbb
add
test
sti
and
xchg
mov
pop
xor
sub
adc
movsb
movsl
mov
adc
loop
dec
mov
mov
sti
mov
aaa
sub
je
cld
mov
sbb
sti
shl
enter
shl
mov
sbbl
sbb
inc
jae
xor
sbb
or
xor
xchg
inc
mov
rclb
stos
repnz
lret
stos
pop
clc
jmp
sbb
ret
cmp
jb
das
aaa
cmp
mov
addl
pop
testb
aad
mov
mov
lahf
aas
sbb
sti
stos
adc
stc
xchg
ficompl
mov
loop
loopne
sub
jl
push
ss
sub
inc
push
dec
inc
push
in
shrb
ss
jge
jp
rolb
data16
or
dec
jl
call
pop
aam
mov
sbb
call
mov
repz
fwait
cpuid
cmp
aas
inc
sti
ficompl
xor
icebp
daa
sub
cltd
inc
rorl
int3
jbe
testl
push
lea
shlb
pop
in
push
sub
test
mov
lock
adc
cmp
fs
jb
xor
mov
cmp
subl
repz
push
xor
out
rolb
xchg
dec
in
lock
mov
jl
pop
vdivps
push
fwait
cmp
pusha
and
pop
add
push
lock
jge,pt
mov
push
leave
xor
mov
popa
rol
push
or
test
push
bnd
aad
push
dec
cmpl
dec
sbb
xchg
sub
jo
aad
add
pop
add
adc
cld
push
adc
orb
lret
jmp
xor
lods
push
pop
dec
jp
cs
push
aad
jnp
shll
mov
movsb
addr16
ret
hlt
in
sti
adc
test
adc
aad
movsb
inc
cld
and
dec
mov
dec
lahf
imul
ds
cld
dec
cli
mov
or
lcall
rcrl
pop
out
daa
test
out
or
push
mov
jl
shrb
nop
adc
sbb
adc
aas
xor
cmpsl
and
sub
mov
push
and
iret
outsl
hlt
jmp
sub
sti
adc
into
in
and
loope
jl
sub
push
sbb
push
xor
addl
cmpl
test
sbb
out
sar
std
das
xor
dec
push
or
js
pop
daa
mov
icebp
jo
repnz
and
mov
pop
in
test
push
jge
sbb
into
xor
rclb
add
xchg
push
push
icebp
push
aas
inc
into
movsb
ficoms
inc
sbb
add
adc
sbbb
jo
es
sbb
out
aam
pop
sbb
hlt
ret
loopne
pop
test
jg
add
imul
jecxz
inc
adc
mov
aam
int
cs
nop
push
dec
sbb
cmp
imul
dec
and
push
aaa
lcall
or
inc
push
icebp
cs
mov
in
test
add
mov
push
and
stos
sbb
and
and
pusha
jecxz
cmpsl
fsub
repz
mov
sub
add
mov
sub
pop
shlb
lcall
andb
pop
movsb
ret
push
push
cmp
scas
fucom
or
lcall
adc
dec
jmp
cli
into
aaa
push
call
dec
gs
inc
cld
lods
inc
xlat
fcoms
mov
dec
es
pop
xor
inc
sbb
dec
shlb
add
add
mov
sbb
lods
test
gs
xchg
js
clc
inc
jl
loopne
cmp
cmp
imul
xor
xchg
stos
fs
xchg
pushf
imul
xchg
neg
jle
xchg
mov
xchg
xchg
inc
movsl
dec
out
xchg
inc
into
mov
mov
and
rcll
sub
inc
icebp
jle
out
sub
sahf
lock
lods
stos
bound
pop
or
lahf
enter
dec
hlt
addr16
lods
mov
jno
pusha
inc
sub
jnp
shl
popa
inc
cmp
add
cmpsl
pop
stc
cmp
mov
add
adcb
sbbb
aaa
push
sahf
and
or
mov
push
pop
pop
cmp
push
test
pop
idivb
lcall
jmp
insb
jbe
shlb
xchg
aas
call
dec
div
push
push
and
aad
movsl
dec
insb
and
mov
in
addr16
lea
xchg
ret
scas
in
sbb
mov
jmp
scas
call
jg
hlt
leave
in
inc
dec
push
cmp
sbb
sub
xor
xor
outsb
mov
sbb
test
mov
push
call
mov
ret
fimuls
and
cmp
dec
xor
push
cli
fs
xlat
lea
mov
sbb
adc
xchg
mov
pop
int3
ja
iret
cwtl
or
enter
and
insl
push
cmpsl
in
jb
mov
popa
loopne
inc
sub
xor
mov
cltd
pop
jne
pop
mov
add
dec
push
mov
jmp
das
jl
or
aad
test
mov
aad
lea
adc
sarb
mov
add
and
mov
mov
mov
fs
clc
xor
jg
or
xorb
decb
sarl
insl
int3
push
push
adc
imul
push
cmpsl
test
popf
jbe
stos
inc
pop
mov
fldenv
inc
jp
sahf
jp
sbb
inc
testl
mul
pop
lods
xchg
mov
sub
pop
call
test
xor
mov
cli
mov
loopne
adc
sbb
mov
rcll
imul
pop
je
cmp
in
push
test
sub
cld
push
sbb
rol
xor
cmp
and
shrl
jl
inc
xor
or
sahf
pop
sahf
xchg
out
lds
ljmp
out
loop
loope
cmp
in
sub
and
add
dec
fs
inc
and
js
aam
cmp
mov
sbbb
sub
stos
repz
test
dec
and
ficoms
in
or
cmp
fsubl
and
test
pop
jns
or
pop
push
push
xchg
lea
add
pop
pop
int
fimull
fistpll
in
mov
outsb
mov
les
ljmp
lock
lret
in
xlat
or
pop
popa
xchg
jle
push
sbb
cmp
fisttpl
add
add
pop
icebp
hlt
push
popf
mov
xor
ret
jg
mov
pop
add
lahf
dec
push
gs
loopne
sbb
in
test
das
add
arpl
cwtl
popa
xor
test
mov
shll
loopne
add
movsb
fcmovb
ret
ficompl
sbb
dec
hlt
push
ret
push
push
mov
push
dec
or
insl
xor
es
repnz
fadds
out
jmp
inc
in
loopne
notl
pop
xchg
lds
or
jae
hlt
test
sub
sbb
cmc
push
adc
call
in
or
add
icebp
sub
mov
sub
lahf
data16
sub
or
sahf
or
sbb
add
jp
and
mov
outsb
ret
inc
inc
xor
mov
add
leave
jae
test
jecxz
ja
xor
mov
push
jecxz
cltd
mov
adc
jno
dec
pop
inc
sub
rclb
or
inc
inc
cmc
xor
sub
hlt
movsb
sbb
jge
pop
popa
pop
addr16
gs
inc
cld
into
and
sub
xor
xor
std
clc
iret
outsb
icebp
xchg
and
xchg
pop
pop
sbb
or
inc
inc
push
or
push
mov
mov
add
sbb
enter
adc
jecxz
adc
loope
loop
or
aam
les
push
add
push
repnz
mov
jmp
fs
test
add
pop
lret
adc
enter
lods
sub
adc
adc
push
lret
pop
xor
icebp
mov
fistpl
adc
dec
inc
fsubrs
xchg
lock
lods
test
test
imul
outsb
push
sbb
xor
and
aas
pop
or
xchg
sbb
dec
dec
or
into
popf
mov
clc
and
sub
or
int
add
js
pop
jle
add
out
popa
shll
negl
inc
push
pop
xchg
and
xchg
arpl
cmp
add
jns
mov
sahf
ret
cmpsb
ret
std
and
dec
in
jg
dec
inc
sbb
repnz
pop
movsb
call
and
lret
push
dec
add
enter
push
sbb
popf
cmpsl
out
test
mov
cld
add
xchg
mov
fidivs
mov
loope
daa
bound
lea
flds
sbb
sbbl
std
adc
jg
loopne
sub
mov
je
xor
in
dec
mov
orl
fstpl
add
popf
mov
bnd
cmp
jne
jp
push
mov
inc
pop
leave
xchg
ret
es
movsb
mov
fadd
shrl
xchg
inc
test
mov
jl
mov
mov
xor
inc
fisubrs
jle
sub
push
pop
int
sbb
push
xor
cltd
pop
int3
pop
stc
stos
mov
test
jmp
sub
das
lret
adc
inc
fsubrp
jno
pop
or
sbb
outsl
sub
pop
cld
mov
sbb
adcb
jle
aam
ret
lods
mov
test
out
inc
loopne
loope
mov
lds
sbb
inc
xor
mov
mov
cmpsb
push
inc
jns
sbb
mov
mov
fwait
sub
mov
rol
pusha
jo
cmpsb
push
pusha
push
pop
pop
jg
xor
adc
imul
pop
mov
mov
cmp
push
hlt
cld
sub
pop
inc
std
mov
or
jae
push
je
jge
dec
sub
push
test
sub
push
mov
xor
inc
lds
test
mov
loop
inc
inc
lea
dec
movsb
jmp
xchg
rcrb
jae
mov
movsb
inc
std
inc
lret
jno
push
fcomi
sbb
add
add
push
push
or
loope
subl
subb
add
int
mov
and
sbb
test
loopne
dec
inc
stos
mov
scas
pop
lea
ficompl
faddl
lret
sbb
pop
movsl
mov
fs
or
std
adc
hlt
jecxz
adc
fnsave
mov
lea
cmpsb
rcr
sbb
xchg
add
sbb
xchg
out
pop
jbe
cmp
movsl
xor
ret
outsb
test
mov
inc
push
cmp
popa
addl
jne
mov
lods
aas
movsb
sbb
jmp
and
comiss
lcall
mov
adc
sahf
sub
sti
mov
pop
cmp
pusha
in
addb
sub
adc
gs
inc
jle
das
lret
fisttpll
stos
enter
jle
test
mov
and
push
mov
loopne
and
mov
inc
jecxz
fidivl
popl
mov
jl
cmp
mov
mov
adc
and
mov
jb
mov
stos
or
int3
mov
fisubrl
fxtract
mov
pop
shrl
sti
xchg
ret
dec
into
or
rol
mov
call
and
int
je
mov
dec
xchg
push
shrb
mov
and
inc
cmp
xor
pop
rorl
ret
fcmovne
je
ss
mov
adc
push
subb
popa
mov
clc
fidivrl
or
jecxz
or
es
and
clc
in
ljmp
call
out
adc
inc
mov
mov
leave
dec
cltd
mov
mov
adc
push
fs
shll
dec
repz
sbb
mov
gs
and
daa
test
rcll
jae
mov
test
mov
inc
mov
mov
fs
adc
jae
jns
insl
sbb
adc
cs
repz
mov
nop
pop
stos
or
fldcw
aam
sahf
pop
mov
adc
insl
dec
std
mov
subb
out
add
test
test
std
ret
imul
cmp
fs
into
fwait
mov
out
or
sbb
sub
in
shrl
sahf
jno
push
sahf
xor
outsb
mov
sbbb
mov
cmp
in
jo
lods
sahf
cmp
adc
sbb
mov
mov
push
int
jns
in
es
sub
xchg
faddp
add
inc
cli
shr
add
and
mov
pop
sub
je
ds
pop
loopne
repz
cli
pop
xchg
jbe
or
testb
add
xchg
cmp
mov
dec
mov
test
outsb
fisubrl
inc
in
lret
pop
cmpb
cwtl
jl
outsb
daa
pop
pop
addl
je
lock
push
jo
imul
mov
int
icebp
or
cmpsb
xchg
push
sub
negb
inc
inc
inc
xlat
repz
mov
adcl
not
out
loope
les
ds
and
mov
dec
pop
popl
js
mov
pop
or
int3
inc
loopne
fmull
cwtl
inc
mov
jmp
xchg
and
pop
push
sub
mov
add
cmp
inc
in
or
and
and
cmp
lods
rcll
in
lods
inc
mov
sbb
cmp
mov
lock
in
sub
push
add
in
sub
daa
sub
inc
stos
xor
rcrb
inc
pop
push
lds
mov
mov
dec
sbb
adc
daa
dec
mov
pushf
notb
daa
int3
xchg
insb
inc
in
cmp
mov
mov
sub
stos
loope
test
jl
rorl
int3
inc
nop
arpl
add
mov
pop
mov
fs
mov
push
or
push
in
mov
iret
in
sub
aas
add
fmull
ret
inc
adc
and
mov
lock
mov
sbbb
jl
dec
push
mov
mov
inc
jge
in
xchg
and
inc
in
cmp
and
fcmovnu
sub
fadd
push
add
mov
mov
jl
and
jle
and
ret
dec
sbb
xor
in
xchg
insb
push
scas
jp
add
aam
or
mov
movsb
jo
jl
inc
in
mov
dec
dec
inc
dec
aam
mov
adcb
fs
push
pop
mov
leave
inc
stos
or
or
pop
jnp
add
ret
mov
sub
pop
daa
rolb
in
push
jmp
fucomp
in
jmp
mov
pop
cmpsb
pop
fadd
pop
adc
jle
jmp
and
inc
mov
and
jnp
sbb
inc
fcoml
out
or
mov
les
loope
mov
stc
loope
add
inc
jnp
sub
js
xchg
or
xchg
jge
dec
pop
sub
xchg
dec
dec
and
mov
mov
fcoml
cmp
in
fs
xchg
dec
lock
into
sbb
hlt
ret
fwait
inc
pop
jnp
dec
and
or
jo
clc
jmp
xchg
mov
std
stc
mov
cmpsl
xchg
dec
jo
sbb
sbb
pop
les
stos
and
push
test
pop
adc
sarb
dec
into
mov
mov
sub
jae
mov
add
out
dec
leave
cmp
xor
mov
mov
mov
push
cmc
repnz
inc
pop
decb
mov
test
inc
imul
dec
adc
mov
cltd
cmpsl
or
cmp
ds
dec
hlt
fistps
cmp
dec
loopne
test
lret
insb
adc
iret
out
adc
mov
pop
cmp
mov
or
in
sbb
mov
lcall
mov
mov
out
mov
and
cmpl
inc
sahf
sub
pop
ret
inc
hlt
mov
xchg
mov
hlt
out
dec
and
ret
rorb
jge
xchg
lahf
int3
jle
pop
fdivr
jle
push
sbbb
cmp
lock
sub
jne
add
jo
outsl
loope
ds
mov
out
mov
adc
pusha
out
outsl
sub
aad
sti
pusha
repnz
sbb
xchg
mov
and
in
mov
cld
iret
scas
pop
test
mov
or
sbb
mov
call
or
loopne
xchg
adc
and
pop
mov
and
fdivl
or
arpl
aas
dec
test
xchg
xor
orl
stos
insl
pop
mov
mov
test
mov
push
fisubrs
add
test
std
pop
pop
cmp
fidivs
jg
rclb
adc
popf
mov
lods
inc
push
dec
iret
jb
push
lea
jp
je
je
int3
sbb
inc
ss
mov
aam
push
inc
and
test
and
in
pop
and
fwait
sbb
aam
call
mov
mov
sarb
cmpsl
cmp
add
clc
test
jmp
sbb
sub
popa
sub
jns
push
jmp
add
je
and
or
sbb
sbb
cmp
mov
xchg
pop
stc
mov
fadds
mov
mov
into
ret
call
mov
cltd
decb
xchg
mov
jae
icebp
push
test
cmp
outsl
fisttpl
in
test
sub
shll
fwait
jo
call
int3
sub
test
lods
loope
fcompl
les
mov
js
lock
inc
sub
clc
pop
into
lahf
pop
cli
popa
stc
dec
mov
mov
dec
sti
das
inc
jl
jp
mov
test
aas
loopne,pt
sbb
mov
add
push
inc
int
aaa
int3
xchg
js
xor
sub
or
loopne
cmp
dec
push
ss
jl
ret
dec
or
test
into
sbb
xor
insb
sub
mov
add
clc
inc
sub
mov
push
icebp
pushf
push
lret
pop
xor
pop
jp
cmovp
das
inc
inc
ds
mov
sarl
adc
pop
lods
loopne
daa
hlt
pop
inc
loope
aaa
jg
repnz
xorb
popf
cmp
and
mov
sahf
gs
pop
jl
ret
pop
mov
cli
push
mov
movsb
xchg
mov
dec
inc
pop
push
pop
jg
jbe
mov
inc
out
loopne
fs
push
push
xlat
les
xor
pop
push
mov
pop
test
sub
adc
xor
out
movsb
jp
push
push
cmp
in
ret
jbe
xor
ror
pop
and
cmpsl
mov
push
out
je
dec
std
mov
leave
mov
loopne
aas
cltd
cmp
mov
pop
or
pmaddwd
mov
pop
cmc
inc
or
stos
push
adc
inc
xchg
sti
or
push
inc
jg
in
mov
pop
hlt
inc
ljmp
sub
popf
ret
adc
jp
sub
enter
push
or
mov
lods
notl
lea
shll
xchg
insl
out
filds
push
or
or
pop
jo
add
inc
mov
adc
fdivl
cmp
clc
and
adc
sub
sti
pop
adc
fisubrs
push
push
lock
in
mov
mov
inc
fsubs
testl
xor
aam
add
or
mov
test
jg
dec
and
incl
lock
cli
sub
add
xchg
cld
xchg
rcrl
add
fcomip
push
mulb
int
pop
int
mov
call
mov
sub
ficompl
andb
call
mov
cmp
pop
cmp
sbb
mov
nop
mov
add
mov
cmpsb
test
into
clc
fidivl
sarl
hlt
dec
push
jp
lret
scas
pop
mov
mov
test
in
dec
cmp
sarb
jns
mov
test
xchg
shll
inc
nop
mov
lcall
dec
dec
push
fidivrl
cmp
clc
imul
inc
cmpsb
add
aam
pop
xor
loopne
cli
repz
in
cs
mov
into
mov
imul
ss
add
call
jbe
repz
popl
sarb
movsb
inc
enter
xor
test
xchg
jo
jmp
incl
xor
jmp
daa
cli
xchg
dec
rcl
push
push
enter
dec
stc
xchg
aaa
insb
test
js
sar
jns
or
or
mov
mov
jbe
jmp
inc
aam
mov
icebp
scas
out
ja
mov
inc
dec
sub
sbb
xchg
rorl
mov
jne
std
out
jge
insb
adc
push
test
lds
mov
sbb
mov
lahf
push
jl
and
add
lea
in
fidivrl
sarb
mov
sub
jo
insb
add
roll
ljmp
dec
xor
sbb
or
rorl
push
mov
dec
mov
dec
mov
inc
pop
loop
add
into
subb
or
adc
dec
lds
sar
fisttps
inc
cs
bswap
push
lcall
sbbl
push
inc
sbb
add
jo
inc
pop
add
dec
sbb
mov
adc
or
jo
mov
imul
sti
int3
neg
mov
movsb
fstp
jae
inc
add
jl
je
push
mov
sbb
cmp
fmull
mov
xchg
testl
shrl
jnp
inc
pushw
mov
cmp
cli
call
mov
fcomp
sub
lods
ror
push
mov
pop
xor
push
add
push
jg
adc
jg
mov
aam
mov
adc
stos
fisubl
dec
push
lock
bound
jno
dec
stos
xor
les
mov
cmp
mov
into
rorl
fwait
mov
shl
inc
enter
arpl
mov
mov
cltd
inc
mov
adc
and
ret
test
lods
lods
inc
sub
cmp
rsm
mov
xchg
divb
pop
jmp
jg
popa
cs
or
cmp
leave
and
push
mov
sub
lret
rclb
mov
xchg
mov
scas
or
rcrb
shlb
adc
scas
fstpl
sbb
notl
xorb
jno
pushf
mov
hlt
out
mov
push
out
clc
pop
add
push
pusha
in
sub
push
cmpb
in
cld
adc
sahf
out
dec
ret
imul
lea
iret
jle
or
aad
invd
dec
inc
lret
pop
scas
cmp
sub
or
mov
sub
fs
jge
add
fistpll
mov
dec
sbb
imul
xor
aad
into
lds
loopne
insl
dec
push
fcoml
jl
aas
jo
subl
sub
fcom
nop
and
gs
mov
imul
inc
mov
push
lea
cwtl
fdivl
mov
push
inc
popa
add
mov
rolb
fstps
sarb
sbb
sub
jle
add
ds
test
pushf
test
faddl
mov
iret
ds
mov
icebp
push
xlat
ds
arpl
gs
and
cmpsb
push
pop
pop
mov
mov
dec
add
or
add
adc
lock
mov
lock
les
adc
sub
scas
cmp
inc
mov
push
xchg
inc
outsl
out
dec
mov
lahf
push
pop
jb
in
jle
sbb
pop
mov
in
xchg
add
repz
xchg
adc
or
shll
add
mov
sub
mull
sbbl
fistpll
dec
and
push
cmp
in
fadd
dec
scas
test
ljmp
sbb
test
in
int3
jmp
pop
jg
mov
adcl
aas
sbb
mov
mov
stos
pop
loop
sahf
xlat
xchg
je
mov
test
mov
inc
push
dec
push
jg
cld
add
or
jnp
sarb
cmp
aas
pop
ret
enter
lcall
sbb
lahf
enter
mov
push
xchg
popa
inc
push
jae
stos
test
out
ret
cmp
cmpsl
lret
mov
inc
icebp
mov
inc
pop
sbb
aad
xchg
lahf
fstps
mov
mov
mov
rcr
sbb
sub
lods
mov
add
test
mov
imul
add
fs
inc
addb
mov
add
test
into
xchg
inc
sti
mov
push
push
mov
je
push
insb
cmp
in
in
and
std
push
mov
cwtl
ljmp
sub
mov
dec
jle
dec
cmc
subb
cltd
sub
push
lock
cmp
mov
scas
lds
rcl
or
sbb
xor
pop
fdivrl
pop
xchg
dec
scas
pop
pop
insb
bound
pop
into
mov
jle
xchg
bound
ljmp
sub
dec
jmp
xchg
and
das
icebp
jp
fsubrp
xchg
aad
and
and
xor
add
push
pop
fistps
sahf
sub
jbe
sbb
jns
das
sbb
rclb
imul
test
push
pop
fucomi
jb
pop
insl
xchg
pusha
push
out
cli
sbb
cwtl
mov
lods
mov
jo
inc
mov
lock
lods
cltd
das
or
inc
roll
push
clc
xchg
enter
lds
mov
in
hlt
adcb
push
test
ret
push
xorb
xchg
jae,pt
mov
ret
mov
in
pop
ret
push
dec
xchg
lret
pop
stos
subb
lods
mov
into
dec
jle
xchg
flds
pop
shll
insb
sti
or
fwait
out
push
sub
pop
arpl
cli
xor
inc
in
xchg
cld
push
pop
fistpll
js
xor
fildl
addb
jo
push
inc
in
fsubl
fwait
call
mov
cmp
cmpsl
adc
aaa
or
xchg
dec
add
jnp
push
adc
cmp
jbe
aaa
js
pop
lret
ss
pushf
lock
pop
and
in
enter
jnp
mov
sbb
mov
adc
pop
push
cmc
and
add
call
jbe
pop
outsl
jle
inc
negl
xor
pop
es
popf
stc
add
dec
loop
add
pop
jl
ret
bswap
and
mov
mov
push
mov
push
leave
mov
inc
lea
mov
xor
scas
test
cmp
mov
inc
push
cli
adc
divb
out
push
test
push
in
gs
sbb
rolb
cmove
fldcw
push
fwait
jb
mov
fadds
mov
in
cmp
mov
jge
ficomps
and
ftst
pusha
and
inc
pop
mov
or
mov
mov
das
sub
lock
vmovq
adc
popa
xor
xor
mov
pop
inc
imul
dec
cwtl
mov
dec
pushl
pop
call
popf
sbb
mov
mov
repz
push
and
inc
push
pop
and
andb
cmp
sahf
sbb
gs
std
mov
icebp
xor
pop
pusha
ret
cmp
sbb
adc
fs
shll
data16
jo
fisttpl
add
mov
cs
in
push
push
push
addb
jg
cmc
jo
lcall
ds
xor
pop
pushf
mov
pusha
pop
stos
push
jmp
jg
insl
les
aaa
push
add
movsb
and
outsl
scas
rorl
iret
sbb
lods
rcll
sub
pop
pop
pop
dec
adc
jns
push
test
mov
out
add
pop
jne
stos
les
mov
and
or
jg
xchg
jecxz
jecxz
xor
rorl
fcmovu
cmp
jge
xor
adc
adc
add
clc
push
pusha
xchg
add
pop
and
out
inc
sub
inc
push
xchg
jl
xchg
test
mov
es
pop
fisttpll
lods
push
in
dec
push
dec
lret
faddl
and
xor
push
push
mov
pop
sbb
xor
out
xchg
test
lock
pop
cmp
mov
dec
out
mov
sub
and
sub
jge
xor
int3
ret
adc
rol
sar
adc
movsb
push
pushf
inc
cmpsb
stc
mov
cld
cmp
cli
aaa
sbb
lods
add
jg
clc
lea
jno
dec
in
testb
pushf
pop
adc
fsubrs
xchg
mov
cmc
les
mov
cmpsb
aaa
xor
jmp
add
fidivs
sti
mov
and
fimull
int
jmpw
enter
fnstsw
inc
jne
hlt
pop
inc
push
xor
push
cmp
push
mov
lcall
maxps
std
repnz
pop
insl
xchg
sti
xchg
jne
fsubl
pop
or
sub
adc
popf
hlt
fisttpll
hlt
add
insb
test
or
mov
fidivl
adcb
shrl
jae
jg
sbb
cmp
push
aam
testb
xchg
cltd
popf
push
mov
dec
push
mov
jecxz
addr16
lret
aam
repnz
loopne
out
clc
xchg
sub
adc
pop
out
mov
mov
mov
mov
add
or
lods
in
sbb
fsubrs
mov
fwait
mov
sbb
sbbb
jnp
mov
fimull
popf
ljmp
xchg
shll
pop
pop
push
dec
aas
das
lea
xlat
cltd
idiv
loop
pop
jnp
cmp
sub
cli
mov
aad
int
xchg
xchg
jmp
add
mov
adcb
mov
lcall
pop
xchg
pop
dec
cmp
jge
adc
pusha
sbb
add
cmp
mov
and
adc
scas
sbb
cli
push
hlt
rorl
in
negl
into
rcrl
jge
mov
insl
mov
push
sub
sarb
out
dec
std
sub
ds
mov
loop
mov
sbb
lods
pusha
sbb
in
pushf
movsb
inc
std
outsl
mov
fldcw
sbb
and
add
pop
inc
mov
lcall
negb
mov
gs
add
les
stos
mov
lods
incb
lret
ljmp
faddl
pop
int
sub
mov
and
lea
pop
dec
push
fcmovnb
nop
out
push
mov
adcb
aam
incl
jae
call
in
sbb
or
addr16
mov
andl
out
and
push
into
pop
fsubs
addr16
cmp
ds
and
movsl
fstl
mov
xorl
pop
mov
mov
dec
nop
lods
sbb
or
pop
dec
lods
jmp
mov
jne
mov
test
scas
faddl
nop
repnz
or
scas
dec
mov
inc
jl
push
inc
mov
das
xorl
pop
push
mov
aaa
shl
lret
sbb
imul
test
imul
inc
xlat
dec
hlt
adc
leave
mov
push
inc
fsubrs
add
sbb
and
sbb
pop
andl
stc
cmpsb
pop
les
int3
imul
ret
cmp
mov
jbe
mov
inc
das
outsl
pushf
inc
sub
xlat
mov
ja
test
lret
xlat
sub
int
cltd
test
fwait
in
sahf
movsb
jno
adc
addl
fs
dec
fstpl
ljmp
xchg
mov
test
out
fimuls
pop
pop
push
push
loop
inc
in
sub
mov
enter
mull
loop
jle
inc
shl
dec
inc
push
jns
test
les
cmpsl
test
movsb
jge
push
lds
cwtl
cli
lea
gs
movsl
bound
jae
nop
mov
ret
movsb
jmp
imul
nop
mov
and
mov
stos
mov
movsb
dec
stos
inc
adc
mov
add
dec
int3
cmpsb
ds
or
and
addr16
in
inc
jmp
xchg
popa
push
xchg
mov
sub
mov
sub
lret
stc
insl
push
and
xchg
gs
pop
loop
in
pop
das
lock
test
bound
cmp
scas
aad
pop
addr16
popa
repz
dec
dec
addr16
dec
imul
pop
aas
sub
aas
aaa
cltd
stos
lods
frstor
icebp
nop
or
push
push
mov
rcrl
aas
cmc
mov
cmp
test
ret
loop
shrb
into
js
pop
lahf
inc
lcall
jns
inc
mov
inc
cmp
mov
test
mov
and
nop
xchg
in
cmp
hlt
jecxz
test
add
test
test
lods
dec
sub
in
add
jl
rol
rclb
movsb
cli
pop
inc
jb
and
or
sti
mov
es
push
es
in
dec
loop
shrb
and
mov
stos
cmpsb
push
add
pop
mov
jne
sarb
test
ret
push
call
mov
movsl
mov
mov
cmp
mov
fistps
dec
add
fidivrl
push
jmp
cs
jnp
push
aad
cmp
test
push
iret
pop
sarb
jae
or
cwtl
roll
inc
movsl
push
fdivl
add
sbb
sub
mov
iret
dec
mov
inc
push
dec
stc
jl
fiadds
outsl
jl
xchg
lods
lret
cmp
das
xchg
xor
xchg
cmc
adc
and
cmp
das
sahf
in
loopne
jmp
fwait
lods
movsl
dec
adc
pop
dec
rorl
test
int3
fdivrs
add
aam
loopne
movsl
or
xchg
xor
nopl
jmp
xchg
lods
inc
or
or
loope
cltd
bnd
shr
nop
in
data16
je
lea
jnp
pop
scas
inc
lret
push
popa
loopne
pop
int
icebp
inc
pop
cmpl
push
insb
ficoms
xor
adc
and
xor
cmp
pop
mov
popf
sbb
nop
imul
test
xchg
mov
push
fidivrl
mov
cltd
gs
mov
mov
or
sbb
push
mov
pop
mov
pop
jo
insb
adc
std
jp
lds
faddl
pop
ret
mov
ds
sub
xchg
into
sbb
pop
lahf
addl
loop
mov
push
mov
sub
sbb
cli
roll
sbb
cmpsl
mov
lods
cmpsl
jp
aam
leave
popf
icebp
xchg
dec
pushf
mov
or
xor
leave
dec
dec
ret
sub
cmpb
mov
mov
fiadds
xlat
and
scas
outsb
insb
lds
mov
in
and
out
sbb
cmp
test
sbb
and
and
adc
outsb
and
mov
sarb
and
lahf
int
xlat
xor
and
lcall
lock
add
pop
add
and
push
sahf
test
mov
push
adc
nop
cmpsl
mov
pop
mov
xlat
mov
sahf
and
jl
call
dec
ret
out
add
dec
shll
or
imul
stos
sub
xchg
dec
cmp
add
push
jnp
stos
push
inc
jns
push
ret
xchg
push
jae
scas
and
pop
pop
mov
sub
cwtl
pop
jle
xor
pop
in
push
out
push
pop
and
pop
push
push
out
mov
arpl
addr16
fildll
mov
mov
sub
das
clc
xor
icebp
sbb
cwtl
imul
cld
clc
pop
mov
int
fiaddl
mov
mov
ret
sub
les
sbb
xlat
pop
popa
push
aam
iret
fdivl
out
cmpsb
outsb
out
mov
mov
cmp
pop
pushf
and
popa
or
lret
inc
mov
dec
adc
adc
push
cs
push
js
mov
xchg
es
adc
pop
push
lret
faddl
pushf
push
jae
insb
xchg
mov
bound
aas
int
sbb
jmp
and
inc
sub
sub
mov
push
mov
hlt
or
sub
test
into
lret
testb
mov
subb
flds
pop
mov
shll
rorl
dec
hlt
adc
aam
and
data16
adc
mov
pop
std
cmpb
outsb
scas
out
clc
shrb
pop
mov
idivl
hlt
fildl
push
mov
ficoml
fidivrs
cmp
or
scas
cmpsl
pushf
xchg
xchg
push
push
add
iret
or
int
imul
psubw
iret
or
cmpsb
sarb
pop
push
mov
aad
push
mov
adc
lods
rorl
out
dec
or
sub
add
in
inc
or
loopne
sub
cli
inc
mov
mov
mov
fs
jp
pop
cmp
fildll
push
test
movsb
gs
mov
fnstsw
pop
inc
ret
shlb
les
ja
push
and
inc
xchg
jl
inc
xchg
inc
lock
scas
cmp
and
xchg
arpl
jbe
add
stos
pop
jmp
outsl
test
cltd
add
pop
push
and
pop
mov
rolb
or
xchg
ret
out
fisubrl
jo
mov
mov
call
rorl
mov
jno
jp
mov
add
pop
mov
and
cmpsb
or
clc
popf
add
pushf
push
negl
pop
movl
mov
xchg
enter
pop
loope
xor
inc
mov
sti
mov
insl
cmp
push
out
add
jns
enter
push
orl
mov
stos
in
addr16
fs
mov
das
mov
cmp
mov
icebp
and
or
and
jmp
add
pop
jo
or
push
xchg
inc
mov
mov
mov
pusha
ret
cmpsb
sub
stos
xchg
fnstcw
data16
xchg
enter
dec
xchg
mov
pusha
add
out
fs
and
inc
fnsave
test
popa
nop
and
xor
int
leave
jl
incl
clc
push
sub
jmp
out
loopne
mov
xchg
dec
sbb
push
mov
loopne
scas
daa
jle
inc
dec
xchg
cltd
mov
clc
outsl
adc
pop
and
mov
dec
test
lock
call
jns
fisubs
outsl
dec
mov
dec
inc
dec
xor
fisubs
das
cwtl
xchg
sar
pop
out
aas
outsb
lahf
mov
pop
or
imul
push
pop
repnz
pop
in
out
jno
cmpsb
xchg
sub
test
sbb
aam
daa
rorb
stos
push
jae
cmp
mov
aas
sub
adc
xor
sahf
outsb
sub
scas
jb
and
daa
xchg
clc
fsubs
pop
or
jle
add
clc
in
sub
inc
mov
sbb
ret
les
or
std
inc
xor
test
mov
sub
jl
decl
jge,pn
sub
pop
xor
cmpsl
imulb
aas
rorb
and
insl
outsb
sub
sbb
xor
fistl
repz
push
cmpsb
or
repnz
out
sti
lock
fs
fidivrs
jb
jb
sbb
cmpsb
out
sahf
xchg
fnstsw
mov
loopne
std
call
cmp
nop
leave
ds
push
std
test
pop
push
xchg
dec
jb
or
lods
pop
subb
aaa
sub
insb
fbstp
xor
scas
les
xor
adc
out
adc
xor
push
je,pn
sbb
jnp
add
sbbb
gs
adc
dec
ss
les
cli
lahf
jge
dec
addr16
or
leave
or
subb
sub
xchg
push
test
pushf
std
xor
ret
daa
out
mov
sbb
in
jge
icebp
push
push
into
rcl
js
int
mov
call
in
jle
movsb
inc
mov
mov
lds
dec
aam
jmp
dec
in
adc
stos
sub
int
lret
mov
clc
pop
mov
pop
cmp
xor
push
pop
les
dec
stos
les
add
sbb
iret
es
pop
add
andl
and
adc
insl
inc
call
mov
xorb
aad
popf
jge
mov
or
in
pop
iret
dec
push
scas
add
xchg
cmp
pop
push
outsl
js
fwait
mov
stos
and
clc
dec
ret
jne
push
test
mov
cwtl
sub
inc
mov
lret
ftst
enter
push
mov
lcall
jle
xchg
or
mov
mov
cmp
out
push
cld
mov
fwait
or
movsb
mov
adc
push
fadd
ret
fimull
push
ror
inc
push
fmul
push
dec
inc
sbb
mov
pop
addr16
into
push
std
jg
push
lcall
int
sbb
js
insb
das
call
repz
fisttpll
push
xchg
pushf
adc
pop
or
arpl
mov
aam
lret
inc
movsb
cli
imul
std
aad
cmp
sbb
inc
push
jnp
inc
push
iret
mov
dec
sbb
popl
inc
loopne
in
fisubrl
inc
inc
pop
test
in
test
hlt
in
dec
fldcw
jg
jo
sbb
imul
mov
ss
lret
imul
push
cmp
andl
pusha
sbb
hlt
pop
pmulhuw
jmp
lods
lahf
int
add
jo
sub
mov
in
leave
sub
cli
push
rorl
dec
lea
adc
test
mov
push
push
jns
cltd
sbb
test
mov
insb
sub
mov
roll
add
dec
or
or
dec
and
repnz
sbb
ljmp
gs
cmpsl
outsb
push
data16
sbb
sbb
mov
mov
add
gs
es
cmc
jl
push
insb
xchg
gs
add
test
sub
rcrl
stos
jle
es
adc
dec
pushf
jge
jns
adc
pop
push
les
add
or
mov
scas
push
jns
movsb
fistps
movsb
or
mov
fcompl
cwtl
sti
out
inc
mov
mov
jae
scas
mov
push
aas
movsb
cltd
push
int3
pushf
rcrl
mov
test
xchg
sti
mov
dec
pop
dec
les
xor
dec
push
movsb
sub
aam
bound
in
mov
int3
pushf
push
popa
out
orl
jne
lcall
cmpb
out
hlt
in
arpl
call
rol
enter
pop
gs
pop
jne
pusha
int
dec
xlat
frstor
out
out
dec
dec
repnz
aas
xchg
jge
mov
addl
add
les
loopne
sbb
sub
or
leave
push
out
pop
xchg
jge
js
mov
pop
cs
pop
mulb
enter
out
push
aas
hlt
push
pop
pop
mov
idivl
pop
shl
sbb
xorb
lods
in
add
jle
add
inc
test
cli
das
push
shlb
and
dec
fidivrs
inc
push
int3
jae
mov
test
cs
test
call
test
mul
adc
dec
jecxz
push
dec
iret
push
fcomps
das
rorl
mov
pushf
inc
loope
iret
or
mov
mov
out
adc
xorl
sub
or
push
lcall
into
test
cwtl
xor
inc
dec
lods
daa
xchg
jb
iret
inc
rcll
ljmp
add
roll
ror
mov
dec
cwtl
fdivrl
fstps
mov
jg
dec
cld
cmp
test
dec
pop
fdivrs
dec
pop
mov
and
rclb
cmp
sbb
inc
fisttps
jne
js
test
scas
test
out
aam
cmc
xchg
cmp
sbbb
pusha
ja
lea
mov
loope
mov
aad
add
test
es
push
sti
test
jae
orb
mov
mov
jl
cmp
mov
lds
lcall
cltd
inc
iret
inc
lods
pop
and
rorl
fs
or
mov
lock
sub
xchg
xchg
mov
xchg
call
lcall
pop
pop
sbb
cmpsl
push
mov
sti
gs
fwait
jb
adcl
sarb
and
xchg
sti
cmp
popa
mov
sti
dec
das
push
gs
mov
mov
in
push
xor
sbb
jle
cli
sub
mov
adc
jnp
jnp
scas
shrb
jno
outsl
push
mov
add
or
add
xlat
stos
ds
sti
js
fildll
inc
outsl
insl
inc
jb
sbb
or
jp
jge
mov
mov
iret
sub
pop
fstpl
gs
xor
jns
fcoms
notl
pop
mov
daa
mov
pop
or
inc
or
mov
fbld
add
nop
mov
fcompl
pop
pop
imul
pusha
loope
adc
loopne
out
inc
ffreep
stos
or
gs
mov
test
dec
jg
loopne
sti
aaa
mov
cmpsl
stos
pop
sub
stos
mov
xchg
push
dec
add
int
mov
push
pop
jecxz
push
in
mov
ficoms
dec
scas
xchg
in
ljmp
jl
cmp
sbb
scas
lods
in
mov
or
or
out
popa
jb
fwait
xor
push
dec
jae
xchg
enter
jo
mov
jo
dec
test
int
sbbl
or
sbb
and
pusha
cltd
inc
or
xor
or
push
bound
test
and
decl
in
addr16
pop
cmp
cwtl
out
push
adc
popf
insl
jbe
push
pop
pop
dec
pusha
inc
xchg
pop
xchg
inc
and
sarb
xchg
mov
sbb
jl
daa
inc
aas
dec
pop
push
pushf
or
insb
shlb
lahf
sub
lretw
pop
jl
loop
mov
adc
add
and
aad
sub
pop
cli
dec
xchg
sti
gs
in
dec
adc
jecxz
fstpt
mov
sbb
psubq
mov
in
sbb
lahf
fadds
enter
loopne
out
xchg
les
and
cmp
cmp
int
pop
mov
aam
mov
or
pop
fbstp
cmp
call
xchg
cmpsb
ficoms
dec
mov
jnp
cmp
and
call
inc
push
lcall
in
inc
xor
addr16
pusha
sub
pop
or
pop
out
sbb
fwait
rcll
lods
fcmovne
or
dec
cmp
mov
mov
cli
jo
pusha
push
nop
ret
and
sub
and
xor
pop
dec
in
jo
std
movb
cmp
addr16
std
fidivs
jbe
sbbb
mov
out
scas
or
jmp
inc
repnz
inc
ret
pop
outsl
pop
je
cmp
push
add
movsb
dec
jp
pop
cltd
test
mov
test
adc
jg
cmp
xchg
clc
int
add
loopne
lret
or
out
test
xor
lods
inc
dec
mov
test
jb
cmp
ja
mov
loopne
sbb
add
sub
fadds
sub
call
enter
mov
and
inc
jg
int
sbb
pushf
xchg
jnp
out
xor
or
fistpll
mov
pop
adc
mov
rclb
loopne
in
xor
lods
int
les
lcall
test
les
xchg
cltd
push
rorb
xor
int3
loopne
sahf
aaa
pop
push
jo
dec
xor
test
adc
out
or
es
fsubs
out
sbb
addr16
dec
loopne
std
xchg
clc
lcall
push
test
movsl
fnstenv
push
jb
in
cli
call
inc
filds
ret
mov
add
mov
cltd
cmp
test
or
jo
gs
insb
push
inc
int3
add
push
sahf
jl
push
xor
add
rolb
das
orb
out
rcll
out
jb
ret
jmp
pop
pop
and
pusha
push
lock
pop
xchg
push
mov
test
push
andb
adc
sub
insl
sub
cmp
or
push
inc
clc
jae
cmpsb
pop
inc
push
add
or
xor
outsb
enter
aaa
daa
sbbb
cmpsb
sub
das
mov
push
idivl
icebp
subl
jne
test
xchg
xchg
jb
sub
xchg
sbb
clc
cld
out
pushl
jns
sbbb
cmp
pop
stc
lds
xor
xchg
movsb
fisubl
movsb
mov
xadd
push
cmp
and
sub
mov
adc
jg
mov
aaa
dec
add
faddp
cwtl
out
hlt
in
mov
lods
inc
inc
filds
inc
hlt
cld
maskmovq
divl
aam
ror
mov
pop
test
sub
cmp
or
adc
mov
and
mov
bound
jl
lea
pop
xchg
adc
cmp
mov
xor
int3
test
repz
outsb
sub
scas
push
out
inc
dec
out
fwait
sub
loope
adcb
mov
mov
fs
sbb
nop
mull
mov
inc
ljmp
jp
out
mov
cmc
mov
pushf
dec
xchg
jmp
lahf
lret
xchg
sarb
out
mov
into
xor
inc
and
sub
jg
mov
or
cltd
insl
adc
mov
add
add
lcall
rcll
xchg
mov
fmuls
pop
rcrb
test
outsb
pop
popa
adc
lret
outsl
push
inc
jecxz
scas
shl
inc
adc
lock
or
pop
btr
sbb
popf
test
testb
aas
scas
sbb
push
sbb
xor
out
mov
aaa
loopne
aam
or
inc
sbb
push
pop
into
incl
in
cld
bound
pop
gs
repz
ja
outsl
int3
inc
bound
scas
adc
mov
in
stos
adc
add
pop
mov
ljmp
pop
nop
imul
mov
inc
sub
movsb
dec
xchg
push
test
sbb
fimull
lahf
stos
lock
lods
mov
dec
gs
data16
je
pop
jl
cmp
dec
stos
and
pusha
cmp
lret
xchg
iret
sbb
jb
jno
pusha
popa
sbb
mov
pop
bound
sbb
push
xchg
sahf
cld
jne
lods
mov
dec
dec
jmp
call
aaa
jecxz
sub
adc
sbb
rorb
call
loope
or
jmp
fstpt
fimull
push
jno
outsb
sti
inc
xchg
cmp
mov
outsb
faddl
icebp
pop
lods
out
dec
xchg
scas
inc
add
push
jl
or
std
xchg
xchg
mov
leave
or
dec
pop
fs
cmpsb
add
out
cld
in
jle
add
jo
xlat
mov
add
enter
cmpsl
mov
xor
dec
xor
mov
rolb
repnz
inc
ret
lret
pop
outsb
icebp
sub
add
sub
ljmp
adc
loopne
out
mov
add
call
int
xchg
loop
inc
inc
not
sbb
repz
pop
xchg
sub
push
enter
jle
jbe
and
es
xor
lret
int
pushf
jecxz
mov
sarb
in
addb
add
jg
stos
mov
out
in
jmp
rorb
punpckldq
lods
adc
ret
out
ret
pusha
xchg
push
sub
sti
cmpsb
fidivrs
jl
sub
shr
pop
leave
adc
clc
mov
aaa
push
es
sbb
mov
mov
pushf
pop
nop
push
cmp
stos
sub
mov
pop
inc
jns
cld
movsb
or
jle
addr16
pop
adc
pusha
gs
ret
mov
inc
push
push
loopne
push
repnz
inc
pop
int3
cmp
mov
ljmp
shll
gs
mov
repz
int3
fisubl
jno
lea
pop
jno
movsl
jns
mov
lock
pushf
pop
addr16
call
sbb
ljmp
adc
shl
xor
rorb
mov
xor
int3
sbb
mov
cli
mov
cvtps2pd
jnp
pop
jmp
pop
test
insl
and
cmp
lahf
adc
mov
ret
je
movb
cmp
lds
sbb
call
xor
das
fdivr
mov
bound
cs
ret
adc
int3
jl
inc
leave
pop
test
mov
inc
aaa
cmp
xchg
mov
enter
lea
inc
daa
sbb
shlb
test
fidivrl
adc
in
and
mov
lea
in
add
mov
js
jbe
notb
pusha
mov
inc
cmp
mov
push
cmpsb
and
push
pop
das
adc
movsb
insl
and
cmpb
fcoml
jecxz
cwtl
lret
pop
cmp
out
andb
dec
cmpsb
stos
push
jae
mov
mov
fsubrs
push
cltd
jmp
lcall
icebp
cwtl
loopne
dec
loop
cmp
push
shll
mov
lcall
jno
out
ss
and
pushf
xchg
in
in
mov
int3
jae
add
ret
jbe
pushf
in
shlb
lds
cwtl
lcall
cmp
cmp
cmp
sahf
inc
adc
and
leave
add
cmp
mov
sub
mov
inc
and
ds
fcmovbe
stos
sub
jne
and
mov
adc
xor
mov
adc
push
jg
imul
dec
cmp
pop
xchg
inc
rcrb
sub
out
lock
mov
or
or
inc
sub
fidivs
push
jbe
and
adc
lods
fdiv
into
subl
dec
pop
stos
in
in
mov
sub
adc
mov
dec
out
jne
dec
or
inc
les
lret
loop
xchg
imull
cmp
incb
sub
adc
fsubs
sub
mov
push
in
cltd
dec
push
outsl
xor
outsb
add
flds
and
add
push
jbe
in
mov
xchg
nop
scas
stc
xor
adc
mov
repz
rcrl
in
cmp
dec
rcrl
repnz
pop
or
push
xchg
and
test
sbb
fsubr
sbb
je
js
xor
lret
movsb
inc
sub
sub
popf
dec
stc
mov
out
fistl
cld
sub
adc
adc
sub
adc
in
cmp
or
scas
mov
xchg
cmp
out
ljmp
shufps
loopne
adc
or
and
cmp
add
jecxz
mov
faddl
cmp
fisttpll
xor
add
int3
int
adcb
or
iret
xchg
aas
test
daa
std
jbe
jle
or
iret
mov
ds
outsb
push
scas
jle
push
pop
push
sbb
lds
sub
mov
sub
mov
pop
or
pop
pop
and
cmp
jecxz
jmp
and
jp
out
mov
mov
mov
push
xchg
call
mov
fiaddl
mov
orl
mov
xor
xor
outsl
jecxz
add
into
fs
jl
xor
adc
cmp
push
mov
inc
in
pusha
mov
mov
mov
mov
xchg
test
stos
and
mov
cmp
push
ficomps
mov
test
aas
push
cmp
mov
xor
dec
mov
clc
push
dec
mov
mov
sarb
mulb
push
xor
fs
xorl
jg
test
inc
dec
popa
gs
inc
inc
sub
and
ret
push
mov
xchg
or
mov
push
lods
mov
out
aas
fistpl
add
dec
rcrb
mov
xchg
add
xchg
negb
cmp
ljmp
aas
fisubl
pop
repnz
adc
rol
out
mov
mov
pop
flds
or
insl
in
inc
std
inc
jae
dec
cmp
das
push
pop
adc
sbb
in
mov
roll
icebp
int3
pop
inc
subl
in
or
int3
dec
sub
sbb
loope
mov
aaa
pop
sbb
lret
icebp
inc
test
mov
lea
ret
dec
jne
sbbl
aad
adc
push
notb
sub
or
in
push
jle
imul
sbb
or
or
inc
repz
add
jne
cmp
mov
push
sahf
jne
cmp
push
xchg
sahf
lret
movsb
lahf
sub
jg
in
je
test
nop
in
or
fisttpl
or
ljmp
mov
insb
push
into
adc
jecxz
mov
inc
mov
xchg
push
out
mov
jb
jp
sahf
cld
dec
outsb
and
test
sbb
lret
pop
dec
sahf
adc
sub
repnz
shll
aad
pop
add
mov
pop
xchg
xchg
mov
insl
arpl
inc
test
cmp
fdivrl
lock
push
imul
gs
ret
cmc
test
sahf
mov
adc
rol
pop
sahf
fs
or
repnz
mov
dec
mov
push
std
sahf
jecxz
xchg
in
cmp
pushl
aaa
and
cmp
jle
inc
test
push
dec
mov
iret
pushf
pushf
sahf
mov
adc
cmpb
rclb
pop
mov
cltd
lock
pop
test
cmp
mov
dec
stos
int3
pop
mov
jne
jb
mov
movl
lock
mov
call
ljmp
mov
outsl
adc
sub
dec
lds
sarl
or
push
mov
mov
sub
ret
pop
adc
sbb
pop
dec
fwait
popa
mov
cmp
pusha
push
mov
stos
loope
cmpsl
pushf
xchg
out
andb
in
out
cwtl
inc
data16
adc
sbb
jecxz
arpl
or
lea
add
fcoml
psubusb
sub
andb
lcall
adc
inc
mov
pop
into
xchg
xchg
xor
popa
fisubl
add
sub
dec
xchg
xor
fiadds
lds
jl
add
pushl
in
fisubl
sbb
xor
mov
xchg
xchg
repz
test
cmp
cli
adc
xor
pop
ret
lods
mov
pop
lret
imulb
lret
dec
cmp
xor
add
int3
xchg
js
icebp
popa
dec
mov
adc
sbb
or
push
jae
lret
inc
in
es
pop
call
mov
or
dec
mov
xor
repnz
add
push
and
inc
adcl
inc
push
sbb
push
fdivrl
and
mov
ret
pop
cmp
rolb
xchg
lods
adc
jg
mov
xchg
or
mov
pop
in
mov
nop
and
imul
je
mov
fistl
test
add
mov
fldcw
ss
aam
test
divb
cmp
clc
shrl
sub
and
repnz
stc
sbb
fs
rolb
sahf
cmp
nop
or
inc
mov
add
test
cmp
jno
jo
shrl
lret
adc
shrb
xchg
test
sarl
stos
lcall
enter
ljmp
ds
and
ss
xlat
sbb
mov
ficoml
insl
add
fs
xor
addr16
hlt
add
aad
mov
mov
icebp
add
das
repz
jp
xchg
adc
xor
shrb
mov
pop
addr16
hlt
mov
iret
xor
cmp
test
xchg
fists
es
shl
test
cld
ficompl
dec
jno
fisubl
mov
pop
rorb
xor
or
roll
out
and
sbb
ret
inc
jno
xchg
cmpsb
inc
lahf
mov
adc
add
daa
les
ljmp
adc
xor
pop
lcall
pop
test
or
rorl
pop
fwait
int
cmp
xchg
sub
out
or
mov
dec
sub
jb
icebp
add
lea
xchg
pop
movsb
int3
jp
decb
repnz
mov
rolb
mov
sbb
dec
mov
test
cmc
sahf
test
add
ret
addr16
xchg
repnz
mov
mov
xchg
rcll
or
cmpsb
mov
loop
into
mov
cmc
push
xchg
dec
leave
addr16
les
push
xor
xor
or
mov
mov
enter
sbb
mov
mov
gs
mov
int
les
outsb
aas
mov
sbb
loop
jmp
into
and
fistl
cwtl
ret
adc
pop
mov
sarl
push
mov
outsb
jmp
call
sbb
xchg
jno
icebp
xor
sbb
addr16
dec
jg
xor
xchg
movsb
mov
and
mov
es
xchg
test
push
pop
sub
mov
mov
hlt
adcb
je
mov
imul
adc
scas
cmp
push
repz
mov
pusha
add
jne
pop
in
subl
sub
repnz
add
sarl
gs
push
scas
mov
xchg
addr16
lds
dec
cmp
jo
mov
in
insl
sarl
pop
pop
pop
bound
punpcklbw
test
inc
mov
pop
pop
pop
fs
or
loope
and
pop
fidivs
mov
sbbb
pop
pop
pop
adc
hlt
jg
sbb
mov
or
xorb
lea
roll
xchg
andb
test
pop
fdiv
cmp
mov
cs
lcall
icebp
pop
inc
sub
fimuls
int3
lods
push
out
pop
je
inc
addb
adc
lea
clc
lock
mov
cmp
jo
dec
jle
mov
push
push
push
inc
pop
jg
int3
fdiv
rcrb
mov
xor
test
rcrl
je
dec
popa
xchg
cmp
or
shll
mov
push
in
jns
outsl
int
lret
outsl
or
dec
cs
out
loop
adcl
test
dec
jbe
lret
adc
outsb
cmc
jbe
sti
subb
push
out
jbe
xchg
cli
les
aad
mov
dec
cmp
out
mov
xchg
pusha
popf
pusha
stos
pop
arpl
sbb
fcompl
dec
dec
inc
inc
std
cli
xlat
jle
sub
subb
pop
scas
repnz
cs
cli
jae
xchg
mov
fs
xor
je
mov
dec
add
insb
cs
add
mov
push
mov
in
inc
mov
mov
aam
leave
xor
dec
mov
gs
rcrb
repz
sub
mov
jno
ror
adc
lcall
adc
pop
adc
sbb
fisubrl
mov
mov
test
jge
pop
hlt
sahf
out
adc
mov
fwait
pop
shlb
in
inc
add
jo
aaa
mov
mov
push
ret
popf
mov
fnsetpm(287
aam
inc
lahf
orb
movsb
fwait
inc
ss
in
xchg
sbb
push
push
out
adc
pop
pop
dec
in
push
faddl
mov
clc
in
sahf
leave
cmp
test
xchg
imul
pop
rorb
fstl
jecxz
into
mov
call
icebp
fmul
cld
push
xchg
outsl
adc
cld
push
cwtl
pop
call
jno
arpl
mov
cmp
cli
je
jp
push
xchg
push
pop
pop
xor
inc
fsubrp
fcmovb
xchg
dec
subl
jle
add
faddl
mov
and
js
dec
push
mov
in
xchg
aad
push
dec
sti
sahf
xor
mov
adc
mov
cs
data16
repnz
push
cmp
loopne
inc
ja
es
mov
outsl
add
into
mov
das
scas
hlt
adc
test
shl
cli
xor
and
mov
or
sub
mov
call
out
xchg
cmpsb
pusha
mov
lods
or
push
xchg
rolb
in
cmp
sub
fsubrs
cmpsb
or
mov
repnz
inc
lahf
adc
jo
test
movsl
lret
loopne
mov
sbb
sub
icebp
pop
je
adc
sbb
xchg
loop
loop
test
mov
mov
xor
hlt
cmp
int
ds
rcrl
ja
shl
lock
cmp
mov
sub
xor
ja
mov
cld
add
xor
popa
cmp
add
jecxz
hlt
inc
xor
pop
xchg
cld
mov
push
gs
push
lds
adc
outsb
and
addl
jb
add
repz
and
xor
dec
push
add
xor
enter
mov
loop
sbb
mov
cmp
mov
stos
xor
je
jmp
data16
jecxz
push
sub
js
jno
pop
iret
jge
das
mov
test
or
in
inc
jle
mov
sahf
fists
pop
mov
xor
pop
mov
repnz
pop
in
in
popf
mov
mov
mov
aas
inc
mov
clc
xor
lcall
fnsave
fimull
jns
movsl
adc
inc
pop
push
sahf
mov
cmp
pop
loop
orb
scas
mov
jecxz
xor
jnp
outsb
push
icebp
not
loopne
or
cld
cli
or
es
icebp
cmp
xor
xchg
pop
lret
cmp
aad
dec
pop
pop
jae
in
dec
and
popa
cmp
nop
mov
rclb
shrl
mov
pop
mov
loopne
mov
mov
mov
mov
test
loopne
movsl
leave
sub
fs
jl
outsl
lcall
cwtl
xchg
push
add
call
int3
lahf
in
data16
sbb
adc
int
sbb
or
and
fwait
in
fwait
in
out
imul
or
scas
xor
in
inc
dec
pop
xchg
xchg
adc
cmp
dec
jo
popa
dec
test
les
divl
add
pop
dec
xor
xchg
call
cmc
sub
sbb
pop
mov
bswap
enter
lods
les
aam
lods
scas
fstl
stc
insl
or
inc
sbb
je
jnp
pop
ficomps
sbb
jns
mov
adc
inc
pop
fbld
pop
cmp
xor
xchg
fisubrs
mov
and
mov
add
xchg
add
push
pop
jbe
and
in
jne
int3
pop
scas
aas
inc
aas
xor
xor
repz
call
jne
dec
inc
mov
stos
inc
in
and
clc
icebp
lods
dec
loop
and
push
jl
sub
je
jno
adc
sub
scas
in
pop
divl
jge
lret
test
sub
xchg
jge
repnz
push
inc
orl
and
outsb
adc
adc
sub
rclb
pop
fimuls
jl
add
aad
push
xchg
pusha
rolb
dec
dec
adc
dec
xchg
stc
sub
add
xchg
call
movsb
mov
or
cld
daa
jp
pop
rcrl
mov
mov
pop
or
and
bound
dec
xchg
pop
and
and
in
adc
adc
pusha
out
les
xchg
pop
xchg
sub
mov
in
jb
sbb
jecxz
mov
sbb
ret
xor
and
pop
cmp
mov
fucomip
cmc
mov
fldt
and
in
mov
ret
or
sub
mov
lods
pop
sbb
sbb
mov
pop
xchg
mov
pusha
or
push
dec
imul
mov
scas
sbb
aam
movsl
inc
mov
mov
jecxz
push
xor
lcall
fbld
pop
dec
xchg
pop
sub
jbe
pop
dec
sub
out
jle
mov
loope
pop
cs
inc
dec
les
movnti
add
cmp
mov
inc
or
jo
adc
dec
popf
mov
add
das
aam
inc
clc
mov
push
mov
mov
jb
stc
incb
fldl
sub
push
outsb
sub
sub
sbb
pusha
fistps
cmp
and
mov
fidivrs
adc
xorb
insl
dec
mov
add
and
or
jno
lcall
push
fsubl
shl
stc
daa
dec
mov
dec
mov
cwtl
add
fdivrl
bnd
inc
les
jae
cmp
icebp
arpl
xor
dec
popf
jbe
sbb
lods
bound
lcall
adc
sub
rolb
adc
in
test
and
and
mov
or
les
movsb
jp
arpl
jb
outsb
add
jne
sbb
int
mov
hlt
pop
mov
mov
mov
cmpl
sbb
pop
insl
aas
jl
lods
in
add
pop
push
sbb
movl
fucom
pusha
imul
sarb
mov
loop
jmp
ret
or
jge
ja
scas
xchg
ret
mov
popf
fwait
push
xor
pop
fs
dec
test
shrl
push
xchg
int3
jecxz
cltd
mov
and
leave
sub
mov
or
je
push
jnp
cmp
mov
xlat
adc
rolb
cli
lahf
pop
sbbb
mov
out
push
inc
push
into
stc
inc
lods
jg
and
mov
lods
in
jge
sar
addr16
into
loopne
mov
cs
les
add
daa
cld
cld
add
outsb
ret
or
fmull
test
in
subb
add
push
pop
scas
fsts
dec
or
sahf
dec
mov
add
or
sub
test
mov
movb
js
scas
arpl
mov
scas
rcrb
out
pop
inc
movsb
orb
sbb
fs
sbb
push
in
dec
ja
shl
ror
xchg
sbb
movsl
sbb
mov
lods
int
pushf
loopne
dec
dec
scas
mov
lock
call
pop
in
jbe
repnz
push
ja
std
inc
ss
jp
addb
arpl
add
and
jne
mov
in
push
mov
mov
movsl
mov
or
inc
and
hlt
popa
jb
inc
popf
int3
or
push
or
les
mov
cmp
inc
pusha
mov
jae
push
repz
pop
fcoms
mov
adc
sbb
dec
ss
and
dec
cmp
fstpl
pop
jmp
rorb
ficompl
sbbb
loopne
or
cpuid
ljmp
add
scas
int
push
test
in
cmp
cmp
inc
cmp
mov
in
mov
mov
mov
sbb
loopne
push
cld
push
test
mov
sbb
cmp
cmp
push
mov
icebp
js
leave
add
jmp
dec
mov
mov
push
jno
out
adc
push
and
lret
lods
ret
sub
fbstp
xor
mov
or
inc
call
pop
adc
jp
xchg
inc
test
mov
mov
inc
popl
push
xor
fs
pop
mov
stc
cmp
mov
or
mov
fldl
adc
pmulhuw
mov
data16
leave
int
std
add
aam
sbb
inc
push
jo
repnz
mov
out
mov
pushf
popf
xlat
cmp
jnp
cmp
fwait
or
and
sbb
cmp
in
push
mov
movl
rcrb
and
dec
pushf
push
lret
jae
sub
das
pop
add
push
repnz
inc
test
add
xchg
or
in
add
dec
dec
or
dec
adcl
js
loope
in
orb
sub
xchg
mov
or
add
stc
les
lods
and
mov
xchg
adc
dec
push
stos
cmpb
fabs
stos
sbb
out
adc
into
add
lahf
xchg
pop
push
in
sub
pushf
pop
test
pop
mov
jl
add
xor
or
loop
push
jmp
pop
imul
add
add
mov
push
filds
lret
bound
mov
nop
test
aaa
add
addr16
mov
out
les
pop
insl
shll
das
push
push
rolb
pop
sahf
shl
and
cmp
push
add
dec
mov
add
cs
pop
push
scas
ja
add
inc
fimuls
pop
loope
push
inc
sbbb
cmp
jns
or
loope
inc
sub
mov
cmp
iret
inc
gs
sub
xor
mov
les
lods
mulps
cmp
sti
xchg
test
dec
out
jbe
mov
loope
popa
bound
fists
fcmovne
sbb
cmp
enter
imul
mov
adc
into
mov
jns
fdivrl
jne
push
sbb
and
xchg
movsb
fwait
add
fcomps
lcall
jno
push
lahf
push
mov
out
mov
ret
ja
cltd
xchg
fstl
push
cmp
dec
js
and
xchg
inc
mov
scas
push
ret
or
clc
and
cmpl
les
test
rolb
aam
mov
lret
lret
pushf
mov
xchg
jmp
mov
mov
loopne
mov
es
mov
mov
inc
enter
mov
xorl
imul
hlt
add
jb
sub
mov
mov
dec
int
pop
fcoms
xor
lret
movsl
lea
sbb
call
addb
lcall
das
ficoms
push
rcrl
daa
push
cs
scas
xchg
lret
mov
test
lcall
insl
ja
xchg
or
mov
adc
pop
pop
jno
mov
shlb
test
fisubrl
add
sbb
and
mov
fiaddl
repz
int3
dec
mov
adc
sbb
push
stos
lock
xlat
mov
jb
das
scas
xor
pushf
mov
imul
inc
and
ror
stos
pop
jb
add
xor
daa
popfw
out
jbe
popa
and
mov
outsb
mov
negl
je
xor
std
popf
mov
scas
movsb
push
mov
jo
nop
mov
gs
out
mov
jmp
mov
add
jo
mov
and
mov
cmp
sub
or
mov
mov
lods
scas
jae
fisubs
push
xor
lret
add
je
aaa
jnp
adc
jg
add
stc
mov
loop
add
test
les
mov
dec
mov
ret
in
cmp
movsl
repz
loopne
fwait
out
jno
cmp
es
add
push
subl
push
add
fucomi
mov
push
in
in
pop
add
mov
and
inc
lcall
mov
jmp
test
mov
mov
rorl
push
cmp
mov
insl
out
fbld
stos
cmp
and
scas
mov
sbb
mov
cmp
xchg
sbb
lcall
out
add
ficomps
mov
adc
ja
cmp
fld
mov
cmp
and
fisubl
ds
dec
aad
imul
sarb
pop
loope
dec
xchg
jecxz
notl
cmp
cmp
mov
mov
cltd
rolb
lahf
mov
and
add
cltd
movsb
xor
add
cmpsl
cli
adc
mov
cli
mov
stos
in
shlb
add
dec
add
inc
pop
mov
filds
mov
in
sbb
pop
xchg
out
adc
inc
dec
negb
cmp
loope
insl
les
pusha
and
fisttps
cmp
inc
mov
mov
ds
movnti
pop
mov
clc
dec
je
popa
ud1
push
xchg
jmp
aas
jbe
jae
in
data16
pusha
jg
in
jl
shl
andb
icebp
mov
pop
cmp
or
mov
mov
std
psrlq
out
cmp
cld
cld
in
mov
cli
pop
pusha
xor
int3
outsb
mov
dec
pop
fisubrl
js
jne
or
jnp
push
mov
test
pop
pop
dec
pop
lock
mov
scas
into
xchg
cmp
shr
push
mov
pop
gs
pop
imul
sub
add
mov
sbb
stos
and
and
or
sub
push
jl
ficoms
adc
cli
jecxz
push
cld
xor
out
sti
pusha
test
jl
and
pop
xor
shlb
pop
jecxz
mov
sub
fs
into
jl
movsl
insl
jmp
les
sahf
mov
inc
sti
popf
icebp
scas
sub
and
out
xor
sbb
in
js
dec
fwait
mov
nop
rclb
mov
pop
inc
pop
shll
sub
lods
aad
loop
mov
jbe
xlat
testl
fldcw
or
movsb
ret
push
add
xor
rol
inc
jae
lock
les
fcmovnb
faddl
add
fisttps
xlat
push
fstps
push
mov
loopne
imul
repnz
and
lods
jg
push
imul
jo
pop
gs
cmpsl
aaa
dec
int
repz
and
fisubrl
loop
and
cmp
inc
call
out
pop
xchg
dec
loop
dec
mov
shrb
cmp
pop
fstpl
paddq
mov
mov
pushf
loopne
pop
xchg
movsb
dec
lret
push
mov
pop
mov
pop
mov
jge
xchg
rol
sub
pop
insl
loop
cmpsl
xchg
dec
outsb
or
jge
sbb
pop
rclb
test
lret
pop
insb
pop
std
cmp
fs
lahf
mov
call
sbb
lods
fs
xchg
aas
xor
and
mov
into
repnz
movsb
mov
ret
popl
cmpsb
push
lock
mov
in
outsl
xor
test
in
ja
call
cmp
jge
cwtl
adc
lcall
jns
pushf
pop
ret
rcrl
sbb
lock
mov
loopne
into
shlb
lock
iret
xchg
or
sub
cmp
repz
in
negl
les
or
test
fcompl
sbb
test
imul
addl
inc
fs
in
mov
or
loop
lret
outsl
jmp
roll
ret
addr16
rorb
ret
bound
les
pop
sbb
jg
int3
test
addb
push
dec
ret
pusha
and
gs
icebp
jecxz
pop
mov
call
adc
rorl
sahf
push
cltd
out
roll
sub
add
dec
sahf
jo
push
shl
lret
push
daa
in
jecxz
test
aaa
es
shlb
sbb
adc
jo
enter
daa
jne
push
enter
shrb
fnsave
push
cmpsb
pop
lds
nop
jmp
test
inc
mov
int3
adc
icebp
cmc
and
subl
dec
insb
shll
out
pop
sahf
movsb
inc
sarl
sbb
and
pop
xor
test
insb
int3
punpckhdq
js
mov
stos
lock
cmpsl
pop
xor
pusha
or
pushf
out
imul
lock
loopne
cld
push
jbe
scas
mov
sti
je
in
xchg
repz
pop
xchg
cmp
mov
mov
push
das
lods
sub
lret
mov
lods
fmuls
adc
jg
shr
insl
stc
test
ljmp
cmpsb
jecxz
add
cmp
fsubr
pusha
mov
add
sbb
cmp
rcr
inc
rolb
aad
ficoml
rcr
cs
rcr
pop
inc
popa
les
repnz
pop
cltd
mov
enter
push
mov
jns
sub
sub
sub
ljmp
push
shrl
ret
and
sbb
push
xchg
aad
ret
mov
pop
xchg
nop
push
test
les
mov
xchg
cmp
or
ja
scas
cli
call
bound
xlat
dec
fwait
push
mov
or
dec
in
rol
xchg
dec
and
stos
jp
mov
sub
mov
add
ret
in
rcrb
pop
sub
fwait
xor
ljmp
mov
in
fs
and
enter
cmpsb
in
add
cmp
and
test
push
jne
mov
sbb
icebp
loopne
jb
pop
aaa
gs
fisubl
pushf
mov
push
xchg
mov
addb
mov
mov
dec
dec
sbbb
cld
leave
dec
xchg
es
jno
stos
es
and
test
mov
lods
mov
jo
js
jecxz
jae
push
xor
xor
lret
ret
cmpsl
push
pop
enter
fs
sub
sub
loopne
or
test
pop
lods
and
scas
test
xchg
push
or
test
repz
mov
dec
clc
psrlq
hlt
pop
ret
addb
dec
xor
js
jmp
decl
cmp
cmp
lods
flds
jl
jmp
rcll
shlb
roll
bnd
lods
pop
les
mov
mov
sub
mov
sbb
cmc
into
in
negl
lock
es
dec
jo
movsb
adc
dec
pusha
nop
inc
pusha
pop
mov
dec
dec
scas
dec
inc
cmp
sub
and
sti
cli
sub
fs
jecxz
sbb
adc
inc
sbb
cmp
cli
shll
jge
jmp
xor
mov
mov
cmpsl
jno
inc
das
scas
cmp
lods
sti
or
in
sub
loope
push
mov
lock
out
addr16
xchg
pop
jp
xchg
mov
xor
xchg
dec
cmc
std
inc
sti
in
in
inc
imul
cmc
in
fdivr
jo
or
push
andb
or
pop
mov
pop
lea
xchg
xchg
int
and
dec
cltd
push
pop
jns
sub
jo
iret
ds
scas
jecxz
sub
pop
mov
aam
imul
xchg
loope
in
in
adc
dec
imul
pop
adc
add
mov
jbe
loop
mov
setns
les
cs
xor
sub
adc
leave
add
fcoms
ret
add
dec
xchg
bound
jns
daa
add
push
jmp
sahf
adc
and
xchg
and
jnp
pop
and
inc
je
xchg
movsb
push
mov
out
clc
stos
pop
std
in
in
sub
mov
jmp
pop
test
mov
dec
push
or
repnz
jg
loopne
sub
sahf
adc
xchg
stos
pushf
test
mov
lods
dec
xchg
cmp
shll
mov
mov
xchg
cmp
mov
pop
pop
mov
and
ret
mov
jecxz
das
loopne
out
jge
or
push
lcall
pop
cmc
xor
adc
and
add
scas
out
lods
iret
and
lock
ja
mov
sub
adc
test
bound
sub
fdivrs
push
mov
mov
in
pop
pop
pop
or
adc
dec
pop
out
pop
lcall
jne
and
rolb
sti
sub
ret
push
iret
ds
sub
mov
sub
sarb
xor
test
jp
clc
mov
pop
out
mov
cltd
pop
dec
icebp
sbb
lahf
shrl
adc
imulb
test
clc
int3
rcrl
inc
mov
sub
cmp
ret
jno
mov
fidivrs
mov
icebp
xchg
lock
je
sbb
xor
fnstcw
lds
sub
insl
xchg
aaa
sub
pop
cmp
mov
decb
lcallw
add
lret
idivb
in
push
pop
lret
rorl
cmpl
push
and
scas
jns
or
lret
icebp
mov
loop
aaa
test
jnp
hlt
in
daa
mov
adc
aaa
mov
sub
xchg
pop
add
shlb
jle
iret
add
and
imull
pop
push
jno
popf
repnz
movsl
add
pushf
cmpsb
in
cltd
das
clc
mov
cld
adc
sbb
loope
prefetchwt1
or
xchg
xchg
xchg
jecxz
repz
sbb
jl
cmp
xchg
outsl
fnstcw
dec
test
out
shll
ret
add
movsb
mov
add
mov
out
nop
mov
fwait
clc
adc
push
add
mov
aam
push
into
lods
data16
stc
in
pop
sbb
test
sbb
add
cmp
loopne
add
test
pop
push
idivb
icebp
mov
push
mov
icebp
jge
push
mov
lds
lahf
mov
repnz
nop
xchg
pop
test
sarl
mov
lock
clc
out
pop
divb
pop
stc
push
dec
cli
mov
dec
dec
int3
fistps
arpl
cmp
in
pop
loope
fs
pop
lcall
outsl
pop
xchg
int3
xchg
sbb
cmp
jo
mov
test
mov
dec
enter
mov
mov
shrb
jns
mov
mov
inc
int
lods
add
outsl
je
xchg
xchg
xchg
dec
mov
mov
lret
pop
jae
pop
repz
shll
pusha
out
pop
cmp
out
subl
lret
stos
cmp
push
push
mov
aad
shrb
outsb
mov
inc
aaa
fdivrs
aaa
ds
rcrl
add
inc
pop
jb
sbb
add
lret
jne
cwtl
stos
sub
sub
adcl
push
aam
pop
mov
push
popa
daa
rorb
xor
mov
cwtl
ret
jbe
in
and
sbb
or
pop
rolb
dec
test
inc
repz
sbb
rolb
xchg
sbb
lea
rorb
and
pop
stos
xchg
jbe
jne
outsl
mov
fcmove
addl
push
cltd
fdivl
xchg
cmp
xchg
cmpsl
or
sbb
sbb
adc
in
ja
cmpsb
in
notb
mov
mov
add
pop
add
ja
dec
mov
mov
cli
std
mov
in
inc
fdivrl
jbe
pop
fistpll
sub
push
out
mov
sub
pop
dec
jl
test
div
jns
mov
scas
out
cmpsb
cmp
es
test
cmpsb
inc
lods
mov
xchg
jp
cmp
fbstp
js
inc
push
mov
shl
jo
sbb
mov
inc
cltd
aaa
xor
nop
dec
movsb
jp
xchg
das
test
push
sbb
jnp
lds
xor
sub
test
xorl
add
imul
imul
in
loop
inc
inc
mov
loopne
sbb
xor
rcrb
push
cmp
mov
ret
jg
cwtl
push
push
mov
aam
lea
test
shrl
lret
push
pop
jae
lods
popa
aam
xchg
and
pop
mov
mov
xchg
int3
pop
adc
imul
jmp
fisubl
hlt
lods
adc
dec
or
in
lret
test
jbe
ja
aas
adc
orl
cmp
jbe
out
vmovdqa
pop
sub
push
sahf
dec
popa
fimull
subb
jbe
pushf
mov
fisubrs
cmp
loopne
movsb
xor
daa
lret
loope
rcll
push
adc
xchg
int3
add
neg
pop
jmp
outsl
mov
out
and
push
lea
push
mov
cmp
pop
or
test
and
cmp
mov
inc
dec
mov
scas
insb
pop
fisubrs
ds
inc
leave
inc
stos
adc
mov
push
cmp
push
inc
aas
jne
inc
mov
in
enter
es
sti
fcmovne
aad
cmp
int3
nop
mov
mov
pusha
stos
mov
xchg
data16
cmp
xor
pushf
test
cmp
sbb
cld
fisubs
clc
pop
or
js
lds
jbe
ficompl
insb
rcll
or
mov
push
movsl
mov
addb
xchg
lods
xchg
loope
mov
push
cld
add
sbb
cmovne
aaa
sahf
scas
adc
jg
psrlq
out
stos
fdivl
pop
push
test
mov
pinsrw
notl
movsb
mov
pop
jle
inc
dec
stos
push
movsb
xorb
andb
addb
dec
jmp
inc
repnz
add
insb
and
mov
dec
cld
loopne
push
mov
loope
shlb
idivb
loopne
loop
cwtl
in
leave
or
jecxz
or
mov
xchg
loope
lock
pop
mov
imul
loop
pop
push
xchg
fisubrl
mov
and
push
out
and
test
ret
inc
dec
mov
icebp
aad
test
aam
sbb
es
add
and
sbbb
negb
inc
inc
xchg
or
jge
pop
js
popf
lods
push
push
repz
push
mov
or
cmpsb
jne
sbb
int3
cmp
pop
lret
cs
les
jae
inc
jmp
lahf
mov
ret
div
subb
push
jo
bound
ja
adc
shll
aas
cmp
adc
test
cmc
xchg
stos
aaa
aaa
test
ficoml
pusha
push
xor
test
push
gs
lret
rcll
xor
cltd
add
pop
rcl
add
std
jl
mov
cmpl
push
sahf
fidivl
fs
fwait
insl
and
xchg
push
add
mov
dec
fsubrl
jno
das
stos
xor
test
sub
sbb
and
push
and
xchg
loopne
sub
mov
call
out
jo
pusha
add
jge
sbbb
inc
jno
pop
cmpsb
and
lods
pop
int3
push
movsl
fsubr
flds
out
sti
cltd
addb
add
mov
decl
cmp
pop
xchg
sti
sbb
insl
frstor
sbb
xchg
int3
fdivrs
nop
dec
lds
stos
pop
cmp
xchg
cld
aam
test
cmpsl
jae
fisttpl
push
insb
loope
idiv
push
sti
add
jbe
xchg
sarl
mov
icebp
xchg
and
int3
sub
adc
add
mov
int
std
add
lds
add
icebp
fldt
or
nop
cmc
adc
sbb
jp
pushf
inc
add
push
fistpll
jecxz
loope
xor
cmp
jbe
mov
aaa
add
add
mov
fstps
cmc
test
in
daa
mov
inc
push
sub
dec
inc
testb
or
cs
cmp
cld
gs
add
repnz
pop
testl
mov
ljmp
and
jge
adc
cmp
mov
xor
mov
addr16
fsubrs
add
in
sub
mov
shl
rolb
add
mov
mov
std
jbe
push
mov
pop
cwtl
lcall
push
mov
loope
repnz
jg
jle
lret
mov
out
popf
lahf
add
xlat
dec
adc
sbb
push
add
cli
jl
cmc
nop
shll
ret
pop
popa
aam
test
and
das
roll
movl
stos
xchg
ljmp
ret
in
jne
xchg
es
fidivrs
adc
imul
sbb
nop
add
stos
les
sbb
cmpsb
dec
cmp
lret
test
loopne
cli
pop
mov
hlt
cmp
pop
push
pop
push
sbbl
fdivp
jnp
icebp
push
aas
les
inc
out
fadd
out
mov
mov
xchg
adc
jl
mov
push
lret
xchg
inc
loop
daa
fidivl
std
mov
xchg
sub
mov
stc
ret
lret
push
adc
and
mov
pop
out
dec
sti
xor
add
mov
push
mov
lcall
and
jg
mov
push
divb
out
les
fcom
ret
jg
push
xor
rclb
mov
fcomp
out
arpl
js
enter
jno
or
lret
cmp
adc
shll
stos
popa
pop
mov
stos
pop
pop
int3
pop
xchg
test
nop
pusha
sahf
mov
mov
inc
test
insb
mov
scas
fldcw
iret
inc
mov
mov
and
add
push
add
add
and
xlat
add
pop
ror
dec
push
sub
adc
xchg
mov
out
or
jae,pt
sbb
cwtl
or
lods
roll
leave
or
imul
xor
sbb
cmp
out
jp
test
int
sbb
sti
mov
in
decb
lods
fsubrl
or
cmp
shll
xchg
mov
lret
leave
inc
sub
and
pop
sbb
or
sbbl
movsb
in
jge
fs
dec
sub
scas
xchg
mov
data16
sahf
pusha
dec
test
fisubs
lods
and
dec
es
insl
sub
ds
ret
and
cs
in
mov
lods
sahf
push
in
dec
jle
xchg
test
out
adc
lahf
cmpb
xor
dec
data16
in
in
sbbb
insb
in
xchg
repz
andb
arpl
jns
lock
lret
jp
adc
mov
xor
mov
test
mov
subl
leave
in
sub
addr16
mov
mov
repnz
mov
pop
in
lock
loopne
sub
gs
jno
push
mov
xor
int
repnz
mov
icebp
pop
pop
lods
xchg
rsqrtps
push
stc
sub
in
xor
daa
sbb
outsl
pop
mov
int3
clc
xchg
mov
aas
rorl
divl
sub
inc
xor
insl
jb
sbb
in
sub
fimuls
add
in
fists
daa
orl
pop
mov
cmp
cmp
sbb
jmp
sbb
lret
mov
jae
push
mov
rcl
dec
outsb
negl
jae
testl
dec
repz
ret
test
int
stos
into
mov
stos
pop
sbb
ror
ret
cwtl
pop
push
in
push
mov
xchg
sub
dec
inc
pop
filds
jno
jge
jb
cld
rorb
test
les
and
add
sub
push
xchg
or
in
loopne
gs
shl
cmp
jge
jecxz
fs
cmpb
mov
jge
insl
lock
inc
add
ja
xorb
mov
xchg
dec
das
in
test
and
loopne
ljmp
xchg
and
mov
mov
lock
test
test
cmp
in
imul
hlt
in
adc
mov
in
cmp
inc
out
mov
mul
cli
es
sbb
test
fmuls
pop
pop
iret
sub
sub
fs
sbb
loope
cs
and
mov
scas
pop
std
pushf
ret
out
int3
cmpsb
xor
push
dec
loopne
or
jae
and
sub
mov
xor
jle
xor
pop
or
adc
in
ja
imul
lds
and
xor
dec
roll
or
loopne
addb
mov
out
mov
int3
test
outsl
pop
push
xchg
adc
push
lcall
ja
mov
cmpl
jo
imul
test
mov
pop
dec
fcmovne
iret
or
das
sub
add
xor
sbb
pop
cmpsl
sahf
ficompl
jp
pusha
loopne
xor
int3
repz
adc
pushf
inc
sub
aas
je
out
mov
cld
jle
or
jge
pop
mov
pushf
rclb
and
je
adc
cmp
imul
push
xor
lret
sub
js
rcrb
cwtl
inc
cs
and
shll
shrl
sbb
aam
cmp
les
add
nop
popl
mov
adc
lods
jmp
shll
pop
mov
dec
inc
sub
or
and
test
jo
lret
dec
in
xchg
or
inc
test
inc
je
xchg
pushf
xchg
sbb
jae
mov
hlt
jae
ret
jns
shlb
jle
out
xorb
test
adc
js
cmp
add
push
jns
sbb
or
insl
ljmp
push
lea
mov
movsb
xchg
mull
and
inc
mov
mov
dec
insl
xchg
inc
sbb
test
cmp
xchg
lods
in
or
add
sub
es
mov
and
call
mov
sub
add
push
repz
lret
stc
inc
je
mov
sbb
stos
push
cmp
cmp
pop
call
jae
lock
mov
mov
xchg
shl
jae
or
hlt
xchg
into
mov
push
push
fdivrl
fdivrl
push
lcall
scas
and
push
mov
mov
hlt
sahf
add
pop
repnz
adc
cmpsl
mov
call
jo
ja
xor
sbb
out
fs
xchg
fnstsw
test
nop
jg
shll
or
adc
mov
xchg
lods
sub
sbb
ds
pushf
mov
call
or
sub
stc
adc
push
pop
sti
jl
dec
mov
sbb
ficompl
lcall
inc
and
and
aas
mov
and
mov
lahf
sti
mov
fidivrl
inc
sub
nop
or
sahf
add
cmp
xchg
outsb
jns
sbb
std
out
les
or
rorl
cmp
js
in
insb
push
cmp
pushf
push
xchg
pop
cmp
jb
andl
enter
push
mov
sbb
adc
inc
cmp
and
cmc
pusha
faddl
sub
jp
push
jg
cmp
mov
or
push
aas
mov
pushf
inc
insb
cmp
aaa
mov
dec
xchg
pop
clc
sub
mov
jp
sub
add
ret
or
rorl
jb
dec
rorl
mov
sbbb
and
movsl
fistl
or
xor
stc
jmp
cmp
mov
or
test
lock
push
aas
sub
jns
ja
int
push
js
frstor
addr16
je
cmp
mov
mov
jbe
xchg
out
shll
sub
sub
call
bound
pop
jle
jno
push
out
jmp
pop
into
inc
dec
aam
inc
pop
mov
mov
sub
push
mov
insl
sahf
stos
sbb
ret
into
dec
mov
xchg
leave
cmc
lods
or
push
fisubrl
fiaddl
xchg
fiaddl
mov
popf
mov
lahf
cmc
mov
cmp
test
xor
mov
ljmp
test
mov
movsl
shrb
or
sbb
insl
arpl
hlt
lsl
lds
inc
mov
mov
dec
cmp
movsl
dec
mov
pop
pop
aaa
mov
mov
mov
jp
cmp
xor
test
in
mov
int3
add
lock
fistpll
cmp
cmp
testb
mov
cltd
shl
sbb
sbb
cld
lcall
outsb
in
movnti
sub
jno
add
inc
and
add
and
fs
shl
jb
inc
xorl
xor
mov
daa
sub
sti
xor
fwait
rorb
push
div
or
adc
aad
fs
xchg
pushf
call
inc
mov
sti
test
rolb
hlt
incb
mov
test
int
adc
shrl
push
adc
icebp
or
push
cwtl
xor
sub
sti
addb
push
jl
test
or
mov
roll
mov
and
out
test
cmp
add
faddl
sub
aam
es
dec
loopne
add
rcrl
shll
nop
sbb
enter
xor
icebp
jno
rorl
mov
shlb
inc
cmp
push
mov
icebp
mov
aas
mov
pop
mov
dec
stos
int
inc
push
xchg
xchg
fistpll
pop
cltd
hlt
mov
gs
mov
call
daa
mov
mov
mov
arpl
arpl
iret
dec
sub
leave
and
inc
nop
push
call
shrl
xchg
mov
out
pop
shll
add
xor
call
cmp
fsubp
mov
xchg
push
mov
sahf
into
pop
xchg
int3
addb
add
mov
int
push
jno
outsl
inc
in
mov
mov
sub
mov
mov
cmpl
in
sbb
pop
fcos
rorb
sub
repnz
mov
mov
adc
arpl
cmp
out
loopne
dec
in
fistl
jg
xor
clc
push
outsl
nop
out
push
dec
sub
or
xchg
jnp
mov
xor
cld
mov
in
jns
aam
pop
dec
or
je
in
fnstsw
add
sbb
test
cmpsb
push
push
and
sbb
xchg
popa
ds
xchg
in
add
cli
in
hlt
in
and
leave
sub
xchg
pop
lds
push
xchg
dec
push
dec
sti
std
ljmp
cmp
sbb
cmp
lock
sbb
xor
pop
clc
and
fsubs
sbb
add
or
jl
push
add
fwait
push
clc
das
stc
adc
aaa
leave
lods
cmp
xchg
fildl
cmp
mov
or
mov
out
andb
mov
int
pop
pop
bound
mov
inc
ret
mov
test
dec
stc
movsb
cmp
xorb
pop
dec
movsb
jl
daa
xchg
sbb
jecxz
mov
jbe
aas
add
pop
icebp
mov
ds
add
and
xchg
or
rcrb
sub
xchg
push
dec
fsubl
aaa
test
lods
inc
add
repz
or
dec
lcall
fsub
mov
adc
mov
ret
lods
xchg
xchg
sbb
inc
mov
and
mov
inc
jg
jmp
mov
sbb
movsb
mov
dec
sbb
aaa
sbb
jecxz
cmp
filds
lods
lock
lret
in
cmc
test
rorl
sub
push
cmp
lock
inc
dec
sub
mov
movsl
test
pop
dec
push
movsl
fstpl
xor
sub
mov
dec
out
ret
sbb
ds
sbb
jg
outsl
dec
daa
add
mov
sub
sub
sbb
or
mov
cmp
mov
stc
daa
jp
loope
rorb
mov
jnp
and
repz
xchg
mov
je
inc
negb
inc
insl
mov
loopne
mov
jno
mov
pop
scas
jno
xchg
sub
jp
adc
pop
loope
mov
xchg
fxch
test
mov
pop
fimuls
jns
movsb
jns
ret
cli
sbb
scas
xor
lcall
inc
mov
push
xchg
adc
adc
mov
lea
add
fisttps
scas
mov
push
mov
lods
into
repnz
mov
fiaddl
ficoml
pop
pop
add
test
push
jle
stos
rcrl
in
rcrb
jno
dec
mov
xor
add
push
daa
neg
mov
and
and
sarl
loopne
mov
mov
pop
stos
pusha
adc
shlb
pop
dec
stos
jp
out
std
inc
add
cld
jle
add
bound
les
out
mov
jp
movsb
xor
add
sub
pop
adc
mov
into
add
cltd
stos
das
xchg
mov
xchg
add
push
cmc
cs
aas
xor
pop
mov
popf
in
xchg
cmp
sti
xor
notb
loopne
pushf
addr16
clc
subl
jb
cmp
or
sub
ret
cs
jne
addb
mov
jbe
cltd
xchg
cmp
test
xchg
xchg
push
das
jo
shrl
std
aaa
xchg
pop
mov
lock
mov
sbb
fdiv
lahf
enter
push
stc
dec
sbb
push
div
ficoms
aas
cmpsb
call
push
mov
ljmp
addr16
xchg
mov
mov
xchg
sbbl
and
jns
dec
pop
xchg
int3
dec
cmc
jnp
mov
fs
xor
lcall
in
add
adc
xchg
data16
jmp
xor
xor
or
jl
mov
into
in
sub
mov
xchg
rorl
add
sub
cmp
lods
add
sbb
stos
sub
xchg
fsubp
lea
mov
in
cmp
jae
cmc
jp
sbb
ljmp
jmp
and
test
sahf
mov
inc
cld
pop
and
mov
jae
inc
cmp
bswap
cmp
fcompl
dec
mov
call
cmc
das
fwait
jb
lret
in
aad
inc
stos
sar
iret
imul
in
ds
adc
test
jge
dec
inc
incl
mov
into
and
add
jns
jnp
jne
mov
mov
push
dec
adc
test
mov
popf
test
and
pop
pop
cmp
mov
je
sub
in
addb
sub
adc
int3
jp
pop
mov
loope
icebp
sbb
dec
mov
aas
dec
hlt
lahf
mov
jmp
ds
fistps
pusha
add
or
fs
nop
mov
fisubs
dec
push
pop
mov
push
cwtl
jl
lret
sub
pop
cwtl
cmp
mov
pop
lea
dec
jmp
imul
lcall
andb
jg
pusha
push
mov
and
test
int3
xor
xchg
adc
dec
roll
mov
lea
cmp
fwait
xor
push
test
dec
sbb
scas
movsl
pop
fildl
data16
movsb
mov
add
push
adc
pop
sbb
mov
scas
mov
xor
shl
push
mov
jnp
xor
rclb
shlb
enter
xchg
imul
mov
xchg
push
in
int
pusha
mov
shrl
sub
fldenv
lea
out
pop
xchg
xchg
lock
arpl
mov
loope
cmpsl
mov
lcall
push
add
imul
push
fadd
inc
xor
addb
mov
xchg
push
pop
mov
xchg
push
clc
dec
mov
andl
mov
cmc
sbb
je
xchg
outsb
fdivl
xor
inc
rcll
dec
jle
icebp
pop
pop
lea
adc
sub
sub
mov
repnz
xchg
mov
push
ljmp
insb
popf
mov
mov
gs
je
jge
xor
sub
inc
inc
and
fmulp
popf
fstpl
or
and
add
out
mov
lock
cmp
adc
enter
sahf
iret
pop
pop
fs
test
or
js
enter
ret
shll
mov
mov
pop
hlt
jno
jnp
ficompl
push
or
sahf
ljmp
insb
imul
pushf
scas
adc
dec
cmpsb
jmp
out
cmp
push
ss
rcrl
push
push
dec
insl
repnz
mov
dec
push
sbb
xlat
pop
icebp
pop
inc
ds
sub
cmp
fildl
cltd
cld
add
or
pusha
jb
push
or
mov
negb
imul
mov
test
mov
inc
inc
adc
push
stos
jl
imul
mov
lods
or
pushf
push
push
add
sub
cmp
mov
ds
xor
pop
lds
mov
nopl
std
pushf
lods
decb
scas
cmp
cmpsl
sbb
jp
cltd
push
pop
fildll
mov
jmp
mov
cmp
xchg
push
sbb
call
mov
xorl
adc
addl
cmp
iret
mov
lods
jg
scas
andb
sbb
pop
out
aad
outsl
ja
cmpsl
sbb
mov
sahf
push
pop
mov
mov
inc
test
mov
sarb
pop
inc
dec
mov
nop
pop
orl
sub
bound
stos
and
sti
adc
sub
mov
push
shlb
jp
int
mov
mov
sub
or
int3
insb
dec
mov
ret
fs
in
inc
cltd
or
xorb
sub
int
cld
lods
loope
std
jnp
xor
lods
or
mov
jecxz
sti
pop
orl
fisubs
movsl
push
loop
fdivs
xchg
out
lods
xchg
cmp
add
dec
cmp
test
fcoml
or
add
cltd
sub
mov
jae
push
aas
mov
int3
fsubrs
ret
mov
xchg
adc
cld
push
mov
in
xchg
repnz
or
push
in
mov
test
sub
fcoms
ret
dec
xchg
mov
cmp
insb
xchg
sahf
push
push
pop
out
lock
rolb
mov
jecxz
es
mov
mov
int3
sarl
sub
stos
mov
pop
and
hlt
add
cmpsl
orl
lods
insb
cmpb
xor
xlat
ret
pop
jp
rcll
jno
into
sbb
and
repz
movsb
test
mov
xlat
adc
ret
add
and
push
int3
or
shl
callw
and
das
adc
cmpsb
pop
hlt
in
xor
fnstcw
pop
and
rep
mov
loopne
mov
push
loopne
loopne
movsb
inc
inc
cmp
mov
cmp
frstor
iret
mov
stos
pop
dec
add
mov
stos
in
stos
in
ror
lods
iret
jmp
xchg
insl
pop
inc
inc
add
repnz
jecxz
aas
arpl
andb
sti
xor
je
xor
xor
push
in
push
mov
add
push
and
notl
std
inc
xchg
je
pop
fs
int
or
addr16
xchg
add
mov
je
and
sbb
or
repnz
pusha
xchg
in
mov
pop
or
pop
lret
in
mov
std
jnp
and
in
in
jbe
in
out
cs
fisubs
mov
or
push
push
ss
add
or
adc
fmuls
inc
icebp
pop
pop
lret
mul
lods
mov
or
mov
push
add
negl
xlat
fcmovu
fadds
lahf
push
pop
mov
cmp
inc
sahf
icebp
call
cmp
addr16
push
add
les
add
adc
xchg
jo
or
iret
js
ds
xchg
lods
inc
or
sbb
loopne
pop
cmp
insb
sbb
adc
adc
adc
inc
inc
pop
adc
shrb
adc
mov
in
in
sti
and
jle
or
imul
mov
inc
fisubs
ret
fidivrl
pop
or
add
mov
and
stc
adc
sbb
and
mov
ja
lods
or
cltd
push
daa
shrl
cs
adc
or
jo
mov
sbb
mov
cltd
call
sub
cmc
test
gs
jo
mov
loopne
addr16
mov
sahf
mov
xchg
sbb
xchg
xchg
pop
arpl
and
negb
add
movsl
cltd
add
jns
pop
cmp
push
dec
icebp
daa
and
xchg
jmp
dec
adc
cmp
inc
sbb
mulb
inc
in
cld
loopne
cmp
loope
rorb
pop
pop
mov
inc
ss
pop
pop
lods
pop
and
cmpsb
xor
insl
cld
fs
mov
push
in
jp
mov
andl
repnz
iret
pop
fisttps
pop
mov
das
push
jmp
pop
inc
mov
mov
in
in
iret
imul
add
fcompl
in
nop
sbb
aad
cmp
adc
push
std
push
xchg
lahf
xchg
sti
rcrl
dec
fsub
push
lods
lock
in
and
add
mov
cs
jg
aad
leave
xor
test
ret
ds
or
pop
mov
mov
cmp
dec
mov
add
or
movsb
dec
add
adc
adc
add
mov
outsl
mov
jne
popa
pop
cmpsl
jo
sbbl
pop
sbb
dec
cli
pop
push
cmp
ret
pop
sbb
out
stos
mov
pop
cld
cs
mov
into
push
pop
mov
fildll
lods
nop
xchg
cmp
cli
adc
inc
into
les
push
test
int3
pushf
add
mov
es
mov
sbbb
ret
push
xor
mov
in
dec
lret
or
pop
pop
notl
xor
cld
or
outsb
jg
ficoml
add
pop
std
xchg
xchg
push
pop
outsl
cmpl
fsubl
xor
xor
inc
cmp
iret
js
xor
inc
addr16
mov
mov
push
or
loopne
cmpsb
subl
xlat
dec
add
fwait
mov
push
or
adc
sub
push
adc
jo
adc
shlb
stos
dec
lcall
adc
lret
adc
sbb
lock
hlt
sub
addl
mov
mov
pop
sub
xchg
inc
arpl
pop
jns
sbb
sub
cmc
xor
xchg
adc
cmp
jne
add
jmp
push
shll
sarl
mov
sar
pop
sbb
xchg
call
mov
clc
xor
jnp
push
inc
call
cmpsl
jge
sub
xor
lea
lods
xorb
fs
lret
lret
mov
test
clc
cmp
mov
mov
and
pop
mov
push
fsubrl
stc
pop
iret
jae
cmpsl
cmp
test
andl
or
hlt
into
ret
jmp
test
jl
roll
jb
xchg
xchg
ret
test
pop
xchg
sub
loopne
in
fildl
add
ficompl
mov
sub
mov
xchg
mov
jmp
jl
rcrl
dec
xor
jbe
mov
mov
sub
mov
sbb
cmp
sbb
mov
bts
mov
mov
xor
and
movsl
cwtl
add
lods
add
dec
lcall
or
mov
adc
pop
pop
xorb
out
adc
imul
add
dec
gs
loope
jne
and
add
sahf
data16
xor
lret
push
cmp
add
iret
outsl
rorb
nop
bound
add
add
rcrl
repnz
les
in
lret
lret
lret
mov
adc
cld
cmp
add
adc
and
loopne
cmp
in
cld
mov
mov
bswap
or
dec
es
repnz
fs
sbb
cmp
pop
adc
popf
dec
in
movsb
pop
int3
inc
imul
fildl
jne
insb
into
lods
add
and
aam
pusha
stos
pop
dec
pusha
xchg
fs
dec
fstpl
pop
sahf
in
loopne
jne
mov
inc
dec
out
sahf
add
xor
stos
sbb
loopne
and
jp
mov
dec
jmp
popf
jbe
jecxz
popf
pop
fstl
or
inc
in
jno
mov
jle
lret
and
mov
lea
enter
repnz
add
inc
sub
mov
aad
in
orl
mov
inc
in
adc
pop
mov
shlb
in
inc
in
xchg
rcll
out
pop
dec
dec
lods
xor
mov
push
adc
jns
pop
pop
addr16
push
rorl
mov
lret
cmp
fnsave
test
cmp
je
sub
das
push
xlat
dec
dec
mov
xchg
cmp
pusha
xor
pop
lahf
or
mov
cmp
jle
or
push
push
lret
stos
das
pop
nop
jns
imul
dec
arpl
fxch
inc
test
rolb
das
jp
jns
mov
shl
pushf
pusha
cmp
jne
mov
jle
inc
jmp
inc
lahf
jae
cltd
cmp
sbb
push
ret
pop
movsb
aam
pop
sbb
gs
insl
adcl
fnstsw
mov
pusha
mov
call
rorb
and
mov
in
xchg
in
ljmp
xchg
mov
push
pop
movsb
push
incl
pop
aad
ja
outsb
rorb
adc
repnz
lea
push
pusha
loope
inc
mov
das
repz
fstl
xchg
push
adc
js
and
scas
imul
cs
xchg
test
and
push
pop
test
mov
ret
aad
out
pmaddwd
test
std
into
loop
pop
notb
pushf
hlt
cmp
lds
mov
mov
pop
ja
test
cmpsl
nop
pushf
push
in
or
inc
imul
pop
icebp
loopne
lods
dec
rcrb
push
jp
jno
pop
sbb
xchg
and
test
subb
xor
std
xchg
mov
cwtl
push
shl
in
pop
push
mov
or
addb
lret
xorb
mov
data16
pop
es
push
dec
js
cmc
jecxz
les
stos
repnz
cld
scas
xchg
adc
mov
test
in
add
pop
pop
js
cli
pop
mov
ja
xchg
rcrl
arpl
jns
mov
jle
jecxz
push
mov
xchg
xor
shlb
adc
mov
loop
ds
andb
scas
mov
or
mov
daa
paddsw
ret
insl
push
add
imulb
pop
in
adc
xor
jnp
lea
inc
pushf
cmp
xor
out
and
hlt
in
and
xchg
dec
addl
adc
pop
dec
dec
add
addr16
cmp
test
mov
jmp
push
repnz
fidivrs
sbb
jns
cmp
jge
mov
cmpsb
jo
cmp
inc
in
or
into
cmp
rsqrtps
and
bound
xchg
fdivrl
out
cs
dec
cwtl
cs
std
or
test
fs
or
lret
xchg
adc
inc
add
cmp
or
adc
cwtl
xor
fxtract
hlt
bound
pop
adc
and
xlat
xchg
xchg
or
leave
dec
and
in
enter
ret
pop
adc
pop
adc
xor
test
push
repnz
sbb
cmpb
jne
pop
pop
xchg
sbb
roll
sub
and
fcmovbe
cmpsl
idiv
xchg
loop
add
mov
je
xor
jno
out
jno
aas
and
mov
pop
scas
and
sbb
pushf
push
fstl
cli
mov
inc
push
mov
popf
xlat
jmp
call
aam
or
lret
mov
or
shlb
in
in
inc
or
cld
pop
sub
pusha
mov
rcrb
js
aad
cld
into
lea
mov
and
inc
in
xor
mov
mov
test
in
mov
arpl
test
cwtl
fdivrs
loopne
imul
js
arpl
ret
sub
mov
or
arpl
das
pop
sub
xor
bound
int3
cmp
mov
stc
push
mov
jecxz
sbbb
fsts
mov
or
jne
cs
pop
iret
cmpb
mov
sbb
insb
push
push
mov
mov
pop
cs
push
add
sub
xor
cmpsl
or
add
add
and
push
sbb
fisubrl
pop
cmpsb
lods
cmp
mov
pushl
mov
int3
cmpl
rcpps
adc
sahf
les
xchg
mov
dec
xchg
mov
aad
sbb
mov
and
lcall
outsl
push
fnsave
fnstenv
inc
and
aas
mov
cmp
outsl
mov
xor
sbb
test
aam
lcall
sti
jmp
mov
outsl
mov
xor
ret
loopne
adc
cltd
mov
cmp
hlt
push
cmp
movsb
sbb
adc
fidivl
adc
pop
gs
cs
push
setl
cli
test
sub
adc
sbb
daa
mov
adc
enter
js
jmp
xor
or
out
jmp
pusha
add
aad
subb
mov
adc
fwait
adc
call
dec
loop
mov
xchg
js
inc
pop
imul
sahf
lds
lock
adcl
mov
push
in
dec
mov
adcb
bound
pop
cmpl
loope
ficoms
bound
inc
jne
cmpsb
insb
mov
cmp
cmpsl
xchg
popf
and
mov
xchg
xor
and
jns
repnz
and
adc
pop
iret
push
add
and
lods
loopne
mov
mov
adc
add
push
push
mov
mov
test
idivb
lods
pop
leave
cltd
push
rclb
cmp
fwait
sub
jle
out
loopne
js
dec
imul
push
into
lahf
xchg
jnp
cmp
gs
aam
mov
lds
cmp
pop
xchg
inc
mov
cs
mov
pop
jge
repnz
fisttpll
xchg
fdivr
add
pop
fidivs
xchg
xor
cmp
jae
js
pop
xor
add
xchg
mov
xchg
cmc
adc
test
inc
subb
loopne
sbb
insl
adc
popa
push
fldl
xor
or
icebp
push
fwait
in
jbe
insl
lret
in
or
sahf
cmp
pop
xlat
push
roll
mov
es
add
push
push
cli
rol
or
cmpsb
inc
pop
push
inc
movsl
cmpsl
iret
and
fsubr
cmp
pop
mov
adc
gs
fsubl
dec
sti
or
aad
sbb
mov
sti
sub
inc
cmc
sbb
pop
aam
aas
in
add
ja
enter
inc
in
enter
mov
sbb
pop
cmpsl
lcall
jl
xlat
jns
kxorw
pop
aad
fs
test
or
dec
stc
cmpsb
sub
out
lds
adc
lret
fisubl
test
add
xchg
jle
inc
bound
popf
dec
in
and
hlt
lock
jae
mov
jns
mov
xchg
adc
arpl
mov
adc
fiaddl
in
or
fs
xor
lret
in
fsubs
pop
ficompl
fimuls
dec
sbb
inc
je
inc
and
aaa
xor
adcb
loope
dec
add
xchg
or
adc
leave
mov
movsb
cli
mov
xor
sub
pusha
xchg
fldenv
fs
ret
dec
lret
scas
add
pop
inc
shll
out
mov
lock
ret
cmp
out
cmp
stos
popf
sub
fnstcw
and
bound
dec
mov
dec
mov
js
sbb
sahf
lret
cs
xor
lods
xchg
xor
push
mov
mov
pop
fwait
lahf
aad
jl
pop
or
rcrl
out
gs
insb
adc
aaa
ret
idiv
xor
pop
sub
or
xor
sbb
push
fcoms
andb
sbb
rcll
push
cs
or
icebp
jne
add
xchg
push
cmp
cmc
lods
add
fisubs
int3
inc
pushf
xchg
push
gs
subl
adc
cmp
xor
loope
cld
pushf
insb
jl
or
push
inc
pop
sub
sti
ds
mov
or
sbb
out
and
inc
mov
fimuls
insb
xor
mov
xchg
rcll
sbb
pushf
dec
daa
jbe
mov
dec
test
jns
push
and
xchg
fldt
add
stos
imul
inc
enter
repnz
push
pop
gs
jb
dec
pop
lcall
mov
dec
sbb
jp
dec
sub
add
out
jbe
and
cmpb
dec
cmc
mov
dec
scas
xchg
mov
in
push
mov
sub
pop
rcr
pushf
sahf
adc
sbb
es
push
inc
pusha
jp
das
jno
cmpb
dec
sbb
xor
xorl
into
inc
pop
test
ss
aaa
stos
push
lret
adc
icebp
mov
cmpsb
sub
or
pop
daa
lret
mov
mov
push
pop
fsubrl
fcmove
in
adc
adc
push
mov
sub
sahf
nop
add
insb
jne
pop
in
pop
arpl
xor
xor
outsb
cmp
pop
fldcw
mov
clc
adc
stc
xchg
out
pop
inc
and
hlt
mov
lret
mov
or
les
movups
dec
mov
xor
pusha
daa
jno
test
out
jo
inc
test
mov
xchg
inc
in
shr
aam
lds
out
jne,pn
sub
push
push
pop
fildl
adc
add
pushf
sti
xlat
add
inc
inc
cmp
stos
fcmovne
cmp
or
inc
jmp
movl
jb
test
fiadds
add
sub
add
xchg
xor
sbb
cld
mov
sub
adc
mov
inc
repz
cli
jp
dec
popf
imul
lods
cmp
mov
fisubrs
aad
push
mov
es
pusha
mov
cmp
imulb
sahf
cmpsb
jo
push
sahf
in
jl
fldt
mov
mov
das
fsubs
sarb
cmpl
insl
sbb
mov
into
push
pop
jbe
pop
adc
xor
and
mov
repnz
push
mov
mov
inc
add
in
jecxz
sub
jnp
dec
int
loopne
enter
xlat
jo
shrl
dec
lods
iret
in
sahf
mov
pop
sahf
les
push
and
roll
pop
sti
out
sbb
jo
dec
push
or
das
mov
jecxz
cmp
inc
push
dec
mov
ret
pop
or
js
call
jno
insb
andb
in
pop
mov
add
stos
pop
ljmp
sbb
jecxz
idivl
push
and
fsubl
addr16
inc
adc
in
cmp
imul
insl
shll
xchg
repz
pop
pop
insl
inc
in
imul
call
jb,pn
testl
mov
cmc
pushf
pop
sub
es
fistpll
and
push
push
sbb
cld
pop
mov
test
mov
sbb
loopne
insb
adc
sahf
mov
repz
in
aas
and
sub
inc
lods
test
int3
mov
xchg
sbb
test
mov
fimuls
andb
lds
testl
in
and
ljmp
mov
sbb
xchg
repz
in
popa
test
shrl
das
loop
sub
dec
test
fstp
iret
lret
xchg
adc
xchg
test
in
repnz
sbb
and
mov
pusha
pop
lret
enter
dec
in
mov
sbb
das
inc
inc
xchg
inc
jecxz
jl
jecxz
push
dec
dec
or
orb
xchg
jle
mov
imull
adc
push
adcl
and
orb
aam
dec
or
cmp
xchg
ficompl
xor
inc
adc
ss
pop
hlt
mov
cs
repz
mov
sbb
ljmp
std
dec
jbe
xor
dec
rcll
xor
lret
stc
and
or
mov
inc
jnp
fnstsw
lcall
lock
xchg
in
mov
mov
nop
aas
jo
mov
push
cmp
mov
cli
mov
mov
test
push
jb
lcall
inc
push
scas
outsl
xor
add
popa
fistpl
jg
dec
test
mov
add
pop
in
scas
push
dec
mov
cwtl
movsb
xlat
bnd
xchg
lods
movsb
push
xor
mov
add
lock
inc
mov
pop
ss
mov
std
cmp
add
xlat
ja
fcmovne
pop
sbb
jns
jae
pop
loope
pop
push
leave
mov
daa
jl
or
inc
fwait
cld
add
push
insl
cs
leave
nop
sub
cmpsl
xor
out
pop
test
es
pop
in
hlt
mov
incb
in
scas
mov
jecxz
icebp
and
sub
pop
xchg
cmc
ja
bound
int
out
adc
loope
fwait
xchg
cmpsl
lcall
add
out
movsb
mov
mov
rcr
in
int3
pop
adc
dec
sub
ss
dec
sbb
mov
ds
inc
mov
mov
out
dec
mov
fadds
test
lret
cmp
push
jp
ret
test
cmpb
in
cltd
cld
inc
jmp
push
gs
pop
sub
cmp
cmovnp
fisttpl
fstpl
jg
gs
mov
scas
inc
xorb
mov
iret
push
sub
outsb
jg
push
es
and
mov
pop
push
cmp
aam
popf
sbb
add
pop
out
xor
sub
leave
pushf
daa
sar
and
pmuludq
xor
pop
fcmovbe
pop
sub
loope
sub
mov
inc
test
inc
pop
xor
push
in
mov
sbb
mov
in
lret
xor
inc
push
jle
and
ret
and
xchg
cmp
xor
and
cwtl
scas
mov
loopne
movsl
das
cmp
and
adc
enter
icebp
pop
mov
mov
aam
inc
aam
jp
sbb
mov
xchg
les
sbb
rcl
cmp
push
pop
or
xchg
cmpl
jb
xlat
cltd
jns
dec
add
in
es
sub
inc
push
popa
icebp
test
push
cmp
push
xchg
icebp
ds
or
adc
mov
pop
les
call
push
fisttpll
mov
roll
xchg
mov
xchg
fisubrs
clc
outsb
cs
js
std
and
popf
jl
dec
loope
cmc
enter
jg
int3
dec
js
lahf
add
loop
insb
and
test
inc
fisubrs
shrb
movsb
dec
mov
daa
mov
stos
fists
sbb
imul
pop
push
adc
mov
test
pop
jno
dec
lods
call
xchg
inc
adc
sub
inc
rorl
sahf
lret
sub
enter
jge
add
pushf
xchg
cmp
scas
fprem1
pop
pushf
xchg
mov
inc
sub
xor
push
adc
sbb
pop
inc
add
adc
inc
mov
xchg
mov
adc
incb
insb
adc
inc
push
mov
pop
aaa
enter
cli
repnz
lret
or
push
testb
lock
sahf
sti
pop
pop
icebp
rorb
push
inc
jbe
sub
jne
sub
sbb
xchg
add
sub
sub
insl
cs
and
jge
out
sti
pop
negl
in
mov
dec
into
mov
out
sahf
into
sahf
dec
xor
or
rol
and
xchg
or
mov
cwtl
sub
mov
cmp
cs
push
std
int
ja
insl
mov
pop
adc
negb
mov
int3
or
sahf
xchg
cmpsl
aaa
pop
mov
aam
fildll
in
in
leave
mov
and
push
sti
jnp
xor
mov
adc
mov
adc
in
pusha
ret
push
and
int
in
push
pop
sub
aad
mov
lahf
or
hlt
inc
lahf
testb
clc
push
fs
or
out
cmpb
mov
xchg
mov
or
jecxz
and
push
dec
cmp
mov
cmp
aas
test
test
les
sub
sbb
sbb
cli
fdivrl
mov
inc
push
xchg
and
cvtpi2ps
sbb
sbb
gs
sbb
subl
filds
int3
rcrl
dec
shlb
or
dec
cmp
dec
pop
sti
loopne
push
pusha
dec
mov
inc
je
mov
push
aaa
insb
mov
pop
daa
daa
mov
xor
jge
stc
aaa
mov
adcl
or
js
les
imul
push
add
pop
push
jmp
ds
out
outsl
xlat
clc
xorb
xlat
cmp
out
call
mov
outsl
sbb
les
rclb
out
jp
inc
out
mov
sbb
jle
add
jp
test
push
add
or
lret
sub
add
pop
lods
ja
loope
cwtl
xchg
mov
stos
pop
hlt
mov
into
lds
jmp
cmp
or
push
mov
xor
mov
mov
mov
cltd
pop
push
mov
mov
and
fildll
hlt
and
lret
inc
insl
adc
pop
fldcw
cld
ds
mov
cli
and
mov
shlb
fldl
xchg
jl
hlt
cld
lret
cmp
mov
mov
sub
cs
jae
xchg
out
pop
fcomps
sbb
outsl
outsl
add
mov
ret
xchg
mov
xchg
and
pop
jo
mov
test
sbb
xchg
int
xchg
hlt
or
ja
pop
dec
ja
push
fcmovnu
ret
icebp
imul
mov
hlt
sub
repnz
outsl
cmp
xchg
jp
nop
cmpsl
icebp
orb
adc
dec
sahf
pusha
es
push
inc
aad
clc
shlb
repz
clc
call
pushl
iret
add
inc
mov
and
neg
add
es
jno
int
sbb
mov
clc
pop
and
pop
enter
push
pop
mov
fmull
imul
adc
xor
pop
lods
mov
adc
push
mov
js
dec
adc
mov
adc
lcall
push
scas
pusha
or
sub
das
stos
add
inc
test
jp
rcl
mov
or
arpl
jbe
adc
std
mov
pusha
mov
clc
pop
mov
outsb
sub
add
sbb
and
dec
mov
sti
mov
cmp
pop
mull
fildl
add
mov
xor
xchg
mov
jg
jecxz
and
and
pop
insl
out
sbb
xchg
jmp
pop
or
inc
in
adc
dec
sti
daa
mov
mov
lret
fcmovb
das
inc
movsl
call
xor
movsl
xchg
les
addr16
jno
shrb
lds
mov
push
mov
sub
add
xchg
pushf
xchg
adc
xor
mov
mov
outsl
fsts
in
and
cwtl
icebp
pushf
jmp
mov
mov
jle
aad
push
cmp
testl
popa
ds
cmpsl
in
lods
loop
pushf
popa
mov
aaa
push
fs
adc
adc
jo
mov
jne
or
iret
lds
sbb
cmp
fimull
mov
sbb
sbb
xor
gs
das
push
mov
orb
and
frstor
les
bound
jle
pop
pop
ljmp
mov
jmp
inc
or
fs
pop
sbb
ret
push
scas
mov
xor
scas
dec
push
and
mov
mov
lds
push
sub
in
pop
cmp
jle
and
iret
mov
inc
loopne
rorl
mov
ret
mov
sbbl
aam
adc
lret
mov
jge
aas
pop
ja
add
cli
in
lock
shr
xchg
xor
mov
add
pushf
lods
dec
div
mov
mov
stos
push
pop
mov
inc
lods
out
sbb
add
xor
loopne
dec
dec
cwtl
fsubs
xchg
ljmp
cmp
push
mov
push
mov
push
insb
test
loop
add
pop
pushw
les
es
mov
out
fs
sbb
xchg
cltd
jnp,pt
pcmpeqd
mov
divl
adc
imul
fists
xor
jae
mov
enter
fcmovbe
xor
stc
repz
mov
push
int
int
xor
jecxz
xorb
lds
loop
sub
lcall
bound
xchg
leave
sarl
insl
into
call
mov
mov
xor
test
push
roll
scas
lea
repz
lcall
sbb
sahf
xchg
push
fs
sub
adc
pop
xchg
and
mov
mov
push
cmc
repnz
xor
cmc
xor
mov
cwtl
shlb
shl
mov
push
jno
sti
jg
xchg
push
push
add
jo
and
mov
loope
lods
addl
test
sbb
shrl
fstp
or
cmp
push
je
in
mov
inc
daa
mov
lret
push
call
xchg
lahf
jmp
int3
mov
loopne
rolb
movsl
jecxz
jne
mov
movsb
hlt
pushf
pop
sub
add
scas
sti
insb
out
movsl
pop
test
roll
add
xchg
sub
sub
jle
cmp
xchg
mov
add
cmp
cmp
dec
jo
xchg
pop
mov
xchg
adc
add
aaa
je
mov
movsb
stos
ds
inc
xorb
gs
xor
pop
mov
cwtl
lret
scas
ss
movsb
fs
aaa
push
ret
xchg
xchg
rcrl
jge
in
mov
ds
rorb
pop
mov
scas
insl
or
test
daa
js
clc
shlb
ds
lds
pop
mull
repnz
and
out
stos
or
mov
es
insb
lock
mov
js
sbb
cmc
sub
lret
jl,pt
dec
pop
inc
pusha
xchg
test
das
dec
arpl
push
in
cmp
cli
pop
dec
data16
insl
bound
xor
mov
xchg
ja
ds
aam
pop
jmp
cwtl
pop
test
lcall
js
ret
push
popa
sub
add
jle
jle
stos
mov
filds
aad
into
les
fs
dec
mov
scas
mov
cwtl
stc
add
or
jb
clc
mov
aad
les
fsubl
lcall
mov
inc
jg
sarl
mov
loop
idivl
stos
popl
mov
mov
fs
in
mov
fcompl
js
in
rcll
sbb
aad
scas
data16
decl
aas
lret
or
in
sub
out
mov
push
mov
repz
dec
xchg
jmp
dec
stos
jl
lea
dec
mov
xchg
and
jmp
ljmp
jl
cmp
loope
sbb
dec
pop
mov
inc
nop
arpl
xbegin
adc
enter
jns
cmp
xchg
or
outsl
mov
enter
xchg
xchg
sar
pop
into
xchg
xor
pusha
outsb
push
xchg
rol
push
imul
les
andb
adc
ss
rcr
adc
leave
dec
dec
jmp
mov
fs
lret
dec
popa
push
or
mov
loopne
mov
jl
mov
stc
mov
ja
sub
push
leave
jle
outsb
mov
push
push
popa
push
or
int
and
repz
cmp
insl
inc
pop
add
mov
sarb
stos
and
scas
lock
pop
fbld
pop
aam
cld
orb
jp
sbb
subb
inc
pop
scas
pop
jmp
mov
std
mov
jmp
into
push
and
in
popf
push
and
rcll
rcrl
mov
outsl
insb
xor
inc
fbld
dec
mov
lock
pop
adc
cmpb
lahf
mov
pop
cmp
les
pushf
pop
pop
dec
outsb
jle
rorb
add
sub
ljmp
inc
fsubr
cmpb
xchg
push
icebp
mov
pop
call
and
pop
pop
mov
fdivrl
dec
jge
pop
sub
sahf
and
hlt
adc
cwtl
adc
loope
movsb
xchg
out
fcoml
test
test
or
sar
push
hlt
aam
into
sbb
sbb
les
pop
jmp
hlt
mov
iret
push
nop
push
fs
mov
rol
iret
or
ljmp
outsl
mov
hlt
mov
repnz
idivb
xor
cmp
push
mov
and
cli
pop
xchg
pop
jbe
daa
out
push
pop
arpl
cmp
in
xor
out
add
cli
cmp
mov
pop
packsswb
insb
test
out
leave
lcall
sbb
or
scas
xor
push
jnp
mov
inc
pop
cmp
pop
add
out
pusha
andb
and
jae
sub
loope
adcl
push
loop
push
and
sub
lods
push
pushf
cmp
jo
faddl
sbb
pop
mov
adcb
loop
cmp
ds
jle
call
sbb
jae
fimuls
stc
fidivl
sub
test
lods
xchg
push
mov
push
pop
les
mov
cs
addr16
sbb
jne
xbegin
sti
jb
sub
mov
leave
add
push
mov
rorl
dec
lds
ljmp
loopne
adc
cmp
stos
xorb
aaa
push
inc
mov
lret
sbb
push
aad
xor
je
cmpl
loopne
out
cmp
push
jecxz
cmc
fcmovu
sahf
addr16
sub
repnz
les
shl
ret
jp
mov
pop
out
mov
pop
sti
pop
and
pop
testl
fisttpl
mov
dec
inc
mov
dec
aas
lods
mov
iret
pop
gs
dec
fs
sti
mov
outsb
pop
inc
negb
adc
pmaddwd
lcall
push
into
loopne
cmp
cld
pop
sbb
ffreep
lret
mov
cmc
push
loop
inc
xor
add
xor
pop
adc
mov
sub
adc
sub
jl
push
fmul
pushf
push
mov
dec
insl
pop
push
and
pop
adc
push
sbb
sub
mov
leave
xlat
lea
mov
faddl
lret
xor
lock
ret
push
loope
in
les
pop
fwait
pop
mov
movsl
adc
mov
fdivrl
pop
pop
xchg
leave
sarl
sub
sbb
neg
cmpsl
push
xchg
fsubs
scas
in
push
xor
jecxz
mov
aas
push
in
xor
xchg
in
mov
hlt
xchg
es
or
sarb
in
jb
pop
or
out
repnz
mov
sub
adc
addr16
sub
sbb
fistpll
cmp
xor
cmc
push
adc
pop
sbb
lock
sub
inc
fiaddl
mov
add
bound
dec
inc
xor
das
sbb
ljmp
outsb
xor
cld
ret
adc
in
clc
pop
or
dec
lds
fdivrs
inc
sbb
xchg
or
lcall
xchg
mov
movsl
cmp
cs
testb
and
mov
jnp
cs
xchg
movsb
jne
pop
bnd
js
dec
shrl
push
mov
dec
nop
cs
in
pop
dec
jp
test
loopne
out
ds
xor
adc
dec
lahf
xor
push
dec
ficomps
inc
imul
cmc
loope
jg
dec
or
jmp
nop
loope
jle
pop
ds
adc
das
sarb
jbe
in
adc
sub
icebp
xchg
das
mov
mov
aas
pop
sub
push
stos
inc
fs
not
or
pop
mov
mov
jmp
mov
jns
fists
adc
cwtl
loopne
and
jae
mov
or
cmpsb
insb
inc
cmpsb
jle
pusha
mov
je
int3
add
fcmovb
outsb
or
or
sub
aad
stos
lea
sbb
stc
mov
mov
stos
xchg
das
adc
pushf
jnp
pop
cmp
pushf
movsb
mov
outsl
cmpsb
cmp
push
mov
mov
rcrb
push
divb
in
and
test
xchg
shll
das
mov
xchg
mov
cli
mov
push
jnp
js
lds
jmp
push
in
jl
pop
pop
out
fdivl
lcall
mov
jg
push
and
inc
fs
mov
add
jmp
sahf
mov
addl
rclb
mov
mov
inc
add
xchg
nop
ja
pushf
daa
push
push
lds
stos
sub
in
loopne
test
dec
push
adc
push
lods
ret
or
scas
lcall
ret
mov
inc
mov
pushf
dec
mov
fwait
jne
dec
mov
jl
cmp
inc
pop
jne
out
xchg
test
xor
fstpt
and
add
popa
mov
cmpsb
pop
sub
add
add
add
cmp
test
add
mov
xlat
scas
inc
test
sub
aaa
mov
push
jg
es
cmp
nop
orl
loope
mov
ds
mov
sub
adc
or
mov
outsb
js
fldl
jge
mov
push
ret
xchg
mulb
push
add
mov
push
adc
mov
or
mov
xor
movsl
adc
sub
std
add
icebp
in
push
adc
daa
rorl
cmp
lods
aad
cmpsl
sub
pop
mov
ret
divb
daa
mov
outsb
fisubl
xor
pop
test
mov
jl
nop
hlt
jl
xchg
xor
xor
dec
jl
jl
sbbb
enter
fsubl
icebp
loopne
add
icebp
add
add
cmpsb
in
add
call
inc
mov
loopne
rcrb
iret
mov
mov
jle
or
ret
dec
lret
inc
out
ret
mov
call
xor
repz
pop
and
in
repz
stos
dec
jmp
sub
mov
subb
pop
add
rcll
sbb
scas
leave
push
sub
pop
ret
mov
pop
inc
lcall
iret
cmpl
lcall
add
xorl
dec
mov
adc
scas
enter
jl
call
lret
add
add
xchg
dec
out
ljmp
call
mov
cltd
push
leave
out
jbe
xchg
les
inc
or
aad
dec
int
cld
lods
adc
mov
mov
call
and
pop
add
jo
mov
icebp
out
andl
cmp
test
cmp
jecxz
pusha
inc
lret
pop
or
jae
imul
cld
mov
jae
mov
test
adc
in
sub
mov
dec
jle
nop
sbb
mov
lea
dec
pop
jmp
cld
sti
negl
mov
sbb
mov
lds
xchg
mov
sahf
ja
cmc
enter
repz
std
aaa
test
adc
cs
sbb
outsb
test
pop
and
enter
jle
mov
movsl
jo
je
loopne
pop
lret
test
scas
add
les
test
mov
add
movsb
das
add
imul
in
pop
push
nop
cmc
add
imul
movsb
shll
mov
scas
mov
bound
loopne
push
in
adc
mov
inc
xchg
dec
add
and
xchg
sub
cmp
cmp
pop
xlat
push
cli
push
shrl
or
push
out
mov
pusha
stos
sub
push
inc
jge
mov
test
add
fucomp
inc
mov
enter
dec
test
repz
lock
xchg
shlb
shr
std
push
xchg
test
test
mov
imul
test
cmpsl
jl
scas
adc
jp
mov
mov
les
mov
leave
lcall
push
pop
pusha
sbb
popa
xchg
add
adc
scas
or
mov
sub
fcompl
mov
ret
xchg
stc
sti
push
jne
xor
dec
mov
pop
frstor
cltd
mov
push
xchg
outsl
js
mov
loop
frstor
xor
pop
in
dec
insl
lcall
push
fisttpl
jb
inc
inc
nop
insl
cmp
push
hlt
in
add
rcrb
add
fs
cmc
or
ss
and
mov
shrl
sahf
cmpl
pop
ret
sarl
sub
jo
aam
push
gs
in
mov
pop
jg
insl
gs
sbb
or
and
into
dec
outsb
mov
inc
mov
dec
aam
dec
xchg
in
xchg
out
mov
outsb
fldcw
ja
bound
mov
jno
pop
lret
int3
fdivrs
cmpsb
inc
sub
lods
out
jl
int
movsb
adc
push
pop
setnp
inc
add
jae
clc
xor
je
test
aaa
out
jae
sub
test
dec
in
mov
ret
add
leave
cld
xchg
dec
sub
push
stos
call
adc
push
gs
and
insb
dec
jge
adc
mov
inc
mov
inc
loope
ja
push
mov
sbb
inc
sub
pop
sbbw
xchg
cmp
je
repz
imul
xchg
out
ficompl
jnp
mov
adc
mov
js
dec
rorl
rcrl
cltd
mov
fidivrl
jecxz
imul
ljmp
xchg
push
xchg
push
mov
push
xchg
pop
sub
inc
mov
adc
lods
mov
pop
aas
inc
stc
inc
shll
mov
test
sahf
mov
mov
fs
and
xchg
or
aam
jp
cmp
icebp
lods
push
cltd
mov
lds
mov
iret
add
cs
cwtl
pop
xchg
and
out
push
in
mov
mov
fwait
mov
jo
mov
xchg
mov
or
lcall
mov
je
adc
sbb
push
cltd
call
mov
dec
and
pushf
xchg
lret
mov
push
lods
sbb
sti
imul
cmp
les
cwtl
fldcw
xor
lahf
jg
daa
pop
dec
out
add
xchg
sar
pop
sbb
adc
sbb
fwait
dec
fwait
adcb
xchg
jo
ret
lahf
ret
out
mov
cli
mov
cmp
mov
push
scas
push
add
or
outsl
mov
mov
cmpb
shlb
sbb
jo
pop
jno
xchg
add
or
or
jb
scas
pop
dec
jle
cmp
xor
mov
test
rolb
mov
mov
pop
or
xchg
add
test
sbb
cmpb
lret
xchg
lock
jo
mov
sub
test
lds
adc
out
sub
cwtl
jg
add
test
sbbl
fadds
pop
out
loope
scas
push
in
sub
int
outsl
adc
xor
xor
scas
adc
popf
hlt
les
inc
das
dec
xchg
sub
movsl
add
sub
arpl
or
aam
pusha
sahf
aad
pop
fsubrl
fs
adc
pushf
and
cwtl
mov
loop
scas
and
xchg
add
test
xchg
or
dec
push
jle
mov
in
mov
jl,pn
pop
mov
mull
push
xchg
mov
mov
rorl
cmc
ja
push
push
push
and
cmc
add
and
xor
lea
mov
or
popa
out
es
mov
ficompl
pop
sahf
arpl
int
repnz
faddl
inc
sbb
adc
es
dec
inc
int3
mov
pmaxub
int
rclb
les
imul
daa
lods
sarb
in
mov
repz
int
inc
xchg
dec
stos
fsubrs
jae
fiaddl
xchg
pop
pop
sub
dec
or
inc
jg
lcall
xorb
test
in
adcl
clc
lds
xlat
or
push
push
daa
mov
sti
ljmp
aas
lock
dec
hlt
test
inc
dec
cs
fsubs
cmpsb
aad
js,pt
ja
dec
in
pop
mov
jmp
enter
insb
jp
jo
push
mov
push
or
push
test
les
sub
mov
dec
popf
xchg
fucomi
dec
stos
push
sub
faddl
xlat
xchg
mov
nop
push
iret
xchg
xchg
push
jbe
adc
pushf
xor
pop
cmp
adc
std
stc
orb
xor
ljmp
sub
ljmp
fs
loopne
mov
jae
xchg
jle
cli
jl
lods
pop
cli
les
xor
aad
mov
fptan
hlt
pop
mov
and
cmpsb
aam
loopne
jb
mov
dec
sub
int3
fsubrp
xchg
add
dec
dec
jle
roll
xor
mov
ror
cld
inc
movsl
adc
out
lock
lods
adc
pop
pusha
dec
push
jge
cmpb
rolb
jl
sbbb
arpl
fisttpll
xchg
iret
dec
aaa
test
jb
pusha
adc
jge
adcb
push
nop
aaa
and
cmp
or
mov
stc
insb
outsb
dec
dec
mov
push
mov
jo
repnz
fwait
mov
pop
lds
jp
pop
fs
repnz
arpl
popa
xor
fidivrl
jae
aas
ret
addl
xor
xchg
in
mov
push
scas
test
sbb
arpl
lods
jg
push
mov
rcll
pop
pop
pop
sub
push
xchg
or
shrl
outsb
sub
pop
pop
cltd
andb
inc
jle
mov
test
repz
push
or
rorb
pusha
mov
popa
dec
pop
push
or
sti
int3
inc
sahf
mov
jno
mov
cli
mov
fstp
inc
mov
jae
lods
fadds
mov
xor
scas
repz
push
mov
out
xchg
sub
pop
and
pop
es
pop
mov
jle
mov
xchg
or
std
clc
lcall
inc
stc
mov
lret
mov
stos
lcall
xor
xchg
add
sbb
sbb
adc
xchg
and
insl
jne
jbe
popl
push
idivl
out
bound
adc
mov
pop
jp
stos
mov
push
or
sbb
pop
or
jnp
mov
fstl
loopne
mov
fdivl
in
scas
inc
es
mov
pop
cmpsl
lock
sarb
out
xchg
mov
sub
sub
pop
and
scas
mov
cmpsb
arpl
and
leave
ds
cmp
pop
xchg
ss
push
cmp
mov
cmp
sbb
sbb
pop
bound
fidivrl
pusha
jbe
ss
pushf
sub
insl
in
inc
sarl
subb
pop
jo
ficoms
rclb
sub
mov
sbb
mov
dec
mov
and
movsl
pop
xorl
dec
mov
fisttps
popa
or
loopne
insb
add
cld
adcb
in
mov
ds
test
add
aam
sub
xor
sbb
data16
pop
outsb
scas
ret
mov
decl
outsb
cli
xchg
frstor
arpl
xchg
je
adc
mov
jle
hlt
pop
pop
jb
out
cmp
jae
sub
sub
xchg
pusha
test
jae
leave
mov
or
ss
mov
cs
or
and
int
mov
jge
shlb
inc
or
outsb
ds
cmp
lock
repz
clc
int3
mov
pop
pop
orb
dec
roll
sub
rclb
sbb
pop
sbb
dec
mov
movsb
push
fisttpll
scas
push
add
inc
fs
ret
pop
push
test
movsl
sbb
insb
add
and
ja
mov
sti
icebp
pop
test
adc
dec
mov
add
incb
int3
dec
addr16
pop
inc
int
inc
push
or
nop
hlt
ret
sbb
lretw
push
lock
scas
test
sbb
add
pusha
lret
cmp
div
push
xor
movsb
add
or
fisttpl
cmovb
jg
ret
fcomip
jbe
fs
dec
daa
pop
jns
and
mov
pop
ss
pop
adc
into
test
or
aam
push
into
ret
mov
dec
dec
or
pop
push
lock
insl
xchg
jbe
lods
jae
dec
loopne
mov
cs
jp
and
fidivs
fdivrs
or
sub
add
popf
dec
adc
leave
in
cltd
mov
lock
jno
mov
xor
ja
push
pop
lods
test
mov
lock
mov
xor
mov
adc
clc
insb
mov
mov
cltd
jp
out
out
repz
mov
movsl
test
std
or
pop
push
or
mov
push
stos
dec
insb
dec
es
sub
in
ret
outsl
cmp
adc
movsb
mov
int
rolb
gs
and
pop
test
jl
arpl
test
outsl
hlt
int3
xor
int
and
cli
sbb
loope
dec
or
shrl
pop
pop
popa
or
bnd
inc
mov
cmp
sti
add
repnz
lds
mov
sub
addr16
bound
dec
xor
and
icebp
xchg
or
push
nop
test
jecxz
jno
dec
xor
mov
in
lret
in
mov
fdivrp
bound
ja
out
xorl
arpl
or
lret
push
decl
lret
push
dec
mov
data16
pop
repz
xchg
lods
sahf
cmp
xchg
fmulp
adcl
push
jl
jnp
xchg
in
movsl
pop
pop
icebp
adc
push
and
cmpsb
and
sbb
mov
pop
out
xor
mov
insb
fdivs
mov
pop
movlps
aaa
sub
in
push
in
xchg
ds
xor
jp
lahf
roll
adc
jae
imul
stos
fld1
data16
and
cltd
roll
jl
imul
dec
fs
scas
hlt
or
insb
nop
and
mov
inc
xchg
movsl
mov
and
je
inc
adc
mov
bound
outsb
add
cltd
enter
ret
pop
mov
mov
xor
push
and
pop
adc
in
popa
push
aad
je
jbe
dec
fisttps
mov
xchg
cli
pushf
cmp
lods
lods
dec
mov
mov
mov
shlb
stc
xchg
push
sahf
loopne
stos
test
inc
push
and
clc
sub
mov
pop
pop
das
cmc
jae
outsb
orl
xchg
cli
cmp
push
fldenv
dec
jge
jne
in
scas
fildll
dec
mov
scas
pop
mov
mov
add
call
or
mov
in
mov
mov
loope
cli
idivb
xor
mov
mov
mov
jle
pop
push
xchg
movsl
push
loop
mov
xchg
mov
icebp
mov
addr16
dec
rcrl
ret
fidivrl
inc
nop
dec
cmp
or
push
sbb
in
in
and
jo
in
cwtl
adc
mov
inc
push
inc
cmpsb
das
mov
mov
scas
jmp
lret
scas
or
xchg
lahf
push
insb
jb
mov
rcrb
enter
xchg
movsb
cmp
aad
arpl
mov
pop
cli
push
mov
fsts
shlb
stos
and
mov
xorl
lret
out
sub
sbb
cmp
rcr
scas
mov
movl
pusha
ds
push
mov
rorb
fnstenv
bound
adc
js
lea
dec
inc
push
mov
inc
leave
es
pop
mov
pusha
fsts
mov
jge
addl
test
aas
xor
mov
pop
adc
subb
inc
inc
jl
push
cvtps2pd
push
cmpsl
xorb
outsl
insl
stos
xrelease
xchg
fs
push
test
cmp
loop
in
push
adc
pop
push
inc
cwtl
cmp
mov
push
filds
cmpsl
sbb
sbb
mov
aas
sti
into
mov
cs
or
sbb
mov
mov
insl
in
mov
or
or
fnsave
clc
fwait
xor
mov
lea
fs
sbb
jo
adc
sti
mov
dec
sub
add
dec
in
ret
lret
cmp
in
xor
test
inc
insb
mov
and
outsl
mov
adc
jmp
orl
dec
outsl
xchg
loopne
stc
std
or
jno
dec
outsb
lods
dec
in
in
cmp
jmp
outsl
push
sub
int3
xlat
mov
movsl
inc
lea
pop
pop
stos
lds
scas
xor
mov
mov
mov
sbb
pop
ss
pusha
push
xchg
xor
adc
in
movb
xchg
lret
out
movsl
xor
outsb
xor
decl
inc
jp
jne
sahf
mov
ret
cld
dec
adc
pop
push
or
mov
cpuid
jp
sub
cmp
xchg
adc
outsl
xor
jbe
enter
mov
js
adc
sub
pop
fchs
les
push
and
fbld
cmc
xchg
xorps
out
push
xchg
sub
fs
daa
xchg
roll
cmp
ja
mov
push
xchg
jb
stc
icebp
jl
rorb
cmp
push
dec
int3
scas
sbbb
adcb
in
je
movsb
mov
test
scas
inc
pushf
rorb
push
sahf
and
sbb
nop
inc
adc
sti
in
push
ret
fs
inc
fs
outsl
xchg
adc
mov
into
int3
das
ja
imul
or
popw
aad
dec
outsb
xor
pushf
dec
jbe
xchg
mov
mov
rorb
mov
jecxz
push
std
mov
pushf
fsubrl
clc
movsb
addr16
daa
pop
test
loope
inc
adc
add
push
jp
ror
mov
pop
dec
icebp
mov
sub
leave
nop
pop
mov
jno
push
les
cld
cwtl
cmp
pop
rorl
out
ljmp
pusha
pop
push
fiadds
jmp
adc
lods
inc
and
sbb
pop
fmull
lods
pushf
out
pushf
roll
loopne
add
push
or
push
pop
fists
popf
sbbb
jp
adc
jo
and
add
cmp
sub
test
js
stc
lods
out
insb
inc
jl
add
jecxz
mov
add
xlat
out
xchg
fistps
inc
rorl
mov
sub
rcll
addr16
xchg
rcl
lret
addb
loopne
fnstsw
scas
inc
push
imul
sbb
sub
xor
jge
scas
mov
mov
mov
and
std
in
movsb
adc
or
xor
jne
les
push
out
mov
push
and
and
repz
or
je
cmp
lret
push
add
iret
xlat
stc
fs
or
sbb
clc
movsl
fs
repnz
push
stos
sbb
popf
outsl
cmpsl
push
ja
aaa
xchg
inc
jl
fisubs
aam
push
cmp
movsl
das
mov
dec
pusha
pop
fsubr
pop
popa
out
sbb
adc
and
mov
imul
mov
xchg
ljmp
pop
inc
sti
pop
xor
add
jecxz
popf
xchg
xchg
stc
cld
daa
push
xor
and
xor
nop
test
jp
stos
in
shrl
ret
mov
fcoms
shl
xchg
clc
test
outsb
fs
push
mov
jb
int3
cmp
pop
pop
jmp
daa
mov
dec
sbb
xchg
cmp
aam
or
ja
out
lcall
shr
cmpsb
add
adc
lods
pop
push
das
and
enter
add
add
inc
xor
inc
loopne,pn
loope
nop
jmp
add
pusha
sarl
inc
outsb
fsubrl
jl
out
stos
adc
test
clc
out
lods
das
push
in
cmp
pop
mov
jo
dec
fimuls
mov
lret
es
cmpsl
scas
pop
iret
psrlq
mov
push
xchg
xchg
std
lds
test
into
inc
cmp
faddl
rol
sbb
jo
shl
mov
mov
mov
add
int3
lods
fistpl
push
dec
jmp
icebp
ret
pop
jno
pop
das
shrl
lock
in
cltd
cli
lods
add
pop
cmp
dec
sbb
rdtsc
std
fwait
test
xchg
xchg
scas
adc
lahf
sub
iret
cwtl
test
stos
clc
subl
push
mov
dec
repz
stos
or
push
cwtl
repnz
cwtl
out
aas
nop
rorb
rolb
inc
pop
rcrl
ficompl
sets
and
into
inc
xor
into
mov
cmp
sub
lea
or
mov
xor
pop
mov
mov
enter
mov
cmc
hlt
mov
lret
add
mov
lods
ret
jle
xchg
lods
mov
inc
xor
inc
js
mov
cmp
and
fmuls
mov
pop
out
jne
addl
mov
int3
in
mov
sbb
push
gs
inc
push
sub
addb
ss
mov
sub
dec
lmsw
mov
push
xor
and
add
cli
push
icebp
pusha
dec
add
out
sbb
jae
inc
lret
mov
jp
mov
sub
add
mov
jnp
push
mov
rol
out
roll
jbe
in
pushw
jge
fdivp
lret
push
add
mov
xchg
aaa
mov
pop
inc
cmp
sahf
xor
cmpl
add
clc
loopne
test
sbb
mov
jns
insl
aas
sub
movsb
push
push
popa
and
mov
mov
pop
sub
cli
int3
aas
sub
sub
cmpsl
mov
test
mov
lods
sub
mov
push
ds
mov
aam
or
jno
cmp
sub
popf
or
add
hlt
pop
push
out
std
mov
mov
dec
adc
sbb
cmc
add
cmp
mov
in
int
in
loope
andb
loopne
mov
out
lret
sbb
push
jns
sub
mov
cltd
loop
es
pop
ret
das
cmp
mov
xlat
inc
pop
stos
dec
mov
push
cmp
cmovs
sbb
jecxz
and
hlt
pop
mov
int3
sbb
cmp
xor
add
in
outsb
outsb
mov
mov
push
adc
in
xchg
mov
mov
sbb
sti
push
push
dec
sbb
icebp
outsl
jo
pop
cmc
xor
stc
lahf
sbb
inc
fs
dec
cs
mov
cld
dec
mov
push
ret
out
mov
mov
stos
sbb
inc
pop
ljmp
dec
adc
lods
mov
add
adc
jae
call
ret
mov
mov
clc
loope
jp
xor
lret
xchg
repz
fildl
fnstcw
lahf
sub
inc
add
fisttpl
lods
mov
rcl
add
add
pop
into
dec
add
sbb
scas
xor
out
mov
adc
push
cmp
xchg
jle
xchg
shr
mov
add
jb
in
les
inc
xor
mov
or
or
idiv
mov
ret
shll
pop
or
xchg
fsubs
sub
into
push
or
sub
add
xor
leave
or
jp
inc
fs
mov
mov
inc
int
lahf
dec
mov
call
sbb
or
int3
xchg
push
rclb
mov
cmpsl
fcmovu
call
lret
leave
arpl
sbb
test
stos
inc
pushf
arpl
test
mov
icebp
add
inc
jnp
out
push
loopne
sarl
sbb
lahf
sbb
aaa
jae
mov
mov
inc
or
inc
sub
pop
pop
ret
inc
int
mov
shrb
daa
enter
test
inc
mov
enter
fsubs
cmpsl
dec
jno
je
ds
jp
jno
xor
les
xchg
mov
icebp
adcb
int3
daa
xor
or
daa
sub
dec
sub
inc
aas
ljmp
adc
imul
xor
push
xchg
sarl
mov
lea
xchg
and
test
aad
loopne
loope
jge
call
pop
and
cmpl
push
mov
nop
push
repz
popl
stos
loop
inc
mov
cld
and
pop
cmpsl
fsubs
movsb
add
fistps
mov
mov
into
dec
out
jmp
loopne
inc
dec
rol
data16
call
fldcw
sub
jge
mov
sar
and
jge
xchg
add
cld
aam
pop
cmpsb
pushf
aaa
jge
add
rorb
push
je
jle
pop
or
jns
je
imulb
mov
in
jb
outsb
cmc
fidivrl
xor
std
xchg
scas
in
fnstsw
sbb
adc
bound
mov
bound
jle
adc
lods
jno
int3
or
int3
iret
xlat
lret
movups
pop
fucomp
gs
jmp
cs
add
stos
insb
add
sarb
jmp
dec
fcmove
mov
inc
mov
and
push
xchg
dec
in
jl
xchg
mov
loopne
fs
mov
cs
in
add
and
xchg
outsl
nop
jg
in
mov
and
mov
addl
stc
movsl
bound
or
movsl
sub
jnp
and
fptan
sub
lret
mov
test
xchg
stos
mov
in
xadd
fsubs
fnsave
fisubrl
mov
dec
stos
roll
mov
stos
loope
mov
pop
jno
es
test
jo
lods
sti
pop
mov
imul
fdivrs
and
or
and
das
nop
int
add
and
inc
inc
cli
ljmp
and
dec
dec
fs
sbb
in
fldenv
icebp
sub
cmp
fldl
test
jecxz
fcmovb
jns
outsb
mov
mov
stc
and
mov
or
push
adc
inc
fstpt
adc
movsb
mov
pop
enter
pop
into
movsb
int
pop
add
xor
cmp
xchg
and
push
ret
mov
rclb
pop
hlt
sub
repz
add
mov
push
hlt
cmpsb
aam
repnz
ja
mov
addb
jne
xor
mov
mov
mov
stc
dec
leave
jbe
xchg
out
and
popf
inc
cmp
jnp
cmp
sub
mov
jmp
adc
fs
push
movsb
repnz
push
fsub
add
push
sbb
lret
push
pop
and
std
add
xchg
mov
sbb
mov
lods
and
out
xor
and
data16
cli
in
pushf
in
ds
fsubrs
xchg
jo
and
in
bound
mov
ljmp
lahf
mov
leave
adc
es
cmp
insb
jge
cmpsb
dec
pop
pop
sub
dec
jg
push
pop
mov
jecxz
xor
out
std
xchg
gs
pop
mov
out
pushf
fbstp
inc
cltd
lods
cmpsb
mov
mov
dec
pop
lods
push
xor
subl
and
dec
sbbb
xchg
in
and
mov
xchg
mov
inc
icebp
mov
test
shll
sarl
pop
xchg
or
fistpl
bound
cs
jne
bound
mov
sbb
mov
sub
mov
mov
or
in
sub
jecxz
aas
test
cmc
sbb
mov
daa
fdivl
mov
aam
out
test
ret
sahf
pop
in
dec
mov
stos
adc
inc
cmp
scas
ret
cmp
cwtl
jae
outsb
add
cli
imul
pop
inc
jg
sbb
mov
das
out
sbb
fcomi
sbb
mov
and
or
adc
out
test
bswap
jmp
lock
aas
sti
mov
mov
int3
inc
push
fnstcw
jge
add
jg
or
cmpsl
pop
cmpsl
cmp
xchg
push
in
repnz
filds
dec
std
mov
pop
push
fidivrl
inc
jnp
xchg
jl
xchg
lds
or
xor
jmp
div
lcall
test
ds
jb
mov
cmpb
pop
pop
sub
addr16
psadbw
mov
push
leave
pop
das
or
int3
xor
fs
lea
inc
and
push
shl
outsb
inc
pop
scas
dec
sbb
dec
jl
fst
mov
pop
pop
js
jns
add
clc
xchg
sbb
mov
and
mov
cwtl
add
jb
or
insb
and
ret
rorb
addr16
ficomps
dec
and
rorb
cli
je
and
and
shrb
sbb
out
sbb
xchg
add
jo
orb
sbb
push
rclb
nop
shl
out
dec
mov
clc
xor
mov
jnp
and
mov
adc
xchg
int3
lock
xor
movsl
insb
adc
pop
xchg
ret
cltd
aas
mov
pop
dec
or
mov
sub
add
in
fucomi
push
pop
mul
mov
rcrl
dec
lock
sbb
pop
mov
pop
popa
lcall
xor
pop
push
sub
shll
test
pop
movsl
lcall
icebp
cmpsb
iret
lods
loope
jle,pn
scas
and
xor
cltd
xchg
mov
repz
mov
inc
and
pop
lret
or
mov
scas
push
lret
push
pop
mov
or
scas
ss
jg
jmp
notl
jp
add
jl
test
cld
in
ror
daa
mov
test
out
popa
in
stos
push
pop
addb
ret
je
mov
lcall
inc
int3
dec
dec
aaa
inc
notl
mov
out
mov
push
mull
call
test
shl
pop
lods
pop
in
test
pop
das
mov
sahf
cmp
mov
and
push
fwait
jmp
or
xchg
sub
pushf
nop
out
sub
shll
scas
int
mov
andb
add
pop
and
pop
push
cltd
fcom
int
mov
jp
jbe
notb
shl
dec
roll
in
fsubr
adc
pop
jne
cmc
inc
fsubrl
loopne
cmpb
test
stos
cltd
rolb
fwait
sbb
sub
lds
int3
aad
dec
cmpb
sub
enter
scas
testb
psubw
or
sbbl
out
fdivr
fdivs
add
jne
mov
addl
mov
fistps
jmp
fiadds
mov
cmp
pop
repnz
out
loopne
ss
dec
pusha
sbb
inc
out
outsl
jle
xchg
imul
jg
cs
stc
call
mov
sti
pusha
xchg
sahf
jl
lock
cmp
inc
mov
pop
daa
cmp
inc
or
dec
leave
mov
cwtl
xchg
sub
sbb
and
cli
jmp
sub
and
xchg
insb
ret
push
push
out
pop
pop
cmpsb
insb
jle
and
pop
push
mov
mov
mov
cld
cwtl
rcrb
mov
stos
leave
es
pop
into
out
test
fistps
test
sub
jecxz
aam
pop
data16
xor
fwait
mov
push
xchg
dec
pop
nop
in
jbe
mov
das
push
or
add
dec
bound
mov
insl
and
sbb
cmp
jp
in
or
mov
fidivl
loope
dec
or
xchg
mov
add
loopne
loop
in
cmc
mov
lods
stos
in
fistpl
inc
or
lods
cmpsl
sub
popf
cwtl
clc
jne
add
mov
dec
imul
push
xchg
mov
pusha
test
xchg
js
add
loopne
mov
scas
cmp
outsl
lret
hlt
ffree
and
xor
insl
dec
sti
fs
clc
in
test
notl
sbb
jle
mov
jl
and
dec
mov
sub
adc
sub
loope
mov
repnz
dec
dec
mov
pop
mov
in
ret
cmp
in
or
dec
leave
jae
cmp
loop
mov
and
cltd
mov
push
inc
mov
sbbb
aaa
inc
popa
rclb
and
cld
sub
lods
sbb
mov
lods
fcmovnbe
xchg
mov
sbb
sti
scas
aad
pop
cs
push
clc
lods
jl
out
leave
xchg
dec
xor
stos
in
xchg
repz
loope
xor
fwait
lea
push
mov
aaa
sahf
in
lret
xchg
pop
pop
je
lods
shlb
pop
xchg
ja
add
ja
imul
jp
mov
clc
loopne
aad
adc
repz
jmp
or
iret
pop
cwtl
arpl
or
fisubl
fmuls
xchg
orl
test
jle
adc
insb
xchg
xchg
push
inc
mov
xor
mov
stos
sarb
push
popf
inc
push
mov
push
sbb
and
shlb
test
outsl
out
jns
mov
push
mov
fmul
into
loop
push
aas
sbb
add
int3
cmpsl
add
daa
or
or
mov
jb
or
shll
jge
ficompl
orl
sbb
daa
das
inc
bnd
in
pop
push
imul
inc
adc
mov
mov
inc
mov
mov
iret
cmpsb
sarb
xchg
push
lcall
cld
pop
xor
in
pop
in
adc
mov
jo
pop
hlt
mov
js
dec
xchg
dec
sahf
ja
test
ret
in
gs
dec
mov
push
idivb
rclb
lods
sbb
data16
scas
fstps
pusha
sahf
les
scas
nop
sub
cltd
loop
inc
pop
incb
sbb
cli
ret
pusha
test
cmp
fidivl
mov
add
jle
mov
insl
rclb
dec
inc
mov
pop
dec
push
mov
adc
lods
aaa
mov
out
int3
test
xchg
fnsave
fmulp
enter
mov
cwtl
mov
sbb
lret
lock
mov
mov
push
fldl
xor
pop
daa
addr16
mov
dec
push
mov
add
lock
sub
popf
push
push
shl
jmp
adc
adcb
sub
dec
mov
xchg
adc
cmpl
out
jp
fdivrl
jle
lcall
mov
test
or
popf
daa
fdivl
sahf
push
or
and
mov
jg
ret
lret
cmp
adc
xchg
add
mov
xor
and
out
or
test
xor
mov
jp
ss
mov
fs
sub
mov
imul
jecxz
out
fistl
repz
cmp
shrl
jle
cmpsb
mov
pop
adc
hlt
cli
lock
inc
cs
or
jle
out
mov
dec
mov
add
dec
dec
mov
scas
fs
lods
std
jo
push
sub
fcomps
pusha
test
adc
dec
insl
pop
add
inc
mov
pushf
adcb
adcb
mov
mov
inc
lock
push
test
cmpsb
icebp
push
pop
cld
loopne
fstps
lods
jo
pop
xorl
int
push
call
fstps
dec
jo
cmp
pop
xor
pop
mov
push
outsb
orb
les
inc
lahf
test
sbb
dec
dec
subl
push
mov
push
mov
clc
into
jno
cmpsl
mov
fisttpll
xor
orb
idivb
shlb
jp
push
fmull
cld
xchg
stc
fidivs
movsb
outsb
inc
fs
xchg
sub
xor
mov
repnz
aad
cmp
mov
in
jns
enter
neg
lock
fldt
test
or
mov
sti
stos
icebp
adc
pop
pop
std
and
pusha
fnstenv
into
push
xchg
mov
mov
push
fsqrt
rcl
adc
jnp
imul
test
lods
sti
test
inc
jb
mov
jl
mov
ja
jne
mov
inc
stos
add
dec
sub
xchg
das
adc
sbb
imul
das
loop
dec
mov
jb
cmp
cmp
cld
pmulhuw
loopne
arpl
inc
adc
mov
jle
cmpsb
push
hlt
lret
rorl
fdivr
and
mov
cmp
repz
pause
gs
jg
arpl
jmp
scas
inc
add
xchg
sarl
add
cmp
loop
popf
sbb
pop
test
mov
lret
sub
pop
test
loop
lock
sub
cmp
sbb
mov
negb
in
dec
inc
and
mov
pop
mov
dec
xchg
in
rorb
lds
jp
outsb
outsb
mov
xchg
je
push
fldl
inc
and
sbb
scas
mov
mov
je
scas
fsts
les
aas
mov
xchg
pop
js
xchg
cltd
add
fdivrl
popf
xchg
jmp
xchg
mov
xor
and
xor
mov
out
and
lods
sub
cmp
push
inc
ds
ja
nop
cs
xchg
pop
pop
mov
cld
inc
mov
cmc
mov
mov
mov
mov
lods
mov
push
in
lcall
jp
sub
jnp
xor
inc
mov
out
xlat
cmc
jnp
push
xor
or
aas
jne
mov
pop
and
out
out
lods
sbbl
add
sbb
andb
lock
negl
or
int
mov
mov
inc
and
or
insl
into
xor
int3
pop
ja
in
dec
rorl
sbbl
fldcw
cmp
movsb
xor
repz
push
sti
xchg
adc
add
pop
pop
daa
div
ss
cltd
push
adc
iret
adc
shll
or
sarl
xchg
cmpb
int
jg
push
rorl
cmp
pop
inc
pop
aad
sti
in
stos
into
dec
jle
mov
scas
xor
mov
fldenv
and
repnz
enter
mov
repnz
in
test
add
sub
lcall
ds
lock
xorl
cmpsb
test
out
aad
fsubr
aam
leave
pusha
in
add
adc
push
popf
nop
or
jmp
jo
gs
call
inc
std
lcall
add
enter
outsb
sub
movsl
outsb
int
test
dec
arpl
pop
add
adc
mov
leave
and
aam
and
gs
cmp
mov
sub
mov
idivl
aaa
add
stos
jne
cld
jmp
and
mov
sub
push
inc
mov
mov
jo
pusha
cmpsl
mov
cmp
into
mov
xorl
sub
fs
std
repnz
outsb
dec
sub
inc
stos
mov
pushf
sub
repnz
ljmp
fwait
mov
repnz
rcrb
je
inc
mov
into
pop
shl
cs
push
ret
sub
xchg
dec
mov
addb
lcall
ljmp
dec
or
inc
mov
push
lods
add
jl
imulb
lahf
jmp
adc
push
addr16
out
add
lcall
fs
dec
dec
mov
jle
movsl
and
sbb
ficoml
sbb
gs
cmpsl
mov
pop
lret
pop
js
inc
sbb
mov
mov
jo
pop
test
adc
js
lret
stos
lock
loopne
cs
sub
outsl
shr
pop
xor
push
test
inc
push
mov
loop
int
xchg
mov
adc
cli
aam
push
cmp
mov
xor
sub
lcall
aas
test
jns
jnp
push
mov
loopne
inc
sbb
cltd
jecxz
sbb
mov
lcall
lret
dec
es
loope
imul
pop
das
fisttps
mov
in
cs
pusha
push
sbb
sarl
scas
push
fs
std
xor
int3
es
lcall
ret
loop
pop
push
pop
pop
addr16
mov
rcll
and
or
in
mov
lcall
ret
in
cwtl
out
cmp
xchg
dec
mov
jb
aam
lahf
bound
pop
lods
xchg
cmp
aam
and
pop
cs
fnstsw
cmp
iret
sbb
fstpt
push
pop
xor
in
jb
sbb
sbb
scas
gs
or
mov
and
and
push
sub
rcrb
imul
ret
outsl
add
scas
data16
add
nop
decb
cmp
mov
sub
jl
ljmp
cmovb
imul
pop
push
ret
and
sbb
and
jae
mov
dec
std
test
repnz
jno
ljmp
iret
cmp
pop
adc
iret
flds
insl
and
fistl
in
je
outsl
pop
xchg
inc
mov
push
addb
push
lods
jmp
xor
lret
insb
or
fmull
or
xchg
add
jo
stos
sub
and
in
lahf
movsl
mov
jmp
add
or
ret
inc
push
ss
jbe
cli
inc
shl
inc
dec
int
fcomps
insb
and
mov
pop
xchg
xor
shlb
lea
incl
mov
push
loopne
sbb
mov
inc
xchg
stos
jecxz
mov
xchg
sahf
fisttps
ret
inc
adc
subl
mov
xor
cmp
bound
fldcw
inc
pop
std
push
sbbl
pop
es
jo
mov
mov
cs
add
insl
and
mov
icebp
inc
jns
popa
int3
into
inc
xchg
or
add
scas
lods
iret
inc
outsb
popf
repnz
mov
inc
gs
lahf
loope
xchg
add
lahf
lcall
movsl
xor
and
std
xchg
nop
sub
push
cmp
in
or
aas
pushf
pop
and
sub
or
pop
cmc
dec
hlt
inc
repz
xor
stos
pop
cmc
flds
das
push
fwait
lcall
pop
mov
push
std
js
add
test
push
and
push
dec
rorl
pop
loopne
fcoms
push
adc
jno
sbb
mov
sbb
mov
pop
sti
push
or
addr16
in
test
sbb
xchg
divb
das
imul
push
addr16
sub
ret
or
enter
mov
mov
jbe
sbb
push
out
sbb
inc
cltd
push
cld
ret
daa
dec
jp
push
decl
subl
in
xchg
push
jge
sbb
aad
aaa
pop
pop
sub
push
pop
in
push
inc
jecxz
fdivrs
dec
adc
aas
arpl
cmp
out
mov
pop
add
adc
and
sbb
xor
mov
addl
sahf
stc
icebp
dec
loop
push
or
push
jne
lcall
sarb
loop
pop
and
mov
fisubl
std
push
cltd
fs
sub
aas
sarb
sbb
imul
and
mov
ds
jne
cli
cmp
lret
push
cmp
daa
leave
scas
repnz
jmp
and
fnsave
cmp
fnstsw
lock
into
daa
jge
pop
cld
pop
jp
arpl
ljmp
mov
jae
dec
sbb
ficompl
lods
decb
xor
push
pop
arpl
mov
jl
lods
inc
mov
mov
inc
jp
push
fcmovb
data16
xor
movsl
push
jmp
sbb
add
push
inc
sbb
in
jle
fdivr
mov
fnstsw
call
sub
dec
ret
dec
ss
xchg
leave
ret
fdivrs
jp
stc
push
mov
les
xchg
aad
mov
inc
arpl
jne
arpl
or
adcb
je
aas
mov
popa
cs
sahf
inc
ficoms
jns
mov
sub
cld
stos
in
adc
lods
lods
adc
and
jl
cmp
movsb
cmp
jp
push
xchg
mov
jnp
subb
shlb
inc
add
pop
sbb
mov
sub
in
maskmovq
testl
outsb
push
inc
xchg
mov
popa
ss
xchg
mov
out
out
cmp
cmc
or
pop
mov
push
mulb
call
loop
mov
addb
mov
testb
lods
lds
cs
clc
xchg
in
inc
cld
mov
push
inc
mov
inc
es
mov
jmp
jg
in
mov
bound
mov
add
jnp
mov
sub
out
pop
or
mov
push
sub
pop
mov
out
inc
and
iret
dec
pop
pop
pop
sub
jge
ret
lahf
insl
pop
sub
and
pop
daa
out
lret
pand
mov
jbe
enter
mov
outsb
push
mov
hlt
in
xor
pop
std
ds
jno
imul
sbb
and
sahf
inc
outsb
gs
jae
mov
faddl
jl
in
imul
cmpb
mov
or
jbe
pop
les
mov
sbb
and
loopne
in
cmc
lds
push
lods
xchg
aad
sbb
mov
cltd
jb
mov
mov
lret
aaa
fs
cwtl
jnp
mov
outsb
lods
rolb
hlt
push
xchg
mov
pop
test
mov
pop
xor
aas
mov
push
xchg
cmc
mulb
aaa
imul
aad
pushf
pushf
jb
in
jl
mov
xchg
lods
push
into
mov
jge
adc
mov
dec
rcrb
test
dec
pop
enter
mov
fs
dec
test
subl
lahf
xchg
or
inc
test
jecxz
test
xchg
mov
jp
and
xchg
movsb
add
push
cmp
mov
mov
or
or
inc
jl
jbe
adc
xchg
dec
cmp
mov
je
insb
mov
push
pop
out
ja
mov
mov
push
ljmp
sti
shlb
aaa
xlat
or
cli
sbb
data16
inc
aam
clc
mov
mull
cwtl
sbb
aad
add
sbb
xor
inc
and
mov
in
or
mov
mov
pusha
inc
mov
jb
mov
push
rclb
mov
imul
test
enter
adc
test
add
jne
sub
add
lret
xor
jnp
call
test
out
stc
cld
dec
jne
in
sub
fs
jnp
lcall
mov
cld
in
and
xchg
iret
mov
inc
xchg
or
out
dec
sub
fiaddl
in
push
stos
xchg
mov
icebp
int3
pop
xchg
push
test
sbb
lock
out
in
pop
cmc
in
fstpt
mov
push
rcll
mov
out
cltd
test
adc
add
jnp
xlat
outsb
orb
aaa
xchg
push
cmp
lret
xchg
jae
sub
loopne
sbb
shlb
jle
xchg
xor
insb
dec
mov
leave
enter
mov
xchg
test
sub
push
jmp
enter
push
cltd
hlt
jg
leave
lods
mov
mov
icebp
das
leave
inc
fdivrs
mov
ljmp
inc
cmp
outsl
into
sub
jo
cs
or
sbb
in
call
adc
dec
call
icebp
repnz
push
pop
cmp
sti
mov
xchg
rcrl
shll
mov
sub
scas
cmp
inc
data16
add
rol
out
add
cmp
call
or
mov
outsb
cmpsb
scas
sbb
lcall
pop
inc
xor
pushf
xchg
les
cld
mov
dec
adcb
add
hlt
out
xchg
sbb
mov
add
inc
mov
jge
adc
icebp
push
inc
test
push
out
pop
shrl
les
add
out
sub
add
or
loope
aaa
xor
xchg
mov
roll
sar
jbe
int3
xor
into
outsl
cld
adc
push
stos
out
out
in
outsb
lods
enter
in
addr16
roll
call
inc
gs
shlb
cli
icebp
enter
jg
pop
xchg
xchg
repz
sahf
sub
adc
mov
sub
add
adc
lds
rorl
jmp
shlb
sbb
xchg
adc
cltd
test
mov
adc
lcall
ret
adcb
mov
pop
repnz
mov
xor
xor
fcoms
jg
sbb
sub
mov
push
lods
adc
xchg
lea
sub
cmpsl
pushf
je
lahf
dec
jno
imul
xchg
add
fwait
outsb
in
inc
dec
lea
and
mov
push
add
or
and
push
add
jg
xor
sub
nop
mov
add
mov
xor
in
inc
lret
adc
jae
mov
fwait
jmp
in
sbb
mov
out
hlt
jbe
stos
xchg
sbb
inc
daa
inc
fidivrl
shrb
and
fwait
pop
sub
loop
xchg
fdivs
lahf
das
pop
ret
or
sti
jne
ret
repnz
sub
daa
push
lds
call
jl
push
sub
pusha
or
roll
shl
push
gs
nop
outsl
fwait
ret
aam
pop
inc
test
loope
lods
repz
push
inc
xor
pop
imul
push
ret
dec
xor
add
in
add
jge
add
jmp
loopne
idivl
jb
pop
ret
in
dec
in
jb,pt
test
fwait
lret
sub
out
xchg
popa
shll
sub
sub
mov
ja
mov
pop
mov
in
sub
dec
mov
pop
imull
std
add
sub
or
enter
stos
and
adc
and
mov
int3
inc
aas
jns
jbe
pop
fstpt
adc
adc
icebp
cld
sub
loope
jle
and
and
mov
jge,pn
jg
popl
lods
int
aas
and
in
push
subl
inc
mov
insb
scas
fcoms
xchg
insb
adc
in
xor
push
push
fdivl
movsl
lret
and
ds
inc
rorl
cmp
gs
ds
cmp
add
or
enter
mov
inc
inc
sub
pop
cmp
or
adc
mov
lcall
mov
mov
push
sbb
imull
inc
stos
xor
gs
and
sub
cmp
push
scas
ret
inc
jl
test
js
add
mov
and
lret
fsubrs
fidivs
xchg
pop
neg
pop
jg
jle
addr16
std
push
sbb
pop
or
jbe
rolb
mov
fimuls
mov
jae
add
scas
in
push
adc
push
test
stc
cs
sbb
popf
sarb
pop
lret
xchg
icebp
cmp
push
imul
iret
jle
xchg
rorl
and
or
es
cmc
xor
icebp
ja
inc
xchg
or
rcrb
adc
fnsetpm(287
sub
ljmp
loopne
mov
enter
in
mov
adc
mov
adc
inc
push
roll
movsb
jle
push
push
js
cmp
es
rclb
add
cmpsb
aaa
stos
add
jge
xor
jo
adc
mov
push
bound
or
bound
test
int3
sbb
pop
ret
mov
ret
mov
ror
fldenv
pop
addr16
add
in
iret
and
loope
mov
pop
xchg
inc
sub
and
fdivrl
stos
pop
stos
pop
mov
gs
shll
js
movsl
jnp
fwait
xor
xchg
cmp
outsl
xchg
sub
das
mov
pop
mov
xor
std
adc
call
adc
enter
inc
jmp
push
jo,pt
pusha
inc
ss
dec
in
sub
test
movl
cs
out
mov
cmp
shlb
lds
pusha
scas
jp
mov
clc
stc
jne
adc
add
push
arpl
lea
ja
lds
or
notb
loop
in
fidivs
gs
call
cmpsl
or
dec
test
adc
xchg
repz
mov
jecxz
sub
pusha
imul
in
add
sub
sarb
pop
xchg
stos
popa
adc
mov
add
push
mov
dec
sbbl
out
mov
push
inc
ljmp
xor
mov
dec
and
xchg
xchg
or
ret
dec
jp
loopne
pop
loope
ret
hlt
mov
into
or
sbb
mov
test
rdtsc
jmp
les
cmp
mov
lret
mov
sbb
and
js
int
sti
jmp
inc
push
mov
xor
jge
pop
je
andb
sub
cwtl
ret
in
add
ljmp
inc
mov
out
mov
sarl
push
add
dec
jmp
push
add
add
xchg
lret
addl
insb
gs
inc
pop
in
mov
or
imul
shrl
xchg
jge
inc
pop
adc
ja
push
in
pop
shl
cmc
add
cli
cmpsb
add
jg
sub
push
popa
inc
fcomps
mov
sbb
fsubrs
movsl
xchg
std
xchg
loop
lods
push
sbb
sub
inc
shrb
push
inc
cwtl
cwtl
sbb
sbb
inc
das
xchg
mov
test
cmpsb
in
and
xchg
cmpb
mov
sbb
sbb
jge
xchg
decl
xchg
stc
pop
test
cmp
mov
and
mov
mov
outsl
int
jge
pop
mov
cmp
xchg
es
and
cmp
movsb
addr16
xchg
repz
add
fists
ds
or
jmp
dec
add
shrl
push
mov
mov
cmp
push
or
fs
adc
fists
inc
sbb
dec
stc
test
orb
scas
das
push
sbb
push
push
add
and
gs
mov
pop
mov
adc
or
pop
and
mov
inc
mov
or
out
cmpsb
lock
jb
push
mov
add
lods
decl
fmull
adc
and
mov
pop
ds
mov
add
test
sbb
fadds
push
sahf
push
cld
out
dec
dec
mov
mov
sbb
scas
push
xchg
inc
dec
mov
xor
mov
lret
and
sahf
xor
pop
mov
push
jmp
or
jnp
dec
call
jo
shll
repnz
inc
push
lahf
mov
adc
out
push
xchg
repnz
out
fnstsw
ds
cmp
les
in
test
push
cmp
faddp
fldenv
scas
or
mov
sub
jg
ret
int
movsb
test
sub
jo
push
mov
stc
fdivs
cmp
sbb
leave
loopne
mov
adcl
sub
sub
dec
add
inc
inc
add
aad
pushf
mov
fnstsw
dec
addl
and
and
repnz
inc
int3
mov
loopne
add
lods
mov
cmp
repz
sub
insb
scas
xchg
inc
push
inc
cmpsb
jo
mov
iret
pop
push
and
lods
cli
inc
clc
xor
mov
movsl
or
adc
jg
pop
loope
in
dec
subb
xor
dec
rorl
or
inc
jg
loopne
insb
js
repz
add
scas
ja
xor
addl
js
sahf
js
cmp
xchg
std
sbb
sbb
xor
mov
arpl
or
pop
shrb
jecxz
dec
repz
hlt
scas
xchg
mov
jne
dec
jmp
fiadds
pop
inc
outsb
inc
mov
xchg
adc
daa
movsl
push
cld
lahf
and
xchg
hlt
jnp
xor
mov
push
and
pop
jp
sahf
enter
cmp
cltd
xchg
and
das
scas
mov
lret
push
iret
pop
pop
pushf
repz
lahf
movl
xchg
or
mov
push
dec
add
les
test
fcoml
add
inc
addr16
iret
sub
rep
lods
ja
lcall
cmp
cli
outsl
add
scas
inc
je
pushf
sub
inc
pop
mov
scas
icebp
sbb
fisttpl
inc
push
stos
add
ss
leave
jno
lods
aad
adc
gs
int3
push
out
aad
push
idivb
sub
sub
imul
ficoms
ljmp
lds
cmpsb
out
lret
pop
mov
lret
loop
add
aas
ja
daa
outsb
movsb
and
shrb
lcall
pop
lods
lods
outsl
outsb
loope
mov
push
sub
leave
and
xor
jo
jp
mov
mov
dec
mov
jle
pop
xchg
jns
pop
xchg
cltd
xchg
out
scas
in
pop
dec
into
dec
clc
or
inc
push
push
pop
into
punpcklwd
rolb
test
add
test
sbb
jne
data16
cwtl
push
mov
ljmp
jns
mov
sub
push
lret
enter
std
mov
stos
fisubl
and
jge
lods
mov
int3
pop
jge
nop
mov
stos
lea
sbb
sbb
jp
or
dec
mov
and
mov
mov
xor
fbstp
pop
and
mov
idivb
sub
cmp
scas
ljmp
xchg
mov
shl
add
mov
jns
mov
scas
jae
or
cs
dec
test
dec
pop
rcrl
xor
dec
push
mov
daa
mov
sub
mov
dec
fists
int
in
mov
inc
test
into
sub
out
stc
lcall
mov
insb
inc
sbbl
sbb
lock
movsb
xlat
ret
adc
cmp
fimuls
js
insb
or
lods
test
in
adc
xchg
arpl
sub
mov
jo
lock
aam
fbld
and
xor
xor
inc
mov
xor
push
imul
xor
sbb
mov
aas
and
shll
dec
push
lods
push
subl
cli
pop
arpl
das
stos
pop
int3
pop
lds
mov
add
cs
adc
imul
pop
xor
fsubl
rcrb
cli
pop
or
sarb
sbbl
cltd
repz
das
int3
pushf
mov
push
inc
fstl
nop
cmp
dec
lods
dec
lock
ss
shrl
xchg
mov
lods
imul
push
cmp
outsb
fimull
jae
int
sub
sahf
xor
cld
in
cmp
minps
nop
xor
push
jnp
ret
inc
xchg
adc
cwtl
lcall
or
ss
movsb
adc
test
jnp
cld
adc
lcall
adc
inc
pop
cmpsl
cltd
shll
adc
pop
pop
cmc
fcoml
adc
js
jmp
repnz
cmc
outsl
fimull
fwait
mov
in
pop
inc
adcb
cmp
cli
movsl
mov
call
loopne
sbb
adc
iret
jmp
fwait
mull
fmull
fstps
pop
sub
mov
and
mov
sbb
fcompl
lods
dec
insb
call
lret
sub
mov
jb
cwtl
pop
jecxz
add
je
shll
or
pusha
cmp
cwtl
lds
testl
dec
pushf
pop
mov
cs
shlb
sbb
ja
mov
stos
push
pop
push
and
in
xchg
stos
out
lret
jnp
clc
mov
fiadds
int
icebp
in
push
push
mov
pop
dec
call
dec
pop
out
shlb
inc
lds
insl
pop
and
ficoml
enter
orl
test
and
fs
jb
negl
pop
and
mov
popa
xor
les
sub
jp
dec
pop
mov
cmp
jecxz
xchg
xchg
mov
clc
icebp
dec
inc
mov
xchg
stos
subb
and
scas
cmp
pushl
sarl
ss
xorb
push
push
xchg
sub
data16
ljmp
cwtl
sbb
sub
dec
pop
fimull
test
pop
repz
or
lcall
dec
mov
pop
jmp
inc
orl
daa
sub
clc
in
adc
fimull
enter
in
mov
jne
shlb
gs
adc
cwtl
jl
hlt
sub
lret
stc
mov
xlat
dec
pop
sub
fstpt
or
sbb
xor
xchg
sbb
in
rcr
pop
imul
xor
rclb
sub
add
sub
and
or
out
into
fnstsw
mov
sbb
repnz
push
xor
ret
out
sbb
jle
push
cld
sbbl
mov
addb
shrb
lcall
and
andl
mov
lea
push
cmp
pop
dec
incb
jmp
mov
sbbb
int3
faddl
lahf
dec
dec
jmp
loopne
push
sbb
mov
outsl
or
test
fsubrl
sbb
adc
dec
sub
in
and
stos
rorb
popf
pop
dec
mov
lcall
call
inc
mov
sbb
andb
dec
data16
pop
jge
outsl
lcall
pop
ds
pop
pop
aas
push
add
int
xchg
sub
lret
cmpsb
int
clc
and
cmpsl
call
fmul
repz
pusha
jge
pop
mov
sti
xor
mov
loope
cli
icebp
sahf
call
add
mov
adc
pop
mov
icebp
dec
xchg
jle
fcomps
out
icebp
pop
pop
int
mov
lock
or
inc
add
shll
push
xchg
fimull
movsb
add
jmp
mov
rol
into
into
test
or
jo
shrl
jge
mov
sbb
ja
icebp
in
mov
sub
repnz
or
add
xchg
jp
in
fwait
cli
gs
pusha
sub
inc
mov
pop
jnp
adc
fsubp
cli
sbb
adcl
ja
cmpsb
xchg
ret
out
daa
inc
sbb
push
sahf
dec
bound
data16
mov
jp
outsb
or
insl
xor
add
in
into
call
or
popf
cmp
mov
pop
call
xchg
inc
lcall
pusha
shrb
adcb
out
in
xchg
jle
gs
pop
fstps
jle
add
adc
xor
jle
inc
jg
ss
and
mov
std
clc
push
cs
test
cmp
fstpl
xchg
outsl
dec
xor
and
sub
mov
mov
flds
jbe
or
sub
inc
hlt
and
lods
test
arpl
adc
divl
outsb
mov
aad
xchg
pop
mov
push
rcrl
xchg
nop
outsb
cmp
adc
cmpb
lcall
jb
push
lret
pop
lock
sarb
jo
xchg
rcrl
fiaddl
jne
adc
repnz
lods
loopne
test
jnp
out
out
jmp
pop
xor
push
xor
dec
sub
out
add
shrl
shrd
scas
dec
adc
cld
mov
mov
in
pop
test
ret
xor
and
jmp
mov
push
loop
in
loope
or
fistl
push
or
rorl
in
jb
inc
cmpl
adc
add
add
cmpsb
or
bound
daa
in
push
loopne
in
mov
pusha
pop
pushf
inc
add
js
pop
xchg
pop
pop
out
mov
sub
add
aas
add
lret
xor
mov
pop
cmp
push
and
adc
mov
aaa
test
insl
enter
ret
cli
push
push
call
rorl
mov
rcll
cmp
gs
out
outsb
jbe
pop
xchg
sarl
lods
call
test
mov
fimull
in
aas
out
imul
cltd
push
cmp
fidivl
sbb
in
mov
pop
mov
or
rolb
xor
pop
movb
jge
arpl
jno
mov
add
sarl
mov
jns
mov
push
jl
cmp
in
or
pop
clc
jl
mov
pop
pop
cmp
inc
pop
mov
pop
mov
dec
jle
enter
lcall
aam
mov
jecxz
imul
xchg
lret
add
mov
mov
push
sbb
mov
inc
je
sbbb
push
pop
xor
jle
test
in
sbb
push
mov
push
sbb
add
or
sti
fisttps
jmp
fistpl
jae
in
pop
mov
loopne
dec
xchg
dec
cmp
inc
mov
push
sahf
sarl
pop
and
inc
sarb
cmp
mov
movsl
shrb
addr16
cmp
sbb
roll
pop
sbb
mov
adc
sub
lahf
add
inc
sbb
mov
lret
roll
data16
add
or
xor
mov
dec
pusha
cld
enter
add
hlt
or
std
cmpb
std
xchg
push
add
lret
movsb
mov
add
sub
jl
lds
push
pushf
adc
push
mov
sbb
orl
out
sbbb
mov
xor
int
mov
ljmp
add
sbb
mov
in
mov
js
shll
add
sbb
dec
shrl
dec
movsl
insb
call
enter
pop
jno
test
push
movsb
sub
sbb
and
add
fcmovb
testb
sti
lods
mov
cmpsl
and
inc
repz
pop
push
scas
repz
pusha
cmpsb
adc
addr16
lret
jae
push
insb
sti
sbb
das
in
adcl
jg
push
js
cmp
mov
mov
cmpsb
jg
mov
sbb
popa
hlt
sub
popf
dec
leave
int
icebp
call
out
push
sbb
lret
jge
push
push
stc
ret
add
or
push
pop
mov
dec
js
sbb
dec
xor
dec
pop
or
jae
aas
inc
pop
stos
shl
out
inc
mov
dec
cmp
inc
mov
int3
sub
mov
mov
cs
pop
lock
cli
mov
mov
inc
xchg
pop
addl
push
out
pushf
adc
add
pop
fwait
push
cld
push
test
sti
mov
mov
pushf
mov
daa
xchg
repnz
sub
pop
icebp
jecxz
jle
xchg
pop
jp
fmuls
add
push
or
adcb
xor
or
rclb
test
add
in
test
mov
stos
addr16
jp
icebp
pop
out
xchg
sahf
pusha
popf
pop
add
cmp
in
inc
push
mov
scas
add
fsubrp
mov
pop
mov
cmp
sbb
add
fsubr
add
mov
adc
shll
cmp
inc
and
loopne
dec
xchg
fs
ljmp
add
testb
or
daa
xchg
dec
sbb
mov
pop
add
inc
mov
sub
pop
mov
push
jge
mov
sbb
mov
xchg
or
in
test
pop
sub
scas
inc
jne
and
adc
or
push
xor
testl
testb
nop
shlb
aad
aas
stos
movsl
icebp
cltd
gs
and
popa
cmp
jno
push
jp
jge
lcall
or
xchg
xchg
cld
int3
iret
pop
shrl
push
frstor
rorl
or
cwtl
mov
pop
movsl
jl
jecxz
call
inc
mov
inc
aas
in
sbb
ret
push
xchg
jl
cmpl
andb
and
dec
lods
cmp
imull
out
popf
into
test
adc
xchg
ret
or
decl
hlt
fbstp
jo
inc
or
xor
mov
cmp
cmp
call
inc
mov
mov
mov
mov
movsl
cmp
adc
pop
xchg
aad
aaa
sub
dec
add
mov
mov
je
mov
in
into
mov
loope
jle
and
sbb
bound
adc
pushl
sbb
push
je
scas
xor
xchg
addr16
fldcw
mov
daa
mov
fisubl
cld
xchg
xor
add
insl
mov
pushl
xor
cmpl
jb
aam
test
adc
inc
mov
gs
xchg
rclb
mov
push
or
sub
push
hlt
clc
mov
clc
nop
fsubp
ret
jno
cmp
out
dec
and
lods
je
shlb
mov
and
divb
dec
push
cld
movsb
xchg
xchg
push
jne
dec
test
into
or
dec
hlt
sub
mov
aas
cltd
mov
je
mov
or
adc
js
push
sub
add
push
popf
mov
lods
sbb
cltd
rcll
lret
iret
jg
sbb
int
mov
dec
cmc
push
ret
sub
shr
movsl
inc
popa
or
out
inc
inc
push
fldt
movsl
sbb
mov
ret
out
arpl
mov
sbb
incl
dec
inc
insl
xchg
or
jnp,pt
jbe
mov
dec
loop
push
stos
jne
xor
nop
iret
hlt
movsl
orl
jle
mov
sub
sbb
in
push
jg
testl
ljmp
into
sbb
cmp
pop
clc
call
push
or
jno
andb
movsl
out
xorl
add
xor
outsl
mov
arpl
nop
mov
pop
jo
pop
addb
and
or
cmp
lods
mov
ja
mov
pop
lods
ss
dec
sub
lock
test
inc
mov
loop
or
adc
jg
shll
outsb
into
sub
movsl
cmpsb
mov
mov
outsb
adc
add
xchg
iret
mov
iret
js
push
les
inc
fwait
mov
mov
xlat
into
popf
jl
dec
jnp
aad
repnz
subl
stos
or
mov
jecxz
test
add
pop
clc
pushf
addr16
pop
mov
ret
push
mov
shll
xlat
xchg
icebp
xchg
push
and
rcll
out
push
cltd
pushf
jae
test
cwtl
xor
movsb
cmc
lods
das
cmp
add
in
adc
test
clc
shll
test
popf
mov
pushf
mov
pop
pushf
in
sahf
lods
push
or
inc
add
or
subl
mov
xchg
jno
inc
jl
and
jns
add
roll
dec
repz
fiaddl
inc
mov
push
or
gs
push
addl
popf
out
notl
rolb
ljmp
bound
pushf
ss
and
sti
mov
aam
jg
repz
movsb
ja
pushf
add
psubusw
xchg
sub
scas
mov
push
outsb
adc
dec
in
jnp
iret
loopne
repz
adc
mov
lret
jbe
mov
pusha
pop
push
jns
cltd
sub
push
mov
lcall
sar
inc
dec
mov
pop
ja
jb
out
pop
lcall
rcrl
je
jecxz
repnz
push
mov
lret
dec
outsb
xor
xor
xchg
sbb
pop
dec
push
jmp
insb
mov
popa
mov
sbbl
cmp
notl
xchg
pusha
push
adc
and
push
es
mov
or
or
cmpsb
lret
jmp
fstpl
movsl
in
inc
cs
shlb
fs
out
add
jge
pop
sbb
ret
push
int
fnstenv
ss
mov
pushf
movsb
sbb
inc
ja
test
cld
cld
sbb
cs
mov
lods
jle
add
fstps
sub
sub
imul
lahf
mov
pop
push
ret
movsl
inc
nop
leave
in
or
push
cmpsl
or
pop
and
push
mov
mov
xchg
or
in
test
fwait
jecxz
pop
xor
and
imul
daa
rcr
and
dec
jne
pop
mov
or
dec
in
ret
je
imul
pop
outsl
sbbl
jno
dec
lahf
fimuls
outsl
ljmp
pop
cmp
pop
and
scas
push
pop
mov
mov
icebp
popa
popf
or
adc
mov
enter
jbe
cmpsl
cmp
xchg
push
aas
jno
pop
loopne
or
negb
les
sbb
xchg
cmc
test
pop
push
pop
gs
xchg
or
sbbb
fisubrl
push
shl
js
fsubl
add
stc
and
push
inc
lods
mov
fnstenv
in
mov
shr
push
sub
push
add
and
in
test
sbb
mov
fmul
jmp
pop
sub
movsb
jo
dec
cmpb
xchg
idiv
xchg
data16
mov
cs
arpl
jl
into
imul
gs
jae
lret
nop
imul
loopne
rorl
cmpl
pop
mov
pop
and
into
xor
pop
cmp
dec
inc
pop
jmp
ret
stos
andl
jle
flds
ja
ret
js
mov
fsubl
and
pop
out
and
lahf
in
xchg
int
out
nop
push
jns
mov
daa
addr16
lahf
nop
adc
dec
fisubrl
sub
or
jo
mov
pop
xchg
cmc
inc
push
test
or
sbb
lds
pop
push
adc
add
jecxz
clc
lea
ja
cmp
jge
lods
repz
push
iret
xchg
data16
lods
stos
incb
mov
pop
push
pop
lods
xchg
mov
pop
mov
mov
cs
popf
cmp
stos
push
push
xchg
sub
sub
rcl
cltd
dec
push
sbb
in
aas
stos
inc
rcrl
jns
repz
jo
sbb
fwait
das
jl
adc
pop
dec
ret
bnd
pusha
repz
mov
lahf
out
mov
mov
roll
jae
mov
insl
add
jge
cli
push
lods
jns
jmp
add
std
xorl
or
data16
mov
inc
ja
mov
fcmovnu
int
pop
adc
add
push
jbe
aad
cli
ficompl
pfcmpeq
mov
push
loop
jb
stos
sub
and
dec
mov
addb
pop
nop
loope
fimuls
mov
jl
movsb
sub
pusha
pop
jge
sub
sbb
inc
scas
mov
test
cmp
fcomps
or
adc
jbe
cwtl
pop
ret
sub
sub
out
lods
mov
leave
jg
dec
lret
push
push
cld
aad
jmp
out
popl
xor
xchg
loope
pop
xlat
or
pop
xlat
jnp
mov
add
popa
shr
popf
stc
cli
xchg
pop
mov
xor
and
loope
jge
inc
sarb
lock
xorl
lods
fadd
in
addl
pop
pusha
inc
inc
daa
xchg
aaa
jl
mov
es
stos
or
out
scas
clc
mov
mov
push
push
add
je
mov
out
sbb
push
aaa
or
sbb
lds
adc
mov
dec
test
and
sbb
loope
push
xor
push
sbb
subl
sbb
lods
movsb
repz
roll
and
jl
sbb
lods
pop
pop
test
movsl
dec
inc
jns
add
add
loope
shrb
jg
push
adc
xor
mov
mov
fisttpl
stc
movups
sbb
push
rcll
pop
test
jno
jl
faddl
test
gs
mov
xchg
pusha
in
xchg
in
push
mov
xchg
mov
xor
and
jge
fcompl
push
movsl
mov
sbb
scas
aad
ja
push
dec
test
push
out
sub
push
push
push
lock
mov
add
test
xchg
insb
and
addr16
and
scas
dec
test
cwtl
sbb
shr
sbb
test
dec
stos
sbb
mov
nop
pusha
add
addr16
pop
cwtl
dec
mov
or
out
add
fimull
pop
xor
push
call
sub
xchg
pop
mov
jecxz
mov
decb
fnclex
test
push
and
xchg
mov
cmp
add
xor
hlt
dec
test
cmp
and
hlt
adc
sbb
or
add
cmc
sbb
aas
or
mov
mov
addr16
dec
loope
pop
mov
arpl
pop
stc
dec
xor
ds
xor
sbbl
in
rclb
fldl
jo
xor
mov
cmp
lea
dec
fisubl
inc
fimuls
es
test
add
shll
xor
int3
inc
ds
sbb
aas
push
test
lods
arpl
lret
shll
adc
sub
jmp
xor
int
icebp
inc
std
call
rol
scas
add
fcoms
aad
stc
out
daa
ja
and
push
sbb
loope
mov
push
testb
ret
xchg
ret
and
cld
mov
cmp
loopne
fstpt
pop
adc
loop
and
jo
mov
scas
test
and
lea
sub
or
and
cs
lods
loopne
xchg
jbe
add
and
in
jmp
js
cli
cmpl
or
dec
fucomi
lret
ss
inc
mov
xor
test
lahf
enter
mov
subb
mov
out
mov
fildl
push
aaa
dec
mov
adcb
add
sbb
in
out
push
test
mov
sbb
in
test
dec
lret
ja,pn
push
test
mov
pop
test
jmp
ror
stc
icebp
pop
std
inc
sbb
or
mov
xchg
ret
and
inc
idiv
cmp
jmp
sub
mov
jmp
push
and
pusha
or
add
and
sbb
pop
sbb
movsl
pusha
mov
jno
pop
sbb
jns
mov
clc
ljmp
stc
repnz
or
cwtl
ret
cld
out
sub
mov
jns
push
fdivrl
in
mov
aam
je
cmp
andl
iret
sub
pop
scas
pop
xchg
push
add
test
mov
pop
inc
pop
data16
mov
mov
inc
inc
out
scas
pop
lods
iret
dec
clc
in
stos
imul
xor
and
xchg
pop
cmp
sbb
xchg
loope
das
xor
sub
out
xor
rorb
cli
xor
in
repz
jb
adc
mov
dec
jmp
out
mov
and
inc
imul
sbb
ret
movsl
sub
fs
xchg
int3
lods
loop
pop
pop
dec
inc
cmovbe
lret
out
mov
add
fsubrl
mov
shlb
xor
jne
fisubrs
xchg
mov
cs
shll
pusha
sbb
push
frstor
movsb
out
out
arpl
ret
shll
cmp
hlt
popf
sahf
xor
add
lea
mov
and
xor
addr16
push
sarb
int
pop
ss
ret
movsl
inc
repz
enter
and
lds
sbbb
jmp
fiadds
mul
subb
fbstp
or
cmp
xchg
mov
inc
cmp
push
or
xchg
inc
add
jg
xor
mov
aad
jne
jo
loopne
mov
and
add
pushl
sbb
inc
mov
in
xchg
pop
mov
cmpb
and
jmp
gs
push
test
fidivrs
test
dec
gs
push
cmp
adc
mov
scas
pop
mov
pop
xor
cmpsb
sti
push
mov
sub
inc
icebp
je
fcomp
fdivrl
repnz
push
test
fs
cmp
cmp
cmp
dec
cli
mov
es
xorl
jle
add
icebp
pop
add
cmp
gs
orl
mov
ja
lret
sub
pop
mov
loopne
add
lods
pop
cli
xchg
mov
add
int3
into
xor
fcmove
enter
hlt
cmpb
xor
mov
shlb
pop
xchg
aam
mov
les
or
gs
add
pop
mov
mov
jg
pop
loopne
jno
lds
pop
int
cmpsb
cs
sub
jnp
pop
ret
pop
and
dec
xchg
nop
cltd
stc
in
sub
mov
pop
push
shll
and
jl
xchg
sbb
repnz
les
inc
xchg
cmp
push
dec
jg
aaa
lea
dec
dec
adc
clc
fadd
push
out
ja
movsl
xchg
dec
lds
arpl
shll
fstl
out
mov
sbb
loop
mov
adc
lahf
movsb
ret
xlat
mov
rolb
ss
adc
jmp
ret
lar
stc
add
jbe
pop
and
pop
jecxz
mov
push
push
outsb
sarl
sbb
mov
or
or
int3
test
jo
jecxz
mov
sbb
test
mov
lret
pop
pushf
pop
mov
cmp
insb
pop
out
sub
mov
or
cwtl
sbb
je
fsubrl
dec
test
out
or
add
leave
aaa
lods
daa
push
push
lea
jnp
cwtl
hlt
sbb
mov
mov
add
xchg
nop
ret
lret
scas
push
ret
pusha
push
pushf
sahf
dec
add
inc
mov
add
dec
test
enter
cmp
jg
push
fs
fsubs
jbe
ds
adc
pop
dec
sti
fsubrl
jb
fs
icebp
aaa
sub
cwtl
sarb
jns
mov
iret
arpl
and
adc
test
fld
addr16
rorb
and
adc
lcall
mov
mov
xchg
in
test
cltd
out
sub
inc
in
out
xchg
das
push
movsb
movsl
push
cmpb
or
iret
ficomps
or
or
pop
pop
mov
xchg
mov
xor
pop
in
rolb
pop
icebp
add
aas
out
dec
ljmp
mov
packuswb
jge
jno
leave
movsl
pushf
subl
xchg
das
jl
bound
push
mov
dec
int
scas
jg
lahf
cmp
or
mov
es
sbb
push
jo
gs
jl
push
sub
stos
pusha
push
cmp
cmpsb
pushf
dec
dec
pop
push
gs
or
nop
cltd
mov
inc
mov
movsl
fnstenv
rorl
cmpb
bnd
in
daa
mov
mov
or
pop
mov
dec
pusha
sub
and
test
fiadds
fmull
mov
pop
xor
mov
jb
stc
pop
stos
mov
into
xchg
pop
and
sub
test
inc
lea
mov
mov
inc
cmp
xor
out
addr16
test
icebp
pop
sbb
sbb
testb
jg
mov
enter
jp
mov
adc
sbb
js
cmp
das
cmp
test
roll
xchg
sub
aas
dec
cmp
xor
dec
sarb
pop
in
repz
data16
mov
mov
adc
xor
roll
push
cmp
jle
cmp
test
orl
mov
dec
cld
aaa
pusha
in
dec
sub
mov
dec
movsb
xlat
scas
push
jle
insb
gs
push
mov
cmp
sub
and
testb
or
in
mov
mov
xchg
xchg
mov
xchg
pop
inc
push
mov
mov
shlb
cmc
dec
andb
xor
xor
adc
int3
cmp
popa
js
sar
pop
insb
and
das
cli
sbb
out
test
lret
jb
ljmp
adc
push
push
pop
pop
jg
loop
popa
sbb
cmp
lahf
or
js
mov
mov
bound
nop
fneni(8087
in
pop
clc
xor
push
outsl
jp
pop
mov
push
cld
or
incl
fs
xchg
lods
mov
mov
pop
lock
push
mov
jl
xchg
rcrb
pop
pop
xor
imul
push
mov
aas
pop
dec
push
lods
sbb
xlat
xchg
imul
mov
pop
lcall
and
subb
mov
in
pop
jae
dec
pop
xchg
in
lods
add
cld
pusha
imul
push
fistl
dec
repnz
mov
cwtl
dec
lahf
sbb
jp
bound
clc
fidivrl
cmp
push
ret
sbb
push
dec
rol
push
shr
xchg
repnz
mov
mov
sbb
mov
ja
inc
insl
pop
cltd
repz
roll
sub
aas
pushl
cmp
add
or
cmpb
cmc
movsl
sarb
add
rep
stos
insb
cmp
insl
roll
xchg
sbb
mov
shr
add
out
fidivrl
pop
test
dec
stos
fisubl
jmp
inc
adc
int
dec
cltd
imulb
in
test
daa
clc
movl
pop
lcall
lods
jae
repz
adc
cmp
orb
repnz
mov
mov
sbb
cmp
and
and
hlt
sti
in
ficomps
aas
xchg
in
jae
dec
mov
aaa
xor
scas
imul
xor
ficomps
jne
into
push
mov
mov
pushf
icebp
adc
movsb
mov
mov
enter
fldl
cmp
adc
les
pusha
mov
movsb
mov
push
inc
stos
push
pusha
popa
shrb
xor
mov
sub
push
int
adcb
shrl
lahf
call
les
rcl
dec
enter
fs
rcr
xor
enter
sahf
mov
mov
add
repz
test
scas
lock
sbb
mov
mov
pusha
add
into
adc
pop
mov
ljmp
inc
add
jae
add
js
cmp
mov
push
aaa
jno
cwtl
and
inc
cwtl
inc
cltd
adc
xorl
ficomps
jl
hlt
rorl
dec
cli
pop
push
mov
sub
repnz
xor
or
clc
adc
mov
push
in
mov
pop
pop
pop
stc
xchg
fisubs
jo
loopne
and
imul
fstpt
sbb
adc
hlt
movsb
in
cmp
dec
and
adc
sbb
xchg
fcmovbe
sbb
jne
in
loop
movsl
loope
sub
mov
std
std
mov
inc
ljmp
add
xchg
push
cld
add
cmpsl
xor
mov
add
jp
jecxz
or
xor
cmp
ljmp
sub
out
bound
leave
call
cmpsb
cmp
mov
and
xor
jae
add
adc
cs
sub
stos
fdivrl
sarb
dec
addr16
icebp
fldenv
lock
add
mov
adc
icebp
jl
adc
aaa
jp
mov
ret
rcr
jge
jg
bound
imul
jnp
add
mov
pop
loop
loopne
push
pushl
or
lods
dec
cmpsl
fdivrl
test
scas
inc
loopne
fmull
mov
outsl
repz
jae
xchg
cld
aaa
xlat
das
adc
push
ds
adc
test
cmp
mov
inc
sub
js
xor
mov
into
rolb
jns
push
aas
sbb
outsl
push
outsb
xchg
rolb
pop
and
insl
jle
fcoml
test
mov
sub
ds
int3
dec
pop
into
lahf
mov
or
pop
inc
mov
fsub
and
xchg
ficomps
push
xor
dec
jle
xor
xchg
push
jns
sbb
pop
aad
and
add
xchg
sbb
pop
bswap
sub
mov
mov
icebp
testb
in
add
jecxz
dec
add
ror
out
jge
pushl
mov
cs
sub
insb
mov
dec
insl
inc
mov
insl
xor
cmp
test
pop
rolb
outsb
sbb
xchg
add
jb
inc
rcl
mov
push
pop
and
sub
pop
cwtl
mov
roll
loope
scas
cmp
or
rcrb
mov
cmp
out
popa
rol
out
mov
add
xchg
push
mov
iret
scas
pop
lock
add
push
pop
fucom
in
pop
inc
lcall
loopne
xchg
inc
cmp
dec
divl
push
fcmovb
js
cmp
xchg
rcll
rcrb
adc
push
inc
mov
mov
xchg
hlt
mov
add
ljmp
ja
or
or
popf
mov
lds
lods
sbb
add
cmp
and
pop
jl
mov
sub
sbb
xor
mov
push
je
out
mov
test
stos
and
pop
pop
and
out
cld
ret
xchg
and
xor
outsb
xor
inc
pop
xchg
lds
sbb
ret
adc
ret
in
mov
inc
adc
mov
and
imul
jp
xor
push
pop
mov
pop
mov
push
repnz
mov
in
cmpsb
xchg
int
loope
js
jno
pop
lret
out
andb
xchg
push
adc
outsl
aam
sbb
fcmovne
fs
adc
inc
stos
push
test
insb
cmp
int3
addb
add
imul
and
xchg
push
out
push
arpl
mov
or
push
loop
sub
and
mov
xor
mov
lret
pop
mov
shrl
cli
mov
mov
inc
lahf
incl
shr
push
mov
inc
int3
inc
inc
jnp
lret
arpl
icebp
movsl
fs
xorb
push
push
mov
or
stc
loop
xchg
aas
mov
ljmp
cmpl
loope
shrl
insl
fs
addr16
cwtl
xchg
cmpsl
jle
movb
icebp
xor
test
scas
adc
test
out
loopne
sbb
int
jl
sub
or
std
in
roll
mov
aad
aam
jp
add
adcb
mov
pop
or
dec
loopne
push
or
xchg
and
lods
dec
lahf
repz
or
cmp
dec
mov
negb
mov
push
pusha
push
jl
cmpsb
push
loop
cs
out
rolb
add
stc
pusha
mov
inc
aaa
inc
sub
aas
mov
imul
fstps
mov
mov
test
push
prefetch
adc
loopne
mov
dec
or
andb
add
inc
pop
sbb
jbe
jp
jle
aad
mov
fwait
pop
push
pop
mov
xchg
xorl
pop
cmp
sbb
inc
dec
hlt
mov
aaa
loopne
pop
les
pop
cmc
sbb
push
cmpsl
fisubrl
addl
iret
inc
mov
roll
paddusw
or
push
or
mov
rol
xchg
pushf
add
mov
stc
adc
ds
test
pop
in
sub
test
lods
sbb
scas
fildl
add
or
jo
pop
arpl
or
cld
sbb
js
mov
jae
les
cmp
lret
mov
in
xchg
sbb
inc
or
les
sbbl
inc
cmp
push
out
dec
testl
jmp
inc
outsl
out
int
and
ret
mov
mov
roll
add
jecxz
imul
adc
pop
clc
int
jle
orl
js
xchg
in
lods
loope
out
js
push
repz
ficomps
cmp
adc
push
ret
iret
loopne
jne
inc
jae
jne
mov
mov
inc
xor
jmp
icebp
jmp
and
jge
dec
xor
out
rcrl
pop
imul
dec
mov
inc
sbb
fnstsw
dec
clc
fidivrs
pop
push
add
fsubr
mov
push
lahf
dec
outsb
dec
popf
std
cmp
pop
and
cs
ja
adc
gs
jge
fldl
push
lahf
and
sbb
in
aas
sbb
add
jne
add
shrl
jmp
les
out
mov
std
push
test
or
push
in
add
in
cltd
mov
adc
or
pop
add
mov
add
and
add
cwtl
push
mov
sbb
jecxz
and
testl
test
push
inc
mov
ret
cmp
adc
mov
jae
insl
cmp
fnstsw
push
add
push
jbe
scas
add
mov
inc
push
rcrb
incb
rorb
test
roll
fldpi
sub
repnz
sub
rolb
mov
jne
mov
dec
mov
push
pop
in
outsl
cli
or
imul
xchg
in
lock
and
sbb
and
sbb
loopne
mov
rol
iret
nop
jge
jecxz
xchg
cld
inc
cltd
cmp
push
jge
dec
dec
lock
mov
test
mov
leave
cmovne
push
pushf
mov
mov
add
xor
jmp
mov
cli
mov
sub
stos
scas
jle
push
loopne
inc
sbb
and
inc
outsl
jbe
shlb
inc
push
add
aad
cmp
jb
mov
sub
sub
nop
je
inc
in
and
lods
popa
jae
cmp
jbe
jo
inc
mov
jg
movsb
push
cld
xchg
std
add
je
sub
scas
outsl
sub
pusha
pop
loopne
and
or
mov
popa
aam
jle
cmpsl
mov
stc
jg
mov
daa
cmc
adc
jno
andl
jle
push
pop
sbb
ds
xchg
jnp
adc
xlat
aam
cmp
jmp
pushw
pop
cltd
add
xchg
dec
inc
test
add
sub
mov
ret
jp
stc
xorps
add
sarb
idivl
dec
pushf
in
rclb
mov
inc
add
inc
stc
mov
fwait
cld
pop
push
sti
dec
cmpsl
shlb
das
mov
inc
lea
das
mov
or
and
xchg
sbb
gs
or
adc
sarb
sbb
lods
jle
add
lret
push
push
or
push
and
sbb
xchg
inc
pop
test
fsubl
subb
mov
sbb
jae
stos
cld
scas
daa
and
mov
shrl
adc
clc
btc
mov
into
and
les
lds
push
flds
repnz
in
lods
stos
mov
sbb
outsb
lods
push
xor
mov
mov
xchg
cmpsb
outsb
pop
lret
xor
aas
push
in
cmp
pop
test
add
scas
inc
xchg
xchg
add
and
fwait
sub
push
adc
cmpl
movsl
inc
sahf
jne
cmp
mov
imul
test
inc
dec
or
add
test
stos
jno
pop
repz
mov
xchg
daa
paddd
cwtl
adc
in
pop
add
xchg
outsl
stos
xlat
fiaddl
inc
xor
fcmovne
mov
out
popf
mov
fdiv
in
in
mov
insl
mov
add
popa
xchg
pop
pop
in
fwait
sbb
sbb
pop
xchg
aad
jle
sub
gs
sti
ret
jle
test
add
in
maskmovq
negl
cmc
cwtl
dec
lret
jne
out
jg
dec
pop
inc
cmc
fmulp
lods
sub
icebp
push
mov
arpl
sub
mov
mov
jbe
push
xchg
mov
cs
addr16
stc
or
mov
xchg
mov
repnz
mov
cmpb
outsb
out
mov
loopne
pop
inc
das
xor
fldenv
cmp
out
cli
pop
popa
aam
inc
movsl
shll
inc
fidivrl
jno
jecxz
ss
dec
enter
imul
xor
je
mov
xor
mov
repnz
fsubrl
or
push
sarb
cld
or
mov
lcall
mov
push
sub
clc
mov
hlt
jle
pushf
mov
inc
in
sbb
dec
ds
and
cmp
jp
loopne
jecxz
gs
jmp
nop
push
dec
mov
sub
mov
outsb
jg
jne
nop
push
call
aaa
push
icebp
cli
imul
loopne
jge
ficomps
fisttpl
aaa
mov
add
lock
iret
push
or
shrb
inc
pop
add
jne
jp
in
jle
inc
mov
insl
leave
cld
add
push
imul
adc
inc
fsubrp
ljmp
mov
daa
pop
enter
out
and
jns
push
cmp
out
movsb
addr16
pop
aam
cmpsl
iret
jle
lds
out
mov
ljmp
adc
and
and
pop
dec
in
or
dec
pop
jo
mov
lcall
cld
cli
sub
adc
mov
mov
fcoml
or
ljmp
or
or
addl
inc
shl
ds
sbb
dec
pushf
lret
ret
sub
inc
xor
es
jno
pop
jo
xchg
rcrl
cld
data16
sbb
mov
adc
jae
mov
arpl
fs
mov
mov
pop
in
call
outsb
ss
adc
out
ds
sub
lcall
daa
xlat
out
jno
repz
push
pop
jns
pop
imul
ror
repnz
sbb
and
decl
adc
sbb
sub
std
add
insl
or
test
aaa
mov
les
lret
push
or
push
push
jge
pop
mov
jge
or
sub
je
sbbl
xchg
xchg
pusha
addr16
push
out
dec
ds
adc
std
leave
pop
jge
cmpsl
out
xlat
add
imul
and
fisttpl
lahf
dec
scas
jnp
sbbb
push
sub
mov
lods
xor
jge
sub
push
dec
shrb
jns
outsb
cmc
or
lret
mov
cs
outsb
pop
inc
hlt
sarb
jle
cmpsb
push
lock
push
imul
inc
outsb
xchg
pop
cmpsb
or
pop
addr16
stos
test
in
inc
je
xchg
test
pop
ret
mov
mov
fiadds
add
out
add
arpl
mov
js
lahf
cmp
sub
mov
ret
rorl
mov
ficoms
add
fists
es
jge
jmp
jne
inc
iret
push
jne
jmp
out
out
cmp
sbb
filds
dec
mov
mov
js
or
add
stos
push
jmp
jle
jecxz
and
lds
in
push
movsl
in
push
in
outsl
mull
sbb
jmp
sbb
inc
and
mov
add
shll
xchg
sti
sbb
inc
or
fs
and
cmc
dec
mov
iret
in
mov
pop
arpl
jge
mov
mov
fcomps
das
adc
into
xor
xchg
sub
xchg
adc
sub
adc
fnsetpm(287
outsl
mov
pop
stos
or
scas
or
push
mov
pop
ret
jl
push
enter
mov
lds
mov
mov
data16
push
sbb
sbb
hlt
sub
repz
xchg
lods
mov
and
add
test
shlb
mov
movsb
in
pop
in
adc
or
xchg
or
pop
xchg
and
pop
pushf
movl
mov
mov
pop
pop
dec
push
mov
insl
push
and
movsl
cmp
arpl
adc
mov
mov
test
add
stos
stc
sub
cmp
push
xor
cmpb
inc
and
hlt
sbb
mov
js
and
push
bound
xchg
stc
xchg
stos
lods
sub
jae
jne
inc
scas
mov
mov
loopne
jae
xlat
icebp
jnp
inc
mov
sbb
and
mov
pop
jb
mov
ret
and
adc
sbb
sub
in
lods
push
test
cwtl
shl
push
jecxz
mov
xchg
pop
cmpsl
mov
sarb
iret
fs
sbb
pop
fiadds
cmp
mov
or
pop
test
sbb
mov
in
jnp
sbb
push
test
pop
lods
jmp
mov
sbb
aas
adc
mov
push
ljmp
stos
cmp
stos
movsl
push
pop
loopne
pop
xchg
ret
fsts
push
cmc
sub
test
or
mov
test
dec
cli
jge
add
push
adc
mov
cli
push
and
popf
testb
lds
add
mov
sahf
add
pop
movsb
dec
lock
out
pop
xchg
call
std
cld
in
push
sahf
and
repnz
sbb
xlat
or
shlb
in
fwait
mov
xor
fists
pop
or
inc
out
lods
cld
out
xor
pop
cmp
jns
sbb
xlat
in
addr16
or
mov
sub
test
inc
lods
lods
enter
rclb
dec
out
cs
leave
mov
pushf
lods
sbb
jecxz
push
in
sbb
lret
jo
and
sbb
pop
mov
sarl
xor
xchg
loop
test
xor
pop
pop
mov
fdivr
clc
in
pop
sahf
dec
cmp
pop
jle
xchg
add
or
lcall
sub
nop
shrl
mov
xor
cwtl
les
cmp
mov
lods
or
subl
xchg
subb
push
gs
dec
push
roll
in
negb
push
cmp
ss
sbb
push
mov
mov
mov
roll
stos
mov
inc
xor
lahf
daa
loope
mov
inc
mov
push
cmp
fwait
into
and
adc
mov
jecxz
dec
sti
and
sbb
rcrb
repz
std
test
shr
cli
shll
sub
pushf
ljmp
repnz
arpl
imul
xor
mov
adc
out
js
pop
or
add
mov
fstps
clc
cwtl
mov
shrl
sub
lock
sahf
subb
mov
ja
sbb
sub
sarl
jo
mov
in
repz
insb
call
into
in
js
pop
subb
int
shl
in
jb
les
sahf
fs
pop
call
in
sbb
mov
add
mov
dec
mov
pop
imul
pop
sub
cmp
fmul
jle
out
push
daa
dec
cwtl
test
les
mov
push
jb
pop
lahf
idivb
mov
inc
rorl
pusha
inc
cmp
xchg
xchg
dec
hlt
add
fistl
mov
popf
dec
adc
std
daa
fdivl
cwtl
cmc
add
inc
sarl
shll
fsubs
in
adc
fcmovnu
adc
flds
xchg
shll
mov
dec
mov
and
push
or
dec
lcall
cli
add
loop
orb
xlat
mov
jg
sbb
call
mov
jae
movsl
shlb
push
xor
xchg
xchg
xchg
outsl
test
popf
lods
mov
xor
stc
add
mov
xchg
add
jb
fnsave
pop
leave
shl
xchg
test
add
mov
leave
sbb
fimull
or
je
cli
int3
sbb
jbe
xchg
mov
adc
mov
cld
aas
sahf
or
sub
das
jb
fistpl
inc
add
xchg
dec
addr16
imul
push
sti
xchg
faddl
cli
fmull
cmp
dec
scas
pop
cmpsl
and
incl
and
dec
ja
ljmp
push
push
in
insl
sub
xor
xchg
dec
mov
stos
fdiv
popf
ret
insl
mov
jecxz
push
movsl
stos
sbb
sbb
outsb
cwtl
or
mov
or
loopne
inc
das
repnz
lret
inc
mov
scas
push
and
test
imul
dec
fwait
adc
insb
cli
test
fmulp
subb
sub
pushf
dec
add
mov
cltd
xchg
or
pop
sbb
cmp
mov
in
aam
loopne
dec
stos
orl
test
or
sub
stc
pop
pop
fsubl
and
cmc
and
push
shl
popa
or
push
mov
xor
cmp
mov
faddp
push
pop
sbb
lods
xchg
inc
cli
sbb
xor
dec
pop
mov
cmpsl
outsb
mov
int3
jae
lods
add
jecxz
and
jb
mov
push
rorb
jmp
daa
mov
cmp
sub
in
pop
sbb
test
mov
push
addr16
push
stos
mov
inc
jge
jo
pop
mov
xchg
nop
inc
fucomi
push
push
or
out
xchg
out
cli
dec
jnp
mov
xor
dec
addb
test
fists
cmpsl
stos
and
xchg
leave
mov
mov
xchg
sahf
cli
test
add
int3
sahf
mov
bound
pop
notl
test
jno
xor
pop
gs
lret
sbbl
idivl
mov
push
outsl
movsl
mov
test
sub
add
sub
enter
ret
sbb
popa
daa
mov
jne
xchg
sbb
add
mov
fistpll
in
sub
loop
in
pop
dec
cmp
fstpl
cmpsb
adc
into
pushf
jg
and
dec
push
and
cs
jnp
adc
jge
dec
lods
popl
cmp
mov
imul
pop
cmp
incb
aas
testb
mov
mov
ror
jl
sarb
pop
out
outsl
inc
insb
les
aas
pop
add
xor
out
mov
aas
xchg
push
and
jae
jle
pusha
adc
nop
sub
fidivrs
dec
adc
stc
stos
ljmp
cmp
lods
cmp
sbb
mov
add
pusha
stos
dec
cltd
pop
xchg
scas
scas
jmp
imul
inc
icebp
sub
or
bound
fld
in
xchg
mov
addr16
push
dec
nop
hlt
push
icebp
enter
pop
rcll
push
push
lret
pop
lret
sub
push
dec
sub
mov
repz
std
sub
cltd
jbe
sub
iret
lret
sub
aas
and
xchg
jle
add
sub
push
insl
push
out
cmpl
dec
shlb
js
dec
push
push
xor
add
pushl
loope
stos
stos
cmp
cmp
sbb
pop
mov
nop
fstps
xor
in
cmpsl
aas
jmp
sub
pop
jg
in
sbb
sub
popa
lods
inc
loope
sbb
xchg
cli
and
xor
jl
ficoms
test
in
xor
movsb
mov
jno
mov
mov
into
scas
adc
inc
test
mov
mov
cmp
jns
mov
mov
inc
bound
sbb
adc
push
lds
cs
gs
addl
fidivrs
lret
cmp
sub
cmpsb
mov
out
mov
jnp
jnp
push
add
in
popa
mov
sub
js
xor
adc
fmul
negl
fadds
scas
cli
xor
int
test
dec
inc
mov
sub
shl
inc
sub
test
inc
cs
sub
xchg
jne
or
dec
xor
push
xchg
ljmp
inc
push
fidivrs
add
pop
fisttps
xchg
in
xchg
das
sub
cmc
cli
shr
mov
and
sub
cmpsb
jl
popf
mov
push
push
push
xor
shll
in
xor
jge
jns
mov
hlt
xchg
xchg
jge
sub
mov
xchg
mov
pushf
pop
aaa
cmp
bound
les
out
data16
sbb
ret
cmp
or
mov
enter
xchg
clc
adc
jno
adc
xchg
testl
lods
jae
sub
xchg
ja
ljmp
add
push
xchg
xor
addr16
scas
pop
and
add
push
sarb
dec
dec
xchg
mov
in
pop
add
push
or
inc
dec
xor
push
cld
lret
js
pop
and
call
jmp
je
push
test
clc
pop
aad
shrb
add
xor
jmp
daa
idivb
jb
int3
clc
cmp
dec
pop
jb
lods
xchg
inc
inc
popf
test
test
xchg
shll
mov
enter
addr16
adc
bswap
pop
dec
pop
mov
push
in
jecxz
sub
rorl
notl
and
rcrb
pop
cmp
dec
jb
pop
pop
sub
test
inc
test
adc
fstp
cmc
and
mov
mov
mov
loop
xchg
scas
mov
mov
push
scas
cmp
xchg
mov
pop
cmpsb
dec
loop
xor
test
jns
push
xor
or
xlat
push
push
adc
ss
cmp
gs
push
xchg
xchg
pop
test
stc
pop
lods
scas
pop
mov
lcall
xchg
hlt
mov
push
test
test
ss
push
lahf
mov
xor
mov
lock
or
inc
mov
aas
adc
dec
rclb
push
aas
push
mov
out
pop
es
push
pop
jnp
jnp
fs
or
adc
sbbl
inc
pop
jne
xchg
out
out
insb
mov
js
jecxz
test
cs
icebp
lret
sbb
and
mov
push
mov
or
jbe
sub
lods
jg
movsb
cs
mov
loope
and
fistps
adc
in
std
fnstsw
std
inc
cmp
mov
jns
mov
pop
adc
ljmp
cmpsl
xchg
out
sub
into
mov
sti
mov
lcall
mov
cltd
testl
mov
sbb
out
mov
dec
sbb
mov
xchg
pop
pop
pop
mov
dec
mov
clc
out
and
push
lock
lahf
fcos
mov
pop
fidivl
sbb
das
ds
xchg
pop
mov
cmp
cltd
fs
pusha
in
push
mov
xlat
sbb
test
loope
dec
mov
push
mov
mov
or
dec
in
jnp
pop
outsb
adc
push
mov
push
mov
dec
cltd
fnstsw
or
test
sbb
and
xchg
loopne
and
jno
inc
xor
adc
in
inc
in
mov
sbb
sbb
mov
xor
dec
ftst
add
lods
jae
xor
pop
mov
sbb
popa
add
sbb
and
jp
add
out
out
mov
rorl
mov
sbbb
pop
xor
call
inc
inc
xchg
jge
dec
sub
inc
fisubrs
push
cli
stc
arpl
rcrb
adc
push
sbb
lahf
pop
adc
jge
cmpsb
out
dec
pushf
sbb
cmp
adc
sub
jnp
pmaxsw
in
addb
add
or
addr16
insb
fs
pop
mov
push
insb
mov
adc
cmp
daa
test
pop
jnp
das
push
popf
cltd
hlt
xor
mov
inc
fstpl
inc
ret
cld
arpl
shlb
cmp
sahf
mov
popa
pop
dec
cmp
add
mov
mov
inc
movsb
inc
jns
inc
adc
jae
sbb
dec
pop
jns
movsl
jmp
cmp
sbb
dec
fwait
testb
inc
lods
pop
mov
jle
enter
into
add
out
lods
add
and
sub
testl
cmpsl
sub
sbb
or
dec
loopne
popf
jb
cmpsl
lods
rorb
push
jl
inc
hlt
xchg
push
jno
lock
or
enter
int3
cmp
or
sub
inc
outsb
jmp
and
sbb
fsubl
das
stos
add
jnp
imulb
fwait
test
dec
cmp
and
dec
dec
call
dec
jb
mov
or
and
mov
dec
and
and
rol
adc
or
js
xlat
pushf
add
pop
inc
adc
ja
pusha
push
lods
mov
inc
jp
in
data16
cmp
shl
and
mov
cmp
orb
push
and
in
or
ss
cmp
push
adc
pop
lods
mov
icebp
ret
repnz
pop
push
mov
sbb
out
or
in
movl
dec
lret
dec
inc
mov
mov
xor
clc
cmp
adc
das
mov
scas
inc
mov
sub
lea
xchg
cmpsl
lock
in
stc
adc
mov
test
cmpsb
inc
push
sub
push
ror
mov
fsubs
mov
out
mov
pusha
or
dec
cwtl
lock
in
ja
in
les
inc
mov
ret
popf
mov
adc
scas
dec
jae
ja
jp
and
mov
mov
fsubl
sub
sbb
cmpsl
testb
aam
mull
jnp
jbe
addr16
nop
idivl
inc
shlb
test
xchg
fwait
xor
jne
mov
push
add
mov
int3
daa
sub
test
imul
mov
dec
pushl
insl
dec
xchg
and
popf
mov
xor
outsl
sub
sbb
mov
insb
push
lods
shr
and
scas
jecxz
dec
and
shrb
testl
ljmp
sub
or
das
xlat
mov
movsb
loop
add
popf
sti
add
inc
adc
pop
jnp
adc
cmp
fidivrs
fcmovnb
into
out
mov
mov
lds
and
xor
imul
jmp
add
mov
mov
mov
pop
jbe
jp
test
inc
mov
xchg
in
aas
or
test
cwtl
ljmp
call
adc
iret
push
inc
xor
out
dec
cmp
ja
xchg
inc
cli
out
mov
insb
push
aad
bswap
into
cmp
fnsave
cmp
xor
pop
insl
fdivrl
fidivrs
or
add
pop
in
push
and
push
adc
xor
add
jns
popa
pop
arpl
and
dec
jne
fcmovne
sbb
add
dec
sub
cmpsb
pop
cltd
int
in
and
pop
pop
cld
cmpsb
jne
inc
fwait
sub
aas
test
pushf
jne
js
cmp
stc
ljmp
dec
ljmp
xchg
test
or
rcrl
loope
adc
in
lds
dec
inc
and
mov
inc
bound
ljmp
dec
clc
div
aaa
xchg
or
inc
push
mov
mov
aas
adc
jmp
fbstp
aad
sti
push
leave
mov
in
jecxz
pop
mov
mov
cltd
push
repz
dec
testl
xor
mov
jge
or
mov
mov
rcll
sti
das
or
fstpt
pop
sahf
les
jp
or
jp
imul
xor
or
stc
out
and
shrb
mov
dec
aas
jecxz
xchg
mov
adc
adc
clc
aam
xchg
cmc
sarl
es
xorl
sub
movsl
lods
push
jns
inc
test
arpl
loopne
cmp
fninit
dec
enter
arpl
add
jp
add
jnp
sarb
inc
daa
in
test
out
xchg
clc
loope
cmp
xor
cmp
mov
inc
out
inc
flds
xorl
inc
and
add
add
pusha
or
pop
xor
jl
popf
push
cltd
jne
mov
add
dec
repnz
pop
rol
push
stc
aaa
adcl
sub
mov
add
and
inc
adcl
cs
sbb
bound
movsb
lds
data16
pop
movsb
push
pop
inc
js
cmp
pop
push
repnz
imul
out
add
int
sbb
scas
ficompl
test
mov
dec
inc
jae
out
jmp
mov
in
push
mov
dec
and
xchg
outsl
pushf
negb
pusha
add
mov
cmpsb
and
inc
push
push
adc
les
in
data16
andb
adc
fidivrl
popf
push
das
dec
push
je
pop
fildll
push
and
and
mov
mov
mov
scas
andl
cmp
shl
shll
adc
add
sbb
add
in
dec
mov
lock
rorb
dec
fimull
dec
push
dec
mov
inc
mov
iret
les
sbb
dec
and
int
gs
xor
sub
inc
sub
mov
cmp
mov
mov
cmp
mov
jb
push
xlat
scas
loope
mov
jno
xor
dec
xor
testb
cmp
xor
bound
jne
lods
out
mov
roll
pop
shll
sbb
scas
movsb
ljmp
mov
repz
or
sbb
pushf
aas
jl
ss
bnd
dec
lods
add
roll
call
bound
sub
movsb
in
out
fwait
inc
mov
pop
mov
pop
xchg
notl
xorb
loopne
mov
ret
in
shrb
loopne
sbb
shll
xor
out
and
mov
xchg
call
iret
lcall
cmp
lods
sbb
decb
cwtl
or
cs
in
mov
lods
xchg
xor
and
shr
pop
ds
ret
xor
adc
fst
cmpsl
cmp
xchg
sbb
fnsetpm(287
add
sub
sub
fdivrl
inc
xchg
arpl
imul
lcall
adc
jle
sub
daa
adc
jl
dec
inc
mov
mov
pop
int
xchg
cmp
mov
idivl
pop
push
jnp
add
mov
lods
pusha
inc
frstor
jmp
mov
dec
leave
das
and
pop
sub
push
dec
in
and
sbb
mov
cmp
call
ss
mov
jl
nop
inc
addb
cmp
mov
xchg
in
and
cltd
jne
pop
jg
cmp
or
jge
frstor
and
mov
movsl
sbb
mov
mov
pop
pushf
and
loop
fwait
adc
js
mov
dec
add
xchg
orb
lret
daa
dec
jo
sub
or
enter
aam
add
jne
lods
mov
inc
ret
repz
xor
psubq
pop
lds
cmp
nop
icebp
jl
pop
xchg
xchg
stos
clc
jmp
fiaddl
mov
mov
out
lods
pusha
sub
das
inc
dec
jo
jbe
or
andl
testl
es
cmp
loopne
test
mov
and
pop
ja
mov
subl
dec
sub
ljmp
cs
scas
mov
test
cmp
cli
push
repz
cmp
jb
mov
sbb
or
sbbb
mov
adc
insb
andl
int3
push
imul
pop
dec
dec
sahf
adc
stos
jl
out
sub
lds
aas
cltd
mov
and
sahf
push
jmp
ret
xchg
cltd
mov
ficoml
fstpt
or
scas
push
push
call
lahf
jae
add
pop
xchg
daa
aaa
jb
stos
mov
pop
mov
adc
mov
mov
loopne
ss
push
jae
mov
cmp
xchg
repz
pop
dec
nop
clc
movsb
pop
xchg
pop
or
aad
jg
pop
test
push
adc
jne
stos
les
mov
or
aas
fstl
mov
pop
incb
mov
in
imul
sti
pop
jmp
icebp
push
mov
in
gs
jmp
das
jb
sub
shrb
cmp
push
adc
imul
xlat
and
push
psubusw
push
clc
insl
addr16
dec
sub
and
subb
das
dec
lret
inc
sbb
out
xchg
enter
ret
arpl
mov
xchg
ret
sub
mov
jp
sahf
mov
jne
ret
dec
fsubp
push
fidivrl
dec
imul
imul
pop
sub
xchg
leave
and
mov
mov
popf
push
aad
in
jecxz
push
sbb
cs
xchg
jp
test
push
jo
pop
and
out
inc
and
loopne
pop
fstl
pop
inc
push
dec
push
lret
mov
pop
jg
jbe
and
pop
add
dec
dec
adc
jo
dec
out
imull
pusha
sub
xchg
fcmovnbe
aaa
pop
test
mov
icebp
push
inc
inc
daa
shrb
in
fistpll
out
ret
sbb
and
and
fcoml
xchg
cltd
sbb
test
js
inc
clc
adc
push
adc
test
int
out
lret
and
aaa
pusha
jno
frstor
lahf
pop
adc
pop
push
mov
test
mov
jno
adc
shrl
loopne
call
push
mov
jmp
movsb
pop
dec
int3
lods
mov
rcll
scas
nop
pushf
xorb
and
mov
lret
sarb
hlt
ret
sub
or
mov
or
jne
push
push
sub
test
mov
stos
repz
int
xchg
xchg
push
xor
cmp
popa
fs
add
lods
push
mov
inc
test
pop
loopne
jo
mov
push
mov
or
aam
lods
std
fnsave
or
xchg
clc
inc
sub
fsubr
movsl
in
sahf
push
int
mov
cmp
inc
sbb
lcall
xchg
adc
pop
lahf
xor
xchg
nop
xchg
ds
aam
xchg
mov
loopne
mov
je
cld
xor
or
in
mov
ja
psllq
clc
dec
dec
inc
into
add
fnstenv
mov
mov
adc
jmp
imul
out
in
add
ljmp
dec
pop
cld
adc
cmp
loopne
rcr
out
sub
popa
mov
test
sbb
es
push
pop
xchg
in
cmp
roll
fsubp
ficomps
imul
xlat
jne
adc
cmpsb
or
sbb
pusha
test
adc
test
lea
out
ret
mov
popa
sahf
iret
mov
xchg
sbb
les
nop
pusha
hlt
test
dec
and
stc
lcall
sub
add
mov
inc
insb
les
or
mov
push
add
fcmovb
lods
scas
in
lods
xchg
mov
jbe
gs
lds
out
push
in
fdiv
out
shl
or
orb
adc
pop
push
cltd
cmp
cmp
adc
jo
xor
ret
inc
cmpb
iret
push
ret
shll
mov
sub
add
push
imul
jns
mov
pop
std
fincstp
inc
int3
push
les
xor
lret
test
pop
adc
adc
pop
xchg
pop
pop
xor
call
push
in
pusha
mov
les
andl
subb
arpl
negl
imul
add
pop
pop
jno
pop
cmpsb
je
loop
xor
int
cmp
push
aaa
mov
in
rcrl
push
lods
rcrl
rcll
pop
xchg
mov
add
pusha
cli
aad
jo
ret
orl
in
in
in
test
push
mov
dec
mov
and
ffree
mov
test
jg
cmp
adc
sbb
scas
enter
gs
les
adcb
adcb
mov
imul
es
out
xchg
lods
and
mov
dec
xchg
lret
pop
pop
ljmp
test
pop
in
outsb
movsb
dec
and
hlt
xlat
adc
cmp
lock
fimull
and
cmp
daa
xchg
sub
adc
loopne
scas
mov
push
cld
or
push
repz
movhps
icebp
or
jns
cwtl
jl
pop
adc
cmp
mov
cmpsl
sti
fldcw
jb
into
popa
cmpl
movb
imul
nop
mov
pushf
xchg
push
fistl
stos
int
ss
push
das
dec
inc
cs
mul
aam
scas
hlt
cmp
or
loope
push
pop
out
cmpl
mov
scas
sbb
push
cmpl
clc
xchg
call
shr
dec
das
mov
push
enter
cltd
out
xor
mov
icebp
inc
les
sub
rolb
push
call
cmp
cmpsb
jle
ret
xor
add
sub
add
and
xchg
icebp
mov
jmp
mov
inc
das
add
in
mov
loope
cli
pushf
js
jle
movsl
add
in
ret
inc
daa
daa
ret
sub
push
lret
push
sub
xchg
arpl
sbb
pop
sbb
cmc
sbb
sarl
mov
movsl
dec
pusha
jg
add
jnp
jge
sub
bound
sbb
rolb
pop
loopne
sub
dec
pop
fiadds
add
mov
push
iret
pop
cmp
cmpl
mov
mov
pop
hlt
in
cwtl
dec
dec
add
xchg
inc
xchg
sti
call
and
movsl
push
add
int
lock
out
jge
adc
sbb
adc
mov
int3
adc
shlb
in
adc
mov
sub
mov
cmp
push
pop
imul
sbb
insb
sub
push
adc
fwait
push
adc
adc
out
add
mov
out
test
test
inc
push
and
leave
push
pop
sub
cmp
push
push
jmp
cmp
mov
or
jbe
les
inc
out
xor
lods
fstp
outsb
test
ret
mov
fidivs
xchg
or
push
dec
jle
cmp
sub
shrl
repnz
rorl
popa
loop
movsl
mov
sbbb
stc
scas
mov
stc
or
sub
test
xlat
aaa
adc
mov
sub
into
xor
addr16
inc
jae
cmp
cld
subb
lcall
jnp
add
fdivr
jne
notb
cmp
loope
jmp
mov
jmp
cmc
pusha
jg
pop
mov
aad
dec
addr16
cld
push
inc
mov
ja
and
sbb
ljmp
adc
mov
cmpsb
pop
fs
sub
xor
xor
mov
enter
call
mov
orl
xor
scas
ret
popf
cmp
inc
add
ljmp
add
rclb
cs
dec
jmp
add
iret
mov
lret
sub
loope
xchg
and
imul
xchg
ret
lods
iret
pushf
push
ficoml
jo
scas
xchg
in
xchg
push
xchg
fsubl
psubusw
mov
mov
daa
sahf
inc
das
sub
icebp
call
push
mov
loop,pn
iret
lret
dec
mov
out
std
fs
sub
test
insb
out
cmc
xlat
sub
lcall
pop
dec
ja
add
mov
fs
nop
or
adc
xor
or
in
je
stos
jl
pop
outsl
push
les
push
fimull
dec
ret
ret
insl
insl
das
sarl
sti
and
dec
pusha
lods
fcomi
sbb
in
ds
xchg
fstpl
mov
and
es
add
cltd
jmp
pusha
xchg
ret
jbe
rcrl
inc
mov
pusha
push
mov
js
ljmp
cmp
dec
adc
mov
les
inc
dec
sbb
cmp
mov
push
and
pushf
nop
sbb
aam
pop
adc
lea
lretw
icebp
mov
addb
mov
mov
test
push
inc
xor
mov
sbb
icebp
or
js
cld
push
add
fcos
cltd
subb
dec
mov
into
or
lods
in
adc
or
xor
mov
out
std
or
jmp
mov
fcompl
mov
push
sbbb
cmp
iret
das
pushf
inc
fcomp
addr16
ret
out
push
pusha
lret
mov
xor
inc
into
xchg
jecxz
aas
dec
jp
or
stos
lods
jbe
les
cmc
push
inc
cmp
pop
hlt
popa
pop
or
jg
fwait
shrl
push
push
and
insb
xchg
in
sbb
movsb
shrb
mov
xor
add
push
daa
ffree
lcall
and
pop
incl
cmp
cmpsb
or
adc
cmp
decl
mov
jecxz
aam
into
ds
ds
jo
adc
sub
and
stos
test
das
movsl
lods
je
xor
ja
test
movsb
pop
fmulp
test
stc
les
push
or
xchg
shll
mov
testb
pop
subl
mov
xor
and
sti
es
mov
push
mov
sub
push
or
mov
ret
rorb
loope
inc
fstpl
push
and
mov
rolb
and
js
and
jmp
lahf
enter
jns
aam
imul
mov
or
inc
jo
loop
out
mov
xchg
cmp
in
dec
in
rorl
and
movsb
jge
cmp
xorl
pushf
dec
adc
in
ret
test
out
pop
and
sbb
xor
dec
xor
xor
idivb
movb
cmp
cs
pop
mov
add
lcall
and
sti
lcall
jmp
lret
jbe
xchg
movsl
dec
lock
add
mov
xor
aad
fsubr
mov
fsub
mov
push
jno
shlb
sub
mov
cmpsl
push
sti
jle
movsb
int
repz
faddl
xor
and
lods
or
nop
lods
mov
mov
mov
stc
ljmp
scas
call
jo
pusha
ret
lds
gs
sbb
mov
xor
mov
sub
pop
rcll
xor
inc
cs
inc
mov
inc
sub
mov
and
ficomps
xor
push
sub
mov
ja
in
pop
loopne
mov
adc
or
adc
pusha
cmpsl
xchg
mov
lods
insb
add
and
pop
xlat
add
jb
arpl
jno
xor
mov
out
iretw
jle
cmp
sbb
in
cmpsb
gs
insb
pop
pop
lods
sub
cltd
pop
lcall
cmp
aaa
sbb
fwait
int
incb
add
adc
jno
jecxz
lret
repz
inc
cmp
nop
daa
lahf
push
daa
test
popf
cld
mov
adc
das
xchg
loop
xlat
push
lahf
in
repnz
sub
xchg
lds
xchg
ficomps
dec
loopne
scas
inc
pusha
ss
xchg
ss
repnz
fldt
and
jbe
jno
mov
scas
xchg
loope
int3
sbb
adc
mov
js
jo
ud2
mov
lods
loop
lods
push
ret
lret
andb
add
ljmp
xlat
into
inc
mov
insl
pop
add
aad
or
data16
cmp
sub
mov
dec
add
dec
ljmp
fdivrl
sub
roll
pop
or
roll
inc
sarb
and
lret
test
imul
adc
cmc
pop
fsubrs
cmp
pusha
iret
cld
out
jge
fdivrs
sub
mov
mov
lds
pop
jmp
out
jae
movb
int
imul
mov
fadd
insb
leave
jnp
aam
cmp
lahf
cmp
dec
pop
int
or
ljmp
inc
out
insb
add
fldenv
mov
mov
cmp
test
lret
mov
data16
pop
jecxz
push
sub
or
and
pop
xchg
outsl
hlt
iret
dec
jge
inc
sub
lret
xchg
clc
loope
aad
xchg
mov
loopne
dec
xchg
fs
fdivrl
sar
lock
add
push
out
inc
push
mov
pushf
dec
lods
push
sbb
fdivp
pushf
out
adc
xchg
mov
or
mov
push
mov
shll
mov
push
adc
in
ljmp
inc
push
cli
jp
in
dec
add
loopne
outsl
popf
sti
sbb
xchg
rorl
dec
xchg
enter
aaa
int3
or
adc
xorb
mov
xor
add
je
mov
lret
mov
xchg
stos
adc
mov
scas
jbe
dec
pavgb
or
and
jp
add
jmp
mov
jb
xor
xor
mov
cli
push
fwait
push
xor
mov
cld
xchg
cmp
or
lcall
clc
jo
cli
jg
add
or
xor
cwtl
xor
test
out
addr16
inc
inc
lock
hlt
xchg
jae
adc
lea
rorl
jle
mov
cwtl
cs
cmp
pop
pop
jne
shl
mov
pop
ret
mov
roll
es
dec
gs
lock
add
dec
test
sbb
or
push
test
shll
jg
movnti
push
mov
enter
pop
jns
cmp
cmp
pop
lods
add
jae
inc
dec
mov
in
rclb
shrl
dec
loope
sub
mov
push
daa
sar
push
insb
clc
inc
les
imul
movb
aas
cmpsb
rol
xor
into
filds
ss
cltd
fsts
stos
jg
dec
xlat
pop
fsubrl
sbb
sarl
in
push
imul
es
sub
cmp
fmuls
cmpsl
in
insb
in
sub
mov
xchg
mov
daa
mov
stc
pusha
es
cltd
cmp
xor
pusha
imulb
mov
xor
sbb
inc
stc
loop
fwait
jae
scas
dec
pop
rolb
ja
movsl
add
cmp
and
fs
std
inc
cmp
jns
mov
out
loopne
sub
dec
stos
push
mov
xor
mov
or
adc
push
repz
pop
or
gs
ret
and
in
outsb
mov
in
adc
add
out
xlat
ds
mov
push
lahf
cmpl
jns
adcl
je
lcall
push
gs
add
xchg
dec
cmp
mov
cmp
movsl
popa
mov
cmp
mov
ss
stc
mulb
scas
push
cmp
push
or
mov
push
push
ret
pop
push
push
fsubrl
sahf
das
stos
pop
mov
bnd
das
mov
data16
push
adc
pop
jle
sbbb
shrl
ds
xchg
xchg
test
loope
test
mov
popl
xchg
movzwl
iret
ret
sbb
rorl
addr16
scas
dec
dec
add
and
ja
cltd
push
jecxz
sbb
adc
mov
out
je
pop
popa
leave
mov
jno
xchg
mov
addr16
rcl
mov
mov
enter
and
jae
pop
jns
sahf
pop
jo
push
dec
out
push
adc
fisubrs
sahf
into
into
or
mov
ljmp
addr16
sar
in
mov
in
jp
mov
and
xchg
xchg
iret
push
jge
scas
or
fbstp
fwait
add
mov
mov
loopne
jge
mov
imull
add
imul
test
mov
fcmovb
les
cmpsl
pop
cmp
xchg
out
jp
divb
cmp
mov
xchg
stos
scas
add
in
nop
mov
cmp
push
push
mov
in
pusha
pop
mov
pop
in
in
pop
cs
jg
push
jbe
xor
push
outsl
jecxz
ljmp
std
and
fnsave
jmp
jp
pop
push
and
xor
fwait
mov
jae
push
push
jno
xor
out
lret
cmpsl
xorb
fs
fnstcw
cli
sbb
insb
fistl
jae
in
mov
push
mov
xchg
les
test
std
add
and
outsb
jnp
or
adc
jns
add
push
test
incl
sub
cmp
sarl
ret
pushf
push
xchg
xchg
fnstcw
or
xor
out
popa
pop
xchg
fcomp
ds
imul
popa
aam
stos
es
pop
shll
aaa
mov
jno
popa
fidivrs
add
mov
pusha
ret
lret
or
sub
and
push
sub
test
ljmp
hlt
push
divb
ds
pop
jo
call
lock
mov
pop
pop
mov
push
ret
mov
lret
je
sub
fucomi
movsb
mov
test
cmp
pushf
lock
test
subb
loope
push
out
je
lcall
push
cmp
mov
mov
lcall
int3
mul
arpl
sbb
ret
lahf
mov
sbb
in
ja
pop
dec
mov
lods
push
push
flds
jmp
jl
pop
add
shll
jl
cmp
pop
and
and
mov
dec
jne
jns
js
popa
dec
loope
jae
sub
sbb
sub
or
fwait
movsl
fdivp
in
push
lods
shl
sub
div
fsincos
xchg
sti
subl
jp
push
mov
int
sub
sub
cmp
push
jmp
jb
daa
cmp
stos
in
pop
lods
mov
xlat
jl
loop
add
fdivrs
shr
sub
in
gs
fucomi
xchg
pop
mov
xchg
ds
jp
test
aam
add
jae
inc
jnp
dec
das
popf
adc
mov
subb
dec
popf
nop
inc
dec
jecxz
push
fsts
neg
push
js
sbb
sbb
mov
in
scas
or
pop
inc
decl
fs
jl
andb
rorl
sti
inc
in
cmpsl
clc
in
xor
lock
dec
mov
aas
loop
jmp
pop
lret
int3
lret
das
std
sub
adc
test
in
mov
pop
and
inc
daa
cmp
dec
mov
mov
out
sbb
test
adc
ret
std
push
test
ss
ret
stos
pop
ja
xchg
movsl
dec
cmpsb
pop
jle
sbb
rclb
dec
xchg
add
or
scas
shll
jp
mov
dec
sar
dec
test
leave
rol
sbbl
outsl
rcl
or
movsl
cmpl
repz
scas
iret
lret
inc
adc
mov
cli
sti
ss
jnp
jmp
sub
mov
repnz
inc
shll
jne
lods
push
clc
adc
add
rol
sbb
pop
dec
scas
cmp
add
jecxz
in
nop
ds
jp
test
leave
div
xchg
fsubp
inc
mov
pop
xor
cltd
cmp
or
cmp
mov
xor
mov
push
add
push
xchg
cmpsb
jnp
std
pop
and
push
sbb
adc
push
nop
pop
push
cltd
test
xchg
out
es
es
add
icebp
lret
inc
sub
sahf
lret
cwtl
fisttpll
pop
adc
lret
mov
sti
xchg
scas
sub
inc
dec
out
inc
leave
lcall
sbbb
push
test
scas
xchg
mov
rorl
sub
add
insl
xor
and
mov
sar
ret
lock
pop
test
testb
mov
push
push
mov
pushf
jbe
jb
xchg
mov
inc
stos
fdivl
sbb
push
push
daa
pop
xchg
xor
fisubrl
jbe
enter
imul
dec
test
stc
js
pop
test
push
sub
mov
dec
push
inc
decl
das
add
ja
std
dec
pusha
fstps
movsl
xor
enter
sub
or
fnstenv
sbbl
pop
mov
scas
loopne
sbb
and
les
cwtl
jle
pusha
mov
gs
pop
sbb
and
mov
dec
xchg
stos
fdivs
test
popa
scas
inc
xchg
mov
xor
out
sbb
mov
xor
jecxz
add
add
add
mov
jg
pop
les
popf
push
jns
xor
sub
push
push
into
push
jae
ja
mov
es
push
jo
mov
push
call
iret
scas
fildl
mov
add
mov
push
lcall
sub
out
int3
popf
loope
loope
xchg
jle
xor
stos
iret
cs
mov
sti
xor
cmp
cmpsb
pop
insl
int3
cli
nop
push
stc
test
mov
hlt
paddw
sbb
in
pop
ret
dec
mov
ljmp
mov
mov
cmp
sbb
sarb
ret
call
xor
adc
shlb
sbb
in
push
pop
inc
dec
fwait
cmp
inc
fbstp
mov
popa
fs
sbb
jbe
stos
mov
fisubrs
sbb
jo
pop
inc
jecxz
frstor
stc
ror
inc
mov
xchg
pop
mov
aaa
mov
inc
negl
enter
pop
jge
dec
sub
mov
lea
mov
in
ja
mov
cli
fildl
mov
scas
shl
pop
cld
cltd
stc
and
or
push
inc
xchg
jmp
add
pop
mov
sbb
inc
js
fwait
addr16
pop
iret
lahf
leave
outsl
cmp
dec
mov
mov
rcrb
sub
test
ret
pop
push
imul
mov
cltd
pop
mov
dec
push
stc
in
xor
xchg
sahf
lret
push
jbe
push
outsl
hlt
fstpt
add
fimuls
adc
shr
mov
inc
stc
insb
in
sbb
xor
cmp
push
xchg
rcr
mov
inc
rcrb
mov
fsubl
dec
fisttpl
dec
mov
loope
push
inc
push
cld
aaa
or
mov
mov
inc
add
in
mov
fcomps
pop
out
in
cmp
cmp
add
orb
sub
lret
fnstenv
test
mov
mov
roll
jmp
enter
rolb
scas
mov
ja
clc
mov
cltd
dec
mov
aad
jmp
mov
repz
xchg
into
xor
push
ds
test
in
add
and
xchg
adc
and
and
pop
mov
pop
push
loopne
cmp
dec
test
loop
sarb
mov
fmuls
mov
outsb
add
ror
ret
dec
loope
fimull
dec
shlb
shrb
nop
subl
lahf
adc
add
dec
mov
mov
jnp
sarl
call
out
mov
lahf
mul
push
sbbb
mov
shl
scas
sti
or
or
je
int3
imul
jmp
xchg
mov
mov
fcmovnu
mov
jp
outsb
inc
inc
xchg
mov
xchg
pop
mov
ret
sbb
in
cmpsl
push
mov
jl
xor
mov
adc
fldt
dec
mov
scas
repz
out
ret
dec
mov
fdivrl
clc
xchg
cltd
xlat
push
ret
enter
xchg
ret
lods
mov
mov
push
inc
test
pop
xchg
andl
push
repz
popa
sbb
fimuls
icebp
or
cmp
ret
lcall
xor
cmp
adc
rcrb
cli
pop
mov
xchg
popa
cmpsb
iret
fs
icebp
mov
or
cs
fnstsw
xor
pop
idiv
dec
test
lahf
push
rolb
ja
mov
lods
out
pop
add
xlat
out
testl
sbb
lds
addl
or
cltd
mov
clc
cmp
jle
scas
inc
adc
call
repnz
lahf
movsl
imul
sub
insl
cmpsb
push
fcoml
idivb
cmc
mov
cs
leave
addr16
ficompl
push
add
jbe
mov
jo
pop
les
jmp
sub
mov
mov
sub
dec
pop
aaa
insb
jno
in
sub
push
xchg
adc
fwait
sarl
cmpl
sbb
sbb
in
mov
repz
mov
pusha
jl
out
inc
sar
mov
adc
push
out
pop
pop
repz
inc
pop
cs
cmc
adc
jecxz
push
jne
mov
xlat
mov
jae
aam
sbb
push
dec
ret
pushl
jae
les
mov
cmc
orl
movsb
cmp
push
mov
jno
jne
repnz
daa
ret
loop
dec
jb
aad
or
mov
xlat
ss
filds
imul
rcrb
aam
stos
and
aaa
and
nop
jns
inc
dec
getsec
dec
lods
and
test
adc
mov
inc
mov
sbb
mov
daa
push
mov
in
inc
inc
in
cmp
add
jmp
in
pop
mov
shll
gs
cwtl
and
dec
stos
push
ss
outsb
repnz
add
sbb
test
gs
pop
mov
pusha
jno
pop
imul
rclb
jae,pn
js
mov
incb
sub
scas
xorps
lret
out
int
dec
cmc
vunpcklps
jl
jp
cli
movsb
add
sbb
add
mov
jae
add
sbb
sub
xchg
rolb
mov
sbb
fs
ljmp
popa
scas
dec
sub
repz
pop
or
out
negl
lock
test
cmp
xor
loop
jbe
ret
jbe
outsb
sbb
enter
xlat
pop
int3
add
push
adc
xchg
mov
cs
mov
mov
insb
stc
shll
in
xor
lock
sub
mov
xchg
outsb
xchg
outsl
test
push
and
sbb
std
add
mov
aam
cmpsl
insl
shlb
jb
jmp
imul
inc
mov
sub
sub
push
dec
inc
mov
jb
push
pop
mov
gs
ss
and
add
lcall
mov
imulb
cmp
test
dec
and
dec
adc
or
pop
jl
xchg
inc
test
mov
fldl
mov
imul
push
popa
movsb
mov
nop
fiadds
mov
sub
adc
or
outsl
or
repz
mov
and
pop
jle
adc
add
mov
into
ret
lret
xor
in
outsl
push
mov
inc
cmpb
sbb
nop
xchg
enter
pop
inc
mov
mov
test
lock
ss
sbb
mov
test
lcall
rclb
stos
xchg
divl
sbb
cmp
iret
jnp
pop
outsl
push
stos
xor
xchg
mov
clc
pop
dec
fs
mov
sub
cmpsl
loop
shll
arpl
pop
mov
jg
cmc
inc
dec
popf
in
popf
cmp
clc
pushl
or
pop
cmp
dec
add
lahf
jae
sbb
xor
daa
jbe
cmp
ds
nop
pop
and
psrad
push
ret
and
sbb
repnz
mov
mov
roll
in
insb
stos
hlt
cld
movsb
xchg
push
es
mov
insb
out
stos
mov
dec
and
dec
stos
add
sbb
pop
fdivs
xchg
pusha
sbb
pop
pop
bound
xor
xchg
fsts
inc
aaa
or
mov
mov
xorl
test
loopne
cmp
ljmp
jmp
inc
sub
hlt
mov
scas
cmp
mov
lods
inc
mov
cld
lds
cmp
gs
push
pop
sti
adc
jae
nop
mov
push
and
fcoml
push
pop
push
inc
jge
insl
repnz
and
jb
jge
sbb
add
data16
mov
mov
in
mov
ljmp
pop
push
bound
shl
pop
pusha
push
stos
in
loop
xor
hlt
sbb
dec
and
mov
mov
lret
or
test
in
jp
int
in
inc
into
inc
popf
mov
sbb
in
cmp
mov
sbb
icebp
call
add
or
dec
pushf
inc
ret
in
push
adc
outsl
fisubs
pop
mov
and
pop
add
lods
mov
pop
iret
lods
fucomp
dec
in
add
adc
insl
sahf
cmpb
adc
cmc
pop
dec
push
scas
or
add
out
fndisi(8087
inc
mov
sti
push
inc
in
jns
cmp
pop
mov
xor
int
addr16
dec
mov
cmp
int
movsl
adc
mov
inc
cwtl
dec
adc
cmpb
inc
fisttpl
enter
sub
xlat
daa
sub
fiadds
xor
xchg
cmovg
stos
call
pop
xchg
insb
repnz
sub
movsb
mov
xchg
rorl
fisttps
int
nop
sub
inc
sub
cmp
lods
outsb
pop
into
mov
mov
inc
es
and
imul
dec
pushf
inc
int
push
jns
loope
inc
bound
stos
jl
push
popa
scas
test
xor
jmp
jo
add
and
and
adc
sbb
push
mov
ficoms
pop
in
sbb
or
mov
ds
leave
push
in
pushf
movsb
pop
lods
pop
inc
jmp
imul
pop
push
les
lret
push
cmp
adc
and
pushf
lcall
sbb
pop
nop
cs
push
pop
ss
xor
int3
scas
add
int3
imul
inc
add
lock
mov
bound
mov
ret
pop
cli
rcr
pusha
xchg
ret
dec
xor
test
popa
scas
sub
loopne
pop
inc
sub
mov
push
outsb
mov
lock
push
test
lods
xor
pop
add
das
adc
test
adc
lret
add
sbb
push
push
mov
insl
adc
jbe
sarb
mov
stc
in
sbb
rcr
stos
cmp
fcmove
jns
inc
andb
push
scas
repz
mov
jnp
lock
sub
jo
push
add
test
mov
lods
leave
sub
loopne
js
fdiv
pop
out
addr16
aas
int3
push
mov
shlb
aas
mov
push
nop
call
je
push
decl
inc
dec
cs
das
mulps
mov
jp
stos
mov
pop
xchg
jns
sbb
push
push
gs
push
decl
xlat
repz
daa
and
negb
fists
jae
fldl
cmp
fnsave
lods
dec
std
and
cmp
mov
mov
test
addw
add
ljmp
cmpsb
mov
add
sub
out
mov
jae
daa
adc
fnstenv
and
adcb
sbb
mov
xor
shll
adc
rcrl
lock
sbb
and
jae
mov
pop
dec
jle
repz
je
push
test
pop
cwtl
push
jmp
cmp
in
iret
mov
mov
nop
sub
sub
cwtl
decb
popa
pop
arpl
sbb
call
incl
cmp
loopne
or
add
xchg
dec
scas
pusha
push
mov
loope
sub
dec
mov
jp
cmp
cmc
fcompl
and
lods
xor
sbb
push
lret
xchg
push
fs
gs
mov
add
fwait
dec
lahf
push
mov
jp
lods
xor
in
mov
cmp
int3
cmp
cmp
jg
pop
loopne
cmp
xchg
sbb
sbb
cmp
inc
xchg
loope
cmp
popf
lret
and
repnz
mov
or
popa
insb
test
cmp
add
repz
sub
mov
jp
mov
push
or
mov
cltd
xor
movsl
cltd
cmpl
or
sub
cmp
cwtl
dec
push
es
xchg
sbb
pop
mov
cmp
repnz
fcoml
test
mov
shlb
fimull
rolb
mov
pushf
imull
sbb
pop
xchg
inc
jmp
sub
xchg
test
mov
pop
icebp
mov
aam
iret
lret
shlb
fimull
in
ljmp
push
cli
inc
inc
or
xor
mov
push
pusha
sub
inc
and
jmp
pop
sbb
push
lahf
jnp
jns
out
cld
jo
test
lcall
sub
mov
sbb
jp
mov
mov
mov
lcall
pusha
xor
daa
pop
mov
das
push
test
mov
sbb
pusha
and
popf
mov
xor
or
rorl
rorb
sti
enter
lock
in
sbb
rorl
mov
in
jno
and
vmread
sbb
add
in
fnstcw
loopne
fstpl
fs
fdiv
xchg
dec
adc
pop
inc
inc
pop
inc
ds
add
mov
pop
mov
out
mov
lods
les
jmp
dec
cs
sub
jle
add
stos
popa
mov
mov
sbb
jnp
sbb
push
call
pop
and
and
sub
fs
add
fimuls
pop
mov
orb
add
add
loopne
faddl
sbb
imul
outsb
call
sarb
fs
ret
dec
nop
bound
add
ret
lods
cmp
xchg
rol
mov
xor
test
stc
jae
in
inc
aam
jp
lods
and
roll
pop
push
and
shlb
roll
jmp
jbe
or
test
push
rcll
rcl
stos
jle
jp
sbb
inc
inc
call
mov
jmp
adcb
or
mov
jno
sub
fmull
pusha
sbb
test
arpl
pop
lods
push
fldt
lock
mov
test
add
stos
pop
in
jle
outsb
and
push
daa
mov
js
nop
es
ja
pop
adc
cld
rorl
adc
gs
cmp
cmpl
pop
inc
mov
jo
lret
cmp
mov
adcb
hlt
pusha
gs
ret
add
sbb
popf
test
ljmp
frstor
sbb
mov
xor
push
lret
cmp
outsb
mov
pop
sahf
in
shll
sub
in
cltd
gs
mov
and
jmp
pop
fs
pop
test
jmp
jb
ret
and
movsb
cmp
xor
sub
mov
sub
hlt
lret
test
fs
cmp
jns
daa
mov
frstor
cld
rorb
scas
inc
repnz
mov
test
nop
pop
or
fidivl
inc
fisttpll
out
mov
push
sub
dec
jo
scas
mov
push
push
icebp
xor
xchg
pop
pop
aam
js
sbb
mov
jb
shrb
inc
je
or
decb
pop
sbb
push
lret
dec
mov
push
movsb
into
arpl
mov
cmp
lock
jb
repnz
mov
mov
pop
add
inc
add
dec
jge
sub
dec
jnp
xor
stos
mov
mov
push
fs
xchg
adc
sbb
inc
pop
or
outsb
mov
xchg
mov
mov
loope
in
iret
fsubrl
pop
add
xchg
lea
or
out
dec
dec
cmp
cmp
xchg
data16
int3
pop
xchg
aaa
ss
sahf
aaa
ljmp
aas
add
pop
fdivrl
mov
subl
test
outsl
int3
dec
rorl
pusha
aad
mov
int3
das
aad
testl
fstpt
lret
not
insb
pushf
or
andb
leave
add
push
pusha
dec
or
bound
push
pop
sbb
xor
sbb
inc
gs
insb
test
sub
jae
pop
xor
push
mov
pop
andl
mov
pop
cmp
fwait
std
add
pop
inc
cltd
jbe
out
addr16
andl
push
cli
std
dec
insb
jmp
push
test
insb
jb
mov
mov
mov
icebp
add
adc
mulb
jmp
dec
adc
sub
mov
jb
int
lret
jmp
and
dec
ss
fimull
dec
gs
jnp
popa
gs
mov
inc
add
enter
xor
outsb
lahf
xchg
cli
outsl
sbb
push
jns
shrb
cmp
test
test
xor
push
mov
mov
inc
fisttpll
cli
cld
mov
mov
push
aas
or
mov
scas
out
sbb
int
test
add
loop
ss
imul
outsb
in
pop
in
fnstsw
push
xchg
lods
loopne
ret
inc
sbb
jg
data16
cld
adc
pop
dec
je
cwtl
incb
inc
jbe
hlt
add
pop
orl
adc
jo
fstpl
pop
sarb
or
cld
lret
push
xchg
cmp
dec
mov
int3
add
mov
mov
xor
test
add
inc
lahf
push
xchg
pop
push
inc
insl
lods
dec
adc
mov
rolb
dec
outsb
jg
xchg
sbb
sub
add
sub
movsb
sub
sbb
jns
movsl
cld
imul
mov
pop
or
lock
dec
icebp
sbbb
lahf
mov
fldl
pop
jbe
or
iret
add
std
mov
mov
pop
mov
sti
mov
cmpsb
insl
xor
aam
cmp
jae
mov
mov
push
loopne
lods
and
cmpsb
idiv
int
ret
dec
sbb
jno
iret
fcmove
pusha
in
aam
mov
push
mov
xor
iret
icebp
aad
jbe
sbb
repnz
pop
mov
sbb
or
pop
dec
xor
sbbl
xchg
mov
scas
push
je
testb
lcall
leave
pop
push
add
jae
sbb
jecxz
test
jns
adc
ss
sbb
lcall
test
pop
adc
inc
adc
test
jno
sbb
roll
or
aad
cmp
or
mov
sti
cltd
dec
dec
and
fisubl
inc
pop
testl
shrl
clc
xlat
jl
in
mov
mov
dec
fs
fadd
stos
add
das
jne
cmp
jns
and
enter
int3
jne
testb
inc
cmp
push
add
ja
test
add
hlt
mov
add
addr16
in
lods
popf
je
in
sub
scas
jb
mov
aam
pop
icebp
gs
sub
dec
jo
pushf
jbe
pop
pop
or
lcall
mov
pushf
int3
pop
sub
enter
les
and
ja
or
push
test
fcmovb
pop
int3
lcall
popf
mov
pop
xorl
jae
sub
jecxz
shl
lahf
add
pop
and
xor
jp
mov
dec
in
movsb
or
insl
icebp
popf
pusha
and
ret
sbb
test
adc
iret
xchg
test
push
loope
jb
paddb
cmp
test
sbb
jae
in
mov
enter
lods
test
in
test
inc
lods
xchg
jne
jg
inc
inc
fs
mov
push
xor
sbb
scas
mov
jl
cld
mov
dec
lret
xchg
sub
inc
pop
les
arpl
mov
mov
fptan
js
or
addb
test
push
shll
rcl
fnstcw
dec
les
ljmp
sub
fsubr
gs
push
inc
lods
pop
fnstcw
lods
loopne
in
xor
inc
in
push
add
in
in
adc
fs
fidivs
sub
mov
cwtl
out
or
add
push
mov
fstp
int
mov
push
insl
dec
or
out
push
hlt
and
dec
and
adc
or
insl
leave
dec
cmpsb
mov
cmp
dec
pop
loope
addr16
or
mov
lods
jnp
pushf
sbb
cmpsb
fisubs
sbb
test
dec
insb
mov
inc
scas
adcl
add
sti
fdiv
mov
sub
arpl
xor
test
xchg
fsubp
xor
jne
in
add
push
mov
dec
test
pop
cmp
jbe
xchg
add
or
and
dec
inc
nop
dec
mull
movsb
ja
jo
or
movsb
iret
call
mov
popa
int
stos
aas
mov
test
je
shll
movsb
fidivrs
or
mov
movsb
xchg
cli
mov
je
clc
call
bound
nop
dec
enter
movsb
mov
adc
mov
lea
sub
imul
rolb
add
push
push
cmp
push
lcall
test
imul
xchg
mov
mov
loop,pt
sbb
clc
lcall
leave
adc
mov
xchg
mov
out
pmaxub
cmpl
push
xlat
xor
push
cmpsl
stc
pop
fisubrs
add
pop
and
pop
add
jmp
sub
mov
aam
dec
lret
and
outsb
mov
xor
xchg
push
add
fs
pop
adc
icebp
pop
ss
or
cltd
xor
pop
inc
mov
lods
pop
jl
xchg
aam
cwtl
jno
repz
sub
dec
or
rorl
fisubs
sub
mov
fbld
sbb
pushf
and
cmp
out
pop
mov
xchg
and
roll
int
rorl
leave
xchg
hlt
loop
sub
idivb
xchg
out
mov
out
addr16
int
sti
test
dec
cld
sbb
xchg
in
push
int
push
add
lock
dec
pop
jne
mov
addr16
insb
jb
cmc
fcompl
sub
cmp
cmp
push
into
dec
movsb
mov
and
adc
stos
int3
mov
adc
jns
gs
aaa
adc
jle
fldenv
test
inc
xchg
xor
mov
mov
mov
sub
in
fistpl
addr16
int3
out
inc
gs
out
pop
lahf
ficomps
xchg
and
adc
out
dec
cmp
push
mov
push
push
pop
add
ss
cmp
xchg
fs
xor
imulb
inc
in
and
lods
sub
pop
jns
jecxz
adc
add
push
inc
sahf
rcll
sbb
or
testl
loop
das
pop
int3
or
movsl
mov
pop
push
scas
cs
ret
xchg
or
mov
faddl
push
and
add
and
sarb
dec
in
int
dec
lcall
rcll
outsb
insb
xorb
mov
repz
xchg
jge
lahf
jge
insl
and
mov
xchg
jbe
aad
sub
xchg
movsb
push
out
xchg
faddl
mov
popa
rolb
mov
iret
int3
test
add
add
icebp
sub
pop
adc
xchg
pop
xor
xchg
add
sbb
pop
and
sbb
sahf
popa
mov
shrb
mov
mov
insl
mov
and
in
push
fwait
xor
sbb
xor
push
les
in
dec
pushf
into
movsl
xchg
shll
inc
sbb
jecxz
iret
lcall
in
shll
rcr
xor
lods
ds
jbe
sub
sti
xor
or
int3
std
test
rolb
movsl
fs
add
pop
fsubs
mov
or
fucomp
cli
rcrl
cmp
jl
sub
add
lahf
jge
out
fidivrl
xor
stc
test
ret
or
loop
cmp
sub
imul
rorl
into
lds
in
sbb
addb
adc
fwait
pop
mov
mov
xor
xchg
sti
movsb
fdivrs
repz
or
addb
fldcw
js
and
or
rolb
aaa
or
testl
lock
in
fs
jmp
ss
jmp
push
xchg
sub
push
pextrw
lods
adc
and
push
cmp
push
xchg
adc
xor
mov
cmpsl
jge
add
pop
imul
loop
mov
sbb
mov
xor
mov
or
das
adc
addl
mov
jmp
in
mov
sarb
in
jo
mov
mov
test
pop
cwtl
cmp
mov
cmp
arpl
das
addb
loope
std
pusha
movsl
popa
jge
notl
int
mov
and
sbb
adc
stos
test
insl
and
sti
jo
cmp
pushf
fsubrp
pop
add
in
mov
xchg
int
mov
loope
pop
lcall
add
loop
mov
mov
xchg
nop
imul
xor
stos
js
cmp
dec
mov
rolb
mov
add
int3
lcall
mov
or
stos
in
test
cmp
ja
inc
shr
inc
adc
shll
bound
ficompl
pop
jnp
out
sbb
mov
sti
sti
inc
add
push
daa
fstps
jmp
das
add
int
mov
aam
scas
outsb
stc
mov
xor
into
outsl
jle
jo
outsl
or
adc
or
pushf
adc
outsb
inc
in
pop
push
push
and
and
xchg
inc
aad
aam
mov
mov
add
push
lret
sub
add
fnstcw
mov
ffreep
mov
sub
jne
nop
push
mov
pop
loope
push
pop
inc
dec
sub
repnz
sub
test
xor
in
cmpsb
mov
ds
push
mov
pushl
nop
cld
mov
push
int3
movsl
jl
cmpsb
inc
or
cmp
inc
adc
and
je
mov
cld
push
cmp
adc
pop
roll
sub
cs
inc
xor
sbb
and
adc
mov
pop
dec
outsb
jl
lds
or
sub
or
mov
sbbb
idivl
movsl
mov
ret
and
mov
lods
sbb
int3
mov
xchg
fisubl
push
cmpb
jge
sub
lods
cmp
add
add
popl
xorl
adcl
adc
push
mov
mov
movsl
ffreep
inc
pop
mov
fld
std
inc
into
adc
sub
cmpl
cmpb
in
int
sbb
test
mov
das
addr16
sar
imul
lret
cld
adc
sub
adcl
shrl
rorb
out
sub
mov
out
adc
push
adc
loop
je
add
scas
sub
jo
out
popf
mov
mov
xchg
ljmp
push
lret
fcoms
mov
pop
jne
add
push
pop
aam
lods
fldcw
and
cld
mov
in
jns
xor
sbb
cltd
leave
movsl
das
inc
jp
inc
adc
push
stc
fs
sbb
mov
repz
xor
fs
call
div
xchg
gs
sub
ss
movhps
lea
push
xchg
cmp
jge
test
dec
outsb
add
push
ret
and
mov
jp
in
addl
xor
cltd
ljmp
arpl
or
mov
outsl
out
movsb
push
inc
sarb
push
mov
sbb
das
push
inc
clc
gs
jge
loope
hlt
jecxz
push
aaa
fildll
cld
das
add
ljmp
add
loopne
adc
int3
shr
pop
and
ret
in
stos
mov
or
cmp
sbb
push
push
std
push
mov
adc
test
pop
xorl
mov
fnstsw
pusha
scas
or
ds
push
repnz
addr16
inc
add
scas
mov
jecxz
lret
jnp
pop
inc
or
insb
mov
xchg
jp
and
cmp
or
aam
lret
mov
ljmp
push
jno
aad
pop
push
gs
xor
mov
push
pop
pushf
arpl
fdivl
scas
std
stos
fisubrs
loopne
cmp
js
adc
and
ss
push
lods
add
mov
repz
ljmp
pop
fisubrs
cmovp
and
inc
sti
add
stc
into
push
fadds
fnstcw
fdivrp
mov
push
sub
mov
pop
and
ss
sub
jle
push
shl
xor
jb
or
rolb
and
jae
ret
stos
int
jne
mov
imul
enter
arpl
pop
mov
jp
inc
clc
xchg
mov
or
and
outsl
stos
call
dec
mov
loop
push
andb
test
fxch
hlt
push
xchg
dec
jl
or
aad
sar
mov
cs
ret
ret
mov
rclb
insl
inc
in
and
daa
jg
jg
inc
lods
aam
mov
test
pushf
and
jo
jne
pop
popf
dec
lahf
sub
andl
pop
rcr
test
clc
mov
out
jg
mov
inc
mov
scas
fistpll
jne
mov
inc
adc
push
pushl
repnz
sbb
cs
push
cwtl
adc
jl
das
iret
sbb
fldcw
lds
test
cltd
imul
ret
jmp
leave
push
mov
add
icebp
fs
lods
xor
adc
or
frstor
or
cwtl
xlat
dec
jmp
and
into
mov
in
and
sbb
aaa
in
xlat
jl
xchg
jbe
shr
push
stos
adc
mov
or
add
stos
pop
pop
xchg
mov
pop
mov
iret
pop
mov
ljmp
sar
cld
dec
loop
pop
sti
cld
push
orb
movb
je
lret
fcompl
mov
nop
mov
and
jne
das
js
pop
inc
js
sub
in
nop
out
adc
xchg
sbb
sbb
pmuludq
and
mov
pop
out
mov
or
stc
fimull
jp
add
scas
fnstsw
test
clc
pop
sub
aad
loop
dec
scas
inc
imul
pop
adc
psubusb
mov
out
jns
das
inc
xor
sub
lock
fucomip
loopne
cmp
mov
mov
add
clc
sub
daa
in
adc
pusha
ffree
and
dec
sahf
in
push
inc
fimuls
xchg
enter
ds
fs
xor
cmp
pop
cmp
xor
nop
ljmp
sti
mov
fildll
sub
fildl
fs
cmp
push
push
hlt
pop
out
stos
and
and
in
and
push
lcall
clc
pop
push
daa
outsl
mov
scas
mov
rcl
and
xor
cmp
mov
ret
inc
cmpsb
dec
in
clc
cwtl
mov
repnz
insb
fmulp
repz
je
and
hlt
jno
nop
cmp
mov
mov
les
ljmp
push
lret
sbb
stos
inc
inc
lds
daa
inc
or
dec
pop
dec
lea
js
dec
clc
xorb
out
mov
test
and
pop
dec
negb
xor
mov
cmp
stc
ljmp
pop
jg
xchg
adc
es
loopne
int3
xchg
ret
in
jmp
das
xchg
mov
xor
mov
lea
into
push
cmpsl
sbb
fimull
xchg
rclb
xchg
sub
inc
xchg
fwait
sbb
out
pop
ds
cwtl
loope
insl
push
fs
push
jns
jo
out
mov
dec
xchg
ss
dec
sub
or
sti
enter
push
jecxz
adc
mov
xor
push
jno
pop
mov
ss
jbe
stc
shlb
out
loope
push
or
es
insl
xchg
insl
push
in
and
fidivrs
xchg
jmp
aad
loope
cmp
ficomps
jno
add
int
push
sahf
jp
shll
cvttps2pi
push
mov
clc
mov
cld
inc
and
or
and
jmp
stc
testb
jmp
mov
pushf
sar
in
push
outsl
fcoms
repz
cmp
fdivl
sub
xchg
sbb
push
sbb
xor
dec
jmp
decl
test
jno
pop
bound
xor
jno
push
pop
stc
cmp
test
push
rclb
rolb
pushf
nop
add
stc
mov
imul
repnz
mov
add
cltd
fwait
daa
adc
pushf
mov
mov
inc
mov
mov
aas
cs
aad
cmp
outsl
and
and
stc
fstpl
dec
pop
mov
pusha
enter
es
loope
jle
mov
lcall
test
mov
xor
cld
jne
push
repnz
lea
cld
arpl
and
add
inc
cmp
orl
repz
fs
enter
mov
xchg
and
push
sbbb
outsb
cmp
adcb
mov
xor
ud2
or
jmp
aas
in
pusha
negb
pop
stos
push
adc
ds
or
rclb
in
scas
fiaddl
scas
nop
xor
out
xchg
lea
les
call
jge,pt
popa
test
std
stc
repnz
repnz
xchg
xchg
or
fs
pusha
pop
jne
jle
dec
lds
jge
or
adcb
push
imul
or
lods
or
loopne
sub
rol
fcompl
aam
push
or
dec
lock
sub
or
push
pop
push
push
rcl
repz
push
or
lods
fstps
cmp
jns
outsl
push
or
sarb
inc
out
xor
dec
pop
push
cld
lcall
fucomip
push
mov
adc
pop
fdivl
xchg
and
ret
aaa
fadds
ret
not
add
mov
ds
mov
and
stos
push
sbb
mov
sub
mov
pop
xlat
je
dec
pop
pop
sbb
sbb
mov
pop
lock
mov
pop
or
popf
or
push
pop
cmp
xchg
fnsave
mov
iret
je
dec
lods
scas
xchg
sbb
sbb
lods
push
dec
sar
push
mov
push
mov
inc
sub
out
jg
inc
mov
jge
loopne
ljmp
jge
call
jecxz
in
faddl
stos
shll
mov
and
out
fmul
popf
std
mov
je
xchg
subb
xor
lods
add
dec
aaa
adc
lahf
sti
mov
das
xor
lods
loop
mov
jnp
imulb
shl
xor
push
nop
xor
xchg
xchg
or
sub
mov
mov
dec
mov
daa
stc
adc
nop
adc
outsl
out
ret
inc
fstl
test
jecxz
mov
lret
adc
adcl
ret
fs
pop
mov
cmp
aas
pop
mov
pop
roll
xor
push
adc
push
pusha
fisubs
and
dec
adc
sbb
pop
lahf
frstor
addr16
hlt
call
stos
iret
in
shl
cmp
clc
shrb
and
lret
jmp
pop
into
and
mov
movsb
loopne
xor
iret
inc
incb
pop
cmp
lea
dec
pop
mov
stos
cld
mov
pop
mov
mulb
insl
cmp
test
push
lods
popf
mov
lds
pusha
cli
fbstp
pop
or
js
xlat
xchg
repnz
pop
adc
and
push
nop
repz
loopne
cli
xchg
or
dec
cmpsb
pop
push
aad
xlat
in
fucomi
cld
test
and
mov
gs
sub
insl
jno
push
sub
inc
xchg
and
mov
outsl
test
sbb
mov
faddl
xchg
out
scas
jmp
inc
mov
pop
sarl
xchg
pushf
push
lcall
mov
mov
pop
fcomps
pop
add
fs
push
aam
ljmp
adc
repnz
mov
fnsave
xchg
pop
mov
cmpsb
lods
mov
dec
cltd
push
mov
sub
pushl
jbe
cmpb
fwait
imul
mov
lods
stos
xlat
mov
fidivl
dec
inc
xor
loope
fucomp
mov
out
stos
sub
push
xchg
pop
sbb
and
pop
add
adc
mov
es
or
cmpsl
icebp
and
shrl
jno
stc
fnstcw
push
pop
sub
sti
stos
sbb
jp
xchg
pop
xchg
mov
add
xchg
push
mov
mov
dec
add
xor
push
sbb
jl
mov
jae
xlat
add
lret
sti
pop
std
push
rclb
mov
fcomip
add
fistpl
or
fistps
stos
sbb
lods
int
pop
fldlg2
pushf
in
outsb
int3
loope
loopne
sbb
iret
push
mov
mov
cmp
push
cmp
testb
jb
sbb
pop
iret
les
xor
sub
shr
inc
iret
fs
or
movsl
addr16
fiaddl
adc
cmc
dec
clc
inc
sbb
cmp
add
into
lock
in
push
inc
in
test
mov
in
jecxz
sti
leave
or
jno
pop
mov
enter
dec
push
sarl
jbe
test
cmp
stos
int
xor
mov
stos
sbb
lods
dec
jae
mov
pop
repnz
stos
jae
mov
sub
dec
pop
dec
stos
xor
adc
sub
pusha
mov
in
mov
push
jbe,pn
pop
jnp
jnp
mov
mov
lret
cs
test
xor
fdivp
dec
scas
mov
ljmp
dec
in
icebp
cmp
ret
call
lcall
adc
xor
nop
lock
mov
loope
std
lods
adc
or
cld
push
or
repnz
lods
neg
push
ret
fsubrs
xchg
ljmp
out
sbb
bound
dec
add
aad
or
jne
mov
dec
add
mov
mov
xchg
lock
test
or
cmp
and
sbb
mov
popf
cmpsl
sub
andb
je
xor
sub
push
cld
test
in
push
loopne
test
out
mov
in
hlt
dec
push
rcll
pop
cld
mov
dec
pop
xor
icebp
jns
xchg
xchg
jne
bound
movsb
out
cmp
mov
pop
repnz
adc
pop
ljmp
gs
in
mov
out
xor
inc
sub
sub
dec
cmp
enter
out
or
push
and
inc
and
ret
and
pop
mov
ret
loope
xor
xor
pavgb
bnd
shll
inc
push
lret
lcall
inc
rcrl
ffreep
cli
int
jns
lods
mov
rcr
mov
daa
sbb
stc
mov
mov
xchg
lods
mov
nop
mov
xchg
lret
mov
mov
fadd
lods
imul
stos
jb
sbb
nop
das
sub
inc
int3
or
in
pop
add
stc
sbb
fisttpll
out
int3
and
aas
xor
int
sbb
fldenv
jo
pop
inc
jnp
dec
pop
cmp
ljmp
add
fsts
mov
adc
jecxz
xor
and
jno
dec
movups
gs
rcrb
mov
imul
xchg
out
arpl
jg
ljmp
aas
daa
leave
sahf
fisttpl
lds
lods
adc
sbb
ret
fs
jecxz
rclb
cli
icebp
push
cmp
cmp
femms
shlb
or
ficoms
mov
lds
add
mov
push
or
mov
cmp
add
dec
imull
push
or
rcll
in
aad
fs
lock
lahf
lock
test
notl
popf
shll
inc
loop
mov
in
loope
xchg
mov
out
push
cmp
inc
fwait
xchg
iret
ret
into
jecxz
mov
dec
mov
mov
fstps
filds
lret
jp
lahf
push
in
dec
cli
lret
hlt
lods
pop
popa
leave
pop
inc
xor
xor
hlt
jo
sahf
pop
jge
es
icebp
xchg
xchg
jge
das
scas
sbb
daa
mov
mov
push
nop
gs
cvttps2pi
mov
xchg
lcall
dec
mov
cmp
pushf
pop
pusha
sbb
sub
lds
lock
divl
sbb
dec
sti
out
pop
jge
or
and
mov
jmp
dec
pop
inc
das
mov
sub
xchg
sub
das
xor
mov
sub
cmp
push
jmp
in
push
cmpsl
or
cld
cltd
or
sub
lock
cmp
es
xchg
xchg
mov
test
xchg
pop
nop
enter
das
dec
aad
test
adc
push
je,pn
dec
cmp
lahf
push
mov
fwait
leave
nop
lods
xchg
add
adc
in
or
mov
negl
dec
fs
adc
jle
jnp
idivb
icebp
dec
shrb
pusha
mov
pop
ds
sub
fwait
loopne
ja
dec
lods
enter
pop
jno
int3
mov
pop
sti
test
add
test
and
insb
std
and
add
xchg
xchg
pop
jnp
xchg
pop
in
orl
jle
xor
or
lods
cmp
fsubr
bound
movd
sub
cmp
ja
push
imul
push
pushf
sarb
frstor
jge
mov
dec
addr16
dec
andb
stos
jle
std
xor
sub
fadds
fcom
sbbb
mov
dec
lods
insl
mov
lds
or
mov
push
xchg
call
stos
sub
dec
pusha
jo
jnp
dec
adc
or
push
lahf
outsb
loope
pop
sti
int3
xchg
mov
xlat
mov
in
push
in
add
mov
lods
test
flds
jne
sbb
lods
adcb
outsb
push
ja
lcall
testl
cmpsl
add
xchg
lds
outsb
and
jns
inc
sub
inc
call
xor
out
cmc
jp
notb
outsl
mov
add
lea
mov
and
pop
sbb
fwait
pop
out
mov
loope
into
bsr
xchg
xchg
je
pushf
pop
cs
cwtl
mov
sbb
and
cmp
ja
fcmovu
stos
and
aad
sysret
jo
decl
lds
arpl
cmpl
mov
ja
add
cld
cwtl
and
in
dec
movsl
dec
int3
inc
out
mov
add
xchg
popf
mov
push
out
pop
addr16
xlat
fstpt
loopne
push
mov
imul
cmpsb
dec
and
std
sbb
mov
or
add
jo
jmp
test
push
jecxz
pop
push
sub
push
cltd
push
sbb
imul
ret
ja
sbb
mov
jmp
outsb
jmp
mov
cmp
or
movsl
xor
pop
les
movsl
cmp
sbb
cmp
mov
insb
cld
rcll
insb
in
sbb
xchg
xchg
fs
test
imul
mov
ja
xorl
decb
pop
lods
cld
jp
mov
push
lock
mov
mov
int
stos
push
lods
add
test
mov
pop
repnz
out
push
lea
cmovae
xchg
sahf
ljmp
xchg
negl
notl
push
push
mov
ret
push
push
sub
mov
or
push
into
je
sub
and
jmp
mov
ret
jns
gs
loop
pop
adc
mov
insb
and
mov
insl
and
in
pop
lret
aad
cmp
add
test
cld
cli
lock
popf
ss
adc
pop
out
fstpl
out
flds
push
dec
pop
hlt
jmp
clc
ss
dec
shrl
mov
pop
mov
into
imul
sub
sub
in
rcr
dec
fisubl
inc
outsl
aam
loop
adc
mov
xchg
test
and
sub
jl
and
ds
sbb
in
or
jl
lret
call
xor
dec
ja
dec
sub
or
ja
das
ret
stos
pushf
mov
push
dec
xor
imul
xor
push
xchg
inc
insb
lea
sbb
mov
stc
stos
repz
inc
in
cmpsl
sbb
cmp
insb
sub
shr
sub
adc
pop
mov
add
inc
fisttpl
xlat
loope
push
push
stos
test
in
les
cmp
push
test
jp
adc
mov
mov
rol
mov
sbb
cmp
test
scas
pop
jg
call
addb
jb
mov
je
icebp
mov
sub
push
push
sahf
pop
test
add
pusha
es
cmp
cli
clc
enter
dec
shlb
mov
in
mov
in
lret
push
jo
in
pusha
mov
fucomip
sbb
test
dec
int3
push
adc
lock
adc
fs
cld
aas
ljmp
xor
xchg
fwait
cmc
test
int3
lea
roll
in
mov
les
addb
test
lret
and
arpl
inc
lock
lret
inc
outsl
sub
mov
loopne
scas
xchg
in
lcall
ja
push
push
iret
into
fidivl
jmp
jb
mov
and
mov
jb
push
jmp
pushf
pushf
in
pushf
cltd
mov
loop
stc
sub
mov
cmp
shll
sub
stos
movsl
mov
mov
add
mov
jl
negl
inc
sbb
sub
inc
out
and
sahf
mov
mov
addb
add
in
loop
pop
mov
pop
outsb
mov
fwait
cltd
popa
push
inc
imull
rclb
mov
and
imul
rolb
add
push
dec
dec
in
cli
dec
mov
push
mov
lcall
xchg
jns
inc
jo
stc
fcomps
and
cmp
test
test
adc
pop
subl
and
jnp
icebp
dec
fs
pop
idivl
xorb
iret
test
inc
cmc
ret
jb
mov
in
pop
push
push
and
xchg
lcall
push
lcall
clc
fdivrl
fcmovbe
mov
test
daa
dec
sub
testl
sub
daa
data16
mov
push
js
and
push
pop
cli
mov
xchg
jge
leave
mov
sbb
push
jo
jg
in
xchg
dec
mov
lods
jl
mov
pop
add
fwait
clc
shr
xchg
lds
xlat
pusha
sub
sub
inc
popa
cwtl
cli
les
adc
lock
aaa
cmpsb
pop
iret
pop
mov
scas
aam
dec
add
pop
xlat
rcr
addr16
add
jge
outsb
sub
lods
cmp
inc
ljmp
xchg
out
adc
arpl
mov
aam
fiaddl
mov
loop
arpl
lret
adc
mov
lahf
cmc
and
dec
or
rol
scas
mov
and
xor
xchg
ja
mov
sahf
mov
xor
adc
cwtl
out
int
mov
add
sbb
sbb
mull
and
push
ljmp
stos
imul
mov
mov
mov
fisubrl
push
or
sbb
lock
daa
int
fldenv
pop
jecxz
arpl
mov
in
jb
pop
outsl
push
in
fs
int
cmp
pop
push
push
xchg
pop
popa
es
xor
test
jge
add
and
test
dec
add
add
push
mov
pop
pop
mov
nop
lock
or
fisubrs
mov
push
mov
sub
sahf
and
rolb
jmp
sbb
repz
mov
mov
add
or
mov
jle
mov
cli
mov
aaa
aad
out
sub
insb
sub
xor
ds
adc
sub
iret
call
pop
dec
into
data16
cltd
test
into
arpl
mov
test
mov
fisubrs
push
mov
mov
pop
in
inc
stos
daa
add
scas
sbb
sbb
dec
stos
test
inc
outsb
dec
ja
add
loopne
add
adc
push
mov
jle
jo
daa
movsl
in
divl
in
lret
inc
mov
pop
movsl
mull
xlat
or
in
pusha
sub
add
fsubp
daa
jae
inc
jae
cmpsl
ret
cmpsb
add
scas
out
aaa
testb
jo
jmp
jne
mov
add
xchg
movb
pop
cmpsl
ret
or
lds
repz
add
pop
testb
adc
out
sub
jae
pop
dec
add
sbb
adc
pushf
cmpsl
cmp
loope
fstpt
jmp
or
jnp
ja
mov
outsb
push
das
adc
adc
stos
cmp
sub
popl
sbb
icebp
cmp
jmp
mov
lods
or
loop
pop
ret
scas
repz
pusha
sbb
add
insl
call
insb
mov
pushf
call
in
das
ret
pop
movsl
mov
stc
xchg
mov
ficoml
or
mov
pop
mov
mov
aaa
or
sbb
xchg
pop
add
pop
out
lcall
aad
push
mov
pop
out
and
jne
mov
daa
dec
popa
mov
shll
pusha
lret
and
sub
or
in
mov
js
mov
push
push
and
in
mov
cmp
sbb
cmp
pop
nop
add
mov
mov
mov
cmp
loop
dec
stc
xor
rcrl
pop
xchg
stos
orb
iret
in
jb
imul
push
in
loopne,pt
inc
leave
add
lahf
and
pop
cmp
inc
jns
fdivs
pop
xchg
mov
xchg
std
xchg
lods
iret
cmp
fwait
in
mov
pop
cwtl
pop
cmpsb
add
fistl
sub
pop
or
dec
lea
das
push
shrb
cmpsl
imulb
shrl
ljmp
adc
pop
push
mov
push
cmp
imul
mov
not
mov
jnp
adc
sub
fmuls
mov
mov
rorb
push
add
add
inc
daa
dec
in
pop
int3
push
lea
lods
pop
mov
insb
cmpsl
js
pop
adcl
int
mov
test
enter
daa
inc
repnz
movsl
fisubl
and
insl
jae
daa
or
mov
add
addr16
pop
and
or
fldenv
lret
mov
mov
insb
pop
sti
out
jmp
int3
jge
das
dec
mov
push
nop
pushf
and
pushf
fstp
and
insl
loop
mov
inc
push
ja
push
push
hlt
cmpsw
cld
jns
ja
pop
scas
sarb
xor
mov
xor
and
shl
dec
popa
push
iret
xchg
xor
xchg
ret
shl
push
inc
movsl
nop
out
mov
lret
loopne
fsubrs
pop
movsb
or
mov
pop
fwait
add
fwait
out
loopne
xchg
jne
pop
jbe
xchg
fisubrl
test
cmp
jbe
jb
jae
jp
mov
xor
or
sub
pop
inc
sub
mov
mov
fildll
push
jbe
cmp
mov
jp
pop
sub
mov
push
fmul
imul
adc
sub
arpl
push
int3
adc
cwtl
cmc
mov
nop
adc
scas
mov
jo
pop
sti
sbb
es
jns
sub
push
sub
jne
out
outsl
inc
ret
dec
sahf
ja
fistpl
jb
push
gs
cmpsb
push
add
shrb
aad
xchg
mov
push
mov
xchg
xchg
jnp
stc
fs
xchg
aam
cmp
jo
sub
push
jb
insb
dec
lods
ljmp
add
out
inc
jne
add
and
sahf
lret
sub
mov
rclb
jno
mov
sub
sahf
loopne
mov
shrb
loop
and
out
inc
xchg
mov
sbb
pushf
lds
and
fisubl
out
inc
int3
call
or
mov
hlt
lea
pop
mov
mov
out
push
mov
jb
mov
pop
lods
push
xchg
mov
push
dec
pop
dec
adcw
mov
dec
subb
mov
jg
js
xchg
fisttpl
repnz
add
mov
jns,pt
xchg
idivb
enter
inc
xor
pop
jb
imul
ret
outsb
pop
loopne
jb
cmp
mov
fnstenv
outsb
pop
aaa
shll
movsl
mov
gs
and
xchg
xlat
insb
jno
popa
mov
inc
mov
movsb
dec
cmp
fdivrl
lock
add
xchg
xchg
lea
sbb
dec
adcl
in
xchg
mov
push
xchg
pop
fwait
mov
push
cmp
cmp
add
push
aam
lret
test
ret
data16
xor
shll
dec
mov
push
lret
jo
test
cltd
arpl
fistps
adc
lds
shll
mov
mov
jb
aas
aas
add
mov
ljmp
push
test
xchg
xorb
add
inc
push
xlat
pop
jmp
mov
cmp
mov
repnz
mov
mov
dec
in
lock
in
xchg
jecxz
nop
xchg
push
ljmp
sahf
mov
cld
popa
jnp
cltd
adc
sarb
and
ud2
inc
dec
insb
adcl
in
jp
sub
mov
lea
mov
cmpsb
cmpsl
mov
and
pop
inc
stos
nop
jg
fwait
test
enter
sub
enter
int
cltd
or
rclb
out
mov
pusha
popf
in
sub
mov
js
xor
insb
mov
mov
test
pop
xor
addl
cmc
or
sbb
outsb
add
lods
mov
fstpt
ljmp
cmpb
xor
xchg
inc
mov
shl
push
in
push
in
jl
mov
pop
mov
clc
mov
mov
int
icebp
cmpb
cwtl
dec
cmp
fldl
dec
push
cmc
cld
lds
insl
fisttpll
jp
pop
dec
aaa
xchg
cmp
shl
xor
dec
and
into
fnstcw
add
fidivrs
fmull
sbb
lea
jnp
repnz
pusha
test
add
or
xor
push
loopne
test
add
add
cwtl
mov
xor
sbb
fxch
inc
pop
shlb
pushf
adc
and
fiaddl
and
mov
andl
call
out
cltd
mov
js
mov
xor
sub
dec
cld
out
xchg
xchg
sbb
jnp
or
mov
push
adcl
sbb
iret
scas
rcrb
dec
loopne
leave
out
clc
xlat
push
jl
stc
inc
test
out
and
fstpt
sub
jp
cmc
sub
into
rcr
mov
cmc
rorl
mov
es
jmp
jl
insb
mov
fwait
cmp
and
subl
jg
orl
xor
out
xchg
xchg
jns
mov
jo
mov
scas
lahf
out
cmp
push
mov
inc
or
pop
xchg
cmp
mov
push
cmp
cld
out
push
decb
sar
mov
les
idivl
sub
lock
or
inc
mov
mov
xor
push
or
mov
xchg
in
adc
jno
sahf
adc
shl
push
out
andl
adc
rolb
aas
stos
cld
call
test
mov
pop
mov
and
pop
fildl
add
mov
js
mov
pop
out
cld
pop
insl
gs
pop
orw
ffree
loopne
std
notb
aam
repz
sub
call
adc
push
arpl
push
push
mov
xchg
clc
repnz
out
mov
pop
shrl
mov
icebp
pop
mov
cmp
fisubrl
mov
lock
jmp
fnstenv
dec
xchg
xor
lea
fistpll
loopne
cld
cld
ljmp
cli
mov
adc
add
adc
arpl
negb
sbb
out
les
xchg
xchg
pop
out
push
and
jl
xor
lahf
out
sahf
jbe
mov
mov
mov
sbb
mov
mov
sbb
mov
xchg
pop
sbb
mov
and
testl
fimuls
mov
aas
movsb
push
shlb
adc
ret
dec
ffree
aam
loop
jb
ljmp
ds
pusha
or
sarl
push
test
jmp
xchg
cli
or
lret
nop
movsl
rcll
int
mov
icebp
pushf
dec
or
mov
add
mov
ja
lods
dec
push
stos
out
in
add
cmpsl
add
mov
jp
jno
push
jle
sarb
pop
es
dec
lea
dec
cld
ljmp
imul
inc
xor
dec
dec
nop
arpl
out
push
dec
ss
or
call
test
ror
aam
ror
bound
dec
int3
out
inc
push
rorl
je
dec
in
rclb
cmpl
sbb
adc
scas
shll
jno
xchg
xchg
int
aaa
cld
sbb
jno
xchg
enter
and
in
mov
out
add
mov
test
inc
fisubrl
mov
cmp
cmpsl
dec
mov
stc
xchg
dec
cli
int
out
shlb
lahf
subl
fistpll
rclb
mov
aas
pop
push
cmpsb
sub
push
fcoml
pusha
adc
inc
lcall
or
add
inc
dec
sub
sbb
sbb
daa
test
add
dec
push
fadd
jge
push
hlt
sub
popf
into
rol
cmp
into
arpl
fucom
xchg
test
jae
clc
into
mov
out
aad
add
inc
or
arpl
fcmovbe
push
cmpsb
or
add
add
fxch
inc
ret
pop
adc
fcmove
mov
repz
outsb
cmp
fildll
xor
adc
imul
push
out
icebp
mov
or
outsl
jmp
lret
or
dec
jl
loopew
adc
inc
aas
bound
push
bswap
cs
imul
lret
pop
movsb
daa
adc
mov
dec
sbb
pusha
xchg
jl
lds
aaa
loopne
push
insb
mov
push
sbb
or
cmpsl
cmp
rcrl
std
xchg
or
in
subb
fiadds
outsb
sub
aam
inc
xor
ljmp
stc
and
into
inc
sbb
push
cmc
clc
cmp
xlat
mov
ret
jo
push
xchg
push
inc
cmp
or
insb
mov
fcom
lods
scas
inc
pop
pusha
and
mov
cltd
int3
jle
addr16
cmpsl
int
inc
cmc
cmp
daa
repz
xchg
gs
xor
scas
pop
loope
sbb
lahf
xlat
and
push
inc
and
cs
movsl
mov
test
xchg
icebp
push
test
ljmp
ficomps
push
mov
inc
mov
push
lret
xchg
mov
adc
sub
shrl
and
lods
cli
and
inc
and
and
and
cli
jp
mull
movsb
call
jns
mov
mov
jecxz
jne
imul
sub
mov
sub
outsl
sbb
xor
out
stos
mov
aam
push
repz
push
inc
rorb
ret
out
sbb
mov
mov
mov
jnp
outsl
loop
cmovnp
std
pusha
and
cmpsl
daa
and
push
movsb
xor
repnz
sub
sbb
sub
leave
call
lods
jnp
xchg
scas
mov
pop
loop
xchg
addr16
ljmp
jnp
inc
cs
fs
xchg
cmp
mov
and
sub
addb
cvtps2pd
fcmovne
scas
inc
and
cmpb
jo
jge
mov
aas
mov
sub
add
lods
cmp
or
loop
jl
hlt
loop
cli
mull
dec
xchg
gs
jmp
rclb
inc
jae
add
notb
js
call
inc
sbb
mov
mov
lcall
pushf
stos
sbb
fs
push
cltd
inc
cmp
lret
cwtl
pop
add
inc
in
test
stos
adc
fiaddl
mov
dec
sub
mov
outsb
pop
inc
hlt
xor
je
mov
fisttpll
test
das
adc
push
loopw
jmp
xchg
std
daa
push
sbb
adc
pextrw
das
jns
movsb
push
xlat
stos
cmp
mov
inc
cmp
stc
pop
lock
test
inc
scas
push
sti
mov
in
inc
xchg
imul
xchg
data16
sbb
leave
sub
ss
mov
popa
dec
fs
jbe
inc
lret
loop
sub
scas
nop
pushf
sbb
ss
rol
add
fisubl
hlt
cmp
ds
mov
arpl
jg
mov
adc
mov
cwtl
jge
add
sub
jecxz
sub
cmp
xchg
adc
fadd
or
push
mov
enter
mov
or
cld
mov
xor
add
ficomps
sbb
mov
test
push
in
inc
sbb
push
sbb
cmp
sbb
clc
pop
test
daa
rorb
jns
nop
scas
nop
repz
cld
sbb
lea
mov
pop
adc
inc
add
cmp
repnz
sbb
lods
dec
pop
in
data16
bound
lret
mov
cmpsl
adc
pop
sub
cltd
inc
xor
movsb
lcall
popa
stos
mov
mov
int3
inc
std
dec
mov
jbe
jae
push
cmp
scas
pop
into
mov
sar
lcall
es
jb
daa
aad
adc
cmp
dec
cmpl
int3
inc
and
pop
inc
aam
orb
cmp
and
int3
mov
fcmove
shrl
sub
es
jb
leave
dec
cmp
or
or
mov
pop
cmp
jecxz
xor
ja
mov
sbb
jb
and
pop
mov
push
sbb
shrb
stos
lods
sbbb
cmp
movsb
sub
test
inc
in
shll
icebp
cmc
adc
add
and
pusha
rol
adc
pop
lds
in
pop
sbb
mov
sbb
les
cmp
pusha
adc
cltd
adc
aad
lret
pushf
jne
out
sub
pop
push
jb,pn
lods
push
fs
adc
in
stos
xorb
mov
xchg
cmc
data16
mov
jp
sbb
jge
adc
jecxz
jl
into
mov
dec
ret
imul
lea
xchg
jg
cmp
lea
adc
push
jge
rcr
inc
ljmp
jns
xchg
enter
lds
repnz
in
mov
insb
xchg
loop
and
inc
hlt
or
sahf
dec
jmp
enter
scas
add
inc
andb
push
xchg
mov
mov
add
dec
pop
xchg
and
jo
push
pop
add
daa
orl
lods
mov
in
adc
ficoms
ficompl
into
pushf
jmp
mov
out
cmp
jno
push
sbb
lods
repz
sub
sub
jg
mov
nop
xchg
dec
adc
or
or
push
and
scas
repz
rorb
sbb
cmp
ja
pop
shlb
pop
push
push
call
icebp
movsb
int
add
dec
cmp
or
inc
pop
ja
rcr
pushf
rorb
repnz
inc
jmp
jns
ja
inc
cs
ffreep
outsb
jp
jl
cs
push
outsb
cwtl
call
and
mov
lods
test
movsb
fnstsw
jp
lock
inc
int
mov
lock
and
sub
jo
mov
sub
subb
dec
loop
jo
sbb
pusha
call
xchg
cli
xchg
call
je
mov
cwtl
sbb
push
pop
or
pop
sti
cmp
mov
notl
sbbl
ret
js
xor
ret
inc
cli
push
sbb
ljmp
push
lods
jno
cmp
hlt
jle
pop
fisubrs
push
test
imul
scas
push
and
sahf
insb
adc
mov
out
xor
lea
test
mov
push
loope
sbb
ja
and
imul
add
dec
lock
rorl
js
cmc
repnz
mov
fcompl
movsl
data16
jno
ret
xchg
fisubrl
out
mov
mov
mov
jns
sahf
sub
ret
test
shll
jno
out
sti
jl
xchg
push
xchg
nop
lret
dec
and
lcall
test
fcmovnu
xor
xchg
arpl
mov
cli
inc
or
push
enter
iret
or
outsl
enter
push
mov
dec
popa
lock
mov
xor
dec
sarl
jg
incl
sbb
push
pop
scas
and
and
in
insb
push
jns
sbb
add
loope
stos
nop
xchg
cltd
pop
sbb
fs
sbb
pop
push
icebp
mov
int3
or
and
es
pusha
je
xor
or
xchg
test
into
pop
dec
jle
sbb
push
or
mov
and
lods
push
dec
cmp
arpl
mov
sub
sbb
sub
sbb
xchg
jecxz
and
popa
jae
xor
popf
and
pop
sub
xor
pop
push
push
cmp
loope
pop
or
pop
cltd
and
insb
into
sub
loopne
jge
push
jp
jne
fwait
inc
cmc
loop
mov
push
sti
sti
movsl
inc
jbe
push
test
shrb
mov
sbb
das
outsl
or
cmp
loopne
inc
jp
out
ljmp
or
cltd
push
leave
sbbl
push
or
popf
addb
push
push
push
or
stos
xchg
mov
add
dec
sarl
sub
jno
or
adc
shll
filds
mov
in
ret
jl
cmpsb
dec
lods
call
lcall
mov
icebp
xchg
loopne
jo
loop
mov
push
push
stc
pushf
in
xchg
mov
movsb
push
imul
cmp
adc
call
fldcw
nop
pop
enter
and
scas
jo
faddl
mov
or
les
icebp
inc
lret
adc
pop
gs
add
mov
cmp
insl
or
notl
sbbb
lds
nop
mov
adc
sbb
lcall
cmc
xor
cli
jl
lods
mov
lds
jecxz
jg
cmp
mov
inc
push
adc
add
mov
insb
mov
mov
xchg
test
notb
js
mov
lret
sbb
adc
lret
mov
sbb
cli
repnz
rol
inc
jns
popa
and
in
sub
mov
push
test
cmovs
inc
inc
test
out
pop
jnp
movsb
inc
test
cmp
sub
lahf
and
dec
vpmacsdd
test
sub
andl
test
aaa
test
push
das
sbb
sub
repz
add
sub
and
aam
arpl
punpcklbw
test
sub
outsb
hlt
xor
bound
pop
jno
sbb
lcall
mov
sub
add
shll
scas
fdivs
pop
sub
aaa
push
out
dec
clc
sub
insb
xor
lock
xchg
lods
cmc
test
sbb
ds
popa
outsl
fdivs
mov
sub
bound
adc
in
inc
loop
repnz
ret
sbb
fcompl
in
or
jecxz
push
leave
lock
mov
pusha
or
lret
out
jo
cmpsl
enter
lret
jp
fstl
int3
sbb
sbb
sub
sbb
add
aas
adc
data16
inc
push
aam
idivl
int3
ja
mov
jle
cmpsb
hlt
shlb
mov
mov
cmpsl
inc
sbb
in
xor
in
jne
jb
pop
call
call
js
test
push
cmp
sub
jle
in
push
sbb
mov
imul
fdivl
aad
sbb
sbb
cmp
push
cmp
jae
inc
lret
adc
lahf
out
cmp
sbb
leave
into
push
cmp
jb
mov
sub
lret
divb
mov
test
enter
jge
outsb
push
je
jns
repnz
data16
lods
lds
cltd
neg
shlb
jne
mov
jecxz
leave
jmp
movb
or
decl
add
xor
negb
mov
mov
adcl
xor
sub
addb
nop
push
insl
jno
les
adc
ret
jo
mov
addb
sarl
sbb
add
jnp
push
inc
test
ret
test
pop
leave
and
fidivs
ds
test
jp
push
mov
fisubrl
xchg
add
jo
int
pop
sub
pop
xchg
add
es
cmp
push
lret
cmc
inc
adc
add
aad
xor
pop
int3
lock
pusha
mov
in
orb
scas
psubsb
testb
and
pop
in
int3
addl
into
xchg
int3
fs
inc
pop
call
xor
mov
stos
cs
sub
mov
loop
clc
test
mov
jns
imul
cmp
into
jb
rclb
cmp
test
push
dec
mov
mov
cltd
movsl
and
jae
sub
sti
in
mov
mov
xchg
ret
mov
ljmp
mov
or
insb
test
cmp
sub
cmp
xchg
push
je
mov
mov
sbb
bnd
jne
aam
pop
jmp
cmp
sar
in
jmp
mov
add
call
mov
inc
xor
add
cmp
rcr
jns
mov
jne
movsb
hlt
jp
add
outsb
mov
stc
in
xor
adc
mov
mov
dec
daa
into
sub
insl
ljmp
mov
je
mov
sbbb
add
mov
sbb
insl
ret
push
cwtl
in
in
sbb
push
mov
cmp
xchg
std
out
sub
jecxz
pop
cli
std
jae
repnz
xchg
ret
lcall
std
icebp
mov
mov
sub
pusha
cli
fdivr
dec
mov
adcl
dec
mov
pop
int3
enter
add
pop
push
out
cmpsb
out
call
pop
cmp
leave
or
sub
cld
jge
in
xor
xchg
cmp
int3
jle
cli
fdivl
push
popa
xchg
or
popf
pop
outsb
inc
pop
pushf
lods
push
lods
dec
ret
lods
push
mov
and
mov
pop
mov
cmc
adc
sarb
pushf
mov
xchg
cmp
std
push
push
mov
ljmp
hlt
rcll
cli
jecxz
ret
repnz
adcl
std
jne
adc
mov
pop
add
ret
arpl
dec
int3
and
imul
jp
mov
call
mov
pop
jne
adc
in
xor
aam
aas
xchg
cmp
cmpsb
call
imul
test
ja
pop
clc
and
insl
cmp
jecxz
ds
pop
push
xchg
into
adc
es
movsl
and
es
mov
lds
sub
dec
cmpb
lock
test
icebp
inc
inc
sbbl
sbb
sbb
testl
es
andb
and
lcall
pop
cwtl
xchg
xchg
iret
mov
pushf
or
jecxz
jbe
xchg
int3
or
jle
xchg
ljmp
jae
mov
cmp
or
and
enter
mov
hlt
jg
sbb
dec
sub
adc
stc
dec
pop
ljmp
and
cmp
or
jb
and
push
les
add
adc
mov
mov
adc
xchg
outsl
or
push
in
pop
jl
fld
les
ds
xchg
pusha
mov
lods
push
xor
jp
outsl
ss
mulb
filds
push
fbld
adc
xchg
stos
mov
les
mov
sbb
pop
adc
subb
jl
insb
test
push
push
stos
mov
lahf
rcrb
or
mov
out
and
sbb
inc
test
pop
inc
adc
loop
adc
lods
adc
adc
adc
xor
pop
inc
push
adc
loopne
sbb
inc
pop
jecxz
loopne
iret
and
jo
ss
mov
add
addr16
addl
fmull
push
shll
jmp
mov
hlt
push
jle
and
lea
int
test
sub
lds
lcall
sbb
shll
rorb
push
jp
test
mov
pop
inc
rolb
inc
rorl
lods
push
mov
dec
data16
pop
sarb
push
inc
pop
push
ljmp
pop
sub
cs
sub
and
loopne
jge
push
stc
je
int3
ljmp
popf
dec
scas
cmpsb
rcr
adc
mov
in
mov
dec
gs
mov
fisttpll
dec
add
fs
loope
adc
mov
sbb
pop
lods
in
fmull
or
gs
subl
imul
push
test
jmp
enter
cmp
jmp
jl,pt
fistps
rorl
cltd
cmpsl
aam
push
mov
test
lea
in
in
mov
and
icebp
in
cltd
orb
inc
and
stc
dec
and
outsb
and
pusha
cmp
add
out
and
xchg
sbb
cmp
dec
jge
sbb
loopne
insl
loopne
lahf
call
xchg
pop
out
lds
into
cmp
arpl
sbb
or
mov
xor
outsl
int
cmp
cmp
xor
test
add
mov
arpl
fisubs
in
mov
sub
inc
dec
test
push
mov
fcom
pop
and
popa
cmp
ss
cwtl
pop
std
out
xchg
call
stos
in
in
jl
and
dec
int3
cmp
jmp
test
inc
add
mov
or
faddl
pop
sub
out
fdivr
test
int3
inc
mov
xor
xchg
pop
pusha
pop
inc
test
repnz
rolb
xor
loop
adc
adc
out
inc
mov
push
or
int3
test
pop
jo
jb
movsb
sub
xchg
jl
add
call
sbb
insb
cwtl
cld
lock
les
mov
add
inc
pop
push
pop
push
xor
add
pop
sbb
les
sub
fs
jl
adc
int3
insl
add
loopne
fdivrs
nop
stos
jne
inc
inc
cmpsb
fildll
mov
out
nop
cld
inc
add
sub
adc
sbb
push
rolb
les
jno
movsb
inc
fcoml
pop
sbb
loopne
std
push
nop
push
clc
add
je
inc
sahf
xchg
add
or
adc
pop
sub
mov
sub
dec
jo
sbb
movl
ljmp
xor
mov
sahf
sub
mov
pushf
test
loope
adc
and
mov
ret
test
mov
cwtl
adc
movsb
mov
std
sbb
inc
movsb
jnp
popf
and
xchg
mov
jnp
fwait
jg
jno
sub
jp
lock
scas
pusha
loope
sbb
mov
push
adc
sbb
sbb
scas
jg
pop
dec
dec
dec
push
push
mov
pop
loope
fsubrl
out
dec
push
xchg
rclb
push
xorl
jno
or
popl
jecxz
and
fnstenv
int3
leave
dec
aad
lock
sbb
loope
pop
jae
lret
mov
lahf
pusha
cmpsl
rol
hlt
xor
sbbl
cmovg
in
shll
test
xor
push
pop
mov
lods
push
and
ret
mov
out
xchg
popa
pop
mov
out
lret
les
mov
aam
out
push
ljmp
mov
sbb
jp
inc
adc
mov
fadds
ja
stos
rcrb
std
cmp
loopne
mov
push
push
icebp
jmp
daa
adc
insb
lods
pop
das
mov
ja
jae
push
je
add
inc
add
xor
cmp
adc
bound
mov
jnp
pusha
gs
mov
sub
data16
add
popf
addr16
aad
nop
fmul
addw
loop
dec
xchg
test
stos
fldcw
pop
cmc
imul
fnstcw
xlat
jae
mov
test
and
es
and
adc
jp
and
int3
sub
push
add
das
and
mov
inc
adc
dec
cltd
and
into
dec
lret
and
mov
sbb
outsb
or
nop
adc
test
sub
imul
fwait
and
jb
inc
inc
sti
cmp
mov
jmp
ds
and
inc
add
sub
scas
and
push
loopne
std
add
sub
js
jo
adc
pop
push
inc
pop
jo
cmpl
in
sbb
lea
pop
pop
mov
out
adc
adc
mov
scas
fbld
fs
rcl
popf
in
dec
xlat
cmp
pop
gs
push
and
ret
and
js
jl
cli
and
dec
xchg
mov
sub
adc
pop
out
add
clc
pop
clc
xchg
int3
subb
loopne
and
push
jno
outsb
push
push
mov
pop
mov
mov
cld
mov
arpl
scas
or
nop
adc
mov
push
or
pop
das
mov
mov
inc
je
sbb
lds
daa
inc
int
or
negb
pop
call
in
jmp
enter
test
shrd
aas
outsb
push
mov
and
and
xor
jle
dec
add
and
lock
inc
mov
scas
stos
inc
loop
cwtl
sahf
ljmp
shl
cmp
mov
dec
mov
lret
xor
push
enter
ret
out
pop
mov
inc
scas
ja
pop
les
pop
lahf
shll
xchg
dec
xchg
fs
xorb
dec
pusha
push
mov
dec
dec
mov
pop
int3
push
sub
mov
in
fnstcw
fisubs
into
xchg
movsl
jecxz
sub
jno
sbb
adc
mov
push
test
inc
dec
jl
push
sbb
pop
test
cmp
add
mov
mov
mov
rcr
and
vucomiss
loopne
jo
lahf
test
dec
lods
inc
popa
adc
push
mov
sbb
jp
std
sbb
or
adc
in
dec
xor
pop
xchg
pop
sub
cltd
and
addr16
int3
scas
xchg
aas
scas
repz
pop
movb
imul
inc
or
jg
push
adc
pop
cmpsb
stos
mov
mov
ffreep
pusha
cmp
lods
mov
aad
xchg
hlt
mov
mov
mov
clc
je
cli
insl
add
jge
std
in
jle
inc
lods
loop
into
xor
into
xor
adc
imul
dec
inc
out
mov
ljmp
lods
out
mov
push
ss
and
xor
int
outsb
mov
std
push
in
nop
inc
sub
cmp
fmuls
add
xchg
cmp
xchg
or
jo
mov
pop
dec
ss
sub
sub
out
inc
cmpsb
stc
repnz
scas
or
out
addr16
dec
ret
pushl
into
adc
and
add
mov
test
mov
xor
cmp
les
lods
jno
ljmp
push
pop
lcall
loopne
xchg
or
push
mov
fcmovb
xor
mov
adcb
jb
movsl
out
push
sub
push
outsb
sub
jno
stos
mov
cmpl
lret
insl
aad
std
push
out
aad
bound
jb
mov
pop
mov
test
insl
jmp
lret
inc
mov
int3
pop
or
or
ret
push
lds
xor
xor
nop
sbb
int3
cwtl
sub
mov
daa
imulb
mov
imul
sbb
mov
sub
loopne
lret
push
test
pop
xor
sbb
repnz
or
sub
xchg
push
pop
aad
popa
int3
arpl
mov
jge
js
pop
inc
imul
sub
popa
iret
cmp
jae
stos
adc
inc
cmpsb
jb
inc
pop
pop
adc
add
pop
ljmp
test
jle
shrb
cmp
nop
rorb
mov
loope
push
stos
aad
cmp
sub
cmp
lods
lods
negb
rcrb
negb
mov
add
sub
lcall
dec
aas
bound
inc
inc
fwait
es
cmp
nop
adc
fcompl
mov
xlat
es
push
and
mov
mov
add
or
push
movsl
test
mov
pushf
nop
adc
inc
roll
and
sarb
xor
daa
and
outsb
or
sub
push
push
test
out
insl
cmp
cli
pop
add
loopne
jne
in
jecxz
push
inc
add
in
push
xchg
add
testl
and
cmpsl
sub
popa
sbb
mov
pushf
lods
mov
sti
aaa
or
adc
lods
xchg
sub
test
insb
pop
push
shlb
or
inc
jne
mov
adc
enter
sbb
ja
sub
mov
out
cltd
pop
mov
test
out
sub
dec
out
mov
pop
in
hlt
lret
or
fcomi
pop
sbb
adc
sbb
daa
fwait
loope
push
and
and
lcall
lock
xchg
push
nop
dec
mov
rolb
mov
push
sub
sub
shrl
xchg
adc
jecxz
jns
sub
je
push
cwtl
inc
mov
push
inc
scas
cmpsl
and
outsl
and
shlb
fwait
dec
adc
seto
jmp
pop
frstor
sub
push
nop
sub
fs
sbb
or
sbbb
dec
imull
sbb
jge
fsubl
mov
rcll
xchg
imul
adc
rol
leave
xchg
cld
push
push
and
xor
inc
dec
rol
cltd
in
arpl
or
out
push
mov
xor
popa
mov
imull
mov
call
jbe
out
or
les
test
pop
add
int3
push
rcrl
pusha
in
jo
xor
fwait
sub
stos
sbb
jbe
mov
mov
pop
jae
sub
aaa
xlat
jae
mov
daa
sbb
mov
inc
mov
fldl
cli
aas
and
adcl
test
aas
cs
jecxz
outsb
daa
fldt
adc
ret
add
fs
cmp
addb
sub
or
jns
and
sub
sub
jo
adcb
inc
add
fbld
jge
inc
jg
test
repz
and
scas
mov
or
pusha
jle
arpl
and
repz
push
dec
push
sub
test
movsb
outsb
fcompl
xor
in
inc
dec
and
sbb
or
jbe
sbb
arpl
mov
inc
and
pop
or
sub
outsb
loope
scas
mov
adc
fldenv
es
cmp
and
jge
fs
test
push
or
pop
ret
out
sub
jge
add
cmp
lea
xor
loope
add
cltd
xlat
ficoml
test
xor
sub
cli
es
es
add
aas
sub
push
cmp
dec
notl
jmp
jl
add
sub
lea
mov
sub
rclb
ss
mov
pop
mov
popl
and
xor
sahf
mov
inc
popf
nop
sbb
sub
xlat
aam
mov
cld
test
jnp
mov
fdivr
sub
inc
lods
mov
rorl
sbb
fs
movsb
jl
mov
daa
repz
pop
insl
sti
mov
pop
dec
addr16
jge
inc
pop
cmpsb
dec
shlb
pop
jo
mov
and
sub
pop
incb
test
test
xchg
jnp
sbb
mov
inc
pushf
test
fisttpll
ds
cmpl
pop
lods
je
movsb
pop
jo
loopne
pop
cmovne
add
les
repnz
sahf
fistpl
fcompl
mov
fsts
pop
sub
movl
mov
out
fisttps
jae
add
outsb
leave
out
jnp
dec
cmp
fildll
sub
pop
je
lcall
nop
add
and
xor
inc
hlt
jle
adc
orl
xchg
stos
fcomp
push
shll
leave
stc
stos
andb
xor
out
xchg
adc
inc
sub
fiaddl
pop
adc
jnp
mov
in
or
mov
out
jle
lods
pop
jle
or
push
or
insl
cld
adc
fmuls
pop
sbb
sub
and
gs
js
icebp
sub
inc
mov
outsl
and
fldcw
cwtl
inc
sbb
jmp
test
push
repz
outsb
pop
mov
mov
jo
mov
cs
cmpsb
push
out
std
cmp
stos
add
rclb
repz
add
clc
mov
test
inc
popa
out
or
pop
aam
or
adcl
sbb
adc
cli
pop
iret
mov
xor
outsb
addl
test
in
xor
outsb
and
ja
daa
pop
xchg
lock
mov
insb
mov
cwtl
adc
push
rcrb
aad
sub
jne
xor
popa
pop
xor
mov
inc
lret
or
jb
repnz
loopne,pt
sub
jo
rcl
dec
sti
jns
and
lods
fidivs
das
aam
push
jge
nop
leave
add
out
jl
je
and
mov
and
jne
nop
shll
cmp
je
je
or
push
jnp
cli
test
jb
ret
adc
ds
push
out
sub
jp
lds
pcmpgtd
fisubrs
sub
jg
mov
ret
xor
mov
scas
aam
nop
into
mov
and
aas
mov
push
mov
insb
mov
push
sub
lcall
mov
stos
test
dec
aad
sbb
cmp
sub
aas
mov
ljmp
push
cmp
or
scas
inc
out
push
xlat
mov
pop
cmp
fiaddl
jg
xor
jp
and
adc
andl
push
or
mov
das
push
cltd
iret
lds
lgs
js
outsb
mov
push
arpl
cmp
icebp
cmp
pop
inc
fs
mov
push
push
dec
cmp
insl
in
jb
les
movsb
negb
xlat
fucomip
mov
pop
inc
cli
loopne
and
mov
cmp
xchg
popf
jno
mov
outsb
pop
cltd
xor
stc
jns
or
ss
jp
fwait
mov
sbb
or
hlt
inc
dec
shl
sahf
or
jge
jb
fcompl
stc
divb
cmpsl
mov
mov
cmp
mov
sti
or
push
ja
and
cmp
jb
jo
pop
nop
and
rcll
mov
inc
pop
push
mov
mov
and
call
mov
sti
push
addr16
mov
mov
jne
adc
dec
jb
scas
jl
lcall
shll
fstps
movsb
pop
in
daa
pop
and
xchg
push
mov
nop
mov
ds
loop
and
cmp
dec
pop
sbb
jno
xchg
mov
mov
das
out
and
pop
lock
cld
push
outsl
mov
adc
aas
mov
add
sub
call
gs
test
push
pop
je
daa
mov
fs
adc
sbb
inc
mov
movsl
addr16
mov
ret
xor
xlat
adc
jb
or
pop
jo
rorb
daa
inc
inc
stc
clc
fsubs
enter
cmpb
rorb
mov
adc
mov
out
xchg
pop
inc
shrl
in
loope
lea
jl
ror
cltd
mov
inc
xchg
jg
pop
push
outsb
add
jno
inc
or
add
mov
fucom
cmpb
incb
mov
imul
mov
push
cmc
pop
inc
ds
mov
fwait
stc
es
in
mov
mov
iret
mov
in
and
test
and
pop
sub
out
daa
int3
out
push
dec
sbb
xchg
test
sub
insl
testb
adc
dec
push
andl
inc
mov
in
jge
popf
les
xchg
je
pop
cmp
jge
shrb
mov
sti
pop
push
fwait
mov
inc
nop
lods
and
sbb
inc
clc
cltd
je
or
dec
sbb
push
out
int3
pop
movsb
test
call
push
je
inc
pop
and
pop
fisubrl
scas
cmpsb
or
addr16
roll
fucomi
push
int3
dec
movsl
fwait
fs
and
sbb
test
rcrl
shll
push
or
jp
pop
mov
ret
and
and
stos
sbb
mov
xchg
icebp
jl
or
and
push
sub
lret
rolb
movd
mov
imul
mov
jns
sub
fidivrl
and
lds
cli
jle
shlb
adc
xor
inc
mov
xor
push
test
mov
adc
lahf
lret
mov
or
cmp
gs
jae
sub
in
lods
outsb
push
add
gs
adcb
jmp
push
inc
in
jecxz
jbe
sub
inc
mov
movsl
sub
jbe
sbb
cmp
or
xlat
imul
lock
outsl
cmc
lahf
insl
sub
fs
std
daa
imul
sub
pop
xchg
sub
test
dec
incl
sub
js
outsb
pushl
xor
jl
jp
mov
cs
adc
js
leave
aas
imulb
movsl
mov
and
mov
dec
popf
push
cmpsl
sub
out
sbb
lock
ss
lahf
into
xlat
xchg
repnz
mov
jno
xchg
lret
pusha
loopne
add
fcoml
inc
mov
shlb
xor
mov
sbb
in
rcl
mov
lcall
ficoml
dec
inc
shl
test
jbe
roll
int
jns
lret
and
inc
enter
outsb
xor
orb
mov
xor
fidivs
jmp
cmp
addr16
mov
fbld
jne
dec
fucomp
sub
add
cmp
or
fldcw
ss
shlb
daa
jo
pushw
orb
repz
int
dec
mov
cs
fnsave
stos
nop
jbe
adc
xchg
das
add
ja
mov
cld
std
loope
popf
xchg
pusha
and
dec
jge
cli
cmp
push
rclb
mov
inc
fdivrl
xchg
inc
int
mov
sbbl
jl
push
xor
roll
inc
push
not
pop
add
loop
xchg
mov
mov
mov
mov
inc
orl
sub
dec
jno
xor
mov
mov
or
popf
xchg
sub
adc
sahf
stos
imul
test
jae
pop
xlat
jg
mov
adc
ss
cmp
mov
ror
aam
into
xchg
mov
adc
sub
cmp
lods
mov
sub
xor
lods
dec
sbb
xchg
adc
repz
dec
inc
test
hlt
in
xor
adc
test
mov
inc
and
xor
sahf
push
or
mov
jecxz
push
lds
sbb
ja
pushf
daa
scas
adc
push
ret
dec
and
dec
pop
stos
mov
pop
cmp
push
adc
loopne,pn
sbb
and
hlt
xor
xor
and
mov
cmp
stc
mov
outsl
push
pop
pop
jae
inc
ja
pop
arpl
stos
mov
imul
sbb
lea
movsl
pop
adc
jbe
cli
arpl
fistpl
xchg
shlb
fimull
repz
and
jno
test
jae
test
jecxz
or
sbb
bound
ret
and
insl
adc
leave
sbb
movsl
inc
lret
push
fs
stos
jb
cltd
pop
out
test
loope
jns
sti
daa
jg
inc
lods
cmp
cmpsb
dec
add
cltd
cmc
mov
xor
test
mov
aam
mov
pop
outsb
loopne
sub
loop
test
xchg
sub
fnstsw
sahf
and
arpl
mov
lret
push
mov
shl
frstor
mov
mov
ficompl
cmc
clc
inc
nop
push
pop
test
xor
mov
dec
pop
mov
adc
test
dec
outsl
xchg
sti
xchg
jg
sub
sbb
xor
mov
cmp
push
sbb
push
or
call
jmp
sbb
ljmp
lahf
in
in
imull
cltd
dec
xchg
xor
fstp
ret
push
pushf
sbb
pop
jmp
push
jp
cmp
test
sub
or
enter
ljmp
mov
jno
das
ds
mov
cltd
hlt
test
mov
in
push
jp
sbb
das
call
mov
nop
lret
sbb
loope
dec
clc
clc
mov
ret
icebp
pop
push
arpl
jb
ds
mov
pusha
test
pusha
ret
mov
jnp
jno
das
addr16
in
out
out
mov
push
cli
pusha
pop
ret
leave
shll
mov
xchg
dec
repnz
arpl
cmp
mov
adc
inc
fs
repnz
subb
ret
sbb
push
dec
addr16
scas
sub
cmpsb
or
cmpsb
or
jb
and
pop
hlt
in
and
in
adc
mov
cmp
mov
aad
xchg
and
dec
push
pop
in
bound
or
pop
scas
or
jae
movb
rcl
outsl
and
loope
mov
mov
mov
hlt
jne
add
push
or
mov
jo
movsl
out
adc
inc
mov
push
sbb
cmc
mov
mov
xor
dec
decb
mov
sti
pop
mov
dec
jge
loopne
in
into
scas
add
call
mov
lcall
xchg
les
loope
int
dec
cltd
loop
das
pop
loopne
xor
shrb
mov
mov
fstpt
jnp
test
xchg
cmpsb
push
mov
aad
mov
insl
insb
pop
in
mov
movsb
ret
js
push
mov
std
inc
sub
or
aaa
xchg
push
cmp
sti
shufps
nop
mov
add
and
add
dec
pop
add
mov
sahf
mov
jno
cmp
inc
es
inc
add
mov
idivb
mov
or
icebp
mov
adc
arpl
popf
jo
in
repz
inc
fldenv
xor
or
ja
sub
loopne
dec
mov
cmp
sbb
fisubs
ja
push
pop
pop
in
loope
mov
xor
sahf
add
ja
or
addr16
iret
mov
movsb
or
mov
cmp
cmpsb
mov
test
dec
add
mov
in
mov
into
lret
and
into
mov
into
andl
jns
jmp
and
or
add
fidivrs
sbb
aaa
xchg
in
popf
xor
cmc
sbb
and
andb
xchg
jmp
ss
push
test
test
add
dec
fadds
and
gs
cwtl
inc
popa
jno
rcl
xor
mov
bound
cld
or
mov
fdivrl
lds
push
or
pop
iret
sbb
xor
sbb
sahf
test
roll
enter
fcompl
test
imul
sete
or
cld
leave
xor
cmp
mov
ret
stos
mov
push
ss
out
jp
cmp
out
sbb
insb
sub
das
xchg
ud1
and
xchg
cmp
arpl
aam
enter
roll
int3
inc
int3
jne
xor
in
gs
fneni(8087
mov
jle
leave
jp
ja
unpcklps
add
orb
adc
aaa
xor
loopne
lea
out
das
fstpt
jno
dec
cmpsl
pop
js
add
ljmp
pop
das
inc
icebp
or
pop
mov
gs
int
test
dec
sub
inc
xor
lods
sbb
repz
cmp
add
cwtl
mov
jmp
in
or
cmp
jno
add
rol
movsb
or
jl
xor
inc
adc
dec
sub
mov
pop
js
mov
or
lcall
dec
orb
xchg
cmpsb
in
faddp
popf
call
mov
cmp
ret
push
ret
lods
dec
pop
adc
rol
stos
add
lods
cmp
jge
cmp
inc
data16
icebp
cmp
daa
rcrb
test
pop
mov
add
lret
push
fcmovb
jmp
sarl
cmc
subb
push
ja
je
icebp
scas
mov
test
in
jnp
push
insb
stos
popf
dec
ja
sbb
or
xchg
inc
insb
add
or
sub
bound
ja
lret
or
notb
shr
std
sub
add
dec
ret
pop
pushf
stos
mov
and
popa
cmp
mov
test
test
in
aas
leave
xor
cs
cmp
adc
mov
je
add
pop
aad
cs
fsubr
outsb
in
add
stos
adc
fwait
mov
fisttps
xchg
cmp
aad
ret
loopw
or
pop
andl
fisubrl
add
or
and
xor
frstor
adc
ret
arpl
lods
outsl
sub
ret
in
xchg
dec
sub
enter
andb
fabs
inc
ret
xchg
dec
in
test
fdivs
loopne
in
xor
or
and
ret
insb
and
add
stc
xor
ds
fiadds
add
test
sub
testl
movsb
inc
movsl
pop
out
xchg
or
jno
xor
andb
push
sbb
cwtl
add
imul
sbb
ds
mov
and
adc
negb
or
xchg
sub
xchg
aam
jge
mov
ret
inc
fs
sbb
mov
leave
jno
loop
pop
ljmp
xchg
out
popa
cmp
test
mulb
sub
test
and
rorb
or
ja
fs
cmp
cmove
dec
popf
sub
push
and
jb
mov
add
lds
iret
addr16
xor
cmc
jl
pop
xchg
popa
mov
jno
fldl
out
fwait
push
mov
ljmp
outsl
out
pushf
push
int3
jl
sbb
test
dec
mov
sub
test
in
mov
roll
mov
jb
sbbb
mov
xor
mov
out
mov
jb
and
loop
ds
mov
addl
jle
scas
imul
adc
in
inc
fsubrl
addb
fnsave
and
add
xor
hlt
and
je
or
lcall
jne
nop
inc
test
adc
inc
mov
sbb
cmpsb
pop
dec
shl
cmp
ljmp
mov
jo
imul
push
test
fwait
test
test
pop
push
dec
dec
pop
cmpsl
addr16
adc
ljmp
push
stc
loop
rclb
fsubrs
movsl
std
cmp
pop
iret
jl
sub
push
and
add
sbb
mov
jo
mov
jl
testl
sbb
cwtl
cmp
t1mskc
mov
fstps
pop
jl
fsubs
xor
mov
pop
add
inc
dec
movsl
push
out
stos
cltd
in
cmp
xchg
adc
mov
xchg
imul
sub
jne
jo
dec
xor
inc
cmpsb
rol
test
pop
dec
shrl
stos
loop
or
fisttps
and
sub
or
cmp
cmp
fwait
adc
test
jle
shrl
test
nop
loopne
mov
pop
flds
and
pop
rolb
mov
fisubs
hlt
loop
dec
mov
vmovupd
ljmp
jmp
add
pop
or
xor
movsb
fidivs
and
es
xor
sub
loope
js
in
shll
or
inc
mov
jne
andb
test
lds
or
arpl
adc
repz
jge,pn
int
gs
pop
cs
int3
fiadds
adc
xchg
stos
stc
addr16
rol
ljmp
adc
ja
ret
sbb
or
aam
jae
in
lods
iret
inc
add
cli
mov
adc
pop
mov
cmpsl
cwtl
push
daa
in
jle
fsubl
movsl
mov
push
outsl
leave
test
push
adc
ljmp
or
int3
ret
jecxz
sub
or
or
arpl
js
sbb
mov
and
lret
cli
mov
lds
mov
pop
ret
addr16
mov
pop
dec
mov
je
nop
sbb
loopne
aam
dec
pushf
ffreep
les
add
and
fiaddl
jecxz
test
bound
out
pop
call
mov
pop
add
mov
mov
mov
rcl
jbe
in
or
push
popl
inc
ljmp
push
cmp
lahf
shl
test
pop
mov
jb,pn
jl
pop
js
outsb
insb
cli
sbb
test
adc
insl
xchg
and
in
cmpsb
jg
shll
mov
sbb
push
push
into
call
out
jmp
mov
lret
adc
imul
popa
sbb
mov
jb
and
mov
ret
and
pop
aad
in
xchg
pop
mov
rorb
in
jb
or
add
lds
xchg
and
push
pop
inc
fisubrs
in
jb
adc
jbe
inc
incb
add
rcll
sub
lret
stos
sub
cmpb
scas
cwtl
cs
xchg
push
mov
push
add
out
ljmp
dec
mov
in
int3
inc
adc
adc
pushf
sbbb
or
sub
movsl
outsl
adc
rol
test
mov
pop
pop
jno
lret
and
frstor
dec
jge
jns
jecxz
in
and
call
subb
in
sub
xor
and
and
jg
outsb
imul
cmp
je
or
adc
push
push
push
jne
outsb
pop
cmpsb
mov
pop
xor
fs
inc
push
sbb
sub
push
nop
sbb
test
into
or
in
shl
ret
and
cmp
shrl
repnz
adcb
cmpsb
ret
lods
ffree
lahf
xchg
add
stos
push
lods
loopne
sub
lock
mov
shl
add
es
inc
pop
lods
push
fisttpl
in
mov
mov
fldcw
mov
outsl
pop
ja,pn
jo
addr16
test
sahf
mov
dec
jbe
dec
mov
loopw
mov
inc
in
loopne
sbb
jnp
dec
lock
fs
inc
jbe
add
cli
ret
es
xchg
out
shlb
ret
jo
pop
xor
and
cmpsb
and
push
sbb
mov
mov
adc
sub
xlat
inc
mov
loopne
add
jp
int3
cmp
test
sahf
xchg
movb
or
addl
pop
rcrl
sub
fdiv
sbb
mov
jge
lock
pop
loope
jns
out
scas
roll
sbb
popa
sarb
xor
test
xchg
fcompl
mov
insb
movsb
out
inc
jge
or
leave
andb
cmp
sub
rorb
or
test
sahf
fiadds
or
pop
cmc
lret
repnz
mov
inc
aas
push
jns
sti
dec
aam
xchg
xchg
stos
dec
push
jp
pop
loope
popf
add
das
ja
movsl
in
testl
notl
xchg
push
je
inc
lock
pop
jecxz
push
ds
lods
pop
inc
jmp
jp
xchg
sub
pop
mov
xor
test
sub
pop
aad
ficompl
out
pop
es
int3
stc
loope
sbb
std
imul
mov
xlat
call
xorb
mov
aad
call
adc
and
rorb
negl
cmpsl
jo
or
outsl
sub
sbb
lods
mov
xchg
popa
or
fisubl
mull
in
and
jge
andb
bound
pushf
cmp
pop
xchg
cltd
mov
cmp
adc
test
add
nop
test
xor
cs
fiaddl
adc
rcr
rol
adc
out
pop
pop
jae
jbe
in
test
dec
aam
loop
add
outsl
and
jno
les
into
ret
sbb
ffreep
xchg
ds
movsb
mov
stos
add
cmp
testl
jl
add
cmp
shrb
sub
sbb
popa
inc
aam
adc
icebp
es
test
jle
push
je
mov
mov
pop
fdivl
dec
push
or
mov
arpl
add
xor
fimuls
xor
pop
lods
je
insb
mov
and
test
jge
adc
add
pop
jmp
repnz
outsl
xor
int
xor
addr16
iret
or
jnp
cmp
mov
inc
push
push
fcmovu
mov
pop
stos
daa
outsb
and
dec
ljmp
or
pop
in
gs
call
negl
mov
adc
subl
pop
int
stos
xor
ljmp
scas
lock
inc
mov
lock
inc
jne
add
cmp
out
in
sbb
dec
cmpl
cmp
jge
xlat
mov
mov
orl
out
xorb
int3
mov
dec
add
lock
or
xchg
in
dec
out
in
shll
dec
test
mov
and
pop
or
fdivrp
jo
cmp
inc
enter
mov
and
cld
shlb
ret
sahf
and
or
pop
mov
or
xor
cmp
jne
lret
add
sti
dec
ret
dec
mov
add
outsb
in
or
xchg
pop
leave
shl
repz
popa
adc
das
loope
or
pop
ficomps
adc
outsl
rorb
sub
push
sub
subb
pop
or
out
and
and
bound
cmc
rol
addr16
cmpsl
pop
dec
in
mov
lcall
daa
adcl
pop
fcomp
lds
and
xor
and
add
inc
jns
and
sti
aas
add
test
jno
sbb
jae
add
and
iret
test
cmp
adc
cmp
lods
add
dec
data16
iret
fdivp
lret
jo
mov
sahf
and
shr
cli
add
in
or
call
lock
inc
sub
and
loop
dec
ss
mov
sub
cmp
stos
pop
push
test
popa
adc
xor
jno
ret
inc
negb
call
pop
bound
and
xlat
decl
loope
into
gs
and
xchg
or
jecxz
xchg
sti
push
adc
cmp
loop
sub
add
repnz
cmp
cmc
stc
dec
in
testb
sbb
pusha
outsl
enter
andb
mov
cmp
int3
insl
pop
dec
jnp
sub
push
push
call
stos
frstor
mov
xor
stc
leave
stos
jb
pushf
cmpsl
pop
popf
scas
xchg
and
and
jg
leave
lcall
aas
std
mov
bound
xor
rcrl
xor
loope
push
rcrb
xchg
fs
in
and
inc
icebp
aad
mov
int3
sub
jns
adc
imul
int
sub
mov
mov
hlt
in
mov
jo
sahf
outsb
pop
adc
rol
add
cmp
jbe
in
fcompl
mov
test
in
and
clc
xchg
dec
out
inc
scas
jae
mov
mov
rcll
pop
aad
inc
jo
popf
adc
xchg
adc
pushf
adcb
andb
orl
testb
dec
test
in
callw
or
in
lahf
imul
sub
in
add
shl
xchg
or
sub
push
pop
mov
iret
push
inc
hlt
xchg
pop
pop
sub
rol
fs
xchg
jo
jmp
mov
jb
call
pop
and
or
ret
mov
pop
outsb
pop
popfw
outsb
pop
jns
ljmp
stos
push
cmp
sbb
sub
aas
adc
std
xor
das
and
in
dec
dec
out
insb
push
ljmp
push
sub
or
int
mov
and
xchg
sub
out
aas
inc
jb
leave
cmpb
lret
fistpl
sub
movsb
xchg
leave
ds
stos
mov
add
jno
pop
call
cmp
cmc
sbb
clc
xorb
ja
sbb
push
loopne
mov
xchg
xlat
stos
mov
aad
ret
cmpl
sub
inc
inc
and
insb
test
adc
les
add
pop
pop
pmulhuw
push
sahf
mov
mov
in
push
mov
mov
xor
jmp
jb
fisubs
shll
pop
lret
imul
jmp
bound
jp
inc
mov
mov
not
cli
inc
xor
mov
shr
lahf
cmp
subb
adc
push
dec
iret
repnz
sahf
sbb
sub
lods
fistl
cmp
push
mov
subb
cmp
cmpsl
cs
xchg
xchg
sbb
shl
push
imul
out
mov
xchg
in
in
add
loope
cmp
push
add
out
dec
adc
pop
jno
inc
add
mov
int3
xchg
sub
cs
fsubl
ds
test
xchg
aad
fisubrs
sub
push
push
sbb
add
xor
dec
inc
mov
in
test
pop
mov
pop
test
mov
cmc
or
or
ret
or
and
mov
lea
sub
xor
mov
mov
imul
addl
repz
sbb
add
in
mov
jne
sub
mov
sbb
ror
xor
cmc
sbb
mov
xor
roll
add
fucompp
test
dec
jae
test
ljmp
mov
bound
inc
outsb
add
stos
push
out
add
adc
shl
arpl
jne
sub
and
push
jnp
data16
mov
inc
test
test
addr16
nop
fiaddl
divb
ds
mov
xor
jmp
xchg
enter
add
fidivl
clc
adc
add
cmp
pop
xchg
lock
cmp
sub
ja
mov
popa
lret
fsubl
test
mov
jne
nop
add
pop
sub
sbb
pusha
cld
and
xor
ja
cmp
adc
test
std
sbb
popa
or
pop
psubusb
pop
test
cmpsl
int3
add
and
cltd
pop
adc
lods
jp
cltd
test
mov
jl
add
arpl
imul
jae
xlat
and
lea
pop
sbb
inc
and
daa
fmulp
rcl
imul
dec
cmp
jle
inc
pop
aas
scas
inc
fs
add
pop
movsb
inc
nop
inc
out
ss
int
je
mov
gs
cli
sbb
test
and
jns
rcrl
mov
divb
mov
push
jae
or
xchg
inc
in
aam
jecxz
in
mov
dec
sub
loopne
pop
fidivrl
xor
scas
or
lods
sbb
mov
stos
jmp
cmp
popa
adc
pop
fwait
fwait
in
popa
in
in
cmp
in
add
lods
dec
stos
ret
jnp
cmp
je
mov
inc
pop
adc
mov
lret
mov
mov
jmp
lcall
bound
ret
sbbb
sub
cmp
mov
ret
stos
jae
lock
adcl
mov
in
sub
xor
cmc
repnz
or
inc
jne
lods
clc
cltd
rcr
jbe
out
pop
insl
pushf
jb
bound
inc
push
lret
mov
jge
sub
jecxz
pop
les
lcall
push
inc
aas
mov
pushf
leave
lret
js
imul
mov
inc
sbb
jge
stc
ret
addr16
push
pop
mov
adc
cmp
clc
notb
pop
push
xor
lds
insb
jg
sub
movsb
pop
rorl
sbb
out
insb
rcrl
out
jg
xor
imul
outsl
fsubrs
or
stos
fwait
ret
mov
pop
pop
data16
lahf
es
les
mov
stos
jbe
sbb
imul
cmp
and
test
int
movaps
xor
dec
pop
fsubs
inc
cmp
test
in
mov
ja
and
pop
test
sbb
fimull
add
repnz
imul
cmp
push
pop
sbb
bound
xchg
test
lds
in
adc
xor
sbb
sbb
mov
lods
jae
nop
or
js
sub
mov
fcmovb
cmpb
sbb
scas
xor
aam
lods
movsl
or
pusha
push
daa
pushf
jbe
daa
outsb
mov
pop
inc
sbb
pushf
in
xchg
fidivs
ror
mov
or
shl
or
fbld
or
push
cwtl
adc
bound
dec
out
ljmp
jg
fistpl
mov
ret
xchg
dec
push
faddl
cli
xor
push
ret
push
cmp
int3
sbb
inc
sub
mov
mov
cli
fwait
sub
and
jno
dec
in
nop
cmp
cmp
cmp
ss
sarl
mov
cmpsl
shl
out
test
push
call
mov
inc
ss
jle
mov
lods
mov
push
rcrb
adc
xor
in
roll
mov
inc
call
inc
sub
mov
fadds
mov
ret
into
add
jae
jecxz
or
push
cmp
in
pusha
adcb
into
fs
jno
lds
xchg
mov
inc
jnp
lds
xlat
lods
stos
and
leave
push
xor
iret
ret
adc
mov
hlt
mov
and
and
inc
or
inc
sub
daa
and
xor
popa
ret
pop
xchg
shrl
dec
loope
pop
pop
jo
andb
xorb
btc
cmc
and
fisubrs
imul
rcrl
pop
repnz
mov
mov
arpl
fmul
or
mov
mov
add
mov
pop
scas
jb
sbb
xchg
add
ljmp
rcrb
mov
imul
inc
aad
add
scas
push
adc
add
nop
pop
push
mov
in
lock
xor
push
pop
stos
rolb
stos
and
aam
pop
fmull
fcompl
out
sar
or
les
and
push
lock
cmpxchg
repz
insl
and
sbb
sbb
cld
jl
adc
les
inc
jle
mov
xchg
inc
les
icebp
hlt
in
mov
in
orb
in
jl
and
dec
int3
cmp
jmp
pushf
shlb
stos
xor
fdivrl
jle
test
pop
mov
in
inc
sbb
loopne
add
out
jge
ret
xor
movsb
sbb
jl
mov
inc
push
fsubrl
xchg
pushf
and
shr
decb
rolb
hlt
push
in
add
add
lods
std
pop
les
mov
enter
fsubrl
cmp
int3
jl
rolb
fcompl
test
sar
or
rolb
fs
mov
xchg
pop
pop
fsts
cli
or
jmp
nop
mov
pop
jno
incb
push
sub
aam
add
mov
cmp
lcall
loopne
cld
and
lcall
jl
inc
test
mov
insb
sbb
sarb
les
jno
mov
fdivrl
lcall
mov
hlt
mov
jl
sub
mov
pop
stos
rolb
stos
cmp
rolb
filds
pop
mov
in
inc
in
push
pushf
push
cld
push
add
cwtl
jge
ret
push
and
and
dec
cld
xor
js
lods
stos
or
faddl
pop
sub
out
xor
movsb
enter
clc
push
or
add
test
fwait
rolb
xor
inc
xchg
adc
nop
les
xchg
out
sbb
les
jne
cmp
enter
pop
movsb
pop
outsb
test
cmpsb
sub
jl
in
mov
push
mov
pop
repnz
sub
sub
xchg
int3
mov
jo
insb
insl
pusha
cld
jl
adc
les
xor
xchg
nop
inc
call
in
mov
int3
fs
out
add
pop
sub
push
inc
lea
inc
push
pushf
mov
xor
pop
and
jl
movsl
test
int3
mov
clc
sbb
call
inc
les
mov
add
ficomps
inc
sub
mov
pop
or
test
shlb
add
aam
fdivr
mov
inc
stos
xorl
dec
pop
stos
sub
sbb
dec
lock
pop
and
loop
adc
adc
les
test
and
fsubrl
cld
mov
and
les
cltd
xor
inc
xchg
fbld
inc
xchg
push
mov
lret
pop
xchg
push
sbb
cld
je
cmp
insb
stos
push
xor
pop
jbe
inc
in
pop
sbb
loopne
cld
les
out
test
and
rolb
stos
cmp
pop
pop
xchg
mov
lods
out
and
mov
clc
inc
or
in
push
sbb
mov
jo
repz
adc
adc
jl
jl
adc
int3
and
loopne
fdivr
movsb
ror
movl
fildll
scas
nop
pop
adcb
in
add
pop
sbb
cli
test
sub
jbe
inc
int3
mov
insl
fs
add
pop
les
inc
jb
movsb
pop
outsb
xchg
cmp
pop
and
cwtl
call
loop
out
test
and
dec
sbb
fwait
jl
mov
xor
in
and
aam
push
xchg
test
pop
fldz
and
mov
push
cld
push
or
add
cwtl
in
popa
cld
inc
shrb
adc
ffreep
pop
push
nop
fsubl
sub
add
aad
fcompl
test
add
cmp
lcall
jl
cld
test
fstps
std
sub
mov
push
test
and
fdivrs
test
mov
and
shrb
adc
call
inc
xor
lret
addr16
mov
mov
mov
pop
lods
pop
or
jl
int3
test
loopne
xor
movsb
insl
enter
clc
lcall
inc
inc
fcoml
shlb
sub
pusha
jns
div
sbbl
lods
pop
or
jl
les
fcompl
test
int3
cld
mov
cmp
stos
mov
gs
sub
pop
sub
pop
add
jl
leave
test
int3
lods
and
sbb
call
inc
xor
mov
add
add
dec
ljmp
pop
ds
int3
adc
out
add
loopne
fadds
push
int3
push
mov
xor
sub
imul
inc
jns
pop
loopne
lds
aam
pop
fmull
and
shr
adc
call
push
call
add
dec
and
cld
xor
js
mov
adc
pop
pop
xchg
insb
xor
out
and
mov
clc
inc
add
arpl
inc
pop
push
pop
mov
add
out
sbbl
sbb
push
cwtl
test
push
insl
cmp
rol
sub
movsb
stos
insl
xor
pop
mov
out
mov
hlt
sarb
sbb
cli
cmp
push
int3
mov
inc
sbb
pop
stos
sub
test
fdivrl
jle
test
pop
adc
call
inc
add
xchg
repnz
int
into
sub
mov
pop
stos
shrb
fsubrl
push
faddl
pop
movsl
out
enter
cld
inc
or
lock
lock
pop
fidivrs
test
pusha
insl
mov
xor
mov
sbb
lods
inc
or
fcompl
nop
int3
adc
out
add
fadd
xor
push
and
mov
add
test
sub
iret
add
int
clc
inc
fildll
pop
out
nop
sbb
out
sbb
push
push
cmp
enter
pop
movsb
pop
bound
inc
jl
sbb
sbb
nop
add
push
insl
pop
cld
sub
dec
test
inc
fbstp
xchg
js
cmp
leave
push
sub
fsubs
pop
sahf
test
mov
pop
jl
add
inc
into
fistps
cli
nop
adc
pop
test
insb
cwtl
les
jge
adc
int3
test
inc
pop
je
jb
mov
jl
add
call
sbb
insl
mov
clc
sbb
das
nop
in
mov
xor
dec
cmp
add
pop
loopne
movb
dec
lods
test
int3
mov
insb
sar
ret
lock
fs
lods
xor
fiadds
push
pop
push
sub
add
popa
sub
sub
int3
js
cmp
enter
movsb
ror
les
movsl
xor
inc
mov
stos
stc
movsb
xchg
inc
lock
pop
or
testb
cmp
and
loopne
xor
mov
enter
stos
cltd
xor
xchg
fbld
nop
push
xchg
pop
inc
aad
ret
pop
incb
jl
pushf
test
insb
and
subb
enter
les
xchg
filds
nop
cmp
pop
std
out
nop
orb
mov
in
sbb
sub
mov
mov
enter
fsubrl
cmp
int3
jl
rolb
fcomps
movsb
insl
enter
clc
lcall
inc
mov
jne
fcoml
sub
cltd
mov
mov
pop
loopne
movb
jb
test
int3
mov
insb
cwtl
cld
call
inc
jecxz
les
inc
out
fistps
push
pop
mov
insb
insb
les
jge
add
mov
js
jle
test
outsb
or
and
cld
hlt
pop
pop
push
dec
out
test
push
les
cmp
les
add
pop
xor
jl
lds
fcomps
mov
and
rol
lcall
inc
mov
jno
nop
jp
adc
add
sahf
adc
sub
dec
in
xchg
jg
cmp
mov
xchg
cmp
je
cmp
and
hlt
add
or
lahf
lock
test
test
test
outsb
fst
loopne
iret
xchg
push
dec
lret
test
clc
fdivrl
mov
lds
fdivrs
loopne
add
flds
pop
mov
dec
test
push
das
mov
xor
mov
xchg
pop
setns
mov
decb
test
je
mov
mov
scas
rolb
pop
mov
or
orb
push
decb
mov
aad
pop
jmp
cwtl
fdivrl
xchg
and
push
or
dec
aas
jo
fwait
lods
cmp
pop
inc
pop
pop
sbb
jl
movsl
mov
add
out
decl
mov
push
adc
xchg
stos
sbb
icebp
fisttpl
mov
inc
out
sbb
mov
hlt
iret
adc
imul
push
repz
pop
xor
jae
pop
inc
sub
adc
hlt
iret
mov
jo
int
std
dec
fsubrl
mov
dec
jmp
scas
idivl
lds
out
pusha
adc
push
mov
ret
nop
sbb
inc
cmpb
loop
popf
mov
xchg
sub
insb
xchg
js
cmp
call
mov
test
mov
call
mov
inc
rcll
mov
rcrl
xchg
repz
jp
icebp
jp
pop
fucom
in
jb
cmp
jl
in
jne
mov
ficompl
mov
pop
dec
fs
int3
sbb
pop
inc
xor
inc
sti
mov
xor
enter
icebp
shll
push
icebp
mov
push
ficoms
out
dec
or
insl
cmp
jne
std
ret
insb
inc
push
cwtl
xor
xchg
jb
out
cmpsb
push
pop
jb
xchg
dec
adc
and
pop
rcrb
dec
outsb
lds
imul
dec
push
lret
std
mov
jns
clc
cld
ja
shr
je
dec
cmp
arpl
and
rclb
test
movsb
or
addr16
dec
or
aam
cmp
out
or
aas
iret
xor
sbb
pushf
mov
mov
pusha
cmp
fdivl
mov
jmp
mov
int
in
jge
lods
inc
insl
inc
cmp
xor
std
xchg
cmp
cmp
fwait
cmp
clc
xchg
mov
xlat
adc
loop
xor
out
mov
idivb
pop
mov
scas
xchg
sti
fistl
stos
jmp
cwtl
push
cmp
jnp
test
xchg
cmp
dec
add
xor
jecxz
or
push
sbb
out
std
pop
mov
fmuls
cmp
icebp
push
mov
stc
ljmp
stc
out
js
inc
lret
cmp
dec
push
lret
cwtl
mov
mov
mov
jle
fsubrl
test
repnz
pop
test
cmpsl
jp
mov
ja
les
lcall
xchg
rcl
enter
ret
nop
xor
mov
add
popa
lret
xlat
adc
cmpb
jo
jmp
mov
inc
lock
dec
sbb
test
or
pushf
ljmp
push
loopne
aad
xchg
add
lahf
add
push
int3
cmc
inc
pop
popa
outsb
mov
jmp
xchg
scas
cmp
mov
add
xor
dec
adc
and
xor
sbbb
and
mov
mov
mov
jo
js
jae
sahf
lods
push
out
push
sub
or
sbb
add
dec
or
sub
pusha
sub
mov
test
and
sbb
jae
arpl
jp
sbb
xor
sbb
xchg
sub
xchg
push
jne
cs
bound
icebp
pusha
rol
loop
imul
loope
in
mov
push
add
shrl
or
or
jb
cltd
imul
fmull
nop
out
sbbl
add
cltd
push
cmp
or
cmp
and
pop
add
cmp
push
push
mov
xchg
mov
sub
or
mov
inc
pop
fisubrs
mov
push
xor
and
test
cmp
lods
inc
loopne
push
jo
cmp
dec
lock
scas
mov
adc
test
out
addl
push
dec
inc
cmp
nop
sbb
sbb
lcall
and
fs
dec
lea
or
inc
sbb
lret
pushf
lods
push
mov
mov
adc
ficomps
aas
fs
cmp
xor
lock
das
inc
aam
xor
or
push
scas
pusha
cmp
lods
in
in
sahf
mov
fs
xchg
xchg
push
test
or
pusha
cmp
movsl
fwait
mov
pop
pop
pop
repz
loope
dec
mov
js
sbb
or
cltd
add
outsb
lock
cli
adc
loope
scas
dec
fcompl
call
cmp
xchg
fidivl
in
fsub
repz
mov
or
jge
cmp
cmp
and
test
xor
xchg
push
and
ss
push
push
pop
sub
push
jae
jne
fs
mov
lea
adc
sbb
cmc
mov
xchg
cs
xchg
test
lahf
je
inc
hlt
adc
mov
in
ss
mov
jne
fwait
push
js
push
sarl
lahf
lea
scas
lods
test
mov
mov
xchg
ljmp
mov
sbb
pop
cli
leave
rcll
add
loop
inc
lret
pop
shl
pop
push
sbb
or
and
in
rorb
mov
mov
js
pop
out
sbbl
pop
loop
out
out
mov
dec
fwait
insb
mov
insb
ds
clc
pop
xor
roll
lods
push
xor
mov
fsubs
push
nop
sub
xchg
xlat
test
pop
add
insb
push
rcrl
pop
in
popf
pop
cltd
push
dec
xchg
xchg
loopne
insb
cmp
or
add
add
xchg
out
push
lods
adc
fs
push
pop
aas
push
sbb
in
mov
dec
or
dec
je
fs
mov
mov
les
sbb
in
sub
dec
add
adc
push
inc
popf
movsb
jecxz
add
cld
mov
xor
daa
sbb
xchg
cmpsl
inc
mov
jmp
stc
pop
into
mov
pop
sub
add
xor
lods
dec
pop
bound
pop
sub
push
scas
in
fbld
imul
mov
ret
sub
add
aad
sbb
pop
lcall
arpl
or
push
mov
test
pop
mov
xor
inc
pop
repnz
jbe
dec
sbb
rcr
out
cld
in
jnp
out
ljmp
jnp
js
or
lock
mov
dec
leave
sarb
loop
fwait
inc
lret
test
jb
mov
cmp
leave
cs
jbe
inc
das
sub
mov
daa
sub
not
jle
jo
addr16
fdivrs
dec
xor
int
mov
out
test
std
cld
in
subl
cmp
imul
hlt
aaa
fs
inc
cmp
fs
or
hlt
mov
pop
daa
ljmp
cmpb
inc
in
mov
push
jmp
or
mov
sbb
inc
or
and
cmp
ror
xchg
sbb
int3
mov
shr
adc
adcb
cwtl
inc
push
and
mov
adc
in
test
mov
cwtl
add
xchg
mov
inc
xchg
mov
cmp
divl
repnz
pushf
add
xchg
test
cmpb
inc
dec
lds
inc
xchg
pop
mov
out
sub
mov
ss
mov
aad
mov
int
jge
fmuls
mov
es
mov
adc
cltd
decb
dec
popf
xor
push
hlt
sbb
inc
jo
in
push
add
xchg
mov
or
insl
and
imul
imul
push
inc
and
mov
pop
mov
mov
add
in
push
sti
pop
in
inc
xor
xor
jbe
push
jbe
arpl
and
fcmovnb
push
in
pop
gs
shrb
inc
inc
in
out
incb
or
std
test
and
stos
rcll
adc
repz
lock
sti
jge
les
xchg
ret
and
ljmp
cmp
dec
loope
mov
cmpl
sar
popf
mov
add
sub
stc
and
push
std
cltd
dec
dec
daa
gs
inc
mov
ljmp
mov
imul
inc
mov
lcall
int
add
test
jne
shrl
or
rorb
enter
add
loopne
push
adc
cli
ds
lea
lea
add
sub
add
jne
cmp
fwait
adc
adc
movb
xchg
xor
pop
loopne
in
mov
add
cmp
xchg
shl
sbbl
pushf
out
cmp
mov
cmpsl
lea
cmpsl
test
mov
sub
dec
add
cmp
push
in
lds
arpl
mov
mov
and
rol
sub
aad
push
test
push
stos
sbb
adc
push
adc
js
test
sbb
popa
movsl
in
out
sub
test
enter
xor
popa
push
add
cmc
arpl
loop
adc
dec
xor
mov
xor
sbb
cmp
and
aad
lods
sbb
ret
addl
mov
std
push
test
je
int
jp
sti
push
adc
popa
and
push
clc
out
les
push
jne
jbe
fidivs
adc
jge
jmp
jecxz
repz
mov
push
inc
or
ds
dec
adc
sbb
or
aad
adc
scas
ja
xchg
sbb
cltd
pop
lds
mov
test
test
pop
shrb
add
xchg
or
orb
data16
sbb
jns
shrb
cmp
in
shll
or
xchg
lcall
call
jecxz
outsl
outsl
das
icebp
cmp
xchg
lret
aad
cwtl
sbb
loopne
in
leave
pusha
scas
jg
into
cmovg
hlt
loope
roll
push
in
inc
sbb
xchg
push
test
in
fidivrl
mov
sarl
mov
xchg
dec
mov
push
ds
mov
lret
mov
or
adc
in
sub
shlb
stc
sbb
iret
sbb
cld
popf
ds
push
dec
mov
sbb
sbb
adc
test
adc
or
cmpsb
add
test
sbb
mov
dec
pusha
mov
lret
or
xchg
fdivrl
xchg
or
cltd
inc
jmp
mov
sub
pop
ljmp
or
xchg
and
dec
push
jno
push
insb
push
adc
mov
shl
xorb
dec
cmp
scas
call
push
push
dec
test
out
mov
daa
in
pusha
pop
shlb
lret
dec
test
xor
clc
and
iret
sub
and
sub
test
or
add
inc
mov
mov
pop
mov
mov
xchg
lcall
inc
fldl
pusha
scas
or
add
jb
mov
rolb
mov
push
cli
insl
out
xchg
xchg
sub
outsl
iret
xor
arpl
cmp
dec
or
jo
and
push
adc
xchg
imull
lods
ljmp
mov
shlb
pop
fcmovnb
lret
cmp
jl
mov
leave
insb
add
sub
jge
add
inc
aam
mov
int3
into
add
or
cmpsb
mov
ljmp
cmc
dec
stc
addr16
test
jmp
es
push
add
fidivl
and
sub
mov
xchg
push
out
shrl
insl
mov
xchg
pop
sarl
pop
cmp
push
je
imulb
mov
pop
loopne
lret
jmp
and
push
jle
mov
pop
and
sbb
fstpl
mov
repnz
rcrb
lret
pop
sbb
and
idivb
jl
push
scas
mov
into
lret
or
aas
xchg
scas
and
scas
outsl
xor
bound
bound
mov
inc
or
scas
cmp
mov
sbb
nop
mov
dec
jp
add
pushf
fstpl
add
fxch
xor
xchg
ret
fbstp
rcr
pop
das
hlt
dec
mov
dec
loope
xchg
subb
adc
sbb
pop
pop
shll
add
stos
xchg
push
xchg
movsl
add
arpl
mov
jae
bound
shll
test
inc
inc
pop
xor
inc
pop
pop
xcrypt-cfb
cmpsl
xor
inc
fidivl
mov
cmp
push
hlt
adc
push
cmpb
pusha
adc
addr16
out
js
jle
jns
int3
int
mov
out
lds
es
das
push
out
or
mov
ret
out
aaa
push
bound
pushf
cmp
int
aam
lods
out
icebp
sub
cmp
xchg
cltd
mov
in
sbb
call
addr16
cmpl
emms
adc
mov
jmp
andl
mov
push
mov
jl
popaw
arpl
fwait
imul
mov
jecxz
leave
mov
cmpsl
daa
xlat
xchg
mov
ret
mov
leave
mov
hlt
in
pop
sahf
sbb
dec
mov
xor
in
idivb
cli
daa
sub
add
enter
lcall
mov
push
and
out
daa
cmc
or
insl
std
data16
or
lods
stos
xchg
push
add
sahf
xchg
jne
pusha
xchg
sbb
jne
xchg
lods
test
ret
sbbl
scas
out
adc
out
adc
test
xlat
inc
inc
jbe
mov
les
inc
fstps
xchg
mov
pop
add
sbb
sub
dec
mov
adc
loope
push
scas
das
sarb
or
sbb
adc
inc
jl
sti
test
and
xchg
adc
adc
add
stc
jge
movsb
jp
inc
outsl
jge
in
fcompl
js
mov
inc
mov
inc
inc
adc
aad
dec
jl
and
add
mov
sub
push
cld
aaa
mov
pop
sbb
and
lods
test
mov
lock
cmp
sbb
popl
shr
test
shll
jge
jb
jae
xor
push
jae
inc
sub
shrb
add
cwtl
cmpsb
imul
mov
dec
mov
insb
push
in
mov
shll
push
inc
movb
dec
out
pop
jecxz
and
pop
xchg
shrl
dec
int3
jnp
mov
mov
cmp
sarb
dec
jge
push
mov
xchg
push
scas
mov
in
mov
dec
faddl
add
dec
rolb
jecxz
shll
in
addl
jnp
cmp
adc
or
imul
sub
jle
into
ret
cmp
std
cld
or
sbb
fisubrl
dec
sbb
mov
add
add
out
add
in
push
jecxz
cld
inc
popa
dec
call
scas
push
fidivs
pop
adc
fimuls
mov
ds
and
mov
jl
push
cmp
inc
mov
push
loope
push
pop
fsts
add
fcompl
sahf
mov
fistpl
cld
pop
sbb
pusha
scas
data16
pop
add
mov
sarb
stos
std
inc
or
dec
push
inc
fldenv
test
lret
sub
imul
rclb
adc
pop
pop
sarl
push
js
xor
inc
shll
pusha
add
fcompl
and
fcmovnu
std
dec
sbb
sub
std
inc
dec
inc
jecxz
jge
std
inc
fldenv
repz
loope
fldenv
test
dec
mov
rcl
enter
pop
jl
mov
sub
rcll
cmp
push
lods
or
cld
movsb
or
jne
fldcw
test
lods
pop
fcmovbe
cwtl
mov
cld
and
std
inc
fstps
push
aam
sub
sbb
inc
push
cli
mov
ret
pop
cld
sbb
je
js
pop
rorl
push
lcall
mov
fwait
add
mov
jne
cli
jo
jns
pushf
scas
jp
cmp
lock
repnz
mov
gs
mov
mov
test
int
aas
outsb
inc
or
jno
ljmp
inc
push
int
insl
dec
xor
dec
bound
lea
popa
adc
jg
mov
sub
add
fmull
push
push
les
add
lret
jno
cmp
mov
and
bound
les
cs
jmp
fidivrl
icebp
mov
xor
pop
jl
stos
loopne
mov
ficoms
pusha
mov
sbb
push
repz
fistpl
cmp
cmp
fs
aaa
mov
ljmp
outsl
scas
roll
shlb
fidivrl
stc
shlb
xchg
xchg
scas
mov
dec
xor
sti
daa
clc
pop
minps
cld
stos
in
ret
mov
lret
ret
sbb
out
dec
pop
pop
lret
insb
std
sahf
xchg
sub
xor
mov
dec
jnp
fnstenv
int
and
rcrl
movsb
jle
loopne
imull
mov
pop
xor
insb
mov
sti
cmp
shl
mov
sub
clc
fiaddl
mov
jnp
mov
sub
mov
pop
pop
pop
icebp
and
xchg
push
pop
out
sub
adc
dec
movsl
fsubrl
xchg
push
shll
imull
sbb
xor
andl
sub
js
xor
sar
mov
sub
sbb
idivl
jge
cli
and
pop
icebp
sbb
enter
ret
mov
or
std
cli
sub
add
sbb
out
push
adc
insb
pop
mov
mov
sub
clc
and
mov
push
in
pop
mov
sbbl
cmp
or
into
lods
std
inc
fldenv
lods
dec
add
shrl
imul
xor
sbb
daa
xchg
shll
dec
hlt
outsl
add
les
lcall
loope
aad
mov
and
fisubrs
scas
es
xchg
popf
lods
sti
sarl
push
push
push
cmpl
out
rcl
push
lahf
movsb
sbb
ja
subb
sub
xchg
lods
insl
inc
mov
sbb
jle
rcll
mov
dec
sub
in
pushf
lods
mov
dec
cmp
fimuls
insl
jns
jp
pop
adc
cmp
jg
xor
in
push
out
std
call
scas
xchg
or
pop
enter
push
lcall
int3
int
xchg
pop
xchg
shll
scas
jg
popa
mov
sbb
xchg
inc
outsb
mov
mov
js
xor
subb
enter
js
sbb
les
jle
faddl
mov
sbb
sahf
mov
and
shrb
inc
inc
xchg
cmpsb
call
jnp
cmpsl
sti
mov
iret
aas
xor
les
das
lret
sub
or
inc
outsb
push
sbb
xchg
lock
icebp
inc
cld
daa
cmp
pushf
push
push
test
inc
dec
and
fcmovnu
scas
rcll
xchg
pop
ret
stc
dec
into
xor
rclb
sub
cmp
mov
sub
insl
mov
jge
out
dec
les
lods
insb
cmp
ret
sub
pop
xchg
data16
rorb
aaa
sbb
das
mov
cmp
pop
adc
jo
push
in
xchg
out
add
pusha
arpl
pop
in
mov
mov
cmp
jo
dec
add
lret
movb
aam
mov
xchg
xor
inc
jp
mov
push
scas
push
ja
cli
add
insl
sbb
and
and
cli
fisubl
pushf
les
and
cli
or
sub
test
sbb
les
adc
xor
mov
popa
neg
lods
cmpsb
movsl
aad
lods
and
jno
inc
and
pop
xor
sub
pop
inc
xchg
mov
scas
cwtl
push
mov
cli
sub
je
out
mov
xchg
pop
xchg
das
dec
fdivs
aaa
inc
mulb
retw
scas
clc
mov
and
fdivrl
out
add
dec
int3
adc
add
mov
lahf
clc
push
fs
incb
and
push
cs
jne
lea
or
fisttps
pop
xor
sti
psubusw
push
test
push
inc
mov
and
adc
cmp
cmp
jg
cltd
ja
xlat
in
into
push
out
push
lcall
cmp
aaa
sbb
loope
lcall
popl
je
push
loop
jmp
cmp
arpl
lea
js
sbb
lahf
cld
dec
insb
xchg
aaa
and
movl
and
mov
push
sbb
push
ret
iret
add
roll
rorl
mov
loop
in
jo
lods
imul
into
es
ret
iret
test
or
test
rolb
lods
inc
adc
mov
into
sub
in
aad
sub
shll
inc
rorl
jge
jnp
cmc
pop
stos
mov
sub
push
push
jecxz
mov
call
xchg
pop
sbb
xchg
xchg
mov
enter
fstps
xlat
roll
lods
xor
cmp
xchg
add
sahf
cwtl
faddl
outsb
sub
mov
adc
stc
mov
inc
sbb
sahf
pop
adc
test
fnstsw
push
mov
cmp
ja
cmpl
cmp
lock
add
lods
pop
in
xor
dec
orb
mov
mov
mov
mov
es
test
mov
in
mov
xor
js
out
mov
push
xchg
and
fmull
aad
addl
int
cmpsl
jbe
add
lds
int3
xchg
sub
mov
daa
jl
insl
mov
add
pop
xor
cmp
inc
lds
sub
cmp
inc
mov
mov
push
and
cmp
sahf
outsl
sbb
mov
inc
sbb
sub
ret
adcl
push
cmpsb
pop
sbb
mov
sarl
push
pop
cmp
sub
ss
lods
stos
cmp
les
push
outsb
cmp
sub
sbb
jns
fs
aas
pop
loope
adc
test
xlat
mov
mov
insl
movsb
pop
jmp
sbb
enter
jge
insl
outsb
fsubrl
ljmp
adc
sub
sub
divl
jp
rclb
cli
pushf
outsb
in
lret
dec
cmp
ljmp
lret
in
cmp
mov
sub
adc
bound
insb
add
daa
push
test
add
addb
fucom
inc
adc
pushf
hlt
push
out
out
push
scas
push
xlat
fdivrl
inc
inc
mov
cmp
jecxz
fisubrl
pop
aam
cld
rcrl
dec
orb
fmul
dec
enter
pop
mov
and
hlt
xor
pop
cmp
fisubs
repnz
repz
xorl
dec
adc
loopne
or
in
fnstenv
fistpl
mov
jns
inc
cmp
ds
push
cmp
and
in
sbb
rorb
cmpsb
jno
stc
insb
negb
xor
shlb
xchg
xchg
imul
push
setle
jb
add
cltd
imul
cmp
mov
push
xchg
sub
pop
push
adc
sbb
cwtl
and
inc
sbb
cpuid
lock
movsb
popa
or
push
imul
lcall
jecxz
scas
out
out
jmp
fdivr
or
mov
loopne
scas
inc
sbb
dec
push
push
add
xchg
jnp
mov
inc
add
pop
pop
cwtl
inc
neg
mov
popf
inc
popf
dec
push
xchg
shll
and
xchg
aam
mov
cld
add
jle
lock
adc
test
inc
daa
xchg
jl
pop
and
pminsw
andl
cli
xchg
and
adc
add
sub
pop
pop
jae
pop
cltd
aaa
add
jl
mov
imul
mov
pushf
cs
cmpsl
shrl
test
sbb
cli
or
insl
inc
test
inc
subb
je
xor
xor
adc
adc
cmp
rcrb
das
pop
jle
enter
push
cmp
add
jo
sbb
mov
inc
lret
sahf
dec
aas
xor
jle
cs
test
fs
mov
or
adc
push
xor
or
or
ret
jbe
in
cmp
movsl
aad
lock
orb
lahf
les
xor
xlat
jb
mov
scas
adc
sub
push
cmp
in
rcrb
test
loopne
sbb
in
lods
lock
pop
sbb
mov
popf
and
js
sub
mov
int3
ss
lods
mov
nop
decb
das
mov
sub
cwtl
inc
sahf
add
add
out
stc
mov
push
cvtdq2ps
push
in
dec
mov
hlt
pop
outsb
xchg
jno
addr16
loope
fmulp
mov
sub
jl
or
je
cli
in
push
icebp
jo
dec
js,pn
add
push
repnz
gs
test
repz
xor
insl
int3
cld
fcmovnb
mov
xlat
lods
pop
sahf
jl
cmp
push
nop
lods
rolb
rol
icebp
rolb
loope
fstpl
vmread
stos
pop
dec
data16
mov
fsubl
mov
jmp
dec
cmpsb
das
mov
or
scas
ret
fcompl
call
movsb
push
notb
add
add
cld
or
popa
gs
inc
sbb
mov
aas
push
xor
lods
inc
faddl
push
call
mov
and
pop
ds
int3
pop
dec
test
pop
jmp
gs
lret
stos
cmc
inc
les
cs
xorb
enter
mov
mov
in
or
adc
sub
push
add
add
mov
jno
mov
push
ss
push
out
mov
gs
xchg
dec
inc
lock
loopne
nop
add
jge
fs
cs
pusha
movl
in
lea
and
fisubrl
and
movsl
popf
mov
jmp
stos
mov
fimuls
pop
shll
add
mov
sub
std
cwtl
repnz
sbb
mov
mov
aaa
xbegin
out
aaa
xor
xchg
inc
invd
dec
cmp
jo
pop
xchg
fcmovnbe
mov
mov
test
inc
jno
cmp
sbb
cli
add
test
xchg
mov
add
and
popa
enter
fcomps
cmpsb
pop
in
push
cltd
push
xor
jl
and
cmp
sub
jnp
mov
loopne
loop
test
inc
js
pop
mov
sbb
ret
or
lea
in
popf
je
lret
mov
adc
sub
in
jno
mov
cmp
mov
addr16
push
or
mov
or
test
mov
loopne
or
jle
jns
adc
lcall
subb
inc
sbb
sahf
mov
mov
outsb
movsb
ja
cmp
cmp
dec
loope
push
lds
sub
push
adc
adc
push
je
ss
jb
mov
pop
and
mov
sarb
lcall
sbbb
mov
popa
xchg
cmp
test
addr16
movsl
rolb
popf
loope
or
pusha
nop
cwtl
adc
pushf
and
rcl
or
xor
sub
adc
call
pop
sbb
shrl
lea
xor
jnp
loope
cmp
inc
clc
call
in
fbld
sub
sub
push
sarl
push
enter
inc
popa
mov
vpmacssww
sub
in
fildll
fwait
loope
add
mov
nop
inc
fbld
imul
mov
ja
push
dec
aad
imulb
jg
adc
jp
mov
scas
mov
out
movaps
xchg
or
xor
lahf
pop
and
fcoms
xor
and
popa
sub
mov
mov
adc
out
inc
add
mov
add
cmp
iret
repz
sub
fildl
aam
xor
cmpsl
xor
sub
sub
cmp
xchg
push
test
ja
hlt
adc
jo
push
enter
or
popa
push
push
mov
xor
in
add
arpl
mov
cli
lahf
test
aas
jae
fwait
test
xchg
fimull
lea
decl
scas
or
lcall
pop
stc
mov
adc
dec
outsb
rorl
cmc
mov
jae
fsubl
fsubs
ret
inc
adc
mov
dec
rclb
das
test
repz
call
test
sub
lea
push
sbb
repnz
int3
jns
or
xor
pop
stos
xchg
clc
dec
pop
into
jbe
call
int
int3
test
push
jae
push
gs
pusha
sahf
xor
cwtl
vprotw
jo
jae
mov
fistpl
addr16
fucomi
push
lods
jns
inc
rorb
nop
sbb
dec
and
js
pop
fsts
ret
lret
xor
shrb
shll
sub
xor
mov
cmp
cmp
ja
or
mov
xchg
repz
adc
inc
cmp
sarl
movsl
jae
clc
fwait
sub
inc
jb
adc
pusha
test
inc
iret
les
repnz
jb
sbb
mov
out
inc
in
repnz
ds
and
sahf
or
push
lahf
lret
cltd
lcall
jne
call
or
lcall
les
lahf
adc
out
and
add
pusha
ret
adc
daa
sbb
sbb
je
addr16
cmp
aas
and
inc
out
push
pop
data16
lcall
push
mov
icebp
xor
xchg
gs
icebp
data16
in
imul
adc
sahf
mov
xchg
cmp
jp
push
insl
sub
fs
sub
adc
cmp
cmp
cmp
fcmovbe
and
sbb
fs
jg
fidivrs
mov
xchg
punpcklwd
into
fiaddl
int
fcmovne
mov
sbb
mov
mov
jb
aaa
mov
inc
jle
in
sbb
loop
call
scas
pop
and
mov
fsubl
out
dec
pop
icebp
mov
jbe
roll
lods
pushf
add
jmp
mov
rorl
dec
cmp
jbe
in
movsb
lcall
mov
fmull
jne
adc
jno
cmp
sub
rorl
xchg
xor
in
cmp
add
outsl
xor
sub
loop
fxch
push
sbb
dec
sbb
adc
push
fcomi
lcall
adc
xchg
mov
xchg
nop
insl
add
jg
and
hlt
sbb
ret
repz
pop
je
sub
add
cli
jno
loope
jecxz
fcompl
es
inc
sbb
sbb
call
dec
sbb
aam
ret
cmp
pop
push
mov
mov
outsl
mov
mov
or
and
xor
push
mov
cmp
xchg
lea
push
leave
dec
loope
cmp
pop
cltd
xchg
and
shrb
in
aaa
mov
jae
xchg
out
push
inc
call
pop
jl
insb
xor
add
pop
dec
mov
ljmp
sub
dec
xor
xor
or
inc
mov
xchg
mov
xchg
popf
adc
mov
cmp
mov
mov
adc
push
lret
sbb
add
cmp
push
push
dec
dec
mov
xchg
mov
daa
sahf
in
fstps
fmull
sub
fucomip
xor
rol
xor
xlat
push
fcomps
stos
mov
pop
add
test
add
mov
test
int3
mov
rcrb
mov
ret
cli
sahf
movl
cmpsb
fisttps
adcb
lock
adc
hlt
inc
pop
and
mov
test
mov
dec
sbb
fcoms
int3
and
dec
sbb
insb
or
fsubrl
cs
pop
pop
xchg
mov
lods
out
and
mov
and
push
adc
add
cwtl
idivl
std
pop
sub
sbb
sub
or
je
cmp
les
cld
fadd
fsubl
cwtl
stos
popf
xor
mov
cmp
nop
push
or
lds
xor
and
pop
xor
les
push
sbb
push
mov
pushf
sub
mov
test
int3
sbb
pushf
sbb
insl
nop
lret
push
push
cld
inc
lock
xor
inc
sbb
rorb
jl
xor
push
fsubl
pop
sbb
loopne
jmp
pop
add
and
repz
push
push
enter
mov
pop
cs
aam
pop
fucomp
xor
mov
and
rcrl
push
or
add
iret
pop
sub
in
lcall
rclb
data16
aas
or
pop
pop
shrl
or
xchg
sub
imul
gs
sub
jbe
push
jnp
xchg
ja
jmp
scas
jnp
fdivrs
push
in
les
gs
lock
outsb
flds
lahf
adc
and
cmp
jae
mov
addr16
jns
jmp
inc
dec
jl
xchg
cmpsb
sub
mov
sub
and
sub
hlt
or
mov
lods
inc
outsl
cmc
sahf
sarl
push
int3
addl
out
jmp
shr
push
pop
aas
ljmp
pushf
test
mov
aam
pop
repz
jle
daa
enter
in
jo
xor
mov
jns
pop
mov
lcall
or
ret
inc
or
int3
add
add
xor
cmp
out
fmuls
xchg
mov
add
add
mov
cli
jno
fnsave
les
pop
jl
fwait
rcrl
push
mov
sub
pop
ret
add
cmp
add
fadds
mov
sub
pop
sbb
insl
dec
cld
cmp
jl
mov
adc
pop
push
xchg
addb
leave
out
push
fadd
sub
push
cs
aam
add
jp
jb
sahf
sub
mov
and
mov
insl
into
cld
mov
shlb
cmp
cltd
xor
sbb
pop
mov
out
mov
hlt
les
fcoml
xchg
sbb
dec
jmp
pusha
cmc
dec
pop
cmp
dec
cld
inc
adc
lret
sbbl
sub
aaa
rorb
in
push
fnstcw
dec
mov
inc
pop
dec
leave
xor
push
es
lods
sbbl
call
sub
mov
test
movsb
and
sbb
subb
inc
and
adc
inc
push
gs
jb
pusha
icebp
and
cmp
scas
adc
or
neg
cmp
push
jns
jl
xor
mov
mov
roll
mov
or
shrl
lcall
or
mov
lret
leave
and
mov
fstps
and
int3
lods
fmul
cs
mov
popf
mov
mov
fmuls
sbb
push
jbe
aam
inc
mov
loope
sbb
push
add
int
sub
adc
inc
adc
cmp
jo
arpl
sbb
les
scas
push
xor
jne
mov
cmp
push
rcl
jg
pop
popf
pop
in
jp
sub
inc
shl
adc
ret
or
adc
pop
cmp
jl
jns
mov
mov
inc
pop
pop
and
shl
push
in
test
xchg
arpl
rcr
lcall
push
repnz
push
jnp
or
pop
repz
push
adc
mov
icebp
add
jge
add
movsb
iret
add
lock
jae
xlat
fcmovu
push
test
call
jmp
mov
rcll
xor
mov
fisubrl
mov
pop
mov
test
mov
mov
inc
fnstsw
hlt
sbb
ds
fstl
loop
sar
mov
test
negb
inc
out
test
test
push
and
shrb
repz
shrl
scas
aam
arpl
shll
cmp
lret
cmp
cli
in
out
jmp
jae
xchg
imul
rcrl
lock
inc
cltd
push
test
jp
sbb
sbb
imul
outsl
cwtl
lret
stos
mov
adc
push
cmpsl
or
repnz
je
cwtl
shll
mov
lcall
sub
inc
fbstp
icebp
mov
xorb
outsl
mov
imul
dec
sbb
mov
nop
xor
test
insb
out
jae,pt
mov
cmp
test
andb
ljmp
mov
pop
mov
jns
mov
pop
lods
addr16
mov
dec
ret
ds
fstpl
or
sub
add
inc
push
imul
fsts
cltd
cmp
fsubrl
jp
add
cmp
test
ljmp
int3
fwait
jmp
pop
push
test
iret
test
fisttps
arpl
add
outsl
stos
scas
mov
xlat
dec
out
ret
mov
imul
mov
push
and
dec
test
mov
in
call
adc
pop
ljmp
sub
add
pop
pop
cli
insb
inc
leave
mov
xor
xchg
push
aam
jp
div
inc
push
push
popa
pushl
loope
jl
xchg
or
add
mov
ja
inc
adc
xchg
jp
cmp
mov
lret
xchg
lret
loopne
pusha
add
push
std
pop
xchg
rcr
fucompp
xor
fsubr
roll
sub
imulb
pop
lret
pop
out
dec
or
mov
pop
jecxz
lret
daa
or
call
sbb
in
mov
gs
mov
sub
shrl
clc
and
shll
jecxz
out
aad
ret
fs
and
or
pop
test
adc
inc
mov
fdivrs
jmp
fildl
out
cli
enter
dec
lahf
movsb
sbb
mov
enter
mov
jnp
add
sub
pop
xchg
outsl
cmp
aad
jge
dec
outsb
mov
push
sub
es
pop
sbb
add
packssdw
ret
sbb
push
test
enter
negl
push
mov
jno
adc
leave
add
xbegin
test
or
sbb
in
xor
in
add
mov
sbb
mov
ficompl
and
inc
push
mov
push
shll
push
adc
xchg
mov
psrad
fstps
jb
inc
iret
outsb
jl
insl
cmpsb
cli
popf
pop
mov
xchg
push
inc
popa
push
xor
cmpsb
sar
sbb
or
xchg
xchg
shll
fisubl
mov
add
mov
xchg
xchg
adc
mov
insb
mov
inc
or
into
xor
jns
testl
out
mov
lret
cmp
stc
jp
mov
cmp
psrld
mov
aaa
movsb
outsl
in
in
sbb
inc
dec
inc
mov
xlat
out
adc
mov
inc
sbb
push
popa
cmp
xchg
push
pop
sbbb
sbb
scas
mov
lods
stos
fadd
cwtl
mov
scas
mov
lds
jle
cltd
cmp
fnsave
inc
add
fcomip
data16
enter
mov
xchg
mov
jge
fs
push
das
popf
mov
mov
lret
mov
mov
mov
dec
arpl
mov
nop
jmp
sub
mov
pop
daa
and
in
pop
test
sub
out
fcompl
lcall
xchg
fcmove
or
jmp
das
push
fisubrl
xchg
sbb
xor
divl
jecxz
cmp
stos
mov
mov
cld
push
dec
sub
mov
icebp
addr16
sbb
jge
ljmp
fimuls
mov
or
mov
int3
xor
das
daa
cmovp
ds
dec
pusha
inc
dec
mov
fs
std
xor
popa
repnz
mov
aam
lods
mov
mov
add
andps
xor
jle
jno
mov
insb
out
shlb
add
fcompl
rcl
es
popf
fs
fs
scas
sub
dec
jo
mov
test
loopne
cmc
sbb
and
cmpl
adc
in
adc
loopne
pop
test
cld
fadd
and
cmp
xorl
or
cmp
add
pop
mov
ds
sub
sub
into
mov
sahf
movsl
clc
dec
into
outsl
push
cmp
mov
add
movsb
dec
push
pop
orl
shlb
push
and
pop
ret
mov
inc
gs
dec
sti
clc
das
adc
sub
repnz
inc
mov
icebp
std
sti
fwait
shl
xchg
addr16
cmp
cwtl
icebp
in
xchg
sub
xchg
inc
imul
loop
jo
popf
mov
jl
imul
fiadds
adc
cmp
inc
pop
sub
mov
fistps
inc
fs
inc
mov
mov
push
mov
add
mov
imul
mov
pop
cmp
inc
push
cmpsl
or
sub
dec
pop
inc
xchg
push
jge
mov
addr16
ss
xchg
xchg
adc
sub
adc
loopne
xor
icebp
xorb
dec
dec
jle
nop
lods
sti
jae
cld
jmp
cmp
cmc
xchg
cmpsl
push
and
inc
push
or
mov
and
mov
adc
in
in
pop
sub
jmp
sbb
and
xchg
cli
out
insl
mov
and
cs
xchg
fs
test
xchg
pop
sub
les
ret
rolb
fwait
jo
ss
sbb
mov
inc
outsl
pop
daa
mov
push
imul
pushf
das
lods
dec
add
fs
jp
xchg
cmc
xchg
sub
sbb
dec
sub
iret
jl
add
xor
pop
cmp
iret
out
fsubrl
push
push
sbb
lret
pusha
xchg
cld
in
ret
ss
sbb
ret
fs
subl
icebp
jns
xchg
outsl
in
in
stc
shl
in
jecxz
call
jno
xchg
das
scas
enter
andl
icebp
psrad
jl
push
xor
scas
lock
xor
sti
mov
enter
out
sub
jle
insl
fists
sbb
into
cmp
jge
ja
mov
dec
bound
xchg
sbb
fdivrs
fmull
jge
addr16
inc
iret
in
ds
mov
pop
sahf
xor
mov
or
pop
bound
rcrb
add
stos
in
and
mov
adc
push
in
aaa
sbb
adc
and
jecxz
pop
dec
jg
jmp
jg
xor
xchg
popf
xchg
mov
xor
pop
int3
mov
adc
sub
jo
add
mov
and
jl
aaa
jmp
bound
insl
xchg
cmpsb
test
or
mov
negb
cmc
call
xor
lds
sbb
adc
cmp
jnp
sub
leave
push
adc
bound
and
es
lret
in
dec
hlt
daa
cmp
sub
pminub
pusha
jle
xchg
jnp
pop
stc
mov
in
sub
in
das
pop
les
test
inc
mov
cs
push
bound
mov
icebp
push
add
cmpsl
sub
inc
inc
adc
add
xor
cld
iret
inc
roll
adc
mov
push
cmp
sub
scas
xchg
fsub
dec
dec
out
xchg
mov
orb
mov
sub
outsl
cmp
add
cli
je
loope
arpl
xor
mov
fwait
shrl
xchg
jecxz
imul
pop
cmc
sub
scas
aad
repz
icebp
mov
and
repz
inc
bound
or
push
dec
ret
lcall
scas
jae
rcrb
cltd
xchg
repz
inc
aam
inc
pop
cs
je
mov
pop
cmp
push
fwait
imul
xchg
jo
jo
dec
mov
adc
mov
bound
ret
fdivrs
stc
aas
mov
xchg
mov
pop
push
push
in
add
dec
or
xor
jge
cwtl
out
jo
in
sbbl
fistl
or
std
sti
and
mov
lret
daa
roll
cmpb
ret
mov
mov
sbbb
push
sub
jp
push
cltd
inc
inc
lock
xor
mov
insb
push
inc
mov
test
sub
xchg
fs
or
jp
shl
cmpsl
sbb
add
mov
xor
mov
dec
add
sub
aaa
fadds
push
daa
mov
test
icebp
loope
push
in
adc
cld
lcall
adc
andl
mov
insb
and
pop
jge
mov
std
mov
jle
or
icebp
cmp
ficoms
leave
add
push
in
pop
jnp
jbe
test
fdivr
jae
jae
push
sarb
cmp
jne
insb
orb
aaa
xchg
test
stos
pusha
pushf
aam
popa
in
cld
mov
cmp
icebp
fnsetpm(287
push
lods
mov
push
or
push
rolb
testl
test
pop
jns
cs
incl
fadd
or
or
filds
test
pop
mov
inc
or
sbb
iret
hlt
pop
inc
mov
jge
popf
adc
or
loope
in
inc
mov
xor
hlt
jo
out
mov
cli
jp
sub
cmp
cmp
jge
fcmove
jne
push
pop
sbb
nop
insl
mov
jo
insb
insl
jle
pop
and
pushf
ret
loopne
and
out
sbb
test
cmpsb
inc
jp
lods
int
xor
nop
cmp
stos
lea
testb
negl
nop
sti
clc
pop
pop
out
sar
das
enter
and
pushf
and
xchg
jp
testb
add
pop
cli
jl
pop
test
int3
sub
adc
dec
insl
or
inc
shlb
stos
aad
mov
pop
rcll
scas
std
cmp
mov
inc
push
pop
push
cmp
add
pushf
std
add
stc
or
ret
jl
out
shlb
push
push
push
dec
sub
mov
jbe
enter
and
sahf
pop
ds
insb
push
leave
mov
pop
and
add
enter
outsb
fidivs
je
jb
jge
sub
dec
ljmp
mov
mov
sbbb
insb
pushf
inc
cmp
inc
fimull
inc
xor
and
or
jo
enter
fs
sub
sbbl
push
out
adc
fcos
adc
enter
fcmovb
inc
xor
les
mov
lods
inc
mov
int3
dec
pushf
lret
push
ret
js
jl
shll
push
jb
add
test
fst
inc
jo
shl
lods
sar
dec
cmpsb
in
inc
popa
js
sbb
fs
loopne
cld
repnz
add
mov
popf
mov
into
adc
jl
lea
cmp
ss
arpl
ljmp
repz
jb
insl
inc
xor
lea
sbb
xor
sbb
fadds
test
jo
andl
das
push
in
push
mov
xor
call
insl
and
dec
loop
mov
cmp
mov
jp
sub
mov
popf
dec
ficomps
cmp
dec
mov
outsb
cmpb
insl
es
xorb
mov
lock
add
scas
sub
test
lcall
shrl
cmp
in
lds
inc
cwtl
dec
and
mov
sub
cli
pop
loope
cmpb
out
pop
sbb
sbb
pop
xor
push
test
adc
inc
ficoml
insl
sti
sub
push
hlt
stc
dec
sub
jmp
xchg
xchg
mov
ret
xor
sub
mov
xchg
fisubrs
insl
test
nop
cmpb
sbbb
mov
dec
fimull
movsb
add
mov
in
nop
jae
mov
hlt
mov
push
xchg
scas
push
int3
imul
popa
fstps
pushf
jecxz
adc
sub
cmpsb
inc
sbb
call
pop
pop
out
or
or
aad
ja
inc
mov
mov
push
roll
and
xchg
fsubrs
jp
inc
sub
or
jnp
xchg
sub
bswap
xchg
into
cld
insb
or
imul
fsubl
sub
jae
fimuls
sub
xchg
mov
or
inc
push
add
jp
sarb
aam
test
xchg
add
sbb
mov
aam
js
popa
lcall
in
mov
pop
inc
out
jb
int3
fdivs
cmp
sbb
mov
in
imul
xor
cmp
js
scas
add
pushf
jbe
les
leave
into
test
imul
lcall
cmpb
xchg
test
or
mov
mov
add
cmpb
mov
push
xor
sbb
add
inc
insb
dec
push
pop
lock
sub
ret
loopne
in
iret
mov
cwtl
mov
push
inc
and
push
dec
shlb
fmull
inc
lods
xor
jecxz
add
xor
js
inc
popf
sub
ljmp
bound
add
adc
jo
xor
into
mov
adc
mov
test
ljmp
int
add
fisubl
adcb
test
dec
mov
and
cmp
lret
and
movsb
pop
pushf
mov
sub
int
add
repnz
addr16
jne
int
push
sub
cmp
mov
mov
fidivl
sbb
inc
sbb
call
jnp
es
ljmp
ljmp
xor
aam
dec
in
rolb
jp
bound
xor
add
lds
loope
pop
jbe
pop
inc
mov
sub
lods
fcomps
inc
inc
push
mov
fcomip
insl
loopne
sbb
call
imul
test
jp
mov
xor
loopne
sub
push
cmp
je
add
mov
pop
xchg
out
push
inc
cmp
clc
add
popa
add
stos
xchg
mov
adc
test
mov
fisubs
fstpt
rcrb
mov
fucom
or
inc
jmp
push
dec
sub
or
icebp
sbb
jb
enter
jne
cmc
cmp
mov
adc
popa
or
inc
mov
ror
jns
inc
aaa
ss
call
aam
lret
mov
and
xor
adc
mov
xchg
negl
cmp
leave
jecxz
imul
dec
cltd
lret
xchg
adc
jmp
mov
mov
push
add
rolb
cld
jnp
shl
outsl
pushl
mov
sbb
cmp
nop
idiv
aaa
stos
in
and
lea
les
and
repz
adc
push
loop
in
mov
adc
cmpsl
xchg
loope
lahf
dec
insl
xchg
pushf
mov
lods
sbb
int
test
xorb
pop
mov
jg
adc
lret
jle
mov
in
ss
cmp
fcomi
or
enter
sti
xchg
adc
mov
aas
mov
and
jl
das
notl
enter
jae
fs
scas
sbb
dec
dec
fiadds
sarl
int
in
sahf
or
push
push
cwtl
adc
pop
mov
rcrb
stos
or
cmc
lcall
std
call
lret
add
push
mov
mov
test
and
cmp
aam
jb
lahf
loopne
out
mov
push
fdivrl
jnp
pop
test
and
out
inc
nop
dec
std
scas
sub
in
jbe
mov
loop
shl
adc
leave
xchg
in
and
cmp
push
xor
js
xchg
cmp
adc
mov
cwtl
out
mov
pop
pusha
push
jl
test
mov
test
jno
cwtl
sbb
mov
call
sub
mov
mov
jge
mov
jb
pop
adc
cmp
add
xor
inc
ljmp
hlt
pop
xchg
add
lret
popf
pop
scas
decl
sbb
xchg
xor
xor
or
sbb
cwtl
in
out
inc
inc
xchg
adc
mov
adc
dec
mov
mov
cmp
xchg
xchg
mov
mov
mov
or
push
mov
pop
stos
in
mov
arpl
adc
insl
push
ja
lods
cmp
cmp
leave
stos
mov
adc
add
idiv
scas
xor
sbb
call
jnp
jae
adc
mov
lret
mov
pop
cmc
mov
push
call
add
pop
inc
sub
mov
iret
lds
sub
add
inc
jecxz
inc
push
shll
addr16
ja
pop
jge
in
cltd
mov
idivb
pushf
lock
lcall
mov
scas
mov
push
mov
sbb
pushf
clc
jp
mov
pop
sbb
mov
add
test
sub
lock
loopne
push
pop
cmpb
fwait
mov
