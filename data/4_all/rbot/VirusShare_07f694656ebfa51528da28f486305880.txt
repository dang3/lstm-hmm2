push
arpl
mov
pop
inc
bound
movsl
xchg
sbb
mov
sub
mov
inc
mov
mov
mov
xchg
pop
lahf
js
lret
dec
arpl
and
pop
shl
not
lahf
stos
insl
jae
xchg
pop
rorb
out
lret
adc
push
push
fisubrl
shrb
xor
xchg
push
imul
sub
cld
pop
jno
cli
rcr
mov
cmpsb
dec
scas
aad
push
lret
sub
xchg
mov
mov
jb
mov
mov
addr16
mov
xor
push
xchg
enter
jl
push
dec
dec
ds
xor
mov
push
data16
sahf
cmpsb
pop
arpl
adc
xchg
sbb
and
clc
mov
jne
or
dec
jae
mov
mov
inc
mov
ret
test
xchg
mov
ja
outsl
xchg
push
aad
ss
daa
fwait
jb
sahf
jns
inc
sub
mov
stos
pop
dec
mov
enter
scas
repnz
push
cmp
xor
jle
test
lods
int
jb
inc
cmpsl
fstl
sysret
xchg
cmpb
cmpb
ja
insl
jmp
ljmp
test
pop
sarb
sarb
cmp
pop
leave
ficoms
push
jmp
push
cmpsl
mov
cmp
in
xor
cmpsb
jmp
sbb
xchg
decb
dec
fsubrs
mov
lret
mov
loope
inc
xchg
call
aad
cmp
mov
call
cmp
test
sbb
mov
lds
loop
scas
sub
push
cmp
mov
fwait
mov
jmp
sub
addb
lods
adc
hlt
mov
and
inc
sbbb
and
fldenv
dec
arpl
je
jae
pop
cmp
mov
outsl
test
outsb
lea
inc
jmp
ljmp
mov
call
subl
cmpl
iret
sahf
mov
cmpsl
cmc
mov
pop
hlt
jmp
loope
xchg
lea
loop
in
or
xor
sbb
pop
es
addr16
xchg
mov
jb
shlb
jns
int3
cmp
rol
jmp
shll
leave
sbb
sbb
movsl
mov
adc
xchg
jmp
pop
movsl
xor
in
loop
test
xor
lock
das
cmp
or
in
push
inc
sbb
mov
cmpsl
xor
lcall
enter
test
aad
cmp
out
sub
loope
dec
test
ret
jno
lret
inc
int
push
dec
ds
jb
sub
fwait
sub
pop
or
mov
outsl
je
insb
jbe
sbb
push
lods
push
fidivrs
clc
adc
inc
dec
dec
xor
addr16
fldln2
push
pop
out
push
ss
cld
mov
cmp
pop
push
call
jmp
lods
insb
sub
pop
into
dec
and
lahf
jge
inc
cli
push
dec
arpl
scas
rcr
out
int
mov
sbbb
pop
mov
out
in
out
add
xchg
push
mov
repz
and
das
fldt
dec
in
jne
and
cmp
dec
popa
outsl
mov
stos
clc
orl
stos
push
pop
xchg
xor
cmc
cli
pop
add
gs
cmc
fimuls
fidivl
adc
sarb
addr16
jne
ja
in
mov
mov
xchg
push
out
inc
das
jecxz
and
jns
add
adc
jp
push
stos
test
data16
and
data16
adc
fcomi
push
test
js
sub
gs
mov
adc
xchg
sub
ja
stc
push
adcb
mov
das
popa
std
mov
aam
ret
adc
inc
mov
mov
lcall
adc
sub
add
adc
lret
or
jmp
int
xor
lret
clc
or
sub
test
lahf
loope
dec
adc
mov
mov
popa
pushw
xchg
aaa
cmpsb
insl
insl
arpl
leave
arpl
test
cwtl
xchg
fcoms
jecxz
pop
mov
mov
pushf
ds
notb
adc
stc
mov
push
add
sbb
outsb
insb
outsb
dec
inc
adc
xor
dec
leave
cs
lds
push
jo
pusha
pop
adc
fdivs
mov
sbb
sbb
in
pop
jne
mov
aad
pop
adc
xor
cli
xchg
loope
inc
adc
movsb
lcall
ret
adc
jecxz
xchg
pushf
dec
es
push
jne
lret
mov
mov
xorl
jnp
inc
cld
repz
mov
sbb
int3
mov
jecxz
scas
out
aad
sub
jp
inc
mov
xchg
jg
push
mull
sub
mov
outsl
sbb
or
add
hlt
xlat
or
push
xchg
mov
fdivs
xchg
fs
mov
inc
adc
inc
xchg
adc
adc
leave
fstpl
aaa
adc
bound
jmp
jl
mov
inc
push
addl
dec
pop
dec
dec
ds
dec
ds
adc
insb
cmpsb
sbb
jo
adc
adc
aas
push
out
mov
adc
mov
imulb
repnz
mov
add
xor
callw
sti
dec
addr16
cmp
add
xchg
scas
pop
in
mov
hlt
xchg
jmp
outsl
daa
xchg
mov
popf
xchg
sbb
sbb
sub
aad
pop
ja
lock
mov
sbb
dec
xchg
add
sbb
cmp
sbb
inc
outsl
std
fmuls
dec
cmp
xchg
arpl
cmp
mov
sub
rorb
ret
shlb
movb
sub
cmpsl
or
and
lahf
scas
and
test
cmp
test
and
dec
jecxz
adc
jp
out
sahf
lret
negl
mov
dec
gs
insb
dec
dec
inc
test
or
jp
jle
jle
sub
jo
jns
js
push
xchg
pop
push
push
add
pop
cld
stc
push
pop
jmp
jge
dec
cmpsl
sub
in
adc
push
shrb
xchg
sub
lea
add
nop
clc
call
push
js
or
pop
push
call
out
cltd
sbb
aad
and
jl
xchg
mov
fnstenv
pop
shrl
inc
mov
jecxz
cmp
add
add
nop
cmc
mov
movl
push
movzbl
jg
jns
js
add
add
cmp
std
cld
and
loop
pop
jl
ja
push
add
pop
jne
or
push
test
pop
cmc
movl
loop
jecxz
clc
inc
rol
add
test
push
push
inc
pop
pop
dec
inc
stc
push
jg
shr
pop
mov
dec
jne
or
cld
test
cmc
nop
push
mov
pop
push
call
add
sbb
mov
fwait
mov
fistl
jp
test
adc
cs
push
add
pop
call
ja
cmp
jno
push
mov
pop
add
jae
shl
clc
clc
mov
inc
inc
inc
inc
cmp
push
add
pop
cmp
jns
push
push
pop
pop
cld
lea
or
stc
xchg
cmc
push
add
mov
pop
nop
test
push
push
dec
pop
pop
push
push
add
pop
pop
jb
push
cmp
pop
je
shl
cmc
clc
ja
push
test
pop
add
xor
add
rol
dec
inc
push
test
pop
ja
and
push
pop
mov
shr
test
je
push
push
add
pop
loop
jecxz
aad
adc
repz
or
mov
push
add
add
push
mov
pop
xchg
mov
dec
inc
stc
pop
sti
cmpsb
lret
imul
jp
js
mov
nop
jecxz
jge
jnp
push
iret
jne
jne
iret
mov
xchg
sbb
push
mov
add
pop
xor
push
dec
pop
jle
push
je
sub
pop
cld
push
jo
push
ror
pop
pop
push
mov
xor
pop
jge
xor
push
call
xor
imul
popf
inc
js
cwtl
mov
mull
shll
or
aad
pop
pop
mov
push
mov
push
xchg
movsl
xchg
mov
pop
push
sub
pop
je
push
test
pop
test
add
push
mov
pop
loop
jecxz
xchg
xor
xchg
pushf
roll
test
pop
cmp
sub
pop
or
inc
push
add
jne
jbe
pop
sbbl
es
or
shl
aam
inc
xor
out
push
add
fnsave
push
push
nop
ds
mov
xor
bound
jnp
jmp
push
inc
pop
stc
cmc
clc
dec
jne
jmp
mov
sbb
stos
adc
xorb
mov
shrb
lea
ret
sbb
lods
cli
xchg
cmp
inc
pop
dec
sbbb
jg
insb
orb
mov
sbb
sub
pop
jbe
popf
cmc
mov
mov
sub
add
mov
int
and
push
movzbl
jo
clc
cld
stc
clc
loop
pop
jbe
jl
ror
push
call
lds
movsb
sbb
xchg
je
stos
inc
mov
dec
and
adc
or
lea
fs
data16
dec
dec
jmp
or
movsl
outsl
fadds
lcall
fs
pop
inc
dec
movl
int3
pop
pop
jp
inc
not
sub
ss
repz
push
repnz
dec
loop
hlt
pop
jno
insb
inc
or
mov
sahf
nop
xchg
or
adc
push
ss
out
mov
lret
fsubrp
call
addr16
mov
leave
jno
xor
and
aam
shlb
dec
adc
sti
dec
out
jecxz
xchg
mov
inc
unpckhps
bound
repnz
jmp
or
rclb
push
mov
mov
popf
sub
ds
mov
ja
rcll
sti
mov
mov
mulb
push
pop
ja
rolb
fisttps
adc
mov
sahf
inc
loope
xchg
loope
inc
xor
push
and
lret
dec
dec
sbb
cmp
mov
mov
in
jge
movsl
sbb
cmc
sbb
cwtl
insl
daa
out
vmread
xchg
sbb
cli
sbb
cli
dec
mov
jmp
inc
lds
repz
mov
shl
lea
pop
ljmp
aas
lock
in
aaa
ret
jnp
cmpsb
rorl
sub
testw
cmp
mov
nop
inc
test
ficompl
ret
jae
push
js
cltd
loopne
sub
jp
faddl
push
cmpsl
lcall
fistpll
push
dec
mov
and
push
test
push
inc
push
cltd
ljmp
fldenv
sub
lds
adc
cmpsl
pop
inc
sbb
xchg
jne
or
test
dec
rcrl
xchg
adc
xchg
push
xchg
out
or
stos
stc
imul
sub
pop
pop
shll
xchg
mov
rcrb
lock
mov
inc
sbb
subl
and
inc
loop
inc
lahf
mov
out
ret
adc
pusha
jbe
popa
add
mov
xchg
push
push
xchg
push
mov
push
cmpl
adcl
out
cltd
jp,pt
aam
jmp
fst
jp
aam
xchg
and
adc
adc
fbld
sbb
cmp
xlat
icebp
adc
aas
gs
stc
mov
stc
fucomi
dec
fdiv
xchg
sub
mov
mov
and
inc
jp
cwtl
jp
add
push
jae
xchg
ret
in
insb
push
ds
sbb
sbb
stos
or
ss
pop
ss
pushf
xchg
clc
ret
inc
stc
mov
xor
subl
stos
or
lret
sti
lret
lds
sbb
cmp
sub
dec
aas
sarb
lods
or
sub
mov
inc
or
addr16
addr16
cmp
push
test
add
cli
push
jbe
pop
outsl
sbb
inc
stos
or
jnp
cmp
ficoml
mov
mov
pop
push
cli
test
and
push
and
or
in
and
in
pop
ret
fs
scas
movsb
stos
ret
data16
data16
mov
test
divb
imul
push
xchg
xchg
movsl
hlt
pop
mov
pop
jle
test
push
cwtl
fldenv
imul
mov
pusha
loopne
mov
lret
lret
and
sbb
add
movl
push
push
dec
and
cltd
and
cwtl
je
adc
pop
adc
lds
lds
mov
push
fcomps
and
dec
jmp
lahf
call
dec
push
mov
in
fxam
or
test
daa
aam
jo
cmp
subl
in
scas
shr
jo
cmp
subl
sub
shr
jo
cmp
andl
sub
shr
jo
cmp
andl
sub
shr
jo
cmp
push
and
push
push
mov
cmpsl
push
orl
into
pushl
dec
xor
mov
notb
inc
and
and
mov
mov
fiaddl
mov
mov
stc
sbb
lock
loope
imul
push
lret
sub
dec
cmp
sahf
cmp
or
in
xlat
in
mov
hlt
sbb
mov
ja
xchg
aas
aas
xchg
cli
push
in
dec
stos
dec
push
lods
push
lods
das
arpl
das
mov
fstps
mov
sahf
repz
xor
sbbb
stos
xor
shl
icebp
lea
or
jae
insb
dec
pop
leave
pop
dec
mov
lahf
arpl
sti
aam
mov
call
jmp
cmp
and
out
sahf
mov
gs
sub
xlat
loop
add
filds
sub
scas
inc
add
shlb
in
in
lds
mov
add
into
fdiv
pop
icebp
xor
imulb
daa
pop
mov
pop
xor
cli
and
jns
xchg
jle
push
and
leave
jecxz
dec
push
jno
std
pop
xorl
rolb
in
lods
dec
add
add
xor
pop
repnz
in
scas
cmp
gs
jmp
xchg
add
jbe
cld
cmp
shlb
sub
stc
xchg
ficomps
fidivl
fistpll
stos
xor
xchg
dec
cmpsb
or
add
mov
cmpsb
adc
mov
dec
xchg
enter
pop
jno
incb
imul
jge
cld
push
dec
sub
pusha
mov
and
aad
lea
lcall
fcmovbe
and
cld
mov
lods
orl
cs
or
icebp
imul
cmovl
popf
call
or
sub
and
les
in
or
divl
fcompl
sub
neg
lea
and
in
xchg
sub
les
scas
lret
xor
rorl
jnp
sub
ljmp
outsb
push
inc
xor
pop
lret
xor
stos
cmp
shll
jb
and
popf
xor
cmpsl
push
dec
sub
adc
pop
in
mov
xchg
imul
xchg
ja
addr16
loop
lods
xlat
loope
mov
shrb
sbb
and
mov
sub
xchg
cmp
in
das
jg
pop
mov
sub
popf
inc
pop
jbe
cltd
xorb
sub
cmp
push
addr16
insb
pusha
adc
cmp
inc
loope
or
jo
mov
push
lret
and
cmp
sbb
sub
xor
add
push
test
xchg
inc
fadd
sub
cld
cmc
push
cld
testl
sub
cmp
std
pushf
in
out
xor
fsts
aam
leave
test
stc
xchg
call
pop
push
push
nop
xchg
call
clc
jno
jnp
mov
repz
mov
jnp
add
and
movsb
and
ljmp
or
inc
rcrb
loope
xchg
adc
lcall
pop
fildl
pop
cmpl
outsb
xchg
lret
cmp
xchg
sar
sbb
in
loopne
add
data16
fs
add
mov
movsl
sarb
into
repnz
or
mov
enter
in
cld
mov
dec
iret
divl
aas
jb
jno
jns
outsb
rcll
out
aaa
fldenv
pop
push
jl
jecxz
fldenv
xchg
lock
mov
js
loope
ja
push
arpl
pushf
fmulp
fiadds
int3
and
or
out
sbb
mov
xchg
mov
addr16
leave
adc
cmp
cmp
cli
jp
out
inc
xchg
push
mov
in
stc
sarb
push
out
pop
or
ds
jecxz
pusha
sahf
out
cmp
mov
mov
int3
xchg
add
dec
jnp
add
inc
cmpsb
jne
pop
insl
pop
cmp
imul
sbb
sarl
icebp
sti
les
push
arpl
push
gs
xchg
repz
roll
sub
fs
test
sbb
xchg
aam
pop
outsb
push
dec
es
rcrl
call
pop
imul
out
lods
push
jecxz
mov
lret
in
mov
les
inc
imul
push
enter
pop
or
jne
push
ret
jl
inc
adc
iret
pushf
insl
cld
mov
cs
shlb
mov
rorb
ret
movsl
mov
outsb
aam
mov
adc
xchg
dec
jge
inc
nop
lret
cli
xchg
test
pop
stos
add
cmp
mov
lock
inc
fcom
loop
mov
imul
ljmp
sti
dec
ret
xchg
sub
std
xor
push
in
in
fisubs
jge
xor
clc
leave
pop
sbb
jg
int3
shll
jp
dec
lahf
divl
sbb
popl
push
stos
mov
movswl
outsb
cmp
movsb
out
mov
int3
data16
or
jnp
ret
nop
mov
push
jne
dec
sbb
insl
insb
mov
add
es
test
xor
jbe
push
stos
jge
gs
jns
fwait
std
bound
popf
pop
mov
xchg
nop
mov
push
mov
sar
lods
iret
or
and
shl
mov
adc
and
clc
repnz
mov
icebp
fcoms
mov
mov
fldenv
pop
xor
dec
hlt
cmp
mov
dec
sbb
jae
stc
jmp
cmp
jg
test
mov
adc
mov
or
sub
dec
inc
js
cwtl
ret
fdivl
dec
xchg
sub
xchg
jle
adc
jno
mov
movsl
popa
or
adc
test
insl
ret
lahf
mov
sahf
or
test
xor
dec
xchg
bound
mov
sbb
xor
push
cmp
cld
das
sbb
jl
add
popa
or
dec
inc
sub
mov
js
ffree
dec
leave
mov
mov
movsl
mov
sbb
imul
pop
mov
es
enter
enter
bound
int3
bound
or
adc
xorb
and
das
mov
outsl
cmp
std
cmpb
xchg
adc
jb
sub
into
fsubrs
push
jo
cmp
in
mov
xchg
outsl
xor
stc
fmulp
cmc
pop
bound
test
xor
adc
das
rclb
lea
push
jmp
dec
mov
cmp
push
adc
in
and
push
out
push
jle
pop
call
shl
add
lret
mov
xor
add
shl
shll
in
or
push
pop
jl
mov
inc
lock
cmpsb
aas
std
scas
dec
push
mov
xchg
jecxz
loopne
add
int3
cmp
xchg
or
out
xchg
lahf
outsb
or
and
ljmp
icebp
mov
adc
inc
cwtl
jle
jae
jns
fs
roll
jge
xchg
enter
in
pop
sbb
or
jl
mov
jno
aam
test
loope
xlat
pop
fwait
jne
fcomps
jo
mov
rcrb
loop
stos
clc
imul
sbb
jno
sub
lds
repz
call
xor
cmpsb
xchg
xchg
fucom
mov
std
push
lock
les
push
pop
enter
mov
sbb
scas
and
popf
or
sbb
push
mov
xchg
js
lods
jl
mov
loop
push
xor
cmp
jb
jnp
mov
sub
adc
mov
lret
lret
js
sbb
xor
jmp
lcall
rcrb
loopne
adc
aam
cmpsb
mov
xor
loope
ja
pusha
mov
cmpsb
lock
jmp
mov
dec
push
pop
out
das
jb
pop
stos
ss
mov
loope
jne
dec
pop
nop
jge
outsb
jp
ret
test
jno
outsl
push
adc
fistps
xchg
fcomps
xchg
aaa
xchg
mov
out
jbe
stc
or
mov
fucomp
bnd
iret
mov
add
and
cld
fstpl
lret
pop
sub
sti
in
sub
fs
cmp
inc
sbb
out
pusha
xor
rcll
jne
aaa
shlb
xor
gs
sub
stos
xchg
filds
pop
jno
in
fists
pop
adc
dec
jg
ficomps
jp
pop
and
xchg
jg
pop
add
and
fs
addb
sub
sete
out
cmp
test
sub
add
js
out
inc
test
mov
scas
scas
inc
dec
xorb
ja
inc
xchg
test
bnd
aam
repz
xor
inc
sahf
std
aaa
out
add
cld
cli
xchg
sbb
lods
pop
shl
shr
xchg
jno
in
pop
inc
xchg
orb
adc
lahf
ss
jns
xchg
outsl
jp
dec
push
lcall
jl
stos
mov
mov
movl
mov
add
mov
inc
push
stos
xchg
sub
shlb
pop
mov
mov
js
and
push
aad
and
dec
sub
int
andb
mov
add
cmpsb
insb
mov
bound
push
ret
lahf
jecxz
mov
adc
push
push
jne
xor
dec
dec
ret
xor
or
iret
xor
mov
jae
or
adc
shll
xchg
js
add
subl
sbb
fcompl
test
dec
mov
pusha
add
cmp
jns
in
inc
push
jmp
mov
adc
test
xor
add
add
pop
lds
cmp
dec
aam
add
mov
push
enter
cwtl
jbe
or
aam
mov
lret
int3
push
sub
jecxz
xchg
lcall
mov
in
push
jg
or
ss
mov
xchg
jl
adc
sub
cmp
mov
and
idivb
sahf
sub
out
fdivrs
cmp
xlat
sbb
jmp
pushf
fstpl
int3
jbe
adc
pop
fistps
ret
into
mov
loopne
dec
jne
add
out
iret
mov
xchg
stc
movsb
pushf
xchg
jl
loopnew
inc
shrl
xchg
ja
aam
xchg
jno
or
je
mov
ror
pusha
mov
inc
pushf
mov
das
out
aad
lcall
outsl
cwtl
dec
mov
sub
xlat
jns
pop
add
cld
add
int3
cmp
mov
ss
cmpsb
add
mov
int
add
repnz
pop
mov
ss
and
cmp
xchg
in
xchg
stc
incb
jno
pop
pop
sub
nop
aas
negl
ret
cld
gs
jo
mov
push
fsubl
adc
shlb
adc
lock
das
fs
dec
push
pop
loopne
inc
inc
addr16
es
orl
xor
bound
push
fisubrl
out
pusha
es
into
fbstp
int3
pushf
pcmpeqb
push
pop
loopne
movsb
push
lcall
lds
repnz
popa
mov
idivl
xor
mov
loope
inc
rcll
in
cli
ret
outsb
cmp
cmp
xlat
lock
in
addl
xor
out
pop
loop
stc
sarl
adc
fstps
pop
scas
xchg
xchg
inc
adc
out
mov
jg
je
push
cld
pushf
xchg
mov
dec
dec
punpckhbw
mov
int3
lea
push
pop
pop
push
adc
mov
inc
les
dec
shlb
mulb
cwtl
dec
mov
xchg
push
pop
cmp
mov
add
cmpsb
jbe
jno
xchg
test
test
and
mov
pop
decb
mov
mov
fists
jmp
mov
aad
insl
lcall
mov
out
outsl
pop
in
leave
std
and
pop
sub
jl
add
jo
adc
pop
roll
popf
or
xor
out
pop
cltd
adc
add
lret
push
jp
cmp
mov
dec
stos
xor
sahf
in
test
adc
mov
and
mov
xchg
incb
stos
xchg
pop
and
fdivl
shll
stc
rorl
mov
loope
dec
pushf
ficoms
fldl
int
pop
pop
sub
push
pop
imul
dec
gs
movsl
xchg
mov
shrl
xchg
jecxz
cs
mov
popa
xchg
jmp
fdivrl
outsb
aas
mov
in
lock
xchg
mov
sbb
pop
dec
shr
jo
bound
and
loop
adc
test
jmp
in
inc
arpl
into
test
cld
out
pushf
mov
or
push
mov
and
andl
mov
xchg
outsb
mov
dec
mov
adc
das
push
dec
icebp
movsb
loopne
daa
sahf
shll
out
xchg
xchg
pop
jae
sbbl
xchg
lods
mov
inc
sbb
xchg
sub
xchg
stc
xor
and
aaa
mov
sahf
mov
push
inc
das
mov
xchg
xchg
push
ss
mov
out
or
jg
cmp
loop
movl
loopne
adcb
cld
adc
sub
aas
in
dec
sub
iret
mov
xor
ss
ficoml
adc
pop
movsl
jle
pop
adc
dec
inc
bswap
cmp
lcall
pop
cmp
scas
aad
pop
dec
jmp
push
jbe
fldl2t
pop
push
insb
push
ret
jmp
dec
push
cmp
fsubs
or
mov
jp
fs
incl
insb
popf
sub
jb
ss
cmpsl
pop
jne
jg
jg
xchg
rcrl
xor
jmp
dec
jnp
scas
mov
cmp
jecxz
fdiv
clc
rol
popa
xchg
mov
adc
cmpsb
sub
xor
insl
test
sub
jg
out
arpl
frstor
dec
mov
push
shll
iret
cmp
and
xlat
cld
iret
ds
sub
movsb
test
dec
jg
pop
mov
sbb
int3
daa
into
push
xor
or
mov
jecxz
mov
adc
scas
push
imul
pop
loopne
mov
repnz
or
lea
dec
and
mov
or
jno
push
inc
add
pop
orb
in
jmp
inc
push
lahf
add
test
test
ja
inc
inc
push
cmp
mov
push
xchg
add
sahf
inc
lods
xchg
sub
ljmp
scas
xor
arpl
faddl
lret
dec
fstpt
in
mov
mov
pop
cmp
imul
and
lcall
fldl
fwait
bound
jmp
or
sbb
sub
cs
sar
iret
mov
in
mov
xchg
ljmp
lods
test
fcmovbe
repz
mov
sub
int3
ljmp
dec
js
fnstenv
pop
stos
mov
sbb
push
outsb
leave
outsb
inc
call
dec
rcll
ficompl
sbb
popl
stos
sub
xlat
imul
adc
hlt
sub
pushf
jge
add
aam
int3
nop
xor
in
nop
or
sbb
sbb
mov
insb
lahf
in
mov
mov
rcrb
fcom
sub
stos
jge
pushf
mov
je
dec
adc
filds
aam
ja
stc
std
repnz
in
mov
imul
or
fnsave
mov
sbb
imul
mov
fdivp
stc
xor
sbb
xor
scas
int3
push
dec
testl
xor
xor
cmp
and
cmpsb
mov
mov
mov
mov
jge
sbb
xor
push
xor
sub
stos
mov
in
xchg
inc
pop
mov
mov
sbb
sub
aam
inc
rorb
mov
lds
sti
inc
stos
arpl
cld
nop
adc
jge
shlb
pop
push
aas
mov
inc
loopne
out
jo
add
aad
xchg
push
sbb
push
pop
rcr
sahf
pop
clc
add
or
push
jp
sbb
scas
pop
iret
mov
pop
int3
shrl
fwait
fs
push
sbb
pop
sub
pop
pop
mov
rcrl
add
in
lret
stos
je
mov
xchg
jb
mov
and
jp
push
lods
pusha
sbb
cmpsl
testb
rsm
inc
cmp
cmp
pop
fisubrs
pop
or
jne
cltd
jbe
mov
addr16
mull
cwtl
jle
mov
push
jae
es
sbb
data16
stc
insl
ret
ds
inc
ds
in
push
add
jge
xchg
outsl
mov
inc
js
and
jg
stos
leave
mov
push
test
insb
inc
int
int
popa
jg
jmp
cmp
lock
sub
movsl
jecxz
loop
adc
and
jae
xchg
pop
add
bound
and
icebp
sub
lcall
vandpd
mov
aad
ja
popa
cmpb
sbb
int
xor
push
and
sub
and
mov
and
mov
adc
stos
cmc
push
aad
ret
loope
pop
shrb
push
adc
je
repz
aas
sarl
xchg
mov
lods
lods
lahf
mov
clc
pop
add
jcxz
sub
fiadds
add
xor
jbe
push
in
adc
or
mov
test
sub
jl
or
add
xor
sub
adcb
or
sbb
jnp
bound
mov
jbe
stc
xor
iret
imul
mov
and
adc
leave
add
pop
jl
outsb
dec
addr16
repnz
push
in
dec
out
stc
fnstenv
or
pmulhuw
and
inc
ds
xor
adc
frstor
mov
jno
adc
push
dec
fmul
rol
pop
xchg
jecxz
movsl
cmp
cmp
cld
mov
inc
mov
push
adc
push
lods
sbb
out
sub
pop
cmp
fstl
adc
iret
je
cwtl
imul
mov
rclb
cmp
pop
mov
push
lods
and
adc
lahf
stos
jl
dec
xlat
sbb
test
sub
mov
out
sbb
cmp
cmp
dec
sbb
fldenv
pop
sbb
mov
xor
pop
mov
shlb
dec
iret
in
cmp
adc
jbe
or
fsubrl
cmp
outsl
movb
push
test
addb
xchg
rcrb
xor
xorl
test
repz
pop
cmp
mov
push
dec
pop
jle
inc
rcll
xor
cwtl
out
push
jmp
lret
and
mul
sarl
xchg
cmp
push
inc
sub
outsl
add
mov
dec
push
or
xchg
scas
movsl
sub
call
adc
and
dec
aas
xchg
xor
ljmp
int3
dec
xor
xlat
sbb
cmp
cmc
aas
cmp
call
jno
jb
outsl
test
dec
rorb
ret
ret
cmpsb
or
push
sub
bound
stos
adc
rclb
or
fcmove
or
inc
clc
rolb
or
ror
call
outsb
jb
mov
and
insb
cmpsl
sbb
popa
push
push
call
imul
das
dec
call
mov
cmc
mov
cmp
sbb
ds
or
out
test
stos
push
cmp
xchg
or
sbb
or
int3
xor
mov
or
and
loopne
sbb
adc
icebp
loopne
add
adc
sub
jnp
jle
push
cmp
jno
stos
sub
ljmp
mov
sbbb
fidivrs
aaa
call
mov
or
rep
pop
loope
insl
fidivs
pop
loop
sbbb
xor
add
mov
sahf
lret
inc
add
hlt
fists
std
orb
insb
enter
notb
pop
aad
push
fdivrp
lds
xchg
aas
test
das
mov
daa
xchg
push
addr16
dec
insb
fs
xlat
in
fstl
mov
pop
ret
es
mov
sub
mov
xchg
pop
add
sub
mulb
push
mov
pop
sti
xor
mov
xlat
test
xchg
inc
dec
test
fadds
cmc
dec
mov
add
sub
dec
mov
ja
or
push
add
xchg
ret
jae
repz
jmp
sbb
mov
lcall
dec
mov
dec
xor
in
dec
adcb
dec
idivb
loop
mov
jge,pn
xor
mov
and
sbb
dec
repnz
mov
and
dec
subl
sub
lcall
ja
mov
push
jne
mov
push
addr16
loope
cmpsb
scas
xchg
add
jge
dec
and
dec
in
pop
imul
pop
jne
fmul
sbb
xchg
and
pop
sub
push
ja
icebp
popf
mov
pop
xchg
mov
scas
fwait
dec
add
outsb
and
adc
aas
adc
sub
mov
cltd
sub
cmp
lret
xor
mov
sbb
inc
jb
xchg
or
ljmp
sbb
or
adc
push
in
ljmp
popf
aad
jmp
fistl
je
hlt
fstpl
push
sub
sahf
mov
lahf
jg
push
test
mov
lea
mov
pop
push
cmc
lret
outsb
jns
cwtl
mov
fsubp
dec
push
and
imul
andl
std
inc
xchg
shll
jno
psubw
test
clc
je
dec
repz
cmpsb
pop
insb
inc
inc
and
mov
jle
ret
hlt
xchg
cmp
mov
out
cmpsb
jle
mov
lods
jae
mov
inc
add
aaa
jbe
push
add
aam
xchg
xlat
repnz
mov
mov
sbb
fcmove
xchg
xchg
mov
xlat
inc
mov
xor
pop
cmpsl
cmp
xor
mov
les
repnz
fwait
cmp
push
mov
pop
sti
xchg
notl
into
data16
push
mov
xchg
adc
enter
fisubrs
fwait
cmp
sbb
push
xchg
mov
pop
out
mov
iret
in
neg
mov
jnp
cmp
sub
mov
insb
cmpsl
cmp
shr
aam
lahf
and
xchg
ficoms
pop
in
xlat
sub
ja
mov
xacquire
test
inc
aam
nop
jnp
xlat
mov
pop
out
jne
jle
sahf
test
ret
repnz
jnp
ljmp
dec
xor
cmpsl
xchg
test
cmpb
pop
mov
test
mov
jmp
aaa
pop
adc
int3
fnsave
and
mov
movsb
sbb
aas
jbe
scas
add
cmc
cld
lods
cmp
jp
jg
enter
jmp
popa
fs
pop
cmpsl
les
jno
pushf
icebp
sub
jecxz
fsts
sbb
adc
and
cmp
aam
cltd
cmpsb
imul
mov
insb
mov
ja
mov
push
inc
imul
inc
mov
fisttpll
arpl
call
sub
mov
mov
push
aaa
out
pushf
and
std
mov
cmc
dec
shll
mov
sarb
shrl
nop
adc
stos
add
jp
inc
xchg
xor
xor
bound
adc
jae
sti
in
ud1
dec
mov
and
outsl
push
icebp
add
mov
leave
mov
sar
or
sbb
dec
lds
inc
cmp
xorb
and
mov
aad
add
xchg
ret
lds
add
xor
push
inc
push
or
mov
stc
pop
ret
in
mov
push
lods
jb
push
cmpb
das
out
cmpsl
popa
enter
cmpsb
loope
mov
test
lret
out
mov
and
or
rcl
xchg
out
mov
dec
repz
pop
mov
sbb
stos
and
int3
loopne
ss
fwait
arpl
xchg
push
sbb
adc
testb
push
loope
fucomip
lahf
scas
jmp
adc
lret
mov
cmp
dec
cmpl
mov
dec
and
xor
mov
cli
test
and
insb
pop
xchg
repz
cltd
cmp
loopne
xor
test
das
aam
pop
mov
pop
jle
inc
roll
push
mov
pop
test
dec
lahf
lret
cmp
sbb
xchg
mov
mov
iret
popf
fmuls
orl
dec
lods
push
roll
stos
and
mov
insb
popf
sub
mov
dec
out
mov
aaa
test
nop
test
jae
sti
xchg
fisubrs
jecxz
push
or
int
mov
enter
dec
xchg
std
pop
xchg
nop
fisttps
enter
les
mov
cli
mov
testb
xor
dec
mov
movsb
add
mulb
into
add
push
in
pushf
mov
repnz
mov
xlat
aas
scas
std
lret
xor
test
and
ds
aad
ret
stos
adc
aaa
out
out
sub
cli
jb
pop
arpl
mov
ja
pop
mov
loop
cmpsl
add
xor
lds
add
repz
stos
xchg
xor
mov
cmc
outsb
in
jge
lahf
in
pop
icebp
rolb
cmp
and
sub
pusha
xor
or
shl
add
cmc
mov
push
dec
aam
adc
bnd
lock
lcall
add
push
xchg
mov
adc
or
push
pushf
cwtl
and
flds
out
add
inc
inc
sbb
mov
aad
sbb
stos
popf
lea
stc
jl
push
mov
frstpm(287
pusha
and
xor
dec
cmp
xchg
sub
outsb
mov
jl
or
cmpsl
loop
loop
cmp
inc
push
adc
jb
int
loopne
sbb
fimull
mov
movsl
out
dec
xchg
mov
clc
frstor
jp
lahf
loop
mov
repnz
push
add
sbb
add
mov
push
leave
pop
jne
test
shll
add
mov
scas
pop
mov
xor
pop
mov
fwait
mov
xchg
sub
add
rorl
jge
or
sbb
repnz
in
push
nop
repz
xlat
and
out
cmpsb
insb
jns
in
dec
sbb
jo
int3
aas
aas
call
scas
into
test
push
sub
in
cli
mov
add
ret
jbe
lcall
data16
addr16
jno
and
fwait
dec
jl
lahf
imulb
mov
out
mov
outsb
jl
cmpsb
lcall
in
into
push
and
add
scas
xor
nop
mov
add
sti
pop
imul
addr16
icebp
fidivl
sti
sar
ja
into
dec
push
in
cmp
sti
adcl
or
les
xchg
repnz
dec
cwtl
dec
mov
mov
out
loop
shrl
outsb
adc
scas
jbe
xchg
out
mov
jo
lods
push
sbb
lds
js
jl
pop
xchg
insb
nop
fistl
sub
jp
and
test
ja
sub
fistl
jnp
jno
sub
lret
mov
add
cmp
out
xchg
in
inc
xor
mov
add
or
push
addl
sbb
in
add
and
mov
dec
mov
not
test
int
xchg
cmp
xchg
rclb
xchg
ret
inc
jb
xchg
adc
mov
cmp
sub
pop
adc
mov
inc
cmp
ret
jge
dec
jecxz
loop
sbb
int
pop
mov
adc
cmp
ljmp
dec
flds
scas
jnp
fsub
aam
popa
jmp
sub
cli
add
test
inc
mov
inc
fiadds
sub
jns
fsubs
aad
int3
mov
sub
test
sbb
mov
repnz
in
xchg
shrl
jmp
push
cwtl
adc
pop
fcom
ja
pop
cli
add
stos
mov
jne
inc
dec
std
adc
jg
testl
xchg
lret
pop
jns
push
jecxz
jmp
add
mov
in
lret
ja
push
xchg
dec
inc
arpl
aad
in
out
scas
push
into
or
loope
arpl
add
mov
outsl
fists
mov
pop
sti
out
cli
pop
lcall
sub
loop
lahf
fisttps
mov
xorb
jg
loope
fnstcw
mov
mov
test
mov
pop
roll
ljmp
inc
or
pop
cmp
shr
cmp
push
xlat
cmp
loopew
rcll
cmpsl
lea
lods
sub
aad
movsl
int3
mov
adc
mov
xor
push
adc
cmp
cmp
test
and
inc
std
pop
pop
push
mov
stos
cmpsl
sti
mov
ret
jg
shlb
jae
and
pop
inc
mov
lcall
int3
lods
jne
push
mull
xchg
ljmp
mov
and
or
aad
or
repz
addr16
andl
lods
inc
sub
adc
je
and
out
and
negb
xlat
mov
fbstp
jnp
int
lret
aam
inc
mov
sub
mov
fmull
dec
lock
or
mov
inc
jecxz
xor
xor
mov
jnp
jb
dec
test
and
mov
in
xchg
pop
dec
fs
cmp
sahf
xchg
imul
setb
jecxz
or
xchg
sbb
int
jmp
leave
mov
in
mov
in
test
mov
cld
lock
jmp
xor
push
movsl
lods
outsl
sub
mov
insl
int3
add
sbb
scas
push
and
stos
jp
push
xchg
mov
jae
and
bound
adc
sti
and
test
das
add
lret
rcll
cmp
cld
aas
outsl
seta
test
add
cmpsl
stos
outsb
push
jmp
and
mov
orl
addr16
dec
fs
cmp
in
xchg
es
mov
or
call
ret
dec
pop
int
adc
mov
mov
xorb
popf
pop
int
xor
lret
add
lret
pop
lahf
es
push
lea
inc
nop
mov
rcl
cmpsl
mov
sub
mov
dec
sbb
mov
lods
gs
lea
push
jle
xor
dec
push
xor
fstpl
ret
clc
lods
pop
jmp
xchg
fstpt
sub
xor
or
into
movsb
bnd
outsl
push
std
loopne
fisttps
and
jno
xchg
jecxz
das
inc
inc
ja
mov
shll
cwtl
sti
mov
add
and
push
rcl
push
inc
es
popa
cld
fistps
gs
fadd
xor
ret
mov
iret
in
lea
cmp
je
andl
add
imul
rorb
dec
mov
lds
add
mov
das
fldenv
roll
ficoml
leave
leave
add
cmpsb
add
lcall
push
push
pop
push
and
xchg
inc
sarb
dec
mov
jbe
push
pushf
sub
xor
sub
xlat
mov
mov
jno
cltd
adc
filds
sub
ret
cmp
cmp
dec
mov
adc
aam
cld
ret
insb
sub
pop
or
adc
int
sub
xchg
jp
test
push
cmp
in
icebp
imul
das
out
dec
aam
push
inc
pop
jb
mov
and
sbb
leave
insl
movl
aas
mov
xchg
sub
mov
and
jne
ja
mov
hlt
adc
pop
mov
shrl
pop
add
jg
ss
clc
pushf
cmpsb
pusha
add
sbb
outsb
pop
jp
push
mov
daa
and
cmp
pop
clc
movsl
mov
jmp
sub
lcall
cmp
jl
outsl
xor
out
in
cmp
jge
loopne
in
in
mov
imul
sbb
xchg
cs
je
movb
mov
pop
cmp
rorl
inc
sub
in
mov
add
cmp
push
push
popa
push
pop
add
rcrb
fsubrs
xchg
mov
mov
idivl
rorb
mov
inc
arpl
jp
out
and
mov
jg
xor
and
popa
push
imul
dec
jns
jnp
mov
mov
cli
insl
xchg
jge
jmp
dec
inc
cmc
js
inc
pop
fdivs
inc
mov
mov
repz
jmp
pop
and
or
mov
lods
mov
sub
or
fwait
mov
xor
adc
dec
xchg
or
stc
sbb
lods
xlat
adcb
imul
loop
xor
dec
lea
sub
or
xlat
loop
dec
jge
cmp
leave
repz
and
mov
loop
loope
insl
cwtl
or
xchg
movsl
in
push
jne
fadds
movsl
mov
shr
mov
repnz
mov
adc
xor
stc
lret
jp
cmc
push
xchg
rol
pop
sub
cmp
out
and
enter
int
aaa
cs
push
jecxz
daa
leave
repnz
aad
mov
int
negl
and
sbb
push
jg
sbb
js
cli
and
cwtl
mov
push
inc
outsb
cmpsl
pushf
cltd
add
sti
pushf
mov
iret
lods
sub
add
dec
mov
sub
or
mov
mov
fwait
add
gs
jp
jne
xchg
pop
mov
sub
lea
fimull
fwait
es
arpl
mov
mov
int3
aad
sbb
out
add
xchg
cmc
mov
push
test
incl
or
mov
les
xchg
sub
fcompl
mov
sub
pop
data16
pop
adc
lahf
test
mov
clc
and
mov
js
pop
clc
mov
lret
add
arpl
mov
pop
es
call
inc
jg
pop
mov
mov
pop
jb
outsb
dec
cmpl
sbb
jns
in
mov
mov
push
mov
repz
jge
clc
cmc
sub
cs
or
mov
or
mov
sbb
into
cmpsl
sbb
cltd
or
mov
dec
cmpsl
pop
stos
rol
out
dec
js
pushf
int3
cs
das
sti
push
dec
jge
inc
jle
adc
ret
pxor
movsb
adc
js
imul
mov
inc
popf
je
clc
cmc
xor
and
test
mov
push
adc
repnz
pmullw
hlt
ds
dec
xchg
pop
inc
push
ja
xchg
and
sub
mov
sbb
fnsave
sbb
xchg
sub
jmp
imul
mov
outsb
jle
lods
mov
movsb
pop
cmpsb
jg
mov
mov
testb
inc
int
pop
sub
lret
dec
xor
mov
jmp
jp
insl
lds
jl
mov
adcb
les
mov
cmc
add
addb
fdivp
mov
pop
cmc
cmp
and
icebp
jne
faddp
xchg
sub
dec
rorl
push
mov
sbb
imul
adc
std
inc
inc
sti
int3
push
int
push
xchg
pop
enter
in
mov
mov
cli
sub
stos
cmpsb
mov
jae
jg,pt
sbb
xorl
popf
enter
mov
sbbb
addb
dec
sbb
xchg
sbb
sbb
decb
xor
arpl
and
mov
fldcw
icebp
xchg
jae
mov
js
inc
push
xor
jb
mov
inc
stos
orl
arpl
xor
cld
and
jns
loopne
into
icebp
pop
sbb
cmp
cmp
adc
pushf
fistpll
push
push
xchg
jae
dec
xor
lock
mov
mov
in
mov
mov
notb
mov
in
mov
shr
xchg
fadd
pushf
jno
xor
aas
xlat
push
clc
test
cmp
jecxz,pt
pop
rcrl
inc
or
sar
jae
xchg
xchg
inc
add
lds
add
jle
mov
pop
or
cwtl
or
loopne
test
or
inc
inc
sub
stos
jae
add
cmp
push
negl
pop
mov
test
test
dec
jnp
jo
pop
jg
and
outsl
dec
ja
jp
lods
jnp
cmp
lock
dec
imul
cmc
mov
pushf
inc
xchg
or
in
add
stos
aaa
fisttps
push
aam
jecxz
les
jp
mov
pop
cld
mov
pop
daa
cmp
dec
pushw
push
ret
addr16
add
repz
mov
dec
in
cmc
sbb
insl
sub
icebp
mov
ja
popa
mov
repnz
and
es
ret
mov
ds
cmp
mov
scas
into
stc
addr16
sub
fwait
das
jmp
and
and
loope
lcall
jns
lea
or
mov
add
jo
inc
dec
loope
sub
cltd
inc
and
cmp
pop
insl
dec
and
sub
or
cmp
in
addr16
popa
dec
aaa
pop
and
lods
add
push
das
imul
jne
inc
js
movsl
inc
pop
fwait
xchg
movsl
adc
jecxz
inc
xorb
cld
mov
mov
mov
popf
jbe
ja
mov
sbb
adc
inc
in
movsb
lock
mov
cmp
imul
repz
mov
add
movsb
mov
ljmp
popf
sti
and
push
sbb
insl
leave
fcompl
inc
mov
cmpsb
push
cmp
je
pop
shl
std
or
sub
je
lahf
icebp
add
popa
shrb
in
xchg
xchg
cmp
jg
push
lock
adc
ss
inc
push
adcl
out
mov
sub
icebp
insl
pusha
movsb
not
sub
jmp
in
bound
push
mov
mov
inc
and
adc
inc
loopne
adc
add
push
aas
ficoms
mov
and
cmp
jl
outsl
inc
mov
addr16
sti
dec
sub
add
dec
mov
fidivl
adc
sahf
and
jge
pop
out
jle
jg
cs
xor
inc
xor
xor
in
dec
insb
adc
ss
leave
mov
cmp
shrb
and
lea
add
jmp
sbb
jb
movsb
test
lock
push
push
clc
je
ljmp
dec
bound
sti
aas
aaa
jl
fmull
inc
mov
or
mov
xor
xchg
icebp
mov
data16
mov
repnz
sub
and
push
inc
adc
mov
add
repnz
jg
mov
popa
lods
movsb
stos
inc
cmpsb
dec
sbb
cs
ljmp
std
loop
xor
xor
jne
movsb
mov
jb
push
push
pop
in
pusha
adc
jne
movntq
out
aad
jmp
pop
test
xchg
lea
pop
pusha
movsl
fcomps
inc
mov
jb
out
jbe
jnp
pop
lock
fidivrl
mov
stos
clc
pop
leave
cmp
push
mov
call
jmp
mov
mov
and
cmp
arpl
and
add
addr16
jle
pop
xchg
xchg
dec
les
mov
xor
loopne
xchg
jne
cmp
fidivl
push
mov
lea
sbb
dec
dec
mov
dec
inc
in
bound
xor
in
repnz
xorb
mov
inc
add
aam
cmp
std
fisubrs
xchg
faddp
js
jmp
cltd
sbb
pop
pop
sbb
xor
loop
iret
scas
inc
into
mov
imul
nop
data16
test
push
leavew
push
aaa
outsb
inc
xchg
jno,pn
jnp
jmp
fistps
push
pop
jge
mov
mov
cmpsb
pop
lret
mov
jne
mov
mov
clc
gs
imul
jns
push
jne
jge
and
and
dec
lret
aad
inc
mov
xor
xchg
loop
mov
rcrb
jp
ret
int
push
add
je
cwtl
rcl
add
sbb
and
sbb
mov
sub
push
ljmp
jo
stos
lcall
repnz
test
and
pop
jge
pop
fnstsw
mov
jbe
xlat
mov
cld
cmp
nop
divl
mov
mov
outsb
test
push
cmpsl
mov
iret
mov
loope
xchg
mov
xor
sbb
mov
cs
cmpsl
call
repnz
es
aaa
imul
or
cmpsb
cwtl
push
xchg
movsb
inc
icebp
mov
dec
and
mov
testb
pop
push
nop
imulb
sub
push
xchg
rorb
push
dec
sbb
insl
mov
xor
push
mov
loopne
clc
mov
enter
pop
mov
mov
jb
insb
adc
imul
inc
lret
sbb
xor
repz
inc
pop
pop
or
loopne
jb
std
jnp
scas
or
xchg
inc
pushf
and
sbb
sti
push
pop
in
push
imul
repnz
add
stos
mov
sti
and
loope
test
rcrb
mov
and
adc
arpl
es
xor
push
mov
fcompl
imul
cwtl
fcomi
add
pop
push
fwait
xchg
icebp
mov
fiadds
sahf
xlat
sbb
xchg
mov
dec
sub
insl
xor
enter
add
or
mov
adc
push
add
cwtl
push
stc
cld
movsl
mul
mov
sbb
pusha
movsb
aam
push
cmp
xor
xchg
sub
dec
icebp
outsb
add
jo
sbb
add
mov
je
idivb
jge
movsb
jmp
add
sbb
dec
test
xor
jne
fsubrp
xchg
lock
std
loopne
sub
fs
inc
aad
sub
sbb
lahf
cmp
out
int
and
push
cmp
popf
and
push
icebp
pop
jle
jne
cmpsl
push
testb
mov
or
xchg
dec
divb
sbb
sti
jb
mov
rorl
jecxz
sbb
cmp
jnp
cmp
sub
sti
push
adc
mov
out
scas
icebp
adc
adc
movsb
scas
repnz
ljmp
das
dec
je
mov
sbb
test
fdivl
pusha
jae
stos
xchg
fmulp
fwait
add
push
add
loope
pop
push
les
lock
dec
clc
inc
inc
xchg
rcr
cwtl
mov
shlb
fsubl
mov
std
gs
sub
fisubrl
dec
inc
imul
sbb
aaa
sbb
nop
pop
add
inc
scas
sbb
sub
in
or
mov
adc
add
mov
popf
out
xor
mov
call
jne
idiv
sub
jno
add
push
hlt
aam
stos
arpl
cmp
int
imul
xor
mov
push
into
xchg
pop
movsb
push
pop
insl
cmc
rorb
and
mov
out
add
lar
cmp
lods
fistl
outsb
inc
jb
pop
inc
pop
inc
xchg
cmp
pop
imul
lods
lcall
stc
fmull
mov
sarl
sbb
cld
es
and
xchg
sbb
mov
test
and
fs
lea
lcall
xchg
xor
mov
negb
jo
dec
imull
xor
in
inc
pop
and
cs
xor
or
aas
add
js
push
cwtl
mov
loopne
cmpsb
das
ds
aaa
mov
mov
or
cld
mov
cltd
hlt
cmp
les
mov
notl
push
inc
cmp
xor
jb
mov
inc
lds
xchg
imul
jbe
mov
inc
or
sbb
pop
mov
lahf
lods
int
dec
jae
in
sbb
jg
mov
pop
es
jecxz
repz
push
push
push
repz
stos
mov
push
leave
stos
stos
nop
out
or
adc
push
pop
push
xor
scas
mov
mov
push
pusha
test
sub
pop
jb
outsb
inc
popa
ds
xor
out
inc
subl
enter
cltd
pop
mov
mov
mov
fsubrs
in
xor
or
xchg
int
dec
std
mov
das
and
xlat
fisubrs
cmpsl
out
mov
repz
sub
movsl
mov
out
int3
cmc
pop
call
xchg
ss
ja
cmpsl
inc
aad
add
aaa
bsf
repz
test
push
cmp
add
bound
js
jnp
sbb
js
cmpsb
mov
icebp
cwtl
sbb
loop
dec
xchg
jge
sub
mov
or
fildl
pop
push
mov
pop
negb
pushf
pop
pop
leave
sub
inc
scas
jp
test
sarb
lods
push
aaa
mov
push
ja
in
jl
addr16
sbb
out
inc
mov
popa
popa
add
daa
pop
int3
mov
stc
jno
cmc
sub
pop
mov
popf
aad
cmp
dec
pop
sbb
xchg
insb
sub
xchg
inc
add
push
inc
mov
mov
fists
xor
push
imul
push
outsl
lds
jo
rcrb
adc
lea
int
dec
fwait
xor
jp
add
dec
sbb
or
or
jl
and
cmc
cmp
fmul
mov
lahf
adc
scas
mov
sub
movsl
shl
fdiv
ret
sbb
mov
fstpl
out
sbb
sub
sub
xor
dec
sbb
enter
dec
push
pop
xchg
inc
pop
inc
int
sub
sarb
add
arpl
pop
dec
iret
cmp
push
cld
adc
adcl
sub
mov
pop
gs
aad
popf
mov
and
fadds
in
cmp
pusha
and
xchg
jbe
mov
push
adc
daa
inc
inc
jne
repnz
jecxz
push
das
movsb
or
sti
add
sahf
xchg
jmp
icebp
mov
mov
sbb
scas
adc
gs
insl
and
jge
cli
adc
dec
pop
adc
mull
rcrb
inc
cmp
pop
jns
cmp
popa
or
cmp
out
mov
inc
mov
xor
repz
mov
mov
inc
xchg
and
jge
dec
repz
mov
insl
mov
inc
fstps
mov
push
js
cmpsb
cli
mov
push
add
sbb
mov
and
mov
adc
es
mov
cli
inc
add
xchg
mov
es
xchg
cmp
add
idiv
dec
xchg
add
out
push
inc
shl
rcr
popa
shll
pushf
iret
xor
or
jp
sub
repnz
inc
repnz
hlt
sbb
outsl
sahf
std
push
mov
dec
loope
shrb
and
and
hlt
cmp
adc
popa
outsl
out
jno
rcrb
in
push
xchg
cmp
jl
jp
sub
mov
dec
add
lcall
das
jnp
inc
dec
adc
inc
jo
cmpsl
je
sub
movzbl
fwait
push
ficoms
fisttpl
sbb
outsb
aad
stos
adc
xor
mov
shll
imul
push
and
jno
xor
scas
and
cs
inc
aam
mov
inc
add
mov
mov
mov
push
leave
push
lods
dec
adc
mov
inc
mov
adcl
lahf
mov
mov
or
imul
add
mov
mov
shl
push
scas
rorl
jp
dec
adc
fdivrs
or
popa
ret
shrb
in
mov
cmp
jl
dec
mov
mov
xchg
jge
inc
jae
stc
mov
push
fstpl
dec
inc
aam
ds
clc
add
jns
jb
shl
lret
gs
mov
mov
sti
pop
xchg
repnz
inc
out
mov
adc
loop
movsl
xchg
ret
or
push
adc
in
arpl
mov
pop
stc
xor
and
pop
sti
jmp
mov
test
aaa
mov
cmove
mov
pop
xchg
and
sub
cs
in
call
sbb
lds
or
xorb
test
enter
out
dec
push
cmpsl
pushf
push
lcall
mov
push
cltd
nop
inc
mov
je
popa
adc
fstp
rep
fsubr
jmp
push
mov
int3
xchg
xchg
mov
inc
add
sbb
sbb
stos
push
or
dec
sbb
dec
jp
mov
inc
xor
adc
add
insl
sub
and
mov
fs
xor
and
jbe
rcll
xor
mov
sub
sbb
outsb
test
imul
mov
sub
jo
push
lods
fcmovbe
in
jno
inc
xchg
jmp
jge
sbbl
loope
daa
jne
addr16
cmp
sub
mull
adc
adc
adc
push
mov
fwait
adc
cli
out
std
add
ret
mov
push
and
and
mov
and
xor
sub
adcl
je
mov
lock
or
aaa
insl
out
or
inc
xchg
sbb
cmp
sub
dec
popf
ret
push
xchg
mov
mov
sbb
dec
stos
out
push
out
repz
sbb
repz
pop
cmpsl
faddl
add
or
shrb
aaa
pop
jbe
int
add
mov
addb
inc
add
mov
lahf
ja
mov
pop
cmpsl
fisttps
pop
adc
lods
mov
cld
or
dec
jmp
adc
jnp
inc
test
imul
adc
cwtl
or
sub
mov
sbb
sub
ret
and
into
daa
mov
outsl
jnp
jge
aad
outsb
sub
and
out
loop
push
stos
adc
in
repnz
jg
inc
jae
negb
mov
mov
and
and
sub
pusha
repz
mov
push
add
movsb
call
in
xor
lret
jecxz
fldt
xor
inc
aam
pop
inc
xor
pop
mov
inc
lcall
icebp
inc
and
xlat
or
cmp
int3
adc
movsb
js
lds
mov
add
shr
adc
and
mov
imul
nop
or
mov
or
inc
loop
pop
or
out
aad
adc
in
popf
dec
mov
push
movsl
bound
push
jmp
fsubs
in
and
mov
dec
notl
and
push
cmp
ss
popa
mov
das
mov
test
mov
jns
fmuls
xchg
cli
fnsave
sbb
or
cmp
push
roll
lahf
sbb
fsub
dec
add
pop
jg
inc
xchg
adc
push
dec
stos
in
popf
subl
dec
pusha
pop
jae
mov
in
testb
imul
es
adc
adc
dec
pop
adc
xchg
leave
fisttpl
lcall
mov
inc
fbld
sarb
ror
push
gs
std
mov
stc
sbb
mov
bound
xor
popa
cmp
sub
fidivl
mov
arpl
lret
fs
mov
les
insb
adc
mov
insl
fimull
xchg
xor
inc
in
lret
and
pusha
jl
imul
inc
out
sbb
add
add
add
pop
xchg
jne
mov
dec
fs
stc
jne
out
xor
insl
cwtl
xor
sub
sbb
int
cmp
mov
loop
cmpsb
into
pop
loopne
push
js
or
andb
aam
sti
lahf
lahf
pop
dec
mov
xor
imul
inc
stos
pusha
inc
or
or
cmp
cli
data16
dec
cmc
das
cmp
and
ljmp
loop
mov
sbb
mov
push
addr16
orb
xchg
push
fcoms
js
loopne
lock
mov
cmpsl
inc
bound
in
ret
mov
push
ds
jl
pusha
movsb
mov
lods
or
roll
insl
xchg
xchg
ljmp
sbb
cmp
repnz
loope
popa
cmp
ja
test
dec
jo
mov
dec
movsl
lret
and
add
push
or
or
mov
std
ljmp
inc
and
addr16
ss
and
rcrl
cld
lds
dec
xchg
pop
sub
adc
aaa
adc
and
push
and
xlat
push
add
aad
movsb
mov
sub
push
jne
adc
or
aas
inc
icebp
jmp
rcrb
test
bound
jl
cwtl
repnz
jns
cmc
xor
push
jl
xchg
testl
data16
pop
outsl
int
stc
das
pop
sbb
dec
adc
mov
pop
mov
dec
iret
mov
fmull
mov
maxps
jne
ja
adc
sbb
dec
test
and
xchg
insb
cmpsb
mov
les
out
pop
sub
ret
push
aaa
ret
push
xor
xchg
mov
jns
imul
lods
sbb
enter
pop
cmp
test
mov
stc
imul
fistps
cltd
movsb
push
mov
add
scas
sarb
jl
lds
rorl
jbe
scas
cmp
mov
dec
pop
mov
enter
stc
xor
out
mov
dec
dec
and
inc
fimuls
out
fsubl
push
add
pop
sub
nop
fstl
add
dec
pop
imul
decb
movsl
or
lret
fisubrs
stos
in
mov
test
jecxz
jg
jle
push
out
jo
hlt
lods
nop
es
scas
cmpsl
bswap
lcall
fs
add
xor
inc
adcl
dec
outsl
mov
mov
push
rcrl
inc
fimull
out
out
add
sbb
xor
mov
imul
rcl
lret
shll
push
jle
pop
call
mov
mov
fwait
mov
xchg
sahf
rcrl
sar
loop
xor
adc
push
loop
push
movd
sbb
outsl
imul
xor
sbb
push
aam
mov
loope
notb
jle
adc
mov
rol
lret
fidivrl
or
mov
movsb
in
nop
add
jmp
sbb
inc
mov
bound
adc
or
adc
addr16
adc
test
cmp
mov
cmpsb
push
mov
push
and
insl
pushf
jbe
cmp
push
daa
out
out
mov
cmp
mov
int
and
call
mov
test
inc
mov
inc
test
xlat
inc
dec
loop
jle
xchg
mov
push
jae
daa
lret
sbb
ds
mov
push
cmp
lahf
jnp
arpl
push
push
jmp
sub
fs
inc
pusha
xchg
inc
lds
sti
fwait
xor
lcall
das
ss
mov
scas
jge
mov
lcall
xor
fcoml
or
and
int3
xchg
dec
fistl
scas
sbb
lahf
mov
addr16
push
insb
je
stos
push
lods
xor
push
sar
jecxz
push
ja
test
call
jo
push
xor
sbb
fsubrl
pop
dec
xchg
std
notb
or
ljmp
sbb
andb
dec
push
push
sti
fdivs
sub
sti
pop
add
xor
gs
add
rcll
addr16
jae
mov
add
mov
outsl
pop
xchg
jmp
scas
les
out
jnp
or
ja
jns
ficoms
push
iret
pop
dec
pop
stos
fcoms
fucomi
add
mov
and
fimull
dec
test
repz
pmaxub
ret
dec
cmpsl
or
mov
orl
ds
loope
inc
out
movsb
xor
push
cmp
mov
imul
ss
xor
imul
enter
mov
push
pop
mov
jecxz
cmp
cmp
out
dec
jge
pextrw
ja
scas
sub
jmp
xorb
testb
lds
mov
aam
add
arpl
push
mov
and
mov
push
jnp,pn
pcmpeqw
jge
mov
inc
test
or
mov
add
das
insl
jle
cmpsb
xchg
lea
stos
fadds
aaa
pop
cmp
les
push
enter
outsl
lods
mov
lods
sbb
sti
mov
pop
push
jle
cmpsl
push
leave
xor
and
out
add
ss
inc
lds
xchg
test
pop
and
or
iret
mov
in
cmp
dec
ds
mov
xlat
rolb
and
mov
push
inc
adc
cli
inc
push
out
xchg
pop
test
jmp
imul
xor
mov
repnz
pop
dec
jmp
cmp
popl
lret
pop
bound
lahf
sbb
lret
test
pusha
movsb
cmp
lods
mov
sub
mov
add
push
sub
mov
sub
repnz
lds
loope
and
jge
notl
mov
pop
ljmp
gs
fbld
imul
push
lret
clc
adc
mov
icebp
fcmovnbe
mov
mov
gs
loop
or
pop
jmp
push
adc
mov
aam
js
add
mov
jo
aas
xor
pushf
mov
dec
out
fwait
pop
mov
test
lret
adc
mov
das
js
jne
sub
xor
jmp
inc
add
fldenv
dec
imul
xor
xor
adc
imul
push
mov
xor
mov
inc
mov
sbb
leave
ja
aad
hlt
clc
sub
pop
sbb
mul
aam
enter
out
push
sub
xlat
add
or
pop
push
and
jmp
movsb
out
leave
pop
jecxz
ret
loope
xor
out
pop
jbe
jne
pop
lods
fildll
mov
mov
in
inc
subl
movsl
lods
lret
ljmp
fadds
fisubs
ficoml
mov
adc
call
mov
dec
jne
mov
stos
lea
test
leave
cmpsb
xorb
je
pop
mov
out
and
push
out
mov
pop
mov
sbbl
and
lds
mov
dec
aaa
jnp
pop
aam
mov
movsb
mov
hlt
mov
aad
or
dec
fcomps
and
fucom
lret
cld
push
lret
push
mov
mov
loopne
ficompl
fs
xchg
add
push
mov
aam
shll
inc
pop
or
cs
push
dec
or
mov
cmpsb
xchg
in
es
into
and
outsb
xor
mov
cltd
jno
out
jg,pt
adc
push
jnp
cmp
xchg
lcall
mov
sub
fsubs
sub
pop
jmp
sarl
out
cmp
gs
fcoml
push
repz
cmp
scas
mov
jle
mov
push
pop
dec
jmp
into
push
stos
jo
mov
sub
divb
push
loope
lea
rorl
leave
aas
addl
in
in
jns
imul
pop
outsb
test
adc
lahf
test
mov
mov
or
lret
cmc
scas
ret
sahf
pop
stc
push
jno
mov
or
sarl
push
jns
aaa
shll
fbld
cmpsl
mov
and
cmp
orb
adc
imul
push
adc
mov
pop
fsubs
inc
sub
lahf
push
sbb
pop
and
lods
leave
nop
cmpsl
adcb
hlt
push
imul
adc
jb
loope
inc
jb
xor
dec
mov
mov
mov
lods
sarb
jno
add
xor
xor
aad
sbb
cmp
adc
shlb
hlt
fimuls
sub
add
or
xor
out
cmp
add
mov
aas
push
xchg
jno
fsubrl
xchg
loop
push
fdivrl
lret
divl
adcb
adc
mov
inc
lahf
and
sub
xchg
xchg
leave
and
ss
xorl
in
enter
jle
or
lcall
cli
and
and
add
fnstenv
jle
leave
cmc
pop
adc
adc
imul
inc
popf
int
xlat
adc
mov
jae
addr16
sub
cwtl
fcompl
push
les
gs
pushf
test
int3
js
push
adc
adc
test
aaa
in
cmp
sub
out
ffreep
sub
mov
sbb
int
sbb
pop
dec
and
rorb
aam
xchg
pop
int
lock
aas
out
pop
cli
pop
ss
xor
and
iret
pop
movsl
leave
sbb
cltd
mov
insb
cld
push
mov
leave
insl
mov
jle
je
push
mov
xor
mov
push
ficoml
fs
xor
sbb
adc
mov
add
jb
xchg
cltd
int
dec
lahf
aaa
pushf
sahf
fstl
jnp
lcall
push
mov
cmp
adc
sbb
add
movsb
imul
mov
stc
lret
dec
mov
xchg
std
mov
sti
dec
das
sbb
inc
add
stos
orb
or
int
cli
movsl
sti
and
push
iret
sbb
in
mov
mov
jb
aad
lods
rcrb
lahf
andb
mov
in
xchg
mov
out
sarl
add
jno
out
test
push
and
inc
add
arpl
dec
bound
dec
add
mov
cmp
mov
dec
jbe
jne
xor
sub
mov
stc
sbb
add
xor
fwait
adc
cli
xor
mov
add
xor
push
mov
sbb
push
aad
add
and
iret
and
jo
cld
lahf
std
test
inc
jnp
movsb
inc
jle
mov
inc
popa
jns
scas
fisubs
pop
fmulp
jg
cmp
pop
mov
dec
cmp
sub
pushf
sbbl
in
xor
sbb
xchg
adc
add
scas
sub
cmp
ret
sti
push
lret
pop
stc
push
sbb
pop
cmpsb
aaa
repz
xchg
mov
bsr
lods
fwait
fwait
lods
xlat
inc
cli
pop
cmp
and
dec
ret
loopne
and
xor
cmpsl
xchg
sarl
inc
push
xchg
lcall
pop
push
mov
mov
test
xchg
lock
inc
loop,pt
ret
addr16
dec
xor
sbb
dec
cmp
in
jne
cmp
in
sarl
pop
cmp
dec
cwtl
cmp
pop
pop
cmpsl
pop
insb
lds
adc
jecxz
xchg
inc
dec
inc
inc
push
or
bound
ds
inc
xchg
mov
iret
leave
cmp
dec
sbb
lock
loopne
pop
es
pop
setl
jmp
xchg
adc
sbb
jns
rcr
xor
xlat
sbb
xchg
ljmp
sbb
fisubrl
jb
and
repnz
int3
scas
mov
add
or
es
jmp
clc
push
jp
cmove
jae
scas
inc
pop
push
mov
aad
pop
pushf
pop
xchg
sub
test
dec
scas
hlt
add
rcrl
adc
sbbl
xchg
mov
mov
push
xor
cmpsl
sub
pop
mov
out
lods
lods
sbb
addr16
mov
aad
inc
jno
mov
lret
xlat
mov
xchg
xor
adc
int
loop
xchg
add
mov
dec
ja
mov
pop
xlat
cmp
pusha
aam
mov
and
faddp
les
movsl
or
popf
je
bnd
adc
jecxz
pop
jl
sysret
pop
aad
pop
push
icebp
popf
push
mov
fidivs
nop
jae
sti
ja
mov
das
shll
stc
push
and
xor
icebp
into
xchg
lahf
jg
xchg
addr16
rcll
xchg
addr16
sbb
lods
out
jne
jo
fistpll
movsb
push
cmc
pop
xchg
fsub
push
pusha
inc
ret
cmp
insl
inc
xchg
lods
mov
mov
imul
sarl
sbb
outsb
sub
mov
pusha
mov
mov
pop
mov
mov
pop
psrad
int3
out
mov
mov
xor
pop
inc
shlb
xor
push
dec
pop
scas
or
sbb
outsl
movsb
stos
or
mov
rolb
jb
mov
test
sub
insl
lods
inc
leave
int3
mov
adcb
outsb
adcb
jo
outsl
sub
add
fcompl
outsb
loope
lret
loop
loop
adc
dec
into
and
mov
jp
icebp
xor
cmpsb
fsubrs
in
dec
push
push
sub
cmp
clc
mov
pop
js
sub
pushf
xchg
xchg
push
dec
jo
and
pop
pushf
fld
aam
loope
loopne
push
cli
sbb
mov
stos
aad
leave
test
jo
or
jnp
sbb
cld
int3
cltd
jb
adc
rol
out
test
sbb
adcb
jns
scas
test
popa
mulb
jb
dec
ret
xchg
push
cmc
pop
mov
inc
call
adc
and
scas
xchg
fcomip
adc
repnz
imul
lcall
xchg
sub
dec
data16
daa
imul
out
std
mov
das
incl
xchg
jle
and
out
dec
test
or
dec
push
pop
lahf
rclb
ss
fcomp
sti
es
notl
ja
leave
sahf
push
jl
aam
in
cmp
sub
jmp
mov
inc
pop
mov
imul
jmp
ds
inc
mov
xor
stos
shll
sarl
ds
mov
mov
push
popf
cmp
mov
scas
pop
mov
shll
pusha
xor
pop
and
fists
ret
sti
repnz
and
scas
ret
dec
adc
xor
sub
sub
jg
xor
lods
mov
mov
out
sbb
mov
add
es
lock
adc
fmulp
fildl
jp
dec
mov
notl
jle
std
repnz
fnstenv
adc
mov
clc
cmp
pop
and
shrl
or
into
jno
xorl
sbb
mov
mov
mov
adc
pusha
lock
hlt
fists
mov
jno
xchg
aaa
scas
cmpsl
frstor
loop
xor
int
mov
xchg
mov
aas
mov
xor
xor
sbb
mov
lds
lahf
jnp
sahf
mov
lret
stos
out
lret
in
sub
popa
sbb
push
sahf
es
andb
cs
mov
daa
pop
lahf
das
or
inc
and
lods
ret
popa
cmpsl
or
jp
adc
jb
push
fwait
adc
pop
mov
mov
mov
mov
pop
ja
add
jae
push
jne
dec
cmp
cld
test
insb
repnz
cmp
pusha
xchg
fstpl
pop
jnp
dec
dec
mov
fs
jp
mov
mov
push
lcall
mov
ret
jae
xor
xor
pop
in
add
loopne,pt
pop
es
sbb
lret
pop
mov
ja
jle
mov
daa
and
mov
aas
ror
dec
dec
xorb
inc
ss
in
xchg
icebp
or
dec
xor
push
ret
jle
fcmove
stos
cmp
add
aad
std
and
pushf
cld
mov
test
add
xchg
xchg
push
mov
fisttps
inc
lds
ret
lret
mov
in
jecxz
es
leave
mov
ljmp
jbe
rorb
test
lock
fistl
lahf
rcrb
lcall
cmp
inc
pop
xchg
pop
jge
flds
and
mov
out
in
pop
cmp
sbb
aad
push
jge
mov
push
lahf
xlat
test
aaa
rcll
push
out
sbb
or
aam
dec
add
out
sub
xchg
dec
stos
cmp
inc
cmp
cmpsb
lods
int3
xor
mov
sbb
mov
push
sub
bound
fdivp
adc
xchg
push
scas
sub
xchg
add
sub
sti
xchg
int3
ljmp
jecxz
clc
xchg
int
pusha
xor
ja
xchg
mov
cmpsb
lret
rorb
xchg
push
into
sub
pop
psrad
cmpsb
adc
into
dec
popa
popf
scas
sub
je
lods
lds
loope
test
test
and
sub
and
ljmp
test
ret
mov
and
imul
nop
imul
cmp
adc
inc
xchg
sub
xor
mov
jg
js
fwait
scas
and
inc
pusha
cld
bound
xor
add
outsl
and
nop
fldl
xor
ret
xchg
sbb
jmp
lret
dec
hlt
daa
sbb
je
jg
mov
mov
push
mov
es
sbb
adc
pop
mov
fs
dec
mov
dec
push
adc
push
lret
bound
movsb
xor
adc
push
outsl
popa
add
dec
in
cmpsb
jbe
mov
inc
cmp
call
jmp
mov
or
iret
lret
jle
or
inc
pop
adc
js
jae
xorb
xchg
pop
in
inc
sub
cmpsb
xor
loope
insb
jns
imul
jns
inc
cmc
sub
pop
mov
xchg
imul
es
in
add
addr16
pop
jb
cmp
jo
adc
call
movsb
aad
popa
adc
cmpsb
sbb
bound
insb
mov
out
fdivrl
push
sbb
push
loop
insb
je
jb
xchg
xchg
push
push
push
popa
out
addr16
test
xchg
mov
fs
or
sub
sbb
mov
sahf
loope
mov
mov
mov
fiaddl
sub
pushf
rolb
jne
int
push
add
sub
int3
in
std
notb
lcall
dec
movsl
inc
sti
push
daa
add
cld
jnp
pop
add
popa
je
add
sarb
lret
pop
mov
inc
aad
or
or
sub
inc
out
out
jmp
mov
loop
cltd
mov
loop
cli
inc
jecxz
dec
test
push
and
jmp
loope
test
mov
das
dec
lret
aaa
mov
repnz
lock
test
gs
lcall
mov
cmpsl
mov
lret
int3
xor
insb
mov
jge
test
fidivl
xor
fs
pushf
pop
fistpl
pop
and
xor
xchg
les
inc
push
xchg
xor
push
lods
cmp
iret
jecxz
xchg
sbb
adc
shl
in
inc
cmp
jp
jmp
popf
xchg
js
push
out
testb
add
jle
jbe
aam
in
or
lret
mov
add
cmp
pop
addl
cltd
add
js
push
xlat
mov
sbb
inc
leave
fwait
inc
fwait
pop
scas
jecxz
cmp
addr16
dec
lahf
adc
loope
dec
fsubrl
cmp
int
pop
cmp
inc
das
sub
xorl
out
aam
fwait
mov
jns
hlt
add
sahf
cmpl
hlt
idivl
aam
xor
pushf
stc
mov
mov
mov
cmpsb
aam
cmp
mov
sbb
fidivrl
and
and
test
mov
sbb
fwait
aad
filds
lret
adc
je
popa
out
inc
pushf
dec
xchg
mov
sub
movsb
ds
stos
arpl
mov
pop
mov
sbb
mov
rorl
sarl
clc
loopne
xor
push
jecxz
lods
sub
out
or
xchg
jg
scas
mov
fimull
xor
lock
jg
les
add
outsl
push
movsb
jl
gs
clc
mov
dec
push
into
mov
and
int3
js
xor
addl
xchg
popf
pushf
roll
sub
sbb
cmp
push
shlb
ficompl
movsl
jge
inc
std
aad
leave
pop
jge
popa
les
sbb
jns
jns
lcall
and
stos
cli
out
jg
outsb
es
scas
and
fstpt
cli
out
dec
dec
sbb
stc
adc
or
jae
out
mov
into
dec
mov
jmp
mov
or
sub
push
out
sub
cs
cmc
ljmp
inc
outsl
lods
dec
and
ret
pop
aaa
ja
xchg
repz
push
mov
cmp
push
scas
mov
inc
fiadds
call
lret
adc
pop
pop
push
loopne
push
inc
cmp
push
test
test
jb
xor
push
jb
sub
sbb
xlat
and
testl
and
shlb
inc
xchg
inc
or
push
xchg
adc
xchg
fisttps
fcmovu
dec
push
std
popa
dec
jae
mov
push
loope
leave
stos
push
lds
pushf
rorb
outsl
cmpsl
call
call
adc
or
push
int
cltd
mov
nop
adc
jp
mov
lods
adc
sub
push
mov
mov
and
jg
imul
sahf
dec
pushf
dec
or
xchg
pop
out
prefetch
lea
push
mov
aad
loop
or
mov
fdivs
stc
call
mov
cs
arpl
addr16
shrl
lcall
jl
xor
cmp
leave
adc
in
lods
push
cmp
or
push
jecxz
mov
arpl
pushf
in
fstl
xor
fmul
push
ds
lret
jmp
ret
fsubs
push
dec
cwtl
sub
lret
js
add
mov
pop
cli
sti
sub
dec
add
insl
repnz
rcrb
ret
and
test
imul
push
jecxz
xor
cmp
adc
push
or
jg
int3
btr
push
pop
mov
lods
lods
dec
add
mov
sub
pcmpeqw
lock
mov
push
pusha
cs
push
repnz
jae
popa
adc
dec
sub
inc
in
xchg
in
hlt
jbe
push
cmp
cmp
mov
mov
fwait
inc
xchg
or
inc
push
inc
mov
pushf
sbb
jmp
jmp
mov
sub
fistl
shl
push
push
outsb
cmpsb
in
mov
or
xchg
ljmp
lcall
add
aaa
and
repz
jo
push
jnp
jbe
pop
or
xor
lods
mul
clc
cmp
shlb
lods
orl
push
pop
cltd
lods
jl
sarl
ja
lahf
sbb
mov
jge
cmc
cmp
inc
add
xchg
mov
sbb
push
xchg
in
push
lea
daa
ja
std
sub
test
push
sub
mov
fcmovbe
inc
inc
out
mov
or
mov
adc
enter
popf
dec
into
push
or
fdivrs
add
popa
outsb
ret
cmp
test
mov
mov
daa
jae
mov
gs
adc
scas
les
ds
nop
inc
xlat
jno
std
jp
cwtl
data16
test
or
or
dec
cmc
mov
jae
pop
cmp
push
icebp
mov
add
addb
mov
sub
fsubr
dec
sbb
fs
in
aas
inc
inc
or
sti
jp
jg
push
outsl
mov
sbb
cltd
push
aad
sbbb
add
das
jle
sbb
lds
xchg
fadds
scas
sbb
adc
nop
repz
loopne
stos
add
xor
or
lods
fisubl
mov
xchg
inc
lret
pop
mov
pop
fisubrl
and
and
or
mov
inc
scas
lock
add
dec
outsb
lret
lahf
scas
push
push
add
or
sbb
push
hlt
lret
mov
mov
shll
aam
popa
xor
add
cvtps2pi
in
sbb
cmp
push
loop
in
push
dec
adc
fcoml
lret
popa
sbb
push
fwait
loop
out
fcoml
push
sbb
xchg
sti
mov
roll
xchg
lds
adc
sub
data16
ss
out
stos
in
xor
or
arpl
add
cmp
popf
mov
adc
cmp
jb
gs
lahf
sub
iret
mov
dec
pop
xchg
cs
scas
jg
sbb
lcall
xor
xchg
mov
cld
jl
push
xchg
rcr
dec
repnz
repz
xchg
std
sub
pop
gs
hlt
xchg
shrb
rcl
lods
lcall
or
mov
jp
divb
movl
dec
jno
pop
ljmp
rol
lea
jp
lds
les
sub
xor
aad
xchg
inc
jo
addb
lods
pop
aaa
clc
pop
mov
jge
out
test
sub
mov
out
xor
es
fwait
xor
sbbl
roll
ja
into
dec
and
and
xchg
push
xor
das
pop
stos
dec
push
jmp
in
and
pop
arpl
sub
adc
aam
test
sbb
or
or
mov
add
out
loop
pop
push
decb
xchg
lea
and
subb
mov
and
les
repz
outsb
ss
mov
test
divb
adc
or
shl
icebp
adc
sub
lret
pop
cmp
xchg
push
push
mov
push
sbb
dec
add
shrl
hlt
adc
cmp
and
dec
push
jno
decl
add
dec
push
icebp
lcall
punpcklbw
inc
pusha
xchg
push
fiaddl
add
dec
push
xchg
dec
push
test
bound
fwait
pop
outsl
or
and
cmp
push
popf
or
mov
scas
lret
push
mov
popf
mov
mov
lods
sub
jge
repz
ret
sub
in
xchg
push
push
pop
out
pusha
and
filds
sahf
and
out
cmc
add
inc
pop
add
lock
sbbb
xchg
push
orb
lock
lahf
gs
pusha
pop
jmp
outsl
std
out
lds
js
cltd
lock
pop
imul
adcl
push
rolb
sbb
shl
dec
cli
or
enter
negb
mov
jo
and
push
jne
inc
jmp
call
rcrl
and
mov
jne
xchg
mov
add
mov
or
subl
pop
sbb
data16
push
insl
pop
jl
pop
and
loope
fucomip
sbb
loopne
mov
rcrl
mov
mov
mov
fisubrl
sub
in
jmp
stos
lcall
mov
sahf
pop
and
pushf
nop
add
daa
das
outsl
test
inc
scas
or
roll
fildll
out
mov
or
je
jecxz
mov
xchg
adc
arpl
cmp
out
push
push
mov
xor
cmp
sbbb
mov
rorb
xor
insl
cmc
dec
sub
movsb
repnz
add
out
gs
in
aam
fisttpll
out
mov
or
jns
mov
add
mov
adcb
pop
add
cmp
data16
loopne
bound
sbb
cmpsb
outsb
cmp
lock
and
enter
and
iret
cmc
iret
sbbl
in
or
data16
dec
cmp
push
push
mov
lret
inc
lret
enter
and
mov
out
lret
push
out
sbb
icebp
test
into
mov
jb
sub
nop
mov
scas
mov
call
aas
add
insl
js
ljmp
xchg
fdivrp
mov
and
call
jbe
les
test
fwait
dec
mov
cmp
mov
xchg
and
loopne
push
es
or
or
int3
movsl
pop
or
mov
sub
pushf
andl
loop
repnz
jbe
inc
push
adc
adc
rol
test
nop
outsl
mov
jle
fisttpl
mov
cmc
mov
or
pop
jbe
sarb
xor
sahf
aas
mov
fiaddl
les
dec
lcall
negb
imul
sub
shrb
xchg
imul
add
xor
jne
es
lea
lahf
cmp
or
adc
repz
adc
cmp
fadds
lods
in
xor
pop
add
icebp
jbe
cmp
movsl
mov
aaa
cmpsb
lret
and
out
nop
shll
test
cmp
lods
add
xchg
or
xor
xor
in
xor
test
movb
jne
imul
lret
and
pop
rorl
mov
addl
mov
rcrl
ret
test
dec
das
ret
clc
push
fdivrl
andl
pop
cmp
xchg
adc
call
jp
mov
pop
jns
dec
xchg
dec
jb
jl
or
xchg
out
rolb
push
lahf
sub
mov
xorb
mov
inc
cld
es
inc
cmp
pop
jmp
jl
push
outsl
aaa
aam
sbb
inc
or
or
aam
mov
sbb
std
scas
or
pop
fsubrs
add
xor
aas
mov
mov
mov
cld
shll
xor
aaa
lcall
pushf
scas
cmp
push
es
adc
mov
xchg
rcrl
inc
mov
dec
xor
leave
fmulp
inc
mov
in
sub
out
movsl
imul
cmp
rcll
icebp
or
mov
into
dec
xor
cld
int
andl
sbb
daa
push
cs
lcall
repz
jno
lods
pop
pop
push
and
ror
test
jg
mov
cmp
stos
mov
jae
xchg
jmp
sub
pop
mov
add
sbb
xchg
push
pop
pusha
out
sbb
xorl
pop
sub
addr16
pushf
mov
xor
lcall
cmp
int
mov
xchg
loope
cmp
pop
in
push
in
adc
out
imul
int
mov
lcall
lahf
scas
lock
call
jbe
fimuls
xchg
imul
rsqrtps
sbb
inc
xor
js
add
xchg
test
add
lcall
jmp
fsubs
out
movsb
adc
pop
cwtl
cltd
repz
mov
xor
jmp
stos
inc
fwait
push
subl
insb
xor
fisubl
add
push
pusha
aad
xor
daa
enter
icebp
cwtl
sub
insl
mov
in
imul
rcrb
je
in
enter
xchg
sahf
xchg
outsb
rdpmc
fldlg2
mov
sbb
mov
ds
into
or
shrl
push
fcmovne
push
mov
jo
dec
push
xor
cmc
and
pusha
hlt
mov
mov
sub
cmp
movsb
push
outsl
mov
inc
adc
mov
movb
mov
inc
in
pop
adc
cmpsl
xor
test
cltd
mov
or
int
add
je
popa
dec
or
and
jg
movsl
addr16
and
cwtl
cmp
add
loope
movsb
cltd
fsubs
movsb
loop
sti
jne
les
in
adc
aad
nop
mov
push
xor
and
test
sub
jmp
jl
rorb
or
lret
pop
and
mov
or
pop
les
pushf
mov
push
pusha
xor
push
clc
and
cmp
or
xchg
xchg
rcrl
movsl
adc
cwtl
push
push
shll
dec
cmpsb
pop
push
js
mov
and
lods
add
pop
or
pop
xchg
push
mov
outsb
mov
movsb
jo
xchg
movsl
mov
push
push
loopne
add
jl
or
jmp
sti
mov
ss
daa
fmul
sbb
pop
iret
push
je
xor
mov
jge
ja
sbb
pop
rcrb
into
xchg
movsl
aam
lds
sbbl
dec
lret
xlat
imul
push
rcll
sub
add
push
mov
jg
pop
xchg
or
inc
mov
xor
jmp
data16
les
rol
mov
cmp
out
adc
fnstcw
mulb
fsts
or
adcl
add
in
xor
test
pop
push
fcmovne
pop
hlt
pop
push
xor
repnz
negb
mov
loopne
dec
xor
inc
sbb
std
sbb
stos
inc
shll
cltd
mov
fs
xchg
cltd
mov
add
stc
lock
and
pushw
je
ret
popf
repz
pop
mov
rol
repnz
div
aaa
fs
lcall
mov
mov
mov
jb
lods
orl
lret
sub
xchg
xchg
movsb
jp
sub
repz
push
lret
jnp
stos
mov
inc
lds
repz
enter
jl
cmp
xchg
mov
add
push
nop
repz
sbb
test
jnp
int3
xchg
jne
xor
sti
push
test
pushf
in
loope
test
sub
pop
icebp
jp
scas
test
cmp
scas
das
sahf
hlt
mov
mov
pop
xchg
das
pop
dec
jmp
jp
dec
decb
fsubr
xchg
xchg
or
mov
ret
or
stos
mov
push
shl
and
outsl
outsl
add
mov
fwait
imul
jbe
pop
in
insl
sbb
scas
mov
loope
fnstenv
jne
cwtl
cmp
leave
test
xor
mov
data16
or
mov
cld
cmp
jmp
and
scas
mov
rcr
sub
xor
mov
mov
push
int
xor
and
push
insl
cmpsl
lret
sbbb
fdivl
mov
cwtl
mov
adcb
dec
inc
or
add
scas
leave
cli
mov
push
push
lods
fidivs
inc
pusha
clc
rorl
xchg
inc
outsl
mov
xchg
fbld
lods
and
adc
add
pop
lcall
outsl
xchg
adc
sbb
out
cmp
ljmp
sti
jns
mov
push
insb
pop
add
mov
lea
inc
add
mov
lock
mov
stc
mov
mov
aad
jle
mov
xchg
popa
or
add
mov
xchg
ss
or
in
fnsave
xor
ds
aaa
push
insb
sub
ja
mov
add
mov
lahf
lcall
push
xchg
lea
loop
pop
jecxz
and
pop
inc
lods
xchg
pop
pop
sub
jns
rorb
dec
dec
stos
mov
xor
jae
shrb
inc
shll
je
aaa
imulb
je
or
push
xchg
adc
inc
outsl
mov
sbb
xchg
inc
bound
mov
xchg
test
std
and
or
mov
mov
pop
frstor
cmpb
das
lret
lock
mov
shrb
sub
sahf
stos
and
pop
sub
ficomps
pop
outsb
sbb
push
imul
jmp
xor
clc
dec
hlt
incb
push
and
daa
mov
inc
out
adc
jne
inc
rcrb
repz
or
jb
cmpsb
mov
jge
call
neg
rorl
push
andnps
push
loopne
test
pop
icebp
repnz
push
xorl
or
lcall
or
cwtl
mov
insb
xor
pop
xchg
and
and
xchg
push
sbb
sbb
loopne
adc
dec
xchg
ret
popa
xchg
cli
sub
pusha
adc
add
iret
imul
push
cmpsl
or
xchg
popa
cmpsb
and
xchg
add
xchg
incl
sbb
repnz
xor
rol
cmpsb
loopne
test
fnstsw
dec
pop
push
mov
push
jecxz
add
push
nop
add
hlt
lds
sbb
mov
cmpsb
js
sub
dec
sub
sbb
xchg
faddl
xchg
ss
fld
cmp
loop
rcll
mov
add
push
xchg
cltd
test
xchg
mov
and
pop
js
or
clc
jbe
add
xor
sbb
mov
pop
add
js
sbb
jge
cwtl
add
sahf
ja
xchg
rol
jae
popa
xchg
jno
mov
bound
inc
inc
jnp
in
adc
loope
mov
cs
push
pop
xor
jmp
in
in
fcmovnu
cli
fs
or
push
arpl
cmpsb
fildl
test
inc
push
sbb
or
fnstcw
add
movsl
sub
inc
gs
jb
adc
cmp
xchg
popf
sti
xchg
push
cs
adc
dec
or
mov
movsb
in
push
mov
pop
mov
xchg
or
xchg
out
int
xor
movb
pop
lcall
insb
xchg
xor
mov
popf
cmc
mov
adc
xchg
test
int
jecxz
out
xorl
sub
sbb
int3
sarl
pushf
ljmp
jp
loop
mov
mov
fsubp
bnd
jns
or
addb
cmp
arpl
cld
xor
lcall
mov
mov
sub
xchg
pop
test
pop
xchg
xor
adc
leave
imul
test
pop
inc
inc
push
loop
jmp
sbb
imul
pop
and
xchg
adc
clc
fcoml
mov
push
dec
test
cmpsb
sub
jbe
popf
ds
daa
mov
cmp
dec
sub
jnp
mov
add
movsb
daa
jae
push
movsl
sahf
les
push
ret
add
add
outsb
cmp
xchg
rorl
ds
repz
and
mov
push
out
cmp
mov
push
pop
movsb
int3
fwait
push
and
loope
addb
jnp
inc
jg
inc
and
ljmp
fcmovb
fwait
jge
push
and
andb
jg
in
sub
push
sbb
int
mov
lcall
mov
sub
in
xor
jp
inc
movsl
sbb
rcll
sub
and
aad
or
cli
loopne
aas
xchg
pop
out
cmp
and
fsts
mov
out
cltd
clc
into
in
inc
incb
sbb
imul
dec
add
int
and
in
inc
sbb
inc
push
inc
lahf
incl
fdivp
cmpl
icebp
into
rol
loop
loope
push
sbb
inc
dec
fsubrs
outsb
int
and
fsubl
mov
enter
mov
repnz
and
cli
jbe
xor
add
xor
inc
adc
xchg
lds
mov
dec
roll
std
sub
dec
cmp
lcall
in
cltd
jle
sub
lds
ret
adc
cmp
outsl
sbb
xchg
lret
outsl
shl
pop
jecxz
gs
mov
jne
jbe
rcr
into
lahf
mov
movsb
movsl
push
cmpsl
popa
mov
adc
cwtl
mov
sbb
pop
mov
pop
jmp
aas
mov
push
jo
sbb
imul
inc
lods
mov
xchg
xchg
in
ud1
sarb
hlt
loope
out
movsl
sub
dec
pushf
aam
inc
mov
lcall
pop
xchg
push
lret
mov
xor
or
lods
test
stc
lock
nop
push
xchg
sbb
jne
and
mov
fsubrl
adc
repnz
lahf
lds
and
lods
mov
outsb
fmulp
and
movsb
jnp
ds
mov
mov
xchg
mov
imul
push
sbb
xchg
sub
mov
insb
nop
push
adc
dec
jns
jnp
pop
loope
lods
mov
cld
in
mov
ja
mov
or
ret
mov
cld
pop
in
incb
shl
adc
or
fistpll
in
add
icebp
jmp
push
sub
ds
push
xor
jle
mov
js
mov
sub
sti
or
xor
nop
mov
nop
xor
rolb
or
inc
test
pop
adc
mov
in
or
outsl
les
cmp
mov
js
pop
lret
push
push
mov
pop
orb
and
out
pop
out
bound
xchg
divb
jae
jle
adc
pop
mov
dec
js
pop
sub
xchg
xor
sub
cmp
mov
test
push
mov
mov
cmp
xchg
mov
mov
push
mov
iret
test
xchg
jecxz
dec
iret
adc
fcmovnb
dec
jp
ret
adc
cli
test
insl
addb
or
insl
xchg
or
xor
scas
mov
punpcklbw
push
aad
leave
repz
sbbb
sbb
shr
xor
push
xor
mov
mov
pop
arpl
xor
mov
jbe
rorb
imul
sub
add
xor
out
data16
addr16
lods
dec
sub
dec
nop
xor
push
test
imul
loop
adc
lahf
lods
les
adc
push
or
ds
sbb
xchg
fwait
push
mov
lcall
cmp
adc
nop
movsl
sahf
into
iret
xchg
mov
push
dec
push
mov
movb
mov
notl
add
ljmp
mov
dec
mov
adc
fsts
jge
mov
mov
sub
add
mov
shl
test
enter
fsub
mov
pop
test
out
jp
mov
test
push
leave
xor
lret
cmp
rcl
sub
or
pop
mov
cmpsb
mov
xchg
movsb
std
mov
jae
inc
cmp
xchg
je
imull
adc
or
int3
cmp
mov
bound
push
fiaddl
shrl
lret
fcmovne
jecxz
dec
pushf
add
ds
testb
movsb
and
add
lds
pop
jmp
dec
loopne
sub
adc
add
add
sbb
das
mov
cmpsb
xchg
ret
sub
xchg
mov
push
inc
sahf
add
hlt
fstpl
loop
mov
sub
test
mov
mov
cmp
jge
xchg
and
jmp
pop
pop
or
arpl
and
rorl
lcall
dec
adc
and
jnp
inc
mov
inc
test
mov
sub
repnz
pop
test
sti
jle
mov
cmpb
ja
js
not
dec
out
stos
push
pop
add
bound
lods
daa
lods
insl
sti
mov
sub
pop
in
and
add
add
jb
mov
sbb
adc
mov
test
jbe
dec
add
test
xor
mov
push
pop
aad
pop
mov
nop
aam
or
je
push
pop
scas
es
in
dec
fcmovnbe
inc
pop
push
inc
sbb
lock
inc
or
dec
and
ss
daa
dec
in
daa
lods
outsb
lret
mov
nop
push
into
push
call
xlat
pop
iret
scas
xchg
mov
and
std
pop
push
adc
jbe
jnp
movsb
scas
mov
in
sub
push
sbbb
test
call
mov
lcall
inc
cmc
notb
ret
sbb
imul
fwait
cmp
push
leave
fstpl
sbb
pop
imul
pop
sub
std
or
jle
xchg
sub
jp
loopne
push
pushfw
scas
out
lods
dec
inc
and
int3
pop
lahf
fs
jb
pop
mov
adc
add
aas
daa
pop
aas
mov
add
push
lret
xchg
ret
sub
inc
aam
jno
mov
push
push
pop
pop
stos
or
cmpsb
fisubrl
mov
ja
add
mov
test
mov
loope,pt
add
stc
arpl
push
add
push
scas
push
lods
outsb
cmp
cmp
cmpsl
push
out
and
and
dec
cs
xchg
leave
daa
ss
pop
mov
fst
and
cmp
and
cwtl
pop
sbb
loopne
pusha
push
push
sub
dec
aam
std
leave
cmpl
or
xchg
xchg
and
shl
sub
fs
addr16
popa
cltd
push
mov
cmp
icebp
cwtl
add
pushf
push
or
stos
cli
ficoml
aas
sub
aad
in
repz
loop
add
lods
mov
movsb
insl
mov
cmc
cmp
pop
pop
testb
cmp
popf
mov
add
add
fwait
xor
or
jo
pop
test
mov
fs
push
jns
int3
test
add
ds
sbb
lret
dec
nop
addr16
js
aaa
lock
les
xor
jge
sbb
push
xlat
lret
stos
jo
das
mov
push
sub
cmp
lret
fldenv
dec
out
loopne
mov
ljmp
lods
and
xor
mov
lods
sub
sti
mov
or
in
sbbl
cld
cmp
adc
arpl
aad
mov
repnz
sub
ja,pn
xchg
mov
cmp
aam
lcall
adc
xorb
xor
xchg
xchg
add
sub
dec
add
xchg
daa
les
xlat
int3
aas
push
dec
leave
jmp
movsb
mov
repz
popf
push
repnz
jle
lcall
mov
lods
loop
dec
ret
movsl
arpl
aas
or
mov
pushf
lcall
cmp
xchg
je
divl
cmpsl
jno
cmp
shrb
dec
adc
sarl
add
in
sub
mov
pop
inc
or
ss
test
and
push
mul
mov
xchg
mov
data16
push
jno
jl
dec
fsubrl
xorb
mov
loop
cmp
push
inc
xor
mov
xor
push
sub
fwait
jmp
add
lock
fs
sbb
push
idiv
sbb
shlb
ret
movsb
loopne
adc
push
rcrb
outsl
cmp
outsb
test
jmp
xor
in
test
xchg
out
sbb
sub
push
mov
sub
lods
dec
pop
out
add
shr
imull
js
push
mov
das
inc
mov
push
filds
loopne
stos
in
call
ficomps
daa
test
rcpps
xchg
pusha
inc
icebp
lret
xchg
lea
adc
lock
push
xchg
cmp
or
mov
jae
test
cmp
repz
or
xchg
les
lahf
inc
in
mov
dec
fs
fisttps
mov
pop
cmc
cld
data16
cmp
jo
xor
loop
sbb
or
jnp
rcrl
outsb
jo
pop
into
sub
add
dec
cmp
adc
ret
mov
mov
lret
test
cld
cmpsl
push
in
push
xchg
movsb
pop
xchg
repz
lods
rclb
xchg
sbb
or
lcall
rcpps
and
mov
push
test
jbe
push
test
lods
push
arpl
enter
aad
and
lret
cmp
adc
push
in
mov
mov
sti
in
pop
pop
xor
sub
jmp
and
and
mov
iret
or
pop
out
and
outsb
sub
aas
adc
rolb
mov
pop
in
mov
xor
sbb
mov
test
js
rcl
testb
xchg
fs
sbb
and
xchg
push
add
cwtl
inc
pop
jmp
aam
adc
or
add
inc
xchg
mov
xchg
fisttpll
lea
mov
out
fisttpll
xchg
sub
mov
cltd
or
pop
jne
repnz
lahf
mov
lret
imul
adc
inc
pusha
lcall
mov
leave
jg
cmpsb
mov
frstor
sub
arpl
mov
test
popf
sti
stos
ficompl
outsl
jnp
xchg
pop
fdivrs
or
mov
mov
jle
lds
dec
xor
mov
dec
lret
xchg
and
or
sbb
or
shrl
out
andb
js
fnstenv
stc
mov
adc
imul
push
add
adc
mov
div
loop
scas
sbb
cmp
test
xlat
inc
ljmp
xchg
inc
inc
mov
mov
mov
and
lock
les
int3
sub
pop
cmp
lret
jge
outsb
ret
pop
cmp
xchg
int3
xor
xlat
or
jae
sub
lds
idivb
adc
stos
mov
test
and
mov
mov
decl
sub
mov
aas
mov
jnp
inc
jae
and
dec
fst
fwait
test
call
or
enter
mov
push
xor
adc
arpl
mov
mov
insb
push
mov
sub
adc
jecxz
xchg
lret
xchg
ficoms
in
test
dec
stc
clc
test
data16
shrb
mov
xor
test
cmp
dec
inc
nop
movsl
xchg
inc
stos
aas
js
push
in
subl
adc
cs
int3
je
repz
arpl
pop
push
mov
mov
inc
ss
ret
jmp
sbb
sti
fiaddl
popa
jno
inc
jo
add
add
bnd
sub
push
mov
xchg
std
xchg
out
inc
pop
pop
sbb
negb
loopne
and
cmp
adc
adc
jns
andl
pop
inc
jne
inc
leave
les
sbb
iret
lds
movl
mov
sub
popa
and
aad
repnz
add
fwait
mov
sahf
int3
and
ss
push
xchg
mov
mov
mov
cwtl
mul
pop
fldt
stos
sbb
jl
insb
xchg
mov
imul
push
push
jg
loopne
sub
scas
mov
in
pop
int
cli
popf
jp
test
pushf
fisubl
gs
movsl
dec
faddl
fdiv
xchg
or
je
mov
push
mov
mov
popf
lds
mov
inc
movsl
jae
js
dec
js
push
push
leave
jmp
ds
add
sahf
xor
sarl
adc
ret
mov
add
xchg
mov
dec
xchg
in
adc
sahf
push
cmpsl
out
fcoml
dec
xchg
cmp
xchg
dec
clc
fdiv
dec
lods
iret
cltd
imul
sqrtps
or
mov
aad
outsl
xor
pusha
cli
add
fwait
or
dec
push
or
add
idivl
mov
push
aas
and
fsub
es
lcall
dec
and
icebp
sub
test
cmp
cmp
xchg
cmp
mov
lods
js
sub
xor
in
mov
jg
clc
mov
in
jns
inc
cli
jb
dec
or
jmp
outsl
sub
inc
push
test
pop
and
and
jge
mov
jno
cmpsl
sub
ret
int
fistps
in
hlt
test
sbb
push
stos
divl
mov
adc
int3
in
fwait
cmp
xor
icebp
xchg
inc
outsb
lock
test
and
cmpsl
xchg
or
stos
mov
jecxz
stc
icebp
jne
pusha
in
lret
adcb
jle
pop
jecxz
in
arpl
imul
into
stos
les
jmp
jmp
cmpsb
xchg
aas
jp
pop
dec
hlt
mov
data16
sbb
sbb
arpl
sti
inc
inc
inc
imul
fnstsw
or
adc
hlt
push
pop
clc
pop
inc
dec
or
hlt
cs
rorl
mov
lock
divb
inc
stos
xor
gs
gs
arpl
adc
scas
cmp
xchg
mov
jp
add
inc
xor
movsb
cmpb
push
fidivrl
inc
mov
adc
cmpsb
adc
jae
popf
clc
mov
mov
negb
inc
lods
xchg
fidivl
xchg
add
adc
aad
aad
inc
call
dec
fsubrs
mov
jae
dec
pushf
jmp
xchg
data16
xor
or
cltd
fs
pushf
mov
jne
push
pop
xchg
sbb
mov
mov
or
scas
adc
jmp
adc
sub
jo
add
sbb
loopne
and
xor
mov
repz
sbb
inc
add
sub
jge
and
popa
cs
sub
add
mov
mov
in
pusha
in
xchg
pop
aad
adc
sbb
sub
xchg
and
cmp
outsl
mov
add
cwtl
pop
cmpsl
sub
fisttpl
icebp
mov
dec
jp
xchg
aad
or
xchg
mov
idivl
push
mov
cmp
clc
addr16
test
mov
in
push
pusha
mov
adc
add
outsl
rcrl
clc
pop
add
rorl
or
jb
jno
loopne
pop
and
outsl
out
adc
pop
pop
repnz
leave
mov
in
mov
push
das
cwtl
test
dec
roll
fisubrl
imul
stos
ss
fwait
mov
dec
ds
dec
in
fimuls
cwtl
jecxz
repnz
daa
and
divl
movsb
push
scas
insl
mov
loope
hlt
test
das
sub
cld
jb
push
in
or
out
ret
xchg
int
scas
popf
lcall
nop
les
xchg
pop
sbb
xchg
lock
in
pop
out
sbb
mov
stos
repnz
jmp
subl
cld
pusha
xor
hlt
lret
scas
data16
xlat
sbb
jle
out
mov
test
or
test
cmp
jmp
inc
jge
bnd
lahf
std
les
xor
popf
lahf
xor
mov
popf
lods
mov
add
or
loop
scas
je
ljmp
es
sarb
jmp
loop
push
aaa
xchg
rclb
inc
addl
ret
arpl
jmp
jmp
add
out
je
cmpsl
or
dec
sbb
mov
add
mov
push
cmp
mov
jnp
and
leave
pop
fnstcw
adc
popa
lcall
sub
addr16
cmc
lock
push
in
imul
daa
or
adc
sbb
pop
and
daa
xor
pop
mov
pop
fwait
loop
popf
pop
pop
sbb
add
imul
and
dec
jmp
pop
adc
add
sbb
out
js
push
or
inc
pushf
adc
subl
rcll
sub
cwtl
or
frstor
imul
nop
mov
sbb
add
mov
sti
inc
into
and
lds
inc
lods
pop
roll
iret
loope
fnstcw
into
dec
xorb
int3
xchg
pop
sbbb
mov
das
cmp
rorb
leave
call
js
sub
sahf
in
sub
or
shll
shll
adc
test
pushf
mov
adc
ljmp
popa
cmp
pop
rcrl
sbb
xchg
mov
stc
mov
inc
lds
mov
sti
loop
enter
cmpsl
adc
cmp
jae
movsb
cmp
loope
push
in
fildll
rcll
jg
insl
test
jae
push
jae
scas
inc
xor
push
dec
cmp
popl
test
popa
mov
rolb
xor
adc
jb
popa
outsl
leave
imul
out
dec
out
xchg
insl
loopne
mov
cld
lea
mulb
pop
pop
adc
fs
pop
xor
sbb
popf
ja
cs
fcmovu
xor
lds
mov
pop
out
xor
jno
pop
lds
xchg
popa
imul
xor
or
sbb
stos
cmc
dec
test
das
arpl
mov
push
movsl
negl
subl
and
cmpb
sbb
outsl
jge
mov
add
scas
dec
dec
sbb
jb
add
das
xor
inc
iret
std
fistpll
imul
nop
roll
std
mov
test
and
lds
cmp
std
and
stos
and
ss
inc
insb
cwtl
dec
int3
xchg
ljmp
jbe
testb
cmp
mov
xlat
aad
mov
jno
sbb
fstps
ja
gs
outsl
push
cli
in
pushf
std
stos
movsb
add
add
out
clc
idivb
iret
in
outsl
and
inc
daa
cmp
test
out
xchg
add
in
or
push
movsb
dec
and
aas
test
addr16
inc
or
test
in
scas
jae
std
xor
and
shl
mov
push
cltd
outsl
sbb
mov
pop
and
adc
cltd
push
cmpb
mov
pusha
into
or
hlt
fsubs
dec
inc
js
and
or
pop
stc
cmc
dec
adc
mov
sarb
mov
aas
mov
adc
outsb
mov
cwtl
mov
leave
test
dec
aas
fstl
jbe
roll
inc
jle
mov
stc
push
xchg
xchg
pushw
or
mov
lret
ljmp
fisubrl
gs
sub
divl
pop
inc
or
rcrb
testb
in
aam
xchg
add
pop
jbe
shlb
jo
add
popa
mov
mov
stos
xchg
pop
mov
lods
aad
mov
in
push
jno
pop
xor
mov
scas
fcmovnu
scas
sti
and
scas
or
pop
inc
scas
fisubs
xchg
push
xorl
xlat
sbb
loop
repz
inc
mov
subl
insb
inc
bound
mov
xor
gs
cmpsl
fidivrl
mov
mov
sarb
movsb
int3
out
cli
mov
mov
jno
roll
ret
scas
divb
rolb
in
iret
popf
fldenv
movsb
enter
xchg
shrb
add
adc
sbb
es
xchg
jle
sahf
adc
mov
aaa
dec
loopne
cld
push
push
outsl
push
and
add
push
mov
adc
mov
push
imul
push
mov
adcb
and
push
sbb
imul
pop
cmc
aas
movl
fldcw
xchg
mov
sarb
cmp
push
arpl
sub
scas
adc
jns
jae
pop
jns
mov
and
or
vcmppd
repnz
mov
rolb
popf
cli
lods
decl
cltd
xchg
pop
adc
out
das
in
adc
hlt
inc
xor
je
jno
dec
xchg
les
insb
stc
shll
jle
ss
stos
xchg
mov
adc
fiadds
outsb
sub
inc
cwtl
xor
cmpsl
xor
dec
mov
and
imul
dec
mov
mov
jae
inc
xchg
cmc
adcl
nop
xor
popa
inc
mov
xor
jae
ffree
sarl
jne
es
mov
rorb
fistps
push
stos
popa
gs
js
adc
xchg
in
push
fstp
mov
mov
pop
aas
dec
lock
loope
xor
dec
in
and
xor
jne
sub
mov
in
sub
mov
bnd
ja
sbb
aaa
xor
push
out
xchg
mov
pop
loopne
push
leave
adc
repnz
xchg
sbb
or
push
ret
pop
les
xchg
mov
jns
int
cs
and
cmpsb
test
or
mov
mov
shl
aam
mov
imul
pop
jns
sub
xchg
ret
mov
ret
xchg
push
repnz
push
pop
lret
les
ret
int3
adcb
bound
pushf
loope
jne
mov
fcomp
pop
outsb
int
fildll
xchg
mov
fdivr
adc
test
mov
xor
xlat
push
pop
jbe
cld
mov
mov
stc
dec
in
sub
rorl
mov
sub
jl
or
insb
push
push
add
std
dec
jge
push
call
pop
les
loopne
addl
imul
lret
jmp
out
dec
or
pop
dec
mov
scas
ret
shll
lock
lret
dec
mov
push
cmp
aad
shrl
and
lods
xchg
rcrb
ret
fs
out
lds
and
sub
pushf
and
fidivrl
jle
pop
mov
jecxz
ljmp
sti
shlb
int
push
xor
xor
xor
and
dec
lds
mov
xor
insl
add
and
jb
and
jp
push
jecxz
ja
imul
lahf
iret
adc
cmc
xchg
popf
xor
sub
outsb
sub
xchg
sti
out
loopne
arpl
mov
inc
mov
popf
mov
jle
mov
out
mov
dec
mov
inc
sbb
rcrl
push
pop
xchg
popf
inc
push
scas
mov
jge
jmp
sbb
lret
jo
push
xlat
push
inc
std
fldt
and
test
push
pushf
or
sub
dec
shrb
lods
sub
rorb
fcompl
gs
push
popf
xorb
data16
fstps
call
push
sti
movsb
sbb
adc
in
jge
xor
jle
pop
lret
rcrb
jne
scas
test
lcall
or
out
cmc
push
leave
and
sbb
inc
adc
mov
mov
std
lret
push
arpl
xor
loop
push
out
mov
lock
sbb
or
fwait
or
rcr
push
adc
xor
jmp
into
addr16
dec
lea
ror
sub
jno
fisubrl
dec
fmuls
into
stos
push
movsb
subb
and
outsb
test
jne
push
and
roll
sbb
lcall
jbe
mov
jb
cwtl
aaa
stc
inc
test
shl
jae
xchg
add
inc
fsubrl
outsb
movsb
cmpsl
jne
mov
mov
cmp
mov
shlb
sahf
or
test
into
insl
sahf
xchg
cltd
xor
test
and
scas
test
lds
das
shlb
ficomps
pop
nop
outsb
pushf
jnp
scas
cmp
out
fisubs
xchg
repz
clc
fwait
push
dec
and
adc
mov
ret
adc
movsb
and
push
fidivl
dec
lahf
or
or
test
cmp
fnstcw
rcll
stos
mov
push
add
mov
jecxz
shrl
pop
jmp
pop
addb
mov
lahf
lods
jne
insl
cltd
fucom
pop
or
sub
or
or
push
ficoms
shrb
out
test
arpl
add
cmpsb
pop
mov
jnp
nop
cltd
mov
cmp
lea
pop
rcl
jbe
xchg
pop
and
jle
xchg
cmp
xchg
stc
and
lods
mov
cwtl
inc
add
stos
mov
pusha
shll
inc
and
dec
fists
adc
mov
mov
pop
jle
cmpsb
lods
pop
mov
test
shl
dec
lock
jle
data16
pusha
mov
cwtl
clc
mov
xchg
sbb
cmc
or
mov
sahf
out
testl
lods
xor
cmp
mov
xchg
push
daa
rolb
and
popf
sahf
inc
add
pop
addr16
idiv
sbb
or
clc
ret
imul
inc
mov
xchg
mov
mov
fisubrs
sub
cmp
andl
mov
jge
cmpsl
ss
cmp
das
test
pop
call
or
nop
dec
jne
fs
and
and
fs
xor
and
add
aad
sbb
sub
js
pop
or
mov
fs
ljmp
ljmp
cli
cli
xchg
sar
mov
incb
inc
int
cmp
inc
mov
insl
cld
fsubs
lcall
in
pop
js
mov
lods
add
push
iret
and
sub
out
add
pop
lret
dec
lret
mov
cli
mov
sbb
adc
lcall
cwtl
jne
mov
in
sbb
jecxz
hlt
sbb
and
pop
adc
sub
adc
xor
pop
add
dec
pusha
scas
dec
push
in
inc
repnz
push
test
aam
rcll
or
fcmovu
add
cs
add
aaa
cmp
pop
rclb
pop
mov
add
and
daa
xlat
jg
cltd
dec
clc
push
xor
rcrl
popf
add
pop
sarb
movsb
inc
out
imul
jmp
std
hlt
mov
arpl
dec
jge
lret
mov
out
add
arpl
ljmp
xchg
xchg
sub
pop
jne
leave
sub
sub
ret
dec
mov
sub
jns
lods
daa
or
mov
mov
mov
out
cmp
loopne
xchg
pop
mov
xchg
xor
pop
jge
sbb
xchg
inc
scas
arpl
gs
repnz
push
test
fistl
mov
mov
mov
or
inc
sti
cmpsb
cs
cmpsb
lcall
cli
mov
mov
aam
inc
xchg
mov
add
int
gs
jno
cmp
ret
inc
sbb
sahf
push
mov
ja
ljmp
addl
sbb
in
pushf
stos
popa
add
inc
jle
pop
or
addr16
sti
loopne
pop
adc
cmp
call
and
and
shlb
pop
sbb
push
push
fisubs
lcall
es
add
lock
sarb
xchg
and
loopne
sub
xor
scas
xor
lcall
cmpsb
dec
cmpsl
iret
and
scas
gs
rorb
jp
push
daa
add
sbb
fwait
xor
mov
shll
lea
repz
lds
push
push
repz
bound
push
les
mov
ja
lea
mov
sahf
sub
and
dec
jne
sbb
push
arpl
cmp
push
xor
movsb
movb
xor
in
js
jb
mov
sbb
pop
mov
popf
shlb
pop
cli
in
cs
ljmp
stc
shll
out
insl
mov
data16
ficoml
inc
hlt
stc
xchg
inc
test
nop
filds
jge
sub
cltd
mov
insl
das
sbb
std
cmp
jecxz
shrl
cmp
ret
ret
in
fwait
and
icebp
movsb
cs
jle
dec
adc
in
gs
push
cmp
sub
push
mov
and
inc
fs
mov
orl
std
mov
cwtl
btr
adc
addr16
mov
enter
stos
outsl
in
mov
mov
xor
xor
cmp
dec
lcall
sub
movsb
xor
dec
adc
mov
in
fadds
pop
iret
lret
call
popa
andl
sbb
scas
out
xchg
jo
xor
or
pusha
fimuls
adcb
xor
sbb
movsb
adc
add
push
test
cmp
clc
ret
jmp
shl
mov
push
in
cmp
inc
adc
and
sub
leave
push
or
push
jae
sbb
sub
dec
mov
jno
hlt
icebp
xchg
rolb
sbb
xchg
stos
jg
repz
jnp
jno
inc
hlt
shlb
xchg
mov
dec
aad
call
fs
push
jp
fwait
cmp
xor
jbe
mov
mov
call
les
adcl
stos
fwait
mov
js
aas
jbe
sub
dec
add
jle
adc
adcl
lret
mov
sub
outsb
in
push
fistpll
cmp
xchg
test
sarb
ret
repnz
ss
cs
daa
call
jns
pop
fldt
jecxz
mov
inc
ret
arpl
mov
sbb
fsubs
enter
push
xorl
mov
cmp
dec
test
sbb
in
pushf
sbbl
out
mov
and
sbb
mov
pop
push
lret
mov
and
adc
cmp
fcompl
or
jnp
ljmp
push
out
mov
jl
fadd
addr16
mov
dec
daa
jle
xchg
inc
or
mov
andb
je
push
lds
sarl
mov
sbb
or
les
dec
mov
shll
lcall
add
movsw
mov
je
mov
jmp
push
sub
testl
or
ljmp
stc
pop
mov
adc
xchg
stos
incb
jmp
sahf
pop
js
or
popa
fldenv
lcall
cmp
in
out
out
icebp
addr16
or
mov
ds
mov
mov
inc
imul
sub
popf
in
popa
and
out
mov
inc
int3
mov
xchg
pop
jmp
sub
cmc
les
fistps
pop
pop
out
sbb
xlat
clc
loope
out
push
ret
xchg
repz
fs
stos
push
icebp
fildll
pop
test
cmp
into
cmpsl
fs
cmp
stos
dec
aam
stos
hlt
ret
repz
push
lret
push
ret
push
popa
mov
leave
in
test
mov
add
pop
jno
in
ss
test
out
jmp
mov
add
adc
cmp
add
std
sub
xor
imul
jmp
out
push
xor
ds
add
lret
jg
sub
and
cmc
dec
pop
repz
faddl
mov
imul
pop
testl
add
and
adc
jmp
call
stc
pop
xor
lock
jg
sbb
pop
ljmp
push
xchg
call
outsb
hlt
inc
jp
outsl
jge
push
pop
push
pop
mov
push
and
lods
push
not
push
push
in
aaa
mov
jne
sahf
mov
add
mov
imul
jle
fcmove
mov
ds
pop
roll
sbb
arpl
cmp
adc
jno
iret
cmpsb
cmp
adcl
mov
cwtl
cmp
inc
mov
daa
lret
ljmp
cmpl
push
and
add
sbb
cmp
rcrw
call
bound
mov
jae
dec
push
lahf
test
aad
sub
mov
sbb
xchg
gs
in
mov
hlt
repnz
aaa
adc
jecxz
movsl
push
adc
loop
push
jb
aad
or
xor
inc
jnp
add
or
jecxz
and
or
stc
jbe
psubw
xchg
sbb
add
shll
imul
cmp
ror
mov
sbb
inc
test
push
js
sub
in
adc
push
push
cltd
rorl
loop
shl
pop
movsb
ds
fucom
pushf
fdivrs
and
sub
outsl
test
daa
mov
insb
xchg
jp
sub
push
std
in
sbb
lods
imul
pop
sbb
leave
mov
arpl
mov
lea
cmp
pop
and
sub
aad
or
adc
sahf
andb
mov
push
orb
loop
dec
or
xchg
fists
dec
cmc
cs
out
incb
inc
sbb
dec
out
dec
cmp
pop
lcall
jae
sub
int3
ja
inc
cli
bound
xorb
mov
pop
insb
sub
test
xchg
jecxz
les
imul
jl
inc
roll
jmp
push
sbb
pop
jp
jbe
push
gs
test
sbb
outsw
imul
stos
add
xchg
js
pop
sub
out
cmp
shrl
sarb
mov
or
inc
imul
lods
test
arpl
cmp
dec
aad
xchg
inc
xor
adc
jo
jb
sarl
movsl
sub
xor
sbb
mov
dec
mov
xchg
push
pop
push
inc
mov
pop
test
push
push
cwtl
adc
adc
call
rcl
pop
lods
sets
add
adc
mov
cs
inc
ja
lods
xlat
jns
testb
les
rorl
xor
shl
mov
jne
lock
int
mov
xlat
push
mov
jl
jecxz
jnp
mov
je
xchg
test
fsubs
jp
ss
ljmp
mov
push
pop
popf
inc
adc
cmc
and
push
adc
push
jl
cltd
insb
shrb
lahf
into
lret
or
enter
dec
clc
daa
jae
xor
pushf
insl
or
cmc
popf
add
and
and
mov
pop
adc
out
mov
lock
xchg
iret
addl
loope
sub
and
or
jne
jns
jge
inc
mov
leave
or
push
lcall
mov
xchg
push
xlat
xchg
das
xchg
mov
and
aas
clc
inc
mov
mov
int3
jmp
jle
inc
mov
fwait
jl
mov
mov
add
pop
cmp
popf
jbe
and
les
sbb
add
loopne
and
or
fwait
mov
mulb
inc
xor
jle
icebp
mov
ffree
cli
decb
lea
sub
sub
lcall
mov
mov
cmp
scas
pop
sub
sarl
cltd
cmp
mov
cld
fsts
mov
xor
call
rol
add
ljmp
out
jmp
xchg
push
cmp
dec
mov
push
js
mov
fnstenv
pushf
test
ljmp
shrb
xchg
out
rorl
mov
iret
push
and
rcll
cli
dec
sub
rcrb
add
dec
push
inc
enter
pusha
mov
and
adc
mov
mov
and
jb
gs
std
in
push
nop
cmp
adc
sub
nop
xor
call
or
das
or
imul
aas
jecxz
leave
lret
jle
mov
repz
fsubr
xlat
js
je
insb
sub
sbb
jne
fsubr
fsubl
fwait
mov
scas
movl
pusha
pop
adc
addr16
ds
xor
fisubs
popf
lcall
mov
movsb
pop
xchg
out
and
outsb
icebp
sahf
pop
cmp
insl
jle
or
lret
sbb
mov
out
je
jbe
in
jae
es
xchg
std
test
test
inc
cwtl
imul
cmp
cli
jb
and
mov
aad
jae
jge
lcall
out
xor
cmp
popf
sbb
stos
imul
sahf
ficoms
dec
cmpsl
jmp
cmpsl
add
std
flds
inc
nop
arpl
mov
in
sbb
cmp
mov
jnp
lods
mov
popf
mov
jae
pop
das
cmp
pop
cs
cli
loopne
fnstsw
sbb
fstps
insl
mulb
call
pop
inc
pop
cmc
test
pop
lahf
xor
dec
bound
or
xchg
mov
orb
ja
mov
lcall
jno
add
scas
add
push
sbb
mov
adc
jg
andl
lret
push
mov
aad
fadds
cli
data16
mov
ja
xchg
inc
sbbb
lods
out
adc
push
ret
xor
pop
ficoms
jle
enter
hlt
adc
icebp
lods
test
xchg
pop
sbb
popf
rcrb
jge
add
jno
pusha
int3
jg
out
imul
sub
push
and
push
shl
push
xchg
lcall
or
loope
out
jg
outsl
jle
cmp
pop
adc
jle
push
jb
shll
pop
xor
add
addr16
dec
lret
lods
sarl
mov
ret
movsb
addr16
xchg
xor
push
xchg
fdivr
sarb
sub
inc
mov
or
outsl
push
push
cs
test
testb
jmp
xchg
push
push
mov
je
sub
mov
mov
lcall
jge
jp
push
xorl
sub
aas
adc
leave
das
sahf
js
ret
ja
in
sahf
sbb
xor
movsb
or
test
mov
mov
cmp
lahf
in
xchg
push
sub
enter
push
insb
or
std
adc
cmpsb
je
inc
jp
fsts
sarl
frstor
out
cli
call
clc
sbb
nop
in
mov
xchg
push
bnd
mov
aad
lcall
sti
cmp
scas
sbbl
adc
mov
test
divb
dec
jmp
xchg
mov
xor
out
add
into
in
in
scas
add
sbb
mov
call
movsl
je
add
mov
mov
mov
mov
das
pop
dec
mov
jns
pop
aas
jecxz
mov
fcmovbe
or
flds
scas
cmpsl
out
cwtl
mov
es
test
mov
push
fs
add
xor
mov
and
call
iret
test
adc
xor
mov
test
sbb
pop
stos
pop
adc
int3
or
jge
mov
enter
sub
xlat
roll
pop
mov
xor
jno
ss
sar
daa
jmp
lea
adc
sbb
inc
xor
leave
sbb
xor
cmp
lock
pop
adc
in
push
cmpsl
loopne
sub
xchg
mov
push
sbb
imul
les
scas
sbb
xchg
ljmp
mov
dec
jp
mov
cmp
inc
sub
sub
mov
push
test
outsb
mov
ss
fdivrl
or
sub
jo
repz
lea
icebp
adc
jb
add
js,pn
mov
inc
insl
aad
iret
hlt
xchg
outsb
pop
movnti
fldenv
call
out
arpl
pop
adc
lret
and
lcall
jl
mov
hlt
or
jbe
add
xchg
imul
mov
fstpt
imul
dec
add
inc
adc
int3
insb
sar
cmpsl
je
jmp
lods
lock
jns
xchg
lea
test
and
push
pushf
loop
adcb
mov
aam
or
pusha
adc
inc
in
fdivrs
int
das
rcrl
fucomi
pusha
bnd
ljmp
cmp
add
lods
and
xchg
imul
adc
out
fwait
push
repz
pop
js
pop
scas
mov
jns
sub
sbb
repnz
push
aaa
xlat
add
mov
cmc
sub
mov
das
xchg
or
decb
or
pop
das
jecxz
jmp
inc
mov
add
outsb
popa
inc
push
inc
push
fidivrl
repnz
lcall
test
not
xor
sbb
jo
add
sbb
xchg
mov
ss
mov
push
lcall
fcomp
lret
stos
adc
int
fdivl
dec
das
push
push
jle
jno
cmp
cmc
outsb
bound
push
test
mov
push
pop
lods
and
xchg
leave
je
xlat
inc
mov
iret
push
scas
outsl
je
xchg
aaa
or
shr
sbb
mov
repz
mov
aas
sub
jmp
fsts
xchg
out
les
cmpsb
dec
adc
adc
push
fiadds
jae
cmp
jle
inc
lea
inc
or
adcb
or
icebp
stos
dec
jge
ret
jbe
lods
jmp
jge
mov
out
fldcw
mov
jp
aaa
cwtl
sub
push
add
jns
inc
out
hlt
test
push
stc
lea
sahf
sahf
push
sub
and
les
push
cmp
out
mov
inc
aaa
mov
push
ss
mov
inc
mov
loop
mov
std
pop
insb
and
sub
mov
test
inc
add
sbb
test
sbb
test
sub
sbb
jo
jecxz
cmp
mov
call
jge
push
daa
dec
leave
and
pushf
movsb
data16
out
pop
insb
lret
add
sbb
fst
into
in
outsl
out
xor
dec
push
scas
insl
fsts
mov
jno
addl
mov
inc
mov
adc
jg
sub
dec
and
insb
pop
ss
cmpsb
push
sub
jle
outsl
xorl
popa
popaw
fdiv
inc
mov
lods
ljmp
nop
inc
pop
pop
leave
clc
pop
cmc
sbb
test
movsl
dec
movsb
dec
ret
dec
or
cmp
cmpb
xchg
sbb
cmp
loope
add
leave
lods
stc
mov
lahf
aam
ss
iret
jmp
lods
scas
arpl
mov
xchg
sbb
adc
jp
inc
enter
test
pop
fildll
jnp
push
adc
aad
das
pop
lret
es
hlt
daa
pushf
dec
out
stos
cwtl
sub
add
dec
mov
int3
mov
inc
cli
cmp
fsubl
sbb
xchg
xlat
lea
int
addl
cmp
fxch
jbe
mov
repnz
mov
xor
out
out
int
inc
mov
jnp
pop
xor
mov
stos
movsl
jb,pt
jle
pop
inc
sub
pop
int
fstps
push
cmpsb
jne
movsb
sub
push
pusha
xor
jle
xchg
test
sbb
adc
dec
out
loop
aaa
xor
addb
insb
setle
mov
lret
mov
or
stos
pusha
loop
outsb
leave
push
push
add
push
dec
cmpb
addr16
jecxz
xchg
adc
std
push
add
and
mov
fwait
je
adc
jae
roll
cmc
pop
push
pop
subl
add
jge
mov
add
xor
push
in
inc
cmpsb
mov
inc
pop
push
push
mov
or
cmp
test
sbb
idivb
mov
mov
mov
in
push
push
jns
sbb
movsl
adc
pop
mov
mov
mov
pushf
push
xor
inc
test
push
pop
lcall
fnsave
scas
pop
jmp
jg
fldl
adc
adc
dec
ljmp
mov
adc
mov
and
sahf
in
mov
scas
ret
popl
xor
dec
mov
xchg
mov
hlt
out
jmp
clc
stc
sub
xchg
dec
xlat
stos
ret
sbb
ja
xor
pop
outsl
pop
leave
rorb
out
cwtl
aas
dec
xchg
xor
mov
push
mov
mov
cs
cmp
jo
mov
inc
scas
and
add
lahf
push
icebp
imul
ds
mov
xlat
lret
lret
adc
pop
int
sub
mov
adc
add
cmpsl
push
mov
pop
mov
nop
leave
cmp
int3
cmp
mov
stos
xor
inc
ss
test
std
and
or
pop
pop
je
rcll
lahf
fsubrs
lret
and
xchg
icebp
sub
lds
add
xlat
inc
imul
and
shl
cmp
cmp
push
mov
mov
fnstcw
out
inc
fcomps
fisubrl
movsl
sahf
fistpl
lret
sti
jl
sahf
lea
mov
add
push
sub
push
popf
inc
pushf
pop
in
js
in
loope
inc
jne
or
sbb
jns
mov
inc
frstor
sti
out
mov
idivl
xchg
adc
scas
int
xchg
pop
xchg
je
mov
mov
cwtl
push
lahf
cmp
fidivrs
pop
roll
adc
outsb
fstps
pop
in
cli
mov
mov
push
cmp
lods
cmp
sub
jg
mov
xchg
scas
addr16
pusha
push
stc
jp
scas
mov
sub
test
jae
mov
xchg
dec
and
adc
test
popa
dec
popa
dec
fildll
test
fnstenv
mov
dec
ret
inc
lahf
mov
aam
adc
popa
and
mov
lcall
lods
xchg
je
push
ror
bound
ret
add
inc
xchg
jns
push
cld
popl
imul
hlt
sti
fisubrs
inc
xor
inc
cmc
adc
ds
int3
imul
add
loopne
xor
rorb
cmp
mov
adc
push
jne
sti
out
xchg
pop
push
aam
arpl
daa
out
push
clc
dec
aam
push
iret
xchg
popa
lcall
or
mov
pop
mov
iret
xlat
sbb
adc
clc
pop
into
mov
sbb
hlt
xlat
add
bound
enter
cld
fstps
test
je
dec
sub
pop
stos
sub
cltd
cmc
movsb
pop
push
pop
pop
inc
stc
or
jp
push
xor
mov
mov
popa
repz
mov
xor
stos
lock
sbb
adc
lret
and
xchg
pop
testb
mov
aaa
mov
push
pop
xor
jp
frstor
mov
mov
and
addr16
lret
lods
jg
jne
inc
pop
jno
push
aad
sbb
push
out
push
push
or
push
shll
shrb
rol
push
lret
mov
in
pcmpgtw
je
pop
jns
cmp
pop
cltd
mov
cmpsl
imul
push
adc
shll
or
xor
and
sub
dec
jmp
rcrb
orl
daa
and
mov
stos
sbb
mov
cs
repnz
dec
in
mov
es
push
loope
ds
adc
mov
pop
xor
mov
scas
popa
mov
pusha
icebp
hlt
adc
cmp
mov
sbbb
aam
in
mov
out
dec
sub
jmp
sbb
pop
and
aas
ja
cs
jns
movsb
mov
in
mov
mov
jae
jg
dec
jnp
and
into
cmp
add
pop
clc
stos
rolb
in
mov
andb
adc
loop
push
je
out
dec
jmp
dec
jp
adc
fnstenv
lret
xchg
pop
adc
mov
mov
loopne
cmc
std
shl
in
inc
xor
cwtl
or
mov
mov
insb
repnz
stos
pop
jg
jbe
ret
adc
aaa
into
jmp
xchg
xor
cmp
out
or
lahf
jecxz
insb
aam
push
xor
xchg
jno
roll
ds
push
mov
adc
mov
xor
testb
test
test
jecxz
aam
pop
movsb
jb
lds
mov
xor
cmp
jb
repnz
loopne
xchg
mov
je
mov
test
or
std
xor
pusha
flds
les
pushf
mov
jnp
sub
loop
lcall
dec
cld
cmpsb
je
cmpsb
jnp
out
push
or
mov
aaa
jmp
and
cmp
fnstcw
ljmp
data16
shll
int3
push
inc
pusha
ljmp
stos
pop
test
jae
add
inc
xchg
out
cld
jg
cmp
and
dec
stc
xor
dec
dec
loope
and
jo
aas
and
dec
adc
fwait
mov
int
mov
mov
cwtl
repnz
les
cld
je
jbe
jmp
lds
sub
push
sub
push
lods
mov
push
std
xor
sbb
adc
adc
es
pop
pushf
mov
mov
outsl
add
aam
js
rorl
cld
out
sbb
punpckhwd
aad
xor
pop
sbb
dec
shlb
repz
sbb
icebp
pop
xor
xchg
imul
mov
out
jne
fmuls
inc
jnp
jecxz
outsb
outsl
pusha
sbb
sub
push
imul
cmpsb
cmc
aam
fsubrs
push
fldenv
mov
jne
in
dec
mov
aas
inc
repnz
add
dec
mov
lock
cs
mov
inc
jns
cmpl
std
maxps
fidivl
pusha
mov
push
push
rcr
out
add
jl
cmpsb
xorb
xor
filds
mov
leave
inc
mov
into
inc
cwtl
jecxz
jmp
bound
clc
or
imul
xchg
fldt
inc
cmc
or
aad
sbb
push
mov
pop
and
les
cmpsb
cmpsb
fsubl
test
sbb
leave
cs
icebp
out
imul
xor
and
push
aam
mov
dec
jne
mov
call
push
repnz
cmpb
xchg
es
arpl
lock
mulps
cmp
inc
pushf
inc
stc
fwait
hlt
mov
hlt
push
mov
out
mov
int
fs
adc
xchg
push
dec
out
ret
mov
sub
jmp
jmp
xchg
insl
sub
mov
and
cmpsb
cwtl
cmp
out
rcrb
jbe
and
cmpsb
mov
or
and
inc
mov
aas
jl
cltd
inc
loope
mov
js
add
jp
mov
enter
mov
imul
xchg
jge
into
stos
cli
jp
scas
outsb
das
inc
inc
inc
pop
fsubrl
mov
movsb
push
fistps
popa
xchg
jg
test
scas
lods
outsb
adc
xchg
leave
arpl
sbb
rol
cmp
hlt
adcl
fdiv
data16
mov
mov
inc
aam
mov
sahf
mov
out
mov
leave
add
in
pop
push
cmp
mov
xor
mov
pop
inc
pop
jnp
shrl
out
dec
lock
arpl
xor
loope
mov
out
or
fwait
leave
das
dec
add
mov
sub
stc
or
add
and
shlb
mov
jno
sub
mov
pop
fisubs
cmp
loopne
xchg
pop
enter
pop
fsub
xor
adc
pop
xlat
sbb
jb
ja
add
data16
xor
xor
xchg
sub
insl
jmp
pop
fs
in
adc
mov
arpl
mov
in
movsl
xor
xor
mov
das
and
sbb
sub
lea
mov
mov
andb
jmp
leave
jnp
aad
lret
cmpsb
sbb
push
dec
es
push
or
shrb
jno
fwait
inc
mov
or
es
inc
push
jl
add
mov
cmp
das
mov
or
sub
inc
jge
scas
and
xchg
popa
pop
cmpsl
mov
mov
cmp
cld
rclb
int
mov
sub
xchg
or
lret
aad
cmp
inc
cmp
and
xor
cltd
stos
jo
decl
divl
push
jg
pop
push
std
jnp
mov
sub
push
clc
xchg
sub
pop
outsb
xchg
hlt
push
cmp
sbb
into
jb
mov
push
cltd
fsubrs
pop
jl
ret
out
xor
mov
in
test
adc
aam
ret
out
push
pop
jmp
rep
shlb
mov
repnz
outsl
cmp
xor
imul
loopne
push
fnstenv
sarb
outsb
stc
mov
test
lea
inc
pop
mulb
stos
push
mov
add
int
adc
push
sarb
repnz
cmp
xor
stos
cmpsl
sub
stos
lods
inc
lcall
or
stos
in
addr16
pop
mov
push
pop
add
pusha
stos
stos
inc
in
sub
sbb
adcl
cs
out
xor
xchg
sbb
pop
add
iret
push
xor
sub
add
jae
xor
frstor
test
scas
ret
push
push
dec
cmp
inc
push
fisubs
in
andb
mov
scas
xchg
outsl
adc
push
jnp
add
sahf
mov
pop
and
sbb
fmuls
out
insb
je
dec
push
pushf
aad
out
pop
fsubp
inc
push
out
aad
push
or
cmp
cmpsl
negl
adc
jb
sub
cltd
lods
lods
jae
adc
mov
adc
cmp
sarl
fdivrl
add
into
mov
xchg
popa
ds
fimull
ljmp
jle
lods
repz
mov
jno
test
or
stos
mov
aaa
nop
insl
popf
pop
mov
enter
scas
repz
out
sbb
mov
add
fidivs
clc
cmpsb
jno
loopne
add
stos
sbb
int
imul
mov
add
data16
mov
cmp
cli
sbbl
jae
add
push
mov
arpl
push
daa
js
push
jge
loopne
rol
ret
data16
cld
mov
lret
sub
cs
add
mov
lret
arpl
loopne
negb
pop
lret
and
bound
stc
dec
dec
ficoml
mov
or
movb
sbb
mov
jl
cwtl
and
outsl
add
data16
cmp
js
das
das
in
add
out
xor
jno
je
arpl
pop
ds
rol
sub
push
jecxz
insb
pop
adc
std
jp
and
nop
push
push
jns
lods
pop
pop
pushf
or
jp
ficoms
ljmp
mov
xlat
pop
inc
popf
out
xchg
jmp
loop
mov
pop
and
xchg
xchg
or
or
lods
pop
add
mov
int
test
push
jecxz
pop
cmp
mov
push
add
stos
addr16
aaa
mov
xor
mov
push
call
or
shrb
mov
inc
push
adc
adc
test
aad
icebp
xchg
sbb
and
adc
sahf
inc
aas
fs
in
fsubr
imul
pop
rcrb
test
lret
stos
idivb
arpl
mov
les
fdivrs
xor
inc
loope
xor
or
push
jge
jb
push
mov
movsl
sub
out
or
mov
and
sub
sub
mov
in
sarl
call
sub
adc
pop
pop
mov
fidivrs
jnp,pt
adc
push
jae
lret
inc
and
das
movsl
test
pop
dec
scas
out
add
add
or
idiv
lds
int
or
in
push
sub
cmp
outsl
int3
cmc
test
fcom
subb
ds
xor
xchg
mov
shl
imul
push
xor
sub
dec
xor
out
fisubrs
cmp
mov
xor
fimull
jg
mov
dec
leave
mov
test
clc
out
clc
xchg
jnp
dec
popa
xor
les
lcall
ret
pop
mov
ljmp
lret
out
push
adc
and
xor
aad
outsb
xorb
inc
sbb
sahf
test
in
or
movsl
out
dec
lods
mov
lret
inc
pop
mov
sub
lods
adc
push
inc
jle
push
cmp
mov
stc
ss
and
inc
stc
rclb
inc
leave
cwtl
jno
imul
mov
adc
mov
fnsave
dec
pop
xchg
push
lret
jo
lcall
loop
loope
sub
adcb
push
ja
ror
pop
imul
pop
mov
mov
das
pop
mov
cmp
adc
push
leave
out
xchg
inc
in
sbb
mov
insb
pop
adc
jmp
fsts
lock
cltd
les
mov
pushf
inc
or
cmc
mov
movb
add
adc
pop
movsb
lahf
or
dec
lcall
or
bound
dec
gs
cmovne
mov
xor
and
or
jne
aas
sbb
cmp
std
stos
sbb
pop
sahf
sbbb
stos
dec
bound
push
push
sub
mov
shlb
pop
xchg
jno
pop
fs
add
lret
fsubr
xor
push
xchg
pop
add
mov
test
mov
loopne
shrl
adc
sub
outsl
xchg
scas
xchg
lcall
push
sbb
andb
int
add
mov
es
xor
mov
fneni(8087
jmp
xlat
mov
ret
and
mov
mov
sbb
into
sub
adcl
pop
arpl
scas
jecxz
fnstenv
pop
mov
int
stos
xor
mov
repz
and
mov
jmp
push
mov
push
push
inc
cmp
jnp
adc
sahf
cs
stos
jmp
lret
je
xchg
cmp
mov
cmpb
cs
loope
ja
pop
or
sbb
retw
xchg
hlt
add
add
push
aas
testb
ret
and
pop
cmp
fs
add
and
sub
andb
pop
push
test
jge
jl
xchg
sub
jnp
jl
ja
push
imul
orb
cltd
cmp
test
jp
mov
loop
ja
push
xchg
addb
xchg
mov
mov
fnstsw
add
mov
mov
mov
mov
repnz
jle
fldenv
mov
inc
rcrb
in
cli
push
enter
xchg
jnp
sbb
int3
push
imul
mov
icebp
mov
repnz
sbb
adc
arpl
push
sbb
stos
es
push
out
daa
pminub
mov
mov
cmp
add
adc
les
mov
std
add
add
stos
sub
xor
icebp
cmp
lods
scas
xor
ds
xor
repnz
addl
dec
sub
push
lret
test
data16
mov
push
test
aad
cmp
xor
dec
dec
mov
shrb
ret
cmpsl
subl
and
lods
sti
insb
imul
mov
test
hlt
cmp
mov
xor
lea
cmp
xor
xor
mov
jno
stos
in
sbb
pushf
cltd
dec
lock
cmp
icebp
subb
incl
pop
mov
mov
into
test
jno
inc
movl
nop
mov
lock
sbb
sub
cwtl
push
pop
mov
pop
xchg
push
adc
jne
nop
jne
mov
dec
ja
adc
and
mov
lahf
add
or
rcll
or
xor
clc
js
mov
mov
lahf
popa
dec
test
jne
add
das
or
ja
incb
xchg
sub
insb
test
bound
jge
imul
divb
push
xor
and
loopne
insb
fsubrl
and
aad
loop
cmc
and
cmp
cld
sbb
cmp
add
std
ret
push
insb
push
inc
push
sub
lods
popa
xchg
pop
lock
cmp
out
jno
jp
mov
stos
lahf
sbb
xor
push
xchg
loopne
cmc
pop
stos
sub
mov
or
xchg
xor
mov
lods
arpl
mov
movsl
push
xchg
xchg
call
cmpsb
test
mov
and
add
loopne
out
lock
test
fwait
popa
push
movd
inc
mov
and
shufps
fsts
add
stos
dec
sub
rolb
push
xor
fmuls
or
mov
repz
cwtl
mov
jle
repz
pop
and
stos
sub
mov
push
jge
mov
test
mov
mov
push
clc
stos
jns
mov
fdivrs
movsl
sbb
xlat
and
xlat
mov
insl
int3
cmp
in
sarl
lret
push
mov
cmp
lock
push
sbb
adc
mov
mov
pop
test
or
and
xchg
loop
fld
sbb
xchg
push
and
sbbl
inc
sbb
and
lcall
iret
dec
rcl
lods
pop
aaa
mov
adc
ljmp
adc
ds
sbb
jge
das
fcompl
lcall
and
cmp
or
out
sub
scas
mov
dec
cwtl
imul
das
aam
and
pop
sbb
enter
andl
cltd
rolb
mov
ret
inc
test
orl
inc
jle
mov
mov
add
adc
pop
nop
scas
sub
mov
jb
insl
fcmovb
push
xchg
xor
es
call
jb
jbe
stc
dec
hlt
mov
lret
dec
in
outsb
mov
out
pop
push
imul
xlat
pop
negb
mov
iret
sub
cmp
add
pop
xor
sbb
int3
push
inc
mov
xor
sbbl
mov
cltd
mov
in
push
pusha
dec
fcompl
sahf
mov
add
pop
lret
and
sub
or
lea
cmc
je
into
repnz
mov
arpl
mov
add
call
sbb
or
inc
or
into
xor
bound
jb
test
adc
and
or
shlb
andb
xor
dec
mov
lahf
jge
and
add
inc
add
dec
and
and
lock
cwtl
dec
insb
add
addl
fimuls
jbe
dec
sub
mov
push
pop
sbb
sub
mov
inc
mov
xchg
and
test
lods
andb
inc
cmpsl
mov
inc
xlat
pop
pop
add
jb
es
iret
xor
dec
push
mov
cmp
push
jns
ret
xor
push
push
adc
adc
sbb
in
ret
push
or
movsb
imull
ret
out
lahf
sub
cltd
roll
clc
test
jns
push
bound
push
sarl
cwtl
inc
not
jl
add
je
in
ds
sti
mov
cld
aam
fs
ret
in
sbb
and
pop
add
add
pop
add
mov
test
enter
xor
xchg
pop
outsb
ja
sub
pop
sub
push
test
call
loope
cmp
adc
cmp
dec
loope
push
add
cmp
popf
push
mov
pop
xlat
sbb
mov
jmp
mov
mov
dec
dec
adc
mov
sbb
pop
stos
xor
mov
xchg
shll
sbb
mov
sub
mov
push
pusha
fwait
add
sub
jae
loope
push
js
repz
test
fidivs
pusha
adcl
cmp
lods
or
aaa
inc
mull
xor
sarb
adc
adc
lahf
jbe
dec
stos
mov
xchg
xchg
enter
out
jns
jb
cld
cmpsb
aas
shrb
lock
xchg
les
cmp
dec
mov
dec
inc
loope
movsb
loop
imul
xlat
jecxz
inc
or
mov
and
jae
jp
hlt
icebp
mov
fwait
in
cmp
pusha
push
sub
adc
jl
shlb
adc
mov
xchg
loop
add
aam
sub
or
sarl
or
pop
push
test
mov
inc
popa
sbb
xchg
rcrb
hlt
popa
mov
fidivrs
sub
mov
inc
adc
out
inc
imul
xor
xorl
adc
jecxz
ror
adc
add
jo
sbb
xlat
jns
mov
xor
mov
imul
xchg
xorb
outsb
call
jbe
neg
add
loop
mov
xor
adc
or
int
add
jb
add
jge
mov
inc
jns
nop
xlat
enter
cmpsb
mov
arpl
mov
pop
adc
fldcw
aam
add
mov
mov
dec
and
hlt
inc
cmpsl
outsl
je
sub
and
cmp
mov
mov
push
in
mov
sahf
aaa
sub
outsb
pop
mov
and
dec
sbb
icebp
ret
adc
cmp
std
mov
adc
flds
cmpsl
stos
or
nop
jg
adc
pop
add
inc
cmp
lock
aaa
cmp
pusha
decb
into
jnp
pop
fwait
sbb
pop
mull
in
push
push
inc
inc
fisubs
in
stos
int
ficompl
scas
mull
mov
sahf
sahf
push
or
cmp
es
rclb
ret
sbb
sbb
push
movsb
add
inc
stos
das
or
push
xchg
mov
jns
in
mov
shll
xchg
fimuls
les
fimuls
icebp
dec
pop
lcall
or
xchg
out
pop
paddusb
jg
dec
movsl
popa
cli
out
and
icebp
adc
test
sbb
loope
insl
rcl
mov
push
mov
idivl
and
mov
cld
sub
push
pop
xchg
jnp
mov
push
test
mov
insl
sbb
or
pushf
sarb
cmpsb
jge
and
push
jl
repz
dec
or
addr16
into
lock
ret
lcall
pop
push
or
mov
sub
lcall
push
stos
sbb
lods
push
or
mov
pop
and
loop
add
enter
push
stos
ds
mov
push
sub
test
cmpsb
int
mov
pop
stos
stc
or
in
and
xchg
test
test
mov
ficompl
divb
pop
pop
cmc
and
lahf
pop
imul
daa
fisttpll
shrl
std
jno
push
test
adc
cmp
int3
and
push
xor
push
loopne
mov
scas
dec
and
add
rcl
pop
nop
shl
nop
cltd
outsl
lahf
xchg
es
imul
ja
cmp
fs
mov
inc
pop
xor
fstpl
scas
jno
lea
outsb
pop
mov
mov
cmpl
pop
mov
mov
aas
rorl
sub
inc
lods
inc
repz
sbb
fcmovbe
dec
xchg
inc
aad
sub
xchg
mov
vcvtsi2sdl
ljmp
sbb
push
fldenv
les
out
rcll
out
mov
out
cli
test
rclb
lods
xchg
pop
jbe
sub
ja
pop
subb
loopne
and
cld
dec
mov
sti
pop
or
inc
addr16
inc
and
add
sbb
fbstp
push
push
sbb
lods
imul
push
loope
add
lret
mov
mov
xchg
shll
xchg
pop
out
lcall
ljmp
or
je
cltd
lret
divl
les
xchg
add
jns
test
push
mov
or
xor
outsb
lea
outsl
inc
cmp
pop
add
fcoms
sahf
outsl
inc
or
shlb
xchg
fwait
rolb
repz
inc
test
push
add
enter
loopne
pop
aaa
mov
lds
popa
pop
jp
xor
xor
popa
xchg
add
in
clc
fstl
and
data16
push
push
in
mov
add
jns
push
jo
sbb
and
scas
jo
and
addr16
mov
cs
add
sahf
call
jle
pop
fwait
ds
mov
pushf
test
lret
les
les
xor
ds
and
fnstsw
cmp
js
cmp
daa
pop
push
pop
jno
mov
out
xor
mov
popa
out
sbb
or
pop
mov
pusha
gs
aaa
scas
sub
pop
leave
ljmp
fcmovnb
and
mov
out
add
sub
mov
mov
lock
cld
loop
or
lea
lahf
popa
out
dec
jae
mov
es
fs
mov
jp
in
cmp
test
xor
pop
mov
jp
lods
push
cli
push
xchg
push
inc
mov
sbb
mov
cmc
lret
xchg
cmovge
add
xchg
sbbb
pop
inc
repnz
fdivl
and
push
sub
xchg
aad
xor
lahf
cmp
sbb
pop
arpl
rcrl
ret
es
push
addr16
mov
mov
scas
in
lods
xor
loop
incb
fnstenv
push
cld
scas
and
sub
jno
ret
jg
jno
nop
xchg
iret
fs
pop
or
or
std
iret
test
test
or
sub
ja
insl
mov
jnp
mov
mov
inc
stos
std
cmp
mov
fadds
int
movaps
fistps
xchg
scas
or
es
mov
add
cmp
lcall
xchg
mov
dec
test
push
cmp
out
test
test
mov
into
push
mov
fsubrl
cli
jmp
xchg
stos
fiaddl
aam
mov
dec
fcoms
ja
ss
push
popf
push
push
loopne
or
and
test
pop
mov
cmp
repz
jns
les
jle
lea
jp
ja
out
add
cs
mov
lock
shl
xchg
hlt
inc
ljmp
or
stos
bound
test
jle
insb
rcrb
push
lret
imul
and
outsb
negb
sarl
dec
int3
xchg
jb
lret
or
sbb
es
cmp
es
sub
mov
insb
jae
xorl
pop
dec
in
sbb
xor
mov
gs
pop
int
mov
sbb
in
jmp
and
jge
and
cmpsl
sbb
sbbb
mov
jle
push
scas
pop
test
jbe
inc
cmc
push
add
daa
hlt
shrb
mov
addr16
and
lea
adc
and
sbb
adcb
lock
out
inc
and
fimull
sti
lods
push
fwait
addps
fxch
add
jo
iret
stos
pop
add
xchg
call
je
push
pushf
or
aad
test
out
clc
xchg
mov
mov
dec
xorl
scas
movsl
jge
dec
imul
call
add
cmpl
imul
je
mov
fwait
jnp
movsl
loope
test
xor
cmpl
insl
xchg
and
sub
mov
xor
or
push
push
dec
mov
add
adc
pop
enter
aaa
push
push
mov
sub
sub
mov
mov
in
insb
mov
jae
out
pop
loop
mov
fwait
mov
mov
jp
and
jmp
cs
jecxz
add
scas
loopne
cwtl
call
out
repnz
aam
sbb
out
pop
sub
stc
xchg
add
testl
das
mov
jge
and
mov
mov
inc
xor
mov
lea
pop
xchg
cmc
dec
arpl
gs
bound
aam
popf
notb
outsb
ret
fildl
out
or
and
adcl
mov
mov
movl
fnstsw
inc
dec
stos
pop
mov
imul
mov
scas
push
and
outsl
sbb
icebp
mov
cmp
push
std
pusha
clc
insl
jp
xchg
dec
pop
mov
aad
repnz
jae
add
lahf
gs
aas
fcmovne
rol
jl
lret
sub
movq
pushf
jle
sbb
fxtract
xor
jl
imul
pop
inc
xchg
gs
pushf
pushf
fwait
mov
mov
dec
lret
pop
fsubrl
and
push
mov
scas
popf
iret
adc
cmp
mov
push
xor
pop
inc
aaa
fistpl
jmp
cld
lds
divb
sub
loop
dec
and
stos
cld
mov
or
sarb
in
or
punpckldq
fs
aam
std
idiv
push
mov
push
test
jp
push
movsb
xchg
xor
nop
push
in
pop
vorps
inc
sarb
jmp
xchg
lods
adc
xchg
mov
mov
sbb
icebp
jne
rclb
cmp
inc
mov
out
cmp
out
pushf
cmpsl
dec
clc
pushf
push
xor
ss
push
sbb
and
cmpsl
cli
adc
insl
push
cmp
mov
cmp
call
mov
or
sbb
xor
inc
pop
andl
or
xorl
or
inc
add
dec
jne
push
roll
dec
inc
aad
sub
in
in
mov
or
add
ja
add
iret
xor
pushl
sarb
push
idivb
pop
imul
and
dec
mov
or
pop
adc
and
loop
arpl
dec
or
mov
jbe
inc
mov
adc
mov
jns
dec
int
push
mov
rol
add
dec
fwait
insb
or
push
aad
mov
imul
cmp
mov
lret
lods
dec
and
insl
adc
mov
iret
sti
pushf
mov
add
pop
and
hlt
dec
mov
xor
mov
fprem1
popf
rcrl
ljmp
xchg
mov
sub
mov
nop
sub
xchg
mov
and
jp
test
sbb
add
out
mull
das
jno
jno
leave
push
pop
jg
sbb
cmpsl
test
aas
mov
pop
add
adc
mov
mov
or
mov
sub
movsb
ret
push
lods
stos
jecxz
in
pop
mov
out
mov
sub
aad
sub
adcb
pop
int3
xchg
test
pop
out
mov
test
mov
xor
or
shrl
inc
sbb
adc
les
or
dec
mov
inc
mov
or
fimull
sti
scas
sbb
jecxz
es
inc
int
fnstsw
push
jg
aad
sbb
mov
in
inc
iret
iret
leave
jle
enter
xor
push
mov
mov
xlat
push
xchg
push
sbb
sarb
enter
dec
in
push
and
mov
jmp
xchg
mov
repz
mov
jmp
bound
sub
inc
push
in
push
or
xor
mov
mov
daa
and
test
pushf
pop
pop
jg
loopne
push
out
push
ss
movsb
negb
pushf
test
adc
in
mov
sbb
hlt
arpl
repnz
and
fs
and
cmp
cwtl
mov
or
mov
jno
cmp
adc
leave
inc
test
in
dec
push
cld
xchg
pop
out
test
loopne
out
mov
hlt
mov
ret
movsl
pop
sbb
testb
movsb
xor
xor
sub
and
std
xor
mov
or
cmp
aaa
bnd
sub
mov
or
sbb
scas
xchg
popf
sub
push
lahf
popf
outsb
or
dec
add
fnstcw
jae
call
add
sbb
or
imul
les
outsl
rol
jmp
es
in
jl
sarb
or
jbe
mov
scas
ror
add
fistl
orl
repnz
sbb
stos
sbb
mov
dec
mov
push
sbb
popf
dec
mov
mov
mov
ljmp
xchg
adc
inc
sub
lds
jnp
push
fnstenv
and
rcll
vandps
cwtl
xor
lcall
int3
cld
push
scas
sub
cmp
add
imul
test
fsubr
cli
or
movsb
mov
out
inc
dec
cmp
adc
pop
xor
jae
cmc
ret
sbb
inc
or
mov
in
pop
ret
aam
mov
insb
cmp
cltd
inc
jbe
call
dec
jp
mov
xchg
jle
add
mov
sarb
and
push
inc
mov
fcoml
int
pop
test
xchg
dec
mov
shrl
mov
fs
inc
jns
repz
inc
adc
mov
dec
mov
xchg
xchg
xchg
inc
lahf
jmp
rclb
in
jns
inc
ret
sub
addr16
pop
dec
xchg
mov
and
divl
in
mov
dec
mov
sub
cmc
mov
mov
mov
fnstenv
jmp
pusha
mov
pop
cmp
inc
pop
arpl
add
adc
jge
jnp
push
xor
lea
pop
nop
cmp
xor
mov
aas
pushf
mov
sbb
negl
bound
add
es
cld
gs
pop
iret
imul
inc
imul
or
xlat
and
es
fidivs
inc
nop
dec
or
mov
jg
sub
push
sarb
setne
jmp
cmovg
sub
sarl
push
sbb
fiaddl
pusha
or
pushf
movsb
jp
popf
jle
andl
clc
xchg
adc
hlt
dec
jne
lea
jp
xchg
movsl
xchg
outsb
mov
insb
sarl
lods
cmp
mov
out
not
in
xor
jb
cmpsb
int
cltd
cmp
int
imul
fabs
xchg
lret
dec
leave
jge
and
arpl
pop
out
mov
xchg
pop
pop
aad
jb
fmull
popf
jp
mov
iret
fcomps
jp
mov
mov
lcall
inc
dec
in
sub
sbb
jns
aas
push
jo
ss
sub
stc
jo
pop
orb
stos
xchg
mov
or
lds
jl
popa
clc
sbb
sub
sub
stc
pop
icebp
inc
aam
out
test
sahf
xchg
jne
xor
mov
pop
jbe
xchg
and
fmuls
mov
or
mov
adc
mov
fistps
js
jbe
jge
stos
ret
cltd
xchg
fs
or
sbb
test
xor
adc
cmp
jge
adc
sub
cwtl
xchg
pop
cmp
push
fadds
int
jo
fs
inc
cmp
and
ret
negl
pop
push
mov
stc
rcrl
pop
shrb
jno
int3
std
xor
jmp
in
xor
push
daa
test
test
adc
ljmp
fnsave
xchg
ljmp
adc
add
stos
jo
test
xlat
xchg
pop
icebp
fildl
mov
or
cmp
fldenv
or
icebp
jb
add
inc
outsl
test
roll
jnp
jl
xchg
lret
jo
icebp
inc
cmp
and
sub
fwait
std
mov
mov
mov
xchg
scas
xchg
in
push
jne
cmp
jae
add
movsl
add
push
add
mov
mov
enter
nop
dec
popf
push
xchg
dec
xchg
mov
and
imul
fs
adc
dec
in
fadds
inc
jbe
mov
pop
sbb
and
jne
jmp
sub
fwait
enter
cmp
out
xchg
xchg
dec
enter
add
dec
adc
call
jbe
add
je
pop
and
xor
pop
or
lods
loopne
dec
push
push
push
ficomps
mov
mov
ret
mov
jmp
push
repnz
sub
push
imul
fsts
outsl
adc
push
lret
push
sbb
mov
push
out
and
lcall
cmp
pop
pop
sub
punpcklwd
fwait
cmc
jnp
cmp
in
cmp
mov
cmp
test
sub
push
inc
xchg
jnp
sahf
imul
dec
jne
shll
pop
mov
push
push
push
or
rcl
xchg
cmp
xchg
cmpsb
and
icebp
bound
scas
iret
shlb
mov
jae
fs
push
js
movsl
fistps
mov
jge
cmp
mov
xchg
aaa
mov
daa
pop
popf
loope
movsl
xchg
inc
hlt
mov
mov
fisubrl
add
mov
and
dec
xchg
cmp
push
pop
in
leave
jns
push
cmp
add
dec
cli
adc
xor
insb
aad
cmp
jp
add
jb
cmp
xchg
leave
in
push
jb
cmc
dec
pop
and
mov
dec
int
arpl
jge
out
add
adc
and
and
fs
xor
mov
test
mov
xor
fld
cmpb
fstpl
fdivrp
sub
push
xor
in
inc
mov
sbb
xchg
or
xorb
popa
jne
dec
into
ss
inc
mov
aas
sarl
add
test
push
mov
mov
sbb
push
cmp
add
stc
bound
ljmp
dec
dec
fwait
cli
xchg
cli
test
inc
pusha
sbb
stos
jg
aaa
repz
test
sub
icebp
shl
pop
dec
jbe
xchg
mov
int
mov
and
xor
mov
add
pop
dec
jge
inc
addr16
cmpsl
mov
cmp
aad
cltd
mov
mov
mov
push
push
mov
add
push
sbb
xchg
repz
sbbl
inc
push
push
popa
cli
dec
call
or
pop
add
iret
and
lds
out
add
imul
push
iret
lods
push
sbb
adc
stc
jle
addr16
outsl
push
inc
out
xchg
cli
ljmp
xchg
movsb
out
stos
sub
lods
xor
jns
icebp
icebp
std
dec
fwait
outsb
into
mov
xor
cli
xchg
or
std
stc
mov
jmp
stc
jnp
loopne
es
xor
push
jl
popf
pop
roll
in
mov
daa
test
xchg
pop
lds
xor
lret
int
add
cwtl
bound
gs
inc
or
xor
jno
decb
out
inc
push
outsb
lahf
pop
adc
cmc
in
jg
insl
jecxz
adc
loopne
or
enter
pop
xchg
mov
pop
adc
sbb
or
and
bound
ficoml
jnp
outsb
call
lss
ja
dec
sbb
xchg
sbb
dec
dec
shll
and
fdivrl
enter
mov
jb
movl
jg
mov
mov
or
pusha
lock
mov
adc
out
adc
push
insl
xlat
jg
lods
sbb
dec
sbb
popa
lcall
fnstcw
in
xchg
out
or
cmp
add
add
popf
call
add
popf
lds
prefetch
or
xlat
dec
lahf
jle
fs
nop
into
adc
pop
fisubrl
aas
pushf
push
mov
fldenv
andb
mov
lret
push
scas
in
push
leave
adc
idivb
pop
fmull
iret
mov
inc
sub
add
xchg
lods
int
jl
adc
xor
pop
lds
cld
push
inc
pmullw
fs
inc
pop
and
loopne
dec
mov
mov
add
cmp
insb
and
lods
mov
xchg
loope
lods
sbb
inc
mov
fwait
mov
cmpsb
inc
popa
and
pop
jo
sub
rorl
cli
xchg
imul
mov
dec
ja
pop
lods
aam
scas
jne
imul
jmp
test
stos
insb
dec
push
dec
jecxz
adc
mov
pop
add
inc
in
sbb
pushf
nop
mov
int3
jmp
divb
dec
das
lds
jns
lea
sbb
inc
mov
and
jb
out
divb
push
mov
or
push
aaa
jl
popa
xor
aas
pusha
test
pop
loope
scas
lods
mov
mov
xor
loop
push
into
popf
add
lock
push
shrb
stc
sbb
mov
pop
xorb
jne
pop
dec
shrl
in
out
dec
adc
idivb
pop
ja
rcrl
adc
ss
imul
sbb
cmp
dec
dec
add
lret
add
add
fnstenv
out
clc
sub
jb
std
cmp
dec
sbb
fnstcw
repnz
cmp
mov
mov
loope
jne
pop
xchg
mov
pushf
push
lock
aad
add
push
shrb
jae
adc
push
movsl
dec
and
or
fwait
testb
movsb
push
push
call
mov
xor
negb
or
fiadds
dec
mov
and
cs
dec
stc
dec
jnp
pop
test
mov
in
jae
lret
movsl
popf
test
mov
and
push
cmp
cmp
xchg
jne
xor
cmp
andb
call
fs
stc
sbb
sub
mov
fadd
push
pop
adc
mov
xchg
aaa
or
rolb
outsl
adc
pop
xor
pop
jl
jbe
mov
dec
lods
xchg
fadd
mov
cli
jg
mov
lcall
scas
sub
mov
decb
outsl
xor
sbb
mov
push
or
orl
xchg
movsb
in
push
addr16
lcall
push
push
pop
pop
push
fnstcw
mov
enter
push
mov
aad
outsb
in
xorb
cmpl
and
sahf
jns
mov
push
sbb
stc
jg
insb
push
mov
es
or
mov
pop
test
dec
notl
push
out
mov
adc
dec
xor
xor
fdivrs
dec
jmp
adcb
daa
pop
aad
mov
out
push
nop
pop
cmp
lahf
sbb
lods
push
xchg
int
fs
cmp
nop
mov
call
cld
neg
rorb
mov
test
loop
lret
add
push
sub
jae,pt
lcall
adc
out
sbb
mov
jecxz
pusha
xchg
clc
or
orb
dec
divl
cmp
sbb
dec
push
dec
int
arpl
testb
movsl
jno
fisubrs
jle
and
das
movsl
mov
sub
dec
inc
mov
orl
jno
aaa
or
ds
clc
push
lea
adc
push
cli
mov
decl
js
dec
test
js
ds
mov
in
mov
arpl
rorl
mov
lahf
adcl
push
add
subb
std
in
outsl
inc
pop
xchg
repz
xchg
test
shll
aaa
movsl
cmp
sub
insl
jecxz
xor
adc
lret
cmp
inc
insb
xor
js
call
fbld
scas
xchg
int
xor
cmp
shll
xchg
leave
outsb
or
and
inc
test
iret
fs
repnz
inc
or
jp
mov
outsl
aam
mov
mov
dec
idivb
xor
jne
scas
out
into
sub
sub
flds
and
cmp
cwtl
pushf
lcall
hlt
push
movsbl
div
pop
inc
lcall
add
sub
jp
and
push
sub
add
mov
jge
adc
mov
fldenv
test
inc
push
push
das
fdivs
loope
jb
sarb
stc
nop
jmp
jns
lods
repnz
lods
cmpsl
mov
pop
shll
imul
rorl
rorl
sbb
fs
js
lods
inc
jnp
es
xor
iret
pop
lahf
or
out
sti
or
shlb
ds
mov
xor
iret
arpl
out
xchg
int3
xlat
dec
shll
test
push
rolb
mov
movhps
repnz
repnz
sbb
sub
daa
add
mov
pop
mov
push
inc
sbb
or
sub
pop
inc
out
leave
sarb
fldcw
push
pop
insl
cmc
std
adc
dec
or
ss
fwait
mov
test
addb
cs
dec
addr16
xor
sub
adc
aaa
ret
sub
test
out
sbb
jecxz
aam
xor
jecxz,pn
pusha
fidivl
aad
mov
ja
adc
aad
das
push
cmpsl
sub
and
scas
pop
insb
nop
push
dec
cmpsl
idivl
sar
jb
aas
add
lea
sub
add
add
mov
sub
mov
jle
cltd
test
sub
rcrl
mov
mov
mov
fiaddl
cmp
test
gs
pusha
xor
add
jle
push
pop
movsb
ret
lods
sub
mov
arpl
adc
nop
sbb
adc
mov
inc
pop
adc
inc
push
cmp
das
dec
lcall
rol
xchg
jb
push
bound
mov
outsl
bound
aad
xor
gs
repnz
rclb
cmp
imul
sbb
in
in
xchg
fdivrs
in
lahf
sti
sbb
faddl
shl
or
insl
mov
orl
mov
insb
stos
mov
mov
and
imul
int3
insl
cmp
ret
loop
movsb
insl
fcomip
lods
add
adc
mov
sbb
dec
jb
in
xchg
xchg
mov
repz
add
push
or
lds
mov
cmc
repz
xor
jbe
nop
gs
xlat
out
cmp
pop
dec
out
sbb
cmpb
xor
fimuls
xchg
out
sbb
mov
xchg
in
mov
stc
sub
call
push
mov
dec
imull
xor
sbb
aas
out
imul
insb
push
sbb
pop
push
ficomps
iret
rclb
pop
xor
outsl
fimull
les
pushf
mov
dec
pushf
xor
sbb
mov
scas
jmp
jnp
insb
test
rorb
sbb
rcll
mov
pop
enter
sub
ja
mov
push
cmp
lret
inc
dec
loopne
inc
sub
or
jns
imul
stos
mov
and
ljmp
rcr
mov
data16
ljmp
pop
loopne
or
and
mov
sarl
jb
sbb
dec
les
movsl
jae
andl
fwait
jbe
sbb
fbstp
lret
or
pop
add
cmp
or
pop
mov
sub
lods
loope
and
and
inc
int
xor
jl
inc
push
or
sbb
push
aas
shrb
jnp
add
jae
sarl
jnp
and
inc
leave
fsts
or
in
push
or
aaa
and
jl
cs
mulb
gs
jp
jnp
fs
movsb
in
and
xchg
lods
cmpsl
xchg
add
adc
cmpsl
push
jmp
insl
xor
insl
leave
pop
js
jb
sahf
pop
jle
pop
adc
popf
push
dec
sbb
hlt
loopne
popf
lods
pop
into
imul
inc
add
add
fldl
es
mov
rorl
aas
mov
mov
adc
inc
mov
jmp
sbb
scas
inc
rcl
addb
pop
fwait
pop
ret
jnp
inc
icebp
sub
mov
inc
lds
lret
imul
or
and
imul
popa
in
into
mov
je
jle
mov
fdivrl
push
add
mov
sbb
add
int3
cbtw
sbb
xor
movsl
xlat
leave
test
mov
xchg
or
test
mov
outsl
addl
aam
dec
test
jl
mov
mov
mov
sbb
sbb
in
xor
call
dec
shlb
cmp
scas
outsb
ljmp
pop
scas
cmpsb
mov
addr16
mov
and
ds
jmp
mov
mov
dec
mov
jno
clc
je
xor
sbb
into
adc
jmp
jmp
ficompl
cld
xchg
jbe
or
mov
aad
pop
lcall
pop
jle
and
cmc
xchg
and
mov
mov
sbb
adc
pop
lret
lods
or
mov
je
xchg
mov
or
cmpsl
xlat
mov
sbbb
fmull
ret
pop
push
cmp
lock
xchg
sub
inc
adc
out
sbb
fcomps
rolb
call
xor
push
push
loope
orb
imul
rcrl
insl
ret
cli
sbb
mov
add
push
jp
loope
in
es
imul
pop
pop
popf
mov
dec
xchg
cmp
dec
sbb
repnz
mov
shr
test
sub
aaa
mov
push
nop
out
loope
inc
push
ret
sar
adc
sahf
daa
pop
call
add
cmc
cltd
arpl
in
and
sub
jbe
lcall
insb
imul
pop
add
mov
or
jecxz
add
add
mov
dec
ss
adc
jae
movsb
ja
xor
movsb
xchg
or
dec
mov
or
add
sbb
test
cmp
and
mov
adc
mov
mov
fldl
test
out
xor
decb
stc
fcomi
and
jmp
pop
int3
pop
ss
cmp
inc
xor
cwtl
aaa
outsl
add
into
cmp
fisttpll
iret
inc
mov
fadds
ljmp
sub
fstpt
adc
lcall
fisubrl
push
test
sub
hlt
aaa
ljmp
and
inc
push
sub
insb
mov
rol
inc
clc
bswap
inc
push
bnd
aaa
cltd
jno
pop
loope
loop
sbbl
dec
cmp
je
gs
mov
jmp
mov
test
filds
xor
pop
adc
inc
lahf
jge
int3
loopne
idivl
gs
add
pop
pop
jbe
mov
jmp
outsb
nop
es
outsb
push
fwait
sbb
jle
push
fimuls
add
ljmp
clc
call
or
lcall
dec
mov
cmpsl
dec
gs
lds
sub
sub
jnp
call
jecxz
das
sahf
inc
imul
mov
or
and
cmp
push
fs
lret
mov
dec
fnstcw
sbb
in
enter
subb
add
jno
adc
xchg
sbb
or
and
inc
fwait
xchg
fadd
xchg
loopne
dec
iret
xchg
std
dec
fldt
xchg
push
pop
add
in
sub
jecxz
clc
popf
mov
mov
out
ret
jbe
stos
xchg
mov
dec
mov
lcall
xor
xchg
push
nop
std
shll
mov
xor
sub
and
inc
repz
fcomps
aaa
sbb
fistpll
out
mov
fcoms
cmp
mov
jns
insl
cmc
or
ret
aad
rol
and
rcrl
xorl
mov
stos
sbb
icebp
mov
in
cld
fistl
or
ja
out
mov
push
adc
out
je
test
push
int
inc
pop
ss
mov
sbb
or
test
in
dec
iret
jns
in
sbb
push
sub
loope
pop
adc
or
and
xor
cmpsb
fcomp
mov
setl
cld
sbb
dec
push
xorl
mov
scas
mov
add
or
mov
test
add
hlt
adc
inc
std
insb
mov
mov
ret
pop
add
mov
rolb
pop
push
dec
test
and
addr16
pop
insb
ret
leave
rcll
sbbb
shll
addb
loope
sbb
into
mov
jo
fidivl
pusha
push
mov
mov
cwtl
hlt
mov
aaa
scas
mov
push
ret
xchg
iret
xor
xor
mov
pop
ror
aam
and
sarb
js
pop
mov
xchg
clc
inc
dec
add
xchg
inc
pop
fsubs
push
jecxz
cld
flds
sbb
int
aam
daa
call
enter
inc
jo
sbb
xor
sbb
cli
frstor
ja
aam
adc
ds
add
jns
add
xor
cmpsb
fcomps
sub
or
xchg
sbb
or
sub
imul
aaa
dec
or
test
sbb
test
out
inc
dec
pop
imul
push
xor
pusha
mov
inc
aaa
jne
call
pop
fcoms
movsl
std
push
out
fucomip
inc
dec
cmp
inc
jns
mov
fstpt
mov
adcl
jne
jl
shlb
jl
shl
int3
jbe
shlb
lret
loope
dec
stc
lcall
sub
hlt
jl
loop
cmp
cmpl
push
cmpsl
scas
enter
adc
cmp
jno
add
dec
mov
jl
xor
push
inc
in
xchg
mov
call
vmovapd
xlat
adc
xor
add
and
jns
test
jae
push
xchg
pop
rcll
jb
outsl
mov
imul
inc
call
mov
roll
pop
dec
mov
sub
jae
cmpsb
inc
stc
jp
test
sbb
ja
insl
addr16
push
cs
aad
mov
cwtl
pop
jp
jnp
push
insl
mov
or
cmp
lea
add
add
push
push
cmp
pextrw
dec
lds
mov
and
sbb
sbb
push
repnz
iret
aaa
mov
fwait
hlt
mov
ss
sub
add
adc
test
imul
dec
std
int3
or
test
call
negb
xchg
push
xor
push
loopne
mov
xchg
aad
imul
arpl
add
inc
icebp
inc
adc
in
sbb
jmp
fcmovnbe
ret
and
jo
dec
in
inc
adc
fisttps
cld
mov
mov
lcall
push
ds
and
xchg
in
shll
lock
sbb
cmpl
fisubrl
xor
adc
xchg
movsl
mov
cmp
xchg
cwtl
scas
dec
sub
inc
ss
shll
call
pop
xor
push
mov
jb
cld
imull
sbb
addb
lds
ljmp
je
jle
xor
popf
cmpsl
sbb
test
fnsave
aad
aam
cmc
imul
sub
fs
lods
leave
pushf
cmp
shlb
push
ret
sbb
cltd
mov
mov
cltd
out
aaa
inc
mov
xor
loope
fistps
movsl
ja
mov
mov
nop
jno,pn
sete
mov
cmp
mov
jo
ret
movsl
adc
adc
shll
and
data16
outsl
push
add
add
pop
add
push
lret
test
mov
inc
mov
add
repnz
or
sub
cmp
jbe
pop
push
pop
test
lods
sbb
mulb
sub
imul
or
loop
ficomps
jmp
push
prefetcht1
or
outsb
movsl
stos
jbe
mov
mov
ljmp
jmp
fiadds
fidivrs
jno
cld
movq
dec
mov
and
aam
cmp
jmp
xchg
fisttpl
in
arpl
push
mov
add
maxps
dec
gs
cli
xchg
shlb
pop
inc
cmp
cmp
jns
fs
lret
inc
hlt
sbb
fwait
xchg
movsb
sbb
jmp
sahf
js
add
jge
iret
cmp
ror
idiv
rorl
jecxz
mov
popa
mov
push
adc
adc
jg
push
pop
lock
and
xor
adc
push
call
pop
sbb
xor
inc
push
jl
mov
clc
lea
sbb
mov
into
mov
sub
and
imul
mov
dec
sbb
sbb
into
add
mov
in
mov
mov
outsl
add
lret
push
add
lods
outsb
arpl
movsb
mov
xchg
clc
lds
jne
mov
into
jle
test
mov
cmp
sub
and
inc
adcl
push
lods
hlt
sbb
lock
mov
lods
test
lods
jge
test
sbb
mov
xacquire
lea
ficoms
inc
ss
dec
int3
into
cld
movsb
andl
test
imull
pop
sub
arpl
shll
and
ss
int3
jge
out
ret
jp
pop
adc
xchg
popf
int
imul
ss
mov
push
lods
fptan
out
icebp
pop
loop
dec
xor
push
mov
and
or
fisttpl
scas
hlt
mov
mov
orb
or
add
mov
cltd
jnp
ffree
mov
fisubrs
pop
jne
mov
push
mov
imul
hlt
pop
or
xlat
dec
repz
lcall
jb
inc
jg
stos
adc
mov
loop
cmc
movsb
dec
fs
test
and
xchg
fcmovne
in
cltd
int
xchg
push
xchg
js
test
add
cmpsl
les
hlt
shl
mov
ds
mov
inc
sbb
mov
jbe
adc
mov
sbb
daa
out
sbbb
addb
sahf
int3
xchg
and
lahf
cmp
or
pop
or
cli
mov
mov
push
cs
stos
mov
orl
rclb
xchg
out
psubusw
sar
sub
ljmp
inc
daa
inc
push
je
sub
mov
scas
repnz
xchg
push
rorb
xor
adc
popa
out
xor
ljmp
sub
or
rorl
call
jmp
rcl
mov
dec
add
cmp
dec
jbe
or
or
add
pop
aaa
cmpsl
lods
out
sbb
dec
or
imulb
pop
pop
jne
push
popf
mov
fdivs
gs
pop
movl
nop
sbb
test
dec
xchg
cwtl
imul
adc
lods
or
lcall
mov
pushf
add
mov
fldenv
cmp
js
pop
mov
cmp
cmp
sarb
insb
and
pop
jg
xor
jns
fistpl
sbb
in
mov
into
fdivrl
ficomps
into
jb
testb
leave
inc
cmp
ljmp
dec
lahf
jmp
push
fbstp
push
mov
cmpsl
sub
sub
cltd
cmp
jg
sub
arpl
std
cmp
out
jp
out
and
xor
cmp
add
add
lcall
int
into
sub
fsubl
out
cs
pop
jne
xchg
movsl
adc
or
or
pop
rorb
xchg
pop
mov
pop
xchg
scas
jns
push
mov
dec
adc
popa
in
and
shrl
push
xchg
shl
js
mov
ret
fildl
in
push
cmc
ja
and
fists
out
xor
inc
and
mov
stc
jnp
fimuls
mov
xchg
idivl
loope
push
cmp
push
push
aam
xchg
mov
jo
int
push
out
mov
pusha
push
cmp
cwtl
stos
xchg
push
inc
insl
aam
push
rol
fistl
mov
add
lods
adcb
jl
pusha
and
iret
movsb
sub
xor
push
es
add
add
lods
mov
pop
loopne
into
pop
jle
cmp
je
xor
xor
push
scas
movb
int
out
push
mov
pop
das
dec
cld
mov
cltd
lds
cmp
fstl
imul
sbb
push
inc
xchg
addl
lret
xlat
aas
lea
fldenv
inc
jne
or
cmc
and
movsb
adc
scas
pop
loop
xor
adc
ficoms
inc
in
mov
icebp
leave
insl
jns
arpl
add
test
sub
aad
mov
rcr
adc
fildl
hlt
sti
cmpl
shl
xchg
push
add
dec
dec
xor
clc
dec
push
popa
inc
ret
movsb
outsb
dec
ficoml
call
sahf
mov
imul
popa
push
int
into
fbstp
push
out
out
lods
aam
stos
int3
bound
mov
xor
xlat
pop
pop
push
and
cmp
idivl
clc
xchg
and
aam
fxch
inc
test
int3
ss
cs
sahf
icebp
push
sub
or
xor
fs
in
pop
dec
fidivrl
out
ljmp
push
std
and
jg
push
mov
lods
push
in
jp
es
sarb
je
push
fadd
in
inc
out
sub
test
jae
dec
cmp
inc
scas
lret
cmpsl
sarl
sahf
mov
arpl
fistl
lea
ss
mov
flds
mov
sub
jg
incb
xor
dec
pop
out
cmp
add
fimuls
push
fidivrl
insl
xor
dec
cmp
mov
popl
xlat
mov
pop
pop
xchg
dec
cltd
jge
jg
rorl
mov
ficomps
add
call
jl
mov
inc
sbb
scas
jl
enter
xchg
pop
xlat
mov
mov
insb
cmp
sub
pusha
dec
mov
pushl
ljmp
cmc
mov
mov
push
dec
push
outsl
xor
pop
push
cmp
push
xchg
xchg
mov
std
sbb
pop
aam
ss
cmp
cmp
pop
testb
test
sbb
adc
dec
scas
rolb
xor
xchg
bound
push
push
sub
scas
sub
ret
insb
dec
xor
ss
out
lcall
imull
inc
lock
sub
imul
in
out
lds
and
and
bound
in
push
andb
scas
aaa
pop
adc
adc
fisttpll
cld
repz
clc
jge
test
add
hlt
out
cs
xor
jle
lods
mov
push
or
inc
pushf
cmpl
pop
shll
cmpsl
jb
fld
push
icebp
jl
in
int3
and
repnz
sbb
cmp
les
loopne
inc
sub
mov
rolb
sbb
lea
xorl
test
loopne
pop
lret
mov
scas
xchg
jno
out
and
mov
lods
or
push
cmp
mov
mov
mov
dec
mov
lret
xor
stc
addr16
ret
insb
jnp
pop
call
or
jo
xlat
or
push
sahf
mov
dec
xlat
inc
push
lcall
push
sarb
sub
pushf
bound
test
pop
or
lahf
mov
repnz
jl
mov
daa
jg
mov
mov
ljmp
arpl
lea
movsb
rclb
test
lea
add
mov
inc
jno
jo
fwait
movb
lea
jno
mov
rcrb
sub
xor
xchg
shlb
jmp
push
sarl
jae
je
or
push
sbb
imul
mov
push
ret
shl
add
hlt
cmp
fwait
jns
mov
out
data16
arpl
mov
movsl
sub
push
rep
scas
pop
xor
cmpsl
or
mov
xchg
dec
mov
mov
xlat
in
gs
push
out
enter
adc
add
sub
loope
loop
out
cld
aad
inc
xor
cli
pop
push
cli
mov
cltd
add
test
mov
aaa
ret
sarb
push
aaa
or
add
mov
xchg
in
mov
ds
sbb
mov
mov
and
and
insl
push
mov
xchg
push
call
mov
add
loopne
addr16
jmp
sub
jns
dec
aaa
bound
and
lds
in
cmp
mov
mov
loope
jmp
cli
mov
sbb
sahf
std
jbe
adc
pop
inc
pop
mov
fmuls
add
sub
leave
or
inc
lret
cwtl
dec
mov
mov
sbb
fidivl
aam
notl
ss
inc
filds
jg
add
lret
cmp
pop
xchg
add
cs
pop
fwait
inc
mov
push
jo
cmp
xchg
rorl
mov
pop
loopne
imulb
cmp
outsb
mov
push
mov
iret
xchg
ret
push
insl
out
xor
mov
lea
and
xchg
out
xchg
push
push
cs
xchg
es
shrb
mov
std
imul
in
cmc
xor
loop
lods
jg
mov
jne
inc
jnp
or
sbb
or
dec
add
mov
repnz
cmp
xchg
or
ret
scas
mov
roll
rclb
rorb
add
sub
add
add
or
pushf
addb
mov
fldenv
pop
leave
ret
jge
test
cld
fwait
push
cwtl
loop
leave
jb
rcrl
push
notl
fiadds
cmpsl
push
xchg
repz
sub
faddl
ljmp
adc
fsubrp
push
int3
fcomip
jbe
sub
addr16
lods
xchg
mov
repnz
push
mov
popf
roll
pop
mov
das
xchg
push
ret
imul
jecxz
pop
pop
fdivl
mov
pusha
rep
mov
and
push
xor
fcompl
xchg
loopne
sub
mov
mov
or
inc
sub
lret
mov
xchg
cmpsl
and
sar
cld
mov
rcrl
ret
sub
stos
jae
movsb
cwtl
sar
sbb
lahf
mov
add
adcb
movsb
fs
scas
xchg
push
or
inc
sti
or
lea
xor
mov
adc
adc
add
xchg
xor
jle
jo
lods
xor
pop
rorl
pop
stos
cli
insl
xchg
jl
cmpsb
mov
subb
scas
mov
push
dec
mov
andl
in
daa
xor
xchg
jp
scas
pop
sub
sti
mov
sbb
push
dec
lcall
push
pop
pop
int3
fisttps
setge
bound
push
movsl
clc
lret
ljmp
and
aas
cmc
push
or
dec
inc
inc
leave
rcrb
add
repnz
shll
fstpl
pop
mov
lcall
gs
mov
pop
and
mov
movsl
cltd
mov
clc
add
repnz
icebp
test
sub
test
sub
ljmp
xor
add
or
push
dec
enter
mov
aas
bound
jne
test
sahf
movl
repz
lock
xchg
lock
mov
cmc
add
repz
movsl
push
sub
sub
nop
jge
pop
out
sub
sbb
sub
cmpb
xor
clc
loopne
sub
rcll
sar
mov
popf
clc
push
dec
dec
scas
jge
lret
push
into
ret
inc
xor
bound
mov
in
js
inc
rorb
xchg
dec
jae
int3
cltd
push
mov
and
inc
and
adc
adcl
repnz
and
adc
addr16
arpl
jnp
jge
pop
adc
push
sub
cmp
stc
outsb
clc
and
jo
dec
mov
lds
cs
orl
arpl
pop
mov
imulb
iret
insl
test
leave
les
iret
xchg
loope
mov
or
insb
insl
xchg
adc
jl
dec
sub
mov
scas
mov
pop
adcl
imul
aaa
jno
in
sbb
and
subl
and
add
ljmp
repz
dec
fcoms
jle
adc
dec
sti
mov
cltd
faddp
add
xor
lds
cs
aas
push
push
leave
adc
daa
mov
mov
dec
pop
lods
nop
lret
mov
push
xchg
lcall
int3
and
push
mov
pop
xchg
int3
les
inc
mov
loop
lods
fs
fisubl
repz
lds
testb
and
mov
int
icebp
adc
scas
and
ljmp
repz
mov
adc
fisubrl
cmpsl
leave
imul
push
test
or
scas
out
fs
insb
and
xor
in
int3
mov
mov
xor
mov
out
fsts
iret
xor
xor
dec
fsts
inc
sub
xchg
sub
or
sahf
sbb
add
outsl
jno
leave
shlb
mov
push
dec
mov
stos
das
scas
bound
fbld
lret
add
mov
pushf
popl
leave
push
les
add
xchg
xor
repz
call
aam
lea
aam
push
and
sbbl
xchg
mov
inc
and
jae
sub
sbb
cmpsb
jecxz
cltd
mov
popf
test
ret
mov
cmpsl
add
mov
adc
loopne
lea
cli
jno
les
shll
mov
pop
inc
mov
xchg
push
push
repnz
add
sub
pop
pop
mov
jg
scas
and
pop
lret
jnp
js
outsb
cmp
outsb
fs
loope
icebp
mov
xorb
cmpsl
int
inc
sti
sbb
js
push
lds
jp
dec
insb
std
adc
mov
or
movsl
enter
dec
mov
in
and
in
popa
data16
push
cmp
jmp
dec
adc
paddusb
add
adc
adc
xor
lahf
xchg
pop
pop
jae
lock
or
jns
das
mov
push
lret
adc
inc
push
cmp
cmp
lret
jg
outsb
push
daa
sub
pop
mov
es
inc
ss
test
jp
daa
dec
lret
mov
add
cmpsl
mov
mov
outsb
test
sub
popa
fldt
pop
cmp
out
inc
movsl
mov
dec
jge
lret
dec
pop
aas
sub
insl
jb
cs
cs
add
bswap
out
push
cmp
ret
inc
in
mov
xchg
cli
movsb
xchg
mov
pushf
sar
addr16
inc
leave
je
and
test
pop
jno
cmc
test
xor
push
push
sub
rorb
imul
cmp
ja
mov
mov
adc
xchg
mov
jne
lds
jmp
dec
out
das
andb
fwait
das
add
pop
ret
repnz
pushf
cmp
dec
imul
fstp
pop
xchg
xor
mov
jp
sub
jnp
orl
fsubrs
sub
addb
imul
jno
movb
pop
push
adc
adcb
enter
data16
or
in
bound
es
test
mov
and
push
lods
dec
add
daa
and
cmp
mov
lahf
jb
mov
lret
xchg
fnsave
arpl
lcall
push
test
aad
cmpsb
xchg
rol
in
fwait
jge
std
cmp
jae
push
fildll
out
or
outsb
in
and
push
or
bound
mov
insb
pop
jp
scas
jno
push
mov
push
loop
add
stc
xor
cwtl
xchg
adc
push
sub
xor
adc
popa
cmpsb
in
and
inc
ja
mov
dec
andl
out
popa
mov
jge
inc
xchg
or
mov
jl
mov
cmpl
or
fldcw
aas
test
in
jg
adc
scas
push
lock
sahf
xchg
cs
xor
jnp
push
fistpl
xchg
jae
pop
mov
cltd
decl
sub
into
xor
mov
mov
lret
test
test
mov
xchg
in
test
aam
cmp
movsl
in
mov
xchg
fstl
ret
notb
push
fistpl
dec
shl
sub
and
add
adc
jmp
cmp
cwtl
jmp
fiaddl
in
jb
jbe
xchg
or
jne
in
mov
notl
push
or
cli
gs
arpl
mov
fistps
daa
xchg
aaa
sbb
push
lea
lods
adc
pop
mov
aam
xor
rcl
scas
adc
ljmp
arpl
fsubrp
mov
push
mov
dec
jns
out
xor
cmc
fsub
pop
jno
pop
js
arpl
ret
push
mov
cli
andl
and
pop
loope
int3
adcl
fs
repnz
movsb
add
into
jae
out
lods
enter
push
mov
popf
push
jl
pop
inc
or
sub
ds
test
scas
or
js
add
imul
aam
mov
daa
repz
mov
mov
orl
fs
cmp
lods
dec
mov
imul
enter
fsubrl
aad
insl
cmp
into
mov
lods
push
sahf
rclb
mov
out
inc
movsb
cwtl
jns
test
and
xchg
push
push
out
sub
call
clc
lahf
add
movsb
lret
add
sub
inc
in
ja
outsl
test
and
sbb
cmp
test
aad
jbe
push
movsb
cmp
pop
mov
sub
and
cmp
xor
and
cmpsl
pop
add
and
sbb
push
sbb
adc
xchg
call
xor
das
xor
jle
cli
enter
xor
pop
xchg
call
adc
sbb
sbb
call
lock
pop
xchg
dec
mov
mov
leave
and
std
aaa
incl
call
dec
add
mov
jbe
xlat
inc
dec
stos
ret
cmp
out
sbb
not
testb
outsl
rsm
mov
add
sub
test
bound
cmp
imul
pop
ret
xor
inc
lods
sti
xchg
lds
cmpsb
sbb
jmp
movsb
push
sub
xchg
xor
pop
push
xchg
cmp
sub
sti
out
sti
add
add
sarb
test
loop
arpl
mov
and
ss
cld
jmp
nop
and
inc
lret
push
or
stos
adc
push
clc
cmp
insl
je
movsb
xchg
imul
ljmp
ljmp
cmpsl
stos
sahf
lahf
xchg
adc
out
push
int
cmp
sub
sub
xchg
movsb
pop
mov
popf
mov
fistpll
pushf
xchg
xchg
and
int
ret
repnz
lock
aaa
stc
lea
add
inc
push
mov
pushf
rcrl
cmpsb
sbb
insl
pop
dec
lock
movsl
jb
ss
lcall
inc
cwtl
loop
test
fcomp
pop
lock
test
pop
dec
dec
mov
ffreep
fbld
xchg
jno
push
loopne
and
xchg
lea
into
jge
lahf
push
jno
jg
lret
ljmp
outsl
arpl
mov
mov
lret
stos
cmpsb
pushf
icebp
cmp
sub
mov
in
gs
inc
stos
test
inc
sub
add
sub
xchg
inc
fadd
out
jge
pop
ret
xchg
ljmp
movsl
outsl
mov
mov
cmpsl
inc
jge
loope
mulb
cld
in
dec
scas
les
jl
dec
loope
inc
call
add
mov
repnz
gs
push
negb
aad
jo
mov
dec
pop
xchg
dec
mov
mov
push
in
mov
sbb
add
mov
and
xchg
or
cli
mov
int
dec
inc
nop
push
add
mov
ss
ds
aaa
cld
mov
mov
lahf
cmp
outsl
int
pop
xchg
xor
xchg
fadd
ret
scas
and
fsubs
insl
xor
aas
pop
ds
jb
cltd
cmc
lcall
dec
inc
imul
pusha
adc
mov
mov
sub
out
stos
sub
mov
xor
test
push
inc
lahf
pop
jmp
lods
lahf
cltd
xchg
sarb
imul
jnp
push
es
xchg
stc
lds
sarb
std
cmp
mov
shrl
arpl
mov
ss
aam
ds
loopne
inc
aad
add
pop
push
and
push
xor
push
cmpsb
adc
jne
push
add
pop
repz
lahf
stos
fldenv
aam
mov
pop
sbb
inc
push
fwait
inc
or
xchg
inc
leave
push
in
insl
pop
ja
orl
repz
adc
add
add
es
movsl
aam
cwtl
adc
sub
sbb
lret
jle
cmp
jp,pn
js
sub
cmp
clc
push
ret
stc
xor
mov
inc
movsb
push
push
ljmp
push
jl
sub
loopne
cli
test
or
jle
sub
or
hlt
fisubrl
fstpl
xor
inc
jbe
adc
mov
mov
mov
rep
ret
pop
jecxz
pop
sti
pop
test
mov
incb
orl
sbb
pop
sub
push
pop
jp
dec
fsubs
push
xchg
adc
xchg
outsl
stc
stos
mov
das
test
jecxz
push
roll
scas
cltd
aaa
ret
xchg
cs
dec
xchg
xchg
repz
ja
lret
sbb
jb
mov
into
and
jmp
in
sbb
mov
mov
add
psrlq
jno
xchg
pushf
fs
enter
pushf
inc
push
clc
jl
jg
add
arpl
jge
push
xor
jb
outsl
jl
xchg
and
dec
ja
fmulp
ret
and
xchg
cwtl
insl
push
ss
xchg
push
test
setl
adc
and
mov
pusha
sbb
jno
and
pop
push
mov
scas
add
or
bound
cmpl
dec
xchg
aas
outsl
into
inc
mov
pop
in
fistpll
mov
and
int
movsb
cltd
mov
rolb
or
mov
inc
outsb
inc
jp
xor
aad
je
test
ljmp
sbb
cli
daa
push
dec
lea
lcall
out
leave
pop
jmp
out
mov
push
and
sahf
fwait
cmpsl
enter
movsb
push
sbb
or
push
jo
and
mov
push
cmp
jns
rolb
fisubrl
or
jnp
and
rorb
aas
and
cmp
or
out
call
mov
repz
jne
mov
dec
add
mov
add
leave
mov
sbb
lods
outsl
sbb
dec
imul
lds
and
push
mov
jns
adc
cwtl
push
mov
mov
push
xor
mov
sub
test
mov
adc
mov
addl
xor
mov
pushf
ds
mov
js
outsb
mov
cmp
rclb
push
and
in
inc
dec
decl
adc
out
arpl
scas
cltd
roll
js
xor
imul
popf
leave
add
inc
scas
movsl
sbb
fnstenv
sub
in
into
stos
sub
imul
fildl
loope
mov
dec
and
arpl
lret
xor
mov
stc
out
mov
test
gs
push
mov
jns
je
data16
xchg
mov
jnp
jle
clc
movsl
fwait
scas
fdivl
inc
dec
scas
and
outsb
test
lahf
orl
in
xchg
xlat
push
push
and
dec
scas
mov
fildll
pushf
sti
mov
pop
sbb
fbstp
dec
roll
mov
pop
into
jne
xor
push
out
xchg
and
sbb
das
dec
data16
mov
fistps
lds
cmp
and
cwtl
adc
mov
ret
loopne
and
ret
adc
and
jae
and
jge
jns
push
leave
out
inc
rcr
jo
std
sbb
out
loopne
xchg
shll
jbe
enter
mov
mov
mov
sbb
test
mov
push
xlat
inc
ja
out
sub
xchg
stos
jae
cs
inc
fs
lcall
int
inc
movsl
enter
js
mov
inc
cmp
aam
mov
xor
or
mov
jle
dec
and
mov
in
and
xor
push
mov
add
sbbb
dec
inc
fs
cmp
cmp
sahf
ja
sub
bound
shrl
imul
addr16
jae
xor
data16
jle
xorb
xchg
cmp
pop
in
and
and
aam
pop
pop
or
inc
sub
hlt
adc
insb
cmp
arpl
mov
cmp
sahf
adc
jp
dec
andb
or
shl
mov
xchg
xchg
add
add
cmp
pop
jl
stos
jl
aas
jl
clc
sti
jmp
jg
sbb
mov
cmp
pop
xor
in
cmp
hlt
repnz
fstpt
mov
shrl
mov
in
and
cmp
hlt
xor
rol
push
fwait
sub
out
and
stos
or
xchg
mov
adc
loop
dec
mov
dec
and
pop
lret
sub
mov
in
inc
adc
pop
fwait
sub
mov
jl
dec
jo
scas
pop
sbb
mov
sub
mov
iret
mov
out
daa
mov
cld
dec
in
iret
ja
push
call
in
dec
cmp
cmp
test
mov
stc
mov
in
sub
cmp
dec
nop
lds
jns
jmp
repz
stos
mov
fidivrs
push
xor
adc
dec
add
movsb
and
jp
sbb
cld
adc
je
repnz
inc
ret
and
test
les
daa
mov
cltd
xchg
pop
fwait
inc
lea
mov
rcr
or
pushf
test
cld
add
ret
rcll
add
mov
jmp
push
adc
lock
int
push
mov
mull
cmp
fsubrs
pop
pop
cli
cmc
mov
cmc
xchg
stc
repz
sub
xor
xor
or
jecxz
adcb
int
int
pop
test
cmp
or
out
fcom
mov
mov
mov
dec
and
cld
in
mov
int3
div
cmp
add
dec
les
and
int
cmc
jno
sti
dec
fincstp
inc
xor
push
cmpsl
or
mov
lahf
jbe
xor
loopne
cs
insl
cwtl
xor
movb
sti
sbb
or
adc
jbe
sub
dec
fbld
adc
mov
cltd
test
shl
mov
push
or
es
icebp
cwtl
sub
and
xor
lahf
cmp
sbb
pop
dec
xchg
sub
and
mov
lret
sbb
jo
jbe
jge
notl
js
dec
cmc
insb
mov
push
addr16
push
js
push
push
in
insl
pushf
dec
sbb
cwtl
push
insb
sbb
es
insl
sbb
sbb
rol
lcall
lahf
and
push
mov
lods
cmp
cmpsb
ljmp
xchg
jns
mov
push
iret
std
cmp
lahf
insl
cltd
jo
repnz
dec
jg
pop
rcl
pushf
shlb
call
je
sarb
and
or
cltd
icebp
jmp
cmpl
mov
xor
in
mov
push
push
das
fwait
repnz
loopne
add
out
jno
mov
xor
jo
mov
push
lds
into
sbb
enter
cmpsb
ds
std
gs
movsb
pop
mov
dec
mov
add
out
inc
sub
mov
daa
xchg
aaa
add
cwtl
rclb
mov
mov
addr16
fcompl
mov
cld
outsl
fnstcw
push
inc
adc
jecxz
cmpsb
pop
ret
das
mov
leave
or
lock
in
pop
mov
jbe
test
jmp
inc
pop
push
inc
repz
and
xor
push
adc
fnstcw
scas
mov
mov
dec
sbb
push
push
and
mov
push
mov
out
pop
xchg
dec
mov
stos
mov
jnp
out
outsb
ret
cmpsl
fcoms
loop
ja
in
mov
adc
sahf
insl
jmp
jo
fiadds
push
add
mov
in
lea
stos
push
fdiv
cwtl
push
fimull
mov
in
std
incl
inc
mov
xlat
movsl
repnz
lock
adc
sub
repz
lds
push
lock
sub
sbb
mov
mov
pop
das
std
in
xlat
inc
or
inc
shl
inc
pusha
loope
add
mov
dec
pop
push
fcompl
ja
jmp
pop
push
push
xchg
fwait
sarl
ljmp
dec
push
cltd
xchg
push
andb
aad
add
rcr
imul
cs
xor
cltd
dec
ss
mov
push
push
addr16
add
cwtl
iret
sub
ficomps
pop
mov
push
out
pop
or
mov
inc
and
test
test
sbb
sahf
cltd
das
frstor
xor
lcall
pop
inc
enter
pop
ljmp
push
adc
push
icebp
sub
lahf
and
or
inc
cmp
aaa
jg
js
and
daa
and
sub
insb
mulb
iret
lret
mov
insl
ret
dec
shlb
or
leave
movsl
xor
into
test
inc
inc
fistps
test
dec
cmpsb
int3
push
test
sahf
shrl
xchg
fcoml
jle
and
or
sub
add
xchg
popa
movl
outsb
dec
popa
out
andb
cmp
push
cli
sahf
pop
cmp
imul
test
sub
js
sub
xchg
sbb
adc
or
jns
mov
out
icebp
lods
sub
fisubrl
aad
shll
mov
es
sbb
fidivs
mov
insl
int
rcr
sub
loopne
test
ret
cwtl
loopne
mov
ss
sbb
xchg
ret
pop
inc
dec
out
add
lcall
pushf
jbe
sbb
and
lods
mov
aam
mov
stos
lret
push
push
pop
mov
push
aam
and
imul
jge
dec
add
xor
cltd
add
inc
sub
dec
mov
sub
add
loope
adc
lds
dec
push
rorl
shlb
icebp
dec
sar
mov
add
xchg
jb
bound
ja
push
les
sbb
sub
arpl
xor
mov
loope
mov
dec
nop
jo
cmp
data16
xchg
mov
rorl
leave
jge
sub
loope
pop
cmc
mov
cld
insl
cmp
pusha
sub
leave
int
cmpsl
dec
aaa
in
or
jmp
fdivrl
lods
faddl
jmp
cmpsb
fwait
int3
jmp
inc
mov
xchg
or
lods
cmp
pushf
bound
mov
nop
dec
les
xchg
mov
shrb
inc
bound
test
stos
out
sub
xchg
mov
push
cmp
loop
push
adc
jp
push
sbb
inc
sub
mov
std
gs
mov
loop
pop
cmp
dec
xor
pop
sahf
sbb
dec
lret
and
inc
sub
aas
ret
sarb
ss
sahf
xor
or
xor
sub
jae
sbb
int
rclb
lock
cmpsl
aaa
subb
sti
pushf
fdiv
sbb
mov
or
outsb
int3
loopne
repz
mov
push
mov
fdivl
cmp
sbb
mov
cmp
insl
stos
jle
enter
repz
das
jo
pop
and
sbb
pop
push
and
repnz
adc
xchg
inc
rorb
dec
lods
fcoml
int
dec
sbb
mov
pop
dec
cmp
cli
sbb
mov
jbe
xor
lods
fstl
cs
js
cmp
xchg
inc
push
inc
sar
inc
loopne
ret
inc
or
ret
jb
pop
push
andl
xchg
loope
sti
inc
xor
aad
subb
jle
in
lods
mov
or
aaa
add
add
fstpl
mov
inc
mov
inc
xchg
sbb
jp
push
xor
cwtl
push
in
scas
mov
add
rcr
mov
insb
stos
out
filds
insb
out
fidivrs
cmp
insb
or
or
das
pop
push
ljmp
adc
pop
lods
push
scas
movsl
cld
adc
fistpll
adcb
xor
and
lock
je
icebp
sub
cwtl
iret
push
lcall
and
je
adc
lock
inc
push
call
mov
divl
cmp
fs
push
rorb
sbb
movsb
cmp
xor
orb
ljmp
ds
ret
or
sub
mov
or
fsubrs
push
cmp
or
scas
fs
dec
jmp
mov
xchg
xorl
jno
mov
mov
cmpsb
jbe
dec
pusha
ja,pt
hlt
mov
pusha
stos
out
xchg
adc
lret
or
cmpsl
jo
cld
jo
mov
xor
pushf
xchg
mov
sub
ret
inc
or
and
inc
icebp
pop
jp
mov
ja
mov
in
dec
jbe
pop
xchg
lcall
mov
fnsave
jge
pop
aaa
cmp
xchg
jnp
cmp
lret
dec
fs
push
ret
adc
cs
jb
popf
fcomi
xchg
sub
and
sbb
clc
fdivrp
cld
enter
mov
mov
addl
mov
fildll
enter
lahf
mov
jl
sbb
xor
mulb
sbb
test
sub
sarl
push
push
aam
mov
cld
jne
mov
jp
xchg
push
lcall
pop
lock
cmpsl
ds
clc
stos
mov
adc
xchg
inc
cmpsl
scas
inc
sbb
xlat
aam
aam
aas
sbb
into
mov
or
inc
and
push
inc
test
inc
insl
xchg
adc
jle
insb
sti
in
popa
jo
jl
jo
stc
push
imul
inc
stos
inc
mov
dec
pop
mov
mov
xchg
mov
imul
movsb
jp
das
je
cmpsb
pop
jge
xchg
sbb
xchg
cs
stc
pusha
imul
fidivrs
xlat
or
out
nop
lock
andl
jg
pop
mov
adc
xor
push
dec
mov
dec
addr16
push
sbb
frstor
repz
lods
fs
repz
mov
aam
cmpsl
movsl
nop
jecxz
cmp
xor
outsl
dec
add
movsl
sub
test
test
ljmp
add
outsb
aam
inc
test
mov
or
pushf
loope
adc
sub
mov
clc
int3
pop
mov
dec
lret
nop
fcompl
std
in
mov
xor
pop
jns
lret
fsts
dec
in
andl
xor
imul
adc
adc
pop
cli
adc
jb
arpl
imul
scas
or
or
aam
adc
cmp
or
insb
mov
adc
push
mov
xor
jmp
pop
xor
sub
cwtl
push
mov
sbb
mov
ss
mov
sbb
inc
cmp
das
out
loopne
cwtl
daa
into
sti
inc
lret
arpl
push
jae
dec
push
idivl
sub
mov
scas
scas
nop
and
xor
imul
xchg
mov
push
loope
ret
mov
mov
cld
xor
imul
out
dec
push
fsubl
imul
out
loope
or
pusha
and
sub
lret
sub
pop
test
fisubs
push
movsl
adcb
xrelease
repnz
les
inc
lcall
inc
sbb
xchg
sti
mov
stos
adc
test
andb
xchg
push
test
das
cmp
mov
xor
subl
pop
cmp
sub
mov
sbb
sahf
pop
push
inc
jae
jmp
mov
rorb
shrl
xor
xchg
in
or
xchg
add
adc
dec
push
pop
mov
adc
adc
in
xchg
mov
test
movsl
cmc
inc
sbbl
ljmp
shrb
dec
cmp
push
cmp
pop
scas
cmp
lahf
rcrl
jp,pn
xor
fcmovb
shlb
adc
ud1
and
xchg
mov
shll
xor
adc
enter
hlt
dec
lods
or
popa
std
stos
push
cmpsl
shll
mov
cltd
fisttps
ret
sbb
rcll
mov
fwait
fwait
das
xor
fs
push
in
subb
addr16
lahf
in
jmp
fdivs
adc
dec
lock
js
fcmovu
std
and
pop
xchg
sub
loop
sbb
adc
push
iret
movsl
nop
lret
popl
add
mov
addr16
jo
add
and
inc
mov
aad
jmp
mov
cwtl
fnstsw
adc
pop
aam
cmp
push
lock
pop
jno
add
fisubrs
in
popf
test
and
and
cmpsb
or
ja
push
pop
aaa
stc
sahf
out
and
jl
dec
imul
pop
pop
popl
cmpsb
lods
ret
les
dec
sbb
sbb
sbb
stos
mov
dec
aad
sar
lcall
add
cmp
add
int
leave
adc
xor
mov
dec
xor
inc
adc
push
adc
jnp
std
adc
xlat
and
mov
jl
insl
cli
mov
mov
jecxz
cmc
stos
add
xchg
sub
fnsave
out
and
test
xor
pop
dec
gs
fsubrs
mov
inc
sub
notb
shl
jge
cmc
jl
jecxz
hlt
das
pusha
mov
xchg
jnp
cmp
and
enter
jne
lahf
mov
sbb
ret
and
pop
in
push
aam
adc
stos
jge
fs
mov
mov
bound
xor
adc
leave
cmp
xor
jnp
xchg
mov
mov
ss
jno
das
sti
lcall
out
imul
mov
inc
or
inc
sub
sbb
inc
lret
std
push
sbb
and
outsl
aad
adc
or
stos
lock
rorl
imul
out
aaa
std
jnp
or
lods
xor
les
xor
out
pop
sbb
jmp
xchg
mov
cld
and
dec
add
dec
fwait
je
lods
cltd
pop
fwait
push
mov
movsb
jge
icebp
mov
inc
inc
repnz
inc
and
inc
in
das
les
cltd
inc
shlb
adc
push
jo
xor
xchg
and
int3
dec
and
mov
or
testb
imul
mov
stos
or
imul
push
jne
sub
lods
mov
test
jmp
cld
xor
mov
mov
loope
xor
jg
movsb
or
loopne
lret
sbb
lahf
fxch
rcrl
push
lret
jmp
jle
dec
jg
cld
insb
mov
pop
mov
icebp
or
inc
lods
mov
mov
shl
lock
popf
sbb
xchg
sub
daa
mov
dec
out
inc
aas
lcall
sbb
mov
aam
int
stos
jp
inc
mov
cmpsl
push
cmc
imul
cmc
icebp
enter
or
and
mov
jg
sti
mov
push
fistpll
ds
jg
lahf
xor
das
pop
lock
mov
jecxz
les
movl
imul
adc
and
xor
jbe
popa
prefetch
or
xchg
add
and
jp
repnz
leave
mov
lret
out
nop
lds
xchg
and
lock
inc
je
inc
rorb
std
xchg
cmp
mov
xchg
ds
and
lahf
in
pop
mov
mov
mov
and
adc
mov
stc
lock
and
aam
push
shll
mov
lahf
js
test
movsl
cld
adc
out
and
cmpsb
push
leave
lock
xchg
js
pop
sbb
jae
shrl
push
xor
add
and
push
xchg
ret
leave
leave
sub
ffree
leave
loope
popf
in
imul
inc
xchg
pop
dec
mov
pop
add
or
stc
jge
mov
push
mov
fcoms
std
mov
mov
and
gs
inc
xchg
and
add
pop
aam
xor
mov
pop
lret
push
outsb
idiv
jp
mov
ljmp
fnsave
popf
stc
add
inc
xchg
sti
cwtl
daa
mov
pop
pop
cltd
ss
popa
lods
roll
push
push
jg
sub
call
mov
xor
sti
ja
rolb
inc
insb
push
or
push
push
pop
outsl
ret
hlt
aad
movsb
sub
imul
pushf
add
rol
test
pop
movsl
aam
lret
inc
fiadds
scas
sar
fs
test
das
lcall
ret
sbb
jnp
cmp
jg
cmp
push
and
gs
movsb
push
mov
cmp
stc
lds
cmp
loope
or
adc
pop
jmp
clc
mov
outsl
or
pop
push
mov
push
sarb
imull
sub
push
das
movb
pop
fdivs
gs
lret
inc
pop
outsb
mov
insl
sbb
dec
jnp
jnp
dec
int3
mov
fldcw
daa
ret
inc
xchg
iret
push
ret
femms
sbb
jae
add
ljmp
pop
aaa
mov
lret
out
fs
jecxz
scas
movsl
jns,pt
sbb
movsl
xor
out
jp
es
push
xor
or
out
out
mov
jecxz
mov
out
sbbl
mov
push
dec
inc
jbe
int3
sbb
jb
ljmp
in
push
fcompl
test
lahf
bound
sub
rcr
mov
push
pop
sub
inc
add
je
cld
orl
jl
jmp
jno
sti
xor
push
sbb
jmp
jl
dec
int
addr16
push
insb
mov
movsb
xlat
add
push
jg
fs
in
test
pop
mov
ffree
lds
out
sbb
and
xor
icebp
jmp
sbb
call
sti
insl
stc
insb
cmp
jns
add
push
mov
or
inc
in
into
ss
dec
insb
fcom
xchg
aam
mov
lret
int3
cli
dec
mov
sub
mov
ret
and
cmp
rcll
lahf
repz
dec
mov
mov
mov
jge
fcoms
push
jecxz
ficompl
dec
out
mov
mov
loope
push
fs
push
in
mov
push
fsubr
xchg
push
adc
in
sub
cmpsl
inc
sahf
pop
sbb
insb
arpl
cwtl
push
dec
js
iret
push
jl
lret
mov
popl
pop
cld
iret
bnd
icebp
scas
or
and
test
inc
stos
push
add
insb
iret
sbb
ret
iret
lret
mov
fcmovne
push
lahf
and
js
movsb
dec
aad
pop
xor
aam
test
push
cmp
ret
scas
inc
loopne
xor
lahf
jno
xchg
or
and
int
test
rcll
fstl
repz
imul
iret
ret
xchg
mov
jecxz
gs
sbb
stos
dec
rorl
sbb
xchg
or
fsts
rcl
and
lahf
jb
and
and
inc
xchg
shll
scas
fbstp
test
aas
movsb
pop
pop
xor
mov
cmpsl
mov
int3
mov
mov
push
or
in
mov
add
out
test
fmull
pop
int
icebp
lock
jb
sarb
xchg
ss
dec
sub
mov
pop
out
test
adc
push
lock
scas
daa
jge
lret
insb
aam
cwtl
filds
xchg
or
sub
sub
int
das
enter
aas
pop
adc
pushf
repz
ja
sub
insl
mov
cs
mov
je
orb
divl
pop
clts
add
fcoml
lods
loop
cmpsl
jo
pop
leave
movsl
nop
push
pushf
pop
cmc
pusha
mov
and
addb
dec
dec
sub
test
cmpsl
sbb
imulb
jbe
in
roll
and
push
sbb
jge
inc
ljmp
sbb
mov
push
out
xor
add
add
mov
das
fst
pop
and
repnz
enter
xor
popa
jns
xor
sub
xchg
scas
mov
rolb
xor
push
stc
sub
jno
dec
cmp
test
arpl
in
stc
shl
jp
adc
outsl
sbb
push
aam
jb
fldt
cltd
mov
dec
fidivrs
inc
in
jmp
jecxz
sub
dec
pop
call
popa
and
ret
jnp
pop
ficomps
fcompl
inc
jbe
or
leave
sbb
push
addr16
pop
lods
or
clc
or
xor
mov
cwtl
pushf
and
xchg
jl
xchg
pop
mov
fdivr
adc
lea
fisttpll
and
test
and
mov
xor
jb
nop
jnp
stos
sarl
push
gs
sub
loope
clc
jae
repnz
sahf
xor
inc
rcll
test
inc
cltd
or
mov
cmp
lods
cmp
add
ucomiss
iret
mov
out
mov
add
movsb
stos
jl
xchg
bound
shll
mov
cld
test
dec
push
out
dec
xchg
sti
lds
movsb
dec
mov
into
stos
add
in
lahf
jge
and
mov
xor
iret
in
adc
imul
ja
lds
popf
cmp
push
inc
xor
cmp
shrl
cs
mov
push
lcall
fistl
cmpsb
mov
aaa
push
pop
adc
or
or
pusha
mov
lods
mov
test
xchg
inc
inc
add
and
or
insb
lcallw
repz
add
push
stos
outsb
xchg
jb
test
xchg
push
xlat
mov
pop
jmp
push
dec
xchg
or
das
and
out
ffree
out
addl
inc
and
ja
repz
sbb
push
sub
xchg
add
lcall
jmp
mov
call
fwait
je
icebp
insb
or
mov
xlat
fldl
mov
lods
sub
sbb
insl
push
packuswb
push
leave
mov
call
mov
jp
xor
jbe
jle
add
push
or
sbb
add
cli
lock
pushf
mov
jno
jb
jbe
dec
inc
outsb
xchg
aad
popf
lods
daa
push
test
and
mov
popf
scas
jg
js
jmp
lds
movsb
xlat
push
pop
mov
rcll
fcmovnb
rcr
push
je
out
nop
and
and
popf
lret
pop
and
ja
push
popf
lret
sub
hlt
push
xlat
xor
enter
data16
incl
mov
cli
insl
cmp
sar
cmp
cmp
mov
or
stc
and
jno
sub
pop
jbe
int
inc
sub
or
add
inc
adc
jg
jnp
nop
pop
aad
adc
adc
les
test
mov
pop
xor
add
sbb
movsb
pushf
loope
enter
in
xor
jle
xchg
sbb
icebp
mov
in
jo
xlat
je
sbb
lret
test
lahf
or
sbbl
mov
mov
aas
cltd
xrelease
mov
xor
sub
jmp
pusha
shlb
lret
leave
fiaddl
adc
jge
ljmp
ds
lea
dec
filds
adcl
movsl
hlt
push
xchg
adc
and
adc
lahf
mov
mov
add
mov
pop
fs
sti
jne
inc
and
outsl
adc
loopne
xchg
sub
add
xor
mov
hlt
xchg
mov
stc
rol
lret
push
xlat
and
mov
mov
test
pop
ljmp
jmp
mov
vmwrite
ftst
mov
pop
loop
in
pop
insb
sbb
fisttpll
fwait
cli
or
cs
je
sub
bound
call
and
mov
out
push
xchg
push
out
or
imul
inc
das
daa
aad
push
mov
jmp
subb
jecxz
fisubs
sub
dec
daa
jne
jae
xchg
add
es
pop
subl
sti
pop
xchg
inc
pop
lea
jbe,pn
ja
fbld
sbbl
mov
in
mov
aas
js
or
jmp
in
jle
lods
call
xor
sbb
and
pop
bound
call
mov
sahf
lods
mov
popl
mov
add
jno
gs
jno
sbb
test
mov
jb
push
xor
xor
pushf
mov
lcall
repnz
loop
adc
dec
pop
cmp
pop
push
mov
inc
adc
cmpsl
mov
fwait
lds
cmp
inc
jo
stc
add
fsubs
push
xchg
movsl
dec
das
xchg
popf
test
lock
xchg
sbb
lret
popf
vmread
mov
mov
pop
mov
adc
push
lock
imul
push
jne
and
pop
pop
lods
repz
movsl
dec
pop
jbe
adc
nop
sub
popa
ja
dec
out
sub
push
test
sahf
iret
or
mov
inc
pop
xchg
lods
jg
imul
andb
scas
testb
xor
pop
sub
and
mov
push
scas
loop
cli
gs
or
push
mov
mov
insb
sti
dec
jge
repz
mov
adc
insb
push
jge
js
dec
jl
lret
sub
push
test
mov
lcall
mov
stc
push
test
scas
pop
mov
incl
push
pop
adc
addr16
shl
inc
mov
cmp
sub
sub
cmpsl
push
sti
mov
jp
arpl
mov
loopne
pop
outsb
dec
xchg
pop
addr16
into
leave
adc
insl
fiadds
test
shlb
cmpsl
pusha
fs
rolb
out
jge
adc
aam
inc
xor
into
int
lahf
fwait
repz
call
xchg
addr16
and
fcmovu
xchg
test
dec
sbb
mov
inc
jns
int
bound
mov
fwait
push
lret
cwtl
mov
jmp
ljmp
fwait
push
sbb
xor
ret
push
insl
mov
arpl
push
add
lret
jae
and
pushf
push
pop
ljmp
lods
mov
pop
push
orb
mov
lock
dec
or
xlat
fsubrl
xchg
pop
and
clc
sar
pop
movsb
insb
sahf
add
outsb
das
jbe
int3
cs
mov
add
and
scas
cltd
fisubrs
mull
xchg
adc
into
ss
mov
fidivrs
xlat
jnp
insb
sub
pushf
or
mov
push
mov
and
aaa
ds
pop
xorl
push
mov
mov
sbb
inc
subb
lds
dec
daa
jno
sub
sub
pushf
shll
imulb
mov
int3
fimuls
and
dec
ficomps
and
pop
dec
in
sbb
mov
cmpsl
aad
mov
loope,pn
test
jae
xor
loop
sarl
popa
jo
mov
jg
push
jl
test
lods
jns
stos
in
stos
aad
mov
add
lods
js
outsl
cwtl
into
mov
pop
push
jmp
cmp
cmp
mov
test
dec
add
dec
inc
in
outsl
mov
fwait
ljmp
mov
adc
or
or
insb
mov
jg
inc
jne
pop
inc
dec
mov
js
outsl
dec
jae
and
lea
mov
add
xchg
pop
mov
xchg
outsl
xchg
cmpsl
mov
inc
cld
sub
pop
cmp
bound
lods
dec
shrb
cmp
inc
sbb
mov
ss
lods
or
bound
js
mov
pop
dec
dec
add
mov
outsl
mov
sub
stos
imul
xor
mov
stos
jmp
mov
out
cmp
jns
fdivs
mov
movsl
out
fisttps
cwtl
adc
push
imul
pop
dec
sub
xchg
popa
daa
in
fisttpll
je
xchg
outsl
or
fs
aam
cmp
mov
ret
ficomps
nop
xorb
jno
cmpsb
shr
sahf
jae
xor
xchg
inc
data16
push
scas
fisubrs
test
sbb
loop
fcoms
mov
test
inc
lods
and
pop
mov
and
ret
imul
loopne
dec
pop
lret
aaa
dec
sbb
bound
addr16
jmp
cwtl
lock
pop
mov
stos
ss
vandpd
adc
imul
cmpsl
pop
pop
adc
test
mov
dec
add
lret
inc
ret
inc
outsb
sub
bound
stos
xor
test
dec
bound
xchg
pushf
mov
test
mov
jmp
push
xchg
pop
lods
inc
xchg
push
loope
push
out
adc
xor
or
lahf
std
cwtl
sbb
sub
push
cld
stos
xor
jp
mov
mov
js
scas
mov
xor
iret
xchg
subb
sbb
stos
cmp
xor
adc
jae
sbb
rol
in
roll
mov
jns
jp
jb
pop
or
xor
push
sahf
jl
jbe
stc
test
mov
mov
cmp
dec
mov
std
pop
push
jae
enter
or
sti
push
lcall
jbe
cwtl
scas
repz
push
push
cltd
scas
pop
xor
cmp
inc
lahf
in
xchg
push
rcrb
outsb
cli
movsl
mov
jle
filds
pushf
das
aas
mov
test
stos
jp
rcrb
in
lcall
xchg
cmc
or
movsb
xor
pop
dec
and
lock
lahf
fcomps
test
imul
in
out
je
xchg
dec
fsubrs
out
xor
adc
sti
cmp
mov
scas
jg
add
push
ljmp
mov
inc
and
mov
mulb
les
and
addb
int
dec
dec
dec
ret
cmp
or
sbb
pushf
mov
ja
scas
pop
test
enter
cmp
test
jae
pop
imulb
jno
inc
aad
les
in
push
pop
insl
insb
mov
cmp
test
jl
mov
cmp
push
aas
jl
add
icebp
lahf
dec
mov
dec
pop
test
and
ljmp
jmp
push
pop
mov
dec
pushf
push
mull
and
pop
mov
mov
rcl
jae
stos
data16
adc
dec
dec
loope
fistpll
mov
cli
pop
add
fistpll
xor
repz
mov
test
nop
lods
push
xchg
std
enter
lods
scas
inc
push
sbb
lret
mov
jno
xor
xchg
and
push
pop
and
xor
or
inc
ljmp
nop
js
or
cmpsb
pop
add
sti
lcall
jno
jne
push
aam
pop
or
scas
jmp
fistpll
xchg
out
call
inc
pop
xlat
daa
pop
std
mov
mov
sbb
rorb
and
shll
inc
jae
stc
or
ljmp
jo
addr16
mov
dec
cmp
jecxz
cmpsl
sbb
bound
movsb
arpl
adc
testb
sbb
dec
jno
add
push
push
push
xor
sub
add
dec
xor
xchg
mov
sbb
in
add
add
sar
mov
xchg
insb
lret
test
inc
add
jns
loope
call
imul
fsub
lock
out
adc
xorl
sbb
inc
pop
mov
push
jl
je
into
mov
hlt
fwait
mov
fidivrl
mov
adc
pop
push
int3
cmpl
dec
test
xchg
jle
mov
push
cmpsb
mov
inc
sarb
out
mov
mov
sbb
push
add
inc
dec
cli
xchg
xchg
sbb
cs
push
mov
add
jl
sahf
sbb
inc
cmp
xchg
sbb
or
stos
lods
xchg
add
jno
dec
test
inc
les
pop
cs
xchg
pop
in
cmp
outsl
xchg
push
dec
icebp
je
add
mov
mov
test
test
push
xor
or
es
pop
pop
and
lcall
ja
cmp
push
or
xchg
mov
mov
push
aad
lret
test
cmpsb
iret
jp
fcmovb
rolb
divb
jb
int3
xchg
test
fstpl
sbb
jb
lcall
lds
das
pop
iret
scas
push
mov
push
lahf
test
fidivl
xor
xor
dec
inc
sbb
int3
sbb
pop
in
xor
add
insl
sbb
cwtl
nop
jns
mov
and
int3
bound
out
jl
or
add
xor
subl
cmp
sbb
pop
adc
and
mov
push
cli
xchg
xchg
lahf
fwait
es
es
inc
out
xchg
xchg
inc
nop
inc
adc
dec
sbb
int
xchg
mov
cltd
int3
lods
mov
pop
adc
dec
mov
jo
rclb
sbb
in
mov
push
jbe
mov
dec
and
aas
pop
ljmpw
xchg
into
jnp
movsb
cmp
mov
cmpsb
mov
cmp
test
push
adc
and
xchg
cs
in
push
push
test
insb
out
repnz
movsb
cmpsb
inc
xchg
es
out
mov
iret
lock
fld1
dec
fwait
xchg
cmp
pushf
pushl
clc
mov
inc
data16
popl
imul
sbb
aaa
pop
cmp
push
fildll
jmp
xor
or
dec
mov
scas
inc
pushl
mov
nop
test
mov
gs
repnz
int
repnz
or
inc
mov
aas
int3
mov
out
adc
cld
and
leave
inc
lds
cmp
dec
mov
test
stos
stos
cwtl
xor
mov
fcompl
mov
lds
mov
pop
inc
in
test
lcall
stos
and
sarl
rcrl
mov
shrl
outsb
inc
ss
insb
pop
loope
push
lock
xchg
popf
adc
sub
push
jge
scas
sub
or
cwtl
inc
inc
mov
mov
push
mov
fs
outsb
mov
fucom
ror
out
dec
into
and
and
adc
pushf
jl
push
mov
or
mov
test
inc
jns
lods
pop
adc
push
pop
jae
aam
sub
mov
or
imul
out
leave
daa
into
mov
sub
mov
push
push
test
movb
in
sbb
lret
out
push
loope
cmc
aam
sub
sbb
lret
push
or
ret
rorb
add
mov
aad
in
fidivl
mov
jno
out
stos
cmp
fstpt
int
dec
insl
out
push
mov
cli
pop
les
cltd
and
loope
jg
lock
daa
gs
cmp
notb
and
repz
aaa
add
sub
jb
nop
push
jg
cmp
and
in
jp
mov
add
into
pop
rcrl
lret
jmp
and
cmp
mov
inc
fisttpl
xchg
push
cmp
push
mov
sti
inc
mov
jl
and
insl
shr
jne
mov
sub
adc
dec
inc
dec
out
dec
add
and
cmp
stos
int
push
cmp
inc
mov
and
cmc
jle
outsl
out
fdivl
sub
jge
js
fldt
loopne
sbb
repnz
lea
mov
icebp
inc
sub
scas
sub
arpl
dec
xor
negb
mov
lea
mov
ds
sahf
mov
rorb
mov
jb
je
bnd
js
xchg
and
pushf
lods
add
fwait
dec
fmul
and
pushf
xor
push
popf
mov
fisubrs
inc
in
dec
jns
addr16
and
mov
adc
mov
sbb
jnp
jl
pusha
jb
sarl
add
xor
out
fstpl
sti
fsub
sbb
cmp
push
pop
stos
sbb
push
mov
inc
lret
mov
xchg
add
pop
inc
bnd
roll
xchg
daa
inc
xor
fdivs
aas
popa
jno
lret
add
xchg
add
dec
push
test
icebp
jge
xlat
addl
lcall
loope
push
or
fadds
loop
mov
push
lea
sbb
outsb
dec
shl
mov
inc
cmp
sbb
push
xchg
mov
push
or
jne
xor
arpl
js
ja
mov
pop
lcall
lcall
mov
popa
push
jb
xchg
push
shr
sub
and
mov
dec
out
jbe
lcall
lock
mov
add
das
push
loope
test
test
hlt
inc
adc
cmp
pusha
repz
cmpsb
pop
dec
add
xor
scas
xchg
lods
sub
jnp
dec
js
dec
rcrb
jbe
xor
and
enter
jmp
sbb
push
out
mov
sub
movsl
or
es
in
scas
daa
or
call
rcrl
iret
stos
leave
and
jae
aas
test
sbb
shlb
mov
in
jg
fwait
mov
sub
add
or
sbb
je
cmp
dec
or
cwtl
cmp
aaa
mov
xlat
jae
cmpsl
add
imull
repz
aas
push
xor
sub
stos
xchg
add
or
cmp
scas
inc
scas
lds
mov
decl
xchg
cmp
xchg
dec
mov
xchg
dec
sub
pushl
lahf
push
sti
hlt
jmp
and
call
add
popa
loope
pop
std
mov
add
cmp
mov
dec
adc
sti
sbb
sub
xor
fnsave
dec
cmpsb
lods
jp
cmp
aaa
lret
mov
lds
bound
gs
loop
mov
push
push
mov
shlb
pop
popf
xlat
scas
sbb
and
je
push
sbb
fstps
mov
arpl
rol
xlat
shr
nop
cli
push
mov
bnd
idivb
insl
fidivrs
fistl
test
sar
push
mov
mov
divl
dec
push
mov
icebp
adc
mov
xchg
into
shrb
shll
insl
push
mov
sbb
pop
mov
fwait
cmpsl
inc
push
lods
pop
lods
inc
add
dec
lcall
adc
mov
test
add
jo
outsl
dec
mov
sahf
sarl
pop
dec
mov
loop
dec
aad
jp
jge
sahf
lods
dec
int3
inc
orl
lcall
data16
andl
test
dec
jge
jl
inc
inc
dec
ds
pop
jbe
jmp
fldenv
xchg
inc
push
cli
push
lahf
loopne
mov
rolb
and
adc
jecxz
mov
sbb
test
in
int
out
inc
mov
test
inc
pop
inc
ret
xor
inc
gs
mov
xor
and
xchg
cli
jne
inc
mov
adc
jge
scas
sub
pushf
daa
lahf
scas
jmp
cmpsb
add
add
jge
jns
xor
int
cmp
pop
mov
jns
das
repz
jg
and
pop
repnz
enter
sahf
pop
pop
lods
int3
inc
add
lods
push
inc
inc
mov
cmp
in
or
in
xchg
push
mov
dec
pop
xorb
out
or
inc
sub
add
and
push
js
lahf
cs
dec
mov
xchg
out
lret
and
add
data16
mov
xor
jae
and
xchg
jmp
cmp
mov
out
lods
lock
jg
or
cli
cld
js
adc
and
add
test
pop
xor
mov
and
xorl
pop
popa
insb
cli
and
repnz
sbb
pop
xor
xor
dec
sti
imul
cmp
sahf
mov
test
out
mov
cmpsl
lock
push
xor
aad
or
fistps
mov
add
shrl
pop
lock
out
je
jnp
push
repnz
xchg
ficomps
mov
sbbb
sahf
and
mov
sbb
add
cmp
mov
push
dec
gs
jo
shll
jb
leave
adc
pop
sbb
psubb
or
jne
and
mov
je
shlb
dec
aam
jnp
popf
mul
pop
cmp
dec
cltd
shll
shll
add
push
sub
mov
aam
ret
sbb
xor
roll
dec
leave
cli
dec
cli
test
sbb
cmc
loop
notb
outsb
lret
mov
sti
lock
jo
cmp
jmp
icebp
and
cmp
sbb
push
xor
lahf
pushf
data16
lods
pop
push
cmp
fbld
insb
dec
mov
pop
lea
leave
pusha
cmpl
dec
cmp
adc
mov
stos
call
push
dec
pop
inc
xor
andb
out
mov
inc
imul
ljmp
pop
xchg
mov
jb
xor
cmc
js
inc
push
popf
testb
mov
mov
pop
mov
cmpsl
movsl
mov
adc
jp
cmc
icebp
xchg
mov
out
sub
fisubs
nop
mov
xchg
int3
sub
hlt
clc
mov
cmpsl
ljmp
or
sub
mov
xchg
sarb
int
gs
cmp
popa
cmpsl
push
ret
inc
mov
fimull
push
inc
push
pop
xor
sbb
insl
sub
mov
aam
adc
pop
movsl
icebp
and
pop
int
sub
add
jne
pop
push
xor
ret
in
mov
loope
shl
add
mov
pop
inc
popf
pop
idiv
repnz
ss
xchg
jle
push
dec
mov
test
sar
fwait
ds
ror
dec
adc
lods
mov
sarl
add
test
cmp
pop
lock
test
nop
pop
dec
push
mov
push
dec
cli
and
adc
test
lret
lods
cmp
cmp
mov
fisubrs
cmpsl
sub
sarl
mov
and
pop
dec
inc
mov
cmpsb
mov
sub
ficoms
cmp
cld
outsl
mulb
loop
and
push
xlat
in
sub
mov
movsb
inc
mov
xor
mov
ret
mov
push
pop
cmp
and
mov
aam
jne
cmp
push
hlt
fwait
sbb
mov
xor
or
add
sbb
imul
popf
sub
mov
fwait
cmpl
inc
addb
arpl
test
inc
mov
fisttpl
jnp
cmpsl
cmpsb
enter
movsb
iret
add
stc
push
lcall
and
dec
add
shl
cmp
leave
pop
jne
pop
sbb
inc
outsb
das
subb
dec
fistpl
xchg
or
and
and
fisttpl
mov
inc
and
pop
jecxz
inc
mov
sub
xor
stc
cmc
mov
into
xchg
fbstp
bound
jns
mov
cwtl
cmp
or
xchg
cmpsb
andl
sbb
call
or
sbb
mov
mov
xlat
in
mov
xor
jb
and
pop
push
xchg
faddl
or
ret
orl
aas
fisubs
lods
jb
adc
xchg
call
lahf
and
xor
cmp
ds
pop
fiadds
push
out
mov
push
lcall
sub
loopne
mov
adc
mov
jl
jns
mov
out
lret
and
in
test
and
cmpsb
into
xchg
je
ljmp
xor
call
imul
loope
imul
lock
jge
in
push
lret
icebp
test
push
call
test
mov
cmp
push
xchg
lret
mov
and
lds
add
into
out
jle
daa
adc
or
movsl
in
das
clc
lret
dec
mov
xor
push
jne
in
fmuls
mov
imul
lret
enter
push
sub
cwtl
mov
mov
dec
fbstp
mov
mov
pop
loope
mov
xor
js
push
xchg
inc
fstpl
adc
andl
push
es
addl
xchg
mov
mov
xor
jno
movsb
cmp
push
insb
add
loopne
cmp
xchg
xchg
dec
push
mov
ret
mov
adc
addr16
dec
movsl
fucomp
push
cld
cmpsb
movsb
jle
sbb
mov
adc
mov
inc
in
inc
inc
inc
adc
dec
lret
xchg
gs
aaa
je
pop
sbb
push
cwtl
lcall
inc
xlat
pop
dec
mov
jne
inc
jb
cmp
jg
sub
popa
cmpsb
pop
or
or
dec
cmp
test
fdivrs
sbb
cmc
cmp
dec
jl
fildll
pop
pop
bnd
cmp
jl
jae
les
fistpl
add
or
mov
cmp
out
jae
pop
jp
push
daa
sarl
inc
in
xchg
gs
mov
sbb
fcomp
xchg
pop
xor
and
enter
add
pop
mov
mov
push
inc
imul
pop
stc
xor
aam
and
nop
inc
popf
lret
aam
inc
dec
and
or
inc
sbb
std
sarb
inc
xlat
int3
adc
jb
sbb
rolb
adc
test
jnp
and
mov
pop
fcom
mov
fbld
lods
filds
int
rclb
clc
imul
int
jmp
dec
bnd
mov
push
sti
call
adc
cs
add
and
jmp
shlb
dec
xchg
and
aad
testb
in
cmp
dec
cltd
lods
ljmp
repnz
mov
lea
es
push
jbe
jae
pop
out
cli
sub
adc
cmp
xchg
jne
in
sub
adc
lret
out
jmp
shrb
push
inc
mov
ja
pop
out
sbb
out
push
mov
mov
mov
mov
lahf
incl
stc
str
movsb
mov
imul
ja
xchg
and
sbb
add
push
call
jns
repnz
sbb
sarl
dec
cmp
mov
push
notl
add
mov
jno
mov
mov
cmp
jns
mull
pop
dec
mov
mov
addb
call
fwait
cld
mov
cs
mov
push
pop
in
xor
clc
sti
lods
test
xchg
sub
cwtl
mov
xchg
adc
jmp
push
out
mov
in
and
mov
bound
fistps
stc
fwait
mov
mov
ficompl
ret
fpatan
in
hlt
loope
imul
aaa
pop
xchg
sti
and
xor
mov
mov
cltd
popf
es
push
xchg
xor
testl
xor
jl
repz
xchg
jp
xchg
aam
xchg
in
adc
push
xchg
and
sti
fsubp
pop
ds
mov
xor
pusha
adc
out
popl
ret
jmp
jmp
test
testb
inc
shrl
lock
sarl
jg
test
scas
sahf
test
mov
push
mov
clc
pop
shl
pop
popa
sti
leave
mov
mov
divl
cmp
jnp
xchg
ficoml
sbb
hlt
and
daa
jne
jecxz
inc
jae
fcmovu
mov
sbb
fimuls
in
inc
addr16
inc
aaa
and
pop
sub
push
jo
enter
imul
push
cmc
mov
mov
xchg
insl
pop
push
lret
data16
nop
jp
mov
repnz
arpl
sub
in
sti
mov
aam
jl
sbb
mov
mov
sbb
xor
test
xor
dec
inc
add
or
jae
aad
xor
icebp
mov
mov
iret
cmc
jns
push
add
stos
jae
add
adc
sbbb
adc
push
sbb
cwtl
in
add
push
gs
loope
inc
pop
and
scas
jecxz
mov
sub
sbb
movsb
sub
mov
fnsave
rcl
gs
push
cmp
pusha
push
fnstsw
inc
push
jl
add
mov
lcall
xchg
xchg
jecxz
jno
mov
mov
sbb
ljmp
and
xor
test
mov
lods
xchg
mov
int
xor
or
scas
and
add
mov
mov
iret
roll
std
out
push
dec
sahf
cld
arpl
xchg
leave
lret
adc
push
mov
leave
cld
addr16
popa
inc
xchg
adc
ss
repnz
cmp
jl
dec
pop
pop
repnz
xchg
mov
mov
cltd
and
fst
das
add
or
into
sub
lahf
loopne
popf
imul
movsl
mov
mov
lea
mov
test
or
gs
notb
outsb
sub
mov
cmc
mov
push
arpl
into
pop
jb
or
ljmp
cmpsb
pop
insb
xchg
data16
xor
xor
std
mov
aaa
push
dec
push
sbb
loop
mov
mov
ret
mov
dec
loope
xor
loope
inc
add
mov
xchg
cmp
xchg
lret
pop
jge
je
add
shll
clc
sub
xchg
mov
leave
sbb
mov
or
mov
lea
xchg
inc
icebp
jo
cli
sbb
insb
and
pop
jb
ftst
in
or
call
add
jg
sbb
or
dec
add
cmpsl
sub
sub
jae
int3
mov
imul
adc
int
mov
fildll
imull
mov
cmp
cmc
jg
push
push
pusha
arpl
stos
add
inc
adc
pushf
ficoms
xchg
or
mov
mov
xlat
test
stc
vmovapd
jo
cmc
jge
cmp
fstps
push
add
sub
out
test
loope
sbb
add
pop
addb
mov
pushf
test
rorl
in
push
push
paddusw
jae
push
test
xor
ss
cwtl
push
mov
dec
fisubrl
pop
xor
out
sub
ljmp
shrb
inc
clc
xor
inc
xlat
push
mov
push
mov
mov
inc
in
cltd
es
add
frstor
pop
stos
cli
imul
cmp
push
test
sub
fistl
jecxz
dec
jle
xchg
movsl
push
xor
add
mov
jae
add
fwait
pop
mov
fs
mov
mov
cmp
push
shl
xchg
shll
and
sub
pushf
xor
aad
arpl
fs
cmp
or
sbb
mov
bound
call
dec
lret
mov
cwtl
ja
lcall
mov
xchg
repnz
clc
bound
out
push
mov
pxor
andl
adc
pop
in
aaa
xchg
fnstsw
cmp
push
sub
jp
hlt
mov
mov
daa
fnstenv
test
mov
iret
pop
ja
or
mov
bound
test
dec
mov
out
or
jb
shl
and
xchg
ja
mov
mov
mov
inc
sarl
rorb
xlat
mov
xor
adc
mov
iret
shrl
push
mov
mov
pop
and
add
icebp
and
add
scas
sub
fcoml
cmp
xor
pop
push
and
mov
inc
movsl
ja
lds
add
gs
imul
jecxz
push
push
je
xchg
dec
roll
inc
aas
daa
lods
adc
mov
dec
es
lds
out
outsl
clc
jb
cmp
and
cltd
or
je
cmc
pop
fdivs
out
lock
fwait
mov
mov
outsb
adc
aaa
ret
inc
ja
popa
scas
pop
mull
sbb
mov
sub
lods
inc
shll
aas
mov
adc
pop
std
push
stos
inc
pop
addr16
lcall
mov
push
andl
cmp
cwtl
aad
in
inc
leave
stc
adc
ss
andl
lret
loope
test
mov
pop
mov
loop
pop
lret
pop
fimull
mov
std
mov
iret
gs
jne
popf
into
mov
scas
jae
arpl
in
or
and
jns
cmp
das
dec
adc
push
rorl
popf
adc
cmpsb
js
add
ljmp
push
cltd
mov
es
testb
loope
cmp
pop
sbbl
ja
fstpl
xor
mov
loope
out
incb
and
jle
or
mov
xchg
and
mov
rclb
and
inc
xchg
addr16
sub
aas
pop
push
add
xor
test
rorb
jae
or
nop
into
imul
adc
lods
push
pop
pop
negl
in
movsb
mov
jbe
stc
sub
ja
jno
or
scas
sti
inc
mov
dec
or
mov
add
sbb
test
fdivl
pop
repz
cltd
push
mov
push
xor
test
les
xchg
and
shll
int3
jno
mov
flds
ljmp
bound
dec
xchg
cmp
xchg
out
add
xchg
mov
push
scas
add
xchg
xchg
divl
push
ficoms
pop
pop
or
popf
xchg
adc
cmp
mov
mov
insl
lret
push
lds
jecxz
jne
add
int
out
fsubs
jmp
adc
cld
cmp
xchg
sbb
xchg
aaa
dec
popa
movsb
or
xor
fistps
xor
sub
addl
sbb
and
and
imul
add
insl
addr16
and
push
add
sarb
jnp
movsl
cmpsb
iret
add
notl
mov
out
mov
jae
std
daa
inc
nop
cld
das
mov
fwait
icebp
push
cmc
cmp
push
and
jmp
mov
mov
sub
mov
je
xor
mov
adc
xchg
sahf
sbb
mov
cwtl
push
roll
and
negb
loop
push
xor
or
xlat
dec
mov
mov
pushf
cmp
inc
mov
push
xor
lret
dec
mov
dec
lret
imull
dec
push
fucom
loopne
mov
aas
xchg
mov
push
jo
imul
inc
mov
daa
stos
test
pusha
jae
push
or
std
jmp
sbb
dec
fldt
scas
sbb
push
dec
dec
repz
inc
sbb
mov
pop
mov
ljmp
repz
in
xchg
lea
and
fcomip
and
inc
and
stc
xor
popf
inc
xor
test
mov
push
xor
jle
xchg
aad
cmp
insl
xor
jmp
adc
and
mov
jmp
push
jo
sbb
push
mov
add
adc
adc
jp
mov
adc
pextrw
mov
das
mov
mov
mov
ret
jle
in
cmp
loop
and
scas
adc
add
jae
mov
outsl
mov
ret
pop
dec
movsl
and
shrl
inc
cmp
xchg
add
cwtl
mov
xchg
out
rcr
xor
add
mov
cltd
and
dec
lcall
add
cmp
jecxz
icebp
mov
pop
mov
or
pop
ds
cmp
jb
push
mov
lret
jp
sub
or
mov
int3
dec
push
daa
popf
sbb
pop
fldt
mov
mov
out
das
adc
int3
adc
jo
mov
jne
mov
mov
pop
out
jo
shrl
cmc
lods
outsb
insb
jo
xchg
add
ss
and
ret
jmp
adc
xchg
jo
dec
test
ret
pop
repz
outsl
sti
jbe
cmpb
out
scas
clts
adc
lea
lods
pop
cld
mov
pop
ret
push
and
adcl
jg
push
jl
push
xor
je
repnz
mov
inc
out
or
je
mov
insl
arpl
outsl
mov
or
or
mov
push
in
pop
xor
and
cmp
and
cwtl
cld
out
or
mov
push
or
fadds
mov
adc
cmp
pop
jae
pop
sbb
leave
cmp
rorb
xor
mov
pop
daa
fstpt
std
ret
xor
loop,pn
aad
pmovmskb
lock
cmc
stc
orl
inc
xor
mov
pop
mov
dec
stc
test
xor
xchg
sahf
mov
inc
dec
pop
nop/reserved
jns
enter
popa
or
rorb
cmpsl
shrl
cld
aaa
test
jns
sbb
enter
jmp
orb
sahf
push
cmpsb
mov
lods
stc
jg
stc
fstpt
repz
dec
mov
sbb
test
imul
out
jb
in
test
xchg
cmpsb
dec
cmc
inc
pop
mov
adc
cmc
imul
jnp
mov
jns
xchg
movsl
aaa
lock
push
call
das
push
dec
sub
dec
mov
push
mov
or
js
fldl
rol
push
cmc
fstps
adc
jge
cmpsb
mov
adc
lcall
fwait
loopne
mov
xlat
pop
icebp
in
mov
roll
sbb
popf
lret
mov
mov
cmpsl
cmc
gs
fildl
es
dec
and
adc
aaa
mov
mov
cwtl
lahf
mov
sbb
pop
fbld
sarb
or
xchg
jl
mov
lock
cmpsl
scas
aas
fildll
mov
outsb
cltd
sahf
push
test
push
fistpl
sub
xchg
ss
loopne
data16
mull
inc
in
lds
cmpsb
push
test
stc
out
and
shlb
loop
mov
leave
cmp
pop
shlb
jl
cmp
lea
xchg
sub
push
fsts
cld
xor
shlb
mov
out
in
cmc
test
jo
in
jo
cli
jno
in
jge
in
jo
in
jo
divl
in
jp
in
jo
in
jo
hlt
jno
in
ja
in
jo
in
jo
icebp
jno
in
je
in
jo
in
jo
out
jno
push
jno
push
push
push
pop
push
adcl
into
push
test
call
ds
data16
fs
addr16
pusha
xor
and
mull
lock
xrelease
add
mov
inc
mov
int3
inc
loope
mov
or
adc
push
rorb
push
lret
stc
push
lret
dec
inc
int3
dec
cmp
mov
mov
in
mov
movsb
jno
movsb
sbb
push
pop
daa
xchg
in
and
add
out
xchg
or
xchg
cli
dec
icebp
or
mov
das
mov
mov
mov
insb
movsb
std
xor
xor
xor
stos
stos
xor
jne
icebp
pop
div
cmp
ds
xchg
mov
imul
xchg
pop
test
and
lret
lret
xchg
popa
jae
sub
ds
cld
into
aad
inc
es
mov
push
mov
sbb
int3
inc
or
inc
test
inc
test
leave
pop
push
mov
sub
imul
rcl
and
loope
daa
fsub
aad
push
in
push
pop
mov
inc
jne
mov
test
jne
adcb
sbbl
sbbl
push
rcll
cvtpi2ps
or
push
or
mov
rcrb
jo
shl
daa
mov
iret
fiadds
sbb
lds
sub
adc
push
xchg
dec
lods
or
imul
sub
cmp
or
jne
fisttpl
jno
int
shl
mov
xchg
ds
loopne
pop
mov
jle
insl
inc
imul
sbb
pop
je
sahf
or
pop
pusha
push
add
xchg
jl
mov
stc
mov
inc
nop
out
orb
adc
sbb
cmp
jae
popa
pop
mov
sahf
mov
jg
push
sbb
into
lret
pop
jl
cmc
nop
cmpsl
popf
shlb
jmp
andl
sbb
je
mov
in
mov
test
jle
test
dec
pop
dec
inc
xor
mov
les
inc
pop
aaa
pop
scas
imulb
stc
clc
xchg
loop
cmp
addr16
jecxz
xor
xchg
ret
ss
lahf
inc
xchg
or
xchg
lods
lds
pop
or
insb
icebp
lods
dec
in
or
dec
repnz
cmp
push
xchg
out
call
test
push
and
and
sbb
pop
jbe
pop
movsb
inc
pop
movsb
stos
mov
stos
data16
stos
data16
addr16
mov
divb
push
dec
aaa
push
hlt
mov
pop
cmpsl
hlt
pop
jle
pop
jle
test
push
cwtl
int
cwtl
imul
cmc
pop
mov
pop
loopne
pusha
loopne
test
lret
and
adc
add
mov
push
dec
and
dec
and
mov
pcmpgtd
addps
pop
lds
xchg
lds
fadds
pop
fcomps
adc
dec
push
mov
push
mov
push
mov
lea
sub
test
jo
in
jo
and
in
mov
in
jo
sbb
sub
mov
jo
sbb
in
popf
sub
scas
in
jo
pop
jno
in
lcall
push
adc
push
push
xchg
push
push
push
jns
push
cmpl
jp
into
jmp
jmp
and
testb
and
adc
lock
lock
mov
movsb
inc
mov
in
lret
inc
loope
inc
loope
pop
loope
push
clc
or
pop
push
lret
dec
addr16
dec
cmp
dec
cmp
mov
in
xchg
in
sbb
movsb
sbb
mov
daa
out
sub
out
xchg
xor
xchg
cli
cli
xchg
cli
dec
sahf
cli
dec
lods
add
das
push
lods
das
mov
mov
mov
xchg
mov
xor
xor
mov
or
nop
rclb
mov
sub
jmp
bound
xor
sub
add
inc
adc
xor
add
dec
adc
pop
adc
add
add
dec
adc
pop
adc
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
