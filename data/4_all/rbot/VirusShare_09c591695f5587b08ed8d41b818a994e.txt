call
test
adc
adc
daa
add
mov
lret
add
lea
jb
popa
decl
aaa
mov
or
cmp
mov
sbb
movl
dec
cmp
mov
sarb
test
mov
scas
sub
inc
clc
push
push
xchg
lock
idivl
test
inc
mov
xor
adc
jne
push
xor
adc
add
adc
pop
xor
mov
inc
lahf
xchg
clc
dec
and
inc
adc
pop
pop
fstpt
mov
xchg
cmp
aaa
push
mov
pop
repnz
pushf
shrb
cli
insl
or
add
jae
adc
add
sbb
data16
xchg
cs
hlt
mov
jecxz
xor
out
popf
scas
stos
lret
out
push
push
push
data16
mov
sbbl
sahf
mov
or
pop
dec
outsb
repnz
pop
cmp
or
mov
arpl
out
cmp
out
adc
cli
mov
adc
adc
in
mov
pop
push
push
inc
xchg
add
inc
out
loop
mov
repz
sti
jne
push
fdivrl
mov
std
addl
stc
and
push
push
mov
sbb
hlt
cmp
cmp
daa
pusha
pop
pop
jae
sub
pop
cmc
or
adc
out
mov
mov
jne
repnz
pop
outsb
sti
aas
and
das
shlb
cmpsb
sub
jg
lret
or
xchg
add
jno
inc
mov
pop
loopne
fcompl
push
push
loopne
in
and
sbb
xchg
fs
outsl
repz
sub
mov
jne
out
mov
add
inc
clc
cmp
cltd
pushl
add
mov
jb
loop
in
cwtl
aam
mov
arpl
jl
lahf
add
and
cmc
fstps
lea
in
mov
cmpsl
and
test
dec
imul
dec
sbb
jne
mov
inc
shlb
aad
outsl
outsb
call
push
std
jl
cmpb
lret
pop
dec
repz
mov
sub
jae
insb
js
xorb
mov
cmp
push
stos
imul
xchg
cmp
and
sub
cld
mov
push
cli
push
dec
sub
loopne
xor
cmp
push
dec
mov
xchg
clc
int3
sub
add
pop
stos
dec
clc
jne
cmp
mov
mov
xchg
repz
fdivrs
sbbl
mov
test
je
xchg
push
into
sahf
mov
xchg
shrb
mov
cmp
xchg
jbe
es
stos
mov
mov
pmulhw
ds
cmp
and
mov
out
xor
dec
aam
popf
enter
adc
cmpb
dec
js
loope
lea
sbb
mov
xor
add
mov
push
cmp
loopne
mov
sub
pusha
mov
mov
clc
jne
inc
loope
mov
xchg
push
lret
addl
loop
push
sbb
rclb
xchg
sub
add
popf
jge
adc
push
repz
dec
pop
pop
mov
popa
cld
daa
pop
push
or
push
clc
cld
js
and
lock
imul
addr16
inc
jmp
test
repz
cmpsl
jmp
sbb
enter
je
int3
jle
pop
insl
int
leave
jb
adc
clc
cld
cld
mov
mov
or
imull
rcrl
pop
cmp
cmc
mov
cmpsb
jg
cmp
push
enter
mov
add
cmc
cld
cmp
cld
jge
repz
pop
ss
xchg
call
popa
jg
jo
sbb
push
pop
pusha
mov
mov
testb
lock
push
in
out
xchg
movsl
jnp
mov
pop
pop
shlb
or
aas
in
mov
or
ljmp
inc
jne
xor
les
scas
outsb
add
ret
leave
pop
jle
js
mov
xlat
pop
mov
fldcw
movsl
add
clc
scas
sbb
int3
xchg
xchg
jns
not
out
sbb
jne
mov
lea
jbe
mov
pop
push
rcl
jne
cmp
jne
sbb
loope
in
push
ficoms
rep
add
das
pop
add
rcrb
inc
and
push
hlt
xchg
mov
jne
or
jge
push
or
lea
inc
ds
jnp
lea
push
push
push
push
shl
mov
add
aas
cmp
fs
jmp
or
add
loope
xor
push
fbstp
imul
cli
in
enter
inc
cli
pop
sub
mov
ret
out
inc
cmp
xor
xchg
jo
or
cmc
push
iret
inc
int
jne
push
mov
cltd
pop
test
scas
push
push
cmp
pusha
dec
xor
sub
ss
adc
push
in
mov
xchg
mov
inc
fisttps
ljmp
in
jcxz
push
mov
ljmp
aas
in
je
adc
mov
insb
sti
in
aad
cli
dec
icebp
push
aaa
pop
rolb
mov
add
sbb
dec
call
dec
leave
push
test
dec
repz
sahf
gs
pop
mov
sahf
xor
andb
xchg
leave
test
mov
stc
push
imul
jecxz
shrb
adc
in
xor
pop
ja
jns
push
rcll
mov
and
and
adc
movsl
in
ds
fsts
mov
mov
jnp
fwait
fwait
mov
hlt
test
and
xor
mov
call
out
fdivrp
xchg
xchg
push
lds
incl
andl
ret
push
mov
arpl
mov
lods
jno
mov
inc
inc
cwtl
std
jns
adc
push
adc
add
mov
sub
push
or
cmp
add
out
jb
ds
hlt
loopne
shl
xor
and
mov
addb
mov
xlat
stos
out
punpckldq
sti
cld
insl
loopne
cmpsb
int
mov
mov
mov
pop
fsub
andb
add
xor
inc
add
pop
in
push
dec
outsl
inc
je
fbstp
in
xor
mov
jb
mov
and
addl
loopne
xor
pop
cmpsl
add
movsl
decl
arpl
lods
insb
xchg
ret
dec
dec
mov
call
fmull
pop
fmul
outsb
into
test
ja
aad
jae
pop
scas
sahf
add
rcll
add
jo
lea
pusha
inc
mov
mov
mov
es
or
add
in
sub
cmp
mov
sbb
into
jl
push
call
mov
xchg
inc
movd
cmp
push
mov
fimuls
int3
cwtl
pop
add
imul
pop
inc
ds
rclb
js
lcall
push
and
imul
mov
or
pop
aad
add
pop
push
or
pop
mov
pop
or
loop
push
jo
pop
notl
adc
cwtl
sbb
test
or
andl
cmpsl
das
inc
pavgb
cmp
fsin
mov
addr16
scas
fsubs
in
add
enter
push
push
sbbl
push
jg
int3
imul
adc
int3
jmp
cmp
push
out
ficoml
cmp
inc
in
jno
mov
out
xor
push
orl
mov
shll
cmp
cld
lods
lods
dec
insb
int
lret
mov
mov
pop
pop
mull
xor
inc
insl
xchg
jg
jg
mov
inc
faddp
add
xor
sub
loope
push
pop
adc
cmp
push
fadd
jge
add
loop
push
mov
out
pop
add
jmp
addr16
push
cltd
or
rol
nop
inc
fiadds
loop
ja
lcall
lea
mov
or
test
mov
push
dec
testl
js
push
sbb
inc
lea
mov
push
sbb
leave
and
sbb
push
push
pusha
les
in
sbbl
fwait
mov
sub
or
and
xchg
and
int
dec
dec
mov
jnp
push
adc
lahf
jo
mov
mov
inc
add
mov
scas
and
cmp
or
add
fcoml
or
sub
out
dec
mov
xchg
inc
jo
lcall
popf
xchg
clc
xchg
push
leave
cltd
push
pop
push
cld
out
pop
scas
cmp
and
daa
xor
push
shld
lods
mov
inc
jo
sbb
pop
out
add
leave
sub
lret
jne
sub
subl
loopne
pop
in
lcall
adc
jo
xor
movsb
shrl
out
jne
repnz
push
cmp
push
add
push
ret
lahf
ret
movsl
xchg
pop
sub
and
xor
mov
test
xor
jmp
mov
sbb
mov
pop
sub
add
clc
mov
loop
outsb
inc
movsl
xor
jg
in
sub
cld
lahf
outsl
hlt
dec
push
js
das
dec
jne
pop
loopne
and
cmp
mov
and
rcll
ss
test
movsl
in
or
cwtl
outsl
pop
xchg
daa
ljmp
ja
inc
xchg
negl
pop
testb
out
mov
aaa
lret
jecxz
cmp
cmp
jae
sbb
inc
sub
mov
nop
test
stos
push
push
in
lock
push
or
popf
fcoms
hlt
adc
imul
test
sgdtl
fstpl
jb
icebp
loope
cli
xorl
push
mov
fadds
outsb
sbb
inc
pusha
jle
jno
test
orl
push
or
xor
enter
repz
mov
push
arpl
jae
jl
jo
dec
sti
xchg
add
jl
inc
repz
cmpl
add
leave
sbb
int3
je
sub
into
and
pop
popf
ja
fldt
int
jle
mov
leave
incl
jp
in
mov
xchg
pop
mov
add
cmpsl
mov
mull
jbe
js
mov
lahf
ret
add
cwtl
pushf
sahf
pop
jl
ja
push
insb
clc
mov
inc
andl
mov
in
enter
mov
orb
xchg
sbb
jne
data16
add
ss
sti
lods
jp
inc
orb
jne
and
xor
dec
add
pusha
imul
rol
push
push
inc
imul
into
adc
in
or
ja
gs
xchg
pop
aam
sbb
add
leave
jb
sahf
xchg
icebp
scas
mov
or
mov
imul
add
jne
xlat
sbb
push
scas
push
pop
pop
and
cld
jnp
pop
jno
lret
movsl
jnp
popa
add
sbb
push
pop
imul
cmovle
add
dec
cmp
dec
insl
mov
sub
mov
push
lret
pop
sahf
mov
fcmovnb
imul
sbb
and
lret
adc
xor
mov
popf
push
sbb
xchg
jg
movsl
loop
or
clc
mov
sub
cmp
insb
test
jge
dec
sbb
fists
pop
cmp
push
mov
shrb
aaa
inc
mov
push
mov
fldenv
mov
dec
sub
mov
sbb
jmp
cli
enter
inc
pop
xchg
and
inc
loopne
cs
cmpsl
and
fadds
lret
loop
or
mov
rorl
add
cwtl
pop
cmc
imul
fs
mov
mov
dec
sahf
push
das
iret
and
inc
fwait
test
mov
ret
push
dec
shll
pop
lds
lods
int
add
xor
inc
sbb
out
adc
lock
f2xm1
pop
adc
mov
fmull
test
cmp
mov
cld
out
mov
mov
xchg
mov
fwait
insb
cltd
sub
pop
scas
aam
jae
or
stos
out
cmp
sti
and
sbb
xor
xor
mov
push
sub
nop
mov
rcl
jns
stos
lret
hlt
cmpsb
sub
mov
dec
cmp
push
vmovlps
jne
xor
jle
mov
dec
stos
jbe
mov
adc
cmp
jge
lock
mov
les
adc
jg
push
addb
lea
mov
loopne
lods
or
and
cmp
add
stc
and
dec
sub
mov
test
lds
lods
and
or
lock
ret
inc
xor
sbb
lcall
js
fs
xchg
dec
jl
lods
sbb
enter
stos
cmp
lea
hlt
pop
imul
lahf
dec
fldenv
and
je
test
pop
push
out
js
outsb
pop
mov
sbb
jge
scas
cmc
or
fsubrs
cmpsl
mov
dec
popaw
mov
sub
out
lret
daa
movsb
test
sbb
adc
ficoms
lahf
out
mov
jg
stos
and
insb
fstl
adc
fs
enter
push
idivb
push
fdivr
pop
nop
and
jns
sarb
or
add
pop
adc
jecxz
lahf
subb
jge
adc
out
outsb
xchg
je
std
clc
cmp
mov
or
add
xor
mov
adc
lds
adc
cmp
pop
ss
lock
jle
or
push
cmp
xor
clc
cs
sbb
inc
cmp
sti
enter
shlb
rclb
mov
and
xor
add
dec
jb
in
test
push
cld
stos
xchg
enter
push
pop
push
adc
imul
hlt
cmpsl
arpl
loopne
mov
push
pop
xor
faddl
loope
dec
adc
pop
or
icebp
movsb
mov
cmpsb
mov
cmpsb
and
adcl
jne
push
jmp
push
push
test
repnz
fsubrl
mov
test
cmp
pusha
sub
filds
mov
push
push
push
call
or
push
sarb
cld
jge
cmp
dec
cmp
test
js
sub
sub
jg
aad
fistl
sbb
xor
sub
sub
sbb
mov
das
out
add
push
mov
aam
andl
inc
jp
fcomp
aas
daa
sbb
or
out
imul
sbb
or
and
and
jmp
cld
leave
rorb
or
add
and
imul
xor
movsb
jecxz
mov
mov
repnz
and
lock
je
lods
push
notb
dec
dec
sub
push
mov
lret
push
mov
in
in
outsb
icebp
ja
imul
fcoml
adc
fs
push
sbb
js
cmpsb
movsl
inc
mov
pop
and
xor
jb
xor
cmp
pop
pop
xor
ret
and
sbb
cmp
push
mov
and
imul
enter
mov
push
out
add
out
inc
and
sbb
pop
mov
in
mov
das
jmp
xor
popl
jg
out
js
xor
mov
add
imul
enter
adc
push
cmp
pop
xchg
xchg
adc
shlb
push
fstl
mov
cmp
push
sbb
cmp
movb
sahf
inc
or
or
push
jnp
pop
push
push
mov
push
cmp
sub
jecxz
push
mov
movsl
gs
sub
sbb
sbb
lret
mov
out
adc
add
movsb
add
push
pop
pop
cmp
add
sahf
jl
and
and
lret
std
nop
mov
jp
xchg
subl
mov
sbb
jmp
imul
mov
cmc
xor
xor
inc
and
xchg
xchg
ret
test
int
xor
fisubs
add
lret
je
insl
push
mov
mov
dec
add
fistpl
push
movsbl
inc
cmp
inc
jne
jp
mov
pop
add
mov
mov
mov
ljmp
repnz
inc
enter
sbb
sub
xor
aas
mov
clc
cs
mov
mov
dec
push
ja
add
xor
aas
insb
aam
pop
or
adc
adc
mov
or
sbb
adc
dec
xlat
push
out
xchg
mov
mov
out
clc
pop
push
add
scas
je
lcall
pop
sarl
jnp
movntq
out
sub
fnstcw
pop
dec
mov
add
xchg
js
jns
fisubrs
push
inc
sub
cwtl
mov
hlt
dec
mov
out
xchg
cmpsb
jnp
and
out
ss
pop
test
popa
dec
and
clc
test
jp
and
loopne
sbb
aam
cwtl
call
les
pushf
fidivrs
call
leave
out
push
leave
das
sub
loope
xor
push
inc
das
lock
add
lea
dec
lds
push
mov
jo
and
pop
ds
addr16
je
test
mov
or
xlat
add
std
sub
inc
push
lea
jp
stc
shll
push
shll
sbb
dec
test
dec
es
stc
ret
lds
sbb
fcomps
and
mov
test
ljmp
hlt
fstpl
out
sbb
jp
add
lds
mov
push
nop
mov
jp
loope
push
movsb
jno
pop
int
fistpll
mov
pop
sub
pop
xchg
or
dec
mov
addl
xor
loopne
or
mov
or
mov
mov
inc
jns
cmp
pushf
fidivl
lret
popf
outsb
push
test
popa
pop
fcoml
xor
sub
mov
into
cmp
icebp
mov
or
jb
je
jns
mov
test
sub
jnp
lret
pushl
ret
into
ja
mov
int
cmp
sub
mov
ds
in
sbb
out
test
or
jge
dec
or
push
sub
dec
enter
adc
mov
pop
jne
mov
lar
mov
dec
mov
iret
js
or
mov
adc
aaa
jmp
nop
ljmp
or
adc
push
stos
insl
mov
jle
add
dec
push
and
imul
cli
int
jae
inc
add
aam
and
add
arpl
scas
ficomps
outsl
adc
inc
push
push
dec
push
addl
xor
inc
aaa
jns
ja
test
cmpsl
pop
push
aas
cmp
aas
filds
inc
or
mov
sbb
add
in
mov
pop
imul
andb
push
jno
test
rcl
dec
pop
and
jecxz
cli
xor
pop
je
xor
stc
cmp
and
sub
xchg
xlat
xchg
lcall
incb
mov
call
xor
movsl
pop
ja
or
sbb
mov
test
mov
adc
sub
out
inc
inc
sbb
jns,pt
pop
hlt
inc
in
and
shll
ljmp
test
mov
adc
cmc
mov
cwtl
dec
mov
ficoms
lahf
and
push
shrb
push
ret
cmpl
lcall
or
je
sbb
cmp
sbb
hlt
lahf
xchg
push
pop
mov
incl
shlb
int
xchg
je
shl
fsubp
sub
in
arpl
or
fs
sub
test
movl
mov
fsubrp
mov
std
mov
add
push
loopne
hlt
fisttps
sbb
ja
mov
sbbl
pop
jne
cmp
popf
push
dec
and
dec
sbb
and
shll
or
ret
vucomiss
ja
dec
das
shlb
test
mov
xor
outsl
scas
mov
cmp
xor
insl
mov
xor
push
les
ss
jmp
sbb
in
and
add
ror
int
and
add
push
push
aad
test
sub
xor
push
inc
test
mov
lock
inc
je
decb
pop
push
enter
popf
imul
or
clc
bound
sbb
pop
or
test
adc
sub
in
mov
jmp
xor
pop
xor
push
jle
mov
mov
push
xchg
mov
lret
inc
addl
cmp
dec
dec
sub
mov
inc
cmpl
adc
repnz
and
jns
ljmp
fisubrs
shlb
lods
add
icebp
imul
repnz
sbb
movsb
add
loopne
mov
dec
xchg
xchg
loopne
daa
xor
sahf
mov
mov
jo
fwait
jge
stc
cmpsl
sbb
dec
dec
xchg
or
loopne
add
push
sbb
jg
and
xor
call
mov
xlat
mov
xchg
jb
insb
push
mov
push
iret
pop
xor
arpl
ret
mov
push
inc
cmp
mov
in
call
insl
dec
pop
or
jge
and
lret
icebp
popa
pusha
dec
add
push
and
fistl
push
test
adc
sbb
jle
inc
inc
and
xorl
ret
jb
fs
mov
lods
pop
jb
mov
repz
push
push
mov
jge
ss
out
sarb
xor
pop
lds
mov
mov
xor
in
xchg
lods
jbe
stos
mov
div
dec
nop
jae
bound
lret
and
xchg
xchg
mov
adc
push
jb
xchg
imul
pop
inc
shll
mov
push
cmpsl
push
daa
add
xor
sbb
adc
test
mov
dec
sbb
in
pop
sbb
push
mov
ret
fisubs
xchg
mov
movsb
mov
fs
das
pushf
lret
mov
cltd
push
inc
popa
fisubrl
fstps
sub
bound
insl
add
or
call
or
dec
psubusb
je
icebp
push
xchg
inc
jne
mov
inc
or
push
fdivr
mov
nop
mov
mov
ret
push
and
and
push
push
repnz
bound
sbb
rcl
xchg
jge
sbb
fstps
les
sbb
push
adc
andb
faddp
ja
mov
or
jmp
push
mov
fidivrs
and
mov
pushf
add
jmp
cltd
inc
dec
popf
mov
fcoms
add
shrl
dec
jno
in
mov
xor
sub
out
jg
leave
push
test
scas
cmpb
mov
lods
lods
add
mov
inc
in
mov
xor
out
js
push
js
pop
hlt
je
andl
sub
je
aas
fstpl
mov
lea
je
push
push
ss
data16
jmp
jmp
push
sahf
aad
push
sbb
sbb
enter
cli
sbb
ret
xchg
push
hlt
mov
lcall
add
dec
sahf
ljmp
cmp
lock
aam
pop
jae
leave
mov
adc
add
push
push
inc
icebp
sbb
lock
add
xor
and
dec
inc
decl
xor
xor
insl
push
stos
ret
or
push
scas
push
in
stos
adc
mov
inc
push
add
sbb
leave
add
nop
inc
and
shlb
dec
mov
jae
or
lea
repnz
aad
gs
aas
sub
jl
add
stc
test
popa
sbb
cltd
pop
fsubs
bound
in
fimuls
test
sbb
add
push
adc
dec
pop
imul
mov
sub
adc
push
cmp
fisubrs
mov
mov
test
fsubrl
mov
ds
loop
pop
mull
stc
mov
fildl
lahf
lea
jl
mov
fisubl
testb
jns
adc
or
mov
push
hlt
xchg
inc
and
add
scas
scas
jge
incl
jl
mov
sarl
mov
sbb
jge
jno
and
mov
cmp
in
push
dec
fdivl
popf
out
cs
imul
jecxz
push
xor
sbb
sahf
mov
inc
int3
negl
xchg
push
inc
xchg
mov
mov
sub
xchg
mov
xor
inc
jno
shr
mov
mov
xchg
lock
jno
mov
push
add
data16
mov
mov
or
mov
and
rorb
inc
pop
loop
push
clc
or
incb
mov
jno
mov
ljmp
pushf
in
sub
movsb
add
xlat
xchg
jo
pop
sub
cmp
ja
sub
mov
xchg
scas
in
inc
arpl
adc
push
adc
lock
lret
in
into
in
mov
jmp
movsl
dec
push
inc
fsubp
daa
xlat
movsl
mov
jmp
js
idivl
clc
sbb
mov
push
jno
popl
and
push
pop
mov
in
jbe
jns
jge
into
js
pop
or
in
sbb
xchg
cmp
mov
stc
push
mov
or
fstl
pop
in
jmp
mov
imul
in
jp
fsubs
rorb
pop
test
add
int3
scas
mov
push
xor
and
lock
add
rcrb
insb
xchg
lahf
enter
dec
push
lret
xchg
cmp
clc
cmp
pop
sbb
dec
sub
add
mov
mov
push
inc
dec
pushf
push
mov
sbb
mov
mov
pushf
test
fwait
sub
stos
ss
pop
sbb
imul
cmp
daa
xchg
mov
dec
sub
aas
andb
push
call
jae
fimull
in
xor
xchg
xlat
dec
lods
imul
aaa
daa
rclb
out
dec
push
xor
into
adc
imul
push
mov
in
and
call
sbb
xchg
fidivs
jns
aad
adc
mov
repnz
mov
mov
ror
mov
arpl
inc
cmp
inc
inc
stos
mov
int
push
repnz
push
lods
nop
shll
mov
rcrl
xchg
add
and
or
add
add
loope
or
adc
pop
lods
xchg
cmp
jo
gs
cmp
xchg
push
jge
adc
in
jle
daa
fcmovnbe
push
push
lahf
lds
push
notb
loop
pop
fwait
cmp
sbb
nop
xchg
out
xor
xchg
fisubs
push
adc
outsl
xchg
rclb
add
add
mov
and
dec
sub
rcrl
stos
jg
movsl
pop
inc
push
pop
je
inc
jmp
mov
es
insb
cmpb
mov
mov
nop
xchg
sahf
fcomps
add
out
and
in
adc
andb
mov
mov
mov
outsb
cmp
test
idiv
inc
and
loope
jne
adc
cmpb
push
sbb
int
sub
mov
mov
roll
andl
lahf
ret
aad
mov
xor
fildll
out
mov
push
call
xchg
notl
bound
and
mov
inc
pop
jo
into
aad
and
xlat
popa
adc
bound
jmp
mov
jmp
push
hlt
sbbb
loop
or
jmp
bound
leave
cld
fstl
lret
fsubl
fidivl
adc
jg
push
xchg
push
jo
mov
pop
fildl
cmpsb
clc
stc
bound
in
insb
rorb
adc
scas
sbb
outsl
xchg
push
repnz
inc
pminsw
sub
mov
jecxz
mov
mov
shlb
ret
or
mov
inc
sub
stos
mov
mov
sbb
negb
inc
mov
inc
lcall
lret
mov
daa
sub
pop
add
into
sub
adc
mov
and
js,pn
subb
and
jecxz
data16
sub
in
cmp
jecxz
fldt
push
sbb
hlt
into
dec
cmp
sti
mov
out
out
cmpsl
sbb
lock
in
in
dec
outsl
addr16
mov
popf
jne
jg
and
jmp
orps
pop
jbe
lcall
std
dec
rep
jmp
pop
adc
jne
mov
fwait
pop
mov
jo
pusha
popf
shl
push
mov
or
jmp
out
in
dec
arpl
push
in
leave
mov
sub
into
outsb
hlt
dec
inc
and
and
xchg
jecxz
rorb
push
xchg
add
cmp
and
pop
insl
add
call
jmp
adcb
inc
insb
fmull
in
xchg
in
mov
adc
xor
enter
out
sub
out
insb
in
sub
into
jne
and
aad
insl
add
and
sub
xchg
stc
sbb
cmp
push
fldenv
int
xchg
xchg
dec
adc
inc
mov
push
or
or
push
pop
push
fnstcw
es
dec
shl
arpl
push
cmp
sti
popa
jbe
adc
fistpl
xchg
into
lcall
dec
xchg
incl
sbb
add
push
les
je
mov
mov
shlb
int3
mov
xchg
imul
jp
sahf
cmp
fwait
in
mov
xchg
inc
cltd
sub
lods
xchg
xchg
fsubrl
jno
nop
outsl
repz
cmovno
cltd
dec
or
or
jnp
call
xor
push
xor
lea
and
js
jg
xor
mov
in
mov
mov
push
sub
pop
sbb
adc
or
cmp
stos
vmovss
pop
fs
gs
scas
push
sbb
icebp
lcall
stos
mov
cwtl
jae
insl
or
fimull
add
popf
push
mov
or
stos
xlat
sub
insb
enter
adc
mov
mov
sbb
xor
cmp
cmp
or
mov
and
cmp
pop
loopne
inc
mov
mov
pop
pop
pop
lods
jbe
mov
rol
push
lods
int
cmp
jae
jo
and
shl
das
adc
ljmp
int
mov
sbb
inc
jbe
or
cs
orb
mov
pop
fldcw
mov
adc
in
rcll
subl
je
jae
pop
jmp
mov
and
loope
shr
add
cli
mov
inc
aaa
insb
inc
test
adc
push
xor
imul
sti
xchg
xchg
incl
pop
mov
jne
xor
sub
stc
and
dec
cmp
mov
adc
scas
and
push
mov
mov
mov
pop
lcall
and
pop
out
xchg
addl
mov
jnp
sbb
enter
push
mov
mov
arpl
popf
ljmp
push
nop
inc
add
ds
cmp
movsb
stc
xchg
cmp
out
sub
sub
cmpsb
xchg
adc
push
and
pop
inc
fildl
lods
cmp
push
adc
inc
das
pop
lahf
test
cmp
and
and
push
or
adc
sub
and
push
inc
lahf
rcl
xlat
std
mov
xchg
or
jb
lea
sub
inc
sbb
push
xchg
xchg
dec
dec
xchg
or
jb
xor
xchg
lahf
mov
imul
test
or
and
xchg
push
out
outsl
add
lods
cmp
mov
xchg
fucomp
sub
popf
adc
rcr
aas
test
mov
adc
xor
enter
jmp
addl
dec
mov
aam
cmp
xor
pop
dec
call
or
cmovle
pop
and
inc
pop
enter
and
mov
push
jae
pop
jp
clc
mov
sub
or
movsb
fidivrs
imulb
mov
out
daa
cld
inc
ljmp
xlat
movb
or
add
mov
sbb
pushf
mov
aaa
popa
mov
and
mov
nop
xchg
int3
jo
or
insb
lret
sbb
dec
jnp
fcoms
fdivp
sub
sub
sub
sbb
adc
adc
clc
test
jnp
push
mov
call
mov
inc
arpl
cmp
sub
fistl
clc
daa
decb
pop
or
inc
sub
xor
inc
jnp
fwait
inc
and
leave
add
push
fcmovnu
dec
mov
mov
das
addl
jecxz
jb
xor
push
subb
xlat
push
repnz
mov
mov
adc
leave
rorb
movl
pop
in
orl
xchg
cmc
push
jo
aad
stos
popf
cmpsl
mov
xchg
fdivrs
daa
mov
movsb
and
std
cld
iret
mov
loope
ds
adc
push
lods
or
mov
mov
enter
pop
fwait
ret
xchg
sti
ss
adc
mov
inc
repnz
pop
jne
and
sub
enter
out
sbb
push
add
mov
rorl
cmp
push
stos
testl
and
lods
imul
xchg
sbb
popf
nop
shlb
in
dec
popa
xor
or
cmp
out
lret
or
incb
or
or
inc
addl
xor
outsb
and
inc
or
pop
movsl
add
xor
and
and
aad
iret
in
mov
inc
xchg
imul
cmc
jbe
xchg
in
fbstp
mov
fwait
fs
xchg
loop
mov
inc
xor
mov
scas
adc
movsb
fs
and
adc
decl
push
mov
lds
leave
adc
xchg
scas
cmp
and
and
xchg
dec
push
and
add
es
xchg
xlat
add
out
mov
xchg
add
push
mov
cmpsl
mov
xor
xor
push
daa
or
mov
mov
xor
popa
ljmp
dec
adc
incl
push
lret
sbb
xchg
outsl
aas
and
rcl
push
mov
inc
mov
jecxz
jg,pt
inc
scas
sbb
loopne
out
push
shrl
adc
xor
mov
or
jnp
fs
xor
mov
push
pushf
xchg
or
xchg
mov
sbb
cmp
mov
cmpb
push
sbb
dec
sbb
inc
mov
xchg
xorl
adc
ljmp
out
movsl
jo
inc
je
or
cltd
cmp
jl
cmp
repnz
and
mov
jp
roll
sub
into
je
outsb
and
stos
adc
dec
test
subl
inc
shl
add
cmp
loope
shrd
in
jmp
sub
aaa
add
push
daa
arpl
jnp
mov
sbb
ja
adc
sbb
adc
mov
fbld
sub
cmc
pop
mov
xchg
cmp
repz
push
insl
add
inc
jb
sbb
dec
mov
mov
cltd
cmp
or
popf
jnp
adc
aas
leave
std
mov
cld
xor
add
popa
scas
fs
jo
add
push
dec
dec
lahf
sbb
push
cmp
inc
sarb
pop
jno
loop
xchg
fucom
rol
mov
std
and
stc
outsl
add
xor
cli
out
dec
popf
cmp
in
inc
xchg
inc
js
push
and
fsubs
xchg
xchg
push
mov
xlat
imul
mov
xorl
into
sbb
int3
lahf
or
les
sub
or
arpl
popf
pushf
jno
ss
and
nop
enter
xchg
popa
xchg
push
imul
mov
mov
push
subl
popf
in
fsub
jg
scas
dec
push
daa
pushf
fucomip
enter
ljmp
add
push
leave
adc
xor
imul
jl
movsl
adc
and
imulb
ret
mov
test
add
loopne
sbb
outsl
aas
push
jbe
xor
add
sti
mov
dec
in
aad
or
das
fwait
in
je
xchg
call
inc
ds
mov
push
imul
dec
pop
sub
fbld
ljmp
clc
and
in
inc
lods
sti
shlb
mov
sbb
cmp
jbe
fildl
pop
je
inc
fisubs
cmpsl
cmp
push
add
mov
in
mov
push
arpl
and
arpl
fisubl
int
or
inc
xchg
dec
scas
ss
pop
lcall
or
push
push
xor
aas
dec
xchg
faddl
add
fcomp
fisttpl
jns
fs
out
inc
and
popa
and
push
aad
roll
bound
insl
icebp
fcomps
and
lds
pusha
cmp
add
add
fs
pusha
mov
and
repnz
xchg
push
xchg
loopne
and
in
enter
into
adc
ja
aad
and
rclb
mov
jo
and
cmp
push
in
loopne,pt
xchg
fadds
int3
cltd
adc
mov
sbb
loope
fsts
loopne
mov
mov
pushl
mov
jmp
fldl
movsl
ficoms
shl
xor
sub
xchg
and
adc
ret
mov
into
inc
int
roll
arpl
in
fidivrs
xlat
mov
lret
sbb
fcmovu
push
push
cmp
xchg
jo
inc
test
ret
popa
std
je
jl
jecxz
push
es
outsl
outsl
int
cmp
jns
cmp
pop
pop
cmc
xchg
bound
aad
cltd
dec
js
shrb
div
out
jge
push
clc
mov
icebp
adc
add
clc
cmp
ja
inc
addr16
jo
icebp
xchg
jb
movhps
inc
mov
scas
and
mov
push
pop
mov
mov
jbe
push
xchg
data16
mov
rolb
je
jo
push
inc
popa
cmp
cmp
mov
push
lahf
loope
pushf
icebp
je
xor
rcll
add
adc
mov
sub
popa
fst
sbb
shrb
arpl
mov
or
add
dec
add
cmp
nop
ret
inc
shlb
and
push
iret
fs
ja
stos
or
pop
or
push
mov
bound
test
loope
sub
and
jbe
or
dec
xchg
sub
aam
jp
pop
je
cmp
mov
ljmp
pop
ds
mov
rolb
in
mov
fadds
popa
loop
xor
popf
push
out
inc
pop
dec
in
imul
inc
pop
pushf
lea
pop
push
jo
add
mov
outsb
xor
mov
cmp
sub
adc
xchg
nop
std
adc
sub
iret
loopne
cmp
clc
daa
or
push
and
mov
shl
jp
push
xor
pop
lea
and
shll
sbb
push
ja
add
insb
rcr
int
into
cmp
jecxz
sbb
ss
sbb
loop
xchg
pop
jno
inc
add
ret
push
and
rorl
or
mov
in
xor
jns
add
xchg
aam
int3
add
or
repz
mov
pop
xor
rcrb
inc
sbb
sbb
pop
xchg
mov
cltd
cwtl
push
xchg
and
mov
pop
fs
mov
fsubl
out
mov
or
mov
and
mov
repz
loope
es
mov
test
imul
mov
jbe
test
hlt
xchg
and
cs
mov
pop
jno
add
les
cmp
sub
sub
xor
js
cld
fldl
gs
xor
icebp
addl
and
fistl
push
and
insb
popf
pop
sub
ficompl
adc
out
xor
sbb
and
lea
mov
testl
iret
sarl
stos
jmp
mov
mov
cmc
push
imul
pop
loopne
js
sub
inc
mov
in
jge
ret
dec
xor
add
and
mov
xchg
pop
fwait
mov
in
pop
fcomp
cmovle
add
jne
pop
lock
mov
jp
xor
sub
jbe
addr16
pop
aad
sub
mov
ret
sarb
pusha
loope
sbb
xchg
loop
out
xchg
mov
jae
pop
stos
pop
or
repnz
jne
push
jne
pop
jne
pop
cmpsl
sahf
enter
rcrl
add
mov
out
cmc
jns
out
sbb
fidivrl
jecxz
xchg
lods
xchg
pop
push
xor
pop
outsb
xor
movsb
jno
or
cltd
fnstcw
push
jmp
rcrb
adc
or
mov
adc
or
sbb
int3
aam
jnp
or
push
adc
push
es
clc
bound
push
mov
mov
adc
ss
lock
pop
push
aas
aad
lock
shlb
shll
cld
mov
sub
movsl
ljmp
dec
shl
data16
sbb
add
mov
adc
pop
test
adc
imul
fwait
jne
cmpsl
lods
adc
push
pop
mov
add
jno
lret
pop
fisubrl
sbbl
inc
aas
mov
clc
jmp
insl
xor
inc
int3
xchg
lret
int
pop
lcall
or
shrl
mov
add
mov
ret
cmp
mov
and
std
push
jne
repnz
pop
mov
ret
add
mov
popf
and
cli
iret
in
andb
cmc
push
mov
test
not
inc
inc
lock
and
and
pop
pop
adc
sbb
and
mov
outsb
inc
loopne
cs
inc
adc
aaa
sbb
pop
or
mov
test
rol
loope
jmp
add
in
dec
into
out
inc
fadd
push
dec
std
mov
cmpsb
je
mov
leave
cs
dec
mov
incb
inc
pop
gs
xorb
idiv
and
cltd
cmpsl
jae
testl
cmp
out
sub
fldl
das
or
pop
sbb
add
je
mov
sbb
orb
add
or
pop
adc
cmp
aas
fs
mov
inc
pop
cmp
xchg
sti
push
sbb
leave
imul
push
outsb
mov
mov
or
cld
aad
sbb
mov
test
push
xor
mov
ss
dec
call
pop
int3
mov
addr16
loope
mov
lcall
das
fcomi
push
sbb
js
push
icebp
pop
jae
test
arpl
orb
sub
xor
jp
pop
pop
mov
jne
or
cmpsb
adc
mov
jne
and
inc
scas
ret
inc
xchg
in
incb
sahf
fistl
unpckhps
xchg
fstcw
out
stos
jmp
xchg
mov
xor
push
aad
enter
cld
push
push
push
dec
add
or
xchg
sbb
mov
pop
push
leave
xlat
arpl
movsl
pop
ret
or
or
mov
pop
data16
cmpsl
int
cmp
jp
jmp
push
push
mov
sub
cli
and
inc
loope
jmp
mov
jg
outsb
sub
mov
push
push
xchg
push
outsb
lock
push
xlat
inc
inc
dec
movsb
sub
loopw
xor
cmp
mov
xchg
mov
mov
pop
jge
ret
sub
shll
in
clc
lea
mov
inc
leave
inc
aaa
push
xor
ret
mov
mov
push
shl
fnstcw
push
or
adc
mov
loopne
dec
and
xchg
mov
mov
bound
popf
add
inc
stc
arpl
push
pop
aaa
push
add
ss
inc
int
aaa
popa
fcomps
cwtl
ljmp
push
pop
pop
cmpb
cmp
pusha
lahf
scas
repz
jg
sbb
and
xchg
sti
jle
imul
jecxz
ja
dec
push
std
mov
jecxz
inc
clc
shl
mov
out
push
addr16
mov
test
dec
in
pushf
xchg
inc
or
es
add
sbb
pop
sub
enter
pop
cmp
inc
insl
sub
scas
enter
sbbl
jg
js
sbb
pop
lcall
scas
movsb
and
aam
pop
xchg
lock
adc
bound
in
cmp
xlat
test
hlt
je
mov
jecxz
inc
js
xor
imul
icebp
xor
repnz
xchg
fmuls
loopne
pop
mov
in
xchg
mov
cmc
outsb
sbb
std
negl
xchg
jecxz
or
add
dec
loopne
cs
xor
mov
jno
fs
xchg
lods
sbb
xor
pop
mov
fcmovb
fsubr
sub
out
sbb
xor
inc
cmp
in
xchg
cmp
test
pop
or
xor
pop
mov
xchg
aad
cltd
imulb
add
jno
aad
and
mov
cmpsb
popa
fs
and
mov
das
cmpsl
shlb
sub
mov
call
cmpsl
add
add
das
and
in
and
cmp
cld
imull
outsl
add
dec
or
dec
iret
enter
add
shr
and
push
sub
and
sti
inc
cld
mov
push
cmp
adc
ret
sub
jl
xchg
xchg
cmc
arpl
pop
js
das
or
mov
pop
pushf
sbb
and
mov
je
pop
and
xchg
cmp
and
inc
rcrb
jae
fildl
ja
inc
mov
push
jns
xchg
mov
xorl
jne
test
in
roll
push
adc
inc
cmpb
mov
stc
ds
mov
push
add
or
pop
cmp
add
jge
mov
xchg
jno
push
insl
cmp
clc
ror
fwait
in
mov
mov
in
mov
clc
push
lods
xor
je
and
arpl
adc
or
or
fsub
fcmovnu
adc
add
sbb
cmp
aaa
mov
test
and
jae
sar
shlb
les
cmp
gs
fiaddl
lods
outsl
mov
fs
rorl
shrb
jb
cmp
xchg
shl
xor
fists
in
cmp
lds
mov
shrl
pop
in
or
xchg
mov
movsb
mov
lea
sub
xchg
sbb
xchg
adc
pop
iret
add
and
in
nop
inc
rcrb
les
adc
ret
test
fwait
call
in
ret
sbb
int3
aas
pop
in
loop
cmp
repz
cmp
mov
out
cmp
enter
clc
and
mov
jbe
subb
imul
xchg
aas
ss
add
dec
scas
lods
cmp
invd
loope
inc
mov
pop
out
cmp
inc
jl
or
or
lret
clc
popa
sarl
or
fnstsw
push
dec
pop
mov
pop
leave
mov
cmp
sbb
cwtl
ret
ret
outsl
mov
mov
pmulhuw
pop
out
out
decb
cltd
testl
push
addl
std
iret
rclb
mov
push
sbb
bound
int3
and
cmpsl
test
xchg
jno
cmovno
push
pop
mov
xchg
decl
pop
cs
sti
inc
rcrl
nop
push
add
push
lds
sub
add
or
cmp
ja
mov
gs
xchg
cwtl
ja
mov
pop
adc
out
sbb
insb
jae
mov
add
ljmp
mov
in
dec
adc
loopne
rcrb
dec
adc
pop
xlat
in
rolb
mov
imul
rclb
pushf
in
aam
je
popa
mov
jae
imul
lock
cmp
adc
imul
inc
sbb
pop
cmp
xchg
sub
xor
cmpb
pushf
ret
jns
dec
mov
dec
dec
jmp
push
into
xor
push
sbb
or
push
jle
sbb
mov
icebp
in
inc
jge
arpl
push
inc
nop
dec
or
push
xchg
shlb
ds
int
into
lea
sub
ror
mov
jge
pushf
in
inc
dec
mov
cld
and
and
xor
lds
and
fwait
movsl
aas
sbb
negb
and
xlat
mov
out
or
enter
leave
jge
and
hlt
loopne
inc
add
adc
lock
pop
xchg
or
and
stos
aad
icebp
add
sub
out
jmp
pop
mov
or
movsl
or
cmp
push
adc
rorb
popf
mov
mov
ja
adc
aam
inc
cltd
add
push
lods
test
sub
add
sub
cmp
out
shr
or
sub
pop
add
xchg
xchg
push
or
pop
imul
adc
sub
adc
mov
nop
fcmovne
js
jne
push
inc
es
fldcw
pop
and
push
ret
nop
dec
add
dec
pop
mov
dec
ds
scas
ret
adc
and
sbb
mov
fisttps
mov
popa
push
jl
mov
or
xor
adc
pop
jne
xchg
xor
jo
dec
sub
lcall
fs
ss
xchg
cmc
loope
pop
inc
out
mov
popf
rorb
sbb
dec
pop
hlt
ret
lret
lods
ds
mov
in
lcall
or
jns
pop
push
sbb
inc
test
xchg
xchg
jge
adc
inc
inc
sbb
jecxz,pn
pop
mov
fisubrs
adc
shrb
sub
jb
xchg
mov
push
cmp
push
jne
mov
jecxz
or
push
arpl
inc
and
add
jl
lock
mov
insb
popa
inc
enter
jle
in
out
outsl
cltd
mov
fcmovb
nop
int3
sbb
push
insb
cli
cmpsb
je
add
xchg
pusha
dec
mov
and
pop
cmpsb
sbb
jns
dec
lret
add
call
xchg
xlat
lahf
imul
fisttpll
cli
add
in
pop
outsb
sub
fs
jo
imulb
adc
test
dec
es
push
das
add
push
mov
lods
lret
cmp
pop
adc
push
inc
mov
mov
sbb
jo
cmp
movsl
jo
jmp
rorl
addr16
cld
dec
xchg
adc
push
xchg
cs
lret
or
cmpsl
xchg
je
add
dec
mov
sbb
sti
sub
mov
xor
add
mov
xor
add
push
jmp
fsts
add
les
inc
mov
ja
jecxz
pop
mov
popf
lods
rorb
push
lock
fnstcw
inc
inc
adc
ds
lea
xorb
ljmp
and
or
add
lock
dec
mov
dec
and
roll
pop
dec
jge
cmpl
adc
dec
setno
ficomps
cmp
pop
mov
inc
mov
dec
clc
rolb
dec
cmp
aam
mull
mov
jno
mov
std
jp
and
mov
xchg
sub
in
subl
push
addr16
jmp
repnz
aas
movsl
dec
aam
ret
popf
push
stc
cmp
imul
sbb
insl
andb
inc
inc
and
test
pop
aam
in
push
adcl
and
in
adc
jae
mov
push
lock
fcomi
into
xchg
aam
pop
or
addr16
push
lahf
pop
jno,pn
add
mov
jne
popa
mov
pop
push
inc
pop
mov
jle
iret
cld
push
insb
in
xor
mov
jno
stos
or
push
sub
mov
pop
jbe
or
andl
mov
out
sub
scas
xor
mov
cmp
out
and
jle
sbb
insb
test
mov
add
nop
xor
add
sbb
in
sbb
in
pop
push
xorb
push
push
jmp
daa
mov
jno
cmp
fyl2xp1
ss
in
inc
jae
sub
mov
mov
mov
sbb
jo
xor
push
cmp
inc
outsl
je
rcr
jle
dec
push
cld
je
cltd
shrl
insl
mov
lret
push
ret
dec
jp
orps
imul
pusha
add
cmp
inc
mov
xchg
ds
dec
movsl
lcall
test
aas
jb
jg
sbb
add
jbe
aad
mov
je
sub
push
hlt
lds
sbb
inc
repz
inc
inc
and
or
test
sub
jo
push
ja
push
jge
adc
std
fadd
sub
push
xor
or
inc
mov
xor
test
jb
push
dec
lret
clc
mov
pop
mov
jmp
es
adc
enter
add
mov
sbb
xchg
add
data16
sbb
aad
adc
adcl
jg
xchg
mov
outsl
pushf
outsl
and
shrl
mov
fmull
adc
add
bound
ffree
stos
rcl
or
mov
lods
cmp
adc
push
loopne
inc
push
lcall
jl
or
or
sbb
push
sti
jbe
sub
in
push
ret
pop
dec
testl
mov
into
fisttps
cs
fwait
mov
and
arpl
pop
adc
test
out
mov
inc
push
ret
sbb
sub
push
fs
cld
out
sub
cmp
mov
jge
pop
mov
es
push
rorb
test
inc
jge
stos
ret
mov
push
add
das
and
add
and
adc
jmp
bound
mov
ret
out
ss
mov
test
push
push
ja
jnp
test
pop
push
aam
test
mov
aas
mov
loopne
mov
int3
ljmp
testb
push
adc
cmp
shll
mov
mov
addr16
gs
pop
jno
pop
mov
sub
add
push
ret
jnp
cmp
rcl
inc
or
pop
pop
leave
xor
std
dec
xor
jmp
push
cmp
add
mov
push
dec
jge
cltd
roll
or
pop
cmp
xchg
sub
jge
aas
ljmp
jo
lds
push
or
xchg
and
lahf
pop
pop
mov
xor
jge
inc
leave
inc
ds
inc
sub
or
xor
mov
repnz
inc
add
sti
pop
in
scas
cmp
or
test
and
loopne
ds
lcall
data16
adc
sbb
or
cmp
adc
cld
cld
ljmp
jge
jmp
mov
pop
push
mov
xchg
jl
mov
pop
xor
cmp
mov
sahf
test
sub
cltd
sbb
cmc
jmp
cld
mov
lcall
push
xorl
scas
or
xchg
shl
cwtl
jl
repz
jle
pop
mov
popa
pop
daa
cmp
jg
adc
sbb
or
aas
pushf
pusha
int3
test
outsl
sbb
rcl
scas
icebp
jbe
sbb
inc
mov
mov
mov
or
jg
clc
lea
or
aam
add
repz
cs
test
or
adc
gs
imul
inc
bound
xlat
sub
movsb
mov
mov
xlat
loope
cld
push
movsl
fwait
sub
nop
xlat
je
cmp
jmp
iret
and
clc
cmpsl
push
dec
xchg
in
lret
mov
and
jle
mov
pushl
cmp
xor
sub
jl
mov
pop
and
adc
xchg
pop
xchg
sbb
in
in
sbb
repz
jge
ja
stc
in
xchg
pushl
push
add
out
shr
jmp
jb
xchg
lret
mov
arpl
test
mov
adc
bound
and
daa
jmp
ret
and
mov
les
lahf
xor
jns
mov
cltd
cmp
insl
pushf
mov
jb
lods
pop
sarl
cs
cmp
in
and
jmp
mov
nop
lret
and
cmp
daa
in
mov
je
arpl
push
call
icebp
adc
aam
aad
test
jg
or
js
lock
adc
mov
sub
jbe
sarb
movsl
sub
in
and
daa
and
loop
inc
sbb
xor
mov
out
pop
out
call
in
mov
in
aaa
in
sbb
xchg
xor
adc
add
outsl
into
lock
jbe
sbb
jns
popa
iret
inc
sar
mov
std
fs
mov
xchg
into
scas
sbb
jmp
cld
in
xor
repnz
pusha
cmp
ror
cmpl
mov
ret
sti
inc
dec
neg
test
and
js
lea
enter
adc
add
pushf
push
adc
fstpl
mov
test
push
repz
dec
in
pop
decb
xchg
and
div
outsb
mov
push
repnz
push
adc
cmp
aas
imul
fistpl
mov
lret
jle
mov
movsb
jns
lahf
or
sarl
dec
xchg
xor
lods
adc
lret
imul
mov
cmp
push
push
inc
std
jle
test
das
clc
add
mov
sub
pop
cs
sub
mov
idivl
push
adc
push
aaa
or
add
stc
mov
and
shrl
outsb
inc
outsb
popf
add
adc
jae
dec
inc
add
ss
addr16
gs
arpl
imul
nop
or
push
fs
movl
sbb
or
mov
hlt
mov
mov
idiv
enter
mov
fstl
mov
jbe
xlat
popa
clc
out
fcomps
jnp
jnp
pop
repnz
xchg
fldt
data16
test
repz
ret
inc
data16
stc
and
mov
subl
mov
test
and
shlb
test
fdivs
inc
add
push
push
cs
ja
shlb
and
and
cmp
inc
pop
arpl
stc
cmp
adc
jno
jbe
and
aaa
aad
aam
mov
mov
adc
jns
fcoms
andb
dec
sbb
xor
xchg
sbb
in
jg
aam
sbb
push
push
jge
jbe
daa
cmp
push
cmp
or
sub
fisttps
pop
or
sub
cmp
add
shll
sub
outsl
pushf
mov
mov
or
cmp
pop
xchg
adcb
roll
xchg
aas
inc
repz
movsb
loopne
or
std
jbe
mov
adc
cmp
shlb
fstpl
push
sarb
cmp
add
xor
add
inc
aaa
ljmp
cmpsb
push
rcl
jge
push
adc
fdivr
dec
pusha
or
mov
pop
and
mov
lret
icebp
xlat
or
mov
jae
sbb
mov
aam
push
fisttps
movsl
or
movl
mov
call
add
add
adc
sti
push
cmpsl
cmp
cmpsl
ja
pusha
mov
les
enter
pusha
daa
mov
jne
xor
adc
shrb
mov
pop
inc
inc
and
push
or
and
loop
inc
xor
push
push
fwait
cmp
ret
and
mov
sub
mov
or
xor
icebp
push
inc
inc
lret
lea
daa
mov
adc
mov
dec
mov
dec
inc
sub
ja
mov
or
jne
andl
outsb
cmp
pusha
inc
out
addr16
mov
xor
and
mov
mov
lcall
int3
add
clc
add
in
loop
xchg
popf
in
pusha
adc
mov
mov
sub
icebp
loop
jmp
push
mov
pop
mov
add
cmpl
cmp
fdivrs
ret
mov
pusha
shlb
leave
sbb
popa
pop
or
sbb
mov
xchg
test
sbb
cmpsl
out
xchg
fldl
stc
nop
sbb
push
repz
addr16
sbb
mov
pop
das
cmp
dec
pop
call
sbb
push
mov
xor
aaa
dec
imulb
dec
xor
lods
lds
cld
test
jg
andb
and
jo
in
mov
or
sub
ss
sahf
lock
jecxz
shrl
pop
fistl
mov
mov
cmp
jge
dec
or
and
or
fs
call
imul
add
pop
out
arpl
iret
cmp
stos
mov
mov
xor
mov
sbb
push
lods
js
xor
lcall
sub
xchg
pop
je
test
push
pusha
lcall
inc
sub
xor
sbb
stc
jp
dec
repnz
outsb
pop
aaa
adc
cmpsb
in
mov
pop
sub
jne
icebp
and
inc
call
cmp
test
sbb
test
cli
shl
inc
shrb
repnz
fisttps
push
push
jmp
hlt
pop
push
aam
lock
mov
cld
je
fdivrl
mov
mov
sbb
sahf
push
outsb
dec
adc
add
cwtl
loopne
cmp
push
insl
nop
mov
sbb
pop
test
jecxz
dec
cmp
fucom
repnz
inc
adc
jge
wrmsr
and
jmp
adc
xor
jmp
call
push
sub
mov
movsb
dec
gs
sub
sub
cmp
adc
push
sub
xor
lret
inc
mov
cmpb
popa
imulb
cwtl
je
push
dec
mov
fwait
inc
jle
sbb
pop
int
sub
pop
in
int3
add
int3
test
jle
adc
ljmp
and
test
fiaddl
cmp
mov
push
fs
lods
popf
mov
mov
sbb
fisubrl
inc
loopne
shl
in
sbb
xor
mov
and
enter
insb
pop
in
arpl
cmp
inc
sbb
xor
decl
cmp
jne
test
sbb
ret
jecxz
adc
int
and
mov
and
jmp
cmp
repz
lret
xchg
stos
adc
cwtl
je
xor
mov
xlat
pop
dec
inc
sbb
nop
mov
rorl
dec
lret
int3
jbe
movsl
mov
jo
dec
xchg
jne
popf
mov
dec
push
addr16
hlt
into
cmpsl
sbb
lds
repz
sbb
out
pop
gs
or
sub
das
gs
emms
int3
fldcw
ja
enter
sub
aaa
xor
and
cmp
fs
mov
sub
sarb
sbb
dec
add
out
sbb
cwtl
add
aad
or
or
jo
lret
pusha
stc
mov
push
push
lea
push
push
add
inc
sti
dec
push
add
lahf
lret
cld
adc
pusha
pop
mov
cltd
mov
mov
add
cmp
les
adc
sbb
mov
sub
xor
sub
jge
sbb
fstpl
outsl
test
push
and
das
mov
xor
add
nop
inc
sbb
cmpsb
movsl
dec
out
push
inc
jl
and
jo
test
or
xorb
pop
repnz
adc
in
xlat
mov
fldt
sbb
dec
mov
std
adc
cmp
pop
cmp
andl
inc
adc
popf
fcmovnb
sub
aad
and
cmp
cmp
jle
push
insb
popa
pushf
mov
jmp
and
mov
imul
xchg
sbb
or
or
sarb
stc
or
es
or
mov
inc
mov
and
into
popf
sbb
call
das
int
outsb
aam
mov
aam
sub
or
or
call
mov
or
dec
ja
sub
xchg
fbstp
inc
push
inc
xchg
jns
aam
pop
movl
ja
fcmove
mov
push
mov
and
je
nop
or
inc
dec
insl
dec
push
sub
inc
sub
clc
jns
nop
sbb
lock
dec
mov
loope
dec
aas
mov
and
sbb
and
mov
rorb
insl
das
inc
pop
jp
inc
mov
pop
add
sub
ret
sbb
std
arpl
dec
in
or
cmp
adc
xlat
fwait
outsb
inc
iret
sub
mov
pop
dec
ret
jnp
mov
shl
lock
xor
xor
cmp
in
xor
or
xor
jnp
cs
jl
icebp
sub
jl
mov
mov
sbb
rcll
repnz
xchg
ror
push
cmpb
roll
and
sub
adc
xor
inc
dec
xor
or
pop
push
lea
add
push
lret
jecxz
movsl
pop
inc
xchg
mov
shll
xchg
dec
mov
loop
stc
pusha
inc
xchg
loopne
or
cmpsb
xchg
or
sub
test
lret
js
stos
mov
shr
and
lock
ss
inc
push
sbb
popf
push
sbb
push
cwtl
mov
rdtsc
pop
leave
imul
fwait
sbb
mov
jge
mov
rorb
add
add
xchg
movsl
hlt
dec
outsb
xor
and
add
aam
pop
mov
or
cmp
lea
lds
lock
aaa
xchg
inc
stc
mov
add
sbb
cmpl
sbb
jge
icebp
inc
mov
sbb
pop
aam
lret
dec
add
jmp
sbb
nop
add
jno
jo
jae
or
sbb
dec
out
outsl
jle
push
mov
scas
jb
mov
clc
bound
fistl
mov
sub
mov
and
sbb
inc
xchg
cmpsb
and
sbb
sbb
mov
and
mov
insl
mov
fisubrl
test
negb
or
lea
rolb
mov
pop
decb
imul
imul
or
mov
sub
int3
dec
or
mov
cmp
mov
repnz
and
lea
out
andl
jmp
jb
push
ret
sub
test
ljmp
std
sbb
js
clc
cmp
int3
fstl
lcall
xor
sub
xor
push
push
dec
call
lahf
les
xlat
mov
iret
enter
loopne
les
jmp
popa
stc
push
mov
rclb
lods
jecxz
inc
dec
jb
dec
test
sbb
or
lock
loope
mov
cmp
sbb
aam
or
dec
cli
out
pop
cmpb
addl
mov
add
mov
es
loope
cmp
mov
or
jb
push
xchg
test
mov
mov
or
clc
pop
ss
mov
inc
cmp
es
dec
push
xor
shrl
addl
mov
in
jns
lret
out
fidivrs
and
popa
adc
loop
push
add
lods
imul
clc
int3
cwtl
push
jge
daa
cmpsb
jo
ss
loope
add
mov
pop
mov
ds
cwtl
flds
sub
aad
pop
popf
call
xlat
jb
daa
lcall
mov
rcll
ja
jb
xchg
pop
lahf
add
push
xor
insb
xor
inc
imul
das
xor
aaa
push
int
and
mov
rcrb
pop
cmp
mov
add
adc
inc
lcall
test
push
sbb
push
imul
cld
shrl
dec
mov
lds
or
popf
mov
fldt
out
add
in
outsl
fs
je
inc
mov
cwtl
clc
jmp
sub
jne
and
cmp
clc
xor
cmp
add
addl
scas
jnp
in
push
popa
xchg
sub
sub
popf
pop
dec
push
test
cmpb
mov
cmp
test
sbb
pop
test
loope
mov
mov
jo
jge
stos
cmp
push
xchg
lock
cltd
jg
add
mov
mov
daa
inc
fsubp
mov
fwait
out
inc
mov
int3
add
or
xchg
pushf
dec
xor
adc
ljmp
and
mov
xchg
or
pop
jge
out
cmp
pop
imul
push
mov
movsl
and
cltd
mov
out
add
pop
cld
fs
lock
or
jp
data16
adc
xor
pop
testb
jo
jns
jl
aaa
mov
repz
cs
cmp
movsl
stos
movsl
add
data16
push
jmp
loop
fists
add
cmovno
bound
pop
mov
sbb
jne
push
popa
xchg
mov
push
shll
fdivr
add
add
stos
and
or
shl
daa
scas
push
sub
js
xorb
mov
xchg
push
xchg
push
rorb
jns
push
mov
fs
adc
push
push
leave
or
jle
insl
adc
xor
lods
fildll
push
scas
mov
push
cs
or
jbe
addr16
push
iret
cld
bound
lock
xor
pop
cmp
ds
test
hlt
lea
out
cwtl
fimull
rclb
shrl
add
cs
clc
add
loop
decl
push
xchg
and
cmp
push
movl
fmuls
xchg
adc
add
dec
popf
jl
fmul
mov
sbb
xchg
sub
popa
bound
xor
shll
or
mov
or
pop
add
lods
testb
add
or
hlt
jmp
and
in
lods
mov
pop
jno
inc
push
sub
cmp
push
mov
or
mov
dec
sbbb
pop
xchg
jmp
mov
push
idiv
insb
mov
imul
push
dec
jge
adc
or
fs
mov
jno
int
add
pop
mov
daa
mov
dec
ret
mov
cltd
ficoml
sbb
sbb
cltd
push
push
mov
mov
push
cli
sub
sub
sbb
jae
fstpt
jle
popf
add
stos
pop
xchg
and
mov
call
cmp
loopne
sti
int
arpl
insl
jnp
push
icebp
jl
and
xchg
cmp
fld
scas
rclb
xor
in
inc
and
sbb
sbb
rolb
sbb
icebp
add
and
or
in
inc
sub
pop
pop
push
xchg
or
adc
mov
push
push
mov
mov
xchg
push
push
inc
sub
jle
and
imul
test
pop
repnz
mov
mov
push
je
push
popa
dec
mov
mov
jmp
pop
inc
mov
call
lds
cli
dec
scas
mov
jp
add
dec
enter
jae
cmpsb
xchg
inc
add
jecxz
fildll
xorb
iret
add
or
push
pop
nop
add
data16
hlt
and
inc
test
loopne
lahf
cmp
or
rol
push
or
repnz
xor
mov
stos
mov
xor
fdivrl
hlt
das
xor
pop
mov
xchg
mov
inc
push
dec
arpl
loope
pop
sbb
push
mov
fs
inc
inc
sahf
lret
fsubl
cltd
fs
and
dec
es
sbb
nop
xchg
lods
fs
lcall
inc
adc
fucomi
iret
shlb
add
mov
mov
lds
mov
popf
push
ja
jge
push
fdivrl
or
mov
xchg
gs
or
xor
adc
and
sub
fcmovnb
add
imul
daa
xor
mov
andl
xchg
mov
dec
mov
int3
add
arpl
push
repnz
mov
aaa
hlt
jae
out
cld
imul
adcb
mov
sti
loop
mov
movsb
mov
dec
mov
sar
std
stos
sub
mov
bound
push
sub
or
jnp
or
shlb
pop
push
pusha
call
std
sub
push
push
push
div
dec
fcoms
push
adc
jbe
lret
sbb
adc
gs
lea
mov
add
and
jmp
push
movsl
cmp
mov
xlat
pop
divb
mov
pop
mov
push
add
pop
ret
enter
adc
cmp
jae
push
call
stos
repz
adc
jnp
or
cmp
pop
sub
sbb
lcall
mov
adc
movsl
sbb
sub
mov
xchg
mov
ss
arpl
pop
js
repz
iret
and
add
ja
mov
shll
fidivs
pushf
aas
fbstp
sub
stos
pop
stos
and
push
sarl
daa
js
xlat
popa
imull
cs
imul
gs
sbb
and
mov
add
adc
mov
push
fidivs
repnz
jmp
cwtl
jne
xor
xor
pushf
cs
lock
int3
out
leave
and
and
cli
mov
popa
out
add
out
fildll
ds
test
jmp
push
mov
out
sbb
andl
int3
push
add
mov
int
and
jge
js
pop
pushf
out
ret
mov
sbb
pop
add
je
mov
xor
mov
pusha
imul
mov
icebp
mov
pop
fldt
outsb
mov
and
loop
divl
xchg
jno
leave
mov
imul
nop
outsl
cmp
jecxz
ljmp
inc
imul
sarl
add
dec
sbb
mov
add
insl
inc
aad
mov
pop
inc
movsb
dec
jo
loope
mov
xorb
icebp
adcb
cltd
mov
movsb
cmp
gs
mov
sbb
jmp
cwtl
and
inc
sub
les
stc
sbb
adc
adc
dec
mov
and
pop
mov
int
and
inc
dec
cmpsb
stc
cmp
sti
jecxz
and
or
int
enter
int
popa
sub
rep
mov
scas
aad
push
sub
fdivr
int3
dec
or
pusha
sub
adc
push
mov
and
pop
add
dec
jmp
push
mov
jmp
lret
add
pop
xor
add
and
insb
push
call
xor
jle
add
inc
add
andl
dec
mov
add
cmpsl
adc
imul
fildl
mov
xor
and
and
or
add
jl
mov
push
push
int3
lock
fwait
aas
popfw
adc
mov
ret
imul
mov
cmp
imul
jge
test
fwait
sbb
arpl
in
or
scas
or
push
push
lds
pop
push
pop
pusha
jg
dec
imul
adc
stos
jo
mov
add
lret
pextrw
sbb
pop
aam
sub
jo
inc
cli
push
fldcw
mov
or
inc
incb
addb
xchg
cld
in
cmp
cwtl
je,pt
sbb
jo
nop
bound
test
adcl
cmp
sbb
inc
in
push
jmp
lds
pop
lret
lock
or
scas
jno
cwtl
sbb
das
sbb
xor
mov
dec
mov
test
mov
dec
pop
andb
int3
jnp
mov
adc
hlt
add
jb
aaa
jmp
push
sub
pop
mov
fsubl
push
jae
add
jno
outsb
ss
je
lret
xchg
and
sub
dec
scas
rcrl
push
mov
aaa
test
out
aas
xchg
sub
push
cmpsl
mov
pop
push
ljmp
xor
inc
push
pop
dec
cltd
or
jo
addr16
xchg
jle
mov
ret
dec
loopne
jns
dec
in
je
outsl
js
inc
out
ss
inc
pop
aas
arpl
xchg
cmp
iret
pop
cs
inc
jmp
mov
pop
dec
pop
or
xchg
cmp
dec
rclb
iret
loop
cmp
jle
mov
ljmp
xor
mov
adc
inc
and
sub
sub
lret
adc
jmp
mov
adc
push
ja
inc
lock
cmpb
add
add
sbb
xor
cmp
ds
adc
dec
mov
sbb
pop
push
pushf
lcall
xchg
adc
loop
popf
pop
xchg
fucomip
mov
std
outsl
lahf
cmp
or
pusha
jno
movb
ror
jp
shll
imul
mov
clc
push
jnp
loope
cmpsb
fs
push
xchg
or
aaa
add
dec
insb
fidivrs
fcoml
xor
cwtl
sbb
xchg
out
cmp
mov
testb
lcall
es
mov
pusha
daa
mov
dec
xor
cmc
imul
add
jno
inc
add
pop
mov
icebp
adc
cmc
aaa
sub
cld
seta
lahf
lret
add
imul
mov
pop
das
lods
push
rorb
fstl
sub
cld
dec
in
mov
push
lret
int3
iret
push
imul
mov
pushf
frstor
jmp
imul
mov
test
mov
out
jecxz
pop
jnp
dec
mov
or
in
in
rorb
pop
push
ds
aas
call
inc
mov
xchg
sub
adc
pop
not
insb
or
popa
test
fcompl
pusha
fldl2t
and
cmp
cmp
repnz
push
fidivl
in
and
repz
adc
mov
fsts
push
or
lock
ret
cmpsl
jnp
outsl
sarl
mov
sti
imul
pop
xchg
sub
mov
inc
scas
mov
in
or
mov
nop
jns
sub
mov
outsb
int3
pop
sub
jmp
frstor
int
fidivrl
xor
leave
pop
and
fldenv
sub
fists
or
jne
push
push
add
ds
ljmp
sbb
and
mov
mov
jb
xchg
adc
jecxz
add
mov
fisubl
push
xchg
jno
mov
icebp
mov
add
xchg
sbb
movb
mov
inc
movsl
repnz
lea
fildl
cmp
in
not
pusha
mov
and
popl
sub
sbb
and
and
inc
or
mov
push
add
adc
dec
mov
sub
jg
dec
cmc
or
sti
int
popf
push
jp
in
xchg
push
mov
loope
mov
std
js
pusha
push
mov
xchg
pop
dec
inc
add
vmwrite
ror
sbb
and
adc
in
out
imul
xchg
fnstenv
mov
lods
xorb
addr16
inc
pushf
cmp
xchg
xor
cmp
cmpsb
std
sbb
xchg
jb
lret
movsl
sbb
sbb
ds
mov
out
call
repz
in
mov
leave
cmpb
jmp
ds
sub
and
mov
jl
lcall
pop
add
fs
sbb
xchg
test
fisubrs
dec
xor
pop
repnz
movsl
or
shlb
mov
sub
jo
call
mov
sbb
adcb
js
cmp
sbb
pop
clc
jecxz
sbb
in
cmp
xor
cld
adc
hlt
repnz
call
cmp
iret
loopne
dec
cltd
popf
mov
jmp
repnz
xchg
popa
rcrl
mov
pop
pop
jge
lahf
jne
dec
mov
pop
nop
enter
out
pop
cmp
or
movsb
cs
sub
fcompl
mov
stc
shrl
adc
fisttpll
mov
adc
xchg
inc
or
xchg
in
or
sahf
daa
iret
and
xor
cmp
inc
mov
fisttpl
in
cmp
mov
xor
sbbb
xchg
insb
inc
xor
mov
and
lahf
sub
xor
pop
xchg
mov
push
in
xchg
mov
add
adc
adc
pop
test
mov
add
xchg
data16
and
test
push
dec
inc
dec
sti
not
sahf
int3
fimuls
sbb
and
pusha
sbb
dec
test
and
xor
and
sub
lret
xchg
mov
sub
add
pop
xor
jnp
or
je
rcrl
adc
in
and
rcll
push
adc
lds
and
inc
cld
cld
out
mov
aam
jo
test
pop
inc
mov
inc
leave
out
mov
sub
idivl
push
lahf
lock
movsb
aad
pop
mov
jg
pusha
icebp
imul
in
xchg
scas
or
hlt
pop
xchg
movsb
lods
cmp
cmp
hlt
jo
popa
push
lods
push
adc
in
pop
jbe
lret
or
cmp
sub
or
lcall
scas
sar
iret
xchg
push
sbb
cmp
fistps
int3
mov
push
cltd
xor
xor
jb
shrb
movsb
int3
cmp
inc
push
jl
push
loope
cli
enter
mov
jmp
jb
dec
cmp
xor
in
fs
or
jl
scas
xor
sbb
sbbl
push
stc
jo
mov
loopne
pusha
stos
inc
in
in
fcomps
loope
sbb
or
xchg
jbe
xor
mov
daa
and
pushf
inc
push
sbb
clc
negb
push
adc
scas
and
push
sbb
clc
bound
xchg
in
add
and
aam
lods
enter
rolb
jge
das
pop
scas
out
faddl
and
rorb
xor
push
popf
mov
cwtl
cmpb
sbb
xchg
out
sbb
mov
pandn
adc
clc
mov
fwait
mov
repz
cmc
mov
lahf
mov
cltd
jns
addr16
adc
or
in
nop
xchg
push
cwtl
sbb
fisubrs
in
adc
lret
fnstsw
pop
cmp
add
psubd
sub
rclb
stc
mov
sub
rcrb
clc
arpl
ret
cld
cwtl
fwait
mov
orb
popa
sti
xor
mov
add
jg
inc
or
std
inc
sbb
les
sbb
cld
gs
push
loop
adc
call
data16
mov
cmp
inc
js
pop
sub
test
test
test
or
add
repz
lods
or
js
icebp
push
xchg
stos
ret
mov
test
lods
cwtl
add
cmp
ja
mov
loopne
add
xchg
dec
jno
mov
or
mov
add
push
xor
xchg
int3
mov
mov
add
push
sbb
xchg
pusha
mov
fs
cwtl
clc
mov
adc
and
xor
lcall
xchg
adc
imul
test
xchg
mov
or
insb
cmp
push
jns
pop
aam
ret
mov
mov
mov
sbb
adc
inc
fcomps
ss
jo
popw
sub
lea
cmp
pop
test
xchg
sub
cmp
call
in
mov
xor
enter
mov
lock
or
mov
mov
cmpsb
lahf
iret
jl
or
push
dec
outsb
xchg
ds
add
loopne
pushf
inc
adc
xchg
or
xchg
xor
movb
pop
nop
xchg
xchg
add
arpl
hlt
cwtl
ficoml
push
xchg
in
repz
inc
fcoml
pop
movsb
xchg
push
lock
sbb
in
iret
popf
les
jg
xchg
lahf
aas
xchg
rol
ja
add
ja
or
sahf
push
into
jnp
xchg
inc
shlb
or
dec
lock
cld
push
les
and
arpl
pop
mov
ficoml
jl
je
shll
push
pusha
mov
pop
sahf
or
movsb
push
pop
aad
mov
loopne
xchg
sbbl
insb
dec
sahf
lods
push
mov
sub
xor
inc
and
gs
movsb
or
cld
leave
fsubrs
cld
sbb
pusha
dec
sahf
inc
loopne
fsubl
test
xchg
stos
sbb
jmp
sbb
cmp
cmp
or
and
and
or
jb
mov
cld
mov
push
aas
fsubrs
testb
jne
pop
adc
fnstenv
inc
dec
hlt
leave
jnp
push
mov
in
mov
fmuls
sub
jle
rclb
adc
test
fdivs
jne
loope
sbb
or
jmp
sbbl
jb
das
xchg
cmpsb
mov
repz
dec
push
add
or
aas
frstor
and
or
cmp
fimull
fwait
sub
je
pop
popf
mov
mov
adc
call
mov
inc
and
mov
jo
jp
add
xchg
push
sbb
pop
mov
add
jg
mov
or
mov
push
mov
mov
stos
mov
lods
ret
in
adc
mov
push
push
adc
repnz
push
sub
lds
sbb
dec
int3
ds
dec
xor
push
fstpt
dec
ret
and
sbb
adc
adc
fcom
test
aas
mov
div
ljmp
ret
mov
lds
iret
jle
daa
enter
cld
ror
mov
sti
xor
pop
imul
xor
mov
add
leave
les
notb
int3
stos
mov
lods
fstpl
popa
daa
push
popf
cmpb
pop
mov
mov
cli
adcb
add
add
lcall
out
jle
push
mov
incb
loope
push
jge
test
add
inc
and
shlb
and
mov
dec
dec
ret
mov
lea
mov
loopne
dec
adc
xchg
cmp
lock
xor
daa
inc
or
cltd
clc
cmp
out
hlt
xchg
scas
mov
enter
pusha
push
into
rcll
add
sub
push
or
cmp
icebp
xchg
and
ja
sbb
add
mov
scas
addr16
shll
and
mov
in
testb
mov
popl
xor
xor
sub
fildl
mov
loopne
jb
mov
arpl
es
lcall
cld
mov
sbb
in
cmc
jle
jb
hlt
cs
mov
cmpsb
dec
mov
mov
clc
or
push
shlb
and
rcrl
add
dec
lcall
sbb
hlt
jae
std
push
test
cld
xorl
shlb
repz
mov
test
jg
lock
push
repz
sbb
inc
inc
sahf
loope
xlat
xchg
jne
xor
gs
addb
add
adc
and
pop
aaa
sti
xor
inc
xchg
push
push
lea
dec
aad
outsl
shlb
jne
addl
push
cmc
lds
or
pop
lahf
popa
push
push
pop
xor
sbb
xchg
add
shlb
icebp
lea
push
in
in
fbld
nop
xor
push
aad
mov
cmp
adc
lds
push
push
dec
je
mov
mov
xor
mov
mov
mov
and
mov
gs
and
pop
and
fidivrl
jg
cmp
insb
add
mov
std
jle
cmp
xchg
jl
push
add
push
jb
je
push
or
scas
xchg
inc
xor
jp
out
add
mov
test
xor
mov
mov
push
add
in
leave
arpl
mov
dec
out
mov
xchg
jb
outsl
std
addr16
push
bound
lods
insl
aaa
lock
mov
xchg
incb
and
je
gs
mov
cmpsb
pushf
fstl
decl
or
fisubrs
or
or
push
mov
add
inc
or
sbb
idiv
pop
iret
in
mov
lods
in
xchg
cmpsb
lret
fistpll
xor
aam
and
mull
ficompl
repz
push
and
shrb
lods
adc
push
xor
mov
in
lock
cmp
mov
lods
test
inc
pop
xchg
xchg
filds
mov
test
pop
insb
cmp
dec
lods
sub
fnstcw
sahf
ja
or
stc
movsb
or
adc
sub
pop
mov
or
lds
addr16
pop
sub
sahf
mov
mov
mov
cmp
cmpsb
imul
push
and
scas
lock
test
out
incl
shlb
pushf
rorb
jmp
dec
push
push
mov
and
call
paddsb
fsubrp
lock
mov
jmp
rcll
icebp
xor
sub
mov
or
lret
jo
or
mov
addb
cmc
scas
cld
inc
jns
iret
int
ss
sbb
lahf
test
sbb
cmpsb
ret
dec
push
xor
cmp
popf
clc
call
fildll
jo
push
xor
aas
push
test
xor
add
mov
xchg
lock
repz
jge
aad
inc
outsb
cmpsl
push
adc
xchg
popl
xchg
push
out
mov
aam
push
add
pushl
subb
movsb
mov
js
adc
subb
and
sub
out
push
pop
test
add
sbb
add
mov
jp
mov
lock
cmc
roll
xchg
lock
jp
xor
scas
mov
in
add
adc
leave
loope
repz
mov
insb
jbe
adc
push
mov
fwait
clc
sarb
gs
adc
or
sbb
cmp
das
pop
aam
xchg
push
add
ss
js
scas
fmuls
pusha
iret
cmp
or
xchg
mov
mov
add
sub
aad
insl
xchg
in
pusha
fmul
rcl
inc
lcall
pop
test
daa
outsb
inc
or
cmpsb
jg
pop
fisubl
mov
add
subb
sub
dec
mov
pop
ret
sbb
in
cwtl
push
dec
mov
mov
fs
test
cmpb
daa
dec
out
xor
push
jmp
add
aad
sbb
arpl
orb
nop
in
mov
fs
jl
ret
rclb
cwtl
xchg
mov
and
or
or
lock
fnstenv
stos
in
ljmp
sahf
div
popa
sub
movsb
mov
pushf
mov
cmpsl
push
pop
push
scas
cld
adc
sbb
sbb
out
fldt
test
je
inc
push
out
testl
mov
sbb
fisubrs
pop
test
adc
lods
adc
lock
mov
shrl
js
data16
cltd
dec
dec
insb
push
das
div
mov
pop
mov
pusha
adc
test
or
adc
push
inc
pop
push
jmp
inc
out
movsl
or
test
jno
cmpsl
lods
mov
cld
fldlg2
push
jmp
ds
rorb
inc
cld
imul
push
in
xchg
data16
and
push
je
popa
popa
inc
sbb
insl
mov
mov
ss
ljmp
lret
mov
xor
call
dec
xchg
mov
lods
add
adc
xchg
shrb
pushf
add
loope
and
shlw
in
adc
add
push
test
mov
mov
xchg
mov
cs
sete
push
fdivrs
nop
lret
push
push
lods
nop
jno
and
dec
add
xchg
cli
xor
lea
or
cmp
or
imul
shr
sbb
cmc
jge
push
add
shll
cmpsb
inc
push
aas
and
aam
cmp
xchg
lret
mov
mov
xchg
pop
fldt
shrb
imul
add
mov
add
repnz
out
mov
repnz
xchg
aaa
cmpl
mov
lret
fcomp
jmp
aaa
inc
cmpsl
lea
fidivl
jae
push
fdivs
inc
pushl
cwtl
push
xlat
hlt
adc
mov
pop
fldl
insl
mov
jge
fmuls
fildll
sbb
or
in
les
aaa
mov
xchg
roll
mov
mov
sbbl
push
add
clc
cmp
je
ljmp
push
nop
fwait
push
enter
mov
cmp
ss
sbb
mov
in
mov
mov
ds
lret
or
xchg
aam
dec
mov
cmp
je
aam
lock
adc
das
sbb
mov
mov
or
xchg
push
mov
sub
imul
mov
lahf
cmp
emms
sbb
inc
call
inc
ljmp
out
cmc
subl
movsb
divb
cli
in
sub
sarl
adc
mov
cs
jae
cmc
cmp
mov
add
add
sbb
sbb
mov
pop
sti
int
mov
fadds
jecxz
rcrl
clc
movsl
aas
push
jno
les
xor
in
mov
push
add
in
movsl
lret
les
movsl
xchg
dec
cmpsb
add
shr
mov
mov
cld
add
mov
popa
inc
push
inc
repnz
sbb
sbb
xor
loope
inc
or
sub
sub
jb
repz
jnp
mov
dec
add
push
cmc
mov
inc
imul
imul
arpl
mov
adc
insl
add
repnz
lods
mov
mov
sahf
push
loopne,pt
or
call
int
dec
pop
andl
jp
xor
gs
xlat
sbb
adc
or
iret
push
pop
mov
sti
push
mov
cmp
jne
cmp
jne
fbstp
pushf
push
add
jb
inc
add
sub
sbb
cwtl
jbe
movl
jnp
rorl
add
push
mov
popf
nop
lea
add
jecxz
scas
jg
cmpsl
mov
leave
mov
jle
in
inc
insl
xchg
sub
sbb
and
aaa
lcall
lahf
xchg
movsb
jl
imul
inc
add
dec
ret
and
pop
subb
stc
enter
adc
mov
mov
ds
fnstsw
ja
movsl
pop
xor
cld
inc
stos
adc
lods
call
lcall
faddl
hlt
adc
sub
or
dec
rclb
lea
xlat
cmp
inc
fs
negb
add
xchg
bnd
fdivp
into
mov
out
push
xor
dec
fmull
rorb
mov
aam
xor
jo
push
lret
and
je
repz
or
scas
dec
and
rorl
sub
xchg
dec
adc
in
xor
clc
mov
adc
jl
ds
lret
and
pop
lods
leave
pop
cli
or
js
stos
cmp
aas
ret
mov
movsb
aam
pop
dec
movsl
cmp
and
fcmovbe
inc
fstpl
jno
ret
pop
addr16
mov
jo
inc
jg
movsb
sbb
repnz
mov
js
cmpsl
dec
jle
imul
pop
mov
cmpsb
rorl
push
fdivrp
cwtl
test
int3
outsb
add
xor
or
or
icebp
call
hlt
insb
add
xchg
xchg
jae
jb
data16
jnp
mov
repz
popl
dec
cmp
sarl
lods
push
mov
dec
call
cmp
mov
iret
sbb
popl
adc
out
jno
add
test
dec
jg
das
sahf
shr
fsubrs
test
sub
and
mov
xchg
xchg
jns
jle
push
imul
stc
daa
arpl
das
ljmp
inc
repz
sbb
xchg
inc
movsb
add
xor
jbe
gs
mov
xchg
xchg
mov
mov
mov
push
mov
pop
jge
frstor
xor
es
add
popa
add
aas
xor
mov
xchg
mov
jbe
mov
lods
xlat
outsl
dec
cld
or
out
and
mov
stc
push
mov
push
jl
or
jecxz
adc
fcomi
daa
push
out
push
sarb
dec
clc
add
jne
inc
lock
loope
cmp
fldt
pop
shrb
movsl
mov
das
jae
xchg
sbb
lock
add
or
movsl
xchg
sub
enter
sbb
das
cmpsl
clc
push
pop
jbe
pop
mov
and
add
pushf
xlat
je
add
xchg
int3
mov
lods
test
pop
pop
and
pop
push
andnps
pop
fsubrs
lock
movsb
or
fistps
pushf
loopne
aaa
mov
cli
je
push
roll
stos
ljmp
xchg
aam
xor
inc
loop
stos
icebp
xchg
add
popa
test
adc
push
xor
sbbb
mov
in
aaa
movl
pushf
or
sbb
xor
adc
jnp
dec
mov
mov
add
jle
testb
inc
and
lret
mov
mov
repnz
mov
push
int3
and
lahf
add
imul
xor
insb
mov
inc
push
leave
sbb
inc
pop
pop
adc
inc
aas
or
xchg
dec
or
mov
lds
adc
xor
xchg
xchg
sbb
push
fnstenv
rcrb
or
mov
jbe
das
mov
mov
mov
xchg
das
stos
cli
mov
push
mov
xor
cwtl
addr16
or
mov
push
ja
pop
mov
adc
xchg
mov
int3
and
sub
call
jmp
push
xor
scas
push
js
dec
data16
enter
sbb
insb
pop
and
fsts
push
jmp
in
movsb
xchg
mov
inc
or
sahf
inc
xchg
repz
aad
xlat
inc
add
fcompl
and
fmul
lock
lret
cli
sub
xchg
jno
dec
mov
adc
enter
sbb
shlb
mov
push
or
push
dec
pop
sub
mov
pop
rcrl
sbb
sbb
fwait
sbbb
movsb
insl
or
jle
outsl
jae
or
aad
out
xchg
inc
mov
jl
lock
jb
and
mov
inc
mov
popa
aas
mov
hlt
cltd
hlt
mov
inc
sbb
or
movsb
xchg
xchg
or
inc
testl
lock
jge
mov
push
in
cmp
xor
dec
out
out
inc
sbb
es
movsb
je
cmp
xor
sub
push
movsb
jnp
push
and
xor
jle
sub
mov
push
aad
jmp
fiaddl
add
xor
lock
int
inc
sub
jae
mov
add
cld
sbb
fnstsw
mov
dec
pop
iret
int3
xchg
sbb
outsl
or
jo
test
call
lock
pop
lret
dec
xchg
in
or
or
into
inc
push
loopne
xorb
cmp
pop
repnz
mov
xor
xor
adc
sbb
mov
shlb
sarb
jge
ss
sub
lahf
add
in
das
loopne
pop
and
push
rcrb
lock
sbb
dec
add
add
push
insl
add
pop
mov
xchg
popf
mov
sar
test
add
push
cltd
cld
sub
pop
cs
movsl
xor
mov
sbb
sbb
in
jnp
rclb
push
pop
or
iret
inc
loopne
int
mov
mov
incl
movsl
push
mov
sbb
mov
push
mov
lock
jne
push
pop
jns
push
inc
in
jne
jge
push
enter
mov
mov
mov
ds
dec
cld
jae
mov
andb
loopne
fnstsw
mov
enter
cmpsb
addr16
mov
mov
or
cs
or
rclb
gs
cmp
sarl
jl
pop
dec
and
ficomps
pushf
iret
xorl
inc
xor
inc
jae
xor
xor
test
jbe
push
fsubl
push
cmp
hlt
in
pop
or
pop
mov
inc
test
stc
dec
andb
jo
ljmp
int3
les
or
fcompl
cs
lcall
and
add
cmpsb
sub
call
inc
lcall
or
aaa
xor
jmp
fdivrs
add
lahf
jne
clc
or
push
in
lea
and
aam
movsb
out
adc
jle
add
fs
or
outsl
cltd
aaa
iret
std
mov
or
push
bound
adc
or
push
andb
pop
cltd
leave
or
je
test
mov
pop
out
mov
add
rolb
dec
fstl
lock
cmp
fadd
mov
lock
cmp
lods
sbb
add
dec
cltd
test
inc
cmp
fdivrl
jl
dec
in
js
inc
mov
sbb
xchg
test
cmpsl
aaa
mov
in
cmpsb
stc
or
cmp
hlt
repnz
push
xor
adc
push
test
jbe
mov
and
js
pop
pop
pop
pop
mov
cmpsl
mov
pop
loope
loope
inc
mov
xchg
pop
xlat
loopne
jmp
fs
fimull
cmp
sahf
mov
std
add
sub
lds
mov
inc
xor
mov
mov
cmc
xor
xchg
xor
push
mov
arpl
iret
push
cmpsl
sbb
lea
inc
mov
lea
and
push
push
push
push
divb
lcall
out
shll
int
sbb
mov
sub
jge
jae
dec
js
jge
or
mov
mov
fadd
push
jecxz
sbbl
fsubs
xor
daa
fldl
lods
in
aam
jp
xchg
xchg
js
adc
mov
inc
daa
jne
fwait
pushf
lock
push
test
subl
imul
arpl
sbb
pusha
shl
xor
mov
int
insl
orl
mulb
jl
inc
sbb
aas
test
pusha
xor
jg
mov
rorl
xchg
fcoml
mov
jge
loop
cld
pop
jge
cmp
lret
cmp
sarb
inc
leave
pushf
ss
outsl
out
sub
insb
sub
push
or
sub
hlt
xchg
inc
pusha
mov
add
pop
jp
lods
les
fcomps
push
mov
xor
xchg
int
ja
cmp
add
scas
mov
mov
adc
aaa
lock
clc
sub
mov
or
add
out
je
and
cmp
dec
sub
pop
or
xchg
popf
pop
faddl
fsubp
in
and
cmp
push
dec
aas
rcr
cmc
inc
popl
iret
out
mov
in
pop
mov
lret
dec
fwait
je
aad
adcl
pop
hlt
cmp
les
pop
popa
jl
push
fwait
xor
xchg
dec
shll
jns
call
pushf
push
or
dec
mov
aas
jnp
xorl
leave
fstps
jmp
imul
add
pop
jmp
out
in
mov
mov
test
mov
jns
fs
je
and
arpl
fs
lock
adc
mov
lods
ret
cltd
cmp
rcr
push
push
add
xchg
add
insl
test
icebp
sti
out
pop
push
out
mov
pop
jg
jns
xchg
jl
loopne
lea
sub
mov
and
and
push
xchg
add
pop
dec
cmc
ljmp
out
mov
lea
neg
mov
or
repnz
dec
jne
mov
loop
inc
lock
pop
push
sub
out
test
imulb
xchg
lret
mov
cmpsl
out
add
mov
adc
inc
xchg
push
inc
add
popa
adc
cmp
sub
call
push
xor
aas
xchg
cmc
xchg
xchg
lret
push
ret
stos
sub
cmp
mov
pop
mov
cmp
sbb
push
popf
out
int3
adc
mov
test
mov
clc
sub
mov
stos
jne
mov
mov
inc
imul
pop
pop
lcall
out
add
loopne
and
push
pop
mov
and
sub
mov
and
or
out
push
hlt
xchg
cld
push
push
sti
aam
sbb
dec
imul
insb
fnstsw
out
fiadds
test
lcall
mov
dec
mov
into
cltd
sub
out
sbb
call
stos
mov
or
push
xor
push
sbb
push
pop
adc
xor
ljmp
inc
mov
cmp
outsl
aam
inc
dec
dec
pop
insl
shll
imul
repnz
data16
push
jecxz
icebp
leave
mov
pop
lcall
int3
dec
lret
push
add
push
fcomps
lret
xchg
mov
pop
mov
pop
cmpsl
xchg
jmp
cmp
mov
adc
rcr
cs
shrl
fsubrs
leave
push
fsubs
mov
and
push
stos
adc
inc
lods
cmp
xlat
shrl
outsl
mov
xchg
sbb
out
das
cmp
xchg
in
push
cmp
mov
loope
push
les
jbe
aaa
mov
int
arpl
mov
stos
sbb
dec
inc
pop
add
arpl
push
lds
jae
push
scas
loopne
fistl
imul
daa
jae
pop
push
adc
xchg
jle
dec
inc
push
mov
cmpsb
mov
mov
mov
xor
mov
icebp
mov
lods
xor
xorb
mov
jge
lcall
mov
mov
inc
imul
pop
cltd
sbb
adc
push
cli
pop
xlat
stos
push
push
jecxz
fnstsw
dec
xor
cltd
sahf
mov
dec
mov
repz
sbb
je
xor
cmp
jbe
jle
popf
test
push
sub
or
xchg
loop
sbb
jno
je
pop
add
pushf
es
push
lock
out
or
jmp
mov
out
inc
dec
add
dec
inc
add
cmp
add
pop
mov
outsb
popf
lea
dec
imul
pop
push
ds
pop
jp
pop
ret
xchg
adc
sub
cmp
test
dec
out
imul
mov
mov
xor
call
in
rcrb
add
mov
in
sti
leave
mov
std
jle
lahf
and
lock
and
inc
jl
sbb
into
jl
test
inc
inc
sahf
and
shlb
xor
xor
mov
jb
jo
push
fwait
push
pusha
adc
jo
and
xchg
cmp
out
mov
pushl
add
call
inc
movsl
jl
pop
ret
sub
and
std
xor
add
cmp
dec
es
inc
dec
ret
dec
ds
mov
dec
jmp
cltd
xchg
daa
mov
xchg
imul
pusha
inc
push
xchg
popf
add
data16
or
inc
shr
xor
dec
mov
or
stc
ret
sub
xchg
jmp
sub
daa
fwait
jmp
sbb
mov
or
mov
fcmovnb
negb
hlt
cmc
lock
or
insl
inc
mov
xorb
mul
pop
mov
jno
or
lock
imul
and
mov
pop
cli
shrl
loope
add
sbb
cmp
in
jl
repnz
pop
pop
loopne
push
mov
xor
push
jb
addr16
adc
lret
push
push
call
inc
sahf
push
lds
xor
push
faddl
xor
xchg
lret
add
scas
lock
dec
pop
sbb
xchg
pop
idiv
mov
adc
arpl
movsl
add
lds
xchg
adc
inc
mov
xchg
movsb
rorb
jp
in
out
mov
push
ffree
sub
out
inc
fmuls
ficomps
ret
ljmp
insl
sbb
jno
or
pusha
mov
shlb
mov
xor
adc
gs
and
cmp
pusha
gs
bound
mov
add
or
sbb
inc
shr
sahf
mov
xor
shlb
xor
mov
and
xchg
hlt
jae
nop
and
hlt
aam
dec
cmpsl
or
jno
test
add
mov
adc
mov
mov
repz
xor
mov
sbb
pop
arpl
jmp
mov
push
scas
mov
cmp
sbb
mov
and
gs
out
xchg
test
shll
cwtl
cli
xor
push
ds
test
iret
jne
xor
dec
pusha
cwtl
mov
int3
mov
mov
rclb
loop
enter
mov
or
add
fdivs
xchg
add
mov
loopne
ljmp
jne
inc
xor
pop
xchg
cmpsl
xor
inc
xchg
cmp
loopne
lock
xchg
cmp
dec
lods
mov
inc
push
in
adc
adc
jg
mov
cmp
cmp
push
sbb
push
popa
pusha
mov
mov
cmpl
jns
jmp
lds
jb
sbb
add
push
cmpl
push
lea
fs
mov
push
test
daa
out
rcll
jp
xchg
jne
jb
xor
dec
inc
rclb
dec
adc
sahf
mov
pop
mov
sub
mov
cwtl
and
sbb
loop
xor
fcmovbe
pop
adc
bound
mov
push
push
mov
pop
stos
add
mov
mull
leave
daa
adc
add
loop
stos
push
xor
shr
fisttps
stos
test
nop/reserved
insb
mov
jne
sbb
mov
sub
cmc
push
out
idivl
in
inc
adc
adc
xchg
std
or
stc
nop
mov
sbb
cmp
xor
push
cmp
push
cs
xor
cmp
popa
cmc
ljmp
mov
aas
sarb
insb
push
sbb
sub
pop
inc
mov
jl
stc
push
or
cmovp
push
out
in
push
jl
icebp
gs
sub
cmc
cmp
sub
inc
clc
xor
les
jle
mov
decl
adc
inc
sbb
add
adc
lods
jecxz
lret
pop
sarb
ss
sti
pop
sub
inc
std
inc
mov
dec
mov
xchg
loopne
loop
das
mov
icebp
xchg
mov
adc
in
stc
out
cmp
cltd
cwtl
enter
cli
sti
in
jnp
inc
inc
fists
add
sbb
vpmacssdd
add
in
and
mov
sbb
mov
cli
adc
sbb
ss
addl
das
inc
std
in
pop
fstpt
rcrb
dec
scas
lock
in
push
loope
fwait
dec
push
mov
cmp
pop
inc
mov
mov
pop
shll
adc
sar
inc
cmp
pop
pop
movsb
dec
cltd
incb
xor
add
add
mov
mov
mov
inc
cli
inc
cmp
or
jno
mov
ds
sarl
jb
and
inc
idivb
cltd
mov
adc
mov
xchg
mov
inc
pop
xlat
sbb
test
sub
fucomip
jbe
sbb
je
movsb
icebp
fiadds
sbb
add
movsl
rorl
dec
shlb
les
push
lea
les
insb
andb
cltd
lret
jg
sbb
rclb
or
jno
daa
sub
test
lret
lret
adc
cli
adc
ljmp
sti
enter
sbb
cld
mov
xchg
mov
sbb
into
xchg
and
in
mov
jne
jb
jmp
add
mov
push
cmp
ret
mov
cmp
inc
enter
mov
fistpl
fcmovu
pop
pop
pop
cltd
xchg
pusha
xchg
xor
insl
jp
shl
xchg
cmp
mov
int
cmp
cmpsb
dec
add
idiv
xlat
std
mov
xor
jmp
jl
ss
mov
or
adcb
push
jns
nop
std
les
imul
sbb
fstl
icebp
mov
or
sub
inc
xchg
loope
insl
cmpsb
add
mov
mov
push
xchg
cli
pop
mov
xchg
mov
pop
push
add
mov
jg
add
add
clc
jl
mov
sub
add
cld
loopne
jae
push
mov
mov
sbbl
mov
leave
sub
cld
xchg
mov
and
popa
adc
inc
roll
add
lock
dec
sub
test
cwtl
sub
mov
jne
pop
add
fs
fdivs
or
mov
ret
arpl
push
sarb
adc
pop
popf
les
repz
insl
mov
or
mov
or
push
jge
mov
pop
frstor
pop
xchg
pushf
and
lcall
dec
repnz
pop
jge
std
inc
lret
mov
pop
mov
sahf
inc
add
pop
int
sbb
push
lods
jbe
xor
cs
test
in
mov
pusha
xchg
sbb
andl
mov
loopne
or
ss
xor
in
adc
pusha
adc
mov
jno
xchg
psubb
hlt
jb
les
shlb
and
sbb
cmp
fs
or
sahf
inc
push
xchg
out
cmp
fld
add
pop
mov
lcall
add
xorl
sbb
and
push
dec
mov
sbb
jmp
inc
adc
pop
iret
xor
out
pop
inc
and
movsb
dec
inc
test
sbb
loope
rorb
repz
pusha
xor
rclb
fcmovnu
push
mov
inc
inc
mov
or
jp
inc
lds
lret
mov
leave
stos
push
test
mov
lods
mov
jle
and
push
adc
add
fstl
jae
xchg
jo
ds
dec
pop
mov
cli
mov
outsl
je
mov
rorl
push
dec
mov
sub
int3
jns
or
add
rcrb
aaa
cmpsl
xor
lcall
sub
insl
movb
adc
inc
xor
sti
enter
int3
xchg
inc
add
add
pop
jo
xchg
aas
push
xor
dec
cmp
adc
loopne
insl
test
int
loope
or
push
ret
xor
pop
sub
push
push
pop
pop
in
dec
loopne
popl
xor
cltd
lret
xor
movsl
xor
xor
xchg
pop
scas
push
add
daa
rcll
ss
in
mov
add
or
insb
ret
xchg
add
sbb
mov
mov
or
pop
cmp
mov
enter
add
inc
aam
push
fldln2
cmp
and
fs
in
sub
jno
fisttpll
lods
inc
mov
bound
cmp
pushf
lods
mov
mov
and
es
jo
or
test
ret
mov
mov
and
cmp
jecxz
pop
test
push
or
nop
inc
dec
dec
push
rcl
int3
push
mov
cmp
mov
inc
or
stc
sub
jecxz
cmp
jle
adc
lods
shrb
or
push
nop
pop
in
push
fisubrl
sub
xor
fwait
mov
das
pop
ret
nop
dec
aad
out
lahf
movsb
adcl
clc
dec
jnp
or
call
inc
jle
dec
sub
inc
ficoms
mov
lock
mov
sub
cltd
jno
sub
xchg
lret
subb
dec
add
add
mov
rcl
shl
add
xlat
cld
jne
nop
scas
adc
add
mov
cld
adc
cs
pop
shrb
sbb
lcall
sti
push
pop
insb
clc
mov
orl
sbb
into
out
fs
notb
mov
mov
inc
je
push
fmull
add
add
push
or
addr16
mov
xchg
jle
cwtl
xor
cmp
je
or
inc
icebp
adc
cmp
lock
lock
cmc
rorb
sbb
loop
jge
dec
push
sbb
push
mov
stos
lret
xor
xor
mov
or
cmp
and
xlat
insb
or
popa
les
lcall
and
dec
or
mov
fstpt
inc
daa
fistps
or
push
dec
sub
push
xchg
mov
pop
negl
mov
leave
fs
mov
jp
mull
verw
mov
adc
and
mov
dec
sub
int3
pusha
syscall
dec
sti
jns
insb
inc
sbb
xchg
inc
or
xchg
icebp
pop
in
mov
cmp
dec
cmp
decl
mov
fwait
or
ljmp
mov
rol
jb
leave
push
ret
inc
rorl
mov
mov
xchg
pop
icebp
push
loop
jne
sub
aaa
icebp
sub
lahf
jbe
aam
mov
and
clc
xchg
mov
add
xchg
repz
clc
push
xchg
mov
add
clc
xchg
jno
imul
push
lahf
inc
mov
inc
orb
mov
insb
in
cwtl
sub
pusha
in
test
cltd
insl
add
iret
movsb
inc
and
sbb
test
sub
fnstsw
les
dec
fstp
and
sbb
cmp
shlb
jnp
jne
pop
ret
cmp
pop
movb
jo
stc
or
fsubs
repnz
push
mov
mov
in
ret
sub
mov
push
fwait
mov
adc
sbb
or
fistpl
sbb
push
mov
mov
test
shlb
lahf
fcompl
jnp
add
push
cmpsb
loopne
add
mov
xchg
loopne
cmc
loopne
or
stc
and
ror
mov
mov
add
in
jb
dec
clc
pop
hlt
inc
test
mov
and
jle
xor
pop
shl
mov
cltd
lods
lgs
cmp
daa
adc
bound
pop
and
in
in
jecxz
cmc
lods
fisubl
dec
ret
jno
jg
das
les
jbe
pop
js
cmpsb
dec
nop
repnz
rcrl
xchg
adc
mov
sbb
push
outsl
mov
xchg
cmp
jle
mov
ja
sbb
insl
push
daa
loope
pop
lock
sahf
stc
cmp
dec
mov
mov
jl
hlt
inc
push
aad
dec
incl
cld
sub
add
iret
popa
aas
pusha
test
icebp
clc
inc
shll
jge
stos
test
lds
xchg
addr16
xor
adc
iret
fstp
gs
es
repnz
sbb
and
jg
cwtl
cwtl
mov
aam
pop
add
adc
xchg
pop
loope
pop
sub
cmpsl
shl
mov
lods
cli
sahf
icebp
pop
addr16
js
adc
add
cmpsb
pop
dec
xor
xor
hlt
rcrb
jp
jns
cmpsb
or
repz
or
enter
imul
adc
xor
fsts
clc
xchg
mov
ret
add
ljmp
jge
add
add
xor
into
xchg
xchg
clc
jne
ret
push
and
jne
leave
fimull
stc
xchg
test
lods
push
movsb
rcrl
fwait
in
testl
ljmp
pop
inc
loopne
fimull
jbe
cwtl
shl
and
enter
xor
dec
pop
xchg
xor
sub
dec
std
push
xchg
mov
popf
lcall
adcb
imul
or
and
or
sbb
gs
cs
jno
test
inc
daa
pop
push
cmc
cmp
fcoml
push
or
and
sbb
sub
sahf
sbb
jl
je
adc
pop
cmpxchg
cmp
mov
sub
sbb
mov
fldenv
jb
mov
or
aaa
fnstcw
lret
test
stos
repnz
in
adcb
adc
and
lret
ret
mov
mov
push
xchg
xchg
xor
mov
aam
popf
mov
je
jns
daa
push
sbb
cmpb
push
cli
mov
sbb
cmp
out
add
jne
pop
mov
dec
fdivrl
push
cltd
clc
sub
adcl
addr16
sti
xchg
fidivs
add
xchg
or
sub
ja
adc
ds
cltd
inc
and
jo
stc
iret
mov
pop
scas
fdivl
or
icebp
cli
pop
aas
mov
jnp
xchg
mov
decl
in
inc
fldenv
mov
xor
mov
and
xchg
inc
andb
sahf
and
nop
push
push
push
sbb
xlat
loopne
cmp
adc
mov
xlat
sar
push
out
mov
mov
arpl
out
fisubs
negl
mov
jne
out
xchg
into
pop
imul
dec
repz
adc
mov
jle
mov
fnstsw
pop
jns
or
push
push
pop
and
test
jae
sub
inc
pop
ret
inc
and
push
mov
adc
add
mov
das
test
ljmp
xor
insl
push
dec
xorb
out
pop
cmp
jl
ret
push
mov
outsb
jp
sbb
xorl
pop
lret
jg
dec
pop
cltd
ljmp
mov
cmp
add
mov
loope
clc
aas
xchg
mov
bnd
xor
cli
xor
and
xchg
leave
mov
xchg
and
push
xchg
xchg
dec
sub
mov
cli
cmp
rorb
sbb
test
mov
incl
sub
addr16
mov
das
inc
jl
pop
les
cld
cmp
jbe
imul
je
xlat
and
adc
outsb
dec
bound
pusha
mov
das
jle
jne
lock
xchg
mov
and
sub
xchg
and
ret
mov
pop
popa
clc
mov
xchg
je
sub
push
popf
push
rorl
fcomi
xor
sti
xchg
push
or
mov
les
insl
aam
jo
dec
adc
aam
lret
ljmp
push
imul
std
lods
adcl
test
lahf
add
dec
aad
stos
mov
sub
jnp
gs
fnstsw
or
cmp
imul
fcomip
jnp
out
sub
xor
lcall
inc
add
dec
pop
scas
inc
or
mov
stc
jns
loopne
dec
sahf
les
ret
cwtl
add
mov
mov
cli
rep
cld
mov
push
sbb
or
ror
pop
and
pop
or
dec
insl
pop
mov
cltd
adc
jecxz
addl
in
imul
adc
xchg
xchg
dec
clc
pop
mov
sbb
xchg
pop
and
add
sub
sub
xor
scas
cmc
inc
test
ret
pop
orb
pop
mov
and
cmp
lret
int
popa
xchg
scas
test
push
mov
xor
outsl
mov
sbb
jg
push
or
dec
cld
rcl
stos
cmc
push
mov
mov
cmc
sbb
fiadds
cwtl
in
scas
aam
inc
sub
imul
imul
fmull
aad
repnz
jmp
inc
fsubl
xor
sub
or
sbb
add
xchg
in
jge
sub
mov
mov
mov
push
out
pop
je
ror
ss
jns
cs
popf
fs
jl
rolb
push
xchg
xor
or
in
dec
mov
jnp
in
jnp
sub
test
ret
cmpsl
ret
test
cmp
or
jae
sub
or
sbb
shl
lret
pop
dec
cmp
js
dec
inc
fnstcw
clc
xchg
cmp
mov
sbbb
mov
insb
xor
jecxz
jle
imul
loopne
mov
in
adc
insb
lds
inc
push
pushf
adc
mov
out
ret
dec
fadds
sbb
mov
std
xchg
imul
jns
add
addr16
jbe,pt
sub
push
in
dec
cli
into
js
fstl
or
repnz
scas
add
push
adc
cwtl
lret
mov
loop
sub
pop
js
fcmovu
sub
push
adc
aam
mov
push
loopne
adc
xorb
ss
shr
movsb
mov
pop
outsl
mov
mov
xlat
xor
cmpsb
jo
andb
fisttpll
pop
push
ret
testb
ljmp
jnp
add
shll
or
adc
pushl
and
adcl
cmc
push
rolb
test
push
mov
in
and
int
dec
sbb
jno
pop
cmc
pop
dec
lahf
scas
push
lahf
jge
loopne
jl
ljmp
sbb
xor
aaa
sbb
dec
cmp
jo
adc
add
mov
jns
pusha
arpl
xchg
roll
mov
fimull
xchg
rcrb
mov
xor
pop
popa
adc
push
mov
je
cs
jmp
dec
mov
mov
xor
in
outsb
pop
xor
or
jmp
pusha
cmp
test
jg
rcrl
xlat
push
inc
stos
stc
mov
fs
stos
lods
jmp
xchg
or
inc
or
inc
stos
adc
sub
jp
push
fidivrs
sbb
jae
xchg
repz
dec
js
insb
shlb
or
add
gs
xor
cmp
loope
fmuls
mov
jo
inc
test
dec
or
xlat
jo
pushf
push
dec
pop
pop
mov
xchg
jo
iret
xlat
std
jno
mov
stc
push
add
mov
out
add
movsb
in
test
fsubs
repnz
shl
add
jo
js
pop
cmpsb
ret
mov
insb
xchg
lock
mov
sbbb
push
fwait
push
test
cli
lret
push
xchg
cmp
add
dec
insl
scas
cmpsl
fiaddl
lret
push
iret
or
cpuid
imul
enter
subps
js
mov
ljmp
mov
or
pusha
fisubrs
insb
cmp
jp
test
jo
mov
push
inc
leave
mov
inc
mov
mov
sbbb
inc
lcall
stos
xor
decb
pop
std
repnz
push
insb
cld
notb
sub
inc
mov
addr16
test
push
jp
sub
dec
push
rolb
repz
popf
jmp
adc
or
xchg
sarl
das
lods
cmp
lea
push
jns
sbb
loopne
ss
jmp
pop
iret
les
pop
in
shll
js
xor
sbb
cwtl
les
cs
push
arpl
es
fisttpl
or
mov
xchg
and
in
jmp
into
xor
leave
gs
cld
adc
insl
popf
pop
cmp
cmpsb
push
fisubrl
sbb
xchg
mov
push
jo
inc
sbb
test
mov
call
fdivs
jmp
outsl
ret
hlt
lret
insb
leavew
mov
dec
adc
xor
dec
dec
rcll
xor
push
mov
out
in
in
push
pop
stos
and
cli
sbb
mov
mov
jns
add
xchg
cmpsb
push
inc
ret
incb
add
pop
add
push
fucomip
iret
clc
jle
and
jp
in
test
pop
cmpsl
dec
and
lcall
xchg
push
adc
pop
xlat
mov
fidivrl
call
movsb
sub
dec
inc
jno
fincstp
pop
xor
pop
sbb
lret
pop
fistpl
ret
jmp
mov
sbb
xchg
pushf
push
in
loopne
add
subl
cmpsl
subb
mov
ljmp
dec
push
sbbb
inc
cmp
aam
test
pushf
mov
outsb
fadd
and
dec
jae
fdivs
ljmp
sbb
push
fisttpl
push
sahf
adc
or
psrlw
and
adc
jns
mov
xchg
pop
and
cwtl
cmp
mov
dec
cmp
dec
movsl
test
pop
aad
mov
aad
stc
cwtl
movsl
mov
call
mov
icebp
push
clc
jcxz
lahf
sarb
mov
push
jne
push
add
inc
push
loope
cmp
adc
pop
dec
adc
add
add
and
dec
xor
sub
adc
and
hlt
fisttpl
pop
fcomps
add
pop
cmp
imul
sub
sbbb
addr16
pop
or
test
mov
pop
pop
js
dec
sub
pusha
sub
mov
mov
stc
cmc
mov
das
lods
or
push
cmp
in
out
cli
repnz
rcrb
push
fs
pop
push
push
jae
cmp
mov
shl
repnz
cmovno
std
mov
adc
inc
cmp
jbe
testl
sub
repz
cmp
lds
or
push
inc
pop
pop
mov
jge
and
jne
or
xchg
adc
aas
cmp
rolb
push
dec
sbb
push
aam
hlt
or
jno
adc
popf
je,pn
inc
divb
sub
mov
imul
stc
push
or
cmpsl
and
jnp
add
popf
cltd
stos
repnz
xor
mov
lahf
lods
ja
pop
mov
adc
inc
cmp
adc
loope
bound
add
sub
outsb
inc
imul
xchg
sub
xchg
sbb
lods
push
in
xchg
xor
ja
dec
mov
test
icebp
cwtl
push
mov
call
shr
jp
hlt
and
jp
xchg
imul
ret
inc
or
dec
adc
jmp
add
addr16
and
cmp
cmp
imul
aaa
fstpl
jbe
cld
sidtl
mov
in
mov
fcmovnu
ror
add
out
enter
leave
jbe
inc
push
xorl
fldenv
js
sub
and
aad
loop
adc
pop
std
lea
sub
add
jae
push
push
fists
mov
inc
cmp
orl
lahf
mov
pop
pop
sbb
call
movsl
lods
test
fiaddl
cmp
test
outsl
cmp
dec
movzwl
cmpsb
aas
add
mov
mov
and
jp
pop
fldenv
mov
xor
add
dec
fidivrs
inc
lock
movsl
out
sarl
push
cmp
movsl
pop
sub
dec
into
inc
xchg
jmp
pop
mov
fdivl
popa
aaa
add
push
out
adc
mov
rcll
xor
insl
cmp
xor
mov
aaa
repz
adc
or
sbb
imul
sbb
or
jno
mov
loopne
pop
or
daa
pop
mov
and
sub
push
fs
sbb
mov
pop
in
push
outsl
roll
cmp
jmp
fidivs
push
adc
addr16
pop
popf
icebp
and
inc
sbb
lods
ljmp
outsl
clc
mov
pop
addr16
add
repnz
loope
jg
mov
jle
mov
ja
test
or
and
mov
cli
add
jmp
fninit
dec
inc
cmp
sbb
and
mov
cmp
mov
or
mov
test
dec
pop
sbb
nop
sbbl
lahf
outsb
push
sar
and
push
mov
cmpsb
movb
jne
pop
jge
mov
dec
addr16
mov
icebp
and
mov
or
movntq
xchg
mov
inc
xchg
ds
dec
aad
xchg
mov
rcrb
xchg
push
sub
and
push
push
xchg
cwtl
clc
dec
pop
loop
ja
dec
push
in
fstps
inc
mov
rol
push
scas
jno
lahf
dec
fbstp
sbb
lods
add
jno
xchg
inc
out
pushf
inc
and
mov
aas
cli
cwtl
jbe
push
imul
pop
jecxz
jle
mov
xchg
pop
insl
in
aam
and
cmp
stos
lods
inc
popa
insb
insb
add
outsl
imul
orb
mov
pop
aaa
and
dec
les
out
and
jne
push
pop
fsub
inc
ljmp
jbe
pop
bound
je
jae
jle
add
movsl
scas
adc
ja
adc
sbb
fs
inc
popf
mov
mov
push
jae
outsl
fstpl
jmp
arpl
inc
push
jb
lods
xchg
mov
dec
out
mov
daa
divl
outsl
dec
dec
jmp
addr16
test
cmp
aaa
fsubs
xchg
cmpsl
cmpsb
lock
jo
mov
mov
fs
push
push
gs
ja
clts
lea
data16
pop
or
and
arpl
gs
int
mov
cmp
mov
sbb
mov
repz
leave
lret
xchg
jne
imul
rorb
mov
out
pop
cld
lock
mov
cmp
es
xor
mov
loope
pop
mov
xor
or
fs
add
outsb
scas
push
arpl
clc
outsl
into
jg
fcompl
sub
popa
fs
arpl
pop
testl
popa
or
cmp
adc
pop
mov
std
sbb
and
pop
scas
arpl
push
push
fdivs
unpckhps
outsb
jl
aaa
and
in
dec
ss
test
cmpl
int
ret
or
outsb
fs
stos
xchg
int3
mov
push
mov
negb
push
insl
bound
bound
arpl
fs
cs
scas
loopne
mov
fabs
mov
pusha
out
adc
test
fdivrs
loopne
push
push
scas
sub
jmp
sbb
daa
mov
mov
jo
ss
idivb
adc
adc
adc
je
ss
decl
push
mov
lock
je
push
pop
sub
scas
dec
movsb
aam
cltd
lea
inc
mov
mov
add
daa
adc
jg
cmpb
sbb
or
mov
sbb
xchg
in
aad
adc
inc
xor
mov
pop
enter
push
push
or
movb
sbb
and
mov
jbe
mov
add
outsl
cmp
adc
sbb
notl
adc
pop
inc
mov
jbe
add
daa
and
add
daa
dec
mov
push
inc
push
ss
shrb
push
xor
xchg
xchg
shll
enter
adc
xor
jne
lahf
push
ja
loop
push
in
adc
mov
outsl
mov
xor
test
xchg
mov
xchg
cwtl
cmp
outsb
push
out
mov
cli
push
bound
xlat
into
xchg
sahf
push
adc
push
imul
sarb
mov
ret
mov
test
inc
sub
repnz
lcall
sbb
inc
inc
mov
test
xchg
xlat
jl
add
lret
iret
data16
arpl
mov
and
dec
jno
scas
sbb
aam
jge
mov
leave
aaa
mov
ficomps
daa
imul
popa
sbb
adc
mov
inc
outsl
jnp,pn
sbb
into
arpl
loope
sbb
test
add
idiv
fildll
add
cmpsb
sar
es
je
aaa
in
cmpsl
inc
fwait
ljmp
aaa
or
jmp
enter
repz
sub
mov
mov
cli
push
jp
adc
ljmp
stc
jmp
clc
in
cld
sbb
cltd
fsub
lock
int
lods
aad
jg
sbb
aad
sti
jmp
das
out
ljmp
stos
stos
cltd
popa
fmul
push
repnz
in
sti
imul
sub
mov
data16
aad
lea
lret
rol
jmp
xor
lahf
sub
mov
mov
dec
add
and
inc
push
jle
push
mov
bound
xor
negl
in
xchg
fisubl
mov
outsb
cld
outsb
push
aaa
sub
fwait
cmp
push
push
ljmp
or
outsb
add
dec
repnz
mov
pusha
or
out
daa
imul
dec
or
jns
lds
push
inc
fcmovnu
notl
fistpll
div
jne
jmp
sub
out
ljmp
xor
pop
jno
dec
aas
jbe
push
dec
nop
sub
jecxz
jmp
xchg
jno
cmc
xchg
push
xchg
rcrl
push
jg
and
xor
push
jg
cld
cli
outsb
addr16
mov
push
std
and
cltd
inc
popa
out
movsb
int
push
enter
rep
leave
mov
sub
stos
imul
jg
out
sub
outsb
jo
sbb
aaa
gs
movaps
insl
movl
or
inc
xor
lcall
jl
xchg
iret
jl
jo
test
dec
shl
mov
repnz
outsl
outsl
fdivs
dec
outsb
push
add
jo
inc
xor
inc
repz
xchg
ss
out
test
dec
mov
push
sub
xchg
movsb
fistps
xor
fbld
jae
test
cld
and
mov
in
add
pop
adc
push
lret
sub
aad
jne
mov
mov
add
scas
fcmovnu
fcompl
mov
or
jp
cmp
loope
idivl
popa
mov
pop
lods
add
pop
fistpll
arpl
js
push
es
test
rolb
pushf
cltd
popa
iret
push
push
mov
addl
dec
in
cs
outsl
sbb
and
cmp
dec
mov
jle
mov
stos
mov
mov
lods
les
fwait
xchg
sbb
add
push
addr16
fnstsw
bound
dec
mov
test
ljmp
lock
stc
mov
adc
lods
frstor
inc
xchg
std
jb
les
sub
imul
jnp
mov
sbbl
shll
nop
mov
and
jl
testb
mov
jp
add
mov
imul
lock
jg
pop
pop
lcall
movsl
enter
subl
fstpt
mov
fwait
dec
lret
jno
pusha
pop
test
mov
or
dec
inc
dec
dec
add
dec
push
pop
stos
pcmpgtd
mul
mov
addr16
jne
sbb
dec
out
fdivrs
xchg
mov
cld
lret
xchg
mov
jmp
xor
pop
fcoms
fildl
cmpsl
inc
cmc
into
leave
ret
lea
xor
lods
inc
lea
cmp
repz
mov
xor
pushw
lods
fmuls
mov
in
inc
inc
addb
dec
dec
cmp
push
push
push
push
push
filds
rcrl
popa
bound
gs
imul
aas
mov
pop
dec
ja
jns
pop
orl
ss
cmp
sub
xor
push
xchg
fcomps
scas
or
test
cmp
or
orb
fxch
std
bound
inc
mov
movsb
pop
fimull
cmp
lea
cmp
sti
testb
mov
std
rep
pop
xor
push
add
call
pop
leave
mov
and
mov
push
push
push
std
fwait
jl
sub
dec
iret
fstl
adc
inc
loop
xchg
rclb
and
inc
loop
xchg
mov
xchg
xlat
xor
faddl
jo
mov
call
mov
mov
mov
mov
mov
add
movsb
mov
cmp
rorb
sub
jg
dec
xor
in
jmp
mov
lret
loope
mov
mov
push
push
sbb
jp
or
imul
pushw
dec
adc
stos
pop
and
jmp
mov
mov
mov
fcompp
mov
inc
inc
into
jne
sbb
cmp
and
loope
and
mov
and
cmp
call
sbb
out
les
lahf
sub
call
out
stc
fwait
cmp
mov
scas
shlb
fnstenv
sbbb
xor
mov
fadd
pop
mov
arpl
test
js
dec
jo
lret
lods
out
sti
inc
mov
sbb
out
gs
mov
or
adc
pop
and
push
dec
jp
mov
leave
fs
mov
fists
jecxz
xchg
leave
lcall
jns
cwtl
and
sbb
in
xor
jge
scas
xchg
pushf
jl
das
inc
in
test
inc
pop
dec
xor
xor
pop
fstpl
dec
sub
dec
stos
pop
ror
leave
js
leave
jb
pop
scas
pop
imul
sar
subb
cli
scas
mov
pop
mov
pop
into
lock
cmp
scas
xchg
lock
sub
ja
jmp
push
adc
fimuls
mov
and
das
or
sub
insb
aam
adc
and
imul
adc
call
imul
mov
sub
add
mov
adc
cld
inc
notl
sbb
inc
cmpsl
cmp
rorb
xchg
loopne
test
stc
or
scas
cmc
gs
leave
popa
adc
adc
int3
sahf
mov
andl
cmp
fbstp
arpl
iret
mov
push
and
jno
jns
xor
pcmpgtw
xor
insb
inc
insl
adc
ja
xchg
cmpsb
inc
add
out
lgs
mov
xor
cmp
lahf
mov
shll
je
dec
inc
repz
cmp
ds
inc
in
std
and
test
cmp
jl
mov
cld
or
push
cmp
inc
data16
cmp
adc
inc
xor
gs
add
mov
lahf
call
pusha
mov
cltd
adc
insl
push
not
sub
sbb
mov
mov
pop
xchg
shll
ja
xor
xor
and
or
inc
testl
outsl
pop
jg
jp
rcll
call
cmp
push
repz
dec
mov
insl
fisubrl
inc
or
sub
shlb
or
push
jl
idiv
bound
add
push
shll
jae,pt
ficompl
pop
xchg
sbb
ret
push
xchg
cmc
lods
scas
lods
mov
mov
push
aas
inc
sbb
ret
mov
mov
push
push
xchg
jg
fisttpll
les
int
sub
aas
mov
mov
xchg
scas
mov
lods
push
icebp
inc
xor
outsl
pushf
scas
test
dec
push
insb
enter
shlb
fwait
mov
xor
addl
test
push
push
cmpsl
arpl
mov
js
or
aaa
jo
xor
jecxz
nop
lret
sarb
ljmp
addr16
inc
movsb
jae
add
inc
adc
sub
rol
inc
xchg
inc
mov
enter
nop
daa
and
jbe
jbe
push
mov
mov
icebp
push
sub
loopne,pn
xchg
shll
xor
ljmp
sub
mov
nop
out
popf
sub
jg
fisubrs
in
push
pop
mov
mov
out
dec
push
aad
dec
fistps
out
or
push
sahf
imul
jbe
lea
cmp
jae
insl
popa
jo
pop
add
fidivs
pop
das
adcb
cld
cli
das
and
add
or
push
orl
push
scas
mov
hlt
inc
dec
cs
inc
mov
je
outsb
push
and
into
mov
mov
add
insb
mov
imul
inc
inc
repnz
adc
inc
addr16
ror
popf
pop
xchg
pushf
hlt
mov
mov
push
adc
adc
add
push
mov
scas
inc
loop
nop
call
movsl
push
scas
int3
dec
xor
sbb
xchg
mov
mov
pop
bound
jmp
adc
insb
rep
sub
and
sbb
adc
test
pop
mov
repz
dec
movsb
and
daa
cmp
imul
inc
and
loopne
jge
or
fsubrl
sub
cmp
inc
xchg
cs
or
out
mov
fistpll
out
lods
fnstsw
arpl
inc
mov
daa
or
imulb
rorl
ds
dec
sahf
popa
xlat
pop
out
sbb
dec
bound
push
push
addr16
nop
orl
stc
aad
movsl
push
add
xchg
or
jnp
ret
push
add
and
scas
pop
adc
xor
aas
add
lea
stos
jmp
push
and
shl
mov
cltd
adc
popa
adcl
mov
imul
and
push
jle
add
xor
mov
or
pusha
in
pop
cltd
inc
xor
xchg
inc
xchg
pop
decl
push
call
sub
cmp
rclb
fwait
test
pop
jge
pop
pop
gs
xchg
pop
insb
aas
hlt
mov
xchg
scas
mov
rcl
pop
xlat
scas
shll
repz
sti
packssdw
jg
jo
mov
adc
inc
sahf
aaa
cld
adc
stos
pop
cmpsb
jmp
icebp
enter
jnp
test
mov
clc
stos
pop
sub
cmp
incb
mov
pop
mov
lods
or
push
repnz
pop
sbb
leave
arpl
ljmp
je
aaa
dec
dec
push
rolb
fcoms
imul
cmpsb
add
stos
aas
sbb
jl
or
jmp
in
push
jno
stc
xor
imul
or
dec
or
mov
cmc
fnstsw
mov
jge
cmp
dec
sbb
outsb
push
mov
inc
outsl
or
mov
outsb
imul
rcr
out
push
lahf
or
pop
mov
out
sbbl
test
mov
push
movsl
sbb
adc
popa
sub
xchg
adc
fstpt
lods
test
in
and
aaa
ret
sbb
out
std
lock
add
add
hlt
cmc
dec
movsb
in
xor
lock
fs
negb
and
outsl
je
jae
mov
inc
addb
mov
mov
mov
add
push
cld
mov
shll
fcom
xor
shll
sarb
clc
rcrb
mov
rcpps
dec
or
cld
xor
sar
sldt
add
pop
pop
sarl
mov
insb
sbbl
cmp
jecxz
pop
insb
adc
jo
push
mov
push
aad
loopne
lds
cmp
test
cld
pop
push
popa
mov
loop
dec
and
add
fs
into
out
daa
fcmovne
cld
fmul
push
adc
xchg
sbb
movsl
pop
xor
das
pop
jbe
rcrb
leave
rcr
pop
in
lock
add
xchg
sub
hlt
mov
mov
pop
pop
into
add
adcl
lds
sbb
aas
jae
mov
stos
add
fists
add
pop
jb
fs
adc
adc
or
fs
mov
push
out
mov
aaa
out
xchg
lds
cmp
xchg
and
cmp
or
inc
sbb
xor
cmc
jo
js
iret
mov
jge
push
pop
imul
push
add
push
mov
popa
cmp
and
shrl
ss
shlb
push
or
orl
push
add
dec
dec
inc
mov
int3
scas
or
lock
jno
sbb
cmpsb
inc
push
cmp
push
add
add
mov
push
pop
cwtl
fstpl
pop
pop
cmp
out
int3
add
sbb
add
test
xor
add
aas
rcl
sub
add
inc
pop
xor
jne
jb
cmp
ja
outsl
in
iret
dec
mov
jno
pop
gs
sub
loopne
iret
mov
movsb
adc
xchg
insb
fbstp
xorl
in
mov
jno
clc
sub
ds
out
jo
mov
fs
mov
mov
xor
sbb
or
out
outsb
jns
pop
addr16
xor
xor
add
imul
jns
lods
push
arpl
or
jp
std
loope
xor
jg
mov
in
cmpsl
xor
lahf
mov
test
repnz
dec
pop
jno
stc
mov
fcompl
add
outsl
and
cmp
imul
jo
bound
es
xchg
fisubrl
insb
divl
mov
and
insl
bound
push
std
push
dec
dec
jp
stc
jns
mov
push
popa
pop
ret
add
mov
orl
test
popa
loop
add
and
fbstp
shll
or
dec
cmp
daa
pop
push
lret
lahf
mov
ror
jle
dec
pushl
sahf
and
js
cmp
sbb
rorb
outsl
mov
xor
andb
sbb
out
sbb
and
pop
fcomps
adcl
or
aaa
adc
jbe
hlt
cmp
cmpsl
xor
push
xchg
jl
xchg
pop
pop
xchg
push
cmp
int
xchg
in
jb
and
repnz
jmp
gs
mov
iret
mov
dec
outsb
lret
xlat
aas
ret
adc
addr16
pop
mov
dec
mov
pop
push
add
fwait
jg
add
mov
out
lods
fadd
mov
fnsave
call
and
hlt
lret
push
insl
xor
movsb
in
mov
stos
cmp
int3
mov
test
mov
push
sahf
sub
scas
outsl
and
add
les
inc
popa
test
sub
stos
or
int
fiadds
sbb
imul
xchg
or
cs
push
ds
jg
pop
lock
aad
mov
insb
xchg
push
hlt
daa
push
jb
imul
dec
adc
cmpsb
and
sub
ja
add
mov
and
adc
mov
pop
push
lods
sahf
sbb
xor
dec
popa
js
push
jmp
push
add
daa
push
jno
adc
sbb
push
pop
adc
movsl
cmpsb
push
lods
mov
adc
xor
popf
adc
sti
daa
mov
stos
out
test
mov
movsb
sub
sbb
add
pusha
pop
pop
push
sub
mov
xor
insb
jne
sbbl
mov
sbb
sbb
inc
shrl
adc
jge
mov
push
push
scas
lret
outsb
or
inc
cmp
push
lahf
mov
and
add
or
nop
mov
sbb
add
movsl
cmpsl
and
adc
xchg
sbb
mov
pop
aad
cltd
addr16
pop
popa
push
fdivr
rorb
sbb
jae
inc
adc
sarl
cmc
or
mov
xor
fildll
pushf
or
inc
sub
pop
or
xchg
pop
inc
fldt
nop
dec
add
dec
arpl
ficompl
xor
sbb
jns
cmp
enter
outsb
rorb
and
push
push
xor
clc
cmpsb
ficompl
mov
dec
mov
pop
cmp
testb
pop
push
loopne
sub
push
or
push
popa
out
negl
add
fsubrs
enter
add
mov
stos
rorl
cmp
int
stos
popa
je
mov
jno
xchg
xchg
scas
mov
sub
scas
dec
push
dec
movsb
pop
shlb
pushf
mov
inc
out
mov
sarl
insb
add
out
cs
inc
ja
scas
fdiv
pop
mulb
subb
addr16
xchg
push
test
push
and
push
push
aaa
add
cmpl
testb
aam
mov
aam
popa
jns
and
shlb
or
mov
dec
pop
inc
lock
jns
dec
cmpsl
push
mov
jns
inc
inc
lock
dec
sarl
add
cwtl
int
pop
jecxz
pop
xor
pop
xchg
dec
fs
mov
pop
rclb
imul
decl
popf
jbe
cltd
push
das
dec
lea
leave
bound
pop
daa
ja
and
dec
pop
mov
clc
add
pop
cmpsb
dec
pop
outsb
mov
rolb
aas
xchg
mov
pop
xor
enter
jecxz
clc
sub
pop
notl
dec
divl
pop
sbb
inc
aas
mov
xlat
xor
sub
data16
mov
arpl
cs
mov
ds
jo
lods
imulb
sbb
bound
aaa
scas
faddl
ret
cs
mov
pop
mov
pop
cmc
sti
addr16
popf
outsb
dec
je
xlat
push
add
mov
xchg
mov
xchg
cwtl
cmpl
les
arpl
fists
xor
mov
dec
mov
lret
mov
push
or
xlat
shrb
sbb
push
jno
jl
sbb
inc
or
mov
xor
pop
nop
xor
pop
or
xchg
repz
jbe
fmuls
test
and
icebp
pop
jle
mov
or
mov
add
inc
imul
pop
ret
pushf
cmp
xor
les
in
dec
xor
dec
cs
aas
aad
inc
lock
out
push
fistps
ret
enter
or
mov
testl
mov
dec
stc
xchg
pop
mov
mov
dec
xor
dec
jmp
mov
and
xor
arpl
or
cmc
jle
sub
call
adc
sbb
pop
ja
sbb
push
pop
cmpsl
aaa
outsl
ja
dec
lods
sbb
xor
xchg
das
dec
in
mov
inc
xchg
cmpl
mov
push
or
dec
fisubrl
testb
fwait
scas
std
xor
or
xchg
in
pushf
add
xchg
int3
adc
mov
out
roll
adcb
mov
subl
mov
jle
cmpsl
repz
pop
xor
add
sbb
pop
movzwl
rolb
daa
add
subb
cmp
into
or
push
addr16
or
adc
push
stc
pop
les
fstpl
in
rclb
imull
sub
jle
lods
das
outsb
xchg
rcl
cmp
ret
dec
xchg
jne
imul
add
daa
and
or
notb
and
pusha
add
add
push
sub
add
aaa
inc
iret
pop
and
mov
inc
xchg
cmp
aam
jbe
insl
test
inc
push
cwtl
stos
mov
and
pushf
or
cmpsb
dec
addr16
out
add
fs
scas
mov
add
ud1
and
mov
loope
ret
mov
stos
adc
adc
push
and
jl
je
movsb
push
sbb
out
inc
fistps
sub
ja
repnz
xchg
or
xor
cmp
outsb
and
mov
fcomp
rcrb
or
insb
lods
push
sub
jne
xor
xchg
lock
lret
ljmp
jl
vsqrtss
subl
push
test
or
push
push
outsb
xchg
mov
xchg
ja
add
outsb
movsb
add
add
inc
sub
out
mov
insb
popf
insl
dec
cmp
mov
lahf
aas
jl
adcl
popa
mov
pusha
addr16
outsl
lea
xor
xorl
adc
cmpsb
adc
scas
push
in
fwait
ljmp
outsb
movsb
ss
cmpsl
inc
mov
movsl
test
js
fsubrl
add
jmp
add
push
andl
xor
pop
jmp
test
push
orb
lcall
xor
jno
and
mov
sbb
push
lahf
mov
gs
stos
cmp
and
jp
push
inc
sub
icebp
hlt
lock
dec
andl
and
and
outsb
rcr
pop
mov
adc
ja
ljmp
inc
and
xchg
adc
in
push
xor
jmp
push
jecxz
mov
movsb
in
in
decb
ss
or
adc
test
dec
push
mov
es
roll
std
add
mov
jl
xor
and
sub
ja
and
and
loop
popa
mov
subb
mov
outsb
test
adcl
mov
xlat
pop
fcomps
add
sbb
data16
pushf
jns
js
push
notb
push
xchg
por
mov
outsb
jns
stc
xor
ds
lcall
inc
add
lcall
sbb
adcb
push
adc
mulb
inc
mov
insb
imul
les
fidivrs
out
cmc
inc
mov
shr
xchg
inc
xchg
ret
adc
sub
testl
rclb
cmp
pop
fs
or
sarl
js
test
sbb
int3
adc
pop
pop
ror
and
pop
cs
jp
mull
and
subb
sub
je
dec
and
add
or
fs
sahf
sbb
jge
dec
fnstenv
mov
jmp
jno
cmp
mov
imul
cwtl
into
pop
pop
sbb
roll
and
popa
cmp
ds
inc
das
ucomiss
jg
sub
and
push
mov
insl
mov
inc
push
inc
mov
dec
test
push
lods
inc
push
dec
fimuls
pop
mov
xchg
adc
xor
call
std
pop
xor
sti
rcrb
sti
adc
inc
mov
cmpl
cvtps2pi
rcll
sbb
addr16
aad
fcmovb
mov
mov
xor
inc
js
dec
popa
andl
adc
xor
or
mov
cwtl
jne
dec
test
js
cli
call
adc
test
mov
inc
movsb
in
arpl
cmp
rcrb
test
test
imul
daa
fbstp
jle
adc
push
jl
add
cld
mov
adc
pop
je
add
dec
push
popl
insl
mov
lds
dec
push
jl
xchg
dec
int
jmp
in
mov
outsb
imul
popa
xor
dec
cmp
inc
subb
and
xor
xor
in
sub
mov
lret
push
mov
push
insb
adcb
push
insb
sti
aam
push
iret
xchg
and
and
outsb
jp
dec
sarl
mov
add
test
push
bound
mov
scas
mov
ss
test
jg
jbe
xchg
mov
pop
jne
push
sahf
push
push
scas
popa
lret
fstl
xchg
push
loop
test
mov
jmp
inc
mov
std
mov
nop
lods
cmp
jbe
dec
imul
jae
cmpsb
outsb
cli
xchg
in
jb
leave
shrl
cmpsb
lods
jnp
sub
push
movb
insl
pop
mov
add
cmp
sbb
adc
lods
loop
mov
pop
push
push
aas
ljmp
add
repz
xchg
and
sbb
data16
pop
mov
add
ficoml
das
inc
jp
insb
rolb
ret
lds
add
rorl
or
repz
lea
sub
idivb
inc
pop
outsb
jmp
notl
cmc
int3
std
jne
out
in
pushw
cmpsb
out
and
pushf
jl
fldz
mov
iret
idiv
add
test
loope
es
pop
cmp
addr16
or
dec
cli
mov
or
int
ljmp
lahf
dec
les
fiadds
lahf
insl
sub
fcomp
lret
push
jl
jle
mov
cmpsl
dec
in
cmp
push
sub
dec
idiv
xchg
jnp
out
test
cmpsb
or
stos
push
inc
out
push
push
mov
mov
arpl
in
jne
dec
sbb
ret
inc
adc
rorb
jl
dec
es
loope
scas
arpl
xor
imul
inc
pop
dec
dec
inc
cmpb
mov
rorl
jae
inc
cmpsb
dec
mov
in
fistpl
ljmp
jns
shlb
stos
nop
dec
jge
or
fmul
insb
rorb
or
mov
push
lea
or
call
dec
aas
adc
cmp
jecxz
mov
ficoms
pop
cmp
scas
repnz
jmp
push
lods
jae
gs
mov
dec
stos
dec
dec
aas
mov
inc
out
xchg
dec
xchg
or
movsb
daa
icebp
dec
aas
inc
loop
cs
jne
mov
and
jae
sub
jle
sbb
sbb
out
jl
mov
shl
js
out
push
xor
or
push
push
mov
loop
sbb
mov
sbb
mov
jb
lea
add
mov
adc
sub
and
xor
outsb
jae
lahf
data16
loope
test
cmp
xor
pop
std
out
lcall
xor
std
and
into
in
xor
les
sbb
adc
ljmp
inc
fnstsw
rcrb
push
push
jmp
lods
aad
loope
mov
hlt
mov
and
and
clc
insb
pusha
add
data16
leave
jecxz
pop
xorb
jne
aas
and
clc
mov
pop
addr16
jbe
mov
aam
sub
pop
mov
xor
lods
and
jno
mov
pop
das
leave
lret
cli
rorb
jl
cmp
outsb
cmc
push
push
popa
mov
pop
jle
pop
inc
stos
jno
jecxz
and
xor
icebp
mov
or
test
mov
out
loope
adc
mov
insl
mov
or
insb
popa
das
xor
pop
sub
xorl
enter
pop
mov
xor
in
les
mov
pusha
outsl
fsubs
ss
mov
pop
add
push
add
iret
pop
outsl
and
inc
gs
and
mov
mov
adcb
xchg
mov
daa
push
push
sub
pop
adc
jb
ret
sub
add
adc
pushf
xchg
push
pop
xor
push
adc
fmuls
fwait
je
cmp
ret
cmp
orl
pop
mov
aas
rol
mov
outsl
inc
inc
bound
xor
xor
out
scas
push
xchg
lret
sbb
or
insl
add
sbb
xor
mov
adc
sbb
sti
push
ja
sbb
fidivrs
imul
inc
pop
sub
neg
stos
mov
mov
cli
aas
pop
add
dec
and
mov
dec
negb
sbb
dec
jae
push
notb
jl
jecxz
mov
shl
sub
insl
sbb
add
pusha
out
loop
jb
cmp
and
jge
or
int
daa
dec
lock
add
or
es
jne
inc
mov
es
push
push
popa
jo
push
inc
add
mov
outsb
aas
mov
xor
pop
inc
rorb
sbb
push
mov
cmpsb
ss
sbb
push
or
cli
mov
xchg
loope
push
push
rol
sbb
jge
inc
jl
fbstp
scas
push
les
arpl
jb
enter
stc
inc
or
dec
jb
xchg
testb
dec
or
adc
rorb
push
sbb
pop
pop
rcr
or
pop
inc
jae
psrld
add
leave
push
out
push
sub
xlat
jae
jo
xchg
mov
or
cmp
xor
fidivl
cmp
jo
and
sbb
inc
jg
inc
test
or
fcoms
popf
hlt
push
outsl
sub
sbb
cmpb
rcrl
int
stc
sub
push
repnz
lahf
push
jae
mov
ja
out
mov
xor
lea
negl
inc
cmp
cwtl
addl
data16
mov
sbb
pop
dec
cli
leave
leave
aas
xchg
jmp
xchg
adc
imul
push
and
sub
push
insl
call
and
push
scas
inc
push
adc
ficompl
jnp
sbb
cmp
jle
or
into
or
adc
clc
pop
pop
icebp
mov
or
mov
je
add
rclb
or
sub
mov
cmc
out
notl
mov
pop
js
je
xchg
outsb
or
outsl
mov
ja
lret
sbb
mov
add
push
jnp
icebp
ss
dec
or
mov
ret
lds
arpl
and
and
push
dec
inc
fwait
push
pop
pop
xchg
test
in
push
jae
lock
adc
jns
insb
imul
pop
xchg
ret
xor
cmpsb
mov
inc
test
adcb
repnz
fcmovnbe
or
pop
sub
cs
sbb
in
test
mov
cwtl
or
test
out
sbb
and
cmpsb
sub
mov
inc
fnstenv
mov
or
movsb
jmp
mov
sub
pusha
jno
and
cmpsl
fidivl
push
jae
dec
jbe
push
xor
or
jb
cld
or
xor
out
loopne
sub
xchg
inc
push
js
ljmp
sarl
std
dec
pop
mov
push
fs
mov
aaa
cmp
mov
jns
nop
sub
cmc
in
mov
fstps
cld
xchg
movb
inc
sar
push
xor
sbb
adc
lds
mov
inc
dec
push
pop
in
pop
movsl
sahf
xchg
imulb
or
cltd
stos
xchg
lret
pop
jae
jbe
loope
push
inc
dec
push
xor
fildll
pop
adc
je
incb
inc
fstpt
aas
inc
inc
test
movsl
mov
push
or
push
das
and
std
inc
ret
and
fsubrs
mov
das
xor
mov
xchg
add
je
getsec
fiaddl
cld
out
out
mov
sub
lahf
sbb
loop
xor
stc
lcall
jmp
movsb
xchg
addr16
pop
iret
pop
sub
dec
cmpxchg
mov
ja
xchg
or
and
mov
loope
adc
dec
jo
pushf
bound
pop
push
sti
push
ficoms
mov
dec
cmpsb
cs
imul
popf
lcall
jge
jne
pop
out
test
cmc
mov
mov
inc
cmp
fsubr
mov
rolb
dec
aam
imul
aaa
daa
pop
adc
sub
lcall
cmp
adc
inc
fcom
aaa
xor
pop
fisubs
fbstp
cmp
aas
aam
pop
or
das
jo
js
pop
fisubs
ja
ja
pop
push
add
mov
inc
xor
pop
aam
loopne
movsl
lods
lret
insb
scas
out
sahf
jns
in
je
add
add
std
call
push
cmp
pop
dec
arpl
dec
jae
lods
insl
test
add
nop
jp
cmp
mov
cmpsl
insl
imul
dec
cltd
cld
inc
and
addb
fcompl
mov
lods
int
pop
dec
repnz
dec
and
adc
cmpl
cmp
lret
shlb
push
and
inc
mov
xor
or
xchg
and
and
and
jo
add
std
sbb
int3
mov
adc
ja
js
inc
xchg
add
movups
adc
repnz
xchg
sbb
arpl
scas
mov
mov
andb
push
ss
lods
es
in
dec
pop
outsl
fdiv
fwait
or
push
or
sbb
jg
pop
lret
aad
mov
cmpsb
lcall
into
sub
outsl
adc
jg
leave
mov
out
fdivl
inc
adc
sets
add
inc
add
dec
xchg
add
sbb
fiaddl
inc
mov
or
adc
xor
ljmp
jle
mov
jl
sub
notl
insb
jg
test
sbb
add
psubd
sarl
scas
xor
pop
ljmp
dec
cwtl
mov
dec
call
mov
gs
je
outsb
inc
jb
arpl
cmc
loop
pop
addb
out
cmp
or
mov
aam
movb
pop
dec
jne
mov
pop
add
ret
add
jb
sahf
mov
mov
cwtl
int3
jb
cld
hlt
mov
push
push
je
arpl
xor
insl
addr16
sub
sbb
ss
pop
test
pop
cmp
add
fnstenv
mov
xchg
popa
fmuls
scas
pop
loopne
repz
mov
movsl
loope
inc
xor
icebp
inc
xchg
insl
push
pop
and
jmp
popa
in
lcall
lret
jbe
jge
jno
fwait
repnz
clc
cmp
push
push
xchg
mov
or
icebp
movsl
call
mov
negb
lods
mov
pop
and
inc
inc
jmp
push
jmp
cmova
pop
xchg
inc
dec
inc
ss
lret
imul
std
mov
dec
jb
sub
xor
or
shlb
pop
inc
xchg
add
push
repnz
js,pn
idivl
xchg
mov
orl
test
pop
negl
psrlq
outsb
sti
push
inc
dec
inc
sub
es
jg
je
push
nop
jecxz
add
testb
in
imul
push
push
and
xchg
adc
aas
rclb
jg
cmp
mov
mov
and
je
mov
adc
aas
mov
js
lret
mov
dec
jge
mov
dec
test
sahf
jge
je
xor
cwtl
sbb
scas
dec
xchg
movsb
and
mov
clc
es
bound
cli
dec
test
aam
jge
stc
hlt
negb
push
aaa
push
in
or
adcl
cmp
push
dec
loope
movsl
nop
push
jg
lea
loope
andl
jge
mov
push
js
adc
xchg
pusha
xchg
dec
or
jg
cmp
ds
cld
ljmp
lods
adc
addr16
xchg
loope
lods
cmp
inc
gs
lods
fcmovne
pushl
decl
fistpll
es
inc
dec
pop
cltd
or
lea
jg
fidivrs
adc
fiadds
cmp
push
ret
and
add
ret
lret
inc
push
pusha
dec
xchg
jmp
js
mov
dec
pop
inc
stc
mov
cmpsl
lret
pushf
sub
xor
xchg
lahf
loope
aam
jne
clc
bound
and
dec
sbb
mov
aas
pop
fsts
fidivrl
mov
sub
test
push
xor
dec
jbe
mov
icebp
mov
sub
jmp
shll
add
or
xchg
les
mov
jno
and
into
cmp
or
loopne
or
fwait
orb
sbb
sbb
and
xchg
sub
ret
ljmp
subb
pushw
push
dec
push
inc
loop
in
and
pop
inc
add
adc
or
cmp
imul
dec
dec
aam
or
mov
cmp
mov
inc
dec
aad
popf
push
or
pop
adc
test
mov
jnp
insl
xor
sub
cld
dec
sub
add
sbb
xchg
pop
imul
push
dec
jmp
fwait
call
in
adc
clc
into
je
sbb
xor
xchg
push
push
lea
sbb
sbb
ret
push
xor
popl
jle
fisttpll
rcl
das
pop
jns
dec
stos
mov
mov
fstpt
xor
fsubl
popf
lods
xor
movsbl
rorb
or
lret
or
out
jg
rcr
adc
arpl
in
pop
sbb
fisttpll
and
das
add
ret
jne
sub
push
movsb
pop
inc
inc
cmp
push
scas
add
add
pop
add
sbb
inc
inc
or
or
xor
inc
jl
notb
add
xchg
mov
sbb
decl
adc
imull
sbb
sahf
push
adc
lock
lea
jle
adc
cmp
jns
dec
adc
fidivrl
mov
cmp
call
pop
test
cli
push
lods
jns
mov
repnz
test
ret
inc
das
cmp
mov
pop
adc
dec
jge
push
outsl
je
mov
ffree
mov
jnp
mov
sub
shll
mov
js
xchg
daa
mov
bound
xchg
sbb
btr
inc
gs
test
pop
add
fcmovbe
cmpsl
data16
pop
clts
fildll
arpl
xor
lds
lret
jno
jbe
sub
adc
sbb
mov
ljmp
mov
xchg
std
test
jae
cmpsb
arpl
add
xlat
fstps
push
inc
loopne
daa
push
mov
xchg
mov
jae
sbb
or
xchg
pop
add
ljmp
mov
xchg
mov
dec
stos
sub
ss
dec
fisttps
dec
jbe
sbb
add
mov
fcomps
or
or
xchg
cmpsl
push
push
mov
lret
pop
push
arpl
add
xorb
xor
and
insb
outsb
je
mov
popa
orb
out
xlat
je
loop
and
jecxz
in
shl
outsb
out
ss
loope
inc
imul
aas
add
push
add
inc
ret
xchg
mov
in
add
push
vmwrite
scas
lea
inc
adc
dec
mov
add
adc
jne
pop
xchg
imul
loope
push
push
add
pop
adc
pop
cmp
pop
lods
sub
movsb
pop
mov
mov
xchg
call
iret
and
or
or
pop
mov
test
add
push
ja
push
xor
and
adc
sbb
sub
bound
sbb
stos
jmp
pop
pop
or
lods
out
mov
rorl
fstl
ud2
pop
iret
cmc
fs
dec
ror
lods
test
sub
dec
shll
sbb
or
aam
jle
imul
fbstp
jne
rcl
cli
xchg
jmp
push
adc
insb
fs
shll
cmp
mov
addl
pop
sbb
xor
or
add
fiaddl
ret
sbb
mov
movsl
aad
addb
xchg
xor
mov
int
push
sbb
pusha
push
pop
nop
inc
push
cltd
pop
test
call
sti
jle
dec
test
push
push
aaa
daa
idiv
ret
stos
in
lret
sbb
hlt
lods
insl
push
push
nop
inc
arpl
cmp
push
dec
dec
push
sbb
dec
dec
dec
sbb
stos
test
enter
sub
outsl
out
dec
inc
inc
push
sbb
inc
inc
inc
sbb
ret
and
pop
lods
jmp
loop
xor
sbb
mov
push
cwtl
cmp
mul
jecxz
fldt
neg
hlt
gs
aaa
mov
xor
push
rsm
mov
add
mov
xor
jae
movsl
adcb
loope
das
or
fadds
hlt
mov
adc
and
and
inc
popa
loope
dec
dec
push
add
jnp
and
sahf
ljmp
inc
mov
jbe
test
sub
mov
test
fstps
test
add
dec
adc
inc
xor
pop
push
je
out
cmp
out
jnp
and
inc
cwtl
mov
cltd
jns
mov
pusha
push
mov
rcrb
push
jg
mov
ljmp
daa
outsl
pop
movsl
popa
jne
jae
aas
dec
inc
call
stc
pusha
sbb
ja
in
add
in
and
add
add
inc
out
mov
call
clc
pop
sub
jns
mov
shll
xor
xchg
stc
add
sub
push
push
ja
cmp
dec
packuswb
outsb
test
lods
adc
ss
test
xchg
pusha
insb
jle
mov
and
fs
ret
iret
arpl
xor
fmull
aam
hlt
mov
ja
ja
out
fwait
in
rcrl
aad
ljmp
bound
mov
and
bound
movsl
and
mov
fcomps
dec
or
mov
push
es
cmp
add
pop
cmp
arpl
fistpll
jbe
shlb
mov
daa
ds
jo
test
stos
mov
bound
push
pop
test
sahf
in
inc
or
lcall
dec
adc
into
add
mov
dec
mov
add
mov
pop
jne
scas
adc
leave
lods
pop
outsb
arpl
mov
aad
jne
jne
pop
add
popa
stc
dec
popa
arpl
stos
ja
adc
sbb
test
pop
lock
add
and
insb
adc
bound
mov
push
test
clc
sub
adc
lods
incl
stc
aam
ljmp
test
test
loop
ret
adc
gs
cmpsb
push
jecxz
ficomps
imul
mov
clc
inc
mov
imul
das
sbb
mov
lea
int3
fs
inc
lock
jae
xor
mov
popa
rcll
xchg
pushf
or
jmp
sub
je
imul
cmp
ret
pop
jae
mov
or
xchg
add
add
mov
mov
je
js
xor
pop
inc
add
cmp
sub
and
pop
mov
inc
pop
es
mov
jmp
in
mov
imul
lds
lea
adc
or
inc
ret
jmp
fs
inc
add
mov
sub
xchg
cli
aam
cli
in
adc
rcl
insb
imul
and
iret
mov
std
stc
shlb
cli
inc
insl
out
dec
pop
pop
fstpl
sbb
and
mov
cmp
test
aas
sub
sbb
jns
push
mov
shll
leave
mov
cmp
cmp
and
lods
imul
push
mov
popa
pop
mov
add
clc
movsb
les
scas
pop
sti
loopne
lods
int
lret
imul
dec
bound
push
mov
scas
jmp
adc
mov
adc
dec
scas
mov
dec
jnp
sbbb
cli
imul
mov
inc
pop
or
adc
data16
mov
sbb
daa
mov
inc
insb
insl
enter
pop
sarl
insb
jo
push
add
out
add
test
notl
push
imul
and
test
inc
imul
xor
gs
clc
xchg
sub
mov
outsb
ja
cli
adc
test
sbb
dec
and
or
popa
sub
mov
cmc
scas
shll
dec
cs
mov
and
push
push
sub
int
inc
mov
imul
pop
adc
cli
sbb
and
dec
xchg
mov
mov
or
cld
sub
arpl
sbb
inc
call
pop
jmp
popa
jb
faddl
push
adc
ljmp
inc
dec
lret
addl
fwait
clc
dec
lcall
mov
lret
ret
leave
add
xlat
or
shll
push
pop
jmp
adc
inc
inc
aas
sbb
pop
mov
mov
es
fstpl
loope
std
nop
push
clc
imul
test
sbb
mov
add
nop
push
add
inc
inc
add
jnp
or
xlat
mov
adc
or
imul
mov
imul
insb
mov
orb
adc
adc
nop
push
in
fcompl
fistpl
sbb
or
mov
xchg
xchg
add
nop
inc
add
add
mov
popf
jno,pt
mov
aaa
and
jbe
das
mov
sub
fstps
sahf
lock
ja
lods
fwait
test
sub
cli
add
std
push
fwait
add
jbe
fwait
xchg
xor
ds
adc
sahf
fxam
test
outsb
test
cmp
iret
ja
mov
stos
movsl
cmp
xchg
inc
sbb
sbb
pop
and
movsb
cmpb
jns
pusha
push
mov
dec
gs
iret
cs
sub
cwtl
mov
imul
es
shrl
mov
fcoml
or
aaa
call
fnstenv
rcr
mov
mov
jbe
mov
mov
ret
xchg
push
xor
fdivrs
jo
fidivrl
adc
jbe
add
fsubs
mov
push
gs
dec
adc
nop
fstps
dec
and
cmp
mov
pusha
dec
rolb
mov
push
mov
fwait
mov
aas
rcrl
jo
das
push
dec
and
ss
push
jl
jecxz
and
cmp
pop
std
bound
fwait
mov
mov
xchg
cmp
pop
or
cwtl
add
inc
bound
add
mov
pop
cltd
sbb
dec
in
xor
clc
mov
aaa
adc
xchg
subl
test
push
sbb
add
div
fwait
adc
subl
subl
adcl
insb
mov
or
lret
cmp
mov
sub
and
adc
add
mov
push
push
es
and
addr16
push
cli
in
daa
test
pop
and
push
sub
jne
jbe
inc
push
pusha
push
ret
sub
inc
cs
sbb
out
push
in
arpl
xchg
push
jo
pop
pop
jo
mov
outsl
xlat
sbb
out
aaa
dec
leave
inc
sahf
push
mov
mov
lods
adc
push
push
jb
and
aas
xor
cmp
mov
les
add
fstp
push
das
jecxz
sbb
sbb
mov
push
sub
cmpsl
jnp
pop
xor
popf
mov
and
adc
int
out
cmp
push
js
xchg
or
cmpsl
sbb
popa
mov
sbb
jg
ss
bound
je
sbb
jo
inc
jo
decb
add
mov
pop
pusha
hlt
lods
xor
push
mov
mov
add
xor
adc
mulps
push
jbe
sti
in
or
mov
mov
mov
int3
or
das
mov
ret
pop
inc
setns
or
xchg
bound
xor
in
lgs
push
daa
imul
lds
adc
mov
jecxz
mov
pop
shlb
push
lahf
les
cs
pop
nop
mov
or
xchg
mov
les
jne
and
subl
loop
in
stos
sub
dec
jmp
sbb
xchg
out
or
mov
mov
ds
cmp
dec
and
test
adc
push
push
pop
dec
jne
mov
cmc
shlb
aad
in
ja
out
add
xlat
cmp
xchg
ficoml
mov
push
add
ljmp
pop
push
adc
rcrb
cmp
xchg
or
pop
enter
iret
shlb
adc
fildl
mov
inc
mov
cmp
fdivrl
mov
jno
xorb
xor
aam
mov
adc
xor
filds
push
rclb
add
dec
push
jns
pop
dec
xchg
and
pop
or
add
inc
and
test
outsb
pusha
push
in
stc
jnp
shrb
sbb
int
jmp
nop
nop
nop
nop
nop
nop
ljmp
in
pop
mov
sub
adc
jno
pop
fsubl
dec
sub
xchg
dec
adc
adc
pop
adc
repz
push
push
lods
mov
into
clc
outsb
dec
push
sub
jl
xchg
jmp
inc
xor
je
sar
imul
cmp
test
aaa
vmsave
pop
cmc
mov
or
mov
mov
sub
adc
adc
add
add
loop
or
mov
xor
xchg
sbb
jge
mov
inc
dec
mov
pushl
sub
int
outsl
fisubl
icebp
add
jmp
pop
mov
mov
sub
mov
mov
inc
jae
mov
out
addb
sbb
sub
sub
add
mov
add
mov
loop
mov
ret
lret
cwtl
pop
stos
or
adc
inc
or
inc
arpl
cwtl
nop
adc
add
shlb
aad
jae
adc
mov
test
or
je
mov
sub
rcr
call
popa
jmp
inc
daa
sub
cmp
ja
add
add
add
cmpsb
lret
xchg
xchg
pushf
dec
jnp
sbb
cli
xor
add
add
add
and
lea
pop
sbb
xor
jg
outsb
insl
cld
or
add
add
sub
addb
add
repz
mov
fwait
jnp
mov
imul
ret
jp
inc
jne
jno
out
fsubr
and
fld
in
or
in
jmp
xchg
or
aaa
add
add
orl
add
add
stos
bound
out
jnp
and
mov
add
add
cld
test
and
mov
add
jl
outsl
int3
pop
adc
mov
out
sahf
gs
outsl
pop
jmp
and
add
add
and
mov
pop
xor
inc
mov
add
loopne
or
sub
popf
cli
lahf
jg
add
jb
or
stos
jge
mov
scas
inc
xor
add
inc
insl
pop
jno
xchg
mov
test
out
into
sub
inc
sbb
ficompl
aaa
adc
sar
add
add
add
mov
scas
and
sbb
jno
sbb
push
add
add
push
scas
xchg
in
inc
