or
or
add
add
leave
adc
add
adc
add
add
add
add
add
add
adc
add
js
add
add
add
add
add
pop
pop
add
cmp
or
dec
adc
add
or
insb
adc
add
or
mov
or
add
add
xchg
adc
add
add
add
add
addb
add
sbb
or
pushf
adc
add
adc
add
adc
add
adc
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
outsb
fs
gs
popa
addr16
add
add
and
add
add
add
add
add
clc
and
add
mov
add
fwait
sub
push
lahf
iret
xchg
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
dec
pop
add
add
or
add
mov
cmp
dec
mov
pop
sti
cmp
aas
mov
xchg
push
adc
mov
aas
lcall
mov
sti
dec
cmc
or
test
mov
lcall
sahf
inc
jle
inc
add
inc
cmp
push
xlat
es
mov
push
call
jb
adc
in
sbbb
push
movsl
dec
bound
and
fcompl
xchg
in
ljmp
inc
xor
insl
cmp
dec
mov
sbb
sahf
lret
inc
sub
sbb
test
jp
xchg
inc
sahf
cltd
lret
xchg
and
bound
das
push
mov
xor
and
xchg
int3
jno
test
rorl
test
jmp
insb
cld
or
inc
xchg
push
jmp
adc
addl
mov
sbb
sti
push
adc
mov
popa
aaa
not
push
jnp
nop
inc
insl
fwait
mov
inc
sbb
sbb
popa
enter
fwait
or
es
push
mov
mov
sub
mov
hlt
test
mov
arpl
sub
je
shr
add
frstor
dec
aad
sub
or
xchg
rcrb
push
sahf
fwait
dec
aad
loopne
lods
pop
jno
int
negl
in
dec
push
arpl
mov
or
sub
inc
push
mov
sbb
shlb
imul
lcall
dec
insb
sbb
mov
dec
sbb
pop
orb
sub
out
inc
cmp
repz
loope
pushf
in
xor
jnp
mov
xor
xor
fdivrl
ret
sbb
cmp
or
arpl
neg
dec
dec
sbb
jae
insl
push
call
sub
mov
adc
push
ja
idiv
push
cs
sbb
hlt
shl
and
mov
call
mov
iret
add
bound
cmp
ja
lds
lods
out
out
or
push
stos
add
push
test
popf
push
fnstenv
mov
cli
cwtl
stos
gs
idivb
nop
fisubrl
cltd
and
push
out
xor
faddl
out
iret
sbb
adc
loope
push
or
in
sbb
jae
sbb
data16
sub
push
orb
orb
sub
and
mov
pop
cmp
push
mov
inc
insb
pushf
les
lea
dec
push
iret
sbbl
addr16
bound
adc
mov
sub
js
movsl
in
push
dec
inc
aad
jne
sahf
jnp
shll
pop
push
mov
js
mov
pop
inc
clc
pusha
pop
arpl
cs
jge
imul
hlt
push
sahf
nop
mov
xchg
cmp
jge
xor
xchg
and
push
pusha
mov
jmp
stc
lods
pop
pop
loopne
daa
loopne
pop
adc
pop
call
mov
push
pop
movb
leave
jecxz
loope
push
fs
mov
pop
mov
push
enter
push
or
mov
push
add
or
or
mov
int
inc
dec
xor
iretw
push
je
or
xchg
mov
sbb
in
and
shll
push
xor
mov
in
outsb
addr16
fcmovb
pop
testb
loope
push
repz
pop
push
mov
and
jns
int3
jmp
inc
inc
daa
stos
shrb
jge
cmp
mov
out
dec
or
push
mov
test
insb
pop
addr16
jecxz
dec
lock
insl
or
fcoml
fcoms
jp
int
pop
mov
push
shr
push
jle
ss
ficomps
cmpsl
cmpsb
sti
mov
xlat
mov
sub
jbe
enter
sub
addr16
dec
adc
push
into
movb
inc
mov
cmpsl
push
fildl
push
ror
es
jg
xchg
sbb
scas
mov
hlt
rorb
xlat
and
jo
sub
lahf
sti
mov
sub
mov
add
ds
add
xor
fiadds
adc
jmp
imul
in
ret
das
popf
xor
in
es
mov
mov
xor
popf
cmpsb
sbb
cmc
jp
ljmp
and
int
rol
mov
inc
test
pop
int
xchg
out
stos
loopne
outsb
xchg
dec
sti
testb
jne
fdivl
push
mov
pop
fcomip
mov
popa
pop
sbb
sub
xchg
sub
jl
push
sbb
push
out
xchg
and
dec
cmpb
jmp
pop
pop
lret
cld
insb
pop
cmp
fiadds
cmpb
and
push
or
dec
int3
push
pop
push
jp
add
cmp
push
pusha
clc
or
fwait
lahf
incl
loope
xchg
sub
out
xchg
xchg
clc
out
insb
lret
mov
fwait
cmp
adc
or
subl
mov
inc
push
sbb
add
push
fdivl
mov
push
sti
in
push
out
adc
in
pop
mov
mov
inc
push
inc
xchg
xlat
idiv
xchg
fimull
outsl
dec
or
jb
in
jnp
mov
and
les
clc
mov
jl
adc
cwtl
or
out
or
mov
pop
pop
sbb
dec
sub
sub
jecxz
pusha
fnstenv
loop
sub
inc
std
push
nop
xor
clc
add
pop
icebp
loope
sbb
fdivl
mov
push
sbb
xchg
ret
inc
outsl
aas
test
pop
inc
inc
add
test
roll
jl
inc
fisttps
das
and
xor
and
cli
mov
addr16
in
mov
aad
rorl
daa
cmp
dec
sti
pop
cli
pusha
or
jns
dec
pop
rcrb
fnstenv
push
lods
jns
lret
xchg
and
daa
and
add
adc
aaa
push
sbb
dec
int3
ret
xchg
aaa
xchg
std
mov
xchg
and
jmp
xchg
aad
jb
sub
arpl
push
ss
xchg
cmp
insb
xor
push
repnz
daa
dec
sarb
bound
and
dec
pop
push
xchg
mov
xor
ss
aam
aam
loope
cmp
fdivrl
cmpsl
ja
shrl
call
js
cmpsl
shl
popf
inc
mov
mov
push
jns
jl
fisttpll
jmp
imul
mov
jbe
mov
dec
and
xor
dec
loop
inc
cs
shll
add
pushf
lahf
pop
pushf
push
xchg
add
mov
loope
sub
xchg
and
scas
out
cmp
pop
sub
xor
jo
pop
jnp
movsl
jb
int3
ljmp
insb
mov
mov
sbbb
mov
gs
loopne
insb
pop
xlat
xchg
ret
sub
push
pop
nop
test
mov
sub
aad
mov
fsts
or
xor
push
lcall
lahf
adc
or
add
rol
repz
add
mov
lods
in
nop
adc
push
out
sub
sub
sub
cmc
shrb
jmp
xchg
sub
sub
into
dec
lret
xchg
inc
std
aad
mov
jnp
clc
sbb
xor
cmp
sbb
pop
outsl
xchg
adc
or
add
xor
addb
jp
cmpsl
cmc
mov
rclb
push
mov
arpl
imull
fists
test
or
dec
pop
mov
mov
jns
jns
lcall
xlat
enter
lock
stos
mov
aam
daa
mov
add
jno
imul
and
lcall
add
or
jecxz
xor
shll
mov
aad
mov
popa
jge
add
test
addr16
mov
xchg
adcb
or
dec
hlt
aas
add
lods
loope
outsb
mov
fwait
push
fs
mov
gs
mov
adc
cmp
xor
jne
aaa
pop
enter
cltd
sbb
hlt
inc
ret
std
pushf
outsl
pop
sub
dec
jmp
xchg
flds
pop
xchg
sub
mov
sbb
pop
push
lds
nop
push
pushf
les
push
push
fwait
xchg
jb
pop
adc
ret
adc
add
and
push
mov
in
jo
sub
mov
popf
sub
or
mov
movsb
xchg
add
lock
inc
cmp
ljmp
scas
fcoml
pop
lahf
pop
push
xchg
add
and
xor
sub
xchg
inc
ror
xchg
outsb
lea
std
cmp
insb
inc
pop
dec
jmp
clc
add
fldenv
inc
lret
dec
addr16
sub
out
mov
dec
mov
pushf
inc
loopne
mov
push
jbe
cld
push
push
fistl
cmpb
cmp
fmulp
repz
and
das
out
sahf
inc
icebp
out
dec
inc
push
mov
xchg
push
jecxz
ret
cmpsb
mov
xchg
jmp
push
push
lock
bound
insl
mov
les
cli
sub
mov
cmp
mov
into
shlb
enter
jl
cmc
lods
rcll
adc
fxch
leave
lret
jno
jge
scas
out
adc
mov
in
ss
orps
mov
cmp
xlat
lea
sub
lods
les
cmp
inc
dec
fwait
jb
xchg
inc
mov
adc
mov
push
add
jmp
cmp
les
sbb
adc
push
mov
cmp
stos
iret
mov
and
push
xchg
and
jl
repz
dec
daa
mov
xor
stos
push
xchg
bnd
dec
cvtps2pi
bound
adc
repz
xor
scas
inc
ror
jmp
cltd
jl
int
lods
movsb
sbb
sbb
lcall
cmp
addb
or
scas
insb
mov
sbb
jp
xchg
push
imul
ljmp
cmp
loope
sbb
jb
xor
jecxz
icebp
cmp
shrl
jns
insl
gs
mov
xor
and
jae
out
int
push
in
or
repz
leave
jle
mov
aad
jae
btcl
cltd
pop
dec
inc
cltd
mov
movsl
lods
cmc
cmp
std
pop
lds
jp
sarb
fiaddl
mov
and
cmc
xor
in
jge
addr16
jb
jmp
mov
subl
cmp
insl
mov
push
push
cs
pop
or
push
cltd
daa
sbb
jle
mov
loop
inc
movsl
out
aaa
aaa
and
xchg
inc
in
aam
and
xchg
leave
enter
out
shrb
pushf
js
dec
dec
mov
cwtl
inc
cmp
adc
scas
pop
dec
movsl
fs
sbb
mov
loop
mov
stc
bound
dec
fidivrs
insl
lock
mov
or
sub
ret
out
pop
or
add
adc
and
mov
das
push
vpxor
popa
pop
loopne
dec
daa
cmp
or
outsl
call
cmpsb
xchg
out
mov
xchg
aad
inc
out
or
dec
push
shll
adc
or
jmp
stos
jmp
test
loop
xchg
lea
aas
adc
popf
call
add
push
mov
icebp
adc
cmc
cld
fdivrs
or
int
push
pop
cmc
sbb
sub
xchg
dec
sarb
adc
pusha
push
stc
pop
sub
fcomi
sub
dec
cs
js
mov
les
jmp
in
jp
cmp
imul
push
jmp
inc
ret
outsl
int
cmc
lcall
fsubl
idiv
mov
imul
adc
shlb
jno
cwtl
push
nop
hlt
push
mov
add
add
pop
out
adc
movsb
lock
sti
flds
sub
test
andl
push
cmc
movd
leave
ljmp
out
mov
aad
mov
or
into
std
int3
loopne
pop
sbb
xchg
xlat
cmp
cmpsl
pop
xor
dec
push
outsl
inc
xchg
repnz
and
out
mov
add
fs
pop
rorl
loope
in
jle
xor
mov
test
and
in
push
testb
xchg
addl
scas
ljmp
icebp
push
pop
cwtl
mov
jecxz
dec
jecxz
jno
leave
into
outsb
in
pop
mov
ds
loope
mov
aas
faddl
in
xchg
inc
or
mov
notl
addr16
inc
lods
test
jns
sub
iret
and
inc
add
fwait
mov
mov
jge
rsm
cmc
fcomps
inc
jbe
out
push
jmp
ret
fcomps
pop
sti
ljmp
mov
dec
in
mov
int
lret
lock
dec
cmp
pop
out
or
int
lahf
mov
lahf
addl
lea
daa
sti
cwtl
lcall
push
ss
popa
sub
adcb
xor
sti
push
pop
xchg
frstor
pop
xorl
jg
pushf
movsb
std
popa
or
das
sbb
adc
in
stos
pop
jge
js
test
push
xor
jle
negl
daa
adcb
dec
push
pushf
xchg
sub
addb
jge
sub
mov
leave
movsb
mov
xor
mov
adc
jo
mov
pop
xor
fwait
shl
dec
aad
mov
out
add
outsl
adc
mov
cmpsb
push
ljmp
int
push
sbb
dec
pop
xchg
mov
jns
inc
xchg
sbb
dec
loopne
mov
lods
dec
movsb
xchg
jge
pop
test
loop
pop
fwait
outsb
lret
pop
clc
in
add
sbb
add
and
icebp
pop
pop
pushf
shl
sti
rorb
bnd
in
out
xor
cmp
sbb
mov
subl
sub
cmp
and
mov
mov
mov
and
mov
inc
and
mov
xchg
xchg
std
loop
pop
mov
xor
push
xor
sbb
lds
jb
add
jl
add
bnd
cmp
addr16
dec
xor
cmp
mov
sbb
adc
dec
scas
mov
fistpll
sub
lret
int
negl
cmpsl
sti
dec
add
cs
cmp
mov
and
sub
dec
bound
adc
jecxz
add
orb
stc
test
aas
add
in
hlt
xor
lcall
adc
mov
aaa
and
fistps
sahf
inc
les
xchg
test
out
cmc
xor
pop
repnz
sub
out
leave
pop
sbb
sub
push
dec
fwait
imul
and
pop
jo
jnp
imul
push
nop
test
mov
sub
mov
imul
mov
call
repnz
fdivl
mov
mov
push
test
push
iret
pop
lock
pusha
xor
or
xchg
push
shlb
test
xor
lahf
repz
lock
fcmovb
mov
in
inc
add
aad
push
ffreep
dec
dec
dec
and
mov
dec
push
pop
std
mov
xchg
jo
sbb
mov
popa
ret
mov
sub
xchg
mov
stos
ja
fisubl
lcall
imul
mov
outsb
ljmp
ret
scas
cmpb
dec
out
mov
aaa
mov
stos
adc
out
push
mov
or
lcall
xchg
stc
and
mov
cmp
sbb
test
addr16
std
pop
iret
loop
out
loop
rorb
hlt
mov
imul
out
push
sbb
fisttps
cmpsb
jmp
pop
jl
test
call
push
jnp
adc
sub
loopne
jecxz
aad
inc
movb
push
out
lahf
ret
popa
or
xor
jl
clc
jbe
ljmp
imul
rclb
out
test
mov
mov
pushf
enter
dec
lret
das
mov
pop
inc
inc
mov
pop
test
mov
jle
sub
mov
jmp
fidivl
loopne
mov
xchg
pusha
inc
cwtl
cs
push
pop
test
mov
sarl
mov
mov
pop
hlt
cli
cmp
and
and
mov
pop
push
jnp
insb
iret
push
push
inc
mov
sub
adc
js
push
xlat
mov
and
mov
movsb
ficoms
cmpsl
ds
cli
test
mov
lea
enter
add
mull
outsb
mov
roll
xchg
cmp
shlb
fs
mov
xor
mov
push
std
mov
add
inc
mov
and
rcll
ficoml
out
lods
cs
mov
ljmp
stc
jecxz
fldenvs
mov
xchg
fistl
sahf
xchg
data16
sbb
fwait
pop
cli
and
dec
or
add
aad
ja
test
test
cmc
jecxz
sub
lcall
rcr
jmp
inc
inc
dec
icebp
stc
push
xchg
xchg
sti
and
lret
iret
cld
imul
pushf
scas
repnz
fcoms
aaa
iret
push
lcall
jbe
cmp
dec
add
mov
cltd
sbb
subl
xlat
jno
sub
cmp
je
xor
jb
xchg
icebp
add
aaa
fidivrl
jle
in
jecxz
pop
dec
cmc
adc
std
push
or
pop
in
loopne
daa
mov
mov
xchg
push
ret
push
cmc
cmp
and
fcomip
into
repnz
mov
mov
mov
dec
imul
xlat
add
call
xchg
mov
fcoms
and
in
xchg
test
add
adc
sti
or
repnz
fidivrs
sub
aam
addl
std
mov
lds
andb
stos
fwait
cmp
adc
in
mov
push
cltd
inc
int
pop
adc
test
repz
and
idivl
out
nop
fcmove
test
cmc
sub
jo
sub
sub
mov
cltd
mov
ds
push
out
fldl
outsb
mov
mov
inc
pop
mov
push
xor
lahf
pushf
cli
dec
push
mov
push
pusha
leave
add
cmc
dec
rcl
or
ja
mov
in
mov
sbb
sbb
and
inc
pop
std
and
mov
scas
cltd
lahf
push
mov
pop
sub
fists
jg
pop
jmp
push
movsl
jae
dec
lods
push
pop
jo
adc
pop
sahf
inc
and
push
mov
fdivrl
or
out
lret
push
aas
ret
jae
aam
aam
rclb
pop
lahf
sub
xor
fcomps
dec
shlb
add
ret
mov
leave
xor
shll
fsubrs
lret
adc
sub
jle
mov
xor
cmpsb
dec
push
push
insb
add
movsb
sbb
mov
test
pop
push
push
adc
outsb
and
xor
int
popf
fldenv
std
std
not
test
add
sbb
cwtl
lock
mov
mov
scas
stos
or
rcll
push
hlt
int
jge
gs
push
xor
push
pop
jbe
xchg
jecxz
nop
inc
mov
cmc
add
data16
ret
xchg
pop
rcl
shlb
mov
add
imul
test
or
pop
cmp
xchg
adc
std
push
cmp
push
movsb
xchg
jmp
fcmovnbe
lcall
int
hlt
aaa
lock
cmp
into
mov
imul
xor
and
mov
inc
xchg
roll
push
sub
add
dec
mov
pusha
imul
or
insl
movsb
pushf
jecxz
fisubs
insb
nop
aam
sbb
push
push
test
hlt
adc
lock
jg
fsubs
xchg
dec
jno
push
xchg
inc
adcl
lds
xchg
adc
in
push
les
mov
inc
push
pop
jmp
es
xchg
cltd
cmp
mov
sbb
or
fwait
sbb
fidivrl
pusha
mov
adc
orb
js
outsl
sbb
bound
testb
iret
mov
xor
lea
addl
and
mov
cmp
lds
js
rclb
movsl
and
push
sub
insl
xor
cwtl
test
pop
pop
xchg
iret
dec
and
stos
inc
xchg
sbb
pop
push
iret
mov
insl
xorb
daa
xor
jo
dec
and
test
and
cmp
adc
mov
bound
aas
adc
nop
mov
xchg
xor
sbb
inc
pop
addr16
dec
stos
push
inc
cmpsb
adc
or
inc
lret
icebp
and
pop
lret
testl
out
lock
das
push
adc
push
lock
enter
mov
mov
mov
adc
aaa
mov
add
pop
cmp
daa
lret
or
inc
push
test
fdivrs
add
aas
movsb
push
out
or
push
sbb
adc
inc
dec
ret
pop
cld
lods
cmpsl
cwtl
push
call
xorb
pop
jae
pop
pop
adc
daa
lea
scas
repz
add
push
addb
lea
xchg
cmp
pop
and
push
mov
or
stos
adcb
xor
out
int
jmp
lods
push
out
jl
adc
sbb
sub
scas
fsubrl
add
pop
mov
cmp
dec
in
decl
mov
jne
jle
es
mov
cs
shrb
sbb
cmp
daa
pcmpgtd
push
fdivs
jecxz
cmp
leave
cltd
fists
mov
adc
lea
jmp
ja
and
mov
aas
jne
pop
cmp
pop
cld
mov
cmp
xor
mov
out
and
mov
pcmpeqb
jns
sbb
outsb
pop
in
clc
sub
cmpsb
dec
filds
or
fsubl
fildl
jmp
mov
out
adc
jae,pt
pop
lret
das
mov
jmp
add
mov
push
aas
mov
iret
push
push
lods
mov
inc
jmp
fdivp
adc
imul
fsubrl
outsb
jge
pop
out
sbb
add
inc
mov
jno
cld
jge
imulb
sarl
xor
jg
mov
int3
in
in
fwait
jp
push
lea
adc
mov
mov
add
mov
xlat
xchg
iret
fisttpl
rorb
cs
xor
les
dec
bound
dec
movsl
bound
sti
hlt
push
pop
fstp
mov
and
mov
ffreep
test
ja
in
push
clc
sbb
popa
jae
inc
push
shr
aam
mov
mov
xchg
push
hlt
mov
sub
ss
movsl
sub
mov
lcall
jae
push
or
in
mov
ja
push
iret
loop
push
push
sub
clc
add
or
inc
sbb
das
mov
jae
xor
fisttpl
jg
add
test
shlb
cmc
out
lods
jmp
xor
xchg
scas
cwtl
aaa
xlat
dec
sub
adcl
fwait
mov
pop
scas
xchg
xchg
das
gs
cltd
mov
and
sub
lods
call
mov
subb
dec
inc
fldcw
xchg
push
pop
stos
inc
cmp
dec
loop
push
add
call
add
xor
cmp
pusha
jmp
in
pop
xchg
aad
sub
ret
mov
popf
push
mov
faddp
out
xor
icebp
sahf
andb
adc
xor
adc
lret
pusha
add
fcoms
sbb
andb
xlat
or
mov
mov
xchg
dec
or
push
sbb
loope
es
cmp
scas
and
xchg
enter
cmpl
mov
adc
shll
shlb
add
aad
cmp
mov
ljmp
ljmp
outsb
shrb
jmp
bound
or
jge
cli
sub
push
xchg
jge
cmp
push
pop
jne
scas
dec
movl
mov
out
hlt
jbe,pn
adc
dec
adc
lahf
jg
or
repz
nop
out
ljmp
jle
outsl
lock
icebp
adc
push
pop
leave
cmpb
xor
mov
ljmp
pop
xorb
mov
jp
arpl
into
daa
adc
outsl
mov
iret
push
dec
ljmp
lcall
pop
jecxz
or
jecxz
sub
into
mov
mov
sub
cmp
mov
xor
cmp
dec
pop
loop
adc
insb
leave
ficomps
test
fwait
sub
add
js
sub
shlb
nop
data16
out
inc
push
adc
dec
mov
sub
mov
push
bound
inc
and
adc
pop
sub
pop
push
shll
mov
mov
mov
xor
inc
xchg
fldl2t
roll
cmp
xchg
add
and
inc
push
pusha
shll
jmp
inc
das
xchg
pop
adc
push
insb
sbb
xchg
and
jecxz
sahf
movsb
dec
jne
jae
sub
imul
sbb
clc
pushf
mov
push
push
stc
cli
fwait
in
enter
stc
repz
insl
scas
inc
add
in
and
icebp
pushf
mov
insl
repnz
jno
cmpsb
mov
mov
or
mov
mov
pop
add
sbb
dec
pushf
inc
outsl
push
add
jne
cmpsb
mov
cli
xchg
pop
lods
adc
pusha
insl
repz
scas
aam
adc
loopne
sbb
ficomps
dec
push
sub
popf
sub
icebp
lea
cmp
or
sbb
pop
dec
jns
mov
adc
in
push
sub
fsubr
xor
test
mov
or
in
fmulp
rclb
repnz
push
ror
nop
cs
movsb
lcall
mov
mov
pop
dec
push
jle
cmc
pop
es
cmpsl
ljmp
cmp
push
push
push
inc
notb
pop
push
pop
adc
repnz
cltd
enter
pop
dec
test
xor
fcoml
push
sbbl
mov
outsl
rorb
nop
rclb
fucomp
mov
out
jne
addr16
inc
jae
xor
sub
inc
mov
inc
in
sub
push
frstor
in
imul
int3
jae
in
adc
xchg
mov
mov
hlt
and
repnz
adc
repnz
rclb
adc
add
repz
pop
popf
ljmp
divl
or
sbb
xorl
fiadds
jp
sub
xorl
mov
sti
pop
inc
cmp
mov
push
cmp
mov
sub
sahf
out
mov
fildll
jle
pop
ret
movsl
fs
add
aas
nop
add
push
dec
mov
stos
and
jne
xlat
add
jno
fildl
pop
into
push
inc
adc
add
movsl
cmp
cmp
pop
fcomp
and
test
push
mov
icebp
shrl
or
sub
xorl
xorl
mov
or
xchg
rol
mov
fisubrl
incl
lret
cltd
and
fstl
cmpl
sbb
adc
into
mov
xor
push
and
rcrb
sub
loopne
xor
icebp
cmpsb
and
xchg
pop
xlat
sarl
in
popa
xchg
sarl
sub
in
icebp
and
xchg
push
jb
sbb
xchg
push
icebp
es
or
out
insl
cld
call
pop
dec
pushf
mov
mov
loope
sbb
aam
push
and
adc
jno
pop
lret
jg
dec
add
mov
aas
cmpl
daa
popf
leave
fbld
aaa
gs
jne
adc
daa
outsl
push
mov
out
mov
xor
and
mov
notb
addr16
icebp
mov
dec
xchg
pop
sbb
cmc
push
pop
xor
sub
adcb
rcl
jge
or
pop
sbb
xchg
pusha
gs
fwait
and
cmovno
pushf
xchg
fs
cltd
mov
cwtl
pop
insl
jp
pop
cmpsb
enter
push
cltd
je
out
xchg
int3
cmc
dec
mov
mov
sti
in
psubusb
jns
mov
adcb
dec
repz
dec
xchg
push
fiaddl
lcall
sub
pop
out
aam
cmp
sbb
dec
outsb
clc
xchg
ss
or
ds
jp
sub
xchg
das
icebp
push
popf
push
jle
test
cld
fmul
loope
fistl
std
outsl
mov
or
jge
mov
cmp
add
xorl
inc
iret
push
sbb
imul
jae
or
in
sub
lahf
nop
sbb
test
cmpl
cmc
leave
vsqrtps
sub
jmp
pop
pop
cmp
insb
lahf
mov
mov
pop
clc
add
sub
repz
nop
ret
dec
mov
imul
cmpl
or
ret
sbb
repz
out
push
std
cmp
imul
jae
mov
xor
xchg
int3
dec
andl
int3
push
add
cmp
mov
and
gs
arpl
xchg
dec
lea
jmp
mov
mov
jmp
in
pop
sub
add
mov
mov
or
mov
xchg
mov
mov
mov
mov
movsl
jp
pop
mov
test
adc
in
mov
cwtl
ss
xchg
adcl
push
aad
push
sub
das
testb
xchg
xchg
arpl
insl
ljmp
popf
rorb
sahf
int3
lods
insl
outsb
notb
aad
orl
jle
jae
nop
sbb
mov
in
xchg
mov
std
pop
jge
push
daa
xlat
push
xchg
pop
pop
divl
sti
mov
mov
adc
outsl
dec
rcrb
aas
xchg
push
sbb
popa
mov
sub
xor
xchg
inc
imul
in
jmp
push
lret
fidivs
mov
sbb
fs
div
bound
mov
outsb
dec
cltd
clc
push
or
shlb
mov
inc
and
or
jmp
mov
inc
dec
lret
call
push
ret
ljmp
dec
jnp
xor
and
dec
adc
cmp
dec
mov
xchg
hlt
sub
mull
mov
sub
insb
dec
dec
xchg
stc
jno
pop
lods
fcmovne
or
mov
jge
jno
test
mov
pop
xchg
xlat
scas
lahf
fsubs
ljmp
sub
lcall
cli
sub
pop
or
xor
jne
or
inc
lahf
jae
stos
repz
cmpsb
ret
and
sub
sub
sub
push
pop
inc
outsb
ljmp
lock
sub
icebp
xlat
mov
testl
xchg
mov
rclb
push
mov
fisttps
mov
mov
and
cmp
sbb
imul
cmp
stos
and
inc
adc
int3
ja
mov
mov
sub
dec
sarl
aaa
in
adc
je
hlt
movsl
adc
push
sbb
adc
inc
pop
jae
jbe
xor
and
lock
mov
popa
dec
in
mov
addr16
or
loopne
add
call
inc
gs
and
jle
cmpsb
cmp
sti
jb
ret
arpl
adc
out
push
notl
xorb
clc
add
inc
xor
popa
xchg
addr16
push
mov
sub
mov
ret
sub
jmp
sub
movsb
jl
pop
movsb
pop
push
xchg
cmp
inc
scas
jge
jecxz
mov
inc
ja
mov
jg
xor
outsb
loop
xchg
test
out
pop
fwait
adc
push
je
into
push
fadd
mov
out
mov
aas
and
lcall
das
mov
mov
sub
imul
push
inc
cmpsb
xchg
mov
adc
out
popa
loopne
jns
add
jle
jg
jnp
mov
jne
pop
xchg
mov
mov
dec
pop
leave
mov
xor
cmp
or
cmp
push
add
fcomi
hlt
movsl
pop
popa
dec
mov
repz
and
sahf
ja
mov
pop
sti
fiaddl
jmp
jae
add
arpl
mov
adcl
mov
scas
imul
push
mov
cwtl
divb
cmp
pop
or
lods
insl
xor
pushf
and
add
shrl
sbb
dec
mov
jecxz
les
xchg
rorb
push
pop
aas
jno
pop
out
jp
push
xchg
add
sub
dec
ret
sti
pushf
shl
lods
push
iret
jno
repnz
xchg
or
mov
and
test
lea
cmpsb
addl
pop
cmpsb
inc
shlb
fcoml
movsb
fldenv
inc
xchg
push
push
mov
xlat
es
cmp
push
mov
fstps
pop
dec
es
jb
pop
mov
mov
and
ret
in
mov
gs
lahf
jb
add
out
push
lret
sti
jb
sub
pop
pop
int3
cmc
xchg
addr16
fidivs
push
xchg
inc
xchg
int
sbb
stc
movsl
imul
sti
cs
push
ficoml
add
adc
sbb
frstor
loop
xchg
test
push
loope
pop
push
xor
ret
pop
out
mov
out
mov
in
mov
mov
cmp
aam
mov
push
into
mov
out
or
std
push
sarl
je
in
es
int
xchg
jae
dec
xchg
enter
stc
test
cmp
cmp
cmpsl
les
mov
imul
sbb
les
popa
adc
and
mov
lods
add
mov
loope
add
insl
lods
sti
jmp
xchg
jne
fwait
sub
xorl
scas
sub
or
xchg
inc
sti
shlb
xchg
xchg
fwait
aad
bound
sbb
jecxz
jecxz
jg
and
movsl
les
jecxz
outsl
dec
pop
pop
jnp
add
sub
push
xchg
push
push
mov
ljmp
movsb
push
outsb
test
bound
xchg
ss
stos
and
fmul
movsb
jno
push
dec
mov
mov
out
rcll
push
sarb
add
adc
xor
mul
mov
and
jne
pop
incl
adc
push
sahf
jae
idiv
xchg
loop
dec
imul
mov
push
dec
jmp
xchg
addr16
ds
sub
xchg
lods
inc
stos
dec
mov
in
jo
dec
out
and
popf
xchg
sbb
aas
repz
imulb
imul
daa
mov
pop
test
leave
movsl
push
ss
in
push
sbb
inc
jmp
mov
mov
and
lock
and
mov
sbb
or
loopne
xchg
xor
pop
popf
sbb
dec
movsb
and
or
mov
xor
cmc
adc
and
std
xchg
mov
ja
mov
daa
pop
mov
lods
mov
pop
jg
jne
pop
dec
mov
sub
in
ss
fsubs
enter
loopne
push
stc
add
rclb
or
fidivl
xchg
arpl
mov
rcrl
jbe
pop
insl
jae
mov
cmpsl
or
or
mov
aaa
daa
stos
xor
push
in
rcl
pushf
iret
out
xor
in
ror
fmuls
divb
mov
cmpsb
inc
stos
in
nop
fdivp
sub
mov
out
dec
inc
sbb
das
cltd
xchg
pop
test
dec
mov
inc
insb
leave
mov
ja
daa
jg
pop
jbe
jo
dec
inc
leavew
out
in
jno
sbb
mov
mov
and
mov
out
aaa
imul
pop
cmpsb
bound
sbb
sub
mov
pop
stc
mov
ljmp
pop
pusha
imul
idivl
insl
out
adc
repnz
jae
mov
and
mov
push
jmp
shrb
lahf
or
cli
stos
add
jmp
mov
repz
lret
or
filds
xchg
adc
xchg
sahf
sub
pop
inc
in
adc
sbb
pop
enter
jmp
popf
bound
mov
jo
sbb
lret
mov
xchg
add
jae
repz
sub
imul
movsl
push
and
xor
dec
jae
cwtl
shll
lock
mov
sub
jmp
add
outsb
imul
mov
push
or
daa
add
pop
or
jb
jmp
mov
pop
cwtl
bound
sar
add
inc
xlat
xchg
push
cwtl
lea
loope
pop
mov
jnp
push
sahf
cmpb
cs
shrb
add
adc
dec
pop
xchg
pop
popa
cmpsb
jne
xchg
ret
fidivrs
mov
dec
test
xchg
leave
jbe
xor
mov
bound
repnz
cmp
push
les
inc
add
fdivs
lods
popa
fsubs
pop
mov
dec
xor
add
adc
or
sbb
and
xor
hlt
rorb
mov
lods
notb
js
inc
push
sub
mov
ljmp
out
push
pop
fwait
pop
movsb
jne
cmp
pop
repz
out
rorl
test
cltd
in
jp
mov
repnz
ficomps
mov
das
xchg
popf
pop
xor
out
je
shll
mov
mov
adc
int
push
hlt
daa
mov
push
dec
sub
cmp
xchg
cmp
adc
dec
int
decl
xor
movsl
enter
sbb
mov
xchg
ss
add
pop
sub
das
sub
int
inc
sbb
mov
push
and
inc
sbbl
out
icebp
mov
iret
pop
lahf
addb
inc
mov
jb
adc
and
ficoms
push
sub
clc
sbb
lods
jge
dec
bound
mov
enter
mov
pop
and
mov
enter
addr16
push
les
jbe
pop
test
rorb
jmp
jecxz
adc
mov
xlat
popa
jp
inc
sub
test
ret
mov
inc
int
push
and
bound
lds
dec
sub
in
xor
jp
cmp
pop
adc
push
out
xchg
sbb
cmp
mov
test
ret
jne
or
sub
jmp
pop
ror
repnz
push
jb
adc
lahf
int
call
mov
add
xor
jmp
push
or
cltd
int3
or
push
jne
adc
call
das
out
and
pop
mov
and
cli
aas
fnstsw
gs
pop
pop
push
imul
scas
sub
or
add
ds
popf
cmp
stos
mov
pushf
cmp
and
loopne
xchg
xor
mov
int3
dec
imul
and
dec
push
push
incb
insb
aaa
out
lods
add
or
enter
call
xchg
cs
aad
adc
jge
sub
iret
lret
pop
sbb
cmp
fistpl
and
cmp
push
or
xlat
inc
jo
inc
addr16
sbb
sub
or
mov
in
push
stos
daa
push
or
movsb
mov
cltd
aam
in
into
test
push
sbb
in
test
pop
jge
sub
loopne
rclb
push
loopne
mov
out
push
fsubrs
loop
les
sub
mov
xchg
xchg
push
cli
cwtl
inc
xchg
adc
lret
jp
inc
loopne
push
lods
mov
icebp
idivb
jge
imul
inc
mov
rcl
sub
insb
push
imull
jns
les
cmp
mov
mov
add
or
enter
std
mov
mov
push
jno
inc
dec
js
and
push
arpl
ss
int3
dec
add
stos
mov
mov
movb
aam
inc
cmp
int
xchg
in
cmpsb
mov
into
mov
inc
das
xchg
inc
mov
fisttpll
mov
fwait
lea
xchg
xchg
jno
sub
jecxz
mov
xor
addr16
shll
push
bound
xor
mov
push
push
leavew
or
jno
and
decb
cs
jns
adc
xor
jo
pop
jecxz
lahf
leave
mov
outsl
in
adc
mov
jle
jp
add
push
mov
lods
fnstsw
pop
jns
outsl
push
push
jp
lret
sub
xchg
push
frstor
sub
daa
inc
int
out
jo
mov
loopne
test
lahf
rolb
adc
jb
mov
push
mov
push
pop
and
push
std
adc
cmpsb
mov
sub
inc
mov
loopne
lods
lret
cmp
inc
mov
jns
sbb
and
cwtl
inc
dec
lcall
stc
sbb
stos
cmpsl
xchg
sub
mov
lcall
mov
fistps
popf
push
outsl
and
hlt
inc
adc
jnp
lods
insl
clc
in
mov
cmpl
cli
call
xor
sub
test
pop
or
roll
ret
mov
push
das
data16
or
pop
jo
ss
dec
inc
scas
cmpsl
jo
fwait
std
xor
imul
inc
xchg
lret
pop
adc
jecxz
inc
test
das
mov
daa
xchg
xor
mov
loop
mov
dec
inc
loopne
cmp
outsl
sbb
stos
jbe
push
pop
imul
cmpsl
push
mov
mov
cwtl
cmove
lcall
in
or
mov
push
adc
xor
into
and
outsl
add
pop
ret
pop
cmp
or
or
int3
jns
movsb
fs
mov
stos
ror
and
jg
and
in
jge
insl
mov
mov
scas
mov
xchg
mov
sub
flds
icebp
enter
flds
fstpt
pop
jnp
sub
jg
cmp
call
and
or
int3
pop
idivl
adc
shlb
hlt
scas
or
cli
inc
idiv
mov
and
and
jno
ljmp
sbb
mov
aad
mov
xchg
jae
clc
xchg
ret
push
int3
mov
and
push
lahf
lea
cmp
xorl
andl
cs
cmp
sbb
mov
je
xchg
sbb
and
out
loope
adc
pop
jo
addr16
sbb
sbb
push
dec
xor
stc
cmp
add
testl
js
jns
mov
adc
xor
rolb
dec
inc
andb
hlt
imul
jmp
pop
outsb
push
jl
mov
push
sbb
shll
andb
dec
xchg
cmp
xchg
vorpd
xlat
sbb
jb
fildl
lds
fwait
enter
je
push
sbb
scas
pushf
std
xchg
sub
rorb
repnz
movsb
or
iret
cmp
pop
mov
popa
or
push
sti
mov
jbe
pusha
es
push
clc
mov
or
cltd
lock
fs
xor
mov
jmp
gs
enter
ffreep
mov
jbe
out
mov
mov
cmpl
andb
mov
out
ds
push
pop
push
rcr
test
sbb
and
xchg
and
mov
mov
inc
xchg
sbb
cmp
mov
adc
gs
dec
bound
jns
cltd
or
sbb
mov
sbb
add
pop
xor
xchg
xchg
xchg
cltd
je
stos
xchg
fs
sbb
leave
out
and
std
mov
cmp
out
lock
mov
ja
push
movb
sub
mov
call
lahf
xor
pushf
pop
or
push
loopne
sti
cmpsb
movsb
jle
stos
movsl
test
repnz
or
inc
cli
out
fmull
cmp
fistl
mov
neg
and
ret
gs
mov
sub
mov
xlat
das
stos
mov
dec
push
cmp
cmp
pop
sbb
loopne
cmc
sub
ss
cli
sub
mov
add
add
sbb
cmp
mov
push
rcl
push
pop
mov
dec
cmpsb
popa
add
sub
lods
lret
mov
or
pushf
imul
sbb
enter
ret
adc
movsb
jp
sub
xor
nop
cli
lcall
int3
push
inc
push
dec
mov
mov
mov
outsl
imul
loop
sti
rcrb
sub
pop
aas
mov
cmpb
sbbl
sub
adcl
js
push
daa
nop
sub
xor
movsb
leave
comiss
nop
call
jbe
mov
int
mov
lret
inc
pop
sub
aam
push
test
inc
pop
xchg
pop
fcoms
imul
push
in
mov
pop
insb
jae
xor
jo
mov
xor
sbb
add
adc
inc
ljmp
mov
andb
adc
mov
popa
push
sti
pop
pop
xor
clc
lret
sbb
js
out
lret
aam
ss
cld
adc
mov
cmp
and
lock
cmpl
sbbb
jmp
enter
adcb
fdivs
mov
ljmp
push
bound
sub
sbb
aam
repnz
das
xrelease
inc
xchg
cs
mov
fbld
imulb
cmp
add
stos
and
and
cmp
cmpsb
xchg
xor
sub
into
sti
pop
jae
xchg
mov
push
out
test
jae
adcl
inc
xor
jo
push
xor
sub
xchg
js
push
mov
push
adc
lret
cld
add
movsb
lods
addr16
jno
int
inc
dec
pop
mov
mov
sti
mov
cmp
push
push
xchg
das
lea
mov
dec
xchg
arpl
jmp
and
push
ficoms
adc
xchg
jae
stos
fwait
cltd
add
and
shlb
and
jg
fdivl
enter
add
test
jbe
mov
xor
or
push
mov
fisubrs
out
dec
rcrb
clc
mov
push
mov
or
push
jge
pop
pop
movb
lret
xchg
ret
mov
adc
push
jecxz
ljmp
insb
jge
sub
mov
xor
xor
stos
mov
repz
and
sub
sbb
sbb
push
sbb
sbb
adc
fs
in
test
mov
pop
lods
sahf
pop
and
xchg
cwtl
inc
out
in
inc
fsts
or
push
mov
fwait
addr16
out
aas
mov
fs
call
stos
sub
jmp
sub
stc
movsl
sub
out
test
push
pop
stos
push
movsb
lcall
popf
cmpsb
pop
or
lds
fs
dec
cmp
ret
add
lock
add
lds
imul
mov
xor
fldenv
out
mov
pop
lea
jl
jg
leave
xchg
and
sub
jns
and
or
test
xor
div
cs
xchg
xchg
test
mov
or
inc
lret
roll
pop
out
mov
adc
push
into
inc
xchg
inc
aad
cwtl
pop
pusha
lcall
les
and
cmp
cmp
mov
stos
ficompl
out
sub
xchg
fsubp
cmp
outsl
jecxz
lret
add
fwait
out
mov
int
inc
js
addb
xchg
fs
bound
fidivl
dec
mov
ficomps
lret
rclb
fiaddl
outsb
jecxz
sti
pop
add
enter
xchg
mov
jp
mov
xor
cmp
add
and
sub
cmpsl
push
clc
lahf
sbb
jno
jmp
mov
adc
mov
dec
pop
or
push
mov
jae
arpl
and
rcl
in
push
dec
cmpsb
cmp
adc
popf
out
jecxz
jp
sub
sbb
add
add
xor
iret
jno
sub
les
aas
js
shlb
xor
cltd
xchg
mov
push
and
out
jl
dec
pop
cwtl
pop
loope
jne
add
xchg
inc
dec
inc
int3
test
addr16
mov
pop
cs
ljmp
sub
nop
in
inc
mov
push
xchg
outsl
incb
cli
lea
push
add
fcompl
mov
mov
sbb
arpl
idivl
loop
xchg
jne
in
and
stc
leave
cwtl
enter
movsl
xchg
dec
xchg
push
or
jb
add
sub
mov
xor
dec
mov
xchg
pusha
inc
adc
dec
push
dec
mov
jo
push
lods
and
pop
lock
mov
test
nop
mov
and
adc
inc
pop
or
xlat
xor
inc
pusha
adc
mov
pop
pop
in
xor
sbb
xor
mov
repnz
push
push
popa
inc
push
xchg
mov
inc
test
or
dec
or
xchg
cmp
cwtl
inc
shlb
sbb
sbb
dec
je
movsb
mov
clc
cmp
mov
ljmp
push
test
xlat
mov
adcb
mov
inc
inc
cmp
jne
imul
fisubl
mov
push
add
add
pop
shlb
dec
imul
add
push
dec
dec
int3
fstpt
imul
and
fsubrs
jp
xor
adc
test
orb
loopne
adc
ret
xchg
add
ss
inc
inc
dec
js
cli
inc
mov
adcl
or
mov
ret
jo
sbb
dec
adc
cmpsl
adc
push
in
push
and
mov
and
and
mov
js
frstor
dec
push
pop
sahf
push
pop
sbb
nop
jno
pushf
jbe
fiadds
in
inc
cmovle
and
lods
enter
iret
mov
push
jne
fmuls
inc
cmpsl
lods
inc
ja
push
pop
faddl
push
sub
pop
shll
and
xor
subl
push
jge
outsb
push
or
adc
movsl
pop
pop
mov
sbb
repz
das
xor
jecxz
rcll
cmpsb
std
jb
mov
rep
and
fidivs
jl
movsb
mov
and
test
ja
outsb
sbb
popf
add
test
push
imul
push
mov
push
sub
push
hlt
xor
push
add
lret
mov
fidivrl
xchg
inc
loop
icebp
popa
ds
add
je
daa
mov
mov
test
sti
out
mov
lods
inc
inc
inc
or
out
aas
repnz
dec
cmp
sbb
push
nop
call
push
fwait
test
xchg
repnz
shrb
sub
mov
lock
sbb
imul
jns
inc
mov
popa
movsb
xor
or
imul
jbe
ffreep
data16
lods
cmp
das
and
xor
push
adc
leave
and
xlat
fs
xor
or
loopne
mov
aam
inc
insl
sbb
dec
stos
lock
nop
cmp
aam
movsb
icebp
cwtl
add
push
or
adc
add
ret
jnp
in
adc
lock
cmp
push
ret
clc
out
iret
cmpsl
enter
jg
xor
jmp
test
xor
int3
aas
add
or
mov
inc
scas
icebp
pop
mov
and
shr
cltd
inc
jmp
inc
jo
out
test
into
es
fisttps
lcall
cmpsb
jns
and
repnz
int3
push
push
or
aaa
js
mov
lds
pop
xchg
inc
mov
pushf
mov
cmp
repz
mov
leave
cmpsl
or
push
loop
outsl
inc
loope
stc
out
push
idivl
jmp
xchg
sub
jp
mov
std
sub
push
pop
and
push
jo
mov
cltd
iret
push
xchg
dec
sbb
xor
dec
mov
loope
push
fsts
cli
or
xor
cltd
push
dec
or
mov
aad
push
cmp
push
push
inc
ljmp
mov
icebp
in
push
mov
xlat
or
cmc
cmp
sub
xchg
jne
test
ja
xchg
fndisi(8087
pop
clc
outsl
aam
mov
fcoml
add
test
jne
jns
or
sub
mov
mov
xchg
fabs
pop
fdivrs
fimuls
sbb
jge
push
xor
jmp
lods
xor
inc
mov
add
sbb
xor
push
xchg
fcmovnu
in
out
push
xchg
filds
hlt
fwait
or
out
lods
shrl
clc
out
and
mov
inc
jb
mov
stc
repnz
bound
mov
cwtl
adc
sbbl
stos
jns
mov
scas
pop
xchg
mov
rolb
mov
addl
ret
loopne
xlat
mov
in
fdivl
out
add
xorb
cltd
add
aaa
bound
fstpl
js
sub
insb
fsts
cltd
shl
lret
cld
and
pop
mov
mov
and
xor
mov
hlt
cltd
mov
sub
fdivrs
and
aaa
sub
mov
xor
pop
andb
push
popa
and
jmp
fstps
pop
sbb
in
lcall
mov
mov
cmpsl
xchg
in
hlt
mov
loope
xchg
divl
ss
sub
xor
sarl
pop
arpl
xchg
popa
insb
dec
adc
das
push
jmp
add
stos
mov
adcl
inc
push
mov
dec
mov
test
mov
xor
stos
or
xchg
aam
xchg
inc
pushl
add
xchg
jl
loopne
add
insl
arpl
clc
push
cltd
cli
data16
add
jnp
out
es
cld
fisubl
pop
andl
mov
push
addl
xchg
cwtl
xor
fsubrs
mov
mov
jle
ds
mov
into
addb
or
sub
fwait
xchg
dec
xor
jns
fnstcw
int
stc
dec
sbb
lcall
jl
jns
dec
aaa
sbb
mov
pop
mov
sub
pop
sbb
lret
adc
dec
add
inc
adc
dec
jb
jb
gs
andb
je
jne
hlt
inc
mov
xchg
sahf
sub
cmp
sarl
test
cmp
aas
xlat
add
int
xor
adc
mov
xor
lahf
xchg
jmp
divl
cli
push
stc
sbb
daa
mov
mov
cmp
adc
addl
mov
adc
push
jg
and
stos
push
xor
dec
sbb
inc
xor
inc
js
popf
imul
pop
inc
ljmp
adc
movsl
in
nop
pop
sbb
xchg
repnz
addr16
aaa
sti
and
test
aam
enter
sbb
push
add
jbe
jb
pop
and
mov
lret
mov
jge
enter
icebp
fstl
fmull
xor
inc
and
repnz
jns
enter
jge
jne
mov
adc
out
cltd
insb
mov
xchg
and
mov
xchg
mov
mov
pop
cmpsl
pop
mov
jp
jg
mov
outsb
adc
outsl
sub
and
das
inc
adc
xor
sbb
int
fs
cmpsl
rcrl
clc
out
sbb
mov
daa
sbb
inc
mov
fstps
xor
pushf
push
xchg
fs
nop
outsb
fldenv
ret
jno
push
jns
mov
add
mov
push
inc
push
push
ret
jge
dec
insb
out
inc
sti
ret
mov
imul
cli
lret
or
loope
push
fisubrs
xor
rcll
jecxz
rcrb
je
dec
out
test
in
int
std
fimull
mov
sub
inc
shrb
dec
or
jae
je
adc
cwtl
loope
jge
xchg
dec
fidivl
icebp
mov
mov
aaa
fsubrl
hlt
xor
popa
out
mov
lods
xchg
push
scas
addr16
hlt
std
pop
aad
loopne
adc
and
mov
je
pop
ffree
imul
add
lcall
dec
inc
lea
mov
addr16
call
aaa
ds
ds
cmpsb
or
mov
test
jnp
lret
into
hlt
pop
ret
rol
stos
rcl
mov
mov
cmpsl
mov
repnz
jno
xchg
int3
and
mov
icebp
call
dec
imulb
pushf
or
mov
mov
add
pop
imul
xchg
mov
lret
inc
pop
js
sbb
clc
pop
ret
pop
push
mov
lods
daa
ret
jb
add
outsl
add
call
pushf
dec
int
mov
jle
sub
in
pop
sub
gs
or
comiss
jnp
out
adc
sbb
add
fcoml
cmp
loopne
xor
dec
mov
mov
into
fisttpll
inc
push
out
mov
mov
mov
ja
xchg
mov
inc
and
fstl
xchg
lods
cli
jle
mov
inc
or
jo
mov
jb
call
mov
daa
xchg
push
cmpb
sti
aas
roll
lock
push
and
jns
jo
in
add
xchg
out
dec
cltd
ror
and
sbb
cmpsb
jge
hlt
adc
and
popa
adc
xor
sub
mov
out
fninit
fwait
stc
sub
cmc
iret
pushl
mov
repnz
adc
xor
mov
push
imul
rcrl
push
roll
in
and
and
repz
dec
cmp
fwait
daa
out
sbb
fidivs
faddl
loop
movsb
fisttps
cmp
dec
xor
std
lret
add
cmp
pop
mov
sub
mov
in
xor
mov
and
insb
test
sahf
hlt
test
cld
pop
push
push
mov
fs
dec
rcll
push
inc
leave
pusha
sub
fwait
adc
outsl
fidivrl
clc
dec
dec
adc
insl
in
shrl
inc
push
hlt
xchg
mov
bound
in
clc
or
shll
mov
inc
sub
sbb
xor
add
clc
mov
and
xor
add
and
mov
sti
test
aad
imul
mov
dec
aaa
popa
addb
nop
add
fldcw
lea
sub
test
jg
mov
fimuls
push
xchg
sbb
sub
and
jb
xchg
jmp
sbb
rcrl
aas
nop
in
stos
push
pop
mov
xchg
cvttps2pi
cmpb
mov
out
mov
orb
repnz
sar
dec
sub
scas
mov
mov
in
adc
sub
mov
sub
inc
or
rcrb
dec
jo
sub
popf
stos
ss
pop
icebp
sub
rcrl
jo
out
loop
mov
add
lret
iret
clc
dec
into
aas
mov
int
inc
xlat
ret
int
cmpsl
je
sahf
icebp
jle
adc
jg
inc
jno
pop
mov
mov
or
bound
movsb
xchg
xor
jge
adc
sbb
loop
out
leave
repnz
stos
lods
lock
movsb
std
and
and
lock
fnstsw
xor
push
lea
xlat
sti
or
jns
cmp
mov
fadds
mov
fwait
lock
std
adc
das
dec
pusha
sub
xchg
add
cwtl
dec
inc
faddp
push
add
mov
mov
lods
sub
sub
fwait
jo
mov
mov
test
sub
lahf
call
jmp
mov
sbb
dec
and
mov
xchg
inc
sahf
insl
mov
cmc
pop
push
xor
stos
push
mov
iret
dec
ljmp
inc
dec
sub
and
pop
jo
rorl
mov
mov
fwait
aad
add
xchg
bound
cmp
adc
lds
icebp
sub
repnz
repnz
mov
pop
mov
xor
jnp
or
cld
lret
cmpsl
xorl
je
rorb
lds
aam
add
pushf
xor
or
pop
int
mov
rcrb
in
outsl
cmp
xor
stos
out
jns
mov
mov
lea
sbb
push
push
test
repnz
and
xor
lret
popf
popa
push
jge
insb
test
inc
in
add
or
stc
push
mov
xchg
push
add
sub
loop
lea
repz
xor
xlat
and
sbb
cwtl
fmul
pop
xor
dec
add
cmp
repz
jecxz
mov
xchg
aaa
jp
popa
xor
push
adc
xchg
hlt
xor
mov
stos
add
daa
popf
rcl
fiaddl
shlb
aas
lds
imul
pusha
rclw
ds
call
add
lods
fnstsw
cmp
xchg
jns
push
repz
repnz
popf
xor
fs
cmpsl
push
mov
int3
mov
or
test
shll
cmp
enter
out
push
pop
ret
movsb
push
sub
xchg
dec
cli
xchg
add
inc
stc
lods
add
and
xchg
insl
sahf
insl
adc
adc
popf
mov
sub
push
nop
movl
adc
push
jecxz
bound
add
into
cmp
inc
enter
pop
movsl
xchg
inc
adc
pop
xchg
cmc
jle
sbb
enter
rclb
sbb
jmp
mov
call
fs
add
mov
mov
adc
mov
in
cwtl
dec
icebp
jl
push
mov
ret
mov
nop
jns
xchg
push
mov
jp
in
gs
inc
loope
sbb
cs
sub
xchg
pop
out
xchg
scas
sarl
fs
jg
ss
adc
cmp
adc
outsl
sub
jae
push
fldt
jne
orb
jb
add
out
out
mov
mov
add
sahf
inc
adc
int
aad
std
pusha
sbb
and
mov
mov
inc
sti
and
testb
sbb
jg
pop
scas
fistpl
mov
adc
mull
clc
dec
jb
push
xchg
bound
jo
jp
dec
mov
mov
ficoml
adc
aas
rorb
sub
ret
enter
push
dec
dec
cltd
cld
xor
scas
push
mov
xlat
je
ret
dec
xor
lahf
stos
xor
xchg
xor
sbb
push
movsl
jae
into
aam
lods
test
xor
out
sbb
pop
cmc
in
bound
es
pop
or
adc
sbb
or
sbb
push
push
jg
sti
cmp
add
rclb
mov
repnz
adc
push
inc
cmp
das
hlt
aad
in
xchg
loop
pop
les
scas
or
test
pop
sbb
pop
sbb
dec
stos
jge
cmp
bnd
call
subl
xchg
push
cwtl
cmpl
das
pushf
pop
jae
aas
xchg
test
inc
test
inc
sti
push
leave
mov
cltd
push
pop
mov
es
arpl
dec
or
and
sbb
cli
les
jnp
rcll
xchg
sbb
arpl
lock
ficoms
mov
je
sub
testl
das
pusha
and
dec
call
jmp
pop
pop
hlt
cmp
call
fdiv
fs
shl
insb
pop
cmp
into
jge
jns
or
jne
rcl
jbe
mov
lods
out
jae
out
icebp
mov
pop
dec
pop
in
push
js
decb
jg
pop
xlat
push
cmpb
xor
cmpsl
jae
sahf
add
mov
mov
and
xor
popa
jne
push
test
negl
arpl
mov
fisubrl
mov
aam
notb
xchg
fs
pop
rorl
es
insl
adc
or
xlat
xchg
sub
dec
das
js
sub
cli
or
mov
add
lods
cmp
jno
test
mov
adc
or
ficompl
dec
fs
adc
push
pop
aas
inc
call
sahf
test
dec
imul
xor
xorb
xchg
xor
lahf
movsb
ss
mov
jg
mov
ret
popa
pop
fimuls
aaa
cmc
and
cli
dec
sbb
dec
or
xchg
add
lods
push
and
mov
dec
dec
mov
std
or
cmp
adc
ljmp
pop
dec
mov
inc
stos
in
mov
or
out
xchg
xchg
mov
mov
or
fmuls
inc
cmpsb
outsb
pop
sbb
mov
pop
mov
adc
lcall
hlt
out
ss
jmp
pop
aaa
mov
and
sbb
shr
enter
es
insl
lret
movsb
push
pop
adc
sub
xchg
pop
in
and
add
push
insl
cltd
xchg
fistps
sub
xor
cmp
js
iret
ss
push
or
int3
stos
daa
and
adc
mov
inc
pop
push
scas
fwait
push
inc
lock
fidivl
or
or
fs
test
xor
xor
xor
push
inc
cmpsb
or
pop
in
jo
adc
mov
dec
push
jle
push
cmp
adc
or
mov
pop
lds
imul
adc
std
lods
shll
mov
xchg
mov
dec
adc
aas
dec
aaa
push
pop
dec
aam
ficompl
int3
lea
push
dec
js
es
mov
or
sbb
imul
jecxz
dec
testl
xchg
jmp
inc
sti
daa
xor
and
add
inc
xchg
icebp
sub
loop
addr16
and
imul
or
push
loop
leave
pop
divl
shll
imul
mov
mov
loopne
push
or
xor
sbb
pop
mov
or
mov
lahf
sti
mov
sbb
ret
add
push
adc
xor
push
lods
inc
xor
xchg
shl
lock
pop
xchg
dec
push
cmc
sbb
in
nop
cmp
scas
xchg
out
push
push
jl
inc
jecxz
daa
imul
lock
mov
das
push
and
inc
dec
cmp
mov
es
adc
jge
in
rclb
sbb
mov
test
push
test
aaa
lods
fldenv
sbb
les
ret
mov
mov
adc
dec
je
xor
pop
lcall
mov
or
xor
push
divl
dec
dec
sbbl
daa
test
lahf
inc
mov
ficoms
enter
clc
inc
icebp
es
in
and
pop
loop
rcr
enter
shll
cmpsb
push
scas
sbb
sahf
sub
popa
and
cltd
push
mov
mov
cli
push
ja
dec
cltd
mov
data16
push
stc
js
test
test
nop
das
std
aam
cmp
mov
dec
lcall
data16
shlb
dec
and
stc
sub
or
lret
call
lret
not
add
jp
jne
jle
popf
ljmp
in
in
or
mov
fistps
inc
aaa
jne
aas
decl
lea
lea
pop
nop
mov
xor
adc
incb
push
call
xor
and
loope
xor
sbb
pop
pusha
sar
out
and
lods
div
scas
mov
mov
ss
dec
inc
mov
addr16
mov
dec
stc
adc
gs
jge
sub
push
pop
pop
xchg
add
xchg
outsl
scas
jbe
mov
loopne
mov
sub
mov
xchg
in
mov
popf
jns
mov
sub
fildl
fwait
sbbl
lret
inc
and
push
test
xor
popa
gs
nop
and
and
rol
xchg
hlt
std
outsl
dec
and
mov
movsb
je
sarb
cld
adc
cmpsl
daa
loopne
push
loope
push
xchg
dec
test
dec
insl
sbb
iret
test
repnz
add
xchg
jge
xchg
sbb
sbb
adc
nop
ds
inc
clc
adc
loopne
decl
xchg
pop
outsl
cmp
in
lret
add
ja
and
in
loope
xchg
notb
lret
gs
jmp
mov
xchg
int3
or
mov
imul
inc
insl
add
jae
cmp
scas
mov
arpl
inc
loope
sbb
or
sbb
and
call
iret
loop
dec
cmp
sti
add
cld
xor
mov
push
cltd
loopne
fs
test
inc
sub
jns
cmp
lods
mov
push
lock
stc
dec
cmp
cmp
push
loope
in
xor
xchg
lret
add
xor
clc
movsl
sbb
jmp
xlat
hlt
xlat
xor
push
lds
and
xor
mov
push
testl
mov
orl
aaa
repnz
push
call
jmp
out
das
sub
pop
out
lds
ja
stos
shll
clc
leave
pop
mov
pop
jb
lcall
cmpsl
in
pusha
lea
adc
fistpll
subl
push
sbb
arpl
sub
lock
jl
imul
xchg
dec
xchg
mov
jbe
clc
jns
sub
xor
xchg
repnz
addr16
lret
into
lea
mov
bound
lea
add
pop
dec
test
and
sbb
inc
loop
push
ret
jmp
in
lock
movsl
dec
mov
and
jge
cwtl
loopne
pop
and
cmp
nop
xlat
cmp
dec
out
repz
sub
push
lret
and
or
xchg
mov
cmp
out
dec
add
int
inc
xor
cmp
fldenv
idivl
in
fldl
add
data16
add
jbe
sub
in
inc
mov
lcall
jbe
mov
push
or
jle
lock
hlt
jg
ficomps
int
add
add
dec
sub
jb
push
and
jmp
out
mov
dec
loope
xchg
out
lock
jno
ficoms
out
xchg
jno
cmp
pushf
daa
and
mov
xor
negb
lods
ret
cmpsb
xchg
cmc
push
in
test
sub
xor
or
cmovbe
and
stos
out
xor
push
je
and
cmp
fidivs
ja
cltd
inc
mov
je
jns
test
add
sub
jge
xchg
mov
cmp
add
popf
std
clc
add
popa
push
mov
push
jl
imul
mov
sub
idiv
je
mov
adc
in
mov
mov
lds
aad
pop
mov
hlt
mov
add
push
xor
loopne
and
mov
test
xor
and
pop
arpl
sbb
shrb
and
and
rcll
das
dec
arpl
testl
int
lret
test
pop
js
cli
dec
sar
divl
and
sub
pushf
adc
cmp
jmp
sbb
jl
jl
fcoml
xchg
iret
mov
repnz
mov
sub
pop
mov
sub
das
mov
jmp
adc
pusha
xor
add
adc
call
addr16
in
clc
push
push
shrb
ret
jns
jo
int3
mov
stos
negb
daa
clc
aaa
mov
pop
mov
aam
in
jb
cld
cmp
andb
mov
aam
fwait
add
stos
sarl
add
xchg
cmp
push
jnp
stos
xchg
les
and
mov
add
cmpb
inc
scas
xor
inc
faddp
cmpb
imul
pop
push
stos
jp
inc
xor
out
cmpsl
adc
inc
cmpsb
add
push
push
add
and
cltd
sub
nop
jns
idivl
popa
and
data16
movb
lret
loope
insb
dec
data16
and
pusha
fsts
pop
xorps
mov
loopne
ficomps
dec
xor
ret
adc
cltd
xlat
out
xor
aad
mov
push
jae
int
pop
shrl
cli
shlb
xlat
jle
ljmp
cmp
mov
loope
daa
sbb
pop
jnp
cmc
mov
mov
gs
outsl
popf
adc
mov
mov
mov
aad
stos
repz
out
fs
hlt
cmpsb
iret
or
mov
jns
push
lods
adc
aam
std
nop
lcall
leave
daa
jb
cmp
pop
daa
out
sub
pop
les
mov
in
cmc
rcll
popf
scas
push
and
jmp
inc
push
loope
lods
ja
xchg
dec
loop
and
mov
fstpt
mov
and
cmp
adc
das
xchg
fwait
in
in
sub
add
mov
in
pop
cmpsb
xchg
fildl
and
xchg
popf
xchg
inc
movsl
inc
roll
ljmp
ds
jp
das
mov
sub
loop
push
dec
int3
jae
mov
stos
inc
decl
push
sti
rcrl
adc
jno
pop
in
pop
inc
out
iret
mov
imull
cmp
xlat
lods
int3
jne
cld
dec
jp
xor
add
dec
xchg
add
xlat
les
mov
call
dec
cld
cmp
sarb
cmp
call
in
cmp
aas
dec
dec
add
cwtl
pop
cli
daa
xchg
push
dec
inc
aas
pop
std
leave
jnp
test
lods
or
jp
inc
ret
xchg
ss
popa
dec
cmp
imul
lret
into
mov
mov
gs
inc
push
xor
lcall
cmp
xlat
int
mov
fnstenv
and
pop
lcall
faddp
cmp
xlat
mov
jnp
jl
sti
nop
adc
xchg
nop
out
push
xchg
out
push
loop
sbb
dec
mov
rcrb
shlb
adc
cmp
out
rcrl
leave
dec
sub
mov
icebp
mov
scas
call
fldt
cmp
jb
fsub
mov
mov
mov
xchg
enter
and
sub
mov
lea
push
das
movsl
add
mov
data16
adcl
inc
aas
mov
push
ja
or
mov
inc
lret
pop
fmul
jecxz
sub
xchg
sbb
pusha
jg
xlat
sbb
dec
and
jmp
mov
jo
jmp
loopne
sub
xchg
rcll
xor
stos
jecxz
insb
mov
mov
into
imul
sbb
adc
insl
pusha
pop
clc
inc
push
ror
xor
adc
xchg
out
jno
jge
mov
lock
xor
mov
or
pop
fwait
xor
or
lock
pusha
push
jno
ja
cwtl
dec
mov
jl
mov
inc
and
inc
testl
movsb
div
ror
out
xor
cli
mov
push
aad
cmp
xchg
into
std
mov
inc
mov
subb
xlat
int3
lock
pop
inc
fidivrl
loopne
cmp
lret
ds
ss
mov
insb
dec
les
mov
fwait
mov
fildll
cltd
mov
mov
mov
mov
and
adc
lea
and
shrb
push
hlt
mov
sub
and
scas
sahf
out
in
push
sbb
outsb
insb
inc
dec
test
repz
pop
in
in
mov
shll
pop
cltd
test
out
fnstenv
lds
push
outsb
add
mov
and
pop
nop
mov
cltd
add
popa
dec
outsb
add
dec
fiadds
rcr
push
sbb
scas
int
jb
lcall
jmp
mov
add
pop
mov
sbb
fdivrl
popf
mov
movsb
mov
sub
decb
mov
dec
add
adc
std
jl
ljmp
pop
lret
inc
jo
xchg
or
lock
mov
sbb
xor
sub
leave
sub
cs
std
cmp
outsl
jo
out
icebp
or
push
xor
lods
xchg
dec
jne
addr16
cmp
and
test
neg
ss
pop
mov
push
sbbl
or
cmp
pop
mov
iret
scas
cwtl
pop
out
cmp
adc
sub
jecxz
addb
mov
or
inc
mov
inc
pop
lods
gs
scas
dec
insl
lods
dec
cmp
testl
in
fsubl
mov
call
mov
fidivrl
jns
outsb
xchg
jp
data16
mov
dec
loopne
mov
sub
dec
stos
pop
sbb
cmc
sub
dec
popa
ljmp
repz
ficomps
pop
jmp
inc
mov
or
leave
xor
gs
pushf
movsb
int
repnz
add
sub
pop
leave
mov
iret
cltd
stos
push
xchg
add
test
mov
mov
xlat
cmpb
subb
adc
ljmp
lds
sbb
cmp
or
rorb
mov
stos
fildll
jb
in
xor
add
daa
mov
mov
pop
and
pop
or
mov
movsl
jmp
insb
sbb
stos
inc
pop
jno
fcmovnb
push
aam
cs
aaa
jnp
icebp
bound
xor
mov
jmp
addr16
and
shlb
xchg
dec
mov
jl
or
in
test
xchg
out
mov
pop
ror
sub
vunpckhps
inc
repnz
mov
gs
mulb
clc
enter
pop
pop
stc
xchg
and
mov
push
scas
mov
jae
lahf
cmp
flds
fs
div
ljmp
shr
mov
xor
pop
test
xchg
xor
lds
repz
mov
adc
sarl
int3
pop
andl
jg
lret
iret
int3
push
inc
sbb
pop
dec
decl
jb
push
adc
rclb
pop
add
cmc
fstpl
mov
mov
push
sbb
dec
pop
jg
cmpsb
xchg
popa
outsb
addr16
mov
ds
rorb
fstp
jl
test
or
sub
and
pop
xor
xchg
adc
daa
scas
lods
pop
clc
ret
sahf
ret
lods
jmp
fs
jmp
hlt
sub
cmpsl
cli
push
add
sub
mov
leave
fsub
xlat
sub
push
scas
sub
push
ljmp
movsb
nop
imul
add
cli
lret
mov
lret
mov
lock
subb
or
xchg
lea
ss
sub
xchg
std
mov
inc
adc
out
aaa
jp
gs
fs
dec
das
out
aas
sahf
out
cmp
pop
and
xchg
mov
pop
out
les
daa
mov
repz
lods
mov
mov
dec
lahf
in
or
std
jns
jnp
rolb
pushf
ret
pop
je
pushf
or
dec
cli
push
mov
fsts
and
cwtl
cmp
fsubrp
fsubr
xchg
jl
addb
inc
shll
imull
loop
inc
repz
fwait
call
mov
pop
jnp
cs
adc
adcl
mov
pop
fistl
inc
fwait
mov
inc
xchg
iret
and
xchg
mov
scas
fstpt
aad
out
das
sbb
ljmp
mov
cmp
jno
enter
sub
ljmp
inc
push
push
mov
loop
testl
jg
incb
mov
test
add
cmp
sub
out
jecxz
mov
into
movsl
je
dec
imul
outsl
xor
call
push
out
add
fidivrs
cld
xchg
out
adc
lahf
sub
pop
int
sbb
cmp
sub
lret
aad
popa
jp
mov
fs
cmp
les
xor
imul
stc
addr16
add
aam
fistps
inc
sbb
sub
test
ja
leavew
out
mov
adc
jb
mov
mov
mul
popf
adc
orl
js
stos
add
add
roll
cs
icebp
nop
fists
jbe
and
lock
adc
in
loope
repz
jmp
inc
fs
mov
dec
out
inc
addb
pop
sbbl
in
addr16
les
mov
clc
and
insb
popl
in
outsl
inc
loopne
sub
add
lea
or
nop
sub
mov
dec
pop
stos
dec
sub
fstps
and
lcall
sahf
sti
shll
out
mov
addr16
jle
jg
add
lret
mov
stos
aaa
dec
scas
sub
jne
jo
leave
add
inc
out
push
xor
inc
stos
std
xchg
ljmp
or
lods
and
cwtl
lahf
cmc
adcb
lret
mov
pop
jno
push
jl
jmp
xchg
or
stos
in
mov
outsl
xchg
daa
jge
arpl
data16
in
shlb
cmpsl
sbb
fisubrl
pop
mov
scas
stos
ret
push
lret
fsubl
or
mov
jae
mov
mov
xchg
ljmp
dec
cld
cs
andb
or
jle
cmp
loop
outsb
pop
in
mov
add
neg
imul
loop
cmp
pop
mov
aam
pop
sub
rorb
push
cmp
pop
outsl
pop
xchg
outsb
sub
jge
inc
xor
jl
mov
subb
pop
jbe
xchg
loopne
fdiv
add
pop
mov
jns
test
mov
data16
cs
pusha
adc
dec
mov
pop
xorl
rcll
mov
insb
repz
and
pop
aaa
jmp
inc
mov
and
xlat
push
cmp
orb
das
jae
in
stc
add
sgdtl
sub
loop
jmp
imul
popa
xchg
mov
daa
fidivrs
cli
mov
mov
or
add
cmp
test
lea
mov
gs
shrl
ss
pop
ja
dec
sub
rcl
movsb
stos
vmovupd
xor
lret
rcrb
xchg
add
mov
mov
decl
xor
test
lea
push
add
jo
rcrl
scas
and
cltd
mov
cmp
imul
fcoms
or
jle
fmull
jno
cmp
pushf
ret
loop
leave
mov
or
repnz
xor
repz
loope
mov
push
popf
pop
lret
mov
xchg
sub
rcrl
jle
insl
or
dec
addr16
pop
mov
pop
push
call
cltd
movsl
std
leave
xchg
pop
test
xchg
pusha
in
or
inc
loope
clc
loope
add
sbb
outsb
insb
repz
pop
movsb
stos
push
popf
mov
hlt
jmp
pop
sbb
xchg
inc
psrad
xchg
mov
js
popf
mov
adc
repz
push
lds
addb
cmc
in
xchg
pop
repnz
pop
repnz
lcall
xchg
and
call
inc
mov
loope
add
pop
xor
pop
sbb
lcallw
mov
shl
cmpsl
fs
xchg
xchg
test
xor
mov
add
sbb
inc
ret
testb
out
cmp
push
in
out
ds
stos
test
sub
xchg
mov
les
jp
and
cmp
jae
lods
dec
pusha
push
in
ds
push
pop
mov
inc
sti
sub
imul
and
sbb
bound
mov
es
das
les
pop
pop
lcall
sarl
ret
jle
pop
jecxz
mov
or
pop
cmp
or
lret
mov
das
dec
cmp
lret
sbb
sbb
xchg
push
stc
pop
mov
test
lods
adc
pop
sub
push
sbb
or
std
push
iret
shlb
xchg
ret
mov
xchg
insl
fs
and
sbb
js
popa
xchg
pop
repnz
aas
sti
mov
sub
xor
pop
adc
mov
sti
jae
sahf
cmp
push
nop
push
dec
jl
cld
adc
mov
and
gs
sub
pop
shrb
inc
jbe
mov
add
je
mov
nop
jge
fdivl
xor
pop
adc
sti
mov
lock
mov
stos
int
dec
cwtl
xchg
iret
inc
shr
sbb
dec
jbe
inc
pop
rcrl
ja
mov
lret
sub
movsb
repnz
xchg
mov
nop
fisttpl
push
ljmp
ss
pop
rcll
push
inc
push
push
and
shlb
pop
inc
ljmp
dec
in
mov
sti
and
fisttps
sar
mov
xchg
and
mov
lahf
out
nop
rcll
xchg
and
test
xchg
andl
sahf
and
pop
sub
pop
mov
lods
jb
gs
cmp
mov
push
out
shlb
pop
push
sbbl
mov
or
in
mov
dec
xchg
and
xor
xor
mov
mov
sub
repnz
xor
pop
icebp
and
std
cmpsl
repz
push
dec
xor
xchg
movsl
test
sbb
or
shrb
aad
scas
rcll
xor
ret
xor
mov
adc
sub
sub
mov
jecxz
lret
push
xchg
add
mov
xchg
bound
and
aas
mov
mov
mov
cmc
jb
xchg
jmpw
stos
arpl
in
subb
mov
loop
ret
test
push
rcrb
lods
or
add
xchg
inc
and
insl
sub
fnsave
jmp
aad
test
mov
ja
shll
sub
fs
push
mov
dec
movsb
and
push
pop
inc
ffree
in
sub
js
push
xor
push
loopne
cmp
ficoml
rorl
push
js
push
lock
ljmp
repz
add
xor
sbb
inc
sbb
add
dec
cmp
xorl
push
int3
add
imul
pop
dec
pop
int3
in
xchg
int3
add
mov
lods
inc
lret
or
clc
ficompl
push
pop
xchg
mov
int3
ja
cmp
sub
rcrl
pop
push
jge
mov
sub
add
lods
imul
mov
push
push
and
inc
push
xor
mov
in
jno
or
inc
cmp
push
fsubs
push
jno
int
lahf
mov
sahf
inc
cltd
out
in
xlat
adc
dec
mov
pop
stc
jbe
push
inc
inc
jae
notl
jae
jo
fwait
mov
lods
insl
stos
out
or
xor
stc
push
jl
inc
push
shrb
mov
lods
mov
dec
ljmp
cmp
mov
mov
adc
js
clc
push
pcmpgtd
push
mov
out
rcll
nop
mov
dec
rorb
jmp
pop
aas
cmpsb
mov
push
addr16
cmp
xchg
jnp
int3
mov
pop
pop
lds
pop
je
xchg
stc
cwtl
xchg
into
sub
in
mov
cs
push
adc
sbb
enter
loopne
mov
cmp
push
cmp
xlat
inc
push
insb
push
mov
adcb
ss
jno
jmp
cli
push
adc
pop
xchg
xchg
pop
mov
add
jecxz
or
adc
cmpl
pop
mov
and
pop
mov
jecxz
or
popf
add
movsl
push
popf
jge
ss
mov
test
inc
pop
ss
push
es
push
mov
and
add
xor
imul
test
sub
das
shl
mov
push
add
rclb
dec
adc
std
insb
xchg
lret
mov
jno
xlat
cld
ljmp
jp
bound
in
in
pop
testb
repz
xor
push
sbb
rorb
dec
shll
pop
data16
mov
mov
loopne
je
mov
and
int3
aad
cmp
or
mov
ret
add
pop
jns
cmpsl
inc
imul
imul
mov
dec
mov
mov
adc
push
xor
mov
mov
loope
cwtl
outsl
add
sub
ljmp
in
jbe
cmp
cli
inc
fadds
jmp
dec
pop
outsb
xchg
dec
test
or
mov
xchg
adc
imul
xchg
inc
movsb
sub
and
imul
lods
inc
mov
repnz
cli
lods
lock
neg
popf
int3
pop
dec
adc
sahf
cmp
or
out
pop
insl
push
je
adc
jne
dec
outsb
fucomip
push
or
xchg
cltd
add
test
pop
sahf
xor
outsb
sub
hlt
aad
das
out
inc
add
push
dec
sub
dec
pop
ljmp
movq
outsl
or
aaa
jns
dec
sti
loop
sub
lcall
lcall
mov
jl
outsb
inc
mov
add
xchg
repz
push
mov
mov
lock
mov
cli
lods
dec
lahf
cmpsl
xor
cltd
cmp
icebp
mov
cmp
ret
test
mov
mov
jg
jae
jb
xchg
mov
and
pop
cli
iret
cwtl
xchg
cld
pop
or
fwait
cli
inc
rcr
pop
sbb
xor
pop
cvtdq2ps
scas
add
cld
dec
cmp
jg
xchg
pusha
or
inc
inc
mov
mov
xchg
sub
test
push
mov
push
add
bound
mov
cmp
call
jne
lods
imul
lods
idivl
testb
cmp
fucomp
int
scas
lods
push
cmpsb
outsw
adc
scas
xchg
rcrl
negl
lcall
jg
and
int3
jg
cmp
fcomps
xor
out
lahf
insb
pop
pop
lret
jecxz
subb
or
lods
pop
enter
pop
les
iret
in
dec
mov
xor
addb
mov
aad
xchg
push
es
push
xchg
fistl
sub
push
in
aas
and
pop
les
pop
sub
adc
dec
popa
arpl
xchg
in
jg
xor
sar
int3
movsl
mov
add
push
loope
xor
stos
xor
cltd
int
jp
and
movsl
mov
loopne
loope
adc
pusha
shl
xchg
fstpt
push
leave
fwait
mov
and
push
in
sub
mov
jmp
std
aas
sub
aaa
add
stc
imul
pop
push
lods
lods
xcrypt-ctr
cmpsl
pop
push
test
mov
pop
xchg
mov
mov
xchg
pop
and
imul
outsl
leave
test
push
pushf
push
insb
std
inc
jnp
lret
cmp
mov
dec
and
cmp
mov
jp
or
sub
sbb
jl
leave
fnstenv
xchg
shl
int3
cmp
dec
fs
jno
sub
xchg
setnp
sub
xlat
test
jnp
dec
scas
mov
mov
xchg
adc
or
stc
or
bound
stos
pop
xlat
add
jle
fmuls
les
test
dec
int
pop
push
pop
or
rcrb
pop
dec
and
push
pop
xchg
aaa
mov
int3
in
jno
imul
subb
out
movsl
and
inc
dec
aaa
aam
cmpsb
stos
icebp
push
mov
test
xchg
jge
add
push
pop
out
adc
pop
scas
loop
mov
mov
ljmp
icebp
xorl
mov
jne
adc
mov
lcall
sub
loope
fsubrs
mov
dec
xchg
aad
insl
cmp
adc
cmp
xor
nop
icebp
xor
or
push
pop
jns
or
fwait
andl
stc
adc
inc
nop
adc
push
sbb
or
pop
lods
clc
fs
mov
ds
inc
subb
sahf
stos
lock
out
out
push
push
gs
das
xchg
insb
lods
stos
inc
shll
inc
cmpsl
js
arpl
lret
sbb
mov
xchg
pop
pop
cmpl
ljmp
pop
push
mov
xor
jge
inc
lea
in
int3
pop
pushf
stos
cmpsb
cmp
dec
mov
cwtl
pop
or
cmp
adc
fnstenv
js
pop
adc
or
xor
push
pushf
mov
insb
arpl
mov
stos
jbe
jecxz
outsl
inc
adc
jmp
cmp
xlat
lods
sub
mov
or
pop
cmp
lds
lret
push
sbb
jmp
hlt
inc
test
push
add
dec
mov
mov
or
ficoms
mov
add
into
cmp
dec
adc
push
xor
sub
lea
popa
loope
or
int
push
mov
lods
ret
in
shrl
mov
mov
adc
popf
addl
pop
lcall
out
mov
es
ret
and
and
jbe
inc
xor
adc
mov
cmova
push
push
loopne
mov
pusha
pushl
test
push
lret
mov
not
data16
insl
mov
add
add
arpl
into
add
adc
cmp
jle
jb
sub
decl
aaa
in
cmp
in
cmp
inc
mov
dec
xorb
repnz
xor
push
jns
push
cmc
inc
jne
lods
scas
dec
daa
mov
fcoml
aam
cmp
adc
or
cld
sub
cmp
negl
arpl
mov
pop
xor
lods
xchg
iret
dec
loope
rol
shl
inc
aas
lret
cs
or
push
ret
les
dec
xchg
adc
sbb
stos
pop
scas
das
or
adc
insl
cmp
sbb
stc
mov
mov
mov
and
inc
sub
cmp
sub
daa
push
mov
inc
sahf
orb
jno
jg
dec
aaa
inc
jb
jno
jecxz
mov
cmpsl
mov
ja
lahf
daa
das
test
addl
incl
repnz
movl
xorb
movsl
jno
and
xchg
test
gs
lret
xchg
outsb
rorb
xchg
push
jnp
lds
cmp
lea
and
or
popa
push
pop
or
push
pusha
shlb
add
pop
scas
lahf
jae
loopne
xor
sub
cmp
sbb
adc
shrb
mov
rolb
pop
divl
add
insl
or
in
push
cmp
mov
inc
mov
add
mov
ja
pop
cli
dec
adc
pop
mov
push
mov
sub
scas
sub
pop
push
mov
jle
pop
movsb
push
inc
mov
jae
cmp
xchg
xchg
les
sub
mov
shlb
mov
xchg
lock
nopl
mov
dec
rorb
leave
pop
add
or
and
outsl
adc
push
xor
cmp
in
ss
mov
cmp
jo
and
repnz
xchg
mov
jns
repz
faddl
mov
push
push
push
or
lods
cmp
jmp
add
xchg
jno
mov
int3
adc
push
imul
mov
int
sub
push
std
xor
fwait
pusha
pop
dec
jns
ja
int3
cmp
ljmp
out
cmp
mov
andl
movsb
sub
sbb
inc
mov
pop
mov
inc
lahf
lds
mov
loopne
dec
ja
and
pop
push
mov
lcall
sbb
dec
add
pop
lcall
xchg
es
pop
push
adc
and
mov
cmp
mov
xor
in
and
mov
cwtl
xor
lock
add
jmp
in
pop
ljmp
and
rcl
adc
loop
push
pop
sbb
adc
mov
dec
cmp
xor
push
iret
push
dec
push
dec
jne,pn
sbb
mov
cltd
in
pop
jmp
and
jp
jne
pop
mov
or
int
pop
pop
jne,pt
mov
testl
mov
sub
sub
in
xchg
into
cmp
add
pop
aaa
enter
jns
push
mov
out
pop
loopne
aaa
sgdtl
xchg
xchg
fstpt
or
test
inc
std
xor
rclb
test
pop
sbb
adc
mov
rorb
aad
std
mov
or
pop
test
imul
in
ucomiss
sub
xor
mov
inc
std
imul
inc
jns
inc
cmp
popf
stos
add
mov
inc
adc
rolb
mov
jecxz
cwtl
xorl
cmp
out
add
in
fadd
faddp
pop
cmc
cmp
xchg
adc
and
aam
inc
pop
add
dec
stc
test
pop
lret
dec
jae
outsb
enter
add
mov
jnp
mov
xchg
clc
inc
cwtl
shl
mov
cmc
movsb
push
adc
lods
sub
mov
cmpsl
lds
stc
addr16
xlat
mov
stc
inc
fiadds
ds
insl
add
or
imul
aam
int3
ror
mov
stc
lods
jnp
movsl
push
out
mov
add
aas
insb
sahf
pop
push
mov
sbb
xor
pop
fisubs
push
into
push
loopne
cmc
out
mov
das
xor
xorl
and
clc
das
movsl
mov
rcrb
xchg
or
jo
xchg
jle
lods
pop
or
stc
jne
dec
or
mov
test
ds
int3
outsl
roll
sbb
jmp
sub
dec
popa
lock
mov
jbe
push
sbb
lea
gs
cli
and
scas
push
cmp
notl
les
sbb
pop
mov
xor
sbb
idivb
cld
nop
pop
test
fiaddl
sub
lods
jl
ss
roll
pop
jne
insb
adc
add
mov
sbb
outsb
xor
xchg
loop
and
sahf
fisubrl
mov
inc
sbb
popa
ss
cwtl
cmpsb
add
rclb
scas
loope
ss
sub
jmpw
subl
add
mov
sub
pop
jmp
inc
inc
orb
sbb
je
xlat
pop
push
cwtl
inc
cs
pop
out
sub
and
rcrl
xchg
sub
jle
xchg
int
gs
mov
jg
cmpsb
cmp
sbb
or
jp
and
movl
loop
mov
and
test
ror
push
push
dec
aas
stc
lcall
outsb
and
addr16
call
xor
ds
mov
cs
xor
js
stc
pusha
loopne
pop
or
cwtl
jne
add
out
sub
in
dec
sti
fldt
jb
add
sbb
addb
ss
add
xchg
cmp
xor
xor
das
mov
xor
pop
clc
pop
ss
xor
into
xchg
cmc
test
inc
test
into
psrld
jg
shll
jo
cmp
jae
xor
ja
pop
cmp
dec
ds
out
xor
xchg
cs
push
lret
bound
mov
adc
jne
lahf
mov
les
mov
or
mov
mov
cmp
sbb
push
cmp
mov
jae
icebp
add
dec
call
loope
xor
rol
cmpb
xchg
cld
and
mov
ficoml
pop
mov
repnz
cmp
cmp
aam
lds
mov
aaa
and
mov
xchg
inc
lret
popa
test
addr16
rcrb
push
ljmp
push
xor
mov
je
imul
sub
dec
push
push
sub
movsl
push
dec
jbe
jns
jl
int3
lret
outsl
mov
xor
loope
sub
adc
jb,pt
out
push
push
or
rorl
ljmp
das
push
shlb
sbb
jge
in
pop
mov
out
xchg
jns
test
jl
xchg
and
std
push
int3
ds
test
xchg
dec
add
shr
xchg
sbbb
sub
call
inc
out
lods
jmp
mov
test
dec
dec
ret
add
cmp
je
imul
cmc
push
xchg
xchg
cmp
clc
jbe
repnz
fwait
mov
stc
inc
pop
jbe
sub
out
xchg
jb
ss
xchg
jl
add
push
mov
icebp
pop
lods
les
shr
sti
call
mov
sahf
aaa
adc
cmpsl
pop
add
xchg
sbb
loope
addb
negb
jne
sub
xor
jne
pop
fnstsw
lret
into
imul
int
mov
movl
icebp
xor
push
pushf
test
push
scas
cmp
cmp
rcrb
std
je
or
or
sub
in
inc
sti
lods
popf
std
daa
pop
mov
xchg
jne
mov
sahf
movsl
push
adc
aad
out
mov
cltd
das
cli
cld
je
push
fsubr
out
xchg
lret
cltd
cltd
addr16
xchg
nop
pop
out
mov
xor
inc
lock
dec
dec
jecxz
ljmp
imulb
sbb
and
loope
push
push
nop
and
test
ss
inc
or
in
xor
lea
pop
cwtl
lods
mov
dec
xchg
cmp
xor
in
mov
cli
sbb
cmp
roll
mov
pop
test
test
mov
test
ret
imul
mov
lea
lahf
loopnew
xchg
push
and
or
or
adc
lcall
iret
jecxz
pusha
add
pop
fistl
cmp
cwtl
inc
pop
call
les
mov
adc
mov
mov
jmp
pushf
jo
es
or
pop
or
push
pop
ficompl
rcll
pop
je
jp
scas
out
mov
xchg
push
mov
sub
jecxz
sbb
pop
icebp
clc
cmp
in
js
fsubs
aaa
push
dec
cld
sub
mov
loopne
fimull
loopne
andl
pop
mov
fldt
scas
es
jno
ffreep
push
rcll
jno
jo
pusha
das
xchg
aam
cltd
cmpsl
mov
fs
fisubrs
push
add
test
dec
mov
mov
xor
les
push
clc
inc
sbb
cmp
dec
cmp
dec
gs
mov
outsb
push
dec
jg
jge
jge
jg
xchg
dec
addr16
in
xchg
adc
fs
xor
jle
and
fdivs
lret
les
scas
stos
fistps
xor
js
nop
xchg
dec
jle
adc
je
fcmove
sub
sub
add
mov
int
mov
fsubr
xchg
push
sub
push
or
pop
sbb
out
jle
push
fs
pushf
mov
dec
push
out
xchg
dec
or
lcall
fbld
pop
ss
pop
stos
inc
xchg
bnd
xor
mov
adc
cli
test
in
dec
pop
xchg
lcall
ret
std
push
outsl
and
into
cmpsb
in
fsubr
mov
cs
shrb
mov
addr16
and
jnp
xor
fldt
shrl
aaa
dec
scas
rorb
jnp
inc
and
mov
lea
ret
enter
rorb
sarb
call
pop
cmovne
add
xor
addr16
push
daa
add
mov
cmp
aaa
jge
in
scas
ljmp
mov
add
xor
imul
cmpsb
push
xchg
dec
or
movsb
imul
and
sar
xchg
lods
movb
jno
cli
lret
push
int
or
mov
or
adc
in
loop
sub
pusha
sbb
icebp
push
pop
and
sbb
cmpsb
sbb
mov
icebp
out
jp
mov
adc
ljmp
and
cld
dec
cmp
sbb
lcall
fstpl
loopne
xor
int3
mov
mov
out
dec
mov
subl
das
data16
mov
std
jno
push
and
sub
xchg
xchg
sbb
adc
in
adc
dec
sbb
add
jo
aas
add
fisttps
xchg
fidivl
xorb
or
sbb
adc
jbe
loop
mov
test
mov
or
inc
mov
inc
outsl
leave
fnstsw
sub
pop
pop
jae
add
or
icebp
testl
ret
pop
jp
bound
cmp
inc
jnp
sbb
test
cwtl
cli
test
mov
inc
add
repnz
adc
ljmp
or
sbb
jge
roll
daa
mov
inc
ljmp
fstp
enter
out
push
add
xchg
test
push
pop
aaa
mov
pushf
out
rcll
inc
testl
lods
push
enter
lds
ja
jge
inc
daa
mov
lods
and
mov
xlat
jmp
push
pop
mov
or
jne
pop
jnp
or
outsb
adc
enter
inc
je
add
pop
lcall
push
imulb
gs
cmp
leave
stc
mov
out
out
mov
add
push
fidivrs
pop
mov
ljmp
andb
int
cmp
sub
mov
cmp
mov
mov
mov
icebp
push
lcall
iret
push
hlt
lock
sub
in
xor
or
and
icebp
leave
in
jb
idivb
add
jp
lods
and
mov
lahf
adc
mov
lds
sbb
jns
dec
jb
mov
pop
aad
xor
mov
cld
cmp
inc
jge
sbb
into
popa
bound
cmp
push
and
mov
cmpsb
mov
test
jle
push
sbb
lods
xor
rcr
scas
or
and
push
leave
mov
push
jp
es
addl
enter
xor
cwtl
mov
loop
push
lret
aam
pushf
jg
testl
jg
add
push
aaa
aam
or
mov
in
push
dec
clc
js
cmp
or
mov
aad
pop
fwait
add
cmp
xchg
pop
add
dec
sub
xor
aas
inc
mov
xlat
iret
push
imul
push
fldcw
adc
xor
mov
ja
adc
dec
inc
dec
rcrl
xchg
pop
mov
imul
mov
daa
stc
mov
aam
popa
movsl
rep
fisubrl
scas
pop
mov
xor
dec
push
push
jg
or
jns
int3
rorl
repnz
mov
mov
pop
push
lock
cmc
rol
js
fwait
add
es
sub
movsl
push
clc
nop
push
mov
adc
cli
std
pop
aad
cmpsb
xor
mov
push
sbb
push
jae
cmp
adc
loopne
cmp
out
loope
out
in
flds
dec
push
mov
mov
mov
shlb
jno
mov
dec
inc
in
xchg
jb
stos
clc
lea
cmp
in
push
inc
packuswb
dec
bound
mov
sbb
lods
dec
cmpsl
cmp
inc
stc
add
scas
dec
dec
lcall
sbb
orb
xlat
repnz
imul
mov
inc
cmp
pop
repz
xchg
mov
movsl
dec
pop
jle
pushf
loope
enter
adc
out
mov
add
nop
addr16
push
lret
into
outsl
fisttps
addb
mulb
mov
scas
sub
push
jmp
repnz
addl
stos
test
call
jae
pop
or
gs
scas
loopne
rorl
jl
jg
mov
adc
daa
jp
inc
scas
jmp
mull
testb
mov
dec
sub
xor
cmpsl
xor
into
xchg
mov
pop
inc
out
mov
movsl
les
in
pop
fsubr
inc
js
insb
in
lock
add
mov
dec
xchg
cmp
lods
out
int
mov
cld
outsl
xchg
popa
lret
loopne
cmpsl
xchg
in
pop
xor
jbe
dec
push
es
sub
xchg
aas
jnp
mov
mov
sahf
out
dec
xchg
sbb
popa
ja
xchg
cmp
in
pop
mov
mov
xchg
testb
and
leave
dec
ljmp
fs
out
ja
fs
dec
scas
push
sbb
aaa
fwait
sar
and
jns
jne
orl
adc
sub
lret
int
cs
sbb
xlat
pop
repz
cwtl
jno
stos
pop
insl
mov
pusha
cli
add
pushf
lahf
push
and
ret
dec
adcl
xor
push
xchg
or
xchg
mov
or
mov
jmp
daa
je
pushf
or
xlat
push
or
das
mov
push
mov
mov
xor
out
js
int
movsb
sbb
dec
fwait
dec
xchg
xchg
xor
leave
dec
and
mov
mov
dec
add
inc
sti
inc
sbb
xchg
mov
add
cmpsl
push
mov
pop
icebp
test
cmpsl
xchg
or
sub
xor
movsl
mov
push
xchg
mov
xchg
xchg
in
xchg
jle
mov
imulb
clc
xchg
inc
xor
dec
fs
mov
loop
mov
sbb
scas
jge
fstl
mov
adc
out
sti
gs
cmc
or
in
push
sahf
and
or
mov
mov
hlt
aad
pop
lahf
jg
adc
add
jns
xchg
mov
xchg
cltd
pushf
fmuls
adc
push
lret
inc
xor
data16
sub
and
mov
push
push
sub
or
std
push
les
jp,pt
cs
sub
clc
mov
xor
bnd
sbb
mov
xor
bound
repnz
sahf
ljmp
lea
mov
pop
jne
sub
mov
stc
movsl
dec
sub
loope
aad
cmp
out
jnp
aas
push
push
in
dec
mov
lret
push
inc
xchg
xchg
cmp
aam
es
pop
shl
xchg
mov
sub
fcoml
subb
addb
xchg
jno
xchg
cld
lret
movsb
test
sarl
inc
pop
lock
push
adc
adc
cmpsl
lret
daa
jp
ss
xor
add
cmpsl
sub
ss
iret
out
in
negb
sub
lds
jp
push
inc
lret
bound
xchg
jo
out
push
mov
aaa
cs
xor
xlat
cmp
xchg
inc
out
add
cmpsb
or
addr16
gs
sub
jge
dec
dec
xchg
mov
inc
mov
insl
pop
sub
sub
jb
cs
into
and
mov
jge
pop
jecxz
mov
cmp
inc
jl
inc
mov
cmpsb
mov
sbb
in
xor
cld
and
jle
and
icebp
jmp
jo
cmpsl
xor
cmp
add
mov
inc
lea
mov
arpl
aas
inc
adc
das
aas
ljmp
pop
push
xchg
xchg
jns
hlt
xchg
jmp
mov
daa
sbb
shlb
cmpsl
in
fisttps
cmp
dec
fwait
jl
sub
sbb
rcll
test
adc
jmp
ss
mov
mov
cmpsb
scas
shrb
int
mov
and
adc
out
sarl
loopne
adc
and
and
push
pop
std
adc
xlat
cmpb
aaa
adc
push
out
xchg
fldcw
incb
insl
popa
int3
in
bswap
lods
dec
dec
test
movsb
outsb
dec
sbb
loope
push
mov
push
push
pop
jae
xchg
mov
repz
cwtl
mov
pop
mov
loop
xchg
ficomps
push
inc
outsl
inc
cli
out
pop
mov
and
sub
ljmp
push
lcall
jo
xchg
or
and
ds
jne
clc
mov
popa
das
sbb
mov
push
aaa
lret
loop
loop
sub
mov
push
or
adc
stc
add
mov
sub
lods
fisttps
cmpsl
mov
cmp
test
and
inc
inc
ffree
ret
push
dec
add
fldt
pushf
lret
pop
jbe
imull
xchg
xlat
mov
and
dec
roll
sti
jl
pop
ja
cmp
mov
push
cmp
sub
loope
add
ljmp
mov
fucomi
push
push
movsl
push
in
js
adc
outsl
jge
sub
mov
jmp
insb
fwait
test
push
repnz
lahf
incb
repz
ljmp
pop
mov
xor
loope
lods
mov
lret
jle
jnp
dec
xor
jle
ret
clc
sub
test
mov
rcll
mov
icebp
and
lahf
ljmp
outsb
mov
jle
mov
xchg
xchg
in
int
aas
inc
in
mov
lods
lods
addr16
dec
xchg
loopne
ds
and
pop
fisubl
loope
add
mov
xor
push
add
les
or
and
inc
adc
outsl
cmovne
out
and
mov
pop
push
or
addl
sub
ss
push
xchg
jge
aaa
dec
cmp
dec
push
inc
roll
and
leave
and
sbb
pop
stc
adc
xchg
jge
int
mov
dec
and
fisttpll
push
add
mov
dec
mov
or
inc
out
sub
push
ja
jg
das
icebp
jg
movl
xchg
popf
adc
fcoms
push
mov
cmp
jae
js
xchg
cmp
jp
cmp
or
xchg
add
and
push
or
repz
leave
jmp
and
sahf
cld
push
clc
arpl
mov
fsubs
lds
hlt
fs
lea
mov
adc
in
movsl
loope
mov
sub
mov
rcrb
mov
ficomps
mov
mov
sbb
jno
out
lods
sbb
repnz
test
je
push
sub
insl
test
sub
fs
sbb
movsb
xchg
out
and
sub
movsl
movsl
popf
sub
sbb
aaa
das
mov
pop
sub
aam
and
enter
iret
in
movsl
cwtl
cmc
lcall
inc
aam
xchg
or
lea
inc
sbb
repz
cmc
outsb
ss
bsr
aam
loope
fidivl
arpl
out
je
divl
pop
mov
outsb
sahf
rorb
mov
shr
lods
xor
jb
ret
mulb
adc
dec
in
ljmp
mov
cmp
js
fisttps
push
ret
into
xlat
jle
or
sbb
mov
cmp
repz
je
push
adcl
mov
pushl
ret
scas
push
pushf
movsl
sub
movhps
cmp
notl
sub
mov
dec
or
lods
xor
in
in
hlt
and
mov
imul
sub
enter
sbb
mov
adc
cmp
jno
in
movsb
mov
jp
sbbb
cmpsl
lahf
push
rcl
ljmp
aas
jg
out
hlt
in
scas
test
sbb
test
lahf
in
inc
pop
and
or
not
push
inc
and
sbb
jecxz
add
pop
aas
pop
cli
and
add
jbe
jne
iret
cmp
icebp
adc
test
dec
push
ja
test
jl
mov
in
scas
or
in
hlt
cmpsl
or
scas
flds
add
inc
outsl
inc
push
push
cmp
lret
adc
add
mov
fstp
das
dec
pop
add
rcll
rolb
inc
cmp
scas
inc
movsb
push
push
push
cld
call
jge
fildl
jb
xlat
add
faddl
push
aad
mov
add
outsl
js
int3
cmpsl
ret
andl
out
aam
loopne
cmpsl
xchg
pop
add
adc
jle
push
push
mov
movl
mov
xchg
das
sbbb
rcrl
fs
push
inc
push
sub
push
jl
xor
flds
dec
pop
insl
dec
jnp
dec
outsl
icebp
mov
fwait
stos
insb
ja
cmp
js
cmpb
push
popa
jae
hlt
and
pop
jge
cmpsl
loopne
dec
lcall
mov
dec
sti
pop
idiv
xchg
icebp
stc
sub
bound
cld
mov
jle
in
mov
push
or
ja
aaa
push
cmp
subl
mov
xchg
or
sub
dec
sub
andb
sub
add
push
pushf
int3
lret
jmp
cmp
inc
mov
loopne
dec
adc
sub
inc
cli
adc
xchg
inc
xor
popl
cmc
jg
stos
ret
xchg
mov
mov
test
cwtl
xchg
jge
int
fbstp
out
hlt
icebp
sub
cmp
and
xor
rcrb
mov
pop
fdivrs
cmpsl
push
mov
jmp
sub
nop
jge
xchg
data16
and
loop
test
pop
jl
push
les
jbe
lock
jg
adc
sbb
jo
data16
rol
sbb
cmpsl
xchg
out
pop
fwait
push
add
xchg
iret
xor
sahf
cmp
sub
in
hlt
mov
insl
pop
sbb
call
out
add
fnstenv
sahf
mov
mov
iret
lret
loope
mov
insb
imull
dec
std
dec
mov
xor
dec
or
repz
jno
iret
cmp
outsb
leave
test
shlb
inc
dec
out
lods
lcall
cmp
mov
mov
xchg
cmp
loope
push
push
mov
pusha
dec
mov
test
add
add
aad
push
adc
pop
fisttpll
arpl
cmp
test
xlat
shrl
jmp
test
iret
cli
dec
addr16
mov
sub
pop
test
ds
cld
cltd
xor
movsb
popf
pop
pushf
sub
pop
sub
ja
adc
jle
jp
in
xor
int
das
mov
out
adc
mov
jmp
flds
dec
push
sarl
push
and
fcoml
das
bound
arpl
adc
push
sub
pop
inc
stos
ret
add
fstl
pop
sub
push
cmp
mov
sti
jl
imul
insb
jns
or
mov
jmp
andb
sub
lret
cmp
jo
cmpsb
sub
jae
inc
push
cld
fs
xlat
push
cmp
andl
mov
adc
ja
lock
gs
mov
stos
shll
cli
xor
push
mov
dec
mov
stos
bnd
cltd
jb
dec
and
cwtl
shr
roll
iret
rolb
mov
call
adc
mov
in
push
sarl
out
pop
mov
pop
iret
cmc
and
cmpsl
and
push
push
cwtl
sbb
push
push
cmp
pop
es
lods
push
rorl
cmp
test
cmp
cmp
cmp
stc
out
aaa
insl
mov
jge
icebp
sbb
call
stos
inc
loop
and
or
lret
inc
lea
dec
add
pop
jae
add
mov
or
push
sti
sar
sub
aam
ja
lods
xchg
mov
jbe
adc
push
stos
ds
mov
and
jecxz
sahf
pop
jno
ss
pop
xchg
jo
xchg
jge
push
mov
mov
push
fildll
fldcw
dec
jnp
mov
dec
in
mov
xchg
sbb
inc
insb
dec
popa
ss
test
leave
mov
mov
les
jp
push
fwait
sbb
and
inc
test
xor
jb
jle
xchg
ja
or
adc
adc
fcomps
mov
xor
pop
push
push
and
rcrl
lret
jno
addr16
mov
aas
mov
gs
inc
cld
pusha
adc
sbb
aad
pop
pop
popf
fucomi
js
adc
outsb
js
adc
adc
lock
subl
jns
xchg
mov
insl
or
test
mov
adc
xchg
xchg
pusha
flds
shlb
sarl
dec
adc
cmp
push
nop
lods
testb
mov
jae
sub
leave
andb
adc
push
cli
daa
push
adc
add
movsb
dec
inc
mov
rol
add
unpcklps
test
cld
cld
xchg
in
cmp
pop
gs
in
and
lods
pop
mov
xchg
dec
lods
je
sub
dec
das
mov
inc
xchg
sti
gs
repz
dec
inc
dec
lret
clc
mov
lret
es
inc
out
pop
or
cmp
mov
imul
in
mov
push
cltd
sbb
fcmovb
in
leave
adc
jo
mov
push
mov
icebp
jbe
loope
andl
push
or
lea
inc
testb
lods
push
jb
mov
fsubs
loop
push
outsb
fists
sahf
fsts
pop
mov
jno
xor
add
lcall
xchg
jmp
sahf
or
adc
adc
fs
add
jno
mov
fistps
pop
lahf
dec
ja
xchg
sbb
arpl
pushf
push
call
sti
out
cmp
jo
in
in
andl
xor
imul
mov
fsubs
xor
jmp
xchg
sub
sahf
push
dec
sub
or
or
int
mov
lret
lock
mov
jmp
add
popa
pushf
push
fcomps
adcb
cwtl
js
sbb
aas
addr16
lds
mov
adc
push
imul
pop
ds
push
adc
dec
jbe
test
movl
cmp
mov
rorl
out
dec
dec
adc
pop
push
out
in
popa
xor
std
in
dec
loopne
out
in
pushl
inc
sbb
mov
sarl
clc
sti
pushf
js
push
adc
xor
cmpsl
or
inc
adc
xlat
lahf
fs
xor
insb
ss
jnp
lods
out
mov
mov
jnp
jmp
cmpsl
sbb
sbb
inc
out
xchg
pop
out
outsb
inc
adc
add
push
add
push
jge
cmp
into
shll
mov
mov
jne
mov
pop
lret
leave
int3
ja
ja
in
fmull
push
sti
inc
loope
xor
clc
nop
inc
rcrb
pusha
data16
mov
mov
jne
lret
lods
ss
mov
push
into
test
mov
bound
dec
xchg
ja
dec
sub
push
push
scas
test
mov
xchg
das
pop
xor
sub
or
into
inc
or
out
out
xor
in
xor
int
dec
mov
shlb
ds
xchg
xchg
std
rcll
outsb
jbe
pop
popa
or
loop
inc
imul
scas
dec
pop
arpl
cmovp
jne
mov
pop
imul
cmc
fwait
insl
sbb
adc
cld
mov
pop
pushf
pusha
mov
mov
jns
ss
fisubrl
mov
dec
out
aaa
fisubrs
cmc
and
dec
pop
enter
cli
ja
je
popa
cs
sub
cmp
movsb
xchg
sti
shrb
mov
jle
sub
inc
or
int
and
xchg
rolb
mov
pusha
lds
fwait
pop
xchg
xchg
dec
xor
addr16
xor
sbb
xchg
push
dec
jo
ss
mov
aam
ror
or
mov
jb
out
mov
xorl
mov
xchg
and
jg
or
cmc
rol
clc
test
jne
sub
lock
in
push
pop
jns
test
fisubrl
sbb
or
push
aam
mov
sbb
cmc
fcomps
cmp
imull
fcomip
push
testl
jl
ss
cmp
and
mov
adcl
je
inc
xchg
out
loopne
and
push
aam
adc
insl
jne
ret
inc
fldcw
dec
aaa
xor
rcrb
mov
push
xchg
lods
out
shlb
out
mov
out
mov
repz
pcmpeqd
ret
add
add
repz
dec
out
dec
jmp
pop
sbb
mov
mov
sub
xchg
mov
mov
cmp
cld
cli
test
adc
iret
lret
cmc
rorb
js
scas
arpl
cwtl
ret
jo
or
lret
xor
hlt
andl
push
lods
js
sbb
push
insb
add
imul
jecxz
sub
mov
rcrl
pop
pop
iret
dec
pop
ljmp
adc
ficoms
out
fiaddl
shl
idivb
jge
outsl
push
push
or
push
jp
pop
jmp
bound
out
shlb
pop
push
pop
lret
jge
fisubl
in
stc
or
push
nop
xor
scas
lcall
jns
aam
stos
add
sar
jmp
fcmovu
mov
cmc
stos
mov
insb
nop
shrl
insl
lock
push
xchg
mov
sub
xor
outsl
ffreep
xor
and
xchg
test
ljmp
jl
sahf
mov
out
inc
push
xchg
dec
xchg
mov
cwtl
fistpl
sahf
jno
xor
inc
loop
popa
push
sub
fsubr
cmp
adc
jg
push
ja
stos
add
loopne
cmp
xchg
push
cmp
jmp
and
cmpsl
push
shl
fs
xchg
or
ret
iret
cmp
cwtl
data16
subb
jl
adc
jmp
jb
or
mov
aad
dec
mov
cmpsl
xchg
aaa
mov
das
cld
bound
jp
out
push
mov
rcrb
push
nop
loopne
dec
xorl
and
dec
push
adc
sbb
hlt
mov
jle
mov
cmpb
ljmp
loopne
jno
sub
cs
scas
xchg
sub
std
jg
add
fwait
mov
arpl
mov
test
mov
adc
clc
xchg
ljmp
pop
or
jno
mov
dec
or
mov
fldcw
out
mov
cmpsb
sbb
cmpsl
out
cmp
fnstcw
sti
mov
loope
aaa
mov
mov
repnz
fsubr
sub
xchg
in
callw
iret
jnp
xchg
inc
loope
ds
push
loop
fisubrs
or
mov
sub
popf
movsb
push
imul
iret
jmp
jmp
fiadds
out
xor
and
inc
add
ficoml
and
dec
mov
cli
sub
cmp
pop
int3
jl
mov
inc
fwait
in
hlt
mov
roll
mov
cld
sub
orb
sbb
iret
or
add
int3
mov
sbb
push
mov
stc
mov
dec
loopne
outsb
test
dec
jno
pop
xchg
es
push
scas
jg
inc
loopne
je
sub
movsl
repz
push
out
js
jae
dec
pop
pop
in
jae
int
xchg
jmp
mov
mov
fldln2
xchg
sub
cltd
push
adc
cmp
dec
jns
rcrb
icebp
cmp
rolb
pop
fnstcw
fcmovb
cmpsl
pushl
mov
call
sbb
and
insb
add
pop
push
xchg
icebp
fucomi
jae
clc
adc
sahf
sbb
sub
js
mov
sbb
sahf
bswap
xor
pop
xor
mov
mov
mov
or
adc
ss
pop
adcb
into
jge
add
or
mov
or
mov
roll
jle
xor
and
or
push
add
mov
mov
pop
cmpsl
lcall
lods
xlat
dec
out
jecxz
xchg
out
ss
aad
pop
cmpsl
add
push
push
jmp
sbb
in
jo
es
cmp
bound
or
add
bound
pop
ljmp
mov
movsl
inc
xorl
loop
loop
lock
sbb
xchg
repnz
ror
mov
inc
push
cmpsl
outsl
sbb
cld
fidivrs
xchg
stos
xor
lcall
sahf
cmp
sub
aas
gs
pop
adc
push
sub
or
cmp
fadds
fsts
jne
sahf
arpl
push
sbb
mov
in
inc
ljmp
lret
outsl
sahf
test
add
dec
lods
pop
sub
mov
pop
dec
xchg
into
mov
fldcw
jecxz
jbe
and
cli
mov
adc
adc
mov
in
scas
das
popa
pusha
hlt
dec
lods
aam
dec
or
shlb
add
inc
jb
jmp
popa
sub
xchg
xchg
jne
xor
or
xchg
in
pusha
add
dec
pop
icebp
movsb
aam
jb
orb
pusha
fcompl
or
lcall
loopne
imul
aaa
jb
cmp
and
std
pop
sub
lahf
and
xor
mov
ret
out
aas
int3
adc
lahf
cmp
scas
or
pop
rcrl
pop
scas
mov
add
mov
fildll
or
add
mov
mov
jl
outsb
mov
xor
xchg
pop
fcoms
scas
enter
pop
adc
jge
dec
cmpb
cs
shlb
pushl
nop
loope
push
cld
inc
cmpsl
xchg
push
inc
inc
into
mov
dec
hlt
out
inc
rcrl
sub
xlat
fcmovb
int3
mov
cmpsb
add
pop
push
dec
xchg
and
test
sbb
loope
je
pop
or
lcall
dec
add
pop
pop
stos
mov
imul
adc
jmp
insb
out
mov
fdivrs
jle
mov
sub
add
pop
bound
insb
ffreep
xchg
jno
adc
xchg
out
loope
lods
call
adc
and
xchg
mov
mov
adc
mov
das
xor
xor
push
adc
push
xor
push
sub
xor
add
mov
fwait
xlat
or
mov
insl
push
gs
push
test
arpl
xor
js
mov
popa
movsl
outsb
inc
pushf
mov
push
cwtl
xor
hlt
xchg
lret
frstor
dec
add
js
jb
call
mov
ja
arpl
cmp
sbb
sub
mov
jo
adc
ja
test
bound
cmp
in
ljmp
add
mov
sub
push
mov
repnz
adc
je
jnp
push
les
adc
xchg
sbb
inc
dec
lret
cmp
je
add
xlat
mov
sbb
in
add
ret
mov
xor
dec
xor
lret
mov
fisubrl
loope
xor
js
out
pusha
clc
xadd
sti
jb
popf
inc
adc
fstpt
jb
outsl
dec
jo
scas
pop
push
movsl
addb
jns
jbe
lods
sub
lds
xchg
xchg
fcmove
push
dec
lret
cmp
mov
cmp
sbb
sbb
dec
jno
add
call
mov
fsubp
jb
dec
stos
push
push
roll
movsb
iret
fidivl
divl
mov
inc
daa
jg
jp
mov
lods
scas
hlt
imul
stos
mov
outsl
pop
sub
cltd
clc
mov
xchg
dec
out
data16
lock
loopne
arpl
sti
push
xchg
arpl
sbb
sahf
sbb
cmpsl
jns
xchg
sahf
aas
jle
pop
repnz
lock
or
les
leave
pop
adc
lock
ja
out
mov
inc
xlat
mov
fisttpll
or
out
inc
push
cmp
jns
in
cmc
stos
pop
dec
aaa
adc
push
gs
mov
inc
outsl
lds
rcrl
ja
aam
shrb
cmp
push
and
jle
int3
pop
push
gs
shll
dec
xchg
push
sub
mov
push
and
sbbb
xchg
in
inc
inc
or
aam
xchg
scas
mov
out
bound
imul
pop
gs
fsubr
cld
subb
add
add
call
push
xchg
inc
push
push
outsb
and
in
xor
pop
lret
sub
and
ss
pop
sbb
xchg
sub
cld
sbb
or
jns
jno
sbb
pop
pop
mov
pop
fsts
push
xchg
xor
sub
scas
inc
mov
arpl
mov
pop
jge
pop
cmp
ss
lret
xchg
jecxz
cmpsb
daa
mov
repnz
icebp
ret
mov
cli
jecxz
dec
dec
or
pop
push
and
push
jmp
mulb
js
pop
mov
jno
xor
sbb
mov
jno
fiaddl
xor
xor
cmp
jecxz
xor
sbb
jno
pop
in
jno
adc
xor
add
outsl
push
xchg
and
dec
mov
out
int
mov
mov
pop
jns
decl
popf
sbb
mov
cld
mov
js
inc
lock
ret
ds
and
out
out
stos
js
loope
jb
and
int
loopne
lods
or
test
enter
mov
jg
adc
int3
iret
ficomps
test
imul
into
inc
adc
popa
dec
fsubrs
adc
xor
stc
mov
xchg
pusha
cmp
lret
or
jns
push
icebp
shll
push
adc
ret
out
aaa
idivl
mov
mov
adc
shlb
sub
push
push
rcrl
sbb
int3
mov
and
lods
adc
adc
icebp
ret
sub
and
stc
ljmp
incl
dec
pop
and
push
arpl
decb
xchg
mov
sub
pop
lea
fcmovnu
push
leave
scas
call
stc
sbb
adc
add
pusha
inc
sbb
loopne
mov
and
mov
daa
cmc
xor
pop
gs
scas
or
push
imul
bswap
xor
cli
add
rol
mov
sub
or
dec
ficoml
shrl
hlt
adc
pop
pop
mov
jae
das
cs
cld
add
stc
sbb
fs
pusha
xor
es
pushf
js
adc
pop
pop
mov
int
out
test
mov
lds
cmp
mov
mov
mov
mov
mov
push
or
jl
dec
cwtl
insb
mov
loop
in
cmp
stc
movsb
or
sbb
mov
stc
stos
fcmovne
loopne
sbb
inc
imul
cmp
mov
jo
mov
xlat
dec
adc
shll
mov
xor
jmp
mov
dec
leave
jnp
fs
repz
into
jecxz
leave
xchg
loope
cltd
mov
test
pop
jo
mov
adc
ja
sub
lea
push
jns
fisttpl
movsl
pop
mov
mov
mov
dec
dec
mov
xchg
scas
scas
push
mov
and
jg
repnz
out
jns
cmpsl
jns
jae
add
dec
push
into
cmp
mov
fisubs
xchg
nop
cmc
cmc
rorb
enter
push
int3
dec
jp
shlb
mov
xchg
aaa
fnsave
mov
pop
sbb
inc
xor
xlat
and
xor
cmp
and
push
and
dec
ja
or
push
mov
stos
push
and
mov
sbb
dec
xchg
popa
jnp
les
push
stos
mov
add
notl
mov
cmc
pop
icebp
ret
and
in
out
jno
outsb
jmp
stc
repz
mov
cmp
into
outsb
test
xor
sbb
icebp
sbbb
mov
push
or
iret
jp
stos
lds
mov
aam
call
push
dec
js
fcmovnbe
out
js
dec
addl
push
fwait
xor
int
lods
and
xor
js
das
lahf
and
sti
adc
mov
fsubrl
sahf
popf
cli
pmaddwd
aaa
xor
mov
jecxz
idiv
dec
ds
inc
mov
and
insl
xor
push
call
in
jno
fsubs
ret
xchg
mov
xchg
shll
dec
jns
mov
ljmp
cmp
and
out
fldl
mov
jns
lret
cmpsl
xchg
jb
aas
adc
mov
xchg
lods
pop
test
ss
dec
negb
jge
push
das
mov
push
push
xchg
mov
lock
insl
fisubl
jp
sub
jge
inc
pusha
sbb
adc
cmp
xchg
stos
outsl
inc
sti
pop
xor
jae
hlt
enter
sbb
inc
sti
sub
out
repz
mov
cmp
icebp
stos
fcoms
decl
sub
popa
push
outsl
mov
and
fisubrs
loopne
xchg
scas
pop
push
push
sbb
sub
pop
inc
inc
push
subb
in
movsb
adc
and
xchg
imul
mov
stos
lds
xchg
xor
js
imul
jno
test
inc
psllq
loope
mov
xchg
gs
aam
dec
imul
lret
call
popf
xchg
inc
jo
aaa
mov
pop
addr16
or
jl
in
repnz
dec
or
cs
das
out
ret
std
mov
adc
mov
and
add
add
mov
cmp
out
mov
push
aad
sbb
test
sbb
repnz
shl
add
mul
and
sahf
cltd
sbb
stos
imul
andb
movsb
adc
ficomps
jecxz
sbb
push
fidivrs
sub
xor
aam
loopne
scas
add
xor
test
dec
data16
insb
or
pop
dec
inc
jbe
xchg
xor
fsts
push
add
jno
movsl
ljmp
lret
mov
mov
test
jecxz
fwait
mov
aam
xchg
in
xor
jmp
sti
and
iret
dec
dec
mov
adc
mov
and
ds
outsb
jno
lock
inc
stc
movsb
hlt
pushf
ljmp
mov
enter
lock
jnp
fstpl
or
mov
cmp
inc
pop
xchg
out
add
ficoms
push
gs
int
in
orb
test
mov
inc
ret
jp
xchg
or
xchg
xchg
shrb
fisttpl
fildll
cwtl
xlat
shrl
testb
fs
inc
mov
xchg
lret
test
sub
ficoms
and
jp,pn
cmpsl
lahf
cmpsl
mov
inc
out
aam
ret
loope
iret
sbb
lcall
enter
popa
mov
push
jb
or
xlat
lock
rcr
movsb
xorb
call
arpl
pop
test
adc
test
js
add
cmp
and
lds
push
add
jae
cmp
mov
scas
cltd
stos
popa
cwtl
and
popa
cmc
lds
in
and
imul
or
in
and
cmc
ret
jns
xchg
xchg
fisttpll
enter
pop
cmpsl
roll
lods
lret
out
xchg
sub
jmp
xor
popl
xchg
add
inc
inc
dec
sbb
jno
mov
cmpsb
ds
int
aaa
add
nop
mov
loop
xor
fucom
test
cmpb
push
cmp
cltd
mov
cmp
js
and
icebp
test
loopne
or
les
fs
ljmp
jmp
out
mov
xor
shlb
jmp
cltd
and
lods
fisttpll
ds
hlt
les
ja
push
test
arpl
pop
lods
cmpsb
jmp
push
cmp
aam
pop
in
pop
js
push
mov
cmp
cmp
bound
es
push
iret
cs
xchg
imul
sti
xlat
orl
xchg
jb
xchg
orl
das
pop
js
les
jp
push
aas
mov
rcrl
jo
cmp
sub
jmp
in
sub
repnz
push
inc
pushf
das
popf
xor
push
insl
cmp
push
lods
dec
jp
std
shlb
pop
xchg
sub
add
dec
cwtl
in
and
jge
leave
mov
mov
push
outsb
sub
rcrl
hlt
or
test
add
mov
leave
sub
xchg
mov
push
mov
and
loop
leave
in
scas
pop
jae
sub
in
es
jl
ljmp
sar
or
es
loope
imul
out
into
rclb
xor
lds
lods
pop
out
jnp
xchg
or
add
mov
or
jns
jle
lea
pop
imul
xor
pop
adc
call
adc
or
mov
subl
pop
aaa
lock
xor
add
shlb
push
imul
and
or
mov
inc
cmp
pushf
daa
lcall
push
je
cmp
imul
jp
mov
clc
adc
int3
mov
lock
push
jno
xchg
push
lahf
xchg
jnp
in
xchg
xor
js
adc
scas
test
loop
pushf
into
mov
mov
test
xchg
inc
repz
dec
jns
xchg
add
and
call
pusha
inc
popa
or
imul
dec
xchg
mov
shlb
jecxz
and
adc
jl
add
ret
push
inc
std
insb
adc
xor
xchg
mov
cmp
jp
scas
xchg
sub
cli
push
lock
cld
pop
push
jecxz
out
imul
jbe
and
repz
push
push
mov
ror
scas
and
mov
call
xchg
ret
xor
push
adc
push
ss
pop
aas
xchg
je
rclb
out
jae
mov
fsts
pop
je
mov
insb
cltd
lock
dec
popf
xchg
ret
push
movsb
pop
xor
in
and
dec
xor
lods
imul
sbb
mov
adc
popa
aad
mov
jnp
cmp
dec
insb
or
outsb
sti
icebp
or
je
mov
loope
dec
jg
xchg
rcr
ljmp
loope
int
lock
sbbl
and
test
jbe
out
push
insl
into
xchg
mov
in
lea
outsl
loop
addb
movsl
jo
mov
outsb
dec
cmp
xchg
jno
inc
dec
or
aam
std
sbb
nop
add
mov
scas
or
cltd
out
dec
lds
xchg
cltd
dec
or
add
cmp
pop
sub
dec
sub
mov
mov
addb
jne
and
cmp
add
xchg
push
xor
xchg
in
dec
and
inc
cmp
int
addb
into
add
or
fisubrs
incl
add
call
sarl
insl
fcomps
mov
lret
ja
je
jge
sbb
sub
mov
in
add
dec
sbb
das
pushf
push
in
push
mov
test
ljmp
arpl
mov
dec
out
pop
push
sbb
addr16
dec
or
call
sahf
jo
sub
test
inc
xor
jge
xchg
or
addr16
sbb
leave
inc
mov
sarb
addr16
dec
inc
mov
and
mov
icebp
and
lcall
and
punpckhbw
cwtl
mulb
jnp
clc
mov
cld
pop
fucomp
cmp
mov
push
out
daa
or
arpl
xchg
shrb
push
popf
cmp
cltd
aas
roll
mov
scas
fsts
bound
insl
adc
pop
mov
mov
stc
leave
sarl
jle
inc
adc
jmp
add
loopne
lods
daa
outsb
mov
addr16
push
rcrl
and
inc
push
cmpsl
push
and
mov
jecxz
mov
xor
or
loope
mov
push
fwait
pusha
sbb
xlat
enter
pop
popf
xor
xor
shll
in
insb
js
ja
bound
stos
push
push
xchg
xor
mov
gs
pushf
cmpsl
and
jecxz
mov
das
mov
and
stc
mov
xor
dec
stc
mov
rclb
jl
nop
xlat
mov
add
adc
icebp
cli
lahf
sub
pop
mov
fstps
jno
fistpl
or
mov
mov
fnstcw
xor
pop
into
push
stc
xchg
icebp
pop
jl
sbb
out
cmp
filds
pop
push
incb
or
mov
popf
push
shr
fisubrl
sbb
icebp
mov
js
testl
nop
dec
pushf
sahf
jbe
scas
imul
daa
test
sbb
push
aaa
test
and
mov
pop
mov
inc
mov
sbb
xor
stos
rclb
jecxz
pop
xchg
xlat
fsubl
sbb
push
sub
repz
clc
imul
les
add
xor
dec
sub
lods
out
rolb
movsl
xor
dec
sbb
sarb
and
ret
aam
pop
fisttpll
pop
popa
adcb
aam
dec
or
stos
mov
dec
pop
jne
jge
divl
jne
or
loopne
test
pushf
or
pop
testb
lahf
subl
pop
std
movsl
xlat
popf
repnz
mov
jle
insl
sub
lret
loopne
mov
mov
ret
sbb
inc
stc
dec
mov
clc
and
and
fidivs
shll
iret
bound
cmp
adc
insl
es
add
dec
sbb
mov
mov
xchg
mov
xor
xlat
int3
fnstsw
out
dec
fcompp
xor
js
lock
mov
mov
cmc
aad
dec
xchg
bound
fimuls
jle
add
out
neg
inc
sti
mov
rcl
flds
rolb
sahf
adc
repz
sbb
sub
cmp
ljmp
outsb
cmpb
sbb
pushf
pop
jb
enter
pop
cwtl
sub
out
pop
lret
xor
dec
mov
mov
lock
shrb
in
into
pop
psllq
cmp
jg
pextrw
cmp
inc
loop
std
aaa
test
mov
mulb
pop
inc
out
jg
icebp
cmc
push
mov
sub
pop
jno
arpl
mov
clc
repz
sahf
or
xor
sub
sub
mov
into
push
repnz
pusha
mov
sbb
push
or
mov
jno
test
aam
adcl
insb
outsb
xlat
int3
and
inc
repz
out
icebp
outsb
into
push
push
rorl
jnp
cmp
je
pop
sbb
and
xchg
jb
nop
jno
inc
repz
add
cli
xlat
idivb
inc
push
icebp
push
and
movsb
jg
data16
mov
cmp
test
inc
jne
push
push
mov
hlt
or
int
add
push
inc
push
rorl
popf
notb
xchg
push
je
testb
and
inc
test
and
add
push
sub
push
leave
lea
incb
push
outsl
sbb
data16
repnz
sbb
popf
daa
popf
loop
sbbl
or
scas
movsb
test
fiaddl
int
dec
idivb
dec
hlt
and
push
loope
lcall
stc
std
scas
or
dec
xchg
popa
inc
into
jmp
mov
loope
bound
dec
sbb
and
mov
jecxz
in
add
cmp
lds
inc
shll
loopne
repz
push
adc
sbb
pop
inc
fistpl
add
adc
nop
push
push
pusha
fwait
into
sahf
push
pop
stos
xchg
and
mov
xchg
xchg
add
and
shll
daa
add
and
push
dec
sbb
es
insl
fstpt
sbb
outsl
es
or
push
push
and
push
xchg
orl
mov
pop
dec
pop
dec
mov
addr16
inc
and
movsl
push
push
cld
in
mov
stos
push
jnp
push
mov
mov
aas
xor
pop
jmp
sti
sbb
repnz
sti
in
add
sahf
insb
or
and
js
xor
cmp
sbb
lahf
les
inc
movsl
mov
imul
rorb
xchg
push
into
inc
cmpl
int3
insl
das
jns
push
jo
inc
ret
push
mov
inc
scas
and
es
in
jmp
adc
jecxz
xor
mov
jmp
std
test
rcrl
stos
xchg
lcall
adcb
fs
ds
fstpt
jg
loopne
arpl
loope
das
lock
je
mov
or
lahf
jge
jmp
iret
sbb
pop
shr
and
es
scas
into
fidivrl
dec
dec
lcall
add
jbe
xor
or
fdivr
adc
and
repnz
pop
cmp
int3
lea
sbb
nop
mov
into
sti
pop
ret
leave
mov
cld
mov
lods
fwait
xor
fidivrs
stos
xor
mov
push
fsubrl
inc
push
mov
pop
push
aas
mov
nop
loopne
sub
enter
imul
lret
mov
adc
scas
sub
sub
lds
loop
subl
aaa
sbb
inc
neg
pop
fwait
lea
mov
inc
mov
rclb
fnstsw
in
cmp
push
sbb
xor
sub
inc
negl
add
and
mov
stc
adc
sbb
push
xchg
sbb
mov
fsubl
cmp
rclb
and
adc
pop
inc
arpl
adc
add
mov
inc
adc
ja
mov
ds
push
xor
lcall
inc
jae
add
adc
lds
movsl
push
dec
mov
imul
xor
jle
lcall
and
push
sub
pop
in
push
fidivrl
gs
xor
in
inc
cmc
xchg
test
cltd
filds
jno
mov
and
insb
sub
test
pop
add
pop
add
int3
and
jecxz
ror
das
sbb
adc
rclb
mov
xchg
jge
mov
and
popf
daa
shl
dec
fstpt
js
sbb
pop
adc
xchg
dec
ret
or
mov
mov
and
addr16
outsb
scas
dec
pop
roll
inc
sbb
inc
daa
mov
sbb
add
sbb
out
test
mov
mov
int3
sbb
push
push
mov
ret
js
scas
test
loop
xchg
lret
insb
add
pop
cli
sub
call
stos
fldcw
push
icebp
xor
sbb
or
aam
sbb
int3
sub
add
popf
xor
outsb
xchg
and
ss
mov
xlat
test
out
int3
mov
xchg
call
clc
xchg
out
mov
mov
mov
nop
or
xor
sub
and
insl
adc
lds
call
jnp
pop
fcomps
loopne
nop
or
imul
sti
or
mov
or
lret
pop
lds
sub
lods
cmp
jmp
or
test
cltd
in
mov
shrl
mov
push
ret
popf
mov
scas
mov
xchg
orl
push
stc
sbb
jmp
sub
js
jecxz
and
fistpl
xchg
adc
iret
shrl
xchg
inc
cld
mov
xor
loopne
lahf
daa
ss
ja
jb
shl
mov
aas
mov
mov
dec
add
pop
xchg
aam
jne
add
inc
xchg
loopne
ja
xor
or
movsb
stos
xchg
mov
fcoms
iret
mov
pop
push
sub
popf
push
inc
adc
mov
stc
call
fsubr
dec
xor
std
or
dec
std
std
cld
aaa
mov
mov
mov
dec
xchg
mulb
mov
adc
popf
nop
dec
pop
mov
in
xchg
punpcklbw
loopne
or
cs
int3
xchg
dec
push
out
push
fldcw
mov
pop
mov
cmpsb
icebp
mov
stos
clc
push
std
neg
incl
xchg
or
jno
dec
outsb
mov
sbb
arpl
in
push
movsb
fldcw
scas
mov
sbb
in
sub
push
aaa
mov
mov
cmp
push
cmpsl
add
xchg
adc
pop
mov
cmpl
fadds
adc
or
aam
xor
out
mov
ja
fsubs
cld
cmc
enter
jne
adcb
fmull
rclb
in
incb
pop
add
mov
lods
stc
mov
sub
push
in
push
push
sub
fldt
inc
inc
push
cmp
sbb
sbb
imul
ss
jae
bound
iret
loop
dec
test
xor
push
inc
out
in
in
sub
div
push
jle
std
out
push
in
sub
mov
lock
cmpsb
mov
repnz
dec
rdtsc
fdivs
cmp
mov
pop
test
in
xor
jmp
xchg
lock
push
into
gs
jns
stc
adc
cmp
loope
push
mov
or
xorb
xchg
mov
sub
test
into
insl
pop
stos
mov
cmp
push
iret
shl
add
call
adc
nop
cmp
test
shll
sbb
pop
push
lock
pop
cmpsb
scas
repnz
push
jl
fnstcw
inc
mov
pop
jmp
int
and
lock
pop
mov
xor
cld
xchg
xor
mov
push
xchg
and
test
cmp
cltd
fisubrs
mov
addl
and
mov
inc
movsl
mov
faddl
cwtl
adc
fidivl
add
mov
xchg
add
adc
test
dec
or
imul
inc
dec
gs
mov
out
test
lds
jne
add
lret
mov
jecxz
pop
mov
test
jno
xor
inc
cltd
xchg
popf
and
add
mov
mov
cmp
stos
push
cwtl
jo
movsl
fwait
rorl
xchg
dec
and
mov
inc
arpl
std
mov
bound
mov
adc
cmc
pop
jb
movsl
ja
jle
mov
cmp
push
hlt
pop
sub
in
push
push
adc
adc
cli
mov
and
mov
mov
divl
adc
gs
decb
stos
pop
pop
mov
adc
push
popa
sub
fidivrl
sub
ret
int3
aaa
orl
out
popa
jb
fstps
sbb
stos
aam
fsubrl
and
cmp
scas
jo
and
cmp
in
pusha
push
and
pop
push
shll
push
daa
test
add
push
jecxz
add
push
imul
mov
roll
loope
push
cmp
mov
mov
shlb
movsl
insb
out
clc
xchg
jbe
jl
jns
dec
push
mov
or
lcall
add
pushl
ds
ret
jp
and
ja
fs
add
jbe
shrb
addb
mov
dec
mov
cmc
out
xchg
fimull
into
mov
jge
ret
lods
add
push
sbb
pop
push
cs
in
into
loop
adc
fwait
ret
sub
jle
xor
rcr
sbbb
mov
push
sub
adc
xchg
mov
adc
xchg
in
scas
das
int
sub
aad
loop
push
xchg
mov
pusha
jo
adc
movsl
jbe
xlat
push
call
gs
into
loope
cwtl
lods
int
cs
xor
push
movsb
pop
cmpsl
lahf
sub
jp
pop
das
push
adc
and
ficoml
repz
mov
les
mov
lea
sub
test
cmpb
repz
mov
jg
test
add
loope
jg
out
jle
lea
outsl
inc
gs
sbb
ss
stos
or
jle
ret
pop
pop
rcr
je
fcmovnb
nop
inc
dec
mov
jle
in
inc
dec
test
testl
getsec
add
mov
lods
das
sub
test
movsb
cltd
jg
cmp
mov
popa
jg,pn
inc
lcall
pushf
push
cmpsl
mov
mov
in
lea
dec
aaa
iret
or
jecxz
mov
cmp
test
ret
sbb
lea
add
call
sbb
or
adc
add
je
dec
loopne
imul
jbe
ss
cli
cmpsl
inc
jno
jb
mov
in
sub
mov
shlb
clc
mov
xor
jmp
push
hlt
std
into
jno
shrl
jg
cld
jns
jno
lock
add
push
ja
call
xchg
mov
xor
jno
dec
lods
lret
sbb
mov
xchg
jecxz
dec
das
scas
pop
sub
and
sarl
cmp
or
cmpsb
jae
call
sub
mov
fwait
scas
data16
mov
or
outsl
cld
sub
ret
test
mov
adc
cmp
lahf
lds
loope
pushl
cwtl
push
jnp
pop
fmul
sub
push
stos
pop
cmpsl
jecxz
aas
and
xchg
gs
ds
push
fildll
cmp
data16
dec
mov
push
cld
stos
xor
daa
fisttpll
inc
mov
icebp
cmp
test
bound
adc
inc
rcl
mov
cs
sub
dec
adc
jo
push
dec
jns
jge
sahf
stc
ss
aam
or
sub
repz
mov
cld
adc
fildll
push
icebp
pusha
leave
push
cmpsb
lret
jmp
fidivs
fdivrp
push
es
sbb
int
inc
stos
dec
imul
cwtl
shrb
adc
stos
lods
addr16
jl
inc
scas
dec
push
push
and
lods
or
shrb
and
mov
loop
nop
mov
and
dec
adc
pop
int3
outsb
and
pop
loope
mov
aam
mov
out
fldl
jmp
fs
push
and
ds
xor
inc
sub
daa
xor
push
ljmp
call
pop
test
pushf
rcr
cltd
mov
xor
stos
xchg
mov
pop
push
push
xchg
mov
fiadds
pop
loop
sbb
cmp
mov
xchg
stos
getsec
fisubrs
jno
inc
or
aas
loopne
je
stos
mov
jb
lods
mov
mov
enter
stc
mov
pop
in
xchg
in
xor
pop
jle
insb
lcall
xchg
stc
cmpsb
jnp
test
cli
loope
lret
nop
xor
andb
jmp
gs
push
sub
or
mov
mov
adc
fstpl
pop
sbb
cwtl
shll
add
push
push
fmull
xchg
jne
lret
add
shlb
cli
inc
das
and
js
jae
jae
leave
inc
pop
cmpsb
push
sbb
dec
sub
xor
popf
clc
cmp
dec
push
popf
in
mov
cmp
ljmp
mov
pop
dec
xchg
cld
jmp
sub
mov
js
mov
lcall
or
stc
mov
test
outsl
xor
shrl
fsubrl
loope
and
lret
sbb
rcll
push
int3
in
ret
dec
loopne
imul
addr16
aas
loope
pusha
xchg
test
push
stc
dec
test
inc
inc
das
jl
inc
mov
sarb
fs
outsl
outsb
xchg
jp
adc
xor
and
pop
or
pop
xchg
enter
cmp
lahf
in
xor
rol
lods
jmp
insl
adc
cli
inc
xchg
cs
std
adc
sbb
dec
ret
sub
push
int3
mov
hlt
lret
cwtl
mov
mov
dec
pop
inc
push
mov
and
imul
mov
xchg
loop
and
xchg
stos
mov
jle
mov
add
jns
dec
mov
push
dec
mov
repz
in
stos
sub
jae
jns
jg
xor
loopne
imul
mov
xchg
test
jae
fimuls
push
dec
icebp
test
imul
lds
fs
cmp
inc
sbb
sar
dec
pusha
mov
ljmp
jge
sbb
rcrl
lret
dec
xor
xchg
repz
add
and
fadds
dec
push
daa
pop
lcall
jmp
shrl
push
xor
pop
xchg
out
jg
jnp
mov
and
mov
hlt
add
xchg
xchg
xchg
loope
stc
in
jae
iret
out
and
dec
pop
das
xor
mov
mov
inc
mov
hlt
lahf
imul
fdivrl
push
iret
push
push
dec
enter
shrl
out
mov
cmpsb
adc
xchg
xor
pop
fisttpl
test
cld
push
pop
out
xchg
xchg
jne
inc
sbb
sti
sub
push
or
das
lods
ret
push
push
add
sub
addb
repnz
push
or
xlat
loope
mov
mov
add
jecxz
outsb
or
dec
pop
dec
out
mov
xor
mov
jge
sar
pop
pop
movsb
bound
xchg
incb
lods
xchg
jmp
pop
popa
cs
lock
insl
jge
push
rorb
fs
inc
repz
push
sbb
sbb
andb
xchg
jmp
in
push
mov
aad
insb
xor
or
in
std
fwait
ds
movsb
inc
popf
dec
scas
xor
ja
in
test
lahf
xor
mov
and
cmc
and
jle
insb
out
adc
xchg
mov
lods
cs
inc
icebp
mov
mov
stos
pop
xor
test
or
sub
out
pop
dec
bnd
inc
imul
inc
incl
mov
mov
ja
fnstenv
mov
cltd
mov
pusha
add
jg
aaa
push
adcb
jge
or
outsb
lahf
xor
movsb
leave
cmpb
sbb
ret
push
lret
jns
cld
enter
fnsave
ljmp
movsl
dec
sbb
mov
pop
int
mov
loopne
loop,pt
lcall
mull
ret
in
inc
imul
jg
cld
dec
cmp
movsl
pushf
sarl
rcll
and
fwait
or
int
or
cmp
inc
nop
push
scas
inc
pop
xchg
stos
pop
jno
andl
push
test
mov
lahf
push
sti
jp
lret
lret
repz
mov
ret
push
in
lahf
outsl
fistpl
adcl
jp
jge
and
std
adc
rorb
mov
lahf
jbe
cwtl
pop
jns
in
in
shll
adc
loope
or
sub
test
mov
sub
sbb
or
gs
lds
or
push
repnz
lods
out
push
xor
mov
fmulp
ds
neg
xor
ret
in
int
test
cli
int3
xor
sub
std
sbb
cmpsl
pop
jne
cmc
and
xor
fistps
sbb
jmp
pop
pop
xchg
shll
mov
iret
push
dec
pop
cmp
call
xor
fcomip
stos
sub
std
retw
popf
mov
into
ja
dec
adc
call
loopne
ss
xchg
pop
or
or
aam
mov
dec
loop
rolb
out
out
ja
or
cltd
testb
inc
rclb
ja
ljmp
inc
aas
xor
sbb
sub
movsl
bound
push
xor
scas
loope
jo
movsl
add
jne
loop
cmpsl
push
aad
xchg
mov
jl
sbb
xor
sbb
stos
mov
outsb
inc
push
mov
dec
xchg
leave
lock
fildl
call
mov
adc
push
mov
jnp
int3
pop
dec
adc
fisubrs
and
cltd
jmp
push
push
test
mov
pushf
test
bound
repnz
sbb
mov
loope
test
jmp
repz
inc
fs
in
pushf
mov
iret
ret
scas
fucomip
adc
xor
leave
xor
repz
adc
rcrl
mov
push
xchg
test
sub
push
stos
cmpsl
adc
mov
int
xchg
andl
lea
or
fildl
inc
mov
stos
testl
aad
clc
mov
pop
fisttpll
int
int
adc
fs
sahf
xchg
mov
mov
pop
fldt
jge
mov
xlat
pop
cld
lcall
bound
mov
sti
push
mov
std
mov
stc
cmovge
xor
lahf
fisttps
sub
pushl
adc
inc
stc
ljmp
pop
pop
js
cmpsl
mov
cmpsl
ds
popf
cs
push
and
stc
lods
test
add
addr16
lds
dec
jne
xchg
fwait
or
std
sbb
push
iret
dec
cltd
mov
jecxz
andl
in
or
xor
jg
in
shrl
push
pop
jmp
adc
cld
dec
lock
xor
sbb
mov
repnz
cmp
jns
mov
cmpsb
dec
cld
repnz
lcall
test
and
fwait
in
movsl
cld
daa
adc
xor
dec
dec
stos
aas
mov
cld
adc
insb
xchg
out
xor
pop
xor
pop
pushf
push
fcmovbe
xchg
push
or
push
rorl
les
cmc
loope
add
mov
inc
or
repnz
push
in
push
ret
dec
fsts
popa
dec
push
addr16
xchg
push
sbb
dec
into
dec
ret
out
pop
cmpsl
pusha
mov
imul
cmp
lahf
cli
sbb
push
pop
int3
test
test
loopne
xchg
xchg
addb
sub
ret
stc
out
stos
mov
outsb
sbb
jp
and
in
cmp
fcmovnu
jmp
rorb
jge
xchg
shrb
rcll
fstpl
dec
push
in
hlt
adc
insl
in
cmp
insl
out
cmp
dec
out
sub
pop
xor
or
sbb
imul
cwtl
stos
jg
lret
inc
inc
xor
mov
std
cli
sub
mov
fwait
into
out
fistps
jge
sub
loopne
mov
arpl
sub
negl
inc
adcb
mov
sub
mov
shrb
xchg
add
sbb
cmc
jbe
sub
in
jno
mov
add
mov
out
test
std
xchg
cmp
push
xorl
pop
orb
inc
pop
pop
out
mov
cltd
push
jle
push
xor
jo
mov
mov
mov
cmp
adc
push
xlat
cmp
idivb
sub
scas
pusha
out
add
idiv
orb
lods
and
mov
xor
enter
sbb
neg
shlb
mov
call
popa
or
mov
aas
into
flds
push
out
shlb
xor
shlb
cmp
nop
xorl
adc
pop
jmp
hlt
jp
mov
js
arpl
in
mov
iret
add
mov
or
stos
add
mov
pop
or
scas
sbb
ret
cmp
push
lret
push
repnz
adc
add
mov
insb
mov
sbb
loopne
push
dec
int3
and
in
mov
mov
mov
mov
lock
pop
sbb
add
inc
fadds
fldenv
adc
enter
lcall
push
sub
mov
mov
xor
sub
cmp
clc
lret
inc
sub
rcr
mov
stos
movsl
cld
mov
ret
in
mov
stos
dec
cmp
push
outsb
and
outsl
push
jmp
in
call
cmp
mov
mov
ret
jmp
popf
mov
lret
cltd
xchg
scas
mov
jno
ja
pop
out
ljmp
add
pop
cmpl
scas
scas
fidivrl
jecxz
es
jns
js
xchg
das
ja
enter
sub
dec
and
push
xchg
mov
xchg
xchg
sbb
jl
cltd
or
mov
mov
xchg
push
std
outsb
test
and
mov
xor
inc
in
xorb
dec
mov
mov
scas
xor
pop
popf
xor
xor
cmp
movsb
aaa
xchg
pop
add
arpl
mov
add
insl
add
inc
ja
adc
lcall
in
in
cmp
push
or
xchg
adc
pushf
adc
jp
inc
leave
aaa
rorl
daa
out
scas
cmp
subb
and
dec
gs
mov
cwtl
or
ret
cld
xchg
mov
repnz
pop
mov
mov
movsl
sub
pop
inc
lcall
inc
pop
loop
pop
sub
xchg
leave
repnz
push
test
and
cltd
aas
jg
out
daa
je
push
or
repnz
jg
iret
push
divb
loop
push
xchg
adc
enter
outsb
push
cmc
dec
fcompl
cmc
test
fidivrs
out
call
daa
push
call
fcomps
pop
and
inc
dec
in
mov
mov
jb
adc
in
jnp
sub
mov
jmp
cmpsl
pop
cmp
lahf
repz
pop
dec
jb
add
repz
push
aaa
outsl
cmc
inc
fst
sbb
je
std
insb
inc
xchg
sbb
iret
cmp
adc
leave
cwtl
mov
dec
sub
jl
aas
enter
sbb
xor
xchg
repnz
sub
mov
pop
into
fisubs
inc
lret
pop
adc
popa
pop
insl
sub
stc
daa
ret
cmp
mov
push
xor
mov
inc
testl
or
push
inc
mov
movsl
mov
arpl
pop
mov
iret
scas
sub
jle
lret
jbe
mov
mov
inc
mov
jl
and
sub
call
jnp
dec
fnstcw
adc
add
xchg
test
inc
sub
cmp
loopne
mov
ds
lea
and
jns
sbb
data16
sahf
movsb
sbb
repz
mov
popf
sar
pop
pop
outsb
stos
adc
out
jb
ror
fistps
repz
fs
enter
pop
out
fildl
xchg
sahf
dec
clc
xchg
fs
add
jo
shlb
arpl
cmpsb
or
imul
in
addr16
jo
mov
jl
jnp
and
mov
pop
pop
test
xchg
movsl
fisttpl
mov
ljmp
xor
arpl
cld
jno
push
pop
jecxz
out
pop
out
dec
popa
ds
push
push
je
mov
xorb
loop
in
mov
stc
dec
pop
or
in
xor
adc
inc
mov
sub
push
and
inc
ds
dec
inc
jns
pop
andb
xchg
jmp
ss
rolb
dec
arpl
jne
iret
mov
dec
add
push
pop
inc
mov
fdivrs
ss
daa
hlt
xchg
xchg
out
loopne
clc
push
stos
mov
fnstenv
rcrb
sbb
xor
call
cmp
adc
and
push
andl
ret
addl
mov
and
sbb
lret
ds
pusha
jmp
test
aam
push
jb
and
inc
mov
push
pusha
jg
pop
in
inc
add
adc
imul
movsl
inc
lods
nop
xchg
ret
mov
ds
cs
loop
xor
loop
cmp
adc
int
mov
dec
sbb
testl
xor
into
inc
gs
mov
out
out
sub
lret
es
cmp
mov
repnz
sbbb
sahf
mov
aaa
push
xchg
push
sbb
sbb
out
xor
adc
aaa
ret
or
flds
fstpl
add
lods
or
cmp
daa
inc
or
scas
push
lret
push
mov
ljmp
cld
hlt
stos
and
cmpl
sub
out
int
dec
daa
dec
and
call
pop
movsl
or
pop
pop
sbb
mov
mov
mov
shl
sarb
leave
inc
repz
mov
adc
mov
aaa
xor
or
jo
inc
lods
adc
loope
daa
test
xor
or
push
loop
and
mov
pop
incl
rcll
imul
insl
push
lds
mov
fidivs
jbe
mov
mov
into
outsl
stos
mov
and
push
hlt
mov
inc
mov
cmc
sub
movsl
outsb
lret
and
nop
or
jl
xchg
cmp
shr
mov
iret
sub
ja
sub
dec
and
lock
inc
pusha
fidivs
dec
popa
push
das
lret
outsb
or
es
push
es
jnp
stos
jle
push
movsb
in
negb
mov
sbb
jmp
mulb
push
mov
push
pop
jmp
xchg
adc
add
sbb
int3
rolb
push
jbe
aas
cmp
add
fsts
adc
pop
scas
mov
xchg
sarl
and
xor
mov
xor
cld
add
je
fisubrl
movsl
ret
adc
pop
test
fimuls
dec
repnz
rcll
lods
inc
loope
rolb
gs
adc
jmp
mov
push
notl
orb
push
imul
shr
aaa
mov
aam
lock
popl
mov
es
popf
jmp
es
dec
adc
movsl
adc
les
les
mov
outsb
push
fildl
or
cmp
sbb
movsl
rol
mov
fidivrl
dec
dec
dec
jo
jle
and
jmp
stos
in
xchg
or
add
iret
and
sarb
sbb
sarb
mov
orl
push
jo
and
jmp
orb
cmp
mov
inc
fcomps
out
aas
fcmovnu
test
insb
ror
or
icebp
xor
bound
xor
into
fldcw
fcom
pop
lods
mov
add
js
mov
pushf
xchg
addr16
jmp
or
push
jns
shl
mov
push
fwait
xchg
sbb
cmp
push
xchg
je
inc
es
movsl
decb
cmp
jne
xchg
push
push
adc
add
adc
dec
daa
xor
jge
push
jmp
add
mov
repnz
leave
insb
and
fstl
ficomps
not
mov
jno
imul
repz
jmp
loop
dec
test
inc
xchg
aad
pop
in
cwtl
ficoml
sub
iret
mov
cmp
mov
les
bound
incl
push
scas
imul
cmp
xchg
sub
sahf
test
mov
mov
inc
test
shrl
hlt
fisubl
rcr
lcall
iret
jno
xlat
or
and
or
jecxz
fs
mov
js
mov
or
adc
test
sbb
add
lds
push
xchg
fstl
adc
inc
and
dec
in
mov
jmp
push
mov
xor
aaa
imul
push
cmp
out
into
js
pop
xor
jo
rorl
ds
lods
or
xchg
xchg
daa
in
xchg
inc
cmp
rcll
push
faddl
dec
mov
pop
into
arpl
popf
inc
test
ficompl
fcmove
scas
orb
xchg
xlat
lock
mov
addl
inc
fsubrp
loop
ljmp
pop
fwait
xlat
sbb
xchg
cmpsl
push
addr16
lret
mov
ljmp
pop
push
js,pt
fsts
mov
inc
fucomi
mov
inc
mov
xchg
aam
arpl
or
insl
inc
outsb
sub
rcr
mov
int3
push
shrb
scas
pushf
repnz
pop
cwtl
test
sahf
jno
lret
adc
mov
mov
sbb
test
repz
dec
in
fadd
daa
imulb
xor
add
loopne
inc
push
mov
mov
add
mov
cmp
in
mov
je
pop
jbe
in
or
lods
adc
cld
sbb
add
mov
dec
xor
stc
enter
dec
jnp
or
fld
icebp
and
out
mov
dec
mov
mov
fwait
setae
dec
insb
ret
or
inc
pop
or
and
rolb
jbe
call
mov
js
sub
xor
sub
dec
and
test
fimuls
jbe
sub
das
dec
hlt
lret
int
fwait
into
and
out
and
cmp
xor
out
dec
mov
sbb
xor
mov
inc
loopne
dec
mov
icebp
int3
adcb
xor
push
jmp
shlb
cmp
out
loop
test
jb
mov
imul
ja
cmp
cmp
xchg
xchg
subl
icebp
rorb
neg
cmp
dec
mov
inc
adc
fmull
loopne
jbe
outsl
pop
mov
jmp
inc
movsl
subl
push
gs
aaa
mov
std
rcrl
lret
xchg
adcl
sub
push
and
add
inc
movzwl
mov
push
test
cmp
xchg
loop
outsl
sbb
mov
jo
negl
in
jbe
mov
mov
push
jmp
movl
imul
jns
imul
rolb
or
gs
and
mov
dec
jb
mov
daa
insl
ja
mov
leave
aad
scas
mov
das
enter
jle
push
pop
sbb
fildll
xchg
mov
sti
clc
lret
pop
or
and
imul
add
lcall
pop
sbb
ja
inc
sbb
pushf
gs
subl
inc
xchg
jo
repnz
mov
gs
push
cmpsb
sub
pop
in
push
mov
dec
aad
inc
out
je
dec
xchg
and
fwait
pop
adc
fstps
push
insb
jge
push
and
or
xchg
repnz
sub
cli
shlb
and
into
inc
out
mov
stos
and
scas
xlat
sbb
add
cmp
jae
lret
ficompl
movl
data16
or
jo
or
mov
xor
or
ds
push
and
movsl
mov
pushf
pop
jnp
jo
movsb
lods
sub
adc
fsts
add
loopne
mov
jb
imul
icebp
repz
add
scas
sbb
int
push
adc
push
jne
inc
inc
jno
insl
test
xchg
repz
cmpsl
adc
mov
or
push
inc
xchg
cmp
daa
xchg
into
and
push
fsubs
scas
movsb
inc
dec
mov
push
sarl
xchg
stc
test
cmp
or
divl
adc
mov
fcom
out
inc
inc
jns
and
bound
dec
pop
jnp
adc
fmull
inc
sub
jns
outsl
unpckhps
xchg
jg
call
cmp
scas
cmp
lea
daa
xor
cli
adcb
fbstp
iret
jmp
addr16
aas
scas
stos
jne
xorb
pusha
sub
jmp
setnp
stos
loopne
or
mov
shll
sub
call
inc
es
leave
repz
test
or
mov
mov
dec
aad
jno
ret
or
stos
adc
jae
adc
ja
leave
lods
popf
sarb
lea
dec
aaa
inc
mov
sbb
xchg
aam
pop
dec
dec
push
sub
in
mov
sub
bndldx
loopne
inc
sti
and
pop
or
int
dec
jbe
aaa
push
arpl
dec
xchg
cmp
xor
inc
xor
fsubr
sahf
popf
push
adcb
push
les
mov
mov
mov
mov
fs
jecxz
aam
mov
or
push
mov
pop
hlt
dec
lahf
call
je
jl
jne
mov
stc
pop
negb
sbb
in
jecxz
addl
add
popf
mov
or
adc
gs
test
int3
jnp
cmp
dec
push
pop
repz
lcall
dec
test
lret
cmp
mov
inc
shrl
sbb
call
hlt
xor
add
fwait
jle
pop
stos
aas
add
mov
scas
pop
rolb
mov
pop
testl
dec
fidivl
out
and
mov
sarl
fidivl
lret
popa
mov
mov
jp
stc
lods
test
mov
push
in
add
repz
xchg
cltd
add
pop
and
nop
lret
lret
sbb
stos
popa
xor
mov
jge
in
mov
jno
cmp
clc
mov
not
jbe
mov
imul
test
xor
pop
ret
sub
dec
stc
push
pop
flds
xchg
fbld
pop
mov
jecxz
dec
mov
mov
mov
stos
and
das
lahf
aaa
lret
int
movsb
ret
aad
pop
pop
push
add
fidivl
inc
mov
mov
jns
fnsave
es
push
roll
xor
jae
sub
pop
loopne
inc
lcall
adc
cltd
mov
or
add
push
cmp
dec
or
shll
lret
inc
repz
bound
stos
lods
add
sbb
dec
fstl
push
mov
add
push
ret
or
jge
push
aam
in
cmp
xor
mov
xor
xchg
test
es
es
push
push
jne
test
icebp
shrb
outsl
cmp
push
loope
adc
daa
adc
mov
lds
iret
mov
jno
insb
clc
stos
imul
mov
xor
push
test
stos
jo
mov
mov
hlt
fs
scas
inc
mov
shll
sbb
pusha
repnz
inc
insb
aad
inc
inc
dec
movsl
xor
mov
push
push
xchg
jns
lds
xor
ret
dec
adc
pusha
mov
in
dec
gs
pop
inc
mov
mov
xor
pop
inc
push
and
pushf
mov
push
mov
push
sahf
mov
imul
dec
sbb
or
xor
jns
stc
xlat
gs
pop
jge
mov
lcall
out
push
sbbb
jle
cmp
xchg
stc
mov
pop
push
push
xchg
cmpsl
rorb
popl
lea
mov
xchg
mov
push
sbb
jns
mov
or
movsb
daa
sarb
mov
adc
data16
repnz
cs
mov
js
and
jp
jb
and
andb
and
jb
lock
cli
cltd
call
and
add
lods
pop
inc
mov
enter
cmpsb
cmp
pop
add
dec
jno
sbb
and
iret
imul
inc
lods
push
jge
inc
divb
call
adc
push
xchg
jno
lret
mov
imul
mov
lea
dec
xor
pop
into
sbb
int
aam
addr16
stos
xor
popa
out
rcrb
shlb
cli
movsl
push
dec
inc
fldcw
or
xor
mov
leave
shr
test
or
std
aas
adc
test
dec
lods
sub
dec
mov
addr16
lods
jl
mov
push
jae,pn
xorb
imul
cmc
mov
sub
mov
adc
popf
cmp
xchg
xchg
jecxz
sub
and
shll
sub
popf
aaa
cmp
ret
jle
out
ret
lret
or
sbb
and
jo
jle
sbb
repz
int3
roll
mov
shrl
jp
lds
adc
xlat
xchg
movsb
add
cmp
push
sbb
xchg
mov
or
lahf
xor
jg
ficoml
faddl
insl
popf
nop
sbb
mov
adc
push
xor
cmp
stos
jnp
aam
push
cli
inc
cmp
mov
insb
addl
insb
pop
and
pop
testb
cmc
xor
push
xchg
cmp
xlat
add
adcb
stos
push
sbb
push
stos
inc
xchg
pop
shrd
and
call
cmc
and
sti
in
sahf
add
xchg
adc
lret
jg
in
or
push
lods
inc
ret
fcoms
daa
js
insb
lahf
outsl
jmp
enter
adc
shr
repz
dec
or
cmp
ss
xchg
stos
lock
fsub
das
enter
adc
xor
xchg
add
or
mov
push
adc
shll
cwtl
or
das
lds
and
xchg
jp
int
add
imul
push
fimull
mov
inc
sub
out
cmpsb
inc
imul
lods
stos
hlt
rcll
test
in
or
or
push
sti
mov
add
fsubr
mov
les
dec
lds
shrb
push
mov
lock
into
repnz
mov
adc
or
pushf
jg
dec
dec
gs
repnz
test
and
cmpl
inc
mov
fwait
pusha
xchg
mov
adc
subb
int
insb
leave
std
enter
sahf
push
in
jg
add
in
cmp
sbb
mov
ss
test
xor
pusha
xchg
jae
cmp
fcoml
inc
sti
arpl
scas
repnz
adc
test
in
sub
das
es
sahf
mov
pop
mov
inc
push
inc
sub
xor
es
divl
sub
inc
mov
outsl
jg
sub
push
dec
pop
pop
add
mov
cltd
in
shlb
in
fdivrl
xor
adc
psubb
sbb
jns
jo
test
in
mov
jne
adc
inc
std
cld
and
repnz
mov
xchg
shrl
movsl
or
jp
xchg
add
xlat
rcr
xchg
mov
addr16
loopne
aas
fwait
and
sahf
push
das
mov
or
inc
sbb
mov
sbb
or
cmp
dec
pop
rclb
adc
lock
out
popf
xchg
pop
cmp
mov
inc
xsavec
xchg
add
mov
aam
push
inc
mov
fbstp
out
sub
dec
lods
test
lock
test
fwait
gs
inc
xchg
adc
movsb
jmp
rolb
or
test
outsb
inc
adc
shl
daa
dec
inc
and
add
sbb
call
imul
stos
das
mov
dec
cld
ds
sbb
arpl
cmp
xchg
cmp
or
sub
repz
push
sbb
inc
aaa
fisubl
mov
out
add
test
dec
lods
stos
loope
mov
pop
jbe
adc
lods
getsec
cmp
cmp
cmp
pushf
jg
cmp
lods
out
imul
icebp
scas
or
cmc
mov
jg
lds
in
movsl
aaa
lahf
push
mov
shrl
shrb
les
mov
dec
mov
ror
xor
jp
push
xlat
mov
fldl
jns
sub
iret
js
sbb
or
fimull
xchg
adc
adc
jp
nop
mov
cmc
std
mov
sysenter
icebp
mov
dec
mov
adc
insl
push
rcrl
cltd
sbb
fmul
lods
jp
sbbl
cs
mov
pop
hlt
int3
rcr
shrb
mov
enter
fmuls
ror
scas
imul
mov
adc
imul
dec
add
or
jp
inc
mov
icebp
pusha
pop
dec
loope
cmp
dec
sbb
enter
xor
lahf
cli
call
sti
fdivs
inc
mov
sbbb
pop
pushf
fmuls
lock
sbb
cltd
out
and
mov
inc
jp
dec
mov
sbb
mov
enter
clc
jbe
mov
sub
cmp
inc
mov
xor
pop
sub
adc
icebp
out
mov
in
xor
test
inc
or
daa
add
sub
pusha
xor
jge
lea
pop
repz
daa
cmpsl
lods
shl
mov
dec
xchg
scas
js
out
jle
fdiv
push
scas
inc
pop
xchg
push
jmp
inc
pop
or
mov
jno
mov
push
jno
add
andl
outsb
es
ss
add
cmp
jmp
jmp
pop
dec
jb
inc
rcr
mov
push
shlb
inc
cmp
stos
cmp
sti
jne
lret
lcall
add
insb
adc
adc
fsts
push
rorl
cld
add
mov
stc
jle
fadds
outsl
loopne
ja
jno
int3
xchg
or
mov
scas
imul
outsb
dec
dec
adc
lods
in
dec
cmp
das
jmp
push
push
mov
push
aas
add
negb
pop
cli
cmp
aas
mov
sbb
shll
sbb
pop
scas
mov
mov
hlt
or
and
nop
mov
mov
cld
mov
ja
pop
loope
cmpsl
lods
or
xchg
das
rsqrtps
fimuls
push
andl
test
fwait
insl
cmp
frstor
mov
jbe
and
add
loopne
inc
mov
sub
cmp
pop
jne
add
mov
fwait
mov
ret
jle
ljmp
and
ret
leave
mov
jns
or
cltd
aas
mov
shll
xor
push
mov
je
sbb
loope
data16
scas
pop
cmpsl
push
scas
pop
das
pop
out
inc
sub
ret
testb
mov
jns
das
mov
xor
pop
test
loop
sub
call
ror
pop
repnz
js
inc
in
jo
or
or
stc
stos
xchg
and
dec
and
call
adcb
pop
into
dec
push
sbb
dec
cmp
inc
mov
xlat
nop
xchg
pop
ljmp
inc
fnstsw
mov
fisubrl
sbb
mov
movsl
mov
imul
mulb
xor
xchg
decl
or
adc
cs
push
xor
pop
mov
rcll
test
ljmp
inc
mov
dec
adc
out
add
iret
push
mov
sub
push
and
dec
sbb
dec
not
jno
leave
leave
and
xchg
pop
loop
ficompl
mov
pop
lea
scas
sti
push
into
sarb
pop
push
xor
mov
test
add
mov
mov
jg
xor
mov
es
sub
aad
insb
push
enter
les
shlb
push
add
out
jne
mov
lea
mov
cmp
add
cmp
mov
or
loop
fildll
mov
or
xchg
sti
xlat
mov
jecxz
push
xchg
cmpsb
adc
add
mov
in
push
in
push
xchg
xor
mov
ret
push
pop
dec
sbb
arpl
fs
cli
imul
arpl
pop
pop
test
adc
xor
imul
mov
adcb
movsw
ss
jns
iret
leave
out
insl
mov
sub
test
stos
andl
repz
cmp
inc
jl
mov
or
ret
inc
xlat
mov
loop
stos
ljmp
cli
jmp
adc
mov
xor
dec
mov
xor
mov
in
pop
pop
fisttpll
pop
or
cmpsb
xlat
sti
xchg
mov
push
or
xor
ret
lahf
test
xchg
hlt
test
lret
addl
mov
mov
mov
icebp
inc
push
inc
popl
push
stc
lret
dec
inc
es
test
pop
add
xchg
mov
cltd
cli
add
dec
mov
sbb
enter
popa
negl
out
xchg
es
pop
mov
xchg
decl
or
mov
pop
hlt
pushf
arpl
cltd
imul
sub
cli
lock
dec
inc
push
popa
fnsave
adc
mov
loopne
pop
sub
xchg
xlat
pop
adc
push
jbe
outsb
mov
cmp
jbe,pt
insl
push
fistpl
and
test
jecxz
pop
xchg
push
into
orl
mov
bound
mov
pushf
xorl
fs
cmp
or
lods
xor
out
popf
out
scas
mov
adc
inc
incb
pop
inc
cld
mov
or
incl
repnz
imul
pushf
mov
mov
jbe
mov
lds
add
jge
mov
in
pop
push
jae
xchg
xlat
adc
gs
xchg
inc
sub
pop
stos
push
sbb
insb
push
aad
inc
inc
xorl
mov
cmc
das
mov
xchg
pop
jb
int
cmovnp
cmpsl
loop
test
pop
push
cmp
mov
inc
cmp
or
ds
push
dec
aas
pop
aam
sub
in
pusha
sub
pop
cmp
les
aas
or
dec
cs
xor
jbe
mov
jne
and
xchg
ret
movsl
xchg
sub
vminps
fnsave
pop
jle
sub
xchg
xor
xor
mov
adc
stc
les
out
cmp
mov
subl
pop
cs
jg
ss
cltd
cmp
lahf
xchg
adc
test
push
fnsave
or
in
sti
scas
jmp
add
fadd
fs
and
mov
movb
inc
arpl
lods
push
jb
xor
shll
shl
bound
mov
xor
cmpsl
dec
or
sub
jno
push
cmp
add
or
sarb
insl
out
cmp
or
add
jb
add
iret
roll
rclb
cli
mul
push
stc
push
dec
out
aaa
mov
adc
inc
dec
js
jns
push
pop
incb
std
jmp
push
mov
arpl
jns
stc
fcompl
pop
mov
lods
ret
fbld
fsub
xchg
in
int
lock
sub
outsl
stos
mov
xor
dec
push
pop
aaa
dec
dec
push
mov
imul
mov
xorb
pop
xlat
or
fwait
ja
std
aas
popf
lcall
cs
mov
out
fsub
push
idiv
and
popa
mov
sub
mov
jmp
cli
sub
std
popf
mov
rorl
mov
xchg
pop
mov
cmc
or
lret
cmp
dec
mov
call
mov
push
mov
rorb
inc
inc
push
sbb
xchg
add
mov
push
lret
mov
repz
sub
daa
clc
ret
dec
xchg
test
pop
in
adc
mov
sub
and
call
sub
mov
cld
pushf
inc
pop
sbb
popa
out
xchg
xor
enter
das
das
mov
in
in
insl
mov
fwait
jge
jno
mov
cmp
mov
aad
xlat
cmp
lods
lcall
lods
mov
xor
clc
xlat
data16
lds
in
sbb
lret
lahf
inc
cmpsb
movsb
xor
sub
fwait
add
hlt
pop
jns
mov
dec
jbe
jmp
das
mov
cmp
cld
cs
mov
sub
cmc
adc
mov
and
mov
pop
je
aaa
push
testl
pop
negl
arpl
jnp
lahf
in
push
leave
call
xlat
and
adc
stos
mov
mov
call
xor
adc
sarb
cld
cld
lret
pop
fiadds
faddl
mov
shrb
loope
rol
or
or
mov
gs
fbstp
add
shl
sbb
mov
lods
jae
aas
add
pop
dec
cli
loop
mov
mov
xor
add
mov
xor
les
pop
ljmp
aam
xor
enter
cmpsb
sub
mov
sub
rolb
shr
mov
jl
add
pusha
ror
cmp
jl
ret
insl
scas
cmpsb
movsl
in
jmp
push
jle
aad
xchg
sbb
xchg
mov
ret
mov
lret
sti
outsb
xchg
imul
dec
mov
mov
dec
push
pushf
fucomp
leave
in
jae
jecxz
icebp
sbb
ror
xlat
fnstenv
popf
inc
ja
push
nop
sti
icebp
mov
dec
xor
jle
xor
repz
push
addr16
rcrl
cwtl
jmp
push
shlb
lahf
enter
movsb
mov
pusha
and
mov
mov
xchg
pop
xor
mov
cmpsl
cmpsb
ss
dec
pop
cmpsl
cwtl
adc
sbbb
dec
sbb
insl
icebp
out
pop
mov
jp
inc
int
lea
shl
jnp
sbb
xchg
cmp
js
ja
cli
gs
mov
sbbb
jbe
or
xor
mov
pop
iret
sbb
xchg
in
stc
cmpsb
fiadds
stos
adc
nop
xchg
lea
rcrl
or
movsl
fistpl
jmp
sti
pop
or
call
adc
fs
or
mov
jo,pt
rol
pop
mov
and
loop
aam
loopne
xchg
mov
push
clc
add
idiv
fsubrl
lahf
xchg
mov
cmpsl
sarb
leave
mov
xlat
or
ret
lds
sbb
or
xor
adc
lret
in
popf
jae
mov
cmpsl
push
xchg
mov
mov
mov
shl
out
inc
pop
pop
dec
cmp
inc
and
enter
adcl
in
dec
mov
dec
dec
push
jmp
dec
enter
shrb
adc
cmc
and
mov
pop
push
inc
cmp
rcr
popa
ret
cmpsb
xor
mov
push
lock
cmp
lds
sub
sbb
xchg
xchg
dec
cmc
sub
js
pusha
xor
jge
dec
call
stos
fwait
loopne
lcall
dec
or
pop
mov
inc
inc
addr16
jbe
enter
and
pop
ds
int
icebp
iret
xorl
add
push
inc
jne
cmp
push
fists
testl
fsubr
xchg
add
addr16
sbb
dec
fiaddl
sub
mov
mov
mov
mov
adc
cmp
sbb
jg
pop
mov
testb
fs
mov
mov
add
cmp
sti
pop
or
lcall
push
jl
lahf
jnp
lahf
inc
sbb
scas
mov
pusha
sub
sub
dec
cld
jnp
inc
jecxz
testl
aam
in
sub
out
pop
adc
sar
daa
or
icebp
mov
test
das
mov
rcrb
pop
inc
push
mov
idivl
pushf
loopne
and
push
aaa
popa
jne
cmc
mov
push
int
jbe
enter
rcrb
pop
je
fdivl
ja
pop
loopne
lds
insl
or
lea
mov
movsb
or
inc
inc
mov
inc
arpl
sub
xchg
cld
push
jb
outsb
icebp
lods
cmpsl
cld
cmc
lret
cmpsb
aad
add
and
sbb
dec
push
sbb
mov
ja
mov
sub
push
or
out
test
or
xchg
testb
fistl
fs
test
subl
inc
mov
mov
imulb
push
mov
push
sbbl
jge
test
cmpsb
or
push
mull
repz
or
cmp
shr
dec
jmp
lds
mov
aas
jl
dec
enter
fcoms
aad
fwait
movsb
pmulhuw
shrb
push
int
fnsave
xchg
pushf
push
in
scas
imul
sub
pusha
push
pop
rcll
and
add
int3
call
dec
add
roll
call
in
aam
fstpl
jns
add
cmpsb
std
dec
xchg
jno
jmp
stos
pop
hlt
xchg
loope
pop
xchg
in
test
jbe
ret
mov
xor
in
sub
cwtl
cmpsb
pop
bound
cs
add
and
mov
push
in
jmp
scas
mov
lea
gs
push
pop
leave
push
stos
fistpll
orl
in
mov
and
xor
jns
push
pusha
enter
cli
sahf
xorb
stc
mov
or
rcrl
mov
xchg
add
dec
push
je
adc
pusha
xchg
popf
inc
jp
into
int3
and
shr
sub
dec
pushf
popa
lds
lcall
sbb
mov
xor
or
push
inc
mov
hlt
divl
mov
xor
insb
mov
inc
call
mov
icebp
and
and
jns
pop
mov
rcl
lods
jae
dec
sbb
adc
cmp
stos
pop
ss
stos
hlt
mov
arpl
fs
mov
sbb
jp
cmpsb
divl
ljmp
sub
mov
outsb
sbbl
sbb
mov
into
xchg
testl
jmp
shll
loopne
insl
lea
lret
pop
add
lds
enter
adc
imul
pop
das
pop
std
xchg
lods
push
aas
mov
ret
loop
or
lods
jge
push
xchg
jecxz
aam
fnsave
cmpsl
sbb
cs
mov
sbb
cmp
rcr
or
and
and
clc
mov
shrb
add
xchg
pop
stos
sub
fwait
ret
sbb
xlat
cld
movl
push
lea
xchg
mov
lret
xchg
mov
push
sbb
mov
push
lahf
sbb
jge
rcrl
lods
inc
mov
shll
and
fsubl
adc
pop
jmp
jns
iret
aaa
fcoms
lret
sub
aad
pusha
pop
push
jb
rcl
punpcklbw
add
lahf
popf
mov
adc
fdivs
pop
arpl
dec
jae
fcoml
cwtl
add
xor
movsb
push
dec
xchg
inc
pop
cmpsb
jmp
mov
cmc
push
push
xchg
cld
lds
add
fsubl
xchg
xchg
outsl
sbbb
add
inc
lock
adc
les
cs
or
sahf
xchg
fwait
cmp
loope
dec
rcll
pop
out
es
push
push
mov
mov
mov
popa
push
inc
and
mov
inc
or
dec
xchg
xchg
xchg
adc
and
adc
je
jb
xchg
add
lea
pop
lcall
mov
movsl
sub
cmp
xor
jbe
cmp
inc
out
xchg
dec
adc
testl
call
adc
iret
mov
mov
out
xchg
bound
mov
add
dec
stos
jne
pop
lds
in
jb
inc
mov
mov
sbb
rorb
ret
dec
jg
push
rcr
outsb
test
dec
xchg
and
jg
rcrl
cmpsl
mov
aas
push
mov
push
dec
stc
xcrypt-cfb
cmpsl
mov
daa
pushf
xchg
std
rcll
in
xchg
jns
jge
cltd
cld
or
push
clc
pop
mov
or
mov
ljmp
faddl
lret
mov
test
pop
mov
dec
or
adc
add
iret
push
test
pop
test
or
loope
and
xlat
cmp
or
movsl
shlb
lret
aad
js
out
pop
in
nop
mov
cwtl
xchg
aaa
andl
cmp
xlat
jmp
ret
dec
mov
int3
jecxz
pusha
fiaddl
or
dec
rclb
aam
stc
xchg
incl
mov
add
add
inc
or
and
testl
dec
int
int
inc
mov
or
rorl
xor
outsl
outsb
icebp
ficoml
test
lds
out
sarb
js
cli
adc
dec
xlat
jnp
scas
and
rcll
or
inc
mov
fs
xor
jne
sbb
xchg
xlat
mov
jno
cmpsb
aam
add
pop
jae
cmp
mov
mov
fcoms
mov
icebp
jp
call
js
ja
je
pop
out
push
adc
mov
insl
loopne
push
lret
sub
inc
test
push
fs
mov
push
lds
xchg
sub
pop
pop
push
push
mov
sbb
sub
push
pusha
loop
push
ficoms
clc
fnstsw
cmpsl
dec
stos
or
movsb
push
xor
cmpsb
notl
popf
jne
adc
sub
xchg
or
inc
in
push
cld
dec
je
dec
mov
pop
fimull
outsl
cmpsl
cwtl
dec
sahf
ret
xor
xchg
fsts
jnp
jno
mov
call
test
jmp
loope
call
shrb
loop
push
jecxz
inc
inc
cmp
out
dec
mov
in
adc
sarl
dec
adc
inc
out
or
adc
sub
inc
mov
hlt
lcall
xor
inc
fwait
iret
in
dec
jp
xchg
testl
dec
fwait
xchg
mov
sahf
stos
pop
add
arpl
out
gs
fcompl
sub
popa
lods
add
les
mov
mov
ret
push
rcl
xor
mov
sbb
ja
divl
push
jge
inc
je
hlt
push
icebp
hlt
lcall
movsb
iret
test
mov
jge
repnz
mov
mov
inc
aas
push
cmpsl
push
pop
xor
fmul
xlat
add
sbb
push
movsb
mov
xor
int3
sbb
iret
xor
inc
lahf
shll
gs
inc
scas
inc
push
inc
mov
pop
jno
enter
cs
xor
subb
sbb
shll
cmpsl
add
adc
mov
imul
and
or
dec
jbe
shrl
mov
adcb
loop
xchg
jne
sbb
jns
das
test
dec
sti
int
xlat
sbb
mov
out
out
sarb
push
dec
adc
pusha
jp
push
pop
jnp
ret
insb
sub
and
xchg
lret
mov
enter
dec
cmp
inc
sbbl
cs
xor
in
or
mov
int3
pop
pop
je
and
add
mov
adc
repz
xchg
push
outsl
insb
jg
jne
ret
movl
fsub
xchg
adc
sub
mov
aam
inc
xor
lcall
mov
and
stos
sbb
sub
aas
rolb
and
jmp
test
arpl
ja
outsb
and
or
cld
adc
in
or
dec
jns
inc
dec
sub
pop
inc
ds
ds
jno
jne
push
aad
sub
out
adc
stc
xor
jecxz
pop
jbe
jge
imul
adc
dec
inc
cmp
push
fsubrl
mov
dec
pop
lcall
pop
cld
sub
ficoml
daa
aas
push
les
out
pop
cmp
sbb
repnz
xchg
or
iret
imul
gs
stos
fwait
or
dec
outsb
stos
hlt
cmp
out
push
mov
push
dec
push
xlat
sub
nop
jbe
mov
jmp
push
push
xor
sarb
adc
add
mov
sub
sub
cmp
mov
adc
pop
sbb
fistps
mov
fbstp
bnd
decl
mov
inc
hlt
inc
and
jbe
sbb
inc
bound
inc
pop
imul
loopne
movsb
mov
ja
enter
cli
xchg
lods
xchg
mov
inc
jnp
mov
leave
sbb
ss
dec
shll
jns
mov
mov
shlb
jg
or
xchg
imul
push
test
add
pushw
and
fs
rclb
adc
cs
in
daa
lods
mov
out
test
aas
rcl
rolb
pop
push
rcll
jnp
xchg
ja
cmp
fwait
jnp
jge
cmc
lcall
push
lret
adc
xchg
mov
add
subl
mov
aas
push
push
pop
call
mov
psubusw
jb
add
cld
sub
xor
pop
xchg
sub
xchg
ja
adc
mov
fcmovnu
sbb
pop
lds
jb
or
and
test
fcompl
into
stc
aam
adc
cmp
mov
dec
add
pop
popf
fisttps
test
incb
je
inc
imul
push
leave
out
ret
data16
xor
arpl
xlat
sbbb
xor
fcomps
lret
dec
je
lea
cmp
sbb
push
aam
jecxz
add
fdivs
xor
lret
or
dec
xor
dec
jg
insl
mov
not
nop
icebp
mov
sub
jb
pop
jg
in
mov
addr16
xlat
mov
add
inc
test
out
dec
xor
inc
jo
sbb
std
jp
hlt
aaa
add
pop
jb
vmovdqa
ret
jmp
in
stos
adcl
cmpsl
scas
stc
cmpsb
out
cld
sarl
stos
lods
push
outsb
cld
nop
arpl
outsb
fbld
fldcw
in
mov
jns
fwait
xchg
sbb
jecxz
popf
sbb
stos
cmp
clc
inc
mov
dec
mov
dec
jl
mov
shll
adc
outsl
mov
mov
rolb
sbb
inc
push
sbb
dec
inc
push
xchg
sub
mov
ljmp
dec
stos
cmpsl
in
xor
stos
pop
adc
xchg
test
push
mov
cmp
push
ret
inc
cmc
int
hlt
inc
test
inc
or
and
cld
adc
rcrl
repz
test
pop
lahf
sarl
out
xor
xor
pop
outsb
mov
imul
outsb
dec
mov
rorl
sub
fnsave
cmp
addb
jge
adc
mov
aad
sar
pop
pop
adc
icebp
jmp
xchg
or
aad
mov
push
movsl
jl
pop
mov
clc
lahf
out
in
inc
push
fadds
cs
scas
cmp
dec
popa
xchg
sbb
gs
arpl
adc
adc
mov
jecxz
movsb
push
xchg
insl
jecxz
add
fs
sbb
push
xor
ds
std
in
xchg
dec
fsub
cmp
enter
and
scas
pop
mov
mul
cli
sub
cwtl
dec
pop
leave
into
push
loop
filds
cmpsb
or
push
mov
jo
mov
inc
pop
das
pop
mov
in
in
mov
lods
or
lods
inc
addl
pop
outsb
ret
je
lea
add
or
xchg
mov
or
dec
data16
roll
jb
lcall
xchg
xchg
cmc
leave
add
lret
into
cmc
adc
int3
jns
pop
inc
cmpsl
xchg
or
jl
cmp
imul
sarl
and
cmp
xor
cmc
hlt
cmp
int3
clc
xor
xchg
mov
mov
imul
push
add
cmp
mov
sbb
hlt
je
scas
clc
out
inc
les
dec
push
lcall
into
ljmp
test
pop
jo
pop
and
lahf
push
shlb
mov
call
ljmp
insl
dec
mov
cld
pop
pop
in
inc
push
mov
fsubs
mov
das
iret
push
jnp
push
add
out
xchg
jp
cmp
cmp
adcl
das
cmp
xchg
notl
pop
stc
out
inc
push
mov
and
idivb
sahf
adc
ljmp
fsubl
xor
daa
out
ret
jo
pushf
pusha
mov
in
and
frstor
mov
xchg
xchg
cmp
xchg
fcmovbe
ret
mov
jge
orb
or
and
xlat
outsl
pop
sub
test
idivb
inc
inc
push
sbb
push
je
scas
or
stos
lret
int3
das
ljmp
mov
dec
bound
pop
lret
je
cmp
aas
loopne
outsl
xchg
jns
int
or
js
outsl
cmp
xchg
out
rcr
mov
mov
cld
inc
sbb
xor
dec
and
jg
xchg
xor
cmp
cmp
or
add
xchg
js
repnz
aad
sbb
inc
je
mov
inc
jo
lea
js
stc
cmp
inc
mov
cld
jb
pop
or
xor
mov
mov
imul
xchg
sbb
stos
inc
loope
sub
mov
jle
lods
xchg
add
icebp
addl
inc
jecxz
jecxz
jl
jne
insl
pop
xchg
sbb
int
jle
in
dec
shl
pop
sarb
push
daa
fdivrs
cmp
jmp
mov
jmp
and
in
out
aaa
jb
mov
mov
mov
loop
loope
es
pop
outsb
arpl
mov
dec
xchg
mov
sub
jne
mov
test
mov
mov
push
les
aaa
adc
loop,pt
inc
sbb
cli
insl
fidivs
xor
mov
aaa
jns
lods
shl
sahf
arpl
dec
out
aaa
mov
inc
outsb
mov
adc
add
push
movsl
adc
iret
pop
jns
das
cs
lcall
sbb
push
popa
lahf
int
mov
xor
fmul
jecxz
sahf
push
pusha
inc
dec
lock
xchg
test
pusha
rorb
scas
mov
mov
ror
repz
mov
fcoml
cwtl
sub
sbb
in
aam
fwait
inc
inc
fisttpl
push
ret
add
xor
imul
push
add
lods
mov
inc
mov
mov
jp
push
scas
in
push
int3
mov
add
ret
jb
test
in
mov
mov
jmp
in
xchg
int
inc
lods
ret
enter
pop
lea
lret
inc
sahf
mov
mov
mov
movsl
or
cs
orl
adcb
arpl
pushf
insl
jmp
xchg
xchg
add
pop
mov
cltd
mov
je
icebp
div
cmpsl
jmp
clc
jnp
jecxz
lock
push
cmc
scas
je
imul
add
pop
imul
mov
out
jp
fldl
mov
sahf
call
mov
inc
dec
sbb
pushf
jno
out
roll
ss
adc
sub
ja
fldl
xor
stos
mov
imul
jns
xor
hlt
sbb
ja
into
adc
aam
jp
fdivl
dec
mov
lds
das
cli
push
push
jnp
shlb
test
ret
pop
xor
popa
or
mov
ljmp
sbb
push
xchg
bound
cmpsb
adc
lahf
gs
and
cmc
xchg
sub
jge
sbbb
cltd
jno
mov
sbb
jl
mov
lods
fldenv
hlt
dec
mov
xrelease
stos
and
in
lcall
into
or
mov
mov
or
cmpsb
inc
cli
ret
arpl
clc
incl
adc
out
xchg
mov
pop
or
data16
lahf
sbb
leave
dec
mov
xor
ljmp
push
sarl
lcall
inc
leave
add
or
fstps
lahf
lods
int
fstpt
sahf
mov
aam
insb
push
add
pop
jae
and
lea
mov
sub
adc
xor
inc
jge
js
jecxz
mov
push
aad
dec
fmull
popa
icebp
adc
popf
das
imul
sub
sbb
leave
xor
in
adc
cmp
insl
mov
mov
jnp
dec
fsub
js
add
push
jb
cmp
inc
test
mov
cmp
stos
push
adc
stos
sbb
jae
add
je
mov
sbb
jbe
arpl
cld
es
or
repnz
stos
or
arpl
push
pusha
fwait
shll
insl
pop
movsb
mov
mov
stc
int3
cmc
xchg
lds
mov
xor
ja
ret
mov
mov
jae
pop
sub
movsl
psubsw
inc
vmwrite
aam
sbb
mov
mov
test
in
mov
mov
xor
inc
inc
and
push
pushf
hlt
mov
jge
in
add
sbb
inc
xor
push
test
dec
or
xchg
fcompl
push
pusha
arpl
jle
pop
out
xchg
pusha
push
rcrl
in
mov
repz
mov
lahf
jb
jmp
cmp
and
jmp
insb
mov
dec
xor
cltd
test
das
std
out
mov
ja
fwait
scas
push
insb
cli
mov
stos
pop
sbb
mov
mov
insb
push
adc
arpl
xor
adc
fildl
dec
mov
dec
mov
add
xor
inc
int3
push
rcl
sub
fsubl
jne
jb
shl
loop
fwait
sbb
push
or
aam
fidivs
dec
in
mov
cmp
nop
cmp
push
inc
push
push
sbb
add
std
repz
out
adc
fcoms
scas
mov
loop
in
lret
dec
nop
cmpsl
in
insb
fnsave
pop
xor
push
xor
inc
std
popf
nop
addl
cmp
mov
add
lods
adc
xor
cs
addr16
daa
movsb
sbb
add
fwait
hlt
lock
popa
jp
in
outsb
inc
cmp
leave
xlat
repz
mov
sub
ret
movsl
dec
cmp
aad
lahf
and
out
cmp
pop
mov
inc
popa
das
cli
nop
mov
sti
aaa
fwait
jmp
lock
xchg
icebp
je
icebp
jnp
inc
shrl
dec
shl
pop
lret
xor
xor
push
mov
add
xchg
negl
xchg
push
pop
xor
mov
and
lock
fwait
cmp
add
pop
rolb
ja
cltd
clc
in
and
dec
popa
out
push
nop
dec
ret
push
cld
scas
mov
stos
pop
lret
jae
dec
xor
sbb
and
jae
xor
cwtl
jl
inc
std
push
jp
rdtsc
shll
inc
jg
lahf
sahf
add
mov
orl
lock
sbb
push
lods
mov
jl
sbb
ret
lcall
xchg
enter
mov
punpcklwd
lock
ror
cld
test
int
test
inc
and
aas
shr
pop
notl
or
push
xchg
loop
or
mov
add
inc
add
out
xchg
fisubl
jb
enter
ja
xchg
jns
adc
pop
inc
mov
jne
sub
cmpsl
and
test
scas
retw
dec
cltd
or
vmovsd
icebp
lahf
pop
adc
dec
xchg
xchg
mov
jnp
push
mov
cwtl
inc
cmp
jg
popf
jo
jnp
adc
xor
in
xor
xchg
cli
cmp
cmp
mov
hlt
push
std
xor
mov
test
cmp
in
adc
in
xlat
or
bound
mov
mov
and
inc
inc
jge
lods
cmpsl
cli
arpl
bound
cmp
stc
inc
jmp
dec
shlb
imul
arpl
add
pop
mov
jb
add
add
pusha
push
roll
add
aam
mov
outsb
insb
pop
or
pop
mov
int3
xor
and
sub
and
lret
or
jns
push
in
ret
idiv
sbb
movsb
ret
hlt
sub
add
sbbl
inc
popf
pop
adc
std
jns
jne
popa
nop
adc
push
outsb
fsubs
shr
jne
and
sahf
sbb
dec
dec
and
arpl
mov
daa
cld
mov
fwait
jno
pop
xor
movsb
fisubs
push
jl
hlt
or
xchg
push
testl
add
mov
lret
jnp
sub
aas
xor
push
adc
pushf
inc
or
cmpsl
rolb
ss
dec
pop
in
sbb
cli
jl
in
ja
mov
inc
loopne
add
outsl
jmp
nop
lods
repnz
and
inc
nop
cmpsl
and
xchg
stos
in
sbb
xchg
jbe
mov
aaa
orb
gs
mov
inc
push
in
or
into
cs
out
jp
dec
addl
add
sarl
lods
mov
xchg
pop
pop
pusha
sti
decl
add
add
mov
imul
add
je
je
sahf
mov
adc
push
lcall
pop
in
ss
pop
cmpsl
std
enter
and
xchg
repz
xchg
call
stos
push
out
mov
adc
int3
inc
mov
pop
scas
movsb
nop
testb
pop
stos
lea
jle
scas
mov
push
data16
dec
data16
pop
pop
jae
shrb
xchg
push
sbb
inc
mov
inc
sbb
jne
sub
mov
push
cwtl
pop
test
cmp
nop
sub
decl
inc
lea
les
cmp
xchg
mov
rorl
sbb
scas
xchg
test
fidivrs
jno
lgs
adc
imul
test
lcall
out
push
imul
fcoms
inc
pop
cmp
scas
jo
idivb
add
cmp
push
add
pop
into
jg
sub
rcll
fsubl
cli
dec
nop
xchg
jl
pop
mov
adc
pop
fsubrs
gs
loop
jge
mov
jae
cmc
sbb
pushf
cwtl
mov
xchg
cmp
dec
pop
nop
or
test
out
or
mov
js
inc
dec
mov
mov
lret
add
sub
popf
xchg
mov
loopne
pop
add
fildl
push
ljmp
add
mov
fs
jp
inc
mov
in
call
popa
mov
leave
push
xchg
dec
mov
xlat
mov
shlb
inc
jp
insl
ljmp
imulb
pop
xchg
into
sub
xor
push
clc
xchg
popf
cmp
rorl
clc
inc
cli
inc
in
enter
sti
pop
cmp
popf
es
fisttpl
jb
and
sub
add
inc
stc
gs
sub
sbb
sarl
into
add
cltd
inc
cmp
mov
outsb
jae
adc
adc
sbb
or
sbb
icebp
jmp
loopne
push
and
or
push
mov
mov
lahf
pop
mov
add
cwtl
push
mov
idivb
push
ds
or
ror
sbb
roll
cmp
lds
sub
jmp
bound
scas
mov
push
pusha
mov
out
aam
cmp
fdivrp
push
mov
pop
dec
adc
jb
xor
xor
jmp
cmpsl
jb
or
adc
mov
std
adc
xor
test
lcall
lock
mov
dec
jae
pop
mov
cmp
ret
push
ret
dec
insl
inc
inc
lret
into
ja
push
loopne
lret
popa
flds
ja
sbb
addl
lret
mov
sti
pop
stos
sbb
stos
pusha
mov
gs
dec
jmp
scas
adc
sub
ret
push
adc
daa
pushf
std
push
sbb
adc
lods
sub
or
cli
inc
testb
pop
add
pop
xor
ror
pop
add
dec
out
dec
add
fdivrl
jle
iret
aam
data16
add
jge
adc
shld
lret
push
lea
scas
cmc
or
es
cmp
je
out
les
or
scas
sbb
insb
andl
jnp
stos
cmp
mov
hlt
mov
push
sub
addr16
jg
dec
mov
add
imul
push
push
cmpl
cs
xchg
xor
xchg
jge
jb
xchg
pusha
pop
lret
dec
adc
jg
jl
lea
pop
test
adc
mov
out
mov
popa
add
xchg
cltd
push
add
popf
cld
call
lock
enter
and
ljmp
test
sbb
or
call
adc
in
test
add
imul
dec
lods
xchg
pop
xor
sbb
add
es
inc
pop
mov
jne
cmpsl
sbb
popa
sbbl
lret
mov
jb
inc
insl
addr16
xor
pop
jbe
scas
sahf
daa
jne
fidivl
xchg
add
pop
bound
sub
lret
sti
xchg
mov
shlb
mov
cltd
mov
fmulp
repz
imul
orb
jl
or
xchg
inc
pop
data16
mov
mov
call
es
cmp
mov
pop
mov
sahf
xor
cmpsb
jle
push
add
mov
jecxz
cld
dec
aam
add
adc
or
jp
sti
icebp
mov
fidivs
pop
sbb
mov
in
mov
adc
jbe
clc
rcl
vpshaw
shll
bound
xchg
xchg
cli
cmc
sti
xchg
call
pop
jae
pop
imul
ffree
push
sub
push
mov
rorb
orb
cmp
testl
cmpxchg
and
dec
pop
fidivs
loop,pt
xor
inc
cmp
xchg
mov
mov
mov
mov
cmp
movsb
stos
pop
in
sbb
add
sti
or
leave
aad
push
sbb
xchg
cmpsl
insl
jge
xor
and
call
dec
or
aas
and
mov
cmp
sub
fcoml
push
loopne
xor
jp
call
clc
cwtl
sti
repz
cli
jbe
sub
pop
neg
dec
push
inc
add
pusha
mov
jl
jnp
dec
ljmp
out
ja
sbbb
or
int3
sbb
add
clc
jp
xor
aad
mov
test
mulb
gs
sahf
mov
push
dec
dec
mov
call
daa
xor
push
fsts
add
mov
push
dec
xchg
mov
iret
arpl
inc
outsb
pop
repz
sbb
adc
hlt
add
push
pop
xor
cmp
mov
lahf
out
out
push
lods
jns
lahf
and
fcoms
push
jnp
sub
sbb
push
or
fstp
cmpb
add
aad
std
xchg
nop
int3
mov
shrl
add
jmp
stc
lods
popf
mov
push
add
sti
add
int3
mov
movsb
cli
cmp
pop
in
popf
daa
test
xor
xchg
push
ss
mov
pop
sub
jno
cli
xchg
lahf
mov
das
ret
call
les
movl
bound
mov
popf
jl
sub
xrelease
movsb
sahf
sbb
xchg
dec
addr16
jle
shrb
and
xor
pop
sarl
xlat
stc
or
mov
pop
pusha
dec
imulb
scas
dec
fcmovnu
faddl
cmp
repnz
xor
xchg
jns
sbb
sub
mov
push
jns
ds
sub
xlat
sub
pop
and
in
nop
sbb
dec
sarl
xor
mov
sbb
outsl
lods
or
pop
mov
lds
mov
mov
in
dec
sbb
pop
sbb
xor
aaa
pop
or
adc
sbb
ljmp
or
mov
add
mov
mov
jmp
sub
fidivs
insl
or
rcrl
in
jae
mov
in
sub
jne
jmp
fwait
add
shlb
jg
pop
lret
xor
rcll
push
movsl
dec
insl
fistl
arpl
add
cmp
hlt
xchg
loope
sub
mov
out
stos
das
out
jno
das
fdecstp
sbb
mov
pop
pop
iret
pop
ja
cmc
pop
push
jl
adc
scas
andl
push
push
std
jle
idiv
sub
mov
out
int
push
dec
aam
movsl
jmp
cld
movb
push
mov
ret
insb
ret
mov
scas
cmp
lods
js
int3
out
cmp
lods
mov
push
sub
pop
clc
shr
push
or
nop
mov
xor
cwtl
sub
clc
and
push
iret
sti
sbb
andb
out
xor
mov
cli
repz
xchg
or
movsb
ds
xchg
hlt
es
jbe
add
adc
and
pand
pop
in
mov
out
xchg
jecxz
call
addl
imul
mov
xor
jecxz
test
jg
inc
arpl
dec
dec
das
and
xorb
adc
loop
dec
cmpsb
xor
test
mov
inc
loopne
add
ja
fistl
xchg
dec
movsb
and
loop
and
stos
mov
mov
jmp
inc
ds
stc
push
pop
mov
jecxz
mov
scas
or
aaa
inc
ds
inc
sub
loope
ss
xchg
popf
dec
pop
jecxz
mov
inc
push
shll
jg
push
rcr
mov
inc
jne
pop
in
out
mov
gs
popa
add
xchg
mov
rcll
lret
and
xor
push
sub
push
cwtl
push
lea
mov
add
pop
xlat
adc
jnp
sub
inc
inc
cmpl
hlt
mov
popf
bound
ljmp
outsl
mov
lods
gs
mov
aaa
scas
cld
repnz
loop
xor
xor
add
nop
dec
mov
sbb
js
or
or
push
ljmp
push
xchg
ret
push
cmp
dec
and
es
pop
or
mov
mov
cmpsb
stos
fstpl
push
lret
es
andb
push
mov
js
xor
divl
imulb
mov
mov
hlt
mov
xor
test
dec
push
sub
push
jae
cmp
sbb
jbe
in
jl
dec
mov
push
or
aaa
add
dec
test
shll
push
cmc
jle
ss
inc
mov
mov
or
cmpsl
cmpsb
xor
add
xor
in
shll
jb
and
bound
adc
repnz
lods
sub
arpl
adc
int3
popf
and
pop
lahf
out
out
int3
jo
test
push
xchg
popa
incl
mov
sub
add
adc
jg
jae
jmp
fwait
dec
lock
adc
fwait
aaa
fadd
xchg
outsb
loopne
es
jbe
ljmp
add
xor
repz
imul
push
out
xchg
inc
lcall
sub
mov
push
xchg
pop
or
sub
jae
mov
pop
adc
mov
gs
pusha
adc
xor
and
lds
or
in
out
loopne
inc
xchg
or
xchg
jle
push
and
dec
xchg
push
cwtl
es
xor
mov
jo
xor
mov
xorl
mov
mov
lret
sub
xchg
inc
les
or
mov
lods
adc
incb
push
mov
scas
or
push
jl
insl
push
push
dec
pop
ret
and
push
xor
inc
or
xchg
mov
out
adc
ret
jg
dec
dec
mov
mov
pusha
lahf
notb
je,pt
jle
and
int
fiadds
cmc
lds
xchg
and
popf
inc
mov
repz
and
in
out
ficoms
test
lock
aad
ret
jmp
or
lret
in
push
and
scas
pop
shll
cs
cwtl
jae
fwait
jb
shlb
pop
mov
call
mov
fs
xchg
aad
xchg
mov
stos
das
shrb
add
inc
mov
movsb
bound
dec
mov
jg
sbb
dec
aad
cwtl
es
cli
and
in
cltd
mov
or
das
div
jmp
mov
loopne
popf
sub
test
and
fadd
std
rcrl
icebp
test
push
out
in
lret
aam
inc
mov
mov
iret
adc
sub
mov
xchg
or
pop
stos
movsl
ret
js
mov
out
fs
mov
push
inc
jg
adc
std
nop
fistl
jl
mov
jnp
push
mov
cld
scas
mov
mov
jae
dec
fld
jg
push
cmc
je
fs
sbb
mov
and
pop
ret
ljmp
mov
mov
and
lock
xchg
pop
adc
dec
addr16
dec
cmp
scas
xorb
sub
mov
stc
mov
push
or
outsl
mov
nop
fidivl
adc
cmc
stc
dec
xor
int
push
ret
sbb
mov
sub
out
popa
lock
jae
xchg
push
test
mov
leave
push
jb
out
jb
mov
xor
mov
sbb
loope
xchg
in
shl
push
enter
sar
cmpsl
and
sbb
inc
inc
and
adc
mov
pop
mov
push
pushf
outsb
sbbl
mov
das
mov
xchg
or
cmp
scas
jnp
xchg
jge
mov
mov
push
cmp
dec
daa
subl
gs
ja
pop
cltd
jecxz
cmp
data16
mov
sub
or
mov
xor
or
imul
inc
or
sub
xor
out
cmpsb
and
jnp
mov
push
test
xchg
jl
xchg
fwait
sbb
into
es
sub
cmp
xchg
lahf
xor
daa
cmc
dec
pop
and
clc
mov
in
arpl
jo
call
enter
push
das
ljmp
and
adc
pop
sti
inc
add
or
bound
push
and
and
pop
mov
sbb
xchg
fdivrs
and
fldenv
inc
sbb
cmp
mov
jecxz
ret
xchg
add
loopne
mov
mov
mov
data16
pop
les
shll
xchg
out
lods
out
lea
daa
pushf
test
push
add
xchg
ds
aaa
jne
fstpt
mov
aad
ja
inc
dec
out
mov
aaa
inc
addr16
adc
jle
adc
movsb
fadds
pop
sub
ss
xor
mov
les
adc
jmp
loope
sub
xlat
iret
insb
in
or
jp
jmp
xor
lcall
hlt
lret
shlb
push
sbb
or
js
sbb
test
push
mov
loop
in
sbb
xor
out
push
sahf
aas
les
shll
bound
pop
cwtl
pop
aaa
scas
jp
test
rorb
in
fildll
pop
rol
int
inc
mov
ret
insl
push
xor
popa
mov
daa
rcl
lock
gs
dec
test
in
push
pop
bound
ds
cmp
push
cmp
mov
scas
push
mov
int
daa
pop
pop
or
movaps
adc
js
js
movb
and
mov
pop
xchg
adc
push
loopne
aaa
jecxz
aas
push
and
fldcw
and
dec
fisttps
repnz
mov
leave
push
jns
fsubr
loop
orb
jo
xchg
xor
push
repnz
and
out
add
lret
or
les
jae
rorb
fs
mov
fistl
pushf
inc
neg
mov
xchg
cld
xorl
push
in
inc
es
push
pop
fucomip
pop
aas
shl
push
adc
inc
test
popa
jb
cli
ds
aaa
adc
sbb
dec
loop
js
roll
xchg
mov
cmp
sbb
rcrl
pop
pusha
sahf
imul
seto
fwait
jnp
xor
mov
aas
js
jae
call
cmpsb
dec
out
sub
shrb
pop
lret
leave
mov
jns
or
movsb
je
add
mov
push
dec
sub
enter
ja
scas
xor
popf
add
loop
mov
mov
dec
adc
in
mov
lret
and
aad
rorb
outsl
inc
repz
or
ret
push
in
and
lds
cs
inc
push
mov
xor
scas
jns
fisubs
jmp
aaa
push
fstpl
lret
sub
mov
pop
xchg
pop
jl
pop
scas
push
jns
mov
sbbl
mov
ds
inc
stos
repz
cli
mov
sbb
inc
lcall
mulb
cmpb
gs
scas
sub
cmc
imul
cmpsb
mov
vsubsd
clc
xchg
dec
mov
add
mov
cmc
outsl
mov
mov
jle
adc
lock
mov
pop
es
or
inc
movsb
sub
mov
jmp
ror
mov
je
jbe
jmp
lea
cmp
jg
sub
divb
cmpsl
outsl
cmc
in
fwait
jmp
dec
pop
push
loopne,pn
add
shlb
or
cltd
arpl
mov
cmpsl
xchg
enter
fnstenv
mov
xchg
enter
or
dec
sub
inc
div
xor
rorl
rolb
fwait
out
cltd
push
das
push
inc
ficompl
jecxz
lock
jmp
mov
testb
push
call
dec
xchg
pop
addr16
negb
test
push
adc
inc
jecxz
loopne
sbb
fsubl
jo
test
into
and
and
in
jae
cli
out
daa
cmp
outsb
js,pt
insb
jne
lods
clc
or
arpl
in
dec
xlat
loope
out
andl
push
inc
loope
int3
imul
test
cwtl
push
insb
lock
pop
xor
push
jg
cmp
push
add
mov
negb
int3
or
or
push
jecxz
mov
fistpl
je
rcrb
sbb
inc
call
and
dec
push
adc
and
xor
adc
aam
cld
jne
ret
les
sub
add
lret
orl
xor
leave
test
jbe
aas
cmp
mov
das
enter
subl
lret
jno
xchg
push
nop
add
outsl
fisubrs
push
push
lret
add
icebp
hlt
mov
mov
test
push
cmp
pop
jge
xor
push
pop
mov
sbb
mov
enter
lret
sbb
outsb
mov
insl
fisubl
insb
loop
rol
dec
je
loope
sbb
xchg
cli
movb
test
movl
je
dec
popw
lret
jnp
jne
lds
sub
adc
jnp
aad
ljmp
xor
xor
jnp
subb
mov
ja
out
jnp
and
in
icebp
mov
xor
mov
incl
sti
rorb
cmp
xor
stos
push
jg
in
pop
mov
pop
add
sti
xlat
lods
sub
or
icebp
mov
out
out
push
mov
jo
inc
jae,pn
cld
fildll
push
aad
xchg
push
mov
mov
and
mov
lock
mov
xchg
mov
mov
mov
jnp
aam
movsb
ret
data16
rol
lahf
pushf
mov
cs
sub
out
inc
test
imul
dec
imulb
ret
mov
fdivs
and
movb
mov
cmpb
nop
out
imul
mov
dec
cmc
cmpsl
nop
adc
push
shl
mov
lret
mov
xchg
mov
je
pop
mov
jns
aas
xchg
and
mov
lahf
es
aas
scas
jmp
lods
stc
xor
fucom
cmp
jno
outsl
clc
inc
and
fnstcw
lcall
int3
adc
push
cmp
mov
mov
cmp
mov
xchg
mov
mulb
or
mov
in
jge
sub
hlt
ja
inc
pop
aas
push
and
out
jge
xchg
aas
sub
sub
adc
in
jecxz,pt
dec
aaa
leave
call
jns
xor
pusha
xchg
sub
cmpsl
mov
jg
pop
popl
sbb
in
js
jl
imul
shr
xor
testl
subl
xchg
jnp
sbb
mov
jno
inc
xor
call
pop
jne
jbe
pop
sbb
adc
adc
out
lcall
fnstenv
jmp
loopne
mov
jb
adc
and
pop
int3
in
stc
lahf
fwait
mov
rorl
jo
push
lea
mov
pop
dec
test
jne
gs
xor
xor
punpckhdq
into
inc
fldt
iret
pop
mov
pusha
inc
add
cmpl
fstl
or
add
push
jecxz
int3
sub
arpl
xlat
add
sbb
outsl
xor
mov
cmpsb
loopne
xor
push
ud1
add
jns
xor
cmpsb
mov
mov
addr16
jg
ljmp
call
lea
jns
adc
or
cmp
iret
arpl
xchg
testl
insb
xor
fdivl
sub
jg
jo
sti
mov
and
out
pop
mov
testl
push
xchg
xor
mov
adc
fwait
std
sbb
pop
xor
ficomps
lahf
fwait
mov
loop
pmulhw
syscall
xchg
cmpsl
nop
cmpsl
dec
je
push
fldcw
dec
enter
lret
sbb
add
pop
std
out
inc
scas
push
and
ds
jl
sbb
sub
lds
insb
sahf
and
mov
dec
mov
xchg
lds
add
jno
inc
xchg
out
loopne
adc
mov
dec
xor
repnz
iret
jle
adc
cmp
sarb
dec
mov
push
hlt
pop
clc
dec
sbb
shll
xchg
insb
cmp
test
sub
aas
jecxz
in
pop
pop
pop
scas
mov
mov
inc
icebp
or
and
loope
hlt
jle
pop
sbb
pop
test
outsb
or
clc
repz
mov
aas
call
mov
insl
adc
and
repz
in
lods
jecxz
xchg
jg
aaa
dec
pusha
das
inc
cmp
dec
pop
cltd
push
pop
ret
sub
fsubs
push
mov
add
cmp
mov
mov
js
cmp
sbb
inc
inc
test
inc
and
inc
sbb
sub
xchg
aaa
cmc
repnz
andnps
lods
clc
add
or
popa
xchg
shlb
into
fnstcw
aad
fimull
sbb
ljmp
jno
into
mov
fildll
add
push
scas
or
enter
sub
in
sbb
mov
and
stos
sub
adc
lods
xchg
imul
mov
add
aad
out
ljmp
push
fsubrp
adc
dec
and
daa
xor
fbld
into
pop
xor
xchg
jo
aam
sahf
cs
inc
add
inc
mov
js
in
xchg
and
push
mov
mov
mov
jmp
ja
push
push
es
jg
mov
jle
fdivrl
cmpsb
cmovo
jle
sub
inc
and
jns
ljmp
out
mov
cmpsb
dec
pop
pop
mov
lds
rcr
sub
mov
ror
sbb
xor
inc
aaa
xor
cli
ret
sbb
mov
push
je
sbb
fiaddl
movsl
inc
pop
cwtl
push
adc
jmp
pop
mov
lret
inc
push
inc
mov
in
movsb
xor
cmpsb
pop
pushf
cmp
test
cmp
cmpsl
sbb
pop
push
adcb
push
aam
push
daa
add
incl
incb
dec
adc
sahf
mov
mov
sahf
push
push
nop
into
lods
push
jo
fidivrl
mov
in
ret
or
je
mov
jae
add
and
sarl
mov
sub
mov
jno
roll
rorl
sub
mov
int3
jecxz
mov
mov
pop
add
mov
aaa
stos
pop
cmp
sbb
pop
dec
mov
lahf
push
dec
out
pop
mov
mov
sub
mov
xor
scas
jp
es
js
and
jp
xchg
std
mov
fcompl
and
fs
iret
fs
movups
push
mov
js
mov
in
scas
sti
or
sub
addl
fcoml
cs
xor
xchg
out
pusha
insb
fisttpl
pop
mov
mov
pop
insb
stc
or
aad
jmp
bound
xchg
add
nop
clc
cs
xchg
cs
outsl
ja
jp
xor
leave
mov
aas
aas
int3
mov
or
out
adc
lret
cmp
sbb
stos
mov
adc
lods
addr16
cmp
xchg
jae
mov
push
inc
ljmp
ds
mov
add
sbb
fldenv
cmp
mov
loopne
movsl
in
pop
adc
adc
pop
mov
je
pop
stos
dec
jnp
sub
sub
std
add
pushf
shll
ret
lds
out
push
mov
or
out
lcall
repnz
xchg
dec
or
sbb
mov
test
jecxz
test
mov
repz
mov
push
mov
ret
fcompl
frstor
cltd
cs
sub
lret
push
ljmp
dec
xor
adc
add
mov
jmp
sahf
std
fsubrs
data16
mov
inc
mov
pop
lds
dec
movsl
cmpsl
and
hlt
rol
and
push
scas
cmpsl
in
fistpll
or
and
mov
jp
into
jmp
dec
mov
nop
aaa
out
adc
mov
sarl
ss
dec
rcr
push
inc
out
rcrl
inc
cmpsl
into
outsb
imul
push
and
pop
lock
sbb
aam
lods
les
sub
jns
in
push
ds
xchg
fwait
mul
es
hlt
and
push
lods
sbb
dec
icebp
jno
xchg
cwtl
add
out
sub
lcall
push
int
insb
dec
insl
inc
ja
mov
and
stos
push
xor
out
pop
imul
push
and
jbe
repnz
push
inc
fimull
mov
push
jb
int3
cmp
cld
push
dec
lcall
inc
mov
xchg
cmpsb
ja
pop
imul
pushl
lar
or
dec
add
sarb
rcl
dec
xlat
jl
xor
jnp
sbb
push
sbb
stos
cmp
sbb
out
adc
fstps
push
call
pop
subb
aas
sub
scas
mov
andb
jmp
fistl
divb
mov
dec
jo
leave
jecxz
mov
jne
xor
std
fistpl
stos
das
outsb
add
xchg
lds
int3
aas
and
lods
sbb
xor
push
jo
fst
test
cmpsb
xchg
jge
ja
arpl
pop
mov
fisubrs
xlat
loop
or
cmp
sub
jae
xchg
xlat
lea
ret
mov
cmp
push
mov
pop
pop
faddl
sub
jo
push
or
jae
out
mov
fildll
push
test
xchg
popa
daa
lock
into
sbb
push
sbb
mov
lock
and
scas
jb
mov
hlt
lods
outsb
jno
stos
call
xchg
sub
adc
push
fsts
lret
push
lods
cmp
xchg
mov
shr
jne
cmp
xchg
xchg
js
int
test
dec
ds
mov
pushf
mov
iret
dec
lock
icebp
push
and
int3
cli
fadds
je
sti
addr16
arpl
insl
adc
stc
pop
rcrb
sbb
jns
outsl
or
das
into
mov
mov
mov
iret
mov
or
ds
cmc
or
scas
mov
test
jnp
addr16
lods
repz
ficompl
xchg
les
je
sbb
pop
and
pop
dec
add
jl
jo
in
and
dec
mov
or
cmp
xchg
ds
int3
les
loope
fisubrl
orl
and
insl
mov
lret
xor
scas
out
mov
lcall
out
cmpl
xor
pop
dec
mov
mov
insl
in
push
adc
cli
dec
pop
cmp
fdiv
or
and
pop
mov
popa
push
shl
and
dec
add
pop
mov
cmp
mov
jge
in
adc
dec
loop
es
push
ds
insl
dec
sahf
iret
xchg
xchg
xchg
push
adc
jecxz
inc
or
out
add
pop
sti
mov
jmp
in
ret
bound
daa
ds
into
shll
loop
aas
scas
int3
or
mov
sub
adc
in
movsb
jecxz
icebp
movsl
lea
add
int3
cltd
push
or
push
mov
test
add
pop
lods
mov
or
mov
jbe
movsl
push
shrb
mov
or
mov
mov
sbb
push
idivb
ljmp
out
lea
mov
xchg
jl
xchg
popf
inc
jnp
aaa
cli
mov
and
and
gs
mov
aaa
std
test
or
ret
push
and
mov
mov
imul
jns
add
add
scas
jae
mov
test
cmp
aas
xchg
push
or
insb
pop
outsb
lock
cmp
movsb
movsb
lret
into
and
faddl
ljmp
add
icebp
inc
mov
rorl
lds
sub
sbb
cwtl
xor
cld
mov
inc
add
aas
or
icebp
add
jecxz
pushf
sub
push
mov
lea
notb
outsl
inc
jnp
jb
out
mov
mov
mov
fistpll
cwtl
sbb
jp
add
insl
pop
rcll
mov
daa
cmp
push
xchg
lahf
lods
ds
je
mov
or
mov
js
jns
cmpsl
mov
xor
jmp
xor
cmp
inc
dec
xor
es
cmp
enter
clc
cld
vcvtps2dq
cltd
fisubrl
shlb
int
xchg
sti
xchg
pop
int
ficoml
adc
jae
fucomip
mov
fmuls
icebp
in
jnp
adc
loopne
daa
scas
cmp
ds
jae
fsubrs
sbb
and
adc
lds
mov
add
sbb
pop
inc
lahf
fidivrl
js
sub
sub
or
js
gs
jmp
sbb
repnz
xchg
jns
jnp
int
cmpsb
std
inc
sbb
jns
std
jae
fs
adc
clc
cwtl
jb
push
pop
jl
sbb
xchg
popf
subl
mov
dec
fstpl
mov
adc
shrb
dec
add
sbb
lds
gs
push
push
xor
mov
outsl
mov
push
js
mov
fstl
jl
sbb
fwait
inc
mov
test
mov
lcall
test
adc
ds
sub
jb
fs
bound
dec
mov
fwait
xchg
cmpsb
mov
xor
dec
in
mov
mov
out
in
jno
jns
adc
aam
stos
jno
push
fs
insb
sbb
xchg
jns
mov
mov
mov
cli
aaa
jl
mov
lret
push
iret
cmp
lods
lods
sbb
cwtl
fmulp
xchg
push
out
jl
outsb
mov
push
mov
dec
sbb
pop
cmc
push
pop
jl
sub
scas
push
jo
int
sti
aas
xchg
xor
pop
dec
or
push
sbb
add
clc
jp
mov
adc
sub
insb
or
ds
out
push
ljmp
dec
aad
mov
imul
test
xchg
jmp
mov
and
xor
inc
and
pusha
lods
cmp
icebp
add
jae
pop
stos
int
push
cli
icebp
inc
jecxz
sbb
jmp
cmp
xchg
jae
idivb
inc
clc
add
cwtl
aas
loopne
nop
mov
xchg
lret
orb
xor
es
dec
sbb
cmpsl
enter
and
mull
or
sbbb
adc
or
ljmp
ret
sbb
fwait
inc
ret
sbb
mov
xchg
fs
call
mov
and
dec
repz
or
xchg
enter
mov
filds
jmp
or
cmp
pop
mov
mov
mov
ss
out
lds
inc
mov
xor
xor
stc
insl
repz
ljmp
mov
cmp
in
test
jno
insl
or
in
mov
cmp
pop
sti
jo
cmp
push
fldl
inc
cmp
insl
sub
xchg
filds
shlb
std
rorb
frndint
push
shrl
lods
cmp
sbb
das
dec
int3
adc
and
out
jle
js
mov
in
repnz
xor
mov
mov
je
mov
mov
fwait
ret
or
sbb
sub
iret
loop
jns
out
push
mov
cmp
sub
and
mov
add
shll
mov
nop
mov
sub
ja
mov
sub
stos
cmc
adc
pop
pop
notl
and
xchg
jno
cmpsl
cmp
or
fiadds
test
ljmp
mov
stc
sarb
test
mov
cmpsl
xchg
fcmovne
ds
and
popa
lock
sti
aaa
inc
xlat
xchg
arpl
and
and
push
push
adc
out
stos
push
sub
into
icebp
cmp
testl
or
or
dec
popf
jp
rolb
int3
test
out
loope
jmp
or
cltd
pop
or
out
in
push
lahf
xor
rol
in
popf
bound
fucomi
xlat
and
add
mov
insl
mov
mov
insl
add
cli
cmp
clc
pop
inc
and
fs
inc
jno
xor
sbb
cs
lret
add
lcall
and
and
scas
fldl
loopne
addr16
fisttpll
xchg
pop
xor
pop
mov
push
adc
ljmp
add
cltd
out
and
cli
aas
pop
adc
adc
jl
ret
push
inc
arpl
pop
das
xchg
les
scas
mov
fs
stos
test
shrb
push
or
addr16
xor
jnp
jno
add
cmp
out
mov
push
outsb
cmpsb
stos
cs
std
push
std
scas
arpl
inc
mov
repz
js
inc
jle
mov
jecxz
shr
xchg
lcall
cmp
fistpl
cmp
ret
std
dec
es
in
or
imul
std
cltd
dec
pusha
mov
faddl
or
lds
andl
add
inc
or
enter
cmp
push
sbb
cwtl
adc
xchg
movsb
mov
test
shlb
aaa
das
sahf
sub
stc
mov
lods
ss
mov
into
sub
addr16
and
jns
dec
sbb
xchg
mov
cmc
mov
daa
stos
fnstcw
or
inc
into
nop
popa
inc
cmp
or
cld
sub
fwait
mov
mov
xchg
dec
ds
lret
sbb
subb
in
lret
mov
loop
cmp
mov
mov
int3
ds
movsl
and
pop
cld
dec
aam
ds
addr16
mov
cmpsl
notl
lods
iret
inc
push
sbb
pop
jnp
and
imul
mov
push
shl
sub
lcall
in
inc
adc
fs
jo
out
out
pop
mov
jl
mov
pop
and
hlt
test
lret
lods
jo
jns
lods
iret
jge
mov
xor
ds
jecxz
xchg
test
daa
sbb
sti
stc
sub
push
orb
inc
push
cmp
pop
jbe
sub
mov
cld
stc
ret
inc
xor
mov
xlat
jns
dec
pop
mov
in
lahf
lock
cmp
out
and
cmp
fcoms
lret
sub
loop
mov
addb
pop
cwtl
xchg
mov
pop
loop
jae
jmp
mov
ds
sbb
cld
and
push
mov
rcrb
dec
sub
outsb
dec
loop
outsl
or
jge
adc
cmp
mov
ljmp
cmc
out
sub
pop
mov
dec
mov
dec
test
and
and
sarb
gs
test
test
pushl
repnz
sub
fsubr
inc
enter
test
xchg
not
lea
xor
jno
xchg
add
cli
ja
cmp
push
xchg
xchg
jmp
lcall
or
jle
xchg
adc
cmp
xchg
xchg
rcl
call
or
xchg
sbb
mov
cmpsb
daa
shlb
mov
imul
dec
test
sbb
decl
fidivs
xchg
stos
jne
jno
xchg
cld
mov
or
xchg
bound
test
outsb
fwait
pop
lea
xchg
nop
mov
cmp
push
cmp
call
stc
in
push
das
repnz
mov
leave
stc
in
insl
pop
les
pusha
aaa
inc
cmpl
icebp
inc
inc
adc
sub
sbbb
enter
pop
stc
xor
or
jb
lcall
testl
or
rorl
das
dec
lahf
outsl
mov
jp
mov
cmp
mov
jno
cltd
test
dec
fcoms
jecxz
dec
jle
push
or
add
push
dec
aad
dec
mov
in
test
xchg
inc
fidivs
jge
out
xchg
cmp
dec
mov
rol
push
adc
in
dec
xchg
fs
arpl
stos
in
xchg
enter
mov
hlt
or
dec
fimuls
aad
push
stos
les
es
out
pop
js
ljmp
iret
hlt
ret
int
ja
cmp
test
imul
lock
and
add
mov
xchg
icebp
push
outsb
cmpsl
mov
pop
mov
loope
xchg
int
ss
jmp
popl
cmp
insl
cmp
mov
cmp
sti
xchg
push
and
cmpsb
sub
mov
pop
xchg
mov
pop
sub
add
xchg
jo
mov
sti
pushf
aad
inc
loope
call
adc
mov
or
xchg
push
andb
jmp
add
fsts
jns
out
xor
push
fucomi
mov
mov
insl
mov
movl
imul
adc
lret
push
jecxz
stos
push
pop
dec
out
rclb
imul
xchg
loope
push
enter
and
data16
and
xchg
cwtl
call
lahf
adc
lods
jg
sbb
fildl
pushf
mov
arpl
aad
popf
fidivs
aas
mov
lahf
or
sub
sbb
adc
jbe
push
jmp
xor
adc
dec
enter
decb
lret
out
push
sub
jo
in
bound
adc
stos
mov
inc
sbb
cwtl
mov
lcall
sysenter
mov
mov
repnz
mov
sub
arpl
loope
lock
xchg
xchg
xor
sub
cli
iret
jnp
add
jecxz
loope
cltd
shlb
pop
cmp
imul
inc
out
jae
jle
push
jmp
push
push
jae
or
push
lds
cmpsb
inc
leave
sub
repz
adc
test
sbb
movsb
test
movsl
dec
daa
popf
sahf
pop
inc
fwait
jns
jno
sub
sbb
stos
dec
jne
cmp
imulb
ljmp
imul
fsubrl
addr16
adc
ficoml
push
test
stos
in
dec
adc
andl
or
test
adc
and
js
dec
ret
vpsubw
push
inc
ss
cmpl
aaa
in
pop
push
fsub
cltd
cltd
xchg
push
mov
jnp
sub
aaa
pop
mov
addb
je
push
inc
testb
jp
xor
mov
arpl
fcoml
inc
dec
shll
lods
jg
outsb
mov
lock
pop
lds
psadbw
cmp
loopne
xor
mov
lahf
dec
out
scas
adc
add
sahf
jmp
inc
cltd
insl
popf
orl
add
sbb
sbb
mov
push
loop
fdivl
fldenv
imul
stc
jnp
xor
dec
or
movsb
mov
dec
push
popa
dec
add
outsb
mov
inc
xor
test
or
mov
lahf
call
xchg
hlt
adc
pop
fisubrl
test
mov
lods
fwait
cli
or
mov
loopne
stos
or
mov
mov
xorb
loop
mov
pop
adc
scas
push
sub
lods
cmp
imul
cmp
aas
in
jge
cmpsb
popa
cmp
pop
clc
push
jl
push
mov
and
sahf
add
inc
ret
add
xor
leave
push
andb
mov
mov
pusha
repz
or
leave
loop
popf
mov
cmpsl
loope
pop
negb
arpl
insb
push
repz
jns
es
dec
sbb
mov
std
lret
or
pop
daa
mov
mov
add
ret
ss
dec
sbbl
push
loope
fsts
mov
inc
dec
xlat
jnp
dec
fmull
inc
and
push
cs
adc
xor
loope
in
faddl
sub
lcall
sahf
mov
xor
jbe
movsb
xchg
ret
mov
or
xor
inc
sahf
lods
and
push
inc
pop
cs
xor
push
mov
pop
in
sbb
adc
adc
movsb
cld
xor
jecxz
imul
or
mov
sub
sbb
push
push
movsb
out
jg
stos
fisttpll
jl,pt
mov
out
aas
pop
mov
cmpsl
xor
jp
cwtl
xchg
lea
sub
and
sbb
dec
cmp
jmp
fneni(8087
mov
outsb
and
inc
aam
jno
jns
out
shlb
jbe
nop
and
insl
pop
cltd
xor
pop
dec
mov
cld
mov
inc
out
sbb
cmpsb
mov
neg
inc
pop
rcrl
adc
jb
and
push
imul
negb
in
clc
cmp
add
adcb
pop
jle
pop
or
sub
xor
outsl
clc
cmp
mov
pop
call
loopne
mov
shlb
mulb
sti
cmp
or
mov
xor
lods
iret
add
out
mov
jp
push
xor
cmp
fildll
mov
ljmp
int
bswap
cmp
and
add
mov
stc
push
mov
push
cmpl
sbb
call
jo
sbb
bound
adc
xchg
mov
jb
push
jb
mov
movsl
faddl
xor
call
or
or
enter
imul
mov
jbe
arpl
imul
push
into
mov
mov
popf
lcall
dec
imul
or
enter
push
sahf
aad
add
ja
adc
cltd
push
iret
js
push
adc
mov
scas
daa
repnz
adc
cmp
aad
aam
or
push
xchg
inc
loop
fsts
mov
imul
inc
adc
setns
dec
out
ficoms
jp
fwait
icebp
cmpsb
add
cmp
jle
xor
popf
mov
jb
mov
cmp
adc
jne
sub
or
repz
ds
push
gs
repz
xchg
xchg
lock
pushf
xor
rorl
sub
incl
push
nop
sub
cmp
scas
imul
mov
push
loop
popl
jmp
out
dec
xchg
hlt
fldcw
ljmp
or
pop
push
lret
stos
sbb
pop
je
pop
add
xor
das
mov
mov
loopne
lcall
test
gs
pop
adc
fcoms
ret
adcb
out
outsb
negl
xor
mov
cmp
ret
and
sub
mov
inc
data16
insl
adcb
popf
xchg
cmp
mov
addl
imul
inc
lcall
ret
pop
je
dec
popf
mov
xor
pop
adc
inc
adc
add
mov
out
mov
push
test
sub
ljmp
or
add
fs
jle
or
dec
mov
jmp
cli
enter
xor
data16
or
incb
add
or
sub
dec
das
add
lret
xor
aas
jbe
push
mov
sarl
cld
push
test
pop
xchg
sahf
movsl
call
movsl
daa
rcrl
popa
mov
test
or
mov
outsb
add
mov
and
rorl
and
add
add
inc
xor
inc
pop
das
lock
iret
mov
cld
push
xchg
sti
push
inc
pop
pop
xor
mov
push
mov
inc
rcl
adc
lods
sbb
cld
inc
pusha
int3
inc
into
into
scas
push
push
dec
push
jmp
movq
sub
bound
jmp
or
jbe
mov
iret
nop
fsubs
lds
push
out
sbb
jne
mov
mov
add
jg
shr
jecxz
xchg
add
push
outsl
rcl
ljmp
scas
jmp
mov
mov
pop
sbb
bound
das
subb
mov
dec
lret
cld
aam
cli
out
cmp
or
xor
lods
fcomps
or
js
mov
aas
mov
clc
into
clc
cwtl
gs
int
dec
xorl
dec
test
jl
inc
fsubs
mov
jmp
popf
scas
xor
push
pop
psllq
and
repnz
adc
pop
mov
je
mov
cli
pushf
push
add
pusha
in
lret
pop
stos
sarl
add
aam
shrb
sahf
in
dec
push
sbb
orl
pop
repnz
inc
xchg
dec
xchg
fwait
in
les
mov
sbb
pop
addr16
hlt
cmp
inc
lret
stos
shrb
into
fwait
mov
test
stos
in
pop
jno
aaa
pop
jle
fists
lock
lcall
jae
push
xlat
push
stc
push
mov
fldt
scas
shrl
scas
mov
out
sbb
sbb
add
movsl
push
sub
or
cmpsl
sub
mov
cwtl
int
outsb
aaa
push
gs
or
xor
fwait
test
and
out
std
adc
lahf
ljmp
sbb
inc
sti
cmp
mov
mov
lahf
leave
or
aad
xchg
loop
adc
pop
jbe
in
jg
jbe
mov
mov
sbb
iret
and
mov
jle
in
xor
sahf
dec
repnz
ficomps
push
jno
testb
mov
jbe
xlat
test
fisttpll
enter
ds
mov
push
outsl
clc
inc
jle
stos
or
data16
dec
push
loopne
mov
je
jmp
push
push
lods
mov
outsb
mov
sub
jmp
rorl
ret
and
push
lock
loope
cmp
into
mov
sbb
in
out
pop
rcrb
test
inc
out
repz
mov
xchg
jnp
leave
add
movsl
sbb
adc
jecxz
addb
test
ret
push
fstps
into
out
cmpsb
paddd
inc
pushf
mov
lods
repz
cltd
add
add
mov
icebp
fnsave
jg
aad
add
cltd
pushf
pop
dec
lds
int
push
enter
and
add
add
sarl
ret
jno
fldl
inc
fwait
adc
mov
shl
fiaddl
sbb
mov
arpl
mov
stc
jo
lock
mov
ds
das
sarl
addr16
mov
sbb
inc
jge
fldenv
pop
mov
sbb
push
jge
subl
pop
xor
mov
in
pop
insl
mov
leave
scas
lea
push
out
neg
xchg
pop
dec
pop
divps
roll
in
cltd
xlat
pop
sbb
and
dec
mov
or
dec
rcll
jg
add
pop
lcall
lds
in
mov
icebp
xor
dec
push
rolb
dec
iret
sbb
daa
ss
jb
xlat
cmp
sbb
add
mov
loope
sub
popa
sub
cmp
adc
push
shrb
dec
mov
test
es
dec
lret
idivb
sbb
pop
adc
push
aas
mov
adc
xchg
clc
aad
outsl
mov
mov
lock
mov
xor
ret
in
cmp
outsl
dec
jb
nop
xchg
pushl
inc
adc
cmc
scas
popa
jecxz
mov
scas
fcoml
xor
adc
jne
adc
and
jmp
jb
or
rorb
and
mov
clc
outsb
xchg
int3
into
repz
mov
push
outsb
ret
in
xchg
jecxz
nop
cmp
jb
rorl
jmp
cmp
cmp
addr16
cmp
push
in
push
push
sti
dec
pop
xor
dec
lods
jg
int3
scas
pop
adc
ret
div
or
in
inc
das
cmp
lcall
cmpb
pop
aad
aad
cmp
fcoml
pusha
test
test
add
clc
lret
adc
rorl
lea
loope
add
pushf
lret
push
pop
mov
mov
sbb
sbb
push
std
arpl
cmp
mov
or
jle
jne
cmp
int3
arpl
mov
sbb
sbb
insb
adcb
mov
js
dec
ss
pop
enter
push
xorl
in
inc
mov
xor
and
lock
pop
mov
cwtl
add
mov
inc
jp
add
js
loopne
sub
add
dec
dec
sub
cmpsb
aad
lock
pop
add
sbb
jge
bound
xchg
outsb
cmp
add
lret
call
or
in
xchg
push
push
pop
test
mov
sub
and
addl
push
push
pop
in
pop
cmc
sub
cltd
std
in
jge
jmp
cmpsb
pop
orb
fldl
jecxz
dec
sub
aas
cmp
pop
push
mov
mov
iret
repnz
mov
ficoml
lock
xchg
loop
mov
sahf
clc
jg
lea
mov
insl
mov
cmpsl
or
repnz
pop
push
add
mull
sbb
insl
or
push
sbb
xchg
mov
mov
xor
mov
fwait
call
and
adc
mov
cmp
cltd
sub
insl
inc
std
push
mov
bound
jb
push
leave
out
shlb
repnz
jg
sub
fisttpl
inc
decl
jecxz
movq
jp
dec
jbe
and
pop
sub
pop
outsb
mov
inc
inc
dec
xchg
test
dec
pop
fwait
sarl
testb
or
scas
sub
mov
xorl
pop
inc
mov
push
cs
jl
sub
out
mov
push
cmp
sbb
sbb
ja
sub
xchg
mov
or
lods
je
cs
adc
fisttps
sbb
in
adc
push
dec
inc
xchg
and
dec
mov
mov
jmp
xchg
stos
xor
add
and
xor
mov
push
push
pop
sub
lahf
hlt
lods
dec
add
test
in
je
in
int
dec
repnz
jecxz
lea
fbstp
xchg
cmp
fdiv
cmpsl
xor
hlt
mov
clc
pop
xor
cli
dec
push
xchg
pop
add
pop
fstl
xor
ud0
shl
jl
push
test
jb
cld
iret
sbb
or
xor
imul
out
cs
jmp
mov
dec
xchg
pop
dec
lcall
iret
sbb
movl
cmp
jae
outsb
mov
adc
cmp
xor
cmp
nop
repnz
in
dec
adc
lods
out
inc
cmpsb
mov
cmp
into
cmp
or
lds
sub
or
dec
mov
add
jle
gs
jnp
xor
push
mov
fs
mov
es
mov
mov
xchg
or
push
repz
mov
test
inc
ret
cmpsl
imul
cli
out
es
xchg
push
mov
pop
mov
sub
fcoms
sub
cmp
mov
fcom
insl
jle
mov
jp
or
popf
mov
aaa
lods
sub
mov
cmpsb
and
or
movsl
jp
fwait
dec
add
sti
adc
scas
add
int
js
test
bound
in
and
xchg
xor
sahf
mov
lcall
nop
pusha
push
pusha
popf
int3
push
sbb
mov
or
pop
ds
fimuls
xchg
and
aad
jge
pusha
es
lahf
xor
add
pop
sti
stos
fistpll
xor
int
jmp
repz
add
into
jge
adc
fdivrl
repnz
sahf
xchg
push
dec
pop
aaa
sbb
sub
xlat
cmp
int3
call
xchg
jle
jnp
je
xchg
mov
jne
mov
mov
adc
pushf
ret
jmp
fs
jnp
cld
std
inc
push
shrl
xchg
shrl
in
mov
fdivs
imul
push
cmpsl
lods
xchg
dec
mov
mov
les
xlat
shl
xchg
add
mov
jns
xchg
jbe
adc
jp
add
sbb
add
in
jnp
push
mov
leave
pusha
jl
push
push
jmp
cltd
in
fwait
mov
ret
adc
pop
fs
sub
stos
mov
fcompl
js
int3
loop
mov
cltd
or
mov
inc
clc
cmp
popa
or
outsl
stos
xchg
push
or
fs
cmp
fstpl
pop
repnz
imul
mov
fs
cmp
lcall
call
xlat
popl
mov
daa
pop
sbb
imul
rclb
pop
fcomi
or
lret
pop
outsb
dec
mov
xchg
jne
out
into
mov
dec
lds
sti
jge
roll
pop
negl
sbb
arpl
push
scas
dec
or
movsb
lock
cmpsl
rdmsr
push
lock
fildl
add
js
xorl
ret
and
inc
out
scas
add
cwtl
jne
mov
mov
in
dec
lods
loope
cmp
mov
leave
popa
push
push
cmp
jmp
int3
mov
data16
sub
xor
js
ja
outsb
mov
adc
imul
xchg
mov
and
dec
insb
fdivr
xchg
jns
inc
stos
ja
lahf
push
aam
ror
lret
andb
mov
iret
pop
sub
in
dec
cs
mov
jnp
cmp
sbb
add
outsb
das
leave
mov
mov
std
pop
in
sub
into
cmp
pushf
sub
add
ret
xchg
stos
mov
pop
mov
dec
std
sub
into
inc
in
jbe
xlat
cltd
add
lods
aas
cmp
insb
das
xlat
movsb
pop
xchg
es
cmpsl
pop
shr
xchg
in
aam
or
leave
sbb
loope
or
xchg
stos
cltd
jo
sti
sbb
ret
sub
ja
mov
outsl
xchg
test
xchg
lret
xchg
cmp
mov
arpl
pop
lahf
adc
xchg
icebp
aaa
andb
xor
ja
frstor
sarl
ljmp
jle
cltd
jae
popf
inc
inc
mov
sbb
xchg
movsl
mov
lcall
jo,pt
rcrl
sub
or
addb
xor
sub
mov
push
sbb
aam
lret
cmp
ja
int3
and
xor
dec
loopne
push
enter
loopne
out
sbb
or
xchg
add
mov
je
loopne
mov
cltd
test
dec
aad
out
jecxz
idiv
mov
mov
push
dec
shrb
pop
mov
sub
pop
aas
sub
mov
fidivrl
sbb
lds
out
cmpsb
cld
mov
mov
xor
jg
jae
and
mov
lock
mov
pop
lahf
inc
fsts
mov
mull
and
or
fdivl
xor
mov
mov
insb
daa
outsb
stos
lahf
pop
and
popf
jl
dec
inc
in
shll
xchg
inc
mov
mov
and
or
xchg
add
and
adcb
push
xchg
mov
loope
mov
movsl
inc
jle
and
xor
imul
cmp
add
int3
dec
sub
mov
roll
jns
push
ja
push
xor
call
jg
cld
mov
dec
inc
stos
sub
fyl2x
movsl
jo
bound
ss
sahf
dec
or
inc
jbe
mov
or
jo
pop
xchg
popw
jno
cltd
and
stos
fs
outsl
fnstcw
loop
jb
inc
add
pop
fimull
popa
aam
add
sub
push
fildl
stos
push
dec
sbb
jo
test
lahf
push
pop
aaa
shrb
inc
lock
js
cmpsb
cmpsl
icebp
jp
lods
lock
cltd
mov
add
ror
and
mov
pop
jo
add
pop
movsl
lds
sub
cmpsl
addr16
and
leave
xor
sub
push
fldl
out
inc
fdivrl
aas
sbb
or
mov
cli
or
cmp
stc
or
pop
push
jle
xor
fdivl
add
sbb
jb
sbb
cltd
jecxz
push
testb
jo
hlt
xor
sub
xor
push
leave
jmp
loopne
enter
push
pop
cmp
or
jne
movsl
fsts
lret
inc
das
push
ds
stos
int
or
sub
insb
lea
xorl
ret
xchg
movsl
dec
in
aaa
mov
add
jb
rcll
out
cmp
leave
sbb
mov
das
mov
inc
push
loop
jne
jg
lcall
stc
jo
pop
or
movsb
cmp
mov
mov
test
out
adc
push
cli
imul
mov
xor
out
ret
shll
pop
mov
jo
add
hlt
push
push
in
inc
bound
aaa
push
insl
and
aas
enter
add
sbb
mov
inc
out
mov
mov
add
fwait
dec
jne
sbb
lea
mov
xchg
sbb
cltd
mov
psrlw
adcl
dec
mov
and
aas
scas
jne
mov
lds
test
xchg
pop
rcrb
loopne
add
and
daa
jmp
adc
pop
inc
stos
add
stos
push
sbb
mov
shll
fimull
push
inc
mov
fsubl
xor
xchg
into
lods
fbld
jge
sub
bound
sub
pop
inc
or
mov
mov
stc
sub
fcomi
mov
in
negl
mov
mov
xor
stos
fxch
mov
not
ret
push
pop
test
or
cltd
ret
repnz
test
rorb
outsl
sub
aaa
or
lcall
stos
in
mov
repz
jne
mov
lahf
insl
cmc
xchg
addb
jp
mov
ret
sar
inc
sub
pop
sub
clc
push
loope
mov
mov
mov
mov
xchg
and
sti
loope
inc
lahf
fldcw
sbb
and
cmpsl
cmpb
repz
lahf
dec
addr16
ss
jno
xor
pop
inc
add
call
leave
xchg
lock
jl
adc
js
adc
and
push
and
fists
mov
adc
leave
lods
inc
cmp
leave
rol
faddl
xchg
aam
lret
insb
jle
mov
jo
mov
sbb
pop
and
dec
xor
cld
fwait
clc
and
sub
call
scas
loope
fstpt
cmpsl
dec
int
ret
mov
nop
loop
mov
xlat
out
int3
cmpb
jmp
jno
repnz
xor
jne
test
mov
pop
lret
clc
dec
inc
cmovg
fwait
test
mov
insl
sti
cmp
mov
insl
aas
inc
cmp
test
jbe
out
ficoms
push
pop
loope
sarl
dec
daa
fs
or
push
jb
dec
pop
rcl
shl
sbb
enter
ds
push
and
sets
fisttpl
xchg
fidivs
push
jbe
mov
popa
inc
pop
xor
fs
push
push
enter
arpl
fwait
test
pop
jmp
aas
in
ficoml
out
in
add
inc
in
adc
jmp
adc
xor
fnstenv
arpl
int3
aad
in
add
adc
inc
xchg
xor
int
or
jae
mov
sbb
loop
dec
scas
sbb
mov
xchg
mov
filds
fidivrs
xchg
ds
repnz
inc
mov
mov
xor
sbb
or
sti
or
cs
outsb
in
fwait
pusha
mov
stos
jo
xchg
or
adc
mov
fnsave
clc
enterw
fstpl
lret
or
in
mov
xchg
pop
ret
push
sub
mov
push
cmp
movsl
mov
inc
fstl
xor
fs
xor
jne
mov
dec
sub
movsb
xchg
enter
push
mov
push
push
setne
mov
dec
iret
add
jp
pop
cmpsl
add
and
jns
mov
mov
mov
scas
clc
jne
leave
leave
adc
inc
pop
fisttpl
jp
mov
mov
rol
ds
lea
adc
iret
mov
pop
jg
xchg
xorb
mov
pandn
pop
pop
daa
insb
fucom
sub
shr
repz
call
lret
xchg
mov
lds
je
xchg
push
and
or
movsb
push
adc
push
cmp
and
mov
leave
adc
out
and
jg
and
stos
movsl
push
mov
push
push
pop
and
xchg
inc
in
cmp
cld
aas
rcll
dec
or
lahf
jmp
add
jp
push
fcomip
scas
stos
lcall
push
xor
scas
xchg
enter
ljmp
jnp
movsl
out
mov
mov
or
out
sbb
xchg
jecxz
adc
movsb
fs
int
outsl
enter
pushf
idivb
fidivl
aam
test
loope
sbb
pusha
mov
popa
sub
popa
das
je
push
push
or
or
adc
dec
daa
mov
xchg
cmc
cli
loope
test
add
mov
loopne
int3
fyl2x
sub
xor
pop
mov
push
test
and
inc
rcr
lret
xchg
ja
pusha
dec
xorb
add
push
sbb
and
aam
flds
xor
int3
testl
pop
adc
pusha
mov
stos
add
inc
aas
cmpsl
es
or
fidivs
adc
pop
and
sahf
les
loope
mov
xor
xchg
mov
fwait
sbb
jmp
sbb
push
sub
lods
call
add
negb
xor
xchg
cs
test
xor
sub
imul
cmp
add
push
mov
inc
mov
or
mov
mov
push
jae
je
insl
and
enter
or
mov
mov
fsubrp
mov
lods
mov
sarb
lahf
push
fdivs
popf
inc
subb
pop
inc
mov
push
sarb
mov
push
nop
adc
sbb
mov
push
xchg
push
not
lock
adc
mov
jg
xor
insb
xchg
or
scas
xchg
xor
cs
testb
push
or
test
iret
sti
push
mov
out
mov
jle
aaa
and
pop
jno
cmp
mov
mov
mov
mov
jmp
mov
iret
outsb
mov
loopne
int3
std
mov
pop
and
jns
cmp
or
mov
popa
xchg
adc
test
push
inc
leave
lret
pop
imul
mov
loopne
cmp
sub
es
push
jbe
jmp
andl
ret
mov
stos
dec
xchg
ja
cs
pop
xchg
xchg
in
pop
jno
ja
sti
xor
or
xchg
mov
inc
leave
cmp
mov
mov
cmp
and
dec
cmp
aam
cmpsl
ljmp
xchg
xchg
xchg
popa
sbb
jne
fldt
jne
jb
gs
jmp
rcr
movsb
loopne
jne
movb
pushf
jae
adc
stos
inc
fdivs
rcrb
call
jae
push
lock
in
into
sub
push
and
adc
mov
scas
js
sbb
int3
cmp
jnp
ljmp
cld
addr16
aad
repnz
sub
arpl
aam
es
push
or
mov
sahf
std
pop
inc
mov
pop
rcrb
jb
add
mov
movsl
inc
cmc
cmp
or
shl
add
push
decb
add
adc
int3
ret
fcoms
out
sbb
test
jle
sub
std
jnp
mov
sbb
rorb
add
shl
fdivl
repz
lock
or
push
and
cmpl
xchg
lcall
lods
push
pop
pop
sub
iret
push
popa
inc
inc
fcmovu
dec
aaa
push
iret
pop
inc
repz
and
insb
pop
fstpl
movsb
imul
xchg
inc
mov
pop
pop
into
sbbl
pushf
lods
xchg
rorb
incb
cs
movsb
cmp
test
enter
icebp
jb
push
mov
fistps
scas
icebp
ret
mov
iret
dec
addb
lock
ret
pop
jns
lods
and
and
cmpsb
out
iret
or
lcall
jmp
mov
aas
dec
push
lret
leave
movl
inc
aaa
js
lods
lods
lcall
sub
subl
pop
inc
push
leave
jle
add
add
icebp
sarl
jae
mov
test
mov
mov
pop
lea
rol
sarl
mov
sbb
xor
fcmovbe
or
aam
pushf
jge
push
lcall
pop
adc
sbb
jp
repz
push
arpl
push
jge
push
xor
xchg
enter
stos
xchg
lcall
shlb
inc
or
jmp
inc
cmp
cmp
add
push
std
push
dec
fdivr
aad
xchg
fcomps
cs
leave
sahf
je
fisubl
push
jo
mov
in
dec
pop
dec
movsb
push
insl
repnz
int3
sub
in
inc
pop
xchg
cmp
jne
pop
mov
push
lcall
dec
dec
push
scas
test
push
cmpsl
jb
lret
xor
gs
mov
xchg
xor
psubb
js
cmp
addb
adc
jg
fwait
daa
xchg
xchg
rorb
insl
xchg
add
aad
aaa
imul
movsl
loopne
sbb
arpl
subl
pop
pop
negb
inc
push
cwtl
ret
test
and
data16
mov
mov
xchg
jbe
test
sbb
xchg
inc
adc
xor
lret
jmp
sbb
push
sbb
and
mov
mov
xlat
jae
mov
dec
idivb
inc
sub
imul
movsb
pop
fsub
cmp
mov
es
push
mov
push
push
dec
fnstenv
inc
rdmsr
jns
mov
stos
int3
and
or
push
insl
xor
and
shlb
add
dec
addr16
out
lahf
leave
aam
xor
cmp
sub
add
stc
icebp
or
aas
jp
in
fldl
dec
jmp
in
cwtl
out
rcrb
das
aaa
fsubs
mov
loop
scas
xchg
and
add
lret
sahf
rol
push
fists
push
imul
call
add
xchg
out
and
leave
pop
mov
cmpsb
cltd
int
xchg
inc
mov
shrl
sahf
rorl
roll
inc
and
lahf
mov
negb
mov
inc
je
pop
mov
or
inc
push
aas
cwtl
xchg
inc
leave
pop
pop
cmp
movsb
mov
into
inc
jbe
and
in
jns
lret
loop
in
xchg
arpl
inc
ficompl
aad
dec
pop
cmp
pop
ficoml
sbb
xchg
addr16
dec
add
sub
add
in
or
adc
adc
imul
pop
out
pop
lret
cld
mov
scas
mov
mov
loopne
dec
int3
sub
sub
and
or
push
cltd
test
in
jae
cmp
sarb
cmpsl
test
in
dec
xchg
and
sbb
lods
pusha
jb
xlat
dec
loopne
fs
xorl
popf
mov
add
fcmovnbe
bound
out
negl
call
rcrl
lds
cwtl
neg
test
adc
stos
cltd
mov
push
cltd
or
xchg
adc
js
out
or
imul
inc
stos
sti
and
inc
pop
xchg
push
push
push
xchg
loop
test
xchg
mov
xchg
jle
cmc
pop
cmpsb
jnp
inc
xchg
jns
mov
xchg
fidivl
or
mov
nop
xor
pop
pop
push
ja
and
idiv
rcrb
in
xor
shlb
arpl
daa
cmp
and
inc
std
daa
aad
xchg
mov
or
mov
int
aas
xlat
push
pusha
jp
inc
rol
add
int
dec
cmp
shl
jo
ljmp
sbb
loop
pusha
jg
hlt
in
fdivs
je
mov
push
xor
push
jo
imulb
cmpl
jbe
pop
sbb
pop
push
out
fimull
sbb
and
ret
push
mov
and
sahf
mov
test
in
bound
cmp
mov
adc
inc
cmp
lods
xor
xchg
pop
cmpsb
mov
fisubrs
xchg
pusha
ffree
xchg
cmc
pop
sub
mov
mov
and
andl
push
mov
shll
mov
scas
push
fisubs
and
jg
iret
icebp
xorl
inc
dec
inc
dec
sub
imul
dec
rcr
out
add
inc
dec
das
xor
jecxz
xchg
ljmp
push
push
push
int
ja
andl
lret
sub
loopne
jmp
outsb
frstor
fsubs
mov
out
and
dec
leave
pop
in
pop
leave
cmc
mov
cmp
mov
mov
scas
xor
fiadds
nop
pop
add
mov
mov
rol
mov
jns
xor
xchg
mov
outsb
pushf
rcl
in
add
daa
mov
insb
test
cmp
push
push
int
rcll
rol
repz
jl
xchg
movsl
sub
icebp
sub
add
imul
dec
jg
test
imul
test
mov
jns
cmc
sbb
in
lret
jo
and
dec
cmp
mov
test
sub
ja
mov
xchg
inc
push
and
sub
and
ljmp
push
dec
or
clc
mov
ljmp
popf
push
fcmovnu
push
jmp
shrb
cld
mov
iret
mov
jg
cld
iret
nop
popf
iret
icebp
cmp
popa
inc
dec
jbe
mov
mov
mov
outsb
jb
push
add
push
push
dec
test
loope
sbb
arpl
dec
mov
mov
sbbb
adc
call
pushf
in
push
les
push
xor
push
les
pop
jmp
fcoms
or
xor
xor
mov
ror
out
xor
ficompl
cmp
mov
mov
test
sbbl
mov
stc
aad
inc
pop
out
lret
sub
mov
xlat
cld
xor
cmp
adc
repz
inc
and
mov
ja
lds
frstor
stos
std
fldln2
or
insl
negl
inc
dec
scas
cld
into
ret
iret
test
fistpl
stos
jg
or
adc
bswap
adc
ficompl
push
hlt
and
lock
inc
insb
mov
xorb
inc
lods
lea
mov
mov
add
outsb
mov
xchg
or
in
loopne
pop
shrl
jl
mov
in
into
push
mov
jns
xchg
cmp
xchg
jecxz
xchg
stos
dec
and
cmpsl
adc
mov
cmp
cwtl
lods
inc
aaa
rdpmc
push
icebp
adc
popf
and
pop
aaa
aaa
or
dec
sbb
jbe
mov
mov
leave
vmovlps
arpl
mov
xchg
pushf
push
and
xchg
mov
or
push
outsb
or
mov
push
div
and
nop
xchg
and
fisttps
orl
cmp
mov
imul
ret
cld
inc
cld
add
pop
les
inc
dec
popa
inc
push
movb
add
popl
jle
xor
ret
pop
out
sub
jle
scas
pop
adcb
push
dec
sbb
jnp
loopne
cltd
jbe
dec
jo
add
cmp
dec
sub
xchg
push
push
nop
cmpsl
push
roll
lahf
cmp
adc
dec
add
mov
push
shlb
notb
out
pop
enter
int3
mov
sub
movl
outsb
das
or
stc
xor
xor
dec
pop
aad
icebp
ds
and
xchg
inc
jno
add
adc
push
pusha
lock
test
xchg
in
inc
pcmpeqb
sti
or
mov
cmp
cs
jmpw
mov
add
testb
pushf
scas
xlat
dec
ljmp
fs
xor
scas
push
adc
xlat
pop
inc
mov
ret
lock
das
xchg
cltd
rcrb
adc
into
out
call
iret
lock
mov
in
test
rcl
js
inc
jno
pop
shlb
orl
pop
cmpsl
push
inc
dec
mov
andl
ja
stos
test
jb
gs
loopne
sbb
shrb
inc
lock
js
xor
arpl
adc
push
shrb
hlt
pop
mov
sub
out
mov
sbb
imul
mov
cmp
dec
and
scas
in
mov
inc
xorl
sti
lcall
inc
inc
mov
shll
dec
and
fwait
jns
dec
scas
mov
sub
shlb
stos
int
sbb
xchg
push
lret
add
nop
movsb
push
pop
mov
icebp
mov
jmp
jp
scas
cmp
xchg
nop
cmc
xadd
xchg
mov
mov
jl
mov
push
mov
cmpl
outsl
sub
pop
lret
pop
outsb
jg
gs
inc
xchg
sub
js
cmp
pop
inc
add
bound
ss
jl
call
sbb
pop
scas
xchg
sub
sti
lock
xor
jno
mov
mov
add
jne
scas
or
mov
sbb
dec
jae
xchg
mov
inc
dec
mov
jg
mov
sbb
jae
decb
faddl
pop
pop
jno
sahf
mov
jge
push
xchg
adcb
mov
cwtl
jns
mov
inc
mov
or
xchg
mov
pop
inc
push
inc
cs
dec
inc
insb
and
pop
cmp
sahf
push
or
sbb
push
insb
inc
pop
pop
popa
xchg
push
aas
and
mov
mov
push
mov
pop
lahf
testb
aad
lds
jno
loope
lods
fnstcw
int
aam
adc
imul
subl
data16
in
mov
jp
adc
outsb
pop
and
and
scas
addb
sahf
or
or
cs
cs
cs
test
shr
xchg
mov
aaa
sbb
fiadds
data16
or
lret
call
adc
stos
adc
imul
lret
push
lea
add
cmpsl
enter
aam
adc
repz
fstpt
rcr
or
std
lods
or
add
testb
subb
pop
jns
add
mov
cmp
mov
aaa
pop
lods
xchg
fcmovbe
push
out
fldl
outsb
xchg
hlt
ror
lret
pop
bound
add
push
pop
fcompl
and
or
xor
cmp
inc
cmpsb
aad
test
fxtract
out
push
push
int3
and
inc
outsb
aam
lret
adc
mov
movsl
lods
fnstenv
movsl
test
std
fsubl
loop
es
inc
popa
dec
fs
mov
push
jle
dec
push
pop
int3
clc
gs
int
lds
add
and
data16
and
shll
mov
jae
push
lret
mov
scas
sub
xor
push
jg
adc
inc
jge
aaa
dec
push
jp
cmp
bound
mov
shl
test
mov
rol
stos
jg
dec
dec
aas
into
sub
icebp
mov
das
js
add
adc
sub
xor
mov
fdivrs
dec
hlt
scas
out
pusha
movsb
push
sahf
cmpb
adc
mov
push
xchg
cltd
loopne
ret
out
push
add
scas
imul
mov
fs
sahf
jg
sti
dec
imul
out
int
shlb
push
hlt
xchg
sub
inc
mov
aaa
lea
fs
xchg
pushf
and
cmpsl
scas
mov
sub
xor
xlat
sbb
orb
cmpsl
or
daa
jns
add
test
ror
inc
pushf
mov
or
cmp
test
mov
push
loope
out
cmc
nop
cmp
roll
dec
mov
mov
jg
add
xor
jo
jp
dec
aad
ss
adc
incb
dec
leave
outsb
icebp
and
int
icebp
fwait
cli
mov
mov
xorb
xchg
inc
jb
clc
jp
out
movsl
jle
pop
pop
push
les
mov
inc
or
scas
das
mov
cld
mov
rclb
pop
shl
push
mov
xchg
ja
fiadds
jp
ss
jmp
jmp
lret
mov
popa
inc
or
leave
fadds
jg
cmp
pop
lcall
sbb
push
or
lcall
movsb
pop
jns
push
mov
dec
pop
mov
inc
ficompl
test
pop
gs
aad
bound
repnz
xor
cmp
mov
mov
call
add
mov
sbb
aas
jo
int
inc
leave
inc
cmpsl
push
inc
or
cmp
sub
cs
enter
in
add
sub
fistl
cmp
lock
cmp
dec
imul
or
sbb
xchg
cmp
dec
jae
lock
jecxz
in
icebp
pop
dec
fdiv
inc
and
and
test
and
and
jmp
faddl
les
cltd
mov
sub
push
mov
or
cmp
inc
push
mov
xor
xchg
mov
cwtl
popl
add
cmp
jne
incb
movsb
and
cmp
insl
push
mov
mov
push
xchg
movsl
dec
cmp
mov
mov
pusha
nop
dec
mov
lods
inc
inc
test
testl
test
inc
loope
cmpsl
shrb
jl
xchg
sub
add
sub
in
nop
xor
xchg
mov
and
sarl
pop
loope
in
ss
mov
fwait
scas
jbe
or
add
aas
inc
enter
and
sub
push
push
and
mov
xlat
mov
leave
sbb
dec
push
mov
lcall
pop
test
mov
adc
push
inc
mov
add
popf
scas
mov
mov
bound
lods
add
push
sbb
sbb
repz
add
jns
xor
sbb
jae
fidivl
add
test
sbb
pop
mov
fldt
aaa
pop
sti
inc
out
cmp
iret
stos
fbstp
int3
outsl
mov
int3
mov
xchg
sub
sbb
push
mov
xor
rep
leave
xor
lods
dec
andb
push
xchg
std
nop
jno
movsl
jbe
out
or
scas
jmp
lods
push
push
jmp
insl
mov
int3
jge
loope
lret
hlt
ja
xor
mov
xchg
lcall
cli
or
lds
cmc
mov
loope
clc
pop
in
shl
fsubl
cmp
or
push
addr16
or
mov
sbb
out
xchg
outsb
addr16
ss
xor
jge,pt
lret
pop
jge
icebp
jge
adc
cmp
orb
leave
xor
outsl
pop
cmp
subb
inc
movsb
popf
add
add
mov
add
cmp
ret
js
hlt
ficomps
fidivs
cmpsl
les
pop
cs
cmpsb
sti
ja
clc
sub
or
ljmp
push
xor
rcrl
mov
sbb
int
addl
inc
adc
add
insb
cli
add
sub
jle
push
mov
out
inc
repnz
repnz
call
daa
call
loopne
stos
jb
ret
push
or
in
leave
mov
movsl
mov
popa
test
xchg
sbb
jge
inc
arpl
jl
add
movsb
icebp
or
pop
iret
pop
pusha
cs
or
ljmp
or
cld
xor
shlb
adc
fcoml
pop
mov
jae
mov
jb
movsl
jecxz
mov
out
push
mov
aas
pop
sbb
inc
in
dec
xor
jno
decb
data16
jge
lock
gs
mov
fnstenv
push
lea
stos
rorb
imul
cmp
jnp
push
jne
mov
insl
fwait
push
sub
jno
scas
jmp
mov
mov
sti
mov
dec
decl
ljmp
add
std
cmp
push
inc
rcrl
sub
cltd
ficomps
lret
xchg
icebp
stc
cmp
mov
or
jo
out
cmp
aam
popa
clc
jae
jae
sbb
sbb
add
mov
jbe
pop
ror
cmpsb
xchg
icebp
xchg
cmc
lcall
cmp
jae
cmp
sub
fcmovne
cli
add
test
fmuls
andb
std
test
sub
les
out
leave
negb
enter
lods
insb
loope
in
sahf
lcall
sarl
pop
push
int3
xchg
popa
add
ljmp
out
out
mov
xchg
into
or
push
js
xor
mov
mov
in
iret
sub
sbb
xor
into
out
fnstcw
jp
daa
clc
mov
adcl
insl
inc
xchg
mov
loope
push
push
pop
test
xchg
xor
sub
add
shl
xor
hlt
push
xor
xchg
add
aad
mov
mov
or
add
push
pop
lret
inc
std
adc
pop
repnz
hlt
xchg
ret
shl
addr16
out
inc
push
ds
cwtl
lret
mov
pop
pop
mov
.byte
nop
