dec
jbe
push
push
or
add
jp
pushf
add
in
pop
fildll
mov
sbb
shlb
push
jle
inc
jb
mov
dec
jp
mov
ret
xchg
add
cmp
out
xor
adc
ret
mov
jecxz
or
jg
and
mov
mov
mull
add
jl
std
adc
pop
and
fs
mov
mov
sub
in
divb
nop
mov
jne
cld
mov
push
mov
mov
push
bound
pop
and
xchg
je
xor
cmpb
ret
decb
xchg
mov
mov
daa
add
pop
dec
movb
push
xor
mov
mov
push
lcall
ljmp
mov
or
xchg
mov
adc
insb
daa
aas
pop
outsb
inc
std
xchg
inc
pop
dec
rolb
int
lcall
inc
fidivrs
daa
outsl
adc
pop
es
inc
inc
lret
enter
xchg
xchg
loope
or
pop
aas
xchg
add
mov
inc
cmpsb
pop
or
aaa
inc
xchg
movsl
out
fnstenv
sub
add
or
cmp
xchg
add
ret
cmpsb
sub
pop
notrack
dec
and
decl
test
in
pop
mov
filds
sub
mov
test
add
in
jle
out
pop
stos
es
push
ja
sub
out
sbb
push
subb
add
ret
adcb
xchg
mov
arpl
stc
push
inc
adc
hlt
xchg
dec
fisubrl
mov
xchg
into
test
sbb
pop
xchg
stos
sub
xor
sarb
neg
adc
stos
and
mov
mov
inc
or
int3
mov
ret
push
fistpl
jg
jl
cli
aad
movsb
pop
mov
cmp
lds
mov
mov
div
das
movsl
add
call
mov
mov
enter
mov
mov
pop
lea
xchg
daa
gs
sub
jnp
mov
test
lcall
js
dec
pop
pop
inc
xchg
lret
adc
inc
orb
add
cmpsb
popf
rcr
and
stos
seto
mov
push
mov
das
and
pop
inc
adc
xchg
jbe
js
pop
aas
dec
movsb
out
xchg
sahf
fucomp
jbe
mov
cmp
insb
out
rcll
aad
pushf
in
sub
pop
push
aam
aam
notl
fsts
imul
repz
cmp
push
xor
aad
add
rorb
or
cmp
fcmovnbe
test
ror
xlat
xor
xchg
ljmp
aaa
cmp
or
jl
xor
hlt
mov
lock
push
addr16
mov
repz
cmc
test
mov
mov
rorl
sub
xorb
scas
cmp
sub
loope
cmp
outsl
cmp
mov
addr16
bnd
iret
or
jle
jmp
sbb
and
fnstsw
shl
and
pop
outsb
out
lret
aad
sbb
idivb
ja
mov
pusha
movsb
pop
cmp
test
sti
iret
inc
pop
push
add
cmp
ljmp
pusha
pop
in
xlat
mov
stos
mov
es
dec
cli
out
pushl
es
mov
in
xchg
or
in
out
test
and
rcpps
push
cmpsl
das
and
iret
pcmpeqw
jne
sbb
aas
pop
data16
sub
fisubl
into
sarl
mov
dec
jle
jbe
je
adcb
mov
lock
mov
jnp
push
lods
loope
pop
imul
mov
mov
and
cltd
stos
mov
scas
pop
mov
inc
pcmpeqb
pop
jecxz
pop
imul
ss
daa
lret
cmp
dec
jbe
popl
or
js
sti
pop
add
ds
xchg
xchg
xchg
jge
inc
dec
add
cltd
xor
cs
inc
cmp
push
mov
add
mov
leave
add
popa
and
bound
pop
cmp
ret
sbb
ds
je
xchg
mov
sbb
or
lahf
mov
mov
in
pop
movsb
outsl
mov
fs
cltd
es
sti
daa
aas
scas
mov
jns
xchg
lods
js
sbb
arpl
lret
popa
jecxz
and
mov
ja
inc
les
jo
rorb
lret
mov
sub
mov
or
push
and
adc
outsl
mov
insb
mov
stos
mov
sub
xor
mov
pop
cld
fsubrs
jmp
sbb
adc
test
push
inc
mov
pop
les
dec
pushf
lock
test
jnp
xchg
inc
sub
ret
cltd
imul
cmp
pusha
mov
leave
clc
shrb
sub
sbb
sub
cmp
cmpb
popa
push
sub
out
out
rorl
sub
cmpsb
iret
in
mov
mov
mov
sbb
sbb
scas
and
bound
xor
js
sbb
stos
xor
xchg
test
xchg
out
and
pop
jmp
push
add
cmp
mov
out
leave
lock
decb
and
popa
lods
add
scas
pop
push
push
movsl
cmp
scas
outsl
jbe
push
xchg
cmp
jae
mov
je
iret
pop
in
pusha
jmp
push
cwtl
dec
leave
dec
lcall
test
lret
scas
and
shl
add
aad
xor
cmp
lods
scas
out
fimuls
pop
in
push
rcrl
sbb
jae
negb
mov
adc
ret
adc
sbb
xchg
daa
lcall
adc
leave
shrl
idiv
mov
out
rcrl
out
dec
mov
aas
cmp
adc
out
cmp
out
int
add
mov
mov
inc
stos
mov
lds
mov
les
lea
lahf
inc
icebp
pop
xchg
out
pop
sub
gs
pop
je
imul
jno
in
push
sti
xchg
out
cmpsb
sub
sub
lea
push
or
mov
dec
aas
sbb
xor
sbb
iret
xchg
sub
jb
cmp
pop
ljmp
das
gs
ret
mov
mov
cmp
mov
inc
inc
sbb
daa
push
adc
imul
adc
jge
ror
mov
lahf
dec
cmp
cld
insl
fcmovnb
jo
push
ja
aad
jne
xor
mov
fucomip
xchg
push
call
cmp
mov
out
outsb
mov
les
cmpsb
sbb
insb
stc
movsb
push
mov
mov
ret
mov
dec
mov
sub
lahf
arpl
pop
mov
cmp
addr16
sbb
mov
inc
add
jecxz
mull
dec
out
dec
xor
xlat
fwait
add
dec
imulb
pushf
mov
sbb
cmp
xor
push
lods
xchg
and
push
je
pop
in
mov
sub
movsb
xchg
data16
das
push
mov
cmp
jp
mov
inc
xor
sub
mov
cmp
dec
pushf
or
mov
jo
sbb
xchg
sbb
int
imulb
mov
jecxz
shl
sti
aaa
xchg
push
xor
cmpsb
out
les
fldl
mov
or
ret
push
and
or
cmpsl
push
mov
push
inc
dec
xor
cmpsb
movsb
cs
ljmp
dec
fdiv
psubd
rorl
icebp
cmp
and
lret
loope
lcall
mov
scas
nop
pop
mov
and
cmp
cmp
sarb
fistpll
xchg
push
imul
in
inc
stos
xor
pop
mov
dec
out
or
ficoml
fxch
mov
dec
or
or
push
lahf
adc
mov
xchg
mov
dec
push
orl
and
out
jge
repz
xchg
cmp
xor
adc
subb
push
aaa
movd
sti
xor
inc
jecxz
setnp
ss
jbe
das
sub
ret
mov
inc
shlb
sti
xchg
xor
mov
fsubr
les
cmp
fistpl
hlt
or
mov
icebp
sub
adc
in
jbe
dec
cmp
out
nop
fwait
dec
xchg
loop
leave
mov
jg
dec
push
std
ljmp
jecxz
aaa
mov
dec
sbb
xchg
mov
mov
cmp
repz
data16
sub
jae
gs
fcompl
jae
sub
shlb
jno
into
fdivrs
call
nop
js
dec
add
lret
xchg
inc
mov
int3
jmp
mov
out
inc
lretw
cmp
inc
daa
stos
shll
push
addr16
dec
add
sbb
mov
jge
inc
testb
or
bound
sti
sbb
imul
and
inc
mov
fwait
ljmp
iret
nop
out
xor
dec
mov
pop
push
cli
mov
xor
fwait
push
cmc
jmp
xchg
movsl
test
dec
decb
xchg
xchg
mov
fldcw
test
idivb
lret
out
push
fisubs
dec
dec
out
inc
inc
sbb
loop
add
cmp
or
loop
popf
sbb
cmc
mov
lcall
push
and
aaa
ss
xchg
lock
aam
jne
mov
add
jg,pn
sub
dec
std
sub
in
outsl
cmp
xchg
testl
aam
iret
dec
mov
ret
lahf
hlt
lock
xchg
xchg
adc
into
dec
mov
jo
lock
xchg
imul
pop
mov
js
negl
js
mov
or
enter
fisubl
push
mov
inc
inc
push
iret
das
push
adc
jnp
fwait
imul
mov
pop
xor
pop
inc
ret
add
sub
and
jecxz
pushf
testl
add
xchg
pop
scas
cld
dec
pop
lret
inc
push
fisubrs
cld
mov
cmp
xchg
push
mov
ret
add
inc
jnp
lret
adc
xchg
ja
inc
orb
xor
bound
push
stc
adc
rclb
sbb
hlt
mov
lock
and
and
or
ja
xchg
jl
xor
mov
cmp
shlb
cmp
jo
dec
and
outsb
in
push
stos
gs
adc
jb
pop
daa
xchg
jae
shlb
sub
aad
sub
outsl
cmc
imull
aaa
inc
cld
aas
repz
add
mov
loop
movsb
xchg
ss
cld
adc
out
xchg
lahf
lret
ret
mov
and
incb
inc
sub
lahf
adc
imul
fldenv
and
mov
out
ds
lret
jecxz
jg
in
mov
dec
mov
dec
xor
jno
movsb
xchg
dec
hlt
decb
push
adc
cmp
or
out
mov
mov
pmaxub
push
push
and
add
retw
push
xchg
jle
ds
fs
xchg
dec
clc
cs
rcll
loopne
mov
xchg
adc
out
xchg
in
lahf
xor
out
loope
mov
stos
mov
inc
int
fs
pushf
iret
mov
or
aam
js
dec
pop
mov
test
adc
out
std
icebp
rorl
call
cmc
mov
fisubrs
out
mov
ja
xchg
xchg
lret
lds
pop
mov
xor
out
adcb
and
iret
lcall
cltd
aaa
add
jno
mov
stos
icebp
pop
bound
xchg
into
cs
add
inc
add
and
xchg
vpmacswd
mov
jmp
dec
cmp
cs
scas
sub
ret
stos
mov
enter
stos
sbb
loope
test
mull
arpl
stos
cmpsb
inc
pop
and
subl
lods
imul
xor
fiaddl
addl
xor
xchg
pop
xchg
cmpb
adcb
ja
sub
ficomps
bound
jb
nop
shlb
aas
and
jmp
jbe
inc
push
lds
int3
cmc
xor
mov
rolb
or
and
lret
mov
fsubl
and
jns
pusha
cmp
fmull
in
outsl
jecxz
sbb
mov
dec
rol
ja
inc
je
sbb
jle
inc
test
dec
and
cld
jle
ljmp
pop
adcb
xor
fwait
ljmp
fdivl
adc
cmpsl
rcr
xchg
mov
orl
xchg
repnz
arpl
cmpsb
push
push
mov
xor
je
xchg
bound
pop
jmp
outsb
cmpsb
rclb
fwait
and
sub
lods
out
xor
inc
gs
jns
sub
jno
ja
aas
sub
mov
pop
jmp
or
inc
pop
fwait
in
mov
cmp
sbb
fldt
in
imul
lahf
sub
mov
pushf
fstpt
mov
sub
dec
test
sahf
test
jno
xchg
pop
xchg
lret
mov
inc
sub
mov
or
mov
scas
ss
lods
mov
repz
mov
out
cmp
cmp
imul
jp
shrb
mov
lahf
adc
mov
into
and
push
mov
pop
mov
mov
jmp
jbe
push
das
mov
mov
inc
xchg
aad
stos
or
hlt
movsl
lds
imul
xchg
lahf
sub
iret
lods
mov
iret
jle
std
mov
cmc
add
dec
cmpb
mov
push
push
push
dec
imul
mov
bound
sbb
ds
out
and
mov
and
vmovaps
mov
push
xor
testl
pop
iret
xor
rol
mov
mov
push
pop
and
adc
in
dec
mov
adc
iret
mov
add
mov
inc
ja
in
lea
pop
adc
push
ds
subl
movsb
lahf
push
lret
adc
xchg
push
push
push
lret
xor
daa
movsb
xor
cmpb
call
jg
mov
pop
sarb
inc
push
mov
dec
imul
outsb
test
stos
jecxz
lahf
sub
pop
outsl
xor
bound
lret
shrl
test
scas
insl
pop
mov
cmp
imul
int
cs
clc
fistl
aas
push
test
es
push
add
or
out
stos
cli
ret
jp
push
jle
pop
push
hlt
sarl
mov
xlat
test
mov
push
add
nop
rcrl
iret
xchg
out
sub
mov
cmp
mov
in
mov
push
dec
call
sub
xchg
fdivr
or
add
lret
sbb
aam
subb
movsl
pop
aad
lret
scas
test
ss
push
dec
frstor
das
daa
popa
int3
lahf
pop
sub
lock
incl
rorl
mov
loop
popa
rorl
mov
add
subl
and
ja
sub
scas
testl
mov
pop
les
sub
jl
into
xor
mov
into
cmpsb
daa
sbb
add
les
aaa
xchg
test
cmp
cmp
xchg
add
push
sbb
shrl
cmp
inc
rep
or
mov
clc
out
fisttpll
adc
sbb
adcb
movsl
adc
scas
mov
xor
scas
test
out
in
sahf
adc
jo
mov
inc
pop
pop
pop
mov
stc
inc
xchg
pop
push
faddl
test
pop
push
cmp
fistl
pop
mov
iret
in
jnp
mov
gs
lret
leave
sarb
into
add
out
out
fildll
inc
cmc
or
and
shl
enter
bound
fucom
or
adc
mov
or
push
fwait
loopne
and
imul
xor
push
cld
js
xor
out
mov
dec
jb
push
xchg
fs
sub
stos
xor
and
scas
das
scas
test
fdivl
int
mov
jl
pop
cmp
jo
push
insl
xlat
sub
call
lret
jle
outsb
dec
mov
push
cld
je
fcmovu
or
mov
outsl
and
inc
push
fnstsw
jp
mov
lret
add
pop
test
lret
ror
popa
sarb
lahf
daa
sbb
mov
xor
dec
xor
int3
xabort
sub
jbe
negb
mov
xchg
fs
xor
cmp
mov
xor
shlb
sbb
cmp
jg
les
fidivrs
cld
add
sbb
in
sbb
incl
insl
out
xor
or
xchg
loop
pop
xor
sub
pop
mov
pushf
in
cld
imul
xchg
cmp
cmpsb
sbb
shll
out
aaa
rorb
push
xchg
leave
shlb
cmp
jp
xchg
stc
iret
add
push
aas
popf
sbb
nop
pop
fadds
ficompl
je
pop
incl
aaa
aas
daa
iret
sub
cmp
sbb
mov
gs
mov
cltd
jo
ret
pop
repz
cmp
mov
mov
sbb
call
repz
cmp
fcomip
add
sbb
aam
iret
test
inc
outsl
mov
je
or
mov
lcall
inc
pop
fidivrl
xlat
mov
adc
fisubs
roll
outsl
or
dec
xor
jmp
xchg
nop
cmp
mov
je
aaa
jmp
outsl
or
xchg
pop
mov
mov
test
jnp
imul
push
scas
ret
push
add
gs
lods
cmpsl
xchg
stos
out
xchg
mov
push
test
add
mov
cmpsb
mov
cmp
fstpt
add
hlt
int
lret
add
pop
out
ret
inc
sbb
and
pusha
adc
nop
cmc
pusha
pop
mov
cmp
mov
cmpb
lea
or
aam
idivl
and
cld
shll
int3
mov
push
scas
ja
pop
pop
xor
in
outsl
out
insl
int3
and
je
fwait
js
ret
orb
inc
mov
push
mov
and
jbe
inc
out
xor
movsb
add
mov
pop
mov
cwtl
dec
jge
aad
push
fwait
int3
add
shl
mov
push
movsb
aas
jns
sub
dec
mov
lret
jo
fdivl
push
popa
test
ss
cmpsl
pop
leave
dec
orb
pop
jg
fwait
jno
push
adc
sbb
out
fists
sbb
jns
je
or
pop
push
out
ficoml
mov
pop
out
lret
aas
pop
fldlg2
int3
pop
je
decb
mov
cmp
jbe
sub
lret
movsb
fldl
mov
scas
sti
aas
daa
out
ja
or
and
inc
jnp
call
mov
idivb
sub
iret
xchg
sbb
in
fisttpll
fwait
pop
std
inc
inc
imul
pop
push
xor
jle
cmp
jno
jmp
dec
lret
jo
mov
div
mov
mov
jnp
mov
sbb
daa
das
adc
test
xchg
scas
addr16
out
sbb
dec
xor
jo
or
mov
inc
sbb
pop
mov
xor
pushf
call
shll
outsb
cld
outsl
out
out
jno
mov
push
leave
iret
jge
pop
cld
or
dec
inc
jl
outsb
loopne
mov
sub
adcl
and
fdivrp
enter
xor
cwtl
push
push
sub
cltd
fmuls
inc
adc
push
mul
xor
push
inc
push
push
xchg
in
dec
jnp
push
add
call
adc
pop
clc
enter
cmpsl
iret
lret
jbe
push
loop
shrb
enter
jne
cmc
cmp
flds
mov
in
xchg
lret
orb
iret
push
or
jp
out
push
mov
nop
add
jmp
mov
push
int3
fisttps
cmp
mov
gs
mov
in
sbb
push
loopne
or
in
or
jo
add
das
dec
inc
bound
stos
stc
setge
into
cmp
add
mov
dec
mov
imul
adc
out
lahf
cs
fisttps
mov
lahf
xchg
push
dec
and
ret
or
jle
push
out
push
mov
pop
push
insl
stos
pop
out
inc
daa
adc
xchg
dec
out
inc
clc
xchg
pusha
and
sub
xor
dec
push
push
lods
cld
adcl
daa
pop
out
mov
cmpsl
leave
in
aas
xor
test
dec
jns
mov
push
lahf
test
xor
mov
mov
jg
cmp
addr16
data16
cmpsl
cltd
sbb
sub
xchg
call
jo
popf
jmp
andl
imul
adc
std
push
mov
inc
lods
les
popa
dec
sbb
enter
popa
pop
or
out
fcom
movsl
nop
test
push
outsl
jb
cltd
push
sub
mov
xchg
push
test
and
addr16
int
push
in
addl
sbb
jns
repnz
push
xchg
scas
add
and
jae
jb
inc
adc
and
in
jnp
dec
out
test
rcrb
push
rcll
jno
pop
dec
dec
lea
jae
mov
lock
repz
nop
stos
add
xor
cmp
orb
push
sub
fidivl
add
je
sub
cmp
cmp
add
fmul
pop
mov
lds
fwait
pop
push
pop
insl
insb
aas
bound
divb
and
mov
xchg
or
lock
fldt
push
hlt
sbb
iret
fldt
mov
ret
arpl
push
cmpsl
xlat
sub
cmp
xor
xor
pop
test
lods
adc
cmpsl
push
pop
xlat
pop
outsl
std
mov
daa
out
push
pushf
jo
jp
nop
cli
jae
repnz
push
call
cmp
xor
jecxz
out
ret
cld
push
pop
mov
fndisi(8087
jo
pop
jb
in
int
mov
xor
sbb
pushf
jnp
or
mov
clc
mov
dec
aam
cli
dec
add
incb
mov
xor
fadds
sbb
sbbb
stos
dec
mov
loope
jbe
sbb
inc
or
arpl
push
mov
std
iret
stc
pushf
pop
in
push
and
fwait
call
xchg
nop
fstl
shrb
imul
pop
ja
icebp
mov
jns
mov
inc
adc
or
mov
pop
and
sub
dec
pop
xor
add
xchg
in
push
lret
pop
add
xchg
or
cmp
push
lea
mov
sub
sbb
add
mov
mov
jb
mov
pop
out
xchg
in
sarl
jp
jb
ja
je
pop
mov
daa
jbe
jae
aas
scas
mov
insb
out
fimuls
or
iret
ljmp
xchg
mov
push
aam
adc
lock
mov
xchg
add
loopne
js
loop
mulb
iret
dec
pop
xchg
shlb
inc
sarb
ficoml
je
sbb
inc
push
adc
xchg
loope
cmp
mov
pop
xchg
lds
test
movsb
add
addr16
or
jp
pop
outsl
fwait
xchg
push
mov
loopne
xor
xor
fcmovb
mov
sarl
sub
out
outsl
incl
repnz
xor
loope
dec
mov
insl
jg
jo
dec
out
sbbl
outsl
add
xor
ds
das
outsl
adc
cs
jae
ficoml
out
cltd
cltd
aaa
ficoml
mov
push
pop
push
pop
insb
jbe
addr16
pushf
mov
test
add
mov
mov
stc
add
nop
rorl
inc
out
add
cli
jmp
aaa
jge
stos
mov
cmp
pop
sub
fcom
cmp
push
aaa
iret
mov
rorb
iret
pushf
enter
jl
sub
aaa
enter
jp
aaa
jb
rorb
dec
sarl
pop
xlat
sbb
push
and
insb
je
fcoml
sbb
insl
je
mov
out
cmp
leave
out
xor
icebp
xor
cmp
and
adc
add
lods
je
jbe
dec
dec
or
cmpl
xchg
hlt
mov
cmpsl
jg
stos
mov
push
movsl
dec
jne
loopne
insb
dec
outsl
sarb
mov
lcall
movsb
dec
sar
pushf
lods
and
jnp
jl
loopne
outsl
aas
sub
aad
pop
pusha
xchg
lock
cs
and
into
dec
pop
mov
mov
in
pushf
ret
imul
icebp
idivl
divb
inc
add
push
loope
mov
iret
cmpl
push
mov
scas
adc
xchg
repz
push
inc
outsb
pop
inc
and
mov
cli
hlt
sub
fadds
xchg
pop
add
cmp
dec
xchg
lret
add
jb
mov
aad
aam
xchg
push
cmpsl
jb
add
jns
mov
mov
ret
mov
loop
push
lret
ss
cmp
mov
push
mov
dec
orb
jmp
mov
pop
cmpsb
aad
aad
fcoms
ds
ret
js
loopne
arpl
cmp
sar
push
sub
inc
jo
fs
and
in
std
xor
xchg
mull
jmp
xchg
pop
scas
bound
xor
dec
bound
mov
jmp
sarl
insl
mov
cmp
or
mov
mov
insl
dec
aam
jecxz
lea
inc
cmp
mov
xchg
jmp
mov
insl
jp
cmp
rorl
cmpb
lret
add
test
decb
inc
cmc
ljmp
cmpb
lcall
loopne
lahf
daa
das
mov
gs
sub
mov
fiadds
pop
aaa
mov
sbb
xor
mov
mov
mov
leave
xchg
adc
insb
fisubl
jbe
mov
imul
add
xchg
cltd
push
fbld
int3
and
push
sbb
data16
pushf
mov
mov
insl
or
enter
jg
insb
pop
repnz
mov
jg
je
and
and
push
xchg
push
sbb
sar
data16
dec
data16
pop
shl
lret
inc
mov
sub
cmp
xor
jb
xor
imul
jnp
inc
xchg
sub
and
push
insb
imul
adc
mov
jle
call
mov
imul
imull
pop
sbb
sti
movsb
movsl
lahf
rcll
hlt
mov
hlt
xlat
loopne
pop
pop
sar
ja
repz
xor
test
mov
inc
ja
into
clc
in
lahf
pusha
pop
mov
inc
xor
mov
sahf
cmp
adc
jnp
lea
or
shr
xorl
sahf
push
mov
outsl
and
sub
mov
outsl
dec
in
in
pop
popa
movsl
xchg
and
mov
fiadds
xchg
fmull
jl
xchg
call
mov
je
push
arpl
mov
call
and
xor
sti
aad
inc
jp
inc
sbb
inc
jbe
js
out
push
lea
gs
insb
dec
in
or
jl
xlat
ss
sbb
testl
in
out
test
and
imul
lcall
xor
ss
pusha
fs
loop
xor
test
add
movsl
dec
xchg
add
add
ds
cmpps
xchg
arpl
jae
mov
and
loop
jl
mov
fnstsw
jne
imul
pop
notl
xchg
repnz
cli
aas
pop
mov
jg
insb
pushf
pop
shll
pop
loope
iret
shr
dec
sub
lods
rolb
jb
or
idivl
dec
or
cmp
sbb
rorl
pop
dec
and
jecxz
ret
mov
icebp
out
movsb
dec
scas
sbb
movsl
fcmovnbe
push
mov
ds
jb
psubq
arpl
and
call
push
sbb
lret
insl
pop
subb
jg
in
jne
add
pop
mov
cmp
cmp
cmp
rolb
lahf
stc
inc
xchg
popl
pushf
mov
and
xlat
into
das
sub
sti
add
lock
lret
fs
sub
scas
sbb
pop
push
insb
xchg
mov
and
mov
pop
push
pusha
cmp
js
push
fldcw
add
enter
out
ja
jno
loop
add
mov
inc
adc
jecxz
push
inc
jnp
xor
daa
push
xchg
orl
cmpsb
sub
negb
jmp
lcall
out
cs
movsl
adc
popa
cli
inc
clc
les
xchg
rcrb
cmp
mov
enter
fcompl
fadds
jle
mov
idivb
call
into
js
mov
test
xlat
push
lahf
cld
rcrb
ja
cmp
std
jno
cmp
addl
pusha
pop
sub
outsl
mov
pxor
dec
loope
mov
shrb
fsub
dec
js
or
repz
icebp
pop
movsl
xlat
add
push
inc
mov
jl
rclb
icebp
dec
scas
pop
or
outsl
or
xor
jmp
call
out
push
sub
insb
data16
adc
push
cld
repz
repz
dec
inc
push
rol
xor
fists
lds
es
lret
push
mov
mov
fists
mov
lock
pop
aaa
movsb
enter
repz
lret
sbb
add
xchg
scas
inc
adc
jb
xchg
enter
rcll
xor
or
mov
push
ja
fsubrs
or
sub
loope
scas
popf
sbb
insl
fiadds
xchg
xchg
cmp
dec
test
mov
xor
jae
mov
in
mov
aam
adc
xchg
xlat
enter
dec
lock
inc
out
dec
push
aam
jge
inc
ret
mov
sahf
fldt
repz
movsb
xchg
lds
es
or
popl
outsl
or
adc
sahf
ljmp
pushf
pusha
and
mov
enter
cli
mov
mov
call
jecxz
dec
xchg
or
and
rcrl
pop
mov
xor
pusha
imul
xchg
js
mov
jae
push
data16
push
pop
xor
sub
mull
ret
or
dec
cmp
mov
fs
mov
push
mov
ror
stc
jns
cmc
je
adc
jge
cltd
xchg
leave
fwait
or
jecxz
iret
mov
out
scas
mov
mov
xor
in
pop
pushf
loopne
lods
add
aad
inc
shll
mov
push
mov
inc
sbb
insb
lcall
fistps
arpl
xor
cmp
das
push
pop
mov
add
in
xorb
cmp
leave
mov
push
xchg
lret
in
out
sub
into
jp
mov
nop
jecxz
mov
daa
les
jb
xor
testl
out
fmull
mov
mov
lahf
mov
inc
mul
out
scas
push
sub
sbb
dec
pop
add
aas
mov
pop
push
pop
cmp
cmc
adc
jo
jecxz
je
sbb
movl
jge
add
lock
fwait
hlt
maxps
mov
cmp
test
lcall
stc
inc
das
stos
ret
xor
lea
jle
push
lock
mov
fs
and
xchg
seta
imul
mov
lea
repnz
cmp
imul
outsb
adc
icebp
divl
cmpsb
dec
loopne
cmpb
out
outsb
adc
lcall
ljmp
ds
push
lret
lock
out
or
push
mov
inc
pop
sbb
pop
sub
movsl
in
xlat
cmp
cmp
ret
push
mov
or
mov
add
jo
in
movsl
js
int3
inc
in
xchg
stc
inc
daa
sahf
xchg
cld
sahf
fstl
push
jae
xchg
xchg
push
in
and
and
or
cmp
inc
mov
pop
jae
ljmp
inc
ja
shrb
mov
mov
fistl
xchg
inc
test
push
loope
mov
jecxz
stc
jecxz
sbb
mov
sbb
dec
lock
mov
xchg
cli
sub
movsb
or
xor
imul
xchg
sbb
shlb
and
pusha
push
lret
pop
adc
shl
mov
cmp
add
pop
fwait
pop
adc
pop
repnz
ror
out
push
xor
pop
shrl
loop
mov
sbb
adc
scas
mov
mov
lods
bound
add
cmp
sbb
cmp
mov
cmpl
aas
rcr
rcl
xorl
ljmp
orl
or
sbb
test
sbb
adc
and
add
adc
aam
mov
je
ja
incl
push
stos
aam
cmp
inc
and
rorl
or
or
adc
ret
mov
andl
jb
std
enter
and
mov
sub
loopne
lret
mov
pusha
and
insb
ret
or
iret
loop
adc
add
scas
mov
sub
cmp
jp
imul
and
ret
sub
aaa
rclb
add
cmpsb
pop
gs
test
mov
sbb
adc
out
out
xchg
pop
and
sub
adc
lock
sti
fxch
es
mov
and
push
ja
jmp
or
push
mov
cpuid
adc
mov
stos
movsb
jl
pop
loopne
mov
inc
sti
and
lock
adc
mov
jae
jp
fcmovbe
fcmovu
adc
int3
fisttpl
sub
mov
xchg
mov
subl
push
xor
mov
pop
dec
filds
cwtl
jbe
and
repnz
lock
mov
adc
xor
mov
out
sub
mov
fwait
out
xor
cmpsl
dec
xor
mov
mov
ja
sti
das
xchg
int3
sbb
and
push
push
ss
fwait
pop
push
inc
std
pop
les
out
push
dec
pop
js
scas
cmpsl
dec
imul
neg
xchg
lcall
pop
mov
dec
cmp
or
pop
pmullw
pop
push
or
xor
dec
jl
fistpll
cld
lret
lahf
add
xor
into
xchg
je
in
sub
out
clc
jl
repnz
xchg
inc
bound
jmp
rcrl
shll
movsl
adc
hlt
jmp
adc
or
aaa
add
test
cmp
lods
dec
or
cmp
jmp
cmpsl
mov
push
movsb
out
push
dec
test
iret
aas
jg
or
cmpsl
ja
xor
in
pop
inc
daa
adc
insb
pop
xchg
clc
pop
mov
and
nop
xor
idiv
push
jg
sahf
adc
dec
out
fistps
cld
arpl
mov
ds
lahf
xchg
and
adc
in
out
mov
insl
push
and
rorb
pop
dec
stos
add
popa
insb
xor
pop
pop
fs
loope
stc
push
popa
filds
lret
mov
jbe
xchg
iret
push
pop
ret
sbb
cmc
or
test
ret
xchg
cli
jecxz
nop
pop
ss
or
enter
cmp
outsb
pop
enter
andb
pop
shll
imul
mov
mov
ss
je
mov
inc
lods
pop
out
pop
pushf
pop
cld
push
sub
pusha
or
mov
mov
dec
push
popa
add
inc
inc
js
jge
daa
pop
ficoml
and
jnp,pt
inc
data16
mov
js
lock
repz
call
rol
data16
and
or
jne
in
mov
stc
gs
std
cmp
outsb
test
repnz
and
cs
mov
aas
inc
fcomip
mov
or
cltd
lds
lahf
cli
mov
inc
mov
pop
jl
in
xor
add
test
and
xchg
or
test
inc
or
mov
mull
nop
int
add
lods
popa
cwtl
cli
imul
ss
fs
fwait
mov
fidivl
mov
xchg
repz
jbe
sbb
lret
dec
inc
mov
mov
sbb
dec
jecxz
test
inc
dec
push
cmpsb
jb
push
push
jbe
cmpsb
ss
aaa
rclb
mov
xor
rcl
out
loop,pn
push
pop
push
dec
je
dec
xlat
inc
jno
xchg
inc
pop
mov
jle
mov
enter
addr16
das
xor
dec
sub
test
mov
jmp
out
das
pop
fwait
ret
out
jg
int3
out
push
int
ljmp
pop
mov
call
sbb
jge
jmp
insb
nop
std
and
dec
js
sub
sub
cmp
mov
es
adc
or
les
pop
mov
add
mov
ffreep
and
cmc
test
jae
sbbl
and
add
test
jno
or
mov
insb
lret
in
loope
ret
aam
push
add
sbb
lea
xchg
ds
in
test
push
addr16
hlt
cmp
rcrb
push
daa
mov
xor
or
test
ss
out
jno
adc
push
loopne
and
into
push
jb
inc
inc
repnz
outsb
hlt
rcr
sbb
inc
into
int3
pop
mov
xchg
xchg
add
out
test
adc
scas
jle
jmp
pop
insb
pop
jmp
adc
sbb
xor
cmp
ja
inc
pop
mov
in
dec
scas
ss
rclb
mov
fidivrl
test
push
stos
mov
add
mov
mov
mov
lret
ja
lds
ret
jp
cld
adc
cwtl
mov
mov
ret
aam
addr16
adc
enter
lcall
repz
xor
inc
xchg
adc
out
hlt
jnp
test
xor
dec
adc
mov
sub
xchg
dec
mov
xchg
jbe
push
frstor
std
sarl
xchg
cli
and
or
add
test
es
or
push
cmp
xor
aam
or
cmc
lahf
jmp
inc
jecxz
insl
lret
das
mov
clc
lahf
js
and
imul
add
outsb
cltd
lret
xor
addr16
lret
sub
push
imull
into
in
mov
hlt
stos
mov
aas
fiadds
mov
sbb
popf
add
mov
jl
mov
pop
nop
popf
dec
jg
js
push
subb
test
hlt
addr16
cmp
fiadds
lds
sbb
je
lret
inc
mov
jmp
sbb
fidivrl
jbe
pop
inc
test
ret
jle
lods
jae
mov
adc
mov
push
push
add
inc
je
fisttpl
inc
sbb
mov
fsincos
jmp
lahf
jno
and
loop
mov
sbb
ret
ljmp
add
loop
in
sub
sbb
ss
push
pop
pop
cmpsl
int
mov
ja
cld
lret
mov
aaa
fisubrl
sub
jecxz,pn
movsl
inc
sbb
pusha
and
out
inc
and
arpl
xchg
loopne
movsl
sbb
dec
repz
cmp
out
jnp
or
aam
cmp
add
push
xchg
push
insb
adcb
dec
xor
ljmp
and
xchg
imul
icebp
inc
sub
popf
loop
stos
pop
and
mov
or
or
sbb
cmpsb
ds
mov
jge
and
pushf
shufps
std
mov
iret
mov
clc
lds
lods
dec
adc
ljmp
das
dec
mov
aas
adc
jp
das
jl
mull
in
mov
or
sbb
lods
je
or
dec
pushf
pop
sub
mov
add
movsb
es
jle
mov
xchg
outsl
lret
fwait
jbe
xchg
rolb
and
pusha
xchg
or
add
rorl
sbb
aad
cmpb
rcrb
sti
pusha
insb
xlat
sub
adc
sub
lahf
add
loop
cltd
call
inc
or
jmp
push
or
dec
inc
iret
push
loope
fs
dec
mov
add
out
mov
inc
test
or
push
sbb
sbb
rclb
repz
xchg
xlat
orb
jmp
mov
repnz
push
xchg
scas
lret
fistpl
dec
mov
pushf
dec
or
cmpsb
insl
imul
jl
mov
xlat
lret
jp
jmp
lods
push
in
sbb
fisttpll
outsl
ret
or
adc
dec
xlat
adcb
bound
ficompl
lds
fidivrs
pop
ret
xorl
out
sti
repz
repz
xor
pop
testl
adc
mov
dec
cmp
jae
pushf
loope
xlat
pop
sub
cmpsl
add
ljmp
out
or
jae
aas
add
cmp
jecxz
push
lock
push
fidivrs
sub
rol
pop
pop
mov
out
jae
loope
bnd
jecxz
push
mov
mov
popa
xchg
das
mov
xchg
aas
ret
push
sub
adcl
cmp
ss
mov
mov
rcr
cs
and
loop
add
scas
mov
push
repz
or
push
dec
mov
sub
sarl
or
imul
dec
jp
pusha
addr16
or
lret
xor
inc
xlat
rcll
mov
xor
shlb
xchg
call
or
mov
and
dec
mov
xor
mov
push
sti
test
inc
mov
in
sbb
mov
push
incl
mov
push
mov
xchg
aad
jnp
addr16
je
cs
lahf
xor
xor
adc
call
test
ss
sub
outsl
jg
and
lret
adc
test
enter
popf
lahf
dec
rcrl
pop
aam
sets
xchg
les
es
push
sarl
dec
sti
and
inc
fsubs
outsb
es
mov
testl
xlat
stos
xor
sbb
or
fbstp
pusha
cmp
sti
jecxz
mov
adc
imul
cmp
mov
out
adc
andl
pop
clc
xchg
addr16
test
cmc
adc
jecxz
sti
pop
push
and
add
sub
cwtl
inc
insb
lret
outsl
test
jmp
push
test
ja
cmp
pop
rcl
mov
fists
inc
jg
dec
stos
cmp
xchg
mov
add
mov
cmp
xchg
testb
mov
sub
fisttpl
dec
inc
pmaxub
repz
frstpm(287
ret
cmp
invd
enter
pop
fsubrl
and
mov
shrb
sbb
push
or
push
sub
fldcw
enter
xor
bound
sbb
cmpsl
add
sub
test
cmp
mov
add
lret
jp
psubb
iret
fwait
mov
loope
xchg
ret
fprem
icebp
mov
ud0
mov
aam
test
xlat
loopne
icebp
add
outsb
mov
push
call
fisubs
mov
pop
decl
pop
jge
xchg
ja
mov
sbbl
lahf
inc
sbb
lea
or
dec
insb
push
and
mov
sub
xchg
repnz
mov
sub
pop
jge
aas
and
sub
adc
or
dec
and
enter
pop
dec
xlat
adc
or
pop
pop
addb
enter
sub
subb
mov
push
dec
fildll
sub
jo
arpl
insl
adc
iret
fs
aas
or
aas
mov
std
sbb
pop
shr
inc
and
aaa
jns
inc
pop
dec
cmp
sbb
jmp
cltd
scas
ret
iret
pop
lahf
lcall
lret
mov
mov
xor
dec
lods
jb
mov
loopne
mov
xchg
fstpt
out
push
mov
xchg
cli
outsl
jle
sarl
and
xor
out
iret
mov
addr16
and
loopne
push
mov
add
mov
mov
orb
mov
mov
stos
mov
xor
fildl
jnp
je
aad
adc
and
mov
jb
sbb
ret
jbe
ret
fdivrs
xchg
dec
mov
and
lret
adc
jmp
inc
cmp
aas
test
jg,pn
fimull
and
mov
cmp
mov
xchg
jl
xor
jl
xor
add
popa
aas
nop
stos
decb
daa
stos
mov
cld
call
sahf
bound
arpl
fdivs
xchg
inc
pop
mov
out
lahf
push
popf
fmuls
pop
inc
push
mov
cmovp
fstpt
rclb
int
stos
aaa
xlat
or
inc
add
xor
xor
mov
data16
test
xchg
xor
mov
pop
out
lret
loopne
inc
aas
pop
sbb
xlat
jnp
mov
jp
xor
inc
add
iret
xchg
fists
cmpsl
addl
cmp
pop
pop
popf
fdivrl
divl
sbb
loop
fwait
gs
ja
mov
pop
orb
xor
jp
pusha
inc
lahf
test
loopne
xor
fildll
xchg
push
out
insb
push
or
xlat
sti
dec
loope
pop
and
divb
mov
fildll
rclb
xor
lods
mov
jbe
and
sbb
lods
fcomip
jle
push
sbb
pop
push
xor
xchg
push
addps
jo
xchg
mov
inc
or
ja
shrl
inc
push
xor
add
mov
inc
pop
push
xchg
or
filds
je
xchg
movsb
rcll
pop
mov
sar
pop
inc
mov
sbb
dec
dec
xlat
push
ja
stos
imul
sub
dec
adc
dec
pop
mov
mov
test
mov
bound
or
cmpsl
sahf
lods
cmp
mov
xor
rcrl
mov
lahf
xorb
cmp
jmp
aad
das
pusha
sbb
lahf
aaa
push
cmpsb
lahf
outsl
pop
push
xchg
in
shll
add
out
add
sbb
mov
mov
ljmp
cmp
daa
test
in
mov
jnp
arpl
rolb
mov
rep
cmc
sarl
imul
cmp
movsl
push
fcoms
rorb
cmp
lret
ret
dec
imul
or
out
and
pop
addl
mov
inc
repz
test
adc
lock
sahf
js
ret
mov
cmpsl
call
cmp
xchg
hlt
orb
sbb
xor
iret
jnp
push
ds
in
test
mov
cmpsl
jle
stc
lds
leave
es
insb
mov
test
movsl
das
push
mov
scas
or
dec
xor
sub
cmp
cmp
and
lods
xchg
and
sub
lds
popf
je
mull
ljmp
lsl
lods
cmp
sub
lret
push
xchg
dec
mov
aas
das
call
jle
push
xchg
mov
scas
popl
fcoms
or
lock
xchg
jp
or
sub
out
or
ja
cmpsb
push
lods
sub
cmp
sub
stos
cmp
push
sbb
dec
stc
imul
and
jbe
repnz
adc
insb
popf
and
lcall
sub
and
mov
imul
inc
stc
and
sbbl
adc
icebp
outsl
pop
cmp
aaa
frstor
ds
rcl
inc
pusha
repz
push
pop
push
ja
addr16
xchg
outsl
dec
es
imul
outsl
and
push
jbe
xchg
addr16
mov
pop
cmpsb
dec
nop
mov
gs
fcompl
arpl
andb
xchg
push
cld
shl
jb
pop
add
add
out
cmp
mov
add
scas
pop
scas
daa
rolb
aaa
push
jge
xchg
sti
or
inc
mov
mov
mov
scas
pusha
cmp
lock
loop
scas
aad
fisubl
cmc
sbb
movsb
fistps
aaa
xchg
xor
fisttpl
divb
rcrb
jl
pop
sahf
nop
loopne
pop
daa
iret
imul
xchg
aaa
mov
test
mov
or
pcmpeqb
push
xor
mov
data16
adc
sub
outsl
loopne
fistpl
xchg
sahf
cltd
jo
call
sbbb
fisttps
push
ficoms
inc
fidivrl
mov
or
insl
add
mov
cmp
inc
ret
pusha
test
psllq
fcmovu
std
push
pop
push
push
inc
push
fwait
leave
mov
dec
arpl
dec
das
dec
jbe
mov
jae
call
test
dec
push
fwait
imul
inc
xchg
sub
aaa
loopne
sub
aam
out
jmp
sbb
inc
es
xchg
stos
push
loop
sahf
xlat
jmp
jge
add
pusha
sub
pusha
push
subb
fcmovbe
data16
push
sbb
inc
push
rorl
jecxz
dec
dec
jmp
mov
adc
pop
mov
imul
mov
push
cltd
ljmp
add
dec
ss
mov
repnz
adc
cltd
xchg
jo
mov
cmpsb
in
cmpsl
imul
fisubl
mov
sub
sahf
cwtl
stos
inc
and
sbb
add
ror
out
cmpsl
push
int3
in
les
jo
fwait
out
clc
pop
out
shrl
sub
and
cs
and
xor
arpl
cli
jo
and
jle
mov
fdivrs
cmp
cmp
negb
xchg
adc
adc
mov
inc
testl
test
js
cwtl
xchg
pop
add
push
out
fdivr
xchg
inc
ja
jae
add
xor
xor
mov
addr16
outsl
fwait
inc
and
iret
push
jle
fcoms
out
sub
ja
das
push
or
or
aam
add
aaa
dec
cmpsl
test
adc
call
jmp
loopne
mov
mov
adc
insl
in
push
xor
sub
xchg
sub
sub
lcall
cltd
fs
sub
cltd
xchg
call
adc
iret
mov
subl
pusha
lahf
arpl
push
das
enter
jg
in
fs
sbb
ret
mov
adc
lcall
jle
sub
dec
sbb
fdivrs
jl
jae
xlat
xor
mov
clc
aaa
dec
mov
push
add
dec
imul
xor
dec
xchg
imul
dec
aaa
sysret
dec
imul
lea
ret
push
adc
out
xchg
bound
add
das
jl
sbb
and
sub
cmpsl
mov
inc
bound
out
add
lahf
int3
scas
adc
aas
xor
sbb
mov
sbbb
cs
dec
outsl
in
add
out
pop
or
inc
fcomp
sbb
push
mov
sbb
call
in
mov
push
mov
jp
cli
xchg
push
pop
cmp
dec
dec
cmp
popf
cmpsl
rcr
inc
cmp
and
loope
repz
pop
adc
mov
mov
movsl
cmpsl
loop
fwait
xchg
fcmovne
pop
pop
mov
add
aam
dec
arpl
mov
ss
dec
xchg
push
lret
in
pusha
and
and
fmulp
stos
clc
xchg
xchg
mov
dec
dec
dec
movsb
dec
sbb
std
out
jmp
pop
iret
fcmovnb
aaa
pop
push
movsl
jae
adc
add
ret
roll
mov
aam
xlat
pop
out
loopne
adc
add
fisubrl
and
mov
jno
pop
or
mov
push
iret
mov
mov
fdivs
lahf
fs
xorb
ja
and
daa
addb
mov
cmp
fidivs
xchg
mov
dec
out
insl
loope
push
pop
out
into
pop
stos
mov
outsl
rcrl
das
outsb
add
pop
sub
movsb
outsl
or
xchg
mov
cs
pop
push
mov
push
iret
shlb
mov
mov
mov
les
cmp
xchg
or
lcall
js
out
pop
inc
lods
mov
mov
cmpsb
lret
inc
pop
mov
fadd
clc
and
pop
js
sbb
jo
ljmp
test
push
sub
lock
aam
mov
iret
int
push
jae
adc
mov
jmp
cmpb
test
repnz
sbb
mov
dec
ds
jmp
lahf
and
xlat
das
jmp
push
push
shrw
mov
sbb
pushf
arpl
or
mov
imul
pop
push
cld
xchg
lea
pushf
xchg
cs
ficoml
mov
adc
stos
add
in
cmpsb
pop
pushf
and
ja
cwtl
inc
jp
jne
and
push
pop
les
fstps
lock
jne
pop
negb
ret
lahf
mov
jns
rcll
int
jbe
int3
sbb
outsl
movsl
aad
mov
imul
fidivrl
call
sbb
scas
arpl
pop
xlat
fwait
lea
addr16
sti
fwait
call
push
mov
mov
jg
sub
mov
inc
bound
addr16
addr16
jae
jecxz
out
jbe
mov
cmp
imul
add
cmp
adc
jns
dec
stos
das
lods
out
pushf
pop
push
cmovnp
ror
ret
je
pop
dec
xchg
imul
mov
xchg
loope
dec
xchg
test
add
pushl
test
shlb
push
aam
cmp
pushf
ret
sub
out
lret
nop
xor
loop
cmp
loop
ljmp
daa
mov
mov
arpl
les
mov
add
xor
xor
mov
cmpsl
fsubrp
push
mov
je
mov
mov
xlat
ja
sahf
pop
dec
lret
fisubl
scas
icebp
xchg
adc
dec
in
iret
jl
rclb
push
dec
dec
in
fisubrs
repnz
pop
enter
das
cmpsl
push
sub
into
fisubs
stos
imul
cmp
pop
mov
cs
cmpsb
dec
stos
cmp
and
das
nop
dec
push
lret
add
mov
mov
sti
dec
sub
out
jns
or
sbb
sub
jno
int3
xor
stos
les
out
jo
mov
repz
in
sub
xchg
inc
out
pop
inc
in
sbb
inc
aaa
stos
sub
or
fcoml
mov
mov
add
jne
jbe
lahf
pusha
mov
mov
mov
and
scas
fistpl
cltd
jmp
mov
les
idiv
stos
lcall
sbb
sbb
mov
add
mov
and
xor
mov
push
lret
test
mov
cmp
adc
push
jmp
xchg
inc
and
cmp
push
mov
xor
sbb
dec
test
push
jns
test
sti
hlt
mov
pop
out
imul
pop
push
call
movsl
cmp
inc
cmpsl
xchg
xor
xchg
pop
jb
xchg
mov
sub
sbb
popa
sub
arpl
sub
sub
push
jbe
xor
loopne
xchg
lock
dec
adc
pop
ljmp
enter
jo
leave
cs
sub
pushf
sbb
sub
sbb
cmpl
and
pop
xchg
jmp
dec
and
les
mov
cmp
or
ret
bound
or
inc
push
addl
push
pop
repnz
jge
mov
mov
or
pop
add
and
jo
push
test
and
daa
ret
cmpb
add
cli
mov
sti
inc
cmp
jb
repnz
ljmp
cwtl
shll
test
fldcw
or
jnp
cmpsb
push
stos
je
mov
es
jb
imul
aad
ljmp
enter
mov
sti
lods
clc
outsb
inc
out
int3
lcall
cmc
loop
pop
shlb
push
lods
cmpsb
daa
xor
addr16
mov
cmpsl
mov
pop
lock
or
jge
cmp
ret
stos
dec
dec
mov
cmpsl
outsb
push
movsb
xchg
mov
jbe
mov
popa
pushf
mov
mov
mov
sbb
sub
ror
sub
out
lods
sti
cmp
insb
jnp
cld
xor
dec
cld
cmp
andb
jb
orl
hlt
das
ss
pop
movsb
hlt
jmp
push
xor
mov
push
addb
xchg
cmp
pop
test
jb
aam
aas
adc
ret
pop
stos
sbb
mov
pusha
nop
xchg
push
mov
jg
xchg
nop
pushf
sub
rcrl
iret
xor
ja
mov
mov
dec
pop
lods
imul
lcall
jp
ja
das
sbb
adc
rcr
test
popf
push
addps
jno
cmp
push
test
cli
mov
and
out
scas
dec
fnsetpm(287
out
adc
jle
in
lcall
movsl
cmp
adc
cmp
fsubrp
insl
fwait
xor
xchg
std
xor
add
popa
rep
adc
vmwrite
inc
ficoml
sub
pop
pusha
jb
pop
ja
or
and
push
xor
push
stos
sub
popa
fldcw
cmp
mov
or
mov
inc
mov
push
xchg
std
mov
inc
cs
mov
xchg
xlat
ljmp
scas
dec
jo
imul
mov
mov
mov
movsb
iret
dec
aas
shl
dec
mov
xchg
xlat
mov
into
inc
out
aas
dec
pop
inc
scas
in
sarw
sub
inc
pop
pop
jmp
or
in
add
pop
sbb
xchg
jl
pop
into
push
sbb
iret
iret
push
insb
jno
mov
add
aas
js
sub
sbbb
out
shll
sbb
scas
mov
jnp
push
dec
sarl
pop
sbb
dec
or
sar
pop
pop
out
push
adc
cmp
nop
mov
lcall
ja
ret
out
aaa
mov
scas
mov
out
inc
push
jnp
dec
push
sbb
mov
dec
jne
dec
jno
pop
gs
jg
jle
xor
es
xchg
inc
pushf
jo
fldt
cmp
mov
rol
or
push
xor
clc
aad
out
lret
mov
cmp
mov
or
dec
cltd
out
xchg
mov
mov
outsl
loop
call
cmpsl
mov
lcall
and
pop
testl
ja
cmp
scas
jb
xchg
mov
je
mov
mov
adc
xchg
pop
arpl
xchg
lods
xchg
test
stos
pop
inc
hlt
adc
repnz
cmp
scas
lret
xchg
inc
inc
dec
mov
fxch
ficompl
fs
jecxz
shlb
push
mov
ret
out
ljmp
mov
sbbb
fs
pop
push
mov
fisubrs
mov
push
rcll
sbb
sbb
add
push
inc
mov
mov
fisubl
or
mov
push
mov
outsb
lret
mov
fcom
das
push
add
dec
sbb
xchg
pop
or
in
iret
pop
sqrtps
stos
inc
cld
dec
mov
xchg
and
pop
push
std
xchg
jle
shll
or
push
in
dec
sti
repnz
inc
add
sbb
push
scas
xlat
inc
lcall
fwait
lea
pop
sub
xchg
lods
jae
scas
decl
push
cli
iret
cmp
jmp
xchg
push
adc
push
pusha
mov
mov
adc
mov
dec
push
jno
dec
sbb
mov
mov
lret
stc
notb
add
jge
jns
inc
xchg
sbb
daa
inc
js
fbld
jge
pop
lret
or
inc
cmpsb
sub
or
add
cltd
or
add
jl
xlat
insl
mov
xchg
dec
cmp
enter
imul
ds
jl
sbb
push
loopne
sub
pop
mov
add
shrb
cmp
xlat
or
addr16
pop
mov
xchg
subl
lahf
rdmsr
pop
and
ss
scas
cmp
or
repz
adc
sahf
pop
mov
pop
sti
adc
in
and
das
ret
aaa
subb
sahf
push
dec
insb
shlb
cmpsl
cmpsl
xchg
xchg
xor
jp
adc
sbb
test
mov
push
or
inc
inc
ror
movsb
loop
sbb
clc
lods
aam
push
jmp
call
pop
aaa
lea
aad
and
cld
fsubrs
cmp
pop
xor
xchg
ja
cmp
sbb
add
jnp
test
bound
stos
cmpsl
cmp
into
fwait
rol
loop
pop
jmp
xor
pop
cmp
lea
push
pop
mov
and
sbb
mov
ja
punpckhbw
dec
movsl
sbb
loop
and
xchg
daa
divl
lret
repnz
or
pop
dec
je
mov
mov
mov
sub
cmp
test
stc
rolb
push
jmp
pushf
scas
or
xchg
div
cmp
ja
loop
mov
mov
push
push
adc
cmp
sbb
jns
cs
inc
add
pop
popl
jns
push
repnz
je
fwait
dec
xorb
mov
jmp
dec
iret
nop
mov
and
movsl
jecxz
pushf
sub
cmp
pop
scas
push
mov
push
daa
pop
dec
and
nop
out
lret
push
jle
pop
and
mov
adc
enter
scas
jo
xchg
pop
andb
push
fiadds
push
mov
bound
idiv
mov
lcall
icebp
ja
dec
outsl
dec
mov
addr16
js
cmpsb
cmp
and
mov
mov
mov
daa
push
or
aaa
imul
out
sub
push
push
daa
fdivs
and
subl
int
popa
out
dec
jecxz
stos
push
inc
daa
mov
test
lods
test
insb
stos
mov
and
les
icebp
pop
daa
jle
int3
pop
notb
mov
mov
sbb
adc
inc
push
pop
pop
xor
and
pusha
jge
jb
outsb
je
adc
icebp
adc
cmc
mov
sarb
lret
inc
sarl
lahf
push
stc
in
add
mov
int
cmpsl
sub
lock
pop
xchg
lret
pop
out
aas
jnp
xor
push
pusha
jno
xchg
adc
pop
aaa
sbb
inc
enter
test
or
ljmp
xor
jl
lea
fsubrs
xor
and
cmp
cld
arpl
fcmovb
inc
push
mov
mov
and
arpl
jle
loopne
pop
pop
mov
repnz
pop
pop
pop
lret
ficompl
pop
popa
dec
cs
arpl
out
sti
mov
movsb
testl
push
daa
mov
cld
negl
dec
aaa
jge
jnp
leave
aam
repnz
mov
outsb
std
sbb
sub
aam
ja
cld
mov
sub
sarl
lahf
mov
sub
mov
sarl
dec
cmp
mov
nop
out
cwtl
pop
mov
adcl
jb
push
adc
mov
cmp
and
adc
lcall
adc
cld
xchg
dec
dec
ds
pop
push
inc
pop
sbb
dec
test
mov
or
je
mov
pushf
cmc
mov
jae
cmp
push
inc
pop
scas
mov
mov
pop
mov
mov
gs
cwtl
div
enter
mov
sahf
daa
jbe
inc
jns
sub
fisttpll
lahf
sub
fildll
addr16
xor
in
mov
xor
fldt
cwtl
jnp
int3
je
cmp
inc
idivl
pop
jecxz
enter
cmpsl
inc
add
les
pop
inc
scas
sbb
jns
stos
dec
test
int3
jb
or
pop
testl
lods
loope
mov
daa
xor
insb
pop
fsubrs
hlt
bound
fidivl
cld
out
mov
dec
leave
fwait
outsb
push
xchg
pop
sub
enter
clc
mov
iret
pop
insl
dec
ja
xchg
out
dec
cmp
adc
imul
and
popa
cmpsl
cmp
mov
jp
imul
ret
push
jns
add
dec
add
fidivs
inc
lcall
add
mov
loopne
test
sbb
pop
pop
cmp
xor
mov
into
rclb
loop
clc
jmp
or
xchg
sub
jmp
sbb
addr16
sub
and
data16
lods
pop
out
mov
dec
push
nop
fbld
and
pusha
outsb
mov
ja
cmc
stc
and
adc
les
cli
sub
sti
cmp
repnz
xor
test
dec
jmp
cld
push
int3
stos
lret
cmpsl
mov
scas
jp
repz
push
pop
jg
pushf
mov
sub
mov
inc
call
addl
sbb
adc
clc
push
cmp
stos
push
out
xchg
stos
and
jge
mov
fisttps
sbb
mov
sub
mov
mov
ja
mov
mov
cmpl
in
test
push
call
int3
xor
aaa
popa
xchg
nop
jmp
out
adc
add
pusha
fs
ret
in
in
jbe
sub
mov
dec
push
int3
jb
xchg
and
xor
movsl
jp
lods
lods
sbb
mov
scas
sub
aad
out
repz
lret
sub
adc
add
pop
outsl
xchg
push
inc
dec
loope
fcomps
dec
inc
into
ja
les
and
push
mov
arpl
pushf
out
add
das
jge
subb
repz
pushf
xor
repnz
xchg
test
loopne
cltd
rclb
bound
dec
les
iret
sahf
fstl
popw
rcrl
inc
cmp
shrl
jns
repz
jnp
daa
push
rclb
loopne
add
fiadds
out
mov
pop
jecxz
test
push
mov
or
add
add
mov
cmp
push
in
fwait
add
mov
sbb
jb
mov
push
dec
popf
mov
js
in
sbb
aas
cs
notb
outsb
mov
mov
sub
lahf
outsb
jns
arpl
fistpl
repnz
pop
mov
shufps
in
mov
ds
outsl
mov
jne
add
and
cmpsl
insb
xor
movntq
iret
mov
fcomps
push
xorl
cmpsl
mov
lods
call
push
test
lock
mov
jge
inc
mov
sbb
test
mov
mov
xor
arpl
popa
hlt
jmp
push
inc
xchg
sbbl
lock
sub
jnp
xchg
por
mov
jp
shl
jecxz
add
into
ret
push
call
icebp
mov
loop
addb
xor
xchg
test
in
xor
xor
sbb
out
cmp
cmp
adc
cmpsl
pop
cwtl
dec
clc
xor
add
sbbl
xor
push
fwait
pop
and
cmp
addb
add
jmp
mov
addr16
fisttps
fisttps
icebp
fistps
mov
add
mov
outsl
daa
jle
frstor
gs
je
mov
mov
sbb
xchg
xlat
lock
sti
mov
enter
fwait
pop
xchg
outsb
cld
adc
ljmp
scas
cmp
aaa
stos
movsl
sbb
fistl
sub
testl
daa
lret
jnp
push
mov
pusha
xor
jnp
cmc
inc
aas
adc
out
enter
fidivrs
mov
scas
mov
and
sti
xlat
adc
movsl
push
cmp
sahf
rclb
inc
dec
inc
push
pop
sbb
imul
mov
bswap
sub
jecxz
out
cmp
mov
mov
xchg
pop
addl
or
lret
push
je
ret
fs
mov
outsb
ds
out
cmp
imul
sahf
sbb
stos
les
fadds
xor
or
dec
pop
fsubrs
or
inc
ret
pop
pushf
fs
mov
push
adc
aad
push
xlat
notrack
mov
outsl
pop
xchg
inc
insl
mov
rcr
nop
pop
fiaddl
add
jbe
pop
icebp
fdivr
xchg
cmp
mov
sbb
adc
ljmp
repz
loope
aam
pop
popa
pop
aam
out
addr16
nop
call
daa
mov
dec
pop
mov
inc
arpl
xchg
mov
add
ja
jecxz
fistl
int3
or
jnp
mov
mov
hlt
insl
scas
mov
jne
push
orl
imul
cmp
or
sahf
push
fwait
jno
mov
pop
call
bnd
mov
adc
movq
outsb
pop
mov
ret
mov
xlat
outsl
bswap
pop
add
lea
loope
daa
pause
cmp
nop
lret
jnp
adc
cmpsb
mov
iret
pop
cmpsl
les
sub
outsl
inc
icebp
xchg
movsb
mov
pusha
xchg
push
push
lock
mov
dec
dec
rcrb
and
pop
push
adc
inc
inc
bound
repz
cmp
mov
js
push
or
out
adcl
fsubrs
mov
sub
cmp
push
pop
push
cmc
movsb
icebp
inc
ja
cmc
sub
cmp
inc
add
mov
cmp
fisttps
loop
xor
jg
cmpsb
repz
sbb
arpl
xchg
jle
outsb
cmp
and
les
dec
daa
xor
jl,pn
cmpsl
inc
out
call
outsl
mov
cmpsb
ret
aaa
cld
gs
jl
cld
aas
pusha
jnp
bound
ret
mov
enter
fstl
jge
bound
and
dec
mov
pop
lret
fwait
std
out
sbb
mov
dec
pop
mov
mov
test
sbb
loop
orb
pusha
sub
in
cmp
pop
adc
stos
leave
sbb
mov
mov
push
sub
leave
in
pop
sti
xor
ljmp
push
ds
cmp
add
add
cmp
pop
mov
ja
fidivrs
xchg
fcomi
cmp
int3
jno
sub
mov
loopne
ret
xchg
jne
pop
movsb
push
bound
fs
and
ret
xor
jg
xchg
loopne
or
mov
outsl
xchg
lods
cltd
xor
cli
push
out
in
sti
fs
lock
pop
stc
dec
mov
bound
xor
push
inc
xor
lods
movsl
das
jnp
lret
xor
xor
fiaddl
fsubrl
stos
add
fimull
sbb
mov
nop
andl
mov
mov
mov
aad
dec
scas
idiv
and
es
mov
push
and
arpl
andb
fistl
fs
shrb
sbb
sub
aad
mov
push
pop
icebp
stos
es
push
xchg
fstpt
js
xchg
add
mov
dec
shll
repz
and
andb
inc
mov
xor
daa
or
sub
sbb
les
in
int3
lret
sti
push
das
scas
int3
cmp
insl
xchg
imul
xchg
pop
xchg
and
std
pop
nop
mov
ss
jecxz
lods
inc
push
shlb
mov
insb
mov
adc
sti
mov
xor
pop
jbe
cltd
cmpsl
mov
orps
inc
les
dec
push
dec
in
fxch
cmpsl
jne
adc
push
jle
fs
push
call
xor
repz
jecxz,pn
test
inc
inc
mov
lcall
jnp
or
inc
xchg
jbe
adc
cmp
add
mov
cmp
push
shlb
jmp
push
cmp
movsb
mov
cmpsl
ret
push
push
xchg
mov
xchg
dec
enter
iret
imul
mov
loop
std
pop
sub
and
mov
lret
imul
cs
fbld
cwtl
mull
jo
daa
pop
repz
fcomip
fcmove
xchg
jo
cmpsl
rorl
sub
xor
cli
mov
daa
jne
fisubl
in
shl
out
jmp
cmp
or
sub
xor
int
push
ljmp
ret
dec
repnz
add
cmpxchg
sbb
pop
in
loopne
ret
outsl
xor
jle
inc
sbb
pop
cmp
cmp
enter
es
jg
in
pop
add
mov
mov
xor
testl
fbstp
sarl
push
popa
mov
popa
sbb
xor
sahf
mov
jg
aaa
mov
ljmp
cmp
les
repnz
pop
not
ljmp
das
cmp
fistpll
or
sub
push
mov
rolb
xchg
lods
dec
mov
cli
inc
mov
je
sbb
in
negb
repz
push
sbb
mov
sbb
out
shll
and
daa
cltd
addr16
dec
inc
jnp
movsl
cmpsl
fldl
enter
mov
and
adc
jb
mov
dec
test
or
sub
add
cwtl
push
adc
and
mov
pop
into
imul
xchg
mov
hlt
push
lea
mov
icebp
fistps
jl
lahf
out
out
or
scas
mov
adc
jo
ss
shrl
mov
cli
cwtl
push
xchg
lock
aad
push
jmp
outsb
adc
iret
jp
push
mov
mov
pop
or
jns
mov
inc
jle
mov
pop
inc
popf
enter
loopne
dec
xchg
pop
mov
mov
pop
mov
outsb
lds
iret
std
mov
test
es
add
fisubrs
mov
into
call
arpl
enter
negl
lcall
es
notb
addr16
mov
add
inc
mov
in
out
push
push
cwtl
mov
cs
push
orb
scas
pop
jg
cmp
pop
and
push
je
enter
sub
cmp
cmp
lock
mov
gs
or
and
jne,pn
or
mov
xor
inc
bound
mov
xchg
es
test
mov
in
mov
rol
jne
xor
pop
loopne
incb
xchg
pushf
lahf
scas
scas
adc
add
stc
cmp
ret
jle
cmpsb
cli
loop
jbe
iret
into
std
shll
sahf
inc
int3
xor
dec
push
int
and
xchg
fucomi
shlb
mov
test
into
ds
lahf
mov
shll
mov
out
insb
aas
sub
inc
ja
ds
mov
popa
cmp
mov
lahf
push
clc
push
xchg
insl
shl
jl
push
push
mov
fwait
dec
adc
cmp
mov
lock
loope
sub
lock
inc
dec
mov
add
hlt
xchg
jg
in
jmp
das
in
lret
daa
out
mov
inc
out
sub
aas
add
leave
mov
clc
mov
sub
and
pop
inc
add
mov
push
lcall
mov
pop
and
mov
popa
fs
mov
ss
testl
stos
xchg
das
pop
arpl
mov
xor
icebp
stos
jle
lahf
mov
adc
out
and
repnz
xchg
jmp
mov
push
mov
dec
fsub
pop
data16
push
jae
out
repnz
inc
xchg
add
into
and
pop
repnz
sti
xor
sbb
jle
xchg
aas
or
add
fwait
add
mov
sub
gs
lcall
xor
add
adc
cmp
xor
sarb
jae
mov
mov
mov
imul
dec
sub
pop
cmp
xchg
dec
and
adcb
outsl
cmp
daa
jecxz
mov
es
icebp
shlb
decl
aaa
push
clc
pop
xor
mov
in
mov
jae
push
dec
mov
jecxz
xchg
xor
jg
pop
mov
testl
dec
inc
cmp
aas
inc
js
adcl
test
lahf
jne
mov
aam
sbb
inc
outsb
xor
ja
fmul
sbb
sub
cmp
mov
inc
outsb
aaa
xchg
inc
cmpsl
mov
aas
sub
dec
aas
vmptrst
ficoms
int3
jge
or
hlt
add
aas
pop
lock
popa
and
cmp
xor
mov
inc
shrb
call
enter
mov
repnz
or
jp
rcll
idiv
adc
adc
sbb
pop
jecxz
and
xor
sahf
pop
ret
xchg
xor
pop
dec
test
inc
insl
xchg
aam
test
fiaddl
pop
jp
enter
pop
fiaddl
daa
lock
out
sbb
sub
arpl
iretw
dec
jecxz
inc
aas
add
push
std
repnz
movsl
cmpsl
lahf
dec
jnp
inc
sbb
iret
ljmp
push
popf
jae
mov
pop
in
andl
push
dec
pop
sbb
mov
or
es
jno
dec
testb
rolb
jg
push
rolb
push
jg
mov
mov
xchg
push
mov
xchg
push
mov
xchg
sub
jno
adc
jno
enter
push
ja
imul
xor
cltd
outsl
fstl
lret
stos
mov
iret
cli
fsts
stos
fs
daa
pop
and
mov
shl
dec
dec
and
push
idiv
mov
adc
or
ret
call
shl
addr16
nop
outsl
sub
loop
out
jo
popf
xchg
stos
mov
cmc
dec
inc
int3
mov
jp
cmp
into
stc
rcrb
xor
rorl
imul
iret
fisubrl
sub
xor
and
out
rcrl
in
fistps
sbb
out
std
fsubs
movsb
adc
les
sbb
dec
jge
dec
xlat
ss
pop
cmp
fwait
dec
lret
imul
jle
mov
lods
std
ljmp
jo
jb
jo
sub
jae
jge
sub
daa
sub
lock
mov
icebp
push
rcrl
sub
fildl
pop
sbb
mov
ss
sub
dec
xor
xchg
cmp
xchg
cmpsl
adcl
int
jecxz
movl
push
or
mov
pop
mov
pop
arpl
outsl
xorb
test
fisttps
scas
lock
xchg
jb
jnp
dec
jmp
push
push
xchg
push
pop
inc
and
dec
fxch
pop
sub
clc
imul
mov
hlt
pop
fmull
lea
lret
lods
js
add
stos
or
or
inc
pop
mov
lahf
jo
sub
int3
lcall
out
cmp
in
adc
fnstcw
into
and
test
aas
xchg
pand
stos
repz
nop
mov
mov
inc
pop
inc
ss
push
je
inc
xor
gs
mov
les
cmp
int
call
and
jo
xchg
ret
iret
fsubl
jno
inc
fs
out
loope
fisubrs
shrd
cmpsl
pop
iret
adc
adc
lds
mov
xor
sub
sbb
mov
add
dec
pop
jle
jo
shlb
mov
imul
leave
mov
inc
cli
and
fs
inc
push
xor
cli
and
adc
add
cmp
data16
and
jmp
mov
jmp
int3
mov
add
push
dec
rclb
arpl
fdiv
pop
clc
push
nop
inc
mov
push
mov
mov
dec
sub
outsl
and
sub
inc
push
out
cmp
daa
adc
cmp
icebp
sub
testb
jg
repz
or
xchg
mov
std
hlt
xchg
sarb
mov
lea
dec
fs
idivl
or
mov
sahf
xor
in
or
pop
push
adc
lds
out
mov
inc
pop
or
fucomip
mov
and
pop
and
xchg
in
xor
movl
fwait
xor
jecxz,pt
inc
out
mov
shll
inc
les
dec
push
mov
inc
test
push
insb
out
mov
outsl
mov
dec
stos
inc
cmp
add
das
jb
les
rorb
push
cmp
xlat
movntq
out
ja
add
jmp
cmc
scas
mov
xchg
adc
cmpb
test
pop
dec
and
mov
jne
xor
lds
inc
lret
lret
pop
jae
xchg
adc
testb
fstps
pop
lods
xchg
cmp
jo
mov
out
mov
fildll
lock
cmp
les
xchg
jb
xor
adc
ret
xchg
jle
pop
jae
ljmp
inc
pusha
xchg
psubw
rcll
push
jae
mov
ss
dec
fdivrs
test
pusha
add
iret
xchg
roll
notl
sbb
js
pop
inc
mov
cmp
loope
in
inc
mov
out
lret
insl
std
push
stos
ret
pop
test
fcoms
jg
mov
push
lret
ret
adc
sti
push
pop
push
inc
xchg
insb
repz
dec
mov
xor
mov
test
or
sub
jb
fmull
fisubrl
inc
mov
adc
or
test
push
dec
jno
mov
inc
adc
push
sub
xlat
pop
mov
jo
mov
repnz
pop
inc
fmull
mov
orb
adc
xchg
sarl
mov
pop
cmp
adc
mov
popfw
in
jg
push
pop
mov
sub
dec
in
pop
test
movsl
mov
adc
mov
jnp
stc
pop
or
adc
lret
aad
iret
dec
out
mov
sub
lods
aas
pop
and
xchg
sti
mov
iret
xchg
shll
push
aaa
lahf
cs
inc
lret
enter
mov
pop
dec
xchg
mov
push
sahf
or
mov
push
test
inc
xchg
in
clc
pop
pop
sbb
mov
mov
ss
insb
xchg
push
ffree
pop
int
xchg
fistps
bswap
dec
cltd
pop
test
loopne
mov
loop
push
out
mov
mov
int
pop
out
lods
aaa
jns
or
popa
cltd
lret
push
outsl
add
pop
push
popa
leave
lahf
cwtl
aaa
nop
sub
jg
mov
shll
cmp
and
mov
xor
fs
arpl
and
pop
mov
or
xor
pop
adc
nop
scas
and
cwtl
aam
dec
dec
ja
jle
enter
into
cmp
test
fcomip
or
call
rcl
arpl
xchg
adcb
mov
test
cmp
mov
lcall
jbe
mov
inc
fcoms
stc
daa
add
push
mov
xchg
push
or
or
and
mov
or
test
in
sub
or
jg
xor
lret
cmpsl
sarb
out
fidivl
sbb
insl
negb
xchg
jmp
ret
add
jecxz
adc
int3
sti
loopne
xchg
add
arpl
and
enter
inc
mov
sub
outsb
adc
cld
mov
jne
push
aam
dec
fists
pop
adc
cmpl
mov
test
jle
sti
dec
push
lret
stc
xchg
push
jp
jp
sti
cmp
repnz
inc
inc
mov
fld
adc
clc
xor
sbb
ja
mov
outsb
pop
cmp
ret
into
aas
aam
jo
pop
push
scas
outsl
sbb
imul
push
loope
outsb
pop
and
in
sar
lods
jnp
mov
add
inc
and
ja
inc
mov
sub
ds
dec
mov
into
fistpll
testb
mov
cwtl
dec
xchg
dec
cmp
xchg
or
xchg
mov
cmp
mov
cmc
lret
push
cmc
daa
outsl
imul
gs
xor
arpl
out
jae
push
cs
pop
scas
inc
repz
mov
jnp
in
jnp
jle
pop
jge
iret
pop
xchg
pop
jae
pop
daa
xor
test
jmp
rcpps
les
fidivl
mov
mov
mov
ja
scas
mov
fmuls
xchg
inc
pop
adc
jp
repz
testl
dec
inc
and
bound
pusha
jl
mov
lds
jns
in
or
or
xor
loopne
push
or
shll
clc
push
xor
insb
rcll
inc
push
and
xor
and
adc
pop
jmp
cs
dec
pop
mov
sti
or
xchg
cld
insb
out
sti
aad
xchg
push
cld
adcb
push
in
mov
and
xor
into
movsb
mov
inc
ljmp
inc
adc
inc
xor
inc
aas
jno
mov
out
pop
mov
xor
sbb
jg
cwtl
adc
pushf
adc
mov
jno
scas
or
repz
cmpsb
and
ret
mov
mov
cmp
jns
mov
ret
enter
sub
pop
test
pop
fldcw
cmp
repnz
cmp
out
ljmp
push
jg
loop,pt
scas
lods
or
popf
cmpsl
fstpt
pop
sbb
xchg
pop
shl
add
into
ret
sub
xchg
pusha
or
js
cmp
or
dec
cmp
fcmove
mov
inc
scas
lret
pusha
sti
and
es
icebp
sbb
das
sbb
push
das
mov
or
fildll
pop
aas
mov
mov
imul
pop
fwait
pop
sbb
mov
ret
or
mov
rcl
push
lahf
outsl
jecxz
sti
and
pop
fiadds
lea
dec
xor
insb
std
outsb
lods
inc
jge
cmp
mov
bound
sbb
ja,pn
xchg
add
jb
cmp
sub
mov
cmp
adc
pop
dec
pop
pop
ss
mov
or
cmc
push
repnz
cmpsb
jle
xlat
xchg
aas
jg
lahf
fisubrl
data16
outsb
out
xor
insl
mov
or
sub
js
cltd
daa
call
mov
inc
les
shl
sub
iret
ja
fimuls
mov
xchg
repz
aaa
add
stos
inc
ret
xchg
xor
mov
mov
iret
xchg
imul
scas
jl
clc
adcb
popa
lahf
aas
sbb
dec
imul
jns
mov
sahf
movsb
xor
sarb
int3
mov
out
cltd
aas
stos
inc
rol
sbb
cltd
lods
mov
jp
cmp
xor
mov
lods
sbb
sbb
dec
outsl
adc
mov
mov
psubsw
pop
arpl
int
bnd
fwait
out
inc
daa
inc
and
pop
scas
addl
inc
pop
mov
adc
pop
repnz
push
out
aam
fmull
pushf
nop
or
mov
sbb
movnti
out
pop
ja
lret
xor
test
in
test
dec
mov
lret
xlat
lds
icebp
and
mov
pop
or
push
pop
xlat
fldl
das
sbb
out
dec
and
sub
xchg
mov
aaa
cli
fwait
pop
into
rcll
adc
sub
orl
mov
sub
mov
sub
xor
ljmp
imul
mov
fcompl
xchg
movsb
clc
sub
aaa
adc
mov
je
test
mov
inc
lods
aas
or
fdivrl
iret
push
test
sahf
or
xor
fsubrl
jg
xchg
add
icebp
push
bound
pop
movsl
cmp
mov
xchg
negb
scas
lret
cwtl
xchg
icebp
sbb
dec
pop
pop
xchg
insl
mov
xchg
mov
xchg
sahf
xor
daa
mov
sub
lods
xor
enter
cs
roll
adc
sub
push
mov
or
mov
data16
jb
cmpsb
adc
xchg
adc
xchg
ss
mov
dec
pop
add
push
push
ja
movl
fs
aad
jbe
addr16
mov
fnsave
loopne
aaa
push
mov
lahf
mov
cmc
mov
cmp
sub
dec
add
fcomip
idivb
add
mov
sti
lret
fwait
sub
jmp
push
fists
push
in
movsb
xchg
insl
pop
flds
test
mov
jbe
pop
sbb
jecxz
and
out
stos
adc
fwait
data16
cmp
sbb
push
push
fiaddl
xor
push
xor
mov
imul
pop
jnp
idivl
mov
cmpsb
adcb
outsl
push
mov
cld
repnz
mov
or
lock
push
nop
pusha
push
xchg
ret
inc
add
shl
or
inc
sti
mov
repz
inc
pop
fldl
xchg
mov
out
inc
sbb
fs
xchg
mov
out
sub
addr16
inc
inc
into
push
loopne
cld
mov
stc
push
in
out
jae
outsb
sbb
cs
pop
mov
mov
pop
shlb
xchg
push
inc
xchg
mov
push
icebp
sarl
sbb
lret
mov
imul
out
push
pop
movb
stos
sarl
scas
jb
push
cs
cmpsl
sub
dec
loop
adc
test
add
mov
ret
push
lret
add
push
xlat
lahf
insb
loope
or
ljmp
pop
and
fsubr
icebp
sub
add
mov
pop
outsb
push
outsl
cmp
jle
adc
jo
outsb
inc
ds
push
push
dec
dec
hlt
xchg
sti
inc
leave
sub
xchg
je
jbe
pop
dec
mov
jmp
pop
xchg
mov
inc
ja
dec
hlt
jg
stos
mov
pminub
out
xchg
push
or
dec
dec
inc
inc
sbb
pop
ret
or
cmp
mov
test
into
sub
pushf
sbb
imul
test
jbe
fsubrs
fwait
pop
ret
push
in
aad
imulb
pop
sahf
mov
lods
out
pop
push
mov
push
lea
sub
repz
pop
lea
pop
adc
inc
inc
hlt
fisttpll
xchg
dec
push
popf
mov
repz
ss
xlat
cmc
mov
sbb
aas
mov
test
repz
or
push
lds
jnp
jns
jmp
ja
sti
inc
nop
mov
sti
lret
mov
push
xchg
mov
xchg
cmp
xor
mov
dec
jns
imul
aas
adc
imul
call
add
sbb
daa
cmp
div
inc
pop
sbb
subb
rcr
lret
cmpsb
addr16
cmp
pop
roll
fdivl
adc
mov
dec
popf
sub
sub
jo
imul
subb
add
pop
mov
inc
test
das
int3
das
pop
sub
xlat
aam
push
push
sahf
adc
or
or
push
js
pusha
xor
mov
pop
rcr
mov
out
jg
rclb
stos
and
les
jns
add
pop
inc
pop
dec
xchg
and
cmpsb
fs
dec
stos
lods
xor
push
adc
jg
lret
test
or
aaa
adc
adcl
adc
mov
pop
pop
fdivrl
push
inc
add
mov
pop
dec
mov
lahf
cmpsb
in
add
out
scas
mov
aaa
xor
push
jb
rolb
mov
pop
mov
mov
mov
jne
mov
mov
hlt
and
ds
xchg
xor
jno
ljmp
and
pop
xlat
and
iret
enter
cwtl
arpl
ljmp
movl
scas
sbb
pop
movsb
jo
or
push
sbb
push
xchg
pop
cltd
inc
sbb
mov
stos
pop
add
dec
sub
and
arpl
imul
dec
sbb
jno
mov
fdivrs
ret
push
mov
daa
pop
push
inc
xchg
dec
sub
pop
add
xlat
fcomps
or
into
fisttpll
mov
inc
shrl
subb
sub
adc
mov
mov
mov
jg
pop
fbstp
sub
mov
mov
rep
sub
lahf
out
add
notl
scas
adc
clc
test
cld
out
mov
pop
jns
and
adc
xchg
js
pop
and
mov
sub
jnp
mov
and
xchg
mov
mov
nop
sub
mov
loope
je
mov
cmp
push
push
mov
mov
pop
int3
push
ja
imul
dec
push
cmp
cld
ljmp
addb
xchg
les
xchg
lds
dec
adc
es
clc
inc
dec
in
popf
cwtl
push
fidivrl
xchg
lcall
xchg
in
bound
ljmp
jb
addr16
xchg
mov
xor
ljmp
and
cld
stos
fwait
xor
out
les
pop
push
cmp
mov
jno
mov
mov
xor
mov
mov
arpl
or
ljmp
cld
inc
sub
lret
nop
sbb
out
and
jb
fs
push
ja
cld
xor
dec
xchg
and
sub
outsl
out
lock
fisttps
jo
gs
loop
outsb
or
ds
mov
push
fcmovbe
std
lds
sbb
and
call
mov
sub
mov
shrl
vpunpcklqdq
adc
inc
shr
clc
xor
shrl
shll
mov
repnz
sbb
popf
xchg
inc
sub
inc
loopne
xorb
test
sub
sbb
aad
sbb
repnz
repnz
lret
lods
in
out
xchg
mov
in
and
jo
test
inc
lock
cli
adc
scas
mov
das
sbb
mov
xlat
mov
les
mov
xor
fidivl
pop
push
in
dec
insb
aaa
aaa
and
call
mov
push
aad
popa
inc
pop
pop
inc
out
xor
xor
loop
fildll
xlat
and
mov
repz
movsl
sub
sub
dec
mov
out
pop
shll
lcall
loope
scas
loop
loope
sbb
mov
cld
jns
jbe
jno
lea
out
mov
push
cld
js
push
pop
jecxz
fimuls
cmpsb
das
shl
testb
insb
cmp
jbe
mov
push
insb
push
cmp
mov
mov
out
popa
dec
sbb
jmp
data16
fildl
daa
jne
mulb
jae
sahf
fbld
cs
pop
lds
lods
add
jle
cmp
or
inc
outsl
or
pop
pusha
cmpb
and
inc
sub
add
and
stos
mov
xchg
aaa
xchg
inc
sub
ret
fistpll
lock
aam
mov
or
pop
jb
and
in
jp
xor
imul
std
or
test
ljmp
jmp
sti
ret
lods
jg
sub
aaa
scas
xchg
into
jecxz
fistpl
push
movsl
mov
jns
and
push
cli
ficompl
cmpb
adc
mov
aas
repnz
inc
ljmp
loope
add
in
jle
rcrb
mov
ds
fmuls
daa
or
mov
jnp
jae
jo
cmpsl
dec
inc
test
pusha
sub
push
pusha
bound
daa
insl
cmpsb
dec
insl
pmaxsw
pop
cmp
das
pusha
shrl
or
fisttpl
outsb
std
sbb
mov
xor
cmp
jle
or
sub
js
lahf
adc
and
unpcklps
test
lcall
cmpsb
stos
xor
cmp
inc
push
ljmp
and
into
je
es
pop
outsl
cmp
mov
xchg
push
add
push
lahf
sbb
mov
fwait
scas
aam
sub
inc
jo
jns
add
pop
outsl
setg
mov
dec
add
add
movsb
movsl
jb
lret
lods
cmp
inc
pop
fs
lods
sbb
aam
jge
lds
and
ret
pop
and
mov
cltd
rcrb
test
mov
daa
mov
incb
push
or
lock
addb
sub
jp
cmpsl
imul
iret
imul
cmp
repz
iret
jo
addl
inc
das
iret
mov
mov
mov
daa
cmpsl
cmpsl
mov
nop
cmpsl
add
jecxz
lret
cmp
mov
dec
imul
adc
lret
and
stos
sbb
xor
icebp
pop
mov
loopne
cld
das
mov
mov
adc
imul
sub
xor
bound
imul
cmp
out
adc
movsb
inc
andl
xchg
out
cltd
mov
pop
cmp
stos
sbb
push
nop
cmpsl
xchg
cmpsb
mov
mov
mov
jne
xchg
pminub
push
test
lds
pusha
mov
fnstenv
sub
cmp
out
fwait
push
scas
arpl
out
fdiv
js
inc
ja
pop
mov
pop
mov
or
jnp
sub
std
popa
and
mov
pop
int
dec
xchg
mov
inc
pop
imul
sub
sub
adc
sub
cmpsl
aas
call
icebp
xlat
inc
pusha
adc
mov
pop
es
daa
xchg
mov
cmpb
pop
xchg
cmp
add
add
sti
mov
nop
sbb
outsb
test
mov
pop
jno
fstl
inc
int3
pop
xor
lret
data16
push
mov
cmpsl
les
push
in
and
jnp
xor
push
adc
push
pop
lods
aas
lock
pusha
outsl
jb
frstor
adc
sub
loop
cmpsl
mov
addr16
lcall
out
das
mov
mov
psrlq
lods
mov
or
mov
xchg
push
addr16
aaa
xchg
decl
testb
fs
dec
xorl
addr16
push
outsb
out
dec
repnz
dec
fisttps
loopne
sub
data16
and
fiadds
mov
and
repnz
fs
pop
sbb
jp
cmc
outsb
push
aas
lret
les
lahf
pop
outsb
aam
hlt
mov
mov
push
shrl
dec
mov
in
loopne
out
shlb
xchg
pop
in
loop
fdivs
pop
adc
imul
cld
sub
xor
and
mov
loope
les
les
outsl
movsb
xor
mov
enter
xor
mov
cld
popf
mov
pop
mov
cmp
pop
mov
xchg
fnstenv
ficoms
jl
inc
jo
addl
mov
test
pop
add
ret
push
cld
scas
dec
lods
adc
out
xchg
jecxz
cli
lods
fwait
repnz
sbb
sbb
mov
push
or
mov
mov
lock
test
out
lahf
repz
add
jmp
jecxz
mov
push
imul
es
jmp
jmp
push
push
movsl
jmp
rcrl
xor
or
lahf
mov
arpl
dec
pop
das
outsl
adc
sti
mov
pusha
sarb
pop
arpl
inc
push
mov
pop
inc
mov
mov
aaa
xchg
cld
mov
add
and
inc
gs
cs
jo
movsb
mov
das
xchg
lods
ret
cli
clc
pop
mov
mov
or
je
sub
mov
dec
pop
adc
mov
inc
cmp
out
adc
inc
inc
push
test
mov
aas
test
cmp
add
in
out
or
push
dec
mov
hlt
push
lock
in
arpl
lret
stos
icebp
jbe
loop
push
aam
testb
data16
xchg
push
bound
mov
lds
mov
inc
push
pop
sti
decb
aas
cmpsb
mov
mov
jg
mov
jae
cmp
out
cld
leave
push
dec
pavgb
dec
ja
push
ja
and
mov
iret
xchg
lahf
arpl
clc
sub
inc
dec
xor
shl
pusha
add
push
xchg
fs
jae
push
dec
in
push
hlt
pushf
mov
mov
cmc
lcall
jbe
in
sub
mov
push
xorb
aam
pushf
repz
addr16
cmp
xchg
add
iret
sub
xchg
int3
inc
loope
xorl
sbb
mov
dec
mov
dec
fisttpl
in
push
xchg
cli
sub
or
adc
pop
fs
push
fwait
es
pop
insb
xchg
lcall
pop
push
xlat
adc
cmpsl
popf
mov
jle
daa
mov
inc
sub
loop
rol
repnz
outsb
xchg
or
jo
jb
jg
lcall
dec
outsl
and
in
daa
push
cwtl
push
out
scas
sub
aas
mov
js
mov
xorb
fwait
push
stc
ss
divb
xor
bound
enter
or
and
and
mov
je
je
cmp
shrb
jmp
pop
add
es
daa
int
cmp
jecxz
pop
pop
add
nop
ret
test
lock
repz
mov
adc
aaa
lods
rcr
pushf
fstpt
inc
push
js
xor
shll
jae
adc
pop
aaa
mov
inc
dec
fstpl
mov
xor
rclb
mov
outsb
call
cli
rclb
stos
mov
lds
mov
iret
sbb
or
cwtl
dec
lret
jns
jno
inc
cmpsl
push
out
cmp
loop
ret
pop
or
jmp
out
pop
push
and
iret
stc
cltd
cmp
adc
pop
mov
in
int3
xchg
or
sbb
clc
adc
dec
ret
or
subl
add
lock
pop
inc
adc
lcall
clc
mov
cmp
mov
lcall
dec
aam
subb
cmp
push
addr16
shrb
sub
add
ficompl
adc
sahf
inc
leave
gs
nop
push
cld
lock
push
sahf
and
push
xor
ss
dec
aaa
std
fstl
xchg
int
adc
js
setb
dec
ljmp
je,pt
cld
repz
dec
and
pop
pop
mov
jno
inc
mov
ret
push
mov
jl
mov
mov
xchg
addl
adcb
dec
dec
mov
cmp
mov
inc
lret
fisubrl
sub
or
add
rclb
adc
bound
popl
scas
fiadds
mov
test
and
inc
negl
add
lock
xchg
sbb
hlt
fwait
or
xchg
out
dec
sbb
push
mov
int
push
xchg
sti
and
dec
mov
int3
and
mov
bnd
add
xchg
ss
pop
sub
ret
mov
pop
dec
das
sbb
sbb
gs
pop
pop
inc
jae
aas
mov
or
mov
inc
out
ljmp
and
es
cmp
rcr
fucomi
inc
push
ret
xor
cmp
jae
aad
inc
add
rcl
push
push
std
mov
cmp
adc
in
rcll
lock
xor
jns
mov
add
pop
xlat
cmp
dec
mov
outsl
jb
add
mov
pop
gs
jb
push
mov
loope
lret
push
daa
lret
std
lds
stos
inc
in
fldt
sub
ljmp
sbb
mov
xor
xor
lods
pop
sub
fisttps
jg
jbe
mov
adc
mov
dec
jno
jmp
orb
stos
std
mov
std
jae
test
sbb
jbe
mov
scas
rcll
jg
or
scas
mov
cltd
ja
lods
ret
mov
sbb
sub
addr16
js
jl
push
or
jmp
out
push
lock
fsubrs
ljmp
test
xor
fwait
mov
hlt
fwait
or
mov
mov
sub
xor
cmp
or
in
mov
iret
fwait
sarb
and
xchg
ja
adcb
andl
out
pop
jecxz
xchg
lahf
addr16
rcrl
iret
xchg
push
hlt
dec
pop
orl
ret
sub
sub
cwtl
cs
pusha
popa
out
sbb
stc
xor
imul
and
lods
pusha
mov
call
xchg
inc
cmp
rcl
loop
push
fsts
push
xchg
fimuls
mov
out
rolb
adc
push
lret
test
cld
sbbb
xlat
or
sbb
out
sub
in
loop
ja
push
pop
test
mov
push
add
movsl
mov
and
add
dec
push
xchg
jl
or
dec
jg
jl
mov
mov
in
jae
pop
jecxz
aas
pop
out
stos
add
cmp
icebp
rcrb
pop
in
arpl
sysret
or
pushf
pop
xchg
cmp
loop
pop
xchg
out
lods
sti
shll
push
pop
jbe
mov
clc
mov
sbbl
sub
xchg
enter
or
popa
fbld
pusha
sbb
outsb
sub
fildl
imul
fwait
pop
pavgw
subl
jae
mov
stos
arpl
outsl
mov
xchg
daa
pop
pop
pop
mov
cmp
cmp
lcall
lahf
xchg
jmp
sub
jg
pop
push
lret
pop
pop
imull
jecxz
jne
popa
scas
arpl
cmpsl
jo
aaa
jbe
pop
add
jnp
test
dec
aad
inc
movl
and
test
lock
mov
add
or
addl
je
mov
in
pop
arpl
ljmp
cmp
push
and
sti
dec
daa
inc
fbstp
pop
pop
ficoms
adc
mov
mov
ret
lock
daa
jp
test
jbe
push
mov
addr16
add
mov
addr16
addb
out
mov
lret
pop
xchg
sub
jp
jp
xor
pop
fmuls
add
xlat
out
scas
aam
pop
jg
aaa
enter
jl
nop
pop
loopne
daa
stos
sbb
mov
jo
inc
lods
movl
shrb
sahf
lret
sbb
jmp
cmp
sbb
pusha
jecxz
mov
push
xlat
aas
clc
icebp
maxps
push
mov
lds
out
popf
pop
fcmovnb
shrb
call
fcompl
dec
mov
stos
lock
les
mov
hlt
dec
mov
inc
andl
jnp
pop
pop
push
ds
inc
out
jno
cmpsl
add
test
fwait
pop
fnstsw
in
mov
or
orl
push
dec
repnz
mov
push
jo
enter
cmp
mov
repnz
adcb
cmpl
insb
cmc
lea
subb
subl
mov
in
fcompl
in
or
stos
mov
test
sub
fiaddl
inc
ja
and
insb
sbb
add
lods
lea
sbb
out
sbb
scas
mov
adc
mov
pop
dec
cwtl
adc
jge
jne
push
ftst
mov
cmp
mov
xchg
pop
mov
lods
popa
sub
cwtl
incl
outsl
xchg
add
fs
movsl
outsl
loopne
fstpt
fwait
arpl
into
add
gs
lds
or
xchg
aad
fdivrs
pop
ret
mov
lret
mov
int
sbb
push
lahf
out
fisubrs
in
sub
stc
add
cmp
imul
dec
jge
jmp
xchg
pop
xor
sub
mov
gs
js
jp
mov
test
dec
inc
es
add
mov
mov
inc
mov
out
adc
loopne
popa
xor
jg
fcomps
jecxz
je
repz
cmpsl
jecxz
js
orl
and
sub
dec
dec
loopne
push
pop
imul
shl
fstl
cld
test
jp
xchg
sarl
pop
mov
inc
leave
pop
xchg
out
jp
ud1
insl
je
cmp
adc
xchg
gs
mov
dec
outsb
test
push
fsubr
repnz
xchg
mov
xchg
sbb
push
stos
or
sbb
inc
add
cld
xchg
and
test
idivb
hlt
sub
outsl
lret
cmpsl
decb
imul
xor
mov
cmp
loope
pusha
imul
movsb
in
sarb
push
pop
mov
push
insb
lahf
loope
icebp
shrl
add
pop
pop
jg
out
outsl
mov
xchg
outsl
add
pop
test
scas
or
cmp
cwtl
aas
sbbb
fcompl
std
add
inc
and
add
push
inc
inc
jns
mov
cmpsb
jb
testl
fisubrl
lret
rolb
pushl
sub
ret
mov
inc
push
push
cmp
push
cmp
outsl
pop
mov
jp
mov
pop
stos
rcl
pop
popa
mov
sti
rclb
and
add
mov
push
ljmp
rcrb
aas
outsb
cmp
popf
icebp
aad
cmp
jmp
sub
add
cmpsl
je
mov
xor
cli
int
dec
jnp
movsl
in
roll
or
enter
movsb
in
dec
and
add
mov
lods
lds
out
stos
fstpl
xchg
xchg
inc
push
xor
push
pop
subl
cld
call
leave
sbb
xor
std
notl
stos
int3
and
lods
jae
xchg
jle
fmul
icebp
mov
cmp
sbb
mov
sub
in
fisttps
push
call
bound
mov
jle
sub
xchg
or
pop
insb
cmp
lahf
ret
aas
cmp
fsubl
cmp
jecxz
andl
test
mov
stos
pushf
jg
add
inc
xchg
jbe
push
mov
jp
mov
lcall
int3
das
or
jae
fs
push
sub
lock
mov
into
shr
lods
loopne
call
addr16
popa
outsl
cmp
popl
sub
push
push
aam
xchg
inc
mov
or
jle
sub
fimuls
stos
adc
pusha
aaa
addr16
cmp
mov
push
repnz
xchg
cmp
fstl
mov
cli
lock
movsb
aas
add
or
clc
xor
xor
mov
dec
add
sub
inc
xchg
xchg
fbstp
mov
das
hlt
ficoml
in
dec
popf
negl
ret
sub
mov
adc
andl
sbb
addr16
cmp
hlt
aas
ret
and
stc
xor
lds
push
in
outsb
das
inc
inc
nopl
jp
call
aaa
xor
pop
jg
xor
pusha
cli
push
insl
sti
sub
mov
mov
mov
cmpl
iret
and
repz
loop
lods
push
adc
dec
sbb
inc
mov
movsl
aaa
icebp
rcrl
mov
dec
sbb
jp
ja
jno
add
int3
sub
adc
popf
xchg
int3
std
xor
int3
es
imul
lea
addr16
mov
sub
or
cmpsb
popf
aas
sahf
mov
fcmovnu
pop
cmp
mov
xchg
out
or
cli
fwait
dec
divb
fstl
lods
inc
sub
ds
xchg
adc
scas
sti
mov
jo
xor
and
pop
aad
pop
push
cmp
pop
repnz
push
jb
dec
daa
daa
push
test
pop
add
cltd
dec
cli
cmp
lcall
icebp
xchg
sahf
push
cmpb
imul
scas
mov
mull
jl
cmpsb
and
fwait
mov
cmp
aas
xor
cltd
movq
call
dec
push
lret
cs
adc
sub
fidivrl
sub
test
push
push
addr16
or
lods
out
inc
jmp
add
movsb
xchg
adc
and
xchg
push
pushl
outsl
mov
ljmp
jecxz
ret
add
leave
push
scas
sub
inc
add
mov
mov
insb
xor
sti
ljmp
repnz
fwait
int3
sbb
sbb
iret
push
mov
cmp
outsb
rorb
add
push
loope
push
push
mov
fs
sub
rcl
imul
bound
nop
xchg
xchg
xchg
inc
dec
add
lret
inc
sub
pop
push
jg
in
adc
das
in
lahf
ror
iret
xchg
outsl
cli
out
pop
xchg
lods
and
dec
xchg
xlat
int
call
imul
pop
pop
stc
leave
sbb
pminub
mov
or
hlt
mov
jecxz
int
inc
mov
mov
cld
mov
imul
mov
pop
xchg
sbb
add
sbb
mov
in
sub
xchg
das
fsub
xlat
add
and
enter
test
sub
pop
sahf
nop
add
outsl
inc
jae
mov
lret
lock
inc
mov
or
push
mov
push
push
inc
cwtl
dec
mov
xchg
pop
fdiv
mov
pusha
cmpb
or
jg
push
shl
aad
scas
fstpt
daa
pop
xor
repnz
leave
cmpsb
dec
add
sub
gs
pushf
dec
mov
xchg
jae
and
out
sub
xchg
sub
xchg
repz
mov
mov
mov
mov
cli
mov
fcmovnb
cmp
jae
pusha
lods
arpl
mov
or
cli
jmp
mov
and
scas
sbb
or
push
pop
es
loop
sbb
mov
into
hlt
mov
cmp
outsb
push
pop
xchg
add
and
popf
scas
add
mull
roll
or
fstp
mov
pushf
notl
loope
mov
arpl
push
fwait
mov
add
popf
btc
rcrb
sub
aaa
mov
jo
push
test
add
out
inc
add
lock
ss
into
mov
cmp
cmp
outsb
js
cs
cld
repz
enter
fchs
enter
mov
push
pop
dec
push
roll
fcompl
or
jne
and
sahf
push
in
lods
or
jle
sarb
dec
aam
dec
mov
sbb
xchg
mov
scas
popa
jae
jle
cmpsl
fwait
or
dec
or
mov
stos
mov
adc
sub
sti
xor
adc
int
jnp
xchg
mov
xor
test
into
or
add
jb
jg
jg
mov
mov
add
hlt
inc
mov
adc
out
in
push
mov
xchg
loope
sub
dec
aam
stos
popa
xchg
mov
rol
pop
sub
dec
mov
push
fisttpl
imul
popa
sbb
les
clc
in
das
fcmovnbe
pop
out
jne
dec
xor
fbstp
mov
fdiv
mov
enter
pop
xor
test
xor
pop
idivb
lods
push
push
cld
stos
jno
dec
es
outsb
sub
ljmp
or
push
outsb
sbb
bound
adc
jnp
mov
data16
jbe
std
cs
lods
mov
outsl
and
movsb
inc
cmc
mov
jmp
adc
jno
dec
sahf
pushf
mov
sub
mov
xchg
inc
and
xchg
jb
mov
cwtl
out
mov
mull
or
xlat
fimull
mov
pop
mov
jl
mov
inc
test
imul
call
mov
and
cmp
mov
out
pushf
addr16
in
add
mov
lds
ret
adc
mov
ret
and
mov
out
orb
cmp
cmp
cmp
shlb
push
repz
pop
and
sti
and
clc
mov
inc
mov
and
lahf
cwtl
pop
mov
insb
fcmovbe
test
mov
shl
push
dec
add
pop
out
pop
dec
mov
push
fisubrs
jns
pusha
pcmpeqb
les
and
xlat
cmp
fdivrl
je
lret
mov
add
ret
cwtl
scas
xlat
sub
xchg
test
mov
jge
subb
add
or
icebp
hlt
xchg
loop
ja
in
scas
adc
xchg
loop
shll
push
cmovnp
jnp
cmc
dec
sub
out
xor
fimull
jne
outsl
jns
push
inc
adc
loopne
cmp
adc
xchg
dec
sub
jbe
cmp
out
adc
dec
pop
cmp
jo
cmp
mov
xchg
mov
scas
pop
mov
cmp
add
iret
xor
jae
sub
push
movsl
sarb
inc
pushf
jnp
out
mov
cmp
jp
pushf
enter
inc
pop
dec
add
adc
or
rcrl
fisubrs
add
xlat
xchg
pusha
ret
mov
push
daa
cmp
fnstcw
int3
dec
scas
mov
cmpsl
inc
stc
and
sbb
insl
jp
cmp
in
scas
fwait
push
lahf
adc
out
lret
add
sub
or
sub
xchg
xchg
into
loop
push
push
mov
push
test
dec
or
ret
ja
push
push
inc
dec
aaa
xorb
flds
cltd
aaa
loope
pop
pop
jae
push
and
loopne
fmull
add
testb
mov
iret
loope
dec
loop
dec
ret
fld
sbb
movsl
xorl
sub
add
flds
cmc
sub
xchg
mov
bound
cli
cmp
outsl
imul
or
xchg
and
in
xor
xor
sbb
incb
cmpb
mov
dec
out
xor
cmpsb
pop
ljmp
add
insb
pop
sub
dec
in
or
mov
mov
arpl
xor
jne
cmpsl
xchg
mov
js
fsub
cmp
dec
pop
jl
sbb
shl
arpl
adcb
sar
xlat
mov
inc
ret
sbb
arpl
jbe
push
cmc
int3
in
push
or
adc
es
adc
shrl
fistpl
lahf
jns
int3
xchg
addr16
ja
mov
xor
inc
xor
add
xor
lahf
adc
mov
ret
dec
sbb
push
mov
or
in
repz
iret
sub
mov
add
cld
push
and
sbb
sbb
cmpl
popa
mov
jge
mov
inc
xor
cwtl
outsl
imul
lcall
jg
mov
pop
dec
jge
out
shlb
sbb
xchg
addl
mov
js
pop
outsb
add
test
clc
jg
adc
je
xlat
data16
out
cmp
and
scas
jb
mov
out
scas
mov
cmpsl
in
inc
mov
lret
pop
mov
sbbl
mov
sbb
fisttpll
pminsw
inc
enter
xor
pushf
push
dec
jle
orl
out
or
divb
dec
jecxz
mov
add
adc
dec
stos
pop
mov
js
int3
jns
lret
testb
mov
xor
imulb
out
lcall
push
orb
push
dec
dec
pop
lea
daa
not
inc
test
lahf
aas
push
or
jecxz
push
push
fildl
add
outsb
mov
enter
pop
mov
cmc
jo
push
push
into
scas
int
push
add
jmp
ret
xor
sbb
push
sbb
cmp
sub
insl
aad
adc
sub
jmp
cmp
mov
lret
fildll
ja
jne
jbe
mov
shrb
out
jae
mov
and
pop
imul
jle
and
jb
or
add
add
sub
orl
adc
loopne
xchg
push
jecxz
cwtl
dec
mov
jns
xor
enter
jmp
or
add
push
jl
mov
or
or
mov
imull
jnp
pop
icebp
sub
fcmovnb
clc
popf
ficoml
bound
filds
fildl
lret
xchg
push
push
arpl
xchg
mov
jp
mov
cmpsb
jle
mov
outsl
inc
push
mov
xchg
sbb
loopne
lret
mov
fstpl
dec
add
pop
movsb
push
loope
sti
or
pop
nop
mov
jg
cli
cmp
pop
cmp
mov
icebp
std
xchg
clc
inc
xor
pop
sbb
xchg
cwtl
es
bound
lea
movsl
movsb
mov
add
add
aad
int3
sarl
dec
lods
outsl
pop
inc
ja
adc
int3
push
jmp
xor
cltd
lahf
mov
mov
ficompl
xor
sahf
std
sbb
pop
scas
pop
gs
sbb
mov
and
mov
jb
ja
pop
dec
inc
mov
and
sub
xor
lock
gs
jge
mov
enter
jae
loope
sub
cmp
and
fdiv
loope
sub
movsb
add
ffree
mov
push
or
ret
out
data16
lahf
jecxz,pn
lea
in
stos
cmp
cmpxchg
xchg
sbb
mov
mov
or
adc
mov
enter
ja
iret
ss
adc
es
jae
or
pop
push
pop
dec
or
inc
shl
test
nop
movsl
inc
xor
les
negb
dec
xor
xchg
out
jae
adc
or
xchg
outsb
fst
cld
fucomp
lods
aaa
cs
cs
pusha
fs
jae
mov
mov
icebp
fildll
jp
pslld
push
mov
mov
hlt
aas
mov
daa
loope
xor
or
sbb
inc
adcl
mov
add
adc
ret
out
push
xchg
pushf
adc
xchg
orl
mov
lcall
mov
jne
and
cmc
jb
aad
push
fidivl
mov
or
mov
mov
insb
and
movsl
mov
xor
divl
cli
test
mov
icebp
inc
aam
xlat
adc
in
and
nop
mov
xlat
sub
add
jo
dec
cmp
jo
scas
or
repnz
lcall
sbb
and
and
inc
push
jl
push
imul
xlat
push
add
add
lahf
dec
pusha
dec
dec
addr16
addl
mov
mov
icebp
inc
aam
popf
xor
jne
imul
sub
xchg
outsb
enter
out
insl
cmp
pop
negl
inc
cmpsl
mov
jmp
subl
mov
cmpsl
dec
insl
pushl
in
mov
fisttpl
add
mov
sbb
xor
out
outsl
and
in
lret
les
repnz
les
mov
and
out
rorb
cmp
out
cmp
jbe
fsub
insl
sbb
cmc
and
jae
fldcw
dec
jo
mov
pop
push
into
scas
mov
mov
push
push
mov
movb
lahf
mov
xchg
dec
aad
scas
out
int3
aaa
orb
psubusw
je
sysexit
dec
pop
or
push
push
mov
xor
ficoml
or
inc
std
fwait
dec
movsl
push
std
mov
dec
push
add
inc
jle
mov
mov
xchg
inc
push
cs
lds
es
jg
pop
lock
mov
ret
push
pop
out
sub
pop
ja
hlt
mov
sub
jae
loopne
lahf
sbb
or
js
or
pop
sti
mov
push
inc
pop
sub
mov
cmpsl
jo
push
xor
inc
ret
fdiv
fiadds
pop
sub
mov
lock
and
repz
rorl
xchg
sbb
cmc
outsl
cmp
bound
shlb
pusha
cltd
xchg
divl
cmp
cld
mov
in
push
call
xlat
cmp
xor
and
cmpsl
xchg
mov
xor
jg
push
stos
pop
sub
cmpsl
sbb
mov
imul
fidivrl
aaa
xchg
dec
and
inc
xlat
dec
mov
cmpsb
pop
ljmp
xor
xor
sub
repz
jmp
lahf
push
pop
das
jge
outsl
outsl
in
inc
hlt
fwait
cmp
aad
mov
pop
jne
cmp
and
xor
cmp
pop
sti
clc
cmp
sti
das
out
rorl
and
xor
scas
cmpsl
sub
hlt
iret
mov
enter
inc
pop
sahf
mov
in
test
push
push
pop
add
dec
bound
les
pop
test
data16
mov
add
lds
roll
ret
pop
push
in
notb
jmp
xchg
iret
xchg
cmp
and
movb
stos
inc
push
ret
imul
aad
test
mov
xlat
pop
out
sub
scas
mov
push
gs
insl
mov
jge
lods
bound
or
and
and
lcall
cmp
es
lret
xor
gs
test
aam
adc
cmc
jnp
aam
or
into
jp
notl
imulb
mov
mov
xor
ffreep
aas
int
cmp
sbb
je
mov
pop
inc
mov
sub
out
push
into
mov
xor
ja
icebp
pusha
xor
loop
cltd
leave
aad
cmovne
mov
pop
jp
mov
and
lea
iret
bound
outsb
js
xchg
cli
xor
cld
addb
ja
stc
mov
int
or
mov
je
into
and
enter
cld
ja
decb
xchg
shl
out
sub
out
pop
sub
in
in
dec
ret
divb
jae
arpl
enter
jl
test
addb
xor
lcall
adcb
dec
cmp
into
aam
pop
xor
jo
fcmove
sub
shufps
insb
cmp
pop
and
pusha
cmp
outsl
popf
pop
call
inc
push
xchg
sti
in
aaa
lahf
stos
scas
xchg
lea
xchg
arpl
imul
pop
xchg
push
or
dec
aas
scas
inc
lret
sub
lock
and
inc
pop
insl
adc
xor
shrl
sbbb
popa
aaa
aaa
mov
mov
stos
and
iret
sbb
push
mov
adc
cmpl
and
xchg
cmp
xlat
and
lods
dec
nop
mov
fwait
shlb
fcomps
int3
mov
scas
out
test
outsl
sub
bound
iret
arpl
sbb
pop
cmp
jg
inc
cld
fwait
stos
xor
and
notl
inc
mov
xor
pop
or
adc
and
add
xlat
mov
pop
inc
push
ja
in
mov
lret
xor
jb
aam
jb
adc
xlat
jle
mov
pop
push
cwtl
jne
js
sub
jae
adc
sub
lret
inc
leave
xchg
sub
sub
xchg
and
lods
cmpsl
lods
cmpsl
aad
lods
jns
fbstp
mov
adcb
out
mull
icebp
inc
push
out
aaa
pop
js
adc
add
xchg
lods
xor
lock
aam
mov
sti
inc
cmp
cltd
mov
mov
scas
jecxz
test
xor
inc
aam
pop
inc
mov
daa
je
inc
cld
rorb
mov
dec
out
cmpsb
mov
mov
fidivl
sub
lds
pop
xor
cmpsb
stos
mov
lcall
gs
daa
push
out
lock
jns
fsubrl
sahf
in
push
mov
mov
pusha
std
dec
adc
leave
inc
push
stos
cwtl
int3
pop
mov
pusha
push
sub
ja
jge
dec
jp
mov
sbb
mov
pop
adc
enter
jnp
in
xlat
or
cmp
daa
fstpt
aaa
outsl
inc
sub
jg
mov
ljmp
shlb
and
dec
popa
lahf
add
addr16
repz
mov
xchg
das
mul
or
int
stos
push
sbb
jno
dec
js
enter
repz
das
in
xchg
imul
or
ret
jb
scas
mov
stos
loopne
push
and
ret
jb
xor
loop
outsb
fs
push
adc
lahf
inc
add
mov
arpl
xor
imul
jne
das
ret
cmp
and
out
adc
ror
or
jg
addr16
jp
das
pop
jns
or
addb
lret
jno
icebp
add
mov
or
or
push
cld
xlat
je
adc
out
fcomps
inc
jmp
lods
repz
int
mov
mov
pusha
dec
push
stc
jne
ss
je
lods
inc
mov
ja
cld
pop
dec
and
scas
jge
push
aaa
adc
loope
cmc
mov
pop
lds
or
inc
sbb
xchg
inc
call
test
loop
push
push
fsubr
data16
repnz
push
dec
jbe
addr16
in
push
push
outsb
and
in
ja
sub
lret
push
test
inc
arpl
adc
inc
in
mov
lahf
mov
std
insl
daa
cld
mov
or
jecxz
fcoms
mov
je
and
iret
scas
mov
mov
pop
push
ret
push
inc
xor
mov
or
adc
mov
sbb
xor
sti
add
popa
dec
cmp
mov
in
sub
mov
shll
fcomps
mov
frstor
sub
mov
das
out
add
jge
xchg
xchg
bound
and
mov
rorb
ret
add
orb
xchg
pop
xchg
mov
int3
les
mov
and
push
jns
aas
or
test
daa
negb
into
test
sbb
rolb
aas
adc
and
pop
sub
pop
mov
pop
ja
fidivl
xor
xchg
jg
xchg
aaa
data16
je
sub
rcrb
mov
sbb
lock
ljmp
xchg
adc
add
jl
gs
fidivrs
or
icebp
outsl
jg
sub
xchg
aam
jno
lcall
rorb
sbb
inc
adcb
cmpsb
es
cli
sbb
xor
enter
xor
pusha
es
rcr
jl
scas
pop
sub
mov
push
ret
in
scas
push
sub
nop
je
jno
js
inc
fsubrs
cmpsb
fwait
insb
shlb
popa
push
xchg
notb
jl
jg
fildl
xor
movb
xchg
push
xchg
xor
popl
ret
mov
lret
ret
inc
push
adc
push
jo
mov
inc
pop
push
in
lods
xorb
push
jl
mov
inc
lock
pop
mov
jnp
jo
pcmpeqd
rolb
rcrb
fsubl
leave
or
stos
dec
nop
cmp
mov
mov
clc
sahf
and
test
xor
cmp
popa
jne
push
shl
inc
sarb
decb
lcall
test
lods
dec
xor
int3
and
scas
rolb
in
mov
xlat
push
jle
es
mov
into
add
dec
shrb
adc
repnz
cmp
pop
mov
ja
and
loop
popf
lret
in
add
nop
adc
pop
seta
xor
shlb
fmull
push
rorl
lods
mov
mov
sbbl
mov
push
icebp
jae
dec
pmaxub
cltd
ljmp
les
aad
jmp
jle
push
sbbb
xchg
sub
sahf
pop
hlt
jp
filds
fdiv
xchg
call
add
inc
mov
xchg
dec
sub
shlb
mov
out
lea
mov
dec
jno
pop
inc
mov
mov
xor
push
data16
bound
out
ljmp
inc
pop
cld
mov
mov
lret
gs
add
mov
je
push
imul
fs
pop
and
imul
scas
test
outsb
mov
jae
gs
es
jp
sub
jb
lcall
pop
xor
andl
ljmp
push
outsb
shlb
daa
jbe
sbb
jp
aam
or
rcll
jle
outsl
std
popa
and
inc
sub
cmpsl
xchg
lods
mov
movsl
nop
call
mov
ja
lock
dec
mov
push
outsb
mov
inc
mov
insb
sub
sub
push
inc
int
outsb
cmp
push
sub
dec
mov
xchg
gs
inc
mov
or
xor
fwait
lock
jmp
jg
mov
fcmovbe
inc
jnp
movl
mov
movsl
into
mov
lret
daa
ljmp
jo
xor
les
adc
lods
xchg
push
lcall
subb
mov
fidivrs
mov
loopne
xchg
inc
movb
scas
pop
mov
mull
outsb
sbb
pop
mov
ds
pop
pop
pop
mov
outsb
and
movl
addr16
bound
sbb
xchg
inc
and
inc
addr16
loop
lret
mov
popf
inc
add
xchg
jae
jae
rorl
xor
jae
fnstcw
stos
jnp
jp
in
inc
or
pushf
stos
mov
jae
out
adc
jae
push
push
sub
aas
dec
dec
sbb
add
mov
mov
add
sub
pop
mov
out
fidivs
sub
xchg
and
lahf
jp
sahf
js
dec
pushl
shrb
test
pop
mov
mov
inc
cmpps
mov
inc
lods
fisttpl
sti
and
cld
push
out
int3
aam
aaa
push
js
pminsw
mov
sbb
adc
mov
repnz
jae
or
cmp
jnp
jae
mov
xchg
push
out
mov
mov
mov
mov
push
popa
or
jmp
dec
cli
mov
cmp
leave
mov
or
gs
cli
cmpsl
pushl
stos
rcl
xor
push
sahf
lock
add
push
std
mov
pop
sbb
mov
dec
test
jmp
mov
repnz
sub
xchg
sbb
and
ret
lcall
adc
sub
nop
xchg
sbb
pop
xor
and
add
mov
stc
scas
cmpsb
xor
sti
cmp
mov
cli
pushl
add
push
outsl
mov
cmpsl
movsb
scas
push
enter
xchg
push
xor
jg
icebp
jg
push
dec
xor
ss
add
adc
add
adc
leave
mov
inc
std
add
popa
scas
or
std
xchg
cwtl
pusha
xlat
push
bound
sbb
mov
jge
insb
pop
test
nop
js
sbb
test
scas
inc
out
leave
rclb
test
add
leave
aas
loopne
inc
push
ret
pop
jb
scas
outsb
movsb
mov
adc
lret
ret
dec
or
test
push
inc
dec
mov
inc
dec
or
pop
lret
hlt
mov
cmp
sub
push
adc
dec
cwtl
cmp
fistpl
je
rcrb
mov
cmp
pop
je
mov
inc
ljmp
push
and
cmc
pop
rcrl
pop
ss
aas
cmp
scas
dec
repnz
insb
in
aas
pop
lock
das
mov
xchg
sub
mov
mov
fisubs
insb
mov
in
std
lds
loopne
sbb
daa
sti
and
aam
or
xor
bound
jb
into
subb
mov
adcb
sbb
dec
fcoml
sub
cltd
mov
subl
sub
gs
sbb
xchg
in
xchg
outsb
jo
std
stos
dec
sbb
repnz
jle
shr
pop
repz
pop
xchg
add
lods
xlat
sbb
mov
dec
push
repz
or
push
sbb
adc
xchg
inc
lods
mov
je
lcall
mov
iret
es
repnz
jge
shll
fsts
outsb
push
cmp
push
sbb
rolb
mov
jne
xor
ds
add
int
cmovo
lret
hlt
inc
xor
inc
outsl
ss
jae
loop
pop
sub
test
pop
fstp
aaa
adc
fs
mov
mov
ret
cmpsl
xor
adc
imul
pop
inc
adc
ds
gs
mov
pop
xor
mov
adc
mov
push
add
push
pop
xor
bound
adc
fisttpll
out
cld
mov
outsl
iret
jae
shlb
les
stos
and
iret
mov
decl
mov
jmp
sbb
aad
push
pop
fidivl
pop
push
push
sti
mov
sbb
sbb
insl
call
xor
in
dec
aas
add
inc
out
or
push
ja
dec
fnstenv
mov
mov
sub
rcr
cli
sbb
sub
pop
sub
addr16
push
mov
lods
mov
ja
or
mov
mov
rorl
jnp
push
fdivrl
loop
fld
dec
jno
subl
mov
aaa
jp
lret
and
pop
fwait
add
jns
ja
imulb
mov
cmpsl
dec
jg
and
mov
xchg
xor
sbb
dec
outsb
test
cltd
xor
and
or
push
js
out
and
pop
in
xlat
ds
dec
lcall
sbb
push
pop
jp
jo
enter
or
loopne
dec
xor
sub
sub
lock
movsl
jne
pop
fildll
push
xchg
inc
dec
fcmovnbe
jp
dec
lahf
je
mov
push
ret
dec
sahf
bound
cwtl
fiadds
in
push
sub
into
fwait
cmpb
sbb
insl
inc
xor
mov
pop
and
bound
fwait
sbb
cmpl
fwait
iret
pop
xchg
mov
mov
mov
addl
mov
insl
sbb
in
ret
inc
sub
sub
sbb
test
pop
pop
mov
fldcw
imul
movsl
rolb
loopne
test
subl
mov
sbb
inc
cmp
es
sbb
mov
or
icebp
inc
push
sbbb
xor
push
shll
push
adc
lahf
rcll
mov
repnz
xlat
or
lahf
dec
add
xchg
inc
jmp
xor
or
ja
inc
sbb
shll
ret
sbb
add
xchg
sbb
aaa
ret
lods
daa
xor
fucom
lock
cmp
push
inc
add
cmp
mov
mov
mov
pushf
cwtl
lahf
inc
and
pop
pop
push
sub
dec
dec
pop
dec
and
jmp
add
sub
test
mov
idivw
rclb
jns
gs
mov
je
mov
inc
fimull
jmp
mov
aas
les
mov
ljmp
cmc
fiadds
cld
adc
ljmp
daa
cmp
addr16
inc
loop
ret
insb
jb,pt
testl
loope
addr16
sbb
sbb
sarb
inc
insl
push
lds
sbb
push
packssdw
jge
sbb
stos
clc
scas
enter
push
loop
dec
mov
mov
hlt
testb
mov
mov
mov
lock
loopne
dec
dec
outsb
dec
cwtl
mov
mov
push
inc
daa
repz
sbb
ja
repz
les
sbb
cmp
cld
or
lcall
cmp
lea
add
pop
mov
or
cmp
push
fsubl
push
fimuls
or
jg
push
mov
sbbb
cmpsb
cwtl
sbb
popf
pop
outsb
stos
cltd
sti
cmp
jnp
mov
jb
dec
pop
daa
repz
dec
fwait
sub
psrld
cmp
iret
orl
ljmp
stc
pop
cmp
pop
add
push
xor
add
jecxz
and
adc
fisubl
ret
push
xchg
jl
inc
jge
loop
aaa
sub
jp
cltd
mov
bound
test
xchg
fdivp
fnstenv
hlt
push
sbb
mov
lret
adc
sbb
in
es
lcall
cmp
jo
cmp
cmp
loop
adc
testl
sbb
ficoml
add
jge
and
push
cmc
frstor
mov
test
sbbb
scas
and
sub
cmp
lret
mov
sub
mov
jae
cmp
mov
sub
xor
xchg
push
sbb
test
push
out
fists
sub
xchg
xchg
ds
pop
test
sbb
sahf
movl
dec
lcall
push
push
pop
jb
into
lcall
adc
arpl
mov
push
pop
mov
inc
scas
cs
mov
daa
sbb
pop
push
push
idivl
scas
dec
stos
add
loope
pop
mov
push
insl
xor
stos
xor
stc
daa
enter
mov
es
mov
outsl
movsl
push
mov
or
int
and
fs
je
nop
dec
pop
cmpsb
jmp
in
out
mov
out
mov
xorb
sahf
ss
inc
lcall
imul
lock
push
aam
out
aaa
lahf
movsl
cli
repz
push
lea
insb
scas
dec
stc
mov
push
movsb
mov
dec
or
cltd
sbb
adc
push
cmp
cmp
call
sbb
jo
or
lret
popa
cmp
es
mov
test
lds
fcomi
xlat
gs
jne
aas
leave
sub
in
ret
popa
cmp
cmpsb
lds
and
das
data16
sar
pop
fsubrs
lea
adc
adc
shll
pop
testb
lock
repnz
sub
jp
fsubrl
xor
outsl
push
cltd
icebp
hlt
repnz
lret
mov
subb
int
or
fldl
push
out
es
aad
cmpsb
jnp
scas
xor
pop
cmp
scas
imull
int3
addr16
pushf
adc
stc
mov
aas
ror
pop
mov
xchg
pop
out
repnz
cmpsl
xchg
cmp
iret
and
sti
hlt
jg
push
jp
es
scas
xor
push
rcl
stos
mov
out
nop
pop
clc
cmp
sahf
cmp
dec
daa
cmp
int
cmp
add
pop
outsl
ljmp
cmp
shr
fiaddl
subl
scas
dec
dec
ss
push
dec
push
cmp
push
je
or
push
cwtl
lods
jbe
mov
mov
hlt
and
xchg
mov
dec
leave
scas
inc
pop
xor
mov
leave
fdivp
sbb
inc
test
or
bound
xchg
and
lret
push
clc
mov
mov
and
cmovbe
ds
and
xorb
jmp
ret
scas
sub
aam
and
mov
rcll
or
mov
jecxz
pop
xchg
sub
call
les
addr16
cld
push
repnz
mov
lcall
fstp
xbegin
pop
addr16
sub
or
fs
test
jo
jecxz
outsb
jb
cmp
call
fnstenv
xchg
popa
lods
aaa
imul
push
mov
jns
jno
adc
push
mov
data16
xor
out
xchg
mov
lods
push
out
dec
lds
pop
das
shl
incl
adc
lcall
ljmp
xor
xchg
inc
mov
mov
jbe
pop
xor
popa
and
loopne
push
sbb
and
pop
cmp
mov
fs
lods
mov
in
inc
jae
add
rclb
addr16
jle,pt
pop
and
jbe
jecxz
push
movsb
cli
sbb
aas
sbbl
repz
les
icebp
out
pop
mov
jecxz
fwait
jb
pop
loopne
nop
pop
or
mov
daa
sahf
nop
int3
push
fwait
mov
pop
dec
mov
in
mov
and
lock
lcall
ss
mov
daa
mov
daa
icebp
sahf
dec
ret
inc
and
ficoms
push
or
jmp
nop
aam
aaa
popf
mov
nop
iret
es
dec
pop
mov
xchg
mov
push
cmc
dec
adc
js
test
lret
jbe
iret
cmp
inc
add
scas
dec
or
mov
dec
cli
push
inc
addr16
xor
ds
or
pop
pop
jns
aad
sub
add
scas
xchg
sbbl
lret
or
test
mov
ret
mov
and
mov
data16
mov
sub
jl
outsb
lret
aad
adc
push
ds
sbb
pop
pop
cmp
jo
sub
inc
mov
xor
fildl
xor
mov
aas
pop
out
cmc
sbb
mov
ja
and
in
xchg
xor
test
roll
out
pop
xchg
rcrl
mov
jg
nop
ljmp
movsb
es
aam
movsl
aaa
clc
lods
cs
out
loope
not
push
mov
and
mov
ljmp
movsb
lea
addr16
das
cmpb
icebp
push
cmp
roll
sub
ss
push
repnz
jnp
jne
es
pusha
pop
xchg
jg
sub
ds
sbb
lahf
adc
sbb
repnz
pop
loope
sub
mov
mov
adc
jne
jns
dec
sti
push
xchg
mov
mov
jbe
xchg
popa
shr
repz
in
call
sahf
je
lods
pop
lcall
xchg
or
xchg
sarl
and
mov
push
mov
dec
sbb
ljmp
out
mov
xor
mov
inc
and
xor
sbb
aam
jmp
mov
ret
xor
roll
stos
out
or
cmp
daa
add
rorb
xlat
pop
and
jl
xchg
xchg
push
inc
fsubp
sub
jns
add
dec
push
arpl
scas
sub
or
fildll
scas
fisttps
adc
out
inc
xchg
adc
jmp
or
cmp
fnsave
sarb
cmp
call
out
fisubrs
pandn
sar
pop
jecxz
inc
xchg
add
sub
push
adc
mov
mov
rcl
shll
dec
out
cmpb
in
mov
xchg
fcmovu
sub
push
mov
inc
jmp
scas
js
jae
stos
rclb
mov
mov
ljmp
hlt
scas
add
out
mov
aas
movsb
out
xlat
pop
mov
into
cmp
mull
insl
ljmp
ljmp
gs
xchg
test
bound
sbb
loope
xchg
cmp
mov
test
push
mov
jg
call
vpsrlw
mov
shrb
sbb
pop
leave
xor
lods
call
dec
jmp
mov
test
mov
inc
pushl
out
orb
imul
lret
cld
daa
lahf
pop
rorl
cmp
ucomiss
cmp
add
loop
popl
insl
jle
mov
jge
xchg
lret
aam
pop
add
pop
jecxz
pushf
sbb
subb
cmp
sub
xchg
pop
sbb
outsl
out
test
inc
and
xchg
mov
mov
enter
mov
jae
ret
sbb
test
inc
addr16
push
jno
call
data16
enter
jnp
aad
stos
dec
cmpsl
jo
shrl
popf
pusha
sub
shrb
xchg
mov
xchg
out
jge
imul
ja
jns
jecxz
sarl
lea
push
mov
flds
and
push
pop
out
pop
pusha
outsl
jg
out
cmpsb
lahf
aam
mov
lods
mov
jecxz
add
mov
rol
out
test
adc
addr16
rolb
jns
cmp
mov
inc
cli
lock
loop
push
int3
hlt
dec
cwtl
iret
out
xlat
stos
repnz
mov
mov
cmp
jne
scas
pushf
push
pop
sub
dec
cmpl
pop
aad
xchg
sbb
mov
pushf
lret
orl
xchg
daa
enter
inc
cmp
inc
lods
push
xlat
mov
cmp
sbb
movsl
sbb
shll
idivl
pop
jae
and
jne
scas
cmpsb
icebp
fsubrl
jnp
mov
ror
mov
mov
and
aaa
loop
divl
fcompl
insl
push
bndstx
stc
jns
in
lock
mov
lea
sti
pop
dec
inc
aam
dec
fmull
dec
in
sahf
repz
cmp
sub
xchg
movsl
sub
inc
mov
and
push
push
add
dec
inc
les
lods
bound
xlat
int3
pop
mov
sub
jmp
cmp
in
pop
inc
pop
arpl
scas
fld
mov
ja
adc
xchg
in
xor
sbb
cwtl
jae
es
push
dec
pop
into
push
es
sbb
stos
out
lcall
sbb
mov
jae
jmp
cltd
pop
das
cli
pop
add
movsb
loopne
mov
test
mov
jb
fninit
rorb
aas
xchg
add
pop
add
jb
ror
mov
jg
aam
fucom
fcmovb
movsb
sub
jecxz
adc
test
out
sbb
fs
dec
inc
cmp
and
mov
xchg
es
sarb
in
mov
lsl
and
cwtl
repnz
cwtl
xchg
xor
dec
inc
jg
mov
aas
mov
jge
fwait
xchg
push
lret
cld
in
ss
idivl
shlb
push
inc
push
lods
int3
dec
pusha
add
sti
cmp
fcmovb
lock
jge
mov
lret
jae
jg
cmp
idiv
inc
mov
ja
hlt
xor
and
dec
adc
aam
leave
ja
fwait
push
ret
imul
add
mov
xor
test
cwtl
or
and
sbb
xor
rorb
mov
jo
sub
xchg
mov
add
sub
lea
pop
out
outsl
pushl
pop
push
mov
mov
aaa
jbe
sbb
call
xchg
dec
lods
das
ds
inc
push
sbb
idivl
cmovnp
xchg
jmp
sarl
cs
inc
fs
nop
cmp
or
mov
jg
inc
inc
sub
ret
push
mov
js
call
in
leave
or
cs
jae
lcall
or
dec
int3
js
cs
clc
xlat
movb
add
mov
cmp
cmp
mov
push
cmp
push
inc
dec
stos
lcall
ret
nop
pop
cli
jbe
iret
xor
clc
mov
lret
pop
rcpps
fcomi
clc
xchg
mov
push
aaa
stos
call
mulb
in
inc
pop
cltd
scas
push
mov
int3
mov
fstl
je
pushf
sti
bound
pusha
test
jnp
inc
mov
js
jne
in
mov
add
pop
mov
arpl
scas
mov
mov
les
jae
inc
jmp
sbbb
leave
push
ficoml
in
movsl
stc
mov
jecxz
cmp
enter
xchg
jnp
lcall
test
inc
je
incl
adc
int
adc
pop
popf
lahf
pop
pop
addr16
cmp
push
out
mov
movsl
outsb
sbb
xor
xchg
or
std
hlt
lret
es
divl
inc
fidivl
fwait
mov
xlat
mov
clc
xorl
inc
ret
xlat
and
dec
cltd
and
mov
outsl
jb
add
data16
jnp
int3
jg
and
adc
out
out
pop
shrl
imul
mov
test
jp
mov
jecxz
push
ficoml
test
aas
adc
test
push
fisubrl
imul
data16
ja
inc
int
dec
jl
lods
dec
cmp
xchg
add
xlat
lret
mov
loop
and
jge
jbe
imul
xchg
mov
xor
fs
mov
inc
and
bound
sub
pop
pop
movsb
repnz
iret
mov
sub
sub
insl
neg
test
test
ljmp
rorl
out
and
add
push
imul
pop
add
or
adc
data16
pop
or
pop
mov
push
inc
frstor
stos
mov
ret
mov
sbb
fwait
cwtl
popw
aad
imul
andb
lar
push
inc
popf
mov
add
add
or
adc
scas
cmpsl
mov
sbb
cs
sbb
and
mov
pop
dec
xchg
aad
mov
add
shlb
repnz
pop
add
push
mov
imul
rcl
lret
jmp
and
lods
inc
mov
push
outsb
popf
cltd
jmp
movsb
jb
movsb
mov
pop
lods
and
inc
call
cli
push
add
jp
dec
adc
insb
in
fidivs
outsl
jecxz
push
lret
daa
dec
loopne
in
pop
and
cmp
cs
icebp
lret
jo
outsb
adc
pop
mov
mov
gs
ret
xor
loope
je
clc
pushw
lea
push
pop
add
outsl
fnstenv
fstps
mov
add
icebp
enter
lret
insl
adc
cs
scas
not
jb
push
pop
mov
mov
jmp
ret
fstpt
mov
fisttpll
pop
lahf
cmpsl
aad
out
or
xchg
lods
xchg
cwtl
mov
xchg
xchg
xchg
dec
fidivl
loop
call
and
popf
or
mov
pop
stc
and
rcll
aaa
aam
addr16
mov
mov
inc
cmp
in
add
sbb
lcall
lock
pop
mov
sahf
mov
mov
sbb
rol
mov
ds
jl
pushl
fmulp
leave
test
xchg
scas
test
or
cmp
fmuls
mov
int
and
mov
dec
mov
dec
movsl
push
mov
insb
out
mov
decl
push
xchg
mov
test
or
jl
jo
clc
xor
sub
fstpl
mov
push
push
adc
loop
or
dec
lahf
outsb
mov
mov
mov
inc
popf
or
inc
and
ss
adc
fld1
fildl
stc
xchg
scas
iret
jmp
pop
adc
sbb
lret
push
jle
sbb
pop
inc
mov
push
mov
sbb
lea
les
ret
loop
sti
push
jl
and
loope
rcl
mov
mov
and
pop
imul
add
int
fdivrl
cmp
pop
pop
push
cmp
fs
pop
fdivl
je
out
sbb
mov
inc
imulb
cld
jae
shufps
inc
cmp
adc
mov
dec
pop
lods
out
enter
cmp
xchg
cmp
and
dec
xchg
xchg
jmp
cs
outsl
dec
cmp
jecxz
in
addb
test
push
lahf
aad
pop
or
pop
lock
inc
and
pop
push
mov
sbb
xor
jecxz
mov
mov
xchg
out
mov
daa
push
xchg
leave
stos
mov
in
test
jmp
jbe
sub
aas
fistpl
std
jnp
jo
popf
inc
and
pop
out
les
and
test
cmp
mov
and
sub
sub
jns
ss
test
mov
aaa
stos
xlat
shr
mov
add
jg
jb
inc
pop
inc
push
xchg
xor
cmpsb
pop
ljmp
sbb
adc
lcall
sbb
mov
aad
pusha
cli
xor
aas
and
dec
jns
sets
push
enter
mov
jnp
push
push
lret
fists
dec
pusha
mov
scas
mov
jp
add
aaa
xchg
dec
xor
xchg
xchg
test
sub
out
outsl
cmc
ret
jb
sbb
in
popf
out
or
mov
push
inc
dec
xor
inc
xor
lcall
xchg
sbb
leave
fsubrl
int3
push
mul
and
xchg
mov
xchg
rolb
pop
cli
lea
out
out
pop
add
jle
pop
into
sbb
mov
orl
sbb
shr
imul
inc
sbb
outsb
mov
ja
mov
in
das
or
fidivl
js
icebp
adc
cltd
and
pop
fcoml
inc
roll
sbb
loope
test
sbb
mov
lahf
push
pop
hlt
xchg
test
lods
lcall
adc
test
cmp
dec
je
and
pop
adc
ret
enter
adc
jp
test
inc
inc
leave
push
xlat
pop
movsl
dec
push
je
sub
sub
xchg
fisubrs
push
je
jns
ss
pop
test
repnz
mov
push
dec
arpl
mov
mov
cmp
mov
fstpt
loopne
mov
push
loopne
jle
ja
repz
xchg
movsb
test
xor
in
cwtl
xlat
jp
and
mov
orl
popa
out
repz
sub
or
ja
mov
repnz
lods
lds
jge
nop
test
cwtl
jmp
cmp
fnsave
cld
fwait
inc
add
and
cld
sbb
sbb
in
push
or
cmp
dec
jns
scas
std
jp
sgdtl
jg
lcall
imul
lcall
das
add
hlt
inc
or
mov
dec
aaa
push
notb
sub
mov
mov
mov
mov
popa
xor
ss
orb
sub
cmp
cmpsl
paddusw
add
mov
mov
dec
test
test
test
and
and
or
adc
ficompl
or
and
sub
mov
stos
dec
push
push
mov
adc
addb
pop
mov
flds
and
mov
ret
fnstsw
int3
adc
or
sub
ss
das
pop
call
popl
hlt
sbb
pop
cmp
mov
and
jae
aas
mov
inc
cld
xor
mov
cmc
outsl
xchg
or
mov
push
adc
cmp
xlat
lcall
and
mov
xchg
scas
adc
xchg
xchg
fsubrs
pop
bnd
int
test
cmpsb
shlb
outsb
xchg
push
add
inc
mov
mov
jbe
movb
idivl
jnp
inc
add
out
cmp
movsl
jns
pop
ds
ficomps
das
test
lock
dec
repz
dec
in
stos
xor
lcall
and
xchg
call
sub
mov
scas
pop
shrb
sbb
lods
gs
mov
inc
mov
mov
adc
or
adc
xor
xor
sub
xor
jne
inc
and
and
pop
pop
jle
jbe
mov
jnp
push
scas
and
sub
test
aaa
push
jmp
jg
sub
add
pop
out
out
push
inc
aas
sbb
jb
push
andl
sbb
xor
imul
or
stos
jle
dec
int3
inc
jg
adc
push
jg
xor
cltd
nop
push
sti
xor
sub
inc
cli
pop
dec
jb
push
jbe
test
test
out
inc
cwtl
fimuls
loop
scas
xor
fnstcw
cmc
aas
sbb
mov
mov
iret
xchg
test
sbb
pop
inc
loope
jo
cmp
push
dec
mov
negb
dec
scas
or
loope
mov
das
mov
movsb
lock
lret
mov
mov
ljmp
fcoms
das
lcall
adc
test
inc
popl
pushf
jo
aaa
xchg
or
mov
repnz
addps
out
pop
xchg
sbb
xchg
sti
insb
int3
xchg
punpcklwd
lcall
mov
mov
pop
xchg
mov
and
sbb
xchg
lahf
adc
inc
sbb
mov
or
xchg
add
sub
bound
cs
xor
xor
xchg
arpl
lea
fildl
adc
sbb
lahf
cmp
jo
aaa
mov
xlat
loopne
jle
pop
dec
aaa
jg
fnstcw
dec
ret
sub
cmp
xorl
cli
popf
inc
pop
and
out
insl
cmpsb
push
lea
mov
xor
push
adc
mov
rorb
mov
xor
pop
rcrb
xor
push
cmp
push
enter
test
cmpsl
push
stos
popa
jp
add
pushf
fsubs
adc
add
adc
sub
cli
inc
sbb
rorl
imul
sbb
pop
and
outsb
dec
mov
sbb
xlat
ja
int
jb
xlat
cmp
sahf
inc
and
mov
lret
inc
std
and
mov
xchg
fsts
mov
cmp
scas
jo
pop
xchg
xchg
movb
stc
and
xchg
mov
adc
repz
mov
ss
mov
rolb
jg
lods
xor
pop
xchg
mov
add
adc
adc
cmpsl
movsl
or
enter
data16
test
and
cmc
push
mov
in
fists
pop
dec
xchg
rorb
bound
scas
cmp
and
mov
sub
out
or
mov
in
stos
xor
pop
outsb
test
and
cmp
push
pushf
pusha
out
bound
stos
sub
aam
fstl
shll
pop
add
test
popa
ja
nopl
mov
imul
mov
inc
int3
xor
jno
shl
pushf
push
xor
in
sti
or
pop
fdivl
dec
xor
xlat
fmull
fildl
fsubrl
xchg
cltd
loopne
das
out
jmp
add
pop
out
pop
or
fildl
and
outsl
jle
sbb
mov
mov
push
mov
cmp
pop
xlat
movsb
add
mov
loop
pop
shll
pop
test
aas
cmpsb
fidivrs
ret
mov
dec
pop
xor
inc
mov
aaa
sbb
dec
rolb
dec
lea
enter
shrb
test
repnz
loopne
cmp
mov
imul
popf
dec
xchg
inc
outsb
sarl
pop
add
mov
mov
mov
lahf
mov
fsub
pop
dec
jmp
testl
pop
cltd
xor
xor
jns
out
loop
arpl
cli
out
cld
jge
and
pop
mov
aaa
mov
das
cmpsb
adc
sti
cmp
aas
mov
mov
ja
push
inc
icebp
mov
std
push
dec
ror
testl
pop
jnp
lahf
les
mov
dec
jmp
inc
mov
push
jmp
clc
cmp
das
sub
fnclex
or
stc
ret
fsubs
filds
push
rcr
inc
pop
push
add
cmpsb
push
pop
xchg
jp
adc
bound
jmp
sar
scas
push
bound
fdivs
mov
lods
jo
rclb
das
arpl
xchg
adc
push
pop
jae
and
stos
rolb
repz
pop
jge
pop
inc
or
xor
fsubrl
les
cli
ret
adc
andl
test
push
cmp
mov
cmp
in
sub
cmp
int
cwtl
sbb
lods
inc
pop
and
jle
pop
test
adc
or
push
xchg
pop
mov
dec
or
sbb
loope
lds
xchg
inc
and
loopne
jmp
pop
ja
mov
add
icebp
push
andb
popf
pushf
lahf
xor
and
fiadds
nop
int
cmp
sbb
inc
cmp
sub
loop
jbe
cmpsb
xchg
loop
iret
push
and
pop
sbb
mov
cwtl
inc
or
xor
dec
std
pop
call
fs
aaa
hlt
cmp
into
mov
loopne
cli
cmp
gs
and
cmpsl
icebp
push
sbb
inc
movsb
mov
imul
sbb
dec
xchg
pop
test
xor
sub
cmp
mov
das
pop
inc
aas
xchg
mov
mov
or
leave
adc
lcall
dec
xlat
sbb
out
lahf
jnp
gs
xor
pop
add
xor
int
fwait
ja
dec
xchg
mov
out
bswap
dec
pop
sub
lods
cmovp
sbb
inc
jmp
mov
mov
int
and
clc
daa
lcall
lret
mov
in
cmp
into
aad
daa
repnz
xchg
ja
sub
mov
divl
pop
in
cs
lock
stos
movsl
aaa
imul
xor
xlat
sub
fiaddl
std
jns
pop
pop
dec
pusha
mov
roll
aam
inc
jge
bound
push
mov
frstor
or
sub
idiv
adc
xor
ja
stos
das
jae
aas
or
add
test
stc
jbe
mov
mov
movsb
repnz
xor
shr
xchg
dec
ds
pop
lahf
ret
pusha
loop
mov
es
jmp
lret
xchg
loope
std
fs
ror
xchg
fiadds
adc
adc
dec
or
ret
sub
es
mov
and
and
insl
je
mov
cli
das
xor
push
outsb
dec
inc
aam
cmp
repnz
xor
inc
rol
movsl
les
sbb
outsl
sbb
das
sti
movsb
repz
out
ret
xchg
bnd
in
mov
call
pop
and
push
add
mov
lret
stos
cmp
sub
push
jb
mov
lods
scas
imul
ja
fimull
data16
mov
test
or
push
cwtl
stos
dec
pop
or
jle
fisubs
pusha
jae
insl
mov
push
xchg
pop
out
gs
and
xor
cmpsb
stos
out
imul
pop
enter
mov
mov
ret
loope
sub
inc
sbb
das
mov
mov
lret
xchg
jle
and
cs
mov
push
pushf
mov
fcompl
rolb
inc
fistl
mov
loop
fmull
pop
mov
out
sbb
pop
jae
sbb
cmp
push
js
ljmp
adc
popa
push
cmpsl
pusha
sbb
aad
test
loop
cwtl
dec
sbb
mov
inc
and
ds
add
test
mov
sbb
pop
out
mov
mov
pop
in
add
cwtl
aam
clc
push
xor
bound
cld
xchg
xor
decb
jg
mov
repz
ret
fisubrs
pop
cmp
mov
push
xor
inc
movsb
ficomps
and
fwait
and
popf
lret
pop
xor
out
insl
cmp
push
int3
pop
in
push
lret
roll
outsl
in
pop
and
mov
push
dec
in
repz
test
and
insl
and
cmpsb
adc
or
mov
mov
cmp
inc
aas
xor
adc
dec
jle
add
mov
jmp
mov
out
lock
out
xor
mov
xchg
mov
xchg
rsqrtps
push
inc
les
or
pusha
aaa
mov
pop
out
cmp
fstl
inc
cmpsl
rcl
cmp
sbb
jno
cwtl
pop
dec
enter
fwait
cmpsl
sub
push
mov
add
test
xchg
loopne
fbstp
xor
rcr
pop
pop
add
lods
idiv
pop
push
addl
dec
movsb
mov
out
out
xor
xlat
stos
mov
jl
ficoml
jg
aam
mov
push
push
xchg
cmp
in
out
es
ja
mov
xchg
mov
cmp
fildl
ja
dec
jmp
sub
mov
xchg
mulb
outsb
pushf
xchg
push
shll
mov
mov
pop
lret
push
pop
sbbb
in
sarl
xchg
sbb
ds
adc
mov
xor
jge
push
push
add
adc
fildll
inc
sahf
outsl
push
fstl
ss
sbb
xchg
jecxz
push
out
mov
add
pushf
loopne
mov
loopne
data16
pop
mov
adc
data16
sbb
pop
xchg
adc
cli
shl
xor
or
in
nop
cs
arpl
cld
push
flds
pop
mov
lahf
pop
mov
movsl
arpl
bound
adc
cs
pop
or
mov
sti
aam
mov
jb
aas
in
lcall
adc
xor
mov
mov
loope
sub
enter
ljmp
sub
arpl
lret
and
out
shlb
bound
aam
sub
outsb
jl
mov
push
or
test
or
jo
insb
sub
pop
pop
popa
fisttps
push
mov
mov
cmp
push
stc
in
mov
cli
xor
sub
dec
ja
scas
xlat
or
pop
inc
pop
cmp
add
add
push
adc
mov
fs
and
pop
sbb
pop
bound
std
jle
std
and
push
mov
pop
lret
push
addr16
lods
push
jmp
pop
stc
addl
jbe
cmp
or
and
pop
addr16
mov
sub
sub
js
cmp
outsl
sbb
and
and
jp
and
stc
xchg
xchg
test
out
sub
add
stos
xchg
das
lahf
aaa
adc
sub
xchg
fsave
adc
mov
cld
pusha
out
fmul
adc
jae
and
fidivrl
add
inc
adc
push
and
lcall
and
dec
pop
push
push
lret
dec
sub
divb
hlt
ja
pop
std
dec
mov
jg
sub
mov
inc
mov
in
fidivrl
mov
sbb
movsl
out
xchg
dec
dec
jbe
cltd
stc
stos
sbb
mov
mov
push
call
shlb
cmp
xchg
out
push
scas
adc
mov
pop
and
sub
pushw
mov
rcrl
out
dec
push
and
sahf
dec
dec
jb
sub
mov
nop
inc
lods
in
xchg
jle
sbb
add
jl
dec
icebp
sub
cmp
andl
lods
pop
aad
out
in
mov
ljmp
movsb
pusha
mov
inc
sub
incb
das
dec
iret
cmpl
incb
addr16
loopne
xor
push
xor
test
mov
jl
and
inc
pop
cmpsb
outsb
sbb
sbb
mov
push
cmp
inc
push
int
incb
mov
mov
dec
lret
sub
das
into
inc
jbe
mov
jo
push
ss
movnti
mov
call
jmp
add
bound
ds
mov
sahf
xchg
popa
popa
mov
add
cmp
dec
dec
adc
dec
sub
hlt
out
inc
in
loope
ffree
or
popa
cmp
push
mov
adc
inc
push
in
insb
test
lods
and
or
pop
lcall
fmuls
xchg
sbb
test
cmpsb
lcall
loopne
out
inc
adc
xchg
mov
out
mov
jge
xchg
aaa
dec
mov
pop
jns
pop
push
xor
mov
aad
xchg
iret
xor
xchg
push
add
mov
fdivs
jae
mul
stc
xchg
mov
stos
jae
fdiv
repz
sub
inc
dec
movsb
xchg
notl
ret
cmp
es
popa
or
sbb
sahf
pop
test
adc
movl
push
cltd
test
int
mov
into
or
adc
cli
mov
xor
push
inc
xchg
push
push
mov
lods
adc
popf
add
repz
jae
xorb
xlat
push
push
cli
ds
adc
ja
jbe
mov
into
push
cmp
ret
jle
loopne
jge
push
xor
sti
sahf
inc
dec
test
gs
xchg
loopne
test
cs
pop
adc
jne
pushl
gs
nop
movsl
ja
sahf
lea
xchg
or
mov
jno
mov
lods
call
aam
inc
pop
add
ja
fdivrs
out
mov
jl
push
sbb
fiaddl
inc
cld
cmpsb
jns
out
icebp
add
mov
pop
xchg
mov
test
push
push
repnz
scas
push
mov
cmp
lret
inc
add
xor
lock
scas
cwtl
rolb
lock
sbb
clc
lods
lock
pop
inc
mov
or
xor
xor
sub
xor
ljmp
shr
nop
or
out
pop
inc
mov
mov
mov
fdivr
mov
loop
nop
nop
fmuls
fisubl
xchg
xsave
sub
pop
jae
dec
push
or
cld
subb
jne
and
fisubrl
sub
rorl
fidivs
in
adc
mov
pop
add
repz
call
in
xlat
or
fcoms
repnz
xchg
aam
dec
lcall
mov
jg
jg
sub
adc
mov
addb
push
out
adc
pop
insl
pop
lcall
rorb
fnstcw
fcmovb
or
sbb
es
rcrb
jb
mov
inc
or
out
inc
das
jae
dec
sub
fucomip
xchg
and
pop
decl
adc
push
movsb
mov
leave
and
xor
pushw
ficoms
adc
xchg
push
test
pop
and
pop
mov
push
push
rcl
sub
incl
aad
test
jno
call
adc
leave
xchg
clc
xor
cmp
nop
xor
dec
aaa
sbb
mov
ss
push
ret
xchg
inc
xchg
ds
repnz
lret
mov
sbb
push
inc
enter
pop
inc
xlat
leave
sbb
mov
fs
fwait
stos
jb
cmp
adc
cmp
rcrb
mov
cmp
jmp
lcall
cmpsl
lret
xchg
push
or
in
insl
mov
pop
lods
nop
push
loopne
faddp
push
leave
jl
aas
andb
add
negl
jne
adc
inc
jae
pop
test
xchg
enter
sub
jo
sub
mov
jmp
loopne
lahf
clc
fists
cmpsl
test
cmp
add
mov
sub
insl
ss
out
pop
push
mov
repz
cmpsb
cltd
fsubrs
mov
outsb
xor
add
dec
or
and
addr16
mov
imul
sub
cs
jo
into
sbb
lock
pushf
adc
sbb
dec
cli
loope
sub
ret
lods
iret
xchg
idivb
in
mov
jmp
pop
jp
push
in
dec
jno
out
fstps
aam
aas
daa
jp
test
mov
xchg
pop
mov
xchg
lea
fiaddl
nop
je
scas
movsb
dec
xor
adc
push
leave
mov
icebp
repz
dec
and
test
cmp
lret
mov
mov
iret
push
pop
int
push
or
and
inc
cmc
fidivrs
addl
test
lock
xchg
push
iret
pop
aaa
cld
pop
or
jae
shrw
xlat
xchg
and
adcl
repnz
data16
enter
cmpsw
xor
incb
loope
adc
sub
mov
xor
daa
repnz
or
mov
dec
dec
lea
outsl
push
aaa
and
pop
dec
loopne
adc
adc
addr16
mov
insb
mov
or
mov
imul
xchg
mov
ljmp
and
mov
xchg
xor
ja
push
inc
fwait
push
lock
xchg
jo
and
sub
das
mov
nop
rcrl
lods
push
outsb
aaa
push
pop
push
mull
aaa
orl
cmp
cmp
push
mov
lcall
call
imul
fidivrs
sbb
test
inc
jg
sarl
iret
lods
xor
xchg
enter
cs
sub
jns
lds
jle
nop
mov
outsl
insb
lahf
xchg
mov
xor
lcall
test
inc
xchg
jae
or
lcall
add
es
daa
out
rolb
xchg
cmp
add
jns
outsb
mov
xchg
sub
mov
aas
add
mov
dec
nop
fistpll
stos
dec
mov
sub
add
andl
pushf
push
sub
jp
lret
mov
pop
mov
fists
test
add
jb
xor
icebp
outsl
pop
out
mov
mov
daa
fwait
cld
lods
and
popa
cmpsb
sub
ljmp
lods
dec
lods
sub
cmp
test
ljmp
ret
lods
push
cmpb
push
pop
cmc
push
maskmovq
notl
gs
xorb
xlat
cmp
stos
out
pop
clc
lcall
mov
add
cmpsl
xor
mov
sahf
push
mov
loope
icebp
jg
adc
push
push
pushf
inc
lcall
jbe
xchg
cmp
cmp
cmp
jo
inc
mov
test
jl
mov
sbb
sar
mov
ret
pop
pop
and
dec
mov
repz
push
pop
inc
push
sahf
bound
sbb
jmp
bound
loopne
es
inc
xor
mov
inc
cmp
mov
imul
call
pop
mov
push
xchg
and
out
mov
icebp
dec
nop
bound
sbb
es
jl
and
cmpsl
add
fcompl
push
loopne
jne
sbb
loope
dec
sahf
test
testl
mov
inc
jns
jp
jmp
sbb
shlw
jno
aam
notb
jbe
stos
push
dec
sti
js
lock
mov
out
pushf
sbb
lret
inc
mov
int3
pushf
pop
flds
jne
daa
fwait
mov
movsb
daa
test
int
imul
mov
push
adc
mov
ret
idivb
les
cmpsl
adc
pusha
dec
push
dec
pop
mov
xchg
mov
hlt
inc
loope
and
adc
popl
leave
push
clc
ret
movb
cli
lret
inc
adc
jmp
loop
ss
jne
rolb
push
cmp
mov
push
sub
imul
test
ljmp
js
dec
adc
shrb
and
xchg
add
push
dec
pop
pusha
mov
adc
jp
mov
xchg
and
xor
sub
test
sbb
add
pushw
adc
jp
out
aaa
dec
cmp
mov
mov
je
and
pop
shl
lahf
add
xchg
sbb
sbb
insb
cwtl
fwait
and
mov
and
mov
test
out
arpl
xor
cmp
jne
outsl
cmp
js
xchg
sbb
sub
call
lret
inc
jg
in
mov
xchg
cmpsl
mov
xlat
je
subl
lcall
inc
je
in
stos
in
jmp
xchg
insl
inc
pop
inc
xchg
mov
dec
mov
fildl
je
pop
fwait
cmp
lcall
bound
push
int3
fldenv
push
adc
fwait
lret
ret
cmp
call
ja
sub
mov
ret
cmp
js
lods
push
xlat
ds
es
mov
repnz
movsb
es
jp
xor
lcall
addl
aaa
jns
rolb
pop
adc
jp
jl
xchg
sahf
jle
enter
rorl
ja
sub
aaa
test
dec
aad
div
aad
push
mov
dec
sti
and
pop
xor
and
or
es
in
sub
in
mov
pop
sbb
push
repnz
cwtl
mov
imul
imul
movsb
jmp
mov
call
mov
dec
mov
cmp
push
bound
sarl
dec
xchg
jge
adc
cmp
pop
jnp
sub
xor
popf
lahf
jg
add
lcall
shll
dec
arpl
jns
ss
iret
ret
aas
fnstcw
pop
push
clc
pop
dec
mov
into
shrb
fucomip
push
call
lahf
das
push
adc
daa
out
loope
add
mov
inc
mov
cmp
rcrb
out
pop
inc
test
in
mov
dec
xchg
xchg
ret
and
shl
adcl
rcr
cmp
pop
mov
pop
sub
adc
xor
pop
sbb
les
inc
mov
aad
mov
pop
loopne
mov
repz
rep
cmp
push
loopne,pt
lods
and
sub
pop
repnz
mov
lods
vcvtps2pd
inc
push
lea
aaa
divb
push
in
pop
outsl
call
iret
out
mov
sbb
dec
imul
scas
movsb
in
mov
into
sti
xor
repnz
adc
jno
jmp
call
xorl
shll
lea
out
mov
add
fwait
lret
inc
pop
popf
enter
bound
mov
mov
add
out
jne
popa
mov
aas
mov
cli
mov
xchg
cli
push
add
mov
mov
or
gs
inc
stos
push
out
sub
in
lret
fmull
outsl
pop
outsl
popf
cld
sbb
push
mov
pop
fstpt
je
add
xchg
xchg
push
mov
xchg
xor
xchg
mov
adc
pop
aas
repnz
push
addl
pop
mov
mov
mov
mov
imul
out
and
arpl
jge
repz
es
addr16
sti
xchg
jbe
repnz
or
not
xor
outsl
movsb
cmp
jp
dec
sub
xchg
movsl
pop
xchg
push
and
inc
sbb
jb
pop
and
mov
sub
mov
cmp
into
dec
add
cld
pop
xchg
repz
and
mov
pushf
dec
test
push
pop
lcall
fcompp
fildll
mov
out
imul
ffree
lcall
nop
lock
das
decl
fistps
loope
daa
iret
ss
cmp
inc
xlat
iret
xorb
jg
std
andb
sub
out
fistpll
in
cmpsl
int
ficomps
lock
mov
jnp
push
cld
js
xor
cld
ljmp
daa
repz
scas
js
push
push
dec
js
stc
les
xchg
push
mov
xlat
into
xchg
js
sahf
test
sub
sbb
pusha
sbb
cmp
iret
pop
jmp
push
mov
cli
pop
movsl
sbb
ror
jg
decl
mull
stos
xor
call
add
dec
xor
push
call
loop
fimull
cmpsl
xor
sub
xor
test
inc
sbb
daa
dec
pop
mov
ret
xor
aaa
inc
sti
mov
lods
clc
adc
mov
cmpsl
jg
jbe
or
dec
mov
lea
insb
mov
cmpsl
push
dec
fsubrl
adc
daa
popa
rcl
jb
rorl
lahf
rcrb
jmp
aaa
mov
out
or
lret
lret
add
inc
xchg
or
dec
push
sub
and
add
lcall
aaa
imull
ret
in
std
into
dec
adc
iret
jns
stos
push
lret
daa
or
les
adc
lahf
cmc
lret
outsb
mov
lods
cmc
fxch
inc
jne
insl
mov
pop
cmpl
xor
or
pop
inc
je
sub
enter
fdivs
add
push
mov
pushf
xchg
pop
js
push
jmp
iret
ja
xchg
push
mov
scas
jecxz
mov
mov
cmpsl
es
mov
xor
js
mov
sbb
cmc
testl
insl
push
out
or
rclb
repnz
mov
pop
jbe
test
ret
cmp
add
push
imul
mov
xchg
xor
mov
imul
pop
das
mov
nop
adc
test
scas
in
inc
lcall
je
fildll
lahf
pop
cmpsb
movsl
movl
cmp
ds
cmp
inc
enter
mov
mov
cmp
dec
nop
into
cli
or
loope
push
inc
test
mov
popf
jge
mov
call
pop
out
pop
xchg
lea
push
subl
mov
iret
mov
and
push
mov
out
ja
or
xchg
lods
push
adc
pop
dec
scas
rcrb
out
int3
pop
xchg
cli
ret
addr16
mov
mov
or
hlt
adc
shrl
shrb
jp
adc
addl
rcr
sbb
out
bnd
xchg
cmp
jge
lcall
cld
cmp
lds
ret
jo
jbe
cmp
jecxz
jecxz
call
jge
lcall
mov
imul
movsb
nop
scas
std
jmp
scas
fimull
and
xor
or
and
daa
std
lahf
adc
mov
cmp
loop
xlat
icebp
mov
jb
inc
sbb
cmp
jle
mov
or
and
les
lahf
out
in
daa
mov
aas
xchg
xchg
aas
mov
movsbl
in
jnp
ds
cmpsb
pop
mov
inc
sub
dec
xchg
mov
sub
xchg
es
daa
call
mov
cmpsb
sub
popa
push
lods
lret
shll
pop
fistps
imul
xor
sbb
stos
inc
les
or
pop
popa
and
pushf
mov
mov
je
cmp
faddp
jb
dec
mov
sub
and
fimuls
das
xor
adc
dec
cmp
in
pop
push
push
xor
add
mov
cmp
push
arpl
or
and
std
les
cmp
es
ja
xlat
outsl
inc
pop
mov
jg
aas
adc
jl
dec
stc
add
outsb
xchg
add
fwait
jno
dec
mov
jle
push
xor
mov
shl
sub
clc
mov
outsl
ds
jo
ljmp
lock
dec
aad
subl
out
adc
and
ret
mov
adc
push
movlhps
adc
stos
inc
sbb
add
pop
cmp
inc
flds
mov
xor
xchg
add
lahf
jecxz
jb
mov
xor
pop
or
arpl
jbe
xchg
push
inc
jae
or
cmpsb
mov
pop
mov
js
cmpsb
icebp
jmp
arpl
or
jmp
mov
xchg
mov
inc
mov
test
cmp
flds
cld
fistl
jbe
test
shlb
imul
andl
lock
mov
lock
rclb
xor
imul
out
imul
mov
mull
inc
test
popf
lds
add
arpl
dec
jl
mov
frndint
add
cmp
push
pop
cld
push
fdivr
ljmp
mov
or
int
ds
push
test
outsl
je
push
jne
loop
mov
test
jae
getsec
icebp
outsl
out
pusha
pop
movsl
in
jecxz
xchg
jne
stc
dec
dec
in
outsl
inc
push
rclb
hlt
pop
sub
lahf
xor
call
in
call
sbb
push
mov
dec
addr16
into
sbb
out
scas
iret
andl
pop
nop
jns
jg
push
push
mov
jl
mov
std
daa
data16
popf
js
ret
sbb
ljmp
in
subb
gs
ja
in
fs
or
sti
dec
shl
pushf
push
jle
jle
test
outsl
xchg
mov
push
das
adc
out
xchg
mov
mov
aaa
mov
push
push
shll
mov
push
test
sbb
adc
mov
popa
in
jg
add
xor
mov
dec
xor
xor
notl
cmc
pop
push
out
and
jp
inc
push
push
xchg
pop
adc
sbb
and
cmp
mov
jnp
fsubs
outsb
mov
int
sbb
in
mov
and
pop
fadd
fidivrs
mov
divl
daa
sti
push
inc
dec
mov
int
cmc
and
fisubs
pop
daa
sahf
xchg
dec
pusha
and
mov
popa
popf
adc
mov
xchg
push
sub
xchg
cwtl
dec
imul
and
fdivr
pop
mov
xlat
adc
mov
or
fldenv
cmp
xchg
xchg
addb
dec
subb
fwait
mov
outsl
fisubl
jmp
xchg
lcall
out
mov
jae
mov
sarb
jge
xor
mov
sti
mov
lods
cmpsb
inc
cmpsb
xchg
cs
loop
rorl
jle
fbld
and
xchg
pop
adc
mov
mov
inc
arpl
cmp
add
push
daa
cwtl
out
add
out
out
outsb
pop
mov
add
iret
pop
adcl
xchg
out
mov
xchg
and
inc
xchg
inc
lea
jns
test
movsl
cmc
movsb
jno
pop
cltd
xchg
pop
sub
fcoml
cmp
je
mov
adc
add
lods
leave
or
ja
out
or
aam
push
stos
data16
jg
mov
mov
fisubs
dec
daa
lahf
xchg
xchg
loopne
cmp
jb
mov
sub
xchg
imul
mov
xor
movsl
inc
mov
jb
pop
xchg
jne
arpl
and
add
jb
xor
jb
and
test
std
aas
fists
sub
andb
adc
daa
outsb
mov
xor
pushf
mov
jecxz
aam
aaa
addr16
filds
sub
lret
in
cmp
aas
out
ds
sub
adc
rcll
test
sbb
and
cmpsl
jle
jecxz
jp
leave
out
lret
lret
mov
jecxz
sbb
out
mov
inc
cmpsb
jle
cld
loope
mov
push
mov
mov
dec
int3
arpl
pop
xor
idivb
cmpsl
pop
xchg
pop
and
aad
in
push
mov
cltd
lods
push
inc
lahf
inc
lcall
outsl
xchg
add
lcall
out
cwtl
xor
rclb
pop
mov
outsb
dec
loopne
faddp
adc
insb
mov
and
or
mov
xor
xor
lret
mov
mov
fsubs
pop
call
push
xchg
adc
push
loopne
aam
mov
and
js
ja
jp
stc
xchg
lcall
js
clc
jo
arpl
xor
and
imul
aas
jmp
clc
cmpsl
mov
mov
dec
jne
ffreep
pop
in
int3
add
stos
xchg
push
fistpll
dec
dec
or
adc
fidivrl
fs
out
push
arpl
test
hlt
add
pop
lret
adc
cmp
push
xor
jo
mov
cmp
push
pop
push
and
not
jge
fsubrl
cmp
ja
jb
cs
dec
or
pop
inc
shrb
push
outsl
and
insb
cmp
mov
or
int
push
into
mov
push
sub
sub
adc
aam
dec
jb
lret
test
mov
idivl
and
dec
xchg
xchg
xor
push
jge
push
adc
mulb
adc
inc
lret
adc
mov
inc
sub
mov
dec
int
repnz
arpl
addl
sbb
sbb
or
xor
das
lea
mov
inc
pop
mov
pop
xor
dec
loopne
ret
cwtl
dec
and
pop
or
cmp
nop
cli
dec
adc
adc
test
pop
loop,pn
lcall
sbb
test
adc
dec
mov
add
shlb
lds
sbb
aaa
aaa
push
mov
test
shrb
inc
fldenv
push
xchg
push
add
add
dec
mov
movsb
sbb
iret
cmc
cltd
jmp
ja
loop
dec
cmp
cmove
cmp
repz
mov
xor
fs
repz
sub
mov
cmp
sbb
push
cmpsl
inc
outsl
cltd
xchg
lods
inc
in
notb
loope
movsb
daa
bound
mov
sub
dec
scas
repnz
ss
pop
stos
loopne
pop
into
adc
pop
cmpb
sub
rolb
dec
pcmpgtw
mov
fisttpl
pop
daa
pop
pop
rolb
subb
xor
js
hlt
mov
jno
lahf
mov
test
and
out
fwait
push
sub
push
roll
pop
cs
pop
and
std
xchg
notb
sub
popa
push
fcoms
dec
mov
jl
lea
rclb
testl
loopne
dec
pushf
jp
sbbl
pop
insl
push
adc
xchg
lods
xor
lcall
das
rcll
test
iret
lahf
or
push
iret
loope
mov
leave
jecxz
pop
dec
daa
stos
adc
jnp
inc
jbe
inc
dec
jge
mov
fstpt
in
pop
mov
mov
daa
addr16
int
jge
pop
xrelease
dec
mov
mov
dec
mov
ss
decb
mov
dec
je
popf
bound
add
lret
ljmp
pop
ds
mov
add
mov
popa
sbb
mov
iret
leave
xchg
inc
mov
xorb
test
scas
cmc
loop
out
test
push
jo
push
or
mov
pop
sarb
cmp
mov
in
jb
rolb
scas
pop
in
in
xchg
aas
mov
mov
xchg
add
lret
fisubrs
and
push
pop
inc
or
dec
fwait
pop
jns
mov
out
xchg
fistps
rcrl
cmpsl
xchg
loopne
data16
pop
pop
cmc
jnp
lock
jno
scas
xchg
outsl
sub
jl
dec
inc
enter
insb
pcmpgtd
cmc
mov
lret
lret
jg
cld
mov
fdivrl
out
add
jge
or
lret
shlb
mov
popa
ficoms
ja
sbb
mov
mov
push
ficoml
ds
cld
arpl
push
mov
push
scas
push
sub
je
adc
int
scas
lahf
das
stos
negb
enter
mov
nop
jl
pop
push
sub
mov
adc
xlat
addr16
scas
xor
xchg
gs
xchg
and
fisttps
xlat
iret
mov
shlb
enter
arpl
lret
shlb
pop
jae
and
adc
mov
loop
dec
mov
out
xchg
mov
inc
jae
inc
scas
insb
fwait
and
lahf
mov
mov
push
mov
pop
jnp
or
xchg
ss
decb
or
outsl
lods
lahf
idivl
aaa
xchg
push
addr16
lods
xor
add
das
aam
push
xor
dec
movl
mul
push
sub
inc
inc
dec
pop
addb
aas
fwait
imul
cmc
das
pop
jmp
loopne
out
in
clc
addb
fstpl
sub
std
inc
loopne
test
sahf
inc
shlb
leave
sbb
sub
and
xchg
sub
sti
addb
push
pop
xchg
addr16
dec
lcall
dec
pop
jmp
xlat
mov
cwtl
or
mov
push
jge
cmp
jne
aam
jl
xchg
out
mov
mov
mov
leave
xor
jmp
xchg
adc
lds
lahf
jg
mov
fistl
or
cwtl
dec
xchg
rolb
jg
push
sbb
mov
call
es
call
or
lea
mov
rolb
sub
add
rorb
cwtl
ja
lret
add
dec
dec
lret
lds
outsb
push
push
add
addr16
scas
js
mov
mov
inc
mov
lods
xlat
loopne,pt
xlat
add
mov
scas
cmp
iret
loop
outsl
mov
push
pop
mov
mov
mov
aaa
repnz
push
roll
push
enter
pop
xchg
fsubrl
sti
pop
xchg
insb
sbb
loope
and
or
cli
dec
dec
fcomp
lret
insb
pop
jmp
pop
inc
mov
jp
leave
mov
es
mov
mov
jl
les
add
addl
mov
jb
outsb
pop
fstpt
es
scas
mov
adc
mov
loope
and
cmpsl
outsl
es
inc
xor
addr16
fs
arpl
jecxz
lahf
ja
lret
jbe
sbb
add
xor
pop
ljmp
mov
popf
hlt
push
pop
dec
test
xchg
xlat
inc
and
imul
inc
jno
or
jmp
and
pop
or
or
call
push
out
pop
xor
hlt
jl
inc
int3
je
mov
push
jno
sti
les
dec
push
das
stc
stos
arpl
in
dec
nop
pop
data16
repnz
cmp
jp
dec
faddl
das
ss
jb
ss
iret
xchg
dec
fdivs
xchg
or
pop
scas
xor
inc
adc
pop
sbb
popa
lds
in
pusha
jae
mov
mov
pop
icebp
test
out
cld
daa
add
adcb
pop
dec
adc
pop
addr16
les
and
mov
jae
cwtl
test
mov
pop
jg
inc
sti
lcall
cmpsl
sarl
or
fwait
out
mov
push
ss
xlat
lea
addl
adc
lea
in
call
add
scas
imul
sbb
es
sub
jae
push
adc
inc
lcall
sub
adc
mov
adc
xorl
setb
jns
mov
out
clc
dec
into
dec
mov
in
jb
rol
pushf
jecxz
repz
std
ja
cmc
or
or
lcall
inc
pop
rcl
sub
aas
adc
clc
cli
or
mov
jp
and
scas
push
lcall
mov
les
repz
and
push
xor
imul
and
xchg
ljmp
push
mov
dec
into
pusha
mov
addr16
jnp
adc
ficoms
push
mov
mov
pushf
aas
pop
aam
pop
mov
cmp
andl
into
mov
sub
push
loop
xchg
mov
imul
lret
enter
adc
shrb
dec
outsb
fsubl
cwtl
inc
imul
cmp
out
nop
pushf
or
cwtl
enter
add
adc
cs
push
loope
cmp
addr16
xchg
sti
inc
pop
aas
mov
inc
pop
adc
push
mov
inc
icebp
fidivrs
ret
add
sub
icebp
inc
or
xchg
int
and
cmp
into
mov
xchg
xchg
test
call
aaa
jp
push
mov
and
add
test
mov
aam
loope
cld
xor
adc
iret
nop
pusha
hlt
mov
clc
cmp
les
pop
cli
xor
sbb
pop
push
orb
cmp
in
adc
js
inc
cmpsl
leave
bound
push
dec
lret
aas
cs
dec
mov
clc
jecxz
mov
inc
shll
inc
out
pushf
mov
out
outsl
cmpsb
imul
lock
mov
jmp
sub
inc
sbb
lods
mov
xchg
stos
std
mov
aas
ret
adc
testb
inc
in
xor
sub
dec
lods
add
rep
mov
push
lahf
push
sti
in
jo
lds
push
push
mov
mov
in
add
or
dec
cmp
int3
pop
or
shll
jo
xchg
pop
sbb
das
pushf
aad
sub
and
cli
stos
sbb
rcll
sti
sarl
mov
aad
lods
xor
pop
pusha
adc
cmp
adc
xor
mov
imul
inc
inc
or
dec
pop
xor
sarb
push
cld
in
sbb
pop
fs
or
ss
xchg
or
mov
rcr
mov
inc
scas
xchg
loop
subb
test
ret
lahf
pushf
jmp
push
sbb
in
add
lds
out
repnz
xor
xchg
fcoml
sbb
mov
idivl
aas
scas
xor
out
lret
cli
push
es
push
into
add
and
pop
fwait
pop
test
rol
roll
jg
into
xor
dec
pop
test
fcoms
fwait
icebp
cli
fildll
jg
in
mov
mov
lahf
leave
jmp
clc
cmp
out
lds
ja
mov
cmp
push
mov
test
mov
lcall
xchg
inc
clc
jne
pop
dec
push
loope
mov
push
outsb
lret
mov
jl
rolb
xchg
nop
mov
dec
in
je
fdivrl
jecxz
clc
lret
stos
imul
lock
inc
dec
lahf
push
les
sahf
aaa
bnd
adc
outsb
push
jecxz
test
nop
cmp
adc
xor
fistps
mov
fnstenv
sbb
mov
movsb
mov
cmpsl
adc
outsb
and
add
orb
jbe
mov
out
mov
popa
sbb
sahf
or
lret
and
movsb
cmp
mov
mov
lcall
lock
sub
xor
jecxz
jo
pusha
fucomip
mov
pop
outsb
jmp
lods
dec
mov
add
repnz
pop
test
cmpsb
xor
insb
nop
int3
push
shl
lcall
testl
mov
js
pop
pop
dec
out
mov
dec
call
aam
dec
mov
sub
lods
push
mov
aaa
xor
xor
jle
or
daa
or
popa
divb
adc
subb
xor
pop
xor
test
test
mov
ss
pop
push
xchg
jecxz
das
pusha
cltd
leave
pop
push
sbb
out
notb
or
xchg
dec
push
mov
and
add
cmpb
or
xorb
push
pop
add
xor
push
adc
xor
jge
pop
push
dec
jb
push
adc
je
jnp
sub
add
pop
push
int3
inc
shrb
push
pop
mov
out
adc
cmp
mov
push
addr16
sub
add
aaa
les
and
mov
push
sub
dec
xchg
enter
divl
add
or
scas
add
in
mov
mov
enter
mov
pop
xor
xor
daa
dec
mov
sti
push
int3
pop
xchg
jg
movsb
push
sub
xlat
dec
xor
test
pop
sub
inc
mov
push
jns
int
cld
cmpsb
ljmp
xor
ficoml
mov
int3
stos
pop
jl
js
nop
sahf
adc
pop
mov
lret
sbb
push
jmp
and
in
push
or
popf
adc
out
test
adc
pop
add
xchg
sub
rorl
jbe
stc
sbb
leave
ret
aad
sbb
iret
mov
fstpt
cmpsb
pop
inc
push
pop
mov
inc
jnp
fistps
xor
fs
ret
shrb
cs
in
add
out
adc
cltd
paddq
negl
pop
repz
or
ljmp
mov
std
push
mov
loopne
cmp
out
ror
loope
cmpsl
mov
loopne
inc
je
arpl
inc
movsl
jns
rcrl
mov
ja
adc
aaa
jno
ja
test
in
mov
frstor
pop
out
xchg
push
shlb
or
cmp
sti
jecxz
jne
cli
cmp
outsl
mov
js
jb
lock
aad
mov
fisubs
push
test
cmc
or
rol
std
dec
mov
pop
cld
cli
push
movsl
or
aad
add
sub
cmp
push
inc
adc
pop
jbe
fimuls
movsl
les
jo
and
repz
les
add
outsb
dec
pop
jle
xchg
sbb
fimuls
cld
loope
js
lods
cmp
js
mov
ljmp
scas
sub
xorb
mov
jmp
arpl
and
ret
xchg
and
scas
dec
xchg
dec
xchg
dec
push
mov
mov
mov
and
push
add
cld
mov
adc
push
aaa
lds
mov
lcall
push
out
mov
hlt
xchg
in
dec
push
xchg
mov
cmpsl
pop
xor
mov
jmp
pop
mov
call
xchg
bnd
lret
adc
sub
sub
mov
into
dec
pop
mov
sub
fiadds
push
pop
adc
jne
cmp
pop
pop
mov
das
ja
loope
push
jp
fnstenv
mov
in
sbb
mov
sub
xchg
aad
add
xchg
popf
adc
imul
push
push
int3
pop
xor
pushf
dec
adc
stos
dec
cmpsb
call
mov
add
push
and
aad
frstor
popa
mov
xchg
adc
pop
push
insb
clc
jo
js
xor
mov
jp
jb
call
jno
inc
shll
ja
sub
mov
dec
popw
mov
xorl
ret
pushf
sbb
leave
xchg
push
in
xor
xchg
pusha
push
in
outsl
cmp
in
je
mov
lcall
add
movsb
pop
int3
inc
dec
in
and
hlt
and
sub
mov
inc
adc
loopne
hlt
fbstp
add
fistl
mov
ljmp
scas
dec
or
dec
fwait
lahf
xor
sbb
mov
mov
test
outsl
xchg
jnp
or
mov
rcrb
scas
ret
jns
es
cltd
aad
adc
adc
iret
pop
xchg
mov
cmc
mov
ljmp
shl
mov
xchg
push
adc
mov
or
ja
add
xchg
mov
das
or
jns
add
xlat
aam
push
push
push
fsubp
insb
mov
dec
jle
xor
out
cmp
xchg
push
or
inc
daa
cmp
mov
adc
add
cs
into
insl
ja
jnp
outsl
mov
and
xchg
ret
out
stos
popf
std
adc
shll
lret
stc
mulb
dec
xchg
push
lahf
fidivrl
pop
and
mov
mov
lock
aaa
adcl
mov
push
sbb
adc
sbb
dec
ljmp
cmp
mov
rolb
mov
add
and
insl
sub
push
data16
xchg
sbb
mov
lret
neg
mov
leave
mov
aad
nop
pop
aaa
iret
jns
cmp
or
add
add
faddl
pop
jno
ss
mov
icebp
notl
cmp
jbe
dec
and
ret
fistpll
mov
cmpsb
fs
inc
out
enter
or
add
fbld
bound
out
out
inc
pshufw
fisubl
push
and
mov
jp
stos
mov
sbb
jne
scas
cmp
lret
or
popa
out
inc
inc
not
sub
repz
in
cli
fwait
jmp
pop
out
pop
jns
in
ja
pop
pop
inc
mov
pop
ja
push
lret
xchg
int
lea
inc
movsl
out
call
and
jg
and
rcll
jl
xor
push
add
and
adc
sub
adc
cmpsl
mov
shlb
stos
jecxz
loopne
push
adc
xchg
jmp
mov
cld
outsl
pop
lds
loope
xlat
ror
mov
js
lods
loopne
jl
add
inc
fisubrl
notl
mov
sub
ja
add
mov
xlat
loope
lods
xchg
enter
push
xchg
jne
pop
adc
xchg
mov
xchg
jmp
inc
push
pop
cs
push
lea
mov
adc
stos
sbb
fdivrs
shr
inc
cmp
andl
imul
jb
inc
adc
mov
repz
fistps
pop
inc
xchg
fwait
inc
addr16
jo
jmp
mov
cmc
adcl
lds
push
mov
jp
ljmp
imul
das
out
pop
fwait
mov
sub
outsb
adc
hlt
add
subb
jmp
fistpl
fcompl
xchg
ja
jae
xor
nop
jae
mov
iret
xlat
repz
movsb
fwait
mov
sbb
inc
lods
push
push
mov
cs
cmpsl
mul
int
nop
mov
gs
pop
out
mov
sti
adc
push
mov
incl
hlt
loop
shld
sahf
sbb
or
xchg
adc
out
out
and
dec
dec
adc
jp
movsl
cmpsb
test
decl
xor
pop
sahf
imul
sbb
inc
daa
jle
push
cli
jae
ss
adc
sbb
insb
sub
pop
mov
js
add
mov
sub
xor
pushf
jae
push
test
cmpsb
mov
jg
xchg
call
push
xchg
mov
aas
clc
cli
mov
sti
inc
cmp
jne
jge
pop
mov
repz
shrl
or
sub
iret
xor
outsl
jge
orb
cld
sub
jg
ss
pop
dec
int
lods
add
call
xor
movq
test
jnp
movl
adc
not
jb
and
std
mov
aas
adc
cwtl
push
jp
and
sub
inc
ficoml
mov
mov
mov
jg
push
push
jl
aam
adc
stos
add
xor
rorl
sbb
sti
xor
jmp
pop
sub
adc
aas
mov
adc
mov
in
shlb
fdivr
dec
sub
cmp
int
push
cmp
lods
xor
jl
push
mov
and
dec
add
mov
push
movsb
adc
adcb
repnz
cltd
iret
xor
cmp
ss
pop
fsubrl
jbe
int3
pop
repnz
aas
out
or
xchg
cmpsl
push
cli
je
mov
pop
mov
mov
jns
xchg
push
aaa
fidivrs
or
mov
push
xchg
ret
iret
jmp
sub
mov
popa
xor
pop
ljmp
hlt
add
mov
fbld
out
ret
mov
out
ret
inc
bnd
mov
dec
mov
popf
sbb
fcomp
fsubs
das
fsubl
int3
and
xor
insl
je
pop
push
mov
inc
bnd
js
in
jecxz
or
add
es
outsl
and
lods
adc
repz
fmuls
shlb
scas
xchg
cmp
sbb
push
fldenv
cwtl
cmp
clc
jecxz
push
jbe
sti
out
mov
inc
les
leave
and
mov
pusha
mov
push
in
jle
cmpsl
loop
into
sar
test
mov
mov
ret
aas
pop
add
jl
dec
out
int
push
mov
lods
xor
addr16
mov
sarb
test
jp
sub
xchg
sti
pop
pop
pop
fmul
aas
mov
loopne
and
mov
or
dec
shll
or
jbe
xor
fisubrs
sbb
or
xor
jle
js
and
jae
jg
jns
push
push
leave
gs
push
dec
or
inc
jp
icebp
sub
pop
mov
xchg
jbe
ja
scas
repz
xchg
cmp
repz
in
inc
push
mov
push
in
and
sbb
lcall
adcl
sbb
pop
into
pop
mov
mov
and
pop
mov
lcall
and
add
out
xchg
in
jno
gs
sbb
or
outsl
je
mov
fmuls
loopne
mov
pop
orb
aad
call
xchg
push
sbb
call
mov
in
stc
xor
push
lret
adc
ret
push
fcom
lcall
mov
push
add
je
inc
pop
xchg
ljmp
jl
cmp
andl
ret
inc
lea
jge
loop
adc
rol
lret
repz
adcb
pop
pop
lcall
jb
cwtl
push
icebp
std
and
icebp
gs
adc
pop
push
out
out
shll
pop
scas
in
add
ds
inc
out
xchg
pop
inc
dec
les
movsl
stos
add
mov
jmp
mov
imulb
and
add
bound
cmp
call
xchg
pusha
movsl
pop
mov
dec
add
pop
and
aas
imul
mov
push
outsl
mov
mov
cmpsl
pop
outsl
mov
out
xor
insb
sbb
inc
mov
fwait
xchg
cmp
sbbb
std
xlat
outsb
push
sahf
adc
jns
negl
push
leave
dec
dec
in
out
das
push
and
test
or
mov
mov
lods
cltd
pop
mov
xchg
xor
repnz
inc
lock
push
push
pop
push
dec
add
sbb
sbb
jecxz
add
fsub
mov
test
xchg
scas
jns
jg
loope
lcall
jbe
hlt
test
pop
je
jb
cwtl
ds
push
dec
movsb
xchg
jb
push
je
sub
push
ret
inc
push
mov
loopne
dec
fxch
pop
inc
jae
lcall
shlb
jne
lods
dec
cli
repz
nop
ret
sbb
jne
ret
cltd
inc
mov
mov
jge
jb
ret
mov
xchg
lahf
jp
sub
or
lock
lret
or
adc
mov
and
popf
pop
adc
jle
lret
enter
pop
adc
sub
pushf
mov
lahf
dec
dec
fisubrl
sub
push
jle
out
mov
sti
insl
aas
mov
xchg
enter
xchg
inc
aam
push
fwait
xchg
sub
push
xchg
inc
out
push
pop
cmp
das
das
in
ret
xchg
mov
pushf
and
push
pop
in
adc
cmpsl
push
pop
cmpsl
cld
ss
in
sti
xchg
shll
push
add
cmp
pushl
jl,pt
pop
push
movsb
push
mov
mov
jg
xchg
scas
xor
push
imul
sbb
ret
in
pushf
bnd
test
aam
scas
mov
inc
stc
aas
call
rcrb
push
int3
iret
dec
xchg
aad
loope
jne
and
lahf
jb
mov
ret
divl
xchg
aad
dec
hlt
shll
xchg
add
mov
aas
sub
aas
sti
call
add
ror
and
adc
xchg
fcompl
lods
ss
xor
pop
pop
dec
cmp
pop
sbb
arpl
lret
or
jle
fs
xlat
dec
pop
pop
ja
or
mov
or
dec
push
pushl
lret
inc
outsl
mov
push
imul
daa
sbb
sub
mov
mov
or
test
lods
lea
xchg
cmp
xchg
or
nop
cli
pop
inc
into
pop
nop
push
cmpsl
inc
push
scas
stos
std
jmp
out
cwtl
pop
jg
jecxz
leave
xor
mov
pusha
add
ds
sbb
adc
mov
xor
cli
loop
sarb
mov
mov
aaa
adc
xor
cmpb
popf
leave
pop
popl
das
lds
inc
jns
dec
loop
jo
mov
js
inc
stos
or
cmpsl
jo
lods
cmc
mov
in
dec
jno
push
fsubs
inc
mov
inc
popf
movsb
or
scas
stos
jecxz
aam
rcrb
fs
and
inc
mov
pop
fdivrl
test
xor
inc
stos
push
insl
test
test
int3
dec
out
stos
cmovnp
inc
out
mov
cmp
mov
xor
cwtl
pop
dec
daa
sbb
fldenv
sbb
mov
pop
xor
stos
out
mov
ljmp
jg
pop
mov
xchg
js
out
mov
and
arpl
or
cmp
repnz
pop
cmpsb
in
jns
mov
xlat
mov
inc
jbe
mov
cmpsl
je
icebp
js
fcomps
push
imul
int3
out
add
sbb
sbb
fimull
stc
or
push
push
out
mov
dec
or
mov
jae
and
jnp
out
push
lahf
sbb
xlat
or
sbbb
aad
mov
je
fsubrs
mov
lahf
dec
loop
incb
cli
xchg
add
push
xchg
push
adc
mov
js
cmp
mov
pop
add
lds
jg
xor
cmp
ret
aaa
stc
imul
lahf
push
push
mov
cli
sub
adc
inc
test
xchg
xchg
lahf
imul
fsubl
pop
test
mov
mov
dec
dec
aad
jp
gs
mov
arpl
js
pusha
jl
movsl
inc
ss
adc
addr16
pop
mov
fidivrs
pop
adc
ljmp
sub
clc
jp
dec
add
add
jp
inc
lahf
enter
stos
mov
adc
mov
cmp
and
sub
adc
pop
dec
mov
sbb
pop
pusha
stos
mov
les
nop
ss
pop
jl
xchg
mov
inc
lcall
mov
clc
clc
mov
pusha
mov
fiadds
cli
nop
jb
sbbl
mov
xchg
or
push
leave
outsb
sahf
out
negb
pop
mov
nop
lea
not
fmull
dec
fcomip
fcoml
das
daa
inc
pop
cwtl
lock
ds
les
dec
icebp
ljmp
fwait
mov
dec
sbb
out
mov
hlt
xchg
sbb
push
outsb
push
jns
add
call
sbb
adc
jne
movsl
aaa
loopne
mov
pop
xor
mov
mov
and
jae
rcrb
stc
add
xor
mov
lret
mul
xchg
lds
push
xor
xor
adc
and
insl
dec
or
sub
aas
loopne
loope
jge
dec
inc
inc
std
push
scas
cmpsb
es
out
adc
xor
dec
ds
aam
mov
pop
mov
jns
fldt
pop
sbb
push
nop
jmp
pushf
sub
add
jne
mov
mov
arpl
jecxz
add
stc
dec
int3
push
inc
mov
addb
fldl
pop
lahf
loope
jle
sub
loopne
outsl
dec
lds
popf
jo
mov
push
sbb
out
out
and
xchg
sbbl
cmp
or
and
arpl
aam
and
fsub
mov
xchg
stos
mov
pop
into
fdivrl
aaa
xor
mov
dec
sub
ja
or
outsb
cmpsb
fidivs
fsubl
push
jnp
sbb
subb
dec
mov
mov
pop
leave
aaa
sbb
mov
cld
ds
es
jmp
repz
add
cmp
iret
push
ja
incb
mov
xorb
mov
xchg
mov
pusha
push
inc
sub
adc
mov
es
cs
shll
fs
lahf
sahf
and
pop
lock
aad
js
cmc
aaa
add
test
daa
inc
iret
mov
jle
test
enter
sbb
mov
aas
in
jbe
push
es
push
adcl
push
sub
andl
arpl
mov
fisubl
ds
push
jae
mov
mov
repnz
in
push
cmp
sbb
out
scas
or
sahf
fs
scas
cmpsl
data16
push
cmpsb
and
outsl
dec
adc
dec
jmp
sub
rcrb
out
gs
mov
imulb
jmp
shr
mov
sahf
dec
jle
push
in
sbb
xchg
movsb
add
xchg
dec
inc
adc
add
aaa
mov
and
into
sbb
or
mov
out
sbb
sbb
adc
out
dec
ret
jae
imul
mov
mov
into
pop
out
cmpsb
mov
push
inc
test
icebp
mov
in
icebp
xchg
mov
cmpsb
lret
arpl
scas
inc
sahf
testb
mov
cmp
and
stos
pop
data16
cltd
loopne
jg
out
cmpsb
je
jne
or
jecxz
sbb
mov
hlt
sbb
and
cs
pop
ds
pop
inc
xlat
movsb
stc
dec
push
pop
arpl
das
addl
jne
sbb
insb
push
mov
out
ret
fsubrs
ret
dec
add
out
sbbb
bnd
cmp
mov
inc
lcall
push
push
ds
aaa
test
es
and
sub
mov
sub
test
mov
fimuls
idivl
subb
or
push
inc
popf
ja
les
jge
cmpsl
mov
sub
sub
mov
ds
mov
jbe
or
stos
push
mov
jle
into
sarl
mov
stos
jb
bound
lods
mov
es
stos
xchg
adc
xchg
or
add
imul
pushf
imul
cltd
push
in
mulb
ret
js
jecxz
pop
jle
add
aam
mov
imul
xchg
mov
arpl
add
and
lret
les
or
ja
outsl
aas
aas
push
cmpsl
pop
xor
xchg
out
dec
xlat
pop
mov
outsl
outsl
mov
shrb
dec
pop
addr16
jo
fldenv
addr16
dec
push
xchg
std
pop
inc
mov
jns
imul
xor
xchg
mov
negb
push
add
sub
mov
js
inc
ret
or
dec
mov
push
cmp
xor
pop
lds
lcall
jne
out
jg
add
fmuls
adc
orb
jmp
sub
pushf
xchg
push
scas
out
inc
add
cltd
adc
loop
mov
and
aaa
xchg
cmp
lock
lock
push
and
sub
aam
test
dec
mov
push
lret
pop
xor
shll
inc
mov
shlb
and
mov
cli
icebp
insl
mov
adc
push
sarb
adc
mov
int3
push
mov
in
and
paddusb
outsb
pop
cs
mov
stos
xor
aas
xchg
das
jo
nop
lahf
outsb
adc
fisttpll
push
push
mov
or
sti
imul
xchg
xchg
mov
idiv
outsl
cmp
ret
repnz
add
ret
in
mov
cmp
cmpsb
in
sub
mov
scas
or
push
mov
jg
pop
push
testb
aas
bound
jge
fcoml
mov
stos
mov
negb
rcr
cmp
lock
fstpl
pop
xchg
call
ss
mov
jecxz
cwtl
stos
or
int3
inc
orb
enter
pop
inc
clc
push
mov
lods
nop
or
xchg
lcall
jle
imul
inc
xor
xor
sahf
int3
pop
loop
sub
cmpsb
pop
test
testb
add
xchg
or
cwtl
adc
ds
mov
stos
add
popa
dec
scas
lock
push
std
push
addr16
mov
or
not
sarl
mov
jg
xchg
lea
cmpsl
push
loop
xor
js
dec
lea
push
shrl
dec
push
call
outsb
dec
jb
xchg
jecxz
xor
stc
enter
je
push
addr16
loope
jp
inc
xchg
enter
orl
ljmp
pop
mov
push
push
dec
scas
and
out
out
mov
repz
mov
inc
pop
inc
pop
xchg
lcall
aaa
xchg
mov
or
mov
and
xchg
sbb
xor
enter
sbb
iret
repz
and
cmpsb
and
rclb
or
lea
mov
pop
xchg
shrl
sub
outsl
mov
xchg
mov
popf
jne
lret
aad
cmpsb
adcl
cmp
sbb
xorb
xchg
imul
test
mov
stos
xchg
lods
or
xchg
add
mov
gs
mulb
pop
xchg
add
cmpsl
mov
call
in
dec
movsl
mov
push
sahf
push
aaa
mov
inc
jb
mov
nop
lods
test
inc
mov
jg
push
sub
daa
sub
pusha
mov
ret
insl
jno
or
jo
nop
add
test
cmpsb
lcall
xor
jbe
adc
fstp
adc
xlat
shll
cld
mov
cmp
cmp
pushw
push
sti
loope
in
popa
shrl
daa
inc
pop
fs
push
cmc
lcall
inc
loop
popf
xchg
es
sbb
addr16
xchg
push
inc
dec
push
xor
jnp
pop
lods
in
xchg
sbb
dec
cmpsb
adc
jg
ljmp
lock
xchg
cld
and
pop
adc
xor
icebp
clc
cld
add
mov
cli
and
lcall
out
pop
cwtl
lods
xor
std
mov
jp
or
push
rcrl
mov
stos
lods
ret
hlt
pop
jle
push
sbb
ret
or
dec
add
fidivl
fnop
cmp
jl
dec
in
mov
or
and
sbb
adc
loope
test
lock
cmp
and
out
push
ja
mov
sub
xor
push
loop
dec
adc
ret
push
insb
mov
jle
ja
mov
scas
dec
dec
jo
iret
pop
adcl
dec
mov
add
lahf
mov
or
mov
test
mov
mov
mov
in
test
out
jecxz
insb
das
sub
adcb
adc
push
jb
jle
dec
loopne
mov
push
cmp
jbe
mov
push
cltd
leave
loopne
lock
mov
or
sbb
out
pop
xor
pop
cs
sti
mov
lret
insb
mov
mov
movsl
outsb
divl
or
xchg
add
rdpmc
notb
or
push
sbb
lahf
mov
lret
dec
aad
fdivrl
xchg
push
icebp
data16
test
enter
es
mov
lods
xchg
iret
movsb
xor
xchg
mov
js
in
gs
leave
lods
hlt
xchg
int3
ret
add
push
lds
jno
arpl
xchg
movsb
pop
cli
push
mov
xchg
fsubrl
gs
divb
pop
icebp
sbb
sarb
pop
pop
add
push
pop
sbb
xchg
test
mov
push
iret
fistps
cs
dec
or
call
sbb
inc
lock
dec
adc
xor
sub
aad
movsl
push
fbld
cli
js
adc
out
stos
xchg
inc
ja
call
xchg
fisttpl
ss
xchg
fsubrl
xchg
mov
leave
ljmp
cmpsb
xchg
and
jne
cmpb
fstps
xchg
jg
jmp
xchg
sahf
stc
pop
dec
pop
and
ja
fwait
aaa
addr16
jnp
popa
push
inc
inc
jmp
xor
roll
add
push
aaa
or
lds
mov
faddp
push
push
cltd
push
pop
les
ret
popa
dec
call
lret
dec
mov
mov
out
push
and
pop
test
ja
xchg
dec
movsl
xor
inc
push
sub
mov
stos
scas
push
push
cmpsl
and
sub
shld
mov
push
cmpsb
jecxz,pn
sbb
popf
fsubr
dec
xor
rol
incb
dec
aas
aaa
pop
and
aaa
mov
jb
outsb
jg
mov
or
cmpsl
mov
imul
sub
sarb
outsl
pop
inc
call
aaa
xchg
jg
addr16
shll
inc
mov
out
arpl
mov
mov
daa
or
lahf
sahf
negb
jae
adc
ss
lahf
sbb
jmp
movb
sub
sahf
sti
iret
mov
fwait
mov
or
pushf
inc
jl
in
cs
mov
mov
xor
ret
lds
dec
adc
xlat
jno
inc
stos
lahf
out
test
push
aas
adcl
inc
fwait
pop
jecxz
ret
push
mov
sub
fs
scas
xchg
or
ret
xchg
stos
icebp
mov
pop
cmc
inc
orl
or
iret
jp
ja
out
repz
mov
mov
movsb
mov
cmp
addr16
jno
hlt
out
push
jne
andb
cmc
clc
push
cmpsl
pop
add
out
aas
dec
pop
ret
fdiv
pop
shll
jae
jb
fdiv
sub
shlb
arpl
rorb
mov
xorb
movsl
scas
lods
xchg
fwait
loop
std
loopne
call
bound
jge
dec
inc
nopl
push
icebp
jo
xchg
adc
data16
frstor
jge
jecxz
into
lret
add
into
addb
out
dec
in
inc
pop
pop
clc
cli
ss
scas
xchg
lcall
lock
jne
dec
outsl
dec
into
dec
add
pop
jl
add
xchg
call
pop
mov
ljmp
fimuls
push
mov
cmp
popf
push
pop
pop
repnz
cs
cmp
dec
mov
stos
inc
call
inc
inc
fucomip
sbb
insl
push
push
popa
into
or
insb
pop
push
cmp
sahf
fistpl
das
push
pushf
fisubrl
jle
stos
sub
cmp
lret
push
cmpsb
mov
xchg
ljmp
mov
jp
jb
repz
jmp
leave
mov
xchg
and
mov
lret
ljmp
dec
push
add
dec
lock
ss
jae
pop
dec
cld
push
dec
cli
cmp
adc
in
and
xchg
adc
jns
push
adc
loopne
in
insl
sbb
jo
pop
stos
xchg
cld
pusha
mov
ret
mov
sbb
popf
sub
test
data16
ret
dec
loop
cmp
mov
push
pop
xchg
inc
insl
push
inc
or
jp
jg
push
loopne
adc
ret
sti
popw
xor
out
addr16
bound
sub
insl
pop
gs
cmp
aam
xor
fsubs
dec
fxtract
push
jno
pop
or
push
xchg
push
jbe
inc
xchg
in
lret
ds
mov
or
repnz
hlt
sub
sbb
loope
and
dec
out
inc
xchg
mov
push
lret
fcoml
inc
mov
jb
xchg
icebp
jb
mov
cmc
mov
inc
ja
andl
lds
xlat
mov
dec
mov
lods
push
shlb
shl
push
arpl
xchg
loop
test
mov
jns
adc
pop
lahf
orps
ds
je
xlat
sahf
pop
lahf
idivb
out
clc
rorl
push
aad
popa
in
sub
cmp
sub
mov
ret
ss
mov
cmpsb
jno
xchg
mov
adc
cmp
push
nop
pop
pop
cmpsl
divb
adc
mov
ja
mov
out
js,pn
or
mov
pushl
xor
mov
cs
jb
es
fwait
bnd
sub
xchg
jecxz
daa
xlat
idiv
or
add
xchg
or
jp
mov
testl
push
cwtl
push
mov
lret
push
das
jne
mov
mov
inc
xorl
pop
jge
sub
repnz
mov
push
mov
dec
pusha
and
pop
mov
outsb
andb
imul
cmp
lods
bound
mov
in
xchg
shrb
fstpt
jno
mov
hlt
inc
dec
jbe
push
or
lret
cmp
cld
icebp
add
movsl
lret
pop
and
loopne
stos
xchg
and
or
mov
mov
jb
out
je
clc
jge
inc
fimuls
mov
out
cmp
loopne
push
inc
mov
int
outsl
mov
and
jecxz
popa
push
movsb
in
sbb
xor
data16
lea
or
adc
inc
adc
in
fcmovbe
mov
mov
in
and
jbe
scas
xor
cmp
in
mov
call
adc
rep
or
add
rorl
xor
inc
ffree
dec
pop
jns
cs
and
or
push
lock
scas
test
repz
fldcw
push
test
push
sti
adc
mov
jmp
aad
fbld
imul
mov
push
mov
jne
and
inc
mov
jbe
test
jl
push
inc
pop
lret
pop
push
test
dec
stc
xchg
out
jge
scas
clc
sahf
loop
push
and
in
js
lret
and
push
sub
sub
mov
int3
in
dec
lcall
testl
sbb
xchg
out
mov
scas
cmpsb
xor
insl
dec
es
aad
fs
roll
scas
rcr
xchg
outsl
inc
jbe
aam
je
ljmp
cli
xor
cmc
jp
outsb
push
lea
push
mov
sub
sbb
dec
inc
sbb
fscale
jmp
cmp
push
gs
xorb
cmpsl
pushf
pusha
clc
les
stos
cmpsb
push
add
jle
lahf
cs
xchg
push
jp
inc
cmpsb
adc
mov
stos
loope
or
jg
push
mov
push
insl
adc
icebp
or
ljmp
addr16
push
stc
or
xchg
mov
cmp
add
ret
jmp
or
rorb
clc
dec
dec
movsl
jp
movsb
push
stos
inc
pop
push
inc
out
jo
jno
sahf
aaa
jg
and
pop
jp
sub
mov
push
bound
sbb
push
fidivs
outsb
loop
mov
pusha
ds
push
push
fidivrl
jge
sub
in
mov
xor
cmpsl
sbb
ficoml
std
fnsave
xchg
xchg
xchg
enter
add
hlt
jg
adc
xchg
imul
in
inc
repnz
mov
rorb
push
shl
loopne
icebp
mov
fidivs
adc
stos
mov
lret
cmc
push
mov
fmulp
cli
jp
sahf
movsl
add
out
leave
jmp
sbb
xor
and
or
pop
or
lds
test
cmpb
jb
ret
and
jle
in
daa
aad
adc
lcall
sub
in
jmp
daa
loope
mov
inc
scas
cli
addr16
out
adc
push
add
jle
cs
push
jne
sbb
xchg
out
xchg
cmpsl
mov
ret
test
xlat
push
int
xchg
in
push
int
scas
stos
out
add
in
pmullw
add
stc
mov
aaa
movsl
jno
cmp
cmp
cmp
cmpsb
jl
lods
xor
pop
int
fsubrl
sahf
cmp
jle
cli
inc
movsb
push
out
xchg
lahf
inc
pop
xchg
test
outsb
fildl
pop
and
cs
outsb
xlat
pop
lret
fucomip
sub
test
fistps
rorb
pop
into
xchg
mov
sub
imul
lret
inc
push
xchg
movl
inc
add
cmp
mov
ds
out
mov
jmp
xchg
pop
inc
jno
dec
inc
or
iret
js
lcall
mov
cmpsb
daa
cmp
push
inc
fistps
inc
imul
xor
sbb
mov
mov
or
cmp
inc
xor
scas
pop
mul
mov
clc
outsb
xchg
sub
sbb
pop
out
adc
mov
in
jno
dec
add
enter
addr16
mov
in
inc
inc
aaa
xchg
dec
jle
inc
je
out
dec
or
push
test
xchg
fwait
inc
and
out
xchg
sbb
mov
xchg
xor
lret
lods
xlat
push
es
sbb
scas
repnz
cmp
xchg
ljmp
adc
push
or
push
mov
cmpsb
pop
outsb
pop
divb
stos
data16
mov
jmp
test
lahf
xlat
sarb
out
out
push
loop
push
bound
aas
add
inc
call
aas
cmc
in
hlt
jb
push
enter
jb
push
mov
out
mov
fistl
pop
pusha
outsl
in
xchg
cmp
sbb
xor
dec
ljmp
scas
imul
movsb
int
iret
arpl
call
lcall
xchg
jno
cmp
sahf
shlb
imul
push
sub
adc
push
lcall
inc
adc
xor
iret
pop
je
and
pushw
or
lds
lret
fdivrp
sti
imul
stos
mov
cs
data16
inc
scas
mov
push
outsb
inc
inc
adc
adc
pop
cmpsl
xchg
dec
or
sub
adc
pushf
pop
loopne
push
pop
sub
adc
and
lock
test
xor
or
stos
daa
scas
sbb
mov
and
addb
sbb
popf
mov
fidivrl
sub
pusha
nop
movsb
pop
arpl
std
test
addr16
ss
into
cmp
jge
inc
mov
or
and
mov
iret
es
pop
fldl
data16
data16
pop
sbb
sub
sub
pop
or
fs
aas
and
das
es
push
aaa
mov
inc
into
mov
push
sub
xchg
sub
inc
or
pop
push
popf
cmp
sub
iret
sub
jno
test
in
xchg
enter
sub
dec
imul
cld
ss
out
inc
push
dec
test
mov
mov
test
add
sbb
into
dec
sub
dec
mov
push
cmp
dec
leave
mov
in
add
sbb
test
aas
sbb
and
xchg
sub
sahf
fs
daa
adc
add
push
mov
and
jge
insl
outsb
xchg
mov
cltd
arpl
ds
jae
inc
push
add
mov
lahf
loopne
mov
pop
mov
repnz
outsb
xor
add
pop
es
jmp
outsb
cltd
sub
xlat
mov
and
js
xchg
lods
sub
push
xchg
in
je
inc
outsb
cmpsb
into
jle
aas
loopne
jbe
sbb
inc
xchg
daa
out
subb
hlt
and
pop
mov
lock
push
dec
notl
cmc
add
shrl
bound
push
sbb
test
js
clc
subl
mov
nop
popa
adc
push
and
mov
les
ss
xlat
fxsave
mov
pop
in
hlt
xor
cmp
fsin
movsb
imul
sbb
xchg
cmp
or
movsb
push
bound
outsb
out
jle
push
scas
or
mov
andl
sbb
xchg
addr16
xchg
nop
mov
cs
cwtl
lea
in
xchg
pushf
out
push
movsb
fildll
lock
mov
cli
xchg
push
and
and
mov
sarb
repz
outsb
sbb
lcall
push
ja
xchg
fptan
add
in
dec
loope
jmp
test
iret
push
es
jb
test
push
xchg
enter
dec
int
mov
pop
loopne
jne
mov
xchg
lret
inc
pop
cmpsl
test
sahf
mov
rol
adc
jge
inc
or
xlat
and
or
and
aas
int3
ret
adc
ljmp
xchg
in
lods
loope
cmp
xchg
lods
cwtl
or
mov
jg
push
add
dec
pop
pop
enter
in
pushf
xlat
push
cmpsb
outsb
std
sbb
push
jo
js
ds
push
pop
lea
dec
xchg
xor
xchg
dec
stos
js
and
and
add
xor
mov
dec
pop
mov
rorb
les
call
decb
xor
ret
sub
push
inc
dec
jle
insl
mov
andl
shl
push
ror
ret
fmulp
stos
mov
into
in
mov
scas
dec
js
mov
mov
lock
xor
push
sti
add
or
xchg
test
dec
cmp
idivb
lahf
and
mov
shll
mov
loopne
add
mov
testl
roll
lret
sbb
mov
jecxz
aaa
adc
push
jg
fidivrl
shl
xchg
fdivrs
push
lods
fidivl
inc
stos
adc
adc
lcall
mov
dec
test
test
and
gs
pop
mov
add
mov
dec
lret
sub
jbe
and
mov
adc
cltd
stos
jl
pop
retw
inc
mov
cmpsb
adc
in
add
mulps
popf
je
jle
orl
sub
push
sub
enter
stc
jnp
in
popl
fcmovnu
mov
shlb
movd
pop
cmpsl
aam
mov
rcrb
enter
inc
sbb
outsl
js
hlt
ds
cmp
sbb
adc
idivb
ja
adc
dec
jb
das
push
push
push
nop
mov
js
pop
sbb
pop
pop
adc
pushf
cltd
push
jg
dec
fidivrs
adc
xor
xchg
mov
mov
xor
test
mov
mov
filds
in
mov
mov
dec
lahf
mov
loop
jmp
and
push
sub
lods
pop
sub
flds
outsb
xchg
xchg
jnp
aam
cwtl
repz
imull
into
add
push
mov
testl
in
out
sarb
mov
fadds
fs
ret
mov
push
adc
loop
inc
out
pop
xlat
dec
xor
adc
add
and
cmc
outsb
cld
rolb
inc
mov
and
mov
imull
fimuls
mov
test
push
icebp
out
cmp
adc
lcall
loop
daa
inc
xchg
cmp
bound
mov
int3
div
xor
mov
dec
js
pop
dec
xchg
int3
mov
mov
movsb
xchg
sbb
mov
enter
add
mov
jo
aaa
mov
add
scas
or
adc
jge
cmpsb
xor
lods
loopne
iret
lock
push
jbe
mov
jne
cwtl
subl
scas
jnp
jl
ds
add
movl
aas
cmpsb
sbb
addr16
cmp
mov
pop
xchg
gs
inc
cmp
inc
push
popf
xchg
and
and
ja
out
sub
sub
jp
hlt
ret
or
add
int3
cmpsb
lods
and
pop
adc
js
sbb
push
jne
int
sbb
inc
out
ror
pushf
setge
test
hlt
dec
insb
mov
mov
xchg
xchg
xor
pop
xor
sbb
sbb
fbstp
fdivrs
sbb
divb
cmpsb
add
hlt
fmul
add
push
pushf
cmp
clc
mov
inc
sbb
lret
movsl
ret
mov
arpl
out
dec
outsb
test
out
add
es
jp
mov
mov
pop
and
int
push
lods
ss
and
scas
fistpl
clc
mov
xor
push
js
insb
das
aaa
mov
cld
stos
jb
push
push
adc
int3
outsb
pop
sbb
int
xchg
int
mov
loopne
and
sbb
xchg
xchg
jge
popf
aad
pusha
push
cwtl
in
adc
inc
xor
pushf
test
push
add
sbb
and
pop
jmp
cltd
jle
lock
jbe
lock
xor
in
sub
in
data16
out
insl
mov
pop
cmp
mov
pop
jp
sbb
mov
xchg
and
cmp
repz
dec
call
das
roll
std
sbb
ja
mov
je
lcall
shrb
mov
and
popf
jp
jno
xor
pop
sbb
adc
xor
mov
mov
scas
push
mov
mov
aaa
cmpsb
mov
cwtl
in
lcall
adc
push
sbb
and
sub
mov
out
int3
add
fsubrs
jge
push
push
sbb
in
inc
mov
aad
adc
popf
out
sbb
outsb
inc
inc
test
mov
cmp
es
pushf
int3
mov
jmp
push
mov
gs
je
pop
push
cltd
ja
xor
arpl
push
std
or
cmp
and
mov
dec
in
in
es
inc
nop
out
mov
fisubrl
in
sbb
push
into
push
in
je
nop
negb
add
sbb
out
mov
mov
and
pop
mov
and
xor
aad
pushf
sbb
lret
xchg
movsl
mov
push
leave
loopne
dec
push
pop
fs
mulb
shrl
xor
or
jp
cmc
mov
cld
xchg
pop
lock
mov
pushf
pop
int3
data16
inc
cmp
rclb
das
cmpsb
xchg
adc
cmpsl
mov
pop
cmp
adcb
jmp
jne
mov
roll
in
mov
jl
std
mov
jle
xchg
incb
jb
aaa
scas
add
sub
lds
cmp
lret
loopne
lret
mov
mov
pop
fmul
lahf
sbbl
or
popl
andb
sbb
frstor
pop
mov
stos
repnz
push
cmp
and
jbe
mov
mov
loopne
fimuls
loope
mov
fcmovbe
pushf
pop
movsl
inc
inc
inc
mov
sub
mov
cs
jne
data16
inc
jbe
aas
or
dec
popa
shll
push
insb
mov
pop
and
mov
dec
push
insl
sbb
mov
arpl
fidivs
rcrb
ds
fisttpl
fcmove
pop
pop
mov
rcr
lret
dec
fldl
repz
sarb
mov
ljmp
push
fisubrl
imull
dec
sub
inc
add
decb
adc
movl
xchg
nop
mov
mov
test
pusha
mov
pusha
fs
cmp
or
cmp
cli
or
aad
fbstp
mov
shlb
test
mov
jle
mov
sarl
popa
int3
inc
enter
aad
pop
into
sbb
std
cmpsb
rclb
imul
jnp
imul
pop
add
sbb
rol
pop
xor
push
xor
leave
push
pop
push
loope
cs
push
rcl
dec
shl
push
push
sbb
pop
mov
cwtl
cmp
gs
sarb
inc
dec
sbb
clc
into
js
int
xchg
cmc
test
sbb
addr16
pop
add
or
pcmpgtb
jns
jbe
pop
pop
stos
subb
sbb
out
jl
xchg
or
ret
out
push
xchg
pop
mov
ret
jg
pop
add
push
or
scas
mov
pop
pop
add
adc
push
jecxz
add
lcall
lret
push
xchg
xchg
adc
lods
push
lret
cmp
cli
or
sar
sub
leave
out
pusha
insb
push
lahf
paddd
dec
dec
inc
enter
dec
js
xorl
movsb
push
mov
or
push
jnp
mov
mov
pop
or
testl
arpl
push
das
data16
in
mov
leave
sbb
inc
fcompl
push
jp
lret
jns
addr16
sub
es
iret
xchg
jne
jo
pop
mov
test
in
xchg
mov
ss
dec
sbb
pop
outsb
cmc
ljmp
cli
lods
or
es
es
popa
ss
fs
push
mov
int
push
call
pusha
xor
pop
jg
test
push
sti
mov
xor
js
mov
lds
mov
into
cmp
push
jl
inc
dec
sbb
mov
or
sub
push
fsubrs
iret
lods
lret
xchg
stos
movl
dec
nop
push
push
lock
popf
shrl
mov
and
aas
cli
shl
cmc
les
or
dec
cmp
loope
outsb
jno
aaa
jg
sti
and
push
mov
insl
arpl
je
clc
mov
mov
mov
xchg
stos
xor
sbb
lret
ljmp
ret
xchg
leave
sarl
dec
xchg
pop
push
push
insb
das
ja
adc
pop
mov
mov
call
push
mov
mov
push
cwtl
add
stos
jnp
and
fnsave
dec
out
enter
lods
inc
sub
push
adc
fcoms
jmp
scas
loopne
and
mov
frstor
push
add
shlb
std
movsb
cmpsl
in
sbb
das
fwait
mov
mov
xlat
push
cwtl
xchg
mov
mov
sahf
jmp
imul
inc
push
mov
jo
push
adc
stc
add
cmpsb
adc
xor
cmp
popa
cltd
fisttps
or
pop
scas
push
sarl
jg
das
hlt
xchg
das
mov
inc
push
jecxz
stos
cmc
and
clc
sub
leave
mov
popl
movsl
mov
cmp
int3
idivl
std
pop
out
jb
insl
pop
lret
jb
jb
call
pop
push
ficoms
dec
sahf
call
lret
jnp
fwait
cmp
dec
dec
xor
xchg
mov
xor
orl
mov
cmp
outsl
mov
in
clc
fstsw
xchg
es
xor
pop
int
push
fiadds
adcl
or
inc
mov
stos
gs
xor
jp
js
leave
lret
dec
clc
push
cli
jp
xchg
insb
fcmovbe
fsubrl
stc
mov
and
push
mov
rcll
jo
test
dec
repnz
jmp
sub
mov
cmp
jne
andl
lods
inc
adc
cltd
sbb
inc
or
pop
cs
fcoms
ds
xchg
andb
imul
mov
cmpsl
push
mov
movsb
and
repz
cmpsb
dec
data16
mov
sub
mov
in
addb
or
aas
fsubl
jbe
into
rclb
pop
int
outsb
xchg
add
test
jle
jecxz
icebp
cmp
jle
jo
loope
mov
mov
stc
imul
xchg
inc
push
andl
outsb
pushf
rol
xchg
jecxz
bound
pop
outsl
jmp
jmp
cmpsb
loope
add
insb
imul
and
mov
ss
not
xchg
in
ficomps
shr
push
enter
jg
repz
insb
jg
mov
jo,pt
scas
pop
mov
pop
mov
outsb
inc
rorl
mov
jbe
sti
mov
sbb
mov
xor
mov
adc
fsubp
mov
cld
scas
adc
insb
loopne
lcall
clc
dec
xor
cmpsb
add
cvtps2pd
hlt
clc
addr16
xchg
popf
icebp
mov
inc
das
hlt
loopne
or
push
fnstcw
mov
popf
pop
mov
mov
sahf
pop
dec
ficoml
das
sbb
rcrl
mov
hlt
jl
insl
push
leave
and
stos
and
outsb
bound
hlt
add
jge
seto
addr16
jo
push
push
mov
push
jecxz
jbe
sub
mov
pop
mov
sbb
pop
fimull
fmul
adc
call
aas
ja
out
dec
mov
push
mov
ss
lret
ss
popf
cwtl
scas
inc
mov
push
sub
and
stos
adc
pop
jno
rorb
push
fldcw
jnp
mov
mov
scas
pop
pop
movsl
pop
int3
mov
insb
mov
out
bswap
iret
lahf
out
out
enter
rcll
mov
xlat
xor
cmpsl
push
and
les
sbb
insl
aam
cmpsb
inc
push
jb
es
cmp
or
sbb
dec
sbb
arpl
push
insl
scas
jg
out
ret
movups
in
push
or
insb
outsl
ret
or
inc
and
mov
lds
test
adcb
loop
arpl
ss
pop
sarb
je
xor
ret
inc
mov
out
mov
adc
insl
jnp
lea
out
mov
push
lret
lahf
negl
ds
dec
mov
jecxz
pop
js
addr16
pop
jle
sbb
push
out
rol
adc
add
xchg
adc
out
mov
emms
jne
jmp
cmpsl
inc
adc
ljmp
xchg
xchg
xchg
jg
pop
enter
movsl
loope
sahf
push
add
xchg
jne
rorb
shl
into
mov
jb
insl
adc
xlat
addr16
jl
cs
and
cmp
pop
shlb
mov
mov
pusha
test
es
inc
cmpsl
lea
push
push
nop
sub
jbe
jp
fistps
sahf
cltd
mov
or
adc
hlt
mov
add
daa
jl
cs
cs
jbe
in
neg
cmp
inc
xchg
gs
lcall
push
cld
int
push
mov
in
mov
out
cmc
in
cmpsl
xor
clc
sub
push
icebp
sbb
sub
filds
imul
adc
into
xlat
dec
sbb
inc
repz
dec
rcl
or
daa
fwait
and
sub
lcall
pop
or
rclb
mov
es
cmpsl
pop
fnstenv
scas
jbe
clc
das
cmpsb
fsts
stos
dec
sub
jle
or
pushf
pop
fsubrp
into
popf
fisttpl
cmp
and
jecxz
inc
mov
iret
ret
cli
xchg
cmc
add
lcall
adc
push
push
xor
and
push
insb
rclb
cmp
addr16
mov
pop
sbb
rcrl
or
mov
out
daa
enter
outsl
fs
xchg
repz
jge
scas
jns
mov
and
jmp
pushaw
loope
sbb
faddp
sbb
shl
leave
outsb
jmp
cmp
mov
lods
lret
adc
orl
inc
cmp
xchg
lods
xchg
ret
cld
daa
mov
std
mov
sbb
jmp
mov
test
mov
insl
jmp
bound
das
add
pushf
xor
cwtl
pop
fisttpl
inc
jb
inc
fcoms
fbstp
arpl
dec
jne
pusha
xchg
jmp
cmpsb
shrl
jnp
sub
mov
fsubl
mov
sub
incl
xlat
int
fs
push
in
das
std
pop
inc
insl
push
out
lock
lea
insl
mov
push
push
dec
mov
nop
mov
call
adc
aas
pop
movsb
pop
adc
adcl
ljmp
daa
in
pop
and
call
cmp
mov
movsl
cmp
mov
sbb
pop
jns
aas
ret
lahf
xor
in
lahf
inc
subl
arpl
test
sahf
sub
cmpsb
daa
aam
xchg
mov
leave
sbb
adc
in
cmpsl
das
lea
enter
jbe
mov
or
mov
clc
push
dec
inc
xchg
pusha
and
and
ret
addr16
pop
roll
xchg
cmp
fidivrs
loopne
enter
xorl
mov
xchg
call
adc
jo
ss
cmc
adc
mov
jl
and
cs
fldenv
xcrypt-cbc
cmpsl
push
jbe
icebp
sub
loope
dec
xlat
ud0
push
jae
fisubl
popf
shlb
xlat
mov
push
sti
fiaddl
movl
shlb
cmc
push
jmp
scas
lahf
dec
pop
out
ss
fisttps
andb
cmp
aas
je
adc
in
xchg
dec
fmuls
jecxz
lds
das
cld
repnz
jbe
mov
addr16
xor
nop
sub
dec
ja
xchg
jp
and
in
or
sbb
pop
imul
adcl
sbb
add
lock
jg
leave
sub
mov
mov
dec
jmp
add
ljmp
dec
sub
dec
xchg
xlat
das
outsb
xchg
push
and
cmp
xchg
in
and
inc
aam
negb
dec
dec
mov
add
sub
lods
divb
sbb
push
scas
pop
jle
lcall
subl
xor
pop
push
es
push
jmp
push
and
push
inc
ret
aaa
pop
push
idiv
jbe
sbb
fcoms
add
push
shll
iret
ret
insl
inc
cwtl
fcoml
repnz
push
mov
js
enter
scas
xchg
cmc
imul
mov
xchg
fldcw
mov
cmp
pop
push
and
cmc
ss
cmpb
std
mov
or
jge
mov
pop
adc
push
adc
jp
pop
testb
in
inc
js
adc
rcrb
data16
orb
pop
mov
cld
cmp
xlat
lretw
pop
addr16
inc
push
jmp
mov
lds
sbb
loope
jno
add
int
scas
insl
cli
test
pop
out
fbstp
sbbl
xchg
lret
out
xorb
cmp
popa
adc
insl
fsubrs
insl
cwtl
sub
mov
push
lcall
pusha
push
pop
lahf
in
scas
xor
xchg
fwait
out
test
pop
cmpsb
cltd
stos
xchg
dec
cmp
repnz
idivl
int3
add
cmp
and
clc
jbe
jns
sti
sub
mov
scas
sbb
push
inc
dec
mov
or
adc
jg
mov
mov
lcall
and
pop
in
or
cmp
lret
pandn
leave
fcoms
in
sbb
into
repz
pop
xor
jg
jns
inc
push
mov
mov
mov
xchg
not
insb
jbe
mov
mov
mov
test
xor
aas
scas
fptan
mov
daa
or
mov
in
arpl
es
in
mov
mov
mov
push
out
addr16
mov
test
loope
nop
rolb
xchg
xlat
jb
out
enter
sbb
fidivrs
xchg
adc
xchg
inc
cmp
push
mov
fdivrs
imul
out
push
aas
fwait
push
push
add
push
mov
push
call
dec
fnsave
mov
jg
dec
es
es
repz
in
cwtl
add
cmc
sbb
dec
pop
leave
push
mov
repz
lret
mov
cwtl
mov
hlt
jns
scas
sub
comiss
mov
cs
adc
andb
push
sub
jp
push
fcoms
pop
into
dec
out
xchg
mov
out
loope
test
xchg
imul
mov
mov
jp
inc
mov
push
push
pop
int
shrb
out
dec
mov
and
pop
pop
xor
dec
sbbb
repnz
lods
stc
pop
test
pusha
mov
sub
inc
cmp
jbe
into
or
mov
ja
aad
sub
jmp
inc
mov
or
fdivrs
loop
adcb
es
push
shrl
fisttps
test
addr16
xchg
push
jl
sbb
scas
fdivrs
sbb
jo
dec
pusha
out
ds
xchg
iret
push
pop
bound
aad
gs
lods
loope
dec
adc
int3
lret
les
mov
sti
jle
push
inc
leave
andl
ds
loop
imull
das
mov
sub
cltd
fdivl
inc
push
adc
mov
daa
out
xchg
adcb
pusha
test
mov
decb
sar
das
mov
xor
aad
test
lds
mov
or
stos
mov
cmp
pusha
imul
movsl
pop
inc
push
outsl
sub
pop
mov
pop
hlt
jle
fcomps
jae
pop
fsubs
lea
xor
xchg
aam
xchg
xchg
cmpsl
sub
mov
roll
xorb
movsl
mov
aaa
sar
jnp
jns
or
adc
xlat
fisttpll
xor
unpcklps
push
jnp
mov
out
gs
out
scas
daa
dec
mov
adc
or
dec
sahf
dec
jg
jmp
in
pop
int3
jmp
push
fnstenv
sahf
dec
scas
dec
pusha
mov
xchg
inc
adcb
out
jbe
and
mov
dec
xchg
cmc
mov
movsb
in
xchg
cmpsb
loope
mov
mov
push
leave
adc
out
addr16
or
shlb
les
adc
in
jle
ljmp
add
jno
aas
jne
shrl
pop
xor
jnp
push
jl
mov
jl
inc
push
pushf
inc
pushl
mov
test
das
andb
fs
icebp
loope
dec
cs
push
lahf
xor
mov
dec
lock
out
push
jbe
sbb
mov
mov
jbe
dec
push
mov
lret
inc
cmp
lds
xchg
mov
jmp
pusha
add
pop
mov
cmp
pop
pop
movsl
cmp
outsl
outsl
lret
cmpsl
pushf
test
in
aad
movsl
out
mov
add
cltd
flds
decb
aad
push
pop
xchg
jl
jns
insb
lret
loop
or
mov
je
or
ficompl
cmpb
sbb
add
das
ja
idivb
add
mov
shlb
fs
jb
fidivs
jl
fistl
out
pop
dec
jmp
mov
jns
push
pop
ret
lea
decb
mov
scas
fwait
scas
mov
je
pop
mov
inc
in
xchg
lock
iret
std
outsl
and
push
das
mov
iret
inc
push
xchg
scas
mov
insl
int3
lods
add
push
and
mov
fisttpl
jb
sarb
sti
insb
repnz
mov
out
sub
sbb
jp
daa
jmp
mov
pop
jae
inc
mov
xchg
sub
adc
scas
ja
ret
icebp
movsl
aad
fistpll
sti
adc
fsubrp
xchg
neg
std
jmp
pop
cmp
mov
lods
imul
inc
xchg
add
imul
lret
xlat
mov
stos
shll
pop
add
or
dec
jnp
imul
arpl
xlat
cmp
or
cmc
in
pop
or
aad
pop
in
add
cmpsl
sub
movsl
push
push
pop
aaa
pop
leave
adc
loopne
xlat
test
push
push
pop
jae
std
call
lahf
xchg
mov
fildl
jg
or
addr16
in
aad
dec
push
jmp
out
cmp
out
stos
and
addl
cwtl
mov
pop
mov
fdivs
add
pop
shll
sti
ret
sub
sbb
lcall
das
into
cmpsb
stos
out
lods
filds
adc
dec
sbb
imul
std
movsb
pop
cmpl
add
sahf
ljmp
inc
mov
iret
jge
loopne
jnp
push
iret
cmpsl
inc
jl
loop
push
ja
in
cwtl
sbb
cmpsb
cmc
xchg
mov
mov
push
and
hlt
xchg
push
shrl
sub
cmp
ss
mov
cmc
pop
cs
in
pslld
scas
mov
push
mov
jo
in
push
movsl
mov
ss
mov
cmc
cmpsb
dec
push
or
fidivrl
dec
fiadds
pusha
gs
push
or
push
ss
adc
or
adc
mov
xor
leave
mov
jne
ret
ss
aaa
ret
push
sub
inc
mov
push
outsb
dec
call
lods
insl
mov
push
cld
iret
push
dec
mov
pop
jle
fildll
mov
in
pop
sahf
ja
pusha
imul
push
out
int3
js
out
jle
leave
insw
mov
xor
adc
adc
cmpsb
push
js
addl
cmpsb
fiadds
push
mov
rcrb
aas
push
mov
xchg
inc
incl
or
loop
mulb
insl
push
mov
mov
pop
sub
cmpsl
pusha
sbb
mov
jnp
ficomps
ficoml
sub
popa
aad
mov
pop
adc
stos
dec
pop
push
adc
and
fisubrs
lods
ror
add
lods
push
and
xlat
jle
aaa
sti
loope
filds
ror
insl
push
fistps
pop
inc
je
out
sub
push
push
movsb
fdivrl
lret
inc
xchg
scas
int
lret
ficoms
inc
out
out
mov
dec
inc
mov
xor
out
fidivrs
or
mov
push
pop
leave
mov
sahf
nop
sahf
inc
sub
fisttpll
fwait
inc
lods
adc
mov
shl
xor
pop
arpl
pop
push
lods
or
aas
sbb
mov
cmpsb
scas
jge
cmp
out
xchg
xlat
push
jge
dec
jns
sbbl
pop
scas
lret
mov
lahf
imul
das
insl
data16
mov
ficomps
mov
lcall
in
add
hlt
mov
mov
pop
out
push
leave
mov
cmp
jle
bound
mov
mov
es
mov
sub
add
sub
and
movsb
mov
and
outsl
aam
fbstp
arpl
adc
popa
xlat
jmp
pop
jle
fsub
xchg
repnz
fcompl
mov
pop
inc
mov
aam
cs
and
cmpsb
jl,pn
pop
pop
adc
fsubrl
mov
daa
int
xor
jnp
xor
fcmovb
in
out
js
out
and
cmp
fsubs
push
arpl
sub
jecxz
xor
pop
cmc
and
inc
scas
outsl
stos
mov
es
pop
mov
rcrl
adc
mov
jg
mov
xchg
jl
dec
jl
cmp
negl
out
adc
lds
sub
lahf
fistps
sub
push
repnz
jnp
xor
xorl
mov
js
xor
insb
mov
adc
mov
das
xchg
cli
fcmove
xchg
adc
xchg
test
jbe
cmp
mov
xlat
rorl
ja
lcall
dec
xlat
add
sbb
cmp
inc
or
mov
jmp
add
mov
pop
test
jp
mov
push
or
out
pop
out
push
movsl
xchg
adc
jne
fstl
in
xchg
stos
and
shlb
push
push
xchg
adcb
sub
ds
pop
pusha
dec
dec
or
or
mov
mov
mov
jle
push
xchg
mov
add
rorb
or
les
negb
inc
jl
pushf
push
jecxz
xchg
test
insb
roll
pusha
xchg
je
js
and
xchg
or
lret
push
sub
inc
lock
inc
enter
psubq
int3
mov
aad
dec
mov
imull
mov
push
jo
clc
jp
inc
scas
cmp
xchg
movsl
dec
jns
mov
scas
pop
pop
pushf
ss
jecxz
fnstenv
xchg
jp
dec
ljmp
mov
enter
notl
test
adc
add
pop
das
xchg
xchg
lahf
ljmp
xor
outsl
ret
aas
add
xchg
sbb
repz
das
or
cli
shl
gs
es
cwtl
scas
dec
cld
mov
in
mov
jp
sub
sbb
pavgb
iret
push
rorb
faddp
sbb
pop
outsb
mov
jnp
and
fcmovbe
movsb
shlb
dec
inc
dec
mov
out
pop
adc
mov
test
in
in
jnp
ds
repz
dec
inc
out
or
scas
or
xchg
ja
cli
dec
ds
hlt
inc
mov
iret
pop
pop
mov
mov
push
dec
sub
repnz
jae
push
jne
movsl
in
pop
out
repz
cli
into
ss
mov
xlat
mov
or
jp
add
cltd
int3
dec
cmp
jb
mov
mov
xchg
in
jp
repz
cltd
mov
mov
ljmp
pop
dec
jl
jbe
sbb
cmp
sub
icebp
xchg
pop
aaa
scas
and
clc
lahf
fisubrl
sbb
sub
mov
rol
addr16
push
repz
aas
add
out
add
jg
jns
cmp
jbe
outsb
negb
cwtl
mov
jg
pop
pop
inc
mov
stos
push
insl
data16
push
jns
imul
xlat
test
out
sbb
mov
push
pop
dec
imul
lods
pop
push
popf
mov
jg
mov
sbb
faddl
adc
cwtd
dec
sub
std
daa
mov
lahf
popa
adc
mov
mov
or
push
not
roll
std
mov
push
mov
hlt
filds
repnz
sahf
orl
push
sarb
mov
mov
sbbl
das
arpl
and
loop
fiadds
lret
pusha
fstpt
jle
inc
pop
test
push
jle
or
imul
clc
fs
int
xor
dec
daa
xchg
inc
sbb
inc
mov
pop
dec
sub
sbbl
pop
or
popa
daa
xor
out
dec
jb
data16
mov
push
rcrb
das
daa
mulb
scas
mov
add
sub
xor
sti
loopne
fistl
lods
sahf
rolb
dec
mov
jge
mov
jno
jp
subb
lret
out
inc
data16
mov
pop
arpl
xlat
orb
data16
loop
loop
bswap
and
sub
sbb
ds
sahf
scas
and
xchg
and
cmpsb
or
pop
push
inc
lds
aam
jae
dec
push
ret
mov
push
adc
test
rclb
ja
xchg
arpl
push
adcl
xchg
sahf
rcrl
xor
mov
mov
bound
loop
sub
inc
jmp
jnp
lcall
movsl
push
or
sbb
mov
push
imul
into
pop
mov
iret
je,pt
clc
jp
out
dec
xlat
mov
pop
push
movsb
sahf
inc
in
cltd
dec
inc
adc
xlat
adc
imul
and
xor
test
mov
cmpsb
fwait
scas
or
dec
jno
sti
loop
xchg
hlt
inc
notb
pop
iret
sahf
or
jg
xchg
jo
inc
ja
mov
sti
sbb
xchg
sti
mov
xchg
movsb
jno
push
pop
xchg
add
stc
movsb
cmp
lods
push
ljmp
dec
adc
js
push
mov
je
xor
pop
inc
push
jnp
push
out
lcall
sub
outsl
clc
cmc
in
mov
mov
cmp
dec
cmpsb
sub
cmp
ja
in
inc
sahf
out
pop
mov
cmpsl
and
out
add
mov
js
inc
cmp
fbstp
es
jbe
icebp
sbb
sub
xchg
ss
fldcw
aas
je
sbb
inc
or
fidivrl
lret
pop
movsl
xchg
rclb
mov
rclb
outsb
cs
lcall
adc
lock
dec
push
mov
pop
in
cmpsl
ja
xlat
mov
sbbb
dec
inc
sub
jle
clc
sbb
push
mov
push
jge
mov
pop
add
enter
push
xor
inc
pop
arpl
rcrb
out
jg
out
int
push
inc
subb
loop
mov
pushf
test
int3
push
pop
jg
ret
sar
adc
rcl
stos
lock
outsl
sti
outsb
lock
xchg
nop
lods
inc
not
icebp
sahf
outsl
xchg
xchg
in
nop
stos
clc
test
push
push
into
cwtl
cmpsl
rcl
push
mov
ret
stos
cmp
das
es
out
sbb
les
mov
pop
sub
loope
sbbl
jl
int
mov
and
sbb
inc
jbe
repz
mov
xchg
jg
lahf
out
cmp
inc
xchg
xchg
cli
jmp
in
sbb
jo
mov
test
mov
jmp
xchg
comiss
shl
mov
jnp
jno
cmpsb
push
jne
mov
and
mov
pop
pop
daa
movsb
mov
out
fs
jbe
jnp
and
sbb
mov
and
cmp
push
push
push
mov
pop
add
mov
push
lods
cwtl
or
or
push
sub
push
in
jmp
pop
outsb
cmp
movl
push
fwait
das
sbbb
or
mov
mov
cmp
jbe
jmp
dec
dec
cmp
pop
pop
cltd
mov
xchg
cmpsl
dec
mov
pop
adc
sti
aad
inc
push
sar
xchg
inc
cltd
out
mov
das
ja
sub
stos
jl
out
jp
jecxz
jns
int
inc
xchg
jo
out
inc
xchg
cs
cmp
cmovne
outsb
pop
popa
pushl
push
push
out
repnz
push
fsubl
jge
js
scas
int3
xsha256
cmpsb
push
mov
int
push
mov
pop
stos
sbb
push
out
and
pop
popa
xor
or
es
and
jmp
fbld
hlt
outsb
das
xchg
sahf
push
adc
dec
gs
jp
jg
jo
fistps
ffreep
pop
mov
insb
push
push
mov
aad
dec
aad
inc
mov
mov
mov
mov
fisttpl
mov
nop
out
rcll
jb
cmp
sbbb
mov
xor
into
and
inc
cmp
cltd
enter
movsl
add
das
sbb
xchg
cmpsb
lock
ret
push
dec
call
repz
fsubr
adc
pop
call
jne
xchg
lods
cltd
pop
add
aaa
dec
aas
scas
iret
xor
into
mov
cltd
mov
add
jle
or
mov
sarl
cmp
cld
push
es
mov
or
das
mov
adc
or
xchg
mov
sbb
add
push
fdivs
imul
dec
cmpsb
cltd
cwtl
xchg
sarl
adc
adc
ret
ficoms
test
clc
sub
pop
push
dec
mov
xor
sub
push
adc
xchg
mov
negl
fidivrs
sbbb
repnz
movsl
loop
sbb
pop
mov
int3
jo
stos
cmp
sbb
add
dec
cmp
outsl
pop
and
jl
xlat
ret
or
jle
je
jo
sbb
out
pop
push
fisttps
add
sbb
mov
push
mov
lods
add
sub
mov
fstpt
jnp
inc
xchg
mov
iret
xchg
jle
mov
out
lcall
loope
pop
inc
mov
mov
mov
jnp
repnz
js
mov
pop
xchg
out
icebp
jp
sub
xor
fdiv
mov
push
push
push
jne
mov
fstpl
out
lea
pusha
lds
and
push
xchg
std
jge
add
dec
sbb
lret
rolb
scas
xor
inc
inc
hlt
ds
ret
in
jo
lds
addr16
ss
jl
rcll
cmc
scas
test
cmp
stos
xchg
iret
mov
lret
ja
outsl
jne
dec
js
push
push
mov
push
lea
pop
aas
out
into
adc
mov
mov
aaa
xchg
fisubrs
stos
iret
mov
xor
mov
cwtl
adc
cmp
lar
pop
pop
adc
and
sub
pop
rclb
mov
mov
into
xchg
roll
and
in
movsl
daa
or
ficomps
adc
mov
iret
and
push
mov
lds
sbb
in
or
pop
aaa
push
pop
imul
adcl
jb
sti
stc
lret
xchg
into
inc
lahf
outsl
cmpsl
iret
test
lock
lods
xchg
mov
dec
inc
out
leave
bnd
or
rorb
cmp
xchg
mov
cmc
and
popf
adc
jp
mov
inc
push
nop
dec
push
sub
enter
push
adc
ss
and
movsb
addb
int3
inc
pop
xchg
add
sarb
inc
mov
hlt
add
xchg
add
pop
stos
mov
lahf
adc
fwait
mov
jns
out
xchg
mov
xchg
sbb
pop
or
cmp
and
insl
mov
pop
xchg
lcall
fisttpl
xchg
sub
jg
outsb
fdivl
jg
aas
cmp
xor
ljmp
neg
stos
inc
loope
sbb
mov
mov
jl
cwtl
neg
inc
ret
lods
inc
mov
mov
pop
push
iret
sbb
push
mov
jge
or
repz
fists
adc
into
dec
xor
out
test
jb
dec
add
add
test
mov
mov
push
sbb
mov
or
sub
insl
xchg
ds
into
adc
lea
jnp
outsb
xchg
dec
xchg
mov
push
das
insl
inc
hlt
push
adc
pop
divl
orw
inc
jmp
mov
out
sub
jle
lea
add
push
inc
inc
mov
scas
lock
push
popf
xchg
cmp
loop
pusha
inc
xchg
bound
int3
cmp
mov
out
popf
cmp
cwtl
in
xchg
inc
cltd
addl
sub
add
sub
lds
int
das
jnp
cli
ficompl
andb
es
or
loopne
adc
mov
je
into
push
scas
daa
call
mov
in
sti
stc
clc
add
cltd
outsl
xchg
addr16
inc
fstp
fisubrl
pusha
aas
add
push
xor
addr16
dec
pop
fstpt
mov
addr16
and
jp
loopne
mov
mov
stos
pop
shlb
inc
ret
jbe
cmp
or
imul
sub
sbb
jl
xchg
insb
rcl
into
mov
xchg
sbb
adc
out
mov
mov
pop
jbe
gs
xor
movb
cmp
ret
xchg
arpl
lret
leave
lcall
ljmp
es
xor
sbb
scas
int
cmp
pop
out
push
push
out
pop
pop
jb
or
inc
in
jle
scas
inc
pop
or
pop
fnstenv
aas
scas
lret
jg
testb
pop
mov
add
sbbb
mov
lcall
sub
out
xchg
mov
cmpsl
adc
addr16
iret
push
addr16
jp
out
repnz
xlat
fnstcw
loop
dec
xchg
xlat
aas
xchg
out
lcall
adc
mov
pop
adc
notl
pop
mov
dec
nop
mov
xchg
lods
cmp
pop
mov
sub
insl
add
insb
iret
nop
insl
and
mov
shr
in
hlt
jecxz
jge
xor
lcall
lock
mov
sti
daa
xadd
adc
gs
cmpsb
adc
xor
xchg
lahf
mov
fsub
gs
aad
push
add
sub
mov
sbbl
jmp
jp
movsl
xchg
notl
ficoml
dec
or
sub
cmp
add
aas
mov
mov
aas
pop
shl
xchg
xor
test
pop
repz
inc
pop
test
jge
sbb
push
lods
ret
push
mov
es
pop
jne
int3
arpl
sub
xchg
stc
push
mov
sti
mov
jbe
push
mov
cmpsl
aam
inc
push
sbb
in
addr16
dec
nop
ror
inc
cwtl
clc
mov
rorb
jecxz
or
pop
add
aas
clts
pop
nop
int
xchg
stos
leave
call
mov
and
pop
xorl
shrb
fldt
add
fstpt
in
or
sub
push
out
mov
mov
repnz
and
push
out
sbb
jp
or
mov
bound
cld
jp
push
dec
cmc
sbb
shl
sub
sub
out
jg
jae
insb
test
mov
idivb
icebp
nop
mov
out
leave
fidivs
les
add
ljmp
or
scas
aad
out
xchg
iret
cmpsb
mov
les
dec
push
mov
dec
cmp
sub
popf
dec
out
push
pushf
mov
pop
test
mov
mov
jno
test
push
cli
mov
mov
sarb
push
dec
ror
xchg
sub
mov
stc
or
sbb
push
sub
andb
pop
femms
xor
aam
testl
pshufw
mov
pop
popf
mov
jno
mov
shlb
push
pop
adc
mov
push
pushf
adcl
outsb
pop
jmp
fstl
test
outsb
sbb
or
mov
jmp
add
lcall
aaa
pop
into
xchg
push
inc
or
xchg
xlat
scas
in
aam
fwait
insb
mov
mov
xor
fsubr
jl
cmpsl
mov
push
sarb
imul
add
loope
lret
cmp
cmpsl
mov
addr16
sbb
push
into
inc
xchg
or
mov
sub
pop
sbb
ljmp
clc
fwait
cmp
mull
push
mov
dec
xor
push
fdivl
lret
adc
push
jl
jne
mov
push
pop
pop
and
scas
xorb
add
ficoml
cmp
jbe
jb
ja
fcmovb
xchg
incb
xchg
mov
mov
mov
jns
das
into
mov
inc
push
mov
scas
push
xchg
and
sbb
xor
test
dec
icebp
sbb
sbb
mov
stos
lea
int
xor
es
outsb
popf
ret
dec
out
ret
shll
fsubrs
sti
jg
jo
jae
aas
mov
mov
add
out
jo
jno
pop
jp
shrl
in
cmp
inc
xor
push
jo
out
pushf
push
xchg
pop
imul
jno
in
bswap
pop
addr16
dec
add
lahf
xchg
push
sbb
mov
testl
cmpb
mov
or
jg
mov
lock
fisttpl
bound
jae
pop
jmp
mov
ret
sti
pushf
mov
xor
cmp
es
imul
je
mov
mov
test
cmpsl
mov
push
pop
outsl
xacquire
inc
imul
mov
cmp
cmp
negl
mov
mov
lcall
sbb
rolb
pop
and
dec
mov
mov
addr16
fsubrs
ja
iret
jmp
xor
add
add
dec
lds
mov
adc
or
mov
pop
push
sti
clc
dec
ja
testb
pusha
mov
sti
pop
shrb
xchg
idivb
lahf
dec
lcall
lret
inc
sub
xorl
js
sub
sub
sub
loop
fldl
jge
sahf
adc
hlt
jbe
dec
mul
jae
mov
cmove
sub
lods
or
push
out
stc
je
cmpsl
and
es
mov
mov
int3
or
gs
pop
in
out
faddl
lret
mov
cwtl
or
aas
dec
popf
push
and
ja
jnp
movsb
daa
cmc
mov
jge
push
add
dec
add
add
sub
hlt
cmp
jb
jb
sub
lea
jnp
mov
sub
cmp
cmp
add
call
or
dec
dec
loopne
push
pop
jae
cmp
in
push
pop
adc
aad
xchg
out
jmp
mov
rorb
adc
xorb
mov
das
cmp
dec
out
in
push
jmp
dec
mov
or
push
mov
push
pusha
es
mov
movsb
cmp
push
xchg
xor
sub
test
add
dec
inc
pop
scas
lcall
dec
mov
pop
sbb
push
mov
dec
in
daa
mov
stos
lock
rorl
inc
push
pop
sti
das
cmpsl
pushl
xchg
aas
mov
nop
outsl
push
push
pop
mov
loopne
imul
push
xor
xchg
xchg
mov
loope
pop
xchg
gs
mov
dec
pop
loope
imul
jne
push
stc
add
cmp
mov
test
mov
cmp
aaa
call
cld
sarl
push
cmc
jge
test
in
jmp
push
add
jmp
aad
mov
inc
stc
jns
movsb
and
push
or
add
fucomi
out
pop
in
push
dec
cmp
adc
dec
sub
mov
jmp
ljmp
add
icebp
mov
adc
xchg
or
mov
fstpl
sub
push
out
cmpsl
and
test
aad
xor
jb
cs
jbe
add
arpl
cmp
out
loope
sbb
adc
mov
jbe
pop
inc
lods
push
stc
sahf
pusha
lret
push
testb
mov
bound
fisubl
ficomps
inc
push
mov
mov
xchg
jge
outsb
sahf
inc
pop
mov
dec
into
xlat
cmpsb
push
xor
adc
push
mov
mov
push
dec
repnz
jp
and
popf
adc
add
lods
mov
push
int
mov
andl
add
add
or
xlat
mov
sub
lock
mov
cmpsl
and
addr16
popl
loope,pt
mov
mov
iret
sbb
dec
and
push
push
cmc
cmp
sbb
shl
push
or
dec
cmc
pop
lret
xlat
cs
jmp
dec
in
mov
push
mov
mov
or
lcall
out
lret
sbb
push
cmc
out
push
push
dec
icebp
shrl
inc
aas
push
setae
mov
mov
sahf
xor
imul
sahf
xor
sub
hlt
cmc
and
leave
mov
je
sbb
jmp
frstor
lods
int
in
cmpsb
test
insb
inc
negb
pop
cmc
stos
imul
sbb
xor
out
lock
scas
jg
lahf
cs
loop
lret
sub
ss
mov
shlb
adc
push
scas
pop
aam
gs
inc
pop
xor
adc
pop
enter
in
les
ss
cmc
jbe
jb
out
test
cld
xor
jl
push
dec
cmovs
rcpps
sarb
cs
out
fisubs
clc
ds
sub
int
imul
cmp
dec
fs
call
out
out
xchg
jnp
xor
inc
jge
mov
push
xchg
rorb
xor
dec
inc
mov
in
outsl
out
shr
es
daa
jge
fcmovu
jnp
fwait
cli
into
subl
lret
mov
or
adc
int
outsl
cmp
mov
in
hlt
cmpsb
mov
sbb
inc
imul
sub
push
push
cmp
inc
mov
into
add
fnsave
cmp
pop
pop
pop
xor
xchg
mov
pop
mov
add
xchg
das
insb
mov
adc
imul
imul
lods
arpl
sahf
js
loope
mov
push
ds
lcall
dec
inc
pop
mov
lret
mov
test
sahf
inc
pop
cmpsb
cmpsb
push
and
outsb
bnd
push
push
cmp
sbb
std
stos
push
and
lret
pushw
es
std
scas
outsb
jno
push
or
jae
lret
es
clc
xor
lds
leave
inc
adc
push
pushw
es
jnp
lret
and
push
cltd
fildl
cmpsb
fwait
cmpsb
adc
jge
mov
mov
incb
xor
sbb
es
sahf
movsl
into
xchg
mov
jb
mov
mov
push
xchg
mov
fwait
mov
fisttps
push
adc
mov
dec
call
into
push
scas
inc
jo
adc
jecxz
sub
fistpll
xlat
push
push
cmpsb
mov
ret
sti
push
adc
cwtl
out
mov
xor
andb
pop
and
xchg
sahf
jge
push
pop
push
pop
jle
add
add
xchg
sub
out
mull
std
inc
scas
cli
sbb
cmp
outsb
pop
fwait
pop
std
icebp
je
mov
sub
inc
shl
lahf
jb
mov
mov
fstpl
inc
rol
in
into
add
jne
inc
dec
fldenv
aam
jmp
add
pushf
adc
dec
and
movsb
or
sub
pop
sub
xor
sub
xchg
adc
mov
sub
or
pop
push
mov
mov
adc
or
or
je
stc
pop
and
call
mov
stc
sub
and
adc
in
mov
inc
mov
xor
cmp
inc
test
mov
xchg
sub
dec
mov
sub
sub
pop
adc
xor
hlt
in
adc
aad
or
push
xchg
push
inc
pop
and
cld
push
adc
cmp
jno
cltd
int
aam
cld
fcmovbe
xchg
jmp
sbb
add
popf
in
insb
add
ror
mov
mov
jl
push
push
or
inc
imul
movsb
xor
jns
shrl
repz
pop
arpl
sub
test
movsb
mov
clc
fbld
dec
je
icebp
dec
ret
push
mov
add
xor
out
pop
sarl
lods
enter
popa
test
int3
les
jp
fstps
popa
js
xchg
int3
mov
inc
xor
xchg
cld
test
icebp
dec
imul
cltd
cmp
imul
in
sub
adc
xor
cld
cmp
dec
pop
jno
and
rol
and
lock
inc
dec
jmp
shrb
xorb
jmp
or
xchg
imul
shll
les
jmp
jmp
cwtl
pop
imul
adc
cmp
stc
adc
sbb
lcall
repz
icebp
rcll
and
fldenv
xchg
mov
sub
xor
leave
xchg
adc
in
inc
fcompl
mov
imul
stos
icebp
clc
je
aam
jnp
add
xchg
cltd
mov
jg
stc
sbb
arpl
mov
jns
sbb
stc
stc
stc
aad
adc
xchg
and
outsl
cmp
adc
lret
push
int3
aam
xor
popa
inc
push
jno
int3
jl
sbb
rcrl
mov
shll
loope
mov
test
hlt
xor
popa
or
adc
shr
pop
loope
inc
cld
fcoml
inc
sarb
inc
int3
test
jg
popa
leave
adcl
in
movsb
jno
mov
mov
xorb
ja
xor
adc
int3
in
add
mov
icebp
gs
sub
in
test
repz
mov
mov
dec
pushf
fsubl
in
lcall
stos
xor
xchg
and
insb
fsubrl
cmp
loopne
pushf
int3
js
test
push
fs
jno
or
lret
sub
add
insb
fdivl
jecxz
jno
add
loop
push
xorl
xor
lock
in
xchg
adc
je
push
jno
pop
jo
cmp
inc
stc
mov
xchg
popa
pop
sbb
xchg
popa
rorb
dec
jecxz
nop
hlt
fsubl
test
cmp
fimull
daa
inc
push
inc
cmp
hlt
or
cmp
imul
cmp
shrb
and
call
add
popa
roll
fdivl
dec
shl
leave
sub
add
jecxz
nop
mov
dec
pop
jmp
pushf
dec
insb
add
icebp
shll
stc
xor
jns
cmp
add
push
outsl
imul
aam
leave
mov
xor
push
movb
xchg
add
sbb
add
pop
fnstcw
pushf
xor
scas
inc
xchg
and
les
mov
movb
pushf
in
test
in
mov
push
push
inc
inc
in
dec
jle
push
xor
sbb
dec
aad
xchg
cli
mov
out
xchg
ret
imull
and
es
popf
xor
sbb
scas
sbb
dec
dec
mov
jl
push
repz
in
cwtl
stos
loopne
sbbb
pushf
ret
mov
aad
adc
mov
ljmp
dec
fsubl
adc
fwait
iret
jmp
lods
adc
jp
das
xlat
adc
je
sub
sub
or
ss
inc
pop
repnz
add
fs
sub
ret
sub
movsl
add
inc
or
adc
xchg
sbb
dec
ret
out
mov
or
and
pop
inc
lret
sbb
test
movsl
aam
push
ss
idivl
add
xchg
call
enter
or
mov
les
movsl
adc
fisttps
fidivl
sbb
pop
inc
dec
dec
dec
in
fcoms
jnp
adc
pop
je
sub
push
outsl
enter
xor
jle
je
pusha
repnz
shrb
push
out
mov
adc
lods
xchg
sbb
xlat
scas
pusha
sbb
push
sahf
cmp
int3
ja
fcoml
cmp
ljmp
out
xchg
jae
sbb
sub
or
cmp
jns
cmp
test
xor
mov
dec
sub
rcr
dec
in
nop
dec
stos
cmp
sub
sahf
cld
push
ljmp
mov
mov
insb
loop
stos
outsb
out
jnp
pop
dec
call
test
or
fdiv
add
mov
push
cs
mov
aas
pop
test
popa
xchg
inc
add
jno
xchg
push
hlt
pop
cwtl
lret
loopne
in
cmpsl
fcompl
mov
bound
neg
dec
push
outsb
add
pop
push
lods
sahf
fdivs
pop
mov
fldt
jno
icebp
ret
lret
inc
inc
subb
mov
cli
dec
insl
push
mov
adc
mov
inc
push
lods
push
push
test
adc
push
xor
shrd
and
sbb
adc
add
hlt
cmp
je
out
jae
jg
in
sahf
mov
and
xlat
outsl
lods
arpl
shrl
jae
inc
fs
xor
adc
jle
dec
fs
fs
mov
or
iret
andb
and
insb
push
and
int3
outsl
mov
sub
clc
mov
rcrb
cmpsl
inc
scas
in
movsl
aad
fstl
pop
cld
xor
pop
incl
testb
push
notl
jl
sub
mov
dec
pop
lea
loopne
push
xor
xchg
sbb
xor
jp
out
mov
pop
cmpsl
or
inc
aam
outsl
ss
push
aaa
push
stos
xor
sub
cwtl
addr16
mov
xchg
pop
push
cmpb
and
pushf
lret
test
out
cltd
inc
adc
cld
clc
loope
data16
cld
sub
mov
cmp
rorl
push
mov
xchg
push
das
add
cmpsb
cmpl
and
les
iret
divl
aaa
mov
lds
pusha
sahf
cs
pop
adc
mov
jb
lahf
adc
adc
fcomps
sub
popa
push
repz
jg
add
xor
ljmp
xor
outsb
data16
nop
nop
add
inc
xchg
fs
jmp
pop
jns
outsb
int
inc
rcrb
iret
sub
movsb
cmp
sub
out
mov
jae,pt
xchg
mov
sahf
add
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
