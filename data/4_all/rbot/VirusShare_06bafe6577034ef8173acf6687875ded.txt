dec
jbe
mov
xchg
aad
pop
jbe
sbb
mov
inc
or
mov
mov
or
loopne
pop
cwtl
add
pop
movsb
outsl
jno
rolb
push
or
andl
test
mov
dec
stc
daa
add
aaa
les
pop
push
jbe
pushf
fisubrs
dec
cs
shlb
mov
mov
mov
push
jo
inc
cli
xchg
lods
cs
and
mov
dec
inc
sbb
icebp
stc
sarb
icebp
sti
sbb
jne
dec
push
gs
repnz
mov
repz
or
out
pop
shr
lret
sub
aad
or
cld
fcomip
ror
cltd
add
xchg
icebp
cmp
jecxz
add
fistl
lret
mov
leave
mov
mov
pop
mov
les
repnz
sbb
addr16
lods
dec
jp
mov
xor
inc
fisubrl
pop
push
add
test
shrb
js
cmp
aaa
in
addr16
mov
or
cmc
fcomps
push
jecxz
pop
cld
and
and
pop
xor
lods
addr16
movl
cmpsb
push
cltd
movsb
push
sub
pop
dec
sbb
les
jle
lret
lahf
ss
std
or
add
jb
out
test
dec
inc
xor
push
add
addl
push
jno
sahf
movsb
fldl
pop
cwtl
cmp
les
mov
sub
push
adc
cmc
sub
xchg
enter
ss
xlat
sub
pop
or
xor
mov
ja
jbe
fnstenv
idiv
mov
inc
neg
cli
jo
xchg
cmpsl
test
in
jp
aas
adc
pop
ret
and
aaa
cld
push
ret
lods
jg
clc
cmp
inc
xchg
sbb
add
mov
pop
shl
lret
scas
call
mov
lods
sbb
repz
pop
scas
fldenv
sub
mov
xorl
pop
clc
mov
stos
iret
inc
mov
jmp
sub
xorl
adc
nop
sahf
ficoms
sbb
shlb
mov
push
mov
inc
mov
or
jbe
ret
ret
dec
xchg
or
ljmp
es
dec
je
dec
dec
sbb
hlt
xor
push
lret
mov
fnstsw
add
je
ffree
push
orl
es
adc
jge
pop
add
push
in
pop
cmpsb
push
addr16
repnz
es
cli
mov
rorb
sub
xor
mov
or
push
or
shl
cmpsl
lods
cli
repnz
jp
dec
pusha
pop
inc
es
xlat
dec
push
fucomip
test
ljmp
jne
pop
roll
inc
xor
insl
jge
out
xor
insb
shl
sub
mov
aas
jp
aas
wrmsr
aaa
js
push
jp
imul
jecxz
in
or
pusha
cwtl
mov
je
scas
mull
cmc
mov
arpl
loope
aad
jmp
bound
xchg
les
dec
mov
mov
das
cmp
xor
cmp
xor
mov
aam
jb
adc
test
movsb
dec
xchg
cwtl
xchg
dec
test
dec
mov
jb
jae
call
mov
cmc
jae
cmc
ftst
xor
cmpb
push
popf
jg
inc
sub
test
mov
lods
cmpb
mov
cmovns
mov
cs
in
mov
jle
adc
or
mov
xchg
cmp
mov
ret
cmp
pop
pop
loop
or
sbb
pop
loope
test
mov
add
mov
cli
iret
mov
inc
push
aam
outsl
aad
loope
jecxz
mov
mov
mov
pop
add
fucom
scas
shlb
push
push
sub
mov
mov
mov
push
inc
ficomps
jmp
out
add
subl
out
sahf
leave
bound
push
leave
lea
test
je
jmp
arpl
scas
imul
loop
sbb
out
popl
inc
sarb
cmp
and
loope
add
insl
mov
pop
aas
push
popl
mov
sub
sbb
jns
sub
movaps
xchg
clc
xor
pop
mov
aaa
jno
call
mov
xor
or
xor
sub
cmp
fcomps
call
fld
ljmp
push
mov
jp
adc
mov
outsb
mov
jbe
fwait
in
sbb
mov
mov
mov
add
jb
lods
enter
shl
outsb
je
dec
mov
pop
fwait
lcall
jmp
scas
lods
mov
out
nop
push
int3
pop
or
jge
lahf
shrb
leave
mov
out
nop
push
dec
aas
fisttps
stos
int
jge
mov
adc
popa
scas
lcall
stos
dec
ret
push
or
roll
jnp
or
mov
cli
mov
push
ds
xor
int
mov
fwait
push
je
jo
sub
mov
loope
mov
add
push
mov
dec
idivb
sub
das
xchg
imul
cmp
jbe
inc
jmp
and
scas
loop
cmp
xchg
loopne
and
sti
jo
push
sbb
lock
or
fstpt
push
push
cmp
pop
push
push
and
pop
pop
cld
pusha
sub
stc
and
and
push
pop
push
inc
pop
rol
mov
mov
push
jb
push
test
pop
pop
push
push
jno
and
pop
pop
and
cmp
cmp
sub
nop
push
jno
and
pop
jo
jle
push
push
sub
pop
pop
and
push
push
add
pop
clc
jmp
jmp
call
clc
mov
stc
add
mov
jp
or
mov
push
push
jns
neg
neg
pop
pop
jbe
inc
dec
jg
test
push
test
pop
add
je
push
test
pop
add
add
push
jns
add
pop
rol
push
pop
jbe
js
sub
or
cld
test
nop
push
add
push
pop
pop
jge
push
jbe
sub
pop
sub
sub
clc
xor
add
cmp
loop
jecxz
push
adc
inc
jmp
mov
aas
jne
and
into
je,pt
push
pop
aad
adc
lods
pop
leave
push
push
mov
add
pushl
jmp
xor
jo
add
push
add
pop
jmp
xor
push
push
jecxz
inc
clc
adc
repnz
imul
jp
rol
lods
jmp
mov
mov
mov
test
add
or
pop
pop
push
call
mov
pop
mov
shl
cmp
fsubrl
add
and
popa
mov
jnp
in
add
pop
mov
inc
inc
inc
inc
jmp
orb
sbb
ljmp
rcl
sahf
cwtl
jmp
jl
and
fists
outsl
les
test
mov
pop
mov
push
push
pop
add
pop
test
push
call
and
add
mull
cmp
inc
into
xchg
pop
pushf
sbb
mov
mov
dec
inc
outsl
insl
add
pop
dec
jne
push
push
mov
pop
pop
clc
push
cmp
pop
push
jl
push
and
pop
pop
add
push
push
push
or
pop
pop
pop
push
call
mov
dec
ficoms
push
repz
gs
and
out
jl
cs
and
xor
inc
and
outsb
cmpsb
cmpsb
xchg
jmp
je
sbb
cmp
fsubs
lret
scas
addr16
sbb
add
pop
dec
jne
loop
jecxz
add
mov
inc
sub
jg
test
push
push
push
not
not
pop
pop
pop
loop
jecxz
dec
rorb
or
ret
cmp
xor
add
stc
push
add
pop
cmc
or
addb
lret
pop
ret
test
xchg
sbb
xchg
push
lods
inc
and
mov
inc
lods
add
mov
cmp
pusha
mov
aam
popa
adc
fucomp
jno
or
inc
lock
push
pop
insb
test
aas
push
jno
mov
pop
sbb
je
rcrb
or
mov
pushf
or
outsb
fs
sub
inc
cltd
inc
rcrl
ret
fsubs
fsubs
dec
adc
rolb
jbe
pop
add
loop,pn
aad
jp
lock
sub
push
xchg
int3
add
scas
sahf
clc
dec
es
sbb
rcrb
scas
pop
pop
push
inc
lret
cmp
popaw
adc
mov
sub
test
sbb
jl
fs
clc
push
mov
jo
sub
lock
jae
mov
jnp
dec
stc
mov
xchg
ja
cmp
fildl
int3
jns
xor
in
jmp
clc
jns
mov
clc
loop
sbb
push
mov
xchg
int
pop
push
and
test
push
out
loop
jg
out
mov
hlt
je
sub
adc
cmpsl
adc
xlat
mov
das
jno
dec
jo
push
mov
pushf
push
in
dec
outsl
cmp
mov
xchg
jge
dec
pop
cmp
or
jle
pop
pop
inc
mov
sbb
pop
int3
xor
int3
jne
mov
rcrl
push
mov
mov
aaa
adc
fistl
sbb
popa
mov
in
and
jae
push
dec
cmp
sbb
ja
idivl
lahf
fcoms
sbbb
sub
mov
or
jnp
xchg
mov
push
stos
shlb
enter
xchg
cld
cs
fildll
bound
cmc
cld
call
loopne
cmp
lock
icebp
das
stos
mov
xchg
nop
adc
mov
adc
cmpsb
pop
aas
dec
mov
sub
mov
mov
mov
fsubrl
xchg
in
mov
jl
out
mov
or
lock
cmp
pusha
mov
scas
les
fs
sahf
movsb
mov
lods
out
xchg
lret
bound
popl
test
sbb
jp
lods
jmp
je
aam
sub
jle
jbe
jp
pushf
hlt
loop
dec
add
add
jge
sub
lds
and
loopne
aaa
sbb
jecxz
mov
jno
andl
sub
jno
dec
inc
or
mov
push
fisubl
in
test
add
lret
test
mov
loope
adc
int
mov
mov
jns
fisubs
adc
ror
push
lods
sub
jno
xchg
jnp
dec
inc
dec
xchg
cmpsl
je
mov
and
lds
aad
dec
jecxz
pusha
in
xchg
sub
nop
adc
not
or
fs
mov
and
or
pushf
cwtl
mov
mov
pusha
cmovnp
shrb
or
es
push
lahf
mov
inc
sarl
adc
mov
fs
pop
dec
stos
and
data16
test
std
ja
inc
mov
lcall
mov
or
push
cmp
subl
rcr
sbb
fnstsw
or
lret
outsb
cmpsl
sub
add
mov
xchg
loop
rorb
out
push
mov
decb
cmp
xchg
push
xor
dec
dec
cmp
mov
mov
fldcw
movsb
in
xor
jae
mov
insl
add
aaa
xchg
jnp
es
lret
arpl
test
xor
aaa
addr16
add
jb
gs
out
inc
std
mov
or
repz
pop
repz
cwtl
stos
cld
sub
pop
repnz
sbb
cli
ret
lret
xchg
lock
jle
adc
mov
mov
and
lea
and
mov
pop
aam
insl
ret
pushf
xchg
and
stos
subb
or
stos
mov
repnz
push
repnz
ds
push
dec
and
notb
cmpsb
scas
out
clc
and
leave
sub
mov
sub
cwtl
push
xor
dec
mov
outsb
add
inc
insl
insl
lcall
or
ret
cmp
mov
lods
adc
inc
mov
loop
cmp
adc
push
fisubl
icebp
xchg
mov
inc
insl
cmc
icebp
pop
fidivs
xchg
dec
adc
push
mov
inc
mov
mov
lcall
fisubl
stos
lock
cmp
mov
cwtl
cmp
decl
dec
stc
and
data16
and
mov
loop
sahf
stc
adc
mov
jbe
inc
out
pop
fildl
lahf
push
and
pop
mov
das
push
fwait
in
or
push
sub
xor
xchg
ret
ret
icebp
or
out
lcall
push
dec
jle
out
das
es
fcomps
arpl
cmpsl
rol
jp
fldenv
arpl
testl
push
xor
in
mov
fisttpll
dec
jecxz
add
xchg
xchg
mov
push
jmp
pop
mov
xor
mov
or
push
jbe
dec
shll
lea
loop
xchg
stos
cmpsb
adc
js
frstor
dec
outsl
in
test
sbb
aaa
aas
test
pop
sbb
out
and
fst
insb
jnp
mov
jmp
addr16
mov
ficoml
and
dec
mov
and
mov
jo
frstor
push
jecxz
sub
push
cs
add
mov
jnp
adc
dec
shll
loope
lret
aad
or
into
inc
add
out
and
mov
inc
insl
pop
dec
xchg
nop
fdivrl
sub
out
xchg
adcl
jmp
cs
or
leave
fiadds
es
cmp
scas
push
cmp
mov
hlt
cmp
ds
arpl
cld
in
mov
xchg
lret
cmp
popf
fstpt
xchg
cwtl
test
outsb
mulb
jle
cmpsb
xchg
sti
inc
xor
mov
push
mov
push
cmp
cmp
sbbb
jmp
push
std
push
push
sub
sbb
cmp
mov
xor
jge
ret
inc
dec
adc
stos
push
or
jmp
jg
popa
cmp
pushf
jmp
out
jb
and
cmpsb
mov
test
push
cmp
mov
inc
pushf
jecxz
into
cmc
jle
cmp
leave
sbb
lock
jl
in
xor
imul
ret
stos
lods
div
xchg
pop
ret
sbb
sbb
loop
adcb
mov
lods
push
pcmpeqd
cmp
push
rorb
xchg
add
jg
add
sbb
lods
in
out
and
cmp
fidivl
std
cmp
arpl
clc
mov
dec
nop
scas
adc
insb
popf
jp
inc
cld
cmpsl
dec
xchg
filds
cmpsb
lret
shrd
inc
jmp
xlat
xor
mov
je
test
repz
xor
push
sub
xchg
test
lret
cmpb
mov
hlt
sbb
test
xor
mov
gs
adc
mov
cmc
mov
in
push
xchg
pop
dec
cmp
inc
and
std
xor
jge
mov
repnz
out
insl
mov
inc
js
mov
insl
test
add
mov
or
subb
test
pop
cmpsl
mov
cmp
push
cmpsb
daa
sbb
sub
pop
addr16
pop
leave
push
js
mov
mov
rcll
mov
in
inc
adc
out
jae
jne
mov
fists
pop
push
push
push
or
cli
cld
lock
adc
mov
fildl
iret
pop
repnz
fdivs
mov
sbb
into
fimull
add
push
mov
imulb
lods
cltd
enter
pop
adc
cmp
nop
insl
xor
lcall
push
dec
add
push
cld
cmp
test
lea
jecxz
repnz
lds
lock
push
lods
leave
bound
mov
and
outsl
fs
inc
push
subb
icebp
xorb
fdivp
dec
fimuls
push
mov
xchg
inc
arpl
out
sbb
pop
iret
lahf
pusha
pop
call
ljmp
sbb
push
call
clc
push
or
cmp
sub
clc
repz
mov
or
in
push
jp
adc
jge
and
jl
in
out
clc
mov
scas
sub
or
dec
jbe
ds
imul
cmovno
jge
xchg
adcl
test
mov
shr
js
mov
sbb
gs
or
addl
inc
cmp
je
pop
xchg
sbbl
cmp
shlb
sbb
pusha
jge
xchg
fs
jge
test
stc
test
mov
cmpsb
aas
dec
mov
movsl
mov
pop
mov
jmp
out
test
daa
mov
rorb
cwtl
mov
shll
nop
add
out
or
push
xchg
fcmovnb
mov
sahf
insl
adcl
and
les
popf
jo
enter
lcall
ret
cmp
sbb
lods
sbb
lds
mov
movsb
sbb
cmpsl
or
cmovae
outsl
lahf
fisttps
push
pop
adc
push
ljmp
dec
xchg
out
ss
frstor
fistpll
pop
insl
mov
test
add
and
cmp
jmp
repz
xor
dec
xor
xor
iret
pop
rcrl
pop
sarl
mov
jmp
lds
sbb
jo
xor
filds
pushf
jno
in
pushf
cmp
and
out
xor
xchg
mov
and
insl
jg
inc
shll
sahf
adc
repz
push
movsl
push
std
jg
into
jmp
xchg
sbb
rclb
jno
jne
mov
and
out
insb
dec
cmp
hlt
push
mov
lods
stc
jl
dec
dec
mov
enter
sbb
sbb
mov
mov
inc
xor
dec
cmp
fcmovu
jbe
or
testb
push
xor
test
inc
sbb
jp
notb
pop
aas
cmc
movsb
xchg
int3
pop
cmp
xor
dec
out
rolb
inc
lcall
mov
inc
ljmp
arpl
movsb
pop
dec
lods
dec
dec
xrelease
xchg
test
stos
sbb
push
jo
andl
or
mov
scas
fstl
mov
repz
arpl
lret
nop
mov
add
jno
in
cmc
xchg
test
add
sbb
sbb
inc
je
dec
out
aad
lods
lods
and
mov
sbb
in
cltd
push
mov
loop
and
jns
lods
inc
das
xor
xchg
test
dec
push
lret
lahf
xor
shl
mov
xchg
cmp
dec
cltd
or
cld
fstl
mov
mov
rorb
mov
dec
mov
or
cmp
adc
pop
jne
xchg
add
movsb
jg
jae
push
cmp
inc
mov
push
adc
test
les
test
push
sahf
mov
dec
icebp
inc
jns
lcall
daa
ds
je
mov
push
roll
jl
leave
mov
cmp
mov
out
hlt
push
leave
mov
push
aad
jae,pn
inc
cmp
xchg
fstl
push
cmp
mov
add
fldl
mov
jno
aaa
dec
sub
sub
inc
push
fwait
cld
ret
ret
mov
inc
inc
lret
sbbb
flds
stc
xor
sbb
lret
jnp
pop
jl
out
lock
push
and
fsubrp
jo
add
dec
mov
call
ljmp
adc
bound
mov
jbe
test
outsb
mov
aam
sub
cli
shll
xchg
jg
xor
mov
outsl
xorl
jns
sbb
shll
pop
pop
mov
pusha
xlat
popa
sbb
jbe
lods
stc
ret
xor
jmp
pop
loopne
or
test
dec
dec
dec
dec
jle
imul
cmpsb
into
subl
in
popa
movsb
push
cmp
je
ljmp
insb
mov
push
imul
scas
repz
mov
mov
fmull
adc
arpl
push
mov
cmpsl
adc
add
js
pop
and
fistl
inc
xor
and
repz
jbe
shll
fidivl
ja
es
sti
fisttps
or
push
aaa
pop
push
add
push
pop
shlb
aaa
jmp
xlat
push
movsb
enter
or
scas
in
mov
daa
cmpsl
test
pop
ror
pushf
mov
hlt
cld
pop
and
lds
mov
icebp
int3
es
test
pop
push
push
repz
dec
sub
std
inc
mov
aam
rcll
addr16
test
cmp
lods
fucomip
xchg
into
bound
add
jb
cmpsl
push
addl
ret
and
fst
imul
cmp
js
xor
cmp
cmc
adc
scas
aas
xchg
mov
out
fwait
add
push
ljmp
loop
xor
negb
jo
ljmp
pop
add
pop
push
lcall
test
repz
mov
in
or
int
mov
test
insb
add
mov
jmp
cmc
icebp
enter
outsl
andb
mov
mov
les
out
inc
fchs
dec
shl
enter
push
loope
movsb
push
cmp
in
int3
fistps
mov
leave
mov
test
shl
adc
in
js
add
out
repnz
ret
lea
loop
mov
divl
add
and
dec
aad
lods
imul
shr
xchg
fisubrs
fnstsw
imul
dec
mov
out
orl
jo
sbb
mov
cmp
xchg
add
mov
mov
or
aaa
stc
sub
in
inc
gs
pop
fs
mov
cmp
scas
test
out
lahf
std
jo
or
fucom
lods
lods
xchg
xor
incl
icebp
out
insl
lcall
push
movsb
subb
mov
call
iret
add
mov
into
cmp
lods
aas
int
ja
pop
mov
dec
dec
xorb
ret
repnz
js
sub
imul
cmp
sub
stc
pop
push
pusha
mov
call
stos
iret
push
repnz
jo
mov
xchg
insb
jo
mov
mov
mov
nop
fwait
inc
and
xor
mov
mov
push
mov
mov
dec
ffree
xchg
jecxz
mov
push
pop
cmp
xchg
mov
or
jmp
xor
sbb
xchg
movsl
pop
mov
pop
enter
sbb
lret
out
or
mov
call
lret
pop
jmp
and
repz
rcrl
pop
pop
push
cmp
mov
or
jle
xorb
faddl
jo
out
test
xchg
sahf
mov
push
and
ja
and
pop
cmp
arpl
ret
cli
dec
xchg
lret
or
insb
push
leave
iret
ficompl
inc
into
ret
fcmovu
rcrb
pushl
or
subl
mov
ljmp
testb
cs
insl
in
fyl2xp1
je
cld
pushf
hlt
and
jae
sub
mov
insl
cmp
mov
adc
call
mov
adc
fs
notl
frstor
mov
or
and
and
mov
mov
adc
ror
inc
jns
sub
test
cwtl
pop
adc
xchg
push
and
and
cmp
in
dec
in
jle
xor
xor
popa
shrb
fsubs
ja
ja
imul
loop
data16
mov
push
movsb
push
dec
stos
lcall
cmpl
inc
and
inc
mov
xchg
xor
jns
bound
cmpsl
fidivl
stc
pop
enter
test
call
pop
fsub
mov
lret
ljmp
adc
out
sub
dec
add
sbb
inc
pop
cs
scas
fwait
add
inc
xor
sub
fs
dec
es
inc
mov
mov
sbb
rcll
jne
cmpb
in
js
out
jg
in
pop
xchg
dec
lcall
negl
loopne
jnp
in
lods
sbb
sbb
lds
mov
mov
out
adc
roll
icebp
mov
lahf
cmp
rcrb
xor
adc
or
lods
in
sbb
notb
dec
lret
sub
icebp
fwait
pop
cmp
dec
sbbl
fyl2x
cmp
xor
cmp
sub
pop
cmpsb
mov
leave
lods
ljmp
mov
test
je
xchg
pop
sar
sbb
or
push
data16
loop
nop
cmp
xchg
sbb
cld
xor
insl
ds
xor
in
scas
jnp
or
push
cwtl
sub
inc
xchg
push
les
gs
inc
hlt
cmp
jl
ljmp
adc
enter
pusha
mov
mov
push
sub
dec
inc
scas
mov
jno
loope
add
mov
jle
adc
pop
sbb
mov
loope
and
ljmp
xchg
stos
sbb
xor
testl
mov
fstpl
or
gs
pop
fstpt
std
fisttps
push
out
dec
ret
mov
mov
shll
or
jl
hlt
add
push
pop
in
mov
aam
push
jbe
xor
pop
inc
pop
testl
pop
sbb
mov
shr
fs
mov
jp
aas
in
xor
mov
inc
mov
jmp
adc
add
ss
lret
imul
mov
xchg
fdivrs
std
fwait
adc
cmp
mov
ret
test
cmp
mulb
icebp
stc
adc
frstor
xchg
in
push
mov
addl
into
xchg
das
xor
into
dec
testb
sti
mov
push
xchg
cmc
ret
add
mov
in
inc
pop
dec
dec
sbbb
pusha
mov
aaa
pop
and
dec
stos
scas
cmpsl
cld
mov
enter
sub
mov
ss
sub
loop
push
and
stos
jnp
sbb
xchg
hlt
pop
or
push
sub
adc
sbb
js
ss
test
dec
push
mov
sbb
lret
je
lods
fwait
and
xor
mov
or
xchg
inc
adc
and
pop
jmp
sbb
xlat
ja
ficomps
and
pushf
lock
adc
add
in
or
ljmp
cmpsl
mov
dec
jmp
and
nop
loop
push
mov
int
mov
je
test
jno
mov
inc
arpl
loop
rolb
fwait
sub
addr16
fsubr
sub
shrb
lea
out
lock
fcoml
arpl
movsb
sub
ds
pop
push
cmp
ficompl
enter
sub
inc
dec
cmp
imul
in
popf
mov
ja
sub
fsubp
imulb
jge
or
mov
mov
fnstcw
inc
test
out
ret
cmp
test
xor
and
call
scas
je
jbe
push
push
adc
push
out
outsb
call
out
mov
shll
mov
in
sbb
dec
push
and
jp
bound
push
sbb
jo
xor
inc
mov
jnp
jmp
leave
aad
inc
dec
and
call
and
fisubrs
cs
leave
sub
mov
lods
scas
cmp
cmp
jecxz
pop
mov
add
lea
add
lret
dec
add
push
or
add
push
pop
xor
mov
out
pop
mov
cmp
sbb
mov
lcall
ret
out
push
fisttpl
push
pop
hlt
fstl
mov
xorb
xchg
mov
mov
test
int3
mov
sub
or
iret
push
sbb
stos
mov
and
in
push
loope
cli
lret
cmp
cmpl
and
and
xchg
push
or
dec
inc
or
jbe
jecxz
mov
cmp
in
and
faddp
pop
call
dec
testl
xchg
xchg
mov
sub
add
fs
repz
rcll
aaa
bound
leave
scas
xlat
adc
pop
push
test
dec
stos
shrl
es
pop
pop
sbb
std
jne
fs
lods
clc
pop
or
cmp
jbe
xchg
pop
sahf
add
ret
pop
test
adc
aad
movd
add
loope
and
enter
pop
jge
in
ret
pop
push
jle
orl
stc
xchg
add
mov
dec
imulb
jnp
adc
scas
or
sbb
popf
fwait
insb
dec
push
lret
and
push
dec
cld
xchg
sub
inc
icebp
scas
pop
test
sub
push
xchg
daa
lret
std
loope
lea
push
and
lahf
xor
xchg
call
dec
pop
ret
icebp
cmp
pushf
outsl
inc
rorb
aad
ficompl
mov
hlt
jno
pop
or
pusha
add
mov
push
out
and
push
jno
inc
cli
inc
insb
aas
daa
push
pop
into
loope
loop
fisttps
xor
mov
mov
jnp
shll
xchg
hlt
and
mov
dec
aas
jmp
jle
fisubl
cs
mov
imul
mov
push
adc
xchg
push
or
xchg
data16
decl
inc
mov
hlt
dec
inc
ljmp
or
sub
daa
unpcklps
mov
cmp
das
xor
je
jg
and
lock
inc
mov
sahf
repz
nop
pop
pop
add
mov
or
or
mov
cmp
mov
outsl
jns
dec
mov
andb
cs
cld
lds
push
sarl
mov
popa
sahf
arpl
add
icebp
mov
lds
and
repz
mov
ret
sub
xchg
jne
cmp
add
lea
inc
mov
cltd
inc
cmpsl
jbe
sub
jle
nop
pop
fnop
push
add
jns
jae
sub
sub
mov
repz
fstl
and
xlat
xchg
mov
out
jg,pn
stc
mov
jne
xor
cmpsl
mov
pop
lahf
cmp
movsb
cltd
sbb
sub
cmp
sub
aaa
pop
mov
out
cmp
mov
inc
mov
mov
sub
sbb
xchg
xchg
pop
inc
mov
enter
or
mov
push
notb
and
sub
pop
in
adc
out
cmp
aam
inc
jns
or
fs
and
rcr
mov
push
xlat
jge
adc
in
xor
push
fadds
adc
sarb
mov
pop
add
xor
andl
xor
int
cmp
mov
test
in
into
and
xchg
mov
les
outsl
shll
xchg
lahf
jnp
fcomip
pop
fdivrs
or
or
popf
xor
sub
stc
jnp
mov
jg
das
scas
ret
and
mov
xchg
pop
popa
shlb
test
push
inc
xor
or
rorb
outsb
test
fs
fsub
stc
lds
jbe
ret
jp
dec
or
mov
xor
int
loop
ss
clc
fwait
push
fcomps
imul
cmpsb
ds
jp
mov
mov
int3
scas
mov
daa
lods
js
adc
xchg
xorl
mov
jne
outsb
push
and
loop
in
mov
jl
ficoml
jne
sbb
into
clc
xlat
imul
outsb
sahf
and
xchg
push
mull
adc
jge
sbb
mov
outsb
or
add
ror
in
xchg
mov
rcrb
int3
imul
and
daa
call
das
dec
icebp
sti
jbe
xor
lods
and
pop
or
jle
adc
shlb
adc
sbb
inc
or
cmp
adc
pop
aaa
test
lds
lds
aas
add
insl
xor
clc
or
mov
cmp
cmpsb
add
sbbl
sbb
adc
and
dec
call
push
inc
test
adc
cli
inc
int
ss
fcomps
cmp
test
sbb
aam
icebp
jns
cmpsl
pop
add
and
adc
or
sub
cld
mov
stos
jge
add
lock
je
inc
add
adcb
xchg
and
xchg
jo
stos
lea
pop
push
ret
and
xor
and
jle
mov
and
inc
or
adc
sbb
mov
push
dec
mov
sbb
dec
adc
lods
cltd
pop
or
inc
sbb
push
daa
hlt
lret
sub
hlt
lfs
lea
mov
addr16
sub
in
or
jae
add
sub
out
dec
es
cmc
adc
test
jl
enter
push
push
pop
lret
rorb
jle
fcomps
jb
adc
add
movsb
lods
push
jbe
push
sbbb
pop
jge
xchg
or
mov
or
fisubs
stc
js
popa
int3
pushf
push
pop
inc
push
mov
rclb
shrl
inc
push
adc
roll
stos
xchg
xor
xchg
xchg
call
es
push
push
dec
sbb
mov
dec
pop
test
cltd
adc
lock
pop
push
adc
dec
jns
rclb
pop
pop
sub
sbb
sbb
mov
jmp
add
xchg
fstl
cmc
lods
sbb
ljmp
cmpsb
jl
dec
insb
sub
cld
pop
sar
xor
xchg
mov
ret
mov
test
lds
push
bound
inc
pusha
pop
cltd
mov
mov
dec
jmp
sub
push
adc
imul
sti
mov
cmpsb
aas
pusha
inc
icebp
int3
movsl
lcall
push
mov
icebp
mov
or
mov
push
push
btl
cmpsb
cmp
lods
ja
roll
push
hlt
mov
enter
pop
adc
or
inc
ss
pop
clc
mov
nop
sar
jnp
add
mov
sbb
mov
sub
or
or
xchg
inc
mov
imul
jnp
mov
data16
in
test
divb
out
in
fadds
sbb
test
stos
mov
add
repz
xor
push
mov
iret
cmpsl
stc
sub
mov
and
push
sub
add
hlt
and
jp
in
incl
jmp
call
adc
pop
testl
sbb
push
xor
adc
jne
rolb
push
pushl
dec
mov
in
aaa
xchg
dec
or
pop
pop
gs
cmpsl
cld
les
mov
icebp
std
cmp
mov
ss
test
pop
add
cmc
cli
ljmp
out
out
jno
rorb
shll
stos
repnz
cmp
fidivl
popf
sub
nop
imul
sbb
shlb
mov
dec
jbe
data16
and
inc
cmp
xor
and
xor
shr
cli
xchg
ret
or
leave
xor
subl
jecxz
sbb
adc
mov
scas
into
adc
mov
adc
dec
pop
dec
fcmove
jno
fimuls
mov
jmp
push
mov
stc
mov
sbb
pop
and
scas
xor
or
mov
and
aaa
jmp
push
push
push
in
jge
jns
sahf
push
push
ljmp
inc
inc
outsl
cmp
andb
stc
xchg
jmp
xchg
mov
jp
std
dec
jge
out
popf
neg
popf
aas
xchg
mov
sbb
adc
add
pop
add
notl
pop
gs
inc
pop
out
movsl
pop
jge
test
sub
pop
or
push
mov
cmp
jne
jno
cmp
and
shl
mov
test
jecxz
sub
mov
decb
mov
lds
stos
lea
mov
clc
pop
sbb
in
xchg
fcomps
loopne
movsl
rcll
adc
je
aam
int
dec
sub
stos
iret
stos
lock
ss
fabs
jecxz
adc
mov
push
icebp
cld
clc
jns
cli
ficoml
out
push
test
mov
mov
or
popa
loopne
add
movb
sub
inc
stos
jno
mov
push
je
pop
outsb
adc
mov
cmpsb
sbb
sbbl
pop
mov
aad
fdivrs
in
mov
lods
out
pop
sahf
push
push
divb
mov
or
cli
or
or
mov
pop
imul
sbb
add
or
rcll
movsl
fcmovu
xlat
jns
movsl
je
mov
mov
jmp
out
dec
dec
ljmp
fs
dec
aad
push
pop
lods
sub
dec
mov
rol
pop
cwtl
pop
dec
mov
jge
scas
arpl
add
cmpsb
sub
mov
jns
mov
mov
push
dec
imul
sbb
cmpsl
imull
fstl
frstpm(287
mov
push
mov
add
pushf
fisttpl
jg
push
mov
cmpsb
filds
mov
inc
scas
mov
sbb
jge
sbb
xor
adc
ds
xchg
jbe
jo
sub
inc
dec
out
rcrl
jmp
dec
jle
cld
roll
mov
mov
sub
inc
cwtl
lahf
stos
cmpsl
push
aaa
dec
add
add
scas
or
out
arpl
cmp
sub
je
mov
mov
cli
xchg
out
lock
clc
sub
xchg
sub
or
or
js
and
mov
lds
sarb
adc
xchg
xchg
lds
push
fwait
pop
add
mov
dec
inc
lret
pop
jg
sub
lea
sbbb
sub
stos
insb
sub
mov
leave
arpl
mov
dec
out
inc
fs
mov
cmp
fwait
or
sbbl
mov
jnp
pop
cli
and
xorb
and
mov
mov
call
jg
andl
cbtw
add
fwait
test
movsl
sub
or
data16
push
sub
jl
fcomp
jne
jl
inc
pop
ret
insl
pop
shlb
xchg
rolb
jae
add
xchg
pop
pusha
pop
repnz
scas
jg
xchg
imul
stos
dec
scas
lcall
sub
into
sbb
sub
mov
mov
add
jbe
jle
add
dec
pop
lds
mov
push
xor
std
cmc
test
nop
mov
cld
jecxz
out
xor
inc
or
pop
and
mov
lds
ljmp
inc
das
sub
mov
fmul
jne
jo
push
jg
je
cmp
arpl
fsubp
loope
out
cmpsb
sub
pop
ss
fdivr
mov
add
das
aaa
adc
lods
scas
mov
xor
and
stos
into
sbb
jge
push
cmp
cmpsb
sbb
cmpsb
out
andl
aas
pop
mov
addr16
inc
lahf
xor
pushf
mov
push
inc
sbb
adc
lahf
sub
pushw
ss
mov
pop
or
in
inc
sub
sbb
popf
adc
orb
loope
idivb
lret
pop
stos
inc
fwait
jo
xchg
jl
inc
aam
ja
mov
shlb
out
arpl
testl
add
mov
mulb
lcall
imul
mov
repnz
call
mov
jo
dec
popa
sar
fnsave
inc
jns
add
mov
cmp
cld
faddl
subb
xchg
pop
mov
test
and
mov
out
arpl
shlb
nop
out
lods
sahf
test
fcomp
stos
jecxz
and
std
lret
pop
loope
lds
outsb
dec
movsb
xor
xchg
imul
test
cmp
inc
and
movsl
mov
sbb
loopne
mov
imul
push
das
loopne
and
xchg
or
int
iret
jle
adc
sbb
clc
dec
mov
sarl
xor
jg
lcall
xchg
lock
mov
jb
pcmpeqd
mov
jle
sub
add
rclb
inc
dec
popa
and
add
sahf
dec
ljmp
sub
xchg
sti
jmp
sub
xlat
scas
test
cli
mov
adc
jo
jnp
push
scas
outsb
xorb
outsb
mov
and
cmc
dec
enter
adc
pop
into
popa
adcl
sub
mov
jl
jge
cli
xchg
sub
repnz
stc
mov
cli
rolb
xor
push
test
int
rcrb
adc
fisubl
cmp
fisttpl
into
xor
rcll
repz
mov
scas
mov
lret
fwait
insb
jns
xchg
int3
inc
mov
sub
dec
inc
fwait
jle
pop
shl
sahf
addr16
rcrb
add
mov
mov
mov
into
in
fldenv
push
je
push
add
js
pop
jl
jb
sbb
setb
mov
jne
jmp
mov
xor
and
mov
mov
ds
int3
add
cmp
jbe
sub
imul
mov
pusha
iret
test
pop
lahf
adc
call
test
fists
inc
pop
inc
sub
xchg
push
repz
pusha
mov
scas
mov
jmp
xor
mulb
mov
mov
jle
int3
jp
enter
inc
scas
fisubrl
adc
xchg
in
push
pop
jnp
xchg
adc
push
in
inc
leave
aad
push
test
lock
addr16
fdiv
out
std
lds
movsl
sbb
adc
fldenv
push
lock
push
aad
lret
fiadds
push
lret
daa
enter
push
enter
jmp
ja
push
data16
or
cmp
jnp
sti
fstps
aaa
std
movsl
js
jbe
shlb
mov
cmc
sbb
and
dec
or
int3
out
test
inc
pop
adc
sbb
jne
roll
xchg
fwait
jmp
aad
popa
mov
xchg
ds
lods
dec
sub
in
out
int3
sahf
shr
bound
pop
div
xor
cwtl
push
mov
cmpsb
test
push
sti
cmp
aam
adc
dec
out
orb
out
jge
mov
adcb
aas
add
sbbl
push
aam
mov
push
mov
or
inc
and
jns
xor
sahf
mov
mov
lret
mov
cmpsb
sbb
dec
shl
lahf
iret
adc
les
jge
or
mov
xor
adc
sub
xlat
cmpsb
cmp
dec
sbb
stos
inc
bound
push
out
and
test
mull
hlt
lock
rcrb
cltd
fucom
add
rorb
fsts
aam
and
jp
xlat
imul
push
sbb
leave
lret
test
mov
mov
mov
clc
mov
popa
iret
add
inc
cmpsb
call
inc
cs
and
lods
popa
pop
mov
sbb
mov
sbb
es
push
popf
add
call
lret
lcall
jecxz
mov
lods
push
sar
arpl
lahf
mov
mov
out
dec
outsb
insb
sbb
incb
and
stc
sub
dec
dec
mov
test
jp
jle
xchg
aad
xchg
les
and
push
addr16
adc
mov
lret
xor
clc
xchg
fsubrp
dec
mov
pop
mov
movl
cwtl
pop
out
shl
jnp
aas
ja
jp
xchg
mov
subb
push
add
push
xlat
test
scas
fucomi
mov
jb
fstps
fmull
pop
loop
aaa
bound
or
cmpsl
movsb
jo
pop
outsl
and
push
fiaddl
ret
hlt
inc
repnz
pop
fnstenv
xchg
push
push
ret
in
fucomp
fsubs
mov
mov
adc
call
leave
adc
sbb
loopne
ds
cltd
jp
ljmp
push
pop
aaa
xrelease
jmp
mov
sti
or
cmc
mov
mov
dec
roll
sub
xchg
pop
test
neg
ljmp
mov
aaa
and
xchg
mov
test
cmpsb
inc
mov
cmp
xchg
mov
fdivrl
bound
addr16
loopne
loopne
fisttpl
push
and
cmpl
and
pop
clc
and
mov
mov
mov
movsl
aam
mov
lea
mov
adc
push
rolb
iret
rorl
data16
push
add
cld
jge
add
dec
and
pop
inc
cli
leave
xor
andb
lock
dec
nop
push
icebp
outsb
aas
adc
jl
jne
addl
or
enter
test
out
add
int3
mov
mov
loopne
push
insl
jo
push
dec
mov
mov
imul
jno
push
mulb
adcb
mov
xchg
ljmp
outsl
cmp
les
popa
punpckhwd
or
jo
mov
add
dec
cmpsl
jle
xchg
imul
adc
mov
cmp
or
daa
fsubl
pop
scas
ret
pop
call
xchg
or
divl
fdivrs
das
cmpsl
lock
je
jl
mov
mov
sbb
repz
test
adcb
clc
xchg
enter
ss
mov
aad
cmp
test
mov
out
push
xchg
sub
dec
aaa
rolb
adc
in
ja
add
pop
into
aaa
add
mov
stc
loope
sbb
push
scas
sub
lock
xor
inc
mov
leave
insb
pop
mov
cs
imull
or
push
cmpsl
xlat
fsubrp
adc
push
nop
mov
xchg
ficomps
add
insb
lods
lret
xchg
push
fcmovb
es
push
jnp
xchg
jno
out
xor
dec
arpl
setae
ret
ds
ja
outsb
mov
inc
out
jmp
dec
sbb
arpl
les
xchg
mov
loope
dec
out
fiaddl
dec
movl
dec
mov
adc
scas
push
push
seto
das
add
and
dec
jo
sub
call
andl
mov
popf
movsb
mov
adc
arpl
mov
or
and
dec
and
cmpsl
sbb
imul
xchg
das
std
iret
inc
rcrb
xchg
jmp
in
iret
adc
and
pop
xchg
stc
leave
add
inc
jle
and
arpl
xchg
test
sbb
lahf
hlt
pop
loopne
ffreep
cmp
push
ljmp
xor
mov
inc
or
mov
xlat
inc
xchg
jb
dec
dec
dec
sbb
cmpsl
add
mov
cmp
clc
fnstsw
mov
mov
aam
xchg
xchg
dec
int
inc
movsb
orl
test
pop
lgs
inc
shr
sbb
xchg
and
lret
or
cmp
jecxz
lods
std
je
cmp
jge
jecxz
and
push
cmp
dec
je
mov
fildll
sbb
mov
cmp
xchg
and
pop
lret
add
frstor
jns
push
push
pshufw
daa
inc
cmpl
pop
loope
loop
cmpsb
stc
int3
cmp
adc
or
mov
dec
roll
or
xlat
jae
jp
loopne
jmp
push
cwtl
push
dec
movsb
mov
test
ljmp
cli
sbb
fsub
std
jbe
or
or
and
push
adc
sbb
pop
pop
adc
shll
aas
cmp
rclb
dec
jmp
adc
std
cld
xchg
push
ret
sub
adc
icebp
idivb
mov
xchg
inc
mov
push
loope
push
fisttps
je
push
dec
adc
xor
push
sub
pop
mov
fldenv
cmp
repnz
hlt
xchg
inc
in
jg
nop
pop
arpl
es
lea
pop
mov
or
xor
cmpsl
imul
cmp
popa
adc
or
push
xchg
test
push
lret
clc
cs
mov
dec
stos
sub
data16
and
sub
mov
ss
loopne
ret
scas
mov
das
popf
loopne
cmp
inc
movsb
adc
cmp
sub
xchg
push
or
aaa
sbb
mov
das
insl
mov
dec
or
jne
inc
bound
sarb
or
mov
inc
lods
addr16
inc
clc
inc
adc
inc
inc
lods
aas
daa
cmp
shll
gs
push
jecxz
mov
fsubl
hlt
or
jge
fxch
xchg
outsb
inc
xor
cld
fdiv
push
xchg
push
clc
adc
enter
pusha
setg
cs
loope
xlat
fdivrl
insb
mov
xor
loopne
add
icebp
push
stos
push
aaa
popf
scas
xor
jo
lahf
mov
mov
popf
xchg
mov
loopne
inc
shr
jbe
repz
in
subl
cmp
ret
jmp
movb
mov
stc
inc
pop
rcrb
pusha
xchg
jle
je
cld
mov
outsl
dec
inc
test
cmp
popf
das
in
fisubs
rcl
dec
aaa
xor
stos
and
or
jmp
cld
std
int3
or
sti
pusha
push
xchg
dec
sub
aaa
lea
les
fnsave
mov
fdivrl
add
stc
jp
js
jle
adc
mov
das
aam
add
pop
push
sbb
mov
sub
mov
xchg
daa
out
cmp
cld
jns
cmc
adcl
jnp
cltd
outsb
push
dec
lock
loope
andl
xor
jns
imul
scas
sub
repz
out
nop
test
test
xchg
out
mov
push
inc
loopne
push
js
jnp
jb
dec
xor
xchg
mov
dec
arpl
sets
sbb
mov
aad
jp
jp
xor
jmp
sub
xchg
push
jl
repz
push
add
out
push
or
pop
ja
add
add
insb
rorb
xchg
mov
inc
negb
leave
les
aad
add
enterw
jmp
xchg
inc
mov
insl
xchg
std
push
aaa
jmp
jmp
inc
adc
sub
in
lods
test
sbb
pop
adc
mov
push
jmp
mov
dec
rcrb
xchg
add
lods
push
dec
adc
negb
bound
std
std
mov
fdivr
insb
sbb
addb
xor
dec
sub
in
mov
pop
push
push
or
add
pop
cmpsl
sbb
fcomps
mov
in
xchg
cs
xchg
mov
int3
scas
sti
popf
mov
xor
les
mov
ja
sbb
rcl
xor
gs
pop
mov
mov
shrl
icebp
and
leave
sbb
adc
out
pop
jle
repz
es
cmp
test
lcall
and
cli
outsl
divl
mov
addr16
push
lcall
mov
aad
neg
fwait
and
lods
in
inc
jbe
sbb
mov
mov
sbb
inc
adc
mov
xchg
pop
leave
xor
fwait
push
mov
and
mov
push
aam
pusha
push
inc
mov
push
cmp
jmp
cmp
inc
icebp
aaa
jg
jnp
enter
pop
jb
lea
cltd
mov
enter
scas
mov
cmp
push
fsts
lcall
out
data16
stc
inc
push
sbb
ret
negl
lret
mov
imul
xchg
mov
jo
mov
jecxz
popa
test
je
ret
test
add
jbe
jbe
mov
into
fsubs
insb
dec
jmp
jl
pop
or
jmp
mov
test
jp
mov
jnp
xor
cmp
cmpsl
jl
pop
repz
pop
xchg
fdivs
int
icebp
mulb
scas
mov
jae
inc
andb
fsubrl
cmc
shll
addr16
sahf
lods
mov
inc
dec
mov
out
ss
mov
sbb
add
xorl
jl
or
out
movsb
std
ja
sti
lods
int3
inc
test
cmp
arpl
lods
cmp
ljmp
ret
lock
cmp
xchg
push
out
xchg
jmp
mov
rorl
add
adc
pop
out
cli
xchg
scas
sub
dec
enter
roll
les
or
or
in
mov
sbb
and
pop
fisubrs
call
sarb
pop
aam
sahf
mov
xlat
adc
dec
ret
out
xlat
dec
dec
xchg
incl
dec
rcrl
fdivs
lahf
sar
jno
pop
in
mov
mov
insl
mov
mov
enter
sbb
mov
aam
sbb
add
ljmp
cmp
orl
ret
inc
add
inc
sub
in
fimuls
xchg
mov
sub
sub
in
push
std
mov
sahf
push
cmp
sub
and
orb
pandn
out
pop
jle
and
mov
xor
scas
stos
jl
jecxz
repz
test
fmul
inc
xchg
push
lock
aam
sahf
leave
fcmovb
mov
xor
pop
dec
jmp
xchg
pop
sub
loop
mov
mov
les
fisubrs
xchg
sub
stos
lea
xor
aaa
push
fcompl
xlat
lcall
mov
pushf
in
cmp
push
mov
fs
aam
lcall
in
das
test
pop
arpl
jae
les
bound
insl
or
add
insl
xchg
in
xchg
test
push
pop
clc
lret
sbb
push
dec
mov
adc
dec
insb
mov
mov
mov
scas
or
je
push
test
insl
popf
cmp
adc
mov
xchg
adc
jbe
fsub
cmp
iret
mov
jge
mov
lret
int
ret
das
inc
popa
aas
xchg
dec
dec
xchg
scas
xchg
jmp
sbb
in
jmp
inc
jl
sahf
movsl
test
adc
insl
jl
mov
das
or
jns
mov
cltd
lahf
loope
xchg
faddl
cmpsb
mov
pop
outsb
fwait
scas
pushf
push
dec
imul
outsl
mov
sub
jmp
adc
mov
or
cld
sub
decb
aad
les
int
dec
movsl
push
xor
ja
ret
fs
movsl
xchg
mov
adc
cmpsb
movsb
repz
xchg
test
les
cmpsl
outsb
nop
pop
das
push
jmp
jmp
jae
jno
push
pop
adc
scas
and
into
mov
cmp
mov
dec
push
mov
or
lret
fs
clc
outsl
inc
test
sar
ljmp
popf
data16
or
cmpsb
das
popf
fstpl
nop
sbb
inc
or
ficomps
cmp
push
out
bound
cmp
inc
mov
int
push
push
cmp
mov
jle
sahf
jne
xchg
ds
ljmp
dec
and
mov
dec
push
fsubl
adc
adc
sbb
je
mov
inc
divl
dec
mov
ss
cmp
or
add
scas
rorl
jnp
sub
cmp
and
insl
popa
daa
pop
ds
in
dec
jmp
nop
cli
rolb
idivl
and
pop
pop
xchg
loopne
push
aaa
dec
pusha
sub
je
mov
push
sbbb
xchg
push
xor
lock
add
xor
xor
insb
jne
js
das
inc
mov
xchg
shlb
inc
pop
hlt
cmp
jno
fmul
mov
je
adcl
loop
cmp
mov
add
or
cmp
test
sbb
push
sub
nop
sahf
pop
mov
mov
push
dec
fldl
mov
sub
sbb
pop
and
sbb
popf
cmp
and
outsb
insl
mov
leave
xor
sahf
jnp
lea
loopne
das
dec
push
cmp
push
inc
sbb
femms
add
inc
loope
fdecstp
mov
js
inc
mov
stos
in
lret
push
xor
clc
mov
jo
mov
lahf
jbe
push
dec
rorl
lahf
pop
jmp
into
push
sub
leave
xor
or
pop
es
mov
fmull
xor
push
shlb
nop
loope
movsb
inc
popa
ljmp
nop
lret
jno
mov
in
sub
mov
sub
mov
clc
testl
rcll
addb
fldt
rcll
movb
add
fcmove
jae
inc
add
popf
push
xchg
sbb
std
bound
in
shlb
out
push
movsb
fcomip
jge
in
or
cltd
rorb
std
mov
and
sti
lds
outsb
ffreep
push
jge
push
mov
jbe
mov
cmc
cmp
jmp
ljmp
iret
aaa
ljmp
adc
mov
fwait
pop
insb
jp
or
jle
insb
pushf
movsl
cmp
mov
shlb
outsl
add
push
jae
pop
out
xchg
xchg
sarb
into
dec
sub
jns
mov
xor
les
push
xchg
jmp
pusha
jmp
cmp
in
mov
or
inc
inc
cld
xchg
mov
imul
sub
clc
out
push
aas
jne
jb
imul
inc
add
ret
repz
stos
imul
add
mov
pop
xchg
mov
dec
lahf
das
cmc
mov
sbb
cs
adc
subl
pop
sbb
xchg
mov
jae
xor
mov
push
scas
and
test
jp
or
push
in
pop
gs
out
ljmp
xor
into
dec
pop
add
jg
ret
add
xor
sti
out
adc
cmc
loope
inc
stos
adc
addl
jns
xor
cld
dec
and
fs
addr16
test
push
mov
lcall
push
stc
addr16
push
push
xor
sbb
ljmp
test
xchg
mov
arpl
fistps
add
push
out
mov
in
cmp
mov
adc
lods
sar
imul
sbb
jmp
dec
cmpsl
jp
cmpl
ret
or
mov
int3
ror
data16
xlat
lods
jg
lret
shlb
fs
or
xlat
nop
jle
cmp
cmc
mov
inc
test
add
fnsave
adc
push
ja
incb
fs
push
nop
push
mov
lock
popf
xorb
pop
jg
pop
or
cmp
jbe
incl
or
ret
sub
dec
mov
mov
insb
hlt
ljmp
adc
mov
and
xchg
dec
push
inc
mov
mov
pushf
sub
ja
cld
dec
lcall
adc
dec
jnp
inc
pushf
in
dec
sarb
repz
sbb
aas
mov
xor
rorb
jp
loop
sbb
les
or
jl
jp
mov
imul
add
test
push
lods
xor
xchg
push
add
pop
xor
and
daa
push
xor
mull
xor
pushf
mov
ds
xchg
outsb
lds
sub
jo
pop
aam
push
sbb
shlb
out
int
cld
jne
scas
mov
dec
cmp
rcll
repnz
cmp
lret
ja
and
aam
icebp
or
cltd
cmp
xchg
adc
ja
mov
push
jmp
imul
push
inc
icebp
push
sti
xchg
dec
sbb
pop
push
mov
jp
pop
les
repnz
testl
pop
xlat
clc
mov
int
add
lods
and
mov
and
xchg
fwait
pop
les
dec
dec
jl
enter
sub
jmp
mov
push
ret
in
dec
sar
leave
rcr
xor
int
scas
push
cli
xchg
fsubrl
repnz
add
jg
sub
xor
sbb
sbb
addr16
fwait
mov
push
or
pop
xor
jmp
insl
mov
andb
adc
bound
jmp
mov
jmp
into
mov
mov
jnp
enter
mov
xor
cmpsl
test
add
pop
andb
daa
add
gs
rcll
inc
add
cmp
mov
xchg
clc
inc
ljmp
test
mov
mov
icebp
xchg
fucomp
int
sbb
ret
outsl
mov
add
fstps
and
ret
inc
fidivs
xlat
dec
push
dec
cwtl
jns
sbb
and
fcomi
ret
adc
or
dec
pushf
pop
pop
out
dec
loope
push
daa
sbb
cmpsl
das
das
test
jecxz
xchg
push
dec
stos
call
js
add
jbe
test
cltd
xchg
pushf
inc
mov
mov
clc
ret
roll
aas
sbb
cltd
jmp
test
push
test
das
cli
clc
adc
mov
or
mov
out
mov
lock
ss
adc
js
in
in
lock
adc
pop
in
xchg
mov
mov
out
xchg
leave
jmp
leave
inc
mov
push
movsl
aaa
fstps
ljmp
inc
pushf
cmp
push
mov
push
add
jnp
xchg
sbb
mov
out
fdivrl
imul
iret
fiadds
popa
cld
in
adc
call
mov
pop
dec
xor
mov
shll
call
popa
mov
loope
pop
mov
push
cs
adc
pop
lock
ret
adc
outsb
movsb
rcll
inc
pop
fadds
adc
adc
push
adc
fcompl
mov
push
mov
inc
enter
mov
movsl
and
fstps
jne
adc
jb
push
inc
stos
pop
imul
addl
jno
xor
sbb
push
test
mov
bound
das
mov
aaa
jne
xor
aaa
sub
scas
lret
das
imul
pop
out
push
pop
testb
nop
push
inc
cmpb
repnz
xor
int
mov
push
sahf
inc
xor
sbb
mov
jle
inc
pop
fdivr
jb
sub
xchg
push
xchg
cmp
loopne
cmp
pop
adc
and
jbe
or
xlat
mov
jno
pop
out
int
pusha
xlat
mov
shld
cli
lock
mov
loop
insl
cmp
in
loopne
lock
inc
mov
je
pushf
test
xorl
lock
mov
fcmovnb
lods
fidivs
jbe
fmul
xchg
test
int
cld
sbb
xchg
div
push
jb
jl
sbb
stos
loopne
pop
push
popf
add
xchg
mov
iret
jbe
sub
adc
stos
jne
fmuls
sub
popa
inc
nop
mov
inc
mov
push
popf
jne
jb
idiv
shlb
fsubrs
mov
mov
pop
push
or
xor
jg
or
xchg
lds
push
sti
mov
shrb
scas
bound
movsb
add
or
movsl
mov
pusha
inc
pop
out
out
xlat
xor
pusha
inc
popa
mov
mov
xchg
add
iret
adc
jnp
push
cs
out
orl
add
xchg
mov
js
xor
sbb
popf
clc
sbb
inc
icebp
xchg
dec
js
and
icebp
pop
push
jge
cmp
insb
js
aaa
jno
mov
outsl
ja
or
fs
xor
outsb
cs
mov
cs
stos
scas
dec
jp
push
fwait
mov
shll
cs
nop
nop
push
xor
sub
push
inc
stos
or
jg
adc
lcall
jle
ret
flds
js
xor
aas
add
testb
test
mov
movsb
adc
int3
fs
mov
xchg
arpl
xchg
xchg
mov
inc
ss
adc
dec
sub
adcb
inc
cmpsl
mov
xor
mov
fcmovne
aam
movsb
xchg
jne
sub
adc
xlat
inc
gs
out
jge
jo
lea
pusha
enter
xchg
and
xor
xor
js
lods
fsubr
and
in
pop
test
pop
add
pop
xor
jle
mov
xor
and
gs
push
adcl
sbb
xorb
mov
shrl
add
das
inc
jmp
cs
cmp
and
out
dec
inc
fidivrs
mov
scas
jns
test
mov
jo
jo
iret
pop
stos
jo
mov
out
fbld
sahf
pop
test
std
add
icebp
add
adc
cmpsl
pop
xchg
pop
mov
es
xlat
mov
xor
add
or
loopne
push
mov
sti
rorl
mov
jns
aaa
jnp
sub
ss
xchg
mov
xor
negl
jne
mov
push
xor
mov
ret
pop
cmp
push
in
pop
lcall
push
push
popa
vpcmpgtd
rol
jno
test
pop
or
sub
lahf
stc
ljmp
mov
shlb
test
xchg
sbb
repz
cld
pushf
xor
scas
dec
stos
cli
push
xor
into
loopne
xor
fsubr
mov
and
mov
xchg
in
es
mov
mov
mov
pop
xchg
jmp
lods
out
mov
jno
pop
mov
repnz
push
jb
xchg
mov
pop
pushf
xchg
mov
cld
pop
dec
or
jg
insl
fprem1
pushf
push
push
jno
les
ja
sub
fiadds
jbe
movsb
lods
lahf
movsl
push
mov
push
cmc
rorl
int
sbb
aad
lock
sarl
xchg
add
cld
xor
inc
and
stos
or
in
mov
mov
adc
cmp
scas
lret
jl
lcall
lret
int3
into
inc
cltd
addl
enter
push
cmpsl
in
dec
loope
shll
lret
or
lods
cmpsb
mov
or
jmp
and
iret
out
icebp
pusha
lcall
adc
icebp
test
icebp
and
rcll
mov
dec
bound
mov
aam
mov
adc
jnp
inc
pop
clc
add
es
mov
xor
rcr
ds
push
je
mov
ljmp
push
inc
bound
cmp
sti
mov
sub
sub
loop
inc
xchg
aas
push
imul
sbb
jo
xchg
hlt
lcall
jle
dec
jl
mov
rorl
push
jg
cli
inc
cmp
rorb
mov
pop
cli
cmpxchg
cltd
repnz
ret
cwtl
or
mov
sahf
add
in
mov
lahf
jns
cs
or
or
add
sub
sbb
mov
loope
mov
or
repz
stos
pop
cs
movsl
mov
or
stos
inc
xchg
lods
push
imull
out
call
ficomps
sub
pop
mov
push
pop
fwait
add
pop
sti
lret
inc
mov
aaa
cmp
or
sub
jle
fidivrs
lret
sbb
pop
das
mov
rorb
add
pop
lods
lahf
pushf
sarb
mov
mov
mov
lret
xchg
mov
loop
mov
sbb
push
mov
mov
xchg
out
push
inc
or
mov
inc
pop
fcmovbe
out
sub
insb
adc
cltd
int
jge
sbb
sahf
mov
into
lock
xlat
insl
mov
popf
push
lea
dec
outsl
out
int3
addr16
leave
insb
xchg
fnstsw
in
sub
push
outsb
push
shll
push
loopne
jno
pop
lea
xchg
or
fs
mov
or
sbb
cs
and
gs
ja
mov
sub
jns
out
xchg
mov
inc
push
lock
push
lock
loopne
pop
sub
in
test
inc
stos
cwtl
movl
and
or
cltd
xor
iret
outsl
adc
out
arpl
sti
lahf
add
cltd
push
add
sbb
movsb
fsts
mov
jo
test
lcall
add
jnp
xor
cmp
add
jmp
mov
adc
add
sbbl
out
sahf
mov
aam
cmc
lcall
es
cmp
cmp
fdivl
push
es
lock
cltd
mov
pop
std
shlb
push
fsts
mov
jl
mov
sti
pushf
fisubs
pop
decb
rcrb
unpcklps
mov
stos
or
pop
dec
sub
int
sub
iret
jge
adc
ds
push
push
std
push
rcl
add
fcoml
mov
xor
pop
repz
jge
dec
dec
lcall
fcoms
insb
das
outsl
pop
jns
sub
ret
sbb
in
inc
xchg
push
mov
xor
pop
cmp
fiaddl
fidivs
cmp
sbb
push
das
fdivs
fnstsw
pop
leave
dec
pop
ljmp
sarb
xor
fadds
cmpsl
ljmp
test
push
out
pop
insl
adc
and
or
int
outsl
push
outsb
jl
loopne
xchg
es
cmp
add
ret
cmp
in
jmp
mov
pop
popa
fwait
pop
or
add
mov
fisubl
and
decb
jecxz
push
push
or
xchg
fsubl
test
push
cmpsl
push
sub
and
daa
aas
movl
mov
cmp
ds
cmp
jmp
lods
xchg
cmp
cli
out
xchg
adc
dec
stos
pusha
xchg
es
outsb
sub
mov
add
dec
push
pop
fsubrp
sbb
les
jno
mov
ja
jecxz
adc
addl
cltd
adc
dec
add
sahf
loop
je
add
mov
mov
sub
or
push
rclb
sub
dec
inc
imul
pop
js
jne
rol
xchg
jg
sub
dec
push
dec
adc
fbld
sbb
mov
outsb
push
mov
lcall
sahf
in
andl
sbb
jmp
mov
pop
jecxz
or
int3
sbb
cmp
pushf
data16
inc
mov
fcoml
repz
rclb
fs
xor
push
jecxz
not
fisttps
pop
sub
or
aaa
adc
dec
push
into
scas
mov
ljmp
mov
stc
loopne
shlb
into
push
push
sahf
push
cmpsl
sbb
jbe
push
sti
nop
cmp
mov
loope
iret
cmp
loopne
outsl
pop
out
mov
data16
push
fwait
mov
inc
pop
and
outsb
mov
insl
les
cmpsb
sub
inc
test
dec
js
insb
xchg
fisttpll
dec
sbb
xchg
test
add
icebp
sbb
sahf
movsb
ss
mov
add
xchg
nop
adc
je
inc
lods
lcall
sbb
movsb
pusha
repnz
adc
in
push
cmp
lcall
sbb
insl
or
jg
sbb
into
stos
sub
xor
xor
ret
dec
movsb
popa
push
subl
jl
rolb
cs
popa
inc
je
dec
xchg
loope
cmp
push
cmpb
daa
inc
cmp
push
cmpsl
jp
jmp
dec
inc
mov
cmpsb
scas
loop
je
out
jp
int3
sbb
push
mov
jns
out
jl
xchg
xchg
sahf
adc
jbe
je
int
mov
lret
pop
mov
xor
add
inc
out
jl
test
pushf
add
mov
inc
cmp
ja,pn
lret
fidivrl
lea
loopne
jo
ret
or
inc
xor
leave
es
ss
rcrb
popf
add
jns
dec
pusha
pop
fildl
lods
lds
ja
pop
andb
test
jnp
sbb
xor
in
cmp
gs
xor
je
cltd
cltd
nop
iret
repz
xor
push
es
imul
rclb
adc
in
icebp
shrl
push
and
lea
adc
sub
add
dec
out
cmp
into
dec
iret
imul
lret
and
shrb
andl
fstp
lea
fistps
and
mov
inc
out
insb
xchg
mov
push
jge
inc
sar
addl
dec
mov
inc
out
mov
insl
subb
cmp
clc
and
inc
jge
xchg
push
adc
mov
push
mov
inc
mov
push
jo
or
adc
sub
inc
mov
xchg
sub
mov
aaa
cwtd
xor
and
pop
mov
cmc
popa
mov
lods
add
sub
push
xchg
aam
sbb
popf
push
dec
and
add
aad
xor
mov
in
adc
int3
pusha
in
inc
pop
out
les
pop
jp
addl
ljmp
sbb
cmp
les
out
loope
add
mov
sub
inc
ret
adcb
sub
ja
sbb
sub
xor
imul
rcl
mov
and
std
push
lret
inc
add
fistpll
or
mov
push
or
ds
jp
stc
ja
loopne
add
iret
or
adc
pushf
sub
mov
cmp
sbb
jno
rolb
adc
pop
dec
dec
lcall
add
out
in
jl
fadds
lods
pop
outsb
pusha
cli
rcl
loope
xor
dec
in
sub
jmp
lock
loope
add
cs
and
xchg
out
test
test
mov
cmc
or
stos
xor
push
dec
adc
out
out
and
push
ror
insb
cmp
cmp
lcall
cmp
divb
int3
mov
dec
mov
mov
add
mov
rorb
fstps
push
jmp
dec
fidivrl
adc
xchg
stc
cld
incb
jbe
inc
or
movb
cmp
pusha
popa
jae
in
pop
arpl
mov
cwtl
sub
mov
jecxz
cmp
push
or
jbe
loopne
test
mov
ljmp
dec
mov
jl
dec
sahf
test
xchg
or
dec
pop
lods
std
pop
sahf
or
inc
mov
and
adc
faddp
push
pop
sbb
les
mov
or
fnsave
or
push
pop
jb
sbb
push
popa
out
lock
jl
push
push
movsl
lret
cmpb
lahf
je
and
mov
fs
and
or
popf
sbb
nop
lods
pop
push
cmp
cld
pushf
dec
loopne
push
iret
dec
movsl
mov
imul
push
in
add
mov
jo
ror
jg
and
jmp
faddl
hlt
jb
out
arpl
add
iret
ljmp
push
movsb
ljmp
cmc
mov
mov
jge
push
add
xor
pushf
sbb
jne
cmovg
pop
adc
leave
mul
xlat
scas
js
xchg
or
js
repz
mov
icebp
stos
xchg
cmp
cld
jmp
sub
or
lret
stos
push
aam
dec
in
push
bound
push
push
mov
xor
fmuls
sub
and
xor
pop
adc
fwait
mov
aas
rol
mov
mov
dec
or
arpl
mov
jecxz
cmpsl
cmp
lock
stos
popa
cmpb
mov
add
ret
jbe
xorl
fidivrl
movsl
in
sub
adc
pop
xchg
enter
xor
sbb
push
in
and
outsb
mov
outsl
in
fdivs
and
xchg
mov
xor
popa
inc
lea
imul
mov
mov
mov
subb
adc
ds
repz
push
sar
movsb
inc
or
mov
push
ss
cld
add
out
push
enter
xchg
ja
push
sub
fwait
mov
cmp
je
fisubrs
mov
sbbb
and
shrb
cwtl
dec
pop
test
mov
xor
push
inc
xchg
or
mov
into
sub
test
add
adc
xchg
sbb
or
mov
out
and
cs
out
outsb
and
mov
lea
xchg
mov
fcomps
mov
dec
cmp
inc
fcomps
arpl
push
pop
in
push
jae
aad
cmp
or
xor
scas
subb
push
mov
pop
mov
mov
push
clc
das
or
xchg
xor
stc
xchg
jmp
fistl
movsl
cld
adc
sti
test
inc
sub
mov
sahf
or
mov
lahf
stc
add
dec
arpl
or
pop
jnp
xchg
lds
or
aas
sub
mov
and
mov
lret
popf
pop
int3
call
mov
jo
mov
pop
push
pop
jmp
cmp
fisttpl
add
insl
and
ds
jnp
in
dec
xorw
icebp
je
xlat
call
push
sub
popa
and
xchg
add
jle
sub
and
xchg
into
pop
fnstcw
int
pop
loope
test
int
pop
xchg
insb
rclb
pop
mov
adc
iret
clc
add
shrb
cmc
sub
dec
jmp
lret
dec
sbb
cmp
ret
popa
jg
and
insb
enter
pop
fcomps
push
mov
sub
cmpsl
or
push
and
mov
fsubrs
mov
sbb
imul
mov
sarl
scas
mov
movsl
xchg
and
jnp
scas
movb
and
push
lret
andb
cld
dec
xchg
in
mov
bound
lea
rcrl
mov
mov
hlt
push
nop
push
ror
fsubl
rcll
pusha
jmp
movsl
xchg
lock
xchg
mov
pushfw
mov
jge
idivl
or
mov
xor
stos
add
gs
popl
sub
les
mov
sbb
adcl
xchg
out
lods
mov
fwait
in
icebp
imul
mov
cmp
popf
cmp
pop
lods
adc
pop
sub
ss
test
push
int3
scas
or
shll
test
orb
cmp
mov
dec
inc
test
ja
lret
and
stc
jecxz
inc
jecxz
ret
and
std
push
or
das
in
movsb
mov
test
enter
xchg
cmp
push
loopne
cmp
sti
add
xor
stc
or
scas
daa
jae
push
jne
iret
fwait
dec
ds
sbbb
fmuls
mov
xor
cmpsb
mov
lahf
mov
mov
jbe
imul
mov
insl
hlt
push
nop
jb
or
jmp
and
shrl
mov
jge
and
repnz
icebp
dec
push
sbb
lret
dec
test
enter
or
stos
cwtl
rolb
or
xchg
cmp
shrb
scas
xor
dec
popa
cmp
addr16
dec
scas
cmc
jg,pt
cmp
xchg
imul
push
nop
stc
cltd
fnsave
sub
mov
mov
jmp
cwtl
gs
push
jmp
ret
push
cmp
mov
cmpb
pop
lret
aaa
out
dec
shrl
dec
dec
xchg
inc
sbb
int
inc
popa
push
pusha
jno
inc
mov
cmp
call
pop
mov
das
push
jbe
jmp
pop
mov
and
outsl
push
add
dec
data16
xor
loopne
pop
test
fs
pop
cmp
outsl
daa
cmp
cld
jp
jmp
push
hlt
mov
sbb
pop
adc
inc
dec
repnz
mov
das
aaa
fistl
stc
insl
push
arpl
dec
ret
and
push
or
jg
adc
xchg
cmp
add
lret
xchg
push
jb
push
push
mov
mov
mov
inc
daa
and
enter
dec
loope
cwtl
nop
jecxz
nop
fisubrs
stos
jbe
push
popf
loope
sub
xchg
sahf
mov
mov
ret
push
mov
sub
jg
dec
shlb
hlt
data16
or
sqrtps
lds
xchg
jecxz
mov
imulb
outsb
xor
and
popf
mov
and
lds
repnz
sti
dec
popa
in
rcrb
icebp
push
ja
pop
jno
addr16
push
push
xor
mov
dec
es
fdivr
pusha
nop
inc
cs
mov
int3
int3
and
lods
jbe
les
stos
push
jp
jno
pushf
loop
out
cwtl
inc
leave
popa
mov
sbbl
pop
lret
shll
cs
or
test
inc
inc
xor
outsl
clc
or
mov
or
je
dec
mov
xor
xor
jae
pop
inc
test
adc
mov
adc
jle
repz
mov
inc
stos
adc
sbb
sti
sub
xor
dec
jp
lret
mov
stos
scas
ljmp
andl
jl
int3
pusha
xor
xchg
js
repz
and
test
cmp
mov
mov
lods
add
mov
stos
out
sbb
mov
mov
mov
mov
std
push
shrl
cmpsl
lds
mov
pop
fnsave
loop
inc
or
adc
pop
outsb
fmuls
hlt
push
icebp
jg
or
mov
sahf
adc
es
cld
movsl
insb
mov
and
mov
hlt
pop
test
mov
ds
add
sub
cltd
popf
negl
fsubl
repz
in
cltd
aas
add
xchg
xor
inc
xlat
inc
inc
roll
sbb
push
jmp
sarl
out
loope
repnz
add
stos
shrb
pop
jb
or
icebp
pop
push
push
and
daa
popl
xorl
imul
jno
cmp
lahf
loop
call
add
stos
shll
addr16
fcompl
and
or
pop
adc
xor
dec
lods
dec
cs
insb
jne
sahf
loop
sbb
shll
jo
fs
insl
mov
std
ret
jg
mov
or
loopne
mov
test
shll
add
insl
testl
mov
mov
and
lods
rcrl
inc
jo
jno
pop
fsubl
mov
test
xchg
movsb
loopne
stos
push
fisttpl
enter
movsb
out
pop
sti
aam
xchg
jnp
add
test
mov
push
notl
sbb
push
sub
xor
sub
push
xor
movsl
and
aam
inc
pop
loope
adc
dec
mov
jns
dec
add
es
jne,pt
mov
or
and
into
imul
or
cmpsl
or
xchg
int
jg
fdivr
pop
fstps
rcll
adc
out
adcl
push
idivb
outsb
or
mov
fildl
xchg
jmp
push
hlt
sahf
orb
fldenv
mov
or
repz
mov
lret
or
and
test
sub
inc
sub
or
xor
aam
lret
sahf
ljmp
or
lock
sub
in
fstpt
test
jecxz
xchg
cmp
rcll
lock
mov
fucomip
jb
mov
cmp
xchg
ret
fisttps
xorb
in
mov
scas
imulb
xor
sahf
popf
rolb
sub
mov
out
inc
dec
sbb
mov
or
jge
pop
xor
in
pop
inc
in
adc
mov
addl
and
push
ss
rclb
insl
leave
push
sbb
jl
out
pop
imul
push
aas
dec
mov
jmp
scas
adc
push
mov
jb
mov
pop
mov
lock
rorb
cmpsb
testb
pop
outsl
mov
cmpsl
pop
lahf
mov
xchg
inc
scas
mov
std
push
jecxz
addl
mov
cwtl
out
jae
gs
repnz
inc
mov
cmpsl
imul
mov
cmp
adc
call
shlb
aam
iret
push
jb
ret
pop
andl
mov
das
xchg
addr16
pop
or
push
inc
inc
adc
out
repnz
mov
imul
xor
mov
mov
and
adc
in
mov
push
rolb
pop
loopne
sbb
popa
inc
xchg
sub
sbb
xchg
frstor
mov
mov
add
mov
xor
fdiv
jge
leave
idivl
and
jecxz
push
rclb
add
xor
test
ja
sub
xchg
jl
cmpsl
pop
in
test
imul
call
out
aad
cmp
test
sbb
gs
mov
aam
das
cmp
push
jne
push
xchg
cs
mov
or
xor
xor
insl
sbb
adc
andl
mov
shrb
xchg
jge
mov
fnstsw
mov
sub
fbstp
cs
and
or
pusha
dec
insb
inc
and
mov
repz
jno
andl
or
mov
in
jge
jmp
and
outsl
sub
jnp
xor
nop
dec
fistl
pop
and
mov
idiv
add
mov
xor
pop
aad
add
sti
mov
cmpsl
adcb
cltd
inc
push
dec
push
out
add
pop
inc
icebp
push
das
iret
jns
sbb
movsl
jns
xor
fs
out
lds
es
lea
dec
cmpsl
jno
cmp
pop
and
sub
jae
sbb
sbb
pop
mov
iret
imul
sti
and
xor
pop
xchg
les
xlat
dec
test
mov
lds
push
jnp
je
andl
in
popf
inc
addr16
cmpsl
mov
and
shll
test
clc
repnz
jo
out
xor
fcoms
jle
xchg
mov
test
adc
addr16
push
std
shrb
leave
dec
mov
mov
cmp
adc
and
jl
cltd
jno
jle
int
dec
mov
ss
in
add
pop
mov
xor
fists
fsts
push
pop
pusha
push
push
push
out
pop
orl
push
lock
test
sub
inc
scas
pop
mov
fdivp
js
xor
sub
push
adc
hlt
lock
icebp
adcl
push
adcl
jmp
push
or
inc
push
sub
inc
and
xchg
mov
sub
mov
pop
cs
and
mov
pop
mov
pop
inc
push
xor
jp
sahf
cli
repz
mov
in
les
xor
inc
lea
loope
aad
xchg
inc
andb
sbb
mov
cli
pop
mov
imul
xchg
jp
pop
or
dec
mov
push
sbb
adc
lock
inc
xchg
lret
subl
push
mov
mov
fdivrl
or
addr16
pop
push
leave
pop
add
jmp
sub
sub
pop
push
pop
push
cmpsb
inc
mov
xchg
sti
cld
popf
lahf
cmp
lahf
popf
add
push
ficomps
insb
in
dec
adc
dec
push
fmuls
jmp
aam
sbb
mov
jmp
jne
push
cwtl
push
cli
je
xchg
hlt
cwtl
xchg
mov
mov
xchg
add
adc
sub
add
cmp
lods
jae
adc
xchg
jp
je
sarl
loop
sub
jns
das
adc
int3
sub
inc
or
jno,pn
push
icebp
cmp
stos
adc
gs
in
inc
adc
outsb
add
xor
jne
popf
fnstcw
xor
add
div
setb
jg
subb
mov
test
xor
mov
jmp
fisttpl
dec
sub
lcall
push
imul
call
js
rcr
popa
inc
aas
dec
pop
lds
push
loope
scas
mov
add
add
jb
fdiv
stc
out
sbb
adc
sub
mov
mov
js
pushl
out
fs
or
iret
addb
mov
jmp
cmp
jns
movsl
push
add
ljmp
orl
add
xchg
and
ja
cmp
daa
stos
arpl
xchg
jne
xor
sahf
icebp
jl
cmpsb
lea
pop
add
sbb
fs
jne
pop
loop
sub
mov
add
pop
test
je
xor
adc
mov
incl
mov
sarl
mov
cmp
gs
inc
xchg
and
fdivl
jl
xchg
dec
adc
ljmp
or
jmp
pop
mov
fcmovb
ljmp
scas
mov
jmp
arpl
jle
ret
mov
mov
mov
or
xor
jl
cmp
cmp
in
ret
add
mov
stos
rorb
jno
sbb
mov
sarb
movq
pop
and
or
in
orl
push
jle
fcomi
pop
jo
sti
shlb
dec
shlb
jmp
lret
call
sbb
push
lcall
cltd
or
pop
sub
sub
imulb
dec
inc
iret
stos
lret
and
outsb
out
inc
cltd
dec
xchg
mov
sbb
fsubrp
stos
popf
pop
jp
iret
pop
mov
ds
stos
add
push
mov
in
imul
out
xchg
xchg
stos
sub
push
add
pushf
jb
popa
jmp
cmpsl
mov
out
subb
inc
mov
xor
sbb
pusha
aas
movsl
int
ja
lcall
dec
adc
xchg
jecxz
enter
outsb
or
mov
rol
fidivs
dec
shrl
nop
add
push
mov
jg
testb
lahf
loop
outsb
push
mov
dec
es
lds
repz
jmp
xchg
dec
es
and
pop
sbb
xchg
mov
sarb
pop
in
orb
orb
popa
pop
mov
fildll
dec
push
inc
or
fidivrs
pop
daa
sub
xor
hlt
sbb
push
xchg
das
nop
xchg
hlt
es
fcomp
loope
les
adc
sbb
ret
shlb
pop
inc
push
out
test
push
and
shr
jecxz
adc
inc
insl
cmp
xchg
popf
push
in
montmul
cmpsb
inc
pop
loope
dec
outsb
mov
in
mov
out
es
xchg
jbe
cmpsl
fs
movsl
out
jns
clc
cltd
cmp
xchg
fistpll
or
fsubs
ja
cmp
cmp
pop
decb
adc
mov
hlt
push
hlt
dec
daa
pop
push
xor
ja
push
jmp
sarb
aam
mov
jecxz
push
mov
loopne
jnp
repz
jo
into
frstor
and
cld
lods
jge
mov
mov
int3
dec
push
jne
stos
aam
or
pop
lock
loope
ljmp
and
dec
stos
pop
outsb
xor
movsl
mov
sub
xchg
repz
xchg
adc
push
arpl
push
xchg
leave
xchg
fcmove
adc
cwtl
push
add
jg
dec
jb
mov
rcrl
inc
hlt
shl
jmp
push
adc
mov
or
xor
scas
mov
sub
lods
out
push
hlt
movsb
mov
pop
xchg
xchg
out
ret
stc
pushf
mov
lock
scas
int3
add
add
mov
shrb
jmp
push
jb
push
or
mov
rorb
push
jp
les
icebp
pop
loopne
out
push
clc
fdivs
in
rol
jmp
inc
ret
aad
lahf
mov
push
fsubrl
cld
jnp
or
mov
imul
cmpl
mov
adc
jle
bound
les
cs
jle
inc
or
jecxz
mulb
outsb
in
push
add
in
jne
aas
fnstsw
pop
xor
and
arpl
pop
sub
inc
imul
adc
imul
lock
dec
jbe
mov
sub
adc
jge
push
aaa
and
gs
lcall
sbb
lds
lods
sahf
icebp
dec
fsub
movsb
dec
pop
add
xchg
dec
in
imul
xchg
out
movsl
je
sti
xchg
pop
das
and
add
fidivs
jge
js
push
inc
pop
adc
cmc
fstpt
add
les
or
inc
subl
mov
nop
mov
dec
xchg
inc
daa
mov
nop
sbb
mov
inc
movsl
mov
xor
dec
xchg
mov
push
jno
testl
ret
cs
stos
pop
iret
movb
mov
mov
inc
je
push
cwtl
push
dec
aas
lret
rcll
cs
or
jne
cmc
scas
mov
fisubrl
jecxz
stc
mov
ja
jg
push
fstpl
mov
popa
aam
repnz
addr16
sahf
or
les
aaa
sarl
lea
cmc
test
inc
cltd
jb
dec
shrl
or
push
mov
xor
outsl
xchg
test
fsubrl
inc
pop
pop
lods
and
in
jno
icebp
jne
pop
ss
or
xlat
movsl
das
ds
movsb
cmp
es
stos
xlat
add
pusha
cmc
faddl
cltd
cmc
shrl
cmpsb
fldl
dec
dec
jp
add
push
lods
adc
inc
xchg
dec
mov
arpl
aad
test
mov
je
cld
and
pop
out
test
int3
sub
shlb
hlt
push
add
mov
and
out
mov
pop
test
mov
lcall
fcompl
sti
mov
xor
adc
daa
cmp
test
test
jnp
std
dec
lea
fstl
int
rorl
sbb
loope
fdivs
in
les
data16
cli
and
test
xchg
push
fsincos
add
xchg
sbb
shrb
push
xchg
xchg
rcll
xchg
pop
push
mov
jo
push
addb
daa
in
movsl
das
jp
shlb
sti
lock
mov
aam
scas
mov
lock
push
mov
xchg
mov
testb
daa
mov
pop
mov
sti
out
insb
imul
negl
push
scas
mov
push
imul
insb
push
adc
test
psrlq
pop
cmp
lods
inc
repz
aaa
sbbb
mov
sub
jmp
ljmp
ffree
jae
fnstsw
into
xchg
imul
jne
push
test
inc
daa
jb
sbb
sub
lods
out
push
mov
in
pop
pushw
loop
into
xchg
inc
mov
cmp
xor
lahf
push
loop
imul
push
add
pop
xchg
sub
cmp
pusha
push
adc
sub
xchg
inc
dec
sbb
pop
ja
popa
jle
dec
mov
jg
scas
jae
dec
mov
push
pop
pop
mov
arpl
cmp
xor
or
fisubrs
leave
mulb
xchg
clc
leave
mov
clc
ja
adc
pop
outsb
xor
cltd
into
jl
fcoml
nop
cld
mov
mov
shl
add
int3
jp
mov
dec
add
adc
fdivrl
xchg
outsl
jns
push
or
add
xor
mov
mov
lahf
xchg
pop
mov
pop
enter
mov
xchg
or
lea
xlat
adc
xchg
sbb
mov
shlb
dec
mov
adc
xchg
enter
xor
pop
mov
add
dec
xor
jmp
testb
jge
pop
xchg
sbb
pop
inc
jmp
test
fmuls
dec
dec
fneni(8087
sub
mov
mov
cwtl
pop
fstpt
inc
test
add
or
les
and
cwtl
push
or
push
jns
popa
jne
xlat
push
add
fdivl
add
xor
stos
fnstsw
dec
pop
dec
mov
cmc
out
fstl
cmp
inc
push
xor
sbb
dec
cmp
push
push
pop
jbe
gs
or
sarl
decb
sbbb
adc
push
int3
test
mov
xchg
cli
lods
jle
mov
loop
and
icebp
mov
jle
pop
in
shr
test
sti
les
inc
insb
cmp
ret
hlt
jns
bound
cmp
pop
sbb
jb
in
div
adc
inc
pop
fcoml
dec
push
inc
insb
sub
imul
xor
ret
mov
fwait
add
test
ss
cmp
in
repz
mov
dec
jp
dec
mov
mov
xchg
xlat
addr16
insl
jp
xor
stos
arpl
inc
ljmp
xchg
inc
cs
pop
fbstp
cmpsb
mov
adc
jae
pop
popl
iret
lcall
or
stos
add
stos
inc
repnz
add
xorl
push
in
testl
pop
push
outsb
sub
dec
iret
sti
inc
shll
mov
mov
adc
dec
sbb
fs
or
js
or
sbb
hlt
or
add
ljmp
push
fldenv
imul
jb
dec
arpl
jnp
jo
cmp
dec
int
mov
add
push
fsubrp
jno
repnz
adc
lds
test
mov
sub
retw
data16
sub
bound
push
mov
dec
pop
pushl
shl
fisubs
or
mov
repz
sub
arpl
clc
jbe
jl
lahf
loop
push
clc
icebp
or
loopne
pushf
mov
xchg
jl
dec
popa
and
popa
int3
daa
test
ljmp
repnz
and
push
leave
jae
ss
mov
pop
flds
mov
mov
lahf
or
mov
adc
jns
jae
cmp
icebp
mov
add
xchg
mov
and
add
out
std
cmp
jle
xor
fstps
sahf
jp
ret
cld
push
movsl
adc
lock
sbb
pushf
sub
sub
jl
inc
and
movsb
dec
fldenv
std
cltd
movsl
cmp
pushf
jle
push
mov
shr
int3
movl
pop
outsb
push
sub
mov
sarb
aas
jmp
data16
gs
das
lret
call
icebp
mov
jne
xchg
mov
outsb
cmp
push
adc
inc
push
addr16
mov
and
addl
xchg
daa
fdivrs
loope
jb
shlb
enter
cmp
test
mov
cmp
add
ja
xchg
cmp
pop
xor
lods
fbld
movl
in
es
dec
jns
jg
and
cmc
movsl
mov
mov
lods
mov
stc
push
out
jne
sbb
adc
sub
add
cmp
lea
inc
popf
daa
mov
jmp
repz
fsubl
pop
enter
inc
sbb
pop
test
push
push
sub
or
or
out
imul
adc
stc
fcoms
ror
inc
fucomip
mov
push
cmpsl
mov
shll
jbe
mov
xchg
testb
out
dec
out
sub
adc
add
jne
pop
sar
dec
shll
push
mov
insl
jb
inc
adc
lods
outsb
cmp
dec
jge
dec
test
loopne
cmp
jp,pn
cwtl
lods
mov
sub
fisttps
dec
leave
cltd
xchg
popa
pop
pop
negl
inc
dec
cmc
and
test
cmpl
setp
idivb
add
ss
outsl
and
dec
jle,pt
xor
stos
push
repnz
or
fsubs
mov
or
sbb
dec
xchg
out
aad
in
push
aad
and
push
into
sub
fs
sbb
push
test
in
out
xchg
fwait
hlt
xor
lods
insb
jp
pop
jge
loopne
and
xchg
scas
cmp
fisubrs
in
insl
inc
lahf
mov
xor
fiaddl
inc
iret
mov
das
mov
aad
mov
pop
jmp
push
loop
insb
lret
inc
jnp
dec
and
dec
insb
xchg
dec
std
xor
mov
xchg
adc
mov
push
out
clts
scas
and
scas
fcoms
mov
test
outsb
mov
add
fcmovnu
stos
pop
shll
faddl
int3
xchg
in
mov
pop
mov
jle
xchg
insb
movsb
adc
push
pop
not
pop
add
sarl
add
rorb
insl
cmpsb
enter
dec
sub
or
fstps
jge
sahf
adc
rolb
sub
sbb
mov
cmp
cli
pop
ret
pop
sub
sbb
fstpt
movsb
je
scas
mov
into
test
dec
fldl
lods
lret
ret
mov
std
out
sbb
mov
cwtl
add
fcomp
jbe
mov
lcall
mov
fwait
push
out
shr
mov
gs
sbb
cmc
incb
mov
mov
addr16
mov
repnz
or
cmp
inc
dec
loope
shlb
insb
das
aad
mulb
mov
push
stos
cltd
sbb
gs
popa
dec
repz
into
jno
rcrb
cmpb
js
inc
aas
nop
stc
push
lods
aam
mov
xchg
inc
push
mov
pushf
and
iret
mov
mov
std
sbb
adc
aam
ficomps
xor
adc
dec
push
ljmp
mov
ficoms
dec
pop
mov
and
inc
and
sub
xchg
xchg
clc
dec
xchg
and
jmp
addb
mov
xorb
lods
loope
xchg
cmp
out
lock
xchg
jne
jnp
sahf
mov
jns
in
cmpsl
fmuls
mov
xor
jg
repz
adc
dec
sti
mov
outsb
add
inc
popa
aad
mov
mov
mov
mov
divl
stos
mov
stos
jmp
hlt
imul
lahf
movsl
pop
mov
mov
mov
lahf
iret
sar
cli
daa
push
test
mov
sbb
fildl
cmpsb
hlt
ljmp
dec
sub
push
xor
mov
adc
movsb
out
and
push
inc
xchg
rorb
pop
adc
lret
pusha
mov
sbb
pop
cmc
rol
cwtl
inc
xchg
pop
sub
cs
push
dec
out
jmp
fildl
call
sbb
inc
push
rcr
repz
or
insl
add
pop
lock
jns
repnz
std
dec
lret
mov
repz
pop
or
push
and
and
xorb
enter
test
cmp
xor
out
jne
xchg
mov
cmc
popl
lret
popa
lock
jbe
cmp
insl
jmp
xor
sub
cltd
xchg
adc
roll
add
mov
out
cmpsl
test
bswap
aas
or
daa
movsl
nop
pop
in
push
add
ret
add
push
pop
lock
add
xor
test
dec
sbb
pop
daa
sti
sahf
xchg
cwtl
dec
fs
mov
fwait
loope
in
sahf
clc
inc
daa
bound
push
pop
cmc
inc
repnz
clc
pusha
mov
lcall
cs
arpl
or
jnp
pop
adc
dec
es
jmp
pushf
mov
pop
shl
jle
cld
bound
cwtl
repz
fstps
popf
or
or
or
sbb
loop
stos
ret
insb
xor
leave
push
mov
xchg
inc
dec
mov
in
jle
stos
sbb
lcall
cmp
jns
pop
in
int
bound
aas
mov
fidivs
xchg
push
xchg
sahf
lret
push
movsb
pop
scas
mov
aas
or
fnstcw
push
fimull
mul
and
cmc
lock
divb
aaa
stc
mov
das
fbstp
xor
mov
scas
cwtl
adc
test
xchg
pop
mov
scas
pop
or
cmp
loop
outsb
mov
bound
int
sub
mov
push
xor
sti
jns
cmp
sbb
lea
mov
incb
push
ret
sbb
stos
push
mov
repnz
jp
adc
lods
xchg
jnp
xor
test
jo
aas
inc
jp
andl
arpl
int3
jo
lds
add
mov
call
and
cmc
repnz
ds
test
lods
outsl
sub
push
popf
test
sbb
mov
jge
int
aad
inc
js
xchg
aaa
pop
sti
pop
and
mov
stos
addr16
xchg
int3
int3
mov
outsl
mov
cmpsb
loop
cmp
mov
ljmp
sub
rorl
int3
sub
dec
adc
in
add
adc
mov
jne
test
mov
divb
daa
and
mull
xchg
int3
sbb
push
in
push
and
les
dec
dec
pop
ret
outsl
cmp
sub
fwait
push
lret
mov
inc
pop
push
shl
mov
mov
aad
add
fsubrl
mov
jns
inc
mov
mov
shrl
insb
mov
dec
jbe
js
cmc
inc
mov
leave
arpl
xchg
pop
movsb
or
xchg
stc
add
scas
hlt
mov
xchg
popf
xchg
scas
inc
es
and
lock
sub
xchg
mov
xchg
stos
inc
scas
arpl
scas
lret
rclb
idiv
aad
lds
test
cmc
in
jge
or
inc
add
jbe
push
dec
outsl
std
pop
shrb
ds
out
test
faddl
mov
mov
nop
mov
cmp
inc
repnz
inc
or
test
arpl
fistl
pop
sub
pusha
into
int3
jnp
fwait
scas
adc
and
adc
xor
enter
jno
ret
outsl
stos
fidivl
lds
jo
push
aam
cltd
cwtl
push
and
xchg
xchg
push
adc
test
aaa
daa
bound
lcall
aam
je
and
add
adc
mov
jge
pop
das
xchg
jb,pn
jl
sbb
call
pop
daa
in
stos
xor
aas
dec
es
repnz
fisttpl
nop
sub
adc
inc
adc
incb
pop
mov
test
inc
inc
sbb
add
fsubrs
bswap
mov
xchg
sbb
mov
push
push
and
insb
push
push
pop
jg
dec
pushf
push
push
jno
or
and
cmp
mov
call
scas
enter
inc
dec
pop
mov
fisttpll
pop
jo
mov
adc
int3
popf
sbb
popa
inc
lea
into
dec
sbb
inc
cwtl
aam
fsub
cwtl
mov
sub
adcb
inc
xor
mov
pushf
movsb
pusha
iret
and
inc
lahf
cmp
rorb
pop
imul
jbe
roll
mov
jle
cmp
jecxz
fiadds
and
add
pop
adc
and
fninit
jbe
xchg
jle
arpl
inc
sub
js
in
add
out
xchg
adc
dec
shlb
es
scas
inc
cmpsl
jmp
jmp
sub
sbbb
fbld
cli
adc
dec
movsb
stos
ffree
test
sbb
cmpsl
cmp
add
xchg
pop
icebp
jl
aaa
add
sub
xor
test
rclb
in
lods
lods
cmp
jbe
repnz
xor
xchg
stc
push
js
mov
mov
dec
xchg
adc
mov
mov
sub
dec
pop
sbb
adc
cwtl
pop
lahf
xlat
pop
add
push
sahf
dec
dec
sarl
aas
out
inc
xor
push
sub
and
cld
ficoms
out
cmp
cld
jno
dec
fs
les
cmp
jl
dec
ja
push
ds
push
mov
xor
xor
stos
adcl
dec
sbb
and
inc
aam
jle
inc
cmp
fwait
inc
and
ds
ljmp
sbb
pop
push
mull
xchg
incb
dec
cmp
push
jg
loopne
fldl
fidivl
movsb
in
cmp
dec
xor
pop
add
sahf
dec
in
dec
mulb
sbb
xor
inc
push
mov
push
mov
ljmp
jae
inc
pop
movsb
es
stc
scas
mov
adc
enter
cwtl
lods
lea
sbb
sbb
scas
mov
ja
xor
in
or
xchg
clc
push
lds
mov
sti
push
and
and
cli
imull
loopne
popf
sti
mov
scas
inc
dec
xchg
imul
rcl
mov
xor
nop
in
clc
in
and
ljmp
sti
jae
push
inc
mov
pop
subb
cmpl
mov
cmp
insl
stos
and
or
or
cmp
stos
xchg
dec
loopne
pop
lret
adc
ss
sub
iret
mov
mov
jmp
pop
and
sub
cmpsl
inc
xor
in
push
xor
sahf
mov
add
test
pop
addr16
arpl
nop
popa
pop
jno
dec
icebp
sub
rol
cmc
sti
dec
bound
adcb
addl
fldl
imul
add
and
jns
jge
sub
sarb
out
cmpsl
sti
and
movsb
or
ja
rsqrtps
andl
pop
ss
jno
or
ss
ret
pushf
les
dec
fwait
out
mov
popa
fildl
addl
bound
jns
aad
sarl
popf
in
jmp
mov
sub
or
mov
das
repnz
stc
jnp
cs
fmul
fdivrl
add
mov
jmp
sahf
xor
xor
in
lret
jnp
jae
pop
sub
sbb
pusha
lods
pusha
lock
cltd
xchg
mov
inc
add
aam
cmpsb
pop
sbb
mov
bound
ljmp
dec
aad
mov
dec
push
fisubs
and
fstpt
inc
aam
testb
jmp
scas
clc
mov
mov
jnp
ss
mov
ret
inc
test
or
sbb
aad
pusha
adc
push
cltd
ss
es
pop
pop
insb
sarb
or
mov
push
xor
mov
aam
jle
and
popf
xor
push
push
mov
fsubl
xchg
adc
loop
pop
sbbl
nop
into
fstpt
adc
movsb
movsb
adc
imul
push
aam
shll
add
lcall
adc
shl
xor
mov
adc
dec
push
mov
mov
test
or
or
fwait
pop
inc
cmp
cmc
xchg
push
decb
sbbb
subl
push
cmp
jmp
sub
repz
lock
int
fs
lods
mov
inc
cmpsl
loope
fstps
test
arpl
mov
bound
or
push
add
clc
cmp
cmpsl
imull
fimuls
mov
andb
xor
mov
adc
jge
loop
sbb
jnp
cltd
fwait
repz
adc
dec
in
imul
adc
xchg
jp
scas
scas
ret
fdivrp
int
outsl
jno
sub
sbb
inc
jno
adc
jns
or
repnz
stc
out
loop
sbb
mov
outsb
enter
out
lds
cmp
fstps
popa
decb
jmp
push
icebp
sbbl
mov
cwtl
jo
mov
dec
es
std
clc
xchg
jmp
jae
into
sarb
xchg
mov
pop
insl
sbb
cmp
movsb
fs
jle
xchg
outsb
push
in
fdivs
and
sbb
push
push
jbe
ret
in
mov
fistps
push
shlb
mov
ljmp
sub
jecxz
pop
rcrl
scas
in
push
shll
jmp
push
xchg
pushf
cmp
jnp
sub
rorb
fucomi
xor
push
dec
mov
pop
mov
jge
pop
pop
xchg
loopne
cmp
out
scas
in
dec
jecxz
push
sbb
loopne
sub
pop
repnz
dec
sbb
aam
jo
ss
jnp
push
adc
out
pop
call
add
loope
mov
mov
aaa
ret
cmc
or
mov
xchg
popa
mov
sbb
mov
in
or
loope
inc
dec
add
addb
xor
clc
fdivrs
xor
ret
or
cmpsb
sbbb
xchg
mov
call
es
jl
outsl
mov
movsb
out
xchg
xlat
adc
mov
jnp
popa
ja
pop
mov
out
incb
jp
inc
mov
out
lahf
inc
in
pop
addr16
repz
out
jl
ret
nop
xchg
mov
cwtl
ss
mov
xlat
cmp
jb
pop
int
loope
in
or
pop
in
ja
mov
fsub
sub
aad
cs
cld
pop
pop
xchg
or
xor
mov
arpl
lcall
inc
lret
sti
xchg
repnz
xchg
sbb
sbb
xchg
into
mov
pop
sbb
lock
cmp
ds
jmp
add
lock
cwtl
inc
xor
sbb
aam
jae
sbb
out
lods
loope
add
rorb
negl
out
and
mov
pushf
push
and
hlt
inc
push
fistl
inc
lods
fwait
pop
repnz
lahf
insl
mul
rsqrtps
lret
and
sbb
pop
clc
push
pop
fstps
adc
ret
jo
mov
or
mov
or
and
mov
or
mov
jns
mov
mov
jo
lods
in
ljmp
pop
inc
pop
xchg
pop
jb
sub
lds
dec
xchg
sar
dec
pop
jbe
nop
jecxz
and
popf
pop
inc
in
mov
movsl
push
js
movsl
xor
jo
xor
xchg
stos
mov
sbb
cld
mov
inc
xchg
cmpsb
mulb
in
push
or
sub
dec
pushf
mov
lods
adc
dec
xor
in
xchg
and
inc
mov
cmp
jo
js
stos
in
push
lahf
gs
or
jns
inc
inc
cmp
push
shr
addr16
jnp
adc
fdivrp
outsb
imul
cmp
mov
pop
fidivs
ds
sbb
cmpsl
mov
mov
xor
notb
or
or
xlat
cltd
movsl
enter
mov
in
mov
shlb
mov
lea
movsl
in
imul
push
push
adc
insl
pushf
pusha
push
adc
jmp
ss
cli
bound
aas
xor
push
and
xor
xchg
dec
dec
or
into
out
sti
inc
ret
outsb
jge
loope
push
xor
aas
loopne
loopne
cmp
pop
sti
sahf
lret
jg
ret
or
push
mov
cmovne
xor
mov
and
sbbb
dec
jae
clc
mov
fsubrl
aaa
jmp
push
lret
out
xchg
jns
movsb
cmp
outsl
rcll
in
mov
lods
subb
pop
gs
inc
movsl
loop
adc
stos
fists
cmp
pop
push
cmp
pop
lret
push
jae
pop
jnp
sbb
jno
std
add
add
out
push
popf
leave
dec
push
cmp
dec
pop
insb
and
mov
call
les
xchg
sbbl
in
add
xchg
add
inc
mov
sarl
pop
dec
add
pop
lock
imul
sti
or
jg
cli
adc
jge
jl
in
int
je
push
jecxz
dec
xor
pop
jbe
pop
mov
addr16
fidivs
loop
xor
mov
repnz
inc
jo
aas
sbb
push
lea
inc
int
pop
or
adc
int3
dec
andb
iret
fisubrs
jns
jecxz
test
test
dec
fidivrl
ds
test
imul
icebp
pop
jp
xchg
outsb
shl
cmp
loope
dec
lcall
pushf
mov
xchg
pop
dec
sbb
xchg
je
xchg
xor
insb
cmp
push
dec
pop
roll
adc
cmp
or
pop
hlt
test
add
dec
xchg
xchg
rcll
dec
rcr
out
add
mov
leave
xchg
int
lahf
xor
roll
aaa
leave
push
sarb
xchg
pop
fistps
mov
ret
sahf
lods
jp
sub
mov
mov
stc
mov
test
fs
dec
mov
and
in
setns
jle
repnz
push
je
mov
xchg
sarl
cmpb
push
loop
xlat
dec
cmpsb
or
lcall
xor
pop
xlat
and
cmpb
xchg
stc
scas
bound
pop
add
pop
rcr
popf
clc
icebp
mov
cmc
arpl
mov
mov
cmp
movsl
fld1
pop
jo
movsb
vsqrtps
js
jbe
or
sahf
dec
pop
movsl
mov
add
wbinvd
or
arpl
cli
imul
pop
push
mov
xor
sti
shrl
jne
and
mov
lods
dec
int3
and
int3
lahf
adc
sbb
sahf
push
int3
push
jb
int
fcompl
cmpsl
inc
es
test
aad
adc
icebp
ds
xchg
mov
xchg
push
mov
into
ja,pn
pop
out
ljmp
movsb
jns
fbld
xor
add
movsb
std
test
xor
outsl
mov
cmp
ljmp
mov
add
cwtl
out
daa
pop
mov
mov
add
dec
or
xor
pslld
mov
jp
enter
stos
jo
xchg
dec
mov
sbb
mov
and
ds
lcall
add
sub
push
shrl
sub
das
es
fcmovnu
insl
push
pop
add
ds
xor
sbb
es
inc
jb
loopne
cmp
outsb
mov
mov
sbb
add
push
push
repnz
das
sbb
mov
leave
or
jnp
mov
xchg
pop
hlt
pop
push
in
push
dec
pushf
xor
and
mov
cmp
cmp
sub
mov
cmp
sub
mov
sub
inc
pop
pop
inc
daa
push
and
fwait
push
jno
cmp
aaa
sub
or
int3
jne
addr16
mov
rcrl
pop
lcall
jp
xor
dec
jle
cmovo
inc
or
insl
arpl
jge
jmp
xchg
cmc
outsb
icebp
xchg
js
fs
sbb
mov
aad
es
xchg
es
adc
ror
cs
xchg
loopne
imul
aas
lock
add
test
stc
xchg
test
jecxz
les
stos
pop
int3
setne
cmpl
adc
push
int3
nop
mov
jno
ja
imul
in
rolb
mov
inc
mov
and
push
jp
and
daa
in
faddl
pop
xor
mov
sbb
or
or
xor
arpl
jmp
push
dec
shll
cmpsl
out
push
call
aam
icebp
lock
outsb
and
inc
adc
leave
lds
repnz
dec
xchg
orb
mov
inc
fdivr
pop
adc
and
or
rclb
add
int3
mov
dec
shlb
test
aaa
adc
dec
in
xor
adc
mov
jp
es
das
enter
or
in
addr16
scas
mov
jmp
dec
mov
push
sub
lcall
dec
lock
inc
dec
into
loop
fstpt
sub
xlat
adc
or
or
jae
add
lock
jne
les
scas
cltd
loope
adcb
push
xor
xchg
xor
fidivl
sbb
lods
pop
jmp
jle
int
sbb
testb
cmp
mov
mov
loope
sub
int
fcomp
mov
es
adc
sti
adc
pop
jno
insb
or
cli
rorb
je
bound
loopne
adcb
or
sbb
std
sub
loopne
imul
xchg
scas
xor
add
ss
jg
mov
xchg
loopne
leave
mov
or
or
jl
cmp
lods
sub
hlt
insb
jg
sbb
sub
push
imul
push
ret
push
push
xchg
in
mov
jns
lods
and
xchg
or
inc
sbb
mov
lcall
insb
pop
pop
test
cltd
xor
inc
inc
jg
mov
sbb
ret
jns
and
xlat
fdivs
mov
out
ss
xchg
pop
dec
cmp
sub
mov
adcl
outsb
popa
xor
movsb
testl
es
ss
sti
popf
mov
xchg
inc
mov
ljmp
add
adc
cmpsl
sub
fsubrl
cld
push
push
fs
fsubrs
xchg
sub
xchg
sub
inc
or
fmuls
xor
jp
rsm
and
frstor
xor
adc
xor
fs
jnp
test
dec
inc
nop
push
sub
jecxz
mov
xor
and
adc
dec
inc
inc
mov
bnd
adc
popf
mov
mov
scas
fsubs
subb
sbb
mov
or
std
int3
pushf
aas
stc
out
mov
fdivrl
lea
out
je
mov
push
mov
mov
mov
rolb
push
ficoml
jbe
push
in
imul
stos
nop
dec
cs
xchg
sahf
in
decl
adcl
cltd
aas
mov
fnstcw
rcll
push
dec
cmp
into
mov
pop
push
stos
ret
push
jbe
pop
out
fstl
xor
scas
xchg
movsb
int3
rcrl
pop
addr16
hlt
and
cmc
je
out
push
adc
dec
sbb
incl
and
and
dec
cmpb
ret
mov
adc
icebp
push
inc
and
or
loop
jae
sbb
fcompl
jge
mov
lret
in
push
aad
jo
flds
outsl
in
mov
imul
inc
adc
inc
je
xlat
nop
jno
adc
enter
cmp
cmp
les
repz
test
imul
or
sti
inc
xchg
inc
sbb
jmp
and
les
pop
mov
scas
fwait
adc
and
push
dec
in
mov
mov
xor
mov
dec
or
stc
insb
cmp
xchg
inc
pop
adc
cwtl
jno
fsub
adc
clc
mov
in
test
cwtl
dec
mov
dec
aam
fisttps
iret
ds
adc
repz
cmp
addb
or
push
mov
adc
or
aad
mov
or
das
xor
iret
cmp
frstor
mov
push
inc
cmp
ja
repz
xor
and
dec
data16
not
test
adc
mov
push
rolb
scas
in
cld
in
hlt
mov
ret
mov
mov
test
popf
mov
dec
insb
pop
mov
out
insl
and
fcoml
xor
xlat
imul
ds
pop
push
clc
enter
add
lcall
jp
sub
cltd
dec
out
cmpsb
pusha
movsl
jae
arpl
dec
sahf
add
imul
sbb
add
insl
lret
mov
push
cmp
and
outsb
lods
fwait
pop
push
xor
jecxz
push
roll
std
push
out
lcall
lea
inc
scas
pushf
xlat
pushf
repz
mov
sub
iret
ret
in
cmp
inc
inc
cmp
mov
jnp
sub
mov
fsubrs
pop
cmpsb
mov
test
xor
add
jne
das
pop
jnp
loopne
or
mov
aad
rcrl
add
inc
pop
jns
pop
or
mov
inc
add
push
dec
data16
fisttps
cmpsb
jge
mov
mov
jmp
jge
cmp
out
aam
lea
movsl
xchg
mov
and
mov
fbld
pop
je
loop
pop
out
sbb
mov
ljmp
xchg
xor
xchg
imulb
xchg
int3
cmp
ss
fcoml
shlb
cmc
jnp
in
or
cmp
mov
ds
xchg
in
lahf
xchg
sbbl
add
xor
inc
pop
inc
sbb
mov
dec
xchg
sub
adcb
repz
aam
xchg
scas
stos
xchg
push
sbb
mov
push
imul
not
into
nop
xor
pop
mov
aas
shrb
sub
cs
repnz
rcrb
lahf
push
cmpb
out
aam
xor
cmc
sbb
pusha
push
in
jo
adc
mov
sub
and
add
cmp
xchg
sti
sahf
jne
stc
std
pop
ret
rcr
mov
pushf
addl
mov
lret
inc
cmpsb
sarl
vandnps
pop
orb
sbb
rcll
rorb
adc
sahf
add
dec
dec
dec
mov
fsts
inc
adc
pop
and
jnp
mov
xchg
jnp
mul
addr16
lds
cli
mov
mov
pop
jne
movsb
ljmp
add
adc
gs
pop
into
lea
mov
push
push
inc
fisttpl
ds
cmp
sub
stc
outsl
incb
roll
call
dec
mov
jne
mov
jp
lds
sbb
xchg
cmp
inc
push
push
or
cmp
lock
es
hlt
into
cmp
pop
add
iret
enter
ja
sbb
dec
and
cmp
aad
pop
aas
push
mov
xor
stos
mov
cmp
iret
sub
imul
test
pushf
cwtl
mov
sbb
out
cmovns
movsb
out
jnp
push
shl
or
aam
adc
aad
ss
and
jne
dec
inc
mov
je
fcoms
lods
mov
dec
stos
call
jle
cmp
xchg
out
cld
add
fisubrl
stos
inc
cmp
mov
xchg
call
rolb
lods
pop
cmp
pop
into
pop
add
ret
add
sub
xchg
mov
orb
inc
or
icebp
icebp
inc
shlb
xor
xchg
cmp
jae
sub
mov
push
pop
subb
ret
lret
xor
or
xchg
jp
ljmp
mov
aad
lret
js
es
sahf
sbb
xchg
mov
data16
push
jns
xchg
push
clc
or
add
rclb
cmp
addb
in
popf
dec
rolb
add
hlt
xchg
ja
mov
push
jl
das
fidivs
jp
and
inc
inc
mov
aas
cmp
inc
cmp
sbb
scas
lcall
into
cmp
xor
js
jge
mov
inc
lock
enter
adc
nop
fbstp
out
in
mov
mov
xor
ds
out
arpl
jl
shl
pop
in
ret
mov
pop
mov
jno
insb
or
divl
inc
xchg
lcall
fnstenv
inc
jge
inc
sub
fs
popa
mov
enter
push
sub
add
test
cltd
in
fstpl
out
std
bound
jbe
cli
stos
push
and
and
cmp
sbb
mov
xor
aaa
cwtl
adc
popa
loopne
pop
xor
out
pop
mov
insb
pushf
jb
fiaddl
int
ja
dec
jmp
cmp
inc
jge
ficompl
les
es
loope
fsubs
aad
mov
sbb
mov
lods
push
adc
insb
lock
jbe
mov
in
inc
push
push
lret
scas
scas
into
loope
ljmp
out
mov
and
nop
and
inc
cmp
es
xor
or
cmc
fisubl
xlat
pushf
je
mov
sbb
push
push
jno
cld
loope
fisubs
mov
fst
xchg
fs
push
ljmp
xor
adc
cmp
and
fnclex
lds
add
inc
and
sbb
sbb
mov
mov
push
cmp
xchg
push
xor
sbb
xor
jg
and
roll
add
push
or
pop
cld
jp,pt
aad
in
inc
js
nop
sub
cmp
push
fisubrs
stos
pop
sub
or
ja
iret
pusha
push
pop
mov
push
jg
stos
in
jl
push
add
inc
jns
rclb
scas
and
xlat
enter
dec
daa
sbb
mov
xor
xchg
fbld
out
daa
and
adcb
and
push
ds
mov
xchg
imul
push
cli
stos
mov
std
testl
jne
stos
jnp
xchg
fldt
sub
cli
fwait
lods
test
popa
dec
je
aas
adcl
mov
xchg
add
insl
test
jmp
cmp
pusha
mov
fadd
sbb
or
mov
mov
jns
xor
lahf
mov
fistl
orl
cmp
adc
ret
sub
call
adc
mov
fnsave
mov
jo
xor
cltd
sub
lods
cmp
mov
shl
ror
add
mov
adc
jnp
aaa
add
jb
mov
jg
fsubp
int
sbb
pop
mov
mov
push
mov
lods
mov
xor
cmp
or
subl
pop
dec
xchg
popa
sub
lahf
sub
mov
movsl
adc
cmp
push
sub
push
push
fimuls
inc
sub
ss
dec
outsl
out
in
in
dec
mov
gs
mov
sbb
aas
push
rorb
fidivs
xor
push
pop
or
mov
jmp
gs
or
fnstsw
mov
cmp
mov
xor
je
mov
inc
lahf
mov
dec
int
inc
cmp
int3
inc
lret
fidivs
and
push
cmc
inc
pop
mov
mov
cmp
lahf
xlat
mov
dec
inc
mov
inc
call
rcr
adc
fdivrs
cmpxchg
loopne
ja
xchg
mov
sbbl
pop
jae
notb
push
nop
push
xchg
fneni(8087
repnz
mov
sbb
inc
mov
xchg
and
add
or
fdivr
mov
cltd
push
out
ret
sbb
mov
xor
mov
pop
jl
xor
daa
je
sarl
pop
sti
into
scas
pop
inc
aaa
sub
push
and
mov
jo
std
jmp
es
outsl
sbb
push
mov
push
shl
xchg
pop
stos
pop
prefetch
or
sbb
stos
in
lcall
cmpsl
push
sbb
mov
std
idivl
dec
mov
cmp
jae
int3
rclb
jnp
lods
or
push
data16
orl
lea
jno
dec
mov
inc
xchg
push
je
inc
pop
mov
faddl
mov
int3
push
jmp
sbb
call
or
push
and
sbb
xor
lcall
fprem
mov
filds
jo
and
adc
and
or
insb
fiadds
in
mov
xchg
ja
mov
bound
fimull
mov
imul
shlb
jp
sbb
cmp
rorb
test
js
roll
ljmp
pop
dec
mov
lods
push
hlt
adc
or
mov
mov
ja
scas
mov
mov
inc
push
insl
popf
mov
mov
scas
jp
inc
dec
pop
and
and
pop
pop
stc
mov
scas
cmpsb
hlt
mov
fnsave
fdivrl
xchg
out
xchg
addr16
jbe
flds
sti
pop
mov
and
ljmp
xor
add
add
cmp
pop
mov
leave
lret
cmp
cmp
fs
imul
fcmovu
and
imul
mov
stos
xor
lret
enter
xor
cltd
lds
lods
adc
xchg
cmp
popfw
push
cmp
and
sbbb
adc
lahf
mov
pop
pop
push
dec
cmp
adc
addb
lock
popl
xchg
mov
scas
mov
je
movsl
sub
sub
sbb
add
cmp
dec
fcomip
aam
dec
andl
inc
in
lea
mov
inc
repz
sbb
push
adc
rorb
call
hlt
jle
outsb
sbbb
xchg
mulb
and
mov
xor
movsb
mov
mov
xor
add
clc
push
pop
imul
addr16
mov
aad
pushf
rorl
dec
pop
fscale
cmovle
cmp
arpl
sub
cmpsl
sub
stc
cli
call
inc
lea
adcb
xchg
incl
testb
in
arpl
out
imul
inc
dec
mov
xchg
cmpsb
dec
orl
out
jl
add
sub
jmp
inc
mov
jbe
in
jg
jecxz
les
lods
test
adc
push
fildll
out
sub
sub
cmp
ljmp
xor
push
cli
lret
xchg
in
dec
push
sbb
mov
xchg
push
mov
fimull
push
test
push
sub
iret
scas
xchg
std
push
sub
pop
xor
movsl
sbb
jmp
ja
mov
sbb
mov
fnstsw
fidivl
mov
jno
xchg
or
stos
clc
jno
pop
pop
es
jne
mov
inc
add
cs
lea
or
lahf
xchg
imulb
xor
xor
lea
stos
sub
cltd
lret
addl
or
pushf
mov
orl
pop
mov
or
cmpsl
mov
xor
cmp
adc
mov
cmp
jns
inc
mov
pushf
imul
ja
mov
icebp
loopne
cltd
hlt
mov
sbb
mov
sahf
cmp
cmp
add
cmc
push
xchg
mov
cltd
adcl
xlat
test
fsubr
cmp
scas
or
pushf
cmp
pop
xchg
popa
test
jl
jno
lret
out
xor
mov
cltd
into
mov
shlb
movsb
aaa
testl
lods
fadds
nop
ss
fdivrs
cs
lcall
xor
imul
movsl
repz
mov
cwtl
and
xchg
loopne
ret
and
pop
or
xchg
dec
sub
testb
sub
jae
inc
out
sti
fsub
or
jg
xchg
dec
pop
add
je
negl
mov
int
jl
jle
nop
xor
add
fld
pop
cmp
push
pop
arpl
and
ljmp
addr16
faddl
or
pushl
dec
xor
xchg
xchg
arpl
imul
insl
fucomi
mov
jge
call
mov
push
add
adc
mov
xlat
hlt
or
mov
call
push
lret
mov
lcall
push
xlat
int
fsubl
xchg
imul
gs
pushf
daa
rcrb
push
test
idiv
or
jnp
fdiv
outsl
lock
fnstenv
mov
jge
sahf
aam
mov
sarl
push
cmp
fs
add
aas
sub
lcall
mulb
int
mov
insl
sbb
stos
mov
addr16
dec
movsb
sbb
sbb
push
sub
call
or
aas
hlt
faddp
mov
lea
sub
stos
popf
xchg
xchg
cmpsl
mov
mov
mov
lea
rorb
in
lret
xlat
jp
dec
fwait
inc
dec
add
in
scas
sub
push
and
xlat
cltd
cmp
or
mov
mov
jle
and
sbb
insb
pop
xor
test
fmulp
fs
hlt
std
js
xchg
add
fisttpl
add
inc
jle
lea
sbb
iret
jns
ret
mov
enter
je
fnstenv
ljmp
pusha
inc
jmp
jae
or
ret
ret
addb
or
popf
sahf
sub
push
mov
bound
and
inc
push
and
in
loop
cmp
mov
andl
jb
test
test
jmp
cmp
scas
test
cli
lret
mov
push
mov
and
sti
push
mov
mov
xchg
dec
sti
aad
jb
jle
mov
dec
add
dec
cmp
push
or
notl
cmc
jne
xchg
nop
jle
mov
dec
jmp
sub
mov
xor
repz
jbe
mov
lds
ja
inc
incb
xor
jae
and
leave
push
in
movsl
in
sbb
push
or
xor
lods
add
cmpsb
cmp
dec
js
pusha
fnsave
pop
or
out
dec
lret
imul
sbb
push
out
and
in
push
pop
or
jne
adc
stos
das
pop
js
push
mov
repz
cld
ss
int3
mov
pop
jno
mov
out
lds
xor
in
mov
pop
sub
push
sbb
push
mov
sub
inc
mov
les
popf
sbb
mov
dec
xorb
ret
mov
and
push
push
dec
popa
lods
ficoms
js
jl
jp
es
xchg
lret
pop
push
mov
sub
and
daa
outsb
dec
pop
addl
dec
cmp
pop
pop
sub
lods
inc
sbb
cs
pushf
jg
pop
add
popf
add
icebp
mov
sub
mov
mov
push
fsubrs
cmp
stc
xchg
add
pop
mov
adc
in
inc
jmp
data16
fxch
adc
adc
fsubs
jno
loop
jno
ret
mov
in
clc
or
and
mov
ljmp
push
mov
es
xor
mov
test
xor
cld
push
pop
xor
test
mov
testb
sub
dec
fisubrs
push
leave
xor
out
jbe
dec
xor
into
rcr
rclb
sub
mov
inc
mov
jne
sub
fnstsw
arpl
lods
hlt
es
inc
loope
lea
jnp
mov
push
stos
mov
js
negl
mov
jge
movsl
add
adc
loopne
lods
dec
dec
sbb
test
in
test
add
sti
lods
push
jbe
aad
jbe
movsb
push
sub
cmp
mov
mov
bound
push
ret
js
jmp
dec
and
jnp
stos
test
dec
cmpsl
aaa
cld
jge
test
xorl
stos
cvtpi2ps
jb
outsb
mov
jle
sbb
out
cmp
pop
pushl
inc
pop
aaa
insb
movsl
in
mov
mov
push
or
iret
sbb
push
out
cmp
mov
pop
and
inc
adc
int
pop
adc
cmp
insl
incb
jmp
icebp
jne
enter
fs
xor
loope
mov
ljmp
xchg
push
mov
rorb
sbb
repnz
dec
cwtl
adc
cmpb
stc
lcall
lods
mov
jle
bnd
adc
push
and
mov
adc
fcmovnb
inc
cltd
out
out
aaa
mov
andl
xor
mov
xor
pop
aaa
dec
cwtl
cmp
notb
mov
or
sti
add
cli
xchg
add
popa
pusha
das
jecxz
jle
cmc
inc
lea
or
int3
mov
fidivrs
inc
mov
push
outsl
push
pop
lods
cli
fisttps
out
imul
adc
hlt
gs
in
push
icebp
cld
mov
aad
mov
dec
movsb
mov
ljmp
adc
das
mov
push
mov
sbb
push
mov
mov
mov
aaa
push
div
mov
fsubl
dec
fdivs
adc
jb
xor
or
push
popa
xor
xchg
xchg
xchg
xor
push
loop
cmp
and
jns
test
adc
sahf
adcl
sub
jl
jecxz
mov
push
xchg
mov
call
fdivr
jecxz
mov
mov
ret
fstps
shlb
popf
rorl
xchg
hlt
mov
lret
repz
dec
addl
je
dec
jg
movsb
out
int
test
ljmp
clc
je
adc
cmp
add
jno
clc
daa
sub
out
jecxz
shl
mov
sbb
xchg
jmp
mov
pop
es
pop
cmc
inc
pcmpgtd
inc
rorb
stc
xor
nop
lret
mov
jo
adc
mov
push
in
xchg
sub
dec
lds
cmp
sahf
xchg
subb
in
mov
rcrb
in
aas
lock
std
gs
int3
shll
xchg
jle
es
xor
xchg
scas
out
pop
call
ret
jns
ret
mov
push
je
pop
pop
pop
jno
sahf
mov
notl
aaa
mov
out
sbb
jnp
cld
shrb
cmp
xchg
aas
pop
add
sbb
in
les
jno
das
std
testb
xor
data16
cmp
pcmpeqb
mov
push
or
ret
dec
jmp
cmp
jns
fldcw
hlt
loope
pop
js
sahf
mov
sub
aas
cmp
addr16
shlb
adc
or
mov
push
js
test
mov
rclb
cmp
loopne
pop
add
out
lea
pop
dec
ret
cli
add
sbb
push
std
test
xor
xor
inc
mov
or
movsl
test
mov
lret
fimull
arpl
divl
dec
mov
iret
pop
or
mov
cmpsb
es
data16
jb
fisttpl
out
inc
lret
jnp
mov
lods
in
mov
mov
in
push
jnp
js
add
sub
mov
pusha
sti
mov
aas
fcomps
pop
jg
and
int3
cmp
jae
scas
enter
cmp
fdivrl
stos
fsubrs
idiv
test
or
test
xchg
daa
pop
pop
enter
mov
loop
sub
cmp
lcall
clc
daa
std
mov
mov
lds
xchg
xor
rcrb
jns
es
xor
pop
fiaddl
xor
ds
jmp
fsubrl
cmc
test
mov
dec
imul
int
lret
in
fbld
add
clc
xor
mov
mov
iret
mov
mov
add
dec
std
dec
sbb
dec
lock
mov
aad
cmp
into
imul
and
ret
sub
push
jne
inc
cmp
add
pop
out
mov
sbb
push
or
add
or
sahf
mov
xchg
mov
sub
arpl
inc
in
popf
dec
test
jns
pop
sti
pop
scas
mov
inc
push
divb
adc
out
sbb
shll
jns
frstor
cmpsl
loopne
lock
mov
ret
push
loopne
out
das
and
xor
sub
add
aad
cmp
xchg
pop
pusha
sti
rcrb
cmp
pop
sub
out
xlat
bound
mov
jno
stc
xchg
imul
fs
pop
lahf
cmp
leave
push
mov
pushl
add
outsl
sbb
inc
repnz
mov
inc
and
mov
pop
xchg
cmp
pop
sbbb
mov
daa
in
in
mov
push
add
push
adc
dec
filds
adc
loop
shlb
jg
inc
mov
cld
mov
decb
xor
pop
ret
pop
inc
cmpsb
add
inc
cmp
aas
ds
outsb
bound
jns
and
outsb
loop
cmp
jo
adc
mov
pop
xchg
xorl
jnp
pop
nop
ds
das
jg
or
popf
mov
jl
imul
nop
roll
fbstp
test
mov
jl
bound
scas
sahf
imul
xor
sub
in
std
in
and
dec
js
xchg
lea
int
int
mov
pop
dec
pop
data16
leave
es
cmc
inc
arpl
lods
js
outsb
adc
sbbb
jns
jp
enter
pusha
mov
push
or
inc
movsb
xchg
icebp
loop
pop
sub
scas
cmc
into
sarl
je
test
int
cmpsb
int3
and
mov
hlt
lock
repz
fidivl
or
mov
jecxz
pop
ud1
adc
test
movsb
je
insl
mov
fsubl
jl
cmp
das
xchg
mov
jl
jae
addr16
xchg
xor
mov
lret
addl
cmp
or
dec
sub
dec
mov
int3
or
cmp
ss
xor
aas
popf
adc
and
je
push
jecxz
bnd
mov
or
pop
mov
or
repz
dec
pushf
push
lods
std
test
xor
sbb
push
jmp
sub
push
cwtl
sub
cmp
xchg
mov
lods
push
sub
mov
sahf
jmp
insb
xchg
icebp
out
mov
outsb
jo
push
sub
repz
dec
ljmp
cmpsl
jae
mov
add
adc
test
pop
sbb
push
xor
add
mov
xchg
loopne
ds
xchg
adc
xor
xchg
pop
jae
xchg
adc
loope
or
jmp
inc
stc
adc
call
cmpsb
or
lods
insl
stos
sbbb
pop
subb
add
icebp
sbb
sbb
push
inc
sbb
add
adc
jo
mov
push
mov
pusha
or
shll
mov
push
sbb
cwtl
pop
mull
mov
pop
xchg
lods
rcr
aaa
or
and
and
mov
pop
jmp
mov
jmp
xor
movsb
add
sub
test
icebp
xchg
cmp
out
test
pop
mov
xchg
sub
rorb
push
push
xor
iret
fs
xchg
psrlq
dec
jno
ja
lcall
loopne
mov
inc
loopne
stos
pop
jecxz
out
mov
jno
or
xchg
or
andl
jns
pop
in
push
test
gs
xor
push
lods
cli
mov
or
ds
sub
cmp
int
inc
aad
mov
leave
or
sti
call
bound
and
jp
mov
fdivr
in
push
nop
mov
stos
mov
in
int
adc
sub
mov
xor
enter
dec
mov
mov
test
ss
sti
dec
lahf
notl
adc
pop
mov
movsb
out
add
test
insb
bound
add
mov
pop
stos
scas
out
dec
jo
test
outsl
mov
rcl
daa
mov
cmp
add
mov
jge
mov
xchg
or
mov
adc
xlat
mov
sbb
jle
mov
movsb
cmp
fdivr
les
sub
add
xor
xchg
imul
les
or
cld
scas
pop
and
sbb
add
subl
leave
pop
ret
ja
mov
sub
loop
pop
and
addr16
push
cld
loop
cwtl
push
push
mov
adc
pop
arpl
movsl
es
mov
push
add
cmp
xor
orb
mov
xchg
pop
cmp
sub
cli
roll
sbb
and
lcall
mov
je
push
out
or
icebp
mov
jle
sub
outsb
sub
xor
outsl
stc
aaa
mov
push
int3
daa
icebp
xor
push
shll
xchg
dec
jno
sbb
rcrb
or
sarl
test
mov
sub
imul
std
pushf
inc
unpckhps
sub
cli
outsl
in
dec
test
les
pop
mov
lds
mov
aaa
xor
pushf
popf
out
imul
sbb
inc
pop
shrb
xchg
sbb
gs
test
into
adc
sub
out
cli
cmc
ret
add
inc
fstpl
bound
dec
and
roll
fimuls
out
dec
flds
repnz
int
pusha
or
std
shrl
push
xrelease
pop
pusha
je
jge
lock
add
dec
pop
outsl
xor
pop
loopne
sarb
push
jae
or
mov
jecxz
add
sub
popa
sbb
dec
lret
outsb
inc
lret
lock
enter
cmc
mov
js
sahf
jne
xchg
xor
mov
fwait
js
loopne
mov
pop
cwtl
addb
lods
mov
and
push
les
inc
jp
mov
inc
or
or
scas
cmpsb
push
loopne
jmp
and
dec
rcrb
or
loop
push
mov
inc
std
sub
dec
aaa
icebp
mov
out
js
xchg
dec
adc
xlat
enter
mov
nop
or
sub
jle
jl
cmp
outsb
xchg
les
andl
jg
sbb
scas
pop
xor
cltd
insl
adc
jbe
insl
leave
ret
das
push
enter
and
insb
add
dec
test
arpl
sbb
push
add
pop
rcll
lods
mov
sbb
pop
jnp
sbb
mov
fs
inc
push
jnp
jb
stos
push
or
addl
cmp
ss
jae
jae
lahf
xor
dec
sarb
cs
fwait
push
jl
nop
or
ror
mov
cs
into
cmp
addr16
clc
test
push
popf
test
arpl
cmpsb
sti
xchg
pusha
nop
push
lret
pop
les
cwtl
jnp
cwtl
mov
cwtl
jecxz
inc
aaa
rcrb
jl
pop
push
inc
xor
jmp
add
cmp
and
fdiv
xor
jge
pop
jg
or
loop
mov
jo
jbe
or
push
inc
xchg
sub
xlat
cltd
pushf
clc
out
jp
jmp
dec
ja
leave
xor
xor
xorl
jns
outsb
and
cli
mov
mov
cmpsb
fcmovnbe
in
popa
lea
xchg
sub
and
movsl
dec
inc
test
xchg
or
push
inc
das
dec
adc
fnsave
push
sub
mov
inc
adc
mov
xchg
loopne
sub
sub
dec
in
inc
arpl
push
push
cmpsl
sbb
mov
cli
lcall
push
shrl
addb
pop
inc
xor
fsubrl
fimuls
adcb
inc
mov
xor
mov
fdivrs
sub
adc
divl
fsubl
pusha
scas
cmp
xchg
cwtl
add
push
lcall
int
mov
jbe
pop
push
dec
inc
inc
fwait
add
adc
sahf
mov
adc
shll
sbb
pop
or
xchg
std
mov
ss
or
hlt
adc
int
dec
xor
dec
or
cmp
xor
xchg
push
push
jo
ja
pop
int
dec
test
dec
mov
push
push
mov
incb
xor
loopne
dec
scas
in
cmc
pop
ret
jne
ss
adc
cmp
add
add
ljmp
mov
sbb
mov
dec
xchg
sahf
inc
in
loop
das
adc
mov
iret
or
movsl
or
pop
sub
test
aam
test
repnz
mov
sub
xor
pop
mov
mov
ret
iret
dec
in
and
pop
pushf
push
or
scas
lcall
lret
ret
jne
jnp
mov
in
jno
mov
mov
pop
sbb
xor
mov
add
cmp
fldl
cld
mov
jo
lods
ds
xchg
jo
pushf
ss
aaa
test
and
es
cmp
inc
dec
push
jle
inc
lds
sbbl
push
fimull
pmullw
subb
mull
cli
insl
notl
inc
sarl
dec
sub
xchg
pop
push
test
lods
pop
xor
mov
int3
loop
rcll
das
fistps
aad
inc
bound
xor
in
cltd
push
push
jmp
and
fsubrs
negl
push
xchg
dec
xorl
cmp
enter
jg
das
xchg
mov
lock
mov
xchg
push
xlat
nop
mov
sahf
iret
rcl
dec
push
xchg
shl
adc
cwtl
pop
pusha
out
cmp
lahf
adc
in
or
or
jp
iretw
jnp
cmpsb
das
inc
add
les
pop
daa
ss
iret
insl
test
and
imul
pop
mov
aad
mov
stc
or
fld
push
lret
in
or
pop
mov
add
mov
mov
sbbl
adc
pop
call
sbb
sbbb
xchg
lahf
pop
mov
cld
sbb
stos
push
bound
mov
mov
mov
jge
lahf
mov
cmp
repnz
sbb
xchg
jl
jl
adc
test
or
push
aad
mov
fistps
je
xchg
pop
and
adc
into
mov
add
and
mov
jne
ret
cmp
dec
sub
sub
into
repz
lea
cmpsb
ret
movsb
mov
adc
call
push
and
loopne
in
or
fnstcw
in
sub
aad
pop
cli
ret
push
add
mov
or
in
pop
push
fsts
inc
inc
mov
mov
or
repz
pop
lock
ljmp
out
bswap
mov
cmp
sbb
testb
mov
insl
ds
mov
fmuls
dec
jb
sahf
arpl
xchg
popf
xchg
jecxz
pop
das
mov
ss
test
mov
mov
xlat
cmp
push
jl
test
ret
adc
and
lcall
jbe
push
rolb
mov
scas
jo
out
and
inc
pop
mov
push
push
cmpsl
xchg
addr16
jge
pusha
insb
mov
test
out
inc
xor
outsb
xor
pop
adc
cmp
adc
out
jno
and
mov
push
movl
lea
aam
in
jae
sar
mov
jl
das
xchg
xchg
aam
mov
sahf
or
iret
mov
loopne
mov
vpmovsxwq
fwait
shlb
sbb
stos
cld
das
cmp
sub
mov
repz
inc
jle
mov
pop
xor
xor
inc
mov
adc
or
jmp
fwait
subl
popl
inc
out
jp
dec
mov
mov
decl
xor
popw
dec
pop
or
outsb
sbb
lahf
sub
shrb
int3
cmp
sti
gs
shll
es
stc
ljmp
pop
xor
mov
cmc
popa
push
jg
ficoms
cmpsb
scas
xchg
push
stc
or
jnp
test
and
icebp
xchg
cmpl
sar
cltd
sbb
insb
mull
mov
fldt
loope
aas
enter
jle
rcrb
fld
gs
aam
adc
lret
sub
lcall
mov
inc
negb
loopne
adc
das
hlt
jnp
sub
push
lret
int3
sub
jmp
pop
ror
push
inc
aam
ja
sub
int3
mov
sbb
dec
mov
ret
repz
pop
ljmp
add
imul
bound
inc
sbb
iret
or
adc
int3
mov
inc
mov
lret
cmc
pop
jne
fxch
mov
sbb
ja
mov
sbb
inc
push
lret
icebp
or
inc
xor
insb
cmp
xchg
sbb
stos
sbbb
cmc
sub
mov
ret
loop
fsubs
pop
out
out
aam
sub
jecxz
pop
add
cmp
aaa
cmp
or
popf
outsl
int
adc
hlt
sbb
xchg
out
and
hlt
dec
bound
mov
xorl
mov
leave
repnz
movsl
jecxz
push
pop
leave
xor
push
jg
insl
stos
and
add
and
cld
push
je
add
dec
lods
inc
push
out
xchg
fcoms
sahf
cltd
lea
dec
inc
xchg
outsl
cmp
scas
and
fists
mov
into
icebp
fcoml
ja
push
pop
pop
in
add
testb
sub
pop
mov
mov
jge
stc
test
nop
xchg
dec
sbb
fdivrs
daa
jecxz
add
cmp
call
stc
cmp
js
lock
cltd
stc
in
lret
dec
dec
inc
cmp
negl
push
stos
lcall
out
ret
jne
sarb
jg
jg
mov
lcall
and
shrb
rorb
or
adc
ds
xor
es
mov
je
scas
push
std
or
and
xlat
mov
mov
es
test
rorl
sbb
and
in
mov
inc
cmpsl
cmpsl
mov
mov
jle
cltd
cld
and
insb
mov
adcb
xor
mov
or
xchg
pop
dec
pop
shll
mov
lock
std
sbb
out
cmp
arpl
popf
mov
ficoms
in
jbe
or
sbb
in
int
repz
in
addl
jmp
jmp
fidivl
or
cmp
lods
push
push
and
fcomps
inc
or
shlb
push
into
sarb
in
sub
mov
inc
icebp
sub
in
xor
pop
or
push
mov
ja
fsubs
test
aam
or
adc
push
and
xchg
dec
movsb
fsts
ja
sbb
inc
loope
fstpt
je
ljmp
aas
jb
loopne
aam
mov
in
cmc
jl
xchg
ret
push
sbb
or
cld
enter
xor
sbb
xchg
shll
add
mov
mov
add
aas
pop
pop
pop
adc
popa
adc
mov
pop
pop
sub
push
dec
pushf
cmp
std
dec
jmp
adc
ja
shlb
sub
mov
roll
aaa
ss
rclb
mov
or
pop
add
jp
xchg
scas
bts
insl
cmpb
outsl
and
sub
sar
dec
xorl
push
jbe
std
addr16
xor
push
mov
add
mov
daa
call
add
push
fistpll
add
sbbb
push
jnp
inc
sbb
lcall
add
jo
jmp
icebp
xchg
mov
out
cltd
add
pop
inc
xchg
adc
cmp
sub
sbb
loopew
push
in
jle
push
and
xchg
andb
xchg
jl
je
es
mov
mov
aas
xchg
pushf
mov
js
inc
mov
jecxz
mov
add
aaa
or
test
mov
mov
adc
pushf
xor
out
push
in
ret
push
bnd
jb
dec
fcmovnbe
lds
cltd
dec
adc
cmp
jg
and
pop
dec
orb
push
jb
xchg
sub
sbb
pop
lcall
mov
insb
stos
or
arpl
ret
or
push
dec
mov
push
sbb
lret
cmp
mov
inc
inc
jo
pushf
xchg
in
fidivrs
pop
push
dec
jns
loopne
ljmp
cs
out
lds
jno
sbb
xor
mov
mov
out
rclb
xor
add
leave
dec
fdivp
xchg
setg
mov
sub
cs
daa
mov
mov
or
lret
in
stos
sbb
jmp
cmc
push
sub
xchg
xchg
add
inc
jo
mov
jo
sub
adc
dec
jnp
jl
push
push
xchg
and
call
add
inc
in
inc
xor
mov
int
and
fisubs
loop
fs
xchg
ljmp
cmp
pop
fwait
test
and
sarl
loopne
fdivr
pushf
insb
cmpsb
xor
xorb
jecxz
pop
aam
xor
lret
inc
cmp
sbb
add
sbb
add
outsb
loop
inc
stc
xchg
mov
push
push
dec
mov
push
mov
mov
add
pop
add
inc
or
or
jne
xor
jb
mov
dec
cli
or
jmp
cltd
clc
imul
shrl
cmp
cld
je
dec
push
sub
insl
lahf
or
push
negl
jp
dec
jmp
loope
in
cmp
fisubs
in
xor
sub
mov
lock
fdivl
sbb
sti
mov
cmp
adcb
pop
mov
pop
jmp
popa
in
fisubs
mov
aas
mov
je
sbb
jo
jns
mov
stos
les
insl
mov
mov
xchg
mov
push
nopl
fdivl
mov
add
and
jle
xor
inc
cs
imul
push
cmp
mov
lret
sbb
out
repz
orb
dec
sbb
jb
jnp
shr
mov
in
mov
pop
inc
pop
jae
popf
xchg
stos
dec
mov
mov
xor
jne
push
or
test
add
dec
sbb
cs
push
aam
outsl
pop
jecxz
cmp
fdivrp
mov
lret
dec
sahf
mov
mov
inc
jmp
mov
sbb
les
je
push
jns
stos
sti
or
in
add
fmuls
orl
inc
roll
pop
mov
cmpsb
aaa
jne
int
fdivl
aas
bound
lods
out
andl
pop
jp
ficomps
sbb
mov
in
pusha
fwait
cltd
xchg
sbb
dec
or
or
pop
jne
and
jp
and
push
mov
aad
popf
pop
popl
gs
mov
aad
cltd
stos
push
aam
xor
jmp
dec
jno
add
pop
mov
adc
or
mov
addb
adc
dec
jns
mov
clc
int3
ficompl
pusha
cmpb
jne
dec
ret
lods
cmp
cmp
test
rorl
pop
aad
jl
cmp
sub
test
subl
and
or
sahf
iret
fwait
aaa
stc
shl
decl
add
imul
mov
ret
jno
pop
sbb
push
mov
or
rorb
add
jge
pop
adc
sbb
imul
mov
push
mov
sbb
add
jne
jmp
cmc
inc
xchg
dec
in
mov
ljmp
mov
push
int
repz
int
icebp
cmp
xchg
rclb
shrb
ret
ja
mov
xor
dec
cmp
mov
sbb
mov
and
sub
mov
inc
stos
in
fists
psubusw
add
mov
mov
sbb
jecxz
in
inc
movsl
mov
test
outsb
fmul
xchg
mov
mov
cmp
cmp
lret
jne
xlat
xchg
call
push
mov
add
mov
pop
add
nop
jle
out
cmp
push
sub
jmp
test
cmp
cmpsb
mov
sti
xchg
fcompl
loope
mov
pop
sbb
mov
jo
lcall
sti
inc
lret
imul
mov
clc
and
xor
cld
inc
dec
mov
mov
xchg
dec
test
cmpsl
repz
fwait
mov
jae
sub
pop
sbb
push
xor
sbb
stos
xor
push
idivl
jns
dec
mov
dec
cs
subl
xor
mov
dec
sti
xchg
push
shll
int3
cmpsl
lahf
incl
js
ret
xchg
sub
dec
jns
rcrb
stc
xchg
cltd
push
nop
sub
movl
fisttps
cmp
sub
push
mov
mov
movsb
mov
inc
push
pop
fistpl
arpl
das
and
mov
stos
test
into
adc
mov
ja
sbb
cmp
pop
or
test
push
jp
shrb
add
repz
insb
or
jl
call
or
in
and
psubusb
mov
jecxz
sbb
pop
cltd
das
les
inc
test
mov
adc
jle
pop
clc
dec
mov
dec
fwait
aaa
add
pop
std
or
movsb
xor
push
test
mov
mov
mov
arpl
fisubrl
ret
movsl
out
sub
or
and
cmc
ds
adc
filds
xor
cmpsl
jmp
js
outsl
loopne
mov
mov
fwait
xchg
sub
gs
mov
push
xchg
aaa
mov
mov
in
xchg
fldl
or
insb
xchg
mov
nop
int3
push
hlt
add
loope
push
mov
xor
call
fisttpl
in
lret
add
das
test
sub
rcll
lds
js
repz
decl
push
hlt
jmp
push
stc
mov
jl
pop
xor
leave
ret
sbb
cld
xchg
test
xor
sar
out
cmp
inc
in
cs
insb
inc
pushf
addl
adc
sub
dec
fs
in
sarl
add
and
jp
jle
repz
faddl
push
divb
jge
aaa
push
fdivl
inc
sbb
mov
push
pop
loope
push
pop
idiv
and
shll
mov
sub
cmp
pop
pop
push
adc
jae
shlb
fldcw
push
xchg
pop
inc
lahf
cltd
fwait
aaa
fisubs
mov
cli
inc
dec
adc
dec
data16
cmp
mov
pop
add
mov
cmp
push
in
inc
pop
loopne
ret
out
adc
sbb
outsl
dec
in
jo
or
xor
and
imul
call
scas
lcall
out
lcall
xor
testl
push
mov
sub
sbb
fcoms
jl
adc
push
andb
dec
xchg
jb
in
push
jecxz
mov
fadd
add
push
movsb
adc
iret
out
daa
out
sbb
mov
andl
mov
imul
imul
shr
jg
ficomps
pushf
push
jne
add
add
out
cmp
pop
and
jns
loopne
push
test
fists
bound
sbb
jo
or
addl
sub
push
cltd
fs
mov
xchg
nop
push
xchg
push
ljmp
jg
mov
fwait
or
into
aad
pop
out
pop
inc
cltd
in
outsl
into
mov
mov
in
jecxz
jo
or
test
and
lea
es
jmp
fcoml
pop
or
push
pop
jb
pusha
dec
insl
out
xchg
push
mov
pop
xlat
stos
push
jg
mov
clc
xchg
hlt
loopne
lahf
push
push
fldenv
sbb
aad
movsl
pop
test
ds
jg
add
movsb
icebp
rol
dec
je
out
lret
pop
jne
mov
mov
jge
pusha
pop
pop
sub
out
iret
add
xor
stc
add
rorl
flds
dec
dec
dec
stc
xchg
test
enter
cmp
xchg
xchg
xchg
mov
stc
shlb
in
mov
ret
push
pop
xlat
push
imul
fcmovne
mov
adc
addps
xchg
cmp
push
or
dec
ljmp
loope
mov
or
inc
fwait
iret
inc
inc
or
rcrl
or
inc
das
outsl
addb
push
push
push
sub
test
pop
pusha
push
pop
arpl
movq
bound
mov
out
and
mov
jp
inc
dec
jg
xor
add
stc
jp
xchg
or
stos
in
icebp
fsubrp
int
lret
mov
inc
dec
adc
iret
add
mov
pop
idivb
sbb
dec
call
jmp
inc
sbb
inc
daa
or
lea
and
adc
das
pop
xorb
nop
int
and
repz
dec
push
sbb
aad
xor
cmp
cwtl
ficoml
ss
test
xor
test
lods
push
mov
aad
xchg
stc
and
mov
inc
ss
nop
or
test
xchg
sarb
fcmovnb
jns
jne
jo
jg
xchg
push
enter
inc
shll
cmc
adc
pop
loop
rcrl
lods
aaa
add
jae
adc
jnp
push
dec
js
sub
out
sub
paddq
js
xchg
rolb
loope
sub
cmpsl
push
shl
xor
xchg
push
lcall
or
jle
xor
shlb
addr16
cmp
in
dec
or
sbb
popa
outsl
div
jecxz
pop
imul
iret
dec
in
mov
inc
and
adc
bound
jns
xor
add
jne
jmp
cmp
mov
movsl
adc
jge
pop
mov
cs
xchg
insb
hlt
adc
out
push
and
jp
dec
adc
lds
inc
add
jns
sti
test
out
adc
pushf
adc
cmp
cmp
repnz
in
push
and
fmuls
push
xlat
or
push
fisubrs
sbb
popf
out
lahf
xchg
or
data16
lahf
out
sub
pop
outsl
jnp
loopne
push
aam
pushf
jge
enter
push
and
jnp
stos
push
mov
fwait
mov
xchg
mov
fidivl
loop
jns
mov
in
cmp
inc
xorl
fwait
xor
jg
jnp
sub
jae
pop
ds
add
inc
dec
fisubrl
pop
gs
cli
mov
push
and
pop
mov
mov
sbb
ljmp
xchg
shrl
xchg
int3
das
hlt
call
aam
mov
jp
pop
pop
dec
xor
ja
call
lock
stos
test
pusha
sarb
notl
push
clc
lds
push
aad
adc
repnz
rorl
dec
outsl
jl
scas
int3
ja
add
mov
shrl
mov
push
mov
jns
inc
subl
mov
dec
test
std
mov
shlb
pop
lods
push
pop
icebp
mov
sbb
in
push
push
or
add
and
cmp
call
mov
mov
inc
mov
pop
mov
inc
and
ljmp
mov
mov
adc
testb
or
mov
jl
xchg
cmp
les
add
aam
push
out
int
dec
and
lods
dec
hlt
nop
jbe
mov
dec
pop
pushf
lahf
push
hlt
mov
dec
jge
pop
mov
out
xor
mov
pop
jmp
push
xlat
or
sub
loop
les
in
inc
fdivrs
mov
cmovb
push
sbb
xor
mov
jns
cmc
pop
adc
out
sub
pop
sub
cmp
dec
cmp
idivl
adc
ss
add
push
mov
in
es
in
jmp
int3
and
or
cltd
mov
cli
adc
mov
dec
ja
add
add
std
mov
push
pop
and
loope
mov
xor
adc
loopne
pusha
pop
pop
mov
lock
insb
xchg
xchg
adc
mov
sbb
and
fsts
mov
imul
cmp
int3
das
jb
roll
pop
pop
pop
into
cld
mov
lahf
jle
xchg
xchg
jg
fisubs
sub
lahf
cmp
jp
insb
xchg
lods
and
adc
xor
or
imul
mov
lods
sub
test
std
xlat
sbb
mov
test
ss
daa
push
lods
push
into
ljmp
dec
aam
jp
push
inc
pop
mov
push
dec
in
scas
lea
fisttps
jl
call
addr16
add
sub
add
sbb
cmc
lret
mov
adc
mov
pop
stos
out
mov
in
imul
mov
dec
or
pop
xor
std
test
rcrl
in
adc
inc
subw
sub
xchg
sbb
xor
fstps
jno
in
clc
testl
cmpb
mov
je
cs
xchg
mov
rcll
mov
iret
rorb
imul
popf
in
and
scas
insb
add
push
loope
inc
jbe
jnp
or
addl
jne
bnd
lahf
int3
int3
out
daa
xor
out
mov
push
push
stos
gs
xor
push
ret
cmpsl
and
xchg
push
in
sbb
mov
and
cwtl
mov
mov
mov
mov
pushf
je
push
pop
rcrl
jge
dec
ss
rcl
imul
sub
test
mov
sbb
pop
sub
mov
jbe
cld
adc
mov
jge
add
popw
ret
push
xchg
inc
xlat
jge
lea
ror
ficomps
xor
push
lods
fs
out
jae
aas
cmc
xlat
mov
stos
lea
mov
test
loopne
sub
fistpll
out
cmp
push
hlt
dec
ja
insl
outsb
sub
or
dec
mov
gs
dec
movsl
roll
lods
aas
inc
sbb
sub
and
sub
shll
add
push
in
popa
and
jae
push
loopne
xor
add
lea
pop
lds
push
sbb
incl
popf
cmp
aam
movsb
xor
addr16
mov
mov
mov
or
mov
push
mov
cltd
cli
call
lea
inc
fmuls
loop
inc
xor
cltd
push
cli
jmp
push
bound
daa
aam
clc
jg
lret
mov
std
xchg
adc
notb
cwtl
mov
test
pop
ds
popa
or
xor
push
adc
stos
lods
mov
dec
lret
test
jg
mov
mov
and
pop
mov
jge
lea
rol
sbb
nop
das
leave
sub
cmp
jnp
ja
test
cmp
cmp
push
mov
push
and
sbb
xor
xchg
push
adc
push
imul
aas
aad
int3
push
xchg
xlat
adcl
imul
mov
test
xchg
and
sbb
insl
and
and
in
loopne
inc
fwait
mov
cltd
push
andl
scas
shrl
jle
xchg
or
ss
add
test
cmc
dec
rcrb
imul
cmp
subl
xor
fists
and
push
lret
mov
add
mov
outsl
pop
xlat
lea
jle
dec
add
pusha
push
jb
sar
jno
mov
add
sub
or
lret
push
fistpll
call
cmp
test
add
sbb
cmp
xor
test
dec
lods
xor
mov
pop
mov
aas
lods
ja
pop
pop
and
imul
fldt
xchg
aaa
or
fwait
int
out
and
loop
lods
mov
gs
xchg
sub
in
sbb
inc
push
jnp
adc
push
inc
in
icebp
mov
int3
and
pop
push
mov
bound
or
xor
push
xchg
pusha
sub
push
movsl
hlt
sbb
movsl
lahf
in
lcall
mov
stc
jl
lcall
dec
nop
mov
mov
adc
mov
pop
mov
cs
xchg
jnp
scas
shll
popf
xchg
bound
adc
xor
jecxz
popl
dec
jge
mov
jle
or
jno
xchg
pop
or
pop
arpl
fcompl
push
jmp
fisubs
call
mov
scas
mov
add
fiadds
repnz
out
cmc
mov
add
mov
jecxz
stc
xor
daa
cmpsl
pop
lods
xchg
or
sub
test
pop
outsl
lahf
xchg
rcrb
jl
xchg
add
adc
add
cltd
das
repz
dec
jo
xor
fdiv
mov
aas
in
push
push
push
cltd
out
xlat
roll
pop
aaa
stc
mov
inc
sbb
lock
stc
cltd
cmp
addl
or
shrb
imulb
pusha
sub
outsb
push
adc
jl
call
outsb
inc
lods
push
mov
repz
jp
mov
cmp
mov
mov
ret
jnp
inc
pop
lahf
cmp
aam
jp
mov
inc
jl
hlt
cmp
sub
pusha
into
pop
pop
ja
popa
cmpsl
xchg
ja
nop
mov
push
stos
mov
mov
cld
jge
orb
out
enter
or
cmp
shrl
xorb
push
sbb
add
jae
mov
or
loope
stos
sarl
cmp
push
test
fstpl
mov
outsb
inc
ljmp
test
dec
dec
sbb
jecxz
and
cmp
mov
mov
out
test
and
repnz
and
mov
mov
cltd
inc
or
dec
xchg
sub
addr16
outsb
or
sbb
insb
pop
int
dec
aam
cmp
xlat
fisubrs
fsubl
push
or
and
cmp
inc
or
jle
xchg
clc
imul
dec
jne
push
repz
mov
pusha
xor
push
pop
jno
mov
or
push
add
test
mov
mov
aaa
leave
mov
add
xor
lea
fmull
mov
dec
cmp
out
dec
xor
bound
xor
sub
dec
leave
cs
mov
jle
xchg
lea
call
or
js
inc
xlat
sti
test
jecxz
mov
xor
addr16
cli
xor
dec
mov
and
add
inc
daa
fmuls
jle
notl
inc
dec
inc
sbb
adc
pop
push
je
aas
dec
imul
sub
sub
mov
cli
fistps
add
paddsb
jae
adc
inc
nop
into
fmuls
inc
repz
pop
dec
lahf
add
dec
inc
std
jae
aas
mov
mov
jae
mov
xchg
dec
aas
shrb
scas
sub
scas
lcall
out
and
clc
dec
stos
repnz
call
out
lea
pop
iret
mov
mov
lods
enter
in
jbe,pt
aas
call
test
cmp
sub
in
xchg
jne
test
push
push
pusha
mov
and
idivl
cmpsl
lcall
fwait
lds
adc
add
cmp
adc
dec
stc
out
jo
mov
jo
inc
cmp
ss
ss
push
cmpsb
gs
fs
das
lahf
add
mov
sbb
inc
ret
gs
or
fisubs
push
aaa
dec
add
loope
xor
fsubrs
xchg
sbb
ret
push
jne
out
jp
rclb
popf
shll
dec
ret
stc
dec
jne
fistl
icebp
inc
iret
cmp
sbbl
or
cmp
add
mov
loop
outsl
stos
pusha
push
mov
sti
cmc
mov
adc
adc
out
shl
or
sub
dec
dec
mov
or
mov
push
pushf
mov
xchg
out
ror
sbb
mov
add
outsb
pop
fisttps
ja
jb
clc
xor
push
jns
cmpsb
mov
mov
js
cmp
ror
jmp
rclb
pushf
dec
loopne
push
lahf
repz
lcall
cmp
in
xlat
leave
fistpll
pop
jae
jno
pop
push
repnz
enter
ficoml
jbe
dec
data16
cmp
sub
add
hlt
in
xchg
ss
fucom
sahf
ja
daa
imul
sub
lds
dec
push
lods
xor
int
pop
cmp
adc
cmp
test
cmpsb
adc
les
outsl
push
in
ret
xor
and
jg
je
dec
cs
jle
lods
hlt
cwtl
pop
fidivs
in
sti
rclb
ss
aas
xor
cmp
sbb
scas
cmp
jne
rcll
incl
lcall
js
cs
sub
subl
mov
cmpb
or
xor
jg
leave
xchg
cmp
das
jb
xchg
jnp
out
mov
mov
sbb
pusha
negl
push
in
adcl
jb
rclb
scas
add
mov
mov
repz
outsb
xchg
iret
mov
adc
adc
lods
push
mov
mov
bnd
sub
enter
and
in
test
jmp
sub
icebp
inc
add
in
xor
add
mov
jnp
leave
push
mov
test
jne
test
jo
adc
cmp
mov
and
outsl
enter
add
scas
mov
enter
ljmp
mov
jo
add
mov
rorb
sbb
jle
or
inc
or
push
repnz
sub
pop
cmp
push
pushf
lea
cs
cltd
pusha
jl
adc
jb
push
outsl
and
in
jae
out
pop
dec
addr16
mov
jne
mov
iret
outsl
lods
mov
xor
lret
dec
mov
or
adc
out
sbb
push
or
adc
mov
outsb
pop
enter
repz
xor
push
fildl
adc
mov
pop
std
mov
sbb
sub
jg
add
jb
out
jnp
scas
test
iret
leave
dec
pop
fstl
ljmp
mov
and
cmp
aad
sbb
sbb
outsl
imul
adc
inc
pop
fs
fwait
pop
jp
xchg
sti
cmp
sub
inc
out
das
divl
pop
push
add
cmp
cmpb
mov
inc
lcall
fs
jnp
push
xchg
xchg
mov
mov
std
pop
ss
mov
ds
insb
mov
dec
or
sub
sbb
mov
flds
fwait
imull
addb
ret
movsb
jb
or
sbb
push
mov
sub
adc
add
push
add
inc
lea
lret
or
add
sahf
aaa
inc
lds
cmp
inc
pop
xchg
rcll
clc
inc
daa
mov
xlat
jno
gs
mov
lret
and
mov
out
fimuls
icebp
jae
jecxz,pn
xchg
mov
sub
hlt
cmp
pop
loopne
sbb
pop
lea
xorl
pop
aad
jbe
aad
fidivrs
loope
test
loop
xchg
add
shrb
xchg
ficoms
fcom
rorb
sub
cmpsl
add
adc
sbb
xor
add
dec
sbb
pop
movsl
push
jb
push
les
popf
mov
les
frstor
insb
sub
push
mov
and
pop
adc
daa
sub
pop
sub
mov
xor
out
pop
loop
movnti
lcall
and
test
sbb
lcall
pop
pop
mov
test
dec
imul
pushf
int
jmp
sub
push
fsts
bound
or
xor
pushf
xchg
pop
stos
inc
dec
movsb
pop
add
ret
dec
shlb
cwtl
jo
mov
and
inc
jnp
jne
leave
or
inc
hlt
sbb
shlb
shrb
push
dec
les
or
rcrl
dec
aam
push
mov
mov
icebp
aam
out
jbe
arpl
jl
push
pop
xchg
pushf
mov
push
int
push
mov
std
in
sbb
rolb
push
jno
cmpsl
pusha
movsl
sub
push
pop
xchg
mov
mov
mov
push
xor
mov
pushf
xor
arpl
int
inc
sbb
push
int3
or
add
daa
aaa
rorb
ja
shll
frstor
mulb
xlat
mov
repz
xchg
dec
xchg
movsl
sub
dec
arpl
hlt
or
shlb
int
testb
cmpsl
roll
mov
xchg
xor
pop
add
test
fsubrp
push
xor
insl
and
pop
pop
addr16
jg
push
repz
push
cmpl
and
mov
inc
jmp
das
jp
jno,pt
dec
iret
push
shlb
push
xlat
data16
fcompl
push
lods
mov
cmc
jns
mov
dec
cmpsb
mov
jo
jb
pop
lret
mov
test
std
fnstcw
loopne
mov
xchg
scas
pusha
aam
test
add
or
pusha
pop
aas
dec
mov
mov
xor
inc
or
add
loopne
nop
pop
scas
sub
mov
sub
push
mov
and
dec
lock
stc
cmp
jecxz
push
sbb
xor
repz
fdivrl
and
mov
mov
cmp
inc
add
ljmp
clc
dec
stc
xor
xchg
int3
shr
xor
jb
fs
ficoml
repnz
cmp
jno
js
mov
mov
cmp
pop
jne
popa
fdivl
in
xor
insb
xor
xor
push
inc
or
mov
ja
das
dec
lods
out
ficoml
mov
xchg
test
lods
jge
or
and
and
cmp
mov
push
int3
call
leave
aas
stos
mov
or
lods
sub
jae
jecxz
daa
ss
aad
aaa
shrb
lds
mov
mov
sbb
push
inc
cmp
mov
pop
movsl
cld
and
pop
leave
pop
rolb
icebp
sahf
xor
add
dec
jno
dec
jae
jmp
ja
push
inc
int
mov
mov
aad
dec
popf
adc
lahf
xchg
das
or
mov
fildl
push
cmp
cld
jns
adc
dec
ds
cmp
and
mov
ret
mov
ja
cli
lahf
fidivl
out
in
scas
jbe
sahf
out
bound
call
lcall
mov
iret
ss
icebp
out
pop
and
jb
lret
cli
xchg
mov
idiv
cld
or
nop
lret
pop
fistpl
mov
jo
mov
sbb
imul
fsubl
mov
int
fwait
mov
mov
push
scas
mov
outsl
sbb
lcall
cld
or
dec
mov
mov
gs
sub
enter
push
dec
sbb
and
call
inc
mov
inc
xchg
inc
out
mov
sti
and
cmc
out
inc
out
mov
ret
outsl
jne
shrl
je
xor
add
sti
or
mov
loope
adc
inc
test
jns
lds
mov
nop
pusha
pop
or
aam
push
and
mov
bound
ljmp
and
cs
scas
aaa
adc
andl
in
js
mov
sbb
gs
std
sahf
mov
data16
xor
cmpsb
mov
pop
mov
add
jae
dec
loop,pn
out
add
mov
pushf
mov
aam
push
mov
mov
add
and
fsubrs
push
or
nop
inc
cltd
movsb
xor
hlt
jno
dec
popa
xchg
pop
popf
ss
and
jns
cli
dec
cwtl
inc
sbb
shll
test
sbb
cmp
mov
addl
cmpsb
xor
mov
mov
xor
xor
sahf
jle
and
sbb
and
add
xchg
arpl
aam
adc
jne
fbld
mov
push
cmp
mul
inc
add
rorl
xchg
mov
push
call
js
cmp
or
mov
cltd
jmp
out
or
cmc
xor
cmp
jb
jle
dec
iret
fucomip
fstl
mov
aas
cmp
adc
ljmp
vpshuflw
mov
push
cmpsb
pop
idivb
punpckhdq
xchg
add
sbb
adc
adc
jg
imul
mov
int3
or
les
mov
lret
ds
adc
mov
sub
xor
cmpsl
mov
and
rclb
repz
pop
sub
cli
cmpsl
bound
jnp
ss
std
lea
fiaddl
cmp
add
xor
push
insb
jecxz
inc
stc
mov
fmull
inc
aaa
in
push
fwait
aam
mov
stos
jae
mov
push
xchg
lahf
jg
cltd
sbb
in
pop
push
sbb
lods
xchg
sarl
xor
add
add
aaa
sub
in
or
add
xchg
mov
fsubs
cmp
sarb
stos
arpl
pop
fwait
and
mov
cli
das
pop
lcall
push
and
push
or
repz
fsubrs
jl
mov
pushf
mov
in
sbb
dec
push
add
pop
std
das
lods
jbe
dec
mov
pop
lds
lods
sbb
out
lea
ljmp
mov
or
adc
push
test
in
or
xor
mov
fisttpll
loope
ficoms
and
cmp
or
test
mov
jle
sbb
mov
sbb
out
aaa
sbb
jmp
in
js
cs
xor
adc
mov
or
or
add
out
loopne
lods
pop
out
cmp
pop
sahf
dec
stos
in
lods
mov
ss
mov
pushf
fidivl
lcall
pop
sbbb
stc
lods
sub
inc
jmp
ror
sub
int
xchg
hlt
xchg
lcall
push
pushw
cmc
addl
xor
jmp
cmp
pop
fwait
inc
push
incl
ja
dec
int
shlb
jmp
add
push
mov
out
daa
cmp
sti
dec
jmp
xor
lock
mov
fwait
nop
dec
daa
xchg
inc
stos
mov
cmp
sti
jbe
dec
inc
push
cmc
xor
das
fisubrs
fsubrl
lds
test
fst
pop
adc
mov
fiadds
rol
stos
push
push
xor
dec
in
ljmp
in
push
js
jae
dec
dec
pop
sub
add
pop
push
xor
ss
icebp
or
dec
je
adc
leave
jge
inc
out
adcl
adc
shlb
movsb
mov
lret
xor
leave
call
cmp
xchg
rolb
inc
fdivrs
sub
sub
fcoms
addr16
and
or
insb
sbb
pop
out
cmp
push
push
mov
xchg
ja
fdivrs
clc
inc
imul
add
push
shrl
and
cs
rcl
mov
sbb
nop
add
jae
out
jne
les
lret
ss
jle
lods
adc
adc
jbe
jne
nop
loope
sub
lcall
test
pop
imul
insb
pusha
cmp
add
sbb
mov
lock
out
cmp
movb
lock
inc
adcl
and
pop
xor
into
stos
imul
popa
les
inc
cs
pop
push
xchg
jne
mov
inc
xor
mov
pop
pop
sbb
cmc
mov
out
sub
xchg
enterw
lock
mov
repnz
leave
aaa
sub
mov
jae
sub
fcoml
jmp
sub
sbb
or
cmp
sarl
imul
xor
xor
out
icebp
inc
sub
dec
and
repz
pop
pop
cmp
int3
add
inc
scas
test
leave
movsl
dec
lea
mov
mov
xchg
pop
test
sahf
loop
mov
jle
fdivrl
pop
outsb
push
push
std
into
add
ds
inc
ud1
add
xor
pop
les
mov
insb
into
popa
xlat
dec
sbb
out
dec
sarl
iret
xchg
jb
add
jnp
aad
sbb
daa
orl
outsb
stos
inc
sub
adc
jno
pushf
jmp
xor
aas
fdivrl
and
sub
mov
pop
stos
loop
ret
ss
loope
test
jecxz
repz
xchg
jmp
roll
sub
daa
scas
adc
xor
sub
add
repnz
ficoml
leave
std
dec
add
das
or
jmp
mov
insb
insl
int3
call
dec
addr16
repnz
movsl
mov
sub
rcr
xchg
push
cwtl
push
pop
push
xor
or
mov
add
adc
scas
pop
jecxz
js
or
and
pop
mov
adcb
sbb
mov
push
pop
sub
loop
push
rcll
test
ss
lock
subb
xor
pop
movsb
cli
rcll
jnp
js
pop
mulb
cmp
mov
inc
test
fcoml
stos
lret
jne
push
in
repz
fimuls
lret
push
push
imul
ljmp
mov
outsb
mov
out
jg
sarl
mov
iret
fstpt
daa
cmp
aad
ljmp
enter
dec
iret
test
dec
cmpl
shl
lahf
loop
dec
pusha
mov
out
popa
xor
dec
xlat
add
test
fwait
jb
mov
aaa
push
dec
xor
cmovle
repnz
stc
pushf
int
sarl
xchg
xchg
push
add
jns
push
xchg
xchg
pop
aaa
aad
or
mov
scas
and
inc
jo
sub
push
jle
jge
inc
xchg
push
push
clc
inc
inc
fildl
sbb
adc
int
push
adc
dec
mov
xor
cmp
ret
adc
mov
pop
pop
pop
xchg
arpl
mov
stc
cmp
or
jl
pop
iret
xchg
stos
sub
popa
xor
jp
ficompl
test
hlt
adc
popf
lds
push
cld
inc
push
arpl
adc
lea
dec
or
out
mov
insl
fstl
sbb
out
jle
jmp
inc
test
push
push
insb
iret
pop
insl
insl
bound
mov
and
mov
ret
mov
jl
pop
mov
mov
jb
and
push
push
test
and
add
iret
neg
dec
sti
pop
adc
arpl
adc
sbb
out
jle
cli
xor
aaa
and
cli
jns
outsl
shl
push
pop
push
out
test
leave
shll
mov
inc
and
aaa
ret
std
inc
xor
mov
aas
in
rorl
mov
jns
pop
mov
test
sub
std
add
leave
push
cli
bound
mov
pop
and
gs
pop
aad
jbe
aas
push
outsl
stos
incl
mov
mov
inc
fsubrs
jo
in
jae
mov
inc
add
testb
lods
pop
repnz
xchg
cli
xchg
ljmp
std
lahf
xor
xor
rcll
scas
imul
rol
adc
insb
outsb
mov
add
adc
jg
jns
sub
inc
push
push
jle
dec
push
and
jne
add
into
sub
cmp
lds
jns
mov
out
jne
in
jge
addr16
shll
mov
xchg
lret
xchg
rorl
std
adcb
mov
cmp
xor
movsl
xchg
inc
push
adc
int
jb
sub
cmp
mov
gs
pop
es
pop
fiaddl
xchg
dec
bound
xor
add
shlw
inc
and
sbb
sbb
std
bound
fwait
add
jne
xchg
push
push
inc
mov
outsl
mov
add
stos
jns
fwait
pop
xor
fisttps
int3
inc
les
mov
pop
insb
movsb
loopne
rcll
xor
mov
mov
je
lea
dec
shll
jae
cwtl
imull
scas
call
bound
ret
jb
and
shl
add
xchg
icebp
popf
cmp
je
or
mov
cmp
ja
sbb
hlt
fldl
xchg
pop
or
imulb
and
mov
mov
add
shll
negl
inc
xlat
hlt
jg
and
push
inc
cli
stc
aad
mov
inc
int
xchg
rclb
xor
jns
sbb
inc
cmpsb
loopne
xlat
pop
aad
rorl
int3
push
xlat
mov
sub
inc
or
addl
aaa
mov
lahf
dec
out
ret
dec
adc
inc
push
icebp
and
loopne
idivl
hlt
jmp
pushf
loopne
pushf
jo
daa
push
pop
xlat
xchg
push
lods
fwait
icebp
mov
movsb
divl
or
sbb
inc
fwait
jae
shl
xchg
mov
pop
das
outsl
sub
push
incb
jno,pn
xchg
push
cld
in
imul
aaa
mov
cltd
filds
sbb
or
xchg
iret
or
xor
sub
int3
out
aad
daa
mov
cld
adc
jne
push
mov
pop
sub
out
mov
adc
lds
fistl
cmpb
std
or
jno
sbb
movsl
aam
dec
or
mov
popf
cmp
fwait
pusha
cmp
dec
int
sahf
lret
jmp
xor
jg
popa
adc
ret
ljmp
sub
pop
mov
cmp
fnstsw
les
xchg
aas
push
xchg
sbb
aaa
orb
ja
lcall
or
and
mov
outsb
scas
and
fs
push
jnp
pop
pop
in
add
enter
fbld
rol
jns
cmpsb
add
lret
and
rcl
jecxz
or
push
sbb
es
push
mov
lret
pop
out
imul
and
pop
or
xor
sub
test
xchg
scas
loope
mov
jl
adc
loopne
out
add
rcrl
push
lsl
cmp
fimull
add
pop
in
pop
stos
sub
xchg
mov
test
xor
xchg
mov
push
fisttpl
and
cmpsl
sub
or
lods
lcall
dec
push
sub
jl
push
mov
clc
sahf
sub
pop
es
pop
xchg
inc
mov
push
pop
inc
xchg
xchg
out
cmp
ljmp
jo
xor
inc
dec
lea
insl
add
dec
lahf
xor
shl
movsl
pop
mov
jle
dec
push
js
mov
mov
lahf
sbb
add
arpl
faddp
lds
sahf
fdivs
addr16
and
sbb
outsb
mov
sbb
adc
xchg
pop
jne
cmpsl
mov
push
pop
add
sbb
decb
push
mov
adc
testl
cmpsb
mov
pop
es
cld
push
dec
xchg
dec
fidivrl
pop
imul
in
cmpsl
add
xor
repnz
xchg
xchg
call
lcall
iret
xchg
and
push
out
cwtl
xchg
jns
cmp
sub
insb
and
sbb
jge
mov
scas
lea
daa
jmp
mov
pop
jp
adc
dec
das
xchg
outsl
aam
dec
xchg
inc
cmp
xchg
xchg
lea
or
pushf
xchg
dec
add
and
aad
xor
mov
pop
scas
add
push
in
push
jl
jbe
insl
sbb
in
jle
ret
inc
fdivs
pop
sub
das
or
jl
push
aad
xchg
and
push
jecxz
dec
dec
xchg
sbb
lret
dec
mov
mov
loop
std
out
dec
and
or
inc
imull
movsl
add
rcll
clc
cld
and
addr16
lods
sub
dec
sbb
mov
ds
ret
call
mov
inc
adc
movsl
pop
fisttpll
xor
xchg
mov
or
imul
test
dec
jns
scas
jb
rorb
loope
inc
cwtl
fcom
xor
adc
out
data16
and
insl
je
jge
ja
loope
jb
sub
icebp
lods
add
xchg
jb
movl
mov
push
push
int3
popa
cmp
test
mov
mov
mov
mov
std
les
adc
adc
mov
es
cmc
push
stos
sbb
movsl
sbb
and
pop
sub
lret
xchg
xor
push
sbb
fmuls
jb
xchg
sub
xchg
std
xchg
jecxz
xchg
mov
pop
pop
arpl
xchg
pusha
or
lods
pop
jp
cmp
loope
push
icebp
push
sbb
cld
push
sbb
push
add
cmp
int3
sub
popf
loope
in
aaa
sbb
sub
pop
addr16
sahf
and
pop
pushf
inc
ret
xor
lods
mov
hlt
sub
xchg
int
pop
add
sbb
pop
and
and
push
xchg
movsl
push
dec
ja
je
lcall
xchg
insb
out
mov
cmc
incb
in
cmp
cltd
lods
test
js
cwtl
cmp
pop
insl
repz
dec
aad
sti
cmp
xchg
in
stos
aaa
es
dec
mov
fisubrs
daa
push
repnz
dec
aad
enter
aam
push
push
lahf
pushf
xchg
gs
lods
out
stos
mov
leave
pop
and
pop
std
dec
sub
sub
jno
jne
shll
rorb
and
ljmp
pop
cmp
or
cmp
es
or
icebp
je
sub
xchg
bound
inc
incb
xchg
pop
int
out
jno
or
jns
sbb
in
xchg
cmp
inc
xor
mov
scas
out
mov
pop
in
sahf
pop
leave
jo
xor
xchg
leave
lock
loopne
pop
data16
das
les
mov
gs
in
out
stos
push
imul
adc
mov
sbb
aas
arpl
push
das
movsb
into
dec
mov
das
xor
scas
insb
daa
inc
sub
dec
arpl
mov
inc
das
dec
rcrb
push
dec
shlb
sbb
mov
fxam
add
cmpsb
loope
ja
repz
mov
inc
jle
push
xchg
mov
mov
fists
pusha
int
cmpsl
jg
imul
loopne
dec
lret
mov
dec
xchg
stos
pop
sbb
or
fldt
mov
push
adc
sti
mov
or
and
ja
push
pop
fld
cmp
out
push
scas
push
mov
jne
add
dec
lea
push
pop
cld
dec
pusha
cmp
or
jb
pop
imul
rcll
cmp
pop
xor
mov
mov
aas
daa
jl
and
xchg
mov
sub
cmpb
sbb
sbb
jnp
adc
dec
adc
dec
mov
sub
popf
cwtl
rcrl
mov
pop
dec
fldcw
jmp
xorl
mov
push
jg
adc
arpl
mov
sahf
pop
test
pop
lret
and
inc
jle
pop
jo
jnp
mov
stos
jne
push
cmpsl
sub
lock
and
sti
mov
imul
orb
mov
cmp
cmpsl
scas
faddl
divl
jg
jl
mov
xchg
mov
fisttpl
or
sti
mov
sub
jno
jmp
push
test
or
popf
or
iret
cmp
sti
push
ret
jne
pop
ljmp
test
mov
push
push
jmp
imul
and
cmc
repnz
xchg
jmp
push
mov
fnstsw
xor
or
mov
incl
std
inc
enter
push
mov
divl
ret
lods
inc
or
push
mov
lods
xchg
mov
and
push
xorb
jne
cmc
fidivrl
sbb
cli
shlb
jp
xchg
lret
mov
es
roll
adc
test
mov
les
ss
test
outsb
xchg
dec
mov
bt
insl
xchg
lods
ret
lcall
push
sbb
or
pusha
sahf
les
in
sbb
movsl
lcall
xchg
lock
lahf
mov
popa
repz
jno
jns
add
lret
mov
loope
and
xchg
mov
push
dec
addr16
rcrb
mov
hlt
in
das
jo
hlt
dec
push
das
jo
and
jnp
push
xchg
push
mov
in
mov
das
inc
or
add
cmp
or
inc
dec
push
shlb
cli
mov
push
and
sbb
adc
arpl
sub
in
mov
cmp
clc
fildl
aaa
add
mov
cmp
outsl
cmpsb
or
mov
cmp
in
imul
out
mov
outsl
sbb
pop
fndisi(8087
mov
and
mov
and
and
mov
pusha
aas
xchg
cltd
lods
xlat
adc
js
repz
mov
arpl
imulb
je
inc
repz
jnp
cmp
lock
mov
push
imul
js
cs
aas
jecxz
adc
call
xor
inc
in
into
jne
repnz
jbe
mov
xchg
xchg
icebp
jae
dec
sti
mov
cld
and
sub
lret
mov
cmp
mov
mov
into
int3
ss
cmp
ja
push
outsb
into
das
mov
cmp
sahf
cs
xchg
sahf
or
mov
fcoms
imul
jae
hlt
test
mov
cmc
out
into
jmp
lret
push
icebp
aas
popa
jg
jmp
cmp
shrb
jb
les
adc
test
xchg
leave
cmp
repz
add
pop
nop
aas
dec
push
pop
push
out
movsl
xchg
lret
push
push
sti
dec
mov
fisttps
xchg
xlat
jo
clc
imul
cmc
das
pop
jne
roll
sub
shr
movsb
scas
and
jbe
mov
or
mov
sti
pop
sbb
sbb
repnz
push
and
adc
cli
and
pop
rcrl
loopne
mov
outsb
js
inc
sbb
sub
mov
cmpb
jmp
insl
cmp
cmp
pop
and
pop
inc
mov
pop
cmp
andb
rorl
xor
adc
adc
cmp
sub
mov
inc
inc
mov
stc
lds
add
outsl
mov
mov
jl
pop
adc
stos
push
jmp
add
mov
pop
adc
jo
lcall
push
or
xchg
addl
xor
inc
stos
mov
xchg
int
xor
jae
int
jmp
inc
mov
jle
mov
orl
test
in
movsl
stos
pop
cltd
mov
and
test
mov
xchg
push
fmuls
mov
data16
jle
inc
fldl
in
cmp
xchg
sahf
and
jb
lock
rorb
jecxz
sbb
loop
jmp
or
mov
jge
mov
sahf
shr
lahf
fimull
mov
push
push
xchg
shr
jl
cltd
mov
nop
aaa
or
popa
movsb
adc
inc
fdiv
mov
shlb
aam
shl
fildl
int3
ss
insb
shll
adc
and
inc
jbe
and
push
stos
fsubl
inc
and
sti
add
clc
es
xchg
mul
sbb
dec
rcrl
xor
xlat
lret
inc
pusha
pop
mov
push
andb
cmp
ficompl
fs
cmpsl
and
push
or
lods
inc
adc
rcrb
xchg
aam
xchg
add
aam
xchg
xor
enter
adc
nop
int
pop
xchg
adc
pop
adc
and
test
fistps
or
jbe
sbb
and
rcrl
add
loopne
popa
addr16
xor
lret
pop
int3
je
int
adc
inc
cmpsl
jb
movsl
and
add
pop
jnp
enter
gs
or
test
push
add
cmpsl
push
mov
inc
dec
xchg
std
arpl
punpckhwd
into
inc
sub
xchg
fidivrl
gs
sarb
mov
lods
xor
jae
add
lds
std
inc
pop
addr16
push
or
imul
jb
mov
popa
pop
divl
adc
rol
insl
cli
imull
xor
jmp
mov
mov
mov
inc
call
dec
or
sbb
jge
hlt
fwait
inc
jnp
sbb
or
test
jns
sarl
mov
outsl
outsb
pop
loop
jo
pop
pushf
imul
xchg
sub
xchg
outsb
adc
cmp
outsb
add
addr16
mov
stc
mov
or
or
lods
push
ror
ss
push
pop
pop
and
xchg
mov
mov
ret
and
clc
push
sbb
add
mov
loopne
push
and
mov
fs
xchg
rolb
mov
popa
imul
lock
insl
mov
xchg
shr
test
mov
lret
sub
and
mov
cmp
adc
mov
or
loope
push
repz
inc
adc
shll
inc
add
loop
mov
out
ret
cmp
sub
mov
pushf
mov
cmp
mov
nop
pop
cmp
daa
add
jae
mov
inc
adc
add
insl
sbb
mov
lahf
cs
adc
pusha
in
or
pusha
and
ret
lret
mov
add
repnz
jmp
stos
add
push
push
negl
out
scas
adc
sbb
jle
test
and
je
cmpb
andl
pop
add
mov
iret
lret
popaw
hlt
incb
dec
adc
adc
or
leave
lcall
push
push
call
pushf
and
push
aam
xor
xor
jns
outsb
inc
mov
inc
dec
ret
sub
hlt
dec
inc
push
repnz
cmove
stos
adc
pop
ljmp
xchg
fwait
cmp
pop
aad
call
dec
ss
out
mov
sti
pop
sub
sarb
add
rolb
inc
int3
mov
fistpl
inc
and
nop
cmp
cmpsb
and
mov
pop
push
mov
test
mov
dec
fidivs
testb
ljmp
xor
add
cs
jecxz
pop
jle
adc
ja
mov
imul
sar
push
test
dec
xchg
movsb
inc
call
adc
cld
lods
repz
or
and
cmpsl
mov
hlt
lock
xchg
fsts
repz
ficoml
cmp
inc
shlb
add
push
sbb
sub
int
jle
mov
data16
xchg
mov
leave
fndisi(8087
imul
in
or
int
mov
jne
fimull
add
inc
push
scas
aam
fstpl
jecxz
lods
mov
pop
in
jg
xchg
das
fdivrl
scas
gs
imul
and
cli
cmpsl
add
cmp
int3
rclb
xor
hlt
cmp
jp
test
push
lcall
xor
cmp
notl
cld
call
mulb
xor
mov
xor
jns
out
or
pop
stos
mov
mov
jg
int
jg
lahf
nop
sti
pushf
sub
subl
jp
mov
lret
or
addr16
jns
ret
jne
std
data16
cmpl
jne
xchg
lods
mov
test
int
jns
rorl
aas
mov
jb
nop
inc
inc
inc
sahf
inc
xor
jbe
cmpsl
xchg
adc
arpl
stc
mov
test
in
jmp
cmp
sbb
inc
mov
test
test
sub
dec
jnp
xchg
loope
or
js
ficoml
jl
nop
mov
jge
loopne
jmp
rcll
pop
adc
jne
arpl
cmpsb
mov
mov
dec
or
loopne
test
subl
insl
sarb
push
cmpsb
adc
out
jns
or
idivb
sbb
mov
jns
xlat
jo
in
or
lahf
imull
xchg
out
fsts
mov
jb
aas
mov
test
adc
decl
jnp
inc
dec
ja
in
out
lds
cmc
adc
add
cmp
in
mov
and
cwtl
lea
sysexit
cld
fmuls
div
xchg
test
pop
in
cmp
cli
in
lret
andb
pop
shr
add
and
outsb
insb
mov
fwait
adc
inc
mov
loop
fildl
movsl
subl
loope
aas
cli
test
ja
push
cmp
jae
ss
mov
jmp
jnp
and
sbb
cmp
inc
push
mov
push
out
dec
cmp
adc
ror
sub
sub
sahf
dec
xchg
stos
push
mov
push
mov
push
outsl
in
dec
mov
mov
cld
insb
push
mov
dec
or
xchg
inc
call
mov
lcall
fs
or
adc
cmp
sbb
cmp
add
add
enter
xor
flds
lret
xchg
xchg
pushf
push
outsl
sbbb
repz
lahf
fldenv
movsl
xor
mov
sbb
das
dec
pcmpgtw
mov
dec
sbb
clc
sarl
cwtl
inc
inc
testl
notb
add
xor
mov
popf
jg
std
add
xchg
and
push
jne
adc
jo
mov
cmp
fstpt
fstps
mov
outsb
aaa
cmpsb
or
in
popf
pop
pop
sub
mov
xchg
cli
lahf
pop
xchg
mov
jo
push
inc
fwait
popa
ret
lcall
mov
xchg
sub
xchg
or
mov
sub
cmp
sub
fists
xor
hlt
pushf
pop
mov
or
sbb
mov
dec
inc
call
pop
and
loopne
mov
pop
mov
adc
scas
add
mov
dec
daa
loop
lods
jp
fcompl
loopne
fmull
mov
jnp
push
add
out
icebp
sbb
cmpsb
pop
enter
inc
cmp
cltd
imul
iret
mov
push
mov
mov
fs
cmc
mov
jno
fwait
jmp
inc
mov
gs
out
mov
inc
repz
cmpsl
jns
cli
add
sbb
xor
sub
push
data16
pop
sbb
fsub
fxsave
out
and
fldenv
gs
test
mov
aas
fldenv
sub
sub
negl
xor
xor
mov
xlat
mov
fcmovnb
mov
adc
imul
add
push
hlt
sub
addb
jle
dec
ret
push
jp
xor
ret
sbb
outsl
mov
out
fadds
gs
fidivs
cmpsb
dec
cmp
lods
addr16
lcall
fwait
ja
jno
sub
into
ljmp
pop
dec
mov
cmp
and
xor
lret
aas
in
int3
push
add
add
stc
in
cmp
pusha
sub
dec
adcb
add
icebp
push
jp
movl
sub
dec
add
repnz
aam
cld
sbb
in
jl
in
repz
in
push
pop
mov
aas
das
or
out
scas
mov
inc
pop
xor
movsb
push
sub
push
mov
push
dec
aad
in
or
rorl
in
adc
in
sar
and
repz
lods
pop
and
add
test
enter
enter
pop
add
or
mov
fildl
pop
or
sub
sbb
mov
lods
inc
cmp
outsl
jmp
inc
ja
clc
adc
sbb
dec
into
leave
imulb
stos
mov
add
adc
leave
ss
and
fisubl
and
xor
or
mov
dec
cmpsb
aaa
scas
sub
jno
popa
and
fstps
in
movsb
xchg
sbb
mov
in
jae
xor
into
pop
call
cmp
mov
xor
rol
les
mov
por
push
int3
or
mov
loope
insl
xchg
out
aaa
imul
dec
aad
popa
fsubrs
imul
leave
mov
pop
mov
syscall
jecxz,pn
mov
cltd
int3
sub
sbb
sbb
adc
mov
push
icebp
inc
aas
cld
mov
or
mov
push
hlt
addr16
imul
nop
mov
pop
es
mov
cmp
add
aaa
or
inc
jle
jb
jl
inc
fwait
mov
sbbb
out
cltd
in
popa
lahf
rolb
mov
leave
cmp
xchg
jb
cmp
or
clc
call
adc
ja
mov
imul
inc
sti
ret
sbb
fldl2e
lods
inc
push
push
arpl
mov
mov
js
addr16
mov
adc
cmc
jae
xor
lds
orb
fsubl
jno
pop
in
aad
mov
sbb
pushf
xchg
xor
in
or
pop
or
add
ljmp
cmc
jp
andb
icebp
mov
jl
ret
and
rorl
pop
in
sub
fstpl
je
inc
aad
dec
loop
ja
push
add
dec
sbb
add
xlat
pop
enter
jnp
stc
mov
sti
add
fs
arpl
popa
ret
mov
xchg
pusha
fnsave
in
rclb
out
pop
mov
adc
cs
or
mov
sub
xor
xor
rclw
cmp
mov
notb
negl
idiv
loope
mov
push
cld
push
and
push
dec
xor
or
mov
test
sbb
xchg
jg
imul
stc
xchg
mov
les
add
xchg
push
ljmp
jecxz
lret
push
mov
in
pop
push
jns
in
and
and
enter
cmpsb
xchg
lahf
cmp
lock
and
repz
stos
inc
xchg
call
loopne
sbb
sbb
sarl
icebp
xorl
dec
ror
inc
js
loopne
cmp
sahf
jle
xchg
inc
movsl
mov
jecxz
fwait
aad
cmpsl
dec
test
scas
in
jmp
aad
call
mov
pop
sbb
xchg
in
mov
dec
out
cmp
jo
mov
mov
inc
out
inc
mov
bound
out
sub
imul
in
sub
imul
dec
addr16
add
ss
jnp
mov
rclb
and
push
adc
pop
push
and
in
hlt
test
xchg
inc
jmp
mov
and
cmp
sub
lcall
jns
xor
in
push
enter
aaa
test
das
aam
mov
fisubl
ret
push
mov
shl
lcall
mov
lds
mov
sub
and
lods
mov
jbe
cmpsl
or
js
ja
mov
ja
cmpsl
or
mov
dec
stos
mov
xor
lock
add
cltd
mov
mov
and
sbbl
sbb
xchg
jns
and
adc
xlat
xor
scas
push
add
cmp
pop
repnz
cs
dec
dec
sahf
call
outsb
mov
in
mov
mov
jns
inc
sub
popa
jne
dec
mov
stos
cmpb
mov
clc
sbb
into
xchg
xchg
aas
jge
in
sub
push
mov
cld
dec
and
xor
lods
sbb
fmuls
add
jns
mov
sti
mov
or
shrl
test
dec
mov
push
sub
push
sbb
push
out
push
sub
dec
lret
cmp
add
cltd
mov
xor
xor
dec
fidivrl
pop
cmpsb
loopne
js
leave
jnp
sub
std
pusha
pop
cwtl
push
sbb
push
test
jecxz
xchg
gs
mov
scas
sub
push
hlt
sub
cmp
cmp
scas
pop
add
mov
nop
inc
scas
pushf
fdivl
mov
in
insb
popf
enter
add
idivl
and
roll
jge
fistps
add
or
ss
fsubrs
movsb
ret
les
cmpsl
mov
enter
dec
inc
xchg
jp
clc
push
pushf
mov
ret
or
pop
cltd
lret
inc
mov
jnp
mov
les
jp
xor
incb
pop
xor
inc
out
jge
cmp
jno
fdivrl
mov
cwtl
shrd
push
fcomps
mov
pop
in
leave
cs
and
fisubl
das
aad
mov
jne
std
jecxz
and
outsl
lahf
nop
inc
sbb
xchg
xchg
jge
push
nop
fisttps
adc
jmp
test
mov
cwtl
xchg
dec
pusha
inc
xor
sbb
sub
and
shl
pop
scas
and
in
loope
int3
insl
mov
inc
in
imul
ret
mov
std
mov
or
not
add
out
fwait
pop
test
and
lret
mov
xchg
test
in
out
pop
and
add
xchg
or
cmp
xor
fbld
dec
dec
cmp
outsb
jno
mov
sahf
sub
push
push
and
imul
out
fstl
shrl
jno
dec
and
and
or
sub
subb
push
inc
stos
pop
out
adc
cmp
je
cmp
push
jp
mov
push
jns
aad
jle
lock
enter
rcr
sub
push
and
and
rcrb
sbb
xchg
aas
mov
xlat
insb
out
push
pop
lock
pushf
stos
loope
fmuls
inc
sbb
addl
cli
add
stos
xchg
pop
sbbb
inc
cmp
fs
dec
or
sbb
push
mov
mov
push
pop
inc
inc
into
pop
mov
cmp
push
jbe
or
jbe
push
inc
dec
push
xor
xlat
aam
adc
inc
xor
add
test
daa
or
loop
cmp
sarl
mov
mov
mov
icebp
cli
popa
xchg
icebp
stos
sbbb
mov
in
jmp
aad
imul
push
fsubrs
outsb
push
rorl
inc
pushf
addr16
xlat
repz
movsl
cmpsb
cwtl
jnp
jo
jle
dec
xor
xchg
aas
push
aaa
inc
cmp
inc
loopne
mov
mov
xchg
nop
sub
or
std
hlt
or
xchg
mov
jge
push
push
xchg
cmp
xchg
add
push
stos
fdivl
gs
mov
fsubl
pop
jl
mov
fcoms
and
push
jb
test
lock
and
shll
cmpsb
scas
inc
cld
adc
xor
jne
out
dec
jo
and
cmpsb
jae
push
xchg
xor
mov
sub
xlat
cmpsb
and
mov
fnstcw
cmp
and
mov
sti
mov
sub
stos
adc
int3
fcmovu
add
mov
fstl
or
subb
loopne
sbb
movsb
aad
mov
out
pop
in
sar
xor
pop
push
cmpsl
aaa
push
sbb
mov
and
cmp
ds
jmp
shr
mov
mov
gs
or
cmpsl
pop
xor
bound
data16
or
shlb
pop
adc
jo
scas
inc
insb
xor
xlat
push
stc
ds
mov
es
xor
test
scas
or
lea
sub
out
sub
lods
push
aad
shrl
push
sub
test
sbb
out
mov
inc
pop
js
mov
lret
mov
xor
dec
sub
add
pushf
dec
js
push
mov
push
int3
bound
xchg
mov
in
sbbb
or
loope
inc
xchg
fcom
dec
sub
or
mov
ljmp
cmp
ljmp
ja
sbb
mov
popa
or
popa
xorb
movsb
sar
test
mov
sbb
div
nop
xor
fisubl
mov
push
daa
inc
repnz
sub
bnd
jmp
pop
push
inc
mov
mov
adc
stc
mov
mul
shl
mov
inc
xchg
cli
enter
cmp
mov
xchg
and
lcall
sub
sbbl
sub
cmp
sub
and
aaa
fsts
lret
clc
adc
mov
push
and
shrb
into
add
and
rcrb
jne
pop
aaa
aaa
push
and
ltr
pop
testl
adc
in
dec
fmulp
mov
or
or
loop
lcall
or
aaa
mov
xchg
addr16
mov
jne
int
xlat
mov
jg
cmp
insl
mov
out
sahf
cmpsb
int3
mov
loope
sub
dec
sahf
sub
int
fisttpl
in
mov
sub
pop
cmp
pop
sub
sbbl
sbb
or
scas
cmpsl
dec
insb
mov
loope
movsl
inc
loopne
xor
clc
cli
dec
in
push
xlat
push
inc
push
gs
lods
lods
xor
repz
push
insl
adc
stos
aaa
xchg
cltd
add
cmp
dec
push
mov
scas
popa
push
enter
in
and
out
inc
cmp
test
test
shll
xchg
lret
cmc
adc
mov
mov
sti
inc
sbb
sbbb
adc
mov
repnz
add
test
xchg
jne
sar
xor
ja
and
stos
cmp
dec
or
and
xchg
repnz
bound
test
sbb
sahf
cltd
out
cmpsl
imul
lret
fwait
nop
loopne
out
or
sahf
inc
in
xchg
push
jp
mov
push
dec
icebp
int
and
mov
out
inc
xchg
fs
xor
adc
ficoml
gs
sub
mov
push
fsub
mov
fsubrs
xchg
cmpsl
stc
mov
es
mov
into
xlat
mov
add
jns
mov
fldenv
inc
nop
sub
or
cmc
test
push
fcomi
jmp
cltd
and
push
dec
xchg
movsl
in
sub
fbstp
cmpsb
mov
jmp
dec
repnz
cmp
xchg
adc
pop
ja
or
pop
mov
cmp
mov
fisttps
or
xchg
lods
std
js
cmpsl
sahf
aam
insl
orl
fdivs
aad
pushf
test
leave
and
ficoml
out
mov
push
in
enter
fisubs
adc
sub
jge
addr16
dec
pop
adc
test
and
cmp
loopne
mov
cmc
cmp
cmpsb
inc
popf
xchg
mov
add
push
imulb
mov
movsb
divl
mov
std
xchg
lods
in
mov
cmc
jmp
subb
int3
dec
dec
iret
imul
inc
out
aaa
stc
test
add
add
xchg
lods
inc
imulb
nop
in
movsl
sbb
aam
inc
mov
std
lods
inc
push
cli
fcoms
xor
dec
cmp
out
inc
cmpsl
push
insb
inc
pop
or
dec
mov
inc
pop
and
arpl
jp
mov
adc
das
faddl
push
cld
dec
mov
inc
xchg
push
cs
add
inc
movsb
insl
jle
cmpsb
push
mov
in
mov
or
xor
push
cli
push
lods
add
cmpsl
mov
cmp
fwait
adc
int3
pop
sub
mov
shlb
out
push
cld
cmp
out
jae
adc
scas
push
sarl
and
cwtl
sti
test
jle
nop
sbb
divb
jo
test
test
cmp
jl
es
jnp
inc
movsl
stos
into
cmp
jle
icebp
mov
push
inc
fistps
jp
mov
mov
aas
jbe
rorb
mov
int
xchg
popf
mov
ss
and
jmp
pop
mov
pushf
cld
mov
xor
stc
rorb
mov
addr16
int3
sub
pop
out
dec
mov
ss
movsl
inc
mov
mov
add
jp
daa
mov
inc
dec
jle
icebp
sbb
pushf
scas
aaa
or
repz
ljmp
in
int3
test
jmp
push
mov
sub
test
ljmp
cmp
test
add
push
adc
fucom
jns
jmp
mov
and
xor
repz
stos
inc
leave
fsub
das
dec
inc
and
out
repz
insb
push
outsl
es
imul
loope
or
add
das
popa
incl
cmpsl
addb
xor
lcall
imul
cmpl
movb
popa
mov
jnp
xchg
addb
add
lods
nop
std
fsubs
decb
rcrl
outsb
xchg
xorl
ret
xor
popf
outsl
mov
pusha
or
push
mov
sbb
mov
mov
pop
pop
hlt
fidivs
xlat
ss
xor
mov
mov
repz
and
sbb
xor
das
aaa
pop
dec
movsb
cmp
pop
es
cld
and
addr16
mov
test
jo
xchg
shll
mov
or
jne
mov
mov
rorb
imul
dec
lds
imul
es
inc
cltd
jns
cmp
mov
insl
in
pop
and
jb
add
test
cmpsl
fsubrs
aam
inc
mov
and
scas
xchg
cmp
mov
hlt
mov
sahf
mov
push
imul
insb
fbld
adcb
nop
jecxz
adc
loopne
cmpl
jno
and
jno
mov
cmp
sub
inc
popa
std
sbb
add
mov
cmpsl
and
je
scas
pop
pop
notb
pusha
jp
aad
mov
mov
outsb
fs
std
rorl
mov
js
mov
xor
cmp
icebp
shl
jae
add
popf
lock
jp
or
leave
stc
icebp
inc
cltd
movzbl
xchg
imul
xchg
pop
sbb
push
fs
cmp
out
repnz
stc
sti
fnsave
fldl
int3
sub
jns
xchg
gs
in
verw
add
mov
jb
xor
sbb
push
jno
push
xchg
hlt
andb
mov
roll
js
push
mov
ret
ja
mov
out
pop
mov
mov
stc
lahf
cmpsb
jge
rcrl
cmp
push
jnp
je
sub
stos
js
ljmp
pop
or
mov
adc
push
js
in
loopne
cli
dec
inc
or
pop
adcb
adc
xor
jae
or
ret
mov
sbb
popf
shl
pop
mov
mov
test
adc
xchg
into
shrb
adc
repnz
mov
push
inc
push
loope
mov
enter
int
sti
dec
fadd
clc
test
sub
lret
xor
in
sahf
sahf
mov
gs
jns
ja
lret
mov
mov
or
pop
inc
scas
inc
decb
jo
movsb
inc
xlat
jnp
testb
pushf
cmp
lea
lahf
inc
push
xlat
fldt
xor
mov
jb
orb
js
pop
xchg
jns
xor
jmp
mov
lahf
out
adc
lret
outsb
dec
addb
or
clc
inc
pop
fisubrl
int
inc
adc
pop
push
jmp
sbb
ss
cmp
mov
dec
inc
push
jae
ret
sarb
imul
js
inc
jp
cmp
jno
xor
hlt
xchg
mov
test
sarb
and
mov
pushf
or
mov
in
mov
test
dec
imul
xchg
shll
fwait
dec
adc
or
push
popa
das
jle
mov
sbb
dec
adc
shrb
pop
loope
xor
mov
int
fs
jb
lea
cltd
inc
push
adc
mov
sub
push
or
ror
push
fcompl
xchg
sbb
and
fld
popf
adcl
ficoml
leave
call
data16
imul
pop
push
lods
loopne
push
daa
jle
sbb
adc
or
dec
cmp
push
leave
sahf
mov
add
cmpsl
pop
push
xor
pop
in
sub
icebp
mov
std
leave
fidivl
sbb
addr16
xchg
sbb
adc
xor
add
jnp
sarb
mov
mov
adc
inc
cmp
adc
or
mov
xchg
fsubs
inc
and
or
fisubs
repz
shl
ja
and
iret
daa
sub
or
dec
in
adc
sarb
in
out
cltd
inc
mov
daa
arpl
mov
test
or
pusha
add
dec
ror
jb
dec
ja
cmp
jg
int3
fimull
test
push
fisubl
push
add
cmc
lea
push
dec
mov
sbb
push
inc
lcall
inc
test
jmp
mov
push
mov
push
dec
pop
cld
cli
jle
into
inc
adc
dec
and
fldt
repnz
xor
sbb
and
scas
pop
aad
movsb
and
aaa
pop
lret
fsubrl
imul
into
cmp
lret
lahf
aas
clc
repz
pop
test
icebp
mov
or
sbbb
loop
pushf
sub
mov
in
cmp
loope
jg
pusha
in
add
mov
mov
add
imul
cmpsb
out
out
ljmp
push
gs
ss
inc
out
clc
outsl
daa
sub
inc
push
sbb
adcb
mov
nop
pop
mov
dec
sbb
pop
add
movsl
push
test
mov
stos
iret
ds
cmp
lahf
mov
cmp
cld
leave
outsb
xlat
lods
jge
mov
pop
lret
dec
jg
push
gs
xor
xchg
data16
and
lret
push
jg
pop
lahf
stc
dec
stc
inc
rcll
jns
or
out
push
xlat
rcrl
test
or
or
in
inc
bound
xchg
mov
sub
nop
jmp
in
loope
bound
lds
aad
push
mov
fwait
repz
movsb
inc
sbb
pop
test
add
and
xchg
nop
add
or
cwtl
bound
or
mov
pop
shl
popf
loop
fcoml
aam
test
sub
adc
sub
xchg
pop
xchg
inc
das
test
xchg
sbb
cmp
xchg
out
xchg
add
bound
push
push
adc
jp
pop
mov
mov
dec
inc
mov
sub
aas
push
out
mov
int3
cmc
push
mov
movsb
mov
xchg
aaa
roll
inc
pop
xor
in
xchg
jb
push
movsl
push
jmp
push
or
xor
mov
lods
push
sub
ret
inc
mov
mov
out
fdivl
xchg
jg
push
pushf
xchg
lods
pop
inc
lret
push
daa
stc
rcr
inc
and
sbb
lock
test
jno
mov
dec
les
or
jb
in
imul
outsb
jmp
in
xor
aad
iret
aad
sbb
mov
adc
out
mov
sbb
fmuls
arpl
test
cs
sarl
xlat
jle
outsl
jbe
sub
or
in
hlt
xor
icebp
mov
sbb
mov
sub
fcoml
and
scas
movsb
add
push
ja
inc
push
mov
movsb
ljmp
clc
pop
xlat
in
rorl
push
xchg
mov
dec
or
lods
xor
movsl
xchg
push
sti
fs
pop
jno
scas
push
sbb
pop
std
fidivrs
hlt
mov
mov
loopne
mov
sbb
sub
sub
lds
arpl
test
ljmp
loope
outsl
mov
mov
or
enter
lret
push
and
xor
mov
loop
lods
mov
sbb
push
and
idivl
push
or
pusha
int
ficoms
add
mov
mov
jg
cmp
imul
mov
and
push
jbe
mov
sub
shll
push
icebp
in
push
mov
cwtl
push
mov
mov
cmc
in
or
pop
mov
ret
bound
push
mov
hlt
jo
push
into
and
xor
jge
jns
or
mov
xor
jbe
xor
data16
fcom
into
pop
jno
outsb
lret
cmp
cltd
addb
bnd
pop
lock
sub
nop
mov
aad
cmp
cli
outsl
stc
mov
push
cwtl
mov
fisttps
dec
fwait
push
sub
or
mov
sub
inc
leave
jae
out
xor
js
in
int
or
lds
repz
and
lret
and
shll
loopne
fnstcw
sbb
cmp
xchg
in
cmp
dec
jg
inc
test
test
test
or
aas
pop
ds
cmp
adc
shlb
and
scas
std
ret
ja
dec
out
push
push
jecxz
fwait
adc
sub
ds
sbb
popf
imul
pop
jbe
lret
in
and
js
movsb
clc
and
stos
xor
cmp
xor
dec
std
dec
push
jns
scas
lret
rclb
mov
nop
gs
mov
pop
addl
insl
xor
push
cmp
bound
sbb
and
xor
sbb
pop
inc
ljmp
lea
or
mov
shl
test
jne
into
loope
es
push
cmp
push
popa
insl
mov
inc
pop
lods
loop
pop
clc
arpl
lret
out
inc
incb
aad
and
add
lock
inc
loop
out
cmp
mov
dec
lret
scas
insl
jnp
or
fwait
mov
jb
add
xchg
dec
adc
xchg
jne
xor
jno
into
xchg
popf
cmp
add
sbb
clc
mov
push
mov
jmp
pop
jae
push
test
divl
jge
aas
sub
stos
in
mov
ja
mov
mov
in
mov
out
xor
ja
adc
fwait
test
add
mov
repz
enter
aam
cmpsb
ja
lea
adc
popl
loop
bound
xchg
mov
ljmp
cltd
loope
pop
das
mov
cs
cmpsb
sub
jg
mov
shr
subl
adc
repnz
jge
in
xchg
mov
mov
lcall
sub
pop
jae
fidivl
popf
dec
dec
push
jecxz
jmp
adc
ss
sbbl
aaa
sbb
push
add
loop
insb
xchg
pop
fldcw
ret
mov
mov
in
cli
cmpsl
push
test
adc
loopne
test
mov
movsl
add
inc
out
sub
nop
push
aaa
clc
fsubp
pushf
pop
mov
dec
in
shll
test
cmp
add
jne
dec
out
insb
pop
popf
fiaddl
add
cmp
push
add
cmp
sbb
fistl
push
mov
hlt
inc
mov
nop
mov
and
adc
lds
fsubr
pushl
in
mov
pop
das
xchg
xchg
lock
dec
bound
cmp
fdivr
xor
iret
lock
cmc
sub
test
cwtl
push
loope
fisubrs
jg
daa
test
stos
pop
jae
stos
dec
mov
xor
das
or
les
adc
ljmp
shll
pop
cmc
xchg
neg
scas
xchg
mov
push
in
mov
ret
imul
clc
hlt
push
mov
movsl
mov
je
fisttps
fidivrs
or
in
pop
gs
movl
xor
std
lock
mov
jecxz
xor
pushf
inc
cld
mov
pop
mov
jecxz
loope
pop
sbbb
and
sarl
mov
aas
movsb
jo
es
pop
bound
sbb
cmp
cld
mov
arpl
jp
jl
ja
dec
mov
push
ja
dec
xlat
inc
push
inc
pop
js
rorb
js
loop
pop
out
adcl
mov
or
cmp
pushf
sub
call
push
loop
cwtl
enter
xlat
fisubs
xor
xchg
lret
loope
cld
call
and
incl
xor
fildll
lods
sbb
fwait
sbb
push
sbb
std
mov
xchg
dec
repnz
dec
bound
dec
sub
dec
icebp
sub
push
mov
dec
lods
stc
xor
scas
aaa
lret
les
lret
test
iret
aaa
lret
rcll
fists
xor
xor
inc
popa
aas
fsubl
loope
add
xor
test
int3
mov
pop
lock
sti
cmpl
mov
ja
fisttpll
in
jmp
jne
inc
movsb
in
fwait
and
shr
addl
sahf
es
test
jge
bound
cmc
xor
out
lcall
test
push
adc
js
jl
mov
int3
xchg
mov
int3
cmp
and
data16
dec
pop
shr
jno
aaa
in
std
xor
inc
idivb
inc
or
rol
sti
dec
test
insb
jns
int3
inc
lock
xchg
dec
jbe
pop
popf
mov
cmp
into
sahf
cmc
int3
cmp
mulb
aaa
xor
push
pop
outsb
int
lcall
fistl
dec
adc
xchg
out
mov
dec
sti
cmp
cld
rorl
stos
mov
inc
xchg
repz
push
pop
push
cmp
ljmp
je
xchg
loopne
mov
pop
xchg
into
push
add
pop
add
and
and
cmc
lods
fstps
jae
aaa
jno
push
mov
xchg
or
inc
cmc
popf
test
loope
test
xchg
mov
adc
addr16
inc
cmp
test
arpl
sbb
mov
xchg
mov
test
popa
shl
or
dec
jge
subl
in
in
pop
mov
mov
mov
mov
cmp
mov
jo
sub
les
jb
shl
jnp
sahf
insb
jb
pop
pushf
je
cmc
sub
sub
fsubrs
pop
pusha
push
out
insl
stos
out
insb
in
jo
popa
xor
lea
jp
mov
dec
popf
shl
imul
push
fldl
jg
ds
test
sahf
lahf
shlb
xlat
out
call
stc
jl
jbe
jne
pop
add
push
leave
je
daa
sbb
imul
inc
inc
jp
cmp
scas
cmc
cmpsl
es
xchg
mov
lcall
inc
mov
mov
pop
lock
aam
cmp
stos
hlt
push
ficoml
fwait
pop
arpl
inc
icebp
cmp
hlt
jne
cmp
mov
rolb
sahf
xlat
jnp
sbbl
jge
ljmp
test
push
jbe
cli
adcl
mov
jae
insb
xorl
cmp
ja
dec
dec
xlat
mov
test
sbb
pop
inc
out
shl
pop
sub
test
loopne
xchg
fstps
inc
repnz
jno
insb
test
xchg
mov
insl
inc
insl
mov
or
jl
scas
out
sub
and
push
jnp
in
cltd
mov
push
push
fwait
popa
add
jecxz
cwtl
idivb
mov
inc
cmp
setle
mov
lret
xchg
scas
sahf
xor
push
adc
push
test
push
pop
hlt
in
push
mov
pusha
add
notb
pop
adc
xor
cmpsb
push
testb
mov
xchg
bswap
mov
es
push
jmp
js
cmpsb
sbb
insl
xlat
pop
ss
add
or
shlb
in
jb
mov
push
dec
xrelease
stos
adc
mov
sbb
outsb
push
hlt
cmp
add
sub
dec
inc
adc
and
cmc
add
fnsave
jecxz
xchg
test
call
mov
ds
mov
xor
lret
add
xchg
jmp
ret
stos
sti
mov
cmpsb
shlb
inc
xchg
mov
sahf
dec
mov
imul
mov
xchg
or
adc
cld
inc
xlat
ss
fmul
pop
mov
cmp
ss
mov
xchg
popa
inc
xorl
xchg
in
cmpsb
popf
iret
xor
sub
and
adc
push
and
sbb
loope
sub
adc
pop
xor
loopne
dec
insl
dec
xchg
mov
add
hlt
add
jecxz
fistl
adc
addb
mov
dec
lret
xchg
xchg
enter
out
out
cmp
xchg
cs
sbb
iret
mov
cmp
adc
xchg
inc
daa
es
lock
push
aam
mov
outsl
pop
jne
nop
jl
std
push
shlb
pop
fsubl
mov
pushf
or
lds
jae
ss
rclb
inc
xchg
push
sbb
mov
imul
mov
adc
sti
loop
out
xchg
inc
mov
dec
mov
rclb
daa
mov
jbe,pt
popa
in
loopne
mov
mov
cs
notl
jmp
addr16
arpl
jmp
cmp
inc
cli
fidivs
jp
aad
ficoms
insb
or
xlat
push
mov
imul
mov
push
leave
pop
and
jmp
in
pop
pop
stos
jb
mov
mov
es
lcall
ret
fstp
jle
jge
mov
adc
stos
add
jne
shrl
cltd
std
fdivl
lea
inc
nop
or
cli
sarl
jns
sbb
frstor
inc
xchg
mov
xchg
add
pushf
mov
mov
sub
mov
fwait
cld
inc
rorb
cmp
loopne
lods
or
mov
jo
test
cmp
inc
fwait
incb
or
jo
add
ret
scas
outsl
sub
and
add
pop
lock
xor
leave
sub
sub
popa
es
mov
add
imul
mov
sub
incl
cmpsb
xchg
bound
dec
sub
jmp
jl
mov
cmpsb
cmp
inc
cmp
or
sbb
pushf
outsl
mov
mov
stos
fcoms
mov
xor
add
fcomp
sbb
lods
xor
sub
and
divb
and
dec
sbb
iret
dec
jp
adc
and
push
and
lods
dec
push
cmp
fldl
sbb
xor
negb
mov
sti
hlt
pop
int
xchg
mov
addb
arpl
stos
xor
lahf
aam
fcomi
sbb
cwtl
mov
in
xor
push
ret
xchg
lods
push
sarl
mov
mov
xor
outsl
pop
les
lret
movb
and
frstor
cmp
inc
push
mov
ds
out
jl
pusha
jecxz
prefetch
adc
xchg
or
or
fcmove
jmp
add
in
mov
inc
bound
mov
pop
mov
dec
jnp
cmc
jae
add
or
adc
mov
in
jns
ljmp
add
cmp
insl
outsb
lea
rclb
fucomp
popf
rcrl
adc
pop
stos
mov
and
xchg
push
and
lret
stc
pop
jmp
sub
cmp
xor
mov
jo
scas
bound
jmp
mov
out
jae
xchg
subb
leave
dec
push
sbb
pop
fsubrp
iret
sahf
lahf
cwtl
xchg
mov
dec
movsl
dec
xor
xchg
mov
shl
mov
xchg
push
test
lret
inc
lret
push
out
idivl
into
test
out
mov
lahf
xchg
fistps
sbb
mov
int3
xchg
into
add
push
movsb
add
in
mov
cmp
push
dec
cs
xchg
repnz
outsl
ja
insl
adc
or
sbb
push
xlat
cmpsb
add
pop
pop
push
xchg
shll
jle
mov
stos
mov
mov
cmp
outsl
mov
add
fdivl
loope
iret
push
add
insl
cmp
or
sub
stc
call
push
int3
aaa
jp
sti
xchg
lock
test
movl
pusha
xor
loope
adc
sbb
jo
sub
cs
adc
cs
mov
mov
scas
add
sub
aad
cmp
cld
mov
add
mov
mov
lret
jbe
stos
je
in
insb
or
stos
sbb
lahf
push
idivl
test
push
sub
xor
adc
repnz
mov
cwtl
jle
scas
insb
hlt
shrl
repnz
cmpsl
in
mov
adc
xchg
and
popa
bnd
cmp
int3
movsl
addl
xor
and
mov
into
scas
addr16
mov
ror
jge
cli
jge
mov
negb
pop
enter
cmp
pushfw
inc
xchg
add
inc
jne
enter
je
fiaddl
pop
dec
into
push
sub
or
mov
xor
fwait
mov
imul
sbb
pop
mov
add
mov
loope
jle
or
xchg
push
jno
inc
cltd
jne
lock
jns
movsl
das
xor
repz
dec
lds
aas
lahf
or
sub
stos
pop
mov
das
pop
jmp
push
leave
test
push
in
push
pop
mov
pop
ja
xchg
dec
out
inc
xchg
in
xchg
fldln2
add
popa
cld
jnp
dec
stos
xchg
dec
out
cmp
mov
adcb
xorl
fwait
ret
icebp
and
les
and
inc
daa
or
cmpsb
cmp
add
movsl
xchg
jnp
jnp
out
inc
sbb
jg
mov
aam
jb
mov
adc
sbb
cmp
jg
orl
mov
lret
inc
mov
xor
int
and
lahf
xor
int
iret
xor
mov
inc
stc
xchg
pushf
ja
add
xchg
mov
stos
add
test
les
push
sbb
out
and
sub
fnstcw
fwait
xchg
push
dec
sbbl
je
fsubs
aam
pop
pop
lock
mov
xlat
clc
xchg
and
ret
movsl
lea
mov
jl
xchg
mov
test
popl
jbe
mov
lods
or
popa
aaa
in
js
pop
dec
pop
and
inc
dec
mov
xchg
xchg
outsb
sub
das
mov
loop
addr16
je
into
cmpl
pop
pushf
inc
repnz
pop
xchg
add
jp
out
lahf
mov
js
push
addr16
sbb
push
shrb
mov
cmp
and
sbb
adc
orb
fiadds
arpl
cwtl
iret
pusha
dec
mov
mov
sub
xor
and
in
adc
sub
loopne
push
imulb
mov
stos
pop
icebp
stos
xchg
push
cmp
jl
fmull
sti
mov
loope
push
aad
mov
cmp
fadd
push
inc
or
pop
inc
mov
push
or
shl
inc
jmp
out
lock
insb
jmp
cwtl
imul
jl,pn
push
lock
sbb
test
sbb
fisttpl
inc
jp
stos
test
mov
cmp
inc
inc
mov
test
mov
jl
arpl
in
xchg
jae
push
jae
fwait
add
outsb
push
xor
int
lahf
and
inc
hlt
xchg
in
or
pop
es
mov
xor
pop
xor
iret
xchg
jge
mull
icebp
pop
mov
xlat
mov
aaa
in
xlat
cmp
mov
or
dec
push
sub
jbe
popa
sbb
shll
inc
adc
inc
pop
add
mov
jmp
lret
push
mov
mov
int
ficoms
fnsave
jns
shll
sahf
and
arpl
sbb
dec
shll
mov
mov
jno
push
ss
pop
inc
pop
or
fsubl
and
js
andb
mov
mov
and
sub
inc
fisttpll
jge
mov
mov
and
jecxz
loopne
xchg
icebp
leave
into
push
arpl
inc
add
jb
and
rolb
lret
dec
mov
out
hlt
cmp
aas
mov
sti
sti
and
pop
icebp
or
push
je
cltd
lods
lock
hlt
xchg
mov
ret
sub
cmp
test
pop
notb
sbb
cmpsl
or
push
mov
insb
stos
lods
jns
mov
cmpsb
aam
popf
push
xor
out
inc
loope
js
pushf
adc
add
ss
enter
adc
sbb
push
add
fs
sbb
into
fwait
cmp
sub
loope
fidivrs
jns
stc
mov
inc
push
push
push
jns
sub
sbb
in
inc
inc
addb
or
pop
sti
sub
lods
cmp
inc
mov
add
sbb
idivb
jmp
cmpb
mov
mov
subb
into
inc
cmp
adc
xchg
inc
mov
jmp
xor
cmpl
daa
ss
loop
jle
clts
dec
sti
adc
push
rcrb
cmp
mov
pop
out
cmp
cmpsl
pop
pop
test
mov
dec
adc
fidivs
imul
push
mov
sti
dec
arpl
mov
fdivrp
jecxz
roll
push
pop
mov
push
pusha
out
rcl
inc
cmp
daa
add
pop
cmp
mov
push
jp
out
lds
sub
or
mov
push
and
and
xchg
mov
sub
inc
sti
test
add
xchg
popf
mov
outsb
adc
push
and
aam
mov
stos
mov
cmp
jnp
push
cmc
fwait
pop
movsb
mov
cwtl
lock
or
nop
repnz
daa
push
divb
outsb
push
xchg
leave
mov
rcrb
mov
add
cltd
rcl
or
pop
dec
out
leave
inc
pop
add
icebp
imulb
inc
push
mov
inc
ljmp
jns
ja
add
test
adc
cmpsb
test
dec
dec
fisttps
inc
sbb
in
push
out
xor
pop
stc
lods
inc
imul
dec
xchg
es
ja
aaa
adc
or
mov
cmpsb
int
test
xchg
push
addb
mov
les
icebp
or
ss
fidivs
stos
sbb
dec
xor
idivb
push
jbe
pop
adc
stos
insl
sub
clc
inc
jle
cmp
les
les
add
dec
shr
dec
cmpsb
add
lock
int3
dec
loope
xchg
leave
inc
cmpsb
mov
sbb
push
cmpsl
out
int
pop
inc
dec
jp
test
push
dec
dec
lea
add
cmp
shr
popf
pop
lods
or
sbb
imull
mov
push
or
add
mov
lahf
push
mov
int
xorl
sub
enter
arpl
pop
and
out
or
sub
inc
fidivrs
pop
or
pushf
and
out
add
push
jp
inc
jns
inc
lahf
inc
xor
aam
inc
enter
adc
and
call
fiadds
test
cmp
mov
cmp
xchg
mov
add
push
xor
bound
xchg
fwait
xlat
cwtl
imul
ret
stos
das
out
and
out
or
lret
add
sbb
mov
mov
mov
lahf
fldl
adc
xchg
fwait
das
push
imul
nop
sub
xchg
ja
fdivp
lods
test
aad
jl
loopne
dec
xor
fxch
cltd
enter
push
add
mov
lds
dec
test
xchg
cmpsl
icebp
sbb
popf
jmp
cltd
sub
push
adc
mov
sbb
dec
enter
or
inc
dec
sti
jae
adc
sub
scas
add
xor
dec
test
rol
add
mov
mov
imul
fsubs
cwtl
out
pushf
lcall
enter
insb
bound
mov
jp
cld
loop
jg
andl
push
iret
add
outsl
test
sub
push
les
mov
add
sbb
mov
mov
insb
jg
push
je
inc
fdivl
dec
sahf
js
pushf
clc
dec
xchg
int
imul
jecxz
test
pop
adc
ret
cmpsl
sti
or
sbb
cmp
and
in
dec
repz
mov
adc
aaa
cmp
cmp
or
mov
rorb
mov
adc
loopne
xchg
and
jno
add
fwait
inc
push
insl
out
fdivp
repnz
and
jmp
jno
loope
inc
jns
lcall
sbb
shll
add
imul
sub
ret
mov
inc
fs
or
mov
cli
xchg
and
or
lds
adc
pop
ljmp
movsl
sahf
outsl
pop
add
movb
inc
fnstcw
lea
xchg
inc
xchg
mov
cmp
jge
inc
fidivrs
out
loopne
jno
ret
inc
dec
cmp
mov
leave
jns
fsubl
and
mov
lods
inc
enter
ds
jp
insl
test
mov
outsl
cltd
push
int
push
sub
jb
pushf
sbb
cmp
xor
cmpsb
in
gs
mov
lcall
jecxz
mov
js
mov
and
jg
mulb
cmpsl
insb
call
adc
lret
popa
data16
cmp
shl
fsubrs
add
fs
inc
pop
std
stc
xchg
je
mov
sub
push
adc
mov
pop
xchg
cld
insb
xchg
adc
mov
add
cmpsl
push
loop
jnp
or
mov
lcall
rolb
movl
stos
imul
ss
vmovaps
iret
pop
add
or
or
inc
and
mov
and
test
lds
cmp
fucom
jp
lods
mov
push
inc
xchg
cld
mov
or
inc
xchg
lods
sti
or
fs
adc
mov
adc
inc
sub
sarb
jbe
lods
popf
ds
mov
imul
hlt
pop
adc
push
xor
sbbb
adc
or
pusha
and
repz
movsb
imul
sub
inc
and
rcr
mov
mov
xchg
cmp
mov
mov
cmp
xor
jbe
add
scas
repz
in
inc
jns
push
ret
shl
mov
ds
mov
inc
cmp
in
cmp
pop
xor
and
mov
in
insb
sub
sub
cwtl
js
repz
stos
testl
push
mov
pop
sbb
dec
adc
les
dec
pop
sub
xorl
inc
jbe
cmp
in
pushf
cmp
adc
jecxz
mov
outsb
xchg
shrl
mov
ljmp
jecxz
push
arpl
arpl
aad
imul
insl
outsl
icebp
add
pushf
into
je
xchg
in
in
push
mov
inc
scas
pop
mov
dec
scas
shll
leave
and
push
inc
sub
pop
xor
and
ljmp
or
stos
mov
dec
lds
jg
je
mov
fsubrp
ss
dec
mov
imul
cmp
ja
pop
xchg
pop
xchg
arpl
pop
jno
popa
pop
clc
inc
scas
aas
jno
sub
sahf
call
or
pop
xchg
push
or
lahf
mov
xor
mov
jno
cmpsb
mov
pushf
fnstsw
inc
rorl
cmp
push
bswap
fcoms
jbe
mov
std
xchg
rclb
fidivrs
std
sbb
pop
or
push
mov
rcrb
push
jo
into
xchg
xchg
jl
dec
jo
or
jle
sub
ret
pushf
psrld
stc
inc
addr16
and
pop
mov
aad
xchg
mov
pcmpeqd
xchg
cmp
sub
outsl
int3
inc
jmp
mov
and
fyl2xp1
jnp
pop
push
mov
lahf
lcall
add
xor
int3
jnp
or
inc
cmp
lods
adc
or
sbb
add
fimull
decl
jge
add
pop
push
xchg
les
push
iret
lods
xor
pop
and
pop
jle
cmp
lods
mov
je
arpl
cmp
shrb
stos
roll
divl
and
out
or
sbb
stc
faddl
aaa
push
and
in
mov
hlt
mov
repnz
sbb
push
adc
mov
cld
mov
adc
std
lock
js
xchg
dec
inc
mov
mov
daa
xchg
lods
cmp
jno
cmp
cwtl
and
inc
cmp
pop
push
cmpsl
pop
pop
lret
ret
lea
dec
push
les
push
dec
incb
arpl
lcall
fmuls
push
leave
stc
add
mov
dec
rcrl
and
not
loop
sbb
xchg
hlt
dec
ljmp
sbb
jecxz
push
pushf
insb
and
les
js
and
arpl
sti
pop
jne
xor
xchg
cltd
fsubs
push
out
and
arpl
mov
mov
int
mov
push
es
xor
dec
cmp
int
dec
xor
outsl
mov
loopne
and
dec
mov
test
adc
inc
lahf
push
sbb
fwait
mov
insl
inc
aad
add
ret
inc
sbb
mov
in
lahf
push
cmp
push
pop
push
dec
xor
xor
lahf
leave
pop
mov
sbb
sarl
add
pushf
in
and
outsl
push
test
or
int
into
clc
mov
jl
add
pop
lret
xchg
js
scas
xchg
mov
push
jnp
les
inc
jge
cmp
xlat
fmull
jmp
lods
fcomps
insb
lods
push
adc
pop
mov
add
fbstp
xor
adc
test
sub
xor
cmp
test
gs
into
mov
adc
imul
add
sarl
jg
mov
leave
std
xchg
ficoml
repnz
in
aad
add
cli
inc
jmp
popl
cmp
repz
aas
mov
pop
add
xacquire
or
adc
sahf
mov
mov
sub
xlat
jecxz
cli
xchg
bound
dec
rorb
jp
mov
and
mov
ljmp
hlt
imull
sub
push
cwtl
lea
mov
dec
shrb
xor
xchg
and
ret
jne
cli
imul
jecxz
rcl
or
pop
inc
xchg
jl
das
cmp
in
out
lds
fildl
pop
ds
adc
cmp
clc
inc
xchg
sub
sub
cmp
test
xor
ljmp
xchg
arpl
repz
cwtl
js
pop
lods
adc
xor
shll
push
lret
cmp
push
loopne
pusha
pop
sub
outsb
je
aas
push
cmp
pushl
mov
jnp
fldl
stos
fiaddl
les
xchg
push
insl
je
pop
data16
jo
lock
cltd
lahf
xchg
cmp
and
cwtl
lea
xor
dec
inc
in
lcall
lret
imul
lds
or
stos
push
jge
fst
xor
push
mov
adc
ret
push
pusha
lock
lahf
dec
ret
adc
xchg
lcall
push
xor
xor
stc
mov
int
in
jns
mov
pop
adc
rorb
pop
stos
je
andl
sbb
xchg
pop
stos
sarb
into
pusha
push
inc
dec
movsb
outsb
add
cmc
loopne
fwait
in
push
sub
inc
mov
xchg
xor
jbe
cmpsl
in
mov
lret
pop
jno
loopne
xchg
clc
push
imul
out
or
cmp
leave
stc
ret
out
testl
ficomps
cmc
or
jle
dec
call
nop
mov
std
test
push
or
sbb
mov
gs
xor
in
imul
sbbb
jp
in
insl
addr16
ret
pop
push
sub
int
call
jnp
fsubr
sbb
ds
xchg
dec
sbb
call
in
loope
mov
xor
into
repnz
mov
shlb
outsl
mov
push
in
mov
mov
stc
inc
outsb
faddl
je
pop
mov
xor
lahf
adc
mov
sub
pop
shll
icebp
lahf
xor
sub
fwait
push
mov
test
in
shrl
dec
flds
lea
jae
mov
mov
jns
fsubrl
xchg
push
push
int3
jg
cld
int3
addr16
pop
negl
adc
xchg
lret
lods
movsl
mov
test
pop
add
jle
out
add
mov
fiaddl
das
xor
call
std
call
ret
mov
shr
pushf
int
aam
ret
cmc
xchg
fstps
push
imul
sbb
xchg
sub
sub
std
jbe
pop
dec
dec
movsl
repz
xchg
dec
out
faddp
mov
lret
mov
push
xor
and
inc
mov
mov
and
and
data16
lret
loope
mov
aaa
pop
bndstx
inc
mov
aaa
sbb
call
fdivr
jno
cs
stos
and
mov
xchg
mov
fildll
mov
inc
pushw
cli
aad
imul
add
and
xchg
and
fstpl
xchg
jnp
mov
and
adc
cmp
xchg
mull
mov
cltd
pop
adc
popa
pop
push
and
pop
sbb
cli
sbb
push
scas
cwtl
push
in
jbe
add
call
and
dec
xchg
sbb
push
ret
and
add
mov
lods
jno
lahf
into
xor
aad
ret
mov
mov
pop
lock
fistpll
mov
add
xor
cmp
mov
test
push
icebp
repnz
jo
ja
sub
leave
mov
push
jg
icebp
out
in
push
repnz
inc
sub
icebp
push
mov
cmp
mov
mov
dec
pop
scas
jo
div
dec
jl
push
ret
enter
xor
ss
sub
in
stc
lret
push
adc
decl
mov
mov
jecxz
outsl
push
jne
aas
pop
lds
test
jo
in
and
cltd
mov
int3
dec
jae
dec
ss
andl
arpl
sbbl
jecxz
jmp
push
je
shr
pop
jo
mov
ret
adc
test
ret
cmp
push
adc
push
lods
mov
push
pop
dec
push
ss
in
sbbl
lods
mov
jns
mov
sub
jo
sbb
xor
repnz
and
xor
cmp
sbb
loopne
jl
arpl
leave
cli
or
scas
xor
mov
loopne
jmp
pop
jne
fstpt
xchg
fs
mov
dec
xchg
jae
mov
inc
repnz
fisttpll
aad
int
dec
ret
popf
ficompl
fldcw
outsl
cmc
cs
dec
xor
xchg
mov
sbb
mov
enterw
fs
push
push
orl
in
popa
pop
ds
jle
test
bnd
loope
movsl
mov
nop
dec
lahf
aad
jb
sbb
mov
push
loop
xor
jp
dec
push
jmp
add
dec
or
arpl
into
mov
out
jo
cli
fsubrs
out
test
add
mov
jg
clc
xor
xor
loop
outsb
je
sub
mov
jle
xor
adc
sbb
mov
loop
sti
mov
je
pop
xlat
ljmp
hlt
lock
xchg
mov
jl
mov
push
add
repz
add
inc
aad
addr16
mov
jnp
out
sbb
enter
push
dec
and
pop
mov
mov
cmc
pop
test
or
sbbl
hlt
insl
lods
pushf
xor
mov
out
or
fwait
ret
pop
lret
dec
jmp
pop
loope
aaa
push
mov
jns
mov
sahf
int3
sbb
std
push
and
ja
rclb
mov
mov
pop
mov
push
addr16
enter
jae
fldenv
fs
inc
loope
adc
orl
jmp
add
cmp
cltd
inc
test
cmpsl
push
rolb
pop
push
call
outsl
sub
sub
and
mov
sub
les
cmp
fsubl
mov
push
inc
je
daa
and
rcrb
sub
fdivrl
mov
jno
ja
ret
mov
push
xor
repz
jp
loop
xchg
cmpsb
mov
jl
mov
push
ds
xchg
popf
and
dec
jg
test
inc
xchg
lret
xchg
mov
outsb
std
jbe
add
icebp
mov
adc
adc
dec
push
mov
js
and
push
into
mov
add
xchg
and
popa
test
out
mov
std
syscall
pop
aam
pop
mov
aaa
mov
fs
inc
outsb
shrl
xchg
aad
cli
ljmp
std
jnp
ds
lahf
shlb
and
sub
scas
push
mov
cmp
cmp
cmp
xchg
and
addl
dec
rcrl
mov
mov
lret
add
jae
or
or
popa
movsl
push
add
or
xchg
pop
enter
aad
mov
ret
jecxz
cmpsb
lcall
dec
mov
xor
cmp
les
sahf
cmp
pop
cmc
sbbb
shll
add
adc
xchg
bswap
sbb
lret
and
icebp
and
inc
clc
jp
lret
stos
jnp
fiadds
mov
jae
addb
cwtl
dec
out
or
ret
aad
push
call
cmpsl
icebp
dec
in
nop
orl
mov
sub
push
ucomiss
mov
xor
out
adc
outsb
adc
mov
pop
test
fldl
insl
mov
fisubrs
lds
jnp
lods
sbbb
mov
cli
mov
jnp
xchg
push
dec
pop
pop
dec
insb
xor
xor
mov
xlat
outsl
je
shl
jae
rcl
stos
sub
leave
and
sub
inc
es
aam
mov
ret
push
mov
ss
add
in
cmp
ljmp
popa
inc
ljmp
pop
clc
int
xchg
pop
mov
lods
cmp
insb
cmp
xor
jecxz
mov
xchg
add
sub
dec
mov
ret
hlt
xlat
and
testl
cltd
pusha
add
or
sti
push
imul
dec
frstor
imul
sub
mov
xor
gs
adc
cld
lahf
mov
cltd
rcll
adcb
mov
in
adc
pop
and
cwtl
aaa
jno
jb
and
jmp
stos
adc
add
scas
push
lods
js
jg
and
xchg
add
test
mov
mov
inc
test
push
adc
test
pop
pushf
mov
and
test
xlat
aam
jbe
sbbl
push
inc
out
cmp
lret
jnp
popf
lds
xor
mov
iret
dec
pop
dec
jle
cmp
testb
cwtl
fwait
mov
push
call
mov
daa
inc
or
stos
jo
insb
jae
cmpsl
sub
sub
stos
mov
jmp
in
out
rcll
sahf
pop
push
or
enter
leave
insb
push
inc
add
aam
jl
js
cmp
push
lret
fcmovb
pop
xchg
cmpsl
cmp
das
in
dec
das
xor
stos
push
je
ss
out
lea
fs
sbb
leave
imul
jb
or
aad
les
push
xchg
jmp
inc
mov
inc
lcall
push
adc
cmp
mov
dec
pop
pushf
mov
push
es
add
cmp
iret
enter
cmp
push
inc
mov
jo
xchg
nop
push
out
repnz
mov
std
adc
outsl
mov
and
aas
popf
lahf
dec
or
mov
jbe
mov
or
mov
pusha
add
fs
rcrl
mov
or
addl
fcoms
cmp
aad
cmp
ret
cwtl
nop
push
mov
call
pop
or
lods
add
pop
sbb
mov
aaa
cmc
dec
mov
and
cmp
mov
push
push
pop
and
cli
out
gs
mov
mov
xorl
in
mov
mov
cli
out
mov
xchg
in
push
rorb
inc
cwtl
fs
mov
out
ret
fnstsw
cli
or
mov
pop
inc
lods
repz
jae
dec
rcrl
out
add
xor
jnp,pt
jg
icebp
sub
dec
jne
mov
sub
popa
jae
adcb
inc
fsubs
les
or
sbb
fcoms
push
mov
ljmp
jmp
loop
pushf
call
test
mov
xor
cmpsb
xor
dec
cltd
and
cmp
cmp
setp
call
int3
pop
dec
inc
adc
mov
xorl
pusha
jae
iret
xchg
cmp
jae
not
mov
daa
fisttps
roll
sbb
dec
jmp
lret
or
xor
pop
enter
rorl
aad
pop
jp
mov
xchg
frstor
lods
jnp
pop
into
aam
popf
leave
or
dec
jnp
psrlq
jne
mov
popa
mov
addr16
dec
movsb
jl
pop
enter
test
je
jbe
aaa
call
int3
mov
push
jo
jl
sbb
sub
rolb
mov
mov
mov
cmp
inc
pop
dec
lock
and
add
mov
fstl
or
inc
push
push
dec
fdivrs
das
rcrb
in
mov
lock
xchg
sbb
jecxz
adc
and
jmp
sbb
in
and
xchg
lods
in
sbb
inc
iret
dec
fcomp
arpl
shrl
les
clc
cltd
push
ficompl
xchg
mov
and
adc
fwait
add
flds
sub
test
call
jb
daa
mov
aad
cmp
insl
je
test
rclb
fimuls
sti
shlb
push
inc
fwait
xchg
add
xor
rclb
jns
nop
xor
mov
and
insb
add
cli
jns
shlb
xchg
cmp
ds
jecxz
add
shrb
push
mov
mov
or
arpl
movsl
ds
add
push
mov
int3
cs
xor
daa
pop
adc
jmp
sub
pop
cld
mov
shll
inc
adc
dec
mov
jo
mov
imulb
loope
sub
push
jg
popf
ljmp
cld
and
push
aam
mov
lods
push
push
adc
sbb
arpl
mov
push
movsl
add
dec
inc
cmpsl
pop
mov
jp
dec
js
add
xchg
sbb
or
fcomp
pop
mov
cmp
nop
or
cmc
outsl
and
jge
mov
dec
mov
xlat
dec
jp
and
nop
lret
inc
inc
xchg
insl
jmp
sarb
adc
cwtl
and
mov
xchg
mov
sub
fbld
pushf
jge
or
sbb
bound
jl
push
mov
jp
and
push
sbb
fadd
mov
ss
fstps
sbb
rcll
inc
push
mov
loopne
test
pop
push
ficomps
inc
daa
cmc
mov
insl
aaa
lcall
add
sti
pusha
repz
mov
and
rolb
aaa
rcrl
mov
std
xchg
cmp
mov
pop
aam
ficoml
fmull
fildl
lods
xor
push
xor
xchg
pop
cli
jb
imul
push
ds
dec
notb
arpl
xlat
dec
cmp
sti
pushf
ret
mov
rorl
dec
out
es
cmc
cs
in
insl
pop
cmp
xor
data16
and
ljmp
or
sub
xchg
push
stos
shll
jno
out
pop
add
nop
call
cmp
out
ljmp
push
outsl
xor
fimuls
adc
aas
loopne
shlb
add
xchg
sub
call
xor
add
sbb
xchg
push
sarl
lock
jbe
jle
dec
xchg
das
inc
adc
lret
ret
push
cmp
pop
or
out
mov
rorb
in
jl
xchg
pop
cs
out
add
cli
mov
stc
push
dec
xlat
fcom
push
test
add
stos
xor
repnz
jecxz
cli
imul
xchg
test
fptan
xorl
dec
call
jnp
aam
rclb
sbb
cmp
push
fs
pop
lcall
and
enter
and
out
mov
sbb
dec
sbbl
test
add
xor
mov
enter
insb
ss
cltd
or
mov
data16
dec
scas
es
xchg
and
push
push
repnz
daa
mov
xchg
in
stos
fdivrl
clc
in
xor
ret
sbb
lahf
dec
or
insl
aad
cmc
repz
cmp
aas
xchg
dec
arpl
outsl
call
hlt
add
sub
test
push
push
dec
add
or
cmp
mov
aam
mov
cmc
inc
jo
notb
cmp
das
adc
or
cmp
fidivrl
int
and
movsl
imull
cmpsl
cmpsl
mov
jns
repnz
xor
pop
cmp
pop
fisubrl
sbb
sti
stc
in
jge
cs
mov
cltd
cmpl
inc
jae
push
lea
xchg
call
xchg
outsl
dec
cli
cmpsl
adc
xchg
mov
loopne
push
add
rcrb
loop
pop
cmp
xchg
mov
out
mov
adc
dec
out
rcrl
cmpb
jae
xchg
xchg
test
lea
pushf
push
es
xchg
add
mov
push
mov
insb
adc
add
cs
or
sbb
das
out
inc
sti
enter
mov
outsl
jge
pop
xchg
fnsave
icebp
xor
dec
fmull
and
lret
imul
mov
arpl
ds
mov
dec
lret
mov
sbb
enter
aas
fcom
pop
inc
shll
sti
js
fs
inc
in
mov
dec
cmp
jmp
jnp
test
push
adc
fwait
and
ret
or
mov
mov
or
lods
pop
dec
lcall
out
push
test
aaa
dec
xchg
lea
mov
sub
add
outsl
popf
rcll
adc
ret
cmp
push
push
inc
sbb
fs
inc
dec
push
outsb
pop
inc
loope
outsb
jne
and
jno
insb
enter
mov
rcrb
push
push
arpl
lds
dec
scas
jmp
mov
sbb
mov
add
mov
aam
mov
int
addb
int
sarb
outsl
push
dec
dec
cmp
sbb
inc
mov
stos
pop
bound
sti
xchg
aam
out
cltd
leave
jno
cmp
lcall
fwait
lea
cmp
pop
pop
sub
outsl
push
push
imul
loopne
xor
mov
setl
psubusb
dec
pop
add
inc
push
stos
pusha
jne
test
ljmp
imul
jg
ljmp
ror
outsl
xor
cli
sbb
jae
out
sbb
jmp
fidivrs
icebp
xor
pop
xchg
and
hlt
fidivrs
cltd
xlat
fwait
xchg
xlat
mov
js
push
testb
lock
jle
mov
jp
inc
pop
shlb
push
jne
jno
sbb
bound
int
xchg
xchg
les
dec
scas
or
dec
jmp
pshufw
inc
xchg
or
add
jecxz
dec
push
ja
and
mov
pop
mov
jle
aaa
xchg
jno
insl
add
jmp
jnp
mov
lret
fnsave
mov
filds
mov
leave
adc
add
sbb
lods
or
daa
jnp
fstpl
sahf
pusha
xor
xchg
adc
imul
or
xchg
xorl
xor
inc
pop
jmp
sbb
pop
xchg
mov
mov
es
sbb
jle
mov
xchg
cmpsb
andl
sbb
mov
mov
cltd
out
scas
xor
mov
push
add
test
fistpll
out
insb
pop
popf
xor
pop
xchg
out
dec
jb
popf
lahf
pushf
mov
mov
cmpsb
push
pop
inc
push
xchg
and
xor
xchg
mov
push
aam
cmpsl
add
nop
cld
xchg
int3
pop
out
cmp
sbb
lock
or
movsl
inc
fildl
imulb
push
daa
fwait
test
add
lea
shr
xor
lods
xchg
adc
pop
outsb
jmp
xor
jno
mov
fcmovne
push
inc
push
pop
xor
ljmp
mov
pop
xchg
iret
xor
push
mov
shlb
loopne
dec
fmuls
test
jnp
fsubl
mov
lret
std
add
cs
mov
push
negb
or
xlat
push
testl
mov
and
adcb
push
mov
xchg
leave
pop
jae
mov
xchg
sbb
in
enter
mov
movsb
jbe
movsl
sbb
sub
dec
test
or
out
sbb
ss
mov
pop
mov
xor
xor
ja
xchg
cmp
add
sbb
aad
mov
sub
push
shlb
sahf
je
fsubs
mov
movsb
mov
pop
mov
sub
xor
insb
clc
stos
push
mov
xchg
ljmp
mov
mov
or
jbe
jge
mov
das
xor
push
xchg
add
xor
shll
hlt
xchg
pop
add
cmp
add
stc
mov
addr16
sahf
aam
inc
and
jmp
gs
jg
pop
mov
fs
xlat
inc
jl
stos
mov
inc
sub
sahf
mov
inc
scas
les
sbb
xor
out
sti
aam
cmpsl
loopne
mov
call
jo
cwtl
gs
xor
fcmovb
jge
test
loop
adc
sub
scas
sub
out
test
xchg
int3
jae
jns
dec
adc
call
cwtl
ficompl
adc
sbbb
push
push
ror
jb
lahf
adc
xchg
pop
in
sbb
insb
lret
adcl
mov
pop
sub
jb
sub
xlat
adc
rorl
add
mov
popl
fdivl
pop
scas
addr16
mov
int
add
test
jecxz
call
push
ret
dec
jns
loope
popf
ret
push
jl
and
fs
fiadds
xchg
and
xchg
enter
mulb
sarb
push
pop
lock
rcrl
stos
xchg
push
out
mov
or
roll
sub
xor
xchg
sbb
push
outsb
push
repz
out
idivb
pslld
cld
cmp
adc
iret
fidivrs
repz
ja
lods
mov
pop
xor
sbb
mov
push
sbb
jo
push
mov
mov
lea
push
mov
mov
imull
jle
inc
gs
sub
rclb
aas
out
lock
rclb
inc
jae
push
outsb
cs
mov
dec
sbb
shlb
stc
lret
lds
cwtl
sub
xchg
aas
icebp
dec
cwtl
ret
fidivs
std
xchg
stos
enter
leave
or
es
mov
mov
je
push
sub
xchg
push
mov
jp
icebp
shll
js
fisttpll
jmp
adc
sbb
mov
nop
loope
jl
mov
add
adc
orb
repnz
and
in
loope
sbb
outsl
lea
lcall
inc
or
jmp
xchg
cmpsl
jb
cmpsb
pop
out
fimuls
int
or
out
jp
adc
push
aas
scas
mov
sub
int3
jle
popa
outsb
in
push
cltd
push
pop
jmp
adc
and
lods
jno
fimull
aam
add
imul
xor
ja
jbe
mov
cs
or
jecxz
add
mov
in
fidivs
add
jp
das
iret
adc
pop
xor
mov
lahf
and
mov
mov
inc
outsb
cwtl
jo
enter
xor
push
lds
mov
push
push
push
jae
insb
data16
pop
mov
mov
sbb
test
inc
and
lods
pushf
sub
push
sbb
aaa
xor
fs
jecxz
aam
mov
and
and
insb
cmp
sti
mov
dec
sarb
sub
shl
ror
xchg
pushf
inc
mov
mov
adc
xchg
frstor
repz
add
xchg
mov
and
mov
cli
xorl
dec
mov
push
cltd
sub
add
mov
icebp
inc
inc
xchg
cli
or
pop
in
adc
pop
xor
mov
lret
dec
push
xor
pusha
into
mov
pop
icebp
lcall
sbb
or
cmp
nop
xor
aaa
or
adc
ljmp
cmp
int
ret
aam
inc
jg
mov
mov
fs
mov
out
inc
stos
leave
ret
or
mov
add
inc
sbb
ljmp
push
cmp
shrb
leave
xor
rcll
lock
test
mov
push
push
adc
mov
add
lods
jbe
adc
push
bound
jns
mov
rolb
dec
into
jne
cs
xchg
in
out
mov
pop
sbb
jnp
push
push
test
sub
int
cmp
out
in
test
sbb
mov
pusha
ljmp
xchg
cmp
cmpsb
fstpt
push
out
gs
lea
xchg
bound
mov
add
fwait
dec
xchg
aas
pop
push
jne
popa
mov
lret
inc
mov
daa
cmp
xchg
inc
push
mov
nop
jmp
pop
push
fsubr
stc
lock
xchg
shrb
in
sub
sbb
loope
xor
inc
pop
lods
pop
or
mov
out
aas
out
imul
mov
mov
and
xor
and
icebp
dec
add
int
or
inc
inc
loop
outsb
cmp
int
jecxz
xor
or
nop
dec
scas
lahf
xchg
inc
cs
xchg
lret
outsb
add
lea
jle
outsl
insl
jg
in
or
and
mov
in
push
jp
out
addr16
in
sub
mov
xchg
add
inc
sbb
sbb
in
shlb
xlat
hlt
fs
mov
xor
adc
icebp
out
or
sub
sub
mov
mov
xchg
and
adc
sub
lahf
pop
pop
mov
movups
bound
xor
mov
jno
loop
or
mov
and
push
out
and
sahf
pushf
lahf
sub
push
mov
scas
xor
stos
mov
enter
add
add
mov
stos
into
push
or
xor
callw
arpl
cmpsb
rcll
insl
sub
aad
iret
js
sub
fwait
pop
push
xchg
sub
add
push
sub
loope
nop
mov
and
cwtl
ljmp
fistpll
adc
iret
shrb
sub
and
add
ss
inc
repnz
sbb
int
in
cmpb
shrl
xchg
test
mov
call
jns
rcll
out
or
insb
add
in
in
ss
jp
xor
mov
push
or
mov
mov
pop
dec
scas
out
push
xchg
in
pop
sub
bnd
jl
aad
mov
das
adc
out
addr16
cmp
fisubrs
loopne
dec
out
pcmpeqw
inc
loopne
cltd
cmp
ret
adc
test
xor
negb
dec
fidivl
xorb
pop
stos
loope
ror
sub
xchg
or
add
stos
xchg
fnstcw
add
out
movsb
or
leave
xor
das
mov
inc
vpcompressw
repnz
arpl
mov
in
inc
addr16
pop
fstl
hlt
mov
ss
adcl
cmc
or
inc
stc
sbb
aam
stos
xchg
xchg
icebp
shlb
movsb
shlb
cmp
push
jmp
sbb
shlb
imul
xchg
sub
sub
daa
test
sub
fidivl
iret
pop
lcall
xchg
sub
sbb
jle
dec
adc
insb
rorl
xor
arpl
sub
add
insl
adc
ret
das
mov
popa
shlb
jb
pop
and
inc
inc
adc
gs
and
push
sahf
xor
movsb
fadd
inc
xchg
push
hlt
in
jns
mov
js
pop
sbb
or
lret
xor
idivb
outsb
xor
and
mov
lods
insb
imul
push
es
sbb
fldt
xchg
rolb
inc
ss
fldl
jecxz
add
repnz
ljmp
loop
clc
add
je
or
test
lcall
rcrl
nop
xor
mov
out
sti
out
pop
out
xchg
lds
das
xor
jnp
xchg
out
xor
dec
hlt
sub
aas
and
dec
sti
mov
int
adc
pop
pushl
jecxz
pop
out
jl
fs
mov
loop
mov
cmp
mov
lods
subl
add
or
insl
xor
jp
pop
cld
adc
divl
pop
push
lret
je
loopne
and
adc
adc
sbb
xchg
lcall
mov
cs
icebp
cwtl
in
popa
cs
add
lret
jge
and
adc
int3
mov
push
es
cwtl
scas
ljmp
test
daa
mov
sbb
out
sbb
pushl
frstor
xchg
scas
mov
push
fs
jle
sbb
scas
stos
mov
out
out
xor
jnp
sub
mov
jno
jg
insl
sub
addl
dec
sbb
pop
mov
pop
jb
out
movsb
jnp
push
popf
popa
jo
pop
cmp
adc
jp
jmp
les
stos
push
xchg
jb
mov
stos
mov
mov
das
sahf
xchg
insl
dec
icebp
fwait
loope
call
jmp
push
aam
popa
push
popa
mov
xchg
and
mov
movb
pop
mov
cmp
leave
xlat
sbb
mov
mov
pop
jle
das
movsb
adc
sbb
lahf
xlat
add
es
push
test
push
sbb
or
call
mov
inc
sub
push
jecxz
mov
push
ds
jle
test
js
xlat
roll
test
mov
cld
fwait
roll
insl
test
aam
enter
pop
sub
sbb
jecxz
lahf
pusha
das
js
add
dec
jecxz
lea
dec
cmp
aas
add
pop
add
mov
sbb
stc
pop
inc
test
sub
loopne
add
xchg
in
pop
or
jmp
pusha
ds
add
nop
imul
std
arpl
jle
lock
iret
fcomip
mov
pusha
push
shrl
sub
nop
xor
add
mov
push
sub
in
mov
int
lock
pop
test
js
outsl
mul
mov
nop
lahf
sbb
push
or
or
adc
and
pushf
jmp
sub
xor
pusha
sub
mov
lahf
jmp
fcoms
fcoms
jle
in
bound
mov
lret
mov
mov
adc
iret
stos
inc
jnp
and
sub
das
in
lcall
push
aad
inc
imul
sub
mov
es
cmp
mov
dec
mov
stos
into
xor
jns
enter
adc
mov
push
popf
adc
lds
dec
inc
or
cli
call
xor
xlat
popa
inc
dec
lock
out
nop
xor
inc
inc
push
cmp
icebp
outsb
lock
int
and
out
inc
movb
mov
mov
addb
push
pop
xor
jge
nop
mov
sub
xchg
push
cmp
push
xor
cld
bound
jae
push
mov
xchg
mov
push
ret
mov
add
ds
adc
sbb
inc
shll
sahf
and
loopne
jnp
pushf
mov
or
dec
xchg
xor
cmpsl
jo
adc
lret
fdivrs
cmpsb
lcall
mov
push
mov
lcall
jae
jge
lock
sub
jae
div
jle
mov
xchg
adc
cmp
and
aaa
add
fldcw
sti
sbb
aam
pop
or
mov
mov
std
mov
sbb
mov
xor
je
pop
cmp
sub
cmpb
xor
xor
cmp
mov
add
mov
repnz
je
repnz
fcompl
xchg
leave
out
outsb
sbb
imul
dec
or
mov
scas
inc
mov
sub
or
scas
and
jmp
xchg
jb
mov
jle
lods
inc
addr16
ss
ror
xchg
dec
and
fucomi
jecxz
jnp
enter
jg
mov
sub
cmp
sahf
xor
dec
or
dec
lret
outsl
aas
push
jo
sbb
xor
addr16
sahf
les
xor
xor
repz
mov
add
cs
sub
negb
sbb
hlt
in
call
arpl
insb
lcall
mov
fwait
xchg
imul
addl
std
mov
fld
test
insb
andl
cmpb
push
cltd
inc
dec
cltd
es
lods
add
push
fs
push
aas
in
push
sbb
fs
xorl
cmpsb
enter
clc
lahf
xchg
fimuls
int3
or
pop
cmp
jno
clc
adc
dec
sub
add
fistps
add
movsl
cwtl
push
pop
xor
mov
out
fs
jne
aam
push
pop
test
pop
mov
nop
mov
jne
mov
and
stc
out
cmpsb
xorl
jo
stos
cmp
lret
sbb
inc
and
insl
rorl
outsl
push
inc
xor
push
js
pop
xor
sbb
pusha
popf
or
cmp
jno
jb
sbb
and
inc
cmp
hlt
inc
out
fsubl
sub
aad
in
sbb
add
add
push
mov
insl
daa
ljmp
adc
in
pop
push
push
je
mov
xchg
xor
mov
add
loopne
jp
mov
addr16
mov
addl
pop
jo
shlb
xchg
test
nop
daa
xor
stc
imul
jle
loop
mov
push
jae
repnz
mov
cmc
inc
or
push
inc
popf
add
cmp
pop
mov
dec
mov
sti
loopne
push
jl
pop
jb
mov
ss
add
cmp
in
out
cmp
call
mov
mov
rclb
push
shlb
mov
and
xor
hlt
outsl
es
add
add
repz
mov
mov
lcall
cmpsb
sub
icebp
aaa
adc
mov
jo
jno
pusha
xchg
push
add
mov
pop
sahf
out
cld
mov
dec
icebp
cltd
mov
dec
add
lock
repz
push
outsb
aad
push
ds
fwait
sub
push
xor
cli
or
jbe
adc
lret
ret
test
loope
xor
out
clc
popf
aad
xchg
lahf
mov
inc
sub
sti
cmp
mov
xchg
xor
loopne
ss
push
test
decb
sub
ret
pop
cmpsb
ds
inc
cli
fidivrl
je
add
and
pop
shll
fsubr
jecxz
jb
std
jne
pushf
inc
pop
add
aad
into
fiaddl
sub
test
pop
cmp
in
sbb
dec
popf
mulps
push
xor
cmp
call
fisttpl
addr16
notl
jp
dec
sub
in
aas
push
fidivrl
cmp
pop
or
mov
mov
mov
loopne
mov
psubw
dec
mov
mov
fnsave
mov
cmp
insl
out
lret
jmp
push
ljmp
inc
pop
insb
inc
push
cmp
lret
or
aam
or
jb
faddl
out
imul
out
out
xchg
adc
push
xor
add
mov
jno
lods
iret
stc
sbb
rcl
mov
or
js
not
dec
push
cld
mov
inc
or
push
push
sub
cli
int
jae
cmp
add
push
add
push
je
mov
sbb
mov
aaa
mov
lret
inc
cmp
jbe
jns
outsl
data16
jle
icebp
mov
push
rorb
jns
ret
and
in
push
sbb
fptan
pop
gs
clc
sub
lret
adcl
jno
add
or
rolb
xlat
sbb
mov
addl
hlt
cmc
sub
mov
std
int3
movsb
push
cmpsl
push
lock
lret
aas
add
xor
jae
lret
clc
jg
pcmpgtw
mov
lds
repnz
adc
jbe
pop
mov
and
cli
or
data16
out
or
int3
xchg
cmp
inc
dec
icebp
daa
inc
push
mov
sub
gs
mov
push
inc
fisubs
lds
inc
dec
loopne
out
loope
fwait
jb
xchg
and
jge
into
sub
sub
faddl
call
push
dec
inc
gs
push
inc
push
jp
int3
loop
mov
jmp
add
imul
mov
in
in
gs
mov
movsb
push
dec
xor
fcomip
push
dec
dec
outsb
adc
cs
jne
das
or
cmp
stos
jecxz
out
cmpsb
sub
sbb
xchg
jmp
ret
nop
mov
rcll
aam
push
int
sti
pop
mov
xchg
shll
sbb
lcall
test
fs
jae
mov
xor
sbb
sbbl
out
xchg
cs
shufps
int
add
ss
lea
lods
inc
sub
lcall
in
lods
or
mov
insb
inc
fstps
testl
lock
sub
inc
loopne
jnp
inc
mov
cli
addr16
xchg
mov
cmpsl
loope
out
push
jo
pop
xchg
push
dec
outsl
or
xor
or
fmuls
push
add
loopne
test
xlat
test
repz
mov
xor
dec
fdivr
int3
je
ljmp
cld
jmp
es
sub
loope
addb
and
out
fsubl
sbb
test
dec
iret
or
xchg
pcmpeqw
mov
cmp
push
dec
test
lahf
test
stos
or
sbb
rolb
jno
imul
cmpsb
add
sahf
xchg
ds
or
repnz
adc
jg
fidivl
bound
repz
pop
xor
outsb
repnz
pushf
fsub
sub
sar
mov
cmp
xchg
push
pop
lods
call
gs
mov
mov
test
sbb
cmp
test
and
xchg
scas
adc
pop
icebp
cmpsb
add
inc
mov
cmp
jp
fisubl
cs
dec
or
dec
insb
mov
out
xchg
adc
push
ret
or
push
jae
mov
push
fwait
mov
jb
lods
jae
call
add
push
xchg
pop
outsb
jge
enter
and
sahf
or
sub
rclb
cli
sarl
sub
rcrl
mov
inc
mov
or
outsb
adc
pop
jl
in
add
and
sbb
fistpl
addr16
and
lods
lahf
pop
inc
popf
das
cmp
lahf
daa
sub
rorb
daa
js
push
int
les
jg
push
sub
lods
clc
xchg
sub
dec
lahf
sbb
sub
or
bnd
mov
fsubl
cmpb
ds
or
lods
jno
mov
lods
fcompl
in
mov
scas
pop
or
les
push
pop
pop
jmp
lds
cli
mov
push
pminub
cwtl
mov
or
gs
rorl
in
shll
popf
fnstenv
inc
push
scas
mov
pop
sti
or
loopne
cmp
mov
sti
testb
test
clc
dec
cmp
dec
sub
add
push
fdivrs
je
jp
mov
out
mov
subb
push
mov
mov
pop
fildl
xchg
inc
xchg
pop
mov
xchg
dec
ljmp
xlat
xchg
popa
ja
push
imul
int
fsubr
adc
dec
std
les
and
icebp
jnp
imul
sub
pop
les
push
mov
pop
mov
mov
out
fldcw
aaa
pop
sbb
call
daa
idiv
mov
je
out
lret
xchg
lea
dec
pop
imul
sbb
mov
add
fstl
sar
jle
push
or
shl
inc
adc
pop
js
and
pop
outsb
sbb
push
lahf
lock
xor
lock
jge
imull
sbb
mov
lock
out
iret
pop
cmpsl
pop
inc
jae
inc
test
fs
jle
mov
das
dec
dec
mov
das
jnp
pop
shl
into
mov
jbe
arpl
adc
leave
pop
aaa
sbb
inc
daa
cmpl
pop
lahf
cmp
push
cmc
xchg
iret
mov
shl
inc
cmp
pop
pop
cld
test
xorb
cli
xchg
cmp
and
adc
dec
jle
loop
or
mov
add
or
push
mov
ja
mov
insl
pop
dec
stos
push
insl
sbb
dec
pop
xchg
add
adc
adc
in
imul
mov
mov
outsb
inc
andl
ja
sub
aad
cwtl
push
xor
xchg
imul
movsb
fisubl
cmp
sbb
xchg
scas
and
hlt
sub
mov
mov
jb
repz
lea
jge
mov
loopne
pop
mov
loope
outsl
ds
rolb
outsb
fistpl
std
and
call
sub
mov
aad
inc
xchg
jo
lods
xchg
or
enter
pop
adc
adc
inc
test
je
mov
fdivrs
mov
mov
fsts
jne
testb
jle
repz
sbb
sbb
fimuls
pop
xchg
and
cmp
outsl
jo
fadds
sahf
mov
add
pushf
push
xchg
fistl
push
cmp
nop
jbe
xlat
fs
daa
subb
mov
int3
adc
lret
stos
xchg
xor
xor
mov
roll
sahf
test
in
fisttpl
pop
inc
mov
lock
lock
enter
pop
stos
jbe
fldcw
cmpsl
cmc
jecxz
mov
dec
roll
cs
out
test
pop
mov
adc
and
jg
divb
fstpl
xchg
roll
sbb
and
movsl
ffree
mov
int
xchg
pop
inc
adcl
xchg
xchg
add
dec
stos
xor
add
fildl
and
idivb
int
xor
insl
jge
arpl
iret
sarl
jbe
inc
mov
push
popa
je
lods
xor
bound
inc
or
jbe
test
cmpsl
dec
pop
scas
jno
xchg
add
push
rol
outsl
movsl
je
xchg
hlt
hlt
mov
out
adc
inc
dec
dec
imul
movsb
lret
roll
push
clc
aam
jne
sbb
imul
xor
push
mov
cld
mov
xor
cmp
push
cld
popf
jne
imul
push
es
xchg
cmc
cmp
mov
mov
in
mov
sub
mov
in
das
shl
jae
or
ret
or
addr16
pop
insb
mov
aad
jbe
mov
cmp
imul
adc
sbb
pop
mov
ret
scas
leave
push
rcrb
lods
pop
xchg
out
sub
xor
or
push
inc
in
repz
shlb
cltd
rorl
scas
inc
int
adc
pop
sbb
rcrb
dec
loope
mov
sahf
sub
fdivrl
inc
xlat
cs
iret
hlt
mov
cmpsb
dec
jge
jg
popa
sub
jmp
mov
lret
push
xchg
jp
sbb
fdivrp
lcall
outsl
into
pop
mov
xlat
mov
cli
add
mov
roll
aam
mov
jl
sbb
outsb
insb
imul
cmp
aaa
lock
daa
sbb
mov
pop
shl
and
inc
sbb
sbb
fstpl
cmp
cmpsb
add
out
jno
subb
dec
sub
cmp
fcoms
or
cmpsb
dec
inc
mov
inc
dec
xchg
js
add
hlt
mov
mov
addr16
push
sub
loopne
lods
gs
cwtl
mov
push
iret
daa
lock
cmpsb
test
and
cmpsl
mov
aad
mov
imul
push
test
sub
push
mov
inc
mov
lock
and
sub
ret
std
jge
test
jo,pt
sbb
stc
fisubl
jae
mov
lret
push
test
dec
adc
mov
mov
insl
lds
clc
into
push
jle
jb
roll
lods
pop
push
inc
mov
mov
ljmp
dec
push
xchg
js
xor
add
lahf
xorl
cmc
shrl
push
and
cmp
or
cli
add
push
popa
mov
push
clc
gs
leave
xchg
jbe
xor
sub
or
rcll
mov
cmp
loope
xchg
xor
loopne
lods
sbb
in
loope
cltd
cld
xchg
jg
mov
out
aam
inc
or
sub
push
cwtl
ss
mov
stos
fs
cmpsb
lods
sbb
movsl
stos
dec
in
movsl
orb
jns
pop
sarl
or
mov
or
jle
stos
test
subb
mov
lods
insb
mov
cmpsl
je
sbb
mov
push
fdivrp
repz
movsb
addr16
xor
rcrb
inc
outsb
aam
mov
pop
jecxz
sbb
inc
mov
movsl
inc
jmp
push
or
inc
jl
cwtl
cli
popf
and
sbb
orb
rcl
mov
add
mov
cmc
sub
leave
popf
xchg
jbe
scas
sub
mov
inc
xor
sub
and
subb
loope
mov
pop
add
inc
xchg
sbbb
icebp
sub
in
into
arpl
imul
pop
js
jne
ljmp
mov
or
add
mov
mov
shr
insl
in
add
addl
test
or
hlt
xor
pushf
or
xchg
enter
mov
cmp
mov
dec
xor
sub
jl
push
pop
or
add
jnp
xor
push
inc
add
cmpsl
fcompl
cmp
xor
sbb
ret
iret
xchg
sbb
shlb
decb
and
jmp
nop
mov
xor
mov
pop
dec
cwtl
test
out
jle
in
add
pop
or
adcl
faddp
fnstsw
testb
cmp
dec
cmc
sbb
adc
movsb
cmp
xchg
mov
jb
xor
and
shll
and
fcmovnbe
js
adc
mov
sub
rorl
fmuls
jl
hlt
xchg
loopne
xchg
push
push
push
les
outsb
pusha
int3
movsb
pop
jnp
mov
cltd
cmp
dec
fmull
aas
mov
mov
adc
pop
xchg
je
jo
push
arpl
pop
shrb
xor
lods
cmp
dec
in
jg
or
or
pop
pop
add
shll
dec
jo
aaa
mov
mov
push
fdivs
lds
dec
fstpt
sbb
out
adc
pop
rcrb
add
in
inc
dec
mov
insb
xchg
or
add
or
jmp
jns
js
push
movsb
pop
push
or
leave
rolb
cmp
or
lds
adc
lret
inc
rol
sub
test
stos
cli
and
cld
fs
loope
cmp
push
pop
inc
dec
rorl
pop
xchg
jmp
lods
repz
jo
scas
adcl
fsubl
adc
es
test
mov
mov
xchg
mov
into
stos
loope
dec
adc
or
mov
mov
bound
jne
lret
xor
pop
cmpsl
iret
and
scas
push
cmpl
aam
sub
mov
lahf
mov
lcall
xor
dec
mov
ljmp
imul
lods
or
inc
sub
and
repz
out
cmp
scas
cld
xchg
daa
jl
stos
push
dec
mull
pushf
sti
std
imul
fistl
jno
dec
insl
sub
jp
jb
mov
repnz
insl
test
and
pop
lahf
push
lcall
dec
push
call
ja
out
dec
mov
add
mov
in
stos
xchg
aad
push
jae
sarl
add
lcall
cmp
push
popa
adc
sbb
push
in
leave
rcrb
jle
jmp
push
jno
adc
addl
cmp
popa
setnp
notb
dec
lds
int
fisttps
push
dec
mov
hlt
insb
fidivrs
mov
roll
movsl
jle
cmp
arpl
adc
cmpsl
fmul
mov
lret
mov
xchg
out
vmovmskps
idiv
xchg
inc
cmpsb
insl
stos
aaa
sarl
xchg
test
ja
push
in
stos
neg
fucomp
fwait
adc
mov
dec
testl
dec
push
pushf
addr16
fldl2t
push
sbb
jp
ret
rcl
inc
sub
ljmp
push
out
push
ret
inc
shrd
cmp
cmpsb
mov
int
mov
xor
mov
jecxz
xor
popf
fimuls
dec
mov
add
scas
stc
adc
pop
adc
sub
adc
or
pop
mov
dec
pop
jle
pop
cli
aad
aad
dec
fidivs
pop
add
mov
push
dec
xchg
movsl
mov
mov
xor
imul
aam
in
test
add
ja
sbb
ret
gs
movsl
cwtl
iret
mov
xchg
xchg
mov
mov
sbb
xor
sub
mov
mov
arpl
cmpsb
out
cs
cmp
mov
inc
adc
clc
mov
push
dec
in
push
in
jns
or
jg
fcomps
xor
xlat
dec
cmp
mov
cltd
jmp
mov
mov
sarl
les
pop
cmpsb
inc
push
sbb
addr16
cmc
and
nop
push
movsb
pop
inc
out
mov
jg
sbb
and
jecxz
dec
hlt
es
sub
dec
shrl
jbe
mov
clc
and
xchg
jl
pop
add
subl
pop
js
and
jae
adcl
push
xchg
outsl
inc
sti
scas
add
rolb
sbb
or
pop
pushf
popf
xchg
out
fmul
fnstcw
pop
mov
je
push
nop
bound
arpl
pop
mov
out
xor
pop
pop
and
pop
movsb
mov
adc
adc
mov
cmp
out
imul
mov
dec
pop
and
cmp
in
enter
mul
cmp
pusha
test
pop
xchg
dec
cmpsl
and
addr16
jo
rcr
mov
fstps
xchg
in
pop
dec
lret
mov
in
inc
ss
xchg
xchg
ljmp
lahf
gs
aas
sti
dec
out
lods
adc
lods
shlb
stc
cmpsb
or
addl
pop
mov
push
add
push
jmp
xor
push
mov
pusha
dec
mov
push
xchg
das
scas
mov
adc
ja
inc
movsl
dec
cmp
lret
pop
pop
mov
sub
sbb
decb
xor
pop
lods
xorb
mov
or
das
cmpsb
jmp
or
mov
mov
stc
mov
xchg
fs
jle
mov
adc
pusha
inc
lock
or
mov
addr16
fxch
mov
arpl
test
stos
loopne
addr16
movsb
ds
jp
and
fmuls
insb
sbb
xor
xor
stos
in
add
stc
and
scas
or
pop
mov
leave
shl
outsb
mov
int
mov
or
leave
push
cmpsb
cwtl
lahf
mov
jmp
inc
push
push
xchg
inc
sarb
movsl
mov
jne
xor
adc
shll
aam
movsl
sbb
ret
jnp
add
cld
lods
and
jg
fbld
cld
xchg
adc
lahf
xor
and
inc
push
mov
cmp
dec
pop
imul
popa
and
sbb
inc
pop
push
sarl
mov
add
or
jle
jnp
push
jmp
negb
ret
pop
stc
out
lahf
inc
inc
dec
or
enter
add
aam
push
or
rcrl
call
lret
call
and
shll
jbe
sub
xchg
push
sub
xor
shlb
or
aas
stc
stos
cmp
popa
sbb
movsl
jne
pop
jns
sbb
sub
out
cmp
nop
cli
repnz
or
nop
xchg
test
mov
insb
sti
fildll
in
mov
jge
add
stc
repnz
push
adc
fimull
mov
popf
adc
gs
je
jo
dec
test
std
inc
stc
outsb
cmp
fsubs
rep
cmp
sub
mov
jo
mov
nopl
sahf
cmp
xchg
and
inc
xchg
dec
unpckhps
mov
shl
xorb
frstor
pop
into
scas
sahf
sarb
mov
push
arpl
pop
out
and
and
mov
sarb
push
inc
in
std
push
jns
and
nop
pop
lock
sub
icebp
and
fdivr
mov
jg
mov
out
enter
xchg
mov
sbb
test
cmp
pushf
cmp
or
pop
testb
mov
lds
jne
adc
pop
into
ret
js
lea
lret
push
cmpsb
ds
inc
pop
ljmp
add
jge
adc
pop
pusha
cmp
stc
add
stc
aaa
pop
xlat
lret
ret
rolb
inc
mov
fcoml
jecxz
dec
inc
sbb
loop
sub
fiadds
or
popf
cmp
or
ret
pop
pop
add
cmpsb
pop
xorb
xor
stos
shrl
das
cmp
jne
jo
and
pop
sbb
data16
add
cltd
or
xchg
mov
cmpsb
sbb
pop
and
inc
or
jg
cmp
jle
sub
jge,pn
jp
repnz
and
jle
testl
adc
xor
add
jle
sub
dec
inc
jns
cmp
pop
jle
ret
push
pop
repz
jnp
mov
ljmp
pop
out
xor
pushf
cmp
pop
in
test
jne
push
dec
outsl
movsl
dec
cmpsb
pop
pop
mov
ds
xor
mov
inc
pop
or
jp
cmpsb
push
ss
bound
ljmp
pop
or
loopne
add
mov
aas
in
mov
dec
xor
xor
shlb
js
cmp
cwtl
xor
push
adc
loopne
mov
orl
shl
sub
push
ror
sbb
in
inc
pop
mov
stos
add
cmc
orb
enter
inc
push
jmp
mov
fisubrs
loope
xchg
imul
shll
addr16
dec
mov
out
xchg
outsb
mov
push
out
and
movsb
push
mov
je
fnstsw
mov
mov
mov
je
ja
dec
lcall
jno
cmpb
push
testl
in
mov
lahf
pop
jne
test
test
and
xchg
stc
pop
fwait
jno
adc
dec
test
push
xchg
out
or
cltd
pop
sub
push
in
jle
inc
and
push
xchg
ljmp
sbbb
pop
cmp
mov
aam
lods
dec
inc
loope
insb
mov
inc
in
sub
pop
sbb
in
shrd
lcall
js
sub
cmc
adc
ficoms
inc
and
adc
jle
add
jbe
addb
dec
sub
xchg
pop
mov
lret
mov
das
push
sub
push
les
insl
repz
xchg
cmp
stc
xor
adc
aad
cli
out
or
clc
sbbb
das
jne
cs
or
dec
mov
cld
bound
xlat
leave
les
mov
das
adc
popa
stos
sub
mov
mov
stc
sub
inc
xchg
aaa
mov
push
and
lret
pop
cmp
or
mov
xchg
out
cwtl
and
xor
xor
js
hlt
and
push
insb
mov
pushf
and
mov
ret
sub
pusha
cmp
mov
jne
cld
ss
jp
sbb
cmp
lret
mov
pop
sbb
and
nop
daa
call
push
ret
call
daa
clc
adc
pop
les
xor
jne
jo
jae
clc
ljmp
sbbb
sbb
fwait
enter
insl
popf
popf
cmc
cmp
addl
or
jae
cmp
and
cmp
xchg
loope
sbb
out
lea
lahf
out
jno
cmp
daa
pusha
fbld
cmp
jp
inc
push
xchg
mov
and
lods
xor
mull
stc
xchg
sbb
jbe
test
out
bound
in
pop
pop
movsb
xor
aaa
fisubrs
rclb
or
jae
and
mov
aad
mov
sub
hlt
dec
sub
dec
inc
ss
pushf
xchg
subl
mov
push
jbe
sbb
fldcw
xlat
add
xchg
scas
out
out
add
cmp
lock
cmc
add
orb
jo
fdivr
dec
adc
pop
mov
sub
jl
in
cld
cmp
push
pushf
push
cs
jo
jne
imul
mov
mov
or
arpl
push
add
sbbb
sti
mov
clc
fidivrs
mov
call
mov
push
push
jae
ficomps
pop
inc
jg
dec
cmpsb
stos
movsl
or
jbe
cmp
mov
and
outsb
shlb
cmpsl
mov
mov
lods
lods
cmp
fildl
and
pop
and
insl
fnstcw
push
xorb
cmc
sub
jo
imul
dec
mull
fstpt
int
mov
inc
sub
mov
test
pop
ja
dec
pusha
movsb
jg
std
sub
pop
adcl
fdivs
dec
cmp
les
push
addr16
sbb
cmp
jbe
scas
lods
mov
jae
fwait
aad
out
scas
xchg
mov
inc
sbb
fisttpl
adc
mov
pop
xor
push
jl
lods
xchg
xchg
in
leave
aad
push
jp
xor
mov
fwait
idivb
xchg
xor
inc
pop
push
repz
fimuls
inc
inc
sbb
xchg
cmp
add
xor
xchg
mov
shrl
push
out
icebp
adc
xor
loop
lods
mov
mov
aad
dec
popf
test
xor
bound
mov
add
test
stc
lahf
cmp
adc
scas
imul
loope
mov
cmpsb
shrl
bound
cmpsl
jecxz
and
xchg
sbb
lcall
jne
insb
push
iret
push
cli
mov
setbe
shlb
adc
shlb
das
enter
pop
xchg
cli
in
cwtl
ret
cmp
mov
add
cmp
sub
add
sbb
js
sbbb
xchg
mov
loop
xchg
ds
mov
xchg
xor
out
leave
adc
shll
ret
lock
loop
adc
in
xor
mov
push
mov
ret
jbe
xor
sbb
jnp
jl,pn
daa
scas
data16
xor
mov
and
add
inc
push
and
nop
inc
popf
push
popf
pop
mov
dec
dec
cmp
mov
or
sbb
cmp
push
mov
call
push
sahf
int
and
xchg
sbb
sbb
add
push
mov
in
daa
sub
inc
pusha
mov
cmp
push
push
mov
icebp
dec
stos
and
out
jl
push
jne
jno
jno
push
xchg
and
xchg
in
and
repz
shr
movb
dec
aaa
or
cmpsb
stc
cmp
pop
xchg
mov
nop
jnp
orb
cmp
ret
pop
adc
push
pop
sub
mov
sub
inc
and
sbb
lods
cmp
xor
and
push
icebp
outsb
popf
jo
adc
clc
pop
inc
arpl
fsub
sub
fmull
pop
xchg
andl
add
mov
out
negb
mov
dec
scas
mov
insb
int
das
dec
bnd
sub
and
lds
mov
out
push
js
jnp
sbb
push
ljmp
dec
sbb
popa
or
sbb
add
icebp
int3
mov
inc
cltd
jns
pop
jo
repnz
in
sti
mov
mov
cmp
push
add
inc
cmpsb
faddl
jl
or
adcl
aaa
jae
jle
roll
in
cmpsl
setne
lods
push
mov
popa
mov
sbb
xor
testb
mov
out
fisubrs
in
int3
add
pop
adc
test
leave
and
cld
outsl
test
xor
jns
js
xor
in
pop
lahf
aas
push
popa
lods
clc
repnz
push
inc
divb
sub
xchg
jo,pn
inc
jb
mov
das
push
enter
addr16
xchg
jp
lcall
sub
pusha
lods
push
fwait
leave
mov
jp
xor
push
sub
lods
aad
mov
aas
addr16
data16
add
cmpsl
mov
addl
push
mov
xlat
push
jl
aaa
insb
dec
xchg
call
xchg
gs
mov
jb
push
cmp
and
in
mov
xchg
aam
adc
int3
xchg
repz
lcall
add
repz
xchg
and
js
cmpsl
popa
scas
test
jb
das
inc
pop
cmp
push
mov
int
adc
pop
lods
insb
adc
mov
sbb
out
cmpsb
sbb
arpl
pop
out
imul
mov
lret
or
cld
push
mov
sub
test
in
cmpl
popa
test
aaa
jle
add
pop
rcll
sbb
insl
in
dec
cwtl
push
cmp
push
testb
sbb
mov
jge
add
setg
xchg
add
leave
dec
aaa
je
rorb
dec
sub
or
adc
cmp
in
imul
mov
sub
movsb
mov
mov
lahf
lock
sub
jmp
sub
andb
mov
mov
push
mov
pop
pop
jo
xor
pop
cmc
jne
mov
pusha
mov
sub
pop
or
out
shll
arpl
in
xchg
scas
cmp
sbb
mov
and
sub
inc
sub
insl
cmpb
stos
cmpsl
sub
push
cmc
xor
ljmp
pushf
shlb
inc
stc
pop
lods
sbb
mov
add
or
outsl
jp
xchg
push
xchg
lcall
push
adc
xlat
cmpsl
mov
adc
sarl
cmc
leave
cmp
jmp
mov
cmpsl
dec
repnz
repnz
jo
mov
outsb
and
cmp
mov
mov
jae
out
sub
jo
mov
mov
int
sti
movsb
enter
pop
sar
data16
lods
out
lahf
in
out
dec
mov
jmp
lock
lock
add
int3
loop
pop
movsb
push
sbb
sbb
punpckhwd
or
mov
aam
ficoms
add
jle
pusha
fcmovu
sti
adc
popa
scas
shrb
mov
in
mov
iret
dec
push
xchg
pop
mov
fwait
sub
pop
clc
mov
push
add
mov
pop
and
pop
shlb
jecxz
mov
scas
push
add
movsb
xor
in
orb
movsb
int3
div
add
out
lods
in
xor
sub
sahf
cmp
add
dec
in
aad
ffreep
mov
loop
subl
out
inc
iret
mov
decl
arpl
xchg
jle
dec
popf
xor
add
push
mov
push
pushf
and
sbb
mov
pop
addl
add
mov
pop
dec
mov
loop
add
das
cli
jge
fdivrl
mov
adc
out
push
scas
xrelease
fldenv
stc
xchg
jle
insl
sbb
mov
leave
inc
jle
jmp
clc
xlat
repz
std
aad
pop
add
mov
inc
pop
pop
or
scas
mov
xor
mov
inc
mov
mov
sahf
push
xchg
bound
fstpt
lahf
fwait
jnp
hlt
je
rolb
mov
hlt
rclb
mov
loope
shrb
push
loope
hlt
add
cmp
dec
movsb
es
inc
mov
sarl
xor
sbb
clc
je
xchg
mov
leave
mov
into
push
push
add
hlt
push
mov
sub
push
aaa
push
cwtl
cmpsl
das
or
mov
daa
mov
or
subb
stos
pop
xchg
aaa
imul
imul
sbb
shll
out
xor
and
loope
jle
push
jnp
data16
leave
mov
pop
push
push
jb
inc
nop
and
push
cli
loop
xorb
dec
cs
jns
push
mov
inc
xchg
xor
cmp
or
mov
aad
aam
xor
popa
cmpsb
sahf
faddl
and
popa
mov
iret
pusha
inc
jbe
sub
repz
out
arpl
jns
mov
add
pop
loopne
nop
fcomps
cwtl
pusha
mov
cltd
iret
mov
cwtl
out
das
and
xchg
ret
mov
bound
rorb
pop
jg
inc
addr16
fdivrl
mov
xchg
stos
sar
xchg
lea
sbb
xchg
pop
mov
dec
sub
cs
jb
mov
int
mov
sub
mov
pop
push
and
mov
psubsb
aaa
out
sub
dec
jge
cmp
clc
push
jo
rclb
outsl
sub
shrl
pop
shlb
cmp
dec
jg
aas
jmp
xchg
fs
add
push
test
dec
pop
idiv
mov
test
sbb
fcoms
cltd
mov
int
lods
sbb
inc
sub
dec
mov
dec
pusha
lahf
jne
sub
xor
lret
into
push
jnp
aam
shll
jne
lods
push
push
loopne
cmp
movsl
mov
popa
sub
xor
adc
into
jecxz
lret
int
jb
imul
inc
popa
aad
pop
cmp
dec
es
mov
xchg
popa
push
adc
xlat
pop
pop
shlb
les
daa
and
in
call
into
sbb
cmpsl
mov
pop
xor
xor
stc
xchg
rclb
sti
adc
test
ss
repz
addl
mov
push
daa
out
jp
rorb
insl
mov
mov
cmp
sub
in
nop
testb
cmpsb
sbb
add
mov
cvttps2pi
cmp
negb
insl
pop
xor
mov
lcall
sub
xchg
call
stc
das
ss
sbb
sbb
sub
pusha
popa
jno
push
push
ret
jo
adc
xchg
dec
aaa
fcomps
pop
lret
mov
movsl
pop
stos
sbbb
out
dec
outsl
jbe
imul
xchg
dec
sbb
nop
mov
fcoms
pop
or
iret
push
mov
xchg
add
mov
sub
movsl
loopne
scas
adc
jge
jo
in
loopne
ret
and
sub
int3
inc
outsb
repnz
cmp
sbb
iret
sbb
mov
mov
sub
adc
inc
pop
mov
cmpsl
pop
add
pop
cmpsl
and
or
cmp
hlt
mov
icebp
test
pop
in
or
push
sub
out
adc
imul
or
or
push
and
mov
nop
pop
sub
cs
or
in
rcll
xchg
jns
and
mov
and
inc
adc
and
push
xchg
jb
into
pop
push
fs
mov
and
push
leave
dec
ljmp
jmp
xchg
push
jo
call
jp
clc
cmpsl
adc
int3
adc
jno
scas
pop
fmul
cmp
hlt
scas
xor
cli
mov
mov
jl
repnz
xchg
mov
and
xchg
popa
loope
and
cli
fldenv
mov
imul
fnstenv
fadds
scas
xor
pop
shl
sub
xor
pop
and
lods
or
cld
and
in
push
neg
orb
mov
int
loop
mov
lahf
popa
addr16
inc
pop
sbb
int3
les
mov
ljmp
hlt
mov
or
xchg
dec
sub
imul
pop
and
mov
push
movsl
icebp
add
ret
mov
sub
je
jle
jle
xor
unpcklps
xchg
popa
cmc
adc
dec
cmp
cmp
dec
mov
cltd
mov
xchg
xchg
hlt
in
lds
sti
lahf
push
andb
xor
dec
xor
je
into
or
mov
es
add
xchg
in
leave
pop
pop
roll
adc
mov
mov
push
inc
sarb
xor
mov
mov
fildl
imul
outsl
cwtl
cmpl
mov
mov
js
mov
aas
sub
and
dec
pusha
and
lods
test
jne
mov
insb
add
lock
lea
xchg
sbb
shll
dec
lahf
movsl
sbb
xchg
into
repz
into
and
adc
rorb
lods
jae
mov
scas
cli
ret
fldcw
and
leave
negl
and
arpl
cmp
addr16
push
daa
stc
loope
lret
stc
or
psubw
and
imul
mov
inc
sub
inc
sbb
mov
js
cli
jae
mov
push
popa
adc
insl
inc
xchg
inc
stos
xor
aam
out
ficomps
or
mov
push
cli
call
lods
push
adc
sbb
sub
mov
xor
incl
sbb
sahf
and
cwtl
or
mov
roll
jmp
cmpsb
mov
psrld
dec
es
push
in
test
mov
dec
mov
mov
add
ljmp
bnd
sahf
lea
stc
fnstenv
sbb
imul
andb
lods
outsl
testb
sar
jge
leave
push
je
cmc
xor
popf
sbb
jo
ret
push
lods
dec
add
lods
adc
movsl
test
push
mov
sub
xchg
int3
dec
jnp
jl
and
push
pop
mov
scas
gs
or
mov
dec
pop
mov
add
ljmp
cmp
sbb
out
shrb
xor
mov
stos
cmp
rcr
and
jmp
ret
push
mov
pop
sbb
xor
adc
push
mov
push
fisubl
pusha
mov
push
ss
pop
dec
xchg
fnstsw
std
dec
outsl
mov
outsl
push
xchg
cld
fnstcw
jecxz
test
loopne
cwtl
mov
cmpsl
adc
daa
jno
sbb
mov
jg
fwait
mov
jne
xchg
sub
mov
dec
lahf
mov
imul
cwtl
sahf
push
dec
rclb
push
enter
xlat
ret
pop
rclb
stos
mov
sbb
cs
push
dec
in
dec
sbb
or
cmp
loop
andb
fnstsw
cltd
jnp
mov
inc
ja
push
mov
loop
cmpsl
jno
cmp
add
sub
mull
bound
jge
jbe
dec
sub
ficoml
sti
lret
lods
pop
aam
ret
mov
clc
mov
add
or
push
insb
shrl
adc
lret
ret
je
mov
or
xchg
push
arpl
cltd
dec
ss
mov
mov
push
icebp
fstpl
cmp
sub
mov
push
inc
dec
adc
mov
sti
ljmp
iret
mov
push
outsl
enter
jns
fs
int3
inc
int3
adc
fidivrl
jbe
push
push
xchg
xchg
je
mov
push
mov
std
fs
pushf
stos
pop
push
cmpsb
xchg
or
arpl
sbb
mov
lret
mov
xorl
or
xchg
dec
sub
pop
xor
pop
mov
mov
xchg
push
and
icebp
ret
sti
insb
lea
pop
xor
imul
js
or
cmpsl
je
andb
or
and
cmp
jge
or
inc
imul
adc
fnstsw
lret
push
cs
fs
ficompl
mov
orb
js
xchg
popf
into
inc
jno
inc
or
int3
push
xlat
ffreep
ja
mov
bound
sbb
mov
push
lods
add
mov
push
stc
cmpsb
jns
adc
out
lock
dec
mov
and
sbb
mov
lods
stos
mov
clc
sahf
mov
shll
jae
xor
int3
mov
jo
inc
fsub
in
xchg
push
jle
mov
int
mov
movsl
mov
les
dec
sbb
dec
xchg
mov
push
jg
mov
push
xchg
bound
add
into
mov
and
gs
dec
sbb
test
and
sub
and
lock
sbb
and
push
cwtl
pop
sbb
mov
mov
mov
out
mov
movsb
cmp
push
clc
pop
pop
mov
adc
xchg
mulb
jno
popf
sti
push
scas
cmc
js
cs
iret
shlb
shll
sbb
cli
sbb
inc
push
repnz
and
jle
iret
in
push
mov
les
pop
sub
xlat
sahf
out
popf
lfs
inc
scas
xchg
ret
sub
inc
xor
sbb
adc
jp
push
xorb
and
lea
mov
clc
popf
xchg
cmc
sbb
rorl
scas
subl
mov
cli
in
mov
mov
mov
scas
and
gs
cli
scas
into
out
pop
inc
xor
adc
jg
mov
mov
xchg
scas
repnz
daa
stos
pop
mov
popa
jle
push
pop
mov
into
mov
and
mov
jae
sbb
in
fdiv
cmp
mov
push
fistl
fsubrs
adc
mov
repnz
mov
jmp
in
mov
loopne
push
roll
cmpl
xor
sbb
xor
outsl
jbe
pop
inc
lcall
sbb
or
adc
pop
adc
mov
pop
mov
dec
xor
pop
sbb
inc
mov
mov
pushf
pushf
scas
sub
add
aaa
fimull
pop
bound
cmp
inc
sbb
sub
mov
cmp
jmp
cmpsb
iret
inc
insl
loope
clc
pop
mov
or
andl
inc
movsb
xchg
and
mov
mov
test
add
or
shlb
out
fs
addr16
mov
and
inc
pop
jp
fdivrl
sbb
xor
mov
jae
xor
inc
push
and
mov
and
imul
cmp
push
sub
jmp
data16
pop
push
in
mov
fistl
lcall
lret
jmp
dec
mov
mov
pop
lahf
test
mov
out
add
in
lods
mov
inc
lret
fs
mov
adc
and
adc
cmp
cmpsb
js
xchg
mov
push
mov
mov
stos
out
xchg
sub
sub
push
test
jp
ret
ljmp
mov
inc
shlb
sbb
or
add
test
xor
sbb
sub
in
xchg
xchg
iret
xchg
mov
add
js
mov
insb
shll
jecxz
pop
inc
push
xchg
mov
sbb
test
sbb
jge
out
push
cltd
lcall
inc
fildll
test
xchg
dec
icebp
iret
dec
cmpsb
dec
mov
or
dec
cs
dec
dec
mov
mov
sbbl
pop
jno
cmp
xchg
shll
jae
xor
stos
and
push
push
and
inc
add
jge
imul
mov
dec
imul
mov
xchg
mov
push
jns
sbb
jb
loopne
popa
mov
xchg
cli
outsl
inc
push
sub
popf
pop
scas
xor
jmp
xchg
lods
mov
ss
fwait
ss
push
int3
mov
mov
lock
cmpsl
insb
punpcklbw
out
cmp
push
sahf
or
cld
jo
fcmovbe
dec
aam
pop
call
or
scas
imul
add
add
inc
cwtl
mov
scas
sahf
mov
js
inc
sbb
cmc
or
mov
cli
lock
adc
mov
lds
add
xlat
push
lret
mov
jbe
sub
push
adc
xor
out
cmpsl
cmp
loop
xor
fisubl
loopne
adc
call
ds
mov
loopne
mov
loop
mov
jmp
xor
mov
push
aaa
scas
iret
fsubrs
fs
xchg
mov
push
dec
fildl
es
jne
cmp
seto
jge
pop
xor
adc
mov
in
lcall
loopne
int3
repz
jbe
and
xor
in
jmp
je
mov
cwtl
shl
ret
jecxz
call
test
into
adc
stos
and
add
loope
mov
shll
inc
pop
push
je
mov
or
pusha
jbe
sub
xchg
mov
bnd
mov
loop
xchg
mov
pop
pop
add
adc
repz
stos
mov
stos
pusha
insb
in
mov
inc
jge
xchg
je
pop
mov
pop
cli
fisubrs
mov
stos
and
stc
xor
mov
stos
push
imul
xchg
fidivrs
dec
push
adc
add
cmp
push
int
xchg
lds
inc
rcrb
pusha
inc
mov
jle
int
sub
cmp
mov
test
sbb
sub
xchg
sbb
mov
mov
and
rolb
cmovle
scas
ds
int3
mov
mov
xor
sub
aam
test
mov
lods
pusha
stc
clc
cmp
cmp
sbb
mov
rcrl
fiaddl
rolb
hlt
rorl
jle
or
mov
mov
imul
push
mov
test
cmp
xchg
pop
and
cmp
insl
aaa
arpl
jbe
and
std
jl
jge
cmp
xlat
adc
push
je
das
jg
stc
dec
push
mov
or
andl
int
mov
cltd
lahf
xchg
push
push
sub
stos
mov
jge
in
les
xchg
push
pushf
add
test
push
adc
sbb
dec
loop
cmpb
inc
cmp
insl
push
rcrl
xchg
arpl
sub
jmp
cmp
push
gs
inc
adc
rcr
sub
add
cmc
lods
push
or
and
xchg
sub
jl
push
dec
jecxz
stos
inc
std
push
addl
or
pop
adc
sbb
dec
push
mov
sarb
mov
push
jp
jb
cli
nop
outsl
cld
mov
inc
mov
dec
aas
add
shrl
jmp
lods
sbb
leave
adc
mov
push
push
mov
divb
xchg
push
adc
dec
fnstenv
repnz
divl
shlb
jle
jp
push
mov
mov
inc
pop
jae
fs
ret
or
pop
je
pop
cs
jnp
test
cltd
cmp
push
sbb
shll
mov
xchg
inc
xor
mov
jg
test
push
or
insb
mov
aam
inc
lea
das
mov
shrl
cmpsb
sarl
inc
cmp
jne
lods
cld
pop
cmc
push
push
sbb
fucomip
call
jmp
orb
mov
xchg
lcall
dec
xchg
mov
mov
jns
dec
fiadds
cmp
pop
xchg
ret
dec
sbb
lods
and
je
lcall
dec
cld
leave
add
jl
jbe
scas
mov
lahf
mov
push
cmp
rclb
xor
push
lock
push
mov
shrb
repnz
sti
cmc
in
inc
mov
je
leave
pop
add
mov
cwtl
jb
inc
push
sbb
and
or
push
add
movsb
and
clc
sub
add
push
mov
adc
dec
inc
mov
xor
mov
stos
call
inc
cmp
outsl
iret
jg
jp
outsl
or
pop
shll
hlt
mov
inc
lock
sub
fldl
sahf
dec
add
dec
pop
ss
test
popf
xchg
cmc
and
cltd
xchg
dec
pop
into
shr
dec
push
or
push
adc
xor
mov
mov
ja
out
lock
or
sbb
jmp
push
mov
mov
inc
pop
iret
push
scas
inc
lea
dec
pop
stos
in
fsubrl
stc
pop
stos
ss
xor
and
xchg
leave
es
ds
es
sahf
inc
pop
xorb
push
mov
fstl
loop
push
int3
mov
or
jno
push
jnp
lahf
sub
test
push
testl
leave
mov
ljmp
idiv
push
sbb
cmp
mov
nop
out
push
mov
mov
or
out
sahf
push
inc
popf
sub
lods
push
mov
jmp
jp
inc
jns
sub
inc
and
push
sbb
mov
push
and
xor
fwait
pop
jge
inc
pushf
lret
mov
repz
xchg
out
fisttpll
dec
inc
mov
dec
jae
sub
aam
mov
jg
push
aas
popf
pop
int
add
in
sub
enter
jns
add
xor
out
pop
mov
sub
insb
dec
cmp
push
pop
inc
cmp
mov
nop
into
sub
fsubrp
jl
psubw
pushf
pop
fwait
addr16
insb
mov
popf
push
popf
js
and
push
mov
repz
jbe
rcrb
add
xchg
test
and
fisubl
inc
je
insl
xor
inc
adc
mov
imull
cmc
mov
or
cmp
sar
jmp
shll
pop
adc
add
inc
xchg
rorl
pusha
mov
dec
movsb
or
adc
sub
mov
rcll
in
clc
dec
xor
push
cwtl
daa
ja
fdivl
rorb
pop
mov
jge
add
incl
mov
rorb
adcb
ret
in
sbb
mov
xchg
sub
sti
mov
outsb
test
mov
popa
pop
fmull
movsb
inc
adc
or
jg
iret
push
and
leave
add
push
inc
popf
mov
cmpsb
lods
and
push
xchg
and
fdivrs
fisubs
sub
xor
add
sarl
ja
push
push
inc
adc
push
testb
or
pop
push
rorl
mov
push
mov
mov
push
lahf
ret
push
test
mov
mov
xor
es
mov
inc
loopne
nop
cmp
and
mov
adc
mov
ss
add
xchg
mov
dec
push
movsl
or
mov
pop
loopne
aad
gs
jle
dec
add
jae
imul
mov
mov
fnstsw
lods
mov
pop
sub
aaa
sbb
pop
inc
fsubs
int
test
enter
mov
fstpl
dec
cmc
hlt
or
pop
ds
xor
shrl
cmp
cwtl
mov
fsubrl
xchg
fdivrs
add
sbb
nop
xchg
mov
xchg
dec
sbb
leave
xchg
hlt
dec
imul
insl
mov
mov
mov
adc
mov
mov
cmp
rep
xor
or
mov
sub
cmp
xor
call
sbbb
add
cmp
inc
mov
jg
call
ds
movsb
xchg
cmpsl
enter
repnz
ja
xor
push
fwait
daa
imul
push
xor
bound
mov
movsb
ljmp
jnp
and
add
add
push
fldcw
je
insl
ja
out
or
sub
inc
outsb
andl
stc
mov
fiaddl
insb
lods
aaa
xor
xchg
mov
loopne
decb
mov
mov
lock
mov
push
push
std
mull
lret
pop
jmp
cwtl
test
cld
scas
mov
mov
aam
mov
mov
inc
mov
cmp
pop
push
decb
xchg
jle
xor
clc
scas
push
xor
and
dec
gs
adc
lret
fisttpl
sub
fistpl
and
fucompp
movsb
lods
or
xor
pop
and
cld
aas
cmp
int
aaa
mov
inc
jbe
negl
push
push
sbb
dec
jecxz
or
icebp
or
bound
mov
jg
sub
pop
mov
push
cmp
call
test
cmp
sub
enter
mov
clc
mov
push
xlat
xchg
jp
jnp
fidivrl
bswap
sub
cmp
je
data16
les
fdivl
mov
into
fldcw
jl
jge
cli
mov
lea
mov
insl
insb
mov
aaa
ss
cmp
push
leave
imul
fucomi
nop
hlt
insb
lcall
popa
lea
neg
out
js
push
cs
sub
adc
enter
jae
or
push
push
mov
adc
and
popf
mov
nop
pop
pop
imul
stos
sbbb
pop
mov
pop
into
add
mov
xor
or
mov
das
cld
daa
lds
mov
xor
sti
mov
inc
or
shlb
cli
and
ja
andl
imul
sub
push
mov
mov
or
sub
sbb
scas
push
popa
and
push
mov
mov
or
xor
ds
ficoml
xor
push
mov
ret
call
ret
cs
fwait
add
repnz
inc
stc
xstore-rng
cmpsl
inc
jns
cltd
sub
lret
test
rorl
sub
mov
push
out
scas
sti
lcall
pop
loop
dec
inc
lods
mov
pop
leave
dec
or
rcrl
in
rol
div
dec
cld
cmp
xchg
outsb
mov
add
cmp
cmpb
imul
adc
push
mov
add
negl
dec
pop
add
lret
in
sbb
hlt
xchg
int3
fprem
mov
xchg
inc
scas
test
sahf
lds
xor
push
xor
ficoms
rcl
dec
orl
int3
sbb
push
daa
sub
push
xor
stos
lcall
out
add
sbb
aam
dec
jmp
in
pop
sub
inc
adc
xchg
loope
mov
mov
xchg
mov
loopne
mov
dec
pushf
test
cmp
loop
pop
aaa
mov
dec
outsb
lea
loopne
inc
fiaddl
sahf
mov
sbb
bound
cmp
leave
pop
mov
ljmp
out
data16
push
mov
pop
les
xor
das
mov
sarb
shll
push
popl
mov
stos
rcl
sub
dec
pop
fnsave
jb
jnp
enter
test
js
hlt
cmp
jne
shrl
enter
jbe
push
jg
xchg
mov
lcall
push
push
cmp
cvttps2pi
and
xor
sarb
rolb
lahf
ja
add
jae
xor
ret
inc
out
lret
xchg
or
fstpl
push
mov
in
dec
cmp
cmp
cmp
fcoms
nop
fdivrs
les
das
outsb
enter
sbb
sbb
arpl
aaa
push
test
dec
sbb
jo
fstl
lea
in
sub
scas
inc
out
add
sub
aad
call
iret
push
fcoml
repz
mov
mov
scas
std
daa
push
scas
lock
and
mov
arpl
dec
cmp
mov
pop
or
aaa
sub
pop
mov
nop
loop
cmp
rolb
fists
xchg
or
push
cmpsb
icebp
sbb
filds
add
push
shl
fbstp
lahf
data16
push
hlt
lcall
je
mov
cli
cmp
addr16
bound
jno
adc
xor
mov
icebp
in
xchg
enter
xchg
mov
pop
mov
por
cwtl
ret
dec
inc
sti
jbe
xlat
pop
cmpsl
stc
xor
das
sub
xchg
out
cmpsb
xchg
mov
aas
cmp
nop
aas
cld
jg
fs
fadds
je
shrb
mov
das
sbb
pushf
addr16
xor
dec
js
pop
dec
jne
call
movl
dec
pop
adc
fwait
popa
and
mov
mov
jmp
addb
insb
repnz
test
cmpsb
scas
sqrtps
aaa
adc
lea
push
adc
xlat
xor
stos
dec
js
and
inc
lret
aad
jno
sub
adc
fisubs
cwtl
stos
inc
sub
and
loop
popf
jp,pn
outsb
cld
sti
test
cmp
sub
or
outsl
inc
in
sti
mov
int
call
repz
arpl
inc
adc
and
int3
xor
push
iret
jo
mov
imul
and
add
leave
pop
fimuls
jg
mov
rcrl
mov
inc
leave
xchg
cmp
lods
jp
sbb
cltd
adc
cmpsb
icebp
push
xchg
push
sarb
push
cs
lds
dec
mov
adc
call
add
stc
or
fisubrs
jb
cmc
leave
inc
push
arpl
std
mov
fildll
incb
adc
call
xchg
adc
jmp
int3
hlt
adc
dec
cmp
mov
sbb
bound
lahf
cltd
addb
xchg
and
mov
popa
sub
xchg
hlt
test
icebp
scas
repnz
dec
add
adc
std
pop
adc
test
repz
sub
nop
ret
rorb
inc
pop
test
xor
ret
std
and
pop
fcmovb
cmp
in
mov
xchg
push
aaa
pop
cmp
fcomps
dec
arpl
add
cmp
jecxz
push
mov
push
pop
mov
icebp
mov
mov
mov
js
notl
push
dec
fildl
cmp
add
mov
inc
lret
mov
cmp
pop
jecxz
sub
mov
ljmp
mov
pop
xchg
lret
xchg
lcall
movsl
js
aas
repnz
jp
xchg
mov
jns
clc
ljmp
dec
and
or
cmp
mov
in
es
push
sbb
js
out
or
inc
mov
inc
gs
adc
add
mov
dec
lock
xchg
in
cmp
mov
mov
add
pop
loop
mov
ret
pop
jmp
insl
bound
sbb
rclb
dec
addr16
popf
in
cld
aaa
and
jae
imul
inc
pop
sbb
rorl
lods
imul
mov
fnstenv
daa
scas
or
push
insb
xchg
inc
lea
mov
sbb
sbb
and
je
out
in
mov
sarl
aaa
xor
and
mov
xchg
fdivs
jecxz
push
adc
xchg
xchg
adc
ret
or
fmull
sub
xorb
cmp
int3
mov
xorb
xor
push
repz
sbb
movsb
imul
mov
mov
lahf
in
cmpsl
inc
loop
mov
in
mov
or
popf
dec
addr16
into
mov
add
loop
add
push
adc
arpl
sub
xchg
cmp
jne
enter
xchg
jge
xlat
imul
mov
insl
jo
xor
cmp
adc
neg
xor
xchg
and
lahf
push
into
xor
mov
test
cmp
sbb
repz
lds
and
std
cmc
pop
fiaddl
cs
je
lods
int3
mov
jns
or
int
dec
pusha
push
sbb
inc
mov
sahf
fidivl
sbb
jmp
xchg
hlt
popa
sub
or
or
xchg
jge
push
xlat
sti
pop
push
loop
mov
jp
repnz
jecxz
test
out
repz
mov
in
jb
ds
into
imulb
sub
lock
scas
sbb
hlt
xchg
fisttps
pop
ja
je
cli
add
pop
inc
cli
mov
pop
xlat
xchg
mov
loope
dec
test
inc
dec
jne
das
rcrl
cs
loope
jmp
aad
cmpsb
and
imul
scas
hlt
insl
pop
mov
adc
pushf
cmp
push
test
and
in
es
notl
push
pushl
pop
xchg
int3
sar
mov
mov
cmp
call
das
rcrl
jp
xor
ljmp
push
or
mov
mov
insl
orl
cmpl
fnsave
fdivr
xchg
in
sub
shr
hlt
mov
mov
xchg
je
loopne
arpl
sbb
push
mull
movb
pminub
shll
call
dec
shrd
cli
insl
dec
rorl
shll
ss
shrb
fildl
repz
inc
lds
sbbb
xor
xchg
mov
sub
int3
sub
xchg
and
inc
aam
sub
out
adc
rorl
imulb
xchg
cwtl
add
in
roll
lahf
loope
add
mov
or
rcrl
sti
icebp
sbb
rcl
sti
jp
push
mov
je
cwtl
icebp
dec
mov
and
ret
movsb
push
in
das
jo
hlt
mov
jae
push
sub
leave
add
xchg
test
dec
loopne
in
cmp
mov
xchg
dec
testb
stos
xchg
movsb
leave
movsl
or
push
sbb
pop
mov
shrl
jae
add
aam
ds
pop
pop
or
cwtl
and
int
ret
xor
int
scas
repz
dec
and
adc
xchg
mov
jg
loopne
mov
js
arpl
inc
daa
jg
shrl
sbb
pop
and
dec
push
jae
mov
bound
or
adc
pop
adc
mov
shl
jo
scas
in
sbb
sub
sbb
mov
sbb
and
testb
fiadds
lods
cmpsb
dec
xchg
xor
pop
jns
je
loope
or
int
xor
add
sub
cmpsb
shrb
and
mov
add
inc
repz
adc
jb
test
aaa
or
dec
push
mov
out
movsb
xor
inc
and
mov
call
les
jl
cmpsb
xlat
pop
pusha
mov
pop
decl
aas
add
enter
dec
jb
enter
rorb
sahf
and
push
sbb
adc
mov
icebp
outsl
inc
out
add
dec
push
add
popa
je
lret
and
sub
and
sub
stos
push
xor
out
sbb
popl
push
outsl
jae
nop
aam
icebp
fidivl
adc
jecxz
push
test
ja
xlat
push
test
sbb
push
mov
daa
and
pop
ret
mov
push
fsts
jge
sub
fwait
pop
fldl2e
cs
and
pop
fcmovne
xchg
add
xor
or
sgdtl
jge
xlat
cmpsl
in
inc
lds
leave
push
and
stos
jno
sub
lahf
frstor
in
push
jns
shll
leave
sbb
inc
inc
movsl
loop
notl
or
xor
xor
test
xchg
mov
adc
js
cld
enter
mov
mov
adc
pop
ja
jnp
scas
mov
mov
push
inc
es
ficomps
push
jb
pop
mov
jecxz
jecxz
call
popa
xchg
xchg
or
jno
notb
js
or
jecxz
cmp
add
jns
push
push
sub
call
repz
jbe,pn
and
cwtl
rcrl
jg
xchg
sahf
cltd
testb
push
xor
outsb
in
and
xchg
adc
sbb
stos
mov
setno
shl
cmp
scas
fidivrs
enter
shl
sub
int3
fisubl
mov
notl
out
sbb
mov
call
test
in
pusha
jb
or
sub
cmp
lcall
sbb
je
cli
je
cld
add
lock
enter
push
adc
ret
addb
ja
ret
cmpsl
dec
loope
pusha
dec
mov
dec
pop
stos
push
push
jecxz
into
push
mov
mov
fwait
fs
add
cmp
inc
cmpsb
mov
xchg
jb
rcl
jge
xor
repnz
sti
push
fsubs
xchg
sbb
or
icebp
mov
arpl
fldt
sbb
inc
imul
pop
adc
or
add
and
addr16
gs
stos
mov
adc
imul
sbb
cs
iret
outsl
out
jnp
add
je
in
jle
aam
mov
mov
mov
lods
and
add
pop
cs
lods
or
xor
decb
dec
out
sar
xchg
dec
pop
cmp
xor
pop
imul
vfrczps
in
bswap
mov
sub
ds
fstps
jecxz
lods
test
out
call
fisttps
leave
lods
xchg
jl
ja
jle
imul
mov
mov
loopne
sub
pop
mov
shll
lahf
movsl
dec
enter
imul
xchg
inc
mov
adc
jmp
aam
xor
sub
rcll
sub
subb
mov
ret
xor
or
push
sbb
mov
mov
dec
pop
add
push
push
xchg
and
std
sub
jl
insb
cmpl
mov
pop
and
jmp
iret
repz
lea
push
test
push
fistpl
mov
push
cmpsl
pusha
xlat
jno
xchg
testl
mov
xchg
movsl
sub
lods
push
js
dec
out
inc
add
jnp
frstor
mov
xor
pop
loope
pop
imul
subb
cli
and
addr16
fidivrl
std
inc
pop
xor
sub
pop
xchg
jg
fistl
jge
outsl
lcall
jae
cmc
mov
push
and
and
scas
int3
pop
or
jg
jbe
adc
and
lock
ror
popa
jne
cwtl
mov
lock
int3
sub
lds
mov
push
mov
xchg
add
repz
push
cmpsb
mov
or
divb
xchg
xchg
imul
push
dec
andl
sbb
push
pop
xor
pop
mov
movsl
pop
pop
insb
mov
inc
adc
dec
xchg
int
jmp
insl
outsl
lret
pop
sbb
cltd
pop
mov
adcb
xchg
jp
adc
orb
mov
test
add
jle
mov
daa
int
dec
mov
arpl
fistps
sbb
in
outsl
or
push
push
das
mov
jecxz
je
sub
add
cmc
xchg
lods
lret
rol
vmread
inc
rorb
and
ja
dec
gs
add
xor
push
cltd
cs
shrl
in
lahf
repnz
fsincos
pop
cmp
push
lds
adc
call
in
sahf
jns
mov
dec
stc
push
and
xchg
mov
sub
stos
xor
mov
mov
fdivr
pmulhuw
push
jae
sti
add
mov
das
roll
fcoml
lret
push
outsl
pop
daa
enter
imul
dec
test
add
dec
test
sti
jne
inc
mov
mov
sub
test
inc
pop
xchg
pop
xchg
pop
aaa
addr16
mov
xchg
mov
cmp
sbb
imul
das
nop
mov
sbb
mov
shr
lahf
dec
dec
test
and
mov
ret
mov
mov
jo
xchg
repnz
xchg
sbb
stc
pop
imul
cmpb
and
std
push
outsb
mov
xchg
xchg
popa
jne
pop
sub
or
subb
outsl
jo
in
inc
mov
xor
push
cmpl
sbb
roll
push
and
ds
std
repnz
inc
loope
test
aam
insl
lock
xchg
mov
inc
mov
fildl
mov
add
lahf
shll
pop
arpl
push
sub
int3
mov
leave
sbb
xor
jbe
js
insb
out
lods
xor
inc
push
scas
cmpsb
hlt
cmp
xor
std
cli
jp
jbe
pop
insb
and
dec
xlat
sti
fwait
mov
daa
xchg
fdivl
fdivp
push
sbb
cmpsb
clc
inc
test
dec
inc
adc
push
testl
loope
sub
jge
sti
negb
jl
jl
cli
jg
icebp
stc
notl
pop
and
push
aad
cli
lods
jg
out
add
push
mov
mov
cmp
mov
jo
push
int3
add
movsb
shlb
test
cmpsl
hlt
push
adc
sbb
daa
push
stos
sbb
imul
or
adc
xor
or
stc
stc
or
xorb
cmp
mov
jnp
sbb
in
jmp
stos
push
jns
jb
adc
jo
xchg
insl
push
test
mov
test
pop
stc
and
adc
mov
fcmovb
pop
and
pop
cwtl
inc
mov
push
dec
insl
pop
mov
adcb
cmp
fs
testl
or
lcall
push
out
lea
mov
imul
push
fildl
popa
sbb
cmp
pop
cmp
cmp
xlat
clc
inc
jg
in
fidivs
dec
jbe
sahf
adc
and
mov
mov
inc
js
mov
ljmp
mov
addl
cmp
fildl
push
xchg
jb
xor
pop
sbb
scas
and
cmp
dec
dec
stos
push
aaa
jbe
mov
xor
ret
lea
pop
mov
sbb
jo
mov
test
jmp
xor
lea
sub
xchg
add
das
ret
pop
in
test
das
or
dec
fucom
iret
inc
fcoml
adc
movsl
leave
add
stos
lret
sub
mov
cmpsb
das
addr16
mov
jmp
or
xor
mov
mov
sbb
inc
push
shlb
push
mov
adc
push
aaa
lods
xchg
call
push
rcr
ja
data16
and
repnz
and
dec
mov
sub
mov
mov
push
into
xor
xor
int3
mov
in
cmpsl
mov
or
mull
clc
lahf
xchg
ljmp
pop
loope
adc
sub
xor
movsb
jle
shll
jp
fbld
jo
xor
mov
movsl
push
mov
adc
lcall
int3
imul
mov
test
call
sub
int
enter
add
inc
jge
mov
fsubp
mov
jbe
fimull
subl
fldcw
xor
xor
fwait
rcrl
aad
movsl
clc
xorl
dec
inc
repz
push
mov
dec
shl
dec
fistpl
and
sbb
mov
out
pushf
xchg
aam
stos
roll
dec
mov
jmp
pop
dec
cwtl
pushf
mov
or
lock
inc
mov
jae
sbb
pop
ljmp
cmp
in
aam
cmp
push
fisttpll
das
or
xchg
cmp
mov
icebp
mov
ret
dec
js
test
pop
add
leave
mov
bound
dec
or
jecxz
mov
pop
add
sbb
in
leave
mov
push
mov
sub
pop
fwait
cld
stc
cs
push
scas
dec
insl
into
inc
add
aad
inc
xchg
data16
lods
inc
pop
loop
cmpsl
mov
stos
fwait
add
mov
xor
stos
push
cltd
dec
mov
cwtl
xchg
mov
xchg
cmp
hlt
cmpsl
mov
inc
popa
sub
inc
xlat
push
stos
sbb
dec
pop
out
jae
jb
fcmovnb
sbb
adc
inc
fbld
rcrl
ljmp
xchg
sbb
shll
inc
cwtl
ja
jmp
jns
xlat
push
xchg
stos
test
push
mov
mov
lods
jae
leave
jbe
push
aaa
xor
adc
lods
dec
das
mov
push
and
pandn
repz
and
inc
stos
or
stos
jb
je
pop
sti
sahf
sub
into
pop
daa
mov
add
out
std
adc
xlat
out
mov
dec
push
fsts
mov
pusha
mov
mov
test
pusha
xchg
hlt
mov
push
dec
pushf
mov
cmp
dec
inc
push
lock
insb
fldcw
test
fsts
xchg
iret
xor
jl
or
lea
cld
insb
js
xor
inc
fmull
pop
push
rcll
sbb
das
scas
loopne
repz
sbb
jnp
sti
pop
push
pop
push
rol
inc
cmp
add
adc
aaa
lods
lock
int3
fimuls
or
sub
int
xor
jp
ja
cld
insl
daa
add
push
add
shrb
add
ret
inc
out
fucomip
mov
das
mov
test
test
aad
sub
sub
dec
dec
test
pop
inc
decb
jns
add
ret
fimuls
mov
ds
idivb
and
fstpt
sub
sbb
out
int
sti
dec
rorb
lds
pop
lods
pop
scas
addr16
icebp
and
sub
and
test
inc
or
fidivl
push
int3
aaa
aaa
xchg
add
inc
mov
in
shll
mov
xchg
lods
cli
pop
test
mov
mov
in
jno
cld
outsb
cmc
mov
fisttps
xchg
inc
pop
mov
pop
pop
jecxz
xchg
jne
push
sti
or
loop
sbb
lret
xchg
add
add
pusha
pusha
dec
movsb
or
es
mov
mov
loopne
out
adc
inc
repz
mov
mov
subb
mov
fisttps
sbbb
aaa
sub
cmp
les
mov
or
mov
xchg
xchg
in
jle
mov
jg
popa
cwtl
clc
mov
mov
in
mov
xor
shrl
mov
push
ljmp
bound
lods
dec
insb
cmp
pusha
sub
inc
jae
inc
andl
out
mov
xchg
mov
inc
ret
ffreep
or
inc
jl
or
ljmp
add
leave
daa
cmp
xchg
adc
ret
dec
mov
js
popa
arpl
dec
je
sbb
adc
mov
lcall
mov
stos
and
add
push
leave
imul
push
or
test
rorb
add
cmc
pop
jl
movsl
mov
ja
add
aam
pop
lgs
sub
rcrl
xchg
push
xor
inc
dec
dec
dec
shr
ss
mov
imul
shll
mov
roll
and
into
sub
add
imul
cmp
icebp
aad
jle
push
fmull
aad
pop
ret
or
movsl
sub
cmp
aam
sub
clc
in
inc
pop
orb
and
nop
xchg
test
xchg
push
bound
into
mov
push
push
xchg
sub
test
idivb
loope
inc
jle
adc
xchg
ficomps
mov
mov
sub
pushf
dec
add
lock
in
sbb
cmc
daa
cmp
push
je
push
movsb
js
xor
icebp
popf
pop
and
push
jo
mov
pop
inc
das
mov
jbe
movsb
mov
sbb
xor
lret
mov
pop
enter
cmp
pusha
jmp
aaa
cmc
imul
inc
adc
add
cmp
and
xor
push
push
mov
or
mov
addr16
js
dec
inc
or
add
loope
mov
fdiv
and
and
repnz
int
test
xchg
test
xchg
sub
pop
inc
mov
mov
or
cmp
mov
ljmp
addr16
ret
lcall
mov
scas
repnz
push
loope
mov
sbb
nop
jmp
test
in
mov
pop
or
cmp
jae
lods
cs
popa
sbb
idivl
inc
test
fwait
and
inc
int
cmp
pop
push
mov
add
push
and
rol
pop
ljmp
cwtl
jb
sti
xchg
xchg
daa
inc
sbb
loope
cld
sub
hlt
and
or
lcall
mov
cmp
add
sbb
in
cmpsl
and
add
lea
rcll
loope
test
cmp
pushf
sti
aad
out
add
flds
mov
push
jg
xchg
mov
mov
mov
add
cmc
mov
push
hlt
aad
std
jecxz
sub
add
lcall
into
fmull
movsb
pop
ret
add
xchg
sti
jl
pushf
mov
lods
mov
mov
cmpl
leave
adc
aam
xchg
nop
jo
lahf
ret
xor
sti
fwait
and
jmp
test
sahf
orl
and
and
daa
bound
xor
xchg
inc
dec
call
clc
pop
addl
mov
pop
or
inc
addr16
into
imul
ret
into
fstl
mov
sbb
pop
sub
mov
testb
je
mov
adc
cli
aad
fstl
dec
call
and
xchg
adc
xor
push
mov
lock
std
jge
stc
mov
sub
pop
mov
push
add
mov
xchg
add
xorb
imul
idivl
push
scas
dec
push
es
stos
aam
imul
inc
aam
hlt
es
int
adc
cmpsl
mov
negl
sbb
testb
cmp
fdivrp
xor
cltd
repz
mov
rolb
adc
mov
xchg
dec
sahf
rorl
movsl
cmc
insb
xlat
and
es
sbb
std
lret
and
fidivrs
cwtl
mov
pop
in
scas
lods
scas
jbe
fiadds
dec
jg
pop
push
pop
test
xchg
jmp
add
movsb
ret
divl
cmp
dec
lret
scas
jbe
aas
xchg
or
add
xchg
cmp
stos
fisubrs
push
fs
cmp
clc
ror
jne
shl
ss
adc
ss
push
and
cmp
jl
incb
enter
rclb
ret
cmp
test
orps
fistpll
pop
repz
out
lock
lds
aam
push
mov
bound
or
push
dec
and
xchg
ss
bound
sbb
pop
add
jle
push
jg
push
xor
push
fwait
into
xor
xchg
je
cmp
dec
push
aas
lcall
lret
cltd
push
xor
gs
pop
sub
cmp
cmpsb
fwait
cmp
sarb
adc
mul
lods
add
push
xchg
arpl
push
fstpt
mov
mov
repnz
test
ja
dec
or
dec
out
ljmp
mov
jmp
test
lds
jp
imul
xor
and
and
icebp
jle
pop
mov
repz
adc
scas
das
daa
enter
xor
cmp
cmp
stos
aam
adcb
pop
sbb
bound
mov
dec
je
in
mov
xor
nop
aaa
pop
sub
mov
loope
or
pop
in
hlt
push
cwtl
pop
dec
test
out
imul
or
icebp
scas
ret
pop
movsl
cltd
daa
aaa
or
fsave
arpl
setns
push
es
mov
cmp
inc
and
push
mov
cmp
xchg
mov
ljmp
outsb
inc
sbb
lahf
or
enter
mov
mov
xchg
out
mov
or
xor
dec
push
fistpll
out
cmp
jmp
xchg
sbb
pusha
or
scas
adc
or
sahf
int
movsl
mov
push
mul
jnp
mov
clc
arpl
mov
lds
mov
sub
cli
rcrl
subb
lcall
mov
and
std
pushf
movsl
or
inc
mov
push
in
cmp
hlt
jle
js
lods
fisubl
shrd
mov
push
jmp
push
xorb
xchg
dec
mov
add
mov
pusha
sub
loopne
scas
push
fnstenv
adc
mov
lcall
xorl
arpl
xor
pop
repnz
imul
pushf
sbb
orb
pop
xchg
repz
cmpsl
dec
shll
cmp
jns
mov
out
cmpsb
mov
rorl
pop
inc
push
add
in
jp
dec
fnstsw
xor
xchg
dec
and
sbb
fnstcw
fisttpl
cmc
test
mov
int3
pushf
or
mov
mov
test
or
sbb
cmc
cmp
xor
es
lds
movhps
inc
push
mov
jle
add
sub
and
mov
aam
movsl
sbbb
icebp
cmc
sti
dec
jne
jae
push
data16
je
in
xchg
push
push
or
sub
pusha
jmp
xor
mov
lcall
stc
and
jecxz
divb
mov
addl
or
fcompl
fimuls
loopne
rclb
dec
bound
lret
aaa
pop
ret
out
pushf
hlt
jmp
cmp
loope
inc
jb,pt
cmpl
mov
lret
xchg
jle
inc
push
xlat
call
stos
daa
or
push
in
sub
arpl
sub
sub
les
mov
cltd
mov
push
out
imul
out
jb
iret
jl
add
cmp
push
movsb
lock
push
insb
mov
xchg
lock
push
adc
mov
pushf
xchg
xchg
loopne
testb
movsb
xchg
push
testb
fisttpll
inc
pop
mov
pop
mov
and
daa
or
mov
mov
ds
fstpl
call
shlb
mov
xor
add
xchg
loop
jmp
mov
mov
fsubs
insl
imul
push
inc
add
pop
fcmove
mov
xchg
pushf
add
adc
movsb
insl
clts
cmc
add
ret
faddp
cltd
mov
loop
xchg
addr16
out
icebp
aaa
movsl
sbbl
lahf
adc
mov
outsb
lea
jg
adc
push
dec
or
pop
dec
shlb
mov
mov
xor
fcomps
mov
mov
imul
mov
add
add
aam
push
jle
ja
stos
cmp
jo
xchg
inc
sbb
mov
aaa
mov
lea
jo
testb
cmp
hlt
mov
lds
inc
dec
rol
xchg
mov
and
add
sbbb
sti
call
lahf
and
add
mov
cwtl
cmc
shrb
and
pusha
mov
xor
movsb
push
in
bound
andb
aad
jnp
imul
jmp
das
dec
ret
mov
lods
jb
shl
xchg
in
inc
out
in
movsb
clc
push
leave
les
xchg
out
push
repnz
pop
jae
scas
repnz
lods
xor
imul
in
test
mov
inc
push
lea
neg
xor
adc
aam
xchg
idivl
ljmp
cltd
out
jno
jnp
loop
mov
scas
mov
sbb
xor
add
lods
test
jbe
mov
jb
cltd
in
fldcw
push
insl
aas
mov
and
cbtw
bound
jb
divb
imul
inc
fmull
mov
jmp
adc
mov
fstps
rcll
pop
mov
sbb
inc
push
jo
inc
clc
inc
cmp
stos
sbb
lods
idivb
cmpsl
or
mov
pop
loope
loop
subb
jmp
mov
cmpsb
cmp
inc
out
push
lods
lods
add
push
jl
mov
fisttpll
xlat
nop
push
mov
hlt
neg
scas
sahf
push
mov
xor
int3
push
fwait
cmp
lahf
stos
push
jge
cli
inc
pop
addl
pop
mov
push
inc
jnp
cmp
sbb
fsubr
cmp
cmp
arpl
call
lcall
negb
add
adc
cmp
jmp
lret
imul
xor
stos
jo
mov
dec
rcpps
cmp
outsl
sub
sar
lods
ficomps
stos
std
shll
inc
inc
push
jns
jle
repz
int3
imul
dec
data16
mov
popf
sub
test
popa
or
push
inc
or
add
fstp
jl
test
aad
mov
adc
subb
out
mov
loopne
repnz
inc
xor
cmp
lret
and
stos
sahf
mov
dec
icebp
mov
movsl
enter
mov
stos
sbb
fsubl
push
push
mov
sub
orl
imul
pmaxsw
add
jns
enter
icebp
lcall
shll
jo
aad
sahf
out
lods
inc
dec
dec
lret
or
movsl
xchg
add
lret
or
test
sbb
fs
and
loopne
movsb
call
int3
xchg
jne
repz
mov
mov
pop
dec
jbe
adc
mov
stos
jmp
fistl
push
or
aas
mov
push
cmp
lret
mov
cwtl
int
insl
fidivrl
jns
fdivrs
in
xor
subb
xchg
push
movsb
cwtl
fiaddl
dec
bound
mov
pop
mov
lds
push
mov
inc
popf
inc
pop
daa
test
lea
loop
pop
add
insl
std
js
and
sbb
fisttpl
push
push
cmp
rcr
sbb
jno
or
jbe
out
jl
jb
xchg
jne
add
int
sbb
pop
push
leave
pushf
loop
cmp
int
and
inc
aad
cmp
add
inc
test
pop
mov
cmpsl
adc
xlat
pop
bound
addr16
testl
push
sbb
lds
sbb
cld
jecxz
xor
cmpsl
push
adc
xchg
test
outsb
shl
out
imul
xor
popf
push
or
jmp
and
or
sbb
sub
scas
sbb
adc
mov
pop
sbb
repnz
ret
movsb
adc
pop
adc
adc
mov
lods
jge
or
movsb
insl
or
fidivl
scas
js
dec
xchg
mov
nop
push
fsub
inc
cld
or
out
jge
or
cmc
xor
leave
push
into
dec
or
xchg
dec
cmpsb
fisttpll
mov
lahf
cli
jmp
jmp
xor
push
inc
neg
pop
pop
not
xor
jno
or
dec
fisubs
pop
scas
sbb
dec
push
ja
jecxz
dec
orl
outsb
dec
js
cmp
aad
stos
lods
pop
call
and
jne
dec
sub
cmpsb
lcall
stos
int3
xor
cmp
inc
cwtl
sub
jcxz
bound
inc
inc
xchg
pop
pop
cmp
in
sub
cmpsl
sub
push
popa
fwait
mov
ss
jne
inc
sub
ret
push
inc
sti
sub
popf
or
mov
lea
push
aas
mov
out
mov
adc
inc
out
or
fcmovbe
lods
push
andb
inc
sub
cmp
xchg
or
pop
xor
xchg
mov
xchg
ret
jb
add
mov
jae
xchg
and
add
clc
stos
sub
pushf
add
or
repz
sub
stos
nop
std
in
imull
or
mov
fsubrs
mov
cs
fcompl
repnz
or
ljmp
cmpsb
insb
push
out
push
jl
or
dec
mov
jns
adc
dec
cmp
mov
enter
or
lods
mov
adcb
out
pushf
int3
sti
lds
pop
jge
fidivl
add
xchg
hlt
dec
jbe
lret
lock
insl
adc
and
xor
adc
ds
outsb
and
stos
inc
push
push
pop
mov
dec
je
jbe
cmc
dec
mov
push
jo
test
add
lret
jle
xchg
push
mov
icebp
or
arpl
mov
aam
mov
push
bound
or
mov
adcb
pop
ret
mov
or
and
negl
lods
sub
mov
test
lea
xor
loopne
jnp
rcrl
fcmovb
xor
data16
fdivs
push
outsb
movb
imul
push
fmuls
es
aaa
int
sub
mov
add
scas
cmc
and
pop
xchg
lahf
movsl
ds
or
jnp
negb
bnd
jb
fs
inc
push
lcall
and
jae
xchg
pop
hlt
push
cmc
xor
mov
mov
aam
xchg
inc
cld
cmp
mov
pusha
sub
mov
enter
imul
xchg
xchg
test
lds
xchg
icebp
cwtl
stos
add
cmp
enter
clc
decl
dec
sbb
mov
arpl
not
in
addr16
test
adc
lcall
or
call
scas
pusha
pop
xchg
call
icebp
nop
dec
jb
pushf
inc
nop
mov
push
cmp
mov
push
aad
test
mov
movsb
jns
js
inc
or
xor
mov
arpl
ljmp
jl
loope
and
scas
xlat
lds
inc
clc
scas
mov
rclb
vprotq
repnz
icebp
arpl
cs
rorb
mov
adc
outsl
loope
xor
nop
int3
xor
repnz
repz
jns
jmp
push
sub
ds
shl
mov
jns
sbb
jp
fildl
shlb
or
mov
and
mov
jmp
insl
rorb
pop
sbb
ja
mov
ret
rorb
arpl
pop
pop
scas
sub
out
pop
cmc
adc
or
cwtl
pop
push
leave
and
xchg
mov
push
mov
imul
cmc
dec
inc
lret
mov
mov
daa
cmp
mov
hlt
faddl
lock
or
cld
mov
xchg
adc
sbb
mov
icebp
xchg
push
subb
dec
test
inc
mov
adc
dec
jnp
pop
jne
nop
mov
pop
sub
push
mov
pop
mov
mov
jge
xchg
aaa
aas
cmpl
popa
dec
xchg
aas
push
sub
cmp
nop
sbb
mov
addb
bound
fsubrl
mov
sbb
leave
outsl
push
mov
xchg
repnz
movsl
or
and
nop
jl
rclb
mov
mov
jbe
inc
jns
leave
jns
mov
gs
jecxz
std
inc
ja
cmc
xor
sbb
mov
xchg
fidivrs
outsl
data16
mov
inc
sub
jo
lods
fstpt
mov
out
or
mov
hlt
mov
call
xchg
xor
add
in
ljmpw
add
inc
mov
daa
js
cmpl
outsb
out
xor
lods
or
clc
out
jl
jns
cltd
jnp
mov
and
cmp
das
aaa
fs
push
aaa
pop
mov
std
ret
dec
rclb
ds
mov
cmp
stos
jg
popf
xor
jmp
xchg
jge
in
sub
xchg
nop
push
ljmp
int3
neg
repnz
jno
adc
pop
aas
loopne
pop
mov
push
push
dec
inc
mov
jge
gs
mov
jno
icebp
dec
bound
xchg
je
and
rorb
in
lcall
addr16
int3
sbb
mov
cs
int3
bt
add
jbe
cmp
aaa
jb
in
cmp
hlt
mov
fdivrl
inc
mov
sub
and
cltd
iret
adc
add
xchg
jno
add
call
sub
add
rol
xchg
es
pop
mov
sbb
aad
xor
xchg
add
jmp
mov
adc
and
and
add
ljmp
movsl
cmp
and
popa
int
pop
cmp
mov
dec
pushf
lods
mov
pop
jmp
hlt
add
mov
xor
daa
xchg
xchg
ss
inc
iret
repz
roll
cmp
dec
pop
mov
adc
xchg
jno
sarl
adc
out
cmp
addb
divl
or
jo
sbb
pop
push
out
sub
adc
jns
rcrb
or
push
outsb
xchg
inc
out
iret
lret
and
gs
lods
xchg
sbb
outsb
pop
xchg
dec
pop
sbb
aad
iret
rcl
or
scas
cmp
in
inc
fnstcw
loop
lret
xor
rcrl
divb
cmp
ret
rcrb
push
aam
imul
pop
mov
mov
pop
cld
shr
lcall
cmp
sahf
popa
lret
icebp
or
mov
mov
sti
or
lahf
and
lret
imul
imul
mov
pop
sbb
fs
push
out
in
cmp
jbe
arpl
xor
push
fadds
and
out
xchg
push
jnp
push
xchg
cmc
inc
pop
jns
lret
setg
repz
jp
mov
sub
pushf
rcrl
sub
and
loope
fxch
push
and
fsin
jle
sbb
sahf
lods
or
cmp
fisttps
mov
push
mov
es
cwtl
pop
push
sbb
pop
xor
out
mov
and
loop
sub
mov
pop
mov
in
dec
icebp
push
adc
in
sbb
inc
xor
dec
pop
in
movsb
sbb
jge
loope
gs
fsubrs
int3
inc
stc
push
fstps
push
ficoml
scas
sbb
inc
sub
mov
pop
testb
mov
stos
ds
test
hlt
or
divb
lcall
fsubs
aam
test
pop
ljmp
insb
in
test
mov
xor
adc
lahf
mov
push
add
cli
push
add
mov
inc
inc
ret
pop
push
adc
jbe
sbbb
mov
mov
sbbb
pop
lcall
dec
hlt
mov
in
cmpsb
and
in
jb
push
mov
pop
fidivrl
and
adc
inc
inc
lock
dec
mov
test
in
fidivl
or
rcll
inc
mov
pop
adc
lahf
adcb
jg
jns
repnz
cmp
or
std
push
add
jl
push
xor
nop
stos
f2xm1
testb
fadds
sbb
mov
int
mov
aas
std
mov
push
or
and
jnp
les
xor
dec
push
aaa
andb
mov
mov
mov
test
bound
lahf
pop
jmp
xor
adc
lcall
jne
add
pop
pop
rolb
dec
or
imul
mov
mov
inc
sbb
pop
roll
fldcw
mov
add
rcrl
outsb
mov
sub
jns
push
xchg
cmp
fimull
test
cs
xchg
nop
adc
movsl
testl
cmp
mov
xchg
mov
sub
and
mov
nop
imul
dec
dec
mov
repz
mov
lea
mov
mov
out
test
xlat
dec
lret
rep
lret
lcall
add
popa
xor
or
or
jg
fwait
iret
lret
lock
push
sti
sub
imul
mov
aam
jg
jno
rorb
in
ss
jo
sbb
dec
jg
cmpsl
out
test
dec
stos
imul
imul
in
adc
cwtl
shlb
fistpll
sti
sbb
or
mov
jecxz
movsb
sti
stos
mov
scas
mov
inc
push
rcrl
lret
fxch
mov
mov
int3
or
xor
mov
mov
movsb
pop
add
dec
mov
js
jbe
sub
xorl
inc
aad
neg
or
add
rclb
push
inc
repnz
jmp
jge
loop
jae
ret
pop
scas
stos
mov
add
xchg
or
adc
jns
gs
lock
iret
dec
test
daa
fbld
pusha
inc
pop
popa
js
jbe
cmp
icebp
dec
movsb
scas
cmp
xchg
pop
aaa
add
loope
popl
jb
popf
mov
xor
les
push
icebp
aas
push
hlt
xor
jae
xchg
jg
movl
pop
jo
adcb
mov
adc
mov
bound
inc
mov
enter
jnp
and
ja
in
out
xchg
outsl
push
lret
sub
rcrb
push
lds
pop
sbb
or
mov
movsb
les
cmc
std
stos
sbb
fistps
push
xchg
pop
mov
pop
jp
pusha
cmc
inc
fisttps
mov
xchg
push
gs
stos
inc
inc
mov
dec
orl
mov
jo
xor
inc
xlat
push
in
lret
aaa
lret
push
lret
and
and
add
jmp
fnstenv
hlt
movl
stc
fwait
sti
push
mov
jp
lcall
iret
rorb
cmp
mov
xchg
insb
dec
mov
sahf
dec
mov
js
jmp
idivb
sbb
cli
shl
mov
gs
sbbl
clc
cmpl
dec
ljmp
adc
cmc
pusha
addps
int3
push
sbb
pop
sub
je
int
cs
mov
jb
cwtl
sbbb
ret
mov
addr16
les
sub
hlt
fsubp
and
xlat
inc
cmp
xchg
aam
arpl
aam
sahf
and
add
sub
jne
jns
mov
lea
mov
pushf
or
arpl
js
sti
sbb
cmpsb
inc
pop
and
xchg
xchg
jl
push
jp
or
dec
stc
adc
aas
mov
mov
out
mov
mov
push
pusha
jnp
sbb
pop
add
ljmp
jbe
loop
ss
dec
pop
adc
mov
gs
out
in
cmc
and
cld
mov
mov
movsl
xchg
in
or
test
and
insl
dec
or
push
dec
loopne
add
jb
add
enter
inc
adc
pop
mov
stos
cmp
repnz
pop
sbb
sub
push
xchg
cwtl
xchg
bound
adc
or
lret
xchg
pop
pusha
rcr
fwait
cmpsb
cmc
add
shrl
add
xor
sahf
rdpmc
jecxz
fstl
adc
push
pop
adc
daa
dec
addl
mov
push
ja
ficoml
cmp
sti
xor
not
sub
and
pushw
aas
pop
sbb
dec
dec
arpl
hlt
jp
push
dec
out
xchg
and
pop
repnz
sub
adc
and
test
push
cltd
insl
xchg
xchg
inc
and
lahf
dec
shll
mov
icebp
lret
test
fcomip
or
jecxz
arpl
dec
mov
ss
lods
mov
mov
push
jae
fnstsw
cmpsb
pop
cmp
fs
jb
aad
dec
std
mov
stos
xor
iret
outsl
fstpt
adc
in
or
rcll
lds
into
std
jmp
inc
adc
sub
sarl
jbe
pop
and
jecxz
sbb
xchg
int3
xchg
cmp
sub
push
and
pop
stc
iret
lret
xchg
sbb
sbb
sub
lahf
sar
out
dec
dec
push
clc
mov
jle
movsl
inc
stos
mov
adc
into
scas
out
mov
jns
mov
xor
lretw
jo
negl
adc
dec
aam
mov
dec
out
xor
jecxz
pop
imul
mov
bound
sbb
jb
outsl
call
jb
test
ljmp
mov
and
push
fldt
push
push
xor
sbb
fbld
fwait
xchg
addr16
mov
out
or
mov
jecxz
mov
lret
aad
or
push
and
inc
jae
pushf
stos
jecxz
out
imul
arpl
or
pop
notb
mov
shlb
icebp
adc
cmpsb
stos
push
jg
mov
test
mov
lea
add
mov
lret
mov
in
lahf
mov
xor
pushl
dec
sti
pop
xchg
or
pop
das
je
or
leave
or
push
sbb
ss
shll
loop
hlt
cmpl
push
and
inc
rol
stc
test
dec
into
nop
jb
and
lret
cltd
popf
lds
jp
lea
xor
jecxz
jg
push
jecxz
stos
sbb
enter
lcall
ds
cmp
push
inc
lret
test
inc
ficoml
add
add
jns
jg
cmp
cmp
xchg
fwait
mov
mov
or
add
pop
or
xor
imul
shl
adc
repnz
hlt
ljmp
jmp
push
mov
test
lods
mov
mov
pshufw
mov
jb
pop
aam
enter
lahf
mov
mov
xor
add
mov
cmpl
mov
xor
testl
dec
jno
subl
sbb
add
pusha
jno
mov
dec
and
xchg
or
cs
push
imul
arpl
scas
lods
inc
or
adc
jno
daa
js
pop
or
cltd
dec
movsl
xchg
mov
inc
leave
and
pushf
mov
xor
jns
mov
es
sub
mov
rcrl
std
dec
cwtl
xor
sti
mov
pop
cli
loopne
mov
ds
sbb
mov
cmpsb
push
push
mov
mov
dec
stos
repz
fsts
mov
jns
ficoml
inc
xchg
loopne
pop
pop
and
adc
or
popf
out
cld
add
aaa
cmp
sti
mov
loope
cmp
mov
mov
mov
loop
imul
mov
and
out
ret
sub
inc
push
lock
leave
or
add
into
add
adcl
enter
pop
arpl
aad
popf
hlt
push
rorb
xor
mov
jae
mov
les
sbb
jg
mov
icebp
and
enter
or
sbb
repz
call
sbb
cli
mov
mov
sub
pop
mov
test
adc
aas
xchg
add
int
daa
mov
out
sbb
sub
fidivrs
jl
mov
add
popf
pop
pushf
loop
movsl
mov
mov
mov
or
push
mov
in
cmp
lods
faddl
sahf
jecxz
fildll
xor
dec
ret
pop
out
add
xchg
sbb
in
mov
dec
sub
and
mov
and
int3
mov
std
lds
mov
jge
and
in
xchg
pop
cmp
jle
in
sub
in
pop
add
pop
into
cmc
imul
push
sub
and
mov
or
inc
call
cli
cmp
inc
stos
cmpsb
dec
adc
inc
lods
push
je
les
mov
repnz
repz
mov
aam
jmp
sub
mov
testw
and
shll
mov
and
push
inc
pop
movsb
ret
pop
popf
mov
jp
or
xchg
jnp
arpl
rorl
add
popf
cmp
call
mov
shrb
sti
shlb
lds
lea
xchg
and
sbb
fstl
cwtl
lock
sub
fdiv
les
stc
shrb
jg
mov
push
popl
and
inc
adc
sub
cmp
inc
pusha
inc
mov
cs
cmp
clc
dec
inc
jbe
push
lea
movsl
xor
lcall
push
xchg
pop
ss
mov
jno
test
cld
lods
push
add
dec
sub
cmpsl
loop
xchg
xchg
popf
push
sub
inc
std
jbe
jmp
xchg
fadds
xor
out
fists
lahf
outsb
aam
xchg
dec
add
jns
mov
mov
out
faddl
jmp
insl
jae
in
gs
inc
inc
ret
sbb
addr16
and
jno
fs
sub
dec
test
or
data16
ret
push
adc
lcall
mov
xchg
jnp
pushf
push
scas
push
orb
and
daa
or
mov
imul
inc
sub
pop
repnz
pop
adc
scas
jne
sub
enter
dec
aam
pop
or
add
lds
mov
xchg
pop
fdivrl
xor
xor
rcll
jae
rcrb
sub
dec
in
jg
das
jmp
es
je
orb
mov
adc
movb
cmp
movsb
repz
push
popf
pop
and
inc
faddl
push
test
ret
mov
sub
sub
sub
dec
imul
lahf
mov
cmp
or
sbb
add
aam
push
aam
add
xor
sub
inc
pop
xlat
cmp
leave
push
and
bound
inc
sbb
xlat
out
dec
ret
mov
and
shlb
sarb
arpl
add
imull
mov
sub
pop
jge
shrb
mov
aam
shlb
adc
shll
in
push
sub
pop
movsl
cmp
popf
or
adc
jae
xor
std
lcall
ret
idivl
lods
lods
enter
jb
rorl
sbb
cmp
leave
scas
into
addb
jg
sub
pop
or
pop
popf
mov
shrb
jae
mov
int3
jns
cmpsb
adc
mov
std
mov
jle
sbb
xchg
cltd
insl
out
dec
sbb
je
add
dec
in
xor
out
xor
pushf
inc
mov
jbe
or
es
cltd
outsb
outsb
pop
sahf
or
es
pmuludq
xor
imul
cli
adc
mov
std
xchg
scas
and
or
push
mov
push
enter
aas
loopne
xchg
mov
push
adc
lahf
lods
dec
cmp
in
test
sbb
sub
jp
clc
pusha
or
or
aaa
popf
and
daa
insb
jmp
inc
xor
add
adc
sub
lahf
xor
leave
jecxz
dec
ffree
sub
sbb
dec
add
mov
popf
cmp
add
pop
sbb
mov
divl
scas
xchg
aaa
mov
mov
insl
cmpsb
lret
cwtl
shlb
cmp
lahf
mov
pop
fs
ds
cmp
imul
pop
add
outsb
mov
inc
jns
aad
fcoms
fcoms
pushf
xchg
pop
mov
add
xor
scas
cld
lods
mov
out
sbb
fldt
fsubrl
out
jmp
mov
and
dec
xor
adcb
stos
or
pop
je
push
fisttpl
mov
push
jno
inc
add
adc
pop
rcr
sub
mov
mov
push
les
cmpsl
ja
dec
ljmp
mov
add
jmp
je
js
fsubl
lds
push
adc
or
rcll
insl
sbb
lods
repz
inc
mov
mov
fidivl
dec
add
sub
cltd
inc
fsubrs
jbe
stos
std
lds
aad
pop
mov
test
jnp
jno
mov
in
lret
mov
dec
inc
xor
test
jmp
add
or
movsb
sbb
push
jg
sahf
leave
mov
lock
pop
mov
inc
and
ljmp
xchg
adcb
adc
cs
rcrb
inc
sti
js
stos
xor
adc
cmc
rdpmc
cmp
mov
rcl
adc
cmovb
and
inc
jmp
popa
mov
inc
ffree
pushf
nop
mov
lock
xlat
loope
mov
aad
mov
cmc
fwait
loop
jge
sbb
push
pop
or
ja
adc
pop
add
and
sub
xchg
pop
inc
out
push
idivb
push
pop
fdiv
mov
push
lods
sarl
jae
xor
sub
mov
out
xlat
sti
dec
xchg
and
cmpsb
aam
ljmp
sbb
ficompl
insl
aam
pop
lret
mov
insl
sub
jno
aad
and
xorl
aad
push
fcomps
dec
xchg
cltd
fs
mov
xchg
mov
cmp
data16
add
push
cmpsb
add
push
push
stos
mov
mov
insl
push
lods
jg
sbb
popf
dec
inc
mov
push
inc
adc
rcll
bound
cltd
jo
xchg
or
mov
dec
push
mov
xchg
nop
dec
cmp
rcr
sti
mov
push
mov
mov
push
clc
push
xchg
jge
fmuls
mov
movb
bound
insb
fnsave
int
popa
mov
pop
mov
push
pop
inc
jae
sub
xchg
mov
inc
sbb
xchg
push
fisttpll
push
xlat
fwait
scas
sbb
push
sbb
mov
xchg
cmc
ljmp
movsb
notl
and
std
sahf
mov
repz
sbb
push
fnstcw
jge
mov
add
push
mov
gs
pushf
xacquire
repz
outsl
stc
jnp
dec
leave
mov
aad
cmpsb
push
inc
fwait
cltd
lock
sbb
ljmp
mov
mov
scas
push
pushf
outsb
jb
repz
adcb
ja
sbb
jnp
xchg
push
loopne
push
sbb
xchg
rclb
or
dec
mov
icebp
into
mov
dec
insb
movsl
sbb
shll
repnz
push
cs
cmpsl
sahf
aas
xor
dec
or
xchg
adc
sar
add
cwtl
xor
cmp
lods
sub
das
or
xchg
push
inc
dec
push
inc
jns
rep
xchg
add
sbb
cmp
adc
daa
and
loop
aas
lock
sahf
fistps
xchg
jb
mov
mov
pop
les
imul
inc
and
lock
jnp
fistps
jecxz
movsl
mov
mov
decl
sarb
jle
imul
sbb
repnz
cld
inc
xor
pop
xchg
les
mul
mov
mov
lea
int
stos
pop
movsl
jmp
mov
xchg
aaa
xlat
out
dec
add
xchg
mov
push
inc
xor
ret
adc
sbb
arpl
xor
push
lock
dec
ret
add
in
xchg
jae
jmp
test
push
mov
imul
testl
push
cmp
mov
push
fdivp
in
shll
ja
jecxz
scas
mov
jb
cmp
scas
jbe
cmpsl
mov
cmp
test
ss
stc
inc
lret
testl
movsl
cmpsb
mov
xor
not
pusha
int3
ror
enter
cltd
inc
xchg
sub
sub
test
dec
loopne
movsb
lcall
mov
daa
fsubrs
push
test
or
shlb
push
imul
jg
cmpsl
mov
or
je
or
pop
jl
pop
mov
movsb
mov
lods
out
xor
aam
mov
in
add
xchg
ja
xchg
mov
repz
into
and
inc
xchg
shll
jmp
add
or
outsl
sub
jmp
xchg
int
mov
in
clc
and
in
sarb
idivb
or
jle
mov
jmp
fidivrl
push
mov
add
jb
enter
arpl
xchg
imul
dec
jo
pop
push
push
pop
jo
aam
add
inc
hlt
bound
inc
adc
xor
mov
push
int3
mov
out
or
aaa
inc
clc
out
jbe
inc
dec
dec
mov
sti
enter
jp
adc
imul
lahf
scas
test
inc
push
dec
ss
mov
roll
test
pop
inc
and
bnd
xor
inc
sub
lret
jmp
jb
ds
fwait
shrb
out
sub
fsubl
subb
and
cwtl
cmp
pop
pop
fldt
xchg
nop
mov
xor
and
lcall
out
sbb
test
cmp
test
mov
int
das
cmp
leave
std
push
daa
adc
inc
mov
das
jp
inc
out
fcmovnbe
in
xor
jge
inc
push
adc
test
inc
imul
sar
lds
adc
cmp
movsb
popf
add
sbb
je
adc
mov
imull
addr16
sbb
pushf
push
or
mov
out
mov
ljmp
dec
sub
btc
std
or
ds
xchg
out
xchg
imul
fisubrs
imul
icebp
inc
daa
mov
xchg
je
and
repz
nop
mov
call
cli
mov
pop
or
dec
subb
sub
mov
iret
cltd
ljmp
cmc
and
dec
icebp
hlt
push
stos
add
pop
arpl
xchg
fisubs
das
add
pop
insl
pop
dec
fnstsw
rclb
cmpsl
dec
or
out
cmpsl
fisttpll
mov
xor
cmc
les
xchg
jno
in
push
fsub
ljmp
shrl
sbb
insl
jnp
dec
mov
ljmp
mov
cwtl
push
aas
add
push
inc
push
pushl
push
add
mov
sub
lods
js
dec
icebp
cmp
add
sub
push
push
jl
pop
inc
out
stos
xchg
add
push
aad
and
mov
sbb
gs
mov
clc
mov
mov
jno
and
lcall
or
push
or
mov
dec
hlt
sarl
xchg
or
jo
stos
sar
or
jo
sub
sbb
dec
aaa
sub
popa
pop
adc
ret
rcrl
mov
lods
popa
or
int
imul
or
bound
into
cwtl
and
jl
mov
popf
and
dec
inc
jl
pop
sub
mov
sbb
push
in
cbtw
in
or
xchg
ret
mov
in
mov
cmp
out
push
cmpsl
jns
xor
pop
add
shl
out
lcall
outsb
dec
pop
sti
popf
mov
add
sbb
iret
mov
in
mov
pop
sti
sahf
xchg
xchg
xchg
das
or
push
or
push
pop
fsubrl
jg
xchg
lods
ljmp
bound
sbb
mov
mov
adc
out
adc
and
ja
adc
movsb
fwait
cmp
sbb
pop
fnsave
je
adc
mov
add
push
test
mov
std
shrb
cmpb
aas
fldl
pop
sbb
mov
aaa
xlat
adc
push
fadd
add
fwait
loope
fiaddl
pusha
hlt
sbb
pop
pushf
cli
inc
cmp
inc
daa
pushf
out
jecxz
jle
mov
xchg
rorl
jge
and
inc
sar
gs
out
mov
inc
fbld
stos
pop
jge
pop
gs
lods
out
dec
ret
addps
mov
cmp
or
imul
xchg
js
cld
mov
pop
mov
xchg
fdivrl
mov
stc
mov
xchg
daa
fcoml
sub
outsl
rcl
xor
mov
inc
out
xlat
xchg
sbb
repnz
sar
xor
jb
xchg
pusha
test
xchg
js
mov
popa
test
ret
jle
xchg
inc
repz
rclb
lret
imull
mov
stos
cmp
jno
cmpsb
and
das
sub
mov
dec
jns
mov
fisubrl
in
lds
addr16
rcrb
loopne
cmpb
repnz
fidivrl
or
in
jp
shll
and
fdivp
movsl
adc
push
xchg
imulb
in
pop
fsubrl
jae
pop
add
sahf
dec
cmp
sarl
sahf
cmp
fldcw
cmp
push
cwtl
pop
or
xor
lahf
and
ret
dec
dec
sub
push
in
sub
sbbl
mov
or
pop
mov
sti
and
adc
mov
push
mov
call
orb
and
mov
arpl
push
dec
push
test
dec
add
cli
sub
add
jne
and
sahf
xorb
xchg
rclb
pop
fs
mov
ret
mov
cltd
sbbb
cmc
jns
or
out
gs
push
js
and
push
jecxz
data16
or
push
xlat
out
dec
mov
push
daa
xor
and
subl
xchg
and
sub
and
dec
jae,pn
test
rorb
test
dec
scas
sbb
out
aaa
cmp
outsl
subl
inc
xchg
lahf
sub
lret
mov
lahf
inc
aam
nop
sarl
addr16
in
xor
cmc
inc
cwtl
je
pop
pop
push
jne
in
outsb
dec
or
jmp
mov
imul
test
pop
daa
jl
int3
jl
das
rclb
xor
cs
aad
push
inc
inc
pop
xchg
stos
test
cwtl
dec
je
mov
lret
imul
daa
xchg
ja
sub
xchg
sub
pop
sbbb
leave
pop
aaa
hlt
call
mov
in
adc
inc
in
mov
pop
mov
mov
pop
cmc
sbb
loop
add
iret
mov
frstor
push
shrb
mov
push
imul
int
das
and
aaa
push
push
bound
test
movsl
push
dec
aad
add
push
outsb
jge
push
sub
das
cmp
loope
in
pop
cmpsl
and
inc
rcrl
mov
add
push
sub
das
mov
lods
lds
scas
clc
mov
ret
pushl
or
ret
ja
cmpsb
cs
orl
bound
xchg
push
xor
push
clc
mov
ss
and
out
jmp
and
pop
je
js
push
adc
inc
out
xor
fnstcw
push
cs
aad
jp
sub
or
inc
push
cld
mov
pop
stos
mov
sub
fs
arpl
pop
ret
loop
fbld
enter
mov
mov
mov
and
cmpsb
ret
push
dec
test
fdivrs
push
subb
pop
imul
clc
sbb
mov
adc
shrl
pusha
iret
add
inc
or
sbb
inc
aad
hlt
sbb
cmp
stc
in
adc
sub
jl
in
add
inc
sub
addr16
popa
inc
inc
pop
sbb
jnp
add
jp
push
sub
adc
sbb
mov
sahf
and
popl
adc
loope
pop
sub
nop
fisttpll
and
push
out
lcall
pushf
loopne
sbb
call
mov
sbb
int3
pop
les
fisubs
xorb
loope
imul
xchg
cmp
push
dec
loope
jb
adc
shrl
mov
hlt
aas
xor
dec
sbb
inc
xlat
insb
rol
cwtl
push
sti
inc
mov
jns
add
lds
rclb
adc
stc
mov
lds
and
movsb
int
daa
mov
xor
cmc
or
push
mov
inc
pop
dec
jmp
aas
pop
cmp
scas
jne
inc
jo
mov
sbb
dec
mov
testb
cmp
rorl
stc
push
inc
sbb
imul
mov
inc
pop
sub
inc
mov
mov
cwtl
es
mov
ja
mov
xor
sub
pop
outsl
loope
mov
cmp
rcr
shlb
jle
test
inc
lahf
mov
xor
mov
cmpsb
scas
pop
xchg
add
fisubs
cltd
pop
fdivrs
ret
or
test
les
sbb
out
testl
clc
cs
loop
sbb
cmpsl
push
cltd
push
lret
sbb
test
in
daa
cs
pop
mov
mov
and
shlb
pop
arpl
ret
shr
pop
inc
pushl
int
repnz
inc
out
test
jl
cs
dec
xchg
xor
and
push
pop
pop
cmp
cmpw
shlb
add
outsb
sahf
ret
inc
idivb
lds
and
pop
jg
outsl
dec
aaa
lods
clc
fsts
jecxz
stos
clc
repz
int
loopne
and
rolb
pushf
gs
fldt
push
sub
and
les
fldt
daa
cmp
jg
xchg
or
pop
mov
fistps
out
mov
testl
aad
sub
or
jns
shll
insb
dec
xor
lea
loopne
push
fsubs
addr16
jns
popf
sub
jns
dec
sub
loope
inc
jle
pop
xor
mov
cli
data16
scas
xchg
rorb
fisttps
xchg
adc
scas
js
inc
out
lcall
and
inc
and
fiadds
test
mov
arpl
mov
jmp
icebp
sbb
mov
mov
add
lahf
dec
xchg
addr16
mov
frstor
sbb
or
xchg
push
xchg
pop
mov
add
cmp
test
pop
mov
cld
push
pop
loope
adc
cmp
mov
push
stos
push
xor
mov
in
dec
pop
xor
rcr
call
sub
shl
loopne
aam
adc
xlat
sub
mov
fadd
je
push
les
jne
push
and
outsl
in
push
cmp
adc
xchg
pop
in
sbb
ljmp
push
sub
lahf
mov
jge
aaa
fldcw
mov
mov
ljmp
push
inc
sub
mov
jno
sbb
in
inc
mov
ds
pop
popa
jle
inc
shrb
ret
mov
xchg
movsb
mov
std
outsl
mov
stos
push
pop
push
inc
pop
cmp
out
mov
leave
dec
pop
cltd
push
adc
mov
mov
imul
stos
and
movsb
dec
fwait
sub
xor
dec
xor
jge
mov
add
aam
insb
jmp
push
xor
mov
inc
inc
bound
es
mov
push
sbb
sbb
ret
rorl
in
int3
ja
pop
daa
jp
loope
cmp
xchg
sbb
mov
pop
sbb
inc
mov
mov
jae
xor
sub
xor
mov
out
lods
cli
push
sub
jns
popf
enter
pop
stc
mov
stc
push
dec
lret
pop
dec
and
push
lock
dec
sbb
pop
and
paddb
sbb
lea
test
jnp
push
cltd
shl
scas
imul
dec
popa
loop
adc
xor
cmp
mov
rorb
xlat
ljmp
rorl
or
test
xchg
sub
popf
cmpl
out
push
hlt
pop
and
mov
mov
cmp
and
mov
fldt
xor
add
push
dec
test
or
cmpsb
dec
jg
or
mov
jne
jo
aad
inc
roll
pop
mov
cmp
and
and
cmp
cwtl
mov
jo
notb
lock
xor
inc
sbb
test
mov
jle
sbb
mov
cmp
mov
jnp
add
lret
test
rorb
jns
push
push
and
jno
adc
jp
adc
shll
jnp
cld
les
add
lcall
mov
setg
push
adc
aam
lds
movsl
ret
jl
daa
push
sbb
sbb
cmpsl
push
xlat
pop
and
lea
push
pusha
xor
xor
shrl
or
mov
or
shll
mov
outsl
js
pop
pop
imul
sbb
jbe
mov
testb
mov
mov
lcall
enter
xchg
movsl
cmc
jp
cmc
push
fwait
cmpsl
xor
mov
out
nop
sbb
mov
ds
fidivs
out
testl
nop
sbb
push
jo
push
inc
inc
lods
mov
add
or
out
loop
bound
dec
xchg
push
frstor
sub
xorb
mov
xchg
jl
or
xorl
jle
loopne
pop
lods
repnz
push
sahf
mov
rclb
push
jmp
stc
aas
mov
test
std
gs
jb
cmp
xor
js
call
f2xm1
rorl
mov
jne
sub
mov
fiaddl
ja
loopne
jo
into
fisttpll
pop
stos
test
stos
lods
call
les
cmp
mov
scas
or
lret
sub
popf
cwtl
in
outsb
mov
mov
lds
addr16
pop
icebp
sub
repz
xchg
push
loopne
ds
into
shrl
mov
loope
sub
push
out
adc
sbb
int3
cmp
orl
clc
sub
mulb
repz
or
out
test
leave
or
loop
jmp
add
scas
aam
xor
mov
nopl
rorb
out
fimull
jl
sbb
xor
or
jae
arpl
idiv
shll
movsl
push
pop
sbb
sarl
into
or
shll
push
movsl
mov
testb
rcr
push
cmpsb
sub
popf
cwtl
push
adc
adc
or
dec
frstor
sahf
dec
xor
test
mov
jo
out
mov
data16
xor
pop
in
push
lods
out
lods
andl
mov
jnp
add
push
xchg
cs
and
cltd
mov
mov
mov
push
je
out
fwait
daa
cmpsb
out
lea
aam
scas
hlt
or
jo
adc
sti
scas
jmp
out
fs
or
jl
out
dec
add
test
and
cmp
js
mov
jb
sub
icebp
test
cs
stos
arpl
std
nop
ror
mov
cmpb
andb
add
add
clc
push
jle
add
mov
mov
std
jns
fwait
jl
cmc
test
lcall
xorl
push
or
jb
fiaddl
cmp
xlat
and
stos
rolb
push
pop
scas
push
push
mov
cmp
jnp
xchg
cli
or
leave
adc
cmp
cmc
pushf
sub
lahf
xchg
inc
push
cmc
stos
add
cmp
xor
mov
call
rclb
fimull
xor
test
and
xchg
subl
pop
jmp
or
fsubrs
mov
and
fwait
out
xor
jo
sahf
or
sbb
cltd
jl
stc
clc
lock
rcrb
push
pop
jecxz
xchg
aas
lret
pop
push
dec
mov
lea
sbb
jne
imul
jae
sbb
mov
mov
sub
fidivrs
add
mov
xor
dec
mov
sti
add
mov
push
andb
es
sub
dec
inc
sub
hlt
mov
mov
dec
adc
stc
sub
addr16
push
fdivs
rclb
push
xor
or
xor
leave
push
pop
cwtl
aad
lea
insb
add
sar
sbb
push
mov
pop
mov
add
insb
jae
dec
sbb
cmc
lock
shll
cltd
cmp
sub
je
push
adc
sub
scas
jns
pop
push
cli
dec
push
push
testb
push
outsb
dec
mov
call
imul
push
mov
inc
cwtl
mov
imul
add
jl
sub
dec
add
fstpl
jecxz
sti
insl
xchg
mov
add
std
sti
xchg
mov
jle
push
dec
push
pop
fidivl
fistps
inc
add
call
ret
xchg
pop
out
adc
mov
pop
pop
push
js
pop
mov
add
in
add
fstpl
out
mov
jle
scas
sub
xchg
push
mov
test
cmp
push
xor
mov
fwait
sbb
std
test
inc
js
jg
xchg
fwait
inc
fs
cltd
add
inc
push
popa
xor
xchg
std
push
gs
stos
sub
test
fucom
xor
insb
xlat
mov
cwtl
jmp
sub
hlt
xchg
divl
ret
pop
and
mov
jno
ja
or
dec
mov
jmp
mulb
lock
sahf
popf
mov
jbe
push
or
aaa
out
ret
scas
adc
lods
std
in
arpl
repz
or
jns
xchg
mull
mov
in
push
push
or
loope
inc
rcrb
inc
push
jmp
push
mov
dec
dec
sahf
cmpb
xchg
ljmp
pop
test
lcall
jp
cmc
xchg
cmp
flds
pop
add
fmull
mov
adc
sbb
add
scas
in
sbb
loopne
pop
adc
ss
shl
jno,pn
scas
pop
cmp
popf
dec
cmpsl
xchg
jge
xchg
pop
jmp
jb
test
inc
insb
mov
insb
dec
jne
push
sbb
jle
test
js
mov
and
mulb
aas
xchg
insl
adc
xchg
rcr
test
pop
sahf
cmpsl
mov
in
add
fcomps
and
mov
dec
xor
push
pop
pop
daa
mov
jne
xchg
cmp
dec
shll
dec
dec
add
int3
in
push
push
mov
leave
cmpsb
sbb
lock
outsl
xor
adc
stos
pop
mov
or
scas
cmpsl
fbld
das
or
jmp
cli
lret
call
push
jmp
adc
lret
notb
scas
hlt
pusha
mov
outsl
popa
jp
sahf
and
cmc
das
gs
sub
pusha
dec
cmc
add
jnp
clc
dec
iret
jmp
nop
cwtl
mov
hlt
pop
push
sbb
std
xorb
ljmp
add
out
or
xchg
mov
gs
scas
sbb
pop
mov
xchg
inc
jl
int
sub
arpl
pop
cmpsl
push
dec
mov
sub
mov
mov
adc
push
push
or
jmp
xchg
sahf
jns
jae
and
add
in
xor
lea
adcb
fimuls
in
inc
sub
movsb
bound
inc
in
ss
jb
xchg
fidivl
push
test
fs
ret
stc
fiadds
add
xor
push
aas
icebp
xor
fisttpll
fstpt
xchg
or
insl
and
les
and
pop
gs
ret
mov
sbb
mov
lds
inc
jne
das
roll
repnz
fldl
inc
das
sbb
lahf
icebp
sbb
rolb
dec
jmp
sub
or
jns
add
pop
and
lds
pusha
push
insl
push
push
fbstp
fs
xchg
mov
mov
ror
pop
insb
daa
mov
cmpsl
xor
push
add
fs
cmp
mov
ljmp
dec
test
stos
loopne
push
lock
pop
mov
gs
inc
dec
adc
jb
fucom
push
ret
cli
mov
sbb
nop
cwtl
scas
cmp
pop
sbb
or
dec
dec
loope
mov
push
dec
jnp
adc
popa
push
js
jnp
adc
outsb
dec
xor
cmp
out
repz
lret
cmp
push
fisubl
add
or
hlt
inc
sub
lret
pop
jbe
xchg
pop
sbbl
sub
add
clc
outsl
pop
push
or
icebp
pop
fbld
sti
and
sarb
ret
xor
subb
fidivrl
jb
aas
xchg
sub
repz
sbb
cs
ret
sbb
data16
lret
adc
jg
pop
stc
push
mov
popa
rol
loop
std
jb
xor
push
lahf
lahf
jb
and
and
mov
sbb
lea
cld
pop
or
scas
outsl
and
add
jae
stos
jnp
adc
aam
pop
mov
or
dec
mov
cmp
sub
cmc
orb
fs
nop
aam
xor
jle
mov
lret
ljmp
cld
aad
test
jmp
psubb
pop
cmp
mov
cmp
push
sbb
int
xchg
add
dec
notb
ret
cmp
inc
jb
adc
and
aaa
cltd
push
sbb
rcll
movl
rcl
les
jo
push
outsb
sub
stos
and
or
mov
push
and
test
mov
lock
push
stos
cmp
inc
mov
sti
lock
xlat
jecxz
pop
xchg
jl
andb
cmp
in
ljmp
loope
imul
adc
ja
jo
loopne
jl
cli
test
pop
jg
xchg
out
int
sub
sarl
jb
xorl
fcmovnb
push
push
cld
lahf
and
ret
mov
jecxz
jp
push
jmp
fs
add
sub
roll
dec
mov
mov
inc
inc
or
and
sbb
mov
push
xchg
sub
insl
out
push
mov
arpl
mov
imulb
mov
inc
pop
sarb
mov
dec
ds
movsl
cli
sarb
stos
inc
daa
mov
push
ret
jge
in
stos
xchg
dec
mov
pop
jae
mov
jno
lods
xorb
xor
jno
dec
push
cmp
cld
add
inc
hlt
jle
cmpsl
je
cltd
fiaddl
mov
das
stos
daa
imul
fstps
lea
clc
dec
xor
sub
push
dec
fnstenv
jecxz
js
movsl
cmp
jecxz
in
cmp
cwtl
movsl
or
sub
mov
arpl
inc
popf
push
shll
mov
cmp
pop
scas
push
icebp
test
or
add
jae
cmp
movsb
in
inc
xchg
outsl
sarl
mov
iret
jge
sub
push
scas
push
repz
adc
imul
imul
dec
rol
aas
es
fisttpl
dec
inc
pop
hlt
andl
pop
out
fiadds
sbb
loop
jne
cmp
dec
adc
orl
sbb
daa
inc
bound
lea
mov
imul
dec
jmp
add
bound
cmp
subb
cmpsb
cmp
ss
loopne
pop
in
pushf
fcmovnbe
xor
in
sub
push
js
sub
add
es
cmpsl
lds
shrb
dec
out
inc
cs
xchg
xchg
in
icebp
lcall
dec
out
xor
dec
hlt
sub
add
insl
pushf
inc
fnsave
nop
xchg
ret
push
jae
fsubp
loop
cmp
ss
sbb
fmul
push
mov
jno
inc
or
push
xlat
not
pop
cmp
movsl
loope
add
repz
mov
mov
add
sbb
push
mov
mov
cld
hlt
dec
pop
lods
mov
sub
bound
add
mov
movsb
popa
sbb
mov
in
call
or
jle
mov
xor
mov
ret
jnp
scas
imul
lock
xor
or
mov
in
sub
mov
hlt
cmp
int3
leave
pop
movsl
scas
insb
cs
adc
test
jmp
xlat
int3
sub
aas
inc
xchg
push
mov
push
or
das
and
xchg
js
or
addl
and
mov
mov
push
iret
sub
adc
and
popa
jl
mov
stc
adc
mov
pop
dec
in
rorl
je
xor
add
push
out
rcrb
pop
imul
dec
pop
cmp
add
cmp
lods
and
idivl
mov
sbb
push
cmpsl
test
dec
dec
inc
repnz
mov
adc
inc
sti
add
bound
aas
fadd
stc
inc
data16
inc
push
sub
iret
sub
bound
and
es
sbb
xchg
pop
sarl
aaa
les
lds
cmp
mov
add
dec
mov
adc
or
jl
adc
push
xchg
inc
int3
jno
sub
inc
scas
cmp
ss
dec
inc
xchg
test
lods
mov
xor
cli
bound
in
sub
outsl
add
test
adc
stc
cmp
lcall
jae
mov
pop
adc
arpl
cmpsl
daa
dec
aaa
iret
or
rcrb
mov
mov
roll
fchs
inc
xchg
xor
cltd
cmp
mov
xlat
and
iret
adc
adc
sub
inc
ljmp
fadds
jns
adc
fisubs
cmp
dec
scas
stos
idivb
dec
xchg
out
inc
jo
and
xor
mov
jl
inc
and
push
fucomi
int3
ret
pop
jg
insl
ja
dec
flds
adc
mov
mov
aam
sbb
popa
push
out
dec
in
mov
pusha
push
in
xchg
xchg
add
or
sub
xchg
mov
ficoms
push
cmpsb
sbb
unpcklps
jne
int
fcomps
shlb
popf
push
popf
dec
dec
jge
or
out
div
in
jl
fisubrl
ljmp
cltd
test
pop
cmp
fimuls
push
sbb
ss
mov
nop
xchg
cli
lock
pop
lahf
addr16
js
cmovb
ljmp
movsb
iret
mov
insb
lods
aam
xchg
repnz
push
push
repnz
test
push
movsb
gs
mov
out
rorl
sub
sbbb
popa
in
dec
cs
xlat
lret
lea
mov
sarl
push
mov
sahf
adc
jp
sbb
xor
mov
xchg
enter
jbe
xchg
popa
sbb
xchg
out
push
push
sti
in
bound
shrb
arpl
test
adcb
sbb
mov
bound
inc
push
mov
inc
mov
xor
pop
or
out
rclb
jl
cmpsl
mov
or
adc
sbb
enter
shr
mov
or
push
inc
dec
jmp
jnp
sub
push
imul
fucomip
lret
hlt
pushw
aas
mov
pop
add
cltd
out
add
push
mov
dec
les
rcr
pop
jb
add
pop
fldt
aaa
scas
scas
pusha
mov
lods
in
dec
inc
inc
fistpl
stos
xchg
sbb
js
cld
add
js
xor
sub
push
xchg
mov
shlb
je
aaa
out
sbb
mov
or
sbb
cmp
mov
ja
aad
stc
test
push
or
pop
adc
stos
std
cmc
sbb
subl
push
fwait
test
mov
dec
mov
mov
dec
mov
cmc
and
mov
push
cmc
jecxz
and
xchg
inc
sbb
int
inc
cmc
ja
mov
lds
push
int3
and
push
mov
popa
shll
cmp
mov
adc
insl
movsl
inc
mov
push
cmp
ret
mov
ds
fsub
pop
pop
call
jns
pop
push
daa
pop
js
inc
fadd
xchg
test
jecxz
mov
cmpsb
cli
int
and
and
ds
arpl
inc
push
int
sub
js
mov
out
ljmp
pop
cmp
push
mov
mov
cwtl
jbe
and
mov
push
scas
push
push
adc
rorb
push
insl
fs
mov
fisubs
fsubrs
mov
test
pop
movsl
mov
cmpl
and
bound
fs
mov
mov
inc
mov
and
pop
adc
lret
lahf
inc
push
loope
jno
repz
adc
test
gs
pop
mov
mov
and
xor
out
stc
cmp
lret
arpl
sub
stos
adcb
insl
je
jmp
lret
cmp
sahf
sbb
dec
cld
inc
or
mov
pop
xchg
pop
pop
sar
mov
add
outsb
into
nopl
sbb
fucomip
adc
cs
sahf
mov
xchg
in
arpl
ret
scas
xor
inc
lods
stos
mov
mov
dec
mov
push
pop
ljmp
sub
lahf
pop
mov
mov
data16
enter
dec
mov
mov
add
mov
popa
lret
call
iret
jno
sar
in
jns
jne
je
mov
out
pop
cmp
pop
test
jl
cmp
add
mov
mov
lahf
xor
mov
bound
es
shld
cmc
shll
in
lods
xchg
or
fstps
jl
cli
in
lfs
mulb
sbb
imul
cmp
mov
jg
xchg
daa
fidivrl
push
fldt
nop
mov
mov
lods
outsl
sub
pop
jb
shr
test
fwait
sti
dec
mov
in
arpl
jg
xchg
addr16
mov
pop
mov
lds
cli
lods
clc
jmp
popa
dec
mov
mov
shrl
push
jne
dec
out
movsb
mov
jmp
add
jl
push
or
cwtl
out
nop
cld
fwait
jp
inc
mov
into
outsb
les
mov
jl
sti
xchg
clc
out
pop
jne
mov
lahf
fs
dec
sub
imul
mov
aad
pop
cmc
imul
xchg
jp
cwtl
adc
cmp
outsb
lods
lret
jnp
rcrb
push
test
daa
mov
rolb
lock
sarl
push
ss
sub
xor
idiv
aam
xchg
repz
jne
xor
lea
mov
push
and
fidivrl
sahf
jle
cmp
sub
mov
inc
lahf
shll
fs
ret
cmpsb
inc
add
cmpb
or
push
adc
mov
mov
and
lahf
push
lds
fs
jbe,pt
xchg
jns
gs
cmp
lahf
les
push
add
and
mov
push
adc
lea
jae
stc
push
aaa
out
lahf
negb
out
mulb
adc
je
jno
lret
aam
jecxz
or
gs
sub
push
das
pop
sub
push
and
push
sbb
jmp
push
repnz
arpl
clc
outsl
into
lahf
cmpsl
aaa
push
das
push
xchg
dec
andb
mov
cmp
xor
out
push
xorl
cs
test
repnz
lea
ret
gs
test
mov
add
rclb
popf
iret
inc
and
cmp
sbb
sarb
mov
insl
mov
fistl
rolb
lods
pop
push
addr16
lds
test
push
and
and
leave
inc
jns
daa
dec
inc
fisttpl
stc
divb
dec
xchg
push
cmpl
sarb
iret
bound
fimull
int3
or
sbb
test
mov
jp
subb
es
scas
jmp
and
jns
lds
pop
adc
in
imul
and
pop
jge
cmp
dec
mov
mov
daa
jge
mov
popl
cwtl
adc
aaa
test
jb
cmp
push
pusha
push
lea
xor
xor
pusha
or
mov
adc
fstpt
shlb
xlat
jno
iret
ret
mov
fcompl
test
aaa
lahf
sbb
jg
dec
and
mov
lock
cmp
mov
and
aam
dec
je
call
sub
lret
cs
adcl
dec
shll
xor
inc
mov
jo
mov
lds
jg
rorl
sub
roll
adcl
jl
aam
and
and
clc
dec
sub
push
cmp
push
cmpsb
xchg
iret
adc
lds
push
into
popf
pop
lahf
outsb
mov
cltd
gs
fucomp
add
add
das
xchg
xchg
xchg
das
clc
sub
outsl
mov
inc
mov
push
imul
mov
or
pop
and
ja
adc
sub
add
mov
test
js
xchg
addr16
inc
xchg
inc
scas
jnp
fdivs
stc
xor
sub
mov
push
sbb
sbb
int3
mov
test
ret
fiaddl
sub
lds
inc
int
aad
loope
jmp
inc
push
jle
jg
adc
cltd
inc
stos
shrb
bound
pop
insb
repz
xchg
call
jg
or
das
push
jae
in
inc
pop
jb
or
and
out
sysexit
insb
scas
ljmp
and
daa
mov
and
lret
int
cltd
pushf
dec
sub
sbb
inc
loope
stos
enter
rorl
aad
clc
or
adc
icebp
push
or
aaa
outsb
addr16
dec
mov
jge
push
jnp
inc
pushf
ret
xchg
sub
and
test
popl
push
sbb
cmpl
das
shrb
mov
jo
mov
or
cmp
ja
es
ljmp
dec
or
xchg
pop
lods
addr16
lahf
jge
outsb
sbb
mov
or
fsubp
dec
push
addr16
jns
add
sbb
cmp
rorl
loopne
push
ret
sbb
lods
or
outsb
inc
lahf
mov
movsl
xchg
cmp
sbb
stos
mov
mov
fistpll
rolb
pop
rcrb
sub
xor
sub
das
push
mov
cmp
lock
popa
sub
push
jno
and
stc
cld
and
pop
lds
add
mov
and
cmpsl
popa
adc
cmp
rorl
push
push
inc
xchg
addr16
decb
mov
mov
mov
popa
push
lret
push
xchg
xchg
push
inc
cmpsl
ficompl
int3
adc
mov
loope
pusha
jbe
mov
data16
jb,pt
push
fidivrs
jb
add
in
adc
pushf
out
and
in
fld
clc
out
xchg
notb
or
ja
cmp
mov
sbb
mov
and
outsl
sbb
js
mov
inc
mov
pushl
int
xchg
mov
sbb
neg
dec
jge
notl
cmc
push
stos
testb
xchg
sahf
imul
rclb
shrb
jae
jp
sbb
das
out
xchg
test
insl
xorb
pusha
pop
lods
pop
or
push
push
es
sahf
loope
repz
jb
xchg
movsb
dec
lds
mov
sbb
jne
scas
pop
pop
pop
sub
mov
je
fnsave
cmp
add
push
xor
inc
movsb
mov
fsts
mov
ficomps
xchg
push
iret
xchg
inc
inc
fdiv
lcall
es
mov
sbb
int3
inc
dec
sbb
inc
mov
or
cmpsl
mov
push
stos
gs
fisubs
dec
cmp
xor
sbb
pusha
scas
pop
mov
mov
data16
fnstcw
push
and
inc
ljmp
orl
jae
and
mov
and
cmp
dec
mov
and
out
xchg
add
cmp
xchg
test
xchg
in
inc
cmc
xchg
inc
aam
cmc
push
sbb
cli
outsl
xchg
sub
icebp
dec
mov
inc
push
mov
and
mov
pop
stc
mov
add
push
in
xchg
inc
pop
mov
jg
int3
cwtl
xor
xchg
stos
push
ja
sbb
jg
xchg
ftst
enter
bound
push
aaa
mov
jmp
movsb
xor
inc
adc
popf
jnp
sbb
std
sbb
cmp
push
xchg
push
cmp
xorb
cmpsb
pusha
mov
into
lea
sarb
cmp
in
mov
sub
inc
repnz
and
mov
cmp
pop
xor
push
cs
loop
lods
pop
in
daa
enter
push
push
cmpsb
mov
xor
lahf
jl
call
sub
jle
or
aas
jne
call
jnp
jns
cltd
push
pop
ret
and
and
mov
inc
push
cmp
shlb
shl
and
les
sub
fldcw
js
enter
sahf
xor
pop
xchg
dec
cmp
test
jne
jg
and
jo
es
cli
push
push
mov
push
fisubrl
gs
inc
dec
jmp
fistl
cmp
add
pop
sar
aaa
mov
xchg
leave
mov
repz
je
loop
mov
setp
mov
adcl
fs
or
movsl
jmp
gs
sbb
pop
fldt
cmp
or
outsl
jl
or
icebp
movsb
mov
mov
loope
mov
cmpsl
outsl
insb
inc
and
inc
stc
adc
inc
stos
clc
xchg
xchg
out
pop
aad
test
adc
xchg
jnp
pushf
icebp
mov
push
push
lods
sarl
adc
push
sub
test
in
xchg
mov
popf
xor
enter
bound
mov
outsl
scas
imul
orb
cmpsl
out
fs
xor
xchg
lret
sub
xchg
shlb
lods
es
push
shll
pop
cmpsl
pop
add
js
jnp
mov
and
add
mov
icebp
cs
je
fsubs
or
ljmp
daa
sbb
movsl
inc
call
mov
inc
sbb
jb
mov
inc
xchg
mov
aas
or
jns
mov
dec
pop
fsubs
stos
adc
dec
add
les
es
rcl
into
lds
enter
ret
add
mov
pop
push
push
imul
add
fldl
and
add
and
insl
jnp
hlt
inc
xor
test
out
jnp
dec
iret
nop
xchg
daa
popa
nop
xchg
dec
stos
sbb
and
cmc
or
mov
sub
clc
ret
rcr
mov
and
adc
popf
iret
xlat
movsl
sar
dec
jp
out
sub
pop
sbb
je
loopne
mov
sbb
in
and
add
mov
das
push
into
jno
inc
scas
in
data16
push
jg
pop
pop
add
gs
rcrb
dec
or
inc
lods
adc
push
pop
mov
aas
mov
stc
xchg
pop
rorl
movsl
pushf
fwait
cmp
bound
lock
int3
loope
rol
in
cmpsb
jle
in
cli
mov
imul
mov
mov
cs
mov
pop
adc
test
leave
ret
testb
mov
xchg
add
add
dec
adc
dec
xchg
fimull
fcoml
pop
push
push
cmp
push
lods
into
mov
sahf
test
cwtl
hlt
in
daa
mov
mov
or
mov
shrl
cmp
popf
push
mov
psubusb
jp
and
bound
stc
xchg
or
jb
push
fcoms
outsb
pop
nop
popa
aad
mov
dec
dec
sahf
xchg
push
cltd
mov
int
pop
mulb
jns
ljmp
frstor
jecxz
sbb
insb
pop
xchg
xchg
icebp
cld
aam
jmp
mov
lcall
sbb
jp
ret
cmp
jb
clc
and
mov
in
loopne
adc
outsb
add
call
jmp
mov
xchg
aam
xor
sub
mov
sbb
inc
pushf
jecxz
cmpsl
add
pop
push
xchg
js
idivl
push
iret
inc
cmp
push
imul
xor
push
add
lock
rcll
jo
outsl
xchg
fadds
dec
call
cmpsb
cmc
jmp
daa
into
jge
inc
cmp
mov
out
cmc
lods
je
decl
dec
cmp
dec
mov
jo
mov
daa
fwait
jg
das
jp
mov
dec
mov
cs
sbb
xor
dec
in
xor
jmp
leave
or
xor
add
jb
cltd
xchg
sbb
mov
clc
mov
sub
aad
in
push
adc
pop
mov
icebp
loopne
adc
dec
mov
data16
push
lock
inc
xor
jmp
dec
je
popf
icebp
add
jmp
push
sahf
mov
jae
shrb
jbe
fcomp
rcr
push
test
and
inc
pop
pop
cs
pop
push
xor
inc
icebp
mov
lahf
in
push
out
in
dec
jbe
add
addr16
jg
xchg
loopne
pop
fs
shll
xlat
add
leave
or
sahf
push
dec
sbb
inc
out
insb
cmp
mov
sub
sub
repnz
push
push
outsb
imul
sub
cmp
enter
lret
adcl
ja
mov
imul
pop
cmp
xchg
xor
je
shll
fs
dec
dec
mov
mov
fistps
or
pop
fwait
push
shrl
int3
icebp
xchg
sbb
inc
push
or
dec
out
xor
jno
repnz
mov
iret
inc
lds
xchg
cmpsb
sub
pop
ljmp
sbb
push
inc
nop
ljmp
xchg
aas
gs
and
jge
sub
lods
movsb
mov
sub
scas
or
shlb
xor
dec
jle
push
out
add
mov
lds
daa
adc
popf
xchg
adc
out
sbb
pop
out
in
push
xchg
imul
movl
push
cmp
rorl
pop
shr
jg
into
sti
dec
xchg
stos
jmp
ds
insb
arpl
cmp
sub
push
push
dec
jo
mov
rolb
outsb
jno
jno
test
in
jle
cmpsw
mov
jb
roll
dec
call
push
and
or
dec
out
jmp
loope
jg
call
js
cld
sahf
pop
jle
fcmovu
nop
nop
mov
movsl
cmp
push
sbb
cmpsb
fdiv
sbb
jmp
add
sub
push
xchg
mov
cwtl
pusha
inc
jbe
add
inc
sub
pusha
loop
mov
pushf
shll
cld
jle
pop
cmp
mov
clc
mov
add
and
mov
push
mov
ljmp
test
inc
and
dec
cmp
add
fcom
push
cmp
dec
mov
inc
mov
enter
mov
cmpsl
adc
or
pop
das
jnp
das
pop
adc
lahf
sub
lods
cld
lock
xor
jnp
adc
mov
mov
pop
stc
jae
mov
push
pushf
xchg
out
imul
jo
outsb
ss
enter
adc
out
jge
ret
xor
inc
jnp
fldl
sbb
cld
add
loopne
pusha
push
arpl
cld
jl
pusha
rcl
into
cmp
out
in
ror
jns
es
popf
cmp
sahf
outsb
xor
lock
xchg
dec
fldenv
xchg
and
xchg
or
in
jo
xor
mov
dec
and
ja
cli
cld
adc
cmp
popf
mov
mov
and
je
icebp
cmp
hlt
or
add
pop
ja
xchg
test
and
inc
cmp
adc
mov
ss
xor
push
jb
pop
lds
dec
sub
add
xchg
dec
mov
out
cwtl
adc
rcrb
sbb
pop
pop
pop
in
pop
mov
mov
cmpsb
or
xor
jb
mov
repz
add
in
arpl
lcall
and
push
lahf
jnp
mov
add
mov
mov
jp
jle
mul
fcompl
popf
hlt
sti
push
enter
add
or
cltd
fidivl
subl
mov
lahf
loopne
sbb
loop
xor
loop
cwtl
xchg
lds
neg
lret
rclb
jbe
push
sti
cmp
out
push
mov
loop
insb
fildll
sbb
pop
ror
stc
sub
inc
or
dec
or
jmp
add
mov
in
fisttpl
iret
cmp
xchg
cld
call
jae
orb
notl
int3
lss
sub
filds
inc
sbb
push
sub
les
daa
mov
shl
push
es
pop
cli
pop
addl
das
sub
arpl
sbb
test
ret
xor
stos
and
ds
sbb
mov
lcall
xlat
imul
daa
mov
shlb
out
rcrb
idivl
jae
clc
std
jmp
notb
test
inc
lods
sub
xor
add
mov
fadd
data16
outsb
push
adcl
push
cmp
js
mov
fwait
in
or
lods
cs
test
pop
cmpsb
push
pop
cs
pop
daa
mov
out
inc
mov
add
jecxz
push
jp
sub
push
sti
sub
inc
xchg
in
or
divl
mov
jbe
fcmovu
cltd
sbb
icebp
mov
sti
dec
lds
mov
scas
pop
sub
test
rcll
into
pop
fildl
sbb
insb
xchg
xchg
lret
cmpsb
rclb
jle
mov
cmpsl
in
cmp
pop
lea
push
push
pop
push
mov
cmpsb
dec
roll
je
xor
xor
scas
xchg
fimuls
mov
enter
pusha
cmp
jne
out
ret
aad
mull
mov
mov
jmp
cmp
sbb
xchg
repnz
jno
inc
xlat
dec
sub
leave
and
out
mov
dec
test
mov
enter
inc
scas
xor
jbe
xlat
push
pop
int
int3
jo
mov
sbb
inc
pop
jb
les
inc
cltd
push
push
outsb
std
cmp
mov
fisttpll
fldl2e
xchg
adc
mov
inc
or
aad
mov
xor
mov
iret
pop
data16
pop
sub
push
sub
mov
xchg
loope
sub
rcr
xchg
in
push
xor
outsl
push
xchg
filds
sti
push
xor
xor
jnp
dec
call
cmpsb
adc
cmpsl
loope
jae
ret
pop
ret
pop
lret
data16
js
out
nop
or
fsubrs
movsl
xor
dec
jbe
popf
clc
mov
out
dec
scas
les
popf
icebp
cs
cmp
out
inc
xchg
dec
or
xchg
loopne
lea
lock
xchg
outsb
dec
stos
mov
mov
loopne
jnp
outsl
rcll
fidivl
push
xor
sbb
mov
sahf
out
fsubrl
addr16
and
repnz
sub
shlb
sub
cmpsl
adc
jbe
push
mov
sub
push
ret
fcom
call
push
orb
push
pop
leave
insl
xchg
arpl
dec
outsb
mov
and
push
inc
add
filds
das
fsubrl
stc
sub
jbe
sub
xchg
add
stos
add
ret
xchg
outsl
mov
in
mov
mov
sbb
out
ret
stos
shll
outsb
mov
dec
cmpsb
ss
fdivrs
stc
mov
cli
stos
rcrb
fchs
or
imulb
xchg
stos
iret
inc
xchg
dec
xor
xor
add
dec
aam
cmpsb
dec
js
aaa
lcall
pop
jbe
ja
xor
es
inc
cmpsb
pop
aaa
rolb
fisubrl
sub
ja
mov
xchg
mov
dec
aad
dec
das
mov
lods
jae
lret
scas
sti
stos
xchg
sbb
repnz
out
xor
add
mov
out
aam
int
sahf
addb
aas
ror
or
pop
dec
lods
lods
xchg
xchg
xchg
data16
mov
xchg
sti
sub
xchg
mov
out
daa
add
sar
scas
jne
xchg
add
outsl
aas
cwtl
xchg
jmp
adc
dec
cs
pop
mov
iret
sbb
mov
lret
ljmp
pop
mov
iret
out
gs
mov
inc
sbb
jecxz
jno
iret
or
xor
sbb
mov
cmp
aam
jbe
jl
xchg
std
into
adc
jo
rolb
test
fiadds
mov
mov
jecxz
inc
jae
arpl
jne
xchg
mov
fcoms
cmp
inc
pop
ja
mov
and
pop
insb
push
fstl
int
sbb
das
popa
sbb
jnp
aaa
sub
pop
dec
lahf
mov
mov
in
icebp
sub
aam
push
and
jg
ret
cmpsl
cwtl
adc
inc
aam
push
ret
jo
fdivr
out
mov
mov
js
fcoml
mov
leave
inc
or
adc
mov
and
sub
dec
cmpsl
cltd
add
fisttpll
mov
ljmp
add
outsl
fisttpll
sbb
xor
mov
push
xchg
xchg
jb
jbe
out
xor
sbb
les
cmp
xor
cld
push
jg
out
pop
or
pop
ds
incl
scas
mov
pop
les
xchg
out
das
ds
js
jns
sti
sbb
mov
add
call
shrb
fwait
adc
gs
and
subb
orl
xchg
jp
jmp
mov
aas
outsl
mov
adc
lods
cltd
stos
xchg
scas
or
mov
mov
loopne
jbe
and
jns
cmpsb
shlb
jl
repz
sbb
and
cmpsb
or
out
lret
aas
cmp
inc
call
push
movsb
jg
mov
or
mov
xchg
js
inc
sub
lods
pop
push
mov
int
mov
nop
and
sub
xchg
mov
cmpsb
jmp
and
mov
inc
cwtl
test
faddl
in
adc
call
push
push
stc
cli
xor
push
popa
aaa
aam
test
fcoms
pop
jl
xchg
lds
shlb
adc
test
jns
ror
das
inc
out
mov
push
ljmp
cltd
insb
jle
repnz
enter
loop
js
fistps
sti
imul
push
dec
pop
movsb
sub
clc
adc
cli
cld
cmpb
roll
inc
insl
fmuls
ja
test
iret
or
rclb
insb
stos
popf
xor
out
or
cltd
sbb
call
push
outsb
testb
add
shlb
jne
xor
imul
add
movsb
js
lods
lret
cli
dec
sbb
xchg
xor
xor
insb
pop
xchg
mov
mov
pop
push
pop
cltd
fsubs
out
pusha
push
in
pop
incb
pop
inc
push
test
dec
js
out
movsl
and
sub
or
cwtl
in
push
inc
int
mov
sbb
jge
cmpsl
adc
dec
js
pop
rol
or
push
rorl
ds
movsb
ja
adc
leave
ss
jb
mov
out
sahf
sbb
clc
mov
inc
adc
xchg
jge
ret
inc
mov
sahf
fcmovnu
push
mov
in
gs
adc
fwait
inc
lods
in
jns
fs
or
pusha
shlb
add
sub
pmuludq
mov
pushf
inc
lods
push
hlt
fildll
roll
ret
es
sub
dec
into
mov
daa
pop
and
adc
jecxz
xchg
dec
adc
movsb
lods
mov
stc
xlat
push
or
fisubl
lret
mov
mov
and
fucomi
rcll
and
das
mov
push
push
mov
lods
mov
out
dec
lahf
cmp
addr16
shrl
mov
jb
and
movb
mov
jae
ret
push
loop
je
scas
mov
in
arpl
testb
mov
daa
lods
jnp
pop
lahf
out
dec
or
cli
insl
sahf
sbb
and
add
nop
add
adc
clc
test
ds
and
test
jns
sub
sub
mov
push
call
cmpsb
insb
add
xlat
and
mov
sahf
xor
mov
sub
sbb
add
push
sahf
pop
mov
xchg
mov
int
mov
or
out
and
movsl
outsb
das
or
sub
arpl
iret
mov
or
add
lahf
jne
shlb
dec
jmp
fisttpll
arpl
iret
adc
add
sub
mov
mov
add
test
fcmovne
pop
cwtl
and
popa
sbb
clc
fldl
leave
cli
out
sahf
lahf
test
ljmp
out
arpl
clc
cmp
mov
xor
mov
sub
and
pop
scas
loop
arpl
pop
pushf
or
and
outsb
inc
shr
mov
ret
fnsave
cmp
jmp
push
sbb
out
pop
cmp
in
sbb
nop
in
mov
sub
jno
mov
push
sub
and
push
inc
adc
cmp
lock
inc
mov
mov
jp
int3
pop
rol
cmc
mov
cwtl
aad
xchg
fists
mov
cwtl
pop
sbb
cmp
je
pop
pop
stos
pop
inc
outsl
daa
xor
adc
xor
and
rolb
popf
pop
into
pop
push
in
scas
je
adc
push
arpl
and
inc
add
cmpsl
pusha
inc
sub
push
push
mov
mov
int3
pop
dec
mov
inc
xchg
cmc
add
ret
push
dec
adc
es
stc
lods
repz
or
out
fcomps
push
adc
sbb
mov
das
cld
test
cld
xchg
pop
out
pop
call
iret
arpl
mov
sub
sbb
ret
lods
add
jno
push
push
in
jnp
cld
test
in
stos
lds
mov
cltd
push
push
xchg
push
int3
push
fnstcw
and
aad
sub
enter
add
push
movsl
addr16
cmp
or
in
fidivs
repz
es
inc
arpl
dec
in
mov
mov
mov
mov
push
fnsave
aad
fs
sahf
mov
jne
imul
xchg
sub
adc
push
jmp
pop
sub
xchg
mov
pop
in
adc
loopne
repz
adc
push
loop
out
in
fnstsw
xchg
mov
push
inc
push
je
aad
xor
cltd
loopne
mov
add
jb
push
push
jno
or
inc
out
out
sahf
sbb
outsl
sbb
popa
xor
pusha
leave
sahf
shr
sbb
mov
call
inc
bound
adc
push
add
cmpsl
in
int
aas
popa
es
mov
dec
int
test
or
sub
lods
cld
xor
div
mov
jp
push
scas
add
movsb
mov
cwtl
jno
cmp
push
sbb
mov
das
out
out
inc
push
xchg
sahf
cmpsl
inc
adc
aad
and
mov
or
aas
push
movsl
mov
mov
sub
aad
add
scas
loope
or
fisttpll
dec
xchg
aas
inc
sub
mov
fnsave
mov
imul
mov
ljmp
push
jp
sbb
bnd
mov
pop
ljmp
or
sbb
and
sub
aam
lret
lcall
mov
roll
dec
xchg
sub
push
dec
mov
es
out
fcoml
das
push
dec
into
loopne
mov
adc
xchg
loop
push
cmp
lcall
adc
pop
pop
push
push
xor
xchg
jo
mov
inc
push
xchg
ret
adc
cmp
lcall
mov
dec
insb
mov
lock
jb
lret
mov
es
rcll
mov
aam
mov
fs
negb
mov
dec
in
cmp
inc
jle
fiaddl
fmul
stos
xor
scas
jo
rol
loopne
mov
sbb
jno
inc
mov
push
aam
pop
data16
ret
mov
pop
mov
gs
dec
out
xchg
negb
das
xor
inc
imul
sti
ret
mov
dec
gs
add
mov
sbb
ficomps
int3
clc
mov
push
jl
pop
xlat
sbb
add
fcmovbe
ljmp
imul
scas
xlat
repnz
fistl
mov
jl
shrb
mov
push
add
inc
push
jno
xchg
xchg
loopne
sbb
push
je
or
div
cld
insb
imul
outsl
mov
xchg
push
adc
loope
pusha
into
or
cmp
lret
cld
mov
jnp
xchg
inc
pop
xchg
push
xor
outsb
dec
mov
lds
out
arpl
push
jne
lea
xor
dec
imul
dec
mov
sub
mov
insb
push
mov
inc
add
xchg
or
test
push
orl
push
cmp
pop
pop
out
mov
addl
push
mov
dec
push
adc
cmp
inc
fstps
and
je
mov
daa
out
sub
pop
lds
movl
pop
repnz
pop
dec
jp
cs
adc
push
cmpsl
dec
outsl
daa
jmp
mov
es
and
andl
popf
xor
imul
pop
ret
dec
repz
je
push
push
add
adc
out
cs
jns
push
cltd
and
pop
mov
fldl
or
cmp
in
mov
in
cmpsb
add
sub
out
xor
push
data16
aad
xchg
dec
mov
mov
inc
popa
subb
fldt
sub
stos
test
std
pop
fxam
jecxz
sub
jne
fs
pop
add
out
push
xor
push
dec
jle
aam
cmpb
pop
dec
xor
fimull
jmp
xor
lds
iret
push
xor
lods
push
aas
movsl
xor
leave
out
das
xor
sub
movsl
mov
arpl
in
cli
xchg
out
push
int
repnz
sbb
add
lods
test
lods
mov
dec
jae
int
inc
pop
in
mov
jle
mov
cmp
jp
movsb
sahf
jmp
out
or
adc
imul
loopne
aas
jge
je
test
xchg
popa
push
pop
jge
adc
sbb
scas
lds
fwait
ljmp
hlt
add
fdivrl
or
xlat
movsb
insb
lock
popa
sbb
lock
jl
aaa
js
xchg
das
pushf
cs
lods
scas
or
push
stc
ja
add
stos
movsb
pusha
fidivs
or
enter
out
clc
inc
mov
imul
sub
fwait
popf
mov
repnz
cmp
mov
subb
repnz
out
inc
in
and
pusha
xchg
sbb
lcall
aad
push
adc
jb
aad
sbb
and
loop
pop
push
movsl
dec
out
cld
pop
inc
mov
sub
adc
sbb
call
inc
scas
inc
mov
adc
push
int
push
sub
pop
sub
les
ret
shrl
lcall
lahf
cltd
push
sub
adc
inc
fistpll
cmpsl
lods
imul
sub
sbb
mov
lods
shrb
popa
xlat
mov
pop
js
sbb
pusha
mov
rorb
inc
mov
int
pop
xchg
out
adc
push
and
push
cmp
mov
in
dec
fnstcw
orl
call
push
in
adc
and
add
sub
xchg
lret
xchg
int3
ljmp
into
mov
mov
iret
rcrb
mov
testb
lods
jg
adc
cs
loope
loope
and
xor
lcall
outsl
stos
lret
dec
int3
pop
jno
fwait
ret
lds
pop
lcall
jne
jne
sub
repnz
add
arpl
jg
dec
insl
add
bound
jle
hlt
mov
shlb
mov
sbb
js
cmp
sub
fcmovnbe
xchg
fisubl
or
popf
insb
sbb
xor
ret
das
fisttpl
sahf
mov
fiadds
loopnew
cmp
fidivrl
shll
jmp
jb
cmp
popa
loopne
sbb
ret
pop
loope
xlat
sub
imul
fistpll
mov
and
and
jge
mov
dec
xchg
test
dec
ss
push
push
cld
sbb
mov
je
pop
jb
jl
mov
aad
push
lret
cld
push
sbbl
leave
lock
mov
mov
xor
cmp
jne
int
cmp
and
int
jne
mov
sbb
out
clc
adc
add
jp
loope
jne
ljmp
dec
fsubl
andl
xor
jb
mov
fs
jle
push
idivl
loop
mov
lret
incl
lahf
popf
hlt
nop
push
push
sbb
pop
and
sbb
inc
or
pop
nop
pop
jecxz
outsb
daa
outsb
repnz
repz
sbb
or
fisubrl
shr
cld
jp
es
es
push
arpl
bnd
jns
lds
jg
int3
fsubl
pop
adc
fcmovnu
sub
clc
and
out
stos
das
fstl
mov
push
xor
into
jae
data16
xor
fsubrl
clc
test
mov
adc
lret
jge
push
lahf
jb
repz
mov
fidivrs
push
mov
inc
push
pop
ret
pop
loope
inc
push
add
mov
add
mov
int
std
orb
popf
mov
adc
sbb
xchg
inc
std
je
inc
mov
cmp
xchg
xchg
jp
cmp
pop
int3
fldt
and
iret
out
fisttps
in
cmpsl
call
xchg
aad
cmpsb
das
pop
xchg
dec
addr16
repz
arpl
pop
jge
std
inc
popa
cmp
es
lret
sti
and
jae
jle
push
pop
push
data16
and
cld
pop
sbb
ficoms
sbb
jecxz
mov
push
pop
in
jns
test
sarb
mov
jb
enter
cmp
xchg
add
popa
arpl
mov
mov
loopne
cmp
and
orl
cmpsl
fdiv
push
data16
hlt
mov
or
mov
xchg
sti
sub
test
es
int3
mov
sbb
je
insl
aaa
daa
jae
mov
lea
or
pop
cwtl
mov
pop
or
or
inc
nop
bound
pushf
adc
dec
pop
nopl
idivb
jmp
add
sbb
fcomps
pop
sub
negl
lret
testl
push
mov
test
mov
pop
mov
xor
int3
or
add
ljmp
std
imul
and
pop
lcall
imul
xor
sbb
popa
jmp
ljmp
mov
negb
cmp
inc
imul
aad
in
lcall
icebp
test
shrb
add
les
int3
cmp
insl
xchg
jl
pop
lahf
fcmovu
into
aas
imul
cmp
cmc
hlt
lds
sbb
xchg
cli
repz
xchg
aad
pop
bound
sub
dec
call
jns
jecxz
mov
lock
jbe
addl
push
pop
outsl
jp
icebp
jne
xchg
jecxz
sbb
inc
mov
lcall
sub
lret
mov
push
fisubs
shlb
ds
leave
lds
in
mov
out
cwtl
out
in
push
adc
jb
mov
jns
sbb
mov
xor
pusha
js
out
xchg
jb
dec
jae
imul
je
or
sub
gs
pop
mov
nop
pop
enter
dec
testb
inc
arpl
adc
testb
mov
movsb
inc
pop
fcmovbe
pop
rolb
fiadds
in
mov
inc
dec
lods
sahf
test
fwait
xchg
hlt
imull
insb
aaa
stos
pop
ret
mov
jecxz
js
shl
jno
loop
xor
sub
fnstenv
xchg
adc
jo
mov
stos
cmp
sbb
dec
xchg
adc
pop
cmp
fsubrs
mov
daa
adc
sbb
lret
inc
mul
lcall
jle,pt
loop
add
mov
ja
imul
pop
push
lcall
cmp
addr16
lock
scas
mov
jmp
pop
jne
inc
pop
mov
push
mov
filds
shll
mov
gs
push
in
frstor
loopne
adc
dec
mov
xchg
add
jp
movsl
stc
les
andb
ficoms
mov
push
mov
outsl
iret
fldcw
stc
pop
fsubrs
ficoms
nop
pop
push
stc
inc
out
sbb
cld
and
cmp
mov
or
in
dec
push
and
jge
stos
call
test
cwtl
arpl
add
or
jmp
loope
or
std
xor
jmp
pop
fmulp
scas
cli
jp
adc
push
mov
icebp
out
push
cmp
out
arpl
aam
shll
cmpsl
mulb
mov
stc
adc
rol
dec
jns
les
outsl
mov
sub
xchg
cmp
jmp
lret
or
shl
jl
mov
inc
xlat
lahf
lahf
jne
or
ds
inc
pop
sub
js
fimull
jne
lcall
jg
loope
les
cli
cltd
scas
fisttps
and
ljmp
mov
or
jl
mov
push
cwtl
sbb
test
int3
mov
neg
fidivl
or
xor
aam
loop
mov
jno
mov
test
cmpsl
pop
stos
and
fistpl
inc
iret
cmpsl
dec
test
cmp
dec
sub
xlat
sbb
test
mov
push
add
gs
sub
pop
xor
lea
dec
push
subl
rcrl
pop
sub
adc
movb
shlb
std
xor
jp
stc
mov
adc
adc
fnstsw
jno
pop
sbb
cmp
mov
mov
and
sbb
sbb
sbb
int
dec
loopne
imul
pop
rcrl
rcl
xor
enter
fcoms
mov
cwtl
aas
negl
dec
bound
lds
in
js
repnz
cmp
clc
ja
ja
pop
push
inc
mov
mov
dec
test
or
and
mov
sub
popf
nop
jle
iret
lret
cltd
dec
push
adc
cmp
lcall
jo
mov
fdiv
ljmp
mov
gs
inc
nop
popa
out
adc
xor
and
jo
xlat
out
cmp
pop
mov
pop
lret
xor
adc
mov
xlat
or
sbb
push
jne
popa
push
inc
and
lcall
jnp
xchg
jns
andb
jne
adc
fbstp
rorb
pop
xor
stos
pop
mov
xor
xchg
psubusw
pop
ficompl
int3
mov
jo
add
inc
mov
clc
dec
pusha
dec
imul
dec
dec
push
sub
cmp
sbb
cmp
add
test
mov
and
cmpsb
or
adc
out
jg
in
xor
pop
and
push
aad
or
jns
movsl
sub
movsl
fstp
fimull
cmp
jmp
jbe
dec
pushf
xchg
inc
repnz
adc
xor
repz
fdivrs
fisttpll
pop
fldt
mov
xchg
pop
xchg
mov
imul
mov
fwait
push
xchg
lock
pop
mov
inc
mov
xor
imul
outsb
insb
xchg
repz
push
insl
sarl
push
sbb
mov
mov
dec
sub
inc
jmp
add
in
sti
pop
sbb
or
movsl
sub
ss
loop
fiadds
lea
sub
out
icebp
cmpsl
cmpsb
jge
cmp
ljmp
test
sahf
insl
in
cmp
cmp
jnp
mov
adc
les
dec
outsb
ficoml
mov
jbe
rolb
movsl
or
loop
cmp
mov
ret
sub
and
mov
ds
xchg
dec
popa
jp
mov
cli
dec
rcll
aad
dec
push
mov
cwtl
stos
fwait
push
and
lcall
idivb
pop
lods
test
pop
mov
add
cmpsb
sbb
imul
sub
movsl
xchg
xchg
shrb
lds
sbb
cmp
jo
or
movb
out
pop
lea
pop
ja
add
push
sbb
repnz
push
and
xor
inc
push
lea
dec
push
ret
add
xchg
or
fimuls
clc
leave
mov
movsb
xlat
dec
scas
mov
out
adcl
test
repnz
fwait
inc
dec
mov
jp
out
jle
std
cmp
mov
pop
movsl
mov
and
ss
aaa
adc
dec
hlt
xchg
pop
mov
insl
sbb
sti
sub
mov
cli
sbbl
cwtl
inc
mov
into
pusha
pop
push
xor
xor
or
scas
inc
push
sub
xchg
xor
cmc
mov
and
mov
push
adc
sahf
lds
mov
xchg
lock
adc
rolb
xchg
pushf
scas
into
mov
pop
cmpsb
ja
and
aam
dec
sbb
in
movsb
lret
in
or
ficompl
movsb
orl
scas
cmpsl
in
lea
pop
je
aad
sbb
push
mov
inc
cmp
jne
aas
cmpsb
sbb
or
pushf
xchg
orl
daa
adc
jbe
adc
lahf
fbstp
mov
adc
jecxz
inc
mov
aad
cld
pushf
push
sti
lock
in
sahf
les
jle
fcmovbe
negb
mov
addr16
in
test
sbb
jnp
adc
push
add
aaa
rclb
sub
adc
xor
pop
ror
pop
faddl
popf
mov
cmc
pop
outsb
sub
stc
jle
jge
adc
or
repnz
cmp
mov
dec
push
cmpsl
and
stc
xor
shlb
stos
sbb
loop
mov
or
jbe
inc
jl
mov
sub
add
mov
add
mov
lods
push
mov
sub
adc
fistpll
xor
dec
jecxz
cmpsb
int
shrl
fcoml
fimuls
cmp
cmp
jp
sarl
stos
xor
pop
push
clc
xchg
pop
pop
fildll
sarl
or
and
push
or
cld
repnz
lret
ljmp
inc
jbe
mov
xor
in
outsl
ss
mov
xchg
mov
ds
pop
imulb
and
or
ror
shlb
in
mov
adc
fwait
jle
lret
pop
and
sub
mov
jecxz
push
fwait
mov
mov
or
mov
mov
insb
sub
cmpsb
out
pop
mov
push
cli
jnp
cmp
mov
fidivrl
sub
jbe
sub
stc
pop
dec
jmp
subb
test
or
pop
xor
je
and
daa
mov
and
fisubrl
lcall
mov
adc
jmp
popf
leave
mov
pop
inc
pop
xchg
pop
sub
xchg
pop
out
sbb
push
lahf
rcl
mov
adc
xor
lods
push
cmc
outsl
shlb
mov
bound
inc
shlb
sub
lahf
or
xchg
mov
and
and
icebp
sbb
mov
repz
fldt
cmp
push
clc
dec
fs
mov
add
stos
test
dec
clc
rcr
test
mov
test
stc
mov
shr
ja
cmp
and
jns
push
add
aaa
dec
jmp
icebp
arpl
gs
add
dec
mov
sub
mov
or
mov
sub
aad
mov
je
cmpsb
or
xchg
dec
es
jno
push
jns
scas
mov
jne
hlt
cwtl
cltd
xchg
cs
nop
mov
fsts
jne
lcall
or
mov
outsb
and
fwait
into
xor
test
je
adc
std
scas
push
push
cmp
lods
cltd
mov
pop
push
push
sbb
push
mov
fwait
out
and
sti
pushf
je
das
testb
icebp
push
sbb
sahf
mov
or
xchg
jbe
dec
jl
mov
popl
fs
aam
adc
xchg
cmc
mov
xchg
xor
jecxz
jmp
cwtl
push
xor
lret
or
adc
scas
cltd
adc
or
je
ss
divb
fistps
sti
fsts
leave
movsb
das
inc
xchg
jae
and
sbb
mov
pop
test
ret
fs
cld
inc
lds
mov
call
mov
sbb
adc
pop
sbb
sbb
xchg
jnp
call
scas
movsb
dec
cmp
jg
adc
and
jge
sbb
mov
adc
or
push
cltd
arpl
dec
mov
jmp
cwtl
mov
dec
sub
pushl
adc
int
arpl
loop
mov
cmpsl
or
sarl
xchg
xor
aas
cmpsl
imul
inc
mov
adc
movl
jle
dec
data16
jge
int
insl
cmp
sti
add
and
mov
xchg
test
add
cltd
aad
cmpsb
mov
ja
jg
fstl
add
mov
int3
xchg
into
test
sub
lcall
sbb
nop
mov
out
pop
sbb
sub
adc
pop
js
sub
push
les
and
sub
xchg
xchg
jle
decl
jg
dec
xor
cli
dec
mov
out
fstpt
jl
stc
adc
nop
mov
xor
test
pop
mov
cmp
insb
subb
int
addb
mov
lods
sahf
scas
gs
sahf
stos
pop
push
dec
push
push
lret
stos
push
mov
or
pop
mov
mov
scas
mov
movsb
cmp
push
xor
pop
mov
xchg
jne
add
jmp
push
sbb
iret
xlat
jbe
insl
stos
push
pusha
jl
xor
jbe
mov
mov
call
data16
out
inc
add
xlat
lret
ret
aaa
orl
jb
fcmovu
pusha
out
mov
pop
cltd
test
std
ja
stc
loope
lea
sub
sarl
call
dec
fadd
subb
pop
push
call
cli
cmpsl
out
repz
mov
in
inc
mov
rolb
repnz
lcall
stos
stc
mov
xchg
popa
scas
or
arpl
mov
sub
ljmp
jmp
cmp
mov
jns
jg
mov
or
or
filds
js
insb
imull
xor
sbb
popf
clc
mov
mov
sub
lods
je
push
scas
fdivl
jbe
adc
test
mov
bound
stc
mov
cs
fmul
mov
cs
and
lods
mov
mov
gs
addr16
hlt
pusha
std
xchg
mov
xor
mov
mov
mov
push
aad
insl
sub
mov
loopne
lods
mov
ss
ret
in
ret
dec
fucomp
xchg
mov
and
adc
insb
icebp
xchg
out
imul
fsubs
cltd
aam
push
pop
xchg
test
mov
sti
adc
mov
inc
loop
xor
mov
out
test
dec
stc
pop
cmp
mov
repz
clc
inc
iret
cmp
inc
pop
iret
into
les
lds
xchg
cmpsb
mov
test
les
mov
sbb
dec
cwtl
jne
movsb
mov
es
pop
xlat
lahf
xor
out
mov
cmpsl
test
fldl
lahf
cs
movsb
cli
dec
lds
sti
test
push
shl
xor
jle
jno
push
out
icebp
popf
mov
sbb
adc
inc
adc
in
mov
out
or
shlb
std
cmp
or
or
sbbl
mov
in
lahf
dec
shr
pop
std
mov
and
stc
mov
lods
jle
pop
dec
xor
inc
dec
cwtl
int
jp
cmp
fistps
cmp
and
mov
add
jae
cmp
andb
jo
push
pop
lret
imull
into
mov
or
pop
or
cmp
push
inc
frndint
mov
jmp
mov
mov
cmp
push
lea
cmc
push
icebp
jae
mov
loopne
ds
push
lods
pop
inc
mov
dec
outsb
mov
ss
mov
lods
xchg
rorb
daa
cmpsb
adc
and
mov
pop
mov
icebp
jg
push
mov
jl
idivb
adc
lods
dec
pop
in
xchg
iret
test
rolb
adc
adc
mov
shll
lock
inc
fnsave
fsubs
sbb
rolb
sbb
dec
mov
push
testb
rclb
int3
ret
dec
inc
lds
ret
adcl
push
nop
inc
cmpsb
repz
xchg
adc
adc
or
xchg
xchg
dec
idiv
inc
cmp
xlat
dec
aas
adc
addr16
push
insl
push
out
xor
add
ret
lods
rolb
inc
adc
ljmp
push
mov
jne
cmpsb
push
jl
stc
and
insb
adc
cmp
push
cmpsb
pop
push
push
ss
pop
and
and
push
pop
cmpl
popa
push
das
cmp
pop
scas
push
xchg
mov
rcr
mov
sahf
xor
sub
push
lea
mov
pusha
sbb
xsha256
cmpsb
push
pop
inc
sahf
test
jb
jmp
stc
loopne
mov
or
xchg
mov
orl
enter
mov
pop
or
pop
push
xchg
scas
popf
mov
int3
inc
inc
pop
daa
cmpsl
or
inc
sbb
into
push
imul
jb
mov
jle
mov
pop
scas
mov
pushf
jle
dec
pusha
inc
or
outsb
mov
and
inc
sahf
mov
mov
test
inc
test
mov
dec
mov
mov
mov
sahf
in
cmp
and
call
icebp
outsb
roll
pusha
pop
adc
fdivl
xlat
outsb
fwait
loope
popf
sub
cli
in
subb
and
leave
sub
clc
mov
jp
xor
mov
iret
test
jbe
cmp
push
and
cmpsb
pop
orl
fxch
stos
mov
push
mov
bound
popa
or
or
loopne
cmp
pop
adc
sub
pusha
cmpsb
sbb
dec
cmp
fisttpll
cwtl
scas
lcall
mov
jb
in
sti
or
push
test
push
aam
xchg
cmpsl
or
and
lret
add
or
fsts
test
inc
and
adcb
pop
movsl
data16
rorb
in
insb
cmpsb
sub
loopne
dec
add
or
cld
movb
ficoml
mov
push
xor
pop
repz
iret
mov
daa
push
std
dec
inc
adc
push
and
xchg
insb
subl
insb
dec
jne,pt
std
xchg
shl
push
popa
adc
out
bound
jo
cmp
adc
pop
stos
scas
lds
cmc
sbb
xchg
aad
mov
lret
in
stos
js
dec
insb
movsb
fidivrl
jo
ljmp
cmp
add
jmp
lret
icebp
pop
mov
push
pop
inc
enter
dec
mov
jecxz
ja
sbb
inc
inc
dec
jae
xor
mov
fwait
push
cmp
inc
mov
fisttpll
cmp
jmp
cmp
lods
mov
ss
lcall
push
xor
sahf
adc
push
dec
or
push
mov
jecxz
adc
xor
shlb
mov
mov
inc
enter
mov
or
cwtl
dec
jle
and
push
mov
push
leave
jmp
daa
lret
rcl
cmp
test
ljmp
cltd
popa
or
gs
shrl
pusha
push
pop
aaa
adc
fsubs
cmp
aam
sbb
shl
mov
test
add
fcoml
cmpsl
scas
push
sbb
ja
mov
xor
sub
and
sub
push
jne
push
sbb
mov
hlt
sub
test
add
push
sub
pop
mov
sub
nop
aaa
pop
hlt
repz
xor
push
fsubrl
fcomps
jb
icebp
cmc
scas
imul
ficoml
cs
loopne
pop
notl
mov
cwtl
cli
test
inc
nop
loop
jmp
push
add
mov
arpl
dec
inc
adc
and
jle
jae
mov
mov
mov
cmp
into
ss
adc
dec
data16
lcall
xchg
pop
sub
mov
shll
lds
leave
push
mov
mov
rcrl
add
xor
or
push
adc
pop
jne
cmp
lcall
xchg
shll
cmpsl
dec
add
adc
aad
mov
rorl
gs
pop
outsl
imul
stc
scas
add
push
pop
xlat
fsubrs
cmpb
aaa
test
cmpsb
mov
popa
push
dec
sub
cmp
mov
movb
pop
out
sbb
daa
rcll
and
adc
push
or
jl
mov
dec
jp
xor
jno
pop
or
testl
sahf
arpl
fcmovnu
faddl
pop
push
test
sub
stos
cltd
int
popa
jae
lds
pop
pop
mov
in
test
shll
or
mov
fwait
and
scas
sti
mov
push
imul
aas
out
jp
mov
push
mov
dec
mov
add
jp
jl
mov
pop
in
stos
xchg
mov
push
inc
mov
incl
xchg
mov
push
out
sarl
rolb
jl
pop
lea
jbe
dec
mov
add
cltd
xchg
or
or
bound
pop
sti
jne
mov
testl
pusha
cwtl
dec
fisubrs
inc
inc
xchg
and
mov
or
jg
cmp
mov
pop
push
jb
xlat
push
arpl
aad
inc
sahf
pop
ja
in
jp
rorl
xor
roll
and
test
jns
ljmp
dec
das
outsb
inc
xorb
adc
push
cmp
les
and
dec
mov
repnz
or
loop
mov
sbb
jns
stos
mov
outsl
popfw
sub
aaa
stos
aaa
jp
jmp
sub
iret
jne
dec
mov
je
sbb
lret
fildl
cs
sub
push
mov
cmpsl
jno
xor
ja
cmp
js
or
xor
cwtl
mov
mov
sbb
push
pushf
cmp
ret
and
mov
call
popa
cltd
shrd
cmp
flds
idivb
in
outsb
fbld
inc
pop
hlt
andl
das
adc
sbb
push
insl
mov
jne
jecxz
inc
enter
dec
inc
int
std
ret
inc
jno
les
lahf
adc
sub
mov
lcall
pop
or
add
lea
jbe
adc
inc
in
ret
lahf
in
insb
mov
clc
mov
mov
xor
mov
mov
adc
push
popf
inc
adc
cmp
fimull
cmovnp
std
push
push
clc
cwtl
jbe
dec
sub
test
and
divl
push
dec
into
fisubs
sub
inc
mov
out
dec
loopne
cmp
stos
push
pop
lock
aad
or
cld
ret
cmpsl
nop
fs
in
fmuls
cmpsl
mov
sti
and
jb
jno
and
dec
pop
dec
addr16
mov
cli
push
leave
leave
mov
out
inc
int3
cmc
pop
orb
scas
mov
sbb
int3
sbbb
push
insl
fidivs
fimuls
std
lods
xchg
jbe
ja
and
mov
mov
sbb
adc
fcmovnb
insl
sbb
sub
pop
mov
inc
ja
repnz
and
sub
into
jg
cmc
loopne
mov
lods
mov
sub
mov
out
pop
scas
xor
add
arpl
imul
mov
cld
punpckhdq
outsb
mov
mov
cmpl
fildll
mov
mov
add
push
and
test
cwtl
daa
xlat
or
xlat
aad
push
std
push
fcoml
xchg
pop
enter
mov
xchg
mov
jg
insb
out
test
xlat
add
dec
xor
jo
or
or
inc
into
jnp
lods
outsb
test
loopne
xor
cmc
sbb
stos
adc
shrl
rcrb
push
pop
stos
test
pop
push
cmc
or
push
add
xchg
dec
popf
push
sbb
or
add
rol
jmp
mov
arpl
movsb
leave
into
fwait
dec
jmp
fst
add
and
out
adc
rolb
push
push
loop
loop
xor
idivb
insl
fidivl
mov
inc
jg
jge
mov
xchg
adc
dec
andl
jl
icebp
jnp
or
mov
movsb
rcl
jp
jns
roll
clc
mov
sbb
int
jns
xor
scas
inc
sbb
pusha
jge
addl
xlat
into
or
rolb
cmc
add
aam
mov
push
mov
adc
push
aaa
das
into
cmp
push
test
mov
jge
lret
iret
cltd
test
mov
sahf
xchg
ljmp
pop
xchg
ret
movsl
mov
insb
aaa
call
xchg
dec
sti
jle
push
imulb
pop
inc
jbe
rolb
popa
shl
xor
push
mov
scas
jge
adc
jne
add
jmp
fwait
sahf
mov
cmp
push
hlt
pop
into
mov
inc
pop
loop
sbb
cmp
inc
addr16
repnz
clc
out
push
mov
add
stc
inc
adc
lahf
xor
scas
insb
bound
pushf
lods
stc
sahf
in
scas
cmp
pop
inc
adc
mov
fnstenv
or
sub
adc
repnz
sti
dec
sti
jmp
and
js
movsb
inc
sbb
cmp
inc
cltd
xchg
test
and
adc
out
mov
sub
daa
mov
movsb
in
adc
gs
je
mov
add
inc
jnp
mov
xlat
popa
or
adc
xor
jg
jle
into
sub
push
mov
pushf
ret
repnz
lock
mov
mov
int3
test
out
mov
inc
mov
js
arpl
adc
nop
push
sahf
jg
inc
pushf
mov
fs
out
sbb
fcmovnu
sbb
fiaddl
loope
rcl
ret
inc
sti
xchg
cmp
cmp
jnp
ss
fabs
cmpl
loop
rcll
push
scas
pushf
push
push
xor
push
or
cmc
inc
adc
xor
jb
inc
jae
and
rcl
mov
mov
sti
dec
xor
icebp
mov
and
push
out
je
mov
ss
mov
shll
lds
pop
cmpsl
insb
popa
or
cld
xchg
add
jmp
das
xor
inc
rorb
cld
push
cltd
push
pop
mov
in
int3
mov
inc
dec
loop
rcrl
pushf
jle
mov
and
mov
inc
scas
flds
aam
push
outsb
shll
cmp
into
out
imul
push
out
mov
dec
mov
inc
push
push
es
xchg
dec
or
mov
jne
mov
stc
sbb
xor
out
mov
repz
jno
sub
cli
add
lcall
cmp
cmp
out
ljmp
arpl
out
jl
movsl
cld
mov
dec
add
add
insl
movsl
stc
in
out
xchg
clc
fstpt
pop
sub
test
or
rorb
out
adc
or
lret
cltd
lahf
xor
xor
je
sbb
push
xchg
and
cmc
dec
pop
add
arpl
iret
jl
add
imul
add
ret
push
cli
push
mov
sbb
jmp
xchg
add
fistpl
clc
push
sbb
int3
mov
ffreep
test
add
xchg
push
ror
push
jge
fnstcw
mov
xor
psraw
dec
xor
sbb
mov
push
inc
xor
mov
push
aas
testb
sbb
popa
lcall
ret
mov
les
lods
or
pop
push
in
test
cs
lea
je
icebp
rcrb
ljmp
testb
loope
pop
fsub
push
sbb
jo
dec
test
inc
sbb
fildl
mov
inc
test
xor
enter
jmp
mov
int
dec
bound
scas
inc
jmp
mov
lcall
mov
push
in
iret
icebp
outsb
jb
rolb
cmpsl
stc
in
gs
movsb
insl
xchg
push
dec
jp
imul
push
mov
imul
call
mov
scas
data16
inc
push
inc
inc
adc
ss
ss
push
mov
mov
push
into
dec
jp
clc
adc
jne
loope
fidivs
mov
cmp
and
push
or
add
push
and
dec
dec
stos
idivb
clc
add
jae
or
dec
jecxz
mov
mov
push
sbb
mov
outsl
lds
daa
dec
and
mov
mov
sub
loope
jns
stc
mov
or
insl
test
sub
xchg
xchg
sub
and
jecxz
push
arpl
popf
icebp
pop
pusha
pop
cmp
and
pop
ret
test
xchg
push
ljmp
rcr
push
movsb
cld
pop
cmp
cs
test
push
mov
cs
dec
mov
push
dec
call
scas
frstor
dec
addr16
mov
ljmp
pop
out
mov
repz
cld
xchg
lds
fadds
addr16
pushf
jecxz
rolb
clc
xchg
add
and
mull
sbb
ret
int3
cmp
test
push
gs
mov
and
push
add
fiadds
loopne
mov
inc
cmp
andl
pop
inc
sub
icebp
ret
ds
mov
outsb
idiv
and
mov
jb
fwait
mov
roll
sbb
xlat
aas
cmp
push
dec
fidivrl
fcmovnb
cmp
push
fs
mov
sub
jbe
in
aam
sbb
jo
cld
and
push
repz
je
dec
or
xlat
jl
pop
nop
pop
adc
sub
aad
shrl
jp
jmp
pop
les
fists
mov
xor
jne
mov
fwait
jge
push
sbb
push
sub
push
pop
lods
and
and
xor
mov
jbe
xlat
jp
xchg
push
rcr
mov
mov
arpl
and
das
ret
jecxz
push
xor
lret
mov
in
adc
inc
scas
nop
pop
aad
popf
addr16
fsubl
jl
fcoms
iret
push
dec
sbb
push
xor
mov
cmp
mov
fcomps
sbb
xor
pop
mov
cmp
mov
loop
lea
arpl
arpl
push
sub
stos
out
fs
fcompl
xchg
clc
jbe
mov
xor
pop
js
jecxz
fdivrl
stos
addl
dec
jp
sbbb
mov
in
cmp
jbe
fldcw
icebp
into
jle
clc
popl
test
cwtl
in
lret
inc
lds
icebp
add
pop
mov
mov
xchg
mov
adc
sub
or
nop
dec
add
xchg
in
cld
jne
dec
pop
jmp
out
aas
push
add
xchg
cld
cmp
cmp
jge
mov
cmpsb
cmp
cmpsl
shr
cltd
cmp
pop
xchg
or
divl
fsub
mov
es
dec
dec
out
popf
repnz
mov
sub
adc
dec
rcrl
out
iret
outsl
mov
andl
ljmp
ljmp
jp
int
arpl
fsin
repz
leave
das
xchg
lds
insb
int3
jecxz
orb
fstps
je
sbb
mov
pop
imul
jl
ljmp
popf
or
inc
push
xor
adc
mov
sub
mov
clc
push
out
lcall
xchg
mov
dec
push
lahf
mov
in
mov
xchg
scas
pop
sub
sahf
push
inc
sub
xchg
setae
rorb
sahf
sbb
pop
bnd
adc
outsl
add
xchg
xor
adc
loop
stos
xor
sbb
fldcw
js
and
add
and
jae
lock
sub
xchg
inc
pop
adc
lret
mov
call
iret
mov
aad
jg
scas
pusha
call
pop
lahf
fisubrl
stos
or
imul
dec
mov
inc
flds
mov
movsl
xor
stos
push
adc
xor
xor
push
mov
mov
aad
mov
adc
into
pop
jb
mov
inc
data16
scas
pop
inc
lret
jl
inc
jo
jle
push
mov
mov
add
test
cmc
addr16
nop
and
dec
sub
daa
test
enter
sbb
mov
push
mov
push
xor
loop
out
ljmp
dec
jnp
push
xor
sub
imul
jmp
cmpsb
mov
jle
and
dec
push
ror
shrb
cwtl
fcoml
outsb
in
sbb
mov
dec
sahf
and
inc
jmp
xor
cmp
repnz
or
jle
cmp
dec
femms
test
std
or
or
movsb
dec
sbb
insl
fsubr
dec
dec
adc
mov
int
xchg
sti
pop
cmp
jno
repz
xlat
or
pop
push
addl
fstpl
leave
fwait
imul
xlat
aaa
jb
call
inc
lea
xor
enter
lahf
adc
imull
mov
movsb
or
push
add
mov
imul
xor
push
js
mov
cmpsb
dec
les
push
jecxz
sbb
and
out
pop
fidivs
push
push
mov
mov
fldenv
and
in
or
and
sbb
shl
pop
xor
inc
movsb
mov
xor
inc
fldcw
or
jae
sbb
pop
sti
adc
imul
jo
mov
mov
pushf
xor
lea
mov
sbb
adc
loope
lret
sub
or
ret
or
pop
adc
rolb
and
jecxz
into
mov
sbb
aad
push
mov
xchg
jns
ss
rcll
xlat
in
into
mov
dec
test
xchg
pop
push
and
scas
mov
inc
mov
aad
xchg
ds
es
fnstenv
xchg
rep
push
jne
xchg
xor
das
xchg
pop
mov
xorb
push
xor
jmp
jno
dec
or
add
xchg
ret
out
out
add
dec
lret
loop
pop
cli
cmp
fwait
xchg
pop
cmp
mov
jmp
bound
mov
scas
insb
aas
push
ss
mov
enter
push
pop
mov
xor
cmp
inc
icebp
es
mov
jp
jae
push
pop
xchg
ss
lods
mov
dec
stos
inc
lea
fwait
xor
jno
jp
fistpl
xchg
mov
cmp
jge
push
ret
jmp
xchg
fldl
dec
xlat
out
sbb
inc
jmp
jno
sahf
jns
sub
dec
loopne
pop
movsl
mov
ljmp
bound
je
lock
mov
imul
xor
xchg
ret
push
and
mov
rorb
out
xchg
les
jg
inc
mov
pop
push
imul
mov
std
push
stos
cmp
mov
in
push
pop
pop
mov
sbb
jo
xchg
int3
jg
ljmp
out
insl
mov
shrb
stc
arpl
lahf
cmpsl
mov
mov
xor
and
fs
rolb
sub
or
inc
loopne
add
or
dec
loopne
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
