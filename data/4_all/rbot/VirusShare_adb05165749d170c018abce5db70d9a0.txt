ds
in
mov
dec
push
aad
int3
idivb
xor
aaa
lret
imul
and
mov
mov
mov
sub
push
arpl
in
inc
jmp
rclb
mov
fwait
dec
pusha
lcall
xchg
sbb
sti
inc
xchg
cmp
gs
and
shl
test
jmp
icebp
mov
mov
dec
insb
out
dec
incb
inc
scas
test
nop
sbbl
sub
pop
sub
dec
add
push
mov
inc
in
jo
mov
xor
mov
addr16
mov
or
cmp
lods
push
jb
and
mov
or
cmp
xor
xor
sub
mov
mov
fidivl
gs
hlt
lods
xchg
rcrb
mov
jecxz
lods
mov
push
or
fistpll
dec
push
adc
in
or
cld
sbb
mov
in
mov
lret
or
lods
mov
xor
mov
outsl
cli
and
idiv
adc
add
iret
and
sub
test
push
pop
jnp
push
mov
adc
cld
lock
fsubrp
cli
cmp
sbb
cmp
pop
add
push
out
mov
or
out
stos
shr
int3
fdivr
movsl
push
push
adc
inc
clc
inc
push
jge
inc
cltd
les
into
mov
bound
je
push
jg
lea
shl
inc
cmpl
jbe
les
xor
mov
jae
xchg
push
out
shlb
pop
divb
ljmp
test
lods
jb
int
idivb
icebp
xchg
jne
aas
loope
inc
stos
ret
out
fidivrs
sub
ss
lods
cmpsb
push
test
inc
xor
push
sub
sub
adc
fidivs
imul
sahf
sbb
leave
sahf
fcompl
test
adc
jle
xchg
pop
jno
adc
or
rolb
cmp
or
shl
jecxz
aas
orl
lods
or
subl
imul
or
je
and
testb
ds
push
push
jle
inc
out
cmp
or
cmpsl
das
int3
sbb
push
cs
call
fisttps
repnz
arpl
push
sbbl
xchg
mov
decl
jns
mov
shl
cmp
mov
out
add
imul
inc
jnp
and
addr16
orb
jne
dec
mov
xchg
jae
rolb
es
adc
cmp
in
push
aam
enter
cli
outsl
insl
bound
sti
xchg
push
into
mov
xor
mov
adc
fisubrl
fisttpll
lds
xchg
add
push
sbb
push
cli
adc
mov
inc
cmpsl
jno
push
inc
mov
out
fildl
int3
sub
popf
jno
and
jl
add
mov
leave
pop
adc
sbb
leave
gs
push
sbb
dec
mov
js
push
jle
subl
cmp
dec
sbb
ljmp
mov
stc
ljmp
dec
mov
jne
inc
out
pop
repnz
int
pminsw
pop
mov
or
mov
pop
sbb
fnstenv
lea
or
sbb
repz
jo
or
addr16
out
cld
imul
fists
out
js
mov
fnstsw
push
pop
setns
out
std
lds
incb
enter
fbld
or
test
test
outsl
pop
adc
push
fwait
arpl
inc
hlt
lea
loopne
and
imul
ds
outsb
mov
loope
lret
jbe
xor
mov
pop
mov
jne
arpl
inc
xchg
or
push
pop
es
mov
push
shrb
jo
adc
xchg
or
pop
pop
push
xor
cmp
std
cmp
dec
pop
push
stos
inc
aad
test
cwtl
ds
outsb
test
cmp
mov
dec
cmp
adc
add
jbe
mov
push
js
jbe
mov
enter
in
push
cmpsl
filds
aaa
adc
xor
imul
repnz
sbb
fs
sbb
or
sub
pop
sub
inc
insl
lcall
lds
shrb
mov
sbb
lcall
cmp
call
fdivrp
out
dec
push
stos
push
out
lret
stos
rcr
sbb
cmp
in
insb
fbstp
fwait
fs
gs
aam
mov
mov
int3
push
fwait
popl
mov
ret
dec
xchg
adc
mov
adc
out
and
jg
repz
pop
pop
test
das
mov
cmp
fsubrs
icebp
iret
xchg
and
movsb
mov
pop
lret
repnz
xchg
dec
mov
or
rcrl
addr16
imul
in
fs
mov
jne
popa
pop
push
pop
jp
inc
inc
stc
sub
fs
cli
mov
and
popa
lds
add
sub
sub
inc
pop
fstl
adc
into
or
dec
push
pop
pop
mov
in
jl
daa
aam
lods
ds
out
iret
mov
je
dec
inc
sub
cld
xchg
mov
and
push
test
mov
pop
cmpsb
das
outsb
xor
cmp
mov
xor
xchg
test
outsl
xchg
roll
mov
jns
lock
lds
stos
mov
test
push
sbb
pop
bound
cmp
ss
or
adc
sub
push
dec
xchg
adc
dec
ss
push
dec
call
mov
cmpsb
cmpsb
xchg
leave
sti
mov
mov
inc
push
aam
pop
repz
dec
push
push
jp
pusha
push
movd
fistpll
movsb
jno
lea
fwait
aaa
or
stos
aas
jg
adc
movsb
pop
xchg
lods
inc
dec
lock
ror
pop
repz
int
adcl
jecxz
xchg
xchg
insl
or
add
int
insb
jo
sub
mov
jne,pn
pop
adc
xchg
inc
addr16
adc
ficompl
adc
sbb
ret
cli
fsubrp
mov
sbb
jecxz
xchg
dec
mov
push
jae
dec
or
cltd
jb
jno
lcall
cmp
and
cmp
push
test
add
add
das
inc
mov
divl
xlat
inc
out
mov
mov
pop
data16
dec
mov
mov
loop
lcall
xchg
pop
xchg
sahf
fisttpll
push
xchg
dec
pop
notb
mov
inc
mov
xchg
cmc
test
xchg
sbb
xchg
push
cmpsl
loopne
sub
sahf
xchg
insl
fmull
out
xchg
sub
inc
cmpsb
mov
push
cmp
pop
inc
into
out
cmpsb
shlb
aaa
in
xor
xor
out
sub
sbb
aad
add
mov
inc
dec
dec
mov
pop
pusha
repnz
push
test
arpl
xor
xor
push
and
or
mov
in
pusha
sub
push
dec
loopne
xchg
call
xchg
or
xchg
or
dec
xchg
imul
lahf
or
test
mov
data16
xchg
push
add
or
sub
test
jp
push
add
dec
jo
mov
test
xchg
pop
push
ror
xchg
aam
mov
cmp
or
mov
in
or
icebp
add
mov
aad
mov
pop
stos
pop
mov
xorb
scas
js
out
dec
shrb
sahf
jmp
repz
loop
sbbb
jg
jmp
cmp
mov
cmp
sub
cmp
or
ds
sub
movsl
sub
and
xchg
or
mov
std
adc
cmp
sbb
push
lcall
mov
insl
mov
in
out
out
mov
jbe
sub
fstl
movsl
mov
hlt
xchg
enter
adc
outsl
jg
jno
lods
xchg
pusha
out
mov
jbe
mov
iret
cli
and
rcll
push
out
xchg
jo
call
int
xchg
mov
mov
outsl
mov
xor
lods
ret
mov
subb
jge
fld
adc
repnz
cld
je
mov
cmpsb
mov
call
shlb
sub
jae
jnp
addr16
aaa
enter
xchg
cmc
aad
add
fidivrl
fucomi
sbbb
lods
mov
mov
div
test
test
lret
mov
std
jbe
cmp
mov
cltd
xchg
test
lcall
mov
or
mov
jnp
cmp
dec
jno
mov
jle
mov
es
and
sub
cmc
push
xchg
dec
imul
jmp
xchg
xchg
adc
int3
pop
mov
cmp
out
sahf
and
cmpsl
jae
movsb
pop
lcall
pop
cmp
jl
repnz
mov
sbb
loop
mov
sub
outsl
mov
dec
fcomp
jmp
leave
and
dec
loope
iret
js
xor
push
mov
insl
cmpsl
popa
js
mov
adc
sahf
push
xchg
out
icebp
and
inc
test
ss
and
je
in
loopne
cs
testb
jns
stos
in
and
iret
adc
pop
and
leave
popf
lock
cmpsl
in
mov
int3
sbb
fsubl
divb
push
lock
inc
xchg
adc
ret
dec
outsl
aas
mov
dec
dec
dec
pop
cmc
xor
pop
add
mov
push
jb
inc
or
loop
mov
jl
test
nop
icebp
inc
dec
cmp
jno
pop
popf
dec
nop
movsl
movsl
inc
je,pt
jg
ror
mov
and
shrl
or
cmc
popf
js
bound
adc
xchg
mov
sarl
xor
decl
adc
fldt
popa
out
dec
mov
xchg
aam
lahf
hlt
stc
cld
sahf
enter
mov
and
dec
mov
les
mov
push
lahf
outsb
ds
jg
cmpsb
add
mov
xor
dec
aad
movsl
dec
and
sub
arpl
push
in
scas
sub
dec
push
xchg
in
rcrl
jo
adcb
inc
repz
hlt
dec
push
lcall
les
inc
cmp
test
xor
jns
mov
cmpsl
lock
adc
clc
mov
push
lea
sub
push
pop
mov
fstl
addr16
clc
cmp
sbb
mov
push
mov
fisubrs
hlt
mov
cltd
das
in
dec
jecxz
jnp
adc
xchg
test
data16
mov
pop
dec
lea
outsb
cld
addr16
jns
repnz
out
inc
es
jnp
loope
inc
dec
fwait
rolb
jnp
fsubs
cld
or
add
arpl
sub
fnstcw
mov
call
sahf
xchg
push
rolb
xchg
dec
in
into
push
loop
sbb
add
mov
mov
mov
mov
out
test
dec
cs
jg
cmp
fcmovbe
xlat
ss
sub
arpl
pop
fsubrs
fwait
loopne
push
mov
andl
or
jge
adc
movsb
ficomps
adcb
and
jo
and
jge
push
mov
pop
pushl
test
push
push
jnp
cmpsb
ret
incl
adc
sub
sub
pop
pop
aas
jnp
into
mov
not
mov
pop
add
adc
cld
xor
popf
je
data16
sbb
mov
enter
sub
es
push
and
mov
push
pop
dec
mov
cwtl
inc
pop
cmpsl
sti
subb
cwtl
mov
sarb
sub
adc
add
xor
mov
in
mov
imul
stos
pop
xor
mov
push
fldcw
daa
and
fdiv
addr16
movsb
cmp
rcl
std
jecxz
lcall
sub
xor
dec
pop
lret
mov
aas
fisubs
or
sbb
cmc
mov
jae
or
loopne
aam
outsl
movsl
push
test
cs
sbb
sbb
cs
es
repnz
mov
or
mov
sti
fldcw
subb
test
sub
mov
neg
ret
mov
jns
into
sub
xor
idivb
fstpl
or
lret
mov
jmp
cltd
js
xor
mov
add
cmp
in
inc
jecxz
in
scas
jo
mov
das
scas
addb
fiaddl
dec
movsl
jae
ret
mov
imul
jnp
xchg
mov
in
mov
pop
mov
stc
mov
pushf
mov
or
out
lods
xchg
xor
gs
sti
mov
xchg
sbb
dec
xchg
lret
pop
mov
cmp
dec
cltd
ja
sub
popf
sbb
cmc
xor
xchg
lcall
mov
and
inc
ljmp
idiv
in
mov
fs
lods
stos
pop
pushl
int3
les
push
out
xchg
gs
in
mov
add
cld
aad
arpl
xlat
jb
or
dec
adc
adc
push
leave
mov
nop
dec
mov
add
jg
cwtl
daa
in
daa
test
mov
dec
xor
movsb
dec
xchg
pop
ljmp
dec
xor
or
js
push
xlat
fcmovbe
clc
pop
pop
xchg
test
in
xchg
shrl
sti
inc
inc
cmpsb
xor
imul
jne
fcoms
push
jno
adc
aam
addr16
pop
cmpsb
dec
fcomi
repz
jecxz
cmp
xchg
aas
dec
push
hlt
mov
cmp
push
les
sbb
mulb
lock
ds
std
dec
test
push
inc
popa
inc
fnstcw
int
lret
fwait
xchg
xor
sbb
fcmovne
scas
sub
stos
daa
lods
cld
lods
jmp
cmpsl
ss
movsl
xchg
sar
jmp
enter
std
ljmp
int3
jo
aad
nop
push
mov
ja
sbb
pop
xchg
push
jge
push
imul
gs
scas
inc
xchg
in
xchg
xor
sbbb
ret
add
sar
sbb
pop
sub
mov
cmp
jbe
cmp
outsb
xchg
inc
push
jecxz
push
add
daa
jle
mov
push
sub
or
mov
test
xchg
sub
les
sbb
xor
ret
sti
cmp
inc
insb
aaa
dec
rorb
fistl
dec
and
jno
cmp
push
adc
mov
int3
ret
or
rclb
xorl
fs
sub
or
mov
mov
and
in
dec
or
inc
jg
lahf
add
es
das
xor
adc
sbb
std
addl
filds
mov
sbb
ficompl
in
and
or
jmp
test
push
jb
jle
pop
or
aaa
adc
push
enter
sbb
cmp
cmp
add
lret
lret
sub
xchg
fisubs
jno
adc
es
lcall
cmp
xlat
sarl
enter
in
push
jl
stc
decb
inc
adc
adc
aas
std
xor
add
xchg
adc
adc
xlat
mov
xchg
popf
dec
test
dec
test
add
pop
out
inc
int3
add
les
mov
sub
xchg
nop
addr16
sub
adc
and
lock
mov
push
cmp
mov
divl
arpl
shll
pop
out
daa
fnstsw
test
inc
xchg
inc
outsb
cli
dec
jbe
inc
inc
sbb
jns
out
dec
mov
inc
in
data16
leave
mov
mov
inc
in
lret
sbb
xchg
adc
repnz
stos
pop
mov
pop
popf
pop
test
enter
pop
mov
sahf
xchg
rcrb
sub
mov
stos
mov
mov
ficompl
scas
pop
push
mov
sbb
mov
sbb
xchg
xor
mov
mov
adc
dec
add
mov
repz
adc
and
loopne
imul
pusha
adc
js
jne
push
lods
outsl
mov
xchg
pop
jno
jo
xor
xor
inc
lods
mov
inc
adc
pop
fs
xchg
add
jno
outsb
or
add
insb
cld
fdivl
jmp
fidivrl
and
jb
xchg
xor
lahf
aam
inc
push
mov
imul
arpl
adc
dec
lahf
in
lahf
scas
pusha
stc
mov
rcll
mov
fstpl
int
xchg
sbb
jge
int
xchg
and
xchg
pop
arpl
int3
in
push
js
gs
out
push
add
push
and
and
mov
mov
pop
hlt
and
lea
and
xchg
cmp
jns
repz
shrl
out
ss
repnz
jp
ret
adc
pop
jb
cmp
mov
mov
xchg
cmp
jecxz
jno
pop
arpl
sbb
addr16
test
mov
mov
outsl
push
mov
aad
lret
or
inc
push
push
leave
aad
jl
adc
insb
pop
rorb
cmpsb
xadd
lock
or
or
push
cmp
inc
cmpb
ljmp
sub
or
pop
insb
insl
cltd
shrl
pop
adc
das
xchg
and
in
movsb
es
lret
xchg
popa
fildll
jne
lods
sub
test
lahf
stc
test
and
dec
dec
inc
mov
sub
xor
xlat
inc
incb
jmp
lea
icebp
das
xor
dec
xchg
into
mov
das
dec
mov
rolb
std
out
ljmp
subl
cmc
mov
or
test
xchg
sub
mov
ret
cmpsl
shll
lods
pop
push
sub
ret
and
loopne
addl
mov
sub
addl
inc
inc
push
int3
add
inc
in
mov
js
fldl
stos
shll
insl
xlat
mov
imul
in
push
ret
cmpsl
jbe
enter
mov
mov
je
lods
stc
cmp
pop
push
add
jae
test
jns
imul
sbb
hlt
ja
in
xor
adc
sub
cli
pusha
stc
aad
mov
mov
pop
xor
jmp
dec
xor
ljmp
out
fmulp
or
add
or
add
loop
sti
pop
loopne
in
sbbb
rcr
dec
enter
movsb
rorl
add
into
insl
xor
fstpl
pop
adc
jno
ja
xchg
add
add
push
dec
outsb
fsubs
jmp
orl
xchg
jno
push
test
sub
jmp
cmp
xchg
pop
inc
out
or
mov
fnstenv
sub
mov
fsubs
idiv
or
fistpll
inc
mov
mov
fidivrs
mov
mov
xchg
stos
push
xor
das
cmp
xor
sbb
test
xorb
je
pop
cmp
clc
mov
mov
call
inc
ret
fcmovnbe
mov
mov
addr16
stos
enter
or
cli
add
xchg
cmc
mov
shll
cmpl
sub
cmp
mov
cwtl
jae
and
aam
mov
inc
mov
mov
cmp
cld
repz
mov
jge
fwait
pushf
sub
shl
std
lcall
dec
push
ret
in
cmp
imul
adcl
xchg
xor
call
scas
dec
xchg
push
pop
in
sbb
addr16
xchg
xchg
repnz
lods
pop
negb
push
mov
stos
xor
out
imul
gs
sub
mov
cmc
loop
xchg
divb
adc
xchg
rcl
mov
cwtl
and
pop
shrl
loope
test
addr16
ljmp
push
in
icebp
and
mov
movsb
xchg
jo
jae
dec
xchg
pop
aas
cwtl
ss
sub
mov
ret
in
cmp
xchg
dec
cmp
out
jge
loop
inc
xchg
push
pop
sbb
xor
sbb
mov
add
insl
lcall
sbb
clc
mov
jb
scas
xchg
hlt
sti
xchg
fdivrs
pop
xor
xchg
xor
sub
jnp
adc
pop
test
gs
in
js
or
cmp
in
and
mov
cmpsl
cmp
lods
dec
cli
sub
pop
mov
or
stos
mov
mov
insb
jl
xchg
cmpsb
xchg
iret
cltd
lock
loopne
pusha
sbb
lods
fwait
cmp
lcall
push
insl
stc
movsb
pop
insb
xchg
mov
sub
pop
in
sub
push
insl
movsb
sub
jns
add
scas
mov
jle
orb
pop
jno
std
loopne
push
mov
insl
fnstsw
sub
jge
daa
popa
mov
jno
loopne
flds
daa
inc
xor
addb
sub
fucomp
xor
mov
outsl
data16
cmc
sbb
jnp
neg
shlb
cmpsl
push
sbb
testl
or
jl
ja
out
gs
pop
sbb
mov
mov
clc
orl
sbb
sub
mov
jg
inc
pop
dec
sbb
scas
lss
mov
aaa
push
push
fwait
push
push
scas
lret
mov
ds
cmp
scas
or
push
and
inc
pop
ljmp
imul
pushw
ja
rcrl
rcrl
pop
adc
lods
mov
sbb
call
cwtl
iret
or
scas
sbb
pop
pusha
inc
lea
pop
xor
lret
xor
fbld
mov
enter
int3
cs
mov
sarb
xchg
xchg
jnp
insb
mov
push
inc
mov
xchg
setl
jp
add
sbb
daa
inc
push
fistpll
sahf
aaa
in
flds
and
mov
out
mov
leave
ds
add
mov
and
jb
xchg
test
lret
clc
or
outsb
jmp
inc
inc
xor
sub
mov
cmp
enter
pextrw
mov
pop
mov
cmpsb
and
fists
popf
mov
mov
xor
js
xorl
xlat
jp
or
pop
rol
lea
dec
xchg
daa
xor
jne
adcb
adc
les
sub
xchg
push
fildll
insl
jge
aam
mov
cwtl
mov
sub
xchg
js
dec
mov
test
mov
xchg
jb
and
cmp
mov
cld
sub
mov
movsb
sub
ja
jl
mov
xor
mov
add
cmp
push
jle
lret
xchg
packuswb
mov
outsb
js
adc
call
bound
aaa
push
lods
js
and
cmpsl
cld
arpl
pop
mov
xlat
or
lcall
xchg
rcrl
mov
repz
lods
enter
inc
and
adc
mov
fldt
rorb
rorl
das
fcoms
or
dec
and
mov
mov
or
js
cmpsl
je
sbb
test
xor
mov
or
aaa
or
je
sahf
in
in
je
mov
int
add
adc
test
xor
test
movsb
push
fdiv
sbb
jo
lret
xchg
mov
jns
and
pusha
ret
loop
sarb
inc
xorl
adc
in
es
lods
lret
or
out
imul
mov
push
out
mov
loop
mov
test
mov
sub
in
inc
and
mov
and
in
mov
or
iret
jecxz
fists
imul
xchg
cmc
dec
mov
pusha
dec
stc
push
or
jmp
jb
jnp
dec
in
sbb
sbb
jmp
xor
popf
mov
out
fldt
mov
imul
shrl
addr16
ret
stc
bound
xor
inc
ret
xor
out
int3
sub
movsb
es
jge
out
je
inc
cmp
test
incl
leave
test
or
push
lcall
sbb
xchg
fisttpll
loopne
fldln2
mov
lret
fsubrl
in
ja
jge
inc
fstpt
push
jl
ljmp
xor
cwtl
push
and
andb
rcrb
movsb
add
out
pop
mov
out
push
jae
jp
mov
in
mov
fsubs
cs
jnp
inc
popl
ret
daa
cs
sub
xchg
mov
mov
lret
leave
ret
fcompl
pop
lods
lds
aas
sub
daa
movsb
aas
out
adc
jnp
push
xchg
mov
movsb
dec
push
and
loopne
es
dec
mov
jge
cltd
pop
ret
pop
push
movsl
add
mov
cli
addr16
loopne
add
sbb
mov
call
jg
push
outsl
xchg
adc
pushf
test
and
lcall
adc
add
jae
jbe
shrb
cli
sahf
xor
adcl
and
push
and
jmp
aas
dec
adc
inc
pop
and
push
adc
pop
ret
mov
into
cmp
aam
inc
imull
push
inc
mov
mov
cli
jns
pop
dec
stos
sbb
dec
mov
fld1
mov
lcall
push
xor
imul
pop
pushw
add
aas
out
sub
xchg
fisttps
mov
dec
mov
push
not
xor
xchg
jmp
mov
out
or
and
adc
sub
sahf
lea
sub
das
es
jne
xor
mov
jle
push
cmp
inc
hlt
stc
je
std
call
and
outsb
jo
sub
shufps
movsb
fidivs
repnz
fwait
pop
std
cltd
pop
xchg
add
xchg
loop
stos
repz
or
lods
xchg
in
mov
mov
pop
test
dec
iret
pop
sub
jecxz
loop
adc
sbb
push
add
jae
scas
or
pop
iret
adc
sub
sbb
std
add
sub
fs
mov
add
fsubs
inc
adc
stos
mov
inc
sub
fnstcw
movsb
mov
aas
mov
pusha
push
mov
add
push
mov
jp
outsb
xchg
mov
test
fisttpl
push
xchg
in
addr16
mov
mov
and
ret
xchg
sbb
cwtl
add
insb
xchg
mov
or
xchg
scas
mov
push
pop
pop
xchg
or
fs
inc
and
jp
pop
lock
call
sbb
fstpt
cli
movsl
outsl
hlt
dec
or
fisubrs
jno
je
jl
dec
rorl
and
iret
xchg
cmp
sti
mov
mov
clc
push
cld
pop
lds
sub
ret
jo
orb
push
add
mov
scas
xchg
popa
jmp
sbb
shlb
adc
bound
cmp
inc
add
out
and
in
mov
dec
xor
adc
xchg
mov
add
mov
dec
out
test
dec
xchg
cmp
ss
jo
or
mov
sti
jb
scas
arpl
push
mov
jl
jmp
jmp
mov
dec
mov
loope
cmpl
mov
pushf
lods
pop
or
and
xchg
lahf
xorb
ljmp
loopne
out
push
adc
dec
xor
xchg
outsb
xchg
push
fmuls
inc
xlat
adc
pop
mov
xchg
and
es
sub
popa
pop
repz
lcall
adc
sub
lahf
les
lods
xchg
das
sub
sbb
jnp
adc
scas
dec
dec
inc
and
in
sub
mov
scas
rclb
inc
lea
decl
ja
dec
pop
leave
negb
jno
xor
jnp,pt
psubsw
je
mov
mov
sbb
push
test
call
ret
notl
in
addr16
popl
jle
xor
cmp
sub
push
roll
rcrl
dec
dec
push
xor
in
arpl
outsl
js
out
outsb
sub
xlat
mov
bound
jnp
mov
pop
aaa
mov
lds
in
dec
fistpl
adc
cmp
mov
xchg
cmp
fldl
nop
addr16
pop
leave
fstl
dec
push
push
adc
out
aaa
push
adc
push
add
test
ljmp
roll
outsl
push
jmp
int
inc
pop
leave
je
jmp
sbb
jg
xor
and
rcr
fs
push
jg
mov
push
cwtl
jo
lock
sub
jo
pushf
dec
fwait
sti
pop
lds
cmpsl
mov
or
sbb
jno
fstps
fsubs
sahf
scas
call
adc
pop
mov
ja
jnp
jbe
sub
loopne
jle
xor
popa
test
mov
scas
push
cltd
in
daa
cld
cmp
pop
add
push
add
cmp
pop
inc
and
jl
stos
not
mov
je
hlt
pop
add
jp
sbb
dec
movsl
sbb
mov
data16
pop
pop
jo
sbb
sub
cli
mov
adc
jne
mov
add
loope
aaa
aaa
aaa
or
das
xor
push
cld
push
push
push
jl
ja
sbb
mov
inc
mov
pushf
outsl
xor
cmp
popf
mov
addr16
jb
arpl
aas
jnp
xlat
add
enter
fdivp
push
shlb
stos
mov
mov
push
cmp
sbb
scas
aad
mov
and
insb
xchg
lods
mov
andl
sbb
mov
mov
stc
sbb
dec
fwait
xchg
fwait
or
call
icebp
into
adc
push
sbb
call
or
cli
sub
inc
js
jg
mov
outsb
fisttpll
stos
aam
outsl
rorl
sahf
out
dec
sbb
shl
in
and
shrl
divl
lahf
jl
cwtl
and
jnp
xchg
movsb
push
push
add
xchg
jns
jb
mov
fldcw
lcall
sub
sub
test
cwtl
push
or
leave
push
lods
test
xchg
not
or
or
lock
int3
push
mov
dec
mov
push
jae
xchg
xchg
adc
call
fstenv
mov
les
mov
ss
mov
lahf
mov
aam
mov
dec
push
arpl
pop
or
cld
xchg
jb
std
aaa
jmp
cwtl
pop
dec
mov
shl
add
outsl
roll
cmp
jae
mov
mov
sbb
cli
imul
sbbl
inc
push
in
sarl
mov
addr16
call
sahf
mov
mov
arpl
adc
loope
xor
push
add
sub
scas
bnd
cmc
cmp
in
cmp
mov
add
gs
into
fnstcw
or
sbbb
fwait
dec
and
sub
popf
outsl
cltd
xchg
das
hlt
ret
mov
jae
rolb
sub
adcb
insl
lods
addr16
inc
test
bnd
test
mov
jae
test
and
adc
fldt
fwait
push
in
sub
cli
gs
xor
cmc
sub
sbb
cli
and
jbe
mov
jae
push
mov
jl
xchg
mov
or
mov
stos
aaa
popf
sub
mov
jmp
dec
lea
sti
mov
imul
jle
mov
mov
loopne
dec
sbb
xor
jns
cs
pop
cmp
cmc
and
xchg
add
xchg
and
cmp
in
and
dec
jno
adc
orb
jne
and
fs
pop
addr16
push
jp
loop
push
inc
ds
mov
add
outsl
push
icebp
and
xchg
iret
jmp
add
cmp
outsl
pop
pop
xchg
fnstsw
cmpsl
adc
mov
stc
int3
mov
bound
xchg
stos
rorb
or
adc
repnz
jle
je
movsl
sbb
cmp
inc
mov
xor
fucompp
popl
lahf
in
jl
int
and
loope
mov
data16
popa
out
xchg
cmp
loopne
in
dec
loop
sub
sbb
gs
pop
js
nop
xchg
mov
xchg
jg
int3
xor
pop
fs
hlt
mov
mov
lods
insl
scas
adc
sbb
mov
mov
test
sbb
sarb
mov
push
cmpsb
jnp
aaa
test
jecxz
pop
pop
xchg
pop
or
pop
pop
rolb
push
mov
out
je
sbb
push
push
dec
int
mov
adc
inc
jb
mov
lock
cmpsb
fisubs
das
xor
pop
sub
jbe
movsl
lds
jnp
jae
jl
int
jg
in
push
je
subl
xor
rcrb
adc
imul
jnp
movb
mov
mov
or
lock
xor
mov
popf
sar
push
out
iret
loope
inc
push
push
mov
inc
cmp
imul
jo
lds
adc
movsl
andb
xchg
xchg
loop
push
sub
dec
pop
call
inc
xchg
xchg
jp
push
xchg
or
sarb
xchg
dec
jmp
sarb
mov
sbb
pop
xor
lods
enter
scas
xlat
aam
clc
loope
mov
or
pop
sub
aas
loop
dec
xchg
jecxz
mov
mov
arpl
std
sub
dec
cli
jnp
mov
sbb
clc
jbe
push
xor
das
sub
cmpsl
das
dec
and
pushf
sbb
jns
mov
pop
lods
xchg
inc
call
cli
or
repnz
iret
das
xchg
cmc
fistpl
movsl
add
lret
and
xchg
fisubl
aam
shld
fdivr
sbb
and
dec
je
clc
std
lds
adc
push
mov
push
sub
jecxz
sahf
mov
jmp
sub
dec
out
jmp
das
xorb
and
je
mov
adc
jp
jmp
cmc
call
rclb
pop
mov
push
cmpsb
push
cmp
xchg
idiv
mov
add
mov
inc
mov
cmpsl
lds
stos
cwtl
push
call
ljmp
push
push
das
pop
mov
mov
sbb
or
mov
jecxz
pop
sub
mov
sbb
xor
jge
mov
data16
dec
mov
jbe
fdivrp
or
imul
xchg
gs
xor
pushf
jge
or
inc
mov
adc
or
into
pop
or
es
jge
sub
push
jmp
sbb
pop
lret
ret
cmp
arpl
outsb
cmp
add
pop
jle
sub
lods
pop
cs
mov
icebp
sbb
lea
sbb
add
dec
addl
addl
lods
cmp
repz
push
lret
mov
dec
dec
sbbb
sbb
inc
shrl
test
lret
ret
cli
xchg
dec
or
dec
sbb
rol
ret
loope
mov
and
mov
sub
and
aaa
cmp
clc
sub
xor
sarb
lods
mov
jmp
adc
or
insb
xchg
insl
mov
add
dec
xchg
lret
mov
out
or
sti
mov
mov
add
or
jae
lret
into
cmp
sbb
dec
jns
dec
lock
push
adc
push
add
imul
mov
cmovnp
jne
pop
push
adcl
icebp
cmpsb
xchg
xor
cmpsl
mov
lret
or
mov
mov
fcoml
xor
xchg
add
xor
inc
aaa
mov
popa
jge
bound
mov
mov
fcmovbe
fwait
adc
adc
icebp
cmp
loope
adc
insb
xor
out
jmp
mov
aam
xchg
out
andl
push
lahf
lods
out
cmp
pop
adc
adc
jne
das
pop
pop
jb
mov
pop
js
in
xchg
pop
cmpsb
mov
test
jns
push
xor
mov
mov
cmp
pop
push
push
test
ror
sub
mov
rcrl
xlat
push
xchg
pop
xchg
pop
repz
lea
mov
cmp
mov
pop
pop
cmp
cmp
push
jne
and
xchg
lock
fsts
push
sub
shlb
xchg
ficompl
xor
mov
dec
cwtl
sub
sub
mov
dec
pop
ss
call
fwait
jae
adc
dec
adcl
in
pop
jbe
push
cli
push
ja
imull
mov
test
mov
xorb
and
mov
mov
dec
repz
sub
aaa
jmp
pop
or
jmp
xchg
push
add
fidivrs
cmp
outsl
mov
sub
stos
leave
leave
inc
and
xor
addr16
mov
inc
xlat
push
mov
test
add
pop
sub
xchg
mov
lret
aaa
dec
in
sahf
cmp
popf
inc
insb
add
icebp
scas
xor
jle
lahf
xchg
fistpl
lea
xor
and
js
outsb
inc
mov
lods
inc
xchg
pop
inc
lahf
add
enter
mov
cmp
insb
test
sub
fs
rorl
push
pop
mov
add
cmp
mov
std
or
mov
je
dec
cs
mov
xlat
pop
adc
rolb
or
subl
insl
or
aas
ret
mov
or
inc
jns
fs
mov
idiv
push
pop
fstps
xlat
cmpsl
adc
jne
sbb
adc
outsl
out
xor
mov
xor
lahf
pop
cmp
les
dec
rcr
jge
sub
mov
xchg
dec
lods
sbb
cmpsl
adc
aas
fistpll
xor
mov
cli
push
stos
or
mov
mov
out
mov
xor
fidivrs
daa
mov
and
adcb
bound
inc
cs
clc
xor
out
xchg
imul
cmp
xchg
push
fimull
push
ds
sub
les
push
add
sub
test
cmp
and
movb
dec
mov
mov
filds
dec
cmp
add
daa
xor
or
out
xor
popa
out
pop
sbb
aam
lret
mov
dec
adc
in
ret
jnp
or
push
or
int3
repz
adc
inc
mov
push
mov
mov
mov
jl
xchg
into
loope
sub
sbb
fists
sbb
sub
lret
mov
insb
pop
ret
push
add
xchg
outsb
mov
out
sbb
aam
push
mov
fs
add
clc
pop
into
mov
lods
test
adc
jg
pop
xchg
dec
lea
insb
or
jmp
lock
pushf
pop
pushf
rcll
push
jno
aaa
lcall
or
rcr
push
push
out
adc
js
fwait
in
jo
sti
ja
pop
inc
mov
xchg
mov
aaa
js
jnp
jae
out
cld
push
adc
adc
popa
dec
test
cmpsb
int
add
or
pop
mov
fnstcw
das
outsl
lea
adc
ret
loopne
xchg
stos
adc
lods
popa
xchg
mov
dec
outsb
xchg
adc
jne
mov
mov
sbb
mov
das
push
fistpl
lret
getsec
fcmovnbe
lods
push
push
jp
in
int
out
aaa
stc
jg
mov
hlt
add
int
jb
scas
or
fists
movsb
inc
xchg
add
add
scas
push
insl
pop
xlat
jnp
enter
mov
add
scas
testl
jno
aaa
jnp
pop
xor
fildl
fcmovnb
mov
test
imul
jae
movsl
mov
jge
add
xchg
fsubrs
pop
aad
mov
out
pusha
sbb
clc
lods
int
mov
outsl
cltd
mov
neg
gs
int
adc
popf
jae
push
sti
sbb
ja,pt
shrb
inc
fwait
int
inc
aam
pop
mov
repz
iret
call
cmp
lcall
shll
jb
frstor
jp
add
pop
add
or
dec
and
movsl
call
xchg
ja
out
pop
push
insl
stos
in
popf
sub
adc
ljmp
test
aaa
xchg
iret
imul
fs
xchg
cmp
leave
lahf
iret
or
xor
push
inc
mov
negl
aaa
jo
pushf
into
xchg
das
out
out
push
jmp
outsb
int
arpl
sti
daa
cmpsl
pusha
test
cmp
cltd
jp
cld
push
shlb
dec
nop
lahf
or
imul
sbb
mov
mov
mov
mov
mov
sbb
sbbb
jl
popa
or
xchg
sbb
cmp
push
jecxz
xchg
xchg
addr16
stos
push
cltd
das
adc
xchg
sub
movsb
ss
and
push
movl
fsub
loop
insl
lods
test
fs
pop
pop
mov
mov
cmp
addr16
out
es
scas
xor
mov
mov
dec
iret
hlt
add
lahf
lea
pop
std
addr16
cmp
or
loopne
sbb
inc
pop
stc
inc
sbb
nop
adc
jge
outsb
fidivl
sbb
mov
pop
or
dec
pop
xchg
test
dec
scas
pop
dec
cmpsb
push
mov
je
push
outsb
mov
inc
xor
rcrb
std
stc
inc
fwait
mov
test
je
adc
xchg
or
push
clc
inc
jge
adc
lock
push
into
or
pop
hlt
pop
cmpsl
push
daa
inc
and
or
push
push
jg
call
jne
les
in
xor
std
jo
sub
daa
pop
add
mov
push
nop
mov
push
dec
les
lret
or
fwait
add
inc
pop
mov
out
iret
rclb
push
inc
or
pop
in
cmp
call
inc
sarb
mov
dec
lds
xchg
add
push
call
out
or
cld
lods
cmpsb
mov
xlat
lahf
out
fmuls
jmp
movsb
jne
push
rorl
shld
loop
sahf
mov
xchg
imul
movsb
addr16
cli
jo
jns
sbb
jle
dec
inc
cltd
mov
jo
push
movsb
xorl
ss
add
ret
lahf
icebp
out
arpl
sub
xchg
jb
xchg
sbb
cld
push
fucom
and
ret
jbe
cwtl
sarb
dec
xor
popf
sub
cli
and
adc
cmp
outsb
out
dec
cli
ljmp
je
cwtl
in
lea
daa
dec
adcb
jp
inc
add
int3
and
inc
hlt
test
data16
fs
add
xchg
scas
nop
dec
and
jle
aaa
jp
outsb
imul
pop
bound
dec
arpl
and
push
dec
sbb
and
and
sbb
test
aad
leave
lcall
jecxz
imul
cmp
pop
lock
lds
dec
push
dec
sub
xchg
mov
into
loope
push
jle
jo
scas
faddl
xor
sub
test
cmp
jbe
and
dec
push
jbe
icebp
add
add
mov
pop
scas
les
js
popf
push
push
ja
and
adcb
rcrl
and
sbb
aam
outsb
popa
lock
pop
dec
jle
and
sub
fsubs
fiadds
les
and
jb
nop
and
pop
inc
xchg
test
rol
push
les
clc
pop
in
jmp
mov
push
jmp
les
xchg
or
fisttpll
sub
or
cmpsb
add
cmc
arpl
add
dec
or
and
sbb
fwait
andl
neg
sbb
xchg
cmp
les
loope
lret
dec
add
insl
mov
rcrl
imul
add
pop
xchg
leave
test
mov
mov
push
and
or
pop
lods
inc
mov
movsb
das
out
xor
fistpl
leave
in
cmp
stc
fwait
lds
iret
mov
dec
adcb
cmp
cmpsl
mov
fcompl
cmpsl
adc
mov
js
dec
mov
testb
jge
mov
and
push
ja
inc
movsl
popf
inc
repz
mov
into
and
pop
add
stc
lahf
lahf
pushf
cltd
je
adc
sub
scas
sbb
jno
mov
data16
lods
sbb
sub
dec
daa
jbe
sar
cmpsb
addr16
out
push
dec
jnp
popa
push
mov
inc
ja
push
mov
jmp
jp
push
icebp
ljmp
dec
and
jno
lea
push
std
jno
dec
inc
sbb
inc
fistl
sub
scas
mov
sbb
in
push
sub
sbb
cmp
out
loop
popa
cli
dec
lfs
sub
int3
loop
mov
insl
mov
mov
lahf
jne
cmp
out
dec
xchg
inc
push
jg
sub
neg
ja
jmp
xadd
loopne
push
push
into
sbb
ss
iret
jg
scas
js
ds
jmp
loope
clc
dec
mov
pop
aas
pop
pop
lods
dec
fadd
aaa
xor
pop
sbb
enter
mov
cld
adc
loop
out
fs
rcl
lcall
repz
add
cmp
mov
push
scas
mov
js
mov
add
inc
cld
cld
int3
or
std
inc
pop
pop
negb
cmp
insb
lock
sbb
sub
in
push
inc
iret
inc
dec
sub
pushf
sbb
xchg
jge
mov
test
popf
adc
add
cmp
inc
les
roll
andl
pop
fstl
repnz
dec
loope
ljmp
and
inc
movsl
add
cli
in
and
in
push
sbb
jb
xchg
jle
or
dec
scas
inc
inc
adc
ljmp
inc
push
scas
pop
mov
add
add
clc
addr16
setl
shll
jecxz
jge
jo
mov
lahf
repz
cmpsl
sub
jnp
int3
sub
daa
pop
fcomps
out
push
cmp
cmp
mov
into
shr
lret
out
lret
ljmp
mov
mov
into
pop
das
lods
insl
xchg
cwtl
push
xchg
lcall
mov
adc
fs
mov
mov
insl
and
js
cltd
pop
mov
cmp
inc
push
inc
and
outsl
mov
fidivl
mov
mov
adc
push
js
rolb
bnd
mov
jecxz
mov
aas
push
push
es
insb
sarb
ret
sub
mov
pop
cmp
leave
and
divb
add
leave
mov
cs
push
xchg
push
aad
loope
movsb
mov
sub
or
movb
or
divb
js
mov
mov
push
jo
addr16
inc
scas
scas
stc
add
popf
pushf
popf
fsubp
cmpsb
mov
xchg
pop
mov
test
inc
in
and
xchg
outsb
outsl
dec
rorl
addl
xchg
bound
jle
nop
pop
inc
push
pop
xor
inc
fdivrp
pop
pop
lret
enter
push
outsb
mov
jge
ss
or
xchg
xchg
sub
aad
lea
fs
jo
aam
jmp
mov
mov
stc
jg
cmpsl
iret
fstpt
nop
sahf
pusha
jecxz
sub
and
in
mov
pushf
mov
addr16
ds
stos
mov
cwtl
popa
or
inc
sbbl
mov
mov
in
frstor
dec
test
fiaddl
dec
xchg
mov
dec
sbb
repnz
daa
jmp
ljmp
dec
loop
bound
inc
and
mov
mov
and
jl
push
mov
add
sub
iret
cmp
xor
mov
daa
mov
lret
mov
fimull
cmp
mov
out
hlt
jae
stc
mov
add
out
xor
in
mov
fsubp
xchg
mov
into
xchg
fprem
pop
mov
inc
inc
mov
lds
andl
fwait
lods
pop
mov
fisubrs
sbb
test
and
mov
lods
pop
mulb
dec
loope
repnz
leave
cld
pop
push
sahf
mov
jge
jp
push
push
pop
mov
push
inc
dec
mov
in
cmc
or
stos
fs
orl
mov
loopne
xor
cmp
idivb
stc
popa
rorb
in
inc
jbe
sbb
xchg
xor
loop
lret
cmp
xorb
lock
out
mov
jmp
lret
mov
cmc
cmpsb
mov
jg
imul
cmp
mov
cmc
adc
push
les
stos
repnz
popl
dec
dec
movsb
test
and
js
ljmp
pushf
cltd
aad
repnz
scas
jmp
data16
pushf
pop
push
mov
mov
xchg
mov
setne
mov
test
xlat
fnstcw
mov
loope
dec
stos
mov
test
mov
lret
mov
movsb
dec
inc
ss
xor
mov
mov
fistps
pushf
mov
ja
dec
add
jp
hlt
stos
and
je
adc
jl
mov
mov
popf
mov
js
inc
flds
pop
add
pop
push
adc
icebp
mov
das
push
xor
xor
cltd
decl
pop
sub
dec
jmp
ret
mov
mov
stos
push
outsb
xchg
cld
ljmp
aas
xchg
xchg
xor
les
and
ljmp
adc
dec
inc
cmc
std
popf
scas
sub
fsubp
jns
cmp
ficoms
mov
cmpsl
mov
ja
std
xor
or
lods
pop
mov
loop
gs
andl
out
cmpsl
inc
scas
ljmp
xchg
inc
sbb
sub
sub
shlb
cltd
jmp
mov
sarb
sbb
shrb
push
sbb
scas
stos
cmc
jbe
xor
lahf
pushf
cmpsb
lods
stos
outsb
add
inc
pop
jnp
jne
push
gs
xchg
int3
pop
cld
dec
test
add
in
mov
imul
push
mov
jle
popf
jnp
pop
test
out
shlb
negb
fsubl
sahf
arpl
or
adc
jg
cmpsl
push
sbb
xchg
add
jge
dec
xchg
jns
sbb
hlt
push
mov
fidivl
jge
cmp
pop
out
scas
js
in
sarb
cmp
outsl
cmp
and
mov
xchg
lret
popf
adc
sub
mov
sarb
sub
cmp
mov
sub
loop
cli
les
inc
inc
pop
mov
push
fucom
rclb
sub
daa
dec
icebp
movsb
loope
push
test
les
int3
stos
add
or
jg
nop
lock
out
notl
add
dec
fsub
addr16
add
cltd
dec
jp
aad
ljmp
shll
into
shlb
fisttpll
imul
lods
aad
icebp
or
mov
inc
icebp
mov
push
dec
testl
jb,pt
push
daa
int3
sub
xchg
and
ljmp
fs
pop
mov
push
jae
insb
les
mov
xchg
orb
sbb
sbb
pusha
push
mov
adc
push
insl
add
inc
sub
jle
cmp
adc
mov
pop
xor
adc
enter
inc
mov
insl
ss
add
jb
cmp
int
mov
sbb
push
fsubrs
fldln2
cmpl
pop
jg
adc
sbb
sub
leave
xchg
adc
rcll
xchg
outsl
insb
stos
scas
andl
or
leave
mov
shll
or
insb
pop
xor
insl
aad
push
js
addr16
push
xchg
add
adc
add
sub
add
inc
push
and
mov
xor
inc
mulps
cld
or
mov
inc
lret
rcll
icebp
mov
inc
lret
xor
out
scas
dec
popa
inc
mov
jne
js
adc
push
xor
sbb
imul
jns
jns
and
mov
dec
jmp
fcompl
adc
mov
sbb
stc
inc
in
jmp
mov
fcmovu
mov
add
ja
or
fists
fsubrl
pop
mov
bound
repz
notl
loop
pop
push
frstor
mov
jmp
enter
xchg
clc
out
sub
sub
add
das
or
lahf
nop
inc
mov
ljmp
dec
sbb
sbb
sub
out
pop
aam
inc
or
adc
mov
sub
push
mov
cmp
dec
gs
pop
out
arpl
mov
lret
fiaddl
outsb
mov
test
mov
jno
push
dec
jnp
loopne
add
add
ficompl
std
or
push
lods
adc
push
dec
sub
dec
clc
xor
hlt
fists
scas
into
das
dec
cmp
loope
fdivl
sbbl
xor
out
addb
stos
jle
shrl
xchg
jp
fistpl
movsl
adcl
flds
mov
xchg
imul
in
dec
sub
and
scas
sbb
fldt
jp
loopne
rclb
cltd
xchg
inc
in
mov
idivb
adc
or
add
stos
ffreep
mov
decl
or
loope
inc
inc
insl
data16
mov
and
cmp
sub
lahf
jmp
insb
daa
cmp
xor
enter
in
push
das
mov
aaa
add
int
rcr
mov
mov
add
iret
stos
call
mov
push
insb
fisttpl
jns
push
jmp
imul
in
inc
stos
adc
aas
cmc
fiaddl
pop
xchg
sub
mov
bound
shlb
into
mov
mov
mov
fdivrp
popf
cmc
pushf
pop
fisttpl
lods
adc
push
jns
and
mov
out
xchg
xchg
adc
sbb
stc
pushf
movsl
jne
test
fildl
insb
in
xchg
adc
mov
mov
test
sub
push
pop
pop
or
xlat
push
adc
pop
es
test
push
arpl
ljmp
xchg
enter
lcall
pop
gs
push
jnp
cltd
rclb
inc
outsb
shll
mov
jmp
mov
dec
xor
loop
inc
aam
ds
mov
pop
jp
movsl
cmp
ss
sub
movsb
jbe
jmp
dec
dec
aas
add
xor
lea
add
pop
in
xor
pop
addr16
sub
loopne
js
cltd
adc
xchg
mov
sub
xlat
addr16
loope
clc
sub
stos
repz
jmp
call
fisttps
fdivrl
mov
ss
sbb
hlt
inc
pushf
xchg
sub
outsb
mov
sub
inc
in
fs
out
ljmp
fidivl
add
sti
adc
cmp
pushf
push
into
xchg
fldln2
push
inc
aaa
lods
inc
pop
dec
test
cmp
and
xor
cs
jle
ret
loopne
xchg
sub
sarl
inc
test
aas
stos
shrb
call
insb
pop
mov
jmp
dec
sub
cmc
sahf
xor
sbb
por
xorb
pusha
lret
mov
push
mov
out
jecxz
jb
enter
enter
sub
or
push
insl
mov
or
out
inc
adc
loop
pop
shrl
mov
mov
aaa
mov
jp
ja
and
jb
xlat
mov
xor
jno
in
push
and
adc
adc
inc
mov
cmc
cmc
enter
mov
fsub
xor
dec
xchg
xchg
sub
push
cmp
in
das
mov
popa
movsb
inc
loop
add
xchg
mov
cmpl
jns
push
and
pop
sbb
aas
dec
test
fwait
scas
subl
sbb
mul
or
scas
sbb
mov
xchg
adc
loop
pop
sub
sub
cmc
mov
xor
mov
lret
cmc
inc
int3
pop
mov
push
das
out
lcall
xchg
add
fdivrs
pop
lea
and
xchg
pop
sub
loope
mov
mov
lods
xor
and
inc
xchg
rorl
mov
mov
or
pushf
xor
mov
xor
sbb
ljmp
pop
jecxz
adc
inc
jbe
adc
sbb
je
add
fsub
cs
push
push
test
fwait
aaa
fs
or
aad
out
lds
loopne
mov
insb
pop
adc
dec
mov
stos
leave
pop
fstps
and
in
pop
imul
imul
sbb
cltd
mov
push
pop
call
xor
inc
mov
push
pop
adc
cmp
scas
testb
loop
push
lock
mov
xchg
cmp
add
aad
das
out
cmp
out
push
scas
mov
or
add
xchg
mov
das
add
clc
lds
aas
adc
enter
and
cld
popa
sti
fistps
mov
cmp
stos
in
pop
in
orb
jno,pn
mov
mov
cmc
inc
imul
cld
inc
xchg
push
addr16
jnp
jle
stos
pslld
bound
loopne
add
in
xor
insl
jmp
push
xor
xor
ds
jnp
dec
out
ret
dec
pop
sub
imul
mov
insb
iret
std
or
xor
movsl
pop
xchg
stos
dec
call
or
test
cmpsl
outsb
sbb
push
das
adc
dec
and
adc
in
outsl
popf
test
jmp
add
lcall
dec
sub
lds
rcrb
add
aaa
sub
sbb
data16
leave
xor
vmovsd
mov
inc
adc
cld
jae
pop
xlat
jmp
push
or
inc
xchg
and
cs
shrb
adc
loopne
mov
xlat
test
scas
xchg
cmp
inc
cld
cmpsl
fbld
add
aad
fwait
inc
sbb
nop
stos
data16
enter
xchg
mov
sbb
inc
mov
or
cmp
pop
addr16
jle
xchg
add
cmp
neg
mov
pop
shrl
gs
push
outsl
shl
ljmp
out
mov
and
out
jnp
leave
je
fistpll
gs
push
movsl
adc
pushf
es
add
in
xchg
fmuls
loope
jmp
push
add
test
cmp
mov
push
jns
cwtl
adc
jmp
push
mov
nop
add
inc
nop
arpl
push
inc
jg
cli
ret
incb
mov
push
nop
icebp
nop
loopne
pop
jnp
xchg
out
inc
cmp
fstpt
sbb
cmp
je
shlb
lods
jp
inc
mov
xor
jbe
push
inc
add
jp
mov
xor
lcall
std
lcall
sub
inc
dec
jle
insb
pop
lock
xchg
and
add
inc
and
sbb
push
dec
mov
lds
fcoml
add
xchg
and
out
pop
test
push
aam
push
loop
repz
xlat
pop
in
push
add
enter
fincstp
addb
sbb
adc
repnz
mov
xchg
leave
jg
imul
sbb
or
sbb
je
mov
divb
sub
stc
push
cltd
int3
sbb
shr
test
jmp
pop
or
fiadds
cmpsb
mov
in
xchg
mov
ds
mov
pop
xlat
xchg
test
aaa
adc
fsubrl
gs
popa
addr16
jns
mov
xchg
fmuls
and
pop
and
cmp
xor
stos
jo
jae
sti
push
mov
fs
call
push
adc
out
jl
sbb
movsl
inc
sub
pop
cwtl
je
xor
pusha
ljmp
cmp
mov
ljmp
mov
mov
pop
daa
sub
xlat
ret
xor
ja
dec
mov
jae
ds
dec
adc
shrb
lods
rcr
idivb
mov
mov
inc
xchg
jno
mov
push
sub
out
add
dec
jae,pn
inc
dec
repnz
aas
shr
stos
int3
gs
and
mov
cmp
push
xchg
mov
lods
imul
mov
subb
and
mov
out
lret
mov
adc
fnstcw
add
clc
xchg
mov
or
lret
ret
and
or
push
xchg
mov
adc
fmull
lahf
mov
frstor
sub
mov
push
test
pop
aad
xlat
sarb
sub
fwait
mov
movsl
sub
sahf
inc
xlat
push
cmp
jmp
dec
xor
cmp
ss
fsub
xchg
push
mov
jne
nop
sub
mov
cmp
pop
dec
mov
cmp
gs
mov
nop
add
jge
xor
jnp
inc
push
mov
cmc
rolb
pop
sub
imul
int
xchg
stos
jae
mov
xchg
sub
std
adc
mov
jne
add
ret
ljmp
mov
lods
inc
mov
xchg
ret
inc
out
sbb
or
ds
loope
xor
fmulp
or
sub
adc
cmp
push
sbb
and
pop
jne
push
pusha
mov
mov
cmp
mov
jmp
in
sub
in
adc
mov
push
arpl
outsl
xor
mov
fimuls
arpl
xorb
pop
cmp
mov
fidivs
inc
inc
gs
jbe
push
xchg
pop
mov
push
mov
pop
pushf
aam
mov
ljmp
xchg
cltd
rclb
pop
test
stos
rol
xchg
js
js
gs
mov
out
stos
fcoms
dec
mov
inc
sahf
mov
jl
cmp
pop
fdivs
dec
mov
push
icebp
lahf
and
das
cwtl
sbb
ret
pop
lods
lahf
push
loope
or
push
test
ljmp
push
outsl
pop
adc
xor
popa
stos
inc
pop
lea
inc
pop
cmp
pop
mov
cmc
or
mov
cld
add
clc
and
add
lcall
lret
push
fistps
inc
bound
outsl
cmp
movsl
shr
fnsave
xchg
xlat
rolb
pop
jb
mov
shrl
cmp
xor
push
sub
das
imul
xor
imul
sbb
jle
fcoms
cmp
sbb
sti
push
mov
add
addr16
push
outsl
js
mov
xor
inc
inc
lahf
add
cmp
pop
cmp
push
lods
mov
mov
push
ljmp
mov
repnz
mov
mov
push
mov
stos
mov
lea
mov
cmpsl
sub
xor
jb
cmp
frstor
ja
stc
mov
sti
xlat
sahf
push
addr16
sub
pushf
fs
out
mov
xor
test
dec
mov
adc
dec
xor
cltd
sahf
or
aam
mov
ret
xor
scas
fisubl
jmp
sub
or
outsl
xchg
test
arpl
arpl
shl
stos
push
push
pop
push
stos
test
aaa
out
inc
or
dec
adc
sub
pop
pusha
dec
in
xchg
out
stc
aas
loop
adc
ds
icebp
fld1
inc
inc
test
cwtl
addr16
es
cli
aas
mov
add
sbb
incl
dec
fistps
inc
dec
cmp
jg
mov
adc
rcr
scas
dec
into
xchg
pop
push
dec
xor
daa
sub
sub
rol
adc
mov
test
rclb
add
push
jmp
push
sbb
jecxz
and
jo
mov
mov
loop
jnp
dec
or
cmp
pop
push
les
push
sub
sbb
cmp
pushf
ret
inc
pop
scas
aad
iret
sti
add
daa
decl
jg
mov
lret
out
aaa
xor
xchg
mov
xchg
fwait
cmpsb
loop
pop
in
aaa
sti
mov
icebp
aam
sub
sbb
mov
ljmp
scas
scas
addb
pop
cs
insl
dec
jle
mov
push
mov
or
bound
int3
adc
add
sub
cli
cmp
cltd
outsl
dec
outsb
mov
jmp
or
pop
jp
adc
jl
cmp
int
lcall
fdivrp
sbb
adc
sahf
dec
sarb
jmp
movsb
and
and
adc
je
sbb
movsl
fcompl
pop
mov
ss
aam
iret
movsb
dec
add
mov
inc
jo
jbe
cmp
fdivs
pushl
push
jbe
insl
xor
imul
rolb
xchg
pop
test
aam
scas
sti
dec
or
jp
adc
dec
dec
fadds
inc
pop
xorl
out
push
pop
mov
shrl
addl
call
gs
out
sub
mov
mov
in
rcrl
faddl
jb
rorb
movsl
js
aas
xlat
aas
add
sub
ja
or
mov
and
pop
out
lcall
dec
mov
imul
jae
call
out
pop
cmp
dec
push
js
icebp
and
sub
and
cli
call
scas
loop
cmpsb
in
into
mov
scas
fidivrl
and
lods
testb
mov
inc
aam
mov
jnp
cmp
sub
mov
pop
add
and
inc
mov
popa
mov
pop
imul
out
sub
shll
stc
call
and
into
das
jnp
push
fwait
xchg
iret
jle
daa
les
mov
sbb
fldcw
mov
add
mov
mov
test
in
inc
insl
inc
and
add
jnp
inc
jl
sbb
jmp
lods
and
fisttpl
jb
mov
xor
xor
test
test
mov
push
arpl
stc
or
cltd
dec
dec
push
or
sbb
push
outsb
ss
and
sub
xchg
rcrl
outsb
pop
adc
add
jne
jle
imul
loopne,pn
jne
sti
into
adc
add
sub
jns
jno
jecxz
xor
outsl
test
add
addr16
jge
loope
repz
mov
mov
push
scas
inc
movl
lea
stos
adc
jb
dec
cmp
roll
jg
and
fdivs
ja
fdivs
sarb
stos
dec
xchg
inc
pusha
add
inc
mov
stc
inc
xchg
push
pop
jmp
call
xchg
add
cwtl
push
sbb
aaa
popf
mov
cmpsl
les
std
call
mov
dec
lock
pop
or
mov
cmp
loop
inc
cmpsb
sbb
cmpsl
popf
addl
push
xchg
sub
mov
push
cmp
daa
insb
mov
jmp
loop
adc
xor
cld
pop
out
test
stc
sahf
ja
mov
inc
insb
push
enter
push
pop
test
xor
xor
sub
adc
lret
test
test
or
addr16
repz
frstor
loope
test
stc
shlb
and
repz
sbb
sbbb
repnz
testl
sub
outsl
in
and
add
jno
mov
push
sub
leave
repz
jge
inc
outsb
mov
jmp
jns
movsl
cmp
mov
xor
test
ret
mov
jle
sahf
aad
sub
lock
leave
mov
cmpsl
sub
aaa
jp
jb
dec
into
mov
js
loopne
popf
inc
clc
movsb
cmc
int3
loope
and
sti
decl
xchg
jp
adc
lods
ret
bound
ja
sbb
and
push
push
push
aad
mov
push
mov
sub
das
scas
and
ss
cmp
mov
sub
adcb
cs
shlb
or
pop
mov
test
cmp
rcrb
add
cld
dec
negl
mov
pop
imul
inc
aam
mov
and
inc
push
icebp
sbb
ret
cld
movsl
mov
std
std
xor
sub
inc
jo
mov
scas
outsb
ret
fcompl
and
sahf
and
jno
outsb
adc
loope
xor
test
push
ror
arpl
enter
sub
stc
scas
pop
and
cltd
push
imul
push
cmp
out
adc
mov
lahf
xchg
ret
mov
mov
pop
aam
xor
lret
and
xlat
cwtl
popa
imul
push
loope
lahf
fstps
in
push
movsl
push
dec
pop
cmpsb
loopne
popl
mov
jb
lods
or
mov
ss
lock
loope
inc
roll
cltd
add
cmp
imul
data16
icebp
shrl
rcll
les
jmp
lcall
jb
insl
orl
lret
scas
sub
repnz
in
push
lahf
stc
addl
push
cmp
imul
mov
shll
ja
push
arpl
sub
add
bnd
bound
and
int
les
jns
xchg
int3
decb
push
movsl
out
cltd
sub
cli
scas
flds
clc
fdivl
xor
push
iret
sub
int
cmp
mov
push
push
xor
repz
mov
dec
les
mov
dec
test
sub
mull
cltd
jge
jge
xchg
repz
outsb
cmpsl
xor
jg
enter
jmp
lods
dec
lcall
fsubrp
cmpsb
cli
cmp
pop
or
stc
iret
lea
mov
push
xor
fcomp
sahf
add
fdivs
outsb
sbb
pop
in
shlb
add
imul
mov
lahf
jo
fidivrl
out
test
test
test
pop
dec
add
cld
and
pushf
pop
and
or
std
pushf
out
scas
arpl
shrl
insb
jo
cwtl
ds
xchg
cmpsb
or
fwait
ds
and
push
push
jle
lock
jecxz
scas
push
imull
rcrb
je
and
jle
sahf
xchg
lock
popf
lods
jmp
arpl
inc
enter
xor
pop
sub
inc
jnp
fs
dec
sbb
jno
xor
mov
cmp
jnp
das
lock
cmp
fidivrs
lret
push
sti
inc
lret
sub
adc
out
inc
push
mov
add
jmp
push
es
enter
inc
mov
inc
movl
and
adc
js
xchg
push
sbb
mov
add
inc
call
mov
nop
pusha
imul
lds
rcl
mov
lahf
mov
fsubs
sub
jle
in
adc
in
xchg
sbb
adcb
pop
jge
mov
jg
scas
sbb
push
mov
push
push
sub
pop
dec
lea
aaa
mov
sahf
insb
mov
xor
jne
sub
push
and
rclb
and
add
lahf
sub
pop
test
mov
or
test
add
pop
pop
call
loopne
or
mov
rcll
push
scas
enter
adc
or
test
and
jno
dec
add
enter
bnd
popa
sub
xchg
and
nop
cmp
les
jg
push
jnp
sub
mov
cmp
mov
pop
loopne
sbb
addr16
inc
sub
enter
xchg
nop
mov
xor
lods
push
icebp
lods
iret
inc
pop
mov
inc
pop
push
sbb
xchg
mov
inc
pop
add
pushf
and
add
cmp
lods
mov
mov
loopne
sarb
adc
ret
dec
sbb
loopne
aad
mov
xchg
insl
repnz
shrl
pusha
test
fwait
and
add
cs
jmp
push
and
sbb
lahf
jle
dec
pop
pop
cwtl
sbb
push
fbstp
shlb
outsb
mov
and
xchg
rol
xchg
dec
mov
mov
js
push
xchg
or
int3
jbe
push
xor
rcrl
iret
add
cwtl
sbb
xlat
hlt
cmc
fwait
pop
jecxz
ffree
sub
sub
cmpl
inc
inc
lea
es
cs
sub
sbb
mov
testb
aaa
in
mov
push
sub
es
add
clc
outsb
aam
xor
orl
cwtl
cmpsb
mov
aad
or
sub
cmp
mov
xchg
outsb
add
mov
pop
daa
pop
pushf
popf
sbb
adc
loopne
cli
inc
incl
jne
mov
pop
inc
inc
ss
outsb
lret
inc
xchg
sti
or
cmp
push
or
fwait
xor
add
shlb
ljmp
xchg
cmp
pop
adc
pop
or
lea
inc
pop
movsb
repnz
mov
jae
mov
iret
into
cmp
rcrb
cmp
push
jle
jb
clc
jge
cltd
cli
push
cmp
pop
lret
xor
rcrb
movsl
into
push
andl
fistpll
call
arpl
fwait
seta
out
xchg
adc
xor
or
faddl
and
iret
sbb
popa
testl
cwtl
push
push
dec
push
push
pop
ret
pop
lds
leave
je
sti
xchg
test
adc
mov
push
mov
decl
mov
loop
push
and
cmp
dec
test
xor
add
jle
mov
sti
shlb
dec
out
pop
mov
pop
mov
or
add
ljmp
lea
lods
mov
mov
dec
out
dec
mov
lahf
cmp
cmp
xchg
popa
lret
pop
insb
and
fwait
les
test
loop
loope
jns
cmp
sbb
scas
xor
mov
and
rcrl
imul
dec
lods
mov
test
and
or
ss
pop
sub
aaa
jbe
sub
cmp
aaa
or
jp
shl
lods
loop
adc
dec
idiv
mov
insl
lods
mov
ljmp
dec
js
or
inc
stc
adc
jl
xor
test
ret
lcall
insl
movsl
xchg
insl
testb
dec
cmc
xchg
stc
aas
in
js
jge
mov
and
cwtl
cmp
call
push
lods
lods
mov
dec
adc
std
or
or
out
pop
mov
add
pop
scas
xchg
enter
xor
inc
push
xlat
xchg
clc
or
andl
cmp
popf
dec
push
cmp
cwtl
cmpsb
cwtl
rclb
sbb
jbe
mov
jecxz
pop
ficoml
sub
jnp
sbb
sub
mov
imul
xchg
push
adc
xor
cmpsb
jmp
mov
adcb
lods
enter
and
adc
fisttps
pop
mov
mov
pop
pusha
cmp
int3
lods
imul
dec
sahf
insl
adc
jno,pn
cmpsb
repz
test
mov
ja
cmp
movb
push
jae
out
ss
mov
imul
push
cmpsl
sar
jmp
daa
cmp
inc
inc
add
inc
sahf
mov
dec
pushw
cmpsl
xchg
push
scas
ret
or
dec
sbb
shlb
or
rol
les
mov
sbb
sti
pusha
fsub
ja
add
ds
movsl
fildll
out
stos
test
inc
mov
fistps
cmpsb
sub
xchg
xchg
adc
push
and
push
iret
inc
push
push
xor
rcl
jne
jge
mov
pop
sub
enter
sbb
outsl
sbb
xor
sub
pusha
sub
cmp
sbb
cmp
sub
xchg
adcb
sub
adc
and
mov
adc
test
push
dec
xchg
out
repz
add
popa
sub
scas
cmp
adc
imul
hlt
push
imul
cmp
push
lods
or
or
outsb
and
inc
sub
xchg
aad
pop
xor
xchg
xchg
pop
pop
mov
and
inc
mov
sub
inc
xorl
mov
cli
iret
xor
sbb
imul
add
repnz
push
cmp
lea
push
mov
rorl
and
add
stos
or
cmp
or
and
mov
out
enter
mov
xchg
leave
mov
or
mov
xchg
jl
fbld
pop
adc
jae
add
fwait
push
push
push
push
jo
sub
test
cltd
pop
push
movsb
add
pop
scas
pusha
lret
ret
sar
je
adc
inc
in
mov
adc
movsb
repnz
sub
jns
xor
pmuludq
jb
mov
lds
mov
dec
test
in
mov
pushf
out
call
jnp
jo
stos
and
inc
shll
mov
hlt
or
js
lds
test
sub
test
mov
std
and
js
subb
mov
jp
and
push
jecxz
lea
jo
rcpps
gs
insl
popf
stos
aad
es
mov
pop
inc
sbb
data16
clc
in
scas
mov
or
cmp
mov
imul
movsl
scas
in
mov
iret
subl
mov
xlat
xchg
add
jg
pusha
subb
mov
or
mov
or
and
in
daa
cli
pop
adcb
lcall
xchg
jmp
dec
test
pop
adc
jp
idiv
out
stos
into
rcrb
mov
push
mov
ret
movsb
aas
rclb
cmp
das
inc
scas
push
cmpsb
push
lret
cmc
rclb
mov
outsb
aaa
xchg
cmp
inc
xchg
inc
pop
out
in
xchg
inc
mov
andl
sbb
mov
popa
stos
sahf
jb
insb
sub
adc
out
dec
sub
es
jo
iret
dec
xchg
xchg
hlt
push
loope
imul
daa
je
sbb
xchg
outsl
pop
pop
pop
ljmp
test
mov
movsb
inc
mov
and
jae
movb
dec
cmc
lret
sar
divl
stos
dec
xor
adc
sub
mov
cmp
subb
dec
cltd
negl
inc
ret
adc
icebp
out
movsl
inc
mov
bnd
pop
imul
js
push
adc
in
sbb
push
cltd
push
mov
pop
jne
mov
fisubs
xor
mov
stc
int
and
jns
popf
les
cli
mov
pop
adc
ds
ret
ljmp
psubusw
stc
or
push
or
xchg
sub
mov
stc
das
mov
lea
inc
subl
je
jle
push
mov
enter
jl,pn
mov
sbb
ret
and
cmp
call
mov
push
sti
inc
push
xchg
sub
icebp
lret
fwait
lahf
push
in
clc
cmp
dec
out
push
insb
jg
mov
mov
lods
popf
jmp
pop
push
push
inc
inc
push
mov
cmp
lret
inc
sub
shlb
in
inc
adcb
add
call
inc
hlt
mov
dec
lahf
sbb
lods
idivb
sub
loopne
xchg
mov
cmpsl
xor
push
in
cmp
rorb
cmc
pop
add
and
pushw
or
and
loopne
sub
dec
and
in
mov
insb
add
cmp
mov
mov
test
outsb
or
outsl
rcrb
mov
out
mov
aaa
mov
cmp
sbb
es
add
lea
xlat
sub
je
pop
sbb
lods
mov
lret
rcrb
jp
fdivs
xor
ret
push
mov
pop
sub
in
inc
adc
aam
out
dec
push
pop
mov
insb
daa
aas
ljmp
orps
jle
adc
and
shrl
ljmp
imul
mov
stc
inc
das
roll
in
mov
arpl
data16
sub
mov
lods
mov
popa
aam
cld
cmp
cmp
dec
mov
in
sub
mov
mov
push
mov
dec
xor
imul
mov
pop
jbe
into
xchg
cmp
mov
mov
mov
pusha
add
movl
dec
push
fidivrl
and
sbbb
fst
adc
mov
in
or
mov
stc
or
xor
mov
jl
push
out
sahf
sbb
je
and
loop
cmp
aam
sub
negb
push
ja
in
movsl
ja
aaa
cld
add
jl
sub
inc
sub
cli
dec
inc
push
int3
inc
xor
fistl
xchg
xchg
lods
sub
aas
sbb
push
mov
imul
push
stc
add
xchg
add
push
fadd
push
fildl
push
push
jnp
mov
loopne
mov
push
daa
or
xor
icebp
test
hlt
leave
push
dec
mov
sub
adc
outsl
sub
mov
test
inc
aaa
sbb
pop
jge
bound
fsubrs
movsb
out
xchg
mov
mov
jo
pop
pop
pop
in
data16
ret
mov
pop
push
dec
lods
inc
sti
fnsave
js
adc
and
adc
mov
adc
clc
inc
push
jb
add
es
sbb
shlb
shrb
jecxz
cmp
outsl
stos
jecxz
or
or
cmp
xor
dec
mov
ficoml
orps
pop
xchg
mov
add
inc
loopne
jecxz
hlt
fsubrs
add
testb
mov
lods
lret
int
push
jmp
sub
pop
cmp
add
pop
das
ss
push
pop
mov
leave
mov
pop
mov
jecxz
sub
aad
stos
icebp
jno
sbb
sub
int3
lock
leave
pop
fildl
cmp
pop
repnz
int
jne
mov
cmpsl
sub
xchg
sbb
and
mov
fwait
int3
insl
cwtl
pushf
bound
cmp
in
xchg
or
inc
faddl
dec
imulb
sub
push
jo
xchg
incl
mov
or
add
mov
ffree
negl
mov
mov
cmp
push
xchg
or
fs
data16
lods
das
lods
push
jmp
mov
mov
pop
jae
rcl
lret
cmp
rol
push
insb
xchg
xchg
sbb
ds
adc
lods
jne
xor
jns
jbe
mov
sbb
xchg
add
daa
pop
push
bound
adc
cwtl
add
jo
aaa
push
or
jmp
pusha
jnp
inc
ss
jp
dec
adcb
jp
xchg
call
xchg
adc
out
jp
inc
std
cmp
mov
add
ds
xchg
dec
je
test
push
jns
lock
mov
shrl
pop
or
gs
sbb
xlat
out
or
ss
outsl
xor
mov
pop
add
aaa
sbb
sbb
cmp
sub
add
in
ds
arpl
cmp
jge
xchg
mov
loop
cmp
imul
mov
sub
and
adc
orb
inc
orl
mov
les
outsb
add
hlt
or
dec
pop
adc
sub
jne
xchg
lods
cmpsb
pop
inc
push
mov
mov
push
fsubrs
stc
inc
int
dec
and
enter
xor
cwtl
pop
jecxz
insl
cmc
lea
mov
pop
je
out
adc
scas
inc
sti
out
js
sbb
and
add
mov
std
dec
sbb
xor
dec
dec
loope
cmp
pop
lret
push
mov
cmc
loopne
cmp
lods
pop
xchg
leave
outsb
das
ja
lahf
cwtl
incl
pop
mov
lret
mov
jmp
xlat
stos
mov
push
loope
xor
leave
or
or
fdivl
adc
addr16
mov
sub
sahf
insl
lds
jp
pop
outsb
jo
outsb
lods
stc
dec
cmc
pop
jne
ret
dec
stos
mov
jne
pop
dec
push
enter
mov
popw
pop
das
int
movsl
pop
sub
out
and
sub
insl
mov
sub
sub
mov
outsb
push
push
xor
in
pop
jmp
xchg
cli
inc
pusha
loope
pusha
xor
movsb
sbb
cld
jge
repz
clc
adcb
hlt
aad
stc
scas
movsb
sbb
mov
and
outsl
and
lock
cmc
pop
ss
push
pop
push
or
iret
mov
insb
adc
jno
outsb
sub
stos
pop
sub
das
fbld
dec
loope
sub
pop
or
inc
inc
rcr
cmpb
mov
mov
mov
xor
inc
inc
aad
loop
cs
xchg
pop
xor
mov
imul
fistps
sub
adc
or
sub
jo
loopne
sbb
outsb
insb
pushf
push
pop
or
stc
sbb
icebp
dec
push
outsl
jg
push
adc
push
lea
push
pop
add
je
out
and
and
fnstsw
syscall
loop
shll
outsb
repnz
dec
imul
push
fistpl
rcrb
mov
pop
stc
pop
sbb
and
mov
push
xchg
es
push
popf
dec
sub
push
push
jno
xchg
or
das
and
mov
arpl
aam
or
sub
or
mov
mov
sbb
sbb
adc
cli
mov
xor
and
push
push
in
mov
lea
fs
mov
ss
fsub
insl
std
out
iret
sarl
pop
pop
aaa
lret
push
adc
cmp
xchg
mov
jne
dec
inc
mov
loop
inc
dec
aam
dec
pop
mov
mov
pop
jae
xchg
push
and
pushf
mov
stc
push
cmpsb
add
jl
cmpsl
out
jno
inc
mov
int
adc
arpl
jp
push
fdivl
mov
add
inc
enter
ret
xlat
jg
cmp
call
call
add
adc
dec
int3
push
ljmp
pop
add
fmul
mov
stos
mov
add
xchg
mov
dec
mov
jle
out
fdiv
mov
fcompl
cmc
lret
aam
test
mov
fimull
push
test
adc
in
rclb
ficomps
xchg
mov
pushl
popa
add
inc
dec
call
jl
push
mov
add
mov
jb
or
cmpsb
notl
mov
mov
jnp
out
ret
in
jg
rclb
xorl
jmp
cltd
sub
and
xor
mov
and
aas
andl
mov
outsl
push
scas
out
inc
xor
loop
push
add
ret
imul
xorl
inc
jecxz
adc
stos
dec
mov
pushf
loope
int
clc
sub
ror
cwtl
and
sub
popf
aam
out
cltd
push
and
pop
mov
in
shr
test
xchg
jp
jb
push
and
test
lret
cmp
mov
dec
cmp
cld
sahf
cmp
push
sahf
adc
push
adc
int
xchg
pop
and
fwait
jae
cs
xor
test
imul
jne
repnz
jmp
push
mov
int3
cmp
push
lods
lock
fwait
scas
pop
dec
cmc
fsubrl
inc
push
imul
aam
clc
mov
jnp
lock
insl
popf
ss
xchg
xchg
stc
loop
jecxz
test
mov
mov
mov
mov
pop
and
sub
jo
inc
push
dec
xor
add
inc
jne
push
add
sti
and
pop
xor
icebp
outsb
or
fcmove
out
pop
dec
xor
add
xor
push
cmc
xchg
xchg
xchg
push
movsb
jo
dec
jne
jns
adc
scas
add
cmp
scas
fs
push
mov
inc
nop
dec
push
xchg
mov
lcall
call
or
cmp
xor
aam
xchg
into
add
outsl
dec
push
jo
or
ja
test
int3
loopne
push
jns
je
ret
cltd
ret
or
xor
je
push
pop
test
mov
cmp
outsl
orb
call
push
lock
xorl
xlat
arpl
pushf
sbb
adc
xchg
int3
sbb
pop
mov
inc
les
xlat
push
jl
cmp
in
pusha
mov
push
icebp
dec
jp
lods
xor
imul
xor
add
jnp
or
bound
lods
and
lods
int
add
rclb
call
std
or
test
sbb
out
fidivl
xchg
xchg
push
adc
insb
out
cmpb
pop
sbbb
pop
popa
lcall
mov
xor
push
adc
ret
aam
xor
mov
jbe
jmp
imul
adc
or
push
jge,pt
xchg
jg
cmc
dec
and
adc
in
jbe
arpl
mov
fstl
sub
lds
cmp
lretw
pop
pushf
pop
pop
inc
cmpsb
jmp
cmpsl
call
mov
mov
jno
inc
pop
fs
add
imul
mov
ljmp
adc
cmp
jae
jp
mov
mov
add
push
mov
lods
mov
mov
jo
add
scas
andb
inc
push
fstpl
ja
dec
rolb
stos
repnz
fidivrl
jb
xchg
add
insb
jge
stc
cmp
sbb
jae
mov
call
jne
add
cmc
mov
fwait
add
and
cmp
sbb
rolb
lcall
push
aam
add
dec
repnz
mov
roll
rol
inc
mov
push
imul
int3
nop
cmp
pop
dec
imul
lret
lods
lea
in
icebp
in
in
or
jo
cmp
sbb
aas
in
fstpt
int
cmp
rorl
jle
push
repnz
push
pop
cmp
dec
fdivrs
and
sub
jno
push
rcrl
test
mov
mov
mov
insb
lahf
sub
loopne
xor
hlt
ds
clc
cmp
and
movsl
sub
adc
pushf
jbe
cmp
add
mov
inc
and
adc
and
cld
push
or
sbb
adc
test
call
jmp
add
push
jne
pop
fidivrs
test
cmp
mov
adc
inc
add
loope
or
and
js
orb
ret
pusha
fisubl
rclb
xchg
sub
xor
xchg
fs
or
ss
out
dec
cmp
inc
add
mov
dec
mov
dec
or
cs
add
push
shl
outsl
mov
mov
sbb
aaa
cmp
xchg
repz
sbb
lock
lret
jmp
pusha
mov
out
xor
adc
outsl
cmp
push
pop
ds
sar
push
push
ja
jnp
push
in
xor
repnz
jo
mov
sbb
mov
adc
xor
cmpsl
daa
and
xor
faddl
pop
jbe
and
push
add
nop
loope
subb
push
xor
mov
mov
iret
mov
pop
mov
sbb
fs
out
and
rorl
loopne
ja
mov
scas
orb
movsb
sbb
xor
push
dec
mov
xchg
fisttps
ret
in
cli
and
jno
lds
cmp
xchg
jno
pop
jb
sbb
xchg
inc
fsub
jae
stos
shrb
out
cld
pop
cwtl
sub
xor
lret
mov
enter
sbb
icebp
sub
mov
xchg
loop
daa
push
mov
xor
fs
movsb
aad
hlt
scas
bound
loop
xor
pop
pop
adc
jnp
js
not
std
in
nop
mov
fildl
dec
pop
sbb
mov
sub
and
mov
shll
lods
gs
cmpsl
mov
icebp
lret
cmpsb
iret
sbb
arpl
cmpb
inc
xchg
or
add
fdiv
adc
jecxz
shlb
sbb
in
or
idivl
outsb
jecxz
mov
xchg
adc
mov
jbe
xchg
jl
sahf
addl
mov
or
adc
xor
xchg
mov
or
into
insb
out
add
xlat
xorb
in
mov
fists
dec
clc
out
lahf
inc
sbb
out
adc
xchg
mov
inc
int
in
xchg
jns
pop
ror
fsubs
push
or
cld
sbb
shl
test
mov
pop
mov
das
sbb
inc
in
push
dec
mov
pop
loope
mov
cli
jle
test
pop
xchg
pop
adc
dec
xchg
pop
sub
lods
mov
mov
ret
mov
fsts
mov
cwtl
jmp
bound
outsb
outsb
cmpsb
jg
js
mov
popa
dec
inc
push
clc
mov
out
jg
jge
add
mov
ret
mov
jp
dec
push
push
fistl
and
dec
mov
adc
fiaddl
enter
dec
pop
pop
daa
cmp
sbb
js
xor
and
mov
es
add
inc
cmc
cmp
mov
shrl
sbb
imul
xchg
stos
jnp
lods
test
mov
xchg
dec
loop
pusha
cmpsl
cmp
test
sub
sbb
push
add
push
inc
aaa
movsb
or
ret
loopne
dec
mov
lret
fxch
dec
jb
cld
adc
arpl
jl
xor
push
cmc
push
add
pop
mov
std
inc
jnp
mov
adc
in
lret
mov
and
notl
jmp
mov
and
andl
insb
xlat
pop
ljmp
fildl
fisttpl
fstl
shr
ret
mov
shrl
mov
mov
xor
test
add
push
mov
lahf
or
jno
mov
iret
sub
sbb
cmp
cmpsb
popf
push
sar
aad
mov
and
dec
pop
dec
pushf
adc
pop
adcb
insl
add
repz
ficompl
jns
or
clc
ss
sti
pop
fsts
into
jns
push
scas
lods
bound
sub
sbb
mov
add
mov
punpckldq
gs
decb
jns
adc
insl
mov
and
mov
jb
mov
mov
ja
xchg
or
and
sub
inc
stos
fiaddl
inc
mov
pop
mov
bound
dec
mov
and
stos
in
and
rcl
xor
out
ret
mov
imul
scas
and
sbb
sbb
jge
add
or
enter
mov
pop
mov
gs
into
arpl
inc
das
in
push
cld
gs
lcall
insl
loope
mov
pop
inc
int3
leave
lret
pusha
aad
inc
push
fwait
jmp
jne
ljmp
mov
sbb
adc
lret
in
test
je
add
cmc
fdivr
adcb
add
push
in
and
cmp
into
cs
jb
mov
fnstenv
mov
imul
dec
sub
push
xchg
push
ss
fnstenv
xchg
adc
push
cmp
rorb
mov
mov
cmp
cli
mov
mov
repz
jns
mov
mov
cmp
lret
leave
sub
cmpsl
pop
push
pusha
stc
popf
lret
shrb
jmp
dec
inc
repz
addr16
sub
inc
ret
lret
inc
push
testl
pop
and
cltd
negl
push
lods
popa
jle
decl
repz
sbb
int3
data16
rol
out
mov
adc
inc
cwtl
data16
cmpsl
and
movsb
push
xlat
testl
and
das
mov
jp
mov
and
gs
mov
shrl
inc
mov
test
lock
pop
mov
mov
cmp
jae
sbb
push
test
mov
adc
iret
xor
mov
loope
xchg
inc
mov
stos
fwait
pop
xchg
rcl
fildl
pop
cmp
icebp
xor
in
mov
cltd
dec
negb
ja
mov
insl
shl
lret
rolb
push
pop
push
mov
sub
je
inc
shrl
call
imul
sbb
xchg
popa
inc
out
fstpt
inc
sub
cmpl
push
scas
ja
mov
mov
add
xchg
cmpsl
pusha
rclb
pusha
stos
cwtl
gs
push
pop
pop
mov
dec
xchg
scas
sbb
sub
and
int3
int3
pushf
int3
enter
fwait
inc
cmpb
adc
adc
into
sub
aad
push
gs
cld
loopne
and
cld
movsb
sbb
sub
push
pop
xchg
xchg
push
mov
push
cs
xchg
jbe
orl
pop
jge
adc
push
cmpsb
call
inc
add
or
sub
cld
enter
test
fstl
iret
pop
push
flds
mov
sbb
jge
aad
and
ret
ds
inc
mov
sbb
cmp
xchg
mov
ret
sbb
push
pop
pop
jb
mov
pop
mov
jle
xchg
inc
jg
push
stc
sahf
sbb
sbb
cmp
adc
push
mov
in
cmp
mov
jl
inc
pandn
mov
mov
ss
icebp
push
sbb
jnp
outsl
or
sub
test
loopne
movsb
or
pop
mov
jmp
ret
lahf
inc
dec
pop
fcmovne
jo
sub
pop
cs
das
jae
pop
push
shr
sub
or
outsl
je
push
dec
mov
rorb
mov
and
divl
or
lahf
jmp
push
mov
cmp
shrl
loopne
in
call
hlt
addb
iret
xlat
cmc
or
lret
stos
jo
adc
sbb
movsl
out
pop
jnp
aad
xor
cmp
adc
stc
shll
sub
ret
adc
out
ffreep
add
or
inc
rol
shll
mov
mov
cmp
pop
pop
and
adc
das
jg
xlat
adc
sti
outsb
mov
imul
js
daa
stc
add
jb
ja
or
cltd
sahf
pop
jne
popf
fisubrl
push
das
lahf
shrl
les
rorb
cmpsl
jbe
popf
lods
jnp
addr16
or
lock
dec
lods
out
mov
or
xchg
loopne
mov
aam
sbbb
jecxz
lret
xchg
pop
mov
lcall
cmpsl
cli
push
or
adc
mov
dec
pop
fs
sahf
imul
dec
mov
into
subl
jl
jge
pop
xchg
jp
ret
mov
subb
mov
into
sar
jp
inc
cmp
scas
test
enter
mov
and
jl
mov
les
leave
sub
arpl
mov
lock
cmpsl
aad
or
cwtl
and
mull
xchg
dec
out
jb
cmpsl
pop
aam
mov
push
ret
mov
stos
je
fucomi
mov
push
and
subl
insl
xor
sti
xor
dec
insl
ret
dec
rolb
jmp
sub
or
cs
hlt
inc
lods
arpl
mov
shlb
inc
inc
mov
jp
push
xor
mov
pop
jo
mov
in
addr16
jmp
lods
jns
mov
pop
jae
and
shlb
gs
sub
rcrb
add
sbb
lcall
aas
pop
mov
mov
mov
sbb
adc
mov
mov
cmc
xlat
popa
sub
push
aad
test
xchg
adcl
sbb
call
ds
repz
inc
rorl
addb
stc
sahf
repz
mov
inc
fistpl
mov
or
lds
xchg
sbb
lcall
cwtl
cmpsl
mov
add
inc
movsl
jbe
aaa
xchg
xchg
insl
mov
add
mov
test
mov
insb
aas
mov
data16
js
ret
test
les
xchg
sub
push
or
push
and
inc
mov
ror
cmp
xchg
push
test
gs
shlb
call
fstpt
in
push
jbe
pop
dec
imul
cs
loope
pop
mov
loopne
push
dec
xor
push
mov
mov
fbld
xchg
adc
sub
or
mov
aaa
or
das
loopne
lahf
and
fwait
push
movsb
add
mov
mov
or
call
xor
add
push
jg
in
stos
xor
fs
add
xor
ss
subl
dec
sbb
xor
mov
inc
mov
pop
out
rolb
movsb
mov
hlt
pop
shlb
push
scas
cmp
mov
repz
frstor
add
mov
out
cs
imul
jno
lahf
mov
mov
xchg
aas
shl
popa
ret
xchg
scas
pop
fdivl
scas
lahf
jne
ret
cltd
aam
gs
outsb
push
mov
iret
and
xchg
das
dec
jno
jl
repz
popf
lods
sbb
cmpsb
aam
fdivrs
push
push
xor
into
nop
push
lods
sub
jle
call
push
stos
mov
xchg
mov
or
arpl
xor
push
adc
pushf
popf
pop
dec
and
dec
cmp
push
mov
push
lds
std
pop
out
test
es
pushf
loope
sbb
jge
push
dec
fwait
inc
push
jb
das
mov
mov
sbb
inc
lcall
cmp
insl
push
pop
or
rclb
mov
mov
packuswb
jmp
push
or
inc
in
lds
mov
cwtl
daa
notb
fs
sarl
popa
add
pop
cwtl
addr16
mov
pop
xor
out
pop
inc
test
incb
rol
sar
mov
fisttpll
mov
loop
das
inc
movsl
push
add
shll
or
xchg
imul
xorb
pop
inc
test
inc
dec
shlb
cmpsb
je
inc
cmp
pop
stos
call
inc
imul
cmp
mov
inc
cmpsl
cmp
es
dec
add
push
add
out
pusha
lods
pop
sub
unpcklps
mov
push
aam
shr
fbld
loopne
out
pop
and
ja
dec
mov
scas
scas
cs
mov
xlat
cwtl
out
mov
cmpsb
and
cmpsl
adc
adc
inc
shll
cmpsb
pop
arpl
push
sahf
push
repz
mov
sub
std
mov
int3
adc
push
cmpsl
push
pop
pop
test
cli
jne
arpl
cmpsl
or
inc
push
adc
mov
fdivrl
or
mov
jle
ficompl
mov
push
mov
push
and
adc
cmp
clc
in
out
fcoms
rcrl
insl
inc
xchg
adc
dec
lods
mov
adc
jo
adc
push
insl
clc
mov
iret
or
lock
add
and
dec
daa
lea
out
ss
or
add
mov
je
or
fistpll
adc
push
sbb
enter
adc
outsl
test
cli
scas
mov
cmpsl
cli
out
in
dec
iret
pop
mov
or
bound
movsl
jbe
out
push
or
pop
xchg
fbld
rorb
push
mov
xor
mov
test
leave
pop
popf
addr16
mov
mov
cmpsb
mov
cmp
or
pop
imul
or
pop
enter
inc
adc
dec
mul
pop
mov
add
xor
mov
pop
stos
xchg
and
ss
sub
dec
je
clc
in
cmp
stos
pushf
add
cmpsl
adc
mov
xchg
sbb
xchg
stos
int
adc
out
out
mov
fildll
sbb
js
movsl
inc
add
js
push
mov
popf
daa
jle
push
shlb
xchg
sub
ret
mov
lret
jl
into
pop
mov
pop
inc
lcall
xchg
cmpsl
in
shlb
loope
fildl
inc
js
daa
push
jle
pop
lea
imul
cwtl
lock
ljmp
push
shll
xor
ljmp
pop
xor
jae
sub
stc
cwtl
divb
mov
cmp
lock
dec
imul
push
orl
pop
xchg
dec
xor
push
ds
fnsave
push
std
leave
movsb
dec
shlb
jmp
adc
xchg
call
sub
orl
dec
xor
mov
jns
pop
pop
sub
mov
sub
cltd
bnd
and
mul
pop
popf
xchg
insl
sbb
cwtl
inc
jecxz
std
cmp
outsb
push
xor
stc
addb
add
cld
sub
dec
std
fcomi
dec
push
dec
mov
pusha
mov
out
stos
adc
and
into
pushf
dec
and
insl
mov
or
add
stos
add
or
mov
data16
adc
ja
cmp
mov
outsl
test
ror
mov
aam
sbbb
test
jl
pop
bound
enter
inc
rcrb
addr16
cld
push
and
out
adc
mov
mov
inc
mov
out
call
inc
gs
pop
pop
add
aad
fisttps
mov
lock
sbb
fistps
je
sbb
stos
popf
cs
adc
and
shrb
lock
sub
push
in
add
fsubrl
lahf
popa
stc
jl
adc
add
mov
mov
dec
pop
xor
mov
pop
xchg
mov
adc
je
push
and
leave
mov
adc
addl
insb
call
std
sub
inc
loopne
add
dec
mov
addr16
in
idiv
pop
fisttpll
sub
xchg
or
subl
xor
push
or
jl
cmp
xchg
ljmp
stos
pushf
outsb
sub
dec
test
mov
sahf
lcall
and
mov
pop
stos
stc
stos
jae
push
iret
add
xor
pop
mov
lahf
mov
mov
pusha
jae
outsl
jle
mov
insl
sbb
int
fisttps
or
adc
fs
push
aad
fisubrs
int3
je
std
test
jns
add
push
dec
inc
loopne
fs
pop
out
inc
imul
aad
push
mov
push
xchg
cmp
dec
dec
roll
daa
pop
and
dec
les
out
jns
in
mov
push
xor
into
mov
sbb
shl
dec
es
pop
mov
add
addr16
push
pop
popa
adc
lods
adc
insl
ss
addl
loopne
stos
js
rorb
xchg
in
repz
insl
add
insl
ret
clc
out
mov
andl
nop
pop
shrb
sub
icebp
lea
push
xchg
mov
les
mov
loopne
cmp
jmp
or
xchg
mov
loop
popf
outsb
iret
testl
in
jl
xor
lods
jnp
adc
lds
mov
fucompp
or
aas
push
pop
pop
adc
loopne
push
stos
ret
clc
jmp
jg
inc
lret
sbb
lahf
pusha
dec
cli
mov
adc
int
pop
lods
push
mov
or
js
popa
inc
call
addr16
popa
mov
repnz
pop
xchg
and
inc
in
dec
mov
and
push
or
pop
fld1
arpl
out
inc
cmp
outsl
push
xchg
aam
out
subl
dec
pushf
mov
push
ret
stos
mov
mov
pushf
cwtl
icebp
std
adc
int
xchg
jmp
repnz
fadds
xchg
mov
test
sbb
jno
mov
sahf
inc
adc
testl
dec
xor
push
xor
xchg
mov
pop
mov
jae
or
arpl
inc
inc
mov
or
mov
xchg
xchg
fsubl
imul
and
lods
pop
test
out
lds
mov
dec
ret
sub
cs
ficomps
lcall
pop
push
inc
jle
popa
cmp
xchg
lea
jno
out
popa
sti
jecxz
out
subb
in
sub
lds
cmp
pop
imul
push
sub
loop
sub
pop
fisttpl
mov
hlt
push
out
ret
adc
sbb
mov
mov
test
pop
add
cmp
xor
xor
loope
xchg
jne
mov
lcall
mov
adc
test
cmp
cmp
xor
ficompl
nop
lcall
push
cli
dec
xor
pusha
or
pop
fistps
into
iret
jp
in
lds
ret
mov
sub
repz
in
mov
xor
lods
outsl
add
mov
mov
or
scas
add
or
push
and
push
or
enter
add
hlt
lcall
in
jp
adc
lret
outsb
into
rcrl
fwait
loop
pop
lret
pop
xor
lea
pop
adc
jmp
mov
sbb
add
xchg
cmp
cmp
ja
mov
imul
mov
rcll
jb
sub
push
data16
stos
mov
jbe
lahf
jno
fdivrl
test
add
mov
pusha
into
faddl
add
or
pushf
cmp
dec
lcall
enter
outsl
or
cwtl
xchg
sub
push
xchg
sti
leave
nop
push
cmpsb
pop
mov
aad
cmpsl
test
inc
dec
cmp
roll
dec
in
gs
cltd
adc
sbb
pop
fnstsw
cmp
sahf
mov
leave
lret
movsl
outsl
dec
mov
mov
les
add
jb
fbstp
adc
mov
jmp
lret
iret
or
add
ret
ljmp
add
test
cmp
faddp
scas
xorl
xor
dec
xor
and
stos
cmp
ret
fistpl
and
pop
dec
push
mov
cmp
sub
decb
stos
fidivrl
stos
inc
add
push
cli
ss
dec
fsubl
jecxz
dec
dec
fnstenv
inc
testb
dec
pop
xlat
repnz
mov
popa
mov
in
in
leave
mov
or
ss
mov
add
cmp
sti
pusha
mov
push
outsl
lahf
js
enter
xlat
pop
pop
sbb
fsubr
dec
push
aaa
ss
add
sbb
or
mov
push
ds
mov
mov
add
sarb
push
push
jmp
sub
lea
xlat
cs
dec
add
movsl
xorb
in
mov
lds
cmp
dec
xchg
mov
sti
ljmp
sbb
fidivl
cmpl
adc
je
in
aam
lods
add
mov
pop
dec
dec
mov
xlat
icebp
loop
sub
sub
mov
pop
pop
push
adc
je
and
inc
loope
test
lods
inc
or
cmp
and
sbb
bound
mov
outsl
nop
push
mov
out
fistpl
jl
and
in
mov
mov
cmpsl
es
adc
fnstsw
popf
insl
dec
fidivrs
test
xchg
push
hlt
setbe
outsb
inc
lret
popl
popf
in
pop
test
xchg
lock
in
jmp
movsl
sub
ficoml
cmp
pop
inc
inc
push
out
cli
dec
lds
addl
mov
sti
pop
rcll
inc
jno
sub
std
xchg
push
loope
stos
movsb
inc
push
ds
cmp
jmp
popa
mov
arpl
loopne
in
rclb
cli
sti
rorl
adc
or
ds
inc
mov
imulb
rolb
inc
je
push
xchg
mov
pop
xchg
xchg
sahf
cld
xchg
adc
inc
push
lea
dec
adc
and
das
push
sbb
xchg
cld
int3
pmaxub
cmpsb
popf
xor
cmp
jae
jmp
loop
inc
pop
mov
dec
test
sub
adc
xor
cmc
aam
xchg
in
adc
mov
mov
test
push
sub
push
sbb
in
add
jmp
inc
mov
push
mov
ret
sub
pop
lret
mov
imul
inc
stos
jp
leave
repz
jne
stc
fs
aas
sarb
cmpsl
rcll
pop
sub
les
call
lods
mov
dec
pause
and
dec
jae
cmpsb
xor
cli
jmp
mov
popf
xor
popa
aas
push
mov
stc
stos
scas
xchg
and
xchg
mov
cmp
mov
test
pop
cmpsb
pop
in
sbb
xor
stos
sbb
clc
or
dec
fwait
sub
pop
sbb
stos
dec
inc
inc
or
mov
sub
adc
test
lahf
in
and
shr
mov
lds
adc
jge
inc
test
loope
push
popf
add
inc
mov
inc
mov
mov
mov
jg
pop
and
hlt
in
adc
or
pop
stc
insl
insb
jp
movsb
pop
in
add
les
outsb
mov
dec
push
addr16
mov
movsl
sub
mov
movsl
push
mov
leave
inc
xchg
or
mov
mov
cld
fwait
sbbb
ljmp
jb
jmp
dec
in
lret
jnp
scas
ss
rsm
stc
or
outsl
daa
lds
mov
loop
cwtl
jmp
repnz
ret
aas
push
xchg
mov
adc
fmull
cwtl
lret
adc
lret
mov
mov
mov
xorb
fldl
stc
pop
mov
pop
popf
mov
aam
fwait
data16
xchg
cmp
fidivrs
dec
outsl
ret
les
mov
or
daa
bound
pop
cmp
or
cs
pop
stc
push
mov
sub
mov
pusha
cltd
inc
mov
ljmp
sti
enter
imul
dec
push
inc
push
and
cmpsl
mov
pop
stos
mov
cmpb
sahf
incl
mov
loope
sahf
outsb
mov
sbb
int3
mov
cmp
sahf
xor
dec
outsb
pusha
push
icebp
icebp
dec
jl
lcall
stos
hlt
ss
aaa
int3
mov
cmp
mov
fwait
adcb
aad
mov
mov
hlt
inc
sub
xor
sub
repz
sbb
mov
pop
mov
jb
xchg
test
xor
sbb
xchg
pop
mov
pop
cmp
push
inc
out
inc
jo
mov
fnsave
call
aas
ret
repz
xchg
nop
lret
pop
test
jg
sbb
aaa
sub
xor
adc
rcr
out
push
mov
popf
rclb
xchg
mov
mov
dec
jl
repz
lret
push
inc
mov
lcall
push
divb
cmp
mov
pusha
push
mov
mov
xlat
cs
adc
cltd
scas
and
jl
mov
int
lcall
gs
in
cwtl
mov
enter
sub
and
ljmp
and
inc
fwait
xlat
in
cmp
jg
and
lret
xchg
cmp
adc
xchg
aas
xchg
mov
mov
sbb
mov
push
fstpt
xchg
cli
jae
shll
sahf
ss
jbe
xor
hlt
push
clc
xor
les
jae
adc
fcoml
xchg
inc
es
mov
pop
and
mov
scas
xchg
inc
cmp
mov
or
xchg
adc
push
cmp
xor
jmp
xchg
ficoml
arpl
sub
movsb
data16
insb
mov
js
jl
fldl
push
cs
add
or
hlt
jl
inc
fwait
aad
cmp
lahf
xchg
adcb
dec
ret
pushf
test
adc
sub
or
add
xor
cmp
pop
ret
aam
shrb
movsb
aad
pop
xchg
pushf
lods
fwait
mov
sbbl
pop
cmp
rorb
add
jge
sub
stos
mov
mov
jg
mov
in
in
repnz
mov
std
xor
fwait
int3
pop
lods
inc
add
adc
rorl
loope
inc
addr16
rcrl
adc
cmp
mov
fcompl
mov
xchg
xchg
xchg
add
mov
faddl
add
idivl
mov
jno
mov
stc
dec
push
les
sub
sbb
out
pop
mov
aas
or
mov
test
adc
jno
int
add
bound
imul
pop
out
pushf
mov
add
dec
shlb
or
iret
ds
cmp
and
sbb
das
xchg
cwtl
push
in
stos
es
sbb
std
push
out
jge
mov
inc
mov
nop
inc
jg
out
jecxz
repz
scas
ja
mov
mov
mov
inc
negb
or
jp
xchg
mov
mov
mov
mov
leave
mov
cli
dec
cs
pop
cmpsl
mov
sti
or
bound
dec
pop
lds
mov
mov
ss
fidivl
dec
je
and
sbb
xchg
daa
mov
mov
mov
icebp
test
enter
jp
hlt
repz
dec
notb
fiaddl
mov
call
dec
inc
icebp
xchg
add
sbb
mov
inc
popf
dec
adc
insb
fucomip
shll
std
fnsave
jae
pop
ss
int3
mov
pop
push
movsl
loope
mov
es
mov
xor
stos
cmp
clc
shl
xor
sbb
ror
test
fnstcw
push
int
dec
pop
xchg
inc
inc
dec
insb
subl
es
inc
fisttpl
pusha
test
out
cmc
mov
cmc
stos
js
dec
arpl
xor
jmp
lret
jo
and
mov
add
xchg
dec
push
ret
push
push
inc
jecxz
nop
rcl
cwtl
in
xor
mov
add
push
inc
sub
loop
call
cmp
sarb
jb
clc
movsb
jns
mov
xchg
outsb
xlat
xor
sub
clc
imul
jns
negl
cwtl
int
lods
mov
cmp
jne
fwait
push
push
aam
fnstenv
aas
sub
data16
pop
cmc
dec
jb
xor
in
inc
jns
sbb
mov
stos
mov
movsb
adc
nop
jge
sahf
sbb
sbb
cltd
sbb
mov
outsl
jl
pop
dec
out
and
daa
je
or
xor
xor
mov
mov
and
imul
or
inc
aas
push
jmp
adc
in
js
push
std
sbb
mov
das
es
sub
mov
fstpt
jae
arpl
js
andl
shll
cmpsl
xchg
mov
and
out
mov
ret
fwait
aad
aas
mov
ret
fnstsw
cmp
lcall
movsl
jecxz
std
cld
mov
dec
xchg
cld
jmp
mov
and
jbe
out
lock
popa
je
mov
pop
fidivrl
lods
lret
jp
stc
fucom
fsub
inc
mov
pop
xchg
dec
insl
ds
pushl
adc
cmp
call
in
in
add
add
jno
pop
dec
xchg
sub
cld
out
imul
fdivs
or
adc
push
cwtl
add
xchg
xchg
test
shll
lods
mov
sub
out
sub
push
mov
mov
fstl
sub
pushf
jne
mov
mov
adc
fcmovne
enter
iret
adc
loopne
mov
xor
stos
outsb
adcl
mov
jmp
lcall
push
imul
jo
and
pop
lods
cmp
mov
imul
mov
leave
xchg
pop
hlt
push
inc
out
or
and
xchg
push
int
in
pop
sbb
jnp
push
out
cmp
aad
jo
jne
cs
fwait
subb
xsha1
cmpsb
or
adc
ret
lcall
inc
or
pop
lds
ficompl
mov
cmpsl
movsb
mov
sub
xchg
mov
sbb
xchg
aaa
mov
push
ss
mov
scas
clc
xor
add
stc
xor
pop
jae
adc
ss
add
scas
add
sub
notl
pop
sbb
inc
es
jb
mov
rorl
mov
in
mov
mov
std
pop
pop
or
sbb
out
push
mov
jmp
sbb
push
cmp
jp
lea
or
stos
jmp
add
push
add
add
icebp
sbb
jo
mov
aam
jge
inc
mull
int3
cwtl
fsubrl
mov
dec
fldcw
cmp
mov
add
outsb
or
dec
and
inc
cwtl
xor
add
and
lret
fs
xchg
call
fucomi
test
stos
mov
ds
mov
pop
push
fnsave
lcall
into
mov
jle
mov
fcomps
adc
mov
adc
or
cld
push
mov
leave
aaa
mov
aaa
sbb
or
add
iret
mov
mov
rcr
xchg
inc
mov
mov
mov
dec
fisttps
test
loopne
mov
cwtl
xor
sub
mov
sbb
sbb
scas
pop
rorl
mov
push
push
dec
movsl
aad
push
fimuls
push
xchg
lret
movsb
mov
jb
incl
frstor
jg
dec
mov
dec
lds
sbb
lods
xlat
sub
scas
add
inc
sbb
movsl
sub
mov
ficoml
ret
rclb
xor
inc
jle
xchg
xor
jmp
out
in
sbb
fnstcw
xchg
cmp
rcl
pop
mov
into
dec
scas
sarl
xchg
sub
xor
jg
ficoml
xchg
in
fisttpl
fwait
add
mov
mov
loopne
loop
hlt
lcall
test
mov
das
cli
mov
es
push
mov
lods
aaa
xor
push
jne
lcall
scas
push
ret
dec
inc
test
test
pop
dec
or
push
cld
and
push
pop
les
stc
and
jle
sbb
ret
pop
xor
dec
stos
outsb
lock
xchg
xchg
sbb
imul
test
and
inc
and
adc
mov
rclb
cmp
push
in
aaa
xor
mov
fwait
jmp
mov
mov
mov
cmp
pusha
lret
pop
mov
test
jnp
sar
cmp
push
jb
in
pop
test
jp
fwait
add
jb,pt
aaa
movsb
decl
sbb
loope
mov
mov
in
les
or
mov
xor
jnp
add
lcall
ja
cs
mov
std
push
cltd
pop
xor
test
mov
mov
pop
inc
or
in
mov
jmp
or
sahf
imul
cld
jno
lcall
mov
inc
aaa
test
adc
gs
fbstp
iret
subb
push
cli
outsb
aaa
mov
mov
outsl
xor
mov
lea
adc
or
mov
or
or
int3
or
mov
imul
cmp
and
addr16
adc
mov
fadds
das
pop
push
mov
jle
ret
xchg
mov
xor
pop
mov
cmp
xlat
cmpsb
orb
xor
sbb
pusha
aas
imul
fildl
push
xor
insl
aaa
sub
outsb
pop
mov
imul
inc
scas
adc
push
push
jle
push
mov
mov
shrb
stos
pushf
in
test
cmpl
int
pop
and
mulps
sbb
stc
pusha
in
add
pop
pop
bound
adc
lret
arpl
mov
popa
xchg
fs
insb
movsl
xchg
lcall
or
jno
lret
or
push
lock
fldt
pop
xor
and
dec
jp
mov
pop
pop
dec
je
pop
adc
dec
lahf
sbb
adc
mov
outsb
outsb
jb
mov
xlat
mov
scas
stos
mov
ds
push
shll
dec
aas
js,pt
sub
rorl
dec
stos
inc
out
lods
dec
pop
xor
inc
scas
push
or
fistl
mov
int3
rcrl
jle
lret
mov
sbb
adc
aas
cli
fcompl
push
push
mov
pushf
push
mov
mov
sbb
xchg
js
cld
xor
pop
push
sbb
sti
mov
popa
adc
adc
adc
sbb
mov
and
cltd
inc
in
or
jbe
loop
inc
adc
mov
ret
cmc
inc
cli
aas
pop
test
fidivs
aas
sub
mov
cmp
sub
mov
add
mov
icebp
into
jnp
push
inc
mov
sbb
dec
dec
sub
enter
mov
cmp
xchg
out
bound
adc
mov
push
popa
imul
jns
jle
mov
jp
cmp
test
sbb
and
mov
push
out
loope
bound
lds
push
and
lock
xchg
jns
sbb
mov
arpl
pop
cmp
into
jle
xor
outsl
fdivrl
shll
mov
mov
das
sbb
cwtl
xor
rcrb
in
jecxz
add
int3
cmp
test
xor
stos
pop
or
mov
loope
call
repz
incb
add
out
adc
pusha
cs
or
loope
pop
sbb
xor
loopne
pop
ds
or
repz
cmpsl
cmp
addr16
adc
mov
out
xor
or
push
mov
add
add
sbb
stos
mov
ds
daa
sub
loopne
das
push
mov
mov
cltd
int3
clc
sbb
cmc
ja
fs
and
cltd
xor
leave
mov
bound
pop
or
and
or
divl
sahf
push
xor
shlb
mov
push
jns
dec
push
jl
mov
ret
sbb
add
iret
addl
sbb
dec
outsb
out
jbe
sbb
and
gs
or
xor
mov
cmp
scas
mov
std
fcmove
inc
adc
fsubrs
push
imul
out
jo
xchg
js
test
jae
inc
or
mov
popa
mov
jnp
mov
cmp
xor
adc
dec
xchg
subl
jle
hlt
sub
inc
movsl
sarb
dec
sbb
pop
jmp
scas
or
arpl
pop
lods
shr
leave
push
push
out
add
mov
inc
xor
mov
sub
jbe
cs
pop
incb
je
jle
out
dec
aas
inc
fidivl
lea
add
pop
mull
int3
push
mov
mov
cmp
xor
xchg
mov
inc
xchg
xor
addr16
and
test
xchg
add
nop
push
add
fmuls
add
push
xor
in
adc
lcall
dec
and
stos
outsb
lock
or
or
jns
addr16
outsb
jmp
shll
or
jp
cld
adc
or
js
test
jmp
sbb
pop
xlat
mov
push
push
and
loope
rcl
mov
scas
push
cltd
dec
aas
and
push
pop
jmp
cmp
mov
cwtl
jo
mov
pop
ds
push
adcb
xor
jecxz
dec
mov
and
pop
jmp
mov
rorb
mov
xor
bound
mov
roll
test
ja
pop
mov
cli
js
rorb
cmpsl
pop
push
or
enter
sub
xor
flds
add
scas
scas
sbb
xlat
icebp
dec
filds
test
mov
push
movsb
cs
add
sub
mov
insb
data16
sbb
pusha
fcoms
shlb
movsb
pop
sub
imul
dec
das
push
rorb
mov
lahf
push
ja
sti
jns
das
or
and
cmc
inc
mov
jg
ja
lret
pop
dec
btc
cmp
xchg
cmp
push
adc
dec
cld
in
shrb
insl
dec
push
mov
popf
mov
cmc
shl
scas
cwtl
mov
jg
sahf
mov
lret
lods
jno
cwtl
ds
shll
movsb
loop
pop
add
add
negb
sub
jae
scas
aam
pop
loope
cmp
dec
adc
xchg
sahf
cmp
dec
jecxz
push
mov
lret
decb
and
lock
lods
mov
cs
xchg
pop
scas
fsubl
negl
testb
test
inc
jne
pusha
mov
subb
mov
mov
arpl
xchg
jb
mov
mov
sub
repz
rorb
std
push
sti
fldenv
mov
pusha
imul
in
ljmp
mov
sbb
stc
shll
scas
loop
cmc
in
jno
aaa
jp
js
push
outsb
jne
test
push
mov
call
xchg
popf
fisttps
out
xchg
es
push
movsl
pop
iret
imul
or
movsb
dec
jl
lea
or
xor
add
add
pop
std
push
xor
addr16
jbe
mov
cs
push
cmp
mov
ljmp
and
fcmove
xor
jb
lahf
fnsave
jg
invd
mov
out
sub
add
repz
xchg
rcrl
data16
insb
mov
pop
js
lret
push
push
pop
stc
jnp
dec
insb
ja
fs
sbb
aam
xchg
add
adc
xchg
dec
aam
cs
cmp
cmp
xchg
mov
rol
mov
adc
testl
mov
sbb
sub
push
xorb
rcr
push
jo
cmc
imul
mov
lcall
push
std
add
arpl
mov
push
aas
rcrl
jnp
inc
in
aam
std
sbb
adc
jne
movsl
mov
xor
xor
and
xor
xchg
in
sub
fisubs
or
dec
mov
push
decb
out
cmc
scas
test
std
add
int3
mov
in
insb
arpl
stos
pusha
outsl
xor
roll
push
fwait
sub
mov
inc
adc
pop
push
add
pop
rcr
cmp
out
adc
mov
sub
inc
hlt
sbb
push
sahf
cmp
mov
rdtsc
repz
inc
dec
inc
and
jbe
lods
mov
ss
mov
adc
les
mov
mov
jle
cli
mov
cmp
js
fstps
sbb
dec
lcall
out
stc
cld
les
test
shll
mov
loope
pop
call
shl
pextrw
mov
push
or
cli
jl
and
sbb
inc
clc
mul
call
mov
jns
adcl
aad
jg
cli
push
nop
insb
push
sub
cltd
out
fsts
cvtss2sd
js
mov
jg
dec
push
mov
push
xchg
les
push
or
sti
shrb
push
xor
add
cmp
jl
rcll
dec
les
popa
sub
or
scas
insb
inc
mov
push
gs
or
js
mov
jmp
jnp
movsl
jae
or
sti
jmp
mov
mov
testb
mov
das
adc
mov
lahf
jne
subl
mov
inc
push
mul
cmp
mov
loopne
mov
mov
mov
push
dec
subl
or
sub
ss
mov
mov
and
xor
fs
sahf
cmpsb
testl
fldcw
out
scas
ss
jne
xchg
cmp
testb
sub
inc
sbb
sti
shr
dec
mov
xchg
bound
pop
call
fidivl
or
inc
mov
xchg
jo
sarl
and
hlt
mov
or
int
inc
ret
add
stos
cmp
push
dec
mov
rcrl
mov
pop
popl
pop
incl
dec
movsb
sbb
mov
jns
std
push
xchg
or
or
inc
xor
cld
in
pop
mov
push
cs
stc
aas
dec
xor
lea
pop
mov
aam
js
cmpsb
mov
pushf
or
rclb
jns
pop
lcall
push
push
cmp
lcall
xlat
adc
mull
lret
xor
out
push
mov
in
pop
jmp
sahf
adc
pop
shl
pop
lret
push
adc
mov
pushf
mov
cwtl
xchg
in
pop
mov
fwait
sbb
push
mov
pop
mov
arpl
and
ficoms
sbb
cmc
das
into
cmp
add
fbstp
push
and
lock
mov
std
imull
bound
rolb
aad
lret
xor
jle
sbbl
inc
mov
out
lahf
and
shlb
mov
xor
cmc
dec
cmp
jge
cmp
arpl
aas
pop
pop
sbb
out
frstor
push
lcall
stos
js
cmp
fwait
jo
icebp
inc
xchg
and
clc
je
lds
xor
or
lret
mov
cmp
push
xchg
mov
rcrb
loopne
je
mov
cli
adc
push
stos
das
ljmp
cltd
push
outsl
push
mov
dec
cmpsl
sahf
adc
sub
and
stos
loopne
cmp
std
mov
mov
fsubrs
loop
repnz
mov
xor
fbstp
or
dec
out
and
shll
jge
cltd
jmp
mov
outsb
xlat
dec
jnp
in
add
mov
shlb
add
jae
adc
stos
in
jno
call
mov
int3
adc
lea
aam
outsl
icebp
jmp
dec
in
push
lods
movaps
xchg
outsl
mov
scas
repnz
or
sarl
jns
stos
and
jmp
fists
out
mov
mov
jecxz
test
mov
mov
ret
push
mov
cmp
and
mov
inc
jnp
sbb
xchg
es
mov
lea
jae
sub
inc
mov
test
push
mov
lods
jbe
imul
mov
dec
xor
pop
test
inc
enter
sti
jecxz
xchg
loop
iret
punpckldq
out
mov
add
push
xchg
ret
cmp
pop
paddusb
scas
mov
cmpsb
add
insl
stc
sbb
xchg
and
mov
addr16
add
and
out
inc
fs
adc
imul
cmpsl
mov
xor
or
adc
insb
push
lods
adc
mov
pop
inc
fwait
cmc
xchg
roll
das
or
cwtl
or
std
sub
loop
jbe
movsb
cmp
js
cmp
ret
out
fwait
sub
jecxz
cmp
jl
adc
fcoml
jns
loopne
lret
or
icebp
add
inc
xor
xor
fldl
cmc
adc
mov
fbstp
jl
mov
cmp
push
outsl
jo
push
dec
xchg
lock
les
add
ss
and
sbb
push
enter
adc
cmpsb
lret
pop
mov
jns
sub
or
aaa
add
addb
sbbl
push
loope
push
mov
sbb
mov
jp
jge
test
xchg
iret
je
pop
mov
scas
aam
dec
sbb
lret
sbbl
xchg
aaa
inc
cmp
adc
rcrb
push
lds
mov
popf
fidivl
es
push
inc
lret
sbb
mov
mov
adcl
jne
mov
shlb
into
mov
ljmp
cmp
cmpsb
mov
hlt
gs
lahf
loope
lret
lods
flds
mov
addl
bound
mov
lret
les
pop
cwtl
aam
cld
pop
call
cli
cmp
shrl
mov
negb
js
cltd
lods
cmpb
lock
int
jne
iret
shl
loop
xchg
outsb
mov
fxam
jae,pt
pop
push
fucomip
shrb
and
inc
or
roll
mov
neg
fwait
repz
mov
push
dec
scas
and
mov
or
outsl
out
mov
decl
mov
outsb
push
inc
fildll
icebp
movb
cwtl
xor
push
fisttpll
leave
cltd
sub
call
and
adc
dec
fwait
xchg
jmp
aas
jbe
rorb
or
push
xchg
in
ret
cmp
mov
ss
inc
push
inc
lea
dec
sbb
movsb
pop
mov
mov
push
scas
mov
and
jo
adc
les
cmp
xor
dec
jl
shll
stos
enter
cmp
enter
xchg
pusha
mov
xor
push
sub
pushf
repnz
jbe
insb
jmp
in
adc
test
ror
sbb
xor
out
and
dec
mov
sbb
push
jg
push
jp
xchg
jbe
iret
dec
sbb
xchg
jnp
jmp
push
ljmp
sahf
std
fwait
push
xor
inc
or
gs
in
cmp
cltd
push
push
jl
jbe
push
and
mov
inc
inc
push
cmp
jnp
pop
lret
sahf
mov
lds
push
inc
add
cli
pop
sbb
int
xchg
sbb
stc
dec
shlb
pop
dec
xchg
jl
dec
push
into
cmp
add
sub
sub
dec
dec
add
pminsw
sbb
repnz
dec
sti
pop
shll
adc
rorl
add
sbb
sub
push
pop
add
mov
nop
sahf
in
mov
xchg
ret
ret
mov
dec
loopne
push
je
fsubs
add
push
mov
ret
or
push
in
lea
sahf
xor
loopne
into
movsb
or
and
pop
add
xchg
pop
push
sti
sbb
cwtl
jnp
lcall
roll
aas
jbe
cmc
movsl
inc
mov
adc
mov
and
scas
ja
cld
imul
ret
jg
xor
test
inc
outsb
shlb
mov
inc
push
cwtl
xor
add
mov
adc
push
jle
gs
dec
pop
sbb
in
and
xchg
in
lock
and
mov
out
imul
sbb
mov
ljmp
leave
mov
ljmp
addl
aas
pop
push
lret
or
and
movsl
neg
in
push
sbbl
jl
cmp
jns
bound
pop
in
mov
xchg
cwtl
sbb
imul
xor
and
dec
xchg
mov
psllw
jmp
out
mov
nop
popa
push
lock
lahf
bound
pop
jl
clc
outsl
or
mov
rolb
sub
push
mov
adc
mov
mov
lock
mov
cld
sub
and
jnp
aaa
pop
hlt
lods
jge
loopne
mov
lods
testl
stc
mov
scas
xchg
movsl
and
test
jle
push
jns
fpatan
fnsave
shlb
mov
xor
shrl
dec
rorl
mov
jnp
dec
outsl
push
xor
adc
fildl
sbb
push
leave
ret
jbe
and
shlb
scas
sbb
xchg
adc
push
cmp
imul
ficompl
je
aam
push
enter
inc
cmc
jnp
xor
inc
in
cld
mov
cmpl
bound
out
dec
arpl
fdivr
jmp
out
mov
pop
sar
mov
fnsetpm(287
add
fimuls
sarb
cltd
and
push
scas
ret
xchg
ficoms
mov
xor
pop
je
insl
out
sbb
loope
mov
idivb
sti
mov
mov
sub
ja
nop
pop
mov
mov
aas
in
mov
pusha
rol
ret
daa
imul
sahf
bound
pop
es
int
movsb
dec
es
pop
scas
cltd
mov
lock
imul
imul
mov
mov
sbb
inc
ficomps
inc
sbb
fsts
cmp
push
sahf
in
or
sbb
or
lods
icebp
scas
lahf
testl
adc
les
mov
clc
lahf
push
adc
cli
enter
test
ds
jecxz
rcrl
mov
mov
stos
push
loope
mov
insl
rol
push
je
pushf
stos
inc
push
mov
push
add
jecxz
xchg
insb
and
mov
cs
add
sti
arpl
pushf
pop
pop
lcall
loopne
adc
stc
hlt
or
or
xchg
mov
gs
fidivl
adc
divl
shrl
fmull
dec
aaa
bswap
jge
pop
aam
jae
test
stc
jnp
or
cld
mov
mov
gs
test
int
mov
das
das
xchg
fst
cs
jp
xor
leave
push
inc
or
xor
sbb
test
add
movups
pusha
jne
xor
xor
mov
push
sub
ds
cmp
ret
sbb
cmp
lods
mov
adc
outsb
pop
scas
and
cs
xor
leave
frstor
push
lahf
inc
dec
and
adcl
outsb
sbb
or
repz
outsl
cmpsb
int
loop
jmp
fs
int
dec
mov
pop
ror
xchg
adc
and
daa
repnz
inc
mov
mov
mov
xor
daa
mov
shlb
mov
addr16
fbstp
and
in
jmp
jae
pop
or
mov
mov
sbbb
leave
outsl
xchg
repz
int
iret
jo
lods
dec
sti
inc
or
lds
aad
adc
sahf
jbe
and
flds
jmp
jp
lds
mov
cmp
mov
mulb
je
js
in
xorl
pop
mov
lods
js
sub
push
xchg
movsl
cmp
in
sbb
mov
cmpsl
or
mov
jmp
inc
xchg
lret
push
dec
jo
sub
arpl
dec
fwait
in
jmp
cmpl
pop
mov
pop
and
mov
lea
int3
aam
inc
sbb
mov
inc
jno
call
xor
cwtl
jge
pop
jg
jge
push
cmp
imul
ret
sub
push
sub
cmpsb
mov
jns
fiaddl
shrl
loopne
dec
mov
pop
push
jo
loopne
or
or
mov
dec
scas
mov
fists
sbb
ret
std
and
sahf
imulb
or
loope
cmpsb
dec
xchg
fistps
mov
sbb
es
shrl
xor
and
iret
jge
xchg
sbb
dec
je
repz
push
fucomp
js
dec
sbb
pop
shr
sbb
int3
mov
and
push
sahf
xchg
sbb
dec
lret
push
adc
movsb
pop
mov
push
push
mov
xor
lods
mov
bound
jle
lods
shll
jmp
sbb
dec
jns
or
xchg
xlat
out
dec
mov
sbb
or
cmpl
es
call
lock
aad
mov
xchg
jae
sbb
movsl
mov
pop
cmp
push
cmp
adc
data16
sub
and
and
popf
adc
jl
mov
lahf
inc
push
mov
jns
pusha
mov
xlat
inc
fnstenv
dec
dec
fs
push
push
ds
xchg
in
jbe
mov
fisubrs
jno
movb
outsb
cmpsb
mov
iret
fimull
ret
and
repnz
mov
call
push
outsl
xchg
ror
lcall
movsl
sub
es
jg
outsl
push
xchg
push
jb
cmpsb
mov
inc
inc
push
xlat
lods
les
and
arpl
add
dec
dec
jecxz
inc
mov
sub
mov
out
mov
scas
and
outsw
push
jnp
stos
imul
cmpsl
cld
xchg
jl
add
movsl
out
jge
es
or
add
mov
popa
jmp
subb
mov
movntps
mov
inc
cmpsl
out
jb
sub
mov
jo
out
sahf
icebp
bound
push
mov
sahf
pop
and
movl
lods
push
movsl
aam
rcrl
xchg
scas
js
mov
lock
mull
bound
or
mov
imulb
shr
ficomps
push
int3
and
test
mov
ds
xor
add
push
scas
mov
js
jno
push
pusha
xchg
adc
cmp
jg
xchg
lahf
jo
xchg
push
add
sahf
into
xchg
xor
scas
inc
jmp
add
fisttpl
testl
stos
pop
jp
push
sub
push
push
bound
repnz
mov
push
xor
rcrl
sbb
inc
inc
xchg
int3
mov
pop
lret
out
mov
cmpsl
fdivl
add
decl
in
ljmp
jge
cmpb
pop
mov
sbb
or
cld
je
jmp
pop
xor
ret
in
cmpsb
aas
int3
dec
dec
scas
popa
filds
pop
xchg
pop
cmp
xchg
push
dec
pop
test
idivb
mov
out
xor
mov
aas
mov
and
pop
scas
scas
int3
out
std
rorb
shll
sub
mov
sub
hlt
mov
imul
cmpsb
ret
scas
dec
movsb
mov
jl
mov
mov
pop
rol
sub
mov
jb
xchg
mov
mov
bound
fildll
fidivs
adc
pusha
lret
dec
aam
dec
adc
mov
scas
or
jnp
jg
int3
fnstcw
jecxz
adc
test
mov
jnp
pop
push
jecxz
mov
xchg
inc
js
ljmp
es
adc
test
xor
jecxz
insl
ljmp
mov
mov
jb
mov
out
int3
pop
jmp
push
in
daa
outsb
stos
xorb
add
out
fisubs
filds
call
jge
addr16
test
dec
mov
fadd
lea
push
jg
icebp
int3
mov
pop
fs
sub
insb
xchg
loopne
cmpsl
test
add
test
enter
out
fiaddl
inc
jbe
loopne
and
fildll
loop
push
mov
scas
jmp
cld
add
in
xlat
imul
adc
call
fstpt
adc
and
inc
sarb
push
push
push
loop
jbe
push
mov
push
inc
xchg
mov
or
movsb
cs
dec
pop
test
je
jge
cs
cmp
jg
mov
adc
sarb
sbb
outsb
xchg
sub
test
movsl
xchg
jecxz
mov
mov
cmp
sbb
clc
pop
sbbl
push
orl
loope
sub
xchg
mov
sub
cmp
std
sub
dec
xor
xlat
ret
mov
in
sbb
xor
dec
aas
push
data16
pop
sbb
mov
xor
xor
cmp
mov
pop
mov
push
xorl
sbb
xchg
lret
loop
or
dec
inc
mul
jge
mov
push
jne
mov
xorb
outsb
test
int
ret
fisttpll
jnp
dec
mov
ja
dec
loope
push
or
lret
sbb
add
out
fnstsw
mov
ficoms
lcall
mov
test
test
mov
mov
mov
leave
aaa
cmp
cmp
hlt
mov
and
pop
or
pop
pop
subl
mov
and
in
daa
mov
xchg
add
flds
push
xchg
jae
rcll
mov
sti
rcl
loope
xchg
pop
ret
cmpb
pushf
pop
inc
lock
in
adc
je
cmp
xchg
push
or
ret
sub
sbb
popa
stc
imul
jl
and
adc
mov
jno
int3
clc
int
out
icebp
fldl
push
cwtl
out
pop
insb
in
fwait
xchg
fs
imul
or
daa
jns
iret
das
xor
jmp
cmpsb
sub
pop
fiadds
inc
xchg
cltd
xchg
xchg
jle
mov
orb
test
push
add
xchg
push
clc
dec
jbe
xor
xor
dec
and
push
cltd
fsubs
dec
inc
push
daa
sarl
add
mov
xor
adc
cld
shll
fdivr
psubsb
adc
decl
aad
push
adc
scas
shll
rorb
push
loop
sbb
mov
mov
ret
aas
push
mov
sti
js
pop
pop
xor
jns
inc
leave
jnp
jl
sbb
mov
jb
lods
out
or
push
ret
pop
stos
push
pop
sbb
adc
push
pop
ljmp
lds
xor
pop
xor
push
xchg
mov
pop
fstpl
call
in
ds
mov
imul
daa
xchg
je
and
hlt
push
std
imul
xor
clc
in
xor
dec
insb
sub
cmc
cmp
mov
mov
inc
test
add
psubsw
inc
cmp
mov
testl
arpl
int
jge
imul
out
mov
push
mov
fnstcw
or
test
xchg
icebp
xchg
dec
pop
test
out
ljmp
lcall
jns
and
leave
popa
mov
sub
inc
dec
push
orb
je
jnp
out
xchg
test
mov
push
pop
rolb
cltd
cmp
lret
cmp
pop
rol
xor
clc
dec
jp
int
jnp
and
addr16
lods
push
or
pop
adc
mov
jl
pop
and
mov
xchg
andb
jo
xchg
sbb
and
push
pop
jle
daa
cmp
push
push
daa
cmp
push
sbb
shrw
xlat
test
out
bound
mov
arpl
mov
fbld
jbe
jnp
sub
jge
icebp
mov
xor
inc
xorl
dec
and
pusha
fwait
cld
mov
clc
mov
xchg
rol
stos
idivb
pop
sbb
daa
fldcw
int
int
fabs
cli
lcall
mov
mov
xorl
lretw
cwtl
imulb
lahf
pop
cmpsl
pop
or
ror
or
cmp
xlat
insb
xchg
mov
rcrb
mov
pop
es
pop
xchg
fadds
push
popf
pop
adc
cs
push
add
int
into
mov
pop
sarb
ss
sbb
sahf
cli
fldl
shlb
dec
xchg
pushw
sub
std
rcll
fistps
lods
pushf
mov
xor
lds
arpl
sub
mov
mov
or
xchg
lret
push
push
jmp
int
lcall
add
lcall
adc
xor
push
popf
nop
setne
rcrb
or
ret
jecxz
sub
or
imul
imul
mov
pop
test
sbb
cmp
pop
test
cmc
xchg
das
sub
mov
dec
jg
movsl
ret
shll
nop
cmp
call
les
adc
fidivs
test
lods
push
xchg
fbld
mov
mov
ds
das
add
push
push
test
jle
dec
xor
nop
add
pop
out
fsubrs
cld
push
sub
add
stos
scas
pop
push
mov
jb
arpl
cltd
add
mov
sbb
test
test
sub
rcr
fcoms
cli
sar
test
jo
cmp
mov
xor
and
scas
push
clc
inc
jo
out
out
rcrb
and
aaa
inc
ja
scas
adc
add
mov
scas
ds
sbb
add
cmp
pop
push
and
repz
sbb
jg
xor
and
dec
mov
ss
les
and
fwait
movsl
dec
mov
inc
popw
je
add
out
stos
outsl
mov
pop
mov
imul
repnz
mov
stc
jp
mov
push
xor
push
repnz
test
inc
aad
sarb
rcrb
push
incb
cld
cmp
mov
mov
cmp
sub
sub
in
sub
mov
adc
into
jle
add
push
cmp
stc
hlt
jae
daa
fisubl
ret
cmpl
pop
rcrb
imul
push
xor
das
decb
das
mov
lahf
cmpsl
pushf
xchg
push
jl
cmp
popf
repnz
cmp
fidivrl
or
sti
xchg
mov
gs
je
jns
fs
fwait
call
les
shll
loopne
jne
jne
mov
mov
sbb
repnz
sub
sub
add
out
aaa
inc
sub
test
pop
mov
clc
sbb
sbbl
dec
and
addr16
ss
fisubrl
mov
test
add
sub
push
fistl
sub
sbb
adc
jp
scas
or
cmpsb
cld
sbb
cmpsb
jl
push
int3
pop
fdivl
mov
jae
cld
adc
mov
out
push
in
mov
add
shlb
sub
adc
xor
xor
shl
enter
ljmp
pop
mov
movsl
gs
inc
or
pushf
mov
adc
xchg
push
jbe
scas
cmp
mov
add
inc
pop
int
mov
ds
mov
ljmp
cmpsl
jl
lcall
pop
lods
sbb
lcall
pushf
lret
pop
mov
arpl
popf
push
pushf
cmp
push
insl
test
mov
jg
fbstp
push
or
adc
loope
repz
dec
int3
pusha
sub
rorb
andl
sahf
jo
push
mov
nop
sub
sub
lods
add
or
mov
es
xchg
mov
add
sub
int3
or
adc
ja
add
mov
out
mov
add
addl
gs
data16
shlb
icebp
or
inc
hlt
and
inc
add
repnz
sarb
lcall
lea
das
pop
inc
fiaddl
jl
js
sbb
repnz
insl
mov
mov
jae
push
int
inc
jae
in
ret
into
iret
loopne
lock
add
test
jl
ljmp
loopne
xchg
push
iret
out
addr16
xchg
xlat
fbld
lret
mov
daa
and
add
sub
xor
dec
mov
ret
xchg
sahf
aaa
add
mov
lods
add
cld
inc
loopne
and
lret
or
test
scas
aam
and
cltd
jle
outsb
jp
aaa
sub
adc
mov
cmp
daa
dec
jnp
pop
pop
pop
shl
mov
sbb
xchg
push
lods
hlt
incl
sahf
jl
mov
addl
sbb
jecxz
jle
xchg
dec
out
push
inc
push
cmp
cmp
sbb
pushf
sarl
sti
jmp
pop
addr16
fcmovbe
fwait
or
ficomps
cmp
jmp
aam
jmp
sub
fdivrl
in
sbb
fs
mov
shl
adc
jno
cli
mov
rolb
mov
pop
mov
mov
ljmp
dec
jp
sahf
adc
les
sbb
push
cwtl
or
pop
cmp
pop
decl
je
addb
add
or
orl
jmp
outsb
adc
test
push
fistps
negl
andb
add
out
jb
out
and
insl
ret
xchg
mov
subb
test
dec
in
push
shll
jmp
inc
add
dec
sbb
stc
daa
sub
push
push
inc
or
mov
lods
xchg
sahf
pop
and
and
dec
jb
mov
sub
xchg
imul
inc
lret
cwtl
ljmp
ret
xor
in
dec
std
pusha
js
mov
inc
mov
addr16
das
add
imul
lds
push
adc
mov
and
lret
add
adc
nop
push
or
xchg
and
fs
add
adc
mov
inc
sub
lahf
loop
dec
std
adc
cmc
xor
test
xchg
std
mull
cmc
add
pop
repz
ficoms
pop
hlt
call
pop
mov
xor
xchg
sbb
xor
mov
lock
xchg
mov
cmp
in
jl
pop
mov
je
je
push
xchg
add
adc
nop
lods
lods
jae
loop
push
push
int
jb
jns
mov
and
mov
cmp
in
xor
leave
mov
cwtl
sub
cs
mov
mov
fucom
shll
push
sbb
mov
xchg
or
sub
aam
jp
test
int
mov
in
add
into
fbld
push
mov
cmp
mov
cli
xor
in
das
test
js
mov
mov
mov
or
sbb
filds
ljmp
jnp
pop
in
adc
arpl
mov
mov
jl
int3
inc
shll
jno
adc
nop
pop
mov
imul
xchg
je
push
adc
xchg
das
adc
cwtl
pop
rcll
jp
movsl
push
hlt
sbb
jnp
fldz
stc
mov
jne
and
or
pop
scas
test
dec
or
jae
push
sbb
xchg
nop
jo
roll
es
mov
negl
ret
addl
mov
outsb
imul
subl
in
pop
filds
gs
jg
jmp
adc
xor
mov
jmp
lcall
sbb
cli
lahf
inc
nop
dec
pop
pop
test
sbb
imul
and
ffreep
movb
mov
hlt
jecxz
fsubp
push
mov
cmc
add
shrb
fmul
adc
in
sub
mov
mov
mov
pop
lds
jns
add
shll
jns
in
in
std
cmpsb
mov
stos
dec
push
xor
adc
sar
mov
push
add
add
mov
jmp
lods
inc
sarb
inc
shl
jo
fstpl
mov
lods
mov
ret
lcall
pop
adcb
jg
push
scas
sbb
inc
cs
pop
push
adc
push
pop
push
stos
push
iret
inc
dec
aad
out
out
mov
mov
cmp
popa
clc
or
adc
pop
xchg
jp
js
lds
lret
dec
pop
call
arpl
ljmp
mov
ret
lds
jns
dec
add
cltd
int
xlat
jno
jno
out
mov
repz
sti
outsb
hlt
cmp
and
dec
mov
or
cmp
les
hlt
sbb
xchg
stc
das
push
and
inc
cmpsl
std
ret
sub
mov
jbe
dec
out
dec
enter
dec
fwait
in
or
cwtl
inc
rolb
add
sbb
stos
fnsave
les
movsb
pop
xlat
sarb
pushl
cld
shl
cli
int3
xor
pop
clc
mov
jge
mov
push
das
dec
enter
xchg
icebp
sbb
xlat
dec
lds
xchg
nop
and
stc
sbb
xor
clc
cmp
lock
fiadds
xlat
and
and
xchg
lods
scas
dec
jns
and
and
mov
or
adc
mov
push
test
push
cwtl
aaa
cltd
ret
daa
xchg
push
mov
add
lock
jmp
add
or
out
ss
test
aad
rorb
hlt
push
mov
daa
sbb
lahf
inc
mov
cmpsb
sbb
xchg
inc
in
pop
and
mov
pop
sub
and
ss
add
inc
fldl
xchg
xor
mov
imul
xor
call
push
rolb
repz
push
and
addb
mov
out
repz
bsf
sbb
lea
shr
js
int
andl
xchg
add
mov
jbe
sub
cltd
push
mov
push
mov
ret
xchg
dec
mov
mov
xchg
call
jae
and
mov
mov
xlat
inc
sti
and
scas
push
inc
stos
shrl
push
xor
leave
mov
mov
insl
cmpsl
inc
leave
jp
mov
fistl
adc
clc
xor
movsl
and
clc
stos
orb
mov
and
push
pop
scas
jb
mov
push
dec
push
hlt
cmc
cwtl
je
inc
mov
inc
inc
sarl
je
jl
imul
stos
add
mov
mov
out
sub
dec
inc
clc
rcll
cli
rcrl
outsb
sub
push
es
fldenv
add
mov
mov
inc
aas
inc
xorb
xorl
enter
mov
cmp
pop
addb
aaa
push
das
fidivrl
in
mov
fmuls
adc
mov
fnsave
fldcw
sbbb
andb
imul
dec
inc
sbb
dec
and
inc
in
aaa
or
repnz
in
arpl
or
mov
jl
adc
sbb
push
cli
cmp
pop
in
jnp
xchg
test
lret
inc
ror
and
rcrl
xchg
sti
mov
mov
xlat
sbb
mov
pop
ret
out
cwtl
or
popa
shll
popa
scas
lea
ret
or
xchg
sbb
cmp
push
or
leave
ret
pop
cs
loop
adc
arpl
mov
push
push
arpl
add
jg
daa
sti
dec
mov
andl
push
and
jl
mov
in
fsubs
jecxz
or
adc
test
push
les
scas
cmp
lds
test
aas
out
add
and
xlat
sub
pop
std
idivb
mov
adc
bound
int
xchg
testl
test
xchg
sub
out
push
cs
sbb
idivb
push
in
imul
push
or
je
rcrl
fisubrl
addr16
pop
mov
lret
pop
jecxz
cmp
out
clc
cmc
ds
xchg
push
lods
js
aaa
inc
aam
mov
bound
out
cmp
mov
push
movsl
and
inc
shrl
fs
cmpsl
jl
and
sbb
lds
mov
and
test
cmp
jp
jne
adc
lods
pop
in
add
sti
mov
lcall
repnz
inc
lcall
scas
mov
cmp
xchg
cmp
push
push
push
jecxz
mov
mov
dec
aam
fstps
sbb
fs
rorl
insb
adc
lret
xchg
es
dec
mov
out
in
test
outsb
or
mov
sbb
outsb
stos
fdivs
and
inc
in
ror
mov
inc
xchg
pop
push
sbb
push
cmpsb
ja
imul
mov
test
lret
repnz
scas
inc
es
popf
or
and
aam
or
mov
enter
pop
shlb
push
fsubrl
cmc
cmp
cmpsb
fcom
repz
jl
stc
fidivrs
das
out
inc
andb
fwait
aas
fisubrl
jmp
daa
jl
das
jae
call
rcll
pop
imul
cmp
jne
xchg
add
xchg
sub
mov
out
imul
jno
mov
data16
xor
into
mov
stos
inc
dec
shlb
add
xchg
das
xor
pop
and
mov
dec
adc
xchg
gs
icebp
cmp
or
stc
cmp
and
cli
shr
arpl
cmovns
sub
jns
cltd
enter
mov
ret
mov
ret
add
xorb
add
stc
mov
addl
mov
add
pop
pop
test
jp
ret
xor
lea
mov
sub
push
rcl
les
xor
cmpb
jbe
fnstenv
ret
pop
xor
ret
inc
dec
sub
test
ret
adc
pop
dec
fs
xchg
ljmp
and
xor
push
dec
push
lea
sub
jbe
and
js
xchg
mul
xchg
fistl
jbe
aad
fiadds
std
xchg
adc
add
pop
std
gs
shrl
jae
jle
dec
icebp
push
in
jg
adc
stc
mov
stos
adc
leave
mov
in
out
and
js
gs
popa
lods
sub
fdivrl
inc
jo
xchg
stc
xor
lock
ja
inc
popa
push
rorb
sahf
xchg
scas
jo
xchg
push
push
dec
or
mov
sti
jnp
mov
and
inc
ret
jl
jae
orl
xor
or
sbb
and
xor
orl
test
mov
imulb
not
dec
lret
daa
cmp
popf
push
pop
mulb
mov
rcrb
pop
or
ja
aam
xchg
pop
shlb
pop
or
repz
fcmovu
xchg
inc
adc
sub
mov
nop
xchg
shr
dec
sbb
lods
jns
inc
mov
aad
jnp
ja
je
test
ficoml
inc
js
push
jle
push
adc
mov
sub
sbb
leave
lods
test
outsl
call
xchg
lfs
push
out
pop
pop
in
icebp
aaa
mov
in
in
into
outsb
inc
push
sub
add
jnp
add
lret
sbb
lods
xor
or
xchg
movsl
icebp
inc
xor
and
dec
push
cmp
fisttpll
nop
in
mov
and
lods
xchg
popa
rolb
mov
pop
fmuls
pop
pop
out
lret
sbb
jnp
int3
lds
or
not
mov
icebp
pop
mov
cmp
imul
mov
or
into
jecxz
stc
movsb
sar
pop
xor
and
add
jmp
aam
fimull
mov
or
repnz
movsb
mov
mov
fs
orl
out
stos
or
adc
sbb
add
dec
inc
cld
xchg
push
push
mov
lahf
insl
cmc
or
out
push
subl
icebp
and
push
mov
arpl
jle
or
dec
outsb
cmp
icebp
xchg
push
shll
dec
sti
xchg
lret
sbb
inc
adc
pop
in
rcrl
mov
fnstsw
out
daa
lret
stos
aam
sbb
lds
rclb
sub
xchg
filds
pop
pusha
data16
rolb
and
push
loop
lds
loope
pop
and
aas
out
jle
loopne
movsb
xchg
sbb
andl
mov
add
inc
sub
cwtl
scas
mov
cmc
xchg
inc
out
inc
icebp
pop
mov
loopne
iret
sbb
cmc
cmp
cmpsb
insl
js
outsb
jnp
in
int3
and
adc
mov
xchg
scas
xlat
inc
or
push
jmp
jmp
mov
lods
and
ret
push
push
or
movb
or
dec
movsl
add
popf
jb
cmpsl
aam
mov
insb
or
lods
sub
les
sbb
lods
fwait
movb
jo
push
xor
xchg
int3
push
mov
cmpsb
adc
lahf
pop
cmp
xchg
cmc
bound
cmc
popa
pop
in
out
adc
faddp
xchg
push
and
cmp
push
add
fucomp
dec
inc
pushf
pop
lea
mov
xor
xor
or
int3
in
or
fsubrp
add
test
push
push
ret
inc
movb
cltd
jns
bnd
call
in
xchg
xchg
lret
xchg
shll
mov
es
add
std
or
mov
jbe
insb
and
jno
aam
imull
mov
xor
int3
pop
mov
rcl
mov
add
mov
pop
insb
mov
divl
mov
cltd
push
jne
fcmovb
xor
insb
js
jno
mov
mov
xchg
mov
mov
je
pop
add
rclb
jg
pop
pop
loopne
lahf
mov
pop
pop
dec
add
lds
imul
mov
loopne
mov
ljmp
fstpt
mov
push
pop
call
jo
or
jbe
lret
add
or
pop
cwtl
push
push
or
lods
shll
sbb
inc
test
test
into
pushf
jl
divl
cmp
or
add
xor
movsb
add
push
add
ss
lods
and
jno
shll
mov
data16
xchg
adc
outsb
jne
xchg
xor
mov
out
mov
enter
dec
cmp
inc
pop
pop
xchg
mov
add
sub
pop
insb
adc
jo
xorb
push
vpunpckhwd
xchg
leave
sbb
rcr
xor
out
fildl
es
and
cmp
clc
sbb
enter
push
call
jo
hlt
out
int
in
enter
lds
enter
in
sbb
ds
andl
dec
mov
in
adc
adc
mov
mov
mov
push
push
scas
sub
sub
lret
sarb
shl
or
sbb
ja
jecxz
jl
mov
xlat
mov
xchg
sub
lea
subb
mov
or
scas
fnstsw
pop
or
xchg
loopne
and
push
add
or
icebp
out
mov
loope
sub
mov
ds
mull
fiadds
dec
int3
fucomp
inc
mov
call
fstl
jb
fstl
aam
dec
push
movsb
sub
inc
enter
push
ds
jo
sbb
insb
and
scas
push
cmp
je
movsb
lods
mov
cmpsb
test
push
stos
cmp
push
hlt
lds
aad
jno
add
jle
iret
dec
or
imul
aas
test
and
es
push
and
mov
xor
jmp
jmp
in
icebp
inc
pop
xor
fsubrl
pushf
outsl
jg
fwait
lds
xchg
dec
rcr
in
cmp
jb
lret
hlt
scas
xchg
sbb
ljmp
js
iret
pusha
imul
aam
lahf
out
addl
dec
push
xchg
lea
int3
mov
sbb
out
push
scas
and
jo
inc
aam
jne
jmp
sahf
adc
mov
mov
xchg
sub
je
sub
and
adc
jnp
mov
dec
jne
fiaddl
nop
shll
test
out
les
ret
dec
lods
push
cmp
jns
jns
add
dec
hlt
cmp
inc
mov
pop
test
fcmovnu
ja
sub
out
xor
ja
into
insb
or
mov
mov
add
sahf
pop
pop
fildl
cmp
xchg
sub
clc
les
xchg
test
cmp
fs
mov
inc
gs
sbb
out
out
or
dec
or
movsb
mov
loopne
popf
int
cmp
pop
rcrb
testb
fsubrl
adc
xchg
sbb
out
push
mov
adc
push
push
inc
subl
imul
test
jae
inc
bound
clc
inc
repz
sub
xor
push
in
fsubr
sbb
dec
movsl
stos
test
loop
push
hlt
arpl
push
or
fwait
mov
pop
arpl
ss
test
imul
mov
inc
lock
fld
or
xchg
add
movsb
sub
roll
push
inc
add
in
mov
add
sbb
pop
sbb
sub
cli
sbb
cld
push
stos
movsl
mov
cmpsb
lret
xlat
mov
lcall
xor
test
add
cs
outsb
test
mov
pop
loope
out
sub
in
mov
sbb
inc
xchg
add
into
shlb
and
insb
push
jb
inc
fwait
pop
mov
test
stos
xor
sbb
lods
pusha
mov
lods
sbb
push
mov
xor
fistps
mov
fst
imul
pop
xor
arpl
jbe
push
xor
adc
inc
pop
mov
pop
fldcw
mov
je
mov
mov
cmpsl
xor
jl
fwait
push
push
fists
jmp
cmp
lock
or
fadd
sti
adcl
xchg
push
sub
cwtl
mov
jns
cmp
jbe
inc
aaa
imul
aaa
jae
pop
fwait
test
jne
shrl
and
xor
xchg
pop
subb
push
and
xchg
rorl
dec
add
clts
push
dec
out
insl
adc
outsl
xchg
movl
fs
cmpsb
pop
daa
test
mov
push
jp
push
mov
mov
cmp
cmpl
mov
lods
mov
jle
xor
mov
scas
ljmp
aaa
orb
test
inc
test
or
mov
xchg
xor
pop
cmpl
push
sahf
xchg
and
in
cmp
cmp
dec
inc
and
xor
and
data16
dec
or
jb
es
test
or
sbb
mov
aaa
int3
movsb
call
mov
sbb
mov
pop
daa
stc
push
loopne
jmp
jmp
addr16
cmp
daa
loopne
jl
adc
dec
popa
cmp
push
lods
pusha
repnz
cmpsl
sbb
inc
popf
or
or
inc
cmp
jns
jns
addr16
stc
inc
repz
inc
out
clc
movsl
jle
in
mov
fiadds
repz
ljmp
jmp
adc
xchg
cmpsl
fldt
cmpsb
rolb
gs
mov
push
xchg
fcoms
cmpsb
adc
es
aas
subb
jno
mov
lcall
inc
popa
pop
pop
pop
add
xor
adc
sub
pop
stos
pushl
fdivrl
cmp
cld
mov
mov
jmp
jb
daa
flds
test
les
fistps
mov
mov
sbb
mov
mov
int3
cmpsl
sbb
or
mov
ljmp
adc
cltd
sub
add
std
jp
sbb
mov
sub
repnz
mov
sbb
mov
jo
test
inc
pop
push
inc
in
and
push
push
mov
subb
lea
or
cld
or
ret
fwait
mov
imul
push
sti
cmc
sub
ljmp
jnp
bound
arpl
repnz
arpl
or
cmp
push
adc
mov
push
lock
sub
xchg
adc
add
cmp
add
mov
fiadds
lds
adc
ret
adc
sbb
imulb
adc
lds
push
aaa
pop
stos
mov
adc
mov
in
xchg
sub
pushf
pop
aas
leave
mov
in
mov
mov
inc
divb
imul
scas
jge
das
jb
inc
xchg
mov
rorb
or
test
cwtl
add
or
aad
pop
andl
xlat
mov
fiaddl
adc
xor
mov
dec
bound
outsl
shrb
and
and
std
inc
mov
add
dec
dec
adc
mov
jo
jg
and
fisubl
sub
jns
xor
dec
out
xchg
les
and
std
xor
popa
mov
and
sbb
rorb
call
mov
push
jg
cltd
loope
sbb
ja
ret
push
aam
dec
cwtl
adc
sbb
mov
push
js
jno
jns
xchg
outsb
xchg
xor
fwait
jle
daa
ss
fcomip
iret
ja
jmp
les
xor
call
push
sbb
or
shll
lds
xlat
inc
jnp
xor
cli
pop
sub
icebp
mov
mov
inc
std
stos
mov
js
pushf
in
sub
cld
xchg
stos
xchg
les
es
sub
addr16
mov
pop
jnp
xchg
mov
mov
mov
mov
lods
cmp
dec
mov
fbstp
add
aam
leave
push
lea
cmpsl
imul
add
cmpsb
xor
test
mov
lods
sahf
test
jae
pop
dec
dec
testl
jge
inc
lock
mov
mov
movsl
jmp
push
std
xor
cwtl
cltd
aas
cmpsb
mov
out
push
mov
push
and
das
clc
adc
inc
insb
addr16
pop
inc
lods
int3
and
jg
mov
dec
repnz
jbe
out
xchg
add
or
jle,pn
mov
mov
test
call
adc
push
xlat
fdivs
addr16
enter
mov
bound
fidivrs
jl
out
or
lock
xor
cmp
push
xchg
xchg
call
add
bound
loope
sahf
jg
mov
aaa
xchg
ret
cmp
aad
std
xor
adc
mov
and
xorb
and
aam
jbe
fnstsw
shrl
dec
xor
cli
cwtl
insl
or
rolb
jge
inc
or
cmpsb
pop
popf
lock
adc
aad
les
sub
sbb
insl
mov
imul
lcall
cmpsb
iret
sbb
dec
cmp
jno
inc
fucomi
repnz
popa
lret
cmp
mov
lahf
std
sbb
pop
sbb
loopne
xchg
mov
hlt
aaa
fdivrl
cmp
lret
sbb
sbb
add
in
out
and
sbb
jne
cld
stos
daa
sub
call
daa
push
and
loop
mov
dec
sarb
add
pop
enter
test
inc
and
lea
add
cmp
fidivs
icebp
ljmp
icebp
xor
mov
cmpsb
lret
or
add
scas
dec
cmpsl
in
test
jnp
jae,pt
xchg
int3
jecxz
aam
sub
mov
lret
insb
test
lahf
push
mov
lods
mov
ficoml
mov
movsb
xor
arpl
repnz
in
cmc
dec
adc
dec
das
pushf
sub
xlat
lods
inc
sbb
xorb
or
pushf
loope
xor
and
add
pusha
sbb
xchg
xchg
sbb
jo
jbe
dec
pop
jnp
out
sahf
jns
int3
data16
ljmp
jo
mov
sub
mov
xor
jg
add
in
cmp
mov
sub
mov
enter
add
stos
jl
orl
jb
mov
or
mov
cmc
cmp
sahf
rcrb
aam
stos
push
imul
lock
aam
dec
xor
sub
daa
test
mov
mov
movsl
jg
das
cmpl
inc
push
jo
sub
mov
test
sub
cltd
fmuls
push
lret
fcmovb
jge
aad
lock
mov
cmpsl
inc
cld
div
outsl
mov
jo
popf
gs
push
sti
loope
fwait
jo
inc
dec
sbb
cmpsl
lock
mov
sub
add
fistpl
imul
xchg
cld
fildll
dec
lcall
cmpsb
out
mov
push
pop
pop
xchg
push
or
in
sub
and
mov
bound
mov
out
leave
push
mov
jb
inc
and
and
xor
dec
mov
and
push
adc
inc
pop
lods
sub
movsl
or
push
test
add
movsl
insb
push
fwait
fs
fimuls
cld
dec
xor
out
and
pop
jb
mov
jne
push
stc
rcrl
lahf
pusha
lock
mov
addr16
adc
icebp
shl
pop
ljmp
js
inc
andb
xlat
xor
mov
inc
jb
sbb
leave
dec
mov
loopne
jnp
inc
cmpsl
imul
nop
and
or
dec
push
int
jp
fisttps
scas
xor
pop
xchg
or
pop
imul
push
mov
scas
xadd
ljmp
sahf
fst
stos
xchg
xchg
sbb
js
lock
loope,pn
inc
xchg
lods
cmp
scas
cmp
or
lret
subb
xor
sahf
xor
int
sti
imul
cmp
aas
cwtl
add
rorl
mov
add
mov
testb
iret
cmp
outsb
insl
push
imulb
daa
movsl
mov
cmp
stos
push
adc
add
out
dec
and
in
ljmp
or
repnz
mov
inc
add
cmp
clc
jmp
and
popa
adc
repnz
fisubrl
push
cli
jnp
sub
std
pushf
movzwl
jno
or
loopne
jnp
push
loop
cmpsl
push
int
fcompl
mov
push
adc
push
jne
sub
dec
mov
ret
dec
fidivrl
lds
and
in
pop
aad
push
pop
ss
jne
arpl
stos
dec
mov
add
and
iret
jno,pt
adc
xchg
mov
jle
sub
aad
iret
adc
xchg
in
imul
insl
jae
cltd
and
ss
pop
pop
in
inc
orl
jbe
dec
pop
aam
mov
je
call
lods
mov
adc
ss
xor
mov
cs
mov
cld
or
fcmovu
popf
xchg
dec
xor
sbb
adc
shrb
lar
pop
jmp
sarl
testl
pop
cmp
aad
and
movsb
add
out
test
xchg
rcr
imul
adc
sti
add
imul
in
xchg
out
fadds
icebp
jmp
push
adc
xor
or
scas
pop
cld
jb
cld
and
stos
mov
cs
adcb
jecxz
or
pop
push
ficomps
push
mov
mov
mov
xor
test
inc
out
fdivrs
icebp
dec
mov
lret
and
pushf
or
nop
and
mov
mov
sub
fs
clc
xor
out
push
ret
or
lret
fadds
test
movsl
cmp
es
ja
pop
sub
add
adc
lods
fadds
xchg
dec
cmp
dec
icebp
fwait
adcl
rorl
arpl
add
and
lods
mov
mov
fidivrs
push
filds
scas
and
mov
mov
jp
lock
popa
push
pop
shrl
daa
adc
jecxz
mov
dec
mov
icebp
jge
jne
dec
xchg
cmc
popa
mov
mov
mov
ja
or
mov
or
adc
dec
adcb
fisttpll
or
jg
psadbw
dec
in
movsb
movsl
data16
imul
mov
xor
and
pusha
mov
sub
pop
ret
sub
xorl
cs
cmpb
jne
push
movsb
lock
cld
cmp
inc
mov
jge
xor
xor
mov
repnz
pop
pop
mov
push
push
adc
fwait
popf
and
push
imul
sti
rol
into
mov
cmp
scas
call
aaa
enter
xchg
mov
jnp
ja
xlat
cltd
and
pop
inc
aad
fwait
mov
cmpsb
sbb
pop
leave
arpl
add
sub
lret
stos
pop
inc
mov
sbb
es
adc
aad
jge
sahf
arpl
test
mov
mov
shl
and
jle
adc
or
mov
call
xchg
inc
in
push
xorb
jl
ljmp
mov
fwait
add
xor
pop
loope
sar
mov
in
cmp
mov
inc
dec
jge
shl
xchg
scas
push
mov
lret
mov
push
mov
mov
pushl
repnz
cmp
clc
jl
test
std
call
cmp
mov
mov
dec
loop
imul
in
sahf
hlt
mov
shlb
cltd
inc
pusha
popa
decb
pop
pop
mov
scas
or
insb
lds
jle
in
cld
dec
lcall
jge
enter
cmc
addb
fs
std
mov
mov
mov
inc
jb
xchg
mov
jbe
push
fwait
push
les
mov
popa
pop
mov
mov
pop
mov
in
xchg
rorl
les
jbe
pop
pop
jne
fxch
cwtl
std
mulb
fdiv
pop
mov
sbb
insb
jno
cwtl
mov
and
mov
sbb
jg
xchg
fidivl
rclb
adc
daa
loop
pop
rclb
call
enter
daa
cltd
and
jbe
out
ljmp
ret
in
sbb
ljmp
sti
popf
sbb
lahf
mov
sbbl
dec
sub
stc
cmpsb
dec
cmp
out
gs
cmc
lea
add
ljmp
mov
not
shrb
shl
stc
in
lret
lret
jns
lods
and
xchg
sbb
inc
jg
roll
push
aad
xchg
cmp
inc
xchg
mov
cmp
mov
movsb
jle
mov
mov
cmpsl
cmp
cld
push
lods
xlat
in
addr16
sub
insb
pop
mov
scas
aas
test
cmp
into
cmc
ss
xor
jnp
inc
in
int
mov
iret
add
loope,pt
stos
and
and
push
scas
pop
or
xorb
inc
cltd
or
cmpsl
repz
push
test
loop
mov
pusha
jmp
aaa
mov
mov
xor
mull
sbb
movlps
jbe
rcr
jmp
mov
in
adc
xor
pop
fs
push
jmp
out
mov
mov
ljmp
add
mov
fcomip
shll
jnp
rorl
fstpt
add
push
add
cmp
xchg
in
adc
shl
aad
das
push
rcll
adc
cmp
push
cmp
imul
or
xchg
scas
cmpsb
fsubp
xor
sbb
mov
movsl
or
and
xchg
mov
call
sbb
enter
test
and
adc
dec
cmp
js
arpl
dec
fildl
movsl
movsl
cltd
xchg
sub
add
lret
dec
lock
push
fs
dec
and
pop
sub
shll
int3
fsubs
mov
mov
sahf
xchg
bound
xor
mov
lods
xor
mov
clc
mov
fldl
mov
les
add
adc
xor
fcomi
add
jecxz
into
add
jge
inc
imul
jle
xlat
jae
inc
loope
cmpsb
dec
or
mov
int3
mov
or
xor
xor
hlt
inc
cmp
mov
pop
enter
or
pop
add
arpl
adc
lahf
andb
inc
add
and
hlt
divb
popf
sbb
or
push
push
pop
fiadds
mov
loopne
sbb
dec
xchg
push
sbb
sub
testb
xor
std
out
mov
push
flds
sub
lods
sbb
push
inc
sahf
jae
mov
pop
mov
add
inc
clc
dec
imul
ficompl
push
pop
shll
loopne
pop
mov
int3
cltd
popa
mov
inc
push
stc
call
xchg
push
dec
rcll
es
mov
inc
fs
ja
ss
xchg
inc
shr
lahf
popf
push
mov
jae
xchg
sti
aam
std
jnp
in
mov
scas
test
sub
mov
sbb
sub
jle
cld
lea
in
mov
cltd
fwait
sbbl
add
mov
lret
stc
xor
sub
dec
fwait
std
outsl
loope
add
mov
fmull
hlt
cltd
rolb
aam
pop
adc
push
lock
jo
push
xlat
or
sbb
insb
inc
test
push
jae
sub
mov
nop
fcmovu
mov
mov
pop
lcall
jl
icebp
mov
test
sub
pushf
les
in
jns
push
pop
pop
adc
sub
std
or
jp
and
decl
xchg
lret
push
mov
loope
jnp
mov
mov
and
out
xchg
mov
sub
test
stos
fldt
push
or
sub
aad
mov
shlb
loope
dec
insb
xchg
xor
mov
insb
mov
or
mov
mov
call
imul
nop
pop
hlt
leave
inc
scas
or
pushf
inc
and
push
push
inc
sub
jne
or
jns
repz
adc
cmpl
in
xchg
xor
sbb
jge
scas
loope
cvtdq2ps
sbb
cmpsl
in
sahf
mov
or
ja
mov
rcrl
xorb
in
push
xchg
movsb
mov
test
mov
test
sub
aad
add
xchg
inc
scas
dec
adc
pop
rcrl
pop
xchg
xor
sub
mov
cmp
jcxz
in
pop
push
sarl
and
mov
out
movsb
jo
inc
cmp
pop
push
ret
sbb
pushf
inc
xor
adc
or
mov
divl
nop
fidivl
scas
push
mov
cmc
xchg
enter
ret
add
jb
in
mov
jmp
scas
ret
outsl
push
or
jmp
push
jb
and
xor
ss
jp
pop
ret
jae
sti
adc
cmpsl
mov
dec
test
decl
mov
xchg
iret
out
mov
inc
dec
das
or
repnz
jge
dec
or
movsb
imul
push
cmp
adc
divb
shl
push
into
dec
mov
pop
inc
jbe
into
lcall
xchg
aaa
push
dec
mov
mov
and
je
xchg
cmpsl
enter
fs
cli
mov
lret
cmpsl
les
jmp
arpl
xchg
int
rcll
cmp
sti
mov
fsqrt
cli
jmp
loopne
rolb
jle
lods
fsts
jae
mov
mov
sbb
rolb
mov
pushf
in
sbb
stos
hlt
cmp
jge
jmp
xadd
popf
push
and
mov
pusha
std
mov
pop
out
in
jmp
pop
inc
add
adc
jmp
mov
imul
loop
or
jp
add
push
sbb
arpl
xor
test
mov
in
sbb
push
mov
loope
out
clc
mov
icebp
push
or
lret
rorl
mov
sub
pop
pop
cmp
inc
icebp
mov
xor
sbb
mov
and
pop
cmp
lods
sub
lods
rorl
movsb
pop
or
sub
dec
shrb
lcall
imul
pop
push
adc
clc
imulb
push
inc
ss
lods
add
sbb
pusha
out
outsl
pop
mov
cmpsl
xchg
push
adc
add
pop
dec
xorb
pop
out
popf
mov
insb
fnstenv
rclb
lods
jg
shr
int
inc
dec
lods
push
stos
inc
lret
xorl
adc
in
bound
mov
lcall
shrl
cmp
sbb
xor
adc
sti
mov
sub
ss
in
dec
in
jl
sub
cmp
cmp
in
push
int3
sub
inc
shl
pop
fdivrp
lret
inc
fistpl
insb
loop
out
inc
xchg
fldpi
mov
push
adc
adc
lret
dec
sbb
jecxz
adc
es
cmpl
mov
mov
dec
sbb
orb
scas
mov
dec
mov
test
mov
mov
add
nop
in
jmp
or
popa
in
xchg
aas
fisubl
lcall
mov
xchg
push
pop
ror
jno
sbb
test
xchg
push
adc
fcomps
lea
daa
add
mov
push
sti
std
sub
xchg
test
lds
or
xchg
ret
xchg
loope
inc
bound
shlb
sbb
int
mov
pop
mov
pop
inc
cli
test
dec
sar
jb
adc
gs
fstl
in
ss
adc
das
mov
jge
jmp
pop
ss
cwtl
or
xlat
clc
adc
and
orl
rcrl
in
lret
inc
sub
lcall
testb
or
push
sbb
and
xchg
ljmp
mov
testb
xor
clc
testb
mov
popf
lods
les
sar
jns
icebp
pushf
jle
xchg
loop
ret
jmp
es
dec
add
test
inc
out
mov
mov
decb
xchg
push
sarb
or
fistl
xor
std
and
insb
out
ds
cmp
push
pop
dec
mov
out
fisttpll
fcmove
int
jo
add
js
bound
inc
jbe
adc
rcrl
int
enter
jmp
jmp
stos
jbe
subb
enter
push
insb
or
jo
data16
lock
sub
es
inc
push
dec
bound
ds
fmul
pop
jge
sub
ja
into
adc
jnp
mov
loopne
out
sbb
out
add
pop
dec
in
subl
or
cmp
mov
cmp
xor
mov
fwait
jne
sbb
lahf
movsb
imul
mov
inc
jbe
xor
int3
aas
dec
loope
or
xlat
xchg
xor
adc
call
xor
imul
std
mov
mov
sub
xchg
outsl
xchg
jge
popa
pop
divl
in
ss
stc
mov
push
jg
sub
ret
add
and
aaa
ficomps
sub
inc
es
mov
inc
push
leave
jecxz
lock
daa
xlat
incl
ljmp
and
mov
fiadds
jns
sbb
shlb
test
push
cmp
mov
in
xchg
xchg
push
add
mov
rcll
int3
test
and
sbb
xor
pop
mov
pop
adc
blsfill
xchg
mov
sub
lods
pusha
mov
ljmp
pop
lea
mov
xchg
fldt
js
lahf
pop
mov
jp
mov
add
les
xchg
loopne
or
ljmp
jb
repnz
cmc
mov
mov
lods
lcall
leave
ds
ss
mov
pusha
rcrb
insb
add
dec
aam
daa
and
lock
mov
mov
cmp
iret
popa
xchg
scas
addr16
scas
inc
ja
outsb
push
and
jnp
mov
mov
fnstenv
call
int
mov
outsl
fsubl
jp
sub
add
ret
out
testb
daa
rorb
lds
testl
mov
es
xchg
in
mov
dec
lea
stos
xchg
xchg
inc
mov
jge
jae
sbbb
lahf
pop
xchg
mov
sbb
push
mov
gs
mull
push
xor
mov
mov
adc
mov
mov
sbb
push
push
jb
jg
std
cmpsb
jno
rcll
xchg
mov
mov
xor
repz
in
or
cltd
pop
jne
and
lods
mov
or
dec
inc
inc
lea
add
inc
js
int3
sub
pop
sbb
in
bound
xor
push
test
mov
adc
pop
mov
fcmove
pop
pop
add
cwtl
sbb
or
ja
sbb
and
pop
shrl
xchg
and
mov
ja
fstl
mov
repz
mov
sbb
in
cmp
push
out
mov
dec
jae
enter
lret
push
mov
push
lds
xchg
jl
dec
and
dec
inc
pop
xchg
dec
stos
add
into
rcll
imul
lods
fcmovnb
sub
nop
loope
and
dec
or
stos
lods
xchg
push
cmp
jle
nop
leave
cmp
orl
add
dec
xor
add
sub
lock
popf
dec
mov
loope
loop
rclb
xchg
xchg
push
push
daa
lock
sbb
xchg
mov
call
scas
es
sbb
icebp
inc
pusha
mov
mov
sub
fistl
call
out
jo
fiadds
pop
adc
daa
insb
or
or
xor
inc
pop
add
mov
lcall
push
scas
pop
dec
in
pushf
cltd
mov
mov
or
mov
push
push
dec
dec
push
mov
cmpsl
mov
cmc
ljmp
adc
mov
mov
xchg
ret
test
es
cmp
int3
cmp
rorl
daa
xchg
bound
lea
cs
popf
leave
and
jne
pop
cmp
shll
incb
ds
jle
mov
sub
pusha
pop
and
push
mov
and
mov
sbbl
or
jmp
loope
loopne
ret
jo
mov
cmpsl
movsb
pop
rcll
mov
lock
xchg
or
dec
jae
lcall
inc
out
cwtl
adc
cs
push
xchg
cld
fimuls
shlb
iret
or
push
fwait
push
add
sahf
sub
ds
shll
cs
xor
jns,pn
int
mov
insl
xchg
mov
jmp
xchg
imul
fwait
cli
incl
inc
dec
stc
mov
dec
adc
in
push
jmp
pop
cmpsb
fnstcw
mov
loopne
mov
push
popa
mov
cmp
cmp
jmp
push
inc
push
lea
movsl
pushf
or
inc
shrl
cmp
fldenv
dec
mov
push
fistpll
push
pushf
gs
cbtw
push
add
cwtl
inc
das
lea
mov
inc
in
not
jp
in
mov
cmp
mov
jne
mov
sbb
dec
cmc
sbb
movsb
add
sub
adc
fsubrs
fwait
jbe
fs
aam
jl
ss
cld
je
sub
jg
bnd
mov
mov
add
stos
sub
int
jne
jbe
mov
mov
pop
je
imul
ss
adc
fdivl
stos
jns
or
add
jnp
push
pop
sbbb
jmp
mov
pop
jbe
lret
pop
loopne
fsubs
aam
xchg
int
add
mov
jae
rolb
cmp
stos
and
scas
nop
xor
cmp
in
mov
movsl
cmp
aaa
jnp
stc
pop
dec
ret
out
movsl
cmp
test
xor
subl
jl
ror
xchg
rcrb
roll
inc
jl
jp
and
rorl
fstpl
adc
push
xor
inc
test
add
ret
clc
int
popf
sbb
jmp
jae,pt
roll
int
mov
jb
ret
sbbl
lods
and
repz
stos
call
out
mov
data16
add
xor
add
mov
xchg
cmpsb
push
cwtl
pop
js
dec
rolb
mov
mov
and
xchg
dec
pop
sub
aaa
add
xor
inc
cmp
push
popa
xor
mov
sub
lods
imul
push
adc
dec
mov
nop
dec
je
mov
or
dec
test
sbb
sbb
and
enter
orb
and
xor
sbb
jmp
ss
mov
outsb
add
aam
popa
sbb
pop
push
xchg
incb
jge
ret
stc
sbb
in
loopne
jg
sub
push
ljmp
push
div
scas
repz
fildll
mov
xchg
mov
xor
mov
mov
push
adc
push
inc
push
pop
loopne
clc
ffreep
push
xchg
xchg
push
pop
nop
aad
outsb
es
xchg
bound
add
fwait
cmp
adc
mov
into
mov
push
pop
inc
enter
mov
fcmovb
push
sti
add
sar
fldz
out
or
int
addr16
push
fsubs
rcll
loop,pn
push
mov
mov
xor
mov
mov
mov
adc
jns
mov
inc
dec
or
jecxz
fdivl
mov
sbb
aad
icebp
scas
jbe
jns
xlat
dec
imul
pushf
mov
mov
mov
and
jno
std
dec
cs
mov
xchg
loopne
scas
scas
fs
rolb
out
push
or
fadd
stc
lds
cmp
pop
jno
pop
aad
fmuls
lea
sti
adc
pop
arpl
or
in
jl
hlt
into
ss
and
pop
popa
arpl
sub
bound
dec
pop
sbb
das
les
jnp
out
mov
jmp
pop
ljmp
sahf
jp
mov
insl
xor
test
and
push
mov
pop
ret
sub
xor
rcrl
dec
fucomp
inc
push
pop
stc
push
fsubs
movsl
jge
add
cld
jnp
push
fistpl
aaa
scas
cld
mov
mov
aam
fsubr
inc
js
loopne
push
adc
cltd
mov
dec
lret
mov
inc
mov
popa
push
push
adc
outsb
xchg
sbb
push
repz
inc
lea
pop
fld
lods
cltd
loopne
cmp
addl
cmp
ljmp
jo
cwtl
lods
jmp
mov
enter
pop
mov
sbb
sar
test
xor
and
push
push
cwtl
jno
out
fs
sub
pushf
cmpsb
pop
shlb
in
and
stc
les
inc
sbb
cmp
fnop
int
mov
add
ret
jg
mov
pop
popf
test
mov
test
sarl
push
cmpsb
mov
xchg
jo
decb
inc
dec
mov
repz
mov
lret
cmp
sub
or
mov
iret
mov
cmpsl
and
sbb
out
out
in
daa
lret
hlt
add
stc
and
es
jns
push
pop
shrb
movl
xchg
xchg
mov
dec
adc
mov
in
cmp
push
pusha
push
pop
clc
lret
ljmp
andb
pushf
inc
push
inc
adc
pop
aaa
pusha
xor
pop
fdivl
in
jbe
dec
ja
iret
rcll
movsb
negl
mov
mov
jmp
cmpsb
xchg
mov
inc
jnp
pop
aam
dec
fadd
mov
xor
dec
jnp
loopne
repz
notl
movsb
cld
mov
jb
subl
cmp
outsl
inc
inc
ret
push
orl
sbb
pop
cltd
xor
icebp
stos
mov
test
push
lret
or
inc
push
fmulp
xchg
push
jne
xchg
adc
pusha
mov
repnz
aad
popf
fnsave
lock
adc
pop
cwtl
in
cmp
jno
push
sub
dec
ja
mov
cwtl
cmp
jmp
cmp
push
cmpsb
push
std
loopne
xchg
iret
dec
inc
mov
cmpsb
dec
mov
scas
fsubs
sub
push
jge
cmp
inc
xchg
cmp
movsb
jno
cmp
pminub
dec
cld
outsb
lea
pusha
and
dec
dec
jmp
test
inc
sti
insb
cmpsl
cmc
pop
add
dec
mov
sub
scas
sbb
xchg
or
mov
inc
pop
add
and
out
and
adc
decl
sub
iret
jae
repnz
ds
mov
mov
or
jno
aas
mov
lahf
push
sbb
shlb
das
cwtl
lcall
popa
mov
dec
int3
mov
inc
inc
div
aaa
lds
mov
mov
push
cmpsl
ss
and
mov
insb
icebp
xchg
in
dec
fwait
mov
out
into
movsl
push
cld
pusha
add
or
outsl
insl
jl
scas
repz
sbb
and
in
and
inc
and
push
jmp
jecxz
jb
in
stc
and
adc
into
lcall
mov
sbb
xchg
mov
sti
outsl
inc
jo
cmp
hlt
ljmp
pop
out
inc
sub
jge
cmpb
out
pop
dec
sub
pop
mov
test
sbb
sar
jl
in
in
sub
fists
lahf
pusha
les
sub
cmc
mov
testl
cmp
push
pop
adc
pop
int
mov
gs
pop
loopne
pushaw
dec
cmp
xlat
call
test
popa
mov
fs
test
jnp
push
pushf
scas
jns
push
mov
pop
jb
sbb
in
mov
cmp
pop
daa
xor
test
sub
in
jae
mov
or
lahf
push
push
xchg
rcrl
and
cmc
shll
sbb
and
push
loopne
pop
add
cmp
adc
mov
or
int
cmpsl
jg
sub
fldcw
and
dec
adc
inc
loop
add
loope
jo
popa
push
or
outsl
sbb
pop
pop
sub
jo
dec
or
stc
test
pop
mov
add
pop
jb
test
gs
jnp
mov
loop
fcoml
aas
jmp
mov
mov
js
pop
loop
dec
imul
jge
sti
push
push
xchg
mov
inc
insb
cmp
outsl
pop
int
jbe
cmp
out
dec
xchg
adc
or
xor
nop
push
test
out
aad
add
mov
mov
sub
fbld
shr
aad
decl
jae
pusha
mov
xchg
mov
xor
adc
cs
pop
shr
mov
mov
sbb
dec
es
jae
sub
cmp
aas
jmp
repz
loope
cmpsb
push
icebp
mov
pop
push
stos
pop
push
cmc
add
insl
daa
jnp
sbb
icebp
or
cmp
push
ret
popf
ljmp
mov
add
int
popa
sbb
sub
repz
ret
sub
and
pusha
movsb
imul
sarb
mov
cwtl
insb
adc
xchg
mov
out
jns
sbb
call
inc
sbb
jecxz
or
pop
je
mov
in
mov
xor
mov
jmp
inc
pop
sahf
das
push
cli
pop
sub
jecxz
jbe
fisttps
cmp
xor
xor
enter
jg
xchg
mov
pop
outsb
daa
sbb
mov
imul
psubusb
cwtl
loopne
dec
ret
imul
leave
les
inc
lds
mov
sbb
insl
lret
inc
loop
cmp
jecxz
jmp
je
dec
xlat
push
jge
int
pop
sub
pop
xchg
and
inc
jo
faddp
push
ljmp
insl
aam
adc
pop
add
inc
sahf
jnp
pop
fwait
pop
sbb
repnz
stos
ja
dec
jae
stos
out
push
sub
lods
add
cmp
xor
scas
dec
and
pop
pushf
jne
rcrb
mov
enter
dec
hlt
jo
int
mov
aas
ret
or
add
into
pop
lods
mov
outsb
in
mov
pop
daa
cmpl
dec
sahf
adc
in
add
mov
mov
fnstenv
push
sbb
cli
mov
lret
dec
or
push
fstpl
dec
mov
add
and
in
out
cmpsl
xchg
mov
cmc
and
out
repnz
or
stc
xor
xchg
leave
pop
call
fiaddl
mov
pop
insl
mov
sarl
jecxz
in
sub
add
es
push
test
mov
popa
pop
xor
and
cwtl
ljmp
and
jp
and
mov
int
jmp
dec
sbb
aam
test
inc
das
and
les
dec
mov
test
xchg
popf
test
dec
push
mov
cli
pop
lods
inc
sub
dec
loop
add
icebp
dec
fiadds
push
jb
mov
nop
out
push
cmc
sbb
xchg
add
mov
cld
xor
in
mov
dec
ret
lea
in
sub
outsl
iret
mov
fucomi
and
repz
inc
nop
pop
dec
pusha
iret
idivl
cmpsl
scas
mull
add
mov
imul
repnz
or
push
jbe
mov
jnp
test
add
inc
cmp
or
push
mov
popf
fistpl
cmp
lods
call
cmp
rol
call
test
or
jne
insb
jl
ss
ficompl
cmpb
popa
mov
mov
pop
outsb
pop
add
cmp
xchg
pop
and
xchg
xor
fpatan
lea
push
sbb
xlat
add
imul
shlb
daa
in
insl
xchg
addr16
or
jl
stc
xchg
jno
call
imul
stos
sbb
xchg
fmuls
clc
mov
xor
test
inc
sbb
faddl
mov
fsubrs
aad
sbb
pusha
loope
inc
aas
pop
popa
mov
fildll
adc
ss
jnp
inc
outsb
and
and
xor
mov
mov
sub
xor
cmp
sti
pop
in
ljmp
sub
stos
outsb
dec
mov
jae
movsl
out
mov
sahf
push
mov
out
pop
push
mov
sahf
inc
cmp
xchg
xor
lea
cmp
add
pop
mov
leave
mov
in
into
shll
mov
push
test
scas
pop
jno
inc
mov
adc
cmpsb
dec
or
fnsave
mov
sbb
lea
cld
mov
pop
inc
cmp
mov
gs
jne
loopne
inc
jbe
mov
xchg
ret
xchg
pop
push
xchg
lret
test
mov
push
jg
outsl
mov
int3
fdivs
mov
push
or
jbe
jle
jae
sbb
adc
mov
stc
fsubl
jno
or
hlt
sbb
outsl
into
xor
js
in
mov
repnz
test
jne
dec
push
imul
mov
jns
sbb
jo
dec
sbb
dec
sub
les
and
loop
cs
jp
mov
xor
js
xchg
xlat
cmpsb
xlat
test
sub
dec
mov
mov
loop
aaa
xor
ss
fs
jb
jle
sbb
inc
push
aam
mov
push
hlt
cli
xchg
cmp
push
js
mov
add
adc
jmp
hlt
xchg
ret
add
pop
lds
lea
jb
js
pop
mov
and
jmp
in
sub
mov
stos
dec
cs
imul
inc
ret
cmc
pop
jp,pt
addr16
inc
fs
xlat
and
nop
mov
arpl
fsub
lds
shl
movsl
aas
and
sub
add
daa
lcall
push
outsl
rolb
mov
push
fldt
popf
arpl
out
xor
sub
and
stos
lea
mov
shl
mov
enter
mov
xchg
xchg
lods
sbb
addr16
int
pop
mov
add
mov
cmpsb
fnsave
nop
and
pop
jl
inc
sub
or
jnp
das
scas
test
mov
sbb
cli
add
mov
pop
test
pop
out
jo
adc
fcoms
add
add
or
loope
and
or
mov
inc
lret
or
push
out
jne
cmp
mov
out
fnsave
outsl
mov
sbb
or
jbe
and
push
xor
adc
lds
icebp
push
pop
jmp
add
pop
dec
lock
add
sbb
push
xchg
out
push
mov
add
cmp
pop
pop
fdiv
pop
fstpt
addr16
ds
pop
dec
movsl
scas
leave
orb
xchg
add
xchg
and
pushf
mov
jle
lret
push
or
ja
pop
sbb
dec
mov
out
adc
pop
movsl
iret
flds
sbb
test
out
divb
stc
mov
push
add
stc
lock
popf
inc
sti
pop
xor
cmp
xchg
inc
push
xor
mov
xor
imul
shrb
dec
push
js
sbbb
push
and
outsl
shlb
addb
fcomp
cmp
imul
add
inc
addr16
xchg
xchg
push
sbb
addr16
clc
outsb
repz
js
inc
out
jmp
push
adc
lods
popl
xor
ficomps
mov
ret
js
and
dec
lret
ljmp
mov
mov
and
inc
mov
cmp
pusha
fcmovu
cwtl
into
xor
mov
lcall
xchg
sub
xchg
cs
jo
push
sbb
mov
lds
and
into
xchg
fs
and
mov
bound
dec
sbb
loopne
sbb
cmp
mov
shll
dec
jno
push
leave
in
loop
mov
icebp
xchg
push
cmp
or
mov
inc
bound
cmp
out
stos
std
dec
test
lods
leave
add
rorl
sub
sti
adc
les
pop
xchg
loopne
sub
sub
test
fisubrl
stc
push
lods
fsubrl
jg
xlat
mov
fisttpl
push
lods
insb
dec
xchg
fscale
pop
imul
call
sarb
or
clc
pop
mov
ljmp
dec
roll
mov
cli
orb
in
dec
and
and
jmp
jmp
cs
and
push
xchg
sbb
pop
mov
lret
inc
popf
adc
jl
mov
out
out
xor
loopne
xchg
scas
cs
pop
pop
mov
sub
pop
xchg
call
and
mov
rcrl
jle
inc
cltd
sbb
pop
jge
sbb
xchg
repnz
sub
out
push
pop
push
leave
fsubrl
sbb
inc
divl
pushf
test
cmp
lock
popf
mov
sbb
cmp
xchg
jb
xchg
lock
add
cmp
sub
xchg
dec
mov
and
stos
ficoms
adc
mov
leave
xchg
xor
mov
hlt
dec
mov
and
out
sub
mov
jb
pop
lods
dec
test
xchg
popa
inc
dec
outsb
movsl
jne
movsl
lock
sbb
or
loop
fcomps
push
pop
dec
add
mov
pop
pop
idivl
sub
dec
add
gs
add
out
jb
mov
pop
push
xchg
test
jb
loope
cmp
mov
stc
inc
add
xor
jne
sbb
xchg
mov
push
xor
dec
xchg
dec
add
leave
nop
jbe
outsb
pop
call
jge
push
mull
inc
sbb
cmc
arpl
shlb
jle
jmp
or
ret
iret
pop
fistps
cwtl
insb
sub
cwtl
cltd
mov
cmp
mov
xchg
gs
repnz
pop
cwtl
in
testb
and
sbb
sbb
xor
xchg
arpl
sub
aas
pusha
aad
add
insb
pop
add
lods
dec
xchg
push
enter
mov
int
stos
xchg
sbb
out
in
ret
xchg
lea
inc
add
dec
repz
cli
jo
ja
out
jmp
fstpl
leave
cmpb
arpl
mov
inc
xorl
pop
fstpt
movb
adc
adc
cli
pop
pop
addl
imul
xchg
pushf
fdivs
in
mov
in
jo
mov
lds
cltd
push
xor
mov
int3
jae
pop
fstl
push
shrl
fsts
es
outsl
push
jno
popf
stc
sbb
xor
adcb
gs
fdivs
lea
iret
cmpsb
cmp
push
popf
push
xchg
int3
push
in
aad
sbb
inc
out
subl
rcll
fistpll
mov
xor
mov
lods
xchg
or
cmpsl
fimuls
mov
lods
or
daa
fstps
idiv
sbb
hlt
aas
sarb
inc
lret
and
insb
or
add
daa
jo
push
ror
mov
push
test
dec
outsl
ds
rol
push
dec
push
adc
ret
add
inc
daa
jbe
push
add
push
xchg
mov
fimull
imul
pop
cmp
jge
sub
and
roll
push
fdivp
ret
adc
or
daa
and
cmpsb
movl
mov
dec
xor
jmp
lcall
add
lds
js
lcall
mov
dec
sbb
pop
int
xchg
xor
adcl
push
cmp
add
inc
push
push
insb
lock
clc
mov
pop
xor
out
ja
pop
xlat
dec
adc
stc
iret
into
sbb
sbbb
mov
xchg
lret
jl
out
mov
pop
mov
mov
push
fwait
sahf
into
cmp
aad
es
cs
xor
dec
sub
fsubrl
fistps
ss
sbb
mov
lods
push
and
adc
nop
cltd
jnp
and
das
lods
and
mov
mov
adc
push
inc
push
sahf
rcrl
xlat
mov
push
insb
add
cmpl
cmp
inc
ja
jmp
and
leave
loop
xchg
pop
mov
xchg
aam
aaa
imul
dec
fdivl
aam
mov
scas
cmp
ljmp
inc
sbb
dec
mov
cmp
push
push
inc
inc
lret
fwait
pop
cmpsb
gs
pop
sahf
push
sub
mov
enter
dec
daa
fwait
addr16
sbb
mov
mov
bound
and
test
fsubs
mov
jge
jg
mov
xor
mov
push
fldenv
and
sub
test
cmp
imul
mov
inc
push
mov
adcb
push
or
inc
jae
dec
shlb
rcl
jg
cltd
jno
adc
sbb
fidivl
test
or
out
outsl
mov
stc
push
xchg
test
add
loop
ret
mov
jp
xchg
xchg
int3
add
mov
jns
add
shlb
adc
sahf
popa
or
and
sub
mov
sbb
iret
rcl
aaa
pop
push
cmp
in
xor
out
aam
addr16
mov
and
ret
repnz
xchg
sbb
dec
cmc
xlat
mov
lret
mov
xchg
push
sbb
mov
xchg
mov
jbe
es
push
mov
dec
and
ud0
mov
push
sub
mov
sar
xor
push
aad
stos
cwtl
das
pushf
adc
and
sub
and
icebp
add
in
gs
xchg
ret
mov
push
jbe
sti
or
leave
adc
push
cmp
ret
aam
gs
push
mov
dec
icebp
pop
fiadds
dec
outsb
adc
pushf
in
mov
jno
fwait
dec
dec
adc
push
xor
fistpl
dec
rorb
adc
mov
outsb
jno
mov
xor
lret
stc
jb
mov
js
lret
in
jmp
cmpsb
mov
lret
pop
in
lret
gs
fsubrs
das
fcomp
test
psllw
aaa
loop
lods
mov
in
cmp
rorb
movsb
jo
movb
in
jbe
pop
test
mov
jno
lret
ja
ret
jbe
xor
adc
mov
addb
mov
sbb
push
nop
int3
js
movsb
ds
xchg
mov
fs
daa
pop
iret
cmp
test
add
pusha
inc
icebp
xchg
jge
cmp
inc
jb
inc
sahf
fcoms
sub
jo
fadds
jecxz
test
dec
cmpsl
mov
xor
aam
rcr
adc
mov
xchg
cs
stos
cmp
inc
scas
xchg
cmpsb
mov
xchg
xor
lods
mov
inc
ds
adc
frstor
iret
clc
mull
push
push
cmp
mov
sub
push
loop
push
dec
movsb
inc
ret
jnp
sbb
fnsave
or
cmp
xchg
mov
add
xchg
and
push
mov
xchg
sbb
fstl
add
jbe
jnp
mov
sub
lds
pop
xchg
jnp
mov
in
push
push
movsb
pop
push
pop
adc
and
repz
sub
push
adc
sub
add
test
or
pop
push
sub
in
push
mov
std
add
ficompl
ret
cmp
push
xor
out
mov
imul
iret
ret
fs
loop
cmp
test
push
ss
cli
fwait
cmpsl
push
nop
pop
xchg
sub
mov
inc
les
ss
movsb
jmp
mov
bound
inc
in
outsl
jecxz
addl
adc
fs
or
jns
or
imul
aad
sub
pop
jae
mov
mov
inc
into
sbb
out
push
mov
daa
dec
adc
mov
dec
notl
pop
or
lahf
mov
or
loop
sbb
ret
mov
stos
mov
andl
mov
pop
dec
loop
adc
push
sub
gs
xchg
xorb
dec
icebp
jns
test
lods
scas
inc
popf
jne
lds
sbb
pop
adc
iret
lcall
scas
xorl
mov
inc
aas
sahf
mov
cltd
mov
nop
imul
out
mov
inc
and
jg
pusha
lock
xlat
push
ss
dec
icebp
rcrl
lcall
push
push
mov
fnstsw
push
sub
or
call
add
or
push
repz
jb
dec
pop
push
cmp
mov
iret
inc
push
mov
fwait
inc
mov
sub
sbb
mov
inc
das
sbb
scas
jge
test
and
rorb
inc
push
xchg
std
cld
xlat
xor
divl
jge
incl
mov
inc
push
pop
cmc
jno
ffreep
mov
adc
mov
adc
push
push
mov
adc
mov
push
jge
add
sar
popa
cld
jae
testb
sbb
test
inc
je
pop
xor
loopne
add
add
jecxz
jmp
fdivrs
imul
cwtl
ret
int
pop
cmp
xchg
repnz
cmp
fldenv
in
loopne
aaa
fidivrs
movsl
into
test
adc
call
xchg
xchg
push
mov
sub
pushf
dec
pop
mov
sub
lret
mov
pop
mov
mov
inc
mov
sbbb
popf
insb
or
not
es
fistl
fmuls
pop
rolb
sbb
jmp
ret
sbb
xchg
jecxz
dec
sahf
pop
addl
sub
mov
dec
das
push
leave
mov
mov
adc
inc
pop
add
call
cmp
or
mov
jns
jns
cmpsl
push
cmp
frstor
enter
iret
repz
icebp
mov
mov
inc
dec
inc
test
xchg
outsb
aam
adc
jecxz
xchg
and
stos
and
push
xchg
repnz
rorl
cmp
and
sti
cmp
ss
mov
out
in
xchg
add
bound
push
lds
jle
cltd
adc
inc
inc
and
jecxz
xor
out
xlat
push
sub
lock
hlt
das
inc
in
xchg
jecxz
and
rolb
adc
xor
in
pop
lcall
inc
pushf
push
xchg
or
jmp
lea
pushf
push
pop
inc
inc
enter
add
or
fwait
and
push
repnz
or
fldl
sbb
ror
nop
out
movsb
leave
ret
loop
xor
mov
call
push
and
sub
cmp
mov
pop
iret
gs
aam
lret
jb
push
test
fstpl
in
mov
int
jo
jp
in
dec
insl
xchg
sahf
mov
fcoml
cltd
push
inc
lahf
xlat
cmp
xor
mov
daa
push
add
mov
ljmp
pusha
mov
mov
pushf
scas
lds
fxch
mov
sbb
out
cmp
push
jno
dec
stc
fadd
outsl
lock
arpl
pop
dec
push
sbb
and
push
or
adc
mov
adc
pusha
cltd
cmp
cmp
cltd
lret
mov
pop
xchg
dec
xchg
sbb
jle
test
add
push
and
cmpsb
jmp
loop
dec
mov
push
jne
aam
lds
std
sbb
das
insl
aam
mov
mov
scas
enter
xchg
lea
fidivrs
ss
test
filds
mov
xchg
dec
aam
sub
add
es
clc
shl
movsb
lret
sub
add
scas
push
cli
in
cmp
cld
jae,pn
mov
xchg
int
adc
sbbl
cmpsl
xchg
out
stc
add
or
sub
testb
nop
pop
mov
cmpsl
cli
ljmp
ds
fidivs
test
sti
std
iret
xor
vpackuswb
int3
or
call
mov
xor
imul
jp
enter
cmp
push
into
outsl
dec
hlt
loopne
adc
ljmp
mov
mov
cmp
sub
mov
fmul
xchg
pushf
out
mov
pop
decb
fcomps
cmp
pop
shll
pop
fstl
cltd
pop
in
push
repz
mov
mov
loop
cmp
loope
pop
loop
movsb
jbe
xchg
or
arpl
push
xor
jle
sbb
xchg
sub
mov
lea
mov
lret
add
pop
mov
and
jo
mov
mov
or
ljmp
inc
sub
or
mov
ja
ljmp
mov
stos
sbb
insb
add
stos
aam
pop
repnz
mov
ret
aaa
outsl
xchg
lods
fisubrl
icebp
or
adc
testb
mov
mov
js
sub
push
add
jo
movsb
std
cs
lret
jmp
out
nop
push
jo
cli
test
fs
rolb
mov
divb
mov
enter
pop
pop
fwait
or
jg
sbb
xor
dec
xor
fldt
mov
mov
inc
mov
mov
sahf
insl
cmp
call
xor
jb
pop
jb
loop
pop
mov
je
add
adc
stc
sbb
cwtl
cli
xchg
jmp
xlat
add
sbb
inc
out
jno
add
repnz
sbb
inc
adc
inc
ss
push
popf
repnz
outsb
fbld
mov
shl
push
cmc
fs
push
adc
fsts
adc
cmp
out
add
daa
cmp
dec
shll
lret
xchg
imul
xchg
jl
and
xor
jae
sbb
in
lds
sbb
add
ja
das
andb
js
out
aam
incb
clc
push
aaa
data16
xor
mov
dec
lret
sti
inc
je
shrb
mov
push
sub
sbbl
mov
dec
jl
les
arpl
xchg
mov
jg
jle
or
mov
in
repnz
dec
lea
dec
addr16
je
pop
mov
sub
cltd
xor
stc
les
loopne
cli
popf
daa
ret
sub
mov
les
adc
pop
dec
fidivs
mov
scas
adc
mov
dec
mov
mov
lret
pop
push
scas
testb
test
mov
push
cmp
dec
push
jns
stc
adc
loopne
inc
or
pushf
jne
mov
popf
lcall
push
scas
cmc
sbb
or
adc
push
gs
rcl
sbb
adc
out
lds
jl
imul
pop
push
mov
ret
jns
andb
in
insb
inc
add
cwtl
rcrb
mov
inc
int
sbb
mov
fcomi
outsb
push
inc
adc
inc
hlt
jb
mov
sbb
cmp
dec
sub
ja
fsubs
cmc
push
ret
pop
fsubrs
mov
in
dec
dec
repnz
sbb
std
xor
lea
dec
out
pop
mov
ds
sbb
pusha
and
jb
outsb
out
jb
inc
cmp
scas
mov
inc
inc
sahf
cmpsl
pop
lahf
rclb
xor
mov
shll
fs
mov
push
mov
mov
cltd
push
sti
mov
js
jp
ds
out
push
mov
iret
fisttpll
jecxz
cmp
jb
aas
push
mov
cmpsb
stc
xor
sub
fs
lods
cmc
mov
and
mov
lods
fnsave
enter
leave
mov
loop
fxch
sbb
sbb
mov
and
mov
xorl
pop
mov
dec
jbe
push
xlat
outsb
lret
imul
incb
push
loope
mov
cmp
jecxz
mov
mov
cmpsb
sub
mov
push
mov
sbb
sarl
movsb
mov
leave
out
lret
adc
je
roll
mov
adc
call
cmpsb
push
mov
gs
jp
aas
cld
and
sub
mov
movsb
sbb
mov
adc
pushf
jmp
cmp
lods
adc
adc
bound
push
fadd
repnz
in
fwait
add
or
pop
inc
sub
loope
sbb
pop
mov
cmp
stos
add
add
mov
pop
pop
std
or
stos
ret
mov
adc
pusha
lcall
cmc
outsb
cltd
insb
aam
mov
aaa
mov
sbb
pushf
sub
and
das
adc
add
nop
pop
cld
mov
mov
cmp
out
dec
xor
xchg
pop
cld
and
lock
push
shrb
popf
push
es
repnz
xor
cld
in
mov
sub
cs
mov
das
xchg
adc
add
fisubs
aaa
ret
movsb
mov
mov
cmp
or
or
sahf
pop
out
ds
jl
push
stos
cmp
dec
lahf
movsl
cmpsb
cmpsl
cs
popa
xchg
in
jns
into
shll
ret
jmp
and
mov
rolb
mov
rcll
add
jb
arpl
xchg
loop
cs
pop
jns
gs
inc
adc
das
in
cmp
mov
gs
push
int3
test
pop
inc
push
test
fwait
or
inc
es
push
lods
xchg
in
mov
sub
mov
inc
xchg
or
push
push
adc
orl
ret
outsb
test
xor
push
cli
xchg
inc
int3
stos
add
mov
das
inc
jns
mov
dec
fwait
lods
pop
int
xchg
repnz
stos
xor
imul
xor
jnp
inc
pushf
cmp
aad
outsl
aas
out
dec
sahf
dec
cs
xor
imul
xchg
fwait
pushl
je
cmc
push
push
xchg
jne
clc
jo
ds
xor
and
pop
and
sub
xchg
shll
jae
jb
jp
add
mov
movsl
test
jne
xchg
pop
push
mov
fidivrl
and
dec
lret
shrb
adc
push
in
movsb
stos
sub
mov
xchg
sub
loopne
push
sub
xor
cltd
ja
fisttpll
or
jle
sub
into
pop
int3
inc
outsl
jp
lcall
xor
ficoms
pushf
xor
jmp
inc
hlt
and
mov
xchg
outsb
cwtl
push
pop
out
out
xchg
and
jb
sub
xchg
lahf
mov
out
xor
dec
gs
nop
jmp
into
jb
jmp
out
loop
jge
jbe
scas
repz
ret
cmp
pop
xor
fwait
out
jg
movsb
inc
or
jno
mov
aas
insl
les
xchg
fsubr
or
lea
repnz
xchg
cmpsl
and
lods
mov
and
pop
shlb
clc
std
or
enter
pop
xchg
mov
push
sbb
sub
pop
lock
dec
push
cmp
cli
or
mov
push
ljmp
loopne
stos
mov
pop
jae
gs
outsl
jmp
cltd
repnz
dec
inc
jmp
or
or
xchg
cmp
loop
mov
mov
pop
jmp
loop
xorb
sub
nop
lods
dec
loop
push
ljmp
adc
mov
incl
popf
adc
mov
sub
jb
sub
inc
fsubrl
jl
inc
orl
mov
iret
xchg
jo
aas
jb
cmpsb
data16
pop
and
repnz
add
pop
xchg
scas
adc
lahf
or
je
sub
pop
or
cwtl
shl
pushf
mov
daa
jecxz
push
push
stc
cmpl
rol
pop
test
xchg
adc
or
and
pop
out
sarb
fisttps
cmpsb
mov
mov
inc
mov
fnstsw
jmp
xor
gs
repnz
mov
or
inc
xchg
hlt
mov
or
loop
fistpll
sbb
sub
mov
jo
int
fimull
jecxz
fs
jle
jbe
outsl
xor
loopne
add
mov
dec
in
and
inc
pop
adc
sub
scas
sbb
aaa
and
fldcw
xchg
std
mov
pop
mov
mov
xchg
inc
pop
xor
subl
lcall
mov
push
mov
xchg
sub
notb
dec
test
les
sub
test
arpl
mov
cmpsb
cli
xchg
scas
mov
cmc
gs
pop
xlat
add
and
pop
es
out
ret
push
cmp
and
push
rorl
xchg
stos
int
sbbl
arpl
adc
push
inc
jae
sbb
out
cmpsb
pushf
das
ds
faddp
push
push
mov
xchg
add
dec
and
lret
mov
arpl
clc
add
add
imul
push
push
arpl
jmp
addr16
les
add
mov
dec
idivl
cmpsb
pop
and
cmp
push
scas
inc
adcl
mov
sbb
iret
mov
dec
mov
mov
jle
add
jbe
adc
stos
jae
fisttpl
jae
push
inc
adc
scas
scas
push
inc
mov
cwtl
sub
xor
mov
xor
in
xchg
push
dec
xchg
xchg
and
mov
repnz
push
and
lds
jbe
cmpsl
cmpb
mov
xchg
adc
or
pop
addr16
sbb
cmp
pop
add
cwtl
jg
popl
push
data16
or
mov
mov
adc
mov
dec
push
cs
sbb
cmp
pop
ret
out
or
mov
or
daa
add
fdivrs
mov
aaa
lret
fmull
and
addr16
inc
cli
push
push
in
sub
xor
sub
inc
sbb
pop
or
lods
jle
or
pop
enter
and
fwait
int3
idivl
roll
fadds
sbb
pop
dec
jp
ffree
and
fdivr
xlat
int
in
inc
sub
push
add
add
inc
pop
out
and
insb
fadd
ror
and
fwait
je
mov
cli
cmp
push
jae
mov
popa
mov
daa
inc
adc
adc
jo
outsl
mov
dec
and
fiaddl
inc
jbe
rolb
pop
dec
push
dec
adc
jecxz
icebp
stos
sbb
lahf
sbb
into
dec
add
inc
shl
out
jb
sbb
lods
and
dec
popa
jnp
in
jns
xor
dec
add
sub
mov
adc
outsl
mov
ret
inc
mov
outsl
int3
sbb
cmpsl
sub
pop
fdivrl
dec
cld
sbb
cld
push
gs
push
lods
nop
dec
pop
jne
fdivrl
stos
adc
rcr
mov
pop
sub
jae
mov
insl
add
fdiv
lea
and
push
rcr
imul
ds
cmp
xor
adc
push
test
jle
push
fsubs
scas
ds
push
stos
adc
jae
dec
cltd
cltd
imul
pop
add
or
pop
inc
jne
push
push
push
jnp
cmp
adc
jbe
sbb
mov
push
push
cli
push
sub
pop
push
repnz
test
push
pop
mov
test
ss
into
sbb
mov
add
sub
pushf
repz
mov
ret
push
inc
imul
lock
pop
lods
ret
xor
push
lods
pop
mov
mov
sbb
jmp
fisubrs
ret
lods
and
mov
sbb
mov
daa
shlb
dec
or
adc
mov
rorb
fcomp
pushl
shl
jge
bound
dec
jne
adc
sbb
int3
jecxz
shl
ficoms
lods
sarl
cwtl
leave
cli
cmp
dec
lcall
das
lock
outsb
out
pushf
jbe
jmp
sub
or
cmp
fistpl
push
icebp
jmp
out
inc
push
sbb
mov
dec
popa
outsb
mov
pop
shl
in
mov
test
mov
popa
imul
xor
cs
add
repz
les
gs
js
nop
aaa
aaa
test
pushl
aam
sub
imul
int
mov
fs
lret
repz
pop
sub
xchg
daa
dec
add
in
mov
test
movsl
loopne
loope
xor
add
lret
dec
outsl
test
mov
push
or
jnp
push
repnz
jp
sub
scas
imul
pop
dec
xor
and
and
sbb
push
sbb
sub
sub
mov
push
sbb
mov
mov
add
je
int3
pop
inc
xlat
shll
or
lcall
inc
mov
add
jno
or
dec
push
aas
pop
pop
fcmovnb
into
jg
jnp
mov
pushf
sti
inc
mov
stos
imul
inc
push
sbb
mov
insb
add
in
jno
add
into
int
shlb
and
sbb
mov
movsb
cld
xchg
mov
mov
adc
lcall
push
mov
insl
std
aas
add
inc
mov
aad
loope
mov
inc
xor
imul
sub
cmc
shrb
xor
cld
adc
shll
nop
sbb
insb
repnz
cltd
sub
cmp
outsl
ret
repz
jne
lea
mov
aad
aad
insb
cmp
add
pop
mov
xchg
push
or
and
pop
xchg
xchg
cmpl
push
pop
pop
loop
out
jb
xchg
mov
xchg
into
jmp
mov
test
rcl
push
js
fisubl
lret
aam
rclb
add
jns
repz
clc
repz
insl
add
pop
sub
sbbb
jle
lds
jl
vprotb
sarl
stos
lret
inc
sbb
dec
add
addr16
inc
xchg
fs
rcll
xor
popa
cld
sbb
mov
add
fs
loopne
fmulp
push
and
ljmp
stos
pop
gs
ficompl
divl
lahf
jne
jecxz
and
mov
xorb
adc
daa
adc
subl
jbe
mov
inc
repz
movsl
adcb
jb
daa
push
or
adcl
dec
mov
fcomps
pop
addr16
fadds
inc
rcll
dec
and
or
adc
jne
inc
jmp
xchg
push
shrl
mov
rolb
lea
add
pusha
sbbl
mov
jge
shrl
insl
addl
cmp
push
push
test
push
push
pop
sub
call
sbb
add
cwtl
clc
lods
adc
out
adc
and
mov
sbb
lcall
or
sub
test
mov
push
add
leave
sbb
scas
mov
insb
push
sysret
lret
adcl
dec
push
loopne
out
mull
mov
or
bound
repnz
sti
push
mov
sub
jl
aad
out
jg
popa
enter
es
out
add
mov
lods
xor
sbb
lock
loopne
call
mov
arpl
or
fidivrl
ret
nop
jbe
mov
pop
sbb
cmp
adc
pop
mov
mov
mov
mov
test
leave
xchg
pop
xchg
xor
mov
outsb
aam
icebp
scas
mov
jmp
inc
cltd
call
pop
cld
in
xlat
cmpsb
jp
popf
mov
mov
mov
lods
push
pop
jl
rorb
cmp
idiv
or
pushf
imul
xor
jbe
xchg
popa
stc
mov
xor
mov
sub
inc
sbb
popa
cs
test
mov
inc
mov
sub
jnp
lahf
lock
and
jb
inc
push
aaa
or
bound
fwait
add
jle
mov
inc
cmpsb
je
or
jae
addl
int
lret
les
adc
cld
sti
dec
sub
lea
and
aad
sub
mov
pushf
lcall
imul
adc
arpl
sbb
pop
mov
cmpsl
out
lcall
push
arpl
test
out
test
inc
in
cmc
stos
xchg
fistps
inc
sub
out
imul
outsb
pop
in
fwait
jbe
mov
jae
add
push
jl
adc
mov
add
sub
mov
add
dec
popf
fmull
pop
jo
jns
adc
mov
pop
or
add
xor
mul
push
mov
sbb
jecxz
cwtl
xchg
push
sbb
push
scas
loop
int
mov
mov
cmp
xchg
sub
fisttpl
or
push
outsl
xchg
jle
into
mov
xor
aaa
sub
shlb
jecxz
out
jbe
adc
aaa
push
daa
mov
jne
mov
stc
int3
out
shlb
push
xchg
loope
ret
stc
mov
sti
cmpsb
scas
test
clc
in
je
adc
mov
cmc
sub
and
test
dec
aaa
add
clc
enter
add
cltd
imulb
xchg
mov
imul
orb
push
fs
mov
or
insb
xlat
call
repnz
mov
int
mov
leave
mov
aas
jge
movsl
add
and
mov
mov
sub
push
inc
jo
or
fstps
sahf
pop
insl
sub
aad
or
out
fcompl
mov
test
scas
xor
dec
test
ljmp
nop
xor
and
rcll
rorl
pop
loopne
or
cmc
iret
push
imul
lock
movsb
call
loop
ret
aaa
dec
sub
sub
rorl
lahf
test
add
xchg
add
nop
pop
scas
cs
mov
sbb
mov
jb
jno
pop
popa
mov
inc
jg
cltd
stos
movsl
pop
inc
pop
mov
cmp
idivb
sahf
inc
sbb
xor
or
mov
loop
out
aas
cmp
cmp
fmull
xlat
or
test
fdivr
inc
sbbl
mov
pop
xchg
cmc
sub
decl
cli
stc
lds
push
idiv
pop
and
sbb
push
cmc
cld
inc
cld
mov
push
das
clc
sub
in
mov
pusha
add
fcomps
jns
insb
add
xor
je
fbld
adc
push
lcall
shll
sbb
int
out
jno
addl
mov
jbe
je
test
aaa
jbe
imul
rcrb
das
dec
movsl
add
cld
xchg
in
shll
mov
mov
pushf
push
push
mov
xor
cmpsb
pop
out
addr16
cmp
jno
rcll
shr
xchg
lret
into
inc
pushf
sbb
movsb
push
lret
mov
xor
jae
dec
fstps
push
jo
mov
lahf
mov
lahf
dec
neg
out
xchg
push
pop
mov
adc
out
sti
cld
mov
repnz
packssdw
shl
pop
lahf
mov
cwtl
ja
xor
push
push
jecxz
imul
outsl
mov
xor
arpl
das
js
ret
inc
bound
jl
xchg
movsl
popf
ljmp
cltd
sbb
icebp
lea
jno
add
adc
sub
aam
insb
add
aad
vmwrite
cmp
es
and
aad
push
add
cmpb
gs
icebp
hlt
addr16
mov
inc
or
ljmp
cmp
cmp
inc
adc
daa
pop
sbb
fdivl
push
mov
bound
mov
fistpl
add
adc
adc
fsubr
push
hlt
daa
push
push
and
dec
cmp
shrl
cld
sbb
adc
jle
xchg
mov
es
and
bound
aad
cmp
pop
jmp
jle
cmp
push
sbb
sub
loope
push
xor
in
inc
mov
xchg
adc
sub
inc
push
jp
dec
xor
adc
out
jmp
fs
imul
out
xchg
inc
imul
xlat
sbb
inc
mov
xchg
mov
pop
ret
scas
fldenv
scas
mov
lret
ljmp
sbb
push
push
out
je
fiaddl
pop
cwtl
jle
jbe
mov
addr16
or
sub
xor
stos
addr16
xchg
xlat
lock
dec
pop
jg
mov
dec
cld
inc
addb
aam
pusha
mov
pushf
or
jle
mov
int3
jno
adc
mov
sahf
ljmp
jo
lds
lock
addr16
push
mov
aas
cmp
iret
jle
repnz
fiaddl
push
stos
stc
pop
lods
inc
pop
xchg
dec
cmpsb
in
leave
insl
jae
sub
data16
call
mov
jl
popa
outsl
popa
jl
std
sahf
insb
sub
mov
xor
stc
xchg
jmp
dec
mov
dec
fldpi
mov
aad
and
sahf
mov
and
pop
or
fcoml
je
outsb
push
dec
adc
es
sub
ljmp
addr16
add
mov
arpl
dec
mov
clc
enter
divb
sbb
clc
loope
stos
out
les
das
jo
scas
mov
insl
mul
or
add
test
mov
push
dec
pop
pushl
enter
fcmovnu
push
test
and
pop
testl
iret
and
outsb
mov
bound
mov
inc
sahf
xor
nop
push
insl
test
cmp
std
inc
ds
push
dec
mov
push
rcl
xlat
push
push
push
notb
popa
pushf
inc
sbb
mov
jno
pop
mov
out
gs
and
and
push
dec
lret
jno
mov
pop
cmp
movsb
std
mov
iret
js
test
fs
pop
pop
cmp
push
pop
in
pop
lcall
mov
jle
push
xchg
or
mov
in
adc
popf
sub
sub
push
imul
and
push
stc
stos
sbb
cmc
xor
xor
ret
xchg
xor
sub
lret
push
shlb
mov
in
mov
arpl
and
bound
and
sbb
insl
push
mov
dec
mov
push
out
cmpsb
adc
int
dec
push
jae
shll
inc
sti
mov
pop
mov
test
fwait
add
aas
jecxz
xchg
cmp
pop
insb
dec
xorb
enter
push
rclb
lea
inc
mov
cmp
std
out
xchg
mov
sbb
push
mov
push
cltd
cld
push
repnz
pop
ss
outsb
mov
inc
jnp
fs
sub
jp
ret
loopne
inc
add
test
arpl
cli
mov
jno
inc
int3
mov
jge
pushf
cmp
sbb
or
sbb
in
insb
jae
adc
dec
push
push
enter
les
mov
jle
ds
and
cmpsb
cmp
mov
cmpsl
sub
ljmp
das
les
stc
mov
jnp
push
pop
in
sbb
mov
aas
sbb
xchg
shll
loop
adc
mov
mov
mov
dec
jecxz
jne
jae,pn
cld
imul
sub
sbb
inc
icebp
cmpsl
mov
sahf
outsl
mov
pop
push
jb
xchg
or
sbb
add
xchg
mov
cmpl
inc
jae
add
sarb
or
xchg
xlat
pop
in
lret
push
inc
in
sbb
cmp
fscale
xchg
or
les
add
mov
cmp
push
fcos
lods
lahf
pop
repz
in
cmpb
mov
dec
mov
test
or
call
jge
popf
lahf
enter
xor
mov
push
dec
outsl
std
fisubrl
jbe
andb
and
mov
ss
je
icebp
mov
fistpll
and
pop
in
sti
mov
jnp
sub
xor
and
test
mov
add
stos
mov
js
mov
movsb
dec
push
mov
jbe
push
xchg
push
es
dec
movsb
shr
xor
mov
test
jne
push
jo
or
adc
push
xchg
lret
int
adc
clc
cwtl
ljmp
mov
lret
jnp
push
test
xchg
jb
jle
daa
cmp
sub
push
fldl
in
stc
jmp
jno
aam
xor
adc
and
insb
sti
leave
rcll
xchg
mov
sub
pop
xchg
leave
clc
xchg
mov
pop
imul
xchg
jmp
push
adc
enter
push
or
xchg
jne
mov
xchg
adc
mov
cmpsl
cmp
test
imul
dec
repz
cltd
gs
das
test
xchg
jns
stos
dec
scas
mov
pop
int
mulb
scas
jge
pop
xchg
pop
sub
jno
into
in
lods
xor
sarl
lcall
nop
and
les
jns
mov
in
jo
out
and
aas
je
cmpsb
add
ret
sbb
jg
cmp
adc
stos
sub
loop
test
sub
sbb
fistpll
in
jns
mov
das
addl
mov
cmp
xchg
stc
and
fadds
mov
mov
aas
ret
mov
inc
mov
loopne
add
rcrl
mov
test
popl
dec
add
dec
stos
loopne
xchg
adc
xor
sub
ds
sahf
scas
adc
or
inc
push
inc
and
insb
cmp
mov
nop
xor
cmpsb
xor
dec
inc
adc
adc
rorl
je
jge
out
ficomps
dec
jo
out
out
push
fdivp
setg
push
xor
push
jle
lods
popa
inc
fs
insb
in
dec
pop
cltd
cmp
gs
mov
mov
loope
test
cmpl
xchg
jbe
xor
fldl
sbb
frstor
dec
mov
pushf
imul
pop
cmpsl
movsl
ret
xor
das
into
sub
cli
ljmp
push
xchg
test
add
add
pop
ja
fcmovbe
mov
dec
cs
out
dec
pop
sbb
pop
push
sbbl
inc
cmp
das
test
and
or
loopne
js
xchg
adc
fs
movsb
andl
add
adc
inc
daa
aaa
sbb
negb
fwait
dec
pop
out
jmp
inc
jne
cld
bound
jb
jo
ficomps
jns
fisubrs
in
mov
fnstenv
sbb
add
cmp
or
je
cmpsb
outsb
mov
out
jbe
cmp
in
sahf
lock
push
cmp
sub
adc
sbb
push
xor
scas
testb
ja
pop
mov
xor
mov
push
jno
sub
push
es
xchg
adc
jl
cmp
mov
in
js
sbb
mov
push
cmp
jmp
icebp
xchg
jecxz
andl
iret
call
aad
jge
sbb
fnstcw
fisubs
lret
shlb
rolb
inc
movsl
pop
fmuls
sahf
fidivl
inc
jmp
scas
dec
xchg
jg
std
repz
xor
mov
mov
cmp
out
subb
adc
int3
push
or
ljmp
cmp
in
pop
pop
push
xor
cmp
idiv
pop
inc
mov
jns
sub
adc
arpl
mov
popa
sbb
mov
or
call
or
pop
and
arpl
jg
daa
cmc
add
xchg
cmc
pop
adc
mov
mov
inc
outsw
movsb
inc
test
cmp
adc
adc
cli
shrl
ret
in
pop
jo
pop
adcb
mov
mov
jno
jne
mov
push
movsb
mov
xchg
mov
dec
inc
or
inc
test
cli
andl
movsb
sub
and
jp
orl
jp
inc
xchg
push
jmp
lcall
mov
addr16
sbb
rorb
pop
adc
sbb
cld
push
jnp
mov
and
out
xor
in
aad
xchg
xor
insl
or
shlb
stc
cmp
mov
pop
push
test
stos
sbb
xchg
add
pop
inc
fimuls
pop
mov
adc
and
mov
adc
hlt
outsb
jns
jae
cli
pop
pop
jne
cmp
mov
sahf
ljmp
pop
pusha
incl
mov
cs
xor
push
sub
pop
adc
mov
sbb
insl
mov
das
adc
mov
dec
jae
pop
jbe
js
pop
jmp
sub
add
jnp
fdivs
rolb
ja
pop
cli
mov
mov
cmc
out
test
cmp
mov
sahf
push
cs
test
pop
xor
call
lods
sti
cltd
pop
jb
sbb
test
lahf
inc
push
idivl
mov
mov
stos
cmc
push
inc
lret
sbb
addr16
in
mov
or
test
ror
outsb
and
xchg
mov
adc
mov
dec
test
adc
and
adc
loope
cwtl
popa
mov
in
mov
fmull
jp
xchg
or
pop
icebp
fdivs
stos
popw
push
or
ret
push
stc
sbb
shr
rcll
pusha
test
lea
inc
lahf
into
lret
adc
dec
ja
xorb
mov
adc
jge
mov
enter
or
testl
cmpsb
xchg
sti
out
fmull
test
orb
mov
or
inc
popl
testb
dec
add
pop
bound
cwtl
and
cmp
push
sub
fadds
and
adc
push
lret
movsb
pop
push
mov
xchg
pop
cmpsb
or
je
sbb
adc
sub
test
mov
enter
dec
lods
mov
lods
cld
xlat
fisttpl
jbe
ja
pop
mov
iret
xchg
popf
nop
add
mov
jge
leave
scas
test
pop
xchg
inc
out
jmp
xchg
js
pop
loope
out
scas
xchg
sbb
addr16
pop
addb
pcmpeqw
adc
xor
insl
jbe
addl
adc
jle
dec
out
jns
aad
rcrb
cmp
push
inc
and
dec
adc
sbb
je
xchg
add
in
hlt
arpl
add
out
pop
sbb
testl
call
mov
xchg
jbe
bound
gs
push
add
fs
push
dec
xchg
push
pop
leave
jp
in
jg
dec
lahf
shll
sub
test
int
jge
out
js
out
leave
jns
jle
jg
mov
mov
clc
xchg
outsb
std
sbb
mov
idivl
xlat
data16
movsl
ljmp
mov
pusha
fisttpll
dec
enter
arpl
jmp
xor
testb
cmp
in
push
jl
inc
cmc
in
imul
xchg
ss
sub
test
enter
mov
lret
or
out
add
adc
mov
cmpsl
into
repnz
xchg
and
mov
mov
fiadds
popf
sbb
xorb
repz
push
mov
icebp
and
mov
out
sbb
or
xchg
sbb
ja
jno
add
mov
jl
mov
fsts
sbb
clc
fidivrs
mov
mov
push
mov
call
popf
pop
in
mov
hlt
inc
mov
shll
mov
jno
xchg
in
xchg
aas
test
imul
cmp
in
stc
aam
pop
out
ds
jmp
test
pop
xor
lds
subl
test
sbb
mov
inc
mov
rclb
cmp
mov
aad
loop
jmp
jb
jmp
aad
rcrb
pop
lock
add
ret
cld
orb
orb
out
lahf
adc
sbb
out
test
call
inc
sub
jge
inc
add
es
and
or
gs
and
xor
dec
xchg
cli
push
movsl
or
lahf
jns
ficoms
mov
pop
xor
sbb
and
scas
aas
or
add
or
jp
jo
imul
or
dec
push
xchg
cmp
in
cmp
adc
or
push
inc
nop
ds
js
sub
xor
stc
jae
jnp
pop
jmp
test
mov
leave
inc
js
mov
nop
mov
jl
popf
cld
lea
jle
sbb
cmc
pop
scas
mov
and
pop
shrb
and
mov
scas
cld
inc
out
mov
and
outsb
mov
insb
fldcw
xor
push
rclb
xlat
inc
sbb
cmp
imul
ss
loope
ds
mov
sbb
test
fwait
popa
shl
out
shll
and
dec
cmp
xor
xor
arpl
notb
lds
andb
pop
std
xor
aam
insb
hlt
adc
loop
outsb
xchg
or
cltd
aas
mov
jmp
xorl
loope
jp
mov
mov
cmp
cmp
xor
mov
pop
pop
insb
push
mov
push
out
popf
arpl
adc
sbb
mov
pop
jg
insb
pop
ss
insb
and
lea
sbb
mov
mov
push
mov
mov
divl
cld
xorb
stos
mov
pop
test
inc
es
jae
fldcw
inc
dec
es
pop
pop
xchg
and
or
sbb
jp
hlt
cmp
sub
lds
mov
inc
or
sbb
mov
movsl
rcl
xchg
je
mov
outsb
inc
cmpsb
mov
or
mov
add
mov
mov
jo
mov
push
outsl
je
and
cmp
mov
add
nop
rcll
flds
jle
push
inc
outsb
jbe
stc
mov
in
shlb
hlt
lahf
divl
ljmp
add
aad
shll
loop
test
out
sub
mov
enter
xchg
cmp
sub
lcall
pop
pop
insl
cmpl
insl
sarb
mov
sbb
mov
adc
inc
mov
popf
dec
in
cmpsl
adc
mov
add
out
les
xor
les
jnp
ljmp
icebp
sbb
jnp
push
pop
in
mov
or
xchg
movsb
dec
outsw
jle
imul
mov
push
dec
repnz
pushf
into
push
push
fisttpll
mov
inc
or
push
clc
dec
fwait
add
jp
imul
inc
dec
mov
out
ret
addr16
imul
or
enter
push
sahf
adc
jmp
xor
cmpl
stc
sbb
orl
and
jbe
push
mov
inc
or
cli
mov
cwtl
inc
ljmp
jmp
fwait
or
orb
pop
fldl
adc
ficompl
sub
call
dec
mov
aad
push
test
cmp
mov
imul
lock
mov
pop
fstpt
dec
sub
sbb
pop
xchg
xor
pop
repz
out
mov
in
loop
mov
dec
and
iret
sti
outsl
stc
scas
jecxz
mov
adc
stos
mov
ja
fabs
push
add
pop
inc
jge
cmc
outsl
sbb
xchg
movsb
in
inc
mov
add
dec
dec
and
mov
sar
pop
mov
dec
cwtl
outsb
add
cmp
inc
push
mov
fistl
fwait
arpl
push
mov
sbb
adc
shlb
dec
mov
adc
adc
sbb
lock
push
xchg
jnp
aaa
adc
popl
pop
and
xor
cmpsl
sbb
or
aad
shl
mov
mov
mov
pusha
jne
outsl
dec
mov
sub
data16
pushf
ftst
hlt
jns
aam
push
enter
mov
flds
dec
push
mov
sub
xchg
mov
push
xor
fldt
lahf
das
lret
or
xrelease
notl
xchg
ljmp
js
push
dec
sbb
cmp
mov
lahf
rcr
jnp
add
sub
repnz
xchg
testl
jne
lds
push
xorl
xchg
adc
clc
ret
sti
jo
sub
pop
sbb
fiaddl
push
cmpsl
aaa
pushf
xor
mov
push
mov
and
adc
sbb
addl
jp
cmp
pop
je
lock
hlt
inc
sqrtps
xchg
sbb
pop
mov
int3
int3
es
fnstcw
ret
pop
mov
inc
icebp
xchg
pop
add
cmp
inc
bnd
insb
arpl
das
fildl
stos
xor
fidivs
divl
and
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
jmp
int3
push
.byte
pop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
xor
add
add
add
add
or
add
add
add
add
add
mov
add
xor
add
cmp
add
add
push
add
add
add
xor
add
add
je,pn
js
add
add
and
add
scas
add
add
add
add
jb,pn
popa
je
add
les
add
xor
add
push
add
add
add
inc
add
loopne
fs
je
add
add
add
add
add
sbb
add
lock
inc
add
loopne
add
xor
xor
call
pusha
call
xor
popa
and
ret
daa
add
dec
xchg
outsb
dec
lret
dec
hlt
push
aam
fisttps
sub
xchg
rcrl
imul
test
jecxz
cld
test
jecxz
cld
jmp
jmp
jmp
call
dec
repnz
bound
mov
and
xorl
sub
jo
xor
dec
xor
ffree
iret
enter
lahf
rcll
inc
jae
jle
sub
sbb
and
inc
adc
fldt
idiv
add
jb
hlt
das
out
xorl
aam
loope
lret
mov
sarl
mov
push
nop
inc
cmp
inc
imul
xchg
mov
cmpsb
dec
dec
jecxz
cmp
inc
out
jmp
mov
mov
jge
lea
xor
or
sub
mov
mov
loope
stc
xchg
dec
lea
fwait
xlat
pop
mov
fnstcw
test
push
dec
cmp
shlb
xor
jns
sbb
sub
or
and
fsubl
mov
iret
insb
andnps
es
xor
cmovl
bound
movsb
pop
inc
sub
cmp
shl
xlat
jle
sbb
sti
add
xlat
loope
inc
pusha
xor
sahf
inc
aam
adc
and
js
fldenv
cmpl
outsl
mov
out
pop
imul
aas
popa
cmpsl
push
decl
movsb
lods
fbld
std
scas
mov
mov
jnp
inc
pop
pushf
xlat
push
outsl
cmp
mov
loopne
lret
leave
sub
lahf
stos
enter
cmp
jnp
fimull
imul
stos
inc
pop
lods
hlt
xchg
repz
aam
jg
outsb
inc
mov
stos
pop
int3
addr16
mov
dec
dec
and
rclb
mov
jno
pop
sub
stos
jmp
out
iret
pusha
pop
popf
and
fs
fimull
out
in
and
jge
je
test
xor
mov
adc
in
pop
pop
lcall
mov
scas
cmp
mov
inc
in
movsl
and
fcmovb
loopne
ja
adc
pop
mov
call
mov
out
jo
xchg
fistl
out
cmp
cltd
push
add
loopne
mov
mov
sub
mov
flds
or
mov
cmp
dec
mov
xor
push
and
mov
rcrl
test
fdivrl
jae
mov
push
cs
and
xor
sub
pop
clc
mov
cltd
mov
fcmovbe
nop
push
xchg
jne
mov
out
pop
bound
and
divl
cld
add
jecxz
out
outsb
xchg
sbb
popa
mov
out
fldl
cmp
mulps
inc
push
mov
push
mov
ds
sbb
push
push
adc
aas
pushf
lods
jne
xchg
pop
lock
sub
sti
cmp
mov
jp
popa
hlt
add
int3
push
push
lods
out
lds
xchg
bound
lds
enter
push
inc
ds
aas
push
movsb
scas
scas
ss
mov
das
test
clc
cltd
pop
push
push
adc
add
mov
lret
mov
and
loopne
shl
cmpsl
idivb
add
pop
sub
jmp
pop
sti
sub
jp
aaa
shrb
shl
jbe
pop
pop
cmc
add
loopne
adc
push
cmp
out
mov
or
dec
or
sbb
push
test
rcll
test
pop
mov
sub
mov
xchg
sbb
adc
mov
jmp
lods
jle
mov
sti
mov
xchg
pop
pop
adc
aas
jns
je
add
pop
inc
rclb
pop
jbe
and
or
add
mov
push
cwtl
xor
rorl
xor
jg
lods
scas
and
mov
out
bound
xsave
subl
jb
and
push
push
jmp
fisttpll
cmp
pop
roll
inc
aaa
push
push
push
xorl
jl
outsl
gs
test
push
stos
movsb
out
mov
in
inc
jmp
mov
xchg
lahf
out
cmp
and
lahf
sbb
stos
call
adc
sbb
mov
xchg
add
mov
inc
xor
cmp
dec
inc
cltd
jl
outsl
fisttpl
inc
pop
inc
lock
mov
insb
lods
xlat
pushl
lock
sub
out
cmp
push
jo
and
and
cmc
pop
dec
hlt
sbb
pusha
jecxz
movsb
xchg
stc
test
icebp
sahf
add
jge
aam
js
mov
dec
add
es
jne
xchg
and
cmc
aam
add
daa
subb
leave
pop
out
into
xchg
cmp
mov
pop
testl
sbb
je
cmp
scas
dec
dec
mov
push
push
repnz
mov
add
and
orl
scas
addl
mov
xor
gs
test
out
pop
ss
lods
dec
cmp
aad
or
mov
xchg
iret
das
stos
xor
fwait
decl
scas
je
mov
jae
cmp
in
lock
pop
movsl
aam
jb
mov
js
push
xlat
leave
and
pop
test
inc
add
lcall
dec
push
clc
xchg
xchg
mov
lret
and
push
outsl
xchg
popf
push
outsb
cs
mov
lcall
fnstsw
in
pop
mov
dec
insl
shll
push
add
andb
jp
pop
push
inc
pop
out
movsb
or
sbb
out
sub
mov
shl
sub
loope
jns
clc
xor
lret
cmp
cwtl
mov
jnp
bound
inc
testl
and
jl
cmp
add
lahf
jmp
lahf
xchg
ja
mov
jp
bound
pop
fs
pop
fwait
loop
fs
pusha
mov
pop
dec
add
ret
xor
imul
addr16
add
sbb
mov
fidivrs
inc
fsub
dec
out
mov
mov
pop
pop
rcl
adc
ret
clc
or
std
add
shrl
ror
xor
cmp
es
xchg
mov
ja
loop
cltd
in
cmp
in
or
sbb
jbe
imul
adc
push
insb
das
cmp
daa
out
sbb
jbe
add
xor
push
mov
repz
or
lods
mov
insl
lods
push
mov
sub
xchg
nop
pop
add
push
pop
jae
inc
popf
xchg
das
clc
adc
out
shl
pusha
pop
cmpsl
cmp
ljmp
je
adc
cmp
mov
jno
loopne
cli
ja
lds
shr
xchg
dec
xor
push
pushf
jmp
int3
inc
daa
popa
stos
pop
adc
xchg
sub
jmp
adc
xchg
in
test
ret
out
aad
jg
sahf
cmpsl
xchg
mov
lods
mov
lock
mov
enter
jecxz
imul
mov
clc
add
cltd
jecxz
popa
xchg
lcall
inc
ds
shlb
inc
xor
lea
sbb
inc
or
std
mov
test
dec
push
pop
adc
shlb
lods
fildll
or
insb
aaa
rorb
ret
jno
stos
sub
lds
or
dec
xlat
xor
sbb
test
test
test
testl
jns
xlat
repnz
pop
mov
jmp
cmp
push
mov
push
ss
popa
jns
pop
add
xabort
jmp
or
fldl
sub
sbb
fdivrl
out
sub
push
cwtl
adc
and
push
cmp
fnsave
movl
stos
xchg
loopne
jg
sahf
xor
nop
sub
fst
lcall
lahf
push
cltd
and
inc
lcall
cltd
sub
call
fistpl
out
stc
outsb
and
xor
sub
or
cmp
pop
insb
aam
add
cmp
mov
jnp
and
cmove
xor
aam
loope
sbb
jo
mov
aad
fnsave
xor
inc
xchg
arpl
fisttpl
inc
sub
pop
push
es
xchg
jmp
icebp
loopne
jno
push
movsl
cmp
cs
loop
popa
pushf
fcmovnbe
mov
add
int3
lds
cs
xchg
insl
scas
mov
mov
xor
and
pushw
in
pop
sbb
popf
out
mov
in
into
or
or
loopne
and
int3
mov
cli
loope
xchg
pusha
cli
cmpxchg
leave
dec
mov
mov
sub
scas
xor
push
shrd
adc
dec
cmp
mov
in
xor
xor
adc
hlt
shlb
ret
push
sub
ss
jl
push
fidivrs
xchg
out
add
inc
pop
cmp
movsb
cld
cwtl
pop
stos
adc
mov
jmp
lds
mov
pop
push
leave
mov
push
pop
mov
imul
mov
jae
mov
shll
pop
lods
ss
mov
loope
mov
dec
jnp
jmp
dec
adc
cltd
add
pop
adc
imul
pop
pop
dec
insb
push
jp
icebp
inc
daa
jnp
or
test
inc
aas
outsl
or
stos
dec
xor
in
mov
outsb
lahf
pop
leave
or
and
aam
push
mov
push
pop
iret
sbb
jl
hlt
adc
sub
je
stos
stos
xchg
aad
mov
pop
sbb
xchg
js
int3
sbb
push
push
in
push
mov
add
outsb
hlt
repnz
jecxz
cwtd
pop
cmp
arpl
sub
int
hlt
mov
dec
in
jb
and
lahf
push
pop
and
das
or
mov
out
cmp
xor
rolb
aam
mov
push
testb
push
aad
xor
sbb
cmp
push
idivb
push
add
pushf
push
sbb
xor
jg
iret
sub
scas
aas
lock
into
movsb
insl
sbb
test
stos
and
push
add
xchg
jecxz
aam
ljmp
incb
mov
loop
mov
pop
arpl
je
xchg
clc
sbb
sti
pop
xchg
dec
out
inc
xor
std
das
pop
int3
and
inc
outsb
popa
dec
xchg
inc
shrl
stc
add
fcmovnbe
pop
mov
inc
adc
pop
aam
dec
jecxz
leave
daa
pop
arpl
es
and
lret
negl
idiv
lock
mov
cmp
mov
scas
lret
fdivrl
and
rolb
hlt
mov
sbb
pop
mov
jg
jg
dec
aaa
dec
popf
mov
xor
aaa
in
mov
popa
in
lea
xchg
or
xchg
sbb
and
mov
jecxz
jge
mov
push
push
cmp
pop
pop
insb
inc
out
sub
sub
jne
sbb
mov
pop
add
mov
cmp
jno
lods
scas
push
add
push
clc
or
xchg
lcall
push
sbb
cmp
insl
loope
icebp
loope
clc
mov
and
sbb
incb
xchg
mov
mov
sti
int
in
dec
mov
dec
mov
cmp
mov
jge
decb
negb
add
fs
test
lahf
mov
addl
xchg
push
sub
xchg
pusha
insb
jle
shll
in
xchg
loop
insl
or
mov
jnp
pop
out
jge
jg
pop
mov
fistpl
sahf
jmp
lret
notl
xor
subl
adc
jno
mov
fdivrs
mov
ficoms
cmp
fmull
jns
pop
xchg
mov
cmp
xor
out
dec
adcl
movsb
inc
insb
enter
dec
sbb
mov
push
jge
and
shrl
lea
sbb
sbb
lods
sub
aad
mov
enter
je
add
pop
repnz
jp
jp
mov
mov
lock
inc
push
or
pop
cmp
xor
popa
push
fistps
pop
pop
ss
fdivl
fwait
pop
push
xchg
jge
adc
test
ss
dec
lods
fcmovne
jp
ja
push
cmpl
mov
cmc
push
rcrb
jmp
adc
push
frstor
enter
lahf
nop
bound
jle
cmp
ret
and
sub
data16
push
stos
in
imul
sbb
sti
push
sbb
repnz
rolb
push
in
mov
repnz
iret
rolb
sarl
sbb
jne
push
loop
out
dec
xor
mov
mov
sbb
imull
add
cmp
mov
mov
int
shr
jns
les
adc
mov
mov
dec
leave
loope
sub
mov
lock
cmp
add
mov
xchg
jmp
fists
fs
hlt
push
mov
les
jl
shlb
pop
xchg
or
lret
mov
cmp
jne
addr16
and
int
out
int3
loop
push
arpl
sbb
nop
cwtl
or
fs
iret
inc
inc
cld
cmp
mov
sub
mov
aad
add
add
push
xchg
repz
in
ret
test
iret
push
shll
ss
pop
jo
push
aaa
fwait
jo
hlt
iret
fidivs
jle
pop
sbb
in
xchg
movsl
cwtl
ljmp
xchg
out
pop
bound
outsb
push
push
xorl
inc
out
daa
test
push
xor
out
dec
pop
mov
pop
sub
mov
test
sbb
int
test
out
mov
cmp
add
pmuludq
lds
pusha
push
xor
xchg
push
clc
cld
cmp
sti
push
aaa
push
dec
dec
out
xchg
jmp
xchg
in
xor
mov
das
and
pop
fisttpll
neg
xor
push
push
jp
sub
mov
dec
jbe
ljmp
xchg
cmpsl
push
xchg
out
stc
shrl
scas
push
or
push
fbld
and
mov
out
outsb
roll
subb
es
stc
cld
idivb
cmpsb
lret
fisttpll
cmp
in
mov
push
mov
cwtl
mov
pop
rcr
mov
call
fistl
pop
jg
xchg
stc
mov
inc
mov
push
dec
inc
inc
sbb
imul
sub
or
sbb
mov
adc
mov
mov
mov
sbb
pop
imul
lret
cmpsl
mov
mov
inc
pand
and
fistpll
bound
fisttpll
ss
jae
mov
leave
imul
loope
cmpsl
jno
in
lahf
jecxz
adc
dec
inc
jl
xchg
fimull
ljmp
mov
sbb
insl
inc
lcall
lds
or
cmp
hlt
cmp
aas
out
or
or
sub
jae
push
push
popf
idiv
add
mov
out
jmp
xlat
jmp
xor
push
imull
add
mov
arpl
addps
fldenv
stc
loop
dec
data16
inc
aas
adc
mov
pop
push
stos
bound
pop
jle
js
pop
test
cmp
sub
ljmp
or
mov
dec
testb
es
imul
push
adc
or
out
popl
inc
mov
sub
testb
xchg
testb
or
sub
testb
clc
xchg
adc
sbb
and
test
stos
in
add
xchg
jg
xchg
ret
add
icebp
xor
lock
xlat
mov
cmp
sti
cmc
int3
xchg
outsb
sbb
jg
dec
pushf
setle
mov
push
sbb
push
aas
test
dec
push
push
xchg
cmp
movl
fwait
outsl
push
and
scas
lea
call
adc
ss
aad
mov
xchg
outsb
out
popf
or
mov
es
push
daa
imul
dec
jecxz
call
ds
and
xor
addr16
xor
push
test
into
mov
xchg
jecxz
clc
sbb
jmp
jp
adc
pop
ret
dec
test
xchg
icebp
xor
add
imul
sti
push
inc
aaa
sub
mov
sti
in
lods
mov
push
aad
lods
sbb
out
cwtl
outsb
fisubs
sub
mov
fsubr
inc
js
mov
lcall
cli
lods
iret
ljmp
sub
inc
dec
imul
sbb
sub
sbb
mov
jbe
xchg
inc
mov
push
enter
ror
aaa
xchg
shlb
cmpsl
testb
call
mov
daa
pop
sub
jle
or
aas
push
xchg
enter
fmull
sbb
sbb
mulb
and
or
gs
dec
mov
fists
push
or
sahf
xchg
sub
jnp
jl
dec
dec
xor
sarb
pop
out
icebp
out
xor
es
pop
and
sub
xor
hlt
add
ljmp
test
lods
dec
add
pushw
or
ss
jae
cli
and
pop
mov
xor
dec
push
call
in
jb
bound
stc
lods
xor
ret
mov
bound
fisubrs
lea
movsb
mov
adc
cmc
add
mulb
push
push
jle
int
mov
mov
leave
push
push
inc
push
fwait
mov
or
jns
jb
jb
ss
inc
push
dec
mov
cld
loop
pop
jo
addr16
out
in
mov
cmp
rcll
push
stos
inc
or
mov
dec
fistpll
xor
push
ja
jo
stc
push
enter
inc
xor
jne
pusha
insl
sub
ror
jb
aas
cmpsb
lods
cld
or
mov
dec
daa
sbb
cmp
jno
lahf
adc
jo
aaa
sbb
push
dec
inc
cs
dec
pop
sbb
mov
adc
jns
sbb
xor
gs
stos
pusha
and
xor
leave
xchg
jmp
and
push
push
mov
pop
vpand
or
mov
jg
adc
adc
pushf
popa
les
jno
and
out
test
cmp
ret
cmc
adc
sarl
push
mov
scas
mov
aaa
imul
sbb
pop
ljmp
dec
cmp
outsb
sbb
mov
sub
bound
arpl
and
out
xlat
shufps
jns
hlt
into
jnp
sub
imul
sub
push
mov
jo
adc
jmp
push
js
and
rorl
aad
popf
sub
and
and
sbb
xor
xor
push
nop
add
push
jle
push
jae
mov
idivl
les
pop
ja
les
pop
in
orl
outsb
sub
inc
aaa
icebp
fwait
stos
std
jecxz
xor
xor
in
imul
mov
push
inc
addr16
mov
jmp
mov
pop
mov
ss
sub
sbb
cmp
test
or
sbb
jg
rorl
mov
xor
aas
gs
xor
gs
sub
add
pop
mov
sti
jnp
pcmpeqw
sub
lahf
in
popf
es
outsl
ja
mov
add
mov
xor
fs
xor
jg
jmp
repz
sub
jne
or
fs
xor
test
loope
jp
nop
pop
sub
ds
out
aad
inc
xor
addb
add
aaa
mov
pop
lds
adc
pop
push
in
in
xor
bnd
insl
enter
rorl
aaa
pop
loopne
add
sbb
fs
lahf
jmp
xor
rclb
xchg
sub
cmpsb
imul
dec
popl
stc
lds
mov
clc
push
mov
rcl
xchg
loope
in
loopne
sahf
leave
push
in
xor
sbb
lods
addr16
repnz
das
sbb
negb
dec
lock
arpl
adc
nop
fildll
cltd
repz
scas
and
inc
subb
ret
lea
mov
jo
into
jnp
jle
pop
or
out
push
movsl
xchg
add
rol
adc
pop
rcrl
xor
jb
sbb
mov
jnp
or
dec
out
push
or
bound
ficompl
out
and
mov
sub
inc
cld
rorl
test
push
test
push
pop
cmp
adcl
jl
js
push
enter
inc
rcrb
rclb
aad
add
push
lret
icebp
imul
mov
or
stc
in
fcmovnbe
inc
sahf
push
unpckhps
and
push
add
xorl
or
mov
imul
lahf
xlat
lahf
out
adc
cld
popf
xor
dec
jb
pop
push
inc
mov
mov
sbb
addl
push
arpl
and
add
xchg
out
aaa
aaa
aas
pop
out
cmp
out
pop
loop
jno
lods
lock
shlb
in
out
sub
push
inc
shlb
into
mov
jb
inc
outsl
lcall
mov
pop
out
icebp
and
mov
xor
lret
inc
ss
clc
mov
or
div
dec
push
loope
popf
sbbb
jne
and
in
inc
cmp
lea
jecxz
int3
xchg
push
sbb
xor
and
pop
cmp
out
ret
int
pop
xlat
jnp
clc
mov
jge
mov
clc
pushf
lcall
fwait
aaa
mov
xor
out
adc
lods
ret
out
clc
adc
add
push
push
and
sub
inc
xchg
push
enter
dec
lds
cltd
mov
xchg
shlb
sbb
mov
cld
or
jnp
cmc
nop
or
pop
and
insb
fidivs
pop
rcr
mov
and
or
push
inc
arpl
xor
in
mov
out
adc
pushf
shll
dec
pop
cmpb
xor
xor
repz
into
xor
dec
cltd
sub
cli
xor
mov
or
leave
xchg
das
flds
loopne
inc
fcoml
je
push
xor
scas
leave
xchg
mov
aad
loope
mov
test
lahf
jb
adc
movsl
aaa
mov
push
test
aad
cs
test
mov
lds
das
dec
fidivl
cmp
mov
sub
pop
call
test
and
adc
push
xchg
outsl
pop
mov
imulb
lea
fistps
add
dec
jno
sbb
mov
push
and
mov
ja
stos
icebp
lea
das
push
fwait
mov
movb
adc
leave
call
js
test
mov
das
and
inc
bound
pop
inc
repz
insb
stos
or
pop
fldt
cmpsl
mov
add
sub
or
dec
pop
jg
lret
icebp
daa
dec
into
sub
push
adc
push
mov
adc
lahf
pushf
cmp
mov
xchg
testb
mov
xor
mov
push
mov
shl
repnz
jl
movsb
and
xchg
js
lahf
into
pusha
popa
cli
xor
push
addr16
adc
out
and
adc
dec
xchg
jb
sbb
mov
pushf
cmpsl
ja
testl
data16
push
shl
pop
cmpsl
shr
add
je
aam
mov
cmp
pushf
je
jnp
mov
xor
push
movl
out
add
incl
cwtl
ja
jecxz
idivl
push
add
subl
pop
and
add
and
jl
pop
add
lret
push
and
js
pop
cmpsb
xor
inc
aad
sub
rol
jl
dec
repnz
or
jg
pop
add
or
dec
loop
adc
push
pop
xchg
repnz
pop
mov
lret
leave
fists
arpl
xor
stc
adc
cmp
ret
xor
insb
pop
leave
call
jl
leave
sub
xchg
out
mov
xlat
adcl
lock
cmp
push
mov
add
xor
out
add
mov
ss
ja
aaa
cmp
shlb
sbb
mov
push
lahf
dec
mov
jmp
lods
in
and
add
subl
and
jnp
xorl
adc
xchg
pusha
inc
add
ss
lock
dec
adc
ss
fcomps
or
mov
inc
jp
rcll
xor
cmpsl
dec
scas
je
dec
fucomip
popf
and
jg
mov
cwtl
cmpsb
scas
sbb
push
test
add
mull
and
call
push
adc
xor
movsb
iret
xor
xchg
dec
scas
out
lods
or
sub
mov
ror
add
pop
pushf
cld
dec
leave
cltd
jnp
enter
cltd
scas
dec
add
adc
pop
inc
jnp
testl
cmpb
push
lret
add
jecxz
add
movb
loop
mov
adc
jbe
frstor
pop
dec
mov
mov
mul
push
movsb
mov
nop
pop
enter
sub
mov
sbb
cmpsl
or
cmp
and
jge
cmc
mov
test
xorb
mov
and
cmp
and
rcrl
mov
rorl
std
in
xchg
inc
je
fwait
imul
jmp
pop
and
xchg
lock
xchg
xor
dec
cwtl
addr16
cmp
cltd
in
jle
or
cmc
xchg
fcmovnu
loopne
outsb
pop
mov
sbb
shlb
sbb
lcall
xor
fsubl
and
iret
cld
pushf
pop
inc
sub
mov
cmp
pushf
gs
or
push
je
lret
es
or
add
jmp
out
mov
sbb
pop
jb
lret
fisttpl
loope
jmp
xor
insl
push
push
push
rcll
jb
dec
jb
or
dec
mov
movsl
mov
mov
call
pop
rcl
mov
pusha
mov
fs
cmpsb
push
or
mov
sahf
jae
adc
cli
xor
popa
hlt
jne
pusha
inc
adc
adc
test
jne
in
fdivrl
mov
test
inc
push
fxch
out
sub
mov
cltd
adc
mov
jae
repnz
sub
lea
add
jge
popf
test
push
movsb
xchg
scas
cmp
inc
ja
cmp
subl
sbb
lock
and
repz
and
dec
int3
mov
inc
into
lret
adc
clc
hlt
mov
or
in
fdivl
xchg
pop
fmuls
sub
jp
mov
imul
xor
mull
ds
xchg
sbb
outsl
cltd
sbb
xor
sahf
xchg
fs
adc
push
dec
mov
lret
lods
sbb
or
pop
xchg
test
mov
arpl
xchg
jo
loop
xor
jnp
push
jge
push
pop
faddl
out
xchg
xchg
imul
or
pop
pushf
sbb
cmp
add
clc
jl
xor
sub
out
jl
inc
and
xor
scas
nop
push
xor
or
in
push
and
andl
xor
push
sub
cmp
loop
popa
mov
pop
lret
shrl
xchg
jge
mov
jbe
cmp
mov
push
test
mov
std
cld
mov
hlt
std
mov
push
adc
mov
mov
xchg
sbb
sti
mov
sbb
sbb
mov
or
xor
mull
imul
imul
insb
stos
imul
sbb
loop
fsin
or
cltd
jns,pn
cmp
inc
adc
mov
or
push
and
mov
add
insl
sahf
sub
imull
test
pushl
sahf
popf
movsb
and
loopne
mov
mov
mov
add
mov
mov
sbb
dec
mov
xor
scas
cmp
sub
xlat
cmp
gs
les
es
stos
xchg
add
fadds
jmp
and
push
adcl
mov
cs
aas
sbb
ret
mov
mov
mov
mov
jecxz
stos
scas
jbe
push
xchg
leave
xchg
call
sub
xchg
xor
and
add
aam
add
adc
and
sbb
inc
daa
imul
cltd
imull
arpl
stos
push
fidivl
push
xchg
int
jl
sbb
es
out
mov
imul
mov
ficoms
sbb
xor
xchg
add
ficomps
aam
add
mov
lret
mov
cmp
outsl
add
rcrb
inc
xlat
mov
dec
rolb
ljmp
out
and
push
mov
xchg
xor
in
cmp
loop
nop
popa
cmp
cmc
sbb
pop
aas
mov
xchg
xor
idivb
nop
cwtl
pop
aam
xchg
mov
inc
add
add
or
jmp
sbb
and
lret
inc
inc
je
mov
out
rolb
jle
and
jnp
jbe
repnz
push
dec
mov
cmpsb
pop
rcll
fcomps
add
mov
xor
cmpsb
mul
jae
xor
pop
fisttpll
ja
push
sub
fbld
xchg
mov
pop
mov
pop
add
mov
push
add
xor
fdivl
inc
and
lret
imul
leave
in
mov
dec
lock
loope
and
xor
xchg
js
dec
ret
out
sbb
add
shrl
hlt
mov
pop
mov
inc
test
outsl
jo
pop
fnsave
dec
mov
popa
fcoml
jle
loopne
test
incl
outsl
jmp
roll
cmp
mov
or
loopne
popf
xchg
mov
dec
faddl
jae
popf
pop
test
cmpb
lods
xlat
fldt
sbb
dec
or
push
out
pop
push
fsubrs
xor
xor
in
imul
adc
mull
or
xchg
sub
loope
aas
jmp
push
js
pop
xor
mov
inc
jo
das
loope
out
jmp
outsb
es
fwait
rcrl
ljmp
mov
sub
or
sub
insb
dec
icebp
sbb
shrl
into
loopne
es
ljmp
jns
cltd
popf
cmp
push
sbb
inc
ficomps
test
bound
dec
or
pusha
ret
jmp
and
and
add
pop
shll
aas
xor
into
xchg
and
jmp
jmp
aad
push
cmp
sub
xchg
adc
push
gs
or
ret
inc
clc
fcoms
mov
add
pop
xchg
cwtl
or
sbb
mov
adc
inc
outsb
into
enter
fwait
jg
cmp
in
xor
fnstenv
fucom
lahf
cmp
pop
pop
and
sti
sub
mov
mov
mov
add
pop
and
dec
dec
fdivr
mov
push
fimull
enter
sbb
sub
push
dec
mov
dec
repnz
and
mov
push
jno
dec
es
mov
jle
jne
aaa
scas
pop
inc
je
mov
icebp
dec
arpl
sbb
pop
jle
je
subl
sbb
fildl
mov
lods
mov
cmpsb
inc
jecxz
xchg
sub
push
sarb
or
repnz
cmp
cs
dec
sub
popl
and
pop
or
inc
sbb
popa
pop
jge
imul
and
movsl
inc
mov
dec
aad
or
jb
xor
and
dec
pop
pop
adc
aas
xchg
xchg
popf
dec
lcall
cli
dec
push
inc
sbb
outsb
loop
and
in
sbb
push
jns
leave
push
inc
mov
test
sub
cmp
ss
outsb
add
jge
dec
sub
mov
push
jmp
mov
xchg
mov
cli
cmpsl
out
ret
jne
adc
dec
jno
sub
adc
jmp
std
adc
outsb
cmc
push
insl
flds
cwtl
add
sahf
adc
rorb
mov
sbb
pop
out
std
in
fimuls
mov
vscatterqps
ret
mov
cs
jbe
js
jp
fisubl
fldl
mov
in
cwtl
pop
loop
enter
fistps
sahf
xor
sub
ja
cltd
push
xor
inc
jl
mov
lock
mov
jle
rep
stos
mov
fistl
aad
sarb
cmp
cmp
sub
lret
mov
push
mov
test
fisubs
cmp
lret
fwait
pusha
popf
sbbl
insl
jecxz
sub
sbb
mov
mov
jne
mul
insb
addr16
xchg
lret
test
ret
hlt
loopne
loope
mov
lock
fcompl
adc
sbb
mov
fcoms
sub
shll
push
mov
pop
or
mov
testl
sbb
and
mov
mov
adcb
cmpsb
mov
aad
push
lds
sub
adc
daa
test
xchg
popa
cld
jl
or
lea
popa
pop
test
jne
xor
fisubs
and
add
mov
into
cmp
ret
mov
cld
or
jecxz
dec
mov
inc
jbe
mov
pop
sub
pop
and
out
dec
mov
mov
test
push
insl
dec
loopne
mov
lds
es
mov
jnp
dec
add
xor
mov
push
cld
adc
out
mov
sahf
jmp
and
mulb
xor
cmp
dec
inc
lds
insl
dec
xor
cwtl
fldl
shll
in
adc
call
iret
stos
fsubrl
xchg
imul
imul
les
test
sbb
adc
mov
xchg
jns
inc
aas
inc
pusha
or
jg
and
cmpsb
or
add
outsb
mov
gs
ds
xor
mov
lods
pcmpgtb
sbb
xlat
xchg
call
sbb
or
sarl
scas
out
push
popa
adc
pop
lods
xor
out
adc
shlb
insb
es
loop
stos
mov
sub
push
xor
mov
dec
cld
pop
sbb
in
loope
rol
sub
jo
cmp
mov
lods
jp
pushf
ja
fs
rorb
lds
or
mov
xchg
aam
repz
xchg
inc
cmp
push
loopne
pop
add
xlat
sub
or
jo
adc
scas
outsb
pushf
jecxz
mov
in
ljmp
fs
jl
cli
test
inc
sbb
cmp
push
pop
addr16
pop
insl
imul
cmpl
aam
add
pop
repnz
sbb
out
fstpt
shrb
inc
and
iret
stos
push
mov
ljmp
dec
lods
icebp
and
push
mov
movsb
in
hlt
in
sub
into
in
xor
push
push
sbb
fisubl
pop
inc
scas
int
in
fldenv
or
dec
shlb
and
in
std
bnd
mov
add
mov
filds
test
test
and
leave
jge
dec
test
jmp
mov
mov
pushf
or
into
add
cs
push
fidivs
pop
shlb
ficoms
mov
aas
cld
cmc
negb
jp
popa
or
xor
ljmp
sti
sbb
rcr
pop
jb
aam
cmp
and
xor
cmp
cmp
push
mov
push
jmp
aam
jne
jbe
shll
call
lret
inc
loopne
sbb
dec
cmp
pop
push
jle
in
fwait
xor
scas
cs
xchg
sub
and
xor
or
mov
cmp
leave
dec
push
aaa
fsubl
imul
xor
test
in
adc
ret
andl
sbb
clc
ja
jb
cmp
popa
gs
orb
clc
gs
sahf
movsb
repz
hlt
sub
insl
or
push
jl
add
pop
stc
loopne
popa
loopne
movsl
add
jle
es
mov
or
leave
mov
mov
sbb
mov
lret
push
out
movsb
and
mov
mov
push
out
dec
inc
adc
xor
inc
sbb
sub
test
fsincos
dec
mov
stc
add
or
int
lret
adc
clc
aad
call
mov
jl
jb
popa
in
out
flds
daa
jo
fsubrl
push
or
int3
dec
not
cmp
out
arpl
fcomip
icebp
adc
das
enter
sti
je
out
das
inc
sub
mov
push
sub
push
sbb
daa
pop
sbb
movsb
ja
pop
and
test
push
inc
adcl
inc
add
ja
lcall
pop
jnp
pop
sbb
testl
daa
dec
xchg
das
stos
stc
pop
mov
inc
loope
stos
cmpl
sbb
loope
mov
or
jae
incb
xchg
loop
xor
push
sub
ret
mov
push
inc
cmc
mov
sbbb
fiadds
or
enter
ficoms
iret
mov
div
sub
fsubp
push
jno
fadd
bnd
mov
shl
cld
scas
jecxz
inc
push
iret
xor
or
pushf
ret
xchg
jo
iret
sar
cmc
popf
ljmp
hlt
lcall
push
int3
repnz
fistl
add
fsubs
sub
js
adc
das
test
fdivp
scas
xlat
addr16
xchg
sub
popf
push
jo
and
fistpll
mov
cmp
mov
add
jp
dec
sub
loope
lods
mov
xlat
ss
lds
sub
add
into
jae
dec
and
sbb
push
out
fcom
sub
mov
xchg
loop,pt
mov
test
sbb
or
shrb
in
addl
xor
loopne
mov
jnp
xchg
inc
push
aaa
push
jge
xchg
lods
fdivr
fwait
test
stc
mov
loop
enter
cmp
je
jae
add
inc
out
sti
and
iret
ds
lock
enter
add
je
aaa
lahf
jge
ja
enter
dec
stos
out
das
sbb
ss
call
stos
cmp
push
adc
pop
xchg
and
sub
call
movsl
andl
daa
jle
test
add
sub
push
lea
shrl
pusha
inc
mov
js
or
push
fbld
xchg
rorb
cmp
or
or
fsubrp
xlat
addr16
xchg
loopne
cmp
lds
jp
push
jg
pushf
pop
pusha
xchg
sub
int
shrb
add
fidivrs
sbb
xor
push
xor
jo
lcall
push
xlat
mov
dec
adc
shll
sbb
fcompl
test
jbe
cwtl
fisubl
sahf
push
mov
mov
xchg
sti
sub
and
ds
add
insb
or
cmp
arpl
mov
pop
lahf
testb
ret
push
repz
xchg
push
cmpb
sbb
xchg
mov
fidivs
lods
imul
pop
cmp
jb
dec
sbb
dec
aaa
xchg
test
pop
fs
or
xor
sahf
add
sbb
dec
in
std
insb
cwtl
repnz
gs
scas
cwtl
mov
xor
pop
dec
dec
adc
pop
and
sahf
push
fldcw
and
dec
arpl
inc
inc
popa
mov
xchg
rclb
lcall
sub
jecxz
push
cmp
sti
daa
cmp
xor
sub
fimuls
pop
sbb
subl
mov
test
lds
mov
adc
dec
jno
mov
dec
cmpsb
lret
cmp
jno
sahf
dec
mov
clc
lds
push
mov
sub
inc
or
and
push
jns
fmulp
nop
xchg
hlt
sub
or
xor
aaa
ss
in
les
mov
xor
lret
bound
mov
in
xchg
loopne
in
cmp
ss
movsb
lods
mov
call
sbb
fmuls
jbe
dec
xor
mov
fwait
lods
or
mov
cmpsl
cltd
and
inc
push
int3
sub
mov
push
cmp
int
shl
mov
mov
pop
push
aad
adc
outsl
mov
jnp
sahf
dec
push
pop
push
lret
push
in
lret
and
mov
fmull
lret
stos
cmp
lea
cmpsl
shll
jbe
xchg
or
scas
push
jp
das
xchg
and
push
xor
stos
imul
sub
dec
enter
push
xorb
sub
fbstp
data16
pop
jl
pop
scas
lahf
lods
cmp
sahf
cwtl
nop
sub
kxorb
xor
xor
and
ja
negl
out
pop
mov
pop
adc
mov
lods
icebp
pop
fiadds
divb
test
enter
sti
int
mov
pop
push
mov
adc
call
mov
dec
jp
cmpsl
xor
std
outsb
mov
dec
and
test
xchg
jp
cwtl
pop
sub
mov
push
add
and
mov
xorb
fs
int
cmp
lods
and
mov
dec
jo
dec
or
inc
enter
and
cli
sub
xor
xchg
aam
pop
fisubrs
in
movsl
fnsave
js
adc
cli
jns
xor
lods
cmp
fdivp
ss
pop
push
mov
xchg
mov
jecxz
jbe
gs
cli
adc
jae
mov
pcmpgtd
xchg
subb
inc
bound
xchg
push
aad
pushf
mov
ss
fdivrs
es
popf
pop
add
xor
sub
sahf
xor
jmp
mov
lret
in
stos
scas
or
stos
iret
test
adc
jg
lods
pop
jnp
enter
mov
pop
aaa
xchg
or
mov
jo
test
or
cli
scas
outsl
cmp
sbb
or
popa
cmp
out
lahf
mov
sahf
in
rorl
sub
mov
rorl
negl
ret
lret
pop
outsb
pop
push
push
repz
mov
adc
pop
mov
lods
pop
inc
cmpsb
mov
cs
add
pusha
pop
pop
test
push
xchg
push
xor
push
push
mov
shlb
movsb
je
fcomi
aaa
ljmp
lods
dec
call
cmc
cli
pop
jo
inc
test
mov
xchg
push
test
das
or
jp
adc
shr
push
shrl
aad
cld
add
mov
lret
adc
ror
sti
aad
aaa
cmp
jnp
lods
pop
sub
xchg
sub
pop
fnstsw
sub
fstpt
stc
push
pop
imul
cmp
inc
daa
cmc
inc
movsl
add
jecxz
jnp
mov
sub
push
add
inc
out
ljmp
adcb
int
mov
lds
push
mov
les
adcl
and
and
sub
movb
hlt
arpl
sub
or
lds
cmpsl
xchg
lods
jecxz
bound
pop
xor
cltd
dec
repz
xchg
popa
mov
mov
into
mov
ja
lcall
mov
and
lds
or
pushf
mov
mov
jl
and
insl
fs
movsl
pusha
std
shrl
fstpl
aam
or
mov
insl
cs
lds
add
aad
xchg
pop
xchg
icebp
sar
lret
mov
sub
add
and
push
fstps
xlat
aas
xor
adc
inc
jo
jae
xchg
call
repnz
mov
mov
lret
loope
mov
dec
fwait
and
lock
sub
dec
or
fldcw
clc
adc
stos
aaa
faddl
and
mov
mov
out
and
xchg
ljmp
mov
loopne
jno
arpl
mov
sub
je
jg
add
or
xchg
out
fldcw
in
orl
cmp
dec
xchg
test
std
add
rcl
lea
jmp
sbb
push
mov
daa
clc
and
std
jle
push
push
leave
push
sbb
jb
loop
mov
test
rorb
mov
mov
cmp
mov
xchg
sbb
pop
mov
int
mov
gs
stos
sarb
scas
leave
loope
or
mov
sar
pop
mov
out
lret
push
insl
lahf
push
mov
and
sub
mov
mov
cmpsb
lods
inc
shrl
lock
adc
sub
pop
jg
into
pop
ljmp
mov
mov
push
sarl
mov
dec
and
push
dec
test
ret
xchg
and
add
add
imul
sbb
outsl
cmp
bound
nop
imul
mov
cmp
sbb
addr16
mov
subl
ss
repnz
cmpsl
and
xor
cwtl
arpl
in
push
and
cmp
inc
inc
adc
ss
add
dec
test
int
mov
sbb
dec
and
pop
out
into
fbstp
hlt
les
mov
sbb
and
stc
adc
or
jl
cmp
adc
fs
notb
les
sbb
push
incb
inc
rcrb
imul
and
sbb
outsb
add
movsb
inc
mov
into
xchg
jae
inc
jo
idivb
or
jecxz
xchg
cmpb
rol
insb
gs
push
sub
or
sbb
xchg
or
test
or
sub
push
jae
or
outsb
mov
imul
xchg
ljmp
popa
cli
es
push
pop
jno
test
shl
mov
pop
and
repnz
sahf
daa
jmp
push
xchg
pop
insb
jb
mov
mov
mov
pop
out
push
fldcw
cmpsl
std
in
xchg
sbb
jnp
xchg
xchg
xchg
inc
jg
addr16
cwtl
fwait
and
sub
imul
sbb
bound
lret
sub
sahf
sub
int
mov
push
jle
sbb
xor
setb
pop
lods
mov
fisubs
lfs
shl
dec
andl
push
shlb
orb
add
adc
rcl
xlat
dec
ja
outsl
jae
mov
mov
in
cmc
clc
lahf
and
xor
dec
inc
icebp
les
fst
adc
sub
cmpsl
cmp
push
mov
dec
push
inc
xor
out
ljmp
js
jecxz
ljmp
les
inc
lea
out
inc
adc
jno
and
sub
icebp
push
add
jp
shl
sub
inc
pop
ljmp
in
rorb
mov
cmpsl
push
push
dec
aaa
and
jb
ss
cli
pop
xchg
leave
sbb
je
adc
repz
xor
imul
inc
repnz
imul
adc
rcll
push
mov
faddl
pop
cltd
xchg
js
test
lret
mov
fs
jnp
add
mov
pop
mov
xchg
jl
arpl
sub
scas
sti
push
sub
leave
cmp
scas
out
loope
in
lret
and
mov
cmpsb
mov
pusha
push
das
jne
sti
in
push
cs
and
cmp
cmp
xor
int3
leave
addr16
mov
xchg
scas
dec
movsb
lock
cmp
jno
xor
pop
mov
cmp
sub
scas
pop
popl
into
mov
imul
push
lahf
sub
out
xchg
push
and
jae
xchg
jge
cld
jle
xor
int
jb
push
inc
lret
cld
inc
movsl
jb
jnp
ret
push
fsubrs
xchg
pop
add
xchg
mov
in
rcrl
jl
cld
add
push
xor
stc
shll
cli
inc
mov
pop
and
sub
mov
mov
clc
insl
sbb
mov
repnz
xor
push
pop
loopne
cmpsl
outsl
mov
cs
xchg
es
and
call
mov
fmuls
gs
rolb
inc
add
xchg
mov
dec
jl
mov
dec
jo
sub
mov
dec
or
push
push
add
js
sub
mov
out
inc
jl
mov
cmp
movsl
mov
repnz
pop
inc
mov
test
je
push
ror
jecxz
xchg
push
mov
xor
call
in
jl
push
mov
add
sub
test
push
repz
xor
mov
sub
sbb
jae
cmp
sbb
pop
add
jb
push
cmp
sbb
fsubrs
into
inc
xlat
arpl
rolb
push
mov
rcr
inc
mov
mov
pop
repz
dec
mov
cmpsb
divl
sub
daa
bnd
lods
mov
je
out
aad
add
test
ret
mov
jno
mov
pushf
push
bound
jle
popa
fdivrl
xchg
scas
pushf
imul
je
insb
mov
popf
clc
ret
in
jo
adc
push
pop
cmpb
mov
sbb
aam
test
sub
mov
jmp
rcr
push
xor
in
insl
add
cli
and
gs
push
mov
jle
pop
xchg
inc
push
shrb
pop
cmpsl
dec
push
jecxz
hlt
or
xor
lods
sahf
xchg
lahf
sbb
inc
imul
into
aam
jg
aas
push
or
pusha
mov
pushf
dec
test
outsb
add
push
and
icebp
enter
lds
and
sbb
mov
mov
adc
in
push
fisttpll
mov
outsl
dec
mov
or
fsubs
aad
stc
clc
aam
lahf
test
les
cmp
fidivrs
movsb
and
imul
mov
addr16
pop
cmpb
idivb
repnz
cmp
ljmp
jns
fistpll
or
repz
add
xor
cmp
aaa
and
repnz
or
imul
xchg
or
stc
sub
notl
test
repnz
insl
xchg
int3
jnp
push
loopne
jle
fistpll
xor
data16
cmp
dec
add
pop
repz
mov
add
xor
inc
loope
dec
mov
mov
dec
outsl
dec
ds
cli
lret
mov
or
es
xchg
pusha
add
pop
cmpsl
rcrb
push
test
sub
adc
out
push
hlt
pop
lcall
jl
shrb
inc
insl
dec
lock
loope
outsb
mov
adc
orb
fcoms
add
mov
xlat
scas
mov
ja
in
aaa
sub
loopne
and
push
xor
xor
popf
adc
mov
cld
data16
fnstcw
gs
mov
arpl
fwait
mov
loope
adc
cmp
xchg
dec
test
ret
xor
push
pcmpeqd
out
jbe
push
mov
jbe
iret
gs
jmp
pop
mov
or
call
add
lret
xor
cmp
inc
out
mov
repz
push
repz
out
sbb
shr
push
push
adc
ds
int3
and
jge
dec
push
mov
repnz
sbb
dec
sbb
enter
in
xchg
cmp
dec
mov
mov
andb
andl
imull
movsb
xchg
jae
add
or
rclb
pop
cmp
fs
ja
mov
pop
les
mov
scas
cmp
and
pusha
push
xchg
mov
mov
or
mov
mov
pop
jo
aad
loopne
jmp
pop
int
push
int
inc
stc
add
insb
mov
cmp
mov
mov
fstps
popl
and
inc
xor
xchg
add
adc
aad
or
pusha
shll
cmpsb
fwait
fs
xlat
xor
xchg
fcmovu
sub
push
pop
push
cmpsl
push
std
jbe
hlt
data16
mov
pop
lret
out
addr16
xchg
pop
rolb
jecxz
cmpsb
es
and
mov
pop
nop
mov
in
push
cltd
pop
mov
call
mov
pop
das
je
push
pushf
bound
dec
sbb
pop
or
add
jmp
lret
out
fsubrl
mov
out
daa
pop
mov
dec
lcall
mov
xchg
jae
cmpsb
pop
mov
out
ret
sbb
adcb
add
pop
pushf
add
add
lahf
add
imul
push
pushf
test
mov
cmp
mov
mov
sub
cmp
call
dec
fsubrs
scas
sbb
dec
mov
cmpsl
sub
popf
push
ljmp
dec
into
mov
loop
into
aam
mov
adc
xchg
add
enter
lret
inc
add
mov
ret
fwait
mov
sub
mov
int
lock
popl
xchg
mov
jb
arpl
stos
and
iret
out
lds
cmpsb
or
rcrb
and
cmp
xor
sbb
xchg
dec
push
int
call
test
and
push
xorb
fs
iret
xchg
pop
pop
jbe
cmpsl
push
jnp
lcall
and
stos
pop
pop
bound
sbb
pop
std
mov
xor
lcall
or
shr
jl
mov
xchg
imul
and
into
mulb
je
mov
cld
mov
test
notb
out
outsl
mov
add
jp
sbb
mov
sbb
js
fcmovb
scas
inc
dec
fidivrl
jae
add
jg
int3
fnstcw
fiaddl
pop
loope
js
pop
into
cmp
pusha
outsl
js
popa
and
fldcw
pop
mov
test
sub
in
push
add
mov
or
or
int
mov
jecxz
xor
std
mov
xchg
pushf
adc
sarb
pop
fst
cmp
adc
repz
adc
lock
jnp
mov
das
ja
xchg
nop
jmp
push
aas
ljmp
mov
aad
xor
imul
xchg
cltd
cmpsb
dec
sbb
add
ss
test
into
idivb
xchg
rclb
dec
jecxz
mov
ret
scas
adc
xchg
sub
fdivrp
fucomi
xor
adc
insb
dec
fdivrs
cmp
popa
push
add
xchg
adc
sub
sub
pop
ljmp
in
xchg
dec
fcmovne
imul
fs
mov
sub
mov
je
enter
ret
push
jg
enter
pop
or
sbb
mov
jmp
out
push
scas
scas
jo
jb
nop
lods
ss
sbb
xor
pop
jnp
and
insl
repnz
xor
pop
adc
jb
adc
cmp
mov
xchg
sbb
cli
jle
imul
ficoml
stos
bound
and
imul
jae
call
push
std
pop
dec
popa
sub
pusha
ret
dec
data16
mov
je
pop
inc
pop
rcll
outsb
jmp
sbb
insb
daa
pop
jns
pop
sbb
dec
in
movl
push
mov
xor
mov
cld
rcrb
insb
aaa
xchg
inc
xlat
push
add
andl
flds
pop
roll
mov
cmpsb
and
addr16
sbb
or
lods
in
mov
mov
repnz
inc
mov
iret
insb
ret
data16
inc
push
rcll
or
out
loop
pusha
or
adc
mov
repnz
adc
sub
sbbl
mov
inc
mov
test
pop
out
pop
push
aas
inc
push
int3
xor
and
ds
scas
out
popa
mov
inc
sub
pop
mov
push
inc
cli
loop
xchg
and
mov
lods
cmp
mov
push
dec
ficoms
mov
jge
mov
xor
jmp
lods
push
mov
inc
jb
cmp
lahf
mov
jbe
insb
lret
cld
das
int
in
jno
xchg
xchg
jae
ja
xchg
inc
int3
push
xor
imul
dec
xchg
mov
rcrb
loopne
lods
imul
orl
xchg
aaa
pop
ret
loope
sbb
out
and
sub
cwtl
jae
int3
in
adc
test
inc
shr
sbb
inc
mov
xchg
jg
les
mov
fisubrs
icebp
fcoms
push
pop
arpl
mov
push
jle
in
rorb
fiaddl
stos
rcrb
fdivs
mov
add
sub
cli
xchg
insb
scas
sub
or
pop
sbb
cmp
aam
jl
inc
pop
pop
xor
and
ljmp
mov
xchg
xor
lods
and
mov
imul
stc
cmpsl
fs
or
mov
cmpb
lods
pop
push
rcll
shrl
add
lret
jae
mov
imull
fwait
add
sub
dec
cmpsl
insb
pop
push
fisttps
hlt
cmpsb
insb
lcall
jbe
stos
into
imul
sub
cmc
test
xchg
test
jne
dec
cld
and
xchg
mov
ret
cmpsl
jmp
cmc
fildl
mov
jp
cli
fadds
lods
push
mov
daa
sub
js
xchg
jbe
popf
mov
popf
imul
sbb
xchg
xchg
mov
imul
es
insl
pushf
adc
push
mov
mov
stc
xlat
test
mov
pushf
pop
push
push
cs
leave
xchg
inc
mov
rclb
jo
xor
sbb
or
and
pop
adc
ja
fdivl
stos
aam
jge
in
imul
call
pop
rorl
pop
pushf
cs
dec
outsb
arpl
call
aad
or
sub
loop
pop
sub
shl
insb
ret
out
call
fcomps
jns
subl
loopne
movsl
test
and
enter
int3
popf
pop
and
test
andb
pop
adc
test
sub
mov
sub
ds
jb
add
rcll
enter
das
cmp
cltd
fistpll
pop
in
repnz
in
jne
cmp
aas
inc
stos
mov
lea
jnp
mov
imul
les
ja
pop
jae
not
lret
jmp
sbb
sub
in
in
push
sbb
popl
outsl
cltd
add
popf
loopne
xchg
lock
aad
subb
xlat
test
dec
pusha
add
js
pop
jne
and
and
mov
clc
mov
jb
fidivl
or
scas
mov
jle
cltd
es
fiaddl
sub
leave
cld
mov
xchg
or
cld
in
mov
pop
jbe
or
stc
hlt
out
jge
fs
and
scas
mov
mov
xchg
add
subb
jbe
lahf
nop
ret
cli
sub
sub
lds
push
clc
mull
aas
push
lods
icebp
xor
aad
mov
push
jbe
test
dec
adc
inc
xor
jb
push
mov
js
pop
mov
mov
push
xchg
sbb
pop
sub
ds
insb
sbb
popa
stos
xor
inc
sub
xor
out
pushf
mov
or
pop
fwait
xchg
sti
dec
push
jl
adc
insl
mov
das
test
or
pop
jecxz
lea
cmpsl
int3
pop
cmpsb
jb
push
mov
adc
dec
push
aas
iret
fcomp
sub
test
hlt
cmp
shll
in
inc
rcl
jns
push
jle
insl
stos
xor
push
push
fcoms
dec
push
jl
dec
pusha
jae
ja
je
push
icebp
or
mov
push
cmpsb
dec
imul
iret
enter
pop
mov
mov
lret
sarb
outsb
cwtl
push
fisttps
insl
popf
jbe
add
incl
iret
aad
iret
int3
jno
orb
mov
leave
in
xor
add
xchg
or
test
cmp
iret
push
mov
scas
aas
sbb
cmpsl
pop
test
out
mov
dec
loopne
jns,pt
sub
add
mov
in
sarl
add
outsb
cmp
mov
jmp
push
popf
fldl
sub
sub
xchg
lahf
popa
lods
loop
inc
aaa
mov
sarl
inc
addl
xchg
mov
lahf
daa
fdivrs
test
sub
mov
adc
mov
jae
mov
popl
and
sbb
movsb
enter
jp
mov
push
cli
cmpsb
mov
inc
call
test
push
and
ljmp
lods
jb
xchg
push
and
call
jo
andb
adc
xor
rolb
or
pop
scas
xlat
and
mov
lea
or
je
insb
adc
xchg
insb
les
sbb
jae
fcmovnb
sub
fcmove
rcrb
adc
ffree
dec
lret
mov
mov
stos
pushf
dec
popf
or
int
lcall
js
xchg
repnz
repz
jns
and
push
push
mov
mov
flds
cmpb
cmp
mov
push
add
inc
adc
lret
cmp
insb
scas
pop
flds
fisubrl
lods
sbb
out
es
orl
inc
xorb
dec
cmp
into
imul
js
or
mov
xchg
add
lock
jns
cli
fnstcw
jns
dec
outsb
inc
jecxz
fldl2e
cmpsl
push
jge
xor
fcmovnbe
push
in
push
pop
mov
fsubrp
gs
inc
cmp
call
outsl
jle
in
orl
xor
xor
adc
jmp
pop
jecxz
ljmp
addb
mov
jecxz
hlt
out
cmpsl
divb
sarb
jo
dec
adcb
fildll
mov
xor
out
mov
loop
out
js
mov
out
mov
and
gs
imul
fnstcw
cmpsb
je
mov
jns
std
cmp
mov
cmc
and
lds
lret
xor
pop
jl
pop
mov
cli
mov
cmp
push
pop
xchg
xor
xchg
sbb
xlat
or
idiv
dec
or
outsl
push
adc
inc
push
xor
test
pop
in
inc
call
leave
rorb
xchg
mov
movsb
jo
xor
popa
add
loopne
loope
pop
push
dec
cmpsl
out
or
sbb
scas
je
inc
xor
fistl
add
push
xchg
movsb
inc
ljmp
sub
mov
rolb
fnstcw
fnstcw
sbb
adc
push
push
call
loopne
out
dec
inc
data16
push
xor
sti
mov
jo
xchg
xchg
add
jmp
xor
inc
cmp
lods
sub
lret
lods
pop
lret
jg
cli
and
dec
xor
addr16
sub
shl
or
out
fdivrs
mov
cmp
mov
imul
scas
cwtl
rolb
fimuls
adc
push
out
aaa
subl
xor
ja
lcall
sbb
jo
rcr
jo
adc
in
test
cmpsl
negb
aaa
test
adc
out
repz
cli
aaa
xlat
in
cld
mov
lret
sbb
movsb
mov
inc
pop
sbb
cmpsb
sbb
jp
jp
loopne
sub
and
shrl
rcrl
adc
ret
in
inc
sbb
xchg
ror
adc
or
push
mov
push
divl
push
out
hlt
inc
pusha
mov
inc
sbb
ss
fisubrl
mov
arpl
xlat
lcall
inc
xchg
cmp
sub
ret
data16
inc
inc
inc
gs
dec
negl
mov
les
loopne
jbe
inc
push
jp
in
rcrl
incb
sbb
fdivrl
mov
sbb
sbb
int
clc
data16
push
or
mov
leave
and
mov
addr16
data16
xchg
mov
fildll
inc
inc
in
pop
sbb
fsub
mov
stos
loop
int3
mov
hlt
push
pop
into
inc
xlat
inc
sbb
pop
mov
dec
pop
test
xchg
and
je
mov
inc
cmpsl
mov
sub
lahf
mov
jo
push
sub
popf
lods
xor
push
mull
push
lods
shll
and
jecxz
sub
bound
push
inc
imul
cmp
cmp
es
pop
cmp
nop
push
stc
xchg
inc
pop
lods
movsl
dec
add
xor
adc
dec
outsl
ja
adc
push
scas
daa
daa
mov
fisubrl
cmp
cmovge
loope
inc
outsl
xor
and
inc
mov
push
xchg
shl
fistpl
or
jns
or
idivb
test
push
mov
loopne
mov
pop
mov
lock
or
cld
jne
mov
sub
inc
xchg
inc
loope
add
rclb
xchg
and
scas
pop
inc
push
push
adc
pop
testl
test
leave
sti
dec
and
sub
out
aaa
add
jbe
add
mov
pop
xor
ret
nop
test
mov
adcl
insl
and
clc
fcoml
or
xchg
mov
push
lret
push
mov
push
inc
adc
je
aas
mov
pop
dec
adc
aam
sbb
xor
add
adc
cld
clc
xchg
sbbl
in
xchg
idivl
test
shrl
stos
sub
subb
sbb
adc
fs
sti
mov
jg
iret
jae
aad
pop
and
mov
lret
loope
fstps
fmul
subl
xlat
jg
cs
enter
clc
ss
dec
mov
dec
jne,pt
mov
mov
movsb
adc
inc
rcrl
sub
aam
iret
or
mov
jmp
sub
data16
xchg
or
xchg
iret
test
push
mov
dec
sub
test
popf
xchg
dec
cli
pushf
inc
pushf
mov
sbb
xor
sbb
int
popa
jno
lahf
stos
jbe
mov
int3
pop
push
cli
mov
sbb
lea
mov
ret
xchg
sti
pop
nop
dec
mov
pop
and
int
pop
jae
outsb
adc
repnz
mov
cmpsb
jnp
fwait
out
pop
pop
jp
add
or
inc
jp
jno
fisubs
sbb
dec
sti
and
fbstp
int3
mov
mov
fiaddl
ljmp
mov
mov
sbb
sbb
push
pop
scas
sbb
nop
xchg
repnz
mov
pop
jo
in
icebp
push
into
ds
icebp
mov
push
pop
or
pop
cmp
sti
pop
stos
jg
pop
mov
xor
xor
jnp
and
leave
sarl
mov
or
shrb
jl
push
xchg
cmp
imul
bound
aas
ds
xlat
xor
mov
repz
int
mov
call
repz
outsl
push
jge
push
hlt
movsb
out
jl
inc
mov
cld
and
inc
fsubrp
je
pop
pushf
mov
push
jmp
mov
aas
jl
icebp
add
incb
dec
xor
mov
out
cli
cli
sub
dec
push
dec
or
jl
jecxz
inc
mov
aad
cmp
dec
std
ror
negb
xchg
test
jo
std
mov
inc
adc
into
inc
fwait
call
sbb
jne
push
divl
test
and
jo,pt
enter
sub
not
test
mov
fcmovne
loop
gs
add
sbb
rorb
scas
adc
shrb
das
pushf
dec
test
fwait
lret
xor
mov
mov
cwtl
ljmp
dec
ljmp
stos
loopne
cmp
fdivs
mov
div
push
addr16
pop
fcmovnu
stos
push
ret
lahf
orb
sbb
lds
insb
and
pop
and
dec
sbb
outsb
cmc
clc
in
adc
repnz
xor
cmp
or
cmpsl
sarb
pop
addr16
pop
jg
dec
sbb
mov
jle
cmp
ja
std
stc
inc
cmp
cltd
dec
jmp
mov
mov
std
pop
xor
negb
jle
es
cmp
sub
xchg
push
loope
test
xor
sbb
dec
ret
roll
jl
cmpsb
aad
fwait
jmp
sub
push
frstor
mov
cmpsl
xor
imul
xor
or
and
mov
xchg
ja
scas
jecxz
cmp
cmp
aaa
xchg
test
push
into
out
pop
lahf
ret
jno
imul
lcall
cmp
mov
fsubs
fistpl
fs
xchg
sbbl
jnp
mov
divl
cltd
pusha
daa
in
sahf
mov
sbb
add
ret
sub
in
lods
fs
test
dec
stos
cld
mov
adc
inc
fsincos
cld
repnz
mov
push
nop
adc
insb
jae
cltd
fidivs
dec
xor
mov
push
adc
jbe
into
icebp
into
sub
ja
insl
push
addl
cld
repz
lret
mov
lods
nop
xor
cmpsb
inc
ficompl
inc
or
repz
mov
sbbb
pop
or
cs
inc
jbe
push
mov
push
movl
pop
sub
sbb
cmp
movl
imul
jne
and
adc
jae
hlt
fisttpll
and
movsl
cs
dec
push
bound
sub
push
fnstsw
out
stos
sbb
mov
in
fcoms
push
aas
dec
xor
and
lahf
xchg
fcoms
int3
adc
sub
push
cwtl
aaa
push
mov
adc
shlb
sbb
xchg
mov
mov
lock
ds
push
inc
fs
xor
rclb
jl
mov
lcall
push
imul
repz
neg
or
scas
loopne
cmp
call
jne
sahf
insl
mov
arpl
xor
out
mov
mov
mov
insl
mov
ja
ljmp
hlt
btl
pop
mov
and
add
add
gs
adc
pop
push
out
add
fucom
mov
ss
aad
or
or
decl
cwtl
stos
lahf
fiaddl
cli
nop
dec
cmpsb
mov
loopne
enter
outsb
mov
lds
dec
jp
imul
popf
adc
int
cmp
cmp
outsb
adc
dec
push
push
adc
and
shrl
aaa
mov
test
call
inc
mov
or
out
lea
mov
and
add
mov
lcall
mov
dec
nop
cmp
push
inc
mov
cltd
jecxz
aad
cs
cmp
inc
mov
mov
and
add
inc
mov
fs
and
shrb
push
leave
xor
sbb
push
or
sbb
or
xchg
mov
int3
sub
mov
or
ss
scas
sbb
leave
movsb
pop
mov
xchg
xchg
cmc
lds
ljmp
cli
orl
add
fs
int
mov
sahf
or
bound
inc
cmp
paddq
pop
fwait
pop
inc
mov
xor
mov
hlt
ss
mov
pop
jb
and
adc
jns
aas
pop
jp
enter
scas
mov
xchg
xchg
loope
negl
mov
jle
and
xorl
inc
pop
and
adc
xor
sbbl
cs
lea
lahf
sbb
xor
xlat
mov
orl
push
ds
jne
stos
stos
sub
cmp
jmp
dec
xchg
fldz
add
pop
mov
add
pop
mov
call
ret
sub
out
clc
int3
rol
dec
int
sbb
pop
aam
div
cmp
pop
rol
jge
pushf
pop
mov
fwait
jne
icebp
stos
repz
addl
scas
xchg
es
outsl
or
adc
daa
clc
jecxz
adc
in
fnstenv
out
mov
in
outsl
cmp
sahf
mov
aas
jo
ljmp
lcall
into
ja
mov
lods
mov
push
lods
xchg
frstor
les
je
outsb
adc
mov
in
mov
inc
push
push
or
push
ret
out
cli
shr
cmpsb
lcall
add
cmp
inc
mov
sub
mov
mov
rolb
fildl
mov
popf
or
imul
xchg
pop
movsb
sbb
mov
cmpsl
lret
sub
pop
bound
outsb
movsl
sbb
cmc
push
icebp
repnz
and
mov
into
jae
inc
andl
imul
cmc
sbb
aas
int
pop
mov
xchg
cltd
test
clc
jbe
dec
aaa
dec
cwtl
repnz
fldcw
js
sbb
mov
dec
jecxz
mov
pop
jle
cmpsl
adc
cmp
or
inc
lock
pop
xchg
jp
mov
push
jns
dec
rcl
cmpsl
add
mov
mov
int
push
std
int
fiadds
popl
jmp
push
leave
je
pop
int3
pop
sbb
addr16
mov
push
lds
shll
cmc
mov
addr16
shrb
and
stos
mov
das
cmpsb
mov
push
inc
push
icebp
jo
nop
aam
std
test
outsl
inc
mov
jge
xor
std
jo
out
repnz
sbb
fisttpll
or
outsb
scas
std
icebp
xorl
jmp
push
rcrl
dec
addb
sbb
cmp
jno
fistpll
mov
add
aam
movsb
push
jno
and
fsubrl
sbb
loop
jae
aaa
dec
lahf
cmc
ss
add
or
add
jmp
hlt
in
sub
imul
adc
in
xchg
or
aam
dec
mov
dec
adc
cmp
repz
push
orb
xchg
mov
pop
mov
pusha
or
outsl
pop
pop
xor
clc
std
cmp
dec
ds
test
outsl
and
adc
mov
pop
fsubp
subl
jno
jl
xchg
push
out
repz
or
loopne
jne
add
out
aad
adc
push
or
cs
mov
mov
add
cli
push
mov
es
fs
cmpsl
push
xor
mov
cmp
xlat
xchg
sti
xor
adc
add
cmp
test
imul
xor
cmp
jl
xchg
dec
sbb
int3
mov
mov
pop
mov
lds
imul
gs
push
cmp
sarl
mov
push
cmp
loope
xor
push
sbb
call
xor
mov
std
lcall
and
inc
sub
insb
leave
mov
push
enter
negl
mov
js
cmp
add
mov
sbb
loopne
dec
dec
pop
add
mov
shll
dec
icebp
lods
sti
jb
call
adc
add
pop
inc
sbb
fucom
test
mov
sub
aad
mov
push
inc
sub
push
lea
test
pop
leave
in
push
adc
cmp
imul
testl
es
add
in
inc
sbb
popf
pop
out
mov
mull
push
push
mov
push
lock
fisubrl
adc
in
or
push
gs
hlt
add
fbld
je
jae
xlat
mov
inc
js
out
push
xchg
jge
mov
sbb
jmp
jle
test
dec
dec
and
adc
inc
aaa
js
jbe
pop
in
xchg
into
nop
fnstsw
adc
mov
jl
lcall
pop
xor
lret
por
daa
xchg
push
pop
mov
ss
jmp
add
dec
ljmp
lds
aaa
xchg
xor
jne
sub
pop
mov
xchg
sarb
lds
aaa
mov
xchg
scas
mov
mov
push
frstor
dec
out
pop
fidivrs
add
sbb
and
xchg
lds
aaa
xor
sti
sub
rcrb
outsb
lcall
sbb
xchg
inc
mov
add
push
aad
jecxz
fdivl
inc
call
jbe
xchg
jo
dec
jmp
and
inc
out
push
and
lods
incl
aaa
push
pop
inc
add
mov
mov
or
sar
push
xchg
scas
fsubr
jae
leave
inc
add
xchg
pop
cmp
ficomps
bswap
mov
dec
fnstsw
inc
sbb
push
xor
cmc
addb
dec
cli
stos
mov
sbb
inc
mov
sub
clc
loop
ret
adc
lds
fistpl
inc
mov
repnz
jg
mov
dec
fdivs
nop
jmp
adcb
or
lods
sub
dec
pop
jmp
inc
sub
cmp
scas
and
out
test
sub
out
cmp
adc
lods
and
ss
add
mov
pushf
sbb
sar
pop
out
mov
call
adc
dec
aad
fidivrs
ficoml
aad
dec
push
sbb
mov
loop
js
push
push
hlt
push
adc
push
bound
mov
sub
dec
push
cld
xchg
int3
push
mov
xchg
pop
leave
enter
cmpsl
aas
mov
xchg
outsl
lcall
jne
adc
mov
xor
outsl
je
mov
lret
dec
add
cli
and
ds
inc
pop
mov
mov
rcl
je
inc
xchg
adc
dec
sub
pop
pop
stos
outsl
out
cmp
cltd
dec
jle
imul
std
mov
inc
mov
ds
test
pushf
adc
fisubrl
cmpsl
stos
and
xor
xchg
pop
fidivrl
jmp
mov
xor
xor
sub
ret
incl
in
rol
insb
aaa
xor
mov
jno
cmp
in
scas
fs
mov
jb
dec
out
jns
div
in
fisubrs
outsb
dec
out
aaa
and
jmp
inc
add
ja
out
outsb
into
dec
xor
pushw
mov
shl
test
subl
scas
popa
inc
icebp
sub
lods
cmp
mov
xchg
xor
inc
adc
mov
les
cmp
inc
hlt
cmp
lds
loope
mov
sti
cmp
fs
inc
nop
adc
out
xor
test
mov
scas
or
and
mov
imul
stos
cmpsb
xchg
lea
cmpsb
cmpsb
stos
or
leave
insl
pop
push
stc
fstps
mov
dec
mov
bound
imul
adc
scas
xor
dec
out
and
mov
push
lds
xor
enter
out
dec
inc
ss
out
or
daa
std
and
stos
fidivrs
rcrl
pop
dec
shlb
mov
lods
sbb
pop
in
sub
adc
in
rcl
and
jl
xchg
pop
adc
cmp
push
xchg
mov
cmpb
add
jo
sbb
dec
leave
cli
fildl
cltd
or
mov
pop
adc
add
jl
cli
jl
or
test
fisubl
fcomp
xchg
mov
inc
es
or
jnp
out
aas
cmpsl
into
mov
mov
gs
shll
sub
mov
or
fs
sub
fbstp
ror
xchg
mov
shrb
dec
xchg
cltd
pop
inc
xchg
pop
inc
mov
lods
mov
mov
loope
icebp
and
cs
xchg
mov
mov
inc
sbb
pop
lods
sbb
push
out
sbb
rcr
jge
mov
cmp
mov
add
push
nop
mov
push
mov
in
in
or
dec
popa
push
cltd
adc
fld
xor
fildll
push
test
ss
out
dec
cmpsb
enter
and
into
in
jge
iret
adcb
lcall
push
jle
or
xchg
push
ffreep
xchg
mov
sub
pop
push
jo
adc
cmp
sahf
and
das
sbb
adc
pop
cmpsb
cmp
xchg
xchg
outsl
xchg
push
fwait
push
push
out
sbb
aam
repnz
mov
cmpsb
add
xor
dec
or
ret
data16
aad
inc
mov
mov
xor
mov
push
jmp
ret
jmp
loopne
xor
jl
divl
stos
adc
add
jno
pop
push
in
fnstenv
int
inc
int3
mov
cmc
push
es
fisubrl
xor
fmuls
inc
pop
inc
pop
lcall
add
dec
addl
sahf
cmpsb
adc
jge
xchg
imul
mov
lea
dec
mov
pop
cmp
test
es
popl
fnsave
mov
inc
inc
mov
decl
bound
fdiv
out
xchg
mov
xchg
dec
cwtl
inc
push
jmp
or
outsl
mov
movsb
mov
xchg
xchg
mov
repnz
rcrl
push
mov
stc
das
ss
clc
mov
pop
repnz
xchg
pushf
jecxz
and
gs
out
fsubrl
cmp
lods
and
xchg
jbe
cmpsb
cld
in
inc
imul
loop
mov
mov
jp
fisubl
int3
outsl
jl
outsb
movsb
mov
inc
stos
pop
cmc
ret
in
inc
pop
cwtl
xchg
lret
and
dec
jns
mov
or
in
mov
hlt
lret
daa
pop
mov
rorl
xchg
cmp
test
enter
sub
jecxz
push
adc
rcr
mov
cmp
pop
and
mov
aam
mov
roll
int3
aam
push
sbb
push
mov
sub
aad
or
sbb
sahf
pusha
pop
dec
adc
pusha
push
pop
push
fistps
les
pop
and
pop
jo
daa
jmp
and
hlt
aaa
into
mov
clc
lcall
shr
mov
in
ret
mov
sti
jg
neg
sub
pusha
xor
inc
cmpsb
mov
xor
rolb
mov
shrl
mov
jo
and
clc
out
ret
in
cmpsb
outsl
mov
sub
std
rcpps
in
or
add
xor
cmc
jo
loopne
lea
pop
jno
dec
dec
push
pop
inc
jnp
imul
mov
pop
or
loope
or
add
cmpsb
dec
mov
rcr
out
pop
mov
shll
or
mov
jl
scas
push
xchg
dec
bnd
shl
outsb
jns
jp
jno
or
xchg
popf
paddusw
mov
or
sbb
pop
dec
fcompl
in
cmc
imul
ret
in
pop
lods
cwtl
jl
stos
imul
sub
xchg
fdivrs
jne
xchg
xor
mov
movl
nop
adc
xchg
cmp
test
pusha
sub
pop
adc
int3
cmpps
int
or
jl
jae
adc
xchg
cmp
fucomp
cld
fcomp
fs
insl
fidivs
push
lea
fidivrl
in
shl
out
sub
pop
fmulp
bound
sub
cs
mov
mov
sub
push
jnp
insl
jmp
es
sbb
xor
mov
mov
cld
cmpxchg
idivb
jae
dec
sbb
cld
cmpsb
xor
jbe
lret
cs
in
mov
mov
mov
dec
and
pop
sahf
or
ret
enter
scas
call
repnz
cmp
pop
push
mov
decl
mov
movsb
repz
je
xchg
dec
or
aad
dec
cwtl
scas
xchg
lods
dec
inc
aad
xor
push
out
dec
imul
mov
in
arpl
dec
xchg
pop
push
add
cmp
hlt
mov
cld
lahf
mov
inc
mov
mov
imul
sahf
xor
fs
test
jne
sbb
pop
add
maxps
jbe
clc
xchg
xchg
je
xchg
sbb
mov
fsub
pop
je
push
mov
sahf
loopne
mov
push
inc
dec
scas
mov
adc
mov
outsb
shl
sbb
sub
xor
sbb
and
cli
jnp
or
enter
dec
mov
into
test
sbb
dec
das
sub
imull
outsb
imul
icebp
dec
out
push
call
or
adc
movsl
jne
pop
inc
cltd
ss
push
or
cwtl
test
hlt
enter
ja
lret
hlt
je
mov
out
data16
daa
push
pusha
dec
int3
ret
xor
mov
shll
iret
jo
test
lcall
int3
dec
dec
xor
fwait
iret
mov
pop
push
jbe
mov
mov
and
jmp
adc
dec
les
lret
mov
sti
adc
mov
mov
xor
jmp
outsl
je
dec
sub
outsb
ret
das
xchg
popa
sti
push
add
mov
stc
mov
push
cld
repz
mov
or
out
aaa
inc
push
push
adc
push
mov
mov
and
push
pop
adc
sbb
aas
xchg
push
std
pop
mov
lret
jl
jo
aam
mov
int
scas
inc
pop
jp
aaa
repz
pop
lret
pop
test
mov
and
mov
sbb
fwait
lahf
inc
push
adc
and
pop
fisubrl
scas
int
daa
mov
mov
sub
dec
dec
push
mov
push
lret
pop
fs
mov
jmp
lods
nop
bound
inc
loopne
sahf
and
shlb
test
test
xchg
dec
mov
add
in
orl
dec
pop
lea
test
nop
adc
stc
xchg
scas
adc
pop
push
lods
or
push
push
lcall
movsb
sub
sbb
in
lods
popa
xor
fs
loope
jmp
push
jno
mov
xchg
into
ja
sti
js
sub
xchg
lahf
jb
xchg
inc
push
in
xor
add
cld
das
shll
movsb
jl
cmp
push
adc
negl
xchg
pop
cmp
fs
lea
insb
roll
xchg
xor
out
jg
push
cmp
stc
adc
ljmp
imul
lahf
jl
fs
sbb
imul
divb
and
scas
bound
mov
jnp
jb
adc
jne
mov
pushf
enter
dec
jno
lods
push
xchg
loope
in
loop
fiadds
dec
mov
or
stos
add
cld
mov
and
lods
push
sub
xorb
jns
sub
ss
cli
jle
jecxz
repnz
xlat
out
sbb
adc
adc
out
loop
ljmp
clc
mov
dec
mov
stos
xor
mov
and
sub
lods
mov
jmp
scas
and
out
daa
pop
xchg
sbb
fisubrs
leave
add
mov
xchg
pop
mov
dec
push
mov
adc
out
mov
lret
outsb
inc
nop
cmp
shlb
mov
cmp
pop
push
cmp
xchg
dec
adc
sub
in
es
mov
cmp
jge
pop
mov
outsl
dec
ficomps
dec
mov
scas
inc
xchg
jno
pop
dec
push
lea
sub
pop
lret
push
xchg
inc
test
dec
cmp
jnp
lret
aas
xor
dec
loopne
out
and
loop
mov
jmp
jge
sbb
hlt
cmp
arpl
cli
push
add
xchg
xchg
mov
shlb
es
pop
pop
out
sbb
jp
sar
shll
sbb
pop
mov
mov
cli
pop
ljmp
xchg
lcall
dec
pop
pop
and
push
xor
aaa
jb,pt
inc
add
fldt
cld
xor
outsb
inc
add
and
jge
xor
mov
xor
les
repz
cmp
mov
add
add
add
xor
dec
inc
call
or
jne
iret
daa
movb
dec
std
jnp
imul
les
xor
mov
mov
in
push
sub
xchg
xor
inc
fcmovb
pop
daa
cs
dec
lcall
es
inc
inc
mov
or
push
push
add
push
and
dec
jmp
repnz
loope
loope
loope
inc
adc
dec
sub
and
nop
pushf
pop
leave
mov
pushf
add
loop
imul
push
xor
int3
jne
out
cmpsl
pop
cld
addr16
jno
out
testl
push
mov
inc
push
adcl
xchg
xchg
fwait
inc
ljmp
shll
jb
adc
cmp
fidivs
mov
or
xor
outsl
lods
mov
lea
enter
mov
xchg
loop
add
test
call
aam
cmp
cltd
sbb
insb
stos
or
out
add
mov
lea
mov
xchg
out
test
dec
add
sub
fdivs
mov
subl
das
sub
mov
sub
mov
pusha
mov
in
cld
mov
or
sub
xchg
cltd
jae
aam
cli
dec
lods
dec
and
mov
pop
mov
scas
mov
scas
sbb
arpl
loopne
mov
cmp
in
push
jecxz
gs
jne
fmulp
imul
sbb
jge
mov
lds
mov
dec
out
sub
rcll
fists
lcall
adc
stc
mov
jg
adc
xchg
int
or
inc
sub
pop
addb
out
cmp
lods
mov
cmp
je
fcoml
dec
addr16
fwait
lock
es
repz
test
ja
enter
sbb
or
jecxz
xchg
and
insl
lret
mov
push
sbb
pop
aas
movsb
jb
dec
and
xor
mov
push
movsl
sub
orl
cmp
ss
or
or
sbb
icebp
mov
jmp
repnz
je
pop
fsubl
pop
mov
push
lods
sub
lds
pushf
mov
pop
pop
jne
inc
jle
imul
jae
notl
xchg
cmp
add
xor
sbb
pop
in
shrl
sub
dec
push
out
repz
or
jb
hlt
cmp
jmp
shlb
lods
fadds
in
push
jns
mov
and
push
test
sti
jnp
pop
int
enter
xchg
sbb
or
sub
cmp
negb
stc
stc
xchg
out
js
mov
xchg
scas
lods
jmp
jae
sub
popf
rolb
or
add
sub
dec
jl
lret
dec
push
jge
add
shlb
cs
xor
outsl
inc
dec
fisubrs
gs
sbb
push
push
insl
stos
jb
sbbb
rcrl
xchg
mov
in
cmc
mov
sbb
add
jle
js
push
cmp
mov
les
sbb
dec
dec
test
push
gs
jle,pn
dec
add
aam
and
setae
negl
pusha
push
call
insb
mov
xchg
mov
imul
in
andb
cs
addb
mov
pushf
mov
imul
dec
dec
mov
stos
dec
jmp
adc
hlt
loop
sub
sub
pop
or
pop
aaa
repnz
push
dec
shlb
pusha
jmp
ror
movsb
pushl
cltd
test
dec
ja
mov
sub
das
outsl
ja
xchg
mov
inc
imul
dec
addb
into
pop
jo
into
cltd
std
fwait
cmc
test
fchs
xor
xor
mov
aaa
pop
adc
dec
nop
cli
add
mov
in
scas
mov
sub
int
mov
lock
push
mov
xor
pop
in
aam
pop
jecxz
std
jo
cmp
xchg
fisttps
fldcw
sbb
loope
fistl
xchg
push
sbb
aad
jle
xor
push
sahf
pusha
out
push
or
popa
and
mov
sti
push
xor
inc
int
push
pushf
je
cmc
push
or
std
mov
jg,pn
or
mov
clc
push
dec
jb
sti
imul
imull
insl
or
jp
inc
fcomi
pop
xor
int3
push
push
adc
aad
ret
fwait
aaa
push
iret
push
mov
es
lahf
and
mov
jae
nop
rcll
push
ljmp
fninit
mov
cmp
sub
mov
jne
dec
inc
fs
jae
xchg
dec
iret
pcmpeqd
lods
data16
mov
adc
inc
inc
push
hlt
cs
mov
test
leave
in
lock
add
or
inc
dec
pop
adc
mov
pop
push
decl
cmp
adc
cld
dec
pop
or
xchg
push
fs
ja
in
xor
and
sub
push
cwtl
insb
mov
in
out
sbb
dec
xchg
rorl
push
push
sub
sahf
stos
ss
incl
push
outsb
lock
push
js
xchg
cmpsl
push
sub
movsl
or
add
test
push
mov
add
scas
aas
mov
out
sbb
cli
dec
and
xor
push
int3
fdiv
call
add
jl
dec
shrl
pop
mov
roll
push
stc
and
pop
ret
rorb
push
mov
push
adc
push
xor
xorb
xor
test
sbb
int
pusha
idiv
jnp
and
cld
imul
lea
mov
orl
and
mov
cli
mov
cwtl
add
subl
jl
inc
rcrl
mov
mov
pop
arpl
arpl
int
mov
scas
mov
ja
sub
pop
test
fldcw
es
sub
outsl
jbe
mov
jecxz
and
movsl
xrelease
popa
lret
jo
adcb
dec
jl
repz
fldenv
xchg
lret
cli
stos
push
dec
cmpsl
fistps
in
jp
out
fmuls
dec
pop
cmpsl
dec
inc
xor
or
movsb
and
hlt
sbb
fbstp
int
lods
and
dec
clc
sub
jge
lahf
sub
call
sahf
xchg
and
pop
mov
mov
add
in
sbb
in
sahf
fistpl
xor
sub
addr16
mov
nop
lret
stc
shlb
ljmp
jle
or
or
sbb
gs
cmpb
sbb
test
mov
icebp
mov
pop
mov
out
andb
rcrl
out
ror
repz
sub
inc
clc
xchg
scas
jge
inc
outsl
lcall
stos
adc
mov
lock
gs
gs
add
addr16
into
mov
idivb
add
and
int3
lahf
sub
cmpsb
cmp
loopne
xchg
push
fwait
jnp
dec
pop
pop
loope
orb
jle,pt
scas
loop
pusha
jnp
cmp
fdiv
popf
add
pop
fsubp
jo
scas
mov
add
arpl
jg
stc
sbb
or
pop
out
nop
mov
pop
mov
pop
mov
fsubp
xor
loopne
inc
mov
ret
fstps
std
pop
jnp
cmp
push
push
or
mov
out
ss
and
mov
jp
xchg
fcompl
pop
add
lcall
clc
xor
sub
sub
jns
cmp
sbb
inc
sbb
push
or
add
leave
inc
negb
test
std
cmp
pop
movsb
int
jae
popf
fdivrp
jg
fcmovu
mov
mov
push
sarb
call
inc
sbb
sub
outsb
mov
jne
out
sub
les
imul
sub
jmp
out
je
stc
popa
mulb
mov
cmp
push
orl
hlt
sti
out
push
inc
cmpsb
push
sub
das
cmp
push
popa
ss
mov
ja
mov
inc
popa
pop
test
clc
jl
cltd
push
imul
mov
sub
inc
lods
xor
xor
out
call
xor
fildll
jp
es
ljmp
pop
xchg
cltd
lahf
xchg
jle
xor
push
mov
aaa
mov
push
hlt
xchg
shlb
lcall
jns
shlb
shr
inc
jge
fnstcw
loop
notb
add
pop
push
cli
test
sahf
push
fisttpll
movsl
sub
jbe
shl
cs
inc
cmc
sub
mov
out
jge
adc
jnp
mov
out
movsl
mov
pushf
and
mov
add
popa
loopne
xor
scas
mov
push
xchg
aaa
mov
cwtl
inc
jg
sbb
fisttps
pushf
sub
fisubl
div
loopne
cmp
mov
and
or
adc
stos
jmp
mov
aad
out
loope
jns
and
xor
pop
in
push
je
jae
je
push
rorl
jp
push
inc
inc
lret
rcrb
xor
cmc
rclb
mov
fisttpll
shll
mov
in
es
in
jnp
pop
cmpsb
push
inc
mov
cmpl
and
out
loopne
insl
mov
getsec
testb
cmpsl
mov
aas
inc
inc
inc
mov
mov
ret
and
sti
call
loop
lock
hlt
and
inc
pop
xor
inc
sbb
jl
flds
and
fisttps
daa
movsl
jmp
adc
pop
sub
fbstp
lea
mov
addb
mov
cmpsb
mov
mov
mov
and
cmp
in
call
adc
cmp
mov
mov
cwtl
add
je
dec
fiadds
sbb
mov
add
cmpsb
jo
sbb
adc
inc
xchg
ljmp
and
sbb
mov
jb
cltd
cmp
xor
iret
sub
pushf
sbbl
jnp
mov
gs
cld
sahf
fsin
mov
inc
inc
dec
daa
cmp
shl
jb
xor
lods
or
inc
push
loop
sbb
pop
or
sub
mov
sub
mov
dec
test
es
push
cmpsl
mov
mov
stos
sbb
xchg
mov
fildll
outsl
add
xchg
dec
push
arpl
push
hlt
call
mov
sti
lds
xchg
and
call
pop
imul
gs
mov
rclb
sbb
inc
test
inc
mov
int3
mov
fisubrs
cli
daa
mov
cmp
cmpsb
push
movsl
pop
jbe
fdivrl
in
mov
xchg
mov
fbstp
movsl
test
xor
insb
fsubrs
adc
xor
sbbb
mov
leave
insb
in
ficomps
pop
sub
dec
popa
push
out
jo
mov
aad
xor
lret
lods
sbb
push
mov
jmp
jns
ja
iret
pop
std
fadd
fidivrl
movsb
bound
mov
out
insb
dec
leave
and
jmp
stos
adc
jg
mov
xor
iret
mov
cmp
push
loope
out
lahf
dec
aad
enter
xlat
mov
inc
pop
mov
fstl
call
arpl
and
sub
add
xor
mov
jge
movsl
mov
jecxz
pop
jo
test
cmp
stos
repz
sub
lea
pop
call
out
jmp
subl
ja
xchg
mov
xlat
ds
lahf
sub
sub
xchg
dec
sahf
and
dec
daa
fidivs
add
imul
mov
sti
push
andb
cltd
addr16
push
jp
xchg
or
sub
sbb
or
dec
mov
fbstp
outsb
mov
sub
sub
and
and
stos
icebp
jl
imul
sub
push
data16
repnz
xchg
ret
and
stos
mov
adc
push
xchg
mov
inc
scas
push
fstl
mov
inc
inc
arpl
adc
mov
dec
cmp
push
out
and
mov
lret
pop
icebp
xchg
jno
push
scas
jg
or
mov
test
lea
and
or
cltd
jecxz
aas
jbe
dec
push
jo
sbb
add
ret
add
stos
dec
test
nop
jb
jmp
je
lock
test
xor
cwtl
push
mov
lret
cld
add
jns
pop
adc
xchg
test
dec
divl
mov
movsl
lea
test
xor
fisttpll
sahf
nop
fstps
je
pop
mov
les
pop
or
add
sbb
mov
sbb
iret
dec
adcb
inc
xchg
lea
fldl2e
mov
cmpxchg
adc
lret
scas
mov
mov
mov
adc
inc
in
add
mov
nop
std
sbb
xchg
bound
mov
int3
ror
in
shl
jg
or
dec
test
pop
mov
js
imul
push
mov
orl
ss
pop
in
daa
cmpsl
cmpsb
ficoml
les
jnp
inc
lods
stc
mov
add
idivb
mov
bound
mov
and
pop
into
mov
push
nop
sub
hlt
sbb
jmp
hlt
jl
sub
mov
inc
inc
sbb
xchg
mov
cltd
fildll
aam
ds
das
fldl
int
pop
xor
cmpsb
jge
jo
fcoml
pop
sub
je
je
jb
xchg
mov
sub
xlat
mov
lock
push
mov
std
js
pushw
push
or
jo
push
add
lea
sahf
dec
or
int
scas
adc
sahf
sbb
insb
aad
insl
mov
into
sbb
xchg
rorb
jns
addr16
out
stc
in
into
dec
pop
pushf
lret
mov
and
mov
scas
sbb
stc
cmp
and
fildll
fidivrl
js
jne
out
ss
xchg
and
fwait
xchg
pop
scas
stc
stc
jne
pop
push
loope
in
mov
pop
std
lock
rcrb
imul
stc
push
mov
in
mov
jmp
cmp
outsb
mov
ljmp
dec
jmp
xor
pusha
or
dec
fwait
fs
lahf
mull
call
mov
arpl
in
xlat
xsaveopt
sti
call
jo
adc
icebp
jmp
xor
iret
pop
inc
fcmovnb
lods
mov
rol
mov
test
enter
cli
hlt
out
cs
pop
xchg
jno
cmpsl
push
and
mov
dec
cmc
ja
arpl
stos
iret
or
test
dec
loopne
add
repnz
cli
jns
sarl
and
mov
sbb
cmp
lds
jge
mov
cmc
adc
or
pusha
repz
jne
xchg
loope
push
jle
xchg
mov
sbb
sti
or
imul
popf
scas
movl
sbb
mov
mov
inc
jo
cmp
push
enter
jle
test
mov
cs
into
mov
mov
pop
cwtl
test
lcall
inc
out
or
push
fsubr
das
ljmp
xchg
and
sub
inc
or
sahf
push
add
lds
push
ljmp
test
int3
cmp
dec
push
addr16
adc
call
cli
xchg
nop
lea
or
or
mov
test
inc
push
adc
shrb
in
nop
add
dec
maxps
and
or
add
push
mov
stos
and
nop
sub
pop
jmp
outsb
xchg
xchg
adc
rcrb
fldl
or
mov
js
dec
cmp
fdivs
add
push
or
sub
cmpsl
adc
dec
pop
loopne
hlt
pushf
sti
clc
inc
ds
lret
and
jmp
dec
add
push
cmpsl
test
out
jle
aas
int3
mov
xchg
outsl
stc
jge
dec
xor
adc
or
xchg
xor
push
cld
andb
jne
add
sub
mov
mov
pop
scas
xor
xor
clc
and
xchg
sbb
mov
jbe
cltd
mov
mov
jge
je
cmp
mov
jns
or
adc
sbb
pop
or
out
xchg
mov
push
push
ret
std
test
cmp
inc
mov
mov
sub
sbb
pushf
fsub
daa
cmp
mov
dec
aad
jne
xchg
cmpsb
aaa
nop
sar
enter
cmp
push
or
pusha
cmp
lret
ds
in
mov
data16
push
mov
faddl
mov
incl
lret
test
lds
push
es
mov
movsl
jbe
jg
jp
jae
cmp
repnz
sbb
popa
add
pop
mov
gs
clc
add
mov
cs
push
outsl
cmpsb
mov
sbb
push
mov
add
bound
subb
xchg
add
imul
xchg
test
cmp
imulb
mov
cmc
and
cltd
leave
xchg
jecxz
insl
xchg
mov
inc
xor
cmp
cmc
movsb
out
pop
push
js
test
scas
pop
add
lds
or
sbb
stos
mov
cmp
add
pop
inc
gs
adc
daa
inc
push
cli
and
pusha
inc
push
add
or
lret
fcmove
fwait
std
adc
aam
dec
dec
repz
mov
xor
inc
pop
pop
faddl
cmc
and
aas
or
or
cmp
out
dec
add
adc
and
cmc
sbbl
xchg
rcll
push
pushf
xchg
jmp
mov
jno
or
cwtl
ret
mov
xor
lock
xchg
fstp
fiaddl
daa
lods
add
pushl
xlat
jns
jbe
insl
add
lock
jnp
sar
in
sbb
rclb
aas
ficomps
cmc
movsl
push
xor
cmp
push
mov
insb
xor
mov
dec
cltd
addr16
mov
cmp
gs
adc
out
loop
cltd
push
cmpsl
or
addr16
nop
xchg
out
imul
cwtl
mov
adc
mov
push
ret
jns
push
fdivrs
adc
test
push
outsl
xor
jmp
inc
xchg
ja
mov
ss
xchg
push
or
enter
cwtl
mov
dec
cli
je
je
cltd
sbb
outsb
push
sbb
add
in
adc
stc
inc
jecxz
inc
rolb
pop
aad
pop
cmp
test
addr16
dec
fsubr
int3
sub
cs
aas
or
stos
pop
sbb
stc
pop
insb
movsb
pop
xor
pop
xchg
inc
lods
mov
push
int3
pop
arpl
test
call
fmull
xchg
loop
enter
xchg
movsb
or
clc
stc
addr16
inc
test
outsl
mov
xchg
jle
shll
stos
dec
or
cmpsb
fbstp
mov
jns
jecxz
loop
mov
xchg
sub
mov
outsl
add
mulb
jne
iret
mov
adc
jbe
icebp
push
test
xchg
imul
repz
pavgw
ds
add
clc
cmpb
fisubl
decb
push
push
xlat
test
mov
mov
addr16
and
cmpsb
mov
mov
jmp
ds
pop
mov
je
clc
repnz
lcall
mov
not
sbb
push
sbb
psubusb
cli
int3
mov
lahf
lock
ljmp
xchg
and
mov
mov
movsb
bswap
push
inc
loopne
sbb
jge
and
jae
loopne
mov
jmp
sar
cltd
xlat
xlat
push
mov
push
push
or
xchg
mov
cmp
push
lcall
popa
popl
cs
add
inc
jmp
xor
mov
repnz
aad
jns
jecxz
add
aam
movsb
xchg
jmp
inc
fmuls
sub
dec
xchg
arpl
in
test
cbtw
pop
pop
stos
repz
jbe
pushf
jge
dec
sbb
jae
mov
rolb
jbe
jmp
stc
push
cltd
std
mov
ljmp
lret
addb
mov
inc
mov
adc
popa
rorl
inc
cmp
and
subl
pop
pop
mov
or
movsl
test
dec
xor
pop
sbb
ret
les
xchg
jl
pop
nop
lret
mov
cmp
dec
frstor
jb
sbb
mov
out
jo
inc
das
insb
sub
cmpsl
sub
incl
or
in
push
cmp
mov
or
jne
jmp
int3
and
jle
stc
lods
pusha
adc
lcall
jg
fistpl
push
lds
lods
push
icebp
xor
int3
fldt
cmpsb
popf
int3
dec
or
popa
dec
jno
push
jl
repz
imull
cmp
push
subl
dec
mov
fldenv
addr16
jmp
cs
dec
adc
add
test
sbb
sahf
data16
pop
push
jmp
cmp
mov
mov
cmpsl
ljmp
sub
iretw
push
jb
push
jb
loope
mov
cmp
sbb
jne
and
in
xchg
cmp
hlt
dec
pop
push
subb
sbb
and
xchg
pop
cmc
xchg
cmp
mov
hlt
pusha
push
add
mov
sub
cltd
cmpsl
ss
xchg
xchg
in
dec
outsb
adc
dec
xor
add
fdivr
and
dec
sub
mov
mov
sub
xchg
xchg
out
rcrl
ja
ljmp
pop
sbb
mov
cmpsb
xchg
push
sar
es
add
or
mov
add
push
cmp
fistpll
fwait
dec
inc
ficoml
inc
jg
add
jp
out
cwtl
cld
cmp
push
pop
cmp
rorl
or
loope
jae
in
or
jno
mov
jg
int
aaa
mov
decb
dec
aad
das
xor
jmp
sbb
xchg
int3
lods
movsb
arpl
jp
jb
dec
hlt
cmpsl
jle
clc
je
test
stc
dec
mov
mov
jle
push
cmp
or
aad
push
jmp
push
jb
mov
pop
pop
in
ret
add
push
into
xchg
out
movsb
lahf
xchg
sbb
das
jg
jno
lds
push
sbb
pushf
pop
dec
cwtl
inc
cmp
shlb
and
stos
push
enter
in
xorl
mov
xor
mov
mov
push
mov
mov
pop
lods
les
shl
cmpsb
sti
mov
movsb
adc
rorl
dec
lea
iret
xchg
sub
ret
and
add
pushf
xchg
popa
cwtl
mov
push
jb
push
subl
pop
pop
adc
mov
cmp
push
cli
adc
jl
stos
xor
sahf
aad
outsl
sub
pop
xchg
mov
jnp
adc
loop
adc
mov
outsl
mov
int3
mov
mov
inc
pop
xchg
outsb
and
lock
xor
testb
jo
stos
movsb
test
add
popa
cwtl
inc
test
jo
cmp
inc
lock
jmp
out
scas
and
pushf
xorl
test
incl
mov
push
mov
push
cmp
jecxz
jne
test
cmp
aad
push
dec
clc
mov
xchg
fcomps
sti
ret
and
sbb
lods
mov
xchg
orl
pop
mov
xlat
leave
popf
mov
rcll
dec
fdivrs
push
movsl
jmp
and
sub
dec
push
ret
imul
call
popa
fnstsw
pop
cwtl
push
into
shrb
lcall
xchg
jbe
and
sbb
mov
sub
or
mov
dec
sub
das
pop
fwait
sbb
js
mov
ret
lods
divl
xchg
std
jg
sti
out
aaa
mov
rorl
push
mov
mov
or
popf
inc
aad
jg
movsl
inc
aaa
xor
stos
mov
cltd
jecxz
cmp
shrb
cwtl
cmpsl
sbb
iret
clc
sbb
stc
mov
sub
inc
dec
test
in
out
stos
jp
pop
xor
rclb
sub
rorl
mov
ret
cli
popf
sbb
dec
mov
cltd
fstps
cwtl
push
dec
das
loopne
push
cs
push
inc
ja
inc
add
mov
inc
jae
mov
out
pop
xchg
aam
push
int
into
add
cmp
jp
in
sti
dec
jg
nop
mov
sbb
pop
out
xchg
pop
popf
mov
into
test
mov
ja
movsb
lds
xor
rep
pop
imul
dec
cmp
add
add
and
sbb
aas
mov
out
sub
ljmp
or
push
add
sub
sar
jb
jb
inc
mov
pop
push
mov
pop
stos
lods
lret
dec
loope
movsb
mov
imul
sbb
clc
stos
mov
mov
push
push
adc
leave
pushf
loope
push
xchg
jae
shll
rcl
mov
lcall
into
pop
xchg
xor
sbb
xchg
loopne
fstpt
je
push
and
sbb
popf
cwtl
pop
clc
xor
inc
lcall
roll
and
pop
pusha
mov
cmc
push
mov
int3
movsb
lea
cmpb
sbb
xor
test
sbb
mov
ret
andb
or
and
sbb
xchg
mov
jge
inc
sub
push
scas
aad
imulb
push
mov
es
ss
je
int
add
sbb
push
in
lods
adc
add
test
mov
movsb
xor
clc
stos
shl
inc
pop
fmull
cmp
pop
test
lea
enter
jns
aam
push
test
rorb
mov
sahf
scas
in
cmpl
sbb
sub
mov
mov
fadd
les
add
cmc
rolb
inc
mov
das
in
dec
arpl
push
aaa
xchg
mov
iret
inc
gs
xor
into
popf
push
push
xchg
add
inc
xchg
xchg
or
mov
sub
jb
fisttpll
pusha
nop
shlb
div
orb
pop
andb
stos
nop
daa
vpand
stos
add
xchg
leave
push
outsb
int3
xorb
mov
filds
inc
mov
xchg
mov
mov
xchg
mov
xor
in
mov
adc
arpl
loopne
cmp
mov
dec
loop
arpl
mov
pop
pop
mov
pop
dec
sbbl
xchg
movsl
sub
adcl
dec
movsb
adc
dec
aas
outsb
fistpl
add
fiaddl
test
int
daa
call
fdiv
sub
adc
rorb
mov
stc
add
sbb
cs
jb
mov
out
popa
jne
jno
xchg
sub
jae
sub
push
ss
lock
push
pop
mov
pop
scas
lods
int3
or
and
int
xchg
pop
pop
ds
mov
lea
lock
cmp
inc
pop
xor
push
jbe
mov
loopne
cmp
cmc
shlb
xchg
jbe
lds
jmp
popf
js
jns
call
faddl
sub
outsl
mov
xchg
sub
pushf
xchg
cmp
inc
push
push
test
xor
imul
repnz
jnp
daa
lock
sub
pop
jae
inc
clc
stc
pop
fidivl
mov
nop
inc
sbbb
pop
push
jg
add
clc
inc
call
sti
push
fsubrl
push
fmul
fstl
and
mov
adc
cmp
xchg
cmp
inc
fwait
lret
or
lcall
and
xchg
lahf
cmc
jle
cmp
iret
and
in
xor
or
jl
xor
jmp
loopne
addr16
rcl
push
movsb
and
jae
in
les
leavew
xor
or
push
ss
out
add
js
pop
or
xchg
jb
aas
sbb
dec
sbb
xchg
dec
pop
aaa
mov
int3
mov
sub
out
pop
cmp
inc
or
scas
into
rol
les
pushl
inc
push
fcoms
lcall
popf
imul
outsl
jns
or
cmpsl
lcall
test
int
dec
jbe
push
and
push
pop
xchg
fadds
cs
test
or
inc
cmp
sbb
mov
jmp
mov
cld
stos
loopne
xchg
fists
bound
enter
mov
pop
or
mov
iret
mov
mov
lret
clc
lret
xor
dec
into
sbb
xor
test
adc
fldenv
xor
or
iret
rorl
fmuls
xchg
test
std
and
xchg
cmc
lahf
mov
sarl
sti
sub
fdivrs
ljmp
xor
jl
test
out
cmpsb
mov
into
add
fs
and
mov
add
clc
psllw
jg
test
les
adc
mov
xchg
movsl
divl
push
xlat
ret
sarb
pusha
notl
and
mov
loope
lock
xchg
lods
insb
inc
xchg
sti
shlb
fdivrl
movsl
cmc
push
es
jmp
fidivrs
jae
mov
mov
cmp
test
pop
sar
gs
loopne
xor
cmp
into
movsb
std
or
cmp
insl
dec
cmp
sti
cmp
std
cmp
mov
fwait
push
movsl
and
lods
lods
cld
pushf
cli
jbe
xchg
or
sbb
testl
data16
movsb
xor
or
sbb
inc
aam
aas
dec
pop
inc
sahf
pop
and
dec
cmpsb
cmp
les
sub
jo
mov
pop
cmp
das
outsb
pop
xor
addr16
push
cwtl
push
xchg
mov
sbb
fbld
inc
cmp
andb
xchg
mov
aad
mov
xor
repnz
aam
sti
daa
push
icebp
adc
push
add
icebp
scas
sti
inc
popa
out
imull
push
daa
std
loop
fcoms
xchg
loop
sbb
out
adc
and
inc
and
mov
mov
xor
cmc
addb
adc
test
xchg
test
cmpsl
adc
add
mov
shlb
out
jbe
paddd
lods
cmp
xor
daa
cmp
lds
jge
outsb
lods
lcall
icebp
out
adc
shr
inc
scas
out
cs
dec
enter
or
pop
js
in
mov
lock
mov
clc
ss
cmp
movsb
add
adc
push
add
cmp
outsl
and
inc
and
inc
sbb
test
adc
cmp
pop
sbb
mov
aas
call
and
ficoml
xchg
lret
pop
sbb
into
enter
sbb
or
dec
icebp
or
jnp
dec
popa
inc
or
sahf
fisubrs
in
loope
xor
punpckhwd
adcb
aad
das
daa
adc
ret
popf
xor
sub
lds
sub
ds
push
call
loop
repz
adc
pop
or
cmc
xlat
loope
sub
and
pop
push
jb
subb
xor
pslld
imul
scas
cmc
loope
fstpt
lds
lcall
in
xchg
mov
enter
and
cmp
lods
xchg
mov
sarb
fs
mov
clc
in
xor
stc
jne
or
and
pop
daa
popf
into
mov
pop
push
xchg
sbb
inc
cmp
xchg
insb
and
xor
into
mov
les
pop
lea
or
fcmovu
int3
aas
mov
mov
ds
push
mov
fbstp
or
hlt
not
push
imul
cmpsl
or
add
dec
enter
and
inc
movsb
mov
pop
outsb
dec
add
mov
rorl
loope,pn
test
bound
int3
or
movsl
les
mov
dec
les
mov
fdivs
cmp
out
xor
pusha
or
clc
push
push
push
test
lret
adc
in
popf
or
push
addr16
movsb
xchg
dec
aas
sub
mov
and
dec
stos
loope
add
mov
fwait
ret
push
push
xchg
loope
xabort
js
xor
adc
mov
sub
loope
out
cwtl
int3
xor
xchg
push
mov
pop
cld
sbb
jmp
xor
pop
sub
lods
jge
leave
jge
mov
push
xlat
popf
cltd
push
adcb
sbb
daa
xor
dec
xlat
mov
cmpsb
jb
jle
das
adc
xchg
std
loope
dec
mov
rcll
pop
stos
push
cltd
push
ret
add
rcll
jl
aam
lds
lahf
pop
push
ret
nop
pop
pop
iret
icebp
and
add
lret
sub
adc
push
aam
je
adc
xchg
adc
rorb
sarb
inc
popa
jno
jp
dec
arpl
ds
mov
fwait
inc
mov
jbe
jmp
mov
sub
jmp
xchg
dec
stc
decb
in
adc
mov
push
inc
in
cmpsb
int
push
xor
xchg
sarl
cwtl
or
pusha
sbb
call
rorb
adc
dec
pusha
mov
mov
mov
mov
mov
das
daa
push
cwtl
fadd
and
sti
sbb
popa
mov
inc
stos
popa
repz
pop
fs
lret
pop
sbb
xor
jmp
dec
and
sub
or
push
add
sub
inc
les
orl
xor
fiaddl
jno
in
lods
movsl
push
dec
repz
mov
pop
in
test
mov
loop
push
jno
stc
fdivs
mov
rcl
xor
les
loope
bound
mov
cwtl
lds
mov
in
and
xor
pop
inc
dec
mov
mov
inc
js
shrl
and
mov
sub
push
inc
mov
push
xchg
and
mov
xchg
pop
fsubrs
xor
ret
in
inc
int
pop
ds
sarl
mov
in
sub
mov
jmp
push
lahf
xchg
push
popf
repnz
fld1
xor
outsl
sbb
cmp
adc
and
int3
cmp
push
xorb
xor
das
and
fldl
call
or
mov
or
pop
out
gs
daa
aaa
sub
mov
es
int3
mov
sub
pop
add
sbb
lods
add
sbb
cmpsl
mov
call
ljmp
push
fcomps
int3
scas
mov
notb
push
jbe
jns
in
xchg
jg
cs
mov
mov
pop
out
cmc
mov
insl
mov
push
lods
stos
inc
fwait
mov
jmp
dec
sahf
or
mov
xchg
cmpsb
movsb
aam
inc
std
xor
pop
mov
loop
icebp
mov
and
ret
mov
dec
add
cmp
sub
adc
scas
sub
push
mov
mov
out
dec
add
pop
test
iret
sti
stos
call
pop
test
xor
negl
mov
cmp
pop
out
mov
lods
add
xchg
pop
jne
imul
mov
imul
xor
mov
cli
cmpsl
scas
into
rorl
mov
cli
fidivrl
pop
adc
jle
shrb
or
push
ret
inc
and
iret
lahf
xchg
loop
push
add
rcr
dec
mov
mov
adc
ss
mov
lcall
es
and
es
pop
sahf
pop
aad
pop
ret
adc
xchg
mov
mov
es
daa
repnz
xchg
pushf
push
pop
inc
repnz
mov
popa
add
idivb
jno
push
js
sbb
mov
sub
call
iret
xor
nop
mov
pop
add
fwait
movsb
xlat
mov
enter
push
loopne
fs
fcoml
aad
cld
repnz
push
add
xchg
inc
iret
out
xchg
xchg
test
ds
jb
test
and
sub
sub
inc
xchg
xor
jae
js
mov
out
das
add
sbb
mov
sti
insb
mov
xor
sub
je
cmp
scas
imul
lea
aas
xchg
add
sub
lds
rclb
or
cld
in
bnd
ja
adc
fs
icebp
ss
std
dec
out
int
lahf
cli
repz
mov
or
or
test
cmpsl
icebp
movsl
add
xchg
cmp
xor
test
stos
inc
mov
push
xchg
scas
mov
sub
add
sar
mov
mov
pop
sbb
iret
fs
std
mov
icebp
rcll
rcll
pop
inc
mov
pop
push
popa
inc
cli
outsl
movsb
sbb
or
push
inc
adc
arpl
loop
inc
fistpll
dec
push
pop
add
jge
test
iret
jo
arpl
outsb
jns
mov
lret
pop
pop
popa
xor
xor
cmp
cwtl
popf
jecxz
cmp
clc
jb
mov
gs
adc
js
mov
mov
and
aaa
int
add
fimull
shll
in
mov
ja
jns
adc
pop
lock
scas
dec
nop
shrl
nop
xor
and
mov
inc
test
dec
test
movsl
jne
mov
aas
repnz
hlt
sbb
mulb
xchg
movsl
pop
cld
gs
pop
das
aam
idivl
fmuls
xchg
pop
aad
bound
or
in
jmp
clc
int3
je
lahf
pop
dec
enter
int3
jno
mov
and
pop
popf
pop
cltd
cli
js
mov
imul
cmc
arpl
lea
int3
arpl
mov
clc
push
pop
adc
outsl
popf
sahf
mov
pop
and
es
popa
fcomps
pop
sbb
adc
jo
out
int3
enter
xchg
into
fnstsw
test
test
outsl
add
iret
insl
or
xchg
stos
xor
sbb
xor
mov
mov
pusha
mov
ret
lock
push
add
in
lods
xchg
bound
mov
shll
enter
lods
int3
aad
mov
mov
xchg
mov
mov
das
jl
inc
cmpb
fisttpl
xor
push
cmp
inc
pop
les
rcrl
scas
outsl
and
pop
xor
int
movsl
loopne
lea
loop
cmp
mov
sbb
aam
addr16
movsl
mov
dec
cmp
xor
lahf
mov
add
mov
mov
in
icebp
sub
mov
test
xchg
les
or
pop
xor
inc
mov
cmp
mov
dec
ja
lret
sbb
iret
pop
xchg
ret
lret
lcall
nop
mov
ficompl
fldl
mov
not
inc
cmp
sub
loopne
jnp
in
aad
mov
pop
shlb
hlt
xchg
push
sub
dec
faddl
xor
adcl
inc
adcb
mov
in
std
jle
adc
insl
mov
jb
jno
add
hlt
in
push
jg
push
leave
lea
cli
in
mov
cmc
aas
popa
jo
mov
xor
cmp
mov
adc
vpsadbw
adc
sbb
dec
jg
push
aas
sbb
fisubrl
aam
fs
sbb
lods
lds
pushfw
daa
xor
pop
lea
mov
add
cmpsb
.byte
cmp
ltr
verw
jbe
str
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
lldt
add
sldt
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
dec
dec
add
dec
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
pop
dec
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
popa
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
addr16
add
add
add
incl
add
add
push
add
incl
add
add
imul
incl
add
add
imul
incl
add
add
add
add
incl
add
add
je
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
orb
add
add
incl
add
add
dec
add
add
add
xchg
dec
add
xchg
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
decl
dec
add
dec
add
add
add
lods
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
xor
dec
add
add
add
add
dec
add
add
add
incl
add
add
add
add
ret
add
add
add
add
inc
ret
add
add
call
leave
dec
add
pop
dec
add
pop
dec
add
pop
dec
add
jmp
dec
add
dec
add
add
add
incl
add
add
fisttpll
add
add
incl
add
add
add
add
incl
add
add
add
add
add
jmp
dec
add
loop
add
add
add
call
out
add
out
add
add
add
lcall
dec
add
jmp
call
jmp
incl
add
add
in
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
dec
testl
lcall
dec
add
dec
add
incl
testl
xchg
testl
mov
testl
int
dec
add
testl
add
add
inc
stc
dec
add
add
add
incl
add
add
add
add
incl
add
add
cld
dec
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
ljmp
add
incl
add
add
add
add
lcall
add
add
add
add
incl
add
add
add
jmp
sub
and
dec
add
call
sub
fsubrs
dec
add
decl
dec
add
add
cmp
add
sldt
xor
add
sldt
add
add
add
add
str
add
ltr
verw
jbe
str
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
lldt
add
sldt
cmp
add
add
add
cmp
add
add
add
je
popa
insb
imul
imul
je
outsl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
cmc
adc
push
in
inc
pop
test
pusha
fmull
popa
jnp
adcl
scas
push
lea
mov
add
shlb
lahf
xchg
ss
ljmp
dec
add
mov
push
cwtl
stos
pop
ret
mov
out
push
xchg
pop
adcb
outsb
std
cmp
jae
int3
xchg
aad
xor
mov
test
sub
and
mov
xor
subl
test
lods
mov
jl
mov
or
test
sbb
fucomip
pop
lahf
dec
es
cmp
push
fistps
int
out
insb
loope
sbb
jp
push
aam
fildl
jnp
imul
in
jl
aad
sub
push
das
loope
jl
aad
int
lcall
insb
mov
imul
jecxz
imul
nop
cmpsl
movsb
xor
es
popa
sub
xchg
rcl
dec
or
adc
filds
jns
clc
ret
pop
sbb
cmp
clc
std
in
and
mov
cli
les
dec
pop
std
out
adc
push
mov
add
pop
and
movsl
dec
add
push
mov
jecxz
scas
outsl
clc
xchg
inc
xchg
dec
cmp
movsl
mov
pop
mov
shll
sub
aaa
imul
adc
test
in
test
inc
inc
loopne
cwtl
push
inc
dec
bound
pop
jae
cmp
fidivrs
xor
adc
cld
inc
xor
addl
adc
ret
add
mov
push
push
lret
and
out
repnz
aam
mov
arpl
rol
push
or
inc
mov
jbe
mov
mov
cmp
cwtl
add
inc
xchg
cmp
mov
ja
movsl
xchg
jne
ds
iret
loop
int
sub
ret
mov
xlat
out
sbb
jno
push
loopne
jne
or
adc
xor
jno
push
cmc
cld
inc
int
dec
scas
mov
lds
in
enter
jge
repz
mov
dec
call
mov
mov
scas
lods
mov
dec
sub
lahf
ret
cmp
jno
call
insb
jmp
int3
orb
xchg
and
fcomi
adc
mov
rorb
es
xchg
dec
test
adc
testl
cmp
std
out
jge
mov
addr16
xchg
cmpsl
fcomps
cmp
div
adc
cmp
lea
fs
mov
mul
leave
bound
dec
dec
stc
pop
out
stc
std
sbb
cmp
sbb
sub
popf
lcall
popf
fnstsw
testl
jbe
push
pop
out
inc
repz
mov
insb
stos
adc
inc
pushf
sti
cld
lahf
loope
fwait
pop
aad
cmp
loop
jle
cmc
sub
inc
out
pop
xor
jp
dec
push
jmp
in
add
or
cmpsb
pop
aas
and
mov
stos
push
negl
mov
mov
mov
cmp
sti
lahf
push
mov
and
dec
xorl
int3
push
jae
cli
andb
cmp
jnp
mov
test
les
and
in
pop
pop
sub
mov
xchg
cmp
and
sbb
shl
mov
in
and
push
ficoml
push
std
push
andb
inc
dec
dec
in
cwtl
jnp
xchg
mov
jmp
arpl
test
adcl
and
cmp
mov
jbe
inc
push
sub
xor
repz
repz
daa
inc
mov
in
mov
js
mov
add
sbb
xchg
adc
cmp
pop
xor
xchg
out
cld
out
mov
in
adc
imul
adc
in
sti
movsb
pop
imul
mov
mov
inc
lods
xchg
dec
rorb
ja
loope
hlt
push
sub
add
pop
cmp
jb
xor
lret
fs
mov
movsl
mov
cmp
adc
pop
inc
pop
xchg
adc
cmp
mov
subb
push
leave
rolw
popa
js
jns
mov
sbb
xchg
xchg
adc
dec
mov
cmp
cld
inc
inc
pop
out
add
xchg
lods
and
dec
fwait
dec
sbb
adc
dec
loopne
pop
mov
pop
mov
or
or
mov
fcomip
jns
add
sahf
mov
rcll
idivb
ret
ds
adc
scas
sbb
push
xor
enter
sub
jl
mov
mov
jmp
ret
in
xchg
xor
sbb
xor
mov
int3
leave
inc
dec
pop
push
pop
mov
clc
push
xorb
xlat
inc
and
xchg
mov
sub
shlb
flds
fcoml
inc
leave
outsb
or
aas
pop
mov
cs
xor
pop
jne
jecxz
aad
push
fnstsw
add
fisubrs
adc
rcr
push
int
lret
mov
add
jmp
dec
call
inc
mov
cwtl
push
cs
mov
xlat
js
arpl
stos
dec
js
inc
pop
push
mov
lea
sahf
ret
push
stc
jge
fsubrl
cmpsl
ljmp
outsl
mov
pop
sarb
lods
push
push
fistl
cmp
mov
into
lret
dec
inc
jge
nop
fldl
mov
push
imul
loope
daa
mov
dec
enter
push
and
jmp
inc
lds
inc
inc
incl
outsb
xlat
dec
out
nop
and
gs
fcomps
cmp
sbb
pop
or
leave
jb
or
lds
insl
mov
jl
xor
sub
xlat
cmp
jg
in
arpl
out
push
mov
xchg
loopne
fwait
dec
popa
fcoml
loop
add
ret
pushf
loopne
jp
mov
and
jbe
xor
xor
or
sub
insl
es
mov
data16
sbb
arpl
xor
scas
add
sub
sahf
dec
mov
test
fmull
enter
xchg
int3
test
jne
outsb
ljmp
sbb
and
sbb
pushf
ljmp
cmp
dec
pop
inc
in
imul
or
xchg
xor
je
pop
rcr
mov
jno
in
sbb
xchg
ss
sbb
repz
push
xor
or
rcrb
jge
inc
lods
adc
xchg
push
push
sahf
ja
jns
push
int3
sahf
xor
inc
inc
push
ljmp
mov
fdivl
mov
popf
cmp
lahf
cli
add
mov
and
mov
lods
adc
pop
cmp
add
loop
in
add
insb
push
movsb
xor
xor
cmp
inc
pusha
inc
lea
xchg
mov
in
mov
pop
icebp
mov
or
dec
lahf
ficompl
jb
adc
xchg
push
and
mov
int
dec
fcomp
call
and
movb
xor
dec
and
mov
inc
aad
mov
dec
sub
cs
aam
lds
mov
daa
push
aaa
xor
sbb
stos
loope
stc
or
test
lock
dec
mov
mov
loope
pop
mov
adc
jge
push
lahf
sub
inc
ja
mov
mov
ficoml
pop
js
mov
push
adc
mov
fwait
adc
leave
add
aas
aas
ret
push
data16
incb
mov
or
inc
aad
nop
fcomps
popf
xor
mov
dec
and
add
push
into
imul
xlat
add
test
out
cmp
or
fs
mov
mov
or
dec
pop
cmpsl
mov
cmc
mov
or
lahf
push
lock
js
rorb
stc
movsb
push
sbb
fwait
push
cmpsl
push
mov
out
push
xor
and
jns
data16
mov
arpl
aad
jge
sti
jmp
sbb
xchg
adc
xor
fimuls
push
das
mov
xor
or
gs
rolb
hlt
xchg
mov
xor
xor
jg
sub
aas
mov
ror
sarl
cmp
and
cmpsl
shll
adc
cmp
jle
gs
cmp
mov
push
xor
insl
mov
mov
jns
lods
add
icebp
or
pop
ds
lea
pop
xor
adc
fwait
hlt
mov
movsl
xchg
rorb
push
out
loopne
call
mov
aad
inc
mov
adc
lret
dec
sbb
xchg
rcrl
dec
pusha
mov
orb
dec
mov
mov
mov
popf
push
inc
sarb
mov
test
add
jl
sub
jg
andb
lahf
cld
push
sub
arpl
xchg
xor
push
out
lret
xor
call
pusha
xor
stc
mov
sub
fwait
popf
sahf
movsl
sbb
or
mov
mov
cmp
out
rcr
std
pop
pop
fildll
and
and
roll
insl
scas
and
xchg
ljmp
test
test
ret
inc
test
push
push
sbb
hlt
xlat
dec
pusha
fstpt
test
pop
add
cmpsl
jb
add
sbb
xchg
xchg
fiaddl
shlb
repz
pop
sti
iret
cmp
xor
inc
in
mov
pop
add
ja
xchg
jp
in
sbb
xor
mov
das
push
mov
mov
fisubl
clc
dec
testl
lret
and
movsl
popa
mov
scas
or
call
mov
push
cltd
xor
es
inc
pop
movsl
arpl
pop
popf
cmp
add
cmp
std
outsl
push
jg
jl
mov
adc
mov
xor
out
cmc
js
xchg
push
cwtl
or
xlat
in
push
add
adc
inc
sbb
and
xchg
out
aaa
lahf
mov
stc
aas
lds
xchg
rol
jae
test
imul
sbb
xor
mov
push
sub
int3
stc
cmp
xchg
stos
imul
or
ja
cmp
adcb
sarb
sub
dec
in
scas
and
inc
and
sarl
dec
push
push
bound
add
lods
lods
adc
iret
lcall
push
push
int3
sbb
mov
mov
in
popa
lds
ds
aad
adc
ja
pop
push
xlat
mov
xor
aas
in
ja
push
pop
pop
pop
sub
mov
pop
inc
push
add
xor
xor
cltd
orl
cltd
les
sbb
mov
pop
les
mov
sub
jmp
daa
push
or
aad
add
xchg
or
sbb
nop
jne
jl
aas
dec
bound
lea
lods
out
scas
cmp
pop
sub
fdivrp
dec
pushf
fcompl
jg
fadds
stc
pop
fildll
inc
and
shrl
adc
add
loopne
iret
xor
push
cmp
pop
jecxz
loope
pop
sub
push
pop
add
pop
cwtl
sbb
mov
cld
clc
leave
les
push
or
das
mov
lea
adc
jo
in
xchg
jecxz
sbb
ljmp
fwait
rol
mov
fwait
add
shlb
inc
enter
clc
xor
loopne
jae
imul
lods
and
loopne
jl
mov
stos
mov
das
mov
jne
mov
push
jp
xor
mov
fnstcw
xor
out
call
mov
and
dec
prefetch
or
fcomps
inc
mov
inc
and
sti
dec
xchg
jg
lods
inc
pop
int3
test
in
addr16
inc
test
sub
cltd
fdivrs
xor
out
mov
mov
push
mov
stos
popf
out
dec
fcomi
jge
bound
adc
xor
je
mov
icebp
mov
ret
push
shll
adc
jmp
or
imul
pop
call
stos
adc
jb
cmpsb
mov
sub
fisubl
push
popf
ret
push
aam
push
or
and
testb
cmpb
inc
inc
rcl
rclb
xor
aad
xchg
rcrl
insl
iret
add
mov
aas
dec
out
outsl
mov
pop
pop
mov
ja
xchg
ret
jne
xor
fwait
loopne
xor
bound
std
out
aas
and
fidivrs
orb
shlb
pusha
or
sub
outsb
cmc
cltd
jne
push
add
pop
push
push
adc
repnz
data16
dec
dec
gs
movsb
jecxz
test
sahf
js
hlt
fld
jmp
out
cwtl
cmp
fiaddl
jo
or
movsl
aaa
sbb
xor
lock
cltd
ja
fs
jl
sub
mov
popa
cmp
sarb
arpl
pop
mov
pop
inc
pop
popl
or
inc
fwait
repnz
adc
lock
sub
push
pop
jae
adc
push
add
mov
jge
dec
lods
lahf
mov
adc
mulb
inc
or
or
sbb
icebp
test
mov
jecxz
loopne
mov
lods
inc
mov
hlt
jmp
mov
push
sarl
data16
ljmp
loop
inc
pop
mov
int3
sarl
adc
fimuls
or
push
in
loop
add
loopne
xor
lock
and
push
fstps
mov
push
pop
xlat
cmpsb
lock
xor
fmuls
inc
mov
orl
fimuls
push
in
mov
cmp
mov
xchg
fldcw
pop
lods
out
xchg
aas
or
add
mov
popa
jge
jle
mov
xor
outsl
shlb
xchg
push
pop
xor
jne
clc
mov
xchg
xchg
repz
add
mov
jb
data16
xlat
fidivrl
mov
fdivrs
inc
aas
mov
sbbl
clc
adc
mov
and
daa
inc
mov
lds
sbb
nop
test
xor
lcall
add
imul
pop
add
fdiv
xchg
fnstsw
jnp
pusha
xchg
add
jecxz
pushf
mov
pop
cld
hlt
pushl
jecxz
sbbl
inc
pop
sub
iret
xchg
cmp
cmp
push
jmp
test
add
jg
dec
int
ds
sub
push
nop
sbb
gs
inc
jecxz
mov
cmp
std
pop
lea
test
pop
adc
jno
int
xchg
jge
fmuls
rcl
xlat
leave
mov
inc
pop
push
dec
xor
sbb
int
pop
mov
test
adc
out
pop
mov
jg
xchg
test
mov
enter
lahf
outsb
xor
sbb
lods
mov
out
mov
cmp
das
push
adc
cmp
cmp
icebp
push
orl
push
and
push
testb
jge
popa
inc
adc
ljmp
mov
inc
leave
cmp
pop
ds
mov
test
or
mov
shrl
push
cmp
pop
dec
xor
sub
xchg
sub
mov
jo
xor
rclb
ja
pop
outsl
outsb
jl
cmp
dec
sti
fwait
sbbb
cmc
repz
xchg
out
mov
icebp
call
adc
cwtl
cmp
cld
jae
shll
hlt
or
add
aaa
sbb
mull
aam
adc
repnz
push
push
mov
int
jmp
jnp
dec
adc
push
js
mov
nop
and
pop
xchg
xor
js
sbb
ljmp
adc
push
mov
jecxz
outsl
push
dec
mov
mov
pop
jecxz
out
repz
mov
jbe
jo
ret
pusha
stos
mov
inc
cmp
xchg
mov
push
inc
int
inc
mov
cmpb
mov
jmp
add
xchg
les
inc
stc
pop
sub
into
icebp
icebp
pushf
frstor
out
clc
jl
push
popf
leave
sarl
aaa
imul
dec
add
jnp
mov
rorl
or
jmp
js
pop
lret
imul
std
lret
cld
mov
cmpsl
test
clc
adc
xchg
and
mov
xor
aad
sbb
xor
push
jne
imul
mov
dec
pop
and
cld
rol
cmp
bound
imul
mov
ds
subb
icebp
dec
mov
sub
int3
insl
add
clc
int
or
push
sbb
push
mov
pop
or
cmp
xor
dec
push
test
dec
add
loope
dec
into
add
inc
adc
xor
push
jle
mov
push
pop
out
mov
adc
mov
mov
outsb
lods
imul
outsb
icebp
call
data16
loop
pop
leave
out
xchg
lock
mov
enter
mov
jmp
sub
clc
movb
int3
pop
mov
adc
push
push
repnz
jmp
lds
test
push
daa
adc
fstps
stos
jae
sti
lea
or
sbb
icebp
pop
sbb
xchg
test
xor
dec
sub
movsb
pop
int3
sbb
mov
add
xchg
push
pop
sub
xchg
cmc
pmulhw
hlt
xchg
incl
inc
push
aad
loope
inc
imul
sub
and
jge
jl
lock
insb
mov
inc
adc
inc
sub
dec
jmp
push
les
pop
mov
and
icebp
outsl
mov
jmp
hlt
pop
push
jl
pusha
ret
xchg
scas
jb
mov
adc
sarl
xor
jns
movsb
xchg
jmp
jo
aas
pop
inc
pop
xchg
dec
sbb
jmp
mov
inc
fistpll
mov
sahf
cmpsb
add
pop
pushf
mov
ret
lods
inc
outsl
mov
sub
mov
jo
aam
adc
xorl
or
push
and
fcoml
add
int
xlat
imul
imul
addl
jg
mov
dec
mov
fisubl
fiaddl
movsl
jle
lcall
jge
or
mov
ret
dec
dec
sbb
or
mov
cmp
mov
fwait
inc
shll
mov
cs
es
je
jno,pn
add
xchg
es
push
pop
mov
xchg
lcall
cmpb
mov
aaa
iret
or
mov
leave
fdivrp
aam
push
add
jbe
in
test
dec
push
out
cmpsb
mov
push
xor
sbb
sbb
cmc
inc
adc
sbb
shlb
add
sbb
jns
out
mov
jecxz
mov
push
cwtl
adc
push
pusha
pop
mov
fwait
lret
jecxz
mov
inc
push
adc
mov
xchg
mov
out
or
mov
sbb
std
cmp
xorb
cmp
ret
lret
fidivrl
inc
test
sbb
jne
xchg
lods
mov
and
loop
rorb
or
fstpt
xor
or
mov
dec
or
xchg
cmc
pop
jno
dec
addl
fldenv
fidivrs
scas
push
pop
mov
stc
push
sbbl
outsb
xor
sbb
fisttpll
add
push
mov
inc
ja
sub
iret
sbb
leave
out
inc
push
pop
push
mov
je
pusha
sbb
lock
mov
add
adc
lret
mov
ds
adc
loope
sahf
sahf
mov
push
sub
aas
or
fcmovnu
or
fs
aam
xchg
insl
dec
repnz
pop
mov
mov
sbb
fsubrl
dec
pop
int3
bound
int
and
divb
bound
mov
pop
hlt
clc
xor
lods
test
cmpsl
dec
sub
jecxz
and
inc
jmp
nop
add
test
fwait
jae
xchg
pop
push
lods
test
stc
in
mov
dec
sti
mov
mov
pop
pop
out
in
cmp
aaa
cld
and
jae
test
loope
xorb
rcrb
inc
mov
mov
mov
in
pop
sbb
ja
ja
incb
aaa
xor
sub
jmp
ret
push
xchg
pop
aaa
dec
pop
and
push
rorl
adc
xchg
sbb
pusha
pushf
gs
lret
jle
movsb
jge,pn
es
adc
jecxz
or
xor
adc
cmp
adc
push
and
test
xchg
inc
inc
bound
push
pop
dec
lcall
scas
pop
xor
jns
mov
cld
cld
scas
lds
insl
xor
out
mov
ficompl
fmull
cmp
mov
push
or
std
ret
cmpsb
and
lahf
add
jae
cs
in
jl
inc
xor
imul
sbb
mov
or
push
popf
jle
mov
daa
mov
cmp
jle
gs
sub
imull
ja
sbb
aad
jnp
or
insl
inc
dec
cwtl
lods
testl
add
int3
mov
cmp
and
sbb
push
ja
out
cld
xor
sbb
cmpsb
adc
adc
pop
test
xor
sahf
movsl
das
out
sbb
sarb
mov
mov
cmp
loope
stos
mov
test
mov
inc
ja
mov
cmp
or
lock
adc
aaa
data16
fnstenv
clc
xor
mov
test
or
dec
xchg
je
sub
add
pop
fxtract
inc
cmp
test
rclb
mov
out
fdivp
aas
adc
out
loopne
roll
hlt
lret
pop
push
mov
rclb
jbe
pushf
cltd
push
shlb
jl
enter
ret
clc
imul
adc
stos
fwait
sub
push
or
pop
adcl
cmc
imul
inc
aas
sub
movsb
mov
or
push
push
test
stos
fcoml
jae
jmp
inc
insb
daa
shll
in
enter
push
push
and
dec
insb
cmpsl
or
aas
jmp
daa
sbb
cltd
mov
sbb
cmp
into
sbb
roll
push
dec
cmpsb
xchg
sbb
mov
fidivrs
cmp
jl
mov
gs
push
shlb
test
cmc
xchg
cmpsl
repz
pushf
out
ret
sbb
add
sbb
mov
cmp
lock
add
fwait
push
jle
cmpb
push
.byte
sub
