mov
out
mov
je
not
sbb
sub
outsl
xchg
pop
jmp
jl
in
sub
addr16
mov
mov
lahf
mov
cli
mov
jbe
adc
out
fdiv
test
loope
push
sbb
lock
inc
dec
sbb
lea
xor
mov
outsl
adc
ret
dec
frstor
mov
adc
inc
push
sbb
jg
xchg
addr16
xchg
and
call
in
lahf
xor
iret
movsl
pop
push
mov
sbb
pop
add
jmp
pop
xor
mov
push
dec
dec
pop
jns
adc
leave
ret
jmp
clc
ljmp
push
cmc
add
orl
rcr
imul
cmpb
insb
cltd
add
arpl
movsl
call
addr16
ret
pop
mov
hlt
xchg
shll
jmp
sbb
sti
jno
push
dec
dec
lds
cs
lds
in
dec
add
sbb
icebp
ljmp
add
fimull
ja
out
das
loope
or
add
push
xorb
idivb
cmp
pop
jg
sbb
imul
ss
outsl
int
dec
dec
js
mov
jns
fwait
std
cwtl
dec
mov
scas
mov
in
cmpsb
cli
cmp
sbb
push
add
outsb
sbb
inc
popf
dec
das
cmpsb
cmpsl
xor
cld
stos
stc
mov
mov
int
ljmp
mov
outsb
addr16
mov
dec
mov
xor
loop
cltd
rcll
pop
mov
rcrl
and
cltd
out
and
push
std
loop
inc
jmp
xchg
and
xor
cmpsb
js
lods
js
fidivl
hlt
lock
adc
lea
jnp
lock
xor
xchg
and
imul
in
loopne
daa
inc
mov
gs
rol
jno
jb
movsb
and
mov
jge
push
mov
inc
push
push
cld
test
lret
in
cwtl
int3
push
cmp
shl
adc
fstpt
jmp
repnz
fimuls
xor
add
sahf
rcrb
xchg
xchg
xlat
leave
inc
mov
adc
mov
or
cs
lea
push
mov
mov
ret
xor
cmc
pop
xchg
pop
addr16
or
xchg
jb
lea
jecxz
sbb
sbb
and
mov
arpl
lahf
aad
stc
sti
jnp
push
or
cmp
sub
and
adc
jle
fs
leave
or
xlat
scas
cmp
sub
rorb
cmp
jnp
jae
fs
cmpsb
cmp
insl
std
mov
aaa
aas
xor
add
loope
int
xlat
xchg
dec
ret
or
mov
aam
push
push
pusha
out
sub
jnp
xor
push
out
xchg
or
mov
data16
and
push
lret
jmp
xchg
adc
xchg
les
cwtl
push
xchg
ljmp
jo
xor
es
cs
cld
sbb
mov
clc
dec
xor
and
mov
jae
adc
inc
cmc
sarl
mov
mov
divb
and
or
or
jne
int
insb
ficompl
jne
sbb
push
dec
aaa
and
push
or
popf
jg
jnp
jb
loop
add
mov
and
inc
sub
test
das
pop
and
inc
mov
fwait
jge
sti
sub
outsb
repz
inc
push
cmp
js
cmp
sbb
push
push
ds
inc
xorl
sbb
lret
xchg
test
push
stos
arpl
mov
pop
test
push
je
into
jle
ja
pop
fdivrl
testb
add
shll
jne
add
adc
push
outsl
enter
pushf
or
or
push
nopl
lock
pop
mov
cli
push
icebp
lea
sbb
sub
test
into
sub
sub
shll
xor
aaa
arpl
pop
push
xor
jae
mov
push
xor
je
loope
xor
lret
pushf
dec
sbb
jl
lahf
idivb
or
push
sbb
adc
dec
dec
loop
insl
fldt
sbb
adc
loope
pop
pop
adc
lret
jecxz
add
loopne
sti
xchg
and
sbb
dec
loop
loopne
lcall
loopne
add
hlt
dec
xchg
fists
push
add
sbb
xor
mov
inc
adc
mov
stos
clc
mov
xchg
jbe
cltd
dec
dec
frstpm(287
test
push
stos
les
cmp
in
clc
sub
inc
xlat
repz
dec
lods
push
fimull
adc
movsl
in
sub
xchg
mov
inc
setae
int
dec
sbb
fwait
jae
sar
sbb
xor
lret
sub
cwtl
test
sub
int3
pop
xlat
cmp
jb
out
push
dec
sub
lret
fadd
fistl
xor
mov
pop
addb
mov
mov
push
scas
jge
mov
popa
imul
into
cltd
jl
repnz
int
jle
notl
jne
sbbl
and
dec
mov
mov
xor
adcb
xlat
jmp
inc
fsubs
cs
sbb
sbb
loopne
pop
out
jnp
movsb
and
mov
sbb
jle
scas
sbb
insl
xchg
sarb
mov
cmpl
cmp
add
cmp
push
mov
inc
int3
lods
fisubrl
mov
push
adc
add
addl
add
cwtl
add
divl
dec
and
add
jne
xchg
or
jne
cltd
inc
lcall
sbb
ja
loopne
cmp
data16
loopne
and
jmp
pop
ret
lds
sti
rolb
out
outsb
inc
and
movsb
and
fcomps
or
adc
pop
ds
adc
mov
fnstenv
roll
xchg
jne
adc
pop
bound
cmp
pop
or
inc
cmp
nop
stos
jnp
and
push
ret
jae
or
imul
sub
xchg
mov
cmp
ret
cwtl
outsl
or
push
stos
dec
iret
jae
dec
cmp
sub
rorb
repnz
pop
ds
pop
add
and
sub
xchg
mov
mov
in
aaa
out
inc
and
mov
dec
dec
cmpsb
push
mov
dec
repnz
xor
and
lods
enter
nop
add
adc
sub
adc
lahf
pop
sub
sbb
vmread
movsb
sahf
mov
sub
or
add
imul
aad
push
xor
out
lods
xor
fsubr
cmp
cvttps2pi
or
add
mov
mov
sbb
sub
fistl
out
std
mov
decb
cmc
popa
fnstsw
mov
adc
sbb
out
cltd
sub
sahf
dec
movsb
or
dec
sti
ds
jle
in
jno
adc
pop
mov
lods
lods
int3
pop
lret
shll
imul
push
pushf
in
jge
adc
lcall
js
add
popf
mov
nop
and
jl
push
inc
sub
or
xor
es
xor
dec
fwait
adc
hlt
push
add
mov
fmulp
mov
stc
je
mov
push
adc
daa
loope
add
mov
lret
call
or
lock
cmp
push
movsb
cmp
xchg
loop
cli
push
movsb
push
ret
lds
outsb
xchg
popa
out
ret
or
and
cmc
outsb
outsl
mov
inc
sbb
mov
pop
inc
insb
and
dec
es
mov
and
mov
xchg
inc
inc
xor
or
out
lcall
inc
ljmp
loope
cmp
andb
rorb
sub
add
dec
shlb
fld
push
lock
stos
jno
leave
xchg
sbb
add
or
sub
push
jo
daa
xor
xchg
and
pushf
push
cmc
cmp
inc
push
pop
add
loope
ds
pop
ljmp
dec
pop
out
cs
add
int
cmp
cmpsb
lea
ds
repnz
inc
xchg
mov
int
add
dec
fwait
and
rcl
mov
mov
xlat
push
out
int3
test
and
jo
mov
loop
inc
sub
test
push
sahf
xchg
ljmp
adc
movsb
shll
push
lcall
mov
mov
mov
jp
mov
scas
fsubr
mov
push
or
iret
je
xchg
push
sbb
sub
and
arpl
out
push
cld
sbb
repz
xor
aad
inc
xor
daa
mov
fidivs
inc
sub
gs
sub
push
pusha
jg
and
add
add
fs
pop
shl
rorb
pop
dec
inc
fcoms
mov
push
daa
lds
inc
xor
push
rcr
repz
cmp
mov
jl
inc
jne
into
aad
cmp
iret
fnsave
bound
inc
cltd
cmp
stos
inc
incl
or
inc
or
mov
mov
xchg
jne
push
mov
lods
mov
clc
cmpsl
sub
pop
mov
mov
dec
xchg
pusha
ds
pop
popf
js
or
fisubrs
shll
shr
lock
xorb
push
lcall
pop
add
into
movsb
push
jecxz
test
aaa
daa
outsl
popa
aam
and
sub
mov
dec
out
jg
add
js
test
push
or
or
cmp
dec
add
loope
mov
pusha
les
int3
xchg
inc
addr16
mov
cld
dec
aad
bound
sbb
icebp
lcall
mov
mov
xor
inc
xor
mov
gs
xor
cltd
dec
cmp
xchg
lahf
daa
pop
dec
cmp
mov
fmuls
fcmovne
into
ds
mov
mov
shll
sub
cs
sub
imul
jbe
aam
mov
pop
loope
ret
add
or
cmp
andl
fs
pushf
fisttps
or
adc
outsl
aam
jnp
mov
inc
mov
imul
lret
fdivp
addl
mov
sub
push
xor
leave
aaa
mov
cmp
mov
stos
fwait
cmp
sub
mov
insl
jbe
sub
dec
je
ret
mov
jns
es
pop
stos
jmp
mov
in
insb
or
enter
xchg
add
fistps
testl
ss
lcall
jno
push
jmp
add
jmp
adc
inc
andb
mov
std
pop
pop
sti
rclb
inc
out
fmuls
inc
sbb
and
and
decl
dec
call
push
mov
and
xchg
pop
mov
and
lods
dec
fisttpl
imul
stos
xlat
xor
outsl
sbbb
movsl
and
jo
shll
push
sub
mov
mov
pop
jp
das
mov
push
mov
ljmp
add
enter
xchg
fwait
xchg
mov
xchg
pusha
movsb
ror
xchg
adc
mov
out
or
cltd
inc
mov
and
jnp
xchg
lea
and
test
dec
lcall
lret
push
rcrb
xlat
flds
jnp
imul
cmpsb
xor
ret
in
sub
sbb
push
in
rcll
mov
mov
and
das
push
dec
jecxz
cmpsl
cmp
mov
push
dec
mov
sbb
mov
scas
mov
aaa
icebp
inc
lret
lret
sub
leave
inc
cmp
sub
jmp
sbb
cmp
adc
adc
pop
xor
nop
xchg
in
dec
lock
leave
rolb
fistl
mov
adc
rclb
pop
les
push
sbb
cmp
and
adc
lds
jo,pn
int3
sti
pushf
cmp
out
pop
or
out
bound
xchg
movsl
lcall
ret
lea
xor
fstpl
mov
mov
lods
pop
xor
cmp
mov
mov
fsubrp
inc
dec
mov
jg
rcll
hlt
sub
push
jne
test
push
loopne
xorb
push
lea
cltd
out
mov
push
shrd
lods
xchg
mov
lods
mov
pop
les
inc
cltd
xor
lea
push
cmpsb
incb
insb
xchg
shlb
jmp
xchg
adc
lea
insl
inc
dec
scas
mov
xor
adc
enter
dec
cmp
xchg
roll
insb
pop
mov
pop
stc
add
dec
push
jg
fimull
push
and
xor
arpl
ret
cmpsb
popa
dec
test
xchg
push
cmp
sbb
push
jo
in
ljmp
mov
or
xor
xchg
loope
clc
xchg
pop
imul
cli
add
dec
mov
mov
mov
nop
sbb
push
addr16
cwtl
gs
dec
cmpsl
cmp
push
or
push
sbb
dec
data16
cs
xchg
sub
fwait
push
cmp
push
ss
pop
ja
subb
pop
cmpsb
rorb
or
movsl
mov
daa
sbbl
sbb
pop
cmpsb
push
xlat
xchg
dec
adc
cmpsl
imul
int3
push
shll
shlb
sarb
sti
mov
bound
stos
movsb
sub
movsb
xor
push
rcrb
mov
fsts
scas
pop
cmpl
in
js
shrl
inc
mov
addr16
in
mov
out
inc
xor
testl
es
xchg
adc
pushf
xor
or
repz
mov
pop
test
sub
pop
cmc
loopne
jo
mov
add
std
fmull
fwait
daa
adc
or
add
mov
leave
std
jbe
and
push
les
or
jle
loope
loope
push
and
ss
or
inc
subb
shr
push
out
lods
sti
das
in
lds
mov
cmc
jge
xchg
inc
or
or
ret
push
in
push
popa
inc
loop
popa
roll
jmp
das
ret
adc
nop
je
sub
push
lret
xchg
test
cmp
and
pop
pop
and
outsl
or
scas
pop
daa
cmp
mov
and
ss
jg
out
icebp
fwait
push
cmp
push
sbb
cmp
loope
ret
cmp
push
ljmp
push
sbb
rcrb
xchg
dec
add
pop
cmp
daa
bound
pop
sub
iret
das
inc
and
jns
movb
jg
jns
mov
dec
pop
aad
adc
mov
mov
sub
rol
jmp
xchg
adc
mov
cmp
xor
cmpb
mov
mov
jl
dec
ret
in
pop
jge
insb
pop
jns
or
mov
clc
and
sub
adc
int
mov
or
pop
call
mov
mov
call
sbb
mov
lock
xor
xor
add
push
sahf
sub
ficoms
ja
sbb
outsb
enter
adc
pop
sub
pop
jecxz
faddl
xchg
xchg
call
pop
jmp
and
cld
and
cltd
xchg
cmp
cmpsl
xchg
jae
out
xor
jl
aaa
ss
les
cmp
out
pop
mov
dec
adc
das
popa
adc
mov
test
sbb
outsb
dec
nop
fldt
lcall
xor
fcmovnu
xlat
pop
dec
or
mov
lea
cmp
in
test
pop
or
icebp
inc
into
cli
mov
add
fbstp
stos
ds
xchg
sub
sub
mov
pop
in
mov
pop
inc
rcl
and
lcall
movsl
xchg
pushf
addb
jp
mov
xchg
ficoms
and
iret
shrl
push
repnz
test
mov
pop
xchg
cs
or
dec
mov
jg,pn
cmpsl
sbb
push
pop
adc
sarl
pop
or
out
stos
fldt
jp
or
fldcw
pop
imul
shlb
fstp
push
in
cld
push
iret
mov
add
sti
stos
push
repz
dec
sbb
mov
pop
ljmp
sub
xor
sub
sub
jns
inc
xchg
divb
push
push
ss
cmp
cmp
mov
jns
aaa
clc
jecxz
jae
inc
pop
fistpl
fisubrs
notb
fstps
fwait
and
mov
mov
std
ret
aam
xchg
stc
sbb
sub
adc
mov
jnp
adcb
mov
cmp
lahf
mov
dec
imul
or
xchg
adc
addr16
js
sbb
sub
sub
call
int3
lret
mov
cmp
or
sti
cmpsb
sbb
or
inc
push
popf
mov
cmpsl
pop
dec
sub
cmp
call
sbb
and
pop
in
sbb
mov
pushl
jmp
test
and
pushf
incl
or
xlat
das
sub
scas
cld
jl
ficomps
mov
dec
insl
pop
jb
mov
pop
js
inc
loop
cwtl
lods
fldt
jge
cmpsb
pop
leave
in
sub
or
mov
sub
out
out
adc
orb
pop
aam
fsubrs
cmpb
outsb
xchg
lock
int
repz
lea
push
dec
or
mov
sbb
sbb
or
das
fcoml
add
lahf
cmp
xor
outsl
lds
sub
cmpsb
mov
mov
push
cmp
pop
xchg
or
inc
in
sub
pop
in
pop
jmp
jl
cmpsl
cmp
pop
xor
xor
sub
sub
imull
pushf
in
adc
fdivrl
into
leave
jb
jno
mov
jmp
clc
ja
call
leave
lcall
pusha
sbb
mov
int
xor
add
loop
or
in
test
notl
jecxz
cmp
xchg
add
pop
jp
xchg
popf
in
mov
dec
xlat
out
lcall
enter
lds
add
scas
lcall
aam
xchg
jle
gs
add
pushf
lret
sti
push
adc
orl
rcrb
clc
psubd
out
sub
dec
call
scas
pop
xor
sbb
dec
xchg
in
fneni(8087
sahf
insb
pop
jmp
ret
fisttpl
and
cwtl
in
arpl
mov
mov
mov
add
jns
sbb
ss
cmp
loope
rolb
mov
cmp
shll
or
cmp
jle
add
lea
pop
xchg
and
fists
mov
idivl
fxch
sub
cmp
rorl
fs
in
je
clc
sbb
hlt
aam
push
daa
add
pop
stc
jl
sahf
dec
iret
lret
fdivrl
adc
jge
pop
aam
add
add
mov
dec
jb
popa
inc
xchg
xchg
fidivs
mov
mov
inc
or
xor
sbb
dec
cmp
cmp
lret
add
push
out
loop
fiadds
imul
jb
pop
pop
or
or
bound
loopne
cmc
das
xor
mov
adc
rorl
mov
xchg
movl
inc
icebp
fcoml
inc
pop
sbb
and
das
stc
shll
push
lahf
addr16
ret
xchg
lret
dec
push
insb
in
xlat
les
movsb
int
dec
std
push
or
xor
adc
addr16
sub
cwtl
pop
and
jnp
lcall
sbb
xchg
mov
insl
jae
cld
mov
pop
mov
cmc
call
xor
cmp
mov
jae
outsb
adc
aam
adc
push
push
je
xchg
lea
pop
cs
outsl
out
imul
cmp
pop
mov
addl
int
adc
mov
hlt
sbb
pop
out
arpl
inc
fnstsw
lock
mov
stos
cmpsb
stos
mov
cmc
and
cmp
out
imulb
sub
jp
out
popf
cmc
cs
lcall
and
xchg
js
imul
sbb
jo
cmp
sbb
insl
popa
add
sbb
sbb
cli
xor
shl
in
out
dec
out
cmp
or
mov
adc
cmp
mov
arpl
sub
out
pop
fcoms
popf
scas
inc
mov
test
in
call
pop
rclb
outsl
push
aas
lods
lods
ss
out
pop
lock
cmp
jo
shld
icebp
out
xor
leave
lds
shl
hlt
pop
fnstenv
div
shll
popf
sahf
adc
xchg
sub
lds
sub
gs
rcrb
cmpsb
push
pminub
je
jmp
sbbb
inc
inc
fcomps
outsl
dec
sub
lds
insl
or
or
sub
adc
xchg
jnp
sub
adc
mov
and
out
xchg
jl
xchg
xor
push
inc
fwait
pop
inc
lea
cmc
adc
addl
pop
inc
gs
sbb
daa
mov
xor
xor
fdivl
and
jnp
test
leave
jle
mov
scas
fiaddl
sub
mov
pushf
cld
sub
pop
out
sbb
les
sarl
and
mov
clc
sbb
outsl
dec
fstl
in
adc
pop
cmp
int3
data16
add
repz
outsb
jge
xor
int
dec
sub
jmp
inc
test
sub
sbb
inc
mov
sub
repz
out
push
inc
mov
cli
lea
inc
xchg
jmp
cmp
je
iret
dec
xor
lret
outsb
sub
scas
fwait
xor
jne
or
loop
xchg
es
xchg
jnp
push
call
mov
sub
xchg
push
outsb
mov
inc
dec
enter
popa
cli
test
into
mov
jecxz
stos
ja
movsl
jne
lret
push
adc
mov
cld
mov
and
xchg
sub
xchg
xchg
out
push
in
mov
iret
lods
inc
loopne
fstps
or
flds
popf
negb
and
and
xchg
into
imul
xchg
in
in
pop
jecxz
pop
imul
xchg
inc
mov
mov
nop
pop
inc
frstor
fisttps
sbb
pushf
mov
mov
outsb
xchg
mov
pop
test
fdivp
jmp
jle
push
andb
mov
or
leave
jg
bound
mov
mov
outsb
rcrb
pop
repz
mov
lret
and
std
xor
lods
inc
dec
movsb
mov
add
push
shlb
or
andl
loope
jl
lret
ljmp
cmp
cld
lds
mov
stos
push
jg
std
hlt
push
ljmp
sbb
ljmp
jne
divl
outsb
lds
stc
lret
sbb
cmc
int
dec
xchg
push
ljmp
xchg
push
adcb
dec
push
mov
cmp
inc
call
jb
push
xchg
fwait
jmp
nop
xchg
jecxz
xor
idivb
sub
cs
popf
jb
mov
cmpsb
dec
add
add
fwait
cmp
cltd
dec
pop
movntq
out
stc
mov
repnz
adc
adc
dec
fucompp
push
ret
fwait
into
dec
nop
ljmp
lret
test
imul
sub
cmp
adcb
stos
jl
outsb
sbb
pop
pop
aaa
xor
pusha
rclb
movaps
inc
jmp
push
daa
daa
adc
dec
mov
push
push
test
lea
pop
sti
popf
mov
sub
out
pop
notb
mov
loopne
fsubrs
fsubrs
dec
imul
mov
jno
mov
cs
pusha
and
jbe
xchg
pop
mull
call
sub
test
cltd
arpl
ljmp
sbb
xor
in
ja
loopne
xor
inc
popf
xchg
jne
stc
lcall
shrb
ja
movsl
cmp
ret
jb
or
fdivl
adc
call
shlb
adc
mov
jle
push
js
and
push
mov
or
dec
sbb
or
and
test
xchg
in
xchg
sub
jno
pop
into
cltd
jae
pop
movsl
xor
or
out
add
insl
scas
mov
lods
js
jns
mov
cwtl
inc
pop
mov
fdivs
ret
jbe
cmp
inc
fstpl
inc
sbb
xor
add
mov
fstpt
and
in
adc
lahf
in
imul
fidivl
push
fld
add
mov
add
dec
test
sub
mov
sub
sbb
iret
xlat
popa
xchg
inc
sarb
cmc
push
loop
outsl
mov
pop
mov
iret
repnz
ja
mov
jnp
jmp
and
or
std
push
pop
call
jbe
neg
jbe
stos
mov
in
out
divl
stos
outsl
push
adc
pop
push
test
inc
jns
or
rolb
jae
push
or
adcb
push
aas
out
scas
dec
and
cli
or
or
js
sub
add
hlt
mov
mov
outsb
dec
mov
int3
mov
lods
into
mov
roll
dec
add
test
cmc
sub
pop
xor
mov
lods
mov
mov
lahf
pop
rcll
adc
ja
sub
ss
ret
push
sub
scas
insl
mov
fs
int3
push
or
add
cmpsb
mov
test
xchg
add
fisttpl
lcall
xchg
fstl
les
dec
ret
ljmp
sbbl
jb
outsl
push
es
frstor
pop
repnz
jbe
enter
adc
mov
pushl
mov
fisubrl
out
inc
xchg
mov
stos
inc
lahf
and
mov
dec
in
or
ret
sub
rorl
movsl
jle
jmp
xlat
repz
orb
sbb
cmp
sub
mull
mov
sarb
data16
mov
cmp
or
enter
je
ffree
scas
cmpsb
mov
pop
mov
push
push
dec
adc
int3
lock
pop
dec
or
lahf
xchg
repz
icebp
mov
cmp
leave
cmp
sub
in
stc
std
cltd
daa
inc
pop
dec
or
cmp
jo
inc
mov
ret
inc
mov
in
mov
jp
jg
xor
call
sbbl
fwait
movsl
das
cltd
loope
in
lret
jne
lock
xchg
in
fs
rcrl
xor
test
in
sbbl
stos
lret
sbb
out
sub
out
mov
sub
jp
movsl
and
cmp
jg
and
outsb
cs
subb
scas
fwait
out
jbe
mov
dec
fs
dec
out
pop
and
jge
les
inc
idivl
and
and
jno
sarl
or
test
jo
sbb
or
enter
into
insb
inc
jnp
ret
enter
insb
lret
xor
nop
loopne
in
lods
dec
mov
push
dec
cli
stc
stos
push
roll
xor
xchg
pop
mov
mov
xor
xor
adc
jns
cs
xorb
fstl
lahf
cli
into
cmp
fwait
pop
lret
push
dec
xchg
fbld
cld
dec
fmuls
lods
lretw
dec
jno
xchg
push
push
stos
ret
test
xlat
xchg
lret
das
movb
xchg
cmpsb
xorb
jbe
sbb
push
outsb
jp
out
std
xchg
cmp
cmp
mov
insb
hlt
push
xor
fldt
xlat
mov
ljmp
pushf
xor
sbb
lret
and
popf
and
loope
xchg
imul
mov
xchg
call
es
std
pop
imul
and
test
leave
ret
movsl
inc
mov
xor
xacquire
mov
in
fistpl
mov
in
push
jns
orb
aam
sub
shrb
inc
mov
dec
pop
or
adc
mov
add
or
xchg
xor
fcompl
push
rorb
push
std
aam
xor
stc
stos
dec
xor
call
push
shrl
out
loopne
into
hlt
xchg
pop
or
dec
int3
mov
out
fcom
sub
fstps
sarb
xor
mov
sub
test
push
pop
pop
inc
pop
cmp
mov
sub
dec
xchg
out
pop
jg
outsl
xor
lea
hlt
es
fsubr
mov
inc
xor
and
xorb
mov
movsl
jbe
dec
adc
ljmp
stos
fcompl
pop
xchg
adc
xlat
popf
dec
addl
hlt
mov
fsub
adc
jmp
jns
idivl
mov
add
loope
jb
jns
ret
sub
xor
xor
inc
xor
fimuls
mov
push
packssdw
das
pop
pop
bound
in
xchg
mov
outsb
cmpsl
popf
mov
rorl
fidivs
and
in
pusha
dec
imull
jo
lcall
jl
ljmp
adc
push
inc
add
xor
mov
inc
pop
mov
mov
fucomp
fs
jns
mov
lock
leave
inc
inc
pop
adc
inc
leave
dec
dec
fdivs
add
js
cmp
push
mov
sub
sarl
or
repnz
in
mov
lahf
or
xlat
out
push
mov
adc
adc
outsb
lcall
rolb
aas
push
xor
stos
fcoms
js
push
mov
jb
adc
test
daa
pop
jb
mov
sbb
lcall
pop
pop
call
or
test
sbb
jg
mov
shrl
repnz
repz
loope
cli
xor
leave
imul
mov
mov
aam
dec
rorl
das
dec
push
add
xlat
cmp
inc
xchg
add
mov
cmp
push
js
jmp
xchg
pusha
mov
cmp
cmp
push
filds
xchg
addr16
or
push
outsl
fists
lds
jmp
add
inc
out
mov
add
test
movsb
cmp
es
jg
add
add
pusha
ds
xlat
jg
imul
pushf
push
leave
xchg
push
mov
int
xor
jb
dec
sub
lcall
dec
pusha
cmc
push
roll
shlb
shlb
in
sbb
lea
test
and
push
adc
pop
xchg
rclb
rorl
add
dec
popf
mov
jl
stos
out
cltd
mov
dec
xor
push
arpl
imul
cltd
xlat
mov
and
imul
shll
sub
popa
cmp
lods
pop
aam
xchg
cmp
pop
cmpsb
int
test
jg
mov
pop
add
sub
jb
push
sub
sbb
notb
jb
dec
jno
pop
cli
outsl
loop
fimull
insl
test
adc
ljmp
lea
mov
push
lds
imul
mov
les
jmp
lret
adc
mov
sub
add
inc
and
jne
shrl
sub
pop
sbb
xor
dec
sub
mov
xor
in
xchg
adc
stc
nop
xchg
xlat
xor
inc
mov
pop
pop
cli
jmp
pop
fs
jg
add
dec
imul
xor
mov
jo
or
cmp
jg
push
mov
fisubrs
cmpsl
dec
push
ficoml
int
dec
mov
inc
lods
lods
sti
gs
push
rol
shlb
adc
xor
mov
in
and
push
pop
push
jp
ret
dec
pop
hlt
lret
adc
hlt
inc
xor
mov
inc
nop
ljmp
pop
in
push
mov
push
rclb
sti
fwait
loope
lock
adc
outsb
xor
adc
push
insl
sbb
mov
or
jg
les
mov
lahf
cmp
fucomi
nop
call
clc
aam
cli
out
dec
stc
pop
mov
xor
sti
lcall
jns
aaa
add
ljmp
ret
jp
pushf
dec
add
fwait
xchg
mov
inc
pusha
sub
std
inc
or
mov
cli
push
push
cmpsl
imul
scas
lea
fidivl
mov
fisubrl
cmpsl
pop
inc
add
mov
xchg
sahf
fiadds
xchg
daa
inc
jo
popa
cmc
in
icebp
mov
in
sysenter
and
push
rclb
jae
hlt
add
rorl
xor
xchg
iret
outsl
bound
lods
and
xchg
xchg
aad
inc
push
mov
gs
adc
cli
xor
rol
lcall
jmp
cwtl
shlb
adc
inc
cmp
out
popf
cmp
add
or
or
push
sub
or
lods
pop
push
dec
adc
push
pop
out
dec
stos
insb
or
or
pop
rclb
in
mov
xchg
bound
mov
adc
jg
xchg
aaa
ljmp
or
pop
cmp
sbb
loope
and
cwtl
xor
push
out
jns
arpl
fdivrp
stos
mov
xlat
dec
nop
dec
inc
ret
inc
xor
or
std
jmp
xor
fwait
xchg
or
inc
jns
outsl
xor
or
daa
test
xchg
sarb
rol
push
inc
cmpsl
xchg
call
test
fcmovu
xchg
pusha
les
mov
cmc
rcrl
adc
sub
xor
or
icebp
incb
stos
sbb
fstpl
add
inc
push
adc
addr16
test
ds
and
pop
scas
mov
cmp
jae
sahf
test
repz
fldt
push
adc
xchg
aam
adc
and
push
jg
loopne
push
popf
fscale
xchg
mov
mov
jmp
imull
xlat
dec
and
test
ss
out
push
mov
push
adc
mov
das
push
movsb
shr
jbe
leave
jbe
lock
or
or
or
mov
je
nop
jae
roll
fmull
lret
mov
out
xchg
loope
inc
hlt
shll
xor
jo
adc
xor
shlb
ja
and
test
push
lahf
imul
repz
ret
lret
rolb
ja
js
and
lods
enter
idivl
lods
push
lds
mov
leave
test
mov
xchg
dec
loopne
repnz
lock
add
inc
rcr
sarl
mov
ds
cmc
sbb
mov
inc
scas
jb
aas
insb
imul
push
test
dec
aad
aas
jecxz
out
ds
inc
cld
mov
ret
xchg
fsub
popa
xlat
stc
stos
insb
jno
push
leave
test
sahf
stc
mov
imull
jb
mov
fdivl
lret
or
in
jnp
clc
cmp
data16
shlb
xchg
fs
pop
xlat
cmpsl
rcl
push
and
xorl
adc
xlat
and
jo
adc
pop
sbb
sbb
out
dec
dec
xor
inc
add
jmp
mov
stos
adc
shr
pop
aas
adc
xchg
sub
pop
not
shrb
lods
lret
pop
aaa
sbb
pop
repnz
nop
cmp
int
sub
ja
sub
pushf
cmc
mov
mov
fmuls
rcrl
ljmp
xchg
gs
je
or
sbb
and
or
mov
fisubs
push
repz
sbb
and
xor
popa
aaa
enter
lahf
mov
into
cs
xor
mov
dec
fistpl
adc
fwait
mov
decl
sub
vminss
xchg
sub
popl
imulb
aam
push
sub
jge
mov
mov
or
mov
dec
hlt
jns
cmpsl
pop
add
ficoml
sub
add
mov
sub
xor
mov
pushf
lahf
jmp
mov
dec
loop
and
stc
out
push
stc
movl
inc
push
js
xor
push
cld
adc
mov
and
pop
and
adc
sbbb
xchg
or
or
cmp
xchg
stc
dec
loopne
inc
jmp
sidtw
adc
mov
jb
mov
call
sub
mov
cmp
insl
jmp
mov
ret
push
pop
jne
xchg
pop
lret
adc
leave
loope
movl
outsb
out
mov
insl
or
jnp
jp
and
test
cltd
cwtl
sbb
adc
and
sbb
xchg
jmp
mov
push
mov
lock
movsw
cli
out
lods
pop
dec
inc
outsb
pushaw
pop
test
mov
push
fsubrl
fidivrl
test
rcr
sbb
rorb
mov
push
push
in
add
push
cld
mov
cmp
or
roll
imull
and
ds
out
adc
xchg
shlb
aas
push
mov
adc
jp
add
je
add
outsb
mov
and
mov
insl
mov
mov
rcrl
rclb
mov
add
cwtl
sub
out
xchg
fcomi
xchg
das
hlt
mov
fistpl
xor
icebp
leave
xor
sub
out
sbb
mov
cmp
cltd
xor
cmpsl
fcmovb
test
lods
mov
adc
lock
je
pop
adc
ret
iret
imul
adcl
add
sub
mov
jmp
jge
rcl
mov
jb
xchg
and
pop
arpl
repz
inc
push
lret
loope
mov
ror
xor
leave
cmp
push
fxch
dec
out
mov
fiadds
cltd
gs
mov
es
cmp
jp
push
jl
movsl
sbb
adc
shrb
mov
push
push
push
or
and
sar
lods
inc
gs
data16
mov
gs
inc
in
dec
or
in
in
and
sub
stos
pop
push
lcall
fbstp
xchg
imul
data16
out
mov
jo
jmp
test
xor
stc
jg
mov
mov
sbb
xor
lods
push
and
hlt
movsb
sub
loope
cli
das
and
cmp
inc
dec
bound
cmpsl
ja
sbb
lahf
push
pop
fisttpll
test
sub
fidivrl
shrb
pop
mov
repz
jmp
mov
xchg
mov
aad
jae
cmp
sti
repz
xchg
push
test
add
cmp
pop
add
fisttps
cwtl
cld
in
sbb
lds
jle
inc
lcall
pop
dec
in
sti
push
or
movsl
dec
sub
test
pop
mov
jecxz
xor
pop
mov
sbb
xor
ret
adc
cwtl
out
xor
pushl
fldcw
add
sti
movsl
in
mov
out
nop
imul
out
inc
sub
ds
mov
push
jp
lret
insl
inc
cmp
lock
call
add
popa
add
mov
push
fwait
addr16
sti
mov
in
jl
push
pusha
jns
lock
jbe
push
lock
xchg
xor
movsb
into
aad
adcb
loopne
mov
ret
pop
add
shlb
icebp
mov
mov
inc
mov
add
xchg
lret
dec
add
das
pop
clc
ds
push
andb
aaa
arpl
aam
lret
sub
xorb
push
enter
repnz
into
movsb
lea
mov
inc
lods
xchg
test
xchg
pop
mov
jecxz
mov
movsl
mov
sbb
int
mov
ja
hlt
hlt
push
fnstsw
sbb
xchg
mov
dec
rclb
loope
fcmovbe
mov
xor
inc
dec
shlb
dec
movzbl
imul
outsl
nop
sahf
mov
lcall
aad
and
pop
rcr
inc
xor
outsl
push
ret
data16
cmpsb
and
popa
sbb
mov
or
cmp
pop
lret
add
push
push
aas
popa
std
in
cmpsb
aaa
xchg
out
nop
push
call
pop
push
add
pop
movl
dec
mov
push
je
shlb
rorl
test
mov
in
cmp
daa
xchg
pop
fdivrl
int
cld
jo
xchg
push
inc
iret
int3
add
int
into
xchg
push
adc
dec
and
loopne
xor
mov
jbe
push
or
iret
call
lea
fs
lahf
lahf
pop
lcall
xlat
int3
in
inc
xchg
lret
push
jp
mov
fnstenv
jp
dec
sub
scas
pop
add
leave
fisubrs
mov
push
mov
jno
xor
push
add
out
repnz
sbb
or
jp
ljmp
fdivrs
sbb
imull
push
xor
lret
push
mov
mov
das
in
mov
icebp
pop
loop
ds
inc
jo
popa
fcomip
arpl
fdivrl
rcll
inc
push
inc
push
in
popf
pop
aam
pop
addr16
imul
push
lea
std
loop,pt
add
xchg
ljmp
js
loop
lods
mov
mov
cltd
pushf
addb
ret
cs
jb
lods
fsubl
pusha
jbe
mov
cli
xchg
xor
mov
sbb
jg
fistpll
adc
dec
pop
jns
inc
xchg
or
test
sti
test
xchg
into
cmp
push
int
cmp
cltd
sub
stos
repnz
push
fsubrs
mov
xchg
shlb
and
pop
xchg
lret
xchg
or
hlt
mov
sub
roll
pop
jecxz
lcall
scas
sub
arpl
push
iret
xchg
cs
mov
inc
aam
outsl
fmulp
sahf
pop
dec
aam
stos
dec
test
test
inc
jno
aad
jg
aad
sbb
fbld
aad
xor
mov
stc
cld
inc
repnz
xchg
scas
loope
inc
dec
push
jne
pop
mov
test
int
lea
sub
sbb
mov
xor
mov
inc
mov
fmuls
fsubl
dec
mov
movsl
sub
shll
scas
in
add
adc
add
loopew
cmp
subb
int3
adc
outsb
in
pop
aam
je
sub
mov
add
popf
push
outsb
cmp
xor
jne
mov
sahf
jb
inc
and
es
outsb
sub
dec
ljmp
sub
push
dec
pop
dec
in
cmp
aam
insl
xchg
lret
mov
scas
dec
outsl
sbb
aam
push
mov
jae
jge
popl
mov
sub
sahf
orl
mov
pushf
sarb
adc
orb
xchg
orl
or
push
xor
cltd
int3
sub
xchg
sub
lock
roll
jp
sbbl
xchg
or
mov
mov
ret
add
clc
mov
lods
test
xor
or
cmpb
mov
inc
xor
pop
dec
xlat
test
sub
aam
dec
lods
les
je
jb
data16
stos
mov
xor
xor
push
loope
or
aam
enter
and
out
lret
shl
call
test
mov
inc
adc
inc
fistpll
mov
dec
jbe
repz
mov
inc
shl
cmpsl
push
push
jo
xchg
mov
xor
xchg
ljmp
pop
sub
iret
xchg
test
test
scas
xor
pop
imul
xor
jno
pop
adc
inc
push
mov
popa
ja
xchg
data16
scas
outsl
popa
xor
inc
fwait
rclb
xchg
es
sbb
jmp
cmc
xor
xor
adc
dec
insl
movsl
lret
ret
cmc
cmp
data16
bound
imul
or
xchg
movsl
and
movsb
mov
enter
xor
xchg
cltd
pop
int
addl
adc
xchg
pop
stos
xlat
fisubrs
xchg
clc
call
subb
and
movsb
imul
imul
in
mov
call
int
xchg
mov
add
mov
xor
cmp
aad
mov
pop
fstps
insb
bound
cmc
leave
inc
sbb
and
negb
icebp
fisttpl
pop
cmp
popa
aaa
lods
ret
xchg
push
lcall
sbb
sbb
mov
fwait
mov
sub
sbbl
cmc
inc
je
or
mov
dec
cmp
jne
shlb
adc
ficomps
repz
mov
cltd
jg
inc
imul
iret
cmp
into
push
popf
scas
js
dec
test
fs
insl
mov
out
dec
dec
repnz
mov
push
ss
xlat
sbb
sbb
gs
stos
xlat
sub
jno
stos
testb
loop
out
sbb
mov
xor
add
movsb
pop
sbb
pop
xchg
jno
cli
fldenv
xchg
daa
fstps
xor
cmp
arpl
mov
jmp
outsb
int3
fwait
add
lds
call
stc
stos
shl
imul
mov
cmc
mov
jnp
rol
push
add
fbstp
int3
sub
mov
add
stos
shlb
sbb
xchg
and
sbb
inc
pop
mov
mov
testb
dec
idivl
jl
sub
pop
cmpsb
pop
pusha
stc
cmpsl
ljmp
je
dec
and
bound
mov
test
pop
out
adc
xchg
xlat
aaa
in
inc
jo
and
insl
mov
add
mov
mov
lds
mov
cmp
out
or
dec
mov
sahf
xor
pop
sbb
xchg
loopne
mov
mov
or
clc
xchg
and
mov
icebp
adc
int
sub
mov
cmp
jmp
test
dec
das
lea
jle
cmp
cwtl
hlt
in
inc
sbb
dec
mov
outsl
sbb
aas
out
push
andb
push
test
mov
repz
hlt
add
cmp
mov
imul
pop
or
inc
xchg
sbb
popl
inc
cmc
sahf
cmp
push
pop
mov
cltd
in
sub
cli
cmpsl
inc
cmp
jg
jmp
sbb
mov
push
sbb
fsubr
scas
inc
idiv
mov
cwtl
push
fsubr
xchg
outsl
sbb
arpl
add
leave
dec
popf
je
js
jae
push
dec
lods
shlb
mov
js
rol
fisttps
or
and
sbbl
and
dec
jne
std
nop
and
lods
sbb
push
in
jno
cmc
das
pop
sub
and
popa
adcb
pop
cmp
xlat
imul
mov
or
rcrl
fiadds
test
insb
sub
mov
xchg
shrb
fldt
push
sbb
inc
mov
cmp
and
dec
pop
cmc
pusha
xorl
xchg
cmp
mov
add
pop
shll
mov
lods
call
idivb
mov
xor
stos
ss
add
divl
lcall
popf
ja
ror
or
cltd
loopne
mov
frstor
pop
js
mov
lods
orl
cmp
push
sub
stc
fidivrs
pop
imul
jno
jo
xchg
cld
push
inc
aad
dec
hlt
movsl
sbb
jnp
or
repnz
outsl
cmpsb
xchg
lahf
xchg
jo
repz
das
gs
out
mov
mov
add
xor
roll
jge
jns
dec
inc
addl
jo
push
and
xchg
jecxz
dec
jo
loopne
adc
adc
andb
lods
push
outsb
cwtl
nop
test
cmp
pusha
ds
loop
jns
pop
mov
adc
imul
lock
out
mov
out
jae
push
and
push
loop
jge
jge
test
push
adc
dec
dec
and
lods
or
or
aam
fldl
mov
js
push
sbb
mov
dec
cltd
in
xor
mov
imul
lods
outsl
out
les
imul
inc
fistpl
imul
lret
arpl
sha256msg1
les
arpl
inc
and
lds
shrb
fwait
movsb
sub
mov
or
stos
push
ret
cmp
mov
fisubl
and
mov
mov
mov
xor
std
add
adc
std
push
xchg
mov
jbe
lods
xor
mov
pop
arpl
das
test
shrl
iret
mov
in
pushf
jmp
insl
mov
je
xchg
shlb
add
pop
inc
movsl
or
lcall
sti
bound
mov
dec
inc
jno
ret
pop
arpl
out
mov
pop
push
adc
and
cs
data16
jecxz
mov
mov
or
mov
fsubrl
mov
and
add
mov
addr16
popf
data16
std
inc
pop
xchg
cli
xor
aad
cmpsl
stos
aaa
lods
dec
fldenv
xlat
insb
fdivr
gs
shlb
cmpsb
fs
push
cmc
outsb
add
shll
clc
out
adc
sub
mov
and
in
imul
in
in
pop
mov
pop
push
mov
pop
xor
dec
stos
and
adcl
push
or
stos
xor
and
and
js
mov
ss
cli
lods
popf
les
fnstcw
add
clc
adc
cs
mov
mov
shll
fstl
push
data16
push
movsb
ljmp
leave
adc
mov
xchg
insb
and
rcr
ret
lahf
lcall
andb
notl
and
cmp
dec
fmull
add
adc
sbb
lret
cwtl
rol
sbb
sub
mov
fildl
add
test
test
into
cltd
mov
repnz
nop
xor
pop
ret
pop
mov
cmp
inc
shrb
adc
scas
xchg
mov
rcrb
dec
mov
cmpsl
test
jbe
dec
xor
dec
into
xchg
iret
cmp
mov
cmpsb
xchg
test
pop
push
sbb
inc
jae
scas
ljmp
js
rcl
cmp
imul
xchg
inc
mov
sub
jmp
mov
dec
or
xlat
add
into
push
inc
jns
movsl
in
shrl
jns
or
cmp
dec
std
dec
mov
xor
dec
cmp
loopne
les
call
sub
fwait
int
inc
cmp
add
mov
xchg
jb
cmpsb
lods
sbb
arpl
cmpsb
fidivl
mov
shr
mov
push
lods
out
xor
lea
aas
into
push
adc
mov
xor
int3
hlt
push
pop
adc
sahf
outsb
fdivs
push
mov
data16
pop
cmp
sbb
mov
sub
jmp
fbstp
adc
fst
cmp
and
dec
scas
nop
dec
sub
push
cmp
sub
or
aad
cld
add
add
push
sub
outsl
imul
iret
jns
xchg
dec
inc
adc
dec
xchg
cli
inc
mov
mov
cli
dec
outsl
inc
and
ljmp
loope
dec
or
mov
loop
inc
jnp
into
jns
dec
push
jmp
and
icebp
outsb
mov
jmp
rcrb
push
out
pop
xor
lock
cltd
and
imul
add
jb
imull
push
add
add
loop
adc
loopne
dec
lods
std
inc
out
xchg
jmp
push
mov
pusha
pushf
lock
push
dec
pop
xor
out
pop
stc
mov
add
sbb
and
lods
repnz
lret
dec
pop
add
sar
jmp
xchg
mov
push
lods
pop
imul
xchg
mulb
add
inc
test
jmp
xlat
pop
movsb
pop
test
sub
fdivl
or
iret
shlb
mov
in
jbe
xor
pop
lea
mov
xchg
loopne
ss
popf
js
mov
push
clc
popa
repz
push
gs
dec
mov
pop
dec
mov
pushf
das
into
lock
aaa
or
xor
jp
mov
pop
xor
lock
fld
cwtl
push
repnz
fwait
les
lcall
jp
test
jmp
lods
pop
ja
sub
lret
sbb
scas
jne
leave
shll
jnp
popa
aad
dec
aam
hlt
jp
xor
push
mov
dec
int
fisubs
cmp
xor
hlt
adc
push
xor
xor
inc
mov
push
cmp
int3
mov
insb
or
out
add
cmp
jbe
xor
jno
dec
adcb
dec
lret
mov
movsl
out
mov
std
dec
push
movsb
gs
fcoml
mov
mov
cmpsl
test
jnp
push
or
insl
mov
cmc
es
xlat
lcall
mov
sub
or
cli
mov
into
dec
mov
fwait
aas
or
or
or
int3
in
stos
mov
xchg
sbb
lds
shl
mov
jle
imul
lods
push
sbb
xor
and
push
data16
sbbl
xlat
mov
mov
mov
pop
std
rcrb
je
mov
add
cli
testl
fsub
push
inc
scas
out
dec
fmuls
mov
insl
mov
sub
xor
xchg
or
clc
cmp
push
push
lahf
lahf
flds
mov
sub
bound
inc
std
shrl
lcall
scas
xchg
test
jg
fnstsw
pop
xchg
outsl
sti
repnz
arpl
mov
vmovdqu
dec
dec
dec
xchg
push
ret
jge
dec
cmc
shrl
xchg
mov
jb
loop
or
cmp
push
cmpsl
lea
xor
loopne
loope
xchg
sub
push
js
add
jl
rcll
sub
popf
jp
or
stos
out
inc
adc
lods
pop
dec
pusha
pop
and
jge
out
nop
pop
adc
dec
ss
push
rcrl
xchg
push
jl
or
cmpb
or
cs
icebp
xchg
inc
in
out
sub
mov
addr16
xchg
fcoml
mov
push
or
xor
and
jns
dec
and
fwait
fwait
mov
push
jbe
lds
push
mov
stos
packsswb
jg
xchg
pop
sbb
pop
and
jns
js
dec
mov
shl
xchg
pop
out
fsubl
pop
or
xor
mov
jmp
outsb
rcl
loope
gs
ljmp
shrb
mov
lret
dec
psllq
fistl
mov
icebp
mov
adc
cmpsl
gs
dec
inc
add
push
cmp
pop
ja
adc
ja
mov
dec
leave
ficomps
add
cmp
add
nop
adc
mov
cmpsl
data16
fwait
loope
xchg
inc
std
lahf
mov
psrld
jno
pushf
stos
ds
or
inc
rolb
jnp
mov
add
xchg
andl
mov
pop
stc
pop
fs
shll
mov
jg
lods
cld
push
mov
xor
jbe
bound
adc
loop
das
imul
ja
popf
stc
flds
xchg
mov
lahf
jae
sbb
xchg
push
idivl
and
adc
les
loop
pop
mov
cwtl
and
sub
mov
cli
pop
pusha
es
popf
and
enter
movsb
mov
xor
ficoml
mov
ja
jp
aam
xor
mov
lock
test
aad
add
pop
and
test
decl
jae
dec
scas
movsl
pop
in
outsl
pop
outsl
bound
and
jle
aaa
mov
mov
sub
stos
push
hlt
mov
cmp
aas
shr
je
pop
out
xchg
inc
push
movsl
js
jno
aaa
stos
pusha
jns
loop
add
sbb
cmpsb
fmuls
negb
pop
imul
loop
sub
xchg
jbe
push
dec
mov
test
dec
je
sahf
outsl
pop
xchg
enter
xor
fs
inc
leave
lds
cltd
cmp
pop
arpl
mov
addb
xchg
inc
xorl
or
dec
std
and
inc
repz
fstpt
mov
mov
sti
push
jne
dec
test
nop
pushf
sarl
je
out
jl
inc
xor
faddl
inc
addl
mov
shlb
xchg
in
mul
data16
mov
inc
lods
inc
aaa
and
sub
xor
mov
mov
arpl
cmp
and
in
mov
jae
cmp
into
in
fwait
mov
ret
int
dec
push
loope
iret
lretw
xor
loop
pop
lcall
add
jno
xchg
mov
stos
push
pop
jns,pn
or
push
fnstcw
lret
test
mov
std
lcall
nop
cmpsb
movsl
ret
mov
lods
push
cltd
push
push
ja
pop
push
xor
fwait
xchg
shll
mov
mov
shll
jle
outsl
loop
ret
add
in
insb
scas
repnz
lret
inc
cltd
xchg
push
imul
faddl
xchg
ss
call
adc
add
jo
jnp
icebp
mov
inc
and
push
sub
fwait
xchg
std
cmpsl
sar
cmp
stos
mov
mov
sub
xchg
stc
loopne
sub
mov
icebp
imul
add
mov
or
inc
adc
loopne
insl
sahf
leave
mov
int3
repnz
adc
xchg
in
sub
scas
pusha
mov
mov
pop
mov
inc
mov
negb
or
jg
loopne
test
push
and
xchg
fisttps
cmp
mov
push
mov
lret
shlb
push
sbb
outsl
sbb
cmc
dec
cltd
xchg
sbb
ss
mov
pop
sub
aaa
icebp
dec
pop
aad
jbe
jg
imul
pop
popf
jne
mov
jae
cli
add
in
pop
jnp
mov
and
ja
xor
idivb
cld
pop
mov
jno
jle
test
push
aaa
fiadds
jp
jg
sbb
test
xor
sub
popf
mov
aam
js
shl
xor
pop
or
push
adc
fbld
push
jo
xor
lcall
into
cmpsb
sbb
xor
jl
cmp
sti
sub
mov
mov
push
movsl
pop
in
dec
fs
inc
into
cs
jl
out
bound
xchg
mov
imul
dec
mov
inc
repz
and
dec
ror
dec
pinsrw
sub
dec
lds
xorl
mov
shll
fucomip
aam
out
imul
sbb
enter
ss
int3
jo
leave
cmc
clc
roll
lret
pop
imul
subb
call
iret
sub
mov
lods
dec
push
pop
dec
push
mov
movsb
lret
mov
xor
in
and
ret
out
jo
inc
add
mov
hlt
cmc
pop
imul
push
mov
push
or
xor
movnti
and
faddl
movl
sub
pop
js
test
idivl
sbb
add
sub
repnz
mov
xor
cmp
mov
sub
int
jnp
pop
outsl
out
pop
pop
call
lock
nop
add
mov
sbb
adc
call
add
daa
add
xor
dec
std
subb
dec
iret
mov
dec
enter
lea
cmp
cmp
lcall
sbb
inc
mov
fists
mov
mov
xchg
adc
fsubl
push
add
int
adc
add
push
jnp
dec
push
inc
sahf
aam
addr16
inc
scas
mov
mov
xor
sub
jns
mov
ljmp
mov
add
test
sbb
mov
popa
out
mov
loope
push
repnz
jae
xor
fucomi
out
cmpsl
cs
pushf
xchg
jb
pop
xlat
call
jne
jae
stos
into
pop
lret
in
or
pop
mov
lods
sbb
sub
test
out
sti
push
xlat
aam
in
fisttpll
mov
mov
shl
in
xchg
addr16
or
jb
insl
lods
movsb
mov
sbb
loope
cmp
daa
mov
dec
adcl
mov
or
loop
into
adc
xchg
test
lret
pop
mov
xor
mov
pop
sub
cwtl
in
mov
sub
pop
outsl
out
aam
test
lods
or
fwait
sub
pop
xchg
lock
sub
xor
je
fistps
xor
test
out
jecxz
add
call
outsb
jo
jno
adc
cmp
jb
jne
scas
gs
call
jp
nop
int3
lret
jecxz
cwtl
push
lds
mov
fadds
or
test
sub
adc
adc
push
les
divl
mov
push
cmp
and
jg
orl
push
stos
scas
and
mov
dec
jbe
fs
mov
cmpsl
sar
arpl
sub
mov
jb,pn
sub
mov
add
mov
adc
mov
mov
lea
les
mov
in
mov
jl
mov
loope
cmp
xor
movb
or
fisttpll
cmp
sub
mov
cmc
popf
sub
sub
inc
sub
adc
lret
push
xchg
pop
scas
cmpsb
xor
cmp
or
outsl
mov
in
and
fbstp
out
push
popf
fistpll
aaa
loop
sub
ret
aaa
push
jb
shrb
push
mov
dec
jle
ss
es
inc
mov
sub
lods
movsl
test
adc
jecxz
mov
jae
cli
test
mov
xor
mov
pop
push
pop
icebp
jo
fwait
out
jne
push
stc
add
aam
ret
and
insb
sbb
mov
jo
xorb
and
pop
mov
pushf
mov
dec
xor
dec
mov
popa
lea
into
xchg
loope
into
add
and
xor
lret
xor
pop
pop
cmpb
pop
inc
clc
mov
sub
loopne
mov
cld
inc
lret
insl
out
mov
arpl
mov
fdivrs
inc
push
fwait
push
movsb
das
fcoml
cmp
aad
xor
sub
xchg
mov
adc
cmp
in
sub
jp
lods
addl
aad
mov
sub
pusha
dec
pop
mov
dec
sub
inc
sub
mov
push
sub
mov
pop
cmpl
out
ljmp
sub
or
sub
dec
jle
test
js
add
bound
inc
adc
add
mov
daa
xchg
cli
outsl
loopne
adc
lods
add
sahf
sahf
mov
dec
sub
push
push
idivl
or
addb
rcrl
insb
dec
cld
xor
enter
pop
push
xchg
js
push
js
mov
fldl
xchg
mov
sbbb
jbe
lret
mov
bound
sahf
dec
inc
je
inc
add
sub
in
push
xor
push
rcrl
sarl
xor
inc
notl
stos
jbe
jbe
cltd
sbb
xlat
mov
push
cmpsb
mov
rcrb
mov
idivl
adc
fwait
int
fldcw
pop
lahf
pop
nop
out
testb
mov
mov
testl
int
sbb
into
jno
test
loope
mov
cmc
call
push
jecxz
ds
sbb
inc
aam
sub
push
or
push
jno
dec
inc
xchg
aas
push
das
add
jle
mov
mov
jecxz
xchg
out
gs
es
push
cmpl
test
dec
xchg
jae
jl
dec
lcall
adc
fwait
xchg
sbb
jb
dec
scas
inc
popa
sbb
nop
xchg
mov
cmp
nop
and
notl
lock
mov
sbb
or
mov
add
push
rclb
mov
dec
in
call
pop
mov
mov
cmp
stos
pop
mov
inc
test
mov
inc
leave
push
push
cmp
pop
in
loop
gs
ror
adc
nop
je
setns
fnstenv
mov
in
push
xor
dec
jno
mov
xlat
jmp
jae
ljmp
addr16
jmp
mov
push
aam
mov
ret
pop
jno
pop
inc
dec
sub
jns
cmp
xchg
sbb
out
sti
scas
jae
xor
sbb
jb
jl
lcall
pop
mov
adc
xor
cmc
inc
mov
movsl
int
pop
test
push
loopne
rcl
add
in
and
cmc
mov
push
xor
or
test
push
add
ss
add
xor
jl
sub
mov
das
push
out
clc
cmp
cmc
arpl
out
xor
pop
fwait
jmp
repnz
jns
out
dec
inc
pusha
inc
or
xchg
out
dec
popa
push
jecxz
arpl
and
stc
icebp
sbb
xchg
xor
data16
jge
jnp
fists
xor
jns
or
addb
in
lods
aam
call
call
gs
xor
lods
insl
jnp
pop
cld
cmp
jp
sub
dec
ja
sbb
ja
fisttpll
cmp
cmp
sahf
je
das
loope
inc
js
cmpl
clc
rcrb
repz
lcall
and
andb
lea
insl
pop
pop
push
sti
dec
dec
sub
loopne
scas
mov
push
push
adc
mov
insl
pop
fwait
jl
das
out
dec
bound
cmpsl
push
je
in
xchg
adc
scas
addb
popf
mov
andb
sar
xlat
and
ds
dec
pop
pop
adcb
repz
mov
bound
lret
pop
inc
lcall
adc
lds
jo
rorb
mov
xlat
test
jnp
xchg
cmp
outsl
fisubs
stos
mov
fnstsw
imul
popa
pop
in
mov
inc
cmp
subl
iret
test
stc
insb
in
addb
pop
sub
adc
xor
flds
push
adc
pop
enter
mov
jecxz
pop
pop
cmpl
cmp
pop
fistl
lock
jns
into
ljmp
mov
jmp
sarl
rclb
shrb
xchg
fs
sub
xchg
mov
push
inc
sbb
out
sbb
je
push
fsub
sarb
nop
cltd
bound
aas
ffree
jno
daa
test
daa
cli
mov
xchg
mov
inc
incl
sub
cmc
cmp
lods
call
je
test
sbb
push
inc
in
mov
fstp
call
dec
xor
lahf
mov
jg
sahf
xchg
mov
add
sahf
cmp
jae
pop
enter
push
popf
pop
in
inc
in
ret
loope
jns
dec
mov
insl
repnz
xor
sub
or
or
dec
cmpsb
mov
stos
or
shll
dec
jno
jle
jmp
mov
sbb
les
clc
repnz
scas
xchg
push
jnp
jb
jecxz
cmp
xchg
cld
pop
sbb
sub
add
rcll
pop
out
int3
out
xchg
out
add
dec
jmp
aas
mov
xlat
hlt
test
or
in
cld
insb
xor
clc
loope
iret
scas
push
adc
scas
mov
and
es
bound
cmpsb
and
scas
aaa
jp
xchg
xlat
test
ljmp
into
jp
push
jbe
jle
jne
push
dec
fdiv
shll
sbb
pop
stos
xchg
sub
test
negb
shll
ja
and
xor
push
cmp
mov
lea
xchg
push
lods
addb
loop
fisttpl
loope
xchg
out
dec
repz
push
into
jp
jg
pop
xchg
out
mov
sarl
xorb
dec
lcall
enter
or
gs
add
dec
jmp
cltd
into
cmpsl
aas
pop
addr16
cli
jmp
or
add
mov
scas
pushf
frstor
fwait
in
mov
pusha
insb
cmp
out
mov
enter
pop
cmp
stos
inc
iret
rcll
int
push
cmp
xchg
cld
cmpsl
arpl
arpl
jle
rolb
fs
imul
pop
jns
xchg
in
cmpsl
pop
sbb
lods
push
sbb
pop
push
ss
outsb
sbb
cld
pop
push
and
lods
dec
lcall
mov
sub
test
cmp
jp
fimull
out
loope
les
adc
mov
sbb
ret
int3
jle
sbb
xchg
pop
dec
int
out
adc
cmp
sub
pop
mov
or
cmp
aam
pop
das
inc
scas
in
call
cltd
addl
jmp
mov
test
jmp
dec
jbe
dec
push
fidivrl
add
inc
loope
pop
aam
seta
std
pop
mov
sti
in
mov
in
iret
mov
loope
or
bound
stos
mov
pop
mov
bound
les
int3
push
sub
inc
cmp
cmp
sub
sub
and
add
clc
push
popa
sbb
mov
mov
insl
sbb
mov
sarl
icebp
mov
mov
aam
sbb
xlat
xchg
mov
sub
fists
pushf
in
pop
aaa
add
sub
sbb
hlt
xorl
sub
in
adc
sti
mov
or
sbb
mov
test
ss
shll
mov
push
push
cmp
imul
add
cmp
into
push
lods
adc
lcall
sub
mov
mov
jns
nop
test
pop
enter
fs
in
fs
jge
hlt
mov
add
lcall
cs
sahf
out
rorb
gs
js
cmp
in
xlat
enter
jg
or
push
mov
xor
outsl
je
lods
push
jb
mov
push
out
cmp
je
lret
cld
sbbl
sbb
les
leave
pop
stos
lret
or
push
or
repz
sbb
data16
or
push
jge
fwait
pop
in
movsb
jp
out
test
cld
sub
lret
cmc
insb
sahf
xor
push
call
sbbb
pusha
xchg
pop
fs
movsl
es
inc
xchg
jmp
out
pop
scas
mov
and
fnsave
cwtl
lods
popa
scas
jl
dec
jo
les
push
xlat
sarl
cmpsl
push
sbb
push
cmp
popf
mov
insb
aad
testl
mov
mov
and
jo
call
adc
fidivs
aam
pop
jg
fcompl
out
imul
jbe
sbb
xchg
stos
out
addr16
mov
mov
pop
pop
xor
enter
pop
xchg
cmp
aam
or
or
sbb
lods
push
pop
xchg
es
or
callw
test
adc
jge
push
imul
mov
in
mov
jne
xorl
mov
adc
xchg
dec
scas
cmp
dec
cli
dec
mov
ficoml
mov
enter
xor
testb
scas
idivl
push
fisubrl
mov
sub
xor
mov
xor
aaa
mov
mov
jae
imul
popa
mov
inc
outsb
xchg
test
lret
insb
adc
xor
or
inc
bound
sti
addr16
xor
xchg
test
xor
xor
add
mov
jbe
or
add
clc
xchg
sbb
xlat
dec
sti
lods
cltd
gs
into
and
or
dec
clc
mov
mov
xchg
pop
xor
mov
cmpsb
loop
daa
lock
push
xchg
mov
ret
repnz
cmp
popa
ss
pushf
data16
add
cmpb
bound
cld
jne
jno
mov
adc
les
insb
add
sub
sub
jns
mov
lahf
or
aaa
or
pop
fcmovb
jne
push
pop
adc
xor
fcmove
mov
sub
xor
xor
divps
sub
mov
or
daa
dec
stos
inc
sbb
out
inc
pop
mov
sti
popa
icebp
mov
xor
jno
int3
das
xor
pop
push
dec
push
fldl
seta
lcall
cmp
jmp
lret
adc
pop
push
scas
ret
add
testb
dec
jecxz
or
push
shl
dec
push
cmp
jo
adc
jno
in
ljmp
jmp
notl
sahf
pop
pop
data16
cs
jl
loop
scas
mov
add
mulb
mov
mov
cli
popf
lea
je
test
pusha
mov
or
call
jge
add
loop
or
mov
mov
mov
lock
in
rcr
xchg
cmp
pop
mov
push
nop
pop
js
rclb
jb
lret
push
movsl
mov
movsl
popf
and
imul
fimuls
mov
bound
xor
or
push
or
push
pop
clc
test
dec
or
push
cmc
insl
rcl
or
shlb
inc
lods
outsl
or
xchg
push
cs
adc
fdiv
xor
lcall
pop
out
iret
les
out
rclb
mov
add
insb
in
sbb
stos
in
shrb
ljmp
jge
das
mov
mov
push
shlb
lret
add
mov
xchg
push
imul
mov
fsubs
ret
xor
push
popa
fstps
lods
mov
out
fnstenv
mov
mov
idivb
xor
sbb
sarb
cs
addr16
adc
cmp
lea
dec
inc
lret
insl
pop
pop
adc
test
out
test
mov
pop
cmpsb
inc
sbb
out
fs
xor
outsl
fs
aad
sub
loopne
imul
or
imul
mov
inc
mov
mov
call
loop
lds
cmpsl
fldt
pop
inc
and
fstl
dec
shll
cltd
inc
xor
mov
sbb
mov
xor
jecxz
add
in
xchg
aad
fs
jo
lods
popa
leave
xor
and
clc
add
sbb
repnz
cmpsb
pop
je
js
sub
aas
mov
mov
subb
adc
loopne
jne
pop
std
por
mov
lahf
mov
jae
sti
inc
insl
outsl
mov
mov
xchg
out
xchg
add
xchg
scas
jno
lea
scas
mov
mov
lahf
addr16
sub
xlat
in
popa
sbb
push
loop
add
add
inc
sub
and
pop
pop
fsubl
scas
btr
push
lahf
mov
stos
into
and
out
pop
nop
negb
lahf
fmull
cmc
in
mov
pop
cmpsl
pop
pop
jno
xchg
xchg
pop
adcl
mov
or
enter
add
sbb
pop
pop
inc
outsb
aam
into
push
or
shl
clc
test
bound
mov
add
fwait
mov
fsubr
fsub
and
pop
pop
dec
push
mov
dec
add
inc
aad
cmpsl
ja
roll
mov
jae
xor
add
fs
jmp
push
out
scas
leave
and
inc
mov
adc
xor
mov
test
mov
inc
dec
insl
jns
clc
pop
xchg
adc
sbb
ja
push
sub
iret
or
aas
cmp
and
lcall
pop
xchg
cmp
mov
add
icebp
fwait
iret
popf
insb
or
loope
in
push
push
or
jle
and
add
lds
ljmp
sub
jmp
push
mov
xorl
mov
and
xchg
mov
bound
inc
jp
sub
mov
shll
test
out
xchg
mov
fistpl
jmp
push
test
sub
stos
and
mov
sbb
cltd
push
js
rorl
insl
jae
daa
cmp
or
and
mov
or
sub
cmpb
popl
stos
insb
xor
push
aas
mov
shr
mov
dec
lock
in
orl
mov
pop
dec
cmp
inc
fildll
mov
xchg
xor
stos
dec
fcomps
pop
lret
add
pop
cmpsl
cmp
cmc
loopne
mov
jbe
inc
jge
xchg
xor
je
movsl
shll
in
jo,pn
jne
fldcw
or
or
ret
fidivrl
scas
dec
push
sahf
pop
dec
sub
pusha
loop
mov
mov
pop
mov
or
mov
inc
mov
mov
repz
inc
dec
orl
xchg
cmpsb
ret
inc
andb
push
stos
rorb
jl
jmp
ret
cmp
daa
and
sahf
imul
jg
shrl
jmp
lock
fisubrl
fst
and
sub
mov
adcl
imull
adc
lret
mov
into
fsubs
jae
xor
pslld
mov
rolb
dec
cmpsb
ss
fdivs
and
insb
fisttpll
movsl
mov
repz
sub
jnp
out
xor
adc
cld
dec
mov
mov
lds
inc
push
or
popa
mov
fisubrl
mov
les
mov
xchg
jae
dec
xor
aam
sbb
in
repnz
and
loope
imul
movsl
pop
sti
outsl
cwtl
sbb
pop
stos
das
jnp
das
sub
pusha
add
in
sub
mov
inc
popf
popf
lahf
dec
cmp
jmp
lret
out
imul
cli
dec
inc
or
push
and
or
pop
mov
cltd
rcl
lret
push
dec
out
jbe
imul
es
add
xor
mov
pop
popf
call
ss
push
inc
inc
shll
mov
clc
inc
mov
xchg
loope
outsl
inc
dec
sahf
lahf
inc
test
mov
rcll
daa
cmp
xchg
jg
mov
jge
lds
mov
hlt
jns
cs
shlb
repnz
mov
or
xchg
mov
fnstenv
les
push
push
pop
test
daa
mov
sub
pop
xchg
pop
mov
push
sti
cmc
loope
pop
push
mov
aam
push
xchg
adc
dec
and
stc
nop
ficoml
inc
xor
stc
xor
or
and
push
xchg
mov
stos
xor
out
std
and
inc
xor
inc
cmpsb
test
jmp
leave
sub
pop
loopne
sub
push
arpl
lcall
push
mov
test
pop
cs
xchg
cmp
shlb
sti
cmc
sub
testl
lods
sahf
shlb
sahf
sbb
pop
push
jb
imul
jecxz
sarl
or
jg
push
repz
pop
les
insb
xor
or
iret
mov
lea
hlt
fiaddl
xchg
inc
cmp
xchg
out
addr16
hlt
dec
mov
adc
xchg
sub
jp
sbb
cltd
aaa
adc
jno
pushf
scas
popa
daa
mov
rol
inc
push
xchg
test
fsubrs
imul
cmp
sub
dec
icebp
das
jno
aaa
mov
mov
popa
jle
cmp
rcl
mov
jle
mov
cmp
movntps
stos
and
popa
xchg
mov
or
mov
push
out
out
dec
add
lahf
cmp
xor
int
stos
enter
cmpsl
popa
test
and
add
jg
in
adc
inc
jle
pop
test
and
movsl
test
das
hlt
js
jle
cld
cmpsb
or
xor
dec
sbb
and
mov
cmpsb
lock
jo
add
aas
cmp
fstp
ficompl
adc
dec
jp
sbbb
out
pop
cmp
push
pop
test
mov
xchg
cmpsb
push
sub
clc
addr16
insl
pop
and
xchg
mov
popf
data16
mov
sub
xor
das
xchg
sbb
orl
inc
arpl
cmp
sub
lea
icebp
outsl
dec
mov
test
push
push
mov
sarb
imul
aaa
sub
in
jnp
or
icebp
adc
xchg
push
jl
out
mov
es
adc
out
sub
cltd
jne
repz
adc
and
push
addr16
aam
int
or
inc
arpl
or
dec
lret
fcompl
outsb
mov
cmpsb
iret
imul
cmp
aam
push
dec
adc
hlt
imul
xchg
adcl
filds
jo
pop
push
and
dec
push
mov
lods
jecxz
mov
xchg
jmp
sarl
adc
arpl
cmpsb
rsm
or
test
mov
xor
xor
adc
aaa
xor
or
cs
stos
ffree
bound
imul
jg
ljmp
repz
shlb
js
sahf
frstor
mov
fwait
cld
data16
aam
sub
jno
fdivr
inc
xor
mov
stos
and
pop
dec
mov
insl
in
adc
loopne
inc
ljmp
mov
sub
jae
arpl
arpl
cmp
mov
adc
push
pop
and
sub
dec
adc
repnz
je
mov
lahf
sahf
push
mov
aaa
fsts
jno
pop
or
mov
sarb
ss
int
cli
xchg
sbb
adc
push
aam
mov
push
pop
xor
enter
mov
push
rcl
out
mov
push
jmp
cmp
pop
mov
jp
adcb
mov
xchg
sbb
push
dec
pushf
cltd
movsl
adc
inc
cli
inc
in
add
xor
or
inc
mov
leave
cmp
daa
mov
adc
clc
push
in
dec
push
test
add
cmpsb
rorl
ja
orb
mov
popf
test
or
push
cld
sahf
leave
test
xor
and
lods
rorb
inc
sti
inc
lds
test
jno
fcom
push
sub
mov
and
pop
addr16
mov
add
sbb
mov
mov
mov
mov
stos
mov
dec
enter
test
bound
push
mov
push
punpckldq
imul
jo
pop
div
pop
mov
mov
pop
pop
enter
sub
stc
insl
jmp
fidivs
or
push
je
cli
test
pop
repnz
mov
cmpsb
inc
testl
or
or
push
insl
repnz
or
mov
adc
ficompl
out
xchg
dec
jecxz
xchg
lods
insl
dec
sub
aas
cmpsl
mov
arpl
movsl
adc
bound
mov
mov
or
je
jmp
int3
pop
push
call
push
out
into
ror
adc
sbbl
pushf
fwait
repz
mov
les
fnsave
jo
mov
and
and
pusha
stos
call
addr16
in
lahf
xor
and
sahf
inc
adc
orb
fistpll
add
arpl
push
sbb
movsl
xor
dec
lods
inc
gs
add
push
leave
ljmp
repz
inc
cmp
or
sub
xor
inc
add
inc
test
jmp
ret
fldenv
jle
scas
sub
sub
push
aas
cmp
lds
arpl
clc
push
mov
int3
lret
mov
fcomp
mov
call
das
test
pop
and
adc
data16
mov
out
pop
sub
jg
stc
xchg
push
or
sbb
mov
sbbl
and
inc
push
mov
lods
lret
cld
repz
mov
repnz
pop
nop
push
xor
xchg
mov
cmc
or
les
mov
sbb
push
adcl
inc
popa
jmp
jne
rcrl
xchg
cmp
flds
jge
int3
outsb
push
jbe
xor
lods
out
mov
pop
xchg
inc
mov
stc
stos
mov
inc
lock
arpl
jno
repz
repz
int3
pop
sub
pop
lcall
or
mov
xchg
add
dec
inc
aas
adc
es
jno
cmp
sbb
imul
aaa
mov
icebp
dec
faddl
repnz
lock
incl
xor
cmp
cs
mov
aad
mov
dec
test
jae
fisttpll
popa
add
in
mov
lcall
loopne
push
ret
dec
cmp
cmp
mov
xchg
pop
xchg
inc
out
mov
push
mov
pop
adc
push
add
loopew
mov
jae
xchg
imul
mov
cmp
ret
mov
and
cs
popf
les
sahf
lcall
sbb
in
xchg
mov
jo
in
mov
and
push
jp
movsl
adc
mov
fisubs
inc
and
jmp
xchg
leave
sbb
cli
mov
adc
and
int3
pop
push
cmpsl
scas
or
push
mov
pop
pmulhuw
fwait
test
xor
xchg
leave
sbb
lcallw
lods
daa
stos
add
imul
jnp
mov
mov
jnp
adc
stc
lcall
out
mov
mov
cmpsl
pop
in
xchg
jg
xchg
or
push
lock
cwtl
add
jmp
lret
mov
scas
outsb
into
icebp
shlb
xor
jae
sbb
or
jp
lock
cmp
jae
inc
dec
mov
mov
movsl
pop
imulb
imul
push
jle
cli
and
fisttpl
or
gs
mov
ja
xchg
je
ljmp
aaa
mov
push
xor
cwtl
movb
je
cmp
lret
scas
pop
pop
shl
jnp
popa
cmc
lods
lret
pop
js
je
jno
movsb
xor
mov
push
mov
pop
in
cmp
scas
xchg
cld
mov
push
es
fisubl
je
leave
aaa
jnp
jns
sub
adc
sarb
daa
jno
sti
into
lea
int3
or
adc
adcl
shlb
repz
dec
int
pop
call
popa
mov
mov
mov
mov
inc
xor
insb
lods
jge
pop
in
xor
mov
cli
jge
loopne
filds
mov
jg
fistpl
pop
mov
xor
xchg
jle
xchg
dec
xchg
inc
pushf
out
stos
sub
push
cs
ds
push
int
cld
stos
push
mov
xor
insl
js
jo
pop
es
xor
nop
push
cmp
daa
mov
das
loopne
aas
xlat
push
dec
dec
andb
repz
and
pop
ret
pop
jmp
add
pop
xchg
test
xchg
mov
jns
out
seta
push
dec
call
insl
pop
fsub
xchg
call
mov
xchg
or
pusha
mull
stos
shlb
inc
mov
sub
into
js
push
cmpsb
dec
pop
xchg
xchg
push
push
decb
insl
loop
jl
or
mov
or
in
jae
sub
jge
mov
stc
sbb
fwait
stc
fwait
jbe
pop
xor
push
or
pop
adc
sub
fldt
pushf
push
mov
mov
out
pop
jnp
hlt
jno
push
into
or
sbb
xchg
cmpsl
cld
mov
and
dec
xchg
popa
lcall
xor
mov
lea
mov
lock
mov
fcompl
push
mov
lahf
loop
out
xor
fidivrl
out
cs
jg
mov
mov
imul
fistpl
aaa
loopne
push
fsubrs
repnz
adc
ja
stos
aad
loope
adc
leave
outsl
cmp
cmpsb
adc
push
adc
mov
push
iret
or
dec
fcomi
or
sbb
call
jmp
mov
leave
cs
or
nop
push
add
push
adc
orl
dec
rcrl
sub
cli
orl
popa
and
lret
lret
lcall
popa
mov
adc
sbb
incl
outsb
lret
jo
cmp
jle
in
fs
stos
insb
push
lret
or
mov
add
pushf
aad
sbbl
adc
test
mov
adc
enter
jmp
stos
lcall
scas
fstl
inc
test
mov
cmc
pop
cmp
cmp
int3
out
cmp
int
inc
lock
pop
out
mov
cmp
mov
out
aam
stos
cmp
pop
mov
into
pusha
push
lods
in
mov
adc
cmpsl
call
or
cmp
mov
pop
adc
pushf
das
in
cs
testl
and
fiadds
das
jno
orl
sub
insb
call
mov
mov
pop
in
mov
ds
ljmp
push
and
call
fcompl
xchg
rclb
jl
data16
loop
adc
cld
lret
sbb
bnd
push
mov
fsubr
or
call
ss
in
loope
es
faddl
pop
fdivrl
xor
daa
jb
cmp
stc
popf
jg
test
shrl
fnstcw
jle
movsl
aad
hlt
sub
add
cwtl
hlt
cld
stc
rcr
lret
repz
sub
outsl
fnclex
xor
jae
cmpsb
ds
pop
stc
ds
rcr
arpl
rol
fdivs
arpl
sub
or
push
mov
repz
xchg
rclb
sbbb
mov
xor
test
sub
mov
nop
inc
jnp
inc
daa
and
andl
lock
mov
or
int3
stos
mov
mov
aas
push
cmpsb
call
xchg
aad
inc
aam
push
ljmp
leave
pop
sbb
dec
jmp
mov
add
pop
mov
loopne
repz
xor
mov
loopne
pop
mov
aas
push
cmp
enter
dec
inc
inc
fistpll
sbb
cmp
faddl
stc
mov
mov
ljmp
mov
sub
test
and
push
call
movsb
ljmp
stc
mov
mov
loope
cli
sbb
sar
stos
clc
shlb
popa
outsl
adc
test
jo
lret
shrb
add
out
imul
test
push
mov
mov
lahf
insb
rcl
mov
testl
adc
test
scas
jp
mov
cmp
popf
mov
or
cltd
je
cmp
dec
mull
dec
mov
sub
push
or
pop
cmpsb
or
add
arpl
rcll
mov
cmp
arpl
cwtl
imul
movsb
jle
lods
sbb
mov
aam
pop
mov
inc
adc
add
sbb
jg
mov
dec
sbb
imul
adcl
rcll
sbb
pop
mov
xorl
pop
jmp
xchg
cmp
fscale
stos
sub
subb
add
fst
icebp
dec
cmp
outsl
push
dec
daa
sbb
scas
xchg
or
mov
mov
and
mul
pushf
rcll
sbb
addr16
pop
daa
cltd
ret
and
sahf
loopne
arpl
pop
push
les
lock
icebp
test
std
mov
mov
mov
cmc
fimuls
nop
imul
push
gs
add
jmp
std
jno
or
xchg
ret
cmp
adc
cld
pop
mov
es
adcb
ja
jecxz
insb
inc
sub
in
adc
dec
and
fdivr
ret
pusha
ret
mov
fdivs
filds
pop
pop
mov
repnz
pop
outsl
jb
aam
mov
mov
lret
cli
pop
bswap
hlt
xor
and
mov
out
pusha
pop
pop
mov
call
sbb
stc
and
fcom
lds
test
fldl
icebp
das
push
mov
jnp
dec
jp
aad
loope
jno
pushf
mov
outsb
jecxz
test
mov
fdivrs
daa
jp
sbb
mov
or
inc
addr16
popf
inc
cmp
add
repnz
ret
aad
mov
jge
sub
movsl
jns
xlat
out
pop
enter
testb
push
fiadds
repz
shl
sub
mov
sub
jbe
or
fistps
pop
lods
mov
sarb
fwait
sbbl
add
or
cmp
jb
fdivrl
cmpsb
decl
mov
cld
cmp
sub
in
loope
lock
das
sbb
dec
ds
daa
pop
sub
mov
pop
mov
jo
push
jp
xchg
addb
fldt
push
cli
push
pop
pop
shlb
movsb
cs
sub
xchg
in
scas
mov
inc
movsl
cli
xlat
sti
pop
scas
push
inc
fcoms
stos
pusha
cwtl
cld
cltd
loopne
fbstp
fwait
shl
sahf
std
outsb
mov
mov
fcmovnb
daa
or
fucomi
adc
pop
sbb
add
call
push
addb
sbb
adc
pop
nop
repnz
jne
popa
sub
cmp
add
lock
ret
pop
inc
sub
jns
nop
xor
xor
inc
cmp
call
push
sub
mov
fwait
cmpb
out
pop
mov
fisttpl
cmc
test
and
std
cmp
mov
out
push
pop
jb
bound
scas
sub
sbb
mov
rcrb
in
in
cmp
dec
sub
add
pushf
ja
sub
lret
jecxz,pn
mov
inc
int3
add
push
aas
push
shlb
xor
outsl
mov
aaa
icebp
divl
inc
jge
andl
sbb
cmpsb
subb
and
xlat
enter
loope
movsb
test
push
ret
inc
sub
adc
sbb
inc
adc
les
jne
jle
or
sub
jecxz
xor
add
clc
dec
or
rcrb
in
pop
out
data16
in
mov
pop
test
in
adc
push
pop
xchg
popl
js
jo
fisttps
nop
xchg
push
sti
or
in
mov
push
xlat
adc
test
sub
lahf
test
repnz
mov
nop
aam
ss
aaa
iret
sti
js
xor
sti
movsl
gs
data16
push
xchg
sbb
pop
insb
pop
mov
mov
and
sahf
ds
lods
or
stos
pop
and
lds
cmp
repz
sbb
in
loope
sti
jae
in
push
call
cmp
sbb
xchg
xor
arpl
add
jae
xor
cmpsb
push
aad
jnp
lahf
mov
mov
jbe
xor
les
sahf
push
fnstsw
daa
stc
xchg
sub
out
pop
push
xchg
jo
ss
xorb
mov
add
les
ss
push
lahf
stos
fisttpl
jecxz
xor
pop
inc
in
ss
ret
subb
and
sbb
fdivs
ds
mov
push
jge
inc
xor
sahf
push
ficomps
in
pop
lds
or
pop
inc
push
or
sub
das
xor
aaa
adc
popf
lahf
cmp
xchg
mov
jo
pop
mov
roll
jb
lea
inc
insl
mov
jns
mov
and
xor
out
mov
ljmp
push
push
jmp
xor
adc
push
ds
pusha
push
jnp
xchg
xor
inc
adc
inc
in
xchg
xchg
push
jo
push
inc
mov
jns
mov
lret
xchg
mov
push
jmp
sub
xor
or
sbb
cmpb
mov
enter
jae
loop
popa
icebp
pop
or
int
lahf
jmp
inc
push
push
cmc
repz
jnp
hlt
or
arpl
push
ffreep
xor
adc
insl
jg
pop
stos
or
jno
rol
cld
jmp
or
stc
cmc
cmp
daa
xchg
shlb
dec
gs
xchg
adc
and
pop
mov
xchg
lods
pop
leave
shrb
xchg
popf
push
add
xor
stos
into
push
xor
xor
sub
push
mov
push
sbb
cmc
cmpl
xchg
aaa
and
sbb
xchg
mov
dec
mov
add
dec
imul
scas
and
pushf
jecxz
push
test
gs
leave
cli
adc
sbb
push
imul
add
clc
adc
test
lods
cmpsb
scas
cmp
imul
sbb
pop
jge
hlt
add
repz
loope
dec
or
lea
dec
and
lock
fnsave
mov
sub
enter
stc
mov
mov
aaa
jno
pop
pop
shll
les
psubusw
outsb
jecxz
push
test
cs
fisubl
add
lods
sahf
icebp
stc
xchg
das
push
popa
dec
notb
jns
xor
lock
jmp
xchg
jo
cmp
jl
fbstp
and
push
adc
shrb
cli
push
mov
out
aas
fsubl
ret
test
xor
adc
cli
and
push
scas
nop
into
sbb
out
mov
in
mov
jge
sub
and
push
rclb
cmp
aas
push
mov
insl
sbb
sub
and
adc
fildll
pop
push
shlb
loope
cmp
push
mov
leave
sub
mov
add
icebp
in
lods
and
push
popa
je
cmp
xchg
insl
add
addr16
xchg
jo
aam
popf
xor
jno
insl
iret
jnp
add
out
out
es
hlt
insb
mov
mov
jae
out
fldln2
dec
cltd
icebp
pop
scas
pop
push
ss
shlb
imul
and
push
cmp
dec
mov
sbb
test
js
fwait
push
inc
sub
lods
push
add
das
out
in
out
jge
in
cwtl
test
pop
jp
outsl
andb
mov
and
data16
clc
cmp
mov
ds
add
aam
push
dec
decb
es
jmp
sbb
lods
pop
mov
test
aaa
fldenv
leave
jge
int3
pop
movsl
jmp
daa
mov
dec
pop
jle
ss
cs
jae
test
leave
and
cmp
lret
and
jle
lock
xchg
ljmp
push
jae
sub
hlt
dec
leave
and
loopne,pt
shr
xchg
cmpsl
imul
aas
mov
stos
faddl
test
in
cmpsl
int
mov
xor
sub
std
sbb
mov
ja
addr16
lret
das
and
cmp
pop
stos
mov
movsb
adc
pop
jbe
jle
es
pop
xchg
movsl
orps
lock
cli
cmpsb
shl
adc
push
xchg
and
clc
in
test
out
icebp
dec
cld
inc
repz
mov
fisttpl
mov
roll
sub
or
dec
lret
cwtl
cmp
jo
pop
adc
icebp
mov
sub
xchg
dec
cmc
jo
adc
jp
fcomps
or
jl
xchg
sub
sti
mov
out
mov
icebp
lret
gs
cld
mov
push
and
jl
mov
sbb
pop
pop
pop
and
imull
rclb
testl
lods
pop
mov
psubsb
aad
jle
sub
insb
nop
jb
adc
mov
les
stc
mov
mov
adc
movsl
lods
int3
stc
jg
stc
fsubrs
push
mov
xchg
adc
adc
mov
andl
movsl
arpl
xchg
imul
loopne
fincstp
push
sbb
fmull
jb
add
adc
sub
scas
loopne
xchg
xor
push
push
out
pop
lret
push
push
push
dec
enter
mov
pop
sar
cmpsl
jp
pop
das
int
inc
push
in
mov
push
jge
pop
pushf
mov
cmp
or
dec
idivl
cmpsb
xchg
and
cs
jmp
clc
or
dec
cmpsb
test
fsts
sbb
and
sub
sar
jge
xchg
popa
or
cli
push
fcomp
add
out
fsts
rorl
lcall
dec
cmp
pop
adc
mov
push
pop
jge
lods
xor
leave
fcomp
push
sub
and
inc
iret
dec
stos
inc
in
pop
jmp
mov
lahf
sub
cmc
mov
adc
test
jmp
adc
add
pushf
pop
das
xor
xchg
sti
xchg
lahf
add
lods
push
cmp
adc
cld
aas
mov
std
jecxz
movl
js
adc
ja
mov
dec
test
mov
add
mov
roll
pop
rclb
cmp
jle
ret
xor
jl
test
xor
dec
or
add
in
vmovddup
cmp
cmp
popf
add
rcll
repz
adc
pop
lret
cmc
dec
into
or
movsl
lahf
pop
pop
insb
aas
clc
xor
sub
ret
mov
sub
xchg
repnz
push
xor
lret
in
movsl
sub
push
dec
dec
ds
pop
daa
andb
scas
push
adcb
xor
jp
sub
fisubrs
pop
push
out
mov
inc
fimuls
fucom
jb
pop
les
inc
fbld
in
xchg
xchg
mov
dec
jmp
incb
inc
jnp
cmp
rclb
jmp
xchg
fwait
push
sbb
xor
cmp
insb
fnstcw
repz
and
scas
sbb
pop
repnz
or
mov
icebp
aaa
push
lods
push
add
sub
mov
in
shll
sub
nop
imul
scas
lcall
fsub
dec
lret
test
cld
xchg
mov
andb
xchg
in
sub
in
bound
inc
mov
in
inc
loopne
mov
mov
ds
sub
incb
xlat
rcr
xchg
mov
mov
push
mov
repnz
and
sub
inc
aaa
mov
add
jmp
call
pop
pop
add
inc
cld
mov
push
pop
lret
mov
in
les
int3
jbe
jp
or
mov
push
dec
sti
mov
mov
push
lcall
hlt
aas
add
jge
xor
add
aas
add
pop
pusha
push
mov
mov
mov
sub
iret
es
in
and
xchg
movsl
xchg
repnz
push
mov
pushf
pushl
out
push
daa
mov
call
sub
lret
popa
mov
shll
xor
imul
lods
sub
xor
inc
fiadds
cmp
sbb
and
fisttps
popf
push
sti
add
jge
mov
jb
nop
sub
jl
dec
or
cmp
mov
fs
mov
push
daa
int
stc
mov
dec
mov
shl
test
mov
in
cmp
mov
test
into
sub
sbb
mov
arpl
xor
xor
jle
out
cmp
lock
xor
push
inc
push
sbb
jg
mov
and
mov
lahf
adcl
push
neg
inc
divl
cli
in
enter
stos
mov
cmpsl
mov
push
scas
dec
cli
int3
stc
jecxz
stc
jo
mov
fidivl
sbb
push
in
enter
lcall
lds
adc
jo
dec
sti
add
cltd
sub
aaa
iret
add
and
rcll
xorb
ja
loopne
repz
cld
mov
cmp
jo
es
pop
dec
dec
scas
cmp
pop
cli
cmpsl
ds
jno
push
movsl
sub
mov
fbld
push
pop
not
mov
inc
pushl
aad
jb
cmp
mov
xchg
cwtl
inc
cld
scas
mov
xor
daa
fwait
push
push
dec
pop
push
enter
mov
sbb
xor
int3
fdivr
gs
movsl
js
or
cltd
cld
mov
add
dec
imul
and
pop
lods
dec
int
lahf
popa
mov
cltd
cli
out
push
push
addr16
pop
outsl
lret
pushf
lret
cwtl
repnz
jl
fldenv
call
jle
pop
inc
adc
adcl
add
decl
push
pushl
jne
data16
je
xor
inc
loope
push
xchg
push
adc
push
enter
xchg
insl
pushw
dec
insb
fnsave
sbb
mov
aad
mov
cwtl
add
ds
sbb
jo
loop
in
xchg
in
testb
mov
lret
addl
push
arpl
les
mov
jl
outsb
and
inc
mov
mov
stc
arpl
push
bound
jl
mov
ds
movsl
sub
pop
xorl
xchg
cmp
jns
int3
out
test
into
mov
xchg
cmp
orl
push
xlat
sar
jg
sbb
xor
inc
stc
pop
sub
add
and
or
subb
sub
movsl
loope
push
ret
and
dec
mov
cld
jle
add
adc
cmp
scas
icebp
xlat
cmp
lahf
cmp
pop
in
pushf
ljmp
lret
roll
test
jo
adc
insl
psubq
aaa
add
stos
les
adc
insb
aaa
mov
pop
cmp
sub
scas
jne
out
and
das
add
shll
push
and
adc
cs
and
enter
fninit
pop
cwtl
popa
test
xchg
mov
jecxz
cmp
xlat
pushf
outsl
faddp
add
pop
aad
fisubrl
mov
dec
mov
xor
data16
inc
and
rorb
loop
shll
lods
cmp
push
mov
shll
sub
ss
iret
pop
mov
push
adc
cmpb
sub
inc
arpl
call
jbe
popf
jmp
ss
sbb
idivw
add
cltd
mov
mov
enter
cld
and
jbe
xchg
cld
add
sub
js
stc
sbb
xchg
jecxz
adc
mov
shr
sbb
lods
cmp
cmp
xor
insl
mov
or
jnp
mov
daa
mov
cmp
xlat
push
stos
decb
mov
pop
ret
push
cmp
fildll
test
shrl
js
inc
loope
call
daa
popf
popf
les
mov
ss
mov
out
push
push
les
rorl
testb
fucomp
xchg
icebp
mov
outsl
xlat
test
outsl
idivl
sahf
push
mov
out
jg
mov
pop
mov
add
in
jp
and
imul
sub
in
lret
cmc
mov
es
outsb
fsubrl
or
push
or
stos
and
cmc
dec
fiaddl
inc
ss
fsubrs
cld
inc
loopne
and
das
jle
mov
sub
fcomp
mov
sub
dec
jb
or
pop
push
jbe
testl
repnz
aas
jnp
cwtl
jb
push
ss
fstl
lods
insl
in
mov
xor
gs
sbb
dec
mov
jp
cmpsb
jne
sbb
inc
sub
outsb
lcall
xchg
push
test
call
aas
test
test
fdivs
jmp
pop
or
jo
loope
mov
aas
stc
ljmp
ljmp
pusha
sbb
xor
loope
push
data16
xor
pop
ljmp
cmp
and
test
rclb
push
sub
jp
jns
adc
popa
daa
adc
ss
es
in
loopew
in
in
mov
jbe
je
add
sbb
push
add
push
xor
xor
xchg
scas
sub
scas
inc
or
in
mov
ds
pop
scas
mov
add
fcmovnb
and
xor
mov
pop
ret
pop
nop
push
clc
ficoms
ror
sahf
test
hlt
subb
pop
sahf
or
lds
xchg
fstpl
lcall
mov
mov
cmpsb
cltd
push
mov
inc
mov
adc
pushf
lock
into
dec
pop
std
cltd
jmp
iret
xchg
repz
inc
dec
js
push
testl
xor
mov
leave
jae
sub
cwtl
das
dec
mov
in
lods
jg
or
fwait
inc
lret
ret
mov
shll
inc
mov
imul
dec
ja
xlat
stos
mov
pop
int3
imul
aad
push
sbb
cmpl
pop
jbe
imul
pop
sbb
shrb
xor
pop
jnp
jmp
lcall
lods
xor
loop
out
sub
mov
mov
sub
cmp
adc
cmpsl
repz
test
mov
cmp
in
mov
mov
imul
dec
cmp
dec
sarb
jno
inc
daa
xor
in
add
pop
aad
iret
jnp
ljmp
loope
insb
cwtl
fdivr
fcoml
shll
cmp
dec
ss
mov
std
add
fsts
mov
scas
mov
pop
lcall
dec
les
jmp
ret
mov
mov
stc
pop
dec
sbb
jle
dec
insb
loope
pop
pop
sub
cwtl
sahf
out
or
mov
add
ror
leave
icebp
std
xor
imul
movsl
sbb
or
imul
ror
dec
pop
adc
jno
enter
sub
cmpsl
add
mov
rsm
push
xchg
daa
cmp
inc
or
aaa
scas
ret
ljmp
out
popa
sub
dec
nop
cmp
repnz
pop
fxam
and
pop
addr16
shrb
sahf
adc
adc
daa
insl
inc
imul
dec
int3
dec
push
push
test
xlat
out
pushf
push
mov
mov
jno
in
pop
mov
mov
mov
das
std
inc
leave
cmp
lret
xchg
xchg
push
test
xchg
aad
call
sub
aaa
xchg
arpl
dec
int
jmp
jmp
push
dec
cmp
cmp
mov
add
loope
in
movsl
test
repz
sub
mov
lret
push
into
xchg
mov
or
popa
or
fs
push
push
data16
sub
jnp
ljmp
int
jnp
ja
rclb
xor
daa
scas
and
fcos
inc
pop
cmp
fnclex
loopne
out
test
fadd
pop
jmp
push
sbb
loop
pop
addb
sti
fldt
in
xor
xchg
sbb
jbe
call
push
pop
in
adc
scas
arpl
fisubl
sub
push
push
pop
push
xchg
repnz
or
push
inc
jp
inc
call
in
add
xor
subl
dec
lahf
pushl
mov
in
pop
cmp
ja
cmc
in
xchg
and
cmc
decl
loope
dec
sbb
and
push
test
mov
push
mov
imul
aaa
dec
mov
mov
mov
jno
aaa
sub
sahf
stc
mov
dec
xchg
xchg
jg
xchg
and
test
push
clc
jae
dec
pop
mov
xor
jo
cld
jns
addr16
jp
fs
cmp
mov
push
mov
mov
call
or
or
dec
mov
in
rclb
cmp
mov
cli
jecxz
and
jecxz
xor
bnd
js
enter
adc
imul
and
inc
jmp
out
leave
sub
out
sbbl
mov
lds
sub
add
js
xchg
rolb
jl
jl
cmc
enter
xchg
and
and
pusha
out
sub
pop
push
ficomps
jle
cmp
addr16
jp
js
xchg
push
and
outsb
les
std
sahf
dec
and
push
inc
arpl
pushf
ficoms
dec
mov
aam
inc
inc
dec
jo
lea
xchg
adc
mov
in
lahf
mov
ret
or
mov
dec
int
mov
xchg
shrl
js
cmpsb
or
cmp
push
ret
sub
loope
mov
lret
negl
hlt
sbb
dec
xchg
nop
mov
clc
clc
inc
out
jecxz
sub
std
lods
mov
lcall
das
mov
cmp
xchg
xor
or
xor
gs
jbe
push
add
push
pushl
xchg
jo
push
addr16
jb,pn
aas
nop
jne
inc
jg
into
push
adc
rcrb
shll
push
pop
sbb
sub
push
xor
call
xor
mov
mov
jge
cmpsl
push
or
pop
hlt
movsl
push
lea
sub
mov
sbb
cld
mov
push
in
outsl
cmpsb
sarl
mov
lcall
fmuls
or
ljmp
mov
cmp
push
dec
lock
mov
push
out
sbb
jb
insl
inc
mov
mov
mov
xchg
inc
xchg
xchg
xchg
jmp
mov
enter
inc
push
dec
dec
movsb
pushl
add
aad
mov
mov
xchg
sub
jnp
add
ret
ret
xorl
lods
mov
xlat
push
xorb
adc
pushf
ljmp
adc
push
ss
pop
insl
lea
add
outsl
jno
stos
mov
mov
insl
push
lods
adcb
cltd
loope
or
out
lret
loop
mov
in
pop
sti
mov
push
mov
movsb
je
push
out
add
divb
push
popf
or
test
pop
arpl
jge
fcomp
dec
adc
sbb
push
jmp
ret
push
mulb
jns
sub
add
or
imul
pushf
leave
out
xchg
jmp
insb
shl
inc
mov
pop
data16
mov
loop
cmp
out
mov
xor
adc
icebp
xor
call
sahf
adc
xchg
ljmp
mov
inc
and
dec
or
rcrb
xchg
adcl
mov
pop
push
push
shl
ds
int3
add
dec
jge
inc
sub
dec
pop
imul
fstpl
js
cli
dec
pop
mov
cli
and
mov
sahf
pop
cmp
mov
xlat
sbb
or
dec
jle
jb
sub
sbb
push
fldcw
js
daa
pop
outsl
into
rol
aaa
pop
adc
inc
pop
mov
and
insl
int
ja
push
push
and
and
pop
mov
push
gs
cmp
mov
mov
call
stos
mov
xchg
or
ret
pop
popf
pop
lahf
and
mov
lret
xchg
sub
cli
jae
stos
add
out
sub
js
sub
test
add
add
pop
in
fldt
out
imul
call
out
cmp
popf
mov
and
int3
repnz
movsb
jecxz
adc
pop
sub
mov
xorl
sbb
sub
inc
test
xchg
sahf
push
loop
cltd
stos
sub
push
or
jecxz
out
xor
push
and
mov
cltd
adc
addr16
sbb
sarb
jp
scas
lahf
mov
jo
insl
jno
and
mov
fucomp
insl
loopne
mov
cmpsb
fdivs
xor
dec
fistpl
push
mov
mov
aad
not
push
add
cmp
and
mov
cmpsl
adcb
into
adc
and
and
sub
sbb
and
lods
push
test
cmp
ljmp
mov
push
cmp
lret
mov
mov
dec
pop
pop
rolb
loop
movsb
arpl
or
lret
mov
js
loopne
sbb
xchg
xor
dec
add
jp
dec
sub
pusha
sbb
xchg
outsb
jns
fisttpll
push
inc
mov
loop
mov
inc
popf
std
add
stc
xchg
adc
sub
fs
sub
int3
divps
ret
hlt
cmp
sbbl
aam
les
sbb
jmp
fmulp
dec
mov
sbb
test
mov
mov
cmp
inc
sub
cmp
and
popf
pusha
aam
pushf
pushf
sub
push
mov
dec
pop
daa
ret
and
pushf
stc
inc
loopne
insb
jae
lods
adc
cmp
dec
mov
cmp
insb
leave
ret
ret
push
sbb
in
jmp
arpl
outsb
jns
clc
xor
dec
je
jl
out
sahf
jno
mov
or
fs
or
lock
or
jg
dec
push
jae
aad
aad
lds
subb
inc
and
cmp
cmp
dec
lahf
dec
movsl
mov
cs
mov
lahf
dec
xchg
mov
arpl
inc
jmp
scas
or
pop
push
inc
lods
dec
js
lret
mov
ds
pop
sarl
rclb
jae
test
rcr
loop
movsb
aaa
jns
pushf
orl
mov
repnz
jb
test
insb
out
sti
loope
sub
pop
in
dec
fcmovnu
sbb
fcomi
mov
popa
xchg
sub
sub
add
sarb
fidivs
push
lahf
jmp
fdivrs
mov
adc
das
in
sahf
pop
sub
cltd
cwtl
ja
lahf
xor
rcr
push
sub
movsb
out
decb
push
clc
rolb
mov
iret
sbb
rorb
adcb
movsb
inc
ds
xor
mov
push
pop
out
mov
add
daa
shl
jge
stos
or
js
clc
jnp
or
mov
notl
inc
sbb
xor
scas
xchg
rol
lret
in
pop
int3
jo
stos
lea
iret
mov
mov
add
xor
mov
sub
lret
dec
rcrl
test
rorb
cmpsl
lea
dec
pop
in
outsl
iret
imul
rolb
xchg
int3
push
inc
in
push
repz
mov
sbb
xchg
loopne
decb
in
incl
hlt
dec
lods
std
push
lcall
mov
subl
pop
lcall
dec
shlb
or
xlat
lods
mov
xchg
pop
pop
movsl
and
scas
scas
aaa
fildll
sub
sbbb
je
imul
into
jb
smsw
xor
hlt
mov
sahf
jne
mov
xchg
aas
loop
mov
aas
xchg
or
xlat
clc
out
mov
jl
push
fbld
sbb
faddl
rcr
jle
std
jo
push
or
jno
divl
sub
xchg
sbb
mov
out
push
popa
jge
pop
xchg
sbb
jp
sbb
insl
pop
dec
push
loop
call
pop
cmc
add
ds
inc
sub
lock
mov
insb
and
insl
fstl
adc
negb
test
das
cs
jg
mov
sbb
dec
sub
push
daa
ficompl
adc
ret
mov
jmp
popa
in
aaa
add
stos
lret
pusha
jae
push
mov
pop
mov
popf
adc
orl
idivb
mov
fs
pop
xchg
rclb
bound
lcall
push
int3
push
fcomi
sub
ljmp
cmc
jp
xchg
jle
sbb
fucomp
jbe
jbe
lea
or
fildll
test
leave
pop
popa
adc
fistl
add
cwtl
pop
ljmp
ret
or
bound
mov
neg
mov
and
into
outsb
add
cmp
push
ficomps
shrb
pop
aam
mov
pusha
dec
adc
adc
mov
cmpsl
mov
lods
push
mov
movsl
jbe
jp
xorl
push
jne
jle
outsl
add
sub
xchg
repz
addr16
mov
negb
cmp
jnp
pusha
jp
mov
fstl
xchg
cli
cmpsb
notb
into
push
jmp
shrl
cmpsl
lcall
and
sbb
add
dec
jo
lcall
mov
jle
test
popf
fstpt
cmpsb
push
adc
push
xor
je
pop
cmp
mov
and
bound
std
xchg
dec
cli
sub
sbb
xor
lret
clc
sub
mov
pop
orl
fistl
mov
pop
popa
add
pop
das
push
daa
daa
outsl
xchg
cmc
dec
add
les
cmpsl
loope
mov
in
bound
mov
push
cs
scas
imul
or
xchg
hlt
jle
pop
into
mov
jg
dec
push
fwait
testl
sub
or
test
insb
xchg
add
test
cwtl
test
movsl
out
stos
aam
inc
adc
xchg
or
sub
stos
mov
cmp
imul
icebp
push
dec
hlt
mov
mov
jae
mov
test
sbb
push
sbb
loop
pusha
lahf
aad
rol
pop
int
adc
adc
daa
pop
or
sbb
cmpsl
mov
insl
sbb
int
shl
insb
mov
cs
lret
imul
pop
into
pusha
pushf
addb
insl
iret
jne
lahf
sbb
add
mov
icebp
ljmp
inc
sbb
je
stc
imul
add
mov
mov
push
out
shl
cmpsl
or
pushf
cmp
test
out
jae
jb
mov
pop
scas
or
cmp
nop
outsb
sbb
clc
add
lahf
fcoml
sahf
ds
in
cli
jno
adcb
inc
clc
mov
jecxz
pop
pop
sub
dec
push
mov
lahf
sub
xchg
sbb
mov
inc
pop
movsl
xchg
push
rorl
dec
or
ljmp
add
int
xchg
sbb
loopne
add
scas
fstps
adc
xchg
pop
je
inc
mov
jbe
xor
pusha
sbb
xchg
daa
mov
dec
push
dec
nop
sub
inc
lods
and
cmp
lds
cmp
xchg
clc
mov
dec
and
mov
cmp
add
out
les
xchg
insb
mov
out
sets
rolb
into
inc
outsb
test
pop
in
out
push
sub
lret
and
and
imul
in
and
popa
or
call
fiadds
repnz
mov
test
sbb
sub
jge
into
out
in
out
sarb
cwtl
fistl
ret
pushf
lea
push
jo
fists
fdivrs
and
ret
dec
addr16
insl
lret
and
inc
insl
jp
mov
mov
mov
jp
imul
loope
add
mov
cltd
mov
pop
mov
cmpsl
bound
in
scas
leave
ret
push
pusha
das
out
test
out
in
loop
testb
adc
fldl
add
pop
out
div
pop
in
stos
and
mov
jg
and
pop
mov
dec
cmp
xchg
dec
push
cwtl
and
cmp
push
les
shl
cwtl
hlt
sub
fadds
insl
sbb
mov
shrl
pop
adc
adc
mov
arpl
dec
repnz
scas
mov
jae
lods
pushl
push
mov
mov
call
scas
jno
aad
cs
and
inc
lcall
jl
aad
add
outsb
jne
int3
out
loope
push
jo
das
int3
dec
push
pop
fmull
push
xchg
and
xchg
xor
aad
jb
mov
enter
xlat
idivl
lret
bound
in
mov
shll
push
lea
xor
aas
push
mov
vpshaw
arpl
adc
test
test
movsl
jbe
or
pop
push
mov
leave
jge
pop
and
xor
mov
subl
cwtl
insl
lods
mov
mov
out
sbb
push
cmp
jno
and
in
push
inc
push
fwait
cmp
xor
ret
sbb
jno
or
fnstenv
push
or
mov
cmp
and
pop
mov
xor
call
dec
cmp
movsl
shl
into
popf
mov
mov
shll
out
push
inc
xchg
in
sbb
int
jo
and
ret
rep
fisubrs
push
sbb
ss
jl
jle
mov
add
jb
and
loope
ret
test
repnz
shrb
push
cmp
push
jp
xor
sti
pop
int
call
adc
ret
jmp
paddq
sbb
sub
cli
notl
push
rcll
xchg
pop
std
add
pop
fisubrs
rcll
jmp
mov
jg
sub
jp
orb
push
inc
aaa
inc
hlt
jge
push
out
stc
inc
imul
les
cmpsb
lock
jge
push
dec
in
push
bound
stos
out
or
repnz
out
dec
pop
jecxz
nop
inc
dec
pop
js
sbb
cmc
ror
push
into
xor
mov
std
jb
sbb
hlt
fnclex
dec
test
xchg
and
scas
test
js
mov
mov
push
std
and
adc
xor
sarb
imul
clc
push
orb
pop
pushf
mov
cmpsl
xor
xlat
lret
push
cmp
mov
shlb
inc
xchg
int
ffree
adc
loop
enter
cmp
cmp
pop
fiadds
dec
pushf
nop
dec
mov
bound
xchg
mov
jnp
adc
pop
adc
mov
loopne
push
daa
test
out
out
mov
lret
and
lea
pop
sbb
aad
jp
std
lahf
mov
push
pop
adc
test
mov
jne
push
call
ret
xor
in
mov
out
mov
push
lods
dec
pop
push
popf
popf
xor
sub
shlb
aad
mov
idivl
movsb
jge
dec
cmpb
and
ja
in
pop
stc
shlb
push
xor
test
ljmp
xchg
push
cmp
fstpt
in
pop
stc
lock
popf
mov
enter
lock
dec
push
enter
clc
mov
movsb
sbb
xor
outsl
sahf
adc
sbb
addr16
mov
loop
pop
adc
insb
xlat
das
mov
jns
popf
dec
lahf
cmc
adc
adc
in
lret
xor
icebp
fists
cwtl
insl
mov
sti
mov
cmp
jle
add
leave
clc
pop
mov
push
insl
sbb
stos
rol
in
mov
xor
aaa
cmpsl
sahf
loopne
ds
frstor
mov
ret
inc
into
ret
into
or
adc
add
mov
add
call
rcll
or
mov
mov
test
mov
cs
sbb
iret
inc
inc
inc
les
mov
xor
imul
and
repz
mov
aaa
sarb
test
pushf
sbb
xchg
xchg
test
adc
test
hlt
lods
xchg
cmp
jns
shlb
cli
cltd
ljmp
jo
jmp
lcall
cmpsl
jle
xorl
pushf
in
sub
xchg
sahf
dec
sub
mov
dec
lods
mov
scas
cmpsl
pop
pop
in
xchg
jbe
addr16
adc
cmpsl
pop
xor
inc
insb
jo
je
sahf
cltd
insl
and
xchg
push
inc
xchg
or
loop
xchg
xchg
sub
pop
dec
pop
cmpl
leave
sbb
roll
les
mov
dec
push
mov
xor
sub
dec
fcmovb
cltd
lods
int
adc
sti
fsubs
sub
mov
pop
rcrl
dec
lock
lds
mov
mov
mov
iret
dec
xlat
adc
lock
cmp
leave
out
daa
mov
repnz
sahf
add
jmp
inc
loopne
insb
mov
add
push
fwait
cmpb
push
out
daa
add
shrb
add
add
mov
sbb
outsb
dec
ja
mov
lods
mov
inc
jb
mov
push
mov
and
cltd
aam
into
ret
lret
dec
fisubrs
push
insl
stos
lahf
pop
sbb
and
cmp
sahf
repz
imul
std
bound
pop
dec
sahf
push
add
fldcw
test
mov
ret
xchg
dec
dec
mov
fwait
test
mov
add
cmp
test
jge
mov
xor
or
mov
xchg
ss
mov
sub
in
xchg
xor
push
cs
aaa
lret
jl
lret
in
int3
in
loopne
jnp
jp
into
adc
jno
imulb
jb
sti
jecxz
fwait
inc
push
lds
adc
or
jp
mov
outsl
and
cmc
jb
sbb
push
xchg
adc
cltd
insl
push
stos
int3
jge
aaa
xchg
and
or
xor
and
push
fisubl
xlat
pop
xchg
mov
inc
jns
sbb
cmp
gs
outsl
mov
movzbl
fistl
rorl
push
add
hlt
and
mov
or
mov
das
mov
out
movlps
inc
inc
mov
std
pop
outsb
adc
sbb
inc
dec
shlb
pop
or
push
sbb
jecxz
inc
loop
movsl
outsb
rcll
mov
fnstcw
cmpsl
pop
inc
mov
mov
mov
hlt
mov
mov
pmovmskb
inc
mov
xor
jl
stc
pop
call
repnz
in
mov
mov
pop
lods
loopne
das
lea
ret
rorl
pop
xchg
push
repz
test
mov
push
call
sub
sbb
adc
dec
adc
jb
or
mov
aam
mov
data16
sub
into
cli
cltd
xchg
in
bound
push
icebp
push
mov
jo
fisttpl
xchg
mov
mov
inc
cmp
arpl
iret
aad
xor
jp
push
sbb
ret
nop
hlt
out
fs
mov
jne
xlat
enter
popa
rorl
ljmp
in
fisttps
rcll
ljmp
push
js
cmp
push
and
test
call
adc
adc
mov
clc
or
in
mov
loopne
xchg
mov
ror
rolb
mov
push
insl
cmc
mov
sbb
inc
pop
xchg
cmpl
xchg
lds
leave
data16
cld
sarb
mov
push
lods
inc
in
sub
mov
stc
jbe
pop
jnp
xorl
pop
cld
xchg
or
into
addr16
insl
dec
out
out
cld
loope
jmp
popf
cmp
add
dec
icebp
and
or
insb
sahf
push
fcmove
or
xchg
push
cmp
iret
punpckhbw
mov
cmpsl
add
inc
insb
lds
mov
push
fcompl
bound
and
inc
cwtl
cmpsl
add
insl
mov
adc
push
pushf
daa
push
call
xlat
mov
push
push
call
xlat
das
in
insl
mov
push
lock
jle
les
inc
sub
mov
fiadds
aad
sahf
push
and
mov
dec
pop
aas
fiadds
loopne
movsb
mov
pop
fcomps
mov
dec
push
cmp
adc
push
movsl
or
daa
test
jmp
loopne
mov
rorl
je
dec
and
adc
xchg
push
gs
dec
pop
pop
jle
pop
repnz
cmpsl
mov
dec
mov
nop
xchg
roll
loop
inc
sbb
mov
ja
or
mov
test
jl
jne
je
out
add
or
xchg
in
stos
nop
adc
leave
pop
cmp
movsl
add
in
or
cltd
popf
cwtl
scas
mov
ret
add
jle
mov
daa
stos
push
mov
movsl
add
shll
cs
or
inc
ljmp
ucomiss
push
sbb
mov
loope
je
push
cltd
cmp
jb
and
cmp
lcall
inc
pushf
aad
repnz
dec
out
jbe
ret
push
push
into
xchg
xor
xor
and
je
in
push
inc
push
mov
fs
in
rclb
dec
inc
fldcw
xchg
test
repnz
push
cmc
into
fwait
popf
sub
insb
sub
bound
dec
dec
xor
inc
xchg
add
mov
mov
adc
xchg
fs
faddl
mov
xor
insb
mov
dec
sbbb
dec
orl
adc
cmp
mov
icebp
sub
pop
inc
dec
push
and
lea
and
push
pusha
jae
mov
nop
dec
or
sub
shll
scas
pop
mov
dec
push
test
xor
and
push
jne
adc
xlat
and
xor
stos
push
outsb
mov
iret
jns
shll
in
rcr
popa
mov
vmovsd
push
ljmp
movsl
jbe
arpl
ss
sub
pop
ss
outsb
push
incb
aas
int3
and
push
into
adc
mov
imulb
rcrb
lds
adc
pop
movl
xlat
imul
and
sub
pop
and
stc
frstor
les
mov
jne
push
into
aam
push
xchg
mov
inc
sbb
mov
jl
and
daa
sbb
mov
mov
push
sub
jns
loop
mov
lahf
aad
mov
add
sub
jns
lcall
inc
jno
mov
cmp
inc
pop
popl
mov
shlb
aaa
addr16
lds
lods
push
push
fidivs
inc
scas
mov
add
leave
stos
fwait
xchg
xchg
sbb
stos
jbe
adc
fs
sbb
xor
test
call
gs
movsl
xchg
addl
mov
test
in
mov
leave
sbb
mov
icebp
add
add
or
ja
out
push
xor
and
pop
adc
pop
add
out
notb
push
xor
addr16
sub
rcr
cwtl
add
sahf
popf
lods
jo
fidivs
mov
sub
xor
popf
and
pop
imul
les
mov
in
out
push
push
mov
mov
setg
aas
jg
fwait
add
movsb
jae
out
popa
imul
sbb
and
mov
inc
add
add
xor
adc
shlb
outsl
add
sbb
dec
add
ret
stc
inc
push
std
lds
fwait
out
and
inc
xchg
sub
mov
add
and
adc
or
mull
inc
fldl
dec
add
cwtl
push
test
or
push
push
lods
imul
xchg
sub
clc
cmp
in
js
lds
push
dec
jmp
pop
stos
lret
add
push
popf
filds
inc
xlat
cmp
andb
repnz
jno
roll
lcall
or
orl
add
sub
and
aad
dec
inc
jnp
jne
stc
sti
push
fidivs
cmp
call
shrb
das
insl
mov
scas
mov
sbb
inc
mov
cmp
lods
ljmp
sub
or
push
loop
mov
and
inc
and
aad
dec
scas
pop
icebp
ret
push
fidivs
dec
cmp
aad
lahf
jecxz
inc
enter
cmpsb
inc
sub
pop
cmp
shl
mov
testl
cmpsb
int3
inc
inc
shl
xor
stc
sahf
pop
inc
jo
fiaddl
cmpsl
sub
je
in
test
outsb
scas
adc
sub
mov
mov
test
loope
cmp
fldt
cli
ret
inc
lret
dec
push
flds
jecxz
sar
cli
sub
daa
jmp
aas
xchg
hlt
ret
sub
ja
mov
ficompl
aam
jg
popa
popa
imul
test
inc
loope
push
arpl
mov
xchg
test
sbb
lea
and
pop
or
pop
push
pop
dec
cmp
mov
mov
mov
popf
push
xchg
and
mov
cmp
dec
lds
js
shll
jmp
jo
rorl
movsb
push
stos
lcall
push
pop
or
insl
pop
scas
jmp
jle
xchg
pop
movsl
push
sub
and
in
lret
imul
ss
inc
mov
jge
repnz
and
add
pop
push
in
push
sbb
int
stos
push
ret
inc
pop
das
cltd
ljmp
nop
sub
push
decl
sub
mov
rcrl
mov
push
mov
push
orb
icebp
jno
fisubrl
lea
gs
divb
lret
jp
or
jecxz
jge
cmp
mov
push
or
imul
jb
adc
call
test
push
xor
call
sbb
dec
pop
cwtl
mov
xchg
jle
loopne
int3
out
test
std
ret
pop
pop
mov
ja
int3
and
pop
xor
rolb
gs
bound
neg
sbb
dec
sub
daa
jl
push
mov
cmpsl
mov
mov
add
and
pop
sub
ret
push
cmpb
add
xor
cmp
es
repz
data16
fs
mov
je
mov
pop
mov
ret
pop
adc
lcall
ss
mov
imul
sub
mov
xlat
cmp
cs
sbb
sti
dec
rclb
and
shlb
jnp
sub
stos
out
push
push
cmp
add
xchg
aam
jbe
negl
lret
cmp
shll
in
xor
pop
adc
adcb
lock
nop
sub
fcmovu
mov
ret
cmp
add
std
add
or
jmp
pop
add
lods
mov
or
nop
fsubr
ss
inc
adc
inc
dec
inc
test
stc
sbb
push
add
or
mov
and
cwtl
aam
lods
or
out
bound
push
jb
loopne
inc
push
xchg
ja
add
aam
jp
sahf
or
mov
adc
xchg
out
lret
fsubrs
shll
es
js
inc
paddd
mov
test
fisubrs
std
decb
imul
cmpsl
test
pop
lds
out
shlb
andl
outsl
mov
xor
dec
hlt
or
xchg
and
mov
and
fisttpll
jg
xor
ljmp
es
adc
push
mov
test
cli
mov
xor
inc
lea
sbb
mov
out
repnz
ret
and
shrl
adc
bound
jbe
sbb
pop
fbld
mov
aas
pop
pop
push
sbb
xor
fwait
je
lds
add
mov
das
loop
mov
fildll
loope
mov
or
sti
pusha
xor
movsb
bnd
jmp
adcl
hlt
pusha
lods
andb
popf
hlt
ret
insl
pop
mov
repz
cmpl
scas
and
test
push
add
push
fisttps
mov
jo
mov
sahf
in
out
mov
sti
mov
inc
xchg
movsb
add
mov
lds
arpl
mov
sub
or
movsb
roll
lcall
pop
mov
sbb
idivb
sti
sub
jle
orb
fistps
add
addr16
lods
lods
iret
xor
aam
sarl
lret
test
ficomps
out
es
add
xor
jmp
aam
jg
lahf
adc
sbb
pop
mov
sbb
push
or
fstpl
arpl
pop
inc
testl
mov
dec
jge
cltd
sar
lods
lret
out
jmp
insb
loop
mov
je
jle
in
pushf
fmull
test
cmp
in
and
dec
rolb
or
mov
dec
xchg
and
sub
hlt
bnd
pop
out
rcr
cmp
sbb
dec
test
or
xchg
cmp
lods
loopne
imul
insl
je
nop
pop
fsubs
mov
push
jmp
push
aad
sbb
aas
and
leave
xchg
add
mov
and
push
cltd
mov
cltd
xorb
sbb
dec
lods
fdivl
jle
mov
pop
add
fdivrs
sub
scas
pop
mov
js
xor
dec
into
movsb
cmpsl
sbb
clc
push
test
fsts
xor
mov
xchg
jae
shll
popa
out
adc
and
in
jne
je
ficoms
mov
lret
sbb
and
fldl
stos
pop
pop
push
jb
ret
add
rclb
std
in
fnstsw
mov
imul
jle
jmp
jge
pop
adc
imul
mov
pop
lods
sbb
icebp
icebp
ljmp
test
dec
or
aaa
rcrl
insb
mov
cmpsl
popf
dec
jns
sbb
scas
stos
and
push
in
mov
stc
and
pushf
ja
xor
mov
xchg
fwait
loopne
scas
jne
sub
push
jns
and
inc
fdivr
inc
dec
inc
adc
mov
iret
add
outsb
add
xchg
repnz
les
or
cs
sub
loopne
pop
shlb
fcmovu
sub
and
int
mov
stos
bound
lcall
mov
jb
xor
imul
repnz
pop
cmp
xchg
add
adc
call
fidivl
pop
sub
xchg
lret
imul
ljmp
inc
lods
xchg
cmp
aad
mov
jne
pop
ret
cli
sbb
fdivrs
js
push
test
push
mov
cs
les
jne
mov
mov
mov
cmp
adc
dec
iret
sub
stos
pop
outsl
pop
jbe
orb
pop
cmp
or
mov
shr
lret
add
ret
cmp
cmp
stos
out
sbb
out
adc
in
loop
push
in
adc
stos
or
mov
scas
dec
int
push
aas
in
lcall
jge
fwait
outsb
notb
rcrb
dec
push
fdivrl
and
push
sbb
pop
hlt
mov
push
dec
js
push
insb
icebp
mov
cwtl
movzbl
rorl
subl
fistpll
imul
fdivl
pop
jo
imul
cltd
aad
subl
outsl
jnp
addr16
call
sbb
cld
sub
push
adc
sbb
mov
and
mov
and
inc
ret
test
cltd
sbb
es
mull
pop
aaa
outsl
mov
mov
dec
sub
xlat
push
sbb
pop
xchg
mov
sbb
xchg
dec
inc
xchg
lret
aas
lahf
stc
pop
lea
aas
test
andb
in
loopne
dec
into
xchg
add
dec
or
repz
sbb
jne
aad
insb
mov
xchg
xor
cwtl
or
mov
aam
fcomps
jge
gs
jge
mov
inc
lcall
add
push
stos
push
cmp
pop
jmp
movsl
cli
mov
loop
int
push
or
mov
jns
scas
adcb
daa
aam
js
sub
mov
xchg
orl
and
insl
popa
in
xchg
and
loop
xchg
lods
jae
rorb
jmp
mov
pop
subb
sbb
lret
dec
es
in
dec
push
pop
xchg
add
xchg
mov
cmpsl
int
mov
adc
pop
dec
imul
mov
xor
rol
aad
or
pcmpgtb
pop
in
lcall
cli
pusha
push
outsl
dec
adc
mov
lret
fnstcw
out
or
popf
or
push
xor
adc
dec
lock
stos
outsl
or
fdivl
cmp
mov
clc
sahf
lret
mov
or
or
dec
and
push
or
and
lods
xchg
push
push
call
inc
inc
std
push
mov
inc
jge
aam
ds
add
cmp
inc
test
imul
lds
push
adc
push
add
and
mov
sbbb
mov
testl
aam
mov
lds
nop
cmp
push
sub
gs
roll
stc
xchg
sub
outsl
sub
jmp
in
jmp
or
cmp
cmpsl
pop
orb
or
jp
es
leave
xor
adc
and
xchg
dec
icebp
inc
xor
out
pushf
mov
sub
loop
jg
int3
inc
std
test
out
aad
cmp
or
xlat
push
xlat
daa
fs
nop
adc
fwait
cmp
or
shll
jge
inc
or
mov
and
xor
xor
or
add
jecxz
popa
mov
das
inc
jecxz
push
jno
add
not
cmc
jb
movsl
push
loopne
rcrb
xor
gs
int
jl
out
xchg
inc
cmp
in
cltd
sahf
stos
arpl
mov
or
pop
xchg
int3
pop
aaa
inc
dec
cmp
adc
iret
test
adc
adc
jecxz
push
cmp
pop
mov
das
lea
push
cltd
arpl
and
in
fdivs
pop
xor
ret
jl
push
or
pop
lret
mov
insl
in
test
test
dec
in
out
pop
popa
sub
hlt
push
pushf
sub
stos
iret
mov
addr16
out
in
repz
push
mov
dec
cmpsl
rorl
loopew
or
and
loop
ja
mov
cmp
cmpsb
jecxz
and
sbb
dec
fs
pop
movsl
mov
or
mov
or
xor
imul
stc
loop
fwait
ds
pop
ret
pop
clc
ss
lret
cmpsb
sub
lret
pop
lock
sbb
mov
jnp
push
stos
add
dec
mov
mov
adc
jne
loopne
repnz
jp
sbb
and
jl
insb
or
xlat
int
orl
xchg
push
test
dec
mov
mov
xchg
push
ss
mov
sbb
and
pop
cmp
mov
int
push
jo
rep
sahf
stos
mov
or
cmp
insb
jbe
pop
rclb
aad
test
and
fldt
inc
push
inc
push
jl
xchg
dec
jle
jmp
push
sahf
int
pop
clc
lea
scas
xor
or
les
mov
into
mov
outsl
inc
cld
push
jno
fwait
jbe
mov
stos
fstps
out
xor
inc
sar
lock
sbb
pop
pop
xor
ud1
in
jg
mov
inc
mov
mov
enter
int
mov
or
stc
dec
nop
hlt
sub
insb
movsl
pushf
scas
pop
out
and
negb
inc
or
lea
dec
cmpsb
mov
jg
std
or
inc
fcomi
xor
iret
mov
fwait
sbb
or
cmp
movsl
das
and
notb
jp
sbb
in
add
or
dec
ret
dec
jecxz
cmp
push
xlat
adc
sbb
pusha
movsb
push
xor
test
dec
fcom
pop
jns
enter
and
or
jg
stc
cmp
sub
insb
or
aam
mov
xor
stos
mov
push
ja
out
push
es
dec
sub
hlt
outsb
mov
push
mov
adc
xor
das
mov
dec
test
sub
or
movsb
push
cltd
mov
fwait
movsb
mov
cli
enter
hlt
rorb
sbb
divl
mov
fwait
pop
mov
nop
xchg
std
sbb
add
mov
inc
pop
les
stc
add
popa
cli
fcomi
ret
xor
xor
pop
push
jne
jp
inc
cltd
lss
cmp
push
mov
fisttps
sub
xor
jg
adc
xchg
aas
xlat
into
push
inc
adc
lret
cmp
shll
pop
mov
xor
int
push
sbb
dec
cmp
pop
mov
add
push
jle
and
popf
xorl
test
cwtl
pop
push
or
pop
ds
mov
or
mov
pop
ds
bound
add
addr16
lahf
xor
arpl
shrb
jl
int
fwait
sub
sub
add
sbb
jg
popa
dec
mov
jg
outsb
test
mov
inc
aaa
adc
mulb
lret
xlat
rolb
insb
inc
push
mov
outsb
stc
jo
iret
mov
pusha
jbe
xor
xchg
sahf
push
cmp
xchg
fcomi
lahf
pusha
cmp
jno,pt
xchg
mov
test
outsb
jae
aas
adc
imul
adc
repz
jnp
dec
jecxz
xchg
repnz
dec
mov
mov
xchg
loopne
mov
sbb
add
or
mov
int
in
fadd
addb
repnz
daa
xchg
stos
sbb
xor
or
movsl
sbb
cmc
pop
jb
fldcw
mov
push
mov
and
push
int
lcall
in
push
mov
loope
and
xlat
dec
fisubrl
xchg
loopne
ret
mov
pusha
jecxz
cmp
movsl
decl
cmpsl
stos
setne
mov
xor
loopne
mov
inc
mov
mov
jns
scas
jne
and
mov
lea
add
mov
sbb
divl
mov
push
out
inc
loope
dec
push
stos
in
pusha
dec
stos
sbb
test
xor
sbb
mov
mov
push
in
in
inc
clc
cmpsb
out
and
or
mov
ret
or
push
out
jp
fsubl
cmpsl
pop
stos
int3
push
xor
aas
mov
sahf
add
mov
cmc
pusha
fidivrl
sbb
push
ss
sbb
f2xm1
in
jp
mov
sbb
insb
leave
imul
mov
inc
out
mov
add
in
xor
pop
aaa
inc
jo
pop
scas
adc
mov
xlat
or
push
sahf
stc
test
outsb
test
fwait
jg
sbb
repz
loop
pop
push
inc
xor
mov
stos
xorl
leave
mov
push
gs
cmp
xor
mov
addr16
inc
pop
fnstcw
pop
jbe
insl
or
test
inc
aaa
inc
dec
movsl
jp
aaa
nop
sahf
je
insl
dec
inc
ret
mov
fldcw
jmp
mov
mov
sub
in
push
xor
mov
mov
jno
inc
lods
sub
and
jbe
hlt
dec
movsl
je
xor
jl
xchg
mov
rorl
mov
add
jbe
dec
sahf
inc
xor
fdivrp
jb
scas
sbb
ret
xor
jne,pt
cld
insl
or
pushf
sub
rol
clc
mov
mov
or
push
or
adcl
and
sarb
lret
insl
iret
aad
fimull
das
arpl
push
and
dec
xchg
sbb
push
outsl
int
fucomi
mov
jo
adc
int3
scas
jo
mov
cmp
in
fdiv
pop
adc
es
mov
push
cltd
lret
push
mov
mov
xor
ja
out
int
and
int3
dec
push
mov
int
iret
imul
sub
push
add
pcmpgtd
nopl
in
sub
stc
filds
fisubs
mov
add
dec
imul
popf
imul
add
rorb
dec
or
movsl
mov
jl
add
test
mov
aam
jp
stos
out
movl
andb
adc
das
sub
in
fcomp
outsl
push
inc
daa
xchg
xor
xchg
bound
lods
lcall
adc
jno
mov
inc
cld
iret
sbb
leave
mov
xchg
inc
and
push
fistl
stc
std
mov
mov
mov
jge
adc
das
push
cwtl
sbbb
cmp
push
push
lret
es
jmp
fists
pop
cmp
sbb
movsb
lahf
push
mov
imul
leave
pop
aas
mov
pop
mov
push
cmpsl
pop
scas
dec
and
mov
push
movsb
push
cmc
mov
sub
roll
xor
dec
fisubs
push
xor
mov
mov
lcall
cmp
mov
mull
repnz
call
xor
rcl
lahf
pop
xchg
mov
mov
outsb
loope
inc
jnp
jl
leave
xchg
out
in
dec
cs
sahf
mov
mov
pop
int3
aas
outsl
mov
repnz
insb
xchg
into
and
fisttpl
mov
sbb
xchg
jae
popl
xor
mov
leave
xchg
sub
sbb
mov
sbb
enter
pop
push
test
cmpsb
js
push
pushf
addr16
outsb
add
adc
imul
mov
xchg
out
xor
insb
dec
mov
mov
pop
test
out
and
mov
ljmp
jecxz
xchg
mov
sub
rorl
cli
add
pop
jnp
push
aas
jl
inc
xchg
clc
dec
icebp
sub
push
sti
mov
fidivrs
sahf
mov
arpl
jecxz
testl
hlt
or
push
mov
pop
imul
xor
jns
fisubs
orl
mov
mov
pop
adc
stc
into
das
iret
out
cmp
sub
imul
push
xchg
hlt
outsb
xchg
cmpl
mov
sarl
movsl
jbe
sbb
xor
xchg
sbb
imul
cmpsl
mov
popf
mov
lret
mov
push
fcmovnb
inc
jmp
mov
lds
aas
in
cmc
dec
popf
incl
mov
add
icebp
arpl
shl
pop
xchg
sbb
xchg
stos
mov
movsl
aas
lods
sub
es
in
dec
rorb
cmp
xor
lcall
fadd
test
add
mov
addr16
mov
rcll
lret
call
cmp
repnz
push
mov
push
incb
inc
jbe
dec
mov
mov
test
ss
dec
ss
icebp
pop
sub
cltd
xchg
sqrtps
mov
enter
dec
dec
arpl
addl
inc
cmp
lods
movsb
int3
stos
fidivl
scas
ret
clc
mov
movsb
mov
rcl
adcb
addr16
outsl
int
adc
inc
xor
adc
adc
xchg
out
jne
push
jmp
inc
sub
jbe
sbb
mov
fiaddl
in
jecxz
dec
out
jg
xchg
mov
mov
mov
xchg
or
inc
push
mov
mov
push
jae
jmp
add
inc
mov
pop
outsl
fsts
hlt
xchg
xchg
sub
lods
pop
adc
lret
jecxz
dec
stos
add
sub
test
xorl
cmp
gs
or
out
pop
andl
or
std
push
gs
mov
jmp
inc
jne
test
cmpsb
inc
xchg
dec
inc
jp
sbb
xchg
mov
adc
rolb
orb
add
xor
xchg
scas
sbb
jecxz
jge
loopne
outsl
outsl
xchg
pop
push
jp
loope
cmp
adc
xchg
hlt
pmuludq
rdpmc
call
ja
pusha
out
fwait
ret
lods
cmp
pusha
dec
lods
dec
push
fdivrp
mov
mov
inc
mov
and
xchg
add
outsl
lock
cs
ret
cmp
or
loopne
aas
lods
rorl
jmp
outsl
and
push
mov
sub
sbb
scas
and
outsl
xchg
fcmovb
movsb
ja
add
mov
aaa
fidivrl
push
or
fdivrp
pusha
push
mov
fnsave
jle
les
xor
cwtl
movsb
lahf
and
mov
fwait
inc
popf
adc
jmp
xor
int3
jb
push
mov
mov
xchg
mov
mov
movsb
mov
add
pcmpgtb
insl
mov
fs
mov
jle
xchg
dec
lcall
jns
push
outsb
roll
dec
mov
roll
or
fildl
pop
mov
cli
or
pop
sub
pop
dec
push
ja
int3
push
ljmp
jae
xorb
and
arpl
ret
push
jl
test
cmpsl
jb
lock
pop
xor
test
mov
mov
mov
setb
shlb
imul
rorl
ja
nop
scas
jmp
inc
movsl
add
lret
in
pop
pop
or
add
xor
cmp
mov
popa
sub
sar
in
jmp
add
inc
loopne
or
mov
ss
mov
in
pop
sbb
jl
ja
repnz
mov
mov
into
pop
cmc
sub
stos
push
xchg
repnz
dec
jmp
loope
cld
fnstcw
push
mov
and
sbb
sbb
loopne
push
pop
divl
sbb
addr16
sar
inc
cltd
loopne
pop
fists
push
pop
stc
adc
sti
push
adcl
fisubrs
jb
or
push
popf
dec
sarb
loope
scas
mov
adc
mov
lods
jns
xchg
in
mov
or
pop
shl
notb
xchg
lret
mov
shrb
xchg
shll
xchg
fsts
int3
pop
jbe
xchg
bound
in
add
push
je
pop
xor
or
pop
adc
xchg
adc
popa
mov
jg
cmpsl
out
ficoms
xor
popa
push
into
nop
xor
mov
jmp
pop
and
lahf
sbb
mov
mov
xor
popa
add
xlat
je
les
cmp
pop
into
fs
mov
aas
cmpsl
jne
lcall
dec
cwtl
cwtl
sti
int
jae
inc
insb
push
cmc
mov
cmp
dec
divps
imul
mov
inc
pusha
xchg
clc
fisubrl
jae
sub
push
pop
sbb
mov
push
mov
call
pop
jmp
sahf
repnz
les
mov
sub
int
pop
pop
xchg
aas
xor
xor
pop
sub
pop
push
gs
xlat
adc
icebp
arpl
aas
jns
dec
mov
mov
adc
leave
test
cmp
scas
movsb
mov
jl
insb
xchg
cmc
mov
call
xchg
sub
push
or
fsub
and
xchg
mov
or
fwait
adc
push
std
js
add
ds
pop
dec
and
clc
inc
das
jb
and
jno
pop
iret
cmp
mov
mov
lock
out
addr16
pushl
inc
sbb
int3
aas
inc
loop
mov
cld
pop
out
adc
push
lahf
mov
push
jge
xchg
add
jns
inc
stos
mov
mov
push
repnz
adc
fs
xor
or
es
pop
xchg
mov
pop
xor
lods
out
push
int
testb
mov
mov
xchg
les
loope
dec
push
mov
out
imul
adc
pusha
inc
jg
jo
dec
pop
mov
add
xor
xchg
jp
test
lahf
pop
lret
adc
aam
cli
push
ret
add
or
mov
loope
imul
sbb
scas
les
inc
pop
add
sbb
lret
and
or
ss
frstor
je
montmul
cmpsb
inc
inc
add
add
lret
sub
push
shl
sbb
int3
lret
push
out
cmp
lahf
mov
and
out
outsl
xorl
insb
xchg
jne
fsubl
dec
out
loop
into
test
outsb
sbb
cmp
gs
pop
push
mov
and
add
adc
repnz
inc
mov
mov
ljmp
stc
add
sahf
fs
xchg
lods
and
les
lock
bound
mov
cmp
cmpsl
pop
jecxz
into
loope
jecxz
jnp
mov
call
cld
outsb
dec
faddl
insb
inc
addb
jp
and
lea
fsubs
cld
imulb
cmp
and
fimull
mov
in
data16
in
mov
sub
pusha
outsl
pop
std
daa
and
cwtl
fildl
pushl
int3
js
orb
mov
rolb
push
jp
mov
sub
xor
or
loope
bound
add
cmc
sub
pop
jb
xchg
and
dec
clc
into
xor
sbbl
loop
or
or
xchg
jmp
loope
in
in
inc
cmpl
jae
jno
pop
ljmp
movsl
pop
fmul
jns
ret
adc
fdiv
xchg
and
sbb
dec
test
xchg
lret
pop
push
mov
dec
mov
outsb
adc
stc
mov
lods
imul
daa
outsl
and
adc
sub
std
push
xor
loop
push
ja
ljmp
sbb
cmp
cmp
mov
jno
fisubl
test
sahf
out
push
pop
popa
push
jno
icebp
and
add
mov
dec
int3
and
xchg
shl
dec
mov
push
xor
enter
mov
cltd
cmp
scas
xchg
sub
aaa
cmp
and
repz
scas
ret
inc
jb
mov
pop
unpcklps
dec
out
arpl
flds
mov
add
inc
dec
daa
adc
push
cmp
nop
scas
rorl
das
mov
into
testl
in
pop
inc
jne
iret
dec
jno
inc
sbb
mov
jne
sbb
arpl
dec
push
div
add
mov
fbstp
push
int3
sub
mov
popf
dec
mov
js
inc
std
out
push
mov
dec
or
adc
hlt
xor
les
sti
dec
fdiv
bound
jno
test
and
adcl
push
xchg
nop
mov
cs
mov
jne
adc
jno
lcall
xchg
mov
cltd
clc
sti
std
std
call
or
jg
sbbb
popa
rclb
add
pop
jnp
adc
mov
lret
jbe
jno
fsts
jns
sbb
in
and
gs
and
cmp
add
js
mov
loop
stos
loope
insb
rclb
aas
pop
sub
mov
call
dec
out
jno
mulb
dec
jg
cli
add
add
enter
fmuls
xor
repz
inc
pop
dec
lods
lods
das
and
and
push
js
enter
xor
and
mov
xchg
not
push
das
aad
mov
mov
xchg
mov
pop
mov
lods
lods
lahf
outsb
inc
sarl
shlb
pop
inc
jg
mov
shlb
lcall
das
cmpl
adc
pop
stc
or
incl
call
or
push
mov
stos
xchg
add
mov
sbb
cmpsb
sbb
mov
enter
in
pop
push
dec
push
fbld
cmpsb
loope
stc
dec
and
aad
enter
cs
push
int3
mov
xchg
scas
sub
call
push
mov
adc
pop
fnstsw
pop
outsb
sub
aam
lcall
and
push
loopne
scas
sahf
pusha
idivl
aas
movsl
jg
jmp
mov
push
leave
push
je
arpl
mov
and
cld
aaa
gs
and
pop
clc
adc
out
sahf
push
mov
or
std
imul
movhps
arpl
shrb
lea
sbb
dec
dec
popf
shl
lods
outsb
test
stc
lods
adc
aas
xchg
sub
jge
iret
popf
fsts
jmp
add
adc
xchg
ja
in
pop
xor
inc
adc
dec
xchg
or
sub
and
xor
iret
daa
es
mov
dec
push
jns
sbb
push
jb
xchg
movsl
or
fisttpll
and
push
test
jno
mov
push
rcrl
pop
jo
lock
cmp
out
ds
mov
cld
mov
pusha
pop
jmp
dec
add
shrl
mov
mov
gs
scas
push
std
jns
aam
gs
jmp
jb
lret
dec
fs
test
jno
ljmp
call
out
mov
xsha256
cmpsb
push
sub
xchg
lock
mov
lcall
cltd
mov
jae
sbb
popa
imul
call
push
jo
mov
test
ds
sarb
pop
add
mov
add
stos
mov
fs
fiadds
xlat
popf
pop
rcrb
nop
sti
idivb
mov
or
aas
gs
adc
mov
lahf
and
sbb
sub
cmp
das
lret
enter
mov
loopne
ljmp
arpl
dec
lea
sbb
int
jmp
adc
adc
or
mov
sub
dec
dec
mov
aaa
mov
inc
aas
dec
roll
pop
mov
movsb
imul
mov
pop
or
xor
aas
jecxz
out
fnsave
adc
xor
adc
dec
ja
adc
icebp
out
std
mov
cmp
mov
out
jo
cmp
out
inc
cwtl
xor
aam
cwtl
push
adc
cmp
pop
mov
sub
test
shlb
add
sub
jge
or
sub
in
notl
pop
jnp
popa
mov
int3
fistpl
sbb
push
imul
sarb
daa
jns,pn
lock
sub
lret
in
in
and
xor
push
repnz
push
in
stc
rol
add
ss
push
loop
jle
dec
jno
or
loopne,pt
dec
pop
push
mov
in
and
scas
jle
int
or
inc
pusha
repnz
fsubrl
in
iret
or
outsb
push
out
or
mov
push
lock
xlat
js
or
movsl
push
jmp
loope
repnz
clc
lret
mov
jge
cmp
dec
mov
jmp
cmpb
mov
lahf
sub
mov
test
dec
lock
idiv
sbbl
xchg
inc
inc
bound
xchg
mov
nop
aaa
adc
push
xchg
cld
lret
shll
mov
mov
xor
mov
in
loope
cli
xlat
aad
push
push
pop
pop
xor
std
mov
sbb
sbb
add
sti
mov
jb
in
ret
stos
xor
xlat
or
sub
mov
lods
lds
jo
repz
push
mov
xlat
aam
or
cli
cwtl
inc
push
mov
add
scas
pusha
outsb
mov
xor
xchg
lcall
mov
pop
mov
add
popf
movl
ret
jg
mov
lock
divl
cs
jno
in
mov
xor
cltd
mov
inc
fwait
pop
sub
and
jecxz
fldcw
into
or
mov
fisttpl
outsl
iret
test
je
mov
orl
or
pop
cmp
or
je
xchg
lds
xchg
mov
enter
xor
sti
and
push
mov
jne
test
lods
stos
jl
cmp
movsl
and
and
add
mov
stos
test
cltd
pop
jne
mov
in
popf
jns
test
jne
lret
fnstsw
fisubrs
xor
adc
and
push
aam
imul
mov
out
filds
test
jbe
xor
mov
pop
rol
add
xor
jmp
mov
add
inc
addl
jae
addl
out
in
into
and
adc
ret
dec
rcll
sbb
test
pop
divb
bound
mov
in
jo
movsb
jle
inc
mov
add
fnstenv
mov
mov
dec
jmp
pop
cmp
xor
fidivs
cmpsb
inc
aas
decb
jo
ja
jns
dec
frndint
and
sbb
xor
jp
push
xchg
lahf
push
cmpsb
inc
movsl
pop
adc
mov
mov
jae
inc
out
movsl
aam
mov
or
sbb
push
into
or
ret
fmuls
cli
enter
add
pop
and
arpl
jno
imul
lods
out
or
inc
mov
pop
popa
jge
pop
or
js
cmp
push
and
cmp
pop
aas
out
fcmove
lods
cmpl
jge
lahf
push
cmpsb
push
movzwl
movl
aad
mov
shrl
mov
scas
lahf
jnp
arpl
gs
nop
and
pushf
loopne
dec
dec
imul
push
lds
test
shll
imul
std
incb
nop
dec
jg
inc
out
pop
or
mov
push
adc
dec
outsb
jmp
or
enter
in
xlat
sub
andl
jp
mov
and
aaa
enter
cld
xchg
inc
and
jg
outsb
sub
nop
dec
pop
pop
or
xchg
ss
adc
cld
xchg
mov
pop
lds
inc
or
stc
sub
inc
push
push
cltd
add
out
dec
dec
imul
loop
adc
add
jge
mov
cli
ficomps
les
add
xor
jecxz
pop
push
xchg
bound
rcll
ljmp
movsl
es
loope,pn
dec
icebp
adc
adc
imul
and
sbb
sbb
mov
xor
xchg
ljmp
lret
push
xchg
xchg
dec
mov
or
jb
div
or
std
push
cmp
jle
int3
ret
push
cs
mov
out
movsb
test
xor
aad
cld
inc
shlb
hlt
subb
jbe
leave
lods
es
sar
out
mov
jo
sbb
cwtl
imul
mov
jae
inc
lret
xor
test
push
jecxz
inc
inc
xor
sub
xor
inc
push
gs
imul
nop
mov
in
stc
sti
shl
imul
mov
sbb
arpl
cmp
push
push
dec
out
ljmp
mov
cmpsl
nop
scas
inc
mov
sub
inc
fildll
dec
in
dec
into
scas
in
xor
ds
cmpsl
ret
test
fwait
lcall
push
lock
and
push
adc
adc
xor
mov
mov
dec
dec
mov
test
xchg
dec
dec
push
outsb
pop
fcmovnb
cld
add
sub
inc
add
sub
and
fs
pop
gs
mov
ja
add
dec
mov
add
jae
aam
jl
in
or
push
mov
add
frstor
test
fsubrs
add
jmp
dec
mov
mov
ret
dec
add
xchg
xor
mov
mov
lcall
scas
xchg
pop
popf
sbb
jecxz
test
or
movsb
movsb
mov
and
cltd
add
filds
insl
jmp
adc
scas
adc
iret
or
loop
add
mov
push
lods
loopne
xchg
push
nop
in
inc
stos
in
and
icebp
pop
jne
lahf
mov
add
jo
jecxz
lds
adc
or
and
xor
insl
repz
push
insb
xor
mov
shrl
nop
add
push
cmp
jae
mov
inc
in
mov
adc
jo
pop
jge
adc
maxps
cld
pop
imul
insl
xchg
push
add
and
add
scas
sub
or
xchg
ret
push
xchg
test
int
sub
xchg
inc
dec
mov
xlat
bts
xor
inc
cltd
ficoml
sub
into
sbb
sahf
pop
cmp
xchg
aad
sbbb
pop
and
and
xchg
and
push
sbb
vaddsd
call
das
mov
rorb
das
movsl
or
decb
lods
dec
xchg
ffree
aad
jne
inc
sub
xchg
jo
jge
shlb
pop
pop
cmc
jo
mov
test
loopne
repnz
cmp
inc
push
shll
push
adc
jnp
cmpsl
lcall
mov
xor
push
lret
lahf
std
push
push
jbe
pop
sbb
mov
dec
repnz
mov
sub
sub
imul
movl
xlat
cmp
lock
adc
mov
and
xor
rolb
xlat
pop
lods
inc
push
adc
mov
mov
fsubl
sub
lret
mov
add
sub
imul
hlt
mov
cmp
adc
inc
iret
adc
or
paddsb
fists
mov
ret
inc
push
out
sbb
add
aaa
and
inc
and
aas
or
jmp
pop
xor
mov
mov
dec
or
sbb
lcall
mov
ret
cmpsl
rolb
iret
sbb
cmp
stos
fwait
pushf
dec
cmp
in
cli
jl
adc
cli
mov
mov
popa
in
shll
pop
mov
mov
into
hlt
sub
adc
push
dec
adc
sbb
push
ret
add
xlat
pop
push
mov
add
dec
cmp
jnp
xor
mov
outsb
ss
mov
sbb
sbbl
jmp
xchg
call
inc
jecxz
daa
inc
in
xchg
xlat
arpl
aad
push
and
mov
aas
iret
rorb
push
cwtl
xlat
cmc
dec
mov
popa
xchg
fnstsw
mov
mov
loopne
sbb
std
xchg
and
xchg
sahf
xlat
fwait
mov
dec
je
xchg
xchg
lock
outsl
xchg
xchg
mov
sbb
test
les
jne
sbb
movb
push
popa
mov
dec
xchg
sti
xchg
adc
inc
outsb
ja
jno
adc
hlt
in
or
add
addl
movsl
inc
shrl
jmp
cmp
call
dec
int
sub
outsl
out
lds
jmp
dec
mov
out
jb
mov
push
mov
movsl
pop
pop
push
lcall
hlt
lcall
gs
push
leave
jecxz
in
push
add
aam
add
sub
jl
mov
gs
pop
xchg
xchg
call
jl
xor
jl
jmp
bnd
xchg
mov
lret
sub
insl
sbb
std
icebp
iret
scas
fdivr
hlt
and
mov
test
sahf
cmp
insl
cmp
jmp
adc
add
adc
outsl
or
stos
or
mov
mov
sahf
test
aaa
sbbl
ds
xchg
sti
jns
or
cmp
outsl
mov
xchg
into
lds
mov
xor
push
xor
nop
xor
or
gs
pop
movl
mov
push
push
cmp
popf
push
push
clc
outsb
andb
jb
mov
cld
enter
vpavgw
push
push
push
inc
mov
mov
shll
fwait
adc
push
xchg
iret
sub
and
cwtl
loop
into
jge
add
xor
daa
pop
xchg
push
xchg
pusha
arpl
pop
test
mov
adc
or
nop
addr16
mov
jb
xlat
inc
push
hlt
adc
test
xchg
lods
shrl
and
push
and
and
cmpsb
jmp
aaa
int
jmp
adcl
mov
dec
in
or
sarb
mov
int3
pop
es
jecxz
push
jmp
cmpsb
cmp
scas
push
outsl
add
or
push
adc
pop
pop
dec
inc
mov
mov
sub
mov
mov
and
das
adc
sub
scas
adc
inc
push
jecxz
fimull
xchg
roll
jns
cs
xor
mov
or
in
add
cmp
dec
addb
out
inc
push
lds
aam
cmp
jo
dec
push
movsl
nop
jle
jle
push
pop
mov
rorl
adc
mov
and
out
lret
xchg
les
cmp
loopne
add
aam
xor
in
stos
test
insb
mov
insl
out
fs
jbe
pop
out
adc
sbb
loope
cwtd
fucomi
adc
mov
rcrl
cmovo
bnd
jb
hlt
mov
adc
lods
fstpl
add
jns
in
in
mov
clc
inc
mov
cwtl
mov
lea
in
dec
push
bound
inc
and
jle
pop
lret
mov
mov
add
arpl
sbb
sub
xor
mov
dec
jns
or
cli
push
ret
ss
es
jl
lds
loope
test
pop
data16
mov
or
cmp
jle
sbb
add
xchg
cmp
inc
mov
jge
jb
push
test
aam
sarb
dec
xor
pop
jno
and
je
xor
sbb
mov
push
mov
sub
xlat
arpl
mov
mov
adc
pop
mov
sarl
mov
jge
jnp
loop
mov
cmp
gs
jg
mov
call
jo
xor
mov
sub
outsl
mov
mov
stos
in
scas
pop
je
out
fucomi
mov
daa
stos
and
repz
js
fcomps
dec
das
lret
or
lahf
xor
xchg
dec
mov
fs
dec
mov
xchg
ret
in
adc
fldl
lret
cmp
xor
jge
loope
sbb
adc
cmp
cmpsl
adc
push
xchg
testl
mov
in
ficoms
cmp
shlb
cmp
movsl
dec
ljmp
outsl
jg
jle
xor
test
popa
movsb
mov
xchg
test
cli
fstps
adc
aad
leave
xchg
dec
flds
and
or
mov
out
outsl
dec
mov
inc
addb
sub
fdivrs
arpl
xorl
lea
xor
xchg
xchg
fsubl
jnp
popf
and
cmp
loope
enter
lret
scas
call
jne
icebp
cmp
aaa
in
fstl
addl
jp
cld
add
dec
bound
mov
xchg
ret
insl
cmp
pusha
lahf
cwtl
adc
pop
lds
stos
xlat
push
jg
xor
xor
mov
adc
cmp
fistpl
lock
push
cwtl
in
or
pusha
loopne
mov
mov
and
pop
cmp
jmp
repnz
jge
xlat
jno
dec
loop
scas
aaa
jbe
sub
push
sbb
loopne
dec
sub
dec
jne
push
xchg
cmc
ror
mov
inc
emms
and
push
out
test
lret
jmp
mov
cmp
aas
call
jge
jl
scas
pop
scas
xor
movsl
fnstenv
dec
add
sahf
xchg
mov
or
popf
loope
sahf
in
mov
rcr
cmpb
push
and
dec
psubb
mov
inc
cmc
jo
dec
insb
in
push
shr
subb
std
jne
outsl
push
out
icebp
inc
int
gs
imul
cmp
fcompl
lods
pop
ss
dec
ja
hlt
outsb
xchg
cltd
sub
loop
cmc
pop
and
pop
sub
mov
push
daa
mov
inc
xor
mov
push
xor
mov
lahf
sub
mov
mov
ss
sbb
sub
cld
push
jo
int3
add
js
or
inc
das
dec
xor
mov
push
or
sahf
mov
mov
daa
mov
std
nop
push
mov
lods
jmp
push
out
adc
repnz
arpl
push
inc
xchg
out
inc
pusha
jno
cmp
pop
cmp
or
lods
push
mov
adc
mov
aaa
push
divl
pop
loop
mov
mov
hlt
jbe
imul
ffree
sub
cmpsl
xchg
pop
push
filds
outsb
cmpsl
out
xchg
popf
jns
push
or
loop
ret
mov
mov
shll
cli
push
xor
lahf
orb
sub
add
fldenv
xchg
sahf
lcall
jg
and
arpl
pop
mulb
popa
test
nop
mov
rorb
pop
mov
jle
xchg
pop
nop
cmpsl
lods
leave
inc
pusha
mov
fisubs
and
mov
dec
out
fwait
jmp
lock
add
shr
add
and
xchg
jg
aam
mov
scas
int3
pop
pop
mov
ja
mov
jnp
cltd
mov
test
hlt
lret
add
fcom
mov
push
data16
xchg
aad
xchg
and
loopne
xchg
dec
call
mov
push
mov
lds
popf
jnp
fcmovbe
mov
xor
test
or
mov
xchg
jb
lea
push
nop
xor
shll
add
push
and
pop
rcrb
popf
inc
je
test
insb
ja
dec
lock
popf
stc
mov
xor
dec
jne
xchg
dec
inc
clc
out
loop
ss
outsl
mov
sbb
popf
rclb
push
jno
cmp
jbe
lock
int
fmuls
in
repz
pop
adc
mov
adc
add
dec
out
adc
mov
xor
push
add
out
dec
push
ficomps
jg
rcll
jl
in
push
daa
sbb
cs
lahf
mov
out
jns
test
icebp
push
cmpsl
push
stc
jmp
adc
fnsave
outsb
leave
in
sub
jbe
popf
mov
daa
popa
xor
movsl
push
and
mov
lcall
jae
xchg
push
sub
loope
sub
xlat
add
cltd
mov
push
xor
xor
cs
xchg
ss
aam
orb
jnp
andb
movsb
int3
jne
push
pop
in
mov
mov
inc
add
les
add
decb
dec
sub
rcrb
add
aaa
jns
enter
fs
xor
sub
test
jle
scas
or
hlt
pop
xchg
int
push
fistpll
add
cltd
fcompl
pushf
in
aam
movsl
mov
sbb
pusha
xchg
and
jbe
adc
cmp
shll
dec
imul
out
add
aam
aaa
pusha
je
stos
adc
pusha
jnp
xchg
jmp
cs
loop
add
int
mov
dec
sti
mov
scas
sti
cmpsl
fbld
daa
orb
out
xor
iret
dec
out
inc
aad
stos
push
orl
inc
sbb
imul
cli
repz
mov
push
add
jnp
xchg
fisttps
xor
pop
in
mov
movsb
push
dec
push
sahf
addl
pop
inc
xor
pop
shr
jnp
shrl
mov
dec
repz
movsl
ja
xchg
xchg
sti
and
mov
clc
xor
outsl
pop
cmp
cs
pop
add
mov
dec
lcall
popaw
or
les
insl
pop
xchg
mov
sub
mov
mov
mov
mov
in
xchg
xchg
out
int3
xchg
xor
arpl
neg
jecxz
mov
jae
dec
jo
lods
outsb
xchg
cwtl
fs
enter
pop
inc
ja
div
pop
das
mov
loope
dec
sub
jb
push
mov
cwtl
nop
mov
aam
xchg
ds
ret
or
cmp
sub
pop
jae
or
and
sub
xchg
inc
xchg
cltd
cmpsb
inc
xchg
fidivs
mov
mov
rcrb
sahf
inc
cmp
scas
xor
mov
cmp
nop
dec
bound
pop
faddl
mov
in
scas
pop
gs
mov
mov
pop
mov
and
pusha
fisubl
add
add
sub
cmp
lret
repnz
out
sbb
add
push
insb
or
sub
sbb
dec
jbe
sub
cmp
pop
mov
xlat
iret
inc
push
ret
or
aas
loope
das
inc
inc
iret
or
aaa
in
cmpsb
in
test
xchg
jp
je
inc
cmpsb
cltd
xorb
andb
fdivr
mov
out
push
mov
lds
cmpb
loop
adc
test
and
dec
and
test
pop
xor
jg
push
test
lahf
mov
sbb
push
and
arpl
mov
jmp
add
sar
pop
pop
scas
lret
push
hlt
imul
jmp
movsb
jmp
pop
push
popa
xchg
mov
pusha
lods
lea
imul
gs
rorl
aas
add
mov
mov
cltd
xlat
addr16
popf
fbstp
sbb
icebp
jp
pop
sub
test
push
xor
movsl
js
mov
xchg
aam
add
inc
lret
out
cwtl
out
cmp
push
push
fs
in
popf
xchg
xor
fdivl
or
mov
subl
cmp
xchg
cltd
jecxz
dec
sbb
jbe
rcl
loopne
cmp
or
inc
mov
adc
add
aam
adc
sbb
mov
int3
or
push
xchg
cwtl
add
fcompl
fmull
add
fs
test
bound
jecxz
dec
test
js
js
mov
mov
test
adc
or
cli
loop
jbe
loope
push
xor
jnp
stos
xchg
test
mov
mov
xchg
add
push
push
sti
push
xchg
fidivrl
stos
call
movq
div
sub
lea
nop
push
mov
ja
mov
push
pop
pop
loop
mov
andl
dec
out
inc
cmp
jle
leave
xchg
hlt
mov
cmpl
fimuls
xchg
sub
clc
jne
movsb
dec
or
xchg
push
enter
cmp
fists
fstps
dec
mov
xchg
std
dec
fadds
dec
or
jnp
leave
xchg
lods
mov
sti
or
sub
aas
inc
mov
in
mov
xor
sbb
test
scas
lret
bound
imull
aad
nop
or
lea
les
shlb
mov
adc
or
mov
ja
dec
jb
rolb
hlt
rcrb
dec
add
mov
js
test
and
mov
sahf
pop
pop
pop
mov
mov
xchg
das
scas
and
repz
pop
pop
dec
or
and
push
filds
or
jmp
and
lock
push
fwait
mov
ja
pop
icebp
mov
cmp
xchg
lods
rcr
mov
fldt
out
jb
mov
jae
data16
aad
ret
adc
dec
xor
xchg
push
xor
xchg
in
pop
mov
and
orl
adc
call
jno
mov
dec
sbb
add
in
pushf
mov
mov
insl
or
add
in
or
mov
jo
mov
std
dec
xchg
add
aam
in
xor
fnstcw
ret
rep
pop
aad
dec
outsl
inc
fimull
jp
ds
fisttps
aam
mov
insl
lock
cwtl
dec
mov
inc
inc
test
sbb
outsl
mov
mov
xor
sub
mov
lds
mov
jns
fld
xor
inc
lods
pop
les
clc
int3
movups
insb
ret
and
or
cmp
les
pop
sub
jae
std
mov
movsl
sti
push
adcl
mov
add
or
dec
popa
jp
push
sahf
int
cmp
mov
dec
sti
mov
cmp
fwait
ror
js
or
fcoml
cs
mov
mov
aam
pop
mov
and
stos
xchg
cmp
or
mov
mov
mov
cld
xorl
lahf
jbe
paddb
shl
out
enterw
inc
test
popf
pop
hlt
fcompl
or
js
push
dec
je
sub
pop
jbe
push
add
inc
cld
inc
sbb
lods
mov
fadds
add
xchg
cmp
cmpb
mov
roll
mov
std
inc
pop
addr16
jo
mov
cmc
adc
jo
lcall
test
push
sub
rcrl
inc
aaa
les
shlb
ja
jbe
adc
pop
subl
push
std
dec
imul
mov
divb
adc
add
in
aas
call
push
cmpb
leave
pop
sub
mull
insl
inc
inc
add
ss
cmc
sbbl
test
outsl
jl
push
repz
sub
cmp
cmp
mov
fsubs
mov
lea
sub
mov
mov
push
sub
jae
pop
jbe
negl
push
cmp
loop
mov
lds
mov
fidivrl
clc
insb
lods
cmp
xchg
es
pop
sti
fdivr
jmp
pusha
lahf
roll
pop
test
add
sahf
pop
mov
xchg
dec
sub
add
cld
push
push
cltd
orb
enter
pushf
sbb
outsl
unpckhps
mov
xor
lahf
jo
std
nop
mov
cmc
lret
ljmp
mov
icebp
mov
movsl
push
xor
mov
mov
pop
and
into
fisubrl
pop
jg
xchg
fsubl
loopne
push
xchg
or
cmpsl
sub
stos
scas
push
mov
cmpb
mov
iret
jle
insl
out
xchg
fsubrs
inc
das
jno
das
test
and
popa
leave
roll
cli
scas
cmp
cltd
and
scas
lock
sub
jp
push
popa
mov
xchg
push
mov
loope
sbb
mov
imul
testb
gs
inc
inc
out
imul
daa
into
inc
aaa
cld
mov
loope
push
fcomi
cwtl
xchg
sub
out
mov
adc
mov
out
xor
push
add
pop
adcl
mov
lods
lods
sub
popf
push
mov
insb
sub
mov
or
mov
lret
inc
sbb
stos
pop
das
mov
es
stos
pop
add
aad
pop
outsl
int
mov
in
cs
adc
and
stos
push
addr16
outsl
in
cmp
sub
cmpsb
pop
jp
mov
mov
lahf
iret
mov
in
aaa
xchg
add
scas
movsb
add
adc
int
mov
adc
into
mov
xor
das
out
shrb
inc
lret
movsl
cli
fwait
je
push
dec
lds
pop
inc
addr16
lds
adc
repz
cmpsb
or
shrl
lea
loop
cld
inc
xchg
pusha
ficomps
dec
insb
fisttps
stc
lea
pop
ret
mov
pop
popa
or
out
decb
or
and
test
fdiv
sbb
lret
pop
flds
sub
push
mov
sahf
int3
push
push
shrb
insl
pop
inc
movsl
lds
pop
fstl
sbb
cmpsl
popa
insb
pop
inc
jo
xchg
push
iret
xor
cmc
jmp
lock
fwait
lahf
sub
add
int
push
ficoms
xchg
xchg
test
adc
int3
mov
les
xor
jmp
cwtl
fbld
movsb
cwtl
jp
dec
clc
out
jmp
mov
ficoms
out
andb
jmp
push
test
repnz
test
sub
roll
add
sarb
mov
rcrl
out
mov
sub
and
pop
jo
jecxz
inc
xor
arpl
and
call
and
das
mov
or
fdivl
adc
jne
out
jp
in
lea
xchg
movsl
jno
mov
push
addb
outsl
addr16
int
xor
jg
mov
pop
dec
das
stc
pop
test
stos
adc
pop
mov
js
bound
dec
cwtl
mov
repz
dec
inc
or
cmpsl
cwtl
add
dec
fidivs
jae
add
lods
test
jp
jb
popa
ss
iret
int
push
xor
inc
in
mov
shl
addl
je
je
mov
inc
inc
std
mov
and
in
dec
lea
inc
mov
pop
andl
aas
jecxz
inc
adc
inc
rcr
adc
jns
popf
mov
push
testb
dec
dec
xlat
cmc
or
xchg
dec
int3
out
testl
test
cmpsb
jnp
popf
leave
test
faddl
inc
aas
xor
imul
inc
mov
jle
push
shll
std
mov
jge
fdiv
into
push
fstpl
sub
inc
jo
lret
fcoms
mov
ror
dec
in
enter
pop
xor
clc
adc
mov
sbb
xor
sbb
inc
adc
inc
push
imul
rolb
mov
push
fstpl
push
and
je
ret
pop
popa
xchg
test
cmp
call
aas
movsb
inc
jp
stos
sahf
out
ds
out
pushf
loope
and
mov
cmpsl
push
push
lds
xrelease
pop
cmp
sbb
insb
and
and
inc
xchg
jle
jno
clc
outsl
es
pop
sbbl
ret
mov
mov
cli
mov
int
imul
rcrb
mov
xchg
in
jle
ljmp
lret
test
or
incl
mov
mov
xlat
dec
aad
std
pop
jae
cmpsb
xchg
xchg
pop
sub
pop
xlat
adc
cmp
mov
testl
pop
iret
stos
jno
mov
jle
or
xchg
adc
loopne
pop
xchg
push
addr16
push
imul
sub
std
js
loope
addb
loope
ds
pushf
dec
out
mov
and
and
jae
sub
jns
sbb
cmp
in
mov
int3
in
push
in
xchg
cmp
lods
call
outsl
inc
push
outsb
movsb
jno
dec
sbb
adc
inc
out
je
fsubs
push
pop
and
cld
or
arpl
loope
das
leave
xor
popf
popf
repz
call
cmp
bnd
xchg
xchg
jnp
sbb
push
repnz
push
inc
je
inc
pop
pop
enter
mov
xor
sbb
add
inc
fcompl
dec
jp
xor
push
imul
pushf
clc
pop
idiv
adc
movsl
je
cmp
test
sub
ljmp
jle
test
test
lods
mov
stc
movsl
adc
mov
and
ret
into
inc
push
add
sub
cmp
in
sbb
dec
test
sbb
pop
xchg
push
inc
and
shll
mov
es
mov
out
cmp
and
jmp
fdiv
lea
and
fstpl
jb
inc
testb
cld
ss
loop
pop
rcrl
mov
jns
jmp
aas
int
xchg
mov
daa
imul
and
xchg
lods
cmpsb
jae
stos
mov
mov
jg
ss
add
imul
jae
mov
aaa
sub
sbb
mov
mov
dec
xor
pop
mov
mov
jp
sarl
jp
adc
icebp
and
xchg
decb
sub
sarb
add
into
aad
dec
out
inc
mov
jb
cmp
jg
jne
push
outsb
xchg
inc
out
jno
pop
jnp
fsubrs
das
js
pusha
call
pop
dec
mov
scas
lahf
push
pop
jg
lds
cmc
or
push
aas
jbe
cmpsb
jns
mov
jmp
xor
fistl
dec
push
test
jecxz
popf
jbe
jmp
sahf
lahf
jnp
das
pop
add
xchg
xor
insb
jmp
inc
adc
fwait
inc
inc
arpl
aad
mov
dec
mov
jecxz
add
lock
movsl
clc
test
outsl
stos
jbe
jnp
popa
loope
stos
adc
pop
pop
ret
int3
ret
dec
mov
jae
mov
cmp
push
popf
lcall
inc
in
daa
popf
movb
fimull
cmp
dec
mov
je
sub
push
push
push
pusha
jg
jg
dec
adc
lcall
ss
and
mov
add
in
popf
xchg
pop
mov
and
mov
mov
pushf
icebp
jecxz
jp
adc
cmp
xchg
test
pop
or
and
mov
dec
jg
lret
movsl
cwtl
pushf
mov
fdivl
fisubrl
ret
jbe
das
push
pop
sub
mov
jbe
push
in
sub
test
adc
pop
int3
or
insl
cmp
int3
shlb
lods
dec
arpl
out
sub
sub
inc
test
rolb
push
push
adc
nop
popaw
popa
mov
ss
jl
sbb
dec
xor
dec
loope
adcb
int
adc
sub
xor
lods
data16
dec
bound
test
xchg
jae
push
aas
cmpsl
mov
add
mov
inc
mov
lret
xlat
es
xchg
aam
movsl
xor
and
pusha
lods
daa
mov
sub
aam
dec
ret
aaa
lods
mov
dec
or
movsl
mov
rcl
punpckhdq
add
push
pop
loopne
cmp
mov
pop
int3
jo
int3
dec
jns
xchg
fisttpl
jnp
adc
push
mov
in
int3
rorl
scas
push
cmp
std
pop
mov
cmpsb
inc
hlt
push
lret
cmp
pop
and
sbb
lret
push
cmp
add
jle
dec
xchg
push
movsl
push
add
lods
and
cmp
lret
movsb
sbb
jbe
inc
adc
pop
jmp
int
test
push
out
pop
dec
aaa
in
or
mov
mov
sub
loope
push
imul
dec
lods
jp
xor
inc
push
cld
cmp
pop
icebp
arpl
cli
add
clc
jl
popa
xor
sbb
jl
mov
cli
divl
shll
push
mov
sbb
lret
push
test
cltd
xchg
mov
pop
dec
aad
decb
push
push
shll
repnz
or
bound
xchg
and
stc
dec
push
lock
xchg
push
xor
adc
jge
out
gs
ret
adc
popa
sbb
clc
ficoml
nop
movsb
loope
scas
inc
sbbl
mov
aaa
mov
fs
add
cs
xchg
or
jo
jecxz
mov
movsb
mov
mov
movsl
lahf
lds
or
and
aaa
lock
scas
shll
out
test
push
cmp
xorl
scas
negb
add
add
lcall
repz
add
mov
outsl
nop
in
rorl
mov
test
cs
sub
mov
daa
in
inc
int3
test
mov
mov
mov
pop
jg
xlat
cmp
push
jns
imul
rclb
sbb
sub
cmp
jl
push
gs
leave
mov
push
push
pop
jne
push
push
jl
aas
lahf
sub
out
cli
faddl
jp
rclb
mov
gs
mov
dec
roll
test
or
mov
push
pop
or
cwtl
pop
cmpsb
mov
ret
cmp
pop
fstpt
and
leave
cltd
dec
test
imul
fdivl
mov
sub
cmp
js
mov
lods
sar
das
mov
lods
add
xor
mov
movsl
xor
jns
or
add
repz
sbb
or
jecxz
push
cli
imul
aam
aaa
dec
fwait
xor
dec
andl
mov
push
push
xchg
xchg
push
test
dec
jne
jns
outsl
mov
mov
fstl
mov
xchg
and
xor
cmp
repnz
flds
scas
cmp
or
push
in
cwtl
jno
enter
pop
repnz
jle
shl
arpl
push
xchg
mov
cmp
dec
push
inc
dec
mov
add
push
sbb
aas
inc
das
lods
call
pop
data16
xchg
mov
or
mov
shl
mov
push
fsubrs
mov
mov
mov
push
scas
ror
dec
mov
inc
add
je
and
jecxz
sbb
mov
orl
addl
push
pop
jo
sarb
cmpsl
je
lods
out
mov
cmc
lret
and
and
fdivrs
fldenv
ffree
inc
data16
jno
or
jbe
xor
pop
xor
nop
js
adc
jg
xor
repnz
popf
jmp
xchg
in
jmp
lea
or
jge
inc
mov
jo
xchg
jne
jg
push
subb
mov
jmp
sti
lea
cli
jo
loop
das
jg
inc
popf
inc
sub
int
xchg
and
adc
movsl
sub
mov
push
adc
pusha
push
and
dec
xchg
imull
inc
adc
mov
stc
bound
mov
jge
add
add
push
std
inc
orl
cmp
test
nop
xor
test
jecxz
mov
inc
cmp
push
pop
or
fbstp
in
mov
jp
xchg
out
int
dec
push
sub
hlt
mov
call
mov
and
sti
jl
xchg
jnp
sbb
lock
xchg
insl
mov
mov
adc
adc
xchg
jecxz
pop
jmp
xchg
pop
out
test
inc
jb
jno
xchg
test
sbb
cmp
inc
mov
xlat
pop
fldl
xchg
int
shll
and
mov
pop
leave
pop
ret
iret
jo
cmp
bsr
jmp
ret
inc
inc
test
in
nop
and
lret
sbb
sahf
sbb
int
out
pop
push
xor
inc
sub
dec
sub
ljmp
xchg
xchg
stos
and
outsb
es
outsl
bound
ljmp
sub
and
xor
jecxz
stc
mov
aaa
lret
cli
lcall
fsubrp
adc
jecxz
les
sti
push
add
push
out
jae
pusha
push
pop
and
xorl
iret
xor
xchg
stos
or
and
loop
stos
je
bound
stos
push
add
mov
pushf
push
add
jle
and
pop
arpl
iret
pop
push
fidivl
pop
jge
loope
or
jns
lods
mov
xchg
mov
testl
mov
mov
fsubl
ss
out
insb
adc
add
jno
out
xchg
pop
jne
xor
ljmp
jns
movsl
mov
aam
xchg
jle
xor
das
or
mov
leave
jb
cld
inc
mov
mov
fcomi
loop
jnp
inc
sti
lret
mov
lods
rorb
lock
adc
movsl
mov
fstpl
xor
mov
adcb
push
push
or
pusha
jl
loopne
inc
xchg
je
and
scas
cmpsl
mov
outsb
or
mov
daa
dec
add
adc
jo
jl
and
add
mov
sub
push
cmpsl
clc
jg
push
pusha
stos
adc
adc
mov
lods
mov
cmpsb
out
cld
dec
dec
inc
sbb
and
inc
fdivrl
adc
std
aaa
sahf
shl
xlat
inc
aam
xor
pop
movsl
punpckhwd
xor
pusha
jmp
adc
cmpsl
jnp
mov
cmc
xchg
xchg
popl
xor
mov
dec
fwait
or
js
ret
xchg
ljmp
cmpsl
sub
cmc
xor
push
pop
mov
cmpsb
sub
insb
fcompp
sub
or
rcrl
imul
or
xor
ds
call
push
and
aad
pop
inc
pop
mov
imul
push
cmp
mov
push
pop
cmp
mov
aad
or
push
xchg
ljmp
sub
test
icebp
inc
add
sub
movl
mov
fcomp
adc
sti
int3
add
sub
pop
lret
dec
cwtl
mulb
mov
dec
inc
out
insl
jecxz
imul
leave
lock
sub
or
xchg
push
imulb
les
rorb
outsb
mov
and
cltd
xorb
fiadds
std
pop
mov
dec
stc
sbb
imul
outsl
pop
daa
loope
jno
fs
mov
sub
and
xchg
xor
cmpsl
pop
jp
jmp
inc
inc
or
aaa
dec
xchg
movsb
mov
repz
clc
js
xchg
pop
mov
sub
inc
pop
cmp
dec
jns
iret
lcall
sub
dec
test
pushf
shlb
out
clc
rcl
sarb
jb
imul
popf
adc
popf
mov
aam
xorb
mov
decl
sahf
adc
ja
iret
cltd
mov
xor
pop
fdivp
sub
jns
xchg
xlat
sahf
rcll
movl
and
sub
xchg
pushf
flds
add
fwait
aad
stc
xchg
sarl
outsb
popf
sub
pop
lods
push
or
mov
mov
xchg
iret
cmp
leave
cmpsb
cli
pusha
mov
adc
sbb
or
test
mov
xchg
movsl
test
lods
cmc
sahf
xlat
lcall
call
rcrb
mov
test
out
sub
popf
xor
and
mov
jl
xor
sarb
scas
mov
dec
std
or
mov
jmp
jno
rorb
cmpsl
xchg
lret
lahf
test
cld
sub
ret
xchg
dec
push
inc
mov
jl
jl
jbe
sbb
test
scas
and
jno
mov
cmp
sbb
hlt
adc
xchg
jnp
sbb
pop
cmp
push
mov
mov
jno
sbb
outsb
push
iret
repz
add
xlat
cs
test
orb
xchg
pop
inc
popa
mov
movsb
xor
xchg
jbe
loop
mov
cs
lahf
and
lahf
xor
test
fdivs
addl
add
jo
movsl
fld1
add
sub
out
iret
idivl
jmp
mov
lret
jb
fidivs
add
dec
jmp
cmp
mov
cmp
mov
push
xor
cld
les
jne
repz
pop
cld
jmp
sbb
dec
popa
insb
adc
jge
pop
inc
out
int
aaa
das
inc
jp
outsl
cmp
xchg
imul
push
mov
fistpll
notb
or
ds
imul
and
jle
inc
stc
adc
ja
inc
add
jmp
test
jae
fistps
pop
xchg
das
fxtract
scas
mov
popf
and
jae
out
jo
xchg
mov
inc
sahf
adc
rol
outsl
pop
and
outsl
orl
iret
adc
mov
bound
push
push
fcoml
inc
mov
je
xchg
loope
fwait
dec
mov
jne
je
add
inc
mov
add
inc
sub
shll
mov
rorl
jae
sahf
loop
stos
mov
fidivl
sub
leave
add
adc
testl
dec
lock
shr
aad
add
out
outsb
sbb
nop
jle
cltd
add
lods
sbb
and
or
adc
mov
mov
into
fsubrs
dec
ds
inc
mov
stos
add
jecxz
into
rcrl
jbe
mov
jb
push
popf
outsl
das
dec
mov
fisubrl
das
jg
mov
push
aad
jae
rorl
mov
jl
lahf
pop
mov
mov
adc
pop
or
test
iret
and
das
dec
add
insb
outsb
test
mov
xchg
push
cmc
imul
das
mov
popa
adc
cmp
dec
lea
sub
ss
jae
aad
das
cmpsb
incl
in
adc
pop
adc
gs
aad
sbb
ficomps
stos
and
notb
pop
out
xor
jo
call
lods
and
push
aas
mov
cld
lret
mov
cmp
bound
and
inc
testb
out
cltd
dec
dec
aas
sub
jg,pt
and
enter
mov
sub
xchg
and
pop
jle
outsb
sub
xor
cs
jl
xor
pusha
add
mov
pop
jmp
insl
int
sub
das
andl
dec
sahf
clc
pop
xchg
repz
stos
in
es
mov
push
dec
or
aas
cmp
scas
aad
and
push
andl
daa
adc
jge
inc
daa
push
gs
stc
jne
je
mov
int3
shlb
call
mov
call
hlt
das
inc
and
test
repnz
cmp
int3
adc
leave
fs
cmp
xchg
out
adc
sbb
cmp
xchg
mov
adc
popf
ljmp
mov
lcall
addr16
adc
arpl
fidivs
dec
add
es
pusha
pop
xchg
push
inc
mov
adc
testl
leave
sbb
dec
cmp
insb
jbe
cmp
fstpt
jmp
nop
gs
bound
pushf
sbb
jns
xor
pop
mov
jbe
pop
shll
mov
push
daa
sub
pop
lret
jp
mov
add
test
mov
ljmp
adc
loop
nop
xchg
dec
cld
bound
jg
dec
mov
mov
lahf
dec
cmp
cmp
cmp
pushf
mov
mov
adc
lcall
mov
sahf
cmp
jbe
mov
push
jp
lret
jge
out
dec
push
xchg
mov
mov
push
dec
xlat
mov
sahf
mov
fldcw
inc
push
lods
pop
mov
jbe
pusha
mov
sbb
inc
mov
call
dec
lahf
pop
inc
std
rorl
lea
fs
rcr
ss
add
orl
arpl
fistl
lea
xchg
repz
pop
xchg
jo
pop
mov
push
mov
ret
int
push
sahf
push
xchg
or
scas
dec
cmp
mov
adc
dec
or
and
dec
rcrl
mov
add
mov
pop
shlb
cmp
xchg
or
stos
shrl
std
mul
insl
inc
and
xchg
sbb
cwtl
inc
lret
sbb
mov
xchg
std
add
or
repz
js
shl
icebp
xor
lea
jo
fimuls
ja
fstl
outsb
xchg
mov
sub
adc
cmpsl
adc
popf
jo
pop
ja
sti
bound
out
cmp
in
fsubrp
xchg
adc
adc
add
lret
mov
pop
roll
jg
ljmp
sub
loopne
push
out
dec
or
push
fisttps
es
jp
into
sbb
inc
insb
arpl
mov
pop
mov
jbe
push
rcll
add
inc
xchg
jae
ret
mov
jnp
ds
pusha
fnsave
pop
ret
jp
xchg
cmpsb
imul
mov
and
cmc
add
pop
adcl
dec
ss
or
jp
ljmp
dec
mov
dec
lds
lcall
push
lret
mov
aaa
mov
mov
cmp
outsl
es
cltd
lods
mov
jle
out
sbb
lds
roll
cmpsb
in
fs
lcall
aaa
cmpsb
inc
cmpl
mov
in
movsb
and
mov
sbb
cwtl
sub
sub
out
pop
adc
jbe
popa
cli
scas
push
jno
sbb
outsl
mov
mov
js
jb
lahf
mov
gs
xchg
sbb
popa
cs
push
cmp
and
addr16
jne
scas
push
xchg
imul
jnp
idivl
xor
rcrb
test
cmp
das
mov
rol
divl
mov
add
push
sahf
add
jno
clc
xor
scas
lods
hlt
incb
je
mov
movsb
adc
pop
sbb
rol
push
les
xchg
pop
call
xchg
imul
and
rcrl
cltd
es
push
push
fnstcw
xchg
test
mov
xchg
mov
dec
int3
lret
and
inc
jnp
adc
cmp
out
rcr
mov
push
inc
mov
inc
and
sub
or
mov
scas
pop
jns
push
mov
cltd
loope
cmp
adc
subb
mov
bound
out
outsl
je
mov
fsubrl
lcall
jecxz
fsts
dec
sub
dec
into
push
in
call
in
xor
popa
sbb
and
cmp
mov
and
mov
aaa
jecxz
lahf
inc
repnz
or
and
shll
jg
push
imul
pmulhuw
int3
in
inc
aas
mov
add
lods
jecxz
mov
push
mov
push
sub
or
call
jle
inc
jnp
js
jp
adc
cmp
movsl
pop
add
pop
mov
pusha
adc
ret
mov
loope
iret
push
pop
mov
push
ljmp
and
mov
push
mov
insb
or
sbb
out
add
lahf
daa
mov
daa
pop
and
cmpb
popf
mov
test
insb
les
vcomiss
ret
cmp
mov
mov
ret
push
psubusb
ret
inc
cmc
insb
cltd
ss
lahf
xchg
mov
mov
pop
mov
push
lahf
leave
mov
ficompl
into
mov
or
mov
inc
repz
xor
push
sub
sbbb
fsubrp
loope
fldcw
cmc
inc
xchg
inc
cmpsb
add
repz
inc
ds
je
sub
js
sbb
inc
out
ret
xchg
mov
jbe
mov
push
out
or
xchg
cmp
iret
rcll
movsb
cmpsl
jo
int
jle
test
inc
jo
or
std
cmpb
or
xchg
ret
jg
cmc
mov
icebp
jecxz
push
inc
imul
xchg
inc
xor
pop
sub
xor
xor
pop
and
xor
rcl
data16
cmp
dec
int3
je
aas
xchg
popa
add
fmul
fs
dec
test
and
jle
add
xchg
fisubs
ja
jns
xchg
jns
stos
mov
arpl
cmpb
push
pop
cli
cmp
sbb
dec
lods
push
call
scas
dec
push
stos
aaa
jo
inc
pop
int3
insb
mov
test
push
xchg
mov
icebp
push
outsb
pop
sar
loope
cmp
fldenv
mov
sub
and
sub
mov
mov
mov
inc
lock
sub
das
push
sub
mov
inc
repnz
sbbl
sub
pop
sub
lods
cli
mov
dec
mov
inc
mov
aas
mov
adc
adc
cmp
cmp
xor
jp
push
iret
and
mov
xor
cmp
sbb
inc
pop
hlt
clc
jmp
jp
shll
shll
js
out
ret
or
push
jno
sub
cld
mov
cmc
in
dec
pop
popa
adcl
mov
gs
mov
mov
test
and
or
jle
orb
fimuls
push
sub
mov
push
ret
inc
mov
jb
mov
call
bnd
adc
aas
inc
pushf
pushf
in
jg
pop
cmp
cmpsb
xchg
addb
push
repnz
mov
scas
mov
or
les
hlt
out
loopne
test
and
or
pop
in
in
xchg
push
in
fiadds
scas
pusha
mov
ljmp
cmp
jns
insb
xchg
pop
lret
jecxz
scas
subb
fcoms
cmp
pop
imul
mov
add
loop
sti
ljmp
mov
aas
popa
jne
or
out
outsl
pop
add
push
jns,pt
push
ret
jmp
cwtl
testl
sub
shr
sarl
add
or
mov
mov
inc
lret
repz
ds
pop
inc
lcall
into
sub
aas
xchg
jo
sbb
jecxz
adc
sbb
pusha
add
inc
push
push
mov
icebp
jl
out
jmp
pop
and
pusha
andb
xchg
and
mov
lahf
push
cwtl
or
fmull
cld
xchg
aas
icebp
xor
pop
inc
shlb
or
call
mov
sti
in
pop
sub
xchg
mov
adc
clc
xchg
movsl
inc
sbb
jmp
call
rep
pop
inc
fistpl
and
test
jae
out
leave
and
cmp
pop
aad
jb
push
adc
xchg
std
in
nop
xor
xchg
sar
push
scas
add
js
push
xor
int
jle
sbb
adc
out
nop
les
dec
mov
out
cmp
add
and
xchg
negl
push
sub
into
aaa
lods
mov
outsl
aad
shlb
pop
leave
or
mov
adc
and
jbe
aad
cmp
mov
xchg
mov
aaa
clc
fs
shll
cli
lods
jbe
arpl
mov
or
push
ret
sbb
push
stc
ficompl
sti
sub
sahf
das
sub
fidivl
mov
je
test
fistl
sub
imul
sbb
popa
and
xor
and
lock
clc
popf
lds
and
nop
sbb
and
imul
ljmp
and
cmp
add
add
mov
pop
outsb
jl
faddp
push
inc
inc
cli
xor
xchg
je
inc
and
jae
and
or
sbb
xchg
sbb
xchg
pop
inc
das
mov
movsl
mov
cld
or
jle
xchg
icebp
stc
or
mov
and
jbe
cli
inc
fildll
adc
outsb
pusha
sbb
les
push
mov
icebp
inc
in
test
shrb
xchg
push
pop
jl
int
mov
jns
pushf
mov
sbb
xlat
int3
leave
cmp
outsl
in
lock
cmp
jmp
jns
jge
pop
cmp
repz
imul
sbb
imul
lcall
aam
push
hlt
fistl
mov
daa
adc
xor
insl
enter
test
mov
pushf
fisubl
pop
mov
pop
scas
sbb
bound
inc
jns
imul
in
push
push
movsb
cli
or
adc
rcll
mov
idivb
xchg
mov
xorb
sub
inc
xor
sub
dec
lds
and
xchg
xchg
jle
insb
insb
cmc
ljmp
push
hlt
int
sti
ficoms
aas
enter
dec
cmp
jge
add
pop
andb
cltd
add
mov
lock
movsb
inc
or
imul
mov
pop
mov
push
adc
cmpsl
mov
pusha
push
and
xor
insl
test
or
xchg
fwait
lahf
jge
in
sbb
addb
in
leave
jae
sti
dec
mov
sti
sbb
cmpsb
fsubl
cwtl
clc
adc
cmp
not
jl
mov
push
enter
push
xchg
mov
shrb
loope
dec
call
cs
testl
cld
push
andb
testb
out
or
test
dec
cmp
or
into
data16
pop
into
jo
pop
mov
dec
bound
sub
pop
lods
lret
lods
cmp
mov
daa
lods
mov
icebp
fisubs
sbb
inc
jp
xchg
dec
add
lds
ficoms
jo
jnp
arpl
addl
ret
sub
imul
insb
fnstenv
lret
es
sahf
push
pop
and
xchg
cli
rolb
sub
or
jp
or
rcll
add
sar
jno
add
test
lahf
xchg
sbb
pop
int3
inc
xchg
popa
clc
fcomip
sbb
pop
sub
and
add
std
lock
add
das
jno
and
aad
lods
and
lods
jnp
scas
mov
push
adc
shlb
mov
mov
leave
setle
test
or
mov
repnz
or
test
fbld
into
push
out
xchg
push
das
sbb
adc
push
cmp
test
pop
ss
rcrb
insl
push
dec
push
inc
and
int
js
jns
jl
and
mov
in
sar
mov
repnz
repnz
int3
lret
inc
push
add
xchg
mov
imull
rorl
add
jecxz
xor
scas
jecxz
inc
lret
ds
mov
jg
insl
loope
push
and
pop
sbb
jbe
xchg
sub
xlat
xor
lea
cmp
xchg
xchg
repnz
in
fs
inc
push
fadd
push
mov
dec
inc
lods
pop
inc
xor
adc
into
ret
es
push
mov
push
pop
inc
shlb
xchg
adc
nop
xchg
inc
pushf
mov
inc
cmpl
xchg
dec
scas
rolb
shrl
stos
or
mov
mov
addr16
push
cwtl
rorb
orb
lret
mov
insb
adc
scas
lahf
sbb
xchg
cmp
mov
lahf
mov
mov
in
mov
rcrb
nop
sbb
mov
es
andb
pop
xchg
lods
cmp
push
push
mov
cld
and
jae
mov
mov
jne
gs
out
add
call
or
pop
inc
inc
pop
lea
mov
loope
and
sbb
xlat
je
inc
addr16
leave
aaa
or
xchg
stc
jno
jp
cwtl
divb
popf
jnp
enter
sbb
xchg
cmp
sbb
sbb
data16
aam
xchg
push
mov
adc
cmp
daa
and
aas
xchg
in
push
sbb
mov
xchg
adc
and
jp
andl
inc
ds
cli
xchg
aam
ror
add
fistl
push
sti
mov
outsl
sbb
lret
sbbl
adc
pop
cmp
or
or
jb
pop
xor
hlt
mov
repz
jp
popf
push
popa
push
xchg
dec
les
and
xchg
inc
push
subl
mov
cmpsl
jne
rcrl
rcrl
mov
pop
push
jnp
xchg
xlat
sti
mov
ficompl
in
xchg
out
inc
cltd
xchg
lods
mov
or
xchg
or
in
xchg
rclb
int3
xorb
inc
jb
dec
nop
out
loop
and
mov
addl
fisubrl
loopne
cmp
mov
mov
lock
in
push
mov
jmp
test
icebp
jns
push
loope
aam
xor
push
fwait
mov
std
sbb
mov
aam
out
mov
cmc
inc
mov
mov
hlt
ret
mov
orb
imul
sbb
movsb
inc
xlat
push
arpl
xor
out
shrl
in
xor
ret
shlb
es
out
dec
ljmp
addr16
ss
int3
cmpsb
mov
mov
movsb
push
loope
inc
push
stc
add
push
leave
popf
pop
in
stos
mov
js
cmp
pop
mov
xchg
bnd
mov
push
lcall
mov
aad
sbb
mov
mov
inc
rorb
add
mov
cmp
mov
sarb
jnp
jle
mov
xor
js
loopne
rorl
loopne
sub
call
push
xor
lds
push
push
stos
arpl
cld
pop
sbb
mov
lret
mov
jl
lods
fnsave
sub
mov
mov
int3
push
lret
jbe
mov
and
sbb
out
xchg
push
loop
ds
adc
pop
dec
fcoml
cmp
icebp
mov
and
push
es
testl
lock
jl
mov
mov
loop
dec
sbb
icebp
subl
shlb
lret
mov
xor
mov
gs
ret
sbb
rcrl
sahf
enter
fcmovnbe
into
test
xchg
xor
jmp
pop
mov
in
push
sub
in
or
cmpsb
pop
pop
fs
in
imul
in
push
sbb
adc
sub
mov
adc
xchg
jg
sub
dec
cltd
leave
mov
xchg
sub
cmp
les
std
addr16
xor
inc
pop
xchg
add
add
push
mov
sbb
out
ret
mov
add
ja
mov
sar
lret
push
sbb
cmp
xchg
mov
je
mov
mov
mov
dec
in
adc
hlt
mov
mov
jnp
mov
pop
xchg
out
cmpl
arpl
inc
hlt
or
or
mov
je
xlat
and
cmc
stos
jno
mov
test
stos
push
mov
enter
dec
or
sbb
test
sbb
mov
xchg
xor
cltd
dec
cmp
xchg
out
xor
mov
stos
jo
mov
iret
add
mov
pop
cmc
or
ljmp
test
imul
out
ficompl
pop
or
mov
sbb
and
outsl
divb
dec
add
xor
mov
jmp
mov
inc
in
cmc
sti
adc
fcoms
and
cltd
xchg
stos
out
js
pop
cltd
icebp
mov
mov
mov
mov
jg
fadd
lods
xchg
sub
sub
in
pop
aam
or
jae
xchg
add
push
xchg
pop
jne
rorb
gs
sbb
imul
cmp
xorl
lea
ret
cmp
mov
call
lahf
mov
cmp
pop
pop
sbb
push
pop
cmc
lret
and
pop
sbb
outsl
hlt
stc
ret
fs
mov
mov
out
std
jge
and
addr16
imul
or
ss
pop
inc
adc
aad
mov
xor
aam
imul
sbb
xchg
mov
sbb
jge
js
lcall
mov
and
sbb
xchg
gs
inc
push
mov
movsb
add
ss
out
or
adc
pop
leave
cmpsl
movsb
sub
or
cmp
push
lods
repnz
gs
add
jge
inc
dec
icebp
les
dec
cmpsl
faddl
cmp
mov
mov
mov
cmpsb
add
pushf
or
shlb
aaa
and
insb
sbb
gs
jle
popf
daa
cmpsb
sub
xchg
fcompl
fimuls
dec
cmpsl
fbstp
out
sub
push
sbb
or
test
in
dec
aaa
inc
mov
fwait
or
add
mov
sub
gs
clc
lds
inc
inc
push
jnp
push
mov
icebp
or
fcomps
add
cltd
add
mov
lret
mov
inc
sbb
in
fisttps
push
mov
test
xor
push
insb
mov
outsb
scas
mov
inc
jge
ficoml
fcomps
popa
cmpsb
loopne
jl
or
xor
fs
inc
pop
mov
push
in
pop
leave
lahf
fsub
jno
cld
fiadds
pop
loop
mov
rcl
adc
stos
daa
and
movsl
popf
iret
cmp
xchg
mov
outsb
sub
xor
pop
sti
pusha
lcall
test
daa
jns
xchg
adc
fs
dec
xor
mov
popa
inc
mov
fs
inc
les
pusha
mov
aaa
xchg
lahf
fdivl
mov
xor
jl
mov
imulb
cmp
xor
shl
stc
cmc
pop
leave
mov
das
add
inc
stos
mov
mov
andl
push
ja
push
out
cs
mov
daa
je
cli
jo
mov
xchg
cmp
repz
jg
and
or
dec
inc
xor
lea
lret
data16
ss
ss
pop
cmp
sbbb
jns
add
pusha
jb
stc
xchg
adc
mov
ljmp
movsl
mov
dec
cltd
pop
mov
sub
pop
pop
jp
xchg
out
loope
xchg
psrad
xor
mov
lahf
out
inc
mov
shlb
incb
lods
dec
adc
in
xor
xchg
cwtl
push
sub
push
fdivrs
test
xor
fs
mov
fisttpll
je
ljmp
mov
sahf
xchg
or
add
pushf
movsl
xor
jnp
xor
xlat
imul
movsb
jne
jo
js,pn
leave
jge
inc
ja
xchg
fs
in
out
std
jae
into
rcrb
push
sub
and
arpl
fcomip
outsl
movsl
pushf
push
jnp
hlt
ljmp
cmp
xchg
or
fstl
adc
outsb
add
int
jmp
ja
mov
sbbb
fs
stos
lods
jecxz
sti
addr16
or
pop
dec
mov
lock
andb
shlb
stos
push
roll
loope
push
push
dec
fidivl
movsb
pusha
testb
push
mov
cwtl
dec
jl
ss
lret
add
push
xor
pop
sbb
jl
in
jne
int
aad
aas
sub
jl
mov
inc
insb
loop
xor
xchg
push
imul
ljmp
jl
cld
xchg
jle
inc
sbb
arpl
cmp
movsl
popf
pop
jne
test
rcr
gs
xchg
fcoms
arpl
adc
dec
outsl
mov
sub
xor
sub
jecxz
sbb
ss
std
and
cmc
in
push
icebp
sahf
mov
insl
jge
add
lock
das
lcall
pop
decl
and
push
push
xchg
lcall
mov
or
mov
stos
cmp
push
adc
hlt
xor
int
push
adc
xchg
mov
xchg
movsb
in
imul
mov
jo
xchg
mov
pop
dec
cli
sahf
outsl
mov
cmp
icebp
dec
nop
push
repnz
std
subb
or
loop
mov
jnp
fisubrl
xor
push
scas
clc
imul
sbb
inc
cwtl
push
push
pop
daa
into
call
adc
or
loopne
jge
lods
subl
sbb
sub
in
mov
cld
push
push
and
dec
adc
xchg
dec
in
sbb
imul
xchg
imul
add
mov
imul
mov
sbb
mov
test
dec
jl
xchg
xor
lock
inc
in
dec
gs
test
jb
ret
js
mov
iret
xor
pop
lcall
or
cmpsl
cltd
ss
nop
sbb
aas
cltd
mov
mov
add
repz
stc
cli
arpl
int3
js
icebp
mov
scas
and
enter
aas
mov
mov
or
sub
add
lahf
je
sbb
cmpsl
add
arpl
sbb
lret
movsb
mov
sbb
xchg
std
mov
imul
in
mov
aaa
mov
mov
test
imul
repz
pushl
cmp
out
cld
push
je
out
and
repnz
loopne
jle
xor
test
scas
and
je
pop
xchg
sbb
test
xorl
pushf
mov
outsb
xchg
pop
insl
lahf
and
cmp
xchg
xchg
orl
sub
nop
fnstsw
out
adc
test
out
cmp
cvttps2pi
mov
adc
xchg
sub
ret
add
test
into
cmp
fiadds
cmp
js
jnp
push
shll
sbb
popa
stos
mov
dec
mov
cld
sbb
xor
jb
push
and
pushl
into
pop
mov
outsl
cmp
add
inc
dec
jbe
and
xchg
push
add
fsts
mov
dec
mov
rolb
or
cwtl
and
cmp
push
sbb
pop
inc
add
hlt
inc
push
jl
xor
mov
out
icebp
push
push
and
sbb
daa
inc
and
ret
cmp
ret
mov
pop
addl
cwtl
push
lcall
fisubrl
sarl
jmp
mov
add
push
lock
into
ficoms
jo
dec
dec
mov
sub
jns
sub
or
sub
icebp
mov
add
hlt
out
jmp
cltd
in
sbb
xchg
push
push
loopne
mov
repz
mov
lret
pop
imul
test
push
mov
mov
or
popf
ret
dec
clc
jp
mov
stc
jle
fs
jb
and
mov
cmp
mov
mov
or
ss
mov
hlt
mov
mov
mov
inc
orb
lock
inc
mov
pop
mov
out
pop
cmp
mov
arpl
xchg
test
rcll
std
repz
fiadds
dec
xor
cmp
pop
adc
dec
or
jnp
mov
int3
pusha
fidivl
outsl
test
shlb
mov
mov
xor
mov
sbb
enter
call
add
loopne
es
mov
push
int
xchg
into
inc
pop
cltd
dec
mov
int3
mov
cmp
pop
sub
xor
test
testb
xchg
ljmp
sbb
wbinvd
cmpsl
jg
fcmovbe
clc
fdivrl
imul
fucomi
jns
jbe
cmc
mov
daa
dec
jecxz
ds
ds
scas
loope
push
cmp
cmp
push
push
xchg
xlat
fcompl
cmp
push
pop
insl
sub
shrl
dec
xor
jnp
pop
ljmp
ret
push
lret
jae
test
mov
notl
into
push
ret
ja
mov
in
outsl
push
mov
jp
push
ret
imul
push
sti
jb
lods
loop
scas
push
jae
dec
fists
into
sahf
jae
shll
sbb
cmp
ja
mov
inc
test
or
mov
sbb
repz
enter
pop
mov
and
inc
and
stos
push
jns
lods
lcall
testb
mov
pop
add
inc
add
sub
sub
sbb
incb
inc
jmp
mov
xor
in
mov
lods
pop
pop
lret
ljmp
shl
aas
mov
fwait
popa
pop
pop
lahf
int3
xor
popf
cltd
stos
adc
lods
cmpsl
scas
or
or
repz
push
sub
stc
add
ret
and
clc
adc
sub
sbb
cmp
adc
sbb
out
mov
and
mulps
loop
cmp
mov
dec
sbb
push
mov
in
and
sub
addr16
or
pop
popa
inc
inc
mov
xchg
je
xchg
cmp
fidivs
push
scas
clc
mov
mov
test
outsb
cmp
sub
push
pop
rclb
ja
in
sub
dec
cmp
pusha
dec
jno
shrb
ss
adc
jb
or
jle
out
fcoml
decl
and
xor
or
fcompl
pop
testl
stc
cmp
inc
adc
jp
mov
push
or
inc
out
jne
ljmp
mov
or
in
xor
and
xchg
addb
sahf
out
notb
inc
or
gs
insb
fists
mov
inc
lret
or
int3
push
push
int
in
jae
cmp
and
fadds
jge
and
clc
push
push
sbbl
or
or
test
ljmp
jo
sar
xor
or
dec
adc
lods
in
inc
nop
loop
test
cltd
xchg
cmp
mov
lret
pop
jle
jp
aas
lret
out
dec
xor
dec
pop
movsb
fistps
std
or
add
adc
sub
cli
or
out
gs
test
adc
fmul
push
outsb
xchg
pushf
and
xchg
arpl
push
stos
loopne
add
sub
xchg
mov
push
jns
jnp
jo
add
push
mov
sub
and
nop
xchg
call
jne
cmp
sub
xor
jmp
leave
mov
and
pop
adc
xchg
sbb
dec
test
jb
cmp
scas
add
movsl
dec
adc
dec
pop
adc
stos
push
sub
or
dec
mov
movsb
and
mov
or
cmp
daa
aas
cmpsb
outsb
lahf
or
sbb
adc
ret
pushf
arpl
ljmp
rcrl
nop
sub
loop,pt
das
leave
test
inc
dec
hlt
mov
adc
sbb
lahf
js
xor
fiaddl
pop
test
mov
jbe
or
add
pusha
push
jg
mov
xor
mov
jb
adc
decl
adc
xor
push
xor
jbe
ficompl
jmp
jge
inc
push
sbb
add
cmp
push
in
dec
test
fadds
pushf
mov
je
outsb
push
mov
jo
aad
mov
lret
sub
mov
aaa
rorb
cmpsb
push
aaa
pop
fidivs
fadds
clc
cmc
xchg
cmovge
gs
adc
push
fdivl
into
push
bound
mov
push
mov
inc
mov
push
hlt
dec
mov
ficomps
xor
ret
pop
and
xchg
scas
repnz
test
ret
sbb
mov
dec
xchg
mov
xchg
popf
aaa
popa
insl
cmp
loopne
pop
fdivs
lock
sub
dec
js
lods
mov
xor
andl
outsb
xchg
jnp
add
in
jbe
cmp
sub
xor
push
mov
sti
xchg
inc
and
xchg
xchg
fdivrl
pop
movsl
ret
xchg
dec
adc
in
mov
jno
xor
aaa
pop
push
imul
jecxz
sub
dec
adc
lcall
sbb
gs
jae
bnd
push
rcrl
jno
inc
xor
xor
mov
adc
push
mov
pushf
cmpsb
cs
adc
xor
bound
packssdw
in
xor
orl
sahf
xchg
mov
push
sub
sub
mov
and
cs
dec
arpl
mov
jmp
je
fcomps
ret
imulb
movb
orl
gs
mov
dec
outsb
mov
mov
xchg
repz
push
xchg
push
insl
ja
into
add
test
xor
cmp
imulb
aas
xor
cmc
fisttpll
ds
mov
js
inc
sbb
mov
xchg
cmp
sub
iret
shrd
popa
sbb
cwtl
add
shrb
test
test
rcll
adc
fstpl
and
movsl
rcrb
xor
shll
insb
loop
sub
mov
xchg
push
push
pop
outsb
in
movzwl
dec
xor
xor
fnstcw
cmpsb
rolb
adc
jns
repz
addr16
adc
mov
test
lea
shll
and
int3
mov
mov
scas
iret
push
mov
inc
nop
nop
mov
mov
scas
add
ffreep
adc
pop
or
push
popw
fisubl
and
ss
cmp
out
sub
in
mov
fwait
popf
int
mov
xor
popa
dec
add
loop
and
popf
dec
push
inc
xchg
mov
loope
cs
push
fucompp
inc
pop
pop
ljmp
dec
or
lods
xchg
xchg
movsl
pop
mov
gs
je
push
in
dec
inc
ds
repz
imul
ror
pop
enter
jbe
add
mov
lods
je
loop
dec
mov
loop
push
cmp
aas
sbb
mov
movsl
or
cmc
xchg
jmp
push
jns
enter
sbb
or
mov
jmp
cmp
inc
add
add
xchg
pop
mov
leave
mov
ds
pusha
ja
jb
xlat
mov
and
es
fistl
mov
push
aas
adc
rclb
sbb
lahf
dec
dec
dec
xchg
lahf
lret
sub
mov
adc
stos
mov
dec
jl
mov
jae
mov
cmp
mov
pop
lock
xor
or
lahf
jle
fprem1
inc
push
aas
loopne
xchg
pusha
cmp
cwtl
mov
and
ds
jbe
aas
jg
cmp
icebp
lcall
xchg
jl
ss
xchg
ret
clc
xor
xor
fldcw
mov
les
test
mov
jb
sbb
lahf
test
mov
or
stc
inc
jp
dec
sti
mov
sbb
xchg
aaa
inc
sub
jne
call
in
or
push
in
ja
inc
leave
js
cmp
mov
xchg
loope
xorl
hlt
scas
lret
sbb
decb
cmp
sarb
pop
jp
mov
or
movsb
sbb
sbb
subl
push
and
out
xor
or
stos
cld
jle
fildll
repnz
pop
adc
fcomps
out
sbb
and
cmp
aas
sub
and
sbb
xchg
dec
dec
push
dec
inc
aam
lds
add
dec
dec
xchg
mov
mov
ret
xlat
pop
shl
and
repnz
mov
test
jge
xor
loop
sub
mov
mov
sti
sti
inc
lret
jecxz
cmp
cmp
push
out
rcrl
out
frstor
jge
popa
out
pushf
push
aas
aad
pop
iret
out
ljmp
addr16
movsl
mov
popf
sub
lret
cmp
and
push
leave
bound
clc
mov
faddl
ljmp
push
mov
bound
cli
rorb
sbb
fnstsw
xor
andb
nop
push
loop
inc
lcall
cmp
or
iret
addr16
in
repnz
ret
push
in
aad
cwtl
xor
mov
in
lods
adc
mov
cmp
cltd
or
scas
sbb
in
mov
jae
adc
dec
cli
es
sbb
out
mov
xchg
outsb
mov
shrb
loopne
int3
lcall
outsb
mov
lret
mov
sub
andb
sbb
sub
ret
das
dec
jl
xchg
dec
push
enter
mov
and
pop
pop
stc
xchg
pop
sub
sub
aam
pop
out
lds
mov
int3
std
js
jecxz
aaa
adc
jmp
int
movsl
mov
addr16
in
sbb
lret
push
push
lahf
imull
in
lds
sbb
rcrl
pop
and
xchg
xchg
lods
aaa
xor
push
mov
push
dec
xor
jecxz
add
negl
or
xchg
in
mov
pushf
aaa
cmp
inc
xchg
push
cld
inc
in
and
xchg
cs
xchg
test
js
setbe
inc
clc
push
testb
out
lods
pop
fnstcw
in
aaa
adc
adcl
sub
iret
mov
mov
pop
sbb
lea
insb
out
push
xchg
mov
pop
ret
xchg
gs
dec
inc
das
add
inc
sub
xchg
dec
idiv
clc
clc
aas
inc
mov
test
es
jns
jo
or
push
pop
xchg
jecxz
dec
std
cld
ret
loope
dec
jnp
push
sti
mov
xchg
ss
lock
xchg
or
stc
movsb
lret
and
or
jl
jmp
scas
fsub
push
les
sti
mov
out
mov
fadd
jecxz
sbb
jp
test
mull
pop
mov
mov
repz
dec
clc
push
and
jmp
mov
pop
lahf
dec
mov
dec
pop
lcall
ljmp
xchg
or
xchg
test
lods
xor
das
mov
push
int
add
out
nop
jbe
jnp
xor
test
std
popf
fbld
adc
shlb
fcoms
and
pusha
enter
dec
sbb
xlat
lcall
dec
lock
jbe
call
call
popf
outsb
mov
or
dec
ljmp
dec
mov
pop
pop
and
xchg
ja
fsubs
inc
rcl
pop
imul
jnp
push
xorl
lods
div
or
lock
inc
aad
cmp
xchg
inc
sahf
jecxz
sbb
aas
pop
loop
icebp
adc
jle
je
outsb
aam
xorb
add
sbb
xchg
pop
pop
repz
clc
jg
xchg
add
and
add
mov
push
dec
cwtl
mov
and
jg
mov
adc
rclb
or
push
jmp
mov
jp
imul
loopne
out
dec
ficoms
sti
pop
pop
pop
shl
pop
jecxz
out
jno
jle
xor
mov
or
int
lea
mov
jmp
pop
insb
xchg
sub
ret
shrl
cld
push
mov
mov
aam
jb
xor
in
shll
sbb
icebp
fldl
lcall
repnz
in
jl
pop
into
insb
imul
mov
pop
out
out
cmp
xchg
and
pop
lret
cs
sub
add
jb
sbb
in
in
push
ds
pop
and
xchg
pop
in
arpl
cmp
inc
push
xor
adcb
jl
or
xor
iret
jne
dec
dec
mov
aaa
insl
jns
sub
call
sbb
jecxz
cmp
pushf
pop
adc
sbb
ror
cmpsl
addr16
cli
and
pop
inc
or
pop
mov
cmp
lock
stc
xchg
adc
enter
out
pop
add
inc
neg
lahf
add
add
cmp
outsb
loope
lock
pop
je
aas
add
iret
in
dec
movsb
mov
cmpsl
cli
or
pop
inc
sbb
cld
lea
divb
cmpsb
sub
jmp
dec
xchg
sahf
sub
xor
sub
fs
out
jnp
mov
jmp
xor
daa
inc
add
pminub
stos
xchg
add
ds
push
push
xor
aaa
stc
repnz
sbbb
inc
movsb
lret
fimull
cmpsl
jge
fxch
loop
les
test
dec
fildl
lret
push
test
add
jg
cmp
stc
push
and
xchg
scas
xchg
ret
xchg
sub
mov
faddl
ds
pop
divb
cmp
sub
sbb
fistpll
cmpl
int
mov
mov
sub
pop
mov
out
add
loop
cmc
xchg
cmp
fists
fldenv
cwtl
mov
xchg
jae
mov
dec
in
cli
or
mov
aam
mov
cld
fnstenv
js
sub
mov
nop
xchg
in
aas
pop
mov
adc
dec
cltd
in
int
leave
jne
sbb
sub
and
out
popf
sub
cmp
push
inc
inc
or
pop
jle
scas
div
cmp
ljmp
cmp
mov
cmp
stos
scas
sub
pop
in
lahf
sti
xchg
loopne
pop
out
out
rcrl
aas
or
xor
out
out
popf
add
negb
movsl
sahf
lock
mov
mov
xchg
mov
aam
sbb
iret
pop
cwtl
mov
imul
rcrb
or
mov
push
sbbl
das
adc
pushf
mov
pop
jae
push
cmp
and
int
mov
push
imul
dec
sbb
sub
xchg
push
out
movsb
mov
mov
cmp
and
fistpl
dec
sbb
pop
jecxz
dec
sbb
inc
inc
jp
in
test
adc
test
jecxz
orl
push
push
push
gs
cwtl
mov
stc
mov
mov
sub
sub
adc
ja
push
gs
inc
out
or
adc
test
xlat
pop
cmpsl
test
jns
or
fnsave
add
lahf
bound
fsubrl
jmp
sbb
hlt
int
call
xor
and
push
in
cmpb
mov
popa
sub
fwait
testb
inc
inc
xchg
xor
pusha
aaa
test
sbb
and
stos
inc
hlt
out
out
adcl
sub
ljmp
cmp
mov
mov
cmp
test
fcom
movsl
mov
cmpsb
nop
adcb
jnp
mov
inc
icebp
outsb
ret
inc
push
lock
cwtl
dec
cmpl
pop
push
pop
lock
push
pop
inc
sub
sbb
lcall
adc
push
notb
stos
daa
push
dec
or
pop
push
mov
inc
nop
lods
aas
cmpsb
int
loopne
jp
push
lods
cltd
xchg
scas
test
lret
push
dec
das
das
std
and
in
mov
mov
out
xor
scas
and
cltd
fsubrs
push
mov
lret
jne
scas
push
jnp
hlt
xchg
testl
stos
insb
int3
insl
dec
loop
shrb
mov
jp
and
sti
cwtl
lret
add
mov
mov
in
aas
js
adc
sbb
xchg
mov
lret
test
sub
jg
xor
shr
xor
repz
fidivl
mov
mov
bound
jne
mov
cwtl
jns
cmp
rcrl
rol
lock
jne
orb
jmp
call
mov
fs
adc
mov
movsl
sbb
ds
adc
adc
add
xor
lret
and
call
cmc
cmpsb
daa
movsl
lds
subb
xorl
sub
push
cmp
sub
andb
push
cmpb
jmp
pop
push
loop
aad
and
out
xchg
fcomi
ror
stos
sti
mov
xchg
cmc
test
hlt
movsl
inc
ss
jg
sbb
cld
add
mov
or
test
or
nop
xchg
int3
push
add
push
cli
xlat
lock
push
arpl
mov
and
mov
dec
aad
in
insb
jg
xchg
mov
and
fisubrs
push
aas
dec
adcl
xchg
fwait
adc
hlt
jo
in
data16
pop
in
aad
cmp
dec
inc
xchg
mov
movl
sahf
and
push
xor
push
out
mov
rorb
iret
cmp
negb
or
sahf
nop
test
scas
mov
mov
xchg
icebp
mov
jb
icebp
fidivrs
add
jne,pt
sbb
adc
mov
add
test
xchg
and
sbb
enter
cltd
ss
std
sarl
xlat
das
in
dec
cmp
fldl
popf
fnclex
cmp
lcall
inc
push
push
or
jmp
pop
xchg
push
mov
jle
sbb
ret
jno
iret
mov
fs
cmp
xchg
jo
xchg
imul
jecxz
adc
or
pop
cmp
fadds
jmp
dec
sub
jg
push
inc
movsb
cld
xor
or
add
inc
sub
aaa
jp
pop
stos
enter
or
add
imul
das
mov
repnz
jns
and
pop
sub
pop
ja
movsb
cmp
dec
in
or
jle
dec
aad
sar
adc
xor
lcall
bnd
add
mov
jo
imul
sub
movsl
or
mov
scas
push
sbb
push
mov
xchg
xchg
fcomps
adc
inc
int3
ja
bound
add
pop
mov
sub
inc
orb
in
jl
xchg
dec
xor
push
lahf
outsb
clc
push
push
xchg
fimull
andb
xor
js
popf
mov
movsl
rcrb
sti
pop
ficoms
sub
push
test
jle
push
test
mov
and
lahf
mov
adc
jg
xchg
dec
push
in
sub
nop
sub
mov
inc
sbb
xchg
stos
sub
lds
mov
jns
push
jno
mov
jns
or
mov
cmp
inc
adcb
cmp
pushf
test
add
push
punpckhbw
push
lret
or
stos
pop
ds
mov
adc
add
pop
sbb
outsb
outsb
cmp
stos
ret
jecxz
leave
sub
pop
mov
sbb
ret
data16
js
scas
and
mov
push
mov
dec
mov
mov
and
xchg
mov
mov
lock
pop
push
push
dec
jae
in
int
sub
dec
daa
std
xor
aad
and
icebp
push
into
int3
fstpl
mov
push
out
fdivs
cli
xlat
mov
aaa
push
fdivr
int
negl
push
sti
xlat
aad
xor
mov
push
xor
mov
outsb
jmp
lahf
sarl
and
imul
pop
call
cwtl
jnp
insb
pop
adcl
jae
cmpl
mov
or
xchg
stos
bnd
pushf
fnstsw
push
in
and
inc
xor
hlt
icebp
fmuls
aad
into
rolb
jno
rcrb
cltd
push
sbbb
test
dec
sub
add
add
insb
xor
pop
adcl
mov
pop
fs
ds
ss
dec
mov
icebp
jae
gs
mov
ljmp
outsb
lds
insb
xchg
push
loop
jl
das
xchg
insb
xchg
enter
mulb
xor
pushf
pushf
into
mov
push
mov
leave
popf
jmp
sbb
jno
js
mov
lods
movsb
pop
xchg
push
mov
xchg
xchg
xchg
stos
jb
pusha
xor
mov
dec
andl
adc
xchg
sub
inc
inc
mov
mov
repnz
mov
in
add
pop
dec
js
adc
cmp
xor
lcall
pop
lcall
std
lret
repnz
fs
cmp
lds
mov
lahf
mov
push
mov
jle
test
xor
int
loop
mov
xchg
jle
pop
sbbl
lods
mov
pop
mov
clts
ss
or
push
pop
pop
inc
imul
xchg
and
clc
cmp
xchg
cmp
add
mov
push
es
scas
movsb
lock
xchg
iret
cld
mov
inc
cli
xchg
or
fcoms
jns
ja
pop
ss
add
loop
movsl
mov
adc
inc
sub
loope
xchg
and
clc
popf
fdivrs
lahf
enter
add
adc
dec
jne
cmp
je
push
push
inc
inc
ljmp
cltd
jmp
mov
insl
pop
les
movl
jbe
pusha
cmp
xorb
popa
mov
push
push
lcall
push
imul
ficoms
sub
pop
add
push
ja
pop
mov
xchg
or
xchg
pop
xchg
dec
sbb
mov
push
xchg
cmc
in
push
push
pop
push
xchg
adc
fs
in
movsb
lods
jnp
out
jecxz
jns
incb
ljmp
sbb
dec
test
and
sbb
xchg
mov
push
nop
or
xor
loopne
call
push
cwtl
arpl
out
jno
mov
into
dec
test
les
jp
insb
scas
lcall
call
pop
js
pop
iret
cmp
test
cmc
fisubrs
lock
sub
incl
lahf
lock
cmpsb
in
and
pop
mov
push
mov
nop
xor
add
mov
mov
rorb
sbb
adc
pop
cmc
hlt
jle
out
mov
lea
popa
sti
xchg
ret
int3
inc
scas
sbb
rorl
xor
dec
push
and
lea
je
jecxz
dec
test
lods
aam
xchg
cmp
and
jae
inc
mov
out
incl
add
adc
push
jg
rolb
xor
insb
add
mov
xorb
lds
cmp
cmpsb
xchg
loopne
mov
mov
out
sub
cmp
clc
insb
sub
push
mul
adc
fcoms
stc
or
repz
mov
shrl
lea
aad
dec
test
jo
or
jns
pop
in
icebp
dec
js
dec
and
negl
or
negl
imull
bound
and
add
popf
mov
addr16
jge
jnp
rcll
lahf
xchg
mov
jecxz
pop
negl
divb
scas
jg
enter
and
ret
clc
xor
add
sbb
and
rol
stc
inc
fwait
and
leave
fcom
push
mov
dec
jmp
add
in
sbb
xlat
xlat
or
lret
xchg
adc
xchg
and
xor
sahf
xchg
fcomps
push
push
mov
adc
dec
imul
scas
repz
repnz
pop
jp
mov
inc
sbbl
push
or
movsb
mov
negl
cs
pop
aas
cmpsb
lea
aam
dec
mov
or
faddl
push
mov
xchg
pop
ret
push
sub
insl
adc
xchg
cld
popf
and
mov
pushf
inc
jb
dec
pop
sbb
push
mov
add
jns
mov
pop
das
lods
andl
std
inc
dec
xchg
jg
mov
enter
aaa
dec
ret
das
repz
popa
stos
rolb
jne
les
jns
scas
nop
mov
js
test
push
stos
sub
ret
jmp
cltd
push
xlat
lods
pop
and
stos
fs
fsts
pushf
ljmp
push
std
pop
inc
arpl
xor
int3
xor
pop
es
jmp
loope
pop
cmpsl
cs
adc
cmp
dec
sub
cmpsb
jecxz
inc
bound
mov
dec
dec
fst
pop
and
mov
inc
pop
adc
lock
sbb
jecxz
scas
mov
enter
roll
push
add
jmp
inc
push
insb
test
lahf
mov
fxch
ret
aad
xor
sub
shl
xchg
sbb
flds
mov
daa
in
loop
jo
gs
das
aas
mov
push
out
hlt
ret
xor
fwait
pop
jns
mov
mov
mov
sub
dec
pop
pop
sbb
data16
jle
dec
sti
outsl
mov
out
jg
jbe
xchg
pop
sbb
lcall
dec
dec
inc
jl
lcall
push
clc
es
sub
or
arpl
mov
dec
aad
daa
cs
adc
adc
lds
nop
pop
sbb
xchg
add
movb
loop
mov
pop
movsb
xor
fsubs
mov
mov
enter
pop
sbb
sub
push
mov
mov
lcall
xor
incb
mov
adc
pop
add
pop
sbb
cld
stos
sbb
fcompl
xchg
out
nop
int3
andl
mov
mov
mov
mov
push
adcb
insb
mov
rcrl
add
idiv
rcll
stos
push
pop
dec
jle
sub
xchg
test
jl
mov
xchg
jp
lcall
addr16
iret
cmp
loope
loop
test
and
fs
sbb
fincstp
dec
mov
mov
jb
ljmp
cwtl
inc
lods
je
jns
mov
es
sub
xchg
mov
lods
xchg
scas
dec
or
cmp
out
ss
jge
sub
pop
fisubs
ljmp
enter
mov
lahf
adc
out
es
cmp
mov
jg
addr16
sbb
or
mov
retw
orb
out
pop
adc
xchg
shrb
sub
xchg
mov
jae
xor
addr16
pop
push
mov
scas
jnp
sbbb
push
sar
call
out
dec
mov
cltd
xlat
cmp
xchg
aaa
idivl
pop
and
popa
out
cmp
fisttpl
jmp
push
shrl
and
jb
or
loope
adc
push
sub
xor
lea
orl
es
dec
lds
test
mov
push
pop
adc
cmp
mov
cwtl
fmul
loop
xor
push
arpl
jmp
addr16
mov
jbe
shll
aad
call
cmp
fs
lock
inc
push
sbb
sub
dec
cmp
mov
lods
and
ljmp
or
cmp
pop
inc
lret
xchg
jae
subb
sbb
xchg
lds
outsl
pcmpgtw
shrb
scas
xlat
cmc
ljmp
in
lahf
arpl
ja
xchg
arpl
adc
lcall
movsb
in
pop
pop
push
insl
into
jl
pop
xchg
xchg
fsubl
stos
inc
fmul
inc
and
or
dec
pop
pop
push
movsb
lret
dec
cmpsb
hlt
dec
xor
dec
jg
cmp
mov
in
sub
fisttpll
mov
push
arpl
mov
push
cmc
out
xchg
hlt
jmp
je
fistl
scas
fs
and
adcb
movd
jae
hlt
mov
mov
push
xchg
pop
pop
xor
sbb
shll
cli
or
inc
stos
jae
cmp
mov
mov
lock
call
add
adc
fwait
stc
insl
adc
mov
mov
push
lock
jmp
out
aam
sub
orb
jle
pop
mov
nop
rcll
aaa
repnz
aad
xchg
les
jno
daa
jp
inc
mov
xlat
out
xchg
cmp
ret
push
mov
jns
repz
int
push
scas
out
pop
add
pop
cmp
lock
mov
mov
jp
mov
movsl
testb
jecxz
ja
sbb
adc
push
ficomps
inc
fs
pslld
out
es
sub
in
enter
outsb
movsb
es
xor
into
stos
cmpb
sbb
push
movsl
adc
gs
cwtl
fldl
sahf
std
mov
test
icebp
mull
ja
daa
in
cli
adc
or
addl
test
push
mov
mov
pusha
inc
pop
mov
into
sub
jno
pop
push
mov
fidivrs
mov
sarl
push
roll
enter
push
and
mov
addr16
mov
mov
stos
in
jns
jmp
pop
adc
call
and
and
fwait
and
jmp
rclb
or
shr
adcb
movsl
xchg
push
sbb
lahf
lcall
ja
shlb
sub
or
clc
insb
jne
call
fs
into
loop
xchg
xor
mov
push
stc
mov
adc
xor
inc
cs
add
mov
sbb
add
ret
outsb
adc
cmp
adc
and
popa
jnp
add
pusha
or
sti
dec
pop
cmp
push
cld
push
pop
sub
sub
add
add
outsl
popa
pop
adc
dec
jbe
cmp
add
add
mov
repz
cmp
lods
xor
negl
pshufw
pop
jo
sub
faddl
test
shll
aad
xlat
negb
pop
push
dec
xchg
loopne
adc
cld
rorl
adc
sub
out
in
mov
es
mov
iret
add
adc
ds
out
test
or
and
adc
inc
mov
xchg
add
in
jbe
cwtl
lock
add
lret
xchg
mov
sbb
rcrl
xchg
jmp
jmp
and
into
or
ficoms
jno
sbb
lahf
xchg
lcall
mov
dec
daa
out
sub
out
mov
inc
gs
and
scas
inc
pop
shlb
push
iret
adcb
lods
ljmp
jnp
lods
jg,pt
cmp
cmpsl
js
jmp
loop
jp
cld
xor
loope
pop
push
cmp
mov
mov
sahf
push
enter
xchg
inc
dec
sbb
insb
sbb
and
stos
test
subps
imul
jbe
cmp
xor
loopne
test
push
jecxz
mov
les
pop
pop
adc
adc
or
lods
test
mov
lcall
and
out
add
je
rcrl
cs
mov
lret
sti
call
into
cpuid
sub
lahf
sahf
mov
pushf
arpl
push
int
jge
aas
andl
movsb
aaa
xchg
test
stos
dec
add
fcmovb
mov
mov
aaa
leave
nop
aad
sbb
push
lea
xchg
scas
sbb
je
mov
lahf
dec
hlt
mov
data16
jb
fimuls
mov
sbbb
mov
jg
jae
and
pop
mov
call
mov
sub
cmpsb
fnstenv
out
outsb
adc
xlat
xor
sar
ljmp
mov
jo
loop
mov
std
push
dec
jno
push
sub
xchg
std
mul
push
loopne
jne
or
cld
xor
pop
test
or
imul
pop
mov
push
pushf
sub
cld
pop
add
scas
xor
cmp
xchg
popl
mov
push
or
dec
shlb
and
les
scas
movsl
inc
push
in
or
add
jae
pop
rolb
mov
sbb
inc
cmp
jl
cmc
jne
in
or
cs
dec
xchg
push
lret
add
and
inc
add
push
mov
test
bound
pop
add
lods
sti
mov
xchg
js
or
or
jns
xor
xchg
fmuls
arpl
push
mov
adc
out
push
ds
sbb
push
cmp
dec
cmpsb
sar
insb
leave
ss
push
pop
sub
mov
inc
neg
test
insl
push
addr16
fs
fsubrp
mov
clc
jmp
cmp
adc
xor
mov
lds
and
out
mov
addr16
aas
jl
shrl
adc
mov
imul
es
mov
or
fildll
xor
jecxz
in
mov
mov
xlat
or
jge
call
es
mov
aaa
int3
enter
pop
adc
xchg
in
lds
movsl
or
xor
arpl
fwait
aam
outsb
int3
push
pop
ret
dec
jbe
negb
inc
add
and
mov
mov
cmp
popa
popa
in
jno
divb
jno
in
leave
scas
leave
addl
jmp
repz
lds
inc
rorb
lea
imul
or
xor
repnz
ret
mov
ret
enter
adc
je
and
sbb
xchg
jge
les
pusha
pop
pop
dec
loopne
or
lods
pop
int
pop
mov
xor
mov
mov
jno
stc
jle
xor
push
mov
rcr
cltd
add
outsb
add
push
xor
push
stc
cmc
rorl
add
cmpsl
pop
sbb
int3
cmpsb
cli
out
sub
lcall
jno
inc
nop
sub
and
push
add
xchg
mov
sbb
push
inc
add
rclb
cmp
out
js
dec
lcall
inc
test
outsl
in
pop
sbb
jb
push
inc
add
ficompl
sbb
addr16
in
cmpb
cli
test
mov
in
jg
inc
sub
inc
and
ss
dec
push
lea
pop
sbbb
adc
mov
mov
sbb
push
add
inc
xor
in
xor
test
popa
cmpsl
cmp
push
popl
cs
hlt
xor
mov
mov
xchg
imul
rcrb
xor
lcall
lock
sbb
pop
push
pusha
push
mov
movsl
lcall
pop
mov
mov
into
orl
enter
js,pn
insb
lea
rorb
sub
int
jne
sbb
add
push
and
push
add
jnp
jl
scas
sbb
cwtl
in
lea
int3
inc
int
jne
mov
sbb
ss
jae
notl
in
push
lret
jno
sub
add
add
ret
aaa
jmp
enter
pop
call
out
or
pop
pop
clc
pop
jbe
icebp
cmp
in
cmp
lds
lock
pop
push
xchg
scas
filds
xor
add
int3
ljmp
inc
inc
mov
jne
imul
xchg
jge
in
cmp
orb
std
mov
ja
jno
sahf
or
lock
dec
enter
out
lds
sahf
dec
mov
xlat
das
jp
jbe
xchg
mov
sbb
sub
lods
fidivrl
out
pop
add
test
push
imul
sub
arpl
in
or
stos
jg
mov
mov
push
xchg
std
dec
sbb
pop
pop
or
lock
pop
leave
cmp
ret
cmp
out
cwtl
outsl
jl
sub
hlt
mov
fsubrl
mov
insb
or
pop
lcall
subl
and
mov
sbb
fimull
jg
iret
cmpsl
jecxz
mov
lcall
mov
fnstenv
cmp
inc
or
notb
mov
xlat
lods
cmp
cmp
ljmp
mov
lods
jl
int
xchg
lahf
test
and
and
ficompl
cmp
cmp
dec
out
jbe
push
incb
push
or
std
cmpsb
mov
inc
call
cltd
mov
or
adc
xchg
and
popa
lret
and
fldt
popa
mov
sub
mov
lods
repnz
jbe
sbb
jge
aad
and
mov
dec
or
and
ret
add
sarb
sub
jne
cwtl
es
or
or
mov
xor
aas
enter
out
pop
pop
sub
arpl
xchg
sbb
test
jns
push
mov
dec
and
jecxz
sub
pop
lods
int3
pop
add
iret
inc
in
lcall
lods
outsl
xlat
jbe
testl
jo
call
mov
cwtl
mov
in
outsl
leave
push
pop
les
leave
push
cmpsb
sub
xor
push
adc
xchg
rorb
xor
ja
testb
adc
scas
and
push
xchg
sub
loopne
stc
aaa
repnz
xlat
inc
pop
jmp
lahf
fisttpll
movsbl
xchg
fisttps
or
sbb
mov
or
insb
ds
mov
dec
jae
push
push
cmpl
fistpll
sub
and
lea
mov
aaa
mov
dec
cmp
jno
testl
mov
cmp
pop
cmp
dec
jge
dec
dec
popa
leave
cwtl
jl
or
movsb
and
jg
pop
add
add
sbb
mov
xlat
mov
hlt
push
add
icebp
jnp
pusha
xor
push
push
test
adc
test
jl
sbb
sub
repz
xchg
or
pop
addr16
cmp
xor
xchg
inc
out
pop
mov
je
mov
sarb
lret
repnz
jae
sarb
ja
xchg
mov
mov
iret
scas
mov
adc
adc
xor
push
stos
cmpsb
jne
mov
sub
xchg
mov
and
inc
inc
cwtl
data16
pop
cmp
sbb
mov
addr16
cmc
lods
and
sbb
pop
daa
dec
dec
cmp
mov
sbb
leave
push
fsub
call
loope
mov
sub
in
dec
sti
inc
sbb
mov
shlb
sar
sub
cmp
xlat
loopne
sbb
sub
xchg
fwait
pop
mov
mov
xor
je
imul
fisttpl
jno
cmp
vmovups
mull
out
and
jl
out
dec
ljmp
stos
lock
out
pop
mov
inc
sbb
xor
mov
js
pop
mov
imul
jge
scas
je
pop
lret
sbb
xor
and
leave
ficoms
dec
decb
orl
sbb
stc
fldt
sbb
gs
clc
insl
xor
mov
jle
sbb
inc
inc
mov
jmp
sub
inc
jle
mov
stc
push
lahf
jbe
insl
icebp
xor
mov
xor
mov
ret
cmpsb
sub
fimull
xor
out
lret
sub
fisubrl
pop
mov
mov
mov
adc
add
imul
lods
imul
mov
sti
sbb
js
sbb
mov
cmc
in
jno
xor
push
push
cwtl
sbb
ds
mov
cmp
ror
aas
jge
mov
push
sub
dec
xchg
loop
clc
cmc
pop
jp
and
sbb
and
push
xor
add
ljmp
int3
push
push
jmp
lret
dec
add
cltd
cmp
inc
outsb
js
xchg
xor
adc
loopne
jo
aas
aad
jl
in
adc
xor
sbb
xchg
jae
sub
dec
cmp
hlt
push
xlat
pop
xchg
lods
movsl
sub
icebp
sbb
or
mov
jbe
in
subl
or
fildll
fdiv
push
mov
arpl
push
inc
mov
cmpsb
popf
ds
popf
fstp
into
jae
lods
jle
popf
out
xchg
and
pop
daa
lods
mov
push
emms
jg
or
cmpsl
repnz
into
pop
xor
lret
cwtl
push
je
xchg
es
cmp
push
pop
dec
push
jmp
cwtl
push
mov
fadds
pop
xchg
lret
scas
fdivrl
or
popa
fists
mov
cmp
push
fcoml
insl
mov
xor
or
sub
das
aam
mov
sbb
dec
mov
fldt
adc
jl
and
push
in
mov
xor
repnz
mov
inc
sbb
nop
sub
into
inc
pop
inc
jg
das
aas
add
movb
test
std
adc
cwtl
out
dec
lahf
icebp
adc
mov
mov
mov
bound
xchg
inc
sbb
or
jo
scas
dec
hlt
push
filds
js
mov
mov
paddusb
mov
jg
jns
stos
lret
sbb
dec
mov
iret
lods
xchg
mov
gs
jle
fisubs
and
das
and
pushf
xchg
loopne
mov
xchg
push
pop
pop
jne
push
or
aaa
into
daa
movsb
icebp
push
stos
sub
adc
das
pop
pop
lock
and
or
cli
adc
xchg
mov
scas
das
inc
std
push
cmp
mov
cwtl
add
push
xor
xor
xor
stc
ror
mov
js
rcll
sub
test
jmp
xor
test
imul
lea
andb
add
lret
mov
cmp
imul
leave
cmp
dec
lock
jle
lret
adc
mov
loopne
pop
jno
adc
mov
cmp
mov
xor
adc
inc
mov
loopne,pt
sbb
push
fldenv
stos
or
adc
xchg
mov
out
mov
sub
pop
pop
xchg
jnp
fldt
fnstsw
ret
adc
and
movsl
add
pop
out
pop
mov
pop
shlb
push
cmp
ds
scas
inc
mov
js
xchg
mov
in
movsb
cmp
mov
das
dec
sbb
mov
aad
stos
sbbb
testl
rorl
mov
cmp
std
mov
mov
bound
adc
and
mov
mov
jne
lods
orb
push
stos
daa
fistl
loope
or
les
adc
xchg
push
shlb
cwtl
lea
fcoms
scas
mov
mov
aad
fprem1
mov
sti
loop
pop
push
popa
push
clc
sbb
sbb
mov
inc
xor
add
jb
cmp
push
jne
and
hlt
outsb
shlb
adc
pushf
in
inc
push
aas
ds
jl
fnstsw
sub
push
shl
les
sbb
out
fwait
movsb
scas
mov
icebp
mov
mov
or
cwtl
mov
dec
loop,pt
into
cmpsl
or
sbbl
scas
loop
push
inc
jge
shlb
jbe
in
int
ret
pop
push
mov
dec
ss
repnz
add
pop
je
xor
mov
xchg
mov
pop
push
mov
cmp
scas
lret
xchg
gs
aas
shrb
push
add
push
push
mov
mov
mov
and
lahf
mov
in
xchg
add
lods
and
fcompl
subl
mov
insb
sub
inc
cmc
push
mov
ljmp
mov
lahf
cmp
add
shll
adc
xchg
mov
mov
and
pop
mov
mov
movsb
inc
ret
clc
cli
daa
pop
ljmp
add
xchg
or
iret
jmp
clc
inc
sti
loope
mov
mov
fxch
imul
inc
xor
or
jp
andl
jge
in
stos
mov
movsl
cwtl
inc
mov
mov
xchg
pusha
dec
test
mov
add
lods
daa
dec
or
fistpl
idivl
cmp
rcrb
gs
jns
pop
xchg
repz
pop
imul
jno
mov
in
xchg
xchg
sahf
adc
and
dec
sub
add
or
icebp
inc
dec
cmp
popa
cmp
jp
mov
ficoms
jp
and
out
and
repz
lret
stos
add
push
cmpsl
fcoml
mov
pop
insb
inc
cmpsb
inc
pop
mov
pop
mov
add
add
bound
scas
rclw
aad
jbe
and
dec
popf
mov
and
ret
out
or
je
out
mov
adc
sbb
cs
or
aaa
gs
out
shll
mov
or
cwtl
pusha
jb
xor
adc
push
xchg
pop
mov
into
cmp
lahf
push
lahf
out
cmp
push
push
fisubs
xchg
fidivs
sbb
or
leave
pusha
out
mov
add
adc
and
cwtl
adc
aaa
push
or
pop
insl
cli
inc
pusha
sbb
pop
sbbb
sarl
xor
out
aam
int
dec
int
test
test
pusha
imul
and
pop
lret
add
ficoms
inc
cmp
dec
in
dec
pop
sub
outsl
cld
je
jl
mov
test
sbb
or
adcb
push
push
mov
adc
nop
or
cli
xor
xchg
push
push
mov
cs
jg
ss
sub
pop
add
or
test
test
imul
adc
push
xchg
cmp
test
dec
ror
add
jmp
mov
pop
pop
movsl
cmp
stos
jp
pop
add
into
mov
push
add
mov
popa
outsb
scas
xchg
pushf
sbb
insl
mov
ret
rclb
cmp
sahf
mov
push
or
mov
push
and
movsl
mov
faddl
xchg
push
and
dec
xchg
mov
repz
mov
add
or
dec
pop
lds
sbb
or
jecxz
ror
xor
bnd
sbb
scas
imul
mov
iret
mov
shl
jmp
sub
insl
adc
das
or
dec
stc
xor
je
mov
xor
test
mov
mov
pop
fs
daa
lods
dec
popa
pushf
mov
movsl
gs
jl
leave
pop
int3
xchg
je
subl
repz
push
cmp
or
iret
adc
repz
sbb
fidivs
sti
fcompl
cli
jp
loop
xor
imul
jp
sarl
adc
cmpsl
xchg
roll
or
mov
fs
idivb
cmpl
mov
fisubl
scas
popf
mov
jae
xchg
pop
mov
inc
inc
sub
clc
mov
pop
xchg
push
imul
xor
fstpl
or
jg
xor
pop
dec
test
pop
js
cmpb
test
lds
xchg
mov
dec
out
sub
xchg
test
cld
jp
jne
cmp
push
push
fdivp
loopne
mov
mull
push
mov
loope
loop
and
mov
mov
cltd
insl
xor
clc
in
mov
pop
les
mov
lahf
push
out
and
insl
arpl
aad
xlat
mov
dec
adc
xchg
out
lahf
ds
das
sbb
add
lahf
mov
pop
outsl
gs
pusha
das
mov
or
mov
mov
jae
pop
scas
jg
ret
xchg
push
lds
jl
jg
movsl
xor
hlt
cmp
cmp
in
sub
into
jl
cs
fcomp
and
sub
out
je
out
xchg
popa
addr16
mov
popf
sub
inc
or
cld
mov
out
ljmp
xchg
lods
fnsave
mov
call
xor
subl
push
das
jecxz
cmp
fsts
sbb
dec
dec
cmpsl
aas
xor
call
mov
sti
and
paddsw
add
sahf
rorb
cwtl
mov
shlb
ror
icebp
push
scas
mov
xlat
xor
push
mov
mov
aam
xchg
adc
adcl
daa
or
mov
ret
in
lahf
add
pop
push
rcrl
cmpb
inc
rcll
lods
xor
dec
and
sbb
or
mov
repnz
jle,pt
loopne
push
mov
fadds
ds
add
mov
lea
rcrb
lods
out
dec
mov
and
xor
mov
jmp
rolb
jae
cli
push
rorl
adc
or
xlat
mov
mov
ret
aam
cmp
arpl
jge
bswap
pushf
addb
loop
cmp
push
lret
push
mov
add
mov
imul
jl
or
mov
push
jecxz
jne
mov
jne
popa
mov
mov
in
cltd
loopne
ja
jne
mov
lods
fmull
mov
xor
xor
push
fsubp
or
cmp
sbb
in
scas
in
das
or
or
ljmp
test
repnz
stos
jl
mov
sub
fidivs
push
and
xchg
jmp
jl
insl
jno
dec
frstor
fdivl
mov
inc
test
movsb
cwtl
aas
mov
popa
mov
pop
in
xchg
adc
or
push
inc
mov
mov
xor
loope
jg
inc
aaa
stos
mov
loope
fwait
nop
std
inc
cmp
push
arpl
hlt
and
pop
movsl
sub
mov
mov
rcr
int
push
xor
inc
test
out
lret
iret
sub
jbe
ss
out
sahf
mov
cmp
inc
mov
jnp
loopne
rcll
pop
and
push
popa
xor
fldl
mov
ret
xchg
mov
adc
xchg
and
rcr
push
cld
push
imul
inc
mov
sub
scas
orl
neg
dec
adc
faddp
jae
jb
jno
add
mov
pop
xlat
ja
sub
cmp
add
jmp
mov
inc
adc
gs
mov
or
pop
cli
shlb
or
mov
and
mov
movsl
mov
pop
lahf
add
push
repnz
mov
arpl
inc
xlat
clc
inc
jg
insl
xor
cmovbe
std
testb
cli
mov
cmp
addr16
mov
shlb
imul
xchg
fwait
int3
mov
fcom
imul
or
outsb
pop
inc
jecxz
mov
fidivrl
adc
mov
sbb
lock
loopne
push
mov
addb
testb
push
xor
xchg
xchg
icebp
lea
test
mov
mov
clc
adc
daa
pop
xor
pop
mov
sbb
out
push
pushf
cmp
sub
loopne
adc
sbb
dec
xor
push
fs
fs
push
or
lods
sbb
out
out
fdivrs
ljmp
gs
daa
in
and
or
test
pop
mov
stos
or
or
sarb
mov
xchg
aam
mov
pusha
cmp
jb
mov
scas
push
sub
cltd
cltd
nop
scas
push
pusha
into
loope
dec
xor
rolb
mov
xor
pop
out
mov
shll
std
mov
lcall
testb
dec
inc
add
sub
mov
movsb
shll
inc
loop
pop
pop
push
cld
xchg
mov
sahf
movb
shlb
test
xor
clc
test
mov
addr16
or
or
and
jns
cmpsl
add
xchg
push
in
lcall
inc
add
pop
jnp
cmp
cmp
cmpsb
stos
stos
ds
dec
ret
fdivp
jecxz
mov
mov
imul
test
stc
push
scas
fprem
cmpsb
repz
imul
mov
mov
jne
xchg
das
jns
outsl
mov
push
cmp
fcoms
ss
inc
adc
adc
xorb
out
imul
inc
push
cmp
sub
inc
gs
or
fdivrl
shrb
popf
sub
sbb
ds
push
jge
push
mov
bound
adc
aas
in
xchg
xor
pop
outsl
sbb
pop
mov
pusha
or
inc
add
popa
jmp
and
xor
inc
pop
mov
jge
jno
add
int
push
daa
movsl
pop
roll
xor
lods
dec
xor
add
pushl
adc
mov
jne
aaa
sti
int3
inc
adc
sbb
jl
mov
jbe
aad
push
add
les
into
mov
jnp
inc
xor
mov
jg
in
cmc
cs
mov
add
inc
adc
insb
mov
lahf
pop
lea
int
addr16
jbe
in
jmp
iret
xchg
sbb
sub
addr16
mov
cld
cmp
subb
in
sbb
xchg
adc
scas
xchg
sbb
loop
popf
mov
pop
cmp
test
add
xchg
lret
pusha
andl
pop
sarb
mov
faddl
stos
add
ja
mov
sub
pop
and
subb
outsl
or
sahf
mov
mov
adc
daa
scas
mov
orl
mov
xchg
fcmovnb
push
arpl
lret
faddp
inc
and
mov
inc
fidivl
fdivrl
fistps
mov
shrl
and
aas
es
rcll
dec
sub
sahf
pop
fsub
cmpsb
imul
xor
lcall
stos
packuswb
scas
int
pop
ficomps
xchg
fldenv
fistpl
lods
jle
inc
adc
fucomip
inc
add
cld
ret
lods
cmpsb
cwtl
hlt
repz
fadds
mov
jl
jmp
cmp
add
imul
jge
ficoms
test
hlt
adc
dec
mov
jbe,pt
push
leave
push
mov
xor
cltd
stc
mov
dec
xor
rcrl
hlt
das
std
popa
mov
lods
inc
mov
mov
lcall
repz
xor
popa
addr16
inc
into
cmp
push
sub
ret
mov
xchg
jne
lea
sbb
push
push
add
lods
lahf
cmp
push
push
aad
test
gs
ljmp
dec
sub
mov
out
mov
mov
mov
mov
lds
andl
jns
test
popf
xchg
sub
je
mov
jg
jp
jge
test
stos
negl
sub
std
jb
xchg
ret
and
sbb
outsl
icebp
xor
mov
mov
inc
mov
and
dec
mov
inc
aaa
pop
orb
push
aaa
fiadds
push
inc
inc
mov
or
call
lods
mov
jo
cmp
pop
stos
xorl
and
bound
das
jns
insb
inc
repnz
mov
mov
pop
out
ficoms
je
jge
add
mov
imul
inc
push
cwtl
push
icebp
nop
cld
mov
sahf
cmpsl
lods
pop
sbb
jns
jno
pop
or
dec
fcoml
or
push
in
mov
insb
clc
jecxz
in
sbb
push
jmp
mov
jp
pop
push
imul
xchg
push
xchg
xchg
daa
andl
aam
mov
xchg
mov
jge
or
sbb
and
cmp
es
cmp
or
push
rolb
jo
jno
cld
or
mov
lods
fcompl
mov
ret
sub
pushf
mov
in
mov
int3
xlat
push
mov
icebp
mov
inc
jno
imul
cmp
xor
xor
mov
outsb
mov
add
cmp
push
push
outsl
in
leave
movsb
or
inc
and
lock
movsl
aam
movsb
inc
mov
jp
test
stos
lret
pop
jae
inc
mov
xchg
mov
cmpsl
push
xor
push
mov
lret
dec
push
pushf
mov
dec
jno
xor
stos
jne
mov
adc
sarl
push
xchg
lret
movsb
bound
aam
test
gs
dec
nop
lea
pop
xchg
push
rorb
push
adc
push
fistpl
incb
cltd
add
push
jns
ret
test
push
fcompl
scas
mov
repz
rclb
mov
imul
arpl
movsl
push
aaa
push
pushf
ss
scas
dec
rorl
lods
xor
or
scas
rcrb
out
xor
data16
adc
xchg
rol
pop
mov
jg
dec
inc
mov
sbb
fsub
lret
dec
int
mov
inc
lahf
leave
cld
in
cmp
fstp
mov
cmp
addl
sbb
mov
ja
enter
enter
inc
jae
and
mov
add
xor
out
ss
ja
cld
lahf
jge
xchg
pop
xchg
mov
pusha
cli
notb
dec
jge
xchg
mov
stos
or
popf
mov
sbb
imul
aad
cmp
inc
jno
lcall
jb
jp
adc
pop
test
idivl
pop
push
jbe
outsl
das
lds
loope
hlt
bound
dec
in
xchg
inc
lret
leave
lahf
or
mov
jno
dec
jmp
jmp
pop
pop
jmp
sbb
pop
leave
jne
scas
xchg
sbb
xorl
xchg
push
add
jecxz
sbb
mov
cmp
mov
inc
das
jno
add
pop
mov
or
sub
jbe
lcall
mov
fimull
inc
loop
cmp
fistps
add
push
push
xor
push
push
sub
cmpb
cmp
xlat
push
movsl
mov
pop
push
jne
jbe
xchg
movzbl
call
cltd
bound
and
mov
pop
rcrb
inc
cs
cmp
xchg
add
inc
mov
adc
pop
into
lret
mov
xchg
into
lret
cmc
enter
xor
daa
xor
lods
xor
icebp
sub
in
bound
inc
into
push
fwait
fcomip
push
fwait
pop
dec
mov
pop
push
scas
or
mov
enter
fdiv
pop
push
cli
sbb
mov
std
popa
xchg
shll
sbb
shr
sbb
mov
ja
sub
stos
mov
adc
mov
sub
sub
std
xchg
leave
loope
push
andl
lret
ljmp
mov
or
aad
mov
pusha
stc
imul
cmpsl
add
sbb
in
ljmp
pop
ret
and
xor
and
loope
inc
sub
jle
bnd
ret
jmp
ds
cli
insl
mov
mov
sbbb
daa
jbe
insl
mov
ljmp
ret
cmpl
lds
mov
sbb
mov
clc
les
imul
mov
mov
lahf
je
mov
and
lods
daa
pop
cld
mov
lds
rcrb
xor
dec
lcall
pop
jb
mov
call
iret
cmp
lret
pop
xchg
push
jb
or
dec
out
jo
inc
xchg
and
xor
add
cmp
das
incb
mov
imull
fwait
mov
outsb
mov
lods
sub
push
adc
or
jmp
jno
add
lods
cli
mov
scas
push
xchg
mov
mov
jg
sahf
fwait
int
dec
cmc
pop
push
xor
xchg
ds
ficompl
outsl
pop
mov
xchg
and
es
in
inc
dec
xor
sbb
ret
rcrl
movsb
cmpsb
out
xchg
lods
insb
pop
ret
mov
xchg
sub
jnp
sbb
sub
mov
sbb
scas
std
push
add
aad
pop
imul
adcl
or
clc
enter
das
rorl
shlb
pop
or
into
in
inc
push
or
inc
xchg
out
pop
daa
stc
sbb
push
lea
jo
aas
mov
jne
ljmp
push
or
or
mov
jl
ljmp
cmp
and
fdivs
or
ret
aam
push
mov
mov
in
inc
ja
adc
dec
mov
or
imul
jl
fnsave
mov
cmp
fsubs
inc
xor
dec
fiadds
or
hlt
gs
push
mov
adc
lret
pusha
jl
insl
pop
adc
cld
add
inc
cmc
pop
outsb
sbb
cli
aad
adc
xor
in
call
xor
pop
pop
cmpsb
jno
jne
clc
cwtl
or
dec
cmp
fwait
ljmp
jecxz
shll
or
adc
add
pop
in
leave
aas
fstl
push
add
push
cmp
mov
cs
xor
dec
int
push
add
adc
mov
ja
js
ljmp
pop
push
pop
cmc
cwtl
jo
inc
sub
ret
mov
adc
jle
sub
and
data16
jbe
iret
pop
xlat
jl
and
xchg
dec
push
pop
xor
loope
ja
test
jbe
push
inc
clc
mov
pop
jne
or
lods
rcll
les
mov
cs
out
push
std
test
xlat
aas
data16
hlt
lea
aam
mov
pusha
xor
push
repz
je
mov
mov
cli
movsl
xchg
mov
scas
repz
xchg
je
gs
fnsave
fldl
push
jae
adc
outsb
leave
dec
ss
pop
bound
jge
or
lods
cwtl
test
movsl
mov
add
lcall
cmpsb
jl
xor
cmp
sbb
test
mov
pushf
loopne
push
or
adc
push
adc
jae
fdivrp
jp
in
std
push
adc
xor
scas
into
dec
and
jl
pop
dec
data16
sub
nopl
cmc
xchg
and
sub
pop
test
xor
jae
sub
dec
iret
fs
ret
fsubl
add
ss
lods
lock
out
add
push
jg
popf
sti
lret
dec
pop
push
jge
lods
xchg
dec
or
jl
cwtl
sbb
pushf
cltd
mov
shl
cmp
inc
jno
lea
sbb
fistpll
loop
loope
mov
sub
dec
and
inc
imul
test
pusha
and
xchg
ljmp
sti
scas
cmp
jae
dec
sahf
mov
cmp
cwtl
jl
fidivl
in
mov
pop
pop
inc
ret
dec
add
jp
inc
movsl
ret
and
mov
lcall
sub
lods
adc
push
in
mov
push
and
or
pop
xchg
hlt
sub
add
leave
push
sbb
push
inc
sub
jge
lock
xchg
adc
mov
mov
cmpsl
imul
aam
mov
pop
mov
push
xor
jl
into
jnp
imull
pop
mov
fldcw
adc
lahf
stos
arpl
push
jno
pop
in
or
push
adc
push
adc
add
adc
mov
mov
js
xor
xchg
orl
sarl
sbb
push
jbe
rcll
mov
pop
decl
cltd
mov
xlat
lods
ss
in
mov
insl
inc
fs
jecxz
cmpsb
in
xchg
xor
xchg
add
adc
xchg
gs
mov
cs
pop
rcrl
clc
mov
dec
repz
fsubl
enter
sub
rcrb
xchg
js
xchg
cltd
rorl
pop
lock
mov
add
xchg
and
sbb
pop
cltd
xchg
jge
sbb
cmp
das
mov
ds
nop
sbb
fs
adc
ret
mov
mov
into
jecxz
mov
pop
inc
jmp
pop
xchg
push
mov
je
push
in
aad
cltd
test
mov
out
ret
shrl
test
repnz
imul
roll
pusha
test
xor
inc
lcall
bound
insl
xorl
xor
ret
pop
outsb
scas
out
lret
mov
mov
adc
repz
lret
push
and
hlt
mov
cmp
or
jb
cmpsl
movsb
out
inc
dec
pop
xchg
mov
pop
sbb
add
sbb
dec
inc
ret
pop
adc
mov
pop
mov
adc
lahf
stos
mov
out
movsb
xor
pop
shrl
addl
sub
pop
out
mov
lock
inc
ljmp
lea
xchg
cmp
dec
jb
mov
push
mov
mov
nop
aad
sub
add
mov
fnstsw
nop
xorb
push
sub
or
and
divl
cmpsb
stc
mov
mov
clc
movl
iret
cmp
loope
popa
jb
test
adc
movl
ss
mov
sbb
sbb
inc
out
mov
inc
cmc
sarl
xchg
add
mov
adc
loope
out
andl
dec
ftst
imul
sub
pop
and
xlat
inc
aas
enter
dec
negl
mov
cli
in
push
repz
popa
fdivr
inc
push
mov
sub
loop
cmp
in
vmread
stc
out
push
and
in
cmpsl
push
sarb
in
insb
add
stos
daa
add
or
pop
xor
sahf
pop
pop
sbb
sarb
jno
shll
leave
add
lods
inc
xchg
cltd
das
mov
xchg
xchg
rolb
sbb
cmp
cmp
dec
push
call
sub
sbb
lock
mov
adc
psubusw
push
and
mov
imul
and
bound
mov
sarl
int
jb
sbb
jo
jge
or
sub
push
adc
pop
cmp
ret
jo
jecxz
sbb
fimull
int3
jb
mov
ss
fimull
cld
or
fneni(8087
cmp
lods
stos
cmc
test
lcall
mov
imul
cmpsl
xchg
fwait
mov
inc
cmp
mov
xorl
cmpsb
xchg
xchg
sub
xor
loop
dec
dec
cmp
ja
std
aas
outsb
outsb
inc
push
pop
and
div
jbe
mov
mov
sbb
jge
jl
popf
dec
mov
insb
push
inc
addl
xor
mov
js
xor
xchg
sub
mov
cmp
sbb
jb
sub
xchg
xchg
out
xchg
insb
cmp
push
imul
mov
out
fdivs
jno
cmpsb
lods
stc
call
in
ja
pop
ret
pop
test
xor
mov
push
add
enter
cmp
bound
xor
and
mov
scas
sbb
push
xor
xor
adc
clc
push
cmp
jae
lea
pop
repz
imul
sbbl
jo
mov
mov
fdivrs
adc
movaps
test
scas
push
push
aam
and
push
aad
pop
sbb
aaa
xchg
cmc
dec
sbb
adc
dec
hlt
sub
clc
clc
xor
ficoml
push
and
mov
test
or
repz
adc
jae
xor
sbb
xchg
sub
xor
jg
jecxz
fistl
push
enter
mov
mov
lods
fcomps
jmp
cmp
jle
lods
fwait
mov
ds
gs
sbb
sahf
in
pop
cmc
sbb
cmp
mov
dec
push
fldt
mov
fisubrl
pusha
iret
push
inc
das
scas
stc
test
or
shl
pop
mov
cmp
jo
push
xlat
cld
and
hlt
fwait
stc
push
addr16
roll
xor
push
cmc
leave
daa
aam
cmp
rolb
das
mov
cmp
dec
or
addr16
and
xor
ljmp
inc
je
std
bound
lea
in
mov
aas
loope
xchg
arpl
sub
cld
jo
push
rcll
mov
add
pop
cmp
aam
and
test
les
bound
imul
inc
pop
fimuls
nop
dec
mov
add
jbe
xchg
aam
stos
int
push
jg
leave
xchg
icebp
jecxz
adc
mov
mov
and
and
in
out
and
sub
test
mov
sbbb
cwtl
cmp
sbb
ja
jb
clc
repnz
test
aam
pusha
and
mov
push
cwtl
mov
add
lock
and
aaa
stc
lock
in
in
fistpll
sbb
add
fdivrl
mov
add
cmp
push
pop
in
and
movsb
push
add
jae
aas
add
jb
sbb
or
clc
mov
call
adc
test
orb
pop
add
mov
sub
shll
das
bound
lret
arpl
or
mov
hlt
sar
decb
cmpsl
into
jbe
add
add
add
fisubrl
dec
addb
imul
or
xchg
in
mov
stc
ds
lods
mov
stos
push
pop
mov
and
loopne
lods
inc
xchg
inc
mov
jbe
adc
or
dec
xor
xchg
lahf
je
and
push
jb
jns
sub
jl
fimull
or
add
xor
shlb
fidivl
stos
sub
rorl
xor
out
aad
int
pop
out
scas
push
or
mov
push
xor
popa
cmp
jae
pop
movsb
lea
add
and
jb
sub
jmp
jb
test
sub
push
cmp
jnp
fistpll
mov
push
jle
pop
divl
push
scas
adc
and
cmpsl
rolb
sub
bound
jno
inc
xchg
xchg
inc
mov
lock
ret
scas
gs
inc
xchg
mov
and
dec
adc
aam
mov
cmpsb
mov
and
add
or
scas
test
and
leave
push
les
xchg
pop
sbb
aam
mov
push
jno
dec
clc
lods
lds
pusha
lock
pop
bnd
aaa
mov
ljmp
shr
adc
fisttpl
pop
dec
cld
mov
add
cwtl
xchg
push
add
mov
shrl
fucomip
ljmp
cmp
push
addl
xchg
cltd
ss
push
aam
push
mov
pop
aas
mov
cmp
jle
ret
mov
inc
mov
mov
icebp
mov
push
cmp
loop
push
lret
fldenv
sti
push
sbbb
mov
jnp
jmp
lret
ljmp
std
xor
push
dec
inc
inc
jge
jno
loop
xor
mov
out
jbe
sbb
pusha
fidivrs
sub
mov
cmp
or
add
dec
enter
test
or
movsl
arpl
push
mov
negl
fsts
adc
sbb
imul
in
inc
push
or
jmp
mov
push
inc
pop
pop
test
fcomps
bound
in
or
repz
js
aas
aam
pop
jg
sti
adc
push
daa
add
cltd
loop
sub
aas
fisttpll
pop
loopne
fistl
fildl
sahf
xchg
fists
movsb
loope
jbe
push
out
jle
and
mov
sarb
out
orb
decl
daa
loopne
sub
cmp
or
aas
fildll
jp
or
test
mov
and
mov
adc
cld
sub
push
jnp
cmp
dec
rcl
push
and
lock
or
rorb
xorl
insb
sbb
icebp
mov
sub
shrb
int3
gs
in
and
lahf
mov
sarb
test
je
sub
mov
in
cmp
mov
aas
adc
sbb
inc
pop
pop
lcall
in
push
mov
mov
fwait
or
mov
pop
jl
pop
mov
sub
mov
add
aam
std
dec
jl
jle
in
movsl
push
pavgb
mov
cli
xor
add
sti
mov
test
outsl
mov
in
movsl
xor
add
mov
mov
cmpsl
jns
dec
mov
fwait
xchg
mov
mov
mov
pop
aaa
rclb
inc
mov
cmp
pop
insb
shrl
movsb
xchg
xchg
cmp
lcall
fsubrl
into
mov
aas
cmp
mov
imul
and
push
dec
add
or
sti
cmpsl
sti
in
aas
lea
mov
popf
ret
cmpsl
iret
push
or
loop
add
lds
ret
mov
insb
jge
mov
popf
mov
adc
add
loop
inc
nop
push
xchg
cmpsl
xor
xchg
cmp
call
mov
testl
jne
mov
mov
xor
mov
mov
in
shr
int3
dec
fnstenv
les
jle
or
out
cmpsb
outsl
mov
loope
leave
pop
es
push
lods
lds
sbb
popf
push
jne
mov
mov
leave
dec
push
inc
push
out
or
test
in
jmp
sub
inc
xchg
mov
and
fcoml
mov
fildl
out
outsl
add
inc
push
cmpsl
add
cmp
sti
scas
hlt
ds
or
jl
jmp
mov
xor
lret
mov
cwtl
inc
rorb
popf
cmc
sti
mov
inc
lahf
adc
sbb
sbb
sbb
ja
lds
inc
imul
or
punpcklbw
in
bound
out
lock
jmp
scas
dec
jns
popa
sub
inc
mov
mov
pusha
aaa
xor
clc
cmc
cmp
mov
mov
push
loop
jl
xchg
mov
cs
dec
dec
pop
test
faddl
adc
cmp
cmp
out
inc
jp
lock
mov
mov
je
int
mov
or
pop
cmp
pop
mov
ds
add
std
inc
sbbl
cs
nop
je
adc
mov
adc
sub
sub
mov
mov
mov
rorl
stos
nop
xor
loopne
in
push
nop
dec
neg
xchg
aad
movsb
mov
stos
pop
es
jmp
mov
sti
cmpl
mov
push
push
or
vfrczpd
movsb
dec
mov
fdivrp
jle
pop
dec
fsubrp
xchg
lock
push
pmaddwd
push
fwait
jb
push
dec
mov
icebp
test
xchg
cltd
pusha
mov
push
pop
jle
push
mov
push
push
mov
mov
jmp
pop
mov
inc
loope
xchg
das
fdivl
btc
jae
jae
mov
shll
stos
mov
lahf
stos
mov
lds
or
sub
push
jb
mov
iret
popf
bnd
mov
jmp
mov
loope
jnp
pop
clc
fwait
imul
fistpll
pusha
dec
jnp
jno
lods
icebp
and
jle
dec
add
jp
lahf
hlt
mov
sahf
jne
scas
mov
adc
and
dec
mov
cwtl
cmp
sti
aam
and
outsb
mov
push
dec
into
adc
fsubrp
dec
and
daa
icebp
nop
cwtl
pushf
jg
jle
lea
mov
test
mov
test
je
mov
les
and
cmp
pop
repz
out
jle
jmp
mov
dec
mov
add
lea
shrl
jno
movsl
in
jl
add
jns
outsb
in
popf
dec
imul
aad
sub
jmp
shlb
bound
je
and
jmp
jne
ret
mov
lahf
add
sahf
mov
or
xor
cmp
loope
mov
push
lahf
jo
mov
inc
xchg
mov
leave
enter
push
inc
add
das
stos
push
mov
jecxz
jo
mov
mov
sbb
dec
sti
fwait
mov
pop
mov
push
aam
out
sti
das
lods
test
cmc
mov
xor
jl
mov
daa
jmp
lods
fs
and
test
jbe
mov
pop
add
or
and
fistpll
xchg
aam
outsb
mov
cmp
std
jbe
dec
fstps
je
cmp
sub
push
jns
xchg
push
mov
std
push
jnp
movsb
dec
int
jmp
mov
mov
xor
inc
adc
jmp
inc
jle
imul
push
outsl
lahf
pop
and
and
sbb
int
or
fcoms
cltd
sub
fcom
cs
adc
sub
jno
sbbb
out
int3
cwtl
push
xor
adc
xor
cmpsl
ss
movsl
jecxz
in
sti
fcomip
jo
mov
xchg
fiaddl
pmulhw
rcr
sub
adc
frstor
xchg
adc
pop
adc
pop
mov
or
xchg
jb
arpl
test
push
sbb
out
xchg
test
sbb
fdivrs
push
lret
jb
testb
sbb
in
movsl
les
ja
push
ret
insl
dec
out
mov
and
pop
cmpsb
outsl
jecxz
out
xor
mov
jnp
lock
cli
es
cmp
push
test
movsb
adc
mov
add
and
inc
sub
orb
aas
loope
and
loopne
mov
cmp
lcall
imul
mov
js
pop
rcr
pop
dec
or
into
std
aad
jae
cmpsl
push
cmp
sbb
pop
arpl
or
imul
or
popf
clc
pop
and
push
sub
cmp
cmp
aas
add
cmp
int3
inc
push
imul
or
std
add
push
daa
in
outsb
call
add
divl
stc
add
jge
pop
repnz
int
rorl
sub
xor
adc
xlat
les
fldl
adcl
fistps
adc
rolb
sbb
xor
adc
stos
mov
loop
test
mov
adc
cwtl
lcall
cmp
and
sub
cltd
mov
mov
test
loope
xlat
xchg
sti
ret
out
loopne
loopne
jnp
mov
test
jnp
jg
shrl
nop
inc
sahf
int3
divl
sub
and
loope
ret
jae
mov
cmp
ja
and
shrl
es
cmc
js
sahf
jmp
push
stos
insb
loope
test
or
out
jle
push
in
mov
and
jmp
call
cmp
aam
clc
push
sub
or
xchg
xor
mov
mov
inc
daa
mov
cmpsl
inc
dec
rorl
scas
sub
mov
shrl
sub
mov
mov
movsl
popa
xchg
jo
test
mov
test
fcomp
and
mov
subl
outsl
pop
mov
mov
jne
mov
sar
pop
shl
pushf
mov
pop
fnsave
lcall
xor
dec
stos
push
adc
les
cmpb
aas
sub
inc
test
mov
rol
push
das
xchg
test
xchg
stos
xor
out
sbb
add
cmp
pop
fdivrs
mov
xchg
cmpb
es
gs
push
jl
sbb
in
add
fsts
fldl
stos
ds
cmp
loope
rcrl
add
pop
pushl
pop
mov
dec
stc
add
cmp
sar
lock
mov
pop
mov
adc
cmp
mov
add
fadds
sub
lods
dec
test
mov
and
sbb
mov
ja
or
add
mov
cltd
mov
lret
lret
push
mov
inc
add
xlat
fistpl
into
push
scas
and
mov
icebp
dec
aam
mov
push
jg
insl
mov
jl
aam
push
or
filds
fsubrs
or
divl
cmp
push
into
std
or
andl
addr16
or
and
loopne
pushw
inc
shrl
mov
cmc
or
adc
pop
repz
mov
lret
stos
xor
push
test
mov
rclb
sub
jo
mov
jns
sbb
mov
lret
pop
in
fidivs
xchg
mov
out
xor
data16
jne
jno
push
insl
and
push
shlb
adc
fildll
test
cmp
xlat
push
out
cmpb
int3
xchg
dec
stos
aas
stos
xchg
leave
push
and
fistpl
fimuls
jns
shrl
or
es
sub
js
xchg
ja
icebp
inc
cmp
test
rcl
test
out
cmp
xchg
pushf
in
repz
pop
testl
adc
mov
xchg
sub
inc
cmp
dec
add
jl
push
cmp
cld
jne
dec
push
into
inc
mov
lret
dec
ljmp
icebp
in
ss
sti
loopne
cmp
cld
jnp
or
pop
pushf
jae
arpl
sub
jnp
cmp
test
int3
orl
lods
and
stos
inc
inc
cwtl
mov
cmp
xchg
mov
iret
leave
ljmp
int3
fcmovnb
sub
lods
xor
sarl
push
or
add
lret
mov
arpl
lods
stos
push
and
inc
push
mov
xchg
adc
add
pop
ss
xchg
imul
mov
cmpsb
dec
jp
jbe
mov
xchg
fmull
scas
in
mov
push
pop
bound
cwtl
sbb
push
inc
das
sbb
mov
xchg
mov
dec
pop
cmpb
and
add
and
mov
frstor
xchg
out
cmp
adcl
pop
in
cmpsb
hlt
cmpb
js
xchg
test
test
sahf
imul
cmp
repz
and
and
ja
xor
pop
jae
push
loop
daa
imul
mov
mov
and
in
test
dec
scas
dec
decb
mov
iret
popf
lret
mov
push
cmp
lods
icebp
daa
pop
jmp
mov
dec
push
adc
adc
lahf
jb
gs
rcll
pop
movsb
lret
cmpsb
std
mov
pop
outsb
ja
mov
jmp
popf
mov
repz
and
jo
pushf
xor
popf
and
xor
jg
ljmp
lea
pop
cli
enter
mov
push
inc
sub
inc
add
adc
jle
imul
mov
or
dec
popa
cmc
negb
or
inc
and
mov
cs
adc
pop
push
das
pusha
jge
fs
ljmp
and
ret
test
aas
xchg
sbb
leave
push
inc
fsts
cmp
adc
jb
out
ljmp
call
dec
jmp
inc
fs
std
cmp
aam
data16
shlb
iret
jmp
cmpsb
ror
test
push
inc
mov
lcall
mov
pushl
cmpsl
sub
mov
dec
jnp
pop
je
pop
pop
lcall
pop
jmp
test
mov
in
rol
push
sti
adc
pop
mov
call
or
or
pop
xchg
mov
test
or
pop
mov
aaa
movsb
adcl
clc
xor
jbe
mov
sbb
push
rcl
inc
iret
sbb
adc
mov
subb
pop
addl
adc
mov
mov
gs
jge
mov
ret
jmp
inc
pop
mov
fmuls
push
inc
sbb
je
lock
jge
mov
sbb
adc
andb
icebp
ljmp
test
mov
fisubs
icebp
mov
xor
ds
adc
mov
insb
es
or
jl
adc
mov
and
cltd
add
cmpsb
sahf
inc
enter
xor
cmp
add
lods
enter
mov
ljmp
or
xlat
push
sub
int3
fnstcw
rorl
fldt
xor
or
jnp
mov
mov
int3
mov
sbb
or
jae
mov
ja
iret
fidivl
insb
sub
jo
insl
aaa
ficoml
pop
adc
mov
adcl
imul
jo
push
jle
mov
adc
mov
sbb
cmp
jb
in
mov
loopne
cs
cmpsb
mov
int3
push
sub
leave
sbb
jae
mov
dec
jg
jge
cmp
fs
add
pop
mov
mov
movsb
pop
xchg
arpl
sti
rol
int
into
jle
dec
call
mov
jne
or
jns
nop
sbb
and
sub
stc
movsl
lahf
xchg
cmpsl
int3
ss
roll
mov
adc
addr16
inc
mov
aaa
scas
jbe
arpl
ror
or
test
jb
mov
inc
call
push
and
je
test
mov
pusha
push
fistpll
lret
mov
lds
dec
in
lods
and
outsl
xchg
inc
pusha
push
imul
stos
sub
pusha
pushf
out
in
das
sub
aad
adc
call
cmc
push
loope
and
mov
stos
jle
test
mov
int3
lods
sbb
inc
mov
adc
das
or
jne
test
adc
je
fistps
pause
adc
rorb
addb
inc
shl
arpl
and
pop
mov
arpl
lods
or
data16
adc
test
adc
adc
scas
push
sbb
xchg
mov
cmpb
stos
push
in
mov
rcrb
xchg
lret
cmp
inc
pop
je
shrl
rcll
addr16
sahf
inc
mov
cld
out
roll
lahf
sbb
fmull
pop
dec
cmp
ds
dec
push
insb
inc
mov
mov
sbb
shl
enter
rorl
fs
cmpsl
ja
jl
rclb
mov
std
cld
mov
jno
loop
in
dec
jge
add
subl
test
sub
hlt
pop
push
clc
push
cwtl
jp
addr16
and
adc
push
jo
aaa
incl
inc
pop
lods
scas
cmp
popa
and
movsl
or
cmpsb
xchg
test
orb
mov
pop
or
and
ljmp
and
or
aas
cmpsl
sti
push
inc
repnz
cmp
or
xchg
repz
iret
repz
mov
dec
xor
xchg
divb
xlat
jno
jno
fdivrs
jmp
xor
iret
loop
sbbl
mov
dec
mov
inc
sti
dec
das
into
pop
icebp
jmp
shlb
inc
sbb
mov
ja
dec
or
jg
aad
dec
jl
test
xor
outsb
cmp
and
fcompl
sbbl
adc
popf
cltd
xchg
sub
inc
xor
push
iret
mov
add
dec
sub
jge
test
inc
mov
adcb
fisubrs
insl
mov
jnp
and
arpl
dec
loop
cs
adc
aam
scas
mov
inc
fadds
out
mov
mov
out
fnstcw
movsl
cmp
cmp
mov
pop
mov
shr
add
rorb
sbb
xchg
mov
iret
xor
cmp
icebp
hlt
add
paddusw
mov
imul
dec
cmp
out
lret
fsub
call
mov
cli
int
and
in
inc
jno
push
xchg
enter
xor
push
jo
xchg
pop
repz
mov
arpl
fisttpll
jmp
or
push
xchg
jo
fcomp
sbb
cmp
clc
jbe
jae
ja
and
xlat
stos
push
shl
jmp
dec
adc
sti
sub
negl
in
xor
aas
dec
inc
ret
out
mov
cmpsb
pusha
loopne
stos
loope
in
sahf
pop
es
push
iret
jmp
inc
jae
mov
and
or
nop
jl
jb
das
and
xchg
or
add
int
push
pop
testl
sub
inc
xchg
jns
add
mov
std
xor
lods
rorl
sbb
jbe
add
adc
mov
pop
mov
bound
xor
call
aas
and
xor
dec
es
aas
and
jg
inc
dec
das
pop
iret
lret
mov
xlat
pop
mov
fdivrs
mov
ja
cmp
outsb
mov
test
push
mov
mov
les
pop
and
sti
dec
ja
and
cs
jl
mov
dec
andb
ret
cs
adc
xchg
ds
mov
insl
mov
sub
or
xchg
jge
mov
pop
and
and
es
inc
sub
push
push
mov
pop
neg
jecxz
lret
loope
mov
jns
dec
adc
das
xor
xchg
fisubs
out
orl
mov
pop
les
lock
inc
hlt
adcb
mov
inc
bound
stos
test
das
test
loopne
or
mov
dec
ffree
flds
aam
sub
shlb
mov
jg
dec
sarl
xchg
xchg
add
mov
cmpsl
or
mov
jb
mov
or
sar
mov
push
pop
add
cmp
in
icebp
add
hlt
in
sbb
and
int3
inc
mov
outsb
push
xchg
mov
xchg
mov
mov
enter
or
imul
cs
into
lock
cs
fcompl
or
fbstp
sub
dec
sbb
mov
jb
orl
bound
xchg
sub
movsb
out
stos
out
adc
sti
adc
jle
inc
sub
mov
add
cltd
imul
jne
outsl
fcoms
ret
or
rolb
movb
fdivrp
arpl
repnz
in
cmpl
and
mov
in
dec
clc
cli
out
call
imul
enter
sbb
ds
push
jmp
sar
shl
mov
shll
subl
adc
cwtl
pop
sub
shrb
mov
shlb
ret
clc
pop
cmp
gs
push
pusha
out
sub
daa
inc
aam
hlt
pop
sahf
cs
dec
jecxz
dec
mov
imul
icebp
cmp
sbb
arpl
lret
push
add
jnp
mov
fwait
inc
dec
inc
inc
clc
fnstcw
inc
fcomi
push
pop
jle
cmpsl
test
push
xchg
inc
les
repnz
lea
xor
push
add
cld
xor
jne,pn
int
lea
std
inc
push
shrl
pop
add
cs
pop
mov
push
pop
add
dec
repz
push
movsb
inc
xlat
gs
mov
push
jecxz
mov
inc
outsl
jle
sbb
stc
pop
push
xor
mov
add
push
scas
test
adc
pop
enter
mov
rorl
jl,pt
inc
into
leave
fsubr
sub
dec
push
int
xor
sbb
daa
pop
orb
shll
mov
cmpsb
dec
stos
xchg
add
fistps
cld
pop
adcb
movsb
clc
sarl
cmp
and
cld
cmp
stos
out
or
inc
arpl
pop
jns
add
int
addb
rol
xor
jle
imul
sarb
in
imul
decl
mov
pushf
pop
mov
push
mov
xchg
mov
and
insb
inc
and
in
xor
sbb
data16
mov
nop
lea
cld
mov
mov
push
int
nop
pop
xor
or
sub
cmp
incb
loope
sbb
mov
pop
xor
aad
mov
mov
mov
and
mov
mov
mov
sbb
fstl
sub
inc
and
pusha
enter
xchg
out
fnsave
push
test
andl
pop
jae
shrb
nop
les
bound
pop
pop
sub
lods
sub
das
jle
insb
jbe
fs
and
mov
lea
adc
dec
sbb
les
jle
pop
outsl
xor
subb
mov
jl
cmovne
das
ja
and
sbb
cmp
test
add
insb
fisttps
push
mov
and
lret
data16
inc
int3
lcall
es
test
sbb
cs
fwait
icebp
aaa
loop
outsb
pop
sbb
mov
xchg
lret
mov
inc
std
inc
ficoml
and
popf
shr
jmp
pop
adc
call
jge
leave
push
incb
lret
add
in
outsb
ljmp
sbb
int3
inc
sbbb
cmpsb
subb
adc
in
push
jge
xor
lds
mov
rclb
xlat
addl
cmp
iret
push
push
loopne
out
jmp
xor
cmpsb
int
push
xor
push
push
fwait
jl
cmp
aas
mov
outsb
mov
faddl
xchg
dec
or
clc
mov
cmp
xorb
in
sbb
mov
dec
std
push
adc
adc
sbb
scas
lcall
mov
mov
aad
jmp
in
jle
sub
jg
outsb
into
ja
xor
pop
or
aad
push
cmp
rolb
in
mov
in
mov
inc
dec
imul
cmp
jmp
mov
lcall
cmpsl
mov
push
mov
data16
iret
adc
pushf
fisttpll
push
das
leave
lahf
xor
lock
loop
push
dec
imul
dec
jns
sub
cmpsl
sbb
mov
xor
push
dec
sub
and
or
mov
popf
sbb
ja
add
stos
das
jmp
pop
mov
xchg
xor
inc
cs
xor
insb
scas
sub
push
mov
add
repz
push
mov
add
pushf
cmp
dec
pop
loope
add
jmp
xorl
sar
or
sub
repz
and
or
in
add
push
ja
js
stos
ficompl
add
mov
inc
dec
testl
insl
push
js
adc
loope
xor
insl
outsl
mov
aas
sbb
mov
push
fwait
xor
xor
loop
test
sar
mov
push
cmc
adc
and
outsl
pushf
cli
dec
xor
lock
sbb
mov
aaa
dec
and
lahf
stc
movb
lcall
outsl
inc
leave
sbb
push
imul
sbb
aad
push
addr16
int
and
mov
pushf
shl
cwtl
cwtl
das
sbb
mov
daa
jle
or
loope
sti
addb
mov
imul
adc
jne
rcrb
or
loop
push
lret
adc
popf
repz
jne
mov
pushf
xor
dec
sbb
imul
and
xchg
sub
xor
movsb
loop
mov
add
cwtl
adc
mov
cmp
mov
mov
sti
pop
push
call
cmp
sub
pushf
mov
in
movsb
lods
mov
in
push
bound
movsb
fidivrl
arpl
push
xor
jns
push
lods
std
int3
mov
mov
out
xchg
push
loop
aas
test
lods
mov
mov
lcall
jno
sahf
imul
mov
inc
or
outsb
pop
or
xor
hlt
rcrb
cltd
mov
xor
pop
fmull
pop
insl
adc
dec
adc
mov
add
pushf
lods
aad
dec
push
in
fstpt
lds
dec
jno
and
fstl
fwait
lds
push
mov
push
jo
imul
shll
frstor
lock
imulb
xor
jmp
stc
mov
ljmp
jp
ja
stos
je
add
addb
arpl
adc
push
das
mov
push
stc
mov
cmp
aam
jmp
in
xor
pmulhuw
jp
repnz
les
into
scas
movsl
pop
pop
jnp
fld
mov
sub
lods
sbbb
ret
clc
lea
or
jmp
inc
gs
pusha
lret
or
mov
insl
out
sahf
mov
push
inc
xor
mov
lret
mov
jge
adc
xor
xchg
int
rorl
push
pop
repz
sub
pop
push
inc
adc
lods
mov
lock
pop
jp
pushf
test
mov
and
pop
push
mov
mov
jg
fistpll
pop
mov
mov
mov
das
jp
sti
push
push
out
cmp
sti
jmp
gs
cmp
ds
or
pop
push
sub
popf
out
insl
mov
xchg
test
int3
xchg
pop
in
andb
cmpsl
lahf
aaa
xor
ljmp
test
loopne
fmuls
test
sub
aad
mov
lds
mov
add
aaa
jnp
mov
cmp
in
in
leave
in
xchg
test
or
rcl
insb
xlat
test
cltd
xchg
ljmp
xchg
mov
in
or
xlat
cmpsb
stc
jmp
in
les
lods
sbb
outsb
jns
and
sbb
jmp
mov
sub
mov
sbb
sbb
push
je
ljmp
cli
add
test
dec
or
adc
xor
jmp
cmc
lret
pop
dec
push
pop
imul
test
cmp
pop
cmpsb
xor
xchg
jb
xchg
out
ror
stos
mov
bound
mov
push
xchg
push
pop
xchg
jp
pop
xor
inc
movsl
jbe
ss
mov
cwtl
mov
jp
inc
outsl
cmpsl
jae
lea
add
pop
ficompl
add
adc
inc
xchg
repz
cmp
fisubrl
mov
inc
andl
and
js
xlat
inc
or
fwait
adc
int
ds
pop
fmul
loope
fiadds
pop
stos
dec
mov
pop
mov
sub
popa
dec
cli
insl
addb
jo
loope
lds
jnp
add
mov
push
in
mov
adc
stc
movsb
jno
scas
cltd
cmp
in
imul
lret
fwait
mov
and
cmp
jge
adc
add
lods
jnp
in
push
push
out
xchg
push
es
jnp
and
fistl
enter
add
sbb
scas
aaa
test
mov
inc
jp
push
call
call
into
inc
fisttpll
push
aad
jb
mov
shl
xor
cmc
dec
sbbl
scas
fidivrs
pop
mov
push
and
sub
idivl
loopne
push
mov
jns
cmp
mov
insb
inc
in
jp
add
jo
xor
pushf
dec
loopne
ja
jns
xchg
loop
cs
dec
add
int
mov
dec
mov
pop
xchg
mov
xor
mov
add
adc
in
outsl
inc
jo
cwtl
add
ja
sub
fnstsw
loope
adc
pushf
cwtl
dec
xor
popa
sbb
jmp
push
cmp
cmp
mov
ds
mov
mov
popa
loopne
mov
cmp
pop
jl
and
sbb
inc
dec
iret
or
bound
cmp
push
call
or
adc
dec
clc
shrb
gs
pop
mov
js
mov
aam
les
cli
mov
jge
mov
iret
cmp
cmc
addl
std
clc
jbe
int3
lods
push
clc
test
push
pop
xchg
cltd
inc
insb
ljmp
mov
test
or
mov
nop
inc
out
xor
push
rol
rcrl
add
and
mov
and
xchg
mov
xchg
dec
add
stos
adc
call
aas
jmp
cmp
xor
cmp
mov
or
cmpsl
mov
cltd
jge
dec
push
or
add
adc
xchg
inc
mov
lods
cmp
sbb
pushf
jmp
popa
punpcklwd
sbb
and
imul
xchg
or
cmpsl
add
lcall
fistpll
inc
adc
jmp
jg
shll
shl
je
mov
or
fdivrs
call
outsl
jle
rcr
and
fs
adc
pusha
inc
frstor
push
push
in
sub
sub
cmp
push
and
fnstsw
aad
pop
cmpsl
dec
nop
js
xchg
lea
cwtl
fnstcw
out
hlt
aam
fidivrl
div
sub
and
jmp
clc
pop
dec
adc
fs
out
fisttpl
pop
pop
test
ss
jmp
mov
movsb
cmp
mulb
mov
sub
jae
pushf
lods
or
gs
jnp
in
dec
dec
movsl
push
sbb
add
xor
mov
cmpsl
stos
push
cs
loope
lret
push
mov
pop
dec
lea
mov
inc
cwtl
push
xchg
dec
cmp
lods
pop
cmc
into
jns
inc
mov
mov
xchg
es
cmp
fcompl
sub
add
pop
add
and
dec
dec
stc
pop
pop
sbb
fcoms
std
rcrl
testb
mov
loopne
mov
or
or
mov
fadds
push
adc
icebp
loope
mov
adc
rcll
int3
mov
and
call
xor
mov
or
mov
mov
ss
sti
dec
jno
mov
mov
loop
jae
jge
sub
pop
dec
xchg
cli
in
mov
push
or
addr16
hlt
dec
mov
jno
pushl
mov
dec
inc
mov
pop
sbb
fmuls
cwtl
mov
fwait
lret
into
dec
or
cli
sbbl
mov
sub
dec
and
xor
xchg
inc
mov
out
ljmp
fistps
pop
repz
push
fs
or
je
sub
or
dec
pop
mov
adc
jecxz
das
iret
pop
jnp
in
push
fsubr
or
ds
sub
stc
icebp
and
repz
xlat
lcall
dec
out
xchg
mov
add
aaa
sub
or
lret
stos
mov
out
add
dec
and
pop
adc
sahf
rorb
jecxz
fdivrs
pop
stos
lcall
dec
cmp
orb
stos
adc
xor
enter
mov
icebp
cmc
bound
insl
icebp
mov
in
ljmp
xchg
mov
mov
fdivr
push
pop
and
pop
pop
das
gs
xor
push
and
rcrb
lahf
add
in
sbb
pop
data16
scas
inc
dec
mov
mov
mov
call
aad
dec
xchg
mov
inc
push
jge
jle
dec
pop
pop
cmpsb
mov
and
adc
sub
js
fstps
inc
push
mov
daa
push
add
sub
or
sbb
inc
jnp
push
sbb
sbb
push
sbb
push
sbb
scas
lds
int3
cmp
inc
push
xor
dec
jg
jle
fwait
daa
sub
repnz
adc
fsubrs
xchg
xor
mov
pop
or
mov
out
addb
lds
mov
pop
nop
mov
mov
inc
out
cmp
je
bound
jo
ret
in
pop
inc
dec
out
ss
pusha
pop
mov
xor
int3
fsubrs
xlat
fsubl
pop
popa
fnstcw
jp
xchg
clc
sbb
fistl
add
sub
int3
lods
pop
sub
test
ds
out
adcl
jbe
jle
lret
lods
ljmp
xlat
xlat
adc
xor
repnz
loopne
jae
add
mov
or
out
xlat
out
lret
dec
cmpsl
sahf
rcrl
scas
xchg
daa
loope
pop
push
lds
lret
inc
adc
jne
fisttpll
push
scas
rorl
je
cmp
bound
cltd
mov
ss
cmp
mov
lods
or
aam
ficoml
test
or
addr16
xchg
sbb
rorb
stos
cmp
aaa
ja
fnsave
mov
and
outsl
pop
inc
mov
faddl
push
cwtl
das
das
loopne
sahf
xor
fsubrl
adc
and
lahf
cmp
push
push
push
int
js
idivb
jno
pop
insl
cmp
adc
popa
push
sub
ds
jnp
push
andb
dec
iret
jle
gs
mov
xchg
leave
fisubrs
mov
insb
push
adc
cwtl
into
xor
cmp
mov
aam
clc
lret
into
ret
aad
mov
dec
xor
adc
push
je
scas
adc
repz
xor
orl
push
dec
xchg
mov
data16
push
outsb
nop
add
jno
imul
sub
loopne
jbe
aam
and
jmp
iret
jmp
je
sbb
cmp
lret
cmp
mov
or
fwait
inc
inc
pop
xor
xor
test
push
jg
jbe
pop
mov
movsb
jmp
lods
test
and
push
rolb
mov
aas
mov
cmpsl
orl
lods
in
into
and
rcll
jmp
inc
repz
int
mov
mov
in
cmp
shlb
ret
mov
xor
jecxz
adc
jbe
mov
test
out
loope
xchg
hlt
fnstsw
pop
cs
or
pop
or
rcll
mov
int
and
inc
test
popf
aas
dec
and
adc
in
ret
xor
test
dec
push
lods
dec
sbb
dec
sti
xchg
jmp
inc
cmc
ret
outsl
cli
scas
je
mov
testb
xor
fmull
adc
movl
cmp
pop
mov
dec
sub
int
jecxz
ss
outsl
movsb
cmpsl
jne
jne
std
jmp
sahf
cmp
lahf
inc
pop
jne
stc
adc
stos
stc
pop
mov
aad
dec
js
popa
jecxz
data16
mov
outsl
outsb
dec
lock
popf
out
call
jmp
sub
aam
push
repnz
mov
js
dec
add
sub
lods
shlb
add
xchg
mov
inc
pop
push
in
xchg
mov
push
ret
jnp
mov
or
fldcw
xor
or
pop
adc
mov
mov
xchg
jno
sbb
ljmp
les
mov
push
inc
cmp
in
lock
mov
adc
gs
repnz
cmpl
sub
xchg
push
mov
mov
rol
gs
dec
xchg
push
rorb
and
aam
mov
inc
lret
cs
imul
sbb
lock
jg
adc
sti
lods
popf
xor
jmp
fsubrs
iret
push
add
push
sub
arpl
push
lret
enter
ds
xor
in
out
pop
inc
push
xor
ljmp
cltd
rcrl
push
pop
inc
fldenv
mov
repnz
out
ja
mov
or
cli
clc
fcomps
sarb
dec
in
mov
inc
pop
neg
stos
js
mov
mov
std
jmp
das
jecxz
in
cwtl
jb
sub
pop
mov
inc
mov
sub
lock
sub
call
imul
int
pop
insl
iret
mov
cmp
mov
aas
sub
out
sahf
aad
cltd
bound
adc
cmp
mull
fsub
sub
jl
call
pop
popa
aad
out
jcxz
push
sahf
inc
jge
imul
and
sahf
xchg
xchg
nop
lahf
fadds
mov
scas
sbb
push
inc
sub
pop
jl
pop
popf
or
out
add
and
hlt
push
sub
lahf
into
xor
fcom
clc
data16
xor
cld
loopne
imul
adc
jmp
jp
dec
jo
aaa
call
cs
dec
outsb
loopne
sub
xchg
call
mov
cmc
adc
pop
int
or
sahf
fisubl
and
imul
sbb
fildl
ret
stos
ret
fildl
imul
mov
js
jns
pop
imul
xor
xchg
mov
cmpsb
mov
stos
ror
test
loop
mov
mov
pop
jbe
nop
hlt
push
cmp
mov
cmp
mov
mov
or
daa
mov
pop
sub
and
bnd
adc
sahf
fdivr
xor
pop
icebp
gs
ss
out
inc
adc
jb
add
xor
mov
out
bound
sahf
imul
lcall
sub
and
and
lret
fwait
mov
iret
das
fldenv
xchg
idivb
xchg
sub
out
imul
subl
loopne
fadds
popa
loopne
cmp
mov
pop
decb
nop
in
push
inc
stos
loop
dec
adc
rcl
xchg
jo
push
xor
lds
gs
loopne
push
and
mov
hlt
cmp
not
cwtl
out
leave
push
inc
std
cmpsl
fdivs
mov
pop
stc
in
sub
lods
out
adc
test
or
dec
pop
shl
fwait
cmp
int3
or
repz
scas
popa
or
cmp
clc
dec
repnz
test
mov
repnz
sbb
data16
dec
mov
cmpsb
push
test
xchg
xchg
inc
outsb
xchg
sbb
int
ret
out
inc
cmp
mov
sbb
fnstenv
push
sbb
jns
jmp
jle
push
jae
cmp
int3
or
lea
xor
xor
pusha
adc
and
push
in
pop
xor
bound
dec
or
out
fnstenv
pusha
pop
jns
ja
int3
int3
jmp
dec
fld
or
test
sbb
in
cmp
stos
sbb
ret
sub
loop
mov
cmp
lea
pop
mov
or
int
in
test
mov
sub
inc
lcall
inc
push
dec
fiaddl
pop
sbb
rcrb
xchg
sahf
adc
push
sbb
dec
sub
pop
int
rcr
xor
outsb
add
mov
ret
lea
adc
pushf
xchg
mov
mov
sub
scas
insb
ss
clc
sub
leave
xchg
jle
test
in
out
movsb
jno
sbb
test
or
xor
xchg
stc
mov
scas
jl
pusha
pop
stos
pop
jmp
push
xorb
filds
fstps
push
xchg
and
pop
mov
insb
inc
jmp
sti
mov
shrb
jmp
mov
scas
mov
mul
in
pop
andl
addr16
mov
cvtdq2ps
subl
or
movsl
inc
xlat
leave
addr16
xor
lcall
adc
lahf
pushf
inc
movsb
scas
cmpsb
ja
les
les
into
nop
js
lret
shlb
icebp
in
push
push
leave
iret
mov
ret
mov
dec
cmp
mov
pop
pop
pop
push
out
mov
and
or
sub
jb
inc
jl
movsb
mov
mov
dec
mov
decb
and
cmc
in
mov
sub
push
enter
add
daa
dec
aad
cmp
dec
pop
mov
jns
int
rclb
sbb
sbb
jl
sbb
inc
das
out
inc
lret
mov
inc
pop
xor
cwtl
sahf
mov
xchg
mov
outsl
mov
pop
insb
push
stc
jnp
dec
std
fs
cli
daa
mov
inc
push
ja
daa
pop
mov
pop
pusha
orb
adc
stos
aas
push
icebp
pop
mov
pslld
sbb
ss
sub
scas
push
adc
inc
daa
jl
xchg
push
ss
cmp
in
push
in
adc
xchg
mov
outsb
push
inc
scas
cmp
push
inc
mov
scas
push
mov
fmull
icebp
adc
sub
adc
xchg
inc
aas
cwtl
lods
cmp
loop
repz
int3
ficomps
and
sti
sub
lahf
mov
repnz
pop
xchg
pop
cmp
sub
mov
sbb
clc
sbb
adc
dec
xor
loope
dec
stos
movsb
or
push
add
js
add
and
arpl
inc
xchg
mov
or
jb
cmp
es
xchg
mov
sti
sbb
sbb
stos
jl
pop
outsb
xorb
insb
mov
lods
pushl
out
dec
dec
pusha
rcl
mov
js
js
icebp
xchg
fdivp
cmpsl
sub
dec
popf
xchg
jmp
jo
popa
add
lock
pop
cmc
shlb
cli
shlb
insl
jne
mov
pop
push
insl
adc
jae
mov
push
pop
pop
icebp
jnp
loope
push
std
push
scas
lcall
stos
inc
das
and
dec
sbb
into
mov
inc
scas
xchg
sbb
adc
ret
inc
ja
push
mov
scas
subl
test
jmp
sub
lds
push
pop
inc
jno
mov
mov
stos
or
cld
mov
dec
xlat
loope
lret
sub
add
test
lds
jmp
pop
rcrb
push
or
ds
ds
jle
mov
or
push
jle
mov
mov
jecxz
lea
pop
cmpsl
adc
popf
jae
in
ljmp
mov
cmc
sub
jo
jbe
sti
orb
shlb
outsl
adc
sbb
push
fwait
jae
sti
and
adc
fwait
je
jge
out
pop
adc
push
movsb
add
leave
sar
jle
jne
or
adc
call
mov
mov
movsb
in
push
aam
and
out
jmp
lock
mov
insb
cmpsb
das
nop
mov
mov
adc
mov
mov
or
into
ds
scas
lcall
sub
push
imulb
test
sbb
cmc
mov
sub
mov
push
dec
jge
dec
lret
push
lock
jns
repz
dec
lods
sub
rorb
push
fimuls
and
mov
jl
dec
dec
insl
ret
add
lret
mov
outsl
loope
inc
addr16
aad
imul
lcall
and
sub
xor
add
jecxz
jbe
test
mov
movsb
push
popa
dec
ljmp
dec
dec
rol
inc
or
and
mov
mov
cmpsl
add
mov
inc
fisttps
out
dec
push
aad
mov
aaa
xor
repz
dec
inc
repnz
cmp
lret
ja
push
sub
mov
int
dec
xchg
sahf
sbb
ret
pop
push
xchg
sub
fbld
into
movsb
pushf
mov
mov
or
mov
mov
sarl
fwait
leave
ljmp
inc
cmp
repnz
mov
jp
adc
inc
mov
mov
stc
fisubs
pop
pusha
aam
and
mull
jnp
incl
mov
xor
sbb
ja
xchg
push
and
daa
fdivr
jb
in
jl
int3
or
dec
cmp
cmp
pop
mov
xchg
jl
shrb
lods
cmpsl
out
inc
add
xchg
outsb
sub
ret
mov
jg
fsubrs
shrl
xchg
mov
xchg
xchg
mov
hlt
inc
lret
cltd
daa
jno
mov
xchg
lcall
ss
cmp
rol
cli
nop
pop
pop
push
stos
imul
mov
cmp
aaa
fst
je
add
popf
mov
jg
lret
call
ja
fbld
sbb
or
xchg
cltd
popf
outsb
cld
call
mov
sbb
rcr
pop
push
and
rorl
sbb
pop
inc
mov
mov
stc
bound
add
jecxz
pop
sbb
and
fnstsw
jnp
in
test
jno
loopne
or
jns
push
add
push
mov
dec
sbb
and
adc
cld
sahf
test
jo
in
push
rcl
and
ds
lea
pop
adc
pop
jns
mov
cmp
and
sarb
sahf
and
popf
scas
aas
gs
lds
inc
inc
lcall
repnz
inc
aaa
mov
dec
data16
push
imul
arpl
jg
adc
addr16
cwtl
or
aaa
daa
or
adc
mov
xchg
push
test
test
mov
dec
lcall
aam
mov
or
faddl
mov
mov
aam
mov
out
jae
mov
ficoms
pushf
mov
and
adc
std
cmp
loopne
push
std
fisubl
push
sub
addb
mov
xchg
inc
test
orl
mov
mov
lahf
mov
mov
sub
adc
in
clc
hlt
test
and
jbe
dec
cmp
enter
push
push
push
dec
call
cmp
cmp
and
shl
ret
inc
iret
and
mov
test
jo
jbe
clc
hlt
rolb
pushf
pushf
dec
inc
xchg
xchg
pushf
lock
loopne
loop
ficoms
xor
fiaddl
adc
adc
jno
xchg
mov
lret
pop
std
dec
loope
ds
rolb
adc
push
mov
pusha
jne
notl
jae
mov
pop
std
xchg
cmc
and
arpl
or
mov
mov
mov
fdivrl
scas
rcll
mov
fs
scas
or
loop
mov
mov
add
lea
dec
xor
enter
mov
movsb
imul
push
je
pop
iret
sti
clc
sub
sbb
repnz
and
rclb
pop
imul
gs
enter
jo
popa
ret
inc
andb
mov
outsb
lea
jg
rcrb
sahf
rcrb
cltd
ror
out
add
pop
sbb
jecxz
inc
fildl
jns
pop
xor
mov
in
adc
ja
test
ret
sbb
clc
out
mov
icebp
ja
popf
adc
inc
pop
fcmove
cmpsb
mov
jmp
xchg
xchg
fistpl
repnz
mov
xor
and
pop
sti
insb
fsubs
fwait
sarb
sarl
jnp
shll
pop
push
das
fmuls
push
lock
xchg
mov
andb
cmpsb
orl
jb
jecxz
push
mov
mov
dec
mov
sbb
push
xchg
push
fcoml
push
minps
mov
out
dec
cmp
arpl
sarl
mov
and
inc
jmp
dec
adcl
pop
mov
inc
pandn
push
pushf
stos
sub
jl
pop
pop
enter
mov
daa
push
sbb
dec
inc
or
popa
inc
jns
and
ss
fisubs
out
add
inc
int
dec
out
mov
adc
dec
insl
inc
pop
inc
in
xor
mull
and
roll
xchg
lahf
adc
fwait
adc
xor
test
push
xlat
lret
pushf
mov
lahf
cwtl
cltd
dec
clc
dec
hlt
push
xchg
push
data16
fldcw
dec
loop
stc
xor
in
es
pop
inc
jb
jp
cmp
divl
clc
icebp
mov
or
push
outsl
mov
and
aad
pop
adc
sahf
lods
cmpsb
rcll
shl
jae
rcll
sahf
jns
ljmp
dec
aas
aaa
mov
xchg
outsl
inc
mov
cmp
add
call
cwtl
sub
hlt
push
arpl
movsb
sbb
push
in
or
sub
push
and
mov
test
fidivrl
mov
inc
lea
pop
or
jl
call
and
jns
xorb
jmp
outsb
pop
and
les
xchg
rcrb
repnz
negl
js
outsl
je
mov
fisubs
insb
daa
test
in
adc
sbb
daa
movsl
ficomps
outsb
into
stos
sahf
rorl
aas
pop
mov
fwait
cmp
cmpsl
adc
fcompl
xor
xchg
cmp
mov
inc
stos
test
fcoml
cmpb
or
pop
add
icebp
mov
int
mov
push
dec
xchg
outsl
push
sbb
arpl
xchg
fimull
dec
mov
mov
aaa
imul
test
out
insb
inc
sarl
jp
xchg
push
inc
xchg
je
iret
rcrl
jnp
inc
stc
das
push
push
mov
mov
push
lcall
xchg
enter
gs
or
incb
fdivrl
in
pop
pop
fdivr
stos
outsb
xchg
xor
test
leave
aaa
adc
adc
adc
imul
push
jecxz
xchg
add
push
dec
addr16
jb
clc
ret
ds
mov
pop
pop
fs
xchg
imul
inc
cmpsl
mov
mov
ja
stos
adc
and
pop
ret
sub
jae
fstps
mov
xchg
dec
mov
cmp
pop
and
xor
mov
add
dec
outsb
addr16
jmp
sub
in
or
fiadds
jne
cmp
push
xor
in
xor
aaa
xchg
sub
and
test
ss
stos
and
bound
cltd
xor
dec
push
insb
xchg
popf
loope
xchg
and
or
push
pop
cmp
pop
data16
pushf
jns
aaa
add
outsb
ljmp
lock
mov
nop
pop
leave
cli
out
in
sbb
jl
ljmp
ljmp
std
pusha
mov
push
adc
mov
push
ror
ja
cltd
fisttpl
cmp
adc
popf
leave
add
adc
fdivr
frstor
pop
xchg
ljmp
xor
repz
popf
push
xor
add
add
imul
mov
movsb
sbb
or
daa
push
mov
decl
pop
inc
loop
jns
pop
jmp
cmp
jl
push
addr16
inc
sbb
mov
xor
sahf
jl
sbb
ja
push
ret
inc
gs
hlt
jmp
aad
js
sbb
fildl
cmpsb
lahf
push
xor
add
aas
sbb
adc
js
xorb
cmp
xor
xorb
arpl
inc
add
ficomps
push
adc
and
mov
aas
lock
rorb
scas
xor
add
sub
insw
jecxz
mov
push
cmp
andb
rcl
outsb
cmp
adcl
adc
fidivs
lds
sahf
mov
mov
mov
aas
jg
sub
pop
cld
repnz
stc
push
and
push
scas
js
pop
mov
into
xchg
cs
sub
mov
or
add
mov
jne
add
pop
stos
ljmp
jmp
push
dec
sub
and
and
jle
and
mov
out
in
lahf
inc
mov
sti
sub
jp
mov
out
stc
mov
enter
mov
je
inc
jno
pop
inc
dec
fmull
pop
out
inc
sub
test
int3
sbb
inc
cs
inc
push
add
ret
xchg
dec
mov
hlt
movsb
sbb
repz
xchg
sub
sbb
cwtl
push
sbb
jno
inc
out
in
or
test
lock
mov
push
sbb
push
and
cmp
aam
repz
pop
dec
shrl
cmp
push
sub
jb
cmp
xchg
out
jge
jge
cltd
sub
xchg
lahf
popa
jp
iret
aaa
mov
bound
inc
adc
push
test
es
or
fnstcw
ret
sar
inc
mov
adc
cwtl
push
inc
ds
bound
iret
push
xchg
lcall
insl
mov
pop
xlat
push
cmp
mov
jge
lea
gs
mov
mov
mov
mov
repnz
lods
std
cwtl
xor
sbb
push
out
lret
mov
orb
push
imul
jg
sub
outsb
aam
mov
addr16
xor
in
mov
int
push
xor
pop
pop
jno
dec
mov
sub
jl
cwtl
loopne
icebp
cwtl
lahf
xchg
pop
imul
lret
mov
aam
jge
lcall
mov
sbbl
clc
inc
jle
push
xchg
adc
sub
xchg
mov
aam
xor
sti
push
pop
orl
pop
rclb
cmp
das
inc
cmp
jmp
popa
popf
pop
imul
sti
cmp
and
xlat
mov
push
mov
and
loop
imul
orl
sarb
push
call
les
shlb
mov
mov
jle
xchg
pop
call
pop
rcrl
ljmp
sub
pop
sub
sbb
dec
inc
mov
add
mov
pop
bound
test
cld
xchg
cmp
test
in
out
clc
mov
or
mov
stc
adc
pop
sbb
xchg
aad
and
popa
flds
lock
inc
sti
jb
xor
filds
jne
leave
push
adc
lahf
loop
mov
movsb
jmp
pop
repnz
jbe
dec
pop
mov
dec
aam
xor
mov
test
push
pop
cmpsl
sbb
push
decb
push
lods
jns
mov
mov
mov
add
fdivs
mov
push
call
mov
push
mov
adc
lcall
cltd
outsl
ret
daa
fists
mov
leave
push
sbb
xor
adc
shrl
add
fcmove
cmp
inc
cmp
mov
or
pop
ret
jg
pop
rolb
lret
cltd
push
mov
insl
or
add
xchg
out
insb
sbb
stos
mov
push
in
in
sub
out
push
mov
iret
mov
call
daa
test
in
pop
push
adc
arpl
movsl
inc
stos
bound
mov
clc
out
adc
aam
idiv
jle
loop
and
mov
insl
xchg
xchg
and
cmp
mull
leave
push
enter
jmp
fdivrp
shll
sbb
cli
fidivl
loopne
xchg
jg
sahf
popa
mov
pop
bnd
pop
loope
push
jo
movsb
or
cmp
scas
out
loope
dec
or
fxch
pushf
ja
loopne
mov
cmp
jg
mov
cli
sarb
add
adc
mov
test
lret
cmp
mov
out
jmp
add
mov
addr16
add
shl
add
xor
mov
add
test
sub
stos
in
loope
nop
rcll
xchg
mov
jle
adc
call
adc
push
in
insb
sbb
mov
pop
xor
jns
adc
ret
cmc
rcrb
std
mov
inc
fildl
imul
cs
pop
imul
movsl
pop
cmpsl
mov
adc
xchg
fwait
int
cmp
dec
fnsave
in
stc
sbb
mov
push
jae
xor
shll
int
mov
cmp
xlat
mov
pop
incb
pushf
push
lret
adc
mov
mov
pop
cli
jle
lcall
call
or
cltd
and
xor
mov
not
ficoms
jne
loopne
xchg
add
rep
push
push
cltd
out
mov
sbb
and
stos
lcall
mov
subl
out
jb
sbb
out
lahf
sbb
pop
pop
and
mov
lock
cs
fs
lahf
add
inc
call
mov
jne
pop
sub
rcll
lods
push
add
mov
jmp
cmp
inc
aad
mov
pop
sbb
dec
outsb
inc
cmp
popa
inc
xor
cmpsb
jns
sbb
push
mov
rcrb
repnz
mov
adc
aad
insb
jp
sub
outsb
mov
or
jecxz
lods
add
mov
in
mov
int
adc
sub
int3
hlt
subl
mov
adc
nop
nop
push
cmp
cmp
jne
aaa
out
loope
adc
sahf
dec
mov
mov
xor
rol
add
loop
fistps
cmp
push
add
call
icebp
pop
pop
sbb
dec
pop
scas
mov
clc
stos
and
fcmovb
jb
or
xchg
xor
cmp
pusha
out
aam
bnd
lret
add
test
int3
adc
mov
push
and
adc
xchg
pop
or
xchg
cmpsl
pop
xchg
pop
dec
mov
push
filds
dec
aas
add
fiaddl
xor
das
and
stos
fisubl
stos
fdivr
fadds
jp
xor
jno
sbb
pop
push
movsb
dec
pop
inc
arpl
jno
mov
sti
inc
xchg
stc
xchg
sub
mov
pusha
kmovw
jnp
pop
ljmp
cmp
out
rcrl
mov
jns
jg
pop
mov
sbb
mov
push
and
cltd
pop
out
xorb
in
iret
mov
sub
fistpl
mov
in
in
or
sub
out
fidivl
push
movsb
in
decb
cld
nop
jecxz
sbb
cmp
in
or
mov
jl
aam
adc
mov
les
fwait
mov
mov
push
mov
xchg
aas
or
push
aam
mov
push
sub
sbb
fcmovnbe
push
jo
xchg
mov
addr16
sar
test
test
cs
loope
int
cmp
dec
loopne
lcall
lds
xor
cmp
fcmovne
or
cmpsl
popf
jnp
xchg
inc
mov
lret
std
lret
xor
data16
test
xlat
ftst
or
inc
call
shrl
cli
pop
and
lock
sub
pusha
pop
xchg
fisubs
sub
aas
sub
dec
ret
aam
loopne
mov
sub
mov
push
sub
pop
jno
inc
rcrl
sahf
mov
pop
mov
das
push
push
fldt
xor
ficompl
scas
pop
mov
test
aaa
xlat
loope
cmp
inc
in
or
cmp
ret
cmp
out
shll
rorl
xor
sub
xchg
imul
pop
xor
std
and
pop
inc
push
cmpsl
ret
sarl
push
incl
pop
dec
movsb
pop
in
push
nop
adcb
jg
testb
xchg
jae
inc
rolb
and
shl
sti
xor
sub
sbb
fwait
sbbl
sbb
xor
lret
sub
je
fidivrs
shlb
test
pop
lods
lods
mov
fstl
sbb
sbb
adc
sub
hlt
insl
cmp
into
jmp
lea
push
test
fdivrs
xchg
sti
push
xchg
add
clc
pop
sbbb
dec
cli
outsl
xor
out
sub
cli
je
push
insb
insb
cmp
gs
xor
add
mov
nop
pop
mov
rorl
pop
push
xchg
and
mov
icebp
add
arpl
out
sti
xor
out
enter
rcr
out
insb
xchg
sbb
sub
mov
and
jmp
sub
inc
push
rolb
scas
and
dec
std
cs
shll
int3
in
jg
movsb
icebp
dec
loop
adc
add
popf
pop
push
clc
mov
add
jb
push
xor
hlt
test
sub
fwait
push
ret
cmp
dec
adcb
push
mov
and
lods
and
cmp
xchg
hlt
cmp
push
inc
inc
sbb
or
stc
aad
scas
cltd
in
pop
mov
or
cmp
in
imul
sbb
sar
xor
movsb
jmp
mov
or
fwait
leave
movsb
insl
into
imul
pop
outsb
push
or
jmp
subl
pop
or
insb
mov
push
pop
add
pop
cmp
stc
jle
imul
imul
jns
aad
xchg
pop
or
lret
push
xchg
inc
test
mov
call
movsl
cltd
lds
stos
sub
mov
cltd
push
std
or
lea
insb
iret
jle
pop
mov
enter
jns
cmp
mull
mov
loop
cmpsl
mov
push
out
dec
mov
call
and
call
icebp
jmp
fstpt
adc
jo
mov
mov
jecxz
add
mov
test
jmp
jmp
inc
xor
scas
pop
xlat
xorb
fdivrs
jmp
sarl
sbb
scas
push
stos
or
movsl
pop
xor
scas
sbb
lret
jl
ss
pop
enter
stos
cwtl
dec
stos
andb
xchg
pop
or
popa
cmp
nopl
test
test
xorl
mov
inc
movsl
add
das
ja
into
sbb
lds
xlat
xor
std
dec
ja
or
movsb
xor
adc
xchg
jnp
pop
test
jnp
and
cmp
pop
aaa
and
dec
sbbl
mov
sub
stos
xor
xlat
shll
movsb
adc
das
xchg
test
dec
mov
jmp
insl
clc
xor
lds
pop
xlat
cs
or
adc
add
je
call
repz
inc
imul
test
data16
inc
dec
cmp
and
das
xchg
xlat
rorb
rorb
pop
sbb
jle
outsb
pop
lret
fnstcw
test
fs
mov
imul
jp
mov
daa
stc
mov
and
mov
fidivrs
out
or
ffree
pushf
in
lcall
idiv
mov
aad
ds
loope
mov
lcall
ljmp
add
adc
jp
jo
sti
mov
div
fs
sbb
sub
aaa
sub
and
push
mov
or
fcmovnb
outsb
add
sbbb
pop
cli
jae
subl
cmpsb
pushl
mov
stc
imul
mov
mov
xchg
or
fidivrl
cmpb
call
stc
in
out
out
dec
jge
inc
and
sbb
adc
aad
or
add
ds
mov
loopne
mov
ds
cmpsb
sub
jl
mov
bound
ficoml
leave
jnp
lods
mov
addr16
xorl
inc
inc
fadds
xor
outsl
roll
xor
fs
adc
xor
ss
adcl
stos
add
inc
pop
jne
sub
out
inc
gs
pop
and
loop
mov
jb
cmp
shr
cld
sbb
cld
sbb
int
test
ja
add
ja
adc
mov
in
add
lea
or
sbb
mov
push
int3
popa
sbb
mov
mov
sbb
flds
mov
mov
xchg
xor
xchg
xchg
push
mov
or
sahf
push
aam
sbb
mull
jbe
fsubrl
mov
xchg
fxch
jp
jb
dec
sbb
cmpsb
adc
xchg
ret
mov
das
int
out
xor
mov
mov
out
movsb
adc
mov
xchg
stos
ja
jb
pushf
jg
outsl
mov
sbb
xchg
enter
add
mov
sahf
adc
push
jno,pn
cmp
movsb
icebp
testl
popf
dec
in
test
push
push
and
lcall
loop
fnstsw
out
or
and
pushf
or
xor
out
aam
inc
dec
fldt
cmp
push
int
inc
inc
jg
xchg
addr16
cmp
jno
sbb
add
mov
loope
popa
in
add
loopne
inc
in
mov
push
aad
jo
into
or
and
int
fistpl
adc
outsb
in
mov
repz
add
cmp
ds
out
cmp
xchg
dec
inc
push
mov
cmc
je
movsb
das
ljmp
dec
cli
adc
imul
pop
or
mov
pop
pop
cmc
dec
sbb
mov
popf
daa
fcompl
xchg
mov
inc
jmp
inc
lahf
jb
in
rcrb
xchg
dec
mov
push
pop
rol
enter
jg
sub
mov
jae
fistps
cmpsb
and
popf
call
mov
xchg
sahf
cmp
adcb
scas
outsl
xor
adc
cmpsw
or
jae
scas
xchg
pushl
addr16
pop
rorb
push
jecxz
repz
ja
insl
popf
std
lock
das
jle
mov
or
ja
push
and
mov
pop
cmpsb
in
cmpsl
lahf
or
jb
mov
inc
dec
cmp
mov
cmpsl
scas
dec
adc
xorl
leave
dec
push
mov
in
cmpsl
imul
lret
stos
std
pop
outsb
pop
es
aaa
xor
psrad
add
mov
std
ljmp
and
dec
outsl
cli
mov
notl
or
mulps
aad
xor
movsl
jae
cmp
insb
dec
mov
mov
cmp
scas
jo
insl
ds
cmp
mov
xorl
stos
xor
adc
std
jne
out
cmpsb
test
mov
out
mov
jl
jbe
mov
dec
pop
jo
add
xchg
cmp
lcall
add
dec
iret
repz
stos
insb
ja
hlt
jae
jge
leave
add
rolb
xchg
or
xchg
inc
push
mov
mov
out
call
imulb
pushf
jnp
xor
adc
out
imul
imul
adcl
popf
aas
test
adc
arpl
dec
and
fisubs
test
adc
cmp
mov
lret
aaa
call
jne
mov
mov
cmp
jmp
sbb
mov
dec
sub
jge
mov
mov
xor
fidivl
repnz
fidivs
add
or
sub
js
and
cmp
cmp
int
jo
mov
icebp
loop
cmp
pop
shll
push
pop
xor
or
dec
fwait
mov
jb
out
fisubl
and
sub
and
std
adc
push
mov
aam
mov
jae
or
push
jle
mov
iret
ja
leave
fwait
jl
and
repz
in
es
add
shl
jbe
adcb
aas
rcrb
test
xchg
pop
cmpsb
xor
adc
mul
mov
dec
jno
sbb
enter
dec
dec
pop
sahf
shl
jnp
jp
xchg
jo
inc
rorl
xlat
leave
dec
movsl
add
push
mov
cltd
mov
jle
inc
mov
mov
notb
jbe
fwait
mov
je
xor
dec
xchg
ret
hlt
xchg
lret
ror
mov
out
mov
dec
adc
movsl
loop
in
or
push
stc
pop
cmpsl
inc
sbb
xchg
leave
dec
xchg
push
lods
push
sahf
incb
mull
push
add
dec
cwtl
xchg
inc
adcl
lods
test
inc
xchg
popa
inc
rorb
into
jp
inc
movsl
sbb
imul
pop
aaa
pop
sarb
sub
std
fnsave
sti
xchg
cmpsl
inc
scas
js
inc
sarb
sbb
je
adc
enter
sarb
aaa
dec
sbb
out
jne
repz
dec
call
std
or
adc
test
push
cltd
fistps
adc
fcompl
mov
mov
jae
add
jbe
rorb
imul
adc
nop
lret
inc
cli
pop
inc
cmpsl
out
stc
popa
sar
movsb
and
pop
inc
adc
jne
cli
testb
or
fdivrl
push
sbb
lods
or
ret
repnz
mov
int
ret
push
popaw
fisubrs
scas
jae
rorb
test
xor
push
inc
sub
add
mov
or
aam
outsl
bound
fwait
out
jge
sub
and
lret
loop
fnstcw
mov
adc
or
mov
mov
add
fmul
fcmovb
insl
neg
leave
sti
int
das
mov
leave
es
lock
adc
push
sub
and
test
jb
fldt
pop
in
dec
data16
inc
in
xchg
cmpl
mov
popa
mov
inc
push
push
sub
orl
out
cld
ficompl
je
movsl
pop
xor
jne
int
int
adc
or
sbb
lea
daa
gs
clc
jb
clc
push
data16
scas
push
lea
loopne
xchg
shll
inc
fistps
lods
push
subb
push
push
in
test
bnd
mov
jmp
test
insb
dec
int
and
ja
cmp
insb
mov
add
je
loopne
pop
cli
cmpsb
bound
adc
jmp
xchg
mov
sbb
and
sbbl
lcall
adc
mov
mov
repz
fucomp
jne
cltd
add
out
mov
cmp
fs
fsubp
shll
icebp
lods
sbb
xor
pop
in
scas
call
into
sbbl
sbb
incb
adcb
aaa
xor
pop
or
repz
mov
add
mov
or
push
mov
aam
mov
in
call
test
out
dec
pop
mov
imul
int3
inc
push
mov
or
jge
xor
fnsave
mov
mov
dec
add
jns
and
mov
xchg
sub
repz
adc
mov
sbb
aad
cmc
leave
dec
pop
bnd
repz
cli
repz
enter
imul
xlat
cli
xchg
mov
ljmp
inc
add
sub
add
icebp
iret
inc
repnz
inc
andps
add
xchg
and
mov
pusha
mov
lea
mov
stos
xor
sti
xchg
loope
cmp
xchg
rcrb
mov
adcl
or
fucomp
fidivrl
xchg
xor
mov
cltd
push
mov
and
jge
pop
jmp
pusha
jg
js
mov
jo
outsl
pop
mov
movsb
repnz
loop
pop
rorl
adc
push
jae
xor
push
pop
mov
adc
push
fidivs
test
xorb
scas
call
movsl
aad
mov
cli
jmp
mov
loope
ret
fidivs
mov
bound
iret
and
ds
lahf
daa
test
and
sub
inc
das
aaa
adc
lcall
loopne
bound
sub
icebp
test
scas
test
loope
lea
inc
cmp
leave
rcrb
or
sub
push
std
sbb
mov
mov
dec
push
fistps
inc
xchg
loopne
push
push
loop
sub
push
outsl
jo
nop
popa
mov
rolb
je
pop
jbe
lret
fcmovne
loope
sub
jno
movsb
add
sub
mov
xlat
cmp
lret
enter
out
out
mov
push
mov
fldl
sub
int
or
call
add
xchg
mov
push
cld
and
pop
dec
xchg
sbb
gs
lea
adc
sub
mov
adc
xor
inc
xchg
addr16
mov
jge
and
pop
rorl
gs
imulb
dec
lcall
push
dec
lods
daa
into
lcall
lret
pusha
je
inc
sarl
mov
pushf
push
add
add
xor
sub
popa
loopne,pt
les
leave
and
push
andl
je
pop
movsl
pop
push
bound
pop
jle
aad
sbb
mov
sarl
fwait
jge
jecxz
cli
xchg
xor
popa
daa
mov
cmp
xchg
enter
pop
lods
ljmp
adc
xor
dec
lods
lcall
cmp
or
xchg
mov
xor
out
push
into
or
mov
int3
xchg
mov
aad
adc
xchg
cmp
push
xchg
mov
push
aas
fwait
push
mov
in
xchg
adc
mov
dec
inc
push
repnz
in
cs
xchg
mov
push
aad
cltd
pop
adc
xor
aad
pushf
filds
push
fstps
lcall
stos
and
push
das
enter
mov
cmpsb
arpl
push
movsb
lahf
clc
cmp
add
int3
aad
xor
fcmovnu
sbb
jecxz
add
push
xorl
cmp
or
shll
sub
aaa
sbb
lea
in
jl
pop
int3
adc
inc
mov
cmp
out
xor
and
aaa
leave
adc
pop
mov
adc
or
dec
xor
dec
xor
jmp
inc
jle
enter
cmp
jo
jge
and
mov
xor
mov
hlt
cmp
mov
inc
jo
lret
sub
xlat
cmp
icebp
sub
jecxz
repz
push
shr
xor
cmp
lds
sbb
test
mov
push
gs
lret
repz
lea
pop
adc
loop
divb
inc
pop
lods
or
add
pop
frstor
rolb
dec
jg
add
out
loope
dec
push
daa
data16
jecxz
mov
xor
fs
scas
xchg
jbe
decl
test
jp
out
push
adc
div
pop
add
and
test
sbb
fldt
inc
cmp
cld
push
push
daa
mov
in
cmpsl
stos
sbb
incl
shll
sbb
xchg
stos
je
add
inc
xchg
mov
mov
and
pop
filds
push
pop
cmpsb
mov
lods
cmp
bound
bound
pop
dec
mov
mov
insl
iret
mov
mov
xchg
xchg
adc
out
lods
cwtl
or
push
mov
fcmovne
popf
mov
aaa
add
test
dec
xor
lahf
mov
push
jns
dec
mov
fs
aas
sahf
in
mov
mov
mov
mov
stos
xchg
inc
xchg
sti
andl
mov
push
sub
mov
sbbb
or
stos
cwtl
push
les
inc
or
scas
bnd
das
cmc
jmp
add
aam
imul
sbb
mov
mov
sahf
or
fnstenv
push
into
mov
xor
mov
pop
mov
ret
sbb
adc
and
or
or
dec
mov
pusha
mov
push
in
scas
gs
cli
jmp
pushf
test
push
add
cmp
push
sub
pop
mov
add
ficoms
dec
add
test
popa
stc
cld
pop
mov
pop
dec
stos
mov
sub
sub
mov
add
repz
lret
cmp
xchg
lret
cli
out
fcomip
mov
push
sti
add
ja
ja
std
ja
add
aad
repz
dec
jl
enter
mov
popa
sub
fldt
jmp
mov
sti
inc
popl
mov
loope
jb
mov
dec
add
inc
rcrb
les
hlt
push
aad
lcall
popf
inc
subb
or
pop
pop
mov
jl
fcoms
fmulp
xchg
mov
mov
xor
aad
dec
fs
jg
pop
inc
addl
out
sub
adc
repz
fidivrs
xchg
xchg
test
xchg
andb
sub
mov
rcl
sbb
stc
and
stos
push
jo
fsubl
mov
inc
daa
call
cmp
cmpsl
jp
jge
shlb
stos
or
jb
lods
mov
pushf
loop
data16
mov
mov
jbe
push
adcl
clc
aaa
pushf
mov
mov
mov
or
ja
add
inc
cmp
dec
jne
and
popa
and
daa
mov
ja
dec
es
sbb
lock
xchg
jl
mov
ret
cld
ljmp
dec
or
sub
xchg
jg
mov
cltd
fwait
decb
sbb
jb
mov
mov
sub
and
xlat
call
sahf
mov
xchg
lret
cmpb
icebp
add
ficoml
mov
popa
repz
lcall
hlt
push
mov
inc
lods
lock
shll
nop
pop
rorb
stc
cwtl
fs
mov
mov
xchg
std
dec
outsb
cmpsl
mov
into
inc
sbb
mov
jmp
adcb
repz
and
ret
stos
add
outsl
out
add
popa
test
lret
cwtl
or
ja
pushf
and
sbb
add
or
shl
mov
inc
or
in
inc
or
out
cld
cmp
inc
shll
add
pop
or
repnz
mov
lock
test
call
movsb
xchg
decb
mov
xchg
push
outsb
dec
or
lahf
int3
leave
mov
mov
sbb
imul
adc
pop
dec
adc
lcall
lahf
mov
sti
test
sahf
pop
je
imull
or
shrb
sub
xor
jnp
push
xor
mov
data16
add
jb
mov
aas
sti
inc
cmp
in
enter
addr16
cmp
inc
data16
loope
andps
xchg
clc
cmp
rolb
aaa
dec
addb
movsb
rcr
jecxz
mov
loope
mov
in
xor
mov
fsubl
cvttps2pi
repnz
adc
push
insl
sub
cwtl
stc
add
ja
outsb
pop
loop
leave
loope
dec
std
inc
fsubrl
aam
test
jnp,pn
rolb
mov
jae
cld
mov
testb
aas
movzwl
push
loop
sbb
in
test
push
sub
xor
jp
mov
dec
aaa
push
mov
lahf
jg
sbb
inc
sbb
icebp
inc
loop
cmp
jae
in
adc
inc
push
mov
outsb
arpl
aas
lods
add
daa
sub
in
jecxz
xor
sub
stos
daa
sub
jg
je
in
cmp
loopne
or
inc
insl
pop
imul
cld
sar
cmp
out
push
jo
xchg
mov
sbb
mov
or
mov
imul
pop
das
adc
xchg
mov
lods
push
inc
inc
inc
pop
dec
popw
xchg
es
test
in
icebp
mov
in
mov
arpl
fwait
movsb
dec
lahf
inc
mov
or
ss
imul
shlb
arpl
lea
cmp
add
fwait
jb
lock
xor
cmpsb
mov
out
outsb
fwait
jae
mov
mov
dec
mov
nop
arpl
jg
leave
mov
mov
jb
push
pop
testl
int
loopne
div
rorb
jl
push
faddl
mov
mov
fistpl
inc
and
sahf
cltd
not
sbb
dec
xchg
inc
adc
jle
enter
dec
sti
fwait
ds
add
jbe
jo
test
mov
imull
ja
into
cmp
jmp
dec
mov
aam
dec
bound
lds
out
jmp
xorb
adc
es
jge
gs
clc
push
or
adc
xlat
xor
sub
xchg
mov
dec
and
insb
add
pop
cld
jbe
pop
pop
nop
push
sbb
xor
sub
sahf
sbb
push
outsb
pop
inc
sahf
cmpsl
ljmp
jb
jle
sbb
mov
mov
loope
sahf
pop
and
push
dec
mov
dec
mov
cmpl
ret
mov
repnz
cmp
inc
insb
xchg
cmp
push
push
loop
int
push
ljmp
xchg
cs
xchg
popa
jno
hlt
adc
or
loopne
dec
bound
aaa
xchg
adc
imul
and
jne
fisubs
in
ss
xchg
hlt
insl
mov
jle
jne
cmp
inc
cmp
cwtl
je
push
loope
ja
jns
movsl
inc
hlt
inc
fs
cmp
xor
nop
jno
adc
repnz
ljmp
xchg
loop
sub
lret
int3
std
jae
cs
jb
pusha
add
dec
mov
hlt
cmp
add
inc
scas
fcomps
adc
dec
push
cmp
outsl
cmp
rcrb
flds
push
adc
iret
sub
outsl
push
imul
inc
mov
mov
push
sahf
pop
das
pop
lret
or
xor
lds
ja
insb
rclb
jp
or
hlt
inc
repnz
jno
hlt
stos
iret
dec
stc
cmpsb
int
into
ret
ds
addr16
cmp
jb
inc
fdivs
test
sbb
xchg
xchg
and
or
lret
pop
enter
jno
mov
pop
cld
sar
hlt
insb
dec
mov
cmp
mov
aam
xchg
pop
sub
xor
dec
push
nop
pop
ret
jne
cli
enter
addr16
lea
mov
mov
jne
cmp
leave
pop
xor
dec
notb
jle
pop
jecxz
out
xor
jmp
inc
mov
inc
jecxz
in
inc
test
popa
loop
addl
add
jmp
shl
and
dec
xchg
es
mov
and
bound
daa
mov
mov
aad
test
mov
sbb
imul
adc
out
sbb
outsl
lret
push
inc
ret
call
sbb
cs
push
out
test
push
push
dec
lcall
add
cli
lret
insl
mov
push
pop
mov
imul
jmp
inc
xorb
pop
mov
xchg
xchg
cmp
xchg
lret
jle
movsb
loopne
or
and
dec
daa
cmpsb
pandn
test
inc
cmc
jne
dec
stos
int
or
cli
lret
or
sbb
adc
or
out
inc
fdivrp
adc
dec
add
cli
jg
sub
sbb
inc
xchg
mov
mov
dec
fsubrs
jo
pop
addr16
adc
xchg
inc
hlt
push
or
push
icebp
add
ss
jae
jecxz
stos
pop
loope
movsl
xlat
int
loope
hlt
cld
jae
fildl
ret
mov
push
aas
xchg
movsl
mov
repz
mov
add
sbb
push
and
or
cmp
ret
cmpsl
ficompl
and
comiss
or
mov
popa
jge
dec
jecxz
stos
mov
and
out
in
inc
pushf
mov
mov
ret
pop
mov
dec
or
sahf
bound
dec
xchg
or
outsb
or
out
inc
mov
jge
lret
and
popf
mov
pop
jl
stos
in
sarl
sbb
addr16
out
lahf
cwtl
mov
or
pop
push
dec
ljmp
sub
out
pushf
push
pop
jp
sub
inc
sub
pushf
fdivrs
mov
cld
push
mov
arpl
xor
mov
xor
dec
add
and
scas
sti
or
daa
jnp
fists
push
mov
pop
aas
cmp
fists
mov
jge
cmp
cmp
push
sahf
loopne
sub
mov
mov
mov
dec
pop
jo
adc
je
and
jb
pop
ja
fs
add
sub
insb
dec
xlat
int
pop
xor
xlat
in
jg
test
or
sub
scas
test
mov
xor
mov
movsb
cwtl
cltd
sub
mov
xchg
mov
imul
add
mov
push
scas
das
mov
pop
data16
lds
jecxz
stos
sahf
pop
add
dec
jge
xor
dec
push
sub
shr
mov
mov
enter
jecxz
insb
mov
push
mov
push
sub
mov
jno
adc
mov
mov
jne
and
xor
fnstsw
daa
push
iret
fcompl
test
nop
icebp
sub
xor
add
xor
bound
pop
cmp
popf
or
dec
jb
and
stos
outsb
das
push
mov
loop
sbb
and
rep
jl
in
mov
mov
aad
fiadds
jne
into
jl
hlt
pop
shl
das
inc
popa
js
xor
xorb
sub
test
mov
xchg
testb
std
mov
ficomps
mulb
push
dec
mov
xchg
test
xor
repnz
cmc
jns
and
fdivrs
in
in
cmpsl
adcb
inc
loopne
cmp
popa
repnz
cmp
ja
cli
mov
stos
call
jo
and
adc
test
mov
or
pusha
test
mov
mov
das
fdivl
jg
xchg
mov
xchg
mov
loope
arpl
sahf
xchg
sbb
mov
loopne
imul
jne
fstpt
std
sar
imul
rcr
loopne
scas
push
pop
adc
scas
hlt
and
sub
lea
mov
lds
inc
popa
adc
fstl
cmp
mov
or
or
lret
jle
jns
pop
dec
mov
cs
jecxz
test
xchg
ret
daa
fcmovnbe
xchg
add
add
movb
sahf
jnp
sub
add
add
mov
mov
in
mov
ds
mov
sub
pop
outsl
or
add
jbe
sbb
jae
ja
scas
fdiv
and
mov
sbb
sbb
ret
cwtl
xor
mov
push
inc
mov
out
stc
cmp
jmp
imul
dec
or
jmp
mov
das
sub
hlt
sub
mov
push
aas
stos
popf
inc
stos
das
jge
push
cmpsl
inc
inc
adc
shl
in
add
pop
push
dec
outsb
stos
push
mov
aas
mov
inc
jb
outsl
cmpsl
fstpt
clc
pop
es
dec
scas
xchg
fwait
mov
ljmp
xchg
subb
test
xchg
shlb
pop
fadds
mov
jbe
mov
sub
cld
mov
aaa
addr16
aas
sarl
mulb
es
pop
fucomi
inc
into
mov
cltd
mov
mov
mov
dec
fwait
arpl
std
mov
std
les
xchg
jl,pn
daa
pop
sbb
pop
sbb
jp
cmc
loop
add
into
mov
out
add
dec
mov
add
mov
js
and
popa
iret
mov
add
sbb
test
shlb
mov
fs
adc
cmp
xor
lret
sub
jns
int
stc
lret
sahf
movsl
cwtl
adc
sub
jge
jns
xchg
or
daa
mov
lock
subb
jno
lcall
dec
icebp
sbbb
test
insb
xorl
xchg
pop
pop
stos
push
ds
push
arpl
fiadds
jge
inc
mov
ljmp
ret
ljmp
push
mov
jb
lock
aaa
out
push
movsl
sbb
mov
nop
shll
sbb
and
dec
xchg
inc
add
push
jecxz
aaa
sbb
aad
and
arpl
fisttpll
push
adc
and
das
jg
xor
mov
movsl
repz
lods
inc
pop
jo
pop
jecxz
scas
mov
dec
mov
mov
in
or
fsubl
or
enter
sub
es
mov
aad
mov
mov
sbb
sarl
cmp
cld
sub
or
cli
ss
cltd
js
jae
stos
xor
cmp
cwtl
pop
jno
dec
call
add
sbb
push
fldt
push
pop
jmp
adc
popa
pop
or
mov
mov
mov
in
and
cltd
inc
cmp
movsl
jp
data16
cmp
sub
vorpd
fstpl
inc
hlt
inc
int3
dec
dec
jnp
jg
pop
pop
cld
mov
pop
pop
das
or
stc
fsubrl
lret
call
inc
and
and
ss
xorl
push
sub
dec
sbb
stc
mov
jl
sub
test
mov
or
fidivrl
jno
insb
mov
xchg
dec
mov
incl
dec
pushf
shll
add
jae
xor
sbb
mov
inc
out
pop
std
sahf
ret
add
shll
xor
push
fsubl
jne
subb
hlt
in
lods
push
jl
pop
inc
pop
push
mov
enter
movsl
jle
pop
mov
fidivrl
popa
xchg
lods
cmpsl
in
data16
inc
call
je
mov
sbb
jo
push
sub
adc
daa
dec
add
popa
fdivrl
and
flds
jb
or
ret
jle
negl
mov
push
jge
fwait
ret
sbb
pushf
scas
or
std
or
jne
dec
jp
cli
xor
pop
ss
sub
mov
std
mov
jbe
jmp
lret
lcall
push
push
push
sub
pop
xchg
add
fs
leave
jo
cltd
aam
in
sarb
fldl2e
cs
mov
dec
pop
movsb
or
cwtl
out
add
scas
push
negl
aas
sti
arpl
mov
jge
loope
into
pop
push
inc
stos
das
sbb
and
sub
dec
out
pop
ljmp
stc
out
mov
jae
sub
into
and
mov
jp
lea
test
mov
fidivrs
iret
inc
dec
mov
jne
fcompl
ss
pop
lcall
popf
xor
ret
mov
cmp
out
push
push
xchg
iret
mov
push
in
rcr
out
xchg
inc
lahf
mov
psrld
loopne
inc
repnz
push
in
aad
dec
push
insl
pusha
sbb
mov
fcmovb
xchg
mov
cmc
mov
dec
imul
scas
cmp
je
xchg
inc
jp
add
mov
lea
int
xchg
or
js
sbb
cmp
sub
push
lcall
mov
fs
int3
lea
shl
outsb
adc
push
or
sahf
mov
push
rorb
push
sub
or
pop
dec
outsl
mov
cli
fsubrs
add
jge
shlb
in
or
and
loopne
cmp
push
test
out
pop
or
test
dec
bound
ds
dec
outsb
dec
mov
jnp
mov
dec
stos
xor
orl
out
xchg
adcb
out
mov
push
icebp
enter
mov
sbb
pop
call
imul
sar
hlt
test
pop
ja
dec
pop
mov
je
stos
stc
test
dec
cwtl
push
lock
sub
sbb
cmp
movsb
xor
in
mov
sub
or
xor
pop
dec
mov
pop
mov
aad
cs
pop
jns
lock
icebp
lock
dec
movb
outsl
xchg
out
ret
lret
daa
out
testb
or
mov
cltd
add
cli
imul
ss
xchg
sbb
stc
push
fsubr
movsb
sub
jns
pop
rcl
adc
je
sub
scas
jp
ss
pop
daa
fucomi
sahf
xchg
xchg
das
or
imulb
loop
cmp
mov
cli
insb
jmp
test
shll
jne
movsb
lds
jbe
push
das
adc
and
popf
pusha
xor
xchg
add
push
daa
pop
xchg
int3
js
xor
mov
jp
fcompl
jp
mov
into
jecxz
aad
adc
movsl
jecxz
cld
inc
adc
lea
mov
in
aad
sub
std
lahf
hlt
jge
pop
add
insl
aaa
outsl
push
mov
imul
push
clc
fldt
jge
xchg
fldcw
leave
mov
hlt
stos
mov
dec
xor
sub
ficompl
and
jnp,pn
rcr
mov
mov
enter
adc
dec
mov
pusha
jae
push
sbb
jecxz
repz
sub
and
jbe
imul
push
inc
leave
mov
adc
mov
jno
xchg
add
daa
sbb
jo
xor
jmp
push
shrl
mov
out
inc
loope
jb
cmp
sbb
inc
rcll
shll
mov
std
psubusw
xchg
addb
or
cwtl
pop
jecxz
sbb
adc
pop
aaa
int3
mov
push
js
add
vcvtsd2si
jnp
mov
jmp
repnz
data16
incl
add
inc
mov
fmull
iret
pop
jg
xchg
notb
xchg
insb
pop
inc
mov
sbb
add
push
jns
insb
dec
icebp
stc
sahf
xor
jb
jle
and
not
mov
and
mov
shll
movsl
das
mov
call
sarb
mov
mov
xor
dec
or
imul
leave
or
xchg
mov
mov
sbb
icebp
push
pop
mov
cwtl
xchg
push
or
divl
fcoms
push
jle
call
jb
fisubl
dec
sub
and
mulb
lcall
mov
js
test
mov
push
rcrl
sub
jg
js
xlat
jnp
ret
mov
mov
popa
mov
std
mov
push
cltd
dec
xor
mov
sar
sub
mov
imul
add
pop
mov
or
pop
fsub
repz
aam
or
xchg
inc
cmp
sbb
add
ds
inc
flds
fsubr
sub
je
jns
mov
xchg
sub
mov
mov
adc
cmp
lods
jno
int
push
xlat
sbb
dec
cwtl
out
clc
mov
aaa
popf
mov
movb
pop
cmc
mov
aam
pop
add
sub
sahf
pop
or
mov
pop
sub
jl
lock
mov
inc
sbb
ja
adc
daa
inc
rep
test
negl
jnp
jb
adcl
nop
cmp
sahf
icebp
fisubl
mov
or
mov
fbld
or
das
jecxz
out
inc
scas
dec
or
xchg
cmp
jp
fldl
outsb
push
dec
mov
decb
mov
jb
sub
xor
aaa
test
cltd
sarb
bswap
imul
ljmp
mov
loope,pn
mov
inc
ret
mov
add
mov
bound
mov
or
int3
mov
dec
sahf
jg
jg
cwtl
lea
insb
push
mov
les
mov
mov
arpl
xor
test
xor
jp
lods
popf
xchg
push
in
push
dec
fcoml
mov
pop
cmp
call
mov
dec
mov
in
mov
push
test
pop
cmp
push
xlat
fwait
daa
add
popa
cs
dec
mov
mov
sbb
fcomp
inc
add
fildl
pop
xor
or
jnp
lahf
jg
nop
and
fisubrl
shll
cmp
mov
adc
mov
xor
xor
xchg
jecxz
sarl
int3
js
add
mov
add
in
or
loop
jno
cli
mov
call
jmp
lcall
aas
push
ja
cmp
sbb
inc
pop
outsb
int
loop
fwait
pop
xor
mov
inc
das
imul
repnz
cmpsl
xchg
popa
jbe
fwait
popf
add
dec
out
cwtl
xchg
cltd
shrb
mov
mov
pushl
cmp
sub
mov
pop
xor
xchg
pop
test
bound
mov
fisubs
addr16
shl
je
xchg
adc
shlb
xchg
popf
or
in
xchg
push
inc
dec
fcoml
dec
jmp
loop
dec
adc
adc
xchg
pop
fcmove
mov
add
or
xchg
add
cmpsb
xchg
lock
lods
adc
pushf
xor
xlat
push
cld
pushf
inc
sbb
push
sahf
mov
leave
jp
loopne
push
into
test
dec
aad
adc
loopne
popa
mov
pop
int
cwtl
cmc
mov
push
pop
mov
rorb
rclb
test
insb
int
fsubrl
jp
xchg
cmp
hlt
dec
fdivl
int
inc
jmp
mov
add
dec
icebp
xchg
inc
cmpsb
outsl
xabort
adc
out
xor
dec
es
push
or
sub
cmpsb
pop
cmp
sub
shll
mov
xor
clc
mov
push
pop
mov
loopne
push
cmp
xor
inc
jns
add
mov
pop
daa
pusha
into
sbb
loop
mov
rcrl
icebp
fisubrl
stos
and
shrl
push
call
aad
and
mov
sub
repz
fcoms
sbb
sbb
fdivr
popf
jmp
or
pop
mov
jmp
mov
sarb
out
mov
sub
or
mov
imul
lret
mov
or
loopne
addb
das
mov
dec
mov
fbld
mov
fidivl
jnp
push
test
dec
cmpsb
and
lds
mov
or
jo
fisttpl
mov
sub
inc
cs
fildl
sti
cs
addr16
in
es
pop
icebp
out
adc
mov
dec
lahf
inc
dec
inc
sub
or
cwtl
add
rcrl
pop
xor
sti
jmp
test
lock
jp
push
push
push
xor
js
adc
push
mov
mov
and
xor
pop
sub
mov
mov
pop
ret
sub
jge
cld
push
mov
pcmpeqw
std
mov
arpl
pusha
push
scas
rolb
loop
inc
cmp
and
inc
and
add
icebp
cmp
cmp
shl
enter
add
sahf
gs
adc
aad
and
add
daa
js
mov
aam
ss
sub
mov
jecxz
mov
out
loope
cltd
inc
pop
mov
je
adc
js
xor
mov
jo
jno
aas
push
jae
and
cli
push
imul
sbb
mov
popa
jns
push
inc
inc
mov
inc
and
dec
xchg
dec
xchg
cmp
sub
out
cld
sahf
xlat
jp
movsb
sbb
push
int
and
adc
pop
andb
push
lahf
mov
xor
iret
xor
mov
fbstp
jno
adc
mov
xor
or
lods
into
push
jmp
repnz
mov
pop
xchg
adc
push
out
sbb
sub
mov
cli
pop
test
ss
lock
loope
pop
inc
mov
lahf
mov
mov
pop
into
ds
cmpsb
or
ljmp
in
jo
xchg
aaa
mov
mov
stos
orl
int
ja
loope
mov
and
mov
inc
shrb
mov
push
pop
popf
or
es
inc
push
push
mov
pop
ja
cli
jo
xor
push
jmp
adc
movsb
daa
fwait
jne
xor
sbb
aas
aas
ror
push
jge
and
pop
mov
and
jo
or
loop
call
in
mov
rorl
and
cli
mov
fisttps
lret
cmp
stos
jmp
mov
int
sbb
jbe
js
add
cmpsl
ss
dec
mov
loope
sub
idivb
sub
es
adc
loopne
push
xchg
dec
sti
out
in
inc
pop
push
fdivs
imul
jmp
into
xlat
lahf
xor
cmp
testl
jne
xchg
pusha
mov
subl
fldl
lret
jbe
andl
mov
sbb
adc
rcrb
cmp
mov
xlat
jbe
adc
mov
cwtl
adc
cld
idiv
and
sbb
adc
and
sub
das
and
aam
and
xor
fs
fld
mov
lods
pusha
fldlg2
jbe
lods
stos
lret
sub
fs
mov
test
stos
test
cmp
pop
popf
popa
dec
jne
repnz
cmp
outsb
insl
je
pop
push
jg
adc
mov
xchg
jle
loopne
push
cld
into
mov
pop
das
and
and
pop
imul
add
dec
mov
lret
xlat
mov
fstl
je
add
mov
call
cmpsb
xchg
or
sbb
lret
jnp
and
pop
push
or
lret
and
mov
lods
adc
pop
loope
rclb
xor
jl
dec
scas
mov
notb
pop
mov
movsb
sbb
push
dec
pop
cld
data16
sbb
mov
pop
mov
add
lcall
xchg
pop
orb
mov
inc
data16
cmc
icebp
or
pop
mov
enter
push
xchg
js
or
xchg
mov
mov
push
push
xor
jg
enter
mov
cmpsl
cmp
mov
add
xchg
push
xlat
stos
sub
in
xchg
rcr
xchg
lock
mov
arpl
xor
jbe
or
mov
icebp
jb
pop
rcll
fwait
dec
sti
cmp
js
push
or
lcall
repnz
rcl
and
bound
loopne
in
ret
stos
adc
std
add
xor
orb
aad
jb
push
adcl
icebp
out
ds
fldenv
nop
stc
dec
js
addl
pop
outsb
adc
leave
and
inc
adc
mov
jne
add
loope
push
mov
pop
sahf
loope
out
jns
push
repz
cs
loopne
xchg
sbb
jb
movsb
mov
inc
aaa
push
and
dec
xlat
jge
divb
mov
xor
js
ret
repz
xor
lods
ds
sbb
sbb
rorl
pop
sub
rcl
rolb
add
ja
mov
fs
xchg
jbe
sub
push
xorl
mov
push
lahf
jmp
xchg
mov
adc
test
xchg
cmp
lds
fdivrs
add
out
pop
fisubrs
add
inc
jae
test
sbb
adc
std
adc
xorb
jo
sub
decb
inc
pop
push
int3
lcall
dec
adc
and
in
and
stc
push
mov
cmp
add
fisttpl
pushf
or
repz
fistpl
push
mov
xchg
scas
cmp
push
push
jecxz
mov
roll
jb
push
sbb
sbb
and
sahf
icebp
out
lahf
mov
xor
cmpsb
mov
data16
aaa
lret
jecxz
pushf
sub
xchg
xchg
cld
fistpll
add
mov
shl
and
push
dec
pop
adc
mov
xchg
mov
inc
jbe
xchg
fstpt
in
in
mov
popf
mov
shlb
lods
roll
int
cmp
dec
sub
outsl
nop
xchg
and
imul
arpl
loop
fnstenv
dec
cltd
outsb
dec
xchg
out
lcall
lcall
mov
mov
aaa
loope
mov
int
aas
jbe
pop
sub
cmp
out
pop
and
dec
lret
xor
ds
inc
mov
daa
dec
out
pop
mov
stos
xchg
es
inc
mov
sahf
in
xchg
addr16
cmpsb
icebp
cmpb
push
mov
adc
dec
je
loop
mov
and
push
fnstcw
call
xchg
or
lods
pop
mov
inc
sbb
mov
sbb
int
ret
adc
fldt
cmpsb
pop
aas
pop
out
mov
fs
push
bound
sbb
fwait
out
ror
adc
cmp
mov
mov
xor
sbb
sbb
cmpsb
addr16
scas
leave
add
loope
dec
nop
inc
mov
and
xchg
mov
lods
xor
lea
repz
pop
test
pop
out
jl
lea
movaps
das
or
pop
push
push
jbe
xor
ret
das
add
repz
push
inc
inc
bound
out
insb
mov
imul
push
vmovntdq
test
rol
out
push
lds
mov
jmp
pop
gs
cs
mov
xchg
mov
shll
je
push
and
scas
mov
ljmp
ss
stc
push
daa
sub
or
dec
jne
or
push
push
rclb
fmul
xor
push
and
or
outsl
sahf
adc
test
pop
js
sbb
ss
xchg
cltd
push
pop
adc
dec
pop
add
idivl
pop
or
jecxz
daa
ds
or
xlat
push
mov
andl
clc
fisubrl
daa
xchg
ret
lahf
jmp
xor
inc
ret
and
je
mov
dec
mov
mov
xchg
cmp
jne
cmpsl
jl
xchg
lea
aam
mov
push
ss
push
fs
and
popa
fldcw
pop
pop
lock
and
sti
inc
adc
push
jle
adc
test
loopne
aad
fmull
mov
jb
bnd
cmp
push
inc
imul
inc
cmp
sub
mov
sbb
push
gs
jne
loop
dec
sub
jbe
mov
insb
pop
sti
je
jmp
mov
imul
fsub
xchg
dec
outsl
in
lock
fs
out
sbb
ficoml
pop
in
hlt
lret
mov
ret
imul
pop
stos
ljmp
adcl
push
mov
push
shl
sub
ja
xor
sbb
lods
xchg
dec
test
sbb
add
rorl
cmp
dec
sbb
push
mov
mov
xchg
sbb
push
stos
mov
fwait
pop
cmp
lods
mov
loopne
in
daa
or
inc
icebp
xchg
mov
and
sub
pop
dec
leave
aad
fdivs
loopne
xchg
js
lret
inc
loope
push
shrb
int3
repnz
push
loope
push
aad
and
adc
sub
cmp
stos
pusha
rorb
xchg
dec
and
test
add
shlb
push
call
dec
lock
mov
out
add
loope
inc
fisubl
inc
cmp
mov
inc
in
xchg
add
and
mov
jnp
incb
cmp
cmp
lods
pop
fwait
jne
mov
cmp
mov
mov
enter
mov
or
sbb
sub
xchg
out
sbb
loopne
add
adc
testl
out
ficompl
sbb
test
clc
or
jae
cmpb
add
mov
les
sub
shrl
mov
jp
dec
mov
jo
and
sahf
mov
aaa
cld
es
addb
jnp
shl
sub
add
xchg
mov
stc
add
scas
fdiv
repz
xchg
in
insb
ret
in
jle
jbe
pop
mov
mov
sbb
leave
scas
or
mov
inc
iret
fidivl
fs
sahf
loop
imul
mov
xchg
shll
xor
lock
dec
in
aam
jg
cmp
es
pusha
dec
data16
xchg
pop
push
cmp
and
and
lahf
mov
sbb
cmc
mov
lea
pop
add
repnz
sub
mov
shrb
movsl
ds
xor
hlt
xor
int3
enter
je
sbb
dec
sarl
inc
fadds
call
mov
sbb
rcrb
pop
cmpsl
xor
add
lahf
movsb
and
push
push
push
daa
fs
scas
lods
dec
loopne
sub
push
subl
xchg
xor
mov
loop
jae
and
jnp
jne
and
hlt
test
inc
mov
push
mov
inc
aam
jecxz
mov
cmp
and
pop
test
xchg
jle
pop
push
outsb
push
lods
pop
fs
or
sub
jne
dec
cmpsl
movsl
mov
mov
ds
data16
movsl
adc
xchg
sarl
fsubrl
jns
sub
xor
sbb
fdiv
and
push
je
hlt
xchg
int
xchg
fcmovne
arpl
orl
pop
mov
imulb
rep
mov
inc
xor
dec
leave
rcr
sub
dec
ret
push
jmp
fcomp
mov
jle
xlat
inc
jo
imul
sub
xorl
inc
dec
test
lods
pop
and
nop
cmp
hlt
rolb
lods
test
sar
jno
inc
push
js
in
shll
sub
test
inc
fistpl
out
sbb
inc
test
adc
arpl
push
es
lcall
jmp
cmp
or
stc
mov
or
add
inc
mov
sub
xchg
lods
xchg
xlat
aas
cmpsb
push
cmp
sbb
pop
movsb
sbb
add
scas
shlb
mov
inc
adc
popf
mov
push
and
shr
adc
dec
cmc
xchg
int3
pop
dec
and
jns
mov
lods
sub
push
cld
leave
sti
in
dec
lahf
sahf
sbb
and
lcall
cwtl
inc
sub
in
lds
mov
sbb
mov
sbb
mov
push
hlt
push
pop
and
cmpsb
push
xchg
leave
dec
hlt
movl
test
jbe
sarb
cli
xor
int3
and
cwtl
loopne
lods
icebp
je
cmp
mov
lods
sub
or
lcall
and
xchg
jnp
mov
adcb
fstpt
das
pop
rcll
fstpl
shl
push
add
fistpl
xchg
sbb
and
xlat
xor
setb
gs
xchg
jbe
push
xchg
or
mov
ret
jg
popa
xor
les
das
out
pop
cltd
mov
cmp
out
inc
push
or
aad
fwait
negb
ljmp
jp
sahf
push
ljmp
ret
lods
jg
hlt
or
adc
adc
pop
out
clc
lahf
adc
in
cmp
data16
or
adc
rcr
out
fwait
push
pop
into
test
inc
cmc
or
adc
mov
sarb
imull
mov
sti
cmp
fwait
test
rorb
mov
push
or
sub
mov
mov
test
mov
cwtl
sahf
fstl
jae
add
cmp
cmp
stos
out
sbb
xchg
scas
push
add
mov
popf
push
ds
stos
jge
rolb
lcall
push
cmp
inc
je
cmp
xchg
lret
and
mov
outsb
mov
addr16
outsl
mov
pop
sub
add
dec
sbb
movb
adc
sahf
jae
mov
sahf
insb
jns
inc
pusha
mov
loope
leave
push
or
sbb
xor
and
or
insl
push
jmp
les
movsl
repz
xchg
and
int3
add
jae
js
jns
jmp
lock
cltd
mov
mov
xchg
pop
idivb
mov
lock
jns
das
fisttpll
loope
fldt
sbb
in
inc
test
scas
das
fnsave
repz
iret
lods
mov
add
ds
adc
rorb
mov
mov
dec
mov
sti
stos
or
enter
mov
mov
cmp
popa
lods
cmp
mov
xor
fs
lcall
inc
jbe
icebp
mov
and
mov
insb
js
push
outsl
popa
gs
push
orl
dec
in
inc
nop
ss
jle
sbb
dec
sub
in
sbb
stos
les
ds
adc
and
mov
pushf
add
out
leave
sbb
pop
cmp
mov
adcb
xchg
ljmp
push
data16
pop
push
out
sub
mov
shlb
movsb
data16
dec
in
bound
out
lods
pop
mov
cmp
xchg
xchg
loop
int3
fwait
push
test
push
push
sbb
xor
push
jecxz
mov
dec
sahf
cmp
or
cli
and
mov
xchg
jae
jl
xchg
cltd
adc
in
aas
into
xchg
dec
jae
out
stos
mov
clc
mov
int
fistps
movb
sub
jbe
fsubrl
out
jmp
bnd
inc
insb
popa
jns
mov
pop
or
dec
test
pop
add
scas
popf
mov
pop
inc
das
loope
push
adc
jmp
call
mov
shlb
adc
pop
jl
add
mov
fwait
lds
dec
adc
dec
cmp
nop
cmc
bound
ljmp
std
add
movsl
in
dec
insb
lret
jbe
cltd
js
lret
pop
lret
xor
repz
cmp
movb
dec
mov
lods
data16
cmpsb
jno
adc
adc
and
xchg
insl
cmp
pop
lea
in
shrl
adc
mov
inc
gs
jge
cmp
out
pop
addr16
fists
outsl
lret
inc
sbb
push
sbb
inc
lds
add
rcrb
mov
xlat
xchg
dec
lret
jnp
nop
mov
push
mov
xor
mov
mov
dec
mov
cmp
clc
sub
push
repnz
sub
mov
cmpsl
pusha
jno
stos
cmc
sbb
jnp
jb
pusha
fs
and
dec
xor
loope
or
imul
outsb
mov
out
enter
fwait
or
aas
jo
xchg
iret
xchg
dec
je
outsb
movsl
pop
mov
sbbl
mov
jae
flds
mov
inc
add
or
xor
mov
adc
adc
stos
adc
popf
sbb
mov
xchg
push
nop
pop
mov
xchg
test
sbb
sbb
xchg
js
mov
and
jns
or
jge
jno
cltd
movsl
out
mov
inc
and
push
xchg
sti
mov
bound
dec
lock
ljmp
popf
or
cmpsb
dec
cmp
jae
sub
out
vpcomuq
sti
push
lret
in
inc
xchg
push
fdivl
or
add
out
test
jne
add
out
bound
shl
repz
mov
xadd
outsl
loope
xchg
test
cli
insl
sbb
push
sbb
int
pop
dec
clc
jae
fiadds
aaa
sar
orb
mov
mov
sbb
mov
mov
xchg
mov
in
pop
sbb
dec
loope
add
jg
lods
dec
or
aam
sub
cltd
cmpb
xor
ds
ret
enter
notl
jge
adc
js
std
lret
sar
aad
jecxz
andb
roll
test
movsb
sbb
lahf
ss
sarl
out
std
call
fdivrs
adc
je
aaa
and
cmp
aad
or
in
add
cwtl
shll
dec
mov
jl
out
negb
cmc
xor
jae
in
jge
add
pop
popf
and
inc
sub
imulb
aam
cmp
xor
rcrb
sbb
rorl
push
push
fldenv
sub
frstor
add
shrl
clc
test
jne
fs
repnz
dec
or
aaa
fidivrs
sub
lds
pop
jmp
outsb
lcall
inc
push
add
and
sub
popa
xlat
arpl
jne,pt
arpl
dec
in
aam
popa
nop
cmc
adc
cmp
out
iret
imul
imul
mov
or
fwait
add
pop
cmp
dec
shr
xchg
adc
xor
jmp
scas
mov
sbb
inc
movsb
add
adc
aam
xchg
mov
push
fsubrp
fs
jnp
scas
test
or
add
dec
inc
mov
je
jle
or
push
adc
jl
loopne
mov
mov
jmp
add
cmpsl
dec
cmp
push
jl
xchg
cmp
ja
popf
into
xchg
loopne
sbb
jge
push
mov
outsl
nop
jnp
mov
outsb
imul
ffreep
das
ds
jle
out
cmp
dec
mov
sub
cmpsl
xchg
sbb
cwtl
dec
fistpl
cmpsb
sub
mov
pop
mov
loope
dec
nop
lret
mov
sub
mulb
cmp
shrb
hlt
ljmp
mov
dec
daa
inc
push
rorl
mov
clc
or
cmp
and
arpl
mov
hlt
ja
xor
sub
dec
xchg
into
jae
inc
das
loopne
mov
pop
test
enter
mov
add
lcall
xchg
repz
sarb
out
xor
xchg
ljmp
mov
push
js
fdivr
inc
jecxz
jp
sub
adc
sub
add
insb
loop
xchg
pop
dec
cmpsl
pop
mov
test
scas
stos
xor
ds
jecxz
dec
add
sub
outsl
mull
ret
mov
inc
es
insl
int
leave
addb
aas
sub
std
push
ret
jns
xor
sbb
je
xchg
jno
cwtl
pop
sbb
jb
mov
pop
pop
mov
cmpsl
mov
dec
hlt
xchg
or
shr
mov
dec
loopne
sbb
insl
lds
pop
jns
jge
test
push
lcall
mov
loope
enter
out
outsl
jnp
dec
jp
into
or
adc
jo
mov
daa
mov
xchg
add
int3
mov
sbb
dec
daa
xchg
adc
cld
imull
xchg
neg
testb
sub
mov
adcl
mov
lret
add
lea
hlt
jae
cmc
xor
mov
mov
push
cmp
cs
int
pop
mov
insb
or
mulb
adc
scas
dec
push
mov
add
inc
leave
fisttps
cmp
mov
inc
mov
dec
les
testb
cmp
pushf
dec
push
stos
popa
addr16
xchg
inc
cltd
mov
lds
cld
mov
push
adc
or
cld
cmp
add
fidivrl
jge
pusha
sbb
mov
adc
lret
paddusb
push
jl
dec
cmp
add
cmpsl
mov
lret
adc
push
scas
mov
filds
std
in
sbb
sbb
imul
sub
outsb
dec
add
notb
inc
dec
flds
sbb
xchg
cmp
xchg
or
lahf
sbb
and
sbb
inc
push
or
or
push
sbb
out
and
adcl
jno
popa
insb
sbb
fstpt
int
mov
cmc
out
cmp
or
xor
outsl
sbb
dec
sbbl
and
mov
jle
in
xor
xchg
mov
jl
lahf
dec
xchg
movsb
scas
gs
adc
fcomps
sbb
test
loopne
data16
mov
sub
mov
les
sbb
fistps
fists
xchg
fistps
add
adc
cmp
mov
arpl
fdiv
mov
or
fwait
clc
mul
add
in
pop
dec
hlt
jg
rcrb
cmp
clc
and
xlat
xchg
and
cs
cmp
scas
xchg
repnz
inc
and
pop
pop
add
das
das
mov
pop
xchg
sbb
pop
mov
mov
sub
push
adc
xchg
leave
or
pop
add
in
stc
mov
mov
cmp
jbe
adc
imul
imul
test
ficomps
push
jmp
pop
adc
std
dec
dec
les
mov
ljmp
stos
dec
sub
arpl
push
imul
test
sub
int3
adc
push
mov
das
ja
ds
xchg
mov
jg
sahf
inc
shlb
add
add
jle
cmp
lret
xlat
sbb
mov
xchg
xor
xor
jg
or
hlt
inc
inc
pop
adc
incl
jae
mov
push
mov
cmp
adc
pop
nop
xor
push
pop
sbb
mov
push
or
out
mov
cmp
dec
nop
xchg
fisttps
mov
jmp
js
popf
jbe
mov
jbe
sub
es
sarl
mov
jne
mov
in
pop
inc
mov
into
push
or
data16
icebp
lcall
xor
or
arpl
sub
cmp
xchg
arpl
add
fcomps
mov
int
mov
and
ret
jns
mov
loope
cwtl
leave
pop
imulb
inc
imul
dec
inc
and
mov
leave
mov
or
stc
sbb
add
dec
loope
leave
jns
sbb
mov
mov
or
fs
mov
test
loop
insb
shrl
add
orb
add
aam
cmc
adc
cmpsb
push
dec
mov
mov
push
mov
push
hlt
push
push
clc
movsl
jne
adc
cltd
test
jnp
gs
adc
movsl
inc
mov
mov
cld
adc
std
fsubrl
out
mov
mov
leave
adc
fs
scas
pop
xchg
imul
jnp
and
mov
aas
push
imul
leave
shl
mov
arpl
adc
lret
test
cli
addr16
push
mov
enter
call
push
jp
ficomps
add
or
and
in
je
dec
xchg
xorl
jo
sub
inc
mov
mov
or
mov
das
adc
aaa
dec
movsl
lcall
nop
and
inc
fldlg2
or
out
mov
pop
mov
sub
push
or
lahf
adc
imul
xor
ja
dec
adc
mov
pcmpeqb
sahf
sub
jae
les
lret
mov
cwtl
ljmp
jmp
lds
adc
mov
aam
insb
inc
cmp
hlt
sub
aaa
fs
ljmp
xchg
adc
repz
xor
xlat
cs
test
mov
sbb
xchg
gs
repnz
fisttpl
ret
mov
stc
and
fcmovnu
int
dec
mov
loopne
out
jb
push
inc
call
xor
dec
and
add
push
into
or
mov
pushf
dec
sahf
jp
cmpsl
cltd
enter
mov
push
movsb
mov
test
jg
push
inc
sahf
rcrb
mov
mov
les
jbe
pop
xor
movsl
pop
xlat
daa
push
cmp
inc
mov
pusha
fsubrp
or
loope
sbb
js
popf
insl
mov
and
int
pop
stos
pop
inc
sub
mov
push
inc
ljmp
shl
enter
jge
pop
pusha
movzwl
jecxz
cli
push
lret
mov
fsubr
lods
icebp
clc
jmp
leave
frstor
lcall
jp
lods
pop
fwait
popl
push
mov
mov
loop
push
mov
aas
jecxz
push
flds
shll
add
pusha
lahf
push
sbb
in
daa
mov
sub
mov
xorb
mov
xchg
clc
adc
scas
cmp
push
cmp
js
arpl
loopne
inc
cmp
hlt
mov
scas
xor
daa
add
jmp
out
addb
or
insl
repz
mov
insl
mov
stc
or
rcr
mov
mov
and
xor
sti
aam
xor
cmp
fs
loop
cmpsb
pop
orl
adc
mov
std
enter
mov
adc
xchg
mov
mov
sbb
aad
mov
sahf
test
dec
sbb
stos
cmpsb
sbb
leave
push
and
jle
lds
sbb
popa
les
mov
sahf
popf
icebp
mov
jmp
lret
dec
sahf
ret
add
shl
push
pop
ja
cmp
ljmp
in
sarl
orb
push
sub
pop
sbb
sbb
jl
mov
sub
fmul
pop
cli
add
fldcw
sbb
xor
pmuludq
fcompl
sub
pop
repz
jb
mov
sbb
out
add
clc
out
lea
mov
icebp
add
jl
in
repnz
int3
mov
mov
mov
jge
xchg
add
xor
pusha
and
je
daa
mov
inc
lods
mov
imul
mov
or
cmc
adc
aaa
sbb
lahf
stos
popf
in
push
repnz
dec
pop
and
int3
adc
xor
sahf
cmp
popf
insb
stos
push
inc
xlat
push
movsb
fcom
insl
repz
pop
addr16
jg
xor
dec
aas
cwtl
aam
outsl
data16
ret
notl
add
in
in
popf
mov
cmp
mov
sbb
inc
sub
mov
mov
push
pop
mov
pop
je
cmp
int3
dec
mov
stos
orb
inc
outsb
jns
sub
add
jne
das
xor
adc
inc
pusha
repnz
dec
outsb
dec
jnp
shll
sub
add
das
jg
xor
mov
sti
jge
ret
inc
add
push
jmp
jns
out
adc
jle
jl
xchg
incb
test
inc
jg
or
dec
adc
jecxz
in
out
mov
xchg
or
shl
xchg
cltd
mov
rep
pop
scas
mov
clc
cmp
adc
and
aam
adc
pushf
repnz
inc
xlat
xor
sub
pop
shrb
pop
pop
push
jo
rcrb
push
push
xor
ret
nop
sbb
xor
in
dec
stc
jo
mov
sub
mov
adc
lahf
adc
and
in
mov
jmp
add
and
xchg
sub
das
cmp
pop
cmpsl
push
js
mov
xchg
pop
add
fisubrs
adc
sbb
xchg
pop
loopne
clc
jb
jmp
gs
cmc
lds
jno
mov
cmp
stc
sbb
roll
in
jecxz
cmp
jb
insl
and
pop
js
data16
mov
insb
roll
jno
adc
mov
dec
aad
push
negl
into
popf
mov
mov
in
into
mov
lea
sub
adc
push
pushf
notl
pop
in
dec
cmp
sub
cld
adc
and
mov
ljmp
xchg
adc
xchg
popf
mov
bound
xchg
push
cmp
cmp
out
pop
xor
xchg
stos
popa
inc
int3
push
aaa
sub
data16
add
push
or
sbb
in
repnz
inc
fs
ret
sub
jmp
push
push
xor
pop
loope
pop
dec
cs
mov
fwait
insb
fs
add
dec
push
dec
data16
xor
mov
les
rorl
shl
mov
xchg
popa
inc
lahf
push
sbb
imul
xlat
mov
mov
lds
cmp
andb
ss
push
aam
jp
insb
fcmovbe
mov
inc
xchg
xchg
sahf
mov
jl
jg
enter
mov
pop
xor
dec
mov
mov
loop
dec
hlt
add
add
in
or
mov
orl
arpl
fnsave
xchg
ret
cs
enter
addr16
push
loope
cmp
inc
push
out
pop
xchg
sub
dec
int
scas
in
xlat
push
out
in
popf
ja
push
xchg
sbbb
stc
aas
xchg
fstpt
pop
pop
fldcw
ds
int3
insl
ret
xor
lcall
js
repz
in
or
and
xchg
mov
or
pop
dec
mov
jne
std
fucompp
stc
stc
bound
aad
pop
stos
pusha
add
das
fdivr
loope
mov
mov
push
lds
cmpsl
popl
fdivl
insl
jmp
add
xor
adc
cmp
mov
and
clc
popf
and
xchg
jecxz
dec
lods
jbe
out
jb
mov
rclb
add
scas
sub
gs
xor
pop
cmp
and
mov
sub
mov
xchg
mov
inc
push
and
movsb
ja
or
inc
push
aam
or
mov
push
imul
xchg
cmp
call
dec
popa
mov
mov
xorl
push
xchg
movsl
xor
mov
lcall
push
push
lods
cmp
add
sub
sbb
xor
test
cmpsl
adc
pop
and
cld
bound
aam
ljmp
ret
inc
stos
push
xchg
lret
pop
sub
mov
shl
mov
or
test
push
jno
adc
mov
fiaddl
inc
sub
sbb
pop
xchg
int
fstpl
sub
mov
jg
in
pop
ja
lea
cmp
jbe
int3
insb
add
push
aad
and
or
loopne
xchg
mov
pusha
es
push
pop
mov
mov
add
dec
mov
clc
jnp
nop
adc
fadds
lea
mov
addr16
inc
in
or
cs
shll
inc
ljmp
push
fwait
dec
sbb
adc
push
sbb
push
mov
into
test
xlat
xchg
adc
cltd
jge
dec
es
bound
in
out
and
mov
sbb
push
jnp
jge
inc
inc
fildl
rcrb
push
cmp
add
outsb
cs
jb
ret
mov
leave
pop
cmpsb
cld
adc
jmp
xorl
lret
loope
outsl
pop
lea
xchg
and
sub
dec
mov
enter
jne
pushf
cmc
xor
or
cmp
pop
stos
cmpsb
mov
mov
sbb
out
jecxz
cmpl
cmp
inc
les
jmp
aad
rorl
mov
scas
push
xchg
test
xchg
frstor
mul
movsl
pop
scas
push
jg
mov
xchg
inc
push
inc
ds
je
les
cmp
sub
mov
dec
add
jmp
popa
mov
cmpsl
xchg
inc
sbb
xchg
jecxz
and
cmpb
inc
mov
mov
stos
mov
test
mov
jge
push
fs
aad
je
or
fldt
mov
stos
incl
dec
pop
outsl
popa
xor
nop
push
ljmp
inc
arpl
icebp
sub
adc
mov
mov
add
int3
mov
test
rcrb
cmp
inc
ret
xorb
add
push
aad
lods
sub
in
dec
je
pop
push
mov
xchg
popf
fsubl
enter
dec
push
add
aam
cmp
inc
mov
aas
pop
pushl
push
jno
pop
es
lahf
cmp
cs
jl
fisubrs
jnp
rcrl
fcmovbe
shrb
loopne
std
inc
out
fmuls
dec
push
cmpsb
cmp
xor
sub
jno
push
lcall
pop
stos
test
mov
lods
sarb
push
cmp
pusha
in
outsb
jmp
cld
ret
dec
add
rclb
xchg
push
dec
and
loop
out
push
add
lret
test
pop
loop
imul
int3
mov
jp
arpl
or
or
jbe
mov
mov
ds
daa
pop
stos
mov
cwtl
ror
pop
and
data16
cmpsb
and
pop
pop
ret
cwtl
pop
cmp
sbb
jecxz
jo
adc
pop
fs
cmp
push
aad
mov
loop
repnz
nop
mov
or
adc
add
into
xchg
shrl
pop
and
mov
pop
mov
adc
xchg
jecxz
inc
pop
mov
or
es
lods
cmp
mov
dec
pop
outsb
push
jnp
adc
rolb
jbe
xchg
mov
dec
fisubl
inc
dec
mov
pop
lsl
ds
out
and
mov
and
jl
rorl
into
jno
cmp
jp
scas
in
movmskps
jno
sub
movsb
pusha
lret
push
sub
hlt
xchg
pop
mov
into
stc
xor
sbb
js
cmc
mov
lahf
adc
inc
cmp
mov
pop
xor
xchg
inc
mov
ds
fnsave
push
sar
jo
lock
adc
push
push
lds
leave
and
inc
mov
int3
push
mov
out
sbb
movsl
popf
xchg
and
movsl
sub
add
push
mov
pushf
pop
push
push
sbb
xchg
iret
repz
push
loope
mov
mov
jecxz
mov
outsb
jbe
call
xchg
push
cltd
fstl
sarb
mov
cmp
js
add
and
mov
scas
xlat
pop
xchg
xchg
adc
or
fbstp
or
inc
push
cmp
jecxz
mov
inc
in
jne
and
cmp
sbb
int
add
and
cmpsb
and
add
inc
sahf
and
clc
sbb
xchg
dec
xor
xor
adc
sub
cs
out
sub
lret
push
into
clc
scas
push
cmp
mov
sbb
cmp
inc
cltd
out
xchg
rorl
std
jge
leave
jae
cmp
xchg
cmp
mov
dec
int
pushf
loopne
mov
add
mov
mov
push
dec
es
or
movsb
enter
andl
inc
sbb
and
mov
mov
sub
cli
push
cmpsl
lea
iret
sub
push
push
cmpsl
sub
out
dec
add
inc
dec
cli
test
and
addr16
dec
shrl
ja
dec
call
sbb
xchg
mov
filds
insb
push
out
adc
loopne
lret
jno
adc
xlat
mov
mov
sub
test
les
inc
rcrb
scas
add
or
out
mov
inc
sub
into
lcall
or
shrb
push
and
cmp
jbe
inc
mov
xchg
iret
mov
xor
ss
lock
repnz
outsb
mov
jecxz
repnz
dec
push
shlb
mov
or
inc
adc
xor
pop
stc
xor
mov
cli
shlb
into
jg
or
xchg
dec
movb
daa
sbb
cmpsl
jo
sbb
lods
leave
ja
hlt
repnz
inc
aas
pop
jnp
test
pop
cmp
mov
mov
dec
insb
loopne
push
imul
pop
dec
inc
mov
shll
mov
aam
shlb
pop
lock
add
mov
es
fbld
inc
pop
inc
add
or
shr
out
sbb
adc
das
cmc
mov
out
push
ss
testl
cmp
or
jo
or
or
fidivl
je
nop
pop
pop
inc
mov
decb
lods
cltd
ret
push
cmp
dec
push
pushf
pop
xor
sub
xor
pop
mov
sbb
test
icebp
insl
cmp
in
shlb
ficoml
dec
and
add
push
or
nop
in
jl
or
sahf
mov
out
lds
push
shlb
fldt
sbb
scas
div
lcall
pop
push
iret
test
jecxz
mov
mov
mov
enter
jae
aam
dec
pusha
xchg
ljmp
popf
gs
outsb
pop
xchg
cli
loopne
push
fsts
cmp
div
lret
sbb
lret
or
mov
add
jno,pn
ljmp
fadd
push
into
lock
lea
ss
push
iret
nop
lcall
aaa
fs
push
mov
push
or
dec
pop
lret
aaa
out
mov
sbbb
stos
sub
loop
mov
ret
lahf
add
std
inc
mov
pop
or
mov
or
rol
repz
test
pop
mov
test
lods
icebp
shll
ljmp
jb
adc
cmpl
lock
push
push
lds
rcrl
cmp
cmpsl
inc
cwtl
rcrl
rol
flds
lret
inc
stos
fcoml
add
push
mov
cmp
push
insb
inc
push
pop
mov
pop
insb
cmp
inc
sbb
jae
and
ljmp
or
inc
int3
ljmp
loop
shrb
push
pusha
pushf
imul
jo
fwait
sbb
loop
addr16
push
cwtl
mov
push
jmp
fildll
push
dec
lret
jecxz
add
mov
mov
cld
dec
adc
xchg
xchg
cmp
cmc
out
imul
dec
int
jbe
scas
into
into
add
ljmp
sbb
dec
sbb
add
cmp
leave
loop
fcomip
test
jae
iret
mov
enter
daa
std
xor
dec
fdivp
das
jmp
xor
push
enter
sbb
mov
arpl
stos
push
leave
outsb
std
enter
adc
stos
test
xchg
inc
and
insl
pop
push
fistpl
mov
ficompl
call
mov
sub
jae
repnz
int3
insl
shr
idivl
test
pop
jge
call
add
and
jae
dec
xchg
pop
pop
outsb
and
dec
adc
cmp
push
dec
jnp
sbb
and
mov
xor
ds
mov
les
sub
mov
cli
mov
dec
inc
sub
push
mov
cs
or
mov
les
mov
sbb
dec
xchg
fdivrl
jne
in
shr
das
pop
fdivr
inc
jno
lods
jg
and
shll
mov
xor
jecxz
sub
int3
popa
pop
int
outsb
mov
negb
sub
xlat
add
add
jp
adc
pushf
ficoml
inc
jns
jo
popf
xor
mov
adc
and
or
mov
int
pop
nop
inc
mov
xlat
sub
mov
jnp
adc
dec
xchg
out
xor
mov
dec
xor
or
pop
sbb
sbb
xor
adc
xchg
sub
shlb
jns
xor
xchg
lods
cmp
jge
lock
mov
xchg
repnz
mov
sub
sub
xchg
mov
cmp
iret
sub
mov
and
push
jae
dec
leave
into
cmp
daa
ficoms
stc
gs
jnp
jp
push
int3
out
xchg
pop
or
mov
lcall
or
mov
lahf
das
mov
int
jle
push
std
gs
xor
push
xchg
push
jbe
clc
push
insl
movsb
fnstenv
sub
divl
jnp
dec
stos
enter
jo
cmp
pusha
addr16
pop
xchg
mov
test
sub
and
mov
inc
dec
rcr
fs
das
adc
std
jns
sub
sbb
mov
sbb
aam
addl
xchg
cmpsl
lea
lahf
out
or
stos
or
in
mov
jo
sbb
jmp
pop
dec
movsb
rol
roll
out
js
mov
ss
fistpll
pop
mov
inc
and
pushf
fmull
mov
dec
push
and
and
push
fidivs
fcoms
dec
lock
sbb
push
mov
pushf
out
inc
jmp
lods
sahf
inc
pop
inc
lcall
and
mov
leave
cmp
aad
insl
faddl
jg
bound
mov
setge
loopne
inc
adcl
stos
js
jno
lret
sbb
and
scas
femms
add
lods
jecxz
cld
mov
andl
mov
jg
mov
cld
arpl
imul
je
adc
jo
dec
add
pusha
xor
mov
int3
xlat
push
xchg
call
ret
movsb
insb
scas
out
inc
ret
scas
mov
aad
xchg
lcall
mov
jl
mov
gs
adc
push
icebp
mov
idivb
push
nop
push
loop
mov
movsl
js
fidivrl
push
mov
movsb
clc
lods
push
xchg
inc
add
inc
and
xchg
lcall
cmp
mov
push
sbb
mov
xchg
icebp
xchg
mov
scas
jp
push
cmc
aas
cmp
scas
dec
shll
jp
movsl
sub
icebp
pushl
jo
mov
push
js
jmp
out
cmpsl
orb
lcall
adc
scas
in
jmp
cmp
out
sub
mov
rorb
out
add
jae
in
xchg
ljmp
adc
pop
add
mov
mov
js
sbb
pop
xor
pop
into
stc
sbb
push
out
outsl
ret
xchg
push
rclb
ficompl
sbb
jl
mov
mov
lea
cmpsl
lods
xchg
mov
xor
and
sbb
mov
pop
xor
loopne
or
adc
mov
mov
sarl
mov
xchg
cmp
stc
mov
mov
xor
cmpsl
mov
stc
addb
mov
xchg
fildll
pop
ss
das
test
lcall
jle
mov
adcb
mov
aad
push
push
mov
rcr
lcall
into
inc
mov
mov
rorb
out
outsl
pop
scas
adc
ret
jle
in
xlat
das
popa
mov
nop
sahf
cmp
test
sarl
xchg
cmpsb
xor
mov
inc
push
sub
call
mov
sub
pop
in
mov
test
xchg
lds
xchg
pop
xchg
pop
jne
sub
mov
divb
outsb
adc
repz
and
mov
bound
frstor
pop
inc
jne
mov
add
xchg
ret
mov
test
adc
jno
stos
aas
repnz
pop
in
insl
testb
repnz
cmc
aam
jmp
push
and
js
xchg
hlt
inc
js
and
sub
xor
inc
lods
adc
out
mov
mov
insl
xor
pop
hlt
or
pop
push
cli
sbb
aaa
mov
push
cmp
mov
hlt
inc
dec
lahf
loopne
add
jecxz
adc
mov
pop
sbb
xchg
xor
and
and
dec
mov
dec
xchg
push
into
out
dec
in
add
pop
mov
mov
mov
sbb
pop
xchg
push
mov
std
dec
jbe
sub
in
rol
imul
push
mov
stc
pop
mov
repnz
cwtl
xor
xor
xchg
cwtl
cltd
ret
ja
lods
mov
in
das
in
out
cmp
dec
clc
or
jbe
jl
xchg
sahf
push
mov
into
mov
sbb
int3
loopne
pushf
push
sub
mov
sbb
int
imul
xchg
popf
dec
xor
fnstcw
inc
push
insb
push
dec
pop
pop
fnstcw
xchg
push
pop
call
jmp
sbb
xchg
mov
aam
outsb
les
mov
fimuls
cmp
sahf
jg
and
out
push
jne
popf
ss
pop
xor
pushf
pop
nop
hlt
pushf
xchg
jg
pop
dec
pusha
stos
mov
andb
icebp
lcall
and
test
std
aaa
xchg
shrb
mov
mov
mov
sbb
imul
sub
and
mov
cmp
gs
leave
lret
mov
adc
mov
idiv
xorl
sbb
adc
mov
mov
leave
mov
lods
dec
dec
jno
inc
dec
sub
out
lods
ficoml
shlb
sub
adc
icebp
aas
push
cld
sti
lods
outsb
in
adc
nop
sbb
sbb
pushl
cmpsb
push
mov
add
or
lock
cmp
or
or
xchg
es
pop
cli
bound
mov
xchg
cmp
lea
dec
jp
add
aaa
adc
js
inc
pusha
leave
push
ja
jmp
fs
rorl
lods
lods
lods
imul
roll
sbb
mov
push
jmp
repz
scas
in
sub
inc
js
loopne
out
cli
aad
ret
inc
jb
in
scas
jmp
andl
cs
mov
addl
std
bound
ljmp
cmc
test
js
push
sbb
adc
jae
in
add
or
scas
cmp
rolb
imull
inc
sbb
nop
jecxz
ret
xor
push
mov
add
xor
cmp
xlat
test
ss
loop
dec
sti
inc
xor
push
loopne
pop
push
dec
enter
sbb
sahf
push
mov
push
vpshlw
aad
mov
dec
das
or
popa
imul
shll
das
jg
mov
add
out
add
push
pusha
shl
mov
or
sbb
xchg
cltd
dec
mov
test
mov
in
ss
mov
mov
or
mov
dec
sbb
iret
sbb
sub
in
xchg
ds
push
sahf
repnz
bound
scas
dec
sub
jb
mov
popa
dec
push
mov
jge
test
insb
aam
js
mov
loope
cmp
movsb
movsb
sbb
push
xchg
lock
fucomp
arpl
sbbl
fists
int
sti
pop
sbb
cmpsb
push
mov
pop
push
add
dec
je
filds
test
pop
xchg
jle
adc
jbe
stc
dec
rol
mov
stos
in
jb
into
push
xchg
test
repz
push
adc
push
xchg
dec
xor
mov
inc
pop
pop
into
lahf
adc
and
es
fstpt
out
xlat
mov
pop
out
call
add
mov
sbb
sub
out
pop
jl
push
jp
inc
push
enter
cld
inc
pop
ja
test
sub
lahf
sahf
pavgb
mov
popa
xlat
in
jnp
mov
mov
push
mov
and
cmp
push
dec
inc
mov
adc
imul
cs
pop
stc
mov
xchg
inc
adc
pop
adc
push
outsb
cld
inc
movsb
lret
pusha
adc
jecxz
mov
rcrb
sarb
js
mov
test
lock
mov
mov
push
inc
enter
dec
sbb
jp
xchg
insl
jmp
je,pt
jne
push
add
mov
or
sbb
xchg
mov
mov
icebp
xchg
jg
xchg
adc
and
push
lret
push
orb
shll
jl
jno
jbe,pt
xor
ljmp
lret
lods
sub
add
xor
mov
mov
das
ret
cwtl
jae
stc
jo
in
push
clc
lods
scas
test
lods
es
adc
je
lret
sbb
clc
cmpb
and
mov
xchg
mov
cmp
add
imul
cmp
je
cmp
clc
mov
shl
and
mov
pop
or
xlat
cmp
adc
push
cmpsb
sbb
pop
ret
cld
bound
fidivrs
outsb
cmp
pop
mov
dec
or
sbb
int3
jno
jge
pop
into
pusha
outsb
sub
jno
ss
and
xchg
cmpl
loopne
outsl
in
xlat
jge
lds
cmpsl
arpl
fisubs
sub
int3
cmp
jae
jmp
add
dec
rep
stos
movsb
adc
adc
dec
in
imul
jp
dec
notl
mov
cltd
push
out
mov
iret
lea
lea
clc
loope
cmp
insb
push
push
xor
test
xchg
mov
fmul
ficomps
xchg
in
in
pop
add
pop
adc
enter
ja
jo
pop
pop
pop
push
or
cld
inc
fs
pushf
imul
add
repnz
cmpsl
out
sbb
or
mov
cmpsb
stos
sbb
jecxz
fdivrs
repnz
inc
mov
inc
jecxz
ficoms
sahf
xor
sbb
out
mov
lahf
xchg
les
cltd
aad
mov
aad
in
mov
gs
push
jno
lea
inc
cmp
addr16
ds
shll
outsl
mov
nop
int
jle
es
dec
mov
fisttps
repnz
aad
mull
cmpsl
ds
stos
add
inc
lock
ret
insb
jmp
adc
mov
loopne
add
ss
cmp
inc
pop
clc
inc
loope
fwait
ret
inc
test
cmp
ret
and
push
mov
les
xlat
outsb
mov
xor
sub
mov
jbe
push
inc
aas
sub
xchg
or
xchg
jmp
sarl
push
ss
ret
lods
inc
inc
dec
xor
movsl
pusha
andl
imul
std
sbb
enter
sbb
jmp
fdivs
pop
dec
mov
icebp
xorl
fnstsw
xor
aam
mov
out
xchg
js
cld
sbb
iret
out
xchg
daa
insl
call
pop
mov
jb
lods
iret
mov
fistpll
rcr
mov
in
popf
jl
sbb
shr
jge
ret
inc
ljmp
addb
lret
dec
loop
dec
in
aad
xchg
ret
jb
pop
jns
adc
pop
ljmp
mov
dec
cwtl
pop
push
xor
xor
cmp
leave
loopne
xor
in
mov
inc
aam
scas
jle
mov
add
test
push
mov
inc
test
cmp
shlb
mov
dec
mov
inc
jb
loop
or
les
test
pushf
sbb
out
jno
mov
jecxz
and
faddl
sub
les
sbb
fwait
outsb
jno
push
xchg
add
adc
into
scas
push
in
cmp
dec
sbb
dec
out
inc
insb
rep
cmp
das
jecxz
leave
aaa
mov
mov
scas
push
cwtl
jae
mov
pop
inc
dec
outsb
addb
inc
in
mov
enter
out
cmp
or
ljmp
sti
inc
ret
lret
mov
pushw
outsl
jl
dec
lret
mov
cld
jg
xchg
int
pop
arpl
pop
sbb
push
popf
repz
int3
scas
pop
and
jnp
stc
stos
iret
arpl
mov
ljmp
out
xor
stc
xor
or
pop
dec
or
rcrl
mov
xor
pop
pusha
shrb
in
sbb
mov
ljmp
iret
adc
xor
data16
cmp
lds
xchg
popa
out
and
insl
test
xor
lock
fwait
push
xlat
pop
mov
out
sbb
adc
mov
aaa
push
add
inc
out
nop
ret
test
repz
das
xchg
in
std
pop
insb
xor
or
inc
push
or
cmp
neg
cmp
iret
scas
scas
cmp
xor
sbb
loopne
sbb
and
or
notb
repz
iret
pop
jp
shrl
mov
jg
pop
or
inc
jns
leave
push
inc
inc
addr16
or
xlat
sub
or
mov
pop
push
mov
jnp
or
inc
mov
sub
or
xchg
and
xchg
es
sub
fisttpl
in
dec
dec
movsl
scas
push
out
lret
pop
mov
or
test
pushl
add
add
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
imul
add
push
add
add
imul
add
arpl
js
xor
sbb
dec
sub
lds
or
test
mov
mov
sbb
pop
std
or
pop
popa
mov
sub
mov
hlt
jl
in
sbb
lock
lahf
xchg
adc
divl
dec
nop
jecxz
test
dec
outsb
xlat
stos
rcrb
stos
add
mov
lods
test
or
es
mov
gs
mov
dec
int
out
mov
cmp
adc
addr16
bound
mov
sub
add
int3
daa
mov
mov
mov
xor
sbb
cmp
push
xchg
inc
jmp
dec
xchg
fnstsw
xchg
xor
sub
mov
and
insb
dec
sub
in
add
cmp
xor
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
