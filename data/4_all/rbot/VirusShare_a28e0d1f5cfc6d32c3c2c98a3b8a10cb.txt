daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
cmc
xlat
adc
or
dec
push
cmp
adc
sahf
pop
push
pop
shrb
cli
mov
int3
cmp
stc
test
pop
cltd
fs
push
aam
scas
xchg
sub
popf
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
add
pop
pop
xchg
mov
lods
sbb
cltd
mov
mov
jb
pushl
sbb
lret
lock
sbbl
xchg
stos
in
jg
mov
fcomp
roll
ds
loop
notl
sub
std
and
int3
lret
rcrl
jno
sarl
sti
test
inc
std
movsl
je
leave
cld
int
push
push
je
ja
aad
xor
cmp
push
sbb
mov
add
fdivrs
sbb
xchg
pop
cmp
dec
imull
or
stos
aas
imul
insl
ljmp
mov
sti
std
ret
aad
push
sub
lods
and
std
sbb
or
pop
push
inc
mov
mov
sub
mov
cld
in
fildll
sbb
inc
xor
dec
stos
inc
rcl
sub
push
fistl
cmpsl
test
lret
imul
xchg
gs
adc
xchg
ss
sub
shlb
fildll
call
add
outsl
add
jl
add
js
add
jbe
rol
lahf
mov
ret
filds
shl
add
filds
jp
jbe
fimuls
repnz
lret
int3
clc
shr
dec
or
out
cltd
add
pop
mov
loopne
insb
pop
movsl
dec
inc
hlt
mov
popf
stc
add
mov
sbb
jle
stc
icebp
mov
jbe
out
insb
movsl
clc
jmp
inc
daa
int
outsl
es
subl
testl
mov
cld
cmp
mov
inc
repz
cmp
cmp
add
mulb
jecxz
repnz
cmp
and
inc
sub
push
cld
jbe
enter
int
aad
push
add
scas
mov
mov
call
and
pusha
les
fmuls
cmp
lock
mov
inc
sarb
aad
jg
into
inc
mov
mov
inc
mov
in
pop
popa
aas
movsb
fnsave
roll
push
imul
jmp
mov
int3
insb
imul
enter
lods
xor
sub
cld
out
mov
dec
outsb
ret
pop
push
pop
cwtl
mov
negl
push
arpl
sbb
in
jl
mov
jb
pushl
jmp
jg
lds
mov
loop
int
int3
out
push
movsl
pop
sub
sub
adc
mov
pop
repnz
xorb
lods
xlat
adc
scas
cmpsl
jo
cs
pop
test
pop
mov
pop
outsl
por
cmpsl
movsl
mov
sbb
stos
pop
cmpsl
mov
jae
push
jae
mov
imul
into
jmp
fdivr
add
arpl
and
pop
jmp
jg
es
lfs
lret
dec
test
ds
nop
testl
insl
es
in
les
pop
jg
sub
xchg
hlt
xor
xchg
xchg
adc
ss
jae
rcr
adcb
jbe
or
je
pop
or
jg
icebp
push
inc
mov
movsb
jp
inc
push
dec
ljmp
cmpsb
push
cltd
xadd
and
xchg
sub
xchg
sbb
popf
cwtl
fdivl
mov
mov
mov
cltd
cmp
sbb
mov
scas
cmp
js
jl
xchg
mov
sub
inc
scas
lods
mov
jp
jge
mov
ret
push
pop
daa
dec
in
sbb
es
mov
ror
rclb
add
push
mov
ljmp
aad
push
sub
daa
push
or
ja
sbb
or
cmp
push
hlt
fbld
fbld
ljmp
cmc
into
mov
arpl
inc
jne
hlt
sahf
push
cmp
sbb
cmp
mov
mov
enter
xchg
or
pop
and
add
push
add
mov
out
mov
mov
jne
shl
sbb
imul
imul
imul
jg
repz
in
aaa
fdivs
or
and
and
cmpsb
cwtl
data16
pop
cltd
frstor
or
xor
push
fisttpl
jb
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
cmc
xlat
adc
or
dec
push
cmp
adc
sahf
pop
push
pop
shrb
cli
mov
int3
cmp
stc
test
pop
cltd
fs
push
aam
scas
xchg
sub
push
dec
pop
test
cmp
or
jae
add
or
or
push
push
push
push
lea
push
push
push
push
add
sub
ror
jnp
push
jl
push
mov
pop
pop
cmc
or
and
mov
xchg
test
jle
push
add
add
jbe
push
jae
shr
pop
lea
clc
sub
lea
jg
jb
jb
push
inc
pop
cld
jno
and
jb
jge
push
add
rol
call
jnp
push
jb
and
pop
jb
cmp
ror
ror
nop
mov
inc
inc
inc
inc
cmc
cmc
push
add
push
pop
pop
cmc
cmp
mov
push
push
mov
pop
pop
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
push
add
mov
pop
loop
jecxz
daa
fs
cwtl
fdivl
sbb
test
inc
push
inc
pop
test
jnp
add
cld
cmp
jp
ror
push
pop
and
sub
mov
stc
testl
jne
jmp
push
call
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pop
pop
push
add
pop
loop
jecxz
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
xor
push
jnp
js
push
dec
pop
pop
cmp
dec
inc
mov
inc
inc
inc
inc
push
or
pop
js
or
clc
cmp
push
push
pop
add
pop
push
call
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
test
jmp
vrcpps
mov
add
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
js,pn
aas
dec
jg
push
cmp
addl
int
cmc
xlat
adc
or
dec
push
cmp
adc
sahf
pop
push
pop
shrb
cli
mov
int3
cmp
stc
test
pop
cltd
fs
push
aam
scas
xchg
pop
pop
jmp
jmp
daa
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
fs
cwtl
fdivl
sbb
test
jg
fisubrl
xchg
mov
stos
ss
dec
adc
nop
pushf
hlt
lods
or
adc
adc
ret
pop
sub
fmull
cmpsl
add
stos
or
adc
loope
imul
cmp
xchg
dec
divb
mov
jle
add
mov
seta
pop
movsl
into
push
mov
xchg
pop
pop
clc
pop
adc
test
bound
adc
dec
mov
notb
add
adc
dec
mov
mov
pop
lea
xchg
outsb
fisubrs
cmp
xchg
xor
or
push
jnp
mov
cld
ret
ret
in
pop
in
out
lods
add
push
xchg
xor
gs
push
rclb
inc
movsb
out
jns
bound
add
jle
push
js
mov
loope
cmp
cmp
aas
jae
mov
movsl
std
outsb
cltd
scas
inc
mov
jns
pusha
sub
push
jno
fwait
mov
outsl
mov
push
jb
mov
lock
sbb
bnd
and
scas
xlat
xchg
dec
mull
cmp
fwait
mov
shlb
pop
sbb
aad
mov
push
stos
out
mov
ret
sti
out
mov
adc
add
and
pusha
add
andl
sahf
aam
dec
std
ret
pop
stos
outsl
sub
pop
adc
push
stos
pop
cwtl
pop
movsl
es
js
xorb
shlb
outsl
mov
aam
hlt
jp
aas
shlb
sub
pop
push
xchg
out
in
jl
sbb
in
out
dec
add
and
int3
mov
lahf
pop
dec
mov
fstps
in
push
add
push
dec
adc
adc
sbb
inc
fwait
add
dec
xchg
mov
sub
push
lahf
mov
outsb
outsb
lods
mov
push
mov
xchg
pop
ljmp
inc
popa
notb
lret
mov
inc
xor
sbbl
in
insl
aaa
insb
mov
imul
rorl
cmp
sbb
or
push
loope
icebp
test
test
xor
jl
fwait
and
xor
cmp
into
push
or
cmpsl
mov
add
js
push
mov
jo
dec
iret
mov
inc
sbb
sbb
pop
icebp
out
cmp
fldenv
mov
dec
and
imulb
ja
push
sbb
loopne
enter
xor
loope
sbb
or
push
repz
push
aam
pop
push
cmp
in
and
pop
cmp
sbb
aad
xor
das
jo
adc
cmp
add
inc
pop
push
into
std
lock
rcl
dec
or
xchg
in
mov
push
lods
scas
roll
decl
sub
rolb
push
or
addl
sbb
stos
or
outsl
in
cmp
nop
fdivr
lods
les
ja
push
inc
lods
int3
jge
push
jmp
sub
cmp
lock
mov
into
repz
mov
inc
xchg
mov
sbb
xchg
outsb
pop
add
sbb
out
push
aad
testl
mov
scas
mov
or
fs
lds
mov
fsubp
sbb
stos
jg
and
insb
addr16
mov
jmp
pop
je
dec
mov
sbb
fiaddl
ret
fs
aad
xchg
mov
mov
in
addl
mov
aaa
fadds
sahf
fwait
out
xor
int3
lahf
fildl
ljmp
jns
jmp
repz
adc
sub
push
mov
andb
xor
dec
je
pop
jl
shlb
in
das
or
jl
mov
dec
into
fwait
scas
icebp
mov
fisubrl
push
mov
dec
test
xlat
popf
mov
mov
test
xor
jl
jecxz
xor
dec
jecxz
gs
sbb
test
or
out
or
dec
jecxz
sub
mov
or
inc
lods
fsubl
cmpsl
and
aad
inc
pop
push
and
push
and
call
pop
unpckhps
sbb
pop
pusha
jne
mov
popa
mov
push
mov
orl
push
in
xchg
mul
cmp
add
mov
adc
inc
aas
xchg
xlat
cmc
mov
xchg
inc
push
push
in
mov
pop
xorb
mov
cltd
cmc
or
rolb
out
inc
arpl
cli
adc
jl
mov
push
repz
into
mov
or
fwait
adc
andl
test
mov
mov
or
cli
mov
test
ret
sub
pusha
mov
sti
mov
test
adc
ret
lahf
mov
jl
sahf
add
and
loop
test
xorb
mov
fwait
mov
aas
cmp
insb
ja
pushf
sub
xchg
add
mov
inc
mov
jge
cmp
sbb
pop
mov
shr
mov
aas
inc
fldcw
popa
xor
daa
loope
mov
mov
imul
cmp
mov
jae
pop
jae
jmp
or
adc
mov
call
ret
cmp
scas
sub
cmpsb
jno
inc
adc
outsl
gs
loope
mov
and
icebp
outsl
xchg
icebp
inc
in
shrb
stos
add
inc
cmp
jmp
push
xor
add
fcomps
cmp
sbb
fs
in
dec
cmpsb
mov
jno
mov
jb
stos
add
inc
aad
cmp
loop
insb
mov
push
mov
xchg
insl
or
and
xor
inc
or
icebp
test
xchg
pusha
sahf
and
cmpsb
fs
jae
test
ljmp
adc
cmp
hlt
out
adc
inc
cs
lret
rcll
and
jno
insl
sub
pop
jo
popf
pusha
adc
mov
call
adc
mov
and
shrl
sarl
rcll
imul
jne
sub
imul
cmp
mov
arpl
stos
in
mov
aaa
jne
rorb
inc
dec
fisttpl
pop
or
fisubrs
out
icebp
ja
shl
test
cli
or
sub
enter
add
jnp
ss
sbb
mov
pop
sti
mov
adc
mov
movl
ja
or
push
lock
fbld
jmp
dec
mov
mov
sarb
movsb
movsl
or
mov
shl
insb
outsb
or
lahf
fbld
daa
cmp
pushl
jo
into
sbbl
push
ret
js
ds
in
or
mov
xchg
jecxz
scas
rsqrtps
popf
movsl
int3
sub
mov
rcrl
bound
pushf
mov
sti
mov
pushf
inc
push
testl
lea
and
push
ja
or
mov
dec
pcmpgtb
scas
ja
xchg
push
out
cmpb
loope
fs
repz
jmp
push
push
cmp
enter
jne
or
adc
movsb
lods
sub
xchg
cld
sub
cld
push
adc
stos
out
xor
fldl
subb
movsl
jg
std
jg
push
mov
lahf
jbe,pn
pop
vpsllq
fmuls
xchg
or
mov
or
mov
xchg
xchg
push
loope
jp
ljmp
aam
out
add
and
les
xor
int3
outsb
add
jge
sbb
leave
xchg
sub
aas
imul
fwait
push
lret
sbb
add
xorb
sub
scas
jbe
imul
push
dec
jmp
push
or
jb
out
insl
add
xchg
bound
dec
xchg
sub
pop
or
in
popa
jbe
aas
sbbl
je
mov
cmc
sbb
xchg
movsb
addr16
iret
or
dec
ja
xor
es
adc
and
dec
xchg
push
cwtl
dec
dec
xor
mov
mov
mov
bound
sar
dec
imul
out
mov
fcmovb
das
cwtl
sbb
int
ror
sub
dec
outsb
ret
fbstp
in
cld
icebp
and
inc
rorb
fisubl
xchg
stc
int
mov
mov
add
arpl
mov
shlb
jge
outsl
mov
sub
inc
push
sub
push
cmpsl
add
dec
scas
push
shrb
int3
jmp
ss
imul
xchg
neg
push
in
and
movsb
lock
xchg
fldt
dec
stc
adc
push
pop
pop
test
lods
jae
xchg
push
dec
mov
movl
or
lret
fiadds
jp
cmp
loopne
xor
test
cmp
push
sbb
fwait
jmp
adc
lcall
xchg
lds
inc
inc
mov
jno
xchg
xchg
mov
out
cmp
pop
lds
pop
test
andl
xchg
inc
sub
dec
ss
sti
lea
jne
outsl
cli
nop
or
in
mov
dec
adc
inc
rcl
ss
call
mov
rcr
adc
mov
subl
cmpsb
adc
xchg
iret
sub
mov
adc
pop
frstor
jp
mov
test
fisttps
xor
push
fs
dec
dec
bound
dec
test
push
xor
dec
ret
fcoms
push
mov
pop
mov
dec
mov
ret
jnp
xorl
cld
ja
test
mov
jge
add
inc
std
push
mov
cmc
dec
dec
int
out
push
cmc
stos
xor
aam
aad
aad
push
sub
push
int
jle
and
inc
adc
sbb
lahf
repnz
lret
outsb
cmp
das
lods
mov
in
add
jns
cmpsl
jmp
mov
add
pushf
pop
push
outsb
ret
je
mov
dec
es
and
adc
or
fwait
fwait
and
lods
dec
cmp
cltd
inc
jge
inc
mov
jmp
xchg
movsl
mov
loop
pop
dec
xchg
enter
ret
lahf
imul
pop
jo
lock
sbb
repz
add
xchg
lret
mov
adc
or
iret
and
lea
add
lahf
jp
pop
lret
mov
dec
dec
push
inc
jmp
imul
push
ja
lea
pop
push
mov
jnp
mov
push
es
ss
sub
ret
push
or
or
push
cmp
jno
loop
mov
daa
aad
cwtl
aad
xor
fidivrl
mov
dec
fsub
es
lea
sbb
pop
cwtl
dec
scas
dec
mov
jge
push
mov
iret
and
cli
mov
inc
and
inc
mov
add
and
push
and
mov
cmp
pop
fstpt
sti
insl
ja
mov
mov
shll
dec
aaa
mov
call
mov
inc
negb
outsl
or
xchg
sbbl
mov
inc
lock
pop
sub
outsl
xor
mov
and
dec
es
fdivp
ljmp
mov
and
inc
js
das
repnz
outsb
xchg
lahf
inc
push
hlt
cmp
mov
je
and
jbe
lods
lcall
sub
ret
push
out
mov
pushf
shrl
or
jmp
in
mov
push
and
xchg
testb
ret
sbb
rcll
fidivrl
pop
inc
inc
ror
pop
arpl
xchg
jmp
aad
xchg
iret
adc
ds
imulb
cmp
loopne
mov
or
ret
xor
pusha
cld
std
sub
stos
testl
jle
xor
pop
lcall
mov
outsb
ljmp
int3
int3
ret
jl
dec
mov
int3
cmp
sub
xor
jne
aam
adc
dec
ret
push
mov
movsb
pusha
shl
push
lret
ja
shl
and
lods
xor
inc
imul
sub
dec
fidivs
fdivl
mov
test
leave
mov
shlb
pop
jnp
mov
dec
fisubrs
inc
imul
fdivrl
insb
lock
and
arpl
test
ficoms
mov
adc
call
faddl
imul
insb
jp
loopne
nop
xchg
add
add
rcr
jne
or
mov
cli
sbb
loop
jnp
jge
mov
mov
rorl
sbb
mov
xchg
icebp
add
sbb
push
inc
inc
out
sub
mov
xchg
xchg
sub
xchg
loope
sub
int
push
dec
lcall
lcall
dec
es
test
repnz
stos
jbe
fisubrs
jb
push
aam
gs
out
mov
gs
jbe
and
std
and
or
push
testb
js
jmp
insl
mov
shll
mov
jb
xor
into
lcall
adc
mov
push
add
mov
sbb
adc
jmp
push
outsl
dec
adc
stc
xor
iret
inc
into
xorl
sub
repnz
dec
leave
movsb
mov
push
clc
and
push
cli
movsb
xchg
and
popa
ja
scas
jbe
cmp
inc
cmp
jo
inc
mov
inc
mov
or
cwtl
mov
push
add
jbe
adc
lret
sbb
out
inc
rorb
call
inc
arpl
test
mov
pop
pop
mov
dec
sbb
sbb
xor
cs
mov
sbb
pop
popf
dec
mov
stos
pop
push
es
cmpsb
clc
daa
sbb
mov
xchg
mov
es
sub
push
lea
pop
addr16
push
mov
add
mov
mov
rcll
fsub
jle
push
pop
xchg
xor
mov
jp
xchg
in
nop
imul
rclb
and
sbb
push
imul
adc
int3
dec
inc
xlat
jbe
sub
fists
mov
pop
out
push
ret
fldt
das
ror
outsl
fisubrl
loop
dec
lods
loopne
mov
repnz
mov
insl
xchg
addr16
push
sbb
cmc
leave
adc
add
dec
inc
lret
inc
sbb
cmpsb
iret
push
or
sbb
jb
jbe
jb
jl
push
fwait
pop
pop
xchg
js
or
mov
push
or
sub
sbb
dec
xchg
adc
xchg
insl
or
jecxz
xor
lea
xor
xor
sbb
in
gs
mov
aas
push
inc
cmpsb
sarl
test
pop
xchg
adc
dec
shl
fs
xchg
jns
mov
test
ja
adc
cmc
inc
out
inc
mov
jnp
push
mov
inc
repz
pop
push
gs
sub
scas
dec
cmp
jge
and
mov
push
mov
jg
xchg
popa
pop
push
fbstp
insl
cmpsb
mov
lods
test
inc
into
fsub
mov
test
call
js
adc
jg
mov
out
cmp
mov
xor
xchg
jbe
aam
pop
std
pop
jae
subl
sub
push
lahf
push
insb
ss
lods
dec
push
es
cmp
arpl
enter
fimull
out
cs
jne
clc
rcrb
dec
imul
add
xchg
add
call
insb
push
ja
loop
or
test
or
mov
pop
lea
jmp
xor
xchg
sbb
xchg
mov
pusha
movl
or
xor
sbb
sbb
ss
mov
sbb
movsl
lods
pop
movsb
mov
stos
jmp
add
nop
inc
jae
xchg
sbb
xchg
mov
popa
int
testb
cmp
mov
push
subl
imul
int
loope
cmp
xchg
push
xchg
mov
orw
and
cmp
iret
pop
dec
out
testb
outsb
test
fisubrl
addr16
jo
mov
sub
inc
shl
xor
inc
mov
xchg
addb
dec
inc
cmp
fistpl
fcoml
jbe
jb
jecxz
popl
jl
popa
adc
inc
mov
sbb
in
shll
xchg
loopne
inc
jge
sbb
inc
popf
sbb
sub
sub
scas
xchg
and
out
xchg
outsb
add
xor
xchg
adc
mov
roll
repz
adc
and
dec
enter
pop
xchg
dec
cwtl
cmpsb
ja
subb
cmpsb
std
adc
add
mov
test
dec
push
push
mov
mov
aaa
dec
je
jbe
ficoml
jo
pushl
push
movsb
mov
add
fs
push
jg
stc
or
cmc
fnstsw
push
sbb
orl
loop
rorb
lret
pop
mov
inc
cmp
in
or
cmpsl
test
pushf
fimull
movsl
pop
and
decl
sbb
aad
jno
cmp
ljmp
push
and
or
jmp
sbb
lret
add
pop
icebp
loop
pop
xchg
rcrl
mov
movl
cltd
cmpsb
xorl
insb
xchg
cmpsb
cmp
inc
and
push
dec
adc
sub
pop
loope
or
out
push
ss
sub
push
roll
out
jg
dec
or
xchg
testb
ficompl
lock
xchg
stc
not
fwait
ret
movsl
adc
jbe
adc
inc
outsl
dec
xchg
jge
inc
add
dec
jecxz
xchg
sahf
inc
and
inc
mov
cs
sbb
and
inc
xor
leave
dec
xlat
jne
jp
movsl
mov
adc
frstor
mov
jnp
sub
pushf
jbe
dec
sub
in
out
and
scas
adc
imul
mov
inc
cmp
pop
jge
jg
jno
cmp
mov
aas
push
xchg
pop
les
rorb
jmp
loopne
mov
popa
call
mov
xor
insb
mov
icebp
xor
aad
movsb
inc
adc
or
into
scas
popa
adc
nop
mov
or
shrl
push
mov
pop
jb
shlb
push
out
rolb
sub
push
mov
ds
push
aam
bound
ds
push
sbb
and
jnp
subl
and
sub
cwtl
cwtl
test
jns
sbb
and
mov
notb
mov
jg
lods
mov
sub
inc
inc
cltd
pop
dec
or
aam
je
fadd
aaa
and
mov
hlt
jbe
sbb
imul
mov
xor
push
imul
inc
pop
icebp
cmpsb
xchg
mov
push
adc
mov
sub
or
mov
pop
xor
pop
lea
hlt
imul
and
scas
mov
mov
out
mov
cmp
out
gs
mov
xor
mov
mov
or
mov
xchg
mov
dec
fildll
mov
mov
lret
insb
sti
sbb
cmpl
test
mov
lock
pop
movsl
mov
test
inc
adc
ja
jbe
imul
lds
dec
scas
xchg
adcl
mov
out
add
add
xor
lret
mov
addb
inc
lds
ss
adcl
test
push
xor
arpl
popa
ds
xlat
mov
push
inc
shll
push
mov
into
mov
jp
cld
xor
add
push
pop
inc
xchg
adc
jns
xchg
and
jbe
ja
nop
ret
pop
subl
test
insl
mov
mov
xchg
cmp
xchg
xor
mov
sbb
imul
std
jno
jg
outsl
das
push
cmp
lock
mov
fdivrs
fnsave
dec
xchg
sbb
xchg
pop
or
adc
loop
cld
in
mov
mov
pop
and
cmpsb
sbb
mov
jmp
and
mov
roll
leave
mov
push
pop
sub
jl
in
mov
cli
nop
leave
jno
push
in
adc
stos
rcll
in
jne
xlat
fs
in
jecxz
mov
mov
loope
xor
push
iret
fs
sbb
jg
rcr
dec
lea
sbb
mov
shlb
add
push
jmp
jg
and
rcll
mov
adc
xchg
fstpt
jns
inc
mov
shll
xorb
shlb
xchg
stos
pop
adc
clc
cwtl
lds
and
lea
div
jge
mov
or
dec
mov
adc
xlat
pop
xlat
movsl
lods
leave
mov
loop
scas
ljmp
imul
fbld
lods
stos
sub
cmpl
xlat
push
aaa
loope
out
int3
in
jmp
cs
mov
inc
js
fisttpll
dec
cmpsl
adc
lahf
xchg
ret
aam
test
xor
sub
and
push
mov
sub
lock
cli
xorb
dec
sbb
adc
faddl
insb
mov
sbb
mov
ret
sub
pop
add
jnp
pop
mov
mov
mov
out
push
mov
push
adc
daa
loopne
xorl
fucomip
int
mov
scas
cmp
push
std
cmp
mov
lcall
sbb
aam
cmpl
and
and
mov
movsb
data16
or
rcrl
rorb
dec
aas
js
popa
and
fwait
hlt
dec
add
in
adc
cld
jg
cltd
movsl
sub
dec
or
mov
add
dec
mov
xchg
sbb
push
ss
dec
js
icebp
ljmp
icebp
dec
ficompl
sahf
xor
push
rcll
xchg
pop
aaa
mov
push
and
dec
gs
add
cwtl
pop
pop
ret
sbb
sub
movsl
std
and
ja
mov
cmp
pop
cmpsl
and
and
mov
ficompl
dec
mov
xor
push
dec
jmp
mov
loop
add
xor
mov
mov
and
pop
and
mov
into
shrb
jl
test
lods
xchg
add
mov
lods
lds
mov
adc
push
pop
dec
out
mov
fyl2xp1
in
jg
bound
in
pop
and
fstl
les
sbb
push
adc
call
out
pop
and
jne
jo
inc
cmp
jb
adc
mov
in
imulb
push
vunpckhps
fcmovnu
xor
cli
out
iret
or
mov
pushf
inc
sahf
and
xchg
and
adc
adc
or
imul
or
insl
mov
or
push
adc
repz
lock
cmova
nop
fdivrs
cs
fwait
xlat
fwait
inc
insl
jmp
xchg
adc
aam
mov
inc
aas
dec
inc
mov
mov
sub
jnp
or
test
lds
mov
stos
adc
mov
push
and
mov
cmp
inc
sub
jmp
jo
int3
xchg
test
sub
stos
in
enter
mov
inc
xchg
xchg
push
jno
or
or
fs
clc
rcll
js
insl
scas
xchg
pusha
scas
lcall
fcmovnu
xchg
sub
jecxz
push
add
mov
into
in
push
out
out
inc
mov
inc
aas
adc
push
jmp
pop
mov
fdiv
mov
jns
xchg
cmp
adc
mov
popf
pop
jno
pop
leave
pop
stos
jge
cs
lds
mov
push
test
push
adc
push
jne
outsb
and
mov
sub
ja
jl
out
clc
movb
insl
movsb
push
mov
push
stos
lods
or
push
addr16
jmp
push
cmp
mov
outsb
push
add
xor
add
inc
pop
or
fistl
arpl
dec
mov
push
inc
mov
sahf
cmp
in
mov
mov
pushf
pop
xchg
xchg
xor
ja
pop
ffreep
push
in
in
dec
or
cmp
adc
and
stc
cmp
jno
lahf
xor
inc
sarb
in
jnp
dec
daa
cmp
xor
push
pop
inc
sbb
mov
push
mov
sbb
icebp
adc
push
in
clc
add
xchg
inc
daa
and
aas
lods
mov
pop
int3
test
mov
and
and
sbb
insl
or
xchg
or
jmp
jle
out
testl
fcompl
repz
sub
lret
mov
sbb
jns
sbb
pusha
fstpl
cmpsb
into
add
mov
out
add
jo
lods
outsb
jno
fnsave
cmp
loop
cmp
cmpb
mov
in
repnz
repz
cmpsb
ret
inc
test
push
in
gs
and
jg
push
mov
out
fs
aam
data16
fisubl
cmpsb
testb
adc
aad
xchg
pop
mov
adc
xchg
hlt
mulb
push
pop
push
in
sti
push
mov
push
push
xor
dec
and
inc
rolb
jmp
inc
sarl
or
push
dec
mov
lret
xchg
fwait
rorl
jb
xchg
push
fld
sbb
sbb
mov
mov
pop
lock
jae
inc
add
bound
push
ljmp
mov
lods
out
orl
mov
xchg
adc
jl
test
fidivrl
fsubs
in
xchg
dec
test
cwtl
xor
add
adc
jne
test
ret
fwait
mov
jns
push
mov
fadds
hlt
lcall
xlat
sbb
jmp
push
loopne
out
pop
sub
sub
add
pop
cmc
mov
lcall
xchg
xchg
shrl
ret
leave
xlat
incl
sbb
fucomp
cwtl
push
es
not
sbb
mov
push
mov
dec
movsb
cmp
out
fsubl
cli
xchg
outsb
imul
xchg
fsubrl
repz
jge
sub
sub
pop
mov
pop
rclb
popa
add
shll
or
inc
xlat
je
je
into
mov
mov
and
jg
inc
js
icebp
ret
fnstsw
loope
jle
mov
pop
das
cwtl
lods
mov
inc
cmpsl
add
lock
in
mov
mov
mov
jbe
in
cmp
pop
and
mov
inc
inc
jb
add
cmc
gs
hlt
js
add
lods
cmc
sbb
testb
ret
xchg
test
into
jns
jbe
push
sub
xchg
push
insb
or
daa
sbb
aam
add
inc
pop
in
pushf
mov
adc
test
jbe
pop
pop
xor
mov
sub
dec
push
and
cmp
push
fcoms
or
add
scas
mov
adc
je
xor
or
push
scas
adc
push
mov
jmp
xchg
or
lahf
jp
mov
addl
mov
cli
cmc
int
xor
repnz
scas
mov
mov
sbb
mov
push
or
xor
inc
xor
mov
inc
out
cs
pop
fwait
jge
ret
stos
jl
sti
inc
stc
call
icebp
mov
cmp
sub
sub
inc
scas
xchg
sbbl
insl
cmpsb
add
in
je
add
jle,pn
cmp
mov
scas
add
dec
or
lea
aas
mov
sbb
add
jbe
aam
movsl
and
jnp
or
jmp
mov
and
pop
xchg
lds
mov
mov
dec
pop
or
fwait
dec
and
cmpsl
adc
bound
sbbb
sub
les
adc
or
insl
int3
outsb
pop
inc
mov
repz
popf
cmp
addr16
scas
xchg
or
mov
int3
dec
pop
adc
mov
sub
scas
cmp
in
dec
das
pop
pop
in
mov
sub
push
imul
mov
dec
idivb
aas
inc
and
mov
mov
insb
cld
mov
mov
aad
mov
mov
inc
lret
xchg
lahf
cli
test
and
and
notb
sub
inc
mov
jno
int
mov
rep
loop
imul
movsl
and
sti
inc
shl
popf
incb
lods
or
mov
jbe
cs
sbb
addl
lock
push
push
outsl
inc
sub
faddl
lahf
rorb
push
aad
popf
pop
sbb
jne
push
adc
jno
and
or
les
lahf
inc
push
fldcw
sbb
test
mov
xor
pop
pop
imul
sbb
data16
inc
ds
pop
mov
and
movsl
add
sbb
movsl
pop
pop
lods
pop
mov
aaa
adcl
jp
clc
lret
jmp
lret
push
sub
int
daa
pop
xchg
testb
xchg
xor
cmp
jbe
add
adc
dec
xor
or
in
xchg
js
mov
cld
fcomp
in
movsb
add
unpckhps
out
imull
mov
adc
ja
mov
fisttpl
add
sbb
dec
lds
icebp
repz
rcr
xchg
notb
imul
pop
jle
das
sub
mov
sub
repz
sub
lret
dec
adc
out
xchg
mov
movsl
cmpsb
in
bound
dec
stc
xor
dec
fdivp
jge
push
xchg
ret
sbb
outsb
mov
pop
stos
push
mov
inc
cld
cmp
mov
cs
mov
cmp
outsb
lea
jno
icebp
inc
mov
aam
sub
lret
mov
sub
mov
push
out
std
cmpsl
mov
stos
js
mov
rcrl
cmp
lret
add
loop
cmp
mov
cmpsl
push
cli
enter
lods
or
mov
sbb
pop
repnz
rcrl
mov
int
dec
repz
mov
testl
cmp
lahf
ss
lret
das
mov
add
push
fwait
int
test
lds
int3
int3
sbbl
frstor
sar
aad
dec
xlat
push
adc
jo
arpl
dec
pusha
inc
pop
sub
fcomps
pop
pop
in
dec
fsubs
mov
mov
xor
push
dec
xchg
lret
into
aam
mov
add
mov
mov
push
jge
mov
sarb
test
jbe
or
or
idiv
dec
leave
sbb
sub
inc
xchg
pop
and
cmovo
into
in
repnz
jl
lods
aas
lret
mov
scas
cmp
adc
inc
mov
scas
stc
pop
test
inc
loope
sub
sbb
cmpsl
sub
imul
data16
cmp
jne
jp
mov
sbb
xor
xchg
pop
lahf
lock
jge
iret
filds
mov
fidivl
test
jle
rolb
inc
jo
mov
lds
push
add
pop
outsl
xor
in
fsubr
aaa
mov
dec
stos
cmpsl
adc
add
and
sahf
push
jecxz
leave
mov
fisttps
mov
ror
pop
fldl
ds
popf
mov
shl
in
adc
out
pop
bound
inc
call
add
test
jb
jle
jp
sub
jl
cmp
adc
orb
test
mov
mov
mov
lahf
xchg
mov
pop
pop
sbb
inc
popa
scas
outsl
aaa
cmp
xchg
dec
lods
inc
or
inc
or
lds
and
cmp
pop
and
sbb
int
dec
aam
adc
cmp
sbb
daa
movsb
aaa
mov
repz
sbb
clc
fdiv
fistl
adc
jne
fs
adc
mov
or
inc
push
or
mov
bound
loop
and
ret
test
mov
mov
xchg
rorb
cld
std
mov
jne
repnz
adc
stc
insb
in
sub
and
xchg
sbb
and
cmp
lret
and
leave
xor
pop
adc
inc
enter
in
mov
pop
pop
jae
pop
push
fsubrs
push
jo
movb
xlat
stc
mov
add
push
push
movsb
or
add
adc
fists
adc
jae
push
ljmp
inc
sub
iret
or
sarb
lret
shll
inc
jns
ds
mov
xor
xor
gs
pop
dec
push
out
inc
lods
outsl
ja
sbbb
xor
dec
or
pop
xchg
repz
mov
mov
cmc
mov
es
jle
sub
push
push
movsb
mov
mov
popl
adc
daa
jg
xor
out
jl
mov
pop
jmp
cs
mov
aaa
enter
xchg
xor
mov
lcall
inc
push
sub
xchg
data16
jg
rorb
xchg
popa
jecxz
or
dec
jp
insl
cmc
xchg
sahf
stos
mov
push
cmp
and
out
xchg
pusha
adc
jmp
mov
js
mov
daa
add
mov
sbbl
mov
pop
and
lret
fsubs
pop
and
stos
mov
push
inc
jne
or
mov
pusha
ja
or
xchg
ss
rcrb
xchg
dec
add
fisubrl
mov
std
sahf
out
inc
pop
add
mov
mov
sub
pop
mov
mov
mov
addr16
dec
push
into
clc
jmp
sub
mov
aad
cmp
push
xchg
push
mov
mov
and
add
mov
movsb
pop
mov
loop
cmp
push
popf
inc
fcoms
lcall
adc
lods
hlt
and
call
inc
dec
les
aas
imul
xchg
ds
mov
adc
or
ret
pop
js
push
adc
iret
cmpsl
es
bound
push
dec
pop
add
mov
insl
mov
and
xchg
cwtl
sub
xor
sub
rcrl
xchg
out
daa
pushf
call
lcall
push
jecxz
mov
fnsave
test
push
xor
dec
pop
dec
aad
xchg
sahf
stos
jle
and
xchg
jbe
mov
pop
pop
dec
cmp
cli
mov
ss
inc
gs
testb
mov
fists
mov
sbb
icebp
xchg
pop
in
jb
push
mov
dec
mov
mov
adc
dec
mov
dec
outsl
inc
aas
sbb
inc
add
pop
push
sub
mov
std
sbb
out
pop
pop
in
mov
js
sbb
pop
dec
lret
imulb
xchg
shl
cs
push
dec
push
inc
in
jge
xchg
in
loope
adc
pop
negb
push
lods
std
xchg
adc
dec
mov
fs
push
sti
cmpsb
sbb
sub
ja
xchg
mov
cmpsl
jae
add
push
xchg
mov
push
sti
es
cmc
lret
test
or
sahf
imul
push
jg
adc
ja
mov
jg
mov
enter
xchg
movsl
mov
lods
flds
dec
les
sti
xchg
xchg
or
outsl
in
mov
or
mov
xor
push
les
iret
scas
jg
push
cmp
insl
mov
loop
dec
es
fdivs
or
sbb
jecxz
and
sbbl
arpl
out
dec
cmp
xor
dec
add
push
jg
test
and
adc
add
fistpl
jmp
pop
sub
push
es
jae
mov
fsts
lock
testl
imul
subb
mov
gs
push
cs
sbb
lcall
sar
add
xlat
sbb
cltd
adc
lods
dec
mov
xor
test
outsb
lcall
pop
jp
lret
fcmove
sbb
pop
pop
orl
jne
adc
pop
ds
jge
mov
mov
fdivl
adc
push
test
xchg
lods
mov
cmpsl
mov
or
rcl
lods
add
movsb
lock
inc
dec
jno
pop
in
int
in
cld
addr16
repnz
or
mov
iret
dec
sbbl
jnp
xor
mov
pop
mov
push
and
in
dec
faddl
mov
dec
xlat
xlat
add
outsb
mov
ficoml
testl
xor
jmp
cmp
xor
stos
test
or
pop
mov
pop
out
cs
lods
or
mov
mov
push
enter
jmp
out
insb
lahf
cs
sub
loope
scas
jnp
fcompl
ret
dec
sbbb
or
aaa
mov
xor
pop
icebp
jl
cmp
out
pop
test
les
inc
xchg
lcall
in
in
jnp
cmpsb
jns
push
adc
roll
call
inc
in
cmp
es
loop
cmp
dec
dec
fisubrs
movsl
in
add
mov
mov
aad
push
es
loope
ja
mov
push
aas
bswap
push
insb
or
xchg
leave
es
dec
repz
rep
outsl
test
mov
push
sbb
add
cmp
test
inc
add
inc
push
fbld
mov
sub
ja
add
out
out
leave
sbb
ret
dec
push
fwait
ljmp
repz
fwait
pop
lea
inc
clc
sub
pop
popa
sbb
push
mov
inc
jo
popf
mov
cmpsl
in
psubusb
push
and
sti
outsl
iret
mov
es
enter
pop
aas
cmc
sbbb
jg
mov
fucom
mov
jl
std
push
pop
movsl
pop
je
ds
rcr
adc
inc
sub
hlt
sarb
sub
jmp
mov
lods
fcomps
mov
clc
in
fcoms
dec
sbb
mov
xchg
imul
mov
das
push
je
in
popf
pop
dec
nop
mov
mov
fisubl
imul
mov
xor
jno
xchg
nop
aas
subb
sub
dec
and
push
cmpsl
mov
rol
sbb
adc
js
movaps
imul
mov
scas
mov
fucomi
rcl
shrl
cmp
and
add
pop
scas
push
mov
inc
es
clc
cli
fsqrt
enter
das
push
sub
cltd
push
xchg
pushf
scas
fs
jb
ljmp
pop
add
outsl
pop
lods
filds
jg
mov
adc
loopne
pop
mov
push
ljmp
shlb
jle
xor
push
jmp
cmp
popf
aam
mov
jnp
pop
in
sarb
push
cmp
lret
jle
loopne
mov
or
test
jp
cmp
jb
and
fdivr
xor
filds
jbe
jl
data16
sub
cmp
out
jp
leave
mov
jbe
jnp
lock
xlat
cltd
sahf
mov
in
mov
cmc
pop
sbb
insl
mov
sbb
inc
xchg
adcl
and
push
lcall
lds
mov
mov
cwtl
sbb
stos
ds
out
pop
add
stc
roll
mov
mov
and
fwait
jne
in
daa
iret
add
je
xchg
add
test
ss
and
xlat
xchg
sbb
adc
add
aaa
fsubr
inc
inc
sbb
pop
mov
shlb
dec
add
mov
sub
inc
jae
pop
jl
fcoms
outsb
daa
mov
imul
mov
stos
or
mov
imul
sub
leave
push
ljmp
pop
pusha
lahf
lods
and
lock
push
insl
insb
icebp
fs
lahf
fwait
imul
push
jg
push
add
lea
jno
ljmp
lods
xchg
pop
mov
int3
test
out
adc
out
mov
test
sub
movsl
inc
push
lret
mov
jl
mov
into
fcmovb
sbb
ret
mov
lcall
frstor
xor
hlt
adc
out
mov
test
push
mov
outsl
xor
out
imul
inc
pop
push
data16
mov
xchg
clc
fcomps
test
jo
xchg
fs
mov
pop
cli
clc
inc
repnz
mov
dec
inc
out
mov
sbb
dec
mov
jmp
sbb
adc
popa
pop
sti
adc
mov
scas
jb
testl
shlb
insl
das
ljmp
fbld
ds
ljmp
dec
or
idiv
mov
mov
push
cmp
jnp
pop
mov
and
aad
sbb
cmpsl
dec
cli
mov
bts
ja
mov
sub
in
out
sti
or
xor
cmc
andl
mov
mov
sbb
mov
push
inc
sbb
out
xor
sbb
jg
xchg
in
in
pop
outsb
mov
jb
icebp
add
fstpt
mov
and
push
inc
mov
arpl
xor
mov
mov
sbb
sbb
iret
fnstsw
and
into
fldenv
iret
loopne
or
incb
popf
loope
jl
fisubl
clc
dec
jbe
mov
mov
push
addr16
push
mov
add
popa
adc
and
andl
sub
das
mov
cmpsb
mov
cmp
pop
push
div
cmp
mov
fxtract
daa
add
push
stc
shr
add
dec
repz
jns
out
iret
mov
aaa
xchg
sub
sub
sub
dec
into
pushf
cmp
pushf
mov
mov
mov
fcmovnbe
ss
push
sbb
stos
pushf
dec
es
in
in
sbb
inc
je
insl
adc
mov
fs
and
in
push
sub
sar
gs
cmp
jno
add
rcpps
mov
adc
loopne
mull
lret
insl
gs
les
jo
lahf
and
mov
mov
pop
xor
insl
pop
rolb
adc
cmp
xor
mov
cmp
out
mov
xor
cmpsl
dec
pop
or
test
jg
mov
push
out
ret
and
jo
inc
in
mov
out
xchg
push
push
push
jo
js
mov
sub
clc
pop
jge
fidivs
into
in
loop
sbb
cmpsb
shrb
icebp
into
adc
push
in
cmp
xor
jl
stos
jge
adc
in
sbb
xchg
cld
mov
cmp
pop
xor
test
cmp
jp
sub
mov
pop
sub
aas
sbb
lds
loopne
icebp
adc
ret
push
cmp
dec
xor
mov
lods
mov
and
lahf
out
lcall
std
int3
mov
push
dec
jmp
and
cli
sbb
or
cltd
out
test
cmp
fisubs
ret
cli
mov
ljmp
jae
dec
push
dec
test
push
lret
dec
cmpsb
inc
lea
and
and
dec
sub
dec
adc
inc
outsb
in
cmp
xchg
dec
xchg
mov
popf
rcrb
xchg
jb
hlt
add
outsb
xchg
pop
mov
fwait
or
add
dec
insb
inc
xchg
out
pop
ret
xchg
popf
addr16
lock
dec
pop
mov
dec
arpl
jns
mov
push
jae
lcall
and
mov
pop
outsl
adc
add
inc
testl
div
nop
aam
jecxz
popa
pop
dec
imul
rorb
fucomi
dec
xor
sarl
xchg
jecxz
or
inc
into
test
xchg
or
inc
sub
popf
nop
mov
das
push
pop
scas
add
lahf
push
adc
mov
imul
or
scas
pop
add
mov
popf
loope
shufps
or
mov
pop
and
dec
xor
cmp
cmp
add
hlt
imul
xor
xchg
jp
inc
shll
lds
push
popa
in
mov
dec
call
adc
mov
lock
nop
fcoml
aam
pop
push
xchg
decb
xor
pop
mov
stc
shll
dec
mov
mov
out
es
movsb
in
xchg
fisttpll
jns
push
or
jns
test
sbb
pushf
les
fwait
jb
sbb
cld
cwtl
loop
loope
and
lahf
inc
pop
adc
les
in
dec
dec
or
inc
adc
loop
push
lds
sub
sahf
xchg
mov
test
xlat
sub
push
in
sbb
mulb
sub
push
pop
jb
mov
cwtl
cwtl
sbb
xchg
pop
mov
in
push
imul
dec
sub
sub
jmp
mov
mov
sub
stc
scas
inc
pop
push
jge
cmp
je
and
jge
mov
xor
jmp
arpl
lahf
or
movsl
movsl
fwait
pop
xor
clc
mov
ret
pop
inc
jle
ret
sbb
stos
aaa
fucomi
pop
mov
sbb
icebp
fcmovu
mov
cli
inc
idivb
outsb
jae
push
fildl
in
into
xchg
ja
pop
inc
jmp
adc
lods
popf
jmp
dec
lock
in
cmp
test
imul
mov
insl
add
outsl
jbe
cmp
jp
pop
xlat
cltd
dec
fisttpll
mov
xlat
test
vpcmpeqd
daa
pop
test
adc
and
inc
cmp
push
lret
xchg
int
call
inc
mov
push
inc
dec
mov
mov
fdivs
sub
push
and
or
lcall
xchg
jae
pop
mov
inc
xor
negl
pop
or
mov
add
dec
xchg
jecxz
sbb
lcall
push
subl
shl
jmp
cmpsl
and
cmp
out
mov
mov
lret
fistpl
loop
fcoms
add
mov
insl
jge
sbb
pop
xchg
cltd
jmp
push
push
pop
or
cmpsb
mov
cli
mov
lea
lods
jnp
inc
mov
jg
mov
aad
xchg
xchg
pop
add
jecxz
inc
and
sbb
out
loopne
jbe
movsb
xor
aaa
xchg
or
jecxz
push
pop
dec
ja
mov
fistl
cmp
pop
xlat
sbb
sahf
cmpsb
jecxz
daa
fwait
push
lods
pop
stos
arpl
scas
ret
popf
mov
lods
pop
dec
inc
scas
rep
pop
testl
test
out
mov
adc
push
roll
je
dec
loope
loop
lret
cmpsb
cltd
je
dec
aaa
stc
daa
sub
jbe
cmpsl
push
in
aaa
xor
daa
adc
and
sbb
fiadds
orl
shl
std
push
pop
cltd
push
std
mov
stos
and
push
std
xchg
mov
pop
add
cwtl
add
nop
mov
jae
mov
pop
std
push
jae
pop
or
push
jg
and
ficoml
jb
mov
addb
dec
imul
out
pusha
xchg
xor
jnp
insb
loopne
lods
out
pop
lret
cmp
xor
rclb
inc
mov
out
adc
out
popa
outsl
daa
mov
mov
clc
out
mov
push
xor
xlat
mov
and
mov
adc
sub
daa
sbb
aas
mov
add
test
or
dec
outsb
stc
pop
dec
dec
inc
imul
xchg
xchg
push
dec
xchg
das
mov
lock
or
stos
xchg
push
jmp
add
rorb
dec
cmpsl
push
repz
in
in
mov
sbb
dec
gs
idivb
or
add
mov
mov
sbb
add
stc
ljmp
jb
scas
clc
aaa
imul
mov
sub
shll
mov
fsubs
jnp
push
dec
sub
jecxz
in
or
push
dec
imul
and
out
cmpsb
shlb
push
pop
xchg
jp
sub
rcrb
lds
and
lcall
xchg
or
fimuls
push
jns
shr
sbbb
jmp
push
pop
lods
cld
inc
hlt
cmp
jl
adcb
nop
stos
lods
in
aaa
pop
push
inc
jo
or
mov
ljmp
cli
cld
lret
lahf
inc
pop
aad
sbb
or
cltd
imul
mov
mov
pop
pushf
xorl
or
jno
test
push
das
sub
aam
mov
jne
cwtl
mov
movsb
imul
sbb
ret
fidivs
sub
pop
mov
and
stc
sbbl
dec
out
out
sub
inc
push
aas
dec
cli
push
sub
shrb
pop
ljmp
inc
mov
jb
adc
ljmp
mov
cmpsb
pop
dec
dec
jle
sbb
adc
lods
es
mov
lret
jb
dec
mov
faddp
mov
mov
xchg
aad
lods
fxch
push
sar
xor
jae
push
pop
movsb
aas
pushl
sahf
xor
pop
xlat
or
sarl
int
daa
stc
and
frstor
dec
aas
and
sbb
rclb
subl
dec
adc
and
mov
add
inc
xor
shrb
fbld
mov
out
popaw
xor
mov
lret
aad
loopne
daa
jae
and
mov
das
jno
sbb
mov
clc
dec
sub
pop
inc
cmp
int
stos
adc
cmp
fnstcw
idivl
lcall
aaa
sub
lcall
test
rol
lret
stc
push
mov
jno
push
mov
nop
fcomi
pusha
jae
clc
popf
push
outsb
cli
add
jge
mov
xchg
pusha
aas
imul
xor
sub
add
out
outsl
or
dec
or
push
mov
dec
mov
scas
and
jbe
ljmp
popf
push
add
mov
cmpsl
arpl
xchg
jp
push
jbe
mov
lcall
push
icebp
addb
das
cmp
cwtl
push
push
sbb
in
cmp
sti
xchg
movsl
dec
lock
cmp
ficomps
iret
into
aam
arpl
scas
sbb
shlb
pop
lret
nop
xchg
sarl
repz
jge
in
aam
xor
xor
out
lret
lret
or
pusha
adc
xlat
cs
jae
and
mov
jecxz
push
adc
test
shlb
dec
sbb
mov
pop
pop
sub
pop
push
in
xchg
stos
pop
cmp
int
rcrb
mov
jbe
jge
scas
cmpsb
xchg
dec
repz
cmp
movl
xor
mov
outsb
push
pop
sbb
mov
dec
fists
hlt
test
cmp
sbb
stos
sub
dec
mov
shl
aaa
jl
and
incb
sub
mov
mov
fcoml
cmp
aam
loope
in
sbb
mov
mov
jne
into
pop
add
int
das
sbbb
sbb
pusha
xlat
or
jl
shlb
jbe
mov
in
xor
in
mov
or
mov
cltd
mov
or
outsl
fistpll
jne
mov
jbe
add
fnsave
cmp
sub
out
mov
sub
ror
xchg
mov
lcall
cmc
adc
out
out
sub
adc
test
mov
faddl
daa
decl
mov
aaa
push
nop
xchg
clc
mov
inc
lds
xchg
xchg
pop
dec
jl
lea
add
sti
xchg
ss
ljmp
insb
push
fnsave
ja
cli
cwtl
ds
sahf
mov
sbb
rorl
rcrb
pushf
jnp
mov
insb
sub
push
push
or
xor
pop
sub
fbstp
jbe
les
jecxz
mov
mov
iret
jno
fmuls
cmpl
testl
lahf
cwtl
fisubrl
outsb
lds
icebp
inc
setle
inc
mov
enter
jl
adc
cmp
cmp
lcall
clc
jne
mov
jb
imul
lock
push
adcb
lret
insb
mov
out
ljmp
mov
push
ja
lahf
mov
icebp
pop
xchg
inc
jo
fwait
sti
fists
lret
mov
into
or
dec
icebp
dec
push
sbb
adc
mov
arpl
xchg
xorb
scas
lock
fldt
aaa
in
decl
add
sub
adc
sub
test
pushf
dec
xchg
imul
std
lret
mov
pop
mov
cmp
mov
subb
pop
dec
mov
inc
repnz
jg
jne
jne
es
push
dec
fidivs
jns
arpl
add
adc
shrb
inc
add
xchg
fidivrl
inc
sub
or
imul
testl
mov
aas
add
clc
jmp
rclb
jb
mov
pop
test
jns
add
cli
or
cs
testb
aad
push
jmp
xor
xchg
inc
adc
imul
stos
dec
lock
fstpl
out
mov
fcoml
or
rorb
cli
scas
ror
fwait
test
imul
subl
loop
mov
cld
ss
mov
mov
insl
and
les
and
loopne
loopne
cmp
mov
sbb
mov
sbb
es
sbb
xchg
inc
dec
push
enter
mov
jmp
xchg
dec
jl
test
mov
loop
ljmp
jl
jp
add
pop
in
divb
jb
sub
test
cltd
dec
pushl
add
aam
mov
popf
inc
sbb
jo
imul
inc
mov
mov
std
xor
dec
inc
xchg
mov
loope
movsl
loopne
cmp
mov
push
push
es
push
lcall
fwait
movsb
mov
pop
lcall
jp
movsl
sub
and
stc
scas
dec
dec
or
cmc
mov
mov
aam
insl
push
jbe
and
pusha
shl
jecxz
aas
pop
nop
xchg
test
inc
sti
cmp
jmp
fdivrs
pop
xor
fsubrs
or
lahf
loop
imul
jg
js
mov
movb
cwtl
jns
int3
pop
xor
movsb
sbbb
mov
inc
mov
mov
sub
cmc
cmp
xchg
push
imul
push
inc
mov
cmpsl
andb
inc
daa
loope
push
and
xor
out
jmp
cmpsl
movq
out
movsb
ja
loop
mov
and
movsb
loope
pop
xchg
mov
or
xchg
sub
mov
cmp
and
test
mov
jge
pop
lcall
xchg
mov
insl
cmp
xchg
cmp
in
test
shlb
cmpsl
mov
jge
inc
shrb
je
and
negb
sub
imul
cmp
mov
rcrb
lahf
pop
test
stos
inc
nop
lock
pop
dec
push
jp
bound
dec
mov
sub
jl
mov
test
sub
loopne
dec
cmc
push
cmc
cmp
add
fadd
push
cmp
fcmovne
sub
push
jno
jge
lret
sbb
adc
mov
fdivrl
mov
cmp
data16
aam
add
outsl
sub
or
cmp
push
mov
push
sahf
lds
dec
cwtl
fistpl
nop
xchg
sub
mov
pop
je
outsb
cwtl
pop
mov
lods
xor
xchg
jl
int3
and
sub
jo
and
sbb
in
call
fdivr
pop
mov
rorl
sbb
lods
es
or
out
pop
xchg
mov
movsl
cmp
xchg
jo
mov
mov
sub
repz
jmp
movsl
dec
in
mov
mov
push
push
stos
cmpsb
xor
cmc
sub
add
adc
mov
bound
mov
cwtl
xchg
shl
mov
and
sbb
jae
pop
popa
outsl
sub
add
aaa
xor
add
sbb
fdiv
pop
jb
sbb
stc
adc
push
mov
mov
pop
fs
fsubs
and
jg
sahf
popf
in
push
pushf
fldt
mov
sbb
dec
sbb
fld
xchg
lods
xchg
dec
out
dec
cli
mov
pusha
movsl
lcall
cmp
mov
sbb
pop
and
dec
repnz
mov
push
and
pop
and
jo
leave
pop
mov
xchg
repnz
mov
ret
lret
ds
xor
andb
sarb
lahf
data16
sahf
add
pop
gs
aaa
sti
scas
fimull
sub
xlat
or
sbb
sar
dec
dec
cmp
out
inc
jle
movsl
fcomps
cld
clc
aaa
mov
xchg
push
test
hlt
insl
dec
inc
jb
rcrb
pop
test
es
jne
xchg
cltd
and
fcomps
frstor
mov
push
loope
test
sbb
stos
mov
pusha
or
in
mov
loop
jo
dec
pop
cmp
js
icebp
daa
dec
jp
sub
bound
push
out
mov
outsl
xor
jb
aaa
shrb
jns
xor
sbb
stos
push
decb
das
ljmp
dec
cld
or
lahf
pop
fstps
test
cmp
push
adc
push
pop
dec
mov
pop
je
mov
and
or
clc
mov
rcl
mov
loopne
clc
sub
xor
and
inc
loop
push
in
add
test
addr16
mov
addr16
add
and
nop
xchg
cltd
sbb
test
stos
insl
jne
jnp
sub
fidivrs
dec
into
bnd
and
rorb
inc
imul
dec
repz
incb
cmpsb
stos
dec
sti
pop
pop
test
inc
rcr
cmpsb
jno
pop
dec
xor
mov
or
jecxz
mov
movsl
pop
imul
cltd
mov
mov
cli
mov
mov
mov
dec
jl
and
je
xchg
js
adc
add
data16
lods
dec
in
cmc
jge
xchg
sub
mov
mov
cs
shrb
xchg
push
popa
es
push
lret
pop
lcall
xchg
add
dec
orb
ljmp
push
pop
movsl
mov
popl
into
fmulp
iret
sub
mov
sub
sbb
repnz
add
inc
add
rcll
in
std
sbb
mov
call
push
movsl
sbb
xchg
sub
test
xor
inc
adc
jo
and
je
cmc
loopne
xchg
xchg
les
call
jns
in
adc
jne
loope
in
imul
mov
jbe
adc
mov
scas
hlt
fists
push
pop
sahf
cli
enter
les
xchg
sub
push
cltd
stos
mov
pushl
ljmp
ds
test
fwait
cwtl
faddl
stos
adc
filds
jae,pn
pop
inc
xor
jae
xor
aaa
mov
push
jno
std
and
mov
fsubrl
dec
add
sub
lret
mov
mov
pcmpgtd
sbb
jle
ret
loopne
pop
test
jo
xor
xchg
orb
cli
lret
lret
jae
push
pop
or
cmp
adc
rcrb
rclb
stc
ja
jmp
xchg
add
movsb
testb
js
adc
lods
pop
xchg
fcmove
xor
mov
xorb
pop
adc
hlt
mov
pop
enter
leave
push
cwtl
aad
push
inc
push
push
cmp
ffree
add
xchg
sub
cld
iret
xchg
cmp
pop
scas
cmpb
mov
dec
xchg
pop
mov
ds
xchg
cltd
mov
fstpt
pop
sti
test
call
or
iret
stc
push
push
call
cmp
stc
sbb
inc
push
into
daa
into
pusha
cmp
dec
inc
rclb
sbb
adc
cmp
sub
sti
popa
mov
mov
mov
out
xchg
push
and
ss
das
pop
or
cmc
mov
fidivrs
insb
pop
iret
loope
cmp
imul
aam
inc
jne
addr16
pop
add
pop
and
add
xor
mov
std
fsubrs
cmp
push
aaa
dec
sub
sub
std
imul
fdiv
add
fidivs
or
stos
sahf
sub
icebp
xlat
jbe
lea
stc
xor
jne
and
inc
pop
loopne
or
mov
mov
pop
sub
arpl
das
sahf
push
fxch
mov
or
mov
dec
inc
int
lret
je
cmpsb
mov
notl
sti
xchg
jmp
push
mov
das
insb
xchg
pop
push
int3
popf
lods
imul
rcrl
adc
sub
lods
push
pop
add
add
push
loop
ja
mov
mov
adc
mov
lods
pop
cmp
pop
cmp
mov
adc
clc
pop
inc
or
mov
adc
fidivrl
out
movsl
fimull
push
push
and
xlat
lcall
pop
jnp
imul
test
cmp
inc
int
push
jne
std
push
ret
rolb
sbb
sub
out
aam
add
arpl
and
xchg
push
insb
rorl
in
loop
pop
xchg
aas
fisttpl
mov
cmpb
jbe
jae
jo
sbb
rol
pop
xchg
xor
dec
mov
pusha
leave
push
mov
jg
js
sbb
mov
mov
push
pop
add
jp
inc
popa
popa
sub
mov
nop
xchg
fcoms
jg
mov
arpl
ljmp
aad
push
inc
or
jne
ficomps
xor
cwtl
jb
inc
or
push
cmp
loope
adc
leave
orb
add
pop
outsb
lods
loope
jg
fwait
bswap
mov
xchg
test
mov
push
cmp
sub
rcll
cltd
ljmp
sbb
xor
lods
out
pop
mov
fistl
push
sub
mov
lret
adc
insl
cmc
mov
leave
cmp
shlb
xchg
testb
icebp
jb
bnd
fldt
mov
loopne
xchg
ja
addl
adcb
ficoml
adc
andl
push
sbb
or
xor
ret
sbb
loope
test
mov
inc
aas
sub
shrb
inc
faddl
repnz
cld
fildll
mov
sbb
cli
adc
xchg
jecxz
int3
adc
xchg
xchg
pop
push
cmp
call
or
mov
add
test
sub
repnz
scas
shll
fsubr
fsubrs
adc
loop
adc
or
lea
mov
addr16
adc
sub
add
mov
test
add
add
data16
jp
sbb
cmp
int3
jbe
adc
std
inc
lcall
jae
pop
repnz
mov
fildll
aad
push
cmc
xor
or
insl
setb
mov
mov
or
stc
pop
xlat
call
movsl
xor
sub
jl
sub
inc
hlt
clc
movl
call
push
sub
icebp
frstor
cld
dec
xor
xchg
add
jmp
mov
push
xchg
lret
lds
in
addr16
mov
xor
lret
push
and
lcall
mov
pushf
notl
int
fistl
push
push
inc
mov
push
aam
xchg
hlt
lds
push
stc
pop
xor
pushf
mov
jne
mov
jns
leave
test
and
sbb
jg
xrstor
js
push
insl
xchg
ss
mov
pop
inc
or
sub
add
add
lods
aas
shrb
adc
ss
jns
inc
xor
out
subl
cmp
cmp
dec
cmp
es
cli
iret
outsb
aas
psadbw
sahf
enter
mov
mov
cld
add
xchg
sub
xchg
add
dec
xor
in
mov
xor
in
jo
testb
nop
mov
fwait
cmp
jmp
inc
cmpsl
push
push
jle
cmp
divl
pop
sub
lds
pop
sub
fisubl
loope
mov
pop
inc
cmp
lock
sbb
mov
dec
int
js
pop
sbb
cmpb
jno
loop
inc
popa
fmuls
cmp
pop
mov
test
in
lret
cmp
test
loope
add
loop
pop
push
push
sarl
jb
and
mov
sbb
xor
sahf
fildll
sub
add
adc
mov
int
and
loope
push
push
xchg
xchg
push
inc
sti
aad
and
insl
jmp
dec
sub
add
push
test
daa
lds
pop
mulb
jo
clc
imul
cwtl
imul
idivl
dec
add
inc
dec
sarb
test
hlt
mov
mov
pop
push
add
cmp
and
aam
lea
mov
ja
pop
sub
test
dec
and
test
fxrstor
bound
rcrb
scas
rol
int
lods
mov
pop
lret
cmp
jnp
jmp
in
lock
cltd
inc
loope
adc
mov
pop
lahf
add
mov
gs
pop
mov
dec
jno
lea
lods
inc
dec
fistpll
mov
dec
aam
adc
adc
inc
sti
inc
test
or
mov
mov
sbb
mov
dec
lcall
pop
call
adc
mov
movsl
cltd
loop
lcall
sarb
out
je
dec
icebp
dec
pop
in
cmp
fwait
mov
js
pop
stc
or
pusha
adc
inc
inc
leave
jp
popf
out
popa
or
add
adc
or
inc
push
fistps
mov
loopne
adc
aaa
xor
dec
lcall
add
adc
out
int
inc
sub
fmuls
insl
and
push
int
stc
xchg
das
in
movsb
lds
sub
mov
movntps
or
scas
ss
fwait
mov
push
mov
inc
mov
inc
nop
stos
outsl
in
xor
pushf
mull
jne
movb
push
xlat
dec
or
pop
rcll
sub
mov
fdivs
test
pop
mov
and
shrb
mov
adc
into
jo
inc
sahf
add
xchg
and
test
lea
sub
repnz
int3
or
cltd
scas
outsb
lea
dec
push
jno
ss
scas
xchg
dec
or
inc
test
mov
scas
in
jae
sbb
sub
sub
lret
jecxz
repnz
daa
bound
mov
jne
pop
imul
inc
test
scas
pusha
addl
pop
push
stos
in
lods
mov
xor
and
pop
push
inc
mov
rol
aam
loop
xlat
push
jg
loope
insb
inc
mov
js
stos
ljmp
or
ficoml
cmp
mov
dec
dec
pop
inc
and
adc
mov
pop
lea
mov
push
aaa
aas
ffree
xor
inc
sbb
jnp
dec
adc
and
out
stos
and
sbb
fstpt
pop
rorl
insb
pop
ljmp
lods
std
call
mov
and
imul
mov
jo
or
add
sub
sub
push
xchg
add
push
aam
icebp
mov
xor
in
lret
or
lock
add
or
fadd
push
lea
insl
adc
mov
ret
pop
adc
or
ja
pop
fisubrl
mov
lahf
sbb
into
dec
lods
sbb
or
pop
mov
inc
mov
cmc
ds
testl
inc
fildll
ja
jl
sbb
fidivl
popf
stc
aam
mov
xchg
enter
leave
loopne
lods
push
mov
and
clc
cmpsl
mov
jnp
lcall
pop
fidivrs
push
inc
aas
sbb
cli
repz
add
add
dec
enter
cmp
out
insl
cmc
dec
inc
aam
mov
sbb
adc
dec
and
popf
test
mov
sti
push
push
outsl
divb
mov
cs
mov
adc
jge
jns
and
add
inc
add
mov
push
xor
jp
lods
adc
lcall
xor
adc
out
and
int
push
xchg
mov
sarb
mov
stc
mov
sbb
lahf
mov
jecxz
insb
out
or
fucomp
sub
xor
dec
std
jl
stos
dec
cli
sub
dec
mov
aas
lahf
fnsave
arpl
sub
mov
xchg
and
mov
idivb
inc
mov
pop
aas
fcomps
leave
es
addr16
stos
rcll
shll
pop
sub
clc
out
stos
fstl
sub
popf
pop
dec
je
pushf
pop
jmp
or
cltd
hlt
sahf
in
mov
mov
cmp
adc
xchg
ds
dec
adc
mov
out
mov
cmpsb
shlb
lods
orb
mov
xor
loope
pop
and
dec
int3
dec
xor
jecxz
iret
inc
in
rcrl
out
popf
mov
pusha
lret
ljmp
insb
cmp
scas
mov
sbb
jne
pop
incl
mov
popa
jb
ret
jo
sahf
scas
sub
mov
xchg
cli
loopne
sbb
lret
fs
push
mov
cld
mov
sbb
fsubrs
adc
and
pushf
nop
test
cmp
repnz
fldt
sbb
es
jecxz
lds
cmp
test
mov
mov
sbb
mov
add
xchg
adc
lods
and
pop
jle
jg
ret
mov
mov
sub
movsl
fstpl
rcll
push
pop
stos
addps
es
xchg
adc
xor
data16
nop
cmpsl
mov
movsb
stc
cmp
pop
xor
dec
dec
repz
daa
sub
mov
push
mov
xchg
push
hlt
es
pop
cmp
aaa
cmp
push
loopne
js
lcall
xchg
movsl
subl
cwtl
push
dec
xorb
orl
and
xor
ljmp
iret
cmp
adc
and
mov
or
sbb
pop
adc
call
mov
lock
clc
aad
loope
lea
mov
popf
andb
nop
or
rorl
add
xchg
inc
inc
xor
dec
mov
aam
adc
aaa
cld
mov
cmp
dec
cs
cmp
aaa
fadds
mov
test
out
mov
lea
mov
fcmovnb
mov
xchg
cmp
insw
loop
cltd
repnz
fists
inc
lods
stos
ds
lods
sub
mov
fmuls
gs
mov
push
orl
or
jg
dec
and
lcall
jmp
and
daa
movsb
jmp
push
mov
cmpsl
loop
xchg
aaa
inc
xchg
mov
xor
sahf
or
mov
pop
adc
cmp
dec
mov
loop
cmp
sub
in
das
mov
cmc
sbb
aas
sub
shlb
cmp
lds
xor
mov
xor
xchg
push
scas
cmp
movsl
stos
add
or
jbe
mov
lret
in
fcmove
filds
mov
loop
out
cld
pop
mov
push
inc
nop
jns
jl
ror
push
int3
mov
pop
mov
inc
mov
aam
mov
xchg
push
sub
mov
xchg
dec
or
gs
mov
add
stos
in
sbb
fsubrl
jns
in
std
aad
test
out
inc
adc
rolb
out
adc
enter
in
stc
xlat
jg
jle
int3
sub
cltd
stos
xchg
add
aam
fwait
loope
nop
jnp
dec
lods
sbb
xor
iret
jae
out
pop
or
imul
mov
dec
pop
sub
dec
xchg
out
jge
pop
mov
out
rolb
xchg
xchg
xor
mov
hlt
sbb
add
jbe
sahf
and
stc
loope
xchg
in
jno
in
add
negb
pushf
jbe
mov
lret
leave
test
xchg
push
mov
xchg
sbb
xor
lds
xchg
pop
cmc
lahf
out
lret
sti
xchg
inc
insb
hlt
inc
js
stos
sub
cmp
pop
data16
jg
lock
lcall
mov
xchg
iret
cld
movsl
rcll
call
jae
xor
shlb
jge
pop
or
repnz
mov
xchg
in
orb
push
jb
and
or
imul
pop
enter
dec
inc
xchg
leave
inc
hlt
addr16
pushf
out
mov
stos
mov
ret
imul
xor
mov
dec
lock
fs
lahf
push
sti
test
arpl
cmp
stos
pop
lods
pop
xor
mov
dec
jp
add
mov
aad
add
and
inc
in
lods
enter
jb
mov
leave
mov
mov
dec
inc
test
adc
cmp
pushf
adc
mov
cmp
dec
xor
out
popa
into
inc
pusha
lret
add
in
mov
arpl
popf
enter
jg
cmp
xor
add
outsl
lret
dec
pop
push
repnz
push
push
xor
int
mov
sub
rcrl
aam
pop
jns
test
pushf
sbb
jl
mov
test
and
decl
add
or
je
or
imul
pop
and
leave
mov
adc
lcall
in
lahf
add
cli
gs
mov
out
adc
push
sahf
or
lcall
out
xchg
test
inc
push
setns
fcmovnu
add
push
sbb
xorb
xor
sub
mov
or
addr16
mov
inc
add
push
mov
cmpsb
adc
pop
adc
xlat
jle
cld
pop
cltd
enter
cmc
ficomps
mov
movsl
xchg
and
xchg
adc
inc
mov
sets
pop
or
daa
xchg
lcall
pop
repnz
and
or
in
and
cmp
imul
pop
arpl
popa
and
cmp
lret
dec
mov
adc
lods
xchg
push
sbb
mov
pop
ficompl
outsl
clc
sub
js
inc
in
jnp
jle
cmpsl
iret
fiaddl
add
das
xorl
mov
jne
add
cmp
mov
mov
imul
jmp
std
mov
leave
cmp
push
lret
jle
fisttpll
gs
dec
jecxz
int
inc
xor
pushl
adc
xor
mov
add
lret
inc
je
clc
or
in
aam
clc
pop
dec
jbe
cli
sbb
add
mov
xchg
adc
mov
and
ret
adc
aam
cld
jo
arpl
mov
shl
out
cmp
imull
jmp
jbe
fcompl
push
inc
xchg
std
testb
jnp
inc
insb
lds
xor
cmp
ret
lods
inc
call
pop
sbb
cmc
xor
in
hlt
into
jge
es
dec
shlb
dec
pusha
mov
gs
cmpsl
mov
aas
es
pop
leave
std
sbb
jp
insl
and
xor
mov
pop
in
fdivp
dec
adc
add
mov
adc
adc
lods
loopne
inc
and
int
mov
pop
cmp
insb
iret
data16
inc
adc
inc
xlat
leave
mov
sbb
mov
out
in
xor
test
inc
sub
or
ja
call
addr16
push
xchg
jo
cmp
xor
push
mov
push
sbb
mov
lock
daa
sub
fisttpll
js
cmp
jb
fnstenv
test
in
cmp
fcmovne
xchg
xor
pop
repnz
mov
roll
fistps
into
repnz
decb
xchg
imul
push
popa
pop
xchg
cli
lds
ret
lods
mov
sub
and
push
pop
sahf
or
iret
ljmp
pop
push
mov
subb
jbe
mov
mov
lock
adc
repnz
in
insb
sbb
test
scas
sub
adc
dec
adc
sbb
adc
sti
out
fidivrs
ljmp
bound
sbb
movsb
cld
lods
push
or
js
mov
xor
mov
cltd
dec
sub
popa
js
mov
and
inc
sbb
xchg
cmp
sbb
fsubrl
jae
das
sub
stos
push
pop
fadds
mov
dec
mov
dec
lcall
aad
mov
in
sub
pop
popf
out
jmp
pop
rcll
lret
jl
mov
mov
pop
jg
xor
mov
mov
pop
jg
sub
xor
add
jb
sub
lret
loopne
data16
jns
bound
mov
addb
dec
sub
xor
push
and
or
mov
adc
ret
inc
cld
pop
outsb
fisttpll
push
lahf
add
clc
jg
push
outsl
mov
jge
or
bound
neg
cltd
ja
out
rep
int3
pop
push
cmpsb
mov
out
sbb
mov
xchg
pop
mov
sarb
cs
push
aam
in
aas
jns
rorl
pop
nop
xchg
sbb
xor
mov
jle
mov
and
jmp
loopne
dec
js
pop
pusha
pop
and
decl
pop
mov
push
test
sbb
sti
cld
add
push
jle
add
xchg
mov
sahf
out
sub
les
daa
xor
xchg
cmp
neg
push
scas
or
sub
cmp
cmp
and
cs
dec
push
xchg
cmpsb
sub
lea
je
cmp
and
add
mov
ss
mov
dec
cmp
adc
or
and
jbe
adc
into
adcl
test
test
call
sub
out
int
push
ret
and
in
hlt
loopne
mov
arpl
call
xor
test
xor
adc
sub
dec
sub
int3
notb
fdivs
into
push
mov
mov
mov
mov
ja
int
or
es
add
jle
jle
nop
out
lahf
cmp
push
cmp
push
xchg
or
pop
sub
xchg
cli
xor
lea
jecxz
mov
xchg
add
push
pushf
dec
pop
push
mov
cmp
mov
jle
lock
jo
sub
or
cmp
push
jnp
pop
fs
dec
outsb
jp
int3
mov
sub
inc
int3
xlat
jg
cld
pop
inc
arpl
mov
jge
add
push
sbb
cli
mov
xchg
int
sub
stos
or
ret
sbb
jp
fldt
bound
sahf
daa
ja
adcl
frstor
ljmp
xor
jp
add
cmp
mov
or
cs
sbbb
fwait
adc
add
fldt
mov
mov
add
mov
scas
sbb
scas
lds
and
in
sbb
xchg
incb
jle
sbb
mov
lods
rcll
sub
sarb
mov
cltd
in
outsb
inc
mov
movsl
sbb
mov
mov
adc
stos
cmp
push
mov
in
cmp
mov
xchg
dec
lret
std
pop
inc
popf
pop
pop
fnstcw
sub
enter
push
std
mov
addr16
jb
clc
cli
cmp
xchg
loopne
jle
aam
dec
mov
dec
and
nop
pop
mov
mov
fcompl
je
aaa
orl
repnz
loope
mov
call
pop
cmp
rol
push
sahf
push
push
sub
xchg
sub
dec
movsl
push
mov
or
shrl
sub
jecxz
inc
insb
and
cltd
xor
jle
subl
and
testl
or
ret
sbb
pop
and
imul
mov
test
or
adc
push
out
and
popf
mov
pop
popf
xor
mov
lock
pop
fnstenv
sbb
shlb
inc
out
dec
adc
js
std
adc
cmp
aas
mov
inc
cmpsb
test
xor
mov
idivb
push
test
imul
in
fstl
mov
adc
outsb
adc
imul
test
jmp
out
mov
mov
mov
xor
sbb
dec
loop
roll
and
add
pop
jle
stc
adc
cmp
jne
mov
adc
jg
mov
jae
js
test
xlat
cwtl
in
rcrb
in
jae
inc
sbb
sbb
jg
adc
rcrl
std
and
dec
sbb
inc
and
inc
fldt
and
popa
imul
mov
ss
xor
fbstp
aas
fisubrl
dec
sbb
add
mov
dec
data16
sbb
fdivr
sbb
mov
inc
inc
orl
loop
inc
or
cmp
call
or
sbbl
call
adc
pop
push
iret
mov
add
push
loopne
imull
mov
push
mov
clc
jmp
cmc
push
inc
decb
ficoml
fdivr
ja
xchg
and
sub
mov
faddl
lret
push
mov
iret
addb
out
sahf
sbb
add
pop
cwtl
push
inc
jb
pop
in
mov
repz
in
stos
stos
cmpsl
xchg
pop
pop
test
shl
inc
dec
adc
sbb
pop
stos
inc
dec
incb
mov
dec
pop
sahf
leave
shl
mov
idivl
aad
inc
xchg
mov
dec
jne
mov
sti
pop
jmp
ljmp
ljmp
pop
shll
mov
push
mov
or
cmp
std
push
test
ljmp
ds
add
mov
jg
xchg
sbb
mov
jle
jge
mov
std
icebp
cmpb
iret
sub
inc
xchg
push
push
arpl
mov
ljmp
or
fldt
jg
movl
mov
jae
pop
cmc
ret
add
cmp
into
lods
push
sbb
cmp
scas
xchg
and
incl
cmp
or
jmp
mov
fisubs
pop
mov
or
aas
xchg
stos
sbb
mov
jmp
fcoml
daa
cmp
and
insb
or
push
inc
and
leave
dec
loopne
xor
dec
fsubrs
mov
cs
add
fsubl
and
pop
outsl
das
ds
pop
inc
dec
cwtl
pop
inc
push
cwtl
pop
int
mov
aas
inc
es
sbb
scas
cmp
mov
aaa
ret
pop
sbb
hlt
int
push
mov
or
js
stos
rcrb
pop
stos
or
jecxz
lea
sti
dec
and
dec
insb
fdiv
jl
into
or
adc
in
push
xchg
mov
jge
sahf
pop
xchg
ret
cltd
mov
push
inc
lock
dec
and
into
dec
sbb
aaa
movsl
outsl
bound
mov
out
inc
pop
pop
or
pop
mov
jmp
sub
std
cmp
jp
xchg
ret
test
cmpsl
and
add
and
push
mov
jae
outsl
in
out
outsb
fadds
push
enter
test
mov
repnz
mov
lahf
mov
mov
xchg
sahf
push
mov
ds
fldcw
inc
insl
pushf
dec
dec
ficomps
frstor
dec
xchg
in
jl
std
sub
outsb
daa
xor
adc
pop
into
mov
stos
mov
out
loop
fwait
mov
pop
mov
sbb
out
std
andb
repz
adc
mov
push
ret
xor
add
inc
lods
jnp
and
int3
repz
test
jmp
mov
jne
je
dec
mov
insl
inc
mov
iret
subb
or
mov
sub
rolb
xlat
enter
dec
or
lods
in
xor
xchg
popf
in
or
jle
lret
mov
mov
insb
or
cmp
cli
pop
xchg
sub
dec
cmc
mov
fimuls
mov
mov
lahf
xchg
mov
pop
mov
ret
pop
scas
xchg
xor
sub
jne
mov
dec
sar
mov
fildll
push
hlt
mov
je
push
decl
daa
test
pop
aad
dec
in
pusha
xor
sbbb
xchg
addr16
and
sahf
les
test
cltd
loop
jne
inc
pop
mov
leave
mov
sbb
pop
ja
sbb
les
pop
mov
popf
cmp
or
cmpsl
ret
mov
aam
addr16
scas
lahf
clc
inc
cmp
shlb
into
dec
inc
mov
lcall
shrb
std
daa
mov
sbbl
or
cld
xor
ja
popa
call
fdivs
dec
in
push
sahf
adc
cwtl
xor
xlat
lea
inc
mov
mov
test
jmp
add
mov
loope
mov
inc
cmpsb
mov
xchg
inc
xchg
jecxz
shlb
imul
push
hlt
or
aad
and
lret
inc
mov
js
lret
mov
mov
mov
into
call
adc
jmp
addb
adc
dec
loop
and
mov
jecxz
ds
lods
imulb
mov
andl
push
inc
or
rolb
and
jle
or
and
jmp
lods
das
mov
adc
fldt
sbb
fwait
jno
je
sbb
lcall
fwait
call
jbe
je
dec
subb
add
fsub
call
lret
out
outsb
xor
add
dec
das
add
pop
aam
dec
pop
xor
shr
fsubr
mov
xor
pop
scas
sbb
ret
bound
xchg
or
shrl
jl
mov
sub
and
and
and
data16
inc
lret
cmc
add
xchg
or
mov
arpl
xchg
cmp
mov
xchg
sbb
add
sbb
fucomip
pop
add
mov
add
xchg
jl
addr16
mov
mov
mov
outsl
xchg
movsl
ret
lret
push
push
xor
adc
das
mov
and
add
bound
inc
push
mov
outsb
rorl
xor
and
mov
loopne
arpl
int
sbb
aas
push
push
mov
aaa
adcl
test
dec
bound
idivl
scas
ljmp
fdivrp
lret
inc
adc
jne
roll
insb
jmp
movsb
push
push
leave
imul
rcr
out
or
aaa
lock
or
mov
call
movsl
jbe
stos
inc
pcmpgtd
jo
mov
push
insb
pop
or
loop
aas
shr
imul
test
das
out
inc
mov
xlat
adc
repz
negb
cwtl
inc
lods
mov
jmp
cmp
cld
mov
int3
in
leave
mov
loope
shll
mov
pushl
sbb
stc
fsubs
push
lcall
inc
add
jno
add
int
stc
mov
dec
mov
xor
push
mov
cmpsl
mov
jle
in
lahf
mov
push
addr16
jle
insb
imulb
mov
inc
cmp
push
sti
movsb
cltd
mov
sub
pop
xabort
sar
xor
cmpl
jbe
push
in
out
adc
ljmp
dec
dec
sub
adc
or
inc
stc
cmp
xchg
lahf
fwait
cltd
mov
cli
jmp
push
lods
mov
push
int3
jmp
pop
jae
js
or
int
fmuls
imul
nop
sub
mov
jo
xchg
jb
or
inc
xlat
into
mov
in
jecxz
int
sub
rcrb
lret
jmp
stc
push
cltd
in
mov
or
dec
and
jecxz
call
pop
ret
test
push
jae
push
adc
push
push
jnp
lods
xor
push
mov
sub
call
dec
mov
xchg
mov
push
dec
ret
push
jl
rcll
jne
jb
hlt
sbb
and
das
cmc
addb
out
cli
or
fnstsw
mov
aaa
jecxz
jo
add
test
sub
push
adc
push
add
shlb
and
nop
mov
cmpsb
jb
test
cmpsl
mov
dec
fidivrl
sub
stc
mov
or
jnp
and
xchg
and
or
rcl
push
ljmp
dec
dec
xor
mov
cwtl
dec
imul
aas
inc
dec
inc
push
fldpi
fstpl
or
ja
mov
lret
mov
pop
addr16
push
rorb
ljmp
loopne
iret
adc
or
jno
dec
inc
mov
jbe
les
and
jle
push
nop
jnp
pop
data16
lahf
mov
into
fmul
pushf
xor
push
inc
fisttpl
sub
aam
xchg
cli
pop
mov
inc
xchg
mov
es
into
mov
int
inc
loop
sub
enter
jns
xchg
push
or
jno
rcrb
call
test
adc
stc
push
pop
xor
loopne
aam
adc
rolb
pop
lds
pushf
sahf
add
mov
mov
in
and
sub
loopne
repz
pop
or
dec
mov
xchg
scas
fistpll
inc
pop
mov
aas
arpl
push
loopne
sahf
xor
push
sbb
nop
inc
mov
mov
mov
popa
cwtl
gs
loope
sub
fadd
test
xchg
push
sbb
dec
aam
or
leave
push
lret
test
hlt
pop
mov
hlt
arpl
dec
push
pop
push
xchg
jbe
popf
inc
jecxz
push
insb
add
loope
inc
cmc
in
gs
js
sar
jbe
mov
lods
jl
inc
out
jmp
xor
lods
push
cld
inc
inc
sti
pushf
stc
cmp
ja
sub
test
or
cmp
dec
mov
stos
jle
test
dec
mov
cld
and
daa
sti
ret
mov
lea
sti
adcb
jnp
cmp
roll
jne
xchg
mov
or
xor
stos
jmp
push
aaa
sbb
scas
mov
jge
xor
mov
gs
std
xchg
in
addb
sbbl
inc
push
xchg
mov
pusha
nop
mov
scas
dec
and
sub
imul
adc
pop
sub
stc
sub
or
and
and
mov
lods
scas
pop
cmp
popa
sub
xchg
sarl
loop
lock
es
sbb
mov
sti
inc
cmp
mov
std
das
mov
dec
call
stos
push
mov
inc
insb
sbb
loope
inc
cmc
xchg
inc
mov
hlt
mov
jl
mov
or
pop
inc
cmp
jg
dec
dec
or
test
mov
xchg
pop
mov
dec
into
push
fs
aas
jbe
lahf
sti
lea
mov
pop
add
cmc
sbb
xor
test
mov
shll
and
jo
add
xor
pop
sbb
imul
clc
imul
mov
shr
fisttps
adc
jmp
pop
imul
adc
pop
xor
and
mov
iret
testl
sarb
dec
mov
lods
or
xchg
pop
lret
mov
xchg
or
pop
mulb
xor
jp
in
mov
in
pop
and
mov
adc
das
pop
int
and
or
inc
out
push
mov
xchg
jmp
lret
inc
fwait
jnp
ret
std
xchg
fimull
add
sti
push
pop
sbb
into
xor
mov
aas
gs
aam
push
aaa
sub
push
and
and
sbb
rcll
xchg
mov
xchg
lret
mov
aam
lahf
lret
cmpsb
pop
xchg
ljmp
out
aam
adc
mov
sub
and
jle
outsb
or
and
lods
mov
outsl
mov
addr16
fisttps
or
jb
lret
je
clc
push
adc
push
cmp
jle
fsub
in
dec
lret
dec
lds
lods
xchg
or
xor
mov
sbb
fildl
mov
int
push
push
cmp
jb
xchg
push
mov
fcomps
or
xorb
in
jge
or
test
or
fbstp
jb
add
roll
sbb
mov
jmp
out
sbb
pop
mov
sbb
hlt
cwtl
mov
jp
data16
cmpsb
jb
sub
inc
mov
push
push
ds
push
and
xor
mov
cltd
int3
bound
pop
and
pushf
or
cmp
int
xor
dec
cmp
mov
hlt
mov
mov
add
rcll
jbe
mov
inc
jg
aaa
cmp
sti
push
mov
pop
js
cmp
push
sbbl
jo
in
and
notb
bound
hlt
pop
adc
mov
or
adc
in
arpl
test
inc
cmpb
addr16
fs
dec
and
lods
loop
in
dec
insb
xor
or
xchg
sub
test
add
jnp
fdiv
outsl
jo
dec
pop
fbstp
in
pusha
out
mov
jbe
rcrb
adc
enter
jbe
ret
stos
dec
cmp
stos
xchg
mov
daa
mov
cli
mov
cld
mov
lret
dec
jmp
and
sbb
popa
or
mov
mov
and
inc
in
jbe
pop
mov
daa
insl
jb
icebp
and
aas
mov
mov
push
stos
jg
fadds
movsb
lods
addr16
imul
xor
mov
dec
adc
cmp
sbbb
inc
shl
lret
cld
lods
out
adc
repnz
xbegin
aaa
pop
pop
sub
and
push
fisubl
aam
loopne
cmp
outsl
ss
aam
add
cmp
mov
mov
pop
jecxz
into
iret
or
mov
psubusw
dec
cltd
lahf
inc
mov
inc
lret
jnp
dec
pop
enter
and
add
adc
sbb
out
xchg
sbb
int3
sub
or
jae
psubw
sbb
ja
insl
mov
xor
out
mov
cmc
mov
adc
mov
mov
add
bound
xor
daa
push
lods
mov
jno
test
push
movsl
xchg
pop
adcb
jge
je
inc
mov
adc
lods
add
ret
in
imul
cmpl
xchg
xchg
mov
int3
lds
aam
aas
lds
fldcw
aaa
or
jge
inc
adc
push
sbb
movsl
inc
ljmp
adcl
ret
hlt
sub
ficoml
mov
imul
xor
sbb
cmp
mov
or
lea
add
mov
dec
adc
fldenv
pop
in
mov
insl
cltd
imul
outsl
js
inc
adc
jg
inc
ss
jne
mov
xchg
xor
stos
dec
xchg
jge
ds
dec
mov
insb
xchg
mov
mov
xor
mov
and
push
cwtl
out
pop
fidivrl
ljmp
fwait
mov
lods
fistps
xor
and
push
lods
popa
sarb
imull
and
mov
push
aas
movsl
add
sub
xchg
jp
and
pop
mov
popa
push
shlb
lods
insl
sbb
jecxz
pop
clc
sbb
mov
mov
cmp
sub
cmp
adc
js
cwtl
shrl
test
mov
mov
pusha
jnp
or
insb
and
inc
xchg
xor
cmp
inc
addr16
clc
inc
insl
pop
fnstsw
sahf
mul
stos
and
pop
pop
add
loopne
mov
icebp
ljmp
in
add
push
mull
inc
xchg
jle
jecxz
loope
aaa
pusha
push
sub
inc
mov
lds
fwait
dec
push
jle
or
ficomps
mov
jge
xor
xlat
xor
aas
in
and
sbb
sub
sbb
adc
enter
pop
push
out
movsb
std
sbb
pop
icebp
shrb
pushf
jo
ja
dec
lds
mov
test
sbb
mov
enter
mov
sub
sbbl
mov
movsb
les
xchg
daa
test
lret
scas
std
xchg
dec
mov
xor
xchg
ret
or
mov
repz
push
xor
stos
fmull
add
stc
icebp
adc
fildl
mov
dec
jl
test
cmp
pusha
mov
popf
mov
js
mov
xchg
jmp
pop
loop
lcall
lds
out
popa
inc
mov
and
imul
cmp
xor
xorl
adcb
add
mov
jb
mov
jmp
push
gs
enter
mov
ja
lcall
pop
lds
test
cmp
cmp
jnp
push
adc
cs
jne
and
repz
inc
sub
adc
inc
cmpsl
mov
repz
sbb
popa
inc
ja
add
add
lret
xorb
rcrl
out
dec
inc
dec
xchg
scas
sbb
jo
gs
dec
push
or
clc
mov
push
fwait
pusha
test
or
dec
shll
dec
mov
shlb
pop
ficoml
pushl
ljmp
lret
jecxz
dec
push
fwait
push
xchg
test
int3
notb
mov
and
pop
test
pop
aam
pop
sbb
and
scas
enter
jns
push
je
dec
dec
lock
and
leave
cmp
hlt
push
sbb
movsb
je
aam
aaa
insb
ret
mov
jl
je
xor
pop
mov
aam
jp
mov
dec
xlat
or
add
cmp
fsubrl
mov
push
inc
in
cmp
pop
add
xchg
std
jmp
cmp
ljmp
pop
cli
mov
cmpsb
rorl
movsb
mov
fisubrs
cmp
add
shl
idivl
hlt
fnsave
repz
iret
and
loop
in
dec
lock
push
sarb
pop
cmp
testb
pop
jae
mov
cmc
or
lret
gs
fsubs
ss
dec
sbb
pop
adc
ret
push
dec
popa
dec
test
mov
les
xchg
fildll
add
add
and
nop
std
cwtl
in
pop
lods
xchg
pop
pop
dec
jmp
repnz
data16
lds
repz
sbb
pop
jo
sub
scas
adc
popf
jb
idivb
out
gs
fnop
jae
cmp
mov
cmp
aam
push
insb
dec
das
nop
jp
nop
inc
aas
jl
incb
adc
adc
mov
add
lods
shrl
rcrb
je
sub
and
out
add
cmp
lock
pop
movsb
stc
cwtl
inc
push
xchg
pop
pop
mov
jno
sti
sarb
out
xor
outsb
cli
mov
dec
sti
enter
neg
mov
and
mov
stos
out
sub
sbb
mov
inc
jne
outsb
mov
aas
arpl
inc
call
xchg
xchg
scas
inc
notb
ficoms
jno
pop
sbb
add
jno
lahf
cs
pop
imul
dec
jns
add
leave
jb
xchg
bound
or
lock
lea
cmp
pop
cli
mov
mov
and
scas
mov
clc
incl
or
adc
fdivrl
push
adc
mov
out
pop
fsubrs
mov
jl
pusha
mov
xchg
mov
cmp
stos
mov
jge
hlt
and
adc
xchg
movsl
leave
imul
inc
add
insl
mov
dec
mov
sti
xchg
and
es
xchg
cld
add
adc
nop
cmp
decb
mov
jecxz
test
dec
mov
inc
sbb
std
pusha
mov
repz
lods
cmp
lret
arpl
dec
inc
testl
jecxz
jge
sbb
notb
inc
aaa
in
rolb
push
pop
push
jo
and
loop
add
xlat
pop
mov
aad
sbb
sub
addl
pop
pop
xchg
mov
jne
testl
fstpt
out
ret
out
or
lods
popf
push
mov
scas
jne
gs
call
fwait
xor
sub
lahf
mov
addr16
mov
ffree
lahf
insb
push
push
call
lea
mov
mov
daa
pop
cmp
sbb
loopne
fcoms
in
and
bound
mov
mov
jle
mov
xchg
sti
sub
jp
push
pop
jb
mov
ret
xchg
xchg
pop
jbe
daa
cmp
outsb
dec
jg
dec
xchg
sbb
dec
inc
loopne
aas
add
lret
mov
fidivrs
jne
and
inc
xor
repnz
jo
push
pop
mov
loop
mov
mov
dec
iret
lds
popa
data16
sub
in
jo
in
stc
pop
test
cmp
outsl
in
aam
fwait
lods
mov
push
stos
xchg
fisttpl
rol
test
hlt
outsb
imul
sub
es
pushf
lret
and
adc
push
and
dec
jg
or
mov
lea
xor
imul
popa
js
cs
and
in
adc
cmp
xchg
pop
ret
aas
add
fsubl
je
lds
adc
test
in
xor
dec
push
rorl
jne
mov
inc
das
jmp
pop
mov
pop
add
out
mov
or
dec
int3
pop
add
les
aam
ss
sub
mov
test
xchg
lahf
push
push
jl
adc
sub
test
arpl
adc
fldl
and
jmp
and
sub
or
xor
fwait
test
push
dec
int3
and
aas
shll
fists
into
add
js
shrb
mov
sbb
outsl
jnp
or
sub
mov
bound
mov
xchg
sbb
cmp
testb
lock
data16
insb
ret
mov
arpl
cmp
cs
es
mov
inc
push
or
in
cltd
and
inc
lret
addr16
out
in
stc
xor
mov
gs
aam
mov
inc
cmp
es
sbb
fs
inc
test
add
ret
inc
js
shrl
arpl
add
addb
leave
inc
cmp
cli
cli
lds
cmc
imul
add
test
std
xchg
adc
pop
push
xchg
imull
int3
adc
mov
mov
add
clc
addr16
aas
xchg
aaa
gs
push
inc
dec
sbb
ds
fnstenv
cmc
pusha
int
pop
jmp
shrb
ja
mov
inc
sub
cld
xchg
dec
bound
mov
fs
or
and
mov
mov
inc
xlat
add
inc
add
test
in
xor
bound
movsb
jbe
mov
xor
loopne
hlt
sub
xchg
repnz
push
lcall
inc
and
fldenv
dec
mov
push
das
mov
jmp
out
in
leave
mulb
sti
insb
psrad
fistpll
adcl
pop
in
out
dec
and
das
and
fistpll
inc
sub
popf
popf
ljmp
lahf
cs
fists
xchg
bound
mov
mov
insl
push
out
mov
icebp
imul
pop
into
iret
sub
test
mov
imull
push
movsl
out
rorb
cmpb
adcb
lahf
jnp,pn
xchg
pop
xchg
push
push
or
aas
mov
jb
inc
jge
fcoml
arpl
jmp
xchg
sbb
gs
sub
mov
sbbl
xor
add
add
pop
and
sbb
pusha
loope
dec
rcll
inc
cmpsb
cld
nop
mov
and
shl
inc
add
jb
jmp
and
xchg
in
mov
mov
cwtl
mov
stos
push
jp
mov
inc
mov
pop
test
test
loope
nop
fmuls
jnp
cmp
push
sub
cmp
jmp
sbb
aas
dec
inc
add
xlat
imul
fmulp
mov
xchg
popf
fbld
loop
dec
fcomp
ds
and
sbb
sbb
lahf
mov
xchg
and
mov
pop
and
and
lods
pop
test
pop
inc
cmp
dec
xor
cs
ds
lods
push
jmp
test
verw
cli
inc
and
mov
mov
pop
repz
imul
add
popa
sub
adc
inc
ss
push
out
iret
loop
or
cmp
and
into
clc
mov
push
fwait
pop
dec
imul
cwtl
adc
mov
aad
push
cmp
lret
or
popa
add
cli
or
jmp
decl
and
jae
xlat
sarl
or
sbb
inc
sub
scas
sub
idiv
pop
pop
and
cmp
into
leave
jnp
test
in
or
dec
pusha
arpl
xchg
push
test
rorb
push
in
mov
and
out
bound
lea
subl
mov
ljmp
push
jmp
lods
and
and
pop
sti
xor
jl
repz
sub
leave
ds
jns
push
in
inc
in
scas
mov
dec
or
ret
xor
mov
movsl
mov
testl
xchg
in
rcr
mov
nop
mov
inc
iret
cmc
inc
pop
add
push
adc
push
adc
into
xor
outsb
adc
imul
fwait
jmp
ficoml
rcrl
loope
repnz
das
arpl
gs
rorb
orb
in
push
jbe
outsl
aas
dec
jne
scas
lret
imul
add
and
imul
xor
sbb
cmp
dec
sbb
sbb
ljmp
sub
rolb
xchg
fcom
dec
mov
jae
hlt
inc
pop
loope
cmp
loope
imul
push
and
and
sub
aad
test
xchg
xlat
or
inc
lods
or
adc
sar
fsqrt
lods
mov
shlb
mov
mov
sbb
das
out
scas
dec
std
mov
sahf
in
adc
test
rclb
popl
mov
push
jno
sbb
pop
push
fildl
icebp
jno
dec
sti
shl
cmp
aaa
ja
and
imul
pop
movsl
imulb
loopne
mov
jbe
xchg
pop
push
push
out
faddp
subl
and
subl
xlat
sbb
cmc
push
jl
and
icebp
rorb
scas
nop
xchg
adc
aam
xchg
or
add
inc
int3
jae
mov
shrb
add
inc
sbb
call
pushf
dec
sbb
cmovs
aas
cmp
mov
bound
subl
test
push
xor
stos
inc
cmp
mov
pop
in
cmp
sti
popf
clc
adc
jo
popf
jb
dec
cli
adc
fldenv
and
push
jnp
dec
je
fstpt
insb
mov
add
adc
movsb
adc
out
xchg
mov
call
das
push
test
mov
int
lret
jae
pop
inc
int3
es
mov
mov
ljmp
jns
mov
push
iret
or
add
insb
push
and
xchg
dec
pop
push
mov
pop
les
aas
int3
hlt
sahf
lds
jp
call
lcall
je
iret
mov
xor
add
and
lock
sub
js
mov
shr
mov
xchg
jb
xlat
mov
sub
lods
jno
push
pop
jno
subl
jmp
mov
lea
push
push
stos
fistps
rcrb
punpcklbw
pop
adc
inc
or
mov
mov
cltd
daa
fs
cmc
setbe
adc
ficoms
or
mov
xor
mov
xchg
mov
ret
push
mov
bsr
pushf
das
xchg
or
fs
cmp
mov
and
jae
sti
int
ja
jg
fistps
loope
ja
inc
xor
mov
js
xlat
jmp
out
not
cmp
jle
sbb
inc
cmpsl
out
cmp
jo
inc
int3
cmp
rclb
test
fildll
xchg
sub
js
or
pop
dec
int
adc
and
lcall
insb
scas
sbb
cmp
inc
dec
pop
push
mov
fldl
ja
xchg
mov
rcrb
leave
out
sub
jno
push
sub
hlt
mov
add
test
sbb
fs
inc
dec
xchg
inc
outsb
pop
hlt
add
xorl
lods
clc
cmpsb
xchg
xchg
lods
fldcw
addr16
xor
insl
xor
mov
aaa
shr
sbb
jl
ja
shl
inc
aaa
push
insl
fs
aas
ret
jge
inc
out
pushf
ss
push
ja
stos
and
cld
nop
iret
sbb
add
xor
xor
jl
jbe
fmuls
xor
mov
or
ljmp
outsb
subl
xchg
scas
xor
aas
stc
adc
in
out
stos
int
stos
and
test
pop
std
pop
test
std
cltd
mov
lahf
ret
adc
cmp
pop
jmp
inc
pusha
mov
pop
cmp
les
dec
dec
and
test
jnp
jbe
xchg
leave
sbb
cmp
outsb
iret
dec
mov
lea
inc
pop
inc
mov
push
popf
add
nopl
mov
aaa
stc
mov
iret
inc
pop
inc
cwtl
cmc
xchg
loopne
push
pop
add
testl
cmp
sbb
adc
mov
and
mov
mov
daa
cwtl
int
fcomip
pop
lret
test
push
push
adc
nop
fstl
push
aaa
dec
cmpsb
jge
and
cmpsl
mov
aam
clc
stc
clc
cwtl
pop
fistpl
ret
loop
test
repnz
xchg
fldcw
dec
inc
rcl
xchg
and
ja
jo
jb
data16
in
scas
jecxz
sub
mov
test
or
xlat
gs
mov
mov
adc
cltd
fs
adc
fdivrs
dec
push
mov
xor
ret
mov
fdiv
insb
movsl
lret
pop
aas
mov
xchg
dec
jecxz
push
jns
insb
add
mov
dec
repz
pop
ret
scas
aam
adc
insl
adc
je
out
fstp
sub
cmpsb
xchg
dec
enter
pop
sub
sub
ljmp
ficomps
mov
xorl
and
xchg
adc
data16
jl
out
nop
imul
aad
push
js
div
xchg
mov
add
xor
stc
cmp
out
jge
int
roll
cmp
or
pop
lret
cmp
mov
sub
test
shr
jae
xchg
icebp
in
jp
cmpsl
jb
jecxz
fadds
xchg
mov
and
cmpl
adc
int3
or
fstpl
movsl
test
jne
add
addr16
cmp
les
daa
pop
fwait
jns
sbb
pusha
sar
test
test
test
mov
iret
shrl
inc
fildl
insl
or
mov
aas
mov
cmp
scas
mov
cltd
jl
mov
push
push
std
addr16
push
mov
sub
sub
mov
nop
mov
lcallw
aas
lds
dec
lds
call
dec
xor
in
inc
iret
push
jne
ret
sahf
cmp
lods
pushf
dec
xchg
divl
adcb
cltd
sbb
xchg
sub
lock
repz
daa
sub
in
mov
pop
jmp
jg
add
adc
xchg
jge
inc
divl
xchg
mulb
loop
lea
adc
push
addl
xor
mov
and
imul
xchg
das
mov
mov
jb
jmp
rcrb
xor
and
cld
cmp
scas
add
xor
push
std
mov
int
and
je
dec
mov
fs
jecxz
hlt
gs
inc
repz
adc
test
jne
push
sti
mov
and
stos
adc
jl
add
ss
push
cmp
xchg
xlat
push
push
aaa
enter
dec
repz
jg
xor
sbb
push
fimuls
loopne
popf
mov
add
jo
inc
and
xchg
add
popa
insl
mov
das
mov
mov
and
ljmp
ss
in
jnp
adc
or
lods
xor
ret
pop
jae
jnp
pop
or
sub
sub
pop
test
sbb
int3
mov
outsl
cmpsb
add
xor
std
jns
xchg
jo
loop
jmp
dec
or
cwtl
test
push
cmp
mov
leave
and
loop
mov
sarl
add
mov
cmp
push
lahf
shrl
daa
stc
xor
sbb
inc
inc
mov
mov
push
outsl
inc
or
mov
mov
cmp
cmp
js
call
ss
stos
data16
add
movsl
inc
xor
test
mov
in
add
or
sbb
imul
das
xlat
popf
sub
push
scas
cmpb
daa
aaa
scas
movsl
push
adc
aas
inc
mov
or
insl
and
jecxz
shrb
pushf
dec
fwait
nop
movsl
add
mulb
pusha
and
jno
sub
addr16
dec
das
mov
ss
fnsave
aas
aas
jno
and
mov
cmp
sar
test
xchg
mov
iret
push
imul
jns
loop
in
jmp
int
inc
cmp
loop
cwtl
jb
mulb
aad
in
or
jmp
ret
int
pop
lock
inc
pop
dec
xorb
iret
pop
aaa
data16
add
clc
das
pop
cmpsl
cmpsl
insl
cs
cmc
xlat
repnz
mov
stos
push
inc
push
pusha
in
outsl
movsl
add
sub
imul
pop
adc
adc
std
xchg
scas
out
sub
xchg
lods
jl
sbb
fiadds
mov
dec
shrl
cmp
sahf
pop
push
adc
and
imul
cmpsb
or
xor
into
outsb
pop
outsb
sbb
and
mov
into
imulb
rorl
push
out
jnp
in
cld
movsb
pop
dec
or
jecxz
inc
push
mov
sahf
push
test
xchg
mov
clts
mov
sahf
xor
cltd
jne
mov
imul
mov
xchg
scas
sbb
jo
lods
jge
mov
mov
push
cs
add
outsl
jmp
sti
mov
repnz
cwtl
sbb
test
in
jbe
clc
pop
sub
es
xor
stos
cmp
clc
mov
cmp
push
lcall
call
popa
sub
inc
movsl
gs
mov
call
jae
cltd
hlt
sbb
jecxz
aad
pop
jne
pop
shlb
sbb
ljmp
lock
xlat
cltd
sub
mov
jge
dec
add
cmp
or
fadds
sahf
xchg
imul
pop
testl
xchg
xchg
out
icebp
dec
and
or
dec
adc
xchg
scas
movsl
push
loop
inc
mov
lahf
lret
loop
xor
jecxz
sti
addl
dec
xor
aas
and
sub
push
pop
jnp
pop
and
jns
js
shrl
hlt
lret
data16
push
fistpll
jno
into
cmp
sbb
dec
dec
xor
mov
lret
xchg
aaa
out
add
loopne
or
cmp
out
push
lret
or
jl
out
mov
dec
and
shlb
ljmp
pop
jns
mov
ffree
mov
xor
or
sbb
addr16
mov
ja
pop
in
push
jo,pt
jo
inc
cmpsb
mov
mov
or
insb
dec
mov
lods
push
and
or
insb
fimull
jo
inc
nop
lcall
out
xor
add
cs
xor
faddp
or
jge
aaa
mov
jmp
ja
pop
mov
cs
adc
jbe
mov
xor
mov
inc
lds
mov
mov
loope
pop
jecxz
das
cli
sub
fnstenv
mov
cmp
adc
xchg
imul
outsb
push
into
push
sub
bound
jl
pop
and
gs
xchg
push
idivb
lods
ret
or
push
xchg
je
mov
in
cmp
bound
cmc
pop
and
sub
adc
and
in
daa
xchg
outsb
subl
cmpsl
rolb
jp
mov
sbb
xor
iret
fs
arpl
cld
xchg
mov
jl
or
ret
xchg
outsl
mov
xchg
mov
jae
push
ljmp
leave
aaa
adc
cs
hlt
insl
sar
out
cmpsb
pop
xor
in
push
clc
push
sub
mov
dec
imulb
inc
xor
rcll
and
shlb
lcall
pop
incb
in
inc
in
xchg
stc
std
push
dec
fimuls
jae
cmp
inc
js
bound
or
push
dec
and
dec
into
adc
xchg
or
out
mov
loope
cli
stos
imul
sub
sub
cmpsl
sbb
enter
sahf
sbbl
add
lret
jg
test
xor
out
ja
push
push
mov
test
add
fidivrs
cltd
xchg
mov
insb
jmp
int
loope
shrb
xchg
push
pop
ds
or
iret
add
sti
cmp
mov
fwait
xor
jnp
jecxz
bound
push
in
inc
adc
push
and
testl
lret
mov
mov
lret
mov
adc
or
dec
adc
mov
out
fidivs
out
cmc
jp
push
cmp
mov
ss
cmpps
inc
enter
repz
xor
jno
sub
jo
fs
fstpt
lock
loope
cli
mov
sub
mov
pop
and
cmp
jnp
movsl
xchg
sbb
jne
jo
add
jge
sub
notb
sbb
sbb
add
rcrl
pop
push
fdiv
pop
jl
daa
adc
jns
rcll
xor
test
das
stc
aad
cmpsl
push
push
jmp
fidivrs
mov
test
fwait
call
dec
lcall
imul
outsl
add
jl
in
jmp
xor
fistpll
lods
xor
sub
cwtl
jno
rorb
test
lods
push
shrl
cmp
or
sub
test
mov
scas
popf
add
hlt
cmp
lods
jae
sbb
inc
ja
jge
xor
mov
stos
xchg
das
cmp
jg
sbb
sbb
cld
xor
das
jns
aas
enter
stos
repnz
and
decl
and
call
or
les
push
outsl
or
dec
inc
subb
loopne
mov
pop
rcrb
ljmp
jne
push
bound
cmc
test
xor
outsl
mov
shrl
dec
xor
aaa
jmp
dec
pop
test
loope
jno
pop
sub
mov
test
mov
jae
add
mov
in
rcll
movsb
mov
aaa
int
mov
frstor
movsb
inc
aam
mov
lock
jl
pop
adc
pop
pop
std
add
fs
and
mov
and
bound
imul
xchg
daa
jae
push
mov
sub
rolb
push
ss
insl
mov
sbb
sub
cmc
push
pop
fs
mov
movsl
add
enter
pop
nop
xor
repz
inc
into
push
les
jle
and
outsl
mov
fisubrl
lret
mov
notl
orl
or
lahf
add
data16
rcrl
push
fsubs
sti
jle
insl
add
ret
mov
pop
int
adcl
les
fidivrl
stos
in
add
lret
adc
out
push
xor
adc
mov
pop
lea
je
cmpsl
push
jmp
loop
int
xor
mov
jp
push
int
imul
inc
repnz
fldt
inc
ja
add
mov
int
push
pop
jno
call
sub
cld
xor
lret
lock
arpl
loopne
pop
and
les
data16
imul
or
loope
in
iret
fadd
xchg
fdiv
test
add
mov
pop
xor
mov
int
gs
cli
sub
cmp
lcall
mov
pop
inc
cltd
in
xchg
pop
mov
pop
and
push
cli
rclb
fdiv
add
pop
mov
fistpl
sarl
out
subb
mov
test
sbb
pop
inc
fisubrl
es
arpl
in
flds
hlt
repz
xor
push
lock
lcall
push
lds
das
push
mov
mov
push
cmc
es
adc
pop
adc
das
movsb
andl
repnz
jno
loopne
icebp
jnp
dec
mov
arpl
jae
jb
push
push
fmul
and
add
roll
lods
pop
xchg
add
jnp
std
sub
adc
inc
add
aad
jmp
and
cltd
decl
hlt
adc
jle
or
inc
push
mov
in
aam
scas
xor
data16
dec
sub
sub
jae
and
xchg
test
push
mov
push
xchg
insb
int3
into
push
imul
push
add
cmp
pop
add
aam
mov
cwtl
stos
sbb
push
in
hlt
ja
test
ret
sbb
push
dec
mov
inc
inc
ds
jecxz
pop
aas
int
mov
movsl
ret
and
sbb
popa
mov
ret
loope
xchg
enter
mov
and
test
cmp
movl
je
sbb
add
jmp
mov
jae
adc
xor
imul
add
mov
add
mov
sahf
fcoml
dec
out
aam
out
ret
fsubl
mov
push
loopne
cmp
shrl
add
stc
mov
shr
lea
mov
mov
cwtl
shr
in
push
adc
mov
nop
jne
emms
jb
pop
clc
pop
xchg
push
lret
jbe
enter
insb
lods
adc
adc
shl
andb
xor
enter
inc
pop
xchg
and
insb
jae
roll
pop
frstor
out
mov
push
xor
add
ljmp
mov
cwtl
inc
out
cli
in
xor
dec
repz
pushf
mov
add
or
pop
lret
fistl
jbe
loope
mov
les
sub
cmp
sub
lcall
enter
inc
mov
popa
out
fwait
into
fnstenv
cmp
xlat
dec
and
mov
push
shl
int
xor
aam
out
popf
int
lods
or
jg
clc
dec
inc
andl
rol
outsl
fisubl
xor
pop
ret
gs
sbb
sub
sbb
enter
gs
xchg
xchg
mov
test
inc
call
lods
addr16
test
test
sbb
fs
ret
fisttps
aam
adcb
sti
ja
inc
dec
push
pop
push
sahf
cmpsb
inc
sub
lahf
call
in
push
std
int
inc
test
jno
add
jns
outsl
test
test
and
out
mov
sub
das
sti
data16
lret
not
sti
jb
jo
and
outsb
xor
sbb
scas
insb
sub
cltd
xor
pushf
adc
loope
and
push
dec
cmp
lret
dec
adc
pop
aaa
inc
loop
fldt
mov
and
loope
push
xorb
jmp
push
stos
fistl
loop
cltd
cmp
mov
inc
nop
jnp
sbb
jl
pop
mov
add
cmp
leave
mov
movb
xor
xlat
cmp
sahf
mov
or
adc
inc
xchg
cli
out
lock
fmulp
aam
or
in
cmp
cmp
push
adc
loop
cwtl
es
out
inc
mov
in
sub
inc
and
nop
push
push
clc
sbb
cmp
ds
int
in
and
inc
movsl
xor
movsb
arpl
movsl
or
insl
popf
pop
or
mov
imul
gs
stos
dec
in
popf
outsl
cmp
fld
insb
add
shlb
cmc
lahf
xor
fwait
adc
loopne
call
leave
ss
push
jb
leave
and
rcll
out
clc
mov
cmpsl
and
test
rorl
insl
mov
dec
xor
dec
inc
dec
pop
adc
jae
sahf
cmp
cmp
pop
mov
dec
inc
mov
sub
pop
scas
or
jmp
inc
push
into
mov
js
test
addr16
out
push
xchg
ds
mov
sbb
add
cmp
addr16
adc
mov
jne
or
pop
add
adc
sub
sbb
sub
es
jge
xor
shlb
xor
xlat
lods
movsb
clc
cwtl
movsb
sub
sahf
xchg
mov
and
cli
sub
push
cli
xor
push
mov
mov
sub
ss
icebp
xor
leave
push
inc
xchg
add
and
push
fisubrs
mov
data16
jecxz
inc
cmp
jb
xor
mov
sub
popa
lcall
mov
jecxz
test
cs
xchg
mov
int3
arpl
cmp
adc
in
js
jecxz
rorl
lcall
pusha
ja
js
add
cmp
adc
sbb
adc
mov
fcom
lret
sti
or
stos
das
jg
mov
out
dec
insl
inc
add
scas
sbb
cmp
or
test
in
mov
sub
cmpsb
cmpsl
inc
mov
ficoml
stos
mov
sub
mov
fs
sub
addr16
test
add
adc
sub
lahf
fsubrp
in
pop
xchg
pop
sub
mov
inc
loop
jp
add
inc
dec
xchg
js
xchg
push
cltd
es
lcall
shll
jle
lea
pop
lock
lahf
in
lea
jl
test
cmpsb
jns
fwait
into
add
hlt
lcall
push
or
xchg
sbb
ds
ss
sub
pop
test
xchg
das
xlat
sbbb
hlt
xor
jp
push
dec
push
jne
inc
jecxz
test
out
mov
cmp
jge
je
ret
adc
mov
pop
push
mov
pop
fsubp
je
stos
jnp
arpl
lahf
loop
xor
in
pop
jne
xchg
test
dec
mov
xchg
or
mov
sub
ljmp
loope
mov
and
xor
xor
aam
idivl
out
es
clc
out
push
imul
pop
in
cs
out
push
mov
inc
mov
push
mov
add
leave
push
xchg
int3
and
out
mov
es
je
adc
jp
xchg
sbb
pop
jecxz
and
xchg
scas
push
inc
test
cs
jp
bound
insb
xchg
les
xchg
movsb
call
cmpsl
xchg
enter
mov
scas
pop
mov
sub
pop
and
jb
or
stc
mov
push
mov
push
sub
fmuls
jbe
test
push
dec
pop
sub
add
pop
mov
aam
adc
std
aaa
sbb
lret
in
cltd
pop
sti
mov
stc
add
dec
test
loopne
push
mov
cmp
inc
jp
fstpt
push
xor
or
arpl
imul
clc
sbb
es
bound
sbbb
scas
dec
jecxz
fwait
sbb
test
sahf
pop
int
or
dec
and
xor
sahf
jecxz
jae
stos
dec
xchg
xchg
push
and
mov
cmp
inc
xchg
es
ret
dec
subb
pop
mov
filds
out
and
mov
cli
fwait
push
jmp
xor
mov
cwtl
dec
int3
test
rol
push
sub
les
ret
repz
push
push
inc
scas
cmp
pop
adc
test
nop
xorb
push
daa
mov
psubq
dec
mov
cmp
and
das
inc
lods
sub
loopne
adc
pop
lock
jg
popf
cmpsl
pop
jp
mov
outsl
or
jle
repz
loope
popf
and
sub
sbb
dec
and
pop
mov
pushl
mov
mov
adc
jb
ret
and
jmp
clc
repz
or
aad
rol
nop
xor
fildl
xchg
shlb
xchg
insb
pop
xor
pop
push
sub
sbbb
ljmp
in
add
loope
mov
adc
adc
jmp
adc
pusha
cwtl
cmpb
in
movsb
cs
xor
xor
xor
mov
and
pop
loopne
jp
fldcw
adc
sub
mov
adc
or
pop
data16
cmpsb
pop
xor
sub
dec
and
aas
xor
dec
mov
mov
daa
addr16
mov
loope
insb
cmp
out
jle
mov
mov
in
or
lock
push
dec
inc
pusha
mov
loopne
add
jnp
fcompl
ffree
sti
mov
dec
popa
push
mov
decl
ja
sub
int3
sub
mov
or
lret
and
test
pop
loope
pop
jg
cmc
gs
and
mov
jge
cmp
and
insl
pop
and
ljmp
sbb
add
jmp
int
or
jbe
mov
int3
mov
jae
adc
and
adc
mov
in
das
call
unpckhps
std
jmp
test
jne
sar
mov
and
pushf
sbb
dec
aad
pop
jp
inc
out
decb
inc
je
repz
fs
mov
rcrb
nop
pop
in
cmp
fst
push
xchg
jecxz
xchg
mov
xor
lds
rcrb
iret
ss
nop
inc
out
sti
inc
and
ds
sub
fwait
ja
js
xor
cs
mov
cli
jbe
fwait
out
lret
jg
arpl
or
mov
and
jmp
sahf
adc
dec
jne
mov
mov
shll
fwait
sbb
mov
xor
jmp
out
popf
mov
fs
iret
pop
add
push
xchg
sub
outsb
xor
dec
ja
xchg
out
sub
adc
xchg
push
ret
mov
das
out
cmpsb
loop
or
and
xor
hlt
xorl
mov
mov
sahf
jg
mov
nop
xchg
push
lock
sbb
cld
push
mov
inc
mov
sub
jb
rcrl
call
adc
mov
cmp
mov
sub
mov
adc
xchg
sbbb
div
jecxz
addb
cmp
mov
loope
ss
mov
inc
adc
adc
out
mov
leave
outsl
cltd
test
out
fstps
imul
push
mov
lock
stos
adc
and
test
mov
adc
mov
loopne
push
cld
mov
aad
pop
push
mov
and
loopne
cwtl
repnz
js
xchg
sub
jge
push
shll
mov
jp
aad
pop
or
cltd
cmc
std
adc
rorb
testl
std
jmp
out
out
stc
cmp
adc
dec
inc
adc
pop
dec
add
lds
fdivs
in
fwait
loop
or
insl
aaa
gs
in
mov
pop
dec
inc
cmpsl
lret
adc
ljmp
pop
call
testb
or
clc
cmp
sbb
pop
outsb
aaa
aaa
cmp
adcl
lods
add
mulb
das
jmp
andb
clc
into
sbb
std
push
movsb
and
mov
mov
jno
pop
shl
push
xchg
lret
push
jb
jg
pop
cmpsl
dec
or
or
add
subl
add
inc
inc
mov
or
push
push
add
ja
add
add
cwtl
mov
loop
jae
or
push
cmp
test
xor
push
mov
adc
js
cmc
add
jbe
mov
sbb
repnz
cmp
idivb
pop
xor
sub
dec
mov
xor
mov
xorl
aaa
notl
cmc
mov
mov
mov
push
inc
jmp
int
pop
jecxz
sub
xor
sbb
sti
add
dec
ret
repz
shll
fisubrs
jne
mov
cmp
repz
lods
lret
pop
arpl
movsb
loope
lds
inc
pop
jg
pusha
idivb
clc
loop
pop
inc
and
jmp
pop
and
and
cmc
jmp
test
jmp
xor
out
loop
in
add
in
lahf
dec
mov
and
ljmp
leave
fldl
adc
add
mov
fsub
pushf
in
xlat
xor
inc
mov
pushf
xchg
cmc
mov
cmp
fucomi
sbb
mov
or
dec
jb
sub
in
push
fwait
cld
inc
outsl
addr16
sub
dec
sub
jp
stos
and
inc
jge
cmp
idivl
and
sbbb
gs
or
jnp
cmp
div
adc
jle
scas
nop
frstor
and
iret
mov
repz
filds
pop
aas
out
jl
scas
cmp
out
pop
cltd
rol
mov
and
or
repz
sbb
std
adc
mov
into
add
sub
xchg
loope
ret
push
popf
sub
ljmp
rorl
stc
inc
fs
cmp
adc
cmp
out
add
ror
pop
popf
loopne
jge
pop
ficoml
sbbb
cmpsb
xor
mov
lret
push
sub
ret
iret
mov
mov
je
adc
repz
mov
xchg
into
add
pop
lock
into
jns
icebp
xchg
jmp
ja
pop
orb
pop
pop
sbb
movsl
ficoml
jecxz
cli
mov
mov
push
incb
add
pop
add
loopne
loope
rolb
push
push
scas
rep
jle
pusha
xchg
dec
push
cmp
cwtl
das
mov
cmp
std
push
pusha
nop
cmpsb
mov
paddsb
popf
and
sbb
push
rclb
pop
fwait
sbb
lea
mov
leave
in
adc
ficoml
mov
push
shll
xor
mov
inc
sbb
push
cli
es
or
sbb
idivb
inc
aaa
testl
adc
push
divb
xor
cld
jbe
xor
cmpsb
lods
sbb
pop
fwait
or
lret
fiaddl
pop
xchg
out
add
sar
imul
mov
ficoms
push
ljmp
dec
jb
jns
unpcklps
xor
jle
push
mov
iret
pop
cmp
cmp
push
dec
fisubs
sarl
xchg
sub
dec
cmp
dec
sar
ret
adc
inc
movsb
das
mov
add
mov
out
scas
mov
push
fsubl
lcall
insl
pop
push
jbe
es
shll
or
sbb
adc
imul
push
test
std
or
and
pop
mov
adc
lds
arpl
leave
fwait
js
pop
and
lock
imul
xchg
or
dec
mov
clc
sub
sub
adc
jmp
shl
add
dec
cmc
insb
fsubs
insb
and
mov
mov
xor
lret
iret
fnstenv
movsl
test
es
fiadds
pop
ds
adc
push
inc
sub
ds
imul
and
jno
test
sbb
xor
adc
loop
rol
mov
data16
fistpl
mov
fmul
push
addl
lea
fmull
neg
mov
pushf
xor
scas
mov
rorl
ret
js
pop
pop
ljmp
sbb
lods
or
mov
add
pop
enter
and
out
insl
imul
outsb
sbb
jns
mov
cltd
add
xchg
sub
enter
jl
jbe
mov
pop
es
jno
loopne
insb
adc
psadbw
xor
lahf
test
sbb
pop
or
ss
push
jge
fwait
stc
mov
pop
jl
and
into
push
rorl
push
add
jb
data16
fadd
push
jbe
sbb
aas
aam
dec
dec
dec
jnp
adc
les
mov
popa
test
push
pop
adc
sub
in
xchg
outsl
mov
mov
in
lea
fnstsw
cltd
std
movb
mov
rcll
enter
push
xor
cmc
aaa
mov
pushf
ret
adc
enter
add
ss
iret
push
xchg
xchg
inc
cmp
mov
les
push
loop
push
mov
pop
fists
rcrb
adc
repz
jbe
mov
inc
jle
and
mov
dec
push
inc
movsl
fwait
sahf
pop
aas
sbb
popf
into
xor
insb
dec
xchg
or
inc
insb
sbb
outsb
add
icebp
cwtl
inc
or
iret
gs
cmpsl
pop
in
mov
sub
js
nop
and
add
inc
in
inc
lock
popf
cwtl
hlt
pop
arpl
mov
rorb
or
clc
xchg
mov
pop
jge
js
cli
ds
add
or
and
add
adc
loopne
mov
sbb
xor
push
or
fwait
shlb
pop
out
xor
push
jb
nop
nop
jecxz
xor
out
push
loope
outsl
cmpsl
test
pop
mov
iret
fdiv
adc
dec
cmp
adc
movsl
lret
mov
int3
dec
and
setno
cmp
cmp
mov
mov
sub
in
popf
enter
ret
mov
aaa
pop
dec
shll
pop
insb
into
pusha
mov
or
adc
mov
es
aas
packuswb
push
stos
les
sub
rorl
pop
lods
cmpsl
mov
je
inc
xchg
stos
aas
push
xor
test
cmpsl
cmp
pop
xchg
in
icebp
dec
popf
xor
sub
aam
std
fbld
lock
pop
scas
jge
aaa
stc
stos
mov
xchg
pusha
cli
xchg
dec
cmp
mov
stos
sub
es
lock
aad
and
ss
popa
inc
aas
jb
je
es
pop
xchg
xchg
or
push
sub
es
push
sub
xorb
fnstcw
and
cwtl
leave
xor
out
mov
fidivrl
xor
mov
addr16
and
add
aam
por
inc
jbe
jl
add
jo
enter
or
xchg
push
and
xor
sbb
xchg
mov
cmp
jne
xchg
in
jns
movsl
xchg
sbb
mov
inc
jge
add
dec
dec
xor
loope
xor
lahf
jae
xor
insl
in
sarb
sbb
sub
mov
jns
xchg
les
sub
daa
dec
ja
xchg
aas
clc
cmc
inc
sbb
and
cli
jbe
cwtl
arpl
icebp
adc
int3
xlat
rcrb
or
push
nop
icebp
xchg
mov
dec
test
loopne
pop
sub
jp
gs
pop
jmp
cwtl
dec
cmp
mov
push
jnp
lods
shlb
and
mov
xchg
mov
jg
pop
aam
fwait
leave
mov
mov
inc
adc
movsb
divb
xchg
push
lock
rcrl
jo
lcall
mov
mov
scas
test
add
and
dec
mov
mov
xchg
or
daa
mov
add
imul
pop
loop
jecxz
xchg
and
cltd
leave
lret
cmc
jno
and
sahf
adc
push
rorl
mov
mov
mov
into
dec
repz
loopne
fistps
lock
inc
push
xor
shrl
jne
int
cmp
push
sahf
insb
add
shl
es
add
loope
xchg
pop
mov
mov
cmc
outsl
orb
xchg
xor
cli
orb
repnz
stos
sub
ret
ret
dec
pop
movsl
jae
negb
mov
pop
dec
scas
adc
cmpsb
add
sarl
std
scas
movb
jnp
and
and
pushf
fdivl
or
andl
inc
arpl
mov
lret
sbb
mov
mov
rolb
arpl
jmp
out
fsubl
and
jecxz
in
push
in
and
or
clc
inc
dec
pusha
movsb
add
mov
push
adc
jle
je
adc
xor
adc
adc
ficompl
add
gs
dec
out
sub
cmp
lods
imul
inc
push
repnz
fisttpl
mov
inc
add
push
lret
mov
pop
pop
mov
mov
into
jecxz
inc
call
ljmp
cmc
cmp
inc
cwtl
inc
int3
cmp
mov
cmp
jecxz
sub
cmpsl
jmp
mov
fildl
sbb
jp
icebp
imul
jb
leave
cs
pusha
movsl
adc
cs
clc
insl
push
pop
fisubrs
aam
sbbb
xor
test
mov
mov
inc
mov
popa
dec
iret
ret
mov
rcrl
jb
stc
in
scas
pop
inc
mov
mov
inc
aam
push
imul
dec
loop
fidivrl
fnstenv
int
push
hlt
sub
adc
rorl
and
mov
jb
dec
dec
inc
mov
inc
cmp
mov
movsb
mov
sbb
xchg
xchg
mov
ret
push
or
push
adc
pop
std
aaa
sub
sarb
out
insl
push
inc
jno
outsl
and
je,pn
xor
lcall
cmpsl
fisttpl
cmp
push
jl
lcall
mov
fsubs
dec
dec
test
mov
iret
push
movl
loopne
mov
shrl
push
sub
push
adcl
in
sti
fidivrs
repnz
or
sbb
push
lock
push
fsubrs
popf
call
push
scas
xor
rcrl
popa
mov
sbb
ljmp
xor
leave
jb
inc
inc
push
fwait
jno
je
mov
sub
sbb
lds
sub
xor
pop
iret
cmp
sbb
jno,pn
pop
jp
addl
cmp
sub
int3
cwtl
xchg
repz
cmp
or
ljmp
loop
lcall
lahf
mov
mov
mov
and
ret
addr16
and
in
pop
jmp
pop
cmp
cmp
xor
pop
inc
nop
fwait
sub
fldenv
jmp
test
inc
pop
call
fisttps
jp
faddl
jbe
lea
sub
cmpsl
arpl
loope
cs
push
xchg
push
dec
cmpsb
inc
pop
cmp
sub
sbb
and
mov
mov
dec
jecxz
idivb
adc
dec
subb
inc
sub
or
jg
leave
stos
xchg
data16
xchg
add
sub
mov
js
add
cli
ficompl
or
xchg
outsl
cmc
test
mov
dec
and
leave
xchg
mov
pushf
movsb
xchg
mov
cmp
push
adc
sete
push
loop
popa
sub
lcall
jge
mov
and
lea
int
mov
negl
stc
or
jns
and
mov
je
test
in
pop
stos
popa
fistpl
mov
and
cld
inc
mov
add
std
xor
jmp
lret
cmp
shlb
sub
mov
add
int
pop
xchg
das
mov
in
or
lahf
inc
lods
clc
pop
outsb
add
mov
mov
and
xchg
jg
cmpsb
adc
ljmp
test
cmp
test
add
mov
loop
mov
aad
inc
insb
roll
rcrb
mov
movsl
sti
pushf
add
xchg
std
dec
jp
lret
dec
aam
pop
or
hlt
sahf
pop
icebp
jmp
stos
mov
xchg
xor
sbb
mov
or
mov
insb
cmp
jbe
das
jns
mov
jle
popf
ret
cmp
and
jae
mov
or
pop
cmpb
fstpl
jg
push
scas
xor
repz
mov
mov
repnz
lds
xchg
outsl
mov
pop
add
jl
sub
lret
mov
mov
mov
pop
aad
sbb
loope
outsl
dec
imul
lcall
fbstp
mov
xor
add
das
fadds
scas
fisubrl
and
add
add
pop
insl
dec
fadd
out
fsts
lods
movsb
mov
push
inc
add
je
push
insb
fdivrl
fs
in
or
and
mov
sbb
push
mov
sbb
imull
inc
mov
icebp
pop
sub
or
add
jb
jecxz
dec
xchg
jmp
pop
cmp
mov
int3
les
xchg
popf
sbb
imul
mov
cltd
out
ret
push
fmuls
inc
add
xchg
aas
jae
insl
jne
aas
popf
aad
scas
dec
sub
je
test
inc
cmp
enter
add
aaa
jmp
loop
mov
push
fldcw
pushf
cmp
outsb
xlat
cwtl
mov
and
or
ss
imul
mov
adc
sbb
xor
xchg
sub
enter
add
xor
stos
cmpb
int3
mov
loope
js
lret
jle
and
cmpsb
jb
enter
sbb
in
push
xor
roll
mov
sub
xor
ret
pop
lods
add
sub
mov
mov
cs
addr16
sub
push
iret
or
addr16
fsubrs
push
push
subb
add
inc
push
dec
push
or
popa
push
lea
addr16
movsb
test
mov
adc
cs
and
inc
dec
dec
xchg
inc
rcr
xor
and
aam
xor
pop
add
popf
sub
inc
inc
aam
dec
leave
dec
shl
js
cmp
popf
xchg
jecxz
in
pop
push
xchg
lret
pop
lods
adc
pop
notb
and
push
jle
mov
sub
dec
or
seto
push
mov
inc
dec
inc
jb
insb
mov
hlt
imul
out
orl
jle
mov
mov
xchg
mul
ficomps
fsubr
sub
test
and
fdiv
mov
xor
or
jl
mov
push
or
xchg
mov
fistps
jge
push
lret
popl
xor
int3
icebp
mov
dec
andb
pushf
into
fnstenv
jmp
add
or
loope
jns
ret
mov
inc
mov
into
ds
push
sub
cltd
sub
inc
mov
mov
mov
and
ljmp
test
mov
pop
sbb
pop
rcrb
mov
cld
mov
sahf
das
xchg
inc
hlt
sbb
push
lock
popf
cmp
fnstenv
xchg
push
cmp
out
loope
fildll
cmp
lret
xor
test
nop
adcl
push
repz
out
xchg
stc
daa
leave
sub
notl
sbb
xchg
pop
ja
in
mov
xchg
mov
pushf
fstl
sti
push
enter
mov
xchg
negl
enter
dec
daa
pop
fwait
shll
xor
cltd
gs
or
test
sub
addr16
mov
aas
mov
pusha
lods
adc
jnp
sub
jno
jg
xchg
insb
daa
frstor
dec
mov
fisubrs
mov
inc
push
stos
aaa
addr16
push
sub
imul
hlt
push
dec
xor
cmc
sbb
mov
mov
sub
mov
mov
jae
mov
mov
inc
dec
xchg
stc
pushf
mov
push
cs
push
add
mov
push
pop
repz
stos
mov
mov
call
scas
add
ja
std
fsubs
push
dec
mov
test
jbe
add
daa
cmp
push
inc
iret
jge
fadds
xor
push
out
insb
lcall
daa
pop
jecxz
aas
ja
aad
xchg
mov
cmpsb
dec
inc
xor
lret
arpl
das
and
mov
xchg
imul
dec
lods
and
sub
gs
cli
mov
jnp
mov
imul
xchg
xchg
sub
mov
and
lahf
adc
into
sbb
adc
test
or
push
sub
addr16
sbb
dec
in
test
xchg
test
loope
pop
sub
and
mov
sahf
cli
pop
push
jb
movd
mov
aaa
mov
mov
push
dec
adc
or
sub
das
pcmpeqb
sbb
push
orl
cmp
pop
dec
mov
mov
cld
adc
out
cmp
es
repnz
movsb
icebp
lret
xchg
mov
into
imul
out
adc
pop
mov
add
push
leave
sbb
inc
mov
cmpsl
push
push
xchg
mov
call
int
push
inc
dec
lret
and
in
int3
cmp
inc
push
jl
pop
sbb
lret
sbb
adc
sub
and
out
add
sub
lods
cmp
adc
clc
stos
fwait
imul
ja
outsb
mov
jno
subl
pusha
pop
into
mov
add
jo
jbe
inc
js
adc
orl
sar
in
rolb
mov
and
push
leave
mov
cmp
pushf
xor
hlt
add
ficoms
jmp
push
push
mov
inc
dec
jnp
das
or
and
jo
dec
cltd
pop
and
mov
and
jno
and
rcll
imul
fdivl
fimull
or
or
pusha
mov
adc
sarb
mov
mov
mov
mov
dec
fcom
jns
addr16
bound
in
cltd
mov
mov
xor
inc
sbb
fmuls
inc
lret
xor
movsl
cmpb
sub
cmc
inc
cmp
mov
pop
repnz
sbb
xorb
and
mov
arpl
sbb
fsub
iret
outsl
rep
loope
cmp
inc
call
hlt
jno
fmul
mov
xor
repnz
xor
outsl
in
test
push
and
and
xchg
stos
lods
dec
push
rclb
cmp
pop
out
and
mov
leave
orl
mov
or
xlat
mov
mov
testb
lret
mov
jle
adc
pop
mov
mov
mov
xor
iret
and
push
xor
cmp
daa
cld
mov
mov
jne
lea
icebp
add
mov
cs
adc
pop
pop
aam
pop
pop
mov
and
into
fmuls
or
loope
outsb
push
aad
aaa
jle
dec
int
inc
mov
lret
cmp
pop
daa
adc
xor
dec
ja
loop
xchg
stos
insb
xchg
mov
ljmp
jo
adc
fsubs
add
mov
inc
push
call
sub
xchg
mov
pop
pop
and
sub
sub
jne,pt
int
cmpsl
mov
sub
rcrl
stc
ds
insl
or
pop
xchg
mov
out
jne
jae
loopne
stc
cmpsl
add
int3
js
icebp
testb
repz
sbb
lahf
rclb
cmp
outsl
adc
mov
in
sub
push
jmp
adcb
push
das
jo
cltd
sahf
gs
jp
cwtl
mov
jp
mov
sti
cmp
sbb
test
and
mov
fdivs
pop
inc
dec
mov
dec
xorl
dec
sub
ds
stos
aaa
daa
inc
pop
int
sti
ret
dec
xchg
mov
mov
in
imul
xchg
stos
pop
push
pop
sbb
ljmp
or
mov
jge
sbb
call
cmp
cltd
push
scas
fistpl
pop
fcomp
cmp
pop
fwait
daa
in
jge
inc
in
push
aas
pop
sub
xchg
test
add
into
sti
imul
inc
shrl
push
push
sub
xchg
pop
movsl
cmp
cmp
mov
int3
push
test
pop
repnz
gs
stos
add
pop
jne,pt
sbb
pop
cld
sub
add
cld
aam
sub
aam
or
sub
cmpsl
cmp
fistpll
sub
das
or
mov
mov
and
test
lods
pop
push
push
sbb
xor
test
mov
pusha
xchg
test
adc
xlat
lods
out
jno,pn
mov
lea
lods
sahf
gs
xorl
jb
pop
lods
push
jnp
inc
arpl
pop
dec
and
and
movsb
mov
mov
outsl
sub
and
sub
andl
pop
xchg
add
data16
mov
and
adc
pusha
sbb
inc
pop
jle
inc
adc
stc
mov
lret
xor
inc
int3
inc
push
inc
icebp
jbe
adc
movsb
outsb
sbb
sbb
inc
pop
xchg
pop
xchg
or
sbb
mov
cmp
loope
insb
and
seta
jbe
rcrb
hlt
xchg
outsb
out
mov
pop
inc
xchg
out
inc
mov
fildll
push
adc
lahf
mov
pop
mov
sbb
mov
add
push
or
inc
xchg
out
js
dec
inc
add
popf
or
sbbb
mov
or
lods
insb
shl
pop
lahf
loopne
aam
icebp
jecxz
pushf
mov
aam
cmpb
adc
sub
pop
jecxz
and
jb
inc
pop
stos
scas
fists
jecxz
mov
fs
mov
test
mov
fstp
sub
outsl
xchg
lods
xlat
xchg
or
jle
cmp
or
mov
stc
sti
rcr
mov
mov
mov
imul
divb
pop
scas
ja
pop
xor
and
cwtl
cmc
dec
lea
mov
xor
cltd
imul
jb
sbb
or
std
adc
iret
es
push
es
xchg
mov
insb
push
pop
mov
push
push
fcoml
icebp
out
push
in
push
sbb
hlt
and
test
xchg
mov
mov
jbe
and
mov
cmp
dec
addr16
mov
scas
out
jns
mov
mov
stc
mov
dec
push
jns
sbb
adc
xor
pop
xchg
push
cltd
pop
daa
push
xchg
cmc
or
clc
xchg
pop
pop
lods
xor
xor
in
int
sub
or
sub
cmp
mov
xor
and
arpl
xor
sbb
mov
icebp
xchg
ret
aaa
xor
data16
add
mov
pop
mov
negl
imull
add
dec
jnp
lcall
adc
adc
cmp
shrl
addr16
lods
out
dec
rorb
xlat
daa
push
push
imul
jo
imul
xchg
add
in
loop
in
mov
jne
mov
repnz
cmp
orb
mov
fwait
into
xchg
xchg
dec
repnz
or
test
lret
int
out
std
sub
bound
inc
test
pop
insl
add
iret
xor
js
subl
push
sbb
mov
cmp
pop
addl
push
mov
mov
pop
leave
push
mov
dec
divb
fdivl
aaa
sub
fwait
pop
jnp
pop
fimull
iret
ret
inc
pop
add
dec
dec
hlt
xorl
mov
push
or
out
insb
dec
ss
lods
ja
jmp
sbb
ror
push
mov
scas
adc
jno
xor
cwtl
jne
pcmpgtw
inc
movsl
sub
outsb
imul
in
in
jecxz
pop
jno
add
sub
or
add
mov
dec
data16
test
and
bound
xor
mov
push
mov
mov
aad
inc
das
cmpsl
sbb
inc
and
test
or
testl
adc
lret
xchg
fists
sbb
sbb
pop
pop
push
xor
sbb
cmp
sub
adc
cmp
pop
jle
mov
xchg
adc
lods
outsl
int
xor
mov
sbb
xor
sbb
lret
imul
daa
ja
stc
jns
ret
dec
xchg
fildll
out
sbb
fidivs
pop
out
push
cmpsl
jmp
das
mov
cld
ret
test
fucomp
rol
enter
lcall
hlt
imul
sub
mov
sub
pusha
ss
and
jo
lds
in
outsb
rcr
repz
inc
insl
mov
or
push
adc
xor
sub
push
add
or
dec
into
int
xchg
test
jno
jns
das
movsb
pop
cmpsb
fisttpll
lret
sub
jno
xchg
adc
aam
leave
or
or
mov
dec
sub
aam
xchg
ret
imulb
sbbl
scas
lds
mov
push
push
dec
mov
push
lret
push
jle
cs
cmpsb
push
mov
fldt
jb
inc
pop
fs
push
jmp
inc
push
add
pusha
loop,pn
daa
nop
fcomps
iret
and
jae
sub
push
imulb
addr16
mull
je
push
push
shld
adc
xchg
dec
sub
sbb
seta
push
fsubl
xchg
xchg
mov
jg
cli
ja
sahf
rcrb
pop
outsl
add
dec
ror
add
push
movsb
lcall
and
jge
adc
into
movw
nop
aam
out
cmp
jbe
and
mov
movsl
dec
mov
out
add
inc
icebp
pop
arpl
cs
push
or
hlt
stc
push
ljmp
and
jns
mov
cwtl
sbb
loopne
popf
push
das
xlat
test
stc
test
in
loopne
enter
loope
test
mov
adc
push
sti
xor
aad
sbb
in
jg
jmp
push
hlt
xor
dec
xchg
pop
insb
cmpsb
pop
push
cli
popa
sbb
adc
jbe
add
arpl
cmpsl
xor
inc
out
fwait
addr16
xchg
pop
add
or
orb
rcrl
xor
inc
xor
cmp
shll
shlb
jae
or
jae
mov
not
pushf
inc
push
fnstenv
into
adc
push
insl
inc
pop
xchg
mov
sub
pop
add
xor
fcompl
or
add
jnp
adc
test
xchg
and
sbb
inc
xchg
bound
lahf
test
pop
cld
xlat
lahf
ds
in
jo
xchg
sbb
cmp
and
aas
sub
rcr
mov
and
rclb
mov
or
fmulp
mov
xor
outsb
lods
push
push
popa
imulb
push
xchg
ror
jae
inc
dec
test
dec
pushf
je
sub
lods
jg
rcll
in
mov
mov
movsb
pop
ljmp
ds
out
and
das
jns
mov
sarl
in
insl
push
cli
sbb
popa
fsubrs
inc
mov
add
jecxz
cmp
jg
out
mov
or
pusha
cmpb
mov
mov
xchg
hlt
xor
fdivrl
mov
and
std
push
xchg
push
out
cli
xchg
repnz
push
fs
jb
icebp
lret
int
push
mov
outsl
inc
sub
pop
cltd
outsb
rorl
outsb
sbbl
lahf
out
dec
into
pop
fucomip
inc
lods
pop
cld
lea
xchg
sub
int3
adc
test
insl
or
das
mov
xchg
lods
or
add
sbb
pushl
jnp
mov
mov
gs
imul
dec
adc
or
xchg
lahf
ret
fists
dec
lahf
bswap
cmpsb
repnz
cltd
das
cs
pop
jae
pop
test
push
inc
popa
push
sbb
movsl
andl
icebp
in
cmp
cmc
out
mov
inc
fimuls
mov
in
popa
out
mov
ret
jle
cli
jnp
in
or
mov
adc
push
sub
daa
dec
mov
stos
dec
out
fs
xchg
repnz
jb
lcall
push
mov
out
xor
loope
dec
xchg
cmp
lods
cmp
mov
mov
push
push
lds
adc
dec
repz
lods
scas
out
loope
aas
add
out
jbe
mov
xchg
push
push
mov
leave
je
and
or
mov
mov
push
pushf
fsts
push
insl
push
or
dec
sti
nop
add
jne
scas
imul
cmp
divb
dec
ss
out
cld
mov
daa
cmp
pop
movsl
std
pop
push
call
pusha
xor
jl
pushf
mov
inc
xor
insl
sub
arpl
mov
lea
or
ror
add
pop
mov
or
push
cmc
mov
jns
xchg
inc
repz
shlb
adc
dec
leave
scas
push
leave
add
sbb
in
ficompl
gs
in
arpl
sub
sbb
imul
jne
daa
push
push
lret
xchg
cmpsl
and
cmpsb
and
aam
jno
mov
call
out
sarb
mov
repnz
push
push
lcall
sub
les
jbe
adc
xchg
ficompl
pop
xor
inc
lret
pop
jge
xchg
push
or
pop
inc
xchg
outsb
aaa
pop
jbe
ret
enter
icebp
dec
outsl
jno
jl
jle
and
fninit
leave
insb
insl
daa
dec
inc
outsl
xor
pop
xor
gs
lds
pusha
cmp
jae
add
imul
push
jbe
bound
int3
ja
test
jp
movsl
fadds
pushl
pop
fnstcw
or
or
insl
or
add
adc
repnz
mov
lcall
or
fisttps
xchg
call
sbb
adc
test
sub
mov
mov
test
shll
divl
mov
lea
sbb
movl
jge
push
adc
push
pop
dec
fisubrl
rcrb
mov
test
adc
repz
fisttps
cmp
test
fildll
cli
aas
insb
movl
ds
je
xor
arpl
adc
xchg
jl
and
jmp
es
ret
enter
in
push
aad
popf
stos
push
push
add
lds
divps
jle
outsl
ja
bound
and
hlt
xchg
idivl
cwtl
mov
fdivs
cmp
outsb
jae
insl
sbb
arpl
ret
and
jg
cld
lods
dec
adc
push
cmp
lods
aad
dec
pop
scas
lret
lods
bts
fs
mov
cmpsl
and
or
je
je
test
add
and
mov
mov
call
xlat
out
inc
fimuls
mov
xchg
int3
mov
mov
mov
lret
adc
out
push
cmpsb
or
push
cwtl
sub
pop
fimuls
jb
rclb
rcrb
sbb
inc
push
jge
cli
push
xor
subb
push
into
pop
test
inc
and
xchg
mov
test
inc
fcompl
cmp
dec
loopne
jp
lret
bswap
cmc
iret
std
push
cmp
xchg
cmp
push
mov
pushl
fmuls
std
daa
stc
mov
ds
xchg
dec
jge
rcrl
mov
or
shll
inc
jge
xchg
cltd
adc
jmp
push
and
jl
pop
mov
pop
mov
repnz
xchg
cmpsl
dec
add
pop
je
or
sbb
imul
xchg
pop
and
sbb
test
imul
pop
das
or
mov
into
or
mov
lret
jp
add
daa
mov
dec
xchg
das
cmp
into
inc
cmp
xchg
adc
test
in
scas
subb
push
xlat
xchg
pop
and
sbb
repz
mov
sub
hlt
outsl
hlt
jno
enter
xor
fcomps
pop
pop
push
add
xor
sbb
dec
fldenv
mov
adc
scas
mov
inc
sub
fsubs
sbb
inc
adc
sub
adc
stos
jl
gs
sub
dec
mov
cmp
xchg
dec
xorb
sub
out
cmp
dec
mov
scas
loope
inc
arpl
adc
daa
in
cmp
lds
jl
mov
adc
mov
fildl
or
in
inc
adc
aam
popa
addb
jp
ja
add
mov
roll
ret
jne
cs
pop
jno
add
lahf
repnz
je
mov
push
rolb
aas
or
rclb
jo
cli
outsb
int3
mov
pop
movsl
lret
ja
loopne
mov
adc
int
idivl
and
sub
mov
in
or
cmp
fcomps
pop
std
inc
test
shll
sub
inc
imul
jge
bt
sub
mov
lret
fistpl
repz
mov
out
clc
sarl
inc
or
cmp
hlt
fwait
sbb
rcrl
dec
les
push
jge
pop
cmp
add
loope
fs
aam
xor
sbb
jns
movsl
dec
and
inc
fsubr
in
fwait
jecxz
push
leave
cmc
js
adc
sub
add
lods
dec
adc
cmp
mov
pop
mov
mov
jns
in
pop
loop
int
dec
test
lcall
bt
push
out
mov
iret
sbbl
lcall
xor
mov
fs
pushf
out
pop
inc
cmpsl
and
mov
imul
repnz
cmpl
jp
mov
je
sub
fnstsw
push
sbb
mov
push
xchg
mov
dec
sarl
adc
mov
push
lods
xor
data16
xchg
cld
sub
push
pop
movaps
jg
mov
jge
xchg
mov
jecxz
orl
adc
mov
push
mov
pop
int3
leave
icebp
mov
inc
mov
push
in
jge
rclb
mov
popf
cmp
test
mov
inc
gs
and
push
dec
adc
mov
mov
pop
popf
pop
cmp
add
sbb
mov
add
mov
lods
xchg
fsubrs
add
std
daa
repnz
xchg
rorl
ss
adc
daa
jge
sbb
mov
lods
sbb
add
xlat
shll
add
lods
lock
fcos
cltd
sbb
jnp
mov
mov
push
test
pushf
dec
mov
jecxz
dec
data16
push
adc
dec
sti
outsl
mov
mov
lahf
clc
movsb
inc
mov
hlt
xchg
jp
pushf
es
rclb
fimuls
in
xchg
jne
enter
imulb
lahf
dec
sub
movsl
mov
fisttpl
inc
daa
push
orl
test
mov
mov
dec
mov
add
daa
lods
iret
cmp
adc
ret
add
dec
cmp
outsb
jne
xor
aaa
rcll
push
mov
pmaddwd
push
xchg
out
pop
dec
mov
int
call
pop
push
xor
cmp
cmp
or
adc
xchg
mov
test
jmp
push
mov
jns
daa
cmovg
mov
mov
out
pop
lcall
popa
mov
xor
paddsb
test
int
jecxz
popf
dec
push
repz
mov
mov
mov
jmp
cmc
push
xchg
jecxz
icebp
sbb
or
adc
add
push
rol
test
jl
iret
sbb
inc
cwtl
jg
addr16
loope
pop
insl
iret
aad
cmp
xchg
add
outsb
lahf
js
push
cltd
test
aam
sbb
fucomp
daa
add
gs
jns
push
fnstsw
pop
push
xchg
cmp
mov
mov
push
push
push
call
lret
lods
inc
adc
test
stos
inc
jle
mov
lret
data16
ret
inc
fldl2t
movsl
sbb
iret
scas
imul
cwtl
aaa
mov
add
ret
jge
std
into
jnp
and
adc
mov
mov
jge
les
sub
sahf
daa
lahf
xchg
adc
fcompl
inc
cs
add
dec
adc
sbb
out
sub
xor
and
dec
sarl
int3
and
jns
sbb
lock
dec
insb
lods
gs
and
in
mov
mov
push
das
ljmp
xchg
cwtl
imul
jp
iret
add
fnstsw
pop
cld
inc
out
and
xorb
call
stos
sbb
es
jbe
popw
das
or
int
inc
xor
inc
lods
data16
jb
lods
mov
pop
push
insb
xchg
fisubrs
scas
and
test
je
pop
lock
xchg
pop
mov
nop
inc
aad
push
mov
and
xlat
cmp
cmc
movsb
ret
orl
adc
add
mov
xlat
mov
jg
out
dec
rcll
push
pop
pushw
outsb
dec
mov
call
int3
je
je
xor
mov
repnz
adc
cmp
jne
repnz
dec
ds
cmpl
jns
inc
outsb
sbb
sub
mov
add
lea
pop
sahf
cltd
cmp
cltd
shl
popf
dec
loopne
mov
std
xchg
inc
sbb
add
jge
push
out
rorl
mov
xchg
lds
mov
dec
cmp
jmp
jp
addr16
out
lods
stos
jns
mov
mov
push
xchg
div
push
pushf
and
cmp
push
mov
sub
sbb
and
xor
jl
xchg
mov
adc
mov
lea
lods
stos
sbb
xor
sbb
pusha
or
sarl
jg
rcll
fistpl
xchg
leave
push
xchg
fsts
popf
scas
pop
aas
adc
out
mov
dec
outsb
sbb
sub
add
push
cmpsb
das
addr16
jnp
cmc
call
rolb
sub
xchg
arpl
in
shll
push
movsl
test
test
lret
je
sub
fwait
mov
cwtl
popa
push
insb
or
and
fnstsw
mov
xlat
mov
mov
test
xchg
mov
ja
shrb
cld
sub
add
inc
jmp
push
fildll
pop
and
stc
ljmp
cmc
arpl
inc
mov
dec
mov
rcrb
mov
xchg
icebp
adc
sbb
inc
pop
jno
mov
out
scas
and
out
scas
xor
push
push
arpl
dec
push
shrb
push
bound
stc
cli
xchg
in
jecxz
inc
es
cs
xchg
add
insl
and
orb
movsl
or
cmp
xorl
imul
inc
fcoml
orl
in
loop
push
mov
mov
xchg
pop
mov
push
adc
push
repz
xchg
popa
stos
sbb
xchg
cmp
jp
push
enter
sbb
mov
and
push
int
sbbb
jo
cmp
dec
push
add
nop
lods
movsb
out
push
sub
xchg
add
push
imul
sub
mov
cmc
into
addl
test
xor
mov
pop
insb
inc
push
pop
mov
lea
repnz
imul
leave
out
lret
ds
int3
std
xor
out
xor
repz
addr16
lock
xchg
jo
mov
emms
or
push
lret
add
pop
xlat
jle
mov
push
xor
shrl
call
lods
test
aam
cwtl
jge
std
pop
or
jecxz
int
fldt
ds
xor
inc
iret
aaa
xchg
push
and
lods
add
sti
dec
add
mov
fst
inc
push
and
or
jle
or
sbb
xor
inc
ja
jmp
sbb
xor
mov
mov
icebp
push
or
sbbb
test
mov
sub
hlt
out
aas
lods
repnz
mov
mov
mov
iret
pop
dec
xchg
out
insl
imul
pop
sar
push
jne
je
fidivl
orl
call
fidivrl
pop
daa
jle
loopne
mov
inc
cmp
call
aaa
sbb
int3
int3
jg
jno
in
and
dec
int3
pushf
xlat
mov
lret
sbb
fdivs
cltd
movl
inc
mov
sarl
inc
fld
mov
cmp
jmp
aaa
repnz
addl
cmp
inc
cmp
mov
cltd
into
fldenv
add
sarb
or
rolb
inc
in
xor
aaa
popf
lret
fs
test
clc
movsb
ss
mov
or
adc
pop
mov
push
cmp
loope
rcll
stc
jne
jge
xchg
cli
fimuls
add
test
xor
clc
out
imul
lret
addl
pop
mov
pop
ret
dec
cmp
fisubrl
sbb
test
fsubs
pusha
rclb
pop
lret
jl
adc
inc
jbe
push
push
arpl
nop
xchg
inc
in
ljmp
mov
dec
loop
jnp
sahf
sub
push
mov
lcall
mov
inc
push
cmpsb
and
jmp
dec
mov
shll
push
jl
xchg
mov
das
sbb
xor
es
hlt
push
sbb
jne
jl
cmp
mov
outsb
cmp
push
psraw
icebp
or
mov
mov
pop
lods
xor
lret
inc
inc
fbld
jg
fwait
add
in
sbb
inc
mov
xchg
and
add
outsb
cmp
enter
mov
out
cwtl
mov
jne
jle
scas
lcall
lcall
popf
jae
imul
mov
scas
sub
addr16
jb
dec
fcoms
stc
icebp
sbb
popa
daa
lret
movsb
scas
lock
or
ss
call
mov
sub
dec
cmc
inc
xor
pushf
insb
jge
adc
divb
inc
cmc
xchg
jle
mov
rcrb
insb
mov
push
adc
fwait
popa
lods
shlb
je
xor
jmp
scas
adc
pop
rorl
out
fisubl
mov
repnz
dec
hlt
fwait
mov
push
test
jnp
cmp
lock
jge
sarb
lret
mov
sbbb
fisttpl
lret
jns
test
pop
rclb
lea
xorl
add
dec
lret
push
pop
cmp
cwtl
jns
mov
or
out
int
pop
sub
sub
sub
xchg
rolb
push
imul
das
or
sub
pushf
hlt
cmp
mov
pop
out
sub
mov
mov
sub
jo
cmp
imul
popa
andb
xchg
sub
mov
mov
xor
jg
lret
lret
inc
jo
xor
jmp
mov
pop
bound
icebp
mov
aaa
insl
xchg
and
roll
adc
and
dec
xlat
xchg
int
push
jne
sahf
orb
pushf
pop
cwtl
xorb
fisubrl
or
fst
fs
mov
and
loop
mov
cmpsb
aas
cmp
push
push
inc
cmp
fistl
ja
sub
nop
cmc
pop
adc
jno
inc
sbb
pop
jae
enter
jns
mov
add
pushf
mov
daa
jo
lock
mov
aas
adc
sbbb
jge
mov
or
xlat
es
pop
push
fwait
dec
outsl
mov
jp
mov
cmp
bound
pop
pop
xchg
scas
jmp
jb
push
insb
int3
cmp
nop
add
test
clc
sub
push
fcomps
dec
mov
sti
add
mov
jns
sub
mov
mov
jnp
or
adc
mov
jnp
fsubrl
mov
int3
test
jg
sahf
rcll
inc
push
fmuls
test
cmpsb
cmp
and
scas
jg
jb
mov
mov
or
xchg
inc
shlb
jg
xor
fldl
pop
cld
or
nop
add
xor
add
mov
aas
mov
cld
xor
sbb
insl
sbb
push
addr16
bswap
mov
fs
cwtl
adc
add
adc
xchg
mov
ret
jp
lods
xchg
and
shl
pop
std
pop
sti
dec
daa
add
inc
pop
dec
test
ds
push
outsl
daa
int
push
push
arpl
ret
fs
mov
sti
repnz
jae
ficomps
lret
stos
mov
xor
jns
pop
stc
ss
or
cmp
jle
lods
mov
sbb
dec
mov
pop
out
xchg
push
stos
ljmp
lret
xchg
sub
lods
bound
pop
adc
nop
push
inc
mov
gs
mov
dec
sub
push
push
pop
dec
mov
add
test
mov
inc
inc
sbb
xchg
lock
mov
xchg
rol
push
mov
test
pop
mov
inc
mov
sbb
hlt
mov
test
pop
rcrb
cmpsl
movsb
ror
dec
xor
mov
int
xor
or
test
lret
add
mov
hlt
jnp
addr16
add
in
into
test
pop
rorl
fsts
and
sbb
add
insb
repz
sti
sub
xlat
sbb
popa
int
jae
fcoml
xchg
cmpsb
std
dec
std
mov
mov
xor
adc
scas
lock
mov
mov
in
cmpsb
out
cmp
imul
mov
inc
lea
ret
data16
shlb
cmc
aaa
xor
ret
out
and
or
test
push
cld
mov
jne
int
pop
and
mov
std
adc
sarb
arpl
mov
clc
dec
loop
fdivrl
stos
xchg
scas
aam
push
mov
or
lcall
int3
mov
mov
jecxz
sbb
stos
xor
and
fwait
pop
popf
or
cs
xor
jo
movsl
ret
shll
mov
adcl
xchg
nop
xabort
or
data16
cli
fwait
pop
out
or
mov
mov
lock
fs
fbld
mov
add
mov
outsl
xchg
sub
fstpl
shlb
xor
stos
lods
dec
aas
and
jecxz
lcall
mov
xor
loop
sti
pop
fcmovne
inc
bound
push
pop
cmp
imul
mov
stos
testb
mov
ljmp
int3
fstpt
les
inc
jbe
lret
jo
dec
repnz
addl
mov
jge
call
adc
mov
mov
aas
movb
cld
mov
repnz
ja
sbbl
jle
pop
out
movsb
lods
mov
pushf
jecxz
push
jns
adc
cld
push
shl
pop
out
xor
xlat
adc
xchg
in
mov
dec
addr16
loope
enter
nop
loopne
fs
and
push
mov
push
mov
lcall
jo
sbb
mov
sub
pop
lods
data16
xor
repz
xor
cltd
addr16
mul
loopne
lret
mov
lods
cltd
lock
cmp
xor
inc
dec
cmp
popf
and
fcompl
sub
sbb
and
lret
leave
add
sbb
or
xor
sub
and
mov
or
jge
mov
mov
jmp
inc
xchg
adc
cld
jle
dec
and
outsb
mov
mov
out
push
jg
xchg
mov
add
mov
dec
pop
dec
jns
or
jmp
xchg
cmp
pusha
dec
enter
xchg
add
cmp
mov
cs
aas
mov
pop
and
ffreep
out
pop
jg
or
es
nop
pop
dec
jbe
ljmp
push
push
jns
icebp
roll
push
test
jnp
jae
sti
pop
mov
in
pushf
outsb
mov
dec
push
jno
mov
mov
pusha
test
jg
cmp
loop
xor
push
xchg
pop
data16
ds
xor
fs
jbe
xor
push
adc
fs
lcall
mov
and
jne
add
push
cmp
fwait
jbe
aad
and
xchg
sbb
pop
push
jg
push
xor
lea
mov
fidivl
sbb
mov
or
fstl
inc
dec
lods
mov
adc
mov
pop
sbb
rcrl
inc
mov
xchg
jmp
in
mov
add
pop
in
adc
xchg
mov
sahf
les
sub
mov
sti
jg
repz
cmpsb
movsb
pop
ljmp
addb
lock
sub
mov
pop
sti
call
jge
sbb
cld
mov
repz
cmp
movsl
fdivs
stos
fsts
mov
adc
les
stos
int3
movsb
cmp
push
pop
outsb
or
insb
dec
sbb
mov
xchg
fs
mov
xchg
mov
loope
roll
or
jns
ss
mov
xor
jns
test
xchg
xchg
iret
mov
xchg
cltd
std
lds
dec
js
push
xor
sti
rcr
std
sub
lds
pop
sub
popa
add
sub
popa
test
dec
sub
popf
xchg
ja
xor
or
pop
mov
vaddsubps
xor
imul
inc
and
rcll
insb
subl
pushf
out
aam
aas
and
or
inc
xchg
mov
popa
pop
jo
cmpl
push
jl
mov
fisttpl
in
adc
mov
lods
add
sahf
lret
mov
test
ss
jns
push
pop
sub
fimuls
ljmp
ss
cli
inc
ljmp
mov
push
sub
cmp
fcmovu
jmp
insl
sahf
pop
cmp
adc
ret
jno
inc
ret
add
out
jns
sahf
cmovg
icebp
xor
sub
push
fucomip
push
jp
call
cmc
rorl
adc
push
mov
sub
and
fimuls
sbb
pushf
cmc
packuswb
inc
cmp
mov
in
mov
pop
xchg
in
or
jb
loop
test
or
ljmp
push
inc
inc
insl
js
pushf
shll
push
pop
mov
lahf
push
xchg
pop
lods
and
xchg
mov
insb
in
mov
jb
adc
pop
loopne
pop
push
mov
sub
popa
inc
gs
stc
sbb
gs
jns
jb
jg
adcl
addr16
stc
jns
or
repnz
lods
je
add
jl
sbb
ss
jp
int
cmc
stos
js
mov
sub
sub
leave
fwait
andb
cli
in
lock
push
adc
xor
iret
mov
mov
setne
arpl
idiv
repz
mov
or
dec
adc
xor
jae
xor
cwtl
enter
inc
gs
xchg
xchg
pop
out
inc
shrb
lret
inc
fcmovu
adc
inc
orb
pop
mov
push
imul
test
sbb
mov
lret
mov
js
cmp
mov
cmpw
aad
mov
jle
out
mov
int3
ja
fisubs
es
xchg
addr16
mov
pop
mov
leave
sbb
lcall
mov
lret
xchg
sbb
and
cli
jae
lea
sbb
les
or
add
jnp
loop
lods
imul
jl
push
xor
cmpl
pop
addr16
rcl
out
xchg
test
and
setle
inc
pop
mov
fmull
sbb
bound
cmp
sub
popf
fs
cmp
fadd
repnz
inc
les
bound
sub
add
adc
loopne
stc
jmp
lds
les
mov
ljmp
pop
stc
pop
aas
mov
sub
js
mov
pop
jnp
shlb
sarb
cmp
push
xchg
sbb
cs
and
sub
sbb
fiadds
sbb
fmull
jnp
cmpsb
loopne
jp
sub
loop
aad
mov
mov
nop
mov
jmp
push
aam
mov
in
sbb
pusha
mov
push
cs
lods
cmp
lods
or
mov
sbb
clc
push
inc
inc
leave
xchg
dec
ret
cmp
lock
lcall
in
pop
sbb
addb
aaa
jb
int3
cmp
nop
dec
push
adc
push
sub
fidivrs
mov
sti
shlb
mov
cmp
xchg
js
push
out
std
adc
clc
jns
cmp
adc
insb
sbb
and
fiaddl
testb
loope,pt
add
lret
loopew
push
je
das
push
jle
mov
jbe
mov
jns
cmpsb
jbe
int3
pop
pushf
dec
fidivl
das
das
sbb
sahf
jo
testl
push
das
cmpsl
cmpsb
xchg
inc
out
dec
int
lods
push
push
int
std
fstl
scas
ljmp
stos
lock
mov
js
iret
jg
adc
xchg
scas
cmp
mulb
push
sub
ljmp
mov
add
xchg
repnz
or
mov
pop
push
rclb
sub
mov
mov
lret
or
cli
in
clc
mov
insb
adc
dec
sub
popf
sti
push
testb
cli
add
mov
add
adc
orl
mov
pop
pushf
jo
cmc
rclb
pop
jp
fwait
mov
cmp
sub
pushf
sub
xor
dec
jg
cltd
cmp
adc
or
test
mov
jp
push
sahf
sbb
jo
sarl
xchg
xor
jg
adc
sub
vpmullw
ss
daa
movsl
and
imul
sbb
xor
adc
pop
jge
mov
xchg
sub
dec
fld
in
je
xorl
arpl
add
pop
cmp
sti
int
and
addr16
call
gs
xor
push
cmp
pop
fimuls
mov
cli
lock
pop
mov
in
in
pop
mov
pop
add
mov
test
clc
lret
inc
adc
jl
push
pop
push
xchg
in
xor
jns
mov
in
jnp
mov
push
xchg
jle
sar
add
mov
add
mov
xor
repnz
xor
iret
and
adc
jge
xchg
xchg
push
in
repz
cmp
es
xorb
leave
cli
adc
ss
movsl
shlb
or
orb
out
in
inc
xchg
inc
mov
mov
sahf
clc
mov
xorl
std
mov
mov
jns
ss
push
or
cwtl
fs
jne
insl
add
in
dec
adc
cmpsb
and
push
sub
into
fnstsw
xchg
cmp
add
mov
dec
inc
addl
lret
pop
test
mov
or
in
pop
cmpl
fildll
lret
or
cmp
in
push
cmp
jl
pop
and
cmp
cmpb
jo
sbb
mov
popf
sahf
into
sti
dec
mov
rolb
stos
les
dec
sbb
popa
popf
icebp
jae
adc
xor
mov
fsubrp
mov
dec
daa
xor
shlb
add
in
add
outsl
inc
iret
jp
cmp
pop
lods
jle
jns
divl
movsl
mov
aam
push
imul
clc
icebp
cmp
pop
in
jle
xchg
repnz
xchg
or
lcall
adc
ret
cmp
in
negb
cmpb
and
subb
out
loop
cmc
insb
sub
sbb
pop
sbbl
and
jnp
add
xchg
sub
outsb
jl
dec
mov
dec
outsb
pop
jecxz
sbb
movsb
xchg
imul
lahf
xor
loop
loop
sub
cwtl
leave
mov
jns
lcall
lret
mov
movsb
hlt
test
xchg
and
xchg
popf
mov
aas
stos
in
mov
cld
test
test
xor
hlt
out
out
lds
xor
push
xchg
rcrb
call
and
fistpll
shlb
leave
jo
cmp
add
lret
jno
pop
dec
sub
imul
mov
call
aaa
hlt
and
ds
inc
push
pop
cmp
shll
mov
out
les
movsb
mov
ret
nop
add
jb
jg
and
rcll
fisttpll
aas
sub
icebp
test
sbb
sub
jmp
jg
fisttpll
xchg
jno
dec
mov
jg
bound
xor
iret
jg
sti
pop
sbb
movsb
mov
adc
insb
lahf
add
loope
mov
lret
pop
jmp
cmp
bnd
roll
inc
rclb
rorb
push
fwait
or
jb
insb
scas
and
mov
jmp
and
insb
pop
fbld
stc
movaps
xor
jne
arpl
xchg
inc
mov
lock
mov
mull
inc
cmp
sbb
je
mov
inc
cwtl
mov
ret
cmp
or
addl
cwtl
inc
inc
icebp
cli
leave
loopne
cmc
lcall
cmpsb
jbe
mov
rolb
mov
mov
sub
es
rorb
test
mov
sbb
test
out
mov
sub
push
xchg
and
into
shlb
dec
mov
orl
lods
inc
xchg
adc
cmp
roll
add
cmp
xchg
sbb
inc
rcl
inc
mov
dec
shll
pop
xchg
mov
fnstcw
test
mov
mov
loopne
jp
dec
jnp
or
sbb
xchg
lret
lret
std
dec
jg
inc
out
cmc
nop
test
jo
shll
mov
stos
repnz
pushf
push
test
or
mov
pop
test
dec
push
scas
xor
sahf
push
pop
sbb
adc
scas
inc
clc
xchg
mov
sub
pop
dec
stc
andb
dec
into
dec
xor
out
xor
dec
imul
xor
push
jecxz
add
ljmp
aaa
mov
imul
or
cmpsl
dec
inc
jp
sub
cmc
mov
lcall
jp
and
or
jge
lock
sbb
aam
cmc
stc
insl
decb
sbb
cmp
cmc
mov
mov
sti
fcmovu
pop
add
int3
lahf
mov
adc
jb
jae
add
or
add
enter
pop
ljmp
and
mov
adc
movsb
test
loope
jg
mov
insb
and
pushf
sbb
fsubs
mov
cltd
inc
clc
xrelease
inc
repnz
jne
push
cwtl
outsl
ror
mov
mov
cmc
xlat
jne
dec
fcmovu
aas
add
data16
mov
fistps
mov
adc
sub
xchg
jno
mov
mov
movsb
mov
es
pop
into
xlat
xchg
push
inc
icebp
scas
xor
cmpsb
cmp
push
lcall
imul
jbe
test
les
inc
data16
pop
sub
and
or
std
or
mov
adc
jmp
sub
xor
adc
ja
push
outsl
sarb
mov
data16
xchg
fxtract
lods
scas
in
push
mov
adc
loopne
mov
mov
fs
and
xor
ss
dec
adc
adc
movsl
push
mov
out
cld
je
aad
inc
mov
popf
jl
and
out
push
pop
cmpsl
cmp
ror
push
iret
push
mov
adc
sub
pop
nop
mov
outsl
sahf
loope
adc
mov
add
mov
ja
push
call
or
adc
push
xchg
mov
adc
pusha
ret
outsb
bound
in
jp
out
sar
fiaddl
mov
dec
push
sti
subb
out
inc
rcll
and
das
jge
stos
cmp
lret
ljmp
or
imulb
jns
jnp
or
cmp
xlat
outsb
aaa
dec
mov
jge
call
fs
adc
xchg
xlat
fisubrs
push
roll
push
imul
xchg
test
inc
dec
jmp
sbb
rolb
repz
adc
sub
aam
xchg
pop
mov
lods
out
pushf
call
adc
shlb
mov
fdivl
test
xlat
lret
jl
js
dec
sub
dec
sbbb
ss
out
and
pop
mov
or
xrelease
bound
ljmp
pop
xchg
lods
xor
xchg
arpl
jge
sbb
leave
inc
xchg
mov
cmp
mov
xchg
mov
mov
movsl
pop
mov
inc
mov
aas
sbb
pop
daa
fs
ret
ret
rclb
mov
cli
sub
enter
or
jg
repz
ss
ret
cld
or
lea
pop
stos
adc
add
dec
push
or
pop
sub
outsl
xor
inc
xor
dec
push
fstps
inc
sub
sub
outsl
sub
dec
mov
push
out
mov
rcrl
and
fadd
push
mulb
xorb
inc
clc
cltd
cmp
lods
mov
mov
icebp
mov
adc
sbb
in
xorl
outsl
push
xlat
cmpsl
rorl
push
scas
movsl
inc
cmpl
push
mov
mov
mov
ss
adc
sbbl
push
daa
push
or
jno
lock
cmc
mov
push
into
imul
mov
out
jnp
add
ss
adc
hlt
movsl
sub
xor
sbb
fs
repz
bound
imul
push
lret
pop
sbb
out
not
cmc
imul
sub
lods
aas
cli
loope
xchg
loope
add
hlt
std
xchg
add
ret
add
push
lahf
fimull
cmp
repnz
cmp
and
cmc
popa
jbe
leave
mov
pop
push
lock
rcrb
test
inc
sbb
stos
xchg
lahf
dec
cld
std
lock
mov
rolb
das
int3
mov
jo
or
fnsave
loopne
pusha
xchg
adc
and
dec
rolb
cmp
jmp
pop
push
xchg
dec
cmpsb
pop
jmp
push
push
sar
ljmp
pop
lods
dec
sbbb
cmp
mov
inc
jae
inc
inc
push
test
pop
jmp
div
push
rclb
enter
mov
lds
mov
fisttps
enter
cld
adc
pop
push
xchg
stos
xlat
shl
imul
loopw
cmp
jns
mov
xor
or
mov
and
data16
pop
xchg
jo
imul
sub
xlat
push
sbb
mov
cli
cli
data16
mov
cmpsl
mov
insl
or
mov
add
pop
jnp
jg
fdivs
cmp
dec
addr16
dec
cltd
iret
sub
add
ds
bound
enter
rorb
rorb
or
lods
jg
sub
xlat
dec
out
jnp
inc
adc
pop
or
mov
rorl
loop
cmp
and
jnp
mov
jne
sahf
outsl
aad
cmp
lcall
ficomps
push
outsl
xchg
sub
inc
cmpsb
fsubs
data16
mov
mov
bound
mov
or
and
lret
outsb
dec
cs
pop
xor
jle
or
dec
cmp
std
or
push
dec
fnstsw
das
xchg
sti
push
dec
mov
jno
or
pop
mov
movsl
and
and
ret
stos
push
sti
scas
shrb
mov
rcrb
or
movsb
sbb
decb
dec
dec
mov
jmp
lods
and
movsl
fbstp
push
cmp
sub
inc
push
mov
repz
cmpb
dec
push
and
and
mov
or
jle
test
out
sub
cmp
cmp
jnp
testl
cmp
mov
xor
shl
lock
out
or
xchg
push
stos
test
sbb
jle
sbb
push
xchg
mov
pop
dec
push
jns
sbb
or
enter
pop
and
std
push
hlt
das
or
jl
pop
push
adc
or
ljmp
mov
inc
push
xor
inc
pushf
pop
enter
fldcw
xchg
pop
or
stos
rorl
in
ss
enter
gs
cld
cmp
cmp
nop
xlat
in
inc
inc
inc
xchg
data16
sub
jno
fcompl
push
push
fsqrt
mov
pusha
jecxz
rcrb
xchg
xchg
call
inc
mov
dec
and
pop
cmp
cs
xlat
mov
and
sbb
lret
mov
nop
inc
jmp
dec
bound
lret
pop
mov
test
and
jecxz
adc
fcoml
mov
xor
ja
outsb
std
mov
int3
ret
icebp
test
sbbb
in
push
pop
xchg
cwtl
push
mov
push
aam
mov
mov
sub
jmp
repnz
popa
lahf
lds
pushf
adc
incl
stos
mov
pmuludq
jmp
shrl
es
jmp
mov
jle
adc
push
xchg
sub
push
call
lds
psllq
and
fisubrs
in
rcrl
inc
mov
rcl
jae
sub
outsb
arpl
ja
mov
daa
xchg
xchg
mov
mov
cs
aam
push
xor
push
insb
out
jns
add
xchg
or
inc
fistpll
sbb
out
test
push
adc
jb
mov
jmp
notl
adc
pushf
or
cwtl
jne
pop
xchg
pop
or
push
push
push
dec
mov
shlb
xchg
jmp
push
pop
mov
add
pop
fstpt
loopne
sbbb
movsb
push
hlt
add
movsl
repnz
out
jmp
pop
adcb
bound
push
out
insb
rorl
notl
fst
dec
sub
sub
adc
xor
jmp
imull
daa
in
xchg
lea
xchg
arpl
jae
aad
fmuls
xor
addb
sbb
nop
mov
pop
inc
and
std
mov
lods
pop
sbbl
rorl
pop
mov
cmp
stc
or
add
sahf
in
add
imul
je
mov
leave
pop
add
rorl
stos
push
int3
out
mov
push
cmp
mov
lret
inc
mov
andl
out
in
comiss
out
lods
dec
pop
rcr
fimuls
mov
sbb
repnz
push
cmpsl
sbbl
shll
icebp
ficomps
repnz
loop
fwait
lcall
insb
popa
int
gs
jle
cmp
mulb
pop
inc
jecxz
fnstenv
push
les
mov
sub
cmc
lea
insb
lods
and
ret
inc
push
loope
sub
sbb
xor
pop
push
sbb
mov
dec
add
xchg
fidivrs
push
xor
lahf
or
pop
and
test
pop
call
sbb
in
sub
pop
repnz
std
fdivrs
pop
out
adc
clc
adc
push
test
and
js
mov
push
mov
mov
subl
loop
push
fucom
dec
rcr
push
dec
push
cmp
push
push
scas
push
xchg
scas
mov
loopne
pop
outsl
mov
out
dec
cmp
push
inc
fists
cltd
bound
push
pusha
adc
jnp
aas
push
and
lods
push
prefetcht0
dec
out
or
sub
out
adc
push
cmc
jne
std
loope
cmp
xchg
jb
sti
std
sub
pop
jg
ss
xchg
test
pusha
aad
inc
mov
sahf
aas
jmp
adcb
dec
test
sub
rcrb
sbb
jno
adc
shrl
xor
add
into
pop
xchg
pop
mov
pop
lahf
dec
loope
xor
mov
call
sbb
movsb
addr16
and
pop
add
mov
xlat
rorl
scas
sub
inc
sbb
pop
ss
lods
cmp
movsb
adc
in
sbb
lret
pop
adc
jno
pop
mov
jl
mov
xor
cmp
fsubl
inc
or
or
and
jne
mov
mov
cmpsb
push
les
nop
push
lret
add
lret
lret
mov
xchg
jle
fmul
mov
jne
mov
mov
scas
popf
aad
jmp
es
push
imul
inc
mov
push
mov
stos
enter
gs
cmp
sub
bound
in
mov
jo
aas
mov
mov
pop
jo
jecxz
jns
jne
push
and
dec
inc
xor
push
scas
add
test
shll
int
jmp
add
stos
hlt
adc
pop
mov
xchg
test
lcall
push
push
inc
aaa
fdivrl
pop
mov
out
sbbl
rclb
lahf
popa
mov
xchg
cmpsb
push
int
push
movsl
mov
in
inc
std
xchg
jnp
jmp
xchg
inc
dec
ljmp
mov
or
das
cmpsl
jp
dec
jae
jle
js
mov
lret
cmpsl
jge
xchg
push
cmp
arpl
pop
sub
xchg
gs
xlat
jl
pop
jno
stos
push
pcmpeqb
jl
add
imul
add
ljmp
pop
inc
sti
push
fwait
xor
sub
enter
lcall
imul
out
dec
in
pop
pushf
insb
in
push
mov
sub
mov
loop
dec
cmc
push
iret
xchg
sbb
xor
pop
and
xor
lods
repz
cltd
out
shlb
cmp
stc
scas
scas
out
mov
and
shll
dec
or
hlt
daa
push
push
ljmp
insb
out
or
repz
test
jl
cmp
ret
mov
sbb
hlt
push
arpl
filds
inc
sar
cmp
insb
call
outsl
into
sub
and
out
pop
cmp
fnsave
lods
mov
scas
cmc
lods
inc
cmp
lcall
test
sub
aaa
jmp
outsb
sub
and
add
je
cmpsl
icebp
push
fs
stos
and
stos
pop
in
cmpsl
and
add
icebp
mov
push
rcl
push
push
movsb
out
push
add
inc
mov
or
add
mov
push
arpl
push
cmp
fists
out
dec
loope
ljmp
sub
popa
imul
cmp
pushf
jae
mov
push
das
add
test
or
mov
stc
pushf
aad
aaa
popa
loop
iret
aad
pop
xchg
and
stos
loope
and
fidivl
mov
aad
push
mov
mov
mov
test
sti
xor
cmc
cmpsl
addps
mov
jl
subb
inc
mov
cltd
lock
mov
jbe
imul
inc
je
gs
sarb
dec
leave
hlt
stc
shlb
cmp
fwait
movsbl
rclb
jae
sub
fidivl
sbb
pop
jno
sub
scas
repz
add
adc
push
xlat
push
sbb
test
push
and
aam
daa
addl
and
cld
pushf
push
ret
inc
outsl
push
push
xchg
sub
jg
dec
dec
dec
repz
scas
stos
mov
or
push
aas
cmc
sti
jmp
scas
adc
mov
loop
push
fisubl
inc
sti
sub
std
lods
pop
dec
ror
ss
das
xor
xchg
mov
jg
sbb
sbb
daa
lds
stc
or
dec
mov
mov
popa
and
cmp
fildl
and
addl
xor
leave
or
popf
aad
xor
shlb
xchg
dec
dec
xlat
aam
jb
or
sub
aas
mov
jg
adc
idivb
int3
jbe
ds
mov
icebp
and
push
adc
mov
xlat
out
aam
mov
sti
pop
xor
inc
mov
icebp
lea
enter
mov
xchg
fmuls
add
fistpll
es
or
aaa
push
sub
daa
lret
and
leave
cmpsl
or
outsl
daa
aaa
ljmp
mov
xor
ret
inc
cmp
adc
or
repnz
jns
test
mov
icebp
pop
adc
mov
mov
fsub
cltd
stos
add
sbb
lahf
daa
pop
aad
or
aad
inc
addr16
out
jg
xor
jae
dec
or
ja
cmp
data16
shlb
mov
push
dec
fdivl
out
xor
out
into
lods
jl
jae
xchg
dec
cmp
sbb
push
push
lret
pop
ds
enter
pop
je
jne
es
jno
xchg
lret
paddw
gs
cmp
out
adc
inc
or
push
test
mov
ja
std
mov
sub
lcall
lahf
xor
sbb
fmul
loopne
mov
inc
cmp
enter
stos
jns
pushf
cltd
xor
lret
mulb
pop
insl
and
or
repnz
mov
mov
inc
jmp
push
mov
sub
inc
test
dec
iret
inc
and
cld
dec
inc
cmp
jmp
negl
mov
jns
subl
xchg
jne
inc
popa
xlat
xor
cs
cmp
out
xchg
pusha
mov
sahf
mov
movsl
push
hlt
sbb
fdiv
mov
and
pusha
push
mov
mov
push
xor
cmpsb
lret
cmp
out
mov
into
lcall
stc
mov
adc
mov
loopne
lods
adc
push
xchg
jmp
mov
jle
jg
bound
sub
jns
lahf
nop
jecxz
adc
aam
cli
ja
int
mov
mov
ja
movb
jp
subl
or
push
sub
dec
adc
mov
dec
and
mov
add
xchg
or
sbbl
je
adc
inc
sbb
mov
push
insb
jmp
mov
xor
sbb
cmpb
pop
push
jbe
mov
pushf
les
pop
or
push
subb
xor
push
das
aas
sbb
xor
push
xor
int
or
jmp
lret
dec
jg
stos
jl
lret
adc
push
idivl
pop
sarl
inc
stos
cmc
fdivrs
and
pop
jo
ds
insl
je
adc
shlb
fldl
jno
inc
or
sarb
scas
imul
popf
xchg
sbbb
cmpsb
mov
sbbl
jnp
sahf
pop
sarl
mulb
jae
mov
insb
bnd
mov
pop
pusha
xor
inc
dec
das
cmp
adc
mov
add
cmpsb
cmp
sub
out
cwtl
adc
or
or
mov
ret
js
orl
cs
cmp
pop
dec
xor
aad
shlb
in
ficomps
or
testb
stos
insl
adc
lret
and
jge
adc
add
insb
jge
and
fimuls
aas
nop
popa
incl
arpl
pop
mov
add
cmc
pop
mov
daa
lods
dec
cmp
jg
nop
mov
and
mov
pop
dec
xchg
pop
ret
outsl
mov
xchg
pop
pop
imul
lea
and
addr16
test
or
data16
testl
sbb
fwait
add
mov
sub
loope
adcl
sub
xlat
jns
fwait
or
mov
es
push
fstpt
adc
testb
ret
testl
dec
add
add
es
mov
push
mov
sub
mov
xchg
lods
movsl
sti
or
stc
shrl
cmpsb
outsb
xchg
fsts
pop
popf
sahf
mov
notb
xlat
cld
xchg
lods
pushf
hlt
imul
jne
enter
xor
sbb
adc
mov
test
cmp
jmp
iret
iret
jecxz
je
out
mov
cmc
rclb
pop
mov
daa
add
mov
enter
mov
add
cld
adc
and
mov
arpl
dec
xor
add
xchg
dec
sub
mov
shrl
cmc
fcompl
mov
jecxz
popa
or
sub
getsec
shll
imul
xchg
or
mov
pop
rol
sbb
push
int
add
fistl
xchg
mov
mov
data16
jnp
push
or
xor
int
pop
idivl
lods
dec
aaa
in
in
adc
test
mov
jnp
das
mov
scas
jmp
or
mov
rorl
into
pop
xchg
sti
inc
mov
call
test
inc
lods
mov
inc
icebp
jns
jo
jno
and
mov
in
xlat
mov
push
xchg
jmp
push
aaa
mov
icebp
jns
xor
scas
insb
dec
and
in
mov
mov
cmp
outsl
mov
and
outsl
fists
mov
cmpsb
mov
push
repz
and
repnz
gs
or
fiaddl
jnp
je
sahf
hlt
ja
mov
rorl
inc
std
sahf
mov
ds
mov
inc
xor
test
frstor
cltd
fs
and
int3
mov
sarl
mov
or
sub
xchg
lret
mov
mov
push
mov
dec
xchg
test
fs
fdivrl
sbb
sbb
mov
cld
fisubrs
lret
pop
jecxz
aad
or
mov
jno
sbb
adc
mov
out
sahf
push
movlps
push
xchg
jg
jns
loope
sar
lds
icebp
cmp
arpl
outsl
lret
cmp
dec
movsl
mov
sub
fstps
sti
loope
cmpsb
jnp
cwtl
mov
imul
scas
pop
or
lods
int
arpl
jp
test
bnd
sbb
nop
lret
mov
jb
xchg
sub
shr
daa
sub
in
mov
es
cmp
jmp
and
lods
test
jl
mov
pop
xchg
pop
or
or
jl
ljmp
and
iret
test
sbb
repz
leave
jo
mov
xchg
and
aaa
dec
dec
test
sbb
gs
mov
add
mov
mov
sbb
enter
add
rcll
sub
xor
adc
pop
repz
fldenv
jne
sub
jle
dec
adc
mov
scas
jge
insb
fcmovb
mov
test
into
jnp
and
filds
cmc
xor
mov
add
pushf
test
push
ficompl
cmp
icebp
xchg
pop
xor
popa
loopne
push
fs
outsl
outsb
data16
call
fxch
arpl
call
movsl
movzbl
in
sbb
scas
loop
push
mov
jae
mov
jo
cs
jle
fidivrs
sbb
ja
inc
xchg
adc
les
push
out
mov
and
lds
dec
mov
add
jno
mov
in
jp
pop
pop
mov
push
cmp
jle
sbb
jbe
sub
in
sahf
int3
inc
inc
nop
pop
or
dec
sub
adc
inc
xor
jns
cwtl
inc
jbe
pmaxub
pop
in
and
mov
outsb
cltd
xchg
outsl
out
mov
push
inc
adc
cmp
lret
sar
xchg
or
lods
sbb
xor
pop
loopne
adc
xchg
and
into
imul
repz
shlb
and
xchg
jne
sub
sti
jns
movsb
clc
mov
cmpsb
andb
add
insl
push
inc
jecxz
int
fldt
pop
mov
ss
pushf
xor
sub
pop
xor
mov
push
repz
and
in
imul
push
adc
mov
mov
xchg
mov
jo
daa
mov
sbb
mov
fsub
add
cmp
xor
dec
jg
insb
inc
lods
lock
push
or
cmpsb
xchg
jbe
shrb
pop
stc
push
pushf
das
div
insl
bound
mov
inc
and
jle
push
int3
jp
push
mov
dec
mov
out
test
mov
mov
sahf
sti
mov
cmp
rcrl
sarl
imul
and
lret
pop
xchg
adc
aaa
prefetch
sbb
push
outsb
outsb
inc
popf
leavew
std
pushf
stc
aas
js
jbe
mov
or
repnz
and
stos
fwait
mov
push
jb
cmp
in
xor
fwait
sub
pushf
pop
pop
mov
cmp
stos
pusha
inc
out
sub
mov
pop
jbe
adc
push
icebp
mov
cs
push
daa
cmp
rol
xor
int
mov
jecxz
out
fcmove
fs
xchg
aad
ret
je
arpl
push
add
pusha
enter
andl
push
stc
jp
call
das
insl
test
stos
or
jge
mov
sbb
repnz
add
mov
cwtl
cmp
test
sub
adc
cs
xchg
jo
fsub
fiadds
mov
inc
xchg
mov
ror
cmp
xor
cltd
imul
rolb
rcl
or
mov
fucomi
mov
pop
lods
adc
daa
je
fwait
xor
inc
add
sub
or
sbb
into
mov
lret
jnp
cmp
adc
loope
lods
push
lods
das
test
bnd
mov
jb
add
xor
dec
insl
loopne
movsb
imul
push
sbb
pop
mov
mov
pusha
jecxz
mov
aaa
sbb
mov
mov
lds
or
inc
pushl
inc
lea
fidivl
pop
xchg
inc
daa
in
mov
inc
mov
clc
and
mov
fdivrs
add
sbb
and
sub
outsb
ja
push
pop
in
into
je
out
and
xchg
dec
int
sarb
push
incb
adc
repnz
shll
shll
push
inc
push
mov
inc
xor
jp
cs
inc
cmp
or
mov
addb
scas
push
cmp
and
or
cmp
mov
jnp
les
stc
sub
loope
cmpl
in
or
roll
xchg
popf
or
cmp
pop
xor
bound
cmp
decb
aas
xchg
dec
jnp
pop
fiaddl
jl
sbb
xchg
cli
stos
jl
loop
mov
xchg
repz
in
dec
dec
hlt
mov
loope
loopne
push
sub
adcl
das
cmp
je
push
cld
adc
and
inc
js
ljmp
aam
lock
jnp
into
and
jl
cmpsl
jp
or
shll
sub
repz
testl
dec
idivb
adc
jo
hlt
fidivrl
add
cmpsb
out
pop
shl
jge
jmp
pop
add
shrl
jns
outsl
aad
ret
jle
pop
add
or
or
out
push
aam
popf
out
xchg
push
jo
loopne
and
jnp
subb
push
jp
inc
in
cltd
cmc
jle
lock
pop
push
cs
and
dec
push
push
outsb
jno
in
mov
dec
stos
xchg
adc
je
add
std
js
jae
mov
cmp
and
mov
mov
sbb
jne
dec
stos
fs
mov
jle
mov
sti
cld
push
pop
cmc
jb
dec
das
push
inc
lahf
in
inc
jmp
pop
mov
xor
out
fcomps
mov
jns
arpl
test
and
push
test
push
fmull
push
sbb
punpcklwd
lret
fbstp
je
out
mov
fistl
clc
add
pushf
mov
repz
and
in
jecxz
dec
repnz
mov
or
sub
dec
pop
aad
dec
add
inc
repz
inc
insl
test
into
jl
ret
pushf
out
int3
add
out
movsl
stos
jbe
xchg
es
pop
imul
xchg
xchg
in
and
dec
rcl
mov
out
adc
popa
jl
xchg
stos
xchg
push
mov
add
mov
pop
or
pushf
cmpb
aaa
pop
adc
lcall
mov
jnp
pop
cwtl
ljmp
outsb
loope
add
xchg
pop
dec
lea
push
xchg
shlb
pop
and
imul
clc
in
das
pushf
mov
and
dec
daa
scas
sub
lods
jnp
jns
fstp
and
enter
ja
xor
ficoms
ljmp
fdivr
loopne
push
sbb
inc
cmpsb
jecxz
ljmp
pop
les
fadd
mov
in
jne
jno
sub
sti
inc
adc
mov
in
leave
jl
std
mov
inc
aas
xor
aam
jmp
adc
rcll
pushf
sub
lock
or
enter
xor
cmp
lcall
movb
jecxz
push
testl
jb
mov
mov
clc
insl
stos
dec
sbb
inc
movsl
aaa
mov
add
clc
jle
pop
sbb
or
popf
enter
mov
daa
pop
mov
mov
cmp
das
mov
aad
jne
cmpsl
mov
in
add
mov
pop
and
xlat
cmpsl
adc
sahf
mov
ss
in
ja
adc
mov
ror
jmp
and
mov
add
out
in
jno
outsl
pop
pop
push
or
mov
jl
xor
mov
xchg
sahf
adc
jg
fcoml
icebp
rorl
jmp
call
pushf
fiaddl
lods
ds
mov
sbb
jae
fucomp
push
or
push
lods
and
add
stos
jge
cmp
mov
sbb
cmp
sub
je
sbb
push
dec
ljmp
outsl
cmp
inc
mov
mov
cmp
pop
xor
inc
inc
rcrl
out
xor
lods
inc
dec
out
xchg
jns
ud2
repz
add
and
push
insl
push
dec
dec
ficoms
push
je
scas
ret
and
xorl
mov
sbb
pop
dec
shl
or
fimull
cmpsb
dec
sbb
cltd
cmc
mov
xor
xchg
sbb
addr16
sbb
mov
dec
pop
ret
std
add
sbb
stos
adcb
pop
pop
xchg
xor
or
fidivs
lock
in
mov
bnd
hlt
ret
or
pop
dec
inc
jb
pop
movsb
cli
shll
test
or
fucomp
sqrtps
jle
xlat
movsb
fcomps
jecxz
add
cwtl
in
add
add
out
je
int3
add
pop
fsts
stos
adcb
icebp
pop
cmp
mov
incl
mov
add
aaa
xor
into
fdivr
inc
ficoml
xchg
stos
xchg
outsb
mov
pop
inc
mov
cld
jecxz
cmpsb
ljmp
xchg
pusha
imul
cmp
push
imul
cmp
lea
mov
mov
fs
cld
adc
jmp
lret
lret
mov
addb
fsts
cltd
xchg
or
daa
pop
data16
mov
jae
bound
sub
and
mov
daa
or
push
lods
cmp
dec
dec
jg
or
in
xor
outsb
mov
mov
jb
or
iret
fistps
sub
ret
mov
imul
ja
bound
inc
jnp
mov
in
arpl
movsb
cmc
sbb
mov
scas
out
xchg
mov
xchg
dec
adc
insb
int3
jp
mov
test
out
cmc
pop
sbb
inc
sub
in
cmpsl
les
mov
das
fnop
ret
loopne
cmp
aas
cmpsb
mov
adc
mov
pop
dec
xchg
aam
mov
daa
adc
aas
fdivl
aad
cwtl
mov
ss
test
jmp
pop
call
pop
fsubrs
fnsave
xor
inc
stos
pop
mov
outsl
mov
adc
scas
out
dec
insl
mov
out
aaa
loop
out
add
addl
pop
and
cld
xchg
lahf
js
mov
xor
or
and
mov
in
inc
loope
stc
in
js
mov
lock
xchg
jmp
inc
xor
push
fcoml
fcompl
or
cmp
rolb
ds
or
jno
repnz
call
sbb
fs
cmpsl
icebp
call
aad
movsb
das
iret
out
mov
jo
vmovupd
dec
sbb
dec
sahf
cmp
pop
aaa
shl
ds
xchg
out
xor
fs
xchg
call
orb
in
ss
adc
in
add
jp
mov
sarl
lods
xor
pop
in
or
lea
dec
add
cmp
pop
mov
in
aad
fcoms
mov
push
es
in
fcomi
mov
jp
loopne
gs
cwtl
aam
test
sub
and
imul
mov
lret
xchg
pushf
push
test
fs
sub
cmp
out
mov
or
or
fisubrs
and
pop
out
fdivs
imul
cwtl
add
leave
adc
test
lahf
cmpl
test
jmp
mov
dec
inc
pop
dec
inc
adc
leave
adc
or
cmp
xorl
jp
inc
aam
in
adcl
sub
xchg
pop
xlat
lea
test
push
fstpt
insb
push
push
jae
sahf
push
loopne
cmp
jmp
push
or
sub
push
daa
sub
pop
jmp
push
das
cmova
ljmp
mov
mov
rol
and
jnp
push
icebp
inc
out
push
pop
jl
mov
pop
loopne
push
push
jnp
jo
and
pop
push
aam
clc
sbb
int
aam
pop
into
mov
out
sub
push
mov
shrb
enter
loop
pop
outsl
adc
xor
clc
lea
pop
jg
repnz
push
hlt
leave
and
and
cld
dec
pusha
push
data16
in
test
lret
xor
icebp
push
pop
cmp
dec
movb
jp
shl
sub
enter
adcb
jl
mov
or
xor
clc
lods
stos
or
mov
sbbb
std
sbb
mov
fstpl
lds
push
dec
ss
cmp
push
mov
jno
cmpsb
xor
ljmp
dec
adc
sub
push
subb
mov
xchg
insb
pop
arpl
dec
add
outsb
mov
pop
aad
and
pop
pushf
cmpsb
inc
shrl
repnz
frndint
or
sub
cmp
inc
lret
loopne
daa
mov
xchg
inc
jbe
mov
adc
addr16
xchg
mov
cmp
lock
stos
adc
xchg
cmpsb
add
mov
cmpsl
jae
int3
in
je
pop
pop
and
jecxz
dec
stos
loop
pop
je
mov
mov
test
lret
mov
fsubr
dec
or
outsb
sbb
jmp
add
add
mov
inc
lahf
xchg
inc
pop
shll
int3
ret
xor
jecxz
sbb
das
xchg
mov
mov
jmp
cli
movsb
pop
and
mov
xchg
cmp
xchg
lods
fcomip
jmp
mov
jno
mov
mov
aad
fmuls
popf
dec
scas
adc
adc
bnd
rcl
in
int
aam
shr
dec
pop
mulb
inc
jbe
insl
jl
stc
jns
mov
cmp
cmpsb
xchg
shr
inc
sahf
cmp
xor
std
lods
data16
sub
inc
mov
aas
out
xchg
lods
push
fiadds
leave
adc
add
jb
xor
mov
scas
cwtl
in
in
or
push
rcrb
mov
lret
pop
xor
in
rcl
push
stos
cmc
push
es
jp
movsl
mov
imul
push
in
imul
mov
add
lock
std
sahf
ja
xchg
pushw
mov
lret
jns
sbb
insb
dec
icebp
repnz
add
push
jp
jne
xlat
inc
icebp
lods
adc
pop
fcmovb
jno
add
or
sub
mov
cmpsl
cltd
push
mov
sbb
sub
or
push
scas
sbb
repz
testl
into
mov
adc
in
sbb
and
scas
out
sub
inc
dec
or
stc
xchg
lret
pushf
pop
mov
leave
push
or
sbb
sbb
and
fsub
ds
scas
cwtl
pop
std
push
mov
lcall
dec
daa
sbb
push
cmpb
test
stos
mov
sbb
repz
adc
jmp
pop
in
add
adc
add
mov
cmp
cmc
add
test
jl
addb
inc
add
sti
dec
ja
fstl
rcrb
cmp
or
pop
sbb
push
shrb
and
divl
jge
mov
and
xor
in
stos
pop
pop
bound
inc
ss
xchg
das
mov
mov
in
pop
je
imul
pusha
icebp
push
adc
xchg
cmc
lahf
pop
inc
ds
ljmp
cwtl
mov
push
xor
pop
sbb
test
add
adc
cmpsl
pop
mov
sahf
add
jmp
scas
mov
loopne
dec
stc
sbb
fcompl
xor
or
daa
les
jbe,pt
xor
and
dec
xchg
xchg
adc
gs
popa
arpl
movb
push
mov
mov
cld
ja
sarb
mov
lret
popf
jns
lods
inc
popa
clc
dec
push
dec
mov
mov
fildl
jmp
dec
add
fldenv
pop
fisttps
movsl
inc
lret
xchg
sbb
lret
adc
mov
or
lret
xchg
jmp
lock
aam
sub
lcall
sbb
data16
movsb
fbld
popa
dec
xchg
xor
cmp
pop
outsl
loopne
mov
push
mov
push
mov
jb
xchg
cmp
mov
sub
sbb
ret
push
xchg
in
insl
cmp
popf
dec
push
nop
popf
test
lahf
adcb
ret
dec
push
fsts
mov
xor
jne
and
outsb
test
inc
lret
repnz
mov
dec
lret
dec
divb
cld
mov
adc
data16
cmp
cmp
ficompl
cmp
add
mov
int3
out
cmp
idiv
in
incl
mov
daa
insl
jnp
xchg
dec
ss
in
movsbl
data16
rcrl
mov
mul
dec
xchg
test
call
es
sbb
jae
movsb
ror
movsl
insl
imul
dec
sub
cltd
mov
cli
out
pop
sbb
cmpsb
sub
cmpb
cli
outsl
dec
stc
push
sub
cld
mov
jno
arpl
jo
cmp
dec
pop
xchg
and
fs
xor
fs
hlt
xchg
jle
sbb
leave
sub
popa
cmp
loopne
movsl
jae
cmp
arpl
shll
scas
mov
fsts
mov
mov
loop
mov
scas
mov
mov
pop
fisttpll
insb
xchg
or
mov
dec
push
in
mov
add
add
mov
movsb
pushf
loope
shl
mov
std
fcmovbe
adc
popa
adc
mov
or
outsb
jb
cmp
lods
fyl2xp1
shll
push
lea
sbb
cmp
test
xor
dec
dec
orl
xor
or
mov
cli
jnp
je
call
mov
test
insl
daa
enter
xor
into
or
mov
mov
std
pop
jl
xchg
pop
push
cmp
mov
out
xchg
mov
lcall
lea
cli
push
push
and
push
xorl
outsl
add
sub
dec
cli
inc
xchg
sahf
or
adc
push
xchg
mov
sbb
or
jge
lret
and
bnd
lds
std
push
sub
cs
test
bound
inc
cmp
fidivrs
outsl
sbb
imul
cmp
adc
sub
cmp
xchg
loopne
sahf
loop
idivl
lret
or
subl
cli
popa
sbb
add
add
outsb
inc
out
pop
sahf
sbbb
dec
fcmove
call
pop
in
xor
rcrl
stc
push
mov
jno
cmpsb
ljmp
adc
out
mov
clc
ljmp
push
push
jmp
fwait
sub
dec
jb
dec
jl
repz
sub
push
mov
out
int
clc
clc
mov
sub
popf
adc
int
popa
rorb
cld
push
into
leave
xchg
mov
lds
mov
mov
mov
jns
cmpsl
es
mov
fcomps
sub
dec
push
xchg
mov
aas
mov
pop
test
mov
or
addr16
or
cmp
adc
adc
mov
iret
inc
pushf
iret
mov
add
mov
add
and
jecxz
mov
xor
jbe
test
scas
jbe
outsl
inc
ljmp
rclb
adc
test
mov
cwtl
cwtl
or
mov
call
aad
jo
mov
xor
sbb
pusha
pop
dec
cmp
lret
jle
pop
inc
pop
jmp
xor
add
xchg
sahf
mov
sub
js
ljmp
sbb
add
in
scas
push
and
add
adc
ja
sbb
push
push
fidivs
insb
mov
or
cmp
inc
and
cmp
jae
jnp
aad
test
and
lret
push
insb
rcll
lods
xor
mov
add
aaa
and
frstor
outsl
lods
xchg
adc
fwait
aam
shll
sbb
je
mov
xchg
adc
mov
sbb
lods
and
lret
mov
pop
dec
es
xchg
jne
sub
pop
loop
lret
pop
enter
mov
rclb
in
shr
mov
jecxz
mov
push
pop
jnp
and
jle
adc
sub
xor
mov
mov
iret
push
jl
inc
push
sub
jle
jle
std
adc
insl
adc
inc
adc
mov
sbb
cmp
jbe
jno
mov
fnstenv
sub
inc
fldenv
int3
sub
jmp
pop
aas
dec
sbb
test
xorb
and
sub
mull
adc
mov
inc
dec
pop
outsl
xchg
fiaddl
xor
call
jmp
xchg
cmp
out
xchg
cli
jo
cli
mov
cmpsl
inc
push
mov
in
pop
pop
jns
sub
ljmp
lods
and
pop
push
pop
leave
loop
cmp
mov
cli
cmp
ljmp
dec
inc
decw
fistpll
push
test
fadds
sbb
pop
push
cs
push
cmpsl
pushf
mov
jbe
mov
lds
insb
pop
out
lock
xchg
es
scas
lret
pusha
stc
mov
int
inc
ljmp
in
or
testb
rol
or
inc
or
out
and
pop
xchg
std
adc
pop
inc
xchg
mov
dec
mov
sbb
jle
adc
push
cmp
add
mov
pop
repnz
incb
push
cld
insb
push
mov
dec
jns
mov
pop
mov
dec
idivl
cmc
pushf
lods
and
ja
add
xchg
cmp
dec
cmc
dec
fiaddl
fdivl
mov
add
lahf
push
cmc
adcl
into
rolb
mov
inc
push
stc
enter
inc
pop
sbb
movsl
xchg
scas
ds
mov
fbstp
sbb
xor
jmp
nop
mov
push
xchg
dec
addr16
adcl
ficomps
jp
and
dec
mov
jecxz
inc
pop
in
cmp
popf
paddusb
add
call
gs
mov
inc
pop
dec
or
mov
push
inc
push
es
data16
xchg
jmp
mov
and
jecxz
dec
stos
fwait
sbb
test
pop
shlb
xor
xchg
hlt
imulb
sub
shlb
jl
push
xchg
aas
mov
xchg
cltd
jle
fs
aaa
inc
dec
cmp
fucomi
jp
or
push
xor
cmp
outsb
sbb
sub
lret
xlat
and
sub
xchg
sub
ret
sub
fstpl
repz
and
dec
call
sbb
out
jmp
jno
jg
adc
sub
fiadds
add
jge
push
dec
cli
andl
xor
lea
adcl
jmp
pop
sub
lods
call
jo
mov
xor
js
es
push
test
mov
cmc
cwtl
lods
arpl
jno
mov
lahf
imul
pop
jge
cmp
lock
or
sbb
cmp
pusha
mov
sub
mov
xor
pop
xor
and
pusha
jge
rorl
lods
repnz
cmp
addr16
outsl
xchg
dec
cmc
or
cwtl
mov
call
pop
jnp
adc
test
dec
ss
dec
mov
push
xlat
jmp
loope
in
xchg
add
out
mov
xchg
push
push
movsl
out
jmp
xchg
idivl
cs
add
in
in
test
repz
add
xchg
mov
cmp
cmpsl
addr16
mov
and
es
idivb
in
pop
mov
daa
movsl
mov
fs
push
rorb
xchg
lea
push
test
xchg
mov
fmull
mov
mov
jmp
xor
sti
inc
lds
and
and
sbb
lahf
or
cmc
jno
add
cli
mov
lock
inc
mov
andl
push
mov
test
fisttpll
mov
rorb
cmp
xchg
sbbl
mov
aam
mov
call
mov
cwtl
push
ret
hlt
stos
mov
ficoms
int
sub
or
cmp
mov
xchg
mov
test
addr16
cmp
adc
inc
xchg
repnz
and
sbb
and
pop
or
scas
mov
cwtl
mov
dec
cmpsl
mov
dec
push
arpl
fdivr
dec
cld
mov
inc
sub
add
jnp
add
pusha
push
push
xchg
adc
push
loopne
jb
sbb
call
leave
cmp
inc
cmp
shrb
in
and
stc
fistl
xor
jecxz
into
sub
out
xchg
push
sub
jb
ret
mov
xor
bnd
pushf
xchg
cwtl
lea
xlat
inc
es
sub
jne
std
out
pop
jnp
jmp
out
bsf
out
push
call
inc
sub
in
aam
push
sub
push
pop
addr16
mov
inc
dec
sub
aas
je
loopne
lock
xorb
push
stos
lahf
mov
mov
pop
lcall
push
je
and
or
adc
pushf
push
into
mov
ljmp
add
mov
xchg
dec
and
aas
lea
outsb
sbb
lea
ljmp
lods
pop
jmp
push
jb
fsubrs
divl
and
push
cltd
or
or
out
enter
mov
js
and
xchg
mov
pop
pop
in
je
push
pop
ret
xchg
jge
mov
sub
push
movl
jnp
mov
sub
push
pusha
aam
jo
fs
outsl
pop
cld
jl
mov
lock
pop
fisttps
dec
add
adc
fists
hlt
push
enter
je
mov
sbb
lods
mov
dec
mov
jg
les
pop
clc
sub
jmp
test
add
inc
pop
movsl
xor
add
in
lds
std
adc
mov
sub
data16
and
push
scas
lcall
scas
cltd
mov
push
mov
mov
add
rcll
jnp
clc
fpatan
mov
mov
std
sti
inc
leave
sbb
adc
int3
pop
imul
lahf
sub
js
or
sub
sub
popf
inc
and
xlat
sub
mov
cmc
lcall
jmp
rcll
push
mov
shll
dec
add
inc
cmp
cli
or
imul
mov
loop
fcmovnb
mov
inc
out
sbb
popa
dec
cmp
sub
das
aaa
cltd
lret
leave
sub
sub
add
pop
xor
jb
jg
dec
lcall
sarl
pop
and
dec
xchg
push
jnp
push
out
aad
mov
mov
and
add
addb
or
pop
js
add
hlt
fmuls
dec
pop
cmp
les
sbbl
xchg
mov
jbe
dec
ss
popa
xor
xor
xlat
cmp
add
mov
or
sarb
pop
movl
sbb
sahf
or
or
pushf
mov
idiv
or
inc
push
lret
ljmp
push
cmpsl
pop
scas
xchg
shll
icebp
cmc
mov
les
fistl
in
pop
les
adc
dec
xor
inc
clc
push
lods
push
xor
shrl
cmp
ret
lock
mov
and
and
jne
xchg
iret
icebp
add
sbb
aaa
mov
push
cmp
cs
sub
add
out
dec
dec
mov
pop
xor
js
xor
and
out
loope
scas
shll
mov
dec
sbbl
out
pop
xchg
clc
ss
hlt
add
cmpsl
ljmp
mov
dec
rorl
inc
cmpsl
push
lahf
out
imul
js,pn
repz
imul
push
mov
mov
push
ss
subb
popf
inc
add
cmc
jae
xchg
ss
ret
sub
xor
xchg
out
pop
cmp
pop
pop
in
movsl
enter
movsl
xchg
std
adc
xor
arpl
push
xlat
push
mov
add
mov
mov
out
stc
mov
mov
add
pop
and
out
ja
mov
mov
cmp
inc
repnz
ss
mov
push
pushf
mov
pop
jmp
rorl
pop
outsb
mov
inc
test
inc
mov
out
stc
and
fcomp
and
push
push
dec
pop
sub
jnp
add
fcompl
int3
repnz
or
imul
loop
dec
loope
xchg
pop
loop
mov
sarb
sti
shrl
cmp
adc
adc
ds
push
push
cmp
in
test
cmp
pop
outsb
lahf
pop
mov
xchg
sub
or
int
ret
repz
int3
mov
sarl
dec
inc
xchg
fst
mov
fimuls
dec
fs
sub
pop
jb
bound
dec
push
and
lods
data16
adc
in
sbb
push
add
popa
in
loope
dec
fildll
dec
push
add
jmp
and
jle
push
jno
sbb
test
or
ret
mov
xor
mov
dec
fisubrl
push
xchg
jns
into
iretw
or
ret
adc
pop
lret
push
push
inc
adc
cmpsl
sub
jecxz
sbb
inc
or
ja
push
sub
mov
fwait
sbb
sbb
leave
cmp
call
ja
push
cld
jp
fs
push
js
xchg
sub
dec
int
add
stos
push
mov
adc
or
sti
add
cmc
lock
pop
mov
into
inc
icebp
imul
lcall
popf
jo
push
test
lock
add
inc
int
fbstp
incl
ss
mov
dec
xchg
jno
outsb
push
or
jae
mov
test
cmp
in
xchg
les
inc
loop
shlb
xchg
jp
dec
out
mov
mov
outsb
js
out
and
cwtl
jl
inc
xchg
push
fwait
pop
jb
int
cmp
lock
repz
icebp
dec
sub
mov
xor
dec
fisttpl
add
into
sub
jno
outsb
adc
movsl
shl
xor
jae
push
fsubl
test
xorl
leave
jg
stc
in
repnz
aad
pop
imul
xor
mov
pop
or
inc
pushf
int3
dec
lret
adc
and
nop
xchg
js
movsl
test
and
pop
faddl
insb
pop
gs
popa
fdivrl
lret
js
push
add
pop
sub
insl
mov
inc
insl
xor
repnz
dec
pop
lods
fldpi
inc
popa
test
adc
rclb
sbb
and
sbb
push
outsl
loope
sub
sub
fs
rep
jg
jb
lret
les
push
xchg
lods
mov
outsl
addr16
outsl
xchg
dec
add
or
gs
pop
cmpsb
rcrl
movsl
pop
mov
mov
xchg
cmp
fucomip
mov
lea
or
pop
scas
test
inc
inc
push
mov
sub
test
cmp
loope
mov
inc
or
aad
push
pop
xor
es
inc
idivb
xchg
push
lret
popf
daa
cmpsb
xchg
hlt
push
repnz
rorb
or
jno
fldcw
sbb
pop
lret
pop
add
jnp
int
push
xor
out
into
lret
pop
push
or
scas
xor
ret
dec
jo
mov
mov
fcmovnb
fwait
inc
cmp
xchg
push
sti
aaa
cmp
ljmp
sub
jae
stos
out
cmc
sub
add
stos
push
jmp
decb
mov
xor
xorl
fwait
or
test
bound
ljmp
or
fiaddl
inc
rcrl
and
stos
fldcw
andl
mov
push
sub
in
in
imul
arpl
add
xor
inc
gs
mov
inc
fcmovnb
xchg
adcb
rcl
push
ja
into
add
cmc
jle
ss
mov
pop
mov
jb
in
mov
and
cmp
xor
daa
enter
inc
push
arpl
mov
xor
jo
sarb
inc
or
das
and
or
jae
mov
rol
lret
inc
xchg
frstor
or
jg
pop
es
rcrb
sarl
mov
jg
or
sbb
add
and
sbb
push
fs
inc
jno
push
in
pop
xchg
cwtl
sarb
rcr
mov
mov
leave
imul
shlb
jns
test
std
arpl
add
inc
mov
sub
or
push
xlat
stos
xchg
jae
ret
cltd
jae
pop
mov
push
mov
and
aaa
sbb
fcmovb
and
add
stos
mov
pop
iret
xor
lock
test
les
pushf
mov
dec
sub
mov
aas
or
sbb
stos
cs
sub
or
sar
test
push
dec
lea
push
xor
xchg
push
xor
lcall
js
mov
pop
stc
push
sbb
addl
sub
sar
sbb
leave
ds
inc
es
mov
je
dec
das
lds
adc
sub
test
push
ret
jl
ret
popa
or
imul
push
sahf
fwait
int3
rclb
test
cmc
mov
cmp
dec
jp
popf
out
bound
repz
fucomp
jmp
inc
push
clc
and
std
lods
int
fdivrl
mov
and
aaa
loop
and
popf
jns
xlat
inc
out
std
mov
js
mov
xchg
mov
push
ret
insb
mov
inc
ja
fstl
lret
inc
dec
lahf
ja
out
cli
inc
in
xchg
and
sbb
push
xchg
jle
inc
rcrl
lret
or
push
lret
loope
push
pop
or
mov
jle
cmp
leave
pop
icebp
mov
clc
push
pushw
ficomps
fs
fcoms
orl
js
sarb
jno
add
jg
and
inc
lods
fwait
mov
fldcw
arpl
xor
mov
ficomps
jg
faddl
pop
test
movb
lods
shlb
push
rorl
roll
int
test
ds
gs
pop
cmp
fcmovne
sti
sub
jmp
inc
add
and
mov
rolb
mov
inc
cmp
jns
cmp
addl
mov
scas
sub
stc
sub
rcl
sub
push
xor
push
mov
xor
inc
cmpsl
mov
imul
aad
xchg
or
mov
lcall
inc
mov
js
mov
cmpb
sub
addr16
dec
jecxz
xor
cld
test
fsts
mov
pop
or
jle
sbb
sbb
cld
das
cmp
in
iret
mov
inc
dec
ja
cmpsb
sub
mov
inc
jp
not
xchg
mov
lea
adc
fwait
xchg
fisubl
sub
das
push
cs
iret
repnz
jne
adc
xchg
or
or
xchg
jbe
jbe
scas
outsb
sub
inc
stos
test
xchg
cmp
jmp
mov
xchg
and
push
xor
inc
add
push
fisttpl
cmpsb
push
sub
sub
jno
push
sbb
dec
fwait
mov
mov
jg
add
icebp
sub
lahf
inc
xor
adc
xchg
repz
loop
ja
xchg
mov
ljmp
jl
cmp
sbb
sub
ljmp
repnz
or
mov
les
shll
push
lahf
mov
pusha
mov
rcll
xchg
daa
dec
imul
cmpsb
decb
std
xchg
push
push
jmp
cmp
lret
lahf
popf
jnp
mov
adc
push
jno
xor
out
clc
test
or
iret
lret
loope
loopne
loop
scas
rcll
in
xchg
shr
push
test
cmp
pop
pop
iret
in
push
mov
cmp
mov
mov
cld
push
mov
xchg
pop
test
mov
imul
pop
in
push
dec
mov
jmp
sti
into
cmp
lret
daa
call
dec
xlat
mov
or
aas
dec
faddl
xor
push
add
mov
test
jmp
les
fimull
xor
add
sub
push
fdivr
add
adc
sbb
sbb
jne
lahf
in
lret
adc
and
sub
sbbl
mov
rcll
shlb
cmp
mov
xchg
pop
inc
loope
iret
inc
call
rclb
mov
sub
xchg
jne
or
scas
xor
inc
sti
xchg
mov
shll
es
push
pop
pop
lret
mov
mov
rorb
push
mov
adc
add
pop
jnp
js
sbb
ja
fucomip
and
push
jle
sub
movl
inc
xchg
pushl
cli
int
stc
sbb
mov
push
clc
loopne
fstpl
pop
andl
aam
cmp
dec
xchg
or
scas
push
popa
addr16
and
mov
pop
outsl
sbb
or
cltd
pop
add
fcoml
lret
fistpll
push
lret
xchg
adc
or
jns
or
aam
iret
clc
inc
testl
xor
push
push
dec
rorl
mov
dec
sub
stos
call
clc
outsl
jb
scas
or
mov
ja
addb
sbb
shlb
dec
jns
pop
mov
loope
xlat
testl
lods
mov
enter
jmp
add
cmp
enter
sbb
xor
jmp
add
mov
cmp
or
mov
xor
jp
popf
inc
and
push
repnz
cmpsl
xchg
pushf
mov
mov
adc
mov
pop
push
int3
repz
insb
push
jae
push
push
filds
ds
or
push
out
mov
adc
test
loope
cmp
jns
mov
lods
sbb
cwtl
jge
inc
add
scas
out
xlat
scas
push
xchg
les
pop
add
aaa
aas
lods
ret
lods
dec
add
pop
mov
xchg
sbb
in
stos
and
or
pop
mov
cwtl
adc
sbb
lcall
inc
fwait
pop
jle
in
sub
mov
stos
mov
sarl
add
popf
lcall
push
pushf
dec
xchg
dec
stos
add
bswap
jl
mov
imul
filds
sub
jle
push
jbe
jae
mov
adc
imul
pop
and
in
dec
and
cmp
out
mov
xchg
push
popa
mov
testl
cmpsb
pushf
and
inc
jp
dec
cmpl
clc
imul
and
fldcw
mov
inc
out
cmc
mov
add
xchg
test
pop
push
xchg
pop
mov
repz
shlb
lock
cmp
push
sub
ljmp
fdivrl
and
and
or
arpl
lods
mov
imul
insb
imul
ret
add
add
sbb
inc
xchg
pushf
dec
test
les
push
xchg
mov
pusha
mov
mov
cmp
push
mov
dec
jb
std
sub
lahf
mov
mov
xor
into
jp
mov
xor
outsb
xor
dec
gs
and
mov
sbb
lock
fs
lock
mov
and
jge
cmp
sub
into
call
imul
data16
je
dec
jecxz
sti
push
jecxz
cmpl
out
shr
mov
push
repnz
dec
or
rcrb
test
add
xor
or
inc
xor
fldt
mov
jg
xor
outsb
rolb
or
inc
in
ds
arpl
mov
inc
pop
loop
jae
int3
mov
pop
pop
cmpsl
or
sbbl
jl
xor
cmp
push
test
std
adc
jge
stos
pop
adc
or
fdivrs
das
sti
mov
leave
adc
push
shrb
dec
aam
push
and
add
sub
or
bound
lret
dec
jns
inc
jl
popa
jns
xlat
mov
inc
fisubl
or
sahf
icebp
notb
add
stos
dec
mov
sbb
bnd
add
enter
push
fsts
das
adc
lret
out
pop
fdiv
loopne
sbb
mov
sub
mov
jbe
and
aam
mov
adc
adc
sti
clc
int
mov
mov
out
repz
rcrl
xor
xchg
pop
jns
popl
mov
enter
add
scas
xchg
daa
ret
push
add
pop
cmp
lret
mov
lcall
std
and
sbb
int3
test
mov
mov
repnz
mov
push
addr16
cmp
pusha
pop
jle
fmull
aaa
stc
mov
xchg
jnp
mov
cmp
cmpsl
dec
bound
add
mov
insb
cmpsb
jg
push
out
pop
ss
xchg
push
lock
xchg
add
mov
jb
pop
nop
jne
int3
outsb
int3
lahf
inc
shlb
std
push
sbb
mov
add
mov
sbb
xchg
call
dec
stc
test
xor
dec
insl
pop
sub
scas
sar
push
movsb
pop
xorl
enter
add
mov
adc
pop
fdivs
jge
jbe
popa
mov
inc
rcrb
daa
pop
repz
add
mov
outsb
mov
int3
in
popw
adcl
outsl
lret
movsl
arpl
push
out
sub
mov
jbe
xchg
dec
pop
call
imul
dec
inc
out
arpl
sub
outsb
fcomip
sub
xlat
into
movsl
fadds
xchg
mov
daa
adc
sar
mov
xor
js
outsb
xchg
xor
and
xchg
mov
xlat
xchg
popa
scas
lds
insl
orb
jae
xor
aas
ljmp
push
popa
fwait
and
mov
pop
imul
cld
mov
inc
mov
rol
cwtl
push
call
lret
push
mov
push
cmp
inc
inc
lock
scas
xor
jnp
mov
inc
je
cli
hlt
xchg
dec
xchg
ret
std
add
fwait
push
bnd
cs
sub
or
mov
mov
addr16
orl
out
ljmp
cmp
or
shlb
fmuls
xchg
sub
aad
or
jb
jno
movsl
outsl
lahf
mov
daa
js
cs
je
xchg
int3
stos
sub
pop
loopne
imul
adcl
cmpsb
movsb
sub
jne
sbb
iret
mov
out
fisubl
xorl
in
or
or
mov
push
xchg
mov
cmp
pop
mov
sub
loope
adc
dec
es
jb
aas
and
adc
sti
push
jnp
ret
and
push
xlat
mov
sahf
sub
jg
jl
inc
stos
bound
roll
leave
sbb
inc
in
jmp
pop
adc
sub
fbstp
xor
xchg
fisubl
arpl
js
rol
dec
sub
push
aas
dec
popa
mov
or
into
cmp
repnz
cwtl
sub
pop
pop
pop
scas
pop
push
enter
or
xchg
inc
cli
sarl
popf
pop
push
pop
xchg
mov
sub
mov
pop
push
sub
stos
lret
dec
mov
aas
test
mov
lods
xor
dec
inc
mov
xchg
or
cwtl
into
popa
mov
or
sbb
mov
push
fdivrl
pop
lods
mov
xchg
je
pop
mov
ret
inc
push
xchg
je
pop
mov
xor
lea
lods
cli
and
dec
add
mov
out
fbstp
pop
jnp
jbe
mov
sbb
in
imul
test
push
scas
icebp
sahf
xchg
sbb
std
test
leave
xor
sub
mov
dec
incb
xchg
inc
mov
dec
inc
cmp
push
or
and
pop
int
hlt
jae
popa
or
add
mov
call
mov
inc
movsb
cmp
jle
mov
mov
lea
push
and
sbb
cmp
cmc
shlb
xor
repz
mov
scas
daa
push
pop
xor
sarl
xor
xchg
test
mov
cmp
test
pop
in
imul
dec
xchg
cli
insb
jecxz
fimull
pop
add
fs
cmp
sbb
xchg
jmp
add
es
inc
xchg
xor
xlat
imul
xlat
push
in
nop
popa
push
add
sahf
xchg
inc
dec
xor
xor
ss
into
adc
dec
sbbb
sub
xchg
les
movb
popa
loop
push
stos
push
pop
loope
jl
sub
and
fwait
cwtl
pop
inc
xlat
mov
out
pop
mov
jo
fidivs
jge
sbb
push
addr16
add
ret
jo
cmpsb
push
fmuls
add
jae
daa
push
xor
sub
lahf
daa
and
call
ss
cmp
sbb
cmp
pop
xor
cmp
cmp
and
jmp
pop
xchg
mov
fwait
pop
add
out
push
mov
mov
shlb
mov
mov
mov
pop
add
repz
ret
in
pushf
add
pop
and
jnp
sbb
mov
inc
or
jg
cli
popf
repnz
add
repz
push
xor
orb
cli
mov
rolb
mov
daa
sub
sbb
es
cmp
inc
les
mov
nop
movsb
adc
or
jbe
xor
xchg
faddl
bound
xchg
push
inc
mulb
cmpsb
pop
ljmp
hlt
mov
ja
xchg
das
fs
jo
insb
popfw
mov
in
push
push
push
pop
and
push
xchg
rcr
mov
in
repnz
or
and
stc
sbb
and
cld
int
notl
std
out
and
rolb
sbb
xchg
loop
mov
imul
es
sbb
inc
push
cmpsb
mov
ret
iret
mov
xlat
aaa
add
or
lea
xchg
not
lods
inc
js
push
daa
fwait
mov
mov
loope
stos
mov
mov
xchg
cmp
mov
mov
pop
push
loop
mov
mov
and
test
pop
or
xor
dec
and
clc
mov
js
and
or
mov
mov
aas
cmp
inc
sbb
add
mov
push
inc
bound
fcoms
scas
iret
mov
and
clc
out
sub
pop
xor
cmp
sbb
push
xchg
inc
test
aas
imul
inc
push
cltd
shl
fdivrp
ud0
lcall
xor
jle
jg
jns
loope
add
xchg
mov
xchg
sti
mov
in
jg
mov
push
sbb
mov
mov
cmp
dec
mov
inc
mov
mov
mov
pop
jbe
aas
stos
mov
mov
push
inc
popa
cs
jmp
xorb
cs
int3
loopne
or
push
mov
adc
jo
mov
push
out
ds
data16
fistps
xor
addb
roll
mov
mov
mov
fadd
mov
cmc
mov
push
mov
test
leave
mov
sub
jl
fimuls
jns
jbe
sub
mov
cmp
mov
and
aad
and
push
cmp
cmp
decb
mov
movsl
pop
test
in
es
mov
sbb
insl
cmc
cmp
adc
in
dec
inc
mov
inc
xchg
sub
cltd
scas
lea
push
xor
lahf
inc
shl
ss
paddd
inc
sub
repnz
fadds
mov
pop
insb
pop
clc
adc
sub
jno
repz
adc
adc
movsb
movsb
scas
and
push
push
ret
je
sbb
jle
xchg
das
inc
bound
lret
or
xor
adc
loopne
sub
data16
or
lea
lcall
jp
and
add
cmpl
or
loopne
repnz
pop
inc
inc
adc
fnsave
sti
and
loope
negl
add
ret
mov
cld
sub
testb
stos
clc
pop
or
flds
dec
jns
xchg
jnp
xchg
inc
pushf
divl
cmp
popa
xchg
and
inc
cmpsb
dec
cmp
negb
sub
or
data16
scas
mov
inc
pop
mov
jbe
cs
pop
test
adc
jge
push
ret
test
lcall
mov
andl
inc
icebp
aas
rol
sub
outsb
mov
inc
popa
push
out
pushf
xchg
popf
stos
rolb
mov
js
aas
xchg
cmc
stos
pop
push
cmc
mov
or
popf
push
rcll
adc
push
jnp
and
jmp
rcll
push
movsb
movb
iret
in
pop
adc
jne
into
test
stc
adc
mov
shr
cwtl
imul
shll
push
arpl
scas
dec
js
sti
in
loope
xor
cwtl
adc
adc
sbbb
and
jae,pn
fcmovne
jge
sbb
jno
adc
mov
push
cmp
aaa
in
jl
and
push
mov
loope
insl
sarl
jecxz
mov
divl
or
fistpl
dec
mov
andl
shr
fists
movsb
mov
sbb
popa
es
call
iret
bound
fcmovne
call
jb
cmp
mov
ficompl
enter
pop
xor
dec
enter
sub
fs
movsb
fstpt
pushf
push
dec
clc
jle
aas
lret
stc
cmc
mov
adc
pop
pop
jns
not
sbb
mov
shrb
jnp
fnstcw
sub
push
hlt
clc
in
sub
adc
insb
lret
jmp
outsl
dec
inc
jo
xor
popa
adc
mov
push
and
cwtl
dec
daa
xchg
dec
lods
xor
pushf
fidivrs
pavgb
out
or
fisttpll
xor
pushf
xor
out
inc
and
sbb
popf
jl
inc
leave
ds
sbb
sbb
mov
pop
adc
fwait
cltd
mov
xor
icebp
mov
iret
add
and
mov
mov
sbb
cmp
jl
jno
push
std
lret
xchg
cltd
jns
lods
push
lahf
mov
hlt
and
jno
pop
push
cwtl
testb
lcall
cmc
jle
inc
push
sarl
lea
jmp
jnp
pop
inc
popf
inc
add
mov
or
shl
adc
cmp
jmp
dec
cmp
inc
scas
and
cs
rclb
fs
cli
dec
lea
int3
repz
mov
add
pop
mov
push
lods
mov
pop
dec
addl
push
mov
mov
push
fcmovb
in
push
repnz
lock
orb
sbb
leave
add
fcmovbe
xor
xchg
adc
popf
lret
lea
adcl
stos
iret
adc
jbe
xchg
fdivs
mov
pusha
das
mov
sbb
cmpsb
lret
and
push
das
sbb
maskmovq
divl
sbb
rol
notl
inc
cs
insl
cmp
add
add
push
adc
outsl
jl
xchg
and
xor
mov
sbb
pop
inc
jns
add
pop
add
shlb
out
sahf
jb
or
shl
jp
jno
sub
testb
ret
andl
sbb
xchg
adc
pop
cltd
mov
sub
xchg
lock
or
ss
or
mov
jb
sarb
ret
lock
loopne
or
and
gs
out
ds
inc
ja
arpl
adc
iret
in
cmp
rorb
cmpsb
inc
in
inc
loopne
and
divl
test
rcrb
outsb
and
inc
or
int3
jo
call
sub
sti
and
repnz
lcall
mov
rcll
into
rcrl
into
or
test
imul
cmc
mov
aas
in
arpl
fildl
jns,pt
cli
jecxz
pop
daa
roll
push
inc
or
dec
pop
push
out
sub
mov
icebp
jge
not
lods
inc
jb
shll
sbb
jae
fsubl
cmpsb
stc
jae
dec
inc
icebp
push
test
pop
push
mov
inc
fisttps
mov
das
push
mov
das
xchg
lahf
into
stos
loopne
mov
rcrl
xchg
pop
jno
jae
sub
icebp
mov
rcrl
sahf
xlat
call
pop
lds
ret
arpl
pushf
nop
add
xor
pop
dec
dec
jno
bound
inc
cmp
mov
popf
rcll
jnp
mov
sub
push
mov
stc
ret
sbb
adc
xchg
lock
pop
out
test
xchg
cmp
mov
lds
pop
stos
mov
cmp
inc
sub
mov
outsl
cmp
xorb
scas
push
rcll
cmp
xchg
and
repnz
xor
xchg
iret
fwait
mov
fildl
mov
hlt
insl
ds
pusha
lds
jmp
in
mov
div
lods
shlb
lods
sub
sub
mov
inc
mov
adc
in
mov
jb
lods
inc
pop
test
cld
dec
sub
pop
iret
test
mov
sbb
mov
insl
lods
faddl
sbbb
movsb
cli
inc
push
sti
add
push
pusha
sbb
fisubrs
les
pop
adc
sbb
jbe
lea
stos
sub
dec
fsubrp
push
fwait
jne
movsb
loop
jg
shrl
and
dec
scas
call
xchg
aad
in
mov
mov
sub
repnz
fcoml
add
in
test
lret
negl
es
ret
roll
adc
sub
dec
or
popa
dec
cmpsl
pop
mov
and
xchg
cmp
sahf
dec
int
pop
dec
hlt
dec
xchg
xor
push
adc
mov
es
fsts
mov
aad
les
push
stos
lret
sbb
mov
xchg
xlat
push
stc
clc
adc
inc
push
or
jbe
cli
cs
push
lahf
rcll
in
dec
fucomi
push
aaa
mov
test
aaa
cmp
jg
sbb
cwtl
jecxz
jnp
iret
xchg
push
dec
fwait
push
and
push
push
icebp
hlt
call
add
loopne
jmp
sbb
xchg
cmpsl
ja
adc
subl
das
cld
dec
fisttpl
test
xchg
shlb
xchg
icebp
mov
dec
pushf
mov
or
push
cmp
mov
mov
std
jns
nop
mov
xchg
push
shll
mov
cld
xor
arpl
test
inc
cmp
test
fimull
inc
fwait
lret
shl
inc
dec
inc
lock
xlat
cmp
push
lea
in
stos
fmull
lea
rcrb
cmpsl
hlt
cmpsl
sub
psraw
cmp
aam
inc
fwait
xchg
pop
jne
push
ljmp
mov
adc
cmp
add
shrb
xchg
sub
stc
push
jmp
jecxz
pop
imul
pop
sub
push
fstp
adc
adc
mov
xchg
jno
mov
into
jp
lods
jbe
inc
jnp
sahf
lods
fwait
and
cmp
shll
push
push
pop
sbb
and
mov
jbe
insl
cltd
pop
out
dec
fwait
pusha
pushl
pop
jbe
hlt
movsl
in
dec
cmp
outsl
lahf
test
lods
jne
repnz
loopne
ljmp
test
push
in
mov
outsb
lods
pusha
and
jae
mov
xor
sbb
ret
dec
adc
inc
pop
arpl
and
daa
dec
pop
xchg
xchg
repz
jb
add
insl
cli
negb
xor
dec
mov
push
sti
mov
jne
and
pop
and
and
jg
cmp
cmpsb
nop
rcll
mov
out
pop
inc
push
push
inc
frstor
mov
jo
mov
dec
or
push
xchg
clc
xor
fistl
cld
shlb
push
les
lcall
pop
mov
push
mov
out
and
or
sbbb
mov
xchg
sub
push
cwtl
divb
cmpl
adc
sarl
push
mov
push
les
cmp
xchg
cmp
out
movsb
shrb
fldcw
hlt
jo
add
mov
cld
dec
xchg
pop
div
push
adcl
fcoms
adc
or
mov
inc
mov
mov
jmp
mov
jno
xchg
imul
imul
cmp
inc
mov
sbb
xchg
sbb
adc
pop
das
mov
xorb
cltd
inc
adc
xor
and
js
sahf
xchg
jle
mov
stc
in
jge
jp
cmp
bound
bound
fxch
add
lahf
stos
pop
sbb
sahf
and
jnp
out
sub
and
push
add
ffreep
mov
push
mov
aam
xor
cmpl
mov
adc
push
imul
js
fcompl
dec
mov
xchg
push
xchg
int
lods
jl
mov
xchg
inc
adc
mov
adc
shlb
in
mov
add
add
orb
mov
out
inc
ljmp
pusha
ret
sub
xor
cmp
sbb
shrl
stos
mov
fidivl
push
mov
xor
out
int3
addl
and
push
fldl
lea
mulb
inc
xchg
test
lret
fcmovu
in
adc
mov
and
arpl
dec
cmp
pop
gs
jb
jne
mov
int3
lahf
sbb
sahf
mov
and
pop
mov
jecxz
cmpsl
dec
push
sahf
sub
jg
aaa
int
and
pop
addr16
mov
lods
xchg
mov
aam
push
mov
loope
outsl
enter
arpl
sub
xor
shrb
mov
shr
cmc
dec
sub
call
xlat
in
or
enter
sbb
repz
mov
aas
xor
into
rcrl
dec
mov
add
fsubs
outsl
inc
repz
adc
roll
dec
push
and
sbb
enter
mov
ret
dec
cs
pop
xchg
or
mov
aas
cmp
add
inc
pop
mov
and
mov
push
cmp
movsb
xor
mov
add
or
mov
and
enter
mov
out
pop
or
outsl
push
cld
cmpsl
sti
xor
daa
fbstp
leave
inc
fstps
test
fidivrs
push
rcll
add
std
sub
mov
dec
xor
dec
bound
cmc
out
inc
jo
int3
xor
insb
push
ror
test
dec
cmp
push
xor
add
int3
add
scas
out
adc
ret
subl
mull
sub
repnz
fcomps
jecxz
and
jbe
iret
dec
lret
fwait
nop
outsb
or
andl
pushf
enter
mov
int3
imul
stc
lock
mov
push
enter
in
mov
stc
loope
mov
mov
test
cmc
push
rclb
mov
mov
jmp
cmp
rcll
repz
test
sahf
repnz
and
lahf
jne
ret
sub
adc
sub
fbld
pop
pop
xchg
mov
repz
aas
inc
stos
jg
fwait
stos
jae,pt
sbb
pop
pop
shl
adc
push
jno
scas
aam
mov
jge
add
push
jge
jge
mov
inc
jle
ret
pop
mov
es
mov
sub
aaa
data16
inc
out
jl
push
fsubrl
lods
lret
fs
sbb
add
in
fdiv
xchg
mov
sbb
mov
or
jns
mov
out
fdivrs
pop
fldl
enter
test
into
add
popa
ljmp
cmpxchg
aas
xor
scas
mov
pop
sbb
out
int3
jno
fs
hlt
frstor
aaa
dec
or
jbe
clc
out
test
cwtl
add
enter
stos
cmp
in
dec
pop
adc
sub
xlat
mov
sub
mov
jmp
cld
popa
xor
lock
popf
or
push
out
je
xchg
pop
dec
out
outsb
test
push
xchg
sti
pop
stc
fsubr
fsubrl
xor
out
in
aaa
test
cltd
sbbl
mov
mov
pushf
mov
movsl
xchg
mov
mov
mov
adc
lock
cmp
popa
push
xchg
mov
adc
dec
fcomps
ret
and
mov
pop
adc
fimuls
push
jnp
arpl
sahf
arpl
push
je
or
xchg
outsb
xor
push
inc
ficompl
sub
push
xor
mov
cmpl
mov
dec
dec
cwtl
popf
mov
adc
pushf
jg
or
inc
sti
jno
or
sub
test
leave
arpl
push
das
repz
xchg
fs
bound
cmc
push
lods
xchg
push
clc
mov
pop
xchg
and
insb
mov
ds
ss
push
movsb
dec
lret
cs
mov
jbe
dec
es
popa
mov
test
jecxz
fsubs
and
inc
jno
cli
cmpsb
daa
daa
dec
lahf
enter
test
mov
fstpt
xor
jmp
mov
cmpsb
sub
push
and
scas
repnz
out
or
mov
cld
jge
insb
pop
sbb
lods
jns
xchg
pop
call
adc
sub
xor
xlat
lods
xor
push
xchg
dec
push
or
scas
fnstcw
out
pop
sub
arpl
icebp
dec
xchg
clc
dec
push
pop
vpsubusb
out
push
cltd
fdivs
xchg
sub
xor
sbb
addr16
cs
mov
mov
adc
sub
shll
pop
popf
lahf
mov
insl
push
enter
push
cmp
cmpl
int3
pushf
adc
mov
jns
scas
hlt
test
push
xlat
lods
cmp
sbb
sub
cmp
outsb
jnp
ret
push
add
aaa
neg
inc
jns
mov
scas
push
inc
stos
push
or
fsubs
sbb
fldenv
xchg
push
rcrb
jo
fsub
fs
add
xchg
mov
xor
test
sbbb
push
dec
movsb
jb
cmp
or
mov
and
cmc
ds
pop
inc
sbb
add
inc
andb
mov
push
push
push
mov
xor
mov
cwtl
repz
lcall
mov
test
out
mov
and
adc
sbbb
xor
push
aaa
sub
and
stos
in
push
pushw
mov
notb
inc
push
aaa
sahf
pop
fs
jbe
fldenv
add
xor
fbld
imul
sbb
or
lea
or
call
lods
decl
shl
push
lds
stc
shl
imul
mov
inc
out
fs
cmp
addr16
rorb
adc
test
fisttps
inc
mov
sbb
inc
or
jp
inc
dec
cld
ret
xchg
fisubl
sbb
mov
out
lahf
addr16
jnp
mov
gs
mov
pop
insb
and
xchg
jbe
jno
xchg
xchg
jg
les
sarb
mov
iret
in
and
setne
mov
jecxz
mov
out
jle
cli
scas
cmp
push
stos
lret
das
sarb
sub
mov
cltd
inc
jnp
add
cltd
loope
sbb
adc
inc
lds
out
sub
mov
mov
sub
inc
insb
dec
pop
sbb
inc
sub
jge
sub
nop
add
pusha
repz
or
xchg
sub
jno
movsl
mov
xchg
mov
aas
in
push
pop
or
lds
test
les
xchg
testl
jmp
adc
cmp
or
jnp
nop
mov
cli
popa
popf
mov
cmp
aaa
pop
xchg
add
adc
sub
lret
inc
imul
dec
movsl
gs
mov
shll
sub
xor
inc
shrb
or
or
cmp
movsl
push
mov
xchg
outsl
push
jmp
daa
imul
lods
and
clc
pop
mov
mov
sbb
cli
into
lock
test
ja
cmp
push
or
push
outsl
out
inc
add
jo
sbb
ret
xchg
insb
cltd
into
arpl
test
inc
enter
adc
xor
lea
lods
sbb
cs
aaa
fwait
stos
aaa
jp
aaa
mov
jno
jle
pop
bound
cli
cmc
add
mov
fsubs
cmpsb
xor
mov
add
in
int
test
mov
push
pop
pop
fcmovne
xchg
mov
cmp
in
movsb
outsl
xlat
stc
popl
cmc
mov
xchg
xchg
sub
push
cmpsl
jnp
pushf
aas
push
lea
mov
pushf
ret
push
shl
hlt
inc
pushl
mov
icebp
shrl
fs
dec
jnp
inc
cmp
and
pop
and
add
sbb
je
sub
pop
arpl
div
and
dec
adc
nop
push
xchg
jns
push
cmpsl
cli
ficoml
cltd
rorb
call
jnp
sbb
icebp
push
js
clc
mov
mov
mov
add
dec
in
incb
dec
iret
test
sub
inc
pusha
loopne
clc
jo
cmp
mov
dec
clc
mov
xchg
sub
enter
test
add
sub
test
and
hlt
xchg
inc
dec
mov
roll
pop
cld
test
iret
push
lret
lret
xchg
cli
clc
dec
inc
outsl
pop
or
call
push
jecxz
cmp
fists
xchg
out
movsl
sub
maxps
out
jle
jle
jns
adc
repz
sub
dec
loop
xchg
mov
lcall
loope
push
mov
mov
bnd
pop
fwait
shll
jecxz
xchg
jns
nop
jg
cmp
sbb
loop
mov
xchg
sub
push
fs
test
repnz
into
inc
adc
dec
movsl
out
mov
xchg
cmp
out
cmp
pop
xchg
fmul
dec
cmpsb
mov
or
mov
mov
dec
lock
dec
cli
movl
ljmp
pop
cmp
mov
xor
mov
jns
dec
inc
dec
push
clc
mov
jns
mov
mov
pop
and
loope
add
iret
addb
add
movsb
ss
and
sahf
ljmp
mov
sub
ljmp
pushf
popa
sbb
mov
xor
test
lahf
jg
sub
aam
pop
dec
sbb
mov
ds
push
mov
jns
daa
bound
push
jbe
dec
mov
pop
loop
sub
test
lahf
pop
mov
sar
mov
cmpb
xchg
lret
bound
cmova
push
ljmp
xchg
mov
add
fisubs
pop
into
fwait
shlb
xchg
mov
fcom
mov
fildll
push
ret
pushf
inc
sub
xchg
movsb
outsl
test
mov
ja
adc
adc
xchg
inc
mov
push
std
jb
or
jecxz
xchg
jne
stc
inc
pop
cwtl
add
rorb
pop
push
cwtl
xor
std
xor
cmp
sbb
stc
xchg
lret
loopne
cmp
sub
bnd
jnp
dec
iret
dec
push
sbb
inc
stos
test
insb
sbb
push
ret
fsub
jbe
fdiv
cmc
cmpsl
pop
enter
cld
push
add
dec
sti
jecxz
dec
sbb
repz
add
or
arpl
cmp
sbb
sbb
push
sbb
stos
cwtl
mov
inc
mov
es
int3
fdivrs
repz
test
call
mov
mov
add
jecxz
aad
jecxz
dec
jnp
in
dec
push
xor
or
mov
or
pop
movsl
stos
popa
mov
mov
sbb
jnp
sahf
push
adc
mov
jp
fs
dec
lods
pop
pusha
inc
jmp
xor
mov
leave
xlat
inc
sub
fimuls
sbb
jb
es
iret
push
inc
inc
neg
pop
lods
add
incl
inc
sub
out
in
xchg
mov
sbb
subb
inc
loopne
out
fdivl
push
fnsave
add
cld
out
pop
mov
call
fcomps
rorb
jmp
cmp
add
sub
or
imul
mov
add
xchg
in
mov
cld
nop
sysret
push
sahf
sarb
xor
cmp
pop
call
pushf
xchg
inc
pop
jl
jg
jge
pop
cmp
jmp
mov
sbb
push
andb
lret
push
test
jo
fbstp
ret
cmp
sbb
outsl
xor
lret
cmpsl
iret
adc
or
mov
mov
sbb
pop
ja
dec
xor
test
inc
rcll
mov
pop
sbb
inc
mov
aaa
imul
dec
fadds
popa
pushf
pop
cwtl
out
fwait
daa
shrl
push
sbb
loop
mov
mov
mov
mov
xor
xchg
adc
iret
mov
xor
push
ljmp
cmp
cmpsl
outsl
dec
cli
push
xchg
lret
dec
test
fsts
rclb
cmp
sbb
xchg
mov
cmp
aam
popa
lahf
add
pusha
arpl
push
in
loop
sahf
movlps
xlat
adc
mov
mov
add
push
adc
daa
xchg
sarl
nop
repz
fwait
cmp
xor
jo
imul
js
mov
or
inc
movsl
insl
xchg
mov
adc
lock
jb
loop
fsubs
pop
push
hlt
arpl
cli
fisubrs
push
xchg
inc
pop
push
pop
in
cmp
in
dec
inc
mov
movsl
push
aam
je
push
xor
jge
mov
data16
test
ficoms
xor
sbb
and
aam
or
mov
gs
xor
mulb
inc
dec
push
mov
mov
pushf
xor
sbb
insl
or
stos
cmpsl
nop
fs
fdivr
jae
lods
xchg
or
push
aas
mov
dec
mov
outsl
mov
pop
mov
mov
xchg
dec
int3
sub
xchg
imul
xchg
xor
ret
mov
mov
mov
push
inc
popf
mov
xchg
pushl
mov
in
sti
jle
add
dec
data16
lods
jo
xor
clc
jecxz
nop
imul
sub
push
lock
mov
adc
sbb
lock
sbb
outsl
divb
push
pop
lret
nop
rclb
rcr
inc
xchg
rcl
inc
and
sub
rorb
cmp
inc
aaa
sub
dec
sbb
iret
inc
jb
insb
or
xchg
ds
or
xor
leave
jmp
adc
leave
push
out
subl
in
and
push
adc
sbb
jle
aas
or
mov
cmp
and
lods
sahf
or
xor
in
pushf
or
cmp
dec
lret
jbe
cltd
ret
xor
mov
shrl
pop
outsl
hlt
fs
negb
test
and
dec
clc
jge
jne
cli
cmp
inc
sub
add
pusha
add
xchg
jmp
movsl
jb
lods
and
add
dec
xor
or
xorb
inc
sahf
push
push
jae
mov
push
mov
cmpb
sbb
and
scas
sub
xchg
cmp
add
addb
adc
ja
mov
pop
push
pushf
outsl
leave
nop
leave
ss
and
mov
rolb
mov
call
jae
mov
imul
leave
in
xchg
sahf
outsl
mov
push
out
popa
sbb
adc
cmp
xchg
shlb
mov
aaa
dec
fcos
fstp
adc
insb
rclb
das
sbb
sbb
cmp
pop
in
xlat
inc
and
inc
inc
add
inc
sbb
adc
mov
imul
jp
mov
mov
sub
xor
sub
mov
popf
ss
dec
pop
xchg
pusha
or
inc
add
dec
xchg
or
add
sahf
adc
add
dec
imul
jp
clc
add
add
sbb
pop
clc
cmp
mov
rolb
ljmp
dec
ljmp
inc
hlt
loopne
pop
add
into
negl
sahf
add
ljmp
ret
mov
cld
mov
sbbw
push
adc
pop
imul
data16
inc
fadd
test
lock
cs
push
std
fnstcw
mov
dec
lcall
jbe
and
push
jge
adc
test
sbbl
mov
movlps
or
loope
push
jbe
in
pop
mov
push
jb
int
nop
out
pop
loop
xchg
loop
rcrb
push
clc
shr
or
dec
arpl
sbb
ja
aaa
and
imul
loopne
clc
push
frstor
pop
clc
bound
dec
scas
movsb
mov
mov
ss
or
pop
cwtl
popa
popa
push
mov
jb
sti
adc
jnp
xor
mov
jge
repz
sbb
adc
mov
xor
and
lcall
push
sub
add
je
add
sbb
in
fstp
test
sti
in
mov
icebp
cmp
insb
lods
lds
add
xor
jle
sbb
mov
bound
shl
pop
mov
fcompl
fcomps
xlat
arpl
sbb
inc
jg
adc
outsb
cmpb
sbb
mov
xor
fwait
and
das
pop
xor
adc
inc
rcrb
jns
adcl
sub
rcrb
dec
insb
dec
sub
jns
mov
repz
repz
cs
inc
setg
ds
jae
and
sbb
dec
mov
sti
xchg
lock
dec
xchg
and
lods
cmp
jecxz
add
sar
outsb
dec
add
jmp
cwtl
iret
mov
sbb
adc
and
pusha
test
adc
pop
arpl
sub
jno
inc
mov
in
dec
imul
pusha
add
add
insb
add
adc
mov
xchg
jle
pop
fcoml
movsl
sbb
loope
inc
int3
pop
aas
inc
call
sbb
inc
pop
mov
stos
movsl
fbstp
mov
mov
xchg
sarl
pop
shlb
test
or
pop
data16
xchg
cmc
test
mov
test
and
add
sbb
daa
int3
adc
jge
jo
jae
in
idivl
xor
or
movsb
ljmp
mov
outsb
testl
ficoml
gs
aad
gs
jb
push
add
insb
add
jns
test
sti
mov
test
fs
in
insb
inc
aam
jge
xchg
and
or
dec
cmp
jg
sub
mov
and
and
pushf
xor
out
mov
sub
cmp
cmc
dec
sub
fnstenv
out
inc
enter
jnp
fwait
loope
cmp
mov
sbb
or
sbbb
mov
iret
adc
push
pop
mov
and
adc
xchg
lock
dec
call
lea
aad
add
aas
sub
movsb
out
sbb
fnsave
jle
stc
and
dec
ret
fs
lret
mov
mov
cltd
xchg
rclb
adc
dec
sub
hlt
loope
mov
mov
enter
push
cmp
push
add
mov
dec
lock
out
push
inc
mov
pop
jmp
jmp
mov
mov
or
mov
call
push
inc
daa
shl
test
sbb
mov
lods
lea
subb
inc
outsl
push
dec
cmpsl
fiaddl
jle
leave
shll
jge
cs
dec
shr
aam
imul
shlb
sbbl
push
repnz
scas
xchg
pop
movl
jns
sbb
fsubrs
pop
mov
or
mov
imul
cmc
data16
out
xor
xor
idivl
scas
xchg
and
adc
lods
inc
sub
loopne
mov
mov
outsl
popf
push
icebp
mov
gs
or
aas
add
fisttpl
pop
add
dec
xchg
cmp
mov
add
mov
xchg
aaa
and
jl
jmp
push
aad
adc
movsb
mov
in
or
out
adc
push
push
xor
clc
ss
mov
sbb
mov
repnz
lret
mov
cs
lret
or
xchg
lcall
inc
inc
inc
push
cli
test
dec
dec
lods
adc
arpl
xor
lds
inc
pop
xor
xchg
arpl
shrl
jle
sub
int
int
mov
out
pop
stos
xchg
dec
xor
jl
fwait
sub
dec
into
inc
pop
xor
push
es
aas
sub
cmp
push
mov
daa
outsl
in
pop
or
stc
adc
insl
dec
and
das
pop
imul
add
leave
jne
sub
xchg
cwtl
adc
or
inc
fildll
stos
adc
and
push
xchg
or
cld
sub
adc
xor
jo
faddp
dec
add
cmp
out
leave
cs
mov
stc
cld
mov
aam
ljmp
aad
cmp
pushf
mov
testb
fs
pop
pushf
mov
and
es
movsl
mov
xchg
inc
or
cmpsl
test
jl
idivb
dec
sbb
inc
pop
orl
popa
lret
inc
push
add
add
cmp
inc
loop
std
dec
shll
in
mov
clc
mov
push
in
out
or
xor
popa
and
sub
ljmp
pop
ficompl
mov
mov
in
clc
movsb
jg
int3
repz
nop
inc
les
cmp
in
jns
ljmp
addr16
dec
cmpsb
sahf
add
and
test
jmp
rolb
pop
arpl
mul
mov
jnp
dec
inc
out
sbb
scas
js
xlat
inc
adc
rcrb
push
sbb
mov
or
jnp
inc
jno
punpckldq
stos
adc
dec
jne
test
rep
push
adc
adc
lock
aaa
lds
xor
in
mov
push
in
faddl
add
pop
lret
add
mov
sub
jmp
xchg
mov
mov
inc
insb
mov
dec
pop
decl
iret
inc
lret
inc
mov
lahf
mov
movsl
or
fcompl
mov
mov
jg
pop
mov
in
pop
and
mov
incb
inc
jg
popa
pop
addr16
sub
mov
insb
xor
flds
imul
sbb
stos
sbb
mov
xor
mov
aad
push
je
cmp
es
mov
ds
sub
jg,pt
loopne
movsl
push
movsl
sarl
cwtl
andb
inc
nop
faddl
push
movsl
test
call
cmp
adc
and
push
or
jl
int3
jne
jp
imul
jnp
lods
out
mov
add
inc
jl
cmpsl
cltd
pop
xchg
cmp
xchg
out
outsl
add
scas
flds
push
iret
scas
bound
repz
push
out
and
push
add
jecxz
push
pop
add
lock
movsl
pop
xor
and
dec
jle
fwait
or
jne
push
popa
inc
jge
xor
jge
jb
arpl
ret
mov
in
rorb
cwtl
dec
pusha
pop
in
inc
add
in
pop
mov
cmc
sahf
xor
push
xor
fldl
iret
inc
pop
dec
shll
sbb
ljmp
or
or
movsl
sbb
lret
icebp
add
adc
mov
lods
xchg
pop
mov
jbe
cli
lahf
insl
sub
ds
xor
in
jge
mov
cmp
xor
ss
and
jb
fists
jnp
xchg
arpl
mov
test
jns
cltd
bound
loop
sub
sub
subl
sbb
sbb
pop
xor
fists
scas
insb
and
dec
push
nop
mov
mov
push
cmp
mov
test
and
fildl
or
sahf
add
inc
in
scas
push
sub
arpl
push
pop
enter
push
leave
push
and
mov
outsl
inc
scas
daa
es
dec
sub
popa
pop
testb
dec
mov
test
push
subb
mov
add
gs
adcb
pop
cli
sbb
mov
inc
lock
jge
in
fistpl
sub
lea
add
rcrl
test
negb
lock
movsl
repnz
out
out
js
pushf
dec
xor
bound
adc
and
xchg
dec
pop
ret
sbb
adc
sti
jne
divl
movsl
hlt
dec
rorl
scas
lcall
fcmovnbe
dec
push
inc
das
call
cmp
or
lret
push
jl
pop
pop
ret
lcall
mov
sti
adc
mov
ljmp
sahf
mov
adc
pusha
pop
add
mov
sti
inc
mov
push
js
rolb
push
cmp
adc
int3
push
in
lahf
pushf
repz
xor
xor
ss
xor
xor
lock
lods
mov
push
sti
aad
shlb
loop
inc
lds
data16
imul
test
jns
cmpsl
sbb
stos
or
scas
push
lods
lds
jecxz
pusha
mov
push
xchg
fimull
dec
push
sahf
sub
pop
adc
loopne
movsb
mov
add
mov
push
shlb
push
mov
cmp
test
pop
rcll
mov
in
pop
mov
orl
movsb
push
lock
xchg
popl
pop
test
roll
mov
and
push
sub
pop
in
test
mov
lods
mov
ret
adcb
popf
movsl
int
and
sub
daa
stos
sub
popa
push
addr16
mov
inc
jle
es
xchg
sub
xchg
lcall
sbb
aas
cmp
stc
clc
cmp
lods
lea
insl
packuswb
and
bnd
pop
out
rorb
xor
push
aaa
mov
pop
adc
pop
inc
xchg
flds
pushf
sti
in
loope
add
imul
xchg
mov
pop
add
nop
ficompl
sub
pop
lds
cmpsl
dec
js
xchg
dec
xor
test
xor
add
ss
in
test
push
iret
mov
fadds
sub
and
out
mov
mov
adc
mov
xchg
aas
je
in
les
scas
shll
push
mov
jle
cmp
out
pop
addr16
mov
xor
and
and
push
pop
inc
adc
add
cld
inc
ret
ret
inc
cld
add
adc
std
push
cmp
push
push
xor
push
push
pop
cltd
lret
mov
inc
std
arpl
push
subb
mov
adc
xchg
rorl
lds
pop
fwait
int3
dec
or
xor
rorb
sti
leave
adc
pop
jnp
inc
jmp
lods
rcll
pusha
push
sbb
or
jnp
scas
int3
mov
fsubl
loop
cmpl
lock
aas
or
ljmp
roll
and
add
aaa
ja
xchg
mov
ljmp
xor
jge
mov
or
cwtl
adc
loope
xor
push
xchg
jbe
dec
aaa
fs
cwtl
les
in
orb
add
sbb
aam
add
jb
pop
shlb
push
dec
dec
mul
push
icebp
loope
inc
lds
push
jl
add
and
push
movsl
mov
push
loopne
cmp
mov
xor
fildl
jle
push
fstpt
popf
gs
pop
rolb
rclb
jp
xor
inc
loope
faddl
ret
mov
bound
jae
jmp
or
sbb
adc
sbb
jg
inc
adc
imul
ret
cs
cli
outsl
test
add
push
enter
xor
andl
mov
dec
shll
loopne
or
fstps
lea
xor
outsb
mov
out
and
fs
push
dec
mov
insb
add
add
clc
or
add
sub
xchg
xchg
cmp
sub
jno
mov
rcr
cmp
sbb
cltd
pop
mov
xor
stos
adc
iret
filds
add
mov
adc
fisttpll
jnp
add
mov
mov
adc
cmp
or
xchg
or
lret
dec
mov
pop
jl,pt
push
xor
mov
mov
inc
lret
out
aad
inc
inc
inc
and
repz
jae
jno
in
inc
pop
sar
lahf
or
push
loop
fsubrs
mov
xchg
push
or
daa
mov
mov
mov
sub
mov
aam
fimuls
xor
shlb
push
adc
xor
rcll
clc
push
and
sahf
mov
enter
imul
and
popa
ljmp
push
mov
sub
push
xchg
pop
mov
adc
cmp
mov
xor
pop
gs
cld
sahf
adc
loopne
cmpb
into
mov
add
test
imul
cmp
or
push
out
ss
bound
push
cmp
mov
scas
sti
fldl
or
loop
push
pop
call
or
les
pusha
add
adc
out
int3
xchg
fisubrl
aam
cmp
sub
xor
jecxz
je
arpl
out
je
jnp
imul
push
sub
lret
pop
jne
in
ja
xchg
and
jnp
dec
push
mov
push
movsb
cmpsl
movsl
and
jne
pop
add
sahf
ret
xor
inc
jb
and
nop
or
call
ss
cmp
xor
fadds
aam
xchg
mov
sub
test
outsl
pop
and
pusha
je
jbe
cmp
push
jno
sub
insb
out
and
mov
jo
adc
mov
mul
jnp
dec
xor
adc
dec
imulb
test
and
nop
mov
outsb
and
lock
sub
sbb
mov
arpl
dec
sbb
cld
jne
dec
stos
in
sbb
jbe
js
push
sub
lcall
fnstsw
inc
ds
xor
push
les
sub
das
inc
push
jge
cmp
test
fmull
insb
push
sbb
push
mov
rorb
xor
mov
sbbl
adc
or
xor
push
sbb
ret
mov
jecxz
rcr
cmp
in
stos
push
outsl
ljmp
sbb
outsl
push
testl
sbb
and
mov
sarl
sbb
mov
pop
cmc
xor
lea
dec
icebp
fidivrs
cmp
cs
repnz
mov
in
bound
push
and
jns
dec
iret
fnsave
pop
fnstcw
mov
js
add
xor
paddq
xor
jae
xor
lcall
jmp
stos
xchg
xor
jmp
das
js
nop
pop
or
call
xor
ret
fistps
nop
or
push
insb
pop
clc
dec
cmp
movsb
rcrl
rcl
in
cvttps2pi
pop
hlt
inc
push
mov
sub
imul
jg
int3
cmpsb
xchg
out
push
pop
ss
pop
dec
xorl
mov
addr16
mov
enter
add
and
sti
cli
xchg
dec
xorb
imul
mov
lods
ljmp
jmp
hlt
push
and
jbe
push
sbb
sbb
dec
lods
jo
insl
mov
jno
sbb
xchg
in
mov
pop
cwtl
filds
inc
in
pop
sbb
pop
leave
ret
lret
push
xchg
lea
jne
push
xchg
fbstp
ds
sub
adc
outsb
faddp
scas
adc
popa
dec
xor
push
ss
jne
dec
or
fisubrl
aad
mov
mov
fwait
inc
mov
fimull
jmp
push
icebp
pop
jae
inc
ds
lods
inc
aam
pop
jl
xor
fisttpl
imul
cmp
outsb
mov
sbb
ljmp
xchg
push
mov
loop
xchg
push
ret
shll
es
xchg
xchg
cmp
push
stc
push
mov
fwait
push
out
mov
aaa
xchg
cmpsl
sahf
enter
mov
sub
ficoml
inc
div
mov
lods
push
lock
xchg
icebp
cmp
fsub
out
out
sbbb
into
in
cld
popf
mov
dec
in
push
push
pop
mov
xor
mov
xchg
or
out
or
pop
jg
pop
jae
push
dec
sub
call
rcr
sbb
and
aad
push
out
dec
arpl
push
es
mov
lock
ds
push
mov
mov
or
xchg
fidivrl
ds
dec
out
rorl
inc
mov
add
in
mov
das
jae
cmpsb
push
push
sub
sub
stc
lock
mov
ret
inc
bound
xor
mov
test
clc
or
mov
xor
into
cmp
test
fldenv
rolb
shll
jecxz
mov
xchg
test
sub
dec
sti
cld
scas
inc
into
jmp
cmp
cwtl
ficompl
and
adc
pusha
loope
lock
push
inc
jns
in
fstl
mov
pop
jbe
push
xchg
mov
lahf
stos
aad
mov
leave
cmp
sti
mov
stos
jnp
iret
push
or
push
xor
sbb
or
or
rolb
sarl
inc
stos
mov
adc
jmp
cmp
push
jp
push
dec
lcall
jg
sub
and
popf
insl
or
nop
icebp
arpl
lds
sbb
jnp
aas
movsl
or
xor
daa
loop
or
in
and
sti
lock
cmpxchg
into
imul
lahf
shl
xchg
stc
sbb
add
aam
jno
fistpll
and
pop
push
or
clc
stos
cmp
mov
add
push
cmp
adc
sub
cmp
inc
and
add
jg
inc
je
and
mov
and
insb
imul
or
fsubrs
imul
push
mov
dec
movsl
loopne
and
push
cmpsl
cmp
cmc
cmpsb
adc
retw
popf
inc
and
lret
cmp
psubusw
dec
std
sub
inc
jnp
sub
sub
decl
sbb
jmp
and
xor
test
sub
sbb
pushf
sub
add
loope
data16
shlb
jl
mov
dec
cld
test
xchg
push
mov
sbb
rcrl
push
jecxz
pop
cmp
adc
cwtl
pop
je
push
mov
mov
shl
push
ja
pop
sbb
push
xchg
test
xorb
add
out
add
fadds
jno
jp
sbbb
clc
icebp
out
mov
popa
pop
fdivs
mov
popf
and
mov
aaa
mov
das
scas
fwait
adc
stos
in
incb
or
xchg
dec
adc
fdivl
insl
testl
mov
stc
mov
ds
lret
xchg
xor
xor
cmp
mov
push
mov
pop
repz
fsubp
flds
adc
mov
insl
test
push
adc
out
outsl
fimuls
dec
in
mov
pop
bound
inc
jno
and
push
mov
jnp
int
loop
js
push
leave
adc
push
aaa
bound
inc
test
imul
mov
adc
orb
lods
pop
cld
enter
inc
sarl
push
sub
adc
lret
cmp
ficoms
ss
lahf
pop
mov
add
dec
lret
or
xor
test
das
mov
and
jb
mov
sbb
bound
jb
xor
or
stc
mov
shr
rorl
mov
mov
je
xchg
stos
fsubrl
push
mov
jecxz
nop
int
mov
cmpsl
loopne
pop
mov
mov
and
jnp
xchg
cli
cmpsb
push
cs
jge
pop
mov
add
js
cld
mov
fsubrl
cmp
mov
add
dec
push
dec
std
push
clc
loope
xchg
addr16
jo
stos
mov
sbbl
jo
incl
enter
or
int
sub
icebp
mov
xchg
aaa
das
das
push
dec
fwait
daa
fwait
pop
and
jge
bound
insb
xchg
xchg
insl
cmp
repz
sahf
mov
xor
push
adc
in
mov
fimuls
xchg
push
and
jmp
and
ret
fsubr
out
std
lods
dec
adc
sbb
in
fs
cmp
sub
in
sbb
cmp
rcl
mov
lret
hlt
inc
inc
xor
aad
loop
pminub
lds
std
test
sub
push
add
shll
adc
xchg
lds
or
jg
jb
and
pusha
lods
or
hlt
add
stc
insl
and
inc
push
add
jne
adc
sti
fidivs
dec
jmp
add
push
std
jb
xchg
loop
sub
outsb
pop
adc
jmp
fadd
negb
ljmp
dec
shll
xorl
arpl
popf
ret
int
sbb
outsb
push
mov
sti
sti
jecxz
dec
out
mov
push
data16
sbbb
jo
adc
add
push
in
jbe
inc
push
pop
pop
shl
andl
stos
xor
je
jp
or
mov
and
addb
addr16
and
out
sbb
dec
adc
cmp
into
cmc
rcl
dec
mov
les
cmp
dec
mov
iret
aad
or
outsb
mov
dec
inc
scas
popa
aaa
sub
cld
inc
lcall
adc
dec
pop
cmpsl
imul
xchg
sub
enter
mov
xchg
jne
fs
insl
sar
sti
push
nop
pop
shll
sub
push
call
arpl
push
mov
jns
aas
ss
xor
xor
or
icebp
cmp
test
pop
insl
lods
in
subb
xor
into
rcrl
xchg
sbb
jg
push
dec
shll
xchg
sub
scas
inc
cmpsb
inc
xchg
pop
jne
scas
push
mov
xchg
test
ljmp
adc
fwait
inc
jp
jmp
daa
dec
xchg
or
mov
or
cltd
or
sub
mov
push
daa
out
fwait
dec
inc
pop
jmp
xchg
ret
mov
pop
sahf
jp
sti
aad
jb
jmp
repnz
dec
out
pop
sbb
in
lret
jg
xchg
dec
popa
nop
xchg
imul
mov
lea
pop
pushf
je
out
inc
movsb
mov
cwtl
sbb
jne
jo
mov
cltd
cwtl
add
pop
aas
repz
adc
out
cmp
in
dec
aas
xor
dec
adc
adc
test
je
sub
mov
pusha
mov
pop
test
jne
push
fcomp
push
or
sub
adc
test
mov
and
mov
sub
outsl
push
nop
mov
xor
aaa
jg,pt
rorb
jbe
adc
cwtl
pop
mov
add
loop
jns
jmp
pop
adc
lret
xchg
rep
jb
js
dec
movsl
loopne
stc
mov
or
or
cmp
push
std
dec
push
pop
clc
pop
imul
inc
outsb
inc
pusha
mov
gs
dec
repz
mov
pusha
mov
and
js
jl
pop
adc
in
lds
fdiv
leave
sbb
sub
push
mov
inc
ds
mov
enter
insl
sub
rcll
rcrl
cwtl
dec
aaa
adc
sahf
xchg
lret
xlat
ficomps
push
and
cmpsb
push
xlat
lods
cmp
xchg
shrb
lock
leave
sahf
out
lods
mov
cmovl
loop
jno
dec
inc
inc
or
mov
hlt
pop
dec
ljmp
push
popa
icebp
lret
add
fdivrl
adc
in
imul
or
sub
pop
inc
test
pop
push
or
pop
movsl
clc
adc
in
fs
xchg
mov
loop
cli
mov
mov
inc
cwtl
int
cmp
movsb
mov
add
mov
movsl
pop
cmp
sub
xor
pop
jge
fstps
pop
inc
push
push
fwait
push
xchg
orl
paddw
ret
stos
push
adc
push
cmp
mov
loope
pop
add
std
inc
data16
dec
hlt
in
cmp
add
sbb
aad
fistpll
cltd
getsec
jle
jne
out
or
xchg
leave
adc
insl
mov
call
mov
cmp
sbb
enter
pusha
dec
insl
popa
fldl
stc
add
movsl
push
adc
mov
out
mov
sbb
mov
cmc
adc
in
cmp
repz
mov
shlb
ret
jp
in
jle
mov
and
loope
imulb
or
jg
sub
imul
sarl
stos
frstor
adc
lock
frstor
je
cmc
repnz
fstps
push
add
push
sub
push
lcall
fstp
adc
sub
loop
mov
jmp
push
jb
jmp
pop
mov
or
xchg
push
sbb
ss
cmc
mov
ficoml
mov
rcrl
push
push
addr16
subb
cli
pop
mov
adc
mov
pop
insb
mov
inc
jge
sahf
shlb
ffreep
iret
lods
inc
sub
sbb
xchg
xchg
cmc
cltd
jmp
dec
mov
mov
xor
ja
js
jp
stos
xor
mov
sbb
cltd
sbb
dec
pop
adcl
pushf
sbb
int3
popf
add
aam
cwtl
jp
imul
push
sbb
nop
ret
push
xor
xor
dec
jnp
pop
cmp
gs
insl
and
or
jmp
mov
mov
xchg
stc
jbe
ljmp
aaa
xchg
xor
fwait
mov
jns
test
cmpsl
mov
pop
jle
pusha
iret
js
dec
mov
rol
push
and
shlb
cmp
ds
test
pop
push
add
mov
addr16
fwait
lea
lock
jmp
add
jge
dec
sub
mov
and
add
cli
aaa
bound
push
repnz
outsl
jmp
and
inc
cmp
fdivrl
addb
sbb
inc
inc
mov
les
mov
dec
adc
roll
adc
popf
xchg
jle
rorb
adc
fwait
push
fidivrl
and
out
inc
jno
xchg
push
push
cmp
xchg
push
pop
pushf
and
sub
or
inc
jmp
stc
dec
adcl
sub
movsl
lods
push
test
inc
jecxz,pn
xlat
hlt
push
mov
cli
add
ret
shll
test
xor
jg
xchg
decl
mov
sbb
sbbb
sbb
cmpsb
adc
imull
sub
adc
inc
or
sub
inc
addr16
inc
dec
mov
cwtl
nop
popf
lods
sub
cmp
scas
or
dec
cmc
leave
mov
jns
insb
pop
bswap
or
sub
lds
ds
daa
and
jle
inc
xlat
ficoms
out
xchg
into
mov
js
scas
adc
mov
ss
cs
enter
fcoms
aas
push
pop
push
cs
sbb
ret
movsb
cmc
jle
or
stc
inc
jne
mov
addb
xlat
xlat
out
repz
inc
popf
lea
cs
cld
push
icebp
ret
and
stc
popa
mov
popa
stc
rcrl
flds
jecxz
inc
sub
inc
les
pop
ljmp
sub
mov
push
nop
fs
sbb
rcr
loopne
mov
push
leave
dec
ret
mov
test
sbb
inc
jns
or
dec
mov
mov
into
es
stos
mov
or
pop
mov
cmc
cs
jge
dec
lock
faddl
imul
jmp
int3
fbld
jns
iretw
push
sbb
mov
inc
imul
push
pushf
add
movsb
cs
mov
jmp
scas
mov
sbb
and
xchg
push
scas
rcrl
xor
xchg
in
adc
xchg
arpl
mov
int3
sbb
jnp
push
or
pop
push
fidivs
mov
add
and
mov
call
xor
data16
mov
dec
sub
aaa
or
insb
fsts
mov
mov
inc
sub
add
addr16
shlb
sub
iret
decb
mov
repz
push
mov
iret
imul
mov
sub
adc
push
mov
decb
cltd
loopne
mov
rol
fwait
adc
and
stos
sti
imul
push
mov
lods
cmc
push
pusha
lahf
sarb
mov
push
jl
aaa
in
pushf
add
cmp
clc
in
and
xor
cmpb
inc
push
inc
push
push
ds
imul
das
mov
pop
mov
into
xor
lcall
pop
xchg
pushl
rclb
xchg
lahf
jnp
sub
outsb
or
addr16
lods
test
rcrl
testb
mov
lock
rolb
fcompl
aaa
ljmp
insb
xchg
orb
int
jb
hlt
cld
dec
scas
mull
lret
xor
mov
fs
imul
pop
loope
mov
mov
fwait
adc
enter
fidivs
out
xor
lods
mov
popa
rcrl
rcrb
xlat
cs
mov
add
xor
lds
ret
daa
cmp
mov
rcrl
idivb
dec
cmp
inc
sub
leave
xchg
faddl
sbb
xchg
and
inc
or
jno
add
cwtl
push
aad
popa
aam
pop
leave
mov
fisubrl
out
xor
lock
xor
xor
adc
sbb
mov
dec
cmp
push
cmpsb
aad
push
pop
push
and
fs
or
cmp
ja
adc
js
xbegin
iret
pop
jae
mov
jmp
sub
movsl
mov
and
into
inc
inc
jns
iret
mov
mov
mov
je
mov
dec
inc
or
lret
inc
jge
xor
mov
or
dec
test
mov
mov
jo
dec
or
sbb
lcall
mov
idivb
xor
jmp
xchg
xorb
mov
mov
lcall
cmpsb
xchg
push
inc
jbe
clc
xor
fs
repz
adc
mov
pop
dec
mov
add
add
mov
mov
fmull
dec
dec
sti
mov
lcall
inc
flds
ret
lock
fistps
adc
inc
sbb
and
in
jbe
arpl
subb
add
lcall
rolb
xchg
pop
or
push
inc
sbb
sbb
dec
cmp
mov
and
push
mov
test
lcall
cltd
jl
loope
repnz
mov
test
in
inc
les
shlb
les
mov
push
vmread
jmp
loopne
mov
xor
fs
loop
out
mov
add
mov
ret
jle
lea
into
pushl
sti
mov
repz
sub
or
push
pop
leave
inc
jge
scas
shr
adc
mov
push
xlat
or
jbe
ret
and
add
aad
inc
push
daa
add
dec
nop
xchg
mov
sti
or
clc
add
and
shll
mov
dec
ss
cld
int
or
mov
iret
lods
inc
imul
scas
inc
insb
rol
xchg
mov
scas
stos
push
clc
ljmp
in
out
or
xchg
adc
or
insb
pop
rolb
lea
mov
mov
hlt
lcall
fs
bound
out
imul
test
or
inc
cmc
pop
xchg
into
cmp
test
jne
pop
or
mov
imul
int
popa
push
jp
xchg
push
xchg
xchg
xor
mov
clc
lret
cltd
adc
jle
mov
add
or
mulb
jl
ss
shlb
xchg
out
jmp
fadds
inc
clc
pop
movsb
pusha
xchg
dec
pusha
int
xor
jmp
pop
ret
jl
and
or
jb
jmp
mov
cmp
out
sbb
imul
or
movsb
js
sbb
dec
mov
mov
in
inc
add
sbb
sbb
call
xor
inc
adc
iret
mov
sbb
mov
adc
stc
lcall
push
adc
addr16
mov
xchg
adcb
xor
out
sbb
mov
filds
xor
imull
xor
cli
data16
xor
das
cmpsb
lods
xor
or
sbb
daa
push
push
mov
imul
cmp
sub
sbb
addl
pusha
jae
adc
pop
lock
jne
out
clc
leave
sub
xchg
cmp
push
and
mov
pusha
test
cmp
and
clc
jb
movsl
jle
cs
mov
mov
xor
idiv
jbe
ja
fistpll
add
mov
fucom
shll
lret
loope
mov
sub
mov
jnp
or
push
sub
xorl
gs
aam
fisubrl
test
or
cmp
jmp
push
ljmp
icebp
pop
mov
fidivs
pop
pusha
cwtl
mov
std
fsts
fcompl
jns
in
mov
mov
jne
and
mov
and
mov
inc
dec
add
push
shl
pushf
jmp
in
fistpll
mov
addr16
pop
insl
mov
dec
or
or
test
ret
loope
ja
mul
aam
adc
inc
pop
mov
inc
adc
iret
or
and
sub
sbb
inc
xor
int3
shlb
inc
cwtl
xchg
popf
mov
adc
data16
and
das
stos
sti
movsl
cwtl
inc
pop
fisubrs
push
cs
push
xor
loopne
push
xchg
jno
mov
cmp
jo
xorl
in
lret
in
out
movb
or
push
pop
add
rclb
xor
mov
sub
stc
push
inc
push
ffree
repz
mov
dec
dec
xchg
lock
loope
xchg
push
mov
lcallw
in
cmp
test
in
test
popf
lods
xchg
in
fwait
cmp
xlat
sbb
fwait
adc
push
call
jmp
bound
sbb
inc
icebp
jmp
shr
fucomi
and
xorl
xor
popa
adc
jge
fmulp
dec
outsl
push
loopne
cmp
and
sub
jp
call
and
push
jp
test
pop
pop
out
mov
mov
cltd
sub
push
icebp
sbb
sarb
add
sub
cmp
mov
jmp
sbb
ds
jecxz
push
fisubrl
sub
cmp
sub
popa
sub
outsl
jle
push
mov
xchg
xor
nop
stos
and
bound
inc
jmp
imul
pop
imul
test
mov
inc
pop
shld
sbb
inc
add
xchg
inc
dec
sub
xchg
lea
pop
pop
inc
dec
sbb
sbb
shlb
sbb
test
xor
scas
mov
mov
mov
sbbl
shll
mov
pop
add
xor
andl
lcall
sub
jbe
add
scas
push
addb
dec
dec
xor
xchg
ret
movsb
push
cs
loope
push
in
pop
fidivrl
fwait
rol
xor
lcall
mov
in
push
jb
mov
mov
xchg
loop
mov
inc
adc
add
sbb
or
or
mov
and
sub
cmc
push
adc
pop
xor
loopne
out
jge
lret
mov
lret
inc
xchg
and
fbld
cmpsb
cmp
push
dec
and
push
mov
into
sbb
xchg
adc
repnz
popf
out
mov
je
loopne
stc
scas
or
and
pop
jmp
xchg
hlt
test
fadd
add
in
addr16
xor
cmpl
sahf
inc
faddl
movsb
fstpl
outsl
cli
repnz
sbb
rol
xchg
cmp
lret
pop
clc
mov
add
xchg
or
mov
or
xor
mov
lahf
mov
aam
fsubs
test
cmpsl
out
xor
incb
sbb
out
iret
pusha
mov
jge
dec
cs
aad
ja
dec
mov
adc
imul
lea
xor
mov
inc
sarl
add
fwait
in
out
sbb
aas
test
pop
aam
mov
stc
adc
je
loope
daa
cmp
lock
lret
cwtl
xchg
cmp
push
jp
scas
loopne
and
hlt
mov
insl
fidivs
xor
into
jo
int3
dec
jnp
sahf
inc
lret
test
mov
mov
movsb
es
data16
in
ror
and
mov
stc
or
xor
push
adc
in
fidivl
jl
jmp
or
and
das
roll
decl
pop
sub
notl
inc
push
mov
imul
jbe
inc
aad
pop
push
adc
in
and
out
or
sub
sti
mov
shrb
xor
dec
lret
scas
in
mov
mov
push
lds
loop
sub
scas
mov
in
push
sub
sarl
cmpsb
in
fadds
loop
sub
or
inc
rorb
add
or
dec
rorb
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
