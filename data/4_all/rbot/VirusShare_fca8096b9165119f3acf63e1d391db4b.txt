pusha
lea
or
flds
nop
lea
lahf
repnz
in
jno
cmpsb
add
decl
je
push
inc
pushf
rcl
icebp
jnp
js
lds
pop
jle
pushf
fwait
and
lods
xchg
push
andl
orl
mov
loopne
sub
mov
or
lods
mov
imul
jmp
pop
add
andb
mov
stc
add
ficoml
scas
jecxz
cmp
lds
xchg
fwait
jbe
xor
mov
pop
sbb
hlt
jns
inc
rolb
test
movsl
sub
sbb
or
ret
ret
or
into
adc
push
inc
jg
sub
fisttps
stc
inc
ds
pop
int
add
mov
insl
lock
in
pop
sarl
test
mov
int
subb
out
lcall
pushf
pusha
ss
push
ja
icebp
or
fldl
das
push
adcl
lds
push
lret
or
mov
mov
fmull
xor
mov
and
pop
pop
adc
lea
hlt
dec
adc
sbbl
addr16
test
mov
add
es
inc
pop
adc
test
mov
in
in
int
sahf
sub
or
std
mov
je
sbb
and
insb
sbb
scas
bound
xor
mov
lods
shll
ficomps
sub
loopne
sbb
add
rorb
aam
mov
stos
je
out
and
mov
movsb
test
dec
icebp
jne
imul
add
addl
and
std
mov
repz
dec
push
mov
push
aaa
mov
cld
and
hlt
add
test
mov
or
adc
mov
pop
cmp
fwait
sbb
dec
test
clc
dec
push
mov
ret
out
cld
lcall
iret
imul
and
jge
mov
mov
push
pop
adc
xorb
adcl
frstor
mov
cmc
lahf
jnp
mov
je
jl
xchg
push
or
aam
das
sbb
fdivp
inc
enter
pop
imulb
hlt
pop
jecxz
cmpsb
test
mov
jg
int
mov
lea
add
inc
das
pop
push
sub
cmp
aad
sbb
pop
dec
adc
test
xor
aad
xchg
jle
insb
out
jns
leave
mov
mov
adc
test
lahf
sarl
cld
push
daa
je
lret
xchg
jno
jns
mov
jle
inc
sub
movsl
ljmp
int
insl
nop
and
into
adc
das
cmp
xor
loop
into
jno
cmp
stos
pop
adc
jno
shll
fucom
push
mov
lods
sub
mov
adc
push
pop
rclb
in
popl
mov
lock
stos
jne
iret
push
icebp
dec
out
and
pop
push
jecxz
sarl
pop
sbb
in
adc
cvtps2pd
jb
sbb
std
mov
into
push
movsl
xor
ds
rol
int
call
inc
popf
xorl
jns
sti
loope
dec
subb
jns
dec
and
xchg
pop
dec
add
dec
test
sbb
imul
adc
aam
inc
sub
inc
jae
inc
xlat
stos
lcall
dec
dec
fnstsw
push
lret
push
cmp
cltd
ret
scas
push
sub
fwait
pop
mov
jmp
test
fwait
xchg
sti
sub
lretw
test
stos
add
repz
push
jbe
cltd
hlt
xlat
movsl
imul
pop
std
cmc
mov
mov
bnd
cwtl
in
or
out
das
xchg
lahf
insb
pop
out
sub
jno
jns
out
xor
das
es
in
mov
out
cmp
cmp
dec
push
mov
ret
adc
aas
xchg
in
cmp
add
xchg
arpl
scas
mov
mov
inc
jle
dec
jno
push
sahf
aaa
mov
outsb
pmaxub
push
mov
jb
or
add
dec
rcr
imul
lahf
mov
dec
xchg
in
out
lds
adc
adc
mov
in
fdivr
aam
jnp
jmp
je
pusha
xchg
mov
cmpsb
in
orl
jge
adc
inc
out
aam
insb
push
sti
arpl
lcall
xchg
stc
and
push
push
mov
cmp
jb
rcrl
lods
mov
and
pop
push
imulb
mov
mov
lahf
sbb
pop
popf
push
mov
mov
cld
cmp
insl
adcl
and
int3
bound
ja
push
data16
in
scas
pop
stc
in
or
push
jo
sahf
cmp
or
add
lods
jno
mov
pop
test
std
xor
jmp
mov
xchg
add
aad
inc
mov
jp
mov
cwtl
jge
fstl
jne
pop
lret
rorb
sub
sbb
fisttpll
in
outsb
out
xchg
hlt
xor
mov
movsl
pop
dec
push
sbb
testb
or
jmp
gs
dec
or
fwait
jbe
push
shr
sahf
in
bound
sub
and
stos
mov
sub
and
mov
loope
jne
adc
cld
or
arpl
aam
scas
cmp
adc
mov
lods
pushf
mov
das
loop
fwait
jno
negb
in
fstps
sarl
scas
scas
pop
dec
popa
or
xchg
xchg
pop
mov
inc
in
xchg
inc
repnz
ret
outsl
in
jae
mov
jge
add
pop
cmp
pop
pop
jmp
loop
jns
outsl
mov
cmovne
enter
jge
ret
inc
mov
scas
jmp
push
addr16
das
andb
and
iret
in
push
xchg
out
je
inc
dec
sub
pop
mov
jge
packssdw
daa
test
out
push
jge
loope
insb
rorl
mov
mov
push
and
sub
push
stos
sti
dec
dec
push
popa
lahf
adc
xchg
inc
aaa
fs
outsl
repnz
shrb
cmc
push
scas
out
aas
out
loop
add
inc
adc
movsb
and
loope,pt
and
xchg
inc
dec
jno
dec
jle
and
xor
call
dec
jnp
fwait
int3
adc
es
aam
sub
js
dec
jns
push
mov
jg
fdivrs
into
lods
divb
les
cmp
jo
test
fwait
jb
mov
inc
xlat
insb
push
dec
xorb
cmp
jo
cltd
lods
shrl
jl
push
enter
pop
sub
or
sub
adc
and
sub
aam
adc
pop
dec
cmp
jmp
cmp
fcoms
filds
push
mov
fdivs
sub
xor
movsb
das
dec
jae
iret
in
ljmp
pop
jae
xor
or
outsl
lret
dec
fcoms
leave
rolb
or
sbb
mov
xchg
sub
ret
iret
das
clc
jb
mov
and
inc
jno
dec
add
push
pop
jae
and
loop
daa
mov
mov
add
add
jns
mov
push
mov
jno
sbb
stc
stc
mov
and
pushl
incb
jbe
leave
addb
xchg
pop
aas
pop
lea
jmp
aad
cli
shr
outsb
notl
mov
lea
push
push
js
sub
or
xchg
je
sub
cmp
std
mov
xchg
push
mov
pop
mov
jnp
fisubs
xchg
mov
pop
pop
sbb
mov
push
mov
mov
pop
cli
popa
jp
ret
fwait
scas
or
sub
adc
stos
sub
lcall
les
cmp
arpl
pop
mov
sub
sbb
pop
popf
je
mov
leave
rcrb
fadds
dec
stos
sbb
push
outsb
xchg
stos
xchg
push
xchg
stos
or
cltd
pop
pop
outsl
mov
cmp
movb
mov
mov
xchg
adc
inc
adc
mov
cmpsb
push
into
imul
sbb
sbb
je
clc
push
ret
inc
clc
cmp
je
pop
or
push
icebp
mul
push
mov
push
jns
and
xchg
push
sbb
ret
inc
lea
andl
push
mov
imul
fistpll
jb
and
mov
int
roll
and
adc
clc
lret
into
popw
scas
xor
lock
ficoml
dec
arpl
dec
sbb
sub
call
add
js
and
fs
dec
jnp
ja
jns
mov
push
cltd
call
mov
jo
sbb
push
hlt
jle
dec
mov
ficomps
mov
pushf
cmpsb
mov
out
xchg
sub
and
jmp
mov
mov
mov
jle
mov
push
inc
push
rcrl
add
rcrb
push
std
sahf
enter
ficomps
xchg
mov
in
mov
idivb
push
push
addr16
push
in
adc
js
and
push
sub
fstps
push
adc
aaa
rorb
rcrb
shl
mov
push
add
movsl
gs
inc
mov
mov
pop
adc
sbb
mov
adc
gs
pop
aam
fsts
testb
push
dec
inc
popa
pop
pop
adcl
push
inc
icebp
fdivp
lods
imul
outsb
enter
sbb
stos
adc
fisubrl
xor
inc
ss
sbb
pushf
push
mov
sti
adc
imul
xor
popa
dec
enter
mov
leave
inc
js
repz
sbb
xchg
cmp
and
mov
xchg
pop
push
push
fwait
push
mov
mov
out
pop
divb
mov
xchg
cmp
pop
fcoms
sub
push
mov
scas
jb
dec
xor
adc
fs
xchg
jle
aaa
ret
pop
pop
bound
scas
je
je
and
add
mov
jnp
clc
scas
mov
dec
fisubs
ret
push
jb
stc
xor
pop
add
addr16
ss
mov
or
lahf
inc
dec
xor
into
stc
aas
movsb
fidivs
or
mov
ds
and
add
seta
jmp
mov
rcl
jno
dec
cmp
jl
fcomip
dec
add
stos
lcall
xchg
inc
jb
xchg
adc
mov
lods
ret
adc
add
xchg
sbb
imul
idivl
xchg
stos
ss
mov
fwait
xchg
jno
gs
outsb
xor
leave
push
adc
popf
add
sub
jb
pusha
xchg
inc
icebp
lea
ljmp
push
push
fwait
inc
sbb
add
mov
push
jae
sbb
mov
insb
push
lds
cld
pop
lds
push
sbb
and
adc
mov
stos
jge
xchg
mov
cwtl
je
in
xor
push
jns
rcr
dec
aas
dec
fbstp
in
and
nop
mov
xchg
sarb
scas
call
mov
mov
gs
dec
das
pop
cmp
mov
jp
fcomps
loope
fs
icebp
mov
cmp
orb
stc
or
mov
xchg
jnp
add
and
dec
xchg
imul
xor
push
lock
xchg
fisttpll
pop
push
xchg
pop
mov
or
jae
mov
cwtl
dec
mov
push
xchg
xlat
sub
or
push
sub
std
out
inc
dec
sub
sbb
sub
fsubrs
push
iret
mov
adc
or
sbb
adcl
in
push
adc
sbb
loope
shl
jp
jg
pop
in
pop
stos
xor
mov
push
jbe
mov
iret
out
leave
pop
xchg
push
mov
popa
imul
scas
inc
xchg
into
repz
lret
mov
fnstsw
pop
nop
sub
stc
fwait
sub
mov
mov
cltd
mov
movsl
sbb
stos
das
cmp
sub
add
adc
stc
jle
add
adc
test
dec
mov
cmpb
and
add
adc
rcl
idiv
dec
outsb
and
jno
stc
cli
pop
push
add
and
sub
cs
shlb
or
lret
mov
stos
outsb
imul
fs
and
out
fiadds
loope
jmp
jbe
popa
loop
dec
fldcw
xlat
dec
add
lock
mov
pop
sbb
cmp
push
or
or
push
insl
or
fldt
sti
fsub
pop
dec
xchg
push
enter
hlt
outsb
xchg
icebp
pop
out
mov
inc
jne
shlb
mov
mov
and
mov
push
pop
div
mov
movb
lea
mov
adc
cltd
sahf
jb
push
cmpsl
mov
xor
loope
ror
out
lods
jae
xchg
jbe
push
mov
sti
mov
cmp
addb
and
xor
dec
repnz
sbb
jne
cmp
test
mov
sbb
fwait
cmp
outsb
shr
dec
imulb
popf
xchg
jo
mov
sub
aas
or
lea
out
pop
cmp
out
in
gs
bound
loope
pop
bswap
and
or
mov
mov
lcall
mov
dec
imul
cmp
cmpsl
data16
push
out
in
nop
test
shlb
sti
inc
mov
xchg
or
pop
aad
xchg
sbb
lcall
repz
test
push
mov
fdivl
push
cld
dec
xor
shr
je
cmp
leave
ljmp
mov
push
lds
inc
add
xlat
pop
fiadds
mov
or
pop
icebp
pushf
repnz
shll
popf
adc
sub
jne
cmp
iret
add
lret
mov
mov
sar
xorl
sbb
mov
mov
movsl
out
and
ret
dec
std
mov
cmpsb
and
insl
jecxz
and
pop
mov
cmp
or
aas
pop
js
cmp
cli
mov
popa
test
aas
stos
xchg
mov
rcrb
inc
add
arpl
push
jnp
sub
loope
daa
sti
fadd
loop
inc
std
fisubrs
outsb
mov
mov
icebp
insb
lret
imul
adc
cmpsl
sti
mov
sub
outsb
push
fstp
jbe
or
adc
ret
test
sti
loopne
sub
movsb
inc
in
push
fnclex
push
xor
mov
push
inc
push
xor
push
pop
mov
in
insl
into
fdivs
dec
js
sub
jns
jmp
ja
pop
add
rorb
lods
imul
pusha
push
int3
dec
insb
cs
rclb
loopne
mov
les
cli
fwait
adc
mov
jo
mov
rclb
leave
and
sarb
push
pop
sti
fcmove
int
push
push
sub
repz
in
loop
or
cmc
push
pop
xor
sbb
mov
in
push
mov
jne
faddl
push
jns
fimuls
mov
sbb
int3
lahf
lret
lods
enter
leave
fbstp
in
sbb
insb
dec
and
gs
xchg
and
mov
lahf
aam
in
pop
imulb
push
arpl
ror
mov
rcrb
cwtl
sub
sbb
mov
hlt
mov
mov
pop
and
hlt
in
xchg
daa
adc
push
add
fcmovu
shrl
sbb
in
lock
adc
test
out
das
stos
iret
pop
cmp
sub
mov
pop
jp
sbb
stos
testb
push
dec
out
test
pop
clc
ss
add
jg
push
mov
add
pop
xchg
testl
mov
xchg
inc
hlt
stc
sub
mov
int3
mov
pop
pop
dec
cmc
arpl
jns
addb
mov
inc
or
ss
inc
imul
push
dec
inc
imul
cs
nop
ret
in
fsubr
imul
test
inc
sbb
cmp
lahf
sahf
cmpsb
sbb
pop
jo
and
pushf
mov
or
inc
mov
mov
arpl
cmpsb
fdivl
sub
aam
aaa
testb
sar
js
cmp
dec
outsl
push
inc
sbb
cltd
inc
inc
lods
sub
test
lcall
dec
out
pushf
xchg
xlat
cmpsl
sar
lods
jle
xchg
std
push
mov
aam
xor
sbbl
push
pop
pop
faddl
cltd
mov
into
and
pusha
icebp
insl
leave
nopl
sbb
gs
xor
push
dec
jle
mov
jle
movsl
pop
push
fwait
add
icebp
cwtl
sbbb
dec
ret
mov
scas
fs
in
inc
jo
shll
mov
xor
push
mov
cwtl
cmp
mov
xor
arpl
cwtl
jbe
mov
sbb
mov
push
and
cld
ret
fdivp
jns
mov
mov
pop
outsl
push
out
dec
dec
lods
dec
xchg
and
or
inc
into
lcall
jbe
rorb
mull
pop
mov
pusha
out
hlt
sub
test
sub
mov
jmp
sbbl
push
jns
ret
or
xor
jecxz
jecxz
mov
pop
ret
icebp
int3
cmpsl
or
xchg
sub
fadd
loopne
bound
loop
adc
movsl
pop
mov
lcall
imul
repz
popf
notl
lcall
cmp
sbb
stc
fisubrs
or
mov
push
mov
mov
add
ds
sahf
js
movsb
sub
push
imul
inc
xorb
add
xchg
cmpsb
dec
daa
cli
fldenv
sahf
mov
call
testb
cmp
push
jns
jle
cld
movsl
pop
adc
mov
data16
hlt
jmp
push
movsl
jne
push
xor
and
cs
push
sub
sbb
mov
call
dec
lds
lret
adc
mov
mov
mov
repnz
fwait
and
sarb
addb
and
pop
xchg
mov
and
jne
outsl
popa
inc
je
cld
xor
testl
pop
jbe
fs
mov
jne
incl
fdivrl
mov
xchg
push
ljmp
lret
call
mov
inc
jo,pn
mov
adc
dec
je
lret
stc
mov
push
jns
insl
and
add
pop
ret
sbb
shlb
add
mov
mov
mov
cmp
mov
dec
movsl
mov
loopne
movsl
mov
or
addr16
ret
sbb
or
inc
arpl
dec
leave
or
mov
sbbl
mov
pop
push
fsubrl
dec
leave
pop
enter
cmp
int
jle
fninit
pop
dec
outsb
jmp
or
jne
xchg
mov
dec
add
fdiv
pusha
bnd
cs
sbb
cmp
cmp
xor
pop
fldz
jge
popf
inc
cmp
outsl
jns
scas
popa
cmpsl
jge
mov
xlat
cmp
shll
scas
fwait
xchg
mov
xor
push
aas
gs
sbb
data16
test
mov
push
jo
push
int3
adc
pop
loope
push
in
xchg
jnp
outsl
and
addr16
xchg
loop
add
dec
pusha
inc
call
push
rolb
mov
sarl
hlt
enter
pop
mov
push
lds
shll
dec
lea
cmpsb
test
jg
lock
adc
mov
scas
out
mov
xchg
loopne
pop
out
and
xchg
push
pusha
cmp
jnp
iret
or
test
add
adc
mov
cmc
sub
mov
jbe
mov
shrb
mov
out
jmp
or
mov
or
xor
outsb
sbb
xchg
int3
aad
test
mov
or
lods
jp
repnz
arpl
sbb
inc
inc
xchg
push
roll
into
addr16
jmp
xor
sbb
mov
xor
mov
fwait
sbb
scas
lahf
push
pop
jg
in
xorb
sarb
jp
bound
fsqrt
sub
jmp
popf
pop
jns
cmp
subb
sbb
fistpll
int
mov
jg
push
dec
les
xor
pusha
cmp
sbb
mov
jae
movsb
pop
decl
mov
mov
imul
iret
xchg
arpl
xlat
pop
or
mov
and
cmp
and
repnz
fnstcw
arpl
xchg
iret
xor
test
pusha
out
test
mov
inc
inc
scas
inc
xchg
aad
outsb
mov
add
cld
jne
push
in
xrelease
xor
mov
data16
repnz
bound
int3
push
es
inc
jnp
shl
sbb
add
test
addr16
jl
mov
lcall
inc
dec
test
pop
cmc
jns
test
xor
in
or
aas
and
jle
cmc
int
mov
cltd
xlat
push
inc
jmp
cmp
std
push
icebp
xor
leave
or
pop
ljmp
jl
in
fldlg2
mov
ret
adc
arpl
roll
shll
shl
popf
cmc
xlat
xor
sarl
aam
into
inc
nop
mov
xchg
mov
movsb
push
scas
cs
push
iret
sub
push
and
in
pop
in
sub
negl
cmp
je
xchg
subl
movsl
pushf
or
and
xchg
inc
nop
mov
aad
mov
loope
aad
push
cmp
sub
stos
sub
or
outsb
push
mov
int
out
cltd
lret
movsb
and
sbb
out
pop
xchg
jg
push
push
mov
enter
jbe
xchg
xlat
pushf
xor
sbb
sub
pop
or
cmp
sahf
inc
adc
jg
mov
and
cmp
divl
xor
adc
in
pop
lds
cmp
cmp
inc
idivl
ja
js
dec
fucomp
cmpsb
fs
xor
mov
fwait
mov
push
xor
add
fwait
push
subl
cld
fisttpl
lcall
mov
arpl
icebp
push
loop
sahf
push
outsb
push
xor
xchg
jnp
fsts
pop
fcomps
aad
mov
sub
push
cmpsl
xchg
test
scas
push
mov
in
push
addr16
jne
push
nop
sbb
and
data16
je
test
les
in
movsb
mov
or
stos
pop
movsl
inc
loope,pn
inc
and
pushl
subl
push
int3
or
xchg
scas
sub
test
outsl
outsb
outsb
pop
repz
lcall
insl
ljmp
test
and
sarb
subb
pop
in
cli
push
xchg
int
scas
cmc
dec
outsb
or
mov
adc
fildl
cmpl
int
fbstp
adc
outsl
add
inc
push
scas
mov
in
out
scas
in
ds
xor
orl
ljmp
or
scas
inc
inc
or
sbb
xor
or
scas
xor
rclb
out
inc
sbb
dec
mov
scas
jl
lods
dec
ljmp
add
outsl
push
leave
mov
cmp
mov
stc
mov
inc
mov
bound
dec
pop
and
mov
xchg
sub
xor
sbb
mov
push
ja
imul
call
arpl
pop
repz
xchg
dec
xor
mov
jp
pop
sub
lret
xor
dec
mov
insl
test
xchg
fsubl
pop
jp
sbb
popf
xchg
pop
xorl
sbb
mov
cmp
push
xchg
cwtl
lds
in
jbe
mov
test
mov
pop
mov
add
cwtl
cmp
insb
fmuls
test
arpl
mov
inc
enter
lcall
push
jge
xchg
mov
mov
xor
js
xor
movsl
jns
das
aad
stc
pushf
stos
gs
out
xor
push
leave
dec
cmp
loope
sbb
push
add
dec
aad
outsl
outsb
lret
mov
push
loopne
or
imul
cmp
movsl
xchg
and
mov
lods
out
in
jo
dec
pushf
pop
inc
xchg
pop
jb
adc
pop
fxch
xor
stc
test
stos
inc
jo
pop
mov
les
pop
adc
dec
xor
dec
imul
inc
pop
cs
and
push
rcr
pop
adc
pushl
pop
jp
sbb
sub
mov
cmpsl
mov
add
jecxz
stc
mov
mov
sbb
mov
xor
or
nop
cmpsl
xchg
loop
cmpsb
loopne
add
dec
popf
gs
xor
shr
test
mov
enter
mov
shlb
cmpsb
xor
jg
in
rcrl
add
sub
mov
lret
popa
pop
idivb
mov
fsubr
mov
fists
xchg
jl
mov
pop
cmc
sub
mov
sub
push
int3
insb
inc
xchg
add
pushf
fsubrl
repz
pop
mov
push
fsubl
arpl
sbb
xchg
rcrl
push
dec
adc
sbbl
mov
mov
xor
mov
add
stos
jno
in
push
mov
xchg
aaa
shll
mov
inc
scas
sub
sub
pop
test
mov
push
ja
sbb
fldcw
sub
mov
ret
repnz
pop
jns
pushf
mov
mov
adc
adc
inc
mov
mov
adc
mov
int
loope
push
pop
cmp
or
and
std
stos
scas
pop
hlt
arpl
inc
shl
pop
in
loope
jge
aaa
pop
jnp
adc
out
test
adc
push
test
and
shrb
xor
ds
add
lcall
cmp
xchg
lock
out
rorl
xchg
cmp
adc
mov
mov
xor
jo
es
inc
movsbl
cltd
mov
or
jle
jo
andb
je
or
ss
pop
xchg
push
push
mov
push
dec
testl
pop
jge
adc
push
mov
sbb
mov
int
dec
insl
dec
or
lret
xor
and
dec
inc
notl
nop
popa
out
mov
mov
mov
xchg
in
xchg
add
in
dec
aad
mov
push
jbe
arpl
popa
int3
cmp
sub
cmpsb
pop
aas
inc
in
test
insl
sub
loop
mov
lds
sbb
mov
xor
jmp
pop
jecxz
jg
js
stc
ret
pop
cmpsb
xchg
push
xchg
xorb
dec
pop
movsb
dec
inc
dec
repnz
cmc
in
and
movsl
ds
popa
sub
mov
fldt
inc
cmc
or
test
mov
dec
mov
jae
jp
xor
push
rclb
pop
sbb
mov
pop
cwtl
mov
dec
in
mov
outsb
jge
sbb
jbe
or
stos
xor
test
mov
push
adc
clc
push
lods
ljmp
sbb
int
push
xchg
lret
dec
cld
push
cmpl
insl
test
popf
and
jecxz
adc
insl
xor
icebp
sbb
jmp
inc
add
arpl
fs
lock
and
jne
cmpsb
push
jo
mov
jg
pop
push
inc
add
add
imul
push
in
xchg
jns
mov
lret
add
das
sub
cli
andl
cli
imul
dec
add
cmc
jmp
lahf
pushf
cmp
cmp
add
mov
loop
sub
popf
sbb
mov
in
popa
fnsave
xor
aaa
adc
in
mov
hlt
std
ffreep
mov
dec
mov
push
adc
jl
adc
int
nop
stc
push
inc
bound
cld
scas
mov
push
inc
and
sbb
pop
into
pop
dec
xchg
jnp
loope
mov
insb
loopne
loop
pop
popf
js
dec
xchg
js
scas
or
or
pop
inc
rolb
sub
jg
cld
cmpsb
ss
icebp
dec
fidivs
sti
dec
adc
or
enter
pop
shl
jne
clc
or
rcr
fldlg2
dec
and
popa
push
stos
dec
mov
mov
clc
jne
xchg
mov
nop
dec
inc
mov
bound
inc
movsb
mov
movsb
mov
push
dec
js
cmp
mov
mov
repz
rorb
out
int3
addr16
xchg
xchg
call
cmc
mov
imull
sub
outsl
movsb
in
pop
push
xchg
push
pusha
adc
or
or
imul
sub
or
repz
lcall
add
loop
ds
es
push
lods
mov
push
xchg
jl
mull
icebp
cmp
stos
jnp
sbb
in
inc
adc
jno
xor
fstpt
fldt
fs
mov
jne
dec
push
fcoms
outsb
lret
xor
scas
lcall
push
mov
fsubl
xchg
add
ret
and
pop
pop
mov
mov
xchg
stos
pop
jns
xchg
push
dec
mov
or
adcl
jge
dec
jo
xchg
jae
jno
jmp
std
push
in
sub
gs
mov
ss
mov
mov
pop
jecxz
xor
ds
and
adcb
dec
fidivs
xchg
outsl
sub
test
jmp
call
dec
jne
das
cwtl
xchg
dec
movsl
push
mov
and
adc
les
xor
mov
stc
outsb
mov
mov
sbb
xchg
out
jmp
or
movb
add
mov
fbld
xchg
mov
cmp
mov
inc
mov
cmpsl
imul
sub
add
sbb
mov
pop
inc
xor
push
mov
adc
inc
cmc
jb
dec
lahf
jns
push
loop
dec
push
sbb
sbb
hlt
in
xchg
xchg
and
testl
cmp
add
sub
mov
mov
cmp
shlb
mov
mov
mov
or
mov
push
add
movsl
test
out
aam
push
in
jg
push
add
jmp
sbbl
or
dec
pop
xor
ret
sahf
sahf
je
incb
mov
iret
insl
hlt
xchg
int
outsl
xchg
and
sub
jmp
andb
in
pop
lock
das
addr16
push
fistl
jmp
in
sub
testl
xor
hlt
jno
and
adc
or
cmp
lds
xchg
jmp
inc
push
cmp
addr16
pop
ret
jg
jecxz
sub
fnstsw
jg
test
add
test
lcall
pop
mov
mov
mov
jge
cmp
sahf
push
int
clc
addr16
add
mov
in
dec
mov
adc
or
lcall
xchg
icebp
pop
push
mov
into
and
pop
loopne
fidivrl
sub
mov
fadds
jp
mov
aas
mov
jg
sub
xor
jl
loope
jmp
jp
das
pop
adc
sub
xchg
rorb
and
jmp
sbb
pusha
std
addl
addr16
mov
scas
dec
lods
cmpsb
pop
jmp
sub
dec
sub
cmp
xchg
xchg
js
scas
pop
dec
dec
adc
jg
cs
gs
ja
outsl
or
xchg
inc
ret
lock
int3
cmp
stos
xor
add
jmp
imul
scas
sbb
aam
add
xchg
mov
cmp
or
pop
dec
jmp
les
movsb
adc
or
jb
faddl
dec
imul
rorb
nop
or
sbbl
mov
in
lcall
fwait
ror
ficompl
mov
imul
decl
xchg
push
dec
cmp
shll
mov
fnsave
jg
ljmp
call
int
add
les
fdivrl
dec
mov
add
or
pop
push
jae
test
mov
jns
cmpsl
adcl
stos
add
sub
xchg
dec
sar
sub
sbbb
es
xchg
int
jnp
pushl
adc
mov
xlat
pushf
push
sub
xchg
mov
mov
push
and
test
cmp
push
outsl
push
test
std
movsb
into
xchg
pop
jo
sub
pop
mov
push
mov
xchg
pushf
addr16
add
push
push
jl
dec
cmpsl
subb
pop
mulb
xchg
dec
int
sub
xchg
add
pop
sahf
mov
mov
pop
pusha
xor
mov
mov
insb
addb
sbb
lret
mov
mov
xchg
aam
jecxz
dec
mov
mov
or
sbb
pop
sti
scas
bound
sbb
sbb
insb
cmp
adc
jmp
int
in
iret
loopne
scas
dec
rcll
std
iret
mov
imul
pop
sahf
shlb
xor
ret
sub
mov
in
mov
adc
mov
mov
xchg
mov
outsl
test
sub
rcll
jno
in
and
mov
adcb
mov
xor
jno
mov
adc
jno
scas
push
xor
push
pop
xlat
xchg
nop
sar
xlat
sbb
pop
inc
sahf
xorl
in
mov
mov
ds
jbe
out
mov
test
jmp
adc
roll
setno
ljmp
cmpsl
push
add
lahf
mov
test
xchg
cmc
and
ret
mov
addl
mov
lahf
inc
fidivl
mov
sbb
xchg
lret
je
and
lret
fdivs
dec
and
sub
nop
int
jecxz
cmp
inc
or
adc
xor
stc
xor
stos
clc
or
stos
es
cli
sub
lcall
cltd
fistpl
je
dec
push
sbb
adc
mov
addb
mov
mov
insl
pop
sbb
js
jae
ret
fistl
pop
cmp
jmp
xchg
xor
fcomps
out
jbe
mov
lret
mov
and
sub
enter
mov
dec
adc
mov
xchg
cmpsl
or
push
js
iret
pusha
pop
inc
repz
js
fidivrl
sbb
fimuls
pop
lea
les
push
cwtl
cmp
fdivs
xchg
mov
and
scas
xchg
dec
xchg
sub
xchg
jnp
dec
out
mov
fcomps
pop
lods
movsl
leave
push
jge
stos
test
roll
das
imul
in
mov
xor
arpl
cmp
ret
cwtl
cmp
mov
aas
js
scas
mov
jl
jne
hlt
aaa
and
sub
xor
pop
dec
repnz
or
jecxz
jnp
subb
jecxz
test
inc
jl
lret
std
inc
insl
cmp
dec
jl
fsubp
xlat
das
movsb
add
pop
fsubrs
sbb
sbb
sarl
fsubl
lock
outsl
inc
cmp
lods
movsl
fdivrl
shlb
push
aam
insl
push
mov
mov
sbb
push
scas
cmc
and
pop
pop
jecxz
mov
adc
out
dec
or
insl
lock
xchg
inc
ja
dec
sbbb
or
jno
and
mov
js
jb
lods
adc
inc
mov
pop
pushf
iret
fcoms
sbb
add
mov
xor
stos
les
pop
add
jecxz
adc
push
in
mull
frstor
test
outsl
xor
aaa
or
inc
inc
mov
lods
cmp
test
xor
stos
daa
pop
or
pop
inc
push
sahf
sarl
inc
add
loopne
xchg
ss
leave
mov
and
jmp
pop
lods
inc
out
add
or
mov
and
dec
adc
dec
ja
push
inc
push
data16
loope
xor
lock
fs
insb
ret
pop
inc
sbb
adc
push
daa
std
das
cmpsb
pop
test
fsubs
loope
jge
ffree
mov
sbb
pusha
test
and
fsubrp
je
sub
mov
mov
push
lret
addr16
nop
aam
mov
jae
jmp
adc
xchg
xor
sub
scas
or
xlat
addl
cmp
popa
cmc
adc
inc
mov
adc
inc
inc
int
mov
shll
dec
movsb
mov
xor
and
insl
push
adc
xor
pop
xchg
lods
fisttps
stos
in
mov
js
cld
mov
xor
cmp
add
xor
xchg
dec
repz
sti
in
push
cmp
in
add
xor
hlt
dec
xor
scas
jne
push
sbb
pop
ja
pop
xor
pop
push
xor
add
sub
xchg
jge
stos
push
test
mov
inc
jo
push
nop
push
fnstenv
xlat
shrb
and
xchg
or
lods
and
xor
data16
pop
and
addr16
xchg
mov
xor
std
into
stc
stc
arpl
je
mov
lret
push
add
sub
sbb
xor
push
stos
and
int3
ds
arpl
mov
mov
xor
lods
fisttps
negl
pop
pushf
mov
adcb
ret
push
mulb
pop
dec
or
adc
pusha
repnz
push
out
mov
out
imul
lahf
sarl
cmpsl
pop
mov
xor
xor
sbb
gs
xchg
dec
fimull
aas
loop
movsb
jae
mov
mov
ss
or
loopne
xchg
cmp
pop
jl
test
push
adc
in
cmpsl
insl
mov
lea
mov
aaa
iret
shlb
xor
sarb
cs
mov
xor
pop
popl
jo
push
xlat
rorb
int3
scas
test
pop
mov
or
loope
push
repnz
ret
jecxz
fsubrl
repnz
in
jae
mov
ja
jb
xor
out
je
test
and
xor
imul
out
inc
inc
xor
jbe
aad
nop
in
movsl
fsubs
pop
add
xchg
push
je
pop
push
and
inc
inc
aaa
mov
xor
jp
je
movsl
fwait
push
je
test
xchg
fistpll
pop
lahf
ficoms
sbb
popf
jno
outsb
call
outsb
adc
mov
cmp
pop
xchg
std
lret
loop
arpl
mov
in
mov
ljmp
xor
and
fimuls
int3
sbb
daa
js
xlat
lret
call
xchg
leave
clc
jb
xchg
loopne
sub
hlt
repz
stos
lahf
cld
out
ret
fidivs
js
ds
jbe
add
repz
fnstcw
test
pop
sub
add
mov
jne
lret
fsubrs
jecxz
mov
and
outsb
push
xchg
rorl
ret
push
sbb
scas
rolb
cmp
in
pop
repnz
sbb
mov
jbe
jle
insb
cs
leave
cmp
dec
sbb
xor
iret
jmp
jae
cmp
adc
jecxz
hlt
insb
xor
test
mov
sub
roll
push
xor
lea
or
xor
jge
dec
jnp
xchg
dec
inc
jp
in
jo
xchg
imul
sub
shll
cmp
das
out
rcrb
inc
push
out
les
adc
fcompl
data16
cmpsl
rdmsr
xor
xchg
sti
cmpsb
fcoms
or
xorl
mov
ljmp
dec
pop
mov
mov
or
loop
xchg
gs
xchg
lock
mov
push
nop
lcall
adc
js
lods
push
test
int3
cmpsb
inc
inc
xchg
pop
fidivl
cmp
arpl
shrl
or
mov
mov
fsubr
ljmp
mov
add
pop
mov
push
cmp
das
mov
setle
insb
push
pop
mov
test
sti
into
js
or
cmp
fidivl
test
cld
fwait
mov
outsl
mov
mov
in
sbb
addb
sbb
outsb
pop
popa
addl
ds
pushf
inc
jns
gs
ljmp
clc
test
shl
push
les
popa
xor
cs
stc
jo
out
jb
sub
lock
shl
mov
jns
push
movsb
push
lahf
pop
vpshufhw
jle
outsl
xchg
scas
out
daa
aas
out
jmp
mov
mov
mov
rol
inc
pop
and
loop
mov
in
pop
lret
adc
mov
cld
xchg
pop
xchg
stos
sub
lods
test
sub
adc
pop
ret
xchg
or
push
shlb
adc
xor
ljmp
xchg
lea
jge
sub
ds
xchg
scas
rorb
loop
push
dec
mov
jmp
sub
dec
sbb
xchg
das
cmp
push
mov
cmp
mov
loop
pusha
dec
stos
out
push
jb
adc
imul
pop
add
and
inc
jg
fisubs
stc
mov
xchg
arpl
mov
enter
enter
imul
lcall
cmpsb
repnz
pushf
lods
gs
jl
dec
jg
icebp
jg
jo
pop
rorb
mov
dec
pop
inc
sahf
xor
xchg
adc
push
notl
lock
push
repz
dec
scas
cmpb
inc
mov
nop
scas
repnz
stos
das
or
fwait
ret
pop
jmp
push
pusha
int3
cmc
mov
inc
inc
mov
and
mov
out
ss
sub
and
push
xchg
movsb
adc
ds
ja
sub
daa
inc
jae
sbb
cs
lahf
mov
and
xor
sub
push
out
mov
pop
pop
cmp
mov
lea
int3
fmull
xchg
test
js
ficomps
shll
cli
pop
jmp
xchg
adc
inc
or
sub
jmp
jnp
cmp
out
or
cltd
sub
push
movsb
mov
mov
cmp
push
out
loopne
mov
daa
jmp
mov
xchg
les
divl
pusha
adcl
add
or
mov
xor
inc
arpl
mov
out
shlb
fisttps
test
fisubs
pop
xor
movsl
les
popf
push
xchg
test
cmp
ret
inc
mov
push
fwait
mov
mov
inc
push
addw
xchg
jmp
cmp
outsl
push
lds
aaa
addr16
push
dec
cmp
enter
or
rorb
stos
cmp
iret
out
push
mov
add
ss
bndldx
and
pop
sbb
xchg
dec
movsl
add
js
pop
xchg
pop
add
pop
cmovne
repnz
add
mov
std
dec
jbe
stos
stc
dec
sbb
fisttpl
or
lret
ret
iret
push
aaa
add
ja
jl
in
inc
mov
fists
inc
rcr
pushf
inc
outsl
xor
pop
xchg
movsl
jmp
sbb
jle
xor
sar
imul
fldenv
xchg
shl
adc
in
test
test
mov
add
cmc
adc
popf
lods
push
sbb
push
push
inc
sbb
rcrl
das
xchg
test
cmp
dec
push
out
dec
dec
mov
nop
xchg
cmp
fwait
test
mov
pusha
mov
shufps
cwtl
mov
rol
adc
mov
out
ljmp
testl
loop
arpl
inc
push
scas
sub
mov
lahf
sbb
dec
mov
adcb
pop
shlb
xchg
xor
jmp
pop
sbb
xchg
jle
jecxz
or
out
mov
mov
imul
mov
filds
dec
shlb
cld
jnp
push
rclb
push
jo
pop
iret
dec
repnz
sarb
pop
imul
dec
jns
sarl
scas
stos
sbb
mov
mov
fwait
xchg
xor
or
imul
add
movsl
dec
xor
or
mov
sub
adc
outsb
aam
and
cmp
xor
push
loope
xchg
ret
stos
xchg
repz
jmp
add
xchg
adc
and
faddp
in
js
xor
hlt
jae
int3
cmp
xchg
das
mov
cmp
mov
notl
xor
cmpsb
and
sub
loope
xchg
int3
roll
add
xor
sbb
popf
xchg
std
mov
cmp
mov
cmc
fiaddl
pop
push
xchg
xor
jmp
dec
lcall
addr16
aaa
in
mov
fistpll
mov
dec
pop
or
push
daa
int
das
lods
lret
fisubl
int3
stc
test
sahf
pusha
mov
imul
aam
popa
in
loop
out
inc
cltd
inc
out
jp
aas
ret
sbbb
dec
in
lret
inc
bound
adc
push
xor
mov
mov
jb
mov
movsb
icebp
adc
daa
ss
pop
cmp
insl
shll
jmp
sub
push
jo
mov
inc
and
addl
int
pop
fs
insl
xor
adc
lods
repnz
bound
mov
out
mov
and
scas
ljmp
xchg
icebp
das
scas
lods
cld
div
outsb
rorl
mov
push
push
sub
fdivr
mov
mov
imul
cmpsl
cltd
inc
mov
mov
xor
and
mov
imul
push
pop
clc
leave
and
xor
fs
in
sub
cld
cmp
lret
dec
add
mov
dec
std
inc
test
xchg
sub
out
mov
in
push
or
stos
adc
mov
gs
sti
push
out
push
push
xchg
xchg
repnz
xor
in
ret
xor
push
jnp
sbb
push
hlt
ss
mov
dec
adc
mov
rolb
nop
pop
mov
push
xlat
insb
lods
cmp
ja
aad
test
xchg
mov
add
movsl
frstor
cltd
test
and
lret
push
aad
xor
sbb
jg
cli
sbb
mov
cmpsb
fdiv
push
std
xchg
loope
adcb
jo
mov
fisttpl
fwait
int
lods
cwtl
cmp
adc
sbb
repnz
mov
fwait
ret
or
dec
mov
dec
ds
loopne
fcomps
xchg
movsb
mov
lds
pop
and
jnp
mov
call
daa
and
lahf
scas
inc
lods
pop
jns
add
out
mov
cmpsb
mov
int3
ret
lods
cli
jmp
ljmp
bound
roll
dec
cmp
in
cmp
lret
xchg
scas
add
sub
cmp
sub
push
testl
or
cmp
jmp
mov
sub
pop
shlb
and
pop
out
sarb
shlb
out
sarl
clc
mov
mov
outsb
test
sbb
cs
push
push
mov
xor
lcall
and
ret
add
cmpsb
adc
out
aam
push
pushf
movups
dec
sbb
mov
or
and
cltd
mov
sub
add
sbb
xor
shrl
rolb
mov
dec
fsubrl
out
sbb
ss
ret
dec
add
andb
cld
test
cmp
mov
mov
fcoms
jbe
jle
xlat
lds
scas
push
rcrl
add
xchg
mov
inc
mov
mov
or
in
cwtl
scas
jo
sbb
pop
sbb
mov
jbe
or
out
push
aad
push
xor
add
xor
clc
mov
jbe
sub
psrld
mov
add
xor
int
cltd
dec
add
fnstsw
fnstenv
fdivrl
push
adc
sub
dec
popf
cmpsb
pop
stos
testl
stc
pop
jmp
out
test
call
shrl
xor
hlt
xchg
inc
jg
ja
pop
sbbl
ja
adc
jmp
icebp
call
pop
mov
mulb
rorb
sub
lods
subl
pop
push
inc
mov
push
cltd
pop
andl
pop
pop
inc
add
imul
cmp
sbb
xchg
and
push
pusha
xchg
test
icebp
dec
jo
leave
test
pop
pop
out
pushf
xchg
cltd
into
fsubl
jno
pushl
mov
fdivrp
lahf
pop
pop
or
jbe
enter
pop
or
ds
push
push
mov
repnz
adc
test
int
mov
adc
push
cmp
js
mov
xor
popf
mov
lods
int3
mov
lea
fisubrs
mov
xorl
test
add
lret
fildl
cmp
sbb
pop
gs
ret
pop
shrl
push
mov
int
cmp
and
ja
adc
repz
or
push
sub
or
cmp
or
push
imull
pop
fadd
push
mov
or
imul
mov
aas
test
pushw
cmp
popa
test
std
daa
pop
xor
adc
jecxz
mov
xchg
cmc
xchg
jg
xchg
pop
xor
mov
test
fnstcw
mov
lds
adc
xchg
jmp
fwait
gs
es
pop
push
shrb
stos
dec
push
fidivrl
sub
test
mov
shlb
pushf
loop
out
das
pop
xor
adc
mov
imul
push
mov
cmp
ljmp
mov
out
and
aas
mov
daa
pop
xor
hlt
ja
add
out
xlat
jg
mov
jg
cmp
sbb
push
inc
jae
dec
xor
cli
insb
sbb
inc
pop
shll
dec
rclb
sbb
mov
mov
cmp
xchg
dec
test
adc
lret
pop
sub
push
jl
movsl
movsb
int3
lret
bound
pop
mov
xchg
rorb
inc
aaa
daa
xchg
lds
test
add
or
or
sarb
dec
rol
push
jb
int
dec
and
jno
inc
sub
cmpsl
inc
mov
jp
scas
clc
inc
sbb
xchg
ret
je
jmp
fnstsw
call
bound
pop
xchg
jge
mov
push
les
and
ljmp
push
sbb
fcmovnbe
data16
mov
addl
jne
daa
xchg
mov
fucomip
ficomps
in
mov
nop
and
sbbb
mov
ror
inc
sarb
out
xor
add
jns
dec
fsubrs
data16
push
dec
imul
int
mov
in
pop
sbbb
jb
mov
sub
or
je
add
lea
cmp
fdivrs
faddl
sbb
cmp
mov
mov
aam
popf
push
sar
ret
cmp
add
mul
sub
loope
dec
mov
sarb
inc
and
mov
in
pop
xchg
cmc
push
aas
dec
cli
in
lock
and
jno
lods
pop
fs
aaa
xlat
call
inc
ret
mov
stc
in
mov
dec
and
mov
loope
cmpsb
enter
xor
adc
xchg
or
sbb
fsubp
push
push
std
pop
cmova
jns
dec
loope
adc
push
inc
push
ret
fisubrl
mov
push
jbe
and
inc
imul
mov
out
dec
rorl
xor
jmp
inc
adc
das
mov
adc
and
data16
mov
roll
lods
movsb
int
sbb
push
mov
insl
int
lcall
sbbl
pop
shrl
test
adcb
ret
jno
push
iret
scas
inc
in
insl
fadds
int
ds
call
leave
lock
and
out
push
sbb
xor
pop
mov
jae
mov
dec
loope
insl
mov
int3
stos
test
stos
test
adc
jb
lret
jnp
pushf
sub
sub
icebp
mov
hlt
sbb
xlat
pop
lcall
and
jno
push
fistl
pushf
pop
arpl
push
jecxz
inc
outsl
inc
cmp
sbb
cs
stos
mov
in
leave
fwait
bt
and
inc
int
mov
es
inc
jo
ljmp
test
shrl
rcrb
dec
insb
std
sub
sbbl
sahf
imul
pop
cmp
cmp
mov
mov
nop
pop
add
fsubs
mov
mov
fcomp
leave
cld
jp
adc
inc
pop
outsl
mov
mov
out
sub
mov
repz
push
adc
je
pop
mov
adc
push
dec
fnstsw
imul
mov
cmp
rclb
xchg
mov
mov
shlb
fstpt
xor
int
fnstenv
mov
out
dec
enter
rol
faddl
pop
jae
mov
pop
test
mov
jo
push
inc
push
imul
dec
push
mov
xor
sahf
cmp
fdiv
adc
movl
push
inc
ret
or
inc
jno
mov
sti
xchg
ss
fsubr
adc
cmp
mov
adcl
sub
dec
inc
mov
ljmp
outsb
pop
daa
das
mov
mov
push
aas
adc
aam
adc
lret
mov
pop
pop
fsubrp
cmpsb
pop
mov
sarb
sbb
scas
imul
das
or
ja
adc
stc
loop
scas
sti
xchg
jmp
mov
jnp
sahf
lods
pop
xchg
call
roll
ss
rcl
mov
xorl
inc
scas
sub
inc
movsl
out
mov
mov
mov
int
inc
ss
inc
add
adc
sbb
dec
push
cmp
inc
mov
movsl
push
shrb
jo
popa
in
sbb
pop
mov
mov
outsl
lods
add
out
mov
sti
adc
shll
add
dec
and
or
popa
std
mov
xchg
sub
mov
sub
adc
out
push
std
cmp
mov
lods
stc
jb
orb
fs
jb
cmpsb
jae
negb
jg
adc
icebp
lcall
sahf
fs
mov
mov
mov
push
ret
popa
fldenv
xchg
mov
add
xor
mov
sub
dec
add
jle
stc
add
xlat
jle
fldt
movsl
jne
adc
inc
jae
ds
add
inc
and
cmp
mov
into
test
adc
jle
adc
int3
adc
dec
or
adc
and
stos
adc
stos
cmpsb
mov
xor
pop
sbb
cwtl
sub
stos
jne
jp
inc
mov
fidivrl
fadd
fisttpl
stc
push
pop
rol
jno
adc
mov
sub
push
test
mov
into
sbb
lcall
or
add
into
push
mov
sbb
mov
pop
les
mov
pop
jno
stos
pusha
es
ds
add
scas
insb
lods
adc
in
adc
test
sub
stc
and
xor
or
pop
xchg
sti
pop
or
mov
ljmp
sub
dec
outsb
fmuls
outsl
jmp
ds
pop
gs
fwait
aad
inc
mov
mov
dec
push
loopne
out
out
movsl
mov
sbb
cmp
ds
cltd
add
movsb
dec
rclb
je
sub
sub
cltd
adc
xchg
dec
jp
dec
xchg
mov
mov
cwtl
cltd
jo
int
or
pop
and
mov
mov
jmp
sbb
fdivs
fcoml
cmpsl
push
xchg
inc
dec
pop
rclb
xor
add
pusha
pop
fcoms
ret
dec
inc
inc
shlb
insb
sub
addl
jnp
mov
xchg
push
pop
jbe
xchg
icebp
aas
sub
mov
push
negl
pop
loopne
cmp
rcrb
repz
dec
jnp
xchg
mov
mov
iret
mov
inc
or
xchg
adc
jmp
or
adc
cmpsl
sahf
mov
mov
rcrl
jo
cli
in
xchg
jecxz
mov
cwtl
mov
cmpsb
jbe
mov
sti
mov
dec
sbb
push
sahf
or
mov
imul
and
mov
pop
in
js
mov
stc
sbb
in
test
jmp
shll
insl
xchg
xchg
js
sti
adc
push
xchg
ljmp
or
cmp
in
fadds
adc
fwait
mov
cli
mov
mov
push
pusha
cmp
das
scas
mov
xchg
shrl
sbb
jno
jle
aad
xchg
sub
inc
sbb
jl
fs
addr16
adc
ds
and
dec
pop
inc
jns
repnz
jecxz
add
dec
xchg
enter
xchg
ljmp
addl
jns
out
add
ss
xchg
loopne
pop
xchg
cs
xchg
dec
or
xchg
jge
fwait
mov
test
push
jge
jb
and
jb
pop
dec
lds
jnp
je
incb
mov
pop
mov
popf
popa
sub
xchg
xlat
daa
imul
sahf
cmp
adc
sub
and
ret
popf
jb
setno
mov
push
ret
cli
dec
push
xchg
jecxz
xchg
movsb
repz
test
and
dec
add
jno
mov
cmp
pop
sub
testb
dec
pop
sti
jecxz
pop
pop
mov
imul
cwtl
mov
add
test
push
das
xchg
add
mov
adc
sarl
arpl
lds
or
xchg
out
dec
out
push
fwait
ljmp
or
int
sbb
push
das
jp
jo
lcall
pop
cmpsb
mov
pop
fistpl
jne
shl
and
mov
pop
cltd
cmp
ljmp
dec
aaa
std
xor
dec
adc
inc
fdivl
in
push
fbld
cmpsb
movsb
push
mov
and
sub
mov
aad
xchg
gs
push
adc
icebp
xchg
xor
mov
scas
dec
cwtl
testl
out
sbb
push
push
jno
ret
adc
js
mov
ss
dec
inc
popf
addr16
sub
fimull
out
lea
lods
out
jns
xor
xor
into
aad
mov
rcll
imul
mov
dec
pop
loopne
pop
cmp
mov
int
imul
out
pusha
loop
inc
testb
sub
sub
data16
cmpb
lea
pop
push
fs
jnp
adc
sub
dec
and
cmpsl
aam
jns
adc
push
cmp
xor
ret
bnd
lods
aaa
mov
pop
mov
sahf
or
xor
aas
je
fwait
xchg
iret
arpl
push
push
test
xor
in
sbb
fs
test
aam
xor
out
sub
mov
and
aas
mov
std
scas
push
adc
cmp
push
data16
ljmp
sbb
xor
mov
fdivrl
mov
cld
scas
or
loop
fsubrs
pushf
cld
lcall
sub
out
inc
xor
cmpsb
mov
or
push
lcall
adc
enter
sbbb
jecxz
jb
negb
scas
aaa
loope
mov
repnz
shll
pop
sub
test
mov
cs
mov
cmp
xor
or
repnz
ds
mov
sbb
cmp
add
cmp
rolb
fdivrs
bound
dec
scas
inc
mov
shrl
and
lahf
pop
int3
insl
xchg
dec
pop
push
mov
in
or
nop
hlt
fs
ja
push
push
lret
inc
int
mov
adc
test
daa
icebp
xchg
and
out
and
lret
xchg
in
lret
loop
push
shll
xlat
aam
push
mov
fsubrs
inc
xchg
into
xchg
sub
test
add
sub
stc
aad
jo
xchg
neg
cmp
sarb
and
test
add
nop
xchg
loopne
or
in
das
add
insb
add
roll
roll
shlb
jg
ficoml
sub
cs
enter
icebp
cmpsl
in
pop
fldcw
xchg
data16
test
jno
aas
testl
pop
nop
mov
lahf
nop
dec
shlb
push
inc
outsl
mov
fdivs
inc
jl
cmp
dec
push
sbb
or
daa
cli
mov
sub
cld
and
mov
mov
popf
push
rcrb
pop
adc
ror
popa
mov
rorl
mov
or
mov
inc
mov
mov
inc
ljmp
push
sub
jno
jg
ja
cmovno
pop
push
mov
packuswb
jl
sub
inc
or
cmc
lret
push
mov
aad
pop
iret
cld
daa
insl
inc
mov
out
cwtl
pop
mov
std
lahf
jge
fsubrp
or
out
dec
sbb
add
insb
lds
ss
cmp
jno
jecxz
mov
es
xchg
clc
in
lret
sub
push
sbb
add
cltd
pop
filds
mov
pop
fstp
sysexit
add
out
das
mov
jmp
mov
pop
jns
xchg
inc
xor
int3
movsl
repz
jge
jbe
mov
xchg
jg
and
hlt
push
adc
push
jp
popf
arpl
mov
xor
bound
xor
loop
cmpsb
daa
xlat
arpl
mov
loope
add
push
ljmp
push
das
je
hlt
test
jp
dec
data16
shll
add
imul
cld
pop
divb
movsl
mov
pop
fnstenv
scas
sbb
aam
gs
repnz
out
cltd
notl
rcrl
pause
fdivp
cmpsl
mov
or
icebp
outsl
loope
adc
fdivrs
and
xlat
jg
cld
jb,pt
lret
xor
outsl
and
ret
jle
sahf
dec
and
xchg
out
jae
test
arpl
test
dec
ud1
ret
mov
fs
mov
daa
jp
rolb
rcll
and
and
int3
cwtl
xlat
in
add
out
xor
dec
std
jb
fisubrs
repnz
cwtl
dec
inc
adc
mov
push
clc
clc
jmp
push
push
mov
in
mov
mov
out
fdivrl
out
pop
inc
arpl
pop
insb
pop
iret
outsl
lret
push
fs
rolb
mov
cld
inc
sbb
inc
aad
lahf
stos
jg
mov
adcb
mov
jnp
cmp
test
sub
xchg
enter
mov
das
xor
and
push
pop
or
sbb
and
inc
adc
nop
ficoml
in
push
push
loope
lods
sarb
dec
ja
pop
call
cmp
int3
lds
xor
xor
fs
or
mov
imul
or
jbe
lea
xchg
xor
push
call
mov
xchg
xchg
popf
test
mov
out
add
scas
adc
std
inc
insl
mov
popf
outsb
fs
push
and
mov
pop
rclb
and
dec
lcall
inc
bound
in
and
adc
rorb
jae
cs
pop
jp
xor
insb
cmp
xor
repnz
sbb
rcrb
add
int3
jae
mov
fisttpll
les
aaa
outsl
jge
arpl
popl
inc
loop
loop
pop
mov
aad
fidivs
lcall
orl
insl
cli
cwtl
mov
insl
push
add
push
mov
mov
into
xchg
in
sub
pop
rorl
xchg
addl
adc
mov
decb
and
pusha
push
jl
mov
sti
cs
ss
cs
rorb
sbb
cmp
lcall
imul
in
and
or
dec
push
cmc
or
add
and
add
dec
sbb
fisttpll
cltd
outsl
out
mov
jecxz
and
enter
nop
jns
pop
cmp
out
add
inc
pushf
mov
cmp
cmpb
cmp
jecxz
mov
jle
sbb
mov
pop
iret
pop
lods
jge
mov
dec
in
or
lret
es
cmpl
lds
pusha
fstpt
jg
stc
or
push
test
mov
ret
fstpt
mov
fidivrs
mov
cmp
sub
popa
or
pop
ret
scas
out
cwtl
testl
push
mov
jecxz
popf
mov
dec
stos
xchg
fadds
mov
mov
and
mov
mov
loopne
and
xor
pop
test
push
mov
callw
movsl
lds
out
xor
nop
out
dec
fst
addr16
inc
xchg
movsb
adc
xorl
insb
rol
cmpsl
movsb
pop
dec
cli
shrb
cmp
jl
repnz
xchg
xor
mov
mov
xchg
push
inc
lret
mov
cmp
aaa
push
push
cwtl
adc
ror
add
ljmp
lods
adc
lret
jbe
or
mov
js
inc
aas
test
mov
mov
xchg
ds
dec
xor
pop
fisubl
sub
lock
out
lcall
jge
fcmovne
mov
cltd
rcll
cwtl
pop
push
add
rcrb
fmull
inc
aas
mov
sub
gs
jecxz
in
mov
and
push
pop
cli
push
sarl
xchg
test
sbb
jecxz
cs
popf
cmp
test
push
cmp
lret
xor
add
push
add
mov
iret
sarl
adc
xchg
inc
cmpsl
mov
std
bound
cmp
add
insl
cmp
lretw
cmp
xorl
data16
test
mov
pop
xlat
add
and
in
mov
lods
dec
neg
ds
mov
pop
fucomp
mov
shll
lods
add
xchg
movsl
sbb
xchg
fs
scas
mov
loopne
orl
jo
cwtl
popa
adc
mov
fcos
aas
shll
and
loop
lock
cmp
add
imul
cmp
gs
sbb
movsb
ret
lret
jle
add
adc
jb
clc
inc
pop
pop
push
xor
dec
push
shlb
jne
cmpsl
adc
bound
mov
xcrypt-cfb
cmpsl
in
xchg
add
iret
mov
sahf
adc
pop
and
dec
xchg
int
xchg
xor
dec
mov
mov
mov
jno
sbb
jb
daa
push
popf
cmpsl
push
xchg
je
inc
and
pop
jmp
lret
and
fisttps
std
dec
jge
or
andl
sbb
cld
lret
xchg
scas
push
push
fcomps
xchg
xor
pop
jbe
fs
into
sub
add
pop
out
sub
jbe
push
push
cmp
adc
and
mov
clc
add
or
mov
dec
pop
pop
out
adc
cli
xor
insb
xor
push
fwait
aam
iret
hlt
mov
cli
fldl
jns
mov
jb
mov
or
mov
nop
adc
test
push
inc
call
mov
mov
mov
push
test
insb
xchg
in
gs
pushf
sbb
pop
pusha
popf
inc
mov
xchg
popa
push
fdivrl
mov
mov
clc
insb
or
shll
push
dec
int
dec
outsb
cmp
dec
sbb
dec
fisttpll
insb
mov
add
js
jb
xor
jno
pop
pop
and
scas
scas
popf
pop
psubusw
repnz
fmull
cwtl
jns
cwtl
fisubrs
out
call
adc
repnz
sub
mov
ja
test
das
test
fiaddl
sbb
scas
popa
mov
into
data16
scas
sarb
mov
push
andl
loopne
push
fs
fcomps
ja
jo
test
fsubrl
cmp
jge
pop
popa
mov
test
insb
sub
xchg
test
test
lcall
jp
adc
pop
jns
xchg
pop
push
aad
mov
test
jno
lahf
sbb
les
inc
xchg
push
mov
cmp
gs
jmp
enter
mov
jp
push
fdivrp
mov
movsb
insl
cli
push
negb
sub
cmpsb
into
dec
jns
movsl
in
xor
mov
cmpsl
ljmp
shll
cli
aaa
fidivrl
or
dec
xchg
out
mov
add
lds
shl
mov
clc
dec
xchg
xorb
dec
dec
nop
or
push
ljmp
repz
popa
movl
popa
pop
test
sub
pusha
push
divb
inc
cmp
pushf
cld
lds
adc
jge
push
mov
and
fnstcw
jno
pop
je
jge
insb
cmp
mov
mov
push
fs
adc
sahf
ljmp
add
xchg
mov
dec
push
int
sbb
jecxz
les
sbb
test
out
sti
adc
and
mov
and
rcll
repnz
add
push
sbb
pop
out
xchg
cld
jge
ds
jns
out
cmp
xchg
pop
adc
aas
aam
je
aaa
xlat
mov
adc
sbb
push
fptan
push
popf
addr16
push
pop
call
bound
in
test
push
jl
mov
cmova
mov
lods
imul
inc
popf
push
dec
pop
sub
pop
cmc
idivl
sbb
xor
adc
ret
or
arpl
pop
popf
adc
jp
jle
je
cmc
xor
sbb
aad
shl
and
xchg
mov
sar
jo
outsb
pusha
inc
mov
bound
inc
and
push
or
cmp
dec
jecxz
sahf
mov
push
divl
adc
out
arpl
loopne
push
shlb
pop
pop
movsl
adc
and
pop
daa
pop
test
inc
mov
sbbb
push
adc
fcmovnb
xchg
add
cmpsb
sub
stos
sub
daa
idivb
test
sbb
jb
push
mov
daa
or
mov
adc
ror
pop
mov
push
pop
xor
hlt
jecxz
loopne
sbb
bound
addr16
andb
push
cld
sarb
push
and
scas
sub
loop
fbstp
ds
dec
in
or
mov
sub
mov
cmp
lods
sbb
and
neg
pop
push
mov
add
adc
adc
jecxz
xchg
dec
scas
push
push
loope
xor
and
jp
jo
insb
sub
shr
mov
daa
pushf
lahf
out
xor
cmp
cltd
dec
adc
dec
je
xor
push
popa
inc
je
inc
jp
push
scas
pop
lret
loop
lahf
xchg
dec
in
jbe
sbb
loop
leave
push
rcrb
mov
sub
mov
frstor
push
fistl
jbe
imul
xor
jns
dec
xchg
mov
push
dec
mov
adc
shll
insl
aas
mov
push
xor
and
mov
scas
or
sub
fwait
stos
into
cmp
xchg
pop
dec
mov
xlat
jle
sbb
iret
daa
jmp
scas
fisubrl
leave
xchg
stc
lret
fstpt
ljmp
cmp
in
loopne
xchg
xlat
out
icebp
out
xor
and
or
lcall
mov
jg
jne
xchg
cmpl
mov
daa
movsl
mov
jmp
scas
inc
mov
lret
ja
adc
test
pop
outsb
dec
frstor
and
pop
rcrl
stc
push
lods
inc
push
test
jo
mov
stc
call
and
mov
loope
add
cmc
xchg
call
and
add
sbb
std
cmp
loop
dec
xchg
test
loopne
pusha
popf
pop
aad
mov
shrl
adc
push
push
and
orl
mov
cmp
mov
sub
jbe
xlat
cmp
xor
aas
lds
and
lods
xchg
cmpsb
sarb
cmp
fdivp
jnp
gs
push
mulb
in
jb
mov
scas
ds
lods
je
stos
adc
iret
ret
stos
stc
pop
push
xchg
insb
sub
cmpsb
sbb
andb
mov
rolb
test
scas
pop
insl
sub
and
inc
js
jbe
imul
das
add
movb
addl
dec
sahf
loopne
jno
push
jp
xchg
cmc
inc
addr16
hlt
mov
ds
push
jmp
sbb
in
dec
popf
iret
loop
adcl
leave
jmp
jmp
movsb
xchg
jb
subl
lea
sbb
adc
aam
cmpsl
inc
cmpsl
repz
cmp
std
aas
push
inc
idivb
push
bnd
lret
mov
jg
ja
jge
data16
push
xor
popa
add
and
xchg
cmp
sbb
aad
xlat
cmp
sarb
in
sbb
cmc
fwait
lds
mov
cmp
push
in
pop
pusha
xchg
xchg
test
dec
mov
sbb
inc
inc
jecxz
cmp
je
xchg
mov
inc
cmpsb
and
push
mov
mov
loope
cwtl
mov
test
cmc
fidivs
mov
scas
add
out
out
or
jge
inc
loop
sub
imul
mov
and
dec
mov
push
or
push
jp
xchg
pop
mov
adc
dec
or
ja
in
add
ja
cld
cmp
and
push
sbb
or
fwait
insl
sub
clc
mov
mov
mov
jg
mov
adc
cli
stc
xor
in
sbb
mov
frstor
or
mov
loop
insl
xor
sub
in
repnz
jbe
insb
cmc
fsubrl
movsl
scas
pushf
push
push
dec
mov
pop
xlat
shrb
lret
shll
pop
es
cwtl
inc
sbb
out
testb
imul
sti
sbb
lret
popa
dec
lcall
inc
cmp
hlt
sub
push
mov
mov
pop
data16
sbb
jmp
das
push
jno
jnp
rcl
shl
popa
mov
push
mov
inc
mov
inc
stc
xorb
sti
leave
rolb
pop
adc
cmpsb
js
inc
push
outsb
mov
in
repz
fs
adc
sbb
movsl
arpl
es
add
add
mov
jnp
xchg
ss
jecxz
xchg
leave
shll
inc
fldl2t
into
and
jnp
insl
adc
mov
lods
mov
je
sahf
sub
orl
xchg
dec
adc
out
rdpmc
sbb
jnp
aaa
cltd
in
scas
push
movsb
aad
lds
rolb
popf
mov
and
push
dec
inc
ljmp
pop
lret
pushf
pusha
loope
fistpl
xchg
call
jp
mov
fstpl
call
aad
lods
das
mov
js
enter
xor
gs
mov
sti
sub
stos
adc
xchg
xor
pop
roll
dec
dec
mov
pop
mov
repz
add
push
in
and
cmpsb
cmp
jl
addr16
dec
and
or
imul
add
mov
jno
ds
xchg
xlat
adc
pop
jne
ds
std
mov
in
jmp
notl
pop
roll
or
jns
test
lret
js
mov
lds
test
sub
push
fld
pop
les
dec
xor
mov
test
add
add
into
stc
add
loope
lods
scas
fiaddl
xor
mov
lock
stc
xlat
scas
int
mov
icebp
or
jne
lock
repnz
dec
or
or
pusha
xor
push
lods
stos
adc
add
adc
rcrl
imul
das
jne
mov
xchg
push
mov
cmp
xor
push
popa
outsl
in
inc
test
int3
adc
xor
imul
fbld
ljmp
dec
test
sub
jbe
push
inc
push
daa
loop
push
pop
test
lret
sub
push
cmpsb
mov
shll
inc
inc
es
imul
daa
scas
or
push
or
mov
arpl
sub
cli
and
adc
iret
jb
scas
shlb
mov
into
mov
das
ljmp
lods
repnz
les
xchg
mov
cmc
jo
add
xor
mov
insl
fnstcw
mov
lea
push
icebp
ljmp
push
sbb
out
pop
mov
jmp
and
shrb
mov
in
aas
xchg
outsb
cld
in
mov
cmp
or
xchg
dec
dec
dec
in
add
movsl
dec
fwait
jge
cmp
xor
mov
lods
out
mov
jp
je
ds
or
aas
scas
aas
jne
daa
insb
movsb
leave
repnz
push
cmp
fdivrl
add
sarb
mov
daa
cmp
xchg
or
std
mov
test
icebp
lret
xchg
xlat
ret
insl
bound
xchg
pop
push
popa
gs
pop
jl
jae
adc
stos
cmpsb
inc
lods
push
test
mov
inc
inc
divb
xchg
jae
ds
cmp
cmp
and
rorb
adc
cmp
ds
rcll
arpl
ret
fwait
push
adc
nop
out
xchg
ret
add
pop
jno
adc
out
inc
jle
cwtl
in
jle
or
push
out
fisubl
mov
pop
xchg
outsb
lds
fsts
ljmp
inc
fmuls
hlt
xchg
andl
lods
add
popf
mov
pop
mov
test
popf
in
fisubl
jl
mov
icebp
dec
ret
xor
adc
lret
dec
xchg
aam
mov
fs
dec
pusha
lret
js
cmp
push
add
test
fstp
mov
jp
clc
ja
sub
add
cli
push
insb
jg
cmpsb
lcall
popa
iret
or
cli
pop
in
sub
pusha
sub
cmpsl
pop
xchg
andl
mov
test
ror
xor
cmp
mov
stos
imul
xchg
popa
scas
ja
add
mov
in
mov
sar
or
pop
xchg
mov
insl
addr16
aaa
cmpsl
sbb
stos
imul
es
sbb
mov
mull
out
jl
enter
movsb
ljmp
mov
fwait
push
sub
shll
iret
stos
inc
cmc
cmp
fildll
jmp
lea
xchg
adc
shlb
pop
nop/reserved
mov
inc
sub
fsubrp
mov
push
int
clc
pop
jb
mov
inc
js
pop
xor
bnd
add
jl
rorl
mov
in
lahf
test
mov
rcrl
jb
push
fdivp
mov
mov
movsl
and
jmp
or
mov
xor
mov
cmp
dec
ljmp
pop
inc
mov
and
loope
and
rcr
popa
rolb
je
push
aam
jmp
fists
mov
mov
movsb
mov
xchg
xor
stos
cmp
aaa
push
enter
inc
in
dec
dec
hlt
leave
or
dec
xlat
subb
fcmovu
cli
inc
xor
lea
test
aad
sahf
shll
cmp
hlt
ret
mov
in
adc
push
and
mov
test
or
inc
dec
dec
push
xor
jmp
sub
inc
cld
pop
or
sub
rcrl
ds
in
add
fcompl
test
mov
lret
das
pop
and
xor
sub
aaa
aas
cli
popf
sub
pop
mov
call
mov
and
sub
xchg
loop
push
or
xchg
in
test
cld
mov
incl
jmp
dec
popf
enter
pop
out
in
push
sbb
loope
adc
jns
xor
push
mov
dec
xor
inc
and
mov
mov
dec
rcll
loope
je
fimuls
sub
lret
or
sti
jne
push
mov
pop
lods
loop
mov
test
jle
test
in
dec
mov
fisubrs
mov
hlt
aam
or
inc
test
mov
lock
test
xchg
leave
jns
hlt
mov
mov
bound
and
sbb
in
push
mov
loopne
imul
push
shrl
sti
out
jb
in
xlat
repz
xor
das
mov
andl
mov
push
cmpsb
mov
movsb
pop
or
andb
pop
mov
adc
iret
jl
jo
lcall
xchg
inc
xor
stc
in
mov
jmp
out
adc
xor
insb
sbb
pushf
lock
push
repz
mov
sahf
jg
mov
das
pop
xlat
std
stc
outsb
mov
mov
test
scas
aas
mov
daa
cwtl
add
and
stos
inc
ss
loopne
insl
jae
and
push
mov
fildl
sbb
sub
jns
jl
or
adc
or
add
dec
cmc
push
repnz
mov
ds
insl
imul
jae
add
jg
fisttps
lods
in
jl
mov
xchg
test
test
fwait
enter
lret
dec
out
adc
scas
cmp
pop
shr
sysret
jmp
out
push
in
lock
mov
inc
loop
jno
and
test
shr
ljmp
ret
mov
mov
dec
imul
dec
lods
jbe
bound
pop
xor
pop
insb
and
pushf
popa
push
andl
mov
or
mov
mov
je
es
jne
jb
std
or
jmp
nop
dec
xor
frstor
mov
scas
lods
test
push
sub
pusha
in
daa
sbb
sbb
mov
es
jo
push
cmc
dec
jno
dec
adc
add
rclb
push
cmp
fcomp
xlat
test
in
scas
and
jne
icebp
or
and
pop
adc
jo
in
adc
or
jnp
out
adc
lock
sahf
pop
sahf
int3
xor
push
das
cmpsb
in
or
ret
mov
rcl
sub
fbld
ret
dec
cmp
outsl
and
xchg
aas
test
icebp
push
xor
sti
push
jl
push
stos
cltd
subb
idivl
shll
cmc
ss
xchg
xchg
ja
push
in
pusha
mov
xchg
dec
dec
xlat
mov
pop
dec
dec
mov
dec
sbb
pop
cmc
jmp
fs
lds
aas
sbb
xor
add
mov
repz
or
lret
cmp
mov
inc
shr
jae
cltd
lock
and
shl
jecxz
mov
cmp
fcomps
adc
stos
ror
jp
out
jno
cmpl
pop
out
outsb
scas
xchg
rcl
xlat
fbstp
jecxz
popa
pop
outsl
test
xchg
sub
xor
les
out
out
adc
js
test
bound
adc
and
mov
cmpsl
ds
cltd
push
adc
dec
cltd
outsb
movsb
scas
jne
xchg
test
inc
sub
bound
dec
and
mov
hlt
in
jo
jno
push
andb
fs
fstl
int3
call
lret
mov
insl
fiadds
push
loope
push
stc
or
mov
in
cmpsl
pop
add
xlat
sub
xlat
repz
enter
pop
sbb
mov
mov
movsl
jno
pop
hlt
or
cmp
lea
inc
cltd
cmp
lahf
imul
aad
das
neg
push
pop
xchg
jno
cmp
mov
xor
popa
dec
jae
pop
jo
mov
add
mov
inc
jle
pop
adc
inc
add
push
aas
push
xlat
loopne
push
pushf
decl
addl
in
int
insb
stc
jae
jp
adc
jge
mov
out
nop
in
mov
enter
test
mov
cs
test
cmp
loope
mov
andl
stos
jbe
sbb
shll
repnz
or
and
stos
mov
ljmp
es
mull
mov
fdivrp
iret
fwait
or
add
jp
cmp
aad
xor
xor
jbe
int
xorl
jecxz
and
jmp
addr16
shrb
cmp
inc
mov
into
mov
shrb
dec
jae
pop
or
movsl
push
insl
js
add
push
lods
sbb
xor
jb
iret
pop
mov
in
ja
jbe
push
int
iret
xor
adc
push
pop
xor
push
jl
loope
and
stos
pop
dec
loop
clc
lds
das
mov
add
iret
stos
int
cmpsl
dec
adc
outsl
lcall
pop
movsl
mov
push
mov
sahf
filds
jecxz
push
cmp
jmp
orb
in
lods
jl
cli
arpl
mov
sahf
jg
inc
sub
lods
jmp
pop
sbb
xor
adc
mov
sar
push
scas
cmpsb
rorl
insl
mov
cmp
dec
adc
in
cli
add
mov
jl
sbb
add
clc
dec
push
push
loopne
ret
mov
test
cmpsb
jge
insb
pslld
sbb
inc
mov
inc
jg
lock
in
xor
dec
push
cmp
nop
push
sub
testb
js
int
outsl
mov
push
push
setge
stos
jb
jge
leave
les
cmp
jb
mov
fldt
sbb
xor
xchg
or
sub
icebp
ficompl
dec
ljmp
repz
sbbl
stos
stos
mov
mov
pushf
mov
jge
out
sbb
fsubs
xor
dec
mov
mov
fstp
xchg
aas
sbb
je
mov
jmp
jbe
repz
lock
or
push
test
ja
pushf
xchg
arpl
pusha
sti
mov
jbe
cmpsb
adc
imul
clc
and
popf
jb
loop
push
mov
scas
outsl
out
iret
add
dec
pop
sub
loop
mov
fadds
sub
add
cltd
adc
out
call
mov
mov
enter
stc
add
and
adc
xor
andb
pushf
sarb
xchg
pop
sub
adc
xor
mov
cltd
shll
push
leave
sub
call
sarl
push
mov
cmp
cmp
sub
xchg
fnstcw
mov
cld
aas
ret
mov
stos
inc
xchg
xor
xor
sbb
mov
insb
jl
mov
add
mov
scas
sub
dec
andb
or
clc
ja
test
repnz
xor
int3
cld
stos
scas
sahf
xlat
int3
loop
inc
cmp
mov
dec
mov
mov
ret
sbb
in
mov
rclb
push
sub
leave
push
les
rorb
cmpsb
hlt
and
cmp
cs
mov
imul
aaa
fdivrs
mov
and
add
fnsave
iret
push
bound
xchg
jnp
gs
out
leave
sbb
mov
pop
xor
lods
int
divb
and
mov
inc
cmp
cmc
jmp
repz
xchg
jno
and
fnstsw
xor
movsb
inc
mov
jne
ret
in
aam
add
call
jae
mov
lret
add
dec
insb
std
pop
dec
call
mov
imulb
xchg
add
mov
iret
hlt
and
out
shll
adc
push
xchg
sbb
in
sahf
pop
xchg
and
jge
and
lods
rcll
mov
cwtl
or
push
scas
mov
jmp
jp
or
insl
hlt
jnp
ljmp
jecxz
out
pop
cs
stos
and
sub
inc
mov
hlt
or
negb
xlat
loope
sub
int3
lods
lcall
sbbl
test
sbb
data16
mov
push
sahf
xchg
jo
pop
mov
mov
sbbb
stos
pop
xor
inc
test
addb
stos
dec
mov
imul
xchg
mov
mov
inc
xor
mov
jb
or
bound
mov
and
or
fisttps
popa
int3
ja
adc
push
pop
sub
push
mov
sub
cmp
movsb
int
pop
out
ljmp
or
scas
cli
mov
cmp
pop
test
jg
jle
cli
pop
out
aam
pop
into
or
mov
lods
lock
xorb
or
mov
pop
in
adc
pop
cmp
out
outsb
pusha
push
sahf
std
enter
in
sub
sub
cmp
cmp
xchg
int
or
jmp
xchg
faddp
push
mov
adc
push
sub
je
sbb
shlb
inc
sbb
movsl
roll
pop
push
or
sub
sub
stc
leave
fnsave
or
scas
fwait
jmp
dec
adcb
imul
and
push
loopne
push
cmpsb
mov
lods
repz
dec
sbb
testb
imul
testl
jecxz
popa
jae
xor
aaa
into
cmpsl
adc
add
cmpsb
into
rolb
shl
stos
inc
icebp
mov
pushf
mov
inc
pop
cmc
xchg
ficoms
add
mov
pop
orb
in
ret
pop
int3
fiaddl
cmp
test
into
adcl
loope
sbb
jb
add
xor
outsl
pop
gs
pop
mov
cmp
fs
repnz
push
or
mov
push
jp
pop
jbe
or
pop
push
adc
std
push
cmp
hlt
push
adc
pop
add
xchg
sbb
sbb
pop
dec
mov
mov
push
flds
ret
int
add
add
fwait
or
fstpt
aaa
rcll
jl
in
loope
or
xlat
mov
mov
roll
test
xchg
lods
and
movsb
ljmp
xor
das
and
mov
dec
jp
outsb
iret
adc
enter
fs
sbb
sbb
inc
scas
mov
inc
adc
mov
inc
and
dec
xor
or
xor
mov
movsl
adc
imul
andb
adc
sub
fstpt
mov
stos
clc
fdiv
lcall
std
sbb
imul
mov
jecxz
out
mov
pop
std
xchg
dec
ss
fildll
mov
mov
xchg
pop
xchg
xor
lret
pop
std
xchg
pop
xchg
lcall
dec
cli
loope
mov
cmp
jmp
fsubrl
aam
and
or
push
mov
or
call
cs
lock
in
and
and
push
pop
lret
jg
shr
or
sub
pushf
pmuludq
jae
das
je
stos
or
jae
divb
inc
mov
dec
dec
mov
mov
sti
insb
pop
nop
xor
push
lock
jle
ljmp
xor
aad
out
sub
aam
cmp
sub
push
test
leave
xor
add
sub
stos
ja
aam
lock
mov
ficompl
sub
sbb
dec
adc
in
jecxz
addr16
pop
add
push
pop
sahf
imull
pop
push
xor
push
movsb
jl
test
pop
adc
out
inc
into
data16
or
scas
or
rorb
insb
cltd
inc
push
xchg
dec
dec
test
xor
aaa
loopne
xchg
jecxz
xor
subb
sub
inc
inc
mov
jb
icebp
and
mov
xorb
sub
jmp
xor
push
test
std
inc
arpl
rclb
idivl
inc
test
nop
outsl
lods
cmp
lds
popa
adc
push
in
add
pop
cmp
int
mov
dec
and
sbb
mov
js
sub
call
aaa
and
jnp
and
jg
jbe
adc
pop
dec
addr16
xchg
aam
repz
cltd
cwtl
xor
adc
dec
sbb
loope
inc
movsl
es
stos
pop
out
mov
gs
push
pop
mov
add
and
sub
xchg
pop
shrb
add
arpl
test
aad
daa
hlt
adc
jge
sbb
scas
mov
dec
rcrb
mov
pop
sub
xchg
imul
mov
push
insb
aaa
and
pop
out
or
and
ljmp
and
nop
mov
pop
iret
movsb
dec
test
push
xchg
and
dec
lret
nop
or
hlt
pop
rorl
fiaddl
mov
adc
fbstp
push
sahf
aad
inc
push
sub
push
rcl
nop
dec
xchg
xchg
pop
ds
jae
mov
popa
cmp
jp
add
xor
cld
stc
add
mov
inc
scas
dec
scas
xchg
sti
and
or
fcom
mov
jmp
sbb
pop
sbb
es
sbb
mov
pop
dec
rcpps
pop
lret
jge
push
aad
shlb
dec
loope
out
lods
push
hlt
jne
sbb
mov
mov
adc
sahf
mov
pop
jb
stos
insl
nop
pop
scas
fldcw
fisubrl
xchg
add
push
jbe
push
mov
add
cmp
fadd
xor
pop
imul
in
sbb
cltd
ja
jg
cs
stc
pop
out
pop
sbb
sub
fnstenv
cld
shrb
ret
xchg
mov
lods
mov
mov
mov
fildl
jbe
int3
add
cltd
cwtl
mov
out
push
pushf
adc
add
iret
mov
sub
call
xchg
scas
andl
mov
mov
xor
mov
orl
mov
aas
fwait
test
cmp
xchg
lods
mov
dec
cmc
mov
shl
out
mov
inc
fs
lret
push
sub
fs
mov
mov
scas
ss
or
aad
nop
cmp
and
cs
imul
insb
ret
enter
mov
push
mov
adc
xchg
mov
mov
inc
insl
mov
pop
lret
mov
adc
push
addr16
inc
popa
pop
pop
out
push
sub
popa
stos
bound
lcall
mov
std
cmpsb
gs
mov
out
xchg
add
add
int3
movsb
and
jle
in
dec
jae
sub
je
cs
xlat
mov
pop
loop
jno
inc
stos
je
cmp
inc
adc
call
out
push
add
shll
pop
xchg
in
lods
xchg
fsts
ljmp
mov
cmp
mov
mov
rcr
pop
dec
pop
inc
pop
or
std
xchg
sbb
lds
push
jle
lock
xchg
inc
push
test
arpl
fs
or
ja
xchg
sar
addb
andb
out
cmc
xor
and
std
divw
jp
ds
or
scas
leave
adc
ret
xor
sti
or
mov
dec
imul
fsubrs
mov
fucom
das
into
push
call
push
push
xchg
movsb
arpl
jecxz
inc
mov
subb
or
dec
or
mov
push
ja
and
pop
clc
inc
jecxz
std
sbb
rcll
jae
jno
mov
imul
jecxz
mov
clc
sbb
sub
dec
add
inc
sbb
and
jp
shrl
push
in
push
inc
mov
xlat
sbb
iret
repz
sti
fwait
pop
xor
mov
mov
pop
test
int3
fmulp
xchg
cmp
mov
addr16
rclb
aam
out
dec
dec
or
or
jnp
push
bnd
adc
or
iret
mov
pop
adc
je
pop
or
mov
push
sub
mov
mov
or
mov
leave
adc
mov
xchg
rclb
sahf
jge
aas
sbb
addr16
inc
testl
pop
js
pusha
inc
cmp
xchg
mov
xor
into
popa
or
sbb
xchg
push
jecxz
scas
ljmp
icebp
ret
jg
lahf
rorb
divl
sub
push
orl
or
add
inc
or
ret
aas
jg
ljmp
and
pop
fisttps
adc
add
and
pop
cs
sub
imul
push
adc
jnp
fsubrl
xor
nop
aam
pop
inc
je
xchg
and
gs
pusha
add
mov
pop
push
rcll
movsl
pop
jnp
cld
mov
int3
xchg
xchg
adc
out
jle
and
lret
clc
mov
addl
cmp
xor
pop
bound
shll
mov
mov
rcr
push
xchg
cmp
out
rclb
pusha
jne
lahf
pop
and
subb
dec
les
rorb
cltd
inc
mov
lock
lret
js
test
jb
outsl
and
adc
jge
xchg
shll
pusha
jecxz
ljmp
and
mov
pop
lock
or
xor
push
mov
mov
mov
xor
insl
jmp
and
cltd
xchg
push
mov
pop
jno
jbe
sub
dec
stos
xchg
adcl
xchg
mov
pop
scas
jg
cmp
adc
aaa
inc
mov
ret
lds
sub
outsl
push
add
jbe
add
jae
mov
push
mov
loop
jmp
dec
sub
mov
jb
dec
dec
mov
lods
test
inc
mov
lds
inc
aas
cltd
jns
ret
loopne
shlb
and
lods
xlat
jl
fabs
sbb
pop
mov
xchg
imul
addr16
adc
fistl
sahf
push
cltd
sub
pop
into
lret
xor
or
scas
or
out
sub
je
iret
sub
and
sti
inc
jb
xor
xchg
stos
jnp
out
fcmovbe
in
stos
xchg
orl
orb
cs
mov
cs
dec
cmpb
sub
mov
in
and
xchg
in
movsb
adc
mov
lcall
scas
fwait
xchg
cmpb
and
out
in
add
sbb
in
xchg
daa
ss
ds
loop
nop
repnz
pop
std
or
xor
dec
jno
mov
or
mov
mov
inc
or
test
adc
xchg
int3
push
je
dec
xchg
jmp
sbb
pop
jge
xor
arpl
mov
arpl
pop
mov
mov
pushf
inc
jbe,pn
jg
mov
out
icebp
xor
fisubs
ret
mov
mov
xchg
fsubrl
testb
xchg
fimull
cmp
sbbb
shrb
push
cmp
cmc
mov
fucomp
dec
cli
or
sarl
sbb
and
xor
rorb
cmp
in
pop
inc
cmp
icebp
sbbl
cmp
jae
cld
cmc
cli
out
jmp
dec
lahf
mov
fldenv
into
iret
push
adc
mov
hlt
xor
add
and
cmpsb
mov
adc
mov
mov
pop
mov
or
orl
mov
jb
mov
push
lret
syscall
imul
aas
cmp
xor
mov
xchg
pop
test
incl
pushf
cmp
icebp
push
jbe
mov
mov
sbb
cmpsl
add
mov
sub
sti
ja
fincstp
out
movsb
mov
test
lea
mov
aam
dec
lahf
inc
cmp
mov
cmc
insl
jg
xchg
stos
push
and
frstor
imul
push
push
jne
pop
into
loope
ljmp
xchg
test
andl
test
fcomip
jo
or
notb
adc
adc
xor
add
cmp
scas
pop
outsl
dec
sbb
ret
inc
ret
test
jg
jecxz
dec
cltd
clc
sub
inc
cmp
push
jmp
jo
sbb
jb
test
bnd
repnz
sub
mov
mov
outsb
ret
imul
jl
push
bound
xchg
pusha
cmpsb
xor
in
aam
fwait
imul
jno
cld
cmc
sahf
lock
mov
pop
scas
xchg
adc
pop
mov
ljmp
mov
dec
jb
pop
movsl
pop
pushf
xor
movsl
ret
push
call
rorl
push
push
clc
xchg
sar
mov
or
or
gs
lods
adc
dec
dec
fistl
mov
je
cmpsl
lahf
out
ret
sub
clc
jno
sbb
cmp
pop
mov
pop
aaa
push
idivl
lock
push
jns
aaa
pop
push
or
loopne
test
push
divb
sub
add
nop
add
add
jl
jb
hlt
push
sti
inc
imull
imul
setl
fcmovnbe
and
sbb
ss
std
sub
fcmovnb
inc
in
xchg
push
lds
icebp
insb
mov
push
push
push
cmp
sub
out
pop
lock
mov
sarl
clc
jecxz
cmc
into
lahf
loope
push
mov
test
inc
lret
pushf
fistl
andl
mov
pop
pop
ret
mov
pop
scas
fildll
jge
pushf
sarb
loop
aas
dec
int3
cmpb
cmp
stos
and
movsb
mov
or
and
in
into
rclb
push
in
in
sbb
pusha
and
shlb
adc
pop
push
mov
mov
push
and
xorb
xor
push
fwait
inc
inc
xor
insl
sahf
pop
xchg
mov
pop
out
test
mov
fistpl
pop
and
movsb
cmp
push
inc
and
jle
sbb
test
xor
sub
insl
shrb
jnp
jge
test
sbb
cmpsb
push
adc
pop
pop
mov
bound
in
add
xlat
pushf
and
sub
iret
push
mov
nop
mov
lods
push
xchg
stos
xor
repz
xchg
pusha
stc
jge
aas
and
aas
sub
leave
cmp
fistl
mov
and
ret
sub
xchg
mov
mov
cli
inc
pop
mov
xchg
in
mov
mov
addr16
add
add
rolb
push
xchg
add
lret
push
mov
pop
shrb
addr16
rcrl
add
or
or
mov
mov
orl
pop
ljmp
les
inc
mov
pop
movsl
fs
popa
sub
adcl
cmpsb
mov
das
int
cmpsb
xchg
popf
and
shlb
loope
xchg
add
and
repnz
mov
xchg
xchg
or
push
pop
mov
sbb
inc
xchg
inc
or
jns
mov
insl
dec
adc
or
and
scas
dec
aas
shrb
pop
xchg
clc
ja
inc
stc
pusha
js
fiaddl
repz
dec
leave
mov
ljmp
xchg
imul
popf
sbb
out
out
push
pop
sbb
in
inc
mov
fsubp
fldcw
mov
aam
mov
dec
out
pop
jmp
push
enter
popf
outsl
push
xchg
cmc
add
jp
in
ret
sbb
sbb
sarb
dec
mov
xchg
mov
pop
ret
adc
and
jb
mov
aad
mov
mov
add
rcrl
imul
shlb
push
lods
rorl
jbe
mov
jecxz
stc
jne
ljmpw
stc
mov
add
push
pop
jb
jae
es
rcrb
mov
sbb
in
jns
arpl
iret
pusha
xor
mov
sub
sub
repz
pop
loope
or
gs
into
pop
adc
sub
mov
movsl
popa
pop
lods
cltd
mov
dec
dec
mov
lods
xor
sbb
fdiv
mov
jo
xor
test
add
and
add
stos
fwait
aam
xor
jecxz
mov
pop
jp
add
jbe
movsb
addr16
popf
mov
mov
scas
idivl
cmpsb
jg
adc
cld
pop
xor
jecxz
and
and
imul
fimull
cmp
arpl
adcb
cld
call
add
les
outsl
in
aad
jno
inc
adc
jg
mov
jge
pop
inc
roll
orl
cmp
and
out
dec
xor
call
or
out
leave
adc
sub
test
imul
xor
sbb
data16
and
cmp
pop
outsb
repnz
pop
ficoms
mov
das
xchg
hlt
test
push
adc
fadds
mov
out
loopne
cmp
lods
idivl
cwtl
adc
paddsw
jp
xchg
imul
call
adc
push
push
or
xor
icebp
call
je
cmp
lods
inc
add
loop
cltd
mov
out
inc
pop
mov
cmpl
or
cmp
jle
push
std
mov
mov
das
mov
push
ret
cmpsb
dec
jno
loop
pop
rcrb
call
and
dec
and
aad
mov
jecxz
dec
stc
fdivrp
mov
inc
sub
dec
rcrl
sub
and
aaa
mov
sub
lahf
cmpsb
rcll
inc
inc
nop
inc
pop
ret
cmp
or
lcall
jns
into
push
add
lahf
dec
repz
hlt
movsl
aas
mov
sbb
mov
pop
jmp
pop
sbb
lds
cmpsl
std
dec
dec
inc
imul
pop
sarl
fs
xchg
or
jno
and
and
es
or
mov
lods
orl
cmc
jnp
fmuls
test
or
enter
push
jle
rorl
test
jno
ret
push
insb
mov
xchg
movsl
cmp
test
mov
and
jmp
mov
add
pop
aas
adc
ljmp
aam
jbe
rorl
into
xchg
les
out
fs
push
mov
ficoms
jae
push
or
inc
fucom
dec
jne
rcl
push
sub
loop
xlat
imul
pop
lahf
sub
xor
sub
mov
lock
out
pop
jno
mov
iret
adc
out
xchg
or
inc
pop
cmpsl
lods
es
push
sbb
xlat
pop
adc
adc
xchg
in
testb
inc
shr
or
dec
pop
xor
popl
cmp
inc
pop
cmc
cmp
or
popa
lret
and
lds
jno
aad
lret
sub
pop
adc
sub
dec
jae
mov
fidivl
call
mull
lahf
loop
and
dec
js
cmpsb
ret
mov
outsb
push
pop
cmp
push
es
and
and
outsl
xchg
mov
pop
push
inc
ret
fwait
mov
hlt
adc
lds
out
into
pop
movsb
imul
add
pop
mov
stos
xchg
xchg
repz
push
mov
push
lods
or
dec
pop
add
subb
dec
in
rcrb
test
sarl
fisttpl
adc
pop
pop
dec
int
rorb
adc
cmp
push
adc
jp
adc
fucomp
orl
jbe
mov
lds
add
insl
mov
xchg
stc
xchg
ror
mov
inc
mov
mov
pop
adc
mov
dec
pop
subl
int3
fidivrs
insb
hlt
jg
addr16
call
aaa
xor
lds
dec
icebp
inc
mov
fs
inc
into
mov
sub
orb
inc
clc
in
shlb
push
mov
sbb
jle
std
test
sbb
inc
out
cmp
lahf
int
adc
jmp
cwtl
inc
jmp
ja
dec
xchg
cmp
in
jg
pushf
jge
pop
ljmp
mov
in
add
test
add
es
es
push
push
jecxz
in
push
cmpsl
ret
fs
or
cwtl
daa
hlt
lret
int
jecxz
loope
push
mov
outsb
cwtl
or
cltd
sbb
push
add
shll
loop
arpl
sahf
outsl
mov
adc
pop
xchg
ljmp
and
cltd
mov
inc
xor
pusha
xor
insl
xchg
insb
mov
cwtl
cwtl
lret
sub
add
pop
jp
adc
in
lcall
es
lea
jle
mov
xchg
call
fdivl
decb
test
fs
pushf
or
xchg
sub
jno
jl
mov
mov
xlat
sub
lret
jbe
mov
fyl2xp1
loop
mov
cmp
mov
outsl
xchg
out
cmc
sahf
das
xchg
add
in
icebp
mov
and
rol
out
loope
push
push
mov
push
xchg
out
mov
mov
push
inc
jne
and
fisttpl
dec
cmp
je
loope
mov
jle
cmp
lret
out
jge
adc
jl
test
int3
ds
gs
adc
call
adc
dec
jo
jg
mov
dec
sahf
sbb
hlt
and
xor
mov
add
fwait
mov
xor
icebp
iret
xchg
dec
jb
in
cltd
jl
dec
mov
xor
jae
or
cwtl
pop
stc
sarb
mov
ret
mov
lock
inc
lods
aaa
lock
xor
sub
xchg
mov
cmp
cwtl
ss
ds
cmpb
dec
loope
mov
inc
js
jl
mov
stos
movsl
inc
sahf
mov
dec
adc
imul
add
jns
mov
aaa
arpl
jl
mov
insb
sbb
mov
inc
outsl
add
jle
pop
out
cltd
test
xor
les
aam
test
sbb
inc
inc
ficomps
sub
sub
cld
mov
lret
mov
ret
int
mov
cmpb
popa
adc
or
xor
pop
push
fbstp
fisttps
and
mov
in
inc
sbb
dec
xchg
icebp
cli
mov
sbb
int3
and
or
gs
xchg
mov
mov
addr16
fcom
in
in
pop
fsub
sbb
xchg
xchg
cs
loopne
iret
lcall
bound
cmc
mov
cmpsl
ds
maxps
pusha
and
mov
pushf
std
inc
pop
sub
xchg
mov
dec
sub
fwait
lods
push
push
mov
inc
xchg
dec
add
mov
dec
jns
pop
in
push
xchg
iret
faddp
mov
cmp
lret
cld
daa
sti
leave
popf
cmpsb
pop
aaa
adc
imul
iret
add
push
jns
pop
lret
in
push
sti
notb
sbb
mov
icebp
cmp
dec
add
cwtl
ja
xor
imul
and
into
jne
mov
fldenv
stos
pushf
inc
loope
movsb
out
mul
mov
xchg
hlt
lret
fisttpl
sbb
mov
xor
ja
jnp
fbstp
push
insl
mov
test
shlb
mov
cmp
push
jnp
jnp
mov
shr
flds
sahf
test
cltd
insb
pushf
xchg
pop
mov
push
negb
push
or
sub
mov
fcomp
add
ret
leave
or
push
out
gs
push
mov
mov
mov
xchg
imul
push
lcall
sub
or
pusha
and
mov
and
push
cwtl
and
std
repnz
mov
pop
dec
sbb
push
outsl
jae
aas
je
pop
sbb
stos
fmuls
mov
shlb
dec
or
insl
clc
into
rclb
test
mov
inc
xor
int
mov
pushl
mov
js
xor
lods
ret
push
mov
sahf
inc
adc
jecxz
xchg
push
aam
push
arpl
sub
out
pop
cmp
push
jle
mov
leave
adc
add
in
push
sbbl
jb
popf
fdivr
pop
jb
mov
adc
jae
inc
ret
out
lret
or
shlb
es
shll
mov
inc
test
or
pushl
js
push
xchg
adc
xchg
xchg
out
pushl
xor
movntq
pop
sbb
adc
aas
jecxz
std
insl
adc
aad
vmwrite
mov
in
jle
adc
jae
orb
xchg
out
add
fnsetpm(287
push
mov
outsl
mov
xchg
or
jle
cmp
data16
loop
mov
ljmp
xor
lds
cmp
sbb
cmp
rorl
scas
xor
das
icebp
int3
push
cmp
push
push
in
mov
imul
shl
shll
aad
cmpsb
out
mov
insl
xchg
bound
aaa
or
mov
ja
outsb
inc
and
jmp
mov
stc
ss
aaa
gs
ret
xchg
xchg
gs
mov
xchg
int
xor
fldl
push
sbb
aad
sub
mov
add
out
aaa
xchg
pop
in
xlat
lcall
out
mov
arpl
insl
lods
negb
jbe
pop
ja
xor
jle
add
mov
sbb
or
push
test
inc
dec
loopne
mov
sub
sub
cltd
push
fs
jl
repz
out
rorl
sbb
div
dec
pop
cs
or
pop
sbb
int
pop
add
cmp
stc
mov
fimull
cmpsl
add
xchg
inc
cmp
fbstp
mov
int3
pop
out
and
shl
adc
or
loope
mov
lea
int3
pop
popf
out
or
mov
xor
mov
into
fisubrl
push
mov
gs
ss
insl
cwtl
bound
cli
xchg
xor
imul
mov
inc
in
push
in
adc
sbb
dec
aam
pop
inc
xchg
fmull
iret
cmp
jnp
bnd
push
test
stc
xchg
lock
sbb
push
out
call
fnsetpm(287
ret
insb
roll
int
mov
push
mov
jns
sbb
aad
mov
fwait
loopne
call
scas
add
adc
out
mov
inc
inc
hlt
sti
mov
fwait
jns
pop
pop
int3
xacquire
mov
fisttps
ds
and
adc
out
pop
movsl
enter
jmp
dec
lds
push
and
jg
test
cmp
test
mov
pop
mov
push
adc
inc
inc
pop
clc
out
mov
add
sahf
jne
data16
fnstenv
mov
jnp
lret
fs
into
daa
dec
out
andl
sbb
call
lock
inc
jnp
mov
add
test
clc
out
sti
aam
xchg
xchg
sub
jmp
push
sub
mov
sarb
lret
lcall
mov
mov
bnd
fwait
adc
leave
fmull
ss
mov
xor
addb
int3
sub
jae
outsb
sbb
push
pop
adc
das
cmpl
test
sbb
or
psrlq
sub
mov
std
inc
sub
sbb
xor
in
pop
mov
idivb
inc
jb
xchg
mov
or
lahf
and
jnp
inc
popa
cmp
cs
mov
jp
outsb
pushf
shl
dec
ret
xchg
daa
mov
testl
pop
xchg
push
cmp
fwait
lock
inc
or
mov
adc
and
sbb
xor
cmc
or
mov
out
mov
fs
and
sub
into
push
mov
cs
test
ret
enter
sbb
push
cmp
add
xor
lods
jno
dec
add
dec
mov
lea
mov
jp
push
mov
sti
mov
ror
add
rclb
sbb
adc
pushf
sbb
mov
or
fwait
inc
mov
jmp
sbb
rorl
adc
enter
cmp
jl
cmpsl
push
mov
push
movsb
scas
cmp
rclb
push
ror
lods
lret
jns
jb
imul
cli
and
jbe
sti
fwait
xchg
cmp
dec
pusha
out
fldenv
repz
jle
add
adc
andb
sub
add
test
insl
push
mov
add
and
notl
js
ljmp
ja
data16
cmp
and
iret
cwtl
aaa
je
scas
xor
dec
js
popf
inc
inc
shrb
and
aas
sbb
adc
stc
push
leave
push
cmp
ret
xor
cld
push
scas
inc
sti
push
lods
test
cmc
addr16
mov
out
into
in
xchg
pusha
cwtl
or
fldt
xchg
push
aas
xor
es
adc
mov
dec
loopne
int3
aaa
dec
gs
popf
loop
mov
lcall
cmc
movsl
and
cmp
mov
into
popf
xor
jne
inc
inc
and
pop
shrb
jmp
inc
jmp
mov
mov
adc
dec
mov
jb
inc
xchg
repnz
pop
push
sub
fcoms
and
sub
jp
loop
add
mov
push
insb
dec
and
dec
les
jo
sbb
ret
std
adc
adc
mov
mov
mov
fsub
push
adc
push
xchg
push
scas
cmp
and
das
pop
mov
jne
dec
pop
jns
add
sbb
call
mov
movsb
or
loope
int
mov
repz
and
mov
xchg
jno
push
and
sbb
dec
push
push
fs
xor
mov
xor
aas
inc
movq
mov
cs
mov
paddw
jbe
xor
mov
filds
sub
pusha
sub
xor
or
shr
pop
in
inc
mov
cld
in
sahf
cmp
cld
cmpsb
sti
lds
lahf
pusha
inc
aam
sbb
dec
add
aam
pop
mov
dec
outsb
add
imul
and
inc
xor
pop
mov
enter
test
mov
and
jle
xchg
lahf
and
aad
push
cli
enter
add
cmp
loopnew
push
out
daa
xor
jl
sbb
ret
dec
out
sti
mov
or
lret
xor
sbb
mov
mov
or
out
jo
jo
shr
mov
mov
cmp
push
cmp
daa
push
iret
mov
or
dec
orw
jbe
ud2
out
jmp
es
subl
sahf
cmpsl
or
pop
jp
sub
cmc
scas
cwtl
mov
sbb
xchg
and
mov
inc
or
notb
test
out
out
clc
jp
cld
cmp
or
jl
push
sbb
ja
pushf
and
test
jecxz
out
dec
or
mov
or
and
mov
push
std
jb
push
out
or
out
js
xchg
icebp
bound
push
cmp
loop
out
sub
in
into
loope
mov
mov
scas
sub
push
push
pop
cltd
orl
jnp
sub
add
js
popa
mov
add
ret
std
loope
sbb
fisttps
into
add
bound
outsl
imul
ret
adcb
dec
jb
out
xor
sbb
std
push
mov
xor
mov
arpl
mov
adc
std
dec
inc
dec
adc
cli
repz
pop
mov
xchg
sbb
movsb
xor
fildll
dec
daa
iret
xor
push
pushf
popf
sbb
imul
xor
or
mov
ja
icebp
std
dec
mov
outsl
incl
dec
mov
loopne
push
rcl
mov
mov
lret
jns
ss
and
push
xchg
jnp
inc
scas
mov
xchg
icebp
push
push
add
retw
dec
dec
loope
cmp
mov
push
mov
add
pop
stc
jo
mov
cmp
movsb
or
xor
or
addr16
sbb
mov
addr16
jecxz
lods
sahf
ret
in
dec
insb
je
in
xchg
jmp
ret
int
xor
lds
mov
jmp
pop
imul
jo
pop
inc
jg
mov
outsl
cltd
or
sub
pop
xchg
sarb
jl
or
mov
xorb
jl
pop
stos
push
jmp
cld
arpl
mov
sbb
mov
fs
gs
ljmp
and
pusha
jno
jecxz
mov
imul
push
jmp
pop
sbbb
jge
sbb
pop
pop
pop
add
jns
addl
dec
cmp
jge
sahf
out
mov
jp
pop
cld
inc
add
and
sbb
ljmp
in
cmp
aaa
in
dec
fcompl
dec
leave
in
and
mov
ljmp
scas
push
mov
dec
cmp
pop
movsb
sub
or
sub
xchg
mov
popa
or
out
or
jbe
inc
repz
sub
daa
dec
ljmp
or
add
arpl
std
jne
stos
lods
dec
xchg
mov
int
cld
sti
pusha
rcrb
dec
dec
add
popf
push
mov
xchg
ja
or
cld
or
mov
repz
dec
cmp
mov
adc
mov
mov
mov
or
loop
push
andb
test
dec
push
pushf
insl
cmpb
xorl
neg
or
bnd
shll
inc
stc
add
leave
xor
xchg
lds
ja
data16
ret
jg
pop
ds
pop
sbb
int
sub
dec
ljmp
add
inc
outsl
loop
into
mov
add
sbb
push
jne
xchg
fbld
insb
push
cmp
pop
f2xm1
shrl
pushf
push
and
jp
push
mov
or
out
jbe
aam
fs
mov
pop
inc
dec
test
jne
aam
imul
jo
movsb
jns
fisubrs
push
pop
nop
mov
movsb
popf
in
mov
test
sbb
xchg
scas
scas
fwait
nop
shrl
fisubrs
test
inc
shl
xorl
sahf
pop
xor
xchg
xchg
leave
decl
and
mov
ja
lods
aam
int
dec
in
mov
pop
int
pop
adc
mov
push
xchg
loop
fs
fidivl
sbb
fisubl
mov
rolb
shlb
daa
fcmovnu
xor
in
cmc
sub
xor
mov
push
test
adc
data16
enter
cltd
pop
gs
insl
stos
fldt
popa
sbb
xchg
dec
fdivs
adc
and
cmp
popf
fisubl
pop
xchg
adc
dec
xor
movsb
pop
and
mov
mov
loope
mov
jmp
in
int3
sbb
insl
pop
dec
inc
in
adc
add
in
pushf
test
and
lret
jo
inc
fldenv
dec
shrb
stos
mov
mov
inc
sub
fs
and
mov
mov
mov
xorl
movsl
int3
xchg
cwtl
cmc
ret
add
mov
in
jmp
popa
jg
aad
dec
lahf
xchg
push
inc
push
les
cld
ret
ljmp
push
sub
insb
lahf
push
dec
dec
filds
mulb
mov
mov
lds
sbb
cmp
mov
add
pop
cmp
adc
aaa
in
xchg
pushf
sbb
jo
inc
push
xor
xlat
mov
mov
out
mov
xchg
adc
andb
rcll
into
and
bswap
fsubs
and
jnp
insb
stc
fcmovne
sbb
jge
pop
xchg
shl
rcr
pop
mov
pop
mov
mov
pop
mov
dec
xlat
sarb
cmpsl
hlt
icebp
lret
shl
xchg
shlb
sti
imul
loop
cmp
mov
shlb
add
jp
out
inc
das
scas
bound
mov
xchg
fucomip
mov
cmp
adcb
arpl
stos
add
push
scas
xlat
xchg
push
add
imul
outsl
pop
inc
adc
loop
mov
adc
stc
jmp
lret
ret
mov
push
mov
and
or
out
mov
sbb
mov
fs
ret
dec
scas
jne
in
int3
jle
mov
out
adc
inc
adc
and
adc
jle
fisttpl
notb
aam
sahf
inc
fmul
or
sbb
mov
nop
add
divb
fs
mov
lret
leave
mov
fisubs
stc
scas
shr
lods
add
and
outsb
mull
cmp
mov
mov
in
jg
imul
sbb
in
and
sbb
dec
mov
mov
mov
mov
mov
add
add
mov
test
mov
pop
aad
jp
ret
xor
divl
jne
rcl
std
sub
push
or
icebp
dec
sub
and
adc
rep
aad
and
xchg
roll
dec
push
push
jb
xor
push
cmpsb
pop
and
pop
mov
sahf
stos
xchg
shlb
lock
cmp
loope
and
jle
inc
roll
gs
aam
cs
adcb
mov
push
in
psrad
movsb
mov
adc
rol
inc
pop
lods
cwtl
orb
andl
sti
dec
lea
shr
test
lcall
inc
mov
pop
pop
int3
lcall
adc
sbb
daa
dec
cwtl
push
push
sbb
dec
push
loopne
cwtl
inc
fisttpll
xchg
in
addb
ds
lods
sbbl
out
cmp
popf
movzwl
adc
out
sub
sti
loopne
fdiv
mov
cmp
inc
iret
mov
add
sbb
cmp
dec
call
fisubrl
pop
cmp
jg
push
xor
outsl
cmp
push
mov
cmpsl
jecxz
jne
iret
orl
jecxz
inc
movsb
sub
cmpsl
insb
mov
lods
test
loopne
mov
pop
insl
rorb
ret
pop
mov
mov
test
mov
sub
and
push
and
inc
inc
orb
inc
rcl
imul
ss
movsb
sbbl
test
add
jne
xor
in
repnz
jmp
cmp
inc
xchg
pusha
mov
bound
fs
inc
push
std
daa
mov
stos
dec
js
xchg
mov
ss
pop
xor
push
mov
lret
xor
lock
mov
jmp
pop
loope
pop
test
dec
push
dec
adc
sahf
ja
testl
or
enter
xchg
ja
aaa
fstl
pusha
repnz
fs
fidivrl
aam
or
xchg
popa
call
mov
aad
xchg
pusha
push
pop
pop
adc
adc
sti
lods
mov
roll
stc
out
mov
int3
mov
cmp
cmp
jecxz
dec
xchg
addl
xor
jae
sbb
in
jb
dec
add
mov
cli
enter
mov
dec
xchg
sbb
cmp
repnz
sbb
idivb
mov
xchg
sub
pusha
jne
jne
hlt
stos
out
inc
push
mov
test
stc
fdivl
dec
inc
fwait
js
adc
ret
mov
fisubrl
sbb
or
cli
out
int
xor
repz
jae,pt
sbb
in
pop
push
fwait
leave
je
and
mov
jb
out
cmp
dec
xlat
mov
ljmp
jnp
jae
repnz
or
xor
sub
sysret
add
xchg
pop
push
mov
push
andb
and
sahf
enter
add
pop
mov
lds
mov
cmpsl
cs
xchg
mov
inc
push
js
mov
les
stos
dec
xchg
pop
add
andb
pop
in
ret
xor
hlt
add
fs
es
xchg
orb
pop
jmp
je,pt
nop
fucomip
aam
jb
fmul
popf
clc
roll
xor
sbb
call
lods
push
mov
cmpl
fdivrs
test
mov
sub
dec
jne
imul
xchg
cwtl
aas
mov
sbb
loop
cmp
imul
mov
sbb
mov
sub
aas
out
adc
scas
mov
push
loopne
and
push
sub
dec
aam
shlb
sti
xor
add
mov
inc
pop
bound
inc
sbb
jmp
stc
loope
hlt
xchg
xor
and
insb
add
mov
xor
dec
leave
and
testl
pushf
and
or
out
loop
and
dec
or
std
xchg
sbb
movsw
push
jno
sub
test
mov
xchg
cmp
push
add
ret
lods
in
stos
mov
dec
dec
cwtl
leave
mov
sti
shlb
adc
mov
xor
cmpsl
icebp
fsubrl
mov
cltd
and
pop
mov
and
xchg
int3
hlt
jmp
icebp
hlt
xchg
ret
xchg
add
sub
add
mov
jbe
stos
inc
mov
loop
cltd
lods
mov
and
repz
adc
mov
mov
fwait
sub
hlt
shl
addr16
cli
sti
sbb
cmp
fsts
and
cmc
dec
call
sub
or
xchg
or
lea
aaa
shll
dec
outsl
xor
rcrl
pusha
out
xchg
aaa
je
sub
aam
xchg
inc
inc
mov
xchg
cli
sub
loop
jns
inc
pop
aam
xor
lahf
adc
mov
not
jnp
inc
mov
mov
sbb
inc
stos
test
mov
pop
xor
jb
pop
xlat
test
inc
push
mov
pop
addl
aad
lahf
popa
int3
clc
into
and
cmp
and
mov
adc
pushf
aam
pop
or
aam
or
add
movl
xlat
js
cs
sbb
push
imulb
mov
add
hlt
add
repnz
add
sar
ret
xchg
sti
in
repnz
mov
pop
inc
and
dec
aam
and
sahf
mov
es
mov
sbb
je
rorl
test
imul
in
sub
mov
imul
punpcklbw
push
pop
aaa
push
inc
lea
sahf
sub
cmpsl
fldl
nop
lcall
push
adc
lret
aam
xor
aam
mov
cli
jnp
sbb
dec
xchg
inc
imul
ljmp
add
pushaw
nop
and
mov
jl
imul
lods
push
push
cmp
ret
pop
or
xchg
mov
mov
adc
pop
push
add
lock
scas
mov
adc
jecxz
sub
movsb
aad
cmp
rcrl
cmpl
loopne
imul
sub
push
loop
je
jge
js
in
ds
dec
xor
mov
jbe
mov
or
dec
and
stos
leave
mov
and
mov
fdivs
jmp
xor
jge
sbb
rcrl
call
mov
adc
rcr
daa
ljmp
bound
daa
dec
add
iret
cmpsl
hlt
jb
je
cmp
psrlw
mov
jmp
test
jne
rorb
or
out
jg
cld
dec
fsubr
fcoms
call
int
stos
mov
mov
ds
leave
repnz
sub
mov
xor
out
test
add
sbb
sbb
shlb
out
ret
mov
add
and
pop
pop
mov
mov
popa
movsb
mov
test
lock
xorl
jmp
push
std
out
push
std
dec
addr16
in
mov
cwtl
lods
fisttpll
dec
add
clc
enter
dec
rcll
xor
push
imul
cltd
cmp
sbb
notb
lea
pop
je
ds
mov
scas
dec
sbb
mov
cltd
dec
jae
pop
fdivl
or
sarb
lret
and
lods
sub
mov
pop
push
lret
xchg
imul
aas
push
inc
testb
sub
js
jmp
hlt
test
insb
repnz
sub
enter
mov
dec
jge
mov
pushf
adc
out
in
add
add
int3
mov
xchg
lods
xor
xor
sub
adc
mov
push
loope
add
bound
hlt
cmp
cmpl
rol
fidivs
mov
pop
sub
xor
xchg
sbb
iret
sub
mov
push
iret
sub
push
pop
jne
fld
mov
xor
inc
subb
sub
ljmp
aaa
nop
mov
dec
repz
push
jmp
add
xorl
cmp
movsl
adc
cmp
dec
adc
int3
sub
xor
and
or
ss
jl
xchg
loopne
xchg
and
ljmp
popa
dec
cmpsb
and
jo
and
ljmp
jecxz
or
jns
xchg
add
fucomp
daa
inc
in
in
push
sarl
mov
int
dec
mov
mov
sbb
xor
mov
jl
push
jg
xchg
xor
dec
dec
lahf
scas
mov
mov
xchg
fsubp
inc
push
xor
aas
jmp
xlat
lcall
mov
hlt
jl
mov
lret
push
cmp
test
movsb
sahf
cli
lea
testb
shl
and
rol
ds
push
mov
pop
rorl
stc
sbb
push
xchg
cmp
xchg
outsb
stc
lods
pusha
rorl
inc
inc
test
jb
jbe
bound
data16
lahf
xchg
lret
mov
hlt
cmp
scas
inc
movsl
outsb
adc
sub
mov
cmp
scas
out
mov
dec
movsl
shrb
insl
jl
mov
dec
inc
mov
cmp
in
outsl
mov
xchg
add
mov
add
insb
cwtl
pop
push
pop
push
inc
sbb
jecxz
cwtl
outsb
mov
divl
hlt
into
out
dec
xchg
imul
sub
dec
enter
ds
add
rorl
into
inc
fstl
mov
mov
xor
sub
lret
inc
aas
pop
loope
test
mov
jno
inc
lret
scas
sahf
jno
lock
imull
ss
ret
or
iret
sbb
ror
cmp
mov
roll
addr16
ret
in
or
int
mov
xchg
mov
stos
or
cmpsl
int3
fsub
inc
cwtl
jle
es
in
sub
ds
inc
leave
pop
out
repnz
xor
popa
cltd
mov
daa
pop
dec
mov
or
push
cli
cmpsb
or
sub
out
mov
mov
adc
mov
lods
mov
push
imul
sub
std
push
stos
ja
cmp
ficomps
xlat
scas
xacquire
push
dec
outsb
dec
lock
shl
add
sarb
mov
aad
mov
xor
sub
pusha
xchg
adc
xchg
xlat
addl
nop
arpl
xchg
repnz
and
pop
outsl
ss
jb
xchg
pop
inc
jnp
lret
or
adc
mov
push
repz
scas
rol
pushf
lock
jne
mov
fs
nop
lods
call
mov
pusha
adc
js
push
sbbb
inc
testb
pop
push
mov
inc
mov
lock
sahf
test
loopne
shr
pushf
xor
jle
xor
lret
dec
test
filds
lods
lods
mov
popf
jne
lds
stos
aaa
in
popf
push
pop
jg
lock
ja
adc
adc
mov
cmp
jb
inc
les
pop
out
cmp
ja
dec
inc
into
cwtl
pop
add
and
sub
mov
push
inc
add
xorb
adc
sub
call
and
in
lods
mov
popf
out
push
ficomps
pop
imul
and
divb
cmp
adc
ret
sarb
scas
inc
orl
sti
add
push
push
cli
jb
xor
fwait
push
out
int3
mov
jb
sub
fstp
subl
pop
cs
cld
lahf
daa
mov
in
mov
push
imul
sbb
or
imul
out
pop
pop
xlat
pop
xchg
jl
shr
xchg
movsl
add
in
lds
cmp
jecxz
iret
jl
lods
movsb
push
cltd
mov
aas
jo
repnz
cmpb
jb
xchg
sbb
pushf
addr16
jb
lock
das
or
bound
jns
fldenv
push
add
xchg
hlt
jmp
addr16
xor
mov
mov
out
insb
sbb
and
sub
je
test
cltd
lock
shll
pop
mov
mov
add
xor
ljmp
outsl
in
sahf
cmpsl
cmp
out
arpl
fdivrs
or
sarl
inc
cmp
xor
push
mov
xchg
jno
xor
hlt
pop
sbb
mov
jne
lcall
and
in
xor
inc
into
mov
mov
dec
mov
fwait
push
cmp
inc
movsb
pop
push
in
stc
ja
das
mov
pushf
mov
in
mov
jp
sbb
loop
aad
mov
jo
xchg
sbb
xchg
jbe
daa
and
xchg
adc
test
mov
push
mov
shlb
jnp
fsqrt
inc
mov
fwait
hlt
movsb
call
enter
sbb
pop
and
mov
and
inc
cmp
js
inc
jl
mov
mov
loopne
fwait
jle
push
adc
or
iret
jle
xor
mov
cs
pop
jge
mov
or
cld
adc
int
jge
pop
cmp
sub
int
rcl
divl
jo
inc
xlat
pop
or
rolb
popa
fsubrl
inc
pop
into
xchg
and
and
xchg
adc
jbe
loopne
jbe
int
ds
in
icebp
outsl
sbb
repnz
sub
jo
stos
xlat
adc
add
jo
adc
push
fucomp
mov
into
sub
mov
scas
or
int3
leave
xchg
add
mov
mov
outsl
pop
test
ja
fldt
push
scas
push
push
or
out
lahf
enter
sub
dec
jnp
and
out
push
rclb
gs
mov
enter
sbb
mov
daa
lahf
cmp
xchg
add
inc
cmp
popa
adc
pop
xchg
out
stc
xchg
mov
mov
fisubrs
lock
mov
inc
rcrl
mov
lret
add
pop
hlt
cwtl
jb
sbb
ret
insb
fcmove
test
sub
mov
pop
inc
imul
adc
cld
cmp
dec
pop
sti
mov
xchg
fs
mov
mov
ffreep
out
push
pop
std
mov
or
adc
xor
push
pop
xlat
push
add
jmp
mul
cwtl
mov
iret
mov
xor
jno
test
jmp
and
jnp
mov
push
push
sub
enter
xchg
inc
rorl
dec
lret
cmp
stos
push
loope
dec
pushf
daa
js
jb
xor
shrl
inc
mov
sbb
lret
mov
cmp
or
stos
add
fs
pop
dec
inc
repnz
jo
fwait
cli
add
cli
das
sub
mov
xor
les
sahf
lods
xor
push
jge
xchg
sbb
add
cmpsl
mov
lods
leave
adc
and
shll
cld
jmp
adc
jg
jg
scas
cmp
insl
test
scas
xchg
lret
mov
je
mov
fiaddl
inc
push
jb
mov
jl
xchg
push
adc
inc
xor
mull
in
pop
push
fwait
inc
fbld
cmp
cmp
or
rol
and
mov
ss
inc
arpl
push
push
mov
jns,pn
jno
adc
fwait
loope
jp
ret
popa
xor
aaa
inc
jbe
inc
cmc
outsb
push
sub
popf
push
mov
test
mov
fstpt
sbb
mov
sub
add
jp
jbe
jno
hlt
xchg
pop
sub
loopne
push
push
jge
jae
test
cwtl
lahf
inc
xor
inc
cmp
test
jl
ficomps
stos
add
call
je
or
jae
jecxz
dec
rcrb
ljmp
push
dec
pop
sbb
mov
out
outsb
and
lods
pop
add
adc
xor
sbb
lods
sbb
lret
add
lea
test
push
jne
shrl
aaa
sub
mov
cmp
adc
jge
push
addr16
mov
shll
rol
inc
add
lea
aaa
jae
push
call
cmpsl
or
test
repz
jmp
test
push
lahf
outsb
mov
jl
arpl
cmc
mov
stc
push
popa
mov
test
ljmp
inc
push
insb
in
push
fisubl
adc
jns
sbb
and
lret
mov
mov
rcr
fwait
cmp
jg
arpl
out
mov
or
repz
jl
rcr
xchg
jbe
jo
rcr
dec
pop
bound
add
popf
bound
mov
pop
ss
sti
test
xchg
jg
fwait
jmp
sub
push
aas
pop
mov
push
call
mov
imul
cmp
dec
call
dec
or
testb
push
mov
dec
push
insl
xor
cmpsb
lret
loop
mov
push
shlb
sbb
cmpsl
xchg
test
lock
out
jne
mov
roll
std
and
sbb
jbe
jnp
mov
inc
cltd
cltd
loopne
mov
inc
mov
movsb
mov
dec
stos
lock
cmpsl
leave
rdpmc
sbb
cs
int
idivl
add
std
lock
ret
hlt
xchg
insb
adc
pusha
inc
sub
adc
scas
or
sbbb
dec
jmp
or
les
test
fstpl
sbb
out
jo
dec
fwait
loope
or
sbb
lret
mov
rcl
sbb
out
adc
sti
in
insb
mov
imul
jmp
icebp
stos
add
ss
lods
lcall
adc
pop
sbb
divl
lret
repz
jge
add
push
inc
out
pop
mov
in
ds
lret
xor
sub
popf
xchg
lock
xchg
arpl
pop
jge
popa
lock
iret
mov
or
enter
notb
lret
stos
enter
mov
jle
xchg
cld
lds
das
cmpsl
sbb
or
dec
jecxz
das
cli
addr16
faddl
or
std
and
mov
mov
push
xchg
arpl
mov
cld
mov
xor
pop
cltd
cmp
jns
imul
cmp
jge
inc
jne
inc
lret
cmp
insb
or
mov
js
jne
pop
mov
scas
push
test
dec
xor
je
repz
xchg
mov
sti
negl
jo
add
push
stos
test
mov
inc
jge
iret
jbe
sbb
test
mov
jle
inc
cwtl
sub
or
les
repz
outsl
mov
mov
cmp
push
fisubs
sub
dec
fstpl
pop
sub
je
stos
test
jmp
mov
daa
je
lock
shll
repz
outsb
popa
dec
ljmp
aam
fildl
mov
dec
inc
clc
fcoml
mov
push
cmp
dec
icebp
xor
loope
mov
loopne
rclb
shlb
gs
insb
orl
pop
inc
stos
clc
fmulp
mov
xor
std
cmpsb
in
sarl
std
xchg
or
sbb
inc
icebp
xlat
and
or
push
pusha
imul
mov
dec
inc
pop
inc
ss
rcrl
add
stc
push
movsb
push
mov
adc
ret
loope
xor
xchg
mov
aam
stc
push
call
pop
movsb
mov
fisttpl
mov
dec
jne
setb
or
pop
cmp
test
sub
xchg
sub
mov
or
movsb
cmp
fnsave
sub
adc
cwtl
and
pop
lods
xchg
stos
aam
lock
pushf
lea
jbe
cmp
cmpb
pop
pop
add
xor
loopne
aaa
mov
std
sbb
dec
rorb
rcll
shll
cmpsl
pop
xor
xorl
jns
xchg
lcall
cltd
movsl
adc
and
ret
lods
cmpsl
dec
rcll
or
scas
clc
divl
cmpsl
inc
push
out
inc
pop
push
and
aaa
inc
xor
pop
sti
jne
mulb
push
aam
push
scas
outsl
push
lcall
pop
xor
jo
xchg
das
pusha
sub
pushl
pop
add
xchg
and
cmpsl
imul
arpl
in
jns
jle
inc
mov
outsl
fwait
xchg
je
dec
xor
xchg
test
pop
mov
inc
sbbb
xor
and
and
mov
cltd
mov
dec
pop
mov
inc
and
add
inc
mov
pop
fsub
fdivrl
dec
xchg
fucomp
pop
cmp
repnz
sub
lret
stc
int
pop
fwait
lret
aam
pop
pop
lds
cmp
add
popa
push
jne
mov
and
in
lock
pop
pop
cs
dec
sub
sub
sbb
icebp
jo
or
cmpsb
fcoml
sbb
outsb
mov
ret
shrl
int3
scas
lahf
mov
test
mov
je
ja
push
fiadds
rcr
lea
incl
subb
aad
sub
push
in
arpl
jns
jecxz
insb
or
xchg
in
mov
push
stos
sarl
addl
lods
inc
dec
pop
push
adcb
jae
arpl
sub
loope
mov
xchg
imul
cwtl
daa
lea
xchg
std
ret
cld
out
aad
mov
mov
mov
sub
in
imul
and
popa
mov
pop
lret
pusha
mov
inc
add
sbb
mov
sub
fidivl
sub
in
add
jnp
mov
in
in
mov
cmc
aas
cmp
bound
shl
inc
ror
xchg
cwtl
loope
ljmp
cmp
ljmp
jle
test
jg
clc
popf
and
pop
xor
les
xchg
test
adc
xchg
mov
roll
fcomi
jo
fmuls
sub
sahf
pop
je
cmpsl
orl
push
cmpsb
and
test
jo
lcall
xchg
shrl
notb
jge
mov
push
push
sbb
sbb
fucomip
jmp
imull
ljmp
decb
sbbb
dec
sbb
sbb
mov
xchg
adc
outsl
cmpsb
adc
rcl
pop
pop
int3
lds
int
cmp
cmp
arpl
movsb
pop
movsb
mov
icebp
mov
pushf
cmp
mov
iret
insb
repnz
add
cli
dec
add
sar
sbb
add
negl
or
xchg
test
subb
loop
dec
inc
out
xor
inc
mov
and
xor
sub
mov
push
sahf
pop
add
jmp
add
rorb
sub
mov
xor
mov
pop
cld
arpl
mov
sbb
add
iret
pop
push
adc
out
xchg
jbe
int3
or
imul
xor
dec
jne
inc
sub
mov
ja
adc
pushf
aas
mov
scas
or
es
adc
scas
add
jns
push
mov
adc
pushf
pop
sbb
cmp
mov
pop
mov
mov
add
les
adc
hlt
inc
inc
fistl
rcll
arpl
inc
mov
lds
lods
dec
inc
rclb
xor
insb
test
inc
shr
push
je
push
jns
xlat
pop
pop
loop
jnp
mov
mov
pop
das
jae
scas
push
ret
out
and
mov
dec
xor
rcll
add
stos
fnstenv
sbb
dec
das
pushf
es
cwtl
adcl
xor
jl
xor
and
and
insl
outsb
pop
mov
insl
jp
mov
cmpsl
clc
in
cmc
xor
mov
lods
rol
cmc
xchg
or
xor
loop
sti
daa
mov
jb
loope
lcall
fisttpll
scas
lds
cmp
or
in
xchg
push
xor
cmp
push
scas
das
lcall
scas
jns
imul
inc
aaa
fsubl
mov
shlb
lret
sub
sub
or
sbb
mov
insb
imul
or
enter
out
mov
jl
arpl
jecxz
cltd
or
and
cmpsb
push
xor
scas
sub
ja
je
faddp
sbb
dec
orl
mov
je
push
ret
mov
adc
mov
push
ret
enter
fs
mov
das
mov
pop
pop
nop
jnp
push
shl
insl
mov
add
sbb
in
dec
cwtl
push
inc
addl
fwait
mov
jno
clc
cmpsl
out
mov
jmp
int
orl
inc
int
pop
push
insb
add
adc
dec
mov
lods
sub
pop
mov
adc
iret
sbb
out
shlb
sbbb
lahf
adc
addr16
subb
cmp
ficomps
into
and
out
jae
mov
rorb
xor
movsl
jmp
add
mov
dec
jne
cmp
ljmp
test
js
add
test
xchg
jg
test
mov
and
gs
pop
test
sub
fs
inc
dec
adc
aam
mov
in
cld
fadd
sub
pop
les
jb
cmpsl
mov
jecxz
jae
cmp
ret
outsl
xor
stos
enter
push
imul
fildl
adc
cmpsl
imul
pop
xchg
inc
rcr
mov
repz
lds
push
outsl
cli
dec
mov
scas
lahf
lock
sbb
mov
mov
or
psadbw
push
lret
dec
out
testb
push
clc
jge
cmc
pop
add
mov
shlb
fldt
lret
shlb
into
mov
test
imul
mov
test
repnz
add
shrb
sbb
push
out
lret
icebp
stc
scas
dec
gs
cwtl
stos
xor
pop
cmp
das
cmc
dec
mov
sarb
xlat
mov
xchg
or
cmc
adc
orl
pop
test
xchg
xlat
mov
and
sarb
sarb
arpl
mov
lods
dec
and
dec
sub
jmp
mov
cmp
adc
or
popf
arpl
ljmp
inc
mov
mov
add
nop
neg
sub
sub
pop
jne
sbb
fidivl
jmp
cmp
movsb
push
push
cmp
or
xor
or
pop
fcomps
mov
mov
cltd
push
daa
shl
cli
mov
inc
decl
cwtl
rcr
mov
cmp
mov
aam
popf
lret
cmc
and
loope
lahf
cs
int3
ss
daa
out
repz
hlt
out
xor
es
xchg
loope
dec
subb
cmp
dec
mov
inc
ljmp
js
stos
out
les
pop
das
js
mov
sub
xchg
imul
movsl
dec
xchg
enter
aad
jl
xor
lds
test
je
sbb
or
out
fwait
daa
int
push
or
mov
or
inc
mov
sub
loope
xor
movsb
fwait
aaa
lods
jecxz
test
dec
push
mov
pop
xchg
push
xchg
cs
push
aam
mov
negb
mov
and
dec
sbb
int3
lret
stos
add
popa
mov
mov
daa
dec
inc
test
push
mov
add
in
or
push
test
data16
jmp
cmc
pop
imull
notb
ja
ret
repz
bound
in
es
xchg
pop
jo
push
aad
mov
ja
sbb
or
mov
lret
jg
adc
mov
xor
lods
mov
jnp
mov
mov
jle
xchg
add
inc
mov
lock
mov
adc
or
jo
dec
jle
xchg
inc
sbb
das
shrl
pushf
cmp
inc
or
adc
lods
je
jecxz,pt
cmp
push
push
test
xchg
xchg
cltd
or
stc
das
jg
lea
xchg
bound
inc
inc
pop
mov
inc
loopne
or
or
dec
jbe
cmpsb
push
aad
popa
cli
jl
sbb
or
sti
out
jns
mov
push
in
pop
notb
jl
jns
test
jns
pusha
movsb
sbb
add
fs
cmp
jo
movups
pop
mov
push
loopne
xor
out
fldenv
mov
in
stos
mov
mulb
jne
xchg
sub
cld
call
jnp
pusha
inc
mov
push
fadd
andl
lret
cmp
xchg
daa
jnp
or
sbb
mov
cmpsl
mov
data16
cmp
mov
dec
dec
mov
cmpsb
cltd
daa
stc
lds
iret
sub
outsl
pop
jmp
jp
jbe
jbe
sub
dec
pop
jo
pop
bnd
andl
jl
ds
or
dec
sub
xchg
sahf
inc
shrb
fisubrs
cmpl
and
add
jbe
iret
pop
loope
iret
testl
jbe
mov
jne
iret
mov
mov
push
mov
mov
add
test
add
or
or
std
sbb
push
push
cld
dec
xchg
mov
mov
in
sbb
adc
dec
mov
mov
pushf
jmp
jo
and
mov
leave
add
je
mov
add
cs
add
xchg
pop
push
fcompl
inc
lock
in
sub
add
test
push
or
mov
xor
jae
pusha
fsubrs
jbe
xchg
and
and
cltd
lds
ret
cmp
sarb
fimuls
or
xchg
mov
mov
dec
loope
adc
cwtl
cs
jbe
jb
pop
and
ret
outsb
icebp
stc
mov
jno
addb
mov
sub
push
out
jmp
jno
insl
aad
sahf
loopne
clc
cmp
sahf
push
or
adc
and
add
test
jmp
fiaddl
jno
xor
mov
bound
out
jo
mov
icebp
ljmp
xlat
cs
xchg
ljmp
int
fcmovne
sbb
push
dec
cs
fisubrl
pop
ja
punpckhbw
mov
jns
jne
xor
fcoms
sarb
xlat
pop
mov
lea
cs
xor
hlt
fisubs
leave
test
xor
jmp
movsl
inc
sub
xchg
ret
dec
lods
int3
imul
add
dec
js
dec
push
rolb
inc
jge
ret
ja
nop
and
xchg
aam
bt
int3
cmp
push
mov
jns
add
aad
lods
icebp
mov
mov
stc
sub
cs
mov
lret
fcomps
sub
scas
lret
jmp
lahf
xchg
hlt
xor
cmp
out
cmpb
push
fistpll
cmp
jbe
popf
ds
add
lret
jp
pop
push
rorb
into
mov
and
cmp
insb
sub
fistpl
mov
add
mov
cmp
je
nop
xor
sub
push
fwait
movsl
dec
popa
xor
jg
test
psubusw
xchg
shll
dec
inc
test
push
cmpl
lret
inc
ret
mov
push
dec
loope
lcall
ljmp
mov
in
out
fadd
aad
mov
dec
and
repz
int
leave
mov
dec
fsub
adc
pop
xchg
and
adc
stos
hlt
add
inc
cli
shrl
cmp
xchg
or
mov
xchg
test
je
out
sub
inc
sbb
jne
loope
xor
jg
sbb
mov
fidivrs
mov
cltd
ss
lock
adc
jne
pop
daa
stc
lods
inc
lret
jns
repz
cmp
add
fiadds
fcompl
sbb
cwtl
cld
pop
in
fwait
call
ror
jae
aaa
imul
aaa
sub
mov
cmp
and
sbb
aas
idivl
jne
push
rorb
jb
pop
cmp
hlt
lret
scas
jmp
pop
pusha
mov
fnstenv
jecxz
cltd
idiv
cmc
lea
add
pop
hlt
pop
cmp
push
mov
dec
jne
sbb
ds
popf
in
dec
sahf
aam
pushl
mov
stos
sbb
mov
lahf
sbb
jge
ret
aaa
enter
xlat
daa
jb
movsb
rcrl
lock
mov
sub
and
and
cmpsl
cwtl
or
add
mov
ret
fisttpl
mov
inc
adc
dec
push
push
lret
push
sub
out
dec
adc
add
xor
mov
xchg
subl
inc
xchg
subb
push
xchg
sub
cmp
repz
xor
push
pop
imul
mov
pop
sbb
lcall
jle
cmp
imul
loopne
lods
jbe
fstps
jbe
dec
push
pop
jmp
xor
cmpsl
fiaddl
stos
jns
push
ljmp
adc
ret
testl
fxam
std
xor
and
or
test
xlat
mov
in
push
xlat
idivb
mulb
add
rcll
xchg
and
mov
xchg
dec
mov
sub
xchg
pop
inc
cmc
insb
cmp
jnp
and
outsb
ficoml
jae
xchg
jns
inc
push
push
ret
xlat
cmc
inc
xchg
xor
call
lret
repz
push
or
test
jo
das
sti
add
sbbw
xor
imul
and
sub
inc
shufps
cmpl
push
lcall
pop
xor
add
xchg
daa
ljmp
scas
insb
mov
xchg
jae
xchg
fisttps
mov
arpl
xchg
add
aad
mov
sar
shl
jae
adcb
cmp
roll
jb
mov
xchg
out
and
inc
mov
xchg
add
mov
fsubrl
mov
mov
jae
pop
push
test
sbb
lods
cmp
pop
out
out
mov
mov
sbb
lds
mov
aad
mov
jmp
arpl
hlt
xchg
mov
shr
mov
jle
xor
cld
xchg
mov
sbb
cli
es
sub
cs
jns
enter
inc
nop
dec
into
dec
sete
test
subb
lea
gs
test
popf
add
mov
stc
rdtsc
into
sbb
push
jle
cmp
mov
cld
sbb
pop
fwait
xchg
jp
out
iret
popl
das
mov
fistl
mov
mov
repnz
dec
add
jge
lds
jno
sahf
repz
out
addr16
shr
sahf
fmuls
fsts
fdivs
mov
fildll
sbb
mov
pusha
loopne
cmp
mov
mov
outsl
mov
dec
dec
ret
loope
push
addb
gs
lret
add
in
test
mov
neg
inc
mov
and
imul
iret
call
subl
pop
inc
repnz
out
push
lods
cmp
lods
and
insb
cld
sbb
jno
pop
gs
xor
mov
adc
jae
mov
jp
jecxz
inc
mov
pop
mov
rolb
mov
adc
dec
mov
adcb
pop
imul
fcmovnu
sbb
imul
icebp
daa
sahf
adc
or
cs
stos
stos
xor
cwtl
mov
inc
ret
lahf
or
loope
xchg
xchg
inc
mov
shll
or
mov
call
fnsave
xchg
aaa
sub
aas
sbb
test
jno
adc
mov
das
mov
pop
jne
stos
in
nop/reserved
mov
cltd
sub
ret
in
jp
jns
aaa
les
push
mov
dec
jp
or
lcall
adc
imul
jle
cmc
mov
push
cs
in
stos
mov
out
xor
add
cmp
dec
jg
mov
adc
insl
dec
test
inc
fwait
movsb
in
adc
into
ja
orl
lcall
pop
in
mov
cwtl
mov
sbb
fs
push
adc
test
in
sub
xchg
lcall
push
push
push
mov
popf
lret
testl
or
push
mov
xchg
mov
add
xor
mov
inc
repz
and
das
jo
out
pop
cmp
pop
mov
decb
inc
mov
mov
push
jp
insl
sub
push
inc
xchg
sub
fnstcw
cmp
sahf
push
shrb
inc
dec
ret
jge
mov
push
jle
bound
bound
dec
mov
jge
scas
out
and
int3
in
push
pop
fs
cmp
push
xor
mov
inc
jb
aad
subl
add
dec
repnz
cli
push
or
aaa
fbld
ljmp
imul
lods
loop
stos
jmp
xchg
dec
pop
mov
or
repnz
mov
daa
mov
popa
xchg
scas
pushf
int
dec
jnp
mov
movsb
dec
push
cmc
jle
sti
cmp
or
movsl
sbb
sbb
jnp
pushf
stos
insl
stos
bndldx
mov
xor
call
in
xchg
loope
mov
outsl
andb
movsb
mov
cli
scas
mov
mov
ret
jns
push
shll
insl
out
loop
push
lock
cwtl
or
mov
loopne
bound
mov
js
shr
lahf
dec
lods
mov
popa
subl
cld
fdivp
pop
stos
xlat
cmpb
jnp
mov
xor
add
fcoml
mov
scas
int
icebp
pushw
iret
aas
rcr
add
test
or
dec
jecxz
jbe
icebp
or
popf
sub
ja
vminsd
outsl
mov
aam
mov
into
int3
out
std
daa
pop
ret
xchg
mov
add
addr16
movsl
adc
into
movsb
popf
add
mov
cmp
or
mov
imul
and
in
jl
out
cs
cltd
mov
bound
and
push
ljmp
fbld
scas
gs
mov
mov
ds
push
xor
sub
rorl
and
lcall
aam
and
jno
bound
sarb
jp
pop
mov
lret
loope
jl
add
mov
mov
scas
push
adc
pushf
in
inc
sbb
enter
sub
ss
jno
js
pushf
jbe
test
ja
jl
insl
or
pusha
or
jmp
lods
dec
movl
scas
inc
paddw
jl
or
lods
adc
add
cmp
add
js
inc
jns
mov
loop
pop
jne
gs
cmpsb
ret
inc
scas
cmp
repz
mov
jae
ja
lret
add
stos
push
iret
mov
jle
pop
mov
or
stos
sub
add
xchg
setp
mov
or
ss
test
jno
mov
stos
daa
mov
sti
cltd
jp
sbb
inc
mov
mov
in
lahf
fisubrl
xlat
push
sub
sti
inc
test
sub
fcom
or
push
pop
add
fs
sbb
add
test
ss
out
or
push
pop
mov
addr16
sub
jo
dec
rolb
dec
and
lock
rcrb
pop
test
inc
cmp
sbbb
cmp
es
out
pushl
shr
jne
jnp
cmc
pop
mov
ret
pop
adc
sbb
add
in
mov
jo
rol
imul
dec
and
xor
add
in
and
loope
mov
insb
inc
xchg
nop
ret
cmpsl
fs
dec
shlb
adc
stos
cld
push
enter
out
cmpsl
xor
and
push
xchg
sbb
and
ds
mov
mov
cmp
scas
cmc
das
jle
mov
jle
xchg
and
pop
lret
sbb
sub
std
push
clc
filds
jmp
cmp
jb
das
es
sbb
lods
mov
test
hlt
inc
js
and
pop
lods
xchg
pop
adc
aad
xchg
bound
mov
cwtl
je
je
rorl
push
sub
test
pop
mov
call
cli
xorb
pusha
xchg
rcrl
cmp
mov
sbb
sub
xor
jp
addr16
mov
loop
or
dec
rclb
daa
fisttpl
popf
cwtl
or
xor
pop
out
xor
rclb
cmpsb
adcb
in
hlt
push
pushf
in
adc
aaa
lahf
out
jnp
cmp
js
pop
nop
sbb
test
jne
aas
dec
and
dec
xchg
mov
cld
stos
movsb
sbb
xchg
sarb
jae
inc
imul
cld
pop
repz
push
push
lods
out
jle
subb
mov
call
dec
repnz
pop
popf
pop
cmp
sbbl
mov
jg
pop
inc
loopne
cmp
lods
sub
xlat
xorb
cltd
sbb
jl
cmp
fimuls
push
push
jecxz
gs
add
cmpb
repz
or
es
loop
mov
stc
inc
lds
sbb
and
clc
sub
insb
pop
inc
cmp
int3
adc
fcoml
pusha
data16
lods
outsb
sbb
xchg
aad
sbb
push
sbb
cmpsb
inc
mov
ljmp
or
mov
dec
outsb
enter
pop
dec
aaa
fnsave
fdivrp
pop
fwait
push
decl
loope
movsb
and
mov
shlb
movsl
pop
fisubl
sbb
push
sbb
pop
inc
jo
mov
add
je
ret
popa
subl
sub
fstps
rorl
data16
inc
addr16
push
mov
cmpsb
arpl
push
adc
add
outsb
in
or
fwait
xchg
movsb
inc
push
lahf
pushf
add
or
movsb
xor
ds
out
aad
popa
cs
cs
xor
cmc
sub
or
out
mov
xchg
jle
sbb
mov
cmp
out
sar
imul
nop
inc
xchg
scas
cmp
aas
scas
ficompl
int3
mov
jbe
scas
fs
jo
fldenv
sbb
hlt
sbb
outsl
popf
mov
scas
test
add
mov
bound
lahf
push
movntps
push
sub
pop
jg
test
mov
xor
es
add
rorb
xchg
mov
jp
loope
pop
inc
repz
fsubl
ficomps
mov
cmp
jl
rclb
jp
pop
outsl
call
xchg
fildl
ja
inc
pop
addr16
repnz
mov
dec
test
or
jne
rclb
insb
out
jp
es
push
jl
jmp
mov
mov
repnz
into
xchg
and
jle
sub
xchg
push
cmpsb
sarb
and
ret
sbb
add
push
xchg
push
dec
daa
insl
lods
xchg
xor
dec
and
mov
pop
adc
mov
mov
mov
je
lods
daa
push
loopne
rorb
mov
sbb
mov
sub
push
das
insb
dec
add
scas
int
cmp
rcl
lahf
mov
int3
lea
jl
fnstcw
push
cmp
sbb
and
inc
imul
mov
popa
cmc
lret
push
mov
inc
jbe
sahf
call
scas
and
daa
inc
push
sbb
adc
nop
adc
scas
xchg
cld
mov
je
out
out
jmp
cmp
adc
push
daa
jns
imul
repz
mov
call
sub
inc
jne
inc
fistpll
xor
arpl
cmp
sbb
jne
shrb
popf
sub
xchg
scas
xchg
insl
dec
ret
in
pop
sti
fstp
mov
and
jmp
je
repnz
rorb
add
notl
fnstenv
jecxz
std
jbe
mov
bound
data16
mov
adc
inc
sub
pop
and
test
enter
insl
in
leave
add
inc
inc
fistpl
push
xchg
xchg
xor
cmp
aas
sub
cmpb
hlt
aas
mulb
jno
dec
jns
and
add
repnz
fpatan
push
sti
mov
shll
test
and
sbb
loopne
bound
dec
aaa
jo
sub
cld
inc
lock
es
roll
mov
loope
and
fists
and
lds
push
mov
xlat
cld
mov
adc
clc
sbb
rcrb
orb
inc
mov
out
jp
dec
adc
call
pusha
in
daa
xchg
push
test
cmp
push
cmpsl
push
mov
pop
jbe
or
dec
dec
testl
das
icebp
out
lret
lret
jo
ja
jnp
fisttpll
movsl
loop
arpl
mov
cmp
in
mov
fstpl
insl
inc
add
mov
repz
add
fs
int
pop
mov
js
ds
mov
push
push
add
push
xor
pop
mov
incb
adc
mov
mov
addl
lret
mov
out
bound
sti
fsub
mov
aaa
xchg
mov
or
sub
push
clc
imul
stos
xchg
inc
test
ret
pop
cwtl
scas
push
mov
and
or
push
aas
cmpsb
jb
shll
imul
xchg
and
adc
xor
push
mov
jo
insl
pop
addl
rorb
aad
mov
sub
aad
jmp
and
push
cmp
xchg
sbb
jb
repnz
inc
loopne
push
lock
lret
iret
mov
fstl
pop
in
rclb
es
and
adc
icebp
addr16
inc
js
fcmovu
lahf
add
fs
scas
jge
popf
enter
in
mull
test
mov
mov
fwait
lods
in
jg
stc
cmp
in
test
dec
and
cmp
jp
and
dec
in
loop
inc
insb
cmp
int
data16
and
ror
push
je
mov
idivb
mov
outsl
and
push
mov
push
mulb
pop
jg,pn
and
sbb
or
popa
mov
leave
push
ficoml
xchg
stos
sbb
mov
inc
sti
adc
inc
adc
or
lock
out
mov
xlat
aaa
inc
xor
rorl
mov
popa
xor
in
push
cmp
adc
and
test
out
pmuludq
adc
xchg
les
mov
adc
inc
fs
sbb
imul
dec
add
repnz
out
inc
gs
insl
mov
out
jb
and
xlat
mov
jnp
pop
scas
add
aam
jmp
pop
loop
cltd
push
loopne
sbb
ds
nop
inc
fidivl
dec
out
or
push
mov
adc
arpl
shlb
jne
cmpsl
ret
adc
and
andb
jne
arpl
inc
ret
and
ror
add
mov
roll
xchg
inc
pop
ja
dec
mov
fsubs
xor
negl
movsb
sbb
loope
inc
mov
xlat
test
mov
adc
pop
insl
cmp
cmpsb
sbb
push
imul
xchg
add
inc
push
movsb
pop
push
jg
lods
sub
lea
and
xor
dec
sti
push
push
mov
mov
pop
pop
bnd
mov
dec
add
jb
adc
xchg
sub
dec
xchg
sbb
fcoml
fsubrs
enter
out
fsubl
mov
jbe
pop
cli
jmp
cmpsl
aad
imul
shlb
rcrb
cmp
scas
and
into
clc
sbb
adc
pop
scas
inc
push
test
call
mov
mov
movsb
xor
lret
lea
les
push
dec
in
jle
mov
outsb
xor
pop
subl
mov
cmpsl
pop
xlat
cmpsl
pop
leave
or
xor
mov
mov
inc
scas
pop
xchg
pop
adc
stos
pop
mov
and
int
cmp
fimull
dec
stos
pop
pop
add
cld
xor
addl
cmp
mov
push
testb
leave
insl
sub
sbb
cld
xchg
push
repnz
cmp
inc
jne
mov
and
mov
mov
loop
adc
mov
jno
rorl
mov
imul
sub
push
push
mov
pushf
int
hlt
sub
mov
and
sub
sbb
fistpll
in
and
inc
pop
addb
mov
or
inc
mov
pop
push
insb
lea
leave
xchg
push
and
out
stos
pop
mov
xchg
jns
cmp
push
mov
sysexit
jno
mov
cmp
pavgw
jb
xchg
cld
enter
daa
jp
push
mov
push
mov
xchg
int3
daa
jle
mov
test
lcall
pop
stos
push
and
mov
and
insl
xchg
cmp
icebp
and
and
movsl
lods
dec
addb
pop
cwtl
mov
or
xor
int3
sub
push
pop
mov
add
xchg
pop
cmc
shlb
mov
mov
xor
sti
mov
test
pop
cmp
jg
pop
mov
or
cmp
fdivr
sbb
les
mov
cld
or
sbb
insb
jno
ret
lahf
pop
cmp
imul
mov
rclb
jno
xchg
pop
add
sbb
mov
lret
in
dec
xchg
lret
adcl
out
repz
mov
jge
or
or
xchg
out
adc
daa
insl
loop
ja
lret
inc
jecxz
lcall
mov
subb
test
xor
adc
mov
mov
or
in
dec
lcall
fstpl
ss
rorl
ss
imul
push
or
xchg
cmpsb
push
in
cmp
push
mov
filds
pop
std
sahf
lret
pop
fs
ja
push
adc
xchg
adc
repz
scas
adc
cli
les
mov
clc
test
and
or
pop
adc
bound
sbb
fnstenv
push
dec
push
insb
popa
sub
stos
out
sbb
in
es
ret
jnp
cmp
push
dec
cmp
pop
mov
loopne
xchg
pushf
xchg
xor
xlat
int3
shll
insb
sbb
mov
xchg
or
xor
call
out
cwtl
fimuls
cmpsl
popf
popf
daa
dec
mov
pop
adc
jns
lcall
add
jp
inc
adc
setg
xchg
mov
mul
sti
repz
jmp
jno
fnsave
mov
nop
pop
mov
mov
jno
insb
lods
in
push
shlb
scas
add
jne
pop
dec
push
sub
fcoml
inc
out
movsb
cwtl
je
aad
jmp
jle
mov
xchg
sub
and
or
sub
push
push
pop
shrl
inc
int3
sub
push
test
or
sub
es
fidivrs
ss
and
mov
add
stos
test
mov
pop
pop
add
lcall
in
in
gs
sbb
xlat
ja
jnp
sbb
lret
lea
sti
or
popf
out
lret
and
mov
jb
loopne
jp
mov
insl
add
pop
adc
shl
sub
out
lods
les
cs
das
in
repnz
pusha
push
in
lods
imul
sar
jmp
fildl
cmpsl
sub
icebp
fistps
adc
popf
outsl
xor
test
add
add
out
add
jnp
adc
insb
xchg
xchg
loop
icebp
sbb
popf
mov
xor
ja
xor
cmp
rcl
mov
clc
jg
gs
xchg
jg
push
and
out
push
cmpsl
fiadds
mov
xor
cvtsd2si
xchg
dec
mov
mov
mov
rcr
call
add
push
or
dec
enter
mov
lret
lcall
aas
mov
repz
pop
add
cmp
lret
ret
movsl
jmp
push
imul
outsb
sahf
test
out
xchg
mov
xor
sub
in
insl
jb
jmp
scas
push
or
fs
jnp
nop
in
and
xor
sbb
adc
xor
mov
loope
arpl
out
orb
push
jg
inc
idiv
fmul
add
inc
out
aad
push
pop
pushl
fdivrl
ret
push
cld
jb
lock
inc
popf
or
jp
dec
mov
and
mov
xchg
ja
insb
fcomp
cmpsb
aaa
nop
aas
xchg
xorl
push
aam
int
mov
jo
adc
stos
imul
inc
imul
xchg
sahf
movsl
mov
mov
push
les
inc
xchg
xor
xchg
les
adc
sarl
pushf
mov
call
and
sbb
pop
adc
cltd
pop
pusha
je
mov
push
popa
fdivl
les
test
pop
outsb
stos
xlat
sbb
cmp
lret
mov
or
popf
jp
pop
push
dec
mov
jmp
lahf
lds
mov
mov
or
shll
dec
gs
mov
lret
dec
mov
xchg
add
sub
adc
and
and
pop
inc
inc
sbb
add
adc
jb
inc
sub
insb
stos
inc
sbb
mov
fildl
xchg
mov
jne
inc
and
jle
scas
pop
adc
dec
lds
mov
add
shrb
insb
sti
mov
inc
add
mov
fs
les
pop
out
pop
gs
pop
into
pop
cmpsb
setp
jae
arpl
loope
sbb
sahf
stos
into
call
adc
test
icebp
xor
imul
mov
inc
or
lret
ret
mov
dec
rcll
cmpsl
pop
mov
out
xorl
add
fcmovu
insb
add
pop
rsm
lods
pop
and
jo
lcall
adc
repnz
inc
mov
and
lea
push
xor
pop
in
and
test
faddp
ja
aaa
add
jle
mov
add
das
pop
cmp
mov
cmp
addb
and
fcompl
dec
test
aam
shll
xor
xlat
xchg
or
sub
ds
sarl
or
xor
insb
jmp
inc
aad
dec
add
sbb
test
lret
negl
into
ss
sub
add
jae
cltd
dec
mov
rorl
sub
out
mov
lret
das
mov
sub
or
lret
std
or
or
jle
dec
jnp
xchg
pop
pop
sub
sbb
adc
in
mov
imul
aad
or
sbb
movsl
cmp
lea
sub
mov
push
lods
and
sahf
mov
sbb
push
push
in
ja
lods
and
clc
test
jge
into
es
out
pop
pop
add
add
dec
arpl
sti
xchg
mov
lock
push
pop
bound
data16
pop
scas
adc
incb
test
xor
add
mov
add
mov
lods
out
dec
sar
inc
xchg
adc
jp
sub
jp
notb
cmpsl
and
push
daa
clc
or
jb
push
jno
jns
inc
mov
bnd
push
test
fmull
das
jle
mov
fs
ret
or
es
std
adc
xchg
xor
xor
inc
cld
repnz
cmp
scas
sbb
loope
cmp
rolb
dec
int
add
jmp
jle
mov
addr16
movsl
mov
push
sbb
inc
stos
mov
psubw
xor
push
push
inc
pushf
outsb
cmp
fstpt
fdivs
stc
jg
imul
inc
gs
pop
xor
notb
add
jne
in
hlt
mov
push
sbb
je
mov
fisubrs
inc
nop
icebp
mov
cltd
or
notw
movl
std
shrl
cltd
push
leave
gs
clc
sub
pop
std
add
cmp
pusha
popf
inc
andb
mov
fsubrp
push
sub
inc
mov
add
enter
pop
aad
pusha
mov
outsl
xchg
sub
jae
push
push
mov
lock
and
or
cltd
roll
fldl
movsl
jbe
pop
pop
cmp
add
jno
les
fisttpll
or
in
scas
lods
inc
rclb
lret
jl
mov
cmp
fsubrs
rorb
dec
jb
and
xchg
das
push
mov
mov
mov
lds
xchg
fsubs
mov
sbb
fwait
mov
lahf
nop
lcall
test
jo
sbb
xor
stos
rcrl
mov
push
rolb
push
cwtl
outsb
test
aas
cmp
stos
imul
sub
cmp
jnp
enter
sbb
xor
test
sub
lea
jecxz
xor
inc
push
test
cld
mov
das
loop,pt
jns
lret
roll
and
push
and
cs
mov
cmp
sbbl
pop
lcall
dec
jge
pop
push
inc
incb
repz
int3
add
pop
lods
test
mov
cmp
jo
xor
dec
mov
movsb
mov
mov
jae
or
xor
or
jmp
push
sub
jg
in
jnp
notl
mov
fwait
jge
or
pop
stos
or
cmc
gs
mov
mov
fistps
nop
iret
fwait
les
cmp
ficomps
push
jmp
mulb
in
out
ret
mov
arpl
inc
cmc
mov
ret
cli
mov
insl
leave
lods
arpl
xabort
movsb
pop
in
ja
orb
xchg
pop
fs
sub
sub
pop
jp
push
fwait
cmpsl
repz
inc
fs
out
int
or
push
push
push
adc
cld
mov
jle
les
cmp
mov
inc
fs
jg
inc
daa
aam
std
shll
push
inc
out
pop
mov
stc
lds
call
into
loopne
jne
add
push
push
lret
inc
push
dec
xchg
sub
js
mov
aam
inc
hlt
lds
jl
cmc
sbb
jecxz
out
or
movsl
out
jmp
insb
xchg
jmp
ds
andl
mov
cld
mov
cltd
mov
mov
add
inc
add
lret
mov
sbb
nop
ljmp
adc
mov
fwait
jmp
lret
xchg
and
and
loope
jle
jmp
inc
push
in
cld
pusha
inc
inc
insl
stc
out
jns
jp
sub
outsl
fists
in
add
jbe
daa
sahf
outsl
mov
fildll
adc
mov
addr16
cmp
sbb
jg
mov
jbe
mov
popf
ds
daa
push
clc
mov
jge
xchg
loopne
inc
enter
movsb
call
sbb
jb
addr16
das
dec
sahf
pop
xor
xchg
mov
mov
pop
xchg
outsl
lds
jecxz
loopne
cld
sbb
sub
roll
outsb
xchg
mov
cmc
fsubrl
daa
cwtl
sarl
xchg
jmp
xchg
icebp
cmp
pusha
int
insb
scas
inc
movsb
out
inc
out
adc
testb
pop
or
cmp
mov
mov
xor
push
gs
sub
mov
jecxz,pt
add
into
jl
mov
mov
hlt
loopne
mov
push
arpl
sbb
jb
popf
clc
inc
mov
cmp
xor
xor
lea
xor
mov
and
mov
pop
pusha
mov
or
sub
lcall
pop
mov
xor
mov
or
jne
cmpsb
cmpsl
push
fdivrs
loopne
cmc
dec
stos
subb
xchg
sti
push
cmp
xchg
lret
adc
pop
fisttpl
out
push
mov
inc
mov
jne
or
addr16
mov
aad
es
loop
mov
xlat
xor
xchg
dec
or
mov
xor
aam
cltd
divl
pushf
lcall
cmp
mov
mov
mov
lret
fdivrl
test
xchg
pop
mov
in
call
out
jno
xchg
push
ja
icebp
mov
shrb
sbb
imul
sbb
pop
fstpt
rcrb
popa
rorb
loop
push
sub
sbb
sub
mov
gs
orl
outsb
mov
pushl
insb
popf
stc
xchg
or
push
rcll
repz
jl
mov
push
sbb
sahf
lahf
fiaddl
sbb
pop
xchg
pushf
popa
mov
xor
mov
push
mov
and
pop
or
mov
lret
pop
mov
shrb
cmp
push
arpl
into
std
movsb
and
outsl
push
fcmovnbe
out
mov
dec
pop
aas
rcrl
loope
cwtl
out
mov
fcomi
int3
leave
xchg
sbb
fsts
ret
xchg
push
mov
xchg
xor
jp
das
int
jne
ljmp
sbb
sub
mov
je
loope
jbe
mov
or
adc
movsl
sub
ret
sub
pop
jnp
add
fisttpl
mov
pop
imul
dec
mov
lret
idiv
add
popf
add
out
and
xor
inc
inc
outsb
adc
mov
daa
jne
jl
xchg
push
cmpsl
mov
sub
lret
ret
push
jp
outsb
movsl
lret
mov
dec
jl
adc
lea
cmp
adc
movsl
sub
mov
xlat
fs
movsb
cwtl
xchg
imul
shlb
or
andb
jae
or
adc
dec
sub
shrb
xchg
test
inc
or
clc
mov
push
sbb
xor
paddd
xchg
leave
sbb
pop
mov
mov
fiadds
lds
ret
push
mov
subb
stc
sub
sarb
ljmp
das
pop
mov
test
loope
mov
shrb
in
pop
aas
adc
int3
cmpsl
iret
arpl
data16
jnp
mov
movb
mov
les
mov
js
pop
imul
and
lock
rcrb
std
or
or
and
mov
hlt
sahf
fwait
adc
mov
lock
inc
notl
ret
cs
sub
sub
dec
in
and
jno
loop
aas
dec
int3
dec
movsl
add
pop
bound
mov
cmpsb
sub
inc
ficompl
adc
xchg
into
sub
inc
jb
fst
mov
movsb
nop
roll
xlat
out
pop
mov
mov
das
xorl
btl
jle
dec
cltd
roll
xor
int3
cwtl
in
push
mov
push
daa
es
jmp
lds
lods
aam
lods
pop
test
sar
push
sub
push
or
fucomp
mov
movsb
jns
jl
sbb
or
ret
cmp
lods
dec
push
push
push
adc
or
jge
cmp
aas
add
cmc
dec
psraw
sbb
lods
out
pop
inc
and
pop
sub
dec
in
incb
les
mov
or
cwtl
fidivrs
push
iret
int3
or
add
adc
shl
outsb
in
mov
mov
ds
inc
xor
mov
or
inc
lcall
jno
test
and
dec
xor
dec
push
orl
adc
jle
cmp
int
jecxz
addb
sbb
out
shll
jle
xchg
fwait
xchg
inc
cmpsl
fsubs
fistps
pop
mov
xor
arpl
sub
mov
imul
xchg
dec
add
repz
orl
mov
cmp
test
out
ret
push
pop
rcrb
enter
and
ss
fstpl
dec
in
fdivp
imull
xchg
in
xor
inc
fidivs
sub
loop
into
movsb
jecxz
cmc
and
pop
ja
xchg
pop
inc
ret
int
inc
int
pushf
rorb
scas
ret
mov
mov
pusha
xchg
test
mov
sbb
and
cmp
mov
int3
or
xor
shlb
pop
mov
out
push
xchg
scas
int3
dec
lret
xchg
xchg
pop
add
xchg
add
add
pop
insb
jge
cmp
int
xchg
rclb
mov
or
xlat
lret
mov
rol
out
cmp
pop
out
stos
mov
movsl
sbb
push
mov
imul
mov
test
mov
pushf
insl
in
into
add
and
mov
ud0
negl
cmpsb
add
sbb
test
sub
pop
cmp
bound
and
je
cltd
mov
ljmp
dec
or
xchg
fistl
not
sub
cwtl
loop
imul
addb
xor
push
lds
outsb
sti
sbb
lea
adc
fwait
xchg
or
enter
pop
data16
mov
xchg
jg
pop
fimuls
mov
loopne
cltd
push
mov
ret
sub
or
dec
dec
inc
sub
movb
psubd
and
pusha
inc
xchg
leave
mov
sub
mov
pusha
insl
pushf
arpl
sbb
xlat
sti
hlt
es
fidivrl
data16
push
ja
lds
gs
hlt
cmp
das
dec
icebp
xchg
icebp
dec
xor
std
mov
mov
icebp
jg
mov
pop
dec
mov
ss
roll
cmpsl
lods
and
add
push
cmpl
xchg
cmp
bound
xor
or
ljmp
add
repnz
test
imul
jmp
mov
add
imul
push
shlb
inc
sub
les
call
lds
sub
push
or
lea
push
lock
int
popa
cmp
adc
ja
mov
pushf
fdivrs
std
out
loop
in
in
dec
cmpsb
popa
inc
sbb
fbld
xor
mov
sbb
or
sub
insl
and
push
xchg
cmp
sub
in
int
loop
and
xchg
pushf
clc
mov
adc
or
inc
add
int
fdivrl
inc
sbb
shl
mov
xor
cld
or
xchg
or
push
imul
push
lock
pop
dec
mov
test
dec
mov
dec
ret
mov
and
gs
pop
aas
and
or
stc
mov
ljmp
lahf
jle
rclb
mov
xor
lods
leave
in
repz
std
xchg
jnp
jmp
and
xchg
push
jbe
scas
imul
inc
repz
sub
jg
fsubl
int3
sahf
sub
test
repnz
push
mov
jle
jbe
test
inc
test
cmpsl
mov
lcall
cmc
mov
mov
sub
orb
out
jmp
ret
rcll
loop
call
loop
lret
shll
cmc
add
xorl
pushf
leave
enter
clc
fs
jle
std
lcall
inc
pop
testb
mov
cli
rorb
mov
aam
pop
sbb
in
cmp
insb
stos
push
adc
add
mov
or
dec
add
das
popf
xlat
jmp
cmp
ret
pop
loop
pop
cmp
pop
mov
ficomps
inc
xlat
decb
mov
mov
push
pop
lods
ret
pop
fidivrs
lahf
cmp
or
xor
int
jle
scas
and
pop
sti
mov
fdivs
js
test
movsl
xchg
xchg
jnp
xchg
imul
popa
test
cmp
push
add
cmpsb
jge
es
and
insl
cmp
test
or
out
mov
outsl
icebp
pop
sbb
xchg
dec
fwait
in
and
sub
push
jae
push
cmpsl
cli
or
ss
xchg
lods
loop
ds
cmp
xor
daa
movsb
addr16
jle
inc
mov
push
or
dec
insl
xor
or
sbb
loopne
add
sub
sub
pop
or
or
arpl
jae
ret
jle
mov
repnz
inc
out
cvtpi2ps
push
xchg
xor
rol
mov
ret
imul
outsb
add
jnp
jns
in
lret
ja
jb
jle
mov
mov
cmp
sub
dec
in
and
and
mov
dec
hlt
adc
fxch
mov
adc
xor
cli
or
iret
pop
loopne
ret
push
add
fcomip
enter
lods
shld
mov
ror
incl
lods
cli
ret
rcr
movsb
rcl
xchg
lret
xor
lods
fmull
cmp
mov
cmc
inc
and
aas
xchg
pusha
pop
clc
jmp
sbb
dec
fistpl
clc
mov
pop
mov
cltd
fimuls
xchg
adc
aad
outsb
xchg
and
pop
jle
xchg
xor
jmp
adc
add
jge
rorl
dec
xor
out
jmp
stos
cmp
jle
and
mov
clc
sub
mov
stos
mov
jmp
ja
pusha
sbb
sub
dec
leave
int
mov
add
ljmp
adc
dec
daa
sets
or
lods
push
mov
dec
fwait
add
call
shrb
xchg
inc
sbb
sbb
ret
subl
test
xor
or
cmpsb
or
sbb
xchg
xchg
out
push
mov
fwait
cld
jb
pusha
test
inc
add
rcrb
imul
fcoms
lcall
push
loope
xchg
mov
mov
sub
mov
clc
mov
push
lock
mov
shlb
andb
sbb
negl
mov
xchg
xchg
add
rcrb
xchg
adcb
fiaddl
xor
dec
and
adc
jno
push
les
js
repz
sub
call
sub
nop
movsl
push
push
out
out
push
rcrl
mov
push
jmp
into
sub
out
popf
fistl
dec
push
inc
dec
lds
cmpsb
xlat
cs
mov
aaa
stos
in
aaa
mov
sub
mov
mov
fistpl
out
out
adc
and
and
pop
jns
shrl
inc
push
xchg
lds
cmp
xlat
je
dec
push
mov
lods
add
out
xchg
add
dec
or
decl
fstl
and
shll
insl
and
inc
leave
sarl
dec
pop
inc
pop
nop
loope
sub
push
sarb
mov
push
cmpsb
push
adc
cmp
cmp
fidivrs
in
les
in
nop
iret
mov
cs
je
adc
icebp
pop
or
mov
cmp
es
leave
incl
popa
jnp
insl
aad
nop
mov
fimuls
inc
xlat
push
stos
popa
sarl
popa
mull
test
mov
aas
push
pop
jo
xchg
dec
mov
mov
insb
inc
dec
call
mov
mov
fwait
mov
shll
push
fistl
add
and
notb
or
dec
mov
push
scas
lea
in
pop
fcmovbe
outsl
push
pop
xchg
cmp
cmc
xchg
xor
int
push
js
mov
xchg
test
and
std
lret
or
mov
mov
push
ret
fs
in
rorl
mov
addr16
movsb
aas
mov
fdiv
jb
pop
dec
xor
add
shr
divb
lds
jle
dec
push
bound
out
sub
push
sbb
dec
out
addr16
into
push
shll
movsl
cmp
mov
scas
fimuls
dec
mov
sbb
stos
int3
sbb
loope
lahf
roll
inc
out
dec
jmp
push
dec
scas
js
arpl
adc
pop
sbb
cmp
xchg
sub
inc
out
ljmp
push
ficomps
inc
push
lds
cmpsl
xor
sarl
fsubp
dec
add
cmp
adc
push
out
mov
arpl
add
fdivrs
rorl
out
cmpsl
cmpsb
mov
mov
imulb
aad
dec
adcb
mov
nop
ds
mov
cmp
sub
mov
or
movsb
and
and
or
mov
push
mov
dec
mov
mov
xchg
sub
mov
push
mov
push
lock
dec
xor
inc
adc
jg
lret
sbb
xor
push
bound
xchg
rorb
je
aaa
cmpsl
sbb
cmp
lods
scas
jg
cmp
cwtl
xchg
cmp
push
out
pop
and
dec
xor
pusha
mov
sti
movsl
and
xor
rorl
and
hlt
lock
jae
xchg
push
fsubr
setl
mov
popf
rcr
mov
std
sbb
jne
add
and
push
lret
xor
in
pop
ja
pop
nop
cltd
mov
mov
gs
xchg
daa
xchg
jecxz
or
push
jnp
mov
cld
cmpsb
mov
mov
mov
and
mov
mov
imulb
fnstsw
imul
mov
sti
dec
addr16
cmp
cltd
shrl
push
loope
or
sub
jg
dec
sahf
sub
mov
xchg
mov
xor
aam
jb
cltd
movsl
out
xchg
sbb
shr
mov
mov
and
xor
lods
inc
inc
sub
add
fwait
inc
stos
or
xchg
mov
lods
outsb
cli
mov
adc
cmp
mov
mov
mov
mov
fdivrl
stos
fucom
or
test
xchg
xchg
and
sub
adc
pop
insb
mov
fstp
mov
mov
enter
mov
push
imul
inc
in
nop
mov
and
mov
xchg
sub
inc
or
mov
in
jb
sub
push
lret
imul
sahf
mov
rcrl
in
xchg
pop
adc
mov
aam
outsb
jmp
jb
mov
in
inc
adc
and
dec
adc
and
mov
daa
not
mov
out
outsl
mov
xchg
lds
push
outsl
jbe
mov
test
in
sub
js
cwtl
inc
inc
and
dec
test
adc
and
fwait
push
xor
or
inc
sti
lcall
push
mov
lds
xchg
push
mov
mov
dec
mov
and
fdivs
jl
cs
mov
test
mov
xchg
push
vpsubsb
add
jo
mov
mov
loopne
fwait
sub
sub
dec
mov
lret
adc
cmp
jmp
jmp
rcll
pusha
xchg
mov
add
mov
movl
ja
push
cmp
add
out
orl
pushf
add
xchg
add
xchg
mov
roll
mov
orl
lds
rcrb
jns
jmp
cli
in
or
test
cs
shlb
idivl
or
mov
dec
fldcw
out
js
inc
and
mov
push
xor
mov
cld
testl
ret
sbb
mov
jge
fadd
pop
fdiv
add
fdiv
add
jl
cmp
mov
mov
jl
imul
in
xor
pop
adc
jno
mov
inc
sub
rclb
in
call
xor
mov
popf
in
sub
int
jmp
xor
pop
dec
xchg
aad
jno
xchg
lock
mov
cmpl
push
in
push
push
pop
xor
lea
xor
insl
adc
push
bswap
mov
jo
pop
cmp
test
mov
lret
mov
lret
push
insl
repnz
sub
pop
and
mov
sub
lahf
sbb
fsubrs
xor
push
push
dec
insl
mov
xor
imul
mov
pusha
cmc
jns
sahf
push
and
jno
xchg
dec
mov
jg
sub
sbb
pop
ja
repz
sub
into
es
je
dec
cmp
imul
aam
jle
pop
jle
loop
pusha
scas
jne
fwait
sub
jnp
je
inc
in
into
xor
push
sub
pop
pusha
in
sub
mov
sub
xchg
shl
push
adc
add
push
into
shlb
pop
mov
xchg
enter
inc
sbb
dec
sbb
aam
push
ret
in
pop
pusha
repz
stos
icebp
mov
pop
adc
mov
cld
inc
add
data16
iret
and
dec
pop
cwtl
int
mov
cmpsl
in
rclb
scas
jmp
mov
xchg
or
dec
in
mov
outsb
mov
jge
iret
jge
push
push
daa
inc
movsl
sarb
sub
int
cs
mov
aam
daa
daa
jg
inc
sub
add
dec
mov
push
mov
add
xor
push
popa
mov
test
jge
js
scas
cmp
jecxz
out
jle
push
gs
jl
inc
cmp
sub
cmpsl
out
push
or
push
or
enter
lret
adc
iret
arpl
sbb
out
aas
xor
cmpb
mov
mov
xchg
cltd
xchg
pop
xor
push
mov
jmp
dec
mov
rcr
adc
mov
adc
filds
test
scas
adc
sub
repz
in
out
outsl
insb
loope
sub
iret
jnp
add
ret
jnp
fildll
push
push
push
mov
imul
inc
mov
inc
mov
mov
jmp
cmpsl
cltd
ficoml
div
inc
in
test
inc
adc
ror
shlb
or
arpl
xor
daa
out
lret
movsbl
sarl
xor
jmp
jno
int
xor
movsb
mov
dec
sahf
aad
mov
loope
xorl
lret
int
lcall
xor
lds
out
xlat
mov
inc
data16
push
adc
ljmp
repz
inc
fsts
xor
inc
xlat
dec
jle
xor
mov
pop
scas
outsl
or
dec
int
inc
data16
inc
gs
out
ja
fs
lods
or
mov
pop
add
mov
and
xor
call
push
int
or
mov
notb
sbb
dec
fwait
test
adc
sbb
cmpsb
add
and
adcb
movsb
inc
orl
cmpsl
xor
pusha
ss
popa
lods
insl
dec
jbe
mov
pop
xor
rcrl
adcb
inc
and
xchg
xchg
ja
in
dec
dec
nop
add
lds
cli
jmp
pop
sub
dec
scas
dec
and
arpl
cltd
pushf
mov
mov
push
push
dec
push
jecxz
and
data16
addr16
mov
leave
fsubrl
push
xchg
testl
cmp
xchg
mov
and
iret
inc
ret
outsl
xchg
adcl
add
sub
dec
jae
outsb
sahf
pop
sub
incb
jmp
aam
scas
nop
mov
sub
int
lret
cs
nop
push
js
push
mov
mov
lods
push
ror
stc
inc
stos
inc
cmpsb
jecxz
dec
arpl
addr16
in
outsl
sub
inc
addl
inc
mov
es
ret
orl
stos
jle
xchg
push
adc
xchg
test
movsl
adc
inc
sahf
ret
mov
ret
xchg
xchg
or
jg
rcrl
jbe
test
push
dec
push
leave
lahf
loope
sbb
into
mov
mov
sbb
ja
pop
stos
xor
iret
out
adc
jo
cmp
in
cmp
cmp
hlt
xchg
shl
popa
mov
rorl
loopne
pop
loopne
ret
xor
push
jno
xor
ffree
adcl
ja
data16
inc
jl
jmp
sbb
push
outsb
xlat
enter
repz
mov
xchg
cmp
push
and
push
dec
mov
cmp
data16
addr16
psllw
adc
dec
popa
dec
jle
pop
mov
int
outsb
pop
daa
rorl
jno
repnz
pop
pop
clc
mov
mov
shl
sbb
outsb
sbb
aad
daa
enter
push
movb
sbb
int3
cmp
mov
xchg
enter
and
orl
das
cmc
or
and
jg
dec
push
dec
mov
dec
xchg
clc
stos
cli
aaa
shr
enter
lock
in
xor
inc
lock
in
pop
shlb
mov
dec
mov
ja
es
push
inc
xchg
mov
stc
adc
cmp
push
jp
test
aad
repz
std
fstps
aad
rcr
lret
into
fisttps
pop
negb
jae
push
popa
loope
xor
insl
loopne
jecxz
sarb
xchg
add
or
jo
and
lock
pop
xchg
or
and
pop
cmp
addl
incl
mov
test
fcom
cmp
loopne
test
add
scas
stc
std
and
pop
lcall
out
shr
lods
sbb
leave
jmp
aad
pop
sbb
rorl
es
popl
push
test
mov
xchg
das
xchg
and
ss
mov
scas
add
icebp
in
fimuls
ret
ss
dec
js
jb
xor
loopne
enter
mov
mov
adc
push
pop
fsub
and
movsb
mov
xchg
mov
in
shll
sbb
jg
cwtl
sahf
mov
xor
mov
daa
jns
mov
outsb
shll
mov
inc
sahf
sub
xchg
xor
push
cmp
push
mov
push
xchg
out
lock
int
jle
mov
xchg
fwait
lea
mov
mov
xchg
repnz
leave
jecxz
and
pop
scas
jmp
jmp
and
pop
inc
loope
dec
dec
mov
pop
push
fimuls
jmp
mov
inc
std
cmp
imul
and
add
ss
pop
cwtl
mov
out
leave
pop
lods
scas
inc
adc
cs
mov
or
jns
push
xchg
cmpsl
jnp
pusha
jo
jno
iret
add
dec
sbb
push
jmp
test
fcomps
mov
imul
aam
xlat
leave
mov
jns
push
in
pop
sbb
sub
mov
mov
xchg
outsb
aas
mov
and
and
adc
or
icebp
std
add
insl
mov
inc
dec
cli
xchg
jnp
idiv
add
push
gs
or
or
add
xchg
lods
mov
data16
ret
jno
adc
lds
leave
jg
jbe
std
icebp
lcall
aas
test
pop
inc
popf
mov
jl
jg
ljmp
sub
pop
outsb
out
add
shl
xchg
cltd
rolb
mov
daa
and
inc
mov
insl
into
cmp
sarb
jg
aas
sub
loop
stos
xsha256
cmpsb
adc
adc
push
mov
pop
xor
mov
add
push
iret
into
xchg
dec
lods
fstps
gs
fsubrl
stos
jg
sahf
mov
into
push
roll
out
mov
mov
packssdw
fstpt
je
shll
mov
cmp
shrb
jl
fdivrs
mov
inc
jecxz
adc
mov
push
cld
cs
mov
xor
lret
xchg
and
pop
movlps
push
pop
mov
in
jns
inc
and
cmpsb
push
adc
pop
imul
aam
cld
test
xlat
dec
rcr
stos
and
andb
popa
lahf
idivl
dec
ljmp
xor
push
lcall
mov
repnz
pushf
test
jecxz
orl
fstl
je
pop
fcmovnu
dec
mov
enter
mov
sbb
or
inc
dec
jge
push
in
add
imul
stos
stos
jns
xchg
sahf
xlat
aad
sbb
hlt
fwait
ja
pop
jbe
dec
scas
and
dec
scas
leave
jbe
pop
dec
xchg
xor
jne
cld
push
push
or
sub
dec
lock
cmp
gs
mov
xor
adc
fldcw
lret
inc
jns
push
add
mov
pop
pop
iret
data16
int
cmpsb
lcall
push
adc
sbb
in
in
jns
in
fldpi
into
jo
mov
jmp
sub
sbb
xchg
popf
test
ss
xor
icebp
mov
add
mov
xchg
push
mov
shl
insb
shll
pop
mov
push
insl
push
mov
push
arpl
push
cld
xchg
add
stos
mov
enter
mov
clc
imul
mov
insb
add
mov
sarb
and
dec
pop
xchg
int3
pop
daa
mov
xchg
dec
call
mov
fwait
xchg
add
leave
loop
xor
jmp
scas
sbb
hlt
ljmp
in
xchg
lret
add
pop
lcall
int
lds
idivb
mov
je
in
xor
outsl
lock
popa
popf
leave
dec
scas
add
sbb
ljmp
xor
mov
jns
or
imul
sbb
ret
adc
jl
push
test
sub
and
inc
mov
mov
mov
jl
dec
add
ret
xchg
push
and
jne
scas
hlt
inc
sub
dec
cmp
cmp
mov
rclb
xchg
stos
in
out
or
jl
mov
mov
sub
xor
add
ficomps
mov
js
xchg
subl
js
xor
in
shll
or
mov
xor
pusha
es
loope
cmp
add
or
xchg
jbe
jne
orl
xor
mov
adc
push
or
roll
sub
push
sahf
push
mov
add
pop
cmc
cmpsl
pop
push
mov
mov
bound
pop
aas
push
test
xchg
sbb
fs
inc
or
jns
clc
test
jo
cmp
enter
push
filds
movsb
pushf
mov
and
xor
mov
push
mov
jmp
add
or
mov
in
mov
or
push
xchg
xchg
stc
ret
popa
sub
dec
out
jbe
mov
mov
cltd
sbb
mov
adc
mov
mov
int3
gs
mov
mov
jle
cmpsl
dec
pop
shr
add
movsb
or
in
imul
inc
movsl
dec
daa
adc
out
js
push
enter
cmp
push
call
lahf
roll
stc
scas
sub
inc
call
mov
repnz
dec
jecxz
adc
stos
std
push
lret
flds
xchg
cmp
stos
sbb
ret
xchg
and
xor
mov
rorb
push
mov
pusha
ss
mov
aaa
ss
jnp
xchg
and
ja
movsb
cmp
mov
or
push
sarb
inc
push
push
notl
hlt
sub
shll
pop
inc
outsb
pop
adc
lret
dec
xor
scas
pop
dec
jae
in
loopne
fst
jecxz
jp
sbb
loope
lcall
icebp
inc
ss
ja
into
les
outsl
push
and
sub
jno
test
push
mov
daa
in
pop
ds
inc
or
sahf
sub
xor
cmp
push
jbe
mov
adc
add
mov
into
inc
push
sbb
loope
sbb
cbtw
shrb
pushf
mov
ss
add
ret
fwait
ljmp
in
and
mov
jo
add
in
sbb
sahf
sub
andl
into
dec
xor
testb
in
out
rorb
xor
push
addl
pusha
shll
jae
mov
idivb
es
pop
jmp
and
inc
push
lock
jg
pushf
mov
icebp
leave
or
xchg
add
dec
jae
imul
xchg
sahf
sub
stos
dec
in
inc
test
aas
mov
jmp
fisubrs
ror
das
sub
jno
fistpl
out
std
loopne
lahf
cwtl
push
pushf
shlb
sub
sahf
incl
inc
inc
mov
add
jle
mov
in
nop
loopne
into
scas
in
mov
jnp
int3
pop
jle
inc
mov
add
call
outsb
cli
jecxz
sahf
daa
dec
mov
mov
xor
sub
sub
repz
shlb
and
scas
inc
enter
loope
sbb
adc
adc
pop
das
and
fwait
xchg
add
ret
sub
fnsave
fidivl
add
sub
ret
sbb
addr16
icebp
sbb
push
cmc
xchg
add
lcall
cmp
mov
popf
rorb
jecxz
cmc
arpl
stos
stos
loope
mov
lock
mov
xlat
and
inc
inc
cmp
and
insl
aaa
imul
xchg
jbe
jmp
fnsave
fsubrl
insl
mov
pop
mov
call
int3
mov
xor
jg
arpl
add
in
ljmp
cmp
std
ret
fstl
ret
and
call
xchg
jmp
pusha
sbb
stc
xchg
clc
fsub
movsl
call
sub
push
cmp
cmp
mov
inc
cmp
mulb
mov
lds
pop
or
mov
add
and
lea
incl
cmp
pop
mov
ret
push
jbe
mov
dec
mov
pushf
dec
pop
jl
add
or
pop
and
popf
fdivp
sahf
push
imul
jnp
int3
pop
imul
fiadds
imul
inc
push
mov
cmpsl
leave
mov
pop
fsubs
push
push
ljmp
repnz
sub
cwtl
mov
out
push
fmull
jo
add
movsb
dec
cmp
mov
sbb
mov
repz
enter
sbb
cmp
mov
inc
xchg
jnp
xchg
pop
jne
adc
aas
das
add
push
xchg
lds
pop
mov
push
jo
push
adc
out
inc
aad
cmp
xchg
jo
mov
ret
out
mov
jl
jge
add
out
imul
imul
adc
push
sub
fwait
outsb
popa
repz
and
mov
paddusw
cmp
push
outsb
jnp
add
and
and
and
push
cltd
les
lods
aaa
es
jle
fwait
pop
mov
mov
sbb
cmpsb
and
stos
sarb
pushf
xchg
cld
mov
xor
fwait
rclb
rcr
aam
stc
ret
sbb
adc
rcrb
fst
jns
pop
fiadds
popa
cmc
xor
loop
cld
cmp
loop
mov
push
cmp
jl
repz
jno
test
pop
adc
repz
std
cmp
fs
or
fcom
sti
mov
jne
xchg
pop
mov
pop
lods
sti
ror
fwait
xor
adc
inc
mov
jne
leave
imul
jo
sub
adc
sub
rcrl
cwtl
ljmp
enter
outsb
cwtl
into
sub
lahf
mov
pop
sub
inc
ret
mov
in
jge
stos
adc
adc
jnp
jo
dec
movsb
ds
cmp
ss
xchg
pop
nop
pop
imul
pandn
ret
stc
cwtl
rcr
fildll
cmp
jle
jne
jno
xchg
or
adc
xchg
mov
test
push
pop
dec
adc
test
rep
jno
dec
idivb
mov
mov
and
enter
jecxz
mov
xor
push
fiadds
shrl
pop
mov
cmpsl
mov
jmp
sbb
xor
xchg
aam
in
and
push
mov
fsubp
xchg
adcl
int3
mov
imul
cmp
fsubl
add
scas
dec
es
fwait
cmp
shrb
xchg
in
mov
test
cltd
cmc
lret
fbld
pusha
xchg
cmp
adc
sarb
nop
mov
lds
inc
dec
rcrl
add
fisttpl
imul
mov
xchg
dec
cltd
xor
dec
fadd
cmp
and
outsl
sbb
insl
outsb
mov
jns
mov
lock
mov
adc
mov
fstpl
inc
orl
mov
jp
sub
out
adc
xlat
test
pop
mov
pop
pop
pop
push
add
daa
int3
dec
mov
sub
daa
cmc
or
jb
mov
sub
mov
je
add
lret
imul
and
pop
rcll
mov
mov
xchg
sub
and
orb
addb
and
mov
cmp
fs
fidivs
jl
sub
bound
js
lea
addr16
xchg
lret
pop
xchg
ds
ljmp
popa
dec
xchg
adc
and
push
call
pop
fimuls
mov
inc
sbb
lcall
aam
cli
movsb
out
pop
jmp
mov
cld
repz
sub
mov
inc
mov
je
cmp
and
movsl
inc
push
shll
sahf
add
jmp
stos
into
loop
push
clc
inc
test
mov
pop
hlt
out
dec
mov
repnz
into
bound
inc
loopne
pop
fmull
mov
cmp
pop
sahf
fildl
mov
test
iret
push
mov
jne
fwait
push
movsb
sbb
in
cmp
inc
fimull
cmp
mov
call
dec
add
push
jae
jbe
mov
in
or
pop
mov
fidivl
mov
scas
subb
jbe
dec
or
xchg
lds
insl
cmp
ds
repz
lods
push
fs
jnp
ljmp
inc
ljmp
sbb
mov
iret
jge
call
dec
xor
inc
pop
jo
push
xchg
mov
pop
cmp
call
mov
mov
sub
out
push
sbb
loopne
push
dec
inc
jmp
jle
ss
cmp
leave
repz
icebp
push
mov
add
jle
int
fstps
sbbb
jnp
cmp
cmpsb
mov
cltd
jbe
arpl
xor
xlat
xchg
and
xor
imul
pop
sub
loop
cltd
add
dec
adc
sarb
or
or
jmp
aaa
cmp
imul
aaa
rcrb
sbb
mov
cmp
into
orb
pop
push
fisttpl
rol
jbe
xor
jne
jb
or
insb
jno
lcall
cmp
cmp
ret
jb
inc
aaa
hlt
fwait
insb
div
das
mov
lahf
insl
repnz
mov
pop
pop
sti
repz
and
clc
addl
loope
mov
cmp
cmc
cli
mov
cmp
mov
ds
jo
mov
test
out
cmp
lock
lods
test
cltd
xchg
inc
inc
jp
mov
clc
ja
ret
mov
sbb
sub
adc
mov
lock
cltd
push
xchg
fwait
aaa
sbb
mov
and
cmp
pop
sarb
pop
adc
push
lea
nop
movsb
clc
pushf
or
leave
mov
lods
push
jl
repnz
scas
enter
leave
out
adc
pop
sbb
sub
adc
movsb
mov
in
andb
mov
mov
mov
adc
cwtl
dec
in
and
fstps
jae
jecxz
cmp
rcr
adc
inc
iret
sub
or
lods
push
dec
lea
faddl
xchg
daa
movsl
dec
js
int
dec
jl
addr16
adc
or
jge
loope
rclb
adc
shll
aad
aaa
out
in
mov
cmp
test
int
mov
cmp
fsts
push
pop
or
jl
push
inc
cmp
pop
dec
in
loopne
push
addb
or
mov
inc
in
adc
push
mov
pop
sbb
add
and
pop
cltd
sub
ss
inc
popa
cmc
and
fstl
popf
push
inc
inc
xchg
dec
add
push
mov
int3
cmp
sub
sub
jl
mov
mov
xor
or
adc
movsb
pushf
jno
test
lahf
inc
cld
mov
movsb
mov
sub
lods
cmpsl
pop
pop
pop
fs
cmp
lods
push
jl
out
pushf
pop
pop
inc
cmp
pop
and
das
imulb
and
add
mov
insb
add
cmp
mov
out
sub
sub
cmp
mov
cs
sub
dec
and
aas
xchg
and
adc
pushf
adc
data16
mov
lods
cmpsl
data16
pop
mov
sub
mov
sbb
pop
cmp
push
jl
push
insb
inc
pop
and
and
mov
insb
and
cmp
mov
out
sub
sub
cmp
mov
into
jl
cmp
sub
dec
and
fbld
sbb
fsubl
xor
pop
shrl
xchg
and
add
adc
out
cltd
pushf
movsb
pushf
jns
xchg
and
mov
pushf
test
adc
movsb
sbb
jl
mov
push
insb
inc
sub
pop
add
adc
jl
sub
sub
cmp
mov
out
pop
sbb
dec
and
aas
jl
cmp
cmp
dec
sub
es
fsubl
add
shrl
out
cmp
cmp
pop
xor
out
pop
sbb
mov
mov
pushf
movsb
pushf
popa
pop
mov
mov
mov
cmp
daa
out
push
imul
movsl
mov
jge
test
sbb
push
addl
cmp
and
lods
nop
dec
std
jl
mov
popf
fists
xchg
inc
push
add
lods
scas
xchg
push
sub
dec
cmp
cmc
lds
out
fwait
es
lea
icebp
hlt
jbe
xchg
shll
push
or
shrb
aaa
add
int
pop
in
in
lcall
addr16
fsub
adc
jl
int
daa
sbb
in
xor
mov
mov
add
inc
xor
xchg
arpl
ss
jae
add
fcompl
fadd
lahf
movsb
fxch
fisttpl
and
sub
and
and
adc
lods
dec
mov
mov
and
mov
ficoml
inc
mov
jnp
jl
mov
mov
scas
loopne
test
test
daa
cltd
xchg
mov
addr16
cmp
sti
lcall
aad
jns
sbb
fldl
ja
in
fs
aam
mov
cmp
xor
jo
test
lock
mov
jmp
dec
shlb
out
and
pop
imul
jge
push
adc
or
sub
in
outsb
jl
je
in
push
aaa
ds
lods
nop
repz
jge
adc
jp
xchg
hlt
negb
inc
in
add
and
hlt
dec
mov
stc
xchg
or
fisubrs
and
add
pop
leave
insb
and
insb
fldcw
faddl
jl
mov
mov
xor
shrb
std
mov
jecxz
mov
aam
adc
adc
sbb
add
pop
and
mov
sbb
testl
lcall
mov
jns
inc
scas
pop
xchg
pop
lods
lods
mov
aas
push
push
dec
pusha
ds
leave
push
fwait
mov
out
test
movsl
sub
std
ret
test
sbb
dec
loope
rcrl
hlt
faddl
lods
scas
inc
xchg
or
sar
enter
sbb
mov
fsub
rcr
mov
sub
xchg
mov
mov
subl
cmp
adc
mov
push
fcompl
inc
xchg
popf
out
repnz
negl
lock
and
ret
ficoml
loop
mov
bound
xor
or
dec
pop
call
xchg
mov
and
mov
popa
es
lds
and
lods
scas
cmpsl
sahf
add
cld
jge
out
mov
dec
insl
cltd
stos
and
xchg
cmp
dec
push
test
pop
idivl
shll
mov
jb
sub
jae
imul
cld
push
arpl
movsl
arpl
cmp
sub
jno
insb
aad
xchg
arpl
pushf
fmull
mov
jns
popa
jne
mov
out
or
arpl
es
dec
mov
and
std
and
pop
cs
jo
push
xchg
jb
test
jl
mov
in
cli
imul
pop
xchg
dec
jl
jp
repnz
cmp
mov
push
mov
or
sub
std
mov
dec
push
jae
aaa
mov
outsl
sbb
lods
shrl
xor
pop
fwait
gs
dec
and
mov
add
lock
je
and
insb
xor
test
in
add
jl
and
out
int3
sub
popf
daa
mov
rolb
shrl
mov
pop
fs
arpl
xor
enter
test
in
in
aaa
ss
mull
add
push
pushl
lret
fsubrl
fbstp
inc
fsubrp
mov
xor
rcr
jbe
and
mov
scas
sub
jo
jae
mov
or
xlat
jecxz
push
bound
add
jo
mov
sbb
in
mov
outsl
call
add
or
pop
test
ret
mov
or
push
mov
jno
jne
das
jo
jns
inc
shll
ret
dec
mov
addr16
lea
push
roll
subl
cli
push
xor
add
xor
lahf
or
mov
add
mov
ljmp
inc
js
imul
aad
enter
inc
jno
mov
adc
mov
stos
shl
mov
sub
subl
dec
mov
dec
and
popa
mov
aas
pushf
pop
sub
insl
jle
je
mov
add
cmp
xlat
stc
and
pusha
rol
push
mov
xchg
pop
jmp
shr
enter
and
add
jmp
mov
push
xchg
jmp
mov
rol
ror
dec
inc
push
xchg
jmp
adc
jmp
lock
mov
add
mov
push
mov
xchg
pop
jmp
test
lret
add
adc
add
xor
add
add
xor
sub
add
xor
sub
xor
sub
mov
jmp
ret
jmp
dec
jmp
mov
add
jmp
xchg
cmp
jne
mov
add
xchg
xchg
push
mov
add
jmp
testb
rol
jmp
xor
add
sub
movl
pop
call
push
xchg
jmp
cvtdq2ps
ror
jmp
adc
sub
movl
pop
rol
nop
jmp
mov
add
jmp
jmp
xor
add
xor
sti
xchg
xchg
push
mov
xchg
pop
rol
push
push
jmp
adc
push
xchg
push
xchg
mov
add
push
xchg
jmp
cvtdq2ps
inc
add
fldt
or
add
add
add
add
leave
mov
enter
jmp
rcll
ror
xor
add
add
add
add
add
sub
sub
xor
mov
nop
jmp
shr
enter
add
add
pop
add
jmp
loopne
rol
push
xchg
jmp
cvtdq2ps
ret
lret
enter
jne
inc
inc
mov
inc
inc
rol
ror
xchg
mov
xchg
jmp
mov
jmp
shr
enter
jmp
imul
add
jmp
nop
push
xchg
jmp
cvtdq2ps
movl
pop
call
dec
inc
jmp
adc
jmp
mov
add
jmp
nop
jmp
imul
add
add
add
pop
add
jmp
loopne
nop
push
mov
add
jmp
testb
inc
add
add
add
and
xchg
jmp
adc
rol
ror
push
push
jmp
testb
leave
pop
rol
rol
push
mov
add
push
mov
xchg
pop
mov
ror
xor
xor
add
xor
sub
add
add
sub
sub
add
xor
add
xor
xor
add
xor
mov
inc
inc
dec
inc
jmp
imul
jne
mov
add
mov
jmp
imul
add
flds
add
add
shr
call
jmp
testb
jmp
mov
jmp
mov
add
jmp
jmp
test
add
fisttpl
xchg
jmp
cvtdq2ps
dec
inc
mov
jmp
jmp
shr
enter
add
cmp
jne
add
jmp
leave
xchg
xchg
jmp
testb
test
add
add
lcall
in
add
add
add
inc
add
inc
or
fcoms
add
add
pop
add
jmp
loopne
push
xchg
jmp
cvtdq2ps
and
add
call
xchg
mov
rol
mov
add
xor
push
jmp
mov
pop
mov
push
mov
add
jmp
mov
add
jmp
jmp
test
push
cmp
pop
pop
je
test
jne
xchg
push
call
pop
add
jmp
loopne
push
mov
add
pop
jmp
shr
shr
add
add
jmp
imul
push
jmp
mov
add
jmp
push
jmp
adc
push
mov
xchg
pop
cmp
je
mov
push
xchg
jmp
cvtdq2ps
add
add
ficompl
pop
inc
rol
xchg
add
jmp
mov
sub
movl
pop
jmp
lock
push
pop
xchg
jmp
mov
add
jmp
jmp
test
cmpsb
inc
dec
add
push
push
call
pop
add
jmp
loopne
push
xchg
jmp
cvtdq2ps
movl
pop
xchg
jmp
xor
push
push
nop
push
jmp
icebp
rol
ror
push
pop
jmp
lock
adc
push
pop
xchg
jmp
icebp
jmp
imul
add
pop
add
jmp
loopne
dec
inc
xor
push
jmp
mov
pop
jmp
adc
call
jmp
adc
jmp
jmp
or
jae
or
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
or
cmpsb
inc
or
mov
or
movb
add
add
push
bound
inc
insb
insb
outsl
arpl
outsl
add
outsl
bound
inc
jb
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
jmp
push
push
mov
xor
add
add
mov
mov
inc
shr
mov
dec
je
shl
jae
push
mov
mov
shr
mov
mov
shr
test
je
and
shr
add
jmp
and
shr
add
and
test
je
dec
je
dec
je
and
add
jmp
and
add
jmp
and
add
jmp
and
add
inc
mov
add
sub
lea
cmp
jae
rep
mov
pop
shr
and
add
jmp
cmp
jae
mov
mov
inc
shr
inc
mov
jmp
pop
mov
pop
sub
pop
ret
jmp
push
outsb
popa
bound
je
and
js
imul
popa
bound
add
insb
jns
outsb
inc
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
