mov
xchg
lcall
dec
and
or
shlb
subl
xchg
fnsave
cmp
js
psubw
jecxz
icebp
cmp
int
mov
mov
sub
add
es
xchg
xor
cli
iret
fwait
fs
xchg
es
ss
fdivp
ja
and
mov
call
popl
adc
xor
sbb
sub
dec
sub
dec
dec
stos
lret
or
vpcmpeqb
into
dec
inc
mov
add
cmp
and
mov
push
fldt
and
pusha
aaa
push
daa
jp
out
pop
jbe
scas
aas
or
pushf
pusha
xor
push
pop
mov
in
mov
jp
sahf
push
popf
repz
inc
ss
cmpsb
inc
ds
or
icebp
movsl
sub
int3
dec
or
rclb
xor
jmp
xor
mov
inc
imul
push
jmp
dec
test
add
jnp
jb
nop
xchg
repnz
cmp
adc
mov
mov
adc
cmpsl
adc
test
adc
sbbb
dec
jl
or
sbb
lods
inc
int
out
scas
mov
sbb
jb
lret
push
xor
inc
outsb
inc
jecxz
daa
dec
stc
sbb
inc
out
in
mov
pop
cmp
insl
xchg
mov
pop
js
ss
jns,pn
js
mov
fsincos
sbb
mov
repnz
addr16
je
enter
add
pop
incb
jecxz
push
mov
sahf
pop
lock
pushf
mov
repz
mov
cmp
or
outsb
je
ds
fwait
dec
jb
dec
pusha
lret
popa
sub
sub
push
xor
movsl
or
insl
inc
repz
sub
xor
scas
or
fistpll
fmuls
jp
push
fists
inc
in
lods
ljmp
jbe
dec
push
jno
jne
add
mov
movsl
adc
mov
xchg
in
mov
jbe
push
loope
mov
test
add
lds
mov
and
js
arpl
js
xor
xchg
push
cmp
mov
repz
dec
jp
leave
push
loope
jmp
pop
adcl
sub
sub
int
mov
pop
push
mov
jp
push
cmpsl
sbb
inc
xchg
pop
jne
adc
shl
mov
cmp
fiadds
das
aas
fmull
mov
jo
push
mov
lret
jbe
add
mov
cs
mov
dec
addr16
push
lods
mov
cmp
insb
aaa
fldt
das
dec
cmp
jge
jg
dec
sub
mov
fsubrl
mov
test
filds
inc
jae
bound
jnp
shll
inc
push
jno
inc
sbb
movsb
in
mov
lock
mov
jb
mov
dec
mov
into
jo
xchg
rolb
mov
push
rolb
push
das
pusha
scas
dec
dec
shrb
sahf
rcrb
mov
sarb
jb
orb
ret
xlat
out
js
dec
push
ss
inc
mov
movzbl
cwtl
ret
and
shrb
in
push
push
incl
ss
pusha
pop
dec
sahf
and
icebp
push
xchg
cmp
imul
stos
sahf
out
int
sub
xchg
stos
in
mov
mov
sbb
add
push
lods
jb
data16
sbb
repz
push
fistps
ljmp
mov
fs
pop
and
mov
mov
pop
stc
pop
int3
sub
sub
or
mov
xchg
es
xor
clc
or
stos
mov
or
dec
in
je
adc
test
lock
nop
out
es
loop
lock
pushf
test
mov
loope
int3
es
jae
insb
cmp
add
push
stc
imul
jp
add
push
and
adc
test
outsl
lahf
sub
xchg
imul
jmp
xchg
test
push
int3
and
insl
inc
mov
or
xchg
inc
or
subl
pop
or
or
nop
and
dec
out
mov
jnp
or
outsb
sbb
rcr
mov
sahf
repnz
rcrb
pop
sub
xchg
arpl
stos
mov
call
out
sub
cmp
rorb
ja
mov
xorb
dec
xchg
popa
stc
es
add
and
mov
je
inc
lret
pushf
and
loope
wbinvd
push
jae
jnp
ss
js
sub
mov
push
cmp
mov
lret
in
sarb
sub
jl
repnz
sarl
push
sub
cmpsb
add
jp
lock
mov
std
repz
sub
lea
hlt
movsl
stos
clc
lahf
scas
mov
loop
lcall
mov
sub
lret
fnstcw
aaa
add
fimull
jnp
xchg
xlat
fsubl
inc
mov
dec
shrb
cmpl
hlt
push
add
scas
daa
dec
data16
shrb
xchg
out
test
mov
les
mov
popa
and
xchg
fsts
jge
xchg
xchg
jnp
add
outsl
test
insl
ljmp
je
in
push
rcll
push
ss
aaa
push
daa
movsl
xor
add
sbb
mov
sahf
fistpll
inc
lods
mov
jmp
and
mov
lock
jg
cmp
daa
pop
test
add
test
jl
aam
add
push
jno
mov
xchg
lret
arpl
push
mov
hlt
jmp
jnp
int3
cmp
test
gs
shr
subb
or
sbb
insb
push
scas
inc
mov
dec
outsl
push
mov
push
mov
rcll
cmp
pop
push
mov
mov
pop
mov
sbb
inc
insl
sbb
mov
or
or
adc
aam
and
or
cmp
imul
ficomps
insb
int3
sub
movsb
enter
lea
rol
inc
sub
insb
jge
add
outsb
leave
in
out
pushl
push
nop
push
jecxz
dec
or
lret
inc
pop
je
std
xor
push
shll
cmpsb
test
rol
sbbl
jne
out
aas
imul
or
out
leave
in
or
cmp
sub
fcomp
xor
cld
mov
sbb
repnz
push
addb
mov
push
inc
cmpsl
pop
xlat
aas
sti
rcll
sbb
jne
ja
shlb
lret
out
jg
loop
xchg
jne
sub
imul
clc
push
cmp
movsl
push
sbb
fwait
pop
push
push
fiadds
adcb
push
scas
cli
add
add
jl
fisttpl
xchg
ljmp
mov
lret
fsubrl
sbb
cmp
test
pop
inc
pop
lret
cmpsb
leave
jo
mov
inc
mov
pop
leave
mov
call
mov
fwait
xor
ljmp
or
jnp
mov
mov
inc
sub
jp
pop
add
int
bound
sub
ja
stos
cmpsb
stos
mov
aad
cmp
push
leave
inc
jns
daa
test
test
jle
addr16
outsb
xor
cs
pop
repnz
push
imul
cltd
adc
cmp
aad
sub
sarb
and
jae
int
add
jle
call
mov
pop
cmp
inc
add
cltd
insb
lea
stos
jp
leave
mov
sarl
xchg
lods
push
xchg
nop
fldl
mull
and
adc
sbb
cmp
sbb
inc
js
lods
icebp
pop
popa
xchg
das
pop
cmc
mov
dec
outsl
sub
cmp
inc
cmp
dec
insb
cmpsl
fsubs
cli
push
xchg
lret
sbb
xlat
movsl
or
pop
mov
and
xchg
mov
fcompl
call
outsl
sub
movsl
ss
sub
mov
mov
and
mov
cmp
int
mov
popl
add
shll
jae
stos
push
cld
inc
insl
cmp
adc
call
add
fmul
pop
and
out
fwait
xor
cmpsl
mov
test
mov
cltd
push
lods
jae
mov
mov
cmp
insb
iret
sbb
jmp
add
int3
sub
mov
mov
std
mov
cs
cmp
cmp
repnz
mov
xor
sahf
sbb
inc
mov
inc
lea
or
xchg
cmp
movsl
mov
std
data16
out
rorb
cmp
insb
in
add
xchg
lret
dec
rorl
pop
cmp
andb
and
sub
mov
mov
cmp
movsl
mov
mov
inc
enter
dec
push
outsl
ret
inc
in
pushf
mov
or
mov
rorb
sub
mov
inc
jle
fcmove
pop
pop
enter
loope
sub
or
insl
cmp
cld
dec
cli
sub
fildll
pop
xor
mov
movsl
sub
mov
stos
out
dec
mov
jmp
sub
outsb
int3
mov
push
lods
leave
add
mov
mov
and
sbb
das
sbb
pop
aam
add
sub
jnp
cmp
data16
push
aas
pop
orl
inc
clc
inc
fisubrs
addb
push
int3
mov
cmpsb
pop
out
sub
jecxz
dec
cli
lret
stos
mov
ds
fsubl
lods
aaa
fadds
pop
adc
mov
loopne
add
fisubs
mov
mov
dec
jnp
pop
aam
mov
imul
cmpsl
fistps
mov
rolb
stc
cmp
js
push
je
clc
jmp
lret
sarb
dec
add
ljmp
pop
nopl
fstps
icebp
pop
inc
pushf
in
repz
imul
or
and
enter
popa
pop
adc
sub
jle
add
fsubs
xchg
mov
mov
rorb
add
lcall
insl
popf
dec
mov
test
orl
pop
jb
inc
pop
jbe
hlt
imul
aam
hlt
mov
lods
shrb
mov
mov
pop
lahf
mov
mov
out
lret
xlat
jb
jnp
cmp
hlt
or
xchg
mov
cmp
mov
es
test
dec
inc
popa
mov
hlt
cmp
xchg
ficoms
lods
cmp
cltd
movsl
sub
mov
das
rorl
add
mov
mov
fsts
out
pop
das
scas
jnp
pop
xchg
aam
dec
outsl
mov
mov
out
sub
push
mov
roll
scas
ds
rolb
and
xor
fistps
sbb
dec
negl
fnstenv
scas
pop
mov
inc
sti
lcall
cs
dec
cmp
fs
lods
mov
xor
stos
dec
inc
sub
mov
bnd
cmp
push
inc
js
xor
inc
fisttpll
jne
xor
sti
movsl
or
aas
adc
repz
repz
pusha
mov
pop
scas
xchg
push
mov
ljmp
xor
cmp
sub
cmp
or
nop
inc
loopne
shrb
lock
dec
iret
and
push
sbb
fs
popa
inc
sub
add
and
mov
and
popf
sub
push
xor
movsb
dec
cmpsl
int
lahf
xlat
dec
popl
into
aam
inc
jne
pop
stos
mov
dec
pop
ret
mov
cltd
loopne
jb
dec
stos
mov
pusha
ljmp
test
sbb
imul
sbbb
adc
aas
pop
ret
push
pushf
sub
push
jb
fnstcw
adc
pop
movsb
aam
fdivl
mov
inc
pop
mov
pop
repnz
pop
pop
xorl
dec
pushf
adc
sbb
cmpsb
xor
or
pop
add
in
add
icebp
sbb
or
xor
fnstsw
inc
dec
add
mov
sub
pushf
jmp
popf
jne
or
xchg
aas
outsl
lahf
addr16
call
and
lret
pop
addr16
mov
cwtl
xchg
stos
pop
repnz
test
mov
xor
cmc
call
pop
sbb
pop
xlat
push
add
pop
mov
and
daa
mov
in
jnp
jae
call
pop
sub
in
sub
jg
pop
cmc
adc
jbe
retw
sub
ds
addr16
sahf
lods
imul
into
mov
rclb
imul
inc
jp
jns
adcl
lods
leave
dec
data16
dec
jmp
cmp
xchg
int
dec
shll
and
xlat
mov
data16
stos
out
ret
sbb
bound
inc
aas
jbe
cmp
sub
mov
scas
cmp
jbe
cmpsl
mov
out
jne
cmp
xchg
mov
mov
ljmp
mov
pop
insb
fwait
test
out
or
xchg
dec
mov
adcb
adc
inc
pop
mov
iret
repnz
dec
jbe
dec
pop
idivl
mov
fcmovbe
xchg
rorb
or
jge
cmp
mov
pusha
dec
lods
es
jnp
jae
fildll
jp
inc
push
push
sub
or
outsl
lds
sub
aas
xlat
imull
inc
pop
xor
mov
int3
in
sub
cmp
iret
add
sub
dec
cmp
push
out
mov
test
je
ljmp
arpl
cmpsb
jle
mov
sahf
mov
jecxz
dec
pop
std
pop
xor
xlat
fyl2xp1
movb
xor
xor
out
nop
pusha
jb
sbb
or
inc
iret
and
mov
int3
in
ja
arpl
xlat
cli
repnz
jbe
mov
lea
mov
mov
stos
push
ret
inc
add
loopne
jno
ja
jo
cmp
les
inc
push
rolb
in
shrb
enter
fidivs
mov
mov
xor
movb
jbe
push
sbb
cli
pop
push
mov
aad
xlat
sti
inc
sbb
insl
push
notl
pop
jne
je
in
push
mov
add
repz
mov
test
imul
mov
or
pop
adc
xchg
jb
mov
daa
mov
dec
sub
xchg
pusha
popf
sub
xor
xchg
or
mov
mov
jno
rcrb
sbb
mov
cltd
mov
int
jle
adc
mov
mov
leave
mov
popf
notl
enter
sbb
inc
andb
fcomip
daa
mov
push
sub
cmp
ds
in
dec
shll
cmpsl
xor
pop
cltd
mov
jb
andl
outsb
xor
pop
fs
pop
int
pop
dec
rcrl
aas
into
loop
dec
mov
flds
into
sub
or
and
xchg
fistl
arpl
pushl
mov
xchg
cmpsl
fcmovu
das
js
les
push
repz
mov
cmp
dec
bnd
push
mov
lods
and
mov
mov
in
shlb
and
sub
dec
je
push
adc
sti
dec
xchg
jg
stc
loop
test
rcrb
xchg
mov
int
outsl
jmp
dec
les
xchg
sbb
jnp
idivl
out
xor
shrl
dec
pop
dec
push
cmp
mov
in
insb
popf
stc
out
xchg
clc
mov
mov
das
pop
dec
push
mov
je
push
fwait
adc
push
add
adc
adc
das
cs
inc
xor
adc
mov
adc
lds
adc
jno
sti
xlat
repz
cs
lcall
in
sub
sub
cmp
in
cmp
or
cmpsl
inc
je
faddp
or
dec
popl
subb
inc
fmull
loope
ficompl
inc
rcrl
xchg
dec
fldl
shl
jl
sbb
push
inc
dec
or
xor
sarb
shlb
imul
fistpl
std
repnz
mov
mov
sub
sub
outsl
gs
cmp
into
inc
push
shl
movsl
out
aaa
xor
jle
and
std
cmpsb
jmp
mov
fmuls
js
arpl
push
scas
mov
iret
sub
jmp
lret
mov
mov
xlat
mov
dec
sahf
dec
xchg
pop
sub
mov
mov
and
das
loopne,pn
shl
mull
mov
inc
lds
push
mov
rorl
nop
mov
aaa
inc
mov
mov
jl
ret
pop
fistps
pop
lea
insb
rorl
jl
sub
mov
out
lea
mov
jbe
dec
in
dec
sbb
imul
push
ret
mov
movsl
push
or
ss
push
insb
test
outsb
fpatan
mov
daa
das
fimull
xchg
xchg
lret
xchg
sub
aas
mov
mov
inc
inc
sub
mov
cmc
inc
xlat
mov
clc
scas
xor
sub
pop
xor
jl
mov
dec
cmpsb
pushf
inc
lcall
popf
flds
pop
inc
sti
cs
sarb
aas
push
popa
je
mov
shlb
pop
adc
aad
out
push
mov
dec
rcrl
sbb
int3
mov
lret
int
loopne
lods
jmp
mov
mov
jg
les
mov
into
dec
iret
scas
cmp
xchg
mov
aas
xchg
mov
mov
jp
dec
scas
sti
loopne
repz
cld
adc
fincstp
lret
ja
ja
hlt
xor
fs
jns
lods
cmp
pusha
mov
pop
cmp
jg
or
inc
push
cmp
push
and
fsts
xchg
jmp
call
adc
insl
loope
lcall
cs
xchg
push
pop
mov
int3
mov
inc
cmp
push
add
xor
jg
jg
jl
dec
cmpsl
jle
sahf
repz
fisubrl
jge
pushl
test
sbbl
cmp
scas
dec
cmp
stos
add
jp
and
sahf
lret
push
dec
and
mov
jp
addr16
lret
mov
sbb
mov
andl
je
in
inc
ds
shll
jo
in
mov
orb
push
mov
xor
ftst
ljmp
lea
sub
mov
sub
jmp
imul
cmpb
es
aam
das
arpl
arpl
add
ljmp
push
pusha
jmp
mov
xchg
push
dec
leave
xor
jae
xchg
sti
cmp
mov
or
addr16
push
push
push
jns
lods
fmuls
imul
and
mov
mov
bound
sbb
ja
dec
cltd
inc
sub
push
pop
ss
cmp
test
clc
xchg
aas
popa
movsl
push
mov
sahf
push
push
jg
lea
pusha
jnp
sub
ret
adc
dec
sub
mov
cli
aaa
mov
in
nop
adc
sub
push
cld
and
ret
jmp
fstpt
mov
jb
cmp
and
call
cmp
cli
dec
sub
sub
cmp
mov
arpl
add
lret
das
into
rorb
lahf
sub
inc
das
xor
cld
pushf
push
pop
sub
jns
adc
movsb
in
pop
ja
leave
inc
xor
out
divl
mov
cmpsb
push
mov
or
scas
lock
push
jno
data16
adc
xor
cmpsb
xor
xor
pop
cmp
add
pop
gs
mov
push
fnop
out
pop
sbb
iret
dec
or
test
dec
cmp
sbb
push
movsb
dec
dec
lahf
fsubrs
push
lret
mov
mov
xchg
sti
jle
popa
movsl
outsb
loop
dec
mov
jge
mov
icebp
fs
cld
pushl
lahf
mov
xchg
xchg
mov
cmp
pop
dec
mov
into
mov
les
popa
mov
movsb
mov
in
out
mov
das
lea
mov
mov
lds
int
inc
roll
aas
sbb
mov
cmp
sarb
xchg
sub
dec
xor
arpl
gs
push
in
pop
mov
out
mov
add
push
mov
jb
je
dec
sub
out
cmp
push
fwait
jmp
cmp
xor
enter
iret
insl
mov
adc
subb
cmp
push
or
push
mov
loope
xchg
pop
push
jp
shr
jge
ja
lods
or
xor
mov
call
mov
je
add
and
in
fldl
aam
and
mov
mov
gs
xlat
lods
mov
mov
jp
or
adc
cmp
into
dec
mov
out
add
cmp
subl
data16
ret
je
fadd
xchg
mov
dec
pushw
aaa
dec
test
sub
sti
cmpsl
fcmovnb
outsb
sti
iret
ficoms
adc
mov
mov
enter
mov
mov
mov
fnstcw
movsl
enter
mov
adc
and
repz
sub
lock
in
sahf
fildll
mov
adc
xchg
ret
mov
sbb
scas
leave
loope
in
mov
add
sub
push
sub
scas
push
mov
jl
mov
lods
mov
pop
jecxz
pop
push
ljmp
mov
outsl
inc
shll
mov
in
rorl
cmpsl
pusha
mov
pop
adc
repz
add
cwtl
xor
fildl
lods
cmp
mov
out
pop
ja
push
xchg
pop
pop
adc
push
or
cmp
jnp,pn
push
jg
in
std
pop
je
cmc
or
jne
pop
jae
cmpsl
shrb
movsb
lret
mov
jmp
loop
cmp
xor
dec
lret
mov
jl
out
sub
jbe
das
mov
mov
and
adc
xchg
or
inc
lds
sub
stc
ret
addl
imul
int
mull
mov
stc
jg
cld
loopne
fisttps
xor
arpl
add
push
pop
loopne
sbb
into
mov
push
push
jle
rol
mov
sbb
repz
xor
mov
pushf
mov
lahf
mov
mov
pop
mov
mov
push
repz
inc
add
dec
lahf
sbb
xor
mov
pcmpgtw
popl
fldcw
ret
movsl
pop
into
imul
mov
mov
pmaxub
fcompl
or
jno
or
ja
inc
adcl
jle
mov
leave
loope
inc
inc
icebp
ss
pop
jnp
sbb
dec
inc
cmp
cmp
daa
test
dec
sub
mov
jecxz
subl
xchg
mov
addr16
dec
lock
loopne
int3
jae
insb
inc
mov
mov
ss
mov
fidivl
cmc
test
mov
es
xchg
repz
pop
repnz
loope
frstor
rolb
fdivrs
jl
mov
cld
sbb
fists
inc
test
or
jmp
add
out
nop
sub
mov
outsl
sbb
adc
jnp
dec
cmpsb
inc
ret
rolb
jns
xor
jg
adc
vorps
jae
dec
test
mov
mov
jmp
repz
sub
inc
in
sbb
pop
or
outsl
sbb
dec
xchg
arpl
pop
ljmp
adc
repnz
loop
inc
pop
push
add
in
into
add
loopne
mov
push
ret
or
lcall
int
or
ss
adc
flds
ret
shll
add
mov
pop
xor
mov
fildll
insl
cmp
test
ljmp
neg
pop
mov
push
sub
ret
lds
pop
add
ss
cmc
xchg
jge
movsb
dec
inc
jb
mov
push
pop
popf
adc
add
jmp
movsl
xchg
mov
cmp
sub
jno
xlat
shlb
div
dec
fcomip
push
push
je
stos
xchg
das
mov
lcall
fildl
xor
jge
out
push
cmpsl
arpl
insb
jg
cmp
jmp
sub
xor
sub
xchg
aad
in
sbb
testl
adc
mov
stos
imul
or
loop
jp
push
mov
mov
gs
pop
cmp
shrl
stos
jno
rcr
dec
push
mull
sahf
cmp
pop
cmp
push
push
stos
or
test
jnp
inc
popa
aas
or
lock
imul
inc
sbb
sbb
cld
ret
addr16
inc
inc
mov
dec
ret
mov
add
or
mov
pop
stos
repnz
sub
inc
dec
jnp
loop
or
fcmovbe
sti
pop
ljmp
pop
rolb
in
push
add
pop
outsb
push
inc
xor
inc
push
and
pop
xlat
mov
je
pop
mov
call
daa
stos
inc
adc
outsb
movsb
xchg
inc
ja
int3
pop
xchg
aam
jge
data16
pop
push
adc
scas
xchg
push
jg
out
xor
jl
xor
pop
mov
mov
pushf
pop
jnp
out
gs
stos
ja
data16
mov
call
movsl
ss
pop
jnp
mov
aam
orl
push
and
mov
imul
imulb
push
mov
jb
aad
notb
aaa
jmp
fs
jg
push
jecxz
mov
loope
mov
loopne
jp
clc
in
out
call
icebp
push
shrl
ret
jae
sub
aas
push
lock
cmp
movaps
inc
sub
int3
aaa
loopne
ret
pop
pop
pop
ret
sub
xchg
xchg
jae
jnp
iret
inc
jmp
or
mov
ja
cmpb
push
pushf
inc
xlat
push
jnp
lret
lods
dec
dec
outsl
mov
fistps
lock
adc
adc
leave
sti
pop
xchg
mov
sbbb
push
mov
xchg
jg
out
out
xchg
cltd
mov
sub
sahf
mov
arpl
mov
pushf
xbegin
clc
mov
pop
mov
cmp
out
push
mov
xchg
out
adc
jp
addr16
lods
out
in
xchg
sub
adc
ja
adc
cmc
jnp
mov
fs
xor
or
xchg
pop
fcomp
adc
shlb
jmp
add
lcall
pop
push
pop
loop
mov
xor
sub
mov
movsl
jecxz
xchg
xorl
push
dec
or
mov
dec
mov
rclb
out
inc
jecxz
mov
nop
in
ja
mov
jb
imul
movsb
lret
adc
and
xchg
divb
ds
inc
mov
jmp
inc
aaa
xor
sti
inc
jnp
or
or
add
adc
mulb
mov
iret
jne
mov
data16
cmp
bnd
pop
dec
gs
stc
jb
dec
pop
xchg
push
xchg
mov
pop
call
cmp
leave
jmp
mov
pop
push
lcall
stos
cli
sti
cmpsb
jl
mov
and
mov
sub
push
inc
sbb
and
sbb
push
clc
jecxz
int3
mov
ljmp
outsl
sub
lret
lods
add
xor
popa
add
adc
xchg
repnz
sub
dec
shll
inc
fs
mov
jns
cmp
ds
jae
stos
repz
xchg
jae
push
pop
jbe
fidivrl
sbb
and
inc
mov
cmp
dec
cwtl
clc
push
xor
adc
mov
jnp
repnz
mov
mov
sbb
rol
fdivrp
imul
adc
sbb
push
fdivrs
mov
sti
push
syscall
cmpsl
into
pop
aaa
dec
lret
jp
cmp
and
popa
dec
aaa
data16
mov
ja
sub
sbb
dec
lock
xlat
or
inc
xlat
xor
fstpt
adc
push
add
pop
adc
pop
sub
daa
push
xchg
repz
jae
lahf
or
sbb
jp
lret
add
fwait
cmpsb
sub
sub
bound
push
cmp
push
cmp
lods
mov
xchg
push
and
mov
dec
inc
fdivl
pop
inc
mov
rep
ljmp
xlat
les
aaa
mov
xorb
cmpsl
pop
push
idivb
int
push
dec
testb
repz
xchg
mov
jecxz
push
mov
out
sahf
push
int3
jmp
dec
into
prefetch
or
cmp
mov
test
dec
int3
inc
jmp
lret
add
lods
push
movsl
xlat
scas
das
jne
jp
mov
out
ds
call
gs
sub
test
mov
adc
adc
loope
test
sub
push
fstpt
into
xlat
cmp
mov
and
sub
aaa
imulb
xor
pop
inc
icebp
out
push
xchg
test
pop
mull
lret
sub
ret
jne
in
xor
cmp
jp
push
pusha
jmpw
inc
sbb
ror
xor
mov
daa
test
and
pop
jno
ja
arpl
add
orb
sbb
data16
and
insl
mov
mov
adc
and
lock
insb
sub
push
int3
jo,pn
add
and
jmp
test
xchg
push
fmulp
mov
xchg
dec
sbb
jbe
cmp
test
sub
jg
pop
dec
mov
and
push
mov
push
mov
jle
fnstsw
call
popa
mov
sub
sbb
cmp
ds
add
add
cmp
and
jle
jns
ret
sti
ret
mov
adc
and
or
add
lret
adc
mov
outsb
push
shlb
mov
push
sub
jl
xchg
insb
mov
das
mov
lds
push
imull
outsb
bnd
out
sbbl
jl
lret
andl
jae
nop
mov
ret
inc
enter
pop
pop
lss
xchg
sti
jo
pop
imul
imul
mov
sti
dec
pop
pop
push
push
mov
scas
in
pop
mov
jb
push
sbb
scas
push
and
mov
sbb
sub
jno
imul
mov
cwtl
andb
cmp
cmpsb
into
xor
repnz
sbb
or
fimuls
cwtl
das
jb
and
loopne,pn
popa
repnz
jle
je
test
fwait
xchg
test
les
fdivp
dec
push
xchg
test
mov
cmp
test
call
xchg
in
adc
xchg
mov
test
es
cmp
sub
pushf
fwait
arpl
das
ljmp
lds
jb
jle
push
cwtl
jg
add
sahf
scas
ja
cwtl
inc
mov
add
jle
inc
push
push
sbb
fs
jns
push
scas
nop
push
sbb
jbe
fidivrl
inc
inc
xor
sarb
cs
push
and
pusha
out
push
xor
push
dec
lea
in
popf
call
mov
cmpsb
xor
fwait
inc
rcll
or
div
cli
test
mov
shrb
cld
inc
xlat
shl
pop
bnd
rorb
inc
xlat
js
sbb
ret
fxch
sub
push
add
js
lahf
push
rclb
das
je
adc
lea
scas
mov
ds
ja
popf
mov
scas
cmp
sub
mov
enter
iret
xor
inc
jae
cmpsl
repnz
xchg
out
mov
loope
mov
or
dec
adc
popf
int3
sahf
xchg
sti
push
mov
fs
cmp
pusha
insl
sub
cmp
scas
jge
jno
push
sbb
jl
push
push
daa
std
adcb
dec
cwtl
mov
mov
jns
push
jmp
fstpt
lahf
pop
test
ficoml
ret
jle
mov
inc
es
xchg
jno
mov
add
das
mov
cmp
sbb
popa
cli
mov
cmp
negb
gs
fiaddl
jmp
hlt
sarl
mov
nop
lret
mov
int3
sahf
insb
cld
cmp
stos
jmp
cmp
in
adc
sbb
sti
stos
pop
fwait
out
aas
rorl
jbe
and
inc
xchg
xor
dec
mov
fwait
or
sbb
andl
in
push
jno
repz
imul
jo
mov
in
mov
in
aaa
xor
js
cmp
mov
push
xchg
jmp
mov
test
or
movsl
add
out
add
cwtl
stos
jmp
and
mov
test
add
loopne
stos
jmp
jbe,pt
add
pop
aam
cmp
push
scas
push
imul
cmp
and
imul
repnz
pop
insb
mov
movsb
mov
cld
pushf
test
out
imul
inc
int3
subb
add
mov
pop
adc
sub
adc
test
mov
fcmovnbe
in
cmp
dec
cmp
insl
pcmpeqd
mov
das
fistpl
enter
mov
imul
inc
repnz
arpl
jno
loop
decb
jl
dec
fcomps
cmp
add
xchg
cmp
or
imul
in
shrb
sbb
inc
jnp
and
lods
adc
pop
mov
push
xor
cmp
fldcw
sub
xchg
popf
fs
fwait
stos
jmp
pop
fistl
xchg
or
push
fadds
sti
fstpt
mov
xchg
ja
dec
xchg
sbb
mov
fisttpl
sbb
xchg
mov
movsb
cli
jecxz
fadd
rorl
push
test
nop
xorb
clc
mov
and
dec
xchg
cmp
jo
mov
push
outsb
mov
call
insb
jne
divps
cmpsb
mov
aaa
roll
or
mov
inc
leave
mov
add
jbe
pop
jp
adc
enter
test
js,pt
repz
mov
and
repnz
mov
jb
loope
imul
aad
fldl
arpl
enter
xchg
test
test
push
dec
dec
in
mov
dec
faddl
pop
rolb
sub
xor
mov
inc
rcl
out
fdiv
sbb
mov
pop
outsb
dec
jecxz
dec
or
int
loop
xchg
push
xor
lods
jp
mov
fxch
mov
jns
popf
or
loope
mov
shr
orl
shll
bound
mov
mov
shlb
arpl
and
movsl
imul
cwtl
jbe
fstps
arpl
dec
je
subl
add
das
lahf
ficoml
lock
cmpsl
je
pop
push
jb
push
rolb
push
and
inc
nop
sub
clc
sub
subl
pop
xor
lods
xchg
in
jp
shll
push
xor
lods
dec
cs
out
push
lret
dec
out
mov
icebp
fidivl
adc
dec
nop
jo
rcll
jmp
push
xor
cs
mov
hlt
sahf
xchg
mov
data16
xor
jecxz
mov
push
cmpsl
loop
dec
push
add
pop
test
into
push
inc
mov
pop
inc
mov
fwait
adc
adcb
inc
add
fists
cmp
in
mov
rorl
pop
lret
add
xlat
adc
outsb
mov
in
std
jg
or
or
ds
imul
jecxz
jae
hlt
cmp
sub
dec
jnp
repz
movsl
push
test
or
push
jnp
imul
cli
subb
fcompp
jmp
xchg
clc
pop
lret
push
jge
sub
lret
jp
push
pop
cmp
movsb
mov
aas
sti
mov
int3
xor
xchg
and
dec
scas
xor
xor
mov
mov
inc
sub
pop
pop
pop
add
mov
push
cltd
sbb
inc
dec
lods
movsl
xor
dec
ljmp
jmp
add
push
fiadds
push
aam
fdivs
cmpsb
cmpsl
fwait
and
mov
mov
ljmp
xor
push
pop
es
lahf
cmpl
jae
fildl
inc
jnp
xor
and
std
mov
stos
popf
inc
lcall
jbe
in
das
mov
ret
loop
push
cli
sahf
and
cld
stos
gs
xor
push
jnp
jb
lds
dec
and
out
insl
movsb
mov
xchg
pop
sub
xor
pusha
scas
sbb
sti
sub
loopne
inc
in
xchg
fnsetpm(287
ss
adc
xor
mov
mov
push
pop
addr16
lock
dec
test
xchg
mov
out
test
lret
mov
lcall
arpl
lock
test
mov
fs
add
inc
lea
sub
icebp
inc
lret
sub
pop
negl
sub
jmp
mov
and
inc
stos
shr
and
mov
xchg
cli
cmpsl
or
jnp
ds
pop
icebp
aaa
cs
xor
scas
xchg
lock
andb
mov
xchg
jmp
sub
scas
mov
sub
cmp
lods
popa
fwait
je
in
mov
mov
mov
sub
mov
mov
dec
scas
das
pop
dec
ds
mov
cmp
scas
xor
cmp
icebp
orl
push
dec
das
add
popa
in
mov
xchg
mov
push
imul
imul
fidivrs
mov
loop
push
insb
adc
insb
sbb
lods
out
sub
and
repz
mov
pop
pop
in
aaa
mov
in
inc
fldt
jg
in
pop
repz
jbe
lret
fbld
loopne
loop
pop
adc
cmp
mov
imul
notb
or
shlb
int
jb
in
inc
mov
shrl
cmp
insb
aaa
add
call
xchg
xchg
dec
xchg
xor
jae
aas
aad
nop
sub
je
fistl
xor
test
aam
inc
mov
mov
in
fmull
xlat
jns
frstor
mov
lret
pushf
mov
call
test
xor
lea
or
lock
sbb
ficompl
cmp
daa
in
push
mov
out
jl
inc
arpl
jge
mov
sbb
imul
ret
pushf
out
cmc
sahf
jno
sahf
enter
or
adc
and
out
imul
je
shlb
mov
cld
sub
negl
je
ja
in
adc
and
inc
push
and
pusha
sub
or
enter
cmpsb
mull
fdivrl
sti
icebp
arpl
cmp
push
jbe
cmp
movswl
hlt
lcall
pop
ja
mov
into
mov
lahf
fistpl
jp
cmpsl
xlat
pop
cmp
imul
das
pop
xchg
sbb
xor
bound
cmpsl
cmp
int3
mov
mov
inc
push
ret
or
hlt
js
sbb
mov
test
scas
xor
jbe
outsl
sbb
fcmovnbe
ficomps
pop
repz
int3
dec
cmp
adc
jo
jecxz
stos
mov
cltd
dec
fisttps
scas
mov
je
cmp
adc
dec
dec
out
sub
xor
and
mov
or
mov
mov
mov
xchg
xchg
sbb
lret
adc
sub
and
adcl
cmp
fnstcw
sbb
das
and
loop
sub
and
addl
int3
mov
mov
rorb
xchg
imul
xchg
xlat
xchg
fdivrp
aam
mov
sahf
xor
xchg
mov
int3
icebp
push
das
cmpsl
fwait
inc
lahf
xchg
jne
cs
aaa
mov
ret
ds
loop
arpl
add
lret
pop
pop
xchg
cli
mov
loop
ja
mov
pushf
mov
jns
mov
scas
aas
sbb
lods
adc
jl
daa
test
or
and
xchg
popf
in
inc
pop
mov
mov
aad
push
popf
faddl
dec
mov
add
jns
dec
insb
inc
jns
jmp
aam
lods
aaa
cmp
push
inc
pop
pop
jno
xchg
add
mov
jl
imul
outsb
xor
push
sarb
movsl
int3
lahf
imul
nop
aam
adcb
xchg
int3
shll
sbb
mov
xchg
ret
jge
xchg
insl
fiaddl
fistps
mov
mov
mov
mov
mov
or
cmp
dec
sbb
aad
stc
loope
mov
data16
or
test
cmc
stc
scas
aad
cmp
inc
cmpsb
mov
sbb
push
jb
out
test
popa
mov
cli
push
xor
out
xchg
dec
cmpb
jle
cs
xor
lahf
bound
outsl
dec
mov
inc
addr16
into
mov
cmp
sub
inc
lcall
adc
shlb
in
stos
sub
xchg
mov
pop
js
aaa
inc
std
lret
shrl
test
mov
iret
pop
and
sti
push
imul
xor
sub
pop
dec
cmp
ds
ja
push
dec
inc
loope
mov
fsubl
dec
jmp
dec
cmp
popf
jge
pop
jbe
cmp
sbb
cs
imulb
dec
arpl
xchg
lcall
sbb
push
outsl
dec
test
jo
xor
jns
dec
inc
cs
fnstsw
push
into
bound
add
outsb
pop
cmp
pop
pop
dec
leave
int
push
sbb
fwait
in
shrb
cmp
jb
inc
add
dec
stc
mov
inc
mov
mov
ret
adc
int
cmpxchg
jg
ret
sbb
pop
dec
mov
lret
sbb
mov
xchg
lock
not
mov
cmp
cmp
xchg
cs
les
jmp
lahf
fdivl
aam
add
inc
inc
test
data16
cwtl
jp
test
dec
into
cmpsl
lods
cmp
loop
mov
adc
add
sub
inc
movsb
jb
test
ja
mov
rep
dec
jbe
mov
lock
lahf
pop
mov
jo
mov
call
cmpsb
inc
sub
not
pop
sub
icebp
mov
lret
adc
mov
jns
adc
data16
mov
stc
insl
adc
loope
mov
jns
xchg
cmovs
xor
mov
repnz
jg
push
mov
and
aaa
mov
xor
in
jnp
pop
in
test
ret
sub
lahf
data16
loopne
mov
jecxz
push
js
pop
insb
out
adc
shl
jb
imul
int
or
jp
pop
add
sti
dec
cmp
sbb
arpl
jnp
dec
xchg
jae
fucomi
push
jecxz
cli
out
rorb
gs
mov
outsb
sti
xlat
or
out
sti
outsl
ds
or
fcom
fisubs
std
outsb
push
xor
scas
loop
fiadds
inc
out
pop
jne
add
xlat
jecxz
imul
mov
and
mov
xor
inc
mov
das
push
or
fnstsw
mov
cwtl
pxor
jbe
int
mov
shll
inc
icebp
adcb
xchg
jno
lea
mov
fmuls
outsb
out
jmp
inc
xor
push
mov
mov
fwait
pop
jno
test
in
cmp
pop
out
je
adc
movsb
push
jne
xchg
test
and
pusha
and
and
jnp
xlat
ljmp
scas
mov
jp
sahf
dec
or
sub
cmpsl
aam
add
adc
cs
in
movl
lret
stos
filds
mov
hlt
aas
dec
cmc
inc
cmp
imul
test
add
dec
push
adcb
addr16
pop
clc
dec
pop
imul
xchg
stos
xchg
or
shl
mov
pop
add
hlt
js
test
pushf
or
ja
cltd
aaa
testb
sbb
jb
stc
mov
push
jno
insl
cltd
push
cltd
cltd
sbb
xchg
cmpsb
loop
movsl
push
cmp
xor
stos
outsl
addr16
xchg
mov
insl
jbe
ret
lahf
or
pop
xchg
mov
and
dec
push
mov
ret
shrl
push
dec
rolb
xchg
dec
int3
mov
call
sub
jbe
jae
imulb
cmp
test
mov
out
jmp
sub
mov
cmpsb
dec
xlat
sti
aaa
sti
in
sti
inc
pushf
xchg
scas
hlt
sbb
jl
into
bound
in
cli
insl
jae
stc
xlat
sbb
jge
and
sahf
xor
movsb
jo
add
cmp
jae
push
sub
mov
lods
jg
mov
mov
inc
hlt
js
test
mov
int
jge
jo
xchg
mov
stc
lea
jbe
fwait
je
cmp
scas
mov
xchg
out
ret
mov
es
pop
mov
lods
push
fisubrl
jg
cmp
pop
cmp
sbb
jg
jne
or
pop
insb
leave
scas
push
enter
aad
movsl
adc
mov
mov
inc
mov
rcr
in
mov
push
fcomps
hlt
push
aam
mov
adc
mov
pop
ss
lret
cltd
repnz
mov
pop
push
pop
pop
jns
enter
test
or
bound
jns
or
dec
pusha
insb
leave
and
clc
xor
out
imul
sub
push
xor
push
fwait
ret
and
jns
push
push
insl
cmp
adc
andb
sti
jae
jp
pop
test
or
adc
cmp
pop
rcl
cmpsl
mov
pop
sahf
mov
mov
jno
mov
push
dec
and
mov
push
mov
fstpt
cmp
sti
ljmp
pusha
xchg
inc
popf
jecxz
xchg
xchg
imul
clc
lds
jo
and
sub
loopne
test
andl
inc
jecxz
in
mov
add
push
daa
cmp
adc
sbb
stos
cmp
into
mov
movsl
cmp
pop
cld
add
or
movsb
cmpl
ror
push
jle
jg
pop
xchg
inc
or
loopne
outsb
adc
stos
cmp
aas
push
push
mov
fs
dec
sub
dec
mov
and
out
mov
icebp
aad
xor
fsubs
lds
inc
daa
mull
lea
jae
fisttpll
insb
push
das
pop
push
es
cmp
xchg
sbb
jle
outsl
pop
out
sbb
cli
aam
sub
int3
subb
pop
or
push
outsl
std
jg
cmp
popa
into
jne
or
xchg
mov
bound
outsb
push
mov
jl
ret
sbb
ljmp
lods
shl
ret
inc
mov
fisubrl
lret
mov
pusha
movsl
cld
dec
scas
push
mov
inc
dec
ss
fstps
pop
insb
cmpl
mov
and
notl
xchg
mov
pop
mov
pop
add
loopne
dec
iret
popf
pop
and
sbb
addr16
jecxz
lahf
xchg
cmc
clc
rorb
or
mov
std
dec
jno
mov
mov
jmp
int3
adc
imul
insl
inc
push
add
stos
ret
push
cmp
cmc
lea
mov
mov
ljmp
or
pop
in
and
inc
mov
add
loope
filds
add
cmp
pop
insl
mov
jmp
sbb
jo
cmc
in
cmp
lcall
test
and
subl
mov
icebp
es
pop
aam
cmpsl
mov
fsub
mov
fistpl
arpl
mov
and
jge
sub
jle
insl
or
fisttpll
fmull
adc
or
cmpsb
sub
adc
icebp
mov
lcall
lods
mov
mov
pop
xchg
inc
xor
lods
or
loopne
push
or
test
xchg
outsb
hlt
fistpl
int
enter
mov
mov
mov
out
xchg
cmp
pop
rcrb
pop
add
cld
jl
pop
arpl
rcrl
loope
scas
jmp
aaa
repz
cli
fdivs
xor
add
mov
sbb
sub
adc
push
xor
das
movsl
js
push
sub
loope
fldenv
adc
xor
mov
dec
mov
dec
scas
pop
fcoml
pop
jmp
ds
dec
pop
push
hlt
sub
repz
mov
jg
push
pop
add
sub
xchg
jg
dec
pop
push
outsl
insb
inc
daa
andl
incb
lret
push
shlb
test
nop
xchg
pop
imul
jno
sbb
mov
sbb
and
iret
and
hlt
xlat
imul
xchg
xor
insb
stos
scas
icebp
mov
jecxz
dec
xchg
mov
sbb
aad
and
jb
test
xchg
stc
rolb
mov
repz
aaa
movb
cltd
sahf
out
push
push
xchg
es
mov
xchg
and
jl
xchg
int
repz
jno
ja
movsl
int3
mov
ljmp
mov
je
ds
jge
int3
pop
idivl
cmp
sub
jge
or
push
pop
test
into
cmp
jmp
sar
cmpsl
pop
jp
push
dec
scas
out
and
test
fisubrs
mov
movsl
bound
in
movsl
mov
imul
aam
daa
or
dec
push
push
rcll
xchg
jge
fdivrl
cmpsb
mov
cld
scas
dec
pop
cmpsl
cmp
xor
mov
rolb
test
adc
ljmp
subl
jmp
cmpsb
mov
icebp
adc
rolb
and
dec
out
jp
test
lods
mov
lcall
pushf
imul
test
xchg
jle
adc
das
sub
push
sahf
push
push
popf
add
push
and
mov
aad
in
das
daa
bound
lds
inc
fildll
add
jg
or
pop
insb
mov
push
int
dec
mov
xchg
ret
mov
outsl
out
mov
jge
mov
sub
sbb
notl
lret
dec
mov
loope
jle
dec
hlt
adcb
je
jbe
stos
inc
add
or
sub
inc
push
push
std
cs
pop
xchg
xchg
xlat
xchg
lret
lea
outsl
mov
test
daa
ljmp
push
pop
sti
pop
es
stos
push
icebp
outsb
xchg
jl
daa
test
inc
popa
repnz
add
inc
mov
mov
dec
add
call
enter
daa
int3
imul
loope
mov
mov
push
repz
jne
pop
mov
cltd
push
mov
popa
nop
inc
lahf
test
mov
jg
inc
fs
inc
shll
jbe
pop
fwait
jle
mov
mov
cmp
dec
add
push
inc
lret
lahf
lock
enter
sub
sub
adc
sub
mov
ficoml
xlat
out
mov
xor
les
je
pushf
mov
ret
and
hlt
or
jnp
or
cmp
fdivl
dec
test
rcrb
pop
sbb
jnp
iret
loope
outsl
movsb
adcl
sbb
negb
lods
jbe
add
bound
push
cmp
outsl
jg
pusha
mov
ljmp
mov
into
push
add
mov
pop
sbb
ja
add
jae
repz
sbb
dec
add
mov
mov
sub
push
fidivrl
dec
je
jno
fwait
ret
sub
lea
mov
xchg
cld
jecxz
cmc
mov
xor
lret
out
jns
cmp
xor
xchg
ficoms
sub
sub
xchg
stc
mov
dec
sub
xchg
lret
sbbl
out
sub
lds
popf
mov
push
mov
jae
xor
pushf
mov
fsubrs
ficoms
leave
jno
adc
jno
out
sbb
push
ret
jp
daa
nop
sub
pop
xor
dec
int3
fucomi
pop
je
data16
call
ja
cmc
movsb
pop
sbb
mov
push
sub
mov
sbb
test
in
insl
loopne
sbb
xchg
je
and
adc
mov
mov
inc
or
mov
and
pop
jae
lock
push
mov
loope
std
pushf
or
mov
adc
das
adc
xchg
out
cltd
and
scas
pop
xlat
or
mov
jp
pop
das
cmc
and
repz
and
das
jle
das
add
inc
stc
pop
pushf
insl
mov
dec
shrl
or
push
iret
inc
shlb
cld
daa
setb
lods
push
subb
mov
dec
ret
mov
cmp
xor
mov
and
addr16
add
clc
cmp
push
lret
enter
jns
inc
punpcklwd
pop
ss
pusha
ljmp
xlat
jb
xchg
sub
mov
rorl
cmp
test
mov
pop
mov
pushf
rcl
mov
push
test
sti
xchg
xchg
sbb
into
ja
add
or
fldcw
dec
jg
sahf
inc
or
out
dec
aaa
and
pop
xor
ljmp
jbe
inc
lahf
cld
pop
rorb
xor
jg
jle
imul
ja
repz
out
ja
fcomip
std
loope
mov
out
bswap
into
repz
into
testl
scas
je
xchg
cmp
les
cmp
les
idiv
mov
cmp
mov
dec
mov
xor
push
mov
and
pop
mov
or
mov
cltd
lds
ds
bound
xchg
shll
xchg
xlat
ja
fstpt
jb
fisttps
lods
jmp
ljmp
adc
inc
lods
pop
ljmp
imul
push
mov
sub
rolb
mov
xlat
test
or
or
mov
or
jbe
cmp
repz
jmp
pushf
xchg
jmp
pushf
xchg
jmp
pushf
fwait
jmp
pushf
lahf
cmc
scas
je
aaa
pop
rclb
pop
lret
pop
mov
push
inc
pop
scas
push
dec
pop
cmpsb
push
dec
pop
sahf
push
push
pop
xchg
push
push
pop
mov
pop
mov
pop
xchg
sub
jne
xlat
mov
je
addr16
jbe
push
pop
jbe
push
lahf
pushf
jecxz
adc
inc
jnp
pop
fcom
shlb
adc
push
or
xor
jmp
mov
push
fwait
lods
inc
push
xchg
push
jnp
dec
pop
ja
scas
sbb
scas
pop
push
mov
outsb
stc
mov
ja
jb
fwait
adc
lret
sub
dec
iret
sub
dec
shrl
dec
xlat
sub
dec
fldt
dec
fildll
dec
jecxz
cmpsb
dec
out
sahf
dec
jmp
lcall
arpl
xchg
sti
bound
jmp
xchg
add
call
cli
pop
mov
cli
bound
add
push
repz
outsb
mov
stc
jb
xlat
stc
jbe
sar
jp
iret
stc
jle
or
push
sbb
out
pop
xchg
sarb
fcompl
into
sub
xchg
pop
jbe
or
fiadds
push
addr16
mov
aaa
cs
dec
push
inc
ror
scas
cmp
mov
out
sub
sub
sub
loopne
dec
mov
int
jb
ficoms
push
xor
or
mov
mov
sub
subl
cmc
cmp
pop
push
and
mov
cmpsl
xor
pushf
push
fsubs
lock
cmp
sti
movsl
sub
mov
sbb
call
cwtl
insb
xchg
cmp
pcmpeqd
push
daa
push
movsb
xor
adc
out
jbe
jmp
cmpsb
xchg
imul
mov
and
fidivrl
jl
sbb
bound
sub
lods
xor
dec
push
movsl
cli
cmp
adc
push
mov
dec
and
sbb
arpl
nop
out
sbb
fldl
xchg
jmp
adc
xlat
cltd
icebp
out
add
dec
dec
adc
or
push
or
bound
cli
xchg
xlat
pusha
xchg
arpl
push
clc
mov
cli
inc
xor
ss
mov
and
lea
testb
dec
cmp
xchg
pop
fistpll
shlb
pop
adc
and
ja
push
in
lea
ds
or
dec
xor
data16
movsl
cltd
dec
dec
arpl
hlt
pop
dec
test
add
ffree
sub
iret
ret
push
fisubrs
leave
jb
mov
rcrl
xor
mov
cmp
mov
xorl
jb
test
xor
sub
lds
dec
ficoml
pop
mov
xor
adc
idivl
mov
popa
cli
sub
aas
int3
cwtl
movsl
sub
jo
gs
insl
stos
xor
sbb
xchg
sub
dec
push
push
or
jl
push
pcmpgtw
jmp
nop
push
or
or
cmp
rolb
gs
popa
dec
xor
jle
call
dec
xor
or
jno
mov
loop
ja
jg
adc
rcr
jmp
lret
out
lret
mov
cmp
out
mov
rcrl
jbe
xchg
into
mov
lds
or
aaa
push
sub
inc
sahf
or
out
fsubs
mov
xlat
loop
add
jmp
xchg
sbb
jecxz
dec
shr
loopne
inc
mov
and
cmp
testl
xchg
dec
lret
pop
xor
cli
dec
stos
pop
out
inc
inc
sbb
cmpb
ds
stos
lods
mov
sbb
xor
rolb
jmp
fbld
and
or
out
scas
and
loope
dec
mov
xchg
inc
scas
scas
add
add
movsl
inc
in
pop
jp
push
arpl
jge
dec
inc
and
dec
jne
daa
js
xor
mov
push
into
xor
inc
cmp
lock
int
iret
out
xchg
stos
out
shlb
repz
push
adc
aad
jae
jne
mov
cld
and
inc
shl
xor
scas
int3
mov
jmp
sub
cmp
ret
fildll
mov
shrb
cli
cmc
enter
add
hlt
cs
popa
xchg
mov
and
fstpt
inc
add
push
lds
push
push
and
sbb
jmp
mov
add
jae
lods
outsl
jle
xchg
cmc
jo
inc
jl
mov
pop
lock
pop
jmp
cmovno
hlt
pop
adc
pushf
sbb
pop
cmc
stos
dec
xchg
inc
mov
cmp
jae
inc
jne
push
sbb
ljmp
sub
mov
sbb
add
arpl
test
lods
mov
nop
mov
pop
jns
lahf
scas
iret
mov
lea
test
mov
pop
adc
sub
je
cli
mov
dec
and
sbb
dec
mov
cmp
adc
cltd
repnz
mov
jnp
and
popf
bound
js
cmp
jae
sub
fsts
and
imul
sti
push
roll
jge
in
cmpsl
xchg
loop
js
es
jecxz
mov
adc
data16
addr16
sub
fidivrl
jo
test
dec
jno
loop
jg
push
addr16
cmovnp
les
adc
xchg
push
xchg
jl
addr16
mov
in
mov
xor
xchg
sub
mov
pop
push
add
jno
xchg
xchg
in
inc
fisttpll
sbb
sbb
pop
aad
and
nop
cmp
dec
loope
add
pop
xchg
lea
jno
daa
lcall
mov
icebp
lahf
stos
pop
mov
xchg
aam
push
ret
mov
xlat
fisubs
xchg
jno
sbbl
lret
or
dec
push
addr16
and
xchg
mov
xchg
adc
addr16
dec
rcrb
jns
or
mov
pop
aas
sub
jns
imul
sub
xlat
jmp
mov
mov
and
loopne
push
mov
jecxz
sbb
in
cmc
lret
push
push
iret
popl
jae
sub
mov
mov
hlt
outsb
test
call
push
shrb
sarb
jnp
xor
jno
call
inc
insl
xchg
mov
add
loopne
mov
decl
xor
mov
sub
dec
push
mov
outsb
je
sub
sub
movsl
mov
sahf
mov
add
aas
mov
mov
scas
out
pop
mov
ljmp
ret
xchg
stc
ret
daa
mov
fldl
out
movsl
in
xor
mov
out
inc
push
xchg
insl
cmp
sub
andb
pop
mov
fs
sub
fdivrs
xchg
dec
pop
cmp
pop
rcrl
dec
repz
push
jb
jg
mov
push
jl
scas
mov
stc
lock
dec
push
jp
outsl
lahf
lock
jecxz
ja
inc
rclb
sbb
mov
dec
test
jnp
repz
cmp
sub
and
std
push
mov
cmp
jg
dec
cs
mov
adc
xor
mov
fistpl
cmp
dec
lea
xchg
push
jp
cli
inc
or
not
repz
dec
adc
js
pop
shl
mov
fcoml
mov
andl
sub
xchg
inc
enter
in
xor
sub
dec
push
push
popa
pop
mov
cs
inc
pop
lret
ja
icebp
orb
adc
push
xchg
dec
test
pop
in
jl
rorb
sti
pop
sub
push
das
shrl
std
ja
hlt
maskmovq
mov
pop
pusha
test
or
dec
into
jl
outsb
outsb
leave
adcl
test
stos
mov
mov
pop
iret
imul
xchg
in
cmpsl
jge
inc
dec
mov
cmp
mov
inc
adcl
sbb
pop
sarl
pop
cmpsb
into
sbb
jl
popf
sub
mov
dec
xor
out
and
mov
sets
das
filds
mov
lds
and
ja
push
xor
gs
inc
cmp
jmp
addr16
scas
lret
cmc
sub
mov
cmpb
push
or
leave
xor
fmull
xor
movsl
xchg
dec
ret
mov
sbb
lahf
mov
loopne
pop
dec
xchg
dec
js
rcrb
ja
mov
mov
pusha
jbe
cmp
shl
lds
sub
outsb
mov
in
mov
mov
dec
cmp
leave
sbb
lea
mov
xchg
push
shl
jnp
push
and
sti
mov
and
mov
or
push
jo
ret
or
stos
sbb
int3
mov
cmp
insl
jb
mov
mov
repnz
jns
mov
je
mov
pop
xchg
xor
mov
inc
lret
push
mov
movsl
push
pushf
inc
push
xchg
cmp
pop
leave
xchg
jne
or
lds
cltd
inc
jbe
sbb
icebp
pop
jns
out
add
out
mov
mov
sub
sub
jg
cmp
ret
icebp
rorb
pop
and
stos
pop
ja
lret
lods
cmp
repz
les
cmp
sahf
and
divb
dec
cmp
push
les
and
sub
aam
add
pop
sub
dec
andl
loopne
popf
cmc
add
icebp
sub
fsubs
and
mov
popf
ffreep
test
xchg
jge,pn
push
cmp
or
rcll
pop
fidivs
xchg
jno
lock
dec
xchg
ljmp
in
in
scas
jp
sbb
in
mov
sbb
sub
lock
sbbl
dec
xor
or
pushf
mov
testb
imul
mov
out
push
repz
mov
into
sbb
sbb
mov
push
dec
push
test
dec
jle
pushf
inc
repnz
mov
pushf
cld
add
hlt
in
cmpsb
in
push
sbb
int
cmpsl
jb
stc
shrb
cmp
fs
mov
mov
stos
sub
pop
movsb
push
in
popa
pop
aas
ss
ss
push
mov
dec
int
aaa
insb
divb
cli
ja
sbb
das
xchg
test
les
rcll
or
int
fimull
loope
push
xchg
push
lret
addr16
je
les
sbb
mov
jg
shl
movsb
fnstenv
idivl
fdivrs
mov
inc
fs
daa
int3
test
insl
cmpsl
and
outsl
mov
pop
xor
adc
sbbb
jns
or
jl
sbb
inc
scas
stos
pop
adc
inc
jmp
stc
shl
lds
sahf
cmp
enter
out
arpl
clc
jb
ud0
mov
fisubrl
adc
xchg
and
jo
popf
unpcklps
jns
sub
jae
jbe
nop
filds
test
push
pop
dec
xchg
test
dec
idivl
and
mov
jp
xchg
enter
fstps
shl
out
pop
out
fnstenv
into
pop
lock
fsubp
sub
xchg
sbb
cmpsl
sub
mov
adc
sti
push
push
or
test
and
pop
loop
jbe
mov
add
jb
adc
cmp
mov
fnstsw
outsb
or
das
lcall
xchg
mov
inc
das
fcmove
test
pop
sar
das
pop
cld
bound
or
xor
jmp
arpl
in
push
sub
jae
mov
mov
push
jbe
mov
push
int
jbe
cs
fldt
adc
jne
lret
js
dec
cmp
cwtl
fidivl
imul
pop
dec
cmp
dec
adc
adc
mov
notb
lret
and
out
in
aas
mov
adc
mov
xchg
aam
mov
lods
add
lret
jne
inc
mov
lock
addl
lods
inc
repz
mov
cwtl
cwtl
icebp
repnz
insb
push
pop
in
cmpsb
inc
push
scas
mov
sub
cmp
mov
fisubrs
mov
fists
mov
filds
int
dec
inc
ljmp
cmp
xchg
jo
ret
jg
and
push
push
jl
aad
iret
fwait
lret
ds
push
adc
mov
dec
jb
data16
jle
inc
or
and
adc
add
cmp
add
out
hlt
loope
in
cltd
ja
push
push
outsb
cmpl
xlat
inc
dec
int3
fs
dec
loope
insb
jbe
ds
mov
sbb
fistl
addr16
xor
cmp
fsubrl
cmp
add
inc
icebp
cs
push
xchg
add
dec
jmp
addr16
shlb
test
push
inc
sub
dec
dec
xchg
outsb
jns
mov
jo
mov
cli
stos
push
dec
pop
jl
nop
test
adc
stc
out
xlat
rcr
in
dec
mov
sub
or
rorb
push
out
ss
push
jno
push
push
xchg
cli
push
adc
dec
pop
push
mov
inc
fistpll
int
cwtl
pop
jno
mov
and
and
inc
inc
fnstenv
mov
mov
lds
and
xor
out
leave
xor
jg
inc
ffree
pop
movsl
add
adc
pop
mov
fdiv
mov
add
loope
push
dec
je
lret
cmp
aas
cli
xor
cmp
out
movsl
cli
or
xor
icebp
sti
dec
fs
ljmp
add
test
cmpsb
gs
dec
incl
jmp
roll
mov
fs
aas
lods
sub
cmpsl
into
es
test
and
and
lret
insl
push
push
or
add
sti
mov
and
xlat
mov
repnz
into
cmp
mov
shr
insl
mov
cs
aad
mov
dec
push
enter
push
ficoms
movsb
jnp
mov
or
xchg
fcoms
mov
ss
pop
fs
push
pop
and
add
fwait
hlt
scas
and
pop
push
add
xchg
push
fsubrs
and
sub
and
ret
xor
std
jp
pop
and
out
repz
xor
dec
mov
jle
scas
xor
dec
ljmp
mov
jmp
aad
add
pop
lahf
fists
adc
add
lret
pop
inc
inc
cltd
repz
filds
mov
mov
je
cmpl
pop
pop
stc
int3
sahf
xchg
xchg
test
mov
lock
jg
in
mov
sbb
adc
push
adc
mov
sbb
shl
cmp
divb
and
push
add
push
cmp
and
mov
int
inc
dec
jns
mov
mov
sub
cmp
fcmovnu
push
adc
mov
int
push
aaa
roll
and
push
pop
test
mov
sub
lahf
imul
scas
xor
add
fisttps
cmpl
inc
flds
or
lahf
das
adc
scas
mov
push
fmuls
push
insl
cs
jge
pusha
mov
pop
inc
lcall
xchg
int3
fwait
jecxz
ds
adc
flds
enter
jb
xchg
dec
dec
pushf
mov
jg
sbb
mov
mov
jo
mov
insl
lret
add
cmp
ss
xchg
mov
iret
cwtl
jp
fadd
sbb
push
jle
js
mov
cmp
and
inc
push
mov
callw
cmp
lcall
popa
pop
jo
jns
mov
js
in
sbb
cmp
jp
push
inc
cs
loopne
mov
sbb
inc
mov
and
push
sbb
xchg
popf
imul
std
dec
mov
aaa
sti
insl
push
mov
repnz
inc
lret
mov
xchg
cmc
test
push
or
xchg
das
mov
pop
sub
add
mov
xchg
aad
out
loop
add
inc
test
jmp
pop
sub
incl
call
lcall
inc
cltd
sbbb
lods
stos
mov
or
insl
ljmp
mov
int
stos
sahf
push
inc
cltd
sbb
call
aas
dec
negb
push
inc
fwait
aam
mov
xor
mov
dec
loopne
sbb
shrl
jb
add
lret
jbe
xchg
xchg
mov
mov
add
in
mov
fiaddl
xchg
add
inc
xor
clc
gs
xchg
sub
add
inc
dec
dec
rcll
test
dec
push
adc
add
adc
fwait
lcall
rcrb
push
jbe
push
push
fadds
mov
push
and
or
adc
repz
ret
sbb
pop
icebp
sub
int3
xchg
sub
mov
add
pop
imul
movsb
jle
inc
adc
je
cmp
stc
les
xchg
push
push
dec
aam
xor
push
fisubl
nop
subl
imul
pop
je
aad
gs
out
out
push
sub
jne
jmp
ud1
orl
cmpsb
jl
mov
scas
pop
xchg
dec
and
pop
fwait
scas
es
loop
dec
stos
out
sbb
adc
faddl
inc
out
ret
jns
xor
aaa
jmp
pop
bnd
divl
push
dec
popa
lret
mov
adc
outsb
sub
mov
dec
lret
lahf
push
repnz
std
sbb
shll
leave
pop
pop
push
loop
cli
mov
add
out
rolb
fcomps
test
pop
mov
mov
rorb
dec
stc
imul
jno
ss
push
mov
lret
mov
pop
mov
pushf
idiv
bnd
insb
inc
mov
bound
pop
test
inc
adc
jb
mov
lcall
adc
sub
mov
xchg
fistps
inc
aaa
mov
fisttpl
aaa
sbb
ss
xor
pop
dec
mov
fstpl
lret
add
pop
cld
mov
out
mov
inc
mov
fidivrs
movsb
adc
push
and
xor
aam
scas
xchg
push
aaa
shrb
and
mov
ljmp
cmp
out
push
fdivr
jle
sub
mov
fiaddl
cmpsl
xchg
into
fcmovnbe
xchg
xor
or
mov
fsts
jle
test
jne
inc
mov
out
cmp
xor
adc
mov
jns
mov
push
push
push
imul
inc
nop
push
orl
iret
pop
mov
loop
aad
push
inc
imul
call
sub
mov
scas
fs
inc
adc
sbb
push
xor
jo
and
mov
inc
repz
arpl
out
mov
mov
fidivrl
dec
gs
adc
xorl
pop
pop
or
scas
xchg
das
push
cmpsl
leave
ljmp
mov
and
shl
add
mov
inc
adc
pusha
sub
inc
pop
in
add
jnp
test
push
cmp
ja
leave
pop
xchg
les
les
movsl
xlat
cwtl
neg
mov
sub
and
aad
push
cmp
inc
mov
insb
mov
aaa
mov
nop
sbb
add
xor
ds
xchg
cmpsl
mov
cmp
fisubrs
aam
in
mov
jp
jnp
clc
jecxz
sahf
jns
xor
and
repz
insb
cmp
je
mov
pop
dec
xor
inc
mov
imul
out
xchg
cli
int
xchg
push
pop
dec
pinsrw
int3
xor
dec
jg
pop
in
cmc
dec
xorl
loopne
dec
fistl
out
mov
shr
imul
iret
xchg
pop
lahf
cmp
jbe
mov
sarl
sti
pusha
adc
inc
push
pop
out
mov
std
inc
in
bound
lret
fs
sti
rolb
int3
js
fistpl
mov
add
and
sub
and
mov
push
xchg
shlb
out
decb
outsb
adc
sbb
adcl
call
dec
dec
int3
leave
xchg
iret
in
mov
xchg
fcoms
ja
xchg
scas
ret
inc
call
subb
scas
and
mov
dec
push
jno
out
incl
inc
repnz
gs
cwtl
mov
iret
jl
mov
push
jl
data16
pop
pop
add
jl
jbe
pop
les
aad
add
arpl
mov
nop
lret
sarl
outsb
inc
fistpl
cmp
jle
addr16
xor
sahf
mov
scas
ja
pop
adc
sbb
lahf
jge
jecxz
pop
js
cmp
insb
mov
aam
subl
mov
testb
pop
imul
xchg
out
sbb
mov
add
stos
cmp
popw
mov
and
imul
push
inc
and
push
mov
cmovle
test
scas
xor
mov
out
aas
rol
in
xchg
aaa
add
mov
scas
inc
bound
dec
sbb
pop
mov
ja
inc
dec
bound
mulb
mov
rcrl
cmp
test
int3
outsb
insl
cmp
fsubp
fsubl
mov
jb
mov
xor
mov
outsb
xlat
dec
stc
insl
lcall
sarb
fstps
mov
rcrb
mov
add
fisttps
jp
das
add
xor
adc
pop
enter
sbbl
push
clc
jns
out
mov
sbb
add
cli
stos
mov
test
jns
jbe
mov
pop
lds
xor
movsl
pop
pop
ret
push
stos
mov
ret
mov
das
cmpl
mov
inc
xchg
inc
xor
std
and
rolb
adc
mov
daa
aam
mov
jo
mov
shll
cmp
add
ficoms
shrb
ljmp
hlt
cmp
jae
fsubs
mov
filds
rcr
adc
iret
push
ds
shlb
call
std
push
nop
enter
loop
idivb
pop
add
cltd
dec
enter
pop
les
shll
rorb
shll
in
mov
and
adc
aas
icebp
sub
mov
lea
pop
dec
push
dec
cmp
cmp
mov
and
or
and
cltd
out
cmp
push
push
push
sub
aaa
pop
clc
mov
cmpsb
and
fsubl
mov
sahf
pop
xchg
mov
inc
aad
mov
icebp
push
jb
add
xor
jle
mov
xor
movsl
or
mov
pop
jle
enter
pop
mov
push
pop
into
or
sbb
lret
ret
andnps
sbb
mov
add
je
pop
ret
gs
xor
in
cli
imul
xlat
sbb
stos
xor
jo
hlt
mov
xor
xchg
das
push
fcmovbe
mov
rclb
pushf
inc
outsl
pop
add
stc
push
pop
setb
out
inc
jmp
inc
mov
ror
cwtl
outsl
dec
sub
jl
jecxz
mov
pop
lcall
es
dec
es
jl
cmp
jne
aam
js
jb
dec
sbb
inc
fstl
inc
dec
fisubrs
pop
stc
aas
xor
imul
mov
jmp
aas
lahf
loopne
out
int
nopl
cs
push
xlat
add
into
xchg
push
adc
paddq
sbb
pop
jno
jmp
in
pop
xchg
xchg
inc
test
fildl
imul
push
or
add
pop
sub
xor
push
add
dec
sub
pop
and
sbb
jge
cmp
iret
call
xchg
cmpsb
icebp
cmp
adc
sbb
mov
push
cmp
jae
xor
jl
and
out
in
sub
xchg
mov
call
repz
push
loopne
mov
add
mov
mov
cmc
popf
call
and
xlat
sahf
sub
pop
int3
lods
ja
loopne
and
cltd
sub
roll
jl
cmp
xor
mov
mov
dec
sub
movsb
insb
pusha
dec
sub
scas
pushf
adc
mov
mov
out
sub
in
shlb
nop
jl
movsl
push
adc
xchg
pop
int3
int3
in
popa
cmp
fildll
shrl
pop
notb
mov
jbe
arpl
sbb
adc
pop
icebp
jge
xlat
add
lahf
addr16
mov
or
enter
cld
sbb
mov
stos
in
push
insb
insb
lods
cli
shr
jle
add
pop
je
inc
nop
xchg
adc
loop
jae
lods
push
aad
cmp
inc
add
cli
xor
pop
sub
jl
shlb
pusha
stos
iret
outsb
negb
xchg
mov
out
aas
les
sbbb
inc
js
jne
in
ret
out
sub
jae
xor
push
sbb
imul
cmp
push
cli
pushf
xor
cli
pop
lahf
mov
shrb
cmpsl
pop
sbb
mov
pushf
lcall
sub
pop
inc
push
ja
pop
scas
mov
lcall
adc
sbb
push
cmp
clc
mov
test
pushf
aas
mov
push
push
mov
mov
dec
push
test
mov
jmp
aam
sub
xor
jl
stos
push
lcall
ja
add
jo
testb
aam
shlb
jle
movsl
stos
mov
scas
aaa
or
jg
mov
movsl
pushf
sub
or
jne
mov
pop
xchg
mov
lods
test
dec
leave
push
mov
push
jecxz
stos
out
mov
inc
inc
dec
shll
push
mov
js
cmp
jp
cmpsb
hlt
clc
sub
fsubl
adc
test
inc
pop
cwtl
mov
fildll
cltd
jg
inc
or
in
adc
cmp
pop
filds
jae
xchg
mov
ja
jns
jp
shll
cmp
lods
pop
fcoml
xor
scas
in
ja
inc
mov
mov
push
and
leave
leave
cs
push
dec
nop
push
nop
dec
cmp
pop
stos
pop
out
inc
pop
cmp
jo
fbld
xchg
jp
and
subl
inc
cmp
pop
outsl
std
xchg
leave
mov
jecxz
lcall
clc
and
lret
dec
mov
mov
inc
jmp
shll
nop
cli
popa
loope
repz
pop
mov
sti
ja
push
push
push
test
fildll
jns
out
fsubrs
mov
mov
xchg
inc
call
popf
es
mov
jae
push
sub
inc
das
bound
lret
pop
in
adc
jbe
push
push
cmp
incb
fwait
cld
or
pop
xor
xchg
test
pop
jp
mov
pop
add
pop
stos
inc
sarb
scas
inc
inc
test
into
add
and
dec
sbb
cmp
aad
testl
or
inc
sarb
cmp
inc
fidivrs
int3
jle
scas
jmp
xchg
sub
jl
mull
dec
addb
aaa
jbe
add
add
into
xor
iret
xlat
cltd
and
nop
or
inc
push
pop
fidivrl
cmp
lock
or
jns
mov
aas
xor
ror
outsw
mov
jge
into
lret
mov
xchg
cmp
pop
sub
adc
jmp
jbe
test
xchg
and
push
sub
ja
pop
mov
pop
xor
cmpsl
jo
test
lret
lods
out
cltd
mov
lcall
fstpl
fidivl
or
cmp
lahf
lock
adc
ret
jle
cmp
ds
mov
fsubrl
jge
les
ror
or
xor
hlt
mov
ja
jg
jge
xchg
arpl
pushf
scas
mov
cmp
mov
add
pusha
mov
push
inc
es
test
roll
xchg
es
stos
inc
mov
adcb
imul
mov
fbstp
and
shl
mov
mov
lret
movsl
sub
pop
iret
fistpll
push
bound
xchg
rdtsc
inc
rcll
dec
shll
enter
pop
fistpl
xor
imul
add
fnsave
jns
and
ficomps
adc
inc
daa
lea
pop
cmp
jl
mov
aam
adc
sbb
mov
orl
rorb
call
sbb
hlt
cmp
mov
mov
mov
jmp
aaa
cvtdq2ps
in
arpl
sub
and
call
and
jnp
or
xchg
pop
ljmp
icebp
or
ds
cmp
popf
cmp
and
das
pop
jne
aas
jno
fsubr
in
jo
mov
test
jge
call
xchg
mov
fstl
jb
cmp
sbbl
fistpll
ja
adc
lret
loope
and
adc
pop
mov
loop
inc
dec
xor
pushf
clc
mov
and
sbb
cmpsl
add
int3
mov
mov
jbe
int3
and
xor
lcall
movsb
xor
xorb
mov
aaa
or
insl
sbb
mov
popa
mov
dec
ret
cmc
mov
sub
out
push
xchg
mov
in
push
add
loope
mov
outsl
dec
repnz
dec
adc
negb
xor
push
jmp
push
push
cmpsl
sarb
xchg
pop
lcall
cli
fistpl
jo
mov
add
fdivrs
mov
lods
push
idivl
cmp
mov
aaa
push
pop
inc
and
jecxz
call
pop
mov
fimull
fsubrs
xchg
add
pusha
or
xor
push
mov
jne
pop
jno
aam
cmpsb
testb
xchg
dec
loop
pop
xor
jecxz
pop
push
divl
push
jg
mov
arpl
lods
mov
in
stos
fstps
sub
sub
loop
sbb
sbb
filds
into
or
les
mov
cmp
dec
jl
jae
repz
fcomps
jmp
xor
test
imul
sahf
mov
and
sarb
sub
xor
xchg
xchg
sub
jp
inc
mov
xor
cmp
push
lcall
inc
dec
nop
adc
pop
andb
sub
sbb
bound
repz
push
inc
dec
iret
sbb
insb
push
add
ss
adc
mov
lods
xchg
sbb
pop
inc
or
cld
or
mov
dec
push
push
jno
imul
out
xlat
xor
pop
stos
inc
push
or
adc
into
xchg
jl
addr16
mov
jg
jne
nop
push
in
cmpsb
ds
mov
add
adc
and
push
mov
pop
push
in
jno
fs
outsb
xchg
or
sub
fs
test
lods
lds
insl
inc
imul
fldenv
sub
xchg
pop
mov
fdivrl
pop
fmul
xchg
test
sahf
shll
or
sub
fdivr
and
cmp
loopne
test
daa
sbb
dec
mov
rorb
imul
push
push
scas
jnp
lcall
push
inc
or
cs
test
es
hlt
and
inc
mov
mov
mov
dec
adc
and
lods
adc
hlt
mov
pop
insl
into
mov
cmp
add
mov
jne
notl
lods
das
add
fisubrs
push
pop
adc
add
sub
stos
xchg
dec
jmp
dec
push
lret
sbb
lds
mov
cmp
shll
test
loopne
cwtl
cmp
gs
out
add
inc
jnp
lret
test
in
jb
push
test
dec
je
lods
add
pop
idivb
cmpsl
inc
lret
inc
outsl
sbbl
xchg
lahf
scas
cld
mov
add
sahf
jecxz
inc
push
push
divl
iret
jns
mov
xchg
stc
dec
dec
xchg
mov
divl
cmp
dec
punpcklwd
dec
cmp
or
lock
pop
xor
call
insb
pop
int3
xchg
jbe
push
stos
sbb
and
movsb
mov
cmpsl
lahf
cli
mov
and
and
std
hlt
scas
dec
sbb
mov
sbb
nop
and
mov
xchg
pop
mov
ret
sbb
jle
jnp
push
inc
int
fildll
repz
mov
xor
xchg
mov
xchg
sar
sbb
outsb
iret
popa
xor
cmc
insb
xor
add
ss
sub
push
jmp
int3
cmp
push
sti
in
and
out
fmulp
icebp
xchg
cmp
cmp
es
imul
cmp
data16
fsubr
arpl
lcall
popa
test
test
add
xchg
mov
insb
or
jmp
js
inc
sbb
insl
or
ja
push
outsb
insb
inc
or
js
jl
xchg
movsb
inc
cmp
imul
dec
adc
jmp
mov
jno
pop
xchg
fcmovne
add
loopne
outsb
lds
in
stos
enter
mov
cmp
inc
aas
incl
ss
add
pop
cmp
fisubrl
dec
or
inc
aad
rcrb
pop
stos
jnp
xor
mov
mov
enter
xor
iret
xor
js
decl
nop
fwait
add
insl
es
ret
jmp
mov
push
pop
test
xlat
jae
jnp
repz
fnstenv
adc
test
mov
scas
dec
sti
push
mov
jl
imulb
bound
cmp
outsb
in
xchg
inc
repnz
or
vmovhps
insb
adc
push
gs
jbe
shrl
dec
imul
sarb
xor
push
mov
inc
aas
js
aam
dec
gs
or
test
pop
mov
mov
fists
mov
loopne
jae
push
aas
inc
aaa
add
mov
shl
out
nop
mov
or
cmp
inc
xchg
ret
out
xchg
xchg
mov
outsb
pop
xlat
and
inc
rep
jae
jmp
movsb
mov
inc
scas
inc
push
mov
jbe
imul
or
cmc
xlat
gs
push
cli
lcall
jae
divb
and
xor
dec
sub
jg
ds
icebp
xchg
das
addr16
sbb
push
clc
jno
xchg
in
test
in
or
cmp
xor
mov
aad
call
dec
and
outsb
sbb
or
lods
cltd
int
fcmovu
xor
jg
int
imulb
cs
sub
cmp
jno
mov
bound
testl
cmp
jp
ret
sub
pusha
mul
push
add
scas
fstpl
cmpsb
jp
pop
insb
ficompl
rcll
push
or
gs
inc
push
mov
and
and
int3
popa
inc
clc
enter
ret
push
mov
fldenv
je
dec
outsl
jnp
jg
shrw
xchg
pop
sbb
sub
out
cltd
orl
jb
mov
adc
jbe
movsl
inc
and
sbb
xchg
jns
xor
adc
lea
jmp
sbb
rep
cmc
mov
dec
ret
jnp
ficomps
jge
mov
les
mov
scas
mov
fildl
xorl
jecxz
sbb
jb
cmp
insl
cmp
sti
leave
subl
icebp
aaa
jmp
xchg
push
sub
mov
mov
xor
push
pop
xchg
test
std
dec
cmpsl
xchg
stc
aas
sbb
nop
or
cwtl
int
fimuls
dec
and
orb
mov
lock
mov
es
lds
out
ss
inc
cs
push
sbb
insl
xor
push
push
xchg
and
cmpl
push
mov
out
pop
cmpsb
mov
mov
mov
adc
hlt
cli
xor
das
xor
aam
fcmovne
sbb
mov
sub
sbb
mov
jmp
or
daa
dec
mov
sbb
cmp
int3
mov
gs
jp
and
repz
sub
bound
in
iret
hlt
mov
lock
ljmp
fldcw
xor
dec
or
adc
push
popa
scas
rolb
dec
jmp
repnz
rcrl
ss
nop
xchg
push
ret
sti
mov
shlb
add
imul
lret
xlat
adc
insb
pop
fdivrl
push
jne
mov
aas
aas
jmp
rorb
push
lcall
cli
xor
sub
fisttps
mov
bound
add
mov
mov
inc
push
fsubrl
rcrb
push
sti
sbb
push
push
test
jmp
dec
xor
mov
inc
jne
inc
rcll
repz
sahf
psubsb
xchg
in
mov
or
sbb
xor
bound
ja
pop
cwtl
cmp
test
and
lea
das
repz
or
repz
fdivp
aaa
cld
and
adc
lahf
mov
mov
mov
bound
sahf
into
test
xchg
inc
push
inc
jge
cld
and
pop
sub
fdivrl
imul
mov
jnp
dec
jl
xchg
out
lret
ds
inc
mov
pop
stos
stc
sbb
cwtl
push
and
pop
mov
out
stc
aam
jmp
lret
mov
js
sbb
mov
das
cmpsb
cmpsl
lret
scas
test
dec
or
xchg
xor
ret
mov
fnstsw
and
test
mov
daa
loope
sub
and
das
push
filds
in
adc
adc
or
imul
inc
and
mov
out
lahf
cmp
mov
sub
and
ret
adc
cld
rolb
sti
pop
ljmp
fldcw
mov
push
xchg
mov
lea
or
repz
mov
dec
mov
push
mov
cmp
mov
inc
inc
lods
jae
jmp
movsb
push
inc
jle
dec
test
sub
or
mov
pop
stos
ret
in
loope
es
inc
xor
imul
lea
and
dec
aam
inc
cmp
sbb
pop
hlt
xlat
hlt
add
std
add
fmuls
or
int3
push
daa
xchg
mov
jno
dec
mov
mov
hlt
and
aam
mov
movsl
and
sbb
test
ret
test
aam
aam
scas
sti
bound
dec
cmp
push
xchg
ja
add
pop
sub
and
jle
out
inc
mov
dec
mov
mov
or
mov
mov
mov
mov
add
aam
mov
loope
inc
jo
jno
cs
dec
sub
nop
and
scas
xor
adc
pop
push
dec
mov
sbb
sub
mov
in
cs
jmp
pushf
mov
push
ret
jge
mov
ret
xchg
cmp
es
push
sbb
hlt
fbld
ljmp
inc
and
fdivrl
mov
cmc
adc
fldenv
inc
das
cmp
mov
push
nop
nop
pop
sub
cmc
out
test
sbb
jmp
inc
sub
stos
mov
jno
and
rolb
mov
test
mov
pop
sub
mov
adc
iret
xchg
xor
xchg
aas
and
inc
adc
loop
mov
push
mov
push
dec
push
mov
lock
outsb
divb
popf
xchg
mov
xrelease
cld
xchg
insl
jl,pn
jae
push
mov
pusha
cmp
jmp
loop
xchg
filds
rorl
mov
dec
das
pop
push
addb
xor
outsb
iret
add
pop
fdivr
and
fisubs
sub
mov
push
cmpsb
xor
jns
imul
inc
scas
add
stos
outsb
pusha
and
sti
sub
jge
pop
test
cltd
xchg
insb
adc
push
jbe
mov
push
pop
call
into
cmpb
test
mov
xor
scas
jmp
push
adc
sub
out
mov
aaa
jl
inc
imul
mov
dec
jl
and
add
je
ret
sub
add
and
xchg
add
pop
add
loop
cltd
jne
inc
jge
call
push
outsb
mov
loopne
or
sub
cmp
cs
hlt
mov
es
jge
lcall
dec
outsb
inc
sbb
mov
testl
sar
in
push
int
add
xorb
lahf
test
test
jnp
daa
ja
xor
les
pop
jne
mov
bound
in
popf
or
int
ss
repz
mov
fs
pushf
and
pop
cmc
loopne
inc
push
mov
jb
sub
orb
add
sub
jnp
mov
fsubrs
jge
mov
dec
loop
lds
lods
push
push
inc
push
push
add
rclb
push
in
mov
mov
pop
jo
jne
insb
push
aas
scas
mov
sub
jp
xchg
rcrb
pop
fstpt
pop
xlat
push
dec
arpl
push
sbb
pusha
or
or
ljmp
mov
cmpsb
jbe
gs
aaa
pop
push
pop
daa
pop
in
sbb
je
pop
les
das
lods
sub
cmp
test
and
jae
je
negl
sbb
add
push
and
mov
loop
mov
sbbb
dec
dec
cmp
pop
fsubl
das
fs
lcall
and
mov
jnp
icebp
mov
jbe
jb
inc
and
clc
pop
aaa
ret
or
fildll
dec
xchg
fdivs
sbb
and
push
test
and
test
sarb
cmp
popf
lcall
jae
xlat
pop
jae
and
or
push
pop
jbe
xor
negb
cmp
and
jns
and
nop
out
pop
rcrl
std
ljmp
aaa
out
mov
pop
loopne
push
push
push
adc
push
lock
adc
outsb
lods
outsl
shr
inc
mov
mov
cmp
mov
mov
es
inc
ljmp
cltd
nop
pop
push
imul
fwait
and
inc
pusha
lods
xchg
xchg
aas
addr16
and
xor
jle
cli
or
fs
and
xchg
jb
pushf
fstl
sbb
lds
or
adc
lret
add
mov
insb
pushf
dec
fs
add
sub
outsl
arpl
lods
push
sbb
aaa
js
hlt
es
jae
outsb
shrb
mov
adc
out
add
test
xchg
scas
mov
sub
popf
jmp
nop
das
mov
imul
filds
jmp
and
dec
mov
jae
mov
and
sub
mov
mov
test
mov
daa
lods
fwait
inc
test
sub
push
int3
mov
in
outsl
cmp
and
cmp
cmc
push
sub
sub
pusha
cmp
mov
push
pop
dec
int
ret
push
lret
scas
iret
nop
fbstp
lret
inc
mov
dec
or
mov
pop
push
pop
lods
xchg
mov
push
adc
mov
jae
or
pop
jnp
rcr
into
and
jno
dec
pop
mov
dec
rclb
pop
aam
jecxz
jo
jg
mull
stos
pusha
pop
pushl
movb
inc
ss
mov
outsb
jle
clc
std
repnz
rorl
cmp
rcr
sbb
ljmp
in
jge
lds
xorb
lods
push
scas
push
inc
and
mov
mov
sarb
cmp
out
movsb
push
stos
sub
test
addl
adcl
adc
adc
ja
jge
outsb
dec
jge
pop
mov
inc
loope
or
xchg
insl
sub
dec
movaps
je
cmpsl
jbe
mov
adc
push
xchg
hlt
cmp
mov
cld
std
jle
sbb
dec
int
push
inc
ljmp
stos
and
loopne
pop
inc
sahf
sub
xlat
adc
popf
nop
rol
adc
or
cmc
inc
adc
mov
fsts
jns
add
xchg
adc
loope
inc
mov
frstor
mov
adc
test
inc
and
jb
adc
mov
cmp
std
lcall
sub
jmp
sbb
sbb
in
and
mov
rcll
adc
cmp
in
xor
mov
sahf
pushf
mov
es
pop
insl
ds
insl
insl
jmp
dec
sbb
dec
cmc
outsl
jbe
inc
out
test
fwait
add
fwait
cld
nop
mov
mov
xchg
test
inc
sub
int3
leave
mov
xchg
add
leave
roll
addr16
cmp
push
inc
pop
mov
inc
test
jle
dec
fisttpl
in
jae
aaa
lods
icebp
in
and
aad
fistpl
fistps
movsb
fwait
mov
push
mov
jo
xchg
jnp
add
clc
aam
dec
pop
pushf
add
stos
movsb
mov
sub
ds
xchg
js
inc
push
mov
xor
out
cwtl
pop
out
lock
enter
leave
mov
add
test
movsl
xchg
push
sbb
lock
outsl
pop
dec
mov
movsl
lret
and
jp
das
scas
loope
xchg
addb
jecxz
pop
sbb
add
jae
icebp
lods
push
cmp
lcall
fmul
sub
mov
mov
jecxz
ja
in
lahf
inc
sub
cmp
sub
movsl
shll
in
xor
int3
insl
mov
cmp
sub
pop
and
inc
add
inc
dec
mov
ss
lds
rclb
jo
xchg
xor
leave
sahf
lret
lret
aas
jmp
pusha
xor
fsubrs
cs
inc
repnz
imulb
push
addr16
mov
ljmp
inc
xchg
adc
addr16
cmp
jb
inc
popf
or
mov
aam
jle
int3
cmp
xlat
cmp
cmpsl
cltd
data16
mov
fistpll
adc
jle
sets
lahf
add
dec
jbe
test
xorb
adc
jl
mov
pop
repnz
lcall
mov
cmc
pop
cmpsl
lea
push
inc
jge
aam
and
outsl
cmpsb
pushf
add
xor
push
mov
sub
xchg
nop
int
mov
push
xchg
ret
cmpsl
popf
movsl
scas
sub
push
inc
cmpsb
inc
or
and
lea
xchg
jb
pop
jge
mov
inc
ja
jecxz
lcall
xlat
and
insl
gs
sti
cmp
jmp
adc
adc
jnp
xlat
movsb
xchg
mov
xchg
inc
cwtl
sub
and
test
lcall
adc
mov
cmp
dec
mov
shlb
pop
fldt
add
jne
cmp
test
pop
mov
xor
sbb
nop
ja
lea
out
cld
inc
and
adc
push
pop
mov
pop
pop
cmp
and
imul
sbb
cmc
pusha
sub
adc
mov
leave
jnp
xor
mov
cmp
mov
nop
ljmp
daa
mov
lea
lds
xchg
test
or
cmp
mov
mov
xor
mov
mov
mov
sarb
xlat
dec
sbb
jge
std
int3
cmp
int
pop
adc
adc
lods
mov
push
dec
iret
data16
fstpl
adc
mov
popa
or
inc
daa
sbb
pop
jg
push
int
push
cmc
in
mov
and
mov
add
es
inc
imul
mov
cltd
pop
mov
testl
push
xlat
mov
jbe
push
xchg
pop
mov
and
xchg
addr16
add
stos
mov
cmp
push
jge
ret
mov
push
pop
popf
rolb
or
push
xchg
mov
mov
aad
and
cmp
aaa
rolb
hlt
sub
dec
sub
cmc
and
pop
jb
enter
inc
push
test
pop
nop
stos
test
shll
cld
fsubrl
popa
jge
nop
dec
jmp
sti
mov
xchg
test
jmp
es
in
xor
mov
mov
out
mov
fs
int3
jge
mov
cmp
xchg
sub
jne
dec
inc
clc
mov
xchg
incl
les
dec
in
sahf
ljmp
hlt
mov
cld
push
pop
push
lock
and
inc
inc
inc
daa
sarb
xlat
pop
ljmp
sub
lret
in
aas
add
xchg
and
push
movsb
dec
dec
pop
adc
loope
xchg
mov
lods
sahf
in
jmp
mov
mov
shll
ss
loop
jnp
lahf
jae
int3
adc
ror
idivl
nop
jl
enter
or
stos
mov
mull
out
nop
xchg
fbstp
rclb
sub
mov
and
xor
jbe
les
call
int3
cmpsl
fimull
imul
ja
loopne
add
inc
dec
inc
in
cmp
pop
mov
pop
js
pop
and
pop
sub
fildll
push
sbb
sub
rep
es
scas
xor
xor
mov
cmp
movsb
jnp
es
xchg
push
cmp
sbb
enter
push
cmp
cmpb
push
les
ret
shlb
ret
mov
inc
repnz
cmp
arpl
cmp
rcr
imul
idiv
fldt
fdivrs
daa
pop
aaa
gs
jbe
je
sub
and
add
pop
jecxz
pop
jno
push
mov
cmp
cmp
add
daa
cmpl
inc
cmp
jnp
lahf
add
xorb
mov
mov
ja
scas
lods
cmc
cmp
mov
inc
push
lods
push
icebp
xor
psubusb
outsb
xchg
lods
inc
cmpsl
movsb
push
aad
dec
pop
adc
push
adc
pusha
add
int3
push
addr16
gs
dec
mov
and
dec
imul
cmp
add
inc
xchg
sub
js
xor
jmp
loope
fwait
or
mov
sub
outsb
inc
push
push
push
sbb
daa
loopne
add
in
adc
in
in
mov
ret
xor
pusha
mov
sbb
fbld
dec
push
or
out
jne
jb
call
sub
or
insl
ret
adc
das
sahf
lea
add
cwtl
cmp
sbb
ja,pt
lcall
mov
pop
mov
inc
mov
fbld
or
test
push
lret
mov
add
cmc
sahf
and
stos
popf
je
sub
push
aaa
scas
add
out
jb
mov
repz
jae
mov
lahf
aam
movsl
jp
push
mov
add
pop
dec
jle
pushl
int3
adc
fisttpl
and
in
in
xor
push
lea
pusha
repz
adc
fidivrs
and
mov
sub
dec
inc
stos
movsb
daa
xchg
mov
dec
push
jno
pusha
pop
pop
dec
dec
std
cli
call
lea
icebp
sub
xor
fistpl
call
mov
fs
and
es
adc
or
inc
push
mov
dec
jo
outsb
xor
mov
stos
jecxz
mov
jb
mov
sbb
adc
mov
cmp
or
test
jmp
xchg
aad
inc
jae
mov
sub
in
inc
mov
scas
cmc
push
les
xor
pop
lods
sub
sub
mov
dec
in
and
inc
mov
aam
push
pop
push
jno
lret
mov
repz
adc
push
or
les
sub
fs
mov
jb
clc
imul
jno
jle
add
das
test
out
lods
icebp
jle
adcl
movsl
mov
out
fdivl
add
incb
fbld
and
es
sbb
pop
dec
outsl
mov
xchg
repz
xchg
sub
jne
jmp
mov
sub
in
sub
shlb
std
gs
rcrl
jae
inc
pop
dec
xor
mov
dec
jecxz
imul
add
outsb
cli
pop
pop
xor
das
xorl
sub
jmp
lahf
jge
add
pop
rorl
inc
cmc
mov
sub
addr16
fbstp
mov
inc
mov
dec
add
sub
frstor
cmpsb
add
xor
xchg
lret
nop
jg
cmpsl
xor
movsl
test
bound
scas
imul
xor
pusha
outsl
orl
bound
fsubrl
fistl
fisubs
sub
dec
add
rep
pop
cmp
mov
std
inc
and
lcall
jae
and
out
sbb
sbb
lods
in
mov
mov
jbe
dec
test
inc
mov
pop
xchg
lds
and
adc
sbb
mov
jbe
cmpsb
add
out
jg
mov
mov
sahf
sbb
mov
cli
bound
shlb
sub
add
jge
or
pop
ret
aam
add
jp
and
inc
repnz
sub
adc
pusha
push
stos
pop
cmp
mov
cmp
inc
mov
mov
in
outsb
mov
add
int
add
pop
cmp
dec
and
cmp
mov
in
dec
sbb
mov
aad
sahf
sbb
push
roll
cmp
mov
orl
inc
cmp
pop
icebp
and
dec
push
pushf
sahf
bound
popf
and
lcall
cmpl
jl
ficomps
mov
cmpsl
outsb
insb
fisubs
jno
fadds
shll
jp
push
lcall
lret
sub
sub
jp
add
fnsave
xor
push
hlt
lcall
push
jns
lret
pop
mov
mov
sbb
push
mov
and
add
call
push
ficoms
addr16
scas
fadds
cmpsl
inc
adc
test
loopne
setb
in
push
in
ret
and
inc
jae
adc
pusha
xchg
ljmp
add
jge
or
shll
sub
faddp
mov
add
mov
aad
stos
pop
icebp
test
cmp
pop
sub
cmp
pop
pop
ret
xor
cmpl
test
repnz
push
leave
sbb
push
dec
dec
pop
sub
xchg
lea
cmc
inc
cmp
cltd
mov
push
popa
cmp
aas
inc
sbb
xchg
inc
xchg
mov
cmp
jae
push
sarl
mov
int
divl
cmp
xor
test
clc
push
mov
out
jns
test
adcb
sub
stos
cmp
pop
mov
push
xchg
add
int
jo
xor
int
mov
inc
mov
ret
data16
pop
sub
fisttpl
hlt
and
cmpsb
adc
xor
and
adc
inc
imul
mov
cmp
call
call
pushf
adc
sub
cmc
inc
pxor
mov
sbb
out
add
sub
imul
ficomps
rcrb
ret
test
stc
popf
les
popa
adc
xchg
mov
pop
movsl
fiadds
gs
enter
lahf
sahf
filds
loopne
lcall
cmpsb
js
int3
push
je
fisubs
in
mov
and
dec
dec
push
sub
or
cmp
aam
cwtl
cmpsl
int
mov
fstl
icebp
jae
add
xor
out
add
jno
adc
mul
push
mov
in
stos
mov
and
lcall
fwait
sbb
jns
sarb
cmp
stos
sbb
inc
ret
cli
clc
xlat
sbb
nop
inc
mov
jnp
out
insl
outsl
loope
shl
mov
xchg
cmpsl
rcl
pushf
jp
inc
push
or
xor
ja
pop
jl
mov
sbb
xchg
lea
ja
push
cmpsb
xchg
cmpsb
xchg
call
mov
pushf
pop
cmp
push
iret
ret
cmpsl
and
adc
ja
and
dec
test
scas
fs
sub
pop
add
mov
push
fwait
pop
xor
add
adc
lret
lahf
cmpsl
lret
pop
loop
xchg
push
sub
jo
pop
bound
dec
mov
pop
clc
iret
or
in
bound
mov
sub
shr
in
xchg
outsl
mov
adc
add
mov
movsl
jno
sub
aam
mov
mov
jo
and
movsl
sbb
iret
or
insb
ret
in
hlt
jp
sub
dec
rolb
jp
push
js
sub
outsl
shll
repz
imul
push
push
xchg
mov
xor
push
dec
push
test
mov
jle
mov
outsb
mov
mov
pop
lds
xor
fwait
mov
mov
and
fwait
xor
cmp
sub
ret
jp
rolb
stos
mov
inc
call
test
mov
xchg
push
jo
xor
cmpsb
jne
or
push
jns
cltd
test
dec
sbbb
xlat
adc
scas
ds
cmc
and
pop
dec
outsl
cmp
push
add
and
mov
out
lods
push
rcll
call
pop
cltd
mov
ret
das
xchg
popl
xchg
rolb
push
inc
pop
push
jae
dec
imul
enter
lret
clc
idivb
repz
mov
lcall
sbb
mov
and
jo
xor
push
add
adc
and
and
enter
scas
or
sub
pop
jmp
and
xchg
stos
rcll
nopl
sub
xor
or
imul
sbb
adc
add
test
xor
movsl
pop
pop
rcll
test
mov
push
lret
and
idivb
jp
sti
xchg
and
popf
ret
inc
cmp
push
lret
adc
aam
mov
cmp
aaa
dec
and
jbe
sub
sahf
mov
mov
sbb
gs
push
jb
jg
sbb
add
jp
xchg
push
out
scas
lret
repz
dec
cmc
mov
push
dec
sbb
add
dec
cmp
mov
push
arpl
ds
pop
adc
enter
sub
lods
pop
cmpl
xor
aaa
inc
sub
loopne
add
fnstcw
out
movsl
mov
xchg
inc
sub
shrl
dec
or
mov
and
pop
sub
sahf
sbb
pop
push
pop
mov
sub
xchg
call
sbb
jne
cmp
inc
sbb
add
mov
cld
fisubs
pop
adc
outsb
mov
cmp
mov
mov
mov
push
cmp
lock
das
insl
insb
sbb
jns
mov
cmp
inc
shlb
mov
out
insl
push
push
mov
jecxz
popf
in
fs
push
dec
loope
or
fiadds
mov
cltd
jle
fadds
mov
out
or
cli
jb
fcoms
ja
mov
scas
fstps
mov
das
push
je
sbb
cmp
cmp
mov
je
jb
pop
jb
sbb
mov
enter
inc
ljmp
hlt
and
icebp
in
jg
push
sub
mov
fstps
sub
cli
repz
pop
je
xchg
push
push
mov
int
scas
push
stc
sarb
mov
lods
cmp
fistl
xchg
sarb
add
frndint
arpl
push
rorl
or
pop
xor
aam
lret
jp
push
and
push
imul
imul
mov
test
loope
data16
mov
xchg
aad
pusha
add
fcoml
dec
cmp
xchg
sbb
sbb
bound
dec
loopne
rcr
testb
fwait
sub
adc
xchg
jae
push
mov
xor
fnstenv
cmp
insl
inc
fcmovu
imul
fsubrl
mov
loope
push
pop
jmp
jecxz
cmp
push
pop
sub
loope
xchg
mov
sahf
dec
aaa
cmp
jbe
push
mov
mov
fstpl
push
scas
push
lret
fimuls
rolb
mov
lds
pusha
add
mov
jecxz
cmp
push
dec
aas
cltd
cmp
inc
loope
fsts
push
xor
inc
dec
ljmp
out
les
fbstp
cmp
in
mov
int3
outsl
repnz
push
jno
les
mov
sub
dec
push
out
scas
ror
in
cmc
jnp
pop
icebp
pop
mov
aaa
addl
call
push
jmp
sbb
mov
setnp
imul
jmp
fdivl
and
les
sbb
xchg
fdivl
or
xchg
xorl
in
mov
or
pop
insb
test
fidivrs
add
mov
inc
or
int3
lods
out
jae
xchg
fstps
push
xchg
and
test
inc
movsl
inc
icebp
les
adc
scas
lods
and
fnstenv
leave
fisubs
test
pop
jmp
fldenv
add
aas
jns
sbb
stc
les
sbbb
mov
pop
push
cmpsb
pop
mov
cli
arpl
iret
push
sub
scas
ljmp
ss
cmp
pop
scas
cmp
es
mov
dec
adc
fistl
imul
pop
into
insb
mov
pusha
cmp
sub
lret
mov
insl
jl
cmp
addb
and
cmp
adc
sub
in
sbb
mov
mov
ret
pop
mov
test
cmp
jae
data16
scas
jecxz
addl
jg
rcrl
scas
push
or
adc
sti
jle
iret
cs
add
stos
es
cmpsb
fdivs
adc
cmc
scas
popf
mov
mov
mov
nop
insl
imul
out
in
jae
lds
fadd
adc
stc
shl
fdivr
setg
mov
jp
xchg
pop
inc
jmp
aas
out
add
xchg
je
mov
or
xchg
dec
sub
arpl
push
mov
mov
mov
add
test
lcall
inc
adc
insb
testl
xor
repz
push
dec
adc
sub
loop
inc
sbb
mov
inc
inc
cmp
adc
mov
enter
cmpsl
inc
test
shll
jecxz
dec
aad
and
shll
int
cli
test
and
test
mov
das
movsl
orb
decl
push
inc
mov
movsl
adc
pop
dec
aaa
or
push
fiadds
jns
idiv
cmpsl
lods
sbb
sub
jp
push
loop
andb
sbb
jg
push
out
pop
cmp
lret
mov
ficompl
mov
jo,pn
outsl
pop
ficoml
pop
sbb
nop
xor
mov
jb
sti
aas
orl
inc
stos
and
jb
mov
add
js
fsubs
push
adc
fwait
pusha
shrb
or
adc
xchg
xlat
sahf
push
cmp
repnz
out
das
lds
call
jo
aas
mov
sbb
xchg
dec
into
cmp
sbb
iret
cltd
in
xchg
xchg
int
mov
mov
push
test
adc
jecxz
mov
aas
aam
gs
lret
pop
outsl
xchg
sbb
xchg
push
sub
cs
pop
repnz
ror
mov
ds
sti
mov
popf
dec
mov
and
jg
dec
fcoms
fisubs
add
pusha
mov
rcll
out
imul
xchg
sub
mov
sub
in
push
xor
add
adc
in
pop
mov
aas
lock
adc
and
fs
jmp
jno
sub
add
or
dec
cmp
push
sub
dec
scas
jns
dec
adc
aaa
aaa
pop
pop
fstps
dec
cld
sar
sub
jno
or
sbb
ficomps
movsb
mov
xchg
fs
xchg
push
cmpb
mov
loopne
mov
out
loopne
imul
xchg
mov
imul
mov
mov
and
push
xchg
sub
dec
lea
mov
mov
push
pop
jae
mov
pop
cmpsl
add
push
std
adc
pop
mov
cs
sub
xor
ljmp
aaa
cmp
push
jmp
rclb
cmp
movsl
push
in
fwait
and
cmp
cmpsl
setg
pop
jg
ret
sub
inc
push
pop
mov
adc
in
sbb
daa
pop
push
insl
jnp
pop
mov
cmp
adc
mov
pop
mov
pop
jno
adc
xor
pusha
outsb
mov
xor
pushf
fcomps
lea
adc
pop
dec
repz
sub
dec
xor
mov
adc
fmuls
lock
js
out
push
insl
rol
push
push
cmc
adc
outsb
outsb
mov
es
dec
pop
and
scas
bound
addr16
not
adc
mov
push
cmp
jbe
sbb
aas
clc
pop
inc
lahf
jge
push
jno
jns
push
dec
imulb
addr16
sarl
rclb
lahf
mov
or
leave
jno
adc
mov
push
dec
fnstsw
inc
jnp
lea
jp
pop
and
cwtl
imul
inc
leave
mov
out
and
fdivr
ljmp
imul
fs
dec
outsb
xchg
dec
xor
jecxz
lea
mov
scas
sub
mov
out
lret
movsl
sub
je
ds
andb
mov
mov
pop
fxch
xchg
pop
dec
insb
adc
xor
push
pusha
movsb
je
xor
mov
fldenv
dec
inc
push
sub
idivl
pop
repz
sub
scas
sbbl
lcall
lret
cmpsl
fisubl
imul
sbb
xlat
call
je
cs
add
fnsave
push
out
imul
fs
dec
in
aad
jp
mov
cld
or
dec
pop
in
dec
pop
push
rclb
jmp
mov
pop
cmp
and
leave
insl
push
mov
pop
pushf
insb
jno
stc
aad
or
mov
or
ja
pop
push
lret
pop
mov
mov
mov
les
bound
cmpsb
push
cltd
negl
mov
xchg
ds
mov
xchg
cmp
imul
jp
push
fmuls
outsb
js
outsb
or
push
pop
mov
fwait
cs
roll
int3
xchg
xlat
and
jns
sbb
adc
sbb
adc
loopne
lds
mov
into
rolb
mov
pop
or
out
push
bound
mov
pop
pop
cli
or
shlb
inc
and
push
pop
jno
mov
orb
dec
or
sbb
jbe
pop
cmp
sub
lcall
sub
je
shr
je
loopne
mov
mov
pop
imul
jbe
sti
cmpsl
fidivrs
ds
popa
push
inc
cmc
and
add
mov
cmp
outsl
xchg
and
add
fwait
sahf
mov
sub
xchg
cmpb
daa
pop
mov
adc
orl
push
out
add
inc
pop
dec
test
xor
mov
in
push
or
xor
aas
stos
std
cli
ss
add
out
mov
out
sub
or
adc
mov
adc
push
lcall
test
fistl
dec
cmp
daa
or
shlb
sarl
je
int3
dec
int
repz
mov
clc
test
inc
roll
lahf
cmpsl
loop
outsb
into
push
sbb
mov
sbb
and
add
dec
gs
or
imul
shlb
pusha
cmp
repnz
and
mov
dec
sbb
pop
push
arpl
sub
mov
insl
les
adc
pop
mov
and
mov
cmp
pusha
jp
xlat
pop
pop
fisttpll
testl
mov
aaa
push
and
mov
sbb
lea
loope
stos
dec
dec
and
cltd
or
leave
icebp
push
mov
or
cwtl
cltd
in
js
aas
xor
add
lock
push
in
test
and
jns
inc
mov
jns
pop
mov
lods
pop
jns
cmpb
add
or
add
mov
inc
inc
addr16
mov
xor
push
icebp
pop
jecxz
sub
mov
push
lret
jle
bound
fistpll
icebp
mov
out
cmc
fptan
xor
or
insb
pop
cld
mov
std
push
cwtl
out
pop
pop
sub
test
push
es
mov
inc
movsl
fisubrl
adc
push
mov
dec
cmp
sbb
inc
push
jo
push
jns
mov
adc
aam
fdivrl
test
mov
pop
xor
mov
gs
mov
adc
mov
xchg
mov
push
aam
ss
dec
testb
std
sbb
arpl
add
xor
and
idivb
xchg
sub
bndstx
sbb
test
and
mov
xor
sub
jp
mov
sub
icebp
sub
push
add
jno
jp
and
add
fnsave
mov
push
add
fmull
shr
loope
sub
cmp
in
testb
cmp
leave
insb
mov
nop
rolw
out
jecxz
add
sub
push
add
xor
sahf
out
jl
push
data16
cmp
mov
push
lods
arpl
inc
pop
pop
pop
lods
add
cmpsl
sub
cmp
cmpsl
inc
cmpsb
cmp
sbb
mov
inc
dec
scas
out
dec
push
mov
frstor
iret
cli
push
xor
mov
roll
xor
sub
or
ret
xor
inc
sub
dec
out
jle
jo
fmul
jb
or
mov
imul
push
das
mov
fstpl
adc
faddl
mov
dec
aad
push
add
push
jne
pop
subb
sbb
scas
movsl
shlb
fnsave
daa
sub
and
leave
aad
aas
cmp
cld
stc
sub
insl
js
dec
movsb
add
push
pop
sbb
add
test
sbb
or
movsb
adc
sbb
lret
inc
push
pop
mov
push
test
inc
sbb
push
xchg
push
add
dec
and
fldcw
lock
mov
into
ja
push
pop
in
leave
jbe
mov
xchg
jecxz
daa
stos
jnp
or
pushf
int3
enter
lods
subb
sub
pop
xchg
push
call
lcall
push
inc
mov
out
jae
push
cmp
stos
xor
jns
jns
fidivs
mov
loopne
scas
push
sahf
push
mov
insl
push
pop
test
outsl
xchg
loope
ljmp
mov
or
out
push
jp
push
xchg
xchg
push
xchg
stc
sub
enter
mov
pop
cmp
insb
sub
sti
and
fs
xchg
cltd
sbb
out
mov
cmp
mov
test
mov
push
sbb
and
les
imul
mov
dec
pop
ds
ret
nop
dec
movsl
test
jne
gs
mov
imul
pop
aad
xor
pop
push
shrl
test
jbe
mov
fsubs
or
pop
mov
sarl
jae
imul
sbb
dec
in
cmpsl
out
iret
xor
lret
pushf
fcomp
mov
test
scas
mov
je
inc
adc
xchg
jne
inc
sub
sbb
lcall
sti
cmp
into
inc
jp
dec
lods
pop
lcall
xchg
sbb
gs
rclb
enter
not
insb
push
out
test
movsl
adc
jno
and
dec
push
roll
out
cmp
fmull
inc
shll
and
pop
in
loope
jg
adc
std
dec
test
or
sub
dec
scas
mov
imulb
mov
xor
cmp
movsb
scas
test
and
ficomps
scas
ret
cmp
cmpsb
das
stos
jae
lret
sbb
inc
or
jg
xor
sbb
lock
pop
jns
xor
outsl
inc
shll
movzbl
inc
lods
daa
loop
mov
test
and
imul
leave
jecxz
mov
popf
repz
push
or
clc
jl
sub
aas
push
sarl
mov
fidivrs
rcrb
xchg
stos
outsl
repz
icebp
jmp
mov
aas
in
repz
sbb
mov
xor
dec
inc
loop
dec
jge
push
ljmp
leave
xor
xor
in
adc
out
and
out
inc
hlt
inc
add
jno
or
test
cmp
push
aaa
ljmp
cmp
scas
inc
dec
dec
ficoms
adc
jp
lret
int
xor
daa
gs
and
lods
mov
das
ret
mov
xor
hlt
cmp
push
movsb
or
aas
jg
popf
pop
push
sahf
push
notl
cmp
inc
jb
test
xchg
inc
je
stos
decb
mov
cmp
lret
dec
leave
pop
xor
cmp
loop
out
push
in
daa
es
test
push
inc
adc
call
adc
mov
mov
sbb
js
arpl
and
cmp
jge
sub
icebp
popa
cwtl
xchg
sub
rcrb
sbb
xchg
call
sub
pop
ficoml
imul
scas
cmp
loop
nop
xor
push
mov
in
push
mov
in
sbb
and
dec
cmpsb
pop
adc
push
push
aad
sti
test
cltd
inc
mov
fidivs
mov
fildll
gs
and
aam
adc
jge
in
xor
je
jle
iret
dec
mov
mov
dec
icebp
add
xor
inc
sbb
insl
lea
fmul
test
outsb
shrl
int
out
jle
pop
js
inc
andl
adc
adc
movsb
mov
add
dec
or
push
in
xor
std
push
cmpsl
xchg
iret
adc
cmp
jl
orb
and
mov
xor
jmp
loope
ret
add
pop
add
js
fwait
mov
movsb
sbb
push
aas
jae
les
xchg
outsl
jmp
iret
xchg
insb
or
ret
add
stos
mov
cmp
xchg
push
fdiv
test
jne
add
sbb
orl
mov
add
adc
add
loope
ljmp
mov
in
dec
imull
sbbb
push
jno
add
shlw
jne
js
push
les
aam
jae
sub
outsl
mov
dec
lcall
sub
sub
push
fimuls
out
sub
dec
mov
ret
jecxz
mov
sbb
dec
pop
arpl
push
aaa
jne
int
loope
aad
xor
daa
jge
xor
dec
xchg
das
idivb
xchg
fs
pop
fsubr
add
insb
lods
andl
jp
fistps
adc
bound
es
pop
jg
sbb
jb
filds
imul
ja
lock
fildll
xchg
lds
nop
jo
rcll
out
push
leave
xor
lds
jno
mov
ds
push
push
cltd
sbb
ss
lock
mov
cmc
or
inc
inc
xor
push
and
popf
cld
jg
cli
inc
jbe
xor
dec
xor
inc
inc
cmp
add
aas
mov
push
pop
jbe
push
aaa
enter
lret
data16
ficomps
push
dec
and
dec
sub
sub
ss
fisubs
adc
sti
inc
add
enter
les
xchg
adc
daa
push
inc
clc
pop
leave
xor
lcall
pop
ret
shlb
push
mov
cwtl
bound
mov
fistpll
push
jb
fldl
jo
sub
cmp
xchg
enter
adc
mov
mov
xor
xchg
rolb
dec
into
sbb
cmc
xor
jecxz
enter
sbbb
mov
fstps
jno
mov
xor
push
sub
shrd
cmpsb
lds
jp
cltd
dec
iret
aas
fldenv
sbb
sbb
cmp
aam
and
lahf
or
adc
cmp
cmpsl
iret
es
insb
xor
cld
movsl
add
stos
bound
int3
orb
dec
or
push
dec
test
cmp
add
mov
mov
adc
fstpt
push
dec
sbb
xchg
inc
sub
je
cmc
stos
push
mov
sub
inc
ficomps
iret
jl
dec
jl
or
sti
scas
stc
jmp
jbe
or
jmp
lea
ret
inc
insb
push
or
repnz
bound
dec
dec
andb
push
jecxz
sbb
or
dec
dec
mov
jae
cltd
cmp
adc
push
jae
dec
or
test
add
testl
test
push
outsb
in
dec
inc
mov
mov
pop
dec
or
in
xor
sarb
mov
ja
ret
inc
pop
outsb
aad
mov
lahf
fisubl
rorl
inc
nop
nop
pop
xor
stc
aas
dec
in
jb
cmp
movsb
cmpsl
xchg
or
jl
subb
pushf
inc
cmpl
lcall
sbb
and
xchg
mov
decl
adc
jnp
repnz
fstl
adc
mov
das
pop
lea
cmpsl
imul
adc
xor
xchg
mov
ret
mov
jmp
add
fwait
cmpsl
jae
or
jo
xlat
mov
pop
xchg
and
jns
data16
pusha
push
xchg
mov
enter
scas
stos
daa
pop
add
cmpsl
push
cmpsl
mov
push
out
mov
mov
lods
pop
enter
dec
pop
int
cmp
ss
in
into
cmp
mov
ficompl
stc
add
inc
das
mov
mov
mov
and
dec
aaa
inc
shr
test
cmp
movsl
nop
lds
xor
pop
nop
stc
enter
gs
mov
push
ljmp
divb
pop
hlt
sbb
cs
jnp
stos
sub
int
adc
dec
aad
inc
push
mulb
xchg
pop
enter
jmp
mov
or
push
jmp
mov
push
pop
cmp
in
cmc
fisttpl
mov
jle
shlb
xor
test
inc
shll
push
lret
mov
inc
sti
xor
lea
sar
imul
and
sbb
push
lea
lcall
lods
xchg
loopne
jns
xchg
mov
bound
fcoml
jg
cmpsb
push
jo
iret
push
add
and
xor
pusha
sub
sbb
popa
pop
in
fdivp
jmp
sbb
fcoms
mov
jbe
loope,pt
imul
fs
in
lea
add
mov
lods
dec
sbb
sub
das
or
aaa
ljmp
cmp
cmp
xor
stc
int
or
sahf
in
adc
cmp
and
adc
popa
sbb
mov
sahf
jns
mov
push
inc
jbe
add
data16
insl
push
xchg
inc
sub
jp
shlb
inc
ja
cmp
jge
inc
int3
adc
mov
sbb
jnp
fldcw
inc
mov
xchg
push
xlat
mov
les
inc
dec
cmp
jecxz
aad
int3
pop
out
mov
mov
rorb
fs
shl
cmp
loopne
test
push
add
frstor
or
in
and
cmpsl
nop
cwtl
pushf
xor
js
clc
lock
mov
fwait
mov
mov
loopne
inc
dec
movsb
shlb
inc
test
push
sbb
ja
jo
cwtl
cmp
cmp
dec
scas
arpl
cmp
je
addr16
mov
movsb
xorl
xchg
fiadds
cmp
xchg
stos
adc
movb
push
push
xor
adc
push
fdivs
mov
push
fucomp
roll
xchg
mov
inc
push
jne
mov
jbe
jle
mov
fucomi
inc
jns
loop
mov
or
dec
xchg
test
pop
imul
les
insb
push
mov
sub
ds
aas
mov
fucomip
jp
inc
mov
stos
hlt
dec
xchg
outsb
rcll
sub
jl
rolb
inc
mov
inc
test
add
pop
sub
jp
cmp
into
mov
outsl
lahf
xchg
sbb
lret
sbb
pop
jo
mov
popf
ss
cli
inc
mov
add
and
into
das
repnz
mov
adc
popa
push
fcmovnbe
add
sbb
test
scas
call
xchg
aam
out
mov
cmpsb
lds
pop
js
pop
idivl
xchg
lods
es
xchg
jmp
adc
subl
les
jb
cmp
jb
test
mov
or
sahf
movsb
mov
mov
int
jle
jno
and
std
int
iret
into
jge
lcall
or
jp
adc
pop
push
movsb
daa
insl
sbbb
rclb
cmp
xchg
and
outsl
sbb
inc
add
fistps
pop
dec
enter
xchg
out
push
pushf
hlt
and
jno
pusha
jbe
imul
nop
dec
lret
outsb
jbe
fimuls
imul
add
or
pop
imul
and
pop
lcall
arpl
jmp
sbb
push
imul
pop
jmp
rcll
mov
sub
and
lock
or
lods
sbb
inc
andl
jl
push
sbb
scas
sbb
xchg
mov
out
sbb
outsl
sbb
or
sbb
rcrl
or
jns
cmpsb
sbb
push
mov
mov
rorl
dec
into
bnd
pop
cmp
mov
xchg
out
mov
adc
insl
jmp
andl
sub
dec
fists
cmpsl
dec
out
inc
jns
or
or
xchg
cltd
xor
inc
mov
pop
int
rorl
jne
push
xchg
sbb
daa
xor
inc
ds
dec
add
fwait
std
xchg
adc
xchg
or
or
xchg
mov
imul
add
pop
repnz
out
dec
in
mov
mov
add
mov
cmp
sub
imul
lcall
aas
ljmp
in
repnz
out
in
scas
inc
iret
lret
xorb
test
ficoms
lock
pop
mov
xlat
cwtl
push
jnp
adc
adc
lcall
inc
lcall
cmp
adc
cs
pop
shrl
cmc
xor
jge
fimull
push
sbb
mov
pushl
aam
cmp
in
cli
jle
push
inc
xor
mov
pop
jns
sub
popf
mov
sbb
cmp
push
add
sti
xor
sbb
ret
rol
jl
test
inc
aaa
fs
icebp
cmpl
sbb
arpl
sub
pop
push
das
cmp
enter
popa
sbb
out
and
add
sahf
add
rep
imul
pop
mov
xchg
mov
add
and
repnz
aaa
fldcw
scas
fstp
imul
out
add
jge
push
in
sub
nop
fsubrl
xchg
jg
push
loopne
out
sbb
test
sbb
out
aam
pushf
rcll
jbe
mov
mov
push
into
imul
insb
push
jmp
push
ret
mov
rcrl
add
inc
enter
cltd
test
inc
and
jp
push
in
or
mov
aas
movsb
push
jb
jnp
ss
mov
mov
lret
adc
push
jno
in
pop
mov
pop
sahf
sbb
sub
ja
popa
jne
cmc
dec
lahf
push
xor
xorl
aad
outsb
mov
jae
add
pop
mov
test
out
fstpl
out
lods
mov
jo
xor
and
xchg
pop
push
lret
push
outsl
fs
das
mov
loop
cld
pop
lret
test
mov
dec
in
jnp
leave
inc
push
imul
xor
push
nop
xor
inc
pop
outsb
lock
data16
adc
mov
enter
stos
and
push
mov
and
push
popf
sbb
ss
xlat
fldcw
lret
mov
or
dec
mov
inc
jbe
mov
lcall
imul
hlt
pusha
popf
mov
call
movsl
cmp
dec
das
jnp
sbb
cmp
xchg
sub
cmp
insl
mov
in
push
mov
sub
sub
xchg
data16
jmp
xor
mov
imul
pause
mov
xor
call
inc
sub
and
mov
lea
dec
sahf
xor
int3
xor
out
adc
jg
push
xchg
loop
pop
repz
fnstsw
inc
push
mov
rcrb
aam
push
push
stc
addr16
jmp
testl
stos
rorb
or
pop
outsl
nop
cmp
mov
push
push
mov
cmp
jb
pusha
push
adc
push
mov
lcall
push
clc
jg
cmp
push
daa
pop
lods
jo
pop
arpl
cmp
je
ds
xor
lret
out
inc
enter
mov
jbe
out
lock
in
pop
or
loopne
rorl
fcmove
push
stos
addl
cmpsl
adc
fistpll
or
imul
std
jecxz
pop
hlt
ja
and
push
jmp
push
push
negl
adc
xchg
movsl
movsl
xlat
and
cmp
sbb
inc
sub
dec
shlb
or
xor
aaa
pop
sbbl
jg
dec
sbb
outsb
pusha
mov
jg
adc
push
pop
testb
xchg
jp
mov
int3
mov
loopne
rcll
mov
test
push
lahf
pop
test
push
mov
pop
cmp
cmpl
repnz
fcmove
dec
aam
in
mov
add
adc
adc
mov
shll
push
lahf
push
popa
test
dec
pusha
jns
and
inc
jg
and
rcrb
pop
loop
mov
inc
adc
jecxz
ret
stos
out
cmpsb
mov
out
idivb
xchg
gs
out
sbb
cmp
sar
jp
dec
cmp
int3
aaa
iret
add
mov
popa
test
mov
rcl
push
mov
repz
mov
add
ja
xor
jmp
push
or
popf
rorl
fwait
repnz
out
inc
mov
imul
ja
ja
popf
jecxz
scas
fcoml
cwtl
xor
clc
and
pusha
mov
sub
and
pop
cmp
push
aaa
ds
add
push
mov
leave
dec
imul
movsb
shrl
jb
dec
add
mov
bound
mov
stc
subl
shl
adc
mov
sbb
pop
repnz
fnclex
test
stos
sbb
xchg
cmpsb
bound
inc
das
and
lahf
mov
adc
mov
mov
dec
xor
dec
add
push
mov
das
stos
pusha
mov
fmulp
jns
cmp
jecxz
test
push
cs
mov
gs
bound
push
shl
testl
js
push
mov
popf
idiv
mov
sub
stos
push
jecxz
push
inc
and
out
lahf
or
repz
test
mov
xor
enter
sub
dec
daa
push
lahf
jl
dec
dec
push
outsl
jp
outsb
lret
in
lret
sbb
jno
into
inc
lcall
xchg
mov
push
cld
jbe
mov
mov
and
aad
and
jp
inc
lret
outsb
add
out
push
dec
mov
jae
pop
xchg
cmovb
pop
enter
adc
lahf
negl
pop
je
stos
inc
dec
fsubr
push
cmp
jle
cmp
aaa
and
sti
outsl
dec
lahf
jp
add
pop
mov
push
jecxz
je
push
stc
inc
call
lods
mov
pusha
movsb
aam
mov
and
mov
sti
cs
rcr
mov
mov
std
cmp
js
int
or
iret
push
jg
push
jno
cmp
mov
mov
out
jg
cmp
stc
cmp
mov
sar
enter
je
mov
jge
dec
lea
and
mov
adc
popf
int3
outsb
push
cmp
gs
pushf
dec
jp
test
push
mov
and
movsb
push
jp
pop
xorl
jmp
rcll
test
std
xchg
fs
sbb
push
mov
mov
sbb
lds
fwait
mov
adc
pop
push
sub
and
popa
rolb
icebp
test
fimull
xchg
jecxz
packsswb
inc
out
and
mov
imul
add
jo
sbb
mov
fadd
js
pop
hlt
jmp
push
sub
arpl
and
in
inc
enter
jb
mov
xor
nop
xor
scas
adc
pop
push
cmp
out
not
dec
mov
add
cmpsl
sub
hlt
and
pop
insb
jae
mov
icebp
stos
or
xor
mov
ds
outsb
pop
xor
push
inc
test
adc
fdiv
or
mov
popa
lcall
cmc
push
movsb
fcompp
lcall
pop
imul
call
inc
cmc
out
outsb
rcrb
int
mov
iret
pop
xor
adc
pop
sub
mov
sub
movsl
mov
push
xchg
dec
push
in
inc
addr16
push
enter
movsb
jp
frstor
out
jbe
sbb
dec
mov
sbb
jl
jb
popf
cmp
dec
dec
xor
imul
xchg
cmp
mov
in
cmp
jno
lret
out
jmp
and
ljmp
outsl
aad
stc
xchg
mov
stos
xor
sahf
cmc
mov
or
inc
enter
cmp
rcll
xrelease
xor
cmp
fbstp
scas
aas
inc
mov
stos
fsubl
test
xchg
aas
push
sbb
dec
scas
sub
lret
pop
push
out
mov
shll
cmp
popa
or
mov
ret
idivl
fwait
sub
inc
sub
jb
outsl
movsb
in
je
iret
popa
sbb
push
into
lods
mov
sub
outsl
or
inc
popa
lret
les
xchg
push
pcmpgtw
cmp
xlat
sub
cmp
push
js
mov
jl
mov
mov
jp
aam
cmp
fidivl
mov
cmp
aas
lret
pop
test
xor
lock
fmull
fcomps
mov
fs
aas
adc
orl
ficomps
in
fiaddl
arpl
into
xor
and
add
stos
test
pop
enter
fs
sti
sbb
std
push
push
test
lret
lea
fcmovu
push
mov
add
call
pop
stos
push
in
mov
sub
pop
adc
in
mov
add
mov
inc
and
cltd
xchg
sub
icebp
cmp
dec
cmpb
inc
jle
pop
ror
and
push
adc
adc
loope
pushw
jbe
sti
push
pop
scas
lret
add
dec
add
xlat
add
test
in
mov
in
aaa
scas
lock
adc
jo
loope
addr16
pop
shlb
ds
aas
int
pushf
sbb
adc
cltd
test
jmp
test
mov
add
mull
or
jg
loope
add
inc
inc
insl
sub
xor
adc
pushl
mov
mov
jmp
xchg
push
and
movsl
jns
nop
push
sub
fsubs
pop
pop
push
pop
rorl
insb
inc
popa
pop
aaa
repnz
lcall
aam
shll
fistpll
mov
loope
add
fwait
popa
aad
mov
mov
push
pusha
in
negb
aad
push
mov
cmpsb
or
test
add
sbb
aaa
dec
pushf
pop
sahf
mov
fnsave
sub
fstp
dec
mov
cmp
mov
int
mov
out
and
and
pop
in
cs
aas
out
rclb
jl
lods
adc
test
test
jo
divl
jb
mov
data16
pop
pop
and
dec
gs
ljmp
js
es
es
push
in
loopne
pop
stos
fdivs
pop
pusha
rorb
outsl
adcb
xor
sbb
jae
pusha
or
xor
fstps
jmp
cmp
jbe
gs
add
inc
mov
and
loopne
jg
and
imul
testb
xchg
mov
ss
or
aas
sub
pop
mov
or
mov
mov
data16
xor
aam
adc
xchg
fs
sub
cmpsl
pop
and
sub
jnp
push
mov
add
pop
ss
pop
pushl
imul
ja
and
loopne
fisttps
jae
dec
ja
subl
lcall
test
shll
fsubr
cmp
pop
ret
incl
inc
loopne
loope
mov
jne
dec
in
dec
aad
insl
jb
adcl
cwtl
jne
xchg
pop
mov
jae
fdivs
ja
mov
mov
mov
and
pop
aas
push
xchg
cmp
repz
sahf
or
inc
xor
xchg
cmp
fwait
pop
rcrl
jmp
mov
outsl
test
inc
mov
sbb
out
cli
xchg
inc
es
jecxz
pushl
mov
xor
lahf
lds
dec
sub
and
or
out
arpl
dec
sub
movsl
ds
sub
xchg
pop
xlat
or
sbb
lret
sahf
sub
ss
sub
mov
sub
push
sbb
cwtl
xor
mov
insl
push
dec
mov
dec
gs
lahf
mov
jno
arpl
jnp
and
jnp
or
mov
movsb
cmp
mov
aaa
lcall
ror
sbb
inc
mov
outsl
scas
jge
decb
or
stc
inc
and
sti
mov
push
mov
imul
dec
jnp
sti
fisubl
dec
mov
mov
out
es
roll
stc
sub
dec
or
int
xchg
mov
mov
push
pop
dec
jno
out
lods
dec
inc
dec
push
push
stos
cmp
inc
jl
andb
das
fdivr
push
push
jns
arpl
ljmp
arpl
das
test
cmp
add
mov
loope
sbb
jecxz
test
xlat
push
aaa
ret
gs
adc
mov
pop
sbb
cmp
inc
loopne
jb
loope
das
aad
sbb
fisubrl
cmc
dec
push
loope
fadd
cmp
popa
outsl
mov
in
aaa
cmp
jp
popl
dec
cmp
out
sar
int3
push
or
push
jo
pop
leave
push
push
pop
push
sbb
pop
push
leave
nop
or
xchg
popa
gs
xchg
stc
xor
mov
push
xchg
pop
push
sub
dec
dec
aaa
push
inc
out
outsb
shlb
pushf
fisubrl
or
aas
dec
shrl
nop
loope
bound
iret
imul
ret
push
js
test
mov
js
rcrl
subl
push
out
dec
insb
jnp
mov
push
outsl
adc
cmp
dec
mov
enter
xchg
negb
and
ffree
mov
in
adc
daa
lcall
jae
and
mov
fs
sub
add
dec
in
cli
cmp
pusha
or
pop
pusha
shr
add
jbe
cmp
lahf
mov
stos
stos
aaa
ljmp
mov
mov
pop
xchg
add
aam
shll
lods
jnp
cwtl
data16
xor
lods
ja
push
xor
pusha
cwtl
icebp
mov
and
dec
fisubl
mov
inc
mov
lcall
pop
pushl
jbe
ljmp
fdivl
jno
loopne
pop
das
mov
fildl
pop
pop
mov
lds
clc
pop
sbb
insl
dec
iret
das
ret
and
in
daa
sub
dec
rcrb
jp
stc
add
out
jle
or
in
push
out
fisubrl
pop
shl
mov
rcrb
sbb
mov
mov
aam
out
cmpb
iret
dec
adc
mov
jbe
daa
bnd
aad
jge
pop
add
cld
test
xchg
and
lret
cmpsl
xor
sbb
jae
mov
sub
jmp
mov
push
fwait
push
mov
jl
mov
jmp
cmpsl
mov
mov
in
gs
sub
adc
arpl
pop
fwait
inc
sbb
add
cmpl
dec
xchg
mov
popf
dec
das
es
or
lgs
mov
daa
xchg
rorl
adc
or
cld
mov
mov
gs
sbb
out
rorl
imul
dec
xchg
mov
and
mov
loopne
cmp
push
mov
dec
push
roll
cmp
jmp
pop
clc
stc
pop
dec
xchg
mov
loope
inc
fbstp
ficoms
cmp
cli
out
mov
mov
cltd
push
out
nop
es
arpl
jne
not
outsl
dec
lock
dec
mov
cmp
notb
pop
in
cs
jmp
sub
adc
mov
pop
cmp
out
pop
fcomip
mov
pop
fldpi
pop
lock
push
mov
outsb
mov
dec
ds
pop
mov
push
sbb
sub
loope
mov
add
pop
pop
data16
into
or
cld
daa
mov
cmc
mov
push
push
fsubr
push
ds
addr16
aad
adc
jae
frstor
scas
sar
dec
es
jb
lock
jne
jp
mov
mov
outsb
lahf
lds
in
and
push
sub
xor
sahf
leave
adc
mov
mov
in
movsb
lods
lret
inc
inc
mov
gs
jecxz
cmp
std
jbe
mov
add
push
dec
sbb
fdivrl
js
fcomps
or
xor
mov
aas
ret
xchg
or
mov
fucomip
cmp
aam
negl
adc
adc
shlb
daa
arpl
je
mov
jo
insb
fnstsw
adc
enter
sbb
xor
and
sbb
es
mov
stc
mov
push
cmc
popf
call
sbb
cmp
cmp
popa
imul
rclb
mov
jnp
dec
add
xor
lret
jle
fdivs
fwait
aaa
jmp
cltd
aad
leavew
jle
jnp
adc
mov
test
pusha
repnz
aas
mov
and
inc
rcrb
add
jge
xor
popl
push
sbb
xor
and
mov
rcl
dec
loop
fstps
out
mov
loopne
data16
jb
aaa
mov
cmc
sub
hlt
out
imul
sub
jae
jle
in
inc
cwtl
fldl2t
fdivrs
icebp
daa
pop
popf
movsb
mov
arpl
sub
ret
lret
ss
test
iret
jno
jne
lcall
cld
inc
movsl
add
push
testl
sub
lds
jl
adc
mov
pop
sub
sub
pop
pop
push
cmp
xchg
aad
mov
in
imul
push
filds
adc
push
dec
pop
lds
cmp
lret
sbbb
jo
repnz
pop
mov
push
dec
sahf
cmc
push
adc
fwait
pushf
int3
bound
push
in
jl
push
xlat
push
sbbb
lods
imul
lret
inc
popa
insl
xor
xchg
jnp
lret
stc
lock
dec
xchg
lea
push
fxch
in
jnp
orb
and
cmp
or
dec
mov
sbb
imul
xchg
imul
jmp
iret
scas
clc
mov
cmp
xorb
and
dec
fistpll
add
inc
xor
and
mov
fcomps
cmp
mov
pop
inc
outsl
das
inc
xchg
ja
js
push
imul
imul
or
sub
push
sub
xchg
pushf
imul
mov
dec
fs
mov
lahf
sbb
fldenv
mov
mov
outsb
cmp
negb
nop
popa
inc
cli
pop
aam
out
jns
jo
popf
xchg
mov
lock
in
dec
and
jae
pusha
adc
sbb
testb
add
sbb
loop
add
testb
out
cmp
and
lods
mov
pop
paddq
mov
mov
leave
cmc
jmp
ss
add
sub
and
aam
orb
push
cli
sbb
mov
insl
add
into
loop
daa
loop
lcall
mov
add
pop
push
cmp
pop
in
mov
leave
fiaddl
cltd
mov
pusha
pop
js
push
add
scas
pop
sub
aas
stos
xor
mov
ds
jl
inc
stos
and
dec
mov
sbb
xor
leave
lods
and
sbb
push
jl
arpl
sub
push
add
movsl
or
xchg
mov
fcmovbe
add
pop
loopne
fidivl
loope
mov
sbb
scas
adc
roll
out
add
rcr
es
and
cmpsb
loope
cwtl
mov
out
push
mov
mov
in
lcall
mov
adc
inc
lcall
pop
sub
imul
test
imul
loope
insb
mov
mov
cmp
sub
clc
xchg
fwait
scas
or
rorb
mov
lahf
push
scas
bound
sbb
xchg
jbe
mov
ror
ss
in
insl
xor
dec
mov
out
sub
adc
sub
int
out
push
mov
fidivs
xchg
aad
outsb
test
mov
mov
pop
imul
mov
test
imul
mov
sbb
add
pop
outsb
xor
jno
mov
mov
jp
push
cmpsb
jp
pop
mov
popa
roll
rorb
jmp
clc
movsb
or
inc
mov
insl
cmpsb
ror
ror
xlat
xor
cltd
scas
fistpll
jg
mov
leave
sub
fbstp
mov
and
aad
js
fiaddl
pop
lods
cmp
push
xchg
xchg
sub
fidivrs
xor
fstpt
or
in
jbe
rcll
mov
mov
xchg
in
lret
push
addr16
in
fsts
mov
scas
out
sub
mov
roll
jg
pusha
imul
hlt
cwtl
jne
in
cmp
movsl
xor
stos
adc
sbb
xor
in
jecxz
push
mov
push
push
shl
idivl
fldenv
and
jp
pop
cmpsl
mov
fs
add
iret
dec
ss
leave
xor
inc
pop
push
pop
out
mov
jle
aad
movsb
aas
mov
dec
jle
cmp
dec
aam
stos
xor
inc
jbe
xor
and
mov
push
xor
push
adc
cmp
sti
fstps
adc
jecxz
xchg
cmp
cmp
fimuls
xchg
jge
ret
lret
test
repz
and
rcl
push
andl
dec
cltd
loope
cmp
call
inc
inc
cmpsl
outsb
js
mov
data16
call
inc
or
mov
imul
adc
cmp
xchg
cmp
cli
sbb
push
xchg
cmpsl
pop
xorl
fcomp
mov
mov
xlat
mov
xorb
jp
pop
mov
outsl
xchg
gs
push
pop
iret
push
fdivl
mov
sub
rcrl
leave
dec
sbb
push
xor
jo
jl
pop
or
shl
xchg
mov
adc
popf
dec
add
aam
sub
xlat
sub
je
and
inc
pop
ss
lret
test
out
push
mov
hlt
dec
pop
xor
cmpsb
sbb
into
cli
lds
mov
lret
shlb
scas
enter
mov
dec
pusha
je
inc
scas
dec
lret
mov
push
pushf
es
inc
xor
push
mov
sbb
in
popf
inc
jae
push
mov
xlat
cmpsb
mov
inc
loope
ds
leave
xor
lea
fisubl
mov
and
jne
adc
fst
into
cmp
add
xchg
icebp
lock
or
inc
mov
mov
test
cmp
cmpsl
mov
or
xor
fstpt
inc
pop
push
jle
inc
sbb
movsl
adc
sbb
push
adc
push
or
je
push
or
out
push
mov
and
flds
jnp
xchg
idivb
shlb
dec
dec
mov
inc
mov
or
and
iret
ja
inc
iret
cmp
pop
xchg
mov
cmp
repnz
dec
cmp
fimull
movsl
std
cmp
addb
mov
shrb
enter
and
inc
roll
xchg
or
shlb
xor
fstpt
xorl
cwtl
cmp
ds
pop
adc
rorl
fwait
and
aaa
mov
pop
daa
rcrl
fidivs
rorl
adc
cmc
mov
jae
and
add
cmp
add
mov
es
push
cmpsl
shll
add
fisubrl
jb
sbb
jnp
push
testl
sub
rcrb
sbb
je
jbe
push
mov
aam
cmp
adc
cmp
cld
rorl
mov
pop
fucomi
jg
mov
test
sub
in
cmp
imul
lds
push
pop
xchg
mov
push
pop
cmova
mov
dec
test
adc
dec
lret
js
xchg
mov
or
aas
push
and
cmpsl
sbb
dec
inc
mov
js
push
out
movsb
sarb
insb
inc
cmpsl
inc
mov
lret
aaa
and
adc
mov
cmpl
rcr
je
inc
and
add
jp
out
addr16
or
div
ficoms
xchg
xchg
inc
cmp
pop
lret
clc
xor
lret
jmp
and
lds
inc
gs
outsl
clc
insb
cltd
sbb
push
dec
outsb
xor
xchg
fcomi
cmp
inc
push
movsb
insb
mov
pop
call
dec
inc
mov
jge
frstor
push
cld
push
ljmp
rol
jae
jmp
ror
jae
mov
pop
pop
enter
mov
rcll
mov
enter
cwtl
js
daa
fbstp
data16
ret
enter
fsubrl
andl
fwait
push
rorl
dec
es
cmp
cmp
rcll
mov
and
cmp
pop
lea
xchg
enter
jmp
ss
sub
out
add
addb
fsubs
popa
fstps
repnz
jmp
xchg
popa
or
mov
mov
notl
sbb
jl
mov
xor
jmp
mov
cmp
call
pusha
fldcw
mulb
push
add
fs
xchg
scas
aad
mov
push
add
jl
nop
sub
cwtl
inc
ficomps
rolb
inc
add
fiaddl
ljmp
jno
pop
add
xchg
jmp
jmp
shrl
xchg
inc
enter
test
mov
push
rolb
daa
push
out
ljmp
insl
jge
ljmp
lcall
loopne
pop
ret
adc
loopne
push
cmp
inc
lahf
ret
cltd
mov
popf
fbstp
jae
xchg
jg
inc
cwtl
and
and
aas
mov
sbb
inc
fstps
mov
dec
sub
ret
dec
sub
or
test
test
or
or
xor
comiss
pop
sub
adc
push
push
imul
cwtl
lcall
xchg
push
add
outsl
mov
xchg
fisttpll
in
pushf
sub
addr16
mov
loop
mov
sbb
rorb
push
xchg
sbb
divl
xchg
cmpb
mov
cmp
lea
je
adc
fnstenv
je
or
scas
inc
hlt
xor
adc
jb
stos
push
leave
mov
leave
mov
lcall
sub
in
push
jmp
mov
jl
jmp
scas
xor
jg
jae
daa
dec
scas
popa
mov
mov
ljmp
stos
lea
lods
lods
push
push
scas
pop
push
push
push
push
jl
in
pop
scas
and
and
jb
testb
imul
or
cmp
nop
mov
jp
filds
dec
jg
dec
je,pt
clc
and
push
lcall
inc
cltd
lods
mov
ljmp
punpckldq
repz
and
cmc
addb
addl
jg
add
adc
and
loope
mov
das
cmpsl
rcrb
jo
cwtl
outsw
cld
loopne
daa
mov
dec
xor
dec
inc
jle
jle
sbb
ss
outsb
fisubrl
pop
rcll
andl
adc
sbb
and
stos
sub
push
xchg
mov
inc
push
jle
popa
jp
sub
pop
fcompl
cs
jp
mov
pusha
fs
sbb
cli
mov
fwait
inc
das
std
mov
iret
add
push
xor
ret
leave
mov
or
test
mov
and
je
push
add
arpl
dec
cltd
ja
in
add
leave
les
mov
dec
inc
imul
faddl
fbld
xchg
pop
jl
lea
mov
and
cmp
adc
sti
xor
fisubl
mov
out
and
mov
mov
sub
push
fmulp
lret
arpl
sbb
hlt
cmp
call
and
cmp
test
xchg
jnp
outsl
ret
xchg
fistps
inc
cltd
pop
dec
lret
aas
lret
dec
sub
arpl
fdivs
int
icebp
adc
pop
lcall
or
jae
add
mov
dec
push
arpl
and
andb
mov
mov
insl
push
mov
add
mov
and
insb
dec
push
add
mov
xchg
dec
pop
rcrb
in
mov
jb
and
in
fcompl
mov
outsb
rol
sub
sahf
daa
push
jg
xchg
jo
cmp
jg,pn
xchg
imul
rcrb
xchg
aam
rcll
rorb
cmpsl
jle
js
ds
psraw
cmc
shll
sub
fisttpll
and
ds
enter
mov
or
aas
cs
ds
mov
in
push
insb
loop
pop
shrb
xor
ret
mov
das
movsb
cld
in
cltd
mov
shrl
nop
stos
xchg
mov
and
jne
pop
in
test
or
fistpll
ret
cld
jo
mov
jmp
fsubrl
lods
mov
pop
mov
insl
mov
dec
iret
xchg
push
push
je
mov
add
sub
cmpsb
or
mov
stos
sbb
arpl
out
popf
sub
mov
xchg
pushf
push
mov
andb
xor
in
jmp
push
xchg
xchg
test
fisubs
hlt
icebp
aad
add
outsb
cmp
cwtl
push
sbb
dec
push
sbb
push
mov
and
push
mov
jnp
mov
out
push
add
outsb
fadd
insl
mov
js
push
mov
or
fnstenv
sub
jmp
inc
fs
sbb
pop
and
fisubs
bound
mov
test
fists
in
or
mov
dec
mov
xor
xor
lret
test
fcmove
xor
shll
mov
pushf
outsl
vpminub
aas
sub
call
sbb
push
test
movsl
mov
test
xor
inc
popa
inc
dec
pushf
pop
cmp
xor
and
dec
or
sub
or
jg
dec
push
xorb
ljmp
test
les
pop
mov
sub
lods
adc
ret
adc
stos
jecxz
push
add
scas
je
dec
dec
inc
add
mov
inc
xor
pop
push
xor
test
push
dec
or
cmp
pop
mov
mov
cli
aam
js
or
xor
int
jbe
mov
popa
test
jne
icebp
mov
hlt
xor
iret
jle
pop
out
call
adc
addb
aas
lret
pop
ficoms
cld
xchg
push
fstp
mov
inc
dec
mov
sbb
cmp
in
mulb
outsl
in
xlat
lret
cmp
cltd
pop
push
popl
in
fdivrs
dec
jg
and
jns
mov
lea
mov
ficomps
sub
cmpsb
mov
out
outsl
jnp
xchg
js
mov
cmp
push
jl
das
xchg
inc
pop
cwtl
lds
mov
fisttpl
push
push
inc
xor
xchg
mov
pop
jl
pop
jp
sbb
inc
push
add
lods
pusha
and
aad
shrb
sub
call
test
scas
stc
gs
loope
inc
mov
jo
cld
sbb
inc
fsubs
jns
and
mov
push
in
aaa
xor
mov
xor
push
je
add
inc
cmp
mov
sbb
xlat
inc
stos
ficomps
out
lea
mov
sbb
mov
mov
pop
pop
stos
or
inc
adc
outsl
imul
add
insb
mov
jbe
add
add
in
ss
in
mov
les
mov
jbe
or
jns
mov
jns
stos
xor
icebp
sbb
rolb
sti
pop
mov
fisttpl
lds
mov
iret
mov
ljmp
jae
popa
dec
pop
dec
pop
xchg
sahf
mov
inc
fdivr
ja
or
xor
xorb
popf
cmp
jo
inc
ret
lods
mov
and
pop
aas
fucomip
pop
mov
mov
inc
fnstsw
mov
test
das
push
jne
inc
dec
and
cli
imul
xor
ret
push
pushf
inc
sub
rcrl
pop
stos
int3
lcall
dec
xor
je
adc
or
push
xor
xor
stos
bound
mov
adc
cmp
pop
inc
ds
aam
or
pusha
repnz
rclb
lahf
faddp
ret
imul
xor
or
test
lods
in
jae
jecxz
sbb
cmp
test
add
inc
repz
lds
stos
stos
jmp
rorl
xchg
pushf
nop
cli
xchg
dec
jp
lea
jno
xchg
adc
lods
pop
test
xchg
push
pushf
lock
inc
js
mov
xor
add
fs
inc
and
movsb
pusha
fidivrs
mov
mov
nop
jo
in
cs
xchg
mov
ja
out
inc
cltd
aas
sub
pushf
test
jns
xor
dec
in
je
loop
arpl
push
frstor
sbb
push
mov
push
push
test
jle
xor
adc
movsl
jnp
scas
cmp
cmpsb
daa
andb
pop
cwtl
jns
pop
loop
fldcw
sub
inc
pushf
arpl
sub
sbb
mov
dec
xchg
pop
jbe
cmp
inc
in
cs
jbe
inc
rorb
ljmp
sbb
subb
fsubp
mov
aaa
push
seta
mov
jno
jg
jecxz
stos
lock
or
in
add
data16
and
repnz
cmp
inc
jle
pop
push
ja
mov
rcrl
or
out
mov
sbb
incl
sbb
pop
sub
loope
push
dec
jno
mov
xor
sub
sbb
xchg
xor
and
inc
mov
push
jns
mov
jecxz
mov
xor
jne
lock
push
cmpsb
jp
pop
mov
les
je
add
add
or
xor
test
dec
sub
cli
scas
add
lock
xor
pop
cmp
jae
inc
pop
aaa
push
xchg
sbb
lret
add
cmp
idivl
push
pop
aad
inc
insb
fsubs
cmpsb
sbb
mov
push
lea
push
aas
js
out
ss
jnp
das
jae
push
jnp
jno
andb
or
inc
stos
int
inc
xor
pusha
inc
jp
mov
out
mov
sbb
sbb
rcll
nop
and
pusha
sti
adc
inc
mov
js
test
ja
inc
dec
cmpsl
mov
sub
sub
xchg
or
jg
mov
mov
jo
inc
shrb
sbb
dec
jb
inc
mov
cmpb
jg
cmc
scas
dec
aam
adc
aaa
inc
xchg
adc
dec
mov
xorb
jmp
cmp
push
fidivs
cmpl
jne
cli
mov
pop
repz
mov
push
das
mov
add
jbe
hlt
push
sti
pusha
repnz
frstor
pop
dec
push
sbb
adc
inc
push
ja
add
outsl
orl
push
test
pop
cmp
jb
mov
cs
shrb
stc
enter
inc
pop
jmp
ret
push
xor
daa
negb
movsl
popl
ljmp
fiaddl
test
int3
fisubrs
aas
push
ja
cli
rcr
inc
inc
xor
popf
orb
sub
out
outsb
sub
ja
and
repz
sub
and
out
enter
mov
jns
mov
or
xor
int
mov
sbb
cs
std
xchg
mov
test
bound
je
or
das
sub
adc
test
loopne
iret
lret
imul
mov
in
or
fldl
sbb
shr
inc
fwait
shr
clc
jo
push
sbb
pop
aam
imul
sbb
adc
bound
or
adc
test
sub
xchg
sbb
aaa
inc
push
test
daa
ss
popa
jne
xorb
push
dec
nop
cmp
movsl
in
mov
cld
lea
outsb
popf
int
fcmovb
repnz
xchg
sbb
jmp
in
mov
and
ljmp
sbb
xlat
xor
mov
int
sub
sub
sub
fidivl
cmp
sub
cs
test
sbb
ret
push
test
dec
jmp
mul
cmp
stc
inc
aas
fwait
or
and
xor
aaa
dec
test
adc
lret
fsts
and
jns
xchg
push
jo
jbe
xor
cmp
cltd
push
test
push
sub
cmp
clc
xor
loop
enter
lcall
orl
adc
xor
fs
stos
xor
jmp
adc
icebp
inc
lcall
inc
imul
es
fisttps
out
movsl
lcall
jge
xchg
add
xor
pop
into
mov
push
int3
push
cmp
icebp
jno
mov
or
dec
in
jp
and
fildll
js
repnz
push
cli
outsl
lea
xor
out
xor
mov
jo
and
mov
in
icebp
mov
nop
leave
fwait
or
mov
jnp
xlat
xlat
inc
loope
pop
push
lret
andl
mov
xchg
das
jns
fstpl
cmp
cmpsl
mov
push
or
cmp
mov
lods
je
push
mov
test
xchg
or
add
sbb
sti
xlat
rcrl
ss
sti
mov
inc
sbbb
cmp
sbbb
lcall
mov
pop
cmp
jnp
insl
lret
push
cmp
dec
loop
mov
inc
popa
and
aad
js
aad
jbe
int3
inc
adc
inc
inc
sub
xchg
inc
pushl
pop
jecxz
movsl
loop
loop
add
xlat
mov
das
lcall
sub
fucomip
cmp
shlb
and
mov
and
inc
decb
mov
jb
lea
dec
sub
xchg
gs
cmpb
jp
out
dec
sahf
fwait
push
and
cmp
rcl
mull
mov
in
pushf
mov
hlt
xchg
jnp
mov
push
adc
movsl
stos
push
hlt
filds
mov
stos
out
jle
aas
mov
gs
and
pop
idivl
mov
dec
inc
bound
cmp
mov
inc
cli
mov
andb
aaa
jp
adc
mov
call
or
xor
dec
fistps
cmp
jo
sbb
xchg
data16
jp
fsubrl
jecxz
es
pop
mov
mov
jecxz
fs
inc
or
je
and
sbb
pushl
pusha
out
lock
mov
cmpsl
ss
movsl
popa
adc
int
xchg
out
lods
push
mov
inc
and
xor
sub
xchg
shrl
test
pushf
dec
xchg
into
sahf
cmp
jge
test
push
loop
stos
fwait
insl
jle
pop
xchg
mov
sti
jp
xchg
imul
orl
pop
stos
mov
add
cmpsb
mov
pop
cmpl
inc
sbb
stc
gs
pushf
cld
xchg
cld
xor
mov
mov
je
jl
xchg
jmp
scas
sub
dec
xor
roll
scas
movsl
xor
imul
mov
idiv
mov
mov
jno
mov
pop
push
pop
pop
addr16
cmp
lea
imul
sbb
adc
std
js
mov
cmc
ret
adcl
push
sbb
int3
call
shll
dec
jmp
jns
call
xor
push
or
ss
push
jl
push
mov
xor
jb
cld
push
lret
popa
iret
cmpsl
adc
sbbb
jns
sub
lods
out
cmp
pop
ja
sub
cmp
addr16
ret
sub
lret
cmp
cmp
aad
mov
iret
mov
add
cmp
sub
popa
es
imul
and
fistpl
je
sbb
mov
cmp
sbb
call
out
mov
js
jo
push
sahf
inc
jmp
mov
mov
insl
cmp
scas
add
fldt
imul
and
cmp
sbb
or
xchg
aas
int
stos
mov
adc
insl
mov
xchg
in
pop
adc
xlat
push
pop
pop
xchg
icebp
push
inc
mov
lods
outsb
mov
das
stos
outsl
daa
insl
xlat
mov
add
das
mov
or
loop
jnp
pop
mov
push
xlat
xlat
dec
repnz
add
nopl
jl
pop
push
pop
mov
inc
lret
das
je
and
outsb
stos
push
and
push
add
addr16
jle
jecxz
xchg
insl
xchg
pop
push
aaa
sti
and
mov
jg
sbb
xor
pop
fbstp
cmc
pop
mov
stos
xchg
das
add
cli
addl
jns
addr16
jnp
movsl
push
adc
imul
pop
xchg
xchg
scas
out
sub
and
adc
pop
adc
dec
das
pushf
jnp
enter
xor
jb
push
fcomps
push
cmp
jb
dec
sub
mov
ficoms
jb
clc
pop
dec
push
cmp
sbb
pushf
aas
or
test
mov
pushf
stos
cmp
push
jp
sbb
and
mov
pop
addl
xor
into
mov
mov
pop
and
cld
dec
mov
lret
ss
mov
fisttpll
xor
pop
movsb
cmp
ljmp
int
mov
insl
fidivs
aad
iret
cmp
mov
stc
push
lcall
pop
lods
mov
ljmp
shll
lea
xchg
xor
fisttpll
cwtl
scas
dec
in
adc
push
sub
ljmp
jnp
cmp
mov
sbb
insl
xchg
sub
jb
cmp
dec
and
lret
sbb
dec
dec
dec
mov
dec
inc
loop
fwait
pop
repz
orb
jbe
xchg
mov
in
call
and
fisttpl
mov
movsl
sub
xchg
mov
or
fimuls
pop
cmc
xor
pusha
mov
outsb
jmp
mov
pop
sbb
mov
add
and
sub
push
jne
iret
data16
xchg
sbb
test
fwait
aas
mov
ss
sbb
cmp
lods
ljmp
out
fs
cltd
fnstsw
sarb
pushaw
divl
xchg
sbb
xlat
lret
sub
mov
ret
xor
loopne
imul
cmp
repnz
aad
lock
and
hlt
inc
cmc
and
adc
pop
dec
mov
dec
sbb
inc
stos
dec
xchg
cmp
sub
insb
cmc
lcall
repnz
scas
fwait
or
jns
fdivl
jnp
sub
inc
push
sbb
dec
push
sub
pop
popf
mov
mov
push
cltd
xchg
dec
jecxz
ret
push
stos
sahf
jl
and
sbb
push
hlt
xchg
clc
add
fstp
aaa
pop
loope
ss
cmp
dec
int3
cmp
pop
aaa
sbb
test
xchg
jns
test
mov
cmpb
xchg
call
or
jo
lock
push
mov
add
jp
mov
push
inc
mov
mov
stc
dec
int3
mov
xchg
arpl
test
fwait
lods
ret
fsts
cmc
pushf
jne
sub
insb
fwait
out
mov
push
cld
sarb
inc
mov
adc
push
xchg
jne
xor
push
sbb
cmc
test
mov
mov
test
mov
jbe
faddl
lahf
cmp
push
dec
sbb
xchg
nop
jnp
ja
cmp
xchg
imul
out
out
jge
sbb
iret
mov
xchg
call
ror
add
iret
mov
aas
cmc
cmp
pop
shrb
xchg
lods
iret
fistpl
mov
lods
push
out
add
jo
mov
push
fdivrl
vpmovzxbw
inc
aad
mov
mov
push
mov
nop
push
push
push
bound
and
ret
ret
xor
xchg
in
inc
mov
outsl
sub
mov
out
hlt
test
rcr
pop
dec
inc
xlat
mov
fistps
in
das
lcall
adc
ret
popa
ficomps
shr
fcomi
pop
fists
xchg
lahf
xor
test
dec
jle
aaa
mov
push
adc
mov
les
mov
cmpsl
pop
add
and
scas
inc
movsl
pop
dec
lcall
mov
pop
cmp
popa
add
icebp
mulps
in
inc
int
mov
jmp
jns
jmp
mov
lods
add
inc
xrelease
mov
mov
mov
es
pusha
dec
rol
aam
and
lret
push
push
push
insl
add
jnp
call
mov
rorl
sub
loopne
add
js
ror
push
test
loop
scas
xchg
call
push
cmpsb
jno
movsb
dec
rcl
add
and
cmpsl
mov
cmpsb
add
cmc
jle
nop
cld
sbb
xchg
cld
cld
push
sahf
jecxz
sub
mov
sbbb
lds
jl
pop
push
sbb
iret
adc
jns
in
xor
pop
add
je
add
add
sbb
in
jnp
loopne
lcall
jne
dec
outsb
push
mov
inc
cltd
aas
cmp
xchg
imul
fs
dec
xchg
rcr
sub
lea
cmc
fisubs
or
pop
push
daa
mov
popf
int
enter
add
ljmp
lock
out
push
push
popf
shrb
mov
pop
push
inc
inc
xor
test
mov
mov
test
cmp
jne
sub
ficoml
addl
xor
push
outsb
stos
and
stos
sarb
jge
stos
jno
pop
adc
and
pop
pop
jbe
aas
popa
dec
xchg
xchg
mov
pop
or
daa
jg
pusha
shrb
popf
xchg
outsl
lea
xor
shll
mov
js
in
mov
sahf
fcoms
imul
and
mov
adc
xor
xor
adc
cmp
jl
leave
adc
inc
and
push
nop
divb
mov
fnstcw
jb
pusha
loop
repnz
lea
inc
dec
adc
arpl
pop
adc
aaa
call
pop
xor
mov
sti
clc
sub
sar
fdivr
cmp
mull
sahf
xlat
add
mov
jo
fcompl
xchg
lahf
push
dec
and
mov
push
mov
test
inc
cmpsb
pop
mov
add
cmpsb
add
shlb
daa
xor
test
bswap
sub
imul
push
sbb
push
ss
aad
lods
adc
std
insb
jmp
xchg
loopnew
movsb
outsl
xor
inc
xlat
push
xchg
mov
mov
push
stos
in
lds
jbe
xor
scas
jae
das
pop
cmc
dec
pop
push
push
push
xchg
vxorps
lods
imul
push
dec
sti
dec
push
outsl
dec
addr16
mov
popa
xor
jp
test
jl
out
xchg
push
sti
mov
inc
stos
fadds
push
jg
mov
je
mov
push
fsubs
icebp
mov
mov
jns
sub
xor
cmp
xorb
cwtl
fmuls
popf
addl
jl
iret
push
aas
aam
pop
aam
inc
add
aas
cmp
sub
xchg
loopne
or
mov
inc
pusha
fwait
xor
notl
mov
iret
mov
pop
mov
gs
movl
int
mov
or
in
addr16
dec
rcl
leave
mov
rclb
cmp
int3
pop
lods
cltd
xchg
fcomp
loopne
sti
clc
dec
mov
push
int3
out
mov
shll
inc
lods
jp
shll
sub
sub
sti
xchg
or
xorl
ja
jl
pop
aaa
adc
das
or
mov
outsb
scas
cs
out
gs
std
dec
dec
lahf
dec
fisttpll
mov
add
jae
cmp
scas
dec
daa
ret
test
data16
jne
je
push
and
nop
out
mov
xor
mov
pop
sbb
mov
sbb
push
fucomip
sti
ret
inc
ret
push
orl
out
dec
jg
std
push
subb
out
mov
mov
dec
or
imul
lahf
loopne
cmp
repz
push
rcrl
jecxz
std
mov
aad
lcall
jle
pop
ror
pop
xor
adc
insl
stos
lret
out
dec
push
sbb
call
mov
in
adc
iret
pop
cmp
jl
jb
jae
xor
sbb
push
addb
sub
push
or
scas
stos
sbb
je
pop
or
adc
adc
iret
push
lret
out
sbb
in
into
cmc
iret
repnz
sbb
jbe
dec
mov
lods
insl
cmp
jnp
dec
and
xchg
mov
popf
mov
jle
push
stc
jno
dec
cwtl
pop
adcl
mov
mov
xor
arpl
add
and
and
iret
sbb
mov
int3
xor
sbb
and
flds
or
mov
sbb
inc
pushf
rorb
rorb
add
in
push
jb
jns
push
ret
xchg
push
popa
cs
xchg
movl
fistps
outsb
data16
imull
out
cmpsb
jp
mov
imul
sub
pop
scas
cltd
or
out
mov
lock
outsb
add
xor
inc
xor
jmp
icebp
mov
pop
cmp
fldcw
mul
fcomps
das
mov
insl
lock
dec
xchg
or
push
xchg
fldt
push
xchg
lock
mov
test
das
xor
in
icebp
push
repnz
pop
pop
jge
pop
add
fistpl
mov
pop
mov
aas
or
addb
sbb
lahf
imul
dec
cs
divl
rclb
iret
or
sub
inc
imul
inc
cli
jne
daa
push
addr16
iret
add
iret
iret
iret
cmp
imul
and
cmpsb
jbe
xlat
xchg
imul
xor
sub
cmpl
xor
push
or
rcll
push
addl
cwtl
std
roll
in
sbbl
lods
add
outsl
pop
aaa
jno
lock
mov
cli
and
xchg
jecxz
mov
or
in
cltd
pop
aas
imul
xor
call
daa
mov
stos
cmp
std
and
jge
and
lahf
jp
or
cmp
cmc
sahf
mov
cld
mov
je
bound
fcompl
jle
jmp
sarl
into
fdivs
loope
mov
mov
pop
add
sub
fidivrl
mov
or
inc
xor
sbbb
addr16
in
out
clc
inc
add
mov
dec
scas
mov
cld
xchg
lahf
adc
popf
test
cs
mov
into
dec
xchg
movsl
loope
enter
pop
sarb
mov
inc
dec
pusha
jns
xchg
inc
sti
fwait
rolb
dec
in
mov
jle
inc
add
std
mov
ss
lcall
lods
pop
rcll
lock
inc
stos
push
lcall
ret
insl
out
addr16
cmpsb
xchg
xor
mov
aaa
jge
xchg
cmp
jae
sub
enter
daa
jne
insb
sub
in
int
sbb
mov
enter
xchg
mov
rcll
pop
popa
fcompl
es
scas
jo
lahf
repnz
out
flds
pop
push
inc
mov
fsub
gs
add
mov
fwait
pop
leave
movsb
pop
or
jnp
outsl
jecxz
aaa
nop
adc
jne
cs
mov
mov
sahf
mov
ss
xchg
adc
mov
idivl
xor
andl
dec
mov
adc
mov
xchg
lcall
mov
je
pop
xor
fcoml
pop
ds
imul
cli
icebp
in
movsb
fidivl
mov
cltd
xor
and
sub
sti
mov
sbb
mov
cmp
push
cmpl
xor
dec
and
mov
loopne
das
and
lret
mov
pop
imul
cli
push
mov
dec
clc
testw
sub
aas
adc
or
mov
push
lret
sbb
sbb
xor
andb
ja
adc
dec
stc
lret
xchg
aas
loop
insb
xchg
jae
xchg
push
mov
iret
add
push
stc
xchg
push
jne
xchg
pop
mov
pop
mov
movsb
inc
inc
mov
inc
jbe
xlat
fwait
jecxz
call
adc
add
lea
pop
mov
dec
mov
in
imul
adc
sbb
jmp
lcall
xchg
pushf
lods
clc
mov
mov
addr16
out
xchg
push
mov
stc
cmpb
sub
xchg
movl
add
mov
push
adc
or
shrl
push
sahf
out
mov
aas
sbb
pop
sub
pop
mov
int
push
jae
out
pop
outsl
sbb
or
cmp
adc
imul
roll
cmc
divl
lret
add
orl
scas
scas
cmpsl
rorl
fs
and
lods
cmc
out
lods
push
jnp
test
leave
jbe
aas
jmp
aaa
mov
sub
fbstp
xchg
inc
mov
or
xchg
test
mov
sbb
call
cmpsb
icebp
hlt
cmp
fs
xchg
inc
aas
xchg
cwtl
xor
sub
push
enter
mov
mov
fdivs
xchg
and
xor
dec
jne
pusha
std
fs
leave
mov
xor
sub
jl
pop
add
addr16
jecxz
inc
pop
jns
insl
mov
stc
mov
jne
scas
aam
xchg
inc
repnz
cmp
cmp
rol
dec
xor
add
xor
test
dec
and
mov
fldcw
adc
push
jno
jno
imul
jecxz
xlat
into
in
sub
jle
mov
adc
dec
hlt
cmp
inc
adc
xchg
daa
rolb
sub
mov
insl
and
adc
int3
repz
sbb
push
jmp
mov
mov
jg
test
sub
sahf
repz
lahf
xchg
jge
adc
lfs
mov
dec
int
repz
xchg
in
adc
mov
pop
xor
inc
or
bound
cmp
mov
xchg
pushf
lcall
xchg
loope
and
xor
adc
mov
inc
mov
aaa
jmp
and
sub
outsl
pushf
mov
gs
stos
sti
sub
add
dec
ret
outsb
xchg
sbb
push
ret
shrl
loop
sub
push
into
sbb
mov
add
test
push
shlb
outsb
cmp
cmp
je
cmp
lahf
scas
or
rclb
test
jo
out
int
cmc
push
leave
andl
jle
dec
movsl
add
jnp
std
lds
fs
and
adc
or
mov
and
push
jecxz
addl
xchg
dec
imul
xchg
add
ds
cmp
fimuls
sub
insb
push
divb
adcl
out
jae
cs
daa
jge
pop
jne
stc
loop
data16
pop
dec
xchg
sub
stos
fwait
mov
pop
test
sbb
inc
pop
call
ja
mov
popf
add
cmpsb
stos
xlat
mov
stos
lods
xor
jbe
sub
lcall
into
xor
lock
fisubrl
loop
test
scas
cmp
jb
test
stos
out
add
jne
inc
out
sti
dec
mov
adc
xchg
movsb
dec
sbb
push
sbb
push
fs
fmull
lret
sbb
gs
mov
mov
out
push
cmpsb
xor
mov
in
jbe
rcrl
xchg
inc
shll
or
push
cmp
scas
push
in
mov
sbb
stos
movsl
sub
jae
lahf
fs
sbb
insb
in
imul
mov
adc
adcb
push
sbb
mov
jne
xchg
sub
cltd
movl
fldenv
cmp
xchg
push
stc
dec
sahf
push
add
in
jl
cltd
dec
pop
stos
into
push
add
mov
imul
jl
sub
fneni(8087
cwtl
add
out
mov
rcrb
stos
outsb
jg
mov
sub
xchg
loop
mov
sbb
push
cmp
sub
insb
jns
sbb
int
sarb
mov
shll
pop
and
mov
testl
out
xchg
push
and
in
js
push
shlb
int
jg
xchg
movsb
mov
sar
dec
xchg
push
out
pop
jecxz
test
inc
sub
sub
mov
jp
in
sub
loop
push
cwtl
or
push
push
sub
adc
outsl
mov
adc
fsts
mov
xchg
push
or
push
stos
dec
xchg
jae
mov
aad
mov
popa
or
push
out
adc
cmp
cmp
push
cmpsl
push
dec
jno
arpl
push
mov
das
je
dec
test
fstpt
inc
movsb
dec
push
out
bound
sar
shll
je
and
mov
add
adc
pop
push
mov
ds
ja
shll
sub
hlt
xchg
decb
dec
js
jne
inc
imul
mov
and
inc
negl
mov
aas
out
das
push
das
push
leave
fs
sub
adc
sbb
popf
cmpsl
sub
scas
or
xor
push
inc
add
xchg
xor
cmp
movsb
insl
inc
or
lods
ret
and
xchg
dec
push
xchg
je
jmp
icebp
inc
jecxz
pusha
pop
test
das
pop
lock
test
pop
fcmovne
int
adc
mov
and
push
imull
int
jne
xlat
mov
test
ficomps
jecxz
xor
or
and
sub
and
hlt
aaa
mov
xor
sbb
lods
repnz
pop
int
mov
scas
pop
dec
mov
hlt
dec
jo
push
pushf
push
pop
sbb
jns
fs
aaa
clc
sbb
daa
jns
dec
xchg
mov
inc
xlat
sbb
pop
int3
cmp
test
aam
mov
push
jmp
daa
jle
jne
jb
outsl
mov
dec
push
lcall
pop
insb
lret
shl
xchg
inc
imul
mov
ret
fists
jle
pop
xchg
cmp
jne
out
sbb
xchg
lock
dec
out
lds
insb
xchg
adc
pop
mov
adc
cmp
ret
and
mov
aas
mov
xchg
repnz
sbb
mov
daa
arpl
and
sbb
fcomps
sub
dec
shll
or
cli
sbbb
shl
mov
scas
xchg
xchg
xor
aaa
fwait
adc
add
sti
jmp
mov
insl
mov
add
pop
mov
mov
scas
lcall
dec
lahf
cmc
roll
pop
pop
shll
ss
rorb
inc
and
pavgw
iret
aad
push
jo
movsl
jne
leave
or
leave
iret
mov
cmp
and
outsb
stc
ja,pt
adc
aad
lahf
inc
std
xor
hlt
ss
mov
inc
mov
push
dec
das
mov
mov
xor
or
dec
aaa
dec
xorl
cmpsl
sbb
cmp
addr16
enter
lea
in
and
mov
cmp
xor
movsb
push
or
jae
xor
mov
mov
popa
xor
in
insb
in
jne
push
mov
ret
hlt
cmpb
xor
shll
xlat
xchg
imull
cwtl
leave
inc
adc
stc
add
fidivrs
or
mov
js
imulb
mov
jecxz
iret
xor
and
mov
out
cmp
and
xchg
sub
int
jp
lods
out
pop
out
rcll
movsb
in
scas
loopne
mov
mov
sti
inc
fimuls
xchg
adc
xchg
pop
jle
push
out
aad
push
jl
sub
mov
call
mov
push
cmp
add
fwait
adc
jg
pop
jb
cmp
loop
inc
mov
outsl
mov
ret
mov
out
xchg
imul
fiaddl
or
add
mov
sub
push
mov
fsubrp
or
mov
test
dec
rcll
ss
mov
popa
mov
push
sub
call
cmpb
dec
out
movsb
add
lods
outsl
push
pop
loopne
pop
ss
int3
or
cwtl
daa
adc
out
xchg
adcb
jnp
jecxz
jp
adc
aas
and
mov
addr16
cmp
hlt
into
fiadds
daa
mov
clc
cmp
shll
sbb
out
iret
pop
fists
ds
call
sub
push
orl
test
inc
call
enter
ret
shll
out
xor
movsl
cwtl
adc
xorb
add
fadds
popf
std
cltd
testb
push
call
jmp
or
xchg
or
xchg
xor
jb
out
xlat
imul
mov
fwait
loopne
pushf
jmp
jnp
xchg
scas
adc
xor
dec
jp
mov
inc
inc
test
or
fisubrl
pop
movsb
jns
shl
or
je
and
std
cmp
xor
daa
imul
rcl
and
in
mov
sub
addl
rcrl
int
test
loope
aas
adc
push
mov
push
mov
jmp
fisubrs
mov
out
sti
cld
shlb
loop
sub
jle
pop
pop
pop
push
test
or
cmpsb
mov
xor
insl
iret
fwait
mov
mov
cwtl
and
fdivl
test
push
clc
test
cmp
aam
out
insb
mov
lock
xorl
aaa
xchg
into
inc
lock
sub
not
sbb
add
push
daa
mov
xlat
js
jbe
pop
iret
inc
dec
cmc
sub
insl
shll
jecxz
xor
add
xchg
sub
imul
pop
sbb
rolb
dec
sbb
in
adc
push
lods
lods
pop
movsb
inc
in
insb
mov
cmc
cmpsl
cltd
jns
pop
je
ror
orl
rorl
lods
inc
cmp
mov
mov
or
inc
clc
jp
imul
das
mov
pop
aas
lock
sahf
scas
inc
inc
decl
push
lock
int3
cmp
int
mov
ficoml
in
gs
jne
clc
and
xlat
xor
inc
push
and
sub
testb
icebp
es
loop
mov
ja
dec
add
jae
push
pop
mov
gs
arpl
pop
inc
pop
mov
or
rorb
ret
icebp
test
mov
mov
push
scas
jnp
jp
lahf
rolb
and
sti
in
xchg
xor
add
mov
sahf
lds
int
je
push
lods
sti
ja
std
dec
adc
sbb
sub
pop
jp,pt
out
fiadds
xchg
loope
add
loopne
xchg
cltd
adcl
dec
decb
mov
sbb
outsb
ret
orl
push
not
into
fisubrs
push
int3
aam
js
addr16
jecxz
in
sub
cli
cmp
test
push
jle
in
cwtl
sbb
and
push
jg
dec
clc
cli
dec
pop
pop
loope
mov
xchg
loop
incb
mov
sub
divb
aam
jp
repz
lcall
dec
aam
adc
pop
lret
jb
in
mov
es
ljmp
jecxz
or
pop
lret
and
xchg
std
and
xchg
mov
mov
xchg
out
jg
lcall
dec
rdmsr
push
xchg
imul
mov
adc
adc
loope
repnz
cmc
lods
mov
pushf
sub
das
inc
sub
push
test
mov
adc
jg
clc
popf
stos
cs
clc
inc
lods
mov
jb
xchg
lahf
mov
or
sbb
notb
mov
outsb
stos
cmp
ror
xlat
jecxz
or
popf
bound
push
stc
inc
sbb
pop
jne
jnp
cld
sub
xchg
std
enter
mov
xchg
mov
jb
and
push
shll
loop
int
adc
mov
ljmp
xor
mov
popa
insl
clc
push
outsl
imul
fxch
xor
push
lods
cmp
pop
fsubl
test
cs
or
mov
jg
addl
subb
pop
inc
mov
add
int3
and
jge
adc
push
mov
xchg
bound
data16
dec
mov
xor
iret
or
adc
lahf
arpl
pop
dec
repz
lods
or
adc
out
adc
pop
test
and
push
ss
mov
mov
sub
fildl
insl
sbb
gs
jg
cmpsb
push
sub
xchg
sub
xor
jnp
adc
sbb
jno
leave
xchg
mov
fxch
outsb
loop
add
mov
sub
jecxz
je
pop
stos
into
sbb
lods
fistpl
idivb
xchg
lock
jnp
inc
fstps
outsb
add
cmp
stc
push
ss
cld
xchg
pop
cmp
ljmp
push
test
lahf
fxch
call
mov
adc
push
adc
xchg
push
nop
inc
xchg
push
outsb
lahf
lret
push
add
outsb
add
inc
jnp
negl
fadds
inc
jle
test
xchg
inc
es
xchg
inc
or
nop
into
push
insb
test
or
jae
xor
scas
shlb
pusha
mov
xlat
out
jne
enter
rorl
jl
jae
out
loope
mov
clc
mov
das
imul
test
aas
lcall
rorb
mov
aad
insb
inc
adc
xor
out
sbb
and
jae
rol
jb
sbb
ds
shrb
into
nopl
popf
xorl
repnz
lahf
sbb
mov
xor
cmp
adc
es
xor
lods
outsb
pop
movsb
mov
clc
repz
fistpll
dec
and
imul
sbb
xlat
adc
insl
arpl
jne
jmp
icebp
jle
adc
sbb
adc
ds
sbb
enter
mov
cmovns
jb
fpatan
fisttps
jb
divb
push
fcomps
nop
jns
sbb
add
cmp
iret
rolb
out
jle
xchg
adc
jne
dec
jno
leave
stos
jle
frstor
or
mov
imul
ret
adcb
cmp
pop
ss
push
mov
pop
mov
push
jno
or
pop
add
fistpll
sub
adc
cmp
pop
orb
xchg
and
inc
outsb
mov
insb
mov
pop
dec
jno
hlt
loopne
sbbl
idivb
test
xchg
mov
gs
imul
mov
cmp
jmp
aam
dec
jge
xor
lret
dec
aad
cmp
lret
push
push
adc
fs
pusha
sub
jle
sub
dec
dec
or
adc
fcompl
shrb
das
lods
fwait
fs
scas
pushf
add
jle
xor
inc
stos
cmp
push
sub
stos
jb
xchg
xor
xor
pop
frstpm(287
enter
sub
inc
mov
in
icebp
fstps
cwtl
pop
aad
rolb
call
lds
rorb
hlt
pop
sahf
sbb
jae
int3
inc
out
insb
repnz
inc
mov
sahf
jae
jg
lcall
dec
xchg
testb
fld
in
pop
jnp
add
xchg
mov
das
test
jmp
mov
test
mov
inc
jg
div
xchg
mov
mov
mov
and
orl
outsl
stos
inc
imul
arpl
jmp
and
dec
pop
out
push
movsb
iret
push
add
mov
test
sub
fidivrs
and
pop
notb
test
loop
sbb
push
adc
jge
cmp
and
sub
popa
mov
pop
sbb
mov
incl
aaa
stos
bound
test
ja
push
adc
pop
jo
addr16
pop
pop
pop
cmp
pop
push
mov
add
jecxz
sbb
mov
test
imul
cwtl
xor
sets
inc
repz
jmp
mov
xor
xchg
mov
add
into
jae
inc
outsl
lock
nop
sub
out
pop
nop
call
mov
mov
inc
jle
cmp
adcb
adcb
and
xchg
test
xlat
inc
jg
iret
es
bound
adcl
sub
jns
lods
cld
sub
and
cmp
fs
xor
mov
js
rorb
cmp
cmp
cmp
addr16
mov
test
cli
jle
cltd
inc
and
sub
mov
sub
les
cmp
imul
pmaxub
movsl
jl
stos
fcoml
inc
rcrb
adc
outsb
stos
xchg
or
mov
insl
xchg
pop
mov
xchg
rolb
pusha
and
fs
xchg
lods
pop
jg
xchg
xchg
outsb
ficoml
jge
jge
xor
sbb
sbb
lret
int
jae
pop
loopne
inc
jb
test
adc
sbb
cmc
jge
push
and
or
adc
stos
aaa
pop
jae
xor
sbbb
or
xor
lock
xchg
add
insb
mov
sbb
pop
and
xchg
add
and
or
push
sbb
ja
movsl
in
xor
sub
cwtl
fldt
adc
add
or
cmp
iret
mov
jecxz
and
stos
jb
insb
cmpsl
jb
data16
data16
cltd
ljmp
cmc
dec
pop
lahf
jmp
sub
cmp
lcallw
inc
xchg
mov
dec
and
stos
jg
shll
mov
sbb
leave
shll
sub
test
je
inc
push
stos
push
rolb
mov
xchg
das
jae
xchg
or
in
jnp
stos
rclb
pop
lret
jae
inc
jmp
mov
pop
arpl
ljmp
push
mull
out
cmp
ja
cmp
dec
fldcw
dec
sti
inc
jmp
outsb
jnp
mov
mov
or
push
mov
fbld
js,pt
out
push
mov
push
jmp
or
jbe
adc
mov
shrl
iret
inc
jp
mov
imul
jle
push
pop
outsb
out
push
fcmovu
mov
testl
aaa
lock
xorb
repz
and
cmp
ss
sbb
cmpsb
jae
sub
mov
sub
fsubrs
aaa
pop
xor
push
or
test
xor
xchg
and
out
xor
mov
jecxz
fsubr
jae
mov
inc
leave
push
xchg
xchg
mov
stos
in
std
dec
arpl
les
inc
rcl
in
les
and
push
bnd
into
jl
cmp
fidivl
inc
jg
dec
lret
mov
push
or
xor
inc
stos
jns
pop
cld
outsl
pop
mov
je
push
insl
nop
and
test
inc
ret
dec
into
inc
push
inc
stos
dec
sub
jle
mov
cmp
pusha
pop
loop
mov
xor
loop
jp
jb
xor
cs
fcoms
out
inc
sub
dec
js
jae
mov
test
in
mov
xor
sbb
lcall
out
popf
xor
ret
mov
cld
fidivl
je
adc
testl
adc
aas
jmp
xor
int3
mov
xlat
cli
iret
ror
mov
push
mov
mov
dec
cmp
xor
aaa
xchg
test
sti
and
push
mov
cmp
mov
mov
jmp
je
pop
popf
mov
xor
inc
dec
dec
push
push
push
inc
sahf
push
pop
repnz
pop
notl
leave
or
fimull
js
pushf
mov
in
add
cmpsb
or
imul
mov
adc
add
mov
bound
outsl
pop
es
xchg
movsb
out
out
idiv
adc
mov
adc
or
es
dec
out
mov
sbb
sub
out
dec
stc
add
ret
mov
sbb
add
sub
jne
adcl
popa
ja
fildll
jbe
dec
mov
mov
pop
dec
fistpl
movsl
push
sbb
das
jae
cmpsb
or
and
pop
fcmovb
or
push
xchg
sar
lret
add
cmpsb
les
inc
mov
jno
bound
out
cmp
pop
inc
mov
addr16
mov
mov
in
xlat
cs
sti
out
cmp
sbb
cmp
cmpsl
cmp
int3
adc
lea
push
dec
or
add
mov
xchg
xor
dec
mov
sarl
and
ljmp
rcl
lahf
jbe
daa
imul
es
add
inc
pop
fiaddl
dec
frstor
xchg
jl
inc
xchg
fildll
cld
mov
mov
dec
lods
in
movb
aaa
dec
push
mov
mov
andb
and
mov
aas
stc
test
dec
lret
mov
and
call
inc
cmpb
mov
idivl
lret
mov
getsec
nopl
fcoml
and
push
stos
xlat
into
scas
or
pop
int
int
lea
pop
pushf
cmpsl
lret
rcll
inc
jle
jbe
ficoml
jo
cmp
add
popf
mov
jg
addr16
push
inc
mov
into
add
insl
push
sub
dec
pusha
lods
xor
rolb
test
into
dec
fisttpl
ds
push
adc
add
in
xor
pushf
adc
outsb
insl
or
sarb
aas
mov
cmc
push
sahf
sbbb
sbb
xor
stc
mov
mov
out
mov
mov
scas
sbb
lea
lods
cmpsb
repnz
sahf
imul
mov
sub
dec
ret
jbe
jo
inc
sub
adc
mov
inc
ficompl
dec
jle
push
cld
shlb
cmp
cmp
cmp
jp
pop
mov
push
inc
js
test
in
rolb
cmp
cmpsb
jae
loopne
cmpsl
das
mov
cld
fnstsw
push
loop
movsl
movsl
outsl
mov
xor
dec
sbb
adc
jecxz
mov
sbb
enter
nop
sbb
mov
pop
stc
xor
adc
out
sbb
push
idivl
leave
sbb
push
push
insb
imul
add
push
or
pop
sbb
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
sub
mov
sub
gs
movsb
pushf
jne
arpl
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
xchg
data16
and
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
mov
loop
adc
sbb
scas
aaa
cwtl
add
pop
jg
push
push
fs
or
jo
repnz
add
push
call
mov
jo
incb
fsubl
jne
xchg
push
pop
out
add
ud0
push
gs
popa
jae
cmp
mov
jp
stos
roll
stos
loop
cmp
aaa
js
call
pop
and
mov
in
cmp
inc
pop
add
pop
mov
mov
adc
adcl
pop
sub
mov
adc
mov
jo
inc
and
ds
call
lcall
or
aad
jmp
mov
add
fsubr
add
ljmp
inc
dec
fmuls
fmuls
inc
mov
or
xor
or
cmpl
inc
call
inc
jmp
loope
fsubl
es
ret
push
add
dec
and
cmp
lea
mov
movl
ret
mov
inc
push
mov
adcl
jecxz
daa
adc
mov
orb
mov
js
rcrb
jbe
or
dec
inc
inc
shll
mov
shl
mov
inc
dec
jmp
inc
lods
xchg
inc
cmpb
inc
idivl
jge
xor
jg
clc
sbb
adc
cltd
push
hlt
push
adc
gs
add
pop
clc
shl
add
sub
xor
fisttpl
cltd
jb
xchg
cmp
cmpsl
jmp
dec
and
decb
or
jmp
ret
or
adc
or
inc
ja
and
inc
add
push
in
hlt
cmpl
jb
data16
jbe
in
stos
enter
rorb
cld
adc
cmp
mov
adc
cmp
decb
inc
dec
jne
cmp
mov
sub
mov
ja
sbb
push
jo
jle
mov
jmp
popa
adc
test
or
pop
or
mov
sbb
js
fucom
nop
mov
xor
orb
mov
std
test
out
push
push
jmp
pop
les
push
and
or
les
mov
xor
cmpb
pop
jbe
adc
push
pop
cmp
cwtl
inc
cmp
jne
pusha
adc
dec
in
in
sub
lds
mov
ret
data16
out
fstp
cwtl
ljmp
xorl
roll
aas
cmpl
add
int3
cld
inc
xchg
push
jmp
push
mov
and
es
push
push
mov
pop
adc
push
daa
push
mov
or
xchg
inc
push
mov
dec
jmp
aas
push
or
in
or
call
push
pop
fcomp
sub
add
xchg
add
mov
inc
in
incl
addr16
fucompp
push
push
outsl
xor
test
dec
dec
mov
xchg
popa
ljmp
loope
mov
adc
adc
and
pop
push
or
adc
push
sbb
les
mov
sbb
inc
push
les
mov
dec
stos
sbb
daa
ljmp
xchg
adc
inc
mov
jg
and
add
leave
mov
or
inc
pop
sbb
shl
add
adc
cmpb
lods
loopne
add
or
shl
inc
ljmp
in
bound
stos
jo
sbb
mov
sub
popa
mov
mov
push
imul
add
mov
gs
jp
aaa
adc
das
push
inc
shlb
cmp
mov
dec
pusha
sub
mov
outsl
mov
cmp
inc
mov
and
lret
sub
jo
pop
test
add
pop
stc
cmp
xchg
push
adc
sub
dec
xchg
ljmp
cmp
jae
jp
ja
add
and
clc
subb
add
sub
jecxz
add
pop
aas
les
add
pop
js
sub
call
lahf
sub
mov
int3
pop
mov
test
movsb
xchg
sbb
pop
push
imul
mov
jns
fdivrs
add
pop
add
jp
xor
jmp
pop
dec
and
and
sbb
push
adc
shl
mov
lea
addb
imul
add
cmp
pop
loopne
daa
cmp
pop
lret
mov
xor
xor
push
addb
fisttpl
push
lret
daa
mov
rolb
pop
in
xchg
lods
mov
sbb
add
xchg
and
das
aad
aam
mov
pop
cmp
mov
cmp
jne
xor
lods
add
icebp
ffreep
iret
and
hlt
jne
call
cs
aad
push
mov
add
mov
mov
ret
sbb
add
pusha
mov
add
sarl
sub
adc
cmp
adc
push
jbe
sbbl
ds
aad
pusha
sub
add
cmp
in
sub
lock
arpl
lahf
testl
or
sbb
mov
adcb
mov
mov
out
pop
out
roll
out
push
push
mov
shrb
mov
add
and
insb
jnp
pusha
xor
insl
push
push
or
ljmp
inc
cmp
inc
adc
add
fwait
sub
dec
stc
cwtl
or
fcomi
cld
sbb
adc
adc
mov
nop
mov
mov
or
push
fnsave
scas
clc
dec
icebp
rclb
xchg
add
inc
dec
out
pop
add
sbb
xor
mov
insb
dec
pop
add
hlt
stos
xor
xor
cmpb
add
mov
arpl
mov
clc
or
sub
shlb
lods
andb
push
add
mov
nop
mov
lea
ret
mov
roll
iret
cmp
orb
push
and
aas
jns
sub
cmp
jle
xchg
jnp
add
js
and
and
test
adc
call
mov
add
enter
jl
inc
mov
add
pop
inc
stos
or
lock
xchg
roll
push
psubb
js
bound
adc
adc
pop
dec
mov
scas
mov
fistpl
les
fbstp
insb
fnstsw
mov
jl
pusha
in
lock
mov
add
into
xor
test
rclb
pushf
fincstp
add
lahf
adcl
out
push
add
movsb
jmp
add
jmp
data16
aaa
push
add
arpl
outsl
sub
sub
push
ret
add
insb
shlb
add
jo
cmp
lods
jb
add
cmpsb
and
mov
fld
cwtl
push
lret
inc
add
jmp
inc
cwtl
stos
adc
xor
cmpsw
sbb
mov
sbb
adc
sub
mov
nop
add
addr16
lods
add
add
cmpsl
jb
scas
add
test
das
outsb
pusha
inc
xor
test
adc
add
jle
lret
pop
repz
jo
ja
rorl
cwtl
inc
add
int3
mov
mov
pop
jl
pop
ljmp
in
add
lods
dec
inc
fsubs
int3
inc
lret
mov
cmp
inc
or
push
call
inc
xchg
test
stos
add
andb
xchg
adc
dec
and
push
jno
and
add
fcoms
icebp
out
loop
cs
sub
shlb
lock
or
int3
add
enter
into
mov
out
ja
add
popf
or
jle
inc
test
clc
psllq
fmuls
add
xor
dec
push
fucomip
rorb
and
xor
mov
xchg
pop
cld
xor
jg
sbb
cmpsl
popa
out
hlt
mov
movsl
das
test
call
call
clc
mov
xlat
fucomp
lds
js
xor
push
push
mov
cmp
lods
xchg
lret
add
mov
sbb
jp
repnz
xor
pop
aaa
gs
mov
and
rolb
push
mov
in
mov
loop
or
fprem1
ds
and
fsubrs
push
push
add
xor
inc
sbbl
ds
add
ja
loope
dec
mov
xchg
and
int3
pop
js
adc
lods
fwait
jns
pop
jns
or
sbb
jg
and
add
flds
adc
in
loopne
leave
jbe
mov
xorl
cmpsl
push
mov
xor
xor
jo
out
mov
sub
ds
adc
mov
add
cwtl
inc
pop
jo
mov
in
js
andb
cmp
push
outsb
sbbb
add
adc
and
ficompl
or
mov
and
add
enter
lods
fists
in
xor
out
jmp
add
jbe
inc
test
imul
pop
mov
movsl
and
cli
fidivrs
add
xchg
scas
repz
sbb
add
sbb
cwtl
add
cld
imul
mov
mov
add
inc
insl
cmp
push
in
jp
xor
nop
xchg
pop
and
mov
les
add
mov
mov
aaa
dec
mov
mov
xchg
lea
push
add
les
andl
sarb
lret
sub
xor
inc
sub
outsl
jle
pop
sarl
pop
orb
iret
cmp
out
mov
rol
shlb
mov
mov
fs
rorl
dec
push
daa
add
mov
jns
xchg
add
fwait
imul
sub
mov
cmpl
mov
ja
sarb
jo
sbb
dec
addb
jns
jnp
mov
mov
pop
push
sub
xor
sub
and
mov
mov
aas
mov
call
es
repnz
test
movsb
fimuls
inc
xchg
pusha
sbb
int
shlb
les
inc
and
push
insb
cmp
pop
xor
sbb
dec
pop
call
mov
in
pop
add
or
cmp
xlat
popa
inc
scas
scas
dec
ret
pushf
mov
sbb
cmp
shll
jl
lahf
and
cwtl
stc
incl
or
mov
mov
call
cltd
cmp
mov
or
test
fs
or
adc
mov
sub
push
mov
xor
imull
or
xor
pop
xchg
or
into
lods
mov
and
int3
outsb
dec
adc
xchg
fldenv
jne
jmp
push
and
inc
fcomps
adc
or
int
mov
cmp
push
xchg
mov
lock
mov
jmp
js
lret
or
outsl
mov
gs
lahf
inc
sbb
pop
dec
jp
test
pop
les
and
in
sub
or
or
data16
popf
roll
das
aaa
fucomi
cmpsl
mov
xorb
adc
sbb
adc
imul
subl
lock
adc
sub
mov
scas
pop
and
add
idivb
jmp
aaa
lret
ljmp
test
int3
add
rcrb
jle
bound
xchg
lret
mov
mov
cmp
movsl
das
ret
in
xor
fs
pop
shlb
xor
imul
cmp
sbb
and
sub
add
lea
ret
sbb
cmp
inc
jmp
fnsave
notb
inc
inc
adc
xchg
dec
pop
sbb
add
adc
push
and
or
fildl
lods
in
sub
add
ss
inc
mov
sbb
lret
rol
sub
pop
jo
add
cmpsb
xor
xorl
jne
jl
mov
fs
or
jbe
ret
or
adc
push
jl
push
inc
xor
or
mov
jae
add
popf
data16
js
add
inc
dec
dec
pop
or
xchg
stos
mov
cmp
lahf
hlt
daa
in
or
sub
inc
out
cmp
rolb
xor
xchg
pop
xchg
les
adc
cmp
add
shrb
add
mov
cmp
mov
xchg
xor
or
xor
arpl
inc
loopne
stos
in
clc
and
mov
add
mov
add
pop
pop
imul
scas
in
sub
inc
mov
enter
add
clc
rclb
je
cltd
add
add
add
mov
or
mov
or
adc
das
lret
pop
jb
mov
jg
addr16
arpl
lea
ljmp
xchg
scas
rolb
jbe
push
cli
jno
movsb
pusha
add
iret
js
shrb
divb
jno
or
jae
xor
lods
sub
mov
jbe
add
xorl
sbb
call
inc
xchg
xchg
inc
loope
mov
std
insb
negb
icebp
sarl
push
popa
mov
fisubrl
outsl
xor
inc
mov
lods
sbb
lcall
cs
and
add
in
sub
sub
jecxz
hlt
pop
pop
lock
cmp
xor
xor
mov
pop
into
or
aas
and
enter
jle
add
lret
cwtl
fisubl
jg
add
cmp
xchg
jo
sbb
in
xchg
loope
adc
dec
inc
cmc
inc
add
dec
pop
ret
sub
mov
add
dec
pushf
pusha
imul
lods
adc
add
arpl
sub
add
hlt
add
xor
lock
pushf
gs
push
test
std
sub
sbb
inc
pushf
js
daa
popf
mov
xor
push
jns
or
aad
xchg
and
filds
push
arpl
popf
xchg
ror
inc
fdivl
arpl
cltd
mov
and
test
adc
dec
push
add
pop
sbbb
sub
sbb
jne
pushf
scas
xchg
cmp
subb
mov
add
int3
andb
jecxz
add
mov
lods
insl
nop
add
push
jns
inc
insl
dec
mov
push
xor
sbb
stos
push
mov
or
sbb
mov
jo
shl
add
xor
jl
iret
or
fs
mov
test
nop
les
ret
inc
enter
mov
jne
inc
adc
cltd
mov
jl
or
or
aad
ret
or
mov
in
add
mov
sub
in
test
dec
mov
mov
stos
or
adc
and
jno
add
in
cmpsl
lods
pop
bound
aas
dec
lret
nop
xchg
push
cltd
add
movsl
test
push
and
test
inc
inc
adc
mov
aaa
add
ret
sub
mov
das
into
pop
xor
dec
movsb
loopne
dec
lret
mov
and
hlt
push
test
xor
add
add
add
jle
scas
xchg
adcl
inc
jg
mov
adc
sbb
sub
push
and
ds
push
movsl
aas
data16
fstps
dec
xorb
push
sub
pusha
notl
nop
lahf
vpmadcswd
adc
mov
xor
mov
add
add
add
or
push
js
sub
mov
inc
std
shl
push
dec
fstl
ds
fldenv
repnz
jnp
sub
sub
int3
leave
shlb
cmp
jns
adc
xor
fldcw
jle
mov
and
push
pop
mov
cmp
adc
stos
inc
mov
or
mov
loopne
js
pop
lret
dec
or
adc
and
repnz
leave
les
add
stos
popa
imul
push
in
and
cmp
jecxz
inc
dec
or
push
add
out
rcr
xlat
dec
or
mov
and
push
ret
add
xchg
push
fsubs
test
fldl
inc
aaa
jbe
cmp
xchg
sub
xchg
js
scas
adc
cmp
sbb
jecxz
into
cmp
test
daa
and
and
shrl
sbb
jnp
add
mov
xor
inc
jmp
adc
aam
jbe
inc
stos
jno
and
mov
add
lcall
scas
add
rorb
in
or
add
push
push
dec
inc
mov
dec
cld
cmpsl
int3
push
lock
xchg
xchg
test
push
arpl
fsubs
jne
add
mov
inc
xor
xchg
mov
xchg
int
adc
mov
or
mov
ret
sbb
mov
xchg
mov
movsb
adc
cmp
inc
hlt
xchg
je
incb
adc
sub
outsb
mov
clc
adc
pushf
test
aaa
or
inc
ficoml
sbb
cmp
sub
push
out
mov
cwtl
mov
stos
outsl
les
fdivrs
or
mov
mov
ljmp
xchg
hlt
jbe
xor
loope
dec
lods
stos
adc
scas
jnp
push
js
les
push
push
rcll
orb
je
out
loopne
in
jle
pop
mov
lret
push
sub
pusha
shrl
or
push
movsb
scas
test
dec
or
inc
rclb
push
inc
inc
or
mov
scas
pop
jbe
mov
roll
loopne
fs
je,pt
or
mov
icebp
aas
int
pop
dec
xchg
add
stc
mov
pop
loopne
push
pop
pop
insl
test
jle
adc
cmp
xor
rcl
in
push
je
popa
cmp
fstl
xchg
add
loop
sub
or
loope
adc
sti
sub
xchg
sub
inc
insb
add
jnp
addl
rep
dec
fisubs
inc
les
pop
cmp
mov
rorb
cmp
sbb
mov
pop
adc
aam
and
inc
les
mov
mov
test
pusha
and
lcall
mov
mov
cmp
or
mov
mov
cmc
mov
jle
add
scas
adc
xorb
andb
lock
in
jecxz
fdivrs
add
roll
icebp
outsl
add
mov
dec
movl
inc
and
xchg
sbb
stos
scas
and
lods
push
repz
sub
adc
aas
mov
jne
pop
notl
xor
jl
mov
jns
fs
je
sbb
add
mov
int
xchg
lods
out
jge
xor
mov
xor
cmp
sti
add
cmpsb
pop
and
dec
jmp
jne
add
cmp
lret
rolb
jmp
push
jg
sbb
daa
add
aam
sbb
rorl
lahf
pop
inc
adc
adc
mov
aas
pop
add
data16
push
and
xor
inc
xchg
mov
lahf
cmpsl
adc
mov
pop
inc
sarb
out
in
or
or
mov
sbb
lock
xchg
dec
pop
mov
sbb
enter
aam
adc
sarb
pop
cmp
sub
cmp
into
xor
repz
test
and
mov
jecxz
je
lahf
add
cli
sbb
and
mov
adc
aam
push
push
out
inc
in
add
dec
test
lret
xor
add
aas
add
xor
rcrb
ret
sub
sub
movsb
add
inc
fiaddl
cmp
pusha
and
js
dec
fistps
lds
mov
add
mov
jl
cmpsl
test
loopne
lock
or
mov
and
sub
lret
and
pop
add
pop
pusha
push
int3
loopne
inc
mov
loop
fbld
aad
ret
fcomp
mov
xor
push
push
sbb
jmp
push
jle
loopne
push
addr16
enter
inc
pop
add
fs
or
xor
jno
xchg
punpckhbw
or
push
sbb
cmpsl
mov
aas
sbb
jns
orb
push
sub
mov
mov
inc
mov
mov
xorb
in
sbb
and
idivb
sbb
testl
jne
dec
movsb
add
xchg
fistl
cmc
dec
add
add
pop
lret
daa
aam
and
or
pusha
and
inc
and
pusha
jle
jne
and
cmp
xor
int
push
add
fiadds
mov
push
inc
mov
scas
mov
enter
test
loope
and
loopne
cltd
inc
es
mov
push
pop
or
stc
xor
pop
lds
pushf
enter
dec
das
fmull
cmp
xchg
inc
mov
fisttpl
adc
and
mov
sub
mov
or
pop
dec
shlb
cmc
loop
dec
add
add
sub
or
jl
stos
out
sbb
and
sbb
sub
jle
mov
scas
pop
out
in
cmp
test
out
pushf
test
cs
hlt
test
lahf
adc
out
inc
xchg
loop
out
or
enter
into
xor
scas
inc
add
mov
stos
cmp
dec
or
inc
int3
mov
test
push
fs
mov
das
xor
in
adc
lcall
enter
push
fiadds
pop
push
xor
xor
in
cmp
jmp
mov
mov
in
loopne
xor
and
cld
hlt
mov
fldenv
jbe
pop
cwtl
and
jl
pop
pop
scas
out
movsb
cwtl
add
mov
mov
loop
xchg
cwtl
movsl
je
pusha
pop
or
push
mov
push
cmp
in
cld
and
in
testb
xchg
cwtl
subl
cmp
adc
cmp
pop
ja
and
add
lcall
bnd
cmpsb
mov
mov
or
jmp
inc
dec
and
sub
xchg
aaa
test
les
inc
rcrb
bsf
sub
stos
push
ret
jns
add
and
dec
inc
in
cmpsb
pop
in
in
dec
xor
dec
mov
and
outsl
xchg
or
shll
xor
dec
xchg
and
fsubl
popa
call
aaa
pushf
cwtl
pop
add
jae
stos
adc
cltd
mov
add
mov
xchg
lcall
or
sbb
add
add
pop
daa
pop
xchg
mov
or
sbb
xlat
iret
nop
inc
xchg
add
pushf
lret
in
rorl
mov
fnstcw
inc
enter
push
mov
stos
cld
push
inc
subl
arpl
mov
mov
jb
shlb
or
and
cmpsb
repnz
dec
cmp
adc
lcall
mov
or
and
or
jle
in
loop
push
sbb
sbb
jne
jl
jbe
cmp
ja
add
bsf
mov
mov
inc
xor
in
or
push
inc
add
mov
inc
or
test
subb
lds
and
add
jnp
mov
sbb
push
std
and
hlt
lock
pop
cmp
mov
xlat
leave
int3
dec
sub
jne
sub
push
imul
nop
rcrl
add
xchg
mov
call
cmp
add
pop
and
pop
addb
call
adc
icebp
addb
or
jb
add
sarb
xlat
mov
pop
push
lock
sub
xor
pop
js
in
mov
and
sub
inc
push
in
pop
xor
lret
sub
and
les
daa
mov
sar
pop
sahf
sub
pop
inc
cmp
loopne
or
daa
cmp
cmpsb
loopne
sbb
jno
aaa
add
mov
fsubrp
fists
jmp
add
sti
loopne
sbb
dec
pop
add
outsl
xor
jbe
test
and
lods
xchg
fs
inc
mov
inc
mov
pop
or
xlat
cmc
adc
stos
fldcw
add
loopne
pusha
rcl
cltd
cs
add
xor
ffree
cwtl
or
add
fisubrs
jb
sub
dec
inc
fdivrs
xchg
adc
nop
lret
pop
xchg
pop
addb
ss
sahf
dec
bound
ret
fadd
mov
fsub
lock
add
es
mov
add
push
lcall
jmp
cmp
rclb
or
add
cmc
and
add
notl
test
lret
adc
ret
lret
test
xlat
pop
add
fbld
push
int
aas
sbb
orb
orb
nop
adc
pop
sbb
stos
inc
lahf
and
ljmp
loopne
cmp
in
push
dec
loopne
push
add
movsb
mov
inc
or
add
jb
subb
sub
push
lcall
adc
pop
and
test
clc
pushf
pop
dec
jb
inc
repz
sub
hlt
lods
cmp
mov
xchg
dec
das
test
mov
xorb
stos
xchg
adc
mov
into
gs
roll
ds
adcl
into
xchg
lods
push
faddp
lock
add
push
or
mov
and
and
add
sub
stos
cmp
mov
mov
dec
xchg
loopne
pushf
mov
adc
xchg
xchg
mov
xor
out
xor
movsl
push
fcomps
cmpsb
xor
cmp
adc
lods
scas
jo
and
push
loopne
mov
popf
add
test
test
push
xor
dec
pop
xor
inc
ret
inc
adc
dec
sub
xor
pop
rclb
aaa
decl
jns
and
jge
mov
push
xchg
add
dec
cmp
dec
iret
lea
add
inc
mov
cmp
cmp
in
adc
mov
mov
dec
mov
add
aaa
ret
add
or
ljmp
jp
and
stos
cmp
pop
mov
xchg
xor
xor
push
shll
cmp
dec
jecxz
sbb
imul
mov
insl
xor
jne
inc
and
sbbb
add
jg
add
xchg
pop
cmpb
add
in
sub
cld
test
pop
idiv
jle
loopne
push
arpl
rclb
lea
jp
cli
add
jge
dec
add
out
pop
adcb
adc
mov
dec
and
jecxz
fdivrs
or
cmp
jl
or
call
stos
lock
test
mov
mov
inc
loop
sub
subl
out
loop
aam
or
shlb
popa
xchg
loopne
outsl
or
lcall
cmpsl
les
fsubrs
les
movsb
ret
mov
scas
sub
xchg
or
sbb
ret
fstps
dec
push
fsubrp
add
jbe
pusha
mov
mov
notl
icebp
add
inc
mov
add
sub
nop
int
mov
push
adc
les
lahf
mov
rcrb
bound
stos
repnz
cld
scas
dec
test
sbb
lods
test
dec
push
mov
shlb
push
inc
inc
sub
dec
add
cli
subl
and
insl
add
jmp
call
popa
sub
push
pop
cmpsl
sbbb
sti
or
adc
push
sbb
add
mov
lods
cmp
jne
mov
aas
adc
subb
jg
shl
jns
sbb
hlt
test
test
dec
popa
lret
stos
fists
fsubrs
orb
icebp
das
daa
sbb
pop
or
or
movsl
xchg
xchg
lods
adc
adcl
sarb
dec
dec
jmp
add
push
in
jg
and
mov
shrb
jns
pop
fcomp
enter
add
insb
xchg
adc
notl
into
mov
add
cmp
cmp
jp
cmp
pop
sub
adc
test
insb
loope
shll
sub
cmpsb
push
sbb
mov
cmp
adc
fdivrs
pop
dec
sbb
mov
lock
adc
push
into
xchg
adcl
jo
mov
js
stos
shrb
ret
lret
pop
lcall
mov
xchg
test
sbb
mov
lcall
dec
pusha
pop
add
mov
push
add
out
loopne
sar
jne
gs
xchg
adc
xchg
lods
jns
add
or
bound
stos
xchg
xchg
and
cld
add
pop
sbb
inc
push
mov
inc
iret
inc
sbb
jne
and
in
pusha
push
inc
jle
ljmp
in
add
push
rcrl
test
movsl
add
jle
pop
inc
jg
mov
sub
mov
inc
mov
pop
mov
add
jmp
test
cmpsl
out
rclb
lahf
gs
in
or
std
mov
xor
push
fsubrs
and
pop
subb
call
cmpsb
add
out
mov
jne
ret
out
and
add
xor
add
cmp
jae
das
mov
shll
lods
aaa
push
insb
pusha
and
cwtl
xchg
add
fimull
push
dec
mov
xchg
sub
dec
xchg
lods
mov
dec
xor
or
xchg
push
in
fisttps
sub
pop
sub
inc
fadds
test
into
mov
mov
xor
dec
inc
pop
or
mov
xor
xchg
mov
sbb
add
push
call
and
dec
test
and
fidivrs
mov
push
js
or
mov
pop
fcomi
inc
sub
sbbb
cwtl
push
lods
xchg
rolb
shr
ljmp
ror
sbb
in
fsubl
ljmp
or
mov
bound
inc
fs
mov
mov
push
insl
cmp
and
adc
clc
add
mov
jg
pop
loopne
out
xchg
inc
add
lret
stos
sub
xor
adc
and
loope
jb
mov
lods
mov
mov
test
add
adc
cmpsb
adc
add
mov
pop
mov
rclb
rcrl
leave
jo
mov
and
std
inc
and
fists
fadds
jb
and
and
dec
sub
xor
or
dec
xor
lods
add
nop
aad
in
cmpsl
rolb
sarl
nop
loope
push
int3
das
inc
xor
out
in
les
and
inc
imul
pop
in
dec
jmp
or
repz
sbb
andb
fisttps
clc
and
mov
shlb
sub
jne
outsl
jl
data16
lea
cld
pushf
xchg
lods
mov
loopne
sbb
inc
add
sub
pop
aas
push
les
adc
adcl
mov
add
addl
xor
mov
add
xchg
lods
inc
mov
push
mov
add
loopne
fisubs
fmull
mov
lret
and
sbb
add
stos
or
add
inc
xor
mov
xor
mov
adc
loopne
call
xor
pop
cmp
xor
cmp
adc
repz
push
or
jns
movsl
jecxz
jmp
andl
adc
mov
and
adc
xchg
dec
push
cmc
aas
xor
ficoml
xor
test
dec
cwtl
or
and
xchg
push
rcrl
hlt
shll
fs
push
fs
je
mov
push
ret
mov
testb
push
sbb
push
cwtl
or
inc
decb
mov
xchg
add
push
sub
loopne
movsl
or
mov
and
inc
adc
fisttpl
es
fxch
push
and
xor
pusha
fstl
scas
fs
movsl
loopne,pn
sti
add
push
mov
inc
push
xor
xor
cmc
pop
pusha
sub
jmp
lock
mov
jbe
movsb
push
push
adc
dec
dec
add
sbb
add
xor
cltd
or
sbb
cmpsb
and
enter
or
cmp
orb
pop
jne
int
add
xlat
out
xor
mov
mov
mov
int3
aas
xchg
hlt
sub
jle
sbb
cmp
leave
sub
loopne
jb
add
loop
pop
sbb
xchg
or
push
lahf
popf
adc
adc
xor
and
jp
add
aaa
mov
add
mov
mov
rclb
nop
sahf
dec
add
lods
fnsave
dec
fsubs
dec
and
dec
mov
lock
arpl
fs
cmp
add
fwait
xor
push
in
jne
jmp
adc
stos
push
nop
pop
and
dec
sti
pop
shrb
aaa
sub
mov
inc
or
inc
fsub
inc
repnz
out
popf
push
jb
mov
pushf
mov
push
lock
in
xor
sub
stc
and
push
stos
jo
mov
pop
rolb
fs
mov
movsb
inc
inc
xchg
mov
jo
xchg
fs
mov
inc
repnz
add
divb
aas
sub
jnp
add
dec
push
mov
ret
negb
add
popa
xchg
gs
adc
cwtl
inc
rcll
outsb
add
inc
test
popa
or
repz
icebp
add
sbb
ds
add
add
dec
xchg
mov
rcr
sub
ja
or
movsl
fdivs
cmp
xlat
call
lcall
mov
or
aaa
pop
addr16
dec
dec
adc
lds
stos
movsb
jmp
fsubrl
addl
cmp
ljmp
data16
mov
movsb
inc
lods
cld
rolb
addb
lret
ret
mov
pop
in
add
sub
push
daa
adc
call
add
cmp
jmp
stos
enter
int3
cmpl
mov
ljmp
stc
jg
aaa
mov
lcall
jne
sub
incb
xor
sbbb
push
in
in
movsl
mov
and
xchg
inc
add
cmp
arpl
aam
faddl
aam
lds
inc
insb
sti
mov
add
push
xchg
and
cwtl
rclb
sub
aad
and
shrb
scas
push
sbb
cld
push
mov
es
sbb
and
push
inc
shlb
mov
call
pop
pop
or
movlhps
pop
sub
mov
repz
adc
shrl
inc
sub
jb
xchg
popf
jo
dec
adcb
push
mov
pop
mov
push
fildll
sub
gs
sbb
test
shlb
mul
scas
jbe
push
cmp
mov
je
mov
sub
fwait
or
imul
mov
data16
rcrb
and
repz
push
xor
mov
mov
call
push
add
adc
sbb
mov
push
fdivr
cwtl
dec
and
cmp
pop
bound
push
enter
in
aas
sub
mov
or
imul
mov
shl
cmp
or
dec
or
ret
push
mov
enter
xlat
sub
or
int3
fidivl
and
sub
dec
scas
test
jo
stos
mov
ds
out
mov
les
inc
addr16
lock
imul
mov
enter
cld
adc
jmp
sub
jo
enter
leave
loope
es
mov
std
push
xchg
pop
rclb
int
loopne
and
test
push
scas
fnstenv
xlat
or
jne
add
lds
push
pusha
pop
mov
mov
stos
adc
cmp
lahf
call
enter
xor
lahf
sbb
pop
adc
adc
je
adc
lret
enter
jbe
cli
inc
xchg
les
add
xor
sarl
jg
inc
testb
pusha
adc
lods
and
test
arpl
test
daa
mov
pop
dec
sub
cmp
push
inc
popf
xchg
mov
movsb
add
fs
adc
cmc
lret
in
mov
xchg
or
scas
xchg
hlt
push
clc
add
pop
pushf
sub
dec
jb
add
dec
je
push
mov
divl
sbb
and
push
ret
xorb
adc
dec
inc
mov
pop
js
movsb
rorb
jns
lods
ffreep
out
cmc
xchg
pop
repnz
or
lret
mov
dec
int3
or
daa
pop
ret
add
push
dec
jno
mov
nop
adc
push
mov
inc
in
mov
jp
xor
add
dec
jns
test
jge
jae
add
ja
mov
addr16
pop
jle
movsb
mov
jbe
sahf
fcomps
adc
sbb
hlt
mov
mov
cltd
add
mov
scas
rclb
add
and
or
mov
fldcw
popf
sbb
add
movsb
dec
mov
orb
out
inc
adc
jne
addb
sub
mov
das
push
dec
sub
xor
mov
sbb
xor
mov
cmp
popl
test
push
sub
imul
popf
insb
push
sub
add
push
scas
lret
push
gs
test
and
sub
mov
das
movsb
pushf
cmpl
xor
lock
roll
clc
addr16
call
pop
nop
add
mov
enter
packssdw
sbb
and
into
xor
dec
or
add
pop
add
push
test
xor
fstpl
mov
mov
jo
mov
mov
std
mov
dec
inc
ret
mov
mov
dec
inc
xchg
mov
add
xchg
jge
lock
or
mov
xor
popa
mov
and
addb
nop
hlt
adc
jno
add
lods
adc
in
lods
mov
adc
ret
lret
lds
push
mov
and
int
stos
cmc
mov
aam
or
pushl
pushf
cwtl
or
push
xchg
jo
add
mov
xlat
shrb
int3
ficomps
fists
and
lret
loop
dec
hlt
xor
xchg
sbb
mov
in
mov
pop
mov
inc
jmp
and
hlt
roll
xchg
dec
outsb
add
repnz
dec
xor
add
or
mov
mov
adc
jmp
push
js
pusha
pop
sbb
pop
repz
xorb
pusha
pop
add
inc
clc
es
movsl
sub
lcall
jnp
shlb
and
loop
add
push
in
and
daa
push
adcl
sub
pusha
fimull
jae
sbb
dec
jne
repnz
repz
add
movsl
rcll
idiv
inc
adc
in
call
call
xor
jnp
add
cmc
out
cltd
mov
jo
mov
xor
das
notl
stc
pop
pop
shlb
aaa
xchg
sub
pop
and
push
cmpsl
add
jo
cld
pusha
shrb
mov
lahf
jecxz
mov
pop
sbb
scas
in
movsl
sub
sbb
add
dec
xor
lret
test
popa
js
sub
jg
jecxz
or
push
adc
lods
pop
xor
adc
xor
roll
pushf
sub
add
imul
mov
ljmp
mov
push
clc
mov
mov
add
addl
aam
cmp
xchg
aas
xor
add
sbb
test
movsl
dec
pop
cmp
lods
les
dec
pop
sbb
lret
jno
fsubs
mov
mov
cmp
xchg
fs
xlat
cld
sbb
fstp
addr16
cwtl
lahf
mov
lods
pop
scas
es
mov
sbb
mov
pop
mov
negb
xor
inc
or
sub
jmp
add
pop
inc
test
push
pop
ret
out
push
jne
adc
in
scas
nop
and
andps
hlt
and
fmuls
or
lret
imul
daa
call
mov
inc
mov
inc
and
js
jns
add
sarb
inc
stos
add
icebp
pop
pushf
dec
cs
sub
cmp
push
movsl
xchg
mov
loope
fistps
xor
ljmp
jno
mov
ja
add
push
cmpl
fisttpll
xor
adc
mov
sbb
cmpsl
adc
push
stos
mov
mov
mov
fs
cld
add
lock
mulb
dec
pop
and
pusha
test
or
call
xchg
cli
sub
xchg
mov
add
pop
or
jae
mov
test
sbb
mov
push
xor
push
leave
pusha
call
inc
dec
cwtl
lret
test
jl
pop
mov
imul
jne
dec
stos
inc
les
clc
into
roll
fmull
jo
sti
mov
shll
cmpsl
xchg
or
rcll
adc
jge
int3
push
sbb
mov
mov
dec
mov
cltd
adc
sub
xchg
outsb
jb
jl
inc
mov
jbe
fsts
and
popf
and
lret
add
nop
mov
pop
dec
lret
mov
mov
mov
pusha
mov
ljmp
movsb
mov
pop
xor
xchg
mov
flds
sub
lret
pop
sub
jecxz
fcmovb
add
mov
add
es
cmp
inc
push
enter
add
add
mov
insb
outsl
or
cmp
mov
imul
sub
in
xchg
dec
jbe
push
push
xchg
mov
or
inc
lods
jbe
pusha
jne
inc
push
js,pn
pop
inc
in
ja
add
mov
ret
sub
mov
xchg
or
inc
push
pop
enter
pop
cmp
call
addr16
sub
inc
sub
mov
mov
das
add
cwtl
pushf
mov
stc
loopne
add
lods
icebp
int3
xor
dec
dec
and
hlt
inc
dec
add
pop
aas
mov
jmp
xchg
daa
stos
daa
sub
push
cmp
jmp
es
jne
add
or
adc
push
xchg
mov
cmpsb
dec
fs
push
add
mov
mov
pop
int3
xorb
xchg
mov
inc
or
lock
dec
and
jg
mov
fbld
fwait
add
ds
dec
xor
mov
push
ror
sub
bswap
or
enter
or
int3
inc
push
cmp
cmp
add
out
lahf
pop
push
cwtl
and
nop
push
pop
adc
movsb
and
adcb
push
out
inc
and
out
in
dec
sti
ja
dec
ljmp
cmpsb
cmp
jmp
inc
add
stos
rcl
out
and
hlt
cmpb
nop
js
rcll
pusha
mov
xchg
add
popa
fisttps
sub
or
cmp
js
popf
out
and
les
shlb
add
cmpsb
lods
jns
mov
pop
divl
cmp
mov
push
cmp
jb
xchg
movsb
jmp
pop
ss
jge
nop
push
xchg
bound
push
and
rolb
jle
lods
mov
or
jnp
movsb
lock
dec
jg
ror
xchg
das
mov
fldl
scas
jl
movups
ja
fucomi
adc
enter
inc
add
out
pop
or
daa
mov
adc
in
mov
addr16
add
xchg
daa
lods
fcmovne
mov
stos
adc
cmp
add
fstp
sbb
mov
mov
mov
rolb
mov
jge
add
into
sahf
cmpsl
cwtl
mov
add
pop
mov
mov
hlt
fsts
adc
or
stc
bound
mov
es
cmp
or
xchg
or
xor
fdivl
add
sub
cld
cmp
shlb
loopne
lods
inc
and
nop
or
jmp
leave
mov
test
cs
rcl
leave
add
sbb
out
pop
dec
movsb
sbb
in
jl
out
sub
test
in
insb
and
xchg
cmpsb
cmp
sub
stc
pop
add
ret
pop
orb
or
lahf
xchg
cmp
jg
movsb
andl
mov
add
and
sub
sub
mov
pusha
mov
jge
insb
lret
mov
out
mov
sbb
test
jo
je
loope
and
inc
in
inc
dec
aaa
mov
add
jg
fdivrs
jb
test
test
pop
push
dec
cmp
xor
xchg
sbb
aad
fwait
pop
shll
and
stc
gs
and
pop
jbe
dec
xor
sbb
xor
mov
fsubrs
pushf
push
add
movsl
cmp
jge
rcrb
pop
pop
push
cmp
das
fstps
add
jp
aad
clc
sbb
enter
je
push
inc
jmp
icebp
push
rolb
or
pop
add
push
pavgb
dec
sub
or
push
and
add
adc
adc
int3
jo
or
inc
std
xchg
arpl
push
mov
in
and
and
out
cmp
sbb
push
push
or
sbb
ja
xor
cwtl
or
adc
rcll
aad
inc
adc
add
inc
aam
bound
test
and
les
cmpsb
loope
fidivs
push
or
add
cmp
jnp
or
out
jns
lods
enter
scas
mov
and
or
add
mov
aas
pop
or
or
or
test
or
mov
jg
ret
and
arpl
cmp
adc
sub
popf
jle
insl
sub
ficoms
cwtl
lea
add
sbb
mov
jl
rorb
mov
cwtl
xchg
jno
arpl
orb
sti
sub
push
sbb
nop
and
cmpsb
outsl
adc
or
or
outsb
pushf
inc
mov
push
mov
and
pop
hlt
adc
and
adcb
sbb
jle
mov
add
add
add
xchg
inc
push
fsub
mov
mov
xor
xchg
mov
movsl
lods
xchg
dec
shrb
and
inc
and
dec
daa
sbb
adc
addb
mov
data16
push
and
adc
sbb
je
repnz
lcall
movsb
or
add
aad
sbb
jno
sub
adc
in
inc
repnz
movb
hlt
stc
or
add
ja
mov
rclb
bound
jno
mov
xlat
jae
cmp
xchg
or
jecxz
push
lret
andl
xchg
icebp
les
movsb
add
movsb
mov
or
decb
arpl
int
inc
es
bound
sar
fsubr
jmp
loopne
and
add
insl
hlt
dec
je
loopne
jg
pop
lahf
out
push
jecxz
push
sub
test
pop
fstl
lret
inc
add
pop
test
pop
mov
mov
inc
ror
jl
sub
sti
cld
nop
pop
je
pusha
push
loopne
orb
adc
sbb
inc
cmp
xchg
or
cwtl
inc
adc
test
js
js
xchg
stos
mov
adc
adc
or
adc
int3
add
insb
cld
dec
inc
je
adc
sub
push
stos
sbb
das
jbe
ljmp
and
call
mov
mov
loopne
inc
add
dec
je
dec
test
cmp
push
or
xchg
or
lahf
jmp
into
orb
out
mov
inc
pusha
dec
addb
fldcw
push
fisubrs
jp
pop
xchg
test
in
in
mov
pop
push
mov
enter
cs
and
shll
in
movsb
js
les
cmpl
xor
andb
mov
fidivrl
inc
stos
rcr
xor
pop
add
das
clc
xor
cmp
push
adc
mov
cli
das
jne
shl
cmpl
pusha
js
je
rcll
mov
loop
cwtl
push
cmp
lea
jmp
lahf
mov
adc
xor
push
enter
aam
pop
fisubrl
bts
xchg
adc
jbe
nop
add
rcrl
sbb
xor
mov
sbb
mov
mov
adc
add
push
mov
sub
aad
and
lock
shrb
cmp
push
pop
inc
sarl
movsb
inc
inc
test
cli
add
and
cmp
pop
insb
shlb
ss
fsub
dec
inc
imul
add
js
insl
lret
sbb
test
sub
mov
mov
lret
inc
mov
add
pop
outsl
sbbb
add
jbe
dec
push
addl
faddl
sarl
jo
jl
xor
sbb
dec
test
push
in
movsb
mov
add
fcomps
push
sbb
in
xchg
cmp
daa
clc
fistps
or
pop
push
add
call
stos
jecxz
push
popa
jns
xlat
leave
outsl
adc
les
sarl
lods
stc
out
sub
sbb
pinsrw
fcoml
stos
or
mov
pop
mov
jne
and
out
clc
mov
jae
mov
cld
add
mov
push
lods
sub
dec
jmp
les
cld
dec
add
sbb
popf
add
inc
and
mov
add
sub
mov
lret
jnp
cs
js,pt
xor
inc
into
ret
pop
mov
andl
sub
cld
and
mov
add
data16
add
loope
push
mov
inc
jo,pn
popa
loop
add
aaa
push
mov
add
xchg
sub
loopne
pop
sbb
inc
lret
dec
fisttpl
add
add
test
sbb
mov
mov
xor
xor
and
sub
das
rolb
cmp
inc
push
push
xchg
test
pop
fists
movsl
lret
bound
adc
ret
pop
and
adc
lods
adc
cmp
inc
sub
mov
sahf
je
loope
inc
cltd
fs
sbb
cmp
pusha
push
jo
stos
mov
add
and
mov
xor
les
cmp
add
cmpsl
data16
dec
mov
clc
mov
add
sbb
mov
cmpsb
xchg
xor
mov
stc
sub
nop
mov
hlt
xchg
push
sti
or
test
ja
pop
inc
nop
push
cwtl
je
js
and
cmp
clc
into
ret
test
mov
or
and
jbe
addb
arpl
mov
cwtl
mov
cmp
push
dec
mov
enterw
in
enter
or
pop
or
int
cmp
call
and
fnstsw
and
push
push
sbb
inc
sub
add
adc
adc
aad
push
lret
rclb
imul
ficoml
pop
gs
push
pusha
enter
dec
adc
push
jmp
loop
mov
mov
mov
or
arpl
add
cli
ret
and
or
lret
rcl
adc
or
les
in
adc
add
enter
dec
xor
test
rcrb
mov
mov
mov
sub
cmp
xor
inc
movsb
cli
mov
popa
inc
or
cmp
xor
lock
or
pop
pop
dec
ja
push
pop
arpl
in
xor
dec
dec
jge
call
inc
mov
fdivrs
adc
fldcw
dec
jno
dec
xor
push
das
or
mov
bound
push
jo
inc
ja
scas
push
add
js
push
gs
adc
adc
fildll
jae
sub
sbb
dec
cwtl
into
add
xlat
icebp
push
pop
jns
lods
push
xor
repnz
inc
cmpb
push
cltd
push
sub
imul
cmpsl
sti
lret
pop
or
xor
sbb
and
adc
sbb
js
das
or
nop
inc
lds
lods
mov
push
test
pop
cmp
fmuls
and
fs
pop
add
incb
loopne
imul
jnp
cwtl
sub
lret
aaa
sbb
gs
hlt
fsubl
pusha
add
cltd
push
adc
repz
or
fadds
or
add
inc
push
ljmp
push
add
cmpsb
lret
add
jmp
aad
jp
or
les
pop
enter
gs
mov
xor
rolb
test
sub
cltd
inc
push
push
jae
cmc
add
mov
sbb
shlb
mov
shrb
nop
fstp
mov
js
sbb
in
add
lods
mov
stos
mov
enter
in
xlat
adc
insb
leave
cwtl
or
mov
pop
test
xor
icebp
adc
lahf
push
loopne
pop
add
and
jl
add
or
push
rcrl
insb
iret
adc
ret
int3
cmc
or
in
inc
jge
xor
cmp
xor
ja
mov
test
pop
add
jae
scas
push
add
test
stos
or
mov
cwtl
les
test
push
loopne
and
xchg
nop
add
pop
ss
hlt
cwtl
repnz
dec
shll
rclb
test
xorl
fwait
dec
shll
sarl
add
gs
aaa
mov
mov
fucomp
loopne
jb
in
sub
loopne
mov
sbb
in
imul
inc
xor
inc
arpl
in
cmp
dec
jnp
add
js
jl
cmpsl
inc
push
arpl
mov
sub
inc
push
rorb
xor
inc
push
je
jo
cwtl
sub
or
call
loopne
add
and
dec
jp
xchg
jmp
lock
cmp
add
inc
mov
cli
xchg
add
jnp
rcrb
stos
jae
inc
and
or
nop
mov
mov
lock
outsl
fildl
pusha
out
sub
xor
sub
aad
in
test
sbb
add
and
fldl
adc
sub
ja
cmpsl
pop
and
jae
mov
andps
jmp
jnp
or
das
rorl
add
pusha
pop
and
adc
lods
xchg
repz
fmuls
int3
in
cmp
rol
fiaddl
rolb
sub
fmuls
out
cmpsl
and
adc
insl
cmp
dec
or
or
lret
push
or
and
xor
scas
leave
inc
or
lea
and
pusha
cmp
popa
stc
sub
adc
mov
cwtl
loopne
mov
inc
mov
lret
lock
or
sbb
cmc
inc
sar
sub
lret
and
pop
push
mov
ljmp
fadds
push
add
mov
enter
les
andl
sub
das
push
pushf
or
adc
sub
mov
mov
outsl
arpl
dec
lock
jo
xor
pop
loopne
sub
mov
push
ja
add
sbb
xor
mov
push
xor
dec
cmp
out
mov
xchg
pop
adc
ja
subb
add
pop
shlb
clc
adc
push
scas
out
add
test
gs
xor
lods
fs
es
pop
add
adc
pop
jl
cld
scas
jmp
cmp
jb
inc
jp
call
and
inc
scas
sub
pop
and
sbb
movsb
faddl
push
mov
test
subb
mov
xor
pusha
push
mov
sbb
mov
xchg
xchg
sbb
inc
subb
fiadds
push
and
sub
sti
rorb
push
sub
ret
insb
loope
cmp
adc
loopne
adc
pop
mov
pop
dec
jle
mov
sbbl
jb
or
lret
mov
cwtl
jo
out
adc
xor
cwtl
inc
pop
sti
add
inc
mov
repnz
pop
lret
sub
les
or
inc
sbb
or
pop
xchg
cmp
dec
js
xor
mov
stc
clc
pop
xchg
or
push
rcrl
aaa
adc
dec
in
pusha
rcrl
les
inc
pusha
aaa
stos
adc
xchg
orb
loopne
pop
sub
inc
movsb
orb
sub
bound
cmp
stos
push
or
add
movsl
inc
repz
adc
in
pop
call
push
or
outsl
movsb
mov
and
add
es
push
pop
mov
orl
pusha
jl
inc
or
cwtl
addr16
shl
adc
xchg
js
fdivrs
loopne
or
sbb
mov
cmp
push
add
pop
xor
xchg
enter
dec
stos
adc
pop
lods
jmp
mov
and
mov
ds
mov
sbbb
call
xor
add
scas
mov
dec
fmuls
pop
lods
cld
sub
and
xchg
add
push
sbb
data16
arpl
add
in
aam
cmp
mov
mov
loopne
mov
mov
lret
inc
dec
xchg
cmp
push
push
pushf
mov
loope
enter
jge
push
sbb
in
dec
call
sub
sbb
xchg
sub
jg
sbb
insl
pop
es
and
out
pop
stos
mov
lahf
cmp
ret
adc
or
sbb
lret
nop
push
cmp
jecxz
xchg
sbb
pop
adc
dec
mov
pop
cmc
inc
pushf
fwait
sahf
outsl
insb
mov
xlat
pop
insl
adc
loopne
mov
sub
add
les
nop/reserved
add
orb
mov
in
fstpl
sbb
push
ret
out
or
loopne
inc
sub
test
xor
loope
add
push
arpl
push
pusha
and
stos
mull
imul
sbbl
xorl
pop
pusha
test
xchg
adc
outsb
lret
xchg
pop
pop
call
cmp
shrl
lret
pusha
mov
ficompl
jo
push
xchg
cmp
mov
add
pop
and
push
xor
out
inc
loopne
popa
clc
push
mov
mov
inc
loopne
cli
scas
xchg
stos
xor
adc
and
fadds
push
loopne
xor
fmul
bound
jns
loopne
dec
and
icebp
adc
lods
sbb
sbb
sub
shlb
cmp
inc
xchg
sahf
je
imul
or
sbb
push
cwtl
jl
jno
fmull
xchg
mov
les
in
ds
dec
sub
es
imul
sub
daa
hlt
add
or
and
mov
inc
inc
fs
add
int3
stos
mov
cmp
inc
addb
lret
lret
sub
clts
jecxz
mov
cld
je
jl
nop
sbb
or
lods
out
mov
add
jmp
ret
cmpsl
adc
cmp
cmp
inc
aas
push
or
loope
push
add
orb
pop
les
fld1
repnz
shll
push
xchg
loope
lret
ficoms
add
inc
xor
and
or
add
sar
xor
jae
jbe
lods
add
out
and
lock
mov
movsb
scas
mov
lcall
notb
les
sbb
sub
cmpsl
fsubs
lea
jl
out
pushf
lret
push
pop
shll
adc
xor
sub
mov
sahf
lods
dec
add
loop
call
sub
or
lods
scas
adc
js
sbb
lock
xchg
in
ds
movsl
loopne
or
loope
rolb
adc
pop
fsub
push
repnz
mov
sub
sub
jns
push
pop
adc
rorl
and
mov
sub
inc
add
outsl
in
in
ret
xorb
bound
push
rorl
sub
mov
les
mulb
data16
mov
lret
jg
mov
and
int3
fcmovne
scas
and
jae
pop
ljmp
test
or
add
sbb
sbb
lahf
stos
xlat
push
and
xchg
pop
sub
xor
xchg
and
test
rolb
push
adc
rol
pop
or
inc
fiaddl
cmp
enter
in
fbstp
xor
add
aas
loopne
icebp
addb
jo
scas
test
lea
pop
lahf
repnz
push
pop
jo
mov
adc
and
aas
mov
push
cmpsl
fisttps
lret
arpl
je
or
fdivs
or
shlb
mov
ja
add
inc
fcmovu
xchg
aas
mov
les
sbb
sbb
xor
loopne
adc
shl
enter
cwtl
xchg
ljmp
mov
add
les
cmp
jo
dec
pop
mov
les
pusha
lea
xchg
nop
sub
or
loopne
push
and
lock
cmp
pushf
lcall
outsl
iret
sub
pop
mov
hlt
adc
add
dec
int3
push
xchg
pop
pop
vpmadcswd
pop
test
in
cmovns
add
mov
insb
add
lret
or
dec
cmp
std
aam
xor
movsl
mov
add
push
call
mov
jns
add
mov
clc
scas
pop
add
sub
das
mov
xor
lock
add
fldl
movl
test
repz
jg
repz
xchg
ss
pop
nop
cmp
fsubs
push
orb
inc
push
or
adc
mov
add
loopne
cmp
mov
xchg
enter
adc
sub
fsubrs
add
hlt
pop
or
pop
push
xchg
sub
inc
jl
jmp
ret
or
jns
sub
xchg
lret
ds
or
arpl
and
mov
test
mov
add
jo
scas
push
jmp
mov
and
lods
pushf
hlt
adc
xlat
add
out
push
mov
cmp
mov
sub
jo
pop
shlb
pop
xor
cli
cmp
roll
arpl
or
insb
pop
andl
imul
dec
test
sbb
inc
aam
xlat
addr16
mov
lret
insl
xchg
cmp
addb
inc
nop
dec
jno
push
and
pop
sbb
cmp
sbb
pop
sbb
add
loopne
dec
out
xchg
cmp
push
sahf
mov
shll
rorb
xchg
and
or
adc
fstl
mov
lret
es
add
cmp
sub
push
inc
add
loope
fs
xchg
stos
xchg
movsb
adc
jae
fidivrl
jle
cs
jns
loopne
popa
and
aaa
mov
pop
addr16
loopne
pushf
add
fstp
outsl
arpl
test
and
lret
push
xchg
cmp
loopne
movsl
andl
je
and
pushf
push
add
add
and
int
movb
sbb
lret
adc
push
jbe
ljmp
cld
add
rclb
cltd
test
movsb
aas
sbb
push
or
cwtl
in
push
mov
das
lret
adc
lods
sub
or
mov
mov
adc
mov
mov
loope
test
jnp
pmaxsw
jge
sbb
mov
dec
push
jl
add
hlt
incb
xchg
push
nop
push
filds
jnp
pop
mov
sbb
in
sub
test
cmp
into
add
ret
jp
mov
test
std
pop
pop
add
pop
add
movsl
dec
dec
mov
jmp
xlat
cwtl
cld
and
lods
les
or
das
sbb
jns
pusha
movsl
sub
nop
enter
inc
adc
shr
and
dec
icebp
hlt
int3
std
inc
jnp
rorb
gs
mov
push
insb
cmpsb
jl
mov
fldl
inc
inc
cmp
js
cmpsl
and
cmp
sbb
cmpsl
push
cmpsb
leave
inc
cmp
mov
pop
out
lahf
adc
je
push
and
insb
cwtl
add
lret
ficompl
dec
mov
mov
push
int3
movsl
iret
add
jns
arpl
divl
imul
push
push
sub
add
int3
dec
push
inc
test
test
subb
arpl
mov
add
xlat
sarb
dec
adc
out
stos
inc
push
fistpll
and
aam
push
jbe
inc
loopne
les
xchg
fs
jne
aam
add
mov
mov
adc
and
sub
mov
mov
or
pop
xor
or
stc
test
dec
or
mov
in
aam
iret
sub
or
ficompl
and
rcrl
push
or
cmp
push
ljmp
bound
fsubs
or
xor
add
inc
add
shll
mov
and
aad
aam
dec
hlt
inc
nop
mov
adc
pushf
hlt
lahf
inc
in
pushf
aam
fs
pop
pop
sub
and
jnp
jp
jecxz
int
mov
je
add
mov
sub
or
jne
lret
push
test
cwtl
fadd
es
push
loopne
ljmp
lods
adc
in
lret
lret
rorb
or
push
cmp
fsts
jg
cmp
fwait
adc
sub
test
aas
sbb
mov
and
mov
push
push
jbe
push
ljmp
add
pop
int3
mul
rolb
and
add
and
mov
jecxz
mov
adc
and
push
adc
cld
ret
addr16
addb
rol
jp
dec
gs
add
and
lds
arpl
nop
int
pushf
jl
add
jecxz
mov
lds
jmp
nop
rclb
das
pop
inc
and
xor
fidivrl
sbb
xor
pop
dec
popf
mov
lock
stos
pusha
mov
mov
xor
add
add
push
scas
mov
sbbb
or
es
mov
mov
mull
addb
lahf
test
lds
cltd
in
icebp
push
fiaddl
data16
in
or
mov
sub
mov
add
xor
and
push
or
mov
in
shlb
shlb
or
dec
lock
push
push
in
mov
sbb
and
fbld
loopne
cmp
add
jnp,pt
xchg
cmp
in
mov
call
mov
adc
cwtl
mov
popf
jo
xor
sbb
lahf
push
adc
sbb
test
jo
inc
add
mov
mov
cmp
add
test
mov
dec
add
xchg
movl
add
es
popa
mov
cmp
add
and
lds
inc
jl
in
mov
or
mov
cli
mov
pop
mov
loope
jmp
or
mov
stos
sar
add
and
mov
sbb
fnstsw
add
mov
xor
pop
test
rorl
jb
repnz
dec
cmp
enter
and
cltd
popa
mov
adc
loope
and
lds
and
and
std
pop
ds
arpl
loope
or
call
loop
orb
fisubl
inc
lock
mov
xchg
loop
add
aas
push
fldt
xor
pop
movsl
sbb
add
jne
cmp
sbb
ja
shl
or
arpl
orb
adc
cwtl
lret
add
and
jge
sti
pop
jl
add
dec
sub
xchg
incb
or
or
and
add
orl
or
decl
xchg
pop
cli
daa
out
rorl
add
ficomps
push
es
js
arpl
clc
inc
movsb
or
mov
mov
lock
mov
mov
pop
cld
out
ret
pusha
cmp
mov
mov
cwtl
ds
and
aam
shrl
test
in
jmp
insb
mov
inc
dec
and
mov
sub
inc
dec
pusha
push
cld
pusha
or
aad
les
cmc
nop
mov
mov
sub
xor
mov
adc
add
and
dec
mov
cmp
js
dec
bnd
inc
mov
arpl
test
ror
enter
cli
pop
jo
xlat
cmp
fldt
sbb
insl
mov
adc
lret
cmpsb
loopne
fst
addr16
movsb
cs
shlb
int
mov
mov
pop
mov
std
ss
je
mov
jle
scas
aad
andb
pop
jo
mov
cmp
jae
sbb
or
stc
clc
sub
les
addr16
dec
push
call
dec
add
xchg
mull
frstor
stos
mov
ds
outsb
adc
dec
cs
arpl
lahf
and
adc
cmp
ret
lods
mov
fildll
pop
aad
jp
aam
mov
mov
push
mov
sbb
sub
inc
mul
and
sub
lods
ds
sbbb
mov
xchg
mov
adcb
cltd
fildl
mov
adc
popf
xchg
pop
mov
inc
stos
fs
nop
insb
aaa
lds
sti
or
sbb
enter
mov
mov
insb
sbb
mov
fldl
and
inc
pop
fucomi
aad
jg
pop
sti
xlat
or
push
push
jl
int3
and
aam
adc
cmp
in
mov
sti
ljmp
add
and
dec
fisttpll
test
and
dec
mov
mov
inc
sbb
xor
push
mov
movsl
xlat
les
cmp
xor
test
sub
repz
add
std
cmp
cltd
inc
inc
data16
push
mov
lret
je
andb
push
mov
inc
fwait
jecxz
mov
cmpsl
mov
fisttps
xchg
xor
test
shlb
les
sbb
sahf
pop
push
add
mov
movl
and
jb
mov
test
pop
int
mov
in
jnp
cmp
pop
xlat
push
push
xchg
mov
shll
popf
and
jl
js
stc
incl
push
sub
divl
adc
cli
fistps
cmp
xchg
or
or
mov
lret
in
imul
stos
adc
test
jno
mov
out
mov
orb
jecxz
insb
lret
addr16
pop
hlt
adc
inc
mov
andl
add
scas
loope
icebp
je
fcoms
in
mov
sti
xchg
dec
fs
and
sar
add
loopne
pushf
mov
add
movsb
fmul
mov
cmp
out
ret
ret
cmpsw
rolb
sub
cmp
jp
mov
loope
call
adc
cmp
mov
or
clc
pop
in
jl
xor
jle
adc
jo
aas
shlb
add
lret
into
xor
mov
jnp
scas
dec
sti
mov
inc
int3
mov
sub
pop
ret
mov
dec
fs
mov
push
mov
xchg
mov
and
or
aaa
jmp
adc
lahf
jo
int3
mov
mov
or
ret
or
xor
arpl
inc
dec
jecxz
shlb
mov
jp
jnp
lock
sub
sahf
push
repnz
mov
gs
push
xorb
cmp
xchg
frstor
in
stos
lret
xchg
inc
test
dec
fwait
rorl
ss
rcr
int3
nop
mov
inc
adc
cmpl
cs
cmp
jo
mov
adc
pop
mov
adc
xchg
adc
ss
rorb
push
and
dec
inc
and
or
xor
imul
inc
out
cmpsb
jns
cmc
jp
in
and
aaa
fstl
mov
adc
cmp
cli
in
and
pop
cmp
adc
addr16
clc
sbb
jno
add
xchg
addl
fsts
add
mov
pop
add
in
shlb
add
fsubl
sub
ror
unpckhps
xor
inc
or
xchg
mov
sbb
mov
mov
ud0
arpl
or
or
jo
inc
inc
lcall
idivl
push
inc
movups
dec
insb
inc
adc
or
xor
std
push
xchg
aas
test
push
fidivl
xchg
sub
pop
movsb
leave
cmpsl
inc
dec
faddl
test
cmp
add
sarb
adc
or
add
and
pop
push
mov
mov
xor
inc
fbstp
stos
movsb
xor
call
push
dec
adc
sbb
and
insb
rclb
inc
inc
adc
je
xchg
push
add
or
pop
fcomp
add
loopne
dec
andl
leave
inc
shl
push
rorl
rcl
sub
orl
out
xor
dec
iret
enter
adc
xlat
sub
loope
filds
xor
dec
jo
adc
mov
nop
lock
les
icebp
loopne
pop
add
orb
add
insl
rorl
repnz
or
mov
aaa
mov
popa
xor
sbb
les
cmpsb
adc
or
test
mov
stos
sub
xchg
cwtl
fs
call
and
sub
in
stos
stc
mov
sub
scas
lds
clc
inc
shr
mov
mov
ret
cld
jnp
and
or
nop
mov
sub
fsubrl
mov
mov
daa
and
lcall
or
out
adcb
sbb
clc
pushl
fucomi
pushf
faddl
ds
pop
jge
lahf
add
push
clc
add
mov
das
imul
daa
sarl
or
rclb
inc
js
lds
and
lock
xor
mov
and
mov
mov
pop
clc
pop
insb
add
and
fs
aad
adc
push
jb
inc
nop
in
stos
cmc
icebp
bound
fs
jo
call
mov
inc
fsubs
jg
adc
test
xorl
add
mov
mov
enter
dec
ret
adc
xchg
lock
jge
add
loope
pop
add
sbb
enter
sub
pushf
pop
dec
je
test
aaa
imul
cmp
and
jne
pusha
lea
nop
aaa
les
mov
js
adc
sbbb
pop
and
dec
sbbl
outsb
mov
loop
js
popf
test
icebp
mov
cmp
das
arpl
mov
in
loopne
lret
and
xor
add
sbb
or
daa
fiaddl
mov
push
adc
pop
addl
fstps
cld
xor
ljmp
fwait
call
pop
xor
mov
fstl
jecxz
dec
ficomps
fsubrp
iret
xor
enter
cmpsl
cmp
cltd
sub
iret
mov
mov
ja
cmp
jns
add
pop
subb
inc
not
sub
pushf
add
mov
in
les
addl
sub
out
out
and
sbbl
pop
add
add
push
and
insl
push
jp
sub
sub
or
jmp
shlb
mov
clc
pushl
pop
inc
inc
push
nop
mov
xor
testb
orl
insl
shrl
jmp
mov
sub
sub
and
addl
dec
dec
mov
clc
sbb
sbb
add
push
cmpw
xchg
adc
popf
js
icebp
adc
in
addl
add
mov
jmp
xor
call
xchg
push
sub
adc
pop
push
js
rcrb
or
push
add
outsb
sub
shr
out
jl
add
ret
and
fbstp
test
add
sub
adc
and
cmp
outsl
fwait
or
add
sbb
jae
push
es
push
push
ss
add
xchg
jo
mov
sub
push
xchg
in
mov
pop
push
jmp
mov
jmp
pop
aas
add
cmp
xor
mov
and
cmp
lock
add
pusha
add
mov
rcll
popf
push
xor
or
adcl
add
insl
inc
push
bound
and
or
push
lods
test
push
xor
add
jmp
lods
cmpl
test
fisttpl
movsl
adcb
and
adc
insl
mov
add
xchg
cli
mull
sbb
int3
push
push
add
stc
add
jne
movsl
int3
pop
popa
cmp
arpl
loopne
aad
lds
ljmp
cmp
shl
or
mov
xor
or
pop
shl
push
mov
or
pop
rcl
ret
clc
ret
push
jae
dec
pop
and
cmp
mov
dec
sarb
and
mov
ja
jbe
add
mov
loopne
shll
and
cmpb
lds
rorb
jge
mov
xor
or
out
pushf
or
sbb
add
jmp
lahf
or
push
std
jno
lahf
or
aam
test
dec
inc
push
fnstsw
das
or
pop
andb
jmp
in
rcll
movsb
adc
push
mov
add
sub
data16
adc
rorl
adc
mov
std
sbbb
imul
adc
xchg
push
fsts
add
dec
mov
add
outsl
arpl
ret
pop
cltd
sbb
sbb
popa
jno
dec
mov
jmp
or
or
sub
testl
inc
test
jae
or
sub
repnz
pusha
shl
popf
push
add
ljmp
inc
sub
push
pop
add
push
push
push
jns
aaa
pushf
mov
ds
ljmp
and
mov
lea
or
sub
mov
jecxz
xchg
into
sbb
dec
or
mov
dec
dec
inc
or
dec
xor
xor
or
fs
ss
or
fdivs
inc
cmpb
jge
dec
pop
test
lock
bound
xor
sbb
cmp
jnp
mov
cld
nop
cmp
jae
scas
add
lret
pop
and
dec
inc
push
mov
stos
pop
xor
rcrl
dec
pop
and
shr
dec
sub
sub
mov
lock
andl
add
or
pop
mov
lea
sub
mov
push
mov
inc
roll
push
xchg
pop
add
xor
sbb
or
shl
leave
mov
and
pop
jo
movsl
mov
shlb
enter
cwtl
push
jmp
xor
mov
push
movsb
or
int3
aad
popl
or
adc
add
pop
sub
pop
add
pusha
xor
iret
mov
lds
jp
sbb
push
add
adc
inc
and
add
ss
neg
or
rolb
lds
mov
sub
push
mov
or
outsl
imul
push
rcl
add
sbb
idivb
inc
mov
int
cmp
inc
fildll
mov
xchg
cli
cmp
pusha
je
dec
add
roll
pop
in
add
ja
sbb
stos
xlat
inc
neg
pop
orl
cmp
lea
add
adcb
or
pop
popf
rcrb
xor
sub
aam
xor
push
xor
mov
fidivrs
add
add
and
or
and
xchg
std
push
adc
lds
rcl
or
sub
inc
int
xor
push
add
push
sub
or
js
popl
push
pop
clc
mov
adcb
adc
out
jns
arpl
push
add
jmp
loopne
fwait
pusha
push
mov
cwtl
out
aad
cmp
pop
or
xchg
add
pop
mov
mov
mov
cwtl
or
push
test
adc
mov
push
or
orl
cli
push
imul
pusha
inc
mov
cmp
lods
mov
dec
cmc
popf
push
sub
sub
push
add
cli
add
popf
cmp
add
lea
es
je
cmp
jns
jge
adc
push
outsl
int
xor
xor
and
push
lods
pop
pusha
dec
gs
push
ds
or
call
imul
jecxz
neg
jmp
pop
xor
ret
cmp
mov
jl
jmp
mov
jne
addb
pushf
cmp
fmul
dec
pop
stos
out
mov
cmp
push
dec
bound
pop
xchg
std
adc
ret
stc
rol
adc
les
in
icebp
orps
pop
imul
or
mov
mov
out
or
dec
add
inc
inc
pop
pushw
xor
rclb
jae
jnp
dec
xor
dec
dec
add
rolb
sbb
divb
dec
lcall
test
ror
data16
add
arpl
outsb
sub
push
adc
jnp
loop
aad
xor
or
ljmp
push
or
and
enter
cmpsb
lea
hlt
mov
adcl
aad
stc
pop
in
leave
add
pop
rcl
adc
es
and
cld
fldcw
fcoml
xor
insb
mov
es
inc
lcall
xor
push
add
and
or
and
int
push
rcrl
cmp
cwtl
pop
push
pop
shll
adc
aas
jnp
icebp
xor
sbb
cld
xor
out
push
adc
add
mov
fcmovnu
adc
sub
popa
inc
or
js
fcoml
mov
pop
call
add
outsb
mov
add
aad
shl
neg
adc
inc
add
push
jmp
ret
shll
xlat
mov
push
and
cld
out
sub
outsl
or
jl
jo
daa
dec
jb
or
shll
xor
push
mov
icebp
and
add
push
jge
int
out
stos
sub
jbe
xchg
jle
sub
insb
pop
sub
mov
xchg
push
jne
lock
sub
sbb
test
mov
and
dec
add
push
shll
test
add
or
insb
sarl
insb
sbb
scas
pop
pop
nop
inc
inc
daa
data16
mov
mov
out
pop
xor
fdivl
and
push
push
lcall
inc
push
sub
inc
popa
sbb
shrl
addr16
or
jns
daa
jmp
sub
outsb
test
sub
xchg
daa
mov
hlt
and
sub
mov
add
enter
inc
mov
jmp
push
add
or
inc
mov
in
push
mov
push
push
call
in
xchg
rclb
test
xchg
in
cmp
sub
mov
addb
push
nopl
test
cwtl
andb
dec
push
push
loop
add
pop
push
xor
faddp
xor
push
xchg
push
orb
xor
outsl
popa
jecxz
push
in
test
pop
orl
fbld
popl
pop
jmp
js
fwait
or
or
mov
cmpsl
repz
mov
out
mov
pushl
pop
jo
pop
sbb
pop
outsb
nop
sub
out
mov
jmp
stos
subb
sbb
sub
aas
xor
jmp
dec
push
cmp
dec
in
bound
jmp
or
sub
mov
push
imul
insb
lock
and
aas
lcall
loopne
push
add
inc
cmpsb
orb
xor
call
jmp
mov
sub
cwtl
dec
add
jnp
push
sub
jmp
jbe
xchg
cmp
pop
mov
sub
fcomi
jne
push
cmp
or
xchg
xor
add
sbb
mov
pop
pop
popa
sbb
mov
not
add
and
pusha
mov
and
sub
pop
add
dec
negl
pusha
mov
cmp
cmp
lods
mul
and
sub
or
fs
push
pop
push
xchg
inc
pop
cmp
push
push
sbb
push
add
pop
sub
dec
dec
xor
out
jg
leave
fs
gs
sbbb
ret
and
lods
outsl
jmp
test
pop
lahf
mov
and
cmc
sbb
les
enter
jle
divl
add
pop
push
push
xor
add
rcr
push
cmp
sbbl
xchg
ljmp
adc
int
xor
push
jmp
inc
and
add
and
outsl
pop
nop
or
or
inc
or
cld
fcoml
cmp
jge
cmp
adc
push
dec
nop
ret
pop
popa
mov
jmp
mov
cmp
push
cmp
movsl
or
sub
mov
mov
dec
ret
adc
xorb
mov
inc
pop
push
pop
mov
rcll
jns
xchg
xor
into
pop
and
jl
xlat
pop
in
or
pop
loope
lock
scas
int3
inc
test
mov
lea
mov
mov
add
inc
xorb
lods
mov
cmp
imul
test
sbbl
cmp
push
jge
stc
mov
or
sbb
jp
inc
rorl
xchg
test
jns
xchg
inc
and
mov
fisubl
das
push
fiaddl
repnz
fstpt
adc
sbb
mov
daa
cmp
pop
or
aad
sub
js
add
sub
sub
rcrb
jnp
adc
pop
xor
pop
data16
dec
loopne
adc
or
mov
call
pushf
sub
adc
fsubrs
and
inc
push
and
pop
movsb
or
enter
cli
sub
shll
stos
cwtl
arpl
mov
lock
adc
add
not
je
test
adc
rcll
mov
pop
insb
or
mov
xorl
jmp
call
add
mov
lret
sti
pop
int3
rcll
mov
sub
mov
outsl
into
xchg
push
mov
jae
pop
push
aam
or
pop
add
pop
pop
push
push
dec
repz
scas
xchg
rclb
xchg
pop
inc
mov
or
jmp
movsl
add
arpl
add
lret
ljmp
fmuls
das
ret
imul
pushf
fsubp
rcll
cltd
loop
orl
push
inc
mov
mov
int
jno
mov
mov
inc
lahf
mov
fcompl
adc
sbb
fnstcw
adc
xchg
movsb
add
mov
inc
loopne
pop
cmpl
dec
or
lock
sub
and
mov
sbb
fildll
push
jle
ret
inc
ret
jge
xchg
repz
aas
nop
jge
xchg
jb
ss
lret
add
pop
xchg
sahf
lret
mov
sub
aaa
mov
call
adcb
add
loope
pop
push
push
xchg
rorl
arpl
mov
mov
sub
sub
pop
out
mov
sub
and
arpl
nop
push
cwtl
pop
pop
add
mov
xor
dec
insb
sub
mov
mov
and
pop
ret
shlb
loop
in
jno
push
push
push
pop
add
in
add
cmc
fwait
xchg
lcall
mov
jns
lods
popa
add
test
mov
jmp
pop
pop
rcrb
cmp
add
pop
not
xchg
lock
imul
jecxz
pop
cmpl
sub
mov
sub
push
mov
cmp
imul
mov
mov
loopne
pop
movsl
lods
xchg
mov
cmp
movsl
andb
sbbb
sub
sarl
and
or
jl
mov
dec
xor
adc
add
dec
cltd
and
sub
and
push
xor
pop
aaa
enter
je
jo
pop
push
push
push
jmp
shl
adc
pop
lock
dec
sub
pop
movb
push
adc
push
push
dec
add
mov
shlb
sbb
sub
lds
sub
push
std
inc
fs
mov
lahf
cltd
inc
out
xchg
mov
out
pop
lods
sub
mov
add
shl
push
pop
cmc
dec
jae
mov
lret
test
das
pop
inc
fwait
or
add
mov
pop
cmp
push
cmpsl
dec
and
mov
xor
push
pop
cmp
lahf
pop
mov
dec
cmpsl
and
pusha
push
mov
sub
jbe
je
daa
in
dec
xor
lret
in
pop
cmc
and
pop
push
popl
mov
in
test
xchg
data16
fwait
es
dec
adcb
add
mov
jb
and
outsl
push
inc
addl
call
test
inc
es
insl
push
mov
mov
cmc
repz
sar
out
sbb
fistpl
cwtl
push
mov
add
lds
pop
xor
daa
jmp
roll
clc
in
fwait
xchg
jnp
and
dec
xor
add
mov
pop
mov
cmc
es
xor
js
sub
sbb
out
fstps
das
sbb
inc
dec
pop
jge
inc
popa
int
hlt
add
cwtl
dec
pop
out
add
push
mov
addl
dec
movsl
push
xor
push
pop
pop
jo
push
jmp
or
divb
addr16
or
jbe
sbb
cwtl
and
push
lcall
mov
aad
imul
jns
push
out
inc
scas
out
scas
subb
fbstp
in
jbe
or
scas
sub
xor
jle
das
sbbl
inc
dec
cli
inc
jns
daa
lea
mov
jb
adc
sub
add
pop
daa
xor
sub
rol
add
adc
and
movsb
pop
pop
lds
ds
add
ficoms
inc
add
mov
cld
jge
test
mov
cs
sbb
shrl
sahf
sbb
js
shlb
cmp
push
or
fsubrs
sbb
dec
sub
push
or
push
lods
adc
sub
leave
icebp
out
cmp
lcall
add
mov
sub
cmp
ret
xor
push
in
repz
dec
fldenv
adc
dec
inc
xor
dec
push
mov
movsl
push
jnp
xchg
aam
sbb
lds
mov
aam
insb
inc
jge
jns
cwtl
sar
rcll
jmp
mov
xchg
add
pop
lea
repz
or
arpl
fsubr
pop
imul
daa
push
sbbl
dec
cmp
in
jb
lret
mov
and
adc
ret
or
add
rclb
lret
das
mov
pop
mov
xchg
pusha
les
int3
lods
fs
mov
ret
add
loop
fldenv
jb
push
and
test
cmp
push
inc
iret
inc
mov
push
stos
das
or
in
cmpsb
dec
sbb
or
ljmp
fadds
pop
sub
mov
pop
mov
push
push
ret
mov
divl
adc
lock
pop
push
sahf
sbb
iret
pop
xor
xor
outsl
dec
add
jge
or
jmp
addr16
test
add
add
cwtl
popa
push
outsl
pop
and
hlt
and
xchg
enter
fs
stos
mov
dec
icebp
ret
test
push
ja
ljmp
imul
into
sub
push
mov
xor
pop
pop
inc
jg
or
es
negl
mov
inc
jecxz
sbb
pop
jb
stc
push
sbb
pop
dec
or
inc
and
adc
and
fcom
loopne
pop
add
fadd
adc
cmp
roll
fs
repz
dec
sbb
dec
jg
pop
bound
aam
or
xchg
jne
loope
or
push
mov
lret
cmp
push
push
nop
sub
sbb
inc
inc
dec
adc
cs
gs
mov
add
push
sub
or
pusha
and
add
push
sbb
inc
push
sub
cwtl
lods
and
shll
add
pop
sarb
enter
add
jmp
add
jo
add
sub
shlb
fimull
daa
lahf
mov
inc
xchg
lahf
push
sub
push
mov
push
dec
mov
xor
andl
cs
test
push
in
xor
push
pusha
jmp
in
nop
fs
in
sti
inc
out
fldenv
arpl
sbb
adc
not
xchg
fimuls
aas
or
rolb
xacquire
pop
loopne
dec
sub
jecxz
mov
push
sbb
mov
in
add
push
sbb
xor
xchg
add
gs
mov
add
pop
rol
inc
xchg
push
movswl
bound
or
push
imul
cmpsb
push
in
in
jne
in
cmpsb
jecxz
mov
push
popf
jmp
mov
sbb
mov
pop
jmp
sub
cmp
pop
sub
cmp
xlat
pop
pop
stc
imul
dec
add
xchg
ljmp
add
jg
add
lret
ret
or
push
pop
push
popf
inc
fldln2
jns
fcoms
shlb
or
mov
out
xor
cmc
push
ret
jns
xchg
mov
xor
push
loop
in
xor
add
shl
inc
icebp
mov
cmpsl
dec
sub
imul
nop
std
outsb
sub
add
push
cmp
xchg
adc
out
sti
and
mov
pop
push
push
pop
imul
xor
not
add
daa
sub
in
dec
repnz
leave
adc
cmp
inc
adc
pop
dec
leave
inc
popa
pusha
not
and
add
jno
notb
sbb
bnd
pop
push
aam
fdivs
iret
into
arpl
push
or
mov
loopne
pop
mov
fidivs
les
in
inc
cs
icebp
xor
or
stc
add
or
pusha
inc
inc
sub
rcll
push
and
mov
xorl
sbb
dec
jmp
fmull
push
daa
fs
jmp
fldl
pop
push
sub
mov
not
push
dec
fwait
loope
mov
pop
pop
mov
daa
clc
cvttps2pi
pop
mov
xchg
xor
adc
or
data16
pop
into
push
es
push
push
les
test
pop
inc
mov
std
push
inc
mov
or
pop
es
ret
and
or
mov
mov
xchg
movsl
and
movsl
dec
rol
sub
or
jmp
add
and
addr16
ret
sub
dec
cli
stc
cmp
dec
subb
xchg
xchg
jmp
add
xchg
sub
push
push
popf
test
testl
cmp
das
pop
xchg
stc
out
rolb
jmp
pop
jno
xor
mov
dec
xor
sub
push
xor
outsl
pop
or
and
push
pop
insl
jp
push
leave
sti
jb
scas
jp
mov
sarl
scas
push
das
or
popa
sarb
xchg
test
mov
imul
ret
xchg
add
mov
sub
mov
add
pop
jnp
cmp
dec
adc
add
movsb
xor
jne
pop
mov
add
orl
push
mov
sub
fiaddl
in
test
outsl
xor
sbbb
repnz
sbb
stos
pusha
add
dec
lcall
xor
xchg
push
cld
daa
sahf
push
mov
cmp
pop
cwtl
jecxz
add
dec
xchg
shrl
inc
mov
add
add
sbbb
icebp
cmpsl
push
xor
push
bound
int3
or
out
daa
mov
mov
xchg
xchg
xchg
imul
rcll
lock
aaa
shl
or
fiadds
imull
jmp
xor
dec
hlt
mov
mov
pop
jmp
dec
in
rcr
cmc
daa
jp
popa
rcl
testb
add
xchg
sbb
add
out
cmp
push
gs
in
sub
jecxz
leave
pop
mov
sub
movsb
inc
stos
jg
adc
lret
loop
clc
adc
xchg
mov
cvttps2pi
lret
aaa
push
in
outsb
mov
loop
dec
fsubrs
or
pop
push
jae
test
sub
loope
mov
sub
sub
pushf
shl
jge
dec
pop
movsl
roll
pop
push
cmp
fdivr
jp
and
lea
jg
cltd
dec
cs
out
push
and
push
jmp
push
or
dec
pop
cmp
rcrl
fisttpl
test
movsl
pop
loop
jmp
and
orb
add
push
push
mov
or
loopne
add
inc
jne
mov
xor
adc
not
rorl
push
mov
enter
lahf
push
jmp
pushw
mov
repnz
cltd
in
xor
jae
std
inc
mov
jp
je
jmp
adc
jle
es
xchg
push
mov
idivl
adc
repz
or
jns
pop
mov
adc
roll
push
clc
loop
mov
push
or
adc
cwtl
rolb
outsb
jg
or
or
lods
lds
xor
push
pusha
inc
and
or
add
es
and
adc
je
adc
iret
dec
xor
popa
bound
dec
jp
adc
mov
loope
and
pop
add
sub
dec
inc
cmpl
fmull
sbbb
pop
or
pusha
dec
push
mov
lods
inc
cli
testb
inc
sub
add
gs
int3
and
push
mov
testb
add
sub
inc
xchg
xor
adc
dec
mov
add
mov
add
jmp
inc
xor
popa
and
call
sbbl
rcr
rcrb
sbb
str
cwtl
fdivp
xor
jmp
cmc
pop
lahf
pusha
sbb
or
xor
push
mov
push
jmp
mov
jmp
imul
add
xor
insb
popa
and
int3
jo
adc
addb
jo
push
mov
or
jmp
enter
testb
add
or
sub
adc
hlt
xchg
out
cltd
dec
adc
push
cmpsb
inc
mov
xchg
orb
sub
in
pop
adc
cwtl
mov
aaa
pop
sbb
mov
lahf
jp
nop
sub
mov
adc
or
xor
dec
pusha
rcrb
add
pop
add
sbbl
mov
into
add
pop
add
loopne
sub
cmpsl
sub
and
push
mov
mov
mov
lahf
sbb
mov
push
inc
xchg
dec
out
and
mov
add
cltd
je
add
pop
fcoms
push
mov
neg
jmp
add
je
xchg
in
xorl
frstor
jmp
test
push
inc
ds
pop
xlat
xlat
xchg
xor
xchg
or
sbb
pop
add
out
rclb
sub
popa
dec
andb
andb
pusha
jp
push
ret
test
add
push
push
and
pop
das
pop
adc
push
test
sahf
push
bound
test
add
jmp
out
sub
or
inc
ffree
jle
adc
add
sub
rcrw
test
les
mov
jmp
ljmp
push
and
rcll
sahf
xlat
sbb
rorb
sub
xchg
sub
stc
sahf
push
rcrb
mov
cltd
je
movhps
or
add
push
dec
stos
push
push
jge
sub
ret
xor
lret
jmp
sti
loopne
adc
lock
cs
inc
pop
push
push
sbb
push
or
jne
dec
test
pop
dec
dec
pusha
dec
aaa
add
and
add
test
loope
js
push
xchg
andb
sub
daa
rorb
mov
or
push
hlt
push
add
arpl
out
pop
adc
add
mov
cmp
dec
jmp
add
hlt
je
push
add
dec
jno
dec
xchg
in
mov
push
xchg
mov
dec
pop
repz
push
dec
pop
inc
out
mov
mov
dec
xchg
out
pop
test
push
dec
add
cmove
clc
mov
dec
outsl
inc
lahf
inc
adc
mov
idivb
and
cmp
pop
add
pop
mov
data16
loop
mov
jg
bound
sub
sub
mov
adc
movsl
inc
nop
sub
pop
push
mov
sub
lods
shr
cmp
je
mov
or
mov
add
ljmp
das
cmp
test
lds
add
sub
mov
jmp
call
dec
ficomps
jle
aaa
pop
jmp
mov
pop
jbe
adc
or
push
es
or
or
mov
inc
push
dec
adc
pop
mov
fstps
dec
sub
sarl
pop
inc
cmp
sub
or
dec
cwtl
mov
dec
fsub
add
mov
or
push
aaa
in
in
jo
or
jmp
push
add
pop
dec
popa
mov
shl
neg
xor
mov
out
fdivr
and
mov
cmp
shll
lret
xchg
insb
lcall
cmpl
cmp
adc
xlat
and
bound
mov
loope
and
xor
or
jo
cwtl
dec
lahf
add
out
jmp
jge
sbb
fcmovb
ds
sbbb
xchg
push
fsub
pushf
fcoml
movsl
xor
inc
inc
ret
cvtdq2ps
sub
or
or
sbb
sub
and
pop
dec
push
mov
mov
cltd
mov
sub
and
and
dec
xchg
push
mov
int
movb
pop
mov
mov
dec
jecxz
pop
in
sub
xor
xchg
fcmovb
jecxz
or
add
sub
adc
sbb
iret
xchg
and
inc
out
xor
aas
sbb
stc
inc
push
ret
fstps
sub
fidivrl
rcrl
fstl
ljmp
es
push
pop
jp
test
cli
mov
pop
add
hlt
pop
inc
nop
mov
adc
js
and
or
enter
fst
add
outsl
int
rolb
int3
rolb
or
inc
dec
mov
rcrl
xchg
in
xor
in
mov
lods
sub
dec
mov
daa
arpl
aam
insb
or
push
and
xor
loop
add
rorl
sbb
pop
addb
bound
aaa
ja
jmp
jo
aas
pushf
xor
add
popa
sub
add
inc
cmp
dec
lods
push
and
out
adc
test
jl
sub
xor
and
rcll
movsl
addr16
cmp
jmp
lahf
mov
lret
scas
mov
fildll
popf
cmc
cmp
push
bound
inc
add
shl
jle
outsl
mov
gs
pop
pop
bound
add
faddl
mov
cmp
or
gs
cmp
jp
jne
pop
xchg
mov
jns
movsb
ret
jle
popa
push
push
jns
dec
pop
mov
bound
jge
adc
lahf
adc
sub
in
ja
in
rol
test
sbb
cmp
push
push
xchg
lds
cmp
shr
push
add
or
xor
pop
les
cmp
add
jl
and
mov
neg
add
push
push
mov
lret
pop
pop
sbb
cld
mov
cmp
xor
adcl
mov
bound
stc
rolb
and
add
dec
xor
inc
cli
jbe
in
mov
insb
dec
loope
add
xchg
das
out
xchg
iret
pop
rorl
cmpsl
sbb
pop
imul
sbb
dec
sbb
xor
std
inc
add
pop
xchg
mov
leave
daa
cmp
movsb
sub
pop
insb
jg
out
cmp
xor
into
out
leave
imul
adc
test
cmpsl
adc
sub
ret
cwtl
xchg
lods
es
inc
xor
mov
jbe
xchg
adc
ret
cld
mov
jecxz
jecxz
out
ja
xchg
lds
call
push
adc
pop
jmp
leave
rcl
cltd
pusha
adc
sbb
shrl
jmp
pop
add
pop
mov
pop
xor
fisubs
cmp
mov
mov
adc
add
fstpl
ljmp
jbe
mov
ja
push
xor
iret
or
jns
sub
outsl
dec
add
jecxz
push
and
sub
pop
jne
call
repz
xor
adc
pop
push
jge
jno
or
rcrw
mov
xor
cmpsl
jmp
dec
jl
js
push
xchg
je
jmp
cmp
adc
sahf
adc
orl
and
push
andb
fwait
pop
add
sub
add
push
daa
imul
loope
inc
or
call
mov
adc
out
xchg
or
ljmp
dec
mov
sbb
sub
ret
dec
sub
pop
pop
adc
push
push
aam
subb
jge
xchg
xor
dec
and
in
orl
mov
sti
jl
jmp
mov
push
int3
fists
or
mov
add
pop
sub
aam
idivb
in
pop
sti
mov
inc
mov
pop
jo
loopne
fucomp
push
test
push
cmc
push
ds
add
int
mov
jg
push
or
std
or
fdiv
xchg
pop
push
aad
and
ret
es
popf
test
sub
mov
pop
mov
pop
xchg
jns
push
cmovp
adc
stos
push
mov
mov
dec
ja
inc
cmp
mov
pop
pop
cmp
inc
add
gs
jge
mov
xchg
addr16
lods
lds
push
and
push
mov
ljmp
enter
dec
push
jmp
stos
pop
mov
and
sub
sarb
sub
clc
fs
mov
imul
jo
or
ljmp
mov
shr
lahf
loope
aas
aad
cld
out
push
ss
adc
add
pop
mov
cli
jmp
leave
cli
stc
scas
xchg
add
cmp
pop
aam
add
xchg
adc
add
inc
push
addl
pop
inc
mov
sti
and
pop
dec
mov
arpl
insl
mov
push
je
ja
sub
sbb
popf
sbb
sub
pop
bound
not
cmp
pop
daa
fdivp
mov
ret
outsl
sub
adc
stos
add
cmp
xor
mov
js
int3
dec
and
fisubrl
jmp
sbb
pop
jmp
adc
movb
mov
shl
aaa
jmp
test
ja
xchg
sbb
fsts
xchg
pop
xor
cs
mov
or
adc
pop
shr
lea
stc
jecxz
loop
add
clc
adc
out
outsl
pusha
sbb
add
int3
icebp
test
std
cs
cmpsb
fs
ljmp
pop
sbb
add
inc
sub
cmp
lock
pop
fisttps
popa
or
xor
pusha
icebp
bound
into
jge
or
cs
imul
aas
or
cld
add
movsl
lds
jno
mov
je
inc
test
sub
and
call
xchg
mov
inc
fisubs
add
jo
imul
js
mov
loope
xor
adc
in
add
arpl
test
push
or
fisttpl
mov
outsl
rolb
daa
fidivrs
shll
adcl
mov
mov
fstcw
or
jno
ret
lods
sbb
and
add
push
dec
add
bound
add
jmp
xor
xor
jmp
imul
dec
lds
xchg
or
insl
lods
push
and
pop
jmp
lds
shrl
mov
mov
sbbb
scas
in
add
inc
and
leave
shlb
insl
loop
or
pop
in
popf
push
push
mov
add
add
jne
sub
push
pop
orb
push
sbb
jmp
in
ja
sti
mov
enter
repz
pop
mov
add
arpl
push
add
fstl
xor
lds
mov
jmp
dec
es
test
and
xlat
mov
pop
sub
mov
pop
shlb
and
and
and
push
nop
mov
sub
sub
xor
insb
or
sub
or
push
adc
fmull
neg
xor
adc
pop
xor
mov
data16
push
push
push
mov
mov
in
jo
cmpsl
addb
pop
sub
les
lock
or
jno
lds
and
and
cmpl
push
daa
fnstsw
pop
lret
loope
jl
and
lret
cmp
jo
loop
adc
inc
jmp
pop
or
imul
out
test
pop
or
sub
push
push
mov
xchg
loope
sbb
aaa
pop
fstpl
dec
push
inc
sbb
incl
jecxz
sub
add
fadds
movsl
mov
mov
dec
mov
mov
adc
sub
push
je
je
mov
add
sar
ret
std
add
push
or
inc
daa
inc
shll
jnp
jmp
ffreep
push
mov
mov
inc
add
std
push
push
inc
add
adcl
mov
mov
xchg
jecxz
or
mov
xor
add
inc
push
sbb
adcb
je
mov
inc
jno
inc
outsb
aad
push
inc
adc
testb
mov
or
inc
fisubs
dec
pop
and
sbb
es
add
dec
jmp
pop
xor
lcall
or
mov
xor
test
out
inc
ficomps
jl,pn
mov
sbbb
xorb
jmp
lret
pop
int3
dec
xchg
push
setle
and
sarb
push
negb
pushf
adc
jnp
pop
pop
mov
sbb
and
inc
clc
pusha
mov
xor
push
jmp
addb
pop
cmp
cmpsl
ds
je
leave
clc
cmp
adc
add
push
push
lods
aas
adc
sub
mov
ds
jbe
push
lock
pusha
pop
icebp
jmp
cmp
jecxz
test
mov
dec
cmc
pop
pop
adc
inc
std
sahf
mov
loope
in
pop
stos
xor
pop
dec
jb
sahf
pusha
sbb
ds
cmp
inc
pop
push
les
clc
inc
pop
xor
je
push
adc
add
shll
inc
xor
ljmp
add
stc
imul
subb
lds
int
cmp
jo
adc
add
adc
enter
lods
lods
lret
push
xorb
add
in
sub
bound
push
pop
pusha
lds
sbb
loop
push
bts
xchg
out
pop
pop
shrb
addb
mov
xor
or
push
mov
roll
data16
jmp
daa
lds
and
jbe
inc
mov
das
or
pop
aas
mov
lret
daa
jle
and
stc
es
pop
pop
sub
roll
dec
pop
leave
adc
fimull
cmp
sub
and
pop
adc
or
add
add
cmp
sub
xchg
jge
and
std
pop
daa
mov
repnz
ret
pushf
add
cld
iret
pop
mov
mov
fistps
pop
jecxz
and
add
loopne
js
or
xchg
into
or
jae
das
sub
int
in
and
neg
decb
leave
xchg
mov
and
into
pop
je
pop
rcrl
nop
arpl
jbe
and
jnp
push
sbb
aaa
rolb
pop
or
pop
add
inc
jo
addb
addr16
leave
int3
xor
imul
insb
mov
movsb
icebp
enter
sub
orb
add
mov
xchg
sbbb
stos
sub
cmp
pop
mov
ret
push
mov
stc
fisttpll
dec
mov
imul
cli
push
adc
sub
lock
xchg
mov
aas
xchg
pop
push
jmp
rclb
subl
mov
and
pop
cld
push
rclb
daa
mov
pop
push
adc
das
pop
dec
jp
test
adc
mov
gs
clc
push
outsb
jle
notl
pop
xor
sti
inc
jbe
shr
dec
or
outsb
adc
cmpb
adc
lea
add
dec
pop
test
push
mov
cmp
in
lret
addr16
outsl
add
mov
fsubr
mov
jae
push
push
nop
cmp
xchg
pop
fistl
lods
add
fldenv
adcb
bound
decb
out
or
pop
gs
pop
dec
pop
push
sub
int
jp
xchg
push
test
jge
int3
pushl
arpl
inc
aad
push
inc
xor
lods
xchg
fsub
jnp
mov
pop
xchg
pop
neg
inc
add
movsl
sbb
out
dec
insl
sub
sub
int
repz
jb
and
pop
mov
mov
fs
push
or
push
jge
int
jmp
fucom
ja
in
push
in
in
ja
xor
int3
xchg
dec
add
and
push
iret
mov
insl
add
add
inc
adc
enter
mov
jnp
xor
in
dec
mov
or
and
jecxz
icebp
xchg
jmp
push
movsl
in
sub
jnp
cmpl
mov
sub
sub
xor
sar
mov
cmpsl
jo
mov
jns
mov
inc
rorb
ret
push
jb
jecxz
xor
mov
mov
imul
push
xchg
sbb
pop
cmpb
leave
iret
not
push
mov
enter
and
mov
xorb
or
add
add
pop
rorl
into
jmp
stos
jns
stc
inc
jo
clc
xchg
iret
or
cs
popf
outsb
xchg
sub
mov
mov
cmpsb
mov
pop
int
out
jo
xchg
mov
cmpsb
out
cmp
push
pop
add
es
jae
test
add
mov
insb
xor
shr
jne
mov
pop
subb
ljmp
mov
out
xor
repnz
inc
xor
xor
shrl
pop
rcrb
repz
mov
xor
daa
mov
adc
test
dec
test
pop
sbb
cli
clc
std
push
push
mov
cmp
add
cmp
sbb
aad
pop
push
sahf
dec
dec
cwtl
push
lret
dec
popf
out
pop
push
mov
dec
add
shl
rolb
bound
cmc
es
pop
pop
dec
cmc
or
push
push
push
cmpsl
xor
pop
into
std
enter
sub
dec
or
sub
sarl
pop
dec
iret
adc
mov
sub
add
scas
and
rorb
mov
je
sub
nop
fs
gs
push
cld
or
xor
adc
push
push
mov
adc
and
adc
cmp
inc
jae
dec
jno
cmc
mov
loope
push
mov
out
cmp
jmp
push
lahf
les
pop
ret
lock
sub
xchg
push
add
adc
addb
and
aad
add
dec
adc
pop
aaa
jmp
cmp
pop
fucomp
addb
sub
sbb
sbb
push
divl
sbb
xlat
add
xor
mov
in
mov
leave
imul
loopnew
xor
stos
adc
jmp
lcall
xchg
sbb
mov
or
loop
daa
add
jo
out
popa
loope
sbb
dec
dec
dec
sub
push
repnz
lock
xorb
cmp
jnp
sub
mov
xchg
movsb
mov
jb
jns
mov
dec
das
inc
dec
or
subl
sarb
popf
xor
daa
out
mov
insl
mov
into
dec
add
inc
pop
or
test
add
xor
popa
ljmp
lahf
dec
outsl
push
jmp
jl
lret
dec
adc
xor
dec
push
push
leave
je
mov
cmp
pop
imul
clc
dec
cmp
lret
das
lahf
in
mov
shlb
sub
adc
dec
inc
test
rcrb
pop
jno
and
nop
incl
mov
jecxz
subb
cmp
nop
dec
mov
push
or
lret
inc
xchg
jmp
jns
push
mov
orb
loop
lock
xchg
stc
in
xchg
icebp
sahf
test
mov
or
inc
jle
sbb
or
cmc
aad
jnp
into
pop
imulb
mov
aam
xchg
jns
and
scas
cmc
dec
jb
mov
push
dec
add
sbb
loop
pop
daa
jmp
sub
sbb
cmc
arpl
xchg
les
jg
inc
pop
orb
shlb
call
inc
push
movsl
jl
adcb
das
jo
lods
or
imul
insl
cmpsb
mov
xorb
xor
test
cltd
push
jp
in
in
shlb
lds
and
std
mov
popa
or
ret
xchg
rcrb
imul
jae
pop
dec
sub
add
push
sbbl
repnz
mov
sub
or
jmp
xchg
enter
jo
add
add
cmp
inc
inc
jmp
or
sub
push
sarb
and
cwtl
jns
add
or
add
pop
mov
add
push
sahf
cmp
jmp
mov
sub
jae
push
mov
addl
cs
inc
in
jne
insl
add
cmp
subl
pop
imul
ja
pop
stos
iret
movb
stos
add
out
or
and
in
add
fistl
mov
stos
sub
xor
inc
sub
adc
push
mov
dec
cwtl
adc
hlt
cmc
xor
xchg
repnz
lret
shll
cmp
loopne
shll
mov
arpl
fcmovbe
fwait
je
popa
push
les
sti
mov
int3
and
sub
daa
sahf
cmp
dec
push
push
pop
lea
mov
dec
add
gs
pop
xor
in
cmp
popa
rcll
push
call
lock
out
xchg
in
cwtl
pop
push
idiv
xchg
enter
lcall
test
and
push
mov
test
notl
cmp
cmp
pop
cmpsl
rcr
movsl
or
cmp
mov
test
xor
pop
sub
ret
pop
mov
pop
dec
add
pushf
and
cmp
ss
bound
adc
xchg
adcb
daa
in
and
lock
push
subb
dec
add
rcrb
and
mov
test
sub
or
jmp
lret
das
add
ljmp
and
icebp
push
sub
in
mov
push
mov
jo
or
sbb
cmp
shlb
add
xor
scas
inc
rcr
fdivs
dec
sub
and
shl
or
or
cmp
lahf
add
fsubrs
push
lcall
inc
or
xor
add
adc
shll
in
sub
or
adc
jns
in
cmpsb
jl
pop
loop
mov
movsb
jnp
sbbb
mov
lret
pushf
insl
sub
repz
daa
sbb
xor
add
mov
pop
and
jmp
add
push
rcrb
sub
inc
sub
mov
push
xor
mov
or
xor
call
pop
push
mov
nop
add
jp
sti
and
jge
pop
rorl
ss
jmp
shl
dec
lock
loope
dec
jno
xor
and
and
dec
mov
and
adc
movswl
mov
jmp
jmp
mov
dec
loope
cmpsb
push
mov
add
negb
insl
je
ror
cmpb
xor
mov
mov
cli
mov
jmp
cmpsl
lahf
loope
jle
sub
pop
inc
cmpb
pop
je
mov
je
jle
pop
scas
sbb
and
adc
je
shlb
stc
inc
adc
rorl
lahf
push
sub
mov
pop
scas
fmull
int
pop
jno
add
dec
dec
xor
lret
pop
cmp
and
in
jnp
xchg
enter
add
pop
xchg
imul
jge
ljmp
sbb
pop
cmp
out
test
cmpl
loope
and
sahf
push
push
shlb
push
and
inc
xchg
mull
xchg
push
lcall
mov
and
call
or
lea
xchg
sbb
xor
addb
std
into
test
sub
sbb
lahf
aaa
ljmp
jno
loope
inc
pop
add
hlt
dec
xor
and
cmp
in
push
cmp
lods
or
dec
or
jle
mov
and
popa
or
jae
pusha
dec
out
or
fldenv
lock
cmpb
or
xchg
fs
arpl
push
sbb
loop
push
fptan
cld
or
push
bound
jmp
in
faddp
xchg
pushf
lret
and
movb
sti
dec
xor
push
mov
fildl
or
mov
cwtl
mov
into
or
dec
jmp
in
sbb
xchg
bound
setbe
in
in
or
jp
and
stos
mov
mov
andb
xor
inc
mov
sub
push
and
push
push
dec
pop
int3
imul
int
inc
push
mov
fwait
nop
or
ret
je
pop
add
xor
clc
lock
cld
and
cld
adc
cwtl
xor
movsbl
popa
out
ja
sbb
push
aam
std
je
call
ficoml
pushw
fildl
adc
xor
pop
rcrb
enter
fistps
add
jne
add
loope
shr
fdivrs
nop
or
xchg
xor
inc
popf
sbb
pop
aaa
fcoml
mov
data16
mov
inc
aad
subl
push
lcall
pop
jmp
push
inc
cmp
push
push
iret
mov
not
shll
dec
out
or
pop
pusha
pop
mov
add
ljmp
icebp
aam
jae
idivl
or
inc
push
pop
jae
or
adc
mov
mov
test
pop
and
pop
xchg
roll
sub
leave
sub
cmp
dec
les
jmp
sbb
push
dec
or
xorb
push
inc
add
movsl
aas
sbb
cld
add
arpl
in
jmp
popf
add
jmp
or
pop
pop
fisttpl
lret
adc
scas
cmp
xchg
add
adc
sub
mov
dec
insl
outsl
add
cmp
ljmp
adc
add
inc
ja
bound
pop
push
call
inc
dec
idiv
push
inc
jmp
cltd
inc
push
dec
push
push
in
dec
hlt
add
add
inc
lods
adc
dec
pop
call
sub
and
mov
xchg
sbb
adc
jmp
fstl
loop
out
push
add
es
test
jmp
lea
pop
popf
inc
mov
adc
jg
in
adc
inc
stos
jmp
jns
imul
pusha
inc
push
bound
lret
pop
sbb
rcrb
scas
jmp
or
push
xor
and
pop
xchg
add
cli
int3
pop
cmp
and
or
pop
pop
aam
in
and
inc
mov
test
push
or
push
push
pop
push
push
add
call
fs
sbb
test
pop
and
pop
sbb
stos
leave
out
pop
mov
mov
and
lret
enter
add
icebp
outsb
add
push
mov
and
or
or
inc
or
mov
cmp
lods
and
mov
sub
sbb
ret
push
jmp
xor
cli
xchg
dec
mulb
jo
and
inc
cwtl
movsl
out
frstor
mov
and
lret
out
jle
or
dec
sub
push
add
adc
jg
mov
inc
outsl
push
icebp
fcoml
test
je
daa
or
mov
push
pop
dec
shr
or
in
adc
das
push
cmp
or
test
out
or
sub
xor
jo
lea
test
add
add
pusha
lret
dec
notl
stos
pop
mov
mov
mov
aaa
jbe
xchg
in
sbb
push
or
insb
pop
aaa
mov
idivb
inc
jmp
roll
pop
mov
hlt
pop
xor
dec
cmpps
loop
jns
or
loope
imul
insb
mov
xor
in
mov
loope
cmpsb
sub
dec
mov
and
jb
out
das
jmp
jns
sub
add
cwtl
es
aaa
mov
cli
not
nop
jecxz
xor
test
push
jmp
pop
sub
add
xchg
sbbb
add
shl
clc
loopne,pn
dec
push
dec
cmp
enter
in
hlt
out
test
std
adc
pop
js
cmp
shl
jle
jo
cmc
shlb
loopne
data16
jbe
ficoml
mov
sub
mov
mov
loopne
fsubs
out
pusha
es
push
mov
arpl
inc
in
mov
insb
adc
xor
pop
and
shr
sti
add
mov
ljmp
jmp
int
adc
push
stos
push
xchg
loope
pop
and
enter
pop
cltd
inc
pop
ljmp
stc
aad
jecxz
push
cwtd
xor
ficoms
xor
jle
imul
mov
xchg
fwait
icebp
test
roll
fstps
sbb
pushf
pusha
dec
pop
sbb
or
add
pop
dec
loope
ret
mov
jno
pop
add
push
add
add
fisubl
pop
jae
pop
push
outsl
insb
nop
add
mov
jmp
mov
mov
sub
out
jl
sub
xchg
push
and
and
ficompl
shr
loop
inc
call
fdiv
enter
mov
fsubl
adc
mov
xchg
pop
mov
into
rcll
lret
sbb
subb
jno
add
imul
ja
inc
mull
loope
add
and
std
movsl
imul
xor
pop
cmc
or
and
mov
xor
mov
xchg
lahf
insl
inc
loop
mov
or
or
or
jmp
or
not
jle
les
and
aas
xor
lcall
dec
inc
sti
sahf
push
js
mov
in
pop
cmp
xlat
pop
sub
or
jmp
fstl
and
popa
imul
xor
pop
jmp
inc
daa
xchg
aam
aad
or
sbb
inc
mov
push
cltd
or
cltd
pop
jns
dec
mov
xchg
add
lea
aas
popa
shr
ds
fcomps
lods
sub
mov
pop
pusha
xchg
push
test
add
add
mov
push
jae
push
out
subl
imul
or
fld
mov
mov
push
iret
push
das
xchg
movsb
push
mov
out
or
jge
dec
fdivrl
or
push
mov
sub
adc
mov
cmp
add
and
icebp
inc
mov
or
pop
add
push
filds
loope
add
sub
adc
scas
das
jecxz
push
adc
sbb
hlt
dec
ret
jmp
loop
pop
or
push
bswap
cld
adc
lds
add
pop
mov
or
adc
pop
cli
adc
mov
out
mov
jmp
lods
push
inc
mov
or
xchg
call
push
aas
push
mov
ret
in
mov
pop
hlt
outsl
xor
daa
mov
jg
and
sub
test
mov
sub
rcll
xchg
dec
call
add
and
gs
push
mov
mov
psrad
xchg
into
dec
xlat
dec
arpl
sbb
cmp
pop
push
xchg
inc
pop
add
xchg
not
xor
or
cmpsb
scas
and
out
add
sbb
jb
pusha
cmp
adc
jle
xchg
cmpsb
cmp
fcoml
adc
mov
xor
sbb
pop
jmp
xor
insb
ret
dec
mov
dec
daa
and
cmp
mov
les
fsts
repz
jne
sbb
lods
jge
adcb
push
jmp
fs
outsl
lcall
fadd
pusha
pop
push
test
pop
mov
clc
xchg
xlat
das
and
jae
mov
mov
les
push
and
mov
and
xchg
add
je
js
cmp
mov
cmp
lock
push
pop
push
or
negb
mov
push
or
xor
lret
or
push
in
adc
stos
pop
add
mov
jmp
pop
inc
jnp
or
add
sub
adc
cs
cmp
daa
xor
push
push
mov
in
jne
dec
aam
rclb
sub
cli
idivb
mov
sti
lret
nop
ret
mov
mov
add
jmp
push
xor
fnsave
imul
pop
add
jmp
xlat
jo
nop
cmpl
mov
test
dec
outsl
pop
xor
or
mov
mov
sbb
icebp
insl
add
and
dec
ret
cmp
dec
dec
ret
enter
fadds
push
es
jb
or
aam
js
or
mov
jmp
sub
xlat
and
mov
and
popl
mov
js
dec
je
push
and
hlt
mov
mov
js
mov
jo
ret
pop
push
pop
ss
repnz
and
pop
add
pop
loop
jmp
sub
mov
outsb
ror
popf
xlat
lcall
mov
mov
and
mov
inc
lds
xorb
icebp
cmp
shl
je
xlat
xchg
bound
pop
aaa
lock
lock
or
xlat
cmpb
scas
into
push
sub
fldt
clc
add
jmp
sbb
lret
push
adc
mov
pop
xchg
mov
scas
addb
cmpsb
neg
add
xor
xor
xor
notb
jmp
int
adc
adc
jmp
mov
dec
or
in
mov
push
test
popa
loopne
pop
mov
push
pop
jmp
data16
sub
popf
push
add
mov
call
sub
xor
inc
mov
inc
sbb
scas
fmull
test
std
mov
outsb
mov
pushf
scas
xor
jge
add
inc
shll
repnz
adc
dec
mov
hlt
in
scas
popa
jo
push
aas
mov
fisubl
jno
inc
pop
stos
cwtl
or
ret
jb
dec
cli
stos
and
lds
mov
dec
addl
pop
imul
repnz
outsb
xchg
jmp
dec
ret
loopne
pop
sub
pop
shlb
add
fldcw
pop
es
je
xchg
pop
shll
sub
mov
adc
repnz
cmp
fsubrs
bnd
add
mov
push
pop
nop
adc
cmp
movl
xchg
adc
add
adc
push
addb
in
and
inc
dec
xor
push
add
xor
jnp
and
into
orl
repnz
shrl
or
mov
out
pop
mov
pop
sub
call
rol
repnz
popw
pop
xchg
mov
inc
shl
adc
push
neg
and
cmp
dec
pop
mov
push
push
lcall
jecxz
xchg
ficompl
fisubrl
xchg
mov
mov
inc
repz
push
and
push
pop
sub
mov
mov
mov
adc
inc
rcrl
adc
mov
adc
dec
lcall
add
sub
dec
sub
adcb
mov
into
lahf
and
pop
sub
shlb
notb
aam
in
adcb
sub
mull
orb
sub
addr16
idiv
sub
movsl
in
jmp
in
shrb
dec
pop
test
fs
dec
xor
ja
mov
xchg
les
mov
jno
leave
adcb
and
add
cli
inc
nop
or
and
jo
call
andl
sub
push
cmp
mov
add
mov
inc
int
push
ud1
jbe
idivb
mov
enter
sub
dec
push
out
je
sub
or
jbe
xor
add
pop
mov
pop
or
adc
fistps
lds
movsl
dec
rcll
sbb
andl
sub
or
jnp
out
fcoml
sub
repz
daa
pop
sbb
mov
add
sub
push
dec
jno
ficoms
mov
repnz
daa
pop
js
test
xchg
push
pop
dec
icebp
jg
xor
andl
push
or
or
jmp
enter
fcoms
fldl
push
daa
mov
lcall
sti
icebp
push
dec
or
and
popf
fadd
out
es
pop
rorb
test
into
cli
and
pop
out
mov
roll
push
mov
imul
cltd
or
lods
push
add
push
mov
add
lret
inc
cmp
or
adc
mov
inc
aam
adc
das
mov
clc
jne
add
test
add
mov
jg
mov
cwtl
jmp
and
mov
sbb
ss
data16
sbb
sarl
sbb
sahf
imull
jecxz
mov
scas
mov
xchg
fnstenv
dec
sarl
sbb
lock
stos
mov
loopne
inc
and
pop
jbe
cs
dec
int3
int
jbe
jb
mov
ret
mov
gs
add
xor
pop
loop
test
rclb
sub
gs
pop
sub
adc
inc
adc
loop
mov
sub
push
mov
or
mov
add
mulb
push
iret
gs
adc
cmp
ror
mov
jle
jmp
lods
or
mov
daa
bt
inc
movsb
adcb
orl
or
outsb
and
xrelease
icebp
xchg
jge
fs
add
rcll
testl
shll
xor
repnz
jmp
pusha
popa
pop
adc
mov
mov
dec
fwait
sbb
mov
jg
repz
subb
dec
aam
add
xchg
dec
fs
mov
cmp
pusha
js
pop
xor
movb
and
ja
test
push
and
cs
outsl
cmc
pop
fimull
ret
cmp
sbb
in
cwtl
pushf
popf
mov
outsb
pop
popf
sub
adc
bound
sbb
mov
dec
shr
push
xchg
lret
dec
xor
push
lods
and
ret
and
stc
xchg
xchg
inc
jmp
xchg
lret
and
movl
movsb
jmp
xor
add
or
rorl
add
rolb
add
fsubs
test
xchg
push
and
test
fcoml
push
mov
pop
loopne
add
sub
sbb
or
push
inc
pop
notb
mov
fisubrl
sbb
in
pop
push
out
rcll
push
inc
mov
cmp
pusha
fsubrl
testl
shr
ds
mov
mov
pop
xlat
lcall
add
div
mov
aad
lods
pop
jae
cmp
jns
aam
mov
psubw
pop
mov
adc
jmp
test
xchg
jmp
lods
inc
in
pushf
sbb
add
int
jo
mov
xchg
add
call
xor
divb
shll
fstps
adc
xor
mov
sub
pop
stc
cmp
mov
inc
fsub
lcall
insb
mov
clc
add
sbb
jne
incl
ficoms
call
push
jmp
inc
dec
inc
dec
mov
fscale
inc
push
push
push
mov
push
jmp
inc
icebp
pop
adc
mov
cmpsb
loop
cmpsb
test
ja
fadd
xchg
repz
cltd
add
int
aad
icebp
cli
sub
or
sub
cmp
cmp
int
push
stc
out
rolb
lds
js
arpl
or
daa
and
sub
push
pop
and
mov
inc
mov
shrb
jmp
ret
out
rcll
add
insl
inc
pop
inc
lret
add
sub
xor
popf
add
pop
add
pop
mov
shr
dec
and
adc
or
and
cwtl
xor
rclb
adc
dec
push
push
push
pop
push
xchg
xchg
rcrb
ljmp
out
jmp
movsb
repz
push
loop
ds
adc
outsb
pop
pop
mov
sbb
test
push
pop
mov
adc
filds
mov
jne
das
xchg
loopne
mov
pop
adc
fsubs
pop
xor
xor
add
cs
and
pop
jbe
adc
aam
scas
sarl
sarb
inc
call
jge
mov
add
dec
leave
xchg
xor
decl
fimuls
jmp
mov
fs
gs
aaa
lods
adc
pop
test
mov
sub
jl
das
adc
leave
ljmp
pop
lret
pop
test
mov
in
orl
mov
ret
lock
sbb
jmp
and
or
repnz
push
jle
dec
mov
nop
inc
pop
push
fisubs
enter
mov
xchg
shlb
gs
loop
push
inc
test
inc
push
insl
gs
pop
lods
pop
add
dec
and
adc
sbb
add
push
mov
lock
sbb
pop
or
push
out
stc
sub
ja
not
rol
stc
imull
imul
aaa
xchg
das
ret
inc
out
js
insb
lods
jnp
and
orb
jle
pop
cmp
andb
sub
or
lcall
mov
pop
sub
sub
add
ret
sub
add
add
push
push
mov
std
iret
adc
loop
push
lds
addl
adc
in
xor
push
push
add
mov
and
pop
and
in
push
sub
movsl
mov
xchg
jle
mov
rorl
shlb
inc
pop
mov
rclb
mov
and
cmc
lret
lods
push
rclb
jmp
sub
lret
xor
pusha
jp
sbb
push
xorb
or
cmp
in
in
pop
add
lahf
or
cmpsl
adc
pop
inc
mov
mov
loopne
and
ja
out
imul
test
adc
aad
sbb
pushf
jge
ret
xor
push
lret
push
ror
leave
mov
hlt
ja
dec
cmovo
inc
adc
xlat
pop
xor
int3
outsb
mov
add
xor
adc
jmp
mov
add
outsb
popf
add
sub
sbb
es
push
push
mov
repnz
jbe
or
in
ret
or
pop
cltd
mov
mov
enter
cmp
push
pop
clc
sub
gs
and
and
or
and
sarl
insb
shll
push
dec
je
pushf
ss
adc
push
mov
dec
add
outsb
mov
adcb
sub
jmp
call
out
xor
and
cmp
and
add
push
push
mov
ja
mov
std
add
jnp
push
cltd
dec
cld
mov
pop
jb
cwtl
outsb
pop
clc
subb
mov
cmpsb
or
add
inc
adc
in
sub
lahf
sub
add
out
pop
inc
push
lods
orl
fwait
mov
das
push
fmulp
bound
push
add
adcl
mov
push
and
lret
push
mov
popf
fstpt
jno
push
push
push
pop
jge
out
out
das
sub
scas
lock
xchg
lahf
call
fmuls
ficomps
cmp
add
jmp
pop
pop
pushf
adc
jno
dec
xchg
push
rol
pop
out
fisubrs
out
or
mov
mov
lods
mov
push
and
mov
or
or
sub
in
inc
out
push
cmc
add
aam
jl
imul
clc
stc
mov
shll
add
pop
add
loope
add
jmp
pop
gs
sub
out
add
mov
and
or
mov
jns
test
inc
mov
cmp
icebp
lcall
jmp
adc
dec
aad
add
std
sbbl
insl
xchg
or
rcl
xchg
push
jmp
shr
cld
add
add
sbbl
xchg
fldl
neg
cli
lss
js
mov
xchg
push
sub
cmp
jmp
loope
hlt
or
cld
adc
push
add
lods
decb
bound
cltd
je
leave
jp
in
or
not
hlt
push
subb
orb
mov
fabs
and
xchg
pop
push
fs
mov
lods
cld
mov
mov
or
je
pop
int3
mov
pusha
stc
mov
dec
data16
ret
jle
cld
jno
sub
mov
lods
rorb
fldl
cmpsl
jb
dec
das
inc
jae
out
movb
rcll
push
outsl
cmpsl
sub
sub
dec
rorl
and
cmp
or
outsb
data16
dec
test
and
push
jge
push
rorl
test
or
cld
and
push
sbb
or
jecxz
aas
or
clc
insb
shll
pop
gs
stc
jae
imul
and
xchg
and
faddl
push
jae
lods
and
cmc
fmuls
or
add
movsb
jno
or
in
xchg
cmp
test
nop
xor
stc
out
sub
mov
and
lcall
xor
dec
es
pop
lock
push
push
call
inc
icebp
jns
jne
mov
adc
call
jp
nop
or
jns
or
mov
lcall
adc
das
jle
stc
add
popf
or
arpl
sub
jmp
stos
cmp
in
mov
adc
dec
pcmpgtw
jmp
je
add
mov
push
add
jge
mov
leave
fmuls
bnd
incb
lret
push
cmpb
jmp
adc
inc
sahf
das
adc
push
aas
dec
add
sbb
mov
push
cmp
cmpsb
xchg
and
xchg
xchg
or
enter
sbb
mov
test
push
jne
mov
sahf
mov
out
dec
pop
lret
mov
rclb
stc
stc
push
mov
stos
or
adc
and
popf
mov
mov
mov
paddw
dec
pop
dec
push
repnz
dec
xor
out
pop
push
add
dec
lret
jmp
pop
rcrl
or
shr
cmpsl
jle
mov
adc
xor
pop
add
mov
popa
les
mov
repnz
jmp
outsb
push
lret
movsl
imul
pop
xchg
fsts
adc
cld
push
jne
test
push
mov
jb
or
dec
add
xchg
popf
add
fldenv
adc
mov
add
inc
aad
icebp
push
hlt
pop
sub
cmp
mov
jo
pop
cld
jg
push
es
push
push
enter
sub
aaa
lret
mov
or
inc
paddd
push
sub
outsl
or
faddp
out
cmp
fnsave
dec
in
in
xor
add
sahf
pop
negl
cmp
xor
xor
enter
pop
jmp
mov
sub
pop
mov
in
int3
stc
cld
fucomi
or
std
cmp
adc
jmp
fadds
add
or
dec
mov
testb
in
jl
sar
jg
jo
mov
mov
xchg
rclb
fadds
out
mov
mov
xchg
and
cmp
bswap
add
jg
stos
leave
fidivl
sub
mov
pushl
xchg
xor
fs
movsb
dec
add
dec
cli
dec
push
add
cmp
or
pop
pop
and
mov
xorb
rclb
clc
loop
rorl
add
sub
xchg
mov
in
xchg
mov
pop
push
mov
test
mov
leave
in
adc
test
sub
mov
mov
or
scas
dec
out
add
or
pop
push
mov
ja
jmp
cld
pop
or
and
pop
xchg
add
push
pop
pop
xchg
mov
clc
in
push
ror
sub
pusha
adc
cs
xor
ret
leave
jbe
std
push
add
jno
cmp
and
mov
push
leave
and
ss
sbb
dec
push
or
mov
inc
jmp
adc
and
inc
add
jno
dec
pop
lret
or
inc
out
ljmp
sti
cmc
mov
pop
push
pop
jmp
out
shlb
push
add
outsl
in
jle
push
push
mov
lock
adc
pop
jmp
mov
and
movsl
cmp
in
push
cmc
insl
cmp
popl
repnz
jns
cmp
in
int3
in
je
fimull
adc
mov
insb
cli
mov
mov
jne
roll
pop
enter
or
es
dec
je
adc
jge
add
jmp
add
sub
mov
mov
xchg
fcompl
push
and
mov
cmp
mov
lea
push
adc
dec
add
scas
loope
push
jo
pop
push
add
fcomps
dec
ds
pusha
pop
xor
pop
add
shll
mov
jo
out
add
mov
adc
bnd
pusha
push
push
ljmp
sub
inc
pop
pusha
add
mov
push
push
test
cmp
pusha
pop
pop
in
mov
stos
sbb
mov
test
incb
adc
push
scas
shrl
xor
in
movsl
pop
lods
adc
int3
mul
mov
mov
bswap
and
or
lds
mov
mov
push
mov
jns
xor
jmp
sub
add
or
pop
mov
and
subb
insb
sbb
dec
xchg
je
mov
rorb
cs
movb
add
rol
outsl
mov
or
dec
sbb
jp
jae
sub
daa
insl
push
push
mov
xchg
mov
es
mov
vcmpsd
pop
mov
pop
aaa
push
sbb
sub
ljmp
add
imul
arpl
pushf
sbb
mov
push
and
jbe
cwtl
add
fdecstp
dec
jmp
xor
and
push
lret
add
clc
push
sarb
fstps
xchg
xor
ss
enter
rorl
mov
cmp
and
dec
clc
int
pop
out
jmp
and
test
mov
lret
dec
mov
ficoml
jmp
mov
and
or
add
popl
jmp
movb
loopne
out
inc
mov
xor
xor
jne
pop
inc
mov
mov
sbb
mov
popa
or
lret
push
leave
cmp
sub
push
out
and
shll
push
int3
sub
add
aad
orb
icebp
adc
inc
or
fildl
leave
mov
inc
mov
sub
xor
or
dec
mov
mov
in
arpl
push
dec
push
lahf
xorl
xchg
lret
add
ljmp
dec
cli
lds
in
push
ret
jge
xor
scas
add
es
adc
inc
fwait
inc
aas
lods
lahf
int
sbb
adc
mov
popf
jle
sbb
pop
out
adc
cmp
cmp
addb
or
loope
fdivrp
popa
inc
xor
and
xlat
mov
fsubs
add
push
mov
push
fwait
jecxz
or
push
xchg
jl
adc
shl
push
jg
xchg
push
mov
mov
add
add
push
test
dec
test
push
inc
cli
xor
sbb
mov
pop
push
mov
neg
inc
lods
push
data16
and
mov
push
shrb
xor
add
out
cmp
adc
lahf
sbb
push
push
iret
sti
pop
popf
in
mov
sbb
fstp
leave
sub
jl
mov
inc
push
mov
data16
and
add
mov
mov
pop
mov
fadds
cmp
sub
mov
sub
mov
sahf
shrl
orl
inc
clc
xor
xchg
shll
mov
loope
loopne
xchg
pop
lods
test
pop
test
test
xlat
add
pop
and
push
rcrl
and
imul
arpl
mov
movsl
or
xor
scas
pop
xchg
sub
test
jmp
fsub
rclb
repnz
jb
adc
adc
cmp
adc
cmp
mov
adc
xor
clc
dec
push
or
pop
push
fsubrs
and
pop
push
loope
cmp
mov
pop
les
icebp
cmp
pop
sub
pusha
add
ret
int3
scas
jae
dec
mov
daa
jecxz
insb
jo
mov
jge
jecxz
not
rcl
jmp
test
scas
sub
push
ret
add
xlat
jne
fldt
mov
decb
mov
xor
rorb
repz
jle
add
adc
xor
lock
scas
or
cli
xor
xor
and
add
mov
sahf
jmp
fiaddl
or
cmp
repnz
push
mov
push
std
mov
jb
outsl
dec
add
push
jo
push
sbb
mov
add
pop
pop
mov
xchg
push
fisubrs
dec
fs
jge
notb
imul
pop
popa
jae
ror
pop
dec
jo
or
bnd
jns
xchg
fisubs
popa
sbb
loop
sarb
adc
xchg
ret
jmp
xor
shr
push
inc
mov
adc
jno
jns
outsl
jns
cs
scas
test
cwtl
pmulhuw
sub
push
jecxz
mov
and
int
jl
dec
pop
pop
pop
or
or
scas
sub
jecxz
and
add
mov
insb
loopne
div
inc
xchg
not
ret
rcrl
test
xor
shr
lahf
jo
and
hlt
in
js
jae,pn
inc
les
dec
push
xchg
sbb
xchg
stos
inc
les
add
in
xchg
test
push
add
push
lahf
adcb
inc
sub
or
jmp
out
inc
cmp
jb
adc
shll
and
pop
lahf
mov
pop
cli
pop
add
lds
xchg
rorb
aas
fsubrs
jno
jmp
add
outsl
mov
add
or
sub
xchg
loopne
inc
push
pop
mov
mov
out
mov
adc
test
or
mov
pusha
push
jmp
cltd
pop
pop
movsb
enter
cmp
cwtl
inc
fs
out
xor
cmp
push
in
or
jns
jmp
stos
or
wbinvd
cltd
inc
inc
add
test
mov
push
test
repnz
push
push
xchg
pop
ret
fidivl
jmp
push
daa
sarb
pop
sbb
xchg
jnp
and
lods
cwtl
or
xor
sti
pop
jp
mov
adc
or
jae
rorb
add
call
sub
mov
neg
xor
inc
cmp
push
push
pop
mov
gs
scas
sbb
std
rol
fdivrl
and
dec
cmp
cwtl
ljmp
js
inc
mov
xor
dec
or
in
xchg
pop
mov
ret
mov
les
sub
add
inc
inc
xor
iret
push
int
leave
jmp
notl
jge
jo
cmp
xchg
adc
adc
cwtl
jp
jmp
sub
adc
popa
popf
and
dec
mov
adc
mov
fists
push
jno
adc
sbb
or
stc
jmp
or
fadds
adcb
and
sub
jno
cmpsb
ljmp
push
repz
adcb
test
mov
push
mov
shl
sbb
in
add
popf
mov
push
sbb
jo
inc
push
mov
decl
push
xor
adc
aaa
push
cmp
cld
rcl
add
fcomps
xor
jbe
ret
push
xchg
push
dec
inc
xchg
mov
ret
sub
mov
mov
cmp
sbb
sbb
incl
mov
xchg
dec
push
hlt
push
pop
testw
inc
pop
pop
jns
les
cmp
cmp
adc
pop
insb
push
xlat
sub
add
cld
shrd
jmp
sub
cwtl
ret
sahf
and
xor
outsb
push
cltd
bound
cmpsl
je
mov
jno
stos
dec
push
push
pusha
xchg
and
rorb
add
popa
aad
sub
popf
lahf
push
fistl
lcall
sub
jo
sub
xchg
jmp
lods
out
fs
jae
push
and
jns
push
sbbl
and
lock
sbb
jmp
daa
push
sbb
cld
mov
inc
jle
cwtl
xchg
jo
lds
add
das
pop
dec
jb
add
in
cmpsl
in
aam
pushf
mov
cmpsl
rolb
in
mov
pop
movsl
loopne
cli
push
inc
lds
xchg
jnp
pop
mov
mov
add
int3
scas
jecxz
mov
fnstenv
adc
push
push
pusha
aas
xchg
mov
dec
mov
test
xchg
bnd
daa
mov
out
gs
add
add
cmp
jg
or
dec
dec
das
les
pop
push
mov
orl
fcomps
and
push
push
popl
dec
sbb
dec
jmp
adc
stc
into
jnp
push
fidivrs
fstps
mov
gs
xchg
aas
pop
push
add
and
mov
cld
test
push
sub
add
mov
lret
imull
stc
or
ret
sbb
push
mov
dec
repz
jmp
aas
imul
rcrb
and
icebp
inc
push
lahf
sbb
pop
sub
sub
mov
mov
leave
lret
adc
dec
std
nop
push
dec
mov
jne
repnz
dec
mov
in
sarl
andb
hlt
and
shll
fistpll
push
shlb
cmp
add
jb
jns
lods
icebp
aas
das
mov
jecxz
pop
push
cmp
stc
rorb
add
push
mov
mov
into
dec
out
or
rcr
movsl
jnp
pop
lcall
inc
xchg
inc
mov
sub
ret
add
jmp
iret
jg
aad
push
cmc
dec
rolb
rcrl
lods
and
sub
sub
std
cwtl
push
test
push
xor
and
jge
mov
push
mov
xor
pop
das
add
ficomps
iret
adc
and
dec
imul
clc
pop
inc
mov
daa
xor
in
adc
leave
jnp
xorl
xor
jae
loop
mov
mov
jp
xor
mov
addl
sub
pusha
adc
push
jmp
sbbb
xchg
arpl
test
aas
jecxz
pop
pop
or
fbstp
dec
pop
pop
cmpsl
xor
dec
add
mull
bound
push
hlt
jnp
jp
mov
andb
cmp
fisubl
xor
push
mov
add
jmp
shrl
jb
push
movsl
and
inc
push
out
or
sbb
jmp
in
out
cmp
lahf
push
out
adc
add
xor
movsb
cmp
mov
loope
shlb
enter
xor
push
jbe
test
push
lret
push
xchg
in
icebp
add
push
call
xchg
mov
daa
dec
add
mov
in
rolb
mov
or
adc
addb
mov
and
add
xor
imul
pop
test
push
xchg
pop
and
push
in
add
pop
les
and
cmp
cmp
lahf
xchg
cmp
sarl
push
push
daa
mov
lock
add
ret
pop
out
cltd
daa
jmp
aaa
cmp
push
lret
add
cmpsl
cmpsl
clc
es
or
add
std
pop
stc
and
or
test
push
movsb
repnz
dec
xchg
xor
sub
jmp
mov
or
std
cmp
sbb
outsb
xchg
faddl
iret
xor
inc
push
mov
inc
icebp
mov
dec
xor
adc
sbb
or
mov
fwait
and
add
mov
inc
pusha
mov
rorb
jmp
lock
subl
jo
add
shr
push
aaa
jecxz
push
inc
add
push
push
mov
bound
fiaddl
and
mov
jmp
movl
sub
sbb
test
pop
add
push
mov
aas
lock
cwtl
je
jmp
pushw
push
cmp
pop
mov
inc
push
pop
sub
roll
or
mov
inc
sbb
sbb
add
dec
inc
lods
shr
sbb
pop
addl
sub
popa
add
add
stos
mov
leave
sub
push
loope
sub
cmpsb
jp
mov
mov
call
cli
out
into
add
mov
mov
jecxz
sti
int3
xor
add
outsb
inc
mov
lret
fcoms
out
fidivl
mov
push
sub
or
iret
or
sub
mov
lret
nop
xor
scas
adc
or
jg
push
sub
bound
out
pop
push
neg
push
mov
sub
push
fadds
clc
out
mov
mov
dec
adc
pop
mov
pop
inc
push
leave
out
push
mov
sub
xor
rorl
das
cltd
fs
or
mov
mov
xlat
scas
rorb
inc
lods
add
dec
repnz
rorl
adcb
repz
adc
ja
bound
sub
push
mov
push
push
movsb
shrl
pop
call
mov
push
aas
adc
out
inc
inc
push
leave
xchg
push
cwtl
pop
add
fiadds
aas
rclb
loop
roll
xor
test
sub
inc
or
test
cmpsb
or
stos
fs
jecxz
and
mov
mov
lret
push
adc
xchg
add
sti
adc
pop
std
cmp
jg
aaa
add
cmp
push
jmp
add
or
dec
pop
jl
xor
inc
lahf
mov
push
nop
imul
mov
and
shlb
pop
outsb
jl
pop
sub
push
or
adc
mov
mov
js
cmp
mov
mov
fmull
cmpsb
pop
or
jecxz
dec
repz
xlat
dec
loope
add
xchg
test
push
sbb
adc
aaa
add
push
sbb
jmp
jns
inc
rolb
dec
enter
xchg
fcoms
mov
xor
xor
out
xor
adcl
jno
mov
or
es
stc
push
push
jmp
cld
loope
mov
outsl
iret
push
and
das
cmp
divl
jg
es
pop
in
add
push
lahf
sub
in
movsl
inc
ret
adc
cmp
dec
adc
into
mov
dec
push
cld
movsl
data16
lods
push
loopne
xchg
or
clc
fdiv
cmpsl
add
rorl
shl
push
rcrl
incb
pop
data16
jb
add
mov
xor
sbb
mov
cmc
xchg
aad
mov
pop
xchg
dec
les
shlb
jmp
cmp
pop
inc
push
mov
add
mov
xchg
sbb
push
add
jg
add
mov
xor
push
filds
pop
testb
andl
pop
inc
xchg
push
inc
xor
and
cli
push
sarl
shll
xchg
jge
inc
scas
dec
mov
lahf
dec
push
je
popa
push
mov
cmp
lahf
subb
xchg
cmp
or
addr16
push
xor
mov
dec
fisttpll
cmp
lods
pop
ror
mov
ja
pop
jle
pop
add
bound
pop
ret
push
inc
or
cs
sub
push
or
jp
xor
xor
add
cs
and
jo
mov
add
lret
add
push
in
lahf
inc
add
pop
add
push
pushf
outsb
xchg
fwait
lock
pop
lock
or
xlat
add
lods
and
push
adc
imul
imul
jp
add
adc
dec
and
nop
inc
mov
jno
lea
out
ret
inc
lret
adc
cmp
fbstp
add
add
push
cmpb
jbe
add
add
lret
ljmp
mov
out
dec
mov
jmp
loope
sub
push
pop
cld
loop
popf
jmp
add
loopne
pop
sbb
lods
push
stos
push
insb
mov
sbb
mov
aam
and
inc
jnp
je
mov
sub
xor
mov
ret
clc
jmp
mov
pop
adc
push
push
jns
call
repnz
sub
imul
xlat
sub
or
jmp
mov
cld
dec
adc
adc
xor
pop
xor
mov
jnp
add
bound
clc
or
push
and
and
push
gs
pusha
adc
pop
pop
scas
mov
jle
jle
popf
add
xor
test
mov
jnp
cmp
dec
xchg
jo
adc
push
mov
out
and
inc
lea
jge
pop
or
add
push
orb
or
popa
mov
rolb
dec
cmc
adc
stos
mov
add
inc
jnp
into
dec
sbb
idivb
dec
sub
shl
dec
js
inc
mov
fstl
push
pop
dec
cli
subb
inc
jb
sbb
add
fists
inc
sub
add
sbb
imul
xor
dec
out
jbe
lea
or
pop
scas
cmp
roll
inc
in
fs
pop
andl
jp
and
jecxz
fnstsw
sub
movsb
or
pop
in
pop
shrb
subl
mov
leave
stos
push
sub
in
and
mov
stos
out
lahf
or
cmpb
mov
add
or
sub
movb
sbb
je
bound
pop
in
dec
or
pop
inc
aad
imul
in
testb
adc
icebp
test
mul
inc
or
fisttpll
std
insl
int
daa
mov
outsb
inc
in
mov
adc
inc
icebp
cld
push
adc
cmp
lds
sub
jbe
jo
xor
xor
sti
in
repz
and
lcall
sbb
dec
cmp
int
cmc
jge
les
mov
push
jne
cmp
push
addr16
or
adc
imul
push
repz
roll
ja
sbb
and
push
jecxz
jb
lea
in
pop
dec
movsl
pushf
cmpsb
add
lds
flds
inc
push
clc
xchg
lret
stc
sub
mov
in
cmpsl
add
daa
or
mov
insb
mov
adc
mov
mov
mov
sbbl
pop
mov
je
aaa
xchg
aam
leave
ja
push
fldl
movb
test
add
cs
in
sub
fsubrp
ss
jnp
lods
popf
loopne
dec
lcall
cmp
jne
loopne
sub
sub
push
fs
sbb
sbb
add
leave
je
stos
or
cmpsb
lret
sub
sub
xchg
mov
lock
inc
dec
daa
jne
jmp
pop
xor
les
jo
pop
rcll
test
push
mov
sahf
aad
dec
dec
adc
sbb
or
scas
je
adc
arpl
pop
inc
jmp
mov
jo
push
pop
int3
mov
push
inc
dec
enter
mov
test
mov
mov
inc
gs
pop
xor
jnp
push
and
outsb
mov
mov
cmpsl
je
push
sub
sbb
xchg
add
cld
out
std
inc
loope
add
dec
add
xchg
xchg
mov
add
int
bound
push
popa
mov
inc
hlt
cmc
push
cmpsl
push
js
sub
jl
and
push
sahf
mov
shll
and
sbb
test
mov
out
test
ljmp
push
std
cmp
xlat
xlat
dec
movsb
jo
pop
sub
or
lock
adc
pop
iret
jmp
cwtl
mov
leave
mov
pop
push
or
int3
cmp
pop
add
push
dec
mov
int
insb
daa
sub
shr
xor
cwtl
mov
icebp
lock
pushf
add
push
and
pop
dec
fdivrs
enter
fsubp
rorb
out
or
jmp
cmp
fcoml
sbb
dec
jno
scas
sub
jno
or
jae
push
inc
mov
sub
pop
push
mov
pop
push
mov
and
nop
shl
jmp
push
test
dec
out
stos
sub
je
aad
add
sub
add
roll
out
mov
xchg
xchg
rcll
sub
pop
cmp
cmc
or
test
push
xchg
mov
dec
stos
adc
stc
ja
pop
out
mov
adc
jns
push
repz
in
cmc
jle
fisubl
mov
xchg
pop
mov
jg
lods
cmpsl
mov
andl
and
ret
xchg
popf
and
pusha
inc
cmp
or
jae
popa
and
js
andl
xor
sti
mov
arpl
inc
push
push
push
or
sub
pop
lret
test
cltd
xor
xlat
stos
xor
in
push
aas
jae
outsb
and
aad
cmp
ja
push
and
leave
mov
jbe
add
mov
test
mov
xchg
adc
cvtps2pd
sti
enter
push
decb
out
and
inc
addb
aaa
gs
imul
cmp
add
push
jmp
jbe
and
mov
pop
push
data16
adc
pop
dec
cmp
mov
ret
jb
cmp
dec
mov
stos
scas
loope
ja
mulb
xorb
xchg
fnsave
fadds
loopne
jmp
or
pop
mov
or
inc
add
push
sub
sub
insb
jg
std
inc
loopne
mov
add
das
sub
jle
rorl
out
out
xor
enter
inc
shrb
test
int
outsb
lock
gs
ss
out
jo
sub
push
mov
pop
pop
xchg
rorb
mov
and
nop
out
inc
cwtl
testl
testb
js
xor
xor
out
aad
mov
mov
js
xor
or
sub
lods
add
out
jae
add
pop
stos
and
push
mov
call
push
mov
call
pop
mov
cltd
bound
mov
cmp
inc
iret
or
adc
jae
scas
or
and
mov
jno
xor
xor
fs
dec
mov
sbb
dec
dec
sub
cmc
or
sub
jnp
das
stc
dec
icebp
xlat
movsl
jp
es
bound
jp
push
jge
repnz
popa
cmp
push
outsl
fnstsw
imul
mov
or
mov
pop
add
and
push
aad
sub
leave
mov
cmp
jns
filds
pop
jno
push
push
mov
jae
int
mov
repz
pop
mov
push
adc
ja
ret
pop
jge
divl
mov
not
xchg
pop
mov
xor
andb
fidivl
and
mov
xchg
xchg
movsb
cmp
call
orb
add
mov
mov
inc
mov
notl
mov
xor
test
daa
pusha
push
gs
andl
pop
nop
ja
push
xor
jmp
mov
and
insb
ret
push
ret
mov
repz
cmpsl
push
dec
mov
jo
dec
loope
sbb
pop
nop
js
lret
pop
ret
nop
adcb
or
inc
dec
jnp
dec
mov
push
rcrl
xchg
pop
xchg
xchg
xchg
rorl
pop
stc
bound
or
xor
add
xor
add
shll
fiaddl
cltd
rol
add
clc
or
cld
dec
push
push
jg
jg
out
push
test
out
enter
cmpsw
mov
cwtl
inc
cmpl
je
jmp
stc
mov
out
cmc
in
fwait
adc
jnp
jbe
loop
jne
inc
cmp
inc
push
rol
lds
shrl
mov
mov
sub
xor
add
cmpsl
pop
adc
pop
out
imul
xchg
std
and
sbb
xchg
cmp
imul
ret
pop
cwtl
jbe
mov
push
insl
inc
stos
or
sub
adc
imul
mov
lods
shlb
sub
or
daa
int
cli
pusha
push
pop
shr
add
mov
adc
xchg
mov
or
xchg
inc
cmc
mov
sub
jge
ljmp
test
lods
sbb
mov
popw
or
xor
inc
repnz
fdivrl
into
add
or
fs
mov
and
pop
pop
fucom
dec
push
mov
jne
push
mov
pop
lret
mov
or
push
inc
dec
shr
mov
xchg
je
lock
xchg
add
lahf
add
push
add
sub
arpl
mov
jg
clc
push
jae
rclb
enter
icebp
fmul
js
push
jmp
sbb
mov
daa
push
bound
fldt
mov
not
shlb
cltd
mov
add
add
fmull
outsl
sub
xchg
jge
pop
inc
fdiv
cmp
outsl
or
adc
shr
pop
sub
adcb
dec
popf
pop
movsl
or
dec
data16
add
jmp
cli
and
aas
add
cmp
add
push
mov
push
mov
in
pop
pop
pop
sub
aaa
imul
incb
rclb
add
and
pop
mov
mov
loope
xchg
dec
mov
push
cli
jmp
sbb
inc
or
outsb
mov
fsubl
and
clc
repz
inc
mov
inc
push
movsl
mov
dec
xor
add
mov
loop
in
mov
test
icebp
dec
je
scas
aam
sti
mov
mov
daa
loop
stos
pop
dec
jecxz
or
dec
inc
cmp
pop
cld
jg
add
mov
adc
mov
lret
data16
push
mov
in
xchg
jle
mov
scas
jg
mov
jle
xor
shll
sbb
xchg
mov
outsb
ja
inc
sub
jg
fldenv
mov
mov
lea
or
and
jg
jmp
cs
cmp
pop
add
dec
jmp
mov
imull
ficoms
adc
filds
lock
dec
sbb
fwait
std
ljmp
cli
lret
mov
push
and
pusha
daa
neg
clc
bound
dec
jl
pop
dec
dec
adcl
and
mov
adc
add
fldl
insl
sub
sub
out
mov
pop
test
or
xchg
cmc
or
add
push
add
mov
add
dec
cmpsb
popf
icebp
mov
inc
jge
je
lds
je
lods
cmp
sbb
ficoms
lods
inc
int3
or
mov
jp
pop
jmp
scas
icebp
or
inc
inc
dec
adc
or
pop
imul
adc
or
sbb
test
adc
sub
or
js
and
mov
xor
or
xor
xchg
sbb
mov
xor
popf
sbb
and
call
xor
ja
out
rcl
testb
mov
xchg
or
fisttps
dec
inc
shr
inc
mov
bound
xor
movb
cmpsl
add
inc
add
paddsb
test
push
sbb
sbb
or
sbb
and
adc
jno
jbe
mov
sbb
stc
pop
xor
andb
sbb
and
xchg
and
fnsave
pop
out
cmp
lea
fmul
popa
xlat
sbb
inc
mov
cmp
ljmp
adc
notb
xchg
dec
xor
pop
or
imul
pop
mov
push
pusha
or
aaa
or
or
mov
xor
rcrb
add
leave
or
sub
push
jl
dec
adc
adc
cltd
nop/reserved
lods
and
sbb
cltd
adc
les
adc
adc
sub
pop
pop
imul
xor
push
push
adc
adc
adc
or
hlt
adc
xchg
dec
enter
or
je
inc
outsl
mov
movsb
ss
les
decb
out
xchg
pushf
inc
loopne
jae
lds
cmpb
into
xchg
adc
aam
out
or
cli
adc
shll
and
sub
shll
scas
xor
and
adc
sbb
repz
adc
mov
jnp
or
jne
sbb
push
test
pop
int3
push
insb
or
xchg
sbb
and
cwtl
stos
adc
int3
or
xchg
add
sub
call
push
inc
and
and
add
or
xchg
pushf
cld
call
adc
inc
or
inc
adc
cmp
jne
jmp
mov
push
mov
add
inc
popl
or
jne
testl
push
nop/reserved
push
xchg
jg
popf
sarl
rorl
test
inc
test
mov
add
push
sub
cli
adc
popl
fwait
push
js
and
or
adc
adc
push
pop
mov
mov
nop
push
stc
das
cld
and
adc
xlat
mov
mov
jl
negb
bound
and
xor
and
sahf
pop
mov
imul
push
sub
leave
cmp
mov
cs
pop
jo
sbb
sub
dec
les
outsb
cmp
in
aas
jecxz
or
pusha
gs
in
adc
xor
cs
and
bound
add
dec
stc
add
in
inc
icebp
out
outsl
or
xor
enter
cmp
inc
and
or
push
rolb
inc
xor
js
sbb
ljmp
push
jg
xor
mov
repnz
dec
xchg
pop
lahf
shr
jae
sub
and
nop
or
mov
mov
adc
mov
jnp
jae
xchg
mov
imul
imul
into
inc
pop
imul
orl
mov
push
scas
fldl
shl
pop
and
jmp
rol
outsl
incl
xchg
insb
mov
and
cmp
adc
mov
and
jg
cmp
nop
dec
out
mov
mov
in
fyl2xp1
xor
outsb
int3
arpl
pop
or
mov
pop
mov
sahf
les
xchg
mov
loopne
orl
int3
out
mov
push
test
fmuls
in
sub
shll
insb
mov
enter
or
jae
or
fwait
pop
jmp
mov
push
sahf
sarb
jp
pop
sub
movsl
push
pop
xorl
mov
pop
pop
js
push
dec
cmp
cs
cld
mov
or
add
push
jne
dec
out
adc
add
sub
mov
dec
inc
mov
inc
jnp
dec
add
outsb
cwtl
dec
testl
test
mov
and
ret
fadds
sbb
imul
cmp
pop
push
push
push
inc
or
jb
cmpsl
pop
xor
push
pop
sub
mov
add
je
sbb
movaps
cmp
leave
or
pop
dec
dec
add
orb
and
or
mov
and
pop
cmp
or
cmc
jg
sti
pop
lcall
add
sbb
cmc
sar
dec
dec
movsb
add
repz
imul
or
adc
mov
sbb
cmp
mov
popa
mov
shll
ret
test
lods
and
pop
inc
sub
sti
pushf
mov
add
inc
add
mov
pop
out
and
jge
out
pop
ret
in
cmp
rorb
pop
add
loopne
push
andl
dec
jle
push
lods
or
orl
cmp
push
or
rcrb
mov
xor
cmp
inc
dec
int3
mov
push
inc
mull
jmp
sub
pop
xor
adc
and
pop
pop
sub
push
addb
push
push
jmp
xlat
jle
or
ljmp
loopne
sti
ja
sub
mov
fsts
std
xchg
idiv
add
arpl
jo
dec
xchg
cltd
sub
sbb
xchg
loope,pt
adc
dec
adc
or
jle
jg
push
icebp
or
fsubrs
add
je
pop
pop
mov
push
jo
mov
cmp
into
xchg
cmp
and
jle
dec
cmc
and
sbb
xchg
inc
push
pop
adc
sbb
movsb
hlt
jns
aaa
push
inc
pusha
fs
ret
pop
jmp
sub
mov
mov
popf
xor
xchg
pop
sahf
divb
int
mov
fisttps
das
scas
cmp
add
cld
jne
dec
outsb
roll
es
xchg
sti
xlat
or
int3
push
jmp
and
out
call
push
jle
pop
mov
shl
in
mov
roll
sti
pop
xorb
ja
xchg
adc
jns
mov
js,pt
dec
movlhps
sbb
fisubrl
or
cli
in
xor
and
nop
and
push
cmpsb
pop
je
repnz
xchg
and
repz
rol
or
fbstp
ret
dec
icebp
idivl
pop
fnclex
mov
popa
cmp
mov
pop
push
lcall
sub
push
lret
cwtl
jle
mov
int
inc
icebp
mov
pop
neg
or
mov
push
cmp
mov
push
cli
sahf
insb
or
rcrl
add
and
adc
or
popf
push
pop
mov
and
adc
push
mov
adc
fisubrl
js
mov
popf
data16
sbb
mov
outsb
cmpsl
stc
lods
inc
mov
push
addr16
and
pop
les
adc
adc
mov
sbb
and
lret
pop
cwtl
xor
mov
sub
out
ret
icebp
das
inc
stc
push
movsl
std
sub
fildll
pusha
nop
pop
dec
lock
and
pop
and
cmp
sbb
fisubs
out
out
xchg
cmc
add
pop
and
enter
sbb
push
sub
add
push
push
mov
and
dec
xchg
cmp
mov
outsl
add
pop
push
out
rcrl
nop
adc
aad
push
ja
repnz
push
add
daa
mov
inc
or
xor
or
daa
and
pop
sub
push
inc
repnz
and
and
add
mov
dec
repz
rcll
js
scas
cs
dec
or
mov
int3
enter
adc
add
pop
jmp
pop
inc
xor
pop
add
ret
movzwl
jmp
lret
adcb
mov
repz
add
std
sbb
orb
push
inc
flds
out
xlat
and
inc
aas
adc
or
push
loope
call
loop
jmp
test
jmp
lret
push
add
add
sbb
mov
push
add
sub
push
mov
ret
jge
pushf
xor
jne
mov
lock
dec
cmp
aad
in
fisttpl
push
lret
ljmp
push
fwait
or
aad
sti
push
sub
cmp
cmp
mov
jp
movsl
cli
hlt
xchg
lret
int3
or
mov
movsb
push
scas
popa
pop
xchg
into
test
imul
adc
push
inc
jmp
xchg
pop
push
or
rcll
pop
sub
and
pop
and
dec
ja
setle
and
cld
test
push
loopne
and
test
dec
mov
sbbb
call
ja
and
iret
inc
mov
cmc
push
ret
xchg
mov
sub
dec
in
mov
push
inc
stc
sub
das
repnz
jle
dec
xlat
inc
sub
pushf
mov
inc
mov
inc
bound
insb
nop
adc
or
and
mov
add
icebp
lret
jge
sbb
lods
cli
daa
pop
hlt
ds
lods
mov
xor
xor
hlt
cmp
les
xor
fidivrl
jmp
into
inc
mov
push
dec
into
scas
out
bound
sahf
sub
lcall
xchg
jg
push
xor
jmp
mov
shl
xchg
test
dec
in
push
lcall
nop
imul
inc
inc
pushf
mov
jmp
push
pop
adc
nop
das
mov
push
push
mov
sub
inc
lret
ficomps
ja
jmp
ja
jo
lea
rol
pop
pop
in
lock
cmp
sbb
cwtl
push
nop
sahf
or
xor
xor
pop
std
or
fistpll
cmc
mov
mov
push
dec
push
pop
push
cmc
jle
inc
push
add
inc
shrb
pop
pop
sbb
icebp
pop
lret
pop
jmp
add
xor
lahf
out
ret
icebp
mov
imulb
or
ljmp
jmp
jno
loop
clc
sahf
or
pop
sub
inc
clc
sti
jle
and
ds
inc
mov
or
or
pop
add
jle
cld
hlt
pushl
sbb
push
repnz
inc
xor
xchg
pop
lret
mov
dec
or
jnp
add
sbb
call
adc
pop
dec
push
add
pop
mov
cltd
clc
jb
cmp
scas
fs
dec
sub
insb
pop
cmp
ret
add
rcl
add
xchg
or
cmp
call
jo
add
and
pop
sub
jp
adc
psubusb
pop
imul
cld
mov
sub
popf
gs
sbb
xor
dec
and
lret
enter
cmp
mov
xchg
loopne
xchg
shlb
cs
imul
jb
or
push
pop
sti
xor
movsb
dec
pop
or
push
test
push
pop
push
mov
loope
dec
je
add
pop
call
aam
shll
mov
testl
lods
add
mov
fcomps
loop
out
sbb
jne
mov
or
dec
jb
divb
aas
es
js
mov
push
cmp
mov
stc
aad
repnz
dec
inc
in
or
add
jmp
mov
dec
jge
icebp
je
pop
xor
dec
mov
push
xlat
int3
cltd
push
jmp
in
or
fdivl
dec
xchg
cmp
jmp
sub
mov
mov
repnz
cmp
gs
sbb
xor
cltd
ljmp
loopne
ss
inc
xchg
lods
sbb
stos
adc
inc
mov
stos
mov
stc
jnp
fildll
sub
xchg
lock
xchg
adc
cld
cmpsl
icebp
jmp
mov
mov
jbe
in
sub
ret
test
dec
test
jle
xor
int
add
out
cmpb
or
mov
mov
pusha
out
adc
push
or
aam
mov
das
movsb
inc
dec
pop
push
xchg
ljmp
sti
inc
or
jmp
jo
stc
or
inc
cmp
or
xor
jnp
test
jg
sub
hlt
jmp
fcompl
nop
dec
sbb
jl
popf
push
dec
leave
push
push
or
js
mov
push
fs
mov
push
mov
pop
push
xor
not
sub
cwtl
ret
push
jp
pop
cmc
addb
cwtl
test
sub
dec
add
and
sbb
mov
pop
mov
jb
sahf
rclb
ds
mov
xor
jg
mov
and
pop
fcomps
mov
add
push
leave
sub
push
inc
cmp
insl
scas
mov
aas
cmp
adc
push
jg
shlb
dec
jo
xchg
fsubrl
pop
inc
rclb
or
hlt
mov
mov
dec
mov
test
cmp
lahf
repz
xchg
push
and
sub
movsb
mov
mov
inc
jle
push
mov
dec
add
xor
lock
dec
add
es
cmp
jmp
enter
outsb
es
push
roll
jp
cmp
fxch
inc
mov
add
cwtl
rorb
add
sub
stc
dec
lds
pop
fistl
pop
mov
out
sbb
add
or
or
push
lods
fs
mov
push
das
mov
xchg
mov
clc
mov
jg
xchg
dec
add
sub
fwait
ret
loop
adc
out
inc
push
add
dec
adc
add
pop
xorb
dec
push
mov
leave
stc
fidivrs
lret
rorb
leave
daa
fincstp
push
push
push
rol
jmp
enter
mov
outsl
lock
in
inc
dec
cmp
mov
aas
add
pop
addb
add
imul
jae
sti
popa
jmp
mov
cmp
sbb
add
sbb
dec
add
xchg
repnz
push
repnz
daa
in
scas
stos
push
pushf
shlb
aam
aad
cli
mov
ret
filds
mov
stos
pop
xchg
push
ds
push
bound
push
jns
bound
das
inc
or
xor
addr16
push
push
subb
in
lock
ret
out
fdivs
popf
incb
and
lahf
js
xor
aaa
fmul
mov
shr
jmp
test
push
mov
or
fisttpll
push
jmp
mov
add
ret
xlat
inc
into
pop
push
lret
mov
outsb
jle
pop
pop
cltd
mov
mov
outsl
or
out
dec
in
rol
jmp
push
ja
sub
sahf
cmpsl
cwtl
jmp
dec
out
es
imulb
xchg
push
xchg
cmpb
mov
mov
orl
add
jo
hlt
sbb
xor
mov
inc
ljmp
xchg
jle
leave
and
xor
add
push
add
jl
inc
jle
dec
rcrb
dec
add
inc
sub
mov
orl
add
shr
jno
mov
out
pop
push
mov
lods
push
sub
xor
add
jmp
cmpl
js
xor
push
xor
mov
enter
adc
js
mov
loopne
mov
movsl
subb
jae
pop
push
xchg
cmp
or
pop
cmc
outsl
hlt
mov
mov
cmp
adc
pop
pop
stos
das
cmp
jmp
push
jg
inc
loope
or
call
pop
jecxz
push
sub
imul
sbb
xchg
ljmp
repnz
mov
sbb
and
mov
outsb
inc
or
fwait
inc
push
or
or
cld
outsb
or
xor
adc
daa
aas
xchg
add
jbe
xor
mov
mov
nop
jl
out
and
in
pop
inc
sub
mov
and
movsl
adc
add
dec
lods
ja
push
mov
pop
push
add
call
jae
sub
insb
fwait
or
hlt
aam
ret
jbe
je,pn
loop
es
mov
sahf
lods
subb
pop
hlt
jae
xchg
fld1
or
push
push
test
and
mov
sub
sbbb
imul
or
inc
test
es
subb
dec
pop
push
xor
pop
ja
jno
mov
sbb
add
ficompl
jmp
push
cwtl
inc
and
es
mov
cmp
push
xor
dec
fimull
outsb
shll
call
and
sub
cltd
popf
cmp
cmpsl
xor
mov
push
pop
in
fwait
push
mov
pop
jo
jnp
dec
adc
ret
lret
test
or
pmulhuw
movsl
mov
cmp
or
mov
or
bound
sub
call
pop
pusha
mov
lahf
xchg
mov
hlt
shll
dec
pop
mov
dec
xchg
loop
jb
and
add
add
add
movsb
add
add
bound
and
add
out
loope
aas
mov
fdivs
jmp
and
pop
or
pop
ltr
or
mov
out
not
xor
hlt
push
sbb
add
pop
push
cmp
fmulp
imul
add
and
lock
inc
cmp
or
out
enter
mov
cld
push
in
aaa
add
mov
push
pop
xchg
fimull
add
imulb
mov
addr16
sub
mov
cmp
cmpsb
pop
jge
ret
call
lahf
ss
push
and
jne
das
pop
mov
maskmovq
imull
and
fs
shr
lret
push
push
push
push
xor
cmpsl
arpl
jbe
incb
xor
mov
hlt
stos
das
mov
xchg
adc
movsl
loop
ds
sub
cmp
mov
pop
loop
in
mov
das
inc
sub
andl
push
pop
add
and
pop
hlt
xorl
mov
call
ljmp
out
mov
sub
es
mov
push
cmpsb
add
or
pop
stc
xchg
stc
push
insl
or
or
lods
es
pop
jmp
jmp
push
sbb
scas
lock
push
mov
jecxz
xor
jnp
pop
sbbl
addl
imul
fwait
push
adc
jno
xor
mov
inc
mov
dec
call
cmp
out
movsl
ja
mov
xor
ss
mov
subl
xor
push
push
add
dec
mov
xchg
jp
or
xchg
or
and
int
mov
jg
fidivs
or
jmp
jnp
dec
nop
sub
pop
div
and
dec
pop
mov
lods
cmp
cmp
bound
movl
dec
in
mov
mov
je
push
xchg
cmpsl
xor
mov
push
jle
mov
cmpsl
add
sub
mov
cmp
dec
out
cmp
pop
xchg
jnp
fucom
sub
sub
into
jo
add
or
push
jmp
push
sub
mov
push
jmp
ds
sub
or
fs
ret
xor
cmp
out
loop
lret
outsb
add
test
push
lock
dec
or
loopne
sbb
push
xchg
xchg
inc
hlt
loop
cwtl
pop
push
pop
cwtl
mov
inc
jecxz
and
adc
inc
sbb
pop
repnz
in
or
push
mov
ret
aad
sbb
ficoml
xor
pop
jo
xchg
adc
jle
add
jl
mov
or
pop
test
sbb
jmp
insl
aaa
int3
sbb
mov
mov
sub
pusha
add
push
mov
sbb
add
loope
push
jecxz
je
sub
pop
push
sub
lcall
or
jg
aas
or
les
pop
xor
ds
out
or
and
dec
js
notl
aad
in
bsf
andl
push
dec
pop
aas
test
xorb
push
jne
scas
push
jmp
mov
inc
sbb
outsl
jbe
sbb
jns
in
xlat
sbb
sbb
mov
repz
dec
fisubl
and
sub
xchg
test
xchg
decb
and
pop
mov
daa
cmp
dec
call
xor
xor
loope
insb
cmp
testl
add
push
adc
push
mov
jecxz
hlt
xadd
add
dec
pop
sarl
pop
xchg
jo
repnz
shld
daa
loope
aaa
cmc
dec
call
mov
xchg
pop
repnz
iret
pop
repz
jg
punpckldq
jb
pop
mov
bound
push
ja
lods
sbb
sbb
scas
das
hlt
sarb
addr16
jl
rcll
popf
jmp
add
push
push
pop
shl
push
jmp
ret
xor
pop
or
cmp
shrb
dec
mov
adc
daa
mov
or
or
xor
jmp
pop
sti
sub
sbb
push
shrl
fwait
mov
aam
das
icebp
int3
dec
loopne
aaa
xlat
xor
ds
sub
inc
or
inc
jl
mov
add
or
aas
jle
es
sub
es
lret
inc
sub
lea
mov
shr
popf
cli
cmpsb
or
cmp
sbb
and
outsb
xchg
add
dec
mov
inc
push
flds
xlat
pop
popf
scas
test
stos
aam
mov
test
mov
in
mov
jno
lds
mov
xor
leave
cmpsb
or
sub
fwait
add
aaa
mov
les
push
push
inc
mov
mov
scas
pop
mov
push
push
ds
xsha1
cmpsb
mov
add
mov
not
nop
fld
jmp
xorb
js
cmp
int
into
pop
out
pop
pop
adc
jmp
notl
push
shll
cwtl
call
pushf
sub
int3
mov
movl
not
inc
mov
xchg
gs
es
push
push
aam
jmp
pop
lahf
mov
aam
movsb
popa
jmp
or
jg
add
fidivs
loopne
add
add
das
adc
xchg
adc
out
and
jnp
and
inc
ret
mov
daa
ret
loope
in
daa
filds
mov
movsl
jne
fistpl
popw
ret
jb
fadd
mov
sbb
shlb
pop
pop
iret
test
and
dec
pop
lret
sub
add
mov
pop
jne
sbb
adc
add
movsb
jb
push
dec
sbb
adc
js
push
mov
sti
pop
test
add
add
out
adcb
roll
sub
or
mov
mov
or
lret
pop
cmp
sub
das
add
ret
es
push
icebp
xor
push
push
and
push
push
pop
inc
or
nop
rorb
jno
push
rcll
ljmp
jle
jo
enter
andb
sub
sbb
push
pop
xchg
or
sti
pop
and
xchg
jno
sub
addb
pop
or
xor
aam
sbb
and
mov
mov
pop
mov
xor
jl
mov
push
ss
cmc
sub
sbb
cmp
cld
in
add
jle
shl
xor
sti
inc
adc
lea
out
lods
les
jb
outsb
popa
js
mov
int3
jge
repz
sbb
pop
imul
ret
adc
sbb
sbb
mov
outsb
fs
subb
dec
pop
sbb
in
mov
or
jno
pushf
addr16
or
cmp
cmp
lahf
add
sub
push
push
ss
test
xor
mov
inc
nop
fmull
add
sub
inc
aas
ret
pop
cmp
jl
iret
movsb
jecxz
lods
into
fmulp
lea
lods
dec
sub
push
jge
push
cld
mov
pop
jae
clc
lret
pop
jo
jns
mov
call
sub
jmp
and
fucom
fs
rsqrtps
jg
add
data16
lret
jbe
xchg
or
push
cmpsl
push
cwtl
lret
bound
jg
push
inc
mov
clc
jae
in
xchg
xchg
mov
sbb
push
jge
inc
push
cmp
pop
xchg
orl
adc
lcall
mov
add
imul
or
shlb
dec
cli
push
push
hlt
dec
pusha
in
jne
neg
and
imul
and
mov
xor
sub
pop
dec
sub
mov
dec
syscall
imul
adcl
mov
scas
xchg
not
cltd
or
add
imul
cmpsb
or
xor
out
and
cmp
or
adc
inc
mov
cmp
loopne
lahf
cs
leave
punpckldq
fldenv
pop
imul
aaa
add
adc
stc
sbbb
fsubrp
hlt
enter
rcrb
cmpsb
or
mov
mov
add
pop
fstl
lahf
push
fidivl
add
xchg
jle
nop
or
jmp
push
pop
or
ss
imul
push
divb
cmp
test
xor
add
sub
shrb
loopne
je
cs
push
iret
sbb
add
add
mov
sub
pop
sti
xor
out
lahf
push
jnp
pop
jecxz
or
xor
or
jo
popf
cld
jns
adc
jp
push
das
and
and
add
and
in
mov
push
sub
xchg
dec
andb
nop
add
adc
mov
jo
out
jmp
mov
pop
rorb
dec
and
int3
icebp
adc
push
dec
in
sbb
xor
mov
pop
and
data16
or
cmp
je
icebp
inc
jmp
cltd
sbb
add
stc
lcall
js
xchg
jbe
push
mov
mov
pusha
mov
jne
sub
loope
xor
loop
js
vandnps
xchg
push
scas
push
call
mov
arpl
in
cmc
cltd
xor
iret
dec
inc
push
mov
outsb
ret
call
sbb
lods
js
mov
or
mov
or
out
jg
add
sbb
data16
ficoms
add
sub
pusha
pop
aam
data16
sub
pop
or
enter
shrb
add
adc
fs
and
aaa
lods
xor
xchg
push
sub
notl
xchg
add
out
test
and
jmp
jo
add
xchg
aaa
ret
mov
mov
xor
xor
clc
outsl
int3
imul
out
push
repnz
xchg
cpuid
popl
and
sub
mov
sub
add
sbb
sarl
sbb
loope
shlb
jmp
test
jo,pn
mov
cmc
loopne
push
filds
push
das
mov
jl
jmp
in
out
add
push
in
push
cli
nop
mov
je
sub
or
sahf
xchg
push
mov
adc
scas
or
repz
sub
xor
jecxz
xchg
xor
js
rol
push
pop
mov
jo
fistps
mov
lahf
loopne
dec
push
mov
test
xchg
sar
push
dec
in
jb
sub
stos
mov
or
mov
inc
mov
cmp
add
sahf
push
cwtl
jb
adc
adc
xor
in
cmp
lea
mov
fdiv
int
mov
add
call
fs
pop
inc
or
decl
mov
jbe
cmp
add
push
and
lea
add
add
mov
cwtl
int3
mov
pop
neg
std
sbb
push
push
push
cmp
test
sub
dec
cmp
jg
or
push
jbe
aad
repz
insb
xor
jno
out
mov
and
mov
xchg
jp
out
dec
cmp
sub
cmp
test
cmp
xor
dec
mov
cmp
out
push
cld
out
xchg
fadd
imul
scas
lret
dec
mov
sub
mov
fnstsw
inc
or
mov
bsr
jno
push
fnstcw
xorl
ret
mov
and
push
lret
pop
js
nop
lock
cli
into
loopne
dec
or
mov
nop
push
mov
jbe
cmc
pop
push
nop
cmp
mov
imul
mov
dec
inc
nop
or
adc
imul
repz
jb
pop
or
adc
mov
js
and
lock
adc
gs
out
pop
out
push
inc
pop
sarb
mov
mov
jne
mov
mov
lahf
pop
test
in
cmp
je
fdivl
adc
jmp
test
push
daa
or
mov
pop
outsl
out
test
je
scas
xlat
jmp
mov
dec
aas
mov
add
jmp
lret
pop
add
dec
push
adc
adc
adcb
popa
imulb
inc
inc
in
or
adc
inc
inc
add
mov
dec
add
xor
jmp
mov
rol
jo
lods
pushf
mov
or
push
dec
pop
or
aad
push
cmp
mov
in
mov
fdivrp
dec
js
add
mov
repz
mov
fldcw
cmp
sbb
clc
shll
push
aas
pop
shlb
testl
ret
pop
ret
adc
xor
jmp
push
or
push
add
xchg
leave
and
out
les
pop
icebp
mov
or
add
jmp
mov
frstor
jae
pop
mov
jb
sub
flds
jo
popf
sbb
push
shrb
add
pop
dec
rol
pop
cltd
mov
in
xor
sub
push
je
push
xchg
icebp
pop
jmp
and
cmp
add
push
sub
jl
adc
sub
push
push
stos
dec
in
sub
push
lahf
push
idivb
mov
fistps
mov
push
fisttpll
push
or
ret
inc
or
shrl
sub
cmp
sbb
iret
inc
pop
or
test
mov
push
enter
xchg
and
sahf
loope
jmp
xor
test
icebp
jmp
or
xor
add
mov
jle
add
icebp
cmp
dec
push
push
sub
mov
pop
push
lcall
xchg
ljmp
dec
or
jns
lahf
or
jmp
push
addr16
daa
out
xor
cld
sub
ja
adc
in
add
dec
scas
mov
pop
and
cld
lods
jbe
mov
push
adc
jl
enter
mov
push
cli
jmp
notl
push
imul
js
adc
faddl
cmc
jg
pop
push
push
int3
rorb
ficomps
sub
add
jmp
mov
xor
push
lcall
pop
fmuls
jno
test
mov
dec
cmp
mov
pop
rcll
daa
jns
stos
cmp
pop
push
xchg
flds
sub
xchg
outsb
add
inc
addb
test
xor
cs
adc
nop
icebp
loop
mov
dec
jecxz
mov
loope
sub
fsqrt
inc
mov
fildl
lahf
xchg
sub
outsl
je
roll
xchg
xor
das
add
sti
xchg
sub
stc
dec
dec
pusha
jbe
aas
mov
sub
enter
xchg
out
mov
repnz
sbb
mov
fsubrs
jg
in
dec
pop
add
sub
inc
sbb
ss
push
pop
ret
add
xor
lret
lea
jg
push
push
inc
pop
mov
pushf
dec
scas
add
jnp
xchg
and
dec
repnz
ret
jbe
ja
xlat
adc
cmp
sbb
push
add
push
scas
cmp
aas
dec
adc
cwtl
std
push
xchg
dec
push
bnd
and
hlt
lods
xchg
add
and
fstpl
movsb
inc
enter
add
test
push
push
push
dec
fmulp
gs
xor
sub
jecxz
xor
mov
sub
add
ds
mov
add
or
or
mov
inc
rol
add
dec
mov
cmpsb
sbb
xor
mov
in
ret
or
xor
xchg
add
pop
ss
loopne
ljmp
cltd
pop
out
not
daa
fbstp
add
push
fildll
int
in
adc
maxps
mov
ret
xlat
sbb
shlb
es
pusha
rclb
add
add
sub
aas
nop
lret
pop
add
les
fs
xchg
out
add
nop
jae
jmp
cmp
jmp
not
jae
dec
cmp
cmp
lcall
xor
sbbl
jae
xchg
js
and
insl
pop
inc
xor
int
inc
mov
jae
cmpsb
or
lahf
loope
mov
jl
ret
add
fistpl
cli
add
mov
pop
pop
mov
jg
xlat
pusha
repz
icebp
popa
daa
lods
pop
int3
sbb
inc
jbe
jns
test
lea
test
cmpsb
jp
jb
in
or
sbb
lahf
pusha
fidivrl
popa
in
cwtl
sub
in
or
sub
movsl
jp
xlat
mov
ret
subb
callw
mov
jae
xchg
sub
rolb
test
lds
mov
pop
push
mov
ljmp
pop
dec
push
lods
xor
fiadds
jb
lods
adc
adc
sar
xor
adc
xchg
xchg
sub
inc
cmc
in
ja
pop
jo,pt
mov
insb
pop
lock
jg
inc
aaa
mov
add
add
or
test
mov
xchg
shrd
in
fs
loopne
pop
fstpl
jo
mov
jp
sub
ret
xor
rcrb
arpl
mov
stos
lock
sbb
testl
gs
pushf
mov
leave
dec
in
mov
sbb
pop
mov
dec
adc
nop
xor
pop
jne
daa
push
test
lea
cmp
xchg
mov
adc
stos
popf
cmpl
jg
sbb
sahf
inc
test
xor
out
jns
or
cli
xlat
pushf
push
inc
lret
aad
daa
jmp
shll
cmp
sub
pop
fmuls
dec
cmp
lcall
pop
jle
es
sbb
add
xchg
std
cmp
fwait
inc
maskmovq
negl
test
shrb
cmp
fidivl
dec
outsl
mov
xlat
in
bound
ds
ss
shl
adc
clc
xor
xor
mov
pop
bound
xor
jp
inc
mov
fndisi(8087
ds
movsb
dec
rorl
dec
sub
push
inc
inc
clc
jmp
or
xlat
mov
jg
xchg
pop
bound
push
icebp
mov
pusha
mov
push
repz
mov
xor
mov
add
inc
sbb
loope
mov
es
arpl
pop
mov
sub
lret
jle
aam
int3
out
pop
stc
lds
sub
adc
adc
test
negb
sub
pop
inc
iret
sub
mov
je
mov
gs
into
in
add
push
xchg
fstl
es
cmpsb
out
or
pop
sub
adc
pop
fidivl
adc
inc
cmpsl
add
rorb
aad
int
cs
dec
mov
into
xchg
mov
push
out
daa
in
popa
push
bt
dec
and
mov
and
pop
mov
sub
leave
add
aam
inc
leave
inc
imul
xchg
out
xchg
adc
push
sub
mov
push
jae
mov
js
das
cmp
xchg
loopne
and
inc
ret
icebp
and
mov
aaa
test
sar
je
in
push
and
or
push
pop
push
or
push
movsb
or
push
cltd
negl
and
xchg
sub
lock
xchg
negl
popf
gs
mov
les
xlat
adc
decb
jmp
add
call
cmpsl
lock
adc
mov
mov
scas
or
inc
pop
js
dec
aam
cmp
inc
shl
mov
dec
xor
jne
out
add
out
les
mov
jno
jno
push
mov
or
lret
stos
mov
mov
jp
inc
sub
pop
mov
cmpsl
push
shlb
movhps
mov
inc
inc
mov
adc
pop
and
cs
dec
adc
or
int3
xor
shr
push
mov
pop
mov
push
mov
addl
mov
push
pushf
outsb
dec
cltd
out
mov
in
and
push
push
mov
jmp
leave
push
fldenv
cmp
fwait
inc
or
aam
jmp
sub
inc
push
lods
or
add
mov
cli
mov
add
andb
pop
jae
test
fcmovnu
shrl
dec
fnsave
in
and
pop
sub
ss
lcall
das
inc
repz
mov
pop
shrb
jl
inc
cli
insb
in
adc
push
pop
mov
ret
and
pop
mov
and
data16
pop
repz
add
shlb
cmc
pop
jmp
test
push
add
lods
add
repnz
push
test
rclb
fisubl
in
or
mov
mov
or
jmp
cld
or
cwtl
mov
jge
push
aas
cmp
dec
cwtl
fiadds
mov
push
outsl
shl
jmp
orb
inc
arpl
sahf
pushf
scas
ret
pop
rcrl
cmp
jne
add
enter
and
pop
enter
inc
jecxz
sbb
xlat
adc
cmp
test
mov
dec
inc
or
pop
dec
sub
add
inc
and
rorl
fildll
mov
or
sub
pop
je
or
add
lret
loop
stos
dec
arpl
jbe
sub
sub
enter
or
jl
outsl
sub
mov
jl
or
pop
add
lock
sbb
mov
add
cmp
add
dec
mov
popf
hlt
dec
out
sbb
outsl
in
jnp
or
ss
aas
cli
jne
mov
shrl
jno
cli
ljmp
sub
imul
pcmpgtd
jmp
sbb
adc
mov
lcall
gs
aam
dec
dec
mov
add
jmp
das
sub
jg
scas
push
sahf
sbb
xor
and
fldt
dec
jae
jge
dec
add
push
outsb
inc
popf
insb
and
sub
adc
add
pop
pop
xchg
or
scas
mov
sbb
add
xor
bound
add
add
pop
pop
add
push
mov
lock
jge,pt
xchg
aas
dec
shr
push
or
inc
add
pop
dec
jmp
loop
das
mov
imul
inc
cltd
mov
adc
add
xor
or
add
mov
call
loope
call
add
jnp
outsb
add
fdivs
sub
ret
shlb
shrl
out
ror
stc
roll
sbb
mov
adcb
sub
out
sub
push
jmp
sub
rep
push
pop
hlt
push
dec
xor
pop
ja
ljmp
sub
pop
add
pop
enter
data16
roll
mov
mov
pusha
call
mov
adc
cmp
sbb
pop
stos
mov
pop
cmp
imul
call
push
sub
sub
add
js
mov
pop
outsl
int3
sbbb
or
sub
mov
xchg
dec
xlat
sub
divl
dec
dec
enter
pop
call
mov
or
xor
ret
or
or
dec
xchg
out
jge
call
push
push
sub
test
add
cs
xorb
jmp
inc
sbb
lea
sbb
mov
adc
js
leave
and
xor
add
adc
inc
lret
lret
jle
sti
daa
push
std
sbb
sbb
adc
es
lret
loop
test
cmp
fcoms
shrl
push
and
notb
or
push
lods
jecxz
out
fisubl
inc
pop
jmp
or
cli
insl
incb
hlt
icebp
add
jbe
idiv
push
or
aas
inc
jnp
dec
jmp
pop
pop
sti
fcomps
mov
mov
arpl
mov
pop
movsl
and
xchg
out
shll
insl
shlb
bnd
mov
push
imul
push
jmp
and
loopne
push
xchg
pushf
inc
shll
cmp
je
cmp
ljmp
scas
popf
or
xchg
add
xor
or
pop
xorl
adc
sbb
or
sbbb
jb
aas
ret
stos
je
add
cmp
jno
add
daa
add
dec
pop
jb
mov
ljmp
ljmp
xor
aad
pusha
je
sub
pusha
mov
and
push
in
cltd
pop
jg
lds
aas
repnz
xchg
xorb
mov
pop
or
or
push
pop
int
sub
outsb
in
push
mov
pop
mov
or
sbb
sub
testl
cwtl
mov
mov
cwtl
out
and
lods
popa
cmpl
sbb
loop
repz
add
cli
popf
push
mov
add
cmp
not
add
mov
inc
dec
pop
outsl
mov
xchg
push
jbe
ljmp
icebp
loope
jp
inc
shl
cld
cltd
jbe
das
xchg
inc
shll
adcb
adc
addr16
inc
add
outsl
push
loopne
xor
movsb
push
out
test
in
lock
sbbb
inc
mov
jecxz
add
and
dec
add
sbb
cmp
push
cmp
jo
fildll
jge
imul
ret
pop
xchg
dec
add
add
sbb
rcl
in
and
mov
test
pop
push
push
cli
shrb
xchg
sub
push
dec
pop
inc
imul
inc
popf
inc
lahf
scas
jl
add
add
jp
icebp
add
adc
nop
inc
add
rcll
in
pop
jns
jnp
jnp
repz
cmp
dec
ds
adc
push
loope
sti
cmp
gs
into
rcr
pop
mov
sub
das
fcomps
xchg
dec
jmp
pop
mov
pop
dec
push
pop
je
mov
dec
testb
es
add
and
xor
aam
xlat
cmc
enter
add
nop
fs
sti
mov
adc
das
add
ja
bnd
ss
mov
in
mov
or
and
jb
or
jbe
inc
les
mov
pop
and
in
jb
jg
jbe
xchg
test
pop
out
movsb
jmp
dec
mov
popa
push
lods
pop
in
sub
aaa
jb
jle
lock
enter
add
inc
jmp
or
sbb
aad
enter
sub
and
adc
jno
jmp
pop
mov
push
mov
push
xchg
adc
jmp
pop
sbb
loop
leave
ljmp
nop
sub
mov
add
lret
push
cmp
dec
pop
jl
cwtl
dec
push
or
leave
sbb
jle
adc
ljmp
pop
ret
loop
and
mov
push
push
mov
addb
jmp
mov
scas
das
in
dec
sbb
lcall
mov
add
decl
cld
sbb
pop
repz
push
mov
sti
insl
imul
or
pop
loope
rolb
xor
add
mov
xorl
lock
inc
imul
jge
pop
mov
push
add
and
jae
cmp
sub
pop
or
aad
pop
jmp
mov
mov
push
push
mov
sub
inc
push
mov
cmpsb
bound
lock
xchg
cmp
cmc
loop
jb
imul
push
push
add
outsl
mov
out
mov
daa
push
shrl
xorl
jo
divl
icebp
insb
pushl
mov
push
jg
mov
jge
cs
dec
adc
lret
int3
dec
sarb
dec
cmp
jge
cmpb
je
int
dec
into
push
pop
or
shlb
inc
dec
in
add
push
les
data16
push
push
adc
adc
ret
sbbl
push
mov
or
shl
jne
push
call
push
mov
push
xor
cltd
or
sbb
in
mov
push
dec
add
add
or
test
mov
push
mov
dec
gs
in
add
push
pushf
mov
jmp
push
mov
push
cmp
xor
sub
daa
and
inc
sub
sbb
aas
dec
movsl
stc
or
or
or
jmp
lahf
or
loop
pop
pop
dec
pop
add
out
bound
ja
aaa
or
ss
jp
push
test
sbb
sbbb
pusha
int3
xchg
pop
or
or
pop
rol
or
addr16
adcb
cmpsb
pop
faddl
orb
pop
sub
jns
pop
jmp
ret
inc
jae
pop
icebp
mov
xchg
pop
aad
sub
jns
imul
jbe
ljmp
cmp
cs
add
scas
inc
jmp
push
fstl
std
in
test
and
add
cmp
je
jle
cmpsb
int3
cs
pop
xor
mov
arpl
fisttpll
rorb
jl
jns
dec
stc
outsl
xchg
scas
idivb
xchg
pusha
push
xor
std
mov
mov
js
sub
pushf
pop
outsl
negl
imul
fiadds
lret
or
call
pop
fdivl
or
gs
ja
or
mov
push
jmp
cld
mov
clc
push
cs
push
or
fstpl
sbb
lahf
pop
inc
sbb
mov
mov
sbb
inc
mov
iret
sub
mov
leave
int3
jmp
and
pusha
sub
jae
and
jmp
fisubs
clc
es
lods
aam
mov
or
xchg
adc
mov
mov
iret
inc
lret
outsl
in
or
popf
mov
add
movsb
pop
xchg
inc
adcb
push
dec
lods
add
insl
add
mov
jmp
jmp
sub
inc
pop
in
inc
dec
sbb
mov
lds
shrl
cmp
sbb
jmp
cld
dec
mov
push
jmp
mov
cmpb
push
lods
fmul
jno
and
loope
xor
jmp
push
push
cmp
int3
adc
pop
stos
leave
rclb
mov
and
jnp
sub
jl
sbb
shl
dec
jmp
sbb
inc
adc
gs
int
leave
insl
xchg
repnz
jle
mov
jg
rcrl
xchg
andl
or
cmp
repnz
add
std
dec
xchg
gs
leave
xor
enter
ss
dec
rol
incl
lds
lahf
push
xchg
push
and
jmp
sub
adc
push
push
stos
shr
xchg
mov
add
popa
xor
dec
add
into
ss
fisubs
xorb
cld
int3
pop
push
xchg
lods
pop
lods
jmp
mov
dec
test
outsb
push
into
daa
fdivl
gs
ficomps
jbe
add
mov
shrl
xor
cltd
adc
mov
loopne
xchg
pusha
sbb
pop
cmpb
xor
ja
lock
lahf
sub
mov
leave
xchg
mov
adc
sbb
add
ja
or
adc
sub
or
pop
cs
arpl
pusha
imul
sub
jl
mov
xor
sbbb
fdiv
lret
add
fists
pop
movsb
clc
mov
or
lds
add
in
insb
lahf
xchg
jno
cmp
icebp
jne
mov
mov
repz
mov
cwtl
jmp
scas
movsb
cmp
pop
dec
jbe
adc
les
pop
adc
in
mov
out
jno
popf
outsb
mov
pop
test
and
sbb
add
sub
gs
mov
adc
test
pop
adc
pop
movsb
cmp
repnz
shrb
dec
rcrl
or
lcall
push
lahf
mov
cmp
sbb
adc
push
push
pop
movb
call
data16
pop
mov
mov
xor
lcall
cmp
or
loope
ljmp
mov
inc
dec
push
fcoms
movsb
rol
rorl
pop
add
mov
xlat
push
mov
jmp
arpl
xor
imul
xor
xor
sub
out
in
xorl
fucompp
hlt
repnz
hlt
in
push
pop
inc
mov
mov
inc
scas
ret
mov
scas
psubb
sub
not
cmp
jmp
out
pop
fs
imul
jg
add
cmpsb
mov
jmp
data16
xor
sub
daa
inc
cwtl
arpl
lret
or
lods
xor
pop
dec
or
mov
pslld
push
or
pop
xlat
add
and
jmp
out
adc
jbe
and
jne
sub
fdivs
and
aad
adc
out
pop
addb
jne
imul
xor
sbb
xchg
adc
xor
aad
mov
addb
sbb
iret
add
das
stos
xor
mov
adc
add
sub
and
sub
shll
fmuls
push
stos
sub
cs
into
jne
orb
cmp
push
addr16
xchg
xor
flds
jge
test
jmp
mov
add
inc
imul
rcrb
jecxz
pop
sar
and
jge
xor
pop
es
imul
xorb
ss
xor
fstps
or
sub
cmp
pop
mov
dec
mov
or
sub
or
daa
pop
jg
inc
loope
std
xchg
mov
pusha
mov
mov
push
mov
pop
or
and
xchg
xor
pop
and
sbb
jbe
fucom
repnz
inc
xlat
iret
mov
xchg
andb
imul
lock
hlt
out
inc
lods
push
rcr
lock
das
subb
add
dec
mov
sbb
dec
push
sbb
adc
mov
aam
je
cmp
or
mov
add
jl
push
pop
cmp
loop
js
dec
add
fnstcw
dec
push
js
ljmp
adc
mov
jmp
push
pop
addr16
je
mov
mov
push
mov
adc
and
call
jnp
mov
stc
jne
inc
fsubrl
push
ds
or
xchg
adc
dec
push
cwtl
push
mov
and
adc
inc
or
mov
push
call
jg
pop
jo
test
pusha
ficoml
movsl
add
xchg
push
jmp
notb
sbb
fiaddl
pop
fs
adc
inc
add
adc
pop
xor
lock
arpl
push
push
lret
cmc
add
fmuls
and
sbbb
es
pusha
iret
pusha
inc
xchg
call
fcmovnbe
icebp
mov
sub
jbe
add
xchg
sub
adc
xor
aaa
sub
mov
sub
mov
repz
adc
add
in
enter
pop
mov
add
jmp
stos
shrl
cmp
mov
pop
scas
xchg
sarl
or
in
xlat
les
pop
add
push
test
inc
mov
add
out
mov
shr
or
in
and
or
notb
pop
jecxz
in
sbbb
jae
test
and
or
jae
sub
cld
mov
into
cmp
dec
frstor
add
pop
pop
adc
lods
jmp
jns
and
or
or
cld
xchg
add
into
pop
neg
push
and
cmp
ret
add
push
sahf
push
lods
repz
rorl
sub
sub
dec
loopne
ret
ds
push
inc
lret
sub
mov
or
push
inc
fwait
ds
xchg
nop
mov
mov
adc
and
inc
xor
shr
rol
fstps
jmp
mov
in
lret
repnz
imul
add
jo
xor
ljmp
bound
sbb
and
mov
pusha
mov
outsb
xor
cmp
dec
mov
xor
scas
jp
lods
pop
movsl
xchg
cmc
mov
mov
add
roll
mov
add
addb
push
mov
pop
jns
pop
push
ret
shl
push
les
fildll
cmpsb
adcb
sub
or
in
sub
or
mov
inc
shll
xor
xor
outsb
add
jl
add
mov
mov
or
mov
icebp
jo
cmp
enter
imul
jno
mov
add
mov
dec
mov
int
push
ss
fldenv
movsb
iret
adc
mov
into
out
add
repnz
out
outsb
and
jl
aas
sbb
sti
in
fldl
and
xchg
clc
adc
pop
cltd
mov
cmp
stos
ret
lods
les
add
inc
js
xchg
inc
mov
xor
imul
pop
mov
data16
push
mov
mov
xchg
dec
andb
add
outsl
inc
mov
pop
and
test
in
jge
in
cmpsl
shlb
add
and
scas
push
andl
mov
and
dec
sbb
push
mov
aad
mov
shlb
push
jae
inc
sub
andl
xor
push
adc
cmp
adc
out
je
test
jns
adcb
stos
pop
das
call
jb
fistpll
repz
push
jp
lock
mov
lcall
insb
pop
pop
shl
sbb
xchg
adc
enter
stc
sub
pop
cmp
scas
mov
jae
ja
addb
popa
or
dec
or
adc
ret
mov
jb
and
bound
or
aas
cmp
inc
das
xchg
push
xchg
add
jmp
sub
dec
loopne
imull
jmp
add
in
sbb
rolb
movsb
dec
addb
inc
inc
add
push
sub
add
and
insb
mov
push
test
add
push
imul
and
or
push
hlt
repnz
in
ret
fistpl
push
mov
ds
ret
or
dec
adc
or
dec
jnp
add
test
icebp
mov
cmp
cli
lcall
stos
add
inc
negl
mov
mov
scas
pushf
aaa
add
rcrl
pop
add
lret
clc
push
add
push
xchg
mov
or
addr16
movsb
or
ljmp
mov
imul
call
xchg
jmp
jle
mov
addr16
popa
add
stc
ret
movsl
lea
mov
stos
add
push
jl
sbb
sub
adc
xchg
jle
mov
int3
xlat
test
hlt
div
ss
dec
stos
in
mov
mov
dec
or
cwtl
insb
xchg
adc
or
outsb
daa
pop
sub
pop
leave
jns
pop
aam
push
outsb
iret
shll
orb
lds
jmp
dec
sub
pop
adc
sub
mov
adc
mov
mov
std
pop
scas
into
adc
adc
jg
sub
cmp
mov
mov
pop
popa
cmp
xor
nop
movsb
xor
fs
pop
sbb
imull
or
or
sbb
and
pusha
mov
pop
pop
jnp
imul
or
out
jae
push
loopne
in
test
or
test
and
push
pop
push
cmc
icebp
fwait
sub
adc
cltd
xchg
sub
add
not
jnp
add
test
repnz
cmc
add
sarl
test
cli
mov
call
mov
les
pop
push
add
neg
cs
inc
pop
xchg
testl
mov
test
call
cmp
add
push
jns
cmp
faddl
ret
and
outsb
fsubrl
pop
mov
cltd
adcl
pop
xor
mov
or
mov
pop
adc
or
aam
push
outsb
or
pop
pop
push
loopne
lret
adc
sub
dec
rolb
xor
ret
roll
push
jo
enter
jb
mov
out
push
push
inc
js
push
jmp
xor
fcoms
add
das
mulb
jbe
push
nop
pop
mov
mov
insb
lock
pop
and
and
fistps
mov
sub
movsl
sahf
addb
movl
dec
pusha
inc
xor
dec
mov
jl
jo
int
pop
rcrb
movsb
movsl
xor
mov
cmc
lret
lods
mov
sub
jmp
subl
and
pop
sub
jmp
sarl
pop
or
push
loopne
dec
inc
je
or
add
or
std
test
push
jmp
nop
push
cltd
ja
icebp
dec
xor
ret
and
push
test
push
or
out
mov
shlb
icebp
leave
adc
rorb
neg
dec
sub
adc
or
cmp
xor
mov
mov
xchg
test
lcall
pop
mov
dec
fsubrs
test
xor
mov
dec
inc
xchg
fs
out
lock
xor
lea
and
pop
lret
sbbl
idivb
mov
aaa
call
push
sbb
xor
mov
xlat
sub
cmp
gs
sbb
sbbb
into
sbb
or
adc
out
push
jmp
aas
dec
inc
call
popf
jl
and
sbb
adc
popf
and
mov
pop
sub
inc
out
out
enter
mov
mov
aas
jo
movsl
sbbl
or
push
sub
sti
imul
pop
and
push
into
adc
pop
imul
sub
pop
sti
nop
stos
add
push
mov
adcb
push
arpl
sub
dec
or
push
les
push
push
add
lods
add
add
andb
repnz
cwtl
lcall
xor
sub
or
or
dec
ljmp
ret
test
dec
stos
cmp
push
dec
mov
cli
xchg
adc
or
jmp
adc
inc
dec
mov
inc
stc
imul
dec
and
jmp
rorb
popf
les
mov
dec
sub
loop
xchg
and
pop
idivb
enter
inc
out
xor
pop
adc
popf
sub
imul
mov
ljmp
push
in
add
inc
sti
pop
icebp
ret
mov
xlat
and
sub
hlt
or
xchg
jge
and
add
pop
sahf
loope
push
jno
dec
jl
and
testl
push
nop
adc
push
mov
jnp
or
in
xor
cmp
sub
jmp
imul
movsl
dec
decb
push
dec
fcoml
out
mov
push
andl
outsl
outsb
cmp
nop
mov
pop
insb
xorl
and
ss
mov
pop
test
pop
stc
dec
mov
ret
daa
dec
in
das
mov
aam
jb
into
mov
sub
xor
xor
inc
push
push
dec
push
inc
jmp
sub
inc
xchg
fldcw
cmpsl
add
cmp
or
icebp
fdiv
and
and
lock
adc
cmpsl
dec
add
jmp
rcrl
push
icebp
icebp
jge
cwtl
add
jbe
add
dec
add
popa
test
pop
rolb
pop
sub
push
jmp
fiaddl
es
jb
ret
or
mov
xchg
aaa
fbstp
adc
rorl
pop
imul
jmp
pusha
xchg
arpl
in
dec
inc
inc
incl
mov
mov
repnz
xchg
loop
jge
jne
ljmp
dec
cs
inc
cmpsl
repz
lcall
addb
in
addb
cli
mov
pop
and
lds
test
pop
mov
jb
arpl
stos
shlb
xchg
sub
xlat
insb
stc
dec
push
in
or
inc
call
mov
loope
add
cmc
ljmp
pop
fdivl
or
add
add
dec
dec
cmp
push
jp
and
out
fdivs
adc
stos
sti
lock
clc
repz
adc
cmp
adcb
pop
and
ret
inc
ret
xor
or
inc
es
xor
lahf
jns
sbb
mov
sbb
cs
dec
das
jns
jl
sbb
and
enter
mov
pop
pop
loop
inc
push
push
add
mov
ljmp
and
adc
jae
sbb
and
sbb
or
jbe
jg
fcompl
xchg
std
cltd
mov
pop
mov
mov
fcmovu
mov
xchg
jno
pop
cmp
mov
pop
or
xor
inc
pop
movsb
push
push
out
mov
jns
aas
js
inc
out
fldcw
andb
pusha
mov
outsl
in
mov
add
pop
add
adc
pop
addb
jmp
shll
xor
pop
je
add
jnp
sti
in
xor
mov
aad
cmp
xchg
outsl
push
andl
ret
or
jmp
divb
insb
fwait
loope
push
and
test
das
mov
pop
pop
ljmp
std
adc
popf
sub
mov
dec
filds
pop
aas
mov
jo
push
adc
or
fldl
dec
sub
xchg
icebp
cltd
jmp
das
mov
std
fstl
cmp
push
sub
bound
or
test
pop
sti
push
test
adc
push
mov
fdivs
mov
mov
shl
add
jmp
ror
clc
dec
xchg
adc
xchg
movsb
inc
pop
jg
movsb
push
add
inc
xor
pusha
mov
aam
sub
imul
sar
das
or
pusha
hlt
addr16
pop
pop
add
test
lret
sub
mov
rcrl
rclb
dec
int3
jge
inc
daa
inc
add
icebp
pusha
in
test
rorb
push
mov
mov
push
push
aad
ret
loopne
adc
mov
cli
dec
lcall
aad
sub
imul
ss
test
out
in
arpl
mov
mov
inc
mov
mov
sbb
mov
jmp
jns
jmp
das
pop
ficoms
mov
sbb
adcl
dec
jo
dec
rclb
or
jne
push
xlat
sub
add
inc
mov
fs
sbb
add
or
jo
inc
add
xchg
sub
push
loopne
or
movsl
xor
jle
or
jae
add
cmp
lods
push
imulb
pushf
nop
fnstenv
daa
pop
add
add
ret
mov
push
xor
pop
inc
shr
mov
sub
jecxz
jg
mov
jmp
cmc
mov
les
dec
push
add
pop
popf
add
pop
jae
and
push
jmp
movzwl
sbb
lea
movswl
sub
sub
bound
lock
jmp
gs
je
mov
inc
add
repnz
push
xor
sbb
xchg
and
jmp
cmc
pop
mov
sub
rcrb
test
xorb
pop
loop
inc
gs
jmp
and
cltd
xchg
lods
fsts
aas
sbb
xor
jmp
pop
push
pusha
lret
xchg
int3
jmp
mov
loopne
dec
pop
pop
push
sbb
pop
push
loope
inc
jmp
fstl
sbb
or
aaa
into
mov
rcr
and
call
daa
adc
out
xchg
lds
push
or
repz
dec
das
hlt
scas
pop
sub
repz
and
or
sbb
jl
add
and
jb
dec
inc
movsb
dec
dec
pop
test
aas
stos
addl
shr
insb
fs
into
or
loope
pop
dec
mov
mov
pop
jle
divl
iret
in
push
xchg
cmp
es
jns
or
xor
push
add
scas
shrl
pop
sub
rcl
aas
cmp
ret
test
loop
push
adc
adc
or
sti
clc
fisubrs
aaa
push
fwait
repz
orb
push
sti
scas
rcrl
add
pop
push
xchg
stos
push
shrl
daa
pop
imul
pop
mov
nop
orb
pop
mov
test
lcall
cli
ficomps
mov
push
mov
pop
mov
jbe
jle
es
ret
push
xchg
and
mov
mov
test
sub
adc
ja
loop
xchg
jle
mov
stos
cmp
hlt
adc
cmp
add
in
arpl
mov
jns
cmp
inc
jb
and
sub
icebp
jmp
movsl
testb
pop
cmp
jg
mov
movsb
in
mov
test
adc
pop
clc
jo
clc
lds
insl
dec
loope
int3
pop
stc
mov
mov
inc
popa
shlb
dec
mov
pop
adc
cmc
push
add
mov
push
ret
or
out
test
lds
push
and
das
js
out
pop
pop
rorl
mov
or
push
xchg
scas
shrb
jae
xor
sbb
cmc
lea
or
ja
sub
roll
inc
jnp
ret
data16
lods
mov
filds
or
hlt
cli
pop
dec
shl
jns
push
shrl
test
mov
jno
cmp
adc
loope
pop
movsl
inc
repz
cwtl
lds
std
sub
out
orl
mov
mov
bound
ficoml
jbe
pop
mov
dec
xor
fmul
pop
adc
add
lds
fisttpl
aad
adc
std
out
pop
std
data16
sbb
mov
mov
std
add
notl
sub
jmp
inc
jb
lahf
jge
lret
sub
mov
in
or
gs
xchg
dec
sub
insl
fs
loopne
sbb
add
dec
in
dec
popa
cmp
jmp
sub
flds
js
and
mov
add
repnz
mov
test
and
xchg
out
or
fstps
jb
clc
mov
xor
xlat
adc
sub
xchg
dec
scas
xor
ret
add
push
cmp
stos
pop
jge
outsl
lahf
pop
pop
pop
push
mov
psubsw
pop
push
push
push
mov
jmp
pop
lock
mov
je
dec
ret
jnp
in
or
mov
dec
push
icebp
ljmp
in
repnz
enter
inc
clc
xchg
call
xchg
aad
jmp
jle
das
dec
pop
scas
jns
and
jbe
push
cmp
lock
lret
mov
shlb
jl
adc
rorl
mov
mov
cs
lods
xchg
rclb
out
push
ja
pop
repnz
add
xchg
repz
xchg
pop
scas
fidivrl
fcmovnbe
add
xor
jp
mov
pop
out
or
add
and
out
xchg
jl
inc
push
stos
jl
xchg
inc
pop
out
ja
fstpt
or
xchg
dec
sub
popf
inc
sbbb
or
dec
shrb
div
pushf
xor
fsubl
pop
loope
mov
sarb
sbb
andl
push
push
orb
lock
dec
lods
pop
outsb
jno
outsb
inc
mov
aad
das
add
push
cmp
cmp
xchg
dec
xor
lret
add
nop
rorb
mov
add
push
push
and
and
pop
pop
and
scas
lds
add
cmp
xchg
pop
push
cmp
stos
xlat
scas
push
lds
xchg
fs
inc
push
push
fldenv
xor
psllw
lahf
and
add
arpl
xor
cmp
shr
sbbl
cmp
add
stos
and
sub
mov
call
neg
addl
rclb
lods
lcall
jp
adc
jmp
jmp
jge
mov
dec
pop
int3
dec
sub
xchg
jo
imull
and
cmp
jmp
xchg
aam
xchg
sub
andb
das
add
notl
cmp
cmp
mov
or
popl
sarl
jnp
jno
fadd
stos
sbb
mov
cwtl
in
jmp
and
xchg
dec
or
fsts
dec
xchg
jmp
ds
jo
add
cmc
mov
adc
push
scas
pop
push
jmp
stc
sbb
aad
pop
mov
imul
and
or
das
or
xor
jl,pt
mov
pop
add
adc
pop
push
dec
sti
mov
mov
das
icebp
ret
and
negl
lods
cmp
push
dec
adc
inc
push
cmc
adc
sub
in
mov
adc
inc
dec
or
les
inc
xchg
pusha
icebp
lds
dec
and
sbbb
mov
sbb
mov
repnz
mov
pop
cmp
addb
aaa
rorl
jmp
fs
jae
popf
pop
cmpsb
or
jo
fcoms
cmp
push
and
mov
and
jg
xchg
pop
cmp
or
out
add
sub
or
nop
jge
dec
call
sti
add
and
push
call
test
mov
push
inc
xchg
lret
mov
in
call
jmp
pop
scas
xor
xor
repnz
in
cmp
lds
stos
cwtl
dec
push
add
rcll
orb
aad
or
in
mov
jae
popf
cli
aad
or
movsb
push
inc
push
cwtl
pop
loope
xor
push
int
dec
dec
or
sar
mov
movsl
movsb
fmull
jae
pop
iret
push
popa
push
cmp
mov
pop
pusha
xchg
call
adc
out
add
sbb
sbb
unpckhps
add
ds
jnp
fimuls
inc
push
sbb
add
dec
sti
mov
push
jmp
adc
dec
aam
adc
ja
add
fstps
jae
enter
clc
popa
push
adc
sbb
scas
push
sbb
add
sub
or
test
mov
subb
cld
jo
in
or
inc
pop
enter
sbb
addl
test
nop
inc
or
push
jbe
or
or
insb
xor
loopne
sbb
cli
xor
jmp
testb
pop
ja
test
push
dec
insb
test
dec
mov
mov
movsl
das
mov
stos
jne
add
aad
jle
xchg
fdivrl
cmp
dec
or
adc
inc
push
cmp
pop
xchg
and
das
testb
test
adc
aad
or
pop
adc
mov
cmp
push
cmp
push
repnz
adc
mov
idivb
loopne
xchg
push
cmpsb
into
cmpb
and
fsqrt
call
sub
mov
sub
dec
sub
rcll
insb
lcall
rolb
inc
mov
adc
js
push
lahf
mov
shl
cmp
sub
jae
push
pop
out
cmc
add
jl
add
add
inc
or
scas
fsts
inc
call
sub
sub
lret
jne
mov
and
jl
or
cmc
clc
add
test
mov
sbb
push
inc
dec
add
xor
mov
lods
adc
outsl
mov
xor
mov
stc
xlat
mov
pop
enter
scas
popa
fadds
pop
inc
inc
sbb
jl
ret
jecxz
mov
ljmp
or
jns
jb
mov
dec
adc
stos
mov
xor
jle
test
sub
mov
dec
mov
xor
inc
leave
repnz
push
hlt
dec
and
andl
sub
jp
xor
jge
enter
dec
test
xchg
lret
and
cmpsb
dec
pop
mov
dec
sbb
inc
mov
call
adcl
pop
in
cli
push
or
pop
cmc
sbb
pop
adc
push
into
sub
jae
dec
inc
xchg
dec
cmp
sti
xor
or
inc
arpl
xchg
mov
lock
sbb
pop
jmp
subb
jge
dec
pushf
push
jnp
add
ret
mov
ss
bound
orl
outsb
inc
enter
cmp
loop
pop
fiaddl
mov
sub
dec
insl
sbb
push
inc
mov
or
cmpsl
sbb
int
xchg
xchg
pop
add
shr
xchg
inc
adc
add
in
inc
pushf
lods
add
das
dec
xor
push
mov
push
enter
add
pop
icebp
js
aam
sbb
sbb
adc
and
idivb
mov
sbbb
mov
inc
inc
insl
jne
sti
adc
ret
add
pop
push
xor
nop
mov
or
add
ljmp
jb
comiss
push
daa
push
scas
leave
dec
sbb
inc
adc
fld
adc
and
pusha
imul
inc
or
sub
rorb
cmpsl
dec
xor
ja
andl
add
loop
xchg
push
pop
addr16
ret
push
inc
and
and
add
inc
ja
pop
adc
das
lea
das
adc
dec
jmp
push
mov
out
test
mov
pushw
push
cltd
mov
adc
dec
imull
test
sub
adcb
add
enter
add
cwtl
push
xlat
inc
ret
mov
loopne
dec
xor
adc
and
jl
add
push
cmp
shll
ret
mov
es
divl
push
mov
add
push
stos
push
out
push
lcall
pop
notl
fcmovb
ljmp
xor
jle
jmp
cmp
shll
mov
fldcw
mov
out
sub
jo
ret
jb
or
push
pop
aaa
add
sbb
adcb
pop
and
adc
outsl
icebp
outsb
iret
add
jno
jae
not
pop
mov
inc
mov
push
shr
add
aas
int3
cld
cwtl
daa
das
dec
mov
mov
push
mov
sub
jne
sub
sub
pop
rol
jmp
decb
xor
jo,pn
xor
jmp
cs
repnz
xchg
arpl
out
popf
and
mov
ljmp
insb
mov
cmp
js
daa
add
lock
or
sbb
or
add
push
loopne
jmp
push
pop
pop
inc
dec
jg
dec
lock
repz
je
scas
jne
pop
add
insb
mov
mov
xlat
pop
mov
mov
jne
lods
pop
mov
rclb
popf
movl
cmp
inc
add
gs
mov
notb
pop
rorl
sbb
enter
fwait
xor
imul
cmp
gs
or
lods
lods
int3
inc
clc
xor
mov
pop
arpl
dec
sbb
cmp
pop
test
popa
inc
xor
clc
dec
or
jge
dec
sbb
push
repz
inc
xlat
inc
notl
sub
push
or
xchg
lds
stc
mov
jbe
push
xchg
and
dec
dec
jle
pop
es
dec
outsl
ljmp
pop
ja
jb
lahf
pushf
cmp
jmp
lds
clc
lods
popf
leave
out
nop
adcb
adc
movsl
xchg
sub
out
add
or
sbb
xchg
mov
in
mov
sbb
outsl
xor
and
fidivl
sbb
sbb
rcr
imul
std
inc
cld
mov
add
cli
push
pop
testb
pavgw
repz
adc
adcb
inc
mov
mov
xchg
cmp
or
jmp
lock
in
aad
adc
pop
mov
cs
dec
lods
push
nop
and
add
lods
mov
negb
lods
ss
inc
lock
mov
sbb
fidivrl
cmc
push
and
xchg
iret
fucomip
stos
ret
bound
pop
dec
sti
or
jle
aaa
push
call
mov
loopne
mov
pop
xchg
sahf
and
mov
jg
sbb
ljmp
je
aas
xor
mov
in
add
or
inc
mov
mov
adc
mov
shrl
mov
xchg
fs
fldenv
and
ja
mov
push
lds
mov
mov
shrb
or
std
xchg
push
add
pop
sub
or
fisubl
xchg
pop
jb
or
pop
jle
push
push
pop
scas
lret
stc
adc
je
pop
in
jmp
push
jmp
add
pusha
add
push
or
jne
jle
pop
push
pop
insb
push
mov
imul
mov
or
dec
adc
add
es
sub
dec
decl
arpl
sub
jnp
cmp
fwait
mov
cwtl
dec
pop
add
pop
or
pop
insb
add
push
outsb
or
out
sar
mov
daa
lret
jmp
pop
insl
add
hlt
cli
push
clc
outsl
ljmp
sahf
std
mov
call
xor
push
dec
arpl
arpl
out
adc
mov
adc
inc
xchg
bound
or
stos
add
nop
sub
xor
fucomip
bound
dec
dec
scas
xchg
dec
adc
cmp
mov
and
and
sub
cmp
inc
push
sub
xor
dec
outsb
jb
data16
in
push
pop
gs
call
cmp
sbb
jbe
xor
dec
ja
sub
jmp
mov
imul
mov
fcomp
and
inc
mov
ffreep
add
lret
sub
sub
daa
lea
bound
repz
xchg
add
jb
sbb
arpl
and
jb
sarl
cmp
push
insb
or
push
ret
mov
jmp
int
pop
lock
pop
pusha
dec
adc
inc
mov
cmpsl
add
xchg
in
lds
mov
dec
mov
dec
cmovp
adc
adc
shlb
mov
mov
xlat
popf
fsubl
pop
pop
test
push
xor
mov
push
stc
int3
push
push
mov
and
mov
in
in
int
add
mov
decb
mov
sub
nop
movsl
sub
sub
popf
add
cmp
jmp
push
loop
sar
scas
in
aam
sub
mov
push
aad
subb
sub
push
jge
lds
daa
xchg
subl
or
xor
test
or
dec
mov
jae
in
or
sbb
xor
mov
or
sub
repnz
dec
jmp
xor
adc
sub
fiadds
xchg
or
into
cwtl
pop
pusha
fwait
jg
sub
stc
jnp
pop
adc
or
xchg
das
xor
mov
pop
imull
add
pop
adc
and
ficomps
setl
lock
xor
fsubrs
pop
xchg
mov
jo
jle
dec
cmpsb
pop
ss
test
jnp
out
pop
sub
sbb
mov
pop
cmpsb
nop
dec
push
xchg
stos
sbbb
shlb
xchg
mov
cmpsb
adc
push
push
rcrb
ret
mov
and
rolb
pushl
jg
push
test
or
mov
sub
call
push
add
out
add
test
adc
xchg
dec
out
dec
sahf
mov
adc
xchg
ret
andb
daa
lock
push
ljmp
fisttps
mov
sub
test
mov
mov
pop
jl
sub
test
mov
notl
adc
repnz
xchg
push
sub
jmp
imul
mov
dec
popa
dec
xor
inc
lods
lods
test
sbb
push
es
and
sti
mov
cmp
pop
lea
xlat
lret
mov
adc
xchg
add
and
icebp
nop
cmp
inc
std
inc
cmp
sahf
sub
jne
and
movsb
cmpsl
pop
push
push
lods
addr16
add
pop
mov
mov
fimull
pop
push
cwtl
ficoml
cs
or
loop
andps
fnsave
leave
mov
jmp
pop
mov
sub
pop
aad
sub
clc
mov
xor
mov
popa
mov
mov
adc
sti
popf
push
lds
sbb
lods
xchg
mov
repnz
jmp
aas
jle
push
or
fcomps
mov
inc
or
push
mov
test
sbb
or
adc
jb
mov
xchg
or
and
loop
jne
adc
jmp
jp
es
adcb
jle
and
icebp
jne
and
sub
sub
push
mov
push
data16
inc
fiadds
in
and
cmpsb
fsubrl
daa
rolb
xor
and
sarl
clc
push
mov
inc
adc
inc
int3
or
inc
mov
cmpsl
adc
sub
adc
pop
mov
adc
push
stos
mov
movsl
xchg
xlat
sbb
xor
pop
xor
and
ret
rol
jg
adc
ljmp
cmc
in
mov
sbb
push
or
dec
push
add
lret
pop
shl
pusha
and
aas
pop
mov
pusha
loop
push
adc
stc
cld
sbb
mov
and
or
ja
push
addr16
sarl
xchg
sub
push
in
mov
mov
mov
pop
mov
mov
fs
rol
mov
push
jmp
and
stos
xchg
fiaddl
or
inc
pop
add
adcb
sbb
aaa
loop
test
mov
jmp
shl
inc
pop
cltd
mov
inc
negl
sahf
stc
into
arpl
push
sub
and
aad
jl
pop
add
dec
push
sbbb
cmp
mov
outsl
add
mov
jmp
push
xor
push
mov
sbb
xchg
mov
inc
sub
add
pop
out
pusha
and
in
add
dec
dec
in
fistps
and
sub
sub
aaa
xor
decl
adc
arpl
add
sbb
push
or
push
inc
cmp
rorl
scas
xchg
insb
mov
out
or
insl
pusha
cmp
mov
mov
xchg
or
add
sub
dec
aad
push
add
int
mov
shrb
in
jne
xchg
jmp
xchg
add
stos
jb
sub
mov
xor
fisubrl
jns
mov
mov
pop
jmp
cld
lea
aam
or
push
or
inc
sbb
out
xchg
adc
xchg
push
rolb
jne
or
and
out
and
scas
add
les
dec
add
imul
jg
and
out
jns
jo
add
pop
ljmp
xlat
mov
subl
mov
shl
outsl
in
ds
cmp
scas
push
les
sub
fxch
leave
pop
jno
mov
xchg
push
nop
icebp
js
pusha
cmpsb
or
mov
popf
hlt
das
das
adc
ds
out
lcall
nop
push
movsl
fdivr
fsub
xor
adc
dec
xchg
pop
or
push
cld
mov
xor
mov
push
dec
fstl
push
pop
shr
into
mov
push
ret
mov
mov
int
test
cmp
aas
adcb
adc
sub
or
sub
xor
call
into
add
push
test
insl
cli
inc
jmp
push
adcb
jg
addb
jne
inc
or
inc
ficoms
push
shrb
adc
or
push
jl
call
add
add
cmp
xor
pop
fistl
sub
test
xchg
std
cli
sbb
fsubl
push
dec
out
pusha
addr16
test
push
fbld
fdivrs
pop
dec
das
adc
pop
cmp
dec
js
push
icebp
orb
pop
stc
dec
push
movzbl
cmc
and
sbbb
dec
pusha
mov
cli
sub
push
testb
mov
mov
adc
jmp
fmulp
xor
push
sub
push
sarb
adc
dec
add
push
push
sbb
test
inc
rcr
aad
or
int
ss
xchg
xorl
shl
loopne
pop
sub
in
add
add
cmp
mov
pop
adc
pop
mov
lds
out
cmpsl
enter
adc
dec
dec
mov
cli
and
xchg
pushf
popf
hlt
jp
jae
mov
inc
lods
cmp
jns
mov
jmp
jmp
adc
push
mov
cmpsb
aas
ret
in
stos
in
jecxz
std
aam
cli
sub
mov
out
aam
mov
icebp
or
add
scas
loop
sar
lcall
daa
dec
flds
push
pop
jno
inc
mov
push
adc
sub
cmp
sub
pushf
pop
movsb
add
sub
inc
jns
loope
jecxz
mov
mov
movsb
xor
aas
lret
je
push
nop
mov
adc
pop
pop
data16
fsub
jg
or
add
rcll
movsb
inc
or
orb
mov
roll
xor
rorl
hlt
cmp
outsl
jno
sub
pop
mov
test
mov
push
mov
pop
popa
vpunpcklbw
dec
jno
xchg
xchg
inc
mov
xchg
pop
cld
xor
scas
into
pushl
ljmp
and
orl
frstor
sub
sbb
insb
and
inc
push
xor
pop
cmp
stos
push
add
add
sub
dec
or
and
jae
sbbb
push
int3
sbb
out
out
add
imul
sarl
int3
pushf
shlb
leave
fs
adc
out
add
jno
inc
neg
sahf
and
inc
xor
pusha
push
dec
sarb
push
and
pop
stc
cmp
or
idivb
push
add
dec
mov
leave
pop
jne
lds
push
dec
fnstcw
cmp
and
jns
jg
push
imul
pop
inc
test
shl
sub
sbb
adc
xchg
adc
rorb
add
push
sbb
and
sbb
dec
push
jb
or
sysexit
xlat
pop
cmc
es
cmpsb
sub
pop
jmp
or
std
sub
lock
jl
push
pop
mov
xchg
or
or
outsl
push
cmp
scas
popa
fsubrl
lahf
leave
or
push
loop
negl
mov
push
push
pop
stos
movsl
mov
rol
out
sub
sarl
xor
pop
dec
push
dec
adc
add
in
dec
repnz
les
sub
mov
idivb
xchg
xchg
add
push
leave
popa
sbbl
jl
sahf
or
mov
push
push
or
push
or
loopne
jne
jl
add
std
ja
jae
stc
mov
adc
jmp
das
sub
shrl
test
sbb
jnp
xchg
add
jnp
out
es
sbb
and
lret
inc
jmp
push
pop
jne
jnp
xchg
inc
sub
lds
pop
xlat
add
out
xor
push
cs
pop
fwait
stc
jp
mov
cmc
add
sbb
pop
cmpb
push
sub
sub
and
or
push
and
cmp
jle
xor
push
push
jae
cmp
loopne
add
jmp
jl
hlt
lods
jmp
sub
mov
cmc
mov
into
jmp
adc
jp
jns
push
push
push
or
xorb
push
jmp
insl
cmpsb
imul
add
pop
push
jmp
subb
jns
mov
push
adc
idivl
and
push
sub
dec
jmp
pusha
fsincos
lahf
jg
mov
ja
push
sub
popa
pop
lods
out
xchg
sub
mov
iret
jae
xor
fsubrs
daa
pop
pop
and
xchg
inc
and
iret
push
sub
pop
mov
cmp
xor
test
je
pop
xchg
enter
cmp
mov
and
je
jge
adc
dec
pop
adc
push
xor
pop
fstl
push
jmp
mov
adcl
cltd
dec
sbb
adc
pop
mov
lcall
xor
insb
add
sbb
out
xchg
jecxz
popf
in
push
popf
outsb
pushl
inc
shll
fwait
jb
dec
push
or
scas
adc
mov
mov
dec
mov
jmp
inc
shr
jmp
xchg
imul
adc
ss
adc
add
add
aaa
jmp
stos
test
inc
inc
out
inc
xchg
mov
iret
int3
lods
cwtl
mov
pusha
out
mov
push
xor
mov
daa
add
jne
mov
cmp
popa
jae
pop
dec
mov
mov
add
mov
cli
cmp
pusha
js
inc
enter
pusha
mov
in
sub
lret
xchg
xor
fiaddl
inc
mov
inc
pop
xchg
loopne
sub
fcom
mov
mov
jmp
mov
sub
adc
clc
add
mov
cmpsb
adc
jb
push
pop
pop
cmp
add
fldl
subl
adc
test
and
adc
cmp
jne
gs
mov
cltd
das
mov
loop
imulb
mov
cmp
add
jp
push
mov
and
sbb
pop
dec
mov
lahf
mov
sbb
mov
adc
mov
ret
adc
xorl
setnp
je
pop
int
lea
cmp
mov
inc
cmpb
xlat
jo
adc
and
shl
aas
pop
add
fdivl
scas
mov
test
inc
adc
movsb
sbb
cwtl
cltd
dec
and
in
push
jnp
lods
out
outsb
imul
xchg
fmul
sub
scas
cmp
sub
negb
dec
or
jl
sbb
loop
push
inc
push
push
inc
jle
lret
jecxz
enter
mov
mov
adc
dec
add
inc
ljmp
lods
jg
lcall
repnz
mov
sub
jle
frstor
xchg
adc
mov
mov
pop
mov
jns
js
cmpsb
sbb
push
subl
dec
mov
pop
jb
push
add
or
sub
or
add
or
ds
mov
pop
orb
and
fstpt
add
test
pop
jl
rcrl
fists
cmpsb
lea
cmpsb
pop
mov
outsl
test
mov
std
xor
pop
mov
mov
xor
mov
pop
out
jmp
add
in
jecxz
push
xchg
outsl
cmp
mov
adc
jle
sbb
pop
and
repz
mov
sbb
add
pop
or
std
orl
cmc
adc
js
addb
or
movsb
shl
cmpsl
js
or
mov
sub
ljmp
push
cmpsb
xor
or
push
in
lcall
das
jbe
jnp
mov
xchg
sahf
push
jmp
sbb
push
mov
test
sub
sbb
lock
xchg
sbbl
mov
lret
das
mov
adc
mov
call
mov
fcoml
inc
sarl
das
jno
inc
nop
lahf
jl
inc
ljmp
stos
es
add
and
xor
push
sbb
pop
sub
pop
mul
pop
mov
or
ficompl
jmp
je
in
mov
mov
sti
in
out
add
pop
out
xor
in
push
pop
pop
cwtl
adc
pop
push
jae
lods
cltd
sbb
jo
and
push
inc
imul
scas
mov
push
inc
pop
ret
fcmovu
push
jmp
popl
xorb
sub
je
data16
call
xchg
pop
add
loope
jmp
mov
jmp
mov
sub
pop
fldpi
ret
leave
ret
aas
pushf
or
cmp
mov
xchg
mov
scas
cmc
cli
push
scas
dec
cmp
loop
insl
and
ja
enter
lock
mov
outsl
adc
adc
jmp
or
mov
cld
pop
fwait
xor
xchg
mov
lret
leave
imul
push
dec
insb
cmp
cmc
lock
hlt
cli
orb
cmc
subb
test
mov
push
int3
mov
arpl
jl
lods
outsl
and
add
loopne
movsb
sar
sub
xchg
addr16
jmp
xor
mov
pop
mov
cmp
fdivrl
push
jne
aas
lods
add
fldcw
repz
fimuls
loop
lahf
or
imul
push
push
rorl
repnz
push
sbb
jno
in
and
sbb
neg
or
inc
cmpsl
sbb
imul
pop
lea
xchg
adc
aad
lcall
add
adc
adc
shlb
test
imul
dec
push
inc
jp
jae
fiaddl
inc
into
orb
ljmp
cwtl
movsb
and
outsl
popf
call
pop
aam
dec
das
addb
mov
addl
cmp
or
scas
add
or
and
dec
jmp
rcrl
clc
adc
fisttpl
sub
jle
add
sbb
lret
stc
das
sub
fldcw
clc
sbb
scas
jb
sub
xor
movsl
mov
jmp
mul
fs
pop
jne
fbstp
out
inc
push
lea
imul
mov
loopne
in
out
add
stc
ja
and
and
rolb
jbe
jb
hlt
inc
or
add
lods
insb
mov
ja
lods
xchg
outsl
sbb
cwtl
dec
cmp
test
cs
repnz
xchg
pusha
xor
js
xor
lret
movsb
jl
sub
int3
push
xchg
jp
cmp
pop
notl
sbb
test
pop
and
jp
sub
dec
push
adc
decl
mov
push
mov
rolb
or
test
inc
jo
ret
pop
fabs
lahf
lods
daa
pop
mov
push
push
stos
mov
sbb
imul
or
loop
psllq
dec
imul
in
push
add
aaa
fwait
xchg
mov
xor
mov
xor
test
shrb
pop
dec
movsl
imul
cs
adc
ret
or
inc
mov
inc
xor
adc
adc
popf
jo
pop
pop
add
inc
inc
or
inc
aad
ljmp
push
pop
inc
mov
pop
aad
sbb
mov
push
cs
jns
push
mov
dec
mov
xor
enter
fidivrl
inc
pop
add
mov
bound
imul
inc
pop
adc
add
inc
lret
cmpsb
gs
outsl
xor
pop
xor
jmp
mov
pop
add
bnd
cmp
dec
xor
adc
mov
out
loope
mov
imul
or
mov
pop
mov
xchg
sub
jmp
mov
scas
xchg
movsl
push
push
inc
ds
out
iret
pop
mov
push
mov
cmp
int
in
pop
sub
xor
xchg
mov
fildl
fildll
jp
inc
out
mov
jle
movsb
push
mov
daa
push
fildl
or
dec
sub
fwait
xchg
mov
inc
mov
loope
mov
testl
mov
shr
sub
int3
lds
je
icebp
popa
pushf
add
test
rcll
push
cmp
mov
xchg
xor
mov
add
pushf
mov
ss
je
sbb
add
scas
xor
sbb
pop
cmp
adc
or
inc
add
sub
imul
ret
jmp
mov
jnp
cmp
jbe
add
push
ficompl
add
pop
imul
pop
pop
cmp
dec
push
or
movsb
sahf
inc
cli
aam
push
sti
out
fistpl
or
jg
pushf
lds
adc
xor
decl
pop
cld
iret
hlt
scas
std
sbbl
mov
pusha
or
mov
pop
pop
popf
addb
rolb
or
sub
out
jge
in
loope
inc
mov
xchg
iret
cli
fsubr
pop
adc
out
arpl
inc
dec
and
xchg
add
loopne
repz
add
xor
pop
fnsave
xorb
mov
jno
add
cmp
bound
push
jns
or
clc
adc
enter
or
adc
sub
ja
out
cwtl
inc
push
dec
mov
sub
shrb
lahf
jp
neg
push
mov
js
out
mov
jmp
pop
adcb
fsubrs
rorl
pop
dec
push
pop
jmp
mul
pop
and
cld
add
addr16
cmp
mov
jo
sti
or
jmp
xlat
das
std
mov
push
xchg
dec
imul
mov
pop
cwtl
imul
inc
stos
inc
inc
sub
jns
scas
xor
sbb
adc
xchg
gs
mov
pop
aad
or
mov
add
imul
adcb
ljmp
pop
roll
inc
sub
push
mov
or
lods
imul
data16
fs
loop
inc
icebp
xor
lea
mov
sahf
jbe
adc
or
ljmp
dec
push
push
mov
lret
mov
addr16
call
pop
pop
ljmp
xor
shlb
pop
cmp
bound
inc
pusha
pop
in
xor
mov
dec
dec
stc
cs
or
jmp
jno
or
cmp
jo
push
sarb
ret
mov
add
loop
dec
sarb
sahf
add
mov
sbb
dec
xor
adc
dec
mov
es
xchg
push
push
mov
inc
bound
popf
rcrl
cmpsl
push
outsl
and
lds
cmp
xorl
cmpsl
dec
scas
cmp
push
sahf
push
inc
mov
mov
cmp
and
shl
shll
hlt
mov
cmp
jns
add
add
inc
or
inc
test
fsubs
dec
add
cmpsl
cmp
dec
push
push
das
outsl
dec
fstps
and
push
mov
dec
push
push
or
push
pop
jnp
popf
call
push
mov
ds
push
cltd
mov
xor
mov
les
int3
add
lock
sarl
mov
dec
fdivs
cmp
add
es
test
mov
lea
fnstcw
pop
mov
das
cli
jge
pop
int
adc
sub
or
test
adc
std
push
cmpsl
fsubp
shll
add
push
rcll
das
or
in
jne
push
insl
and
add
movsl
add
push
jge
mov
mov
or
neg
add
movb
int3
jb
popa
or
pop
je
sbb
fcmovu
xchg
xor
xchg
test
xchg
or
loope
pop
insl
mov
pop
mov
push
mov
mov
or
inc
mov
cmc
roll
xchg
rcll
ja
or
pop
and
bound
push
pop
jbe
aaa
mov
adc
mov
lods
jae
push
stos
jmp
fisubrs
arpl
add
push
je
push
add
dec
add
cmp
jmp
mov
add
jo
adc
or
test
fildll
pop
pop
xchg
aas
add
push
jno
jb
add
sti
adc
jp
and
or
cs
jne
imul
jb
xchg
pop
jg
aas
mov
repnz
cmp
or
fisubs
pop
push
in
sbb
leave
ljmp
repnz
pusha
push
sub
cld
iret
xorb
std
add
sub
add
mov
xor
pop
sub
cmp
cmp
je
push
mov
mov
cmp
mov
inc
out
jg
or
or
add
notl
mov
lods
lock
mov
mov
dec
or
ja
dec
ds
aaa
pop
dec
pop
pop
push
out
hlt
xor
adc
add
add
andb
jnp
outsl
data16
stc
in
lods
popf
fldcw
pop
clc
pop
sub
push
mov
test
add
sti
pop
mov
inc
dec
and
fs
or
inc
iret
push
pop
jbe
out
xchg
add
add
inc
js
dec
or
add
or
imulb
mov
repnz
inc
push
imul
add
scas
in
mov
inc
cmpsl
pop
inc
or
xchg
xchg
cld
fisubl
xor
nop
loope
aas
test
mov
mov
lcall
pusha
sbb
icebp
push
add
clc
jmp
cmpb
ljmp
les
je
int3
imul
push
loop
push
add
lods
jns
dec
fisttpll
adc
sub
aad
push
push
clc
push
mov
xchg
inc
mov
scas
push
test
dec
out
adc
ja
or
ds
popa
imul
or
dec
push
push
mov
cmc
sub
push
push
loop
jns
pusha
fsubr
ljmp
or
cld
add
ljmp
rol
call
or
repz
inc
push
add
dec
add
jmp
pop
push
pop
jg
dec
scas
enter
test
sub
lret
in
jb
jb
dec
xor
mov
aas
or
or
int3
lahf
mov
push
sbb
adc
out
or
imul
push
or
adc
push
pop
lcall
jle
push
repnz
inc
pop
or
orb
sti
outsl
pop
fistpll
mov
incb
mov
jge
xor
jmp
push
and
jge
shl
mov
into
roll
out
int3
sub
es
sub
xor
stc
aas
call
xchg
add
mov
xchg
lcall
ret
es
andb
push
cmc
or
or
dec
roll
push
sbb
movb
sbb
jmp
add
stos
and
es
xor
dec
xlat
jns
pop
inc
fs
or
cs
sbb
or
loopne
das
jo
mov
in
negl
or
sub
mov
call
cmpsb
cmp
inc
ja
xchg
adc
mov
dec
std
jne
out
mov
push
and
or
mov
das
add
or
stos
das
je
pop
jge
aas
insb
hlt
sbb
cmp
dec
xor
rclb
pop
call
pushf
mov
imul
sbb
jo
das
jne
lcall
pop
shll
sti
adc
mov
jmp
sub
dec
inc
adc
rcll
push
dec
test
xchg
pop
inc
fcom
das
and
sub
adc
and
or
enter
arpl
into
cltd
pop
fs
imul
pop
add
inc
jmp
inc
or
mov
call
pop
mov
sbb
jne
das
aam
in
sbb
in
mov
incb
or
addr16
jbe
clc
dec
es
in
sbb
dec
sbb
jne
sub
jge
xor
xor
xchg
jl
add
mov
rcrb
sub
dec
and
push
lods
inc
clc
rcl
inc
xchg
sti
andl
ljmp
cltd
sub
jns
je
add
das
push
xlat
inc
filds
pop
jmp
xchg
or
stos
sti
dec
mov
test
lea
add
lods
push
pusha
ffree
adc
repnz
adc
clc
rcrb
push
sub
jo
shll
adc
pop
push
adc
dec
jns
aam
cmc
pop
adc
lds
int3
jl
bound
insb
int
ss
sub
adc
dec
or
inc
fnstsw
sbb
sbb
inc
jbe
push
jo
xor
loope
inc
in
xor
pop
xchg
aam
mov
rcrb
outsl
les
add
jle
mov
jo
push
or
outsb
inc
sub
pop
orb
in
das
push
mov
inc
pop
or
es
cwtl
adc
push
mov
push
imul
jge
shrb
inc
pop
or
ja
bndldx
dec
cmp
and
loop
jne
push
jl
or
aaa
inc
les
sub
mov
xor
xor
out
sub
stos
push
push
test
add
imul
pop
mov
sbb
ljmp
push
movsb
loop
in
mov
mov
mov
mov
add
divl
jnp
shlb
dec
neg
adc
sub
and
in
mov
adc
popa
push
std
or
jecxz
mov
cwtl
cmp
das
push
rorb
ljmp
test
sub
std
mov
bound
outsl
mov
and
or
sub
gs
or
sub
mov
sbb
mov
add
mov
stc
mov
pop
ficoms
or
mov
xorl
shlb
cmp
es
out
mov
repz
mov
inc
jge
insb
sbb
push
mov
mov
test
test
cmpsl
repz
inc
test
mov
mov
stos
mov
jmp
scas
push
outsl
inc
pop
xor
pop
das
mov
int3
xlat
and
dec
and
push
push
xchg
dec
pusha
test
mov
lcall
movsb
dec
outsb
sbbl
inc
xor
bound
mov
jmp
aam
or
and
mov
inc
dec
pop
sti
mov
adc
and
jo
pusha
movsl
inc
cwtl
mov
and
dec
mov
add
popa
xchg
sbb
mov
ljmp
dec
xchg
popa
int
pop
scas
aas
xlat
int
or
repz
sub
jmp
dec
xor
mov
jle
out
lea
sub
cmpsb
cld
cmp
faddl
pop
mov
sub
addb
sub
call
movsl
pop
jl
adc
shr
dec
dec
mov
jl
das
sti
mov
out
adc
es
mov
popf
jns
daa
jbe
or
aas
mov
addr16
fs
std
sbbl
jns
shlb
adc
jge
xor
jae
dec
outsl
enter
jp
xchg
movsl
or
jb
sub
dec
aas
mov
dec
mov
sub
jmp
or
add
xor
mov
aas
push
loop
test
jb
lods
push
rcrb
inc
inc
cmpb
jge
lahf
sub
in
xor
aas
add
data16
sub
inc
push
mov
or
jnp
sahf
add
and
ss
sbb
pop
dec
cmp
inc
mov
jae
xorl
push
imul
movsl
ljmp
inc
add
cwtl
clc
mov
mov
dec
xor
push
mov
add
cli
popa
stc
arpl
faddp
push
sbb
das
mov
fidivs
repnz
adc
pop
sbb
dec
std
outsb
jp
test
gs
bound
call
add
add
mov
in
mov
xor
lcall
and
sbb
mov
inc
stos
ljmp
das
jno
jg
stos
ja
gs
xchg
mov
inc
pop
mov
add
mov
ljmp
cld
add
frstor
cmc
pushf
xchg
jmp
add
inc
dec
orb
das
jne
dec
fucomp
mov
or
mov
add
jmp
arpl
jb
mov
shl
outsb
loop
add
push
mov
mov
fmuls
add
daa
push
into
insl
pop
pop
push
dec
ret
sbb
insl
subb
sub
mov
mov
dec
sarb
adc
mov
scas
xchg
mov
mov
push
lds
sbbw
push
or
dec
hlt
inc
ret
rorb
mov
lock
je
cwtl
inc
push
div
push
mov
repz
push
cs
inc
xchg
inc
sbbb
sbbl
or
iret
mov
outsl
lds
idivb
cmp
dec
dec
pop
adcl
jne
sub
movsl
ret
loop
push
adc
ja
cld
push
repnz
popa
pop
or
mov
push
inc
lahf
mov
xchg
pop
push
popf
xor
fisubs
mov
jl
ror
pusha
dec
adc
sbb
imul
aad
mov
jmp
mov
fwait
cmp
sub
and
or
test
sub
mov
mov
push
or
pop
daa
pusha
cmpb
pop
ds
lds
ljmp
iret
aam
sbb
push
jae
movsl
xor
je
pop
test
add
loop
les
inc
stos
mov
push
cmp
jo
cwtl
arpl
or
jecxz
insb
icebp
and
push
fwait
out
mov
push
fisubrs
jae
jae
and
add
adc
push
jmp
xchg
data16
loopne
and
xchg
std
gs
jbe
mov
push
das
filds
cmp
sbb
jle
jle
pop
add
jo
push
pusha
nop
or
push
aas
push
push
cmpb
fs
jmp
repnz
push
xor
leave
jb
add
and
pop
adc
inc
dec
mov
cmp
outsl
popa
inc
repz
sub
xchg
fdivrl
ret
push
xor
loop
das
cmc
push
rcll
pushf
sub
xchg
or
ret
popa
mov
prefetch
jne
sarb
mov
call
loop
and
std
enter
out
js
roll
loope
mov
jno
add
test
pop
repnz
ljmp
out
frstor
lock
push
mov
sti
jb
push
and
pop
push
pop
loopne
mov
pop
sbb
push
pop
ljmp
mov
aaa
icebp
cmp
sbb
rorl
jmp
ljmp
sub
into
pop
shr
testl
xchg
sbb
mov
adc
add
imulb
push
push
mov
or
iret
push
sub
popa
cmpl
icebp
sbbl
mov
mov
daa
leave
aad
loop
cmc
icebp
adc
ret
icebp
pusha
xchg
cmp
pop
pop
adc
xor
jne
xchg
or
icebp
push
inc
xor
test
dec
lock
ljmp
add
jge
push
or
pop
xor
xchg
mov
adc
push
adc
sub
cmp
pop
pop
xchg
adc
jmp
push
scas
lret
loope
and
jmp
js
mov
iret
cmp
mov
mov
pop
fcompl
leave
sub
not
das
xchg
inc
call
out
push
sub
xchg
push
aam
lret
xchg
cbtw
insl
popa
imul
into
into
or
pop
inc
push
in
fdivrs
inc
mov
sahf
cmp
add
cmp
and
sbb
push
xchg
leave
fstpl
adcb
push
sarl
jno
mov
imul
lods
aaa
jnp
sub
or
out
testb
add
movsl
div
adcb
dec
repnz
sub
adc
mov
add
pushf
adc
lods
sub
pop
pop
imul
or
ljmp
jg
cmp
xchg
mov
in
mov
xor
imul
sbb
ss
push
or
lret
and
sub
adcb
hlt
andb
aad
cli
and
or
cmp
scas
inc
jp
sub
pop
out
push
adc
jmp
pop
or
mov
lods
xor
sti
loope
outsb
clc
cld
test
mov
add
mov
inc
out
xchg
adc
push
xchg
ljmp
adc
cmp
and
xchg
in
mov
add
sub
nop
mov
fsubp
xor
pop
and
or
push
and
xor
hlt
pop
xchg
scas
hlt
push
xchg
out
daa
in
psubq
jbe
pop
adc
cld
inc
sub
xor
add
add
mov
sub
jno
mov
jae
inc
pop
push
mov
cmc
dec
or
jle
push
add
sub
clc
pop
inc
pop
push
leave
enter
aaa
notb
jns
stos
sub
fcompl
in
pop
mov
scas
jns
das
sub
rcl
push
mov
add
xor
sub
lock
out
inc
clc
pop
int3
jecxz
repnz
mov
and
adc
xchg
mov
xor
sarb
dec
mull
jg
jmp
adc
dec
push
mov
dec
jno
push
push
push
jl
adc
sbb
push
pop
mov
adc
cmp
or
jecxz
rcll
ret
or
push
mov
pop
add
loop
scas
pop
lods
xchg
out
cmpb
cmpsl
cmp
sbb
in
xor
and
movsl
add
bnd
xchg
outsb
xchg
mov
sbb
call
ror
fwait
add
sub
add
sbb
pushf
inc
popf
ljmp
inc
repnz
imul
daa
xchg
pop
loop
adc
stc
cmp
sarb
movsb
add
sarb
pusha
fdivrs
mov
cmpsb
clc
inc
push
mov
cs
or
sub
xor
stc
call
cmp
xor
pop
ret
int3
test
fiadds
pop
sub
popl
mov
and
gs
test
cmc
sbb
dec
or
sub
jp
rolb
or
dec
mov
cwtl
ljmp
sarb
pop
ljmp
push
jl
cmpsb
jge
or
cmp
mov
add
jnp
xor
aas
jge
jge
test
push
sti
ljmp
call
dec
cwtl
adc
xor
aaa
pop
mov
scas
enter
inc
idivb
popf
push
mov
and
aaa
jge
lret
jo
add
pop
push
mov
dec
clc
dec
dec
pop
xchg
add
adc
imul
xor
inc
or
pop
ret
inc
mov
leave
and
pusha
insl
das
push
push
lods
mov
push
jle
dec
push
mull
jecxz
lods
jmp
mov
mov
sub
or
not
push
addr16
jbe
push
iret
sub
lea
faddl
xor
push
mov
jno
mov
ja
dec
sbb
rorb
addb
jb
sub
sub
leave
int3
outsb
test
enter
stos
dec
ror
cmpsb
ret
cmpb
push
sbb
aad
subb
push
push
outsl
subb
jl
xchg
jne
or
inc
jnp
rcl
inc
jge
mov
movsb
add
jecxz
add
mov
fadd
inc
sub
pusha
ret
add
std
or
push
adc
or
add
movsl
test
xchg
test
and
test
mov
out
pop
dec
ss
jle
bound
stos
lahf
lcall
ss
int3
pop
push
or
fwait
push
icebp
inc
xorb
or
push
push
dec
or
adc
ret
push
mov
das
push
cltd
and
mov
int3
mov
adc
mov
shrl
daa
sbb
and
das
push
add
ljmp
dec
nop
or
inc
xchg
push
shrl
inc
sti
das
rcrb
push
adc
pop
dec
and
sub
es
jnp
loope
sub
jno
push
data16
jle
push
sub
and
enter
jmp
ficoml
shl
jmp
out
sub
cmp
add
push
inc
enter
mov
or
push
pop
pop
cs
pop
push
pop
add
add
sub
popf
push
ret
or
fisubs
cs
and
xchg
cld
testl
mov
jmp
sub
xor
testl
xchg
cmpb
push
fsubrl
rcrb
push
jmp
sbb
push
pop
xchg
test
testb
pusha
repnz
sbb
add
xchg
test
aam
lret
cmp
cmpl
mov
adc
mov
jg
dec
xchg
or
inc
scas
movsl
fdivs
pop
hlt
data16
or
or
jge
cwtl
fsub
push
push
test
int
sbbl
clc
xor
jge
dec
nop
sub
daa
ja
inc
xor
cmpsl
in
add
adc
int
pop
aas
or
push
mov
or
cmp
lock
jg
adc
aad
push
cmc
or
and
or
dec
call
mov
pop
dec
push
inc
mov
and
ss
mull
inc
lret
mov
scas
jmp
xchg
das
dec
jmp
lret
ret
insb
pop
sbb
cmp
mov
ficomps
sub
lea
pop
data16
push
jno
das
jmp
push
push
stc
lods
pop
adc
xor
adc
inc
mov
ljmp
push
fs
imul
add
daa
and
and
jmp
addr16
sub
sub
mov
mov
adc
rcrb
sarl
push
xor
mov
pop
mov
sub
repnz
dec
jne
cmp
sub
push
aas
pop
test
add
cli
pop
pop
cmpb
imul
add
push
adc
lods
ds
mov
dec
add
push
sbb
jmp
mov
or
jbe
lods
fisubs
out
push
mov
mov
mov
cmp
jne
mov
cmp
insl
push
imul
pop
sub
dec
out
pop
test
sbb
pop
cld
push
ja
xchg
icebp
push
mov
mov
mov
dec
arpl
dec
or
aad
xchg
popf
notl
or
xchg
push
pop
adc
das
jge
in
add
lods
inc
or
add
inc
dec
sub
adc
and
dec
jg
imul
rol
mov
xchg
and
sub
jg
xchg
dec
mov
sbbl
out
inc
sarb
cltd
dec
les
in
sbb
cmc
xchg
inc
fwait
sub
jmp
pop
ss
cmp
jmp
sahf
add
fnstsw
or
jae
mov
add
pop
mov
or
pusha
dec
mov
inc
mov
pop
jp
inc
cmpl
jbe
cld
adc
scas
outsl
test
or
das
rep
or
push
orb
and
xor
and
xlat
and
arpl
pop
dec
mov
and
out
mov
mov
ja
mov
mov
pop
mov
cmp
pop
pop
icebp
nop
xor
mov
shlb
rorl
cmp
pop
es
add
jae
pop
pop
and
gs
inc
lods
cmc
dec
iret
lods
sub
js
mov
stos
outsl
icebp
jns
cmp
aam
push
sub
bound
pop
jp
push
add
gs
test
add
or
or
jle
lods
fdivp
shrl
jnp
jl
dec
or
add
inc
fnsave
in
dec
xlat
push
subb
test
faddl
out
or
pop
inc
iret
inc
lds
inc
nop
sub
or
nop
cwtl
cli
and
imul
dec
stc
and
sub
fcomps
rorl
or
sbb
inc
stc
pop
mov
lcall
xor
sub
fldenv
mov
pop
sbb
push
jecxz
inc
outsl
mov
add
cmp
pop
or
push
adc
rcrb
inc
mov
das
leave
and
mov
es
mov
ljmp
scas
mov
pop
test
loope
mov
js
mov
inc
jmp
nop
and
pop
insb
dec
pop
or
pop
addr16
and
inc
out
jne
sub
aam
je
push
mov
idivb
xor
pop
mov
mov
adc
add
and
push
add
add
test
aaa
notl
in
jnp
dec
sbb
dec
mov
push
aas
lret
mov
cmp
test
inc
jmp
ja
das
and
loope
inc
adc
sub
test
cmc
push
pop
pop
push
mov
push
sbb
call
sbb
stos
popa
jmp
push
or
add
adc
or
filds
clc
jbe
std
sub
aas
addb
stc
add
cltd
dec
outsl
cli
or
dec
shlb
lea
std
out
pop
pop
pop
add
sbb
xor
aam
mov
inc
or
dec
xor
jb
add
inc
add
dec
ds
adc
add
sti
jp
jge
jl
or
dec
inc
push
mov
xchg
push
lock
pushf
mov
add
jmp
enter
jb
lahf
in
pop
mov
xor
stos
das
in
ficompl
cmpb
rcrb
pop
jno
test
jecxz
les
xchg
rcll
not
dec
add
jge
ss
mov
sub
or
pop
sub
or
add
pop
sub
ljmp
sahf
xchg
or
jbe
jecxz
loopne
xor
jae
sqrtps
ret
aad
std
ss
sbb
lret
cld
jle
call
and
sub
ret
or
rorb
in
repnz
pop
gs
mov
inc
add
add
and
rcll
cltd
aam
jmp
sbb
and
sub
pop
test
sub
ljmp
dec
dec
cmp
sti
add
out
xchg
push
popa
mov
mov
dec
data16
aas
cmp
shrl
pop
ja
xor
mov
fisubrs
orb
pop
push
lahf
jmp
inc
jne
mov
and
and
outsl
mov
inc
or
inc
push
lahf
mov
sbb
dec
mov
rcrl
xchg
loope
arpl
insl
es
or
xchg
pop
add
aaa
fidivs
pop
xor
xor
mov
stc
cmp
sbb
mov
aad
scas
mulb
dec
jecxz
jns
and
aas
jmp
test
mov
arpl
outsb
sbb
pop
lock
cmp
pop
dec
push
rcrb
mov
adc
test
pop
pop
xchg
lret
daa
dec
push
mov
sub
pop
cmpsb
dec
in
inc
inc
insb
imulb
test
sub
jg
xchg
push
orb
push
outsb
mov
adcb
addb
jmp
mov
ficoml
aas
movsl
sti
enter
adc
dec
std
xor
mov
adc
jecxz
jmp
mov
ds
mov
test
test
stos
mov
dec
das
adc
pop
jo
mov
bound
lds
mov
adc
rclb
ljmp
adc
in
pop
add
ja
jg
dec
xor
mov
fxch
jne
cld
aad
pop
ret
out
or
gs
mov
testl
mov
nop
das
js
xor
enter
sub
add
int3
push
jmp
mov
sbb
shrl
jle
sub
jne
push
cmp
dec
incl
sub
push
add
ret
mov
enter
pop
dec
test
add
dec
iret
adc
pop
movsb
fucomip
es
push
mov
push
jmp
mov
cwtl
sub
mov
adc
xchg
add
pop
add
fdivrs
dec
inc
test
pop
adc
pop
mov
push
fisubs
cmp
pop
lods
mov
jns
push
insl
sub
push
push
jl
sbb
adc
or
dec
inc
push
or
pop
pop
cwtl
pop
dec
push
and
inc
out
loopne
pop
and
lahf
cld
out
pop
inc
dec
mov
push
mov
mov
leave
or
sbb
or
les
xor
push
dec
enter
in
testb
push
mov
scas
clc
mov
sub
adc
jmp
xor
out
add
inc
add
mov
or
test
adc
sub
jns
fsts
push
daa
jge
push
push
out
add
jg
pop
mov
pop
stos
lret
stos
adc
imul
bound
push
mov
mov
mov
iret
cmovp
mov
add
je
jnp
or
inc
jbe
pop
in
clc
xchg
sbb
in
mov
sbbl
push
add
cli
or
jo
ret
test
push
jae
shr
inc
ret
fcmovnbe
stos
int
divl
out
outsb
in
sbb
sub
xor
jbe
cmp
cmp
cmp
dec
aad
popa
std
add
cwtl
outsb
lret
xchg
out
rcr
jmp
cmp
loope
xchg
and
inc
orb
sub
rcr
mov
das
iret
dec
ljmp
sub
repz
xorl
ja
das
jle
xchg
enter
add
xor
cmc
adc
loope
out
xchg
fimuls
sar
xchg
push
xorb
xor
pusha
push
push
adc
ret
mov
sbb
icebp
stos
jle
dec
popa
inc
add
push
pop
jo
loope
pop
mov
mov
insb
pusha
and
int
ja
pop
jp
popa
mov
iret
inc
enter
or
jp
dec
adc
repnz
enter
dec
dec
mov
fwait
add
mov
pop
cmp
rcrl
pop
push
add
push
add
loop
xchg
sub
lock
cmp
pop
pushf
lret
daa
jne
ret
xchg
inc
testb
sbb
test
mov
aaa
push
sti
sbb
dec
xchg
sbb
sub
pop
imul
test
stos
sbb
addb
cmpsb
inc
mov
push
and
rcr
sub
push
jle
pop
jno
movsb
and
adc
cmp
jle
dec
cmp
pop
xchg
js
arpl
xchg
lods
out
mov
pop
mov
imul
inc
nop
aaa
or
rcrb
mov
or
and
and
jmp
adc
std
das
std
push
push
push
or
sbb
or
xchg
cmp
pushf
pop
loope
lret
xchg
or
push
and
add
push
jp
or
loopne
test
pop
mov
sbb
sub
pop
dec
adcl
mov
fldl
sti
jb
add
push
aas
mov
aaa
push
push
outsb
outsl
les
std
or
cmp
lods
imul
pop
in
cmp
cwtl
lcall
enter
sbb
sub
in
add
xchg
and
cmp
mov
xor
fdivl
adc
out
and
sub
mov
or
stos
xlat
xlat
cmp
repz
dec
test
push
sub
jno
sub
dec
pop
adc
cmp
subb
test
jmp
sub
pop
test
dec
inc
aam
pop
inc
jl
mov
add
insb
je
aad
stos
pop
sbb
pusha
sbb
imul
sub
add
cmp
or
mov
or
jecxz
lcall
mov
pop
sub
jo
in
or
fs
ja
insb
test
iret
dec
mov
add
mov
js
cmp
add
or
xor
pop
mov
sub
lock
lds
mov
pushf
push
mov
ljmp
xor
repnz
shlb
jb
inc
cmp
push
repnz
adc
lds
js
mov
aam
mov
adc
fcompl
jno
test
test
mov
mov
xor
adc
and
in
mov
jge
mov
jae
mov
xchg
popa
call
pop
sahf
roll
test
dec
jb
shlb
mov
into
adc
pop
add
cmp
mov
xchg
cmpsl
xchg
lock
jecxz
addl
scas
bound
stc
jmp
xor
sub
dec
adc
sub
xor
pop
pop
mov
pusha
sub
aad
dec
mov
mov
loopne
neg
or
out
inc
mov
push
hlt
int
push
cmp
scas
add
lock
push
fs
mov
inc
rolb
xor
xor
or
push
jno
lahf
sbb
and
outsl
xchg
or
out
popa
sbbl
pop
cmp
pop
out
cmp
sbb
pop
adc
xchg
adc
ret
mov
decb
popa
sbb
adc
adc
dec
call
and
insb
dec
pop
iret
mov
mov
sbb
xchg
push
popf
shr
push
mov
mov
aad
pop
jg
jae
inc
outsb
rol
icebp
xchg
cmp
scas
pop
and
icebp
xlat
dec
sub
cmp
inc
pusha
add
lods
in
mov
or
cmc
bound
xor
cmp
ljmp
xchg
mov
pop
jle
insb
xor
fists
out
push
adc
adc
push
pop
push
stos
and
iret
hlt
cmp
dec
shll
out
push
cwtl
xor
pop
mov
jb
repz
loop
adc
jmp
ret
test
popa
mov
outsb
xor
pop
jl
xor
vorpd
test
pop
mov
inc
pop
xor
bound
xlat
mov
or
pop
mov
cs
xor
aad
call
add
cmpsl
add
sub
test
adc
cwtl
or
adc
lahf
xchg
and
and
div
push
mov
das
sbb
inc
in
jae
insl
add
std
rclb
jmp
daa
aaa
mov
fmull
ret
mov
add
in
enter
inc
lret
push
es
add
xor
jmp
and
cmc
out
dec
mov
movsl
cmp
pop
das
stos
cmp
jno
mov
movsb
xor
out
sub
mov
jmp
add
out
inc
jne
jno
idivb
addr16
fiadds
inc
mov
xor
add
aam
xor
pop
xchg
mov
or
enter
int3
pop
mov
push
rorl
cmp
dec
pop
aad
adc
arpl
adc
stc
ret
call
add
lock
rolb
out
sbb
mov
fiaddl
addb
dec
pop
adc
test
fidivrs
daa
or
mov
push
push
ror
push
push
inc
dec
rcrl
or
mov
xchg
rolb
mov
hlt
gs
dec
xchg
mov
pop
push
xor
xor
xor
jmp
pop
and
lret
push
adc
inc
jg
imul
inc
push
xchg
std
sub
jmp
in
fmulp
das
mov
add
xchg
loope
add
push
rcrb
push
jae
add
xor
jge
repnz
mov
pop
hlt
lahf
jmp
cmpsl
pop
int
gs
or
push
fiadds
in
mov
gs
js
pop
enter
and
fildl
inc
or
mov
mov
push
push
arpl
loop
fnsave
out
shl
jmp
inc
jnp
jae
rcll
rcll
stos
jecxz
dec
std
enter
and
out
sub
shll
jp
or
inc
sbb
sbb
les
sbb
sbb
jp
adc
or
inc
mov
adc
int
push
xchg
mov
in
inc
outsl
repz
push
pop
pop
inc
push
or
jmp
lods
imul
push
or
sub
scas
jmp
test
fsubrl
ret
fsts
cmp
jmp
cmp
xchg
or
aam
test
jns
push
push
jl
std
add
in
inc
add
dec
xor
push
cltd
dec
cmp
jmp
or
inc
push
loop
test
mov
incl
sahf
scas
fstl
cmp
add
push
dec
jge
pop
ret
or
jbe
shrb
lods
sub
sub
cld
inc
popa
lret
push
push
js
das
cmp
scas
push
into
jl
xor
lahf
sbb
jp
dec
roll
mov
cmp
sbb
js
xor
mov
daa
jne
adc
xchg
mov
lds
jmp
jmp
addr16
and
adcl
sbb
cmp
cmp
mov
mov
lock
daa
add
and
or
pop
pop
cmpsl
sti
inc
or
aam
adcb
iret
das
fstpt
ja
aam
xor
out
pop
xchg
xlat
std
and
sub
sub
add
xor
sti
fnstcw
fidivs
enter
add
mov
mov
push
mov
sub
add
shr
fldl
cs
and
xchg
or
leave
cmp
jl
pusha
jg
sub
fcoml
push
outsl
cmpsb
or
or
loope
cmc
pusha
push
and
mov
adc
shll
int
divl
jbe
mov
add
sarb
jae
mov
insl
xchg
xor
push
sarb
add
dec
sub
aaa
sub
push
orb
ficomps
inc
movsb
ficompl
push
or
mov
jg
shl
dec
lret
and
enter
add
push
push
fucomip
lea
mov
stos
repnz
jo
lea
or
call
push
add
cmp
jl
mov
popa
mov
unpckhps
xchg
cwtl
or
sub
pop
dec
xor
push
dec
fwait
mov
and
mov
aas
pop
xchg
aam
push
ja
test
les
iret
dec
clc
adc
pop
push
cwtl
sub
pop
push
decl
rclb
adc
aad
jle
sub
push
dec
add
sbb
or
movsl
xor
jmp
test
inc
inc
pushl
dec
jmp
andb
fsts
movsl
out
mov
pop
and
aam
push
xchg
shlb
add
mov
jnp
and
push
dec
push
add
test
or
cwtl
les
ds
or
and
daa
pop
enter
dec
shl
mov
push
enter
xchg
jbe
gs
pop
pop
test
lods
push
int
xchg
dec
gs
pop
and
xor
je
add
inc
out
pop
jg
sbb
push
jl
pop
fimuls
inc
rorl
inc
imul
mov
and
std
nop
inc
dec
dec
nop
adc
sub
add
mov
xor
pusha
pop
push
dec
inc
cmp
or
pop
mov
or
sub
dec
cltd
push
sub
jae
daa
xchg
jp
xchg
mov
jle
decb
xor
mov
or
push
or
inc
in
outsb
sub
sbb
cs
pop
clc
mov
jmp
iret
dec
scas
rcrl
mov
pop
mov
sub
lcall
lds
in
pop
stc
add
test
popf
jnp
mov
sbb
push
dec
sub
imul
mov
in
jmp
xchg
xor
xor
mov
int3
lret
jmp
out
pop
xor
inc
xlat
clc
daa
scas
jge
mov
jnp
sub
pop
mov
nop
ficoms
sbb
cmp
sub
add
bound
sub
add
mov
sub
and
clc
push
and
xor
add
sub
pop
lds
or
add
push
or
cmp
add
leave
push
dec
xor
ret
loope
mov
sahf
nop
mov
dec
jo
jecxz
fs
push
xor
pop
mov
ret
dec
push
pusha
and
cltd
add
mov
jmp
test
aam
int3
rcrb
cltd
and
or
and
mov
push
mov
rclb
orb
flds
insl
xchg
pop
push
or
pop
mov
sahf
jmp
mov
and
xchg
sti
cmp
push
mov
fwait
pop
xor
dec
out
jge
jp
dec
jno
call
add
ljmp
adc
sub
loop
cmc
xchg
push
rcll
jns
cmp
mov
dec
pusha
popf
jmp
cmovnp
pop
fdivrl
cld
addl
dec
aam
or
add
push
inc
popa
lods
dec
dec
jne
mov
repz
pop
flds
mov
sub
inc
or
pop
ret
add
sub
sub
icebp
or
jmp
push
fs
dec
xchg
movsb
out
inc
es
cmpsl
and
or
pop
shrb
aaa
insb
cmc
xor
add
add
sub
xor
rolb
scas
add
int
sub
dec
add
xor
jle
pop
fidivrl
push
js
sub
mov
dec
pop
inc
or
mov
fisubrs
dec
inc
popa
cmp
push
or
jb
pop
sub
sbb
and
xchg
mov
mov
xor
add
gs
or
sbb
mov
and
insb
or
imul
mov
inc
in
mulb
sbb
add
add
pop
push
mov
neg
iretw
adcb
lcall
fbld
sbb
fstpt
mov
pop
push
frstor
out
push
push
push
in
mov
pop
push
xchg
push
fwait
pop
das
addl
pop
xor
mov
add
in
sbb
jns
sbb
out
and
in
sub
mov
pushf
into
iret
dec
cld
add
mov
fisttpll
out
sub
inc
movsl
lods
repnz
jp
push
mov
lods
jge
daa
xchg
dec
rolb
or
gs
or
incb
test
into
jmp
pop
push
int3
cltd
cmp
jae
jp
add
orl
or
jmp
mov
in
insb
push
add
lods
incl
xor
into
and
jae
cwtl
push
jl
adc
push
dec
mov
add
mov
push
dec
pop
jmp
add
push
push
sub
xchg
pop
pop
or
test
sub
add
dec
jmp
or
inc
in
aad
int3
pop
and
or
icebp
aas
gs
popf
scas
xor
jo
xchg
add
xor
fcoms
pop
xchg
inc
pop
mov
orb
test
enter
cmp
pop
out
or
and
in
cwtl
ret
dec
popf
test
js
inc
dec
lock
mov
add
cs
out
and
jns
ret
lock
pop
ret
pop
add
sub
cmpsl
add
push
mov
pop
in
pop
sub
jmp
lret
add
dec
minps
cmp
aad
sub
lds
rcll
outsb
sub
das
mov
das
mov
xchg
cli
je
andl
push
mov
fcoms
mov
mov
movsb
dec
and
repnz
arpl
sub
inc
xchg
lods
mov
jge
pop
mov
je
icebp
cmpsl
cmp
push
pusha
rorl
mov
and
mov
dec
shr
loope
and
dec
dec
cmp
push
push
or
push
lods
inc
xor
movsb
dec
test
jge
sub
ret
repnz
push
push
mov
mov
test
mov
scas
and
adc
sti
pop
mov
mov
cmp
push
mov
sub
add
jl
or
push
stc
imul
es
iret
xor
orl
mov
xor
out
out
pop
sarl
jge
adc
push
sbbb
mov
lods
jae
mov
outsl
in
das
call
xor
mov
adc
testl
cmp
pop
mov
pop
xlat
subb
mov
push
sub
incl
inc
cltd
push
pop
mov
call
jae
sti
cmp
cmp
nop
mov
xor
inc
sbb
dec
xor
mov
xor
stos
push
mov
out
dec
mov
jb
push
notl
loop
push
pop
and
push
mov
xchg
pop
push
mov
sub
xor
popf
pop
lahf
popa
jmp
mov
in
mov
jg
push
or
xchg
pop
gs
mov
jb
js
lahf
aam
add
push
insb
pop
jns
and
cmpsb
mov
out
in
or
or
jo
add
cmc
jg
fnstsw
push
inc
push
lods
and
pop
cmp
add
in
xor
pop
loop
push
subb
mov
test
xchg
movsl
push
pop
mov
and
outsl
sub
sbb
faddl
pop
loop
pop
scas
fistpl
jmp
sbb
jl
xor
into
gs
cli
adc
fucomp
xor
inc
inc
mov
pop
mov
jbe
loop
inc
aad
sti
adc
das
cmp
and
fucompp
in
stos
dec
fidivs
jp
add
nop
sub
ljmp
and
or
pop
mov
repnz
xor
add
je
shr
xchg
cmp
mov
lea
dec
scas
push
push
addr16
out
clc
shl
aad
mov
pusha
je
xor
and
add
xchg
popf
inc
cmp
pusha
pusha
or
sbb
insb
mov
es
or
jno
inc
fst
pop
cmp
pop
push
cs
movsb
lcall
mov
xor
fwait
sub
and
adc
dec
out
cmp
push
jg
dec
sub
int
cmp
sub
mov
rorl
jge
adc
xor
push
test
add
into
sub
pop
jle
loope
dec
push
ret
pop
push
ljmp
test
add
jge
pop
lods
push
int
push
or
cmc
push
push
add
mov
push
sbb
and
mov
jp
and
add
add
sub
and
std
sbb
push
push
loopne
jle
dec
pushf
mov
andb
push
pop
add
ret
xchg
push
sti
clc
jmp
push
shrb
fbstp
insl
sar
shlb
jle
pop
cmc
inc
inc
or
cmp
add
fwait
ja
outsl
cmpsb
orb
cmc
pop
imul
sti
or
mov
xchg
xorb
push
cmpsb
sub
lods
popa
pop
cmp
test
icebp
cmc
out
and
loopne
sub
xor
mov
test
fs
jg
cwtl
shl
adc
ja
sub
pop
jmp
leave
push
adc
lock
lods
adc
sub
aam
dec
adc
mov
adc
push
dec
jmp
push
out
dec
mov
and
mov
jno
mov
insb
cmp
or
push
not
and
xchg
mov
test
aam
adcb
mov
jge
xchg
jl
dec
adc
sbb
clc
push
aad
cmc
bound
xorl
sbb
jmp
mov
lock
push
aam
inc
mov
adc
mov
sub
and
xchg
daa
jbe
repz
push
jnp
dec
pop
stc
pop
insb
inc
push
add
fisttpl
ds
pop
push
xor
rcl
out
pop
inc
add
les
jb
cmc
pusha
jnp
fidivrl
pop
frstor
mov
mov
jg
dec
pop
dec
push
lcall
aaa
loope,pn
push
std
push
dec
sarb
adc
push
pop
out
push
mov
jmp
add
sbb
and
ret
loope
and
and
push
mov
cltd
or
dec
or
or
stos
mov
mov
and
jnp
cmc
and
xor
jno
and
adc
mov
inc
nop
jmp
daa
add
mov
sub
jmp
jp
ja
xchg
outsb
xchg
sub
jb
sbbb
out
repz
mov
das
push
pop
aam
and
fs
hlt
lock
movsb
sbb
pop
bound
and
jp
rcll
lods
jp
shr
xor
outsb
pop
inc
adc
in
lods
pop
jno
and
mov
and
cmp
pop
cmc
test
fs
push
cmc
jo
xchg
add
dec
add
and
add
dec
test
clc
mov
cli
ret
call
xor
ja
ds
loopne
pop
dec
push
push
adc
xchg
mov
in
lahf
dec
pop
hlt
cli
rcrb
sub
fs
cltd
and
or
add
stos
jne
and
and
push
inc
lock
adc
sahf
sub
test
adc
insb
inc
xchg
or
xchg
sub
cmpb
movsb
dec
movl
push
sub
popa
es
aaa
adc
mov
xchg
mov
cmpsl
jns
jmp
push
mov
in
stos
and
mov
data16
dec
adc
pop
stos
fcompl
xchg
xchg
pop
popa
mov
push
test
sub
outsl
ljmp
xor
inc
ja
sahf
roll
incl
jns
lret
mov
js
mov
pop
add
sub
and
sbb
out
rol
xchg
in
inc
push
push
inc
cmpsb
dec
adc
gs
add
arpl
adc
pop
roll
out
or
subl
jecxz
cmp
inc
jecxz
pop
rcll
ljmp
push
fs
mov
cs
lods
ret
jg
xor
imul
add
and
dec
push
xchg
and
lcall
mov
mov
xchg
adc
imul
scas
cld
andb
or
cwtl
xor
jne
movsl
aad
testb
loope
scas
loopne
stc
pop
nop
movl
and
roll
jmp
addb
cmp
dec
pop
in
or
adc
xor
fstpl
imul
push
push
fnop
add
insb
lods
das
test
dec
cli
xor
ret
add
imul
push
mov
pop
pop
and
mov
scas
cltd
inc
jmp
push
fildl
fwait
sbb
cmp
test
mov
xchg
push
or
inc
in
push
mov
pusha
or
add
mov
cld
cwtl
cli
or
das
xchg
sbb
std
jecxz
sbb
push
push
or
repz
xor
in
pop
inc
sarb
and
fld1
push
jns
and
sbb
daa
jne
mov
jns
dec
jle
lods
fists
andl
fwait
and
sbb
inc
inc
sub
mov
stc
outsl
aad
sti
xchg
inc
mov
out
mov
rcll
add
ljmp
fwait
sub
int3
adc
pop
xchg
jmp
icebp
mov
inc
and
popf
pop
outsb
loopne
shrl
dec
jne
sbb
and
add
adc
push
jbe
or
rclb
sti
ds
add
cmp
daa
sub
push
dec
adc
mov
jg
aas
gs
imul
pop
xchg
lcall
push
push
xchg
in
push
mov
sub
add
std
stc
bound
mov
pop
mov
lcall
ds
dec
in
inc
lods
xchg
inc
dec
add
sub
js
andb
popa
imul
pop
dec
mov
sub
cmc
mov
movsb
fldl
add
sbb
shl
lods
sbb
test
mov
jns
pushf
dec
shlb
cmp
lock
inc
pop
sbb
repnz
nop
orb
sbb
and
xor
push
dec
push
mov
xchg
sub
out
dec
sub
icebp
adc
ror
xchg
outsl
shrl
sahf
lcall
push
xchg
cld
mov
sub
add
pshufw
sbb
data16
adc
sub
inc
or
cmp
daa
dec
cmp
or
jbe
sbb
inc
mov
pop
cmpsb
inc
pop
icebp
add
and
mov
cmpsb
xchg
dec
outsb
add
push
mov
mov
ja
fwait
jecxz
add
inc
cmp
add
and
sub
sti
popa
clc
pushf
push
add
mov
add
and
jle
jp
push
push
scas
cmp
xchg
or
pop
imul
mov
inc
fstl
dec
sbb
xor
sub
push
negl
push
add
test
subb
mov
xorb
out
pusha
push
call
dec
nop
in
mov
push
loop
push
jnp
mov
sub
jg
dec
or
xchg
fiadds
and
push
dec
and
shl
inc
lods
cwtl
add
mov
xor
or
adc
or
jg
mov
jmp
jno
nop
mov
sbb
inc
icebp
cld
sarb
inc
adc
inc
scas
mov
sub
sbb
insl
fisubl
hlt
push
and
xchg
into
push
push
push
pop
scas
add
jne
sbb
dec
nop
mov
rcrb
sbb
pop
or
add
sub
fsub
dec
xor
ret
jge
xor
xchg
jno
imul
fdivrs
dec
pop
jecxz
dec
inc
das
adc
aas
dec
pop
sub
dec
push
dec
dec
push
pop
push
mov
xlat
insl
push
and
clc
pusha
stos
add
cwtl
pop
cltd
call
ljmp
cmp
fidivrs
pop
jmp
arpl
mov
cmpb
sbb
or
jne
and
inc
aas
lret
and
jnp
mov
add
sbb
pop
xchg
and
cmp
mov
scas
cmp
daa
mov
sub
loopne
and
ljmp
jmp
xchg
ja
add
xchg
out
and
inc
daa
cmp
cli
test
pop
clc
mov
ficompl
insl
jge
int3
dec
push
inc
call
jmp
inc
or
inc
or
xor
cmp
dec
fmulp
inc
jno
push
cmp
push
stc
push
sub
push
sarb
or
pop
xchg
daa
bound
sbb
sub
sub
xor
stos
adc
sub
jb
scas
adc
scas
push
mov
sub
add
test
scas
nop
mov
aaa
ret
add
test
das
gs
hlt
push
test
mov
loopne
movsb
or
fisttpll
movsb
or
xor
add
adc
sbb
jle
mov
cmp
test
out
mov
add
cmp
and
pusha
pusha
imul
xchg
outsl
cmp
inc
call
add
xchg
mov
pop
mov
loop
pop
or
pop
roll
repnz
test
jmp
xor
stos
push
xchg
iret
pushf
mov
cmp
jno
pop
push
push
jp
mov
mov
push
push
out
or
int3
andb
dec
sti
daa
shrb
mov
or
push
sub
add
notb
add
in
sub
or
mov
lret
push
das
add
jmp
mov
scas
in
cmp
ret
inc
out
aas
loope
out
sub
mov
jg
jne
add
mov
inc
inc
push
and
mov
movsl
stos
test
pop
mov
or
or
pusha
push
sbb
in
mov
xchg
decb
xlat
jns
and
sbb
push
imul
iret
xorb
stc
jae
sahf
sarl
jmp
leave
jl
aas
adc
push
daa
add
icebp
cmpsb
imul
stos
xchg
cmp
cmp
loope
rcrl
and
cmp
add
test
popf
fcompl
or
cmc
dec
add
jb
sub
dec
or
or
inc
mov
xchg
add
lds
or
sub
or
aam
mov
and
push
adc
cmp
xor
or
cld
cmp
sti
and
add
jp
scas
sub
aad
fcomps
push
mov
and
push
push
cmp
sub
adc
add
sub
inc
push
gs
adc
das
mov
lods
notl
mov
inc
xchg
gs
fmuls
mov
and
mov
hlt
fbld
ja
push
insb
sbb
pop
loope
push
jno
ja
xchg
inc
or
in
push
loope
adc
jle
das
hlt
cs
gs
sbb
push
xchg
rcl
sub
mov
sub
pop
movsl
ljmp
sub
pop
int
cmp
mov
pop
pop
test
pop
stos
lcall
jo
pop
imul
stc
test
push
dec
adc
insb
jb
mov
push
push
fstpt
in
out
mov
jb
scas
or
mov
and
pop
insl
pop
and
and
xorb
ret
dec
dec
pop
out
daa
rcl
mov
push
outsb
xlat
out
add
sbb
mov
pop
lods
insl
sar
sbb
popa
add
lock
dec
jge
pop
pop
push
jmp
int3
icebp
bound
pop
orl
pop
loope
in
xor
mov
mov
cwtl
mov
out
add
fists
and
mov
xchg
pop
cs
dec
hlt
mov
rorl
int
cmp
add
or
insl
pop
mov
ja
inc
clc
adc
jle
inc
nop
lcall
out
adc
add
cli
jbe
pop
ret
mov
cmp
ret
fs
loop
frstor
xchg
loop
cmc
cmp
movsl
sub
in
lock
in
mov
lahf
inc
mov
push
mov
shlb
pop
adc
cmp
push
jmp
fsubs
incb
out
xchg
cmp
repz
insl
adc
roll
data16
fstl
sbb
inc
repnz
pop
clc
pop
test
test
rcrb
out
add
loopne
dec
jmp
or
sub
xchg
sub
cmpsb
dec
ret
xlat
in
inc
lahf
ret
pushf
cli
inc
add
cmp
mov
push
sub
imul
add
fldcw
ljmp
lret
orl
sub
jo
pop
add
jmp
rcr
inc
pushf
pop
pop
and
insl
push
bound
add
inc
pop
inc
movsl
xlat
xchg
push
jmp
in
and
aad
out
jp
xor
fisttpll
cmpsb
movups
ss
rclb
sbb
push
push
mov
rolb
or
add
aas
jmp
adc
cli
xlat
pusha
or
ljmp
push
lcall
aam
cld
stc
add
cld
in
dec
xchg
mov
sub
sub
add
stc
xlat
test
dec
scas
enter
fwait
sub
div
xor
pushl
or
stc
pop
flds
leave
push
stos
aam
cld
sahf
inc
dec
xor
or
pop
icebp
addb
adc
ja
jmp
cmp
and
mulb
scas
and
hlt
mov
fisttpl
pop
lret
subb
sub
xor
pop
sbb
in
add
in
pop
int
shlb
popa
sub
data16
into
inc
sub
out
mov
divb
xchg
xchg
sub
sub
aas
clc
shll
daa
movhps
pop
mov
push
addr16
jns
test
push
mov
sub
jp
repz
adc
popf
call
rsm
and
pop
scas
inc
outsb
pop
cmc
stos
popa
loop
pop
push
rclb
pop
push
jge
daa
adc
jecxz
push
bound
test
lret
sub
aam
xor
and
rcrl
arpl
push
adc
adc
fcoms
add
fbld
add
mov
add
insb
jbe
dec
mov
loop
jl
jmp
mov
jbe
push
mov
xor
pop
and
lahf
into
fistl
adc
adc
add
or
cs
je
into
cmp
adc
mov
or
js
adc
push
jno
mov
shrl
mov
xor
sarl
mov
shlb
test
or
mov
jns
and
dec
push
sbb
xchg
andb
mov
fsubrs
push
dec
mov
mov
pop
addr16
cltd
pop
dec
stc
mov
jecxz
aas
xlat
xchg
inc
loopne
lea
xchg
mov
adc
jmp
call
cwtl
xchg
push
arpl
push
jmp
mov
adc
lods
neg
aad
movsl
ds
dec
ss
mov
cmc
add
push
loop
push
pusha
cmp
push
lret
jecxz
adc
test
test
add
div
test
push
push
add
xchg
add
xor
imul
or
test
jecxz
popf
fcomps
and
and
push
lret
movsl
jmp
dec
stc
mov
test
push
or
ret
or
das
adc
inc
jmp
dec
jne
icebp
mov
les
pushf
sbbb
or
enter
push
push
sub
push
adc
inc
andl
xor
out
sbb
or
in
dec
mov
add
dec
ret
sbb
sub
call
push
add
inc
push
ret
or
es
mov
or
shl
dec
hlt
pop
dec
rclb
out
jnp
mov
pop
sub
mov
or
push
push
sbb
dec
mov
aam
ja
in
lock
bound
xor
add
xchg
jmp
lock
sub
pop
lcall
inc
push
jae
mov
mov
inc
push
adc
xchg
jg
ficomps
dec
pop
inc
add
imul
es
push
repnz
pop
mov
mov
lea
pop
nop
nop
sub
jmp
xor
add
sub
cwtl
jne
adc
fcmovu
xchg
mov
cmpsl
shl
mov
out
push
mov
adc
jp
push
scas
or
lods
push
gs
pop
out
jb
jmp
sub
adc
xlat
test
or
jmp
ucomiss
push
pop
dec
mov
addl
ret
out
mov
sahf
pop
roll
lods
or
and
dec
bound
shr
addb
aas
cmp
sub
js
std
sub
aas
pop
jo
inc
mov
daa
mov
es
mov
in
xor
aaa
cs
imul
and
add
daa
inc
mov
push
pop
cltd
clc
and
or
jecxz
mov
jge
dec
jg
popa
jle
pop
dec
loope
and
xor
dec
sar
lea
dec
in
add
ljmp
addl
jo
lock
repnz
test
ret
adc
mov
push
dec
pop
mov
dec
addr16
mov
mov
dec
addb
xor
jp
and
gs
bound
incl
adc
inc
nop
imul
stos
out
xor
push
sbbl
or
insb
je
bound
insl
jne
lcall
xchg
xchg
dec
lods
out
insb
cmpsl
mul
add
outsb
imul
push
xor
lcall
sub
into
gs
lahf
add
sub
cmp
nop
out
lock
loope
mov
popl
mov
mov
js
pushf
and
movsl
pushf
or
mov
lock
testb
push
cld
andb
es
and
add
aad
sbb
pop
iret
sbb
mov
push
adc
adc
mov
jp
sbb
dec
addl
mov
pop
and
lahf
lds
pop
xchg
andb
jecxz
jne
jnp
dec
pop
aaa
mov
adc
repz
dec
jge
test
imul
sub
and
in
adc
sbbl
addr16
mov
add
pop
int3
sti
imul
push
mov
dec
int3
cs
popf
scas
push
adc
in
add
adc
shr
pop
add
add
lods
cmp
cli
add
mov
cmpsb
imul
lret
ret
and
push
and
xor
shl
xor
mov
ljmp
inc
xor
cs
push
sub
and
and
push
or
sub
jmp
dec
pusha
mov
or
loop
jne
sbb
mov
jecxz
and
jne
add
jp
jmp
sub
fs
lcall
and
jge
pop
das
jg
cmp
popa
xchg
js
call
jmp
or
out
or
bound
test
int3
jmp
js
xchg
and
add
sti
cmp
bound
mov
int3
pop
push
rolb
addr16
or
push
into
adc
push
jnp
adc
inc
jae
je
stos
sub
pusha
and
add
dec
mov
icebp
and
xchg
and
xor
jmp
aaa
lea
flds
bound
push
cmp
jmp
cmc
cs
cmp
pop
mov
mov
push
and
or
fisubrl
movsb
mov
jb
dec
xchg
out
cmpl
sub
mov
subl
std
popa
mov
addb
pop
shr
xchg
pop
aaa
push
jecxz
stc
sub
aad
aam
hlt
pop
repz
mov
pop
pop
and
lods
dec
pop
mov
adc
add
data16
in
testb
sbb
pop
push
push
popf
negb
mov
rcr
jo
fldl
push
mov
sbb
jg
jae
jecxz
iret
aas
into
jmp
fadds
mov
push
mov
mov
xchg
xchg
or
xor
pop
jbe
push
sub
das
pop
fstpl
pop
dec
push
call
dec
leave
adc
xchg
adc
cwtl
inc
nop
js
xor
dec
mov
add
xchg
aam
or
push
mov
mov
ret
jbe
jne
push
add
sub
jg
scas
test
sti
daa
and
aas
xlat
mov
add
push
sti
xor
fstps
test
addl
cmp
mov
ljmp
addr16
daa
das
je
add
in
pushf
pop
or
daa
jo
and
xor
pop
push
pop
jnp
cmpsl
jge
sub
xchg
and
adc
mov
pop
dec
loopne
add
dec
xchg
negl
lock
mov
mov
push
fdivr
pop
push
sbb
mov
mov
and
inc
inc
and
notb
jno
ja
mull
mov
cmp
je
jne
cmp
mov
push
or
push
mov
nop
xor
sub
fisttpl
lret
adc
sub
mov
inc
push
fimuls
cmp
push
fmull
inc
pop
add
cmp
call
inc
fs
push
and
arpl
movl
cld
in
jmp
or
mov
gs
mov
push
js
mov
outsb
sub
and
ret
xchg
add
pushf
repnz
iret
sbb
xchg
shr
hlt
fistpll
fs
cmp
sub
xor
mov
mov
cmp
mov
mov
sub
dec
mov
pop
sbb
add
lcall
sbb
popa
dec
sub
add
sbb
or
repnz
pop
fisubs
pop
push
cli
cmp
daa
inc
pop
xchg
out
adcb
xor
ljmp
ja
push
int
or
pop
int
cli
push
pop
ret
jo
fs
scas
xor
dec
add
or
adc
inc
sbbl
sbb
sbb
les
shlb
lret
clc
add
jmp
rolb
xchg
ds
xor
pop
dec
iret
jns
mov
push
xchg
push
sbb
pop
cmp
cmpsb
add
jmp
mov
jg
pop
movsl
bound
push
sbb
shll
add
xchg
insl
pop
dec
xor
movb
repnz
add
repnz
pop
push
mov
outsb
inc
inc
xor
daa
lds
mov
cmp
mov
xchg
movsb
xchg
pop
nop
jg
inc
fdiv
sub
push
adc
and
adc
ret
loope
xor
jmp
jbe
lods
sub
jmp
iret
and
add
sarb
push
les
testl
shll
shrl
adc
or
xor
test
not
incb
aaa
lret
xlat
xchg
jo
add
cld
jo
jge
sti
cmc
xor
xor
in
pop
orl
pop
mov
sub
and
adc
mov
pop
inc
inc
cwtl
add
push
icebp
loope
jle
div
pop
push
or
xor
sbb
xorb
rorl
das
or
shll
jae
rolb
sahf
mov
rol
inc
imul
mov
sub
lods
sub
add
icebp
or
xor
push
outsl
sub
loope,pn
movsb
xchg
add
or
inc
rdtsc
lock
mov
adc
xchg
fwait
or
lods
lock
sbb
cwtl
insl
and
enter
shr
or
pop
sbb
cli
std
mov
pushf
jg
inc
sarl
mov
xor
push
pop
pop
test
or
add
ljmp
jo
add
add
shl
inc
and
jae
mov
mov
dec
add
test
add
scas
sbb
pop
push
fdiv
hlt
jl
cmp
mov
pop
andb
fiadds
sub
pop
or
mov
orb
fstpl
xor
inc
sub
je
cmp
pop
pushf
std
cld
push
pop
dec
call
mov
dec
cmpsb
inc
dec
xor
test
dec
or
cmp
hlt
xchg
in
add
dec
mov
adc
or
add
inc
fs
out
jnp
lret
mov
stc
das
push
jg
pop
inc
call
loope
rep
sbb
push
movsl
loope
jle
fisttps
or
sbb
inc
cmp
mov
mov
jl
cmp
xchg
adc
test
cmp
inc
push
xor
dec
jae
daa
xchg
push
insb
das
adc
mov
pop
push
inc
jge
cmp
adc
pop
mov
jb
dec
push
out
and
mov
rcl
fmuls
mull
inc
inc
out
subb
pop
mov
and
jmp
ja
push
mov
xchg
lock
mov
add
pop
mov
jmp
push
das
and
push
neg
jge
mov
lea
loope
sub
add
pop
or
xor
shll
fcomps
hlt
pop
mov
add
iret
out
jl
das
ss
adc
jmp
mov
jle
test
pop
and
mov
filds
rcrl
cltd
dec
inc
les
pop
push
mov
jb
lahf
ds
arpl
stos
jp
fbstp
lods
push
push
movsl
xorb
mov
shlb
clc
cmp
pop
cmpsl
in
lds
mov
or
or
cmc
rorl
cmp
das
add
dec
xlat
sbb
push
scas
add
push
out
and
das
pop
push
das
scas
frstor
push
mov
mov
lock
xor
jns
jnp
add
xor
dec
xchg
aad
xorb
or
rorl
cmp
sbb
add
lret
decb
icebp
or
and
xor
cmp
sub
repz
sbb
lret
pop
jae
push
neg
mov
lret
aam
mov
dec
xchg
or
or
add
cmpsl
daa
dec
mov
loope
xor
lahf
dec
es
insb
add
fstl
shr
mov
push
push
inc
ret
lods
or
inc
lcall
mov
pop
inc
sub
or
add
push
les
ret
sti
ds
inc
mov
sbb
sbb
xchg
xor
das
fwait
pusha
jecxz
mov
shr
push
mov
mov
pop
cmpb
cwtl
test
leave
xor
add
mov
or
aaa
enter
sub
shr
out
add
aam
mov
pop
pop
sub
cmp
sti
insb
pop
sbb
adc
inc
call
gs
xor
out
jle
les
addb
add
je
dec
and
shlb
cmp
cmp
jle
add
jmp
loop
aam
imul
lock
loope
push
mov
fsubrs
dec
lds
in
movsl
lock
cmp
mov
push
mov
addr16
ljmp
add
scas
in
xor
mov
nop
add
jne
sarl
sbb
lock
cmp
jl
jmp
subb
inc
or
cltd
aas
mov
or
jg
xor
fsubs
and
pop
test
ds
pop
mov
cltd
xor
xchg
push
jns
inc
xchg
jno
add
hlt
xor
ja
in
or
cmpsl
adc
jl
cmp
xorb
lds
shrb
add
xor
mov
cmp
jecxz
cmp
add
sub
add
lret
or
inc
jmp
lods
xlat
add
push
mov
add
cmp
repz
jae
add
and
lahf
stos
and
push
data16
jge
aad
jecxz
push
jae
jns
cmp
xchg
sub
push
lret
daa
push
jne
mov
jge
je
into
inc
jp
cmc
in
in
pop
es
insl
add
xchg
lcall
les
push
fisttpl
inc
fwait
add
jmp
push
imull
xchg
test
divb
mov
xor
xor
cli
adc
xchg
add
test
loop
inc
ss
jp
repz
aam
out
jg
in
jmp
xchg
dec
pop
call
lcall
mov
adc
lods
ds
stos
push
pop
jle
arpl
and
xchg
icebp
loop
jbe
and
gs
or
sbb
outsb
pop
inc
push
push
mov
sub
or
jmp
dec
mov
cltd
add
cmp
xchg
loope
pop
clc
imul
dec
addb
push
cmpl
in
cmpsl
jo
or
frstor
mov
add
adc
and
adc
jns
and
dec
mov
out
push
fisubs
pop
hlt
adc
testb
fildl
push
inc
push
test
pop
cwtl
call
jge
dec
fldcw
push
dec
pop
mov
outsl
mov
outsb
xor
ret
or
loopne
out
pop
adc
mov
push
fidivrl
imul
jmp
loop
insl
fisubs
sbbl
xor
dec
add
popa
int
or
mov
mov
inc
cmova
sahf
es
fisubs
push
imul
and
pusha
mov
xchg
add
adc
jno
sub
dec
js
ret
sti
add
gs
xor
add
clc
pop
cli
mov
add
shlw
imul
xor
mov
dec
enter
or
notrack
and
sarb
xchg
jecxz
add
sbb
sub
or
add
rclb
mov
adc
pop
dec
add
pop
and
test
mov
dec
stos
push
into
sub
xor
sub
or
sbb
xchg
add
clc
popa
xchg
inc
cmp
imul
in
push
add
mov
and
push
clc
jmp
ljmp
mov
enter
and
pop
pop
stc
and
and
or
cwtl
cwtl
dec
dec
inc
mov
mov
jno
push
dec
in
into
jg
cli
dec
roll
pop
add
daa
pop
jge
xchg
and
mov
adc
stos
mov
push
add
jbe
sbb
gs
mov
sbb
mov
ljmp
mov
sbb
test
and
hlt
outsl
or
outsl
mov
sarl
clc
test
and
jmp
sarb
jne
imul
lods
cmp
pop
int
inc
xchg
out
and
or
into
adc
shrl
cld
inc
cmc
xlat
js
daa
pop
rcrl
scas
jl
xor
cmpb
jg
gs
cmp
cmp
jg
sbb
pop
fstpt
ret
ss
pop
and
dec
add
jne
add
sub
sub
fsts
sahf
rclb
xor
sti
incl
repnz
push
stos
shlb
push
shll
add
andb
fdivl
push
dec
sub
pop
or
inc
aam
jmp
icebp
pop
push
incb
push
pop
lds
fists
mulb
dec
test
xchg
lret
movsl
ss
pop
pop
pushf
or
cmpsb
jmp
incb
fs
sub
std
cld
pop
dec
pop
xor
fdivrl
aam
and
push
cmc
adc
push
sub
push
std
scas
lds
adc
or
inc
iret
imul
cmp
fsubrs
sub
stos
les
out
test
push
jecxz
pop
add
sub
lock
daa
cmc
mov
insb
cli
xor
mov
scas
jg
out
outsb
test
pop
lds
std
das
hlt
test
out
cmp
push
aaa
jge
adc
cmp
add
jb
pop
push
sarb
popf
shrl
js
mov
or
int
ds
scas
jecxz
mov
fisubrs
addl
xchg
cmp
push
cmp
mov
movsb
es
add
jecxz
adc
mov
rorb
pop
xchg
stc
jge
push
clc
pusha
sti
pop
mov
mov
or
repz
or
push
mov
aam
das
hlt
sub
in
jns
and
mov
stc
add
push
jl
bound
icebp
or
sbb
jmp
cld
fidivl
push
jne
add
mov
xchg
in
clc
adc
pusha
subb
loope
xchg
adc
dec
adc
enter
dec
stc
test
xlat
movsl
loopne
mov
mov
dec
sbb
icebp
inc
pop
add
sub
push
ljmp
cli
push
add
jmp
scas
iret
and
xchg
dec
leave
push
loope
push
hlt
inc
push
xor
out
push
xor
add
cmpsb
and
adc
mull
nopl
pop
push
push
mov
xor
icebp
enter
vmwrite
xor
mov
mov
mov
lock
das
adc
cld
dec
sbb
pop
adc
cs
adc
add
lret
pop
push
mov
std
call
mov
sbb
adc
xlat
pop
pop
mov
adcb
loop
adc
into
sub
mov
pop
mov
sub
lds
mov
cld
imul
stos
test
xchg
stos
cmp
sarb
or
pop
cwtl
pop
dec
std
mov
mov
outsl
mov
jecxz,pt
pop
mov
decb
pop
sahf
dec
mov
int
mov
ljmp
or
imul
sbb
mov
adc
js
pop
add
xchg
dec
jle
jns
lret
pop
dec
mov
ror
sub
cltd
mov
lcall
fwait
and
and
cmpsb
arpl
jnp
ret
daa
in
ja
push
loope
add
lock
cmpb
aad
fsubr
mov
sub
pop
shl
push
mov
aaa
jmp
xchg
inc
loope
or
addr16
xchg
add
lods
push
push
sbb
fs
pop
data16
mov
push
push
or
jl
cmp
je
add
xor
xchg
iret
out
hlt
dec
pop
rorl
je
gs
jmp
or
adc
xor
xchg
pop
xor
inc
sbb
push
or
or
shrl
aas
stc
or
xor
dec
adc
stc
stos
xlat
jmp
cli
shll
cmpsl
adc
inc
pop
sub
stos
insb
mov
and
ljmp
fstpl
mov
add
aas
dec
inc
imul
das
loope
mov
add
push
push
iret
leave
jle
xor
lahf
and
sub
lods
lret
jg
jae
orb
repnz
dec
push
xchg
xchg
popf
xor
pusha
ja
push
xorb
add
inc
pop
push
imul
adc
pop
movsl
les
pop
es
cmp
sbb
repnz
insl
cmp
movsl
adc
mov
outsl
cs
pop
sar
mov
test
pop
in
ljmp
pop
jbe
jae
sti
adc
pop
mov
add
xor
inc
sbbl
dec
outsl
cmp
cmp
cmpb
mov
sub
push
stos
pushf
mov
popfw
cmp
mov
pop
mov
nop
sub
or
popf
jae
or
xchg
adc
pop
fadd
xchg
dec
mov
scas
loope
xchg
arpl
push
mov
push
push
cmpsl
jmp
movsl
loop
dec
jne
jecxz
repnz
jmp
enter
mov
incl
push
in
inc
addb
or
rol
dec
testl
maskmovq
notl
mov
lods
fsubrl
add
decb
test
sub
cmc
or
pop
outsb
cmp
or
mov
arpl
mov
leave
pushaw
imul
and
les
adc
pop
les
jo
push
xorb
sahf
mov
lcall
cmp
jge
std
or
dec
in
xchg
ja
sarl
jecxz
jge
sub
push
lret
add
xchg
insb
rorl
rcrb
pop
mov
mov
imul
mov
jo
stos
adc
add
nop
out
and
mov
aas
not
test
stos
lea
ds
popa
sbb
xchg
add
aaa
inc
add
enter
in
stos
into
push
sbb
pop
out
add
ljmp
jmp
inc
or
cs
fwait
pop
cmp
sbb
dec
sti
daa
mov
pop
jns
imul
iret
stc
lahf
sbb
xorb
in
xchg
mov
jmp
inc
cmp
out
and
bound
leave
cmc
out
aas
pop
jecxz
fsubrs
add
mov
push
into
push
xchg
xor
inc
sub
into
or
sbb
repz
sub
add
fsubrp
leave
push
popa
push
adc
mov
aaa
xor
xchg
into
or
jmp
dec
addl
xor
dec
rcrl
xchg
or
dec
dec
or
push
loopne
imul
scas
add
int
adc
push
sub
xor
jb
adc
mov
stos
mov
test
lods
js
xchg
sarl
jno
movsb
stos
xor
mov
adc
adc
pop
int
xchg
stc
mov
pop
ffreep
jns
sbb
push
pop
daa
push
push
mov
mov
jmp
call
push
mov
dec
mov
adc
xor
popf
dec
jmp
ffreep
inc
xchg
add
sti
gs
cmp
mov
and
cmpsl
xchg
into
incl
push
mov
out
clc
pop
dec
push
push
and
pop
lret
imul
adc
push
push
push
in
pop
push
mov
push
dec
cmp
pop
insl
mov
add
outsl
mov
jnp
and
pop
add
mov
xchg
sub
jmp
jmp
push
adc
adc
imul
add
sbb
nop
jb
inc
dec
xchg
mov
adc
pusha
mov
adc
out
sub
daa
mov
loop
fwait
or
xor
sti
int3
xor
xchg
push
sbb
es
repnz
xor
pop
or
jae
jmp
mov
mov
mov
filds
sub
add
add
scas
push
push
pop
add
lahf
movsl
sbb
adcb
shlb
jnp
data16
rclb
dec
fmuls
xlat
aam
das
daa
inc
sbb
cmc
jne
cli
js
pusha
dec
adc
or
push
aaa
jns
pusha
loop
pop
test
bnd
xchg
xor
dec
sub
sbb
jns
dec
pop
add
add
pushf
adc
pop
or
push
adc
jb
xor
inc
stos
pushf
roll
xchg
jp
loope
fwait
int3
adc
add
push
add
xor
out
or
pop
pop
cmp
add
adc
mul
negl
or
mov
push
inc
push
ljmp
test
xor
out
sbb
rorb
add
out
jmp
or
and
out
arpl
add
pop
sub
push
push
mov
and
xchg
or
adc
push
mov
dec
or
jmp
mov
pop
pop
shl
mov
mov
add
scas
movsl
dec
imul
push
pop
ds
xor
sub
sbb
aaa
xchg
jns
or
jae
sub
xor
mov
test
mov
loope
into
ss
mov
int3
push
jns
pusha
pop
call
or
push
roll
xchg
inc
je
dec
les
jbe
in
jle
jecxz
xor
inc
outsl
mov
pop
adc
or
add
jmp
jb
dec
cwtl
ficomps
mov
pop
push
cmp
dec
sub
sub
sbb
pop
jnp
pop
or
xchg
stc
add
test
pusha
and
fwait
pop
adc
cmpb
jge
out
out
cwtl
xor
fmuls
or
ror
call
jp
xchg
dec
jns
orb
faddl
ja
orb
jmp
cwtl
sahf
aaa
xor
xor
aad
push
inc
jne
jb
call
cmp
dec
and
outsb
outsl
mov
or
inc
cmp
nop
jmp
pop
mov
rcll
xchg
repnz
mov
xchg
in
gs
repz
lods
pop
dec
decb
test
stc
pop
popf
inc
imul
adcb
mov
pop
mov
pop
inc
insb
add
or
call
mov
inc
pop
sbbl
push
dec
xor
push
inc
jno
mov
sbb
jne
lds
ljmp
stos
mov
fisubl
pop
inc
or
faddp
out
aad
or
or
pusha
jmp
jle
inc
push
outsl
mov
and
cmp
cli
enter
lahf
pop
enter
stos
popf
adc
nop/reserved
or
insl
pusha
in
leave
pop
dec
imul
mov
and
scas
sub
add
sub
and
pop
xlat
loope
aam
enter
mov
test
dec
adc
or
call
popf
inc
push
push
lds
cwtl
sti
nop
les
xor
int3
jge
add
ja
insb
in
dec
push
and
pushf
xor
pop
cmp
push
xchg
lods
and
fsubr
xchg
mov
push
push
pusha
arpl
cmpsl
test
leave
call
out
jp
shrb
push
divl
mov
inc
and
xlat
cmp
xchg
sub
push
jnp
add
dec
fsubr
cmp
dec
lret
sub
pop
jno
mov
sub
push
or
cwtl
adc
leave
imul
xchg
xor
add
shufps
cmc
fisubs
fcmovne
out
cwtl
jno
pop
mov
cwtl
cmpsl
hlt
xor
mov
aam
mov
jmp
xor
inc
xor
push
cltd
sbb
xchg
int3
xlat
insl
push
jo
and
mov
or
jns
mov
cmpsb
dec
ljmp
fisttpl
test
push
js
push
mov
aam
subb
pop
pop
and
lock
pop
mov
jo
cmp
jmp
jmp
or
daa
fisttps
xlat
outsl
in
push
cwtl
mov
mov
sub
inc
in
xchg
jg
in
cmp
sti
fs
les
mov
cmp
xchg
outsl
and
push
fidivrs
icebp
adc
cltd
xor
xchg
jb
lock
popf
test
push
adc
push
pop
sub
and
adc
ficomps
fcos
mov
mov
mov
xor
mov
jge
and
adc
movsb
iret
out
sub
fldcw
stc
mov
xchg
scas
std
mov
shr
or
pop
popa
push
or
adc
cmp
xor
lahf
sub
xchg
jmp
mov
push
repz
insl
mov
or
sar
ja
sbb
xchg
and
int3
lock
and
jg
pop
das
jle
mov
adc
aas
js
mov
test
jbe
movsb
in
popf
jno
outsl
pushf
adc
inc
adc
fidivl
fdiv
mov
shll
inc
fstl
cwtl
loopne
sub
out
sub
xchg
std
mov
and
or
dec
loopne
sbbb
xchg
mov
lods
and
jno
jl
and
pop
cmpsl
mov
add
sbb
in
jne
xchg
inc
je
andb
sahf
inc
lods
stos
dec
jns
stc
xor
dec
xchg
out
jo
mov
adc
dec
and
mov
jne
xchg
dec
ljmp
mov
cmp
push
mov
mov
leave
dec
mov
push
shl
shlb
pop
lds
adc
cwtl
aaa
dec
call
sbb
inc
cld
jmp
pop
addr16
leave
nop
xchg
mov
subb
aad
inc
loope
mov
mov
mov
stc
aad
pop
xor
pusha
and
jne
adc
pop
push
jmp
ljmp
pop
jmp
fbld
nop
or
or
push
dec
cmpsb
sub
mov
push
int
mov
repnz
inc
sub
loope
arpl
and
lea
cltd
push
das
out
xor
pop
stc
sub
mov
fmulp
clc
pusha
inc
das
inc
xor
mov
mov
daa
inc
jbe
push
jno
pop
sbb
outsl
ds
inc
cmpsl
fisubs
sub
xchg
arpl
mov
mov
jbe
add
mov
add
cmp
sbb
out
xor
push
stos
jmp
pop
stos
test
push
jmp
pop
mov
and
ret
or
push
mov
xor
mov
clc
pop
mov
js
ficoms
jo
push
mov
das
or
outsl
dec
imul
dec
ret
repnz
and
ds
out
push
repnz
outsl
rol
neg
xor
popf
or
add
cwtl
jle
cli
pusha
jecxz
add
inc
add
pop
jbe
leave
mov
scas
insb
cmp
ljmp
loop,pn
dec
cmpsb
call
fs
mov
add
or
push
adc
lcall
pop
and
lods
add
sbb
pusha
xor
cwtl
mov
adc
lods
in
out
loop
rcl
inc
incl
add
ret
loope
fcmovu
fld1
inc
pushf
sti
or
and
mov
xchg
cmp
pop
adc
mov
push
push
adc
je
jno
std
sti
xchg
enter
pop
sbb
daa
push
xor
push
or
movsl
dec
sub
dec
push
mov
lcall
pop
xor
xchg
std
jle
addl
dec
mov
adc
cmovle
pop
cmpsl
push
sbb
xchg
mov
gs
ret
ret
jmp
push
jle
sub
pop
mov
orb
scas
jnp
mov
push
pop
pop
xchg
das
dec
ljmp
adc
ret
mov
sub
dec
call
lds
sub
bound
xor
orb
push
loope
repz
sub
add
inc
ja
mov
hlt
mov
xor
outsl
lds
aad
test
mov
outsb
pop
jecxz
xchg
shrl
decb
xor
and
mov
dec
adc
xchg
push
sarb
pop
adc
push
jb
insb
jnp
pop
mov
xchg
enter
pop
xchg
push
and
mov
arpl
xchg
add
movsb
mov
inc
and
imul
mov
mov
cmpb
fadds
mov
movl
sub
add
jg
push
lods
cmp
pop
xor
jno
int
andb
fsubrs
or
lret
xchg
add
sub
hlt
jle
std
and
xchg
xchg
or
in
sub
testb
cmc
jnp
push
nop
das
adc
push
sub
ds
push
scas
rclb
mov
shl
fadd
lock
and
jmp
loop
mov
ret
ljmp
inc
out
divb
insl
pusha
push
jmp
daa
addr16
pop
pop
add
inc
jbe
pusha
cmp
cmp
add
mov
add
popf
into
repz
push
or
orb
cmp
insl
negl
adc
adc
xchg
mov
out
add
lods
pop
push
xchg
push
jle
inc
jle
or
ja
sub
iret
or
out
inc
push
xor
and
ret
xlat
or
negb
adc
cmovp
ds
sub
mov
int3
repnz
pop
adc
mov
mov
scas
ja
fistpl
inc
out
cmp
scas
imul
xchg
add
mov
lret
xchg
push
aam
fs
mov
jg
mov
test
cwtl
and
bound
into
mov
jns
or
cmp
in
mov
push
in
stc
aam
jnp
mov
xlat
push
push
pop
cmp
push
or
or
add
xor
adc
pop
fsubl
stc
pop
nop
out
or
jl
mov
pop
mov
js
fcompp
aad
ret
sbb
adc
cmp
scas
cmp
shll
std
or
sub
dec
fildll
push
push
inc
outsb
jge
inc
mov
mulb
jmp
pop
mov
jmp
fwait
jo
xchg
jl
push
das
xchg
xor
inc
push
add
push
lret
adc
outsl
in
jno
ja
mov
ret
ds
loopne
std
sbb
lock
dec
pop
ljmp
pop
mov
mov
cli
lahf
daa
jnp
cli
sbb
cmc
jmp
jmp
imul
shr
lock
xchg
jnp
dec
filds
jle
or
and
push
xchg
and
lods
addb
daa
cmp
iret
shl
nop
pop
mov
cs
or
aam
adc
push
xchg
push
movsb
sub
pop
rcrb
and
xor
leave
jno
loopne
fidivrl
dec
repnz
fstpl
push
popf
cwtl
pop
push
data16
adc
and
test
mov
ror
rcll
out
test
test
movlps
jns
or
int
xchg
push
lods
imulb
sub
movsl
mov
aaa
dec
mov
sub
dec
jno
into
pop
jp
prefetchwt1
dec
std
sbb
movsl
cli
flds
xor
pop
insl
ja
xor
pop
push
popa
push
or
mov
inc
mov
sbbb
inc
leave
dec
and
fcompl
add
fdivp
les
dec
sahf
adc
es
sub
ret
jl
push
pop
in
pop
in
pusha
stos
inc
mov
cmp
push
les
lret
lret
or
daa
xor
repz
ss
fldenv
mov
jmp
pop
insb
mov
jbe
push
jp
and
arpl
pusha
loopne
or
test
mov
jo
add
out
js
rol
jecxz
daa
pop
jns
push
adc
out
daa
mov
mov
jb
stc
jns
sbb
jae
adc
add
in
sbb
movsl
inc
in
adcl
and
stos
lock
seto
add
pop
add
add
push
and
pop
push
jae
mov
sub
adc
jg
cs
leave
and
cmp
pop
dec
loope
std
movsb
scas
and
movsb
cli
sub
lods
scas
pop
mov
sbb
sbb
mov
xchg
pop
daa
cmp
cmpsl
lcall
fisttps
sbb
sbbb
pop
in
out
movsl
gs
push
mov
push
mov
je
and
in
pop
push
ficomps
fsubrs
jmp
dec
sbb
aam
xor
xor
pushf
loopne
cli
xchg
sub
sub
out
jmp
js
xchg
mov
aaa
xchg
adc
adc
or
std
jp
mov
dec
ja
sub
inc
adc
loop
test
scas
mov
ror
dec
add
pushf
pop
fiadds
mov
pop
inc
cmp
shr
ret
loop
shl
dec
sub
cltd
data16
mov
outsl
pop
stos
sub
jb
push
pop
jmp
cmpb
inc
mull
or
push
jne
out
out
cwtl
add
enter
adc
sbb
jecxz
add
movsl
es
add
sub
or
pop
mov
call
jmp
into
mov
sarb
mov
sub
xor
mov
sahf
lcall
mov
imull
jnp
jne
xchg
or
arpl
jle
neg
decb
popf
mov
sti
daa
fldt
icebp
fadds
or
pop
sbb
adc
dec
xchg
and
nop
dec
in
mov
cld
add
imul
imul
xchg
inc
and
dec
xchg
aas
mov
inc
jmp
sub
inc
add
or
xchg
enter
add
pushl
add
stc
pop
and
out
sarl
push
test
or
cmpsb
bound
dec
clc
sub
rclb
in
adc
adc
test
cmovns
sbb
push
mov
cmp
fcmovnu
adc
mov
pusha
cld
bound
testl
lcall
jle
or
or
lret
aad
mov
mov
sbb
xchg
mov
push
sbb
or
out
jne
add
lods
add
mov
pop
mov
sti
iret
dec
mov
sub
dec
lea
xlat
in
sub
push
sbb
in
out
rolb
mov
mov
push
push
mov
cmp
jmp
dec
add
shrl
out
cwtl
jns
ret
jp
movsl
inc
or
cmp
outsb
call
add
scas
add
push
pop
adcb
jb
xchg
xlat
fs
aam
scas
add
jb
data16
enter
xchg
mov
mov
push
and
pop
push
and
movsl
scas
adcb
inc
dec
push
pop
pop
out
pusha
stos
inc
or
aad
push
xor
call
pop
je
xlat
mov
sub
jl
les
incl
xor
sub
in
ret
mov
push
xchg
pop
push
sub
pop
mov
and
fdivl
shlb
rcrl
hlt
jo
xchg
jp
mov
arpl
popa
mov
aas
cmp
cmc
pop
stc
mov
xor
push
repz
mov
mov
andb
das
rolb
in
adc
std
in
rcrb
cmc
jb
mov
push
lods
sub
mov
adc
pop
jmp
stc
inc
test
lret
shlb
es
add
dec
cmp
inc
rorl
dec
push
shlb
mov
and
in
inc
movsl
pop
loop
xchg
fimuls
pop
cli
enter
adc
xchg
or
scas
out
lods
jns
push
aas
mov
gs
jne
es
das
scas
push
xor
sub
jo
cmpsl
jno
dec
fldz
add
popf
and
insl
jmp
mov
rcll
or
xor
fistps
or
adc
pop
inc
xchg
imul
sub
pop
inc
sub
and
push
and
mov
popf
pop
dec
jle
nop
or
out
add
punpcklwd
cmp
xor
jmp
add
call
jo
out
pop
mov
mov
xchg
pop
pusha
push
xchg
cltd
dec
push
pusha
fs
ret
xchg
xor
shlb
sub
and
push
or
mov
pop
push
mov
out
and
push
pop
sub
pop
lock
sub
sbb
sub
call
xchg
pop
pop
pop
ljmp
pop
push
pushf
sub
xchg
clc
lods
and
cmp
pop
pop
movb
lock
mov
jecxz
sarb
mov
cltd
mov
lcall
xchg
adc
pop
aam
je
iret
sub
add
or
push
ret
pop
pop
xchg
nop
imul
imul
adc
xor
ljmp
inc
dec
nop
push
arpl
mov
xchg
sarb
dec
xor
enter
ret
push
mov
add
adcb
adc
daa
loope
push
adc
cmp
dec
fcomps
pushf
inc
lock
xchg
jg
fsubrl
in
pop
in
jae
stos
repnz
jl
sbb
inc
js
mov
sbb
insb
add
pusha
xor
add
in
mov
mov
fsub
cmpl
clc
mov
iret
push
mov
or
lods
add
inc
sbb
dec
jno
loopne
outsl
mov
negb
loope
add
ja
push
or
adc
testb
or
fmul
lock
jmp
loopne
cltd
xchg
lcall
push
popf
and
int
add
mov
push
add
out
iret
xor
insb
pop
fisttpl
in
pop
lahf
pop
mov
jmp
adc
and
pop
imul
mov
sub
lock
inc
xor
jmp
mov
rcrl
movsl
clc
xchg
test
stc
nop
cmp
ret
div
pusha
push
pop
cmpsb
mov
sub
scas
or
and
lock
cwtl
jle,pn
dec
into
sti
add
jmp
xchg
lock
cmp
out
or
jge
lahf
cwtl
sbb
jno
jb
pusha
arpl
mov
sbb
wrmsr
mov
sbb
dec
fimull
mov
iret
cwtl
adc
ret
add
push
cmp
or
push
cld
shrb
in
mov
aaa
and
jl
cld
cmp
or
adcl
icebp
aaa
push
and
sbb
xor
pop
and
jbe
xor
adc
xchg
dec
lock
mov
ds
add
jl
or
and
mov
pop
push
cmpsl
xchg
jg
outsb
arpl
cmc
les
push
lock
shr
inc
and
xor
add
adc
int
cs
in
sub
add
mov
ret
inc
hlt
or
mov
imul
pusha
mov
jp
or
fsubrs
push
xchg
and
mov
fidivs
mov
jne
and
addb
outsl
cmovs
sahf
add
cli
cmpsb
sbb
push
sub
shll
in
inc
ret
mov
outsl
add
in
inc
mov
loope
movsb
push
jge
sub
mov
rclb
or
adc
xchg
push
pop
loopne
leave
jecxz
lcall
push
push
je
ja
mov
daa
int
cwtl
adc
iret
adcb
rcrl
sahf
js
push
addr16
mov
shr
les
aaa
add
aad
out
push
js
sub
lods
push
outsl
fbstp
daa
sub
pop
xchg
mov
cmpsb
mov
lret
mov
cli
push
loop
in
push
cmpsb
leave
lds
lock
popf
fisubs
pop
cmp
sbb
cltd
inc
daa
leave
int
pop
dec
dec
shrd
and
jg
sub
inc
and
pop
test
inc
aas
jmp
xchg
pop
mov
dec
into
and
aaa
jmp
dec
adc
mul
data16
inc
popa
das
sub
jb
cmp
sbb
xchg
lahf
mov
mov
mov
xchg
imul
push
shrl
add
inc
scas
stos
mov
dec
cwtl
popf
or
jmp
testl
adc
pop
push
mov
xlat
xchg
out
out
sahf
push
cmp
ljmp
hlt
jl
add
or
or
jmp
not
fisttps
loope
and
loope
add
roll
fdivl
not
or
dec
js
or
hlt
pop
ja
adc
das
fldenv
pop
arpl
push
cltd
xor
loop
jne
push
and
popf
cmp
lret
dec
pop
sub
inc
jmp
adcb
xor
orb
and
dec
jmp
or
inc
bound
sbb
negl
cmpsb
xor
cmpsl
add
xor
insb
dec
mov
adc
pop
mov
jb
popa
pop
fcmovnb
movsb
icebp
movl
int3
pusha
xchg
lock
add
seto
xor
mov
hlt
xchg
cmp
jne
and
outsb
mov
or
aam
inc
clc
adc
insb
into
or
lahf
push
shlb
std
stos
mull
and
adc
xor
nop
daa
mov
neg
hlt
out
mov
or
cmpsb
inc
cmp
lds
sahf
xor
pop
rcrl
orb
imul
push
add
push
sub
mov
adc
push
aas
shlb
cmc
dec
pushf
add
and
inc
loopne
mov
xchg
jne
cmp
loop
rcrl
jmp
pop
loop
sarb
jle
sub
imul
add
push
add
cmp
jmp
or
cld
mov
or
pop
push
and
mov
pop
fwait
add
ss
dec
jno
repz
jns
mov
dec
xor
sub
mov
mov
popf
jge
arpl
lret
aas
xlat
add
outsl
pop
xchg
mov
gs
or
aam
imul
adc
pop
and
mov
push
pop
icebp
lea
cmpsl
in
fbld
push
jmp
dec
jle
bound
add
xor
adc
int
test
xchg
xchg
imul
dec
sbb
mov
das
addr16
in
push
sub
aas
add
xor
je
movsb
imul
jge
cld
jle
stos
add
and
cmp
mov
or
jnp
popa
push
push
sarl
psllw
mov
ljmp
mov
sub
out
data16
cmovae
movsl
adc
in
jge
dec
dec
push
add
push
and
dec
push
test
xchg
shrb
pop
xchg
and
leave
jne
in
repnz
int
add
inc
add
in
dec
sbb
les
inc
push
testl
and
idivl
mov
roll
add
addr16
and
iret
imul
hlt
push
push
dec
pop
jl
push
mov
add
mov
pop
mov
mov
inc
in
jmp
jecxz
sbb
jmp
or
inc
or
push
nop
mov
ss
dec
push
push
je
es
and
pop
testb
loope,pn
inc
add
push
mov
rcrl
aaa
fisttpl
repnz
addb
push
push
jl
dec
movsl
stc
movsl
ficomps
push
ljmp
dec
push
xor
cmp
xor
pop
jg
sti
add
loopne
ret
or
push
loope
or
insb
inc
adc
and
and
inc
vmread
dec
jb
xchg
push
jmp
int
repz
sub
jge
addr16
push
icebp
mov
mov
and
adc
mov
cmp
jl
jmp
adc
es
sbb
pusha
dec
arpl
lret
sbbl
adc
or
or
push
inc
add
sti
jmp
enter
or
and
or
sub
and
cmc
hlt
addb
loopne
push
mov
ljmp
push
ret
push
inc
sub
xlat
popa
dec
xchg
clc
cmp
fidivs
out
outsb
loopne
add
pusha
sub
sub
push
mov
icebp
into
sbb
addr16
adc
sarb
lret
pop
push
ret
add
stos
ret
fstpl
in
push
insl
and
jl
jle
movb
sub
lock
das
in
xor
gs
fsubrs
lahf
dec
int
and
push
adc
int
dec
or
pop
cmpsb
call
xlat
out
repnz
pop
out
jns
imul
jmp
les
icebp
mov
inc
icebp
jo
adc
xor
jl
dec
pop
pop
push
outsl
push
aam
sbb
inc
rolb
icebp
dec
jne
dec
test
iret
fs
aas
add
push
dec
xor
mov
jmp
cmp
insb
ret
shll
cld
xchg
mov
cwtl
xchg
jge
pop
lds
into
nop
or
lret
pop
shr
and
movsl
pop
add
bound
xchg
jmp
sub
dec
mov
lods
jg
in
sub
subl
xchg
sbb
sub
sbb
adc
int
pushf
inc
lahf
cmp
xchg
stos
push
imul
dec
test
mov
push
pop
jnp
andb
push
dec
testl
ds
jmp
jne
dec
push
xlat
adc
mov
shll
and
add
xor
dec
test
sub
dec
push
push
shr
dec
pop
outsb
dec
and
out
pop
push
adc
out
and
xchg
cmpsb
negl
jo
jmp
cmp
loope
push
cwtl
daa
in
mov
mov
mulb
pop
jmp
jne
push
mov
push
sarb
dec
inc
sub
in
in
aam
and
add
adc
rorl
mov
std
add
lret
fs
adc
jmp
pop
pop
fadds
cmp
shl
jb
jbe
pop
into
lcall
orb
loope
xchg
sbb
test
add
add
or
jmp
xchg
pop
iret
fisubl
mov
filds
xor
in
sbb
adcb
rorl
jmp
inc
pop
mov
push
mov
cwtl
gs
test
push
dec
adc
sub
inc
dec
out
ret
cmp
in
jp
popa
ficompl
cmp
adc
insb
mov
or
or
add
ds
fs
sub
enter
add
out
push
cld
add
xor
jmp
sub
into
arpl
jg
nopl
sbb
inc
add
cmp
sbb
dec
test
jbe
mov
or
jmp
mov
xor
xlat
ret
sub
xor
or
or
in
add
xor
jae
loopne
insl
popf
dec
adc
outsl
mov
aam
adc
in
scas
js
and
push
push
add
inc
in
xchg
push
sub
add
sarl
jmp
cmpsl
xlat
push
mov
and
xchg
enter
mov
dec
push
les
mov
daa
push
cwtl
xor
or
sbb
lds
loop
out
test
shll
inc
das
popf
movsl
dec
scas
push
jmp
or
repnz
or
jg
or
pandn
inc
mov
pop
es
dec
pxor
gs
xchg
out
mov
fwait
sbbb
orb
mov
fldl
jmp
jp
incl
pop
push
faddl
test
clc
sbb
pop
jmp
loop
add
add
sub
push
xchg
outsl
loop
lahf
or
jbe
mov
ja
mov
je
fdivrp
cli
sti
fldt
and
xchg
jecxz
adc
mov
add
mov
clc
sbb
pop
ret
pop
repnz
dec
mov
imulb
outsb
push
sbb
jbe
sbbl
xor
mov
adc
xlat
outsb
es
mov
inc
pop
push
test
sub
sbb
inc
sub
or
movsl
or
in
or
xor
out
mov
and
dec
and
jmp
cmp
mov
xchg
jl
je
rcrb
jmp
je
push
frstor
pmaxub
insb
rorb
jmp
jmp
push
push
push
andb
repnz
push
push
mov
leave
or
jbe
popf
jecxz
enter
outsb
sub
add
jb
pop
push
mov
add
jae
dec
das
jmp
pop
sub
ljmp
adc
repz
xchg
pop
cltd
ja
out
test
ljmp
jo
lods
outsb
dec
mov
dec
test
stos
aad
or
inc
lock
mov
mov
xor
jle
adc
or
ret
out
fsubs
push
daa
mov
jae
cmp
sbb
mov
add
mov
fmulp
and
ja
mov
jl
test
sub
clc
stc
inc
jae
mov
addl
and
out
xor
xchg
xchg
push
nop
adc
jmp
addl
jnp
mov
fldcw
std
insb
mov
and
je
aas
mov
xchg
sti
lret
into
dec
es
loopne
neg
inc
adc
int
and
pop
imul
scas
test
out
sub
xor
push
fcmovnb
int3
leave
testl
adc
div
daa
pop
icebp
dec
pusha
jl
inc
neg
inc
cmp
enter
stos
mov
mov
add
push
jns
daa
clc
pop
pop
jmp
insl
loop
mov
fldl
das
xor
mov
mov
call
add
or
adc
lret
imul
out
je
xchg
dec
jno
js
xchg
andb
sub
sub
mov
push
add
movsl
sti
out
sbb
adc
loopne
lret
xor
incl
jmp
movsb
lahf
lret
sbb
pop
cmp
mov
add
std
adc
pop
lock
pop
adc
xchg
lds
mov
sbb
push
sbb
jo
int
push
jmp
add
arpl
pusha
in
jo
push
lds
dec
xor
or
jmp
pusha
scas
jno
dec
js
mov
adc
dec
in
andb
add
xor
ficomps
pop
out
data16
mov
mov
inc
int3
cs
negb
movsb
outsl
mov
outsl
loope
scas
sub
adc
lods
and
push
add
add
adc
gs
out
sub
stos
cmp
lock
jo
adc
add
out
dec
or
ljmp
iret
in
pushf
or
jmp
imul
sub
jnp
testl
xchg
pop
repnz
movsb
jmp
pop
aad
sbb
xor
pop
ja
push
push
sbb
lret
pusha
sub
mov
imul
mov
sbb
pop
lods
bound
dec
jmp
shl
dec
sub
leave
stos
clc
or
stc
mov
add
pusha
add
jmp
aam
or
mov
in
jmp
std
nop
addl
cmp
gs
iret
mov
pop
mov
repz
rorl
xor
lret
push
sti
decb
and
mov
mov
mov
jecxz
add
jmp
dec
jge
mov
dec
int
outsl
push
movsb
rorl
das
inc
pusha
stos
xchg
inc
push
stos
sub
aam
testb
cs
push
mov
add
xor
mov
mov
and
or
or
and
adc
add
mov
ljmp
fcoms
cmpsl
mov
pusha
jne
fistl
ljmp
mov
inc
jmp
gs
gs
jb
orb
in
and
push
dec
dec
dec
fidivs
popf
std
mov
pop
loop
fwait
jo
cmp
loopne
sbb
loopne
cmp
adc
and
and
stc
and
jmp
scas
test
icebp
mov
jmp
out
orb
and
ret
pop
sub
gs
mov
sub
push
shrb
sub
fnstsw
sub
fsubrl
fs
mov
xor
xor
jge
pop
inc
and
add
mov
lds
inc
popf
mov
rorb
outsl
icebp
imull
dec
mov
pop
int
in
bound
or
data16
sbb
xrelease
outsb
aad
sbbb
insl
andnps
inc
push
xor
cs
movl
pop
dec
push
pushf
dec
push
xchg
jmp
enter
pop
adc
ljmp
inc
mov
scas
or
clc
inc
fwait
and
sahf
adc
xchg
pushf
mov
loope
pop
popf
movsb
cmpl
push
inc
mov
into
lcall
and
lahf
pop
mov
pop
lds
or
mov
xchg
fldl
push
pop
pop
jns
ret
and
data16
fildll
sbb
dec
jmp
pop
cli
push
jl
pop
negl
sbb
icebp
fisubs
loope
dec
push
mov
sbb
pop
add
and
inc
mov
cwtl
and
fisttps
ss
sbb
pop
pusha
rcll
adc
outsb
das
enter
add
jbe
jmp
shrb
add
jmp
inc
push
test
out
lret
inc
cmpsb
mov
jno
or
fs
sahf
fmull
jbe
test
xor
sub
add
data16
dec
mov
add
xchg
dec
sahf
xor
mov
adc
pop
pop
in
ja
aad
push
rorl
sbb
test
stc
jne
xchg
mov
out
pop
fwait
cmpsb
jg
inc
or
movsl
sbbb
add
mov
xchg
fistps
xor
sbb
cs
pop
xor
into
xor
pop
out
add
test
mov
fs
movsl
push
ret
inc
mov
pop
cwtl
and
dec
pop
cs
sub
test
stos
aaa
pop
call
push
repnz
into
add
test
xchg
addl
add
inc
cwtl
pop
cmpsb
adcl
ss
or
adc
jbe
ret
jne
fdivl
add
mov
adc
dec
mov
mov
xchg
cmp
dec
mov
in
cld
sbb
and
push
aaa
add
xorb
inc
sub
or
pop
leave
add
dec
add
pop
lahf
mov
add
jmp
rolb
xlat
inc
or
cmp
and
fwait
push
push
mov
dec
cltd
add
cmp
mov
cmp
mov
cmpb
jns
xchg
pop
insb
test
bound
add
add
xor
in
aad
int3
mov
js
add
or
decl
jae
add
pop
jno
mov
mov
xchg
xchg
add
leave
inc
test
je
and
rclb
mov
or
outsl
jl
push
dec
mov
or
dec
arpl
add
fs
call
orb
loope
arpl
outsl
outsl
out
pusha
scas
mov
lods
dec
test
pop
push
shlb
das
push
mov
lahf
or
lret
out
movsl
aas
add
iret
add
xor
aaa
push
inc
pop
jo
dec
pop
movsb
inc
sub
push
shl
cltd
pop
lods
in
fcomi
push
cmp
jnp
movsl
xchg
and
dec
pop
dec
ljmp
mov
mov
cmp
xor
add
jnp
add
sub
xchg
subl
adc
add
sub
fistpl
cmp
jge
add
and
xor
scas
push
xchg
inc
fs
push
std
in
add
pop
add
adc
sbb
stos
mov
addr16
inc
movsl
add
xor
or
adc
jns
inc
push
inc
add
iret
dec
stos
mov
cmpsb
xchg
movsb
mov
add
add
mov
lea
into
jle
pop
mov
test
jbe
pop
jns
push
stc
push
pop
xchg
add
cwtl
inc
popf
repz
push
jge
add
leave
pop
mov
push
sbb
sbbl
xchg
test
test
ljmp
pop
add
lcall
fisubl
cwtl
sbb
std
neg
pcmpgtb
push
pusha
cvtdq2ps
hlt
cmp
add
and
gs
sbb
dec
aam
insb
rorl
add
shlb
mov
inc
sub
add
add
inc
and
push
or
stc
mov
cs
add
movl
lods
aaa
mov
shl
add
mov
xor
das
mov
movups
dec
mov
inc
pop
popa
pop
sahf
mov
ds
sub
push
mov
loop
in
inc
in
gs
push
and
push
pop
add
and
popa
xor
daa
mov
test
fmuls
sub
add
daa
call
sarb
jmp
out
aas
loopne
add
mov
cmp
test
pcmpgtb
movl
mov
call
in
hlt
sub
movntq
movsb
dec
adc
pop
popa
adc
sahf
add
dec
jno
imul
out
jp
pop
neg
jae
xchg
add
xchg
add
jbe
sub
in
or
mov
in
sbb
jno
lea
ficompl
sbbb
xor
pop
cld
inc
and
adc
imul
mov
movsb
test
mov
add
mov
cmpps
jl
movsb
pop
iret
add
fadds
into
out
dec
push
adc
outsb
stc
sub
pop
std
add
xlat
or
jne
sbb
inc
cld
clc
push
xchg
mov
aam
nop
ret
lret
ss
out
imul
add
call
jg
xor
or
rolb
loop
nop
add
jmp
mov
add
cmp
push
sbb
sti
sub
mov
mov
inc
dec
add
fwait
xchg
enter
cmp
loop
inc
xchg
fstpl
pusha
repnz
or
inc
push
aaa
out
adc
sbb
and
pop
ja
jae
repnz
lea
shrb
clc
lret
bound
fildll
dec
outsl
std
add
jge
xor
and
add
mov
cmp
ficomps
scas
mov
mov
xchg
test
sub
ficoms
xlat
cmp
mov
inc
mov
inc
mov
lock
mov
and
xor
mov
add
shll
xor
mov
add
scas
ucomiss
xchg
mov
xor
inc
jmp
daa
add
fsub
inc
or
and
ret
add
add
sub
pop
sub
mov
xchg
ficoml
pop
pop
adc
jmp
aas
sbb
mov
frstor
movb
cmpsb
pop
out
pop
sbb
push
setle
call
outsl
sbbb
adc
jmp
jmp
ret
jne
outsb
sbb
push
jg
mov
or
push
aas
scas
scas
add
sbb
cmpsb
or
add
in
lods
inc
jecxz
add
rorl
pop
imul
cwtl
pusha
outsw
add
bound
jge
xchg
adc
sti
mov
stc
pop
jae
add
aaa
cmp
pop
cmp
shll
mov
out
nop
mov
or
sbb
add
mov
cmpb
add
push
xchg
add
and
add
xor
dec
and
dec
lock
movsl
pop
sbb
jo
dec
mov
mov
divb
push
mov
icebp
and
push
enter
add
inc
repnz
mov
xlat
test
shr
das
push
adc
xchg
push
push
je
imul
adc
add
push
mov
cmp
data16
pop
mov
shr
or
loop
cmp
or
mov
jge
sbb
pushf
mov
dec
push
fdivp
add
add
inc
scas
movsl
imul
mov
cmpsb
jno
out
add
fcoml
add
push
adc
sub
pusha
jg
add
lock
xchg
add
inc
sbb
mov
idivb
dec
stos
or
jne
cmp
pusha
add
shlb
mov
adc
and
inc
mov
mov
push
pop
push
clc
orl
ret
pusha
cld
popa
enter
cmp
or
mov
stos
lods
xlat
aam
sub
lret
cmpsl
incl
iret
push
pop
leave
push
call
push
cmp
in
and
or
add
andl
lock
cmpsb
xor
lods
inc
insb
mov
mov
pop
clc
dec
and
repz
pop
mov
push
jne
movsb
clc
add
pushf
mov
pop
andb
pop
mov
jmp
les
pop
or
clc
mov
inc
outsl
lcall
jl
cmp
or
jge
xor
sbb
adc
mov
jns
add
cmpsl
push
repz
adc
jge
jmp
out
movl
mov
filds
mov
dec
push
inc
adc
enter
rclb
fmulp
push
push
mov
je
pop
sarl
and
js
push
rcll
cmpsl
xchg
dec
add
sahf
arpl
fsubrs
dec
pop
divb
pop
mov
call
cmovo
test
push
mov
repz
pop
adc
add
lock
jge
fisttps
mov
mov
inc
iret
dec
je
or
dec
xlat
pop
inc
xor
adc
mov
hlt
inc
dec
pusha
pop
sbb
lcall
dec
in
add
les
ret
test
loopne
add
xchg
xor
xchg
jg
repnz
dec
subl
xchg
jmp
sbb
rolb
test
inc
cmp
adcb
fcoms
shrl
iret
inc
pop
sub
cld
addr16
and
orb
or
mov
das
shl
sbb
jl
std
ljmp
xor
fdivs
pop
inc
adc
jp
xor
add
je
pop
inc
pop
dec
xchg
adc
mov
pop
ja
push
adc
test
icebp
cwtl
add
dec
cmpsl
add
push
add
jno
push
and
scas
dec
and
out
inc
xorl
pusha
cld
jae
add
std
dec
int3
sbb
push
ret
andl
inc
and
pop
and
sarb
ret
add
aaa
mov
or
cmc
push
inc
lock
push
cmp
incl
clc
arpl
push
mov
fimull
push
pop
ret
mov
es
lcall
add
inc
mov
nop
insl
fnstsw
mov
pop
inc
add
and
adc
sub
or
mov
scas
add
sbb
cmp
addb
subb
in
xor
dec
push
addb
jb
or
xor
pop
add
adc
sub
jno
fisubrl
jns
rcrl
xchg
or
shll
add
mov
jb
xor
inc
shrb
sbb
roll
or
jbe
leave
data16
xor
push
mul
addb
inc
loopne
out
daa
fstl
add
sarb
xchg
or
xchg
les
cmc
addr16
sub
test
rolb
sub
or
outsb
add
shl
inc
xchg
inc
mov
insb
mov
loopne
xlat
or
mov
or
pop
cmp
add
push
sub
pop
add
loop
push
lret
clc
inc
fmulp
cmp
or
fsubs
push
sub
repnz
sti
or
ja
inc
in
movsb
lods
and
sbb
sbb
jmp
adc
sub
imul
sbb
and
icebp
and
or
lret
push
stc
fiadds
pop
insb
mov
jb
jnp
shll
in
inc
mov
cld
cwtl
add
cltd
dec
xchg
jmp
sbb
and
jns
push
jge
out
add
sbb
lcall
adc
iret
xlat
jne
pop
int3
or
lcall
mov
add
xchg
repnz
in
pop
dec
pop
cmp
cmp
or
adc
nop
sbbb
andb
lcallw
xor
insl
push
gs
or
lret
and
jge
adc
inc
shlb
lret
add
pop
dec
nop
cmp
and
test
fldt
add
cmp
mov
fnsave
add
adc
insb
mov
shlb
adcb
stos
xor
test
push
and
xor
add
adc
imul
or
sbb
mov
jg
ja
outsb
inc
fldcw
stc
push
shlb
jl
imul
dec
push
and
fmul
mov
test
push
add
inc
inc
leave
repz
adc
jne
mov
xchg
add
xor
inc
out
or
sub
stc
jno
pusha
inc
sbb
jns
push
cmp
and
jg
sub
add
mov
mov
push
fdivrs
dec
sub
inc
mov
sub
mov
add
mov
ficompl
add
hlt
jnp
add
add
jl
shl
sbb
mov
xchg
cmp
sbb
in
mov
lea
aaa
push
test
mov
adcl
lods
lret
ljmp
std
inc
dec
cmpb
rclb
adc
xchg
insb
mov
iret
imul
ret
test
aam
jecxz
add
sub
or
sbb
xchg
sbb
sbb
popa
into
jb
mov
and
loope
mov
fsts
insb
addr16
clc
and
mov
cltd
cltd
clc
add
cwtl
add
and
outsb
add
out
jo
xor
shrb
push
negl
adc
test
or
or
out
push
sub
pop
mov
pop
xchg
add
ja
in
fstpl
test
aas
notb
pusha
pushf
adc
outsb
jb
add
lea
inc
xor
xor
and
clc
push
orl
andl
aam
movsb
mov
ja
sbb
mov
icebp
adc
inc
or
cli
mov
into
cmpsl
rolb
testb
stc
inc
fistps
les
roll
xlat
iret
pop
popa
pushf
add
ret
or
cmp
add
and
jl
stos
or
imul
movsb
sub
icebp
xor
add
sub
add
movsb
mov
data16
mov
inc
in
push
adc
add
sub
int3
dec
dec
icebp
add
addb
push
insl
fstpt
adc
mov
push
sarb
add
dec
movsl
sub
cmp
add
jle
push
aas
popa
mov
inc
shrl
lcall
mov
jp
inc
insl
inc
adc
and
add
mov
fiaddl
push
xchg
adc
cmpsb
ror
xor
insb
pop
repz
orb
call
fbstp
xchg
pop
xor
dec
fadds
dec
je
cmc
sub
mov
lret
pop
push
sbb
fstps
xchg
xor
cld
xor
dec
mov
pop
add
enter
and
cwtl
andl
icebp
add
dec
jmp
adc
mov
ficoml
add
inc
mov
testb
js
gs
fmulp
aam
movsb
dec
mov
sahf
push
cmp
fcoms
xchg
or
in
lret
stc
xor
inc
inc
int
rorl
cmp
add
inc
stc
inc
add
push
jge
xlat
stos
jb
xchg
and
ljmp
frstor
pushf
jbe
popa
add
adc
pop
mov
outsb
jns
jp
dec
sub
sub
mov
in
out
cmp
xchg
loope
jae
loop
xor
pop
sbb
add
stos
in
xlat
push
loope
sahf
dec
fmuls
into
adc
mov
mov
or
push
sbb
out
jecxz
rcll
xchg
sbb
cmp
lea
enter
adc
sub
cmp
fdivrs
pop
movsl
sbbb
sti
push
inc
jbe
fwait
cmpsb
inc
inc
or
mov
add
xor
int
test
rolb
comiss
loopne
dec
inc
adc
stc
inc
addb
dec
push
lock
and
insl
popf
aaa
push
fcomps
jl
pusha
inc
ret
mov
jnp
or
sub
and
add
mov
test
adc
call
in
hlt
aas
pop
mov
xor
sbb
lret
aam
inc
jp
fisubs
adc
ret
inc
nop
lcall
xchg
or
test
mov
xor
mov
mov
and
mov
lods
test
xor
sbb
adc
insb
pop
hlt
lods
shll
enter
add
xchg
xor
sub
add
out
int3
dec
neg
jp
add
jbe
and
dec
adc
and
test
sub
jbe
fs
add
ljmp
hlt
add
loop
and
addl
out
lds
cmp
out
imul
or
cmpb
loopne
xor
push
jb
add
loopne
xor
add
sbb
add
mov
nop
loopne
cmpb
out
jnp
push
call
push
dec
cmp
ss
testl
pop
adc
and
mov
lret
or
addl
adc
push
inc
and
sub
add
jmp
push
inc
push
pop
fidivrs
lcall
sarb
xchg
inc
dec
inc
sarb
push
mov
sbb
sahf
mov
push
div
or
jno
inc
out
hlt
js
nop
adc
xchg
pop
jb
mov
outsl
jo
or
stos
mov
push
ret
sub
pop
bound
movsb
and
adc
jmp
sbb
sub
js
adc
fists
ja
test
rolb
lds
pop
idivl
rolb
shlb
inc
mov
inc
loopne
dec
pop
in
fsubrp
bound
enter
cmp
je
fisttpl
sub
shll
sbb
notb
ret
sub
enter
insb
inc
cwtl
in
int3
jl
mov
push
push
mov
js
sub
orb
sub
cmp
add
lret
repz
jge
out
xor
xchg
pop
mov
movsb
push
inc
xor
pop
rorl
adc
in
and
js
hlt
add
sub
push
dec
fisttps
loopne
or
xorb
sub
notl
adc
mov
inc
orb
push
jb
js
adcb
jg
pop
hlt
inc
mov
and
les
hlt
repnz
jo
add
push
popa
out
add
sub
mov
cltd
or
inc
inc
je
push
dec
and
and
test
push
andb
out
push
inc
lods
pushf
push
mov
mov
inc
mov
ds
or
test
je
scas
popa
scas
push
nop
sbb
xchg
mov
mov
test
pop
ficoms
push
test
loope
divb
add
pop
jg
cld
xchg
dec
mov
and
dec
frstor
flds
jne
adc
xchg
pop
sub
les
out
fadds
dec
clc
dec
fldt
in
lods
push
pop
fs
and
inc
lret
pop
cmp
xchg
pushf
jnp
lock
pop
sbbb
les
mov
add
out
adc
lcall
adc
adc
add
jmp
rcrb
out
sbb
jne
loopne
jmp
call
roll
test
inc
sti
add
cmpsb
and
cmp
add
fstpl
fdivrs
mov
add
jae
js
dec
out
mull
insl
dec
add
in
adc
rcll
shld
mov
add
xchg
add
push
push
addl
shrl
inc
add
pop
insl
andb
push
fldl
imul
cld
ds
add
fildll
jg
add
inc
and
jecxz
shll
clc
cmp
or
jmp
add
inc
negb
or
add
cmp
loope
push
fadds
mov
jecxz
cmp
add
lret
cwtl
xor
push
add
imul
jle
push
rclb
lods
jb
jns
add
mov
loopne
xchg
mov
mov
push
sub
jecxz
sub
jp
adc
repnz
jle
ljmp
pop
xor
xchg
inc
fwait
cmp
mov
fidivrl
add
idiv
ss
mov
add
mov
cli
or
leave
fucomip
dec
sbb
lods
fidivrl
es
sbb
adc
and
and
sar
movsb
mov
add
add
or
sbb
stos
out
or
lret
out
addr16
push
mov
cmp
or
xchg
sub
add
mov
sub
mov
jns
aas
add
das
inc
scas
pop
lock
sbbb
dec
lods
icebp
imul
cmp
mov
call
adc
ljmp
mov
testl
les
pop
incb
js
lods
push
sub
pop
push
mov
lcall
cmpsb
mov
cmp
mov
cltd
incb
add
sbb
xlat
negb
add
loopne
repnz
and
fdivrs
sbb
mov
push
sahf
pop
cmp
pop
and
lods
mov
add
lret
push
xchg
sbb
push
movsb
mov
addr16
test
fdivrs
cmp
mov
xchg
aas
pop
sbb
inc
addr16
adc
sub
jae
or
inc
call
and
cs
mov
mov
dec
lock
bound
adc
lods
cmc
lahf
test
pop
hlt
fs
inc
mov
dec
out
xor
xor
add
dec
fstpl
mov
cs
test
ja
xor
dec
in
hlt
xor
push
shr
cwtl
cltd
aam
jbe
dec
jge
cmp
enter
add
or
daa
movsl
xorb
sbb
pop
sbb
and
jge
inc
add
add
or
lcall
mov
inc
hlt
pop
mov
iret
push
sbb
jg
and
ja
mov
adc
fwait
mov
pop
imul
inc
dec
call
dec
test
jl
fidivl
mov
mov
push
or
test
in
jo
add
mov
or
in
mov
xchg
aad
pusha
and
aam
cld
add
movsb
sub
mov
and
shrl
std
jnp
mov
lretw
mov
popa
sarb
sti
and
pop
addr16
js
xchg
cmpl
sahf
mov
add
dec
nop
into
jae
jp
add
pop
int3
subl
add
mov
push
sbb
call
sbb
sbb
sub
push
inc
fptan
mov
sbb
inc
sbb
adc
fldl
adc
sbb
mull
mov
cmc
sbb
mov
ficoml
das
rolb
cwtl
mov
sbb
jne
add
lcall
mov
add
or
pop
pop
add
mov
and
loopne
lock
adc
or
adc
mov
js
mov
test
add
ret
push
hlt
enter
xchg
pop
loope
fisubl
pop
add
pop
lods
pop
add
popf
mov
adc
add
negl
inc
in
cmp
mov
mov
js
mov
insl
push
adc
movsl
xchg
sbb
and
add
test
xor
ret
ror
mov
and
jne
or
jg
adc
jl
js
jne
lock
inc
nop
aas
adc
jle
sub
bound
adc
and
add
and
das
jbe
enter
bound
out
cmp
jl
daa
shlb
or
imul
cwtl
jbe
aas
add
sbb
mov
jmp
cmp
push
adcb
subb
out
or
pop
in
js
xor
xor
push
out
pop
in
xor
dec
and
fs
adc
pop
pusha
and
mov
movsb
xor
inc
mov
inc
xor
lods
cmp
test
call
sbb
pusha
lahf
cmp
xchg
push
jo
ret
inc
repnz
jno
cmpsl
popa
inc
fcomp
dec
mov
mov
inc
or
xchg
mov
xchg
inc
inc
shrl
rorl
jnp
mov
xchg
jecxz
jecxz
sbb
and
cmp
jb
inc
arpl
or
inc
xor
inc
pop
mov
shll
cwtl
add
sub
fiadds
lods
outsb
push
add
imulb
fnop
mov
call
rolb
xor
addr16
inc
ds
lods
add
adc
cmp
sbb
jbe
js
xor
stos
aaa
or
mov
test
cmpsb
fdivrl
test
cld
cmp
sub
mov
dec
push
rcrb
inc
or
mov
and
je
adc
adc
repnz
pop
pusha
neg
mov
mov
push
enter
jno
or
inc
sub
lea
mov
lea
pop
adc
scas
adc
push
cld
xlat
inc
pop
test
mov
adc
adc
popa
mov
pushl
and
inc
add
xchg
testl
jecxz
push
sbb
cmp
mov
adc
lods
testb
xor
push
xor
cmp
sub
lcall
or
inc
mov
push
sarb
inc
pop
and
xor
mov
sub
inc
cmp
push
out
fiaddl
or
jo
dec
adc
pop
xor
inc
jno
cmpsb
cwtl
adc
mov
inc
adcb
icebp
negl
and
jbe
ljmp
test
push
push
cmp
add
jg
lock
mov
add
jo
faddp
adc
loopne
icebp
jge
add
xchg
sub
cmc
pop
popa
and
in
jns
jp
xlat
mov
cmp
faddp
or
inc
hlt
bound
repnz
adcb
mov
test
arpl
jl
hlt
sbb
mov
sbb
loop
adc
and
mov
test
add
out
jns
clc
cwtl
mov
outsb
add
push
test
add
pusha
pop
jns
and
xor
xchg
sub
ja
adc
inc
and
popa
data16
add
and
movb
xchg
and
sub
std
mov
pop
fsubrs
adc
add
les
inc
mov
add
jle
inc
into
loope
lock
cs
pop
jnp
punpcklwd
jg
jbe
and
push
mov
or
mov
and
jbe
sbb
out
adcb
mov
add
inc
xchg
scas
call
loope
sub
adc
jbe
sbb
dec
sub
pop
push
stos
fs
mov
push
and
pop
mov
pop
xchg
cmp
add
dec
and
mov
push
push
pop
call
jle
imul
jnp
add
push
sub
inc
inc
addr16
lret
popa
sbb
aas
dec
mov
xor
fisubs
shlb
or
aad
lock
pop
add
xor
push
add
add
rcrb
fsubrl
mov
fs
xchg
fld
js
adc
aam
loope
mov
adc
ret
or
fmull
stos
mov
sbb
sahf
aam
mov
add
mov
push
out
je
push
test
push
scas
dec
xchg
leave
dec
sbb
sub
fs
aaa
mov
lock
inc
pop
jecxz
pop
add
mov
aad
push
xor
gs
rol
js
pop
push
or
inc
andps
aaa
add
addr16
jnp
add
inc
add
iret
dec
adc
movsl
cmpsb
add
aaa
or
mov
imulb
pop
inc
inc
and
xor
pop
movsb
or
xor
mov
rcll
sub
or
ja
int3
xchg
jmp
inc
and
sbb
or
xor
rorl
sub
mov
sarl
daa
or
and
push
out
cli
lcall
ds
dec
xor
xor
xor
mov
inc
and
dec
cmp
cmp
cmp
inc
and
dec
dec
xchg
dec
ds
add
push
add
dec
out
hlt
cmp
mov
movsl
add
push
sub
je,pt
pop
xor
subl
aaa
adc
xor
sbb
xor
cmpl
cmp
add
andl
stc
xor
aas
xchg
dec
xlat
incb
dec
int3
mov
add
lcall
sahf
adc
cmp
jge
dec
inc
jecxz
or
out
push
xchg
or
pop
aad
add
stos
dec
popf
pop
leave
cmp
push
or
mov
and
push
cmp
jo
xchg
ret
fiaddl
clc
sub
sbb
lods
sub
pop
cmpsb
sub
sbb
in
push
aam
jb
nop
jno
sub
cmpsb
push
in
ja
xchg
jmp
inc
ds
inc
xor
inc
add
jb
in
xchg
and
cltd
in
add
es
push
pop
call
mov
out
xchg
adc
jp
cs
dec
mov
arpl
pop
enter
clc
rclb
jae
push
add
sub
out
bnd
inc
or
and
adc
lret
js
movsb
inc
pop
jl
sub
addb
rcrb
push
and
xor
fdivrs
sbb
or
iret
add
call
call
in
pop
jns
mov
loope
sbb
push
sbb
movsb
add
out
and
cs
fsubrs
pop
xor
les
sub
notl
or
xorb
push
sbb
sub
inc
loopne
or
bnd
jl
jp
push
addr16
pusha
sbb
jne
shll
sub
add
cli
cltd
std
add
fistpll
pop
xor
jbe
xor
add
cmp
andb
das
mov
out
ds
sub
cs
iret
sub
sub
subl
mov
sbb
in
rorl
xor
pusha
pop
and
popa
jb
lods
cwtl
mov
inc
pop
xchg
jo
aad
arpl
and
mov
lock
xor
sub
aam
shlb
add
and
js
cmpsb
adc
jle
aas
leave
sub
and
aad
gs
dec
mov
mov
adc
sub
sub
aas
lret
mov
addl
addr16
enter
pop
aam
pusha
in
xchg
cwtl
mov
shl
cli
xchg
clc
push
addr16
jnp
pop
aam
mov
jmp
add
jb
push
nop
mov
out
and
aad
jmp
loopne
ds
je
add
ret
jge
inc
sbb
jne
push
addr16
pop
jl
jo
fwait
sbb
or
mov
enter
pusha
lods
mov
jge
in
pop
ss
jl
add
fdivrl
xchg
dec
sub
imul
sbb
push
push
or
js
in
rcr
adc
pop
cmp
filds
and
sub
imul
inc
out
enter
fsubrs
pop
cmp
xor
popa
xor
mov
std
dec
pop
hlt
ret
mov
subb
sub
mov
cmp
inc
flds
push
sub
mov
add
jge
and
dec
lret
push
sub
pop
dec
shll
adcb
jae
js
das
mov
inc
leave
inc
xchg
lcall
pusha
add
int3
shll
cs
jge
jmp
mov
cmp
xchg
add
cs
aas
shrl
js
leave
gs
inc
fisttps
add
jp
movsb
lock
fsubrp
hlt
inc
xor
ret
xor
pop
and
sbb
sub
fs
faddl
push
hlt
popa
or
addb
sti
mov
pop
sub
popa
pop
jb
pop
xchg
xchg
loope
inc
cltd
fldt
push
xor
das
pop
aas
and
cs
jbe
pop
add
and
inc
rcr
hlt
mov
inc
ret
cmp
popa
out
xor
clc
call
sub
jb
ss
sub
sbb
fsubl
mov
sbb
cmp
arpl
aas
int3
pusha
ret
hlt
push
add
inc
mov
lea
pop
add
loopne
sub
fcomp
or
inc
shlb
fsubr
jp
pop
or
enter
jb
addb
adc
add
test
mov
icebp
test
int3
and
lret
push
sbb
mov
lock
mov
jp
and
cmp
ret
data16
imul
and
fdivl
clc
push
int
inc
rolb
pop
jnp
nop
ljmp
push
jp
bound
fmull
push
push
iret
sub
sbb
and
lret
add
add
sbb
and
jle
ljmp
or
jle
leave
add
lcall
xchg
cmp
lahf
xchg
cmp
test
notb
arpl
icebp
and
or
xchg
mov
sub
add
and
mov
adc
push
arpl
add
mov
clc
cmp
dec
fidivrs
repz
mov
mov
push
adc
xlat
mov
add
or
add
jecxz
jae
and
xchg
add
dec
and
inc
push
mov
pop
or
xor
aam
push
xor
pusha
lock
imul
movsb
pop
sub
cmp
ret
jae
add
cmp
test
mov
add
jp
sbb
sbbl
stos
repz
nop
pop
repz
dec
cmpsb
popf
pop
add
ror
enter
lret
or
mov
and
push
sub
pop
or
iret
das
std
loopne
dec
sbb
or
mov
movl
cwtl
cmpb
addb
out
enter
push
mov
sub
loope
mov
inc
decb
scas
bound
push
orb
sub
or
push
aam
add
cmpsb
mov
add
inc
pop
enter
adc
lods
push
add
cld
movsl
jnp
xor
jb
call
push
push
push
add
jbe
mov
js
sbb
sbb
test
pop
clc
loopne
outsb
jne,pt
push
xor
cltd
daa
xchg
mov
sub
fst
inc
fcmovnb
cmpsl
cmp
mov
mov
dec
inc
push
loopne
lock
insl
enter
xchg
sti
dec
push
xor
pop
push
imul
jmp
jo,pt
xlat
cmpl
inc
mov
and
enter
or
adc
pushf
push
in
aaa
insb
iret
xchg
lock
fisubrs
pusha
cmp
mov
pop
jbe
or
fdivr
and
or
dec
sbb
lahf
subb
and
and
outsb
cmpsl
sbb
add
mov
adc
insl
sub
aam
adc
mov
mov
jb
test
fwait
push
cmpb
mov
pusha
push
dec
in
push
xor
pop
push
shlb
movsb
out
or
mov
mov
insb
add
test
pushf
xor
or
lock
fmul
pop
xchg
inc
and
pop
mov
cltd
dec
push
sbb
jmp
jp
std
mov
push
in
push
inc
sahf
cli
popa
cld
cmp
cwtl
sbb
dec
nop
sub
mov
movsb
jo
test
or
inc
dec
shll
nop
insb
add
sub
out
add
lahf
mov
pop
xor
sbb
push
out
xor
push
mov
cli
std
lret
mov
dec
mov
hlt
add
pop
stos
cld
push
and
or
shrb
ds
jbe
loopne
icebp
lret
xor
cmp
fisttpl
pushf
out
xchg
orl
push
mov
lock
sbb
cmc
jo
flds
lds
divl
push
aam
or
and
dec
pop
push
pop
je
dec
das
push
popf
lcall
adc
adc
mov
arpl
daa
adc
or
dec
lods
in
add
incl
push
sub
jbe
loopne
les
pusha
pop
jne
outsb
adc
inc
test
insb
mov
cltd
loopne
xchg
sub
jecxz
xor
jo
cmp
lret
fldl
clc
enter
push
lahf
mov
mov
jo
mov
dec
pop
push
and
add
and
aad
insb
cmp
pop
mov
adc
or
std
sub
fwait
icebp
mov
xchg
pop
rorl
add
repz
push
mov
add
fnsave
divl
jmp
pop
ljmp
aad
push
test
mov
in
out
inc
jmp
push
add
insl
cmp
cmp
lret
out
in
sbb
movsl
dec
sub
inc
xchg
in
push
add
jge
mov
push
mov
in
je
cmpl
dec
call
subb
in
and
insb
push
mov
mov
clc
jmp
add
push
inc
jne
sub
mov
outsl
inc
push
xor
xchg
add
test
sub
addl
push
adc
shl
inc
pop
in
xchg
inc
daa
inc
or
lods
ljmp
push
jle
mov
jecxz
pop
stc
and
adc
jb
dec
shlb
add
fildl
mov
fsub
clc
cld
fmuls
nop
push
adc
add
popl
sbb
rorb
xor
xchg
cli
cmp
jmp
int3
fnstsw
dec
xchg
clc
aam
add
test
mov
ss
mov
sbb
mov
or
sbb
movsl
adc
add
je
cmp
outsl
xchg
push
repz
sub
add
cld
mov
inc
add
mov
add
jp
lret
mov
add
imul
xor
nop
lret
insb
push
jo
xchg
in
mov
jmp
mov
add
in
or
in
enter
or
cwtl
adc
aaa
mov
mov
testb
inc
jnp
clc
xchg
and
aas
fadd
test
aad
les
shll
jge
mov
ret
or
inc
shrb
enter
xchg
inc
test
jmp
dec
dec
add
sbb
aam
hlt
or
dec
jbe
stc
jmp
dec
sbbb
xchg
iret
les
add
jne
call
and
hlt
cwtl
bound
mov
jmp
js
fadd
adc
xchg
sbb
lods
push
or
cld
popf
jnp
in
inc
push
mov
add
es
dec
mov
lods
shl
add
jle
adc
jmp
add
jecxz
push
xchg
inc
lods
idivl
sbbb
rclb
into
jecxz
inc
hlt
cmp
push
clc
jno
sbb
add
inc
mov
andl
add
mov
xor
into
xor
adc
add
cmp
add
jmp
pushf
dec
xchg
adc
xor
decb
insb
inc
dec
into
sbb
sub
incl
or
mov
les
nop
xchg
ret
sbb
or
dec
fimull
and
xchg
jbe
loopne
bound
add
cs
je
scas
add
push
push
or
jge
mov
andl
mov
push
xchg
mov
mov
sub
and
sar
dec
inc
adc
enter
leave
rorb
aam
push
add
pop
push
jno
movsl
cmp
repnz
add
jl
pop
dec
lods
mov
and
rcrb
add
and
inc
outsl
rorl
iret
adc
leave
adc
in
int
repz
sub
das
pusha
mov
adc
fnsave
pusha
adc
and
and
js
sub
and
push
rclb
pop
push
lods
dec
lret
pop
in
add
inc
pop
xchg
add
pushf
fsubrl
push
inc
loopne
out
outsb
or
hlt
mov
adc
pop
sub
push
or
dec
lret
data16
jl
arpl
hlt
enter
mov
xchg
subb
or
add
add
xor
add
icebp
scas
inc
cli
pop
inc
pop
lods
daa
dec
mov
mov
test
mov
outsb
jg
xor
inc
sub
sbb
cmp
mov
sub
insb
pop
ret
cs
roll
pop
jbe
lret
cwtl
cli
push
ds
addb
test
sbb
add
repz
movb
rcr
insl
hlt
cmp
test
sbb
xchg
add
lcall
and
push
jae
inc
and
pop
fstl
scas
outsl
cltd
push
jmp
jnp
loopne
repnz
jge
push
cmp
pushf
lcall
rcrl
inc
sub
and
test
pop
std
fs
gs
out
xchg
add
mov
push
int3
in
add
test
mov
sar
sbb
cltd
push
or
call
mov
mov
or
fwait
pop
xchg
test
mov
cmp
pop
clc
testb
add
cwtl
add
jp
and
add
mov
pop
scas
lods
popl
lock
lea
aad
xchg
cs
mov
int
fstpl
push
fcomip
mov
jo,pn
in
cwtl
insb
in
xor
mov
inc
pop
loop
test
pop
push
movsl
pop
xor
pop
inc
lock
inc
mov
mov
push
enter
lock
movsl
es
push
pusha
int3
cmp
ss
sub
cltd
outsb
sub
cmp
xchg
mov
push
cmp
pop
fbstp
xlat
push
add
pop
mov
out
adc
mov
push
sbb
mov
pop
push
rcll
mulb
jecxz
sub
bound
mov
cmp
fsub
add
xorl
add
mov
pop
and
push
or
add
mov
or
ret
sub
add
movsb
jl
iret
jae
mov
je
or
pusha
push
xor
pop
addb
mov
sbb
and
adc
mov
sub
lea
movsl
mov
and
inc
rorb
xchg
iret
push
mov
add
inc
aam
add
ret
cmp
inc
mov
sub
inc
cmpsl
push
mov
push
fwait
daa
cmpsb
dec
outsl
sbb
in
aam
xchg
mov
dec
out
add
mov
mov
and
out
add
push
add
add
insb
cwtl
sub
push
daa
mov
rolb
imul
aad
adc
push
jae
add
ret
pusha
mov
scas
rcrl
sbb
mov
dec
jl
add
mov
pushf
add
inc
sbb
scas
pop
pop
adc
cmp
push
pop
pushf
xchg
sub
scas
lods
and
jne
sub
pusha
xor
cmp
sub
fxch
rcr
jb
aaa
add
pop
dec
aas
out
mov
sbb
cmc
add
stos
das
xor
and
xchg
test
scas
es
push
inc
ds
fisubrs
lods
fsqrt
mov
dec
inc
daa
and
sbb
mov
push
ljmp
add
cli
aaa
xor
mov
jl
and
jno
and
aas
rolb
into
rol
stos
iret
sbb
sub
pop
sbb
pop
mov
push
cmp
testb
cld
rcrb
call
pop
adcb
push
stos
enter
and
ret
jecxz
pop
divb
inc
pop
outsl
movzwl
jb
xor
xorb
rolb
xchg
xor
bnd
fistpll
pop
dec
out
add
inc
cmp
dec
add
jp
andb
mov
leave
jns
push
test
add
stos
add
test
xchg
ss
dec
add
mov
or
and
mov
mov
addb
aad
or
and
pusha
push
jns
rorb
lret
sub
mov
pop
pop
addl
rcrb
lea
push
jo
mov
into
pop
lcall
iret
sub
rorl
jbe
cmpl
add
dec
push
adc
pop
ret
and
inc
push
ret
cmp
mov
cli
and
or
sbb
jmp
cmp
adc
jne
inc
fsubl
sbb
inc
aaa
pop
add
xchg
pusha
sti
cvtps2pd
loop
mov
cld
lods
mov
inc
andl
xor
push
mov
push
call
jle
sub
dec
cmp
or
jg
adc
cltd
sub
adc
lock
mov
mov
xor
dec
lret
adc
ret
mov
mov
push
ret
mov
or
inc
icebp
add
ja
lea
mov
dec
in
pop
ret
mov
loopne
mov
sub
mov
addb
mov
push
sbb
mov
xor
adc
adc
arpl
mov
cltd
inc
xor
add
rcrl
pop
and
sbbb
loop
mov
incb
sbb
add
cmpsl
daa
add
sbb
data16
sbb
ret
mov
inc
push
ret
and
addb
xchg
add
mov
pop
nop
rol
test
xor
dec
and
jnp
mov
les
jne
or
repz
in
inc
push
cwtl
sbb
ret
push
fmul
icebp
adc
jae
punpckhbw
xchg
cmp
xor
xor
mov
or
fildl
or
push
ss
add
xchg
movsl
sbb
cmp
fcoms
or
data16
cmpl
push
addl
jmp
sbb
xor
mov
jb
lea
wbinvd
cmpb
mov
mul
sub
addr16
xor
push
jmp
call
add
push
mov
push
mov
mov
pop
push
shr
sub
test
xor
fistps
popf
jno
push
push
pop
ret
inc
mov
add
ret
adc
std
push
jle
xor
inc
mov
roll
xor
and
pop
ret
inc
mov
and
ret
rorb
push
roll
mov
sbb
std
add
bound
push
sbb
pusha
es
mov
jmp
inc
and
xchg
mov
mov
mov
inc
cmp
mov
cli
or
sub
adc
xchg
and
adc
jmp
fildl
inc
fs
push
inc
lcall
stc
push
xchg
xor
fcomps
cmpsl
outsb
jge
cmp
orb
inc
pop
cmc
xor
mov
jge
push
cmp
bound
mov
pop
loop
insl
fucomp
movsb
int
scas
fs
mov
pop
es
pop
push
subl
mov
out
xchg
and
or
or
sub
subl
out
and
cs
jecxz
xchg
add
and
push
inc
popl
cmp
jne
sbb
test
xchg
mov
pop
cmp
pop
push
jmp
jge
and
cmp
push
popa
push
ret
enter
inc
adc
add
jecxz
popf
imul
test
jp
cwtl
push
adc
mov
gs
push
mov
sbb
xor
xchg
push
inc
xorl
sti
or
jno
cmpsb
jo
xchg
pusha
mov
pop
add
stos
jnp
mov
jp
fsubr
push
pop
pop
push
lock
add
lea
nop
and
jge
addb
pop
add
add
jmp
xor
cwtl
sub
add
cltd
pop
dec
pop
imul
call
jae
mov
adc
aas
xchg
int
add
mov
xor
push
xchg
xchg
and
pop
push
add
add
inc
jge
aad
jmp
lret
or
aas
loope
cld
pusha
or
mov
cmc
movsl
inc
xchg
pop
pop
jp
push
in
fs
adc
leave
or
icebp
and
rsqrtps
es
clc
outsl
dec
mov
adc
pusha
xor
dec
outsb
es
adc
mov
scas
xor
adc
push
xor
or
sbb
fucomip
mov
and
inc
push
sbb
adc
stc
mov
imul
push
mov
outsb
add
imul
cmc
xchg
movsb
xor
shl
xor
add
out
pop
inc
adc
push
jmp
and
test
imul
rorb
push
ljmp
inc
sbb
inc
adc
mov
inc
and
jmp
or
sbb
mov
mov
ret
mov
repz
loopne
lcall
push
je
adc
lods
jmp
fwait
push
add
cmp
sti
or
and
inc
push
jl
out
movsb
mov
add
ret
cmp
in
enter
push
sbb
jl
fldenv
or
xor
cmpsb
push
jle
sbb
leave
sbb
cmp
adc
inc
add
cmc
adcw
call
add
xor
outsb
lcall
jmp
lcall
repz
ss
jmp
std
inc
xor
xor
sbb
inc
pop
mov
daa
jmp
mov
cld
enter
inc
sub
pusha
ss
in
fistl
loopne
je
xchg
or
add
outsl
add
sub
inc
or
andb
add
imul
sarl
test
pop
or
lahf
rclb
sbb
cmpb
outsb
les
and
cmpb
ljmp
in
cmpsb
mov
or
jb
gs
mov
xchg
pushf
roll
or
mov
xchg
test
xor
sub
and
jno
leave
pop
fldl
jecxz
inc
das
es
mov
adc
je
push
cld
pop
pop
test
sbb
push
xchg
out
pushf
jb
mov
mov
jo
push
xchg
dec
pop
cmc
je
or
test
push
xchg
aam
pop
xor
cli
mov
sahf
jp
arpl
call
inc
repz
push
icebp
sbb
xlat
and
stc
sub
sbb
imul
pusha
loop
push
push
pushf
subb
push
stc
sub
mov
lds
jnp
inc
add
sbb
popa
xor
adc
mov
push
xchg
cmp
and
mov
add
pop
jmp
fistps
mov
iret
clc
je
in
mov
mov
dec
sub
sub
lods
cltd
lock
sub
xchg
and
sub
sbb
mov
jns
xchg
sub
cmp
into
xchg
xor
or
jbe
add
in
mov
test
sub
mov
adc
or
popa
mov
push
jmp
shll
clc
inc
icebp
mov
stc
aam
enter
jmp
and
popa
stc
cltd
and
aas
xorb
xchg
rol
addr16
test
push
sarb
inc
xor
mov
xor
popa
shlb
adc
adc
mov
into
jae
adc
movl
call
imul
xchg
xchg
or
data16
add
mov
xor
cmc
xchg
xchg
or
test
mov
adc
addl
stos
negb
xchg
and
adc
lret
push
mov
imul
mov
rcrb
test
or
aam
je
ja
fmuls
jns
cmpsb
negl
incl
je
xor
fldl
data16
arpl
dec
xchg
aaa
inc
xchg
dec
and
and
in
xchg
jge
add
nop
dec
int3
jg
testb
addl
pop
add
xchg
dec
pop
popf
mov
bound
sub
push
xchg
pop
mov
orl
inc
add
scas
cmp
pop
xlat
ret
push
inc
dec
outsb
lret
dec
adc
test
sub
adc
mov
mov
xchg
dec
add
pop
subb
and
cmpb
add
mov
mov
sbb
addr16
cmc
or
and
mov
add
es
xchg
repnz
push
add
int3
addb
add
jno
imull
mov
or
imul
sub
jmp
pusha
sub
lods
nop
add
sub
or
fwait
push
push
adcl
subl
lock
bound
int
xchg
inc
add
pop
aas
mov
movsl
ret
shlb
xchg
xor
mov
add
and
push
add
jo
test
cmp
xchg
lea
dec
popa
faddl
cmc
adc
sahf
pop
push
inc
adc
mov
out
pop
add
sub
mov
cmpsl
mov
mov
fs
mov
loop
pop
mov
adc
inc
mov
mov
sub
dec
bound
dec
sub
ret
lea
mov
xor
adc
inc
add
add
dec
jns
or
dec
add
rcr
add
add
inc
pop
add
fwait
std
add
mov
push
rcll
sbb
and
add
pop
decl
jmp
arpl
mov
adc
mov
jge
popf
sbb
inc
lds
add
adc
test
adc
sub
sti
icebp
push
cmpsl
or
ss
mov
dec
out
aam
sbb
in
or
arpl
adc
or
call
mov
cli
xor
add
sahf
aas
push
mov
sbb
push
js
pop
push
bound
jmp
in
add
push
pusha
cmpsl
test
aaa
add
fldcw
fdivrs
nop
fdivrs
ss
mov
leave
push
mov
clc
rclb
pop
popf
xchg
cs
testl
xor
or
jp
xchg
mov
mov
jns
rol
pop
add
stc
or
rcrb
mov
mov
or
sub
movb
leave
shlb
cmp
sbb
dec
sti
adc
aad
loop
push
mov
pop
or
adc
lds
sub
call
es
ficomps
repz
aaa
adc
and
cmc
add
jnp
mov
into
and
push
mov
sti
pusha
arpl
add
cld
punpckhbw
sub
xchg
bound
in
loope
mov
mov
loope
pop
push
in
paddq
pop
xor
pop
sub
dec
sbb
dec
adc
lods
add
in
pusha
std
push
jae
or
mov
xchg
push
push
fsubs
xor
jp
clc
lret
or
or
push
adc
dec
jle
adc
iret
idivb
pop
stos
into
andb
jg
jb
and
popa
lea
idiv
add
outsb
add
cli
pop
mov
mov
inc
push
or
mov
pop
sahf
ficoms
add
pop
dec
or
cmp
adc
jbe
mov
jge
mov
rclb
cmp
adc
mov
dec
add
add
inc
sbbl
bound
cmp
mov
lret
popf
jmp
ljmp
mov
addr16
movsb
jbe
add
xor
stc
jmp
add
sbb
jmp
ds
inc
pop
out
mov
sub
jg
mov
clc
sub
add
adc
mov
test
aam
flds
out
or
out
jmp
adc
push
and
les
outsb
mov
mov
xor
cs
fsub
scas
inc
sbb
mov
dec
sub
dec
orl
and
out
lods
imul
sahf
loop
nop
test
rorl
and
and
push
jmp
adc
test
leave
add
es
leave
sub
or
pop
daa
add
test
add
and
scas
je
bound
stc
mov
stc
pop
push
cmp
pop
pop
aas
int3
and
stc
ror
adc
xchg
fwait
je
push
or
adc
sbb
add
dec
inc
lret
fildl
ljmp
cmp
lods
and
mov
out
push
pop
push
lods
and
and
pop
cld
pop
int
ja
xchg
outsl
stc
or
faddl
push
sub
inc
mov
inc
add
push
mov
jae
leave
arpl
faddl
ds
inc
adc
cmp
jp
loopne
or
test
rcll
dec
mov
mov
shlb
jmp
sub
test
xor
mov
pushf
push
sub
and
add
push
mov
mov
lret
mov
mov
push
cli
lods
dec
or
test
adc
in
or
mull
std
push
cld
int3
mov
pushf
mov
lcall
mov
mov
adc
inc
sbb
cmp
sbb
add
inc
jo
test
inc
sbb
lcall
outsl
dec
pop
add
sub
xchg
xchg
mov
mov
sbb
lret
fs
cmpl
add
jae
push
add
mov
test
xorb
add
mov
inc
pop
adc
aad
cmpsl
xlat
add
arpl
stos
ja
sbb
lods
fxch
add
mov
or
inc
pop
aam
sub
cwtl
inc
insl
les
enter
sbb
push
jne
test
aad
inc
add
dec
jp
adc
push
adc
or
out
outsl
pop
xor
jmp
test
adc
add
imul
call
fwait
adc
je
add
imul
add
in
cmp
movb
or
xchg
out
loopne
stc
or
pusha
mov
leave
adc
fadds
insb
aad
das
sbb
popa
and
negb
push
fwait
push
add
mov
adc
inc
pop
bound
test
ja
mov
cmp
sub
sbb
lods
mov
jbe
daa
loopne
loopne
les
nop
add
pusha
cmc
add
shll
cmpsb
pop
mov
ss
lock
xor
xchg
dec
sub
movsl
or
and
fnstsw
mov
lods
je
mov
push
xor
adc
lea
mov
andb
gs
sub
dec
add
adcb
test
add
inc
adc
or
jmp
jo
cs
mov
push
lret
int
adc
cltd
add
popa
adc
jnp
xor
in
jle
push
cmp
or
mov
xor
js
stos
enter
adc
insl
or
test
inc
insb
mov
test
nop
push
imul
push
push
pop
push
xchg
adc
aaa
fs
sub
lods
sbb
cwtl
add
lock
push
pop
dec
push
fcmovnbe
outsl
pop
pop
iret
jge
push
sub
test
jne
jne
inc
push
idiv
stc
in
pop
push
out
andb
mov
shrl
les
mov
fsubrs
movl
inc
or
cmpps
sbb
or
inc
add
xchg
xchg
pop
inc
insl
addb
mull
adc
or
insw
rol
movsl
push
gs
xchg
xor
leave
sarb
and
pop
fiadds
pop
out
shlb
nop
or
loope
pop
or
arpl
xor
shlb
or
mov
mov
rcl
adc
push
test
mov
inc
out
dec
or
xor
mov
cmp
push
xchg
xchg
add
sbb
pop
mov
add
mov
add
mov
mov
sbb
adc
test
or
mov
call
jo
pop
mul
xchg
stc
add
adc
push
sti
add
test
outsl
mov
outsl
dec
je
add
fbstp
cmp
enter
xchg
push
jmp
push
cld
add
andl
add
or
mov
mov
arpl
pop
cmp
mov
pop
dec
stos
adc
sbb
dec
mov
js
fimuls
fcoms
and
ret
pop
push
movsb
iret
cmpsb
jmp
inc
jo
mov
ret
xor
mov
rclb
iret
movswl
lret
mov
xlat
push
add
fs
aam
xchg
push
jmp
in
add
push
inc
add
cmp
mov
and
add
xchg
jle
arpl
xchg
icebp
inc
sub
jno
ret
push
fs
dec
push
bound
adc
or
ret
call
inc
or
or
adc
xchg
inc
add
orb
imul
subb
call
push
sbb
pop
xor
loope
dec
outsb
xchg
std
pop
add
mov
add
mov
inc
mov
xor
mov
inc
cmp
sub
test
test
xor
dec
aas
sbb
inc
movsl
inc
mov
lret
xchg
sub
push
mov
push
clc
cmp
xor
mov
clc
xchg
sbb
out
daa
add
fidivrl
cmpunordps
pop
arpl
fildl
lret
push
jnp
jo
mov
mov
and
in
xchg
adc
es
jmp
int3
inc
xchg
lods
mov
add
cmp
xor
fiaddl
dec
xor
pop
adc
ds
aaa
in
jp
pushf
push
dec
mov
mov
adc
sub
int3
jno
dec
cmp
add
jnp
std
cltd
push
lcall
mov
fildl
jo
je
addr16
hlt
out
jo
xchg
mov
inc
stos
lods
mov
inc
pop
mov
mov
stos
test
rolb
das
shrl
add
jl
push
adc
out
pop
push
xor
in
les
repz
push
daa
cmp
sarl
fnstsw
call
inc
and
push
cmp
add
gs
imul
data16
popa
or
xchg
gs
sub
arpl
je
out
stos
push
data16
ja
jb
jl
jle
jge
jns
divb
ja
imul
arpl
jae
mov
imul
cli
jne
or
add
add
sub
pusha
jae
inc
push
push
dec
jne
pushl
inc
sub
bound
jns
or
fisubrl
sub
addl
fadds
inc
call
dec
setno
push
push
cmp
jg
mov
cmp
nop
repz
mov
cmp
lret
mov
sbb
add
sub
scas
jp
les
mov
fstpl
test
ds
or
xor
and
mov
xor
and
sbb
aaa
cmp
fs
cmp
enter
cmp
mov
rolb
mov
mov
or
sub
pop
adc
cmpb
sbb
popa
clc
lea
xor
sub
aam
mov
xchg
mov
pushw
push
adc
sub
rcll
mov
aaa
cmp
test
enter
cmp
test
dec
fdivrl
or
int
pop
enter
cmp
inc
sbb
aaa
xchg
inc
or
pop
or
pop
sbb
fisubs
push
xchg
and
sbb
add
aaa
je
add
repnz
jp
sbb
adc
ret
lea
inc
mov
inc
out
test
push
pop
mov
fwait
add
adc
cmp
sbb
add
add
orb
loopne
add
sub
or
hlt
push
xor
and
cli
lret
mov
push
lahf
xorb
je
mov
xor
sarl
insl
loopne
adc
mov
add
adc
mov
mov
inc
adc
jecxz
loope
xchg
cwtl
mov
add
imul
sub
and
fiaddl
lds
jl
out
pusha
popf
adc
add
outsb
sub
add
xchg
call
pop
add
and
les
push
das
jg
adc
aaa
lds
mov
push
push
pop
xchg
fisubrs
xchg
and
jl
leave
in
dec
js
addl
and
leave
out
mov
ss
movsb
arpl
arpl
scas
jae
cmp
inc
movsb
inc
xor
ja
lcall
ret
cmp
add
sti
mov
aas
repz
and
xor
or
xor
ficomps
cwtl
lock
dec
stc
inc
cwtl
lret
in
cmp
jae
fadds
sbb
and
rcrb
ret
faddl
call
fildll
mov
mov
jnp
sbb
repz
add
int
aad
into
add
mov
or
test
xchg
sub
sub
mov
sbb
push
lock
or
mov
lods
xor
push
in
sub
add
jno
mov
orl
mov
or
sbb
mov
fstpl
cmp
jno
in
sub
mov
jle
dec
jnp
ret
insb
inc
jge
popa
or
mov
notl
cmp
add
je
aam
lods
jnp
rcll
inc
sub
push
inc
xchg
xor
mov
cli
jge
sub
stos
nop
xor
cmp
mov
or
cltd
mov
jecxz
popa
mov
call
cwtl
jbe
rolb
mov
inc
or
aas
add
push
inc
sub
xlat
or
cmp
lea
sub
mov
in
jl
fadds
mov
xor
xchg
adc
dec
aam
fs
insl
xchg
sbb
fs
mov
pop
add
xchg
scas
push
insl
insb
adc
add
aam
fidivrl
pusha
adcl
and
test
and
lods
push
mov
hlt
ds
dec
and
or
pusha
sub
add
lret
pusha
adc
lods
add
xor
inc
repz
and
lods
out
imul
add
pop
xor
cwtl
outsl
sub
add
lcall
mov
movsb
add
ret
sub
xchg
sub
jbe
lahf
inc
sub
das
push
fadd
jo
movsb
push
mov
popa
add
mov
cltd
sti
mov
insb
sbb
bound
ret
jl
or
sub
inc
mov
xchg
bnd
mov
jbe
add
rolb
add
jle
and
shlb
addr16
or
inc
in
or
dec
fcompl
add
jnp
loopne
scas
cmp
gs
shl
dec
push
mov
or
and
mov
xchg
mov
inc
test
fnstenv
cmp
stc
rolb
mov
jno
cmc
nop
jae
cmp
es
out
xor
cmp
imul
fstpt
xor
in
mov
sbb
nop
pop
add
cmp
inc
and
or
sbb
outsb
sbb
mov
sar
or
repnz
test
out
xor
adcb
push
sub
jle
sbb
xchg
and
add
addb
fsubs
lods
jo
movsb
adc
fisubs
add
movsb
outsl
loopne
and
inc
dec
and
sti
sbb
loope
es
or
icebp
ja
addb
inc
or
cmp
ja
out
push
addr16
mov
imul
scas
add
addl
cltd
cmp
pop
fwait
in
add
mov
mov
mov
add
cmp
aam
add
xor
push
repnz
ret
xchg
loope
das
movsb
ja
add
lret
xlat
push
xchg
or
mov
dec
mov
inc
test
insl
xor
js
xor
and
jp
popa
add
mov
cmp
lock
mov
push
push
int
push
das
jns
sbb
popf
out
call
fldenv
mov
lods
int3
and
je
in
add
out
dec
mov
add
out
imul
sbb
lock
xchg
pusha
filds
stos
jecxz
xor
lahf
mov
stc
fwait
push
das
lret
popa
sbb
sti
gs
es
test
stos
andl
push
jp
push
out
dec
mov
fmuls
cmpl
jmp
and
call
jo
add
push
mov
lods
mov
or
repz
fstpt
aad
lods
xchg
pop
loope
add
out
out
and
mov
popf
nop
test
dec
or
pop
aam
add
inc
and
lahf
bound
pop
add
xchg
mov
and
dec
and
or
dec
push
and
sbb
out
enter
lds
push
add
jbe
pop
push
jo
mov
mov
sbb
mov
adc
jbe
add
into
add
sarb
or
or
loop
xor
add
movsl
xchg
hlt
xlat
add
add
les
inc
and
inc
jle
lods
js
adc
xchg
mov
hlt
jl
imul
xlat
mov
xchg
and
in
nop
mov
add
cwtl
mov
jle
add
lods
ret
xor
inc
push
icebp
dec
outsl
pop
loopne
je
add
call
jns
aam
les
call
add
xor
clc
ror
sbb
movb
mov
inc
sbb
add
scas
push
es
icebp
or
add
ss
ljmp
idivb
pop
popf
cmp
cmp
in
filds
lock
loopne
pop
adc
cmp
fmull
jo
push
dec
xor
adc
rclb
and
in
adc
ret
xor
push
dec
and
lock
inc
daa
add
xchg
lods
shr
data16
or
and
sbb
pushf
mov
pop
sbb
sahf
adc
push
ret
mov
sbb
xchg
jg
dec
jg
jmp
and
jne
and
inc
jecxz
std
mov
scas
adc
mov
fmull
push
ja
push
leave
call
mov
mov
cld
jl
test
and
ret
les
or
cmc
jae
sub
mov
pusha
mov
frstor
and
xor
imul
jl
add
aaa
fs
aad
outsb
out
adc
test
jbe
mov
repnz
call
dec
sbb
push
test
dec
mov
xor
mov
jl
orb
popf
pop
pop
lods
mov
ret
sbb
xor
sbb
add
mov
sar
lds
jne
and
stos
insb
nop
xchg
cmp
dec
shrl
adc
mul
mov
popf
int3
dec
add
push
lods
push
sub
addb
insl
adc
and
jl
push
jb
add
mov
addr16
adc
sub
inc
push
je
js
lea
shr
add
adc
add
jmp
mov
pop
add
popf
fld
cmp
or
in
ss
es
mov
sbb
and
xor
mov
mov
push
mov
pop
add
faddl
shl
addl
add
hlt
or
add
sbb
cmpsl
shrb
jecxz
xor
mov
inc
adc
add
dec
mov
add
scas
adc
shrb
bound
inc
mov
jns
jnp
push
sub
clc
jb
out
je
das
xchg
iret
fdivrs
mov
in
fdivrs
xorb
cmpsl
xor
btr
decl
push
adc
add
ret
cmp
pop
cmp
sbb
xchg
lods
sbb
add
and
adc
int
nop
cmp
cmp
negb
inc
cmp
mov
subb
ret
test
addb
pop
dec
and
lret
add
jecxz
xchg
push
into
dec
add
mov
push
cmpl
xor
fsubs
inc
add
rsm
add
int3
nop
dec
push
cmpb
test
sbb
es
mov
inc
sbb
adc
adc
lods
aas
push
addb
orl
sbb
in
sbb
sub
xor
aam
sahf
jo
mov
mov
cmp
lret
inc
loope
das
inc
push
xor
mov
es
mov
or
push
dec
mov
and
mov
xor
adc
add
mov
sub
test
or
fdivl
add
sub
xchg
cmpl
jge
es
pop
dec
and
shl
fcomi
push
stos
fwait
and
test
les
cmp
clc
or
push
pop
add
adc
xor
sub
jae
lods
add
push
xor
dec
out
inc
fsub
add
xlat
xchg
gs
aad
dec
jae
fsubrl
xchg
add
cmc
jl
loop
push
test
inc
sub
shl
dec
je
add
aaa
imull
inc
test
sar
outsb
add
pop
test
je
insl
add
jb,pt
cmpsb
add
sarb
push
fmulp
cmpb
filds
inc
sbb
and
test
push
xchg
cmpsb
ds
lcall
movsb
mov
lods
add
loope
xchg
pop
rorb
add
stos
clc
out
push
add
mov
data16
outsb
pop
add
inc
dec
jo
jbe
sub
xchg
filds
and
lock
pop
imul
and
popf
sbb
test
das
std
and
les
jne
div
test
mov
add
and
dec
sti
test
pushf
aad
sbb
pop
adc
inc
inc
pop
mov
in
jbe
pop
call
cmpsb
add
sub
das
movsl
int
inc
adc
xchg
and
pusha
dec
ret
and
mov
stos
pusha
add
xlat
xor
fucomp
mov
in
xchg
jmp
add
neg
push
sahf
add
mov
fneni(8087
loopne
aas
faddl
push
call
xor
shll
add
icebp
and
add
mov
pop
subl
add
mov
add
jb
loopne
mov
add
lret
jns
std
add
adc
pusha
jnp
push
mov
mov
in
sub
fcomps
testl
xorl
push
subb
hlt
sbb
cmp
dec
inc
es
fsub
mov
cmp
push
fsubl
xchg
iret
or
mov
insb
and
mov
adc
sbb
add
push
cmp
push
add
daa
xorl
xchg
add
shll
hlt
mov
add
enter
nop
enter
add
mov
mov
jno
mov
cmp
jbe
xorb
sbb
sbb
out
pusha
jae
jo
jb
add
push
je
js
icebp
and
es
ja
out
add
cmp
pop
jnp
cmp
xchg
mov
or
or
lret
fldl
push
ja
pop
inc
dec
mov
jne
jecxz
nop
xor
add
rcl
mov
mov
pop
jnp
je
mov
push
pop
cmp
pop
aam
and
xor
inc
push
xchg
cmpb
arpl
les
cmp
jno
xor
mov
jo
sahf
pause
imull
jno
movsl
mov
ja
add
inc
sub
inc
mov
add
cld
cmpb
add
cltd
add
js
sub
cli
cmp
xor
mov
push
fcom
mov
ja
lock
aam
sti
add
or
sbb
ljmp
mov
je
push
cmpsb
jmp
lods
insb
cmp
pop
das
mov
sub
inc
mov
lock
adc
inc
xchg
dec
lock
and
mov
sbb
jmp
decl
inc
add
mov
fistl
add
arpl
test
scas
sub
or
in
aam
cmpsl
and
leave
test
ret
pushf
cmp
add
data16
and
xor
push
mov
loope
lods
cli
mov
call
dec
jge
sbb
add
stc
call
sub
addb
outsb
xor
jmp
sbb
mov
and
not
jbe
xchg
push
test
jmp
repnz
xchg
add
sub
dec
in
cltd
pop
and
dec
shr
repnz
cwtl
xor
sub
fidivrs
dec
movsl
jne
rclb
data16
sbb
jo
iret
pop
shl
outsb
or
testb
add
mov
push
push
jp
rcrb
shrl
inc
enter
and
mov
mov
jbe
lret
or
push
jg
add
cli
sub
or
xor
int3
adc
ltr
in
outsb
iret
xchg
dec
and
nop
pushf
adc
and
xor
add
dec
je
pop
pop
test
mov
aaa
nop
adc
subb
rclb
or
jae
and
repz
loop
xchg
rcrb
test
repnz
adc
add
in
movsb
cmc
subb
sbb
fisttps
cmp
lods
aam
or
out
sbb
mov
mov
and
cmp
rcrb
icebp
pop
xchg
jns
sbb
nop
jb
fidivrl
push
data16
shlb
push
xor
pop
into
or
sbb
sbb
or
orl
rolb
add
mov
push
test
add
xor
add
ret
jmp
jnp
mov
popa
in
sbb
add
inc
out
xchg
adc
leave
mov
test
mov
dec
xchg
inc
ret
and
cli
or
dec
adc
mov
xor
mov
inc
aam
mov
pop
pusha
add
mov
push
iret
addb
pop
jmp
add
movsl
mov
pop
sbb
add
in
add
add
sbb
leave
shrb
push
add
inc
pop
jge
mov
stc
in
sti
cld
adc
iret
pop
mov
dec
leave
lds
movsb
mov
add
scas
icebp
or
inc
sub
imul
mov
ret
mov
and
xor
pop
push
or
cmp
mov
addr16
inc
hlt
push
sarb
insb
cld
fadds
and
sahf
addr16
insl
out
pusha
jl
jecxz
xchg
sti
jbe
repz
fstl
or
bound
or
aad
xchg
inc
adc
push
push
or
push
dec
out
xor
add
jnp
cmp
loop
or
fisubl
add
pop
adc
outsl
sub
or
mov
jg
add
scas
mov
dec
or
inc
sub
movsb
add
and
pop
fs
imul
or
jg
adc
mov
cld
push
pop
cmovb
xor
cmp
pop
out
cld
cmp
lods
push
out
add
mov
in
xlat
pop
imul
mov
mov
xchg
into
fcoms
xchg
add
xchg
add
sahf
lret
push
pop
sub
add
pop
sarl
nop
add
cmp
sti
nop
insb
xchg
ja
jno
cwtl
mov
stos
pop
xchg
fadds
std
aas
mov
pop
push
cmpsl
cli
in
imul
les
push
jg
scas
test
cmc
mov
jb
cmpsl
sbb
std
sbb
xchg
and
mov
stc
cmpb
push
or
cmp
jbe
pusha
stos
jo
and
repz
cld
fnstenv
adc
or
add
inc
aam
sub
add
add
jecxz
sbb
and
push
and
xor
pusha
inc
addb
xchg
push
push
jl
xchg
cmp
mov
dec
xchg
mov
xchg
mov
xchg
push
test
ss
mov
inc
je
push
dec
daa
movsb
sub
fsubrl
lcall
add
imul
inc
pop
addl
cmp
and
xor
cmovl
nop
mov
loope
jmp
mov
mov
jmp
lret
sub
in
add
loope
cmpsl
dec
loopne
jge
repnz
add
mov
dec
sub
push
sti
add
mov
ds
or
into
rcl
lea
add
add
addl
dec
mov
test
outsb
dec
pop
add
addr16
xor
jp
out
pop
add
ja
jle
movsb
push
sbb
push
lahf
addl
aam
dec
mov
jne
enter
out
sbb
stc
pop
mov
out
mull
dec
inc
jns
cmp
shrb
push
mov
push
xchg
fists
stos
out
stos
fsub
sub
movd
test
or
cmp
jp
push
pop
xchg
jg
repz
data16
ja
cmp
cli
add
push
add
xlat
cmp
cmp
and
jnp
out
xorl
sbb
mov
xchg
inc
dec
aad
sar
ljmp
jg
test
add
mov
sub
daa
cmpsl
cmc
sbb
add
dec
bswap
loopne
push
sub
jle
inc
test
les
add
xchg
inc
rcrl
and
cmp
leave
xchg
enter
jb
data16
push
jmp
sbb
dec
add
or
sub
mov
push
jge
loopne
mov
add
das
adc
sub
pop
push
in
lahf
daa
and
scas
cmp
test
sbb
mov
sbb
push
mov
sbb
js
xlat
add
mov
jns
pop
js
add
jnp
pop
mov
ret
sbb
icebp
or
mov
ljmp
ror
rorb
xchg
mov
push
lods
cltd
or
ljmp
sbb
push
icebp
mov
mov
aam
cmp
add
rorl
jo
ret
mov
loope
mov
int3
repnz
inc
std
icebp
add
xchg
sbb
loopne
mov
jl
xor
or
lock
xor
add
cmp
push
sub
add
inc
push
cmp
fdivr
bound
loope
xlat
sub
sub
stos
add
pusha
and
push
xchg
je
ljmp
cmp
adc
add
xchg
cmc
jecxz
ss
add
pushf
and
lods
sbb
int3
aad
repz
adc
clc
push
add
pop
into
loop
jne
and
mov
cmp
aam
jbe
js
ja
nop
and
or
inc
push
mov
lock
clc
bound
lock
aam
subb
icebp
push
mov
sbbb
sbbl
pop
lret
nop
xor
or
push
mov
movsb
and
cmp
adcb
pop
pop
jbe
pop
add
lea
mov
fdiv
ds
rclb
mov
inc
jge
cld
test
sub
add
mov
mov
cmp
add
sbb
flds
xchg
jg
xchg
fwait
add
jmp
cmp
aas
cmp
rcr
mov
repnz
jno
pop
mov
movsl
cmpl
stos
add
xor
ucomiss
inc
or
repz
xor
js
lock
mov
add
adc
cmc
add
sbb
push
jge
push
add
mov
pop
inc
xchg
insb
add
movsl
adc
add
clc
add
pusha
xor
rcrb
mov
xchg
add
cmp
jmp
test
insb
test
fsubrp
inc
xchg
adc
mov
out
inc
adcl
or
out
nop
insl
test
mov
icebp
and
and
mulb
or
or
mov
or
leave
hlt
std
adc
call
sbb
loopne
aam
add
inc
or
pop
iret
and
or
add
rcll
dec
loope
int
and
inc
mov
add
cmpsl
mov
add
std
sbb
test
mov
dec
add
dec
inc
add
jo
lods
out
add
cld
push
add
lods
jecxz
ret
cmpb
int
movsl
adc
push
add
repnz
rorl
mov
adc
mov
add
push
sub
jns
sti
enter
int3
out
mov
out
les
add
mov
addr16
fldl
jp
xor
cld
pop
mov
lret
adc
out
in
inc
pop
inc
test
arpl
xchg
scas
xchg
stos
pop
push
cld
lret
add
pusha
sar
cmp
add
sub
movsb
cwtl
cmovne
je
mov
add
notb
or
pop
jp
or
lcall
nop
outsl
dec
sbb
push
out
xor
adc
ret
cwtl
cmp
sahf
lock
into
cmp
lea
add
sbb
mull
cmpl
es
test
inc
jne
or
fld1
js
add
ret
xorb
xor
mov
cmp
cmpsb
fnstsw
shrb
fidivs
int
mov
lcall
and
je
mov
add
js
inc
jo
ss
dec
test
jmp
repnz
mov
lcall
inc
jo
pop
jle
int3
jg
pop
lods
imul
or
dec
popl
in
inc
sub
hlt
inc
add
xchg
gs
loopne
loopne
shlb
movsb
aad
insb
jno
movsb
addb
fcompl
imul
sbb
mov
dec
add
jmp
adcb
pop
mov
stc
insb
add
aaa
or
add
repnz
push
ljmp
mov
and
fbstp
adc
int3
lock
out
xor
hlt
jl
add
je
out
popf
mov
ja
sahf
movsb
sbb
movsl
sub
xor
ja
mov
xlat
fimuls
add
xchg
push
jb
sub
mov
mov
jl
cmpsl
add
or
add
push
xchg
or
fucomip
aad
add
into
xchg
subb
or
cmp
xchg
stc
test
jg
add
lods
loopne
sbb
les
cmp
xlat
mov
inc
nop
out
add
mov
pop
into
shlb
js
inc
test
sar
jecxz
or
add
push
pushf
filds
xchg
cs
pop
adc
jmp
hlt
repnz
mov
repz
shlb
xor
lock
dec
sbb
mov
stos
push
test
push
cmp
push
inc
mov
push
and
leave
dec
sarb
test
outsb
test
pop
or
mov
stos
mov
lock
adc
in
jge
add
jle
add
and
add
roll
pushf
aad
xchg
pop
push
ret
shrl
mov
sbb
push
dec
and
add
pushl
pop
in
or
jnp
cwtl
and
in
popa
add
cld
dec
inc
pop
andb
sub
fiadds
cmp
sbb
add
inc
pop
add
sbbl
and
mov
js
add
jnp
lret
leave
popa
or
pusha
outsb
je
pop
jne
pop
clc
pop
jo
add
loopne
dec
push
cwtl
negb
jne
mov
pop
scas
mov
jmp
pop
fwait
cmp
xchg
scas
test
mov
jl
lods
das
inc
xor
jb
arpl
and
push
mov
add
js
mov
add
mov
lret
movsl
push
push
enter
mov
push
push
add
cmp
push
out
add
jae
cmp
nop
add
dec
scas
mov
das
xor
dec
jnp
stos
pop
incl
outsl
cld
adc
xchg
xor
gs
shlb
in
and
aad
out
sub
stos
dec
pop
hlt
inc
loop
dec
add
mull
add
imul
dec
bound
inc
cmp
add
mov
inc
cmp
and
xlat
or
adc
or
loopne
inc
adcl
mov
dec
xor
pop
or
add
repnz
mov
je
add
sbbl
sar
popa
cmc
jge
add
test
es
in
dec
imull
dec
pop
add
lds
cmp
out
lods
or
or
sub
je
pop
mov
jno
add
push
push
adc
jle
mov
and
int3
and
or
push
dec
jbe
sbb
dec
ds
lods
sahf
jnp
jl
push
rcrl
jg
icebp
out
or
aaa
push
sti
xlat
add
es
dec
lods
insl
mov
xchg
pop
js
pop
pop
popa
ljmp
test
cmp
mov
add
or
mov
xlat
pop
and
pop
lret
out
movsl
clc
xchg
jl
jmp
aas
cmp
push
lcall
outsl
fstl
stc
sbb
mov
add
push
pushf
repz
cmp
mov
mov
add
int3
adc
shlb
pop
les
mov
jae
push
or
jo
mov
or
cmp
jo
sub
les
ret
jmp
mov
pop
fcomps
cltd
cmp
xchg
add
add
pop
dec
test
inc
adc
mov
enter
leave
outsl
inc
sahf
push
mov
cmpb
mov
mov
lods
sub
push
inc
dec
sbb
push
jmp
ja
ja
add
lock
sub
xor
cmpb
sub
nop
xor
push
dec
push
push
scas
add
stos
sub
push
push
lods
push
adc
inc
pop
cmpsl
inc
pop
add
sbbb
pop
lock
jg
or
inc
shll
add
cmp
jae
add
and
call
xchg
ja
mov
lea
add
mull
or
cld
test
lds
mov
xchg
inc
daa
fsubrl
mov
enter
andb
mov
inc
aad
mov
add
jne
pop
push
mov
mov
andl
cmp
enter
push
pop
mov
les
add
mov
loop
or
or
cld
jo
jbe
sub
pop
rolb
aam
pop
mov
pop
gs
mov
shll
xor
add
insl
pop
mov
xorb
add
jae
roll
or
outsl
icebp
mov
popf
add
or
sets
cmpsb
push
xchg
movsl
pop
out
and
mov
rorl
xor
sbb
pop
dec
fwait
xor
fcomp
add
adc
inc
rcrl
or
jl
adc
lret
movsl
out
shrb
aas
movsb
aaa
sbbb
xor
add
adc
jge
ret
push
adc
xor
add
mov
movsl
sub
pop
add
add
and
outsb
jecxz
dec
pop
inc
jmp
adc
mov
add
lret
cmp
mov
ljmp
xor
je
xlat
js
fwait
std
faddl
sahf
mov
hlt
cmp
mov
je
fwait
scas
data16
pusha
inc
push
add
push
rclb
mov
test
incl
popf
push
add
loopne
clc
mov
enter
into
out
jp
and
pop
loopne
adc
add
int
pop
and
xchg
add
xchg
mov
add
fwait
pop
jne
xchg
adc
subb
jg
daa
push
movsb
or
test
fistps
insl
ja
mov
loop
mov
pop
and
lahf
sbb
add
jb
mov
or
xor
in
pusha
jmp
daa
push
xor
push
arpl
sbbl
call
push
mov
push
lods
sub
adc
cmpsl
shrb
jo
test
dec
jl
xor
xor
add
pop
push
jmp
add
movsb
push
cmp
or
dec
ret
add
mov
push
xchg
push
out
inc
stc
pusha
push
xorb
loop
pop
jbe
xchg
add
mov
sub
add
pop
shll
jecxz
cwtl
mov
mov
repnz
mov
out
cmp
shll
add
lahf
rcrb
fistpll
or
out
lret
cmp
cmp
sbb
or
call
mov
pop
lods
icebp
mov
gs
cmc
lea
roll
ds
cmpsl
testb
adc
or
dec
arpl
xor
mov
roll
add
push
dec
das
data16
add
bound
cmp
cmp
clc
inc
pushf
arpl
add
mov
lret
leave
in
mov
sbb
jo
pop
lcall
les
add
sti
fwait
cmp
add
xchg
mov
xchg
jl
jge
dec
add
jo
rolb
out
pop
cld
adcb
jmp
adc
notl
sete
mov
push
testb
movsl
mov
push
cltd
cmpl
xor
jnp
cwtl
add
fdivrl
dec
pop
or
ds
das
pop
ret
daa
adc
out
inc
xor
push
roll
leave
inc
arpl
fmuls
lret
stc
add
xor
aam
aad
in
sbb
add
icebp
push
test
push
ret
das
add
jnp
cmp
mov
pusha
cmpl
adc
in
lret
dec
add
dec
mov
cmpsl
dec
push
mov
insl
mov
add
cmp
test
fdivrl
push
bound
jl
pop
sti
loop
ds
cmp
push
icebp
add
adc
sbbl
ss
sub
pop
out
lret
int3
lods
in
mov
sarb
lret
add
orb
add
xor
iret
mov
lock
imul
fstpl
mov
ficoml
lcall
pop
or
enter
sub
jb
int3
add
nop
std
add
insb
cmpsl
sahf
and
addl
inc
inc
out
jg
add
pop
adc
cli
xor
out
xchg
push
fistpll
scas
fldl
incb
and
je
add
rol
xchg
lret
loope
lret
stos
push
pushf
sbb
jle
fiadds
das
dec
xor
xor
adc
imul
leave
fiadds
mov
inc
je
add
push
aam
inc
sbb
mov
hlt
push
pop
pop
test
rorb
sub
cmp
sbb
clc
mov
jp
mov
scas
sbbb
add
mov
inc
mov
sub
popa
in
fidivl
xor
bound
daa
popf
mov
pop
lods
clc
pushf
int
sub
orl
mov
shrb
dec
mov
add
cmpsl
out
shlb
jnp
add
inc
lcall
add
xchg
and
lods
sbb
gs
aam
sub
out
es
mov
xchg
lock
push
mov
inc
add
addr16
pop
out
lcall
xchg
out
cld
int3
mov
ret
repz
loope
rorb
jb
xlat
rorl
enter
in
ja
add
pushf
sub
stc
add
sbbl
ror
adc
lret
mov
movsb
loop
push
mov
inc
sub
fildl
pop
je
xor
rorb
dec
adc
xchg
pusha
cwtl
xor
mov
imul
xor
mov
cmp
add
call
push
fnstenv
sub
xchg
mov
add
inc
outsl
dec
sbb
xor
je
add
imull
dec
sub
clc
add
adc
push
es
xor
cmp
mov
cmp
js
xor
pop
add
scas
cmpsl
lds
add
movsl
mov
inc
icebp
addr16
mov
mov
fsubr
lods
mov
dec
sbbb
stos
inc
in
cmp
les
jle
add
xchg
fwait
test
loopne
inc
mov
sar
and
jmp
das
dec
sub
les
cmp
in
sbb
test
pop
add
insb
ror
pop
leave
add
cmpl
or
lret
or
push
jecxz
movsl
add
mov
test
adc
bound
mov
loope
nop
leave
clc
movsb
or
jo
cmc
mov
xor
xor
inc
xor
lahf
push
test
add
and
in
dec
or
jp
add
mov
xor
add
mov
xor
rol
cmp
fwait
jae
aam
adc
pushf
add
lods
out
xchg
shrl
mov
daa
scas
pop
jg
imul
call
sub
insb
add
xor
add
fs
test
add
gs
mov
pop
aas
scas
addr16
fsub
pusha
sub
sub
dec
or
jge
pop
test
stos
inc
mov
mov
jbe
ret
adc
dec
insb
cmp
enter
mov
xchg
mul
jmp
lea
cwtl
jae
dec
mov
loopne
dec
push
fwait
push
jle
add
sub
sub
pand
mov
filds
add
or
push
cltd
testb
pop
inc
add
arpl
out
adcb
mov
cld
add
int
push
sbb
out
ds
push
cpuid
js
add
fcmovu
xor
ret
jbe
aam
loope
add
stc
cld
push
add
jns
inc
xor
arpl
movb
fistps
rolb
stos
call
push
call
add
outsb
jnp
mov
or
xchg
mov
icebp
notb
pusha
xor
adc
or
adc
enter
push
push
add
test
mov
mov
out
pop
push
mov
aaa
ret
mov
test
mov
sarb
in
aas
jmp
cmc
les
add
or
add
jne,pt
add
and
push
ljmp
ss
leave
sub
jle
cmp
dec
and
xchg
adc
sahf
sub
sar
inc
js,pn
sar
adc
and
addr16
rcr
les
mov
pop
mov
xchg
or
js
cmc
adc
bound
adc
push
cwtl
int3
cld
push
call
movsl
or
outsl
fists
popf
mov
lahf
xchg
mov
jge
movsb
fdivs
mov
popl
adc
test
cli
loopne
fwait
inc
add
loope
push
inc
pop
and
pop
fwait
in
roll
arpl
mov
jmp
push
and
xchg
add
in
fistl
popf
xor
mov
divb
lds
sbb
cmpsb
leave
and
mov
jne
lahf
loopne
sbb
mov
inc
push
cmp
dec
pop
sbbb
or
pop
adc
sbb
dec
inc
call
mov
sbb
jp
hlt
mov
outsb
cwtl
mov
add
pop
stc
call
jns
or
int
push
mov
jno
sub
shl
mov
dec
xor
sbb
or
jns
add
ret
adc
add
xor
into
add
xchg
rclb
les
in
fsts
je
cli
movsb
push
in
inc
add
push
adc
xor
sbb
xchg
enter
pop
pusha
sti
test
jne
or
out
int3
add
cmp
cmc
leave
mov
mov
or
add
pop
fsub
add
sbb
add
imul
jecxz
roll
cmpsl
or
popa
or
cld
mov
add
aas
out
inc
popf
sbb
mov
add
xchg
push
sarb
inc
cmp
add
and
rcrl
pop
add
in
test
nop
jle
mov
mov
xchg
sbb
cmp
popa
jle
pop
dec
adc
xchg
sub
jecxz
repz
or
mov
add
lock
jo
sahf
stc
cmp
add
sbb
jmp
loopne
nop
outsl
cs
xchg
lea
popf
fisttpl
enter
adcb
push
mov
jae
add
dec
adc
or
aas
pusha
movsl
clc
gs
push
jl
add
cwtl
dec
cli
pushf
jge
adc
or
xor
sub
pop
pushf
movsb
add
jle
xchg
sbb
mov
push
xchg
hlt
sti
add
repz
dec
mov
sbb
pop
xor
sbb
ljmp
out
xchg
adc
push
iret
cs
pop
jae
cld
cmpsl
push
adc
das
out
jb
insl
sbb
push
sbb
std
jne
cld
push
insb
outsb
fdivrs
pop
add
jl
and
int3
xchg
mov
imul
mov
add
mov
add
push
push
int
ret
and
lret
mov
cmp
in
add
repz
and
mov
std
xchg
cmpps
aas
add
add
mov
inc
insb
je
add
imul
stos
gs
sbb
loop
push
ret
cli
mov
jns
adc
loopne
inc
pop
pop
inc
lock
rorl
cmpsl
push
cmpb
push
data16
decl
in
pop
sub
cmp
fadds
test
or
and
mov
sbb
in
js
add
inc
mov
push
jo
or
cmpsl
aam
insb
cwtl
les
push
test
push
in
adc
es
add
push
js
push
xchg
icebp
sbb
and
add
clc
test
outsb
adc
sbb
movq
hlt
je
cmpsb
lock
imul
mov
pop
loop
stc
mov
sbb
xchg
mov
out
pop
add
and
out
and
mov
fsubl
pop
push
fadds
lret
out
outsl
dec
mov
sub
es
pop
popa
ljmp
lods
and
pusha
insb
mov
sub
pop
mov
fistpl
xchg
in
jg
push
not
cmpsb
and
cmp
inc
scas
scas
xor
mov
or
jne
jecxz
add
push
aam
xor
ret
mov
mov
leave
or
dec
lods
cli
add
clc
push
mov
add
fsubs
adc
ljmp
inc
or
adc
xorb
jbe
loop
mov
sarl
jne
push
data16
lods
add
insb
aam
mov
sbb
movsl
xchg
push
mov
sti
dec
imul
and
mov
insb
xchg
inc
loop
adc
les
xchg
cmp
mov
push
bound
or
scas
fadds
xor
mov
sbb
stc
add
dec
push
sub
sub
cmp
jl
add
in
cs
test
in
aam
xor
mov
sub
cmp
fimull
jbe
imul
mov
jge
sbb
test
or
lret
xor
ret
das
or
adcb
pop
in
pusha
xlat
repz
mov
pop
scas
aas
cltd
add
mov
jne
loope
out
xchg
in
imul
xchg
out
push
ja
fidivl
stos
xor
add
fnstenv
mov
add
jns
sub
adc
imul
adc
leave
jne
and
add
pop
fdivrs
test
inc
js
push
or
xchg
add
shlb
call
xchg
js
xor
jno
mov
add
out
push
xor
inc
fldenv
cmp
lcall
rcr
add
adc
push
sub
xchg
xor
xchg
pop
dec
arpl
add
aaa
fiaddl
xor
loope
sbb
daa
pop
xor
mull
mov
scas
mov
enter
das
jmp
mov
or
stos
dec
or
lcall
fs
add
cmp
popa
add
mov
je
add
movb
or
xchg
fldenv
aam
mov
fisubrl
add
jae
cmc
fstpl
jl
cs
rol
cwtl
stos
inc
add
mov
enter
arpl
outsb
sub
xchg
jnp
loopne
in
out
orb
jae
andl
fcoms
pusha
add
in
rcl
sub
fisubrs
push
mov
add
jo
pop
add
sar
mov
subb
psubusb
xor
pop
push
dec
orb
pop
hlt
cld
lret
aad
addr16
cmp
mov
add
clc
insb
dec
adc
orb
stos
jae
adc
add
sahf
ljmp
mov
je
lock
xchg
sbb
sub
xorl
push
and
rolb
int
leave
in
pop
fidivs
cmp
add
pop
xor
scas
jecxz
mov
push
adc
addr16
int
mov
xor
mov
es
sbb
rorb
hlt
push
lcall
mov
sub
add
push
ret
lahf
dec
dec
dec
shll
jmp
inc
adc
and
jl
movb
lds
ret
rcll
in
ret
add
jb
aam
push
leave
or
cmp
adc
les
mov
push
jno
jnp
cld
movsb
pop
push
nop
add
int3
out
loopne
xor
xor
rsm
sub
sbbb
leave
adcb
into
mov
jae
imul
mov
pop
cmpps
popf
push
loopne
mov
mov
ja
cmp
or
push
sub
fadds
mov
dec
mov
in
add
std
lods
incb
or
xchg
rclb
fucomp
cmpsb
mov
jl
pop
jl
or
pop
add
sarl
mov
or
inc
add
test
movsl
fdivrp
push
cmp
mov
faddl
inc
nopl
mov
lret
in
push
add
shll
movb
mov
xor
je
xor
xchg
fisttps
mov
cmp
or
das
mov
add
int3
sbb
add
mov
adc
inc
xchg
jno
push
not
sub
imul
jns
lcall
cmp
fwait
and
mov
lcall
lods
sahf
nop
andl
fdivrl
add
push
cmp
dec
ret
or
pop
mov
inc
or
inc
int
push
pop
inc
or
pop
mov
movsl
add
dec
mov
js
and
rolb
stos
add
jns,pt
in
outsb
pop
push
jg
inc
pusha
jge
lods
in
ja
sbb
or
and
jg
nop
adc
cmp
xchg
mov
add
lret
arpl
cmp
pop
add
xor
adc
es
out
lcall
xadd
pusha
pop
mov
push
outsl
add
pop
xchg
repz
incl
fldenv
push
push
pop
rcr
clc
in
add
push
push
mov
mov
cltd
or
and
les
lret
cmp
scas
cwtl
sbb
je
icebp
insb
sbb
dec
add
fldt
cmp
add
push
pop
add
sub
sti
add
dec
popf
pop
jl
int3
add
mov
adc
rcr
pushw
xor
sub
cs
leave
jae
pop
int
xchg
jo
add
js
xchg
push
aaa
or
icebp
push
popa
shrb
or
add
mov
popa
test
dec
mov
jge
push
dec
inc
mov
aas
adc
push
mov
xlat
fildl
imul
mov
ljmp
in
sbbl
sarb
fadds
jg
stos
mov
mov
add
imul
sub
adc
hlt
adc
jbe
es
jo
dec
xchg
push
lret
fiadds
and
cmpl
push
ret
add
mov
orl
iret
xchg
popa
adc
lods
shrl
in
fsubl
push
test
push
pop
icebp
cmpsl
sub
mov
test
jmp
pop
add
cs
push
add
pop
add
sub
cltd
and
mov
add
mov
scas
xor
pop
xchg
mov
out
or
add
mov
insl
mov
stc
orb
emms
aas
rorl
je
add
or
mov
push
dec
jle
xchg
mov
lahf
in
push
flds
sub
add
test
sub
fnsave
lods
xor
movb
imul
xor
or
addl
hlt
sbb
push
stc
scas
push
sbb
mov
add
in
std
push
xchg
incb
fisubl
xor
pop
add
dec
sbb
out
int
mov
jp
stc
xchg
in
xor
sbb
pop
fadds
addr16
insb
pop
mov
movsb
jl
stos
sub
lods
xchg
mov
ja
add
adc
movb
add
mov
jb
cli
pop
pop
push
mov
mov
subb
push
xor
je
push
mov
pop
xchg
xchg
into
mov
add
lahf
clc
mov
dec
imul
inc
insb
mulb
and
out
test
scas
dec
fbstp
addl
xchg
in
fisttpl
pushf
mov
adc
mov
mov
mov
or
add
popa
ljmp
mov
add
push
xor
inc
roll
inc
aam
test
push
lock
mov
es
jecxz
sub
xchg
scas
movsb
call
xchg
pop
pop
enter
lods
js
sbb
mov
add
pop
nop
dec
add
fabs
jge
jp
or
adc
sarb
or
mov
adc
loop
enter
push
push
scas
test
add
es
mov
xchg
rcll
add
push
xor
mov
push
mov
or
es
fsubrl
lret
lea
pusha
in
sbb
dec
sub
jle
add
xorb
jmp
test
aam
sbb
mov
lods
sub
mov
and
xor
push
sub
xchg
xchg
pop
fidivrl
push
xor
add
iret
mov
add
in
xchg
ficoml
push
mov
sub
ljmp
stos
sbb
cmp
lahf
subl
push
cli
pushf
and
dec
mov
jb
sar
int3
add
inc
imul
adc
adc
lock
lds
test
or
add
outsb
pop
mov
cmp
mov
out
add
in
cwtl
push
add
int3
iret
adc
out
inc
daa
cwtl
add
sahf
test
js
popf
ret
xor
mov
pop
push
xchg
inc
push
pusha
sub
test
pop
push
push
or
inc
cmpsb
add
sbb
or
mov
out
shrl
add
add
lcall
pop
lahf
sub
push
jb
pop
jno
cmp
push
dec
das
mov
xchg
sarl
jns
jmp
bound
add
inc
cld
adc
pop
adc
movsb
mov
pop
lods
pop
dec
add
mov
cs
mov
test
scas
push
roll
ret
outsl
je
add
push
xchg
jne
add
adc
clc
push
add
adc
cmpb
out
lret
or
push
jg
fs
add
cmp
addr16
xchg
fiaddl
mov
hlt
pushf
aad
sub
push
adc
int3
insl
cmpsl
setb
cmp
subb
pushf
pop
jae
jae
add
mov
push
and
popf
into
cmp
test
sub
inc
mov
add
test
and
mov
lahf
iret
fdivs
jg
mov
lods
cmp
outsl
mov
push
repnz
push
dec
lods
and
lods
mov
xlat
lds
jle
push
mov
scas
and
add
inc
sar
xchg
inc
jmp
iret
pop
mov
or
push
lock
and
inc
test
stos
xor
add
mov
pushf
pusha
mov
xor
addl
cmp
hlt
xchg
mov
fwait
addb
mov
jg
add
cmp
addr16
adc
sbb
pop
inc
imul
jo
jp
add
arpl
dec
dec
into
sbbb
insb
pop
negb
xor
push
push
mov
mov
inc
ljmp
dec
adc
xor
add
push
jecxz
or
mov
mov
push
cli
pop
mov
leave
push
sbb
fcom
jge
mov
push
add
icebp
rolb
inc
test
xor
lock
mov
sbb
enter
mov
out
dec
shlb
mov
push
cmp
pop
cwtl
mov
add
les
xlat
cmc
lds
push
adc
sbb
stc
pop
rorb
repnz
jmp
lds
out
mov
pop
ja
lret
aaa
aas
add
or
adc
and
cwtl
xlat
ds
jmp
add
mov
repz
imull
loope
push
lea
movsb
push
jecxz
cmpl
lds
ret
xor
pushf
stos
and
pop
cmc
sti
fwait
jmp
xor
add
or
sub
test
add
xor
add
call
aam
jne
mov
jge
jno,pn
add
je
cld
push
sbb
mov
jg
insb
sub
push
push
mov
sbb
pop
js
jmp
push
or
call
or
lret
jnp
xor
lods
and
jp
xchg
orb
mov
jo
lds
jns
shll
pusha
xor
add
sahf
xor
scas
lahf
add
bound
js
fcomps
stos
loope
shrl
rol
cld
aas
cmp
pop
add
iret
ret
jno
outsl
test
add
and
jns
jecxz
mov
aas
xchg
push
lock
rolb
add
fisubs
pushf
inc
adc
cmp
mov
test
sbb
rorl
dec
ljmp
adc
aam
inc
call
push
sub
pop
test
test
xchg
and
sbb
jl
push
rclb
sub
mov
stc
pop
and
mov
pop
in
pushf
mov
add
cld
xor
and
add
cmp
mov
loop
mov
xchg
aaa
jnp
rorl
adcl
daa
cmp
addl
mov
mov
pop
loope
in
dec
add
sbb
add
cmpsl
testl
mov
psubq
pushf
shl
pop
push
or
mov
out
xchg
shl
jb
adc
add
xchg
push
ljmp
incl
mov
mov
push
pop
mov
inc
mov
pusha
adc
dec
es
call
xchg
repnz
roll
and
sbb
pop
and
adc
add
lock
rorl
pop
adc
pop
sbb
push
imul
xor
jo
fisubrl
and
icebp
mov
jl
flds
push
mov
sbbb
js
push
adcb
movb
and
add
push
xchg
movsb
dec
pop
add
or
pop
clc
fnstenv
jmp
push
sbb
jno
lock
push
pop
lret
rorb
and
shrb
push
bound
add
dec
pop
push
jecxz
adc
inc
scas
cltd
into
out
sbb
push
add
jle
pop
pop
sub
cmp
icebp
mov
inc
add
fsts
adc
sub
mov
aad
dec
rcl
cmc
and
mov
cld
fcmovbe
add
push
push
pop
add
imul
sarb
jecxz
loop
mov
rorl
sti
xchg
movlps
negl
clc
push
lret
add
les
jge
inc
pop
stos
add
xor
add
rol
and
pop
push
dec
or
rcr
sub
dec
imul
in
leave
lret
cmc
js
add
mov
jp
add
cmp
nop
rorb
cmp
mov
in
stos
sub
pusha
rorl
into
jg
sbb
shlb
mov
icebp
push
sub
jmp
pushl
fildll
data16
adc
into
sbb
fsts
jp
sarl
gs
aad
sub
dec
sub
add
fcomps
add
pop
adc
rolb
adc
add
sub
movsl
into
sbb
ret
dec
mov
jle
pop
pushf
xchg
push
xor
movsl
sub
sbb
dec
adc
in
aad
adc
cli
mov
push
pop
inc
sti
lret
nop
and
iret
xor
dec
imul
pop
adc
ja
int
sub
push
add
xor
mov
xor
in
add
mov
cltd
or
mul
in
out
hlt
lods
dec
cltd
aam
insl
add
mov
aas
outsb
sub
push
adc
rorl
inc
mov
or
or
add
mov
add
nop
push
add
test
movsb
inc
add
lahf
or
aaa
add
rolb
xor
cmp
lods
add
test
add
jge
dec
cmc
dec
xor
cwtl
add
dec
and
add
adc
movsl
add
xorb
inc
dec
push
fldcw
pushf
test
xor
faddp
or
mov
jmp
add
mov
add
test
jmp
xor
inc
inc
fiadds
jmp
add
scas
add
inc
scas
inc
xchg
xor
or
pusha
into
icebp
and
call
aad
scas
mov
jo
mov
ret
dec
rolb
or
xor
mov
mov
and
aam
sbb
mov
loope
fisubrs
loope
add
fldenv
divb
cmpsl
dec
cmp
push
out
in
sub
xor
or
adc
test
mov
jae
mov
push
pop
sbb
lds
jno
and
mov
lret
cld
cs
and
xchg
cmp
jp
cmp
cmpb
push
pop
pop
xor
fadds
pop
and
pusha
jmp
xor
test
test
movsl
or
fildll
popa
cmpsl
mov
add
add
push
jge
xchg
mov
or
sbb
xchg
add
add
data16
jo
fdivs
test
pop
sub
mov
jle
or
cmp
ror
mov
and
sbb
fcmovnbe
fsubrs
loopne
add
std
movsb
adc
push
cmpsl
jge
push
add
add
dec
fimull
data16
mov
add
sub
mov
adcb
inc
iret
shll
add
rolb
js
push
inc
add
cs
aas
pop
add
ret
mov
cwtl
inc
fdivrl
out
xchg
mov
and
jle
sbb
mov
in
jp
and
mov
inc
jecxz
inc
cmpb
hlt
adc
nopl
lods
rolb
into
fnstcw
stos
int3
sub
test
ret
js
loope
divb
pop
into
lods
xlat
add
daa
outsl
mov
shll
sbb
aaa
mov
das
dec
adc
add
dec
and
and
or
mov
xor
in
push
add
es
jno
dec
test
xlat
fistpll
adc
in
mov
gs
cmp
mov
cmp
sbb
xchg
fisubs
cmp
mov
sub
data16
add
shrb
lock
call
jp
add
inc
mov
jle
dec
inc
pop
jbe
xorb
mov
into
adc
and
and
mov
iret
aas
sahf
or
add
in
add
and
inc
faddl
movsb
jge
cmpsl
sbb
or
mov
jae
cmp
lret
mov
adc
mov
jno
and
or
enter
inc
sarl
sbb
jl
add
inc
push
inc
adc
repz
std
sub
ret
or
int3
adc
dec
mov
add
dec
inc
pushw
test
or
push
rcrb
inc
and
stos
mov
sbb
mov
rorb
xchg
test
sub
fists
fadds
sbb
shll
push
mov
jo
add
dec
jno
add
cmp
push
and
mov
sbbl
push
push
out
addr16
mov
add
mov
out
sbb
cmc
pop
jo
add
pop
shrb
cmp
push
xlat
push
shlb
push
in
and
pop
sbb
sti
jae
in
repnz
sahf
inc
clc
aaa
insb
dec
pop
pop
sub
mov
pop
lret
cmpsb
xchg
mov
mov
or
mov
aad
sarb
lock
ret
inc
push
inc
fisubl
xor
popf
test
leave
mov
stos
mov
andl
fcmovb
popa
mov
gs
daa
popa
dec
into
cmpsl
int3
std
and
xchg
shrl
sub
aaa
int3
xchg
rolb
rorl
add
push
mov
into
pop
push
add
push
jno
mov
add
loopne
or
data16
in
mov
fidivrs
add
lods
int3
aas
sbb
xchg
mov
jnp
js
add
in
and
mov
jae
scas
inc
cmp
jb
add
rcrb
inc
ret
sbb
xchg
xor
lret
add
icebp
sub
dec
test
xor
ss
adc
lret
cld
sahf
popl
leave
cmp
sahf
test
sbb
test
xchg
push
sub
rcrb
cmpsl
movl
mov
mov
pusha
lret
mov
push
push
int
lods
jmp
push
mov
pushf
outsl
mov
add
mov
scas
mov
cld
add
mov
and
lods
ljmp
mov
xorl
mov
mov
xlat
push
sub
push
fwait
in
mov
cmc
add
shrb
jmp
test
loopne
add
cwtl
repz
adc
sub
inc
pop
fidivrl
adc
or
jae
jle
add
push
in
int3
les
add
imul
inc
and
mov
imul
add
fdivrs
cmp
pop
cwtl
push
dec
push
jg
sti
adc
loopne
jge
pop
cs
inc
les
mov
iret
jle
icebp
sbb
add
pop
mov
pop
mov
mov
in
sbb
xchg
rcrb
jl
fildll
rcl
xchg
mov
mov
movsl
mov
mov
pop
aam
xlat
add
cmpb
inc
push
adc
add
add
add
insl
iret
dec
mov
xor
cmp
mov
addb
leave
or
movsb
in
push
in
pusha
add
dec
int
add
ds
mov
nop
ret
or
add
int3
mov
pop
xchg
sub
sub
nop
in
std
or
hlt
scas
subb
je
clc
or
sub
nop
push
mov
mov
leave
adc
jge
push
sbb
adc
aaa
dec
lahf
add
or
push
ja
add
fwait
stos
clc
or
mov
fildl
xchg
push
add
rcrb
test
lods
pop
in
aaa
cmp
subl
sahf
push
inc
rolb
imul
iret
stos
js
pop
add
aaa
stos
sub
or
pusha
fadds
and
ljmp
dec
jns
push
add
mov
and
popf
lds
add
pusha
adc
movsb
sarl
sub
cmpsl
mov
pop
xchg
push
into
flds
stos
xor
ljmp
js
and
clc
nop
lods
mov
xchg
dec
add
cmpsl
xlat
loopne
add
sbb
ja
inc
inc
pop
into
jb
add
inc
dec
cwtl
jmp
call
add
push
jp
jle
sub
inc
mov
ret
add
stc
ror
loop
add
or
fnstcw
mov
shlb
add
test
xchg
and
in
cld
sub
aaa
adc
add
jae
ret
imul
cld
xchg
push
or
adc
nop
or
pop
mov
xor
add
fistpll
and
pop
mov
mov
sbb
and
mov
cmpsb
mov
fcmove
and
loopne
addb
cmp
mov
aam
adc
insb
les
sbb
jl
cmp
mov
shrl
clc
data16
mov
mov
in
repz
inc
fstpt
aam
aad
mov
mov
sbb
pop
cs
and
rorl
stos
adc
mov
xor
popa
jnp
jo
int3
lock
sub
or
xchg
jo
inc
add
imul
sub
sbb
inc
mov
add
lds
lea
in
or
shrb
mov
loopne
add
add
xor
repz
add
add
push
sti
or
add
add
jg
mov
movsl
in
inc
mulb
jge
xchg
fldl
dec
mov
insb
adc
rcr
inc
mov
adc
sbb
pop
or
mov
mov
adc
out
aam
or
mov
mov
shlb
and
cmp
sub
arpl
mov
loop
xor
add
xchg
ret
pop
add
inc
enter
push
andl
cwtl
push
mov
lahf
pop
adc
int3
scas
add
imulb
loopne
and
cmc
test
mov
repz
ljmp
ret
xor
lods
push
and
and
out
pusha
rclb
sbb
cwtl
dec
jbe
add
fs
xlat
mov
fstl
push
sub
sbb
cmpsb
add
dec
cmp
pop
fidivrl
or
and
dec
mov
lea
mov
loopne
out
cmpb
add
bound
enter
str
inc
scas
mov
push
sbb
add
clc
sbb
xor
pop
cmc
cmpb
call
mov
dec
cmp
shrb
pusha
cmp
data16
dec
cltd
mov
daa
insl
subb
arpl
cli
ret
dec
int
rorb
arpl
adc
mov
xchg
in
fcompl
lods
rolb
icebp
sub
add
xor
push
adc
mov
dec
pusha
jo
mov
add
insb
xchg
ret
les
mov
add
sub
pop
sub
or
je
xchg
add
out
push
or
orps
mov
loope
daa
sbb
mov
shll
lret
loope
call
cmp
pop
push
ljmp
sub
aaa
mov
jb
push
fbld
xchg
in
cmp
xchg
cmp
ljmp
mov
sub
push
and
rcr
adc
sub
ret
adc
hlt
clc
and
xlat
or
arpl
add
inc
rorb
mov
adc
xchg
sbb
leave
fs
sub
div
or
mov
add
ds
mov
mov
mov
pop
jg
insb
inc
xor
gs
mov
mov
mov
je
add
xchg
iret
pushf
or
mov
pop
push
pusha
adc
add
clc
mov
push
fld
inc
add
xor
sar
popa
jp
cmp
inc
sti
push
xchg
imull
fs
and
dec
lods
fcompl
jp
mov
or
aaa
test
dec
sub
and
jl
fsub
adc
in
cltd
imul
xor
adc
pop
cmc
lods
xor
adc
cmp
pop
xorl
mov
iret
cmp
lock
and
dec
cmpsb
mov
mov
test
int3
sub
lods
in
nop
mov
or
nop
les
xor
adc
jecxz
dec
in
inc
subb
cmp
inc
add
add
jge
lcall
mov
jle
add
gs
and
add
mov
je
ja
add
mov
push
add
inc
imulb
pusha
dec
mov
adc
repnz
jns
or
sahf
repz
inc
xor
or
cmpsl
aad
int3
int3
adc
lret
lods
aam
pop
rclb
dec
cmpsl
dec
add
and
int
dec
cmp
arpl
cwtl
xchg
xor
add
and
cmpsl
fs
cmp
lock
shll
mov
stos
add
es
sub
out
add
bound
pop
repnz
dec
sub
orl
jae
push
and
lret
incb
mov
xor
pop
shlb
into
sub
popa
dec
and
add
xchg
and
mov
add
sbb
orl
std
add
sbb
cmpsb
iret
filds
dec
push
mov
loopne
adc
dec
das
stos
xor
mov
pushf
pop
inc
in
ret
pop
or
push
xchg
fs
cld
hlt
xchg
out
iret
imul
pop
aas
pusha
or
sbb
adc
dec
enter
xchg
xor
pop
aam
dec
jge
add
sbb
lods
nop
adc
pushf
mov
pop
jns
adc
cmp
rcrb
pushf
stc
aad
pop
jp
scas
imul
pop
inc
xchg
ret
sub
loop
xor
inc
pop
or
jns
jbe
sub
sub
and
adc
sbb
ljmp
lret
insl
mov
xchg
incb
jle
cmp
pop
add
aaa
add
add
inc
add
add
push
cmpl
rorb
shlb
cmpsb
rol
or
lods
jnp
ret
mov
adcb
fsubrl
pop
ljmp
sbbb
fs
leave
cmpsl
fcomp
movsl
push
jp
adcl
xchg
ficompl
or
es
push
add
push
pop
mov
xchg
loopne
cld
mov
in
loopne
or
sub
xchg
xor
jle
inc
leave
or
mov
xchg
pop
jl
push
mov
rcrb
add
push
bnd
mov
pop
inc
loopne
add
xchg
xchg
cs
xchg
adcl
addb
or
jmp
dec
pop
rcrb
sbb
xchg
mov
jmp
pop
mov
cld
mov
sbb
aad
jae
xchg
aam
repz
add
fdivrs
test
push
insl
in
pop
dec
inc
aam
cmp
dec
std
call
faddl
xchg
sbb
daa
ret
fsubl
inc
in
adc
xchg
adc
dec
test
subl
int
mov
mov
dec
inc
push
fidivrl
sbb
adc
dec
mov
fstl
push
jp
sub
or
add
pop
push
je
mov
lds
jns
mov
enterw
sub
xchg
add
pop
xlat
fidivrs
inc
aam
out
sbb
cltd
mov
mov
jl
pop
cmp
aas
adcb
inc
push
loopne
aaa
jae
add
mov
lods
add
mov
cld
aam
into
stos
stc
sar
xor
lods
cs
dec
subb
mov
icebp
enter
rcl
bound
fsubl
fcmovnb
or
push
test
xor
inc
and
and
js
sub
sti
add
dec
xchg
test
decb
mov
mov
push
cmc
cmpsb
movsb
push
cmp
pop
sbb
lcall
jmp
fs
pusha
dec
movsl
rolb
cs
sarb
jb
add
ds
jmp
mov
stos
add
xor
subl
xor
mov
add
lods
xchg
jg
andb
fld
xlat
and
cmpsl
repz
and
aam
xchg
add
sbb
js
pop
push
add
aaa
js
popa
mov
push
mov
or
add
mov
vmaxps
add
sub
movsb
into
jnp
pop
jbe
add
pushf
lds
dec
mov
add
inc
jp
int3
jl
cmove
fwait
inc
neg
xchg
add
jne
inc
push
xchg
add
clc
sub
mov
pop
and
add
rcll
sbb
das
or
aad
fsubs
aas
cmp
call
cmpsb
out
sbb
pop
xchg
rcrb
or
addl
inc
pushf
inc
ret
iret
inc
sub
ret
test
dec
adc
sub
and
mov
frstor
aam
add
imul
mov
add
insl
mov
xchg
test
nop
hlt
scas
xor
jg
int
mov
push
mov
adc
test
movsb
fisttpll
xchg
mov
mov
aam
cltd
testb
js
adc
outsl
xor
in
push
je
mov
push
add
cmpsl
repnz
data16
jecxz
cld
dec
sbb
fistpl
jo
xchg
jbe
jp
mov
mov
mov
lsl
les
setnp
pop
mov
adc
popf
dec
jg
mov
mov
shl
mov
mov
or
xor
add
andb
sbb
loopne
xchg
xor
flds
jmp
add
mov
jecxz
or
xchg
dec
jl
and
inc
shlb
les
testb
rclb
enter
mov
xor
and
roll
dec
push
orb
repz
dec
adc
addr16
add
xchg
push
das
js
pushf
and
fisttps
inc
inc
fwait
xor
pop
push
pusha
test
notb
or
test
movsl
adc
pushf
shll
adc
xchg
jo
add
xor
les
or
adc
shlb
dec
sub
jge
movsb
push
adc
mov
aam
mov
sbb
cmp
shr
inc
les
orb
xchg
sub
push
fidivrl
xor
mov
add
mov
pop
orl
add
xlat
mov
loopne
mov
call
aam
sub
dec
and
pop
gs
mov
push
lret
xchg
loope
lcall
mov
mov
cld
mov
add
lods
push
imul
xor
insl
call
cmpl
je
mov
add
rcl
and
into
js
nop
dec
xchg
in
cmpb
lock
pop
cmp
je
xorl
fnstcw
mov
fs
nop
push
or
add
or
iret
mov
call
movsl
add
rclb
enter
add
cmp
rcr
mov
jne
pushf
aad
push
inc
or
int3
or
add
jecxz
mov
xor
add
fistl
int3
fsubrs
adc
add
sbb
push
push
shl
inc
mov
adcb
test
bnd
js
mov
mov
dec
mov
gs
cld
paddsw
cmp
dec
in
push
and
add
mov
push
std
jns
scas
lds
out
cmp
ret
add
and
xchg
push
pop
lret
push
sub
shrl
sar
cmp
add
inc
xorb
subb
mov
daa
dec
mov
sbb
push
mov
add
shld
or
and
or
push
mulb
add
ret
dec
jp
nop
cwtl
divl
adcb
enter
mov
fnstcw
lcall
jo
cmpl
dec
xor
fidivrl
mov
lds
jo
xchg
dec
ja
jnp
sbb
add
push
adc
jp
int3
enter
xchg
inc
faddl
jns
jns
sbb
in
pushf
add
dec
jae
xchg
xchg
je
fwait
lods
mov
popa
outsb
mov
xor
test
xchg
les
jbe
inc
cmpsb
xchg
or
xchg
sbbb
rclb
add
cld
lods
jnp,pn
adc
cmp
xor
lret
lods
arpl
adc
push
xlat
shll
adc
inc
dec
dec
add
adc
jo
sbb
push
movsb
and
mov
mov
out
es
loopne
repz
aas
xorb
xor
and
or
into
and
xor
and
shll
nop
hlt
into
hlt
pop
sar
es
pop
add
frstor
mov
inc
pop
gs
mov
pop
lret
dec
add
lods
push
insb
cmpsl
fadds
fldenv
add
adc
js
enter
scas
in
mov
sub
adc
mov
or
mov
ja
add
mov
es
cmp
lock
pop
add
sarl
and
add
stc
repnz
test
gs
repz
enter
pop
in
addb
mov
iret
dec
rcrb
adc
add
jns
dec
clc
mov
roll
loop
sub
stos
sbb
inc
imul
sbb
mov
sub
les
call
call
lds
xchg
in
orl
loopne
xchg
rcl
out
xlat
sahf
add
nop
sarb
dec
pusha
ret
pop
mov
add
adc
adc
cmp
add
push
xor
loop
add
cmp
mov
ja
aam
es
fcomps
push
inc
xor
pop
sbb
and
mov
jno
lods
loop
push
pushf
sub
and
leave
add
cltd
jns
pop
cmp
bound
dec
jl
adc
or
push
orl
jg
sub
and
imul
and
sub
pop
pop
cmpsb
cmc
mov
sbb
xchg
add
dec
pusha
mov
leave
add
fsubs
adcb
call
inc
and
push
jmp
push
add
dec
mov
pop
mov
mov
sbb
lea
add
push
enter
mov
out
les
loopne
out
daa
add
jge
mov
mov
cmpsb
or
out
and
jbe
add
pop
fcompl
ret
daa
dec
cmp
lea
pop
fwait
clc
push
push
sbb
xor
xchg
xor
or
subl
and
pop
dec
mov
popf
ss
cmp
lahf
leave
das
loop
adc
push
lock
xor
mov
xor
mov
test
shll
cmpl
cmp
sub
les
sbb
shl
jecxz
add
add
xlat
ret
cmp
or
paddb
js
add
insl
lcall
in
mov
mov
shll
mov
dec
rolb
xchg
cmp
cmp
xor
xor
lock
loope
inc
mov
subb
sbb
xor
cmp
es
rcl
add
sbb
lret
in
jg
add
out
pop
lds
jge
sbb
dec
or
out
cli
mov
inc
test
push
or
rcll
stc
or
icebp
add
and
dec
and
cmp
jl
aam
push
cmpb
mov
adcl
psubusw
xor
or
inc
addb
xor
fistpl
push
xor
pop
cmp
sub
adc
cwtl
push
daa
dec
xor
jbe
dec
cmp
sub
les
test
adc
adc
inc
sbb
inc
jle
push
push
and
or
mov
mov
ds
pushf
inc
inc
add
and
dec
add
xchg
sub
ret
jne
decl
dec
add
lret
and
add
int3
hlt
cmp
js
scas
outsl
fwait
jg
mov
adc
fistps
fadds
mov
mov
lcall
xchg
adc
or
add
adc
xlat
pop
fbld
add
add
mov
mov
dec
or
icebp
arpl
xchg
daa
rolb
jo
xlat
fidivs
push
imul
ret
mov
insl
fwait
dec
mov
ret
xor
xchg
sub
xlat
or
inc
shll
sub
stos
imul
xor
dec
adc
mov
je
cmp
inc
cmp
pop
xchg
enter
das
into
test
insl
xor
dec
sahf
lcall
mov
jp
mov
jo
jnp
push
loop
inc
aas
push
add
sub
inc
fiadds
je
pushf
out
int3
jnp
mov
cltd
outsb
cmp
pop
out
in
mov
mov
mov
out
mov
push
add
mov
add
subl
repz
lahf
add
punpckhwd
rcll
mov
insb
add
fs
aaa
pop
sbb
loope
inc
enter
adc
jae
test
xchg
adc
test
sbb
mov
clc
mov
add
gs
dec
cmpsb
lea
cmp
pop
jp
sub
mov
sbb
int3
add
ja
xor
pop
add
loope
jbe
incl
cmp
or
rolb
mov
cltd
jmp
roll
sahf
into
rorb
mov
xchg
lods
repnz
or
sbb
mov
inc
push
movsb
pop
out
into
orl
lods
cld
sbb
sbb
cmp
mov
aad
sub
pop
mov
aam
arpl
es
iret
icebp
mov
addl
call
inc
jle
push
dec
icebp
out
add
dec
das
add
xchg
add
push
movsl
add
mov
std
push
mov
filds
xorl
inc
ret
andb
leave
fsub
inc
sub
mov
hlt
pop
out
pop
dec
das
mov
add
loop
imul
jp
add
sbb
inc
pop
sbb
sub
adc
mov
nop
mov
roll
lcall
mov
cs
adc
mov
cwtl
mov
sbb
xlat
cld
nop
rorb
cwtl
jle
add
pop
and
mov
mov
dec
push
lcall
cs
addr16
and
rorl
sub
daa
jp
int3
jns
ret
mov
jno
lcall
imul
pop
pop
stos
sbb
jnp
shl
test
cmpsl
push
ljmp
mov
cmp
movsb
xchg
je
cwtl
sbb
clc
cli
stos
outsb
xor
jl
hlt
outsl
jae
test
testl
dec
insl
mov
divb
out
sbb
xchg
loope
inc
leave
and
or
push
loopne
jno
add
pusha
test
jp
hlt
jo
adc
dec
cli
add
cld
mov
dec
je
into
sub
loopne
mov
add
aad
rorb
add
test
cmp
add
pusha
xchg
xor
dec
mov
cmp
add
out
or
jmp
and
push
sbb
mov
cmpsl
add
sbb
aas
mov
push
pop
or
subb
enter
add
and
scas
or
add
iret
es
into
pusha
add
jmp
popa
pop
xchg
mov
je
or
rcl
jbe
shr
stos
add
pop
lcall
rcrl
or
jo
je
add
sahf
mov
push
inc
pop
add
pop
sbb
in
jl
add
fsubl
call
add
cmpsb
movsl
shlb
scas
add
lods
add
xlat
pop
push
pop
and
lea
fldln2
daa
push
jnp,pt
jne
cmp
cltd
lods
inc
jecxz
mov
inc
pop
pop
repnz
popa
adc
lret
inc
lock
mov
pop
add
jno
push
pop
jmp
push
jb
jae
sbbb
xchg
jns
filds
add
and
add
push
bound
std
call
daa
cmp
aaa
cli
je
add
pop
mov
sbb
dec
add
push
loop
add
push
ret
mov
dec
add
sub
push
push
insl
bnd
lds
mov
lock
push
and
call
lret
add
leave
xchg
inc
add
mov
fcmovu
xchg
cmp
pop
or
xchg
pop
xor
cmp
push
mov
lods
shr
mov
adc
cmpsl
push
cmp
cltd
popa
iret
scas
or
cmp
xchg
sbb
add
pop
retw
repz
lret
imul
insl
xor
push
add
lret
mov
jno
lds
pushf
inc
fadd
and
ret
fsts
sti
add
and
js
mov
mov
inc
cld
cmp
inc
pop
jecxz
jmp
jmp
cmpsl
cmp
add
int
dec
push
ds
repnz
shl
ljmp
cwtl
adc
lods
add
lret
push
pop
test
or
dec
xor
sbb
jns
pop
movsb
popf
mov
nop
xor
inc
xor
fidivrs
push
jecxz
push
pop
pop
cs
mov
leave
dec
pop
nop
in
loope
aam
xchg
ret
dec
xor
and
xor
mov
addr16
add
aaa
adc
jg
ret
inc
jp
scas
jno
inc
add
out
scas
mov
fisttpl
add
xchg
mov
mov
jnp
rol
add
imul
data16
out
xor
lods
icebp
lods
add
call
lock
jbe
jo
mov
into
jnp
xor
cmp
arpl
movsb
cmp
repnz
or
aas
add
jno
mov
push
mov
add
and
aam
test
lret
rcrb
inc
movsb
shl
mov
imul
add
lods
icebp
pop
aas
fiaddl
xor
mov
jle
mov
cld
daa
xor
std
or
xor
adc
jg
hlt
inc
loopne
or
js,pt
add
dec
pusha
add
les
add
mov
sbbl
cmp
sub
das
imul
outsl
cmovg
pop
sbb
mov
lock
std
pop
push
dec
test
insl
icebp
pop
add
pushl
add
sub
sbb
cmp
cmp
jo
in
mov
xorl
and
sar
add
push
sub
mov
cld
in
add
cmc
sub
sub
jp
int3
rcrb
mov
and
cmp
testl
inc
repnz
lret
fimull
add
xchg
mov
inc
cltd
dec
pop
outsl
loope
add
sub
repnz
xchg
aas
sbb
adcl
add
mov
jne
jle
add
popa
imul
add
mov
xor
add
ret
adc
cmp
adc
ds
inc
sub
push
scas
inc
inc
in
cmp
jecxz
inc
dec
vmread
add
in
aas
in
lds
sub
sahf
cwtl
xor
jmp
add
hlt
xchg
scas
add
jg
ret
add
lahf
add
mov
insl
fadds
push
and
dec
cmp
rolb
loope
pop
jle
fidivl
call
movsb
lock
sti
dec
aad
jmp
fildl
ljmp
enter
aas
sub
add
push
dec
ds
add
and
push
sbb
pusha
shlb
fldl2t
sbb
sbb
lods
push
iret
sbb
lods
movsl
xlat
imull
in
xchg
jae
add
add
fsub
xor
push
nop
inc
jo
cs
lock
ret
add
out
sub
cld
in
pop
sbb
adc
dec
bound
dec
cmp
cwtl
xchg
and
add
dec
sub
filds
rclb
lret
push
incb
mov
mov
jl
push
std
add
roll
inc
lock
sub
fdivrs
enter
push
hlt
flds
adc
or
rorl
andb
add
cmp
add
or
scas
cmpsl
sarb
and
add
mov
push
hlt
sub
mov
push
cs
dec
lods
add
push
add
xchg
ds
add
fxam
loopne
pop
jmp
add
cs
or
sbb
adc
out
and
pop
add
dec
int
mov
pop
lret
mov
add
addr16
subb
loopne
insl
je
imul
cmp
mov
bsr
ja
int3
xor
lcall
add
test
xchg
call
sbb
adc
and
add
lret
jg
sti
cmp
idiv
mov
test
pop
imulb
push
inc
clc
imull
loopne
aaa
sbb
in
into
and
add
xchg
fs
xor
xor
push
push
mov
push
lcall
inc
aas
bnd
sub
add
xor
pop
jae
lock
pop
push
mov
add
int3
lods
pop
add
xchg
mov
xor
ds
pop
sub
cmp
mov
cmp
add
popf
jnp
or
fwait
cmp
adcb
add
cmp
mov
popa
mov
icebp
inc
and
push
pop
das
add
jne
cwtl
mov
xchg
repnz
ss
xlat
testb
mov
icebp
inc
jbe
mov
pop
ljmp
loope
pop
add
mov
jbe
sub
rcll
or
push
cmpsl
iret
xor
in
addl
aad
mov
cmpsb
push
add
ljmp
inc
pop
cmpb
mov
imul
inc
xor
push
xor
lret
xor
mov
lock
rcll
xor
add
fistpl
cmpsb
jnp
add
outsb
adc
hlt
and
pop
xor
scas
ljmp
push
in
adc
dec
and
dec
pop
addr16
add
es
and
or
insl
cmc
mov
add
movsl
mov
mov
add
jb
xchg
pushf
xor
lods
sahf
xchg
out
je
add
and
out
jne
jmp
sub
ret
hlt
cmp
cmpsl
andl
jmp
mov
jecxz
ret
inc
cmp
data16
cltd
in
fidivs
add
jnp
lcall
push
jmp
dec
in
pop
sbb
add
clc
decl
xlat
add
and
push
mov
insb
pusha
mov
popa
les
dec
outsl
xchg
pusha
cmc
or
add
out
jge
add
repnz
rsm
adc
xor
add
xchg
jne
sbb
pop
add
fiadds
and
pop
es
add
jne
cmc
or
sahf
add
mov
or
rorb
pop
add
loope
div
jo
fiaddl
fmull
cwtl
sub
pop
test
icebp
or
adcb
xor
sub
sbb
clc
or
test
sub
into
add
or
lret
sub
add
sbb
dec
mov
adc
aaa
mov
add
dec
xor
push
xor
or
adc
or
add
aas
jne
or
mov
test
out
sbb
dec
scas
rcl
push
stos
sub
jl
das
xchg
sbb
fidivl
popa
cmp
fwait
pop
and
add
test
mov
xor
cld
add
sbb
sub
cmp
xchg
xchg
xchg
dec
and
ret
adc
and
or
pop
mov
lds
fs
cltd
ret
xor
rolb
enter
jp
and
shll
add
jmp
sahf
push
jmp
jne
xor
pop
add
fildl
inc
test
out
clc
fiaddl
xchg
loop
dec
sbb
out
xchg
sbb
and
lock
pop
mov
int
and
fwait
pop
add
stos
loopne
movb
xor
push
and
aaa
jcxz
loopne
sbb
cmp
add
enter
xchg
push
add
mov
push
push
sti
ss
dec
push
ret
add
pop
test
lret
movsl
and
cmpsb
or
push
mov
pusha
popf
and
scas
sub
fsts
repnz
nop
add
je
mov
rol
add
fldenv
dec
mov
push
pop
mov
sbb
idivl
mov
aas
inc
inc
sbb
addr16
sarb
scas
popf
adc
and
add
push
inc
out
lret
in
add
jecxz
stc
imul
dec
decl
loop
sbbl
xor
shr
pop
jmp
dec
cmp
mov
out
pop
push
jge
add
mov
gs
and
dec
out
push
in
test
lods
ret
xchg
in
xor
popf
xchg
clc
mov
cmp
push
sbb
pop
mov
lret
ret
xchg
push
lahf
in
mov
bound
ds
or
es
cmp
lret
decl
bound
imul
into
dec
pop
hlt
mov
js
adc
inc
sti
push
mov
sub
rol
sub
pop
int3
repnz
add
shll
rcll
in
add
mov
pop
cwtl
scas
ret
data16
or
in
xor
or
and
jmp
cltd
add
fisubs
push
mov
lods
in
in
loop
inc
cmp
loope
pop
xchg
xchg
adc
push
xchg
hlt
jo
mov
rolb
addr16
mov
call
inc
pop
in
scas
push
sahf
cmpsl
aam
popf
pusha
mov
js
mov
jecxz
mov
add
popf
lcallw
mov
fsubs
sbb
adc
push
sahf
and
mov
xlat
pushf
stos
ret
xchg
or
or
lcall
cmc
loop
nop
and
xchg
mov
sbbb
pop
jo
push
pop
sub
mov
add
ret
das
push
outsb
adc
cmp
push
xor
loopne
push
inc
add
int
xchg
push
push
mov
sub
dec
and
rclb
ret
loope
inc
cmp
pop
adc
scas
mov
enter
movsl
or
inc
movsb
and
lcall
sti
adc
adc
js
sub
lods
xor
sbb
add
shlb
sbbl
cmp
mov
orb
arpl
fs
push
inc
xchg
mov
cld
sub
add
dec
fdivl
iret
imull
out
mov
or
push
adcl
cld
testl
test
add
fcomp
mov
mov
hlt
test
lcall
mov
and
or
sub
add
inc
jmp
inc
ljmp
pop
popa
sbb
mov
push
scas
add
das
repz
mov
out
mov
addr16
daa
sti
int3
cmp
aaa
push
lock
adc
nop
mov
inc
enter
mov
out
inc
mov
pop
push
or
mov
adc
pmulhw
and
sbb
xchg
inc
dec
sub
hlt
andb
repz
lcall
xchg
pop
xchg
test
js
mov
outsb
addr16
out
cwtl
dec
sub
xor
ja
push
popf
ret
or
lret
xor
test
or
cmpsb
stos
adc
stos
xchg
push
add
pushf
cwtl
jmp
aas
mov
and
incl
andl
or
jae
mov
or
cltd
stc
inc
jno
add
mov
dec
imul
in
test
jmp
ret
sub
lret
dec
inc
add
jecxz
lock
sbb
stos
rolb
mov
loop
lock
aaa
shll
sbbb
inc
outsl
inc
les
stos
mov
stos
add
xor
or
jecxz
mov
insl
add
arpl
sarl
push
and
into
cmp
mov
sub
es
hlt
or
cmpsl
mov
and
sbb
cmp
mov
mov
test
or
stc
push
add
xor
aam
addr16
mov
shrl
add
inc
add
bound
inc
inc
mov
imul
add
adc
mov
or
dec
movb
pusha
fcoml
push
or
xlat
idivb
inc
lahf
add
decb
in
lods
cltd
movsb
push
test
stos
lock
push
popl
adc
testl
cmpb
dec
stos
mov
test
cmp
inc
enter
pusha
pmulhuw
rolb
xor
or
pop
popa
mov
and
add
ss
stos
inc
imul
leave
push
pushf
mov
add
aas
dec
in
or
dec
pop
arpl
or
push
and
cmpb
and
popf
push
outsl
mov
cmp
out
inc
sbb
inc
daa
jge
cwtl
xor
dec
inc
sahf
stos
push
jb
clc
ds
test
pusha
gs
cmc
shll
add
mov
es
hlt
bound
cld
movsl
push
popa
call
jecxz
mov
jae
lock
push
test
sbb
add
adc
cmpsl
jae
cmpsb
int
mov
xchg
call
sti
jb
popa
or
sub
push
adc
pushf
pop
fwait
shlb
sti
pop
pusha
cmp
cmp
enter
add
or
mov
sbb
jns
jo
cmpsb
mov
sbb
hlt
xor
adc
mov
loopne
lret
in
add
jge
push
lret
push
movsb
inc
add
mov
cltd
jns
add
push
enter
sbb
xor
popa
or
jo
movsb
lods
dec
sarl
push
outsb
cmpsl
dec
in
or
daa
push
pop
xor
test
or
mov
fildll
rolb
nop
stc
inc
je
add
clc
sbb
es
rcrb
loope
mov
mov
bound
subl
rcll
orb
pop
shrl
int
xchg
and
pusha
call
xlat
cmpsl
jl
mov
ficoml
jp
mov
insb
popa
mov
pop
call
sbbb
mov
mov
pop
cltd
mov
jmp
mov
inc
and
inc
push
adc
adc
adcl
pop
sbb
unpckhps
cltd
addl
aad
pop
mov
push
adc
add
xchg
dec
mov
pusha
add
sub
mov
add
xchg
add
inc
xchg
push
icebp
xchg
rolb
pop
push
mov
decl
jl
sarl
mov
pusha
xor
mov
orb
mov
addb
inc
pusha
xchg
icebp
add
adc
sbb
scas
mov
rorl
adc
into
pop
sub
hlt
xchg
and
in
cltd
or
dec
add
in
stos
mov
adc
sub
push
mov
jne
cmp
cmp
push
push
mov
lods
mov
jle
call
mov
lahf
pop
call
add
jne
mov
sbb
xlat
fsubp
xchg
stc
mov
pop
sbb
adc
ja
jo
jne
adc
xor
cs
push
and
adc
popf
daa
inc
sub
push
xchg
xor
adc
outsl
loopne
jbe
add
jo
daa
es
sbb
add
faddl
ret
dec
sarl
or
aad
cmc
xor
lahf
jl
push
sub
ret
push
add
clc
pop
push
sub
into
in
pop
mov
pusha
xchg
mov
adc
mov
add
lret
push
add
and
sbb
xchg
sbb
nop
adc
mov
into
jp
or
mov
call
push
pop
movsl
pop
call
mov
les
sub
xor
mov
pop
stos
test
push
and
cmp
pop
shrl
add
lret
icebp
cmp
and
mov
loop
mov
mov
adc
divl
roll
lds
es
add
mov
mov
add
push
sbb
inc
push
and
fsubrl
pop
popa
subl
test
dec
mov
mov
pop
add
or
cmp
int3
pop
add
mov
mov
into
xchg
xor
push
adc
mov
add
add
pop
test
test
dec
pusha
jl
adcb
mov
mov
dec
js
or
lea
dec
fiaddl
or
dec
adc
or
push
into
add
jmp
shrb
and
or
pushf
pop
or
add
lret
push
push
adc
xlat
mov
xchg
mov
add
adc
xchg
add
rcrb
cs
push
sbbl
pop
cwtl
push
adc
sbb
cmp
pop
add
clc
xor
pop
mov
test
nop
push
cmp
mov
das
pop
dec
or
push
sbbb
popa
dec
mov
cld
call
push
mov
mov
jmp
aas
xchg
clc
mov
inc
sbbb
les
sub
mov
xchg
movsb
cmovp
cwtl
popf
mov
add
pop
pusha
jae
xchg
mov
jno
mov
inc
test
or
dec
mov
add
cs
xor
jp
xor
ficomps
add
pushf
into
jae
sub
stos
pop
nop
sub
and
pop
cs
xchg
arpl
subb
add
xor
daa
and
xchg
inc
jae
pop
call
mov
dec
cmp
loopne
push
mov
sahf
mov
out
cmpb
iret
add
lea
sub
xchg
mov
gs
adc
pop
xor
pop
cmp
pop
shrl
inc
mov
popf
mov
mov
les
incb
je
and
test
outsb
xor
inc
shlb
push
mov
add
inc
xchg
test
pushl
and
mov
adc
popa
sub
test
nop
jecxz
decb
sbb
cwtl
call
mov
push
push
mov
nop
pusha
sub
mov
sbb
js
xlat
mov
sbb
and
inc
int3
pop
mov
sbb
call
xchg
mov
outsb
jecxz
add
mov
xchg
cwtl
add
mov
lock
cmpsl
sbb
adc
subl
add
sahf
add
push
mov
mov
cmpsl
jno
sbb
mov
stos
mov
push
jae
xor
mov
add
cmp
or
repz
pop
pusha
dec
roll
test
mov
push
lock
add
add
fcmovu
xchg
mov
mov
add
loope
ljmp
and
pop
bound
pop
mov
add
stos
nop
adc
js
loop
out
shl
lea
or
cmp
xchg
fisubrs
movsb
xchg
mov
jmp
adc
scas
lahf
test
xlat
mov
push
fsubrs
stos
inc
jb
in
shrl
gs
mov
add
ljmp
or
dec
aaa
mov
or
cmp
lock
mov
push
mov
mov
sub
stc
sub
mov
cmp
xor
and
dec
and
or
push
sbb
and
push
dec
inc
shrb
fwait
rorl
add
fdivr
test
mov
push
mov
shll
cwtl
cmp
dec
sub
add
out
adcb
and
popf
dec
xchg
xchg
jecxz
add
leave
and
mov
js
add
lcall
xchg
jbe
pusha
jl
sarb
mov
stos
popa
xchg
pop
lods
fsubl
jmp
out
dec
nop
clc
mov
or
popf
popa
ret
cwtl
in
aam
sbb
fsubr
mov
cltd
sub
lea
in
and
xchg
or
sahf
add
hlt
dec
popf
adc
xchg
and
lock
jl
arpl
sarl
cmpsl
sahf
js
lea
sarl
push
pop
push
cmp
and
lret
add
jno
iret
lds
popf
pop
push
adc
mov
jae
rol
test
sbbb
mov
cwtl
addl
sub
sub
arpl
mov
mov
fisubrs
and
adc
pop
dec
mov
mov
ret
shrl
push
das
ds
shl
jp
ljmp
adc
pop
cmp
add
loop
push
cwtl
and
pop
xchg
orb
imul
xchg
or
xor
mov
movsb
inc
inc
rorl
mov
outsb
cmp
pop
lahf
adc
or
call
or
or
add
mov
mov
test
pusha
jnp
push
mov
and
xchg
sbb
fcoml
pop
push
pushf
mov
shl
pop
or
push
lods
xor
pop
fsin
or
call
fisubrs
sub
adc
popf
pop
mov
sub
or
popa
or
data16
test
stos
inc
movsl
stc
mov
mov
add
leave
shl
imul
aad
push
cmp
lock
dec
ss
adc
es
fs
inc
stos
push
adc
ret
lock
iret
stc
shll
xorb
dec
lods
push
dec
and
insl
dec
daa
das
and
sbb
or
xor
cmp
or
jl
xor
xchg
in
cmpsb
sub
outsl
pop
mov
pop
bound
mov
mov
cmp
test
into
ja
sub
mov
add
lcall
orl
cmp
pushf
and
mov
or
arpl
jge
pop
sub
jecxz
clc
daa
cwtl
jg
gs
mov
dec
inc
add
das
and
push
sbb
sub
sgdtl
mov
push
loope
pop
dec
xchg
stos
adc
adc
ds
lea
lock
sub
pop
cmp
nop
sarl
loop
fs
fistl
or
call
inc
lahf
sbb
push
inc
mov
and
adc
pop
ds
and
roll
rolb
sub
in
cld
rcll
pop
shll
or
add
pusha
ret
ljmp
test
dec
cli
sbb
and
pop
test
out
add
sbb
addr16
clc
mov
out
jle
sti
pop
stc
sbbb
add
out
jecxz
lods
frstor
add
cltd
pop
ss
xlat
inc
movsb
xor
movsb
mov
pop
jecxz
insb
and
sub
clc
pop
jecxz
lret
cmc
popf
gs
cld
push
mov
mov
sbb
bound
dec
push
sti
test
shrl
jl
mov
jg
mov
push
cwtl
mov
test
sbb
in
imul
adcb
mov
inc
push
int
add
jae
pop
rcr
add
aam
cmp
lret
push
and
ss
mov
jnp
cs
add
adc
movsl
pop
popa
cmpsl
and
mov
mov
add
push
shll
add
add
loope
mov
sbb
and
and
xchg
inc
cwtl
or
mov
or
xchg
mov
push
mov
dec
add
sub
int3
nop
fidivrs
stc
out
fimull
mov
rorb
add
stos
mov
cmp
fsub
cmpsb
pusha
clc
xchg
push
adc
and
sahf
inc
mov
pop
daa
int
cmp
lea
pop
add
mov
out
pop
mov
test
adcb
hlt
xchg
add
aad
inc
or
lock
pop
addr16
daa
dec
add
loop
lcall
and
jp
int3
adc
xchg
xorb
add
shlb
cmp
popl
jnp
sub
loop
fwait
cltd
xor
test
mov
sub
push
movsb
faddl
mov
fsubs
movsb
repnz
dec
push
jae
add
movsb
push
lahf
add
cs
sub
je
xchg
jecxz
cmp
rclb
pop
push
int3
clc
rorl
jge
push
xchg
sbb
dec
and
std
sbb
xor
jl
mov
mov
rolb
and
cmp
mov
add
pop
or
loopne
out
xchg
adcb
mov
push
and
adc
adc
sbb
xlat
push
pop
nop
mov
push
adc
dec
js
sub
stc
addb
cmp
add
in
roll
xchg
hlt
loope
call
jns
and
int3
xor
add
scas
daa
enter
jne
lods
xchg
adcl
sti
fnstsw
ret
pop
mov
pop
xchg
mov
rolb
scas
or
xchg
shrl
inc
mov
and
and
sub
push
add
jmp
jg
pusha
dec
fisubl
lret
js
push
into
push
mov
push
push
enter
inc
fdivs
decl
xchg
mov
pop
sbb
mov
or
fwait
test
push
scas
push
sub
ljmp
adc
xor
mov
jmp
das
sub
mov
xchg
ja
loopne
push
ficoml
sbb
rolb
jb
cmp
jns
fsubs
sbb
addl
hlt
mov
dec
dec
dec
leave
mov
jmp
add
test
insl
add
add
out
ds
das
ret
sub
sub
inc
mov
sbb
or
dec
test
mov
inc
mov
xchg
rcrb
shlb
add
enter
push
mov
push
inc
xchg
sbb
xor
adc
call
cwtl
adc
inc
rorl
call
jne
repz
mov
outsb
pop
in
shll
dec
out
movb
rcll
sub
lods
popa
jne
fiadds
push
popf
fwait
push
jl
push
inc
fs
mov
mov
aam
sbb
sub
rcrl
pop
inc
xchg
pop
adcb
in
add
jmp
clc
sbbb
sahf
adc
cmp
gs
mov
push
mov
add
stos
pop
mov
les
add
jp
cs
stos
and
inc
out
push
pop
xor
mov
outsl
imul
loop
push
in
pusha
pushl
add
xchg
xlat
stc
xchg
add
cmp
xor
xor
push
loop
and
ss
loope
in
push
sub
adc
movsl
pusha
add
out
xor
pop
fldl
jnp
loopne
push
xchg
jae
outsb
enter
pop
ret
subb
add
pop
popa
jns
sbb
add
cltd
inc
jmp
jmp
imul
int3
xor
adc
sbb
paddd
mov
push
add
lahf
nop
add
sub
mov
popf
jecxz
add
jle
cmp
movsl
jl
dec
fs
lods
pusha
std
add
sbb
mov
mov
cmp
fidivrs
fldt
adc
sub
in
ja
push
loope
inc
xor
xchg
hlt
cs
mov
add
out
push
out
dec
bound
mov
ja
popf
arpl
and
loop
xor
insb
add
psubb
fst
mov
idivl
sbb
xchg
fiaddl
or
sahf
xor
fstpl
sub
loop
mov
xor
cmp
orb
dec
cmp
pop
lahf
xor
mov
mov
xchg
sbb
pop
sbb
lods
aaa
les
mov
dec
out
test
xor
add
pop
pop
jmp
sub
xchg
mov
in
dec
mov
imul
mov
bound
cmp
adc
sbb
adc
and
mov
dec
lret
and
std
adc
jns
add
xchg
loopne
mov
add
pop
fisttpl
out
and
mov
pop
sub
inc
mov
or
and
test
inc
rolb
dec
cli
je
call
ljmp
cmpsl
nop
into
andl
lods
pop
jle
movsb
and
cwtl
fwait
mov
sub
stc
mov
hlt
xchg
cmp
cs
or
es
test
lock
mov
xchg
xor
add
mov
test
idivb
cmp
jmp
sbb
or
jne
xchg
push
lcall
add
sub
gs
sbb
mov
dec
loopne
shrb
jae
lods
imul
hlt
inc
pusha
mov
mov
and
mov
jae
js
or
sub
add
dec
ror
jmp
sbb
jge
xchg
cmpl
out
test
fildl
jle
xchg
xchg
mov
xor
mov
xchg
jne
cwtl
outsb
cmp
jae
js
mov
leave
ss
jb
or
push
les
inc
and
lea
xchg
add
outsl
adc
sub
adc
xchg
mov
adc
fwait
dec
test
sbbl
jo
ds
adcl
sub
enter
jge
ret
and
cltd
test
in
popf
jge
nop
dec
push
push
cmp
inc
cld
add
sub
dec
dec
push
mov
cmpb
movsb
adc
add
xor
jecxz
iret
popa
divl
rcrb
pop
add
adc
addr16
shrl
add
or
gs
push
pop
sub
mov
test
add
pop
pushl
and
xor
pop
daa
bound
add
add
sbb
hlt
hlt
jl
loopne
adc
add
dec
js
lret
into
adc
xor
pop
daa
mov
pop
lret
push
jo
lock
add
cmp
inc
mov
and
popf
pop
xor
add
clc
pusha
adc
scas
inc
xchg
pushf
push
das
inc
mov
fstl
mov
and
xchg
xchg
or
inc
adc
scas
adc
xor
pushf
pusha
sahf
push
push
outsl
rolb
fs
ret
pop
aas
cmp
and
xchg
jg
addr16
cmpsb
pusha
or
jbe
add
or
mov
mov
call
dec
jo
mov
mov
sti
lods
int3
mov
push
xchg
shlb
cmp
addb
lods
rcrb
mov
jo
imul
das
mov
int3
pop
pop
cmp
lods
adc
mov
inc
adc
lods
loopne
mov
cwtl
sub
aam
fchs
iret
mov
lock
add
inc
sbb
arpl
mov
push
jne
pop
pop
mov
inc
roll
push
dec
sar
push
in
mov
adc
pop
jbe
mov
adc
and
lock
cs
mov
sahf
addr16
jb
jmp
pusha
fistpll
pop
mov
nop
ret
lret
or
mov
xor
in
mov
sbb
mov
xchg
stos
movsb
add
jns
gs
movsl
nop
pop
subl
xor
cld
add
stc
add
and
jmp
or
inc
ret
push
div
jbe
xchg
add
in
cmp
mov
data16
pop
jo
xor
or
cmp
subl
sub
das
push
ret
mov
inc
adc
repnz
repnz
sbb
fdivrp
out
dec
hlt
mov
xchg
loopne
aad
lahf
lds
and
pop
or
js
mov
sub
add
jnp
pushf
call
mov
inc
mov
mov
pusha
push
in
cmpsb
adc
out
loopne
xchg
shrb
shlb
push
loope
int
orl
pop
outsl
jno
bound
sbb
xor
sbb
or
cmp
mov
push
jnp
pop
cld
push
jg
dec
enter
das
jae
jecxz
push
cmpsb
clc
mov
pop
ret
das
adcl
mov
pop
push
rol
nop
repnz
loope
mov
xlat
and
xchg
icebp
jns
lods
cmp
sbb
add
in
roll
iret
jg
sysret
out
repnz
xorb
or
sbb
fwait
imul
and
add
dec
push
dec
jo
xchg
add
jne,pn
lret
mov
sub
call
or
fildl
addr16
loopne
in
nopl
push
andb
cmp
inc
dec
dec
push
pop
inc
xchg
test
iret
mov
jecxz
mov
in
xchg
xor
lods
sbb
push
dec
mov
rcrb
and
mov
mov
pop
and
sahf
cmp
daa
int
cld
scas
or
insb
add
xor
pop
lahf
cli
pushf
call
fdivs
sbb
and
repnz
xor
mov
clc
xor
add
movsb
and
lods
mov
jns
imul
dec
and
pop
nop
adc
jb
adc
push
mov
push
dec
jo
pushf
sbb
aam
xchg
pop
fcmovu
mov
sub
cltd
add
mov
in
mov
inc
add
jo
in
pop
addb
inc
mov
xor
cmp
sbb
ret
push
jns
inc
test
ja
and
adc
gs
mov
sbb
imul
movsb
dec
in
jbe
loopne
pop
outsl
adc
fcomps
mov
movsb
pushl
pop
push
push
jo
pusha
pop
adc
mov
xor
jno
sub
pushf
imul
or
mov
aad
jns,pt
sub
mov
orb
cmc
mov
xlat
and
mov
sub
aas
sub
pop
mov
sbb
push
jb
and
cmp
adc
rcrb
push
and
sub
fdiv
nop
push
shlb
or
fstpl
divb
push
or
insl
adcl
fcompl
dec
fs
and
add
add
or
and
movsb
inc
inc
xchg
add
cmp
push
jp
popa
jbe
test
mov
test
test
pop
dec
in
or
adc
cltd
cmp
dec
pop
divb
mov
pop
jae
cmp
es
outsl
and
add
mov
mov
inc
scas
call
cmpsl
push
subb
mov
dec
pop
repnz
push
lods
rolb
xor
jl
cmc
cmp
adc
mov
nop
sti
push
xor
or
and
filds
sub
mov
add
pop
enter
xchg
ds
inc
or
leave
sbb
sub
jmp
fadd
mov
dec
add
sub
ret
mov
mov
lds
jbe
fsubl
loopne
push
xor
imul
daa
subl
into
inc
das
imul
data16
sbb
loope
mov
mov
repnz
add
push
sub
xor
jge
pushf
jb
xor
iret
add
mov
or
and
ja
test
mov
add
icebp
mov
cmc
int
cltd
rorb
push
sbb
ret
arpl
int3
sbb
xchg
shll
push
mov
dec
insl
or
mov
inc
jns
test
push
jl
inc
pushf
shlb
sbb
push
in
repz
or
fcmovnb
adc
adc
adcl
sti
sbb
adc
movsl
adc
or
test
inc
mov
push
int
pop
addb
mov
sbb
and
mov
sub
sbb
sbb
push
jbe
add
frstor
rclb
or
mov
inc
pop
mov
jne
divl
push
sub
dec
popl
and
jbe
xor
inc
jo
stc
mov
mov
jmp
mov
xchg
in
and
xchg
mov
adc
xorb
add
mov
pop
push
mov
jo
inc
cwtl
pop
inc
pop
aam
push
mov
pushf
inc
xor
inc
rclb
add
les
cwtl
icebp
inc
fs
dec
pusha
test
add
outsl
jmp
dec
inc
xchg
jge
sahf
adc
mov
and
dec
cmp
fsub
and
mov
add
addl
xchg
ret
sbb
adc
dec
mov
test
outsl
mov
pop
and
cld
or
xor
xlat
mov
add
lock
je
push
fstpl
add
add
scas
int3
jg
add
test
aas
sbb
fildl
adc
lock
xchg
scas
xchg
out
push
nop
adc
enter
mov
xor
lcall
mov
adc
shlb
stos
data16
test
sub
jbe
push
enter
cli
mov
and
jne
adc
ret
or
cmpsl
cmp
push
xor
jns
push
pop
xchg
test
push
psadbw
pusha
imul
cmp
xor
mov
repnz
daa
inc
xchg
xchg
pop
mov
rolb
rorl
mov
aam
add
sub
add
pop
roll
clc
incb
cmp
sbb
xor
sub
add
leave
stos
adc
fiadds
mov
gs
adc
sbb
add
lret
and
lret
ret
lods
pop
push
pusha
and
jecxz
rclb
mov
sbbl
cmc
mov
sbb
add
mov
orl
and
cmp
fmuls
or
lds
test
adc
adc
jo
sahf
or
ss
clc
mov
icebp
inc
jg
sub
in
test
sub
inc
rorb
mov
and
and
adc
mov
mov
add
jle
arpl
inc
int
pop
imul
jo
mov
mov
xor
lahf
addb
add
push
pop
xlat
data16
subb
cwtl
xor
or
flds
mov
or
dec
pop
mov
enter
adc
dec
scas
mov
addb
xor
subl
rol
mov
dec
rclb
jecxz
jmp
jb
and
cmp
mov
or
adc
cld
pop
sub
lret
xlat
pop
pusha
shrl
xchg
filds
push
aam
insb
ja
xor
ror
out
mov
add
dec
mov
rorl
fiaddl
ftst
add
push
in
and
cmp
pusha
xchg
push
mov
xchg
movl
popa
mov
test
xchg
cltd
push
pushf
xchg
xorl
cmp
sbb
es
addr16
sub
ja
je
aad
push
sub
adc
jecxz
cwtl
cmp
add
and
sbb
add
and
mov
push
js
sti
jbe
cmp
pop
aas
jmp
dec
push
lret
add
adc
add
adc
lods
xor
adc
jns
push
enter
cwtl
test
jne
aas
loop
icebp
call
xor
outsb
add
pop
int
scas
imul
rcrb
outsl
adc
push
xchg
and
shrl
inc
pop
and
pop
mov
cwtl
pusha
int
aaa
mov
mov
cmc
rclb
ret
jae
inc
sbbl
sbb
fcomip
loop
xor
cmp
ss
inc
dec
addr16
inc
xor
fstpl
sbb
or
lcall
idivl
je
xor
pop
cmpsb
inc
lods
clc
push
inc
mov
dec
add
ds
jge
dec
cltd
cwtl
sbb
inc
xchg
xor
sub
gs
mov
daa
add
mov
test
pusha
rolb
dec
add
test
add
cmp
jne
add
add
push
push
loopne
xor
mov
adc
mov
xlat
test
pop
sub
std
jle
xor
rcll
stos
int
jo
xchg
or
mov
rorb
iret
leave
sbb
call
cld
push
push
adc
inc
hlt
in
dec
ds
movmskps
stc
or
outsb
movsb
push
nop
clc
jno
sbb
xchg
and
daa
xchg
add
jecxz
jo
je
inc
enter
mov
fmuls
mov
cmp
inc
inc
stc
cmp
mov
push
mov
inc
pop
sub
sub
or
movl
hlt
pop
jmp
ja
adc
cmpb
adc
jnp
add
add
pusha
shl
or
sbb
mov
add
push
sbb
pop
cmp
lret
sahf
in
dec
das
mov
dec
add
cmp
repz
lret
and
test
sbb
dec
jbe
add
xorl
add
dec
push
or
movsb
je
add
and
jecxz
xchg
or
ja
cmp
dec
pop
xlat
fadd
sbb
out
cltd
shlb
iret
mov
and
mov
cmp
lahf
xchg
xorl
int3
test
sbb
je
test
lahf
mov
loopne
jp
ficompl
sar
xchg
fadds
cwtl
bsf
in
mov
cmp
add
mov
test
ret
out
jp
nop
shlb
inc
sbb
push
inc
testb
mov
mov
sub
int3
pop
nop
inc
icebp
andb
or
jno
mov
ret
fildl
enter
shl
sar
add
xchg
pop
dec
repnz
jnp
js
andb
mov
sbb
push
fwait
loop
add
out
in
xchg
sbb
test
mov
rcrb
jae
stc
add
lret
popa
mov
add
les
fstps
xor
pop
fucom
cwtl
std
mov
insb
add
js
sbb
push
rcll
jg
in
jno
mov
dec
rcrb
lea
out
mov
jbe
pop
inc
pushf
movsl
mov
sbb
aam
inc
addr16
and
mov
dec
mov
rorb
inc
pop
inc
mov
xchg
cmp
push
dec
inc
rcll
xor
add
fstpt
fwait
test
cmp
mov
pop
xchg
pop
jnp
push
add
andl
and
push
inc
sti
sub
cwtl
in
xchg
pop
xlat
add
sub
push
popf
cltd
push
mov
lea
rolb
ret
sbb
int3
add
xchg
in
add
insb
cltd
js
dec
mov
and
mov
jne
add
cmp
add
or
icebp
test
idiv
sahf
sbbb
push
or
adc
pop
jbe
and
dec
add
insl
test
xor
inc
andl
xor
ret
or
icebp
test
xor
rolb
cltd
test
cld
jbe
inc
punpcklbw
sti
add
dec
jne
xorb
loopne
dec
pusha
sbb
nop
test
inc
add
sbb
add
and
pusha
pop
or
add
lahf
cli
dec
push
xchg
adc
mov
fdivs
push
pop
adc
rcrl
xchg
scas
stos
add
cmp
pop
movsb
jecxz
sbb
das
filds
movsl
jbe
adc
add
enter
lods
pop
addb
sub
pop
adc
xor
idivl
pop
cmp
mov
push
repnz
push
daa
lret
jo
or
xchg
subl
sbb
mov
ds
mov
leave
outsb
inc
add
mov
jae
addl
test
popa
add
cltd
leave
hlt
inc
push
into
push
add
add
int
jo
cmp
and
jbe
jl
cld
push
std
sbb
jne
addb
add
adc
sub
or
dec
pop
dec
outsl
sbb
add
cmp
lock
add
and
xor
int3
imul
cmc
xor
div
push
adc
add
mov
and
jns
pusha
cld
sbb
sub
ret
es
psllq
mov
lret
inc
mov
xchg
loopne
or
xchg
addb
imul
inc
xor
jb
in
and
scas
inc
clc
cmp
jmp
xchg
mov
sbb
aad
fldl
dec
test
lock
xchg
ss
pop
test
loope
push
mov
clc
sbb
mov
xlat
pop
pusha
shrb
out
push
ret
add
xchg
and
inc
push
push
in
lods
out
subb
or
xor
jne
inc
xchg
enter
xor
in
das
cmp
cmp
mov
lods
pop
scas
aad
data16
jmp
test
sbb
cmp
clc
and
cmp
nop
sub
dec
lods
dec
adc
inc
inc
mov
push
rclb
mov
lock
enter
test
dec
pop
or
jae
xor
fcomp
and
test
insl
add
pop
enter
pop
mov
cmpb
cwtl
pop
lret
xchg
jbe
cmp
mov
push
sbb
insl
outsl
mov
stc
and
push
adc
into
dec
add
daa
mov
mov
movlps
nop
and
pop
int
dec
je
and
lds
lret
das
sbb
lock
jo
xchg
cmp
mov
insb
add
lock
psubusb
or
sarb
and
pop
sub
xor
inc
clc
push
stc
lock
pusha
push
jns
xchg
mov
pop
dec
inc
mov
clc
xor
scas
mov
pushf
outsb
xor
inc
add
adc
and
dec
inc
leave
sbb
clc
jmp
jg
mov
xor
jne
cmp
cmp
stc
push
add
mov
rorb
testl
sbb
push
fldenv
mov
lods
mov
pusha
cmpb
lds
insl
or
cmp
loopne
push
pusha
int3
xor
repnz
adc
cld
sub
or
dec
in
mov
stos
ret
dec
lock
popa
rorl
and
add
in
das
in
dec
les
inc
mov
add
test
hlt
push
or
les
orb
dec
xchg
adc
cmp
mov
hlt
clc
leave
jno
fs
movsl
or
aad
jbe
int3
xchg
adc
rcr
adc
jecxz
lret
sbb
pushl
rcrb
cs
add
jle
popa
push
sbbl
and
inc
orb
fs
shll
jo
inc
or
or
push
mov
in
sub
insl
pop
cli
sub
jle
mov
mov
aas
xor
jne
xor
adc
aaa
xor
push
inc
insb
repnz
push
cmp
dec
add
dec
pusha
cwtl
add
mov
inc
jb
add
pop
mov
hlt
cmp
shr
ja
pop
adc
jmp
loope
and
push
sub
mov
pop
fdivl
add
int3
lods
sbb
xor
jne
xor
sub
mov
push
out
fs
imul
inc
push
push
int3
pop
clc
add
inc
nop
jl
mov
mov
adc
ret
jmp
or
mov
pop
scas
adc
and
scas
jns
dec
add
aam
sub
js
push
fnstenv
shl
and
mov
cmp
ljmp
ret
xor
sti
push
sbb
rol
push
stos
push
jae
or
xor
popa
fmull
enter
or
sbb
into
mov
mov
cmp
cmp
cld
inc
xor
lods
mulb
adc
mov
ljmp
adc
push
xor
or
push
inc
xor
call
icebp
add
and
jne
in
and
out
push
mov
les
push
imul
add
push
add
push
push
aam
pushf
in
dec
or
push
or
clc
dec
adc
pop
or
push
sbbb
and
mov
xorb
xor
push
movzbl
data16
dec
ret
add
or
inc
fbstp
xor
lcall
and
dec
pop
scas
test
push
add
xchg
mov
add
add
roll
mov
inc
int3
lods
cli
adc
sub
add
call
dec
hlt
sbb
aam
fistpll
jae
stc
mov
sti
push
push
fcoml
jl
rolb
dec
inc
dec
and
add
aas
test
add
imul
jg
sbb
cmp
mov
jnp
add
out
add
adc
xor
xor
and
mov
aam
idivl
andl
lock
and
xchg
jae
mov
test
xchg
or
enter
out
push
lds
cli
test
or
xor
repz
imul
stos
mov
pop
add
frstor
lcall
pop
inc
clc
popa
jns
add
test
outsb
adc
sub
hlt
icebp
mov
inc
inc
nop
cmp
lahf
jne
adcb
mov
lods
add
and
inc
fiaddl
rcr
out
movsl
push
leave
aas
cli
cs
repz
or
into
loopne
repnz
and
inc
add
push
sbb
sbb
adc
cmpb
inc
pop
aam
arpl
cmp
repz
dec
jno
jnp
pusha
xor
fcompl
shrl
cmp
jl
mov
push
sub
add
jecxz
inc
jle
shl
jb
testb
popa
pop
pushf
cld
push
outsl
cmpsb
push
cmp
and
add
sub
add
inc
lret
jbe
inc
hlt
loop
mov
dec
test
dec
push
sbb
test
subb
mov
lds
sub
sbb
mov
dec
test
aam
inc
xchg
addb
dec
cmp
out
std
loop
add
jmp
sbb
mov
inc
mov
scas
inc
clc
inc
bound
add
inc
inc
cli
popa
int
nop
mov
and
shrl
pop
add
cli
dec
jbe
pop
mov
shr
scas
and
dec
and
rcrl
adc
push
or
loopne
rcrb
xor
rolb
outsl
das
jecxz
aam
fadd
jle
mulb
jo
scas
sti
in
xchg
inc
lock
mov
push
jno
cmp
hlt
mov
in
repz
sbb
ja
cli
test
lahf
mov
test
ret
jno
pop
subl
ret
loope
movsb
xor
loope
add
push
outsb
jp
sbb
add
push
lock
and
out
jne
dec
shrb
cld
inc
xor
inc
test
dec
xor
loope
add
test
jb
dec
rep
xchg
jecxz
repnz
pusha
je
add
rclb
add
js
les
dec
pop
adc
mov
jne
shlb
cwtl
push
iret
add
jns
xchg
xchg
imul
mov
xor
jns
sbb
add
lock
data16
test
cwtl
and
cs
mov
dec
dec
adc
cwtl
pop
movsl
push
test
shll
add
cmc
push
mov
in
dec
fsubrs
add
mov
push
cmpsb
test
cli
mov
jnp
jns
lds
test
int3
mov
jle
fisttpll
enter
add
addr16
dec
call
pushf
add
stos
and
mov
dec
clc
orl
nop
je
mov
dec
test
sbb
fisttps
jnp
pop
rcr
xorb
add
inc
sahf
jns
jns
sbb
dec
cli
pop
mov
xchg
dec
in
and
jo
add
iret
and
mov
or
movsb
and
dec
sbb
out
mov
add
sub
add
popa
and
andb
dec
or
push
js
fmul
jbe
cwtl
mov
daa
mov
xor
mov
hlt
jae
out
jbe
test
movsb
nop
and
sbb
das
lret
repnz
xor
lret
and
adcl
out
test
push
nop
into
or
fs
rcr
movb
mov
sbb
pop
aad
pushf
clc
add
cmc
adc
es
mov
call
jns,pn
int3
and
add
sub
aam
andb
jl
add
mov
xchg
jecxz
cmp
clc
jns
or
inc
mov
ds
jmp
lret
int
xchg
jo
push
lds
insl
rclb
sub
addl
sub
stos
js
sub
test
sub
hlt
mov
js
in
fimull
adc
shl
inc
push
sbb
inc
push
pop
shrb
pop
and
push
repnz
add
std
jbe
popa
push
lcall
xchg
cmpb
push
or
mov
push
scas
je
add
or
sub
sti
lods
cltd
add
cmc
iret
pop
hlt
repz
fidivl
addr16
mov
repnz
testl
jge
into
imul
bound
pop
dec
and
lock
adc
dec
inc
push
or
in
or
add
push
inc
mov
push
cltd
in
fisttpl
daa
inc
push
mov
push
pop
lds
mov
cmp
sub
pop
int
push
mov
jnp
lcall
add
popf
fcom
dec
mov
adc
sti
add
xchg
lret
add
insb
aam
jmp
or
insl
jmp
cmp
outsb
lock
cmp
mov
mov
lahf
push
movsb
add
and
test
shll
mov
xchg
aaa
sbb
call
and
add
popf
mov
clc
sarb
pop
xor
push
cmp
sbb
sbb
shl
adc
sub
call
addb
xor
push
sbb
pop
cmp
pop
roll
jmp
adc
fldcw
adc
add
faddl
or
sub
cli
jne
sbbb
cmp
in
lods
cmp
jmp
ret
inc
test
dec
cmp
and
jle
jne
fdiv
rcl
push
lea
xor
aad
outsl
sarl
andb
js
aaa
add
push
mov
mov
test
adc
sbb
inc
and
shl
dec
incb
add
loopne
mov
popa
cld
add
or
div
sti
fs
add
sub
pop
lret
jl
mov
and
mov
sub
lock
sub
bound
add
loopne
test
ficomps
enter
fdivr
insl
or
dec
or
mov
mov
xorb
mov
inc
notl
sbb
enter
sar
popf
or
and
and
sub
inc
mov
shll
or
in
stos
leave
add
push
dec
lock
or
xbegin
pop
inc
mov
lds
inc
cltd
push
icebp
push
test
movsb
and
push
iret
xchg
imul
or
adc
and
je
insb
mov
loopne
add
fmuls
repnz
jne
sub
test
out
jmp
inc
stc
sub
movb
sbb
adc
nop
or
pop
pusha
popa
mov
fwait
inc
sbb
in
lret
adcb
orb
pop
rorb
rclb
dec
mov
or
lods
push
cmp
fstps
push
add
mov
mov
hlt
and
popf
cmp
shlb
mov
lret
inc
aam
fldenv
mov
push
addl
lods
lock
and
unpckhps
fwait
jns
add
pop
lcall
inc
xor
xor
add
inc
xor
add
xchg
jmp
cmp
sbb
lock
or
scas
pop
add
dec
jno
push
lock
loopne
pushf
sti
insb
sarb
add
xchg
lret
outsl
call
nop
in
jo
pop
dec
lods
in
dec
jno
dec
xchg
shlb
mov
shl
adc
loopne
fcmovu
push
sti
popf
aam
insb
rorb
lock
add
lods
aaa
add
cmpb
dec
sub
adc
fcomp
pop
sbb
lahf
sub
in
pusha
jo
sub
pop
add
popa
stc
sti
outsl
fs
or
jmp
stc
cmc
aad
call
xor
cli
incb
add
lcall
lds
mov
jns
orl
and
dec
clc
fdivrs
add
xchg
xor
fistpll
pop
ret
push
fcomps
stc
xchg
mov
int3
js
add
inc
or
mov
sbb
adc
fsubr
daa
aam
and
in
mov
sub
dec
lods
or
sbb
lods
repnz
test
push
add
xchg
call
add
sahf
pop
rolb
or
fstl
ja
pop
movsb
in
aas
add
cmc
out
xorl
test
mov
aad
aas
push
sub
pop
adc
lds
hlt
cmp
fdivr
add
mov
and
cmpsl
jbe
hlt
int
cmp
add
push
jno
or
les
mov
mov
and
in
lret
push
cmp
daa
jl
in
shrb
push
int
dec
cli
jns
adc
test
pop
lahf
sbb
xchg
xor
inc
fidivl
mov
push
enter
enter
mov
and
cmpsl
sbb
test
and
out
sub
xchg
push
add
dec
xor
jge
or
xlat
push
f2xm1
jns
sbb
cli
addl
and
cld
or
pop
ret
fcmovbe
jo
xchg
xchg
je
add
aas
cwtl
cli
or
jle
les
inc
mov
or
stc
stos
inc
pop
shl
sbb
xor
stos
mov
mov
cmp
in
in
or
mov
xorl
adc
xor
les
enter
mov
xor
mov
jns
mov
cmp
add
movsb
add
dec
dec
ljmp
icebp
jb
xchg
mov
clc
add
xor
lret
ds
lahf
push
inc
inc
jle
cmc
cmovne
and
adc
mov
mov
cmpsb
mov
lock
or
fwait
aad
or
movsb
cmp
push
push
and
add
leave
hlt
mov
clc
shrb
mov
and
cmp
push
bound
orb
sub
dec
add
in
fimull
stc
and
stc
pop
hlt
les
pop
std
and
loop
add
lock
ja
xorb
clc
add
dec
add
jb
cmp
out
pop
je
repnz
cmp
jp
scas
or
inc
cmp
mov
pushf
stc
add
inc
test
mov
aam
int3
sti
add
lcall
xor
adc
mull
outsl
pop
test
int3
cs
je
add
pop
jle
pop
sbb
filds
mov
cmp
or
jecxz
jbe
push
ss
inc
in
and
rolb
adc
dec
push
movsb
push
xor
pusha
jmp
stc
cmp
aas
mov
xchg
dec
and
loop
xor
mov
outsb
dec
jmp
sub
pop
dec
nop
dec
mov
add
xchg
pop
and
cld
shrb
ja
fidivrl
inc
adc
les
and
mov
in
js
clc
testl
out
cmpsl
repz
pop
xchg
cmc
repnz
fcompl
push
adc
mov
out
popf
movsl
ss
pusha
mov
jns
lret
fldl
add
es
test
shlb
xchg
fiaddl
mov
sub
das
adc
outsl
or
xor
jp
clc
xor
aad
mov
push
push
ss
pusha
js
jne
loopne
repnz
mov
ja
adc
mov
int
and
mov
jnp
xorl
daa
pop
xor
mov
roll
loopne
mov
out
les
and
or
aad
lods
clc
push
xchg
mov
lds
pusha
fwait
and
add
fdivp
clc
push
lds
nop
jl
repnz
cmpsb
adc
xchg
sbb
popa
mov
jp
push
into
enter
cmp
ret
add
cmp
inc
sub
rorb
in
add
mov
fildl
mov
and
inc
jo
sub
push
sbb
rcl
sub
mov
daa
imul
jo
int3
test
arpl
adc
xchg
iret
lret
sub
jo
dec
or
cli
jns
imul
mov
add
xorl
shlb
movsb
cltd
fs
xchg
jo
dec
mov
fdivrp
dec
push
in
call
jns
dec
test
pop
pop
adc
mov
pop
js
fldl
mov
mov
repz
aam
lahf
cmc
daa
mov
dec
adc
ds
fmull
addr16
popf
js
add
jl
or
cs
aam
and
mov
jp
sbbb
lods
pop
bound
and
sti
into
jno
jns
sbb
pop
mov
ret
call
and
inc
dec
cli
mov
adc
mov
xor
adc
mov
repnz
imul
xchg
inc
cwtl
nop
add
mov
dec
jno
lret
pop
loopne
xchg
pusha
repz
pop
les
push
dec
fnstenv
mov
mov
add
into
ja
mov
xor
jnp
nop
insb
hlt
les
sbb
push
adc
hlt
lods
push
mov
and
dec
inc
or
mov
adc
xor
hlt
xlat
lods
scas
loop
mov
leave
and
fidivl
es
out
imul
push
mov
dec
imul
les
and
dec
dec
stos
aam
sbb
xor
movsl
or
mov
das
or
and
and
push
int
movl
mov
mov
dec
xor
or
mov
pop
testl
test
ja
cwtl
les
inc
enter
sarl
mov
fwait
jo
mov
jge
ja
add
inc
pop
in
test
pop
add
mov
insl
jl
sbb
stc
xor
xor
aad
das
sub
rcr
test
push
outsl
lret
jno
loop
mov
add
cmp
nop
cld
mov
or
bnd
or
sub
add
push
adc
cmp
popa
loope
xlat
test
add
inc
inc
push
and
xor
cs
or
mov
mov
in
sbb
sarl
lahf
nop
mov
sbb
adc
icebp
rcrb
or
pop
or
mov
enter
ret
inc
or
push
sub
les
inc
dec
jns
pusha
adc
lods
mov
roll
sbb
shl
inc
xor
ficomps
add
out
dec
aam
loop
outsb
daa
add
add
cmpsb
faddl
cld
dec
mov
enter
push
jae
es
or
loopne
int
call
push
jge
inc
push
push
xchg
and
std
leave
adc
fadds
pusha
es
jle
fs
cmc
inc
cmp
shll
cs
add
dec
jle
bnd
insl
sub
shl
lcall
dec
notl
popf
xchg
mov
orb
in
sub
bnd
mov
je
cmp
xor
jo
adc
push
add
xchg
shrb
and
and
test
pop
sbb
mov
mov
mov
cmp
es
and
sti
shrb
pop
inc
add
cmpsl
and
inc
cmpsl
xchg
xchg
xchg
mov
mov
cwtl
push
xchg
pusha
mov
add
icebp
push
test
and
mov
in
repnz
ljmp
push
or
add
jl
les
xor
leave
adc
adc
repz
mov
add
insb
out
fldcw
test
mov
pop
ds
movsb
out
jp
adc
popa
xchg
mov
mov
out
inc
xchg
cmpsl
mov
mov
pop
adc
sbb
xor
in
cmp
pushf
popa
cwtl
mov
adc
scas
xchg
mov
pop
fistpll
jp
int3
adc
idivl
mov
test
insb
aas
hlt
and
sbbl
cmp
or
rorb
fstpl
adc
lret
out
dec
and
lds
mov
mov
stc
loop
lods
push
mov
fstp
xchg
addb
xchg
add
adc
sahf
inc
add
insl
ret
int3
rorl
mov
fmull
mov
pop
mov
shl
jne
daa
enter
sbb
enter
mov
add
and
hlt
mov
into
jle
xchg
fdivl
xor
and
mov
mov
adc
lods
int
inc
add
pop
aam
add
ja
test
fs
fdivrl
mov
push
popa
push
jl
lods
cld
sbbl
mov
push
jl
sahf
inc
inc
sbb
and
inc
repz
mov
test
fmuls
rclb
popf
push
fmul
ret
insl
add
popa
cmp
cmp
pop
sub
xor
add
mov
xchg
outsl
jmp
dec
jne
jl
pusha
daa
push
xor
addr16
jp
add
aaa
clc
xorl
add
mov
mov
clc
push
and
mov
cmpb
or
add
aad
enter
sub
pop
inc
fmull
cmpl
xchg
fsubl
fs
mov
xorb
jle
mov
push
push
mov
fwait
pop
shl
mov
rcr
pop
xorb
sahf
dec
xchg
movsb
or
nop
and
lods
or
or
pop
pop
pusha
or
icebp
cltd
stc
cmp
mov
dec
hlt
lahf
xchg
mov
inc
js
add
mov
xchg
jne
div
loope
pop
or
jo
repnz
cmp
in
jns
loopne
push
add
push
or
stc
add
push
xor
mov
cwtl
stos
adc
dec
lcall
popf
aas
push
push
push
push
mov
scas
or
nop
lret
imul
mov
dec
sub
add
mov
sbb
or
into
push
aam
and
bswap
sub
stos
pop
dec
mov
dec
pushf
movsb
or
cli
push
lock
pushf
inc
movsl
nop
fs
dec
adc
call
insl
fisttpl
xbegin
mov
adc
ds
std
pusha
mov
dec
jo
sbb
inc
mov
and
push
out
pop
lcall
xchg
test
hlt
push
cli
pushaw
fiadds
sbb
jecxz
xchg
nop
and
mov
dec
push
xchg
push
inc
xor
add
sub
dec
mov
pop
mov
lock
cmpsb
pop
mov
mov
pop
out
fxch
xor
das
faddl
inc
fists
mov
out
add
popa
mov
pop
mov
add
mov
fisttpl
jnp
pop
pop
pushf
add
inc
pop
fs
mov
js
mov
mov
ficoms
mov
sub
pop
add
mov
lods
add
and
repnz
inc
cli
mov
jecxz
mov
cld
cmp
sub
adc
in
sahf
cltd
inc
pop
testb
add
test
or
lea
xchg
test
aad
xor
in
jp
pop
ret
sti
imul
out
lret
dec
jg
fstpt
cmp
enter
clc
jmp
add
in
mov
je
and
or
mov
pop
jp
mov
sbb
mov
pop
fdivrs
out
lea
dec
scas
rolb
xor
sar
mov
jne
and
push
call
sbb
and
sysexit
test
repnz
sbb
pop
roll
testl
out
cmp
jns
pop
xor
out
lock
sarb
mov
lods
adc
adc
cmp
insl
test
push
das
inc
add
outsl
adc
subb
mov
fiadds
sub
je
ds
inc
sbb
hlt
cwtl
mov
loope
dec
add
push
fcoms
pop
mov
orb
fmull
mov
cli
and
loope
inc
leave
push
inc
push
inc
cmpsl
and
bound
je
pop
daa
cli
mov
add
add
jns
jl
adc
pop
add
popf
adc
mov
or
mov
or
add
cli
ljmp
sar
out
pop
bnd
scas
fisubl
push
xlat
jmp
pop
inc
test
xchg
stc
adc
cmc
sub
jmp
popf
push
adc
sub
hlt
roll
ja
or
xor
pop
pop
call
add
mov
xchg
imulb
xchg
push
int3
sub
add
daa
or
adc
adc
fildll
les
xor
loop
xor
add
xor
or
dec
pop
pop
pop
add
fwait
push
mov
inc
xor
or
and
sbb
ss
xlat
rclb
xchg
dec
movb
push
pop
fsubrl
mov
cmpsl
mov
xchg
jne
mov
add
cwtl
pop
out
xor
outsl
add
psubsb
fldenv
jns
add
mov
fsubrl
push
fisttpll
inc
pop
or
xor
jmp
jb
xor
adc
inc
adc
xchg
ds
aam
cld
call
mov
test
mov
pusha
mov
inc
pusha
daa
cmp
fisubrl
pushf
add
dec
dec
cmpsb
mov
or
inc
mov
jmp
xchg
xchg
test
push
mov
add
and
cmpsb
sbb
or
push
xor
add
jmp
add
sub
pop
lock
or
adc
jae
sarb
pop
arpl
je
add
sub
sbb
pop
add
adc
test
outsl
jecxz
fisubrl
push
sub
movsl
lods
leave
add
jne
roll
push
movsb
stos
xchg
sbb
andb
aad
pop
add
shlb
in
jl
add
out
push
mov
mov
sub
mov
cltd
or
xchg
movsb
mov
int
bound
movzbl
push
arpl
sar
mov
cwtl
pop
xchg
popf
data16
inc
add
jmp
insl
cmp
xor
mov
fwait
jl
push
addr16
sbb
mov
dec
or
aam
xchg
add
stc
mov
inc
lock
fisttps
jmp
xor
rcl
adc
leave
lods
std
cmp
les
sahf
push
adc
clc
mov
xor
int3
in
sbb
mov
pop
xchg
stc
add
mov
xchg
add
lahf
inc
clc
shr
or
test
faddl
aad
pop
cli
add
mov
jl
lret
testb
loopne
sbb
scas
push
inc
out
inc
rolb
repz
adc
push
in
cltd
inc
loope
mov
add
ss
add
add
scas
xor
fs
push
shlb
xor
push
mov
lcall
push
pop
sub
mov
ret
aad
sbb
faddl
inc
dec
dec
xchg
add
mov
inc
push
leave
add
test
push
jg
daa
mov
fistps
in
dec
add
xchg
push
andb
pop
lods
sbb
popa
jo
pop
push
add
sbb
gs
xor
sub
xchg
mov
inc
sub
enter
fimuls
movsb
dec
add
mov
xchg
inc
jae
cli
mov
cmc
mov
mov
sbb
out
jnp
fildl
dec
sti
jo
mov
shll
aas
or
add
in
pop
mov
cmp
and
mov
clc
mov
cmp
mov
push
lock
mov
inc
nop
or
push
fnstsw
xchg
adc
lods
outsb
pop
mov
daa
cmp
pop
lea
push
cli
inc
xor
adc
shll
jno
jnp
jg
add
pop
mov
jle
xchg
out
stc
dec
lds
pop
jns
gs
and
int
scas
ss
sbb
lods
cmp
fs
bound
lret
sarb
lods
or
sub
addr16
and
sbb
dec
xchg
xor
shl
jp
add
xchg
fldenv
and
scas
rcrb
gs
mov
and
inc
or
push
and
mov
daa
mov
xor
jle
cmp
mov
or
scas
and
adc
inc
mov
add
push
loope
inc
mov
mov
ret
repnz
fwait
movups
dec
and
fildl
pop
mov
inc
je
push
push
lds
sub
inc
sub
jbe
add
xchg
push
add
dec
rcrb
cld
sub
testl
pop
or
hlt
add
fildll
leave
imul
cli
mov
xchg
xchg
nop
xchg
jge
add
loope
xor
add
and
hlt
fisubl
out
add
jno
push
xchg
movsb
orl
cmpsl
mov
pusha
cwtl
sub
pop
pop
jnp
jle
imul
mov
or
lahf
and
sbb
or
in
cmp
and
or
into
xor
cmp
jae
gs
pop
adc
dec
fidivrs
push
mov
divb
mov
push
push
cmp
push
enter
mov
dec
int
adc
subb
lock
adc
sub
and
add
sub
in
int
dec
pushf
cmp
cmp
pop
jno
std
mov
outsb
das
inc
xor
xor
cld
add
add
pop
orl
cld
subb
add
pop
pop
add
call
ss
dec
cmp
jg
sbb
shrl
mov
jmp
sbbl
jg
jp
fdivl
repz
arpl
scas
inc
xchg
in
or
dec
push
sbb
adc
cmp
adc
lea
test
sbb
add
test
jg
out
jmp
add
lret
jle
mov
push
jg
leave
int3
push
aaa
icebp
and
cmovg
pop
xchg
add
cmp
lock
add
rclb
add
xor
popa
xchg
or
mov
mov
and
mov
fwait
stos
or
push
cltd
sbb
cmpsl
cmp
inc
add
push
sti
pop
xor
sbb
lcall
mov
add
fildll
enter
sbb
sbb
mov
sub
into
iret
lahf
xor
mov
xchg
push
push
mov
mov
jo
push
pop
mov
ret
adc
pop
scas
inc
sbb
fldt
shlb
cmp
fs
mov
xor
div
mov
test
jge
sub
mov
pop
add
out
out
mov
add
xor
mov
or
jl
pop
imul
add
sub
cld
test
and
flds
or
popa
je
and
daa
jg
fisubrl
cmpsb
jmp
test
adc
xor
icebp
flds
andb
decl
scas
outsl
rorl
fadd
sbb
outsl
mov
mov
inc
decb
fisttpl
test
test
mov
xor
sub
stos
lods
inc
lods
xor
leave
add
xchg
mov
push
or
aam
sbb
popf
fcmovnb
js
sbbb
std
add
out
sub
cli
xor
fdivrl
jl
cld
ss
mov
movsl
push
cltd
out
sub
mov
sti
in
or
std
push
dec
shl
sbb
fcmovb
icebp
push
and
jge
xor
out
ficompl
adc
pop
dec
mov
xchg
jae,pn
pop
inc
jbe
push
mov
mov
incl
add
pop
out
add
mov
data16
add
lock
insb
xlat
inc
out
fwait
mov
pusha
cld
test
js
mov
out
jae
dec
in
movzwl
nop
xor
mov
cmp
push
jno
add
popa
pop
nop
orl
or
dec
inc
pop
pusha
push
aam
pop
jle
ljmp
nop
and
and
and
mov
out
push
xor
in
std
fldt
outsb
mov
jo
lcall
call
dec
mov
js
inc
sahf
std
inc
sub
jmp
or
mov
add
cmp
sub
push
add
es
dec
xchg
add
mov
add
inc
ss
call
fdivrs
roll
pusha
loop
push
and
inc
cs
and
inc
cmpsl
add
popf
mov
xchg
test
test
sbb
aad
sbb
xchg
add
cmp
sti
negl
sbb
push
jo
fwait
jo
cld
and
and
outsl
add
or
push
add
push
mov
push
xchg
popf
adc
call
lcall
fwait
pop
js
pop
add
and
mov
inc
inc
pop
mov
rorl
mov
sbbb
add
cmpsb
mov
xchg
std
sbb
mov
repnz
dec
mov
movsb
mov
xor
add
popf
sub
or
mov
dec
test
push
add
ret
roll
decl
and
es
fiadds
fldl
test
pop
lds
xchg
clc
add
sbb
add
bswap
lret
outsb
xchg
icebp
push
inc
in
push
mov
das
push
push
pop
mov
and
adc
add
mov
or
add
pop
lret
mov
jb
inc
out
dec
stc
lds
stos
mov
xor
push
mov
jbe
in
inc
nop
sbb
xor
push
and
or
pop
push
pop
push
add
and
mov
cmc
xchg
jle
inc
mov
movsl
add
sub
sub
cmp
add
jmp
inc
loope
mov
inc
xchg
cmp
add
xor
add
pop
cltd
pop
inc
das
inc
fsubr
or
add
mov
jbe
and
test
cmp
cmp
cmp
lock
sub
dec
das
scas
sahf
adc
cs
in
and
or
cmp
jns
xchg
cmc
outsb
shll
sbb
mov
xchg
nop
jo
sub
rclb
inc
in
push
xchg
nop
test
jne
xchg
cmp
std
or
or
or
adc
cmc
pusha
xor
jmp
loope
aam
popa
out
imul
test
push
sbb
lcall
xchg
adc
xchg
sub
pop
pop
or
pop
or
orl
xor
into
lcall
inc
jge
pop
push
sbb
cmp
cmp
mov
frstor
inc
aam
and
cmp
and
clc
nop
fnstenv
add
adc
inc
pusha
shrb
js
es
call
hlt
mov
jl
cmp
idiv
adc
sbb
cmp
or
fsubrs
fs
cmp
cltd
xchg
mov
xchg
mov
and
fwait
xor
cld
mov
xor
popf
loop
sbbb
cmp
pop
pop
mov
sub
int3
push
andl
add
and
and
outsb
cmc
add
sbb
dec
push
jle
test
jge
stos
dec
cmc
inc
outsb
pop
mov
add
jp
inc
or
in
xor
fisttpll
sahf
add
mov
mov
xchg
setp
add
sbb
pop
pop
pop
mov
dec
in
data16
jg
cld
pop
dec
rorl
adc
js
cmp
nop
shrl
add
rorl
rclb
mov
xor
and
mov
pop
jno
shlb
adc
dec
and
mov
sbb
lods
add
movsb
imul
in
add
mov
lea
push
pop
cmpsl
test
add
scas
mov
dec
fisubs
mov
cwtl
sbb
loope
dec
in
mov
sbb
bound
outsb
cmc
icebp
mov
test
dec
notl
mov
xchg
andl
sbb
inc
xor
cwtl
jge
push
iret
cmp
pop
out
and
test
cli
adc
sbb
or
movsb
adcl
je
cmpl
dec
xor
imul
in
je,pn
cmpl
repnz
inc
cltd
ds
jmp
adc
add
xor
mov
js
fcoml
push
mov
es
cmpsb
jae
and
pusha
jns
mov
inc
jecxz
xchg
push
movb
bound
pop
scas
push
faddl
test
cld
out
sbb
xchg
addb
xchg
adc
stc
mov
push
jmp
popf
dec
jmp
leave
pop
or
dec
fcoms
or
sti
push
jo
sbb
and
arpl
cli
adc
add
daa
mov
jmp
mov
test
adc
mov
mov
mov
adc
xchg
add
xor
cmp
and
xchg
or
inc
sbb
xor
call
inc
fbstp
lds
aas
or
adc
pop
and
jl
push
outsb
add
popa
ret
roll
jmp
lock
sbb
pop
cli
stos
fisubrl
into
xor
xor
sbb
mov
ror
pop
ffree
pop
sub
pop
aas
cmp
cmpsb
adc
clc
or
mov
push
and
cmp
pop
mov
mov
jne
sbb
pushf
insb
mov
jl
jl
or
push
sbb
xchg
ja
fnstcw
out
arpl
sub
mov
add
mov
test
cld
adc
sub
popf
andl
pushf
or
add
mov
sub
mov
fs
loope
pop
ret
mov
mov
sub
pop
pop
adc
or
nop
xchg
inc
dec
xor
shlb
idivl
es
je
sbb
sub
pop
sub
repnz
inc
out
dec
lods
cltd
cs
pop
das
aad
rolb
ljmp
cmp
adc
lea
mov
adc
sbb
mov
pop
pop
inc
movb
leave
rcrl
and
inc
add
and
xor
inc
mov
mov
ror
fldcw
add
lock
push
daa
pusha
jmp
fsub
sub
js
or
pop
shlb
or
push
fimuls
clc
push
roll
push
push
pop
bnd
fstpt
shl
movsb
mov
mov
xchg
add
stos
add
mov
in
in
or
sub
in
test
dec
rol
adc
xor
fcom
fsubrl
repz
or
in
xor
inc
dec
shll
je
rcrl
outsb
and
xchg
pop
movsl
in
rcrl
jle
fimuls
lea
inc
jae
repnz
cmp
add
lcall
ret
dec
dec
pop
loopne
or
jge
int3
mov
movsb
jno
add
cmp
dec
xabort
xorb
sbb
mov
in
cmp
mov
jno
stos
fisubs
pop
jmp
insb
or
add
xlat
call
mov
mov
pusha
in
adcl
nop
and
dec
jbe
add
aaa
sub
inc
lret
jmp
push
sbb
xor
xchg
adcl
pusha
lcall
imul
pushf
mov
sbb
pop
mov
outsb
xorb
daa
pop
xor
add
mov
subb
cmp
adc
cmpsl
or
pop
push
fstpt
fisubl
enter
push
cmpb
pop
movsl
pop
mov
add
push
dec
cmp
loopne
dec
dec
loopne
int
pop
add
push
jmp
andb
incl
ret
push
push
imul
stos
popa
dec
movsl
pop
insl
mov
int
or
mov
adc
add
xchg
and
mov
push
int
ret
jno
mov
jns
sbb
xchg
int3
sub
push
addl
popa
pop
jl
and
adc
int
shlb
into
nop
mov
sbb
test
aaa
add
pop
das
xor
add
or
movb
cmp
xchg
push
or
xor
stos
mov
jbe
fcoms
lret
test
testb
or
js
addr16
insb
mov
adc
and
in
pop
js
add
pushf
xchg
cmp
and
outsb
adc
fildll
push
xchg
popa
add
sbb
roll
movsl
or
sbb
lcall
shrl
faddl
mov
popa
push
push
add
or
adc
mov
push
clc
std
ret
dec
stos
stc
xchg
mov
dec
inc
xor
dec
xor
pusha
orb
or
les
xlat
ljmp
push
shl
adc
push
mov
push
push
inc
sbb
test
std
pushf
xchg
iret
xor
dec
adc
add
sbb
cmp
xor
lret
test
inc
sti
adc
sub
mov
cmp
adc
dec
adcb
and
push
call
add
test
cld
pop
push
mov
pusha
sarb
adc
add
sbbl
xor
mov
mov
fcomip
pusha
pop
push
xchg
cmpb
dec
lods
xor
pop
lea
and
mov
shl
repnz
add
cmp
iret
lahf
jl
push
sbb
jp
mov
adc
mov
mov
jnp
js
mov
push
sbb
and
push
pop
das
pusha
lods
sbb
aad
test
dec
dec
pop
fadds
push
and
push
mov
les
fildl
test
pop
sub
popa
add
loopne
add
fcomps
mov
mov
or
jge
lahf
shlb
sbb
cmpsl
scas
add
push
idiv
nop
ljmp
loop
push
pop
inc
and
and
sub
jbe
mov
mov
jl
in
das
test
ljmp
jbe
pusha
inc
xlat
pop
push
push
add
lret
xchg
adc
sbb
add
out
push
dec
shlb
pop
push
jmp
test
pop
add
mov
nop
xchg
push
inc
pop
movsb
cmpsl
clc
add
mov
jl
imul
mov
add
rcrb
mov
pop
in
or
in
sbb
or
inc
in
mov
cs
pusha
push
and
mov
cmpsb
or
enter
adc
sub
shll
add
jge
cmp
dec
sbb
rcrl
pusha
sbb
scas
inc
mov
sub
ds
push
iret
fcomp
das
loop
mov
lods
and
mov
inc
mov
lods
and
mov
cwtl
mov
mov
repz
fstl
add
stos
sub
add
pop
add
rclb
push
call
popa
nop
mov
and
out
and
mov
adc
mov
dec
adcb
call
ficomps
dec
jg
repnz
xor
fisubrl
subb
push
pop
sbbb
and
filds
imul
pop
mov
mov
jmp
mov
sarb
jo
incb
adc
mov
sbb
mov
fldl
test
scas
andl
xchg
dec
mov
xchg
xlat
push
jecxz
push
nop
mov
leave
jae
mov
adc
jp
int3
insl
or
loop
movsw
sub
xor
arpl
icebp
nop
rclb
mov
jge
add
frstor
push
sbb
sub
ja
rol
lcall
sbb
test
add
movl
jle
or
pushf
in
xchg
mov
sbb
xor
popf
movb
pop
mov
jle
loope
and
hlt
cs
pushf
orl
and
push
nop
cmp
xorb
lcall
cmp
arpl
add
repnz
jb
insl
mov
aaa
cmc
or
nop
inc
lgs
inc
inc
add
movsl
pusha
inc
xor
jo
lods
bound
loope
jl
sub
cmp
lcall
popw
and
sub
mov
inc
pop
cltd
and
stc
mov
sbb
fadds
jl
stos
pop
xor
mov
xor
add
arpl
bound
lret
lock
add
or
lock
push
sub
jae
pop
cmp
inc
aas
push
jg
leave
outsb
pop
pop
cli
dec
mov
dec
das
xchg
mov
mov
push
sub
pop
sahf
or
inc
shlb
pop
scas
add
and
test
outsb
xchg
int
add
jns
dec
movsl
sbb
movzwl
mov
push
add
pop
lock
push
inc
loop
cmpsl
popa
popa
test
lahf
imul
aad
cltd
insb
push
xor
adc
inc
add
out
fwait
add
loopnew
gs
in
jo
ljmp
stos
imul
or
and
loope
sub
add
xchg
fildl
dec
push
sub
jbe
add
push
jns
out
int
ror
inc
and
arpl
pop
loop
daa
xchg
jle
bound
insl
xchg
loopne
aam
push
dec
les
push
mov
mov
add
sub
dec
mov
or
scas
jle
mov
push
mov
inc
push
daa
cs
inc
xchg
ret
jb
or
mov
push
pop
dec
inc
gs
loop
add
mov
imul
sbb
test
mov
jnp
pop
test
pop
pop
out
add
mov
mov
enter
jge
fnstcw
sahf
idivb
cmp
mov
and
add
push
adc
jp
push
push
out
movb
icebp
sub
lcall
add
jns
andb
adc
popa
icebp
scas
incb
rorb
or
insb
jge
mov
aas
add
rcr
push
jp
mov
mov
or
add
subl
pop
pop
sbb
es
fs
movsb
daa
or
outsb
ret
pop
repz
sub
xor
test
cs
pop
xchg
test
ret
sti
push
jo
mov
les
pop
jne
aaa
mov
mov
cmp
lods
pop
xor
sti
sbb
jae
inc
pop
and
xchg
loop
subb
inc
jns
adc
test
mov
add
cmp
repz
shrb
mov
fs
mov
call
adc
mov
fistps
or
shlb
adc
or
mov
fs
lds
fdivl
mov
xchg
xor
movsl
pop
or
inc
xor
mov
lret
ljmp
sub
add
or
dec
nop
je
lea
test
add
stos
shr
imul
imul
xchg
inc
repz
cwtl
xchg
iret
add
and
ja
inc
fcmovb
xchg
mov
test
movsb
ret
mov
das
mov
loop
xor
add
clc
sub
push
cmovp
mov
cltd
inc
fdivs
mov
cld
movsb
aad
cmpsb
sub
call
popf
repz
dec
ljmp
fcomps
push
sahf
orl
filds
xchg
insb
xor
xchg
jecxz
inc
incb
fcmovne
jo
loopne
jo
jge
xchg
xor
outsb
ljmp
ret
pop
add
nop
push
jbe
lret
or
fmull
cmp
mov
sub
sti
inc
adc
adc
xor
sar
push
hlt
inc
jmp
leave
out
fstpl
cmpsb
test
sub
or
js
out
out
push
pop
pop
loopne
sbb
ljmp
push
fs
shll
pop
cli
add
das
xor
ret
sti
or
cmpsl
add
sbb
xlat
sub
push
or
and
lcall
hlt
imul
cmp
add
pop
dec
xchg
movsb
cwtl
dec
mov
mov
out
add
dec
add
dec
add
cwtl
in
add
sub
lock
or
repz
cmp
repnz
imul
add
or
mov
loop
dec
cmp
daa
add
pop
jne
pop
sub
or
mov
ret
ds
daa
test
shrl
xor
mov
pusha
test
push
jbe
out
cld
fidivl
loope
add
test
stos
outsb
or
add
rorb
int
popl
into
lret
ljmp
sub
daa
fucom
or
cmp
pop
rclb
push
xlat
loope
mov
sbb
lcall
loope
sbbb
movb
lock
fs
sub
mov
push
loopne
pop
mov
loop
jecxz
dec
mov
addl
pop
cli
add
sub
cltd
jl
leave
jo
sbb
jmp
and
or
sbb
mov
out
sarb
add
mov
xchg
xor
pushf
or
xor
ds
or
push
xlat
lods
pusha
clc
push
enter
mov
repnz
inc
aad
cltd
add
scas
xor
add
mov
mov
jns
mov
jl
xorl
ret
rorb
inc
test
jp
and
xor
or
das
xchg
aas
add
cmp
jle
loope
pop
xchg
add
cld
jge
push
xchg
test
mov
cmp
enter
jno
shll
stos
and
iret
clc
sbb
or
bound
xchg
jp
fistpl
mov
ret
xor
mov
mov
ret
xor
das
pop
roll
pop
loopne
rorl
aam
ret
clc
or
stc
adc
xchg
sub
inc
movsl
cmp
mov
outsb
je
ret
call
fndisi(8087
jecxz
outsl
mov
sar
cld
pusha
push
stos
xlat
or
mov
push
mov
or
inc
inc
testl
xor
add
test
add
sti
sbb
inc
inc
and
and
sbb
out
andl
in
or
jnp
packuswb
pop
jnp
push
push
notl
mov
push
cmp
sbb
clc
mov
adc
sbb
bound
test
clc
out
lret
loope
sbb
popf
ret
outsl
and
jns
push
fwait
and
jecxz
xlat
fiadds
addb
add
les
test
sbb
in
mov
jle
add
sub
cmp
mov
inc
jl
subb
adc
mov
out
push
ds
sub
pop
enter
adc
mov
loop
imul
xor
add
mov
jae
add
push
subb
adc
cmp
jle
or
cli
fwait
popf
les
icebp
jecxz
inc
dec
jle
or
das
movsl
and
or
inc
jecxz
cmp
out
pop
cmp
adc
push
push
mov
push
xor
dec
shrb
cwtl
sbb
test
stos
inc
xchg
add
testb
lods
loop
bound
flds
add
enter
leave
mov
add
cmpsb
in
mov
mov
ficoms
dec
shll
clc
mov
push
xchg
cld
shlb
cmpsb
sub
cmp
add
add
mov
and
add
adc
gs
dec
pop
adc
jno
inc
movsb
aam
jb
dec
test
loope
and
aam
xor
mov
jo
cmp
add
inc
add
and
fmull
lods
stos
add
out
addl
mov
inc
aam
lret
xchg
jmp
dec
add
add
leave
hlt
inc
xchg
add
clc
dec
mov
xorb
lds
loop
xor
push
cmp
push
imul
movsl
add
add
shll
dec
aas
test
push
pop
add
insl
dec
mov
xor
mov
aaa
and
dec
mov
adc
lods
popa
mov
adc
jnp,pn
sbb
lea
out
incb
es
mov
in
adc
mov
mov
jl
jg
xor
fnstsw
adc
ret
cmp
mov
add
clc
xchg
jo
mov
nop
inc
ret
jl
cs
xchg
rcrb
add
lret
inc
inc
in
cwtl
mov
and
push
lahf
jecxz
repnz
mov
and
daa
jp
imul
push
inc
int
mov
scas
cmp
adc
imulb
test
mov
jecxz
out
inc
roll
sbb
cld
or
xchg
gs
mov
inc
adc
enter
jae
sbb
pop
adc
xchg
cmp
xor
adc
scas
xchg
inc
mov
inc
add
push
cs
sbbb
scas
xchg
mov
xor
pop
and
add
aaa
adc
lds
dec
aam
and
pop
movb
mov
mov
and
add
xor
out
inc
rcrl
popf
cltd
cwtl
adc
dec
fstps
push
ret
icebp
xor
sbb
and
jle
addb
insb
adc
cmp
shll
cmc
adc
test
insb
and
add
push
fsub
leave
xor
sbbb
push
bound
and
cs
es
jl
mov
xchg
les
add
sbb
xchg
rcll
icebp
mov
sub
jle
jo
cli
stos
sub
add
and
push
cmpsb
loopne
movsb
and
sbb
adc
mov
adc
xchg
and
jp
mov
movb
dec
lret
push
lcall
mov
ljmp
std
rol
out
mov
sub
lods
lcall
pop
mov
push
clc
nop
cwtl
add
jecxz
add
pop
push
fwait
jno
insb
mov
mov
ljmp
push
imul
pop
scas
sbb
int
stc
xor
and
push
add
cmp
cwtl
pop
push
fwait
sbb
add
cmp
pop
std
jge
xor
push
sub
in
lcall
fcomps
imul
pop
mov
add
loope
inc
mov
cvtps2pd
sub
xchg
xchg
cmpsb
fwait
xor
mov
sbb
inc
rorl
and
inc
ja
add
inc
ret
insl
jmp
cmp
sbbb
repz
and
daa
sbb
pop
aam
xchg
stos
add
sbb
cli
sahf
test
les
out
mov
push
add
adc
enter
jo
fwait
adc
loop
aas
lods
mov
out
repnz
in
imul
push
fiaddl
nop
sbb
inc
ljmp
push
xchg
add
xor
in
mov
sti
xchg
xor
fdivl
add
or
push
jno
shlb
subb
and
jo
sbb
rclb
insl
sub
mov
int3
ja
xchg
scas
xchg
sbb
mov
roll
jecxz
sahf
sub
sbb
clc
cmp
and
addr16
cwtl
mov
sahf
in
aad
push
movsl
sbbb
jle
mull
xor
rcrb
cmp
push
mov
sbb
je
fs
inc
xchg
cli
cmp
dec
hlt
test
js
fsubl
jp
sub
sbbb
add
xchg
adc
xchg
jecxz
mov
xor
imul
orb
pop
fs
arpl
xor
sahf
mov
out
pusha
mov
jecxz
inc
repnz
or
add
lods
addb
add
mov
push
sahf
inc
pushf
sbb
aam
add
dec
mov
add
push
sub
ss
add
test
mov
fwait
test
in
fiadds
adc
pop
mov
in
and
in
push
lods
xor
sbb
repz
adc
popf
jno
push
add
es
mov
cli
mov
mov
mov
inc
outsb
and
push
sub
adc
push
push
jp
push
mov
dec
sbb
push
test
sbb
xor
or
sub
loop
push
shll
or
sbb
cmp
xchg
xchg
adc
cmpb
pushf
int3
lods
adc
push
and
rcrl
mov
lock
pusha
cmpsb
jno
add
lret
div
or
das
outsb
jb
aam
mulb
mov
aam
ja
pushf
pop
adc
inc
ret
insb
push
sbb
mov
icebp
mov
dec
xchg
adc
and
inc
addr16
push
sbb
sub
pushf
mov
add
dec
fildll
pop
add
fisubs
push
movsb
clc
pop
push
add
js
and
mov
xor
addb
es
add
push
jo,pt
sbb
or
fs
pushf
cwtl
in
lcall
jecxz
inc
mov
hlt
xor
nop
add
ds
add
clc
mov
push
sub
testl
inc
jbe
jno
sbb
lcall
mov
and
push
outsb
add
sub
xor
push
sub
bound
cld
test
xchg
enter
jae
mov
icebp
in
jle
addr16
cld
add
pop
sarl
call
subb
pop
xor
jecxz
add
loope
fmul
enter
add
ret
cwtl
gs
and
aas
adc
into
push
or
test
out
or
mov
shrl
pusha
paddb
or
jo
dec
mov
add
push
je
add
stc
sti
hlt
add
mov
sub
add
mov
jns
shl
dec
sub
nop
pop
jo
sbbl
or
jbe
fbstp
clc
ljmp
addr16
inc
pushf
add
push
sbb
aas
sub
cmp
add
mov
loop
xor
xor
add
xchg
mov
cli
rcrl
lds
shrb
cwtl
adcb
jo
out
mov
mov
pop
inc
mov
xchg
das
push
pushf
jecxz
adc
dec
mov
jge,pn
call
sbb
fnstenv
lods
pusha
shlb
popf
fmuls
push
add
scas
add
add
add
adc
cmp
loopne
mov
mov
mov
xchg
jl
aam
push
fsubrl
daa
and
and
jbe
cmp
mov
push
and
rcr
cmpsb
xor
andb
out
and
adc
stos
notb
daa
arpl
mov
pop
in
leave
mov
leave
xchg
cmpb
loopne
jecxz
mov
pop
inc
scas
in
and
out
icebp
adcl
popl
movl
pushf
inc
push
nop
pushf
pop
pop
inc
lods
add
xchg
jmp
insb
movb
dec
pop
sbb
sbb
adc
imul
icebp
mov
cmpl
add
fst
adc
mov
aam
mov
movl
lds
ss
xchg
mov
xchg
pop
ret
rcrb
out
nop
cmp
idiv
sub
mov
add
in
in
aad
pop
fs
outsl
sub
mov
mov
jne
iret
pop
jo
insb
sbb
xor
push
movsl
cmp
movsb
scas
and
pop
stos
jae
push
shlb
xor
je
js
xchg
outsl
mov
popl
js
push
in
repnz
xor
cwtl
lcall
shlb
gs
inc
pop
or
xchg
sbb
adc
inc
mov
pop
mov
cmc
xchg
and
pop
jns
mov
sbb
rcl
mov
mov
xor
lret
adc
popa
dec
mov
addl
jmp
sbb
cmp
inc
jg
sub
rolb
push
adc
ds
dec
lods
jecxz
push
cld
popf
or
and
hlt
xor
pop
jo
inc
imul
jp
inc
pop
aas
sbb
fmuls
jb
sarb
aad
sahf
insb
repnz
inc
xlat
je
dec
adc
mov
jbe
push
sbb
xor
rclb
sbb
mov
sbb
sbb
mov
add
mov
faddl
aam
push
add
addr16
inc
mov
mov
cmpb
push
inc
add
sbbl
inc
xor
mov
pop
je
mov
xchg
inc
sbb
xlat
clc
fadds
mov
addr16
loope
add
mov
dec
cli
add
mov
movsb
inc
imul
pushf
sarb
and
sbb
mov
popf
xor
xor
pop
jl
jbe
sbb
or
imul
and
test
leave
popa
mov
popf
mov
cmp
arpl
xchg
mov
pop
lret
adc
inc
xchg
push
cltd
sbb
fcomps
gs
pusha
loope
popf
int3
push
out
test
std
mov
mov
mov
add
jle
ds
mov
aam
leave
cmp
add
pop
fs
movsb
loop
lods
pop
jle
loope
outsb
push
je
add
mulb
pop
loop
push
xchg
and
sbb
mov
push
lock
int
jle
jecxz
sub
mov
jns
sbb
inc
mov
outsb
push
mov
sub
xchg
add
pop
cs
mov
or
adc
fwait
dec
mov
sub
xorl
sbb
fidivrl
pop
and
addl
push
xor
shll
jo
jne
sahf
arpl
cmp
cmpsb
loop
sbb
mov
cltd
test
outsb
jecxz
mov
test
sbb
mov
iret
inc
jp
or
jbe
dec
cmpsl
stc
add
sar
repnz
call
repz
lea
pop
mov
xor
jo
lock
sub
stos
add
aam
add
fsubrp
lods
push
push
mov
xor
add
jp
test
pop
push
add
cmp
aad
xchg
push
daa
add
or
add
and
icebp
das
add
sbb
movsb
inc
addr16
mov
inc
push
aas
dec
pop
das
inc
and
and
add
popf
loope
fs
js
aas
shlb
or
inc
add
mov
ret
mov
repz
pop
pop
outsl
and
jecxz
test
mov
sbb
mov
cmp
xchg
lods
sub
push
jnp
and
shll
and
pop
test
mov
sub
jbe
mov
pop
adc
cmp
scas
add
leave
pop
dec
daa
or
jecxz
sub
inc
push
ret
imul
je
cmc
and
mov
sbb
int3
fwait
outsb
sbb
and
inc
xchg
idivl
fnstsw
push
fs
and
push
cltd
loopne
pop
push
push
pop
add
push
or
cmp
inc
scas
jp
in
es
inc
or
movsb
adc
lock
cmc
mov
loopne
jge,pt
pop
pop
les
les
push
and
jno
xor
daa
xchg
popf
cld
adc
out
in
mov
dec
call
ja
mov
loopne
jno
popa
add
lods
inc
sarb
ret
mov
adc
daa
push
mov
imul
out
imul
and
out
orb
inc
mov
aam
cmp
frstor
push
mov
std
mov
sbb
aaa
xchg
test
cld
lods
into
loop
jno
add
jmp
ja
add
jmp
subb
popa
sbb
rcll
pop
jl
push
add
jbe
cwtl
out
lods
je
xchg
pushf
test
mov
add
cmp
add
repnz
fmull
push
push
and
aad
push
or
gs
lret
hlt
mov
hlt
test
cmp
pop
sub
jecxz
and
mov
mov
and
mov
inc
js
comiss
enter
push
lcall
mov
ret
xorb
pop
loop
popf
inc
xchg
addl
push
add
inc
lock
ljmp
sbb
jae
mov
add
daa
adc
js
ret
cli
jns
rolb
aas
std
jb
repnz
xor
add
xchg
orl
in
insl
mov
pop
push
cwtl
outsb
outsb
fs
and
mov
jg
mov
mov
repnz
mov
faddl
xor
jo
inc
sub
xor
sub
jnp
hlt
add
add
data16
cmp
dec
int3
cmp
add
jo
fadd
add
rorl
idivb
jge
pushf
mov
pop
xor
fcmove
pop
pusha
ss
cs
inc
int
cmc
mov
xorb
mov
scas
lret
mov
cmp
sub
int3
dec
subl
shlb
je
xchg
xor
mov
mov
push
nop
movsb
mov
add
lret
add
push
mov
sbb
adc
add
push
jle
jo
mov
adc
and
push
ret
adc
in
mov
and
inc
jae
test
mov
push
or
xchg
xchg
cwtl
cmpsl
imul
call
dec
sahf
push
dec
sbb
nop
adc
xor
lods
hlt
xorb
stc
xchg
out
sub
and
gs
mov
inc
xchg
pop
cwtl
les
adc
pop
inc
xchg
pop
sub
push
sub
xorl
in
inc
inc
push
stc
arpl
sub
pushaw
popa
mov
xor
test
pop
mov
enter
add
push
test
sub
psrlq
in
push
mov
inc
mov
data16
stos
jbe
cld
addr16
sbb
jecxz
mov
xchg
fwait
jg
adc
mov
push
loope
mov
sbb
or
inc
cmp
das
mov
inc
xchg
add
push
jne
push
jns
or
lret
xchg
in
pop
pop
dec
mov
fmuls
lret
mov
leave
cs
imul
sub
cmp
pop
pushf
insb
sub
je
scas
adc
das
add
pusha
xor
andb
mov
mov
in
jge
fdivs
adc
or
mov
in
lods
lods
mov
cmp
push
dec
cltd
push
push
movsb
mov
add
ds
jecxz
pop
xor
test
inc
add
add
clc
mov
xchg
sbb
lock
frstor
stc
aam
call
adc
sub
dec
xchg
or
daa
lret
mov
inc
push
mov
aaa
add
cld
adc
sbb
insl
inc
aas
cmpsb
and
pop
test
pop
xor
sbb
fimuls
cmp
ljmp
sarl
dec
jne
or
addr16
push
stc
adc
insb
adc
cmpb
cmp
out
loop
jno
fldcw
pop
push
dec
flds
je
mov
lods
add
and
mov
shr
scas
adc
pop
adcl
adc
mov
inc
mull
sahf
data16
add
inc
jno
sbb
popf
dec
add
sbb
lock
dec
test
jne
clc
or
stc
pop
dec
popa
imul
imul
cltd
xchg
fucomp
add
push
imul
push
js
sar
sbb
pop
sbb
mov
fimull
call
sbb
push
insb
loop
xor
add
int
mov
stc
jo
adc
mov
clc
cmp
loop
add
mov
imul
jo
and
rolb
inc
push
or
pop
les
movsl
mov
and
mov
or
loopne
or
cmpsb
test
cld
adc
mov
sarb
dec
mov
mov
or
enter
mov
mov
call
mov
xchg
add
sbb
jecxz
pop
push
idivb
inc
inc
xchg
out
push
imul
add
adcl
adc
jne
adc
cld
pop
fcoml
pop
push
loope
pusha
int3
test
std
es
sbb
pop
sub
mov
xchg
les
add
xor
test
test
outsl
xor
sub
add
mov
inc
fiadds
inc
xchg
add
pushf
fwait
out
mov
add
icebp
inc
and
in
add
push
mov
inc
dec
inc
ret
pop
movsb
inc
cmpsb
add
adc
mov
int
jnp
cltd
mov
and
cmp
inc
mov
push
mov
jl
push
inc
add
sub
int3
test
cld
push
gs
add
in
out
push
shll
xor
fdiv
mov
sub
mov
xor
xor
or
sbb
and
dec
daa
add
ficoms
insb
int3
ds
xchg
cmpsb
jae
or
add
mov
dec
jg
push
addr16
repnz
aam
js
rclb
xchg
negb
cmp
inc
sub
mov
aas
sbbl
mov
pop
call
add
adc
sbb
jo
add
add
adc
mov
jp
push
aam
mov
cltd
shlb
lret
sbb
or
cmp
cwtl
add
pop
mov
adc
stc
in
xor
das
sahf
push
repnz
xor
and
repz
mov
pop
pop
or
pop
sub
push
adc
sub
shl
add
mov
add
jae
data16
call
pop
pop
fcmovb
ljmp
sub
ret
cmp
test
pop
mov
mov
pop
pushf
xchg
fldt
movsb
add
pop
leave
int
jno
in
xchg
push
lods
inc
loope
fidivs
mov
movsl
dec
xchg
mov
addr16
lcall
push
les
push
out
scas
sub
push
add
mov
les
pop
fwait
cmp
jl
dec
mov
add
adc
mov
insb
xchg
jo
js
movb
or
pop
and
xor
push
test
push
leave
inc
fisttpll
inc
out
jl
inc
dec
ja
add
jg
rcrb
push
dec
test
inc
insl
xchg
ret
cmp
loope
and
in
sbb
ror
and
pop
addl
shll
lock
jo
sbb
orb
sbb
shlb
xchg
pop
leave
leave
data16
push
je
inc
cmpsl
adc
loopne
mov
inc
jnp
add
in
or
lods
int3
enter
nop
or
push
divl
xchg
popf
cwtl
mov
addb
mov
movsb
enter
ret
mov
movsl
add
mov
sarl
pop
or
mov
or
fwait
lock
push
lods
inc
loop
lds
loope
pop
push
and
cwtl
mov
test
add
loop
loope
cld
or
mov
xchg
movsb
test
mov
mov
inc
in
push
bound
out
push
push
jno
fdivr
add
adcb
cbtw
add
pop
fdivr
inc
add
stos
and
fwait
inc
loopne
mov
mov
xchg
into
mov
movsb
sbb
and
cmp
mov
push
push
lods
mov
mov
cmpsl
mov
adc
or
mov
imul
test
orb
pop
push
jecxz
repz
std
dec
cmpsl
icebp
or
int3
mov
cld
cmpb
mov
cld
repz
mov
adc
mov
inc
ss
gs
pushf
nop
mov
outsb
jl
fstl
loopne
pop
test
and
mull
das
js
add
pop
jb
add
repnz
add
push
mov
iret
icebp
jno
popf
sahf
or
mov
xor
xchg
mov
cmpsb
mov
pop
cwtl
mov
mov
add
pop
add
jnp
cwtl
aaa
icebp
dec
bound
js
sub
xchg
test
xor
adc
and
cmc
repnz
inc
daa
ficoml
pop
ret
inc
mov
outsl
sbb
shrb
sub
mov
add
cmp
imul
insb
add
loopne
xchg
mov
stc
pusha
jo
push
ds
mov
lock
and
mov
jns
mov
jmp
lods
jno
mov
pop
in
sbb
scas
inc
enter
ffree
mov
pop
repz
test
fstpl
add
mov
icebp
add
adc
and
add
fidivs
adc
lahf
rorb
int
push
dec
and
inc
xchg
mov
xchg
mov
shl
xor
cs
sbb
addb
ror
mov
xor
cmp
push
jno
cmpsl
jae
jo
push
pusha
mov
dec
push
jle
mov
inc
imul
out
cmp
loope
fs
sbb
roll
mov
cmp
dec
push
xchg
mov
setae
jbe
add
or
push
push
rcrl
mov
in
xlat
xchg
je
jo
mov
fiaddl
pop
scas
sbb
add
mov
fbld
lods
bound
les
test
loopne
pop
mov
and
icebp
sbb
pop
sub
xchg
jb
inc
cmp
xor
test
cwtl
mov
sub
push
mov
loop
aas
insb
pop
mov
cmp
mov
dec
sbb
or
jl
outsb
add
aaa
lods
jp
mov
inc
inc
pop
xchg
daa
and
jnp
rclb
popl
add
mov
jns
je
mov
orb
cmp
std
aas
imul
jp
mov
rorb
mov
adc
stos
mov
add
cmp
jns
movsb
jo
mov
in
mov
insb
jae
andb
push
or
or
add
inc
loopne
mov
jle
rorl
push
push
add
sub
outsl
cmpsb
sahf
fcoml
mov
and
rcrl
lret
dec
mov
rcrb
and
jecxz
push
imul
adc
add
mov
push
push
push
mov
lock
nop
mov
cltd
pop
mov
push
cld
gs
mov
sub
aam
pop
push
pop
mov
loopne
pop
fsubl
rcrl
or
dec
test
in
mov
push
or
or
adc
idivb
mov
clc
sub
xor
mov
add
loopne
scas
jne
push
test
or
and
fs
pop
or
mov
popf
mov
xchg
hlt
add
add
sahf
scas
add
adc
fildl
test
cwtl
je
lods
add
adc
pop
pop
fmull
cmpsb
mov
lcall
mov
rorb
add
sbb
pop
xor
cmp
fisubl
mov
adc
fstpt
loop
dec
and
or
cmp
xchg
sbb
jo
add
test
cmp
add
lahf
or
sub
cli
outsl
mov
outsb
int3
add
or
xchg
pop
cli
push
mov
xor
das
je
xchg
mov
aam
js
cld
shrl
xchg
mov
loop
sahf
mov
or
scas
dec
in
in
call
test
jg
jns
sub
mov
insl
aad
sub
mov
ja
add
cmp
xor
dec
mov
mov
sub
push
push
mov
inc
xchg
add
outsl
or
inc
jge
push
push
push
outsb
pop
jae
test
dec
je
scas
pop
test
sbbl
jo
push
loop
cld
mov
inc
mov
andb
push
cmp
flds
and
inc
push
fwait
adc
lcall
dec
pushf
lahf
mov
mov
sbb
push
call
cwtl
movsb
inc
xchg
movsl
add
arpl
sub
popf
mov
add
cld
das
jecxz
int
cli
mov
or
lds
sub
sbb
lcall
test
push
mov
shrl
or
push
loopne
lock
jb
add
jne
mov
add
dec
addr16
in
mov
mov
adc
hlt
insb
pusha
jecxz
xor
and
and
or
adc
pop
ret
in
mov
lock
rclb
lock
in
in
and
mov
fnsave
adc
arpl
jo
mov
push
ret
aam
add
add
std
dec
sub
push
inc
xchg
das
enter
pop
or
imul
pop
call
add
iret
fsubl
stos
fstpl
hlt
or
xor
jg
rolb
in
fldt
les
mov
repz
or
or
pop
scas
jns
add
xor
adcb
sub
cmp
jb
test
imull
cmova
add
popf
stos
xchg
sti
jmp
std
daa
pop
mov
pushf
mov
scas
lret
mov
cwtl
adc
call
mov
mov
lea
add
mov
es
push
cld
sub
pop
inc
insb
add
sub
repnz
cmp
add
roll
call
and
out
shll
fcom
fldenv
pop
pop
out
loopne
add
scas
test
addl
sbb
and
andl
in
les
add
inc
and
and
insl
bound
dec
gs
clc
dec
das
mov
faddl
xor
iret
pop
cld
shr
ret
movaps
inc
pusha
aas
lahf
call
mov
and
jl
mov
cmp
mov
pop
sbb
fcoml
mov
mov
xor
or
adcl
pop
jmp
xchg
mov
mov
fs
rcll
mov
add
mov
mov
jg
roll
mov
sbb
je
push
sbb
xchg
dec
int3
dec
xchg
lahf
ret
insb
in
pusha
fs
add
daa
das
inc
mov
inc
pushf
mov
push
pop
ret
push
sbb
mov
push
xor
mov
inc
je
cmpsb
add
dec
repz
pop
sub
add
push
mov
push
xor
or
adc
popa
scas
jno
pop
and
inc
cld
ss
leave
cs
lock
mov
sbb
jnp
pop
cwtl
sbb
mull
xlat
sbb
test
cmpsb
inc
pop
outsb
xchg
jle
sub
cmpsl
mov
je
pop
mov
xor
or
pop
fmuls
repz
mov
dec
clc
push
and
addr16
scas
pusha
jle
cmpsl
add
aam
loope
and
jns
pop
out
pop
fimull
orb
lahf
pop
loop
jbe
movsb
fwait
xor
jl
inc
aam
iret
sbb
mov
cmp
cli
xchg
mov
pop
sub
pop
pop
jo
sahf
cmpsl
adc
imulb
cld
lret
je
dec
cmc
xor
adc
clc
rolb
repnz
dec
fldt
jmp
in
xchg
add
mov
loope
mov
lods
int
inc
mov
stos
adc
cwtl
pop
add
xchg
cmp
pop
cwtl
outsb
js
xor
dec
into
mov
repnz
out
rcrb
inc
mov
ljmp
sub
cwtl
das
bound
enter
icebp
out
aas
imul
js
mov
in
lods
push
faddl
sbb
popa
push
rolb
or
pusha
mov
hlt
dec
mov
sub
mov
mov
pushf
lods
pop
jl
mov
add
xabort
dec
mov
push
adc
sti
fwait
scas
in
lods
addb
add
scas
int3
jmp
dec
rorl
sub
pusha
sbb
add
and
xchg
cmp
outsl
xorl
xchg
les
clc
dec
mov
jns
sbb
mov
incl
cmp
aam
fadds
xchg
in
mov
mov
aaa
sti
push
andb
test
clc
rcll
repz
or
js
pop
or
and
inc
add
adc
xor
jp,pt
dec
add
xchg
pop
js
mov
push
mov
mov
or
fsts
mov
add
pop
fs
jns
xchg
mov
add
mov
leave
sbb
pop
sub
cmp
pop
xchg
jl
mov
pushf
adcb
or
stc
push
xor
mov
xlat
mov
rcrb
lea
push
in
sub
mov
or
ret
mov
push
push
mov
dec
aad
addb
inc
call
sub
leave
call
les
add
ljmp
fstl
cmp
in
cld
test
sarb
or
sbb
fsubrl
inc
xchg
add
int3
lods
adc
add
pop
inc
imul
sub
jne
out
push
fcmove
cmc
and
and
sub
add
sbb
leave
rorl
xor
mov
sbb
cmp
jbe
fprem
xchg
movsb
or
push
imull
mov
fdivl
add
push
daa
jbe
fisubrl
dec
or
call
mov
in
mov
xchg
scas
pop
addb
sahf
subb
and
and
loop
adc
dec
insl
std
cmp
and
int
or
or
repz
sub
out
mov
pop
mov
int3
or
fsubs
add
cmp
pop
movsb
or
inc
dec
mov
in
sub
push
cmp
incb
inc
int3
push
or
arpl
in
mov
push
sub
repnz
mov
insl
lods
add
rclb
pop
pop
test
mov
add
inc
je
out
adc
add
push
gs
shrl
nop
fildl
aad
enter
aaa
rolb
mov
jne
push
int3
xor
cmpl
and
enter
mov
fstl
popa
shlb
dec
cs
mov
repnz
cmpsl
adcl
cmpb
int3
and
xchg
je
mov
pop
sub
cmp
mov
scas
das
bound
inc
xor
and
mov
push
js
pop
cmp
fdivs
dec
stos
das
or
dec
scas
bound
sbb
push
push
and
hlt
rolb
into
scas
popa
lock
jecxz
fnstcw
xor
sub
jl
gs
jl
les
dec
loopne
fiaddl
jno
roll
mov
or
arpl
xor
sbb
or
lods
mov
std
shrd
test
enter
adc
inc
pop
push
loopne
add
fstps
je
xchg
movsb
enter
mov
insl
test
push
int
dec
pusha
dec
sub
pop
push
js
loopne
hlt
add
stos
jns
mov
loop
sub
push
js
shrl
mov
pop
test
lock
add
aaa
inc
xor
in
sub
cwtl
or
dec
lods
inc
sbb
cmpb
adc
adc
lahf
push
add
mov
jge
cmp
loopne
or
adc
push
adc
push
cmp
adc
call
in
jbe
bound
xchg
test
dec
and
bound
das
sbb
rol
hlt
xchg
mov
push
test
outsb
mov
cmp
jle
les
add
push
sub
add
push
popf
dec
jp
mov
test
out
rcr
lret
dec
scas
xchg
push
inc
jo
or
nop
add
orl
lods
sti
scas
jne
mov
jp
out
int
xchg
mov
fisubrs
jo
push
or
sbb
call
repnz
dec
add
lret
pop
je
ret
adc
cmp
push
mov
stos
dec
mov
mov
and
push
ficompl
mov
pushaw
and
add
push
jl
fdivs
add
jae
sbb
pop
inc
sub
push
push
xor
mov
sub
xor
cmp
mov
pop
test
fidivrs
mov
xchg
dec
pop
clc
add
adc
int
mov
add
cwtl
mov
xor
add
or
notl
inc
out
add
dec
xchg
mov
jne
or
sbb
cltd
daa
mov
cmp
scas
movsl
or
pop
mov
sub
pop
cmp
shlb
push
int
xor
fs
notl
inc
int
jbe
adc
pusha
mov
test
hlt
push
inc
cltd
je
jne
subb
mov
xor
enter
je
xchg
mov
jb
arpl
cld
mov
sub
or
inc
xor
push
and
xor
dec
mov
fisubs
jmp
cmp
jae
adc
ficoms
jbe
mov
pop
inc
cltd
add
or
movsb
jns
or
pop
jmp
imul
push
imull
cmpsb
jge
jne
mov
jmp
loopne
sub
jo
inc
outsl
stos
pop
testb
sub
gs
xor
xchg
jo
mov
push
cmp
cmp
fldlg2
data16
cmp
shrb
add
mov
negb
sub
and
ds
dec
setno
xchg
in
ja
add
inc
dec
sarb
or
cmp
inc
push
sub
lock
je
push
dec
pusha
pop
or
scas
movsb
cld
dec
pusha
lret
lahf
jno
push
jbe
int
dec
mov
insb
fisubrs
mov
mov
push
push
pop
inc
add
pushf
dec
mov
cmp
sbbb
js
xchg
out
js
mov
inc
dec
jb
rolb
add
outsl
xchg
lret
aas
inc
dec
lcall
jl
mov
pop
int
adc
pop
push
xchg
ja
cltd
add
in
or
js
cmpsl
xlat
fidivrl
xchg
into
fdivs
xchg
and
mov
shl
insb
inc
jne
aas
or
mov
adc
cmpsb
in
jnp
cmpb
xchg
xor
mov
sarb
or
in
sar
adc
addr16
loopne
in
sbb
or
push
xchg
lcall
sbb
jmp
xor
jp
push
psubsw
cli
add
xchg
in
das
rorl
mov
inc
lds
out
stc
das
in
jns
xor
mov
loopnew
jb
sub
push
dec
jns
js
and
inc
push
cmp
sbb
jecxz
scas
and
add
jp
mov
test
out
fistl
movsl
add
daa
hlt
xchg
xor
ret
sbb
mov
adc
pushf
jge
sub
mov
sub
sub
stc
je
push
jmp
cmpb
repnz
sub
push
outsb
inc
nop
aam
adc
xchg
dec
fimuls
insl
jnp
push
xchg
sbb
ror
or
xchg
mov
xor
or
jecxz
div
cwtl
push
adc
into
addb
jl
shrb
lret
loop
lea
fldl
out
test
mov
fwait
mov
icebp
and
mov
stos
testb
pusha
imul
mov
jge
mov
repz
mov
cltd
mov
or
pop
nop
mov
and
pusha
dec
xchg
adc
dec
lods
cmpsb
inc
lock
popa
add
pop
test
sti
sub
das
dec
and
fdivrl
fmuls
inc
test
cwtl
push
jnp
xchg
inc
push
clc
jle
dec
xchg
mov
fidivrs
fmul
sbbb
xlat
test
mov
ja
fsub
imul
pop
rcl
add
mov
fbstp
sbb
cmpl
add
daa
push
fdiv
adc
add
pop
js
out
cld
pop
xor
repnz
mov
outsl
stc
inc
ss
stc
mov
loopne
fdivl
clc
xchg
in
repnz
add
add
rorb
lea
or
lcall
subb
scas
sbb
pusha
test
fmulp
ja
cmp
add
mov
and
push
jl
mov
aam
adc
cmpsb
je
fmull
lods
dec
jb
and
mov
mov
xor
mov
mov
mov
sahf
cmp
or
mov
inc
test
jecxz
xor
repnz
push
rcll
or
cmp
in
fcoms
mov
jnp
or
adc
add
mov
in
cs
mov
mov
dec
pop
pop
fcompl
push
jecxz
mov
jle
add
jo
sub
xchg
jb
leave
jne
in
sbb
or
movsb
add
push
rolb
lods
jl,pt
or
mov
test
sbb
mov
add
shl
jnp
nop
sbb
add
cmp
outsb
mov
rol
xchg
mov
pushf
mov
inc
les
mov
sbb
lcall
pop
add
inc
inc
push
int3
loop
and
xchg
dec
in
test
cmp
and
cmpsb
jne
ret
push
cmp
test
inc
sbb
pop
sub
adc
mov
mov
dec
mov
loopne
fwait
cmp
pop
xor
cwtl
xchg
mov
mov
add
jbe
int
sbb
in
fidivs
xchg
pop
pop
dec
mov
fdivrs
and
xchg
mov
mov
call
lods
es
imulb
out
clc
sub
mov
jbe
push
adc
fistl
add
jns
aas
add
pop
in
cld
test
sub
pop
icebp
pop
sub
aam
sbb
arpl
lods
sbb
and
pop
add
ficoms
sub
xrelease
addr16
mov
mov
in
out
repnz
add
push
inc
stc
mov
push
filds
arpl
pop
enter
nop
push
dec
mov
mov
pop
lcall
jo
sbb
mov
out
lahf
xchg
imul
mov
xor
imul
pop
pusha
pop
mov
nop
dec
xchg
xchg
add
in
shlb
int3
sbb
outsl
inc
xchg
jnp
cmp
loopne
aaa
call
sbb
xchg
sar
sub
mov
nop
jno
sub
mov
pop
aas
adc
push
add
xchg
mov
cmp
mov
push
mov
sbb
add
mov
mov
mov
les
mov
mov
mov
sbb
push
push
add
mov
mov
fs
cld
test
add
mov
dec
cld
sti
xor
repz
pop
negb
jl
adc
fisubrl
jle
hlt
mov
xor
addr16
mov
add
xchg
mov
idivb
sbb
mov
mov
pop
fidivrs
ds
sbb
add
cmp
sbb
lock
popf
xchg
jns
nop
push
ret
ds
sbb
cmp
jb
add
nop
or
mov
xchg
mov
shrb
daa
jmp
pop
mov
push
jns
adc
or
mov
repnz
std
cwtl
sbb
sub
mov
jns
adc
les
mov
rol
dec
bound
rcrl
xor
arpl
cmpsb
or
test
jge
clc
dec
test
lods
mov
clc
pop
mov
hlt
add
push
repz
or
push
movsb
adc
push
pop
inc
in
jl
xor
cltd
test
nop
mov
into
mov
and
mov
jecxz
xor
inc
and
cmp
and
rolb
and
cli
and
mov
popa
test
andb
hlt
mov
or
mov
pushf
ss
add
push
sub
nop
mov
mov
outsb
pop
sbbb
loop
hlt
pop
lods
and
cli
xchg
adcl
mov
in
pusha
pusha
mov
mov
add
sub
cmp
movsl
mov
arpl
int3
cld
dec
adc
leave
push
push
jne
xchg
and
inc
cmpsl
popa
fstp
inc
nop
data16
xchg
jno
pop
mov
push
xor
inc
sbb
in
xor
orl
mov
mov
inc
xchg
add
ja
xchg
incl
pusha
rorb
jo
mov
add
push
cmp
and
sub
cmp
popf
push
sbb
pop
xor
addb
jo
add
pop
pusha
test
adc
lock
cmp
mov
jl
sbb
inc
mov
add
mull
adc
sahf
daa
sub
ret
push
out
fs
jmp
push
cmp
pop
mov
int3
mov
imul
mov
xchg
int3
and
xchg
loop
popf
cmp
insb
adcb
sbb
jo
push
data16
iret
jae
adc
stos
outsb
adc
jecxz
push
pop
push
ja
das
dec
fs
dec
pop
call
testb
push
adc
xchg
rorl
cmp
sbb
pusha
push
lds
inc
and
or
xchg
ret
add
movsb
push
dec
cwtl
rorb
mov
pushf
out
aaa
xor
notl
movsl
push
mov
mov
and
mov
pushl
adc
test
stos
mov
push
subb
mov
mov
data16
jbe
fdivl
add
std
fistps
je
rolb
jnp
cmpsl
xchg
cwtl
xchg
test
fidivrl
mov
cmp
mov
cmp
or
dec
inc
mov
xor
push
mov
aam
push
clc
je
add
mov
pushf
jae
repz
xor
jnp
inc
subb
add
in
or
inc
mov
jae
mov
dec
test
ficoms
fwait
outsl
divb
mov
loop
sti
les
arpl
popa
ljmp
fdivl
dec
inc
insb
adc
negl
jo
xchg
nop
clc
xchg
repz
mov
sub
add
test
mov
pop
in
fdivs
inc
aam
or
xchg
and
adc
pop
int3
cmpsb
jne
inc
jb
xchg
insb
xchg
pushf
test
mov
ficomps
add
xor
jo
in
add
test
push
cltd
das
je
imul
cmpb
cmp
sbb
stc
sub
cmp
stos
aaa
sbb
jl
jmp
cmp
fs
popf
add
adc
dec
clc
mov
and
movsl
dec
sbb
idivb
xchg
add
dec
inc
in
or
pusha
stc
shrb
pop
inc
jmp
int3
clc
daa
rcll
add
mov
in
addr16
bnd
icebp
fsubr
daa
jl
stc
mov
popa
es
cltd
add
pop
icebp
mov
ds
mov
adc
fsubs
dec
mov
daa
lcall
pop
mov
inc
fdivrp
dec
dec
jo
xor
and
add
clc
add
inc
lods
mov
popf
inc
pop
test
into
cmp
mov
jne
aas
xor
mov
leave
pushf
sbb
loopne
mov
insl
pop
fcompl
or
mov
mov
call
xor
and
aad
orb
and
sbb
xchg
stos
inc
and
fnstsw
adc
and
test
jecxz
sub
ret
add
scas
cmc
test
shr
pop
outsb
mov
mov
pop
mov
aas
push
add
or
mov
jecxz
inc
pop
inc
add
jle
sbb
test
cmp
pusha
mov
js
lods
mov
xorb
stos
jnp
in
push
push
mov
in
adc
sub
test
mov
lahf
sarb
call
mov
test
lcall
into
in
pop
enter
push
mov
and
and
movsl
imul
jbe
xchg
adc
cmp
lods
je
lea
fisttpl
fnstsw
push
add
xchg
mov
cmp
pop
mov
push
ret
sub
mov
das
rclb
dec
hlt
icebp
xor
je
dec
add
push
or
xor
lcall
mov
xchg
sbb
push
pushf
or
call
int
shr
or
das
push
and
xchg
daa
and
or
fbld
inc
test
push
shll
push
rcrb
push
dec
inc
fbld
notb
sub
cmpb
testl
negb
jnp,pt
cmp
and
gs
or
sbb
aas
xchg
sub
fcompl
or
push
shrb
jns
das
inc
xor
call
cmp
add
loope
mov
out
enter
cmp
int3
adc
fsubr
sahf
push
pop
mov
in
fldcw
nop
sbb
dec
adc
xchg
jae
pop
jb
dec
push
mov
jl
xchg
imul
mov
iret
push
clc
add
mov
imul
fnsave
aam
sub
je
jbe
jg
mov
xchg
repz
xorb
lea
loop
sub
and
mov
ret
ja
hlt
pop
addb
test
add
adc
shr
lods
cmp
push
sub
and
jbe
mov
outsl
push
inc
push
or
sbb
pop
or
les
enter
pop
pop
or
push
xchg
nop
cld
in
pop
lock
mov
call
test
adc
cld
mov
sub
lds
jmp
inc
aad
cmpsb
inc
and
repnz
cmc
mov
icebp
adc
adc
xchg
call
fs
jo
loop
pop
ja
mov
pop
pop
jnp
stos
sarb
aad
pop
xchg
push
cltd
mov
sub
int3
adc
bound
fisubs
push
pushf
cmpb
mov
push
ss
mov
mov
pop
add
dec
sub
xor
js
push
sub
outsb
adc
mov
rorb
add
test
js
test
or
nop
cli
enter
adc
popf
arpl
inc
push
push
sub
out
divb
push
dec
jne
adc
insl
nop
out
mov
mov
pop
out
pop
cmp
stos
pop
nop
pop
lods
sub
jo
fs
pop
pusha
mov
mov
shl
int3
pop
push
outsl
movsl
add
or
mov
push
scas
and
cmp
mov
nop
jge
jmp
popa
mov
or
inc
xor
lea
inc
faddl
add
pop
mov
call
sub
popf
mov
enter
leave
and
std
add
xor
fcoms
aad
mov
stos
jb
pop
jecxz
iret
sbb
pop
push
jne
icebp
sub
push
push
push
pop
jl
nop
mov
ljmp
fsubl
rolb
cmpb
ja
sub
inc
push
inc
jge
add
pop
sbb
movsb
popf
sbb
add
fldl2t
cld
or
out
adc
aaa
and
sbb
mov
xor
js
shr
popa
push
arpl
adc
add
insl
ljmp
mov
cwtl
jne
mov
mov
icebp
inc
and
mov
test
arpl
roll
or
cmc
cli
sub
inc
enter
stos
ret
inc
inc
shr
push
cltd
xor
cmp
pop
popa
frstor
lahf
jne
mov
dec
das
shlb
lret
mov
push
inc
and
sub
lods
add
push
mov
mov
or
sub
adc
jmp
popf
jl
cmpsb
inc
xchg
mov
mov
adc
jo
pop
icebp
sub
push
adc
push
popa
add
in
popf
adc
stos
sub
or
mov
mov
enter
sub
stos
mov
cmc
cwtl
pushf
dec
insl
pusha
mov
dec
fbld
add
loope
mul
mov
cltd
and
repz
or
mov
shll
pop
pop
scas
daa
xchg
aam
xchg
sub
or
clc
ret
test
lret
push
roll
and
shr
adc
add
sbb
fdivrl
call
fdivr
test
aaa
stc
sub
movsl
sbb
decb
push
push
adc
lock
push
sub
inc
jp
or
daa
rorb
sub
es
les
push
fistps
imul
xor
lret
and
loopne
mov
outsl
out
loope
loope
sbb
mov
sub
mov
mov
fs
sub
faddl
pop
test
imul
add
push
cmp
dec
rolb
hlt
out
outsb
ljmp
mov
and
pusha
imul
or
adc
rcr
xor
enter
mov
fmul
mov
jle
push
mov
xor
mov
fisttpll
inc
jecxz
aam
push
pop
ret
add
or
shrb
iret
jl
inc
adcl
sbb
mov
shrb
add
sbb
sbb
movsb
fidivs
data16
xor
xchg
je
or
adc
mov
loope
out
adc
lea
mov
sbb
sub
xchg
jno
xor
add
bswap
sbb
mov
xchg
fucomip
jmp
ret
mov
mov
and
dec
add
jbe
and
jge
jnp
stos
cmpsb
fidivs
lds
popf
mov
mov
pop
sbb
add
bound
jo
cli
test
loope
jmp
push
std
push
inc
sbb
push
cmp
or
inc
xor
das
pop
hlt
dec
pop
ret
adc
nop
push
jp
cmpsl
jbe
rolb
jnp
cmc
outsb
repz
sbb
mov
call
and
incl
jo
pushf
sub
data16
int
ds
fldenv
iret
mov
aad
xor
arpl
das
add
movsl
push
leave
pop
mul
sbbl
dec
dec
xor
insl
sub
test
addb
testb
enter
jp
fwait
orb
inc
int
cmp
mov
adc
stos
mov
mov
dec
xor
sar
cmp
push
outsb
cwtl
in
cli
xor
jne
mov
mov
je
inc
fs
mov
lret
imul
fbstp
jbe
jo
leave
inc
and
push
adc
cmpsb
and
mov
pop
xor
jbe
or
mov
add
jg
lds
push
or
mov
ja
dec
fcomps
xchg
sbb
std
cmp
inc
ret
pusha
lock
sub
mov
out
push
pop
xor
test
test
mov
xchg
cmpsb
push
shlb
jge
inc
add
xor
jmp
mov
mov
xchg
fdivrp
push
add
or
aaa
stc
daa
fs
js
push
fstl
mov
call
into
jnp
shl
sbb
add
lock
nop
xchg
lods
cltd
movsb
mov
stos
cmp
mov
xor
ja
lods
add
mov
shll
xor
mov
clc
mov
mov
push
push
jno
add
mov
stos
fdivp
cmpsb
sbb
add
in
mov
cmpsb
jg
movsl
mov
add
dec
pushf
js
mov
popa
mov
sbb
push
movl
pop
pop
xlat
sbb
mov
rcrb
out
lcall
mov
outsl
loop
add
push
das
outsb
xor
add
mov
adc
enter
xor
jno
int3
add
cmp
add
push
out
sbb
jmp
ss
sub
push
sub
and
add
sbb
adc
sub
mov
mov
daa
std
push
add
and
adc
mov
inc
add
push
xchg
xor
cli
add
push
mov
xchg
push
in
add
arpl
and
ljmp
and
push
mov
shrb
stos
push
adc
icebp
cmp
pop
add
sub
mov
cs
lea
imul
je
cvtdq2ps
dec
adc
push
or
stc
aam
cmc
pop
pop
outsb
icebp
add
enter
pop
sbb
mov
aam
faddl
lahf
lock
popf
ret
pop
cmc
push
das
xor
cmp
popa
add
mov
xchg
pop
sbb
and
jnp
sbb
pusha
xor
dec
adc
add
lcall
test
add
pop
or
xlat
aaa
xor
push
jo
cmpsb
cmc
mov
xor
and
and
push
lret
and
test
xor
leave
bound
std
sub
dec
leave
inc
imul
xorb
mov
repz
and
adc
pop
add
cmpsb
add
pop
popa
ret
clc
fxch
xorb
int
push
lds
push
xchg
pop
js
pop
cmp
mov
ds
mov
cli
mov
pop
sub
adc
call
popa
xor
jo
cltd
shl
pop
sbb
ficoml
out
adc
cwtl
inc
imul
dec
pop
xchg
cwtl
arpl
in
dec
jne
mov
and
cmp
push
fstpl
dec
pop
jp
sub
inc
pop
add
sbb
mov
repz
mov
ror
cmpsb
leave
mov
xchg
mov
sub
cmp
sub
lret
cwtl
cmp
subb
fs
adc
push
add
cmp
das
xrelease
popf
sbb
jno
mov
xor
sti
and
pop
add
cwtl
jno
daa
adc
mov
sbb
mov
push
outsl
and
sub
enter
inc
fucomip
das
rorb
add
xlat
pop
dec
mov
nop
mov
rcrl
addb
scas
and
repz
add
add
lds
add
pusha
mov
mov
mov
in
shlb
dec
int3
loop
pushf
aam
aad
add
dec
xchg
movsb
stos
add
mov
pcmpeqb
mov
add
sub
mov
leave
lret
push
jmp
pop
popf
jl
out
xor
pop
and
aad
outsl
inc
ret
cs
js
pusha
or
repz
adc
sub
add
mov
adc
mov
jbe
sbb
mov
adc
int
jmp
movsl
cmc
shl
xchg
xor
test
nop
shrb
and
mov
sbb
aaa
push
jecxz
pop
mov
mov
fistl
add
dec
add
or
rorl
and
decl
and
and
arpl
int3
pop
mov
pop
popf
testb
pop
mov
mov
add
or
popf
or
sti
xlat
loop
push
popa
xchg
xchg
test
inc
mov
mov
cmc
fmul
jp
pop
cmpb
add
addb
nop
lods
lea
add
mov
mulb
push
xor
mov
shr
lock
jns
bound
mov
add
add
cltd
sbb
jae
dec
adc
loopne
xor
mov
and
out
lret
pusha
scas
pop
pop
mov
sbbl
cmp
imul
inc
nop
inc
mov
dec
sti
das
sub
sub
lahf
out
or
popf
jne
add
leave
rorb
fisttpl
add
ds
aad
and
push
jo
fwait
sbb
pushf
and
add
or
scas
outsl
andb
adc
dec
cwtl
sbb
push
js
shll
mov
add
in
xchg
add
sbb
sub
or
jo
das
shl
mov
jb
mov
mov
iret
sub
and
mov
testl
lahf
xchg
inc
add
ficomps
mov
cmc
sub
call
rcll
in
adc
adc
and
mov
mov
mov
pop
jb
or
push
jmp
cli
ja
lret
and
inc
pop
cmc
hlt
movsl
mov
iret
mov
xchg
adc
pop
push
gs
syscall
nopl
outsb
sub
dec
sti
in
push
mov
sbb
pop
incl
mov
xor
stc
out
dec
std
inc
sbb
push
pop
mov
or
bswap
pop
mov
push
add
mov
ds
add
fildl
push
jg
mov
cmp
fistpll
jl
xor
pop
sub
jns
jns
sbb
out
fldl
out
xchg
adc
or
sub
outsl
into
add
les
xor
fistl
cmc
pop
scas
dec
mov
jnp
scas
mov
add
jae
bound
pop
push
xchg
xchg
shll
stos
insl
sbb
shrb
push
xchg
fs
cltd
aad
inc
inc
pop
push
movsl
shlb
sub
mov
daa
stc
sbb
das
add
cli
cltd
cmpsl
jne
sbb
lds
inc
inc
jno
mov
in
mov
add
add
inc
jl
inc
clc
adc
xor
pop
mov
mov
dec
repnz
aam
into
test
ja
push
shll
and
sbb
pop
jae
jo
mov
fsubrl
sub
mov
test
int3
clc
add
lret
add
sub
mov
leave
lcall
xchg
sub
pop
mov
rolb
aam
or
and
adc
in
sti
mov
jo
rclb
mov
push
pop
mov
pop
sub
pop
les
add
push
push
pop
lock
popa
mov
test
xor
jecxz
and
and
pop
pop
adc
popa
pusha
xor
jo
push
aam
lods
jb
inc
es
gs
fsubl
adc
nop
in
pop
mov
fisttpl
xchg
stc
or
adc
das
sub
push
and
pop
dec
addr16
notb
dec
popa
addr16
roll
or
jecxz
shll
add
cmpsl
dec
mov
fsubp
xor
add
mov
test
and
es
push
push
cmp
gs
pop
add
mov
xor
mov
data16
lret
int
xlat
and
mov
popf
jge
or
ficoml
cmpl
add
or
cmpl
pop
fwait
incl
dec
adc
inc
sti
es
push
add
sbb
pop
popa
cwtl
push
cmpsb
repnz
add
ret
je
popa
xor
adc
jle
pop
or
shll
std
dec
mov
incb
cmp
xor
lret
jp
rclb
mov
adc
pop
in
push
mov
jg
hlt
fs
jb
adc
iret
movsb
fidivrl
int
bound
je
inc
pop
movsl
lret
jnp
mov
ret
add
in
in
adc
inc
cwtl
mov
cld
insb
sbb
out
aam
push
mov
and
inc
and
shrl
fcomps
imul
jnp
jle
inc
or
add
xor
je
popa
add
push
pusha
sub
repnz
and
dec
es
stos
or
xlat
test
lea
ljmp
add
adc
lea
and
add
or
repnz
sbb
popf
mov
hlt
push
outsl
adc
bound
jnp
pop
ret
push
mov
xchg
inc
fistps
cmpsb
ss
popa
mov
xchg
xchg
xchg
cld
sbb
adc
jl
lds
and
jp
sahf
ret
jnp
fbld
aas
ljmp
cld
and
notl
icebp
clc
jge
repnz
in
fildl
mov
loop
sbb
aam
test
repz
lods
adc
xor
cmp
add
fdivrp
fiadds
cmp
test
cli
mov
mov
and
add
cli
jecxz
cmp
xor
mov
popf
sbb
fistpll
fcomps
xchg
push
aam
sbb
add
cwtl
mov
push
pusha
scas
into
sti
dec
lods
rolb
sub
add
jns
stc
cs
cwtl
xchg
mov
push
pop
mov
sub
lret
cmpsl
mov
add
pusha
nop
int
je
jmp
xchg
adc
xchg
jmp
stc
xorb
lods
xor
sbb
mov
das
add
aad
push
add
clc
mov
enter
inc
sub
jecxz
xchg
inc
or
adc
sub
add
nop
test
dec
insl
ret
cmp
mov
out
adc
jb
aam
mov
xchg
dec
push
popf
mov
clc
flds
sbb
mov
inc
mov
pusha
cmp
pusha
mov
popa
jne
mov
pop
mov
add
out
xchg
push
push
inc
out
test
push
pop
pop
xchg
jnp
mov
cmpsl
in
stos
pop
enter
mov
jno
mov
xchg
sbb
es
nop
push
pop
movsb
inc
xchg
das
xor
adc
push
add
fwait
or
pusha
cmp
aas
dec
cmp
mov
popa
dec
xchg
and
mov
lea
fsubrl
lahf
sub
gs
mov
pop
mov
movsl
lea
xchg
sub
mov
shll
cmpsl
mov
call
in
pop
popf
mov
and
dec
dec
lea
fsubrs
push
cmp
stos
icebp
outsl
das
cmp
add
mov
mov
sub
pop
add
dec
inc
dec
push
imul
or
mov
push
dec
inc
pop
push
ss
sbb
xor
sbbl
jno
clc
sub
push
jecxz
sbb
loop
ja
xor
sbb
leave
test
int
add
call
sub
sub
xchg
cmpl
sbbb
addr16
inc
fists
pop
xor
push
xchg
fsubrl
dec
lods
add
ret
add
je
inc
lds
dec
loop
imul
fyl2xp1
popa
into
mov
int
and
push
pusha
push
mov
add
jne
jnp
fldt
les
jbe
xor
movsb
aaa
jns
sub
jge
add
cmpsl
call
xor
inc
pushf
pop
sub
arpl
nop
adc
nop
mov
push
mov
cmp
sub
arpl
incb
ljmp
xchg
sub
ss
xchg
addl
dec
mov
pop
sbb
je
jmp
jecxz
shrl
add
and
popf
adc
pop
cmpsb
fiadds
stos
shll
xchg
push
rcrb
ret
lds
lret
dec
xchg
icebp
or
jbe
inc
push
dec
pop
inc
imul
fs
pusha
xor
into
dec
lahf
mov
mov
or
pushf
pushf
jno
push
enter
and
fucomi
lcall
xor
scas
fwait
les
or
cs
test
sub
adc
add
jo
fs
dec
icebp
mov
sub
cld
add
xchg
popf
call
add
ja
in
xchg
and
add
ss
pop
in
adc
test
jns
rorb
les
dec
add
mov
icebp
inc
sub
leave
xchg
stc
adc
inc
ret
jns
mov
mov
test
stos
jle
add
cmp
cs
xchg
add
jns
in
and
jmp
push
ret
mov
inc
mov
xor
push
push
icebp
adc
or
pushf
loopne
add
adc
push
inc
sub
pop
push
pop
arpl
aad
mov
mov
out
pushf
dec
dec
push
enter
add
fsubp
jno
sub
pop
das
andb
xlat
aad
and
popf
add
icebp
inc
fcompl
pop
les
or
ljmp
pusha
mov
popa
fstps
cmpb
and
xor
sub
or
mov
mov
rorl
cld
mov
pusha
mov
or
adc
jbe
sbb
gs
pop
mov
cmpsl
imul
add
dec
pop
pop
rorl
or
cmp
xor
and
push
sbb
inc
pop
push
jge
in
dec
xor
cmp
pop
int
gs
cmp
mov
outsb
psubsb
inc
mov
ljmp
sbb
mov
leave
and
and
xchg
mov
xchg
mov
dec
pop
les
add
imul
xor
and
pop
repz
sub
andb
les
sti
add
cltd
add
sub
jmp
stc
and
mov
addb
cs
and
mov
adc
adc
dec
mov
jo
cmp
popa
test
daa
sub
pop
pop
cmp
or
add
xchg
loope
lds
sub
jo
cmc
mov
call
rcr
add
mov
xchg
or
cmp
mov
jecxz
and
clc
or
inc
add
add
mov
loope
sub
pop
fcoml
pop
mov
mov
movsl
xlat
xchg
sub
push
out
jge
in
lock
pop
js
lahf
or
pusha
pop
dec
lds
jmp
pop
movsl
cli
stos
stos
int3
add
jne
in
push
jbe
cmc
sbb
rcr
outsb
jo
test
popf
movsb
pop
and
daa
out
test
lods
dec
orl
cmp
and
nop
insb
fistps
add
push
pusha
adc
gs
lock
xor
pop
adc
ljmp
out
pop
or
xchg
loopne
cmpsb
in
jae
lea
popf
test
push
cld
pop
cmpb
rol
add
mov
lret
inc
add
insl
mov
sub
push
jecxz
xor
out
shr
adc
push
cmpsl
roll
jmp
pushf
bnd
int3
or
out
adc
aas
mov
jecxz
mov
sahf
pusha
ficomps
arpl
stos
mov
ds
cltd
lret
mov
es
sbb
popa
jecxz
and
dec
push
aad
xchg
insl
neg
pusha
in
mov
nop
popa
or
inc
add
jnp
and
pop
lds
std
cmp
push
pop
add
xchg
pusha
push
adc
jmp
push
jl
add
mov
shll
outsl
inc
hlt
pop
insb
lahf
adc
mov
aaa
xchg
andl
cmp
in
aaa
daa
and
sub
push
dec
mov
pop
pop
sub
fwait
int
mov
lcall
jno
cmpl
rorl
and
stos
fisubrs
and
inc
mov
jg
ja
push
popa
mov
inc
sbb
mov
aam
adc
cltd
mov
push
cmp
add
mov
fs
je
gs
adc
inc
and
stos
leave
inc
sub
out
test
mov
inc
or
dec
xchg
int3
push
data16
nop
mov
cmpsb
dec
aaa
test
mov
scas
sub
enter
add
das
jmp
cmc
inc
push
nop
fwait
sbb
bound
cmc
dec
jns
arpl
mov
pop
rcrl
pop
pop
sbb
popa
jl
pop
imul
push
loope
aaa
add
ficomps
pusha
mov
xchg
in
mov
add
pop
jmp
or
rolb
or
mov
push
cwtl
inc
and
xchg
and
add
jmp
cmc
xchg
cld
pop
in
cmpsb
dec
loop
std
push
fimull
or
mov
cmp
imul
cmp
xchg
xchg
ret
adc
pusha
add
inc
insl
push
test
dec
mov
cmc
add
push
idivb
into
inc
pop
jns
pop
dec
aam
cmp
in
scas
or
sbb
adc
les
add
mov
mov
xchg
jl
dec
xchg
loop
cld
cld
and
js
xchg
insl
pushf
fs
pop
rcr
mov
je
add
xor
sbb
mov
mov
xor
aas
mov
sub
mov
push
mov
cmpsl
stc
les
sbb
daa
pop
lcall
mov
mov
mov
shll
xchg
jmp
ret
fnstsw
mov
push
push
jo
push
jns
xchg
into
inc
rcrb
movzwl
push
mov
daa
pop
push
sub
imul
inc
shrb
add
fnstsw
sar
push
push
pop
xor
iret
mov
fistps
xchg
cli
out
fdivs
jbe
pop
lds
jbe
or
jb
xorb
andb
shlb
ret
push
popf
iret
sbb
mov
xchg
mov
push
nop
mov
mov
push
and
pusha
xchg
dec
movsb
call
sbb
mov
xor
mov
sub
mov
stc
je
imul
adc
adc
jl
jmp
xor
sbb
sti
inc
sub
ret
jbe
cmp
jbe
push
dec
jbe
sbb
cmp
xchg
rcrl
jmp
fld
cmp
test
or
mov
loopne
push
xchg
neg
jo
adc
cmp
loop
pop
bound
mull
adc
pushf
jae
adc
out
lods
mov
arpl
int3
fisubs
repnz
loope
push
mov
cwtl
leave
rcrl
mov
ret
mov
cmp
push
inc
xlat
mov
pop
pop
fstpt
sbb
lcall
outsl
or
enter
ds
lret
jo
sub
lahf
mov
in
fld
xchg
push
fwait
add
or
jle
dec
mov
xchg
addb
adc
loope
push
push
inc
fisubs
push
or
clc
pop
shll
mov
adc
cmc
jp
es
mov
sbb
cmc
lea
sbb
or
cmpsl
test
ljmp
ss
pushf
das
push
mov
pop
lea
adc
not
pop
sub
and
sub
or
pop
imul
nop
cmc
mov
jno
pop
cmpsb
push
sub
mov
call
fsubrp
push
xchg
add
mov
xlat
stos
adc
mov
mov
xor
adc
sbb
into
jge
fldenv
cmc
push
mov
mov
add
mov
fdivl
jne
add
inc
enter
mov
mov
xor
fimull
cs
mov
xlat
enter
leave
fwait
mov
icebp
dec
and
pop
addl
arpl
sti
mov
mov
or
in
sahf
push
popf
inc
or
mov
xor
out
adc
adc
popf
adc
mov
inc
or
push
mov
adc
addl
pusha
push
jmp
insb
push
fnop
ds
jo
popf
sbb
xor
es
xor
enter
iret
dec
mov
push
sbb
popf
sub
repz
sbb
xor
or
into
lcall
mov
pop
xor
inc
sub
bound
xor
jp
jno
pop
push
jae
or
cmp
xor
push
movb
push
out
in
movsl
lods
jmp
inc
incl
add
addb
jp
pop
cmp
inc
xor
bound
mov
sbb
or
movsl
add
mov
inc
mov
mov
stos
mov
in
add
or
mov
dec
data16
pop
xchg
mov
push
jl
popf
jbe
add
pop
jmp
xchg
neg
jae
dec
insb
mov
mov
sub
xchg
mov
insl
adc
popf
mov
push
test
pop
pop
xchg
jns
mov
mov
cmc
sarl
sub
sbbb
push
or
popf
cmp
jecxz
lds
cld
lds
cmp
add
xchg
xchg
adc
sbb
es
sbb
rolb
popa
cmp
xchg
lods
das
jge
cmpsb
pop
testb
fsubrp
cmp
jmp
in
jbe
sbb
or
jae
or
popa
jl
pop
sbb
xor
adc
imul
inc
dec
add
scas
ljmp
push
ret
mov
pop
jle
aas
popa
adcb
jae
popf
loop
test
pop
sarb
mov
cvtps2pi
mov
mov
adc
push
xchg
popa
pusha
sbb
mov
add
dec
sub
pusha
cltd
push
loop
add
sub
popa
mov
xchg
sbb
adc
xor
pushf
xor
jecxz
xchg
xchg
add
mull
mov
data16
lock
push
push
outsl
shrb
sub
mov
add
push
sub
pop
add
or
mov
scas
jne
imul
sbb
xor
pop
int3
or
cmp
mov
cli
inc
and
lcall
lcall
xchg
into
stos
add
jmp
loope
aas
cmp
mov
fsts
mov
mov
aad
ret
movsb
sbb
nop
mov
push
pop
add
mov
pop
pop
es
xchg
aam
nop
mov
je
cmp
or
jg
loopne
imul
aaa
jno
ljmp
inc
out
sub
cmp
addr16
mov
adc
dec
add
mov
dec
xchg
mov
pushf
in
xor
bound
xor
mov
gs
xchg
jns
cltd
cmp
or
inc
sbb
push
xchg
into
push
adc
mov
dec
out
cmpsb
push
loopne
adc
add
mov
dec
lea
mov
push
loop
xchg
dec
xchg
int3
pop
addl
mov
mov
lret
adc
xchg
int
pop
ret
les
xchg
enter
mov
daa
sarl
lret
mov
xchg
mov
lcall
pop
mov
popa
or
cltd
fdivr
jl,pt
sbb
popa
push
push
pop
cwtl
or
xchg
mov
popa
repz
jo
jns
or
xchg
or
je
push
add
xchg
dec
stos
or
shll
les
jne
in
sub
or
cmp
pop
inc
push
cli
shlb
add
push
dec
call
push
pop
loope
sub
jb
or
mov
jbe
faddl
add
shrb
and
xchg
and
or
cmp
out
or
dec
sbbl
pop
insb
inc
adc
out
lds
cmp
das
or
mov
mov
or
pushf
and
std
mov
sub
loope
add
add
imul
adc
dec
sbb
aas
xor
jno
mov
ret
insb
xchg
or
iret
iret
pusha
mov
test
aad
jmp
push
mov
repnz
or
inc
ret
lcall
or
scas
cmc
test
stos
add
add
xor
cwtd
lahf
dec
push
ret
lcall
add
sahf
je
loopne
xchg
mov
add
mov
sbb
mov
pop
mov
jns
cs
and
add
stos
xor
faddl
cld
xchg
add
xchg
mov
cmpsb
gs
loopne
pusha
pop
les
clc
add
push
outsl
mov
sbb
push
or
in
call
psraw
cmp
xchg
xchg
jecxz
scas
loope
adc
imul
pop
add
jo
mov
popa
and
pop
in
pusha
push
mov
mov
jne
je
jno
push
xlat
fs
repnz
add
sub
add
adc
xor
pop
inc
pop
add
shrb
sbb
jecxz
dec
lret
dec
jae
fdivrs
adc
xlat
test
loope
pop
adc
popl
mov
add
sbb
push
ja
insb
pop
ret
out
stos
andb
xor
roll
inc
subb
xchg
add
dec
add
mov
ja
mov
mov
cld
pop
inc
sub
add
add
mov
cltd
jns
pop
rcll
movsl
pop
insl
add
push
subb
stc
or
jp
imulb
mov
mov
pop
hlt
lret
les
fldl
xor
push
popf
jno
sub
in
into
into
mov
jae
imul
subb
popa
push
mov
es
out
pop
cmpsl
jnp
adc
shrb
clc
adc
dec
sbb
ret
lods
cld
push
imul
daa
jo
bound
aaa
repz
sbb
imul
movsl
jecxz
jbe
add
xor
mov
int3
stc
nop
es
imul
lods
push
mov
mov
cmp
add
cs
or
cmp
icebp
dec
push
gs
movsl
outsl
cmp
push
pop
lcall
fwait
adc
xchg
cmpsb
sub
mov
or
lret
fstl
or
xor
inc
into
dec
or
xor
pusha
add
jmp
test
add
fcoml
pop
sbb
movl
or
popf
test
repz
rclb
addr16
add
dec
out
mov
push
pusha
mov
out
loopne
jl
rcr
or
dec
adc
inc
xlat
push
mov
xchg
mov
xchg
sbb
push
mov
js
inc
dec
xchg
mov
outsb
jmp
pop
scas
jecxz
jle
fiadds
sbb
cltd
jmp
xor
xor
bound
jbe
hlt
add
call
test
lret
fstpt
mov
and
lret
cmpsl
inc
add
gs
add
xchg
enter
adc
mov
mov
mov
and
cmp
dec
out
loopne
icebp
faddl
sarb
mov
pusha
clc
xchg
dec
mov
sub
mov
fmuls
pop
mov
dec
jge
out
xor
dec
jo
or
mov
repnz
in
out
add
mov
dec
das
rolb
fcomps
cwtl
test
mov
and
push
sub
fisttpl
loop
add
insl
mov
and
das
xchg
and
mov
fnstsw
shrl
mov
add
adc
adc
out
fists
sbb
mov
mov
adc
notb
loopne
or
adc
add
inc
pop
pop
mov
and
xchg
inc
push
jmp
imul
mov
pop
xchg
xchg
adc
push
dec
movsl
add
push
dec
mov
and
pop
jae
js
insb
pop
addps
pop
fstl
or
cmp
or
mov
das
mov
pop
lcall
or
popf
add
add
daa
jg
push
sub
sub
sbb
das
rcrb
pop
add
sbb
and
lret
mov
cld
lahf
insl
pop
les
mov
movsb
pop
add
inc
cmc
xchg
xchg
push
sub
cmp
adc
and
roll
in
pop
cltd
adc
mov
mov
mov
sbb
mov
xor
fwait
rorl
push
aaa
sbb
sub
jns
das
aaa
mov
movaps
shll
stc
jl
cli
jns
jo
mov
or
inc
mov
cmp
test
pop
adcb
fidivrs
les
cwtl
mov
dec
pop
repnz
shr
push
adc
adc
imulb
mov
and
rcrb
adc
loop
inc
lret
pop
dec
jp
popf
and
jns
mov
fdivr
in
mov
mov
ret
mov
inc
orb
mov
mov
mov
movsb
adc
mull
cmpsl
sbb
pop
jmp
aad
test
push
mov
lcall
aad
data16
mov
or
ret
pop
pop
imul
mov
mov
xor
icebp
xlat
jo
and
sub
dec
cmc
int
jg
sub
jbe
xchg
dec
lock
daa
push
nop
jp
inc
or
inc
cli
mov
ficompl
dec
push
enter
in
push
add
nop
addb
pop
faddl
sub
in
rcrl
cmpsb
icebp
mov
add
out
std
ljmp
xchg
ret
in
lea
add
lods
bound
pusha
repz
push
pop
mov
or
mov
xchg
dec
call
lods
pop
subb
or
adc
mov
dec
mov
scas
or
fcmovbe
xor
cld
and
les
mov
ss
jns
sbb
ret
lret
pop
mov
sub
sbb
push
loop
add
jnp
loopne
imul
adc
sub
adc
mov
push
xchg
push
xor
fadd
add
and
or
pop
pop
sbb
roll
sbb
pushf
in
mov
frstor
inc
bound
xchg
popa
dec
push
mov
dec
sub
in
dec
mov
testb
subb
pop
xchg
aam
dec
xor
mov
jb
mov
inc
imul
pop
aad
push
das
fiadds
xchg
mov
adc
xchg
cmp
loopne
xchg
nop
jle
dec
pop
xchg
sub
mov
push
and
ds
push
push
mov
push
ljmp
inc
in
and
xchg
out
dec
push
sbb
clc
sahf
cmp
cld
out
int3
cs
or
int
shlb
pop
sbb
sbb
mov
jo
jno
dec
pop
fiadds
mov
js
sub
fsubs
and
out
add
addr16
test
xchg
add
icebp
subb
xor
imul
adc
fisubs
adc
push
pop
aaa
adc
xchg
mov
jl
sbb
negl
jmp
pop
sub
inc
dec
lcall
cltd
inc
loopne
out
nop
in
dec
jne
loopne
lds
stos
enter
mov
mov
pushf
jge
out
rorb
inc
loop
sbb
xor
das
jbe
add
aad
iret
adc
add
xorl
push
mov
add
xchg
cmp
adc
das
mov
add
negb
rorl
lea
adc
and
les
or
stos
or
icebp
dec
add
mov
xor
das
mov
mov
shlb
xor
in
stos
lods
pop
sbb
add
inc
lds
mov
adc
add
add
push
ss
cmpsl
push
and
mov
pop
lea
das
adc
or
dec
rorl
inc
jl
jmp
mov
shlb
out
das
call
shl
jp
cmp
inc
push
push
mov
inc
and
pop
mov
push
pusha
mov
add
push
jns
xchg
out
add
jae
adc
and
popa
push
jmp
imul
mov
inc
sbb
addl
dec
and
popf
xor
xor
mov
mov
sahf
xor
int
fdivrs
push
mov
add
xchg
mov
mov
pop
inc
push
mov
xor
cwtl
add
and
out
jle
ret
xor
repnz
cmpl
cmp
hlt
ja
pop
pop
sub
sub
sbb
jae
xchg
stos
add
jl
add
loope
or
decl
aaa
data16
mov
testb
mov
jecxz
sub
test
pop
xor
jecxz
mov
xchg
dec
out
mov
mov
scas
cmp
pop
adc
push
jmp
shll
add
add
mov
pop
mov
pop
adc
jns
and
mov
pop
and
lret
lock
rolb
int3
pop
mov
js
fldenv
imul
or
or
pop
stos
fldcw
and
add
push
push
mov
inc
xchg
mov
cmp
lock
cs
add
sub
orl
js
jge
aam
pop
cvtpi2ps
xchg
icebp
xchg
mov
ds
insb
icebp
repz
push
or
lea
xchg
pop
lods
cmp
mov
bound
sahf
cs
cmc
push
icebp
sti
inc
adc
popa
cmpsb
sbb
add
popf
mov
and
fsubrl
push
xchg
sbb
mov
inc
je
add
xchg
mov
faddl
push
mov
adc
das
nop
icebp
or
sub
add
pop
fld
orb
push
jg
es
inc
or
and
dec
mov
pop
popf
gs
sub
jecxz
add
test
mov
mov
nop
js
xor
sti
data16
loopne
xchg
popl
sbb
std
adc
adc
ljmp
adc
and
aam
xchg
cmpsl
and
and
nop
and
aaa
das
adc
push
stc
add
jb
jne
scas
mov
mov
test
jne
inc
pop
push
push
lcall
jae
and
add
dec
repnz
loop
sbb
sub
std
push
pop
inc
mov
or
push
loop
ss
mov
adc
popa
lods
imul
stc
pusha
mov
cmp
roll
push
shll
inc
push
sub
rolb
or
lds
cli
mov
out
sub
enter
pop
add
cmp
ficomps
out
int3
call
or
dec
push
mov
xchg
cmpsb
inc
xor
stc
and
push
xor
jmp
clc
je
outsb
fisubs
inc
xor
or
adc
pushf
les
jmp
sbb
push
pop
call
test
ss
push
xor
fisubrl
test
jae
push
and
cmc
add
xchg
imul
sbb
xchg
inc
ret
mov
add
mov
dec
jo
sub
pop
adc
cld
sub
sar
mov
ret
cli
pushf
mov
out
les
neg
int3
adc
cwtl
add
sub
andb
mov
jecxz
jmp
push
mov
js
jbe
and
scas
add
push
and
mov
popa
pop
rcrl
out
add
pop
mov
push
push
adc
rclb
mov
add
mov
pop
mov
xchg
adc
add
popf
xchg
mov
das
xor
cs
mov
push
or
fcoms
add
repz
cld
icebp
jecxz
call
mov
sbb
add
cltd
xchg
cmp
xchg
popf
or
stos
xchg
cmc
mov
cmpb
jbe
jns
mov
loope
mov
ds
scas
add
pop
inc
lods
rcrb
adc
cld
pop
call
out
leave
sub
dec
push
loopne
out
stc
scas
pop
subb
test
fistps
lds
test
mov
sbb
xor
stos
bound
pusha
mov
pop
aas
shr
pop
dec
in
loope
sub
mov
push
or
mov
ljmp
rclb
fisubs
mov
jo
bound
cmp
sub
fcomip
jbe
push
popf
cmp
dec
push
pusha
mov
movsb
stc
adc
les
adc
lods
cs
popa
mov
adc
push
push
inc
roll
mov
cld
xor
cmpsl
std
jno
icebp
sub
ja
divl
pushl
faddl
pop
popf
cwtl
es
nop
add
xor
cmp
imul
inc
adc
les
add
stc
xor
pop
sub
je
mov
xchg
cmpl
xor
sub
push
scas
outsb
add
push
jnp
movsb
lods
aas
in
mov
stc
lods
jnp
xor
dec
cmp
mov
jns
mov
sub
gs
rcrb
pop
in
pusha
divb
xor
mul
wbinvd
test
inc
cmp
add
mov
pop
jge
xor
jnp
and
scas
push
fisttpll
pop
mov
dec
xchg
cmpsb
test
adc
push
and
stc
outsb
mov
fs
lret
movsb
dec
xchg
dec
sbbb
sub
jmp
adc
adc
pushf
test
xor
vdivss
rcl
lret
add
loope
lret
xchg
inc
mov
clc
adc
mov
mov
clc
jae
enter
gs
push
pop
adc
mov
loopne
cmp
sbb
push
clc
call
gs
inc
mov
add
and
cmpsb
push
add
stc
popf
push
data16
cmp
rcrb
and
mov
data16
sub
jmp
fcmovnbe
lahf
mov
xlat
mov
or
pop
add
xchg
xchg
and
cld
pop
sub
outsb
cltd
jo
mov
outsb
jp
sub
fldenv
inc
or
pushf
fiadds
add
jno
cld
jb
inc
dec
jmp
pusha
push
aam
stos
jno
xchg
adc
idivl
inc
and
mov
mov
mov
jbe
inc
daa
rcll
faddl
jle
ror
mov
ds
pusha
fisubrs
push
mov
mov
cmp
add
outsl
push
aam
cli
cs
xchg
push
mov
gs
mov
pop
xchg
js
mov
lcall
xor
addb
cmp
call
ja
xchg
mov
incb
popf
loope
mov
das
je
mov
fs
pop
aam
insb
inc
or
rcll
sbb
lret
add
sub
cs
mov
pop
iret
pop
outsl
and
arpl
clc
and
xor
dec
scas
in
into
dec
dec
int
cmp
scas
xor
aam
dec
inc
les
or
inc
cwtl
sbb
jp
mov
stos
lahf
mov
push
movsl
add
push
leave
cwtl
mov
roll
test
inc
shrl
adc
dec
push
divb
dec
xchg
mov
pop
xchg
sub
cld
and
add
push
data16
ror
popf
mov
sub
ret
push
pop
jmp
dec
scas
jnp
sub
xchg
or
adc
adcb
jno
add
es
or
movsl
aaa
add
mov
das
dec
inc
les
outsl
cmp
insl
pop
inc
or
aas
pop
testl
xchg
loope
sub
imul
mov
mov
cmpsb
cmp
popf
xor
pop
es
add
test
push
test
adc
gs
xor
or
mov
mov
add
lahf
sar
and
xchg
dec
js
xor
mov
outsl
rolb
lret
mov
pop
dec
push
adc
pop
shll
das
xor
call
cli
add
push
pop
push
mov
add
ret
dec
dec
xor
jo
addr16
pop
jmp
xor
cwtl
inc
popf
adc
push
jmp
sub
mov
insl
adc
out
pop
icebp
add
mov
gs
add
pop
pop
mov
xchg
lock
incl
push
push
mov
icebp
add
insl
xchg
aad
push
fsubs
sbb
adc
adcb
je
sbb
inc
sub
fstpt
mov
cmp
mov
adc
mov
pop
daa
adc
and
rol
ficomps
mov
sbb
push
push
add
sub
les
mov
imul
mov
adcb
mov
add
cs
jg
xchg
add
cld
push
xchg
cli
or
cmp
dec
fnstsw
fdivl
test
pop
push
push
addl
xor
mov
adc
cwtl
repz
add
push
repnz
add
push
pop
aad
xchg
pop
xor
int
inc
or
jmp
sub
mov
mov
fwait
aam
popa
jecxz
cmpsl
add
push
xchg
push
stos
adc
cmp
dec
leave
push
out
andnps
shlb
pushf
adc
mov
mov
jle,pn
xor
int
mov
adc
lods
enter
xchg
adc
out
mov
xlat
push
pusha
jg
mov
stc
out
mov
dec
hlt
add
pop
es
and
pusha
icebp
ljmp
add
pop
mov
popa
pusha
mov
in
arpl
push
add
jo
jle
inc
aaa
sub
xchg
jnp
cmc
in
adc
and
mov
jbe
imul
sbbb
das
int
pop
nop
popf
sbb
sahf
int
jns
ds
clc
dec
add
push
add
dec
daa
lds
cmp
adc
dec
and
popf
cmp
xchg
pop
lret
push
mul
mov
sub
sbb
xor
sbbl
xor
mov
mov
cltd
lock
sbb
dec
mov
rorb
mov
inc
or
mov
push
and
dec
pop
int3
enter
cmc
lea
add
add
jmp
xchg
jns
test
adc
sub
repnz
and
xchg
out
cli
dec
mov
sub
fistpll
cli
push
addl
or
lock
sub
add
scas
mov
jge
or
mov
or
mov
xchg
sbb
stos
sarb
int
pusha
lcall
popa
stc
mov
mov
loopne
or
add
mov
shl
sbb
mov
or
scas
mov
in
pusha
xor
mov
jge
loope
sub
flds
or
push
xchg
in
add
pop
in
sbb
flds
and
jo
cwtl
pop
repnz
mov
and
xchg
les
push
in
nop
add
daa
in
int3
movsl
cld
dec
pop
fucomip
enter
insl
cld
mov
xor
flds
out
pop
mov
dec
lods
adc
test
in
xchg
test
cmp
loope
sub
adc
je
inc
dec
cld
sbb
xchg
cmpsb
mov
leave
cmpsb
popa
jnp
scas
insl
jns
daa
ja
sub
mov
test
idivb
addr16
shll
adc
pop
mov
mov
add
iret
pop
imul
inc
jae
int3
inc
add
dec
xchg
outsb
pop
adc
push
add
sbb
call
adc
call
mov
or
shrb
inc
jmp
dec
mov
xor
fucomi
subl
fiaddl
or
dec
mov
dec
bound
pop
iret
or
movsl
cmp
cmp
sub
add
fs
je
mov
mov
and
xchg
mov
sub
mov
js
sbb
jns
sarb
mov
add
or
pop
sub
std
and
repnz
lock
mov
pop
std
add
or
mov
iret
mov
mov
outsl
add
xorl
mov
test
jmp
and
iret
les
lret
jmp
sub
jo
jae
test
jle
sbb
push
sbb
pop
jp
pusha
popf
dec
sti
pop
jl
mov
jo
lahf
out
popa
ja
jle
scas
push
pop
xchg
orl
mov
mov
cltd
sub
xchg
mov
dec
aam
xchg
push
pop
jo
mov
add
dec
fistps
push
aaa
pop
add
jns
ljmp
pop
scas
lcall
push
pop
icebp
popf
jg
sbb
inc
add
xlat
dec
push
pushf
enter
mov
sub
filds
jg
add
sub
or
xchg
sbb
daa
cmp
mov
mov
mov
test
add
xchg
mov
xchg
pop
adcl
andb
xor
test
sub
insl
xor
ss
push
fldenv
mov
jnp
imul
sbb
dec
cld
add
rolb
enter
mov
mov
subb
mov
and
sub
clc
add
aam
mov
push
nop
cmc
sbb
pushf
add
js
sub
and
pop
fisttps
push
cld
and
mov
js
inc
sub
dec
inc
rorb
add
gs
cmpsl
add
xorl
movsl
cmp
popf
sti
or
fidivrs
push
jp
cmpsb
or
scas
dec
mov
ja
sbb
aad
enter
and
outsb
into
pop
mov
and
cmp
lcall
sub
cmp
and
imul
adc
xchg
xlat
das
sub
rolb
and
sub
pop
int
dec
imul
mov
roll
cltd
loope
mov
add
popf
shll
mov
cli
frstor
mov
loop
add
add
add
fadd
fisttpl
shll
mov
jp
jno
pushl
test
pop
push
iret
pop
jge
add
push
push
push
jge
pop
pop
pop
mov
ficomps
es
enter
push
xor
push
mov
mov
shlb
jns
mov
push
or
mov
mov
mov
xor
adc
sti
lods
adc
fdiv
rorb
add
sub
sbb
adcb
or
daa
jae
add
jne
adc
lret
and
cmpsb
xchg
lcall
inc
dec
cmpsl
add
scas
je
push
add
dec
pop
cmpsb
and
or
push
inc
out
mov
ljmp
les
stc
pop
mov
adc
test
and
loop
cmpsl
xor
ret
push
mov
lret
stos
pop
cli
je
mov
cmp
inc
aam
adc
sbb
out
fdivrl
subb
filds
mov
pop
test
and
out
cmp
mov
test
gs
out
lods
sbb
dec
mov
mov
jns
cmp
jae
pop
outsl
cmp
push
add
cmc
mov
stos
or
repz
jns
add
cmp
mov
mov
lret
push
pusha
imul
mov
movsl
clc
aas
xor
push
dec
jl
jmp
std
loopne
movsb
call
stc
push
dec
dec
daa
enter
decl
mov
add
sbb
movsb
loop
dec
add
mov
rcl
cmpsb
xchg
sub
mov
movl
fs
jno
adc
les
mov
iret
lds
nop
pop
shrb
orb
jecxz
jno
inc
or
rcll
in
jnp
sub
pop
jmp
adc
mov
adc
dec
inc
mull
lock
fisttpl
jmp
shlb
cli
mov
sbb
ret
pop
ds
popf
xlat
inc
xchg
daa
add
cs
adc
xchg
divb
lcall
in
daa
shrl
popf
sbb
fistl
mov
push
mov
adc
lods
push
mov
pop
fstl
mov
addps
filds
je
lcall
mov
adc
or
sar
jns
inc
mov
xchg
adc
push
out
loopne
mov
addl
je
rcrb
mov
push
mov
iret
cmp
or
cmp
sub
mov
pusha
iret
push
mov
mov
loopne
fistl
xchg
hlt
sbb
sub
jg
push
jne,pn
imul
cmpsb
shll
mov
stc
add
sub
xlat
cmp
cmpsb
stos
fisubs
and
xchg
mov
mov
mov
insl
int
outsb
cmpsb
js
shrl
repz
jl
inc
xchg
fldcw
jnp
add
mov
lds
or
popf
inc
clc
jge
mov
fildl
and
stos
or
xchg
and
inc
inc
add
push
mov
pop
xchg
subb
out
pop
push
mov
xor
das
inc
loop
jno
out
ret
fs
inc
sub
ljmp
add
lcall
mov
nop
out
fistl
or
sbb
insb
sub
orl
mov
popa
jmp
adc
dec
add
push
push
clc
in
dec
test
add
mov
popf
mov
or
fld
in
je
jnp
popa
mov
jne
das
cwtl
insl
test
gs
pusha
push
dec
push
inc
mov
add
xchg
mov
loope
xlat
jo
jl
popa
add
pop
pop
fs
or
push
faddl
pop
scas
sbb
pop
cwtl
aad
mov
pop
sub
and
negb
add
lea
cmp
mov
pop
mov
mov
pop
and
pop
outsl
jno
hlt
add
dec
std
shll
dec
and
xchg
jecxz
push
and
sbb
ds
lcall
mov
lock
test
loope
pusha
xor
dec
in
imul
sub
add
and
imul
repz
jge
fcomps
rolb
lret
cmc
into
mov
adcb
jecxz
les
sub
pop
pop
imul
dec
xor
rol
movsb
sbb
cld
and
sarb
pop
sub
mov
mov
fwait
scas
jnp
pop
test
add
addl
jbe
add
fnsave
cmp
dec
add
pusha
jmp
lahf
insl
mov
cmp
jg
cs
cli
and
pusha
aaa
out
xlat
out
jl
sub
inc
adc
xchg
jbe
addb
rol
aam
into
mov
mov
mov
add
jno
mov
aas
jp
sub
push
les
lea
add
pop
xchg
push
out
pop
outsl
jae
mov
out
int
mov
xchg
jo
js
fwait
dec
or
xchg
out
loopne
and
jb
adc
sub
in
test
jmp
jno
adc
xor
mov
and
mov
add
pop
insl
jmp
aas
sahf
and
inc
push
mov
sti
in
add
push
fcmove
pop
fisttpl
push
xor
xor
mov
push
jle
xor
and
pop
or
cmp
xchg
cmpl
sarb
andb
xchg
xorb
dec
bnd
repz
adc
rcl
cmpb
xor
and
dec
xchg
mov
dec
testb
pop
sub
adc
jnp
pusha
icebp
testl
mov
jle
loop
out
mov
call
and
pop
pop
cmp
and
subb
inc
js
mov
nop
push
jg
xchg
adc
stc
cs
sub
or
xchg
movsl
pop
or
jbe
add
repz
add
inc
lret
adc
xchg
push
add
or
cld
jo
jne
jmp
jns
mov
or
std
jo
pop
push
and
jb
pop
add
mov
xchg
pusha
jp
fstp
jne
orl
adc
adc
mov
test
add
xor
mov
sub
mov
and
sbb
jge
mov
loop
popa
lea
push
jbe
adc
enter
jns
push
dec
xchg
add
mov
mov
jne
add
popf
sbb
popa
cld
fstpl
xlat
xchg
in
out
dec
ffreep
or
dec
mov
repnz
dec
mov
jmp
mov
or
faddl
pop
repz
pop
ficoml
jne
xchg
addl
sub
add
add
pop
adc
cmp
add
scas
pop
xor
pusha
imulb
add
test
popa
pop
push
push
add
sbbb
push
jmp
sub
sub
mov
dec
call
mov
xor
cld
xchg
ret
aam
inc
mov
cmc
pop
add
xchg
push
int
fwait
cmp
dec
xor
leave
xor
fnstsw
add
adc
pop
mov
sub
xor
mov
xchg
pop
inc
pusha
xor
gs
pusha
in
dec
scas
gs
addr16
adc
mov
mov
xor
lcall
and
pop
dec
pusha
cwtl
jmp
cmp
mov
inc
negl
inc
sbb
out
imul
xor
push
mov
notb
sbb
mov
arpl
les
das
das
call
jle
jns
pop
jb
xchg
adc
jl
add
dec
pop
or
outsb
cmp
mov
sbb
dec
test
pop
mov
sbb
faddl
jns
add
mov
dec
push
add
sub
cmp
push
push
or
ds
add
xor
mov
jge
insl
add
movsl
sahf
shrb
push
or
inc
lcall
xor
loopne
push
xchg
sub
cmp
pop
pop
mov
mov
dec
dec
ret
fbstp
dec
movsl
push
movsb
sub
dec
xor
sbb
movsl
cmpsb
and
jnp
push
popf
sbb
imul
neg
negb
ds
sub
or
mov
pop
push
fsts
iret
cmp
add
callw
fsubs
mov
inc
pusha
push
add
je
mov
rorb
sub
dec
lea
hlt
inc
dec
mov
jb
rorl
pusha
push
and
addr16
mov
ja
sarb
pop
test
jl
in
sub
mov
dec
jmp
pusha
push
add
lret
pop
add
inc
popa
inc
adc
sbb
adc
testb
push
cld
cld
jno
pop
jmp
mov
shll
into
or
xor
repz
cmpsl
xor
decl
push
push
pusha
popa
pop
pop
std
push
das
out
and
sbb
cmp
or
stos
pusha
pop
out
mov
xlat
ljmp
call
les
daa
and
ds
mull
add
fs
add
sub
nop
stos
test
lods
sub
sub
fildl
ret
pop
out
xchg
jl
cmpl
mov
push
add
pop
movsb
popa
sahf
sbb
sub
dec
nop
orb
sahf
and
cmp
adc
xor
out
loope
xor
or
adc
cmp
jbe
mov
add
dec
imul
add
lret
add
test
cld
inc
push
push
pusha
clc
sub
call
mov
mov
fistps
jle
sub
fcmovu
pushf
addr16
mov
movsl
jmp
ds
add
or
fdivr
xchg
icebp
shll
je
pop
jmp
cmp
xor
sbb
cmc
jb
adc
jp
mov
loopne
push
jbe
out
nop
xchg
sti
jbe
xor
push
add
mov
mov
mov
ret
pop
leave
mov
lea
leave
sbb
mov
aaa
xlat
add
jmp
mov
lods
pop
and
test
push
xor
add
stc
inc
sbb
nop
test
jb
mov
mov
or
js
add
inc
bound
jne
andl
insl
mov
movsl
xchg
jnp
lret
clc
xchg
adc
sbb
rol
popf
cltd
pop
adc
repz
loop
ret
repz
xchg
xor
andl
and
lock
sbb
hlt
add
les
les
inc
sub
mov
ret
mov
inc
mov
ret
sub
out
adc
daa
in
mov
mov
shr
aad
adcb
cmp
sub
push
or
addb
shll
sbb
mov
je
orb
gs
sub
negl
filds
mov
sub
adc
cmp
or
xchg
push
pusha
xor
je
psubusb
and
xor
push
enter
outsb
and
sbb
sub
xchg
inc
or
cmpsb
scas
pop
jmp
mov
popf
loope
pop
lods
jo
sub
dec
sar
in
lret
adc
mov
push
das
mov
add
les
test
shlb
out
adc
dec
jl
jge
lods
fimuls
sbb
sbb
lcall
adc
mov
test
cli
testb
mov
or
ret
sub
jo
ficoml
scas
add
xor
clc
and
inc
insl
and
std
xorb
adc
adc
cli
addr16
jbe
daa
mov
fs
inc
cmp
mov
clc
adc
pop
jb
adc
sub
push
and
punpckhwd
test
and
jno
add
push
pushf
fsubrl
jns
je
dec
call
push
insl
pop
fs
pusha
lock
jp
icebp
push
or
in
nop
sbbb
call
jg,pt
mov
mov
daa
in
jle
jno
lods
cmp
mov
adc
mov
jo
xchg
cmp
jb
aaa
pop
cmp
push
add
cmpsl
and
enter
push
lcall
xor
daa
jmp
in
add
jne
out
es
xor
push
add
xchg
lock
cmp
sub
and
outsl
mov
loop
mov
cmpb
push
in
stos
pop
xchg
js
jnp
data16
je
mov
pop
mov
lock
inc
rolb
je
pop
add
push
adc
js
inc
fidivrs
pop
pop
add
xchg
mov
lret
data16
xor
stos
adc
xor
push
or
repz
lcall
rorb
fcomi
adc
std
add
lds
push
mov
jae
rcll
mov
aam
push
ret
andb
sar
cmc
push
mov
mov
push
pop
pop
addr16
mov
inc
aaa
jns
sub
xchg
cmp
mov
popa
xchg
mov
les
scas
and
jmp
mov
push
sbb
xchg
pop
xchg
hlt
or
cmp
xchg
or
xchg
add
sub
add
cmp
icebp
out
je
imul
jne
push
mov
int
rorl
push
mov
add
pop
les
js
das
add
xchg
daa
cltd
dec
jne
add
insl
pop
cmp
repnz
jb
call
stos
sub
cwtl
pop
lahf
sub
inc
inc
or
nop
or
add
sbb
cmp
jle
push
movsl
in
add
adc
jmp
notl
stos
cmp
push
mov
scas
test
cmp
add
push
mov
movl
clc
jnp
push
inc
xchg
test
fptan
xchg
pop
mov
adc
iret
std
push
lods
sub
adc
out
in
aaa
sbb
mov
mov
sub
inc
std
cmc
cmp
jo
cli
mul
push
iret
std
pop
xchg
shl
mov
mov
adc
test
xchg
and
jne
mov
dec
push
pop
mov
outsb
rorl
jle
pop
hlt
out
add
cmp
mov
das
pop
lahf
ror
movsl
in
sbb
jge
mov
pusha
scas
sbb
lahf
add
pop
sub
mov
dec
fmull
js
mov
imul
sub
in
inc
jecxz
sbb
add
clc
push
je
pop
nop
inc
and
add
jo
push
test
add
xchg
ljmp
loop
add
adc
faddl
call
test
pop
sub
sub
xchg
sbb
shl
push
mov
jbe
cmp
addl
in
sbb
loopne
mov
cltd
add
xchg
imul
lods
test
push
adc
fimull
pop
iret
test
jno
jmp
or
inc
test
das
clc
dec
sbb
repnz
in
mov
inc
push
add
rep
sub
pop
fdivrl
shl
loope
jnp
ja
jg
imul
in
lcall
mov
in
loopne
enter
cmp
adc
pushf
pop
mov
push
leave
pop
rcr
cmpsl
pop
stos
xor
or
cmp
pop
pop
mov
mov
xor
addl
inc
stos
sbb
xchg
xor
adc
call
mov
lea
mov
add
push
test
dec
stos
lea
push
fsubp
in
loopne
fidivrs
fstpt
push
stc
pop
test
flds
add
mov
sbb
jnp
inc
cmp
inc
or
loopne
jno
cli
dec
add
xor
cs
popf
jns
push
adc
add
push
lahf
add
les
andl
dec
loopne
dec
pop
jecxz
sub
data16
mov
mov
jecxz
pop
lret
push
mov
dec
add
loope
jo
int3
push
mov
add
xor
push
ss
mov
add
out
cmpsl
jecxz
mov
mov
lcall
faddl
push
imul
pop
adc
mov
mov
rol
shlb
out
aas
add
push
adc
mov
and
ljmp
das
movsl
scas
add
mulb
mov
adc
xchg
stos
mov
je
imul
or
je
test
or
mov
pop
fwait
scas
enter
cmp
vmwrite
shl
push
xor
or
cmpsb
mov
gs
ljmp
inc
add
inc
arpl
jne
mov
shl
pop
movsb
stos
stc
mov
inc
or
daa
movsl
push
mov
sbb
pop
xor
mov
gs
js
js
outsb
dec
add
pop
xor
mov
and
add
in
lret
adc
shrl
divl
loop
xlat
in
mov
sbb
mov
loope
mov
xchg
add
add
sahf
xor
andb
stos
or
popf
adc
sarl
and
fucom
xchg
push
and
incl
orl
clc
pop
mov
sbb
sub
js
xchg
add
xor
ljmp
loope
pop
sbb
adc
xchg
adc
scas
mov
lahf
pop
adc
cwtl
sub
or
and
and
adc
push
aam
loop
add
test
notb
rol
sub
sbb
sbb
cmp
dec
aaa
out
pop
mov
and
test
mov
xchg
cmc
lods
pop
nop
and
pop
fsubrl
sub
orl
fcompl
aas
and
add
adc
test
aam
inc
cmp
popa
nop
jnp
jo
sar
cmpsb
pop
cltd
sti
ret
jo
push
testb
mov
test
sub
das
into
add
fnstsw
xchg
imul
mov
add
lock
sub
lret
jno
xchg
and
fnstsw
aas
or
add
sbb
pop
dec
nop
pop
mov
stos
dec
sbb
sbb
mov
fcoms
daa
cmp
jae
sarb
mov
out
cmp
js
sbb
jmp
add
ret
xor
hlt
add
cmp
lahf
test
pop
in
sub
stc
push
and
mov
xchg
xor
in
mov
cmp
or
fwait
lds
sbb
cli
loop
sub
inc
in
pop
popf
cmpsb
xor
push
and
lods
adc
out
xor
pop
sbb
adc
mov
aaa
je
cmp
das
xchg
out
mov
xor
fidivrl
cmpb
pop
sub
push
ret
jle
jbe
cmp
arpl
sub
popa
jmp
cmpb
jne
pop
lea
pop
mov
inc
inc
leave
pop
mov
cmp
or
pop
cli
lock
xor
push
xchg
adc
adc
sub
xlat
mov
jno
pop
hlt
and
jmp
test
mov
add
push
ret
fidivrs
xchg
fs
pop
bound
adc
sbb
add
jl
add
sub
add
fnstcw
cmc
dec
cmpsb
push
add
xlat
add
repnz
inc
addr16
cs
mov
dec
cwtl
jge
inc
scas
jnp
sub
shll
js
fldcw
dec
mov
add
mov
dec
std
aam
xchg
add
mov
dec
mov
mov
add
stc
lcall
ja
repnz
sbb
inc
fiaddl
xor
xor
ds
dec
sub
in
mov
jmp
jbe
mov
loop
ficoms
adc
mov
fsubs
add
sti
bound
and
adc
fmuls
dec
test
xor
out
fmuls
mov
cmpsb
dec
psrlq
in
popa
add
sub
inc
mov
call
mov
pusha
add
inc
jg
outsb
pop
je
mov
push
jne
pop
jo
popf
push
sub
notb
xor
or
mov
ds
cld
adc
mov
mov
das
bound
cmp
add
or
ja
int3
roll
cmp
mov
add
sti
dec
lret
lea
adc
pop
pusha
or
call
jge
inc
mov
mov
mov
mov
daa
jbe
push
stc
test
fsubl
jge
mov
in
repnz
push
dec
sub
fwait
sub
popf
mov
xchg
loop
add
sahf
push
and
adc
movsl
out
xchg
jbe
popa
and
cmc
popa
mov
sub
fsubp
or
pop
push
sub
sbbb
xchg
and
add
push
jl
out
dec
add
mov
fsubrs
pusha
add
xor
cmp
loope
fisubrl
cmp
push
mov
sti
int3
jge
add
and
or
insb
mov
dec
pushf
stos
orb
hlt
jmp
jb
push
js
pop
test
mov
stos
mov
jnp
fwait
pop
ljmp
ss
xchg
jle
insl
fs
mov
test
sahf
push
push
add
dec
mov
add
int
xchg
add
or
mov
add
adc
rclb
js
outsb
add
pop
std
into
cmp
dec
or
imull
push
inc
xor
jmp
inc
roll
stos
xchg
and
sbb
xchg
stos
and
scas
sbb
loope
ds
daa
jl
pop
test
or
adc
fstl
rclb
adc
cltd
lods
jmp
addr16
sub
jmp
mov
pop
int3
mov
insb
xlat
sbb
mov
sbb
add
jne
std
mov
dec
mov
fstpl
lea
sub
add
jl
sti
clc
xchg
or
mov
out
les
mov
jle
arpl
aas
je
push
ret
add
mov
jl
scas
or
push
push
xchg
out
xchg
ret
gs
stos
int3
cmc
jb
mov
andl
mov
enter
jmp
mov
sbb
cmp
jae
jo
or
jmp
je
ja
xor
outsl
mov
lock
cmp
mov
add
xchg
add
scas
into
fcoms
xor
cmp
xor
fistpll
fdivrs
jae
or
cmp
cld
shlb
fstpt
sbbl
aas
jl
inc
mov
jge
mov
xchg
adc
leave
rolb
xchg
sahf
scas
ret
pushf
movsb
out
add
lock
fistl
insb
shll
fistpll
sbb
cmc
jbe
pop
add
jbe
sub
out
imul
sbb
pushf
or
data16
sbb
fsubrl
jle
push
adc
adc
cmp
jl
cmpsb
scas
pop
jmp
bound
dec
stos
inc
decb
mov
pop
ljmp
arpl
mov
dec
mov
mov
sbb
sbb
cmpsl
loop
incb
lods
dec
hlt
and
push
jecxz
in
cmpsb
mov
pop
hlt
js
out
and
repz
data16
push
and
pop
add
shrl
xchg
jnp
sbbl
loop
add
loope
adc
xchg
arpl
push
aas
aaa
xor
pop
push
dec
add
inc
lods
and
js
popa
push
jle
mov
and
push
stc
int3
cmp
mov
adc
push
dec
mov
mov
fbld
or
popf
adc
inc
push
loopne
mov
jnp
andb
sub
xchg
into
enter
mov
hlt
movsb
pop
sub
jmp
imul
adc
mov
add
mov
mov
and
mov
sti
or
mov
je
add
out
add
and
les
mov
jo
xchg
jmp
fwait
adc
and
popf
int
aam
and
lahf
fisttpl
push
icebp
inc
sub
pop
call
imul
jmp
aam
fcoml
lods
sbb
mov
mov
outsl
xlat
sahf
aas
lock
stc
or
pusha
incl
popf
mov
shlb
dec
in
aad
mull
xchg
fbld
pop
push
aam
nop
shlb
mov
mov
or
xlat
test
and
and
aas
pushf
sub
mov
push
js
mov
pop
test
and
das
pusha
mov
repnz
add
movsl
insl
call
shrb
nop
mov
mov
sarb
jmp
lahf
sti
pop
xchg
imul
xchg
rclb
aam
xchg
cli
add
add
inc
sub
push
mov
test
clc
pop
inc
pusha
ret
icebp
js
add
push
mov
dec
out
aam
sbb
push
int
mov
nop
push
push
push
pop
fstps
rorb
sbb
inc
sub
or
dec
xchg
jae
or
pop
mov
mov
andb
dec
into
icebp
ljmp
xchg
xor
adc
cmp
jnp
ljmp
adc
sbb
int3
cld
push
leave
pop
rol
xchg
push
cld
fsubp
mov
cltd
int3
cmpsl
insb
adc
jmp
push
cmpxchg
mov
rolb
mov
or
pop
stos
test
faddl
add
ds
push
ljmp
leave
cmp
mov
pusha
adc
add
mov
add
and
inc
inc
xor
mov
sub
pop
and
addr16
xchg
and
and
xor
mov
idivb
out
or
inc
idiv
dec
jge
jbe
dec
xor
or
add
sub
mov
or
bnd
rorb
pop
cmpsb
push
push
call
pop
add
adc
movd
jb
js
inc
add
imul
loope
mov
push
cmp
xor
inc
lods
call
sti
dec
sbb
in
das
mov
xor
xor
pop
and
sbb
add
adc
dec
and
inc
cmp
mov
ror
or
inc
add
das
in
cmp
mov
imul
mov
nop
stos
cmc
mov
add
pop
pslld
mov
cli
add
hlt
sub
fildll
or
lret
jne
sbb
stos
mov
dec
les
and
jbe
mov
add
ss
dec
add
inc
xchg
jecxz
and
mov
xchg
adc
inc
xor
shrb
mov
les
and
push
imul
dec
fwait
mov
xor
lods
add
sub
gs
xchg
adcl
xchg
mov
dec
adc
or
mov
push
sbb
mov
xchg
fdivl
sahf
test
aad
mov
cmpsl
add
mov
insl
add
or
repz
xchg
out
jmp
cmp
ds
mov
pushf
les
cmc
pop
cmp
inc
loopne
or
ja
add
ret
mov
inc
scas
jp
push
mov
adc
xor
cmc
int3
jmp
repz
mov
dec
add
lds
xchg
sbb
add
pop
cmp
inc
or
lods
mov
sbb
int3
pop
cmp
sbbb
test
mov
jno
dec
mov
mov
jle
testb
int
add
pop
xor
daa
stc
jae
je
jl
jb
enter
jne
push
sub
inc
adc
icebp
test
and
into
mov
hlt
mov
leave
daa
pusha
je
faddl
push
inc
dec
mov
jg
pushf
adc
fstpt
inc
mov
test
xor
jno
sbb
push
or
mov
call
adc
pop
pop
in
xchg
push
std
add
sub
push
add
lahf
pop
jnp
push
xchg
jmp
nop
les
lea
or
adc
add
and
pusha
inc
xor
mov
test
mov
xor
cmp
outsl
mov
mov
add
jns
jg
rcrb
cmp
mov
add
movsb
add
adc
push
and
lods
xchg
mov
mov
loope
xor
and
push
jmp
call
js
test
and
push
and
sub
inc
xorl
cs
lret
lods
loope
xchg
repnz
pusha
adc
pop
mov
test
lret
pop
jbe
les
inc
leave
xor
sbb
outsl
mov
jbe
faddl
aaa
adc
mov
jb
sbb
dec
sbb
hlt
pop
sub
pop
in
fcmove
and
mov
mov
xor
les
xor
out
daa
cmovp
lea
cmp
mov
insb
sub
sti
call
cld
add
daa
subl
lods
les
push
stos
fmuls
subb
inc
pop
mov
cltd
jno
cmpsl
adc
or
lock
pop
push
or
in
cld
aad
sub
and
jmp
cmpb
adcb
out
lock
pop
inc
mov
pusha
ret
das
sbb
add
mov
add
xor
dec
cmpsl
rorb
shrl
jg
pop
into
mov
icebp
cmc
mov
pop
idivb
mov
inc
leave
scas
pop
cmp
inc
ret
jbe
rcrl
aas
iret
mov
inc
jns
push
sarl
push
int
mov
out
pop
daa
xor
jne
mov
xchg
call
dec
sahf
out
dec
jno
inc
mov
mov
sub
mov
lock
mov
cmp
subl
mov
sti
sbbl
lds
inc
sub
inc
sahf
fidivs
mov
inc
or
lods
and
subb
jge
lcall
mov
fcom
mov
xchg
bnd
outsl
xchg
and
mov
test
mov
iret
andl
pop
mov
mov
movsb
push
or
inc
pushf
xchg
pusha
sub
test
inc
sbb
popa
mov
xor
and
push
sbb
outsb
add
sbb
mov
adc
test
loope
jbe
xor
cmp
ja
mov
test
cmp
movsb
call
mov
mov
mov
in
xchg
fdivl
repnz
and
in
js
stos
pop
add
jb
and
push
loopne
insl
cmp
movsl
popf
pushf
fidivrs
daa
push
or
imul
inc
pop
add
call
cmp
cltd
pop
loope
mov
outsb
jecxz
lods
or
xor
jmp
movsb
or
fs
add
fstl
imul
sub
outsb
dec
add
push
leave
cmpsb
cmp
add
pop
ret
loope
pop
sbb
sbb
lcall
jns
add
add
cs
mov
xchg
sub
cmp
push
icebp
lcall
adc
leave
aad
add
mov
cmpsl
sahf
sbb
fildl
push
hlt
inc
mov
arpl
mov
addb
outsl
roll
nop
and
cmp
je
sysret
push
sub
icebp
jl
bound
xchg
fidivs
lcall
push
mov
mov
test
nop
xorb
int
inc
std
in
lcall
out
mov
shll
jo
add
stos
aam
sbb
in
test
ret
or
je
jno
cs
ret
loop
mov
ret
fimuls
and
and
or
add
jnp
xchg
inc
inc
push
jmp
cmp
add
push
scas
arpl
mov
loope
or
test
repnz
mov
push
add
movswl
jae
adcb
and
movsl
adc
dec
and
insb
push
push
push
sti
lcall
sub
sbb
ja
mov
dec
adc
test
add
inc
sbb
xchg
jo
mov
or
fstps
enter
and
xor
dec
push
adc
sbb
mov
les
push
pop
push
add
or
rcrl
and
dec
fisttpl
and
adc
mov
les
les
adcb
test
mov
xor
ret
inc
xchg
mov
and
mov
shlb
jno
push
or
pop
add
pop
aad
cmc
clc
xchg
idiv
inc
xor
and
outsb
imul
scas
mov
les
dec
or
out
testb
xor
test
cvtdq2ps
jns
sub
add
push
jo
jne
lahf
ficomps
in
ljmp
mov
xor
mov
inc
popa
sbb
and
mov
push
mov
and
rolb
hlt
nop
cmp
int
xchg
push
insl
xchg
clc
pusha
xor
xchg
mov
cmp
std
out
mov
int3
mov
sub
add
sbb
mov
repz
xlat
mov
cld
mov
sbb
jae
adc
mov
cmp
shl
cli
push
xchg
lods
add
in
adc
add
jnp
fldl
dec
insl
xchg
cltd
lea
fiadds
push
imul
pop
pushf
xchg
dec
mov
add
add
and
xchg
add
xor
loop
jl
inc
add
push
out
jns
ja
iret
lret
repz
fstp
lret
push
out
stos
xchg
or
dec
es
out
pop
jge
clc
xchg
jmp
inc
mov
stc
sbb
mov
jecxz
scas
fcomi
cmp
cmpb
or
enter
jg
pop
sbb
call
repnz
sub
icebp
add
cmp
push
lods
adc
filds
mov
xchg
enter
mov
or
push
add
fmull
cmpsb
sahf
mov
in
sbbb
not
xchg
add
cmp
int
subb
pop
xor
sbb
push
mov
daa
or
xchg
dec
cs
add
push
xlat
fsubrs
adc
inc
sarl
dec
adc
imull
mov
lock
fstpt
orb
hlt
add
ss
pushf
div
and
push
insb
add
jb
adc
dec
inc
pop
mov
pop
xchg
out
push
les
jge
cld
sbb
add
scas
dec
ja
pop
out
test
fdivrl
loop
sbb
cmp
shlb
add
push
ret
sub
iret
movsb
add
jg
and
cwtl
rcrb
jle
add
int3
stos
push
insb
sbb
adc
lds
cmp
sub
adc
sbb
push
cli
add
push
cmpsb
into
nop
xor
mov
xchg
push
push
inc
das
lcall
pop
sub
inc
testl
adc
pop
lret
cltd
cmp
cmp
or
sbb
push
inc
shlb
sbb
or
dec
mov
add
lods
sbb
adc
inc
sbb
in
nop
cmpb
push
adc
rcrl
loope
mov
or
mov
and
sbb
aam
inc
sub
push
push
test
fdivl
add
jae
lcall
cmp
jle
push
test
xchg
lcall
jmp
mov
incb
cmp
faddl
push
lock
mov
jl
sbb
arpl
add
ret
mov
mov
movsb
add
cmp
add
lahf
stc
xchg
arpl
or
and
mov
fcompl
call
and
movsb
jp
push
mov
mov
mov
xchg
cmp
clc
stos
add
mov
cmp
add
sti
push
fistps
cld
mov
cmp
loope
pop
push
cmp
pusha
sbb
push
and
les
ja
sbb
sbb
mov
insb
jae
inc
test
mov
lods
push
adc
mov
mov
cmc
aam
mov
sbb
or
in
adc
pop
pop
nop
enter
push
int
inc
xchg
lret
or
cmp
inc
cmp
out
aad
test
jl
imul
dec
mov
push
and
in
adc
in
xor
sub
push
int3
loopne
add
xchg
mov
js
ret
lcall
add
mov
filds
add
adc
mov
add
and
sub
lret
ret
rcrb
or
cmp
jno
rolb
or
sub
testl
inc
inc
aas
mov
add
sub
jns
adc
push
cmp
sbb
add
lret
shrb
cltd
mov
add
stc
push
sub
lret
sbb
or
add
pop
fwait
das
aaa
jle
jo
orb
add
jb
andl
cld
and
push
lret
gs
in
adc
mov
add
mov
mov
adc
scas
xchg
out
inc
or
loop
shll
clc
cmpsl
xor
jne
sbb
sti
ja
sbb
inc
xor
mov
mov
or
adc
mov
xor
mov
loopne
sahf
add
mov
mov
xchg
dec
imul
jb
stos
fcmovne
addb
jbe
xchg
or
add
add
pusha
scas
inc
stos
push
pop
notb
and
jbe
int3
push
mov
pusha
test
add
gs
pop
call
mov
and
push
sbb
movsb
xor
adc
sti
inc
pop
and
orb
sub
arpl
mov
nop
add
rcl
mov
mov
js
mov
or
mov
xor
rorl
out
mov
out
mov
fcmovnbe
mov
sbb
mov
mov
fadds
add
test
jno
xor
xchg
pop
rcrb
shlb
dec
xor
xorl
dec
and
dec
cmpsl
or
das
rcrb
mov
pushf
add
pusha
jbe
push
inc
cld
pop
xchg
faddl
sub
or
popf
ljmp
inc
add
lcall
pop
or
pop
enter
jno
int3
shrb
pop
add
rcrb
mov
xchg
pusha
cmpsl
cwtl
jle
jnp
in
sbb
push
pusha
lret
and
mov
jo
ret
adc
std
xchg
data16
adc
int
outsl
push
rclb
sbb
mov
adc
cltd
mov
sub
mov
faddl
out
shll
mov
testl
add
aam
push
add
fdivrs
push
or
addl
enter
jp
sbb
add
leave
push
les
bound
cmp
stc
arpl
or
push
push
test
imul
in
js
nop
fnsave
les
xor
adc
xchg
dec
xor
add
push
mov
mov
test
out
pop
or
jnp
lock
mov
repz
loope
sbb
fsub
stc
inc
movsb
popf
mov
test
push
enter
xchg
or
rcrl
leave
sbb
push
sub
iret
and
inc
cmpsb
fcmovnu
fwait
or
insb
movsb
add
sbb
jae
iret
icebp
sbbl
lret
pop
negb
lds
incl
cmpsl
mov
insl
fs
into
xchg
fdiv
int
inc
dec
fcoml
sahf
inc
push
or
and
sti
dec
sbb
adc
mov
int
outsb
and
add
or
orb
inc
fdiv
sub
cmpsb
mov
adc
sti
outsl
bound
add
xchg
push
xchg
push
jmp
jnp
add
mov
or
popf
scas
inc
mov
sbb
and
nop/reserved
add
pop
scas
jge
adc
pusha
pop
lds
es
les
add
inc
nop
iret
sbb
sub
jg
jo
push
unpcklps
dec
dec
dec
loopne
or
lcall
mov
push
lret
inc
mov
adc
adc
add
mov
cmp
xchg
pop
dec
ror
cmp
inc
mov
pop
adc
lret
xchg
and
add
add
mov
push
jno
add
add
sbb
lcall
or
xor
lahf
icebp
xor
popf
push
jno
cmp
add
int3
ret
hlt
sub
xchg
jbe
cmp
xor
pop
adc
push
push
shlb
add
jmp
je
fsub
push
adc
inc
int3
adc
loopne
pop
enter
sbb
jbe
xchg
daa
pusha
ja
jns
jecxz
pop
xor
cmp
push
shrb
push
push
add
add
adc
sbb
test
insl
test
nop
int3
mov
flds
adc
mov
inc
and
xorb
adc
inc
sti
inc
mov
and
pop
call
bound
add
sbb
and
xor
or
into
adc
cmc
sarl
insl
jnp
xor
sbb
or
or
jbe
mov
lret
mov
es
sbb
out
shrb
push
and
scas
and
int3
or
mov
test
push
pusha
dec
fcompl
adc
mov
pop
dec
or
xchg
andb
push
addl
cmp
sbb
push
popf
sub
sti
jp,pn
daa
sub
push
shlb
cmp
xor
pop
xor
loope
xchg
jbe
xchg
fdivrs
xchg
sbb
repnz
xor
sbb
lock
sahf
jbe
or
movsl
dec
adc
rorb
subb
lods
xchg
sub
call
inc
cmp
leave
fucom
add
ljmp
orl
mov
pop
pop
add
dec
cmp
push
mul
jno
dec
test
outsb
add
inc
push
jg
imul
sbb
hlt
fildll
mov
out
or
xchg
cmp
cmp
inc
mov
xchg
sbb
mov
mov
lods
sbb
xor
jbe
inc
xchg
mov
adc
jae
lock
aad
test
push
das
std
aas
cmpb
gs
sbb
add
sub
add
and
mov
mov
push
stc
aad
and
push
shlb
add
icebp
stos
jp
xor
sub
xlat
cli
clc
add
push
adc
cmp
packuswb
outsb
ficompl
fistpl
or
jae
and
cld
xor
add
fists
scas
enter
or
xor
push
adc
mov
lcall
add
xchg
mov
xadd
gs
shlb
adc
pop
sbb
dec
sbb
cmpsb
ffreep
adc
sub
ss
or
or
pop
andb
xor
pop
lahf
enter
add
sbb
outsb
fs
push
mov
adc
in
sub
pop
add
push
jnp
or
dec
pushf
jno
addl
cmp
jg
cld
dec
or
and
cmp
add
or
sbb
je
add
cmp
call
sbb
push
out
rcrb
pop
pop
je
mov
out
add
lret
add
xor
das
push
jo
add
lods
aad
cmp
add
lcall
loope
push
stos
fnstcw
in
in
out
cmp
push
add
and
jae
add
popa
stc
mov
rcr
inc
mull
and
out
loope
pop
outsl
pop
pusha
adcb
sub
insb
loopne
ja
scas
jnp
shll
mov
sbb
int3
mov
push
jne
ds
add
in
pop
push
or
call
repnz
pop
add
in
sub
pop
pop
add
hlt
jge
xchg
bound
outsb
rorb
loopne
and
or
jnp
fldt
faddl
mov
lret
push
arpl
pop
cmpsb
mov
jne
lahf
addr16
rolb
nop
cwtl
arpl
rcrb
sbb
and
and
hlt
rcll
xchg
add
cld
enter
negb
sti
cmp
fmuls
add
pop
mov
outsl
pusha
mov
roll
push
daa
dec
or
mov
in
lock
or
xor
sbb
add
adc
js
sbb
out
pop
mov
xor
or
in
sahf
in
dec
and
cwtl
add
mov
pop
lcall
dec
mov
loope
pop
mov
jns
cmp
or
pop
fimull
scas
jo
jb
daa
fs
push
into
push
fstpl
or
in
mov
mov
and
jmp
jge
int
sub
ficoms
ret
shll
pop
jbe
add
adc
add
xchg
lahf
out
jae
push
and
ja
or
pop
xchg
je
mov
mov
xor
dec
add
jnp
adc
mulb
sbb
shlb
int
pop
mov
mov
pop
inc
and
cwtl
jle
popa
xchg
xchg
pushf
out
in
inc
adc
xchg
repz
cmp
dec
fcoml
mov
mov
add
cltd
push
cmpb
imul
push
mov
xor
dec
out
adc
aam
loopne
mov
movsl
mov
sub
xor
push
mov
sbb
andb
andb
data16
add
pop
sbb
sbb
xchg
div
xchg
cwtl
push
mov
aaa
sbb
fwait
je
outsb
and
xchg
aaa
pop
pop
sbb
mov
push
movsb
mov
stos
call
push
mov
test
and
sbb
add
and
lock
and
xchg
lods
test
ljmp
and
sbb
mov
xor
pop
mov
js
lret
pusha
xchg
pop
ljmp
popl
xor
lret
mov
push
or
into
lcall
idiv
and
fwait
pop
xor
repnz
cmpsl
test
je
sub
or
cs
loopne
loopne
dec
and
nop
js
stos
fsubl
push
dec
daa
std
xchg
or
push
rcl
jle
shlb
sarb
and
movsl
and
lcall
mov
mov
imul
mov
mov
andb
psubusb
xor
adc
mov
xor
lea
and
and
pop
jb
dec
push
rol
add
test
fisttpl
xchg
and
jne
dec
jno
pop
adc
mov
add
divl
xorl
in
inc
jns
pop
scas
sbb
shlb
cld
and
add
sbb
mov
imul
inc
pop
pusha
xchg
xlat
sbb
cmpsl
cmp
je
inc
xchg
add
mov
push
and
dec
and
push
mov
sarl
cmpsb
inc
xchg
aas
shrb
mov
nop
xor
cmp
adc
xor
jnp
mov
arpl
sbb
stos
sub
test
test
sbb
or
inc
andb
mov
or
adc
int3
adc
add
mov
fsubrs
pop
add
jb
mov
sbb
pusha
xor
or
cld
jle
loopne
repnz
add
sbb
pop
xor
or
mov
call
dec
push
mov
fldcw
jo
insb
pop
lock
sbb
fildl
test
rcll
inc
add
xchg
aas
clc
aaa
mov
faddp
lock
jbe
sbb
rcrb
add
imul
xlat
push
xchg
push
rclb
cmc
add
shlb
push
xor
push
movsb
jg
jl
leave
fldl
dec
jmp
out
xchg
add
mov
or
repnz
imulb
stc
mov
inc
pop
xor
cmp
add
push
or
jmp
jno
movsb
ret
add
mov
fisttpll
cmp
test
push
cmp
jl
sbb
sbb
test
enter
mov
push
pusha
mov
add
inc
cmp
std
adc
mov
sbb
mov
jb
push
lret
mov
push
inc
jnp
sub
loopne
add
lods
test
or
in
sbb
or
loopne
pop
movsb
add
lahf
sahf
xor
pop
mov
jns
pop
xor
call
add
jno
xor
mov
divl
pop
lods
push
sbb
popa
dec
call
insl
jb
mov
iret
ja
out
and
add
jno
jnp
aam
fidivl
add
aas
mulb
cld
inc
add
stc
mov
sbb
pop
lock
jo
sarl
std
and
xor
or
out
xchg
jne
cli
scas
xchg
add
cs
repnz
add
adc
mov
cmp
fcompl
jae
pop
xor
mov
sub
cs
mov
cmp
jp
jl
mov
out
pop
mov
sbb
fmul
mov
mov
jns
in
mov
xchg
or
and
bnd
mov
cmpsl
and
cwtl
xor
sub
pop
add
mov
pop
push
sti
sbb
adc
mov
push
int
out
gs
repnz
rdtsc
loopne
push
add
or
xchg
sub
clc
and
mov
sbb
mov
popa
lods
cld
js
cmpb
cmp
pop
rcll
fs
jns
popa
adc
cmp
mov
cmp
mov
test
adc
mov
xorb
and
push
loopne
lock
sbb
push
jns
arpl
jmp
test
add
aad
lret
jle
clc
lcall
int3
push
cmp
pop
cmp
add
mov
push
fiadds
movsb
divb
xor
add
pop
xchg
add
or
pusha
xor
js
xor
sbbl
popa
cld
jl
ljmp
and
daa
adcl
aaa
lock
adc
sub
sbb
outsb
add
xor
in
cld
stc
outsb
add
jno
jge
mov
add
mov
mov
sbb
sbb
stos
mov
mov
and
mov
jecxz
or
stos
add
pop
addb
cli
cmp
mov
fisttps
stc
cltd
mov
sbb
jnp
mov
cmp
mov
ds
mov
add
int3
int
cmp
dec
xor
jno
pop
insb
subb
sub
or
sbb
adc
dec
add
sub
mov
repz
pusha
test
fistps
in
rcrb
mov
test
xchg
xor
mov
mov
xor
add
inc
sbb
aad
inc
out
xor
fisttpll
dec
sahf
jmp
mov
xorb
out
sbb
inc
mov
mov
add
sub
mov
adc
jae
add
lret
out
ret
push
in
test
test
daa
cli
das
jg
xchg
int
inc
sub
dec
test
mov
stos
orb
insb
fmull
push
nop
jns
outsb
rclb
mov
jg
jp
int
mov
sub
fdivs
jae
fs
push
and
dec
movl
sbb
fistpl
xor
in
mov
mov
outsb
mov
mov
roll
pop
xlat
xor
clc
leave
jno
in
loopne
adc
jbe
mov
or
pop
push
pop
push
mov
or
mov
in
inc
into
push
flds
mov
sub
jl
pop
add
dec
ror
xchg
les
repnz
subl
mov
sarl
imul
cmp
add
mov
and
pop
xchg
mov
xchg
jl
lock
mov
add
add
add
aam
test
je
movsb
cwtl
jmp
xchg
mov
cld
mov
and
pushf
jle
cli
fdivr
popf
add
jo
test
jne
xor
dec
push
subl
add
arpl
nop
pop
or
or
adcb
loopne
testl
lock
or
pop
add
jns
out
shlb
add
sbb
inc
nop
fadds
jmp
dec
jg
outsl
dec
add
xchg
cs
stc
adc
ret
push
add
xlat
sti
cmp
inc
lock
addb
pop
adc
flds
push
pop
addl
dec
sbbb
dec
mov
insb
add
jl
lds
pop
shll
push
and
or
add
or
adc
jge
or
add
out
ss
mov
push
jno
add
sub
leave
or
pop
js
add
cmp
xlat
imul
mov
test
jne
add
into
stc
nop
add
pop
ja
pop
pusha
jecxz
cmp
daa
shlb
aad
roll
mov
stc
push
mov
cmp
adc
dec
popa
enter
add
cmp
push
out
sbb
dec
lds
test
dec
loopne
enter
xchg
rolb
push
loope
movsb
das
cmp
xchg
add
mov
ret
xchg
test
jnp
add
inc
xchg
lds
aad
pop
nopl
sbb
in
sub
dec
test
iret
pop
add
adc
outsl
push
insl
iret
out
adc
das
xor
mov
cmp
sti
add
daa
push
mov
cmp
lods
mov
adc
clc
mov
mov
aam
mov
lret
or
adc
shrl
add
insb
movsl
leave
ror
add
cwtl
shlb
jns
mov
test
decb
add
adc
les
fildl
jmp
sbb
test
jg
add
xchg
jne
or
mov
xrelease
or
pop
cmpsl
cmc
clc
stc
sbb
imul
test
fisttpl
push
outsb
loop
jge
jp
add
shrl
adc
xchg
pop
aam
dec
rcrl
hlt
ror
cmc
adc
and
or
jp
pop
cmp
xor
push
xor
push
mov
jl
nop
push
roll
add
call
add
mov
clc
or
adc
enter
push
mov
fdivrs
pop
push
inc
cmp
add
movsb
add
stos
mov
inc
add
fmul
cwtl
outsb
pop
add
adc
jl
jb
add
sbb
movsl
xchg
call
and
mov
jo
ss
sahf
mov
loopne
mov
mov
scas
xchg
adc
lock
add
out
xor
les
cs
mov
push
add
aad
add
push
movsl
iret
jecxz
xor
jbe
add
push
sub
dec
mov
add
test
stc
jg
nop
adc
pop
jae
lcall
subl
adc
jp
dec
cld
xor
js
roll
and
aad
push
mov
addb
add
faddl
xchg
in
clc
jae
cmp
stos
mov
add
ds
mov
sub
test
out
add
cmp
cwtl
sti
cmp
adc
jg
xor
subb
test
push
nop
cmp
adc
shlb
xchg
cmp
push
movb
lods
mov
shl
mov
sub
ljmp
sbb
jg
cmp
mov
lods
push
int3
mov
mov
mov
dec
and
cmp
cmp
pop
xor
popf
jb
add
test
les
stc
test
stos
fiaddl
jbe
dec
mov
mov
lea
cmp
ds
testb
jb
lods
lret
push
insl
rorb
pop
mov
dec
add
aaa
or
in
cmp
push
mov
mov
nop
ret
xor
inc
add
ss
and
and
movsl
adc
adc
and
cmp
xlat
lock
int
aaa
jle
sub
push
int3
push
movsl
inc
and
addb
stc
dec
jl
mov
cmp
test
stos
add
push
sbbl
mov
adc
mov
cltd
dec
mov
sbb
cmc
cmp
mov
and
movb
pusha
nop
lcall
dec
add
add
dec
stc
ljmp
mov
arpl
ds
push
outsl
roll
pop
clc
add
mov
out
sbbl
fcmovbe
mov
cmp
fisttps
adc
lods
pop
inc
out
jae
jns
xchg
mov
jo
add
in
aas
or
lahf
jge
sbb
xchg
sub
inc
adcb
dec
jae,pt
xchg
addl
aas
add
push
aaa
add
pop
adc
xchg
jmp
out
push
sub
push
sub
dec
mov
ss
in
jbe
dec
mov
mov
or
stos
sahf
inc
mov
sbb
jge
add
and
pop
adc
cli
jg
sub
xor
pusha
cmpsl
into
lea
jnp
pop
sbb
jb
sarb
js
sbb
stc
lods
adc
mov
or
daa
stos
add
push
push
fldcw
adc
test
add
xchg
mov
test
movsl
and
adc
jg
adc
mov
mov
roll
jne
mov
push
jae
addb
fadds
pop
ret
divb
xchg
jo
push
add
hlt
mov
pop
cld
push
ret
outsb
test
ficomps
mov
mov
and
push
scas
stc
arpl
sldt
sub
sahf
push
mov
sbb
idivb
mov
pushf
mov
sub
or
out
xchg
sbb
arpl
jnp
inc
inc
push
cltd
add
sbb
mov
inc
cmc
scas
mov
and
jno
xlat
roll
bound
movntq
imul
cld
cwtl
add
xchg
mov
testb
ss
add
mov
ret
leave
cmp
adc
or
shll
sbbb
jnp
test
xchg
sbb
insl
mov
ljmp
mov
and
lea
and
mov
jo
adc
mov
mov
andl
int
cmp
add
mov
inc
cmp
aaa
dec
jge
movsb
mov
fdivs
fs
std
and
movsb
add
fwait
cld
inc
rorl
dec
stos
sub
repz
dec
data16
sbb
mov
aaa
inc
add
mov
dec
aad
pop
out
filds
dec
lret
movsl
sbb
pop
xor
add
mov
push
addb
sbb
andb
fadds
sbb
sub
nop
movsb
negl
add
inc
pop
sbb
rcr
sbb
inc
icebp
jb
leave
xchg
or
scas
mov
je
jnp
nop
sub
scas
mov
cs
mov
xchg
pop
push
push
ljmp
sbbl
push
add
andb
push
je
repz
push
addr16
das
pop
mov
pushf
add
movb
push
outsl
jmp
and
js
sbb
push
insl
ds
scas
shlb
testl
stos
loopne
test
pop
addr16
pop
dec
loopne
outsl
aaa
add
jle
inc
jnp
add
and
adc
adc
cmp
fwait
lods
lret
or
loopne
inc
mov
push
add
in
push
sbb
movl
push
mov
loop
mov
add
outsb
pop
xchg
push
and
add
sbb
lret
fisttpl
movsl
jo
mov
add
ret
cltd
inc
add
mov
inc
loope
mov
orb
pop
fs
add
mov
and
inc
cmpsb
sub
mov
push
sbb
sarl
xchg
cmp
add
rcl
or
lret
enter
pusha
sti
mov
inc
and
in
repnz
mov
aam
mov
ss
jecxz
push
stos
add
outsl
clc
sub
loope
out
jo
add
popl
mov
ds
cmp
in
out
fdivs
xor
jno
testb
push
enter
jno
sbb
sbb
mov
pop
lret
inc
push
dec
test
or
pusha
push
adc
adc
rclb
scas
out
sysexit
jl
mov
sahf
and
xchg
pop
add
xchg
sbb
or
jbe
subb
int3
push
sub
dec
outsl
or
jnp
pusha
xor
add
adc
pop
push
sub
adc
addb
adc
int
icebp
jg
sbb
lret
add
test
adc
mov
xchg
add
or
add
xchg
push
es
mov
fsub
pop
inc
add
add
jne
andb
aas
add
icebp
sbb
fs
jl,pn
pop
inc
out
fcomps
cmc
push
adc
mov
dec
sub
jp
filds
jo
add
xchg
lret
out
xchg
and
or
cli
sbb
repnz
add
cmpsb
out
cmpl
mov
outsb
lret
and
test
xor
and
jnp
movsb
addb
xchg
inc
pop
cli
xor
js
jo
data16
push
adc
jae
lcall
test
test
arpl
add
fucom
mov
add
push
jl
pop
or
push
pop
jp
hlt
mov
jg
xor
sub
jle
cwtl
repz
lods
dec
stos
mov
fcomip
rolb
push
sahf
push
add
clc
sbb
add
scas
cltd
dec
sub
add
xchg
lock
cmp
in
xchg
xor
dec
push
xchg
adc
inc
sub
test
pop
test
loopne
inc
lods
cmp
loope
insl
out
mov
aam
mov
xchg
mov
add
shlb
cs
shrl
inc
jle
add
je
pop
add
fstpt
test
les
icebp
imulb
int3
rcr
mov
sub
xor
lods
pop
int
in
icebp
mov
das
daa
dec
cwtl
pushf
addb
scas
xorl
popf
xchg
shr
lds
cmp
pop
arpl
add
pusha
in
sub
xlat
roll
jecxz
stos
pusha
adc
pop
std
and
push
ffreep
ret
pop
out
cmp
in
jns,pn
js
pop
add
dec
inc
dec
adc
jge
add
push
repz
sbb
xchg
movsl
test
mov
mov
mov
cli
dec
dec
xor
js
dec
push
lods
inc
cmp
pop
xor
sbb
jl
lods
push
sub
xor
mov
jno
add
sti
mov
or
dec
out
xchg
xor
and
pop
push
or
push
movsb
pop
out
int
push
push
add
mov
add
fwait
mov
add
xchg
sbb
xchg
in
sbb
cmp
shrb
sub
xchg
sbb
adc
lock
scas
outsb
mov
and
sub
cmpb
sub
test
sub
loop
add
in
imul
mov
mov
dec
jb
push
shrl
shl
jle
mov
fidivrs
popa
insl
adc
push
and
xchg
andb
mov
pushf
pop
xor
fdivr
adc
or
addl
adc
fidivrl
add
add
cld
sub
add
xchg
lcall
mov
fidivs
add
lahf
mov
das
cmp
popf
lds
sub
movsb
add
inc
mov
cmc
pop
aam
mov
dec
dec
mov
hlt
sub
sub
jmp
stos
ss
pop
nop
mov
sub
fbld
xor
sbb
or
lret
adc
add
nop
sbb
inc
add
imul
shlb
add
add
xor
mov
jecxz
popa
jge
mov
mov
test
inc
cwtl
addb
cs
xlat
cmp
mov
fcoms
or
cmp
call
pop
sahf
xchg
cwtl
popl
fs
add
cltd
daa
jo
filds
andl
lds
mov
push
enter
sbb
lods
sbb
add
stc
data16
shr
enter
xor
adc
out
repz
sbb
cmpb
sub
sarb
fs
sub
sub
das
add
repnz
sbb
loope
fistpll
sbb
push
pop
jmp
add
frstor
aaa
cwtl
mov
mov
xchg
nop
hlt
add
movsl
lea
testb
pop
lret
pop
jnp
shrb
sub
xor
mov
hlt
nop
adc
lock
or
xchg
xor
add
iret
fdivrs
fistps
aas
movhps
out
jmp
cmp
out
test
ret
dec
aaa
push
pop
mov
sahf
stc
movsb
sub
test
andb
lods
loope
dec
ljmp
adc
dec
adcb
filds
cmpxchg
mov
adc
jmp
add
cmp
sub
pop
and
mov
fnstsw
pop
ja
push
cmp
xchg
into
mov
push
shll
sar
pop
enter
pushl
cmp
mov
daa
mov
loope
add
jae
mov
sbb
cli
pop
sbb
imul
sub
xlat
and
xchg
xchg
rolb
sub
out
outsb
jge
or
jmp
xor
dec
test
and
mov
ret
add
mov
stos
mov
add
sub
push
ficomps
outsb
inc
inc
lret
lods
sbb
aam
bound
pusha
add
add
imul
push
add
cmpsl
xor
test
mov
xchg
add
loop
push
and
dec
lcall
xor
xchg
add
outsb
pop
jne
add
push
movsl
stos
loop
ljmp
lea
hlt
ret
int3
sti
jo
dec
mov
mov
xchg
pop
rcrl
testb
jno
sbb
cmp
and
fnsave
jno
lcall
enter
pop
add
pop
fistpll
js
pushf
or
dec
gs
xchg
lret
pop
pop
negl
repnz
add
jnp
cmpsb
jecxz
aaa
push
add
arpl
in
xor
pop
add
lret
jo
xchg
sbbl
pop
jmp
js
repnz
xchg
adc
xchg
sub
or
add
fisttpll
add
lret
and
pushf
stc
lock
push
jecxz
repz
and
loope
sbb
cmp
pop
or
jne
aas
inc
xchg
push
les
movsb
idiv
xchg
xor
add
mov
jl
pop
rcr
mov
push
lods
stc
jge
add
add
mov
add
divb
pop
and
add
out
loopne
out
sbb
pusha
add
mov
xor
sbb
push
jno
jo
sub
scas
stos
es
push
cmp
jbe
lcall
add
in
loopne
outsb
adc
mov
inc
scas
jns
add
or
icebp
popf
add
in
add
stc
fnsave
inc
jae
adc
mov
filds
add
mov
or
jo
flds
enter
neg
sub
pop
sub
les
pop
lret
push
sahf
add
mov
clc
dec
aam
add
dec
outsl
cmp
orl
loope
sbb
inc
and
packsswb
xor
adc
sub
icebp
imul
xchg
mov
dec
stos
xchg
lods
outsl
enter
test
int3
xchg
daa
push
insb
push
inc
clc
push
add
ss
popl
pop
mov
movsl
js
clc
inc
cwtl
cwtl
add
jns,pt
jle
std
je
adc
test
je
in
add
xchg
insb
int3
add
jo
inc
xor
sub
xor
mov
cli
add
cmpsb
fwait
and
jl
mov
inc
mov
pop
repnz
xchg
add
aaa
pop
data16
inc
fcompl
in
sahf
rcll
jnp
roll
imul
mov
add
cmpsb
mov
jle
xor
mov
enter
jp
pusha
and
fwait
stc
dec
ficomps
dec
stos
popa
mov
adc
add
in
inc
add
aam
cltd
cmp
popl
jecxz
cwtl
jae
sub
inc
aam
stos
movsb
out
and
push
in
adc
xor
rcrb
add
cwtl
mov
mov
test
lds
ficomps
cmpb
inc
pop
in
fnclex
cld
push
adcb
lock
and
ds
jbe
add
jmp
add
mov
lret
sbb
cmp
and
ret
out
addr16
inc
roll
test
mov
call
mov
and
les
push
push
xchg
add
sti
mov
fsubr
sub
insb
scas
push
jbe
aad
clc
dec
aas
xor
loopne
push
sub
testb
lahf
jg
sub
inc
adc
cli
ja
pop
sbb
dec
int3
fists
inc
cwtl
insl
or
dec
add
push
lock
es
or
inc
xchg
push
into
and
add
mov
add
insl
add
test
jmp
cmp
pop
es
test
loopne
mov
shrb
cmp
aam
sahf
xor
pop
xor
das
inc
pop
mov
nop
pop
roll
pop
mov
cs
lahf
cmp
pop
add
xor
inc
xchg
orb
sbb
adcl
jle
movsb
mov
and
dec
je
in
stos
dec
add
mov
movsl
sub
inc
jle
adc
jge
clc
lods
cmpb
aaa
pop
ror
pop
imul
mov
in
add
lock
adc
mov
jge
out
push
inc
adc
inc
jae
addb
or
arpl
mov
dec
lock
das
out
mov
xchg
rcrb
or
insl
jge
jns
add
push
pop
or
popf
ja
add
pop
cmpsb
test
add
aaa
dec
mov
add
lods
sbb
add
stc
mov
test
je
dec
add
or
push
inc
adc
in
movsl
ficomps
pop
pop
add
leave
xor
aad
push
jo
test
cld
in
fstps
or
enter
cmp
mov
inc
mov
ja
push
cwtl
imul
addr16
mov
xor
repnz
pop
adc
dec
scas
inc
add
sub
pusha
xor
add
test
xchg
xor
and
push
add
inc
or
xorb
iret
mov
add
ret
push
int
add
wbinvd
mov
lea
loopne
call
push
mov
add
xor
mov
sub
cmp
or
sub
cmpsb
setge
sbb
repnz
pop
push
incl
dec
add
bound
shrb
lock
insb
test
mov
popf
repz
push
dec
adc
inc
pushf
call
add
adc
and
xorl
andl
sbb
or
pop
into
divl
jp
push
dec
out
loope
or
add
mov
sbb
or
int
sahf
adc
loop
enter
add
out
test
sbb
xor
testl
aaa
hlt
dec
enter
jnp
push
repz
es
sti
jp
mov
add
test
femms
cld
mov
xchg
stos
cmp
sbb
out
fisttpl
je
push
fwait
inc
addb
daa
ret
pushf
enter
inc
adc
push
mov
xor
push
add
push
loopne
je
lods
add
cmp
mov
lock
or
dec
in
testb
sub
jmp
shlb
aam
mov
push
fisubs
jae
std
pop
in
or
rclb
icebp
jge
sar
cmp
jmp
sbb
repnz
mov
add
fwait
mov
add
aaa
out
push
inc
jmp
lahf
add
test
add
sbbb
js
lock
cwtl
out
shrb
mov
inc
add
push
xor
fidivs
scas
mov
testl
repz
add
aad
loopne
nop
add
frstor
test
lea
imul
ljmp
cvtpi2ps
fadds
movsb
stos
add
fs
pop
adc
mov
push
mov
xchg
imul
call
jl
outsb
orb
inc
ja
add
fldcw
sbb
cmpsl
mov
adc
in
popf
mov
adc
test
ret
call
ljmp
inc
adc
sub
push
jmp
popf
js
add
adc
ljmp
rclb
cld
fiaddl
xor
cmp
or
pusha
sahf
data16
mov
lods
bound
or
xchg
or
fadds
hlt
xor
ss
scas
jg
mov
rorb
testl
push
push
xchg
cwtl
mov
dec
cmp
mov
mov
fcomp
cwtl
mov
cmp
mov
add
in
divb
adc
xor
inc
and
xchg
dec
sbb
mull
and
xchg
add
je
loopne
jne
xor
adc
shlb
add
lret
mov
and
cli
cmp
test
mov
pop
inc
mov
dec
xchg
sbbb
xchg
or
xor
je
mov
sbb
push
mov
loop
roll
fadds
push
or
in
push
xchg
sub
lret
cmp
jno
lock
ret
inc
loope
in
mov
loopne
in
inc
aam
xor
in
dec
mov
loop
lds
add
push
out
jg
loopne
xchg
add
xchg
test
jo
jno
cmc
cmc
add
mov
popf
lcall
jg
jo
and
mov
xchg
xchg
add
nop
add
loope
lea
jg
aad
repz
rorl
daa
add
das
frstor
mov
ja
popf
mov
cltd
repz
and
ret
add
inc
lock
loopne
jne
in
lea
or
call
fsubs
add
rcrb
add
fnsave
test
in
mov
jge
repnz
jg
sbb
cmp
sarb
sbb
ja
andb
cmpb
loope
xor
push
jo
pop
lcall
fxch
std
clc
add
js
dec
out
inc
sub
data16
push
test
cli
push
mov
or
shlb
and
cmp
es
stos
mov
andb
sbb
sbb
imul
add
mov
test
and
push
mov
adc
add
mov
inc
je
mov
jl
or
inc
mov
emms
dec
add
inc
xor
cmc
dec
lcall
lret
xchg
sub
cwtl
add
ret
lock
lret
mov
jmp
lahf
sbb
out
daa
retw
in
push
out
in
sub
sub
xor
std
aas
jno
add
push
sbb
sarl
push
addr16
xor
test
fnstcw
xchg
adc
lock
cli
sahf
add
jne
mov
repz
pop
jecxz
xchg
mov
nop
pandn
sub
decl
rcl
pusha
inc
add
std
jo
fnclex
ret
sub
inc
fidivl
xchg
add
repz
add
call
loop
mov
stos
or
test
inc
icebp
push
and
push
pop
xor
push
jbe
nop
ficoms
jmp
das
test
ret
pop
aam
aaa
sahf
pop
add
adc
lcall
lods
add
jge
negb
add
lret
stos
aad
cmc
or
cmp
lock
pop
add
loope
repz
fdivrl
xor
sbb
sub
mov
add
inc
aaa
cmp
xor
mov
ds
andl
adc
pop
in
and
movsl
and
sbb
popf
mov
sub
xor
jns
adc
push
add
jl
xchg
shll
pop
scas
xor
pusha
fstps
mov
inc
xchg
and
push
and
push
popf
stc
cmp
ror
hlt
popa
add
pusha
jp
pop
arpl
iret
add
fstl
cli
add
mov
push
or
mov
inc
push
clc
dec
jecxz
sub
adc
xchg
add
xor
js
xchg
jle
repnz
add
mov
add
sub
or
clc
and
add
push
sbb
mov
xchg
inc
repz
or
jb
lret
pop
sarl
inc
pop
or
fs
stc
shll
mov
in
mov
xchg
loop
xchg
fmuls
daa
or
or
scas
xlat
inc
mov
sbb
mov
pop
sub
int3
jle
aad
jno
add
jp
addr16
jns
dec
add
test
cmpsb
adc
int
aam
add
cmp
mov
add
or
and
js
mov
xor
movsl
lock
aas
mov
dec
loopne
sub
std
sub
loopne
insl
les
adc
ss
adc
test
jg
ljmp
add
push
sbb
lret
xor
push
sti
cmp
test
inc
add
ret
push
nop
fimuls
movsb
or
sbb
cwtl
aam
cmp
fdivrl
add
or
mov
test
icebp
push
push
pop
mov
or
push
push
or
jmp
inc
ds
cmpb
addb
sbb
popf
jns
or
outsl
cmpsl
adc
je
xor
int3
adc
loopne,pn
sti
pop
sbb
push
fisubl
leave
fmuls
dec
add
jbe
mov
scas
xchg
out
lds
pusha
test
push
aas
popf
sbb
sub
pop
or
or
xor
shrb
adc
cmp
push
hlt
push
jmp
or
push
gs
je
add
lahf
jl
mov
add
leave
cltd
sub
add
jo
mov
inc
cmp
add
mov
push
nop
push
or
push
rolb
popf
in
fnstsw
and
imull
mov
adc
adc
adc
les
das
loopne
and
mov
push
adc
sbb
mov
test
mov
inc
and
clc
sbbb
xchg
mov
iret
pop
add
mov
xor
roll
xchg
test
loop
push
xchg
lcall
xchg
cmc
sbb
repz
or
sbb
in
hlt
mov
mov
popa
frstor
jae
out
push
test
out
jmp
dec
mov
jo
dec
xchg
cltd
mov
lahf
cmp
movaps
inc
dec
fbstp
or
shll
rcl
nop
mov
aas
insb
mov
cli
ret
jo
add
fiaddl
loope
xchg
sbb
incb
push
inc
xchg
fisttps
data16
lahf
and
mov
push
pop
and
dec
sub
andl
stos
xchg
add
cli
push
cmpsl
rcrb
mov
adc
sbb
pop
out
imul
and
add
pushf
cmc
movsb
add
fisubl
sbb
sbb
adc
add
xchg
aad
cmp
std
mov
cmc
pop
stos
sub
repnz
and
add
sub
push
jnp
add
ret
mov
aaa
adc
add
cmp
das
add
jae
stos
stos
mov
faddl
mov
orb
shlb
add
push
inc
gs
mov
pop
test
mov
xchg
jns
fdivrs
add
ja
repz
xlat
adc
adc
lods
imul
aad
sbb
jmp
cmp
fiaddl
ficoms
mov
mov
aaa
dec
subl
add
push
mov
push
divb
orb
ds
mov
push
pop
fwait
mov
aam
cli
mov
shlb
fnstenv
stos
cmp
cmp
shrd
push
fldl
call
push
mov
add
mov
jae
in
stc
push
add
mov
jno
je
push
push
add
add
rcll
notb
mov
loope
jae
jbe
add
push
addr16
inc
add
std
popf
inc
mov
movsl
push
sbb
addl
sbb
cwtl
adc
iret
mov
adc
xchg
push
icebp
insl
setp
or
cwtl
pushf
cld
jmp
jne
daa
or
mov
add
cmp
jnp
sbb
stos
or
arpl
cmp
out
jle
push
in
inc
mov
rorb
fcomps
mov
insl
daa
add
pop
insb
dec
es
movl
aas
das
fsubrp
incl
outsb
cld
test
add
mov
rcrb
shl
popf
ljmp
js
mov
sub
dec
fdivl
xor
dec
push
and
test
inc
daa
pop
leave
add
fnstcw
xchg
push
mov
aam
pop
aas
arpl
add
dec
loopne
xor
jae
jp
subb
push
repz
enter
adc
mov
add
push
iret
subb
sbb
cld
cwtl
xor
sarb
cmpsb
cmc
test
in
out
push
add
inc
dec
cmp
mov
in
loop
sub
enter
mov
jno
inc
addr16
loopne
inc
mov
dec
js
jns
cmp
in
fldcw
add
push
mov
cmp
push
xor
cltd
sbbb
or
inc
fstpt
imul
add
stos
loope
sahf
push
pop
lret
add
lcall
jbe
mov
mov
imull
in
aas
fadds
scas
inc
adc
add
mov
ss
xor
movsb
cltd
pop
pop
mov
mov
mov
in
rcll
decb
je
mov
inc
xchg
xlat
cwtl
adc
or
std
pop
rcll
and
les
mov
xor
adc
inc
and
inc
cmpsl
sbb
out
adc
adc
or
jecxz
inc
test
xchg
push
inc
dec
xchg
test
loop
mov
jne
cmp
icebp
fwait
movsl
fsubs
jl
add
mov
jbe
loopne
cltd
nop
fcoml
and
fs
mov
jae
jmp
xchg
xor
lock
sti
sub
hlt
add
in
outsl
popa
int3
xchg
or
add
je
xor
pusha
in
rcl
inc
sub
call
jge
mov
push
cwtl
subl
es
lods
mov
jb
add
stos
pop
pushf
outsl
icebp
pop
jbe
inc
cmp
cltd
subb
fmull
cwtl
mov
mov
mov
dec
jae
jp
add
sarb
add
rolb
xor
pop
in
andb
insb
jno
cmp
xor
je
loopne
adc
out
inc
or
push
mov
inc
add
xchg
add
mov
enter
popf
aas
mov
iret
clc
sub
add
jne
pop
clc
sbb
js
movsb
cmp
pop
mov
insb
add
adc
mov
aaa
add
sbb
mov
mov
add
cmp
clc
fcoms
mov
sahf
jno
es
push
xlat
pop
jo
pop
inc
popf
mov
push
in
int3
xorb
rcrl
and
add
adc
xlat
in
lods
push
jae
xchg
out
inc
rorb
dec
enter
xchg
add
add
ror
clc
mov
add
ficomps
sbb
ljmp
cmp
in
out
jle
sti
clc
enter
dec
inc
shrb
inc
popf
xchg
lahf
fildl
cmp
push
add
lds
sahf
jne
mov
jns
adc
stos
add
adc
out
and
inc
add
inc
cwtl
icebp
scas
and
pop
add
mov
xor
add
and
adcb
inc
adc
xchg
xchg
inc
mov
fmul
cmp
xor
pop
or
aad
and
jno
sub
mov
fistl
or
xchg
clc
jmp
xchg
xchg
out
enter
nop
adc
jne
add
testl
imul
aad
add
sbb
push
and
jecxz
pop
dec
inc
lods
adc
scas
lock
xor
into
add
popa
repnz
mov
test
cmp
dec
sbb
pop
add
inc
jle
stc
push
out
dec
cmpsb
lret
lock
es
les
fildl
cs
pop
scas
add
cltd
cld
sbb
test
inc
mov
lock
jmp
jl
mov
ja
or
add
leave
cmp
mov
mov
in
iret
xchg
push
repnz
lods
jne
mov
sub
mov
xchg
and
adc
sarb
pop
shll
xchg
inc
cmp
sub
lock
lret
or
subl
clc
xor
mov
push
xor
jmp
dec
ficomps
add
jb
add
pop
or
loop
pop
data16
mov
ret
fwait
clc
adc
pop
vmwrite
push
lods
cwtl
lcall
push
mov
xor
cmp
fwait
adc
mov
fmuls
mov
imulb
add
jo
jle
into
dec
rolb
fistpl
mov
add
xchg
add
pop
jmp
inc
sub
push
popa
inc
xor
aam
mov
sbb
addr16
xor
repnz
mov
push
cwtl
push
les
inc
mov
lcall
scas
add
loopne
push
push
hlt
jb
sbb
inc
mov
mov
xchg
xor
mov
add
xor
shll
mov
mov
testl
pop
mov
out
fadds
cmp
daa
or
adc
negw
in
mov
add
insb
cmp
add
out
scas
cmpsb
jle
test
add
push
je
jmp
mov
xchg
add
push
ret
imull
dec
sub
aas
mov
mov
aam
xor
pusha
stos
xor
ja
xchg
sub
add
cmp
cmp
xor
aaa
push
add
cli
mov
or
int3
movsb
hlt
cli
pop
cmpb
into
xor
lods
add
es
mov
add
sbb
imul
bound
add
jmp
aad
daa
dec
jb
xor
add
nop
cmp
les
add
mov
aam
and
xor
dec
cld
aam
mov
add
add
sub
loopne
push
in
out
mov
push
mov
and
add
xor
cld
nop
sub
and
xorb
mov
outsb
and
rcl
add
xlat
push
add
cmpsl
mov
mov
sbb
sbb
aas
pop
fsubl
jne
add
add
sti
inc
clc
dec
fwait
push
add
push
push
push
dec
mov
xor
and
repnz
cld
add
ljmp
add
aam
pop
stc
hlt
shlb
push
xor
add
xchg
inc
pushf
sub
daa
add
mov
and
gs
add
in
cmpsl
push
xchg
and
lock
adc
movsl
lea
xchg
mov
add
sub
testb
clc
dec
cmpb
sahf
inc
subb
xchg
or
push
mov
std
out
jle
loope
or
lock
add
loop
jns
pop
cltd
gs
jns
adcb
add
test
and
dec
in
out
mov
xor
xchg
jbe
add
mov
jno
dec
xor
int3
loopne
cmp
lods
inc
add
movsl
fsubrp
aaa
int
push
mov
pushf
sarb
fbstp
add
jmp
mov
adc
lahf
xor
rol
imull
inc
dec
xchg
leave
lods
repz
lock
dec
scas
nop
gs
rorl
add
pop
push
xchg
jae
adc
loope
loopne
data16
cmp
iret
sbb
xor
sbb
enter
add
sub
mov
rolb
cmp
sahf
scas
into
dec
je
add
movb
aaa
sbb
out
bnd
xor
push
adc
push
sub
icebp
adc
push
lods
cmpb
add
jo
pop
fisttps
sbb
sub
sahf
push
jae
xor
jno
ss
rcrl
mov
add
mov
fadds
xchg
repz
fs
sub
xchg
fsubr
cs
and
rcrb
scas
jmp
pop
int
gs
xchg
and
test
cmp
dec
ret
lret
dec
mov
mov
inc
add
lods
cmpsl
push
pushf
add
push
stc
test
out
cmp
sbbl
xchg
in
add
filds
repz
cmp
and
mov
pop
mov
push
cmp
cli
sub
gs
xlat
xor
adc
test
jecxz
cwtl
add
pop
xchg
hlt
loope
mov
lea
or
fwait
in
lahf
add
test
inc
pushf
stos
jne
ret
sarb
or
sub
adc
gs
mov
hlt
add
negb
cmpsl
movsl
pop
fiaddl
jne
xchg
cmp
dec
or
shlb
mov
xchg
xchg
inc
or
mov
xchg
sbb
xor
ficomps
xchg
rclb
dec
aaa
mov
push
pop
add
inc
rorb
cmp
fstpl
inc
out
fcmovnb
cmp
cmpxchg
push
cmpsl
push
xor
mov
es
jo
int
fnstenv
js
add
mov
add
sub
inc
mov
insl
add
dec
sub
push
loopne
xchg
loopne
add
aad
cmp
inc
add
ret
xchg
mov
jne
jp
icebp
mov
or
stos
and
sbb
sbb
mov
add
pop
push
addl
cmp
test
sub
out
mov
inc
add
inc
stc
xchg
cltd
pop
push
loopne
dec
push
mov
mov
ss
mov
jmp
bound
mov
push
ret
xchg
enter
xchg
cmp
sbb
leave
dec
sbb
mov
out
jne
in
repz
test
ret
lods
test
sub
pusha
adc
cwtl
push
mov
mov
xlat
add
rcl
sahf
fisubrl
or
push
lahf
dec
pusha
jmp
fisttps
aas
jl
shl
jg
push
lret
mov
rclb
mov
and
sub
mov
lds
mov
cmpsl
test
sbb
faddl
push
cld
push
loope
in
add
nop
std
rcrl
cwtl
and
sbb
pop
pop
sub
jmp
push
andl
mov
addr16
mov
add
ret
sbb
test
dec
pop
mov
or
rcr
fidivrs
mov
or
je
add
in
rcrb
lcall
bsf
xchg
ss
call
mov
mov
xor
shlb
inc
lahf
nop
sbb
push
lret
push
inc
mov
push
push
dec
js
fisubrs
mov
leave
push
inc
loope
add
fnsave
adc
pop
shr
add
mov
sub
pop
call
ds
ja
fdiv
xor
pop
push
sbb
pop
orl
add
pop
filds
jne
add
int
inc
mov
shll
rcrb
mov
fxch
push
add
fstp
fs
mov
call
and
sbb
lods
xchg
jo
out
inc
add
dec
sub
cmp
and
stos
push
ret
jno
jns
sbb
xchg
bound
sub
stc
leave
mov
cmp
push
inc
fistpll
fs
pop
lods
fs
xor
and
or
pop
mov
push
int3
inc
cmp
push
rcll
out
sub
add
mov
loopne
rcr
mov
gs
lcall
roll
mov
repnz
outsl
mov
popa
inc
push
or
dec
les
cmp
bound
or
add
imul
add
icebp
cmpsb
cld
xchg
leave
clc
fucom
fbld
mul
xor
mov
xchg
lds
jns
or
cwtl
into
pop
out
xchg
lahf
test
imul
pop
push
pop
fisubl
data16
fwait
xchg
add
test
fldl
jne
or
loopne
cmp
xchg
push
ret
nop
cld
test
pop
test
pushf
data16
pusha
xlat
and
push
in
mov
lods
add
sub
adc
add
test
scas
sarb
and
shll
add
sub
imul
inc
call
jmp
sbb
mov
lcall
js
popf
inc
cld
je
xor
cmp
icebp
push
fildl
inc
rcr
pop
and
and
jle
test
cmp
xor
pop
and
xor
mov
mov
ror
mov
mov
push
push
mov
mov
add
push
js
sahf
mov
add
je
sub
push
shlb
cmp
sbb
add
lock
jl
mov
rcrb
add
push
pop
js
mov
flds
xlat
aam
add
in
clc
fs
push
or
fmull
lcall
sub
decl
aad
ljmp
cmpb
add
pop
test
and
roll
bound
ljmp
stos
add
out
mov
adc
pop
add
icebp
gs
loopne
mov
andl
adc
or
cmpb
es
adc
ret
addr16
or
jl
jg
cld
leave
pop
cmp
and
fisttpll
fdivr
ror
inc
ss
nop
lods
jno
sub
int3
rolb
lret
pushf
mov
push
add
xor
add
icebp
or
push
xor
add
or
jae
xor
or
icebp
cmc
and
add
rclb
add
sahf
cmp
decb
nop
test
sbb
pop
shl
xor
sub
fs
lahf
push
jnp
xor
add
pop
or
shlb
leave
xchg
push
daa
fwait
mov
enter
int3
addb
and
imul
jmp
adc
fsubp
lahf
faddl
mov
and
jl
adc
sbb
lods
add
xchg
sbb
xchg
in
test
adc
dec
mov
loope
pop
inc
jb
jmp
fmuls
sbb
xchg
and
sbb
pushf
pop
shlb
cltd
add
push
sbb
or
adc
sbb
fmul
nop
dec
lret
in
or
add
or
in
shrl
test
mov
dec
sbb
push
dec
addr16
sub
or
dec
cmpl
pop
mov
adc
iret
into
jecxz
mov
loop
adc
lods
mov
sub
fstps
and
pushf
dec
push
fidivl
lahf
iret
enter
cmp
mov
pusha
cmp
sbb
sbb
mov
inc
jl
shrb
mov
lods
test
pop
push
fwait
cmp
shl
pop
push
movsl
xor
xor
dec
and
cwtl
ljmp
enter
mov
dec
frstor
sbb
repz
hlt
sbb
jne
ss
rorl
push
sbb
test
adc
pop
add
shlb
jo
sahf
push
inc
mov
adc
or
std
cmp
inc
mov
aad
push
aaa
mov
add
and
rol
ret
rorl
movsb
add
cltd
dec
xchg
mov
cmp
jle
pop
in
mov
subb
insl
ret
dec
sub
roll
fadds
push
push
test
pop
xor
loope
rorl
fadds
adc
xchg
mov
mov
repz
mov
dec
mov
mov
icebp
lods
add
and
fadd
pop
in
rclb
mov
add
fs
adc
adc
adc
rcrb
mov
sub
mov
aas
stc
hlt
shrb
mov
add
nop
and
xor
rolb
inc
xchg
lahf
and
es
pop
push
stos
dec
in
ret
push
in
push
jl
push
movsb
push
xchg
pop
add
nop
sub
rcll
add
xchg
xor
repz
jo
push
fstp
aam
call
fildl
add
cmp
and
jmp
js
dec
jnp,pn
int3
add
lcall
xor
push
sub
enter
dec
nop
mov
std
add
jne
stos
pop
lock
inc
shl
aam
jg
cmp
cwtl
inc
pusha
pop
fstps
rorb
cmpsb
clc
dec
sbb
sub
cs
jns
inc
sub
scas
inc
pop
pop
sbb
cmpsb
nop
and
or
fiaddl
push
aas
jp
rolb
add
pop
dec
cmpsb
mov
dec
mov
repnz
jp
sub
out
mov
mov
xchg
stos
add
movsl
lods
fimull
fs
dec
add
mov
cld
jnp
add
es
and
fistl
push
mov
leave
adc
in
fs
add
shr
adc
pop
xchg
sub
push
inc
add
xchg
cwtl
dec
dec
mov
iret
mov
rcll
add
loope
pop
sub
enter
or
adc
dec
add
in
in
ffree
loop
ljmp
jmp
loopne
mov
mov
push
sbb
inc
je
cltd
mov
jne
fists
sbb
shlb
ret
addb
loope
sub
out
jg
mov
or
jmp
jp
ret
cmp
sbb
jnp
mov
mov
pusha
xchg
mov
dec
clc
cli
xor
mov
dec
popa
scas
inc
lock
or
outsb
test
push
sbb
sbb
pusha
lret
dec
sub
add
and
sbb
scas
add
jge
frstor
adc
add
push
movlps
and
or
jbe
xchg
pusha
inc
rcrb
in
fisubrs
pusha
push
add
and
lds
push
ss
mov
test
test
and
push
or
jb
push
ljmp
test
jnp
movb
nop
and
es
test
and
cmp
pop
sub
mov
sub
cmc
in
addl
pop
push
nop
in
jl
pop
insl
lea
add
dec
pop
ret
pop
ret
movsb
int3
cmp
xchg
xlat
adc
popf
add
call
fsubl
mov
xchg
push
addb
or
popa
shrb
push
sbb
pshufw
push
xchg
xor
xchg
push
sub
and
repnz
xor
and
push
and
lret
cmp
xchg
lods
stos
fmulp
cltd
cltd
xor
mov
push
incl
mov
xor
shlb
fnstenv
addr16
cltd
inc
cmp
pop
push
inc
inc
enter
push
movb
sbb
and
enter
push
fldcw
bound
mov
pusha
xor
rolb
pop
fadd
or
dec
dec
movsb
addl
adc
push
add
inc
movsb
adc
add
lods
leave
add
pop
repz
subb
test
xchg
xchg
fimuls
cmp
aaa
in
mov
stos
add
jmp
cmp
icebp
inc
shll
mov
and
rcrl
and
out
jbe
or
jl,pn
dec
mov
jno
add
adc
inc
inc
ret
or
push
sbb
jl
inc
dec
pop
add
movsl
int
stos
mov
jp
add
and
sbb
addb
mov
ljmp
and
inc
pop
add
mov
sub
bound
mov
rep
orl
int
fisubrs
cmp
rolb
int3
xchg
add
rclb
xchg
push
cwtl
mov
xchg
add
and
xchg
add
and
out
or
cltd
push
movsl
add
xchg
pusha
js
pop
or
sub
movsb
jno
add
push
push
mov
outsb
sub
sbb
cmp
loopne
loopne
pop
push
in
aas
fisubs
subb
add
divl
mov
lret
int
inc
loope
jmp
pop
adc
outsb
xor
sti
push
test
or
dec
pop
add
dec
icebp
sub
sbb
jo
pusha
loopne
je
or
aam
add
dec
insb
adc
sti
repnz
mov
add
fldl
sbb
add
test
mov
sbb
jg
add
ja
and
orl
jae
sti
and
js
je
vmaxsd
xchg
enter
dec
scas
loopne
insb
cmp
imul
add
fisubs
push
cmp
dec
pop
add
mov
push
mov
insl
mov
cmp
pop
lods
sub
mov
data16
nop
clc
add
imul
add
push
loopne
mov
outsl
sbb
xor
sbb
sub
mov
or
faddl
cmp
shl
push
add
pusha
mov
pop
pop
scas
aaa
jae
add
ss
sbb
fildll
mov
or
inc
jns
lea
or
add
outsl
xchg
sahf
add
pop
jg
iret
fs
sbb
push
sbb
adc
in
mov
out
push
inc
fs
fdivs
dec
dec
inc
call
cli
cmp
orb
mov
adc
add
xor
and
adc
add
inc
int3
mov
sarl
push
cmpb
pop
xchg
and
cmpsb
push
lcall
icebp
fnstsw
sbb
jnp
add
js
test
mov
sub
jb
and
in
outsb
nop
xor
dec
and
inc
filds
pusha
lock
and
int3
stos
mov
mov
jp
stos
mov
lret
and
hlt
jmp
push
or
js
push
jne
pop
shrl
xchg
icebp
jecxz
adc
out
or
ss
nop
and
sbb
mov
shll
pop
mov
and
das
nop
clc
mov
ja
and
adc
pusha
mov
in
pop
jno
sub
inc
jecxz
mov
inc
shrb
loopne
mov
rclb
ficompl
pop
test
xchg
stc
pop
add
data16
loope
fsubrs
mov
pusha
cli
and
mov
stos
xchg
xchg
icebp
shl
sbb
pop
jns
or
or
push
cmp
iret
dec
out
mov
test
outsb
mov
mov
xchg
out
push
add
cmp
jnp
xor
inc
mov
pusha
lods
dec
fs
mov
int3
jbe
aaa
inc
nop
push
inc
add
out
cld
mov
subb
mov
sbb
enter
and
negl
push
xchg
inc
cld
lods
pusha
add
mov
scas
pop
xchg
cmc
push
test
push
mov
pop
mov
mov
or
pop
inc
testb
repz
movsl
xchg
das
hlt
mov
lock
xor
adc
arpl
push
stos
out
fldl
add
adc
popa
shlb
sbb
sti
call
shrb
out
imul
jmp
gs
cs
pop
sahf
dec
pop
int
adc
mov
and
cwtl
enter
andb
pop
inc
push
test
ss
sarb
repnz
out
in
call
pop
push
sbb
out
pop
inc
loope
mov
jbe
sbb
push
adc
mov
add
dec
loope
sbb
xchg
or
or
cmp
fsub
movsb
icebp
test
pop
leave
mov
jb
movsl
or
cmp
divb
dec
sbbb
mov
or
mov
rclb
mov
es
hlt
inc
mov
or
sbb
enter
loop
shlb
push
mov
and
imul
rclb
dec
fwait
mov
sbbl
enter
jno
push
sti
pop
sbb
dec
out
or
cld
jns
jns
sbb
adc
in
add
push
sbb
loopne
je
int3
add
cltd
adc
sub
push
out
cmp
outsb
imul
or
xchg
xor
mov
adcb
adc
sub
pop
pushf
sbb
and
cltd
je
icebp
xchg
jo
pop
ret
movw
ds
outsb
jno
out
aas
dec
jg
mov
push
inc
or
pusha
sub
add
iret
or
adc
emms
push
outsl
xor
mov
lahf
add
push
mov
add
dec
adc
fwait
inc
jne
xchg
mov
push
and
mov
daa
mov
iret
leave
add
ret
add
cmp
stc
imul
divl
and
loope
inc
rorb
pop
mov
es
sahf
shrd
mov
add
pusha
and
xor
and
and
mov
xchg
xor
dec
lea
bound
inc
mov
sbb
mov
cmp
data16
mov
ja
pop
clc
inc
sub
pop
add
and
and
push
adc
adc
xchg
sub
adc
bound
or
test
inc
inc
xchg
jnp
pusha
and
js
insb
jb
and
leave
xchg
sbbl
ret
cmpl
repnz
xor
inc
mov
sbb
sbb
fldt
pushf
enter
shl
push
or
dec
into
add
xchg
inc
mov
add
pop
leave
mov
lock
dec
mov
pop
clc
xlat
fldl
jg
mov
sub
sti
add
shll
xchg
sub
mov
jne
adc
mov
cmpsb
and
lock
in
roll
add
stos
and
stos
push
and
shl
cmpsb
inc
daa
stos
dec
mov
cwtl
mov
mov
pusha
movsl
xor
in
cs
dec
fdivrl
or
xor
add
mov
dec
or
push
scas
addl
bound
mov
or
pop
movsb
add
cltd
mov
jmp
orb
lods
insl
cmp
cmp
pop
je
repz
xchg
dec
shl
inc
jmp
iret
xor
jns
xor
scas
sub
mov
icebp
enter
xchg
sti
jnp
test
or
ret
inc
test
popf
xchg
mov
jl
addl
adc
bound
push
pop
push
cli
fxtract
add
into
insl
lods
test
add
mov
das
or
fcomi
mov
mov
add
mov
adcl
rorl
inc
mov
pusha
subl
lret
enter
pop
inc
jne
inc
idivb
add
jle
fistpll
xor
call
mov
cwtl
mov
mov
or
scas
cli
jnp
lahf
sub
inc
aam
movsl
mov
add
xlat
in
sub
dec
mov
in
lahf
xchg
push
add
insl
push
or
out
add
js
jp
pop
mov
add
sbb
jb
in
fnsetpm(287
cwtl
popl
cmp
shll
loopne
lret
dec
nop
and
mov
xchg
scas
sub
xlat
pop
inc
jnp
sbb
sub
popa
imul
sbb
pop
gs
add
jns
jl
cs
addb
adc
iret
inc
jnp
add
lahf
xchg
adc
aam
notb
mov
cmp
or
and
inc
sti
push
out
mov
shlb
fimuls
add
sub
adc
and
mov
test
sti
push
mov
rolb
ret
jp
add
dec
aaa
in
add
lret
mov
cld
dec
idiv
add
mov
mov
mov
jl
lret
repnz
test
pusha
scas
push
in
enter
hlt
adc
rol
mov
iret
jp
add
pop
mov
test
mov
lret
push
test
jmp
xor
out
mov
xor
mov
lret
mov
add
sarb
nop
add
add
jg
add
sar
popa
xchg
insl
in
iret
jg
add
adc
xchg
cmpsl
dec
mov
mov
and
adc
clc
aad
loope
add
ja
jnp
jmp
outsl
xor
cmp
xor
pushf
fimuls
pop
or
movsb
add
jle
xchg
add
push
imul
add
mov
cmc
add
and
les
mov
xor
std
jns
outsb
jecxz
add
mov
push
xor
lahf
mov
or
mov
sub
gs
add
int3
pop
pop
add
rcl
add
inc
fwait
out
xchg
jmp
enter
add
mov
pop
adcl
or
shrl
push
fdivrp
mov
fcompl
hlt
pop
stc
sub
lock
aaa
lret
fmul
hlt
test
ja
adc
ficoms
push
xor
sarb
inc
xchg
cli
lock
add
movsl
xor
lds
lahf
js
cmp
mov
mov
adc
sbb
xchg
roll
test
out
dec
insl
mov
add
lea
jmp
cmp
addl
hlt
pop
push
mov
mov
in
shlb
inc
push
adc
fwait
inc
push
mov
pusha
adc
stos
add
popa
lret
xorl
cli
pushf
dec
inc
cwtl
ret
jno
cmc
cltd
add
push
pop
nop
pop
adc
push
rolb
test
dec
mov
decl
mov
cmp
add
aaa
sbb
into
flds
xor
nop
pop
out
push
fwait
cli
add
or
les
scas
es
rolb
fs
cmpsl
jb
fwait
add
scas
mov
push
cmpsl
xchg
mov
push
add
repnz
clc
ljmp
or
xor
ds
aaa
push
cld
outsl
mov
loopne
sbb
ficompl
mov
or
mov
fnstcw
adc
jae
call
dec
jecxz
testl
mov
pop
add
outsb
jle
jp
popa
movsl
add
xor
cmp
push
dec
jns
dec
xchg
dec
testl
xor
inc
adc
add
add
pop
movsw
mov
cltd
addr16
pop
repnz
mov
xor
add
gs
enter
into
dec
add
je
xchg
add
and
push
push
add
addb
pop
mov
mov
dec
xlat
mov
mov
pop
sbb
add
and
pop
xchg
stos
lods
pusha
pushf
adc
jo
mov
dec
dec
gs
jmp
mov
rolb
clc
mov
cmp
mov
xchg
add
adcb
add
scas
outsl
pop
xchg
xor
add
sti
test
add
sbb
mov
push
add
ss
lods
cltd
filds
out
int
mov
addr16
xor
rcll
push
xchg
mov
pop
test
add
int3
push
mov
sbb
subb
inc
add
mov
cwtl
stos
jmp
cmp
dec
xchg
mov
inc
add
inc
mov
jl
aad
add
into
movsb
call
pop
sbb
and
sbb
aam
aad
movsb
lds
fadd
leave
add
mov
movsb
test
add
nop
pop
push
add
xlat
cmp
cmp
mov
mov
push
pushf
sub
leave
mov
cli
lahf
scas
test
aam
jp
call
xchg
sahf
mov
and
pop
jecxz
repnz
repz
pop
inc
inc
add
mov
xchg
imul
sub
sbb
lcall
cmp
fbstp
lods
mov
pop
shlb
bnd
add
inc
pop
in
adc
pop
test
shlb
loop
sbb
add
dec
bound
ljmp
iret
xor
test
call
fnstsw
xchg
and
outsl
loopne
adcb
push
aaa
dec
xchg
imull
lods
add
adcb
xchg
pop
add
xor
xchg
inc
hlt
jns
mov
std
out
int3
mov
addb
out
xchg
sbb
inc
sbb
sub
xor
mov
xchg
cwtl
or
push
cld
dec
shrb
add
fnsave
add
xor
jns
fbld
dec
mov
movsl
mov
pop
xor
jbe
or
rorb
mov
cltd
mov
out
mov
jge
pusha
push
jo
ja
rolb
aaa
jle
iret
mov
fdivrl
outsl
cld
in
filds
call
pop
xchg
inc
and
sub
test
cmpsb
pop
push
mov
mov
add
xlat
dec
fwait
mov
gs
arpl
pop
lock
add
sti
ja
fwait
rolb
es
pusha
add
in
add
jg
pop
popf
mov
test
adc
and
xchg
movb
ret
jle
mov
lds
clc
push
add
mov
adc
push
add
ret
dec
nop
int3
add
push
loop
out
movb
mov
stos
sbb
adc
pop
push
adc
and
add
add
sbb
mov
sub
loopne
movsl
int3
add
sub
add
jae
roll
iret
sbb
jno
int3
pusha
daa
addr16
inc
mov
nop
mov
in
sbb
cmc
fnsave
inc
xchg
mov
aad
std
out
add
inc
test
xlat
pop
pop
adc
jp
rol
insl
divb
mov
imul
sbb
jge
mov
scas
mov
call
adc
or
aad
inc
xor
add
arpl
xlat
and
jnp
push
je,pn
mov
adc
dec
pop
add
cltd
mov
xlat
addb
dec
inc
sahf
xor
mov
repnz
outsb
lods
out
shlb
jl
fmuls
test
mov
repz
xor
jg
sub
adc
cmp
or
testb
add
arpl
pop
push
xor
data16
es
aaa
bound
push
mov
add
add
jmp
aam
cld
rorb
sub
inc
loop
flds
or
xchg
and
out
mov
jmp
adc
cli
jle
xor
and
imulb
inc
jb
add
mov
les
jl
lods
popf
int3
outsl
mov
int
loope
std
orl
xchg
inc
push
sbb
or
add
pushf
add
jmp
call
popa
add
daa
inc
add
jae
out
mov
std
push
add
fimuls
jmp
add
sub
jl
mov
and
fmul
add
scas
nop
in
adc
int
mov
and
fisttps
icebp
mov
hlt
loope
cmp
mov
dec
fs
sub
pop
and
jns
cli
dec
insb
test
mov
mov
out
addr16
popa
adc
jbe
ja
ret
loopne
sti
or
add
arpl
adc
or
pop
xor
push
lea
cli
test
add
cmp
idiv
jae
mov
push
repnz
and
dec
sub
mov
jne
in
ret
bound
inc
lret
sub
loope
cmpl
hlt
xorb
mov
das
add
shrb
sub
add
mov
dec
add
popa
dec
pop
sub
push
loopne
loopne
xchg
add
adc
and
dec
xorps
mov
push
push
mov
add
out
adc
add
cmp
xor
inc
and
in
std
push
pop
xchg
mov
je
push
divb
or
or
sbb
jg
aaa
loopne
test
scas
and
pop
dec
or
jb
nop
in
mov
sbb
imul
pop
mov
add
cmp
xor
fcmovne
dec
fldenv
adc
mov
mov
mov
mov
pop
mov
mov
pop
sub
fwait
enter
and
push
mov
mov
xlat
hlt
add
mov
mov
bound
add
jae
mov
add
loope
in
mov
inc
mov
fisttpll
and
test
outsl
fnstcw
pop
inc
out
inc
sbb
fadds
push
mov
lret
fistl
inc
repz
xor
mov
pop
push
mov
sub
ret
subb
push
adc
test
cmpsl
xor
adc
pop
mov
pop
add
jg
fcompl
inc
add
pop
loopne
gs
stc
add
out
cmp
faddl
in
mov
mov
cmp
mov
mov
add
fs
clc
outsl
add
fsincos
and
sbb
jecxz
add
ja
ret
add
mov
incb
lds
fstpl
stos
inc
fisubs
lahf
pop
outsb
cmpsl
mov
push
and
stos
add
pushf
jnp
mov
outsb
js
add
aad
cld
sub
call
cmp
cmc
mov
mov
push
add
ret
push
sbb
mov
dec
pop
dec
out
je
mov
add
or
cmp
sbb
push
int3
mov
pop
popa
mov
pop
stos
f2xm1
addr16
sub
or
ja
popf
or
add
push
ss
xor
leave
or
add
lret
outsb
pop
mov
or
repnz
mov
push
or
movsb
into
out
xorb
lea
dec
fs
mov
fidivl
adc
inc
xchg
das
enter
faddl
inc
outsl
test
pop
add
aaa
jmp
jno
aam
outsl
pusha
mov
ds
aaa
or
shrl
and
pop
out
cmp
or
add
push
adc
es
fchs
cwtl
aas
push
push
lock
lea
addl
out
pusha
orb
or
pushf
fsts
mov
cwtl
sub
sbb
cmpsb
and
orb
idivb
add
shr
fsubrs
and
add
inc
mov
xchg
int
lret
and
lret
aam
int3
into
mov
cmp
cli
sub
insb
add
or
cwtl
mov
dec
push
das
adc
fsubp
repz
jae
sbb
add
stos
mov
pop
jbe
jae
dec
comiss
xor
test
fs
sbb
inc
mov
inc
sbb
jo
push
add
dec
adc
mov
adc
imul
jmp
push
out
add
sar
mov
add
call
int3
pop
add
dec
outsl
sub
push
cmp
sub
lock
stc
dec
and
fwait
add
shlb
std
xchg
lods
adc
lea
loop
jg
cwtl
outsb
clc
cmp
cmp
lods
fcomps
mov
aam
fs
dec
sahf
ds
jne
ljmp
mov
adc
push
lcall
add
enter
lds
loope
jge
test
push
add
mov
pop
inc
jb
clc
cmp
and
pop
jecxz
and
sub
nop
add
in
fmul
cmp
and
movsb
out
xor
add
lods
pop
mov
mov
push
xchg
add
push
imul
int3
xchg
dec
stos
test
mov
pop
mov
pop
loopne
push
jle
pop
pop
out
jo
add
enter
out
jecxz
mov
iret
arpl
xchg
popf
mov
in
dec
pop
leave
fisubrl
sub
xchg
fwait
rcrb
jmp
xor
enter
cmpb
out
add
push
insb
addl
pop
fst
stos
mov
aam
mov
push
cltd
ljmp
and
sub
or
and
out
xchg
fcmovu
insl
cwtl
jp
sub
sub
add
dec
jno
add
ret
outsl
inc
sbb
iret
decl
cld
mov
cmp
popa
mov
stc
jmp
hlt
and
add
xorb
push
mov
mov
cwtl
in
loop
inc
jecxz
ljmp
int
cwtl
fldt
rclb
nop
aam
jb
fsub
jno
jp
add
out
aaa
push
inc
xchg
int
jo
test
jl
pop
add
aam
mov
pop
loopw
xchg
dec
subb
jae
add
das
in
push
jns
pop
mov
lds
rclb
dec
pop
ret
jo
xchg
inc
sbb
dec
adc
enter
push
add
push
xchg
or
pop
push
ret
imul
xlat
bsf
in
add
add
sti
outsb
push
aaa
jne
add
popf
filds
ja
mov
cli
scas
mov
sbb
jb
xchg
jmp
sti
add
xlat
and
add
aad
push
add
push
cmpsl
jae
shlb
cld
xor
repnz
add
stos
cmp
xchg
mov
or
jp
aaa
add
jbe
iret
mov
push
fdivrl
inc
movsl
sahf
push
fadds
push
xor
mov
pop
add
imul
addps
sub
out
cmc
ror
add
sub
daa
les
addl
cwtl
femms
aam
cmpsb
subb
stc
and
mov
add
and
and
mov
test
add
sub
adc
mov
add
into
call
adc
adc
add
je
addb
lds
add
xchg
and
inc
pop
push
sub
xchg
rclb
xor
sarl
cmpsb
cs
add
lret
mov
cmc
lods
push
lret
sti
pushl
sub
adc
pop
dec
ret
outsl
add
repz
test
stc
push
xchg
cmp
test
in
add
jge
push
into
fcmovne
add
loope
or
jmp
mov
sub
add
push
repnz
inc
or
ret
jmp
mov
jbe
aaa
pop
cmp
psubsb
ffree
push
jnp
andb
loopne
popa
pop
and
mov
push
jecxz
jne
add
shrb
mov
sbb
adcb
aad
sbb
dec
in
add
fdivs
add
pushl
jae
dec
es
and
add
push
inc
or
sbb
cs
je
sarb
repz
pop
or
mov
hlt
or
ja
xor
data16
cwtl
mov
repz
test
dec
add
push
jl
cmp
add
pop
push
adc
call
push
stos
jne
mov
adc
xchg
add
push
dec
cltd
sbb
pop
dec
add
rcrb
stos
leave
jmp
mov
aaa
mov
xchg
outsl
mov
jle
add
cmc
push
jmp
mov
push
sbb
sub
andl
add
int
cmp
in
fdivr
inc
jbe
xchg
cmp
xchg
inc
adc
hlt
jnp
es
dec
xor
xchg
or
mov
inc
mov
aam
adc
divb
inc
add
outsl
scas
push
ds
jle
mov
lock
aaa
jnp
daa
add
add
in
push
add
adc
repnz
cli
cmp
jb
push
arpl
aas
add
xor
daa
add
and
push
mov
cltd
sub
adc
inc
push
lds
add
into
test
lods
jne
or
clc
and
dec
popa
fdivl
push
ret
xchg
cli
sbb
fdecstp
pop
add
xor
test
add
and
push
xor
add
dec
je
loopne
adc
aas
sub
cli
lcall
adc
sub
scas
add
fimull
add
movsl
jns
xor
loopne
pop
test
cld
add
daa
jb
mov
push
sarb
repz
adc
jge
fadds
push
mov
cmp
add
test
add
notl
enter
adc
ret
pushf
mov
in
jno
pop
lock
add
aad
rcrb
xchg
pop
mov
repz
or
jnp
push
add
and
popa
fisttps
outsl
cmp
push
fwait
jno
inc
push
mov
in
xor
sbb
ja
pusha
xchg
outsl
in
push
gs
inc
mov
adc
cwtl
sbb
adc
aad
push
lock
mov
cmpsl
loopne
add
or
jl
stos
cmp
pop
jp
mov
sbb
jg
mov
mov
mov
lods
mov
sbbb
push
inc
lea
faddl
add
or
adc
mov
leave
jle
fisubrs
nop
out
xchg
scas
push
and
pop
add
push
mulps
test
in
jge
add
mov
push
push
jp
popa
popl
push
push
les
mov
mov
cmp
cs
cmpsb
lock
xchg
sbb
xchg
ret
lds
addl
add
popa
idiv
shlb
mov
cmp
pop
add
call
clc
jns
add
aaa
aad
icebp
push
add
lock
stos
and
cmp
xor
scas
shlb
inc
xor
cmp
mov
out
test
leave
add
dec
pop
cld
add
shrb
mov
daa
mov
xor
sub
lods
test
fistpl
loopne
and
xchg
mov
repnz
out
int3
jle
loopne
jns
add
js
pop
push
jecxz
push
pop
test
popa
ja
jo
mov
jle
or
mov
stos
ret
ss
mov
sahf
cmpsl
jmp
push
clc
rcrl
sbb
and
pushf
test
pop
ret
dec
cmp
out
outsb
sbb
jne
sbb
push
enter
and
addr16
lods
push
add
adc
cltd
test
xchg
pop
add
stos
inc
arpl
ret
dec
mov
mov
std
add
mov
and
push
lods
xchg
xadd
mov
cmc
adc
adc
imul
mov
add
pop
rcll
or
add
xchg
cs
ret
push
das
mov
mov
je
aaa
sbb
pushf
mov
add
lock
sbb
sub
jecxz
sub
xchg
add
xchg
mov
rcrl
out
testl
push
fnstenv
fdivp
add
mov
arpl
cmp
cld
add
testb
pop
xor
push
daa
xchg
mov
test
lock
pop
adc
in
inc
xor
movsb
add
mov
sbb
jmp
popf
push
xchg
mov
rcrb
call
sbb
fcomps
stc
adc
sub
repz
data16
add
xchg
push
push
add
repnz
pop
ret
insb
xor
insl
sarl
add
shlb
cli
test
clc
sub
nop
stc
xorb
add
cwtl
ds
inc
mov
add
mov
dec
test
fimull
sbb
lret
inc
fidivs
pop
inc
mov
in
rclb
cmpb
inc
add
fsts
xchg
ds
add
and
out
lcall
push
mov
js
loop
sub
adc
cmp
repnz
call
hlt
repnz
sbb
pop
jp
xchg
push
mov
xor
sahf
in
shll
add
pop
push
out
mov
mov
incl
xchg
cmpsb
sbb
adc
leave
mov
subb
add
inc
sahf
xor
xchg
add
add
pop
dec
scas
jns
nop
in
js
sub
aam
add
cmp
fadds
fldt
inc
repz
lcall
in
mov
mov
inc
inc
mov
pinsrw
add
push
cmp
test
rcrb
cmc
mov
mov
sbbb
cmp
add
push
fsub
scas
sbb
lret
test
fsub
dec
mov
sbb
push
pop
mov
add
push
fisubrs
add
and
orb
push
sbb
cmp
jo
stos
insl
and
sub
adc
rolb
rep
add
mov
jb
fwait
and
sub
out
and
mov
sub
or
js
lret
or
rcl
fisubrl
loop
add
inc
outsl
mov
sbb
add
in
popf
fwait
and
shlb
lock
test
data16
mov
cmpsb
xchg
cmp
loope
cli
mov
mov
add
and
lcall
sbb
cmp
fcoms
or
lods
insl
pop
je
or
andl
add
pop
mov
sti
add
mov
and
gs
push
cli
xchg
cmpsl
xor
jecxz,pn
gs
fcoms
data16
adc
sbb
mov
pop
mov
adc
psubw
inc
sub
adc
mov
and
and
sub
inc
aad
test
ret
sub
incl
out
inc
ss
add
lret
inc
sub
outsb
jp
es
ficoms
into
out
jnp
psadbw
jne
fidivl
fistps
mov
add
fadds
xchg
push
add
aaa
adc
pop
push
xor
jg
fsubrl
and
sbb
xchg
pop
pusha
insb
mov
mov
js
add
cmp
ret
add
roll
sbb
jb
or
scas
pop
add
or
mov
mov
adc
js
lds
inc
add
rol
sbb
xchg
clc
mov
in
aam
add
mov
ljmp
test
xorl
add
call
into
andl
stos
insb
shl
or
ljmp
add
outsl
cmp
inc
jbe
shl
out
addl
cmc
or
movb
mov
push
mov
das
lret
test
sbb
scas
add
repnz
or
daa
jmp
fisttps
mov
in
xlat
inc
or
cmp
js
add
jno
test
mov
jnp
add
out
aaa
aad
sbb
mov
cmpl
inc
orl
adc
push
pop
mov
sub
out
sub
cmpsl
mov
xchg
sub
pop
xchg
jns
jle
add
inc
sbb
pushf
cmpsl
repz
jecxz
add
ljmp
xchg
add
std
push
jmp
xor
aad
cmp
xor
mov
cmpsl
mov
xchg
add
jno
xchg
xchg
mov
lock
pop
dec
js
jnp
push
daa
xor
adcb
pop
rol
pop
or
lock
pop
out
incl
sahf
es
jg
rcrl
repnz
mov
or
aam
call
and
mov
movl
adc
stc
out
ljmp
adc
jns
jge
add
fsubl
mov
pop
scas
add
aad
jle
add
hlt
cmp
out
push
neg
xchg
cmp
leave
push
lock
jno
sub
add
ja
mov
jp
jg
iret
add
repnz
lock
and
xchg
cmp
imul
sub
sahf
mov
push
in
flds
mov
pusha
mov
pop
add
push
push
outsb
jbe
jg
xchg
mov
das
repnz
xchg
push
add
fdivl
arpl
ret
or
imul
test
xor
sbb
cmpsb
mov
inc
stc
cmpl
testb
mov
add
lds
add
or
mov
pop
js
cmpb
addr16
xchg
std
lret
aas
aad
push
cmpsb
out
pusha
push
cmp
arpl
pushf
js
add
pop
sbb
xchg
mov
push
out
lea
mov
pop
or
sbb
push
add
incl
jmp
sbbb
fs
and
lret
dec
add
jno
add
adcb
test
or
outsb
daa
add
mov
add
pop
pop
enter
enter
testb
xorb
and
insl
pop
std
add
jns
cmp
inc
dec
sbb
add
mov
into
add
shl
push
jnp
fwait
cmc
por
add
add
mov
cli
mov
xchg
stos
mov
or
jb
jns
nop
sti
in
stc
and
add
pushf
loopne
add
push
and
ficoml
fwait
adc
loope
inc
enter
xchg
popf
add
or
rorb
test
jmp
inc
push
in
cmpsb
cld
rolb
dec
daa
imull
sub
in
je
nop
aaa
addl
and
xchg
cltd
roll
cmp
add
push
insb
xor
outsb
mov
pop
scas
jno
add
xorl
sub
mov
dec
ds
pusha
mov
shlb
add
icebp
sbb
nop
or
add
dec
inc
scas
sbb
mov
enter
push
pop
jmp
xchg
filds
inc
and
loopne
outsl
in
loop
add
stc
inc
mov
js
add
movsl
lods
xlat
add
jnp
lods
stc
lret
call
inc
data16
add
mov
inc
dec
push
push
call
mov
add
ficomps
ret
push
lods
aam
daa
mov
aas
push
add
in
push
mov
cld
pop
inc
ficomps
sub
mov
in
arpl
insl
lret
fildll
and
jnp
cld
sub
pushf
mov
sbb
add
mov
in
cs
sbbl
in
cli
xor
mov
aad
mov
neg
add
inc
jle
int3
xor
xchg
hlt
incl
lods
es
clc
adc
mov
cmp
in
cld
ja
add
stc
sarl
adc
fldenv
and
mov
loopne
out
push
cltd
ret
aad
add
add
add
mov
inc
push
pop
insl
add
movsb
loope
cmpsb
imul
jb
lcall
repnz
pop
dec
addr16
int
pop
mov
and
xchg
into
repnz
sub
sbb
inc
add
pop
add
shrl
mov
jae
cmp
fstl
mov
movsb
pop
add
mov
leave
xor
imul
inc
ds
add
cmpsl
fcomp
cmp
xor
mov
sbb
add
cs
or
icebp
xchg
mov
cld
mov
out
jo
cmp
mov
mov
pop
sub
ficomps
cmc
adc
xor
fstl
pop
jecxz
rolb
sbb
fcos
fwait
insl
cmp
add
mov
stos
mov
mov
in
cmp
jbe
mov
xchg
pop
sub
push
xorb
out
add
flds
aam
adc
aaa
ficoml
push
mov
adc
shll
push
enter
mov
int3
shlb
cmp
and
mov
fadds
andb
cld
lret
ss
inc
add
jb
push
xor
imul
push
jne
sbb
mov
mov
jle
cltd
stos
pusha
add
mov
lret
ficompl
dec
add
popa
sub
mov
push
add
fwait
lret
lahf
add
dec
add
xor
push
loop
aad
ret
addb
iret
jne
roll
jno
jb
into
lds
mov
fistps
cld
insl
xor
pop
rolb
mov
in
ljmp
adc
fnstenv
xor
xchg
hlt
fdiv
int
shrb
and
movsl
ret
mov
push
mov
insl
mov
mov
into
xchg
mov
int3
add
mov
rcl
iret
insl
add
enter
call
test
jecxz
movsb
mov
cmp
notb
nop
cmp
sarb
jnp
sub
dec
add
cmpsb
lods
cmp
push
add
jmp
add
xchg
sub
popf
les
cld
and
outsl
pop
push
out
lahf
lock
mov
sbb
mov
or
sahf
add
xchg
inc
test
jecxz
or
aas
sub
in
dec
adc
out
outsl
stos
push
stc
mov
sar
fstpl
sub
cli
inc
fimuls
fcomps
add
mov
pop
mov
sbb
sbbl
xchg
jnp
push
js
add
into
icebp
sti
mov
loopne
fs
pop
inc
jae
mov
es
mov
mov
sbb
mov
add
shr
mov
out
mov
xchg
push
add
cli
cmc
add
lds
mul
push
popf
std
add
cmpl
xlat
dec
pop
popl
mov
or
cld
pop
add
inc
cltd
cmp
xor
inc
movsb
data16
in
add
in
les
cmp
jne
add
jbe
cmp
pop
jo
aas
jl
push
ja
mov
add
scas
mov
add
inc
ret
xchg
sbb
mov
lret
fldenv
cld
sub
add
adc
jae
dec
mov
in
add
or
mov
nop
add
and
and
mov
mov
sbbb
jle
orb
aad
in
add
pop
cmpsl
mov
mov
cs
test
add
add
cmp
push
test
outsb
addl
lea
icebp
insl
inc
test
and
cwtl
pop
add
fs
pop
das
stos
test
jno
outsb
shrl
jns
loopne
nop
lods
add
sahf
inc
and
mov
mov
lods
jp
sbb
jle
add
pop
arpl
loopne
sbb
mov
dec
xor
and
sbb
add
xchg
jmp
call
adc
pop
cmp
adc
in
sti
cli
jb
mov
or
mov
lahf
lods
hlt
push
mov
cmpsb
popa
and
dec
jb
add
test
cltd
inc
dec
enter
add
pop
rcrb
ss
mov
and
sarl
adc
out
add
or
inc
ret
push
shrl
xchg
or
adc
add
int3
or
arpl
fs
icebp
mov
push
xchg
xlat
add
cwtl
dec
dec
adc
mov
inc
cli
pop
lods
mov
xor
test
adc
cmp
insl
sub
sbb
cmc
jne
incb
dec
dec
cmpsb
mov
clc
pop
or
mov
sbb
xchg
and
adc
cmpl
dec
add
or
popf
push
fcmovnb
add
jns
inc
call
push
push
pop
in
adc
sbb
mov
repnz
add
push
xchg
lock
add
test
or
jle
andb
mov
jae
inc
mov
pop
dec
ja
or
jo
pmulhw
ljmp
lret
and
icebp
inc
xlat
xor
pop
or
mov
jp
mov
add
push
cmp
enter
and
add
iret
push
sbb
ret
sahf
mov
mov
test
aas
lock
add
hlt
add
ret
sbbb
xor
jle
push
or
add
mov
lret
pusha
rclb
es
mov
and
ljmp
in
shrb
adc
add
dec
imul
and
mov
mov
dec
sbb
add
loopne
xor
add
loope
dec
cmpsb
pop
adc
add
scas
and
sahf
sub
sub
pop
cmp
adc
push
dec
mov
adc
add
enter
std
incb
mov
jecxz
jmp
aam
iret
je
jnp
cltd
add
jnp
cs
jecxz
pop
shrb
push
arpl
pop
or
loope
icebp
rorb
or
int3
pop
ret
enter
add
sarb
cs
test
or
incl
test
lock
jp
mov
test
call
cmpsl
cli
jne
mov
jno
push
add
xor
or
pushf
hlt
or
xchg
pop
cmp
mov
lret
sahf
push
push
add
mov
ja
scas
enter
push
sbb
mov
orb
add
aad
sub
push
std
fdivrl
add
mov
scas
ret
push
punpcklwd
test
fadds
std
fstp
pop
dec
rclb
push
pop
jp
popf
sub
adc
cmp
movsl
clc
pop
ljmp
cmp
pavgb
stc
sub
aas
shll
out
in
mov
fcoms
mov
or
pop
add
mov
enter
add
and
clc
and
jno
ja
sub
xor
testb
sub
jbe
pop
pop
in
aas
enter
ja
xchg
imul
fcoms
dec
lods
sbb
repnz
mov
xor
or
dec
pop
int3
push
add
inc
lahf
aas
mov
xor
jns
test
xor
in
mov
ss
jne
orb
jg
add
sub
stos
push
xlat
test
ret
jle
pop
adc
lods
mov
rclb
xchg
ret
add
imul
xor
andb
out
sub
out
and
mov
sbb
sub
inc
scas
rolb
mov
add
add
xlat
mov
sbb
shll
adc
add
rolb
or
adc
inc
cmp
pop
and
sbb
mov
sub
bound
in
pusha
inc
cmp
or
imul
popa
add
push
scas
or
clc
xchg
sub
dec
pusha
lock
push
mov
mov
jle
add
dec
sarb
xor
add
inc
dec
jp
ret
jle
mov
pop
push
pushf
push
adc
je
and
cli
xchg
or
rolb
repnz
add
jmp
mov
xchg
js
dec
xchg
jl
cmp
add
mov
rorb
inc
jnp
add
mov
outsb
add
dec
dec
jns
sarb
inc
and
das
cmp
sbb
mov
xor
xchg
lret
add
cmp
mov
push
lea
pushf
repnz
mov
imul
cmp
test
pop
sbbb
cmp
dec
xlat
test
add
loope
mov
add
iret
mov
mov
cli
cmpsl
lock
lods
outsb
pop
sarl
push
add
adcl
sub
add
mov
sub
cltd
and
loopne
push
cmp
xchg
fdivrl
add
mov
ljmp
add
movsl
mov
call
xlat
ret
sub
sbb
mov
xor
cli
pushf
inc
jle
mov
scas
cmpsl
push
pop
xor
adcb
movsb
jg
and
jnp
add
rcll
inc
add
xor
mov
adc
add
xchg
mov
sbb
dec
add
inc
aas
js
add
sbb
xchg
pop
or
add
in
jl
jnp
lods
lahf
xchg
xchg
add
push
add
fstpl
lea
jecxz
sbb
stc
add
shrl
mov
inc
subb
mov
ja
cs
call
int
add
push
dec
xchg
imul
and
cs
mov
or
addb
or
dec
pop
mov
mov
clc
cmpsb
mov
dec
add
mov
lock
or
or
mov
scas
filds
cmp
insl
add
mov
pop
add
fnstenv
xchg
ror
jle
xor
loop
insb
xor
push
std
lods
and
fildl
push
adc
sar
data16
shl
rolb
ja
loope
dec
and
das
push
adc
imul
dec
jle
push
or
pop
inc
subl
mov
movsl
lds
cmp
cmp
mov
imul
mov
add
mul
dec
inc
cmpsl
add
jno
stos
pop
into
or
in
call
js
fdivrl
inc
pop
jp
sub
dec
adc
nop
add
cli
icebp
mov
dec
dec
into
test
inc
push
sub
fiaddl
shll
sbbb
cmp
mov
mov
add
outsb
xchg
call
ret
xor
int
out
add
lea
lods
repnz
repz
jge
mov
dec
xchg
aas
into
and
rolb
xor
cltd
sub
mov
mov
inc
lock
xchg
ja
mov
push
inc
sbb
jmp
addr16
mov
je
cwtl
sbb
mov
inc
dec
aam
inc
xchg
inc
test
insl
in
insb
cmp
mov
jcxz
int3
std
add
xchg
dec
mov
jo
lock
add
test
int
pop
out
pop
add
inc
push
addl
jbe
out
in
cwtl
mov
imul
cmp
add
gs
add
fadds
jnp
mov
jne
sbb
cmp
sahf
faddp
mov
call
and
add
ljmp
add
dec
ret
jno
mul
andb
in
add
mov
sub
out
add
sti
testl
push
jl
andl
mov
or
sub
dec
cmp
iret
fldl
xor
pusha
out
and
aam
mov
add
add
je
pop
sub
push
ret
out
add
inc
and
push
add
test
sub
mov
add
int3
lret
mov
add
cwtl
cmp
pop
in
loope
dec
xchg
add
int
sbb
ret
rorb
out
jo
aas
inc
sbb
into
add
sub
loopne
pop
xor
sub
jmp
rcll
xchg
add
mov
xchg
pop
pusha
adc
mov
loopne
addr16
sub
mov
add
hlt
xor
sbb
clc
mov
js
add
lds
cmp
cmp
outsb
xchg
jge
dec
arpl
mov
repnz
add
out
adc
xor
cwtl
ror
sbb
fdivs
out
adc
push
xor
mov
lahf
aad
lret
aaa
cmpsl
xor
rorb
add
jle
dec
xorl
add
ret
inc
push
jo
jg
scas
stc
add
jmp
mov
mov
in
mov
cmp
or
mov
lcall
inc
xchg
mov
and
inc
xor
imul
in
out
loopnew
add
mov
jb
movsl
add
lods
andl
out
jle
cmc
ss
pusha
and
stc
add
or
nop
lds
mov
add
jle
movsl
add
outsb
shl
xor
sbb
sbbb
sub
loope
lods
lret
push
iret
sub
add
sete
movsb
adc
pop
push
in
ljmp
jnp
popf
pop
jge
sbb
inc
sbb
lret
test
xor
dec
into
call
add
add
push
mov
insb
ja
loopne
dec
mov
or
jge
in
xor
test
cmp
lods
dec
inc
add
in
les
enter
lea
mov
dec
cmpsl
add
imulb
mov
mov
mov
ljmp
cmp
xorb
adc
imul
cmp
jl
push
dec
pop
and
sbb
enter
push
stos
add
std
lock
cmp
mov
adc
ficompl
pop
push
sub
in
lods
add
xchg
inc
xor
or
add
xor
mov
jo
add
aam
mov
cmp
jno
cmp
es
clc
cs
push
adc
mov
cld
sub
popf
ja
sub
repnz
es
fildll
daa
or
lds
cwtl
jb
or
and
cwtl
fidivrl
sahf
push
scas
mov
add
sti
mov
cmp
shr
loop
pop
shll
movsb
jae
loopne
dec
add
pushf
or
out
outsl
add
gs
arpl
sub
adc
lods
and
ds
stos
insl
lret
lret
add
xchg
adc
xor
pop
out
jge
mov
notl
mov
pop
pop
pop
mov
sarl
xchg
xor
hlt
iret
mov
sbb
shl
add
lcall
pop
pop
mov
lahf
in
inc
add
mov
pop
aam
mov
minps
jmp
dec
and
mov
sbb
add
cmp
data16
mov
jp
jne
out
add
sti
decb
pop
aas
add
addr16
mov
es
rorb
xchg
push
lock
out
cwtl
leave
mov
push
fiaddl
add
ss
xchg
push
xlat
mov
mov
xchg
mov
add
clc
sarb
shrl
fiaddl
repnz
loopne
push
adc
mov
jl
add
shlb
pusha
cmp
push
gs
jns
mov
hlt
sub
adc
sbb
adc
jne
lea
les
add
inc
imul
pop
roll
mov
push
xchg
or
sarb
sub
xchg
adc
icebp
add
push
jns
add
es
ret
or
repnz
in
pop
lds
je
sbb
in
test
popf
mov
lcall
add
jnp
dec
mov
xor
lock
ret
mov
cmp
mov
leave
shrl
bound
add
xor
loop
push
add
adc
call
xor
or
mov
jne
daa
xchg
xor
add
stos
cmpsb
xchg
fistpl
lods
jge
dec
xchg
cltd
mov
add
xchg
sub
mov
inc
insb
inc
jbe
int
jae
jns
mov
or
xchg
add
inc
push
js
add
mov
cmpsl
mov
fisttpll
outsb
mov
and
movsl
mov
je
jl
or
inc
pop
pop
and
sbb
mov
sub
push
clc
stc
jo
add
outsb
mov
lret
lods
jb
insb
sarb
sahf
or
popl
mov
xchg
push
sbb
dec
add
in
xchg
add
or
add
inc
inc
add
int3
mov
dec
mov
add
jp
xor
popf
add
dec
or
out
dec
add
push
ljmp
add
sbb
fs
cmp
add
std
das
cld
sub
out
mov
in
and
lea
dec
xchg
je,pn
popa
sbb
stos
rolb
jno
mov
inc
mov
std
push
add
or
aam
sbb
cmp
rorl
jb
leave
lret
mov
jl
pop
cs
inc
adcb
push
popa
insb
jb
pop
int3
mov
mov
ja
loope
les
jbe
add
cltd
lds
gs
cwtl
mov
mov
loopne
adc
sahf
add
pop
or
nop
fsubl
js
push
sbb
dec
scas
sti
das
cmp
jp
mov
dec
in
test
pop
adc
rolb
iret
pop
mov
inc
test
sub
aam
jl
in
xor
sub
sub
mov
add
cmp
testl
inc
pop
in
aaa
repz
inc
xchg
aam
inc
sbbl
pusha
add
push
daa
or
adc
out
dec
inc
sti
xor
push
rcr
pop
xor
popa
movsb
or
fcomp
pop
pop
ljmp
and
jmp
mov
mov
mov
or
inc
cld
xchg
adc
pop
push
sub
add
add
fcompl
aad
call
add
xchg
cmp
or
add
mov
push
cmp
pusha
push
call
into
cmc
jno
or
sbb
je
xchg
dec
shlb
mov
jmp
pop
into
and
insl
add
add
xchg
sbb
dec
add
popa
xchg
mov
sar
in
mov
movsb
outsb
add
rcrb
jle
js
inc
leave
mov
mov
jae
loopne
imul
test
out
nop
inc
bound
nop
add
xor
or
vmovsd
dec
bswap
mov
push
sarb
and
dec
mov
test
insb
jbe
xor
subl
jno
sbb
sbb
fcoms
ds
hlt
test
sbb
push
test
cmpsb
aaa
subb
jmp
repnz
jmp
cmp
and
cmc
pop
jb
mov
inc
or
pop
or
imul
and
pop
jns
out
call
dec
sbb
mov
imul
mov
add
iret
leave
add
xor
add
lea
cltd
add
cmpsl
sub
add
xchg
je
pusha
xlat
jb
jle
add
arpl
pop
add
pop
shlb
cmp
adc
cmp
xor
test
imul
add
dec
push
aad
xchg
repz
add
adc
push
mov
add
rcrb
dec
or
test
xchg
sub
push
loope
data16
hlt
fs
stos
pop
inc
add
mov
shrl
push
push
fwait
add
jae
xor
addl
in
js
lods
loopne
lods
rorb
std
mov
inc
dec
mov
stos
push
or
sbb
bound
mov
and
mov
sbb
fisubs
cmp
add
ret
jno
out
add
xchg
adc
stc
lock
add
data16
in
mov
je
dec
add
in
mov
cltd
cmp
add
mov
xor
sub
icebp
or
xchg
jno
add
js
or
mov
push
mov
sbb
pop
pop
add
mov
es
rorb
pusha
lea
test
mov
add
adcb
add
testb
out
test
jne
or
cmp
insb
adc
aas
fcoml
jo
test
mov
pop
std
mov
mov
push
add
aaa
mov
in
jge
pop
pusha
notb
adc
dec
add
xorl
add
sub
add
imul
fmuls
mov
and
sub
pop
out
sbb
dec
push
cmpsb
adc
dec
js
mov
ror
aad
lret
adcl
jle
sub
xchg
and
inc
rcrb
add
sub
mov
jg
mov
dec
pop
test
jle
jnp
lock
ds
push
cltd
hlt
adc
inc
lods
daa
cmc
add
add
and
cmpsb
shlb
imul
inc
aad
xchg
xor
mov
nop
rcrb
mov
or
mov
repnz
fldenv
or
and
out
cld
jl
sub
cmpl
outsl
addb
negl
push
daa
clc
push
cwtl
adc
xlat
in
sbb
mov
aam
dec
inc
jp
adc
into
mov
pop
push
test
pusha
js
cmp
lock
testb
add
decl
or
mov
mov
xchg
dec
add
jmp
into
in
add
leave
and
sub
mov
sbb
in
sub
js
addl
cmc
popa
sub
adc
repz
nop
sbb
or
mull
push
out
adc
xor
cmp
addr16
arpl
in
icebp
stc
inc
jle
add
subb
sub
or
and
rorl
fisubs
test
out
add
data16
inc
mov
jge
fidivrl
jecxz
aas
ds
andl
dec
inc
add
movsl
insb
sbb
or
and
or
ja
sub
test
pop
pop
add
pop
pop
mov
jne
mov
js
imul
xchg
push
fistpl
push
push
mov
pop
push
into
mov
add
mov
and
add
push
das
push
add
jl
int3
icebp
add
imul
push
int
pop
stos
sbbb
sti
fsts
pop
jp
add
sbb
pop
cmp
sub
movsl
jnp
inc
add
xchg
xchg
stc
add
adc
and
jecxz
loop
add
dec
and
sbb
cmp
gs
ja
cld
int
push
dec
pop
stos
out
enter
push
or
hlt
or
mov
mov
mov
xor
add
lcall
add
push
sbb
shrl
sub
insb
xchg
xor
lret
add
rdtsc
or
ja
add
loope
and
outsl
in
dec
mov
mov
xor
mov
cs
pinsrw
incb
pop
adc
cli
add
xor
add
xchg
dec
test
mov
sub
sbb
inc
shl
push
add
push
add
lock
add
pop
rcll
push
dec
jbe
add
ss
add
fstps
inc
add
cli
xchg
sbb
mull
jne
loopne
cwtl
lcall
mov
add
xor
jbe
inc
les
or
sub
daa
out
jg
add
adc
add
push
lods
lods
add
js
mov
adc
sub
mov
clc
cwtl
icebp
out
mov
sbb
fadds
push
dec
push
scas
sahf
nop
xchg
ret
add
jb
mov
add
lcall
sub
add
pop
dec
scas
aas
arpl
adc
dec
hlt
int3
stos
xchg
add
push
aas
mov
ret
sbb
rcrb
rolb
loop
mov
sub
pop
mov
orb
pop
daa
pop
xchg
pop
or
in
cmp
jl
inc
mov
dec
add
into
stos
lcall
test
stc
jge
inc
push
xchg
and
cmp
mov
xchg
adc
inc
pop
add
pushf
cwtl
xor
add
test
cmpsl
pop
add
push
pop
xor
xchg
xor
mov
or
mov
sti
punpckhdq
inc
inc
sub
inc
lods
add
xchg
dec
pop
adc
inc
add
enter
mov
xchg
out
cmpsl
ret
cmp
ffree
ja
mov
pop
popa
movsb
fwait
shrb
outsl
lods
scas
jecxz
mov
inc
out
push
pop
add
inc
outsl
aam
inc
bnd
pop
fwait
inc
leave
or
or
clc
add
pop
pushf
xchg
test
mov
xchg
into
out
add
mov
pop
inc
shl
shrl
dec
dec
cmp
fucomip
cmpb
xor
into
in
outsb
pop
cmp
add
loopne
inc
pushf
dec
or
adc
daa
and
adc
pop
addr16
push
cmpb
fisubrl
inc
or
add
dec
in
sbb
es
add
cld
or
jecxz
push
scas
imul
mov
cmc
sub
push
pusha
add
or
add
insb
pushf
inc
iret
or
scas
xchg
add
push
int3
sub
push
in
in
sarl
cmp
adc
cld
fwait
cltd
ret
xor
xchg
inc
sarb
add
bound
xor
cmp
shll
mov
hlt
pop
push
lods
lock
dec
xchg
std
movsl
jmp
add
imul
ja
js
fwait
xor
adc
xchg
orl
mov
sub
add
orb
repnz
cmp
bound
add
ds
aam
jecxz
add
push
insb
nop
into
and
or
out
push
add
add
lods
adc
push
outsl
add
lea
jb
sub
lods
cmp
and
loopne
sub
ret
sarb
arpl
out
and
imul
push
add
or
clc
jl
nop
or
movsl
arpl
add
jbe
pusha
pop
lea
or
out
je
dec
pop
lahf
jno
in
xor
aam
push
orb
lahf
cmp
stos
inc
add
js
imul
dec
inc
imul
mov
movsl
xchg
loope
cmp
cmp
push
cmp
mov
fildl
addr16
and
dec
add
add
incl
icebp
pop
dec
xchg
aad
add
sbbb
jne
xor
push
mov
jmp
jbe
sbb
mov
push
xlat
ret
iret
popl
addb
xchg
jg
add
sbb
push
or
addl
je
dec
and
dec
add
xor
pusha
xchg
mov
aaa
push
adc
cli
insb
add
dec
jl
das
add
out
adcb
test
sbb
clc
mov
mov
sub
ret
pushf
add
stos
mov
or
jg
add
mov
adc
cmc
enter
dec
int3
mov
adc
add
inc
or
sub
inc
add
adc
jmp
in
sub
cwtl
jge
add
cltd
or
cmp
and
jbe
aaa
idiv
jns
pop
sbb
int3
adc
xor
sbb
dec
pop
or
enter
or
xchg
fsubrs
aad
iret
test
dec
pushf
add
scas
fstpt
mov
inc
lea
cmp
pop
push
test
pushf
mov
cld
xchg
addl
daa
ja
fists
insl
mov
add
cmc
lcall
psraw
repz
push
js
movsl
jne
es
fsubrl
in
or
add
mov
ffree
add
test
sti
mov
push
sbb
je
pop
or
aaa
mov
mov
xchg
call
xorl
xchg
aaa
xlat
push
ja
or
movsl
loopne
mov
cwtl
add
xor
mov
push
pop
add
sbb
mov
mov
xor
push
je
test
fcmovnbe
loop
out
mov
outsb
ljmp
and
jns
iret
or
inc
push
add
jb
mov
and
lock
sahf
pusha
add
or
movl
push
js
roll
and
xchg
add
mov
sbbb
addl
aaa
or
xchg
movsl
daa
popa
add
mov
cmp
jne
inc
dec
add
fld
ja
sub
out
and
mov
rcrb
packuswb
ja
clc
pop
in
mov
sub
scas
cmp
cmp
xchg
mov
das
pushl
addb
jl
pusha
jb
movsb
pop
xor
adc
daa
add
add
test
sbb
lods
in
inc
loopne
mov
dec
add
mov
cmpb
std
outsb
into
testb
mov
loop
xchg
xchg
lret
push
or
add
popa
loopne
addr16
mov
aas
iret
add
cld
loop
lock
lock
add
mov
xchg
or
shld
jmp
in
cli
cmc
sub
fmuls
push
daa
push
add
sbb
sarl
popf
cltd
cmp
aad
test
aas
out
or
jae
adc
add
out
or
mov
push
adc
xor
add
jp
xor
mov
stos
loop
xchg
push
mov
jnp
test
fs
aaa
and
das
mov
cmpsl
lahf
mov
dec
bound
cmp
pusha
push
ja
push
push
sub
cs
and
or
cmpb
cmp
call
inc
add
add
pushf
push
push
add
mov
xchg
arpl
xchg
push
sub
mov
fs
jg
aaa
sbb
popa
push
mov
add
dec
xchg
cmp
and
mov
cmc
adc
mov
or
in
sbb
push
cmp
aas
sbbb
dec
rorb
fsubs
or
sub
mov
inc
enter
jae
scas
inc
arpl
add
jns
in
cwtl
icebp
sbbb
call
jg
dec
sahf
cwtl
cmp
out
xchg
into
sub
filds
push
icebp
sub
jae
add
inc
je
std
aam
add
cmp
and
icebp
in
inc
ret
nop
mov
adc
dec
inc
repnz
incb
aaa
and
inc
inc
inc
add
mov
add
mov
mov
push
pop
sbb
ljmp
imul
adc
add
icebp
je
xchg
ljmp
cmpb
lods
add
pusha
js
loop
clc
push
add
fdivrs
add
dec
sub
inc
inc
int
jae
and
adc
out
loope
or
scas
push
inc
jecxz
add
scas
shlb
rorb
inc
add
cwtl
shrl
inc
andb
xchg
mov
cmc
xor
cli
xor
popa
xchg
das
rcll
dec
shlb
lret
add
pop
sbbb
dec
shrb
mov
jo
shr
gs
xchg
inc
add
mov
lret
bound
add
add
enter
xchg
add
nop
jbe
add
test
adc
and
fisubs
mov
mov
adc
lods
mov
loopne
sarb
pop
test
cmpsb
pop
inc
xor
stos
aam
add
push
mov
or
insb
icebp
cld
sub
cmp
mov
jp
testw
xchg
jb
je
jle
mov
dec
jbe
sub
or
cli
adc
jl
or
mov
int3
and
cli
dec
jb
add
mov
movl
sahf
lock
add
xchg
mov
push
stos
cwtl
mov
adc
dec
subb
sarb
add
pop
mov
testb
pop
pop
inc
dec
mov
movsb
les
cmp
std
or
jle
popa
lods
or
clc
addb
mov
or
add
push
push
xchg
push
add
cmp
jmp
iret
test
add
movsl
addr16
fiaddl
int3
test
les
movsl
mov
orb
cmp
mov
test
mov
mov
add
mov
push
sahf
js
adcb
cmp
push
jg
ds
pop
inc
or
xorl
test
add
lds
incl
loopne
jmp
movsl
pusha
mov
jns
push
sub
sbb
cs
aad
addl
push
jg
xor
cmp
cmpsb
push
sub
cs
add
in
out
es
cmp
push
sbb
rolb
loop
repnz
dec
jbe
in
pop
icebp
or
add
jle
daa
adc
sti
mov
cli
or
or
lcall
pushf
cmpsl
pop
pop
test
aaa
out
ds
stos
iret
push
cmp
mov
jae
or
sbb
andl
jnp
icebp
cmp
and
inc
imul
xchg
dec
ror
lock
mov
pop
les
ficomps
lcall
jp
test
cmp
cmpb
daa
add
aad
scas
jnp
call
cli
xchg
jp
lock
das
push
add
cmp
dec
rsm
ds
mov
arpl
je
rcll
out
add
and
push
push
add
shlb
push
push
add
lret
add
lcall
sbb
insl
inc
push
sub
hlt
pusha
dec
adc
call
aas
jbe
mov
mov
gs
scas
add
mov
pop
movl
xor
popa
add
adc
sub
cld
sub
mov
or
mov
dec
fldcw
inc
mov
sub
push
notb
cmpsb
and
test
sbb
cli
sub
mov
add
or
out
in
daa
or
sub
incl
cltd
add
sub
mov
push
jg
add
sbb
test
adc
xchg
call
push
js
insb
inc
mov
push
sbb
fsts
cmpb
into
loope
in
jmp
adc
call
lea
push
ljmp
inc
negb
jnp
sub
push
stos
pusha
ret
pushf
loopne
cmp
fiaddl
mov
or
xlat
addb
and
in
sub
stos
push
cwtl
orb
mov
fiadds
or
aas
add
in
mov
lcall
imul
jmp
add
mov
fdiv
stos
add
insb
add
fs
mov
xor
sub
or
int3
mov
mov
das
push
fisubrs
pop
add
sbb
imul
add
push
imul
pusha
sub
je
xchg
movsb
or
out
add
cmpsb
jo
add
aas
sbb
and
sbb
mov
push
ffreep
fildl
mov
sbb
call
scas
lods
cmpl
add
inc
add
mov
mov
rcrb
scas
lds
outsl
xorl
cli
outsb
ds
add
movsl
jno
or
stc
xchg
clc
sbb
cltd
sub
shll
dec
add
stos
jno
addb
sbb
pusha
push
adc
repz
shlb
or
nop
cmp
xlat
mov
ljmp
add
push
dec
call
ret
add
jle
rclb
push
add
sub
addr16
fimull
fcmovnb
xchg
scas
mov
mov
inc
pop
and
xchg
int3
shr
xor
push
pop
in
je
rolb
add
cmp
cmpl
mov
mov
enter
insb
or
scas
xor
pusha
dec
add
pushf
sbb
shl
add
jge
mov
fimuls
jns
mov
add
dec
push
pop
add
inc
cmp
sub
fists
fsubrl
cld
mov
daa
leave
ret
mov
sub
xchg
int3
add
dec
push
dec
cmpsb
xor
jns
pop
push
test
adc
push
add
jecxz
iret
in
sub
sbb
loop
sub
lret
pop
in
pop
or
push
ret
dec
sub
cmp
add
xchg
inc
jle
jl
out
sbb
mov
mov
es
cmp
push
std
dec
in
push
daa
popf
ss
in
adc
or
cmp
jne
jg
add
mov
data16
into
and
xchg
fsubrl
sbb
addb
aad
ss
and
aam
jp
mov
jg
sub
pop
test
sbb
les
popf
jo
das
adc
pop
out
outsl
hlt
pop
lods
hlt
jecxz
jge
sbb
pushf
xchg
pop
in
sbb
in
ds
out
or
call
setnp
jae
xor
movl
sbb
and
adc
sub
mov
jl
test
cmp
leave
add
cli
incb
dec
inc
inc
in
sbb
or
rcr
idivb
push
adc
sub
in
add
sub
mov
add
ljmp
ja
clc
cli
imul
les
div
es
xchg
jle
subb
add
dec
mov
mov
jl
stc
outsl
dec
out
incb
xchg
pop
stos
dec
roll
dec
or
adc
cwtl
push
fistpll
pop
faddl
and
jmp
jb
xchg
pop
jo
les
cmp
out
add
pop
inc
lods
push
xchg
hlt
mov
jl
pop
inc
add
mov
and
cmp
push
insb
mov
in
inc
adc
jg
sbbl
xor
test
push
add
stos
sbb
cmp
and
push
int3
ds
mov
pop
jb
sbb
mov
sub
inc
dec
add
in
jmp
pop
mov
push
add
mov
aam
and
xchg
shl
xchg
adc
jo
imul
jl
adcl
test
test
mov
cmpsl
and
mov
ds
add
and
mov
lods
or
and
fnsave
popa
or
pop
xchg
iret
stos
leave
cmp
xchg
pop
sbb
xor
aad
cmp
add
shll
xor
dec
mov
add
push
push
in
leave
dec
sub
fnstenv
mov
loope
pop
push
in
or
xor
and
addr16
mov
scas
imull
jbe
mov
imul
jo
and
lea
jb
jbe
call
add
sbb
mov
ret
in
scas
xchg
sub
pop
jle
xchg
and
add
xor
nop
cwtl
sbb
and
dec
and
pop
aaa
inc
pop
cli
mov
or
mov
push
and
fs
xor
imul
sub
and
fldl
adc
hlt
dec
push
push
sbb
andl
enter
addb
sbb
xchg
xchg
cmpsl
jnp
add
shll
jg
movl
adc
adc
inc
add
mov
jbe
xchg
mov
xchg
sbb
mov
jbe
mov
adc
add
cmpsb
ljmp
sub
jl
inc
mov
add
mov
mov
jne
xchg
call
lret
inc
mov
lock
fiadds
jo
aaa
cmp
xchg
xor
add
push
push
sub
jbe
in
mov
shll
or
or
xchg
repnz
in
jo
movl
sbb
lds
and
sub
popf
push
mov
fs
dec
fwait
and
leave
mov
int3
aas
cmp
adc
push
movb
push
stos
test
mov
leave
and
inc
test
int3
lcall
adc
jp
dec
shlb
push
jne
sbb
movsl
fiadds
push
inc
push
scas
sbb
and
inc
add
aam
xchg
in
and
add
push
mov
add
addr16
add
xchg
mov
arpl
or
push
sub
hlt
and
pusha
loopne
rol
sbb
cmp
xor
das
xchg
inc
add
jmp
in
stc
addl
loopne
mov
negb
pusha
cld
jns
mov
push
ljmp
icebp
inc
fldenv
mov
loope
mov
or
and
add
je
lahf
jl
cmp
sbb
xchg
sub
lods
sub
push
sbb
sbb
loop
rcr
adc
push
test
mov
xor
and
nop
xchg
push
adc
cmp
add
mov
cmpsb
pop
add
mov
pop
insb
push
cmc
aam
mov
inc
adc
sbb
vminsd
sti
lock
sub
push
inc
dec
fimull
adcb
mov
mov
add
inc
jmp
pop
mov
div
pop
mov
xor
jge
pop
xchg
add
mov
mov
push
imul
add
pop
stos
out
fs
or
mov
stc
adc
mov
pusha
xor
adc
pop
pusha
jmp
xchg
jne
popa
or
cli
dec
arpl
scas
test
push
add
cld
cmpsb
andb
jbe
leave
rolb
inc
xor
and
add
push
mov
inc
shrb
and
ret
ret
and
adc
mov
pop
xor
stc
sbb
or
lret
add
inc
fisttpll
ja
testl
inc
cld
jae
add
test
aad
pop
fisttpl
dec
add
stos
rclb
cmc
repz
jbe
aaa
loope
inc
out
inc
jg
popl
jecxz
add
adc
flds
mov
cmp
xor
mov
add
sub
pop
or
subb
inc
add
pop
jmp
lret
insl
cmp
movsl
aas
xchg
add
js
pop
mov
je
movzwl
inc
es
sbb
insl
pop
ret
scas
mov
or
push
icebp
ss
xor
xor
rcrb
mov
add
or
fwait
addr16
scas
negb
sub
dec
sbb
shll
adc
add
mov
push
add
adcl
addb
push
fsts
popf
out
or
dec
fidivs
add
adc
pop
add
jne
push
push
cli
mov
pop
ret
dec
lret
mov
loop
or
cmp
push
test
roll
sub
xchg
mov
popa
inc
cmpb
pushf
add
inc
test
push
shrb
push
add
aas
lods
fisubl
cmp
stos
sarl
mov
push
xorb
add
mov
or
inc
ja
mov
or
fcomip
jno
cmpsb
scas
jle
rolb
sahf
hlt
xor
inc
sub
loope
adc
mov
xchg
enter
call
push
pop
or
add
fimull
out
jb
and
insb
add
xor
mov
lcall
push
adc
lcall
popa
add
aad
xor
adc
aas
add
push
iret
sub
sbb
repnz
call
or
add
lock
add
out
jno
mov
sbb
shl
sub
cmp
add
scas
push
imul
insb
add
aam
push
jno
push
in
add
mov
xchg
cltd
mov
add
fiadds
cmp
pop
in
sbb
notl
test
adc
repz
dec
orb
les
xchg
shlb
sbb
loope
loope
add
xor
mov
add
pop
dec
cmp
add
xchg
cmp
nop
xchg
push
pop
pusha
xor
xorb
addr16
jne
sub
add
arpl
adc
add
loop
imulb
fs
add
iret
outsl
in
xor
dec
add
fs
pop
adc
adc
mov
add
xor
sbb
scas
pop
mov
lods
push
andb
out
and
stos
adc
xchg
pop
push
les
inc
dec
lock
or
sub
imul
adc
mov
cwtl
int3
sbb
add
sbb
add
pop
inc
lds
outsl
repnz
sbb
add
lret
pop
inc
mov
add
push
mov
out
pop
xor
daa
adc
jge
push
mov
push
ret
scas
inc
mov
xchg
insl
push
repnz
cmpl
cmc
xchg
jae
fidivs
xor
add
pop
sbb
out
arpl
push
pop
pop
pusha
cwtl
or
and
cmpsb
pop
pop
add
fidivrs
scas
sbb
mov
xchg
add
pop
scas
pop
and
add
dec
push
mov
mov
cwtl
sbb
test
ds
add
add
add
lret
sub
outsl
mov
xor
popa
xor
jmp
dec
jg,pt
add
sub
dec
cmp
icebp
xchg
pop
test
test
rcrl
in
pop
push
test
add
ret
popf
cmp
sub
in
fadds
int3
inc
call
jbe
mov
mov
mov
add
or
outsb
add
inc
lahf
popa
and
aaa
and
mov
and
les
jecxz
mov
jge
sub
sbb
in
inc
add
cwtl
mov
and
pop
pop
sbb
mov
inc
mov
jb
add
dec
pop
xor
shlb
std
push
add
mov
je
or
dec
inc
xchg
jge
add
mov
and
fldcw
adc
fbld
pop
sub
mov
lock
pop
add
sbb
pop
inc
add
adc
add
xor
inc
fbstp
xor
subb
jns
pop
insl
xchg
push
xchg
mov
sbb
adc
inc
addl
mov
cwtl
lods
roll
movsb
pusha
adc
neg
aaa
inc
insl
jg
add
and
mov
inc
mov
outsl
xchg
xchg
jle
and
and
pop
and
scas
int
xchg
rolb
arpl
hlt
mov
subb
and
add
jb
adc
lcall
add
add
sbb
jns
scas
dec
jl
sub
loopne
mov
ffreep
call
xor
adcb
fnstenv
sub
add
mov
cmpsb
xor
jmp
rclb
sub
outsb
add
push
pop
mov
jmp
xchg
add
jno
lcall
push
add
or
mov
insb
pop
rorb
inc
roll
mov
shlb
je
mov
leave
and
pop
loopne
push
jp
filds
add
add
add
push
pop
hlt
xchg
push
movq
jecxz
fwait
inc
out
aaa
dec
scas
mov
ljmp
add
mov
or
push
pusha
jg
arpl
cmpsl
add
mov
ficomps
add
fildll
jle,pt
adc
xchg
adc
push
shrb
xchg
cmpsl
push
cmp
inc
jnp
pop
cmpsb
push
or
in
mov
aam
fisubl
and
dec
ds
adc
adc
ss
into
add
outsl
xchg
add
stos
sub
add
xchg
dec
movsb
rorb
mov
jno
push
jle
and
psrad
cmpb
inc
jbe
pushf
add
mov
add
lods
xchg
add
sbb
jl
xadd
fdiv
pop
push
enter
ja
scas
dec
adc
jg
sub
inc
test
std
adc
xchg
mov
scas
mov
pop
sub
xchg
scas
mov
adc
pop
in
pop
add
add
cwtl
lret
decb
shl
add
lret
push
imul
push
mov
pushf
lods
clc
stos
jo
dec
add
lock
jge
cwtl
sbb
adc
cmp
popa
cwtl
push
add
xor
andl
add
roll
mov
add
popf
mov
roll
mov
xor
mov
jo
in
add
stos
imul
pop
xchg
ja
addr16
scas
jge
inc
and
lock
mov
insl
orb
or
inc
jbe
dec
push
mov
add
mov
popa
adc
les
sbb
pop
mov
push
pop
add
push
inc
in
inc
push
in
xchg
sahf
add
push
xor
pop
call
adc
inc
xchg
adc
int
testb
sbb
sahf
mov
sbb
addr16
jl
aas
mov
test
cmpsb
jo
add
fnstcw
int3
idivb
mov
jnp
or
sbb
add
xor
jg
insb
sbb
nop
iret
loopne
inc
or
lcall
in
orl
scas
sub
je
add
add
push
xor
mov
sbbl
std
sub
jns
sbb
lods
adc
add
in
sbb
idiv
add
xor
xchg
add
xor
xor
add
cs
mov
push
add
fistps
and
pop
push
cli
lods
int
adc
push
cmp
add
fsub
outsb
jne
in
add
add
and
add
stos
lods
into
and
mov
test
arpl
cmpsl
out
aam
ret
add
popa
lret
or
sbb
fdivl
xchg
mov
in
dec
add
sub
add
push
pop
scas
or
cwtl
xchg
push
mov
sub
movsb
out
xorb
mov
sbb
ds
cmp
pop
cli
xchg
cmovo
dec
xor
and
add
push
mov
push
nop
or
add
lret
dec
clc
cld
mov
dec
jl
loopne
sbb
ja
stos
in
js
nop
push
aas
adc
adc
divb
jl
movsl
mov
pop
add
pushf
mov
and
rcrb
div
rcl
rol
fptan
add
iret
das
xor
test
add
aam
pusha
mov
adc
cli
push
jo
ss
pop
in
test
and
add
push
sub
popf
xlat
test
adc
loop
add
adc
je
sbbb
fdivrl
push
icebp
jle
shlb
loopne
lods
mov
dec
mov
in
jmp
fimull
pop
out
add
cwtl
call
and
inc
pusha
shrl
add
test
mov
xor
adc
int3
xor
mov
add
ret
outsb
mov
daa
or
push
pop
adc
xor
loopne
in
cld
cwtl
xchg
adc
jg
push
add
jnp
xchg
popa
add
xor
sub
jno
add
or
cmp
nop
mov
dec
adc
push
dec
lret
cwtl
add
pop
test
rcrl
nop
xchg
add
push
mov
dec
aas
or
inc
loopne
mov
pushf
xor
mov
and
pop
cmp
mov
push
sahf
add
clc
in
or
and
sbb
pop
and
orb
xor
in
jge
mov
add
dec
sub
mov
sub
in
xor
out
ud1
pop
in
adc
jp
aad
lret
je
filds
rolb
mov
js
jg
xchg
pop
xchg
push
and
shlb
add
mov
and
int3
inc
cmpsl
roll
push
sbb
jecxz
leave
add
mov
add
jo
nop
in
push
add
add
ss
punpckhwd
pop
sbb
test
les
ret
int3
mov
mov
add
xchg
jns
or
cmp
fs
dec
fcomps
or
push
inc
stc
mov
clc
xor
rcll
inc
inc
inc
mov
ss
enter
xchg
arpl
cld
add
iret
cmp
jmp
sbb
sbb
out
insb
inc
nop
mov
lret
ja
dec
stos
add
mov
js
aaa
adc
jl
loope
js
add
push
add
out
out
jge
jmp
fnstcw
or
mov
cmpb
sub
mov
sbb
sbb
push
orl
xor
pop
xchg
icebp
sbb
orb
out
or
shll
and
in
dec
mov
add
jnp
jge
aam
popf
add
pushf
lret
sarb
jae
nop
mov
pop
lods
wrmsr
sbbl
sti
xor
arpl
push
clc
shrb
iret
mov
add
jle
aad
mov
dec
cmpsl
mov
es
and
inc
int
xlat
aad
pushf
aas
add
sbb
mov
xchg
and
fwait
insb
and
ror
push
cmpsl
and
or
and
insb
shll
add
shll
jle
pusha
jecxz
add
sub
jo
sahf
repnz
nop
sbb
ret
inc
sub
cmp
test
adc
jge
add
pop
xor
movl
dec
lods
nopl
pushf
scas
jl
roll
add
jg
add
bound
fidivs
push
add
ret
jl
add
xor
mov
loop
dec
cmp
imul
jae
jb
repnz
cld
mov
inc
fiadds
lret
cld
rorb
sub
adcb
rolb
dec
mov
test
add
movsb
push
push
mov
aad
xor
mov
or
add
pop
inc
push
lock
test
les
xlat
inc
pusha
imul
enter
jae
mov
add
mov
push
movl
mov
dec
fst
inc
test
aas
mov
jns
ficoml
popf
pop
js
ficoms
sbb
push
in
and
pop
xchg
cmpsb
cwtl
movsb
add
es
jp
addb
jno
lock
pop
mov
cmpsl
sbb
pusha
add
jecxz
pusha
sub
js
add
mov
lret
xorb
ljmp
mov
or
pop
popf
in
add
or
mov
xor
and
xchg
sar
pop
icebp
add
mov
xor
inc
js
aas
fildl
mov
xorb
add
mov
sbbl
mov
add
add
push
outsb
sub
cmpsb
or
add
cmp
and
adc
cmp
pop
ljmp
xchg
faddl
mov
mov
mov
push
rclb
pop
lock
pop
hlt
sti
xor
adc
out
jb
lods
pusha
inc
cwtl
and
shll
pushf
stc
dec
and
pop
inc
aad
xchg
sub
add
insl
add
cmp
js
add
pop
lock
or
mov
sub
fcmove
add
iret
adc
es
ret
mov
and
and
add
cmp
push
adc
loopne
sbb
and
mov
xor
mov
insb
jnp
xor
push
sbb
xchg
adc
loopne
mov
push
cld
xor
mov
ror
cs
mov
sbbl
lret
sbb
in
outsl
out
cmp
add
mov
pop
add
cmc
and
cld
inc
adc
test
loop
or
add
inc
mov
ret
out
sub
jne
fisubl
ret
ja
jb
cmp
jno
mov
fcomp
mov
icebp
sahf
xor
jnp
add
or
pusha
jno
push
int
pop
fildll
arpl
fdivr
pop
imul
je
aaa
push
call
jmp
add
cmp
add
inc
pusha
je
js
push
sub
rcrb
call
icebp
push
scas
mov
sbb
imul
das
push
shlb
loope
or
inc
lret
mov
repnz
or
and
ja
lret
jp
cs
sbb
aaa
daa
add
ret
add
mov
mov
ret
stos
scas
test
jne
adc
enter
adc
mov
into
and
lret
loop
movsb
icebp
in
mov
mov
sub
pusha
or
xchg
ljmp
out
jno
xor
lret
add
jmp
sub
add
flds
imul
push
lret
addr16
test
roll
jno
ss
cmp
jmp
push
mov
ficoml
add
adc
sub
aad
into
movsb
add
out
add
cwtl
sub
xor
fisubrs
mov
pop
std
add
inc
pusha
xor
add
mov
cmp
ds
mov
fsubrs
pop
leave
add
xor
adc
jo
mov
sbb
add
fwait
subb
mov
or
xchg
lock
or
jle
cltd
add
xor
mov
sahf
mov
xchg
adc
es
add
arpl
add
lret
push
pop
sarb
test
xchg
dec
fiaddl
and
or
adc
pushf
fists
jecxz
push
xor
mov
cmc
iret
jo
cmp
in
scas
sahf
jle
je
xor
add
jae
out
sti
inc
loop
add
neg
ror
aam
add
hlt
pop
push
jge
lds
repz
lock
cmpsl
add
mov
mov
imul
rcll
add
inc
push
add
aas
ss
dec
int3
and
add
out
pusha
out
jo
xchg
mov
scas
sbb
dec
les
cmpsb
enter
jnp
add
dec
inc
or
xor
add
aas
sbb
stos
lret
dec
js
dec
and
mov
mov
fnsave
pop
insb
jae
loopne
sub
inc
loop
jecxz
mov
cmpsl
popa
das
jno
imul
add
out
push
aas
pop
adcl
sbb
outsb
rcl
pop
sbb
add
mov
pop
insb
and
loop
push
inc
jnp
pop
sbb
mov
push
lods
add
hlt
js
add
pop
adc
add
cmpsl
out
andb
mov
mov
icebp
insb
pop
add
out
jmp
cmp
pushf
add
fldl
inc
cmc
sbb
dec
xchg
in
push
imul
xorb
imul
cld
mov
test
jno
imul
cmp
into
call
push
scas
std
pop
dec
cwtl
jg
jbe
add
cmp
lret
lods
mov
add
imul
mov
outsb
mov
xchg
fwait
incb
cs
mov
pop
es
mov
std
mov
mov
pop
mov
adc
inc
mov
inc
jno
icebp
sar
xor
jns
mov
in
test
movsb
ds
lret
pop
xor
les
jne
add
pop
ret
cmp
xor
pop
dec
cld
push
pushf
hlt
je
or
out
test
cmp
add
test
lods
insb
add
repnz
inc
ljmp
js
pop
add
adc
repz
jmp
add
xor
or
pop
jno
jl
or
mov
add
add
insl
lahf
rorb
pop
leave
jb
stos
cmpsb
pop
mov
mov
mov
pop
int
jb
pop
stc
sub
imull
xor
sbb
lds
and
sub
dec
xchg
nop
pop
xor
addr16
loope
or
loopne
sub
lods
flds
leave
xor
mov
cmp
jnp
jl
into
shlb
jge
add
fwait
and
ret
sbbb
fists
add
mov
in
fisubrs
add
daa
add
push
mov
scas
add
out
cmp
hlt
add
and
ret
xchg
sub
sti
push
or
and
mov
es
or
push
sti
mov
jmp
in
out
mov
stos
out
loopne
sbb
subl
ficoms
push
leave
data16
push
xchg
lock
test
cmpsl
dec
sub
cmp
add
out
pop
and
sub
lret
movsl
add
dec
sbb
add
pop
dec
xor
cmp
xchg
subl
or
hlt
nop
add
mov
fadds
mov
repnz
outsb
sub
and
xchg
test
push
mov
jns
push
sahf
aaa
sub
cwtl
ja
stos
dec
xlat
jo
push
test
inc
cmp
es
xchg
loopnew
add
cmp
stos
xchg
add
test
xchg
pop
cld
dec
mov
nop
fbstp
sbb
ss
jp
int
scas
lock
je
adcl
pavgb
stos
and
orb
pop
inc
aad
sbb
sti
in
in
cli
adc
ror
mov
faddl
adc
lcall
mov
pop
pop
in
enter
add
xchg
mov
push
add
pop
jl
adc
mov
test
push
xlat
popa
loop
pop
mov
add
scas
dec
mov
in
ror
add
push
mov
and
mov
aas
mov
xor
js
jns
and
rcrb
fdivrl
cmp
mov
orb
or
xor
add
mov
pop
and
mov
add
nop
xor
adc
in
xchg
jns
insb
add
lret
or
movsb
add
inc
mov
jp
or
push
or
out
int3
addb
loopne
cmpsl
lock
movsl
or
lea
clc
les
jns
gs
cmp
push
or
cmp
inc
jne
mov
mov
add
lods
add
and
add
or
int
es
in
xchg
and
xchg
sbb
jno
scas
or
cltd
add
pop
jle
ret
popa
loopne
jl
or
push
pushf
and
pop
inc
int3
js
mov
out
int
cmp
mov
jg
add
cmp
test
add
add
cmp
xchg
in
jne
lods
out
sbb
xor
rorb
fld
jmp
and
xchg
sub
add
jecxz
mov
cmp
in
cmp
jo
stos
sti
push
les
sub
xorb
sbb
sub
inc
shrb
push
add
sbb
sub
xlat
in
ljmp
outsb
jbe
andb
or
pop
dec
sub
jl
inc
lock
call
and
inc
lods
push
add
cmp
ja
sbb
gs
xchg
add
movsl
adc
int
sbb
aas
jmp
cmp
lahf
jmp
inc
ss
xchg
inc
or
mov
aas
inc
xchg
roll
test
inc
es
pop
add
cs
movsb
inc
pusha
add
popf
adc
sbb
xchg
lods
push
xor
ljmp
add
fadd
fadd
xchg
mov
sbb
mov
ljmp
or
and
add
in
sti
outsl
xlat
push
xchg
imul
inc
call
xor
lret
mov
add
test
cltd
imul
stos
pop
pop
cmp
pop
movsb
hlt
repz
das
rcrl
cmp
into
push
and
dec
std
adc
or
add
mov
or
test
sbb
push
and
mov
add
dec
mov
xchg
mov
mov
jp
add
test
lret
not
add
xchg
xor
mov
stc
xor
xchg
add
ss
adc
test
add
pop
cmpsl
or
xchg
cs
pop
adc
imul
and
inc
jge
shll
jl
orl
sub
das
mov
add
pushf
jnp
push
lock
in
pop
pusha
inc
sbb
add
fsub
bound
stc
lcallw
sbb
insl
mov
das
mov
sarl
icebp
cmpsb
add
xchg
pop
mov
in
iret
dec
dec
cmc
aam
xchg
mov
add
call
xor
pop
aad
inc
repnz
ret
jne
mov
popl
cmpsl
mov
leave
cmp
sbb
add
add
push
out
jae
mov
fisubs
dec
or
mov
cmc
stc
xchg
es
orb
int
push
mov
add
sbb
mov
mov
pushf
xlat
sub
xor
inc
push
cmp
ss
or
andb
cld
inc
fwait
call
jns
cs
or
dec
add
setne
daa
jbe
pop
cli
movsb
jl
mov
mov
or
loopne
daa
mov
add
mov
jmp
or
add
adcb
ljmp
sub
jnp
jecxz
scas
lret
cwtl
fs
leave
rorl
mov
cmp
test
rclb
add
sub
enter
cld
or
or
sub
and
and
clc
dec
inc
mov
add
and
test
sbb
stos
in
jmp
xchg
loop
test
xlat
data16
repnz
dec
cmc
mov
mov
rolb
dec
pop
sub
aam
iret
or
rorl
jae
cs
cmp
xor
add
sub
paddsw
pop
sub
and
dec
psubsb
cmp
repnz
inc
popa
lcall
shrl
mov
cmp
mov
int
aaa
sub
sub
repz
push
mov
pusha
mov
add
or
rcrb
jg
roll
adc
aaa
and
out
jo
testb
mov
jno
xlat
testb
mov
int3
mov
pusha
fwait
imul
dec
add
es
mov
sbb
test
mov
mov
ja
pop
rcrb
sub
movsb
in
add
pop
andb
aas
jbe
fstps
lods
insl
inc
sarl
mov
pop
hlt
mov
jg
cli
movl
push
imul
sub
mov
mov
add
mov
add
mov
sbb
fisubrl
in
dec
add
fisubs
lods
nop
pushf
xorb
ret
pop
fbld
shlb
mov
add
sub
mov
mov
es
sbb
das
loop
add
repnz
popf
cmpsb
cwtl
jg
inc
rolb
jle
adc
pop
cltd
cli
add
mov
rclb
sbb
jp
jne
add
xlat
ja
shrb
and
outsl
sub
shll
lret
mov
dec
scas
outsb
and
in
mov
and
dec
push
sbbl
pop
add
and
mov
add
cld
in
out
pop
popf
add
addl
jns
sbb
push
xchg
lods
or
inc
add
adc
add
int
cld
jnp
add
jge
out
in
pop
sbb
mov
bound
sub
dec
int
call
push
jg
fidivrs
pop
fisubl
mov
imul
ret
filds
in
cld
dec
cmp
cmp
or
add
mov
adc
jb
and
adc
mov
ds
pop
push
cmp
or
repz
andb
mov
xchg
push
mov
or
xor
out
push
fwait
add
add
dec
outsb
lret
lock
add
es
xchg
dec
ljmp
andb
jg
add
or
mov
jp
pop
xor
out
loope
movsb
out
inc
jnp
mov
xchg
adc
ljmp
xchg
lcall
test
sbb
mov
cmp
mov
lock
push
and
cmp
das
dec
or
arpl
pop
mov
adc
adc
sbb
subb
incb
mov
sub
movsb
loope
cs
mov
sti
xchg
xor
xchg
mov
pop
and
repz
lock
addb
xor
cmp
ret
xchg
test
mov
loop
insl
or
scas
inc
stos
sbb
cmp
sbb
mov
test
cmp
in
outsl
sbb
int
cmpsl
dec
cmp
arpl
ud2
and
add
int
jmp
lods
jo
nop
cmpb
jmp
add
cltd
sub
sub
inc
add
jecxz
addr16
push
vmread
mov
inc
shll
jns
das
stos
jg
adc
push
add
test
rclb
fiadds
loope
mov
sbb
pop
stc
or
test
inc
mov
jmp
add
cmp
lds
mov
insl
add
jbe
scas
lret
push
mov
filds
add
stc
lods
hlt
loope
add
jae
ret
mov
add
cmpsl
mov
bound
and
sbb
faddl
mov
mov
xor
leave
icebp
sbb
stc
fmul
fildll
and
mov
mov
fmul
push
sahf
sub
dec
insb
fstps
fs
or
in
scas
pop
roll
add
jp
ret
filds
add
in
lods
jno
fstpl
mov
add
ret
loopne
xchg
dec
mov
add
jl
out
pushf
add
jnp
add
addr16
and
push
cmp
add
loopne
scas
jne
jle
jb
sbb
sub
add
dec
lahf
push
cld
mov
add
or
filds
add
pop
jmp
pushf
jo,pt
andb
movsl
jbe
cmpsb
add
pop
insb
dec
in
dec
roll
mov
shlb
add
sbb
insl
je
cltd
in
jl
adc
and
sbb
scas
xchg
sbb
or
add
push
dec
in
xchg
js
cmpsb
push
imul
or
inc
ret
test
add
cld
data16
imul
sti
leave
inc
sbb
mov
or
add
cld
arpl
mov
or
dec
push
and
push
or
pop
pop
inc
or
shl
add
xor
or
insb
pop
insl
leave
xchg
iret
fisttpll
call
sub
xor
mov
jne
push
cmp
fnstsw
pop
or
rclb
add
dec
xor
pop
or
xchg
lock
mov
ret
adc
mov
ds
sub
repnz
arpl
add
scas
ret
ljmp
add
pop
pusha
jo
xchg
shll
adc
je
sbb
sub
lret
ret
jae
sbb
pop
rcrb
mov
and
pop
xchg
push
in
mov
cmp
push
push
push
add
pop
push
add
xchg
test
inc
test
push
fsubr
xchg
outsb
add
and
add
iret
sub
and
or
das
dec
lcall
mov
ret
mov
pop
out
out
cmp
or
inc
loopne
mov
out
mov
aam
mov
nop
les
and
sarb
dec
jb
or
push
cmpsl
or
repnz
call
add
cli
negl
cmpsb
imul
popf
test
pop
bound
add
pop
gs
sbb
mov
into
pop
test
leave
mov
pusha
xchg
fmull
and
jns
or
je
imul
pop
rep
mov
pop
mov
fistl
xor
insb
xchg
jge
pop
or
cmp
aas
add
mov
test
pop
loop
sub
dec
shrl
dec
gs
sbb
and
push
roll
lock
mov
cli
lahf
adc
jp
sub
add
mov
lret
add
mov
ljmp
int3
cltd
sarl
mov
push
sub
lahf
xchg
fdivrl
out
sbb
sahf
adc
add
inc
pop
dec
imul
movsb
mov
js
andb
cltd
add
push
add
iret
xchg
shlb
add
stos
sub
and
add
mov
and
or
push
sbb
or
lahf
add
add
mov
aaa
sahf
rcl
sbb
add
in
xchg
fdiv
subl
pop
leave
jae
xchg
ja
xor
mov
push
mov
es
mov
addl
push
in
add
and
jns
sbb
add
enter
sbb
gs
jp
add
push
testl
jl
js
add
cmp
add
fistpl
or
popa
enter
push
mov
repz
movsl
in
into
and
mov
dec
jb
mov
mov
mov
daa
js
arpl
sbbb
aas
add
sbb
pop
lret
loopne
mov
bound
shl
andl
fadd
xor
fsubl
mov
stc
mov
sbb
dec
add
jmp
add
sbb
push
les
and
add
push
outsl
or
adc
xorl
loopne
roll
iret
gs
adc
stos
out
repnz
add
sbb
fcomp
ljmp
test
cwtl
add
mov
movsl
add
out
add
or
addb
mov
adc
roll
xchg
sti
pop
dec
jmp
mov
inc
mov
xor
or
jecxz
sbb
mov
gs
mov
push
addr16
test
scas
mov
sbb
int3
aas
inc
mov
add
add
repz
cmp
mov
lcall
lahf
ds
push
pop
nop
adc
dec
sbb
cmp
mov
xchg
jg
pusha
in
mov
jns
xchg
out
sub
add
push
cmpb
leave
divb
and
cld
mov
jecxz
aaa
rolb
mov
int3
gs
jmp
add
or
pop
cmp
sbb
and
popf
aaa
adc
mov
or
add
inc
dec
fs
add
dec
push
fdivr
pop
add
lock
jl
mov
imul
out
cmp
mov
push
test
jge
cmp
subl
add
inc
xchg
les
adc
iret
lods
addb
je
mov
add
stos
jo
push
or
mov
adc
add
mov
jo
test
data16
sbb
cmpb
mov
sbb
rolb
sub
dec
dec
hlt
verr
xorb
inc
fwait
cmp
and
fmul
push
daa
shlb
jg
aad
inc
fucomip
lahf
nop
sub
lods
fisttpll
jae
movsb
pop
stc
sahf
aad
outsb
decl
mov
test
fildl
xor
scas
pop
mov
movsb
sub
insb
pop
mov
gs
adc
sahf
add
imul
in
add
push
pop
stos
add
in
or
lcall
push
repnz
push
adc
pop
lods
loop
pop
mov
testl
pop
mov
inc
add
mov
pop
xchg
sarb
xchg
jns
inc
cli
dec
or
sub
jo
aam
inc
push
test
dec
fcomps
pop
mov
adc
testl
cwtl
add
add
stos
dec
lret
cmp
int
dec
xor
ds
mov
je
push
cwtl
sti
clc
scas
fcomps
inc
mov
cs
jo
jmp
jge
insb
imull
mov
sub
mov
fwait
jo
and
mov
leave
xor
jns
mov
movsb
push
and
add
mov
jl
unpckhps
and
rol
ljmp
loopne
mov
jbe
test
sub
loop
mov
in
movmskps
inc
push
pop
std
into
ret
add
inc
cmpsl
subl
jnp
lcall
dec
test
out
lock
pop
sbb
cltd
pop
das
pop
cmp
pop
mov
cld
insb
stos
add
dec
jbe
push
lock
adc
add
and
pusha
xchg
aas
daa
into
add
xor
jp
ss
jb
xor
xchg
lcall
pop
popf
jne
cmc
xchg
js
add
mov
adc
bsf
in
fwait
dec
ret
rcl
jecxz
xor
repz
ja
mov
test
mov
mov
sub
xchg
hlt
inc
and
and
xlat
xor
nop
xchg
or
fwait
subb
and
push
data16
aaa
or
push
in
add
cwtl
aad
xchg
xor
jecxz
das
cmpsb
jne
lods
aam
add
daa
adc
lods
jp
mov
enter
add
sub
iret
lcall
pusha
pop
add
add
inc
cli
outsb
add
push
popa
imul
add
mov
daa
pop
into
inc
out
jns
adc
shrl
aam
je
fdivrs
out
insb
add
sub
bnd
push
push
cmp
movsb
or
out
ljmp
mov
cmpb
push
les
mov
pop
add
sbb
xchg
xchg
out
push
or
push
sub
scas
adc
or
mov
int3
xor
and
fidivrl
sbb
mov
mov
ja
fcomi
bound
pusha
push
aad
in
mov
and
jo
mov
jns
or
divl
xchg
cmpsb
test
iret
addb
out
hlt
imul
or
test
push
mov
cmp
les
xor
push
mov
and
out
lret
xchg
add
lcall
inc
int
jmp
or
adc
cmp
cmp
mov
out
dec
push
fwait
nop
adc
dec
dec
mov
xlat
jge
push
push
mov
and
pop
cld
cmp
jno
mov
fs
fwait
mov
addl
fs
inc
pop
outsl
xchg
add
push
gs
cmc
mov
fmull
ljmp
test
adc
add
pusha
pop
pop
outsl
cmpsb
xlat
xor
jbe
sbb
or
push
push
jp
add
adc
popf
inc
orb
mov
sbb
fldt
add
add
sbb
lahf
fldl
pop
mov
inc
cltd
add
sbbl
dec
not
add
cwtl
pop
pop
pop
push
shrb
mov
data16
mov
mov
add
hlt
cmp
xor
add
aad
filds
icebp
insl
adc
xor
call
in
mov
cmp
ss
cmp
cs
cld
add
ret
clc
into
add
xor
in
cli
push
jmp
add
cmp
add
pop
icebp
popa
add
add
cmc
insb
jecxz
rcrl
outsl
rolb
push
das
divl
add
popa
sbb
push
xchg
cltd
in
add
cli
insb
cwtl
rolb
xor
in
cmp
add
movsb
sbb
pop
les
mov
xchg
sbb
bound
in
add
cs
adc
pop
out
pushf
int3
aas
or
add
daa
push
xor
mov
and
sti
decb
icebp
rclb
lcall
ljmp
cmc
sub
pop
imul
mov
loopne
sbb
add
mov
out
arpl
loopne
add
add
das
cmpsl
mov
and
insb
repz
cwtl
dec
add
add
inc
mull
add
adc
lcall
jmp
mov
movsb
or
jmp
pushf
mov
lock
ljmp
out
xchg
out
hlt
mov
mov
cmp
xchg
add
xchg
push
cli
add
xchg
jle
jg
sbbb
andb
sub
lock
iret
inc
add
jb
test
in
adc
and
inc
push
insb
sbb
test
pop
iret
push
pop
int
jle
cmp
push
rcll
or
add
stc
add
loope
push
jne
pop
jae
in
cmp
mov
xchg
jle
lods
test
add
push
pushf
scas
je
repnz
xchg
push
cltd
jp
inc
cmp
and
and
fistpll
cwtl
dec
sbb
or
or
jg
pop
cmp
lds
pushf
sbb
xorl
push
and
sbb
leave
mov
ret
cmpsl
mov
pusha
adc
movsl
jae
mov
andb
pop
mov
sti
sbb
dec
dec
faddl
mov
and
and
les
fdivs
jo
pop
push
outsl
adc
add
cs
or
mov
fwait
cmp
rolb
inc
movl
pop
stc
rolb
shl
call
rorl
dec
gs
pop
popa
add
in
push
add
std
fs
inc
ficoml
mov
das
sub
push
cmp
repnz
and
call
fucomp
rolb
cmc
mov
push
xor
dec
and
or
dec
add
or
btc
and
add
push
add
and
add
sub
sub
test
jo
pusha
inc
push
xor
xchg
add
mov
jmp
mov
cli
lcall
adc
shlb
nop
mov
fiaddl
mov
daa
jb
push
push
les
pop
incl
lods
cmp
pop
ljmp
xchg
fadds
nop
adc
xchg
push
cwtl
es
xorb
stos
stos
pop
add
jae
divb
aam
add
inc
aas
insb
xchg
outsl
pusha
adc
in
fdivl
push
repz
inc
outsb
aaa
jbe
mov
ficompl
push
fs
daa
cli
add
pop
stc
push
add
bound
lahf
push
push
int3
jae
add
mov
pop
rolb
sub
pusha
shlb
adc
cwtl
sub
roll
insl
clc
add
ret
mov
xchg
pop
aam
sub
add
loope
or
rclb
iret
loope
add
sbb
fbld
inc
and
push
push
lcall
shrb
mov
dec
cmp
pop
insb
cmp
or
xchg
dec
rorb
loop
lret
into
pop
std
mov
cmpsl
js
add
mov
mov
test
inc
pusha
test
imul
or
orb
lcall
cs
ret
push
fadds
sbb
movsb
sbb
add
sbb
mov
cmp
ja
pop
lret
ret
sahf
nop
scas
adc
inc
add
icebp
push
lock
pop
add
sbb
dec
add
mov
movsl
sub
mov
cld
mov
or
repz
adcb
sbbl
mov
pushf
add
lock
jmp
leave
icebp
sbb
push
sub
and
cwtl
mov
scas
sbb
mov
imul
in
pop
push
cwtl
mov
adc
dec
mov
dec
add
sbbb
mov
lahf
out
or
and
add
in
loope
or
sti
in
pop
adc
inc
fs
insb
fwait
sbb
and
outsb
xchg
js
push
sbbb
pop
sub
add
mulb
dec
cmp
sub
popa
enter
shl
loopne
cmc
push
xorb
jns
add
xchg
jmp
ficoms
mov
into
cmp
jbe
mov
add
add
mov
and
sbb
or
xchg
fsts
xchg
mov
sub
mov
test
das
ret
jne
test
sub
into
sbb
or
dec
shlb
fiadds
inc
mov
lret
pop
add
adc
xorl
pop
dec
and
inc
pop
xchg
cld
roll
mov
xchg
xor
scas
inc
faddl
and
mov
jg
mov
pop
pusha
fldt
xor
mov
push
or
dec
inc
dec
or
out
orb
stc
iret
sbb
push
pop
or
push
add
xchg
jo
add
repz
inc
or
add
cs
lock
or
lods
aas
fcoms
cmp
push
into
call
add
xor
push
loopne,pt
or
xor
push
ljmp
mov
mov
cld
and
je
rolb
xchg
cli
ret
addl
ss
rcrl
addb
add
pop
enter
mov
lods
shld
andl
in
inc
cmpsl
test
dec
xchg
mov
cmp
add
lods
adc
popa
jle
push
pop
push
insb
out
cli
cmpsb
sbb
pop
dec
ficomps
xchg
mov
sbb
add
inc
bnd
ficomps
clc
loope
mov
jae
add
or
push
lcall
les
pop
arpl
xchg
out
sahf
pusha
das
ja
shlb
rolb
push
sti
add
adc
rcrl
mov
ror
push
mov
xor
dec
add
jne
adc
and
pop
pop
insb
add
pop
imul
shrl
sbb
sarb
mov
les
sbb
clc
jl
add
and
sub
xchg
loopne
sbb
shrb
jo
xor
adc
push
xchg
add
ljmp
xchg
sub
insl
popa
dec
lods
xor
leave
out
push
push
mov
lds
call
mov
add
shll
xchg
xchg
xlat
cld
mov
add
test
nop
ror
dec
ret
je
xor
imul
jnp
dec
xchg
loopne
mov
sahf
lahf
or
lods
les
fs
dec
test
jne
repnz
push
adc
mov
jg
add
iret
xor
mov
leave
pop
jnp
fwait
mov
sahf
pop
add
fcoml
add
iret
mov
add
push
mov
pop
lds
sbbb
call
add
sub
fs
add
imul
ljmp
cwtl
fnstenv
add
jg
lods
adc
push
sub
xorb
push
dec
lahf
lret
mov
stc
jne
pushf
das
jns
add
pop
fdivrs
xorl
pushl
push
dec
inc
pop
inc
loopne
movsb
sbb
bound
in
sti
xor
jnp
pop
pop
mov
cmpsb
add
pushf
stos
cli
jbe
mov
add
add
dec
add
push
nop
xlat
lods
in
popa
mov
xchg
add
mov
ja
sub
add
jns
ljmp
subb
sbb
or
add
jno
add
add
insb
push
scas
enter
lahf
or
sti
xchg
pop
mov
les
adc
seta
add
repnz
arpl
inc
sub
add
test
xchg
cmp
scas
mov
test
adc
cmp
add
jg
push
dec
or
or
in
or
xchg
pop
loop
std
jb
or
and
inc
pop
add
out
loopne
outsb
pop
subl
leave
test
pop
jmp
xor
jge
and
int3
iret
mov
inc
loope
out
mov
sbb
test
add
loopne
je
add
movsl
mov
sarb
in
add
std
inc
mov
mov
mov
popa
push
shll
xor
cmp
push
jecxz
into
ja
sub
lret
bound
mov
dec
add
mov
notb
cwtl
xchg
add
repz
xor
faddp
insl
push
add
adc
les
xor
sub
lea
test
jl
dec
mov
sbb
lea
enter
inc
in
sti
loopne
add
dec
adc
mov
mov
das
xorb
mov
pop
pop
add
sbb
loopne
add
scas
sub
lret
or
push
sbb
test
xchg
adc
inc
xor
pushf
add
sbb
test
bound
push
fcmove
addb
ja
adc
add
dec
push
fildl
pushf
mov
js
pop
inc
iret
add
popa
cwtl
lahf
or
adc
sbb
int3
pop
sahf
inc
loop
cmpsb
xor
imul
adcb
jge
jnp
cmc
or
faddl
pop
in
es
jmp
pop
cwtl
xlat
fisubs
mov
out
sub
dec
and
fdivrl
inc
or
mov
add
pop
repz
in
mov
mov
movb
jge
mov
ja
enter
movsb
push
add
lret
aaa
cld
jns
lea
es
shlb
sbb
adc
sbb
jmp
cltd
ror
inc
xchg
dec
xor
push
xchg
sahf
rolb
scas
add
out
and
dec
cmp
xor
add
jne
mov
add
mov
add
pop
inc
sbb
xor
popf
cmp
scas
lock
sbb
xchg
push
iret
xor
call
or
lea
lds
add
cmp
adc
cld
add
push
pop
sahf
add
and
adc
add
ret
repz
sub
aas
jle
pop
call
test
stos
dec
pusha
cwtl
les
or
add
mov
push
push
pop
rol
f2xm1
and
add
in
popf
mov
out
fwait
mov
in
cs
insb
daa
add
sub
dec
xchg
jbe
push
shlb
lahf
and
insb
adc
daa
adc
nop
ljmp
fs
icebp
or
enter
scas
decl
clc
cmp
and
and
mov
jmp
mov
sub
sbb
out
cmp
cmp
add
adc
mov
and
int3
aaa
mov
xor
cld
add
gs
ss
jmp
add
lret
and
shlb
jl
jg
add
notl
adc
dec
sti
add
dec
stos
mov
outsb
mov
test
add
pop
cmp
cmp
addl
add
add
fcomps
jbe
mov
call
jge
add
cli
in
add
jno
pop
inc
or
into
lret
outsl
add
mov
cmp
add
out
cmp
sti
add
inc
cmp
dec
add
subl
jne
add
imul
cltd
rol
dec
xor
sub
shlb
imul
sub
add
jno
add
mov
insb
adc
test
jle
pop
filds
addr16
mov
fsubr
bound
stos
movd
pop
xor
adc
das
add
lods
shll
pop
push
adc
cld
mov
test
in
push
gs
and
shr
inc
sbb
addl
cs
dec
add
popf
cmp
dec
je
push
out
shlb
sub
cwtl
cwtl
add
in
cmp
bound
xor
loope
push
cmp
cmp
and
outsl
fisubrs
ret
in
test
xor
and
imul
inc
cmp
mov
in
xor
cmp
add
pop
cwtl
gs
jo
insb
xor
pop
ret
add
sub
insl
minps
mov
pusha
push
sub
dec
add
outsb
test
adcl
pop
fildl
stc
mov
inc
fisubs
and
ja
xchg
cmpsl
xor
pop
or
mov
add
sub
add
dec
or
cli
repnz
inc
add
aas
mov
and
xchg
adc
push
jl
mov
mov
add
fiadds
add
shrl
stos
test
cmc
add
mov
mov
or
pop
cmpl
push
xor
cmp
js
cmp
outsb
cmp
xchg
pop
std
cmp
and
adc
mov
push
mov
mov
mov
out
inc
daa
lods
cmpsl
leave
jnp,pt
addb
jb
sbb
scas
test
adc
sbb
es
out
ror
cmpsl
add
sub
jge
je
add
pop
shlb
and
clc
pop
sbb
push
xor
cmp
jge
add
mov
push
loop
add
mov
xor
cmp
shrb
xor
mov
inc
push
shlb
sbb
cmp
mov
cmc
imul
cmp
enter
cwtl
sbb
xchg
sub
scas
push
in
cld
inc
add
popf
xor
and
inc
pop
and
inc
pushf
xchg
add
xor
ret
nop
loop,pn
sub
mov
xchg
daa
pop
cld
incb
or
stc
sub
mov
fucomp
movhps
push
popa
and
aam
sbb
add
mov
add
push
bnd
cmp
xchg
fcoms
and
cmc
lods
jo
add
es
jne
cmp
mov
imul
pop
adc
mov
xor
imul
testb
cmpsl
or
loopne
jno
mov
loop
mov
fwait
rcrb
xor
pushf
and
popf
or
add
insl
push
dec
inc
pusha
rcl
rcrb
sbb
mov
in
and
mov
adc
adcl
add
push
imulb
clc
nop
dec
insl
mov
aam
and
pushf
dec
pop
add
xchg
push
movsl
sahf
test
test
enter
inc
rolb
fmul
add
mov
addl
xchg
lds
mov
xchg
and
cmp
outsb
daa
add
lret
jg
add
or
sahf
inc
out
add
subl
mov
aad
loope
test
cs
inc
xor
or
sahf
sub
add
rcrb
aas
lds
aam
mov
cs
mov
mov
lcall
test
xadd
push
pop
push
into
xchg
lahf
mov
lods
sbb
dec
enter
lcall
sbb
xchg
inc
and
loope
xor
add
ret
inc
add
cmp
mov
aad
adc
adc
cld
orb
jnp
add
rcll
add
fidivrs
or
inc
loope
shlb
rclb
add
dec
sbb
lds
mov
mov
mov
stos
xchg
or
add
punpckhdq
add
outsl
popl
sbb
sbb
addr16
mov
adc
xor
psubw
jg
add
shl
ja
and
dec
insl
add
cwtl
xchg
int3
lock
add
cmp
add
fidivs
jns
addl
xchg
mov
bswap
jbe
pop
in
mov
int
incb
fwait
sub
jns
les
addr16
xor
xor
xor
rorl
jae
add
fildll
sub
add
in
mov
and
in
xor
jecxz
test
lods
mov
inc
add
imul
xor
scas
mov
dec
push
lret
das
xorb
shlb
dec
sub
test
iret
incl
and
in
dec
call
push
adcb
add
scas
mov
in
bnd
pop
mov
ficoms
ret
mov
fcos
push
ja
mov
cmp
inc
jge
mov
add
or
loop
jae
gs
cmp
jge
inc
or
add
jmp
and
or
ds
imul
sub
xor
stc
pusha
cs
jbe
imul
inc
jo
push
sub
cmp
mov
rcll
lahf
adc
fisttps
or
andb
pushf
popf
add
ret
sahf
pop
cltd
lods
mov
add
add
lock
imul
nop
add
inc
push
push
cmpsb
sub
scas
ret
adc
or
sub
pushf
and
cs
fidivrl
insb
outsl
and
push
xor
pushf
mov
add
lock
data16
jnp
fwait
and
lods
orb
sti
add
add
mov
xchg
call
cmp
lahf
pop
imul
test
rcrb
dec
cltd
rcrb
adc
outsb
mov
push
sbb
sub
cmp
dec
mov
add
lock
add
mov
xor
and
or
and
and
lret
inc
jne
fcoml
or
ret
stc
dec
add
sub
outsl
movsb
imul
sbb
pop
cli
out
jae
jb
shlb
sub
rolw
bnd
sbb
shl
enter
fiadds
rorb
notb
sub
xchg
sbb
cltd
shlb
iret
divb
add
popa
test
add
or
call
lahf
sbb
js
icebp
adcl
inc
lret
adc
and
jo
mov
shlb
or
inc
insl
pop
inc
lds
add
dec
idivl
test
dec
aas
xor
mov
cli
arpl
jge
sarl
insl
cmp
out
push
lds
xor
lock
jmp
mov
mov
xor
pop
add
aas
ljmp
lahf
orb
add
mov
xor
loope
mov
imul
js
cmp
mov
fdivs
add
xor
adc
aaa
les
sub
outsl
jbe
rol
lret
test
filds
ss
jnp
push
pop
loope
cs
inc
jmp
imul
or
popa
outsl
cmpsl
stos
out
pusha
mov
jmp
and
idivl
or
sbb
cld
inc
jl
jnp
pop
xchg
clc
or
mov
scas
and
popf
mov
add
pop
add
dec
popa
dec
xchg
or
mov
out
add
lcall
movsl
rcl
rclb
addb
and
mov
and
push
pushw
jmp
fwait
call
inc
ret
inc
inc
xlat
sar
jo
rcrb
jmp
dec
mov
scas
mov
xorb
leave
negl
movsb
fnstcw
jae
stos
andb
mov
shlb
jecxz
jge
orb
cmp
out
movb
cmp
cmp
leave
sbb
dec
out
imul
add
mov
pop
dec
leave
push
add
outsb
jns
in
push
push
imul
mov
mov
fs
dec
push
icebp
cmp
xor
or
out
sbb
je
ret
push
ja
ljmp
outsl
mov
add
les
loop
insb
ficomps
iret
jo
mov
out
add
push
push
cltd
das
push
jno
add
inc
aad
cmp
movsl
pop
cltd
add
mov
mov
out
dec
jb
outsb
pop
adc
ficompl
daa
scas
pusha
mov
push
push
and
xchg
add
arpl
sub
add
loopne
orb
arpl
adc
pushf
cmp
add
xor
pop
jne
dec
add
in
jb
jmp
pushw
xchg
mov
mull
out
daa
and
add
sbb
and
sub
je
nop
sub
nop
inc
in
sbb
popa
inc
mov
mov
jo
push
sub
fsubr
push
jecxz
sub
mov
mov
inc
and
mov
std
test
imul
and
push
pop
mov
push
add
jmp
outsb
stc
and
pop
enter
iret
nop
and
add
push
std
lea
jg
add
cmpsl
mov
lret
add
push
add
sbb
fs
sub
xchg
ret
add
push
pop
push
push
add
subl
inc
adc
sbb
je
xchg
mov
add
int3
mov
mov
cwtl
aas
xor
hlt
sbb
cmp
imul
push
jnp
sub
push
pusha
dec
adc
mov
call
testb
add
nop
sub
sbb
inc
ret
clc
cmpsb
inc
push
push
inc
gs
fcomi
dec
int3
inc
in
and
arpl
rolb
lea
and
cmp
sub
sarl
adc
push
jb
aad
or
dec
faddl
jns
pop
push
leave
pusha
dec
inc
lret
cmp
cwtl
je
data16
push
in
es
lret
loopne
movl
dec
cmc
mov
or
fidivrl
ss
sar
and
jmp
xchg
sbb
jns
mov
dec
add
loopne
jno
aam
or
pop
xchg
mov
and
add
mov
mov
add
inc
xchg
pop
add
imul
lcall
daa
mov
sahf
add
es
adc
in
or
repz
jo
daa
jg
add
scas
xchg
or
adc
push
inc
add
lds
mov
pusha
jbe
xorb
mov
ret
paddusb
arpl
cli
xor
mov
ljmp
orb
dec
imul
and
repnz
jl
imul
in
cmp
jmp
add
xchg
xor
scas
sub
mov
scas
cmp
sbb
add
cli
lods
mov
sub
pop
sbb
sub
out
in
cmp
je
test
mov
jae
mov
mov
stos
add
idivl
and
mov
add
js
pusha
notl
aam
add
cli
imul
cmp
xlat
sbb
sbb
fs
add
in
pop
scas
ret
imul
mov
scas
adc
popa
add
add
dec
push
add
in
and
leave
push
dec
inc
push
mov
push
jl
in
lods
pop
adc
pushf
inc
loopne
out
daa
add
push
lods
js
jns
fdivs
test
mov
mov
loopne
sub
aad
or
cmpsb
xlat
fiaddl
sbbb
mov
mov
ret
push
and
add
pop
jecxz
jne
mov
mov
pop
add
and
dec
mov
mov
cli
aas
add
dec
movsl
mov
testb
cmp
add
dec
xor
add
out
push
fcoms
add
add
imul
cmp
test
dec
clc
ret
or
ljmp
add
cli
pop
incb
pop
sbbb
add
stos
add
pusha
pop
add
and
filds
cld
cmp
push
int3
rol
jbe
add
lahf
data16
or
sub
or
sub
add
xchg
hlt
fildl
and
loopne
imul
inc
mov
dec
mov
add
sub
jmp
leave
add
and
in
rolb
sbb
sti
jl
sbb
sbb
xchg
ja
jl
test
and
mov
repz
cmp
aam
sub
xchg
mov
stos
scas
icebp
and
lcall
cmovno
push
sbb
xchg
popa
sub
mov
pop
repnz
std
add
inc
fstpt
xor
js
or
ror
jmp
jnp
test
int
add
cmpsl
dec
push
mov
mov
xchg
cmp
mov
je
add
add
shl
pop
and
cmp
add
enter
sbb
mov
and
adc
add
flds
out
and
sbb
bound
add
lcall
add
mov
add
push
test
data16
sahf
mov
cmpb
add
add
dec
aaa
xchg
xor
sahf
out
adc
xchg
fs
sub
lret
dec
inc
inc
movb
out
add
push
sbb
cwtl
adc
popa
repnz
mov
shl
js
add
and
dec
add
cmpsl
mov
sbb
das
add
insl
or
add
pop
orb
pusha
pop
add
push
push
cwtl
mov
or
jmp
mov
es
xchg
push
jno
or
js
or
cmpsl
jmp
mov
aas
dec
mov
xchg
jmp
pop
mov
xor
add
mov
aad
in
test
imul
mov
movups
movl
ljmp
push
or
in
lds
stos
mov
mov
adc
adc
add
hlt
add
js
and
dec
clc
add
orb
add
mov
es
add
jno
in
and
xchg
xor
subl
flds
cld
xor
add
jp
inc
clc
cmp
rolb
mov
xchg
add
pop
pop
rorl
pop
int3
jb
add
jmp
les
aaa
xchg
mov
jae
and
sbb
xchg
sarb
sub
mov
in
cltd
mov
lahf
pusha
outsb
sbb
xchg
mov
sarl
and
jb
add
adc
add
adc
mov
add
pusha
pop
xchg
cld
dec
stos
or
jmp
xor
dec
add
test
xorl
ret
leave
loope
loopne
fs
imul
lea
cmp
adcb
rolb
inc
into
fisubrl
sahf
mov
add
mov
rcr
insl
aas
aaa
cli
add
mov
imul
mov
or
hlt
and
pop
stc
add
push
xchg
xchg
jbe
fiaddl
fs
loop
cmp
and
add
add
mov
sbb
add
mov
or
dec
imul
lret
insb
or
push
mov
add
sahf
adc
cmp
sub
cmp
xchg
push
inc
outsb
add
aas
jbe
mov
fucomp
hlt
popf
add
push
push
imul
mov
popf
movb
sbb
sub
cwtl
xchg
cmpsl
inc
lahf
and
in
mov
dec
pushf
add
loopne
test
bound
sub
cwtl
push
je
ja
add
lahf
pop
sub
in
enter
sahf
enter
push
mov
pop
pop
cmpsb
into
mov
mov
loopne
jb
jae
add
leave
mov
pusha
out
push
adc
addr16
adc
sbb
add
pop
psubq
shll
xchg
insl
leave
cmpsl
pushf
fiaddl
inc
cltd
lahf
bound
lock
push
add
loope
or
pop
imul
clc
std
add
mov
fcomps
mov
pusha
sti
pop
inc
add
cmp
add
in
aad
mov
lds
xor
xchg
push
pop
ficoms
pop
nop
jns
loopne
rcr
lahf
xor
outsb
pop
xlat
jae
sbb
ret
lods
in
xchg
add
lret
out
dec
mov
push
cmp
in
xor
aam
lea
add
mov
faddl
mov
sub
out
mov
add
xchg
and
scas
rclb
lret
add
es
add
jecxz
shlb
add
sahf
mov
es
add
mov
in
add
or
add
stos
sub
push
push
mov
daa
cmp
andb
pop
add
sbb
outsb
push
stos
shrl
jmp
sbb
adc
and
subb
lret
rorl
hlt
and
sbb
roll
push
adc
mov
jmp
sbb
rolb
insb
jmp
lcall
adc
cmpl
or
add
mov
sahf
pop
mov
xchg
ja
or
mov
add
xor
mov
mov
stos
iret
into
or
icebp
popf
xchg
lds
test
cmp
gs
loop
lahf
pop
fsubrs
mov
sub
add
cltd
add
dec
nop
rcll
mov
adc
js
add
and
clc
and
loop
inc
or
sahf
cmp
cmpl
std
push
dec
mov
sub
and
add
popf
cltd
imulb
test
adc
xchg
mov
jbe
adc
xchg
clc
sub
add
outsl
rorb
xor
test
lods
add
cs
xchg
lret
hlt
aaa
pop
jno
inc
add
push
mov
rorl
mov
push
cmp
inc
lods
icebp
add
frstor
pop
lahf
pusha
mov
sbb
fiadds
mov
cmc
testb
out
call
fdivrs
lods
add
lret
loopne
mov
push
add
lds
push
in
pop
mov
mov
cmp
mov
ret
jmp
push
sub
test
xor
xorb
add
fwait
sbb
cmp
xlat
cmp
sbbb
sbb
dec
loopne
jl
sbbl
xor
add
aad
and
mov
xchg
inc
add
pushf
sbb
mov
test
xorb
xor
pop
dec
jns
fidivrl
jbe
mov
sbb
out
andl
negl
add
push
sub
in
mov
sbb
data16
mov
addb
filds
daa
rorb
aaa
scas
gs
cs
addb
xor
aas
icebp
push
or
dec
and
dec
mov
pop
shrl
mov
push
pop
stos
xchg
loopne
or
add
or
adc
das
inc
sbb
add
add
xor
cmp
movsb
dec
add
push
gs
lret
lret
loopne
insb
scas
sbb
pop
rcrb
repnz
mov
push
jnp
mov
and
add
cmp
mov
mov
popf
daa
cmp
pop
add
adc
cmp
popa
mov
mov
adc
dec
cwtl
push
jne
data16
mov
jb
repz
fcoms
push
cltd
cwtl
fs
sbb
push
scas
mov
adcb
mov
xchg
or
cmpsl
xchg
addb
pop
sub
inc
push
outsl
dec
out
fdivs
imul
shrb
sub
mov
into
add
aam
xor
push
sub
adc
xor
into
add
inc
inc
movb
inc
sbb
mov
pusha
fs
add
or
and
sbb
inc
mov
test
int3
stc
dec
add
popf
xchg
movsb
rolb
jnp
sti
add
xor
stos
xchg
rcrl
push
ficomps
xor
mov
add
xchg
mov
jb
rclb
add
pop
aad
dec
notb
mov
int3
decb
lret
mov
adc
loopne
js
test
cltd
mov
push
hlt
jge
insl
mov
nop
pop
add
jo
and
and
add
mov
fildl
pop
popa
push
or
or
sahf
xchg
pop
mov
stos
sbb
pop
cmp
sbbl
add
pop
imul
repnz
in
jl
push
jnp
testb
jne
add
rcrb
sub
inc
cld
add
xor
add
jle
test
movsl
mov
mov
imul
sbb
leave
ret
pop
psubusb
jg
push
add
insl
or
lock
out
jne
add
mov
fbld
push
dec
cmpsb
sbb
jno
mov
add
and
ret
clc
add
jmp
scas
xor
and
or
push
pop
icebp
rclb
fwait
mov
add
test
fimuls
aaa
add
scas
push
mov
test
add
push
ficoml
cmc
movsb
add
jp
dec
add
mov
sbb
add
in
popf
sbb
jmp
add
add
xchg
aaa
mov
cwtl
out
add
lods
inc
imul
and
push
xlat
ja
jecxz
sub
sub
fcoml
fsubr
push
cmc
xor
roll
ljmp
add
or
dec
and
imul
add
add
push
insb
rolb
adc
lret
push
push
movb
adc
jg
mov
add
sub
and
add
mov
cltd
pushl
push
dec
xor
add
rcrl
and
sbb
mov
addb
fisubl
aaa
mov
or
dec
cli
lret
dec
in
insb
jbe
push
push
mov
xchg
push
sti
sbb
add
push
xor
nop
int3
inc
add
mov
jl
add
fldcw
push
add
imul
sub
add
lods
jno
add
push
lahf
and
mov
dec
add
not
ljmp
je
inc
add
cmp
or
dec
and
jns
jmp
or
xchg
inc
xchg
into
inc
adc
lods
test
pop
stos
push
push
pop
out
test
nop
in
rorl
nop
lret
lock
mov
hlt
dec
jle
add
bound
in
mov
mov
add
adc
jo
in
pop
push
jne
cs
mov
mov
mov
and
inc
cs
cmp
mov
cld
inc
fdivs
add
lods
cmp
add
popa
fwait
mov
mull
test
iret
aad
xchg
sbb
ds
ret
outsb
mov
or
mov
mov
mov
mov
outsl
add
sbb
inc
or
or
stc
add
push
adc
push
imul
or
xchg
jbe
add
sahf
subl
add
push
and
scas
pushf
jg
out
sbb
enter
xchg
add
pop
pop
popa
in
movsl
nop
push
push
fbstp
loope
out
add
jge
add
xor
dec
repz
loopne
xor
sbb
mov
and
xor
and
filds
add
fdivrs
imul
mov
sbb
aaa
and
push
fildl
xchg
jo
add
popa
mov
and
out
addb
mov
mov
mov
pop
insb
cmpsb
mov
push
cmp
in
xorb
stos
dec
out
jno
mov
push
add
inc
pop
stc
insl
pusha
dec
sub
add
jge
dec
jnp
test
lret
inc
pop
jns
xor
js
dec
inc
jmp
and
inc
add
mov
sub
aam
enter
es
cwtl
aam
movsl
mov
add
addr16
add
push
sub
loope
inc
in
push
ja
ret
cmpsb
ror
fnstsw
scas
ljmp
inc
lea
lods
int3
in
xor
push
mov
or
sub
mov
mov
testb
fscale
bt
mov
sahf
sbb
mov
divb
or
adc
test
adc
add
sbb
gs
push
or
lods
add
int3
ret
test
mov
or
sbb
mov
add
fsubl
cmc
loope
int3
das
in
dec
cmp
sub
mov
dec
inc
in
loopne
add
hlt
test
xlat
dec
sub
add
add
test
test
jge
and
cmp
add
filds
sbb
jno
icebp
daa
je
add
add
fnsave
xchg
add
std
push
bound
or
das
and
scas
rorb
jo
inc
pusha
xor
leave
pop
in
adc
loopne
movsl
ficoms
popl
das
out
lds
ljmp
leave
push
sub
ss
jge
cmp
pop
in
push
adc
sbb
inc
ret
clc
mov
orb
adc
xor
pusha
out
add
sahf
xor
mov
add
jns
sbb
ret
mov
mov
or
pop
push
sbb
xchg
lahf
enter
subb
cwtl
insb
mov
xor
adc
nop
loopne
out
sar
add
into
rcrb
xor
add
jge
icebp
jnp
iret
jo
adc
insb
mov
stos
add
lea
enter
adc
dec
sbb
sub
jbe
sub
fmull
pop
xchg
adc
nop
xlat
sbb
push
inc
ja
add
adc
jle
adc
push
fistpll
adc
lret
mov
pop
cwtl
add
rclb
repnz
cmp
lds
rorb
jge
or
leave
test
xchg
orb
in
mov
cmp
pusha
rcrl
sub
dec
inc
outsl
add
mov
lods
cmpsb
dec
test
fs
ret
add
lahf
sahf
mov
ss
add
jp
sub
push
or
es
pop
cltd
add
xor
pushl
out
cwtl
push
xor
fstpt
arpl
out
mov
mov
ds
add
outsb
inc
fcmovb
loopne
scas
add
mov
add
aaa
cwtl
dec
add
and
pop
hlt
mov
test
sbb
inc
push
fldl
and
lsl
lahf
scas
pop
pop
nop
mov
cltd
add
add
pusha
insb
jge
in
add
inc
mov
call
lahf
lds
cmp
add
nop
test
mov
mov
or
adc
inc
les
mov
pop
add
in
sub
add
and
in
test
add
lds
xor
cli
add
pop
add
add
sti
ret
test
or
ljmp
push
rcll
rolb
dec
sbb
dec
repz
lock
int3
addr16
add
sbbb
jmp
ljmp
mov
push
add
inc
mov
mov
andl
jp
pop
sbb
xor
add
mov
push
addl
mov
add
add
das
add
popa
or
imul
inc
xchg
mov
inc
jnp
push
fiadds
dec
pop
mov
pop
cmpsb
mov
dec
outsb
movsl
push
rol
imul
push
push
scas
jnp
pop
pop
mov
call
sub
cmp
push
adc
or
ret
repnz
insb
lret
pop
add
outsl
fstl
insl
movsb
and
xor
idivb
xchg
nop/reserved
faddl
sbb
outsb
or
sarb
pushf
and
and
adc
xchg
jae
jp
jo
fldt
roll
lods
leave
adcb
stc
xor
add
inc
jo
outsb
jle
xor
pop
pop
into
jg
cwtl
arpl
jl
jecxz
add
aas
call
or
sbb
add
addb
add
pop
sub
stos
shrl
aas
add
popa
addr16
loopne
and
sbb
and
xor
sarl
adc
aam
xchg
and
cmpsb
call
pop
nop
cwtl
cmp
or
sub
add
lahf
into
pushf
sub
jae
loopne
xor
mov
and
add
pushf
mov
aaa
add
mov
mov
or
rclb
add
mov
addb
xchg
in
push
dec
lods
jne
mov
aad
loopne
mov
mov
insb
push
cmp
in
in
movsl
push
inc
out
sbb
inc
lods
cmp
in
add
cmp
negl
out
mov
shlb
loopne
cwtl
pop
xor
xor
mov
sahf
faddl
aas
in
rcr
adc
mov
fmull
arpl
iret
add
cmp
cli
stos
ds
mov
cmp
jo
sbb
sub
in
xor
imul
sbb
aas
movsl
mov
push
push
sbb
inc
inc
mov
and
and
xor
sti
fs
dec
adc
jg
inc
mov
pop
cld
add
add
and
mov
push
fcompl
add
out
lahf
repz
mov
lods
roll
jns
mov
push
or
cwtl
dec
sti
add
dec
inc
popf
pop
mov
sbb
mov
iret
inc
int
decl
clc
xor
sbbb
pusha
std
call
cli
jo
int3
mov
cmp
cmp
xchg
adc
daa
add
mov
rol
cmp
cli
filds
in
sub
mov
jecxz
pop
adc
sbb
stos
jb
shlb
pop
outsl
test
jmp
sbb
pop
andb
cmp
sbb
inc
add
call
out
leave
add
and
aaa
in
push
jo
jmp
dec
sbb
mov
and
pop
sbb
ljmp
adc
pop
and
jno
pusha
sub
add
ret
je
add
dec
xor
xchg
xchg
add
int
and
test
mov
inc
popl
cmpsb
dec
sbbb
repnz
add
or
and
int3
add
push
testl
cmp
inc
lahf
jp
insb
add
push
pop
repnz
dec
jne
mov
out
lods
add
aas
or
sbb
mov
sahf
add
mull
push
sub
mov
add
pop
aas
sbb
cmp
pusha
add
clc
aaa
add
mov
jbe
add
pop
cli
lds
adc
add
ret
js
add
adc
or
add
xchg
xor
mov
es
jne
push
add
cmp
scas
xor
nop
dec
add
xlat
push
add
sub
test
fmul
sbb
hlt
cmpsl
add
arpl
or
add
jecxz
jnp
les
mov
lock
and
test
mov
mov
add
ss
sub
test
cld
rcrb
lahf
jno
shlb
ds
fnstcw
xchg
pop
in
jne
xor
dec
push
push
add
push
mov
cmp
adc
ud2
and
das
lods
mov
ja
fsubl
push
add
xor
pop
test
jbe
mov
dec
in
sub
test
xor
loopne
xchg
push
orl
add
fsubr
add
sahf
jp
mov
aad
push
repnz
lahf
mov
test
popa
addl
orb
dec
inc
rolb
xchg
imul
int3
loopne
adc
outsl
push
sarb
add
sahf
or
insb
shr
dec
pop
in
add
in
lock
jb
pop
in
add
dec
fwait
pop
jle
jo
fidivs
lds
sbb
fcoml
out
xchg
push
insb
daa
adc
pop
xor
add
out
clc
mov
rcll
mov
mov
arpl
dec
nop
int3
add
lods
test
daa
mov
xchg
push
add
mov
ret
decb
or
in
clc
push
imul
inc
lods
inc
xor
xchg
add
xchg
out
adc
data16
adc
pop
push
mov
pusha
loopne
ds
push
and
jp
arpl
std
xchg
les
xor
popa
mov
mov
sbb
icebp
cltd
hlt
loope
add
cwtl
cmp
ret
test
add
inc
decl
add
ds
mov
and
mov
add
pop
dec
nop
nop
sub
fcmovnb
cmpl
cld
pop
jl
dec
cmp
add
push
dec
inc
daa
leave
mov
in
into
addl
add
push
mov
add
fcmove
shrl
inc
arpl
pushf
cmp
mov
xor
mov
in
sti
jg
out
push
xor
push
mov
pop
fadds
jnp
iret
cmp
lock
xor
loope
sbb
sarb
pop
pop
or
xchg
aam
sub
das
add
roll
mov
jle
add
shr
and
aam
in
jecxz
mov
lea
adc
sbb
xchg
loopne
cmp
sub
xor
xchg
add
pop
aam
dec
fcoml
jge
dec
scas
xchg
lock
loope
mov
cld
add
sti
sub
mov
adc
jbe
ss
push
push
adc
arpl
jl
push
add
inc
fdivrs
testl
fistl
cmp
add
push
fldenv
daa
sbb
aas
pop
ljmp
lcall
xchg
mov
add
outsl
adc
cmpsb
push
fmuls
add
mov
test
mov
addr16
imul
orb
shlb
adc
or
mov
mov
adc
or
cli
mov
dec
mov
pop
jle
push
mov
in
adc
pop
push
rol
push
cmpsb
xchg
add
mov
pop
lds
jecxz
test
std
push
cltd
fimuls
mov
add
pushf
sarb
popf
imul
pop
adc
sahf
add
sbb
dec
add
es
dec
sbb
mov
movsb
dec
icebp
nop
mov
add
pop
push
movsl
add
std
or
push
mov
sub
jl
push
xor
sub
add
shll
lldt
jno
add
ret
push
in
in
push
sbb
andl
and
and
test
ror
and
and
mov
add
push
push
inc
and
dec
inc
add
fistpll
mov
leave
jmp
cmpsl
and
push
dec
movsb
sbb
xchg
mov
insl
add
ja
aaa
adc
pop
sub
mov
push
add
sub
mov
or
dec
test
xor
pusha
es
mov
xchg
sbb
scas
mov
xchg
in
xor
sub
inc
mov
sbb
jle
inc
pop
sbb
aas
pop
xor
sbb
and
adc
mov
push
sub
mov
insl
adc
sub
popa
scas
mov
mov
sbb
loopne
xor
cmp
int3
mov
popa
mov
xor
jnp
into
fadds
in
stc
push
pop
push
inc
sbb
or
popf
mov
and
dec
inc
sub
pusha
adc
ret
pop
xor
popf
mov
mov
daa
addb
aas
lods
push
cltd
outsl
orb
popf
dec
and
cmp
add
daa
fldenv
ds
popa
sarl
add
jbe
jecxz
stos
add
fildll
add
imul
insb
mov
pushf
loopne
cli
or
cltd
lods
xor
stc
roll
icebp
lds
iret
add
notb
sub
loopne,pn
jl
adc
sub
and
flds
mov
lock
xor
shlb
sbb
ja
push
push
enter
mov
cli
pop
das
loope
iret
sbb
pusha
out
pop
mov
negl
stc
enter
inc
pop
mov
add
cwtl
mov
add
outsl
sub
xor
mov
push
repnz
std
add
fsubs
aaa
adc
test
jnp
lcall
mov
inc
iret
push
xchg
mov
sbb
pop
sbb
movswl
adc
xorl
test
lret
or
js
cwtl
add
out
test
add
int3
sub
cmpsl
sbb
jo
add
pop
dec
aam
in
or
xor
fnstsw
in
mov
dec
mov
mov
mov
xor
repnz
mov
xor
jg
sahf
sub
push
add
inc
jecxz
sub
mov
sub
cmpb
mov
push
call
push
mov
and
ret
fwait
cmpsb
mov
dec
sub
cltd
repz
arpl
and
stos
add
sbb
or
pusha
xchg
dec
addl
or
scas
aam
xchg
sbb
pop
sub
inc
add
in
sub
outsl
int3
push
lea
mov
test
aas
add
mov
call
cmpsl
cmp
push
arpl
and
or
sahf
fwait
push
pop
adc
cwtl
cwtl
pop
add
pop
cmc
test
and
xchg
test
pop
stc
sbb
xor
xor
lock
fcmovnb
push
and
xchg
imul
push
push
loopne
lods
aas
stos
lret
mov
mov
add
cltd
out
xchg
mov
adc
sbb
inc
ret
add
inc
outsl
into
test
add
pop
out
aad
loopne
sti
pop
add
movsl
int
pop
fdivrl
push
lcall
push
stos
cs
mov
sbb
mov
xor
and
mov
ret
leave
add
test
ret
ret
jl
add
add
mov
mov
xchg
xor
xchg
aas
inc
aaa
pop
icebp
mov
pop
mov
pusha
mov
das
lret
popf
xor
add
ljmp
fidivrs
pusha
ret
loop
or
sbb
mov
loopne
js
add
mov
mov
sbbb
out
pushl
push
cs
inc
mov
movsb
mov
ret
add
iret
int3
loope
add
movsl
loop,pn
pop
sbb
std
or
lea
test
andb
test
out
test
inc
cmc
or
add
cmp
sbb
add
dec
push
insl
push
out
nop
xor
ret
scas
cld
cld
andb
sbb
stos
mov
jnp
cmp
mov
xor
sbb
icebp
mov
xor
xor
subb
cltd
xchg
insl
cmovnp
cmpl
repnz
push
pusha
mov
lcall
add
jno
pop
push
xor
fst
call
std
mov
jmp
or
mov
sub
mov
into
cmp
cmp
jge
das
fstps
test
adc
cmp
fcoms
xor
or
add
ret
les
fstpl
dec
sbbb
std
sub
sub
mov
scas
out
push
xchg
cmpsl
push
popf
cld
stc
or
fadd
loope
aad
add
inc
pop
addb
dec
aas
loope
call
push
push
loop
fldl
inc
popa
fneni(8087
cmp
jo
ret
adc
js
sbb
fimuls
push
mov
or
pop
js
add
xchg
pop
inc
out
shr
or
and
pushf
repz
lock
jge
cld
mov
aad
iret
mov
mov
dec
sarb
jg
aas
add
gs
push
sub
pop
pop
je
and
xor
or
pop
enter
add
and
cld
fisubrs
push
mov
aas
mov
xchg
xor
popf
dec
add
sti
jb
xor
lcall
pop
add
insb
mov
add
inc
jnp
push
mov
inc
add
push
push
jae
mov
adc
add
ljmp
imul
xor
je
add
sub
push
push
xchg
pop
fildl
lods
in
xchg
call
add
cmpsl
add
and
orb
scas
rcrb
mov
out
add
outsl
add
inc
sbb
pop
andb
xor
add
sarb
add
fsubs
pop
push
shrb
dec
js
outsb
adc
lret
cmp
pop
dec
icebp
out
or
add
xor
mov
xlat
sub
in
in
inc
jbe
add
push
pop
outsb
cmp
dec
fiadds
sahf
or
mov
or
dec
inc
add
push
icebp
mov
push
fmul
pushf
das
movsl
mov
and
pop
add
inc
adc
sub
loopne
jge
add
jecxz
add
mov
fadds
jmp
mov
push
and
popf
add
shrl
pop
adc
xor
xchg
add
pop
dec
in
icebp
lods
adc
jg
shlb
mov
cmp
xor
add
gs
cltd
push
add
cmp
and
sarl
test
lahf
add
addb
cmpb
jnp
xor
jns
mov
out
adc
cmp
and
leave
dec
sar
add
adcl
pop
jo
pop
add
mov
mov
dec
adc
pop
and
shl
xlat
addb
sti
or
bound
add
hlt
jl
pop
loope
cmovl
push
push
lahf
orb
adc
in
cmp
mov
jnp
add
sti
mov
fbld
stos
add
cmpsb
xlat
stos
popa
dec
movb
movsb
movsl
shl
push
or
jae,pn
mov
mov
stc
add
in
lds
add
fdivrp
mov
jg
push
add
addr16
rolb
and
movsl
push
imul
fprem1
jle
xor
or
rclb
jo
add
arpl
into
jecxz
xchg
pusha
sub
je
add
ds
fdivrl
pop
add
repnz
pop
xor
cmp
mov
shl
lcall
push
or
sub
repnz
add
xor
fcomip
dec
xor
inc
sub
cmp
jne
add
lea
cmpsb
dec
add
data16
cmp
adc
mov
shl
lcall
out
jb
mov
adc
pusha
hlt
push
sub
loop
add
in
mov
inc
stos
cmp
int
cld
jne
cwtl
and
and
popa
daa
orl
add
cltd
enter
sbb
mov
shld
dec
sbb
sbbb
add
xchg
repnz
lret
pop
fucomi
outsb
pop
in
mov
fldl
cmp
out
add
mov
add
and
jo
mov
hlt
pop
in
je
add
js
sahf
aaa
shlb
xchg
fwait
icebp
xchg
fs
mov
fdivrs
out
cmp
leave
pusha
sub
popa
mov
mov
addb
imul
pop
mov
jo
mov
add
and
repz
adcb
dec
call
daa
lods
loopne
loopne
xchg
mov
enter
ret
lret
popa
xor
outsb
pop
push
pop
pop
add
and
call
xchg
stc
add
loop
fs
rcl
in
or
mov
outsl
cmc
mov
rorb
sub
add
cli
pop
dec
adc
mov
addl
adc
cli
push
add
jns
mov
sbb
dec
insb
test
xor
xchg
in
add
cmp
sub
and
cmp
std
pop
jb
lods
dec
inc
xor
inc
mov
or
xchg
xor
ljmp
das
rclb
inc
add
in
mov
cmp
add
pop
cmpsl
add
jo
add
or
sub
add
adc
and
and
sbb
push
xchg
fadds
leave
jp
mov
mov
add
sbb
add
xor
insl
push
pop
mov
ds
movsl
loope
addr16
inc
scas
enter
or
pushf
mov
mov
popa
stos
mov
xchg
cli
cs
aam
xchg
push
mov
add
not
scas
mov
sti
add
es
inc
mov
pop
dec
ja
add
sarl
mov
adc
lods
jp
fldt
ja
jnp
add
insl
int
sub
lock
rolb
xchg
dec
jno
das
pop
adc
sub
les
mov
loope
shrb
mov
jne
cwtl
add
and
rcll
clc
jns
cmp
cld
add
adc
jae
outsl
fidivl
add
rol
pop
gs
mov
add
aam
adc
jo
aas
test
add
imul
pop
mov
dec
add
push
pop
call
and
cmp
xchg
je
mov
add
jg
mov
pop
bound
repnz
addl
out
jecxz
pusha
mov
jle
jbe
add
add
insl
jecxz
loop
add
xchg
mov
addb
sbb
xchg
cs
xor
mov
xchg
inc
pop
mov
addr16
pop
sbbl
push
add
sbb
inc
adc
or
push
xchg
test
dec
sub
sub
sbb
mov
mov
pop
ret
out
lahf
shlb
lret
sbb
mov
fwait
in
icebp
add
vpaddsb
jge
add
mov
and
add
jbe
and
stos
cmpsb
or
cld
clc
cli
and
outsl
cwtl
cmpb
out
and
in
mov
xorb
arpl
pop
fadd
out
inc
sbb
xor
xchg
add
mov
xchg
les
add
pushf
add
pusha
insb
pop
sbb
call
sub
cmpsl
jge
jle
orb
inc
mov
pop
cmc
leave
or
pop
add
hlt
cmp
dec
mov
fucom
add
and
pop
sbb
addl
xchg
popf
shll
ret
les
out
add
lahf
dec
test
mov
or
add
in
nop
add
fs
pop
sti
rcr
pop
pusha
sbb
adc
bnd
in
pop
push
fwait
shrb
add
sbb
sbb
mov
sbb
bound
jbe
inc
xchg
mov
int
sub
and
mov
xor
xchg
shll
movsb
push
add
and
add
adcl
sbb
push
cs
cmp
add
rol
xchg
call
or
cmc
mov
arpl
ljmp
dec
jo
shl
jnp
adc
push
mov
imul
inc
sbb
test
push
inc
add
bound
mov
dec
data16
ja
clc
les
pop
add
ds
addb
add
cmp
pop
fildl
mov
dec
push
cmc
aad
popa
push
in
xor
loope
jns
fsub
pusha
adc
or
push
jge
mov
addb
mov
xchg
adc
test
sub
imull
and
insl
movsl
jne
out
and
add
or
xor
add
roll
mov
or
inc
push
fucomi
lods
push
testl
js
mul
add
int3
shrb
fistps
mov
cmp
rcl
sub
ds
stc
popf
pop
fcompl
add
push
cmp
jb
fcmovbe
jbe
and
add
sarl
sub
movmskps
pop
cld
rclb
jge
pop
out
add
fiadds
sub
xchg
cld
add
inc
std
ret
arpl
in
add
mov
inc
loopne
mov
adc
in
pusha
cmpsb
rolb
or
scas
sub
pop
fbld
sbb
sbb
nop
push
mov
shr
dec
push
lret
pop
mov
imul
pop
stc
outsl
ja
insb
jbe
add
insl
adc
add
arpl
nop
mov
cli
sbb
jmp
mov
pop
inc
mov
sub
sub
lcall
adc
movsb
int3
out
mov
add
mov
das
popf
mov
jns
rolb
or
out
mov
add
cli
mov
daa
add
sub
mov
add
push
jle
pop
or
pop
dec
sahf
lret
jae
cmp
add
mov
inc
push
jge
ja
cli
push
test
rolb
jmp
cltd
jmp
mov
add
mov
add
rcr
sub
mov
add
enter
inc
adc
jno
call
pop
sti
roll
xor
add
jg,pn
daa
scas
push
aas
js
add
mov
cmp
sbb
hlt
test
push
test
inc
mov
lret
mov
pop
sbb
cli
jle
xchg
cmp
add
icebp
adc
or
mov
mov
in
jp
pop
sti
test
and
and
adc
cltd
rorl
add
dec
push
or
outsb
add
pusha
mov
out
cmp
xchg
add
inc
inc
cmc
mov
xchg
test
mov
fcompl
std
add
jno
and
adc
sub
js
add
test
xchg
dec
pop
cli
adc
cwtl
mov
mov
scas
xlat
or
add
xor
and
adc
sbb
imul
mov
inc
ss
push
imul
scas
add
jg
roll
sbb
lock
nop
cmp
outsl
adc
xor
loopne
xchg
repz
std
loopne
dec
xchg
cwtl
cmp
mov
lahf
push
adc
testb
inc
inc
test
rolb
mov
jae
xchg
int3
cmc
sahf
outsl
jp
mov
sbb
mov
jnp
add
addb
mov
jbe
loopne
pop
push
mov
lret
mov
cwtl
or
repz
cli
lods
add
mov
ljmp
inc
dec
fcoml
lock
ljmp
add
mov
test
repz
jg
faddp
mov
jb
mov
je
into
bound
add
jnp
cmpsb
pop
add
stc
inc
or
outsb
add
fbld
xchg
pushf
cmp
or
mov
jp
movl
jmp
rol
aam
adc
pop
fwait
or
lcall
lret
popf
xchg
push
dec
in
fxch
add
xor
pop
adc
testl
iret
xchg
xchg
stos
addb
dec
je
sbb
xchg
je
push
add
sahf
inc
add
push
adc
adc
rclb
push
imul
mov
in
sbb
pusha
mov
push
adc
inc
stos
popa
push
sarb
sub
je
call
add
mov
rolb
jae
fdivs
test
outsb
dec
xchg
cli
imull
inc
sub
or
inc
out
mov
cld
xor
test
push
aas
rclb
inc
sbb
pusha
pop
clc
mov
ficomps
daa
and
pop
hlt
mov
shlb
sbb
or
push
xorb
out
lea
xor
dec
or
xorb
adc
mov
insl
xchg
pusha
lock
mov
add
jns
inc
jp
lret
xchg
pop
fwait
mov
ljmp
mov
jecxz
scas
add
pop
sub
cli
stos
jle
mov
push
or
dec
cmp
test
jle
add
or
mov
std
stos
hlt
rcrb
nop
nop
sub
sti
pop
cmp
rolb
into
mov
inc
jae
pop
push
aaa
adc
cmp
mov
mov
imul
xor
decb
cltd
and
arpl
jo
add
bound
mov
test
mov
leave
add
xor
add
dec
mov
pop
mov
xchg
and
aad
sahf
pop
jg
sahf
cld
push
movsb
bound
push
mov
push
pop
mov
rcr
push
or
lods
fbstp
add
ljmp
lahf
add
push
addr16
cs
or
mov
ret
and
fsubl
inc
inc
jmp
pop
call
lock
push
jnp
mov
std
iret
inc
mov
fs
add
pusha
push
mov
push
sbb
les
int
mov
sbb
pop
inc
mov
test
test
inc
mov
ja
adc
lock
push
dec
mov
jns
sar
add
lock
out
fstps
mov
sbb
call
xor
leave
add
and
mov
xchg
inc
add
js
adc
fcoml
inc
sti
mov
stc
hlt
aaa
pop
repz
push
sbb
adc
ret
push
cmpsl
enter
test
jb
sbb
and
sbb
js
inc
out
xchg
pushf
pop
adc
loope
lahf
mov
mov
loopne
push
fwait
dec
out
push
add
xchg
or
add
mov
adc
inc
inc
jb
or
inc
inc
pop
popa
dec
xor
adc
mov
dec
push
inc
xor
xor
ljmp
movsb
cmp
test
aaa
add
ds
fs
mov
pop
test
dec
mov
in
out
sarl
add
xor
push
mov
mov
add
sub
or
outsb
cmpsl
add
add
xchg
mov
mov
stc
cmp
pop
mov
test
cwtl
inc
lock
inc
icebp
jb
add
fimull
push
stc
push
or
xchg
arpl
loope
mov
cmp
mov
inc
rolb
add
pop
arpl
cli
add
jno
xchg
xchg
adc
adc
fadd
jle
add
sbb
movsb
andb
dec
stc
mov
movsb
push
pop
int
es
add
cmp
mov
or
adc
into
cli
cwtl
nop
imull
inc
out
adc
adc
inc
roll
aam
push
xchg
faddl
pop
mov
mov
lods
xchg
pop
clc
sbb
in
mov
daa
les
pop
loop
pop
cmp
inc
sahf
inc
xor
xor
cmpl
pop
rcrl
loopne
and
lock
test
negb
scas
mov
add
push
loop
and
and
or
add
dec
push
in
cs
mov
add
sub
sbb
pop
insl
mov
push
sahf
pushf
add
in
or
mov
pop
ret
cwtl
adc
imul
cwtl
mov
mov
call
lods
add
add
in
bound
pop
xor
dec
mov
add
daa
aaa
jecxz
leave
sub
or
adc
mov
xchg
call
push
addr16
sbbb
in
xlat
dec
sub
add
and
xchg
xchg
xchg
lret
mov
or
push
call
pop
iret
mov
mov
mov
add
push
cmp
jnp
and
pop
push
push
adcb
mov
movsl
test
arpl
inc
adc
cltd
int3
insb
sbb
jl
xchg
cmp
dec
pop
and
jge
cmc
adc
inc
divb
nop
in
movsl
repnz
sub
ljmp
inc
xor
iret
mov
cmp
aam
adc
pushf
pop
pop
jo
adc
push
pop
cmp
insl
pop
sub
pop
sbb
rolb
and
adc
and
mov
push
loope
add
lcall
sub
bound
outsl
and
enter
dec
pop
mov
mov
hlt
push
jo
mov
mov
shll
fistpl
xchg
jne
orb
out
sbb
mov
xor
es
mov
adc
adc
and
and
stc
cmc
and
jb
enter
insb
pop
adc
mov
sub
fsts
rclb
add
xor
mov
lock
xor
mov
mov
dec
cmp
or
add
push
adc
mov
add
in
mov
stc
or
rolb
add
je
icebp
adc
insb
xchg
or
std
sbb
hlt
jge
or
stc
sbb
or
ret
push
adc
adc
sub
push
xchg
xor
repz
push
test
mov
data16
out
sub
mov
fistl
iret
sub
es
mov
jge
mov
lahf
addl
icebp
imul
sbb
inc
test
lahf
sub
nop
xor
idivb
push
or
add
rolb
mov
add
mulb
call
lret
inc
push
out
daa
pop
rclb
sbb
xchg
insb
int3
mov
push
sbb
pop
outsb
xor
cs
fsubl
adcb
movsl
das
inc
jmp
hlt
pop
mov
nop
xor
fs
sbb
ficompl
inc
test
and
cmc
cmp
pop
mov
es
adc
jne
adc
fildl
pop
sbb
lret
jae
jg
pop
mov
sbb
pop
dec
mov
push
push
add
xchg
xor
loopne
cmp
adc
cmp
adcb
add
arpl
xchg
shll
enter
out
sub
and
jl
jl
mov
add
push
aam
les
ja
xchg
movsb
gs
or
cs
push
add
mov
js
and
lods
or
aas
aam
add
or
cmp
add
pop
ret
lret
xchg
cmp
popa
mov
cmp
loopne
and
mov
jle
jnp
enter
pop
mulb
jno
daa
or
and
cmp
push
dec
popf
mov
inc
in
pop
or
aad
stos
jbe
rclb
add
fwait
sub
into
mov
lock
jp
jns
dec
push
xchg
xor
mov
stos
and
rcrb
or
out
add
and
xor
aam
fsubl
sbb
or
not
or
lcall
cmc
jne
add
outsb
int3
andl
sbb
push
sbb
add
mov
add
popf
shll
push
add
pop
jg
sbb
in
inc
add
in
je
jecxz
add
sub
dec
xor
test
jg
jmp
mulb
adc
mov
dec
push
adcb
andb
add
das
gs
sub
les
xor
and
cmpsb
push
pusha
pop
jg
in
add
mov
mov
dec
sbb
pop
movsb
sbb
mov
cmpb
add
lret
mov
int
or
pusha
xor
jge
fcomip
pop
and
xorb
aaa
lock
xorb
dec
lahf
dec
movb
nop
je
ret
int3
insb
push
mov
lcall
ljmp
sub
lock
cmpsb
test
fwait
sub
js
inc
mov
and
jge
or
xchg
test
in
jle
sub
cmp
addr16
pop
ds
lret
inc
adc
int3
jl
add
jmp
cmp
or
mov
inc
pop
imul
sar
or
mov
mov
jl
dec
movsb
lds
int
add
xchg
cmp
inc
push
push
push
fmull
dec
dec
pop
les
std
adc
push
aam
inc
xor
xor
pop
adc
inc
and
mov
mov
push
inc
push
movsb
rclb
pushf
les
sbb
fmull
mov
mov
sbbb
aad
mov
mov
sub
push
add
and
mov
mov
add
cmpsl
cmc
pop
inc
movsb
mov
shlb
dec
add
sub
push
or
mov
mov
mov
sub
cmc
xchg
sbb
lock
push
test
dec
dec
rcl
jo
mov
pop
inc
bound
lock
cmovno
sub
adcb
fs
add
std
sbb
ror
pop
adc
dec
sub
mov
push
add
repnz
xchg
cmp
mov
rcl
lahf
pop
rolb
jl
mov
sbb
sar
push
sbb
xor
jae
cmp
idivb
mov
xchg
cmpsl
pop
jnp
mov
lock
inc
mov
sbb
sub
pop
inc
inc
pop
jns
dec
in
sbb
jb
adc
int3
push
push
movd
dec
push
jb
pop
sbb
lods
ret
out
jo
jno
add
jbe
stos
aam
les
add
fdiv
mov
inc
cmpsl
fstl
mov
add
pop
dec
add
loopne
inc
push
inc
add
insb
xor
jmp
mov
mov
dec
pop
inc
or
jmp
jns
hlt
dec
clc
icebp
jecxz
mov
and
push
xchg
xchg
pop
in
cmp
sub
fiaddl
cld
add
cmp
pushf
rcrb
sub
hlt
sahf
adc
sub
inc
pushf
push
sub
subb
mov
inc
je
mov
adc
add
pop
xor
or
dec
dec
sub
lea
call
mov
js
mov
dec
xor
add
jle
insb
jnp
movsb
add
addr16
mov
ret
shrb
js
das
sub
add
hlt
sub
cmpsb
enter
mov
mov
das
and
div
inc
cmp
dec
into
add
stc
cmpsb
or
subb
sar
dec
sbb
fildll
adc
xor
scas
mov
insl
imul
or
ret
add
jmp
pushf
cmp
lret
or
hlt
and
lods
xchg
test
call
and
mov
lret
shrb
add
lea
mov
push
mov
mov
shr
mov
scas
enter
pop
or
push
pop
jmp
lahf
sbbb
jl
add
divb
lods
daa
add
add
mov
pop
in
lds
ficompl
mov
inc
sbb
xor
adc
jmp
movb
testb
shl
dec
int3
mov
cmp
mov
test
repz
clc
inc
pop
sti
push
add
pop
orl
and
dec
stc
cmp
imul
nop
mov
or
pushf
imulb
add
in
xchg
stc
inc
push
in
inc
fsubs
dec
jl
mov
nop
adcb
push
cmp
icebp
mov
sbb
pusha
mov
test
sub
aam
jne
stos
jns
aas
sbb
pop
adc
mov
push
lods
pop
mov
cli
mov
sti
test
mov
dec
push
mov
add
lret
sub
or
fmuls
test
shll
movsb
cld
jb
dec
and
mov
pop
or
out
rorb
sbb
or
dec
mov
nop
fsubrs
add
inc
test
loopne
repnz
jmp
push
and
xor
ud1
and
cs
cmp
xchg
sub
addb
and
or
imul
or
jle
andb
dec
xchg
and
fisubl
add
pop
xchg
outsb
ja
inc
jecxz
sbb
cmp
push
lock
pop
fnsave
cs
inc
cli
jae
fsts
adc
into
insb
and
je
pop
add
mov
adc
int
xor
add
repnz
mov
or
nop
les
cmp
mov
push
enter
loopne
push
cmp
push
mov
lret
les
out
loopne
add
ss
mov
and
inc
jo
mov
cli
sub
cmp
dec
in
call
mov
int3
add
inc
insb
mov
inc
mov
mov
sbb
loop
fmull
icebp
and
inc
out
mov
push
scas
andb
pushf
mov
inc
dec
jg
es
xor
inc
xlat
adc
mov
je
push
pand
popa
roll
xchg
adc
inc
mov
cwtl
dec
mov
outsl
add
movsb
xchg
sub
cmc
inc
inc
inc
or
add
cmp
stos
jo
jns
std
out
dec
repnz
adc
mulb
jecxz
add
and
loop
call
mov
and
adc
jbe
int3
xchg
pusha
pusha
test
inc
je
push
addr16
jmp
and
and
in
mov
test
fiaddl
lods
outsl
or
add
ss
aas
or
pusha
int3
mov
enter
test
add
lods
push
dec
push
test
out
ljmp
add
daa
lock
xchg
in
pop
inc
xchg
in
xchg
jle
push
adc
inc
push
push
icebp
ja
shll
dec
sbb
inc
fiadds
icebp
and
fdivs
nop
and
jae
add
mov
jge
cmpb
clc
insb
and
sub
inc
xchg
js
inc
jns
iret
push
rolb
xchg
out
sarb
jl
adc
xor
jb,pt
fnstsw
dec
andb
inc
into
cwtl
js
popf
and
ljmp
test
adc
rcrl
ret
mov
add
into
imul
mov
nop
fmull
daa
jmp
scas
mov
test
bound
fdivl
and
lcall
add
mov
jge
in
adc
loop
pop
mov
xor
call
pop
dec
lret
fists
xchg
mov
add
push
shlb
stos
out
dec
jbe
lock
inc
pop
cmp
lock
rolb
movsl
ret
jle
jbe
and
pop
dec
push
pusha
mov
lea
adc
out
xor
mov
mov
outsb
add
push
push
add
mov
mov
rolb
push
push
jb
dec
mov
adc
mov
or
in
add
mov
cmp
mov
sbb
add
sub
enter
xor
insl
repnz
incb
ljmp
and
add
push
jo
or
comiss
sbb
lea
mov
lcall
push
nop
mov
dec
inc
movsb
mov
mov
bound
loopne
daa
mov
or
aam
lods
in
lds
mov
andl
fstpt
loopne
or
pop
add
and
or
mov
dec
jg
sbbb
cli
cmpsl
mov
mov
hlt
bound
dec
push
xlat
push
movsb
test
jo
xor
loopne
xchg
les
call
xorb
adc
mov
fsts
imul
in
push
inc
push
mov
das
movsl
add
dec
popa
pusha
ja
imul
mov
jae
dec
inc
and
test
or
adc
cmp
pop
xlat
cmpsl
orl
dec
jle
subb
lock
mov
jle
xor
loope
jl
in
mov
inc
lret
and
les
xchg
jg
and
add
add
mov
sbb
popa
push
loopne
jle
test
inc
inc
xorb
or
sub
mov
or
movsw
sub
cmp
sbb
xchg
pop
icebp
mov
adc
stos
out
add
js
aam
dec
fildl
push
and
add
pusha
inc
pop
xor
insb
sbb
movsl
adc
sub
inc
std
cwtl
jecxz
iret
push
sbbb
cmpsl
inc
jb
mov
test
add
dec
fldcw
pusha
dec
nop
xor
push
mov
xor
nop
hlt
dec
xchg
nopl
add
sbb
push
xchg
sub
pop
sbb
mov
push
sbb
fildll
add
mov
push
add
insb
pop
push
out
mov
repnz
pop
mov
popf
mov
cwtl
cld
adc
xchg
inc
mov
in
stc
and
and
into
aad
mov
loope
jne
fwait
divb
xchg
mov
cmc
fs
loop
sub
movsb
lods
cmp
loopne
dec
mov
push
loopne
or
jp
sbb
pop
pusha
mov
mov
mov
mov
add
cmp
dec
mov
daa
into
insb
inc
stc
mov
pop
add
call
mov
es
dec
mov
inc
sbb
xchg
scas
inc
in
add
gs
dec
addr16
or
mov
adc
psubsw
adc
push
cmp
sub
mov
inc
js
aam
xchg
mov
testl
in
stc
shll
shlb
and
je
or
push
fcomps
add
lods
dec
pop
cmp
movsl
xchg
sub
add
out
popf
mov
cmp
aam
xchg
mov
add
pop
xlat
insl
and
push
add
or
bound
aam
int3
pop
sbb
in
pop
push
jle
imul
xchg
jl
fsubrl
jecxz
fs
jmp
inc
xchg
xor
mov
dec
and
loope
cmp
add
push
mov
popf
int
dec
fisttpll
fdivrl
adc
mov
add
push
int3
mov
jecxz
sbb
sbb
test
mov
mov
pop
add
dec
gs
sahf
cmp
jg
adc
mov
push
mov
dec
es
jmp
xchg
rolb
jle
popf
ja
inc
mov
out
add
xchg
adc
xchg
andl
pop
dec
imul
adc
cmpsb
popa
icebp
leave
adc
jnp
je
xchg
pop
daa
lea
arpl
mov
jg
jle
clc
and
pushf
adc
jne
and
and
call
mov
xchg
mov
mov
stc
inc
loop
andl
push
pusha
stos
dec
pop
inc
sub
scas
add
mov
stc
and
leave
sbb
repnz
in
xchg
dec
mov
sub
pop
sub
int3
push
sub
stos
jmp
push
sbb
sbb
sbb
or
je
add
loopne
nop
adc
cmc
andb
movsb
sbb
jge
adc
cli
inc
pop
add
cmp
stos
test
hlt
inc
pop
pop
sub
inc
jnp
mov
add
movsl
jb
addl
add
arpl
stos
xor
fsubl
jb
pusha
mov
lret
push
mov
or
mov
pop
icebp
aam
call
cmc
mov
aas
shlb
jns
mov
pusha
sub
incb
jge
pop
and
xchg
insb
das
nop
fadds
cmp
pop
rsm
adc
orb
xchg
pop
sub
add
dec
pop
fwait
ja
sbbl
pusha
xor
and
dec
mov
flds
dec
push
and
xchg
mov
jno
test
xor
cmpsb
add
stos
push
add
jno
lcall
adc
jns
mov
stos
jge
add
imul
je
add
and
rcrb
nop
pop
loopne
or
cmp
test
stos
es
jl
xchg
cmp
rorb
mov
orb
push
cmp
add
push
inc
mov
mov
in
xor
sbb
add
cltd
scas
in
and
pop
mov
mov
imul
xchg
testb
pusha
inc
bound
cmp
mov
mov
push
int3
xchg
xchg
dec
cmp
movsb
and
sbb
lea
imulb
in
add
add
cmc
test
ds
cwtl
sahf
add
shlb
push
movsl
enter
dec
mov
call
or
xor
inc
rorb
add
adc
xor
sbb
mov
xor
push
mov
cs
fmuls
std
push
jns
imull
inc
int3
enter
xchg
jge
push
jns
std
das
push
mov
add
dec
xchg
hlt
pop
mov
mov
imul
cld
or
stos
adc
xchg
mov
std
push
enter
jmp
lcall
repnz
add
sub
cwtl
test
jl,pt
sbb
aas
jge
movsl
push
add
add
push
cmp
xor
or
jno
pop
icebp
es
mov
insb
scas
cli
and
insb
emms
add
data16
imul
je
pop
dec
mov
dec
lods
fxch
add
mov
stc
sbb
push
ds
ret
inc
loop
imul
test
dec
flds
test
and
adc
or
push
mov
inc
add
cld
cmp
or
sub
aaa
in
mov
and
sbb
lret
ljmp
loope
mov
lret
xchg
repz
pop
jmp
push
pop
xchg
inc
push
mov
sub
ret
fiadds
aas
xor
gs
xor
pop
or
nop
mov
int
pusha
jge
loope
inc
lret
mov
cld
sbb
movsl
and
fidivs
pop
ljmp
jmp
add
mov
mov
out
cmc
cmp
int3
test
mov
mov
nop
or
icebp
ds
xchg
stc
mov
bound
movsl
sbbl
cmp
push
imul
mov
jp
mov
sub
push
outsl
mov
cmp
ljmp
inc
inc
movsb
adcb
and
lcall
xor
aad
xchg
fistl
or
xorb
adc
mov
mov
or
pop
mov
or
xchg
jbe
mov
mov
outsl
pop
pop
daa
add
int
lods
xchg
jl
and
mov
mov
xchg
lea
xor
xrelease
pushf
or
cmpsl
cmpl
stc
sarb
pop
mov
push
xchg
sbb
sbb
mov
lods
loope
rcrb
add
and
orb
adc
inc
mov
mov
add
xor
test
xor
lcall
add
fstpt
fstpl
ljmp
sbb
xchg
add
into
pop
push
fstpl
cmp
push
add
cltd
xor
add
repz
in
sti
sub
int3
into
sbb
xchg
fidivs
dec
loop
push
sub
fisttps
pop
es
cli
sub
cs
fwait
js
int
loopne
loop
cwtl
aas
fidivrs
test
inc
shrl
jae
add
dec
stos
cmpsb
popw
cmp
lahf
dec
lret
popa
jns
push
lock
xor
cmp
adc
pop
imul
inc
mov
outsl
pusha
cli
xchg
jns
add
cs
pop
lods
sub
push
mov
sub
and
add
and
push
mov
loope
sbb
outsl
xchg
inc
and
add
jnp
leave
adc
xchg
jae
inc
cmpsl
pop
mov
aad
mov
ljmp
dec
jbe
inc
cwtl
inc
xor
pop
pop
test
fs
push
out
test
mov
test
mov
cmp
and
or
jns
leave
gs
cmp
je
sbb
add
mov
inc
add
jl
out
sarb
add
aas
in
rorb
lods
hlt
mov
test
mov
inc
fdivrl
and
cltd
int3
and
add
out
aam
fwait
shlb
or
xchg
inc
clc
es
inc
andl
ljmp
jle
movsl
sub
mov
add
mov
inc
in
loopne
out
add
push
stos
into
xchg
movsl
mov
adc
sub
pop
and
and
mov
add
mov
sub
sbb
sub
aas
add
repz
lret
and
or
jnp
add
fdivrs
and
add
mov
testl
add
out
jo
pusha
in
jb
les
clc
data16
cmp
dec
call
push
inc
fwait
je
add
adc
fdivr
jmp
les
mov
xchg
push
out
shl
add
dec
inc
push
out
cltd
fsts
or
in
sbb
jmp
xchg
jo
mov
dec
add
sti
pop
test
outsb
jge
mov
inc
movsb
ja,pn
ljmp
mov
xchg
mov
adc
and
lret
and
mov
dec
loop
add
jl
subl
cmc
lcall
and
add
mov
aad
sbb
sub
hlt
sbb
and
adc
icebp
mov
leave
and
add
cltd
stc
pop
xor
clc
pop
xor
add
test
aas
sub
push
mov
test
pop
pop
dec
addl
or
adc
xor
adc
mov
and
pmulhw
pop
sbb
sub
daa
addb
mov
stos
adc
pop
mov
cli
pop
pusha
adcb
pusha
aas
jl
stos
in
sbb
mov
dec
adc
sub
sahf
lret
dec
add
stc
loop
call
int
addb
pusha
xchg
sub
loopne
adc
mov
pop
lock
add
rolb
enter
cmpsl
jmp
stc
mov
push
jmp
cwtl
mov
adc
ret
add
cmc
je
pop
xor
xor
cld
adc
xchg
and
mov
mov
inc
jle
nop
mov
in
insb
cli
inc
cmpsl
add
nop
inc
int3
mov
mov
shlb
and
mov
xorb
mov
sar
sar
inc
mov
std
adc
xchg
pushf
or
cld
push
and
enter
inc
push
mov
out
and
verr
shr
jecxz
xor
add
aas
gs
jno
sub
mov
stos
and
inc
mov
jnp
shll
add
mov
bound
pop
and
sahf
sub
sub
cmp
mov
push
xchg
addr16
pusha
shl
and
inc
cmp
sub
xor
adc
mov
and
cwtl
sbb
add
xchg
roll
dec
mov
or
xor
mov
inc
inc
add
addr16
dec
test
cwtl
bound
add
and
add
pop
pop
or
fsts
cmpsb
cld
jg
mov
fcompl
add
mov
push
mov
push
xchg
and
push
add
fimull
loop
xorl
fsub
cmp
leave
add
xor
and
lret
pusha
rcl
cli
mov
rcrb
dec
loopne
and
mov
or
stc
in
adc
push
push
xor
scas
add
push
clc
mov
adc
movsl
in
stc
mov
sbb
cld
sbb
icebp
es
lea
and
xchg
and
xchg
das
jbe
lock
sub
xchg
sbb
sbb
push
sahf
loop
push
mov
jle
adc
add
lret
mov
rolb
pushf
aad
repz
mov
adc
and
pop
mov
push
push
mov
test
xor
push
and
xor
or
in
int3
call
js
lcall
ds
mov
pop
arpl
les
gs
and
sti
shrb
add
test
xor
sub
and
sbbb
push
xor
cmp
aad
rcrb
cltd
add
scas
les
add
in
sub
mov
dec
xchg
push
add
cwtl
mov
xchg
ret
mov
mov
inc
pop
popa
push
loopne
inc
mov
xchg
sbbl
mov
inc
fs
add
mov
or
hlt
fstl
rolb
sub
test
into
stos
pop
add
sbb
inc
add
incl
mov
jl
sub
dec
scas
adc
pusha
mov
add
in
lods
add
dec
cmp
lods
push
xchg
mov
add
dec
int3
inc
mov
dec
xor
jo
add
mov
mov
orl
xchg
jle
mov
mov
mov
add
lock
adc
inc
mov
or
addr16
pushf
les
das
mov
inc
add
ret
sub
mov
xor
and
cmp
adc
mov
fidivrl
xchg
add
fsts
add
sbb
xchg
jp
adc
and
add
dec
clc
pop
pop
push
shlb
inc
adc
mov
jl
pop
test
cmpl
and
cwtl
sub
sub
push
sbb
fcoms
pop
or
and
ljmp
xor
clc
jl
add
cmp
mov
add
add
xchg
loopne
ja
bound
ljmp
test
mov
shll
out
mov
aas
jmp
dec
ucomiss
xor
mov
and
popa
test
and
mov
rolb
sbb
les
jecxz
ljmp
aam
sbb
add
movsl
xor
ljmp
mov
mov
xor
bound
sbb
jbe
jecxz
add
shlb
cli
dec
mov
es
add
cmp
sub
pop
mov
add
movsl
add
dec
movsb
inc
push
and
or
pushf
in
mov
or
or
or
aam
xor
and
les
and
and
cwtl
aam
in
mov
test
jne
movb
sub
pushf
adc
out
rorb
filds
out
jmp
mov
lods
nop
test
mov
in
jl
and
mov
fldenv
cld
mov
push
cmpb
in
push
call
fdivrs
cs
lahf
adc
inc
cmpsb
je
inc
push
pop
and
xchg
xor
jecxz
push
add
clc
repnz
xor
dec
pop
call
and
sahf
mov
insb
repz
sti
mov
add
xor
add
adc
loope
outsb
sbb
push
mov
mov
out
add
mov
and
lcall
loopne
shlb
js
daa
jmp
in
xchg
mov
js
jl
pop
out
sbb
pop
movsb
fwait
add
jo
and
fstpl
add
cmp
mov
add
cmp
mov
add
xchg
sbbl
sbb
sub
pop
cmp
and
adc
sbbl
cmc
add
gs
sbb
test
js
imul
xor
dec
fdivr
cwtl
loope
push
xor
cwtl
test
mulb
add
or
push
imul
int3
aad
mov
testb
pop
shlb
push
pusha
or
add
mov
mov
sarb
idivl
mov
push
jno
and
cmpsl
push
add
addr16
arpl
add
pushl
std
imul
fs
pop
adc
ret
test
mov
add
mov
sarl
arpl
xorb
testl
dec
jmp
pushf
mov
xchg
cs
add
mov
cmp
xchg
ja
mov
test
add
push
addb
je
shlb
dec
xchg
mov
movb
sarb
add
shlb
jno
mov
popa
add
jns
lock
fsubrl
cld
stc
add
pop
pop
sbb
fdivs
cmp
xchg
imul
outsl
mov
ds
mov
aas
sub
movsb
fs
fnstcw
scas
or
mov
pop
addr16
orl
int3
sub
mov
adc
add
mov
into
movsl
mov
mov
loop
push
xlat
call
inc
mov
dec
pop
int3
sti
adcb
and
les
jmp
lahf
addr16
pop
nop
adc
xchg
inc
cmpb
jg
or
and
pop
push
ja
mov
jbe
stc
imul
and
mov
ljmp
add
imul
dec
cmp
pop
mov
rcrl
sub
or
imul
mov
and
sbb
push
insl
cs
adc
movsb
push
mov
sub
movsl
js
dec
xchg
inc
je
cmp
lods
inc
mov
cli
mov
shlb
cmp
inc
test
repnz
jl
rcrb
jl
mov
add
push
lods
dec
add
xchg
repz
sbb
int3
pop
enter
jbe
mov
push
pop
adc
add
in
dec
call
pop
inc
xchg
or
push
mov
inc
xchg
fcomps
shrl
add
dec
mov
cmpsl
sbb
xor
cmp
rclb
inc
inc
xor
jge
pop
out
rcll
mov
xor
test
jns
add
shll
sub
pop
ret
and
inc
fsts
xchg
les
cs
pop
sbb
sbb
jecxz
xchg
fcmovnu
add
mov
int
inc
ljmp
movl
js
popf
jp
add
fsubr
and
fs
loopne
and
call
mov
dec
push
clc
jbe
in
add
fdivl
je
movsb
insl
and
mov
pop
shll
sbb
jecxz
add
cmpsl
ret
daa
es
rcll
push
iret
scas
inc
add
clc
fstp
inc
cld
pop
add
das
imul
xor
add
mov
hlt
add
xlat
data16
test
push
cld
jle
pop
and
sahf
jne
fistpll
pop
dec
lret
pop
int3
adc
xor
scas
sub
pop
addl
mov
jge
push
jmp
or
fcoml
sbb
and
xchg
inc
xchg
sahf
pop
jle
imul
pop
push
ret
sti
lods
mov
and
in
xchg
mov
jbe
or
pop
mov
jl
xor
leave
mov
dec
repz
inc
psrlw
inc
or
addb
in
mov
add
sbb
cmp
mov
test
mov
out
and
xchg
shlb
or
xor
push
add
repz
add
dec
pusha
adc
mov
push
xchg
adc
cwtl
lcall
push
dec
loope
jge
pop
andb
icebp
sbb
scas
in
add
xchg
mov
cmp
cli
loope
mov
das
inc
jle
in
inc
inc
and
push
orb
jb
scas
ja
ljmp
mov
stc
or
out
clc
pop
addr16
pop
popa
adc
or
adc
mov
dec
adc
ss
sbb
ret
or
nop
adc
add
loope
push
xchg
cmovno
test
andb
inc
jne
push
bsf
loope
mov
pusha
sbb
sub
jnp
push
mov
jge
cmp
push
xchg
lcall
verr
loope
adc
add
test
mov
popa
pop
add
cmp
inc
mov
cld
addb
in
or
mov
xchg
dec
cmp
pop
sub
add
in
add
or
sbb
lock
popa
add
loope
mov
push
cmpsl
jbe
pop
adc
jns
xor
dec
movsb
or
xor
fsin
xchg
cli
bound
mov
add
cmpsl
leave
mulb
or
add
test
mov
cltd
movl
inc
mov
out
cmp
aam
sbb
rol
add
icebp
arpl
aaa
mov
mov
shl
cmpb
mov
sub
xor
inc
and
repnz
xchg
fcomp
and
push
cmp
fidivs
mov
pushf
int3
dec
je
adcb
xchg
mov
sbb
clc
sbb
in
adc
mov
les
mov
and
adc
mov
jmp
rorb
mov
lds
int
ror
or
popf
popa
and
dec
in
mov
movl
sahf
out
roll
push
or
mov
cltd
call
in
or
in
lods
inc
add
and
inc
outsb
adc
mov
cmpb
mov
int3
jecxz
inc
add
push
mov
dec
jl
icebp
dec
inc
pop
push
add
sbb
mov
notl
mov
push
xchg
imulb
mov
sbb
jecxz
mov
mov
fwait
jo
fmuls
or
imul
mov
outsb
push
fimull
xchg
jns
fcoms
mov
jmp
lock
add
shlb
ja
or
fdivrs
lods
nop
add
jl
js
ret
or
out
dec
pop
sti
jne
xorl
mov
xor
sub
jl,pn
add
lock
lea
loope
in
sti
adc
sbb
pop
into
js
or
pushf
adc
or
mov
sbbb
mov
ucomiss
imul
push
das
mov
cs
popf
jbe
call
xchg
inc
orb
pop
inc
insb
and
xchg
sub
es
pushf
inc
stc
repz
add
mov
cld
ret
hlt
jmp
pushf
adc
shlb
cmp
lcall
jbe
popf
rcll
popa
inc
push
inc
mov
mov
mov
lahf
pop
gs
xchg
data16
pop
or
lret
sub
jo
add
inc
fldt
sub
aas
pusha
and
add
push
fadds
and
jmp
jg
ja
lcall
add
add
push
inc
les
jge
add
cltd
jne
inc
add
and
mov
push
dec
or
cmp
movsl
aad
mov
or
push
pop
aam
jb
popa
and
push
repnz
testl
mov
xchg
fldt
sub
movsb
adc
xchg
mov
cmc
xchg
add
sbb
fsubrp
mov
jne
hlt
repnz
pop
arpl
and
cltd
sbb
pusha
jno
mov
inc
xor
sub
add
in
pusha
es
or
mov
jge
sub
cmp
imull
cwtl
cli
pop
je
push
repnz
add
cmpsl
mov
mov
push
je
idivl
add
add
mov
mov
vmovups
mov
push
outsb
jo
inc
or
out
inc
and
dec
test
add
sbb
jmp
enter
xlat
inc
ret
cld
int3
testl
adc
in
jae
add
and
mov
int3
insl
testl
bound
pop
cwtl
add
int3
sahf
add
aad
in
lods
inc
adc
call
jmp
or
pop
nop
sbb
test
sub
jg
pusha
and
add
fisubrl
sub
mov
xchg
clc
and
or
addl
sbb
push
add
loop
mov
cmp
outsl
xchg
mov
add
adc
mov
es
outsb
sbb
shl
fstps
add
jmp
add
nop
out
insl
adc
inc
mov
or
test
inc
es
adc
pusha
nop
cld
out
or
xor
incl
inc
mov
call
or
cwtl
jne
stc
lret
lods
add
mov
or
push
push
adcb
cld
sbb
inc
js
pop
jns
sbbb
std
icebp
add
ss
add
fwait
repnz
adc
mov
xor
sbbb
jecxz
add
xchg
lods
pop
push
push
aam
push
leave
sbb
push
data16
out
mov
rorl
insb
jae
divb
add
scas
mov
test
out
or
inc
push
rorl
and
cmp
sbbb
mov
inc
pop
add
cmp
xchg
push
inc
cld
jp
dec
mov
clc
add
imul
cmp
adc
js
aam
inc
out
enter
in
adc
or
cltd
or
or
push
mov
or
arpl
push
adc
testb
cld
ljmp
jmp
sub
les
mov
out
adc
mov
fidivrl
add
clc
mov
mov
or
je
adc
dec
add
push
lock
or
je
or
fdivl
adc
mov
add
mov
mov
and
mov
cmp
pop
out
mov
add
cmpsl
repz
adc
and
sbb
add
lods
ss
nop
hlt
pop
imul
adc
adc
inc
aad
push
shrb
xor
rcrb
jbe
cli
and
cmp
xor
push
js
in
addb
mov
inc
mov
and
mov
cltd
mov
lods
dec
or
mov
adc
jge
cs
popl
mov
bound
out
fs
mov
sbb
icebp
out
mov
hlt
nop
into
lret
inc
movsb
out
sub
push
aam
roll
jns
adc
sti
imul
dec
mov
lods
js
push
inc
inc
sbb
rorb
cwtl
in
lcall
add
pop
dec
pushf
ficompl
adc
push
pop
jecxz
xchg
cmc
mov
iret
pop
pusha
push
xor
andb
xchg
adc
test
mov
add
mov
lock
mov
add
jnp
lods
rolb
icebp
dec
sub
xchg
mov
sbb
mov
and
les
loopne
jl
test
movsb
fs
pop
pop
loopne
cwtl
shlb
imul
and
notl
or
cmc
add
int
add
testb
cmp
into
jnp
and
shlb
adc
and
pop
je
mov
xorb
cmp
xor
loope
mov
mov
push
movsl
dec
adc
rolb
dec
jg
sbb
sub
repz
add
or
in
mov
add
rorl
adc
sarl
in
enter
daa
outsl
mov
lcall
or
popf
imul
fcmovnb
or
movsl
sbb
arpl
int3
and
mov
inc
push
lret
or
and
or
push
testb
nop
popa
mov
lods
movsl
mov
stc
dec
adc
sub
jns
inc
movsb
pop
insl
mov
or
sarb
push
push
xchg
xlat
mov
pushf
jle
mov
popa
cli
loopne
loopne
cld
mov
xchg
leave
movsb
jo
bound
loope
mov
sub
sbb
adc
pop
adc
in
lahf
cmp
enter
subb
shll
pop
vmovaps
mov
adc
mov
cld
xor
mov
test
dec
mov
jle
add
lods
push
sub
jb
sbb
dec
inc
loopne
enter
and
movb
push
pop
jge
ret
mov
sbb
mov
xor
jp
add
jge
data16
jnp
sbb
mov
and
add
cmp
pushw
aad
xchg
loope
dec
fcomps
js
movsl
sub
or
push
jns
sahf
adc
pop
cmc
and
mov
add
mov
xor
lret
stos
test
mov
xor
sub
test
add
cmp
aas
mov
sub
sbb
mov
fidivs
sub
add
and
roll
jp
add
repz
xchg
jg
or
fnstsw
xorb
bound
stc
xlat
fs
add
repnz
mov
loop
inc
fsubr
add
imul
add
mov
sub
gs
call
jg
xchg
sub
inc
repz
aam
aaa
add
and
xor
fists
rclb
xor
movsl
adc
inc
jb
je
std
out
cmp
stos
add
flds
dec
in
test
movsl
addb
ja
xchg
andb
cmp
inc
movsl
cmpsl
cld
add
or
xor
pop
add
inc
and
nop
js
in
rorl
add
pushf
inc
movsb
cmpb
and
fwait
xchg
mov
mov
jge
rorl
or
jo
les
repnz
call
mov
jp
jmp
jle
xorb
jle
pop
push
cmp
lods
add
pop
jne
movsb
xchg
rcl
shl
mov
adc
cmp
andb
jecxz
loope
add
clc
sysexit
mov
lret
push
mov
xchg
insb
jns
aaa
pop
pusha
inc
xchg
push
jns
dec
cs
or
rep
and
mov
sub
jecxz
mov
test
mov
cmp
negb
xlat
fisubl
lods
add
cmp
dec
jo
sub
sub
loopne
jae
jle
or
loopnew
das
jg
xchg
and
sub
repz
xorl
adc
int
add
incl
stos
mov
icebp
add
aad
jbe
cmp
sbb
adcl
lock
fiadds
out
dec
or
ret
adcl
adc
outsb
push
repnz
out
mov
jg
mov
lcall
cmp
test
jo
mov
stc
pop
sub
je
mov
adc
ds
or
inc
sub
and
mov
jo
imul
shlb
jne
add
ret
xor
aas
inc
sbb
pop
and
adc
jo
ljmp
cmp
lcall
lods
cmp
pop
int
ffree
jbe
adc
lods
notb
jno
jge
lret
adc
addr16
pop
out
subb
popa
movl
push
rolb
cmp
call
xor
push
xor
cmp
add
aad
xchg
adc
cmp
add
jp
outsl
xor
stc
popa
cmpsb
jno
popa
fsubs
xor
popa
rcll
mov
mov
inc
xor
pusha
popa
inc
inc
divb
sbb
pop
mov
inc
movsl
or
into
icebp
xor
add
xchg
mov
push
stos
cmp
jns
xor
stc
dec
ss
leave
sti
int3
outsb
fadds
push
cli
addr16
mov
pop
xor
or
mov
insl
inc
xchg
add
mov
xor
mov
repz
mov
das
repnz
stos
push
and
pop
xor
jne
add
mov
cmp
mov
jo
pop
xchg
dec
add
aad
pusha
add
dec
aaa
jbe
subb
and
cltd
cmp
imull
mov
xor
or
cmpsb
jmp
mov
mov
imul
sub
add
sbb
and
dec
cwtl
dec
dec
or
cmp
adcb
ret
dec
testb
testl
xor
mov
dec
shll
icebp
or
xchg
add
dec
add
pop
loope
jo
imul
daa
inc
fldl
out
xchg
out
xchg
mov
pop
icebp
cmpl
xchg
out
nop
fildl
sbb
pop
sahf
sub
jns
test
jb
sarb
xchg
xor
popf
cmp
cmpsl
jno
add
sub
es
mov
fiadds
xchg
dec
xor
ret
ds
or
xor
pushf
bswap
sub
inc
imul
fldenv
movsb
lock
xchg
dec
xor
pop
xchg
add
in
aad
andl
jle
repz
jbe
dec
shlb
lods
add
xchg
mov
lock
es
dec
cwtl
xor
xchg
jp
in
push
mov
sbb
ja
dec
pop
xchg
adcl
test
out
addr16
je
popf
int3
add
add
sarb
in
jle
inc
or
push
adc
loopne
dec
lea
loop
mov
and
sub
or
mov
sbb
pop
mov
lar
enter
hlt
push
nop
bound
xchg
dec
jb
add
jae
mov
fdiv
js
lock
aad
add
jl
dec
popf
lcall
in
cwtl
pop
or
push
or
cld
xor
test
flds
into
aam
add
stos
pusha
jb
mov
mov
push
imul
push
or
ds
mov
xchg
mov
std
stos
mov
scas
call
or
js
sub
xor
xor
add
push
scas
sbb
pushf
pop
pop
add
adc
and
out
and
dec
dec
sub
clc
sbbl
adc
lea
sbb
jo
in
or
roll
add
ret
mov
inc
sbb
pop
pusha
jae
aad
popf
scas
add
jge
int3
divl
cmpsl
sahf
fsubs
sub
adc
adc
xchg
pop
or
inc
orl
mov
pop
cmp
cmpsl
xchg
mov
lds
jecxz
imul
dec
or
jno
or
fs
or
jo
dec
dec
popa
pop
test
popf
sti
outsl
mov
mov
mov
scas
in
pusha
sub
cmp
shlb
add
jae
jns
xor
popa
mov
mov
loop
inc
das
mov
sbb
in
jle
push
or
inc
xchg
push
test
sub
mov
ja
aad
cmp
roll
mov
and
mov
in
xchg
repz
mov
sub
addb
mov
sub
and
out
xchg
or
mov
add
andb
cmp
jg
add
cmp
nop
in
ja
aas
dec
popf
sbb
mov
ljmp
push
icebp
dec
pushf
lcall
sahf
fisubrl
mov
inc
xor
mov
mov
sbb
enter
sbb
scas
and
lea
mov
ja
pop
nop
scas
in
cmp
cld
xor
mov
adc
or
lock
aam
call
sbb
mov
jno
push
xor
xor
test
and
clc
and
pusha
cmovno
sub
add
mov
sub
test
mov
and
dec
adc
hlt
inc
push
aad
inc
jp
inc
add
add
shlb
sahf
cmp
pop
rorl
add
mov
inc
cwtl
leave
or
insb
sbb
jno
sub
mov
vunpckhpd
icebp
test
out
and
xchg
out
inc
js
ja
add
pop
dec
ss
in
int
movsb
addb
lret
sub
sub
and
lret
cmpsb
cld
mov
scas
push
dec
insb
push
orb
add
and
sbb
adc
pop
add
inc
add
jg
lret
and
mov
pop
add
sahf
negl
jb
push
les
andb
inc
lahf
dec
mov
adc
and
fsubrs
push
cwtl
sbb
push
data16
push
push
add
xor
xchg
insb
testb
dec
das
jne
call
mov
out
mov
pop
addb
push
cwtl
test
inc
pop
pop
inc
or
sbb
adc
mov
cwtl
sub
pop
cmpsl
fldenv
pop
add
ds
pop
or
push
mov
mov
ss
push
and
nop
mov
jl
in
inc
mov
or
add
lods
aas
pop
test
hlt
mov
sbb
push
enter
leave
add
mov
mov
add
mov
push
insl
push
lds
mov
add
lret
cltd
add
jmp
ret
add
gs
dec
rolb
cmp
pop
jns
add
ljmp
mov
mov
adc
adc
sbb
lret
mov
jno
aam
pop
adc
xchg
inc
lret
xor
sbb
dec
roll
cmc
fstpl
or
jno
jl
mov
addb
aas
movsb
ljmp
mov
into
jbe
mov
or
push
je
data16
pop
jo
add
pop
test
and
stos
push
jl
add
add
fcoms
frstor
xor
sbb
jp
pop
xchg
imul
mov
add
jl
push
push
cwtl
xchg
mov
add
in
xchg
adc
and
inc
hlt
mov
cmp
or
lods
movsb
adc
add
int
push
push
xchg
push
mov
xchg
pop
roll
adc
in
cltd
cmp
out
sbb
test
push
ret
and
pop
testb
ja
sti
in
rorl
adc
push
inc
pop
mov
or
add
lahf
mov
and
cmp
sub
and
iret
pop
cwtl
lods
fidivl
push
cmp
xchg
pop
adc
ret
lock
mov
movsb
sub
dec
testl
lret
nop
mulb
pop
addr16
xor
push
adc
mov
iret
push
push
and
mov
jne
popa
or
clc
sbb
test
clc
sub
pop
adc
out
xchg
lock
shl
les
shlb
push
das
adc
ret
adc
stc
in
enter
and
cltd
cs
out
cmp
das
sbb
ret
mov
rclb
push
xor
fmull
dec
add
or
add
pushf
bound
and
xor
add
push
push
stos
xor
loopne
lret
ret
push
cmp
pop
movsb
pushf
add
push
sbb
and
int
iret
add
pop
mov
and
adc
or
or
mov
jno
or
and
fstps
cmp
mov
adc
add
cmp
testb
fdivs
xchg
xchg
lods
subb
fmul
dec
insb
adc
pop
dec
test
xorl
mov
jg
cmp
popa
adc
test
cs
xchg
int3
add
lcall
mov
pop
je
test
mov
mov
jns
repnz
add
add
rorb
mull
add
sub
les
orl
hlt
int
xchg
lods
dec
popa
push
icebp
push
push
jnp
dec
inc
adc
in
xchg
or
clc
jbe
add
add
and
loopne
mov
mov
call
inc
push
add
imul
or
cmp
xchg
or
mov
in
sbb
xchg
imulb
imul
jl
movsb
cmp
mov
call
xchg
and
dec
xor
mulb
add
jno
or
mov
insb
testb
xor
pushf
pop
subb
xor
aad
cmpsb
sbb
leave
dec
and
adc
adc
add
adc
fcomps
mov
add
mov
xor
and
leave
add
scas
ffreep
jbe
and
push
das
jbe
daa
ret
movsl
add
in
jb
lret
fcoms
push
cs
inc
jne
cmp
xchg
mov
lods
pop
sbb
pop
loopne
pop
stos
xor
int3
stc
js
pop
sbb
jmp
xor
jns
adc
test
test
adc
mov
or
add
jecxz
pop
mov
add
popf
adc
les
movsl
adc
add
in
stos
dec
dec
lea
scas
and
mov
mov
mov
loopne
sbb
push
icebp
lahf
adc
pushf
dec
adc
or
inc
sbb
and
xor
mul
int3
dec
int
aaa
push
xchg
scas
nop
iret
dec
movb
cltd
or
sahf
ds
xlat
add
jg
sub
adc
call
pop
int3
mov
and
mov
dec
lods
jge
aad
inc
aam
mov
out
and
es
in
sbb
dec
rorb
out
pop
and
loope
orl
cmp
mov
push
add
mulb
jl
pusha
sbb
pop
xchg
jl
cmp
shl
xlat
pop
push
lea
xor
cmp
cmpsb
adc
jno
inc
or
xor
add
mov
iret
in
mov
nop
jbe
add
addr16
add
lcall
andb
lods
adc
mov
sub
adc
or
inc
or
jno
or
xchg
adc
subb
ret
pusha
xchg
and
repz
outsl
popa
cwtl
pop
and
or
mov
or
adc
xor
mov
adcl
test
lods
int3
dec
fldl
mov
and
rolb
lcall
xchg
and
xor
mov
imul
test
sub
adc
and
insb
fsubrl
adc
and
push
adc
or
and
ljmp
sub
sbb
loope
pop
mov
add
xchg
jp
and
testb
push
push
dec
add
arpl
mov
pushf
enter
sub
sub
sbb
cmp
dec
add
hlt
mov
add
or
popa
adc
mov
mov
mov
jae
adc
lods
pusha
inc
mov
cmc
mov
sahf
add
jmp
xor
add
test
pushf
jne
push
aaa
push
cli
xchg
and
arpl
add
inc
testl
cmpsb
push
adc
iret
pop
dec
test
and
cmp
ret
scas
fnstsw
shrl
add
mov
and
adc
and
rol
orb
push
mov
mov
lret
test
cmp
das
dec
xchg
iret
xor
sbb
adc
mov
cmp
cld
mov
mov
lds
lods
mov
fdivrl
xor
inc
push
sub
test
cmp
pop
dec
movsl
jl
and
mov
adc
sub
mov
aaa
mov
dec
sbb
sub
enter
mov
cmp
jbe
shrl
pop
popa
sbb
fstl
cld
cwtl
dec
and
add
dec
aas
loope
cmp
setb
or
xor
add
add
jb
cmp
or
scas
add
mov
add
inc
nop
js
cld
jl
add
or
jl
jbe
cli
ret
sbb
mov
add
add
js
int
aad
push
xor
mov
mov
add
dec
push
push
dec
pop
sbb
push
push
int3
xchg
dec
sbb
sbbb
dec
outsl
sub
add
jne
adc
fadds
push
ds
shrl
dec
hlt
mov
mov
ficomps
adc
add
mov
fdecstp
mov
dec
pop
inc
inc
push
add
sarb
adc
test
push
lock
cltd
pop
adc
mov
jo
flds
idiv
add
mov
sub
cmp
mov
xchg
push
xchg
lret
rorb
cmp
xchg
ss
fs
into
adc
push
pop
call
add
pushf
sti
clc
add
jp
push
jle
jno
filds
dec
push
lock
push
ret
mov
lahf
test
sub
mov
jl
ds
arpl
jle
add
fldcw
inc
xor
movsb
push
sbb
pop
xor
sub
out
mov
mov
push
test
mov
jno
pusha
push
sub
jne
fmuls
int
push
pop
cmpb
loopne
add
xor
ret
xor
inc
sub
sub
jge
push
xchg
push
rcr
push
xor
jne
mov
xor
jno
je
subl
sbb
push
leave
xor
jnp
shrb
pop
jle
sarb
aas
fildl
in
daa
sbb
je
mov
xor
mov
inc
rorl
or
sbb
fistpll
pushf
push
add
arpl
pop
lock
xor
cltd
or
and
add
adc
add
sub
pusha
jns
test
call
xchg
sti
loopne
lods
cmp
out
js
shrb
push
sbb
and
add
mov
sbb
add
mov
test
push
mov
mov
inc
ret
cmc
lea
push
das
stos
inc
lahf
aas
mov
add
into
sbb
lret
popa
mov
push
mov
add
pop
out
jnp
outsb
xor
add
jle
jp
jns
sbbb
xchg
mov
insl
scas
enter
jge
or
lret
subb
cwtl
movsl
test
popa
adc
mov
sarl
cmp
push
and
dec
je
fidivrs
in
xor
jb
push
outsb
sub
mov
pushf
or
fistps
inc
or
pop
mov
jge
fwait
pop
cli
add
es
mov
ret
out
in
push
lods
or
inc
movsb
cli
mov
rclb
xor
mov
sbb
mov
pop
jge
sbb
test
clc
inc
insb
decl
push
jb
sbbl
out
adc
mov
push
mov
hlt
mov
mov
mov
push
orb
add
mov
pusha
test
mov
adc
lahf
jl
lea
mov
lahf
cmp
outsb
jle
mov
dec
popa
xchg
jp
pop
lret
adc
cmp
add
xorb
out
sub
jns
mov
mov
dec
and
mov
inc
cmp
lret
cld
jne
sbb
popa
push
cmp
mov
int
out
mov
pop
outsb
cmp
adc
and
add
addb
jmp
sbb
pop
dec
sub
push
in
cmpb
or
fcomps
or
jbe
add
add
pop
cltd
ret
test
add
inc
mov
or
cld
mov
imul
jmp
jno
xchg
sbb
cmpsb
xchg
cmp
jns
push
mov
mov
cmpsl
mov
cmp
pop
pushf
mov
add
xor
cmp
std
aaa
sbb
sub
add
and
jmp
add
xor
loopne
fwait
cltd
push
mov
push
nop
add
pusha
outsl
push
push
or
lret
jo
mov
roll
enter
pop
stos
lret
xlat
xor
cmp
mov
mov
sbb
inc
dec
and
popa
pusha
in
iret
pop
add
or
push
push
xor
or
mov
sub
and
add
push
and
mov
sub
daa
aaa
sti
cmpb
pop
add
dec
je
addr16
sbb
mov
push
jge
add
mov
cmp
loop
xor
or
lahf
adc
or
add
cmpsl
inc
dec
pop
int3
dec
ja
dec
sub
or
or
push
mov
call
sub
add
test
pop
std
sbb
sub
push
pusha
inc
jbe
push
inc
nop
dec
xor
mov
mov
jp
addl
shlb
push
in
add
popa
xchg
ret
add
in
inc
lret
jbe
sbb
adc
enter
fdivs
mov
mov
push
aad
adc
decl
xor
dec
jl
xchg
stos
arpl
popa
add
sub
sub
cwtl
add
loopne
ljmp
jle
sbb
fdivr
dec
mov
idivb
orl
mov
mov
pop
lds
and
loopne
and
jg
inc
add
mov
mov
test
mov
arpl
sbb
or
add
xchg
jb
jmp
add
ja
xor
add
cltd
inc
add
adc
mov
or
pop
inc
rclb
dec
adc
xor
or
daa
add
fdiv
jp
aaa
inc
sbb
and
xor
jns
add
shrl
add
out
je
jnp
or
sti
jg
cmp
repnz
or
lock
fiadds
pop
inc
scas
cmp
push
mov
sbb
out
mov
push
push
sti
pop
dec
and
mov
adc
rolb
mov
mov
call
push
enter
add
or
sub
and
pop
or
mov
or
adc
daa
lret
in
or
adc
movsb
or
adc
inc
lret
add
and
sbb
fwait
daa
or
and
sub
ret
xchg
push
sub
je
add
jge
pop
sbb
adc
test
add
jae
xor
xor
test
or
dec
mov
out
sbb
stos
fmull
and
bound
test
addr16
shrl
mov
jp
cmp
mov
cwtl
and
inc
push
cli
test
loope
and
jge
mov
push
js
outsb
cmp
into
jns
dec
add
or
daa
es
and
test
jge
sarb
flds
scas
rcrb
mov
add
push
sub
mov
fcoml
scas
add
sub
cmpb
add
xor
arpl
add
outsl
dec
jne
add
cli
sbb
dec
js
pusha
orb
ret
bound
mov
cli
es
push
jb
jge
jo
cwtl
aam
inc
jbe
sub
clc
adc
and
data16
js
scas
mov
movb
adc
mov
push
mov
lcall
xlat
sub
dec
imul
jle
xchg
mov
mov
les
bound
shlb
jle
xchg
push
mov
or
mov
incl
sbb
enter
dec
mov
push
dec
add
adc
adc
xchg
or
or
ja
and
xchg
insb
cld
mov
jmp
add
imul
pop
pop
mov
adc
shl
dec
rolb
add
pop
into
mov
pop
leave
or
inc
pop
mov
add
add
xor
add
dec
dec
and
xor
lea
add
iret
adc
mov
adc
push
and
cmpsl
stos
sbb
nop
dec
add
xor
lret
xchg
fdivp
fsubr
cmpsb
or
cmp
sbb
test
std
pusha
iret
inc
fcomps
les
pop
arpl
imul
imul
pop
test
push
nop
mov
push
lret
or
shll
or
push
mov
clc
inc
pop
and
add
ja
push
out
inc
dec
add
mov
cmp
jo
mov
mov
dec
pop
push
push
and
sub
fisubrl
or
cmp
sub
lret
addb
cmc
inc
dec
leave
dec
ret
jns
int
xchg
fidivrs
dec
cbtw
jno
push
outsl
sbb
out
xor
mov
lock
push
jge
add
paddb
jns
sbb
push
mov
mov
addb
iret
clc
add
imul
pushl
mov
in
jmp
int3
or
mov
enter
bound
mov
jge
cli
aaa
mov
mov
arpl
cmpb
les
push
add
ljmp
rorw
pusha
adc
jns
sub
mov
xor
adcb
and
cmp
icebp
inc
cld
movsb
sahf
xor
push
shrb
add
xchg
add
testl
mov
sbb
pop
cld
or
sbb
cmpsl
add
btr
push
popa
xchg
cmp
xor
cli
xchg
pop
shlb
movsb
xchg
stc
jne
daa
xchg
jl
add
push
mov
push
sub
test
dec
arpl
mov
lcall
andb
sbb
adc
mov
or
mov
dec
and
jns
sbb
mov
and
cmp
rol
adc
jl
mov
mov
add
push
and
cmpsl
push
imul
pop
or
xchg
fdivrs
dec
adc
pusha
sbb
call
xchg
in
pop
imul
out
data16
add
fcoml
cld
and
std
pop
scas
jmp
lods
outsb
inc
cltd
sbbb
jecxz
movsb
adc
lcall
imul
ja
mov
mov
xchg
inc
adc
lret
cmp
hlt
add
fs
xacquire
adc
dec
inc
call
xchg
mov
cs
xor
dec
out
roll
xchg
push
fisubrl
clc
pop
roll
xor
insl
mov
cwtl
lds
bound
add
daa
sub
and
adc
dec
test
movsb
rcrb
pop
cmpsb
mov
add
ja
rorl
stos
adc
add
add
mov
hlt
xorb
pop
cwtl
mov
test
popf
mov
in
pop
stc
add
inc
lds
cmp
out
xor
aas
mov
xchg
cld
call
mov
add
mov
push
mov
add
push
adc
cmp
jnp
sbb
outsl
add
and
ret
les
sub
jbe
idiv
adc
leave
mov
sbb
adc
add
jp
out
arpl
mov
movsb
and
push
sbb
out
fadds
pop
test
orb
add
xor
jo
jno
add
call
addb
sub
cmc
add
push
xchg
lods
stos
es
lahf
add
nop
in
divb
pop
outsl
inc
xchg
pusha
push
xchg
push
xor
add
dec
xor
xchg
mov
hlt
adc
ds
cmc
add
mov
add
std
movsl
lret
and
sbb
nop
out
imul
shlb
dec
jns
scas
adc
out
lods
shlb
sub
je
add
jns
xor
in
xor
lods
and
out
es
jo
push
orb
add
pop
icebp
mov
stos
xor
mov
int
jo
cwtl
mov
dec
xor
mov
dec
adc
pusha
mov
or
nop
cmp
push
adc
jns
xorb
aas
jl
xchg
scas
hlt
add
and
cld
incl
sbbl
mov
add
add
push
in
pop
and
in
mov
shrb
shlb
cmc
pop
jmp
icebp
cmp
sbb
mov
jle
mov
mov
pop
test
sbb
add
insb
add
sub
xchg
add
dec
js
sti
push
pop
jl
add
xor
in
sub
push
push
adc
arpl
and
jo
sbb
add
outsl
xchg
jmp
inc
cmp
cmpb
call
shlb
add
inc
dec
nopl
xchg
push
nop
dec
insb
mov
ret
pop
and
add
jle
push
xor
loope
loopne
lods
mov
jg
fdivs
mov
pop
sbb
or
dec
mov
push
add
iret
cmp
sub
push
fdivs
ja
cmp
xor
cmp
or
add
push
mov
lcall
pop
jne,pn
incl
jecxz
or
push
push
push
dec
jmp
mov
clc
dec
in
add
addb
jg
lods
pop
xor
cmp
shll
push
bswap
and
adc
mov
sub
iret
iret
test
push
es
mov
xchg
pop
add
push
test
pop
or
sarb
ljmp
or
jle
cmp
jg
inc
add
inc
adc
scas
add
int
idivb
outsb
and
or
lret
mov
sub
push
insb
sub
xor
orl
nop
add
jge
xor
cmp
add
and
xlat
repnz
pop
fdivrl
rcrb
sbb
pop
mov
test
inc
push
int
mov
adc
ficomps
lock
out
pop
ret
pop
pop
add
insl
js
dec
clc
push
jae
test
ljmp
outsb
sbb
push
add
dec
sub
push
icebp
cmp
out
movsb
add
add
push
pop
lock
scas
push
xor
jmp
xor
js
pop
int3
jg
add
into
out
loope
mov
xor
push
adc
int3
pusha
mov
jne
leave
cmpsl
mov
jl
popf
and
std
jne
sbb
xor
jp
pushf
add
das
inc
adc
fdivs
lds
inc
js
and
add
cmpsl
fcomp
out
sbb
xchg
orb
adc
sbb
pop
pop
inc
idiv
int3
loopne
icebp
push
inc
ds
andl
add
adc
sub
lods
push
add
fdivs
lret
sbb
cmp
pushf
hlt
inc
ss
ja
add
rcr
imul
dec
add
leave
jmp
add
push
dec
pop
cmp
stos
ds
push
sbb
cmp
nop
pop
pop
out
adc
mov
std
mov
or
ljmp
mov
test
sahf
cs
pop
in
add
push
xchg
add
or
dec
lods
push
sbb
lock
into
test
jecxz
pop
sub
rcrb
cmp
pop
and
les
fistl
add
lret
loop
cmp
pop
or
out
pop
fadds
bound
mov
lds
cmp
sbb
dec
addr16
inc
je
add
incl
xchg
sub
push
and
xor
or
jmp
sahf
sarl
inc
add
enter
out
fiaddl
out
lahf
push
or
sub
lock
sbb
mov
xor
rorl
push
jo
add
shr
add
add
push
jbe
stos
idivl
xchg
xchg
addb
bound
lcall
sub
xor
jg
add
movsb
jae
rorb
push
add
aas
int3
push
xchg
mov
mov
mov
push
or
clc
xlat
inc
or
fwait
call
push
ficompl
jmp
ss
mov
adc
and
mov
sahf
mov
lcall
mov
jl
mov
inc
jg
cltd
push
xchg
cmpsb
fwait
and
push
add
xchg
test
insl
lret
cs
je
popa
or
mov
add
lcall
add
xchg
mov
in
and
aad
mov
fildll
icebp
sahf
sar
outsl
lcall
mov
in
loop
inc
xor
lds
imul
mov
jnp
sahf
dec
add
stos
add
push
movsl
mov
cwtl
xor
adc
sbb
mov
arpl
mov
xchg
adc
les
jns
or
je
dec
icebp
adc
add
adc
jb
xor
jge,pn
subb
xchg
add
xchg
xor
push
mov
add
inc
pop
fildl
adc
in
add
popa
mov
scas
ds
pop
add
sub
sbbl
xchg
xchg
idiv
cmp
stos
and
bswap
aam
xchg
add
sbb
xor
fildl
scas
fcomps
dec
fstps
jge
movsb
xor
maskmovq
and
div
push
push
mov
dec
shlb
fcoms
gs
lods
add
mov
mov
roll
mov
or
stos
je
nop
dec
add
mov
lret
sbb
stc
adc
into
add
pop
in
scas
xor
iret
icebp
dec
add
shlb
add
gs
in
js
cwtl
cwtl
mov
jl
stc
jbe
and
dec
sbb
daa
mov
inc
bound
imul
add
push
pop
sbb
xchg
fwait
dec
loop,pt
sub
pusha
xchg
adc
call
sbb
cmp
pushf
stc
add
jp
insl
pop
int
mull
bound
adc
int3
insb
adcl
frndint
add
stc
cmp
add
dec
cmp
hlt
jb
pop
push
fldcw
ret
daa
mov
test
add
aad
jl
lret
pop
call
mov
ja
fsubrl
rcrb
js
fiaddl
jae
or
add
xchg
pop
dec
add
ja
out
xchg
js
add
jno
mov
and
push
leave
cmp
or
jb
sbb
inc
or
inc
xchg
fisubrl
add
loope
and
cmp
add
mov
aaa
mov
push
lret
add
mov
int3
xor
add
nop
mov
cwtl
mov
pushf
sbb
pop
and
add
arpl
daa
sbb
jge
push
stos
inc
pusha
and
cmc
clc
dec
add
int3
subb
jbe
cli
addr16
cmpsb
add
sbbl
xor
push
mov
xchg
nop
mov
cli
fwait
mov
test
mov
fldt
or
int
xor
lock
loopne
pusha
ss
jbe
jnp
nop
mov
mov
insb
and
nop
cmp
sbb
data16
cmp
lea
and
mov
cmp
es
scas
add
dec
sub
add
add
fwait
inc
in
mov
xchg
and
adc
dec
add
xor
leave
iret
test
adc
cmp
cmp
aad
call
jae
sbb
ss
jno
xchg
sbb
or
mov
ret
shll
push
dec
inc
inc
cmc
or
in
and
inc
sbb
insb
sub
push
adc
daa
dec
adc
adc
or
mov
add
lock
and
cmc
jbe
adc
inc
add
shll
push
push
fldl
js
lret
jmp
cmp
jno
jl
shll
dec
adc
xor
add
adc
in
pop
out
sbb
sbb
inc
push
mov
test
mov
push
xchg
ret
adc
and
hlt
xor
sub
jl
mov
adc
adc
add
rcr
test
push
or
xchg
add
xchg
cmp
sbb
arpl
call
rcll
ret
clc
add
lcall
add
jl
cmp
mov
leave
fists
insl
into
movsl
sub
jge
add
shlb
pusha
inc
lahf
js
call
aaa
outsl
std
sub
pushf
stos
frstor
xchg
inc
imul
ret
je
add
fs
pop
outsl
je
add
add
addr16
sub
test
fisubrl
xchg
cwtl
dec
and
mov
test
lock
or
inc
out
xchg
addr16
lret
repz
add
push
xchg
add
push
pop
pop
insl
fnstsw
lret
mov
ds
sbb
lds
push
jg
rcr
mov
push
sub
test
and
jp
pop
ret
incb
xor
push
jecxz
pop
xchg
call
jbe
inc
mov
ja
cmc
lahf
push
dec
inc
mov
incb
in
jo
push
pop
pop
or
scas
push
xlat
dec
mov
add
jno
in
mov
fbld
dec
add
imul
push
mov
jmp
pop
pop
shlb
cmp
jl
loopne
scas
inc
cmp
add
ficoml
sbb
jle
add
mov
add
addr16
jnp
je
or
bt
xorb
pop
cmp
or
inc
ss
mov
add
cli
push
aam
xchg
pushf
fisubrs
bound
stos
pop
mov
jb
mov
call
loopne
ljmp
xor
out
scas
ficoms
mov
jp
mov
adc
xor
fmull
add
decl
loop
pop
aam
lahf
add
inc
adc
push
xor
daa
sbb
cmp
mov
xchg
cwtl
pop
and
pusha
xor
fwait
mov
sti
add
ss
lods
je
add
out
dec
cltd
jl
add
test
pushf
add
mov
fsubl
gs
rclb
pop
pop
pop
dec
int
push
js
mov
xchg
push
mov
cmp
cmp
add
clc
hlt
push
or
sahf
jmp
fcmovnbe
mov
ffreep
movl
add
xor
movsb
xchg
lcall
mov
add
loope
dec
sub
repz
or
mov
add
dec
and
add
xchg
adc
add
and
push
add
icebp
outsl
bnd
dec
jnp
popl
scas
ret
mov
sub
add
imul
adcb
mov
pop
mov
pop
ret
inc
xchg
mov
test
cmp
mov
mov
hlt
in
add
daa
adc
outsb
aam
push
add
div
out
lret
add
mov
mov
cmp
enter
inc
add
jp
add
out
xchg
add
xchg
in
stos
inc
jb
add
stc
jns
movsl
mov
add
adc
sub
andb
gs
fwait
mov
dec
push
cwtl
xchg
insb
out
xor
pop
sbb
stos
lock
out
out
add
negb
cltd
add
sub
or
xchg
or
sbb
popa
and
sbb
add
dec
sub
add
mov
ja
add
pop
in
cltd
clc
push
add
ficoms
inc
test
jne
add
in
mov
add
adc
fdivrp
rclb
mov
mov
mov
incl
mov
rorl
mov
stos
jge
call
push
pop
add
inc
xchg
iret
add
xlat
mov
add
and
ja
jbe
jge
cld
clc
add
dec
addr16
pusha
out
or
xchg
mov
cwtl
in
lods
cmp
stc
loop
test
testb
cmp
mov
sbb
faddl
aad
rol
mov
and
in
adc
fidivrs
push
pop
or
cmpsb
push
jp
mov
cmp
add
aas
mov
in
add
lcall
add
rcrb
out
add
les
je
in
pop
cs
xor
or
aad
pop
push
psubsw
push
fisttpll
rcrb
adc
mov
sbb
jb
mov
sti
add
mov
adcb
shl
jne
mov
add
ja
mov
add
mov
push
or
xchg
je
add
mov
adc
lods
jnp
loop
or
sub
jmp
test
push
mov
dec
int3
inc
pop
add
leave
jb
add
pusha
push
filds
add
mov
inc
popl
loopne
ret
fsubs
pop
jle
icebp
or
pop
mov
testb
mov
mov
pop
scas
mov
sub
xchg
mov
inc
add
mov
pop
outsb
popa
inc
inc
addb
divl
aad
mov
mov
cmc
add
loop
lock
and
imul
push
jp
bswap
dec
push
sub
or
mov
cmpsb
mov
clc
xor
mov
add
push
negl
pop
push
push
push
hlt
mov
hlt
sub
jmp
loopne
mov
xor
pop
fiaddl
pop
test
stos
outsl
fs
mov
add
xor
ret
add
mov
lock
inc
sub
xor
test
or
insl
mov
add
xchg
inc
push
xor
lds
cmp
pop
mov
pop
sub
orb
sub
pusha
xorb
loope
add
mov
xor
jae
add
into
mov
in
inc
and
hlt
add
movsl
ja
cmp
loopne
in
add
addl
fsubr
push
cmc
ret
fs
ss
clc
mov
adc
pop
sub
push
arpl
adc
mov
cmp
adc
add
lods
shl
push
test
in
adc
add
jle
dec
iret
pushf
add
cmp
sbb
fs
add
lods
test
fsubrs
add
cmp
movsl
mov
dec
mov
sarl
cwtl
pop
mov
int
jo
fidivrs
add
add
sar
inc
add
jb
cmp
push
stos
dec
shlb
lcall
mov
inc
outsb
mov
adc
insl
imul
subb
add
jns
lds
ret
es
sbb
push
push
add
dec
adcb
dec
mov
mov
je
and
std
dec
pop
pop
rorl
sbb
dec
call
mov
add
dec
ss
movsl
xchg
jo
outsb
push
out
xor
xchg
adc
int3
add
sbb
cmc
push
pop
repnz
dec
lds
faddl
cmp
push
std
sti
mov
daa
and
jg,pt
test
popl
sahf
pop
push
mov
pop
pusha
pop
call
stc
xchg
pop
adcb
lods
sti
in
pop
mov
inc
push
addb
add
shlb
adc
cmp
out
push
mov
insb
rolb
mov
and
cmpb
out
cwtl
sbb
and
jnp
xchg
add
andb
int3
fbstp
sub
sarl
xchg
call
ror
add
aad
loopne
pushf
add
mov
je
cmp
push
jmp
lcall
pop
jb
add
sbb
arpl
lret
aad
cmp
movsb
sub
lahf
leave
pop
pop
jecxz
pusha
orb
outsb
add
repz
mov
fs
cmpsl
mov
stos
out
mov
add
sbb
adc
sbbl
cmp
inc
pushf
push
xchg
xor
mov
js
fldl
mov
pop
cmpb
repnz
mov
aam
sbb
mov
xchg
jp
outsb
in
sub
sub
cwtl
data16
mov
les
ja
mov
imul
jl
cwtl
add
js
sbb
divb
pop
daa
xor
sub
fdivrs
add
dec
dec
add
jmp
push
or
shl
lds
cmp
push
ret
fisubrl
in
jg
sbb
shll
test
sub
loopne
sahf
add
inc
ret
sbb
ret
pop
arpl
int
add
les
iret
pop
xchg
pop
pop
jecxz
pusha
cmp
test
movl
repnz
loopne
and
into
cld
adc
test
pop
jbe
jg
cli
and
out
inc
cmp
jo
adc
or
xchg
sub
xor
shll
aas
sahf
pop
and
pop
hlt
inc
or
jle
scas
cmc
repz
sub
push
idivl
xchg
add
data16
sub
cmp
push
mov
jg
faddl
mov
push
mov
in
mov
xchg
adc
pop
dec
pop
add
pop
dec
nop
xchg
loopne
lcall
imul
pop
mov
outsl
add
adc
arpl
into
jno
mov
inc
sbb
jb
xor
popf
add
mov
pushf
popf
add
les
adc
fists
pop
push
pop
aam
and
mov
outsb
les
mov
leave
and
mov
jge
add
xchg
jae
cmp
shll
rorb
xchg
in
aam
es
add
pop
lods
add
jp
xor
mov
gs
mov
push
repz
ljmp
daa
pusha
sub
sbb
xchg
cwtl
andb
add
pop
pop
mov
cmc
shrl
inc
movsb
mov
decl
or
xor
mov
mov
mov
insb
lods
and
add
sub
inc
mov
sub
cltd
fdivl
pop
cmpsb
cmp
sub
scas
push
hlt
adc
pop
lods
lods
jle
push
mov
lret
or
out
stos
test
add
mov
inc
add
xchg
add
adcb
sub
mov
mov
in
je
or
xor
pop
add
ds
jl
push
aas
or
loopne
out
ret
std
imul
xchg
push
add
push
shl
mov
push
fbstp
rcrb
out
add
lret
add
pop
pop
enter
add
mov
sub
arpl
dec
push
and
adc
icebp
adc
sub
nop
mov
nop
lds
sahf
add
in
pop
mov
pop
or
mov
push
out
xchg
push
add
lret
mov
or
test
add
sub
fstpt
mov
sbb
push
push
in
notb
jo
add
sbb
add
or
cmc
sbb
add
dec
mov
push
aas
lea
adc
inc
dec
pop
mov
adc
stos
jle
cmp
dec
aad
sub
lods
sbb
add
icebp
in
push
cmp
sbb
add
dec
pop
and
jge
and
dec
or
add
and
fstl
and
inc
mov
xchg
mov
cmpsb
jb
shrb
add
and
daa
int
inc
les
or
addb
adc
pop
mov
mov
int3
or
xor
add
jge
out
fwait
aas
dec
test
and
add
mov
push
std
jo
out
push
push
faddl
bound
pusha
jnp
and
jge
add
lea
add
xorl
mov
mov
sahf
cmp
dec
add
sbb
shl
jb
or
stc
mov
push
jbe
dec
adc
jb
cwtl
or
and
add
sahf
pusha
inc
push
gs
js
bound
pop
or
arpl
cmp
pop
jno
jae
stos
mov
jne,pt
out
mov
into
cmp
add
testb
add
repnz
loop
or
flds
pop
push
movsb
pop
lock
push
add
repnz
scas
mov
insb
add
lret
aas
cmc
hlt
sbb
into
movsl
andl
mov
jbe
inc
add
adc
test
fimull
sbb
add
add
add
inc
je
mov
aam
xchg
mov
clc
out
or
lcall
mov
lods
add
decb
add
loope
dec
add
jecxz
sub
call
pusha
add
inc
loope,pn
insb
cmpsb
add
inc
and
add
jecxz
cwtl
popf
xlat
cmp
or
cmp
add
ret
mov
pop
cmpsb
leave
push
mov
aas
cld
fcmovb
and
add
mov
xchg
mov
pop
cwtl
insb
aaa
lock
ret
jb
mov
mov
pusha
sbb
aad
xor
movsl
add
jmp
es
arpl
mov
imul
dec
je
lret
add
movsb
arpl
xchg
jae
sbb
scas
mov
cld
andb
lcall
add
popa
subb
xor
out
push
lret
sbb
cmp
cmp
fs
pop
sub
push
add
movsl
call
fildl
aaa
push
cmpsl
subb
pop
mov
or
sti
sbb
push
jle
lock
ljmp
cmp
add
sub
insb
arpl
or
add
sub
or
and
int3
add
mov
stos
and
pusha
xor
xorb
in
add
sbb
push
dec
popf
cmp
stc
lds
add
pop
xchg
loopne
or
push
mov
mov
add
shll
xorl
push
inc
xor
out
lret
mov
test
add
xchg
or
and
and
das
dec
sub
insl
imul
cmp
xchg
fwait
mov
in
adc
bound
push
loop
outsl
jg
jle
rorb
aaa
jae
movsb
in
xlat
loopne
adc
add
xchg
mov
aaa
xor
or
or
mov
test
push
sub
push
mov
xchg
jmp
hlt
flds
fstpl
popa
jae
data16
lcall
add
rorb
cs
adc
enter
and
data16
add
std
movsl
sub
lahf
cmp
out
sub
inc
pop
jae
lea
shlb
sbb
jns
pusha
push
and
outsb
pop
jne
push
out
pop
iret
mov
in
stc
pop
pop
leave
aas
sbb
and
pcmpgtb
pusha
dec
and
cmp
pop
movl
lcall
std
fildl
aad
or
add
xor
dec
push
int
movsb
and
cli
jo
mov
lcall
sub
shlb
scas
in
add
push
mov
dec
sub
pushl
out
adc
sub
mov
addl
fwait
hlt
jo
outsl
shll
movsl
add
roll
lea
movsb
mov
cmp
in
arpl
fstps
loopne
mov
insb
add
nop
es
pusha
cmp
xchg
ja
add
sbb
fstp
inc
dec
mov
insl
push
pop
jp
xor
xor
add
sub
pop
push
jbe
clc
fsts
cmpsl
pop
insl
pop
inc
sarb
lar
push
insb
inc
lods
mov
lock
inc
mov
pusha
dec
rcr
jnp
add
inc
jp
mov
xor
fmuls
fs
sub
cld
pop
cmc
mov
rcrl
rolb
mov
gs
out
sahf
jnp
mov
cmp
out
aas
pop
std
add
loop
insb
stos
shr
or
mov
pcmpgtw
xchg
xor
shlb
xor
jnp
jge
je
push
outsl
bound
loop
out
or
cmp
pop
clc
pop
sub
mov
cmp
cmpsb
add
sbb
incb
sub
push
mov
icebp
stc
loopne
sti
add
xor
adc
xor
push
lock
xchg
or
movsl
clc
sub
std
mov
ret
je
inc
mov
or
fnstcw
in
cmpsl
fwait
lds
mov
pop
loop
sub
stos
add
rcrl
jo
mov
inc
adc
add
xchg
pop
add
pop
das
jecxz
push
fldl
nop
cmp
rolb
bound
or
mov
es
clc
and
or
push
or
push
popl
jl
cmpl
je
dec
mov
test
or
movsl
dec
in
xchg
add
mov
dec
mov
jge
add
cltd
stos
ret
idivl
cmp
stos
xor
rcrb
push
mov
es
ljmp
pop
inc
cmovae
int
ja
and
add
inc
adc
sub
xchg
ret
push
cli
imul
inc
mov
jne
mov
insl
ret
leave
movsl
jo
add
dec
mov
xchg
mov
add
gs
jg
imul
clc
add
outsl
and
dec
call
fistl
fistpll
inc
pop
sub
mov
loope
out
add
cmc
lds
arpl
cltd
jnp
pop
dec
or
cmp
add
add
pop
inc
nop
xor
lock
out
das
icebp
add
cmpsb
faddl
xchg
int
jl
add
adc
cmp
lret
and
int3
sub
or
mov
add
jns
out
pop
mov
adc
xchg
cmp
lcall
mov
fs
and
dec
inc
add
adc
loop
pop
add
loope
in
mov
sub
repnz
inc
add
and
add
adc
movsb
mov
popa
add
mov
int
mov
xor
sbb
pusha
mov
add
xchg
sahf
out
loop
imul
xchg
add
je
sub
push
mov
add
in
sub
add
cmc
mov
repz
lds
xor
sub
add
pop
cmp
cwtl
pop
addb
add
jle
rcr
loop
in
push
aas
out
jb
push
adcb
fldl
aam
jae
add
repnz
stos
cmpsl
add
mov
rcrb
cld
add
sahf
sti
mov
or
fistl
fildll
sbb
iret
mov
das
fs
rorb
insb
fdivs
xor
xor
mov
add
les
push
mov
xor
test
xchg
mov
pop
pusha
and
cmp
cmpsb
rcr
jle
loopne
adc
xorb
insb
or
ret
cmpsl
push
in
cmp
addb
insl
add
xchg
adc
aas
or
subb
xor
fsubp
pop
std
sub
jge
add
dec
sahf
hlt
sti
add
outsb
dec
mov
add
inc
movsl
mov
icebp
sbb
and
add
out
ret
adc
push
daa
jns
stos
and
mov
and
pop
add
mov
pop
inc
pop
incl
cmp
jne
xor
cmp
cltd
inc
mov
or
ja
jle
ucomiss
xchg
je
repnz
mov
mov
lock
adc
into
inc
orb
pop
mov
fs
push
pop
addr16
or
cmp
pop
int
lods
lods
daa
push
imul
xchg
fdivl
outsb
and
mov
pushf
inc
cmpb
loop
cmp
xchg
ss
js
add
arpl
sub
jmp
icebp
imul
mov
sub
mov
cmp
cmp
add
mov
lock
je
add
pop
pusha
mov
push
and
out
add
cmp
or
and
insl
push
xor
ds
or
xchg
jo
xor
add
shll
pop
push
pop
xor
or
push
sub
shrl
push
pop
dec
jle
or
xor
pop
call
adc
dec
mov
stc
cld
enter
add
stos
loopne
cwtl
adc
mov
xchg
xchg
jmp
hlt
enter
xor
repz
add
or
loope
mov
cmpsb
xor
xchg
xor
sub
mov
add
mov
or
js
xchg
icebp
stos
ljmp
xchg
push
mov
push
mov
cmpsb
daa
and
cmp
inc
dec
lea
pusha
push
xchg
dec
rolb
xchg
xor
adc
xor
add
daa
lcall
das
cmp
mov
jne
hlt
std
aam
and
inc
sbb
fstl
add
aas
add
js
pop
sub
out
popf
fcmovbe
aad
xchg
cmp
cwtl
add
data16
jle
and
loop
imul
pop
or
fldenv
mov
dec
add
add
outsl
arpl
push
push
xchg
fwait
jae
loope
mov
mov
cmp
adc
js,pt
jle
movsb
pop
lock
and
add
add
cld
add
adc
jnp
add
outsl
repnz
add
hlt
dec
sub
push
loopne
xchg
ffree
xchg
int
hlt
mov
push
sbb
ljmp
lds
jbe
add
jae
pop
mov
add
add
and
imul
stos
test
jmp
add
pop
jo
inc
mov
fistps
cmpb
aas
test
add
push
in
js
add
jl
pop
outsl
xor
mov
arpl
push
add
nop
jns
dec
push
and
inc
adc
cli
enter
and
mov
adcl
cmp
fucomip
loop
roll
ljmp
movsb
and
cmp
cmp
mov
mov
cmp
pop
sbb
sbb
push
jae
jmp
jno
inc
pop
rcll
push
outsl
cmp
add
sbbb
add
fcompl
cmc
mov
cmovge
sub
push
add
orl
mov
cmpb
rorl
stos
push
or
push
loope
int
jb
es
xchg
mov
add
aas
mov
and
jns
pop
pop
lret
add
repz
pop
sub
sbb
add
aas
repz
iret
mov
cmp
add
mov
loope
or
pop
adc
mov
xorb
xlat
mov
cmp
fs
add
jno
stos
push
lea
addl
cmpsl
xor
jbe
and
jne
int
lods
movsb
sarl
xorps
mov
pop
jle
or
fmull
inc
stos
popl
jns
jmp
hlt
pusha
or
or
pop
add
lock
and
or
dec
push
rcll
shlb
subl
loopne
sbb
pop
or
lock
std
insb
repz
fcompl
dec
rcrb
out
xor
and
or
mov
mov
inc
push
pop
and
ds
push
add
insl
clc
adc
out
cmovnp
lret
shll
jp
into
adc
jl
xorb
sub
jbe
xchg
cs
inc
sbb
mov
add
addb
push
rolb
int3
bound
add
xor
inc
rorl
shlb
iret
add
das
hlt
out
add
mov
andb
add
cmpsl
or
inc
aaa
sbb
cmpsb
push
or
lds
iret
mov
popa
xchg
repnz
xor
mov
ds
js
fs
jno
add
jno
and
sbb
les
popa
ret
repnz
jmp
in
add
cmpl
leave
rcl
cmpsl
lcall
and
mov
xchg
or
test
out
pop
push
roll
dec
adcl
mov
inc
adcb
push
pusha
add
push
add
lods
inc
jbe
adc
add
sub
stos
xchg
loopne
movsl
clc
add
lods
mov
push
sbb
in
popa
lock
popl
lret
das
jg
mov
xor
neg
scas
out
sub
sub
pop
lea
int
hlt
add
out
add
sbb
jnp
nop
pop
scas
cmp
clc
shlb
xor
dec
add
sar
cmp
push
mov
ds
insb
andl
orl
sbb
int
rol
dec
pusha
inc
test
xchg
fisttpll
push
sbb
addr16
xor
adc
add
pop
jns
mov
cli
inc
xchg
sbb
jb
cmpb
clc
jns
push
and
sub
push
test
push
in
cwtl
bound
enter
arpl
push
add
pushf
stos
rolb
fimuls
pop
push
add
push
sbb
add
jo
or
jge
mov
add
xchg
icebp
minps
jne
mov
adc
pop
xchg
sbb
insb
cltd
jno
add
inc
in
xchg
add
ret
enter
pop
hlt
jae
or
pusha
fidivrs
inc
dec
ret
jbe
daa
xor
add
sbb
shr
addl
sbb
xchg
jl
adc
sbb
add
or
lods
add
mov
test
add
stc
jle
mov
fs
ret
cmp
roll
iret
and
xor
xor
sub
or
ja
add
repz
jnp
loopne
inc
mov
and
sbb
test
sub
or
les
fimull
sbb
mov
push
xor
std
adc
lods
mov
push
add
pop
add
rcrl
xor
ret
mov
sub
add
adc
jno
xor
xchg
lret
in
adc
sbbb
and
lock
xchg
inc
sbb
lods
lods
jg
pop
scas
adc
setg
rorl
aaa
pop
int3
mov
mov
rolb
shlb
in
pop
outsb
lods
rol
lods
cmp
jo
sbb
jb
pop
or
jnp
mov
and
dec
enter
bound
mov
in
stos
adc
adc
cmp
dec
inc
mov
cmp
out
xlat
mov
aas
mov
push
orb
fdivs
add
sub
pop
mov
push
add
jns
xchg
lods
test
aaa
fsubrl
push
hlt
cmp
add
addb
pop
int
push
or
inc
mov
adc
cli
roll
xchg
push
xchg
inc
cld
pop
inc
jle
push
pop
xor
adc
xor
mov
cld
pop
repnz
mov
mov
cmp
popa
add
sbb
xor
loopne
daa
fucom
push
loopne
xchg
popa
xchg
cmp
hlt
loop
add
rcrb
mov
add
fsubrl
call
and
mov
stos
addb
mov
fldt
clc
add
imul
mov
test
sbb
xchg
std
fistps
pop
stos
jb
inc
xchg
xchg
mov
xor
addr16
mov
scas
aaa
xchg
bound
int
push
andl
adc
in
je
popa
push
add
adc
out
jns
add
jno
jmp
push
sbb
or
add
adc
hlt
movb
lea
xor
aad
movsl
hlt
add
fwait
jmp
add
mov
bound
imul
add
stos
movsl
repnz
psubsw
out
add
adc
push
and
and
sbb
add
sti
mov
xor
dec
dec
mov
and
jno
mov
jb
pop
mov
jae
test
cmp
cmp
popa
add
sbb
add
mov
wrmsr
jb
jle
jg
push
jge
inc
rcl
ret
mov
push
lea
pop
movsw
ret
das
inc
jb
mov
mov
fcompl
add
mov
test
and
jmp
leave
add
loop
arpl
les
inc
mov
cmp
sbb
inc
cltd
push
push
jae
adc
mov
pop
push
test
xrelease
jp
mov
cmpsb
in
add
popf
popa
lret
fdivl
add
and
xor
aas
daa
ret
repz
movsb
int3
add
inc
add
aad
jnp
or
rorl
mov
shl
sarb
xchg
int3
test
jae
add
cmpsl
push
ds
mov
orl
dec
cmp
cmp
scas
in
aam
or
rorb
js
and
mov
push
mov
xchg
mov
leave
adc
pop
mov
ds
popf
addb
sbb
and
cwtl
fldl
imul
movsb
or
add
rorb
inc
cmp
pop
cwtl
dec
jne
and
push
in
fwait
sub
xchg
ljmp
addb
lods
push
cmp
fdivrl
aad
sbb
add
add
mov
insb
pop
jno
sub
aam
packsswb
add
mov
lods
inc
movsb
sbb
int3
lock
xor
or
iret
sbb
and
pop
mov
sbb
test
imul
data16
add
clc
iret
push
cmc
push
push
and
or
loope
add
movl
pop
add
scas
lcall
sub
push
cli
jnp
add
arpl
das
adc
jno
pop
fistpll
mov
and
sar
fildl
sarb
pusha
cmc
rclb
sbb
sti
xchg
jb
add
lret
stc
pop
insb
int3
imul
outsl
insl
icebp
out
or
mov
add
jb
jne
ffreep
push
adcb
push
lods
inc
sbb
test
sar
mov
cmp
notb
mov
fimuls
hlt
dec
rcrb
jo
mov
inc
aas
mov
add
push
mov
les
mov
daa
pop
pop
cmp
xchg
jno
sub
addr16
adc
mov
jne
jns
add
mov
adcb
dec
jge
add
xchg
and
dec
adc
iret
cmp
pop
fists
imul
add
jge
add
mov
adc
or
cmpsb
or
dec
das
outsl
es
add
imull
je
jle
cmp
xlat
mov
fwait
add
dec
jmp
and
add
cwtl
and
hlt
int
xor
cwtl
pop
jne
out
push
mov
or
das
aam
add
insl
jb
or
lock
ljmp
mov
aaa
pop
sarb
shrb
push
scas
add
mov
jle
add
fdivrp
ret
cld
fildl
cmpsb
lcall
movhps
data16
mov
dec
pop
jp
add
into
fiadds
xor
mov
push
shlb
adc
iret
jp
repz
push
popf
push
pop
xchg
dec
sti
pusha
dec
loopne
mulb
sub
decl
imul
or
mov
xchg
scas
add
lods
xor
push
fidivs
add
xchg
mov
pop
adc
sub
out
fidivrs
fxch
adc
jo
jle
pop
cmp
mov
rorl
mov
adc
push
xor
cmp
sahf
pop
jge
pop
or
push
add
pushf
and
add
scas
lds
sbb
add
inc
add
or
fildl
fmull
mov
cmp
dec
add
adc
cmc
rcrl
push
inc
pushl
sbbb
jns
add
pop
dec
sbb
sbb
cmp
ror
ja
je
andl
cmp
test
shrb
jp
add
dec
fdecstp
sarb
ret
xchg
push
xchg
pusha
push
loope
mov
pop
shlb
push
mov
and
movsl
lods
mov
call
shll
test
hlt
push
insb
lock
stos
pusha
fxch
dec
sbb
sub
clc
mov
fmuls
dec
adc
mov
adc
lcall
dec
mov
inc
fcomps
xchg
add
xor
lcall
jl
mov
pushf
inc
adc
std
add
xchg
mov
addb
jne
mov
mov
nop
testl
cli
aad
pop
pop
jmp
inc
add
pop
pop
popa
clc
js
and
add
inc
mov
jmp
loopne
iret
sub
add
out
push
jge
outsb
add
mov
data16
adc
cli
das
xor
adc
and
and
cltd
lret
add
test
roll
fcomps
dec
arpl
dec
test
fstps
push
add
push
pop
rolb
pop
sub
or
or
int3
sahf
call
std
push
or
cmp
push
add
aas
lods
stos
rclb
fdiv
mov
add
in
inc
pop
add
mov
xor
shr
xor
sub
cli
add
or
stos
pop
and
into
data16
adc
out
adc
add
push
cmp
add
shrb
jbe
add
lahf
adc
into
repnz
or
pop
nop
pop
fucom
add
or
and
jns
icebp
rorl
push
bt
jle
inc
pop
push
je
scas
lods
mov
add
inc
pop
jecxz
add
sbb
mov
inc
adc
repz
pop
jl
into
loope
int3
add
gs
push
jge
ret
dec
jle
pop
imull
sub
or
sbb
dec
mov
dec
dec
jo
sub
push
pusha
inc
push
test
ja
add
and
push
aam
pop
inc
pop
int3
add
jae
jg
dec
cmp
pusha
jp
sbb
imul
aas
lods
dec
test
mov
pop
rolb
add
lods
imul
add
fcoml
ja
les
cmp
repnz
test
mov
xor
outsl
fldl
adc
push
clc
mov
add
popf
push
pop
inc
in
ret
fidivrs
inc
pop
insl
sub
movsb
sub
add
icebp
outsl
jecxz
in
in
clc
sbb
cli
in
add
mov
cwtl
cmp
mov
mov
hlt
push
mov
ret
pop
cs
aam
andl
int3
sub
adc
mov
addb
nop
xor
jae
mov
rclb
call
shlb
int
arpl
and
push
adcb
adc
sub
jge
add
add
cltd
sub
stos
daa
mov
call
add
pushf
mov
sbb
stc
pop
in
mov
loop
add
add
jmp
pop
pop
leave
lods
jp
cmp
out
lock
mov
add
testl
rclb
jne
push
cmpsb
push
sub
mov
push
int
add
aas
inc
mov
add
pushf
ret
imul
testl
insb
push
cmp
add
pusha
mov
sahf
pop
sbb
rcll
mov
xor
jno
add
jg
clc
and
mov
sbb
fisubrs
int3
push
mov
ja
clc
or
add
rol
call
and
inc
cld
mov
adc
xchg
cmp
mov
pushf
ror
add
cmp
jne
in
add
shlb
jmp
add
push
sbb
xchg
add
add
ljmp
hlt
add
mov
mov
pushf
xor
pop
or
movb
orps
xchg
mov
inc
adc
out
cli
push
pusha
push
mov
xchg
xor
fwait
xchg
and
mov
adc
push
jg
aad
test
mov
rol
mov
mov
sbb
daa
push
pop
test
pop
inc
mov
and
icebp
adc
inc
std
pop
fldl
xor
mov
popa
add
mov
cld
pop
sbb
pop
adc
and
fstl
sub
imul
lods
push
jp
pop
inc
xchg
add
dec
pushf
xchg
jmp
xor
je
popa
inc
cltd
cmpsl
adcb
es
mov
xlat
filds
add
sahf
jp
lret
rol
add
pop
inc
mov
mov
add
stos
cmp
mov
lock
sub
adc
inc
cli
cltd
add
pop
inc
jb
mov
fs
fwait
in
pushf
pushf
in
cmp
pushl
fs
cmpl
into
cmp
mov
aam
int
lret
shr
call
jmp
lds
mov
nop
add
mov
in
jbe
jno
out
mov
inc
cmp
mov
and
in
inc
ret
add
mov
cmpsl
mov
insl
xor
mov
xor
bound
cmp
subl
xchg
cmp
out
pop
mov
pop
mov
shll
cmpsb
pop
pop
data16
mov
jbe
cld
addb
dec
jp
mov
xlat
sub
pop
jg
shr
out
lods
mov
mov
dec
xchg
es
lods
cmp
cltd
add
nop
icebp
dec
cmp
or
sbb
adc
call
dec
push
and
je
inc
addr16
push
xor
adc
stc
sub
stc
sub
repnz
xchg
mov
add
sbb
aas
scas
pusha
add
int
js
mov
inc
stos
add
test
cltd
xchg
or
cmp
sub
sbb
jae
leave
inc
sbb
bound
jbe
stc
mov
add
or
and
jo
call
js
add
hlt
insl
aaa
inc
sbb
mov
jno
testb
jne
f2xm1
test
and
jo
cmp
insl
out
jl
and
push
int3
orl
fldenv
and
pop
xchg
cwtl
gs
jl
pusha
mov
push
aaa
mov
jae
mov
sub
xchg
in
int3
dec
fidivs
sbb
fistps
push
fildl
adc
cmpsl
int
inc
mov
dec
pop
aad
les
mov
shlb
enter
xor
into
lock
sbbl
lea
jae
add
repz
into
fsubs
fistps
rcrb
test
jle
add
es
daa
push
les
sub
pop
idivl
pusha
pop
into
sub
popl
or
pop
test
jns,pn
cld
mov
daa
inc
add
aas
sbb
rclb
adc
subl
adc
rcrb
imul
mov
aaa
adc
and
mov
lds
stc
out
out
push
mov
sub
scas
xor
pusha
push
push
dec
sub
add
inc
loopne
cmc
xor
in
cmpsb
imul
and
imull
add
movsb
cwtl
loope
mov
out
mov
push
inc
sti
xorl
fst
pop
sub
xor
addl
stos
popl
std
add
sbb
jo
mov
push
or
lea
jne
and
dec
xor
push
push
sahf
mov
mov
jl
mov
repz
xlat
jg
add
jmp
fs
inc
mov
lea
push
xlat
pop
cs
mov
add
lcall
loopne
test
push
stos
das
dec
or
idivl
xchg
adc
popf
or
or
mov
push
mov
sub
pop
add
jmp
pop
dec
add
call
stc
xchg
mov
or
sbb
jae
sub
xor
inc
add
lahf
fildll
fdivs
sbb
lea
enter
in
mov
jne
fsub
inc
aad
fiadds
jno
sbb
loop
inc
dec
dec
lds
add
adc
fidivrs
jns
inc
mov
icebp
ret
filds
stc
add
and
pop
mov
mov
int
add
jns
push
sub
push
xor
inc
xlat
flds
jge
push
fidivs
mov
rorb
cld
adc
pop
popf
sbb
and
loopne
hlt
jo
js
cmp
aaa
frstor
add
or
lahf
xor
lods
pop
jecxz
cld
mov
orb
push
cs
icebp
and
rclb
add
sbb
mov
popa
int3
fstpl
dec
lea
pop
and
decl
cmp
shll
loopne
sbb
ficoms
and
test
add
jae
inc
jne
insl
push
js
adc
out
jp
das
nop
and
int
popa
sbb
addr16
roll
insl
adc
inc
out
add
sbb
cmp
xor
mov
cmp
dec
loopne
movsb
enter
fwait
repnz
sub
sub
and
loopne
cmpb
fstpt
stos
fnstcw
and
fmul
xor
push
ficoms
sbb
shlb
pusha
push
dec
sub
push
push
or
mov
cmp
sarb
fiaddl
xor
xchg
lret
loope
jnp
cwtl
push
jnp
mov
shlb
mov
xor
fwait
xor
fisubrs
xchg
cmpsb
cmp
sahf
das
dec
pop
lock
sub
bound
or
or
pop
adc
or
add
fidivl
out
jl
push
push
mov
add
sbb
xchg
add
out
adc
cmpsl
scas
xlat
negl
mov
or
or
and
pop
arpl
xor
xor
jle
jp
mov
jge
add
test
rorl
out
mov
hlt
push
cmc
sahf
fistpl
and
add
xorb
loopne
sub
mov
out
or
out
and
sub
pusha
iret
leave
and
add
addl
add
les
sldt
out
iret
movsb
adc
ja
addl
loop
jns
sti
adc
fisttpl
cltd
ret
fucomp
jnp
push
dec
xor
jno
sbb
add
mov
mov
push
pop
lret
adc
add
lods
xchg
or
add
cwtl
clc
imul
add
pusha
jo
jbe
jle
cltd
sub
jnp
add
loope
iret
add
je
mov
xchg
mov
pusha
stos
out
jno
mov
inc
pushf
call
mov
sub
mov
pop
xchg
mov
and
jl
dec
pushf
xor
add
popa
in
mov
mov
push
add
or
xchg
add
shr
je
push
dec
in
in
popf
add
jge
shll
pop
push
cmpb
addps
mov
xor
inc
ret
mov
fisubl
sub
int3
xorb
add
push
rorl
ret
xchg
lret
movsb
xor
jo
stc
xchg
sub
mov
mov
sub
inc
add
pushf
adc
add
mov
add
je
add
add
pop
in
pop
add
int
or
pop
call
adc
mov
dec
xor
xchg
aaa
jmp
out
mov
test
pop
rclb
fldl
mov
add
scas
sub
jge
mov
aas
je
jle
fnop
movsb
add
cmc
mov
or
lock
pop
adc
fistpll
push
or
add
jbe
pop
stos
push
sub
push
icebp
mov
subb
add
dec
xchg
sbb
fists
incl
xor
out
je
add
push
mov
mov
add
aaa
dec
sub
xor
add
add
add
mov
xchg
es
jg
rorb
add
aad
icebp
scas
mov
jo
add
cmp
leave
xor
push
add
inc
pop
pusha
cmc
rolb
adc
shll
mov
cmp
adc
pop
repnz
xor
push
mov
adc
shl
mov
push
add
mov
xor
xor
cmp
xchg
roll
push
rcl
dec
rcrb
push
adc
cwtl
add
adc
inc
add
fiadds
icebp
fnstenv
aas
das
sub
add
enter
or
or
push
jo
mov
movsb
xlat
lahf
nop
and
add
cwtl
addb
movsl
rcl
mov
ds
gs
test
js
sub
jp
aam
or
das
push
lods
add
mov
push
sub
mov
orb
faddp
add
inc
ja
push
loopne
pusha
lods
jmp
dec
in
loopne
in
pop
mov
or
inc
sbb
insb
cmp
enter
push
popf
sbb
mov
add
lret
push
enter
aas
add
stos
jmp
lods
je
adc
aam
lret
pop
mov
pop
push
mov
add
cmp
xchg
repz
call
cmp
lds
outsb
add
jmp
or
add
cmp
rorl
jae
push
add
and
pop
mov
test
cmp
mov
jb
add
enter
cmp
pushf
jge
push
add
cltd
mov
pop
orl
cwtl
daa
fidivs
add
mov
jl
or
testb
add
sub
jl
jecxz
ret
xchg
jo
mov
cmp
push
cmp
add
repz
mov
jmp
push
add
scas
jno,pn
out
add
xlat
enter
sub
call
add
cltd
push
cmp
and
cmp
mov
lahf
mov
lds
ds
addb
pusha
xchg
adc
add
stos
or
or
and
add
mov
mov
movsb
inc
stos
mov
jne
sub
in
rorl
jge
sbb
sub
cmp
add
repz
jae
add
pop
adc
add
mov
test
push
jae
jns
idiv
add
test
aad
xchg
push
add
lods
sub
push
pusha
lahf
jno
inc
mov
cmp
mov
mov
dec
dec
test
cmp
and
lods
jl
ljmp
in
mov
imul
aaa
mov
jmp
shll
stc
sarb
sub
adc
imul
mov
cs
add
xchg
cmp
jae
add
mov
or
in
lret
negl
mov
mov
cmp
sbb
cs
test
cmp
scas
jmp
and
xchg
stc
call
out
or
mov
mov
pop
inc
mov
and
addps
jns
add
mov
sbb
insb
pushw
or
add
mov
adcb
inc
push
jne
sub
and
pop
fldenv
sti
hlt
aam
shlb
add
mov
push
sbb
adc
mov
cwtl
cltd
xor
mov
ret
add
push
xchg
inc
adc
mov
and
pusha
add
jl
rolb
add
js
shll
imul
mov
or
pusha
mov
push
dec
mov
inc
mov
inc
cmpb
call
je
push
insl
sbb
push
jmp
jmp
inc
les
fadds
cwtl
pushf
int3
pop
and
add
jmp
out
adc
or
or
xchg
rcrl
dec
push
ret
call
dec
sar
repnz
cmp
add
xchg
mov
add
sets
mov
xor
ret
dec
add
inc
repnz
push
scas
fdivl
inc
and
add
jne
push
or
add
lea
add
cmc
data16
xchg
mov
pop
or
insb
mov
mov
fbstp
and
out
rolb
pop
and
and
adc
cmp
xorl
les
cld
mov
mov
add
or
pop
dec
data16
dec
loop
add
dec
incl
sar
inc
add
mov
xor
xchg
mov
add
loopne
add
xlat
mov
sbb
pop
testl
add
sbb
shl
mov
into
ljmp
fwait
iret
lods
adc
loope
and
adc
scas
add
je
in
push
arpl
pop
inc
sub
mov
sub
pop
sbb
dec
push
add
inc
pop
add
shlb
and
loopne
scas
push
push
stc
pop
aas
cmp
add
cltd
out
lds
jmp
loop
mov
int3
rclb
cmova
jo
jg
and
cmp
mov
mov
adc
dec
sbb
or
and
inc
pop
jns
aaa
inc
push
dec
dec
add
lcall
jge
xor
addr16
and
repnz
imul
sldt
push
movsl
mov
aam
loopne
cmp
add
push
push
jb
mov
imulb
mov
into
xor
xorb
loopne
add
lret
xchg
lea
xchg
xlat
imul
fistl
rcrb
and
cmp
sub
xchg
lods
pushf
adc
add
cli
cmp
shrb
ficoml
nop
pusha
aas
leave
push
out
add
push
pop
adc
lea
mov
shll
adc
inc
inc
out
clc
pop
sbb
push
shlb
add
pop
gs
cmp
sti
add
xor
dec
and
add
fisttpll
das
aaa
nop
in
loop
add
int
mov
cmc
dec
ja
movsl
rcr
xchg
adc
add
cmp
sbb
add
mov
testb
jle
cmp
add
jae
lcall
inc
test
stos
adc
es
adcb
dec
testl
inc
add
sub
das
leave
add
in
xor
ror
int
pop
dec
add
incb
jecxz
jl
push
sub
add
add
sbbb
add
shl
and
pop
nop
orb
les
pop
xor
adc
enter
mov
test
push
xchg
icebp
sbb
cmpsb
in
add
or
pop
lds
loopne
pushf
lcall
xchg
clc
mov
jne
ss
aad
cmp
pop
or
add
xor
pop
popl
lods
out
shrb
roll
and
mov
cmpb
pop
in
out
push
xchg
sbb
jns
xchg
in
push
mov
into
push
inc
mov
insl
scas
xchg
sbbb
mov
sbbb
das
pop
daa
inc
mov
push
cmp
push
clc
add
mov
pop
cmp
xor
pushf
mov
inc
adc
add
out
jb
sti
sbb
aas
jmp
cwtl
outsl
jne
add
push
mov
fildl
push
inc
fs
add
mov
dec
jo
sbb
lods
push
cltd
lock
cmpsb
cmp
dec
xor
push
adc
test
and
dec
jge
add
push
movsb
cs
or
ret
add
adc
xor
pusha
mov
xchg
aad
inc
add
xor
jb
stos
cmpsl
and
in
mov
xor
sahf
add
fisubrl
mov
mov
popa
jo
sbb
loopne
mov
into
loopne
test
mov
add
and
push
stos
jo
aas
jge
outsb
mov
sarb
sbb
jns
out
fiaddl
faddl
xlat
int3
in
jecxz
add
outsl
arpl
nop
and
mov
xchg
pop
dec
and
test
xchg
test
add
rolb
nop
mov
push
sub
add
and
and
repz
jmp
inc
jp
cmpsb
sbb
iret
orb
add
daa
pop
add
lds
in
inc
cmp
and
std
inc
fiaddl
int
jge
push
outsb
das
es
cmp
nop
adc
fildl
pusha
sbb
hlt
dec
add
ljmp
insb
sub
in
sbb
subw
cmp
pop
out
cmp
imulb
cmp
sub
xor
mov
push
aam
faddl
jg
fistps
loop
imul
rcrl
mov
push
out
mov
hlt
or
add
enter
add
jle
mov
shl
lcall
loope
movsl
lret
adc
shrb
scas
shlb
dec
lcall
sahf
in
hlt
sub
popf
jecxz
mov
mov
add
mov
or
and
lock
or
fmuls
inc
cld
bound
scas
cmpsb
add
popf
das
test
inc
push
add
inc
in
jecxz
push
cmp
pop
rcrb
and
lock
pop
add
xchg
add
inc
mov
and
enter
cmp
out
mov
lock
lods
add
scas
mov
inc
jne
add
cmp
shl
mov
sub
inc
xchg
add
inc
mov
cld
lock
outsb
js
add
mov
test
sbb
int3
and
add
add
mov
movsb
fcomps
insb
add
jns
xchg
loope
xchg
lret
add
fs
mov
cmp
fsubp
enter
jne
mov
xor
cmp
faddl
sub
sbb
lret
dec
lds
arpl
add
jg
enter
clc
pop
insb
mov
and
movsb
loopne
xor
push
repz
jae
mov
popa
pop
cmp
aad
push
cmpsl
xor
xorps
mov
jmp
add
fistl
or
jb
xor
cmp
popf
xchg
xorl
int
clc
sbb
mov
ljmp
fwait
mov
push
and
xlat
in
mov
repnz
add
adc
add
stos
xlat
adc
test
cwtl
ss
inc
adc
dec
movsb
xor
test
stos
and
movsb
clc
mov
mov
mov
add
inc
insb
incb
pop
es
mov
sti
jl
jnp
xchg
mov
cmp
sbb
sbb
mov
xlat
lea
pop
push
test
and
add
xchg
pusha
push
inc
aad
stos
add
xchg
xorb
sbb
fwait
mov
mov
cltd
adc
daa
movsb
xchg
inc
in
add
outsl
jecxz
mov
sbb
gs
cmp
xchg
testb
add
mov
ja
loopne
dec
mov
add
clc
or
popf
inc
sbb
in
sub
push
stos
add
cmp
ucomiss
mov
or
bound
loop
lods
sub
push
push
testb
mov
push
mov
add
js
adc
in
cmp
adc
add
add
pop
inc
dec
jae
in
mov
pop
inc
adc
xor
imul
mov
xchg
add
mov
push
leave
mov
dec
xor
sub
stc
xlat
push
xchg
sbb
xchg
mov
add
pop
or
add
push
cmc
jl
dec
sarl
je
sbb
insl
ficomps
pop
nop
mov
mov
xchg
cmpb
add
mov
inc
dec
mov
pop
inc
insb
jle
or
fldenv
and
cmpsl
and
pop
add
jo
xor
test
sbbb
and
xchg
data16
iret
adc
fcomps
dec
add
mov
inc
adc
in
add
mov
js
icebp
lret
lds
pusha
xchg
inc
shll
into
orb
ds
add
jnp
divl
in
mov
or
ja
stos
pusha
test
sub
ret
sub
enter
sub
rcll
add
and
test
sbb
jmp
sbbb
xorb
cmp
dec
movsb
add
out
mov
dec
add
call
mov
mov
push
popa
or
adc
jb
xor
rorb
sbb
add
cmp
jge
jle
add
repz
add
cmp
loop
sar
or
jle
fs
stc
js
inc
push
mov
mov
cmpsb
cmp
sbb
push
jne
add
pop
push
imul
pmullw
mov
iret
mov
add
pop
test
jle
jmp
ljmp
add
add
fiaddl
es
pop
jbe
popa
fistl
adc
inc
je
stc
pusha
sub
jmp
or
or
sbb
adc
test
ss
jle
js
add
cmpsb
leave
imulb
mov
adc
mov
push
xor
sub
inc
int3
mov
sahf
lahf
cmp
mov
dec
fs
stos
sbb
sub
mov
sub
loop
add
out
jno
add
hlt
je
fcoml
adc
int
out
sbb
mov
add
cmp
mov
shlb
ficompl
in
add
scas
push
jno
or
or
mov
mov
dec
movsb
pop
mov
es
das
add
je
jbe
add
iret
icebp
leave
adc
mov
mov
in
inc
int
mov
dec
ss
cmp
cli
test
das
loope
pushl
mov
ficompl
inc
cmpsl
inc
jp
push
and
xchg
or
or
test
mov
jb
out
mov
add
gs
mov
popf
mov
jbe
sbb
mov
or
jo
addr16
in
hlt
cmp
jg
add
push
cld
jbe
add
add
mov
imul
cmpsl
mov
out
cmp
cmc
add
nop
jmp
in
adc
lods
imul
or
jbe
jb
or
add
fucom
fdivrp
inc
jp
mov
clc
sbb
xchg
into
sbb
inc
add
pop
push
out
sbb
aad
dec
shr
cwtl
jo
or
jae
fists
repz
add
dec
ja
rdpmc
add
bnd
xchg
cmp
sbbb
mov
sbb
jnp
clc
nop
and
sarl
and
add
cs
loopne
mov
call
inc
adc
add
hlt
pusha
add
cmp
addb
or
notb
out
jecxz
add
fldl
add
into
mov
sub
add
gs
push
int3
int
lds
test
or
sub
fwait
sbb
add
or
das
in
adc
push
push
dec
shl
ret
rcrb
xchg
cmp
mov
xor
push
lea
and
mov
mov
sarb
add
testb
jle
and
add
push
mov
je
xchg
add
xor
fldl
pop
pushf
mov
add
xor
or
cmp
add
orl
sti
xor
add
mov
sub
call
mov
sahf
adcl
ret
xorb
push
test
lret
xor
sbb
ret
nop
pusha
mov
stos
dec
scas
lcall
fiaddl
adc
sbb
push
jmp
push
xchg
sbb
in
pushf
jno
pop
ror
scas
add
fisttpll
sbb
cmpsb
or
adc
add
ss
iret
popf
into
popa
sbb
in
jge
ret
mov
mov
shl
dec
dec
pop
loop
insb
sub
push
add
mov
mov
add
insl
gs
and
mov
dec
orb
sub
adc
add
push
loopne
add
movsb
pop
pop
push
xchg
mov
fisubrs
sbbl
jle
dec
adc
add
fadds
int
jo
sub
mov
adc
in
pop
sub
test
xorb
and
jb
aas
push
pop
clc
sbb
mov
cmp
idivb
add
push
andb
out
pop
mov
inc
cwtl
adc
das
xorb
leave
pop
or
dec
pushf
stos
add
dec
dec
adc
aaa
and
outsl
add
jne
pop
add
jecxz
lock
sbb
mov
sub
and
arpl
test
add
hlt
in
loop
pop
mov
sbb
pusha
out
and
mov
arpl
push
lahf
shl
jb
mov
sbb
mov
cmp
jno
xor
and
xor
push
add
add
xchg
mov
test
add
sti
adc
jb
add
sar
hlt
stc
push
aas
negb
mov
dec
ror
add
adc
xor
sub
push
inc
shll
jns
and
push
fadds
insl
mov
mov
mov
xor
bound
xchg
xchg
ret
jge
mov
sub
sub
add
inc
movsb
aas
jbe
jg
add
mov
xchg
out
push
jb
sub
inc
out
add
xor
cltd
inc
pop
add
sbb
xor
lds
popa
jnp
subb
fcomps
sarl
jno
pop
cmp
mov
in
lcall
hlt
sbb
fidivl
jmp
pop
sbb
xchg
add
push
lods
mov
loopne
push
mov
shrb
inc
pop
iret
and
adc
sub
or
cld
addb
outsb
push
and
out
and
push
pop
insb
filds
sbb
sub
mov
and
xchg
xorl
pop
fcom
inc
push
or
inc
cmp
dec
xlat
popa
add
ja
inc
mov
jb
xchg
jl
adcb
pop
mov
ljmp
add
je
inc
jg
testb
mov
cmp
add
sbb
mov
sbb
lock
cmp
rolb
inc
add
xor
or
inc
cmp
lock
adc
add
add
in
leave
and
xchg
add
gs
aas
sbb
and
lods
and
push
repnz
sub
icebp
xor
or
jnp
add
test
or
and
mov
insb
jge
push
push
fidivrl
in
add
xchg
and
leave
add
ja
data16
rcrl
stc
and
icebp
pusha
cmpsb
and
mov
call
repnz
int3
jge
add
inc
scas
cmp
pop
out
or
inc
dec
xchg
sub
aas
push
pushf
add
loope
imul
sti
pop
and
ficoml
cmp
sub
inc
in
andb
adc
fildl
add
dec
xchg
adc
cmp
jae
cmp
aaa
mov
pushl
shr
push
jb
pop
or
test
gs
mov
xor
jecxz
jnp
loope
add
lods
scas
sti
rcrb
outsb
sbb
mov
or
pop
out
subb
movsb
jbe
dec
test
cmpsl
data16
sbb
loope
mov
shrb
xlat
imul
jno
shl
pop
in
out
rcl
cmpsb
inc
call
or
adc
mov
and
push
call
cwtl
int3
imul
out
loop
push
jns
pusha
ffree
loope
cmp
push
lahf
pop
sub
mov
jl
nop
and
and
sarl
xor
cmp
fadds
mov
mov
mov
pop
xor
addr16
pop
xlat
je
pusha
js
push
lahf
adc
pop
add
and
push
enter
mov
xor
push
xor
push
adc
fiaddl
orl
popf
add
aas
hlt
pop
or
icebp
clc
shrl
adc
sub
mov
dec
movsb
pop
in
mov
call
add
jo
or
push
cli
les
add
mov
es
in
pop
add
into
pop
or
or
sti
movsl
mov
xorl
add
subb
stos
push
sub
or
or
mov
cs
sbb
add
mov
sub
into
cmc
sbb
mov
fimuls
stc
xchg
in
cwtl
repnz
mov
mov
mov
and
adc
mov
dec
xor
xor
enter
add
mov
push
mov
mov
add
pop
cmpsl
ret
pop
adcb
dec
pusha
cmc
dec
fidivs
lock
shrb
lahf
insb
sbb
fs
mov
jb
orl
push
ss
shlb
or
cmp
sub
es
sti
push
sub
add
mov
sub
adc
xor
js
sbb
rclb
or
psrad
or
jp
add
adc
add
stc
xchg
lods
pop
or
sarb
sub
xchg
push
adc
pop
push
in
jl
outsl
sbb
cs
xchg
fcoml
or
mov
and
out
adc
stc
hlt
sub
dec
lcall
out
int
push
sbb
in
dec
ss
andb
mov
ret
das
push
add
inc
pusha
xchg
pop
push
idivl
jg
mov
add
iret
mov
lcall
inc
fcom
xor
loope
mov
rolb
test
and
sahf
and
push
mov
and
jp
xor
mov
outsl
movsl
hlt
xchg
addr16
add
andl
sbb
pusha
mov
lahf
scas
cmc
je
jae
js
inc
adc
sarb
push
icebp
mov
xchg
cmp
les
arpl
jnp
push
lea
sub
dec
clc
add
daa
and
add
jle
test
lock
aam
add
or
xor
lods
mov
rolb
sbb
fists
cmp
sub
add
addr16
add
sub
loop
inc
mov
xor
stc
and
or
repz
sub
add
inc
dec
pop
and
push
and
ds
jae
add
lret
rolb
cmp
ljmp
and
dec
push
add
add
js
fcoml
mov
adc
pop
ljmp
push
in
sbb
inc
add
adc
push
sub
ljmp
adc
cld
push
jmp
fs
sarl
lcall
pusha
add
cmp
pop
das
fistpl
inc
mov
mov
ja
add
cmpsl
inc
fcoms
jmp
jl
movsl
mov
sub
inc
push
inc
mov
xor
add
filds
cmp
cmpsl
in
repnz
jmp
and
lret
xor
add
imul
cmp
add
mov
cli
jb
mov
push
loop
cmp
ss
cmp
jmp
std
loope,pt
bound
ror
add
push
and
sahf
stos
dec
js
push
imul
xchg
or
add
subb
add
push
pop
push
popf
fstl
pop
mov
dec
xchg
pop
rorb
testl
aam
add
pop
mov
pop
shrb
mov
xor
lea
cmpsl
xor
jmp
sahf
dec
test
or
daa
jl
mov
adc
mov
fs
push
das
mov
icebp
aam
inc
add
pop
cmpsl
fstl
push
xorb
add
cli
mov
xor
push
xor
fnstsw
int
mov
mov
enter
pop
push
sub
or
pop
xor
dec
add
ss
clc
dec
sub
mov
push
scas
in
stos
push
push
jbe
cmp
mov
movsl
add
push
stc
subb
pop
inc
mov
and
repz
out
pop
push
push
push
xchg
inc
push
jb
mov
iret
or
sbb
jle
out
add
mov
sarl
out
add
das
dec
add
mov
add
movsl
cli
movsb
pop
pusha
xchg
outsb
dec
add
loopne
sbb
fs
mov
cmp
out
fst
popa
add
in
ja
adc
cmp
add
sbb
xchg
ret
add
inc
pop
cltd
or
jnp
add
push
fldenv
add
nop
pop
sbb
xor
sahf
pop
mov
xlat
out
leave
addr16
lret
inc
jae
jnp
shlb
cmp
mov
cmp
incl
subb
inc
dec
mov
cld
push
sbb
and
push
inc
mov
adc
repz
add
ret
dec
and
mov
ret
rcrb
stos
sub
jno
push
add
pop
sub
push
test
stos
mov
pop
jg
cmp
faddp
add
or
push
addr16
add
lds
add
pop
pop
scas
movsl
mov
js
data16
pusha
push
mov
insl
bound
hlt
in
add
cmc
jno
add
leave
or
in
pop
in
bound
and
mov
push
js
add
push
xor
enter
les
mov
push
loope
or
mov
movsl
dec
std
push
push
or
and
movsb
add
add
push
jns
lock
cmp
pop
push
int
pop
jge
das
enter
jb
inc
add
jae
hlt
add
fs
call
add
int3
push
aas
mov
sbb
dec
adc
jmp
xchg
xchg
test
fldpi
xor
push
xchg
pusha
jbe
ficoml
popf
add
orb
imul
pop
aas
or
ja
in
cmp
add
cmp
dec
add
add
lods
iret
xor
sti
sbb
fisttpl
sub
xor
add
cli
adc
push
icebp
push
sbb
fxam
int3
popa
add
jl
popf
and
mov
rclb
or
fmul
or
les
dec
bound
aaa
pop
subb
mov
sbb
add
loop
xchg
cmp
aas
pop
lds
mov
enter
dec
ret
xchg
pop
xchg
jnp
push
lcall
add
out
jno
leave
icebp
popl
pop
jmp
mov
add
loope
cmpsl
jl
shrb
lret
sub
stos
ret
push
and
popl
daa
pop
add
pop
ds
adc
jl
inc
pop
xchg
loopne
pop
sbb
and
sub
add
shlb
aas
xchg
pop
loopne
dec
movsb
outsb
adc
xchg
dec
into
flds
lods
add
insb
aam
je
mov
fildl
inc
jbe
and
add
fldcw
shrb
shll
or
mov
pop
lock
jns
mov
bound
sub
cmp
sbb
adcb
js
cli
das
scas
mov
mov
sub
push
push
or
sub
test
xchg
xor
mov
add
inc
pop
sbb
sar
sub
jge
aaa
mov
adc
push
ret
pusha
cli
push
add
out
sldt
cmpb
dec
popf
stos
add
push
pop
inc
adc
mov
and
pop
ret
mov
sub
gs
repnz
push
or
push
sbb
divb
std
js
repnz
pop
cltd
subl
sarb
add
adc
ss
jo,pt
add
jge
movsb
xor
jle
insb
daa
loopne
outsb
jnp
sub
mov
jmp
sbb
shlb
cvttsd2si
and
daa
clc
pop
mov
pusha
in
mov
pop
subl
jae
add
inc
bound
add
arpl
inc
xor
mov
jno
add
xchg
and
subl
mov
push
mov
daa
and
add
mov
jle
sbb
sti
mov
imul
push
shlb
add
cltd
pusha
xor
sbb
lret
mov
cmp
test
add
sbb
lods
jo
push
xor
add
xchg
daa
sarl
lods
loop
cmp
xor
cmpl
pusha
dec
inc
add
or
call
mov
mov
xor
dec
test
out
cld
mov
fs
sbb
cwtl
cli
or
mov
clc
lcall
test
dec
add
mov
mov
pop
adc
sbbb
lahf
add
dec
pop
fsubp
mulb
pop
dec
mov
mov
sub
sbb
xor
movl
fildll
or
add
aas
iret
sti
lret
jg
subb
add
hlt
adc
and
scas
hlt
mov
jmp
in
xor
pop
jnp
divl
addb
and
enter
ret
push
mov
jle
outsl
lret
cltd
ljmp
shlb
jmp
fiaddl
ds
mov
mov
pop
popf
add
mov
call
stos
xchg
cwtl
cmp
adc
fs
mov
lcall
loope
adc
in
daa
mov
pushf
fadds
dec
outsb
xchg
ds
lret
cmpsb
add
popa
dec
dec
pop
js
insl
add
fildll
test
in
push
mov
push
mov
mov
enter
test
or
jecxz
adc
pop
lret
sbb
push
and
int
lea
mov
cltd
dec
clc
push
sub
cmp
rolb
mov
mov
jnp
dec
enter
fstl
sub
add
jl
inc
imulb
cwtl
jl
shll
mov
add
jmp
push
aas
and
add
mov
xchg
jne
add
aam
or
cmpl
mov
jns
outsb
inc
popa
inc
mov
add
and
shrl
aad
cmpl
jbe
test
sub
mov
push
daa
repz
adc
xchg
pop
or
jecxz
popa
rolb
out
sbb
mov
jle
nop
or
add
mov
add
jbe
jle
fnstcw
psubb
push
mov
rcrb
fildl
lcall
add
cmp
pop
xchg
sar
mov
add
aas
jl
inc
cmove
ret
mov
xlat
or
fsubl
shlb
cs
pop
add
loopne
jne
mov
add
and
rolb
je
or
add
imul
fistps
xor
sub
cmp
rolb
or
lahf
shrb
sahf
dec
outsl
in
add
and
or
dec
mov
push
push
push
xlat
mov
jge
loopne
dec
sub
stos
add
cld
inc
stos
dec
inc
adc
add
or
mov
out
pop
xchg
xchg
lret
out
scas
adc
sub
pusha
maxps
xor
jbe
inc
idivb
test
add
mov
adc
mov
sub
sub
jle
clc
xor
cmp
cmp
icebp
shlb
pop
leave
adc
and
les
mov
leave
xchg
cmp
xchg
in
inc
push
adc
jae
gs
adc
xlat
ja
or
lock
in
add
dec
test
rolb
jb
cld
sub
sbb
cwtl
push
dec
mov
sub
mov
sbb
fstps
sbbl
outsb
adc
cmpsl
lods
bnd
ret
mov
mov
jns
add
or
enter
nop
jge
mov
scas
sbb
mov
mov
add
mov
xchg
arpl
dec
ds
shll
jmp
add
jno
sbb
sbb
sti
lods
and
jmp
and
dec
flds
add
jb
or
mov
mov
stos
jae
out
cmpl
call
test
push
push
mov
repnz
and
in
jge
testl
adc
and
movsl
mov
push
mov
out
pop
outsl
pop
mov
xor
popf
and
cli
add
jg
fcomps
movsb
add
lock
stc
add
loope
ljmp
ret
push
mov
xchg
in
mov
test
out
add
adc
mov
lods
into
loop
push
add
outsl
xor
jae
sbb
jbe
xor
or
out
sub
aaa
inc
inc
cmp
fdivrs
add
and
mov
or
mov
js
scas
loop
pop
mov
mov
jg
xchg
xor
loopne
inc
add
daa
push
test
xchg
scas
and
mov
data16
cwtl
mov
dec
mov
adc
add
sbb
mov
lock
cmp
dec
jne
pop
sarb
test
rorb
mov
addb
subl
cmp
sbbb
mov
mov
ret
cmovne
mulb
mov
push
loopne
pop
or
add
frstor
leave
or
or
mov
cmpsb
sub
xor
repnz
idivl
movsb
mov
pop
push
add
xor
scas
jno
loopne
cmp
test
jo
jecxz
call
mov
pusha
adc
push
mov
fisubs
mov
add
xchg
sarl
pop
pusha
pop
dec
dec
add
daa
push
cwtl
inc
xchg
das
add
les
or
repz
add
jae
enter
or
inc
fs
adc
scas
push
bound
jbe
xor
addr16
pop
jae
jp
jg
add
inc
lret
sbb
and
mov
adcl
add
sarb
sbb
ljmp
lea
jp
cs
mov
popf
in
inc
out
xchg
dec
js
push
add
lret
push
stos
add
pop
pusha
sbb
sarb
mov
sahf
push
fstpl
xchg
jne
jne
dec
lea
xchg
lock
xchg
push
cmp
lahf
pop
mov
dec
rcll
mov
call
rdpmc
daa
pop
sbb
push
jb
jnp
loop
imul
inc
fsubl
cmp
int3
sbb
mov
sarl
add
in
rorl
fs
dec
enter
hlt
arpl
lods
xor
ja
add
jge
jmp
adc
int3
dec
dec
add
dec
test
add
rcrl
test
inc
nop
mov
add
aad
cmp
sub
xchg
add
dec
cmc
sahf
pop
pop
jnp
lock
push
pop
adc
jb
repz
in
jnp
jnp
add
xor
mov
jg
addb
movb
aam
les
in
jae
add
xchg
mov
cmp
mov
pop
push
repz
jmp
into
jne
or
out
add
mov
jno
ss
cmp
add
add
test
xchg
mov
xchg
fsubp
lds
sub
inc
ss
lahf
mov
cmp
pop
scas
lret
add
adc
dec
mov
popa
cmc
add
and
add
dec
or
push
addl
pop
sbb
add
sub
ficomps
shll
or
jge
loope
and
cmp
mov
std
mov
imul
xchg
xchg
mov
cmpb
xchg
lock
iret
nop
and
dec
add
aam
jl
enter
ret
test
sarb
jge
bound
and
hlt
lock
aam
add
and
add
dec
lods
fcmovnb
add
cwtl
out
jne
inc
js
hlt
sub
add
data16
pusha
push
loope
jo
fdiv
pop
xor
lret
cmp
inc
outsb
jl
add
dec
scas
adc
jge
sub
ljmp
popa
add
pop
lahf
out
add
addr16
ljmp
jbe
fiaddl
mov
fnstenv
xchg
cmp
adc
add
add
xlat
mov
and
add
popf
push
scas
push
adc
add
inc
hlt
lahf
in
cs
add
inc
jno
outsl
xchg
push
add
aas
dec
adc
icebp
lock
insb
add
cmp
sahf
out
out
inc
dec
xlat
adc
test
fwait
and
xor
sbb
cltd
in
and
adc
or
cmp
les
cld
add
push
lods
adcl
xrelease
cmp
rcr
dec
push
roll
and
and
sbbb
add
mov
adc
push
adc
adc
ljmp
add
mov
cwtl
mov
stc
add
or
dec
in
je
jmp
add
xor
cmp
sub
add
icebp
mov
in
popl
push
and
mov
idivl
cmpsl
mov
cmp
pop
test
sahf
push
xchg
stos
add
repnz
fcomps
lahf
xchg
adcl
inc
pop
mov
add
xchg
sub
ret
sbb
mov
bound
mov
ret
mov
pop
pop
es
mov
add
pop
mov
inc
sub
mov
cs
fsubr
add
pop
dec
sti
adc
inc
mov
add
dec
fidivl
ss
nop
or
push
jge
xor
roll
and
add
dec
test
xor
dec
xor
js
cwtl
aas
das
jo
dec
ret
push
cmp
dec
push
add
scas
add
sub
pop
mov
or
sbb
cltd
pop
and
and
jg
scas
lods
mov
je
add
gs
jp
pfrcpit1
cli
cwtd
mov
insl
sbb
cwtl
fdivl
mov
adc
jle
sub
cmpsb
nop
add
xor
rorb
data16
fldt
add
mov
adc
push
sarl
mov
add
fstl
add
cwtl
stc
movsl
push
xor
push
xchg
jl
shl
sbb
addb
jo
movsb
add
inc
or
addr16
xchg
jg
sbb
add
and
pop
push
add
xor
jp
jo
cli
adc
stos
mov
jle
adc
jmp
ret
add
mov
mov
sbb
das
sti
mov
add
out
push
xor
lret
pop
or
repz
add
xchg
xor
enter
cmp
mov
test
sbb
mov
or
les
outsb
jmp
mov
test
sub
rolb
jmp
orl
add
js
gs
dec
sub
cmpsl
add
add
cmp
jmp
push
rolb
dec
insb
sub
jl
repnz
sub
es
jl
add
outsl
gs
jmp
loopne
mov
data16
adc
mov
in
in
sti
inc
rorb
add
pop
xchg
mov
aas
pop
mov
pop
sub
add
cmpsb
pop
sbb
insl
sub
jo
mov
ljmp
mov
cmp
lds
lods
movsb
out
cmp
lahf
adc
lahf
push
add
push
jmp
mov
or
inc
pusha
repz
xor
xor
push
out
outsb
jne
add
scas
pop
test
nop
mov
sti
fiadds
mov
int3
sbb
jo
jp
aaa
popa
ds
pop
xchg
dec
xchg
mov
in
mov
and
xor
jno
adc
in
stos
cmovns
shrb
jge
pop
mov
sbb
mov
sbb
ljmp
cmp
xor
dec
aaa
push
addr16
and
lret
fists
xchg
cmpsl
mov
push
mov
mov
add
xor
mov
cmp
mov
mov
lock
mov
mov
inc
stos
data16
test
nop
push
dec
push
and
std
jb
sbb
sub
addr16
push
pop
jbe
fsubrl
pop
mov
mov
jae
add
sbb
add
frstor
dec
test
lret
jo
push
js
add
pop
fwait
jb
les
xchg
adc
add
test
push
xchg
int3
popa
cmpsl
jb
ds
pop
pusha
adc
dec
stos
out
fiadds
inc
fcmovnu
jb
divb
enter
mov
pop
sbb
xchg
or
push
imulb
fs
mov
jnp
les
xchg
mov
or
or
frstor
add
mov
stos
dec
push
adc
add
addr16
mov
ljmp
sub
adc
mov
xor
jle
mov
sub
push
mov
pop
mov
shlb
dec
cmp
repnz
flds
mov
ret
aam
mov
cmp
jp
jo
jmp
adc
shrb
stos
inc
cmp
clc
lods
add
add
sbbb
add
push
cmp
sbb
pop
mov
aad
push
xor
out
push
cmp
and
andl
movsl
add
xor
or
sub
lret
enter
sbb
out
fsts
call
xor
cmovnp
jl
and
daa
mov
repnz
sub
test
mov
push
jg
add
daa
sbb
lahf
and
insb
shll
mov
ja
stos
or
cmp
sub
sarl
test
pop
orb
jle
inc
icebp
mov
cmp
inc
test
sub
xor
mov
js
add
dec
mov
or
dec
xor
mov
add
jno
js
xlat
lock
das
outsl
fistl
xor
jl
mov
add
add
setnp
xchg
mov
jp
out
sbb
das
ja
mov
xor
dec
xchg
fidivs
or
aad
push
and
ret
sbb
or
mov
fs
and
mov
xchg
sbb
add
sbb
inc
push
cmp
mov
outsb
imul
sub
dec
cmp
or
lds
in
fldl
fidivrs
push
roll
jmp
push
dec
adc
ret
loope
or
sub
mov
add
xchg
add
jge
add
inc
or
sbb
clc
mov
adc
mov
pop
lock
sub
xchg
ffreep
aam
sbb
cmp
aam
add
or
sbb
xor
add
add
lods
cmp
jge
jns
adc
in
add
or
sahf
mov
loope
push
sub
mov
pop
jle
mov
subb
pop
shlb
dec
cmp
xchg
in
mov
mov
sarb
stos
or
cmp
sbb
out
lret
add
mov
fidivl
lock
push
int3
insl
xlat
adcb
add
clc
movsl
sub
jne
jae
add
adc
jnp
sub
jl
cld
fidivl
inc
cmpsl
icebp
popf
add
repnz
cwtl
bound
add
out
subb
aam
push
ja
push
in
cmp
inc
jo
pop
and
jae
add
es
test
loop
sbb
xchg
add
dec
xor
movsb
test
or
cmpl
outsb
xor
int3
es
xor
aaa
mov
push
jmp
dec
stos
inc
movsl
push
jnp
jae
inc
nop
xor
add
jbe
jb
pop
xchg
and
icebp
scas
fidivl
pop
jle
jns
cld
shlb
add
aaa
bound
rol
xchg
rcrb
jno
adc
cs
ss
nop
and
loop
mov
mov
lret
test
mov
aaa
add
imul
push
pop
cmp
push
sub
xchg
xchg
punpcklbw
and
leave
jmp
pop
fmuls
or
push
bound
out
inc
clc
jne
add
add
pop
in
pusha
rol
inc
inc
cmp
mov
jp
push
inc
mov
mov
pop
push
pop
jg
stos
pop
and
push
mov
jle
fmuls
or
testl
mov
xor
adc
add
int3
out
in
notb
dec
add
adc
adc
jp
bound
mov
xor
aam
mov
pushf
into
iret
mov
jle
lods
add
mov
int3
pop
mov
dec
test
incl
fmull
ss
movsl
pop
mov
insb
js
xchg
test
cmp
les
iret
add
lahf
out
imull
push
ret
and
outsb
sbb
shll
or
aas
push
fs
mov
add
sub
mov
pop
add
jge
lcall
inc
ficompl
mov
pop
dec
cmpb
add
pusha
fsubrp
xor
pop
add
ret
testb
jbe
cmp
add
xchg
add
cmp
xor
addr16
pop
xchg
adc
lods
dec
add
notl
mov
lcall
packssdw
loop
mov
mov
xor
mov
xor
jge
mov
shlb
ret
add
les
add
mov
rolb
es
mov
push
pop
loop
pop
push
mov
inc
scas
push
dec
lea
inc
test
jle
add
movsl
sub
and
out
mov
push
in
add
ds
testb
scas
pop
push
es
push
dec
jnp
jp
add
cs
lret
add
cmp
inc
jne
xor
push
adc
js
fiadds
cmp
xchg
leave
and
maxps
sahf
aam
xor
icebp
adcb
inc
popf
mov
mov
pop
mov
xorb
sarl
dec
pusha
test
add
cmpsl
add
cmp
test
cld
inc
or
xchg
add
fstpt
jg
add
sbb
stos
cmpsb
add
aas
xchg
fcomps
daa
sbb
sub
adc
cmpsb
mov
add
test
insb
add
xor
cmp
push
movsl
adc
cmp
popf
js
add
cli
inc
xchg
mov
addb
xor
mov
verr
dec
push
ja
inc
xchg
push
arpl
pop
shl
sub
cmp
cltd
push
sbb
cmp
add
lahf
mov
dec
loop
or
mov
add
adc
pushf
sbb
add
jno
sub
fsub
loopne
loop
or
push
les
add
test
add
mov
es
cmpsl
dec
pop
push
mov
aam
shlb
sti
pop
add
pop
out
sbbb
sbb
imul
popa
add
test
mov
jne
nop
addb
in
dec
fs
mov
jl
flds
cmpsl
dec
lock
inc
cmp
cli
jne
popa
sub
insl
sub
decl
add
cmp
sub
mov
jno
aam
mov
ja
data16
sub
or
dec
lcall
stos
add
sahf
test
in
push
out
enter
push
pusha
cmp
icebp
js
add
test
out
popf
add
fnstcw
mov
scas
cltd
pop
ds
and
lods
insb
decb
sbb
shrl
test
inc
lods
mov
adc
cmpsl
sub
adc
arpl
ret
jae
push
pushf
js
lret
shlb
add
test
jbe
clc
loopne
adc
cmc
sbb
pop
add
imul
and
icebp
cmp
shr
dec
add
fwait
in
loop
sub
rcrl
repz
loopne
cmc
adc
add
rcrl
mov
add
aas
xorb
rol
ja
ss
cmp
mov
sarl
mov
xor
sub
jge
and
mov
cmpsl
xchg
jns
jno
add
in
mov
pop
cmp
adc
and
lret
add
mov
xchg
sbbb
push
add
arpl
add
fistpll
fs
xor
xchg
mov
insb
dec
int
jl
mov
push
movl
lret
jne
mov
dec
xlat
sbb
rclb
or
sub
adc
in
push
js
jle
cmp
orl
mov
test
orl
add
test
push
addr16
add
mov
jns
lahf
pop
ficoml
nop
cld
test
test
mov
cmp
add
add
fldenv
fldt
adc
roll
add
pop
xchg
aas
add
fmuls
add
stc
xchg
cmpsb
adc
xor
xchg
les
pusha
dec
adc
dec
pop
pop
cmp
sahf
xor
adc
into
fsubrl
fadds
mov
std
fcomi
jae
add
mov
jle
rcrb
cmp
add
add
scas
xchg
pusha
ja
sbb
xor
or
popf
loope
rorb
cmp
xchg
or
pop
ret
lods
insl
inc
data16
cmp
adc
movsb
and
dec
pop
pop
xchg
sbb
mov
push
add
mov
movb
fcom
orl
fimull
jo
xchg
or
push
hlt
jge
pop
mov
lret
xorb
fdivrl
int
loopne
adc
push
add
mov
fcoml
push
aaa
or
test
add
jl
inc
out
mov
mov
add
lds
loop
mov
sub
movsb
mov
cmp
xchg
in
aam
xor
add
or
mov
xor
adc
test
inc
push
cmpsl
shl
and
add
in
push
and
test
and
clc
push
push
repnz
sbb
cwtl
jae
add
jle
inc
je
and
stos
mov
repnz
inc
lods
adc
sbb
inc
or
push
cmp
push
imul
mov
sub
mov
inc
adc
or
pusha
jmp
pop
jno
add
imul
jp
rcll
addl
add
popf
mov
add
jne
mov
les
and
js
outsl
mov
call
inc
push
pop
inc
repnz
cmp
lock
add
jbe
jl
lret
in
out
sub
add
jnp
or
dec
mov
dec
cmp
enter
jle
mov
cmp
in
and
push
inc
xchg
cwtl
cmpsb
leave
adc
lret
add
sbb
in
ret
add
sbb
fld
call
xchg
imul
xchg
addr16
in
in
sbb
scas
and
pushl
adc
sbb
shrb
lret
xchg
test
sub
inc
sub
pop
daa
adc
int3
les
out
test
sub
sbbb
mov
dec
push
rorl
sbb
enter
push
sbb
dec
jo
ss
mov
add
loop
nop
adc
mov
pop
pop
enter
dec
stos
in
add
sti
mov
sub
push
sbb
lods
lea
ljmp
push
add
loope
aad
scas
subl
test
js
cmpsl
leave
jbe
adc
add
shl
and
popf
push
fmul
lods
pop
jmp
out
jb
xor
lds
test
dec
out
inc
xchg
repz
inc
mov
inc
mov
out
push
push
push
adc
sbb
cmc
mov
push
pusha
enter
icebp
mov
xchg
adc
test
push
push
add
adc
and
aam
sub
jbe
pop
sub
test
stos
add
das
lea
jl
add
outsb
jle
dec
das
rep
push
aaa
add
xor
xchg
call
pop
cmp
sub
xor
sub
out
add
xlat
and
cwtl
aad
lods
call
dec
add
jns
out
cmc
jno
and
xchg
cmpsb
add
sti
lret
test
imul
and
pop
rcrl
xor
int3
mov
cwtl
pushf
adc
rorb
add
lret
xor
int
mull
cmp
scas
fwait
or
xchg
lods
jno
add
mov
imul
pop
xor
mov
mov
hlt
jecxz
faddp
fwait
add
cmpl
ret
cmp
data16
cmp
add
hlt
xchg
imul
aaa
in
push
or
and
pop
inc
cmp
add
into
cwtl
loop
and
popa
sub
jg
push
mov
push
and
filds
inc
or
sbb
jo
les
dec
jbe
aad
mov
add
lret
adc
mov
stos
out
aad
mov
clc
lock
pop
dec
cmp
mov
mov
mov
xchg
pop
and
call
add
jge
inc
lock
add
pop
dec
dec
adc
pop
sbb
out
dec
inc
add
js
adc
sar
lret
fimull
mov
add
xor
adc
leave
mov
push
outsl
and
inc
enter
pop
roll
pop
sarb
cmp
addr16
fistl
hlt
js
call
pop
adc
xchg
add
mov
or
add
imul
push
je
pushf
in
push
add
data16
filds
mov
xor
push
mov
test
and
cmp
xchg
cmp
add
mov
test
add
loope
cmp
xor
push
jb
add
ds
mov
mov
add
ficoms
mov
and
pop
lret
sbb
insb
or
sbb
sbb
mov
aaa
bound
addb
movsl
ret
int
pop
ds
ljmp
mov
test
stc
insb
add
sahf
mov
pop
push
xor
pop
add
pusha
cmpsb
insb
add
dec
dec
lods
add
cli
lea
inc
in
push
mov
and
in
stos
sub
in
inc
jge
ficomps
notl
add
xchg
mov
js
fincstp
icebp
mov
cmpsb
addl
divb
pop
shrl
push
mov
rcrl
ja
inc
repz
out
pop
pop
mov
inc
orb
push
notb
scas
test
sbb
add
xchg
movsl
add
mov
popa
in
add
push
or
xchg
and
add
xor
pop
lret
jbe
add
outsl
lock
aas
mov
cltd
pop
ja
add
jb
mov
xor
xchg
pusha
in
loopne
pop
cmpsb
or
push
lcall
inc
and
ret
add
xchg
addr16
push
mov
dec
out
cld
rolb
dec
aaa
add
subl
pop
jno
add
push
adc
inc
test
andl
sbb
shlb
pop
test
in
clc
add
xchg
xor
xor
dec
add
rorl
and
bnd
aaa
lock
lcall
adc
dec
push
xlat
add
sub
mov
xchg
mov
lret
sbb
or
dec
sub
mov
add
fadd
movsl
js
enter
icebp
xlat
loopne
add
add
ret
push
pop
in
incl
test
roll
nop
sub
push
add
cmp
dec
sub
sbb
call
add
mov
out
loop
cmp
scas
pmuludq
lods
testl
addr16
push
cmp
pop
sbb
fadd
inc
or
mov
rcr
add
mov
xor
pop
mov
loopne
and
cmp
dec
arpl
pop
mov
add
xchg
movsb
mov
add
xor
jo
faddl
xchg
and
mov
jmp
sub
addr16
lret
hlt
cmc
insl
xchg
add
sahf
insb
push
jne
loope
adc
pop
mov
xchg
add
adc
cld
je
jae
dec
ret
lahf
xor
scas
popa
add
lcall
add
jmp
dec
cwtl
dec
add
inc
mov
sbb
add
fdivs
aaa
in
fldl
pop
out
leave
mov
adcb
sbb
rsm
hlt
pusha
add
js
xchg
add
dec
cmp
imul
mov
xchg
subl
hlt
out
pusha
push
frstor
jns
rcrb
mov
aad
mov
pusha
dec
cmpsb
add
stc
out
outsl
mov
lret
les
push
inc
mov
pop
add
add
leave
add
in
pop
add
test
mov
in
mov
insl
xor
negb
add
pop
mov
adc
xor
sbb
sbb
mov
out
mov
aas
addr16
loop
push
add
add
adc
add
xor
adc
fwait
js
lods
mov
adc
pop
dec
scas
jl
cltd
dec
rorb
add
daa
mov
sahf
push
enter
sbb
add
ljmp
add
pop
daa
mov
jl
jno
rorb
outsb
add
inc
enter
or
add
lods
mov
sarl
cmp
in
in
leave
add
fwait
shrb
mov
add
fstl
aas
add
pop
pop
jl
and
pop
imul
ret
add
or
bound
and
dec
inc
lods
add
cwtl
lods
imul
mov
arpl
ret
mov
add
sbb
sbb
add
push
lret
inc
insl
add
inc
ja
rcll
jbe
add
push
mov
add
xorl
lock
repnz
lock
add
mov
or
push
mov
inc
lods
jbe
cmpsl
xchg
ljmp
pop
aam
add
adc
add
imul
add
sub
aas
xchg
cmp
inc
icebp
in
mov
cld
lods
cmp
pop
and
or
mov
je
jbe
mov
pop
aas
add
ret
stc
loop
stos
add
out
push
sub
push
push
sub
rclb
dec
ss
lea
cmp
je
dec
mov
sub
cli
mov
and
jo
add
fnstenv
mov
pusha
pusha
shl
jg
pop
lock
and
cmp
addb
xchg
ja
sbb
popf
adc
add
int
gs
push
mov
lods
sahf
cmp
xor
das
rclb
pop
add
cmp
dec
or
add
jb
cmc
push
sbb
adc
jo
pop
dec
test
and
je
stos
jnp
cmp
fstps
sahf
mov
sbbl
popa
dec
xor
pop
add
ljmp
in
adc
lcall
bound
int
popa
rolb
dec
sub
ljmp
push
sub
int3
add
sbb
mov
xor
pop
lret
push
imul
ret
dec
stos
mov
loopne
push
jno
sub
jno
push
and
jecxz
inc
inc
int3
test
mov
cmpsl
cmp
setbe
mov
pop
jns
jae
add
ja
mov
add
xchg
sahf
or
adc
lods
ds
mov
call
pop
je
sbb
add
and
mov
inc
insb
addb
inc
xchg
sbb
inc
dec
cmpsl
push
add
pop
xchg
int
ret
rorb
dec
movsb
fiadds
call
imul
xor
into
and
fisttps
pop
mov
mov
xlat
jmp
pop
xchg
int
add
xor
repz
push
pusha
pop
cwtl
imul
arpl
lcall
hlt
lods
xor
inc
xchg
sbbb
xchg
je
in
vpcmpeqw
cld
adc
adc
xorb
int
xor
sar
mov
aad
jge
add
out
daa
imul
pusha
repz
int3
aas
pop
adc
pop
jnp
fidivs
ret
add
jp
pop
mov
stos
add
dec
cmp
mov
xor
push
imul
inc
inc
or
and
stos
add
stc
gs
dec
jno
repnz
in
shrb
dec
lds
lea
push
mov
in
push
mov
push
orl
mov
push
add
inc
cwtl
bound
add
add
lds
fldt
add
pop
add
pop
cltd
inc
sbb
popf
mov
cli
inc
outsb
cmp
and
xchg
cmp
push
repnz
cltd
mov
hlt
bound
pop
inc
or
inc
sahf
add
dec
or
xchg
cltd
pop
subb
push
cmpsb
call
cmp
cmpsl
fdivs
and
pop
adc
jae
inc
ss
aad
out
adc
inc
icebp
xchg
add
cmpsl
add
fistl
negl
test
sub
mov
pushf
stc
and
xchg
add
push
sbb
pop
lea
dec
cmp
das
mov
xlat
push
sub
cmpb
loope
cmp
test
add
cmp
sarb
imul
nop
and
xchg
xlat
orl
push
bound
in
add
sbb
inc
nop
loope
lea
pusha
push
add
lret
pusha
or
mov
xor
pop
xor
add
sbb
jns
hlt
mov
mov
lds
push
adc
aam
xlat
or
mov
jle
add
push
fwait
test
stos
mov
enter
jbe
add
push
jns
das
xchg
mov
add
cmp
pop
add
gs
into
popa
sarb
add
xchg
dec
cmp
ficoms
add
in
sbb
je
jle
lcall
jp
dec
ss
pop
jnp
test
cld
das
add
addr16
sbb
roll
cmpb
add
int
popa
fs
adc
jbe
pop
in
push
add
rcrb
mov
stos
repz
andb
fadds
in
nop
lret
mov
in
mov
mov
loop
loopne
aam
jno
cmp
mov
mov
addr16
out
mov
add
mov
int3
js
add
aad
push
lea
pop
push
add
test
inc
into
addl
faddl
sbb
and
mov
xor
xchg
cs
xchg
imul
mov
movb
mov
in
addl
gs
popf
dec
inc
rcll
movsb
pop
mov
adc
sbb
sbb
push
ret
mov
pop
cmp
in
loopne
or
arpl
lret
cmpl
test
cli
add
fadd
fdivrp
add
or
mov
push
adc
cmp
push
inc
add
clc
addr16
adc
das
jecxz
jg
call
mov
or
adc
jo
ficoml
sarl
scas
and
shlb
les
pop
pop
stos
test
add
push
xchg
inc
add
testb
imul
push
adc
add
sub
dec
cmp
sti
fadds
mov
pop
mov
pusha
test
sub
add
jl
roll
push
cli
mov
mov
mov
hlt
pop
lds
mov
in
fwait
add
adc
shrl
mov
xor
pop
out
aas
xchg
out
addb
repz
insl
stos
push
jae
dec
pop
xor
add
mov
lret
sub
lods
mov
fcoml
xlat
cli
mov
xchg
arpl
cmpb
inc
mov
ljmp
push
rcrl
dec
push
inc
aam
mov
cwtl
shll
enter
sar
sbb
divl
add
and
test
jmp
sbb
add
mov
fsubl
jo
nop
push
and
repz
pop
mov
adc
pop
ret
adcb
mov
jnp
std
xchg
and
aam
cltd
adc
xchg
add
dec
or
or
xchg
add
lds
mov
mov
xor
and
inc
nop
fneni(8087
sub
pusha
cmp
sbb
mov
add
movsb
pop
call
cmc
sbb
push
xchg
or
rolb
scas
push
rorb
push
jecxz
jle
pop
push
sbb
lcall
jne
or
add
iret
loopne
sarb
mov
das
rolb
and
mov
or
in
cmp
in
lahf
les
pop
ds
scas
mov
inc
int3
test
add
push
dec
sbbl
xchg
adc
shrb
inc
sub
hlt
iret
add
push
mov
add
lds
in
add
push
adc
sub
jne
add
sub
xor
adc
mov
cmpsl
add
bnd
inc
cmp
test
mov
imul
sub
enter
jg
scas
mov
pop
fisttpll
ljmp
xchg
gs
loopne
add
lahf
mov
add
clc
push
call
xchg
inc
in
ja
pop
insw
subl
int3
cmp
adc
addl
insl
cmp
xor
into
dec
arpl
add
movsb
push
adc
add
xchg
push
ljmp
sub
xor
push
nop
repz
ret
loop
scas
jb
sub
ds
sahf
mov
sti
push
push
clc
ss
repz
inc
scas
jecxz
push
mov
sub
cld
clc
hlt
push
pop
jp
notb
inc
xor
or
in
add
mov
ljmp
adc
outsl
insl
add
nop
push
loopne
icebp
add
jle
xchg
mov
xor
or
popf
in
in
and
gs
test
mov
sbb
push
popf
add
stos
adc
push
cmpl
inc
loopne
push
add
pop
add
and
out
rol
mov
lcall
sbb
nop
sbb
inc
dec
dec
mov
out
adc
pop
sar
xchg
rclb
lods
add
sub
fisttps
and
stos
add
push
dec
repnz
subl
shrb
test
pusha
pop
and
fxch
add
sahf
sub
pop
sbb
adc
out
add
mov
push
roll
xor
insb
push
lret
fisttps
add
jns
mov
add
pop
out
mov
or
loop
push
cmp
iret
icebp
pop
push
xchg
dec
pop
in
repnz
xor
je
mov
leave
push
or
push
mov
dec
insl
and
pop
sbb
sbb
in
add
ja
cltd
jae
or
mov
rorb
adc
add
ror
mov
sbb
rcrl
outsb
add
mov
pop
movb
daa
imul
jne
stos
mov
adc
xchg
lea
xor
push
add
jmp
fbstp
imul
jle
jmp
icebp
or
or
sbb
pusha
inc
sbb
shrb
jg
sub
pop
test
push
in
pusha
lret
pop
andl
dec
dec
jmp
sub
dec
test
bound
sbb
jmp
bound
mov
subb
jo
add
in
dec
cmpsl
pop
repnz
lea
xor
or
dec
out
ret
pop
mov
js
subl
jle
cmp
repz
shll
adc
loope
sbb
push
enter
pop
adc
cmp
js
mov
loopne
sub
sbbb
dec
adc
cmp
or
dec
inc
xor
and
inc
mov
pop
aaa
mov
xchg
and
scas
cmpsl
in
movsb
or
enter
sbb
inc
pop
iret
imul
std
or
cmp
in
pop
iret
sub
sbb
jl
dec
inc
sub
stos
roll
hlt
lret
hlt
mov
rorb
inc
jp
sbb
mov
pop
mov
jecxz
ret
loopne
cld
dec
sarb
nop
mov
mov
or
pop
iret
dec
sbb
sbb
bound
clc
pop
xor
add
test
imul
test
sti
xor
or
jmp
or
and
popa
test
xor
jno
test
jecxz
iret
push
add
add
mov
push
push
lods
ja
or
es
adc
rorl
and
jle
adc
sahf
dec
add
or
add
or
jne
dec
repnz
les
jae
or
ret
xchg
xchg
pop
and
xchg
pop
ljmp
ljmp
mov
lret
les
gs
arpl
bound
xor
dec
test
or
xor
adc
cwtl
subb
rcrb
into
mov
mov
inc
xor
mov
sbb
mov
or
jmp
js
enter
mov
imul
enter
sar
xchg
rorb
or
outsb
or
lcall
daa
jae
sbb
or
mov
es
and
fs
mov
rclb
xchg
dec
testl
sub
inc
or
xor
lret
inc
xchg
mov
mov
test
pusha
and
in
xor
add
pop
cmp
jns
add
jne
push
enter
xchg
sbb
pop
cmp
or
or
ds
mov
add
in
or
in
jl
add
arpl
xchg
sbb
inc
or
cmp
or
fs
mov
and
pop
sahf
mov
cmp
adc
dec
mov
in
inc
ret
cli
xchg
add
je
mov
les
adc
jge
int3
add
mov
add
mov
sbb
sti
mov
xchg
clc
rcrl
ljmp
or
aad
mov
xor
cld
aaa
dec
xor
xorb
loopne
int3
sub
clc
lods
jne
dec
add
lock
adc
sti
rcll
adc
aaa
lret
jb
jne
xlat
mov
mov
xchg
or
mov
mov
cmp
rol
outsb
inc
shlb
repnz
js
or
jns
jmp
mov
cmp
rcrb
xchg
clc
inc
lods
mov
loopne
inc
jl
sbb
inc
push
shrb
xchg
fisttps
xor
push
insl
or
and
pop
adc
xor
mov
xor
add
cmpb
movsl
lock
fwait
inc
xor
mov
jmp
mov
push
jo
arpl
push
mov
or
lahf
pushf
ret
enter
loop
addl
lea
inc
adcl
push
in
pop
pop
cwtl
add
in
sub
mov
lret
movsb
add
lahf
scas
mov
dec
push
pop
sti
push
inc
fwait
rcll
add
cld
sub
pop
cltd
push
cmp
inc
subb
pop
add
aaa
insb
inc
mov
mov
cmp
push
cmp
nop
sub
lea
data16
je
sbbb
cmc
xor
js
fists
or
fidivl
or
mov
pop
add
cli
mov
sarl
sbb
lcall
xchg
jmp
ds
pop
push
push
cmovs
xor
add
aam
jne
sbb
sti
movsl
test
aam
pop
flds
mov
pop
imul
daa
hlt
movsl
sbb
lock
inc
xchg
test
mov
scas
dec
or
cmp
add
or
mov
dec
jo
in
sbb
or
nop
cwtl
sbb
mov
mov
add
jns
pop
mov
add
and
jmp
xor
jl
jae
cmp
stos
sbb
xor
lahf
xorb
pop
sbb
xor
ret
push
jle
cmpsb
sub
les
stos
pop
addr16
adc
mov
dec
adc
mov
outsl
out
int
mov
loopne
push
ja
cmpsb
and
cmp
lahf
dec
jmp
mov
test
sbb
outsl
dec
sub
jecxz
popf
loope
dec
sahf
push
pop
fldcw
sub
adc
sbb
push
sub
ja
mov
lods
push
jecxz
cmp
pop
pop
pop
add
lods
pop
loop
adc
or
add
subl
push
repnz
ret
jns
xchg
int3
jge
sbb
sbb
mov
sub
jecxz
stos
mov
lahf
add
lods
insl
and
push
adc
es
xchg
or
lret
dec
lret
mov
movsb
dec
pop
or
daa
sbb
cmpsb
and
pusha
sti
fsubp
jbe
rcrb
decb
add
pop
lods
cmp
adc
add
cmc
adc
negl
jge
js
ljmp
aam
nop
cmp
sub
inc
add
std
mov
add
imul
sub
inc
mov
sub
loope
inc
repz
inc
in
lock
add
iret
jo
movsb
xchg
addr16
push
adc
loopne
push
mov
mov
cmc
adc
sub
js
or
cmp
shlb
sub
out
sbb
pop
push
xchg
adc
movsb
inc
mov
xchg
mov
and
mov
xor
movsl
je
adc
jno
push
fsub
dec
or
bound
jo
push
flds
inc
mov
xchg
js
fcomip
jb
stc
fwait
in
aaa
bound
xor
sbb
adc
cmp
add
mov
fbstp
idivb
dec
jnp
mov
mov
pop
jmp
add
pop
mov
add
cmp
dec
mov
adc
popf
mov
add
jnp
mov
mov
adc
into
or
xchg
sbb
mov
push
mov
in
test
scas
les
not
dec
ja
pusha
dec
jnp
xor
stos
mov
imul
mov
adc
xor
sub
sti
or
rclb
and
sub
sub
paddq
outsb
mov
push
cmpsl
add
loope
mov
aad
test
push
mov
add
dec
arpl
sbb
inc
fsubs
add
adc
adc
pop
into
in
push
lret
mov
add
loope
mov
hlt
repz
shll
stos
out
aam
es
ud0
jmp
mov
pop
cmp
in
add
int3
popf
dec
shrb
mov
cmpsb
cmp
pop
loopne
or
add
jecxz
jmp
clc
add
cmp
mov
ja
pop
or
xorb
add
fwait
iret
or
js
add
addr16
mov
push
mov
sete
and
xorb
xchg
mov
pusha
call
in
clc
enter
add
cwtl
add
mov
mov
int3
imul
mov
test
add
add
insb
and
add
ret
jns
add
push
dec
je
dec
or
xchg
and
xchg
pop
add
imul
jbe
lcall
leave
mov
and
fs
and
lods
or
sub
mov
push
rol
mov
jecxz
imul
push
lods
add
dec
mov
negl
ret
and
push
daa
or
and
adc
or
dec
hlt
push
add
jmp
cmp
popa
dec
hlt
add
or
jg
add
mov
or
lahf
popf
push
or
inc
fwait
imul
jl
pop
bound
dec
pop
add
inc
test
sub
daa
sbb
mov
cld
daa
xchg
mov
jns
sbb
das
add
push
mov
mov
dec
pop
mov
pusha
ja
lods
adc
pusha
mov
mov
ds
lock
clc
nop
cmp
or
and
testl
inc
repz
and
sub
xchg
push
mov
dec
cmp
gs
sbb
insb
pop
and
in
add
movsl
sbb
dec
or
test
dec
xor
sar
mov
add
movl
cmp
sbb
xor
mov
inc
mov
sbb
push
leave
and
adc
and
dec
ljmp
fwait
addb
je
mov
mov
push
add
aad
adc
lret
cmp
or
call
or
and
cmpsb
inc
pop
in
cmp
push
fcoms
jno
nop/reserved
mov
xchg
or
pop
lgdtl
mov
cmp
push
cmp
pop
jp
mov
xchg
ret
test
inc
aad
add
cmp
dec
mov
push
jmp
mov
inc
shll
lods
fwait
sbb
cmp
sub
mov
push
bound
orb
cmp
push
in
pop
repz
add
adc
mov
fsubrl
daa
data16
sbb
out
xor
mov
cmp
cmp
cmpsl
in
data16
test
rcll
or
or
mov
sbb
cmp
add
add
cmp
js
xchg
ret
imul
dec
mov
sbb
aas
adc
inc
add
mov
cli
add
sbb
push
pop
cmp
rcll
dec
push
push
mov
pusha
mov
cmp
mov
rorb
push
mov
lahf
shll
mov
xor
shrl
sbb
push
cmp
xor
into
xor
pop
test
arpl
pop
aaa
pop
lmsw
sbb
sbbb
fmul
adc
mov
imul
bound
or
fsubl
fsts
or
lock
mov
inc
mov
test
xor
push
or
nop
mov
sub
cmp
orb
les
xchg
jns
dec
jnp
jge
add
adc
rcll
sbb
xor
mov
fwait
or
dec
das
add
push
and
stc
xor
sub
xchg
and
and
xorl
and
dec
aas
and
add
cmp
adc
jl
outsb
hlt
jae
push
out
and
jbe
or
testb
loop
add
adc
test
cmp
enter
out
sbb
lahf
pop
sbb
push
mov
dec
xchg
ja
addl
add
cmp
cwtl
mov
add
sbb
lock
pop
add
mov
test
in
sahf
mov
jbe
and
add
adc
rorb
pop
mov
or
test
jbe
lahf
add
xchg
loopne
movsl
add
jle
rcl
mov
aaa
lock
adc
sub
ja
and
mov
ret
rolb
push
je
push
mov
in
jg
cwtl
mov
int3
jne
stos
xor
sbb
in
add
jae
mov
sbb
push
call
daa
popa
sbb
lcall
mov
xor
ja
or
hlt
out
jmp
lock
mov
xor
iret
imul
clc
pop
add
mov
xchg
dec
rol
cmp
popa
add
dec
mov
adc
mov
adc
or
lahf
rclb
enter
insb
mov
nop
divb
cmpsb
xor
xchg
or
mov
mov
shlb
add
std
pop
xchg
inc
mulb
pop
cmpsb
ds
scas
xor
rorb
ja
add
jmp
cmpsl
rol
sbb
add
inc
in
jge
or
add
jmp
adc
push
call
repnz
add
jg
into
sub
sbb
loope
xlat
cs
enter
or
cmp
sub
movsb
cmp
movsl
notl
cmp
aaa
std
cmpsb
fldl2e
fdivrl
sbb
push
xchg
add
je
mov
cmp
add
orb
gs
xor
pop
or
add
rorl
rolb
sbb
cwtl
aam
and
lock
pop
push
adc
mov
test
fwait
jp
cmp
and
das
mov
std
orl
cmp
xchg
cmp
inc
mov
push
mov
inc
pop
incb
into
sbb
ficomps
or
dec
mov
xchg
xor
dec
and
add
fsubrs
sbb
imul
sbb
shrl
mov
scas
ficompl
shrb
mov
orb
add
sub
test
jnp
pop
inc
imul
adc
lock
sarb
ja
cmp
mov
loope
nop
mov
je
jae
push
add
ja
cwtl
insl
imul
adc
cmp
and
add
loope
lahf
jp
add
stos
add
jecxz
add
pop
das
test
add
imul
dec
lahf
adc
or
or
stos
pop
add
imul
popa
add
push
fimull
outsl
iret
mov
push
fwait
test
cli
mov
addl
aas
pop
shl
xchg
insb
and
iret
ljmp
xchg
loopne
jecxz
jge
add
dec
popf
add
scas
and
stc
push
inc
push
cmp
cltd
rcr
cld
ret
sbb
and
add
mov
push
loopne
out
sub
ljmp
dec
lock
jecxz
jo
sti
jne
clc
into
aas
and
in
xor
and
je
add
rcrl
push
mov
inc
mov
scas
add
rorl
cld
cmp
test
ljmp
out
nop
lea
hlt
loopne
enter
dec
dec
jo
mov
add
or
and
arpl
add
sbb
or
xor
mov
lea
push
inc
out
cmp
inc
and
pop
orl
inc
popf
add
rol
pop
mov
fmull
dec
mov
jb
add
in
enter
xor
cmpsb
lcall
add
int3
mov
dec
add
mov
and
adc
inc
jne
lods
lret
flds
rorb
dec
insb
dec
pop
icebp
movsb
xorb
push
sub
lds
cmp
mov
ja
call
xor
addr16
mov
add
lods
inc
mov
pop
cmp
sub
mov
mov
nop
xor
xor
mov
subb
sub
push
pop
add
or
add
push
rcrb
adc
das
add
pop
mov
add
fcompl
push
mov
outsb
lahf
add
ret
decb
add
stc
dec
adc
bound
and
cli
or
int3
add
sub
mov
push
xor
mov
xor
pop
mov
jg
cmpsl
mov
push
mov
xor
cltd
add
mov
stos
mov
pop
test
nop
call
push
pusha
sub
pop
sub
fwait
cmp
loope
test
cmp
dec
fisubrs
cmpsb
mov
jb
leave
lret
push
jns
xchg
ror
jg
outsl
add
xchg
popa
jge
inc
adc
in
cmp
les
add
lret
hlt
int3
and
jp
icebp
dec
bound
sub
and
cmc
add
xchg
lahf
mov
jnp
adc
fcomps
mov
out
push
jns
out
mov
mov
das
jbe
cmp
or
nop
cmp
lahf
sbb
insl
fmulp
add
sbb
push
aas
and
push
cmp
insl
cmpsb
add
cltd
movsb
add
xchg
popa
push
pop
int3
add
sarb
dec
sbb
dec
inc
mov
in
leave
shll
add
jmp
xchg
insb
and
xchg
inc
je
and
pushf
ljmp
sub
sbbb
incl
pop
addr16
push
loopne
inc
je
leave
sub
les
adcb
out
push
fisttpl
push
xchg
in
aas
jecxz
mov
adc
jns
cmp
jmp
xchg
sti
jg
aas
nop
xor
pop
push
gs
mov
enter
add
out
test
js
in
cmp
hlt
clc
pop
les
pushf
push
cmpb
dec
mov
mov
mov
pop
or
push
or
jecxz
cmp
dec
add
in
fidivs
jbe
fimull
add
dec
pop
ja
sahf
or
xchg
dec
mov
cs
call
in
cwtl
out
inc
mov
or
jo
mov
sarb
fwait
jnp
push
ss
lahf
sbb
enter
out
or
cwtl
push
lds
leave
imul
cld
cli
add
mov
xchg
dec
mov
and
dec
roll
add
xor
sub
push
sarb
xor
mov
mov
sub
add
cld
loop
or
xor
dec
pop
mov
push
pusha
mov
add
mov
fsubrs
inc
jmp
fs
mov
loope
add
and
mov
popa
mov
test
mov
shll
cltd
mov
cltd
add
sbb
jecxz
add
fldt
fiadds
into
mov
ss
add
adc
cmp
pusha
add
add
cmp
iret
mov
shrl
enter
jnp
mov
and
bnd
fs
add
lcall
add
cmpb
and
pusha
xor
push
in
insl
add
mov
outsb
mov
mov
or
add
and
add
jg
push
rorl
adc
and
rorl
dec
test
and
shlb
push
cmpb
popa
es
shrl
int
push
lock
jo
imull
dec
cmpsl
nop
insb
mov
es
sub
and
out
mov
int3
adc
pop
decb
jmp
adc
add
es
dec
adc
in
cmp
inc
ffreep
cmp
std
add
cmp
xor
sbbb
xor
sti
faddl
in
inc
and
pop
adc
ret
inc
add
xor
je
inc
jns
test
mov
stos
lret
icebp
cmp
xchg
aaa
out
jno
addl
mov
add
mov
lock
movsb
pop
add
jo
mov
fidivl
add
lods
in
repnz
lock
adc
adc
out
nop
mov
loopne
cltd
cmp
lret
cld
jns
shlb
inc
or
movsb
or
add
and
and
mov
pop
add
sbb
loopne
lcall
push
insb
test
adc
pop
xchg
jno
cmp
sub
outsb
mov
sbb
loop
stos
fadds
mov
and
and
fsts
sub
addb
repnz
sub
mov
sbb
outsl
xor
mov
add
aad
mov
divb
dec
int
lahf
add
add
push
add
test
add
push
adc
cwtl
mov
pusha
imul
cltd
sbb
push
test
ret
outsl
fadds
sub
ja
xchg
push
mov
cs
jge
pop
testl
adc
inc
fcompl
and
mov
push
lock
rorb
in
or
aas
pop
int3
or
jne
mov
movsl
scas
cmp
add
lock
stos
js
jbe
cld
test
jb
add
cs
push
lahf
test
fbld
inc
inc
pop
cltd
cld
add
mov
adc
lahf
add
popa
add
push
jp
dec
push
pop
pushw
add
cmp
repz
add
adc
or
imul
sbb
mov
sbb
xor
lds
aaa
pop
ret
jb
and
les
and
xor
mov
push
add
xchg
jnp
pusha
dec
loope
aaa
pshufw
cwtl
orb
cmc
mov
ret
jp
pushf
mov
push
int
cmp
rorl
fdiv
repz
testb
leave
add
es
mov
lds
imul
mov
dec
cmp
cmp
mov
test
loope
sti
mov
jmp
and
loopne
xchg
mov
les
sbb
lods
push
ror
jns
add
cmp
or
jecxz
cmp
cmp
or
pushf
enter
mov
je
jp
and
or
add
add
jle
ret
aad
mov
lock
ss
lock
jecxz
add
adc
and
mov
pop
add
out
movsl
sub
mov
cld
or
add
out
in
add
sbb
cmp
cmp
or
shrl
and
pop
and
xchg
popf
loope
pop
loop
cmp
sbb
lahf
or
cmp
xor
inc
add
inc
fildl
and
or
sbb
and
out
jecxz
int3
lret
push
int3
cmp
or
xor
dec
loope
sub
sub
or
push
ret
test
xor
jecxz
in
add
xchg
divl
and
or
jae
fisttpl
add
mov
pusha
cwtl
fmulp
push
inc
flds
mov
fcoms
dec
mov
sub
addb
add
or
and
not
mov
into
jp
inc
lds
rcll
mov
cmp
add
or
neg
test
das
sbb
mov
adc
hlt
lidtl
dec
enter
testb
or
push
sahf
mov
mov
cmp
cmp
cwtl
inc
popf
into
lcall
addr16
shl
dec
xchg
and
mov
jo
mov
out
dec
cwtl
jmp
xlat
imul
imul
push
movsb
xor
mov
xor
cmp
lret
add
aas
mov
mov
push
mov
dec
xchg
insb
popf
lock
add
leave
leave
fs
fiadds
sub
mov
into
pushf
push
cwtl
rolb
cmp
sub
cmc
dec
jb
cmp
or
jp
add
sub
add
imul
jmp
inc
add
jb
insl
adc
add
rcr
sub
add
fmul
sub
add
out
push
jecxz
lods
loopne
fadd
push
call
inc
inc
dec
cmp
xor
mov
pop
aas
ret
inc
lock
call
sbb
xchg
jnp
lock
xor
faddl
nop
fld
int
sar
sti
sbb
push
jge
add
mov
in
jle
or
dec
dec
icebp
shr
add
add
push
add
inc
icebp
cli
cmp
sbb
xchg
imul
or
sbbb
cmp
and
mov
nop
push
jbe,pn
dec
or
push
fwait
sub
add
inc
call
sbb
imul
dec
ret
sub
add
test
push
add
test
mov
movsl
pop
jmp
pop
xchg
or
push
push
std
push
push
cmp
cmpsb
jle
mov
lock
mov
sub
sbb
add
jl
shll
ljmp
push
mov
pop
sbb
incb
cmp
add
popf
push
cwtl
xchg
add
scas
xchg
mov
and
lret
divb
mov
enter
andl
cmc
xchg
add
sbb
mov
mov
adc
adcb
insl
and
and
adc
mov
dec
imul
push
test
dec
cmc
xchg
nop
or
sub
add
outsb
sarl
fiadds
sbb
and
popa
dec
adcb
and
xor
cmp
es
or
and
adc
lock
icebp
stos
leave
push
fisubrl
add
pop
je
in
leave
cmp
add
sub
xchg
test
ljmp
clc
xchg
add
push
inc
push
xchg
lock
int3
add
jne
add
icebp
xchg
xor
mov
adc
aas
add
imul
push
and
or
and
nop
test
or
mov
mov
mov
lret
out
cmp
mov
testb
stc
lahf
imul
mov
lock
and
dec
pop
fs
xchg
shl
mov
jp
mov
incb
add
mov
in
outsl
add
xchg
arpl
addb
mov
cmp
add
lahf
mov
aad
es
adc
lret
adc
cld
addr16
jns
bound
or
lret
adc
adc
push
adc
lret
pop
enter
popf
push
test
ljmp
inc
fsts
push
pop
and
sub
add
sbb
add
jp
push
rolb
add
sub
mov
jne
test
pop
addb
outsb
sub
test
adc
test
and
cmp
pop
fldl
mov
add
lds
fists
sbb
xchg
pushf
pop
dec
add
adc
jge
or
push
push
es
xlat
idiv
add
pop
call
movsb
cmc
pop
adc
inc
fadd
xchg
mov
jno
loope
inc
in
out
or
mov
jno
addb
das
inc
and
add
mov
cld
loope
add
insl
fidivl
pop
stc
les
iret
add
inc
js
testb
cwtl
jecxz
pop
and
inc
mov
or
cmc
push
jns
outsl
add
movsl
arpl
sub
fwait
push
fists
adc
shr
sbb
popa
fsubr
and
push
cmp
cmp
mov
dec
sbb
and
aaa
mov
fldl
adc
loop
jne
xor
xchg
mov
jb
dec
insl
xchg
aas
arpl
dec
das
repz
subps
push
mov
push
test
pop
arpl
mov
xor
add
xchg
adc
sti
fmuls
xchg
mov
push
mov
add
lcall
cmpl
cmpb
push
mov
rorb
repnz
jne
pop
pop
subl
jmp
pop
xchg
xchg
and
mov
add
jmp
in
jo
mov
fsub
inc
mov
out
fsubs
and
push
and
mov
push
ljmp
loopne
loop
push
cwtl
pushl
das
dec
in
xlat
ljmp
dec
and
in
add
mov
rcl
out
add
sbb
inc
cld
add
xor
pop
gs
add
mull
addr16
js
dec
jecxz
mov
sbb
push
pusha
mov
shr
mov
add
mov
xor
add
pop
mov
pop
fcmove
aaa
or
inc
addl
xor
rclb
pop
ds
psllw
imulb
loope
mov
push
xor
xorb
fbstp
add
add
and
mov
je
add
adc
mov
scas
inc
in
add
push
loopne
outsb
test
jle
fimuls
lret
and
insb
loope
inc
lock
push
mov
add
jmp
lcall
mov
mov
pop
jne
sbb
push
lret
or
push
cmp
add
movl
add
popl
enter
add
sti
scas
lods
inc
les
sub
mov
loop
lds
mov
daa
inc
push
mov
lods
rorb
add
add
xchg
pop
push
xor
or
test
popl
adcb
jmp
inc
xor
inc
mov
dec
pop
cltd
rorb
cmp
push
adc
and
pop
lds
push
nop
insl
js
push
cmp
jno
mov
subb
cmp
int
bnd
cmpsl
xchg
or
and
mov
fcomps
mov
add
jne
pusha
rclb
add
movsl
xchg
pop
add
outsb
iret
outsb
loopne
sti
sub
sahf
test
inc
das
mov
mov
add
jmp
cmp
xchg
add
sub
dec
inc
xor
push
dec
or
jge
add
fwait
push
adc
xor
add
cmpb
cli
add
popa
addb
scas
test
xchg
mov
push
xchg
sarl
jp
ja
mov
sub
std
enter
xchg
add
outsl
mov
mov
xchg
push
jmp
ret
in
xchg
jnp
fidivl
rorb
add
add
adc
into
push
add
push
mov
lea
ljmp
fsubs
out
sub
inc
fiadds
notb
jg
rclb
sbb
es
outsl
jmp
and
int
xchg
xchg
push
add
mov
pop
leave
inc
aaa
cmpsb
push
adc
mov
ds
or
mov
gs
add
popa
sar
lods
sbb
filds
lahf
test
ljmp
add
jl
and
call
or
add
lcall
std
popa
and
outsb
sub
push
das
mov
xchg
push
lret
mov
sub
or
fadds
add
das
shll
add
pcmpeqw
sub
or
ja
repz
pusha
mov
loopne
pop
fldl
add
cmp
xlat
and
and
and
jne
inc
int
cli
lret
dec
add
inc
mov
push
inc
loop
call
jnp
push
sub
pushf
in
jl
es
lods
in
lahf
cltd
addr16
inc
mov
orb
mov
xchg
lds
mulb
mov
add
shll
adc
jp
lret
add
inc
adc
pushf
xchg
add
or
push
cmp
add
mov
and
xor
jnp
mov
mov
cmp
test
xor
jno
mov
add
je
out
xorl
outsl
imul
sub
mov
gs
add
cmp
or
sbb
fwait
add
pop
lea
pusha
push
xor
xor
adc
sbb
mov
xor
dec
push
xor
xor
adc
and
add
sub
fs
es
bound
iret
xchg
mov
adc
cmpsl
xorb
add
or
or
pop
jnp
sub
add
into
daa
mov
arpl
push
in
sbb
or
sbb
push
xchg
cmpsb
add
data16
outsb
testl
inc
in
imul
sarb
add
xor
mov
inc
mov
or
or
nop
mov
xchg
aam
fs
xlat
lcall
inc
sub
mov
push
popf
xchg
jne
cmp
pop
sub
jnp
mov
outsl
lock
inc
pushf
push
test
mov
cmpsb
adc
dec
leave
sbb
cmp
dec
fsubrs
movb
sbb
xor
ljmp
mov
mov
push
popf
loop
jns
loope
and
clc
les
mov
das
outsb
lret
mov
and
es
cld
fs
push
enter
mov
push
addr16
pop
or
push
es
negb
cmp
jp
fistpl
subb
and
xchg
test
sub
pop
xor
adc
mov
push
ja
adc
mov
cmp
add
roll
xchg
push
pop
add
in
loope
add
push
inc
push
push
dec
inc
pop
sub
fcom
shll
mov
ret
add
and
add
xlat
xchg
lds
and
gs
dec
loopne
movsl
pop
cld
add
mov
sbb
cmp
add
int3
mov
push
sti
mov
xor
bound
xor
mov
adc
pop
out
adc
add
jo
inc
fs
and
incl
shlb
and
inc
adc
inc
adc
bnd
add
repz
nop
movsb
pop
bound
mov
scas
ja
add
inc
mov
sahf
xor
add
mov
fiadds
xchg
push
add
mov
pushf
pop
xchg
les
mov
jo
push
sub
fs
es
mov
in
nop
and
xor
pusha
mov
bound
jmp
mov
add
sbb
add
stos
mov
je
test
scas
shll
adc
add
mov
and
and
sbb
xor
push
dec
in
add
inc
movsb
orb
nop
xchg
sbb
add
xchg
dec
ficoms
aaa
pop
call
add
leave
xchg
dec
pop
adc
sbb
fdivrl
xlat
cmc
add
xor
fsubrs
outsb
mov
sub
ret
loopne
test
mov
sarl
dec
add
pop
inc
pop
pusha
add
rorb
xlat
jg
sbb
popl
push
add
ficomps
add
xchg
or
xor
inc
sbb
and
test
cmp
inc
xor
lds
lahf
mov
outsl
push
pop
out
add
or
cwtl
add
inc
addr16
dec
test
repnz
insl
inc
xor
lea
clc
xor
or
out
pop
sub
push
pop
nop
or
scas
shrl
sbb
in
sub
aad
das
jg
mov
adc
stos
cmpsb
pusha
loopne
movsb
das
mov
dec
ds
fcmovnb
jbe
repnz
popf
mov
mov
jl
fiaddl
xor
insb
adc
xchg
nop
xor
pushf
jmp
jb
xchg
pop
xor
add
dec
fdivl
sbbl
xor
add
jge
pop
sbb
jecxz
shll
scas
out
or
mov
add
xor
jmp
adc
sarb
adc
or
sbb
push
jmp
sahf
sub
aas
and
add
lahf
rcrb
xlat
movsl
add
mov
out
xchg
es
fistl
jns
fiadds
jae
push
jmp
pop
outsb
stos
add
pop
and
loopne,pt
loop
xchg
nop
mov
and
pop
arpl
pushf
es
jg
fldt
dec
add
cwtl
nop
mov
push
movsb
cld
icebp
xchg
push
add
fwait
or
jmp
add
mov
mov
and
jl
enter
or
jae
mov
lahf
stos
pusha
call
jle
or
mov
mov
sahf
sar
mov
cmp
add
cmp
adc
bound
pushf
bound
xor
lods
iret
add
xor
mov
cmp
pop
add
push
std
cld
aad
pop
movsl
or
jbe
add
movsb
inc
popf
or
test
jb
in
inc
enter
pop
add
add
ja
inc
jo
es
and
pop
jne
dec
shlb
add
rol
or
xchg
push
nop
adc
or
stc
das
arpl
or
mov
xor
adc
insb
add
cmp
xchg
add
mov
popf
dec
inc
xchg
cs
add
lods
push
cmp
xchg
cmc
sbb
sbb
les
les
inc
lcall
loopne
or
das
mov
hlt
mov
cltd
ficoml
xchg
sub
loope
clc
lods
push
into
add
add
adcl
xor
nop
add
pop
cltd
xchg
out
sbb
pop
pop
int
mov
shrb
or
mov
sbb
dec
jp
leave
pusha
cmp
jmp
or
stc
push
pop
js
add
mov
add
lods
ljmp
pop
or
movsw
xor
lcall
cs
cmp
mov
sub
stos
push
add
inc
cltd
add
pop
fiadds
sbb
cwtl
int3
rolb
je
add
and
lret
or
xchg
shll
clc
and
in
sbb
into
fldenv
cltd
dec
fwait
sub
jno
sub
adc
popa
data16
add
cmp
scas
mov
xor
mov
stos
xchg
subb
mov
call
stos
mov
cmp
dec
lods
push
scas
movsb
mov
aad
fsubrp
pushf
loopne
test
cmp
pusha
ret
call
add
fistl
push
mov
cld
add
sub
push
sub
xchg
or
ljmp
and
sbb
mov
cmpsb
lock
repz
add
pop
popa
stc
push
lahf
shll
push
pop
mov
cli
int
or
sbbb
pop
pop
popa
inc
popf
add
xor
jecxz
bnd
test
dec
add
cmp
out
pop
jbe
or
test
gs
mov
adc
maskmovq
push
mov
mov
stos
xchg
inc
pop
pop
les
xchg
pop
sub
adc
adc
arpl
cmc
out
jae
pop
push
jb
lcall
jns
out
shr
mov
stos
adc
xchg
adc
inc
pop
inc
mov
xor
mov
push
add
ret
test
int3
icebp
loope
sbb
jmp
push
cmp
pop
insl
inc
add
mov
sarb
addl
and
xchg
jbe
sti
pop
rolb
popa
dec
jo
mov
mov
cmp
add
bound
vpsrld
mov
andnps
lret
pop
leave
in
arpl
push
sbb
je
mov
loopne
or
xor
mov
sbb
loope
movl
mov
mov
mov
push
push
int3
sub
cwtl
pop
or
hlt
xchg
adc
mov
inc
lea
mov
jecxz
push
pusha
dec
in
mov
dec
shlb
add
sbb
or
xchg
roll
repnz
dec
add
mov
push
outsl
shl
and
inc
arpl
lret
xor
xchg
push
mov
clc
push
jg
cmp
mov
inc
xor
xchg
mov
into
repnz
leave
out
xchg
push
mov
js
dec
notb
rcrb
popf
insb
sbb
jnp
jp
add
out
nop
testl
jae
cltd
in
rorb
mov
or
inc
icebp
cmc
hlt
outsl
jne
pop
mov
loope
xor
add
out
pop
dec
mov
lea
add
push
in
ret
adc
add
xchg
lods
clc
pop
in
mov
mov
sbbl
inc
insb
mov
xor
and
add
xchg
cltd
mov
sti
and
add
rolb
inc
sbb
or
xchg
and
ja
daa
ss
rcrb
gs
in
mov
adc
sub
add
or
mov
mov
call
call
sarb
bound
daa
add
mov
fstpl
push
jno
fdivs
or
inc
jnp
xchg
and
jle
movsb
mov
out
xor
jb
add
jo
ds
jl
mov
add
cwtl
add
cmpb
aam
and
lahf
add
dec
shll
clc
add
jb
icebp
dec
rorl
je
mov
add
test
repz
add
jae
scas
ret
add
fs
lock
call
aam
push
and
inc
leave
add
addb
add
aas
aaa
das
dec
adc
and
add
stc
jmp
bound
inc
out
nop
inc
xor
pop
xlat
sbb
add
sub
add
aad
xor
or
pop
dec
jp
push
shl
arpl
rorb
add
popa
push
jae
call
movsl
mov
cmp
sbbb
adc
in
pop
push
addb
stc
inc
push
pop
sub
add
inc
pop
test
adc
test
adcb
mov
stos
adc
mov
sub
cmp
inc
add
dec
in
fstl
and
sbb
int3
stc
mov
dec
push
icebp
addb
adc
sub
inc
xchg
cltd
and
das
loope
or
insl
xchg
shlb
lods
cmp
frstor
push
cmp
mov
mov
push
sbb
add
and
fsubs
cmp
aad
es
notb
add
xor
ret
rol
rolb
pop
sbbl
jl
add
iret
adc
leave
jo
and
in
add
jnp
clc
adc
cmp
push
and
std
arpl
mov
adc
mov
jns
cmc
repz
cmpb
inc
rolb
and
in
xchg
cmp
insb
dec
dec
fsubrl
mov
add
cwtl
sbb
insl
fmull
pop
shrb
inc
jge
popf
sahf
adc
dec
out
add
ss
cli
mov
popl
dec
sub
pop
sub
imul
inc
mov
roll
lods
add
nop
mov
adcl
add
sbb
popa
push
enter
aas
push
and
test
push
inc
mov
es
jmp
and
dec
fisttpl
out
add
mov
fmuls
or
incb
or
mov
mov
incl
in
mov
push
push
lret
mov
xor
ss
cltd
mov
test
xor
push
loop
dec
and
push
lar
lahf
or
mov
ljmp
mov
ds
add
jmp
add
and
fstpt
rorl
pop
sarb
sbb
mov
and
push
add
jae
mov
or
lods
xchg
pusha
xchg
call
pop
daa
mov
pusha
inc
cmp
stos
sub
adc
pop
sbb
lods
jecxz
daa
add
lods
add
adc
fiaddl
subb
imul
mov
imull
add
cmp
arpl
cmpsb
nop
mov
xor
mov
xchg
mov
lea
clc
add
adc
cmp
rcrl
mov
scas
imul
out
adc
cmp
add
mov
jecxz
adc
jo
xchg
add
add
nop
loop
or
nop
cwtl
xor
repnz
jmpw
cmp
jbe
jl
shl
pushf
mov
pop
dec
jge
add
stos
scas
fcomi
add
mov
ss
sub
inc
ficoms
cmpsl
loope
shl
mov
jno
stc
mov
mov
orb
shlb
mov
or
int
addr16
or
xor
push
icebp
enter
mov
add
clc
jbe
add
push
loop
jle
sbb
mov
or
fldt
mov
jecxz
adc
sbb
jp
cltd
mov
or
add
cmpl
and
push
push
testl
fiadds
xlat
mov
inc
mov
int
cltd
test
sbb
push
sub
mov
adcl
fldcw
packuswb
add
mov
mov
es
and
mov
add
and
inc
js
mov
rcrl
negb
sub
loope
in
add
mov
cmp
addr16
cltd
ret
rolb
mov
mov
mov
and
push
sbb
push
mov
pop
int3
cmp
and
sbbb
hlt
mov
shlb
cmpsl
jle
dec
rorl
mov
push
sub
mov
lods
std
mov
in
add
fcomps
push
gs
movl
push
push
add
mov
movsl
or
insl
mov
xchg
add
fwait
and
pushf
dec
mov
adc
sbbb
in
jg
addl
jnp
mov
movsl
dec
out
mov
push
add
or
call
mov
jbe
lahf
add
test
cmpsb
add
add
jge
pop
xchg
jg
scas
or
xchg
or
mov
add
jbe
mov
decb
or
aaa
adc
mov
xchg
insl
inc
stos
inc
add
std
xor
dec
sub
test
sbb
outsb
or
add
testb
pushw
in
cli
add
mov
add
lods
sub
push
xor
out
lea
add
in
aas
cltd
jnp
leave
push
mov
movsl
pop
sbb
xorb
in
loope
sub
rcrl
test
lods
sahf
sub
and
popl
jmp
adc
add
jno
cwtl
mov
stos
mov
jecxz
lock
ret
aaa
rclb
sbb
push
and
shlb
fcomps
ljmp
aam
xor
rcll
sbb
sbb
sbb
fiaddl
jns
xchg
jb
or
mov
add
out
jmp
sub
mov
clc
inc
scas
in
loop
push
ds
mov
lahf
push
aad
loopne
rorl
out
roll
cmp
lock
xchg
or
cmp
sbbl
add
addb
mov
ret
in
sub
jecxz
cwtl
push
fmul
and
add
xor
divb
sbb
orl
add
lock
and
and
xchg
fisttpl
xor
or
movsb
cmpsb
add
mov
sub
and
sub
add
inc
in
add
loope
aad
and
inc
ds
cmpb
movsl
and
je
add
adc
lods
hlt
cmp
rol
cmpb
movsb
sub
add
stos
push
inc
add
lcall
sub
adc
testb
inc
ja
xchg
mov
insl
adc
add
and
adc
and
add
mov
addb
mov
add
pop
add
cmp
rol
and
mov
test
pop
js
pushf
xlat
push
dec
mov
add
insb
cmp
and
add
sub
roll
xor
xchg
xor
sarb
jo
jo
add
es
push
insb
ss
xchg
xor
je
insl
jmp
jnp
inc
movsb
pop
and
in
and
sub
push
roll
icebp
mov
add
mov
les
xor
jmp
mov
imul
dec
in
rcrb
je
stos
inc
lods
jo
adcb
out
test
sbb
add
loopne
adc
xchg
addb
adc
and
push
push
lcall
cld
mov
test
aas
sub
mov
jns,pn
test
ret
nop
inc
ljmp
sub
subb
gs
pop
push
sbb
xchg
sub
xchg
sbb
cld
lea
xchg
push
xchg
loopne
clc
nop
fsubr
loop
adc
add
sbb
and
std
add
lcall
cmp
in
jnp
test
cli
and
add
add
dec
mov
pop
icebp
mov
pop
decb
rcrb
jno
mov
notl
out
jb
data16
jae
mov
lcall
add
shr
insb
adc
cmpb
add
add
and
lahf
sub
insb
rolb
nop
out
inc
sahf
or
xorb
std
bnd
in
icebp
mov
add
inc
adc
mov
sbb
jp
or
dec
jl
adcb
call
sbb
jge
rcll
push
xor
aam
add
es
repnz
push
xchg
add
push
add
jnp
sub
adc
add
or
outsb
add
adc
lahf
or
aam
sub
push
and
imul
jl
add
xor
xchg
push
and
or
iret
sub
jmp
sti
add
aaa
out
xchg
test
loopne
xorl
in
mov
add
movsb
in
pop
aaa
and
push
push
js
data16
nop
add
mov
pushf
mov
push
sub
stc
nop
push
loop
in
or
dec
lea
adc
rolb
add
adc
aam
movsb
rclb
test
xchg
and
dec
addb
loopne
push
fdivrl
add
mov
sub
inc
sub
out
int
and
jmp
fnstsw
or
rorb
outsl
adc
cltd
les
pop
cmp
sbb
scas
add
fxch
dec
sbb
das
int
int3
subb
add
dec
xchg
sar
loope
sub
hlt
rolb
std
rcrb
cli
mov
rcrb
pcmpeqb
jg
andb
mov
mov
xchg
orl
pop
xor
fimuls
lods
orl
sub
add
inc
int
and
push
ja
popf
andl
push
jge
movd
lds
pusha
add
mov
in
push
and
adc
sbb
roll
fdivs
and
mov
sub
rcr
pavgw
int3
orb
xchg
mov
dec
mov
insb
push
add
jl
cltd
stc
mov
inc
aam
mov
dec
inc
add
lret
decb
jo
rclb
faddl
mov
pop
cmpsb
pusha
and
mov
pushf
ds
xchg
lahf
xchg
pop
andb
fwait
sti
push
or
sub
cli
cs
fcoms
dec
jg
sar
sbb
cli
loope
or
mov
add
dec
push
stos
add
inc
xchg
arpl
add
out
pop
pusha
in
ja
pop
sub
sbb
shr
out
test
movb
or
lock
clc
icebp
push
xchg
clc
stc
in
xchg
xor
add
pop
jno
gs
sahf
arpl
pop
add
add
pop
and
mov
add
adc
bound
pop
stos
inc
jb
fs
add
fcomps
push
add
adc
insl
jge
or
adc
xchg
adc
inc
and
lcall
cmp
add
sbbl
mov
loopne
pushf
setns
add
dec
mov
ljmp
movsb
scas
call
push
subl
mov
xor
popa
cmp
adc
cltd
cmp
adc
jg
rcl
aas
ds
add
bound
and
imul
shlb
push
mov
xchg
mov
pushf
pop
cwtl
push
sahf
call
lret
imul
test
mov
ds
bound
cwtl
sub
push
inc
xchg
jmp
xchg
add
sbb
iret
cs
popf
fmuls
xchg
fcomip
xlat
frstors
lock
out
push
or
add
inc
out
sahf
push
imulb
mov
cld
push
aad
cmp
push
add
xor
pop
jae
sbbl
rcrb
popa
add
test
mov
cmp
mov
and
pushf
jnp
push
dec
xchg
add
sbb
and
ret
call
cli
inc
shlb
into
add
xor
push
cmp
sbbl
or
pusha
test
sub
mov
and
push
stos
and
cmp
xchg
xorb
push
rorb
movsb
add
or
add
outsl
or
mov
add
scas
xor
stos
sysexit
inc
data16
pusha
add
enter
out
and
mov
cmpsb
add
fisttps
and
jge
add
adc
push
js
adc
sub
dec
adcl
sbbb
mov
leave
lahf
push
or
lret
mov
add
adc
pop
cwtl
jnp
cmp
ret
orl
clc
push
nop
xor
pop
jmp
cmp
or
pop
call
inc
daa
add
push
add
dec
push
dec
dec
dec
call
mov
hlt
rol
cltd
fadd
add
cmp
stos
lahf
inc
pop
dec
jbe
add
push
xchg
fisttps
xchg
cmpsb
lods
pop
add
sub
scas
cld
add
add
cwtl
verw
push
test
sbb
push
xor
add
mov
ljmp
addr16
insb
add
and
pop
pusha
cmp
mov
jmp
aad
fldln2
mov
ficoms
cmp
jne
pop
mov
sub
sub
sub
mov
sbb
xor
jp
xor
or
xchg
stos
cli
subb
dec
fiadds
ror
push
loope
cmpb
imul
dec
cmp
nop
jle
scas
pop
fistl
adc
xchg
out
inc
dec
sub
push
adc
mov
cmp
add
pop
sbb
stc
and
loopne
and
adc
add
loop
imul
xor
push
jbe
cmp
orl
and
fs
iret
add
jbe
inc
mov
jmp
and
add
or
das
dec
pop
pop
shrb
movsb
mov
sub
mov
stc
fldl
dec
xor
push
movsb
sti
sub
incb
lods
mov
hlt
push
push
pop
std
add
ret
data16
call
andl
jp
push
pusha
adc
call
cli
lock
cwtl
push
cmpsl
jecxz
icebp
ljmp
xchg
dec
fcoms
ret
sbb
xchg
fnstsw
sub
hlt
mov
cs
pop
fiaddl
pop
adc
fucomi
je
sbb
and
xor
lock
push
and
test
mov
add
loop
xlat
cmp
or
add
pop
arpl
lds
mov
inc
sbb
sub
add
cmp
stos
mov
and
aas
xor
insl
enter
inc
xchg
pop
das
fwait
or
dec
dec
jmp
inc
lret
jne
sub
fs
dec
nop
hlt
xchg
adc
jl
push
rcll
cld
dec
pop
sub
mov
mov
push
aaa
rolb
std
sbb
mov
addb
je
cmpsl
add
push
repnz
inc
pop
sbb
or
pop
addl
hlt
cmpsb
mov
clc
sahf
adc
enter
and
cmp
xchg
test
push
nop
scas
and
les
loopne
pop
fistl
lahf
lret
jecxz
stos
or
add
aad
inc
add
add
mov
out
push
mov
in
int
pop
push
pop
mov
pop
shr
data16
lods
add
or
daa
mov
or
cltd
roll
aad
push
popf
cld
or
or
loope
or
inc
add
pop
sbb
add
mov
cmp
xor
mov
lock
ljmp
add
xorb
aaa
sbb
dec
xchg
push
lock
sahf
pop
xor
mov
mov
cmp
add
in
add
mov
int3
jbe
sbb
xor
filds
adc
popl
rolb
out
popf
add
or
jae
dec
pusha
into
fdivs
inc
in
nop
pop
dec
and
inc
bound
sub
ja
psubb
push
adcl
rcl
mov
in
or
cmp
and
rclb
into
pop
sub
arpl
popa
fcmovnb
insb
add
jo
int3
aam
xor
add
pop
fs
pop
cs
or
sub
lret
nop
cwtl
js
pop
pop
or
and
adc
insl
lret
icebp
pop
sub
cmp
cmp
lcall
mov
sbb
add
out
rclb
and
or
xchg
lock
es
cmp
inc
daa
ja
loope
clc
test
add
dec
dec
push
xchg
loopne
das
loop
mov
adc
cmp
mov
lea
add
in
lcall
loope
or
les
xor
xchg
mov
jo
add
cmpsb
out
cli
adc
mov
adc
xchg
cmp
xor
test
js
aaa
movsl
and
xchg
jecxz
xchg
push
mov
add
add
dec
repz
sbb
stos
sbb
adc
aas
push
adc
mov
repz
test
xor
je
mov
pusha
sti
sbbb
mov
pop
add
or
push
cmp
mov
je
sbb
adc
xorl
lock
or
enter
cs
call
mov
pop
pop
rorb
mov
fsubrp
sbb
ja
or
mov
and
and
push
rclb
add
insl
add
cmp
and
ret
mov
repz
fsubrs
sub
repnz
mov
mov
cmp
cmp
xchg
adc
cmp
push
cmp
in
or
cwtl
xchg
mov
fucom
cmp
xor
cmp
or
push
cld
sbb
mov
push
aas
ss
sub
subl
mov
xor
adc
mov
pop
jp
int
add
insl
movsb
rcr
rolb
jne
or
mov
inc
data16
mov
push
pop
loopne
cwtl
pop
adc
add
sbb
inc
ljmp
out
jns
mov
daa
xor
das
pusha
test
dec
mov
nop
nop
adc
pop
incl
cld
jecxz
push
add
out
sbb
mov
inc
pop
mov
or
add
mov
and
ret
and
call
xchg
lahf
lods
test
les
rclb
fmull
loopne
add
sub
push
and
pusha
mov
add
xchg
aad
or
pop
pop
pop
das
std
in
iret
fldcw
cmpsl
sbb
mov
ds
xchg
mov
cmp
add
outsl
xchg
and
mov
fldenv
shlb
add
mov
add
jno
add
pop
dec
outsl
push
shll
xchg
xor
pop
fs
add
ss
push
xchg
int
or
xchg
cmpsb
mov
inc
and
in
or
fwait
imulb
add
sbbb
mov
cmp
jle
lret
cmc
jae
cli
xchg
and
scas
cmp
jno
cmpb
aam
lods
pop
adc
iret
subb
xchg
aas
mov
cli
xchg
daa
mov
movb
ds
adc
or
in
dec
push
or
xchg
and
imul
push
ja
jo
cs
adc
or
xor
rorb
push
mov
scas
fisttps
out
sbb
and
mov
push
cmp
roll
icebp
imul
push
test
jbe
dec
das
jne
add
xchg
jle
dec
push
test
test
mov
cmp
in
jbe
add
adc
xchg
push
lods
add
sub
dec
add
das
jle
es
adc
dec
sub
sbb
push
adc
sti
pop
sub
xor
lods
std
imul
xor
in
sub
test
fcomps
ljmp
aam
dec
int3
xchg
sti
inc
xchg
mov
inc
cmp
sbb
arpl
add
inc
xlat
popa
dec
mov
sbb
mov
xchg
int
add
or
pop
sbb
call
or
movsl
mov
into
sti
add
fsts
scas
arpl
lds
jns
mov
and
add
into
mov
clc
addl
pop
xor
pop
mov
rolb
nop
xlat
roll
pusha
int
mov
movsl
mov
inc
xchg
mov
push
or
or
scas
cli
rol
dec
mov
pop
add
aas
push
sub
shlb
insb
pop
add
fisttpl
fwait
int
inc
mov
outsb
pop
inc
pop
fildl
xor
shlb
cmpl
and
and
rorl
jo
movsl
les
and
repnz
fcoml
sbb
dec
add
push
pop
jno
mov
jg
ret
and
imul
mov
mov
add
push
add
aaa
mov
jbe
iret
nop
lock
test
sub
mov
pop
cld
es
shrb
add
and
es
mov
sbb
push
pushf
mov
pop
dec
lods
cmp
cltd
stos
adc
test
mov
enter
rcl
insb
int
aas
rclb
mov
mov
dec
fwait
in
stc
or
inc
push
jns
mov
pop
out
adc
icebp
scas
call
pop
jle
add
mov
jno
nop
or
inc
sub
sub
mov
test
fadds
push
xor
push
flds
inc
sub
jae
int
lds
fst
daa
pop
push
mov
pop
iret
xchg
inc
int3
mov
adc
adc
hlt
sbb
push
ret
jns
add
xor
or
pop
add
nop
cwtl
sbb
rolb
jo
sahf
xchg
insb
or
std
push
hlt
mov
jg
mov
test
mov
test
aad
adc
addb
and
dec
int3
pop
push
or
inc
cli
mov
and
dec
shlb
push
add
cmp
aam
cs
int3
inc
push
inc
push
inc
mov
or
out
adc
repnz
jne
or
jg
mov
sub
lret
hlt
jno
outsl
inc
aad
dec
hlt
lret
lret
adc
negl
pushf
inc
sbb
pushf
inc
pop
sbb
nop
dec
push
pusha
push
int
daa
or
sub
aad
dec
cld
loope
imul
xchg
jns
cmp
pop
inc
mov
mov
ficoms
jae
insb
add
pop
sbb
dec
inc
enter
inc
inc
dec
ds
rcll
xor
test
xorb
xchg
je
dec
adc
aas
mov
mov
dec
or
adc
enter
fstps
and
inc
pusha
test
pop
mov
test
jle
add
fsts
fistpl
jge
stos
rcll
pusha
cld
cmpsb
sub
mov
sub
dec
xor
or
ljmp
mov
pop
lret
mov
push
adc
xor
jns
and
adc
xor
test
jb
and
mov
test
rcl
lods
pop
add
out
jnp
mov
sbb
sbbb
mov
std
jp
es
loop
mov
inc
pop
dec
inc
nop
mov
test
sbb
ret
inc
fimull
cmc
mov
sub
fwait
sti
add
frstor
jecxz
outsb
push
xchg
shll
sahf
cmp
arpl
pop
add
mov
aas
lods
add
nop
in
add
xor
inc
ret
push
insb
and
push
and
pop
xchg
leave
mov
in
fwait
out
fimuls
dec
sbb
stos
bound
movsl
inc
cmp
lahf
add
mov
loopne
add
sysret
mov
dec
mov
push
xchg
mov
movsl
lods
sub
fsubl
sbb
loopne
icebp
mov
js
dec
pop
adc
push
push
aam
jp
nop
movsl
enter
sti
sub
xor
imul
xchg
jnp
lea
aas
inc
xchg
dec
mov
pushf
or
push
xchg
rcrb
imul
mov
adc
xchg
call
mov
jp
pop
pop
push
xchg
pop
dec
dec
shll
sub
add
into
push
jae
sbb
hlt
sbb
dec
idivb
pop
mov
and
pusha
cmp
je
jne
mov
xlat
andb
sub
jo
cmp
mov
jle
mov
mov
xchg
xchg
adc
xor
test
push
push
cmpsb
pop
lock
roll
jo
jmp
mov
inc
pop
mov
les
jno
cld
pusha
mov
sbb
jae
scas
sbb
mov
inc
adc
xor
add
mov
leave
push
push
jns
jecxz
and
lahf
xor
xchg
push
cmp
pop
sub
je
add
dec
inc
std
jae
clc
push
cli
insb
rolb
lret
add
mov
mov
jns
ja
cwtl
les
enter
je
pop
rorl
cmp
sub
mov
mov
jbe
into
sub
les
add
clc
inc
lret
test
pop
jae
jge
outsl
pop
sub
icebp
faddl
mov
sub
add
pop
rolb
or
inc
inc
adc
xchg
lcall
push
sbb
mov
daa
jb
pop
out
adc
ficompl
jae
push
shlb
xor
xor
pushf
mov
sbb
test
pop
or
fcmovu
add
mov
and
or
mov
jno
in
xlat
add
insl
xchg
stos
sbb
lea
inc
mov
loop
add
jecxz
into
sub
aas
pop
xor
inc
add
sbb
mov
mov
push
test
inc
cmpb
push
int
mov
int3
jo
js
add
data16
sub
cmp
int3
dec
jnp
jmp
rorb
jmp
add
xor
mov
pop
push
xor
imul
add
push
jg
in
test
cmp
fs
dec
jmp
mov
adc
push
fsubs
inc
sub
inc
mov
add
mov
xor
shll
push
insb
sub
cmpb
decl
les
sub
pop
push
jmp
mov
push
fprem
cmp
xchg
nop
orb
mov
sbb
or
jle
loop
cmc
sub
mov
into
in
pop
cmc
and
fcomps
dec
push
insb
in
add
shlb
mov
add
add
push
adc
mov
cltd
in
adc
es
push
push
or
and
xlat
jle
xchg
jg
jb
add
cmp
xor
andb
rclb
es
dec
into
add
mov
adc
subl
add
movsb
xchg
push
or
sub
fdivrl
shlb
xchg
data16
push
arpl
icebp
in
inc
xor
mov
adc
adc
in
and
out
mov
sub
mov
cmpsl
mov
or
adc
daa
lock
cltd
inc
clc
in
js
imul
lea
test
push
add
push
sub
movsl
dec
ficoms
and
and
and
int
fdivl
cld
or
pop
repz
jae
pop
pop
sub
loopne
dec
add
xchg
jge
ret
adc
inc
fsubs
and
xchg
cwtl
loopne
inc
inc
jns
insl
dec
cmp
mov
shlb
jle
insb
mov
mov
test
pop
inc
cmpb
rcl
mov
and
push
cmp
or
add
xor
mov
mov
sarb
das
push
mov
mov
add
getsec
out
andl
xchg
sahf
test
test
nop
loopne
out
loope
lahf
sub
push
fnstsw
jp
and
ret
nop
data16
or
mov
or
xchg
push
popf
jo
add
pop
jae
push
enter
cwtl
fsubs
sbb
jno
push
in
and
imul
jae
or
scas
pop
lods
mov
adc
or
fisubs
or
mov
mov
xchg
sbb
mov
flds
dec
frstor
jo
mov
sub
mov
dec
lock
pop
mov
or
out
add
roll
mov
aaa
adc
jecxz
std
mov
mov
xor
or
inc
jno
add
in
scas
cmp
fisttpll
add
inc
mov
arpl
and
sahf
addb
addl
mov
lock
sti
mov
jns,pn
mov
mov
push
inc
ja
into
adcl
add
add
fldenv
xchg
arpl
lock
ret
popa
ficoml
push
cmp
mov
jns
and
jae
mov
stos
inc
cmpb
sbbb
xlat
xchg
cld
mov
nop
xchg
adc
mov
dec
outsb
lods
out
jb
push
push
pop
dec
repz
or
sti
mov
imul
dec
xchg
fisubs
add
popf
jbe
dec
lahf
push
aad
add
jne
add
pop
call
xchg
ss
adc
mov
add
mov
pop
loope
mov
push
push
aaa
mov
shrl
cmp
mov
push
dec
add
inc
loopne
jmp
dec
cmp
das
jns
push
xor
ja
addb
fnsave
inc
mov
test
add
fisubrl
aaa
ja
jmp
inc
xor
or
mov
pop
sbb
push
stc
jno
xchg
dec
adc
cmp
pushf
nop
mov
jl
mov
outsl
mov
sbb
push
xorb
mov
aaa
pop
cwtl
subb
pop
xor
cltd
mov
dec
add
in
dec
cld
aam
pop
jae
lahf
xor
ret
pop
mov
add
incl
xor
mov
imul
dec
loopne
popf
mov
push
jl
fidivrs
daa
sahf
add
imul
push
pusha
out
mov
add
fbld
jbe
loopne
pop
pop
push
aaa
pop
add
inc
adc
mov
pop
inc
dec
jp
jmp
mov
bound
test
inc
in
arpl
adc
insb
js
xor
lds
pop
rolb
push
test
cs
cmp
popf
inc
jle
add
ss
cld
int3
nop
stos
add
pop
jae
jb
add
cs
out
aas
and
add
test
lcall
cld
cmp
add
jecxz
inc
imul
rclb
hlt
stos
push
lds
lret
sbb
jne
add
xor
add
adc
mov
jns
inc
sub
add
lahf
add
dec
imul
jp
cmc
out
push
paddq
inc
jle
pop
push
dec
push
shlb
add
cmp
pop
aad
in
call
cmp
adc
fidivs
pop
jecxz
xor
mov
xchg
icebp
popf
cmpsl
sub
sbb
clc
sbb
adc
mov
inc
push
into
push
and
int3
iret
jmp
lods
loope
and
push
sub
lret
test
inc
add
add
and
xchg
stc
and
ret
popa
test
call
jb
out
fstl
push
sub
mov
shll
scas
pop
imul
add
mov
adc
add
test
inc
shrl
shlb
add
sbb
push
add
adc
insb
out
sub
add
mov
jl
lds
mov
or
sub
ror
inc
clc
hlt
enter
cld
and
test
sub
jns
add
jo,pn
cmp
pop
pop
in
ret
mov
pop
mov
or
xchg
xchg
and
xorl
add
pop
es
sub
std
push
and
and
andl
inc
add
jne
in
out
cs
dec
ret
mov
rcrl
pop
add
mov
sub
xchg
add
stos
lahf
jmp
sub
outsb
push
das
adc
ffree
xchg
jecxz
lods
repnz
movsb
icebp
test
out
addr16
in
sahf
mov
ret
or
fstp
mov
popa
jns
in
and
pop
test
and
dec
sub
shlb
das
roll
aam
lcall
imul
sti
push
adc
mov
loopne
movsb
adc
cmc
jmp
notb
xor
cld
sbb
jmp
add
inc
mov
jmp
mov
xor
xchg
mov
push
data16
pop
mov
cmp
xchg
jge
lods
pop
sahf
pop
xor
sub
xchg
adcb
xchg
cmp
adc
and
js
add
test
pop
push
jmp
icebp
and
movsl
and
mov
iret
movb
test
add
sub
add
in
cmpsl
mov
lcall
mov
dec
xchg
test
orb
out
sub
mov
xchg
adc
add
int
and
sbb
adc
repnz
mov
aad
sub
stos
aam
fcompp
out
test
fs
ljmp
mov
cwtl
aam
dec
adc
inc
leave
and
pop
adc
cwtl
and
or
push
pop
push
test
cwtl
push
ljmp
jge
adc
cmp
popf
out
pop
add
sbb
mov
wbinvd
stc
ret
pop
mov
test
fs
push
dec
and
xchg
sub
pop
sbb
cwtl
jmp
popf
mov
popa
jns
xchg
jg
and
xorb
movsb
test
lods
into
adc
ret
xchg
xor
push
adc
adc
and
add
pop
push
mov
fisttpl
lock
or
std
and
ret
jge
loopne
jbe
shl
hlt
out
bound
rcr
loopne
and
pop
cmpl
mov
fcomps
loopne
push
sub
or
gs
push
sub
pop
jns
aaa
aam
daa
in
adc
mov
cwtl
or
rcr
js
fdivl
int
pop
xchg
dec
add
pop
aad
cs
mov
adcb
jge
cs
insb
and
sub
jle
int
add
aam
outsl
addl
lods
inc
and
xor
mov
mov
loope
lea
icebp
jo
dec
in
or
mov
ds
aad
or
xor
pusha
mov
popa
xlat
mov
and
out
jne
xor
xor
or
mov
test
or
jg
inc
and
jae
pusha
xor
add
in
mov
add
jl
imul
add
insl
out
inc
into
pop
push
xor
cli
fnstenv
mov
add
fimull
adcl
or
je
pusha
inc
scas
loope
lock
rorl
in
push
pop
adc
push
test
cmpsl
jp
mov
sbb
ds
mov
sub
popa
dec
wbinvd
add
or
rolb
dec
mov
adc
es
jp
notb
shll
sub
andb
sub
mov
ja
inc
shl
dec
out
mov
out
add
aas
movsb
cmp
add
adc
fnstenv
mov
or
jns
or
and
adc
and
fsubrs
cmc
add
icebp
dec
jae
daa
add
mov
push
repnz
push
dec
or
orb
js
test
cli
rclb
rcrl
or
and
jp
mov
loopne
rolb
mov
adc
ret
xor
les
and
jl
test
nop
fimull
dec
pop
push
cmpsl
fdivrl
in
roll
cs
cltd
xlat
jae
jmp
xchg
mov
notb
dec
sub
ja
movsb
lahf
ret
pop
out
jecxz
xor
jo
push
pop
mov
test
pop
nop
add
inc
inc
mov
fsubs
pop
push
mov
dec
lods
dec
dec
sub
mov
mov
ds
adc
lods
xchg
je
in
fidivrs
add
out
dec
shrl
dec
lods
or
push
xor
pop
add
shrb
lahf
jl
mov
add
fiaddl
shrl
sub
lods
add
or
nop
cmp
mov
imul
negl
jbe
ds
sub
add
mov
movsb
repnz
jno
add
push
andb
faddl
jns
adc
std
lahf
mov
mov
pop
add
mov
xchg
inc
sarb
add
call
fcompl
pushf
xchg
sbb
or
insb
inc
pop
sbb
pop
inc
pop
dec
add
add
add
iret
inc
dec
repnz
xchg
fucom
and
xor
sub
mov
inc
push
cld
dec
fldt
add
adc
inc
ret
add
loopne
les
push
int3
pop
lods
loop
push
rcl
xor
adc
mov
bound
cwtl
add
repz
and
pop
sbb
adc
iret
andb
sub
dec
pop
into
pop
icebp
add
push
add
dec
and
xor
inc
in
mov
xchg
in
add
mov
popw
pop
lock
xsaveopt
rorl
cmp
lods
and
sbbl
iret
idivb
add
daa
scas
lahf
sub
dec
ds
push
pop
push
rol
adc
xchg
push
dec
push
faddl
xor
jp
mov
add
lods
mov
scas
inc
mov
repz
das
nop
in
es
sbb
pop
sbb
mov
push
lods
adc
push
add
pushf
stos
dec
sub
and
jp
or
adc
rolb
call
jecxz
int3
pop
pop
sarb
jmp
mov
mov
adc
adc
cs
pusha
sar
inc
dec
sbb
test
mov
mov
lahf
push
loopne
or
cmc
out
stc
arpl
bound
lret
inc
rorl
ja
inc
and
mov
adc
pop
int3
rclb
cmp
lods
xor
add
jg
mov
add
jl
movhps
outsb
push
loop
or
and
mov
das
xchg
enter
add
sti
dec
cmc
cmpb
jmp
sub
inc
pusha
mov
addb
sub
mov
add
repz
shr
xor
roll
int3
add
ds
mov
repnz
mov
dec
sub
rol
xchg
ja
mov
sbb
ret
out
mov
fldcw
test
outsl
jno
inc
cmp
add
xor
push
dec
push
inc
loopne
add
sarl
dec
fdivs
jg
add
icebp
pusha
sbb
pop
add
repnz
xchg
cmp
nop
add
mov
cmpsb
add
jp
xor
ja
or
pop
insb
and
int3
pop
in
mov
dec
scas
sbb
scas
mov
pop
jae
sub
jb
add
sbb
dec
add
rep
cli
cmp
data16
dec
mov
and
xchg
inc
sbb
add
push
push
dec
sbb
ficoml
ds
hlt
in
lcall
orl
jo
pushf
rolb
popf
push
lret
pop
jle
test
mov
ja
and
or
add
stos
add
and
xchg
add
roll
xchg
shr
or
sub
adc
mov
adc
nop
out
push
dec
int3
inc
sub
mov
adc
dec
cwtl
inc
mov
mov
mov
rolb
adc
stos
xchg
fcompl
or
movsl
xchg
dec
imulb
xor
sub
inc
idiv
add
out
sub
mov
xor
add
in
add
fadds
and
std
push
pop
popf
movsb
ds
jmp
push
add
aad
popa
pop
negb
je
ja
test
sbb
mov
test
lret
dec
push
out
lock
push
xchg
or
mov
shlb
xchg
or
pushf
lock
orb
jns
adc
pusha
pop
pushf
and
add
or
jo
dec
loope
push
push
cmp
add
xchg
push
jmp
pop
repz
mov
loopne
xor
out
insb
sbb
xor
repz
enter
push
cmp
cmpsb
loope
jne
add
in
xor
cmc
fcmovb
lock
test
outsb
dec
add
adcl
movsb
loopne
inc
test
push
repz
subb
xchg
mov
jge
jae
add
and
mov
xchg
xchg
cmp
sub
fldenv
addb
orb
mov
sbb
dec
adc
add
rclb
outsl
subb
dec
lahf
jmp
lret
mov
adc
cmp
data16
flds
loope
inc
cltd
sbb
cld
nop
stc
xchg
add
jp
nop
popf
or
xchg
push
enter
inc
les
inc
stc
sbbb
adc
mov
test
inc
or
movsb
dec
xor
ja
mov
xchg
jnp
xlat
jnp,pn
add
stos
dec
jmp
inc
out
add
lods
pop
inc
cmp
cli
inc
out
and
decl
outsb
mov
es
out
sub
dec
pusha
inc
mov
pop
out
jo
adc
enter
add
inc
mov
add
cwtl
cs
fwait
shl
and
filds
mov
mov
loopne
stos
pop
aad
sub
test
mov
lock
cs
and
shrb
mov
pop
out
orb
sub
xor
sub
mov
mov
into
cmp
icebp
inc
xchg
fists
mov
orb
sub
pop
es
add
out
lock
loopne
add
push
mov
ja
jl
mov
fcmovb
mov
add
dec
ja
add
jae
dec
shr
js
mov
lea
pushf
and
xchg
mov
xchg
sbb
cmp
add
mov
cmp
dec
dec
js
pop
jg
insb
adc
movsl
inc
mov
subl
mov
lods
enter
js
pop
sub
mov
and
and
mov
add
loopne
shlb
mov
fs
sub
and
xorl
popf
dec
mov
add
cs
clc
jp
or
cmp
jnp
add
and
mov
cmp
icebp
cmp
mov
aad
and
mov
jns
int3
push
rcrl
add
mov
icebp
mov
inc
and
aad
loop
fcompl
es
js
add
es
sbbl
lods
mov
add
and
xchg
add
xor
iret
in
mov
xchg
and
push
push
ja
adc
stc
add
in
and
dec
repnz
pop
daa
movsl
les
jle
dec
addl
add
sub
fdivrs
hlt
xchg
and
adc
in
dec
sub
adc
mov
jge
pusha
add
inc
lahf
scas
xchg
fwait
lods
mov
add
add
jl
xor
push
add
mov
xlat
inc
insl
fwait
outsl
add
xchg
mulb
cltd
mov
cmp
push
inc
pop
dec
cli
pusha
add
mov
enter
lock
inc
ror
add
sub
add
xor
fdivl
fs
add
inc
pop
aaa
fstps
adc
sub
mov
xchg
cmp
cmp
lret
shlb
subl
nop
loopne
cmc
pop
arpl
in
movsb
jbe
addb
mov
xor
scas
in
add
loopne
push
dec
pop
dec
dec
jb
push
jae
into
aas
mov
test
inc
and
mov
lret
test
ret
mov
add
jo
and
add
aad
jmp
fistl
into
inc
cmpb
dec
add
push
add
mov
dec
push
in
or
mov
push
inc
pop
sub
xlat
add
movsb
test
add
mov
push
fnstenv
or
inc
ret
and
rcl
adc
xor
inc
filds
add
sub
push
rorb
add
add
inc
sti
hlt
bound
inc
xor
daa
ret
xor
loop
push
scas
push
xor
adc
into
add
xor
call
mov
or
pop
arpl
push
sarl
stc
les
or
pop
jns
je
aad
loop
cld
pop
enter
ljmp
dec
pop
enter
sahf
add
icebp
sbb
jb
sub
add
test
xlat
pop
pop
xor
pop
cwtl
add
mov
pop
rorl
lods
xchg
add
repnz
loop
mov
pop
inc
call
outsb
addb
push
pop
add
pop
aad
aas
les
mov
or
add
mov
and
push
jae
inc
adcb
loop
and
std
out
add
inc
jle
dec
push
sahf
loop
je
hlt
sub
fs
and
popf
cmp
test
leave
decb
leave
popa
daa
pop
hlt
xlat
xchg
je
add
into
jecxz
ficoml
repz
xor
or
fucomi
cmp
lock
ja
add
out
dec
fmuls
and
sbb
adcl
jo
inc
mov
sbb
lock
shlb
or
scas
mov
test
mov
sarl
mov
imul
mov
xor
lock
pop
cmpsl
cs
xchg
add
xchg
hlt
shll
sub
cwtl
jmp
cli
jo
out
mov
or
lods
cmp
jae
out
add
push
add
adc
pop
push
push
sbb
mov
adc
out
test
or
je
arpl
adc
sbb
icebp
stos
add
leave
mulb
cmp
xchg
xchg
or
sahf
xor
sbb
test
cmp
loope
int
xchg
push
les
xchg
dec
push
or
adcl
in
sub
pusha
push
add
out
test
add
add
in
xchg
pusha
add
sahf
adc
add
xchg
or
mov
add
mov
xor
add
stos
lock
cltd
or
lea
inc
mov
xchg
mov
mov
in
sbb
sub
add
stc
scas
dec
mov
inc
ljmp
push
mov
gs
andl
les
test
adc
mov
loope
mov
mov
std
mov
addr16
add
adc
add
xchg
push
adc
add
or
xor
adcl
and
xor
mov
jno
and
inc
fists
jo
sub
push
jno
pop
sub
nop
in
in
cwtl
or
jnp
mov
mov
mov
dec
popa
cwtl
mov
js
roll
push
nop
sbb
orl
mov
or
and
xlat
pusha
mov
lea
sarb
pop
mov
xchg
pop
lock
aaa
add
pusha
jns
mov
pop
mov
adc
and
mov
add
mov
jno
and
ljmp
inc
push
mov
scas
add
mov
push
adc
or
out
add
es
fsts
dec
xor
stc
das
add
sahf
lods
bound
push
add
pop
xchg
push
add
divb
add
fmuls
arpl
xor
test
mov
dec
out
stos
or
inc
fstps
adc
adcb
or
cmp
icebp
test
rdtsc
push
adc
popf
mov
xor
in
inc
mov
enter
and
xlat
out
sub
and
xchg
sub
aad
xchg
inc
pop
and
lock
sbb
sbb
pop
es
popa
insb
sbb
enter
in
shrl
sti
add
cli
int
rcll
pop
push
adc
cmp
xor
rorb
sti
mov
xchg
lret
cmp
daa
inc
pushf
shlb
shlb
push
and
icebp
or
nop
and
push
add
or
rcrb
loop
xchg
jg
adc
int3
adc
jge
pop
icebp
mov
add
mov
pop
jns
add
scas
adc
popf
add
sub
loope
jno
sbb
add
pop
es
into
repz
incb
sub
rolb
mov
mov
sahf
mov
xor
adc
add
add
xchg
lock
lods
xor
push
sbb
lock
sbb
xor
sti
mov
cmp
sbbl
testb
sub
cmp
and
clc
cmp
add
scas
pop
mov
inc
int3
ret
movsl
clc
cwtl
pusha
jae
shlb
movsb
fstpl
iret
push
add
jbe
call
jl
add
aad
push
sub
lea
jno
out
push
leave
cwtl
ficoms
xor
sbb
out
mov
hlt
jbe
nop
xor
dec
add
dec
loopne
sahf
imul
cmpsb
ljmp
rorl
cs
push
inc
mov
xor
mov
lock
jmp
jle
push
add
sahf
inc
jmp
add
stos
sub
and
leave
out
add
dec
adc
add
cmp
cmpb
imul
xor
xor
xchg
shrl
mov
test
cmp
lds
xchg
int
sub
xchg
aaa
mov
js
cwtl
stos
imul
pop
mov
stos
add
pop
stc
and
bound
movb
jb
in
sahf
adc
pop
cmpsl
in
cltd
addr16
xchg
out
mov
loope
push
dec
or
lock
or
shlb
mov
jg
push
sbb
dec
or
cmpsb
add
inc
ret
daa
sub
adc
pushf
mov
fcoms
cmpsl
or
nop
js
mov
inc
shl
pop
add
test
cli
aaa
inc
xor
push
cld
push
and
mov
pop
add
mov
sbb
mov
add
insb
test
movsb
aaa
cmp
ds
adc
mov
jb
jbe
es
cld
dec
bound
repz
sbb
loop
sub
and
xchg
int
sbb
pusha
inc
mov
add
add
fldcw
add
mov
cmp
das
sbb
mov
add
scas
jmp
ret
xchg
dec
inc
inc
add
xchg
xor
das
or
nop
sbb
mov
test
adc
adc
mov
mov
xor
dec
test
add
scas
adc
push
mov
push
mov
or
mov
add
fistl
cwtl
cmpsl
cltd
mov
es
and
out
and
pop
dec
mov
jno
mov
lods
fld
inc
les
push
add
sbb
pop
adc
mov
jecxz,pn
sub
loop
add
jns
ret
mov
lds
xchg
daa
nop
movsl
hlt
arpl
push
popf
inc
jno
fptan
mov
repz
inc
push
jne
sahf
or
sbb
int3
push
lods
or
push
pusha
and
inc
push
or
jno
add
cmc
inc
mov
push
roll
jno
stc
mov
and
pop
cmp
imul
addr16
dec
lds
jo
lock
sar
and
mov
sbb
arpl
les
arpl
je
lods
add
jecxz
sub
testb
and
aad
adc
insl
pand
and
and
add
inc
int
add
mov
fs
mov
add
cmp
sbb
mov
rcl
in
or
data16
in
xor
xchg
mov
add
add
aas
jbe
sahf
or
js
cmpb
xor
pop
mov
in
mov
inc
add
xor
mov
roll
pop
pop
js
loop
orb
pusha
mov
sarl
or
sbb
sub
pop
cld
das
push
pusha
mov
enter
xchg
mov
aad
adc
fcoml
push
imul
mov
icebp
pop
in
aam
roll
add
cmp
rclb
cltd
cmp
mul
les
pop
cmp
pop
sub
test
lods
inc
mov
cmp
inc
sbb
jmp
das
out
push
sarb
add
jb
sub
pop
lret
or
lcall
add
cmp
cmp
pop
add
and
or
push
add
push
add
clc
das
or
and
out
xlat
lret
push
iret
rclb
and
adc
popf
xlat
inc
in
enter
loope
cmp
add
sub
scas
jne
cltd
add
push
add
das
dec
and
xchg
cmc
cmp
dec
data16
cmpl
cwtl
cmovno
mov
inc
cmp
clc
out
push
sub
cmp
or
test
inc
jae
jo
scas
add
inc
sub
daa
roll
cmpsb
in
or
fwait
sub
dec
and
pop
movsl
mov
lock
xor
xor
adc
sbb
dec
cld
in
ds
sub
mov
mov
movsl
adc
cmp
iret
outsl
lods
rclb
sub
mov
lock
les
das
je
mov
adc
sahf
sarb
addb
mov
negb
aas
xor
test
push
sbb
shlb
fbstp
bound
add
shr
cmovge
aaa
mov
fistpl
jl
mov
fs
adc
enter
xor
xor
pop
inc
add
pop
movsb
mov
or
out
nop
mov
je
adc
mov
fs
mov
sub
or
and
std
inc
shlb
roll
rcrb
jg
xchg
test
mov
add
pop
imul
mov
pop
movsb
push
test
or
dec
in
test
shr
adc
lret
les
lea
cmp
mov
cwtl
xchg
push
icebp
mov
in
in
or
out
adc
dec
push
rcrb
aam
add
dec
cld
hlt
js
mov
out
data16
ja
adc
add
inc
adc
xchg
inc
push
sub
call
mov
cwtl
into
inc
stc
add
xchg
jno
push
ret
xchg
sbb
or
rorb
pop
cmp
les
rcr
or
shl
pop
pop
mov
mov
push
sbb
into
inc
in
lock
push
dec
test
pop
movsl
insl
movl
xchg
icebp
sub
in
enter
loope
inc
xchg
mov
pop
leave
lods
aam
rcrb
fadds
sub
lock
pop
in
cmp
repz
push
sub
movsb
test
adcb
lea
mov
int3
inc
xchg
push
inc
and
xor
push
and
pushf
test
cmp
insb
jle
add
daa
jp
test
sbb
add
push
ret
out
add
insl
mov
pop
pop
mov
push
xchg
add
movsb
jo
mov
jne
test
data16
pop
xbegin
jg
jmp
jne
mov
test
mov
mov
cwtl
and
and
xchg
pop
jl
or
rolb
push
mov
subb
sbb
out
fwait
xchg
je
push
orl
or
adc
jno
xchg
add
out
in
rol
push
cmp
add
pop
or
sbb
inc
mov
or
loopne
push
movsb
or
lock
stc
repz
or
sbbb
dec
shlb
sbb
inc
pusha
andl
add
enter
cmpsb
in
dec
and
sbb
ret
xor
xchg
call
adc
mov
cmpsb
add
jg
jns
xor
test
clc
jne
pop
cwtl
in
pushf
push
mov
ds
adc
pusha
dec
imul
mov
clc
add
out
xor
push
adc
or
and
icebp
or
adc
mov
mov
sbb
add
and
ds
sbb
xchg
ret
insl
sbb
add
jb
cmp
das
adc
fidivl
mov
sbb
jno
in
cmpsb
xor
push
imul
add
xchg
push
iret
sbb
enter
les
add
nop
cmp
fdiv
daa
aad
and
and
xlat
imul
add
xor
push
sub
jecxz
les
mov
sbb
mov
add
pusha
add
mov
les
call
imull
std
add
mov
shlb
dec
dec
mov
lcall
push
lds
cmp
bound
out
pop
push
add
cmp
mov
mov
and
inc
mov
push
movsb
pop
mov
shl
shlb
call
fs
stc
test
data16
or
or
cmp
push
push
adc
pop
iret
or
jl
pop
lcall
out
movsl
pop
mov
push
scas
adc
xchg
filds
je
sub
mov
xchg
xchg
xchg
adc
sbb
rorb
fcmovnu
add
jne
xchg
inc
mov
add
int
cmp
mov
xchg
jo
inc
jnp
fldenv
incb
imul
movsb
or
fadds
xor
in
inc
loopne
pushf
out
sti
in
add
out
scas
push
jb
mov
lds
push
orb
and
add
gs
xchg
adc
sub
sub
or
pop
and
sahf
in
cwtl
and
fcoml
les
pop
repz
data16
add
push
jo
stos
rorb
xor
enter
frndint
test
sbb
das
mov
xchg
jecxz
push
out
add
jmp
test
dec
mov
xchg
sbb
add
xchg
ror
xor
das
dec
fbld
adc
mov
fdivrs
popa
jmp
js
cmp
xchg
and
ja
call
jmp
dec
jnp
mov
std
dec
loope
shrb
dec
scas
sbb
iret
add
bound
or
adc
arpl
inc
cmp
add
repz
and
mov
lahf
push
xchg
xor
mov
movsl
mov
adc
popf
out
adc
add
enter
cmp
sbb
and
add
or
cltd
in
adc
pop
jmp
orl
outsl
or
sarb
push
or
std
adc
ja
add
add
scas
inc
je
xor
shll
loope
orb
push
adc
int3
sub
ret
mov
mov
daa
add
fsubs
mov
sbb
push
fs
push
pop
mov
adc
inc
add
inc
inc
and
mov
xchg
xor
xchg
fcmove
repz
jb
sub
out
scas
insl
decb
sti
int3
xchg
push
clc
imul
insb
popf
xchg
add
pusha
rcll
sub
shll
dec
jo
int3
push
jae
add
test
or
js
cmp
add
mov
adc
out
inc
pop
or
mov
sbb
imul
xchg
xor
cli
aaa
mov
sub
dec
sub
mov
mov
push
xchg
pop
cld
shlb
test
sbb
imul
mov
jnp
xor
test
clc
xchg
inc
fdivs
xor
test
xor
mov
stc
cmc
mov
filds
std
mov
cmc
outsl
lahf
loope
jbe
outsl
adc
pop
scas
pop
stos
mov
lods
call
je
jle
pop
test
mov
pop
std
push
xchg
push
inc
int
popa
shrl
and
or
or
mov
loop
mov
fimull
adc
mov
add
fidivrl
in
and
adc
ljmp
sar
adc
mov
mov
cmpsb
adc
add
add
imul
and
mov
ds
inc
inc
inc
push
cs
or
ret
adc
add
mov
add
and
inc
or
pushf
add
fwait
mov
push
adc
mov
dec
inc
sbbb
repz
cmc
mov
add
loope
rcrb
dec
inc
sub
jl
aas
das
sub
jl
cwtl
cs
adc
sti
rolb
add
sbb
dec
mov
icebp
adc
xchg
popa
xor
mov
or
jmp
xchg
adc
push
out
xchg
fs
dec
add
mov
fildl
and
subl
mov
mov
cld
shll
stos
jae
lock
xor
sbbb
clc
push
addr16
pop
fildl
cltd
xchg
xchg
jno
xchg
movsb
adc
fildll
push
add
stos
sub
dec
xchg
adc
hlt
loopne
push
out
sub
or
mov
sbb
adc
cmpsl
pop
add
dec
shrl
or
cmp
mov
rorl
sbb
push
loopne
pop
mov
and
inc
mov
stos
in
xchg
mov
mov
hlt
filds
inc
mov
fiadds
ja
cs
mov
repz
lea
out
cmp
sub
jbe
add
stos
push
adc
inc
dec
inc
xchg
call
loope
fs
add
add
std
inc
adc
lods
mov
stos
in
pop
subb
mov
loopne
ljmp
cmp
lds
sbb
loopne
out
add
push
test
adc
cmc
inc
pusha
jle
push
pop
in
inc
pop
mov
test
movsb
ret
inc
or
orb
sub
ja
or
pusha
push
test
std
loopne
inc
insb
ljmp
das
pop
xchg
add
fstpl
sar
mov
out
imul
daa
movsb
or
mov
sub
xchg
mov
ljmp
mov
and
xchg
fwait
int3
lret
lcall
dec
cmp
loop
cmp
mov
or
pop
add
inc
ret
xchg
dec
mov
sti
lret
inc
clc
pop
inc
inc
push
inc
add
mov
sbb
or
and
inc
dec
aas
cltd
push
clc
inc
pop
or
jbe
sarb
push
nop
popa
and
fisubl
into
test
pop
shll
xor
nop
rep
add
or
add
xor
sub
scas
push
xorl
cltd
enter
push
and
cmp
stos
mov
xor
mov
mov
mov
add
push
cltd
lahf
mov
int
push
lea
dec
inc
sub
add
add
pop
int3
adc
pop
sahf
decb
sub
jge
scas
lcall
ret
cmp
pop
scas
sbbb
push
mov
inc
clc
add
popf
jecxz
pop
in
and
push
fimuls
std
xor
cmp
push
mov
in
add
and
mov
adc
cmp
and
adc
pop
mov
add
scas
je
cld
roll
or
cmp
in
mov
test
pop
jp
adc
aaa
cmp
pop
js
fistpll
cmp
lods
sbb
mov
add
jle
mov
push
jmp
or
into
xchg
rolb
adc
inc
xor
je
js
xorl
pusha
add
jmp
cmp
add
lea
ljmp
adc
mov
and
bound
fyl2x
sbb
leave
push
push
and
push
fdivs
xchg
pop
cld
mov
adc
push
jecxz
lret
outsb
imul
inc
cmpsl
xchg
or
fiadds
xor
repz
dec
add
add
stc
dec
xchg
push
adc
pop
fsubs
push
ret
ds
pop
orb
mov
push
in
sti
mov
lcall
cmp
cld
dec
and
lret
jno
add
or
insl
cmc
jmp
repnz
faddl
mov
push
and
movsl
fdivs
in
pop
cld
push
sahf
in
push
mov
inc
and
shl
jle
rorl
or
in
inc
or
push
sbb
pusha
jbe
or
or
lds
adc
cmp
jno
icebp
add
and
movsb
sti
cld
rolb
mov
push
add
add
out
xor
pop
lahf
dec
adc
or
and
add
inc
neg
adc
je
or
xchg
add
test
or
xchg
in
jno
leave
or
push
pop
cltd
lods
push
add
add
add
loop
pop
orl
lcall
stos
jl
pop
scas
nop
adc
push
adc
add
fwait
nop
or
stos
lahf
sub
sbb
mov
inc
stc
adc
outsb
int3
aad
pop
mov
ret
and
and
jno
test
sti
fwait
pusha
in
xor
outsl
inc
and
dec
nop
arpl
hlt
mov
and
insb
and
cmp
xor
add
jo
pop
aas
pusha
repnz
cmp
mov
and
iret
lcall
addr16
test
jl
add
push
lods
xchg
add
mov
loopne
cmc
jnp
rolb
sub
fs
dec
xchg
loopne
test
popa
jbe
jo
in
sub
and
test
loope
sbb
add
dec
mov
mov
mov
test
and
out
arpl
ljmp
adc
inc
ret
and
xchg
sbb
lods
add
out
mov
lret
mov
push
xchg
adc
call
adc
movsb
pop
lock
dec
sub
jo
fdivrs
and
adc
dec
jg
pusha
sbbb
int
cwtl
jg
cmp
fsubr
jnp
adcb
dec
and
scas
jb
add
jo
and
loop
cmp
addl
stos
mov
sbbb
or
jo
cs
jne
mov
xor
stc
or
subb
xor
or
add
or
inc
or
xchg
mov
hlt
cld
addr16
call
pop
dec
fwait
sbbl
and
push
andb
xor
xor
bswap
in
and
sub
add
inc
add
jb
cmp
ror
sbb
mov
pop
push
cmp
add
adc
mov
pop
repz
push
mov
and
dec
add
add
adc
adc
aas
addb
rcrl
adcb
pop
andps
xor
adc
std
push
sbb
cmp
cmp
add
orb
js
inc
xor
add
aad
add
pop
notb
shl
pusha
ds
shrb
ja
ljmp
pop
xchg
adc
addl
cs
add
mov
cmp
push
jns
push
add
and
xchg
cltd
loope
push
mov
movl
test
pop
jo
sub
and
addl
mov
jae
dec
adc
jge
inc
mov
add
inc
add
xchg
jp
or
mov
jae
mov
adc
je
xchg
mov
adcb
xor
pop
sbb
ss
cmp
push
call
icebp
add
jo
iret
hlt
sti
lahf
je
sarl
push
xor
es
mov
in
mov
sarl
add
movsb
xor
push
imul
cmpl
inc
mov
shrb
xchg
jg
mov
push
jo
out
movsb
sbb
aas
jle
cltd
xor
adcl
add
jbe
mov
jae
add
int3
fidivrs
sub
test
adc
and
or
hlt
adcb
dec
dec
jne
add
mov
add
lods
inc
and
aad
ret
dec
aam
mov
sti
add
iret
mov
nop
add
jae
mov
jne
jo
sarl
adc
xor
lock
mov
in
xor
sub
inc
or
mov
imul
flds
add
cmp
pop
jmp
andl
adcb
outsl
inc
mov
mov
push
cmpb
lea
std
sti
adc
cmc
add
cli
icebp
mov
lds
mov
xchg
mov
xor
ret
ret
or
call
xchg
mov
jmp
sub
xorb
add
pop
subb
pop
sbb
sti
ljmp
or
xchg
pop
jp
cli
shl
subb
xor
cmp
pop
int3
mov
pop
js
add
leave
int
sub
adc
out
fadds
rcl
adc
loope
movsb
add
mov
push
add
cli
sbb
add
std
mov
movsl
push
roll
and
pop
add
mov
movups
notb
bound
adc
mov
test
pop
icebp
sub
jmp
jbe
push
test
pop
mov
push
and
add
xchg
mov
mov
stc
clc
xor
shr
sti
aad
inc
jmp
add
or
pop
or
je
push
inc
mov
mov
pop
pop
lret
cmp
fstpl
cli
dec
pop
movsb
loop
popa
mov
mov
lret
cs
adc
add
leave
push
fildl
xchg
xor
add
and
jno
jp
add
aas
ss
fimull
push
push
pop
or
loopne
les
clc
mov
sbb
movsb
movb
addr16
mov
adc
xor
arpl
andl
add
dec
int3
mov
inc
jl
jnp
push
mov
xchg
data16
xchg
or
and
aas
jl
or
test
push
xor
and
mov
xor
dec
jb
push
in
cltd
sar
sbb
orb
pop
adc
pusha
std
cwtl
mull
dec
add
pop
mov
cltd
xorb
jg
cmpsl
mov
cld
adc
and
and
mov
cmp
hlt
ror
cs
fdivrs
xchg
dec
sub
mov
push
jnp
cld
sbb
leave
push
or
imul
fsts
pop
jnp
insb
sbb
push
push
pop
and
mov
test
pop
es
jl
insb
pusha
xchg
rolb
es
xchg
nop
test
cli
fmull
fs
and
jo
enter
in
pop
mov
aaa
cmpsl
inc
out
xor
add
jnp
in
minps
in
nop
cld
dec
xor
cmp
push
popf
emms
cs
movsl
pop
je
adc
sub
aas
mov
out
push
and
leave
addb
cmovge
test
mov
xchg
or
mov
sbb
add
adcb
mov
pop
sbb
aam
test
xor
sub
stc
hlt
test
pusha
mov
and
pop
pop
cmp
push
sub
or
mov
xchg
add
lock
sbb
ljmp
lret
movsb
or
add
inc
add
xlat
inc
ror
aas
push
add
rcrb
push
sub
jl
orl
cmp
xor
xor
ucomiss
add
push
es
pop
jmp
mov
sub
mov
test
mov
add
push
mov
aas
xor
lds
pop
movsl
out
add
cmp
idivl
adc
push
incl
and
fstpl
pop
addb
cld
hlt
lea
sub
subb
repz
pop
cmp
push
orb
aam
mov
sbb
dec
add
jae
loope
inc
or
mov
loope
mov
aaa
imul
loopne
add
lods
sbb
hlt
aas
sub
test
adc
call
sbb
repz
sbb
arpl
ja
inc
dec
add
fimuls
loope
add
cmp
push
movsb
mov
pushf
es
lods
inc
test
repnz
and
mov
dec
adc
add
xor
add
sub
ret
sub
pop
fs
push
int3
inc
arpl
loope
ret
and
imul
mov
movsb
push
dec
sbb
aad
dec
mov
or
add
lcall
idiv
and
xor
inc
dec
test
add
push
lods
xchg
add
in
mov
sbb
arpl
cmc
jge
add
sub
dec
rolb
stc
lahf
insl
add
sbb
sub
or
daa
cld
xchg
fcom
or
pop
cmpsb
enter
mov
nop
popl
sbb
dec
fdivrs
mov
jp
add
mov
inc
push
je
push
sbb
dec
or
mov
stos
test
adc
inc
push
adc
xor
jbe
stc
or
xchg
mov
addl
mov
or
or
test
add
test
sbb
adc
out
pop
add
inc
jnp
repz
sbb
push
lods
movsl
add
cmc
nop
sub
fsin
and
std
mov
xor
or
pusha
xchg
push
sbbb
inc
push
adc
xchg
inc
rorb
add
or
imul
sub
ja
add
cltd
rclb
push
lock
add
or
sbb
arpl
jg
and
inc
xchg
mov
sti
adc
stc
and
test
push
adc
pop
lock
ds
push
add
or
popa
or
xor
mov
mov
mov
or
sbb
xchg
jge
or
hlt
lret
pop
adcb
ror
movl
push
dec
xchg
mov
mov
add
add
cmpsl
popa
mov
or
inc
pop
jmp
sbb
mov
pop
loop
lahf
inc
and
rorb
mov
out
xor
pop
mov
movsl
shrb
imul
hlt
sti
scas
sbb
leave
int
sub
push
cmc
jns
dec
repz
test
push
in
inc
setp
mov
jg
inc
lahf
test
repz
jmp
loope
dec
ds
daa
jg
mov
out
add
pusha
jne
and
add
out
loopne
jl,pt
mov
xorb
sub
out
xor
jbe
pop
cltd
add
cwtl
xlat
sub
fstpl
lds
add
or
cwtl
sbbb
int3
nop
xchg
inc
stc
hlt
cmp
mov
add
sbb
sub
add
loop
cmp
cld
jmp
sub
inc
xor
shlb
les
add
outsb
je
pop
add
xchg
dec
sbb
xchg
adc
loopne
lea
pop
push
and
jmp
cmp
mov
les
std
xlat
or
or
add
dec
xor
xor
push
xchg
aad
push
xchg
add
pop
dec
inc
clc
repnz
xor
loop
jp
pop
dec
xorb
mov
subb
push
jns
cmpsl
bound
mov
data16
jl
mov
add
xchg
sbb
or
outsl
test
add
sub
ja
jae
add
jbe
call
aas
jnp
cmp
ja
sbb
aam
xor
hlt
repnz
fisubs
test
mov
dec
sub
xor
or
lds
jns
imul
pop
xor
or
and
inc
xor
in
arpl
dec
sub
push
adcb
mov
shll
pop
hlt
sbb
std
mov
repz
and
push
mov
pop
mov
and
xchg
xchg
add
inc
sub
lahf
cs
add
jp
lret
add
pop
rcll
cwtl
xchg
cwtl
hlt
add
addl
fnstsw
and
sbb
addr16
dec
and
add
xchg
xlat
adc
fsubrl
add
jns
push
and
and
fisubl
mov
mov
fsts
adc
adc
loopew
add
sbb
jp
test
imul
mov
sub
cli
pop
test
in
or
int
data16
lar
subl
out
mov
into
je
sbb
and
add
insl
inc
pushf
adc
xor
cmp
les
add
push
icebp
rol
or
pop
lret
and
repz
add
lds
loope
cs
out
andb
jae
cmpsb
sarb
negb
cmc
xor
inc
loop,pn
repz
lock
pop
push
xchg
addb
adc
sub
push
jl
pop
sbb
sbb
fwait
push
bound
inc
int3
popw
pop
test
add
lret
int
shr
jbe
mov
adc
mov
les
mov
addr16
mov
pop
shrl
scas
je
xchg
pop
add
outsb
mov
add
xchg
xchg
pop
add
xchg
or
push
xchg
repz
inc
pop
xor
outsl
mov
jle
add
mov
clc
adc
sub
or
add
jbe
sbb
cmp
cli
add
aam
lock
adcl
xchg
and
adc
adc
xor
js
push
call
call
adc
lahf
jge
add
in
add
cmp
dec
adc
jecxz
js
cmp
lret
nop
or
addb
pushf
inc
push
shufps
add
addr16
fstpt
cmp
pushf
pop
clc
inc
test
mov
sbb
add
pop
xchg
inc
xor
push
or
mov
adcl
leave
stos
and
xlat
mov
out
add
lret
fnstsw
mov
orb
mov
adc
add
mov
xlat
xor
add
ds
lods
lea
pusha
add
push
rcll
in
sbb
cmp
or
pop
mov
adc
pop
es
mov
int
in
in
rclb
sbb
mov
add
add
sub
xchg
add
push
pop
pusha
cmp
and
add
bound
rcr
hlt
pop
es
test
add
sbb
pusha
xor
mov
sti
int
add
xor
pop
scas
repnz
xor
sbb
mov
pusha
sub
cmp
add
into
xor
dec
xor
mov
or
daa
imull
lcall
mov
lock
movsl
xchg
adc
or
and
incb
xchg
and
out
cmp
repz
movsb
or
or
gs
sbb
das
enter
dec
push
pop
mov
jns
mov
rorb
iret
mov
dec
into
pop
add
push
or
xor
add
pop
jae
adc
or
add
hlt
ret
ret
sbb
xor
les
lret
push
push
inc
out
sbb
dec
add
js
push
mov
and
pop
out
out
ljmp
loope
les
dec
dec
int3
add
fstpl
imul
imul
dec
rorl
jno
add
mov
out
adc
sbb
shrl
mov
orl
cld
xor
adc
dec
push
insb
jmp
shlb
dec
sub
add
mov
fsts
push
pop
jmp
lods
repz
push
inc
push
out
mov
hlt
mov
sbb
add
sti
rcrl
loopne
pop
dec
xchg
inc
xor
push
adc
pop
dec
pop
rclb
leave
mov
jle
and
push
add
pop
cwtl
cld
mov
dec
push
add
sti
in
inc
pusha
mov
mov
cmovne
mov
mov
push
cmpsl
les
enter
push
in
push
sahf
xchg
lock
loope
fstpt
inc
inc
cmp
push
enter
jo
sub
bound
push
insl
mov
fsub
mov
inc
jecxz
adc
xor
ret
xchg
cmp
mov
repz
sbb
jecxz
sub
aam
rorb
xchg
loope
push
xchg
out
xor
sbb
dec
aam
adc
insl
negl
adc
inc
js
repz
inc
sub
pop
mov
dec
das
mov
mov
pushf
std
test
testb
adc
pop
adc
andl
jns
mov
pop
mov
jne
subb
sbb
or
lock
stos
loopne
mov
inc
in
ret
dec
ret
jbe
mov
nop
outsb
dec
adc
push
xor
roll
cmp
fmuls
dec
je
shlb
pop
cld
sbb
faddl
xor
jbe
pop
lock
sbb
mov
icebp
push
orb
leave
rcrb
mov
jecxz
xchg
adcl
roll
subb
fs
call
jg
pop
adc
push
jno
loopne
icebp
jae
and
cmpb
popf
add
iret
mov
dec
hlt
add
push
adcb
lea
sbb
push
inc
ss
sub
pusha
pop
mov
das
inc
dec
jb
add
and
mov
and
push
lret
mov
faddl
pop
aam
xor
mov
pop
ljmp
mov
add
mov
jmp
pop
or
add
loopne
mov
and
mov
pop
lods
jae
pusha
adc
in
or
daa
shlb
and
iret
subb
inc
fs
adc
cltd
pusha
add
out
push
ficoml
pop
sbb
das
push
mov
cmpsb
iret
push
ja
pop
scas
adc
pop
xchg
sbb
out
add
xchg
mov
hlt
mov
js
push
xchg
jge
and
adc
mov
in
mov
cs
and
lods
and
xchg
insb
pushf
add
rcrb
roll
add
int
adc
inc
or
add
repnz
sbb
mov
xchg
pop
scas
int
sbb
lods
or
orl
imul
gs
ja
add
pop
ret
mov
jo
mov
out
mov
cmp
xchg
orb
pushf
in
add
imul
jbe
pop
sti
movsb
lock
ljmp
push
addr16
shl
addb
aaa
mov
jge
in
push
sbb
idivb
test
add
mov
dec
icebp
add
jge
inc
push
in
shrl
mov
sub
cld
xchg
pop
and
mov
or
and
add
movb
pop
lock
or
pop
negb
add
and
push
push
xrelease
pop
xchg
push
cli
and
cmp
jae
jmp
jle
shrl
nop
xor
aam
inc
pop
add
aam
lods
es
cwtl
mov
jae
add
or
add
add
pop
push
leave
je
stc
or
cli
push
popf
adc
mov
cmp
add
addr16
sub
and
sub
js
add
fisttpll
jle
pop
push
jl
ss
popa
mov
frstor
mov
imul
ret
jno
mov
and
addr16
dec
daa
popf
xor
fcmovu
bound
int
js
orl
hlt
add
inc
ljmpw
push
repnz
aam
cmp
add
or
mov
adc
std
and
inc
adc
jle
lcall
lahf
out
sbb
testl
sbb
fwait
decb
or
xor
push
adcb
nop
mov
cmp
inc
or
je
adc
fidivs
cmp
subb
imul
out
or
call
mov
in
mov
cmpsl
add
jnp
adc
mov
enter
inc
add
mov
xor
fisttpll
enter
jl
sub
roll
add
push
imul
fistpl
add
jp
add
pop
jmp
icebp
xchg
sub
xchg
lock
inc
or
rcll
mov
shll
sbb
aad
loop
add
lahf
sbb
popa
xchg
pop
push
sti
or
add
cmpsl
mov
in
dec
xchg
mov
and
push
cmp
sahf
mov
adc
repz
rcrb
push
inc
mov
mov
add
mov
sub
test
lcall
leave
dec
arpl
rcrb
fcomi
int3
stc
adc
mov
mov
pop
js
hlt
cmp
xchg
mov
add
jns
pop
push
pop
sarb
out
pusha
adc
stc
jo
sub
and
mov
xchg
and
xchg
nop
das
inc
loopne
mov
push
inc
cmp
cmovbe
rorb
xchg
bound
das
inc
loope
add
pop
pop
mov
add
jmp
add
mov
push
int3
orb
adc
inc
orl
insb
and
sti
adc
inc
int3
and
test
outsl
or
mov
add
add
mov
push
and
jb
movsl
push
mov
loope
lods
pop
cmp
and
lret
in
and
incb
add
push
out
call
in
test
mov
mov
mov
mov
push
mov
mov
hlt
add
sub
movsl
orb
add
iret
dec
jbe
push
and
rolb
mov
mov
dec
notb
cli
jae
loope
addb
lcall
andb
pcmpgtb
push
hlt
pop
repz
add
stc
cmp
not
lods
lods
sbb
int
aam
jbe
pop
adc
es
jae
xorb
ja
mov
pop
and
int
add
sub
in
jp
in
push
imul
xchg
pop
shlb
movsb
inc
sbbb
int3
xor
sbb
hlt
add
js
mov
adc
cmovno
lock
or
mov
test
and
rcrl
mov
sub
gs
nop
mov
add
rcl
pop
and
jmp
and
mov
call
jo
jns
add
test
pop
jecxz
add
sub
jae
jb
push
or
arpl
push
mov
mov
lods
mov
xchg
rolb
js
or
imull
jp
add
xor
push
loopne
jae
add
mov
popl
pop
mov
loopne
lcall
lret
mov
adc
je
xor
int
add
dec
or
and
jb
bound
inc
lods
adc
inc
fdivrl
fwait
shll
push
sub
shrb
mov
aas
mov
rorb
cmp
ja
js
sbbl
lods
clc
dec
mov
mov
ret
push
lahf
and
add
and
inc
mov
jge
sbb
cmpsl
test
icebp
outsl
sbb
jmp
and
insl
repnz
adc
into
xchg
orb
int3
adc
add
repnz
pop
jns
and
or
sbb
nop
lock
enter
insl
imul
mov
or
lock
and
sbb
gs
mov
insb
jo
mov
push
ljmp
les
ds
inc
shlb
popa
out
inc
arpl
xchg
add
xchg
pushf
sbbb
div
xor
jno
cs
nop
add
in
jb
jg
xor
xor
lock
sbb
push
call
or
inc
mov
popf
inc
mov
add
pop
xchg
inc
sub
push
add
or
mov
add
push
mov
pop
cmp
mov
fsubrs
adcb
mov
mov
jo
cmpb
popf
push
push
pop
sub
mov
es
push
adc
mov
mov
or
js
jle
dec
jp
adc
mov
loopne
mov
fisttpll
sti
lea
insb
mov
andl
push
mov
je
add
or
add
sbb
sub
add
imul
add
jb
je
push
push
jp
or
dec
mov
and
add
mov
nop
add
nop
and
dec
pusha
or
lret
jge
sbb
mov
les
loopne
imul
or
or
pop
subl
mov
sbb
repnz
mov
or
and
xlat
add
add
xchg
cld
cmpsb
xor
or
das
scas
and
jo
or
cltd
sahf
test
adc
xor
testl
or
jecxz
xorb
add
xchg
cmc
xor
push
je
mov
cmp
inc
push
add
rcl
pop
cmp
cmp
scas
add
lret
rol
ffree
jle
pop
out
mov
negl
adc
aas
int3
pop
sti
pop
xor
cmp
inc
test
sbb
add
movsb
xchg
push
cmp
add
add
add
int
push
sbb
cmp
jne
sbb
xor
add
flds
mov
mov
mov
mov
out
dec
in
push
shlb
pushf
mov
push
add
into
insl
xorb
push
mov
fisubrl
add
mov
add
mov
mov
int
inc
push
and
adc
mov
add
cs
les
sbb
pusha
xor
ds
cmp
mov
int3
sub
test
aas
fisttpl
mov
pop
mov
mov
mov
clc
jge
lret
sbb
scas
test
pop
jo
outsb
aad
inc
add
std
out
fneni(8087
into
icebp
xor
push
sub
pop
popa
pop
sbb
xor
or
push
xchg
pop
xor
and
fidivl
jmp
mov
cmp
roll
sub
inc
jns
leave
pop
jl
mov
mov
scas
pop
lret
mov
push
inc
xchg
push
into
add
dec
lret
add
push
add
adc
add
inc
nop
stos
jbe
popa
ds
test
cvttps2pi
push
mov
push
dec
push
mov
lret
push
and
push
cmp
mov
cld
and
cmp
push
cmp
dec
ds
add
scas
mov
ret
add
js
rorl
rcrb
push
mov
add
jmp
and
data16
jle
dec
in
in
fstps
cmpsb
add
push
mov
into
in
addr16
adc
add
dec
and
pop
pop
insl
xchg
rol
cwtl
add
xor
adc
out
negb
mov
in
xor
movsb
jecxz
mov
ret
dec
xchg
lods
mov
in
shlb
pop
or
mov
mov
fwait
xchg
cli
lods
sub
scas
add
xchg
iret
in
adc
cmpb
enter
xchg
or
pop
add
jae
xlat
dec
jbe
inc
lea
inc
fnsave
jg
movb
push
xlat
jne
and
mov
add
mov
dec
xchg
mov
sarl
loopne
pop
dec
xchg
mov
jo
insb
ljmp
sub
rcl
dec
out
mov
in
movsl
add
popa
mov
push
push
xor
icebp
bound
jns
mov
mov
je
add
cmp
lcall
fstl
es
mov
lcall
cwtl
ljmp
add
test
insb
orb
add
xchg
jbe
adc
loopne
divb
add
mov
jecxz
mov
sbb
paddw
mov
test
rorl
inc
lret
push
jae
push
inc
ret
push
cmp
pop
fcmovnbe
xchg
in
pop
rolb
and
push
pusha
fiadds
rorl
loopne
sub
jb
test
add
aad
mov
lock
mov
aam
fbstp
mov
insb
aam
repz
int3
jle
add
push
das
xor
sbb
test
mov
movsl
into
cld
test
cwtl
stos
loopne
jl
add
call
or
add
push
loope
xlat
sbb
adc
add
ljmp
adc
push
mov
insb
push
inc
push
leave
cmp
imul
adc
xchg
pop
dec
adc
xchg
push
add
pop
inc
sbb
add
mov
or
icebp
loopne
mov
sbb
pop
inc
sbb
add
js
add
mov
push
xchg
inc
push
sub
jecxz
add
test
outsl
icebp
xchg
mov
add
movsl
stos
insb
jle
testl
cmp
gs
movsl
scas
in
jno
pushf
inc
lahf
push
inc
push
add
push
popa
add
and
xchg
movsl
xchg
bswap
out
loope
or
stos
xlat
jb
test
out
int3
pop
jp
jns
in
add
push
lcall
shl
es
outsl
mov
push
sar
sbb
xchg
lcall
add
test
xor
in
mov
movsl
push
cltd
lcall
out
dec
jae
jle
inc
out
push
popa
cmp
jle
loop
add
pop
sbb
inc
fucom
orl
vpmacssdqh
dec
cmpb
push
push
pop
add
addr16
insl
sub
xchg
bound
lods
mov
dec
push
shlb
add
imul
add
cmc
lcall
pop
icebp
dec
add
lock
in
or
push
clc
pop
add
inc
test
fdivs
xlat
lahf
aam
sbb
cld
xchg
mov
push
or
pop
sbb
xchg
test
mov
pop
rcr
and
mov
push
subl
mov
dec
lret
popl
cmp
in
pop
sub
cmpb
and
sbb
loope
sub
rorb
sub
jae
lods
mov
jl
jno
mov
sbb
adc
jns
add
pop
fwait
sub
sbbb
leave
or
cmp
nop
sbbb
jbe
test
dec
gs
addb
mov
push
nop
add
sub
jg
adc
clc
inc
mov
mov
jl
inc
or
or
scas
pop
or
jae
andl
xor
popa
push
jmp
mov
xchg
sbb
sub
or
and
add
cmp
int3
jmp
pop
ret
test
dec
loopne
add
aas
xor
lds
mov
sahf
add
sbb
ja
add
outsl
stos
or
mov
pusha
in
lcall
andl
mov
pop
test
mov
sbb
xchg
pop
je
xor
push
jbe
xor
xchg
push
adc
cli
sub
add
enter
cmp
or
add
push
icebp
adc
add
out
jnp
nop
inc
xor
and
cld
add
jge
ror
int
aaa
xchg
clc
sbb
hlt
ja
ss
arpl
add
or
mov
cld
fsubrs
je
add
in
outsl
sarl
lret
xchg
sub
fidivrs
cmp
aas
jle
sub
dec
sbb
loope
mov
cmp
cltd
mov
mov
jb
xchg
test
sub
and
jns
mulb
mov
cld
orb
xor
in
xchg
mov
cmp
popa
xchg
lock
and
out
pop
icebp
sub
dec
pop
inc
sbb
out
and
mov
cld
out
aad
lds
insl
ss
stos
call
jecxz
rcrl
imul
outsl
or
mov
and
inc
jno
adc
xor
test
stos
xchg
addr16
rorb
add
mov
popf
lahf
sbb
inc
mov
xchg
cli
lea
jne
flds
enter
push
or
sub
or
arpl
add
jno
add
sub
mov
inc
mov
test
icebp
mov
ds
add
pop
jae
fld1
rorb
add
jge
xor
push
ljmp
loopne
out
add
cs
pop
push
aam
incb
push
or
movsb
aad
lahf
sbb
ret
rorb
xor
add
mov
push
aam
sbb
mov
dec
add
cmp
xchg
add
adc
arpl
lea
xor
nop
push
add
addr16
pop
mov
xor
xlat
add
aad
inc
xchg
mov
in
xchg
cmp
rclb
stos
cmp
aas
mov
mov
and
ljmp
mov
mov
fimull
mov
sub
adc
adcb
sqrtps
jmp
cli
ja
mov
out
incb
int3
pop
shrl
leave
mov
shrb
mov
add
add
dec
mov
cmpsl
add
cmp
add
cs
enter
test
add
jmp
js
cwtl
push
add
add
cmp
out
movsb
pop
sbbb
call
dec
outsl
pop
hlt
jl
add
fidivrl
xchg
jmp
cwtl
and
fldl
roll
into
loope
cli
xor
xor
pop
cld
mov
add
inc
push
stc
mov
inc
cli
push
lret
xchg
push
clc
aas
int3
sub
or
pop
cld
jno
addb
cmp
sub
add
mov
loopne
int
in
ja
jne
dec
cltd
xor
and
xchg
pusha
push
cmp
cli
fcomi
mov
add
js
push
fsubrl
adc
add
mulb
push
push
xor
mov
fwait
pushf
mov
push
mov
call
enter
and
sbb
pop
cli
std
sahf
inc
ret
jecxz
movsb
push
rcr
jo
cmp
adcb
out
mov
and
add
dec
decl
aas
jnp
jl
bound
cmp
insl
adc
dec
xor
and
jbe
push
adc
cmpb
div
jge
add
cli
mov
push
add
gs
out
clc
stos
fptan
jo
push
or
add
addr16
add
dec
out
xchg
mov
call
jmp
mov
cmpsl
outsl
cltd
add
dec
add
into
xchg
lret
add
fiaddl
mov
mov
jg
cwtl
pop
popf
xor
and
cmp
sub
cmp
pop
add
cwtl
push
pusha
xchg
lock
movsl
pop
jmp
mov
outsl
lock
sub
test
add
cwtl
pushf
adc
repz
xor
pop
rcrb
rcll
xchg
add
outsl
cmc
jnp
push
xor
add
hlt
mov
add
cs
mov
sahf
fwait
add
movsl
jl
or
xchg
jae
jmp
sub
dec
hlt
je
stc
fxtract
jle
lock
nop
and
ds
sub
fbld
push
or
add
je
add
cmp
xchg
add
sahf
and
lods
negb
lock
ja
insl
add
cld
mov
or
xlat
jo
movb
inc
mov
lret
mov
add
push
int3
add
mov
hlt
push
mov
sub
popa
add
orb
shl
aam
shrb
and
inc
je
popf
shrb
dec
ret
loopne
add
add
mov
inc
dec
pop
push
in
mov
or
mov
sbbb
mov
test
xlat
push
sbb
adc
cs
jbe
mov
icebp
sbb
out
add
ss
btc
into
dec
or
lock
add
call
add
sbb
outsb
add
and
popf
mov
inc
aam
sbb
rolb
rolb
push
pop
les
sti
xor
adcb
mov
adc
adc
add
insb
push
sbb
or
cmp
push
test
xor
mov
dec
jae
cmp
sub
mov
push
cld
xchg
lea
xchg
std
pop
pop
jmp
or
movsb
pusha
xor
nop
call
xor
xor
sub
push
and
daa
jl
pusha
out
icebp
loop
pop
or
mov
add
mov
stos
mov
pop
mov
mov
jg
mov
outsb
adc
inc
push
inc
mov
movsl
hlt
add
mov
or
call
or
add
push
mov
jne
add
mov
ds
loopne
rorb
xlat
jp
sqrtps
and
rolb
dec
push
in
movlps
sbb
mov
cmc
mov
add
cmpsl
and
adc
xchg
mov
mov
xor
cltd
push
add
roll
mov
js
scas
sahf
cmp
mov
clc
jl
add
cmpl
adc
push
adc
pop
movsb
push
adc
and
mov
push
outsl
push
pop
mov
push
pop
das
arpl
cmp
pop
call
sbb
leave
in
pop
out
add
out
lds
cld
rcl
outsb
adc
ja
stc
ret
negb
inc
dec
inc
insl
add
out
addl
es
nop
add
stos
xchg
mov
and
pop
mov
out
push
shr
sbb
jle
aam
lea
inc
add
sbb
and
sub
or
or
mov
mov
ds
xchg
adc
aas
add
into
pop
imull
inc
pop
std
jecxz
dec
add
mov
popa
jno
xlat
mov
inc
insb
inc
pop
out
jno
inc
imul
xchg
or
cli
add
push
rcrb
sbb
push
movsb
in
testb
mov
sbb
push
inc
sub
movl
inc
dec
xor
add
test
lods
jnp
add
in
test
adc
fmuls
cmc
and
adc
repz
mov
jge
add
scas
repnz
push
nop
cmp
orl
dec
std
loopne
pop
pop
xor
push
dec
inc
jle
test
mov
dec
popl
mov
fcoml
pop
push
sbb
in
sar
mov
and
andb
jg
aam
fidivs
out
mov
mov
shll
es
add
das
cmp
add
and
cltd
xchg
bound
xor
push
stos
cmp
sub
sbb
pop
jns
testl
push
rcl
rolb
shld
cmp
mov
pop
test
dec
push
pop
test
lock
mov
pushf
inc
adc
add
pusha
push
push
dec
fcoml
inc
push
mov
inc
push
lods
sbb
aad
add
xor
popf
lds
jl
jne
test
inc
xor
xchg
sbbl
int
push
xchg
sbb
add
jae
push
test
pop
hlt
add
or
loopne
dec
sbb
jl
cld
aas
cmpsl
adc
loope
lahf
nop
add
dec
arpl
andl
pop
push
jl
inc
or
lahf
sbbb
movsb
addl
pop
add
inc
mov
in
jmp
enter
test
xor
adc
test
addb
stos
sub
in
sbb
roll
sbb
push
out
imul
or
mov
mov
adc
sahf
jb
and
mov
fsts
in
mov
adc
add
mov
lods
inc
sbb
jg
dec
arpl
mov
add
inc
addb
outsl
xor
imul
xor
dec
mov
jmp
and
lea
push
add
pop
repnz
xchg
push
or
loope
sti
add
mov
add
or
lock
dec
add
and
push
fcompl
nop
sub
adc
add
leave
test
adc
xor
mov
ljmp
add
pop
test
pop
xor
imul
data16
jne
pop
sub
or
or
mov
arpl
repnz
push
fs
cmpl
nop
test
dec
in
insl
jle
gs
scas
int3
in
push
fnstcw
mov
sahf
inc
cld
adc
fistpll
dec
xchg
pop
js
dec
jle
loopne
mov
mov
sbb
add
inc
ds
mov
loope
dec
add
sbb
lcall
add
fists
test
jl
xchg
pop
cmp
pusha
inc
fsubl
dec
xchg
adc
xor
jmp
xchg
sub
lahf
std
mov
jle
inc
and
sbb
xchg
cmp
orl
gs
jno
sbbb
adc
cli
pop
mov
mov
adc
imul
and
push
mov
mov
or
push
push
sarl
xor
enter
test
rorl
inc
cmpsb
pop
mov
mov
mov
jle
je
mov
mov
imul
jmp
cmp
and
add
xor
xlat
add
cs
pop
jg
lods
lret
cmp
sti
inc
pop
add
std
fidivl
dec
pop
cmp
and
andb
mov
fs
add
pop
mov
push
adc
test
cmp
lds
mov
repz
inc
pop
sbb
fcomps
sysenter
add
sbb
mov
mov
pusha
dec
clc
adc
or
fistps
or
sbb
cltd
movsb
notb
rorl
add
loope
cwtl
lret
enter
xchg
inc
leave
test
ret
cmp
mov
mov
push
frstor
pop
push
jle
ret
inc
add
out
xchg
ja
adc
sub
es
rep
loope,pn
xchg
cld
stc
mov
add
mov
jp
fadds
add
sti
inc
sbb
inc
loope
out
insb
pop
dec
dec
jl
add
cmpsb
push
mov
cmp
test
inc
aas
xchg
mov
push
daa
mov
jb
add
cmp
dec
lea
xor
lods
movsl
and
lahf
pop
pop
rclb
stc
rclb
dec
sbb
inc
sub
out
xchg
add
cs
sbb
incl
add
fs
out
ja
add
jp
jo
push
mov
dec
add
sti
fdivs
cltd
jmp
repz
out
enter
divl
mov
jl,pn
push
mov
and
push
inc
xorb
aaa
inc
xor
xchg
push
in
pop
sbb
push
fwait
mov
dec
xchg
sahf
in
call
mov
aam
xorb
and
push
int
test
dec
mov
pushf
repnz
push
cs
xlat
xor
or
pop
jae
push
jmp
dec
and
inc
inc
add
rcr
mov
ja
popf
push
mov
and
shll
and
lds
mov
jl
enter
fmulp
push
jae
bound
add
jns
add
inc
dec
pop
xor
and
sbbl
add
mov
adc
add
xor
add
movsl
aaa
jmp
test
push
dec
out
stos
lret
add
test
xchg
daa
pushf
push
jl
orb
movsl
stos
inc
dec
arpl
xchg
add
rcl
lret
push
adc
mov
add
or
int
test
xchg
xlat
fisttpl
cs
rcr
add
fnstsw
orb
mov
cld
cmpxchg
add
add
inc
sub
jae
dec
jo
mov
mov
cltd
add
add
mov
mov
out
rolb
add
addl
pusha
in
fdiv
cmpsl
xor
and
push
xor
jle
lds
add
test
popa
fsts
jno
out
jo
sbb
cwtl
loopne
paddusb
inc
fs
int3
and
inc
cmp
aam
fstl
mov
fsubs
cs
sub
mov
xor
and
mov
mov
xor
out
es
movl
cmp
add
ds
sbb
leave
int
sub
lds
add
sbb
shll
add
xchg
xchg
cmc
fists
add
mov
ja
add
sub
jne
addr16
push
add
sti
push
or
js
bound
mov
lods
mov
inc
aad
add
mov
adc
add
das
mov
cmp
into
add
cmc
dec
faddp
insb
or
sbb
xchg
add
ror
aad
jmp
jae
outsb
push
add
andl
sub
andb
sub
out
addr16
cli
jns
fstl
dec
pusha
out
add
jae
mov
inc
push
xor
rclb
sbb
add
adc
dec
pop
setbe
adc
int3
ret
pop
add
xor
popa
cmp
xchg
cmp
lods
orb
stos
add
adc
add
leave
cltd
xor
push
stc
pop
dec
pop
xor
adc
test
stc
jl
xor
testl
out
adc
pop
lcall
lock
jnp
add
adc
nop
xchg
outsb
mov
cmp
addr16
scas
ss
pop
es
xor
mov
mov
mulb
ret
loop
push
daa
cmp
and
jne
cmp
loope
pop
repnz
xor
or
scas
test
cltd
cmp
cmp
xorl
and
push
push
pushf
sbb
mov
xchg
pop
xchg
shll
cmpsb
push
loopne
lea
push
push
mov
mov
adc
loopne
fisttps
sbb
inc
add
ret
lock
add
push
inc
cld
pop
sar
daa
popf
pop
sub
mov
inc
bound
rolb
sub
imul
filds
push
rolb
test
xchg
xchg
or
add
sub
lea
dec
shr
inc
sarb
lcall
and
jno
aas
bswap
sbbb
mov
data16
fsubr
pushf
fwait
add
mov
ficoms
shrl
ret
movsl
fiaddl
cmp
jo
add
subl
add
pop
into
decb
or
jae
outsl
jecxz
cmp
push
push
mull
mov
xor
loop
gs
push
out
das
cmp
mov
mov
inc
push
or
mov
nop
imul
adc
mov
sbb
mov
add
gs
inc
pop
ja
or
ret
add
adc
inc
aam
add
shl
subl
push
add
int
mov
and
fldl
xchg
cmp
inc
xor
sub
filds
mov
insb
push
clc
add
pop
loopne
movsl
adc
iret
fsts
push
xor
mov
dec
mov
insl
inc
into
sub
mov
mov
add
aaa
xor
rcl
jae
mov
inc
adc
push
ret
sbb
pop
int
rorb
outsb
push
and
lods
adc
scas
insl
xchg
fwait
xorb
sbb
loope
add
push
mov
or
call
popa
or
lods
adc
loopne
stos
bound
aad
mov
mov
addr16
xor
test
fwait
mov
and
mov
add
jp
pop
add
dec
mov
add
add
jmp
ja
mov
jle
fwait
cmp
nop
lea
mov
xchg
adc
push
stos
adc
lods
or
cmp
cli
test
mov
add
test
mov
mov
fdivrs
mov
dec
sbb
mov
insb
sub
nop
or
es
aaa
add
dec
mov
fstl
add
mov
dec
cld
adc
or
in
add
fcompl
int
incl
addr16
icebp
sub
shld
call
fcoms
in
sarb
pop
add
loopne
stos
aaa
mov
testb
inc
mov
jo
mov
mov
in
jg
mov
movsb
and
dec
add
cmp
test
add
push
sub
add
scas
dec
shrl
lahf
pop
call
popf
pop
pop
mov
xchg
cmc
dec
out
stos
xor
jbe
mov
xor
flds
xor
cmp
pushf
push
aas
cmpsl
adc
xor
scas
add
bound
xchg
rcr
fadds
add
inc
push
sbb
cmpsl
push
add
mov
orb
or
jbe
dec
and
mov
sbb
cmpsb
stc
ja
add
add
inc
in
dec
pop
testl
dec
inc
or
daa
inc
inc
inc
jo
push
and
mov
jge
or
add
clc
or
or
push
add
adc
pop
out
stc
gs
pop
rorl
push
inc
cmp
add
adc
sbb
add
aad
lcall
add
add
movb
add
leave
test
adc
aas
scas
jp
mov
sub
enter
dec
xor
sti
pop
xchg
dec
pop
mov
cmp
aas
jmp
add
xlat
pusha
mov
cmp
pop
dec
push
hlt
push
cmp
and
pop
jge
add
pop
pop
test
push
pop
xchg
cli
cmpsl
mov
loop
insb
popl
out
cld
dec
mov
stos
lret
addr16
or
mov
psubq
jmp
add
inc
loopne
out
add
subb
mov
inc
mov
popl
inc
movsb
fwait
aas
decb
fdivrs
jmp
lock
fs
push
mov
pop
subb
mov
xchg
sub
cvtps2pd
dec
or
cmp
xor
ret
insb
adc
push
test
rolb
cmp
add
andl
pushf
fdivs
dec
dec
clc
scas
in
dec
stc
add
mov
in
imul
je
cld
loope
sbb
clc
sbb
mov
dec
jno
xchg
fidivl
js
cwtl
addl
dec
in
and
inc
add
inc
test
cli
arpl
pop
push
push
jecxz
fwait
pop
sbb
andb
xchg
cli
pop
xor
pop
nop
mov
mov
sub
xchg
aaa
add
add
in
push
lods
insb
sarl
cmp
loopne
pop
out
add
mov
and
dec
add
pop
mov
cs
pop
lahf
pmaxub
clc
inc
mov
cwtl
outsb
mov
mov
and
test
sbb
add
sbb
lods
insb
dec
adc
ror
xor
or
in
dec
lods
aam
imul
les
loopne
mov
jmp
or
mov
adc
popa
pushf
push
nop
ficoms
es
mov
shl
xchg
popa
stc
sbb
les
mov
cld
add
mov
decl
add
pop
outsl
dec
in
out
jmp
in
mov
pop
or
pop
inc
adc
pop
adcb
inc
iret
aaa
add
pop
inc
push
inc
outsl
push
int3
or
and
cmp
pop
rcrb
fld
idivl
sarl
dec
das
jmp
test
sbb
flds
or
mul
jecxz
dec
or
and
add
mov
cwtl
jmp
xchg
add
lahf
out
adc
dec
jge
sbbl
je
les
inc
xor
adc
std
adc
je
cmp
pop
movsl
bound
mov
testb
xchg
xor
pop
addr16
incl
insb
or
ja
pop
push
mov
in
add
xchg
mov
jg
pusha
hlt
pusha
out
adc
int
in
xor
sub
outsb
sahf
and
adc
pop
mov
add
daa
or
addr16
push
call
jmp
mov
pop
loopne
add
fcomi
loopne
jnp
add
sbb
and
pop
add
pop
mov
jmp
pop
std
xor
jmp
lea
subb
popf
sbb
add
ja
loop
sub
jmp
inc
lahf
in
cmp
jo
sub
pop
sub
add
lds
stc
in
add
mov
scas
sbb
ret
divb
pop
enter
pusha
adc
and
into
dec
adc
add
push
test
sbb
orb
jno
dec
outsl
or
and
das
test
shr
pop
mov
mov
inc
ljmp
add
lods
out
mov
repz
pop
mov
or
xor
mov
in
outsb
pop
lds
stos
inc
aad
cmpsl
in
cmp
rcrl
push
mov
arpl
push
inc
inc
or
add
sbb
push
data16
scas
push
add
push
xor
cmp
lret
orb
add
daa
xor
jp
shl
add
mov
jmp
scas
push
imul
jecxz
sub
in
cltd
ss
pushf
xchg
aam
rcr
jge
add
adc
fsubrs
or
mov
add
xor
inc
pop
adc
add
sbb
arpl
jae
xor
nop
mov
rclb
lea
aaa
add
or
xchg
push
jecxz
push
flds
jle
cmp
jl
faddl
lock
sarb
cmp
add
sub
xchg
aad
push
add
mov
cwtl
js
mov
inc
or
cmp
int3
sbb
fmull
inc
fcos
and
add
sbb
jle
aad
and
adc
mov
mov
jecxz
cmp
in
lcall
or
push
add
xlat
adc
adc
jbe
loope
jb
sbb
fadd
inc
add
das
cmpsl
mov
add
sti
mov
loope
iret
push
lret
insb
dec
shrb
mov
jle
sub
in
in
mov
push
sbb
add
and
mov
bound
push
mov
inc
in
add
cmp
testl
add
in
mov
pop
and
jmp
lods
sarl
push
add
mov
fidivl
cwtl
add
js
add
inc
cmc
and
jecxz
xor
sub
push
add
out
in
ret
les
xadd
test
pop
repz
int
ljmp
add
sbb
pusha
mov
pextrw
lods
shll
loopne
pushl
sbbl
pop
shlb
arpl
add
out
mov
and
adc
push
mov
jl
add
stos
sbb
add
ror
cmp
div
push
xchg
icebp
mov
push
std
and
or
xchg
adc
inc
popw
cmpsl
jle
add
enter
push
xchg
dec
add
insb
call
xor
add
cmp
dec
aaa
mov
ja
mov
insl
leave
push
sub
das
add
lds
or
push
pop
xchg
dec
adc
push
fbld
add
and
xchg
add
cmp
pop
stos
stos
dec
pusha
push
push
or
jmp
idivb
insl
movsb
pushf
cmp
or
clc
mov
add
pop
inc
mov
divl
fcoms
jbe
push
cltd
imul
and
xor
hlt
addr16
inc
and
pop
xchg
fldenv
add
cltd
icebp
imul
sub
test
roll
push
xchg
loop
push
cmpsl
mov
rolb
and
lcall
mov
enter
pop
sbb
add
iret
pop
cmc
fmulp
ret
adc
cmp
imull
add
add
push
scas
xor
mov
xchg
xor
xor
pop
xchg
loop
adc
rcrb
cmp
pop
out
xor
mov
xor
mov
jo
jecxz
inc
add
bound
ljmp
add
push
js
adcb
into
pop
pop
loopne
inc
roll
rcll
or
movb
stos
movswl
pushf
inc
add
mov
add
cmp
arpl
dec
add
call
mov
inc
xor
movsl
mov
jge
sub
imul
jae
pop
stc
lds
pusha
das
add
inc
pop
lock
addb
xchg
dec
add
sbb
dec
jne
lods
imul
cmpsl
mov
out
cli
push
add
movsb
push
jge
add
js
mov
roll
lahf
pop
dec
mov
es
in
setb
push
cmpsl
in
jo
push
lcall
add
sub
clc
cmpb
lcall
and
jecxz
mov
fiaddl
mov
in
nop
sbb
inc
adcl
ds
loopne
popf
and
inc
lock
ret
dec
mov
incb
pop
aad
add
test
mov
add
xor
adc
out
adc
cmc
sub
mov
mov
scas
dec
and
mov
xchg
daa
mov
push
xor
push
dec
xor
ds
add
cmp
xor
and
fsts
aaa
ds
cmp
faddl
aaa
add
cmc
xchg
cmc
loope
popa
scas
add
mov
xor
psllw
xlat
push
push
sbb
loop
cwtl
leave
sarl
pop
hlt
ja
xchg
cmp
cmp
cltd
add
cmp
push
mov
sarb
test
add
lcall
pop
or
push
sbb
dec
add
xchg
test
push
or
adc
cmp
add
divl
push
enter
scas
fwait
sarl
nop
add
and
push
push
loope
dec
xchg
mov
or
ss
xor
inc
mov
popa
xchg
or
out
jle
cmp
or
cld
inc
cmp
mov
fsubrl
rolb
mov
adc
or
les
or
dec
xchg
jb
in
mov
xchg
inc
add
sbb
adc
fadd
push
dec
repnz
lock
add
mov
imull
sub
and
bound
mov
adc
mov
ret
cmp
add
push
adc
xchg
sub
je
add
pop
jecxz
sbb
dec
in
inc
stos
cmc
and
mov
mov
iret
xor
daa
push
mov
mov
sbb
sub
push
pop
push
rcll
pop
pop
inc
sbb
push
movsl
addl
add
sarb
or
imul
ret
or
jo
cli
push
add
adc
adc
xchg
mov
add
mov
pop
add
and
imul
or
cmpsl
and
xchg
cmp
pop
sbb
and
add
mov
jno
add
je
cli
mov
push
jno
xchg
or
push
add
out
gs
shlb
mov
and
and
js
shrb
add
cmp
push
or
pop
xchg
int3
mov
add
shrl
movups
cmp
xorl
inc
add
cmpb
imul
lret
xchg
stos
push
das
incl
cmp
add
int3
je
pop
pop
mov
cmpsl
add
mov
imul
xchg
pusha
add
or
icebp
std
mov
add
push
sub
inc
mov
mov
call
or
sub
lahf
dec
stc
xchg
and
outsb
jl
add
in
sub
hlt
sbb
jae
repnz
push
fsubrp
add
lock
jecxz
pop
jo
xlat
dec
mov
pop
add
mov
mov
add
mov
push
pop
add
js
push
and
adc
dec
prefetcht2
iret
fdivrl
inc
into
mov
push
and
cmp
mov
std
dec
inc
xor
mov
pop
add
adc
or
add
lcall
sar
mov
popf
push
or
subb
push
aas
loopne
jne
paddb
in
loopne
dec
lcall
cli
cmp
push
test
pop
pop
pop
out
bnd
or
mov
ficompl
out
mov
push
sbb
test
cmp
addb
ret
les
jo
in
ret
sbb
pop
std
add
lret
push
and
xchg
rep
fwait
add
bound
sbb
add
cld
xchg
outsl
jo
dec
dec
movd
sub
or
sahf
inc
cmp
inc
inc
sbb
sbb
shrb
or
dec
test
and
sub
in
and
adc
ds
ljmp
loopne
iret
dec
adc
cli
pop
jae
push
mov
xor
inc
add
fisubs
push
data16
jecxz
jno
sub
ficoml
pop
xchg
add
jo
mov
popf
repnz
push
fnsave
imul
pop
pop
mov
add
data16
mov
xchg
cmp
test
cltd
ljmp
insb
xchg
rcrb
inc
lea
enter
popa
int
icebp
movsl
ret
test
loop
pusha
das
lcall
out
inc
xor
mov
xchg
add
jno
arpl
push
es
xchg
inc
xor
or
fs
fisttpl
push
add
clc
lods
stc
not
addb
loope
arpl
inc
aaa
adc
in
test
cmp
lret
roll
loope
imul
vmwrite
xlat
sub
xchg
out
dec
lret
xor
add
jl
mov
mov
movsl
and
ret
inc
in
sti
cmpb
xchg
add
mov
addb
mov
add
lods
outsl
or
cli
sahf
and
subl
addb
fsubr
outsb
jo
add
cmp
faddl
daa
sub
popf
or
sahf
mov
pop
adc
mov
jae
fcompl
or
add
cmp
lea
add
jmp
mov
lret
push
xor
mov
mov
repnz
inc
pop
ljmp
xchg
mov
jno
sbb
std
nop
repnz
add
add
test
or
add
push
mov
addb
ror
mov
add
sbb
out
or
jl
ret
daa
mov
les
and
imul
jmp
adc
loop
jb
test
shll
or
iret
loop
pop
xchg
mov
inc
fbstp
jg
cmpsl
nop
add
scas
or
lret
outsl
pop
cmp
mov
shrb
cltd
prefetchwt1
lret
mov
push
jge
test
mov
dec
das
add
jecxz
add
popa
leave
mov
xlat
cmp
fdivl
jo
stos
int3
adc
pop
inc
jle
xor
rcrb
jne
jb
add
shll
or
mov
sbbb
add
add
addl
add
xchg
mov
add
nop
adc
in
add
andl
mov
bound
add
jle
inc
imul
or
xor
add
cli
or
arpl
add
into
incb
test
mov
stos
sbb
movsb
push
mov
sahf
pop
dec
push
cmp
xchg
xlat
mov
and
adcl
push
out
pop
mov
mov
sub
cld
mov
pop
mov
hlt
and
je
add
adc
mov
add
rcrb
sbb
lcall
out
adc
add
mov
add
inc
fcmovb
sub
push
adc
cmc
ret
xchg
or
mov
or
add
repnz
scas
cld
add
sarl
cmp
cmpb
movl
xor
cmpsb
xchg
mov
sarl
sub
inc
mov
gs
pop
out
sub
popf
leave
push
add
hlt
adc
clc
cltd
add
xor
push
fdivrl
lea
je
add
pop
mov
pusha
in
mov
not
inc
sub
push
imul
xorb
shr
jns
fs
out
popa
js
mov
cmp
roll
add
rcll
leave
cmc
xor
xchg
fimull
inc
or
sbbb
add
jno
pop
jns
test
add
sub
jge
push
out
out
test
mov
fs
lods
add
movsl
sbb
jp
and
dec
cmp
mov
sub
add
dec
inc
inc
cwtl
scas
lret
rolb
add
push
jbe
jp
cwtl
enter
rcll
inc
sbb
imul
add
out
cmp
sub
out
and
test
loopne
aad
dec
aaa
pusha
sbb
subb
mov
lcall
pop
scas
rcrb
ja
mov
add
lods
fwait
mov
push
sahf
fistpl
pop
enter
sbbb
or
dec
adc
xchg
fcomps
mov
fcomps
test
jb
add
outsl
scas
nop
sbb
xor
mov
cmp
dec
dec
sbb
xor
xchg
insb
adc
sub
popl
jo
rclb
in
xorb
jae
push
out
add
inc
adcl
mov
enter
xor
push
push
push
mov
inc
xor
and
shrb
add
in
xor
push
lods
dec
pcmpgtb
stos
aaa
mov
fs
pop
mov
nop
adc
mov
xlat
pop
cwtl
add
inc
xchg
inc
nop
in
pusha
rdpmc
add
xlat
sbb
fwait
mov
cmp
std
nop
fsubl
orb
inc
int3
jo
imul
into
dec
add
mov
fdivrl
xor
jo
dec
cld
les
repz
xor
push
fimull
cmp
repnz
les
xor
sbb
setno
imulb
ja
dec
cmp
movsb
sbb
lods
stos
mov
jle
js
sbb
mov
ret
push
mov
shll
das
cmpsl
xlat
sahf
loopne
cmp
push
fs
inc
test
icebp
dec
xchg
mov
and
jmp
cltd
notb
jae
notl
imul
testb
ficompl
jl
push
stos
cli
add
out
or
sbb
cmc
shlb
and
ret
fldcw
push
dec
xorl
clc
in
nop
push
add
xlat
inc
lods
andb
cmpsl
lods
sbb
shll
enter
test
faddl
mov
pop
push
xor
and
in
fs
icebp
push
aas
test
repz
lods
nop
clc
dec
scas
cwtl
or
inc
mov
mov
sub
jnp
je
sbb
ss
add
sbb
jo
and
aad
dec
jo
in
shlb
aad
cwtl
dec
movsb
or
insb
shlb
inc
jge
cwtl
sbb
and
mov
cmp
adc
push
jbe
jne
dec
add
in
iret
popf
cs
lock
sti
inc
adc
outsb
xor
cli
push
clc
mov
jl
mov
pop
repz
jns
add
lds
sbbb
add
inc
cmc
sub
mov
add
add
aas
cmp
out
lret
andb
ja
sub
push
mov
imul
lea
repz
movsl
fsts
sub
adc
int3
adc
adc
sarb
xchg
jb
leave
pop
das
add
jnp
pop
pop
mov
enter
xchg
mov
mov
pop
lods
stos
sub
cwtl
xor
scas
sub
jo
mov
adc
sub
xchg
pop
xor
pop
andl
mov
mov
cmpsl
psubusw
sub
subb
and
into
inc
jle
stc
dec
push
nopl
outsl
in
subb
f2xm1
test
out
cmp
jecxz
pop
fstpl
pushf
popf
insl
ret
xchg
lods
sbb
xchg
xor
mov
mov
cmp
popf
cli
sarl
lret
adc
in
mov
stc
or
jecxz
pop
pop
inc
roll
jno
sub
cmp
pusha
add
mov
fs
add
and
out
sarb
and
add
jae
cmp
sub
and
rolb
dec
cmp
enter
add
push
cmp
add
mov
xor
add
cmp
mov
inc
cltd
jle
js
repz
cmc
push
fs
sbb
push
xchg
fadds
aaa
shl
pop
aam
mov
inc
sbb
or
in
mov
js
jns
hlt
dec
loop
les
and
pop
add
iret
dec
orb
xchg
stc
add
aam
mov
mov
fs
jg
les
into
fidivrl
inc
enter
xchg
testb
push
icebp
mov
rol
in
lret
hlt
pop
sbbb
repz
mov
inc
push
popa
icebp
add
pushw
dec
inc
repz
ljmp
adc
in
imul
jp
movl
stos
repz
and
ficoml
mov
mov
pusha
in
loop
add
sub
cmp
mov
fcompl
hlt
mov
adc
dec
mov
or
inc
scas
sbb
dec
mov
scas
insb
mov
add
sub
or
inc
enter
cmp
movsb
repnz
enter
mov
inc
pop
add
sub
shlb
in
push
in
mov
aad
repz
lds
ret
lods
inc
xchg
xchg
idiv
lock
push
add
and
subl
dec
add
jae
xor
pop
std
sub
push
and
xchg
or
push
add
sbb
inc
mov
add
andl
inc
call
sbb
pop
mov
loopne
sub
test
inc
movsb
scas
mov
lods
jnp
rep
sub
and
sbb
sbb
addb
sbb
sti
pop
rcrb
lret
icebp
cmpsb
test
test
jle
mov
xlat
push
rolb
shrl
jl
jmp
push
repnz
rolb
pop
jno
stos
es
mov
push
or
mov
ret
es
add
ret
inc
dec
in
outsl
cmp
aaa
add
or
fisubl
xor
dec
paddq
add
outsb
imul
add
and
jg
xchg
jl
in
addb
pusha
hlt
out
test
pop
dec
and
fstl
into
cmp
sbb
or
xchg
jecxz
adc
hlt
mov
icebp
xchg
bound
push
jnp
add
push
add
pop
shl
in
cwtl
dec
testl
adc
cwtl
mov
xchg
in
inc
jmp
in
cmpsl
add
and
call
xor
lret
add
je
and
xor
cmp
loope
sub
out
rol
push
add
test
adc
icebp
dec
test
xor
xor
xor
xchg
hlt
add
adc
cmpsb
sbb
and
add
sbb
xlat
dec
outsb
dec
add
repz
popa
and
fadds
push
jae
xlat
xor
aad
lahf
pop
test
sbb
inc
adc
adc
lahf
es
jbe
add
xor
hlt
mov
adc
fnstcw
mov
addb
cmc
sbb
push
icebp
inc
test
sbb
cmpl
movsl
push
mov
or
jp
mov
orl
push
into
dec
add
cmc
xlat
or
cmp
test
mov
movsb
inc
xlat
js
mov
mov
xchg
shl
mov
fmuls
jmp
in
cmp
dec
rorb
add
and
add
mov
sub
rorb
jne
aas
add
ja
rcrl
dec
loope
into
pop
mov
jg
in
push
mov
sbb
add
xor
add
mov
inc
mov
lret
adc
sbb
sub
jno
test
hlt
test
push
call
filds
dec
add
mulb
call
add
adc
mov
enter
or
mov
and
rcrl
sub
xor
addl
adc
dec
les
jae
cltd
es
cmp
ljmp
fsubr
push
mov
cmp
mov
and
jl
and
and
prefetchwt1
add
sarb
cmp
add
pop
ret
aam
pop
fstl
shlb
and
or
aas
stc
cli
lea
into
push
stos
cmp
aad
lcall
push
jmp
jb
imul
xorb
jge
add
das
xchg
inc
cmpsl
inc
cmp
xchg
rol
addr16
bound
icebp
je
iret
nop
xchg
cmpsb
and
jo
filds
fldcw
arpl
andl
and
lods
cmp
xchg
sub
outsb
or
xor
mov
cmpsb
push
xor
daa
je
add
inc
pop
mov
stc
or
mov
shrl
es
push
aaa
add
dec
xchg
aad
fdivrs
add
push
faddp
add
dec
enter
xorl
pop
lret
jbe
int3
xor
or
ret
jl
sub
enter
arpl
stos
je
scas
popa
add
rclb
adc
mov
xchg
stos
mov
add
mov
xor
or
jmp
add
ljmp
insl
fiaddl
pop
cmp
jp
add
inc
arpl
cs
mov
mov
fsubl
cli
mov
add
jg
push
mov
xchg
sub
les
and
cld
mov
lods
popf
dec
mov
incb
test
push
inc
insb
lock
jb
nopl
in
xor
icebp
mov
push
push
loopne
iret
add
cmp
cmpsl
cld
nopl
fstpl
lahf
add
sti
mov
pop
mov
xlat
jns
in
and
test
add
jmp
pop
jecxz
mov
or
pop
movsb
xchg
aas
orl
mov
mov
in
jmp
sarb
das
inc
js
fiadds
and
and
enter
mov
mov
fsts
nop
xor
call
pop
leave
pop
enter
jbe
or
xor
subb
add
cs
cmpsl
hlt
jbe
lret
mov
pop
call
sub
insb
sub
aad
aam
shll
add
push
leave
call
test
mov
push
aas
inc
mov
mov
add
adcl
cmpb
lods
push
out
in
rolb
daa
cmp
out
push
add
mov
mov
push
jns
pusha
scas
adc
movsl
test
add
pop
jne
jmp
xchg
test
mov
push
leave
ds
cmpsl
imul
add
and
arpl
mov
shlb
out
mov
fldl
add
repnz
push
pop
jecxz
ret
cltd
add
ret
add
mov
pop
sbb
mov
scas
xor
dec
mov
andb
mov
or
xchg
lods
cmp
and
sbb
push
andl
jae
mov
scas
ret
push
add
lock
sbb
xor
pop
push
and
in
lret
mov
cmp
test
rcr
add
lahf
inc
pop
pusha
int
dec
add
or
dec
cmp
push
cltd
xor
test
lods
xor
jb
nop
jg
sbb
outsb
and
repz
jnp
push
push
and
lret
ret
fs
add
pop
popf
cli
jecxz
and
loope
out
mov
add
jge
pop
ds
push
cmc
mov
mov
and
add
aaa
mov
in
test
sti
movsb
ss
mov
test
arpl
es
outsb
dec
inc
add
mov
sub
insl
sahf
mov
out
xor
enter
pop
add
add
push
ljmp
lea
cmp
push
add
or
fbld
xor
lret
mov
and
add
dec
pop
add
adc
pop
std
add
add
test
add
dec
std
inc
mov
in
cmp
add
outsl
adc
addb
adc
or
js
pop
lcall
cwtl
addr16
pop
loopne
cmp
fists
push
mov
xor
mov
xor
push
xor
xor
fdivrl
push
sbbl
inc
sbb
rcrb
push
and
mov
jp
les
add
inc
pushf
movsb
add
call
in
inc
pusha
add
int3
scas
hlt
cmp
push
imul
dec
dec
mov
lods
push
add
xchg
mov
and
xchg
xchg
mov
dec
xchg
incl
scas
popl
enter
or
nop
push
adc
aaa
jnp
sarb
xor
faddl
jmp
out
in
dec
push
dec
add
out
pop
jle
cld
clc
loopne
jl
add
rcl
mov
add
inc
push
fadd
cmp
pusha
cmp
andl
inc
sbb
and
insb
mov
and
loopne
or
dec
adc
adc
cmpb
jnp
bound
cmp
adc
xor
jmp
cmc
pop
pop
fsts
ds
sbbb
cmp
fwait
sbbb
aaa
std
push
mov
roll
add
push
je
fstl
mov
sbb
out
jle
rolb
addr16
imull
add
pop
pop
inc
stos
xor
pop
incl
and
test
jp
pop
cwtl
jae
add
repz
lds
jmp
addr16
cmpsl
jl
inc
inc
cli
int3
mov
iret
add
shrl
jo
push
clc
fcoml
imul
lret
mov
dec
dec
fistps
cmp
jae
cli
jno
xor
mov
add
mov
insb
mov
jo
add
jmp
pop
lods
inc
add
push
lods
push
add
push
ss
adc
in
push
xchg
sbbb
popa
add
inc
loopne
push
cmp
mov
sbb
filds
aad
or
popf
aaa
dec
add
sub
xchg
es
or
repz
repnz
add
int3
xchg
sub
test
addl
cmp
in
subb
and
xor
push
sbb
pop
insb
ret
addr16
js
scas
repz
jne
add
add
aad
inc
jl
sbb
addl
andb
sbb
cmp
sub
inc
dec
shlb
inc
or
adc
xchg
inc
add
mov
call
push
pusha
adc
lcall
fbld
bound
inc
cli
loop
decb
mov
add
pop
testl
movsb
int
daa
in
out
sbb
xchg
mov
inc
pushf
sub
fmull
rorb
ret
mov
jae
jns
jb
bound
jl
loope,pn
mov
movsb
fwait
mov
add
add
scas
cmpsb
fdivs
je
imul
mov
adc
add
pop
or
out
add
ds
fidivl
cs
notb
sub
cli
cwtl
add
jno
cmp
adc
and
add
push
push
jle
mov
inc
out
call
mov
add
xor
sub
dec
les
jno
imul
js
pop
rol
shlb
in
jnp
ficoml
push
ds
xor
enter
cmp
mov
xchg
outsb
xor
dec
subb
xchg
sub
jge
in
cmpsl
adc
xor
xor
stos
lahf
in
das
pop
mov
push
inc
and
mov
rcr
mov
xchg
arpl
mov
or
jg
inc
int
push
sub
pop
lahf
pop
cmp
add
ss
jg
sbb
dec
pop
out
push
lock
enter
int3
dec
addb
sbbb
xor
sub
mov
mov
pop
cs
loop
xchg
leave
in
sti
push
stos
xchg
add
sub
adc
adcl
push
or
xor
cmp
addb
push
add
jno
jmp
nop
sub
add
pop
dec
push
add
andl
fadds
mov
xor
push
add
push
lock
divb
and
mov
out
add
sbb
sbb
fucom
dec
in
push
add
aad
mov
mov
rolb
imulb
push
add
push
xor
mov
aad
and
adc
push
inc
sub
add
add
or
loopne
sbb
add
ret
inc
sahf
and
mov
gs
lods
ds
shrb
shl
sbb
push
xor
clc
add
mov
xchg
push
ss
cmpsb
mov
push
sbb
imul
dec
fnstsw
add
mov
loope
nop
sbb
sti
mov
cmp
cmpsb
jl
mov
pop
cmp
inc
and
fisubl
xchg
jns
es
push
imul
push
pusha
test
sub
add
or
push
add
fwait
xchg
test
mov
sub
xchg
lahf
pop
pusha
push
push
push
testl
push
jno
cmp
push
shr
cli
xchg
add
xchg
or
push
sbb
sub
es
aam
inc
pop
and
inc
or
mov
mov
mov
jae
pop
push
sbb
pop
sbb
fdivrs
jl
xlat
rolb
jg
adc
lret
mov
out
int3
mov
add
xchg
or
or
adc
sbbl
test
cwtl
pop
stos
popa
shlb
jae
inc
mov
add
sahf
mov
push
mov
jno
cmc
add
popl
xor
enter
loopne
and
pop
icebp
shr
push
mov
into
cli
mov
inc
movsb
insb
sbbb
mov
mov
mov
adc
push
pop
fldcw
int3
out
rol
mov
or
test
pop
sub
pop
mov
add
and
inc
xor
leave
fwait
out
xor
subl
int3
test
adc
sub
jne
sbb
movlps
ffreep
add
mov
mov
jno
add
inc
xchg
and
cmp
loop
jns
test
xchg
jbe
adc
rorb
data16
fldenv
inc
push
insb
pop
out
clc
push
and
sbb
sub
mov
mov
mov
add
xor
stc
dec
fadds
mov
adc
or
inc
xchg
pop
mov
mov
out
fcmovnu
cmp
push
add
jnp
xchg
add
push
into
iret
dec
push
inc
mov
lahf
mov
dec
out
int3
add
sbb
fmulp
cld
rolb
in
mov
pop
lods
xchg
and
lods
and
mov
jb
and
add
xor
and
ficoms
mov
and
popa
pop
add
fwait
lret
aas
mov
fmul
out
push
pop
adc
jne
rolb
aam
add
aaa
xchg
seta
add
popf
xor
xor
or
and
or
jno
pop
or
xorl
push
mov
jge
jg
push
adc
stos
shlb
mov
mov
sbb
pop
xorb
cs
or
pop
cmp
adc
scas
add
mov
fdivrl
fs
or
xchg
cmp
lcall
mov
inc
inc
js
cmc
aad
jns
sbb
shl
add
ret
outsb
es
cmc
les
cmp
je
dec
mov
push
aad
jo
outsb
or
sti
out
fwait
mov
sbb
subb
mov
mov
popf
add
cmp
stos
je
adcl
fcoms
aam
movsb
aaa
mov
hlt
sarb
dec
inc
and
jns
adc
gs
or
jg
add
mov
add
xor
xchg
loop
fadds
xor
fxtract
les
pushf
in
sub
sub
fldl
cmp
mov
push
add
iret
mov
mov
fistpll
add
xor
or
or
out
loopne
and
pop
add
inc
fistps
ss
sti
pop
mov
faddl
loop
mov
mov
sub
add
sarl
cmp
and
les
xchg
xchg
mov
dec
push
jo
test
push
sbb
aaa
push
push
add
xchg
fwait
inc
jl
pusha
add
aas
insl
mov
repnz
push
xchg
movsb
test
bound
out
xlat
testb
nop
in
pop
jp
js
add
out
bound
mov
stos
cmp
lea
sub
rol
mov
add
dec
add
pop
push
push
aaa
add
fcoml
lret
dec
daa
push
sbb
xchg
or
pushw
cmc
xor
add
xrelease
jns
ret
inc
mov
jo
cli
sbb
notb
test
fs
test
pop
and
and
int
push
je
mov
enter
sub
std
adc
addl
dec
fidivl
jl
clc
xor
jmp
adc
add
sbb
add
mov
filds
dec
cs
push
add
lcall
add
mov
cli
dec
dec
inc
int
and
or
js
sub
add
std
movsb
nop
imul
pop
scas
out
sub
shll
adc
scas
ret
addb
pop
clc
call
pushf
add
mov
in
sbb
push
shll
daa
mov
mov
xor
movsb
imul
push
cmp
xchg
aas
dec
sbb
cmc
inc
and
sbb
inc
insb
clc
aas
mov
and
mov
jns
lret
mov
ss
cli
pop
fs
inc
pusha
xchg
mov
pop
jb
fidivs
lret
aam
jno
ljmp
shlb
cwtl
pop
into
jp
lds
imul
add
push
add
xor
adc
push
add
inc
jne
xchg
xlat
inc
add
loope
pop
or
imul
es
test
in
mov
add
ja
adc
pop
inc
dec
lock
aas
jae
jg
rcl
mov
jl
jb
jle
cli
cmc
push
imulb
xor
lods
add
inc
and
lahf
shll
xor
push
repz
pop
sbb
fs
ret
dec
lods
add
rorb
xor
pop
xorb
dec
or
inc
xchg
movsb
lods
xchg
push
scas
push
xor
xor
sbb
cmp
add
and
push
test
adc
mov
ds
mov
mov
mov
aas
push
imul
adc
pop
je
loope
stos
sub
sub
rclb
nop
stc
add
fistpl
dec
mov
cmp
cmp
or
push
mull
ret
xchg
rcrb
jmp
add
mov
mov
xchg
cli
mov
lods
xchg
mov
mov
pop
mov
sbb
mov
sub
pop
movl
pusha
cmp
add
xor
or
jl
mov
add
or
xor
shll
enter
sub
xchg
lods
insl
hlt
mov
mov
and
les
enter
add
fiadds
pusha
ja
xchg
lea
add
imul
dec
lods
clc
pop
inc
sub
call
push
and
ja
and
inc
scas
sub
push
test
add
fwait
and
rcrl
stos
mov
inc
repnz
add
pop
divb
dec
xor
incb
movl
sub
mov
testb
cmp
mov
sbbb
inc
in
flds
xchg
mul
add
movsb
loopne
fwait
pusha
call
adcl
lock
mov
nop
fdivl
cmpsb
adc
packuswb
mov
cwtl
mov
pop
xchg
movsl
add
xchg
add
jl
popa
dec
mov
add
lcall
pop
mov
mov
xchg
jg
mov
add
in
jne
push
lcall
add
in
mov
dec
pop
sti
in
adcb
add
push
dec
or
push
pop
add
inc
mov
add
mov
pop
mov
add
loope
ret
out
dec
clc
cwtl
xor
leave
or
push
imul
or
xchg
movsb
daa
or
or
jecxz
adc
mov
xchg
out
out
and
push
loopne
cmp
popa
and
add
lock
in
imul
xorb
mov
in
or
adcl
sbbb
pop
inc
xor
mov
loop
jecxz
dec
nop
and
add
shll
xchg
cmp
and
in
xor
lods
es
inc
mov
rcll
inc
aad
jecxz
mov
and
inc
movsb
inc
pop
xor
mov
or
pop
arpl
mov
pop
xchg
push
test
add
cmpsl
mov
mov
insl
push
add
rorb
dec
rolb
jbe
push
test
rcrb
lahf
jp
inc
test
mov
clc
pusha
pusha
add
ss
or
vmaxsd
sti
loopne
cli
loop
xor
adc
or
orb
sub
es
loop
mov
push
imul
push
jg
enter
pop
jo
sub
mov
mov
sub
ficoml
fstpt
imul
lods
rclb
lods
xchg
sti
adc
orl
dec
add
xchg
jne
mov
data16
orb
push
adc
cli
add
sbb
add
mov
mov
jns
sub
adc
mov
inc
loope
mov
test
enter
cwtl
ljmp
or
cmp
add
popa
pop
pop
add
bound
stos
fdivrs
mov
push
ret
adc
sbbl
mov
mov
rcrb
fwait
and
jne
repz
mov
nop
int
arpl
push
repnz
or
mov
lret
add
pop
add
dec
inc
pop
xor
push
adc
les
aam
sbb
sahf
cmp
pop
xchg
cmp
mov
cmc
push
jo
test
sbb
add
in
pop
adc
stos
pop
mov
std
adc
in
inc
addb
jl
sub
mov
mov
js
and
lret
imul
aam
and
or
lea
pop
mov
mov
pop
jg
insl
mov
pop
sub
mov
fistpl
mov
and
loope,pn
or
popa
push
mov
arpl
or
and
popf
add
mov
dec
cwtl
dec
clc
and
insb
inc
sub
xchg
jae
add
aas
pop
pop
mov
into
add
mov
add
fildl
add
sub
jae
fldl
pop
enter
sub
adc
cmc
shrb
jns
push
fwait
xor
mov
pusha
hlt
je
dec
push
and
xor
xchg
add
mov
jnp
sub
icebp
ljmp
stc
xor
int
push
adc
loope
aam
pop
movsb
loopne
sbb
dec
dec
inc
sbb
push
ret
lahf
xor
rcr
add
push
fildl
movsb
fwait
shrb
rcl
inc
xor
leave
into
inc
je
cwtl
loopne
push
xchg
add
pusha
cmp
adc
je
shl
fdivrl
lret
gs
mov
pushf
inc
dec
push
pop
jg
add
xor
inc
repnz
push
fidivrl
mov
jmp
sbb
xor
mov
je
xor
pop
arpl
and
dec
insl
xor
pop
push
jae
dec
inc
fadds
movsl
and
cmpl
inc
jb
add
xchg
jne
sub
xchg
xor
cld
pusha
andl
cli
add
mov
pop
mov
jns
movsl
clc
dec
in
add
xchg
and
add
xchg
adc
and
and
xchg
ds
orb
jb
les
mov
mov
mov
stc
push
dec
clc
sbb
inc
add
shlb
push
or
add
or
clc
pop
pop
adc
push
aaa
or
ret
mov
jno
add
xor
mov
loope,pt
pop
repnz
out
adc
cmpsb
fnstsw
dec
jo
add
loop
dec
cs
fs
lcall
ret
cmp
mov
and
out
addr16
pop
sbb
xor
push
xor
adc
iret
xor
fmull
or
add
cld
lea
addr16
rclb
mov
pop
add
les
pop
rorl
repz
xchg
sub
ficompl
fcoml
nop
xchg
add
hlt
mov
jo
add
sbb
adc
int
jbe
push
pop
ror
add
sbb
pushf
push
mov
movb
cmp
mov
push
cmpsb
xchg
dec
or
push
imul
in
add
cli
in
xchg
nop
out
add
lea
sub
andb
int3
add
dec
pop
cmc
push
adc
orl
dec
pusha
inc
rolb
out
add
mov
inc
or
shlb
or
int3
stc
addr16
add
xor
or
les
ds
cltd
mov
pop
sub
lahf
lret
test
imul
cmp
dec
add
jmp
jnp
lret
add
ljmp
add
push
in
sub
ds
lret
push
aas
rorb
cmp
clc
jp
push
xchg
out
add
sub
int3
add
aas
movsb
mov
add
xchg
ror
popa
xchg
orb
in
adc
pop
cmp
incb
mov
xchg
fs
popa
dec
sbb
repnz
shl
push
xchg
fs
stos
pusha
rclb
mov
js
subl
call
call
and
or
jnp
mov
cmp
clc
ds
out
or
das
jl
xor
sub
xor
ljmp
js
das
push
aad
push
cmpl
mov
out
roll
inc
add
jne
int3
test
test
aad
scas
xor
jo
lcall
in
mov
inc
lret
add
sbbb
push
enter
jmp
jae
or
aam
mov
dec
daa
inc
add
fwait
into
fs
andb
or
jbe
int3
jb
add
xchg
pusha
repz
add
popf
sub
rclb
loopne
cld
nop
mov
roll
mov
adc
fs
inc
add
xchg
loopne
sub
cmp
orb
movsb
testl
add
or
insb
add
jl
push
push
test
test
add
inc
lods
fisttpl
in
in
in
pop
add
or
sub
add
lock
jnp
loopne
pusha
dec
fmull
xchg
repnz
push
fwait
fs
lods
in
stos
js
pop
adc
xor
cmp
jp
xchg
xor
inc
dec
bound
xor
mov
ret
push
and
shll
jmp
cli
jno
mov
dec
sbbb
and
sbb
lea
push
pusha
xchg
mov
lret
test
ljmp
dec
pop
leave
add
xor
xchg
shl
add
cmc
stc
and
test
sbb
xchg
aas
jmp
jne
adc
bound
rorb
add
sbbb
mov
addr16
inc
popa
add
inc
xor
add
outsb
and
xor
jns
dec
sub
mov
jg
jno
inc
add
loop
mov
or
sbbb
sbbl
outsl
sub
mov
cli
loope
xor
jle
dec
sarb
cs
popf
add
dec
mov
jmp
lods
fwait
add
ja
mov
popa
ret
fs
inc
addb
rorb
or
jge
mov
leave
addr16
iret
pop
inc
fcomi
fwait
stc
lock
xor
popl
add
jns
orl
pop
cld
pop
bound
fsub
ret
lock
or
adc
xchg
and
mov
lods
cltd
jmp
adc
and
push
inc
stc
add
faddl
inc
scas
je
or
stos
xor
jle
mov
jp
sbb
rorl
insl
pop
push
test
inc
adc
push
pop
mov
mov
or
cmp
xor
xor
sub
outsb
ret
subb
add
inc
pop
repz
inc
or
or
sub
nop
cld
jnp
sbb
sub
aam
je
stos
movsl
subb
daa
mov
fidivrl
add
add
xor
nop
loope
pop
sub
xchg
adc
pop
pushf
inc
or
int
add
jnp
data16
mov
pop
jns
add
in
fcomps
test
add
loopne
cltd
or
add
loopne
add
lret
or
ljmp
test
pop
pop
jnp
or
push
ss
jmp
dec
pop
jmp
call
dec
hlt
adcb
lret
pushf
xchg
pop
cltd
pop
bswap
pop
inc
jno
out
xchg
jmp
cltd
jb
cmpsl
clc
xchg
loopne
or
add
mov
adc
mov
add
inc
ret
and
mov
addl
enter
push
fcomps
scas
test
std
es
pop
jo
push
add
into
lods
fadds
rorb
nop
mov
jmp
mov
rolb
ficompl
cmp
mov
das
mov
sbb
test
out
call
or
push
lods
mov
xor
in
adc
and
mov
shlb
inc
iret
idivb
add
cs
out
movsl
push
ficomps
ret
cs
dec
cltd
add
ror
sbb
lret
adc
push
jecxz
ljmp
add
arpl
adc
aaa
addr16
pushl
sbb
popa
jns
or
andl
jmp
fs
ds
add
jp
mov
mov
ret
outsb
push
lcall
xchg
test
clc
imul
nop
inc
jns
push
or
push
lds
pop
push
mov
mov
repz
and
bound
pop
es
xor
insl
ret
addr16
call
mov
lods
cmc
adc
sbb
pop
js
int3
divl
adc
std
mov
jecxz
in
les
fwait
outsb
loope
sub
ret
rolb
das
mov
enter
rcr
rorb
and
std
mov
into
fsubl
rcrb
add
pop
lock
in
cld
les
loopne
jmp
cltd
enter
call
cmc
mov
shld
add
popa
out
lea
add
jp
and
jb
and
mov
xor
add
dec
scas
in
pop
adcb
adc
loopne
mov
fs
icebp
jnp
xchg
pushf
popa
mov
jo
lods
fadd
cmp
push
or
sub
fisttps
das
in
add
adc
bound
aad
and
inc
or
push
push
loopne
repnz
cs
mov
insb
add
pop
sbb
popa
movsb
clc
add
cltd
sbb
and
mov
ret
jns
or
inc
jne
xchg
cmp
or
outsb
stos
pop
popa
add
shll
repz
mov
repnz
add
cltd
inc
cwtl
pop
jecxz
pop
shr
mov
scas
jg
in
fcoms
out
and
jns
add
add
inc
push
testl
rcrl
inc
stc
add
bound
ds
femms
xor
push
shrb
fdivr
add
lods
out
add
lret
pop
mov
add
xchg
add
mov
ret
rclb
dec
mov
add
sub
jo
add
jmp
pop
jg
dec
adc
adcb
add
cltd
loop
jb
mov
cmp
push
cmp
push
int3
addb
out
mov
inc
test
arpl
mov
daa
fs
and
xchg
hlt
orl
int3
pop
sub
imul
mov
dec
add
jbe
js
sarb
xlat
xchg
xchg
je
sbb
cmpb
das
push
add
div
push
or
mov
icebp
jno
pushf
pop
dec
add
roll
cltd
push
xchg
inc
jb
pop
pop
gs
shr
and
clc
sarb
shlb
xchg
dec
adc
pop
dec
pop
loopne
add
inc
lret
popa
push
jl
out
adc
fisubl
xchg
cwtl
add
outsl
dec
push
addr16
or
cmovae
add
iret
loopne
loopne
xchg
mov
xchg
mov
or
jnp
cmpsb
nop
xor
loopne
ja
ret
dec
jns
inc
sub
mov
das
inc
fstps
add
jg
sub
std
adc
sub
pop
mov
or
inc
mov
or
ss
mov
xchg
stos
sub
shll
test
and
and
adcb
movsl
sub
imul
adcb
shrb
add
jmp
ja
add
lock
rolb
add
add
add
sbb
add
je
mov
dec
imul
fs
push
fs
mov
pop
imul
pushl
adc
sbb
sti
pop
inc
pop
xlat
ljmp
inc
sub
mov
xor
hlt
int3
inc
lock
insb
out
pop
xor
push
inc
xor
mov
orl
xor
sbb
push
test
ror
mov
arpl
jp
mov
call
mov
push
pusha
pushf
cmp
mov
sbbb
out
clc
sti
xor
test
je
out
lahf
daa
add
rolb
inc
sbb
clc
sub
ss
push
mov
pop
xchg
fcomip
test
out
ltr
cmp
jcxz
xor
jo
cltd
clc
add
dec
repz
push
and
add
shlb
push
clc
xchg
js
call
ficompl
sbb
jmp
mov
inc
mov
lea
xchg
pop
std
or
fidivs
push
cs
lock
shll
loopne
loope
dec
add
gs
jmp
mov
scas
ret
rorb
inc
cmp
mov
dec
sub
cmpsl
add
sbb
xlat
add
pop
pop
pop
jp
aam
sub
add
in
mov
jmp
push
add
dec
cmc
jge
dec
push
aam
dec
add
lret
push
adc
shrb
add
popa
cmpsl
icebp
in
dec
add
dec
and
mov
dec
add
mov
test
fsubrs
xchg
sub
push
xlat
pop
loopne
stc
movsb
jne
xchg
or
stos
push
aam
xor
fnstcw
into
add
push
cmc
jnp
dec
aas
rcr
jne
icebp
add
push
xor
mov
push
dec
jp
or
out
jo
stc
cwtl
aas
lcall
mov
mov
rcr
xchg
nop
mov
dec
add
push
inc
iret
das
mov
mov
and
flds
aam
adc
push
xorl
adc
pop
xlat
lret
movl
hlt
push
inc
mov
xorb
stos
movl
jns
jno
in
jne
mov
push
fcoms
std
nop
add
inc
iret
incb
mull
pusha
aaa
test
or
fiadds
inc
lds
mov
pop
push
aam
xor
clc
leave
nop
jb
push
cmc
rolb
xchg
addr16
xor
dec
mov
push
call
out
insb
in
fucomip
cmpsb
mov
sbbb
or
enter
dec
das
xchg
add
sarb
jp
cmp
push
adc
das
add
inc
fadd
test
sbb
call
loop
xchg
xchg
dec
sbb
repz
in
cmc
mov
or
adc
add
enter
jo
lahf
movsb
mov
dec
stos
jno
cltd
inc
mov
jo
dec
mov
jbe
popa
pop
lock
add
mov
cmp
and
pop
xchg
orl
jmp
adc
imulb
jno
add
ficompl
lahf
fsts
insl
xor
arpl
sti
decl
cmp
xor
ja
les
adc
rolb
mov
add
aas
adc
stc
mov
imul
push
xchg
pop
lret
mov
repnz
sbb
add
in
rorl
xorl
xor
mov
daa
pop
adc
mov
aaa
int3
scas
jecxz
xor
fmul
inc
addb
sahf
push
or
in
cmpsl
add
out
test
stc
dec
add
cmp
or
mov
je
add
enter
out
es
sysexit
add
xchg
mov
adc
xchg
movsb
jecxz
orb
add
pop
mov
addl
in
or
jno
incb
imul
loopne
adc
orb
cmp
cmp
mov
adc
mov
pop
add
in
arpl
add
and
test
rolb
and
inc
inc
jo
repnz
push
es
sub
call
notb
add
sub
add
loopne
or
jnp
movsb
dec
xor
adc
and
cmp
jecxz
es
push
inc
aas
xor
xor
orb
pusha
sbb
testb
or
cmpsb
rorl
and
adc
xchg
fcompl
daa
or
mov
xorb
movl
outsl
jo
movsb
xchg
aas
jne
add
icebp
loop
jecxz
cvtdq2ps
loope
lcall
mov
pusha
fwait
jne
and
dec
mov
mov
mov
mov
jne
lods
mov
xchg
popf
inc
faddl
cmp
imul
bound
or
inc
out
and
pop
jne
hlt
mov
add
mov
or
cmpl
call
xchg
in
in
in
sub
add
and
push
xorb
dec
mov
push
lods
dec
out
orb
add
adc
push
mov
clc
mov
add
call
hlt
mov
iret
mov
jns
fs
sahf
enter
inc
shrb
mov
test
adc
pop
jns
add
cs
inc
je
push
adc
aas
xor
inc
add
inc
ja
rorl
xchg
imul
loop
mov
pushf
pop
mov
xor
push
jo
test
pop
je
add
mov
xchg
push
inc
fists
push
adc
sub
mov
push
mov
je
sub
in
sub
cmpsb
cld
push
loopne
je
orl
les
cmp
insb
or
cwtl
fmuls
inc
pop
test
out
shlb
xor
lahf
or
add
jo
cmp
pop
icebp
jmp
cltd
push
fstps
add
ret
popa
mov
dec
cmpb
add
cmp
pop
mov
notb
andb
fucomi
jne
pop
mov
mov
rorb
or
mov
clc
add
and
or
in
mov
cmp
out
ret
push
and
or
repnz
arpl
inc
fdiv
add
adc
loopne
add
push
std
xchg
mov
cwtl
jno
and
es
adc
xor
rcrb
mov
lret
mul
push
jl
cwtl
pop
pop
jmp
or
js
data16
nopl
mov
imul
leave
ss
inc
test
clc
lock
lcall
dec
dec
divl
add
mov
mov
jmp
adc
das
imul
rcll
push
cli
pop
mov
add
push
int3
addr16
nop
push
mov
imul
neg
add
movsb
mov
sub
cmpsb
pop
popa
sarb
xchg
dec
hlt
test
loopne
or
rcrb
mov
dec
fwait
daa
and
mov
xor
or
fadd
enter
jmp
call
stos
add
mov
mov
and
loop
leave
add
inc
fcoms
dec
popa
inc
jo
push
cmpsb
outsl
mov
loopne
push
cltd
clc
sub
xchg
call
inc
jns
add
cmp
call
lea
out
inc
lods
fiadds
mov
cmc
inc
loopne
pop
sbb
lcall
adc
cmp
dec
mov
sbb
adc
cmp
rcrb
xor
jnp
aas
inc
lret
push
mov
xchg
lahf
push
add
pusha
icebp
adc
pop
in
jns
dec
lods
rcr
clc
adc
dec
mov
add
or
mov
add
dec
shrb
push
pop
jb
mov
mov
add
insb
into
rcr
popf
mov
fsubrs
pop
pop
movsb
add
sbbl
sahf
add
cmp
neg
add
mov
pop
mov
repnz
or
inc
clc
cmp
pusha
into
shrl
out
add
leave
inc
test
sti
in
adc
jbe
lcall
jmp
push
hlt
add
mov
jbe
incb
pop
xor
das
and
mov
popa
leave
addb
push
cwtl
xchg
jp
pusha
pushf
call
dec
orl
sub
push
cmp
mov
add
je
popf
add
or
loope
faddl
mov
repz
jg
push
push
fcmovnbe
cmp
sbb
ror
ljmp
out
sbb
cmp
daa
clc
popa
dec
xchg
inc
mov
adc
jne
pop
add
add
xorb
cltd
nop
cmp
dec
add
js
push
test
sarb
add
dec
pop
scas
int3
faddp
inc
shlb
pusha
popf
nop
test
add
pop
scas
cld
inc
repnz
fdivs
inc
out
out
mov
inc
das
mov
inc
loopne
movl
call
sub
jl
aas
repnz
cmp
adc
cwtl
aam
add
xor
xor
or
xchg
inc
addb
cmp
out
dec
inc
mov
lods
les
aam
jp
arpl
dec
clc
mov
and
loopne
sub
dec
jmp
jl
aam
dec
popa
or
test
lock
push
add
sub
mov
xchg
movsl
imul
nop
test
dec
outsb
js
sbbb
and
daa
loope
daa
test
lds
dec
mov
add
int
add
bound
cld
push
sbb
lea
aam
add
xor
adc
mov
and
pop
add
dec
stc
dec
or
or
mov
cmpl
lret
xor
pop
sub
hlt
andb
mov
popa
std
xor
jnp
cmp
dec
out
or
out
dec
fs
mov
shlb
sbb
inc
in
add
push
pop
inc
sbb
fsubr
mov
cwtl
dec
mov
rolb
roll
mov
mov
xchg
test
imul
mov
and
bound
mov
jb
js
mov
sub
aaa
lahf
sar
shlb
ret
and
call
and
nop
pusha
inc
test
sbb
ss
mov
rol
add
sub
loope
add
clc
int3
out
imul
movl
pop
adc
imul
ja
into
xor
mov
fs
loop
test
add
sbb
xor
pop
add
mov
arpl
insb
push
jmp
jmp
xchg
mov
mov
cmp
sub
add
xorb
inc
jmp
mov
lea
enter
cld
xor
loopne
repz
xor
mov
in
scas
add
adc
inc
mov
out
pop
cmp
aad
sbb
add
xor
xor
cli
push
inc
push
mov
xchg
subb
push
outsl
push
inc
mov
cwtl
dec
push
not
cld
arpl
pop
jle
dec
cmp
loopne
inc
sbb
cmc
inc
xorb
adcb
inc
xchg
aas
dec
fcompl
test
push
pop
sub
bswap
sbb
aam
cmp
push
sub
test
pop
xchg
call
repz
cmc
add
inc
sbb
add
cmp
movsb
cltd
test
mov
xor
cmpsl
cli
or
aad
kmovw
adc
loop
add
jecxz
mov
inc
enter
and
arpl
cmp
iret
rsm
cltd
testl
sub
add
xlat
cwtl
pop
add
pusha
flds
add
pop
repz
xor
hlt
or
test
loope
cld
or
xor
fwait
addl
mov
adc
jg
mov
notb
pushf
sub
mull
add
call
cld
xor
mov
add
adc
loopne
push
lret
loope
push
stc
test
in
sbbb
pop
xchg
pusha
sbb
ret
xor
out
mov
mov
mov
stc
add
and
inc
cmp
jne
adc
mov
addb
xchg
aam
fwait
jp
add
jne
dec
rclb
pusha
push
call
cmp
jle
insb
pop
cmpsl
push
loope
push
das
sub
add
int
lods
ret
inc
pop
jp
or
add
decl
dec
xor
sub
imul
mov
jl
icebp
test
in
jmp
andb
scas
add
push
pop
sub
test
sub
mov
mov
xchg
sbb
push
test
mov
in
nop
xor
xchg
aad
jmp
or
inc
cmp
movsl
shll
jbe
paddd
push
ds
roll
jmp
push
pop
scas
mov
out
mov
dec
xor
ja
mov
jb
dec
push
jno
cmpb
or
or
popf
pusha
xchg
scas
out
add
insb
mov
into
jl
push
clc
push
xor
ret
pop
movsb
xor
push
cmc
or
mov
cmp
int3
push
push
cwtl
andb
in
pop
pop
pop
or
inc
push
jl
outsl
lcall
add
pop
add
lods
inc
imul
and
push
rol
in
mov
daa
or
ret
dec
and
add
lods
es
xor
arpl
fwait
addr16
dec
adc
adc
ss
inc
pop
rcrb
xor
rcll
outsl
imul
push
pop
cmp
in
testb
out
rolb
movsl
adc
jae
mov
filds
jg
sarl
mov
pop
and
push
adc
add
enter
out
addr16
and
sbb
xchg
xchg
add
shl
add
rcrl
jecxz
movsb
add
add
rolb
pop
dec
xor
add
push
pop
sarl
iret
int3
imul
or
cmp
or
push
nop
sub
enter
int
push
cmp
hlt
xchg
mov
and
cli
add
mov
pop
add
leave
xor
jmp
push
loop
and
cmp
cwtl
cmp
mov
fdivl
pushf
and
ret
lock
mov
test
popa
mov
cmp
cmp
ret
mov
sub
or
mov
outsb
adc
lret
dec
std
mov
or
mov
adc
add
mov
cli
repnz
cs
test
jmp
adc
out
cmp
inc
int3
fcoms
pop
loop
mov
pop
xor
add
and
sbb
adcb
pushf
pop
jb
xchg
cmp
cmp
out
ljmp
sub
pop
xorb
xor
add
mov
and
xor
pusha
jle
cwtl
and
shl
stos
jno
adc
dec
hlt
mov
in
jp
stos
and
lahf
or
xchg
xor
add
out
mov
sbb
pop
cmpsl
adc
lret
add
jo
dec
and
jb
or
scas
inc
aaa
fildl
movb
jae
aas
pop
adc
sbb
cwtl
adc
fldl
or
sub
in
ret
outsl
add
push
xor
mov
sub
gs
test
or
je
dec
mov
xchg
add
cld
ljmp
sahf
or
test
dec
jecxz
push
add
subb
mov
cld
ret
mov
mov
incb
rol
add
push
insl
add
xchg
mov
dec
inc
loopne
sbb
dec
sub
nop
sbb
sbb
or
pop
stc
jo
push
insb
mov
dec
fs
pop
adc
pop
dec
push
or
xor
sbb
push
je
shrl
mov
fwait
in
enter
mov
inc
pop
xor
inc
enter
repz
mov
jle
scas
out
lahf
mov
and
inc
push
add
imul
testb
xlat
fnsave
cld
shll
daa
adc
push
add
or
mov
js
fwait
and
fmull
fnsave
hlt
adc
add
pop
adc
push
movsb
scas
adc
sub
mov
mov
add
mov
sub
sbb
sbb
cmpsl
shl
or
sahf
xor
mov
pusha
xor
imul
testb
scas
add
add
inc
sub
dec
push
add
cwtl
jl
xchg
push
sbb
out
hlt
push
mov
push
in
add
stos
fcompl
ja
xchg
out
and
mov
xchg
fstl
dec
jb
mov
test
insb
cmc
loopne
cwtl
aas
or
mov
dec
push
xchg
cmp
mov
mov
sub
shl
adc
or
sbb
adc
test
fnstcw
leave
shlb
dec
scas
and
mov
insl
out
push
fdivr
and
xor
sahf
mov
push
icebp
sub
adc
enter
ljmp
add
dec
and
pop
andb
imul
xlat
inc
push
les
push
out
and
nop
fldenv
fucomi
add
ljmp
jo
dec
push
add
aaa
rcll
jns
or
clc
pushl
sub
ret
pusha
test
jno
movsl
andb
jnp
add
xor
xchg
in
mov
pop
sub
cld
out
add
mov
dec
dec
push
and
gs
clc
add
jb
push
lahf
out
sub
insb
mov
jns
call
xchg
add
in
test
xchg
lret
xor
iret
or
cmpsl
shlb
sub
imul
hlt
dec
jnp
add
pop
loope
sbb
xor
add
sub
cmp
insl
mov
sbb
add
or
shlb
jb
add
xchg
fdivrl
mov
xchg
inc
xchg
jp
test
insb
fs
add
es
scas
and
lahf
inc
insb
rcrb
push
aas
xlat
adcl
testl
hlt
in
add
orb
aas
add
inc
mov
add
adc
mov
sub
xor
sub
test
inc
dec
aaa
mov
adc
andl
add
push
ret
mov
cltd
adc
filds
inc
sbb
add
xchg
mov
rorl
lahf
dec
ja
test
inc
pop
jns
mov
mov
in
add
add
mov
or
lea
movsb
pop
pop
and
js
mov
add
inc
pop
dec
xchg
add
lods
jmp
pop
mov
add
or
in
add
sbbl
fcomps
insb
cltd
sbb
dec
in
mov
jle
mov
cmpb
nop
fwait
pop
and
cmp
xchg
fcoml
push
pop
in
mov
subb
in
add
shl
mov
xor
add
imul
xchg
cwtl
add
pusha
clc
pusha
loopne
jns
or
add
adc
je
clc
mov
push
cmc
push
and
testb
outsb
lods
pop
push
inc
mov
lods
add
sti
push
mov
stc
or
inc
add
pop
sbb
ljmp
jnp
xchg
ss
inc
aam
ret
and
jo
xor
mov
jmp
add
pusha
in
push
sahf
ret
sub
hlt
fsubp
fprem
in
add
fstpl
push
sarb
mov
pop
pusha
insl
inc
in
add
std
jb
arpl
push
add
lret
sub
adc
xor
jmp
dec
cltd
or
sbb
mov
push
xchg
jno
enter
popf
in
pop
out
cmp
push
std
pop
mov
ror
jl
xchg
lods
test
adc
rolb
repnz
lcall
mov
jno
add
mov
icebp
lods
in
popa
pushf
add
mov
jb
xor
jle
push
outsb
or
inc
mov
outsl
pop
inc
mov
pop
leave
leave
mov
loop
mov
sub
jns
nop
sbbb
jg
int3
add
pop
rorb
sbb
jmp
pushl
mov
pop
insb
xchg
pop
in
into
lods
xchg
jns
popa
mov
outsb
adc
inc
adc
add
sub
mov
mov
fdivl
jns
mov
inc
add
add
addr16
pop
cwtl
mov
in
sti
inc
add
adc
in
imul
in
add
sahf
jne
jp,pn
ret
popa
sbb
test
cmp
daa
add
and
inc
xchg
out
test
inc
das
mov
add
push
xchg
ret
out
rolb
mov
lock
aam
adc
mov
roll
xor
into
mov
cltd
or
in
inc
daa
lods
add
push
das
cld
mov
pop
and
nop
into
mov
adc
add
mov
sub
inc
cld
pop
daa
sbb
cmp
or
addl
test
push
push
adc
jno
cltd
out
push
dec
fldl
out
lret
repz
in
loop
stc
add
dec
in
es
xor
xchg
dec
sub
add
mov
aad
sub
add
fdivs
adc
pop
outsl
push
loopne
xor
dec
mov
in
call
dec
adc
lea
mov
mov
add
mov
jp
add
xor
jg
js
and
jle
mulb
jae
cltd
clc
add
cmp
jg
es
add
pop
push
xor
fcompl
out
call
dec
sub
add
xor
sub
nop
xor
inc
fxch
stos
lods
push
cmp
es
nop
dec
mov
push
add
jno
push
int
jg
fildl
add
cmp
ret
incl
push
movsb
insl
sub
xchg
cli
aam
sub
add
test
insb
addl
push
add
inc
push
jns
add
loopne
out
addl
pop
and
scas
xchg
xchg
cmp
push
push
add
mov
mov
add
pop
add
pop
or
xor
fsubl
addr16
mov
mov
and
mov
cs
cltd
int
jle
cmpsl
add
das
jbe
fldl
lods
or
incl
lock
inc
or
push
add
jno
sub
mov
out
jmp
push
aam
adc
nop
push
sbb
jno
mov
loop
dec
cwtl
cld
cmpb
scas
movsl
sbb
iret
push
mov
add
inc
mov
daa
nop
sti
addr16
or
inc
mov
cmc
jno
inc
mov
mov
add
xor
jne
fs
push
sbb
mov
xchg
push
add
arpl
add
cmpsb
cwtl
and
js
add
pushf
add
dec
mov
adc
mov
test
lods
fs
cli
add
or
adc
inc
movsl
jp
pushf
xor
push
adc
loopne
add
xchg
sbb
jp
clc
popa
dec
icebp
add
adc
lret
mov
lods
sub
fs
leave
sub
andb
clc
push
jno
test
mov
es
les
mov
jno
or
shrl
negl
jne
subb
inc
or
jp
inc
xchg
sub
movsl
and
add
cmp
test
inc
insb
out
sub
sbb
imul
dec
nop
mov
popf
fdivrp
and
lea
add
cwtl
pop
inc
inc
mov
push
push
dec
adc
dec
aad
push
jo
pop
mov
insb
add
dec
or
xchg
mov
jg
mov
add
add
aam
xor
out
orb
hlt
jmp
push
js
add
jo
inc
imul
orb
cbtw
inc
or
xchg
add
add
push
dec
aam
jns
xor
aas
or
mov
xor
adc
jnp
dec
inc
int3
add
lods
xor
int3
test
sub
divl
add
rcll
xor
inc
imul
mov
out
hlt
std
push
jno
sbb
xor
sub
std
add
jno
mov
sti
inc
pop
pop
mov
stc
and
cmp
not
add
xlat
adc
movsb
jno
xor
add
mov
push
mov
cmp
adc
push
fisubs
adc
int3
test
cmp
out
je
push
push
jge
push
mov
mov
je
or
add
mov
movsl
cmpl
mov
sub
lds
cmp
mov
mov
sbb
mov
lret
add
mov
push
jne
dec
push
ret
xor
add
add
rcrb
in
daa
push
xor
stc
aad
sbb
jecxz
lods
lret
fildl
test
jmp
pushf
mov
sbb
das
sbb
push
xor
fsubrp
repz
sub
das
repz
mov
rolb
test
pop
push
add
xchg
cwtl
ret
hlt
push
push
or
dec
cmp
pop
mov
mov
cwtl
pop
lock
push
xorb
movsl
dec
leave
cmp
lods
add
imul
pop
stc
pop
pop
sbb
les
push
mov
or
push
dec
movb
cs
mov
into
pop
mov
jle
pxor
or
sbbb
fadds
lret
push
imul
out
stc
dec
pusha
pop
filds
data16
ljmp
xchg
pop
jmp
xor
call
pop
mov
mov
es
ret
cmp
mov
push
add
outsl
xorb
subb
cmp
repz
mov
push
jle
adc
mov
gs
push
inc
pop
in
push
cmp
sbbb
ficoms
in
iret
pop
inc
ss
nop
sbb
dec
adc
pop
xchg
jmp
inc
or
pop
stos
add
inc
add
push
dec
and
mov
push
mov
call
mov
dec
adc
setne
inc
add
pop
mov
add
dec
imul
jo
mov
bnd
pusha
aaa
in
pop
pop
adc
mov
add
notl
fisubrs
in
mov
add
jecxz
push
jg
in
xor
lods
lret
insl
jnp
or
cs
dec
test
jecxz
repz
add
mov
movsb
jns
mov
ficoml
pop
loop
push
push
fwait
int3
jb
decb
rclb
xor
jecxz
nop
roll
push
inc
xchg
fadds
stc
scas
lea
xor
jo
xor
insl
dec
sub
in
arpl
popa
pop
int3
dec
mov
incl
and
call
in
mov
aas
jg
dec
fsts
nop
mov
dec
push
adc
xor
push
insl
mov
add
xchg
lods
fstpl
dec
ret
sbb
jle
add
jns
jbe
or
lods
or
cmp
jle
sbb
xchg
dec
nop
repz
nop
inc
xchg
pop
scas
jecxz
mov
loop
pop
cmp
subl
and
or
pop
push
movsl
cld
mov
xor
popa
cli
std
sbb
jne
test
mov
adc
lea
call
inc
movsb
into
dec
add
xchg
cmpsb
or
hlt
push
int3
add
sti
pusha
