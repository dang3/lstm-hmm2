dec
inc
stos
and
add
cs
and
jge
push
lods
dec
xchg
inc
icebp
aad
mov
and
sbb
js
hlt
cld
mov
push
cwtl
dec
sbb
dec
mov
xchg
cli
cmp
adc
pop
mov
mov
add
mov
jp
das
enter
lea
pop
mov
sub
fsubl
cwtl
fucomp
cmp
inc
add
mov
dec
add
cltd
sbbb
xchg
insb
hlt
inc
iret
nop
or
gs
or
adc
mov
imul
xchg
roll
into
push
sub
popl
xor
out
or
inc
xor
loop
xor
shrb
aam
loop
mov
popf
add
pop
and
ja
test
mov
aaa
pop
popa
xchg
push
xchg
inc
push
mov
jmp
xor
lods
sarb
test
sbb
xchg
sbb
adc
mov
dec
push
loop
sbb
dec
test
sub
xchg
sub
dec
jb
jp
cld
cmpsb
jmp
es
xchg
pop
jae
shl
mov
mov
adc
mov
icebp
bound
mov
jle
mov
mov
add
and
xlat
subb
cwtl
dec
sbb
repnz
jp
lea
add
mov
lea
mov
add
dec
out
adc
inc
mov
inc
dec
jle
pop
rcll
push
and
andb
mov
nop
enter
imul
rol
push
add
rcrl
clc
sub
mov
das
mov
mov
xchg
loope
add
cmp
push
roll
rolb
nop
inc
xor
mov
je
mov
in
in
push
push
push
inc
ret
sub
adcl
sahf
shrb
test
adc
jns
sub
scas
inc
lahf
or
and
sbb
inc
add
xchg
push
cmove
popa
inc
popf
sub
shl
shl
cltd
in
pop
push
jo
insb
and
sbb
pusha
dec
or
test
mov
add
lea
xchg
mov
mov
xor
dec
mov
or
add
es
inc
push
mov
dec
imul
dec
add
popa
or
test
or
fdivrs
lock
add
jo
pop
xor
inc
daa
mov
pop
pop
add
negl
push
fdiv
inc
scas
add
repz
mov
pop
cmp
outsl
outsb
pop
cwtl
add
movsb
rolb
inc
sub
adc
fildl
sub
jp
add
and
sub
test
rolb
cmp
inc
imul
mov
aaa
scas
xor
sub
insb
icebp
rcll
fwait
push
mov
push
lods
push
xchg
jg
dec
xchg
bound
adc
test
sbb
outsb
sub
iret
aam
jo
fmull
dec
scas
or
mov
les
jo
fildl
inc
adc
inc
push
adc
lods
fstpt
lock
xchg
rolb
subb
cli
dec
arpl
sub
pop
test
shld
mov
repnz
mov
push
xor
mov
inc
cs
call
enter
inc
push
shll
enter
adc
and
pop
fsubl
push
mov
jle
push
add
mov
fisubrs
xorb
decl
hlt
adc
jmp
mov
add
inc
sbb
cmp
scas
sbb
jb
pop
mov
inc
lods
call
jno
mov
leave
sub
xchg
sub
and
sbb
jg
cld
mov
push
xor
lods
dec
cwtl
add
adc
scas
push
iret
inc
call
or
mov
xor
shll
movsb
or
xor
xlat
aam
shll
or
mov
mov
ja
test
sub
lods
xchg
cmp
push
sarl
mov
pop
test
je
mov
out
mov
ret
adc
lock
jg
mov
addr16
adc
icebp
hlt
int3
pop
pushf
dec
cmp
inc
outsl
mov
hlt
adc
fidivl
into
imul
xchg
fisttpl
push
stos
or
add
fcmovnu
lret
sub
dec
lcall
adc
enter
adc
inc
push
mov
das
inc
imul
mov
hlt
loop
and
mov
cs
inc
mov
sub
aas
inc
in
hlt
push
mov
push
popf
inc
orb
jmp
imul
and
call
mov
rep
jb
std
push
adc
js
add
mov
sub
adc
or
sub
insb
bound
mov
mov
push
lock
push
mov
adc
and
sbb
xchg
mov
jle
ret
cli
adc
rolb
mov
test
popf
jmp
ret
inc
mov
xchg
pop
or
push
lret
adc
xorb
hlt
pusha
jae
adc
add
gs
add
js
imul
push
movsb
das
pop
cmp
add
int3
loope
sti
sub
dec
cmp
and
sbb
pusha
sbb
xchg
hlt
jbe
adc
xchg
dec
and
xchg
and
dec
ja
and
xchg
dec
mov
imul
push
push
dec
test
insl
arpl
mov
dec
sbb
aad
cmpsb
jbe
rorb
cmpsb
shll
sub
dec
imul
xor
xor
shr
das
pop
mov
adc
lea
lret
lods
pop
bnd
xor
scas
inc
fs
fisubl
push
imul
mov
insl
cmp
out
test
mov
cmp
mov
ja
mov
das
xor
jno
imul
bound
add
mov
leave
cmpsl
outsb
fists
pop
adc
out
rorb
adc
inc
and
cs
and
repz
imul
and
mov
lcall
ret
sub
mov
and
xor
pop
mov
mov
mov
sub
mov
dec
and
dec
fisttpl
leave
add
sbbl
les
dec
or
les
xlat
push
rcrl
bound
xor
movsb
mov
testb
aas
outsl
inc
pusha
or
popf
shll
cmovge
js
lods
test
or
movsl
subb
cmp
mov
mov
sub
adc
mov
lods
fwait
adc
dec
mov
mov
inc
cmp
pop
call
mov
push
and
add
mov
outsl
dec
insb
popf
adc
and
pop
fldenv
lods
xchg
xor
sti
movsb
add
in
movsb
sub
jp,pt
push
test
ja
xor
dec
mov
xor
push
loopne
sub
lods
sub
cmp
push
or
lahf
into
shrb
cld
adc
push
in
dec
mov
adc
mov
rcrb
pushf
add
sbb
call
movups
cmp
adc
mull
adc
hlt
pop
fcompl
mov
push
xchg
ljmp
dec
mov
cmpsb
pop
movsb
adc
mov
pop
dec
in
mov
push
fldenv
mov
fstpt
outsl
xchg
mov
inc
leave
sbb
test
dec
push
popf
mov
sub
popa
pop
or
add
pop
push
cmpsb
and
mulb
dec
adc
inc
mov
adc
mov
fldenv
adc
mov
mov
sbb
je
push
jo
insb
popa
hlt
push
xor
mov
pop
cmpsl
xchg
and
pop
add
movsb
push
lea
inc
sub
cli
xchg
fisubs
leave
xchg
fcomps
push
cmc
cmc
pop
pop
push
jns
push
add
out
enter
loope
sbb
in
test
sti
leave
dec
pop
pop
ss
mov
call
add
test
dec
mov
shrl
mov
mov
mov
fdivs
xlat
inc
xor
jno
rorb
movsb
mov
mov
mov
in
push
xchg
and
jne
lret
sub
or
inc
bswap
inc
flds
xchg
stos
mov
lods
cmpsl
mov
mov
inc
mov
mov
lcall
jp
enter
insl
pop
dec
rorl
xor
es
pop
leave
adc
dec
jge
outsl
ret
lret
outsb
add
leave
sub
sub
inc
mov
fcoml
fsubs
jbe
jno
jge
es
repnz
jbe
popa
test
add
or
xchg
jmp
cwtl
add
mov
lcall
mov
push
scas
scas
mov
rcr
and
mov
movb
xor
inc
sbb
or
jge
in
insb
push
hlt
inc
push
inc
inc
or
inc
lds
or
dec
ror
pop
xor
and
les
outsb
push
test
jge
sub
icebp
lret
push
mov
and
dec
and
mov
cld
jbe
xchg
xchg
mov
leave
imul
cli
sbb
cld
mov
xchg
ljmp
ret
jne
mov
and
popf
aad
aas
pop
in
mov
jmp
sub
call
int3
adc
pop
sub
scas
push
in
aaa
push
ss
cwtl
dec
lret
sub
and
inc
cli
iret
dec
aas
aam
lods
lods
sahf
imul
jp
cmpsb
mov
sub
xor
xor
insb
inc
and
out
xchg
mov
in
sbb
loopne
mov
cmpsb
addl
xor
pop
xlat
pop
pop
int
cmp
subl
pop
push
adc
lahf
scas
pop
cltd
mov
cmp
push
cmpsb
hlt
in
push
aaa
pop
pusha
and
dec
mov
adc
pop
jnp
or
adc
aas
mov
sbb
or
adc
aam
inc
std
mov
dec
gs
jne
add
jp
test
and
push
xchg
movsl
leave
loopne
lock
fwait
mov
imul
xor
insl
add
and
adc
xor
mov
inc
aam
test
ret
and
les
xchg
cmp
mov
add
fwait
lock
fimull
jns
ret
es
rorl
test
addb
cmp
add
mov
and
adc
div
lods
lret
sahf
pop
xchg
dec
xchg
gs
ret
jl
jno
xchg
jb
call
adc
dec
clc
mov
xchg
call
into
pop
xlat
xor
fcoms
icebp
cmpb
sub
dec
mov
movsb
cwtl
cli
loope
mov
jp
mov
in
xchg
add
out
bound
movsl
sbb
adc
and
push
jge
pusha
add
repz
mov
add
adc
lods
pop
enter
and
out
mov
xchg
jecxz
movsl
ss
push
fcmovnu
bound
mov
add
and
mov
jo
xor
lock
cmp
dec
ja
xchg
or
or
inc
outsl
mov
mov
xor
out
mov
push
test
inc
dec
push
fs
sarl
sub
lahf
xchg
fxtract
rcl
mov
add
sbb
lods
pop
jne
andl
popa
jge
lock
lea
hlt
adc
push
ficompl
fisttps
lret
subl
jb
or
mulb
push
jge
sar
cwtl
jle
sbb
inc
pop
cmc
xor
test
scas
popa
pop
adc
xor
adc
jg,pn
jb
adc
pop
cltd
add
inc
nop
pop
jo
jp
daa
lock
dec
fmul
popa
and
cli
mov
sti
adc
cmp
push
push
or
push
xchg
xlat
hlt
insl
aam
sub
and
gs
pop
adc
test
scas
or
fldl
xor
lods
xor
movsb
xor
outsl
mov
loop
dec
popa
ret
mov
adc
push
ljmp
or
adc
pop
add
pop
fcomps
xchg
mov
movsl
lods
sti
cmovae
mov
xchg
pop
fnsave
rcll
or
and
lea
lret
cwtl
aam
add
loope
scas
mov
jo
lret
push
ret
in
push
lock
clc
jns
sub
sbb
push
sub
adc
dec
xor
cmp
lds
xor
sahf
fs
data16
int
xchg
add
fildll
scas
out
dec
add
mov
push
fcmovnb
jbe
inc
in
ljmp
add
jbe
idivb
pop
mov
nop
mov
mov
inc
mov
push
jp
fsts
mov
adc
mov
push
mov
push
add
aas
in
testb
pop
cmpsb
xlat
scas
inc
mov
arpl
fsubl
xor
mov
movsb
ja
int3
sbb
hlt
mov
or
push
inc
inc
popf
shll
int
lods
mov
pop
inc
fistpll
inc
lret
dec
or
aad
negl
mov
jns
xor
enter
ja
aad
and
push
fsubs
std
stos
int3
mov
insb
iret
and
and
pop
jae
cmp
cmpsl
and
and
ret
mov
mov
jnp
push
add
cmpsb
add
popf
int3
cmp
loopne
out
fnstenv
fnstsw
xor
or
jp
sub
push
stc
in
aas
sbb
push
inc
push
mov
adc
in
add
icebp
inc
sub
loopne
pop
loop
adc
and
scas
add
mov
inc
jmp
pop
scas
jo,pt
aas
dec
dec
test
icebp
fcmovnb
jo
fisttpl
cmp
mov
test
shll
idivb
enter
add
and
sub
addr16
push
xor
push
or
xchg
adc
aam
adc
js
call
xor
push
jle
loopne
ret
pusha
cmc
test
sbb
fwait
inc
dec
fisubrl
jns
push
push
mov
xchg
adc
outsl
jecxz
dec
dec
xchg
addb
push
lret
inc
outsl
imul
and
pop
xor
xchg
call
jnp
push
mov
push
mov
loope
mov
add
mov
jnp
repz
arpl
das
adc
dec
dec
inc
and
jle
testb
xchg
inc
mov
pop
sub
inc
pop
inc
insl
call
sbb
cltd
inc
stc
in
push
adc
adc
je
fstpl
mov
mov
scas
pop
adc
cs
mov
inc
and
xchg
inc
mov
xor
push
gs
xor
jo
js
cmp
pusha
push
sbb
lock
push
xlat
xor
repz
subl
dec
jecxz
cmp
adc
cmp
xorb
cmp
mulb
das
inc
or
fiaddl
xchg
xchg
popa
add
pusha
or
mov
out
push
adc
out
jmp
orb
mov
sub
add
pop
or
mov
add
mov
inc
add
add
sbb
cmp
nop
pop
cwtl
pusha
aam
pop
xchg
push
inc
add
jo
sub
dec
and
jg
mov
and
clc
dec
xchg
cmp
pop
enter
mov
outsb
addb
jp
cmp
mov
pusha
loope
shr
xor
imul
test
inc
fmul
mov
xor
mov
loopne
test
mov
xchg
cs
xor
loopne
xor
xchg
repnz
insl
jbe
and
fwait
mov
sub
cmpsl
lea
sub
mov
and
or
lds
add
sub
sub
imul
or
mov
loopne
add
cmp
add
lea
int
sahf
test
mov
sub
xchg
or
ret
and
aam
nop
loop
rolb
adc
push
jno
rolb
inc
jbe
shrb
inc
lock
fs
fsub
xor
std
loope
and
jb
add
rorb
aas
xor
cmp
jnp
mov
add
sub
push
xor
in
mov
xchg
movsb
or
dec
clc
xchg
mov
andb
pop
adc
or
test
and
fnstsw
mov
adcb
or
callw
mov
mov
push
andb
jg
adc
mov
mov
sub
sbbb
imul
dec
xlat
mov
cmp
dec
add
pop
addl
enter
jns
adc
inc
dec
scas
add
dec
or
jo
inc
inc
add
and
negl
das
inc
add
or
es
add
mov
movsl
add
jl
mov
or
dec
dec
and
cld
sub
rclb
xchg
mov
push
movsb
push
mov
add
and
push
push
inc
shll
add
inc
jmp
in
jb
cltd
lret
addr16
fcompl
dec
popf
or
dec
xor
out
push
mov
nop
mov
les
xlat
shl
and
or
dec
loop
dec
sbbl
les
orb
mov
shl
fcoml
dec
mov
out
test
push
addb
add
mov
pop
dec
adc
cli
dec
fucomp
test
lahf
lock
jne
lea
inc
ss
test
dec
gs
or
mov
inc
push
add
rcll
sahf
jb
sub
scas
std
das
or
or
ficompl
mov
cmp
cmp
ret
add
out
dec
mov
inc
mov
cmp
bound
hlt
xchg
cld
fidivl
cmpsb
xchg
xchg
xchg
jb
mov
in
divl
cs
call
jp
xor
push
ret
jl
push
sbb
mov
sub
cld
and
addr16
or
loop
lods
sbb
xorb
fs
mov
mov
outsb
cs
and
push
inc
push
into
sbb
mov
jns
bound
jo
push
fcoml
push
and
unpcklps
aaa
xchg
cmp
gs
stc
pusha
and
inc
decl
push
push
inc
cltd
dec
or
stc
add
sbb
xchg
test
mov
push
movsb
add
pusha
mov
mov
inc
mov
push
popa
ret
inc
push
stos
aas
mov
inc
cmp
dec
cmc
dec
fadds
mov
rolb
test
sub
iret
negl
ss
xchg
push
pop
xchg
push
ficoms
cmp
inc
adc
inc
push
dec
jno
inc
loopne
push
push
mov
and
jnp
pop
or
adc
pop
faddl
pop
dec
jb
and
mov
xchg
jecxz
cs
or
push
cmpsl
xlat
jo
movsl
call
push
and
in
inc
mov
test
mov
and
divl
loopne
sub
cwtl
hlt
sub
int
in
mov
sbb
adc
jecxz
pop
adc
xor
push
lds
pop
or
mov
inc
or
jne
sub
nop
sbb
mov
xchg
or
mov
pushf
mov
adc
iret
dec
xchg
jge
test
xor
cmp
les
jae
and
xchg
lods
push
cltd
sub
push
inc
leave
inc
stc
stc
fmulp
xor
jmp
push
dec
loop
push
rorb
sti
imul
ret
mov
jbe
sti
dec
outsb
out
mov
pop
addr16
daa
in
cmp
jge
sti
fnstcw
clc
sub
xchg
mov
adc
cli
mov
push
cmp
cs
jmp
test
or
in
shrb
loop
test
push
stos
sub
arpl
mov
cmpsl
jl
sbb
ljmp
pop
aaa
cmp
add
inc
jnp
inc
sbb
pop
xchg
ja
enter
ror
call
lds
and
mov
ret
rolb
pop
shrl
dec
push
aam
movsl
push
jbe
push
lea
jne
mov
push
mov
pop
mov
pop
loopne
mov
mov
dec
dec
testb
jecxz
out
jo
fcmovu
loop
je
test
add
and
xor
sarl
sahf
push
clc
int
xchg
or
or
mov
sbb
daa
jp
out
movsl
push
pop
add
jmp
fs
cwtl
clc
adc
adc
aam
pop
sar
adc
cmp
clc
xor
or
add
add
inc
movsl
shufps
bound
pop
push
popa
out
pop
lret
in
add
dec
andb
lahf
or
xor
add
and
xor
arpl
lcall
in
mov
push
add
or
xor
mov
cmp
xor
or
sub
cmpsl
jnp
sbbl
testb
inc
and
mov
mov
lret
mov
jmp
jmp
je
aad
sbb
sub
fiadds
rorb
cmp
into
addb
fdivs
cs
or
je
xchg
and
pop
hlt
mov
or
mov
scas
lea
add
cmpsb
adc
push
jae
adc
adc
mov
daa
fldenv
inc
or
pop
add
jl
and
mov
imul
rclb
test
push
aas
cmp
push
or
or
pmulhuw
sub
test
lea
and
pusha
sub
mov
test
and
pop
hlt
popa
ljmp
mov
adc
inc
mov
ror
pop
push
js
jo
sub
ljmp
in
cmp
mov
mov
xor
pop
jne
xlat
ret
movsb
sub
cmc
nop
add
cmp
orb
nop
add
lods
pop
adc
sbb
rorb
pop
jo
in
add
mov
imul
xor
roll
adcl
push
pop
xor
leave
or
push
ret
mov
test
mov
bound
push
and
shll
imul
fmull
movsl
push
xchg
cmp
mov
arpl
or
dec
mov
sub
adc
and
jge
hlt
dec
mov
push
push
mov
xor
clc
mov
sbb
pusha
push
cs
inc
add
xchg
sbb
mov
lds
mov
roll
dec
xchg
inc
or
xchg
call
inc
dec
fs
xchg
pop
std
dec
jmp
pop
cmp
add
and
fldenv
mov
push
les
add
pop
pop
xlat
pop
test
mov
inc
negb
sbb
mov
ffreep
xchg
aaa
jne,pn
mov
xor
loop
daa
ret
sub
sub
sub
pop
sbb
mov
jbe
fidivrl
cmp
fildll
ficompl
in
addb
ret
xchg
dec
iret
shlb
clc
xor
pop
and
mov
and
push
push
push
xor
and
push
adc
pusha
jmp
push
repnz
mov
stos
test
pop
movl
pop
stos
scas
xchg
xchg
pop
and
jns
add
dec
in
enter
mov
inc
pop
je
testb
rcr
rorb
fadds
and
insb
or
mov
xchg
es
cmp
insl
mov
int
pop
sub
or
pop
jge
in
xchg
and
je
add
into
pop
sub
mov
xlat
inc
test
ret
push
rcr
mov
fisubl
fwait
leave
sbb
push
or
ficompl
push
inc
xchg
pop
mov
mov
pop
popa
in
daa
jge
pop
lcall
inc
cmc
inc
in
mov
sub
cmc
sbb
dec
cmp
xchg
and
enter
xchg
mov
lea
xchg
cmpsb
mov
mov
test
sbb
test
mov
and
pop
lcall
rolb
mov
add
mov
mov
repz
pop
fcom
loop
loop
or
cmp
mov
enter
gs
into
arpl
push
sti
sub
mov
js
pop
sbb
jnp
jp
lcall
loopne
mov
lcall
sbb
sub
inc
xchg
iret
and
mov
test
jl
add
xchg
cld
shr
add
fbstp
mov
in
pop
push
imul
push
mov
jge
and
imul
test
pop
rcll
push
xchg
scas
into
dec
mov
out
cmpsb
pop
sub
jno
loopne
mov
les
inc
add
lock
or
sub
mov
or
subb
outsb
or
mov
dec
add
add
push
cmpsl
loopne
adc
int3
lods
fildl
outsb
aas
ja
movsl
iret
mov
mov
lret
add
outsb
cmp
int3
mov
jg
push
pop
jmp
push
pushf
dec
xor
push
fs
ds
xchg
call
mov
dec
out
push
cmp
cmpsb
cwtl
xchg
sub
adc
sbb
sbb
ret
pop
cli
rclb
xchg
mov
shll
sarl
xor
xor
push
add
aad
push
xchg
mov
inc
xchg
jne
add
iret
sub
fidivrs
xchg
mov
mov
pushf
sbb
sub
sub
cmp
or
cmp
xor
test
adc
sub
mov
sub
adc
shl
lret
mov
sub
rcrl
iret
inc
test
cltd
dec
fnstenv
mov
je
fsubs
inc
xor
adc
jns
cmp
xor
cwtl
fiadds
jb
jp
or
sub
adc
testb
jb
mov
adc
sbb
inc
cli
inc
or
je
and
adc
icebp
test
shll
push
inc
into
cmpsb
jno
vpmuludq
cmpsl
cmp
or
push
dec
js
jp
adc
hlt
adc
push
adc
mov
xor
mov
test
into
cmp
ret
xlat
fisubs
mov
out
mov
int3
mov
sub
daa
in
inc
jg
out
sub
mov
iret
inc
sub
inc
push
and
es
call
addr16
sub
jne
lods
add
xor
jmp
add
push
inc
js
into
call
or
mov
imul
pop
roll
add
incb
and
addb
xlat
sub
jmp
adc
xor
jl
test
cmp
test
inc
and
std
sbb
and
out
aas
adcb
imul
and
arpl
call
dec
and
mov
mov
push
clc
mov
nop
call
push
fildll
and
mov
scas
mov
pusha
pop
fs
fiaddl
loopne
mov
imul
insl
fs
mov
outsl
fs
inc
addb
sahf
mov
insl
mov
and
push
xor
pop
hlt
pop
lea
mov
pmuludq
cltd
js
mov
imul
adc
and
inc
rcll
mov
rcrb
sbb
and
xchg
inc
leave
inc
pushf
lea
mov
mov
shrl
inc
fimull
adc
lea
ss
adc
xor
mov
xor
fs
cltd
sub
mov
aas
xchg
mov
or
lea
jp
inc
pop
jp
sub
dec
and
invd
inc
mov
inc
xchg
sbb
imul
xor
dec
xchg
sarl
cmpsl
adc
xor
lea
mov
imul
adc
shl
bound
sub
jecxz
int3
out
xor
mov
das
orb
clc
add
outsl
std
xchg
inc
xchg
add
add
punpckhbw
inc
cmc
pop
push
pop
push
loop
push
invd
cmc
arpl
cmc
in
sub
pop
gs
cmp
nop
cmp
mov
out
jae
push
inc
mov
cmc
mov
aaa
push
or
or
ds
mov
fs
cmp
inc
mov
cld
sbb
idiv
imul
mov
xchg
dec
or
mov
shrb
pop
mov
and
test
mov
sbb
mov
rolb
test
icebp
ret
ret
jmp
mov
xor
pop
jne
nop
in
sub
popf
push
or
int3
jl
and
sub
add
imul
xor
test
stc
inc
dec
inc
adc
add
adc
and
movsb
jge
adc
mov
and
mov
lahf
add
cmpsl
jle
push
scas
jno
dec
push
add
sub
mov
js
inc
and
sbb
cli
jns
push
movsl
or
mov
adc
int3
sbb
and
movsb
xchg
mov
dec
or
adc
aad
les
nop
mov
rcl
and
and
sbb
test
jbe
lds
jno
xor
and
xor
test
mov
jecxz
sub
xor
push
or
adc
inc
stos
mov
dec
ret
mov
inc
cltd
xchg
shl
aam
lret
in
test
sub
repz
inc
dec
inc
sbb
ss
das
adc
fiaddl
inc
pop
cltd
aam
jae
test
dec
push
push
jb
push
fwait
or
add
in
subl
mov
pushf
test
aam
add
and
int3
dec
fsubr
gs
popa
iret
fs
stos
xor
movsl
xchg
lds
enter
pop
cmp
sub
jl
scas
ljmp
and
nop
cmpsb
aad
push
mov
rorl
sub
in
cmp
mov
js
ss
add
jb
xchg
cli
xor
mov
push
shlb
or
mov
lret
mov
mov
add
mov
pop
ja
adc
push
cmc
add
bound
mov
jmp
das
dec
mov
aas
dec
push
mov
shrb
jmp
out
adc
imul
test
mov
lea
fs
out
adc
fldt
mov
sub
mov
les
popf
add
xor
outsb
lcall
fisubrl
outsl
xchg
push
mov
mov
push
xlat
aad
mov
sbb
jae
aad
in
push
idivb
lahf
push
insb
mov
push
jb
inc
aas
hlt
mov
jo
shlb
jmp
sub
add
pop
or
push
sbb
pop
push
sbb
dec
cwtl
lock
das
or
adc
je
je
xchg
test
mov
dec
sub
nop
xor
mov
packuswb
loopne
fimuls
add
and
ja
les
push
shrb
popa
xor
jle
push
push
sarl
push
and
mov
ret
fwait
xchg
data16
adc
rcl
adc
mov
mov
mov
gs
ljmp
rcrb
dec
mov
jmp
cmp
jmp
int
popa
add
mov
fs
and
jge
mov
cltd
mov
pop
nop
cli
mov
xor
mov
sbb
outsl
add
popf
push
xor
test
pop
pop
test
mov
sub
rcrl
xchg
pop
arpl
lods
cwtl
mov
cmpsl
fdivp
mov
gs
cld
and
sti
aam
dec
pushf
push
cltd
jb
adc
popa
cs
stos
sub
loopne,pt
sub
ljmp
mov
fimuls
push
dec
fstpt
jns
es
cld
dec
or
xchg
lods
pop
inc
inc
insb
sub
xor
repnz
imul
inc
mov
jns
mov
jmp
xchg
scas
sbb
js
pop
pop
adc
fsub
popf
dec
xchg
shrl
mov
out
lret
adc
and
subb
fs
or
mov
jecxz
aad
inc
out
loope
sbb
inc
dec
int
enter
push
mov
fildll
pop
in
es
sub
xchg
mov
fiaddl
pop
adc
jecxz
iret
mov
xchg
mov
and
sub
mov
jle
into
arpl
aaa
arpl
popf
cwtl
sbb
pxor
lds
mov
movsb
jne
xchg
push
and
or
push
mov
stc
xchg
cmpsl
xor
das
adc
jbe
pop
and
inc
aad
lcall
sub
add
popa
ljmp
push
or
dec
fldt
inc
fadds
mov
sbb
jb
hlt
or
out
push
or
cld
and
imul
aad
inc
outsl
cli
xor
lods
flds
push
xor
add
test
mov
mov
popa
ss
sub
enter
inc
cmp
insb
out
bound
stos
jae
dec
adc
movsb
and
add
jne
jbe
pop
insb
rclb
scas
cltd
add
fistpll
dec
sub
or
out
push
sub
pusha
pop
insl
mov
roll
jle
cltd
sbb
lcall
mov
add
mov
je
cmp
add
adc
setno
and
ds
cmp
gs
or
imul
int
sub
cld
pop
shlb
jb
movsb
in
sub
and
mov
pusha
hlt
rcl
cmp
hlt
push
shlb
dec
xchg
lods
test
sbb
push
lds
pushf
shr
dec
inc
xchg
adc
daa
out
scas
dec
idivl
push
dec
add
test
mov
sbb
leave
and
inc
ret
popa
push
xlat
xor
dec
mov
xor
mov
in
pop
sti
movsb
mov
adc
inc
out
ret
dec
push
icebp
adc
push
jne
je
lods
imulb
lret
sub
xchg
js
sub
fmul
ret
nop
loopne
and
fimuls
rclb
mov
mov
sub
loopne
sub
mov
jp,pt
and
imul
jmp
cmp
das
ficoml
push
notb
cmpsb
and
dec
movsb
mov
jg
call
pop
daa
pop
push
pop
cltd
clc
rcrb
test
movsb
mov
int3
pop
cmp
rcll
inc
cltd
cmp
cs
inc
mov
xor
sub
mov
jno
xchg
mov
test
mov
xchg
push
jl
push
xor
out
push
add
scas
ljmp
sub
cs
fs
pop
pop
mov
sbb
cli
fsub
inc
mov
das
inc
nop
add
or
ljmp
push
loope
mov
out
jnp
sub
shrb
int
cld
push
dec
sahf
mov
mov
sub
adcb
insb
mov
pusha
pop
dec
cmp
pop
jecxz
push
aas
test
jne
xchg
inc
leave
lock
adc
call
fwait
mov
pop
scas
movsb
lahf
mov
pop
mov
rol
inc
gs
mov
sub
push
daa
test
pop
or
or
vmovaps
xor
sbb
sbb
inc
sbb
int
or
xchg
mov
shlb
jp
fwait
and
mov
cs
sbb
mov
xor
dec
cmp
mov
rcll
ljmp
ja
bound
cltd
mov
adc
xchg
sbb
loop
test
mov
popa
xor
inc
loopne
xor
les
jge
hlt
or
dec
out
rolb
add
inc
adc
dec
pushl
std
mov
mov
aam
inc
aam
or
and
cmpb
lods
call
jge
inc
inc
rcl
push
mov
adc
add
in
or
jae
pop
mov
lret
rcl
add
and
into
loope
push
popf
sbb
jae
and
push
dec
mov
xor
or
and
rorl
push
sub
mov
out
in
xorb
ss
mov
push
cmp
sub
sbb
mov
imul
pop
das
xchg
aas
dec
repz
pop
xchg
test
roll
mov
pop
js
jmp
mov
dec
adc
push
jmp
pop
sbb
lods
jne
arpl
adc
rcrb
in
test
or
cmp
jecxz
adc
and
pop
pusha
mov
mov
dec
dec
inc
es
adc
aaa
faddl
jl
sbb
cmp
or
sti
stos
xor
push
dec
in
inc
jl
rorl
repnz
mov
and
mov
or
insl
push
cmp
test
int
test
jge
rclb
mov
mov
mov
sahf
lods
jb
inc
mov
outsl
shlb
xor
add
sarl
xchg
add
or
hlt
xor
mov
mov
mov
fidivrl
pop
inc
sub
dec
mov
dec
xchg
nop
and
and
and
lret
mov
sbb
sub
jge
sub
test
push
push
ds
sar
pusha
sbb
fbstp
xor
arpl
jl
mov
pop
cmp
loopne
xchg
sub
ret
or
movsb
inc
xlat
pop
sbb
lcall
and
rclb
xor
lcall
add
ret
pop
jle
rorb
jg
push
in
cli
sub
test
popa
pop
es
inc
adc
mov
push
sbb
subb
rorl
xchg
inc
adc
mov
or
adc
in
cs
mov
push
add
inc
dec
push
and
inc
sub
push
test
adc
xchg
push
pop
sub
lods
daa
push
aas
cmp
jmp
mov
push
and
ljmp
in
mov
adc
faddl
ds
mov
addr16
fistl
sub
out
lahf
sti
cmp
bound
jg
ja
cmpsb
pop
cmc
adc
dec
jae
and
jle
dec
and
sub
inc
orb
push
dec
push
movsb
imul
test
cld
pop
and
notl
imul
call
out
dec
pop
mov
jg
mull
fnstenv
mov
call
sbb
jne
ficompl
clc
cmp
xchg
movsl
mov
pop
sbb
xor
jo
loope
sbb
aam
xchg
push
in
fs
fisttpll
aad
jl
sub
gs
cli
dec
jge
inc
xor
cmp
and
test
dec
aam
fcompp
mov
subl
or
lock
pop
call
xor
push
andl
push
or
fildl
dec
lret
jp
xchg
mov
sub
imul
push
xchg
fstps
pop
xor
lods
js
in
vmulsd
test
dec
cld
pop
dec
push
ljmp
vcvtps2dq
cmp
aas
xchg
sahf
test
dec
hlt
arpl
sbb
mov
popa
movd
jmp
out
dec
fs
rorl
cmp
cmp
aas
push
jbe
cmp
pop
xchg
dec
inc
nop
call
out
cmp
push
jge
cmpl
and
insb
mov
fadds
sbb
add
or
xor
andb
xor
jns
adc
and
orb
adc
xchg
sbb
mov
jle
daa
shr
test
sbb
jbe
xchg
rcrb
lods
scas
test
add
jnp
stos
movsl
jbe
inc
jl
push
cmp
shrb
test
sbbb
jnp
jmp
xor
push
sub
out
pop
and
in
cli
insl
inc
enter
int3
pop
jmp
mov
push
addb
mov
lahf
call
shll
mov
or
pop
push
lods
and
mov
inc
sub
adc
in
ucomiss
cmp
push
lea
dec
pop
adc
inc
adc
fildl
inc
or
dec
les
insb
or
mov
inc
inc
mov
popa
lret
aam
lcall
loope
xor
or
imul
cmp
and
inc
mov
popa
inc
pop
mov
dec
xor
mov
mov
ljmp
add
lcall
test
sub
dec
popa
dec
or
mov
xor
jmp
ret
xor
mov
push
dec
je
cmp
push
add
push
test
xchg
push
data16
xor
in
fisttpl
sub
test
cld
es
in
fmull
je
adc
xchg
sti
mov
js
mov
push
aam
push
cli
mov
cwtl
dec
insb
mov
lods
add
fisttpll
mov
push
mov
and
clc
add
xor
dec
mov
inc
insb
dec
or
subb
and
ljmp
add
cld
pop
repz
rcll
inc
ret
rorb
mov
or
in
scas
jbe
scas
mov
jl
and
sbb
mov
je
dec
mul
dec
mov
hlt
stos
mov
ss
sti
mov
push
xchg
cli
sub
push
call
imul
es
testb
ficoml
subb
inc
sbb
js
mov
push
sub
addr16
cmpb
scas
push
imul
pop
jae
aaa
out
test
adc
addl
loop
inc
adc
aad
pop
jno
dec
sahf
push
add
mov
daa
push
test
jl
bound
fildl
mov
xchg
cmp
lea
add
mov
inc
ret
decb
jle
andb
sbb
or
out
push
inc
stc
lds
pop
jne
bound
push
notl
and
adcb
stos
push
add
in
sbb
or
imul
outsl
xchg
xchg
ljmp
and
xor
mov
add
dec
mov
out
pop
xchg
aad
ret
stos
mov
pop
and
and
sarl
push
dec
jmp
add
incb
mov
fcoms
dec
mov
mov
addl
mov
aas
inc
nopl
sahf
adc
clc
push
dec
cmpsl
sub
push
sbb
outsb
or
cmc
cld
or
mov
int
mov
movb
cld
imul
push
je
fidivrl
inc
adc
test
pinsrw
test
jae
jne
jge
jp
movsl
inc
or
push
pop
inc
lods
mov
xchg
dec
or
bound
jp
jle
adc
int
pop
add
pop
cmp
lret
mov
sub
cld
xchg
add
and
and
cmpsb
dec
subb
cmp
mov
sub
jmp
mov
mov
sbb
push
push
adc
and
lcall
lret
or
xchg
pusha
insl
and
and
jle
fldl
adc
stos
mov
ret
call
pop
out
mov
xor
mov
sub
and
jns
cmp
mov
jge
xchg
aad
leave
cmp
icebp
cwtl
mov
mov
int
inc
aaa
mov
adc
inc
mov
mov
or
xor
xor
outsb
mov
popf
jecxz
pop
push
jae
enter
loope
xchg
inc
jmp
fcompl
call
mov
cmp
mov
adc
or
fcoms
jo
movsb
in
pop
ret
add
mov
arpl
dec
or
mov
or
packsswb
sbb
loop
fldl
fldcw
push
enter
aam
pushl
ret
imul
cmpsb
sbb
dec
sarl
mov
or
xor
pop
and
xor
jae
sub
xor
stos
stos
cmp
es
pushf
jmp
or
fs
pcmpeqw
sub
mov
mov
mov
lea
aaa
popf
out
mov
add
filds
sub
pusha
inc
ss
mov
popa
inc
add
data16
sbb
and
inc
test
lret
sar
loopne
enter
pushf
fnsave
popf
pop
outsl
pop
cltd
cwtl
sbb
jg
in
mov
ljmp
xacquire
js
push
and
sub
scas
inc
jle
jo
cmp
rdpmc
stc
jmp
or
pop
mov
dec
test
jne
and
aas
jp
or
mov
cmp
je
lods
call
adc
stos
dec
fdivrl
lcall
mov
into
inc
xor
idiv
inc
dec
sahf
mov
faddp
imul
loop
pop
ljmp
dec
jecxz
arpl
or
mov
outsb
push
cld
vcmpss
sbb
lahf
and
xor
adc
int
push
es
pop
pop
jne
push
pop
loopne
inc
or
adc
fs
je
lcall
out
add
in
cmp
imul
pop
ret
das
push
out
aaa
pop
mov
imul
and
mov
pop
insb
outsl
or
sbb
rcr
mulb
mov
inc
and
pop
dec
aad
gs
cli
test
adc
call
add
jmp
mov
add
movsb
mov
jne
inc
mov
add
mov
inc
xchg
int3
pop
xor
adc
mov
and
mov
inc
jle
sbb
mov
aam
add
sub
mov
jae
xor
ficoms
and
fmuls
sub
sub
stos
adc
inc
cmpsb
and
or
and
cwtl
push
adc
imul
inc
rcr
jno
add
adc
mov
jle
les
xchg
sub
rorl
jae
lahf
push
shrb
cmpsb
fdivs
movsb
and
adc
adc
adc
es
xchg
mov
and
push
xor
lahf
insl
shll
leave
cmpsb
movsb
mov
iret
lock
dec
and
movsb
inc
lea
ret
inc
pop
cmp
hlt
jno
add
lods
adc
cwtl
nop
mov
push
popf
out
movsb
xorb
push
push
lahf
push
xor
mov
pop
pusha
rcrb
sbb
stos
push
pop
cmp
std
loopne
inc
mov
mov
movsb
pop
icebp
je
ret
mov
sub
aad
push
std
xchg
movsl
ljmp
lret
add
pop
pop
sub
inc
int3
sub
sbb
int
cli
shlb
push
or
mov
adc
cmp
das
or
mov
push
imul
add
sbb
jno
divb
cmp
xor
lods
fmull
xchg
dec
mov
dec
cmpl
dec
jecxz
fnop
push
mov
sbb
movsb
mov
inc
or
test
nop
mov
mov
mov
adc
cmp
mov
nop
inc
pop
adc
mov
sbb
and
scas
adc
out
mov
stos
push
stc
lret
jecxz
and
push
dec
test
mov
lods
inc
repnz
pop
inc
movsb
insl
inc
push
cmpsl
mov
test
stos
push
push
and
call
sub
inc
int3
sub
cld
out
and
arpl
hlt
out
outsl
fistl
mov
sbb
dec
jg
cli
lods
sub
cmp
out
and
mov
push
adc
loopne
cmp
mov
pushl
mov
xchg
out
pusha
adc
or
mov
subps
fildll
call
push
test
lods
sub
lods
outsl
loope
loop
adc
popa
lds
rorl
cmp
mov
sub
fcmovnb
cmpsb
push
mov
pop
loopne
cmp
or
ljmp
sub
xchg
add
ss
out
outsl
mov
mov
in
lea
inc
push
xchg
push
jge
sbb
lret
sbb
scas
xor
mov
sti
mov
ret
or
ret
rcll
inc
cmpsl
xchg
mov
loopne
adc
and
inc
jbe
cmp
jbe
push
push
rcll
xchg
sbb
pop
mov
push
adc
xorl
push
addr16
mov
xchg
outsl
jmp
fcoms
sub
loopne
and
inc
push
jo
addr16
sbb
lds
adcb
xor
mov
and
add
aas
mov
inc
jg
test
std
mov
fwait
push
pop
mov
mov
test
mov
stos
sub
and
es
pusha
push
test
adc
inc
add
inc
rorl
loopne
push
repz
out
sbbb
mov
enter
loopne
mov
scas
sub
mov
addl
jecxz
movsb
pop
stos
mov
test
xchg
icebp
push
sbb
call
adc
fists
jno
sub
sub
mov
adc
ja
cmp
xchg
pusha
subb
jns
fildl
mov
pop
inc
test
adc
adc
mov
ds
or
push
xchg
aad
shll
hlt
adc
add
pop
scas
push
rcl
lock
inc
add
push
clc
and
jmp
subb
push
pop
loop
pop
adc
pop
sarl
shl
dec
out
gs
insb
adc
xor
adcb
xchg
or
push
cmp
push
sub
ret
mov
dec
dec
imul
data16
or
mov
dec
push
inc
and
or
jmp
add
test
fidivl
add
mov
cmpb
je
or
fstps
add
inc
inc
dec
pop
or
jge
jmp
loopne
cmp
bound
test
sub
and
lret
shlb
ljmp
sub
or
xor
pop
xchg
pop
stos
mov
mov
loopne
test
jb
push
les
popa
shlb
inc
dec
sbb
daa
and
in
mov
fildll
clc
cmp
push
inc
xor
pusha
movsb
rolb
add
ja
push
sarb
je
and
ljmp
fmull
inc
jg
jp
jae
out
mov
cmp
mov
add
push
adcb
rorb
xchg
cltd
adc
pop
adc
push
fbld
and
mov
orl
or
and
xchg
sbb
ret
jge
jb
or
add
xor
adc
inc
xchg
add
cld
push
imul
insl
pop
xor
sub
adc
or
pop
sub
push
sbbl
dec
adc
fdivrl
int
push
sub
jns
pop
xor
push
sbb
xor
mov
adc
mulb
outsl
inc
sub
cwtl
pop
xor
stos
sti
xor
sbb
lea
sbb
icebp
hlt
cs
dec
sbb
aad
adc
pusha
push
jno
ljmp
inc
mov
fs
clc
adc
xor
hlt
or
ss
or
mov
sub
cmpb
mov
js,pn
pop
sub
xchg
pop
out
dec
pop
inc
enter
cmc
and
aad
outsl
pop
push
data16
cmpl
xlat
mov
pop
or
pop
and
xchg
sbb
std
push
dec
inc
inc
push
pop
xor
xor
sub
lds
or
por
out
xchg
add
xchg
in
stos
aam
ja
ljmp
push
call
push
xorl
jo
test
dec
cli
mov
push
xchg
push
push
int3
shrb
sub
pop
add
inc
xorb
pop
adc
in
inc
out
sbb
gs
push
sbb
test
adc
pop
push
cmpsb
movb
adc
ljmp
int
int
aam
es
fnstcw
ljmp
mov
mov
and
push
adc
mov
or
cmp
jle
lea
pop
jb
pusha
and
or
lcall
fiaddl
je
cld
mov
add
jbe
stc
jno
sub
aam
test
fdivl
or
stos
mov
push
mov
rclb
mov
inc
scas
es
stos
cmpsb
and
leave
mov
nop
sbb
loopne
adc
imul
xor
cmp
or
sbb
add
push
cmp
mov
cmp
push
addl
sbb
lret
and
or
lods
xchg
jp,pt
iret
shrb
mov
jmp
mov
jno
bound
repnz
mov
mov
mov
and
mov
pushf
push
rcl
pop
out
decl
push
cli
shll
aaa
aad
call
aam
sarl
pop
push
lret
loopne
sbb
jg
std
sub
call
clc
push
mov
sub
and
dec
lods
in
test
pushf
push
dec
push
dec
xchg
jno
ljmp
js
add
ds
pop
sub
xchg
cltd
repnz
mov
jbe
sub
pop
mov
add
push
push
push
mov
fnstenv
mov
aaa
sub
lds
enter
and
lock
mov
lahf
je
jp
iret
test
jg
dec
out
inc
ror
ss
movsb
or
mov
xorb
stos
adcb
lcall
mov
sub
es
cltd
and
push
imull
sub
adc
cwtl
and
mov
sarl
test
popf
mov
lret
xchg
stos
cmp
std
push
jbe
mov
test
les
inc
scas
mov
mov
insb
lods
dec
les
lea
insb
test
icebp
rcl
jp
mov
inc
test
lock
clc
rcll
add
or
sbb
xchg
cld
hlt
ret
data16
push
push
mov
add
repnz
xor
dec
mov
sbb
cmp
mov
adc
in
mov
int
mov
rcll
xor
gs
mov
xchg
cmp
cmpsb
cli
cs
fildl
xchg
aam
loope
inc
in
push
bound
in
sbb
mov
pushf
cmpsb
mov
stos
cld
mov
sbb
push
adc
mov
aas
outsb
lods
in
jp
in
mov
mov
xchg
mov
cli
add
fnsave
push
add
orb
in
in
pop
push
fwait
xlat
test
xor
lods
sbb
loopne
push
stos
rol
scas
lret
xorl
cmp
lods
loop
mov
rcrl
jp
sub
xor
or
enter
mov
cmpb
xor
icebp
pop
jge
aaa
sbb
pusha
pop
hlt
sbb
fcomi
mov
in
jnp
rcll
fsubrl
pusha
lret
inc
in
in
and
scas
mov
push
mov
jecxz
fdivrs
repnz
addr16
lahf
mov
xchg
inc
mov
test
xchg
mov
push
jg
out
cs
std
ret
push
nop
jg
and
add
xchg
shl
adc
jmp
inc
xchg
xchg
je
stos
lods
adcl
pusha
test
cmpsl
mov
or
fcmovnbe
xlat
xchg
xor
push
push
inc
xor
mov
ret
add
inc
pop
mov
stos
sbb
jp
lahf
xchg
ror
inc
jb
aad
cmc
and
mov
xor
ds
outsb
mov
lock
pop
cli
imul
sub
icebp
test
mov
test
mov
dec
sbb
add
int3
adc
dec
scas
cmp
popf
cmp
fs
push
loopne
rcll
jmp
jmp
xchg
sub
rclb
sbb
shll
jne
xchg
inc
inc
hlt
inc
push
arpl
fsubrl
std
lret
dec
push
fnstsw
lret
sub
ret
mov
out
mov
insb
decb
dec
cwtl
pushl
adc
xchg
xor
sub
adc
es
loope
scas
sub
jle
jl
push
mov
mov
loope
cld
ja
ja
sbbb
cmp
pop
and
dec
sub
loopne
add
mov
loop
add
pop
push
scas
add
mov
jnp
mov
pop
add
sub
xor
andb
test
xchg
inc
aad
mov
or
int3
rorl
adc
je
popa
jecxz
jg
dec
mov
shlb
popa
adc
lret
xchg
scas
inc
mov
js
test
or
push
xor
insb
popa
pop
sub
jb
pop
pop
movsl
test
stc
lret
popf
jb
mov
loope
jmp
push
pop
push
inc
test
shll
sbb
in
xor
lods
nop
jl
sarb
jle
bound
dec
pop
shrl
out
dec
push
imul
push
push
fs
push
push
inc
movsb
lahf
xor
shrb
mov
mov
cld
and
pop
adc
xor
cmp
inc
iret
jae
xor
push
jg
mov
jmp
mov
ss
push
pop
or
pop
or
push
gs
scas
pop
sbb
clc
xchg
xor
leave
or
jle
dec
pushf
add
lret
and
pop
dec
std
pop
push
push
imul
xchg
push
call
adc
ja
inc
mov
inc
jno
pop
out
mov
in
mov
push
adc
jne
xor
fnsave
jmp
adc
jmp
pop
lock
xor
add
or
test
inc
cmp
lods
movsl
bound
inc
scas
add
test
mov
ficomps
mov
ss
jle
movsl
mov
and
out
ficoml
addb
outsb
pop
and
push
xchg
inc
lock
adc
imul
fsubs
inc
sbb
ss
add
mov
jp
mov
push
xchg
test
lds
inc
lahf
sarl
sub
or
ds
das
dec
jg
mov
nop
loopne
adc
mov
push
test
mov
add
xor
sbb
push
mov
cmp
lcall
int3
and
pop
ds
push
and
push
gs
adc
std
adc
jno
lcall
xchg
test
out
pop
dec
test
pop
hlt
xchg
icebp
add
inc
movsl
int
fcomip
mov
jmp
jp
mov
jbe
mov
sti
sbb
mov
sub
and
dec
or
inc
pop
test
daa
mov
shll
je
jae
push
mov
pop
leave
in
mov
ss
pop
pop
lods
pop
and
int
xor
ja
push
xchg
cmpsl
subl
push
pop
out
sahf
shlb
aam
lods
jle
mov
jne
shll
jmp
jecxz
adc
cmp
sbb
jo
les
pushf
sahf
les
xchg
arpl
in
mov
mov
sub
popf
ja
jecxz
jne
jg
pop
nop
int
sub
mov
pop
fnsave
in
mov
ss
push
rcl
les
xchg
loop
dec
divb
jecxz
out
and
sub
jmp
jmp
dec
and
call
or
cmp
xor
jmp
push
in
xchg
push
int3
push
xchg
push
jge
add
xchg
fs
and
mov
dec
push
sbb
stos
pop
jge
add
mov
mov
dec
outsb
mov
ficompl
fs
push
mov
cmc
mov
push
loop
shll
movsb
pop
fists
mov
mov
push
cmp
xor
dec
sbb
fistl
bound
pop
push
mov
push
loop
inc
xor
cld
sahf
lods
push
cld
and
ljmp
fimuls
inc
movsb
push
es
push
push
movsb
bound
sub
mov
int3
in
mov
movsb
push
pushf
mov
aaa
inc
and
fmull
mov
mull
hlt
or
aad
adc
mov
inc
lods
das
sub
inc
loop
cmp
test
into
out
ret
pop
mov
inc
fld
inc
inc
and
enter
jmp
and
std
mov
insl
insb
mov
aaa
jge
daa
jg
sub
pop
pop
sbb
adc
mov
xchg
adc
pop
push
dec
cltd
scas
and
add
xor
sub
pop
mov
test
pusha
pop
sbb
in
mov
fildl
jp
mov
sub
pop
shlb
imul
and
mov
cli
test
push
xchg
ja
imul
in
lock
mov
test
ljmp
mov
add
mov
xchg
in
std
stc
jo
and
js
xor
cmp
enter
and
cs
cmp
movsl
add
cmpsl
pop
xchg
adc
mov
fsubr
jns
sbb
inc
push
xor
call
pushf
jl
andl
in
arpl
cmp
lret
push
inc
add
xor
mov
or
cld
push
xor
adc
mov
ret
ljmp
jbe
dec
outsb
lcall
pop
dec
loopne
jnp
outsb
call
jns
or
mov
xchg
pop
mov
cmp
push
xor
fimuls
repnz
leave
aaa
rcrl
cmc
out
lret
jg
fimuls
push
push
xor
or
jno
loop
push
inc
push
cmp
cmpsb
jmp
cwtl
sahf
adc
rorb
push
adc
cmp
xor
stc
sub
inc
lret
jne
int
push
in
leave
push
add
sbb
lods
test
inc
sub
imul
and
sub
mov
push
out
scas
iret
push
and
rorb
push
mov
push
iret
daa
lods
inc
mov
in
add
cli
adc
cmc
sbb
ss
js
mov
lds
push
test
lcall
sub
ret
adc
dec
enter
shll
faddl
mov
sub
cld
lods
pop
iret
in
jp
and
push
jns
gs
insl
add
pop
cmp
push
push
std
jae
and
mov
ja
shr
fdiv
mov
dec
dec
movsl
adc
loop
pop
cmp
pop
xor
inc
in
xchg
aam
fdivr
shlb
mov
test
sub
test
sub
sbb
or
bound
cmpb
std
mov
ljmp
clc
std
inc
add
inc
cmc
dec
jmp
out
push
pinsrw
loope
sbb
insb
dec
push
push
dec
shl
mov
aam
and
rcr
loop
lahf
sti
ss
inc
xchg
fwait
push
int
cltd
pop
iret
les
movsb
in
scas
fs
cmpsb
lret
cmp
std
mov
inc
add
mov
cmpsb
repnz
or
lea
aad
jl
push
das
sbb
or
inc
pop
inc
push
lret
sbb
inc
lcall
rcrl
pop
arpl
mov
mov
stos
dec
sub
pop
jb
push
cmp
adc
imul
mov
pop
mov
dec
scas
shufps
bound
rcrb
test
test
jmp
xor
push
out
pop
insb
add
cs
push
dec
fs
fildll
adc
jno
push
jns
iret
mov
xchg
xchg
mov
dec
mov
notl
pop
loop
lods
call
movsl
repz
repnz
clc
lea
sti
xchg
push
mov
clc
dec
dec
inc
shlb
pop
or
outsb
fsubl
adc
aas
cmp
mov
clc
pusha
or
loopne
adcb
jnp
xchg
and
gs
fwait
or
mov
sub
in
xchg
js
ret
xor
sahf
push
cltd
mov
dec
add
add
push
mov
jb
fisubrs
jmp
inc
jo
xchg
push
pop
inc
mov
movsl
and
jb
out
sub
cmp
xchg
sub
sub
xor
imul
pop
clc
das
jp
mov
addb
mov
pusha
pushf
mov
jmp
rcll
pop
inc
pusha
push
sarl
andl
nop
fsubrs
mov
sbb
or
cmp
dec
add
incb
je
cmp
mov
mov
int3
cltd
bswap
add
xor
pop
xchg
xchg
pop
mov
mov
xchg
out
pop
or
adc
cs
movsl
or
add
sub
fstl
rclb
sub
sbb
dec
scas
movsb
inc
jmp
jge
mov
mov
mov
xchg
and
lock
ljmp
add
mov
cmc
sbb
pop
mov
inc
stos
mov
add
push
imul
movsb
mov
cli
push
into
out
pop
mov
jne
jns
mov
cmp
cmc
fwait
or
mov
repnz
mov
push
add
icebp
shrb
jp
sbb
test
mov
movsl
stc
jge
popf
shlb
mov
xor
and
jmp
and
push
les
mov
insl
sbb
push
test
stos
and
loop
push
adc
xchg
lods
sub
aam
add
stos
jg
sub
ds
pusha
das
out
cmpsl
es
push
loope
mov
add
fildll
ret
push
adc
movsl
mov
xor
inc
popa
sbb
jg
and
loop
sbb
lret
dec
mov
nop
sbb
xor
lock
inc
add
scas
hlt
cltd
mov
dec
cmp
repnz
or
push
and
into
decl
sub
fdivs
cmp
and
mov
jno
sti
dec
popf
mov
mov
ds
mov
enter
or
andl
int3
pop
mov
and
xor
movsl
xlat
cmpsb
bound
xchg
push
adc
fs
insb
stos
pop
or
pop
test
jmp
mov
dec
or
xchg
movsb
pop
mov
cmp
jg
out
andb
fstpl
in
test
push
dec
mov
pop
mov
imul
rorl
jecxz
test
jg
roll
mov
add
test
dec
adc
or
cmp
scas
sbb
sub
aam
fldenv
mov
xlat
insb
xchg
arpl
hlt
add
stc
push
inc
fsts
pop
cmpsb
push
ds
xlat
sbb
xchg
outsb
xor
xchg
addr16
insl
adc
xchg
addr16
dec
sub
gs
adc
andb
pushf
fcoml
sub
cli
add
fimull
adc
pop
insl
mov
pop
addr16
outsb
mov
xchg
adc
out
or
and
or
cwtl
sbb
mov
sub
pop
outsl
lret
ror
adc
movsb
loop
lock
push
scas
lret
nop
cmp
push
inc
outsb
loopne
js
int
ja
dec
scas
test
pop
mov
add
mov
pop
pop
jb
int
jo
xlat
in
jge
and
xchg
adc
das
or
rcll
mov
jns
mov
cmp
xchg
pop
mov
rcl
adc
icebp
xchg
mov
sub
mov
iret
cld
or
mov
mov
add
aad
cmp
or
aaa
jmp
and
nop
cmpsb
inc
dec
in
push
sbb
cmpsb
adc
loope
lahf
push
mov
ret
push
adc
popf
enter
sub
mov
pop
imulb
xor
push
xor
into
xchg
outsl
call
and
and
loopne
mov
imulb
jp
xlat
jo
pavgw
sarl
adc
in
in
fisttps
fisubrs
dec
iret
adc
inc
mov
hlt
fimull
add
sub
xchg
jne
push
nop
aas
call
dec
das
sbb
ficompl
hlt
cld
rol
push
and
fcomps
cmpb
dec
add
sbb
push
add
push
push
ss
add
push
es
out
aaa
sub
push
lret
loop
mov
xchg
pop
mov
xor
pusha
dec
js
mov
lods
call
jge
jmp
mov
sbb
pop
lods
or
addr16
mov
data16
stos
and
xor
xor
in
or
gs
popfw
ds
add
push
push
mov
rcrl
bound
push
adc
lcall
mov
or
rol
push
push
mov
fucomi
push
sub
or
mov
ds
mov
ret
das
jnp
stos
and
cmpsb
mov
cmc
imul
nop
mov
add
mov
xchg
clc
aad
mov
inc
push
mov
inc
xchg
push
xchg
js
dec
xchg
popa
int
lock
hlt
cmp
popf
cmp
cli
push
rcrb
pop
jbe
mov
fsubl
notb
ror
mov
inc
push
and
inc
pop
pop
prefetcht0
pop
cld
or
cmp
testb
mov
dec
into
fwait
lret
ret
push
cmp
lcall
cmp
xchg
push
xchg
xor
adc
xchg
push
or
sub
dec
push
pop
stos
test
sub
nop
xlat
push
sub
jp
das
insb
mov
dec
pop
mov
in
iret
dec
add
fs
insl
imul
push
mov
sbb
and
mov
sarb
lahf
jbe
ds
lods
jns
mov
fwait
sbb
cmpsl
mov
sti
mov
sbb
pushf
pop
mov
jne
test
cmp
or
movsl
lods
into
stos
sub
adc
sbb
push
push
mov
mov
pushf
jb
cs
mov
adc
sbb
ret
sub
mov
sub
fwait
int3
dec
mov
outsb
mov
sbb
loope
rolb
xchg
fs
inc
pop
in
test
and
movsl
loopne
push
negl
sti
mov
cs
jle
jmp
enter
xchg
jne
cld
lcall
pop
pop
cmp
in
adc
mov
clc
das
sbb
ficoml
xlat
test
add
stos
stos
mov
cmp
mov
mov
movsl
sbb
ss
lret
pop
daa
add
xchg
call
aad
cmpb
pop
fucomp
mov
subl
lahf
cwtl
in
xchg
outsl
sbb
sub
dec
loop
mov
gs
arpl
cmp
cli
xchg
sbb
inc
pop
or
pop
adc
mov
test
xchg
mov
movsb
sarl
sub
aas
std
jno
cwtl
fbstp
and
aad
mov
ds
lods
pushf
or
mov
mov
imul
icebp
test
sub
out
dec
cwtl
mov
shlb
sbb
jg
shll
aam
push
das
lods
fcomip
lods
fdivl
pop
or
and
add
andl
test
out
outsl
jnp
push
pop
sub
inc
jl
sbb
cmp
enter
out
mov
in
push
inc
push
jmp
imulb
stos
xor
aas
sbb
int
mov
lock
ljmp
stos
jmp
xor
dec
jecxz
fdivs
cli
push
jp
cltd
xor
int3
lds
les
test
jg
jg
sbb
and
add
inc
mov
cmpl
push
jnp
pop
dec
xlat
ret
stos
popf
mov
test
adc
fwait
stos
push
xlat
inc
sti
xchg
mov
aam
cmp
sub
ret
enter
mov
out
push
nop
dec
bound
jge
inc
mov
es
sub
mov
andl
data16
cmp
ja
in
pop
out
lret
inc
mov
pop
xor
pop
adc
mov
aad
popa
pop
pop
jecxz
mov
stos
test
dec
pop
pusha
xor
mov
fs
and
mov
nop
or
dec
and
mov
lock
mov
mov
out
shlb
sbb
mov
test
fstpt
mov
xor
xchg
fdivp
lock
cmp
pop
imul
mov
push
div
inc
test
cmp
out
aas
sub
dec
aad
xchg
mov
xor
adc
ljmp
stos
cmpsb
pop
inc
cmp
cltd
pop
jmp
cmpsl
mov
push
or
dec
mov
mov
das
es
movsb
mov
push
ds
les
jne
adc
mov
dec
mov
and
daa
push
mov
test
jno
ret
scas
adc
roll
loope
add
stos
fcoml
flds
pop
mov
add
pop
xor
mov
push
pop
mov
mov
ret
mov
cwtl
sub
je
mov
adc
push
daa
sub
pop
xor
pop
rcrl
vmptrld
jecxz
outsl
mov
sub
iret
movsb
mov
push
mov
movsb
xchg
sahf
jge
aas
adc
adc
xchg
imul
xchg
mov
jae
aam
mov
vmovaps
scas
inc
aad
jne
and
push
push
mov
adc
lret
fcmovu
push
dec
inc
mov
and
fwait
push
inc
and
adc
jb
sahf
cs
cld
aaa
popf
and
call
mov
mov
roll
lods
cmovl
adc
inc
mov
xlat
test
jns
jae
xlat
sub
jb
in
imul
or
pusha
push
sub
push
sbb
stos
mov
pop
push
xchg
ljmp
mov
inc
push
xor
pop
sub
in
stc
hlt
mov
ret
adc
cmp
enter
inc
scas
xor
cs
cmpl
xchg
mov
ret
repz
lret
stc
lods
mov
addr16
dec
adc
pop
push
push
or
fnstsw
jge
sub
in
push
loope
popf
push
pop
test
pushaw
adc
sbb
mov
mov
dec
shl
xchg
shll
sbb
or
mov
xor
insl
jmp
push
sub
stc
dec
push
dec
xchg
mov
aam
out
lret
jnp
movsb
xchg
push
negl
mov
and
ret
or
add
rsm
and
daa
lods
push
daa
cli
aaa
jo
push
pop
movsb
xchg
addr16
dec
test
add
sarb
lea
mov
and
movsb
insb
dec
mov
lock
xor
fwait
mov
fcomps
stos
sub
dec
call
jne
int3
fsubr
cltd
cmp
daa
fisubrl
dec
scas
repnz
minps
stos
and
jg
mov
pop
enter
mov
lret
mov
adcl
mov
xchg
fwait
aas
daa
rorl
inc
push
sbb
int
xlat
xchg
xor
repnz
std
sub
mov
mov
shrb
adc
rcl
mov
jnp
in
push
aam
fisttpl
xor
pop
adc
adc
pushf
movsb
cmpsl
stos
mov
sub
cmpsb
repnz
in
adc
repnz
lret
roll
cmpsb
dec
ret
dec
xor
lods
push
inc
fistpl
repz
leave
leave
mov
sub
push
jmp
test
add
mov
frstor
rcrl
adc
or
sbb
out
inc
xor
push
jnp
notb
cmp
mov
inc
lods
cmp
lahf
sbb
loopne
xor
pop
or
idivl
sub
jmp
hlt
cmp
dec
lret
sub
iret
mov
jne
mov
aam
cmp
add
cmp
inc
xchg
scas
push
sub
sar
mov
es
jns
test
mov
cli
repnz
cli
lods
shlb
cmpsl
jmp
cmp
cmpsl
adc
adc
cld
sbb
inc
jo
xchg
jne
dec
mov
lret
aam
jmp
das
out
mov
and
pop
mov
sbb
dec
inc
fldenv
mov
jmp
xchg
repnz
pop
in
icebp
icebp
sub
cmp
and
add
inc
mov
rcrl
xchg
inc
xlat
mov
aas
mov
aad
in
mov
out
and
pop
and
sbb
push
push
and
mov
jb
add
cmp
andl
cmp
in
ljmp
mov
adcb
add
or
dec
outsl
xlat
and
pop
sbb
adc
fmull
gs
adc
pop
xchg
mov
cmp
sbb
inc
xor
and
push
push
and
out
mov
data16
or
mov
adc
daa
xor
xor
ret
xchg
xchg
mov
mov
flds
mov
mov
pop
and
cmp
cli
mov
dec
lock
xchg
pop
adc
mov
mov
and
aad
mov
lret
in
add
aad
insl
mov
les
outsb
out
inc
cmp
es
adc
out
inc
int3
int
push
sub
dec
pushf
jae
ret
insl
outsb
mov
cmp
sbb
jo
sarb
ss
push
rclb
ffree
cli
inc
nop
mov
cmpsl
and
mov
in
mov
rcrb
sub
jge
stc
inc
pop
xor
adc
inc
dec
or
push
push
fildl
scas
ret
sti
cmp
jecxz
xchg
out
fstpt
es
mov
fisttpl
ret
mov
ljmp
repz
hlt
out
ror
fsubrl
sarl
ds
nop
fnstenv
idiv
cmp
or
pusha
jb
adc
subb
cmc
dec
aad
mov
test
sbb
xor
seta
imul
outsl
aas
mov
call
hlt
xchg
rorb
pop
jg
lods
pop
sbb
shr
dec
scas
imul
hlt
and
fwait
xlat
inc
pop
iret
fdivr
jb
dec
scas
aas
mov
add
add
hlt
sti
rcr
roll
cltd
sub
dec
out
inc
hlt
adc
aas
mov
sub
mov
lcall
mov
and
lret
imul
imul
cwtl
cmp
xor
repnz
lret
stos
xlat
out
pop
fdivrs
mov
cmc
add
repz
jmp
out
dec
incl
in
cmpsl
sub
push
lds
pop
inc
jp
mov
xor
in
mov
mov
stos
mov
stos
aaa
stos
push
sbb
fdivl
or
mov
sbb
sbb
out
arpl
dec
imul
mov
rcrb
mov
mov
imul
mov
out
mov
movsl
cmp
clc
dec
cmpsl
and
inc
xchg
mov
cwtl
sahf
out
pop
lret
cmp
stos
sarb
bound
pushf
push
mov
push
call
shrb
movsb
cwtl
test
aaa
cmpsb
xchg
push
push
adc
pop
dec
sbb
pop
addl
mov
jbe
pop
push
mov
inc
addr16
xchg
rcrw
jmp
sbb
push
or
rolb
std
into
rorl
xor
sub
mov
xchg
push
out
ret
incl
mov
cmpsl
test
stc
add
add
and
inc
outsl
nop
pop
cltd
test
mov
add
nop
inc
hlt
pop
mov
test
mov
daa
jp
mov
adc
sbb
jns
and
xchg
call
ljmp
ljmp
fldcw
mov
lods
lds
ljmp
mov
mov
ret
in
test
dec
cmp
jae
and
lret
mov
test
xchg
push
fidivs
fwait
xchg
test
test
fstps
mov
in
push
sbb
xor
sub
mov
insl
dec
fwait
sub
fwait
dec
fdivl
ret
ficoml
jmp
out
call
jecxz
inc
jb
mov
push
js
adc
sub
mov
outsb
ret
xchg
mov
imul
inc
and
inc
sbb
mov
push
dec
dec
fcmovnu
test
ret
push
dec
push
lds
sub
jp
xchg
xchg
leave
test
cltd
fsub
mov
sbb
int3
dec
pop
jne
jae
mov
lcall
das
insl
adc
push
jp
jmp
out
adc
xchg
push
jnp
fisubs
jno
insb
lock
and
xchg
add
ret
dec
scas
gs
sub
pushf
enter
cmp
inc
adc
fcoml
gs
jnp
jne
fs
mov
loopne
or
mov
inc
mov
push
cmp
or
jnp
jmp
and
jb
adcl
mov
push
lods
or
xchg
scas
add
push
test
sub
pop
mov
push
add
mov
sub
mov
push
mov
fucom
stc
fisttpll
xchg
sahf
dec
or
dec
cmp
pop
mov
xor
mov
imul
sub
fldcw
xchg
mov
mov
cmp
mov
leave
push
add
xor
push
movsl
cltd
stos
cmp
mov
mov
pop
std
dec
and
repnz
push
mov
stos
aam
cmp
lods
repnz
call
xor
adc
push
push
sub
fcmovnbe
rcrl
pmulhuw
dec
cmp
jne
pop
fstps
dec
mov
mov
inc
mov
push
repnz
lcall
inc
mov
xchg
shll
jne
test
into
xor
pusha
push
xor
scas
pop
out
lahf
mov
push
mov
stos
in
mov
pop
sub
pop
xor
adc
lock
jne
shlb
add
xor
lods
hlt
les
in
mov
push
push
push
lahf
fsts
xchg
stc
scas
fbstp
pop
fistpll
push
pop
int
and
inc
inc
mov
pop
rcrb
sbb
sub
mov
ficoms
sub
push
inc
inc
ficoms
addr16
push
in
scas
sub
mov
movsl
pop
mov
sbb
pop
aam
fwait
mov
mov
sbb
mov
ret
js
xchg
into
mov
push
mov
sti
int3
mov
stc
cmp
ja
dec
adc
ljmp
les
sarb
shll
imul
pop
push
sub
pop
sub
or
mov
mov
xor
mov
in
stos
pop
add
mov
push
lods
xchg
icebp
cli
sub
pop
repnz
outsb
in
xchg
fs
int
data16
dec
sbb
cli
mov
mov
xchg
xorl
mov
inc
data16
xchg
test
stos
je
pop
into
movb
lds
daa
cltd
jno
xor
inc
dec
cwtl
call
push
sub
adc
rol
sub
fmul
pop
xchg
xchg
push
std
aas
xchg
test
rcrb
mov
push
or
mov
xchg
hlt
inc
lds
inc
sub
addl
icebp
jbe
pop
ljmp
loopne
iret
xchg
popf
or
lea
pop
loopne
sbb
ss
ret
push
arpl
cmp
pop
ret
xchg
inc
mov
stos
in
pop
and
fstpl
inc
pusha
cmp
cmp
lods
clc
pusha
and
popf
out
repnz
sub
out
mov
pop
adc
xchg
ljmp
loopne
push
xchg
repz
addr16
fiaddl
push
mov
adc
sub
push
popa
mov
addb
outsl
test
jb
mov
fcompl
mov
insl
imulb
adc
or
or
dec
push
nop
out
pop
jmp
mov
outsb
xchg
cwtl
popf
sub
or
dec
jge
sbb
push
or
mov
sub
push
stos
jmp
mov
outsl
cmp
imul
ss
lret
mov
or
sbb
dec
jb
inc
loop
adc
jno
repnz
or
push
mov
lock
movsb
call
xchg
leave
and
jns
pop
movsb
adc
cmp
push
rcll
popa
mov
mov
mov
mov
data16
sarl
add
lods
fs
and
ret
jle
mov
shrl
dec
jg
inc
dec
mov
sub
call
imul
cs
dec
adc
call
loope
cmpsb
ffreep
dec
mov
fldcw
push
or
mov
inc
jae
add
shlb
cmp
mov
pop
mov
sub
cmp
inc
leave
pause
cmp
mov
popa
add
dec
ljmp
jae
add
inc
or
outsl
jl
ljmp
push
and
insb
shl
gs
mov
idivl
in
xor
fisubrs
test
jbe
sbb
mov
call
and
lret
lods
arpl
inc
sbb
call
cmp
fs
stos
enter
push
adc
movsl
dec
adc
mov
in
adc
and
mov
and
test
and
jae
ret
hlt
cmpsb
test
xor
jbe
adc
aas
mov
rcll
test
movsl
scas
adc
adc
jg
sub
pop
sub
stos
test
and
loope
mov
shl
xchg
fcomip
mov
sub
in
and
adc
int
sub
loop
or
mov
cld
cmp
lods
pop
inc
fwait
movsl
dec
fcompl
cwtl
and
ljmp
imul
jbe
bound
mov
sti
and
stc
scas
add
dec
faddp
aad
xor
lret
dec
add
ud0
fs
fucomip
mov
push
mov
orl
dec
mov
push
add
icebp
mov
and
call
movsl
adc
rcl
fdivl
outsb
xor
inc
or
push
popl
inc
or
les
dec
xchg
inc
clc
dec
sub
xchg
or
dec
ret
cmpsb
or
lds
and
add
pop
xchg
adc
ret
lds
js,pt
dec
roll
cmp
outsb
out
int3
fisubl
in
rorl
xlat
jnp
or
push
add
cmc
shll
mov
mov
sahf
inc
dec
aad
aam
imul
or
push
pusha
bound
ss
sbb
jo
mov
test
jbe,pn
adc
out
packsswb
and
cli
or
test
out
sbb
xchg
hlt
and
pop
mov
dec
pop
popf
xor
aam
lahf
inc
dec
leave
and
aas
movsb
dec
dec
pop
fs
mov
push
push
lcall
or
lock
add
xchg
xchg
cmp
jge
add
bound
xchg
call
and
cmpsl
lcall
add
inc
ljmp
push
mov
pop
lahf
daa
push
sbb
adc
and
aas
sub
and
daa
cmp
popa
repnz
mov
push
fisttpll
mov
inc
daa
test
xor
push
ds
dec
pop
pop
pushw
jae
ret
and
dec
arpl
add
adc
stos
scas
cmp
or
vpmacssww
push
out
and
xor
mov
addl
push
add
mov
mov
mov
cmpsl
in
out
sbb
push
mov
repz
mov
aaa
pop
jle
insl
push
mov
push
mov
fsubrl
in
dec
in
aad
inc
adc
or
repz
or
mov
cmpl
repz
pop
sbb
arpl
dec
repnz
ds
stos
icebp
pop
mov
aam
push
mov
dec
dec
pop
cltd
rolb
and
mov
and
push
adc
sbb
or
xchg
cs
jno
add
je
jle
cmpsb
fcmovnb
mov
pop
adc
scas
icebp
test
jo
adc
bound
or
sbb
push
shrb
or
pusha
adc
mov
inc
lods
cmp
jnp
xlat
outsl
and
aaa
sub
cs
je
cmpb
pop
mov
sbb
adc
and
out
sub
inc
test
or
sbb
out
repnz
mov
roll
mov
adc
xchg
dec
xor
dec
inc
outsl
xchg
inc
xorb
and
mov
movb
mov
jo
xor
xchg
ds
push
sti
push
jp
mov
movsb
in
call
xor
call
test
add
sbb
adc
and
aad
sbbl
test
popf
jbe
cmp
adc
push
add
push
cmp
lahf
cmc
stos
sub
mov
daa
sbb
sahf
xor
jmp
lea
add
xchg
xchg
cs
sub
gs
test
mov
out
mov
mov
sub
lret
pop
push
es
out
sbb
mov
cmp
push
jecxz
lcall
push
adc
xorl
lret
adc
cltd
inc
movb
mov
xor
in
sbb
or
pop
in
sub
inc
mov
xchg
cmpsl
pop
sbb
lret
dec
test
and
mov
mov
inc
sub
mov
adc
sbb
add
js
or
outsb
loope
jge
mov
mov
scas
dec
sbb
push
aam
int3
xchg
sarl
sbb
pop
stos
inc
add
jne
add
mov
push
sbb
test
mov
xor
ror
inc
rcrb
sbb
inc
sbb
push
mov
xchg
icebp
mov
jnp
inc
out
push
add
sub
sbb
std
pop
imul
xor
sbb
and
adc
adc
dec
inc
pop
sub
mov
fs
cwtl
sbb
popa
push
inc
fs
stos
adcb
cwtl
outsb
add
insl
mov
rclb
mov
mov
mov
push
decl
mov
sub
pop
pop
cmpsl
out
pusha
mov
dec
adc
and
movsb
aad
roll
decl
push
adc
mov
rcll
leave
test
rcl
daa
testl
stos
push
dec
mov
call
sbb
push
inc
mov
cmpsb
jecxz
mov
lahf
jmp
call
jbe
fwait
shll
mov
call
adc
les
pop
mov
aad
mov
out
ficomps
xchg
pop
mov
std
xor
or
aaa
sub
add
cmp
popf
mov
leave
push
ljmp
sub
mov
gs
pop
xchg
and
movsl
and
aaa
mov
pop
dec
xchg
cmp
rorl
push
jno
xlat
add
enter
xchg
mov
and
cmp
or
xorb
lds
xchg
lcall
mov
sub
ficoml
xor
sub
in
and
mov
dec
inc
dec
pop
push
and
jne
inc
stc
fdivp
ret
pop
pop
cmpsl
sahf
out
sbb
xchg
popl
xlat
cltd
mov
push
sbb
sbbb
out
pop
sbb
inc
push
mov
mov
inc
mov
pushf
add
loopne
jle
adc
mov
addb
mov
int3
or
sub
sbb
mov
fcmovne
sub
sub
les
mov
int3
fisubrs
lcall
pushf
xorb
adc
sbb
pop
cwtl
xchg
inc
xor
std
push
sub
popf
lods
xor
call
cmp
mov
push
ljmp
pop
insb
xchg
jno
rcrb
and
clc
add
mov
into
pop
or
and
in
and
lods
jmp
stos
rcrb
xor
jge
dec
and
daa
adc
xchg
and
mov
in
faddl
rcrl
pop
mov
mov
outsb
xchg
aad
adc
jno
subb
push
push
call
mov
jg
movsl
mov
mov
icebp
xchg
inc
pusha
xor
and
sub
test
cmc
popf
rol
out
ret
xor
push
or
inc
mov
push
repz
push
add
xchg
sbb
out
push
jno
adc
mov
inc
mov
inc
sarb
cltd
rorb
and
dec
daa
mov
in
test
shrb
mov
scas
or
je
jecxz
jae
lds
popf
mov
sbb
nop
mov
jp
mov
push
aad
add
pop
jl
inc
xor
fstpl
mov
call
ljmp
repnz
push
gs
outsl
loopne
imul
ret
mov
jle
out
mov
jmp
test
stc
outsb
xlat
and
rcll
xor
or
jae
mov
aas
pop
adc
ret
test
inc
rcll
test
sbbl
xor
movsl
psubsb
into
adc
pop
mov
shlb
arpl
xlat
mov
adc
push
insl
add
lods
outsl
dec
ret
cmp
imull
sbb
rcrb
jbe
pusha
movsb
push
pushf
inc
icebp
lcall
xchg
cltd
ret
mov
push
adc
jns
lahf
iret
push
std
inc
sahf
sarb
movsl
stc
adc
aam
out
add
loope
jl
call
cmp
jmp
cmp
xchg
pop
clc
bound
sbb
shlb
pop
mov
cld
or
lret
jb
loope
aam
inc
cmp
inc
jnp
add
add
push
clc
pusha
and
lods
nop
fwait
jge
push
lret
scas
sbbl
fdivs
outsl
or
push
or
add
mov
jbe
cmc
pop
divl
scas
aad
stos
sub
stos
cmp
loope
mov
push
jo
mov
push
inc
sbb
fs
fldcw
mov
call
mov
sbb
cmp
jne
xchg
fwait
jns
jp
test
and
shll
ds
nop
mov
test
lea
dec
movsl
notb
and
mov
imul
sub
cwtl
push
test
pop
sub
cmc
add
push
clc
int3
or
adc
je
jge
lods
push
mov
cwtl
aas
mov
xchg
ud0
lret
mov
add
add
dec
xchg
adc
jno
pop
gs
insb
outsb
std
dec
scas
fsubr
cli
rcl
inc
stos
out
adc
xor
dec
shll
add
iret
and
inc
fildll
mov
rcl
adc
sub
and
lock
mov
bound
xchg
inc
inc
cltd
loope
test
arpl
ffree
push
pop
mov
mov
scas
sub
inc
and
dec
xchg
mov
adc
shll
add
sbb
out
fstps
mov
and
push
lods
lods
or
or
mov
sub
dec
in
or
shrl
mov
hlt
aad
cmpsb
call
xor
sub
inc
xchg
fs
mov
cli
mov
je
xchg
mov
dec
mov
jnp
push
pop
insl
cmp
xchg
add
mov
xor
add
in
clc
adc
orb
lcall
rclb
pusha
push
add
xchg
inc
ret
xchg
loopne
mov
les
jle
inc
mov
pop
push
stc
in
out
push
xchg
and
mov
cmpxchg
das
nop
mov
stos
sub
and
test
jp
lahf
xor
mov
cmpsl
jge
adcl
scas
jb
in
cltd
jns
mov
aad
sub
inc
push
inc
mov
sub
dec
dec
iret
mov
lret
fsts
push
xchg
jns
popf
addr16
dec
lock
xchg
scas
stos
fs
movsl
or
shrb
inc
test
inc
fwait
xor
aam
into
pusha
out
sahf
addl
push
push
data16
rcr
outsl
mov
fcomi
outsb
jge
arpl
jb
cmc
test
mov
ljmp
bound
mov
add
mov
push
sub
hlt
cmpsb
mov
lretw
arpl
jmp
sub
sbb
das
icebp
inc
xorb
fbld
push
mov
testb
jl
xor
and
movsb
dec
hlt
inc
stc
sub
ss
out
mov
bound
cltd
jg
aam
inc
mov
sbb
cmovne
lahf
mov
sbb
jne
cmp
pop
mov
cmp
aam
push
ret
fildll
or
xchg
mov
es
inc
push
les
xchg
sub
mov
xchg
rcrl
jno
imul
hlt
jno
or
push
jne
fs
add
mov
push
roll
mov
push
push
inc
mov
lret
pop
and
sub
inc
imul
fnstcw
jo
cmpsb
in
lea
ss
movsl
mov
mov
xor
mov
int
andl
loop
adc
leave
cmp
jbe
push
sbb
inc
mov
adc
mov
sub
into
xor
and
push
push
out
mov
pop
mov
lcall
and
ss
mov
jns
lea
and
mov
fidivl
cmp
out
ss
sub
jns
jl
loopne
daa
cmp
mov
bound
jmp
pop
mov
repz
lret
movsl
xor
adc
push
mov
movsb
and
daa
dec
insb
ret
jbe
xor
das
in
outsl
cmovne
dec
je
push
push
sbb
test
popa
sahf
push
adc
ss
scas
imul
movsl
mov
dec
xor
jmp
out
in
int
xchg
sbb
cmpsb
mov
sub
repnz
push
fwait
cs
loope
jb
pop
sub
inc
mov
jb
je
stc
mov
pushf
jmp
outsb
gs
push
mov
add
dec
dec
aad
enter
dec
in
xchg
sub
dec
enter
ss
in
sbb
pop
cmpsb
and
and
int3
adc
sub
into
jge
fnstenv
ss
dec
out
mov
jmp
cmp
mov
pushf
xor
popf
out
into
jo
ficoms
mov
cltd
inc
inc
rcrb
or
movsb
mov
icebp
pop
sub
rclb
xchg
stos
cmp
pop
adc
lret
mov
js
iret
inc
xchg
outsl
rclb
movsl
shlb
imul
xchg
push
add
fisttpl
ss
fadds
xorb
mov
imul
mov
loop
loope
and
jno
jns
arpl
pop
mov
cmp
push
xor
mov
sahf
pop
aaa
xchg
out
insb
mov
xchg
loop
xlat
xchg
pop
push
sub
shlb
jbe
jbe
fistl
int3
imul
repnz
sub
mov
or
in
push
cmp
or
and
or
sub
inc
inc
inc
sbb
lock
outsl
mov
sti
sbb
xor
negb
mov
nop
mov
pop
gs
stos
mov
fwait
sbb
mov
cmpb
stos
fidivrl
push
push
hlt
cmp
inc
and
xchg
out
nop
mov
push
sub
or
aas
pop
xor
lods
sub
mov
and
mov
sub
xor
and
test
mov
das
push
push
sub
movsb
scas
sbb
leave
push
xor
dec
cwtl
sbb
jecxz
lea
and
mov
loopne
cld
out
pop
add
mov
insl
pop
inc
adc
sub
mov
push
pop
lea
out
insb
out
push
aad
bound
inc
mov
lahf
pop
or
in
jno
dec
cltd
fiadds
add
xchg
and
rcll
int3
int3
jo
sbb
jle
fdivs
dec
add
pop
movsl
pop
stc
xchg
sti
mov
xchg
xor
mov
pushf
dec
sbb
cltd
aas
jg
jmp
mov
mov
jge
and
testl
adc
sbb
jle
rorl
in
mov
mov
popa
inc
or
pushf
xlat
mov
lea
ret
into
cs
xchg
pop
sub
xor
and
cmp
mov
jae
mov
int
or
add
arpl
add
sub
fdivrs
ss
xchg
pop
xor
outsb
lcall
jae
mov
scas
fmull
pavgb
dec
mov
pop
pop
inc
xchg
mov
jmp
popa
mov
bound
mov
stos
mov
fcom
fdivrp
test
mov
pushf
sub
push
cmp
movsb
into
pop
cmpsl
mov
pop
cmp
mov
leave
inc
and
xchg
sbb
fs
mov
pop
repz
sti
leave
add
mov
movsl
fisubl
repnz
fwait
repnz
adc
dec
jns
xchg
mov
mov
cs
scas
and
je
dec
xor
jbe
mov
lods
xlat
test
inc
jmp
les
inc
jp
adc
enter
xor
dec
dec
shl
xor
mov
cmp
xchg
or
cmp
inc
data16
out
lds
mov
ret
int
mov
sbb
bound
lea
xlat
adc
push
sub
fucomp
mov
jbe
mov
mov
test
jl
sarb
sti
sub
mov
jns
add
xchg
push
inc
jmp
addr16
sbb
insb
fcomps
mov
sbb
sub
nop
scas
xor
adc
outsb
jno
negb
sub
test
mov
mov
sbb
fs
xor
and
js
mov
mov
cmc
gs
int3
push
mov
fcomi
cs
mov
arpl
repnz
into
dec
stos
je
mov
adc
leave
arpl
push
ja
cmpl
sahf
in
scas
dec
dec
out
mov
mov
rcll
filds
add
mov
std
jp
dec
lret
sbb
mov
ja
pop
mov
xchg
mov
loopne
mov
push
fs
jne
fisttpll
xor
inc
punpcklbw
jp
leave
cmp
sahf
sub
inc
push
sub
adc
sub
xor
mov
cmp
push
push
movsl
pop
mov
xchg
push
xor
sbb
mov
cld
call
push
pusha
inc
lret
hlt
adc
xor
cwtl
iret
jp
jae
adc
lea
xchg
cmc
sub
loopne
mov
mov
loope
xchg
pop
sub
iret
andb
repz
mov
aaa
pop
stc
and
in
mov
out
or
mov
xchg
ret
orl
mov
arpl
popa
and
jno
fcoms
pop
call
in
stos
sahf
push
mov
test
mov
mov
cmp
add
push
insb
in
sub
add
cmp
imul
push
mov
xchg
in
mov
push
popf
sbbb
push
mov
sub
mov
mov
mov
sub
or
insl
insb
stos
cld
add
push
lds
add
add
jp
in
cmp
sahf
out
cmp
add
or
add
xor
xor
mov
repz
test
jmp
in
repnz
push
xor
xchg
fwait
cmp
sub
stc
gs
inc
inc
mov
mov
push
sbb
inc
sti
or
adcl
pop
cwtl
pushf
mov
in
scas
cmpsl
outsl
push
rorl
test
inc
test
jne
push
dec
or
sub
in
hlt
mov
fisubs
mov
inc
jge
pop
andl
cld
xlat
sub
add
lods
js
mov
add
dec
push
pop
and
ljmp
or
mov
jnp
rcl
xor
lcall
and
push
dec
xchg
mov
mov
push
mov
popa
inc
lret
inc
cmpsl
push
or
mov
mov
adcl
loopne
sti
push
xchg
aad
inc
test
mov
mov
or
mov
lret
mov
push
insl
adc
push
xor
out
pop
or
mov
push
mov
fiaddl
and
mov
in
mov
dec
icebp
sub
add
pop
push
aam
adc
movsb
outsl
pushf
jae
push
lds
mov
rep
popa
push
xor
or
enter
ds
test
dec
add
jns
jge
repz
cmp
inc
push
cmp
leave
xchg
insb
xor
dec
mov
daa
push
add
sbb
xor
repnz
rcr
imul
rcrl
call
ljmp
imul
push
mov
loop
sub
shlb
add
sub
ss
mov
sbb
jae
adc
ljmp
rolb
sbb
sarb
adc
cmpb
sub
in
xchg
xor
adc
in
add
pop
cmpsl
or
aaa
mov
pop
mov
add
mov
xor
mov
sbb
pop
repnz
pop
adc
or
orl
icebp
pop
sub
push
imul
adc
fisttps
shlb
movsb
mov
in
je
ror
push
cmpsl
push
test
aaa
ret
in
fnsave
in
mov
adc
adc
gs
and
adc
jb
dec
lret
xor
fs
sub
test
sub
rcl
and
cmp
mov
lock
std
xorb
push
mov
pop
daa
adc
inc
bswap
movsb
jbe
xor
sbb
int
pusha
push
loop
and
add
xchg
imul
mov
xchg
pusha
jg
and
jp
dec
or
movsl
mov
cmp
cmp
pop
sbb
insb
sbb
mov
inc
mov
out
sbb
in
mov
adc
sbb
xchg
scas
aad
jae
dec
push
jp
mov
add
cld
fwait
sub
stos
in
sub
data16
int
pop
mov
cmp
sub
fcomp
xchg
fcomi
repz
pop
adc
sbb
push
pop
xchg
dec
jb
fcomps
stc
loopne
cmc
std
mov
outsl
mov
icebp
mov
and
push
sub
or
push
push
pop
stos
movsl
popf
pop
scas
mov
pop
and
mov
and
sbb
sub
mov
and
in
fisttpll
sbb
adc
mov
sub
or
mov
or
sub
loopne
cmc
pop
mov
cmc
and
inc
mov
adc
int3
rcrb
sbb
push
mov
push
mov
jmp
cmp
subl
mov
jo
ja
sub
adc
out
jnp
stos
jno
test
popa
pop
push
in
pushf
mov
sbb
push
out
inc
repz
pop
aaa
scas
inc
jmp
mov
mov
add
movsl
movsl
add
dec
sub
pop
add
imul
push
ret
outsb
or
inc
push
mov
divb
inc
sub
mov
cwtl
mov
sbb
inc
push
xchg
push
and
shlb
and
push
and
jbe
jl
pop
and
fistps
arpl
inc
inc
lds
mov
sbb
sbb
inc
push
dec
mov
sahf
and
fmull
push
out
sub
sub
loopne
es
jecxz
pop
jle
sahf
add
mov
xchg
jecxz
push
rcrl
es
inc
fsubrl
sbb
and
stos
jge
or
or
jg
testl
in
icebp
jno
ret
jge
cli
sbb
into
jle
adc
adc
and
xchg
repnz
push
inc
lret
or
inc
sbb
iret
call
dec
lahf
lret
jne
xchg
cmp
fcmovu
movsl
mov
sub
arpl
aas
pop
add
shrb
shl
dec
or
xlat
dec
add
rcrl
imul
frstor
jecxz
mov
in
add
jecxz
jmp
add
inc
in
cli
cmp
sti
into
mov
add
int
inc
adc
inc
adc
das
inc
movsl
stc
je
mov
inc
in
clc
mov
faddl
push
fwait
mov
xorl
sub
sub
out
pop
inc
int3
popf
pop
xchg
or
inc
or
test
jmp
out
push
adc
clc
mov
pop
mov
mov
mov
hlt
dec
sbb
push
rorl
popf
and
push
leave
sub
jg
inc
jmp
cmp
push
pop
pusha
addr16
out
mov
leave
jg,pn
fwait
ljmp
push
sub
out
jg
mov
and
inc
jge
xchg
xchg
mov
cmp
std
filds
sub
sub
jp
mov
or
in
adc
rcrb
in
hlt
in
femms
mov
aaa
insl
test
push
aaa
mov
clc
sub
shlb
and
sbb
loope
inc
lahf
cmp
add
pop
mov
mov
les
inc
sbb
aaa
loop
rorb
cmpsb
and
rolb
cmp
adc
jno
jo
jecxz
add
xor
xchg
cs
mov
sbb
jno
and
inc
xchg
sub
add
cmp
xchg
xchg
inc
sbb
dec
sbb
xchg
push
sbb
xchg
pop
sbb
mov
mov
lea
dec
les
push
dec
aam
cmp
lea
dec
cld
lea
out
inc
mov
or
mov
adc
adcl
sub
loope
xor
mov
cmp
adcl
stos
jecxz
rorb
lea
dec
xor
jo
cmp
cmp
lea
dec
inc
lea
dec
dec
call
dec
pop
xor
bound
xorl
loop
rorl
sub
inc
loop
add
decl
sub
lea
arpl
notb
fs
adc
out
mov
adc
sub
and
inc
sbb
xchg
dec
sbb
xchg
push
sbb
xchg
pusha
sbb
xchg
push
sbb
xchg
js
adcl
cmpsb
repz
loopne
enter
int3
lea
dec
aam
and
popa
aaa
mov
sub
xchg
aaa
mov
sub
aaa
ret
xor
icebp
les
or
xchg
xor
push
test
les
movsb
adc
adc
dec
cmp
or
rorb
mov
inc
rorl
mov
rorl
mov
aam
mov
aam
scas
test
mov
sbb
stos
inc
aad
dec
pop
xlat
test
jne
cmpsb
add
or
or
add
or
scas
adc
scas
adc
mov
jbe
mov
jb
mov
outsl
mov
adc
lret
and
into
inc
je
rolb
and
aam
dec
and
fadds
and
faddl
and
and
cld
jno
notb
jb
out
adc
and
adc
orb
inc
sub
popa
pop
add
jno
loop
xorl
add
mov
aaa
and
shll
sub
aaa
bound
movsb
xor
sub
fisttps
mov
and
adc
ljmp
and
adc
adc
into
adc
lret
and
adc
mov
adc
scas
adc
movsb
adc
adc
cwtl
adc
xchg
adc
mov
push
and
adc
jmp
test
fsubs
lods
inc
les
mov
mov
and
mov
js
mov
inc
pop
and
mov
inc
cmp
les
and
enter
lret
and
mov
notb
imul
out
mov
lods
cmpb
out
inc
fsubs
rclb
aaa
ret
aaa
inc
sub
aaa
ret
aaa
bound
and
add
xor
subb
aaa
and
push
aaa
ret
aaa
bound
jno
add
xorl
inc
sub
push
xchg
loopne
inc
pop
mov
outsl
xchg
inc
loop
loopne
decb
aam
inc
and
adc
rclb
and
mov
out
js
pop
jmp
push
push
or
or
mov
adc
movsl
mov
in
and
mov
out
adc
loop
dec
and
adc
rclb
push
and
adc
les
push
and
adc
dec
push
lea
dec
pop
lea
dec
pusha
lea
lea
dec
jo
adc
inc
in
and
rolb
ret
and
movb
enter
fwait
es
mov
inc
cltd
push
push
and
push
scas
add
mov
xchg
push
sbb
pop
sbb
xchg
pusha
sbb
xchg
jo
push
xchg
js
and
loopne
enter
int3
lea
dec
aam
js
fmuls
inc
dec
loopne
sub
lea
dec
call
loopne
lock
enter
mov
clc
lea
testb
or
icebp
xchg
adc
rcll
push
xchg
sub
adc
mov
dec
and
cwtl
dec
sub
push
dec
xor
xor
lea
dec
cmp
add
enter
mov
dec
xor
and
dec
dec
mov
cmpb
or
ret
pop
rorb
test
pop
lea
dec
pusha
lea
lea
push
lea
dec
jo
clc
dec
je
fmuls
lea
dec
orb
dec
mov
and
lea
dec
xchg
jmp
into
inc
fsubl
rolb
and
inc
xchg
and
fiaddl
and
fiadds
and
loop
sub
out
or
call
inc
adc
loop
ja
notb
js
repnz
ljmp
and
adc
fcoms
jg
sarb
adc
lret
and
sbb
mov
and
jno
sub
inc
xchg
xor
adc
inc
sbb
xchg
inc
or
bound
dec
xor
mov
imul
add
pop
and
pop
inc
push
pop
bound
pop
subb
mov
push
push
jmp
lods
adc
lods
adc
lods
adc
lods
adc
scas
adc
mov
clc
adc
repnz
in
adc
in
bound
ficoms
arpl
fcoms
fs
adc
int3
adc
les
and
and
adc
test
imul
adc
adc
nop
adc
mov
mov
ret
inc
call
and
in
add
mov
sbb
xchg
mov
rcll
sbb
enter
rcrb
icebp
xchg
fcomps
rcll
push
xchg
lock
aas
jl
and
or
adc
mov
adc
adc
mov
adc
movsb
adc
movsl
adc
adc
cmpsb
adc
cmpsb
adc
cmpsl
adc
and
mov
inc
cld
and
and
adc
notb
push
and
adc
call
adc
fcoml
pop
and
adc
rclb
pop
and
adc
adc
rorb
ds
orb
dec
mov
nop
dec
nop
lea
xchg
lea
cwtl
lea
pushf
lea
das
xorl
es
sbb
pop
sbb
xchg
pusha
sbb
xchg
mov
insl
test
insl
test
outsb
add
and
pop
inc
outsb
les
outsb
add
adc
call
add
inc
push
loop
test
outsl
les
outsl
add
inc
outsl
add
bound
push
daa
repnz
call
mov
test
mov
jg
insb
mov
adc
mov
adc
mov
adc
mov
adc
movsb
adc
movsl
adc
movsl
adc
cmpsb
aaa
jle
cmpsb
mov
rorl
mov
test
mov
add
mov
test
mov
add
or
test
or
pop
and
adc
xchg
adc
mov
pusha
and
adc
jmp
enter
lret
and
into
inc
enter
mov
xchg
push
sbb
pop
sbb
pusha
sbb
mov
xor
movsb
mov
mov
adc
test
icebp
and
adc
xchg
adc
adc
mov
jbe
adcb
outsb
cld
adc
mov
js
mov
adc
mov
adc
mov
adc
mov
add
bound
push
mov
enter
movl
test
mov
dec
and
adc
dec
inc
call
and
lcall
and
mov
inc
test
cmpsb
inc
push
and
cs
xchg
mov
sbb
enter
shrb
xchg
fmul
or
shll
inc
cs
xor
mov
cld
add
adc
mov
fs
xchg
mov
loope
lds
push
cmp
mov
push
rolb
xchg
adc
sbb
ret
mov
bound
rorb
in
add
in
xor
lea
das
jbe
movb
xorb
and
sub
aaa
andb
hlt
lea
and
mov
mov
or
pop
pushf
adc
jo
js
jp
mov
jne
xor
xor
fisttpll
test
or
scas
inc
pop
jge
in
jbe
and
dec
int
ljmp
jp
inc
xor
stos
cltd
pop
repz
push
sbb
xchg
repnz
shlb
push
inc
add
cmp
in
sub
cwtl
in
hlt
inc
aas
adc
fs
sbb
mov
mov
shll
mov
lea
and
ljmp
aaa
int
repz
inc
aam
hlt
add
pushf
sbb
add
sub
fwait
or
test
fstpt
out
aaa
xor
push
int3
enter
ja
jnp
mov
ret
gs
push
push
adc
fwait
inc
jg
push
mov
enter
sarl
dec
sbb
inc
dec
stos
jne
pop
movl
movsb
rcrb
adc
add
movsb
bound
movsl
shrl
test
jns
dec
test
inc
push
call
dec
mov
cmovbe
add
sub
rclb
dec
sarb
imul
or
dec
cmpsl
ss
lahf
sbb
mov
fcomps
mov
out
jg
mov
xchg
inc
aas
push
rolb
lods
and
test
push
aaa
cmp
hlt
push
xor
cmpsl
scas
mov
cli
xchg
add
inc
stos
subl
sbb
push
sub
cmpsl
sub
jbe
adc
jle
adc
jae
dec
shr
sahf
push
inc
jp
sbb
movsl
js
sbb
push
and
rolb
insl
xchg
cmp
fcompl
shl
dec
add
fistpll
xchg
ror
inc
cmpsl
mov
cwtl
sbb
scas
xchg
in
test
jns
cmp
jmpw
push
sbb
add
cwtl
pop
aad
mov
daa
icebp
and
into
jg
hlt
pop
mov
and
sub
pop
sub
scas
clc
inc
mov
mov
add
pop
dec
aad
mov
js
adc
outsb
add
dec
sub
jno
jno
movsb
rorb
xchg
and
cmpsl
sbb
out
jne
ja
xchg
call
aas
adc
pusha
push
sbb
dec
mov
fmull
inc
sub
mov
mov
sbb
xor
lret
outsl
inc
loopne
fiaddl
out
mov
sbb
imul
jg
cmc
xlat
leave
and
and
in
pusha
sub
xchg
mov
mov
aad
test
je
add
push
xchg
push
adc
bound
outsb
sarl
push
lods
push
cmp
mov
xor
data16
mov
ficompl
mov
add
js
sbb
push
pop
daa
call
mov
xlat
jg
shrl
clc
dec
test
or
jge
mov
xor
xchg
insl
lea
out
or
ret
inc
mov
sbb
pop
popf
mov
inc
cmpsl
xchg
push
inc
xor
xchg
or
cltd
push
jno
inc
test
arpl
or
mov
in
fsubrl
xchg
push
xchg
repnz
ss
xchg
test
cmpl
loopne
ret
jecxz
adcl
mov
push
data16
xchg
test
mov
dec
hlt
cmp
push
imul
xchg
sub
and
mov
sahf
add
mov
adc
dec
lret
xor
xor
inc
sub
cs
cwtl
popf
xchg
mov
shr
mov
jl
xchg
jmp
xchg
add
fsub
pushf
inc
sub
fsubrs
insl
loopne
adc
pop
in
cmp
add
loop
cli
in
lahf
out
inc
mov
mov
les
adc
mov
cmp
stos
mov
push
aam
pop
mov
and
sbb
lock
pop
or
in
movsl
mov
push
outsb
fbld
adc
nop
and
aad
or
cmpsb
stc
mov
aam
mov
mov
and
pop
ret
les
mov
push
loope
and
mov
mov
cmpsb
dec
pop
sbb
pop
sub
mov
shll
mov
cld
mov
in
or
adc
xor
andb
dec
pop
push
mov
or
fidivl
push
rcrb
rcrl
inc
inc
lods
nop
adc
cmpsb
and
jno
mov
xor
pop
add
lods
das
push
ljmp
loopne
movsl
adc
push
or
xor
sbb
pusha
push
xchg
and
dec
dec
ficoml
sbb
lock
inc
jbe
push
mov
int
xchg
mov
outsl
mov
mov
int
movsl
sbbl
out
aam
or
jo
xchg
mov
sbb
loope
sub
cmpl
dec
nop
or
push
inc
xor
in
push
ret
push
daa
rorb
mov
pop
sysexit
push
inc
jp
imull
lcall
pop
xchg
mov
cmp
pop
inc
notb
add
adc
sub
aam
ljmp
push
and
enter
or
movsl
testl
sub
mov
enter
popa
jmp
fiaddl
cmpsb
sub
mov
push
push
pop
mov
and
or
and
push
or
and
or
and
or
or
and
or
and
dec
or
and
or
and
mov
sbb
add
pop
lea
lods
sub
scas
repnz
cmpsb
stos
int
icebp
lods
sbb
cmpsb
scas
inc
sbb
outsl
popf
imul
test
popa
or
pop
push
stos
or
loopne
hlt
or
jge
push
push
mov
jae
push
inc
enter
pop
push
and
mov
sub
test
jle
jae
call
and
pop
sub
push
cmp
insl
sub
cmp
adc
and
xchg
xlat
lcall
xlat
push
mov
mov
lahf
movsl
pushf
das
xchg
sub
pop
mov
loop
and
mov
mov
movsb
lret
js
daa
xlat
stos
aam
repnz
add
mov
adc
push
adc
stos
or
push
mov
clc
cltd
ficomps
dec
nop
scas
test
sub
ds
test
iret
cmc
and
mov
add
jae
lock
push
pop
call
mov
adc
jne
mov
addr16
fsubs
mov
jb
bound
pop
aaa
pop
mov
mov
paddb
js
add
sbb
mov
push
sub
insl
jno
mov
mov
sbb
nop
adc
push
adc
ret
xor
cmp
test
mov
sahf
inc
ret
pop
das
sbb
jns
mov
inc
fwait
lock
xor
nop
addr16
aam
ja
sub
fnstcw
dec
lods
clc
add
add
call
mov
or
cmc
out
mov
insb
xor
loope
orl
out
sbb
popa
mov
add
and
cmp
mov
cmp
mov
subb
jge
mov
cli
shrl
lock
sahf
push
push
fsts
cmp
cmpl
or
adc
dec
out
push
ret
lods
inc
leave
add
push
mov
orb
arpl
add
jmp
cmc
std
aas
or
fwait
inc
lock
icebp
shll
dec
pop
mov
adc
xchg
cld
roll
inc
lret
bound
and
xor
inc
sbb
ficompl
add
and
pop
and
inc
ficompl
lea
push
xchg
outsl
cmpsb
clc
mov
push
jns
call
mov
or
mov
mov
ljmp
lcall
and
pusha
enter
sub
test
jg
adc
xchg
js
loopne
push
push
adc
cmpsl
icebp
mov
mov
rol
arpl
push
test
rclb
test
je
xchg
lcall
andl
xor
push
add
mov
aas
or
mov
test
ss
hlt
dec
sbb
mov
dec
fwait
test
lret
cmpb
mov
or
add
clc
inc
hlt
fwait
inc
dec
fistpll
fwait
test
aam
and
or
inc
add
adc
and
enter
mov
mov
rorl
or
test
fisttpll
or
cmpsb
es
push
or
add
mov
pop
add
outsb
arpl
push
in
pop
je
test
scas
imul
mov
test
icebp
push
popf
jns
dec
scas
xor
ja
addr16
enter
call
popaw
into
mov
pusha
mov
scas
xlat
or
adc
sti
mov
cmp
out
cmpb
pop
or
jo
mov
sub
sbb
mov
adc
cmpsb
jge
pop
sub
rcrb
sti
sti
xchg
mov
in
je
lea
cwtl
jecxz
dec
ja
iret
add
dec
pop
mov
scas
mov
cltd
xor
orl
dec
mov
mov
cmpsb
out
jmp
sbb
ljmp
shlb
cmpsl
sub
shlb
stos
sbb
sub
fxch
jb
and
loop
cltd
enter
lcall
push
xchg
inc
push
push
stos
stos
enter
xchg
adcl
mov
sub
in
inc
pop
adc
pop
jle
mov
pop
sbb
xor
dec
lock
push
push
rcrl
cmp
imul
lcall
ljmp
shlb
jmp
shl
mov
lods
xchg
add
sbb
fdivl
dec
add
aam
popa
sub
cs
test
or
xchg
fwait
ret
mov
cwtl
pop
mov
inc
inc
and
push
jecxz
ret
rclb
insl
roll
lods
data16
add
sbb
popa
pop
ret
sub
insl
cs
test
and
repnz
inc
mov
dec
int
cmp
fsts
scas
loop,pn
cmpsl
jmp
push
inc
push
rcr
cmp
xor
or
rorb
add
shl
ljmp
push
ficomps
lret
rorl
fcoms
mov
cmp
sbb
xorb
xchg
push
loopne
pop
mov
mov
mov
cli
stos
adc
cmp
ljmp
in
lcall
sbb
sbb
outsl
cwtl
call
adc
scas
dec
sahf
xor
std
pop
mov
sub
das
test
adc
xchg
int
jge
mov
inc
ja
dec
add
mov
dec
mov
or
ja
inc
inc
icebp
jge
aad
out
clc
fwait
jmp
sub
dec
pop
xchg
mov
mov
adc
xor
sub
test
cmp
out
fbld
in
push
cmp
aad
test
pop
lds
prefetch
cmp
sub
add
mov
lock
leave
jae
mov
dec
lods
xor
nop
and
aas
mov
mov
jmp
sbb
fs
inc
in
mov
push
push
lahf
loopne
inc
xor
push
les
mov
test
outsl
mov
insb
sbb
cmp
fldl
lock
loope
pusha
push
sbb
and
push
mov
movsl
pop
push
xor
insb
divl
lods
in
sub
pop
xchg
fistl
adc
push
pushf
pop
xchg
pop
shrb
out
dec
inc
enter
scas
addl
iret
inc
repnz
hlt
jb
mov
xchg
shr
adc
sbb
jno
jge
jmp
sbbb
sub
inc
jecxz
cmp
cmpl
sub
inc
mov
jmp
push
lea
ret
xchg
aaa
adc
mov
mov
xchg
mov
adcl
sbb
pop
xchg
jno
mov
sub
ja
xchg
cmp
insb
jbe
in
das
xchg
inc
pop
jg
gs
mov
and
adc
sahf
mov
jge
mov
gs
inc
ja
add
roll
or
inc
jg
pop
les
rcrl
loop,pn
inc
xor
pop
adcl
jg
mov
repz
add
pusha
lret
les
inc
les
dec
icebp
rcrb
mov
dec
dec
pop
adc
xor
mov
repz
pop
test
mov
dec
and
mov
mov
push
xor
or
and
pop
inc
mov
dec
xchg
add
push
das
xorl
inc
dec
sarl
mov
inc
xchg
or
xchg
outsl
inc
and
adc
cltd
int3
shrb
and
jb
mov
adc
imul
dec
mov
mov
mov
xor
es
lea
icebp
mov
push
and
cmp
inc
enter
fsubs
mov
fistpll
xor
push
push
push
arpl
fstps
cli
cs
les
mov
movsl
sbb
xchg
sub
adc
mov
fsubr
dec
stos
nop
or
enter
les
xchg
dec
or
inc
dec
lcall
cs
sbb
jp
jge
scas
sub
push
les
subb
fsubs
cwtl
pop
mov
or
cli
add
mov
mov
jmp
stos
jnp
ds
mov
gs
inc
pop
lret
lret
mov
jo
and
rorb
das
frstor
pop
xor
or
mov
dec
out
adc
mov
ja
add
movsb
sbb
xchg
xchg
clc
loop
jno
lods
nop
jmp
push
sub
push
std
jae
pop
mov
ficoml
pushf
push
mov
cli
push
fs
sti
aas
add
test
testb
and
pop
xor
xor
or
sbb
orl
mov
jl
stos
enter
dec
pop
in
add
lods
popf
inc
fsubl
iret
or
aaa
sub
add
popa
icebp
mov
xor
pop
push
aas
stos
mov
int
dec
dec
sub
or
fadds
mov
sub
push
or
insb
dec
cltd
mov
cs
out
movsb
and
cmpsl
pop
push
and
mov
pop
xchg
sbb
movsl
imul
add
popa
jmp
jne
loopne
sbb
jp
sub
fldl
mov
mov
cwtl
gs
add
lahf
aad
jge
push
mov
sub
sub
idivl
dec
aam
gs
push
or
mov
aas
stos
sahf
add
sub
rorl
and
out
and
lret
mov
shlb
add
mov
movsl
jle
xor
stos
aaa
aas
jge
mov
or
in
pop
dec
mov
pop
jne
sbb
cmp
mov
gs
dec
jmp
inc
fs
or
scas
dec
xchg
pop
cmp
roll
push
scas
xor
xor
in
dec
or
jl
ret
decb
pop
jp
and
inc
idiv
sub
cmp
inc
mov
bound
jmp
js
mov
imul
ljmp
pop
push
insb
push
cmp
aad
inc
push
shlb
mov
cli
test
mulb
scas
je
data16
add
mov
imul
ss
add
leave
mov
lds
vmaxpd
inc
inc
adc
ljmp
add
ja
mov
or
mov
mov
cmpsb
lds
mov
lahf
jl
sub
mov
jae
lcall
pop
nop
dec
out
pop
mov
push
sbb
mov
sub
stos
mov
jo
imul
test
jne
xchg
js
into
push
push
mov
mov
cmp
imul
and
imul
cmp
add
sbb
jne
ja
xchg
inc
lock
sahf
inc
pop
push
gs
push
pop
mov
mov
cmpsl
jg
lret
mov
inc
aam
and
push
push
or
push
mov
subb
and
rcll
arpl
rclb
pop
repnz
push
and
iret
call
or
jne
inc
xor
and
jg
inc
mov
outsl
dec
adcl
mov
je
push
sbb
cmc
jb
xor
adc
imul
popf
xchg
mov
into
pop
add
inc
lea
jbe
loope
aaa
iret
cltd
movsb
notb
pop
xchg
mov
cmp
fwait
inc
or
xchg
pop
mov
or
mov
inc
lock
roll
mov
push
out
add
jae
repnz
cmp
andb
icebp
push
lcall
stos
mov
or
stc
scas
sub
pop
pop
pop
andl
pop
jno
jp
push
popa
xchg
dec
js
add
stos
imul
dec
fiaddl
add
imul
loop
int
dec
fdiv
cmp
pop
pop
mov
push
xlat
jbe
stos
inc
xlat
out
lret
mov
jmp
sti
mov
call
mov
pushf
dec
or
rcll
sarl
mov
lock
pop
lret
push
daa
nop
xchg
or
pushl
test
rcrl
or
push
out
stos
xor
jo
sbb
dec
jae
ja
fdivs
icebp
inc
lods
rorl
or
xchg
scas
inc
scas
pop
pop
pop
data16
and
jg
jg
xor
sbb
cmp
popl
aaa
sarb
cmp
and
mov
int3
cmp
fdivs
ffreep
into
js
or
mov
mov
push
and
std
stos
js
loope
stos
jecxz
add
or
out
movsb
jge
lret
add
rorb
nop
adc
adc
bound
daa
popf
mov
bound
add
adc
push
push
mov
loop
fwait
outsb
std
jb
mov
jnp
pop
jmp
loop
lret
or
xchg
xchg
mov
pop
push
push
fmuls
mov
fadd
outsl
push
ss
xlat
xchg
cmpsl
js
arpl
jl
jl
inc
stc
cmp
pop
or
hlt
inc
dec
xchg
xchg
lods
lret
dec
xchg
xor
popa
cmp
xor
pop
inc
repnz
push
push
dec
add
dec
mov
dec
mov
xchg
jecxz
sub
ss
mov
sbb
rcrw
adc
filds
test
notb
cmpsl
pop
jae
out
rclb
insb
inc
or
pop
dec
das
sub
push
dec
inc
pop
adc
lds
call
aas
xchg
enter
push
lret
sbbb
inc
ret
rorl
mov
in
mov
pop
and
leave
sbb
sbb
das
sub
or
mov
nop
sub
sub
popa
test
mov
or
xchg
xchg
jns
and
in
dec
push
icebp
xor
xchg
inc
into
inc
test
and
xor
arpl
stos
sbbl
mov
or
dec
xchg
or
push
sbb
ficoml
xchg
pop
sti
push
inc
scas
lret
inc
sti
xchg
sarl
pop
mov
and
into
call
or
loop
out
aas
ret
out
and
xchg
aaa
aad
scas
iret
fiaddl
push
dec
cmpsb
inc
jp
xchg
jbe
ljmp
sbb
xor
mov
mov
loope
outsb
push
and
mov
cmp
aas
iret
xchg
sub
jb
lods
push
daa
in
mov
cmp
mov
test
bound
mov
inc
or
xchg
sub
stos
jnp
inc
pop
or
call
std
pop
mov
rolb
je
and
mov
daa
add
jo
mov
add
inc
and
movsb
xchg
add
push
and
dec
push
and
fs
jne
mov
mov
lret
or
mov
jo
adc
sub
jb
scas
lret
dec
cmp
cmp
ja
cmpsl
pop
stc
shld
dec
movsb
adc
inc
mov
adc
fsubrp
cmp
imulb
xchg
cmp
dec
cs
dec
addl
cmpsl
jmp
aas
outsb
out
sub
inc
adc
jnp
ret
push
jecxz
aad
std
test
cwtl
loope
sarb
mov
ds
and
int3
and
pop
jp
hlt
scas
repz
sub
mov
repnz
mov
jb
clc
leave
or
add
inc
js
mov
inc
mov
pop
push
pop
sbb
mov
sbb
dec
xchg
inc
mov
jmp
sbb
lock
jbe
push
jge
sbb
xor
adc
stos
test
push
lds
int
jns
repnz
push
aaa
jl
dec
jb
fdivp
pusha
cltd
movsl
cmpb
dec
inc
cmc
sub
lods
mov
mov
add
test
pusha
xchg
rorb
add
sbb
sub
or
stc
cmp
push
add
into
jns
mov
hlt
jg
push
lcall
ljmp
ficompl
jne
rorb
pop
insl
inc
and
icebp
stos
call
mov
test
xor
and
rcrb
cmp
dec
adc
cmpsl
sbb
adc
xchg
das
sbb
outsl
push
adc
gs
jge
add
sbb
enter
out
jg
inc
fwait
xchg
mov
movsl
mov
xlat
mov
add
jae
jmp
pop
arpl
mov
daa
repz
movsb
aam
adc
jecxz
xor
es
dec
loope
jp
fildll
push
test
lahf
inc
mov
mov
loope
mov
mov
add
sub
dec
dec
dec
dec
jnp
mov
mov
xlat
fwait
push
push
xor
xlat
push
xorb
cmp
jae
push
mov
cmp
stc
cmp
scas
jmp
add
xchg
popf
push
stos
jmp
aam
insl
pushf
xchg
sub
movsb
sub
movsb
lret
ss
inc
nop
rclb
iret
sbb
pop
lcall
add
cmp
ds
icebp
sbb
arpl
fs
xor
jns
jne
dec
pop
ret
andl
and
scas
mov
out
lret
xlat
pop
or
push
lods
mov
rcr
mov
stos
inc
or
dec
jmp
jne
fisubs
push
fs
pop
scas
outsb
pop
sbb
into
push
gs
pop
push
lea
jbe
jo
movsb
pop
ss
jmp
xor
mov
xor
xchg
addr16
popf
dec
adc
popa
jne
mov
fs
pop
outsb
dec
loopne
mov
scas
outsb
out
add
xchg
jns
push
out
adc
sbb
insb
fwait
imul
mov
fstl
push
adc
push
jl
xchg
rcl
mov
sub
cmp
push
dec
cmpsb
mov
dec
cli
cmp
ja
imul
xchg
leave
call
cmpsb
or
lea
flds
dec
xor
int
xor
testl
imull
adc
add
mov
mov
add
mov
sbb
mov
inc
pop
dec
mov
sti
push
in
pop
insl
lret
sub
push
cmp
daa
cmp
jo
inc
add
inc
pusha
daa
push
in
inc
dec
das
cwtl
ljmp
push
cmp
jmp
inc
pop
test
xchg
cwtl
jne
jbe
aam
aaa
insb
cmp
xorb
fs
enter
xor
add
scas
sarb
scas
lret
mov
fwait
test
les
add
dec
mov
sub
mov
jne
add
cli
push
adc
lcall
push
mov
adc
adc
inc
ds
fcmovbe
jl
insl
in
mov
jnp
pop
mov
xor
and
cmp
lcall
cmp
jge
stos
push
inc
aam
out
movsb
inc
and
adcb
test
dec
and
hlt
xchg
iret
fists
jbe
out
repnz
pop
mov
sbb
inc
test
lahf
add
or
inc
movsb
add
and
and
movsb
mov
xor
adc
push
mov
xchg
mov
arpl
ret
lcall
dec
jmp
daa
sar
mov
or
call
lahf
dec
shrb
lahf
out
movsb
cmp
fwait
rorb
mov
sub
in
add
pop
sbb
dec
dec
mov
or
mov
test
sahf
enter
scas
in
jns
test
loopne
push
mov
insl
jb
adc
inc
lcall
or
inc
add
or
mov
imul
mov
cs
jns
inc
clc
scas
jbe
push
adc
cld
ss
ss
adc
mov
push
and
lods
pusha
rorb
in
mov
dec
push
nop
es
sbb
mov
dec
rorl
or
mov
mov
push
xchg
adc
jge
mov
adc
imul
movsb
enter
pop
xchg
scas
das
ficoml
mov
fcoml
cs
dec
sub
cltd
lahf
hlt
or
vunpcklps
and
mov
jns
dec
in
sub
jge
mov
inc
lcall
mov
add
lods
cmpsb
lcall
je
jl
sbb
mov
adc
pop
rolb
and
dec
xor
mov
push
in
aas
pop
inc
xchg
call
push
mov
adc
dec
xchg
xchg
data16
dec
and
call
hlt
arpl
or
mov
aad
jecxz
add
jns
inc
sub
jo
cs
enter
push
test
and
pop
sub
dec
sub
cmpsb
movsl
cmp
cltd
sub
adc
in
inc
jo
rclb
dec
mov
mov
test
es
test
test
jp,pn
jge
rorl
gs
imul
aam
inc
adcl
mov
pop
cmpsb
movsl
mov
in
push
scas
inc
inc
inc
imul
xor
in
sahf
push
mov
dec
out
jle
mov
mov
inc
fcompl
out
mov
cmp
scas
jmp
dec
movsb
rcrl
dec
hlt
jl
clc
push
xchg
mov
insb
dec
arpl
arpl
jb
push
and
insb
pop
mov
rclb
or
sbb
jne
push
push
jne
sbb
sbb
enter
in
popa
push
les
or
stos
test
mov
lahf
icebp
sub
inc
add
xchg
js
inc
push
pop
fwait
push
adc
stos
lea
add
sub
lret
arpl
cmp
cmc
and
ret
imul
push
stos
sub
in
leave
arpl
adc
mov
daa
jno
jg
xchg
int
cwtl
cmp
pop
jg
fwait
mov
test
push
push
push
fsub
xchg
mov
outsb
pop
iret
popa
mov
ficoml
sti
shrl
jl
or
test
arpl
jb
ret
inc
mov
popf
mov
test
dec
cwtl
popa
cld
sbbl
fsubrl
xchg
and
stos
fbstp
push
sub
jne
xchg
insb
stos
loopne
aad
enter
mov
aad
sub
or
aas
lret
or
push
pop
cld
dec
arpl
je
imul
inc
push
arpl
dec
or
jle
out
fs
jecxz
mov
xchg
xor
add
movsl
aam
mov
sahf
inc
mov
push
jmp
mov
xchg
out
in
stos
addr16
dec
sti
arpl
mov
inc
jmp
into
sarl
shl
lea
adc
scas
mov
push
pop
sub
xchg
inc
mull
cmp
lea
sub
rclb
xchg
mov
sysret
mov
repnz
mov
add
mov
jg
and
sub
jmp
ss
dec
xor
ljmp
subb
fwait
push
inc
push
push
insl
test
dec
pop
jecxz
cmpl
push
ss
pop
jae
adc
mov
pop
sti
adcb
sub
shrb
mov
and
aad
ss
imul
and
dec
adc
add
mov
jno
push
gs
test
mov
cmpsb
mov
mov
adc
pop
cmp
inc
insl
add
and
mov
pushf
sub
inc
mov
jnp
or
jmp
pop
jne
cltd
pop
mov
cli
mov
pop
jmp
mov
pop
dec
sbb
call
cwtl
enter
adc
sbb
push
xor
lret
jbe
or
repz
add
xor
cltd
mov
jb
in
pop
mov
iret
ja
orb
jo
pop
or
xchg
sub
pop
xlat
or
orl
lea
stos
cli
sub
xchg
adcb
pop
xchg
inc
xchg
inc
inc
bswap
push
xchg
jo
mov
shlb
mov
lahf
push
lcall
sub
fildl
inc
push
pusha
stc
or
jle
push
stos
push
call
jmp
test
lods
push
daa
push
mov
js
pop
mov
enter
mov
cmpsl
lods
mov
aaa
or
push
dec
mov
push
lds
mov
xor
mov
arpl
xor
addb
clc
mov
ret
cmp
pop
loopne
jge
and
cmp
test
inc
xor
jae
inc
adc
inc
insb
inc
inc
xchg
js
sub
cmpsb
ret
pop
or
mov
js
xchg
outsb
mov
pop
cmp
mov
mov
push
inc
sbb
sbb
sub
push
mov
mov
and
arpl
mov
xor
mov
es
in
lret
mov
pop
add
fistpl
ret
mov
int3
inc
int
pop
ds
push
mov
jne
repz
push
sbb
repz
xor
push
sahf
jb
add
stos
ljmp
mov
mov
mov
hlt
and
inc
int3
arpl
les
sub
bnd
lcall
push
xor
insb
addb
hlt
int
nop
or
pop
inc
push
lods
flds
mov
or
fstl
roll
mov
js
lahf
adc
repnz
or
xchg
data16
mov
xchg
cmp
subb
cmp
pop
lret
mov
sbb
sbb
sbb
pop
jns
push
in
jp
shrl
mov
rcrb
int3
out
cmp
sub
mov
adc
push
arpl
jo
adc
test
pop
push
inc
cltd
daa
jge
pop
aam
mov
mov
mov
fbld
cmpsl
mov
imul
and
jmp
jg
shlb
cld
jecxz
inc
xchg
fdivl
and
cmpsl
cmpsl
sub
pop
leave
cmc
or
dec
push
cltd
cmp
mov
jno
das
adc
sti
inc
shll
cwtl
dec
sti
adc
sbb
dec
pop
call
and
jmp
jmp
sub
call
add
pusha
subb
mov
cli
daa
jbe
setb
ss
nop
inc
sbb
mov
or
push
xor
and
cltd
pushf
xchg
push
sbb
iret
add
push
cmp
or
mov
pop
sub
inc
shrb
lock
mov
dec
cmp
inc
xor
inc
pop
or
out
sub
mov
imul
mov
push
mov
mov
push
sub
aas
mov
adc
sbb
pop
lea
and
in
test
sbb
dec
mov
mov
fs
mov
add
xchg
mov
inc
or
mov
mov
jb
cmpsl
mov
clc
inc
mov
jge
mov
enter
jl
sar
add
dec
mov
int
jp
cmp
test
sub
mov
and
movsl
cmp
xchg
cmpsl
inc
sbb
inc
adc
xor
xor
adc
xchg
mov
enter
ss
dec
aaa
dec
or
adc
adc
fwait
and
in
dec
loop
shll
lret
or
aad
adc
pop
dec
xor
bound
shlb
mov
sub
add
fisttpll
jno
es
adc
fiaddl
movsb
inc
call
in
push
adc
mov
sub
jae
lock
fstps
daa
adc
and
adc
and
inc
gs
mov
xchg
add
popf
std
jl
fdivr
in
add
std
inc
mov
movsb
lcall
shll
inc
mov
frstor
pop
or
add
ficomps
xor
adc
or
sub
mov
jmp
test
xor
es
out
xchg
xor
sbb
std
cld
insb
stos
call
aaa
inc
pop
cmp
sti
mov
mov
xchg
inc
addl
dec
frstor
dec
pop
push
xchg
sahf
insb
xor
sarl
xor
xor
sub
stc
pop
pop
mov
jmp
aas
jns
lods
je
cmc
xchg
jecxz
jns
or
arpl
mov
call
mov
test
cmp
push
mov
test
push
and
inc
sbb
rorl
xchg
mov
ret
push
pop
mov
xorb
mov
cli
ret
addr16
mov
movsb
push
subl
lods
jle
pop
adc
inc
cmp
pop
adc
add
push
mov
jbe
inc
sbb
cld
daa
in
lcall
jnp
cli
fs
jno
mov
xchg
scas
mov
pop
push
push
pusha
mov
xor
mov
and
xchg
jg
int
aad
dec
fiaddl
sbb
sbb
js
inc
sbb
or
pop
scas
out
inc
ror
bound
mov
add
cmp
lret
mov
push
sbb
bound
shll
inc
mov
ss
mov
fs
ja
clc
fiadds
mov
xchg
fs
jmp
out
mov
fildll
fcompl
arpl
pop
ja
pop
mov
adc
js
push
add
xor
call
push
lret
xchg
scas
xchg
sub
push
pop
fdivl
push
mov
lock
das
mov
push
xor
repnz
enter
push
sahf
repz
je
jl
adc
inc
icebp
jp
sarl
push
lds
add
iret
pushl
xorb
bound
cltd
mov
cwtl
dec
jnp
test
mov
mov
xchg
jo
call
and
jno
addr16
negl
inc
push
test
and
mov
adc
mov
sbb
xchg
and
push
xchg
cwtl
orl
cmp
jge
js
adc
adc
aas
pushf
cwtl
aad
jbe
xchg
mov
push
loope
add
shll
rcll
jno
pop
xor
sub
jne
push
lods
and
enter
push
inc
pop
add
lret
push
jmp
add
ss
jp
pop
adc
mov
dec
icebp
bound
pop
inc
fucomip
push
fistl
repnz
es
imul
dec
push
sbb
cmp
loope
inc
push
mov
xchg
push
rolb
int3
mov
add
sub
out
mov
mov
mov
xor
loope
nop
mov
xor
push
lret
imul
add
jnp
lock
mov
scas
or
mov
test
push
pop
cmp
loop
pop
adc
cs
jne
xor
lods
xchg
nop
stos
nop
cs
adc
pop
jb
scas
cli
aas
adc
arpl
xor
mov
cmc
clc
insb
lods
out
dec
jg
rcrb
sbb
xchg
jp
lock
lahf
or
mov
sub
ja
sbbb
add
pushf
test
scas
out
test
mov
loop
and
jbe
sbb
rcrl
add
cmc
es
pop
shl
add
stos
pop
les
lcall
lock
pop
mov
call
pusha
adc
and
push
mov
sahf
adc
ret
mov
ljmp
call
jle
rorb
and
es
and
mov
jge
test
push
in
cmp
es
fs
loop
outsl
outsb
and
popf
xor
jg
dec
rclb
into
aad
mov
xchg
inc
cmp
sbb
push
pop
mov
movsl
outsb
shll
gs
inc
lcall
sub
js
lcall
sbbl
xor
out
faddl
adc
lcall
or
xchg
fdivrl
mov
xchg
cwtl
adc
mov
stos
call
xchg
or
mov
cmpsb
mov
mov
fimull
cmp
cwtl
push
clc
push
adc
out
pop
insl
mov
push
add
pop
adc
call
daa
add
out
out
hlt
sub
jns
lcall
stos
push
addr16
xchg
and
adc
lahf
adc
sbb
sbbb
arpl
rcr
sub
jae
push
rcll
xchg
aad
and
or
xchg
mull
mov
clc
dec
and
stos
sub
bnd
sbb
sbb
mov
ljmp
call
fildl
shl
jo
das
add
gs
sbb
call
nop
shl
xor
dec
inc
shll
rorl
inc
pop
ljmp
nop
dec
testb
ja
pop
cmpsl
roll
clc
loopne
push
mov
aaa
or
push
rcrl
jge
scas
movsl
in
roll
push
inc
dec
and
loop
and
mov
and
jnp
xchg
and
mov
fsub
xchg
and
add
push
sub
loope
mov
adc
jge,pn
sbb
idivb
iret
shlb
fwait
cmp
sbb
lea
xchg
int
xor
adc
xchg
sarl
inc
fbld
mov
cli
jp
jae
sbb
mov
ja
xchg
mov
push
sbb
gs
fists
aad
sub
add
pop
mov
or
je,pt
imul
or
dec
sbbb
add
popa
outsb
dec
xor
rcrl
push
jg
out
lock
pop
je
lods
outsl
push
outsb
cld
pop
sbb
fnstcw
test
adc
mov
in
mov
mov
add
mov
push
or
xor
lret
push
xchg
inc
mov
xchg
imul
ret
pushf
mov
jo
pushf
mov
enter
mov
inc
icebp
sarb
push
pusha
cmpsb
test
add
mov
lcall
inc
mov
lock
out
pushf
rorb
cwtl
icebp
insl
hlt
push
ret
add
out
sub
fwait
jns
or
clc
inc
stos
sub
in
int
dec
cmp
cmp
lods
das
loope
mov
test
dec
sub
xchg
mov
jl
jl
adc
pusha
mov
jecxz
xor
inc
icebp
test
mov
test
add
push
pop
gs
adc
push
ror
cli
mov
ja
ret
pop
bound
xchg
xor
push
aad
jmp
mov
subb
push
jp
and
dec
add
jnp
dec
jmp
push
mov
das
xchg
sbb
mov
xor
imul
jne
daa
jp
dec
pop
pop
xor
and
sbb
mov
dec
loop
adc
mov
mov
jmp
fs
lcall
stc
pusha
dec
inc
inc
fistpl
or
pushf
pop
cltd
pop
popf
xor
add
int
out
push
dec
das
cli
mov
add
adcb
mov
mov
pop
stos
xchg
jge
xor
push
xor
jno
push
leave
jmp
mov
ljmp
xor
into
and
inc
push
test
and
cld
xchg
mov
or
out
adc
and
xor
mov
outsb
sbb
add
mov
or
and
orps
adc
mov
out
icebp
cltd
or
aam
mov
ss
add
pop
stos
es
popa
pop
pop
insl
mov
icebp
cmp
adc
cmp
mov
cmp
ds
lahf
call
push
cltd
loopne
loope
xchg
jg
ljmp
imul
mov
enter
dec
cmc
fs
arpl
lcall
adc
xchg
mov
aas
pop
inc
pusha
jne
sarl
nop
aam
add
push
js
fcmovb
fisttpll
stos
les
adc
or
pop
jns
xlat
gs
adc
aad
pop
test
and
enter
out
lds
jg
cmp
adc
inc
xlat
call
mov
pop
xchg
or
inc
insb
test
rcrl
inc
insb
je
mov
sbb
mov
mov
lods
int3
mov
rcrb
insl
aad
xor
inc
or
pushf
test
cmp
test
cli
or
stc
lds
sbb
mov
jbe
int
add
xchg
add
aaa
jbe
leave
orb
mov
shll
sbb
or
adc
arpl
pushf
pusha
xchg
xchg
test
imul
test
push
jbe
xchg
mov
sbb
ja
je
dec
cs
pusha
cmp
pusha
sub
or
push
int3
pop
cs
xor
mov
cs
or
dec
pop
cmpsl
ds
das
pop
dec
lahf
or
xor
dec
movsb
imul
mov
jp
adc
outsb
aam
cmpb
pop
outsl
aad
jp
je
popa
inc
mov
xor
mov
xchg
hlt
or
arpl
mov
shlb
sub
xchg
inc
jae
push
lret
jg
inc
shll
inc
mov
jge
fstl
xor
add
pop
adc
lock
adc
outsb
rcll
add
adc
icebp
adc
jb
adc
nop
stos
or
les
push
sub
lret
dec
test
and
push
pusha
sbb
or
xchg
pusha
jl
mov
add
repnz
leave
andb
sbb
ret
mov
adc
pop
push
pop
sbb
add
or
mov
repz
mov
leave
out
lahf
mov
and
movsb
push
inc
int
scas
and
pop
out
mov
mov
sub
jp
lea
and
dec
lods
dec
and
cmpsb
rorb
jb
arpl
xor
and
andb
shl
stos
xlat
ds
cmp
adc
push
push
mov
cmp
push
hlt
add
pop
aas
les
repz
adcl
jge
xchg
dec
pop
jl
and
les
cltd
pop
into
loopne
xchg
push
adc
enter
pop
sbb
add
xchg
pop
mov
jmp
cld
ja
test
inc
arpl
outsb
imul
sbbb
and
loope
mov
in
into
mov
sub
add
fidivl
cmpl
hlt
mov
test
push
push
fidivrl
sub
or
push
out
mov
and
pop
ja
mov
pop
cmpsb
test
aas
jg
cmpsb
ljmp
fidivrs
popa
aam
xchg
jg
xchg
jge
jmp
mov
adc
popa
call
shlb
jnp
push
ret
pop
add
push
and
or
pop
pop
fwait
outsl
stos
sub
imul
imul
insl
jg
or
inc
sub
jle
push
sbb
adc
or
push
sbb
or
mov
rolb
mov
mov
cltd
pop
or
cltd
addl
orl
stos
jmp
call
repz
push
xchg
or
or
cwtl
mov
test
call
mov
test
or
push
adc
aad
xor
mov
dec
mov
jmp
aas
andb
shrb
mov
pop
std
and
or
shl
sub
js
pop
aas
mov
jp
mov
lcall
mov
lret
push
loop
lock
sub
pop
scas
mov
mov
cld
or
scas
dec
lods
out
sbb
mov
jne
mov
in
cmp
jmp
pop
dec
jg
dec
or
mov
sbb
sub
mov
xchg
mov
push
cmp
push
xor
mov
inc
jle,pt
movsb
imul
or
movsl
sbb
jp
or
mov
pop
test
dec
mov
imul
push
xchg
adc
mov
sar
mov
mov
xchg
shll
mov
stos
fadd
stos
add
dec
call
sbb
jp
cmp
jge
into
add
push
push
mov
inc
mov
xchg
out
xchg
insb
gs
push
ficoml
iret
popa
leave
pop
in
jp
dec
pop
enter
fsts
int3
cli
dec
or
mov
loopne
fs
push
in
aaa
loope
xchg
enter
fstps
js
pop
dec
adc
pop
mov
scas
push
leave
cmp
scas
subl
jge
sub
movb
sarl
jge
pop
pop
adc
jbe
or
test
mov
int
and
idivb
sub
or
pop
cltd
add
dec
mov
jge
push
repnz
mov
data16
ljmp
movsl
or
cmp
and
sub
inc
scas
cmp
inc
sub
pop
mov
rcrb
inc
lods
add
inc
xchg
pop
les
test
ffree
push
add
or
pop
jecxz
cmpsb
div
shll
into
sti
inc
out
cmovne
dec
in
mov
outsb
stos
lret
jno
sbb
sub
rclb
imulb
xor
dec
inc
mov
jbe
and
push
mov
mov
bound
test
sub
lock
or
out
adc
push
test
insb
cmp
fsubrl
sub
stos
xchg
aad
pop
test
movsl
and
mov
mov
std
arpl
adc
jecxz
or
or
add
lcall
xor
ds
pop
rcrb
mov
dec
xorb
mov
arpl
rcrb
test
pop
ja
aam
andl
fisubs
idivb
pushf
and
popf
mov
adc
push
cmpsl
pop
loop,pn
pop
aam
adc
ror
gs
sub
jae
cmp
arpl
cwtl
xor
adc
xor
push
mov
and
test
rcll
inc
push
shlb
pop
cmpsl
jecxz
test
divl
mov
xchg
cli
faddl
stos
mov
mov
push
jg
mov
mov
aas
dec
xor
sbb
jmp
lahf
fisubrl
push
out
movsl
adc
ficoms
jmp
xor
jns
out
inc
jg,pt
push
and
mov
push
int3
aad
repnz
push
cmp
popf
jl
aas
pop
jae
rcrl
and
push
gs
out
ficomps
cmpsl
mov
sbbb
clc
mov
push
sti
or
mov
add
xor
push
sub
and
or
adc
xchg
mov
jae
aaa
add
pop
pushw
cltd
jl
cltd
adc
sti
pop
mov
sbbb
inc
bound
or
sub
mov
or
xor
rcrb
cmpsb
or
pop
data16
dec
mov
inc
sarl
or
into
fidivrl
call
or
les
add
rolb
mov
in
in
xchg
das
adcl
scas
and
and
add
xchg
lea
arpl
mov
cld
out
jmp
adc
pop
mov
out
cltd
fsts
shrl
xor
clc
mov
jl
decb
or
out
push
les
mov
or
mov
jmp
inc
loopne
jmp
loopew
xchg
ret
cmovae
dec
and
sbb
scas
fistl
repnz
inc
push
cmpsl
lods
aas
inc
outsl
rcrb
fstpl
sbb
enter
into
push
cmc
mov
roll
add
mov
cmpl
or
xorl
dec
ret
add
lret
daa
sti
ds
dec
sub
out
xchg
test
inc
mov
mov
cmpsb
xchg
jg
stc
inc
sbb
adc
xchg
cmp
test
xchg
aam
push
stc
aad
jns
call
adc
push
test
test
inc
adc
xor
sete
outsb
hlt
adc
js
or
roll
cli
aam
adc
testl
loope
or
lds
inc
pop
jecxz
mov
popa
push
adc
jle
ror
movsb
js
insb
pop
cmp
imul
mov
sahf
adc
shrl
scas
std
or
das
jne
test
mov
push
mov
xor
lret
fdivrs
jl
pop
pop
nop
out
mov
les
sbb
test
lcall
js
test
mov
add
or
jle
fldl
fisttpl
inc
and
into
inc
in
mov
cwtl
loope
ficomps
adc
add
add
add
gs
jmp
rorb
push
jg
and
pop
rorb
bound
test
jmp
jecxz
push
xorb
sbb
or
fnstenv
and
jno
dec
out
stos
bound
adc
mov
mov
ds
addl
aam
sbb
lds
jl
clc
pop
add
mov
lret
jmp
pop
arpl
test
out
arpl
jmp
stos
mov
mov
pop
jp
cmpsl
rorl
sbbl
in
enter
mov
sarb
inc
mov
xchg
addr16
and
inc
bound
jo
iret
and
aaa
popf
add
jbe
sbb
add
and
inc
jnp
imul
lods
xchg
sub
movsb
and
inc
clc
cltd
push
inc
push
mov
mov
add
push
aaa
inc
paddusb
or
ret
mov
xor
jp
and
mov
fimull
hlt
mov
fsubs
repz
jle
pop
jo
das
and
inc
push
cltd
test
mov
outsb
sbb
push
fiadds
cmpsl
lods
add
add
loope
mov
dec
adc
xchg
pop
es
aam
push
add
mov
inc
cmp
mov
sti
jl
and
adcb
add
mov
xchg
jp
xor
mov
popf
ja
mov
inc
xchg
mov
cmp
cli
mov
mov
es
iret
mov
sub
jmp
jae
shll
mov
inc
adc
inc
mov
and
repnz
xchg
insb
mov
imul
mov
bound
inc
bound
push
pop
lret
rcl
jbe
and
xchg
incb
lds
mov
push
adc
stc
aas
std
cmp
and
add
mov
je
lret
sbb
jge
xchg
or
mov
inc
dec
fcmovu
les
mov
pop
sub
out
lds
and
mov
ret
xchg
add
push
gs
aaa
adc
or
push
push
das
sub
aad
adc
sbb
xchg
pushf
mov
xchg
bound
into
xor
mov
xor
mov
or
add
test
xchg
mov
push
adc
mov
and
popf
mov
adc
inc
inc
icebp
inc
cmpsl
mov
dec
xchg
cmp
subl
add
add
cs
arpl
imul
int
outsb
dec
sbb
dec
scas
adc
mov
in
sbbl
add
jp
fldcw
out
call
sbb
xchg
push
lret
cwtl
pop
pop
push
out
into
ja
push
sbb
clc
inc
loopne
rcr
sub
mov
out
movsb
stos
xlat
adc
or
xor
mov
pop
mov
mov
adc
imul
jmp
and
xchg
and
lret
jl
add
imul
pop
pop
pop
ret
dec
mov
cmpsl
outsl
mov
adc
push
ss
fimuls
sbb
xor
mov
adc
dec
mov
inc
inc
jp
subb
rcrl
jle
call
inc
push
pop
inc
push
push
nop
imul
adc
rcl
lods
dec
sar
adc
jp
sub
xor
lods
stos
cmp
ja
call
shrb
ja
movsb
test
pop
add
sbb
sahf
fst
mov
cmp
pop
xor
push
shl
data16
movsb
jge
cmpsl
push
jp
push
cmp
mov
stos
xlat
cmp
sub
shrb
adc
in
ja
fucomip
push
sbb
hlt
adc
jl
mov
pop
jnp
cmpsb
push
xchg
lret
mov
fidivs
jecxz
mov
jae
inc
popf
jmp
outsl
push
cmp
gs
cwtl
popa
push
adc
stos
in
imul
cmc
dec
adc
xor
clc
push
das
sub
cmp
push
sub
in
lods
stos
mov
or
or
dec
hlt
shll
rclb
push
frstpm(287
stos
push
mov
xchg
imul
mov
push
call
imul
mov
adc
test
jp
in
xchg
je
or
fidivl
loopne
jno
daa
add
cmp
xchg
inc
xchg
ret
sbb
sbb
xchg
add
xchg
mov
insb
outsl
shl
mov
aad
xor
imul
sti
sbb
push
pusha
jbe
xor
xchg
dec
cs
inc
out
pop
mov
sarl
idivb
aaa
push
inc
out
jmp
jl
xor
dec
aaa
xor
ds
add
sti
push
dec
imul
movsl
mov
xorb
jb
loope
sub
adc
dec
test
and
add
xchg
insb
adc
xor
fwait
out
xchg
dec
test
int
in
rcl
sbb
in
mov
xchg
repz
add
push
int3
inc
lret
cld
add
inc
sarl
cs
daa
inc
mov
mov
fistpl
out
cli
mov
rclb
mov
cs
jnp
mov
subb
call
add
pop
add
adc
mov
dec
adc
ja
sub
lock
xor
lds
aam
sub
mov
sub
xchg
out
aaa
ss
loopne
adc
xchg
cld
fists
mov
test
mov
lret
popa
pop
mov
cmp
out
xchg
mov
mov
jmp
test
xchg
filds
call
mov
test
mov
pop
dec
push
in
mov
jmp
sub
arpl
out
dec
xchg
xor
enter
sub
cmp
movsb
xor
jnp
cwtl
mov
xchg
aaa
jge
fwait
and
call
je
daa
adc
in
gs
xchg
inc
shll
push
int
push
pop
push
call
push
lds
mov
push
inc
sbb
xchg
xchg
mov
sbb
fucomi
or
mov
stos
dec
lds
ret
clc
mov
adc
mov
dec
test
mov
pop
clc
sub
and
xchg
std
sbb
mov
addb
mov
call
inc
mov
xchg
int
xchg
mov
jg
mov
adc
cmp
or
and
sbb
jne
add
lret
mov
icebp
pop
inc
cmp
mov
js
not
push
out
push
adc
aad
dec
movsb
iret
nop
adc
inc
scas
push
sbb
fcoms
adc
xlat
mov
push
adc
dec
sub
xchg
push
rcrb
imul
je
cs
lock
cmp
adc
sub
inc
ror
push
jo
jns
xlat
or
iret
push
out
mov
jmp
jmp
int3
popa
aas
cld
ja
popa
lret
mov
xchg
mov
hlt
test
dec
or
in
out
add
dec
mov
push
subl
xlat
pop
subb
push
or
jg
inc
inc
imul
xchg
mov
aad
divb
mov
inc
cmp
adc
add
cltd
jae
mov
into
gs
push
adc
shlb
mov
test
call
pushf
jmp
aad
aad
aaa
lock
and
mov
sbb
movsl
in
push
test
inc
mov
dec
cmp
rorl
bound
xor
push
jmp
add
mov
mov
pop
or
mov
je
mov
stc
sub
jbe
clc
clc
lods
mov
xor
push
movsb
out
mov
inc
mov
das
cld
shrb
movsb
dec
xchg
mov
jmp
jge
cli
push
in
dec
pop
bound
push
sbb
enter
pop
push
dec
jge
pop
and
mov
pop
jg
bound
pushf
and
push
xchg
ja
inc
dec
movsb
and
mov
mov
add
sub
and
or
stc
je
mov
mov
and
adc
lahf
je
push
pop
dec
fwait
or
mov
fdivrl
push
push
shlb
jl
pushf
or
jp
subl
mov
mov
mov
jle
int3
js
sbb
push
leave
fldt
scas
movsb
dec
xlat
pushf
xchg
jecxz
dec
xchg
jl
js
cmc
shll
xchg
les
popa
rcll
cwtl
insl
inc
inc
sbb
ljmp
int3
pop
jp
inc
out
push
inc
dec
sub
cmpsb
sub
in
sub
es
fbld
sbb
in
xlat
jb
ds
addl
mov
or
sub
adc
add
inc
lar
jl
sub
imul
in
lahf
addps
ret
std
adc
inc
popa
pop
add
sub
repnz
inc
mov
imul
and
clc
subl
pushw
mov
and
test
hlt
push
dec
pop
dec
popf
test
idivl
cmp
push
out
es
push
xchg
or
adc
and
das
inc
test
movsl
adc
addr16
dec
jne
push
sbb
cmp
sbb
pusha
inc
shll
push
ja
push
sub
mov
loope
xchg
popa
into
sub
mov
dec
xchg
pop
fimull
sahf
push
and
gs
pop
cmpl
ds
cmp
cmp
xchg
and
aas
fildl
scas
inc
aad
std
cld
xor
cmp
call
and
fwait
mov
je
loope
ficompl
scas
fistl
call
adc
inc
cmp
sbb
mov
xor
jl
dec
sbb
mov
dec
inc
xchg
or
inc
xchg
xor
push
ret
push
mov
insl
xchg
rcll
jo
insb
inc
aam
jp
lock
push
dec
mov
sbb
loope
inc
mov
dec
mov
rcrb
insb
dec
out
icebp
dec
dec
push
inc
aam
and
xchg
inc
shrl
sub
jmp
xor
dec
mov
sbb
push
movb
adc
pushf
adc
std
fldcw
jg
mov
cmp
shl
push
or
aad
sbb
pop
and
nop
std
adc
adc
bnd
dec
cmpb
lcall
fldenv
inc
add
cmp
cmc
inc
fucomp
mov
lock
xor
push
or
adc
xor
scas
mov
js
bound
mov
dec
xor
imul
mov
xchg
push
pop
inc
xchg
outsb
mov
inc
int3
jns
ds
stos
xor
enter
shrb
xor
lods
scas
call
add
in
out
cmc
sar
mov
negl
ret
loopne
mov
sbb
and
mov
insb
ret
lods
add
mov
pop
mov
xor
popa
dec
jl
pop
pushf
outsb
xchg
daa
shrb
adc
out
xchg
push
mov
scas
out
inc
jnp
lds
inc
or
xchg
movsl
xchg
push
data16
sub
inc
fnstenv
xor
mov
fnstsw
iret
jae
stos
call
outsb
cmp
xchg
jecxz
adc
aam
mov
daa
add
and
jl
ja
add
test
or
pop
add
dec
icebp
pop
sti
or
fisubrs
test
push
mov
stos
lds
andl
movsl
rcll
lcall
push
cmp
out
xchg
push
sti
sbb
jmp
mov
out
movsl
jnp
test
inc
aaa
sahf
push
unpckhps
push
imul
push
lret
mov
stos
xchg
mov
adc
test
aas
adc
cmpsb
push
das
lds
lods
sub
xchg
pop
into
int3
enter
push
loop
ds
fisttpl
push
stc
sub
inc
xor
or
icebp
sahf
sbb
jmp
pcmpgtw
fadds
mov
test
xor
pop
je
aad
sub
popf
jmp
out
push
mov
sub
aad
mov
push
sbb
jecxz
mov
cmp
fucomp
pusha
mov
dec
and
stos
in
clc
call
inc
int3
stos
loop
aaa
xor
in
push
fdivs
xorl
out
lea
or
outsb
xor
in
pop
mov
inc
in
bound
cwtl
mov
mov
push
adc
lea
in
jbe
add
push
cli
test
inc
sbbl
test
or
mov
cmp
cmpb
and
adc
call
mov
ret
push
xor
insb
jmp
inc
out
je
call
pop
dec
les
lds
adc
leave
pop
inc
shrb
inc
jbe
ret
pop
mov
cmpsl
and
call
pop
jo
xchg
in
mov
jl
and
call
lds
stos
in
test
stos
ret
inc
ljmp
iret
mov
int3
sub
pop
inc
rol
std
popa
sbb
lret
loop
xchg
loope
inc
inc
push
std
pop
push
pop
rclb
xchg
scas
xchg
outsb
sbb
mov
mov
mov
pushf
stc
pop
into
call
fnstsw
in
pop
add
inc
bnd
pop
fistpl
pop
push
js
popa
jne
lahf
fadd
lcall
push
and
xor
xor
mov
jg
icebp
push
sti
xor
into
pop
or
mov
test
lret
cmpb
iret
pop
mov
mov
stos
mov
jle
scas
fistpl
xor
in
jle
lahf
adc
mov
push
sub
push
call
jne
sub
pop
icebp
pop
pop
push
icebp
std
stos
daa
adc
and
adc
imull
dec
mov
cmp
inc
cmp
add
out
and
cli
int3
dec
cmp
mov
fwait
mov
dec
push
push
aad
dec
mov
popa
sti
int3
jne
pop
addr16
iret
enter
fiaddl
int
imulb
ficoms
es
int3
cmc
cltd
jmp
mov
fwait
mov
push
das
xchg
pop
cmpsb
push
xchg
je
aas
insl
roll
in
les
xor
mov
pop
jb
cmp
test
cwtl
dec
fistl
outsl
push
dec
rolb
addr16
sub
addr16
movsl
mov
icebp
out
inc
lahf
movsl
cmp
call
dec
es
jbe
sahf
or
inc
xor
adc
mov
push
pop
jne
bound
inc
aam
xor
test
cmp
mov
imul
xor
add
mov
ret
mov
inc
or
scas
repz
add
movsb
cmpb
push
in
imul
mov
or
pop
cmp
or
in
xchg
and
pop
mov
adc
sub
mov
cli
inc
dec
into
in
mov
xor
call
in
stos
outsl
mov
add
mov
insl
loop
cmp
mov
imul
and
test
stos
inc
les
sbb
jp
cmc
xchg
iret
addr16
hlt
pop
lock
fildl
cmp
dec
jg
xor
mov
mov
mov
add
mov
add
cli
dec
loopne
cli
mov
int3
and
movsb
imul
cmp
inc
jmp
mov
jno
adc
cmpsb
les
pop
mov
add
sub
mov
cld
cmpsl
sub
and
jb
cmp
bound
jmp
nop
cmp
arpl
jge
jg
lcall
sub
jmp
jae
out
pop
ss
ss
sub
mov
cmp
sbb
mov
adc
dec
call
adc
insb
addr16
popa
movsb
mov
xor
jb
repnz
scas
fcoms
dec
jb
jno
pop
popf
insl
cmp
out
or
loope
add
fs
daa
cli
out
add
fdivrl
jns
andb
xchg
mov
and
fmul
adc
gs
adc
dec
rcl
sbb
xchg
jg
test
jle
jb
pop
lds
xchg
pop
mov
cmpsb
mov
xchg
or
gs
xchg
fucomp
addb
mov
xchg
xchg
xor
stos
push
data16
push
xor
adc
ret
std
ds
cmpsl
popa
or
inc
cmp
mov
dec
jo
shrl
or
xchg
push
push
cli
outsl
iret
sbb
syscall
cld
jl
adc
loop
lds
sbb
popf
add
push
pop
push
or
inc
adc
cmp
mov
adc
imul
lret
lock
in
mov
test
sti
jecxz
adcl
add
je
xchg
lcall
push
mov
cmp
scas
minps
outsb
adc
pushf
mov
add
dec
cli
rorb
mov
mov
xor
aas
cld
popf
lock
ljmp
xchg
inc
jns
gs
aaa
push
mov
stos
add
std
xchg
mov
push
insl
cld
jns
mov
adc
rolb
or
add
fs
push
pop
jge
enter
xor
sub
leave
push
lods
in
jg
imul
inc
lea
andb
enter
ret
negb
int3
dec
negl
fdecstp
test
push
test
cmp
aad
and
lret
xor
repz
int3
mov
pop
xchg
sarb
mov
mov
sarb
clc
addr16
dec
inc
xchg
jo
dec
adc
dec
push
call
aas
adc
mov
dec
cmpsl
jg
inc
jae
popa
in
inc
lret
bound
xchg
pop
mov
dec
stos
dec
push
inc
fiaddl
sub
mov
bound
lret
sub
jmp
sbb
xchg
mov
mov
or
cmp
pop
adc
scas
mov
ja
pushf
gs
jo
ljmp
test
leave
and
jmp
jne
xor
jle
lcall
rcl
aam
sub
push
stc
adc
push
mov
sbb
lds
pop
cmp
inc
in
scas
push
mov
xlat
shll
inc
stos
xor
dec
hlt
cwtl
jo
scas
scas
fs
jne
cltd
adc
mov
xor
cmpsb
jne
sbb
aas
add
and
leave
ds
je
std
es
test
jae
add
sub
pop
test
leave
adc
es
cmp
mov
test
inc
int3
cmp
adc
adc
sub
jp
push
es
or
push
xchg
lahf
bound
sbb
ja
lods
fisubrl
adc
ret
push
in
mov
or
shlb
lock
push
stos
cmpb
pop
clc
aas
das
cli
lods
cmpsl
sub
sbb
ror
inc
or
inc
xchg
jl
push
lods
loop
mov
dec
lret
ret
nop
cli
push
push
ljmp
pop
add
out
add
push
jp
mov
mov
jg
mov
ljmp
ljmp
push
mov
call
dec
nop
jp
out
stos
lret
std
mov
addb
sbb
sub
mov
adc
adc
pop
pop
clc
mov
and
arpl
xor
push
aam
mov
in
adc
add
inc
push
js
lcall
cmc
adc
scas
mov
fucomip
ret
sub
inc
clc
cmp
negb
sbb
stos
and
cwtl
out
int3
mov
sti
adc
push
jbe
pop
pop
adc
inc
nop
sbb
mov
aam
in
adc
inc
sub
xor
rol
lods
push
jge
cmp
mulb
out
push
fldl
bound
and
add
stos
popf
dec
add
pop
push
or
jge
push
cmp
stos
adc
sub
mov
adc
xchg
adc
cmpsb
lret
rcll
fidivs
cmpsl
aam
shlb
adc
out
sub
scas
enter
push
bound
sub
adc
xchg
xorl
aas
dec
lods
movsl
movsb
aam
stc
sbb
dec
insl
inc
mov
in
fnstcw
push
xchg
xchg
mov
or
sbb
ds
add
and
xlat
int3
cld
stos
sahf
jecxz
insb
aas
xchg
mov
mov
je
add
aad
mov
enter
subb
mov
fbstp
xor
fs
mov
sarb
xchg
sub
mov
enter
into
and
mov
pop
hlt
push
scas
cwtl
mov
ret
and
add
sub
push
or
xchg
inc
das
sbb
dec
roll
stos
mov
movsb
or
or
daa
pop
rolb
pop
cmp
pop
pusha
jo
test
xchg
inc
vpcmpeqb
mov
xor
adc
mov
and
and
fcmovnu
and
cmp
dec
sti
into
mov
in
sbb
xchg
sti
pop
in
mov
adc
sub
jns
xchg
push
or
adc
mov
jge
mov
sbb
push
movsb
stos
adc
fisttpll
jle
sbb
sbbl
mov
pushf
pop
inc
push
fucomi
sub
pop
pop
xchg
sbb
and
mov
pushf
cmp
cwtl
into
clc
mov
mov
mov
jno
xchg
jae
xor
pop
jns
cmc
into
xor
int3
inc
sahf
or
gs
xor
fwait
jne
aaa
loop
into
repnz
stos
cmp
ja
push
xchg
jg
push
push
add
fsubrl
outsb
cmp
test
sbb
mov
push
cs
fdivrl
mov
cmp
fldenv
sbb
sti
adcb
leave
test
rcrl
or
push
pop
les
jmp
ds
sub
mov
rcll
push
add
dec
movsb
xor
and
jle
nop
fnsave
call
pop
mov
ss
cmpsb
dec
ret
inc
inc
sub
inc
pop
hlt
je
movb
ja
les
pop
repz
dec
out
mov
mov
xor
loopne
icebp
mov
in
mov
sub
shrl
insb
inc
xor
xchg
popa
jno
fwait
pop
add
dec
movsl
cmpsl
cmpl
es
inc
add
add
sub
sbb
or
cld
cmp
and
pop
scas
aad
inc
data16
mov
or
dec
jle
inc
jmp
movsl
sbb
scas
repnz
cmpsb
jb
loopne
sbb
test
cmp
inc
sub
aaa
insb
jb
test
push
dec
jecxz
push
jg
repnz
test
call
aaa
pop
mov
mov
mov
cli
pop
and
dec
mov
push
loop
or
ret
es
addr16
jecxz
dec
dec
hlt
hlt
xchg
xchg
pop
xor
lods
pushf
stos
fcoml
in
outsb
sub
xchg
test
jle
mov
fiaddl
dec
dec
movsl
js
call
mov
jnp
std
imul
int3
add
outsb
mov
jae
hlt
cmpsl
mov
addr16
and
mov
adc
dec
mov
sub
shlb
pop
mov
lds
iret
clc
inc
inc
fwait
cmc
cwtl
loopne
test
mov
aad
std
xchg
cld
mov
scas
xor
sbbb
dec
xor
push
mov
add
cld
lock
dec
insb
add
andb
fmull
inc
sub
cmp
cld
and
jmp
mov
pop
aam
push
sbb
and
add
movsb
fnstenv
mov
pop
jno
xchg
cmp
xor
aad
pop
cmp
and
pop
jecxz
cld
mov
and
xorb
es
mov
test
mov
lods
sub
les
lcall
jmp
std
leave
adc
push
mov
mov
mov
cwtl
popf
imul
cmp
stos
rcrb
inc
fistpll
mov
inc
jge
aas
nop
xor
enter
adc
or
mov
in
imul
rcll
enter
cli
pop
and
push
mov
jns
mov
cmc
push
aad
je
mov
cs
ss
lret
mov
pusha
cmp
inc
add
fiaddl
xchg
sbb
add
out
jb,pt
push
add
mov
les
jge
movsbl
xor
and
ja
jae
addb
add
jbe
mov
mov
mov
sub
rorl
sub
add
adc
jmp
mov
push
add
out
sbb
mov
jbe
xchg
inc
gs
add
mov
movsb
jle
inc
sbb
and
jle
inc
test
loope
add
mov
inc
lods
out
inc
inc
inc
nop
mov
fbstp
std
repz
mov
cmpsl
pop
cmp
mov
sub
test
xchg
mov
addr16
pop
dec
loop
lock
pushf
insb
mov
mov
or
loope
out
test
imull
out
cli
lret
inc
adcb
adc
xor
mov
out
je
or
mov
push
stos
sti
mov
xor
popf
mov
rcll
push
adc
les
jae
int3
mov
or
insl
mov
add
scas
jmp
push
add
roll
dec
mov
mov
pop
dec
mov
xor
outsb
mov
insb
xor
jno
stos
xor
arpl
jae
xchg
xor
aad
adc
add
adc
mov
lea
incb
lods
mov
sbb
lcall
out
and
lret
leave
add
std
cmp
ljmp
mov
xor
cmp
xchg
subl
sti
stos
je
jbe
dec
movsb
nop
das
mov
cmp
cltd
mov
mov
stos
cmp
stos
xchg
dec
dec
xchg
xchg
mov
fsubrl
int
jae
dec
stos
fisubrl
sbbb
les
push
or
outsb
movsl
repnz
and
sbb
inc
push
in
aam
scas
in
rclb
mov
pop
mov
in
mov
cli
xchg
out
repz
les
sub
or
mov
sahf
mov
outsb
push
out
xor
mov
stc
test
and
and
shrb
lods
mov
xchg
jbe
mov
lds
sbb
lods
sub
add
mov
sub
test
adcb
int
mov
push
aad
xchg
sbb
scas
mov
in
jle
mov
int
movsb
out
adc
cmp
xor
mov
dec
add
sub
mov
pop
jge
es
mov
pop
iret
adc
decl
pop
das
inc
and
je
add
cmp
ss
sub
sub
lea
and
pop
sti
adc
push
mov
fstpt
sub
or
inc
xchg
mov
pop
mov
and
pop
popa
cmc
sbbb
xchg
push
scas
mov
cmp
insl
mov
sub
bound
xor
lret
lds
inc
jne
mov
in
or
inc
push
stos
push
adc
push
les
orl
fnsave
add
inc
mov
and
pop
inc
dec
lock
push
aas
pop
ja
lods
mov
pop
iret
scas
adc
enter
jg
cmp
je
dec
cmpsb
sarb
cmp
push
push
dec
ret
lret
mov
mov
jmp
cmp
sub
daa
repz
stc
add
fcomp
or
push
and
data16
push
mov
pop
insl
sbb
and
ret
sub
xchg
dec
inc
sbb
aas
fcoms
cld
sbb
clc
mov
xchg
icebp
push
or
mov
jle
add
and
pusha
jbe
icebp
mov
hlt
pop
add
insb
jg
lds
or
out
inc
test
icebp
ret
xor
pop
dec
rcll
xorl
aam
jns
pop
stc
xchg
and
xor
cs
dec
sbb
sub
xchg
ljmp
cltd
sbb
add
loop
aam
push
into
inc
or
aaa
cli
mov
shr
cmp
pop
xor
adc
lods
jmp
test
or
push
jp
enter
sbb
pop
sbb
ret
sbb
dec
sar
ja
imul
xor
fwait
ds
push
jo
dec
xchg
aam
mov
movsb
daa
push
gs
push
out
sti
cltd
fs
int3
pop
insl
push
push
mov
mov
insb
test
xor
mov
dec
imul
xchg
bound
dec
mov
cli
test
pop
data16
lock
stos
xchg
dec
not
push
push
push
inc
stos
inc
and
xor
repnz
addl
mov
sub
lods
mov
pop
ljmp
rcrb
dec
or
inc
and
mov
pop
mov
xchg
or
int3
shll
jns
or
add
imul
scas
or
out
xor
inc
mov
xorl
add
inc
mov
lret
mov
dec
js
packssdw
test
bound
testb
dec
or
mov
pusha
lcall
jmp
fs
pop
aam
push
jge
push
jge
mov
sub
int
pushf
add
lock
test
jne
jo
cmp
je
pop
lock
vsubps
mov
fcom
pop
test
daa
ret
mov
pop
push
mov
sub
loopne
sbb
clc
sahf
inc
shrl
sbb
stc
push
aad
aaa
out
inc
xlat
xchg
pop
repnz
mov
div
sbb
ljmp
sub
mov
es
in
dec
mov
out
sar
into
or
repz
xchg
lods
adc
add
cli
dec
call
pslld
xlat
dec
dec
lret
pop
das
mov
movsl
or
scas
jle
xchg
cmpb
fsubrs
fcmovbe
mov
jp
sub
mov
or
push
mov
add
stc
pop
sbb
iret
aam
out
or
daa
das
ja
pop
std
pop
nop
cs
or
repz
in
cmpl
pop
push
jge
lea
xor
dec
sub
pop
push
pop
mov
cmp
cmpxchg
je
mov
insb
xchg
pop
or
out
xor
cmp
add
out
fidivs
add
js
cmp
out
inc
movsb
ljmp
mov
adc
push
and
adc
mov
mov
in
fistpll
popa
xor
rcr
fs
sub
jb
fsts
nop
xchg
pop
sbb
push
push
mov
nopl
dec
mov
mov
cltd
ja
nop
loopne
push
aam
outsb
jnp
ljmp
add
aas
jbe
fcoms
sbb
andb
sti
cltd
and
aam
test
cmp
lret
push
sbb
mov
ja
xchg
cli
or
insl
add
fsts
push
sub
fs
cmpsl
and
lds
sbb
mov
xchg
scas
arpl
loope
inc
and
inc
push
lods
ret
inc
mov
imulb
lds
mov
lret
adc
lods
push
outsb
xchg
ljmp
lahf
stc
test
clc
pop
push
push
and
scas
mov
test
fwait
sub
ficompl
stc
mov
cmpsb
inc
inc
pushf
adc
out
les
test
xchg
rcrb
mov
mov
push
jle
mov
xor
fcmovbe
mov
jl
add
add
ret
ffreep
mov
mov
jmp
adc
inc
and
push
xchg
orl
enter
mov
addl
popa
fsts
addps
pop
movsb
fwait
pop
cmp
jecxz
cwtl
mov
ret
mov
push
sahf
xchg
or
fucomp
lods
xor
fbstp
mov
ret
add
jmp
shl
test
inc
inc
movsb
cwtl
or
test
scas
test
loope
cltd
rclb
pop
sbb
fdivl
push
push
data16
mov
fstl
jo
es
xor
mov
pop
rcll
sub
pop
cmpb
adc
sbb
pop
inc
cli
mov
gs
std
int
adc
fistpl
pop
aam
cmc
fisubs
xor
cmp
and
in
rcrl
popa
fldl
nop
push
sub
test
pop
mov
push
pop
mov
pushf
and
mov
sbbl
fidivrl
aaa
mov
dec
xchg
in
shll
ret
sbb
cwtl
rcrb
lods
out
mov
es
stos
or
shll
and
test
inc
movsb
jno
les
shlb
jle
fisubrs
and
imul
xchg
xchg
adc
adc
push
das
xchg
mov
and
arpl
pop
arpl
jae
push
jmp
and
jmp
mov
sbb
add
dec
fldenv
xor
or
fmuls
int
aaa
sub
inc
js
mov
push
dec
jnp
sub
lds
push
hlt
ja
pop
push
sbb
rolb
fsubrs
jnp
mov
data16
shl
pop
test
push
cwtl
mov
xchg
ljmp
jbe
scas
or
or
bound
cmc
movsl
subb
mov
and
popa
cltd
cmp
lcall
hlt
dec
xor
jo
mov
loopne
pop
adc
mov
les
insl
adc
lock
inc
mov
pop
mov
enter
hlt
jb
int
daa
std
and
adcb
fstp
xchg
stos
pop
xchg
subl
mov
lcall
icebp
jne
adc
pop
pushf
inc
in
ljmp
xchg
lahf
pop
mov
roll
xor
bound
jne
mov
push
xor
adc
push
ss
aas
xchg
daa
fcmovb
cmc
andb
inc
je
or
or
cmp
lcall
lock
mov
adc
push
adc
into
xlat
lret
xchg
sub
and
mov
mov
stos
lods
adc
push
xchg
mov
pop
adc
sbb
js
nop
xor
inc
in
fs
dec
and
int3
sub
sub
sbb
add
adc
jne
cmp
ss
in
call
or
pop
jns
bound
mov
mov
std
repz
in
movl
bound
xchg
inc
jne
movsb
icebp
js
lock
xchg
in
pusha
ds
xor
cmp
call
lahf
in
stos
sbbb
sbb
outsl
xchg
adc
pop
sbb
cli
std
call
popa
aaa
jp
adc
sub
ret
nop
inc
loope
notl
adc
popf
stos
inc
fs
jb
int3
mov
gs
es
mov
inc
mov
mov
les
sbb
and
adc
mov
filds
stos
inc
lock
mov
xor
out
dec
aad
add
adcl
xor
mov
push
dec
mov
pusha
daa
jp
lcall
lock
sbb
test
jmp
cs
sahf
adcb
insb
shrl
xchg
cli
sbb
sub
pop
mov
lods
lds
adc
xchg
push
xor
jo
xchg
adc
or
gs
lods
add
or
ret
mov
push
pop
pop
dec
nop
negb
dec
sbb
pop
xchg
pop
mov
add
or
movsb
lahf
gs
inc
add
pushf
xor
data16
mov
test
popa
jne
mov
aaa
adc
out
or
stos
int
inc
adc
repz
or
fiaddl
or
inc
imul
inc
sbb
addl
stc
mov
sbb
mov
mov
cmc
je
mov
mov
addl
imul
inc
adc
scas
rcrb
mov
add
xchg
push
je
dec
mov
or
xchg
rorb
imul
xchg
sbb
pop
adc
into
mov
and
xor
or
inc
xchg
pop
dec
xor
adc
cmp
pop
loopne
test
and
mov
lods
enter
mov
push
mov
push
dec
and
hlt
adc
lea
subb
sbb
bound
aad
xor
xchg
fdivp
jno
negb
jmp
bound
in
inc
lahf
lahf
mov
scas
pop
pop
xlat
mov
mov
adc
or
insl
xor
sbb
push
test
xor
push
xor
or
movsb
sahf
dec
mov
dec
xor
mov
and
fwait
nop
mov
jno
sub
fld
add
addb
imul
movsb
rclb
pop
data16
jb
push
sbb
pop
cmp
pop
mov
push
adc
xor
adc
sub
sbb
frstor
pop
and
xchg
cmp
mov
mov
icebp
xor
xchg
xchg
cmc
xchg
in
push
sub
and
ja
push
mov
adc
adc
mov
movsl
gs
cmc
mov
sub
popa
cmc
clc
hlt
add
jbe
cmp
pop
cmpsb
fwait
add
lret
sbb
push
rcrb
jmp
outsl
insl
ret
mov
roll
add
or
cmp
les
cmp
int
popf
jge
xor
stc
leave
add
hlt
sti
mov
and
ret
adc
mov
lret
ror
js
xor
and
leave
jmp
cli
andb
insb
cltd
test
negb
cmp
add
mov
sbb
sub
push
inc
out
push
or
int3
loope
xchg
sbb
jbe
sub
sbb
xchg
and
push
adc
xor
std
lret
jecxz
mov
push
lods
push
adc
dec
std
or
sbb
push
pusha
sbb
gs
mov
es
lods
movsl
ficomps
dec
gs
hlt
fsubs
adc
shrl
outsb
push
jg
push
mov
and
data16
add
xchg
int
push
sub
out
pop
and
jl
fsubrp
loopne
bound
sub
sub
sti
xor
mov
sub
adc
dec
std
lock
xchg
into
leave
add
cmp
push
jbe
aad
ljmp
inc
and
or
and
add
orb
xor
xor
xchg
sbb
call
mov
stc
push
pushf
push
inc
repz
scas
stos
xor
xchg
lret
mov
mov
push
jno
enter
test
cmpsb
pop
lea
xchg
adc
mov
adc
xchg
add
repz
and
cmp
xor
push
das
lods
cmpsb
lret
inc
jecxz
xchg
shl
popf
pop
out
cmp
call
les
mov
cltd
jle
mov
lods
ret
xor
jns
in
data16
arpl
cmp
leave
xlat
dec
hlt
cwtl
and
xor
inc
cmp
xor
lahf
inc
hlt
cmc
aad
dec
or
hlt
add
mov
out
sbb
sbb
lock
sbb
repz
loopne
aas
dec
icebp
inc
paddsb
push
fadds
cmpsb
pop
ljmp
or
rolb
inc
jg
pop
rcll
xor
cmp
xlat
int3
cmp
mov
and
or
xlat
inc
xor
test
test
adc
add
sub
inc
lcall
and
mov
and
xchg
push
jge
inc
lcall
inc
mov
or
icebp
push
cmpsl
push
mov
lea
test
std
inc
test
add
push
nop
xchg
inc
or
sub
es
add
mov
and
jne
or
adc
imul
and
lods
sbb
add
std
xor
and
push
jmp
adc
or
inc
mov
or
xor
bound
xlat
jne
lret
ja
in
bound
inc
mov
push
je
fcmovb
iret
sub
movl
push
iret
cwtl
and
aad
adc
ljmp
and
and
cmp
sarl
xchg
and
movsl
pop
loop
enter
add
sub
jne
push
mov
cwtl
outsb
rcrb
ret
out
cmp
fistl
fnstenv
mov
lahf
test
cmpsl
mov
cmpsb
test
or
fldenv
sti
push
jl
pushf
rcrl
adc
mov
aas
push
ds
adc
inc
dec
cld
add
into
daa
aam
notb
arpl
gs
push
add
insb
dec
leave
stos
push
mov
test
push
repz
sbb
inc
shll
sbb
nop
add
in
dec
xchg
inc
dec
lds
lds
and
cmp
pop
outsb
jae
leave
orb
inc
ljmp
xchg
jge
sbb
and
adc
leave
nop
push
lods
pusha
xchg
fs
insb
testl
adc
or
xlat
add
sbb
dec
push
xorl
fstl
inc
mov
add
movsl
bound
mov
sbbl
add
jbe
xor
insb
scas
and
repnz
mov
test
push
ja
inc
je
leave
jp
outsb
adc
mov
fwait
push
xchg
inc
jmp
insl
push
fprem
jge
fldz
pushf
int
test
in
jns
das
or
sbb
mov
jb
cmpb
xchg
fcompl
or
mov
stos
jmp
pop
adc
cwtl
sar
jns
xchg
cmp
mov
dec
sub
mov
xor
pop
push
pop
adcb
sarl
incb
jnp
push
adc
inc
jb
out
lea
pop
push
add
clc
xor
movsb
push
movsb
xchg
das
popa
push
jge
shll
es
leave
push
adcl
push
movb
cltd
das
xchg
mov
mov
sub
daa
cltd
ljmp
add
and
inc
mov
int3
or
and
adc
in
add
lahf
push
je
cs
inc
call
jmp
and
in
push
inc
clc
dec
outsl
xor
lahf
dec
mov
outsb
adc
std
push
lods
push
ja
cmpsl
mov
pop
mov
pusha
mov
ja
dec
push
sete
cmp
iret
inc
adc
sti
or
testb
add
imul
or
jle
xchg
add
data16
into
mov
add
lret
cltd
jl
jg
push
xor
add
and
push
incb
sti
xchg
icebp
cs
xchg
jns
add
jp
outsl
aas
mov
fwait
inc
arpl
and
fadds
xchg
jg
lret
loop
insb
adc
and
push
sbb
mov
jg
sub
sbb
jg
jno
or
adc
lds
lea
sub
and
movsl
dec
dec
add
test
addr16
inc
push
jmp
mov
or
shl
rolb
mov
and
adc
push
xor
push
int3
push
pop
dec
lock
or
pop
mov
push
scas
xchg
mov
aam
jb
std
lods
jnp
mov
shr
jae
mov
in
push
std
jl
add
jmp
sbb
aaa
ret
insb
cwtl
int
sahf
out
xchg
pop
mov
lcall
sahf
insb
mov
xchg
add
mov
jmp
xchg
push
mov
and
je
mov
scas
dec
mov
xchg
rolb
test
sbb
adc
xchg
lds
int
xchg
shl
adc
mov
sbbl
lret
enter
mov
adc
fisttpll
mov
aad
stos
sub
sub
sub
test
nop
mov
jnp
test
xor
pop
mov
fsts
call
xchg
mov
inc
fnstcw
push
xor
pop
icebp
sahf
cmpsb
lods
mov
inc
addr16
xchg
jne
cltd
stos
jae
test
mov
push
popf
pop
gs
aam
xor
jg
ror
xor
nop
js
cmp
jns
scas
daa
cmp
and
in
das
lret
jmp
cmovbe
inc
sbb
sub
aas
insl
fsts
repnz
push
add
jne
push
les
popa
push
lods
shrb
mov
add
or
xor
xor
bound
and
inc
je
lock
mov
movsl
push
sub
inc
mov
add
mov
fs
ja
loop
xchg
scas
maxps
mov
add
pop
and
adc
adc
mov
push
stos
mov
fldl
dec
dec
lea
lds
push
xlat
xor
sub
into
rclb
popa
outsb
push
ret
outsb
pop
sub
cmp
pop
or
subb
jo
loope
aam
or
fs
cli
cli
and
stos
mov
sarl
lret
aaa
adc
stc
push
jp
push
cmp
orl
mov
pop
adc
pop
xor
call
shll
inc
outsl
and
in
jecxz
xor
and
lock
jge
push
push
sti
fwait
jns
mov
and
push
rcll
add
ja
cs
call
outsl
xor
and
add
xor
and
enterw
gs
inc
in
add
cmp
or
mov
and
jne
loop
jp
andb
mov
test
and
adc
inc
lret
fisubrl
in
lea
inc
and
and
inc
lahf
sub
jg
mov
sbb
aad
sbb
roll
pop
add
or
mov
sbb
ljmp
add
ds
jge
pop
mov
cld
sti
aam
nop
lods
rol
and
outsb
hlt
adcl
inc
add
data16
lea
xor
sti
or
dec
sbb
xchg
imulb
movsb
xor
arpl
push
mov
outsb
add
jp
rcrb
or
adc
adc
mov
jle
cmp
inc
je
mov
push
sti
mov
pushf
addr16
and
push
add
inc
fmull
add
push
ror
inc
xor
loop
fisttpl
insl
test
movsb
cs
test
mov
mov
sub
add
jo
inc
add
rcrb
add
inc
pop
lret
jo
call
je
push
dec
hlt
cmp
cwtl
push
sub
shll
and
popf
scas
decl
push
stos
mov
loopne
cli
or
xchg
mov
adc
ljmp
fmull
inc
push
pop
jb
pop
adc
adc
shlb
cli
add
sbb
pop
inc
sbb
add
push
enter
shlb
lea
lcall
cmpsl
or
pop
add
xor
jp
cwtl
fisttpl
pusha
shl
mov
sbb
jp
pop
adc
sti
test
inc
sbb
rorl
inc
dec
popa
mov
roll
mov
or
cmpb
andb
int3
inc
cmp
scas
adc
and
or
adc
xor
in
sub
rcrl
pop
add
push
sarb
outsl
and
sbb
movsb
adc
test
pushf
rcll
jne
pusha
push
pop
or
and
xlat
std
addr16
ljmp
loop
jl
xor
movsb
dec
and
repnz
adc
test
add
and
inc
inc
pop
push
mov
or
inc
mov
test
cmp
les
xchg
cmp
push
dec
pop
aaa
adc
test
mov
out
adc
iret
dec
xor
jp
movsb
mov
notb
and
jg
mov
mov
and
xchg
cmc
add
fcoms
clc
loope
add
push
sbb
test
outsl
aam
test
pop
sbb
aam
jb
fs
mov
lahf
ret
dec
add
or
add
faddp
sbb
fs
push
jl
ljmp
sbb
push
pop
mov
add
rol
cmovg
pop
add
imul
pop
std
cld
lea
out
inc
jne
subb
shrb
ja
dec
dec
fbstp
lret
mov
add
repnz
ret
rcrl
or
dec
addb
mov
aam
mov
mov
pop
or
mov
mov
xchg
pushf
in
es
es
push
test
mov
std
daa
sub
mov
and
add
mov
add
imul
popa
xor
stos
push
mov
and
inc
dec
mov
push
xchg
popf
xchg
test
and
sub
nop
mov
leave
inc
pop
add
nop
rcrb
dec
adc
xor
out
and
xchg
je
or
fmull
in
movsb
pop
jbe
sub
mov
shll
mov
xchg
fmull
sub
pop
fcoml
mov
aaa
fmull
pop
lds
add
sbb
xor
mov
mov
pushf
push
mov
test
add
fs
adc
inc
mov
cs
out
adc
inc
push
movsl
add
enter
xlat
dec
adc
int
fs
or
mov
sbb
mov
stos
jno
rclb
dec
adc
cld
sub
sbb
sub
rolb
add
add
loop
das
sub
sarl
jmp
out
andb
fs
and
adc
rcll
mov
out
sbb
push
lods
outsl
jbe
pushf
mov
outsb
daa
fwait
inc
mov
jb
push
or
jno
xchg
dec
inc
inc
mov
push
xchg
cmp
mov
xchg
push
jb
sub
sbb
loope
push
adc
mov
push
popf
add
sub
roll
movsb
stc
aaa
inc
pop
cmp
dec
jno
jae
cmp
mov
shlb
mov
lcall
and
shll
add
inc
sbb
push
insb
mov
mov
cld
rolb
xlat
adc
xchg
xchg
and
loop
movsl
push
in
mov
sbb
xor
daa
push
es
imul
frstor
fisubs
fsubl
dec
jbe
cmpsl
mov
jb
push
cli
stos
mov
out
cmp
out
loope
mov
lds
dec
or
jae
es
pop
add
jle
xor
xor
int
inc
mov
pusha
jmp
lods
cmp
pop
jb
adc
sahf
cs
pop
dec
push
xor
mov
mov
adc
movsl
call
mov
push
or
push
and
inc
and
xor
arpl
es
mov
push
inc
leave
and
and
adc
aam
push
hlt
pop
cmp
mov
xor
push
and
dec
lahf
jg
iret
insl
shll
xor
stos
xorb
jne
scas
movsb
nop
loop
jno
sub
insl
mov
xor
dec
rcll
adc
and
mov
inc
mov
push
xor
aaa
inc
inc
mov
xchg
mov
mov
mov
xchg
movsl
push
ljmp
and
das
cmp
inc
sub
xchg
mov
les
pop
dec
inc
popf
movsl
xchg
cwtl
mov
popa
mov
push
pop
and
adc
and
sarl
or
adc
mov
jne
in
shrl
stos
sub
xchg
and
movsl
sub
scas
adc
push
mov
adc
into
int3
jb
ret
pusha
push
int3
hlt
add
call
dec
adc
and
and
pop
sub
sti
push
bound
inc
push
mov
jns
cwtl
ss
push
pop
mov
and
sbb
xchg
or
fiaddl
pop
mov
mov
or
pusha
cs
insb
dec
es
daa
mov
inc
out
vpunpcklbw
ds
add
rol
lahf
cmpl
mov
loope
sub
add
sub
sub
sub
adc
dec
jbe
dec
sbbb
lods
xchg
pop
sbb
movsb
aam
stos
sub
adc
xchg
sub
shll
adcl
pop
xchg
jecxz
sbb
add
mov
loop,pn
loopne
mov
push
lahf
mov
jg
push
jmp
jg
xchg
inc
mov
jmp
rclb
outsb
and
adc
mov
pop
aad
fisubs
pusha
daa
push
sbb
xchg
pop
lcall
jne
mov
mov
aad
sbb
inc
push
push
dec
pop
test
lock
je
cmpl
dec
pop
cmp
dec
sbb
jae
sbb
xchg
data16
and
insl
aam
xchg
test
xchg
call
pop
bound
loop
lea
lds
mov
push
and
push
loopne
jnp
gs
sbb
mov
lock
cltd
cli
lods
inc
pop
repnz
imul
adc
lds
dec
cltd
push
and
jle
lcall
sbb
mov
jle
sub
adc
jmp
mov
add
mov
dec
stos
and
loopne
xor
cmpsb
sbb
and
in
mov
add
pop
adc
mov
cmp
daa
lahf
inc
hlt
and
or
jmp
sahf
xchg
dec
cs
fs
rorb
test
jnp
and
int
xchg
cmp
arpl
out
in
sbb
movsl
pushf
sub
pusha
std
subb
jo
fcoml
xor
mov
dec
push
inc
add
dec
xchg
push
dec
push
dec
mov
xchg
push
pop
aaa
fs
or
adc
daa
and
sbb
push
ljmp
int
and
addr16
cmpsl
les
jno
jno
pop
push
or
pop
and
and
jmp
mov
push
or
inc
mov
mov
jns
jbe
or
addr16
xchg
or
daa
int
mov
inc
insl
xchg
mov
test
dec
adc
outsb
xor
pop
cmp
mov
inc
and
int3
pusha
push
mov
fmull
cmp
outsl
inc
insb
lds
and
pop
fiaddl
repnz
xchg
lea
add
out
pushf
mov
push
outsl
les
imul
in
mov
and
out
loopne
or
push
adc
ss
enter
mov
mov
sub
mov
insb
and
enter
xor
ret
dec
adc
outsl
cmc
mov
add
rorl
loope
sarb
inc
in
jo
notb
inc
mov
adc
popf
lods
sbb
and
and
add
add
push
jle
arpl
pop
cld
inc
adc
outsl
sbb
cmp
cmp
outsb
xchg
outsl
sub
ss
xchg
sbb
sub
pop
mov
cmp
rorb
popf
adc
imul
pop
mov
xor
nop
lcall
or
dec
push
sbb
inc
cmp
js
lret
mov
push
enter
jne
dec
mov
adc
nop
adc
outsb
leave
lods
arpl
mov
xchg
data16
and
xor
adc
adc
and
int
inc
push
stc
mov
sbb
inc
or
mov
xchg
test
xchg
xchg
xchg
inc
movsb
xchg
ljmp
mov
int3
push
mov
push
push
xchg
rcrb
movsl
psubq
push
and
stos
xchg
sub
adc
popf
add
mov
xchg
sub
and
cmpsb
jp
push
test
lods
fsubrl
shrl
mov
cwtl
fisubrs
jl
dec
test
dec
mov
push
loopne
movsl
mov
and
push
int
cltd
inc
andl
mov
jnp
js
and
test
pop
pop
xorb
into
add
inc
xchg
popf
dec
les
ret
and
push
inc
cmp
adcb
lret
es
jns
cmpsl
jmp
cli
sub
imul
imul
test
insb
movsl
jmp
dec
lcall
cli
push
movsb
jmp
cmpsl
mov
imul
cmpsb
iret
test
xchg
imul
ds
cli
mov
push
lcall
cli
aam
jmp
xchg
cmpsb
dec
inc
xor
sbb
lcall
cli
and
sahf
es
sti
jl
jmp
cli
cmpsb
iret
jo
cmpsb
jmp
cli
pushf
sbb
lcall
cli
test
addr16
subl
dec
pop
movsl
jmp
cli
out
dec
lcall
add
or
and
mov
movsl
sbb
repz
mov
jp
sub
xchg
mov
test
nop
push
dec
push
push
push
icebp
leave
mov
pop
es
cmpsb
mov
or
fwait
mov
les
sub
lock
jmp
cli
xchg
icebp
insl
sbb
test
sbb
xor
hlt
leave
outsb
rcll
push
xor
mov
mov
je
mov
dec
add
push
adc
push
sub
and
push
ss
push
jb
cs
xorl
lahf
hlt
jns
rcl
hlt
mov
out
dec
lahf
hlt
dec
dec
shrl
jge
sarb
and
jno
pop
cwtl
dec
sbb
push
dec
roll
sub
hlt
xchg
and
xchg
inc
pop
sub
out
jmp
sbb
hlt
loope
adc
pop
loopne
mov
jnp
mov
insl
xor
push
inc
lods
dec
js
inc
mov
jb
aad
xchg
dec
mov
pop
and
inc
sub
test
push
scas
pop
inc
cli
dec
cmp
rolb
les
dec
inc
and
inc
jne
insl
roll
or
adc
sub
xor
sahf
sub
fs
arpl
andb
xor
fcoml
das
scas
dec
push
push
shlb
push
jmp
outsb
dec
dec
shr
stos
jmp
insl
aam
dec
push
insl
jge
xor
adc
xor
movsl
sahf
dec
sub
les
je
xor
lods
mov
xchg
in
repnz
lods
into
dec
dec
shl
stos
xchg
xor
outsb
in
dec
xchg
jo
fwait
xor
mov
dec
rorl
icebp
rorl
inc
cmp
popf
in
jge
popa
pop
das
adc
enter
or
inc
mov
add
into
subl
out
bound
stos
test
pusha
sub
out
and
imul
mov
sub
mov
adc
mov
les
xor
mov
lock
jmp
std
push
add
fldl
and
inc
insb
or
lods
sub
fsubrs
hlt
in
aas
aam
push
fsubl
mov
xor
sbb
insb
xchg
sbb
dec
shrl
fs
incl
mov
lods
rcrb
in
gs
cmpb
and
xor
inc
pusha
pusha
repz
xor
fdivs
push
shll
cmp
popf
jp
fisubrl
adc
pop
addr16
loop
cmp
cmp
or
pop
int
jmp
aad
imulb
shll
pusha
lock
dec
push
addr16
lods
ds
or
sarl
or
adc
dec
in
mov
mov
daa
mov
in
adc
enter
adc
jno
dec
adc
mov
cmc
loop
inc
sahf
mov
ss
imul
and
add
in
add
adc
xor
dec
out
testb
pop
push
lods
add
and
ja
in
icebp
pop
aam
and
mov
push
add
loope
inc
mov
push
mov
xor
test
cmp
ss
fdivrs
lods
mov
mov
inc
dec
mov
or
cltd
mov
das
inc
sbbl
lret
adc
mov
add
mov
xchg
sbb
mov
sahf
or
dec
test
je
push
inc
and
hlt
xchg
mov
pop
les
in
or
movsb
mov
sti
or
stos
stos
ret
mov
mov
pop
fdiv
cmc
push
sbb
jno
adc
or
and
push
insl
hlt
fcmovnu
add
inc
push
nop
subb
insl
pop
aad
xor
sub
cmp
xor
and
mov
cmp
lods
sub
jno
pusha
or
out
icebp
inc
mov
cltd
push
mov
dec
ret
pop
and
cs
orl
ljmp
or
xor
dec
fidivrl
push
or
rclb
sbb
rcrl
adc
xchg
gs
divl
adc
lahf
fisubrl
cld
cmpb
test
pop
add
cmp
sub
jl
cs
leave
or
push
les
leave
outsb
push
or
adc
xchg
adc
adc
cmpsb
mov
aas
adc
add
sbb
pop
cltd
pop
mov
push
jne
out
sub
xchg
or
int3
lret
in
xchg
jmp
xchg
jg
add
mov
push
shll
xor
inc
push
insl
add
dec
jno
sbb
adc
mov
pop
mov
orl
xchg
lret
pop
mov
mov
aam
rcll
dec
jns
adc
movsl
in
mov
adc
ret
or
and
push
push
mov
in
rorl
dec
adc
cwtl
adc
clc
cmp
dec
jne
push
popf
xchg
cmp
ret
dec
inc
inc
jmp
xorl
vdivpd
lahf
lahf
loope
in
pop
xor
lock
xor
xchg
test
stos
imul
cmpsb
negb
jnp
rcr
push
push
cmpsb
sub
push
rcr
mov
xor
jle
add
out
out
repz
movsb
dec
inc
sbb
dec
pop
jp
subl
mov
jno
sbbl
sbb
push
lea
pop
shrb
and
adc
inc
dec
test
mov
jecxz
add
or
lock
mov
pushfw
fiadds
xor
xor
add
enter
lds
lea
mov
rcrb
inc
cwtl
add
imul
out
push
dec
xor
xor
repz
sub
sub
pop
pusha
dec
scas
stos
std
into
xor
jecxz
jnp
xor
cmc
mov
pop
mov
cmpsb
fsubrl
push
xor
push
and
push
rorb
nop
sub
subb
addb
xlat
or
adc
and
test
rolb
xchg
mov
jbe
xchg
push
sbb
mov
xor
sbb
add
mov
jp,pn
adc
add
adc
xor
fdivrl
and
fimull
pop
push
aad
sarl
jecxz
ror
es
mov
sub
jl
xchg
push
mov
stos
movb
xchg
test
inc
outsl
mov
inc
sbb
push
pop
lods
sbb
lods
orb
sub
mov
cltd
dec
sub
mov
daa
mov
pop
jno
dec
add
mov
lcall
push
sbb
es
cltd
and
pusha
fwait
sbb
test
and
pop
fimull
sub
inc
in
leave
iret
mov
inc
jno
orb
pop
mov
into
jb
shll
mov
and
sti
add
pushf
loop
cld
adc
loope
jp
mov
cmp
popf
ret
dec
testl
loop
add
cmp
sub
inc
xor
sbb
jo
and
dec
jae
cltd
in
sbb
push
dec
cmp
add
add
shlb
adc
ret
xchg
mov
mov
sarl
mov
ss
test
pop
sub
aam
push
stc
xor
and
push
addb
mov
ja
jl
dec
movsb
paddsb
cmpsl
adc
sub
fwait
inc
flds
ficomps
push
xchg
pop
cmp
push
or
movl
mov
lods
int3
pop
cmp
call
fdivrs
in
stos
jns
mov
sub
xor
mov
push
lock
mov
pop
push
in
push
xchg
push
dec
xchg
cmp
push
xchg
add
xor
test
sbb
shrl
test
icebp
push
fcmovb
imul
pop
mov
adc
sbb
inc
and
das
and
pusha
or
pushf
mov
push
out
insl
arpl
scas
cmpsb
inc
jae
stc
pop
xor
or
push
and
lret
enter
adc
lock
xchg
add
adc
call
adc
out
sbb
popf
or
push
es
ret
mov
mov
and
xor
xchg
sbb
pop
cmp
test
and
adc
push
movsb
and
mov
sahf
xor
push
fcomps
scas
dec
sbb
and
ljmp
jmp
mov
push
test
dec
mov
daa
fldenv
xchg
in
jp
add
sub
xor
pop
add
add
int3
mov
add
mov
add
mov
add
add
xor
add
adc
add
lock
add
mov
add
add
mov
add
sahf
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
mov
add
add
jo
add
pusha
mov
add
add
dec
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jbe
add
data16
add
add
cmp
add
sub
add
incb
add
rolb
add
stos
xchg
add
add
outsb
xchg
add
add
xor
add
and
add
push
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pushf
xchg
add
xchg
add
add
addb
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
and
add
add
add
add
add
add
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
addl
add
add
push
add
push
test
add
test
add
add
adc
add
addl
repnz
call
addl
aam
add
lret
add
addl
stos
addl
mov
addl
mov
add
jl
add
sbb
add
insb
addl
bound
add
push
addl
dec
addl
inc
addl
cmp
add
addl
sbb
add
adc
add
mov
mov
add
addb
testb
add
addb
faddl
add
enter
mov
addb
cwtl
addb
addb
add
add
inc
addb
addb
sub
add
and
add
or
add
in
addl
add
add
add
inc
mov
add
add
outsb
mov
add
add
add
mov
add
add
add
mov
add
mov
add
add
add
add
adc
add
add
add
xorb
orb
xorb
add
adc
add
adc
add
adc
mov
add
add
aaa
add
adcb
add
xchg
add
addb
add
or
add
adcb
add
add
add
in
add
jae
add
mov
cmp
mov
stc
inc
add
xor
pop
xor
push
xor
add
inc
add
xor
add
add
add
inc
add
incl
ds
inc
add
inc
add
inc
inc
add
inc
add
pop
inc
add
inc
add
add
jno
add
insl
inc
add
je
add
jge
add
jle
add
addl
pusha
stc
inc
add
xchg
inc
add
inc
add
mov
inc
add
stos
inc
add
inc
inc
add
pop
inc
add
mov
inc
add
inc
add
icebp
inc
add
repz
add
std
inc
add
inc
add
add
aad
add
add
in
inc
add
inc
add
inc
add
or
mov
or
add
add
sbb
inc
add
add
inc
add
add
outsl
adc
add
inc
add
inc
inc
add
add
cmp
imul
roll
push
inc
add
inc
add
inc
inc
add
inc
add
jge
add
inc
add
push
inc
add
inc
add
incl
sarb
and
add
jge
add
inc
add
inc
add
jge
add
inc
add
jge
add
jge
add
inc
add
jge
add
inc
add
inc
add
ret
leave
xchg
inc
add
xchg
inc
add
incl
cmp
inc
add
inc
add
ret
jge
inc
add
mov
add
cmpsl
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
ret
cmpl
add
mov
jnp
inc
add
inc
inc
add
stc
inc
add
add
add
incl
add
add
cli
inc
add
add
add
call
inc
add
sti
inc
add
add
add
incl
add
add
sti
inc
add
add
add
call
incb
in
inc
add
add
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
inc
add
inc
inc
add
incl
add
mov
inc
add
add
add
add
add
add
add
add
add
incl
add
incl
push
add
add
incl
pop
add
add
incl
or
add
stc
incl
or
add
pop
add
or
add
adc
add
add
add
or
add
xor
inc
add
add
push
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
in
inc
add
incl
xchg
sbb
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
xlat
add
add
add
loop
inc
add
add
add
add
add
add
clc
add
add
add
add
inc
add
add
add
add
add
add
sbb
inc
add
add
add
inc
add
add
add
add
add
add
cmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
jns
inc
add
add
test
inc
add
add
popl
inc
add
add
lcall
add
add
add
add
add
add
add
add
sbb
add
iret
add
add
add
fiaddl
inc
add
add
add
add
add
add
out
add
add
add
stc
add
and
add
add
inc
add
add
add
add
add
add
sbb
inc
add
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
outsl
add
sub
add
jp
inc
add
add
add
add
test
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
iret
add
add
add
fiaddl
inc
add
add
add
add
cmp
add
lock
cmp
add
clc
add
cmp
add
clc
add
and
add
mov
inc
add
call
add
add
add
sbb
inc
add
jmp
add
ljmp
add
pushl
add
cmp
inc
add
incl
inc
add
add
add
inc
add
call
inc
add
lcall
inc
add
add
add
inc
add
ljmp
inc
add
add
add
inc
add
js
inc
add
add
push
add
add
call
lcall
jmp
add
add
enter
inc
add
add
add
mov
inc
add
add
add
xchg
sbb
add
add
add
call
add
add
add
and
add
mov
inc
add
add
incl
add
add
add
ret
add
add
add
add
incl
add
add
add
adc
inc
add
add
add
xchg
inc
add
add
add
incl
add
add
add
jae
inc
add
add
add
inc
add
dec
inc
add
dec
inc
add
add
add
xor
add
add
add
dec
inc
add
incl
inc
add
add
add
push
dec
inc
add
lcall
add
add
add
add
je
inc
add
add
add
dec
inc
add
dec
inc
add
add
add
inc
add
add
add
ljmp
inc
add
add
add
mov
inc
add
incl
inc
add
add
add
fmuls
add
incl
add
add
incl
add
add
cmp
add
add
add
add
or
inc
add
add
add
cld
dec
inc
add
add
add
inc
add
jmp
inc
add
add
add
dec
dec
inc
add
pushl
add
add
add
jo
inc
add
decl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
sbb
add
add
dec
inc
add
jmp
add
add
sub
add
xor
add
inc
add
add
dec
add
add
pop
add
add
imul
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fildl
add
jmp
add
add
add
xchg
sbb
add
add
inc
add
call
push
inc
add
add
add
rorb
jmp
inc
add
add
add
inc
add
add
add
hlt
dec
inc
add
incl
add
add
add
add
add
add
and
add
jmp
add
add
add
add
add
add
inc
add
add
add
add
add
dec
dec
inc
add
lcall
add
add
add
add
add
add
add
add
mov
add
dec
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
les
add
lcall
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
dec
pop
inc
add
add
add
adc
add
jmp
add
add
add
pop
dec
inc
add
jl
inc
add
add
add
orb
call
add
lahf
pop
inc
add
add
add
add
add
add
add
pop
inc
add
add
aam
inc
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
or
or
add
sub
inc
add
add
add
or
or
add
inc
or
or
or
push
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
or
pop
add
add
or
sbb
add
in
or
sbb
add
cli
or
sbb
add
or
inc
add
add
add
or
sbb
add
and
inc
add
or
push
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
sub
add
fimull
inc
add
add
add
or
sub
add
testb
add
add
add
inc
add
or
add
add
or
das
add
add
or
xor
add
cmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
je
inc
add
or
add
add
add
add
add
add
add
mov
add
add
or
cmp
add
or
and
add
movsb
dec
inc
add
push
or
add
add
clc
or
add
add
add
inc
add
add
add
or
add
add
pop
or
add
add
sub
add
add
test
inc
add
decl
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
test
inc
add
add
add
hlt
push
inc
add
jmp
add
add
add
add
add
add
add
add
inc
push
inc
add
dec
or
add
add
aam
inc
add
fmull
inc
add
add
add
or
in
or
push
or
cld
or
push
add
add
inc
add
add
add
inc
add
add
add
inc
add
lcall
inc
add
jmp
inc
add
add
add
inc
add
add
add
jl
inc
add
incl
or
incl
inc
add
add
add
inc
add
add
add
inc
add
lcall
inc
add
jmp
inc
add
ljmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
jmp
ljmp
add
add
mov
inc
or
add
dec
or
add
call
or
add
fmuls
add
add
loopne
inc
add
call
push
or
add
add
add
or
add
add
add
add
add
ljmp
or
add
sbb
add
and
xchg
sbb
add
add
push
inc
add
call
add
add
add
add
add
add
sbb
add
incl
add
add
inc
add
add
add
inc
push
inc
add
jmp
add
lods
or
add
mov
inc
add
add
add
add
or
add
iret
or
add
fimull
xchg
sbb
add
add
inc
add
push
or
add
sti
or
add
push
push
inc
add
add
add
push
inc
add
add
add
les
add
ljmp
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
ljmp
inc
add
pushl
inc
add
add
add
cmp
inc
add
decl
add
add
push
add
add
lcall
xchg
sbb
add
add
add
pushl
xchg
sbb
add
add
add
add
dec
push
inc
add
add
add
aam
inc
add
jmp
push
inc
add
add
add
clc
push
inc
add
clc
push
inc
add
add
add
sbb
inc
add
call
cmovb
add
add
sbb
inc
add
add
add
inc
push
inc
add
ljmp
inc
add
add
add
insb
push
inc
add
incl
inc
add
add
add
nop
push
inc
add
call
add
add
add
mov
inc
add
ljmp
inc
add
add
add
fcoms
add
jl
inc
add
add
add
cld
push
inc
add
call
lcall
add
add
and
add
ljmp
incl
add
add
incl
add
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
inc
add
add
add
add
inc
cmovb
and
add
movsb
push
inc
add
call
cmovb
and
add
enter
call
add
add
in
push
inc
add
cld
cmovb
and
add
adc
add
call
adc
and
add
xor
inc
add
ljmp
adc
inc
xchg
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
push
inc
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
push
inc
add
add
add
mov
inc
add
add
add
push
inc
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
add
add
add
add
pop
inc
add
lcall
inc
add
add
add
inc
add
add
add
push
pop
inc
add
js
inc
add
add
add
add
add
jl
inc
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
test
inc
add
add
add
pop
inc
add
incl
add
add
incl
add
add
xchg
inc
add
inc
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
clc
pop
inc
add
add
add
pop
inc
add
pushl
add
add
add
add
adc
add
add
rcll
inc
add
add
add
adc
add
add
in
adc
and
add
jl
inc
add
decl
adc
add
add
adc
inc
add
add
add
adc
add
add
sub
inc
add
add
add
adc
and
add
enter
call
inc
add
add
add
inc
add
add
add
inc
add
add
add
or
inc
add
pushl
add
jl
inc
add
incl
add
mov
inc
add
add
add
inc
pop
inc
add
jmp
add
add
add
add
jl
inc
add
mov
add
add
adc
add
add
int3
adc
and
add
test
inc
add
jmp
adc
and
add
fcompl
add
push
adc
add
add
cld
adc
incl
inc
add
decl
inc
add
add
add
inc
add
add
sbb
inc
add
jmp
inc
add
add
add
add
add
cmp
inc
add
incl
inc
add
decl
inc
add
add
add
inc
add
add
add
inc
add
add
add
push
pop
inc
add
ljmp
add
add
add
inc
add
add
add
add
add
add
add
cwtl
pop
inc
add
ljmp
add
add
add
add
add
add
adc
and
add
aam
inc
add
jmp
adc
add
add
in
adc
add
add
notl
inc
add
add
add
adc
and
add
adc
lcall
adc
and
add
dec
pop
inc
add
ljmp
inc
add
add
add
jo
inc
add
incl
inc
add
add
add
inc
add
add
add
inc
add
add
add
xchg
pop
inc
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
enter
jmp
add
add
add
add
add
add
adc
inc
add
dec
adc
add
add
xlat
adc
add
add
loop
inc
add
add
add
dec
pop
inc
add
clc
adc
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
jl
inc
add
ljmp
inc
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
rcrb
jmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
pop
inc
add
incl
add
mov
add
add
add
xor
add
jmp
add
add
add
add
add
add
inc
adc
add
dec
adc
add
call
adc
add
add
add
pop
pop
inc
add
jmp
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
push
adc
add
and
inc
add
adc
add
inc
adc
add
dec
adc
add
pop
adc
add
push
inc
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
add
adc
add
ficoml
add
call
add
add
adc
add
add
inc
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
je
inc
add
push
inc
add
add
add
mov
inc
add
lcall
xchg
sbb
add
add
pop
inc
add
pushl
add
mov
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
hlt
push
inc
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
fs
inc
add
pop
inc
add
add
add
add
add
add
add
add
stos
pop
inc
add
add
add
add
add
pop
inc
add
add
aam
inc
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
sbb
sbb
add
sub
inc
add
add
add
sbb
sbb
add
inc
sbb
sbb
sbb
push
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
sbb
daa
add
add
sbb
sub
add
in
sbb
sub
add
cli
sbb
sub
add
or
inc
add
add
add
sbb
sub
add
and
inc
add
sbb
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
add
sbb
cmp
add
ficompl
inc
add
add
add
sbb
cmp
add
negb
inc
add
add
add
call
add
add
call
sbb
add
add
sbb
inc
add
add
add
sbb
add
add
xor
inc
add
add
add
in
popa
inc
add
decl
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
sub
add
decl
add
add
add
add
add
add
add
add
add
add
sbb
and
add
bound
jmp
sbb
add
add
jmp
inc
add
add
add
sbb
add
add
add
inc
add
add
add
sbb
add
add
sbb
add
add
mov
inc
add
cmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
js
inc
add
sbb
push
add
add
add
mov
add
add
add
add
add
add
cld
bound
fcomps
inc
add
add
add
sbb
add
add
out
sbb
add
add
cld
sbb
add
add
or
add
add
sbb
add
sbb
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jo
inc
add
js
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
in
inc
add
fcompl
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
sbb
add
daa
sbb
xchg
sbb
add
add
fs
add
incl
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
decl
add
add
add
add
add
add
add
add
add
add
shlb
call
sbb
xchg
sbb
add
add
add
call
add
add
cmp
add
incl
push
inc
add
add
add
pop
gs
add
lcall
push
inc
add
add
add
andb
pushl
push
inc
add
add
add
push
inc
add
add
add
movsb
gs
add
call
inc
add
add
add
inc
add
add
add
shlb
add
pushl
inc
add
add
add
cld
gs
add
decl
add
add
and
add
jmp
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
loopne
inc
add
push
inc
add
add
add
push
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
inc
add
add
push
pop
inc
add
pop
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
mov
inc
add
add
rcrb
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
and
sbb
add
adc
inc
add
add
add
and
sbb
add
xor
inc
add
and
and
add
inc
inc
add
lcall
inc
add
jmp
inc
add
ljmp
inc
add
add
add
inc
add
add
add
pop
addr16
add
incl
incl
add
add
add
add
incl
add
add
roll
add
add
add
add
add
add
add
add
mov
inc
add
add
add
xchg
addr16
add
add
add
addr16
add
jmp
xchg
sbb
add
add
addr16
add
mov
add
add
sbb
add
dec
and
and
add
cmp
inc
add
jmp
and
and
add
pusha
push
add
push
and
and
add
test
add
decl
and
and
add
test
inc
add
jmp
inc
add
add
add
inc
add
add
add
and
add
add
inc
and
add
add
dec
and
and
add
int3
push
add
ljmp
inc
add
add
add
inc
add
add
add
adc
add
decl
xchg
sbb
add
add
inc
add
jmp
add
lods
and
add
add
mov
inc
add
add
add
add
add
and
add
add
shlb
inc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
and
add
pusha
imul
call
lcall
jmp
add
lods
and
add
add
mov
inc
add
add
mov
add
add
dec
push
add
call
and
fsubl
inc
add
jmp
and
and
add
cwtl
push
add
incl
add
add
incl
add
add
inc
add
add
add
add
add
push
add
add
add
int3
push
add
add
add
push
add
incl
add
add
add
add
inc
add
add
add
and
add
add
pop
and
incl
add
add
inc
add
add
add
add
add
add
add
add
inc
imul
add
add
sbb
inc
add
add
add
add
incl
add
add
add
add
inc
add
add
add
and
add
add
aas
and
add
add
dec
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
incl
add
add
or
add
add
or
add
or
add
add
imul
add
add
test
add
add
add
inc
add
pushl
add
mov
add
add
and
add
add
shlb
inc
add
add
add
xor
inc
add
jmp
and
and
add
jo
inc
add
clc
and
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
imul
add
inc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
xchg
insb
inc
add
dec
and
add
add
add
pusha
insl
inc
add
jmp
and
add
add
add
test
add
cld
and
add
add
add
test
inc
add
call
and
xchg
sbb
add
add
insl
inc
add
ljmp
add
and
inc
add
add
add
lock
inc
add
call
inc
add
add
add
sbb
inc
add
jmp
add
add
add
inc
outsb
inc
add
js
inc
add
add
add
add
add
add
add
add
add
outsb
inc
add
pushl
add
add
add
add
and
xchg
sbb
add
add
add
add
fsubs
xchg
sbb
add
add
outsb
inc
add
in
and
xchg
sbb
add
add
outsb
inc
add
incl
es
add
add
add
es
add
add
add
es
add
add
add
es
add
add
add
es
add
add
add
es
add
es
add
add
add
es
add
add
add
inc
add
add
add
inc
add
add
add
sbb
inc
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
add
lcall
add
add
add
add
aam
inc
add
mov
add
add
es
add
add
add
es
add
add
add
add
add
jmp
es
add
add
add
xor
inc
add
push
es
add
add
add
pop
jo
add
decl
daa
inc
add
add
add
daa
inc
add
add
add
jl
inc
add
pushl
inc
add
ds
inc
add
add
add
inc
add
add
add
inc
add
lcall
add
add
fs
inc
add
add
add
test
inc
add
jl
inc
add
add
add
hlt
jo
add
call
add
add
sbb
add
jmp
xchg
sbb
add
add
inc
add
mov
add
add
daa
inc
add
add
add
daa
inc
add
add
add
daa
inc
add
add
add
daa
inc
add
add
add
daa
inc
add
add
add
daa
inc
add
add
add
daa
inc
add
add
add
pusha
jno
add
decl
sub
and
add
mov
add
add
jmp
sub
and
add
loopne
inc
add
cmp
inc
add
incl
inc
add
decl
inc
add
call
inc
add
lcall
inc
add
jmp
add
ljmp
add
pushl
add
jl
inc
add
incl
decl
call
lcall
jmp
ljmp
mov
inc
sub
dec
sub
call
sub
fsubrs
inc
add
jmp
sub
ljmp
push
sub
cli
sub
incl
sub
decl
inc
add
call
inc
add
lcall
inc
add
jmp
inc
add
ljmp
inc
add
add
add
add
inc
add
incl
inc
add
add
add
adc
add
lcall
inc
add
add
add
add
add
add
inc
add
add
add
xor
inc
add
decl
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
add
sub
pop
add
add
sub
or
add
fildll
inc
add
add
add
sub
or
add
cmc
sub
pop
add
add
sub
or
add
or
inc
add
add
add
sub
push
add
add
sub
sldt
add
sub
push
add
add
inc
add
add
add
sub
push
add
add
sub
adc
add
inc
sub
pop
add
add
inc
add
sub
pop
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
test
inc
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
add
shrl
inc
add
add
add
sub
and
sub
and
add
push
add
add
push
sub
add
add
cld
sub
add
add
pop
sub
add
add
adc
inc
add
add
add
add
add
mov
add
add
cmp
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
jl
inc
add
add
add
inc
jne
add
call
add
add
push
add
add
jmp
xchg
sbb
add
add
add
mov
add
add
mov
inc
add
call
sub
and
add
aam
inc
add
jmp
sub
and
add
clc
jne
add
clc
sub
and
add
sbb
inc
add
decl
inc
add
add
add
inc
jbe
add
jmp
inc
add
add
add
fs
add
cmp
add
add
add
mov
add
decl
add
add
add
lods
jbe
add
jmp
inc
add
add
add
inc
add
add
add
shlb
add
call
add
add
add
add
add
add
add
cld
jbe
add
mov
add
add
xchg
sbb
add
add
ja
add
jmp
sub
add
add
add
pop
ja
add
clc
sub
add
add
add
xorb
decl
add
adc
inc
add
add
add
sub
add
sub
add
xor
add
add
inc
add
add
add
movsb
ja
add
lcall
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
xchg
sbb
add
add
ja
add
jmp
add
lods
sub
add
mov
add
add
sub
xchg
sbb
add
cmp
inc
add
jmp
sub
add
jmp
inc
add
add
add
sub
add
sti
sub
add
push
cs
add
add
add
cs
add
add
add
inc
add
add
add
cs
add
add
add
cs
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
js
inc
add
incl
das
inc
add
add
add
das
inc
add
add
add
fs
add
jmp
das
inc
add
add
add
das
inc
add
add
add
nop
jns
add
incl
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
add
pushl
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
inc
add
add
add
das
inc
add
add
add
das
inc
add
add
add
das
inc
add
add
out
inc
add
das
inc
add
add
add
das
inc
add
add
add
add
add
xor
push
add
add
xor
adc
add
xor
and
add
lock
add
cmp
inc
add
add
add
inc
add
add
add
lods
jp
add
lcall
inc
add
add
add
inc
add
add
add
fdivrs
add
js
inc
add
add
add
add
add
add
inc
add
lcall
add
add
xor
add
ljmp
xchg
sbb
add
add
add
inc
xor
add
add
int3
xor
and
add
js
inc
add
jmp
xor
and
add
movsb
jnp
add
clc
xor
add
add
add
inc
add
add
add
enter
lcall
xor
add
add
and
inc
add
add
add
xor
and
add
hlt
jnp
add
decl
inc
add
add
add
inc
add
add
add
sub
ljmp
inc
add
add
add
inc
add
add
add
push
jl
add
decl
add
add
cmpb
add
add
lcall
add
cmpsl
xor
and
add
movsb
jl
add
mov
inc
xor
dec
xor
call
xor
fidivs
inc
add
call
push
xor
clc
xor
incl
xor
decl
xor
call
xor
lcall
xor
jmp
inc
add
ljmp
inc
add
pushl
inc
add
xor
and
add
sarb
call
inc
add
lcall
inc
add
jmp
inc
add
ljmp
inc
add
pushl
inc
add
js
inc
add
incl
decl
call
lcall
add
add
insb
jge
add
add
inc
test
add
add
addb
test
add
add
cld
jle
add
mov
add
add
add
repnz
add
jle
add
inc
add
inc
addl
add
add
add
mov
add
addl
add
add
add
mov
add
add
cmp
add
addl
add
add
add
add
nop
inc
add
int3
mov
add
mov
add
mov
add
add
xor
add
adc
add
lock
add
mov
add
add
mov
add
sahf
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
mov
add
add
jo
add
pusha
mov
add
add
dec
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jbe
add
data16
add
add
cmp
add
sub
add
incb
add
rolb
add
stos
xchg
add
add
outsb
xchg
add
add
xor
add
and
add
push
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pushf
xchg
add
xchg
add
add
addb
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
and
add
add
add
add
add
add
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
addl
add
add
push
add
push
test
add
test
add
add
adc
add
addl
repnz
call
addl
aam
add
lret
add
addl
stos
addl
mov
addl
mov
add
jl
add
sbb
add
insb
addl
bound
add
push
addl
dec
addl
inc
addl
cmp
add
addl
sbb
add
adc
add
mov
mov
add
addb
testb
add
addb
faddl
add
enter
mov
addb
cwtl
addb
addb
add
add
inc
addb
addb
sub
add
and
add
or
add
in
addl
add
add
add
inc
mov
add
add
outsb
mov
add
add
add
mov
add
add
add
mov
add
mov
add
add
add
add
adc
add
add
add
xorb
orb
xorb
add
adc
add
adc
add
adc
mov
add
add
aaa
add
adcb
add
xchg
add
addb
add
or
add
adcb
add
add
add
in
add
jae
add
dec
add
jmp
bswap
dec
sub
lods
or
add
dec
lods
insb
sub
lea
adc
out
data16
sub
or
or
dec
add
verr
out
or
sub
sub
sub
dec
add
lds
outsb
mov
mov
add
outsb
lods
mov
add
add
dec
int
push
das
add
lea
jmp
outsb
int
dec
sub
add
add
out
lods
lods
push
mov
sub
test
sub
push
or
dec
add
jmp
jp
test
insb
lods
push
mov
or
lods
lods
push
mov
stos
sub
add
add
out
lods
lods
push
mov
sub
test
sub
dec
mov
dec
add
insb
push
das
add
cwtl
add
into
lods
add
insb
in
outsb
lods
add
mov
insb
lods
push
add
pop
add
dec
lods
sub
add
int3
in
push
lods
int
mov
insb
push
das
add
cmp
sub
outsb
das
outsb
mov
outsb
mov
insb
sub
add
insb
or
add
push
add
cmp
sub
in
int3
add
rolb
mov
insb
lods
push
add
lods
cvtps2pi
int3
dec
lods
lods
add
xchg
add
insb
add
fs
mov
int3
outsb
lods
lods
insl
add
int3
out
dec
sub
mov
outsb
dec
sub
mov
cmpsb
add
int
add
icebp
add
int3
mov
lea
filds
out
insb
outsb
insb
sub
add
pop
add
push
scas
mov
add
lods
dec
add
insb
sub
add
mov
outsb
outsb
insb
sub
int3
add
dec
add
int3
lea
mov
lods
dec
dec
in
dec
add
enter
dec
dec
int
add
pushf
add
lods
dec
dec
in
dec
add
sahf
add
dec
sub
add
int3
push
dec
sub
inc
add
in
insb
add
jae
sub
sub
outsb
push
dec
sub
lret
lods
lods
push
mov
or
lods
dec
data16
cmpsb
add
dec
lods
in
sub
lods
sub
lods
sldt
lds
jmp
int
mov
lods
sldt
test
mov
mov
add
out
mov
push
lods
jmp
int
in
or
stos
sub
add
jmp
mov
cvtps2pi
in
int
cvtps2pi
mov
mov
or
adc
jmp
in
dec
add
roll
jmp
cvtps2pi
or
enter
lods
dec
add
lods
mov
jmp
in
lods
mov
dec
in
outsb
add
add
sub
lods
dec
lods
add
lods
mov
sub
or
add
dec
scas
outsb
mov
int3
mov
add
jmp
jmp
insb
in
lods
lods
in
mov
jmp
jmp
int3
lods
in
mov
jmp
lods
mov
sub
push
jmp
das
push
lods
add
mov
jmp
in
int
dec
in
int3
push
add
push
add
jmp
dec
sub
or
mov
or
sub
or
add
lea
or
sub
or
dec
add
movb
mov
call
insb
insl
push
add
add
lods
lods
push
add
add
dec
lods
lods
mov
das
add
or
insb
sub
add
inc
add
sub
das
sub
add
lods
mov
add
push
lods
or
insb
lods
outsb
outsb
sub
add
sub
mov
in
int
lods
int
push
dec
sub
add
push
mov
sub
add
add
lods
mov
lods
dec
outsb
sub
sub
testb
in
dec
sub
test
das
push
sub
scas
outsb
add
mov
mov
sub
xor
push
or
inc
add
int
mov
outsb
outsb
add
dec
add
lods
sub
lods
enter
sub
jl
ljmp
lods
mov
sub
add
push
lods
leave
sub
lods
mov
sub
add
mov
scas
add
lods
mov
mov
sub
mov
add
lea
int
in
lea
dec
lods
lods
push
lea
mov
lods
or
add
je
jmp
dec
in
insb
lods
outsb
outsb
add
call
mov
lea
add
aas
add
push
das
enter
sub
mov
call
outsb
mov
insb
mov
dec
das
sub
push
mov
mov
add
add
dec
das
mov
lods
push
push
add
sub
mov
sub
lods
mov
sub
add
lods
sub
lods
mov
add
sbb
sub
mov
lods
mov
lods
lods
int
add
mov
lods
mov
add
jp
ljmp
push
int
lea
mov
mov
scas
lods
lods
mov
add
inc
add
push
insb
sub
push
insb
mov
xchg
add
push
insb
sub
push
insb
mov
int
call
dec
lods
sub
or
in
dec
sub
add
int
lods
dec
in
insb
insl
lods
mov
int
dec
lods
lods
lods
int
add
xchg
add
insb
sub
lods
or
cmp
push
int
mov
add
cmp
call
dec
dec
lods
int
or
insb
lods
outsb
outsb
add
add
lods
mov
dec
dec
lods
int
mov
sub
dec
lods
sub
lods
test
lods
int
sub
add
ljmp
test
push
lea
mov
add
mov
lods
push
insb
sub
push
insb
mov
add
lods
push
insb
sub
push
insb
mov
add
mov
sub
scas
lods
add
outsb
lods
test
insb
lods
push
mov
sub
mov
or
in
dec
sub
add
lods
mov
dec
dec
lods
int
or
insb
lods
outsb
outsb
sub
lods
sub
lods
push
lods
sub
or
add
mov
dec
lods
lea
lods
sub
or
add
call
sub
lods
mov
add
mov
in
insb
add
dec
add
lods
lods
add
add
mov
dec
dec
in
dec
add
dec
add
mov
sub
scas
lods
add
stos
int
sub
lret
out
jmp
lods
add
test
lods
out
jmp
lods
add
push
lods
enter
test
int
sub
add
mov
mov
in
sub
imul
lea
out
outsb
push
dec
sub
add
add
sub
outsb
test
add
inc
lds
add
in
push
imul
mov
sub
scas
lods
test
sub
add
add
in
jmp
lods
das
test
sub
and
call
lods
dec
leave
sub
lods
sub
add
add
mov
insb
scas
dec
sub
outsb
insb
dec
sub
mov
lea
xor
sub
sub
sub
insb
scas
dec
sub
outsb
insb
dec
sub
add
into
add
in
push
lods
imul
in
mov
sub
scas
lods
sub
xor
push
lods
push
dec
into
sub
int
sub
add
in
outsb
lods
push
dec
into
sub
int
lea
dec
lods
sub
lods
push
dec
into
sub
add
int
push
in
lods
dec
sub
add
lods
mov
insb
lods
add
push
in
lea
dec
into
sub
lods
add
push
lods
int
lods
dec
into
sub
add
add
sub
mov
dec
into
sub
cmp
push
mov
dec
into
sub
sub
scas
outsb
add
add
dec
lods
in
sub
push
dec
into
sub
dec
lea
sub
mov
inc
add
sub
mov
dec
into
sub
dec
lea
mov
dec
sub
xlat
add
in
test
scas
lods
imul
in
sub
int
in
imul
sub
sub
scas
lods
test
sub
add
mov
sub
sub
lds
add
lods
lea
scas
mov
mov
lea
push
sub
insb
mov
ljmp
lods
mov
add
ljmp
mov
add
leave
lods
mov
mov
insb
mov
add
mov
int
lods
lea
int
lods
insb
mov
add
test
lea
lods
mov
lods
dec
sub
lods
leave
sub
lods
sub
add
test
scas
lods
or
insb
lods
outsb
outsb
test
lods
outsb
add
add
lods
or
insb
lods
outsb
outsb
lods
outsb
add
push
or
lds
dec
push
inc
push
dec
cs
insb
add
roll
outsb
mov
insb
lods
push
add
addb
lods
lods
lods
insb
insb
push
das
add
mov
dec
.byte
scas
push
dec
inc
add
shlb
add
dec
mov
movsb
call
sub
cmpsl
mov
and
addl
xor
mov
add
gs
fs
test
insl
test
enter
in
push
pop
adcb
mov
and
sahf
mov
int3
bound
cli
sahf
test
xchg
test
or
test
xchg
mov
xchg
xchg
xor
test
mov
test
stos
inc
aam
push
mov
adc
and
popf
xchg
mov
jge
pop
jae
fs
aam
sbb
add
inc
adc
sub
adc
jge
xor
jne
xchg
insb
dec
adc
xchg
sub
add
inc
fs
enter
gs
lea
and
push
fimull
push
sbb
lea
nop
fmuls
add
dec
test
aad
adc
add
dec
dec
or
jmp
sub
cmp
mov
repz
xlat
jne
adc
call
add
aam
xor
dec
arpl
xchg
dec
add
outsb
fimull
or
mov
mov
adc
or
jmp
in
mov
add
roll
pop
sub
adc
xchg
mov
adc
mov
and
xor
or
in
inc
aas
xor
mov
divl
out
xchg
inc
dec
xor
inc
inc
fisttpl
cmp
sub
arpl
sub
adc
jnp
shlb
mov
add
push
jecxz
or
fnstenv
bound
mov
pop
dec
sbb
pusha
push
stos
or
inc
fstpt
mov
dec
mov
dec
repz
daa
cld
and
or
iret
loopne
lods
cmp
add
roll
jns
xchg
mov
mov
add
loop
cmpsb
icebp
adc
dec
jbe
movsb
data16
mov
adc
cmp
push
rclb
mov
adc
mov
xor
repz
enter
pop
or
inc
lds
xchg
and
stos
jno
mov
add
cmc
xor
nop
lods
xor
xor
add
xor
mov
orb
mov
jae
pusha
dec
dec
test
inc
xchg
ja
sbb
ficoml
fwait
cmpsb
and
xchg
mov
sub
insb
mov
aaa
fistpl
in
mov
xchg
cmpsb
add
or
xor
js
cmp
add
arpl
push
inc
add
or
pop
repz
iret
lret
sbb
loop
mov
inc
lcall
push
rcrl
add
and
ret
jne
mov
mov
outsl
stos
sar
cmp
ja
pop
sbb
stc
mov
cmpsb
push
loope
sar
rclb
mov
idivl
jb
xchg
sub
bound
fiaddl
or
add
inc
or
adcl
dec
jno
pop
aas
scas
add
adc
or
movb
add
sub
or
adc
sbb
pusha
scas
jno
inc
shll
push
jecxz
in
sbb
and
nop
cmp
ret
roll
sub
jno
sub
mov
sub
insl
xor
inc
push
jno
push
and
stos
add
xor
rol
adcb
test
sbb
nopl
stos
jne
fnsave
ds
xchg
jecxz
test
loopne
pusha
mov
adc
lods
fldt
jg
pusha
cmp
push
and
cli
mov
mov
xor
je
xor
sahf
mov
adc
push
js
nop
push
fcoms
sub
dec
xorl
jo
loope
int3
inc
out
xchg
or
adc
inc
cmp
add
xor
mov
aaa
adc
sbb
jne
sub
add
sbb
pop
and
and
or
mov
push
push
loopne
iret
out
push
jno
add
or
inc
dec
dec
inc
sbb
mov
inc
jmp
or
add
and
or
imul
pusha
arpl
mov
or
push
mov
das
and
add
js
xchg
push
inc
lock
xor
inc
das
push
test
sbb
aam
imul
push
test
mov
add
test
repnz
dec
and
or
add
xlat
imul
lods
mov
ret
bound
push
sbb
js
shl
inc
xchg
ficoml
sbb
mov
daa
inc
rolb
push
fisubl
adc
inc
int3
mov
lret
push
rcr
and
mov
daa
add
sbb
sub
mov
cmp
sbbl
inc
xor
push
sbb
dec
inc
mov
or
or
lds
mov
xchg
and
and
or
inc
adcb
cltd
andl
les
mov
mov
les
and
stos
dec
or
jae
sbb
adc
dec
into
mov
mov
or
mov
cmp
sub
mov
bound
imul
aad
insl
test
mov
in
inc
xorb
mov
cmp
shrb
loopne
movsl
cmp
lds
mov
or
sub
xor
push
mov
or
pop
int3
vprotb
ficoml
inc
sub
add
js
inc
push
int3
xchg
xor
push
test
cmp
flds
sbb
out
dec
add
jo
sar
rcr
loopne
dec
inc
cs
push
shrl
fdivs
je
subb
add
int3
sub
mov
xor
adc
loope
push
xor
adc
xchg
sbb
sub
int3
aaa
sub
loopne
inc
dec
dec
mov
adc
cmc
popf
inc
push
add
subb
mov
cmp
fs
and
cmp
add
xchg
rcrb
push
adc
mov
fisttpll
shll
ja
add
ja
lret
xor
push
jne
fwait
mov
in
lret
xor
add
mov
or
or
subl
push
shlb
mov
dec
adc
popf
and
pop
inc
addl
pop
push
mov
popa
adc
adc
pop
pop
pop
int
jbe
pop
addr16
mov
adc
adc
mov
add
cmpsb
insb
addl
xchg
jecxz
addb
lds
sbb
imul
pop
mov
dec
mov
test
rclb
bound
cmpsl
and
ret
sbb
leave
dec
jg
or
pop
add
xchg
ret
add
sub
xchg
mov
mov
sub
lret
call
push
test
cmpsb
add
adc
stos
mov
and
repnz
add
movsb
mov
add
jmp
xor
popa
push
movsl
ret
sub
mov
and
ret
xchg
push
push
shll
inc
add
sub
cmpsb
adc
fs
cmp
xchg
or
add
xchg
lret
aaa
jae
in
loopne
cltd
push
jmp
sbb
jae
pop
mov
xorb
mov
cmp
test
cwtl
cmc
pushf
adc
mov
pop
mov
es
int
clc
pop
xor
mov
mov
and
sbb
out
xchg
sub
fildl
arpl
add
sub
ud2
mov
ret
cwtl
cmovbe
add
popa
movsl
adc
and
pop
xchg
sub
mov
loopne
dec
subb
push
xchg
mov
enter
xor
or
push
dec
dec
test
ret
add
sub
shlb
scas
xor
fwait
into
lret
test
loopne
bound
mov
sub
push
popl
clc
xchg
gs
mov
mov
push
cmp
sbb
jne
icebp
xor
pop
test
push
into
outsl
mov
cmp
dec
inc
lds
sbb
lods
or
push
aad
and
mov
je
mov
inc
pop
lret
fidivs
or
movsb
sbb
jno
outsb
xchg
cmpsb
repnz
inc
sarl
loop
data16
xor
popf
in
and
inc
jno
insb
jle
aad
sub
roll
loop
imul
inc
sbb
mov
sbb
rolb
sbbb
fwait
mov
iret
out
repz
pusha
imul
cmp
mov
cmp
pop
and
xor
jecxz
in
ljmp
xor
mov
repnz
bound
add
mov
pop
cltd
xchg
mov
fsub
cmp
or
nop
sbb
xchg
push
rclb
lock
push
insb
bound
mov
mov
pop
les
hlt
les
pop
inc
xchg
add
push
test
sbb
test
jecxz
adc
adc
nop
mov
and
inc
int3
sbb
cltd
negb
and
sbb
cmp
fsubrs
jb
fs
in
mov
lret
popa
jmp
inc
adc
or
or
jl
push
add
test
repnz
or
loop
or
sbb
aad
xor
mov
or
mov
fsub
xor
cmp
lds
push
test
jl
lods
out
adc
or
icebp
or
inc
movb
jo
insb
add
das
clc
lss
jecxz
mov
mov
fsts
daa
je
loopne
jne
push
and
les
mov
push
fcomps
adc
lret
sbb
sbb
cs
mov
cmp
icebp
lods
dec
inc
jecxz
subb
mov
adc
loope
adc
dec
adc
mov
iret
sbb
cltd
dec
push
in
pop
jne
sub
cmp
adc
pop
mov
shrl
sub
dec
mov
push
and
adc
cmp
cmp
mov
out
pop
clc
mul
cmpsb
in
sub
jo
mov
roll
inc
imul
xlat
loop
leave
pop
in
add
mov
je
cmpsb
mov
imul
jno
add
push
pop
adc
movl
mov
sbb
call
sbb
mov
addl
mov
inc
pop
mov
and
jae
leave
inc
icebp
jmp
popf
xchg
xor
inc
inc
mov
inc
push
cwtl
xor
imulb
xchg
lret
pop
push
inc
testl
daa
rclb
jle
test
mov
and
popf
in
jne
pop
adc
sbb
sbb
ds
cmp
cmp
mov
or
jmp
push
jecxz
inc
pop
shll
adc
xchg
popw
fs
inc
pop
push
inc
push
mov
adc
inc
scas
enter
and
or
test
sub
xor
adc
jno
xchg
or
jge
xor
adc
daa
sahf
out
cmp
mov
icebp
or
loopne
test
loopne
subl
jge
push
imul
xlat
scas
pop
mov
mov
xor
add
fs
stos
sub
jmp
pop
xchg
fiaddl
in
mov
icebp
in
xchg
ljmp
mov
aad
rorb
pop
mov
incb
push
xor
ljmp
xor
mov
mov
add
rclb
jl
call
adc
add
add
xor
mov
clc
les
jne
and
jg
test
add
shrl
xor
sbb
push
mov
pop
sti
hlt
mov
mov
lcall
insb
push
push
pop
loop
add
pop
bound
lods
dec
mov
insb
push
cmp
or
and
mov
sub
pushf
inc
jle
pop
mov
adc
or
add
mov
mov
mov
inc
lret
scas
pop
loope
fidivl
sub
repnz
cmp
xchg
or
cmc
add
psadbw
in
xchg
mov
and
sbb
sahf
dec
mov
inc
nop
mov
sti
andl
adc
push
jg
daa
mov
adc
andb
mov
in
dec
mov
imul
or
enter
sub
sub
add
add
xchg
push
cmp
sbb
jmp
add
je
cwtl
add
rolb
mov
xchg
test
enter
out
movsb
loopne
and
sbb
movsb
dec
mov
fldenv
cli
inc
cmp
adc
or
bound
nop
push
xor
push
and
movsl
push
push
out
imul
das
mov
shl
loopne
fbstp
lahf
push
mov
cmpsl
add
sbb
dec
loopne
push
inc
jge
or
shlb
inc
inc
fs
and
pop
add
adc
ss
leave
cld
inc
push
insl
leave
mov
pcmpgtb
mov
cs
mov
pushf
jbe
pop
pop
inc
test
or
test
scas
or
adc
add
jle
lahf
sub
fisubrs
fisubrs
mov
add
push
pop
adcb
xor
mov
movsl
orb
aam
add
push
icebp
imul
inc
dec
les
cmp
adc
pop
scas
dec
test
xor
add
inc
xor
inc
mov
rorb
aam
mov
iret
stos
cld
xchg
ljmp
dec
sub
mov
lds
push
shrl
mov
pop
inc
inc
orl
xchg
cmp
jns
fnsave
inc
jnp
sub
imul
call
in
adc
jmp
mov
pop
mov
sub
or
rcrl
rcrb
xchg
pop
mov
inc
clc
inc
sub
ds
xchg
push
mov
xchg
sbb
stos
add
pop
js
jl
pop
pop
inc
or
lds
jo
movsl
sub
dec
imul
addb
jne
mov
sub
mov
xchg
lcall
loope
int
xor
sbb
arpl
mov
cmp
or
xchg
roll
fcoml
ja
jns
xor
stc
imul
jne
loop
or
fcoms
dec
and
xchg
cmp
dec
adc
leave
add
and
je
into
scas
mov
or
dec
jbe
mov
jnp
add
or
ljmp
dec
scas
and
shll
stc
repnz
push
ja
sub
in
xchg
add
sbb
icebp
sti
pop
and
push
pop
sub
mov
lds
mov
inc
scas
js
mov
popf
rclb
mov
or
add
fcomps
ret
jecxz
inc
adc
rcll
mov
dec
xchg
inc
cwtl
xor
cmp
lods
stos
cltd
jae
jne
orl
or
mov
ja
or
dec
adc
adc
ljmp
outsb
rcr
jns
mov
psadbw
mov
jo
lods
jo
jecxz
mov
jns
inc
in
loop
imul
ja
bound
ret
pop
dec
stos
xor
stos
xor
pop
rorl
popa
lds
push
jae
sti
xor
inc
jno
push
pop
les
enter
mov
xchg
popf
and
push
mov
out
cmp
lock
aad
xchg
enter
push
pop
mov
sub
outsb
jns
adc
test
arpl
add
xchg
aam
loopne
pop
addr16
pop
sbb
jle
int3
ffree
mov
aaa
in
dec
dec
pop
pop
xor
adc
push
adc
dec
push
arpl
mov
cmc
bound
addr16
pop
arpl
pop
cmp
mov
stos
movsb
ret
int3
shll
mov
addb
add
pop
inc
inc
pop
xor
push
inc
adc
mov
repnz
adc
sbb
or
jmp
push
mov
pop
push
xchg
dec
subl
add
es
dec
gs
les
xor
nop
test
nop
and
arpl
adcb
rorb
add
dec
mov
adc
cwtl
xor
adc
xchg
xor
sbb
rorl
ret
xor
or
xchg
fs
cmp
cmp
test
inc
adc
xor
push
and
addr16
movsl
and
ret
sbbb
lahf
scas
sub
sbb
add
dec
xor
aas
inc
add
pop
and
jae
xor
push
repz
popa
xchg
adc
sub
mov
movsl
test
ror
mov
inc
xor
shrb
ret
push
dec
movsb
mov
add
dec
sub
inc
add
mov
inc
xor
sub
or
popa
sub
mov
xor
cld
adc
imul
mov
sub
scas
es
es
add
sub
lcall
xchg
adc
inc
ds
pusha
fstpt
or
arpl
lds
into
shrb
cmpb
add
insl
bound
dec
arpl
inc
dec
out
pop
mov
add
test
xor
sbb
push
jno
outsl
mov
mov
sub
cmp
cs
aam
lock
jmp
addb
cmp
movsl
dec
jecxz
fildll
andb
and
add
gs
add
mov
or
xor
xor
xor
or
sbb
push
je
xor
push
sbb
ds
jle
adc
adc
push
in
xor
pop
jl
sbb
xchg
xchg
push
or
mov
push
loop
sub
sub
cmpsb
mov
test
and
std
in
mov
mov
cwtl
xor
adc
cmp
rorl
out
xchg
mov
bound
dec
into
add
or
or
push
mov
mov
push
xor
or
inc
xor
push
cltd
sub
sbb
dec
loope
ret
pusha
lods
sbb
mov
jl
add
ret
xorb
jecxz
pop
mov
add
cmpl
dec
sbb
push
lea
stos
lret
or
jmp
imul
loopne
inc
subb
fiaddl
or
add
push
int3
and
adc
xchg
cmp
sbb
xchg
test
push
pop
mov
in
dec
xor
push
lret
xor
mov
xor
cmp
mov
ret
xchg
dec
mov
add
pop
inc
push
or
cli
push
or
dec
bound
popa
jo
add
pop
gs
sbb
test
lret
xor
arpl
inc
and
pop
pop
xor
leave
addr16
or
lods
mov
sub
xchg
jns
shll
imul
cmpsl
nop
loop
mov
ror
push
jge
xchg
test
push
mov
add
lret
popa
cs
fwait
xor
lods
jecxz
sahf
addb
rol
sub
outsb
imul
sbb
push
or
shll
or
push
movsl
or
fimull
hlt
mov
dec
push
es
flds
sub
xor
jg
lds
jg
or
or
loop
add
xchg
je
jb
ret
and
inc
cwtl
pop
scas
xchg
or
dec
dec
pop
popa
xchg
xchg
leave
push
inc
mov
sub
push
insb
xchg
cltd
adc
popa
xor
sbb
push
dec
xchg
int
jae
arpl
aad
sub
mov
sub
popa
sbb
mov
mov
jne
stos
adc
push
cmp
out
int3
mov
or
rorb
sub
and
ret
bound
jmp
adc
sahf
pop
shrl
test
cmp
int3
out
and
cmpsb
xor
lods
fwait
mov
mov
push
sbb
mov
xchg
sbb
int3
roll
shrl
and
enter
adc
inc
inc
inc
xor
fwait
inc
int3
and
nop
sbb
adc
in
lret
in
push
sbb
and
imul
xchg
mov
stos
sahf
push
daa
push
and
and
sub
popa
mov
jl
pop
stos
mov
pusha
cmp
addb
cmp
inc
push
scas
fisubrl
jno
add
add
and
inc
fsubs
test
fisubl
mov
or
xchg
add
sbb
cwtl
push
cmp
mov
or
fdivs
jecxz
pusha
xchg
xchg
fwait
daa
jp
jp
push
inc
test
jecxz
pop
adc
in
push
xor
adcb
test
test
test
das
pop
or
adc
inc
rolb
mov
xchg
or
add
int3
push
test
outsl
mov
xchg
adc
daa
xor
and
mov
xchg
cltd
jp
push
push
push
test
imul
hlt
mov
mov
adc
push
add
jne
mov
cwtl
ret
rorb
add
jo
or
cmp
xor
push
inc
cmc
push
xorb
inc
or
test
pop
push
add
mov
addb
or
sub
test
adc
les
shrl
mov
lret
xchg
push
push
inc
test
sub
jns
sub
mov
push
test
add
or
or
pop
sub
lret
fisttpl
lahf
dec
call
sub
xor
sbb
in
xchg
inc
jae
mov
nop
adc
popl
ret
lds
sbb
add
lahf
xor
inc
push
push
popl
push
inc
sub
mov
dec
in
lds
sub
lret
xchg
jns
dec
imul
retw
mov
bound
mov
mov
push
ljmp
iret
cmp
mov
fidivl
rolb
aam
ljmp
cmp
push
inc
inc
add
loopne
mov
sarb
popw
cmp
adc
or
adc
pushf
pusha
in
pop
sbb
sub
into
dec
push
test
xchg
dec
les
notb
push
in
sub
in
push
xor
adcb
shlb
lds
jae
add
dec
mov
pusha
xchg
pop
inc
lods
ds
jno
adc
mov
xor
orl
lods
fldenv
adc
movsl
cmp
and
push
xor
xchg
mov
lea
xchg
in
push
adcb
mov
jo
sbb
push
dec
or
xor
ret
ljmp
push
push
mov
sub
jmp
xchg
xor
sbb
pop
push
movb
jmp
inc
das
add
cmp
sbb
cmpsl
jne
xor
je
leave
push
movsl
inc
sbb
push
stos
or
icebp
jp
sub
pop
mov
adc
shl
inc
pop
mov
jns
pusha
xchg
jbe
loopne
lds
cmp
xchg
xor
arpl
outsl
xor
popf
aas
push
sahf
sbb
mov
loope
gs
lea
popa
or
mov
dec
loop
inc
mov
xchg
or
xchg
push
arpl
mov
icebp
lods
pusha
loop
adc
outsb
lock
mov
push
mov
subl
popa
ret
dec
inc
xchg
fs
flds
push
or
inc
sarl
pop
pushf
jle
push
jmp
subb
ljmp
mov
iret
pusha
sub
pushf
test
in
adc
jecxz
iret
mov
sub
test
jecxz
enter
add
out
test
pop
xchg
pop
sbb
or
cmp
lret
shlb
andb
push
cli
or
lds
imul
lea
add
mov
xor
push
cmpsb
pop
add
add
or
inc
push
mov
pop
push
or
ret
ss
loopne
add
cmp
and
mov
mov
lods
pusha
adcb
movsb
xor
andl
mov
icebp
mov
jb
push
popl
cld
int
pop
mov
xor
addl
mov
xchg
or
sbb
dec
sbb
xchg
lods
xchg
cmpsl
and
test
pusha
adc
xor
pop
movsl
xchg
xchg
arpl
xchg
arpl
imul
daa
jne
loopne
test
rolb
or
xor
sub
add
nop
cs
xor
outsb
pushf
roll
jbe
outsl
cmp
inc
or
and
sbb
push
jno
mov
and
mov
add
push
arpl
push
inc
sub
sbb
or
inc
push
sub
test
leave
bound
add
dec
inc
daa
push
cltd
push
mov
loope
mov
cmc
sub
mov
push
mov
fidivl
ret
dec
lcall
ret
test
jmp
in
test
cmc
and
leave
jmp
mov
das
loopne
jecxz
sub
cmp
mov
push
lds
insb
sbb
jle
xorb
lods
jl
mov
dec
loopne
and
push
xchg
outsl
lret
arpl
and
adc
mov
pushf
jmp
sbb
xchg
and
jbe
rol
inc
lahf
sub
mov
test
sub
aaa
call
add
ret
add
jo
mov
pusha
sahf
sub
xchg
sbb
add
flds
cltd
and
int3
popa
inc
cwtl
push
cltd
inc
arpl
and
popa
xor
push
xor
cmp
aam
insl
and
ret
xor
fsubrs
fwait
xchg
fistl
adc
or
mov
es
and
xchg
imul
popa
lcall
add
mov
lods
mov
xor
fsts
sbb
imul
adcb
and
mov
add
xchg
push
push
gs
sahf
pop
mov
and
mov
hlt
lcall
rcrb
test
cmp
ret
cmp
repnz
or
iret
xor
dec
cmpsb
pop
and
pop
sbb
lods
hlt
lds
xor
mov
pop
jl
xchg
pop
inc
pusha
gs
mov
adcl
lahf
or
push
sbb
shlb
fs
shlb
data16
aas
xchg
sub
push
ret
cmpsb
mov
and
sub
dec
sbb
sbb
xor
add
es
cmp
stos
jo
mov
mov
add
cmp
mov
icebp
sbb
sub
or
mov
les
addb
and
popa
mov
pop
out
push
lea
push
xchg
pop
pushf
jge
pop
jmp
inc
and
loopne
sbb
push
sbb
fs
xchg
dec
enter
in
popf
lods
xchg
push
jo
dec
cmp
or
jecxz
inc
hlt
sti
sub
shrb
mov
cmp
dec
cmc
or
or
aam
lea
inc
cmp
inc
push
scas
and
sbb
lret
stc
push
jle
or
je
dec
adc
mov
add
lea
mov
mov
lret
pop
dec
fldcw
mov
mov
adc
bound
ret
push
mov
out
fdivl
pop
sbb
dec
push
and
sub
nop
cmc
aam
stc
outsb
call
call
mov
xchg
fnstcw
adc
or
daa
aaa
push
cmc
sub
adc
xor
pop
xchg
mov
push
push
mov
rclb
dec
push
and
mov
movsl
rclb
nop
dec
dec
and
mov
rclb
push
fnsave
cmpsl
mov
lahf
shrb
loopne
shll
sbb
ret
outsb
sbb
inc
or
mov
mov
and
or
frstor
mov
mov
add
es
icebp
or
adc
mov
dec
mov
sub
and
mov
or
pop
popf
in
pop
fs
insb
in
or
fsubrs
imul
add
jp
mov
pop
rorb
mov
push
movsl
int
lods
inc
orl
jae
addl
jae
pop
adc
js
jne
mov
sub
push
out
mov
ja
rcrb
add
mov
insb
add
mov
jne
lret
sub
rorl
divl
or
orb
xor
mov
scas
xor
xchg
mov
ljmp
add
xor
xchg
out
add
sbb
sar
mov
cltd
inc
lret
push
loop
fidivrs
mov
leave
pop
sbb
mov
aam
rcrl
jns
xchg
and
popf
les
mulb
clc
subl
add
pop
in
sub
mov
jne
bound
jl
pusha
inc
and
jo
jge
enter
repnz
xchg
rorb
xchg
adc
sub
mov
mov
push
pop
pop
addr16
mov
push
or
lcall
add
cmc
or
mov
adc
jg
pop
and
lods
push
or
mov
iret
pop
sbb
or
mov
addb
mov
mov
inc
dec
stos
push
sbb
js
aam
and
popf
dec
mov
rcrb
pushf
jecxz
fmull
scas
and
movsb
push
xor
add
sub
inc
enter
subb
mov
int
cmp
adc
adc
dec
ss
lret
rcll
add
imul
sbb
mov
js
add
jmp
in
push
ret
mov
adc
pop
fdivrs
pop
inc
cltd
add
inc
rorb
and
inc
pusha
leave
cmpl
mov
xor
lcall
and
adc
addb
and
inc
sar
mov
roll
add
sub
sbb
inc
jb
jle
adc
rolb
nop
push
xchg
sub
aaa
or
mov
pop
xchg
sbb
mov
inc
xchg
lds
rclb
adc
arpl
les
mov
jno
inc
pop
hlt
mov
xor
or
in
push
jns
lods
and
and
jo
mov
xchg
scas
xchg
dec
add
subb
inc
dec
jl
sub
test
mov
inc
push
rclb
outsl
dec
xor
add
inc
sub
pop
jge
and
and
fdivs
mov
sbb
in
rcrb
adc
or
mov
inc
ret
loop
xchg
xchg
insb
movsb
pop
adc
push
jnp
xchg
lods
xor
add
cltd
mulb
aam
daa
rorb
lahf
push
sti
pop
std
loop
or
pop
scas
lds
or
notb
cmc
std
pop
rcll
jno
nop
adc
test
xor
mov
xor
adc
je
sbb
push
inc
xchg
notb
cmp
rolb
sub
mov
mov
jo
lahf
xchg
cmp
jmp
sub
pop
imul
ret
inc
push
xchg
fwait
shlb
or
push
cmp
mov
rcrl
mov
xor
xchg
push
push
repz
shlb
or
or
xchg
or
je
sbb
das
fisttpll
cwtl
int
int
lds
mov
inc
fiadds
or
iret
imul
adc
add
sar
test
arpl
mov
orl
xor
sahf
cmp
shlb
inc
mov
pop
mov
fs
das
inc
leave
scas
jb
sarb
jne
arpl
iret
adc
icebp
enter
or
mov
add
dec
in
push
or
mov
mov
adc
out
push
dec
insl
pop
mov
mov
mov
popa
fs
jnp
push
inc
or
sub
cmc
int
lahf
mov
addr16
dec
adc
cmc
cli
add
pop
sbb
jecxz
mov
jb
pop
mov
inc
pusha
pop
loopne
mov
mov
pop
mov
insl
outsb
cld
cmpl
xor
out
jne
icebp
fwait
cmpl
add
add
nop
icebp
orl
xchg
repz
insb
mov
stos
jbe
inc
cmp
les
subl
cwtl
cli
aas
les
xlat
aad
jle
shl
lret
dec
imull
adc
popl
cs
stc
movsl
jns
int3
repz
fistps
inc
test
out
or
add
jae
dec
inc
mov
push
dec
pushf
test
push
mov
stos
data16
dec
in
shlb
dec
jl
enter
inc
pop
sub
lret
das
jnp
mov
cld
daa
ljmp
or
dec
push
rol
or
mov
mov
xlat
in
xchg
out
dec
in
pop
sub
test
mov
js
popf
cltd
inc
aam
sub
sub
lret
xchg
cli
loope
out
mov
xor
xchg
push
ret
in
mov
scas
pop
cld
cmp
xor
ficompl
jle
add
shr
popf
mov
pop
or
lods
jl
imull
das
push
sub
pop
and
jo
out
cmovns
xor
xchg
xchg
inc
clc
test
cmpsl
dec
add
data16
repz
arpl
addr16
inc
xchg
pop
and
pop
test
sub
mov
roll
ss
dec
andl
ret
rcrb
add
sub
adc
dec
push
xchg
test
cmp
sbb
pop
data16
stos
notl
pop
stos
hlt
cmp
sbb
sub
dec
pop
push
inc
ja
mov
aad
shrb
xor
mov
mov
call
dec
jg
cli
and
add
cltd
adc
jecxz
mov
addb
js
inc
add
pusha
mov
sub
aas
mov
xor
int
and
adc
or
adc
ret
hlt
mov
arpl
jne
movq
mov
repz
scas
push
fsubr
xor
mov
les
stc
jmp
inc
sbb
xlat
push
xchg
out
jne
push
rclb
shl
adc
push
mov
into
cmp
je
nop
shlb
stc
adc
arpl
inc
push
and
ds
add
movsb
mov
sbb
jp
or
dec
movsl
xor
sbb
mov
xchg
test
sub
push
sub
movsl
test
in
leave
push
cmp
popa
outsb
add
add
lods
dec
lods
pushw
adc
mov
in
popa
dec
xchg
jbe
nop
lahf
sub
mov
jns
adc
sbbl
add
mov
addb
stos
sahf
cmc
stos
int
arpl
bnd
xchg
pop
mov
int3
insl
ljmp
imul
push
pop
add
orl
test
jmp
adc
inc
mov
inc
dec
push
pop
add
cmp
add
dec
ret
adc
mov
ret
insb
loopne
in
add
rcr
inc
mov
icebp
add
testb
nop
xor
sbb
ficompl
add
int
push
dec
shrl
xor
sbb
jp
add
fsts
cmpb
andb
lret
mov
insb
or
pusha
adc
mov
dec
sbb
or
or
adc
arpl
sbb
pop
sbb
pop
outsl
pop
sbb
dec
cmpsb
test
and
cmpl
dec
dec
lret
sbb
les
add
inc
call
xchg
mov
pop
xor
ret
aam
jg
push
pop
enter
orb
les
movsb
mov
cltd
mov
and
mov
ret
mov
xor
mov
mov
cmp
stos
or
push
lahf
fs
sbb
mov
jo
sub
push
xchg
lahf
pop
push
xor
xor
mov
mov
xor
mov
mov
push
mov
jns
js
pusha
fstp
and
retw
mov
push
add
rclb
jnp
stos
ljmp
insb
push
or
pop
ss
incl
sub
and
jmp
imul
jmp
xchg
std
lds
lcall
or
fsubs
int3
inc
jmp
outsl
cmp
mov
mov
mov
shrl
aam
nop
mov
cmp
aad
or
inc
movsb
ficoms
or
mov
add
mov
ljmp
arpl
cltd
cld
testl
xor
pop
mov
lcall
aas
or
nop
popf
xchg
pop
nop
mov
cmp
insb
push
mov
or
and
int3
jo
fs
int
xor
mov
cmp
jmp
adc
dec
notb
or
stos
jb
mov
or
and
inc
or
push
mov
push
xor
lds
jns
xor
bound
orl
pop
sbbb
fnsave
cmp
sub
cltd
sub
and
call
orl
add
and
push
stos
inc
test
inc
pop
xor
test
movsb
lahf
mov
cmp
and
flds
xchg
xchg
sbb
minps
movsl
test
pusha
call
mov
ljmp
inc
pop
mov
xor
mov
adc
loope
and
xchg
cld
or
xor
dec
and
jo
pop
fadd
int3
xchg
sahf
cmp
push
xchg
dec
cwtl
popf
lcall
fldt
push
jge
sbb
adc
cmpsb
je
roll
js
mov
imul
sbb
das
fildll
push
ljmp
and
dec
mov
mov
mov
leave
cmpb
adc
add
adc
test
add
or
mov
in
dec
int
and
xor
loopne
mov
xchg
mov
push
loope
in
adc
mov
sarl
push
lahf
in
cmp
xchg
or
push
mov
mov
push
jmp
xchg
and
cmp
pop
mov
insb
test
push
mov
xor
in
out
add
fisubrs
pop
int3
sub
repnz
jbe
popf
int
stos
mov
mov
lds
stos
sbb
xchg
lds
mov
dec
mov
dec
dec
lods
pop
mov
push
dec
pop
fnstcw
cwtl
push
pop
jmp
cmp
pop
and
push
insb
test
add
mov
nop
in
leave
add
sti
adc
pop
sbb
mov
pop
inc
sub
inc
aam
push
push
adc
jne
inc
scas
add
xchg
inc
jb
adc
mov
cmp
jmp
lret
mov
sub
stos
cmpsb
test
mov
stc
adc
movsb
xor
push
fldenv
xchg
clc
or
mov
jecxz
lret
cld
int3
mov
mov
sbbl
ret
test
sub
pusha
dec
xor
fcmovbe
sub
addr16
test
sub
call
sbbl
stc
pavgw
test
fs
jo
xor
movsl
rcrb
movsl
mov
and
mov
sub
push
mov
pop
and
dec
jl
popf
mov
loope
fimull
cwtl
mov
xor
lahf
sub
adc
jne
push
xor
xor
popa
mov
insl
cld
jno
jns
add
inc
mov
movsb
insl
fdivs
xchg
shrb
dec
sbb
cmp
addb
inc
test
rorb
add
stos
gs
xor
dec
jge
jo
sub
cmp
imul
xchg
fidivrs
add
scas
mov
nop
into
cwtl
mov
mov
and
mov
adc
dec
and
xchg
shll
out
cld
adc
mov
push
popa
loopne
sub
or
adcb
sbb
add
mov
dec
adc
pop
cmp
jmp
imul
aam
movsl
lcall
fs
int3
and
or
inc
or
test
les
and
rclb
in
call
out
ret
push
jbe
inc
rol
ret
les
jecxz
stos
jno
add
insl
mov
mov
push
or
adc
rclb
and
aam
mov
jp
push
rcrl
adc
inc
pop
xor
xor
stos
scas
dec
lret
mov
push
xchg
mov
jne
or
enter
divl
cmpsl
scas
mov
shl
sbb
and
ret
jecxz
push
stc
sbb
push
pop
pop
push
loopne
imul
leave
out
ja
mov
out
mov
cmp
jnp
je
mov
sbb
pop
sbb
mov
jmp
mov
and
and
mov
adc
mov
loope
enter
cmp
int3
mov
mov
imul
xchg
jo
lock
mov
pusha
cmp
or
cmp
sbb
jg
sbbb
jp
jmp
jecxz
or
xor
lcall
imul
mov
cmp
adc
sahf
jno
jle
xlat
sub
ljmp
dec
pop
lea
dec
xchg
adc
es
out
scas
arpl
inc
mov
push
adc
jb
daa
jo
pop
movsl
cld
push
jo
pusha
push
pop
aas
mov
pop
sbb
lret
call
xor
and
pushf
dec
and
pop
inc
repnz
loopne
lods
mov
mov
sbb
mov
mov
xor
dec
jbe
pop
or
dec
test
loopne
fcoml
popa
inc
xchg
dec
cmp
cli
lret
ja
sub
stc
pop
stos
xchg
sbb
push
leave
rorb
imul
mov
stos
mov
mov
sub
rcll
xor
in
inc
mov
sbb
adc
mov
and
mov
loop
mov
cwtl
ret
or
ljmp
insl
leave
mov
adc
das
popf
push
aas
or
inc
add
cmp
mov
sarb
in
test
pop
push
test
or
jns
ss
test
iret
jg
cltd
push
cmp
dec
insb
adc
xchg
shl
ljmp
or
sub
out
js
lock
test
and
inc
outsb
test
mov
lcall
sbb
inc
xor
popa
sbb
dec
cmp
pop
sbb
inc
cmp
and
subl
xor
lea
in
dec
mov
loop
mov
in
mov
sub
scas
fldt
jb
mov
dec
sbb
data16
test
xor
sbb
inc
arpl
mov
xor
pop
adc
rorl
stos
fs
imul
pop
jns
andl
xchg
in
mov
sbb
jp
mov
sbb
or
push
push
movsb
dec
sti
cli
sbb
addr16
jne
fcoms
mov
mov
mov
dec
xor
and
and
arpl
mov
out
hlt
sbb
adc
inc
negb
jmp
ss
push
addr16
cld
outsb
std
and
xchg
push
sarl
in
imul
push
xlat
adc
adc
mov
pop
jno
int
flds
adc
dec
sbb
jne
les
filds
gs
mov
add
outsb
pop
add
test
xor
xchg
mov
push
inc
popa
aad
das
jg
mov
lods
cmp
cltd
mov
mov
push
cmpsl
repnz
adc
push
xchg
adc
shrb
jae
mov
or
mov
mov
loope
add
hlt
enter
psrlq
fbstp
mov
clc
test
and
ja
xchg
pop
popf
xor
add
jge
outsl
xchg
shrb
xor
jge
inc
dec
outsb
test
push
aaa
or
into
sbb
pop
sbbb
mov
stos
and
xor
mov
int
adc
lret
xchg
popf
and
and
mov
adc
adc
or
sub
and
cmp
xchg
sub
dec
inc
or
adc
mov
adc
or
dec
sbb
cmpsl
adc
sub
rorb
and
jge
cmpsb
or
dec
xorb
nop
or
arpl
add
push
orb
dec
and
nop
mov
int
mov
popf
and
mov
adc
mov
int3
lret
mov
adc
sbb
iret
or
sbb
adc
or
jge
adc
jns
stos
jb
dec
mov
aaa
test
push
mov
pop
outsl
decb
in
cmp
mov
adc
mov
cmp
outsl
mov
sub
xor
popf
std
dec
shll
in
sub
loop
adc
repz
call
in
push
outsl
jle
and
push
sbb
dec
mov
adc
mov
fwait
vpaddw
loope
inc
shlb
sbb
fadds
push
xor
aam
mov
xchg
push
or
and
push
clc
and
inc
or
gs
or
pusha
test
add
pop
mov
test
push
ljmp
lahf
fcomi
jo
inc
sbb
xor
cmc
ljmp
mov
sub
sub
repz
cmp
mov
scas
lods
or
lret
adc
movsb
rcrb
int3
loopne
add
pop
outsb
adc
int
sbbb
cmp
or
sub
or
mov
mov
inc
add
or
bound
or
xlat
enter
push
inc
loope
or
mov
and
xor
cmpsb
mov
shrl
xlat
mov
stos
test
dec
push
test
sub
xchg
icebp
dec
test
xchg
push
jb
xchg
stos
andl
or
or
inc
xor
dec
xchg
jnp
sbb
hlt
out
test
fstps
lret
xor
mov
mov
inc
mov
sub
loopne
jp
xchg
cmp
mov
dec
sti
call
add
mull
rcrb
cwtl
lods
xor
cmc
xchg
lods
inc
xchg
adcb
inc
pushf
pop
inc
xchg
lock
out
stos
inc
fisubs
xchg
sbb
std
add
pusha
orb
cmp
push
or
imul
cltd
and
mulb
push
orl
cmp
xchg
cmp
and
bound
mov
test
outsl
cwtl
fcoms
and
mov
sbb
xchg
pop
insb
xlat
lret
mov
stos
dec
cmp
or
lcall
nop
or
cmp
sub
movsb
lods
loop
iret
int3
pop
out
lcall
movb
sarl
xchg
fstps
sub
sbb
or
loop
cmovbe
outsl
cmp
push
ljmp
and
xchg
inc
adc
mov
mov
pop
lea
cli
push
js
xor
or
aad
sbb
gs
xchg
pop
xlat
test
mov
inc
mov
add
mov
je
inc
pop
inc
xchg
cwtl
dec
int3
inc
loopne
scas
inc
add
aas
inc
pop
inc
push
dec
sbb
pop
jmp
or
adc
aad
test
push
push
insb
inc
xor
mov
arpl
jae,pn
dec
stc
xorb
cmpsl
cwtl
inc
jmp
and
test
cs
mov
cmp
lahf
or
arpl
xor
xchg
mov
daa
stos
dec
xor
fcoms
add
cwtl
xor
bound
out
jo
mov
lea
out
loopne
mov
enter
xor
bound
pusha
es
xchg
xor
movsl
call
hlt
popa
loope
jecxz
push
xchg
mov
stos
clc
sbb
xor
in
xchg
bound
dec
cmpsl
shrb
add
push
mov
or
and
jmp
xlat
stos
add
sbb
inc
xor
cmp
rcrl
jbe
icebp
js
rcll
pop
push
adc
sbb
cwtl
adc
leave
add
mov
jns
xor
lds
inc
fldt
xor
sub
jnp
pop
stc
fadds
lret
cltd
in
mov
aaa
mov
mov
aad
mov
add
ss
data16
arpl
xlat
ljmp
imul
fwait
mov
fisubrs
cmp
push
sub
mov
adcb
mov
jge
add
adc
pusha
call
jl
add
push
ret
clc
dec
test
dec
push
call
jnp
les
rcr
call
jne
add
push
ret
clc
call
jb
add
push
ret
rol
jbe
ja
jmp
add
rcr
push
call
jmp
les
shr
jmp
jbe
mov
add
loop
in
add
add
jnp
les
push
call
jnp
les
test
je
jne
jbe
shl
js
jns
js
jmp
jle
into
call
jmp
ret
mov
jp
jnp
ja
add
add
je
pushf
jmp
lcall
mov
add
add
mov
call
jge
add
push
ret
rol
mov
dec
xor
push
call
jp
les
stc
add
mov
jno
clc
sub
push
call
jle
les
jmp
ja
dec
mov
call
call
or
add
test
je
or
push
popl
xor
jb
jae
call
add
xchg
sar
ror
call
jns
add
push
ret
mov
dec
xor
jp
jnp
jmp
sub
mov
push
call
jmp
jno
xchg
dec
add
jb
jae
jg
add
sar
sub
jmp
jnp
add
add
jo
stc
add
jne
jmp
jg
lock
pop
loopne
and
jo
scas
jnp
jo
lds
jbe
jbe
js
pop
jle
adc
fisubrs
cli
mov
inc
pop
mov
gs
xchg
fnstcw
outsb
mov
ret
xor
loopne
pop
add
push
xchg
lea
inc
int
in
mov
divb
ret
shll
jb
and
adc
loopne
xchg
nop
mov
xlat
jp
add
aas
repz
cmc
dec
ds
or
cmpsb
ret
and
dec
xor
sbb
insb
jb
push
out
test
sbb
jbe
int
dec
rcll
hlt
jl
popaw
out
test
mov
mov
cmp
xor
cli
nop
sub
into
std
sub
add
insb
daa
pop
mov
fldl
dec
xor
scas
pop
sub
cmp
shrl
sbb
das
outsl
adc
xchg
bound
inc
scas
test
lcall
ljmp
pop
push
jg
mov
lock
data16
fsubs
xchg
repz
pop
rorl
loope
gs
subb
jbe
test
push
shl
in
test
jle
fcompl
cld
popf
push
sbb
dec
ljmp
enter
mov
mov
adc
sbb
fbstp
icebp
cmp
xor
jecxz
add
les
ret
lods
xor
outsl
xchg
sti
popa
sbb
mov
and
mov
or
aaa
cmp
cmp
pop
es
lcall
jns
mov
arpl
xchg
loopne
dec
mov
pushf
xchg
in
jo
xchg
in
fsubl
dec
pop
dec
sti
dec
js
adc
pop
push
jg
sub
inc
aad
mov
into
leave
imul
add
into
xchg
sbb
leave
out
les
jbe
sub
inc
push
push
int3
pop
and
sbb
pop
imul
cld
aad
pushf
pop
sub
and
test
mov
and
sbb
jge
aas
pushf
test
sbb
icebp
sti
or
pop
push
push
jle
xlat
test
aaa
push
fiaddl
push
jnp
cwtl
pop
sub
cs
sahf
jnp
lcall
push
add
jnp
push
shrl
out
jmp
cmp
ret
fcoml
cmp
dec
push
pusha
sahf
rolb
stos
shrb
cmpsb
clc
out
or
neg
mov
jle
js
loopne
sbb
push
mov
daa
mov
jne
mov
and
fldenv
mov
push
testl
inc
fs
xchg
inc
cmp
cmpsb
and
xchg
mov
shrl
mov
adc
shll
sbb
inc
stc
xchg
js
add
aaa
cmp
xchg
sbb
adc
fisubs
out
and
dec
in
pop
pop
into
cmc
push
pushf
jmp
adc
mov
sahf
mov
clc
lret
adc
dec
push
xchg
inc
pop
adcb
jmp
je
andb
pushf
pop
jno
sbb
push
sub
hlt
fdivrp
mov
sbb
dec
push
mov
scas
dec
add
insb
mov
jno
inc
push
sbb
loopne
test
out
xchg
insl
mov
fdivrl
sub
ret
xor
aaa
mov
cli
add
cltd
imul
int3
inc
add
cld
lods
addr16
testl
inc
test
aaa
cwtl
jns
xor
add
jp
stc
aam
iret
push
lret
add
inc
popf
mov
mov
inc
cmpsb
mov
cmp
jmp
push
pop
pop
inc
or
pop
sbb
in
xor
fimuls
fisttpll
mov
inc
adc
jmp
adc
or
in
mov
xor
js
aaa
das
xor
mov
xor
inc
cld
cld
sbb
mov
out
out
andl
stc
jecxz
test
sti
sbb
xorb
ret
les
sub
outsb
stos
scas
scas
jp
cld
sub
dec
inc
xchg
xchg
xchg
dec
fwait
mov
fnsave
popf
push
cmpsl
insb
loopne
and
std
sbb
push
insl
or
xchg
mov
loop
xchg
fs
decl
gs
ljmp
mov
lcall
in
cmp
dec
icebp
jecxz
bound
jae
pop
xchg
ficomps
rorl
or
stc
test
or
push
jns
jnp
jle
push
in
movsb
mov
push
mov
or
sub
mov
xchg
call
jp
sti
or
movsb
xchg
fsubrp
sbb
sbb
push
cmp
movsb
in
mov
enter
scas
add
jg
xabort
hlt
push
test
push
int3
jnp
fchs
aas
rolb
iret
mov
loope
dec
jp
dec
lcall
aad
push
cmc
stc
mov
cli
mov
insl
dec
push
loopne
rorb
sbb
xor
test
daa
or
xchg
push
stos
insl
dec
mov
xchg
dec
push
sahf
and
into
sbb
ss
sbb
mov
nop
dec
and
ds
movsl
jge
fcomi
lcall
loopne
imul
adc
inc
je
bound
adc
mov
arpl
sbb
add
add
inc
xor
cld
cmp
out
adcb
lret
mov
cld
push
or
and
sub
jmp
xchg
ds
neg
mov
xor
adc
faddl
adc
push
stos
lea
sub
adc
stos
and
sub
test
add
cmp
idiv
or
sahf
ja
jb
in
xor
adc
testl
test
mov
fbstp
xchg
jae
push
sub
push
out
leave
mov
xchg
inc
mov
es
mov
dec
mov
lcall
mov
adc
xor
mov
cld
push
loopne
jne
pop
icebp
scas
cld
jmp
popf
aas
dec
or
or
inc
popf
sub
js
xor
lea
mov
shlb
sub
push
sub
push
daa
add
les
imul
popf
popa
imul
nop
or
jae
jno
rcrb
scas
ljmp
ljmp
sahf
push
insb
loopne
xor
pop
das
push
inc
orl
mov
cld
hlt
lods
fcoms
jg
sub
sbb
cmp
pop
sub
shll
pop
jge
dec
inc
pop
jo
mov
cmc
loop
push
or
out
adcl
push
shrl
and
push
adc
push
lret
pop
xor
loop
outsb
test
adc
scas
in
sbb
mov
pop
arpl
and
dec
mov
xlat
cld
and
xchg
jg
clc
hlt
xchg
out
nop
push
jmp
std
inc
mov
sbb
adcb
cmp
push
aam
inc
pop
adc
sahf
inc
jo
cmpsb
xchg
xor
add
stc
testl
jne
push
aas
dec
pop
outsl
push
fisubl
mov
mov
jge
psubusw
imul
into
stc
xchg
int
aam
inc
add
scas
sbb
in
orb
inc
fisttps
mov
adc
test
dec
mov
testb
lds
xor
fdivrl
cli
cmp
sbb
mov
sub
mov
rcrl
mov
shlb
mov
rol
imul
repnz
aas
in
add
xor
inc
or
push
xchg
testl
cs
push
or
nop
and
in
push
push
pop
mov
loop
dec
cmpsb
je
test
xchg
push
cmp
pop
movsl
adc
or
shr
or
in
pop
dec
mov
icebp
jmp
mov
fldenv
and
rol
push
scas
test
jl
mov
arpl
pop
das
mov
insl
fiadds
lods
mov
cmp
dec
in
mov
mov
mov
adc
rorb
loop
adc
and
out
jb
inc
add
aaa
insl
inc
sub
or
xchg
in
inc
aas
sub
adc
mov
sub
adc
mov
stos
pop
mov
mov
test
mov
cltd
adc
push
inc
xor
sub
sbb
dec
sub
or
rcrb
inc
xchg
mov
stos
push
out
enter
es
mov
push
int
mov
mov
or
inc
ret
fs
cmp
cmp
jg
out
rcrb
mov
in
cli
pop
sub
adc
mov
shll
mov
and
push
xchg
arpl
and
in
jp
pushf
jno
sub
jb
jmp
lods
sub
sbb
aas
sbb
jl
xor
outsb
inc
xchg
mov
mov
cmc
lea
and
roll
adc
mov
sbb
xchg
inc
insl
xor
xchg
lea
inc
divl
or
mov
sbb
push
or
lahf
out
call
lods
or
into
cmp
cmpsb
sub
out
adc
inc
scas
call
xorl
pop
and
das
leave
jle
mov
mov
iret
and
jno
dec
ja
xor
cmp
xor
shll
enter
adc
push
cmp
and
xchg
mov
mov
and
jns
xchg
or
pop
jne
cwtl
inc
sbb
jle
lret
add
pop
aas
dec
sub
xor
jb
push
das
or
bound
mov
popa
add
into
pop
and
inc
add
mov
push
mov
fwait
jg
mov
lret
add
fcompl
lret
mov
pusha
jg
mov
mov
jns
xor
stc
pop
jbe
nop
inc
je
cmc
pushl
jbe
pop
andl
pop
jnp
lret
cli
fwait
dec
sti
inc
mov
push
out
filds
clc
in
fsincos
in
fmull
pusha
out
mov
mov
or
ja
sub
add
xchg
pop
jae
inc
je
lahf
out
pop
lds
addb
xlat
jns
imul
or
int3
shlb
sub
dec
mov
mov
pop
in
xorb
in
pop
clc
loop
inc
xchg
out
in
cli
pop
xchg
xchg
cmpsl
and
cmpsl
cwtl
push
mov
xchg
loopne
push
mov
inc
jge
mov
pop
or
push
outsb
mov
lret
lds
insb
jo
xor
ret
loop
inc
or
or
cmpsl
fcomps
xlat
pop
pop
int
lahf
push
xor
mov
adc
in
insb
dec
in
int3
fidivl
cmp
pushf
cld
mov
cmp
pop
sub
mov
and
add
hlt
adc
in
sti
dec
mov
imul
pop
push
add
mov
mov
adc
cmp
lods
outsb
es
fsts
jge
adc
mov
int3
sti
push
xor
push
jns
pop
gs
shl
sub
sti
jmp
hlt
sbb
sbb
jmp
jge
sub
and
or
sub
jmp
xor
pop
cmpsl
movsl
sar
repz
std
packssdw
sub
mov
movsl
lds
adc
imul
sahf
mull
sbb
and
cmp
nop
cmpsl
scas
adc
pop
or
cmpsb
jle
mov
cmp
repz
mov
es
insl
mov
mov
mov
mov
dec
test
dec
sub
aaa
push
leave
adc
inc
nop
dec
out
mov
dec
scas
repz
sarl
push
mov
xchg
inc
loopne
xchg
ds
jnp
ss
scas
shr
mov
mov
mov
fldenv
jg
xchg
dec
int
pop
mov
adc
rolb
mov
lcall
stos
pop
sarb
sahf
xchg
inc
lds
sbb
push
inc
pop
push
inc
insb
mov
jmp
jnp
add
das
inc
ret
lods
in
bound
push
pop
pop
insl
xchg
subb
or
loopne
aas
imul
into
jl,pn
cmp
or
inc
mov
in
sub
adc
shrd
xor
popa
in
mov
fucomi
mov
pushf
mov
fs
inc
dec
xchg
inc
std
xchg
jo
scas
cmc
clc
cmpsb
inc
jmp
jecxz
add
mov
xor
push
sbb
sub
sti
mov
adc
stos
fsub
movsb
and
push
push
lcall
out
mov
or
jae
cmpsl
or
loop
pextrw
inc
outsb
into
pushf
mov
jb
push
dec
push
sti
xor
cmp
inc
movsl
dec
aaa
dec
in
mov
sub
mov
cmp
push
lahf
mov
push
sub
ret
mov
je
das
aad
decl
je
sbb
sbb
mov
mov
enter
mov
divl
and
push
and
cld
out
mov
test
mov
test
push
stos
add
or
aam
sbb
pusha
in
test
pop
jge
jle
pop
pop
les
rolb
inc
jne
loop
jo
rcrl
pop
outsb
and
xor
insl
mov
dec
jno
fdivl
test
inc
jne
stc
inc
xor
out
mov
cmp
fidivrl
mov
sub
add
cli
lret
fldcw
movsl
mov
dec
pop
inc
pop
mov
mov
test
or
pop
xchg
jmp
jge
mov
stos
and
xor
cmp
inc
xor
mov
sbb
fsubr
or
mov
mov
jmp
popf
out
std
mov
or
pop
add
sub
dec
pop
cmpsl
jge
mov
sti
psraw
inc
dec
aad
movsl
inc
jge
out
jb
sbb
push
or
popf
testl
lret
dec
pop
lods
pop
cmpsl
cs
jbe
out
cli
dec
or
fdivrs
repnz
aad
es
pushf
idivl
lods
std
add
aad
loope
jne
int
push
aaa
cmp
mov
leave
loope
inc
nop
iret
or
push
dec
mov
test
dec
cmc
cs
sub
movsl
mov
dec
push
dec
pop
mov
cs
cmp
xlat
sbb
nop
jg
cmc
push
int
outsb
in
inc
jmp
cmp
mov
jg
dec
lret
jno
sub
sbb
mov
lea
push
jmp
xchg
in
jle
mov
sbb
and
test
ljmp
adc
sbb
out
mov
insl
sub
rol
sub
in
cmp
pop
adc
pop
cs
js
jg
cltd
xorb
pop
out
leave
cmc
inc
xor
and
jb
fcmovu
push
jno
lret
and
dec
add
jmp
movsb
jge
push
in
mov
fstpt
sub
adcb
mov
push
pop
sbb
inc
cmp
in
std
jg
cs
addr16
outsl
mov
loop
popa
cmp
sbb
scas
jo
xlat
mov
rolb
cld
mov
inc
xchg
jmp
jae
cmp
fldenv
cmp
test
movsb
lock
jbe
inc
inc
sub
add
fidivl
lret
mov
lcall
sbb
mov
mov
sub
push
sub
movsb
js
cmpsl
insb
xchg
mov
add
test
sub
and
add
in
lea
add
in
push
shrb
in
dec
test
xchg
out
dec
pop
jg
mov
inc
cmp
js
mov
mov
push
xor
pop
outsb
aaa
inc
xor
xor
jb
pop
out
push
jno
dec
gs
jmp
lcall
inc
mov
sub
mov
fstpt
popa
popa
into
adcl
jns
les
inc
popa
pushf
push
lds
pusha
mov
jp
jl
xchg
add
enter
mov
stos
cwtl
pop
dec
and
or
and
cli
xchg
test
adc
call
and
mov
mov
xor
pop
jo
dec
fiadds
mov
imul
push
dec
jecxz
fwait
xlat
dec
xor
fsubrs
jge
cmp
inc
and
or
mov
addr16
pop
hlt
mov
pop
cmc
cmpsb
inc
fisubrl
lcall
popa
stos
fstpt
loopne
mov
push
insl
push
scas
lcall
out
sub
cmp
add
mov
movsl
hlt
pop
pop
sti
stos
dec
ficomps
adcl
movsl
mov
or
mov
popa
outsl
or
int
or
pop
and
dec
dec
mov
subl
sub
in
ds
pop
jl
inc
in
sbb
mov
int3
shlb
jp
xor
cmp
jmp
in
mov
fcmovnbe
adc
cwtl
add
mov
insl
repnz
xchg
xlat
cmpsb
lea
xor
xchg
mov
or
xchg
and
sti
mov
shrb
ror
loope
fldcw
jmp
mov
mov
in
mov
imul
in
xorb
movsl
stc
out
cmp
and
outsl
cmp
ficoms
xchg
ret
and
rcrl
jge
lock
mov
adc
nop
or
aas
mov
push
push
xchg
pop
jo
clc
int
lret
mov
js
pop
dec
cld
xor
in
fcomps
xor
mov
test
push
shrl
add
and
adc
or
push
lods
loope
xchg
sbb
jl
fs
cs
test
xchg
pusha
jecxz
xlat
bound
xor
cwtl
aam
aam
popa
push
push
ret
stos
push
test
xchg
leave
adc
push
sahf
pop
mov
pop
in
loopne
iret
mov
ljmp
jnp,pt
pop
and
adc
mov
cmp
mov
in
xor
in
inc
lods
cmpb
cs
ret
call
or
pop
ret
push
int3
insb
jp
out
or
mov
add
les
push
push
lret
fmulp
jb
sbb
repz
aad
je
mov
or
dec
mov
and
mov
adcb
rolb
mov
test
and
out
addl
out
push
mov
dec
bound
in
jl
fnsave
and
ja
ss
add
std
loop
pop
mov
aad
and
jns
ljmp
or
fwait
scas
xchg
jns
loopne
adc
fcomp
mov
stos
xor
jecxz
dec
das
in
fiaddl
or
pop
dec
rcrl
rolb
cmp
icebp
jb
mov
push
shll
js
out
mov
jp
push
push
inc
mov
call
shl
std
popf
fcmovne
xor
mov
loop
enter
sbb
out
pusha
sbb
pusha
movsb
mov
shlb
jns
cld
pop
xchg
andl
lea
jnp
bound
cltd
mov
or
cmp
sub
adc
add
push
insb
fidivs
xor
ljmp
fistpl
jecxz
pushf
sbb
adc
dec
in
movsb
cwtl
xchg
xor
cli
clc
cmp
adc
aas
xor
lahf
xlat
cli
xor
sbbl
lea
or
and
outsb
out
dec
test
sahf
out
lret
lds
cmp
adc
sub
push
aaa
daa
xor
and
scas
dec
in
inc
mov
lods
mov
mov
pop
push
push
das
push
cwtl
ja
std
xchg
aas
mov
cmp
andl
sarl
scas
jecxz
iret
inc
pop
pop
ror
pop
adc
push
and
push
adc
mov
pop
out
icebp
and
xor
xchg
or
in
stos
pop
jno
es
mov
test
pminub
or
in
push
and
in
jb
mov
test
xchg
push
les
es
bound
out
push
test
sti
subb
jl
les
cmpsl
add
mov
xor
sbb
sub
mov
or
jno
mov
pop
inc
lahf
stos
sub
jne
adc
divb
cmp
ja
mov
cmp
aas
pushf
or
int
mov
sub
xchg
adc
imul
lea
dec
xor
inc
sbb
xchg
cli
mov
je
pop
sub
cmpsl
test
xchg
sti
mov
add
or
in
inc
push
mov
xchg
fistpll
cli
ret
sbb
or
fs
sub
out
sub
jne
stos
loopne
pop
das
aam
pushf
mov
adc
dec
push
push
xor
popl
hlt
movsl
int
cmp
xor
fstpt
dec
fists
xor
pop
fadds
pop
xchg
fcomip
mov
mov
loope
push
ret
push
mov
lcall
pushf
cltd
pop
jo
mov
add
imul
mov
push
jmp
gs
test
add
shlb
rorl
orl
frstor
jnp
mov
sbb
add
adc
loope
cs
push
and
push
insl
cmp
repz
in
fdivrp
sbb
xor
inc
cmc
ss
insl
std
sbb
mov
cmp
mov
push
push
dec
dec
lods
negb
dec
mov
adc
cmp
push
adc
ja
push
xor
clc
mov
add
js
xchg
imul
out
out
dec
cmp
push
ret
orl
mov
jb
push
xlat
testl
popa
inc
es
lret
je
add
ljmp
test
out
mov
lret
or
xor
mov
sub
jo
cmpsl
int3
sqrtps
dec
cltd
inc
sbb
scas
stc
addr16
mov
test
iret
adc
mov
sbb
mov
stos
cs
cwtl
cmp
lret
fwait
dec
mov
and
push
xchg
pop
pmaddwd
out
jnp
aas
and
stos
xor
jecxz
pop
mov
jne
je
push
ja
xchg
mov
leave
popa
inc
into
nop
iret
and
dec
inc
cli
adc
pop
inc
jnp
std
clc
pop
cmp
cmp
test
jae
rcrb
aam
lret
mov
inc
cs
fnsave
xlat
jo
fdivrs
xchg
cltd
cwtl
lahf
test
addl
out
dec
nop
xorb
mul
andb
jno
incl
cltd
adc
or
add
dec
loop
push
sub
clc
int3
xchg
jg
cs
mov
or
in
loop
mov
sbb
fmul
mov
and
xor
xor
sbb
pusha
mov
jecxz
pop
inc
in
mov
jns
cmp
outsl
std
pop
dec
mov
add
jnp
dec
popf
xor
inc
mov
mov
mov
cltd
pop
cmpsl
mov
mov
ljmp
mov
sbb
pushf
ret
mov
insb
test
lret
push
xchg
xchg
jl
pop
cli
pop
mov
push
mov
lret
xlat
and
in
add
aam
arpl
insb
sbb
fcomp
mov
add
mov
lret
in
sub
lods
mov
push
fbstp
or
ror
out
jnp
pusha
mov
adc
jl
push
xchg
cmpsl
icebp
stc
test
leave
xchg
jne
mov
add
fiaddl
mov
or
and
xchg
iret
pop
pop
out
or
push
mov
xor
rcl
xor
fcomi
pop
negb
pop
and
imul
cmp
jmp
mov
and
in
xchg
stc
sub
int
outsl
jecxz
stc
mov
aam
std
cmpl
xchg
push
add
roll
mov
imul
mov
js
adc
or
out
mov
lods
test
test
shrl
lret
ja
add
mov
fcomi
adc
xor
test
xchg
mov
arpl
movsl
pop
dec
pusha
in
adc
repz
push
cmp
pop
pop
jae
sub
add
dec
in
mov
jmp
pop
jo
push
lea
adc
xlat
fstpl
mov
push
lret
aas
nop
push
mov
sbb
jns
divb
fadds
inc
stos
test
arpl
mov
sbb
pop
push
adc
shll
cmp
pop
push
adc
cmp
insb
or
fldt
sub
movsb
mov
shll
or
inc
sub
cmc
xchg
aaa
and
or
iret
ficomps
out
repz
cltd
lods
gs
dec
nop
sarl
cmp
adc
inc
xor
test
xchg
mov
in
pop
add
mov
out
mov
and
sbb
outsb
cmpsb
call
xor
cmpsl
xor
gs
imulb
or
jg
insb
out
mov
rolb
inc
insb
xchg
stc
imul
xchg
repz
lret
mov
sbb
mov
jno
push
add
add
lcall
lcall
xchg
fisttps
and
fisubs
lods
sub
add
rorl
imul
lahf
push
dec
xor
lea
std
sub
gs
arpl
dec
test
xchg
out
adc
mov
mov
sbb
jno
dec
pop
pop
iret
aaa
sub
pop
out
pop
push
push
dec
movsl
js
call
adc
shlb
ret
sbb
fcompl
lock
mov
pop
inc
sub
cwtl
fadds
mov
shr
xlat
daa
insb
mov
mov
add
insl
sub
mov
lcall
cmp
or
xchg
or
faddl
mov
pop
or
push
push
ss
jo
and
sti
xchg
out
lahf
std
cli
in
insl
shlb
and
movsb
xlat
decb
clc
mov
orl
test
or
fincstp
movsl
and
xor
rol
pop
pop
pop
insb
push
mov
cmp
adc
shlb
inc
push
cmc
adc
insl
outsb
aad
mov
jle
out
cmp
mov
bound
dec
roll
push
neg
mov
vpacksswb
mov
lret
xchg
test
pop
in
xchg
add
and
in
jmp
xchg
pop
xchg
orl
lea
xchg
xchg
or
stc
adc
inc
popf
lret
pop
lods
mov
sbb
xchg
iret
dec
pushf
pusha
mov
pop
adc
pop
push
sub
out
pop
repz
or
mov
lock
leave
adc
pop
pushf
mov
mov
mov
push
sub
xchg
xor
add
add
aam
popf
add
ljmp
data16
or
sbb
lea
iret
jmp
sub
pop
and
data16
stos
outsb
push
stc
adc
les
testl
enter
mov
adc
adc
leave
xor
sbb
lock
fdivr
shlb
jae
fsubr
pop
mov
sub
or
cmp
les
fwait
sub
mov
lret
adc
mov
pop
inc
sub
inc
call
add
jecxz
test
fistl
out
stos
loop
ret
sub
push
adc
xchg
push
call
lods
test
xchg
or
mov
std
into
imul
mov
pop
mov
push
mov
clc
inc
lock
cli
xor
les
bound
or
popa
xchg
jle
iret
cli
mov
mov
inc
xor
or
jmp
push
ds
bound
insb
insb
mov
jp
inc
movsb
mov
add
adc
push
jbe
es
ljmp
mov
mov
fmuls
sub
adc
fisubl
cld
popf
insb
sub
test
or
insl
mov
sub
dec
sbb
lahf
shrl
in
or
jno
and
mov
inc
rclb
fstpt
cmp
cmp
outsb
shlb
aaa
leave
dec
adc
sbb
movsb
jbe
dec
cmc
lock
adc
cltd
adc
sub
add
test
adc
sbb
insb
in
jns
stos
xlat
mov
lds
xchg
mov
jns
add
call
stos
jnp
jb
and
flds
stos
adc
stos
bound
into
call
xchg
cmp
enter
mov
out
jb
rep
or
nop
mov
shll
adc
xchg
cld
jb
adc
outsl
pop
nop
lods
imul
fsubrs
sub
sti
and
mov
test
dec
mov
mov
in
add
xchg
cwtl
ljmp
movsl
pop
xlat
cld
fnsave
outsl
jmp
pop
cmpb
mov
adc
xor
add
inc
ljmp
jne
test
je
mov
add
or
pushf
or
sub
pop
int
dec
in
and
dec
dec
mov
add
call
mov
mov
test
sbb
push
xchg
push
aas
mov
mov
sub
iret
shr
ficoml
xor
aad
push
pop
addr16
push
jl
in
cmpsb
add
cmpsl
mulb
inc
xchg
pop
mov
push
repz
stos
test
mov
das
test
cmp
daa
shr
jmp
inc
adc
sbb
pop
test
das
mov
lods
nop
addl
dec
mov
push
mov
inc
mov
inc
je
je
out
mov
outsl
test
sbb
lahf
call
mov
xchg
nop
repz
ja
mov
cmpsl
pop
push
dec
out
pop
fbld
mov
inc
jnp
popf
inc
mov
lret
cld
push
jp
inc
add
sub
pop
cmp
daa
addr16
js
cwtl
push
or
pop
sbbl
sbb
adc
scas
sub
je
mov
in
xor
xchg
aas
imul
xor
adc
push
inc
ret
xor
dec
mov
stos
cmp
dec
mov
aaa
stos
or
mov
imul
fxch
sahf
pop
or
xor
stos
fsin
or
jg
xchg
inc
xchg
js
cli
test
jmp
cmp
cmp
pop
xor
pop
jb
cld
push
orb
xor
stos
in
sub
loope
fwait
addr16
and
jg
pusha
dec
jle
inc
out
subl
sub
loopne
je
inc
test
sub
sub
ds
gs
cmc
es
mov
cmp
mov
push
out
out
jle
rep
das
push
fs
shll
xchg
or
cmp
repz
jns
gs
sub
or
cmp
iret
mov
mov
outsl
loopne
sbb
pop
stc
sub
fdivrp
sub
jb
lods
add
aad
cmp
push
ljmp
jb
inc
cs
rcl
cmpsl
icebp
fwait
cmpb
aas
and
imul
jb
mov
aam
faddl
fldl
sub
adc
popf
lahf
sub
mov
bnd
xchg
push
push
mov
sub
mov
or
cmpsb
pushf
xchg
shrb
fst
mov
inc
add
sahf
mov
mov
sub
jae
xor
add
mov
lock
int3
imul
mov
cltd
pushf
js
nop
sub
mov
add
inc
fdivrl
repz
add
push
fwait
test
pop
push
repz
clc
or
pop
add
pop
xchg
dec
in
jns
call
cmp
mov
jmp
mov
ret
add
enter
pop
les
lods
repz
pop
xor
in
pop
mov
dec
push
add
outsl
dec
mov
dec
jg
cmp
mov
mov
rol
ja
inc
je
out
rcr
pop
mov
push
mov
cmp
pop
pop
fnstcw
je
cwtl
out
cmp
sahf
lock
cmp
scas
lock
inc
jne
cmpsl
shl
addl
shlb
fistps
cwtl
jae
js
arpl
pop
mov
test
stos
imul
xor
add
loope
xchg
fsubr
add
mov
and
popa
xchg
dec
loop
mov
stc
movsb
js
nop
insl
xchg
mov
test
pushl
imul
pop
lahf
repz
add
push
sti
repz
push
ss
clc
and
pop
add
outsb
xchg
dec
in
test
mov
sbb
mov
mov
add
into
out
shlb
les
das
cmc
push
pop
inc
out
push
cmp
mov
cmp
add
ja
mov
mov
imul
jo
mov
inc
mov
mov
lds
inc
je
inc
fstp
pop
subb
fcomip
lret
xchg
daa
mov
jp
cwtl
repz
cmp
and
or
gs
sub
adcl
loop
xor
or
aad
aad
js
jae
test
idiv
pop
pop
xchg
test
popa
push
nop
inc
addb
stc
push
mov
pushf
sti
or
mov
push
cmpsl
arpl
mov
pop
sub
mov
orb
arpl
mov
jecxz
pop
imul
pop
push
jns
nop
clc
cmp
push
add
shlb
cmp
sbb
icebp
insl
ret
add
jecxz
shlb
cltd
mov
dec
cmp
test
mov
or
hlt
addr16
pop
out
pop
into
insb
cmp
lahf
scas
jo
ret
mov
rol
dec
xchg
inc
je
gs
ficomps
ss
jle
in
fbstp
cld
mov
xchg
mov
arpl
jns
xchg
sahf
cwtl
push
pop
cmp
js,pt
lds
pop
data16
lock
jne
pop
cmpsb
jmp
and
mov
jecxz
adc
mov
bound
aad
pop
movsl
js
mov
pop
push
or
psllq
stos
shrl
mov
add
mov
mov
pop
mov
loop
rolb
fcmovb
aam
xchg
dec
sbb
mov
cmp
mov
xor
call
sub
cmc
mov
lahf
out
push
mov
dec
mov
clc
aam
dec
add
and
in
idivb
cld
jb
mov
sbb
xorb
sub
iret
add
dec
clc
mov
in
adcl
movsl
pop
jge
lahf
sarb
ret
jns
sbb
xchg
xchg
cmpsl
push
pop
pusha
push
jno
inc
xor
lods
add
sahf
mov
fcmovnb
enter
mov
call
pop
sbb
mov
js
push
xchg
mov
in
stos
sar
fwait
lret
sub
dec
aam
lret
out
jne
xchg
cmp
mov
pop
jge
and
push
mov
lock
arpl
cli
arpl
sbb
test
pop
adc
adc
rcrb
js
pop
mov
loopne
imul
or
stos
data16
jno
movsb
aaa
iret
aas
clc
mov
cltd
adc
stos
and
xchg
fildl
mov
loopne
iret
int3
int3
hlt
cmp
adc
xor
scas
rorl
cmp
repnz
sbb
pop
jle
aam
cmp
ljmp
inc
jecxz
pop
out
push
int
xor
ficomps
add
jns
ret
loope
cmp
pop
scas
fstps
xor
mov
add
ret
fst
mov
imul
lcall
mov
cmp
lcall
roll
or
roll
loope
popf
pop
loop
and
pop
xchg
push
cwtl
js
xor
or
adc
sbb
mov
ja
xchg
add
filds
loope
adc
loope
shlb
jns
add
dec
lods
mov
sbb
lret
scas
sbb
hlt
shlb
call
fs
jno
jecxz
add
ds
hlt
rol
imul
fidivl
mov
stc
fmulp
inc
adc
aad
pop
lods
hlt
stos
pushf
cmp
sbb
sub
mov
test
add
xchg
sbb
daa
mov
add
and
mov
lret
pop
adc
pushf
ret
sub
push
dec
xchg
arpl
jbe
gs
std
jnp
add
jae
enter
mov
fwait
xchg
add
mov
test
dec
out
rorl
cmp
fwait
pop
mov
fwait
cmp
iret
test
lret
je
adc
pop
data16
lea
mov
les
popa
xchg
stc
and
adc
jbe
data16
repnz
mov
adc
pushf
push
lods
fisubrl
loope
mov
mov
sbb
jns
das
insl
xchg
jmp
movsb
mov
inc
in
xchg
pop
sti
rclb
sahf
frstor
out
sub
jbe
mov
xchg
or
add
gs
gs
sub
outsl
outsl
xor
bound
sbbb
xor
cld
sub
and
push
jne
in
jg
icebp
movsb
mov
dec
mov
shrl
dec
push
cmp
out
aam
jns
jmp
and
xor
test
adc
pop
insb
scas
daa
test
push
push
mov
pop
lock
jmp
xlat
cmp
lea
fsubs
sbb
pop
xchg
scas
in
mov
sub
xchg
test
dec
jb
ss
or
bound
lret
fcoms
movsl
xchg
pop
pop
icebp
cli
mov
cmpl
push
or
in
pushf
xor
mov
sbb
or
inc
sbb
dec
inc
insb
push
movsl
clc
cmpsl
lock
cmp
push
stos
xchg
fistps
add
cltd
ds
mov
push
add
adc
push
popf
xor
mov
lret
xlat
dec
lds
cltd
mov
fisttpl
out
cs
test
mov
cld
xor
sub
fsts
sbb
fs
pushf
inc
cmc
push
stos
jp
std
int3
test
daa
cs
jg
xor
cmp
in
and
push
cmp
in
negb
sub
xchg
int3
cmp
stos
mov
std
and
pushw
and
std
mov
add
scas
mov
jae
aaa
adc
out
mov
push
or
xor
pop
daa
hlt
xchg
push
push
jae
dec
mov
xchg
inc
daa
hlt
jp
scas
je
bnd
fs
in
scas
loopne
push
aad
jge
imul
mov
cmp
psrlq
cmc
push
insl
jb
int
fsts
aas
sbb
outsb
pushf
xor
shr
mov
mov
negl
xor
and
fisttps
xchg
mov
shrl
sub
xor
bound
and
dec
dec
std
cmp
sbb
movsb
arpl
negl
xor
pop
mov
mov
shll
push
dec
add
pop
ds
and
jae
stc
pusha
pop
adc
out
xchg
jnp
shrb
sbb
or
inc
lods
sbb
adc
outsl
or
pop
les
and
adc
addr16
je
xorl
push
mov
add
mov
xchg
xlat
jbe
jo
repnz
xor
ret
adc
or
pushf
xor
shrb
xchg
cmp
or
mull
inc
fisttpll
clc
lods
idiv
xchg
mov
xchg
aas
lods
dec
push
inc
sub
in
adc
push
addl
or
cld
stos
mov
jmp
lret
push
iret
mov
mov
pushf
aas
xlat
imul
out
movsl
es
and
or
fisttps
int3
inc
inc
cltd
daa
jl
popf
or
inc
popa
imulb
icebp
push
jge
push
dec
inc
mov
cli
jno
dec
arpl
ja
pusha
cmc
add
aam
pop
xchg
mov
cmpsl
pop
and
sbb
outsb
jmp
jb
mov
mov
add
push
jne
scas
loop
test
sub
lea
dec
sub
lret
xor
hlt
repz
mov
icebp
cld
rol
pop
and
mov
testb
not
inc
decb
lcall
cmp
leave
add
dec
cmp
daa
mov
stos
push
push
jo
push
scas
inc
shll
test
xor
push
push
push
jo
pop
cmp
sarb
mov
rcrl
clc
inc
dec
adc
adc
fisubrs
cltd
aaa
jmp
cltd
clc
pop
mov
adc
test
xor
or
fs
stos
lock
or
data16
jbe
out
in
icebp
jp
stos
add
fsts
pop
or
in
stos
je
cmpsl
lret
js
js
or
add
inc
ljmp
add
in
mov
mov
popa
in
sub
jo
mov
mov
repz
cmp
mov
dec
jo
jae
push
inc
fnstcw
hlt
ljmp
out
repnz
push
xor
fldl2t
loopne
pushf
sbb
daa
test
or
pop
lds
outsl
jp
push
dec
jb
inc
sbb
cs
loop
mov
pop
aad
xor
sbbb
into
loope
xchg
mov
test
pop
bound
xchg
or
out
add
pop
movsb
loope
sub
dec
xchg
mov
dec
andl
clc
jbe
stos
mov
jb
leave
mov
int3
orb
inc
sub
push
push
movb
clc
imul
cmp
les
cmpsb
pop
movsb
rcr
sbb
lret
mov
fwait
cmpsl
inc
in
mov
jno
int
into
idivl
movsb
cltd
aas
xor
dec
psubsb
mov
xchg
jns
mov
xchg
jno
cli
and
inc
cmc
stos
and
jnp
jmp
lahf
and
lret
dec
pushf
jl
cmp
add
dec
jge
jnp
xor
and
push
mov
inc
in
arpl
xor
mov
popa
push
xchg
hlt
push
jne
sbb
aas
mov
mov
out
imul
sti
inc
les
iret
test
sbb
adc
out
out
adc
outsb
sub
insb
sahf
bnd
lods
mov
xchg
cmp
adc
pushf
cs
ss
fisubrl
icebp
xor
pop
sub
fidivrl
xchg
mov
cwtl
dec
ljmp
cmp
lret
jbe
xor
mov
shll
fnsave
sti
xor
mov
rol
aas
push
inc
push
jb
in
fstpl
cs
lahf
aaa
hlt
outsl
jae
ja
popa
leave
jns
sbbb
inc
xlat
cmp
cmp
int
jmp
pop
push
xchg
jmp
add
sbb
loop
xchg
mov
sbb
sbb
test
imul
add
rol
push
or
out
inc
adc
aad
xlat
mov
cli
sub
mov
add
cmp
jmp
popf
stos
and
lret
enter
sbb
sahf
xor
jne
and
out
xor
dec
movsl
jo
out
jo
jle
ret
xchg
cmp
mov
flds
xor
add
mov
popf
divl
xchg
mov
or
cltd
out
test
test
sbb
ljmp
mov
cld
or
xchg
sub
adc
mov
popa
push
arpl
ret
jns
std
nop
mov
lds
gs
cltd
icebp
je
adc
into
sbb
test
mov
sbb
mov
jns
push
add
lock
stos
pop
cmpsb
sub
adc
lcall
xor
or
push
inc
sub
jmp
cmp
fmuls
jmp
xor
xlat
sub
add
mov
mov
push
dec
shlb
insl
ds
aam
mov
sbb
stc
fwait
xchg
outsl
adc
mov
stos
push
lret
cmp
lods
mov
sub
psrlq
jo
xchg
fimuls
cmp
popf
adc
mov
js
in
imul
mov
push
lods
out
cmp
adcl
inc
in
xchg
je
mov
lds
jmp
jnp
outsl
call
mov
test
and
xlat
or
add
fisubs
lea
cli
stos
add
xchg
popf
mov
orl
pushw
inc
or
fisubrs
inc
lds
sub
sbb
rcll
das
push
push
or
je
jle
in
mov
sub
in
nop
mov
xor
pop
lret
aaa
sbb
cmp
out
sub
adc
jge
into
fnstenv
dec
popf
loop
lahf
scas
pop
mov
dec
adc
or
jl
push
mov
fisubl
inc
shrb
std
cmp
xchg
or
sbb
bound
ljmp
enter
adc
inc
xchg
or
out
jp
fbstp
and
cmp
ljmp
das
jp
repnz
add
pop
insl
fstpl
add
xchg
popf
cwtl
xor
mov
inc
lahf
or
in
xor
lea
xor
and
out
orl
sbb
push
push
add
cmp
ja
and
aaa
scas
clc
xchg
das
inc
xchg
fildl
outsb
and
mov
mov
cmp
jbe
push
sbb
in
sub
ljmp
push
int
daa
jnp
enter
adc
add
in
lret
inc
and
push
xchg
enter
mov
cmp
int3
add
stos
enter
adc
pop
addr16
mov
or
mov
and
adc
jae
jle
adc
les
jle
inc
xor
add
ja
sbb
jg
clc
xchg
insl
outsl
xchg
sti
xor
jo
or
push
dec
daa
cs
shrb
outsb
cmp
inc
pop
js
loopne
xor
aad
push
push
into
and
idivl
adc
xor
inc
cmc
int3
fldln2
je
mov
ds
inc
xchg
enter
mov
ja
dec
test
clc
xchg
lahf
add
jne
les
out
push
xchg
mov
and
or
add
ljmp
pop
daa
pop
in
scas
mov
pop
inc
jmp
sbb
jg
loopne
insl
pop
bound
inc
je
pop
fnsave
add
push
inc
jge
jne
mov
insl
jns
loopne
pop
jp
xchg
jg
aas
jge
ljmp
mov
fisttpl
sub
xor
adc
hlt
dec
pusha
in
adc
or
sbbb
addb
add
inc
aam
mov
mov
cltd
out
jo
push
inc
int
js
cmp
lods
inc
les
call
xor
cmp
sbbb
dec
inc
dec
or
pop
xor
leave
lock
or
jae
and
es
fidivs
jae
cmp
cmpsl
jo
inc
test
popf
std
add
mov
fdivl
imul
pop
jecxz
das
add
fiaddl
mov
movsb
fdivrs
push
cmp
inc
das
sub
testl
xor
mov
out
pop
xchg
jae
inc
je
pop
in
dec
lds
rcrl
out
jns
imul
inc
push
lea
into
shlb
int
fmul
scas
xor
adc
dec
in
push
mov
pop
arpl
cmpsl
das
orl
es
loope
pop
jge
aad
pop
inc
jge
mov
flds
push
adc
or
outsb
mov
lret
add
sub
sub
loop
ret
pop
fisubrl
xchg
and
xlat
popa
pop
insl
xchg
fisttps
xor
mov
and
jne
jo
insl
leave
cli
ss
pushf
std
mov
cmp
pop
cmp
testb
push
sub
loop
adc
rorl
lret
pop
mov
test
dec
pop
inc
cld
sub
mov
rcrl
test
or
das
mov
cmp
out
sbb
jge
or
mov
lret
cmp
sub
adc
mov
push
dec
jmp
sub
mov
ljmp
in
out
mov
sbb
pop
jecxz
test
loope
pop
mov
jp
aam
sbb
out
mov
add
rol
js
in
cltd
inc
imul
out
mov
mov
ret
jno
fs
leave
and
xchg
orb
fisubrl
xchg
lret
gs
mov
sub
in
aad
call
jb
mov
sub
push
inc
and
inc
in
cli
mov
cs
cmpsl
or
in
mov
add
mov
mov
add
mov
cmp
push
insl
adc
mov
iret
jbe
mov
cmp
sbb
push
int3
mov
jbe
dec
sub
pop
adc
jo
mov
mov
in
fs
xchg
jp
out
insb
sbb
push
adcl
lret
in
daa
sub
std
jge
xchg
pop
ret
add
ret
in
mov
cmp
mov
push
or
test
test
bswap
or
sahf
ret
sub
dec
repnz
xor
adc
adc
mov
xorl
popf
inc
rorl
fistpll
jae
adc
mov
icebp
jg
sbb
bt
xchg
imull
adc
cmp
outsb
cmp
stc
scas
xchg
scas
mov
aam
imul
pop
xchg
lret
xchg
ret
rcrl
out
fimull
movl
mov
sub
xchg
test
mov
or
fs
sub
push
daa
movsb
addr16
lods
hlt
or
cs
jle
sub
sub
lods
loopne
add
sbb
sub
dec
pop
or
xor
jae
out
jo
js
int
pop
and
pop
jnp
lods
and
xchg
dec
dec
scas
imul
mov
mov
xchg
scas
adc
and
push
int3
out
imul
push
scas
enter
add
mov
xlat
fwait
je
jp
sbb
pop
mov
push
push
inc
test
jbe
inc
jge,pt
fdivl
pop
pop
mov
mov
je
xor
jb
rcpps
lods
dec
insl
inc
cs
adc
inc
cmp
lods
jmp
shrb
fisttpl
aas
adc
and
jne
mov
popa
les
les
leave
icebp
flds
addr16
out
xorl
std
and
xor
movsb
cltd
mov
hlt
or
lea
cmpsb
sub
xlat
daa
adc
jp
add
in
inc
pop
add
push
add
fdivl
mov
pop
pop
fistpll
sbb
fdivs
scas
or
insl
xchg
dec
sub
add
jmp
mov
ret
mov
fistl
ljmp
subl
rorb
xchg
popa
dec
xchg
pop
push
mov
into
into
xor
mov
pushf
shl
push
loopne
ret
outsl
dec
push
pusha
repnz
jnp
pop
std
lcall
aaa
int3
mov
aaa
xchg
push
jns
enter
or
test
fdivl
inc
into
cmpsb
clc
fldt
pop
sub
adc
or
js
imul
rolb
repz
dec
push
pop
adc
into
jae
jnp
jno
adc
test
in
sub
fistps
outsb
mov
mov
cmp
add
gs
cmc
jae
enter
sbb
add
ret
jmp
int
jmp
xchg
sbb
js
pop
xor
movb
enter
mov
imul
dec
testb
mov
addr16
dec
jecxz
test
in
lcall
jl
push
dec
sub
adc
pop
inc
pop
jno
push
mov
icebp
cli
mov
pop
adc
mov
fs
bound
rcl
push
ret
push
pop
cmp
or
cmp
sub
addr16
sbb
lret
cltd
out
mov
mov
rclb
sbb
popf
mov
loope
test
push
repz
mov
mov
sbb
mov
pop
dec
inc
fldt
adc
fcompl
mov
cmp
xchg
loop
imul
cmp
jg
mov
add
mov
or
push
pop
lret
ret
in
mov
aas
mov
arpl
jge
fs
fldl
push
fwait
xor
arpl
xchg
pop
mov
push
fmuls
xchg
idivl
in
xor
pop
sbb
push
bound
add
xchg
ljmp
mov
inc
push
roll
cmp
call
mov
scas
andb
pop
mov
adc
mov
arpl
loop
cli
mov
dec
cmp
pop
sbb
andl
mov
repnz
arpl
and
cli
or
pop
or
stos
cwtl
lahf
mov
cwtl
enter
add
in
fwait
or
and
arpl
insb
out
out
cli
mov
cmp
pop
mov
popa
mov
mov
cmpb
dec
mov
dec
outsb
arpl
fdivr
mov
push
test
and
imul
or
or
hlt
pop
es
mov
repz
arpl
lahf
out
mov
jnp
test
inc
or
lea
ss
pop
sub
int
and
mov
push
cmpsb
push
je
js
call
add
mov
mov
arpl
mov
xor
pop
movsl
push
lea
pop
push
mov
rcrb
jmp
xor
mov
arpl
jb
mov
clc
addb
inc
fisubrl
bound
add
mov
xchg
pop
jmp
fistpll
xor
mov
lea
shlb
stos
sbb
into
push
dec
add
aad
pop
dec
jmp
add
mov
mov
or
pop
xor
lods
cld
dec
add
sub
dec
dec
jge
icebp
xor
mov
pop
xor
cld
or
test
arpl
lds
sub
pop
mov
add
call
sbb
mov
jnp
sub
adc
lds
out
stos
push
xchg
frstor
inc
mov
mov
rcrl
adc
fidivs
adc
mov
int3
inc
xor
pushf
push
pop
cmp
or
stos
movntps
ret
sbb
jmp
push
ljmp
addr16
lret
repnz
aam
out
push
jbe
arpl
xor
scas
pusha
dec
inc
mov
rol
mov
popa
inc
ficomps
cmc
aaa
cmp
sti
lahf
imull
dec
addr16
stc
mov
cmp
adc
push
aad
mov
or
fists
pop
into
xor
add
imul
lahf
mov
imul
icebp
xchg
pop
lea
inc
ds
data16
aaa
sub
out
aaa
std
add
jns
test
mov
and
push
push
pop
adc
aam
mov
jmp
popf
mov
lret
or
inc
sbb
adc
sub
out
test
xor
fistps
dec
inc
xchg
jo
fnsave
shll
push
dec
add
xchg
aad
jns
sbbb
push
mov
inc
ljmp
fprem
fistl
cmp
cmpl
push
sbb
pusha
push
push
repz
sti
pop
int
scas
mov
jp
adc
call
push
cmp
add
jp
mov
mov
jmp
and
shll
inc
in
out
fsubs
mov
and
inc
add
stos
arpl
xchg
pop
arpl
push
sbbl
lea
loope
xlat
lret
push
push
add
pop
adc
jns
jbe
or
stc
xor
ljmp
rcrl
adc
in
out
imul
xlat
flds
leave
mov
adc
push
movsl
sarb
shrb
pop
test
pop
cmp
xchg
or
mov
push
and
mov
in
leave
movnti
hlt
xchg
lcall
arpl
iret
xchg
fistpll
sub
cmp
sbb
mov
sti
bound
repz
pop
int
cld
push
frstor
push
cmp
lock
sbb
mov
sbb
jmp
jge
and
loop
movsl
test
sti
js
cltd
lahf
or
pop
add
fwait
adc
and
mov
out
add
inc
gs
adc
xor
sbb
or
cmpsl
nop
add
push
push
dec
push
mov
xchg
jle
and
cmp
sub
or
sbb
imul
jmp
out
sbb
mov
jo
cli
inc
enter
jge
xchg
xor
jns
loop
adc
push
mov
scas
in
pusha
xorl
jnp
adc
mov
push
lret
inc
cwtl
bound
cld
std
fidivrl
xor
daa
sbb
lea
jmp
xchg
mov
movsb
in
mov
rcl
and
faddl
imul
ljmp
clc
sbb
sbbl
cmp
xor
outsl
pop
cmp
in
cmc
addl
lahf
and
cmp
jecxz
xchg
decl
lcall
imulb
xchg
sub
fmull
lahf
out
and
pop
movsb
push
outsl
hlt
dec
cmp
jmp
fs
xor
sub
testb
dec
test
dec
mov
cmpl
jno
das
sti
int
rorb
aas
xor
lods
inc
push
aad
inc
js
mov
inc
and
push
cmp
inc
jae
mov
adc
add
or
out
mov
lahf
mov
jmp
pop
int3
xchg
dec
lea
es
jp
scas
lock
add
sar
add
push
xor
xchg
adc
divb
or
incb
push
arpl
and
pop
stc
insb
out
aas
cmp
sbb
daa
rorl
lahf
lods
pop
push
xor
sub
xor
inc
aad
les
jl
dec
inc
pop
lcall
cmp
xchg
and
adc
xor
mov
mov
pop
scas
dec
push
dec
adc
not
xchg
pop
out
test
jp
mov
add
ret
mov
loop
cmpsl
mov
jle
ficompl
add
flds
stos
adc
xchg
iret
pop
outsb
cli
inc
or
sbb
and
fs
sub
insb
ret
mov
inc
xor
dec
rcl
popa
pushf
xchg
fistps
mov
sbbl
shll
stos
sar
ds
push
pop
shlb
sahf
dec
dec
fildll
cmp
adc
sbb
clc
mov
and
and
rep
out
pop
insl
test
fwait
das
jl
lods
dec
sbb
add
push
pop
and
cmpb
das
mov
mov
jne
aaa
fsubrs
js
jmp
xchg
ja
cmp
jno
push
sub
sbb
cld
and
push
jmp
idivb
pop
std
inc
xlat
mov
decl
push
shlb
mov
fcmove
cmpsb
add
xchg
iret
rorl
inc
push
or
insb
movsb
repnz
xchg
push
notl
nop
daa
mov
inc
andb
stos
in
dec
sbb
lods
ds
xchg
push
adc
push
rcrb
or
popf
ds
stos
cmp
test
adc
insb
dec
xor
les
pop
xchg
mov
adc
mov
or
xor
into
hlt
mov
xor
adc
popf
gs
insl
xor
jp
jg
test
cmovbe
mov
sub
jns
sub
cltd
xlat
and
adc
stos
pop
es
outsb
cld
js
mov
test
ret
mov
insb
add
xchg
aad
in
jl
push
and
ret
imul
loop
push
in
lret
jo
cli
and
mov
jl
pop
sub
and
shlb
in
or
mov
sub
cmovae
or
fwait
cmp
dec
popf
sbb
inc
mov
lret
sub
cmp
fxch
mov
mov
xchg
push
add
and
or
or
fistl
sbb
cld
sbb
test
scas
jle
sub
enter
mov
in
cmp
dec
sbb
sub
ret
das
mov
mov
adc
mov
scas
ja
imul
and
test
mov
icebp
cmpsb
mov
lret
jg
bound
pop
mov
sbb
xor
xchg
outsl
int3
jg
cmp
pop
inc
in
jb
fidivs
rorl
push
ffreep
xchg
ja
jp
pop
jb
pop
mov
icebp
andb
push
ljmp
aas
std
fwait
das
inc
pop
mov
gs
mov
orb
xlat
shrl
das
loop
test
push
outsb
js
jg
mov
xchg
or
inc
je
adc
jb
push
push
ror
pop
inc
sbb
mov
add
ret
pop
jecxz
call
shlb
pop
imul
jl
fsubr
lods
sub
movsb
dec
gs
xchg
cmp
cmpsb
orb
jge
daa
sub
xchg
andl
mov
inc
aad
or
jnp
adc
les
mov
inc
cwtl
sub
iret
jp
insb
ds
xor
sbb
lods
sti
fcmovnu
das
and
and
adc
ds
xchg
xor
insb
call
lea
cmc
xor
mov
xor
jne
pop
jg
outsl
scas
ss
xor
test
push
adc
and
dec
mov
loop
stc
sti
xlat
pushf
and
addr16
or
inc
mov
nop
jne
mov
repnz
arpl
int
arpl
mov
mov
inc
push
push
dec
pusha
cwtl
ja
jbe
jg
stc
cmp
lahf
mov
mov
shl
sarl
dec
aad
out
sbb
pop
rclb
mov
cwtl
and
or
ss
and
icebp
xchg
aad
cmpsl
clc
in
addl
mov
test
push
mov
pop
and
add
mov
mov
test
xchg
cs
push
mov
rorb
push
imul
jmp
and
mov
arpl
adc
aas
cmp
push
xor
pop
add
ss
sub
jne
mov
insl
mov
jecxz
mov
mov
cmp
lcall
imulb
push
sub
mov
cmp
sbb
cmpsl
mov
inc
pop
lea
cwtl
mov
test
lret
test
fsub
inc
dec
mov
mov
cmp
lret
mull
or
add
xchg
sub
mov
fcmove
dec
and
pushf
xor
rep
ljmp
movsl
mov
mov
mov
sub
sub
std
inc
or
out
adc
inc
lods
push
dec
int
and
mov
adc
decl
sub
iret
mov
stos
mov
pop
pop
stos
clc
xor
sub
fstpt
cmpsl
pusha
and
rorl
mov
mov
cmp
je
push
popf
jo
jo
inc
shl
cmc
inc
insb
std
push
mov
int3
jle
mov
xor
incl
test
loope
hlt
fxch
hlt
sbb
test
enter
mov
push
xchg
mov
add
stos
pop
andb
push
arpl
lea
out
jp
inc
mov
cltd
mov
jle
or
jg
data16
sbbl
fisubs
mov
les
jecxz
fwait
outsb
out
ficompl
cmp
nop
sbb
fstl
das
xor
push
jne
xor
push
clc
cmp
pop
mov
xor
ffreep
out
xor
cmc
mov
push
ss
inc
clc
and
mov
loopne
sahf
das
dec
mov
dec
jge
fwait
wrmsr
js
dec
mov
mov
sarb
inc
inc
and
out
repnz
inc
mov
xor
aas
mov
js
insl
xchg
jmp
jo
test
dec
call
mov
inc
inc
push
scas
clc
inc
js
xorb
shl
jns
dec
test
and
mov
adc
jae
sbb
fs
test
mov
test
push
xchg
es
cmpb
mov
lods
ret
jecxz
stos
jecxz
aad
xchg
bnd
push
ficoml
or
jbe
mov
incb
and
imul
out
mov
add
and
sbb
aas
ret
insl
in
and
jno
dec
or
cs
cmp
inc
jne
mov
mov
imul
into
out
xor
cmp
ss
inc
clc
sub
fucomip
xor
int
jecxz
scas
mov
dec
adc
jge
dec
outsl
mov
add
pop
mov
inc
and
inc
std
pop
ja
scas
xor
aas
jg
jae
cmpl
pop
cmp
movsb
jo
sub
ror
add
lods
fdivs
xor
ljmp
in
jecxz
out
mov
add
sub
leave
pop
aad
sbb
jno
xchg
mov
loop
or
loope
and
int
xchg
inc
cmp
push
lea
inc
stc
xor
add
stos
inc
test
pop
dec
in
cltd
sub
cmpsl
mov
cmp
scas
pop
or
inc
xchg
sahf
ss
outsb
cmp
xor
loop
hlt
dec
in
insb
movsl
out
sbb
decb
ja
sbb
sub
incl
dec
loope
mov
enter
adc
push
jecxz
cmp
mov
movsb
sbb
xchg
mov
add
push
adc
cmpsb
in
int3
add
cmpsb
enter
adc
mov
ret
adc
mov
and
sbb
push
jno
es
lret
out
ret
sbb
sub
sbb
das
fsubs
in
xchg
fcomip
xor
mov
and
cs
push
movsl
inc
xor
sub
popf
out
pop
rorb
mov
or
sub
push
mov
js
lahf
das
or
inc
scas
or
inc
adc
add
xlat
movsl
lock
inc
push
pop
and
mov
cmp
addr16
sbb
jg
adc
scas
enter
adc
xchg
push
mov
dec
mov
and
bound
jae
lret
daa
and
data16
push
movsl
movb
lock
stos
inc
sub
rorb
mov
or
in
mov
jns
imul
nop
sub
lods
inc
stos
loopne
test
jae
sbb
insb
push
pop
push
cmpsb
lock
xor
mov
jae
clc
cmp
aas
xchg
sbb
ds
and
outsl
dec
mov
cmp
call
sti
jne
dec
push
and
xor
mov
lret
xor
dec
xor
add
movsl
inc
aad
hlt
jp
and
stos
inc
pop
cmpsl
sahf
aas
scas
enter
mov
push
jbe
dec
in
jbe
and
and
je
nop
int3
jno
inc
stos
dec
inc
mov
adc
push
jae
jbe
insl
push
out
jns
lock
in
jl
xchg
shlb
inc
push
cmpsl
sbb
jle
divb
lds
lock
into
lds
inc
push
shr
xchg
ficoml
sti
sbbb
push
mov
push
mov
xor
gs
test
scas
loopne
mov
jnp
pushf
mov
sarl
fidivrs
xor
divb
loope
in
loop
sub
in
and
in
pushf
jp
xor
fwait
test
adc
xor
idiv
adc
out
mov
lcall
dec
in
mov
lcall
or
ret
add
stc
cmp
setnp
inc
cmpsl
sub
mov
pop
out
test
xchg
scas
or
sub
adc
or
push
sbb
jnp
ds
dec
mov
xchg
xor
lret
aad
fimull
lret
inc
and
imul
and
sti
fistps
sub
sahf
sub
push
mov
addr16
sub
cmp
dec
or
scas
test
lods
repz
adc
scas
push
pop
xor
inc
push
jbe
jno
xchg
jns
incb
fidivrl
and
rcrl
leave
and
jecxz
push
outsl
in
lcall
pop
push
shlb
je
lcall
inc
pop
sub
mov
mov
or
jp
and
out
loop
cli
mov
push
mov
adc
sbb
push
fimuls
lock
jne
mov
inc
jo
dec
std
xchg
cs
and
addb
out
sahf
ds
imul
rcrb
arpl
imul
cmp
int3
movsb
mov
sub
mov
add
jns
loop
inc
das
in
int
loopne
jecxz
shll
jecxz
dec
pop
lea
push
xor
mov
icebp
scas
insl
push
shl
inc
add
in
ds
lahf
pop
test
cmp
mov
mov
or
adc
imulb
gs
in
adc
dec
test
xchg
or
lret
push
lcall
mov
xor
std
and
outsl
out
mov
pop
inc
jge
adc
xor
fildll
cmp
pop
xchg
mov
hlt
add
je
packsswb
sti
stos
sub
sub
inc
aad
scas
icebp
out
or
test
push
stos
add
xor
flds
push
into
pop
lret
inc
fcompl
xor
and
and
mov
jmp
shr
ja
jg
ja
dec
popf
add
jge
rorb
jmp
fucomip
jb
sbb
cmp
adc
fstl
sarl
sbb
pop
cmpsl
mov
inc
rcr
xchg
and
xchg
stos
add
sarb
adc
push
adc
stos
inc
shrb
shll
cmp
sbb
inc
mov
sbb
int3
add
sbb
flds
aas
sub
jmp
imul
aad
addb
mov
in
sub
or
lcall
adcb
out
and
fwait
push
sub
out
dec
adc
mov
jnp
stc
lcall
outsb
loopne
sub
mov
and
lds
aad
pop
mov
dec
xchg
sub
cmp
fisttpl
push
roll
cld
ds
icebp
ljmp
dec
int3
lahf
pusha
lret
daa
jp
addb
ret
movsl
sbb
cmpsb
dec
pop
lods
sbb
jo
push
lea
dec
jge
out
cwtl
mov
or
loop
aaa
cld
mov
inc
add
fstpt
cltd
imul
gs
jne
xor
or
or
inc
sub
sub
enter
push
lcall
inc
enter
mov
or
mov
or
mov
or
jecxz
testb
les
out
stos
insb
call
test
imul
aaa
call
lods
mov
mov
incb
jae
cmc
mov
test
inc
nop
cltd
cltd
mov
and
in
inc
loop
dec
inc
int3
movsl
xchg
sub
fcoms
xchg
and
std
ljmp
add
in
fcoms
mov
push
daa
leave
xchg
cwtl
pop
cltd
mov
subl
ret
dec
pop
pop
xchg
xor
addr16
neg
jno
rolb
pop
lock
adc
mov
into
ret
xor
daa
add
xor
pop
mov
mov
mov
xor
in
ffreep
mov
cmpsb
nop
ror
fdivrp
out
jns
lret
dec
sbb
loopne
pop
pop
pop
sahf
mov
jp,pt
lret
sub
insb
outsb
insb
dec
lock
outsl
mov
pop
add
test
sbb
cwtl
outsb
fsubp
inc
sub
rcrl
mov
pop
and
jg
fs
dec
rcll
popa
inc
outsl
lret
pop
add
inc
lahf
adc
mov
xchg
jg
inc
mov
jnp
xor
and
adc
mov
test
aad
sub
add
xor
dec
xchg
mov
add
scas
dec
mov
out
or
add
mov
mov
movsb
pusha
aad
cmp
iret
push
adc
bound
pop
mov
dec
mov
jno
inc
stos
push
mov
pop
mov
int
xor
jp
xchg
mov
cltd
adc
inc
outsb
lret
cld
push
xor
mov
sbb
xchg
loope
stos
sub
shlb
push
mov
iret
fisttps
popa
mov
jle
ficoms
add
cwtl
dec
sub
inc
fwait
jae
movsl
xchg
sbb
dec
xor
add
sub
imul
rorl
loopne
int3
ss
ror
or
sahf
pop
mov
inc
sbb
adc
pop
mov
push
lahf
ret
mov
insb
mov
xchg
mov
mov
mov
xorb
add
dec
in
mov
pop
jecxz
adc
stos
sbb
in
mov
jle
push
or
push
inc
and
mov
js
push
and
cmp
jmp
mov
andb
cmp
out
mov
xor
out
pop
push
sbb
sahf
add
mov
mov
sub
pusha
lea
ja
movsl
sub
lods
orb
mov
shl
enter
repz
push
sub
mov
out
test
mov
lahf
fimuls
pop
mov
fiaddl
jns
aaa
sub
into
out
lds
mov
int3
inc
and
arpl
aaa
inc
pop
mov
mov
adc
sbb
pop
and
or
jle
and
movsb
or
enter
inc
fs
xchg
mov
arpl
ljmp
test
sbb
ds
adc
sub
adc
push
xchg
orl
mov
pop
push
adc
ljmp
cli
jecxz
in
in
mov
jbe
xor
out
les
nop
and
jmp
mov
shrb
inc
popa
and
mov
xchg
xchg
insb
jle
cmp
cltd
sahf
pop
pop
jl
lret
rcl
shlb
add
xchg
std
ret
jnp
lds
loope
cmpb
loop
cltd
into
pop
dec
fcomip
inc
jno
or
pushf
mov
fsub
push
sub
lret
jp
xchg
xchg
das
daa
shrl
mov
inc
dec
jg
jae
dec
pop
or
sbb
fwait
test
mov
loop
mov
in
out
in
cmp
repz
test
mov
inc
andb
mov
outsl
inc
rcl
loop
mov
iret
or
xchg
fs
cs
clc
or
mov
aam
inc
in
xor
and
mov
push
loop
jl
push
xor
and
enter
or
pop
mov
test
and
clc
add
pop
pop
mov
adc
cmc
or
cmpsb
dec
mov
push
sbb
mov
jl
leave
cmc
sbb
fisubrl
insb
dec
imul
jns
subb
aam
gs
sub
mov
fdivrp
js
add
inc
or
mov
push
shrb
dec
arpl
cltd
push
ds
dec
pop
and
adc
lods
insb
and
sub
aam
hlt
imul
out
fisubl
xor
lds
in
and
mov
inc
loope
int3
inc
imulb
scas
ja
in
popf
jno
lock
xchg
push
pop
fnstsw
jp
push
rorl
sbb
lret
fmulp
pop
in
ret
sub
inc
inc
sub
pop
rcrb
lock
in
add
push
jmp
fwait
hlt
jbe
shrb
es
lcall
hlt
je
pop
icebp
inc
cli
sub
fsubr
jle
insb
xacquire
xorb
mov
fsqrt
aaa
out
mov
test
cmpsb
sbb
mov
test
sub
cmp
cld
fldl
leave
xor
gs
or
cs
nop/reserved
jae
dec
out
lods
mov
sti
sub
jg
adc
sti
sub
in
cmp
sub
push
cmp
or
cmp
push
aad
mov
push
or
lahf
adc
repz
push
data16
add
fisubrs
jg
mov
inc
leave
mov
xlat
dec
and
xlat
sub
out
mov
std
cmp
cmp
insb
shlb
sbb
sbb
add
push
mov
inc
jbe
jg
es
lret
pop
stc
sbb
mov
sub
dec
xchg
jg
or
jo
push
cld
dec
inc
mov
jb
cmpsl
xor
shrl
or
lcall
addl
ljmp
lahf
std
fistpl
inc
popa
mov
dec
shl
subl
push
jg
pusha
dec
inc
cmp
xlat
aad
test
ja
mov
cli
test
mov
loop
bnd
in
push
fstps
sbb
ljmp
pop
push
fs
xor
mov
scas
fadd
ret
roll
pop
push
push
inc
inc
data16
shlb
cmp
xchg
xchg
adc
xchg
je
lahf
lret
push
mov
push
sbb
rorl
jo
cmp
inc
stc
pop
adc
fidivl
cmpsb
loop
or
pop
ret
sbb
sbb
loope
mov
inc
lods
flds
insl
fisubs
test
std
pop
rorl
stos
inc
call
imul
sbbl
out
mov
mov
inc
mov
and
jb
aam
push
adc
or
jns
mov
or
mov
pushf
inc
sbb
sbb
int
repz
fcompl
repz
cmpsb
pop
in
cmpb
in
push
cmp
les
xor
xor
divl
jge
mov
andl
and
dec
aad
xchg
jb
cltd
scas
fldenv
dec
or
mov
lret
push
das
xor
test
and
or
fsubrs
arpl
shl
jp
push
aam
sar
pop
dec
lods
cmc
mov
andb
dec
std
push
dec
aaa
mov
arpl
jecxz
push
aas
lock
imul
cltd
enter
andb
xchg
mov
int3
mov
add
inc
clc
push
stos
out
pop
pop
cwtl
icebp
adc
cmp
cltd
adc
ss
mov
aaa
nop
insl
imul
les
mov
rcrl
adc
sbb
ja
push
incl
cmp
insl
jmp
cmc
das
mov
mov
gs
jne
fnstsw
insb
test
stos
cwtl
inc
jg
cwtl
or
dec
or
test
in
jmp
repz
jecxz
icebp
insb
inc
lcall
shll
dec
popa
push
jl
push
cmc
and
xchg
mov
inc
ret
test
mov
adc
cmp
push
scas
push
jo
mov
adc
ljmp
es
mov
repz
pop
fisttpll
shlb
rol
sbb
out
dec
adc
dec
and
ss
dec
repz
pop
sub
cmp
sahf
push
xor
mov
fs
xor
inc
std
daa
dec
or
jbe
mov
in
icebp
mov
lret
popf
pop
les
pop
or
mov
xchg
dec
cmp
imul
mov
add
jb
imul
mov
mov
jno
pop
xchg
hlt
test
mov
rcr
inc
dec
rorb
and
hlt
stos
inc
inc
jne
jno
out
repnz
notl
mov
fucomp
loopne
mov
mov
call
push
cmp
pop
cli
pop
push
int
xchg
sub
subb
dec
pushf
xlat
iret
icebp
mov
mov
sbb
or
mov
arpl
or
push
inc
lods
sbb
xor
bound
addr16
out
call
mov
dec
and
dec
jno
adc
jbe
les
shll
push
int
inc
push
cmp
push
adc
stc
clc
rcr
push
cmp
sahf
mov
fbstp
adc
sub
shrb
jo
mov
aaa
cmp
sahf
test
sub
movntps
cmc
out
mov
test
icebp
incb
mov
int3
ss
fwait
aam
aaa
push
imul
sub
mov
pop
out
ret
cmp
sar
jmp
jb
sub
pop
mov
or
aaa
adc
jge
ja
mov
jns
pop
and
nop
dec
std
push
dec
xchg
scas
int
gs
test
pop
jae
mov
or
pop
lret
pop
push
xchg
mov
pop
addr16
dec
dec
push
ret
test
mov
xchg
lcall
movsl
bswap
ret
call
push
sub
push
jl
jge,pn
mov
add
and
push
inc
insl
xor
mov
add
sbb
fdivrl
ret
loopne
mov
dec
sub
dec
movsb
and
and
mov
jl
test
xchg
mov
mov
sti
into
push
push
popf
mov
pushf
mov
mov
push
cltd
jb
jge
or
mov
inc
ljmp
or
cld
cmp
push
rcrl
fistl
cli
test
imul
or
mov
in
movsb
daa
imul
or
shlb
stos
loope
loopne
rcl
shl
jp
popa
dec
push
mov
loope
je
push
jnp
aad
adc
repz
scas
fistpl
and
dec
movsl
icebp
outsb
sbb
enter
lea
call
lea
mulb
or
cmp
fidivs
add
sar
push
fstp
inc
arpl
sbb
jns
scas
fmuls
enter
xchg
cmp
outsl
sbb
xor
outsl
xchg
adc
mov
loop
incl
adcl
leave
and
jg
in
sahf
mov
or
mov
fsubrl
add
sub
hlt
and
shlb
jo
fs
jmp
in
inc
xor
pop
pushf
insl
mulb
test
push
ja
std
xor
push
inc
fisttpll
lods
lods
ss
cmp
dec
push
iret
cmp
cli
aad
mov
sub
std
mov
or
repz
xchg
pop
mov
lret
jp
mov
or
sub
pop
push
mov
xor
dec
std
adc
and
push
pop
ljmp
enter
mov
sar
pop
cmpsb
jo
sub
lret
cmp
lahf
cmpsl
rorb
rorl
sarl
dec
pop
inc
sbb
cmpsb
cmp
jno
pop
repz
movups
inc
sbb
lcall
push
push
test
int3
scas
sbb
fsts
dec
aam
stos
out
ja
cmp
mov
rcl
push
mov
je
push
sbb
pop
popf
repnz
pop
enter
mov
loopne
sbb
or
pop
push
cmp
cld
mov
leave
sub
mov
dec
mov
lret
sub
add
sbb
aad
mov
mov
push
jge
mov
mov
inc
sbb
pop
nop
mov
adc
xchg
jle
jle
imul
mov
jb
mov
pop
sub
push
je
jg
fs
insb
testl
in
xchg
daa
ljmp
dec
repnz
push
mov
pop
cld
fldl
jg
ret
fnstenv
push
in
cmp
sti
mov
mov
js
faddp
push
js
fnstenv
xchg
aam
pop
dec
loopne
inc
xor
fwait
jmp
jge
mov
mov
xchg
mov
inc
and
inc
out
repnz
mov
lods
rclb
jns
shll
addb
out
call
andb
pop
std
pusha
push
scas
mov
arpl
rclb
add
aas
loope
pop
mov
push
jge
add
test
or
mov
mov
cmp
leave
mov
les
inc
imul
out
je
or
loopne
xchg
dec
ret
adc
mov
jns
sahf
sbb
fnstenv
xchg
scas
inc
test
lock
mov
fidivrl
lods
mov
js
cltd
addb
jns
ret
ljmp
ljmp
pushf
mov
int3
mov
lret
adc
cld
enter
push
cld
xor
in
pusha
test
in
jo
cli
fcmovnb
dec
sbb
test
dec
cmp
xchg
mov
nop
pop
ja
leave
mov
inc
movb
stc
repz
adc
cmp
cmpsb
pushf
lahf
aaa
jnp
rorb
repnz
sbb
in
add
jmp
fistpl
dec
mov
mov
xchg
das
cwtl
xchg
repnz
add
jne
test
repnz
mov
add
jnp
dec
frstor
mov
cltd
mov
cltd
mov
dec
adc
ljmp
sub
lret
sub
outsb
iret
sbb
xorl
std
push
bound
mov
mov
icebp
nop
mov
dec
fstps
imul
dec
xchg
aas
les
sarb
jns
jmp
and
aaa
in
stos
xchg
divl
pop
insb
sahf
daa
xchg
test
sbbb
arpl
push
or
mov
pop
inc
int
cwtl
pusha
sub
popf
jno
xchg
das
add
imul
rcll
sub
mov
aaa
mov
stc
lret
mov
lret
aam
add
jbe
pop
push
sti
mov
lods
pusha
cmp
sbb
rorl
push
mov
xor
mov
adc
jno
cltd
addb
pushf
inc
lret
dec
mov
nop
clc
push
dec
int
jae
cmpsb
mov
mov
fxch
pop
stc
xchg
les
shl
pop
inc
stos
add
mov
test
rcll
loope
xchg
pop
into
jl
cmp
mov
lret
mov
insb
and
xchg
aam
stos
cmc
push
adc
lret
mov
aam
cld
inc
jmp
fucomp
ret
sub
loope
cwtl
out
ret
cltd
or
loopne
add
jb
sub
mov
test
and
mov
addb
fdivs
lea
bound
adcb
mov
mov
dec
pop
push
xchg
cs
into
cmp
mov
sbb
fcomps
imul
sbb
push
and
das
cld
fidivrl
sub
ret
cmp
adc
in
aam
aaa
xor
lods
bound
enter
mov
cld
jge
dec
and
and
cld
dec
std
mov
popf
scas
in
mov
dec
test
and
cmp
shlb
xlat
js
xchg
jg
xor
inc
test
mov
xor
imul
jae
mov
pop
inc
sbb
insb
fidivs
stos
pushf
jo
jnp
inc
stc
push
aaa
cmc
add
in
and
jmp
jp
xor
sbb
test
add
sbb
test
sahf
enter
mov
push
ja
push
jge
adc
mov
lods
pop
inc
xor
mov
jb
push
arpl
adc
jp
pop
mov
jns
xchg
fidivl
mov
jg
xlat
stc
inc
enter
or
mov
push
jg
adc
cmp
nop
les
push
pusha
pushf
xor
pop
jbe
orb
cmp
insb
pop
mov
and
push
aam
out
jb
stc
mov
push
push
rcr
inc
js
rcr
std
test
sbbb
out
mov
jno
fadds
rcrb
imul
push
xor
jg
and
jmp
bound
lods
test
mov
jmp
push
imul
jo
push
pop
inc
stc
add
xorb
out
jmp
jp
arpl
sbb
pop
add
add
jg
fcom
mov
loope
pop
sbb
pop
jle
shrb
mov
je
adcb
xchg
mov
or
jge
jecxz
and
inc
hlt
jp
icebp
out
jns
adc
fcmovu
ljmp
adc
fdivrl
jns
jecxz
adc
lock
xchg
xchg
les
add
addl
add
mov
inc
aam
sbb
jb
test
push
pop
mov
pop
push
jno
lahf
js
cs
add
rcl
call
xor
clc
dec
lds
lahf
xor
test
cmp
stos
mov
andb
push
outsb
inc
sbb
out
mov
std
cmp
stos
arpl
dec
stc
nop
fisubrl
push
dec
sbb
ja
movsl
push
jmp
in
sti
mov
fiaddl
mov
ret
xchg
xchg
mov
pusha
cmp
gs
insl
shlb
ja
xchg
adcl
push
xchg
pop
outsb
lret
pop
inc
xor
cmp
jb
fwait
ja
jno
nop
xchg
cmp
stc
jns
adc
lcall
xlat
jmp
xchg
cmp
mov
xor
push
out
mov
repnz
stc
arpl
push
dec
lods
inc
orl
and
cmp
loop
lods
dec
aad
loop
jge
xlat
int3
test
or
stos
mov
lea
mov
mov
iret
leave
adcb
sbb
iret
xchg
out
ret
and
jecxz
faddl
lret
mov
imul
loop
scas
and
jae
dec
dec
pop
pop
out
cmp
lods
jnp
jge
sbb
pusha
mov
out
dec
jne
ljmp
add
mov
mov
mov
lret
and
cld
not
imul
lcall
test
inc
pushf
lock
push
lret
mov
xor
cwtl
jno
or
shlb
in
pop
ja
test
inc
inc
sbb
push
cmpsb
mov
lret
add
fwait
lahf
mul
dec
rorb
fists
dec
shr
cmpsb
jle
movsl
jo
adc
lret
cs
inc
push
xor
xor
frstor
leave
mov
testb
push
fndisi(8087
dec
dec
lods
dec
adc
xchg
dec
adc
dec
or
xor
push
int
xlat
in
sub
xor
and
cs
mov
mov
mov
nop
xor
sbb
ss
and
jg
push
dec
int
popa
cwtl
das
add
xchg
dec
pop
stc
cmp
daa
mov
lds
jb
call
push
mov
lret
aaa
adc
pop
mov
mov
cwtl
nop
xchg
or
jo
in
dec
dec
imul
in
xor
insl
push
jae
stos
popa
loopne
popf
adc
mov
xor
inc
push
test
jno
insl
mov
jmp
fwait
iret
cmp
mov
call
push
push
outsb
and
outsb
imul
or
xchg
dec
cmc
stos
imul
daa
push
jl
orb
ret
test
mov
insl
xchg
xor
jecxz
pop
in
arpl
int
pop
and
cmp
and
push
in
daa
pop
incb
das
mov
xchg
dec
jne
jns
outsl
xchg
cmp
jg
orb
cmpl
inc
sbb
xchg
xor
inc
icebp
dec
iret
lret
int
mov
lcall
sub
outsl
sub
out
xlat
or
inc
test
sub
add
cmp
jg
mov
dec
into
leave
inc
sbb
xchg
sbb
inc
icebp
stos
repnz
lret
enter
mov
and
ljmp
cmp
or
mov
xchg
sub
lret
imul
adc
jge
aad
mov
inc
sbb
pop
nop
popa
mov
push
inc
inc
pop
inc
fcoml
fdivl
sbb
pop
stc
lods
push
xchg
push
cs
imul
lods
mov
xor
sbb
aad
sub
sbb
and
loope
jne
into
inc
pop
incl
sarb
push
ja
mov
adcb
push
cmpsl
inc
xor
lods
loopne
std
sub
sub
out
mov
or
imul
add
leave
xchg
xlat
xor
fdivrl
cmc
mov
pop
jne
addl
ds
les
mov
jl
dec
dec
push
pop
dec
xchg
addb
js
jb
lea
push
xor
fbld
out
aam
mov
jae
pop
sbb
inc
scas
test
jmp
xchg
xlat
adc
mov
pop
in
lret
addl
fsubl
pusha
jl
mov
mov
jns
jb
nop
add
neg
movb
jae
fiaddl
pop
inc
ljmp
mov
fstpt
cli
les
xorl
sarb
mov
sub
jns
loopne
nop
add
in
popa
test
push
lahf
pushl
rolb
jnp
mov
mov
pusha
mov
stos
dec
xor
or
in
cld
enter
sarb
mov
clc
add
xchg
out
adc
cli
in
add
bound
inc
pushf
fstpt
mov
mov
popa
mov
call
or
insl
leave
jmp
sub
pop
sbb
outsl
dec
mov
mov
clc
add
inc
xchg
out
aad
cli
in
adc
fisttps
mov
adc
popa
scas
jle
lahf
or
icebp
jb
insl
leave
pop
or
xchg
bound
sub
fidivrl
and
dec
lcall
inc
xchg
out
movsl
aad
cmp
adc
jb
mov
fiaddl
pop
cmp
clc
xlat
lahf
or
add
pop
or
test
sub
add
and
xchg
inc
in
and
adc
in
push
xchg
imul
xchg
mov
mov
pop
cmp
fisttpll
push
test
lret
jae
xlat
pop
in
add
pop
jmp
rolb
in
mov
inc
pop
cmp
ljmp
jae
imul
int
lcall
lods
mov
sub
test
je
mov
in
mov
mov
sti
loop
daa
mov
ret
rcrl
and
mov
lret
addr16
dec
sti
adc
sub
popf
mov
pop
cmp
dec
inc
movsb
iret
int3
std
repz
fidivl
xchg
in
jb
sub
gs
adc
jmp
add
movsl
sbb
add
ljmp
mov
int3
into
or
aad
sbb
out
jbe
jno
std
xor
lahf
mov
lret
xor
xchg
pop
push
xor
hlt
pop
xchg
ljmp
sbb
lret
lret
shrb
pushf
pop
xchg
cmpsl
ret
push
push
dec
clc
xor
xchg
lods
jl
cli
mov
ja
ret
xchg
add
bound
fsubs
loop
push
imul
push
fstps
movl
adc
push
iret
or
shr
xor
aad
jno
jge
les
pop
mov
flds
jae
inc
adc
rcl
sbb
sti
xchg
lahf
inc
sahf
aad
push
sbbb
inc
sbb
fcmovbe
jmp
or
sahf
or
jno
or
sar
sbb
aam
and
rep
popf
push
pop
insl
popa
push
mov
add
mov
rclb
out
int3
out
push
cmp
movsl
sbb
jae
mov
mov
add
xor
fdivp
pop
pop
imul
cli
addr16
mov
jecxz
sbb
push
in
and
fucomip
ljmp
mov
or
pop
cs
and
cmpsl
add
push
lret
pop
adc
les
lea
jne
mov
repnz
inc
push
jns
xchg
notl
enter
push
aam
bound
jecxz
mov
in
pop
sarl
adc
pop
rcrb
pop
push
popf
jle
clc
stos
cmp
cwtl
and
mov
ret
into
mov
jmp
insb
ret
sbb
fldz
xchg
in
mov
push
mov
or
dec
mov
aaa
aam
int3
hlt
addr16
and
pushf
gs
mov
mov
mov
rol
push
xchg
inc
push
or
ficomps
ss
cmp
mov
adc
xlat
arpl
flds
xchg
push
pushf
pop
pop
cmp
js
int
fwait
add
ljmp
cmp
loop
imul
sub
andb
lds
add
cmc
push
in
and
push
fidivs
sub
xchg
nop
lea
shlb
cmp
in
jge
outsb
push
xor
inc
test
xchg
jmp
pop
ret
fcomps
lret
mov
push
push
aaa
adc
mov
sub
xor
lods
call
ret
popa
sti
bound
scas
loopne
fnstcw
shlb
mov
inc
push
adc
into
mov
jmp
jae
inc
shll
int
mov
cmp
sbb
movsb
pop
pop
movsb
lock
xchg
push
add
es
jecxz
test
stos
sbb
jecxz
pusha
push
add
mov
pop
pop
mov
int3
insl
xchg
aad
add
add
outsb
std
mov
out
popa
cmp
cmp
xor
and
sub
sub
sbb
idivl
dec
test
movsl
cmpsl
call
mov
lret
mov
lcall
xor
pop
into
adc
push
lods
insb
out
xor
xchg
jl
mov
mov
lret
pop
xchg
add
push
pop
ds
hlt
mov
imul
sub
stc
and
stos
test
out
sub
cmp
imul
cmp
pop
push
mov
xchg
lock
adc
push
repz
adc
imul
jle
loope
mov
cmc
js
imul
inc
lcall
jmp
adc
es
push
and
mov
mov
test
aam
push
push
gs
sbb
push
sahf
mov
cmp
lock
cmc
sbb
mov
or
or
aaa
les
movsb
jg
dec
addr16
inc
jbe
rcr
fstl
sbb
jge
lods
push
pop
sub
mov
aam
mov
lods
add
ss
sti
bound
loope
cmp
and
xchg
push
jne
jae
jo
pop
dec
sti
pop
cmpsb
xchg
shlb
dec
dec
loope
pop
cmp
in
inc
movsb
ja
repnz
mov
mov
mov
push
sub
inc
add
sbb
movsl
sub
add
scas
test
les
ret
pop
ljmp
jne
pop
outsb
cmpl
or
je
jno
imul
sbb
fisubrs
push
pop
cmp
ja
mov
hlt
sub
inc
jmp
in
les
hlt
loope
fisubl
ret
test
xchg
push
and
mov
test
sbbl
xchg
mov
mov
xorb
mov
clc
stc
pop
in
or
push
mov
jmp
fnstsw
cmp
xchg
fwait
push
mov
sbb
add
int
in
cs
ljmp
in
ret
cmp
xor
jmp
jge
sub
mov
adc
popa
data16
dec
cmc
call
mov
scas
popa
and
dec
dec
leave
dec
and
mov
dec
jno
test
xor
push
out
xor
push
and
pop
mov
dec
xor
fidivrl
push
ret
setne
xchg
pop
lods
jns
xlat
or
ret
int
sub
sub
fsubl
popf
jl
aam
pop
aaa
jne
popl
push
icebp
xlat
and
push
add
arpl
stos
ss
lds
jg
sbb
int3
pop
test
enter
mov
mov
jno
fnstsw
stos
sub
mov
mov
ja
push
inc
jl
stc
in
mov
xchg
mov
andl
push
push
lret
clc
or
inc
fs
pop
call
ficompl
jle
xchg
xor
push
dec
repnz
sbbl
fs
imul
sbb
mov
ret
js
je
xchg
xchg
imul
pop
dec
into
cmp
cld
aam
push
push
jnp
lds
mov
loope
sti
or
mov
aam
mov
jno
fstps
loopne
dec
test
sbb
mov
push
aaa
xlat
pop
mov
mov
repz
adc
pop
lods
add
mov
jp
add
flds
mov
faddl
std
adc
mov
mov
ljmp
pop
pop
cmp
je
sub
in
sbb
mov
mov
and
std
std
jmp
pop
jno
orl
fstps
dec
fxch
push
or
mov
push
sahf
jns
stc
mov
xor
shrb
mov
push
pop
insb
xchg
out
test
jp
sbb
pop
arpl
test
jmp
in
leave
sbb
js
movsl
push
mov
nop
jno
or
iret
loope
int3
mov
adc
push
dec
push
pop
js
out
add
mov
stc
mov
loopne
aam
dec
xchg
jmp
es
sbb
lods
add
call
adc
out
ficoms
and
cmp
and
adc
add
aam
imul
sbb
in
pusha
ret
leave
pop
dec
sbb
scas
adc
divl
int
add
out
lods
jo
inc
xor
dec
subb
cmp
or
xchg
push
adc
insb
test
test
add
leave
rorb
bswap
lret
pushf
sbb
push
sub
xchg
repnz
pop
mov
loop
mov
jecxz
dec
xor
pop
into
insl
mov
cmp
pop
mov
jb
std
push
gs
scas
int
inc
out
sbb
pop
cmp
iret
cmp
mov
adc
dec
sbb
mov
or
icebp
ret
cmpsb
sbb
xchg
or
sub
jp
mov
dec
xchg
xor
or
sbb
pop
std
jb
dec
mov
int3
rclb
jp
and
out
cmp
push
push
cmpsb
push
frstor
lret
pop
sub
mov
cmpsl
push
push
icebp
cmp
adc
cmp
lods
movsb
outsl
cs
xchg
lret
adc
sbb
dec
xchg
xor
jae
into
sub
xlat
icebp
stos
sbb
mov
inc
dec
xchg
out
add
push
sarb
cmp
das
cld
sub
mov
ja
imul
dec
lcall
xor
mov
lret
pop
xchg
hlt
xor
pop
mov
mov
jae
fcmovnb
imul
clc
inc
inc
jle
daa
lods
jp
andb
inc
fildl
adc
lods
shrl
sub
insb
push
add
lods
mov
or
push
jno
push
imul
test
mov
lcall
repz
xchg
and
mov
xchg
int3
xor
dec
mov
inc
cmc
sti
dec
dec
insl
and
addr16
lcall
sti
repnz
mov
loopne
arpl
inc
or
lret
jns
mov
stc
dec
dec
mov
push
lods
jl
leave
sub
dec
pop
sbb
pop
inc
movsb
out
mov
icebp
mov
jecxz
int
in
sbb
sbb
lock
push
jnp
add
aas
inc
cwtl
add
push
mov
hlt
mov
mov
sub
add
jno
push
push
sbb
out
push
cmp
jnp
mov
stos
imul
push
ret
jmp
std
roll
pusha
arpl
sbb
int
jp
das
adc
push
repz
enter
mov
test
mov
inc
pop
ret
xor
cmp
xlat
xchg
mov
xchg
pop
nop
loop
mov
orl
dec
rorl
idiv
mov
pop
lock
mov
sbb
pop
mov
add
arpl
push
clc
jnp
xchg
or
dec
int3
lds
mov
add
xchg
jp
popf
in
dec
ja
mov
loope
mov
adc
stc
sbb
mov
scas
lock
cmp
pop
cld
mov
movsb
sub
sbb
loop
in
push
fiadds
and
in
test
icebp
sbb
fwait
add
or
or
sub
or
je
insb
mov
jns
adc
adc
push
xor
xor
insl
insb
mov
xor
sbb
fs
dec
cmc
mov
push
xchg
dec
daa
pop
call
mov
xor
cmpsl
shl
mov
xchg
adc
dec
loop
into
cmp
mov
adc
mov
cmp
insl
data16
mov
push
sub
outsl
xchg
stos
and
and
push
and
lds
mov
mov
jmp
lret
and
es
je
fstpl
ljmp
pop
imul
inc
push
cmp
pop
push
sahf
lock
ss
popf
cmp
outsl
jle
or
into
jmp
pop
loop
scas
push
xchg
xor
pop
in
iret
insl
mov
test
sbb
cli
aaa
xchg
cs
add
xchg
daa
or
sbb
or
dec
mull
shlb
jp
dec
fists
mov
mov
dec
pushl
enter
or
inc
test
jno
xchg
out
pop
out
js
nop
sarb
push
inc
movsb
jg
dec
xchg
rolb
cmp
daa
sbb
mov
xchg
mov
add
push
enter
adc
cltd
mov
out
xchg
ljmp
and
or
addr16
pop
mov
les
jnp
stos
jge
add
adc
inc
xchg
in
inc
std
fnsave
jne
xor
pop
cs
jae
mov
bound
and
cmp
ljmp
movsb
lock
addr16
sbb
divl
xchg
ljmp
imul
mov
inc
sub
insl
data16
movsb
cmp
insb
xchg
jmp
add
jbe
leave
pushf
daa
addr16
and
jg
push
lret
xor
sti
in
lret
push
cwtl
lcall
sub
mov
mov
cmp
sbb
into
sub
loopne
sub
xchg
adc
jb
adc
dec
cmpsb
call
inc
mov
pop
pop
idivb
jns,pn
sti
mov
mov
sub
adc
into
dec
out
out
inc
sbb
mulb
inc
icebp
aad
int3
iret
and
mov
lcall
add
enter
pop
je
or
fdivr
stos
sbb
inc
sub
outsl
rorb
popl
or
dec
xor
jae
jbe
emms
xchg
repnz
addr16
inc
sti
xor
sti
cmp
and
mov
cmp
jmp
jae
mov
faddp
push
aad
add
xor
mov
loope
sbb
fidivl
nop
mov
and
cs
sbb
fsubrl
mov
dec
push
push
inc
sub
sub
xor
sub
mov
out
clc
clc
mov
xchg
add
imul
sub
mov
mov
mov
mov
pop
jne
add
fstpl
stos
and
leave
and
xchg
iret
dec
outsl
pop
dec
mov
inc
xor
jns
jb
xchg
xor
pusha
jbe
cmpsl
inc
jne
mov
jnp
pop
mov
dec
ljmp
pushf
cli
fstpt
dec
mov
lahf
pavgb
dec
push
in
idiv
sbb
xor
mov
addb
ja
mov
test
push
add
inc
aam
out
jb
incb
push
jmp
fisubrl
fwait
les
add
int3
xor
subl
fsubs
in
orb
lahf
rclb
inc
jns
arpl
pop
pop
xor
jge
jae
mov
pop
push
and
mov
fmuls
jnp
dec
jge
lcall
or
cmp
ljmp
rclb
sbb
lret
sub
pop
push
jecxz
mov
nop
bound
mul
or
jl
mov
pop
shll
adc
xor
or
fsubl
lds
or
push
dec
ss
adc
and
mov
add
bound
and
push
shll
or
sbb
or
pushf
jmp
or
insl
fldcw
es
repz
lds
pop
outsl
push
lds
inc
pushf
xor
daa
inc
pop
and
pop
cmc
in
mov
jp
mov
or
test
fsubr
cltd
outsl
daa
add
cmp
mov
divl
and
das
imul
inc
lahf
ja
xchg
mov
mov
bound
push
ljmp
dec
orl
xchg
aad
lea
mov
or
xorl
negb
dec
add
fwait
pusha
lock
jmp
pop
push
cwtl
push
in
ljmp
mov
lock
shll
pop
sub
movsl
cwtl
sbb
divb
test
mov
imul
or
inc
pop
sbb
loope
aas
add
mov
jb
ret
and
pop
sahf
lcall
ja
lods
js
in
aas
xchg
sub
insb
sbb
xor
sub
mov
cld
pop
imul
adc
pop
jbe
sbb
and
cltd
xor
decb
nop
cmc
pushf
iret
and
or
xlat
leave
sub
test
je
add
call
inc
mov
xor
mov
fidivl
xchg
ja
pop
outsb
mov
rcrl
inc
mov
xor
and
push
inc
cld
insb
xor
mov
popa
testl
sarl
nop
repz
cmp
mov
pop
mov
xchg
push
test
pop
adc
cli
sub
movsb
and
imul
mov
daa
in
xchg
adc
ljmp
sahf
mov
mov
roll
movsb
fiaddl
pop
fwait
pop
in
sub
aas
or
cmp
sbb
push
pop
cmpsb
je
ss
ljmp
jle
mov
mov
dec
pop
mov
jns
cmp
sub
lods
lea
loope
mov
fstpl
aad
das
xchg
out
rorb
mov
mov
leave
popa
jbe
xchg
clc
jb
sbb
ret
rol
out
inc
hlt
cmpl
push
repz
jae
pop
fisubl
rolb
leave
inc
insb
and
sub
push
mov
sub
and
pusha
test
stos
push
jl
sub
xchg
test
or
out
popa
sbb
sub
pop
xchg
stos
mov
jns
jae
mov
adc
inc
xchg
vpcmpeqw
jne
hlt
jnp
fiadds
rep
sti
adc
je
pop
push
addr16
xchg
call
cmp
lods
lock
mov
movsl
mov
adc
iret
outsl
outsb
filds
xor
cmc
push
inc
loopne
push
jo
bound
jns
cmc
cmp
js
fdivrs
test
shl
inc
imul
pop
mov
jbe
mov
icebp
add
inc
rolb
loope
mov
loop
loope
pop
xchg
dec
push
test
mov
mov
mov
mov
stos
movl
sahf
aad
repz
loop
mov
in
lcall
xchg
sti
dec
in
and
mov
sub
cmp
cmc
rclb
or
push
push
push
repz
subl
fs
inc
imul
or
inc
mov
xchg
fmulp
inc
out
push
fnsave
fldcw
loope
and
dec
mov
adc
lds
scas
fs
cltd
aaa
imul
mov
addb
lret
int
sahf
movsl
loop
ret
push
aad
dec
jp
lcall
scas
or
repnz
sub
repnz
rcrl
xor
dec
fucomp
bound
mov
cltd
call
pop
in
in
and
in
gs
cli
sbb
sbb
test
lret
addl
out
bound
jns
push
mov
loopne
jg
movb
push
adc
xchg
sub
sbb
push
adc
insb
adc
mov
loop
movsb
push
fsubrs
mov
insb
pop
imul
mov
daa
insl
mov
nop
xor
add
or
sub
push
push
lret
pusha
cwtl
out
jnp
dec
mov
mov
dec
lds
sub
cld
roll
xchg
cmpsl
aad
mov
jmp
pop
out
lret
mov
push
fcoml
or
adc
jge
es
add
inc
jns
insl
mov
shrb
outsb
negb
sarl
push
out
push
inc
sub
cmp
xchg
xchg
xor
xor
bound
pop
mov
stc
ss
mov
adc
imul
repnz
pop
dec
cmc
ljmp
dec
daa
arpl
orb
xchg
daa
push
movsl
cmpb
or
inc
add
xchg
test
cmp
or
push
cmp
movsb
ja
mov
mov
ljmp
add
out
xchg
dec
add
pop
push
out
sub
push
mov
mov
lret
jno
mov
into
icebp
xchg
xor
repz
outsl
scas
loopne
dec
inc
inc
and
je
mov
cmp
fs
xchg
out
sub
sub
or
cwtl
scas
cmp
jg
lret
inc
push
into
leave
mov
mov
push
xchg
jbe
dec
sub
ret
call
and
stos
enter
adc
aas
xchg
insb
or
sbb
movsb
sub
xor
lret
adc
faddl
jle
jl
lds
and
into
dec
inc
ja
stos
lock
xchg
stc
shlb
xchg
and
sbb
inc
lea
add
lock
cmp
loopne
cwtl
push
aad
xchg
imul
andl
xor
mov
sbb
mov
xchg
ds
stos
or
xor
rolb
ss
insb
push
clc
in
cld
cmc
hlt
loop
and
out
out
sti
sbb
lret
dec
fwait
packsswb
lods
dec
push
xor
xlat
jnp
sub
mov
push
insl
inc
scas
pop
ds
inc
adc
cmp
xor
pop
push
je
sub
jb
sbb
push
inc
inc
int3
imul
adc
add
xlat
pop
inc
lahf
outsb
jmp
rclb
rclb
xorl
push
mov
lret
push
xchg
push
sub
cmp
xchg
jp
mov
ljmp
aad
mov
ljmp
mov
js
xchg
sub
cmp
enter
or
xor
adc
fldt
popa
inc
lods
and
js
dec
or
push
ret
out
clc
test
mov
loop
vmovq
sub
xor
and
pop
pop
orl
insl
and
and
clc
into
in
test
fcompl
addr16
or
add
cmp
xchg
mov
repnz
jecxz
rolb
xchg
xlat
mov
mov
or
mov
cwtl
mov
or
ret
in
dec
add
daa
movsl
xchg
repz
loop
outsb
dec
out
lods
inc
adcb
shl
lret
bound
mov
cmc
xchg
mov
jae
loope
outsl
dec
and
hlt
push
fstpt
sub
nop
out
outsb
push
or
pop
xor
and
imul
cmc
mov
mov
adc
push
into
inc
jle
inc
add
decl
inc
int
pusha
pop
sub
pop
xchg
jns
das
das
mov
lds
jb
sti
jns
mov
adc
push
aaa
je
stos
mov
and
lret
stos
adc
fs
cli
jle
call
sub
leave
mov
xor
or
push
xchg
cmp
mov
xchg
aaa
daa
pop
clc
testl
rorl
into
pop
stos
or
adc
xchg
mov
or
adc
subl
xchg
das
les
nop
out
lcall
sbbb
jae
cmp
outsl
push
or
hlt
cld
push
jmp
sub
mov
and
cmp
ljmp
outsb
outsl
out
in
add
pop
and
dec
sahf
jge
sub
mov
movzwl
dec
add
jnp
outsb
scas
and
jp
scas
test
pop
mov
cmp
mov
push
cs
in
ss
sub
fadds
dec
xchg
dec
pop
stos
push
ja
mov
sub
clc
mov
je
dec
mov
jae
loop
push
loope
cmp
fcoml
inc
and
into
push
popf
push
inc
cli
mov
ljmp
push
lods
inc
or
lods
sub
in
xor
mov
mov
xchg
dec
aad
push
mov
sub
dec
pop
adc
inc
cmc
mov
cmp
idiv
lret
stos
ja
sbb
xor
dec
sub
into
xor
jo
pop
testb
mul
pop
out
in
hlt
ret
mov
sbb
xchg
stos
test
jg
pop
subl
push
cmp
add
aam
pop
push
jne
ret
loopne
cltd
fstps
pop
inc
adc
xor
jb
leave
lds
hlt
imul
sbb
test
mov
loope
ret
dec
fildl
inc
and
fcom
inc
dec
xchg
pop
jp
lock
add
aas
and
fidivrs
stos
push
fistps
push
ss
popa
clc
sbb
push
mov
and
mov
dec
mov
dec
movsl
jo
das
jo
scas
dec
mov
add
sarl
xor
cmp
push
popf
aaa
das
mov
or
cltd
data16
adc
cmp
stos
jo
sbb
inc
rcll
inc
jl
sbb
push
pop
mov
jns
bound
jecxz
lret
shlb
and
leave
push
in
sbb
lock
sti
jp
lock
sbb
test
mov
orl
jns
andb
pusha
in
lods
jo
lods
test
adc
cltd
adc
push
cmpsb
xor
sub
jo
test
mov
inc
xor
loop
xor
xlat
jmp
and
mov
xchg
xor
xor
pop
ss
mov
je
sbb
negl
dec
cmp
jg
push
dec
cmp
cli
sbb
inc
stos
mov
sub
rorl
xchg
pop
fisttps
xor
sbb
dec
cmpsl
mov
mov
js
outsb
inc
or
xchg
and
es
xchg
addr16
push
insb
xor
out
stos
jge
mov
roll
lret
fisubl
or
push
rcll
sub
fxch
push
lds
pushf
xor
fldt
sub
xor
mov
fsubrl
or
xor
popf
fsubrs
test
lea
adc
addr16
dec
sub
cmp
xchg
mov
xor
mov
push
pop
push
and
into
jns
pop
mov
stc
mov
or
cmpsl
js
fs
pop
ret
xchg
dec
add
jae
xchg
mov
loop
rcll
insb
adcb
jns
lret
mov
mov
inc
xchg
js
loope
mov
leave
aam
pop
push
loop
inc
mov
fwait
hlt
jb
mov
sub
mov
js
and
lcall
sub
xchg
test
adc
subl
adc
dec
xlat
add
fisubs
jp
pop
xchg
add
sbb
loopne
sbb
inc
aad
insl
or
cwtl
fldz
pop
xchg
or
cmp
insb
ror
ss
or
jae
xor
in
add
fiaddl
xchg
insb
shll
stc
fmulp
dec
inc
lret
sbb
clc
rorl
mov
or
mov
inc
mov
jno
lret
scas
daa
pop
inc
andl
sahf
mov
dec
fs
ja
mov
sbb
inc
or
call
lods
mov
push
das
les
shl
call
rcrl
jns
daa
push
push
std
ss
pop
mov
jecxz
cld
jae
gs
mov
mov
test
inc
incl
ss
daa
xor
in
jae
cmc
fcompl
and
mov
lret
pop
lcall
in
ja
call
test
stc
and
movl
and
xchg
xlat
mov
jb
mov
ficoml
push
or
pushf
push
xchg
shr
bound
mov
mov
jnp
and
out
cmp
clc
lods
cmp
xchg
mov
rcll
dec
push
int3
jmp
repz
and
int3
popf
push
mov
arpl
test
push
incl
mov
test
imul
sbb
mov
xchg
or
push
mov
xor
int3
dec
ja
jl
lea
sbb
inc
jl
stos
out
daa
jl
icebp
adc
ret
push
mov
mov
push
test
adc
jle
fs
ja
add
add
fisubl
xchg
and
add
pop
outsb
jmp
add
mov
mov
das
adc
mov
lret
imul
shrb
xor
mov
lds
and
jae
int3
nop
fdivp
lods
cli
pop
mov
push
add
push
dec
sbb
jl
cmc
lcall
dec
std
or
ret
test
call
mov
push
fistpll
scas
mov
stc
stos
call
adc
inc
adc
scas
push
push
push
jae
jge
pop
icebp
pusha
scas
rol
rol
loop
rcrb
ficoml
adc
jp
fsubrp
pop
cmp
jmp
scas
add
je
cltd
aad
sub
fnstsw
fs
bound
inc
std
push
lcall
movsl
xchg
call
inc
add
loop
loopne
xlat
fs
mov
pop
or
or
inc
test
stos
push
push
add
inc
dec
mov
cmpsl
xor
mov
enter
mov
loop
mov
dec
mov
dec
adc
subb
in
test
mov
pop
push
mov
fstpt
sbb
loopne
mov
dec
xchg
loopne
cmp
adc
cmp
mov
or
mov
pop
out
leave
dec
int
adc
hlt
adc
and
xchg
fistpll
push
popf
aas
pop
adc
leave
sbb
mov
jnp
daa
repz
ja
int
add
fstpl
cmp
xor
imul
and
mov
xchg
sub
and
je
loop
gs
sti
cltd
lahf
jge
mov
add
fwait
repnz
pmaxub
xchg
ret
pop
jae
gs
loopne
std
cmp
xor
mov
jmp
xchg
add
ret
sub
cli
movsb
push
scas
dec
sti
mov
rcl
test
stos
adc
sbb
xchg
dec
jl
enter
add
ret
jns
pop
mov
sti
adc
scas
jecxz
xorl
imul
push
and
shl
jle
pop
lret
mov
bound
je
fistl
push
dec
pop
inc
sub
mov
mov
jmp
xchg
inc
xor
or
fcmovnbe
sbb
cltd
faddl
cltd
and
mov
adc
mov
fld
clc
cwtl
cwtl
jp
or
in
ja
divl
gs
pop
outsl
xlat
in
mov
cli
xorl
push
and
and
in
push
aad
fmull
mov
or
or
mov
shll
dec
in
outsl
xor
sahf
inc
jmp
in
iret
xor
sub
imul
pop
mov
daa
push
cmp
std
lods
mov
mov
inc
mov
adc
hlt
push
inc
mov
inc
arpl
cmp
clc
mov
ja
and
push
call
aad
fdiv
jecxz
daa
push
gs
or
mov
call
pop
jl
and
lds
mov
pop
mov
lock
test
sarl
mov
divb
inc
test
add
add
ret
inc
xchg
fldenv
fistps
sbb
jmp
adc
rorl
jp
pop
push
or
sub
cmpsb
les
jne
jmp
push
iret
repnz
inc
jle
mov
xor
push
testl
sbb
enter
mov
nop
mov
loope
jl
push
push
sub
push
jge
xchg
stos
cmp
add
mov
in
mov
loop
jle
push
adc
mov
mov
or
push
test
fcomip
mov
into
loop
or
pop
arpl
insb
sbb
jge
rol
scas
sbb
repnz
add
add
aaa
lods
gs
xchg
aaa
imul
lahf
mov
cmp
push
rolb
es
cld
data16
pop
or
push
arpl
lret
or
pushf
jp
insb
sbb
sbb
sub
call
insl
lock
mov
sarl
mov
jno
xchg
ret
fisttps
push
mov
inc
mov
mov
es
jnp
clc
push
fwait
adc
dec
lods
enter
mov
dec
xchg
sbb
or
dec
sbb
mov
loop
repz
in
int
cli
fwait
cmpsb
inc
pop
fwait
jp
lea
lret
add
xchg
xchg
in
test
fadds
mov
lea
loop
mov
stos
push
cli
and
push
xchg
test
dec
add
aad
adc
jnp
bound
call
pop
jecxz
cmp
ljmp
xor
mov
nop
cmpsl
icebp
rcrl
leave
push
adc
mov
jbe
lods
xor
adc
iret
ret
pop
out
fs
push
mov
xor
xchg
sarb
xchg
lahf
sbb
mov
push
scas
cmp
cmp
inc
rcrl
in
lds
ss
or
inc
sbb
pop
and
adcb
inc
fstps
insl
mov
test
mov
rcrl
leave
imul
sbbl
mov
jno
add
flds
adc
xor
fldcw
testb
mov
pop
sbb
daa
stos
sub
int
hlt
dec
xor
lods
push
xor
and
inc
in
push
pusha
in
insb
add
cmc
mov
andl
rcrl
push
inc
mov
jecxz
cmpl
pop
lahf
dec
mov
adc
dec
flds
xchg
pop
adc
and
sub
push
pop
test
push
les
fs
pop
mov
cmp
enter
mov
addr16
rolb
inc
in
mov
push
push
jns
dec
sarb
mov
mov
pop
shl
notl
pop
push
bound
mov
cmpsl
push
imul
mov
nop
les
or
inc
sub
xchg
mov
sbb
dec
cli
mov
leave
movsl
pusha
xchg
adc
adc
dec
out
push
fiaddl
fisubs
mov
adc
and
outsl
cmpsb
ljmp
jmp
stos
int3
xor
xchg
adc
iret
or
push
cmp
sbb
push
jae
dec
xchg
jmp
or
fstpl
leave
cmp
fmuls
sub
cltd
sbb
jge
outsl
dec
das
cmp
out
dec
mov
inc
mov
jae
jge
xlat
xorl
mov
fiadds
adcb
aad
pop
fwait
js
jle
sbbl
orb
dec
fildl
sub
shll
aam
jp
in
or
xorb
add
loope
data16
loope
jb
push
xchg
fdivrl
stos
mov
popf
xor
shlb
clc
push
mov
lret
and
inc
sub
xor
out
scas
cli
push
arpl
push
rclb
and
cmp
jmp
mov
or
mov
xchg
data16
add
test
fcompl
sti
mov
pusha
mov
stc
or
jns
scas
in
nop
xor
sti
pop
jbe
mov
add
dec
dec
popf
and
je
mov
pop
cltd
cli
pop
sti
or
push
loopne
mov
adc
mov
push
cld
sbb
cmp
add
pop
lret
push
pop
xchg
test
repz
cwtl
xchg
push
and
out
inc
out
test
fs
cli
andl
fistpl
mov
or
jl
xor
out
pusha
push
ja
dec
mov
fbstp
xor
in
mov
enter
mov
imul
lcall
xor
std
adc
mov
sbb
fisttpl
sub
mov
repz
mov
ljmp
loopne
cmp
aas
pop
daa
sub
pop
push
xor
mov
nop
mov
cmovae
popa
dec
in
or
and
adc
jmp
push
outsb
rorl
aas
mov
aam
add
loopne
imul
popa
fistpll
push
outsl
mov
jmp
jnp
fcomp
mov
pusha
neg
push
dec
jne
imul
and
xorl
in
xchg
hlt
stos
cli
inc
fs
dec
jecxz
adc
jge
aam
es
mov
add
fiadds
ljmp
sbb
mov
cmp
call
xchg
add
cmp
sub
cmpsl
dec
xor
scas
js
dec
mov
mov
mov
inc
adc
divb
div
push
test
dec
lahf
js
int
add
or
push
pop
jmp
jb
outsl
mov
mov
inc
inc
roll
aas
jns
mov
addr16
mov
roll
cmpl
test
inc
loopne
icebp
cli
inc
push
into
dec
adc
and
cltd
mov
xchg
ljmp
push
out
enter
or
push
mov
sub
in
stos
popf
neg
cltd
mov
lcall
mov
dec
jmp
lea
js
inc
or
fcompl
mov
stos
inc
fs
clc
repz
push
or
std
cs
es
jnp
out
repnz
in
add
xchg
mov
loope
imul
mov
mov
subl
pop
inc
push
mov
repz
shll
flds
imul
fisubs
mov
adc
pop
rcrb
pushf
mov
movsb
es
lcall
movsl
push
sub
dec
mov
jl
adc
sbb
test
lods
out
icebp
repnz
icebp
bound
push
pop
cmc
loopne
mov
mov
test
dec
mov
jns
ja
psubq
dec
push
lods
pop
push
shrb
and
loop
out
outsb
jmp
mov
mov
mov
sbb
mov
outsl
xchg
pop
lret
inc
dec
test
je
cmc
ret
repz
inc
jae
lcall
pop
add
mov
popf
sbb
xor
imull
sub
xor
xchg
dec
fstl
ret
xchg
adc
incb
subb
fidivrl
xchg
sbb
imul
int3
push
cmp
mov
js
in
ret
xor
cltd
jecxz
adc
icebp
push
rcll
and
movsl
mov
jge
mov
clc
and
mov
inc
lods
std
push
lock
dec
enter
adc
lcall
push
sti
dec
and
test
jecxz
or
lea
enter
add
stc
rcrl
adc
lods
pop
scas
pop
das
adc
cmp
insb
outsb
adc
je
push
lds
insb
jo
pop
ss
inc
mov
dec
add
xchg
das
inc
jbe
cmp
lahf
cmc
stc
mov
xchg
shl
lahf
dec
shlb
fimull
mov
fwait
cwtl
xchg
push
cwtl
or
or
scas
push
jmp
inc
sti
sbb
xorl
xchg
inc
xorb
in
jno
inc
dec
mov
js
or
mov
dec
sub
xchg
into
aam
aam
in
dec
in
dec
xor
loop
popa
push
in
shr
ljmp
adc
out
xor
test
and
sbb
dec
sub
insl
fimuls
dec
mov
xchg
fwait
cmp
sub
ljmp
mov
imul
mov
mov
lret
mov
lret
push
adc
pop
insb
lock
xlat
push
mov
ljmp
add
pop
lret
xor
xor
cmp
out
fstps
adc
movsl
into
flds
stos
mov
adc
mov
sarb
or
lods
fbld
cs
fldcw
cmp
inc
adc
sub
mov
iret
testl
xchg
inc
cld
ret
and
mov
int3
xchg
xlat
or
cli
outsb
ja
or
add
lods
frstor
xor
pop
jbe
dec
sbb
fptan
mov
pop
pop
cmc
add
stos
cmp
fs
cwtl
mov
stc
or
aas
xor
push
rcr
cmc
jle
ftst
mov
popa
push
mov
sbbl
shl
mov
add
ret
lcall
imul
adc
ret
cli
mov
mov
stos
fs
xchg
jmp
mov
rcrb
test
dec
sbb
rcr
mov
lret
add
fwait
or
fs
cmp
arpl
adc
push
shr
out
jle
movsl
mov
push
in
ljmp
mov
and
cmp
push
mov
fimuls
aas
xchg
sub
lds
je
dec
lods
fstpl
test
xor
adc
pop
out
jb
mov
mov
aam
test
adc
lock
push
inc
out
lods
jl
jne
mov
lret
jae
aaa
sub
pop
and
cmc
ficomps
out
imul
fldenv
sub
stos
xchg
addr16
mov
add
xchg
int3
sub
test
fcmovu
repz
xchg
sub
jecxz
mov
jno
jns
push
jns
mov
popf
inc
mov
jg
jns
inc
jl
enter
push
in
subl
xchg
clc
xchg
pop
add
test
push
sub
gs
mov
sbb
sub
out
rolb
or
push
pop
or
push
mov
icebp
cmp
rcll
pop
pop
clc
cmp
scas
jo
mov
test
rol
or
rcr
cltd
mov
or
ffreep
adc
jae
pop
in
pop
fstps
andb
dec
nop
sahf
lock
lds
jae
jne
outsl
push
out
lock
notl
loope
pop
mov
jecxz
aad
mov
test
xor
clc
pop
insl
outsl
xchg
stos
mov
adc
or
sahf
xchg
sub
add
and
xor
in
adc
jp
outsb
xchg
dec
mov
jp
mov
test
lahf
enter
or
into
repz
ss
mov
cmc
pop
and
xchg
clc
xchg
dec
add
call
sub
pop
mov
sbb
mov
mov
add
jb
push
or
pop
and
cmp
inc
add
imul
mov
mov
cmp
daa
movl
xor
xchg
loopne
scas
pusha
dec
inc
inc
aad
loopne
outsb
mov
mov
fnstcw
aad
cwtl
cmp
test
div
repnz
std
push
lds
popa
data16
int3
js
int3
xor
subb
call
loop
out
movsl
pop
aad
mov
lret
xchg
sub
pop
jne
cmpsl
test
or
jle
dec
enter
mov
movsl
jns
dec
push
loope
cwtl
pavgb
cld
inc
inc
xchg
sub
add
sahf
dec
mov
mov
testb
mov
and
jg
dec
cmove
repz
cmp
push
inc
dec
std
pop
push
xor
pushf
clc
notb
jle
push
fs
and
mov
sbb
in
push
stc
sbb
push
pop
fs
test
cmp
fwait
das
call
insl
roll
xor
pop
fidivrs
mov
jno
push
adc
das
outsb
movb
ja
lea
cltd
mov
lock
pusha
xchg
mov
mov
ficompl
dec
jl
xchg
jp
cmp
dec
xlat
xchg
insl
or
push
mov
shll
and
mov
pop
add
lock
xchg
xchg
cwtl
mov
or
daa
fcoml
test
loope
or
dec
pop
xor
and
xchg
or
in
or
insb
mov
loope
sti
inc
shrl
cmp
test
adc
das
fwait
rorb
pop
or
xor
in
sbbl
xor
std
mov
shrl
mov
adc
outsl
or
pushf
dec
xchg
sahf
es
imul
pop
and
mull
jl
sti
jmp
inc
pop
sbb
out
mov
imul
push
xchg
push
pop
jne
add
mov
filds
jge
xchg
jns
ja
adc
pop
push
xorb
cmpsl
roll
icebp
push
sbb
sbb
fmull
lret
je
and
arpl
mov
cmp
daa
movsb
and
shl
repz
add
sub
cwtl
pop
ret
mov
lea
cltd
cmp
push
addl
in
ja
imul
cmp
inc
gs
loope
cmpsl
dec
fnstsw
sub
and
mov
mov
stc
mov
xchg
lods
mov
mov
insl
xchg
rolb
cmp
dec
jl
mov
sbb
ret
je
cltd
jbe
repnz
pop
arpl
push
fisubl
lret
mov
pop
jle
dec
adc
and
fcoml
xchg
cmpsl
int3
test
sub
stos
mov
sub
and
or
mov
push
jnp
sbb
test
inc
and
inc
push
rolb
lret
jp
xchg
pop
sbb
jg
sbb
inc
cmp
lods
fnstenv
xor
insb
outsb
dec
lods
xor
repnz
insb
jo
jle
mov
ret
aaa
fcomps
inc
add
mov
push
jbe
add
es
std
mov
xchg
popa
loope
dec
push
jg
dec
into
rcrb
mov
fwait
push
add
andl
gs
jnp
dec
sti
lcall
mov
mov
shlb
dec
fs
fisttps
mov
fistl
addl
fsts
clc
fwait
lret
fwait
lcall
and
dec
shl
xchg
sub
dec
in
fcoms
cmpsb
in
lcall
add
lret
and
cwtl
subb
frstor
xchg
sbb
add
lods
push
fildl
fimuls
adc
mov
add
loop
ljmp
cmp
imul
mov
lahf
orb
repnz
into
iret
xor
jne
pop
fsubr
mov
push
dec
gs
jg
out
nop
jb
dec
ret
pop
add
pusha
dec
fsubp
cmp
cmp
and
xchg
ja
mov
jp
das
adc
cmpb
stos
mov
fcmovb
pusha
push
adc
dec
jne
pop
xor
loopne
rcr
fimull
or
mov
cmp
jp
sub
pop
sub
clc
rol
mov
in
jmp
lcall
lcall
mov
into
push
lret
jmp
pop
xchg
and
mov
add
daa
mov
call
cli
add
lahf
sbb
std
jb
test
pop
leave
add
repz
sub
jmp
jne
cmp
xchg
adc
add
jnp
inc
xor
xor
lods
mov
test
fisubrl
push
imul
xchg
dec
mov
mov
fwait
cmp
ss
shlb
push
lret
xor
adcl
xchg
mov
xchg
adc
lret
add
mov
stc
jecxz
sub
mov
je
loop
in
xor
ss
jl
loopne
lods
jns
pop
loop
add
cmp
pop
stos
xchg
sti
nop
das
jmp
mov
mov
dec
lods
repnz
rcll
and
mov
pop
or
stos
xchg
cwtl
fistps
adc
add
cmpsb
sbb
das
outsb
pop
push
inc
lds
cmpb
pop
aad
cmp
jne
out
jbe
aaa
aaa
std
mov
cs
int3
nop
es
xor
push
dec
dec
adc
cmp
dec
das
cmpsb
out
shlb
fldenv
push
sub
das
or
inc
jg
into
pushf
int
lods
lods
mov
cmpsl
fldcw
jp
mov
adc
out
inc
push
sub
stos
add
push
scas
xchg
insb
mov
stos
lock
daa
push
fwait
push
andb
add
iret
test
out
mov
sub
xchg
call
jb
cmp
or
pop
and
les
xlat
mov
sub
xchg
out
gs
push
sti
repz
adc
jo
addr16
inc
mov
jmp
jne
lods
inc
in
scas
shlb
aad
loope
outsb
adc
xchg
inc
ffreep
fyl2xp1
aas
stos
mov
test
jbe
decb
test
push
imul
icebp
mov
mov
sbb
jb
xor
addr16
rolb
addl
fcomps
ret
jns
dec
lcall
xchg
sub
leave
add
data16
mov
lock
loop
mov
pop
cltd
in
and
daa
test
mov
out
sti
add
mov
inc
mov
stos
int
cmp
xor
adc
mov
ljmp
mov
adc
cld
pop
push
or
cmp
cmpsb
pop
and
add
pop
cli
cs
lds
ds
jmp
sbb
mov
push
aad
push
xor
jae
in
mov
scas
xor
add
sbb
int3
fs
dec
xor
push
aas
pop
dec
test
rol
cmp
ror
sub
dec
mov
xor
jl
dec
lahf
cmpsl
shr
int
leave
and
or
lcall
outsl
adc
or
out
xchg
add
fisubrs
repz
adc
sbbb
push
shll
ffree
imul
js
add
or
lods
jnp
xor
rclb
jmp
out
scas
xor
cmp
insl
fidivs
mov
fsubl
push
jae
sbb
sahf
aas
inc
cli
enter
lea
je
inc
dec
fdivrl
sub
jge
mov
xchg
mov
mov
sbb
sub
out
or
push
movsb
jg
xchg
test
cmp
inc
xchg
sub
jecxz
cmpb
push
jo
jns
dec
rorl
mov
jo
outsb
sub
jno
and
pop
add
cmpsb
adcb
dec
out
stos
clc
jnp
pushf
cmp
rorl
clc
add
loopne
insl
sahf
inc
lret
aas
lds
inc
in
lret
ja
xor
cltd
pop
fs
clc
in
out
add
test
and
andl
fdivrl
dec
mov
mov
outsl
fwait
add
dec
pop
jmp
add
int
fnstsw
cs
lods
and
mov
popa
imul
orb
in
inc
pop
jmp
jp
sub
mov
pop
daa
pusha
push
xor
inc
jne
jge
jnp
mov
lahf
rcrl
lret
dec
adc
pushf
jp
scas
sub
dec
mov
xorb
lock
xor
std
sbb
pop
xor
xchg
xor
pop
out
lret
dec
push
arpl
cltd
xchg
xchg
inc
mov
jp
out
movsb
psubw
push
lods
pop
fcmovnu
shrb
fwait
pop
aaa
sbb
out
fldenv
jno
push
ror
filds
les
cltd
cmp
xchg
adc
outsl
sbb
cs
ret
xor
sub
xlat
and
scas
mov
mov
icebp
xchg
dec
iret
push
cmc
cmp
cli
jge
cmp
push
xorb
xor
mov
add
mov
or
adc
push
and
mov
fldt
mov
clc
imul
or
imul
mov
xchg
ljmp
loope
sahf
jmp
or
shll
push
mov
rcrl
push
pop
and
aad
push
add
popf
pop
jecxz
arpl
jmp
sbb
xor
mov
nop
xor
add
add
mov
flds
addr16
push
in
jg
ja
cmp
add
stos
cmp
push
sbb
aam
pop
mov
sub
jns
sbb
dec
adc
xchg
sbb
sbb
out
cs
cmp
xchg
adc
jae
out
jno
xchg
cli
add
adcl
fs
in
pop
int
fcomps
adcl
mov
mull
add
add
es
cmpsw
sub
jb
stos
loopne
jg
aam
lds
or
test
push
mov
cmc
xor
adc
dec
lods
lods
lret
mov
push
je
mov
call
arpl
xchg
cmc
fisubl
and
cmpsl
inc
out
std
pop
scas
or
jecxz
lods
enter
add
push
aad
mov
cmp
ds
pop
xor
xor
jne
imul
pop
mov
xchg
je,pt
and
jno
flds
dec
inc
into
xchg
pop
js
xchg
iret
cld
stc
aam
sub
jnp
popf
out
mov
rorl
or
repnz
sbb
pop
mov
out
jle
outsl
popf
cmp
cwtl
mov
les
inc
inc
xchg
sbb
push
adcb
cmc
jbe
out
in
xorl
movsl
loope
aam
sbb
push
cltd
add
add
add
pop
mov
imul
xor
mov
sbb
sbb
sbb
popa
mov
in
negl
hlt
lret
arpl
fwait
inc
sub
dec
loopne
and
add
in
lcall
pop
in
mov
cmp
enter
or
mov
jns
in
adc
stc
fcmovnu
push
setnp
dec
lods
pusha
pop
mov
dec
xchg
inc
test
push
mov
loop
idivb
inc
je
xor
jae
dec
pop
pop
xorl
outsl
xchg
adc
inc
ret
push
iret
in
pop
dec
shl
cmp
mov
push
mov
mov
xor
das
jo
cmp
cmpsl
into
mov
repnz
stos
adc
test
or
faddl
sub
cwtl
xlat
test
arpl
add
dec
jp
movsl
int3
movsl
add
je
insl
iret
je
stos
inc
in
repnz
xorl
out
and
pop
mov
popa
cmp
outsl
out
push
add
sbb
pop
push
lods
sahf
insl
push
cmp
iret
or
cs
sbb
mov
outsb
outsb
dec
inc
daa
adc
or
cmp
or
sub
inc
int
aaa
pop
sub
sbb
aad
adc
push
bnd
outsl
push
std
jb
daa
mov
int3
rclb
jg
push
out
idivl
push
add
movl
mov
lret
jo
sbb
dec
mov
or
es
into
stos
je
lods
and
jb
cltd
sub
xchg
sub
inc
dec
xchg
movb
ds
fcomip
stos
cmc
rcrb
jae
mov
adc
sbb
inc
out
lds
jno
jne
iret
aaa
jge
mov
das
cld
negl
ret
and
adc
xchg
scas
or
mov
hlt
mov
lods
adc
fwait
imul
and
imul
mov
inc
inc
cmc
ret
jge
jns
xor
adc
pop
mov
aas
je
stos
shll
and
dec
add
push
inc
mov
and
push
rolb
mov
lcall
xchg
xor
xchg
jo
mov
xchg
insb
les
stos
xchg
adc
adc
mov
addr16
cli
dec
xorb
addr16
shrl
repnz
fisubrl
mov
sub
imul
fistpll
in
sbb
cmp
loop
jne
in
jne
jmp
and
movsb
pop
icebp
xor
js
cmpsb
mov
cmp
inc
lods
std
xchg
dec
sub
aad
test
mov
bound
subb
lcall
xor
xor
pushl
into
popa
and
sbb
paddusb
adc
push
mov
inc
jmp
jge
mov
jmp
ret
fldenv
shl
adc
mov
repnz
xor
pop
movsb
pop
add
pushf
sbb
test
sub
push
mov
popf
aaa
xor
lea
mov
mov
adc
into
push
push
in
mov
pushf
jne
lahf
push
add
imul
into
push
mov
and
mov
pop
pop
out
ret
dec
in
ds
adc
or
fs
fistpl
mov
clc
imul
or
adcl
inc
std
xchg
stc
jge
in
inc
ret
inc
test
loope
cmp
or
clc
push
push
mov
jno
shll
aad
stos
fdiv
lcall
sbb
or
fisttps
mov
sbb
stos
aad
call
lods
adc
hlt
mov
rol
loope
push
je
jl
jne
and
cmc
repnz
test
std
and
bound
arpl
dec
lea
aas
sub
mov
js
shrl
dec
pop
push
lahf
push
sub
adc
pop
shl
jmp
je
xchg
jp
decl
lret
mov
in
xchg
fcoms
dec
xchg
mov
sbb
shlb
mov
in
and
mov
addr16
sbb
fcom
lods
test
test
push
test
call
xlat
inc
pop
xor
jbe
fimuls
pop
outsb
mov
rcr
jb
push
or
jno
xor
and
and
fiaddl
insb
inc
adc
arpl
xchg
lahf
pop
rcr
mov
xchg
mov
sbb
ficompl
popa
pushf
and
push
push
clc
imul
or
adc
lods
les
loopne
xchg
sbb
in
inc
sbb
mov
loope
repz
aam
cld
jns
cmpsb
stos
adc
scas
adc
dec
cmp
aad
in
repz
jecxz
popf
pop
fisttpll
mov
mov
sbb
adc
and
std
fwait
call
in
out
repz
mov
and
sbb
xchg
pop
jne
push
cmp
lea
mov
mov
rorl
xor
pop
xchg
pop
xchg
into
jbe
stc
xor
inc
pushf
pusha
sbb
movsl
adc
shr
pop
push
repnz
cmp
or
test
jns
fsubs
pushf
ja
pop
movsl
add
mov
push
inc
add
int
cmc
and
pop
imul
mov
mov
add
add
test
call
xchg
imul
cwtl
dec
shlb
or
push
fisttpll
jno
mov
sarl
mov
and
loopne
cmc
stos
inc
xchg
cmc
adc
andb
inc
std
call
popf
lahf
arpl
int
leave
enter
sbb
imul
int
pop
pop
movsl
push
and
imul
ss
add
jg
cmp
lret
xchg
cltd
push
sbb
pop
into
mov
cltd
call
cltd
adc
lahf
rorb
mov
xchg
sbb
adc
pop
jl
aam
sub
pop
mov
popf
add
andl
push
lret
cld
sbb
gs
adc
loopne
in
cld
ficompl
lods
sbb
imul
add
cmp
cmp
mov
xadd
mov
fsts
insb
pop
into
fisubs
push
add
pop
push
push
pushf
enter
add
mov
sti
pop
and
outsl
mov
adc
cwtl
aam
mov
dec
dec
mov
mov
mov
aam
sub
inc
and
cmpsb
div
je
cli
push
in
inc
stos
pusha
cmpsb
add
rorl
add
loop
push
add
sbb
call
orb
mov
lea
mov
and
cmpsb
add
addr16
popa
pop
test
dec
testb
shlb
xchg
and
cwtl
push
loopne
add
inc
adc
in
jo
imul
xor
lret
push
leave
and
xor
push
movsl
fsubr
jae
and
std
pop
test
stc
dec
mov
xchg
lea
or
xchg
sbb
add
add
cmp
out
ret
mov
xor
xchg
lcall
test
mov
sub
jg
aam
lret
outsl
insl
sub
fbstp
mov
cld
bound
xchg
mov
lret
cld
jo
and
ss
in
xor
xor
icebp
sti
jp
lret
jnp
mov
dec
or
push
sub
vmwrite
jmp
push
pusha
xor
test
adc
and
xor
push
push
test
cwtl
sarb
aas
in
sbb
inc
sub
xor
xlat
push
outsl
jmp
pop
mov
mov
xchg
add
sub
and
call
mov
negb
mov
sub
add
cli
lcall
sahf
dec
outsl
les
xchg
inc
imul
in
mov
in
fistpl
jp
inc
je
nop
clc
jae
inc
or
lods
and
es
insl
push
adc
inc
inc
push
stos
in
pop
insl
mov
rcr
mov
push
mov
mov
test
jo
outsl
ds
daa
dec
lds
mov
adc
test
dec
filds
cmp
cltd
xlat
sub
add
mov
cmc
or
outsb
movsl
int3
lods
inc
sub
iret
je
cmp
jb
xchg
loop
sub
inc
and
pop
jbe
jns
jns
mov
pop
adc
mov
fs
shl
outsb
mov
inc
sbb
jbe
push
cmp
iret
add
sbb
lcall
leave
sub
xchg
mov
xchg
insb
test
cmpsl
hlt
ret
jmp
mov
dec
mov
or
outsl
je
pop
in
jbe
sub
std
repnz
mov
int3
mov
dec
into
popa
push
into
inc
cmp
cmp
and
push
gs
cli
sub
xchg
popf
cmpsl
pop
rorb
cmp
into
cmp
scas
cwtl
cmpsl
sbb
js
into
imul
inc
xchg
xor
push
rcl
imul
je
imull
sbb
mov
xor
popa
dec
dec
xchg
test
or
sbb
jge
cld
dec
xor
push
mov
cmpsl
repz
mov
es
dec
lret
icebp
sub
mov
inc
cmc
add
push
inc
cmp
imul
dec
dec
add
lds
push
test
fdivs
mov
push
shll
stc
adc
fiadds
mov
insb
in
push
mov
sarl
inc
cli
mov
pop
cwtl
aad
pop
aaa
sbb
jle
mov
popa
and
fcoml
or
je
sahf
xchg
addr16
or
xor
sub
enter
lea
mov
movsb
pop
faddp
push
adc
push
add
inc
mov
push
frstor
js
mov
fldt
inc
movsb
adc
repnz
push
cmpsb
sbb
insl
call
adc
inc
call
add
cli
inc
scas
mov
lret
and
rcll
mov
icebp
incl
aam
sti
and
fs
fisubrs
fldt
jo
inc
mov
pushf
sbb
and
loopne
imul
leave
mov
ret
cmp
adcb
xor
sti
jne
lock
addl
push
pusha
std
inc
and
mov
mov
adcl
jae
ret
addr16
pop
add
pop
xchg
mov
jmp
pop
mov
imul
push
xchg
ja
cmp
jp
inc
mov
lret
out
ret
push
in
pop
aam
aam
jbe
jecxz
divl
xor
fcomps
bound
and
dec
and
test
dec
test
rcll
rolb
mov
or
bound
xor
pop
fimull
fcoms
js
fisubrl
adc
ret
insb
xor
sbb
nop
jge
movsb
int3
pusha
aaa
cmc
mov
and
stc
ja
xor
add
jae
add
jmp
enter
mov
cwtl
into
fsubs
or
cltd
fdivrs
subl
out
lahf
pop
and
stos
gs
and
jae
in
stos
aam
mov
jmp
jg
xchg
fldl
call
int
push
inc
loopne
js
enter
mov
out
pop
jle
cmp
ljmp
aad
sbb
lock
cmp
fiaddl
fcomps
fs
js
imul
out
xchg
mov
nop
gs
inc
jb
pop
fmulp
add
xor
loope
loope
push
push
loop
pusha
pop
xchg
js
xchg
jg
lcall
mov
inc
lds
mov
cltd
aad
scas
cwtl
call
pop
hlt
rorb
mov
fs
or
jecxz
xlat
and
add
idiv
and
add
test
cmp
mov
mov
xchg
ror
inc
inc
fldl
faddl
mov
mov
jp
lods
fcoms
mov
test
push
test
xchg
push
idiv
jmp
adcb
and
inc
cmp
aad
mov
jno
push
repz
jp
int
xchg
stc
loop
popa
or
push
int
fs
sub
mov
stc
or
adc
add
stos
lock
lret
xchg
fs
sub
pusha
shrl
add
arpl
out
sahf
mov
cmp
nop
inc
mov
cmc
out
jb
jno
push
xchg
add
push
fidivrl
mov
sbb
cmp
push
call
adc
adc
scas
cwtl
shl
mov
rorl
sbb
lods
sub
test
aaa
xlat
sbb
repz
arpl
jae
in
pop
add
cmp
sarb
outsb
jne
jo
jno
inc
flds
pop
push
push
aad
xor
sbb
jno
test
mov
jecxz
mov
stc
pop
fisubl
adc
cmpsb
fcomp
out
xchg
xchg
pop
mov
jno
cwtl
imul
mov
xorl
pop
cmp
jl
push
in
daa
xorb
jne
xchg
add
stc
push
fbld
cmp
jno
jmp
dec
pop
into
fidivrl
push
cmp
ja
mov
clc
test
push
in
out
jmp
arpl
xor
mov
or
sbb
insb
nop
dec
mov
testl
push
nop
incl
dec
inc
fmull
lcall
push
pop
enter
adc
or
out
mov
jmp
fmuls
cmp
fidivrl
mov
jge
dec
in
lods
call
arpl
pop
pop
pop
aaa
lods
cs
mov
mov
iret
in
adc
dec
mov
loope
jge
sarb
cld
mov
lret
mov
das
mov
dec
cs
repz
or
or
lahf
fisubrs
xchg
push
adc
or
jge
add
lods
inc
sbb
aad
mov
jae
push
imul
insb
xchg
inc
and
add
add
jno
insb
in
inc
mov
sarl
rcrb
mov
dec
cmpsl
aad
xchg
scas
sbb
cmp
in
sub
mov
fadd
call
and
sahf
adc
imul
sbb
and
jmp
mov
sbb
add
mov
fimull
dec
xchg
adc
clc
add
das
in
mov
adc
sbb
sbb
mov
shrl
sbb
pop
cmp
dec
shrb
mov
jl
arpl
pop
out
mov
inc
xor
add
jno
std
dec
jno
ret
icebp
push
int
add
mov
stc
in
or
fsubl
test
jns
mov
rolb
and
stos
sbb
lods
push
insb
negb
xchg
pop
push
daa
push
add
cmc
in
jb,pt
cmp
jg
and
cmp
mov
jno
dec
mov
stos
mov
adc
cmp
xor
mov
clc
add
repz
stos
push
popa
test
jnp
data16
stos
subb
test
ret
dec
pop
xchg
nop
push
mov
cmp
gs
sbb
je
push
jne
xchg
jmp
cmp
icebp
inc
fwait
es
pop
dec
or
cmp
lret
divb
push
movsl
sbb
int
sub
pop
lods
fdivp
stos
cmp
dec
popf
xchg
fnstsw
or
sbb
insb
xchg
push
jnp
daa
dec
lods
ja
xchg
add
mov
lret
jb
sub
imul
xor
mov
lock
dec
mov
test
cmp
jb
jne
iret
dec
lock
ret
push
fdiv
ljmp
fdiv
pop
xchg
pop
xor
add
aas
mov
roll
imul
dec
sbb
data16
dec
jno
shrl
mov
dec
push
cs
mov
push
xchg
mov
leave
xchg
stos
cli
mov
fwait
in
ret
push
add
pop
dec
dec
fstl
adc
lcall
add
or
mov
loop
and
dec
gs
cmp
push
mov
stc
sub
stos
adc
pop
pop
scas
mov
or
jmp
xor
fisubs
icebp
and
fld
int
mov
inc
mov
inc
jp
jp
pop
cmp
xchg
scas
sbb
lods
jg
aad
inc
mov
rcrl
push
shll
push
fdivrl
insb
clc
pop
lcall
fs
call
cmc
mov
in
jecxz
sbb
and
add
lret
rcrl
pop
rcll
cmp
popa
sti
mov
cmpl
scas
pop
mov
xchg
mov
inc
adc
lds
push
sbb
jmp
movsb
dec
loopne
in
jbe
repz
pop
fisttpll
es
aam
in
dec
lds
and
jbe
inc
sub
filds
add
mov
and
xchg
daa
dec
or
xchg
aas
mov
call
pop
xor
xor
xor
fimull
mov
dec
rcrl
inc
mov
mov
jb
into
jg
out
inc
cld
adcb
inc
lock
arpl
stc
ljmp
pop
lds
sar
xor
rorb
call
sbb
add
xchg
ret
add
scas
fs
push
aas
call
xchg
sub
xchg
rcrl
mov
pusha
sahf
mov
mov
or
jnp
or
xchg
enter
mov
cmc
mov
ret
dec
js
pop
or
sti
or
adc
arpl
fwait
push
or
lcall
and
lret
push
int3
rclb
pop
pop
add
adc
push
test
clc
mov
jb
xor
inc
jo
adc
mov
pop
adc
lods
fcomps
rcl
orl
in
cwtl
adc
das
mov
outsl
xlat
btc
xor
pop
or
loop
mov
push
aad
push
cltd
mov
or
add
cld
adc
pop
or
push
inc
jmp
in
enter
mov
push
jne
mov
lret
std
sub
xchg
cmpsl
nop
push
orl
dec
dec
inc
mov
mov
aam
fsts
adc
mov
push
fwait
jb
jns
fisubl
pushf
rclb
daa
lret
pushf
or
cltd
lods
mov
lret
mov
jl
aaa
lea
add
and
lock
sarl
mov
sbb
sub
mov
repnz
add
cmp
inc
push
push
sub
sub
bound
mov
lahf
xchg
out
rorl
or
pop
push
mov
ss
test
ja
or
into
movl
pop
lcall
int3
incl
mov
push
ficomps
stos
mov
repz
push
jno
xchg
sbb
pop
push
mov
stos
loopne
ja
inc
std
add
dec
pop
repz
loop
fstps
xchg
setae
push
push
insl
add
or
test
pop
into
mov
or
int3
shrl
popf
aam
and
sbb
rol
push
insb
xacquire
pop
test
add
aaa
fcoml
xchg
mov
push
jle
pop
lahf
cmp
cs
inc
shl
sbb
aad
sub
hlt
pop
cmp
loopne
and
arpl
sub
jns
insb
xor
sbb
jmp
cmc
inc
add
mov
ror
push
pushl
cwtl
ret
or
push
mov
roll
mov
mov
jnp
pop
and
enter
mov
push
xchg
sbb
jns
dec
sbb
jg
sub
enter
mov
fwait
cmpsb
jl
fwait
jp
outsl
scas
adc
fcoms
in
add
imul
mov
add
add
imul
cwtl
imul
scas
jb
mov
nop
adc
pushf
jnp
int
and
loope
mov
push
push
cmp
ljmp
cmp
lret
dec
sbb
rcll
mov
call
pop
mov
mov
cwtl
enter
add
in
pop
fldenv
and
mov
xchg
mov
fwait
sbbl
adc
push
jne
ljmp
sbbl
in
xchg
inc
sbb
cli
pop
arpl
dec
adc
ss
loopne
std
insl
aam
and
jmp
and
icebp
cs
add
jb
popf
outsl
fst
rorl
push
or
cmp
add
jns
xlat
adc
inc
rolb
sub
or
pop
insb
push
mov
rcrb
push
outsl
push
or
shlb
in
ds
and
js
ljmp
lret
jg
fs
sbbl
adc
jo
aas
out
dec
push
mov
stc
and
adc
jb
stos
es
push
jnp
subb
inc
sbb
aam
stc
daa
fs
cmp
fistps
or
cltd
es
mov
inc
sbb
movb
jno
cmp
icebp
mov
lcall
ja
call
xlat
push
add
mov
lods
sbb
cmpsl
inc
xchg
or
pop
insl
stos
pushf
stos
cmp
shr
or
dec
mov
push
xor
and
add
repnz
nop
lret
popa
mov
shl
dec
inc
push
je
pop
jne
cld
mov
andl
mov
mov
arpl
sub
mov
mov
out
jb
imul
inc
sbb
nop
es
testb
xor
pop
sarl
aas
fdivrl
shll
sbb
sbb
imul
adc
sub
mov
mov
lcall
xor
pop
call
or
sbb
movsl
ja
insb
cmc
add
pop
jmp
pop
sahf
xlat
ret
mov
xchg
pminub
gs
or
je
test
ja
jge
add
xor
fsubs
mov
pop
repz
dec
outsb
out
cmp
xchg
push
mov
rcrl
rorl
repz
xor
aad
loope
sbb
insb
pop
dec
mov
push
inc
fsts
fnop
rcpps
sti
push
insl
scas
sahf
aad
mov
adc
mov
mov
movsb
rol
push
repz
jnp
or
sahf
sarl
fistps
adc
int3
loope
and
repz
pop
pop
sub
lahf
sub
push
dec
gs
add
xor
imull
push
pop
jge
movsl
mov
mov
adc
mov
push
ljmp
frstor
lret
and
sbb
pop
or
repz
insb
lea
lods
lock
cmp
lret
and
shl
sub
pop
aam
aas
jbe,pt
xor
divl
xorl
popf
ret
enter
mov
xchg
dec
into
jo,pt
scas
mov
adc
xchg
rcrb
shlb
dec
mov
imul
scas
rol
mov
imul
xlat
cltd
cltd
les
inc
clc
xchg
pop
pop
inc
jmp
stos
dec
and
sbb
jl
mov
xchg
insl
inc
fs
icebp
int3
cld
dec
std
fidivrl
lret
jbe
js
repnz
or
xlat
add
lods
cmc
in
and
fwait
ret
movsl
pop
or
movsb
fisttpll
or
rcrl
or
adc
out
stos
add
movsl
xchg
imul
mov
inc
jbe
adc
jno
test
sbb
mov
dec
sub
aas
hlt
pop
test
cmpsb
data16
bnd
pop
adc
xor
loopne
push
jne
in
loope
popa
fsubp
sbb
pop
xchg
jle
mov
mov
inc
push
sub
xchg
push
sbb
out
mov
mov
mov
loop
sbb
pop
jp
xchg
xchg
sbb
mov
dec
lods
pop
lret
lea
sbbl
mov
stos
shrb
shrl
push
lcall
sar
dec
stc
push
cmp
popf
pusha
push
sub
testl
hlt
cs
push
mov
dec
cld
xchg
inc
aaa
gs
cmc
out
pusha
movsl
hlt
repz
loopne
sbb
imul
xchg
cltd
inc
or
or
idivb
arpl
push
inc
lcall
push
jb
push
call
gs
movsl
mov
and
dec
inc
enter
adc
lcall
jo
dec
loopne
test
mov
adc
xor
stc
push
xchg
xor
pop
lock
mov
loop
and
out
xor
inc
mov
pop
fcmovnu
loope
scas
cmp
mov
xchg
adc
sub
das
into
sub
dec
int
fldt
frstor
imul
xchg
das
scas
cmp
push
cltd
repnz
ss
and
jle
pop
lret
mov
cwtl
dec
pop
inc
or
sbb
jno
and
daa
popa
cmc
insl
scas
fdivrl
inc
sub
shll
xchg
push
jne
dec
test
or
inc
lds
dec
lock
xchg
div
sbb
jp
xchg
push
dec
mov
mov
insl
aam
xorb
inc
sbb
in
mov
cmc
repnz
inc
daa
in
sarb
ljmp
push
test
pop
cmp
or
cmpsb
mov
cmp
stos
mov
inc
mov
shrb
repnz
mov
add
divb
mov
lret
jge
movsb
jle
sbbl
xor
jo
std
cmc
dec
icebp
stos
cmc
lret
pop
es
mov
ljmp
adc
loope
xor
cmp
test
pop
sub
mov
mov
rolb
cmp
xor
aaa
loop
into
test
mov
fadd
mov
mov
push
xchg
clc
xchg
into
mov
cmp
sbb
int3
mov
hlt
xor
imul
xlat
rclb
arpl
pop
cld
pop
mov
add
cwtl
loopne
jmp
sub
loope
fwait
add
push
and
mov
adc
pop
jnp
mov
les
mov
sti
add
push
dec
scas
and
cmpsb
or
jnp
jbe
inc
std
imul
or
push
out
sbb
mov
js
sbb
lahf
rcll
repnz
inc
aas
ss
adc
aaa
mov
mov
or
xor
inc
push
loop
xchg
inc
jge
adc
lret
push
mov
jp
das
loop
movsb
and
jecxz
and
je
fcmove
data16
sub
cld
xorl
pop
sub
fs
jae
cmc
loop
mov
popa
pusha
rcrb
or
xor
pusha
mov
and
dec
pop
rcrb
fdiv
mov
lret
inc
lods
push
push
fwait
pusha
dec
mov
mov
inc
add
in
fs
pop
imul
dec
fdiv
jmp
and
add
ret
sbb
clc
sahf
dec
push
xlat
lret
jg
daa
adcl
adc
mov
push
incb
pop
or
sub
lods
imul
ljmp
adc
push
sbb
inc
int3
jecxz,pt
jmp
push
push
cmp
in
dec
dec
gs
ljmp
rcrl
push
shll
jl
stc
rclb
cmpsb
inc
hlt
arpl
shlb
cltd
jne
fildl
fiaddl
lods
js
clc
mov
mov
adc
or
into
dec
mov
push
outsb
push
lds
cmpsl
fsubrp
aam
push
lahf
pop
leave
cmp
jmp
imul
xchg
in
sbb
jns
dec
cmp
inc
lahf
sbb
xor
or
push
mov
pop
rcr
pop
jae
sub
cmp
insb
sub
mov
test
lock
fidivl
aaa
pop
aam
adc
jne
arpl
dec
lds
inc
call
jnp
mov
and
add
aad
loopne
xchg
sbbb
mov
orb
mov
inc
inc
punpckhdq
addr16
and
inc
std
sti
or
das
pushf
popf
lods
push
mov
sub
imul
or
shl
inc
in
hlt
fs
cmp
sti
cmp
cwtl
push
fwait
pop
xor
xchg
or
push
dec
xchg
mov
sbb
sub
xchg
jl
dec
dec
sub
dec
cmp
mov
stc
dec
stc
dec
adc
adc
insl
scas
mov
stos
jbe
xchg
pop
sti
jb
xor
inc
loop
roll
mov
push
ss
fidivrs
jnp
cmp
cmp
je
xchg
push
insb
leave
dec
repnz
push
sbb
jge
movsb
mov
mov
lock
dec
int
fisubl
cmpsb
fs
jbe
xchg
outsl
repnz
cli
cmp
add
jb
add
shrb
test
in
fmull
or
mov
cwtl
fsubrs
subl
es
xchg
jnp
gs
and
insl
mul
stos
stos
xorl
push
roll
jmp
cmp
test
lret
jo
stc
into
pop
or
adc
xchg
fs
fucomi
lock
lret
pop
inc
pop
sbb
jo
mov
ret
cmp
add
sbb
in
ds
cmc
bound
xchg
pop
daa
ror
jle
push
popf
xor
popa
push
shl
dec
mov
sbb
mov
pop
lods
rcrl
cmp
xchg
mov
mov
dec
or
jl
mov
sub
pop
out
insb
mov
mov
sub
out
lret
mov
fdiv
adcl
fnstsw
jg
xor
inc
lock
pop
dec
or
lods
xlat
jle
sub
imul
push
shll
fcoml
std
sub
sbb
and
es
push
clc
push
adc
mov
push
aas
imul
mov
adc
leave
fldl
ret
rcr
fists
mov
jb
loopne
fnstenv
jns
xor
xchg
inc
stos
lahf
andb
les
andb
out
rcrl
jecxz
and
cmp
mov
insb
pop
in
aam
clc
jb
mov
shlb
add
mov
pop
mov
shll
decl
loopne
popa
sub
lea
mov
inc
or
pop
cld
test
movsb
jne
div
call
ret
mov
loop
js
repnz
ficoml
fs
pop
pop
jmp
add
cmpb
mov
fwait
mov
ficoms
xorl
add
outsl
jbe
cs
out
push
movl
cmp
cmp
sub
clc
inc
adc
xor
fistps
mov
mov
nop
lret
enter
or
out
mov
jae
jecxz
in
pusha
xchg
negl
popa
add
shlb
adcb
dec
std
or
pop
jmp
lret
clc
xchg
scas
and
ret
lods
dec
adc
and
jl
out
push
pop
add
loope
shrl
cld
lret
mov
lret
push
or
dec
cmp
cmc
and
scas
repz
cmp
fldenv
sub
fimuls
or
pop
cltd
daa
sub
daa
add
and
scas
pop
movsl
adc
push
sahf
outsl
jp
dec
cmovb
rolb
daa
jnp
pop
cmc
and
mov
pop
inc
incl
inc
aas
mov
test
push
bound
mov
push
inc
pop
push
out
add
je
jnp
jne
movsb
loope
inc
xchg
loopne
inc
js
xchg
jle
daa
jl
jp
cmpsb
leave
inc
iret
add
sbb
adc
leave
sbb
adc
lock
rol
xchg
add
jp
push
sbb
jp
pop
lods
cmpsl
add
sub
add
scas
stos
rclb
xor
popa
cwtl
or
lods
cmp
inc
xor
dec
mov
inc
mov
imul
stc
cs
xchg
mov
shrl
testl
push
xor
leave
clc
das
scas
or
inc
adc
es
cmp
mov
inc
movsl
inc
pop
xchg
std
or
ja
sbb
sub
jg
stos
and
adcl
dec
lcall
cli
je
rorb
cmp
and
and
ja
or
inc
jg
out
int
jae
mov
fstpl
push
sub
jo
xchg
popf
pop
xchg
mov
repz
outsb
dec
and
aaa
mov
jnp
jb,pn
daa
inc
int
and
inc
aad
mov
push
push
and
xchg
sub
idivl
xor
inc
xchg
shll
inc
dec
popf
mov
mov
mov
sbb
adc
mov
push
in
mov
adc
and
xor
mov
ja
add
clc
mov
movsb
push
jge
xchg
mov
ret
cs
int3
pop
cmp
es
int
fnstsw
enter
push
stos
pop
add
jno
out
push
sub
rorb
je
and
fs
xchg
test
push
jns
jle
cmp
les
stos
jg
add
add
lret
leave
sbb
frstor
lock
int3
or
cmp
cltd
inc
jne
nop
push
or
daa
inc
xchg
incl
cmp
inc
fcompl
mull
mov
xor
adc
or
pop
or
scas
mov
jmp
outsb
inc
sarb
inc
outsl
dec
sbb
mov
test
add
xchg
outsl
out
ja
lock
out
arpl
int
shrl
or
popa
dec
out
push
xor
cmp
xchg
mov
leave
ja
inc
mov
daa
in
pop
jg
mov
into
add
adc
pop
sub
jp
jge
mov
ret
rclb
inc
std
sbb
scas
adc
scas
and
jmp
add
mov
cltd
sub
outsw
or
add
roll
imul
xor
loope
or
fistpll
sub
mov
and
push
push
sub
jmp
daa
sti
int3
loope
lahf
lods
enter
adc
push
lods
sbb
movsb
mov
movsb
lods
jo
xchg
inc
push
cmpsl
jbe
insl
subb
cmp
adc
aas
push
int3
add
clc
movsl
enter
adc
sub
mov
mov
and
dec
push
xchg
add
outsb
outsb
push
mov
es
out
add
mov
fs
sbb
outsl
jp
xchg
in
cmpsb
xor
jge
jmp
and
inc
xor
xchg
lret
sub
xchg
out
mov
es
imull
mov
sub
xor
or
pop
scas
or
mov
outsb
cmpsb
or
into
stc
mov
inc
outsb
scas
and
jb
iret
cs
mov
pop
int
cmp
pop
push
dec
aaa
pop
jae
cs
sbb
dec
dec
xchg
inc
and
push
jns
push
inc
daa
and
int3
jg
mov
je
leave
fstl
mov
sbb
jle
rorb
leave
inc
ret
iret
push
lcall
sbb
inc
std
cmpsb
xchg
das
lods
adc
mov
mov
pushf
sub
stos
mov
nop
xor
xlat
sahf
dec
scas
js
flds
pop
nop
je
inc
cmc
ja
dec
jo
cli
mov
jl
fsubl
push
mov
dec
fldt
xlat
xor
cmp
int
imulb
pop
push
repnz
jae
mov
sbb
rcrl
pop
outsl
xchg
test
mov
mov
out
daa
or
aad
cmpsb
pop
rolb
insl
ret
leave
lods
inc
xchg
mov
icebp
push
jb
aam
data16
and
divb
fwait
test
mov
pop
mov
mov
cmp
and
dec
xchg
imull
lock
insl
push
movsl
cmpsl
xor
ljmp
cs
fiadds
inc
jne
std
jne
loope
addl
pusha
std
jg
fnstcw
and
insl
pop
testl
sub
int
mov
ret
mov
and
xor
push
push
xlat
adc
pop
mov
test
xchg
cmpl
ret
jg
ret
mov
ror
sbb
push
or
mov
insb
pop
pop
icebp
sub
mov
shlb
dec
lcall
pop
cmp
in
xchg
xchg
jl
ud2
and
add
stos
std
xor
adc
fstps
flds
mov
jmp
add
mov
and
inc
sbb
cs
mov
cmp
or
pop
clc
loopne
xchg
dec
or
cmp
cmp
call
jp
inc
insb
sbb
outsl
scas
test
jns
add
inc
mov
rcl
incl
and
loope
fst
leave
xor
mov
loop
cwtl
mov
icebp
pusha
adc
aam
pop
out
jo
lahf
dec
inc
jno
sub
lds
cmpsl
jne
sbb
and
inc
imulb
xchg
jg
adc
mov
dec
push
data16
cli
jne
lds
push
pusha
std
fwait
push
aam
sbb
pop
and
das
add
push
out
in
jb
insl
fsubl
test
add
pop
or
call
pop
add
inc
lea
sub
stc
out
mov
mov
rcl
dec
mov
sub
cmp
divl
jno
movsl
clc
shrb
add
bound
mov
mov
mov
adc
ret
popf
dec
adc
stos
stos
push
mov
int3
into
push
pop
xor
shl
hlt
lret
js
sbb
or
jecxz
sub
push
and
mov
or
popa
sub
iret
nop
cmpsl
icebp
pop
push
ja
adc
outsl
sub
movsl
test
jae
imul
pop
sahf
testl
fidivs
and
inc
dec
fdivr
cmpsl
outsb
fwait
cwtl
jnp
and
dec
inc
xor
cmp
push
push
insl
xchg
push
push
xor
add
vpunpckldq
cmc
push
aad
push
jae
inc
mov
leave
pop
or
nop
cmp
dec
shrb
adc
int3
dec
cmp
scas
xchg
mov
lock
ret
fmul
adc
xchg
mov
cltd
xchg
xchg
jp
mov
stos
test
inc
aam
or
dec
sbb
in
jle
mov
cwtl
and
rorb
shlb
jmp
jne
cmp
jnp
pop
mov
add
mov
repz
fiadds
gs
out
jo
je
pop
inc
loopne
sbb
imul
add
inc
xchg
scas
lahf
mov
sti
aas
in
repnz
scas
push
add
out
shrb
out
push
incl
popf
mov
test
or
mov
sub
je
adc
je
mov
roll
mov
repnz
imul
xchg
loopew
loop
ficomps
dec
cmp
mov
jns
test
jnp
cmp
fisttps
daa
push
loopne
clc
out
jbe
xchg
mov
fsts
popa
lahf
pop
dec
aad
test
mov
mov
push
push
int
cmp
je
scas
and
jmp
loop
mov
pop
push
aam
mov
ficoms
cmp
sahf
fadds
mov
mov
pop
push
jg
push
int3
add
and
ja
lock
and
sub
incl
je
jecxz
loopne
popa
push
dec
add
jp
loopne
xchg
jns
xorb
pop
jge
les
test
or
push
add
jecxz
js
repz
add
xchg
inc
test
pop
pusha
call
loop
addb
js
mov
subb
rolb
shr
pop
lret
cmp
icebp
push
push
add
push
js
jae
imul
pop
add
cmp
push
scas
fadds
cmp
inc
inc
ret
pand
ret
cwtl
xor
repnz
loopne
fsts
jae
pop
mov
test
mov
push
inc
aam
jo
push
div
add
test
sarb
rolb
loop
push
push
test
cmpl
mov
mov
pop
push
addl
cmp
test
lock
and
dec
xchg
fisubl
jns
jb
xchg
popa
push
dec
add
jp
loopne
xchg
jns
add
mov
mov
lahf
mov
mov
repnz
or
push
add
push
in
js
repz
add
xchg
inc
test
pop
pusha
call
loop
addb
js
mov
sub
xchg
out
jb
lret
cmp
stc
push
push
add
js
jae
imul
pop
adc
mov
jo
insl
fildl
loop
fadds
cmp
dec
inc
ret
das
pop
loopne
cmp
ja
xchg
cmc
jg
push
bnd
pop
into
gs
test
fstpt
push
inc
push
stos
jo
push
xchg
clts
cmp
jbe
scas
mov
mov
loop
shl
pop
push
aam
mov
ficomps
cmp
fadds
mov
cwtl
add
or
inc
push
in
imul
mov
in
loope
insl
mov
fisubl
and
push
dec
add
test
js
decl
mov
popf
les
test
xor
push
add
push
out
cmpb
in
add
inc
test
inc
arpl
and
pop
mov
ljmp
scas
js
mov
subb
rolb
add
pop
lret
cmp
inc
adc
mov
scas
push
mov
leave
ficomps
adc
xchg
adc
mov
shlb
dec
sub
jecxz
sbb
je
int3
shl
cmpsl
enter
adc
loope
pop
push
jge
xchg
out
scas
fsts
jmp
pop
push
and
test
imul
inc
aam
xor
push
mov
mov
sti
ret
scas
loopne
push
ret
and
push
push
or
sbb
sahf
fistpll
jnp
leave
or
and
dec
in
int
cld
jp
cmp
sbb
inc
in
inc
lea
xor
je
insl
ss
scas
jo
add
loope
outsb
add
inc
aas
mov
fnstsw
mov
test
ss
std
pop
ja
scas
add
cs
adc
cmp
mov
in
out
inc
addr16
mov
fs
jmp
jne
jbe
and
mov
leave
add
xchg
iret
xchg
je
ljmp
gs
and
ljmp
ljmp
pop
imul
cmp
mov
fstpl
xchg
xlat
sub
dec
popf
pop
mov
scas
inc
or
mov
shl
inc
or
cs
aas
inc
lods
xchg
inc
in
scas
xor
xor
adc
imul
mov
stc
sub
ja
push
ret
rorb
int3
fwait
outsl
and
mov
dec
jg
add
outsb
ja
cmp
mov
popa
ja
aam
das
push
jne
inc
ljmp
jp
and
popf
mov
jle
pusha
push
xor
sbb
or
dec
movsb
fisubs
lea
mov
mov
add
add
in
sub
xchg
xchg
mov
mov
fisttpl
out
mov
and
test
scas
push
clc
ljmp
inc
fs
pop
call
sbb
insl
scas
call
std
adc
shlb
push
cs
fs
jbe
cmp
mov
rcrb
cmp
or
pop
idivl
mov
das
mov
jns
filds
jo
fld
inc
mov
je
pop
push
loopne
xor
insb
jbe
loopne
jo
ja
push
inc
test
pop
adcb
test
inc
out
psubb
lds
andl
into
sbb
cmpb
ljmp
outsb
and
aad
xchg
mov
repnz
fsts
and
pushf
out
arpl
test
sub
mov
cltd
jge
or
mov
and
sub
lods
lret
inc
jge
and
xchg
xor
mov
loop
clc
and
out
lret
and
inc
cld
pop
sub
out
mov
mov
fdivr
push
inc
xchg
add
dec
insl
pop
fs
cmp
mov
lods
sbb
mov
mov
sub
faddl
jmp
pusha
cmp
adc
jns
xchg
out
nop
shrl
sti
pop
push
shld
xchg
add
insb
dec
popf
rcl
es
mov
mov
cltd
lcall
test
jmp
in
pop
or
fwait
cld
and
pushf
sub
nop
cmpsl
imul
dec
dec
in
fsubrs
mov
sub
add
mov
cli
mov
inc
or
or
testb
jge
insl
out
cmp
inc
pushf
mov
or
or
adc
stc
sub
add
in
mov
sar
int3
aad
sbb
fcmovnbe
add
push
mov
xchg
inc
cwtl
mov
popa
dec
repz
cmpsb
ffree
mov
xor
push
rcrl
pusha
scas
aas
pop
dec
xor
push
mov
cltd
lock
lea
in
movsl
fcmovb
sub
ficoml
in
sbb
add
mov
aam
fnsave
mov
test
ret
pop
fnstsw
add
scas
fadd
xchg
out
fcomp
add
in
fistps
and
inc
imul
and
outsl
ja
test
pop
hlt
mov
inc
fs
and
repnz
push
push
jge
mov
xor
or
in
xor
pop
in
xor
ret
pop
pop
lea
mov
cmp
addb
push
in
mov
in
sub
jns
cmpsl
dec
popf
daa
add
dec
push
mov
pop
rolb
loope
mov
pop
inc
jge
xchg
pusha
lods
test
dec
pop
xchg
rorb
sbb
lret
test
hlt
jb
sub
or
repnz
arpl
mov
lret
aam
pop
ja,pt
sbb
pushl
subl
int
push
mov
xor
movsb
jno
cltd
adc
xchg
lret
sbb
pushf
inc
xchg
xchg
xchg
clc
xchg
into
cmp
lret
lods
mov
leave
pushf
xchg
les
sub
clc
adc
add
push
mov
inc
xor
mov
insl
xor
data16
iret
jl
add
mov
lret
add
das
dec
xor
pop
mov
cli
and
dec
fldt
and
aam
inc
fsubrp
or
sub
stc
cwtl
out
inc
fwait
or
pop
add
mov
rorl
movsl
popf
jno
fs
mov
punpckhwd
inc
mov
rol
cs
lcall
scas
cmp
mov
push
adc
xchg
cs
fwait
int3
cmp
lcall
mov
lret
xchg
xchg
dec
call
and
hlt
fidivrl
mov
stc
mov
loop
push
lods
push
lods
sub
fmulp
and
pop
cmp
lods
adc
fsub
pop
cs
aam
xor
sbb
insl
mov
push
sub
mov
das
lds
aas
outsl
and
int3
mov
mov
hlt
inc
mov
xchg
jg
and
cmp
lahf
pop
push
cltd
mov
sarl
add
jb
neg
pop
inc
jl
pop
fidivs
subl
push
inc
or
xchg
and
fs
in
pusha
jne
ret
fidivrl
loope
xchg
addl
mov
test
lcall
pusha
mov
imul
icebp
sbb
adc
push
mov
jo
inc
mov
addr16
addl
test
mov
jecxz
mov
adcl
inc
lock
shrl
adc
xor
cltd
cwtl
add
orb
in
sub
mov
jmp
pop
xlat
das
cmp
not
ret
pop
pop
sub
mov
cmp
cmpsl
test
hlt
adc
or
pop
mov
ds
scas
stos
cmp
mov
adc
dec
iret
adc
sub
insb
out
neg
push
jecxz
xchg
jl
in
and
lret
pop
mov
lcall
scas
xchg
pop
in
jmp
setl
cmp
insl
iret
sub
inc
xchg
setae
mov
xor
imul
mov
pushf
adc
les
adc
repz
pop
sahf
pop
xchg
data16
leave
out
js
jl
fwait
inc
sbb
and
daa
test
jmp
adc
inc
pop
in
stos
mov
mov
jg
ss
test
push
ja
push
add
imul
cmp
clc
bound
int
lahf
xchg
scas
or
mov
push
les
mov
dec
cmpsb
sub
inc
outsb
or
fidivl
inc
movsb
lcall
xchg
cmc
lret
repnz
lods
data16
sub
lods
addb
cmp
dec
dec
adc
mov
xor
dec
jno
xor
jne
pop
jne
stos
andb
and
fidivrl
in
inc
lret
clc
xchg
dec
fnstsw
xchg
dec
es
fistpll
js
rcrb
xor
sbb
out
lahf
mov
int
pop
pop
sub
popf
test
shlb
repnz
pop
push
test
xor
incb
pop
jae
mov
popa
mov
lret
cmp
int
jo
cs
inc
sub
xor
test
in
mov
call
ret
mov
mov
xor
fidivl
std
mov
xchg
lret
inc
dec
mov
fwait
aaa
jae
sbb
iret
pop
mov
ljmp
inc
xor
mov
test
xchg
ss
cli
int
xchg
jl
ret
orb
ret
dec
in
jl
out
xchg
push
mov
jecxz
add
pusha
lret
and
cld
lret
mov
jb
jmp
in
inc
dec
in
fwait
dec
std
loop
mov
pop
fwait
push
ja
jge
mov
or
or
adc
and
lods
jnp
scas
lods
push
pop
inc
test
adc
sarl
xchg
sbb
jbe
push
sub
addr16
jecxz
or
pop
and
cmp
pop
mov
sub
aas
xchg
addr16
sub
xor
aad
jbe
jbe
je
and
bound
pop
sahf
iret
jl
dec
and
ja
pop
inc
xchg
inc
cld
lock
daa
cld
rcrb
and
dec
scas
sub
mov
js
mov
or
push
push
lahf
xchg
jb
test
adc
imul
addb
xlat
pop
decl
lcall
dec
stos
int3
rclb
xchg
sub
dec
not
xor
out
dec
in
mov
lock
loop
xchg
jp
mov
cltd
cmpsb
test
xchg
jp
arpl
cmpsl
add
in
add
push
dec
sbb
in
ret
stos
mov
cltd
and
mov
xchg
outsb
mov
ljmp
jno
jl
lret
sbb
cld
popf
inc
or
sub
cmpsl
pop
mov
xor
pop
cli
push
xchg
lahf
push
ds
mov
adc
jo
rcl
pop
inc
shrl
mov
cmp
mov
lret
fs
cmp
and
dec
in
hlt
shrb
movsl
movsl
shrl
mov
dec
mov
add
jl
aam
cmpsl
rcll
push
cmp
lods
lcall
fsts
mov
adc
adc
ficompl
sbb
imul
cld
push
jns
sub
xchg
daa
sub
sub
sub
pusha
jge
js
and
lods
pop
repnz
add
pop
gs
test
mov
pop
std
popa
mov
mov
repnz
push
pop
or
aas
stc
cmpsl
ret
leave
add
movsb
jmp
fsubr
mov
mov
fwait
pop
or
mov
popf
fmuls
shrb
pop
dec
movsb
ja
iret
cmc
mov
hlt
adc
xor
test
pop
cmp
hlt
pusha
push
jecxz
inc
dec
pusha
push
popa
mov
repz
jno
or
push
pop
jae
iret
test
inc
add
mov
mov
loop
into
cmp
fisubrl
sbb
pusha
xchg
sub
or
lea
pop
lret
mov
sbbl
pushf
push
inc
aam
sbb
jb
notb
icebp
xchg
dec
test
js
std
ret
add
xor
mov
jmp
xor
insl
mov
push
roll
pop
sub
inc
cmp
lock
neg
sub
sbbb
xor
inc
or
inc
loopne
test
inc
push
and
jnp
leave
ficomps
or
xchg
dec
nop
ljmp
jge
pushf
mov
fdivs
add
neg
lret
pop
add
pusha
fwait
mov
dec
dec
nop
push
xchg
inc
enter
adc
lcall
inc
hlt
lret
jae
jl
pop
loope
das
lods
inc
shlb
rclb
add
in
inc
stc
arpl
loope
lods
add
fsubrl
pop
hlt
mov
shlb
stos
int3
add
add
jp
inc
jge
enter
daa
dec
test
xchg
adc
outsl
jge
mov
inc
in
mov
stc
cltd
jnp
xor
call
test
js
int3
jns
inc
adc
mov
out
into
shll
test
repz
xor
cmp
std
sti
xchg
les
mov
or
push
inc
in
mov
lret
pop
add
inc
lds
fists
mov
push
dec
dec
sarl
jo
mov
pushf
jns
imul
decl
push
out
pusha
cmp
or
jl
xchg
icebp
mov
pop
bnd
sub
sbb
sub
add
adc
out
out
xor
gs
dec
xchg
add
sub
pop
jns
push
sub
inc
movsl
xchg
pop
push
ror
fld
or
mov
pop
jbe
cmp
push
sbb
flds
cs
push
and
mov
mov
fst
gs
or
int3
sub
lret
mov
xor
mov
jbe
dec
adc
scas
or
es
daa
mov
sub
add
xor
xchg
mov
rcll
jb
jl
out
orl
add
sub
test
cmc
dec
xor
outsl
fisubs
fsts
repz
dec
and
mov
icebp
sbb
cmp
adc
enter
sub
test
add
pop
cmp
loope
ljmp
fiaddl
pop
cmp
dec
push
xchg
push
fwait
js
pop
add
aaa
mov
sbb
call
mov
into
adc
pop
hlt
jp
push
push
test
sbb
leave
mov
inc
dec
test
arpl
mov
dec
or
data16
scas
dec
insb
cmp
add
ret
das
push
and
push
jne
inc
shrb
scas
gs
pop
inc
jae
jle
insl
xchg
push
lock
pop
push
lret
hlt
cmp
mov
aas
fiadds
dec
enter
mov
loopne
out
sbb
dec
movsl
jl
mov
adc
mov
sbb
dec
inc
test
mov
push
lds
jns
fs
jnp
xchg
inc
lods
incl
cmpsl
inc
push
call
loop
mov
bound
sbbb
pop
push
test
cmp
and
add
je
add
imul
fisubrl
fdivrl
xchg
pushf
push
mov
and
inc
dec
or
mov
loope
insl
into
push
ret
aas
inc
shl
inc
in
xlat
jp
xor
pushf
fsts
pop
mov
test
lods
sbb
pushl
sub
and
sbbb
mov
std
ss
popa
roll
imul
inc
ss
test
mull
insb
lahf
gs
pop
cmp
adc
jp
sti
fwait
mov
add
repz
mov
aad
pop
mov
jnp
sti
repz
fsubrs
jnp
and
pop
and
test
and
xor
sarl
sti
pop
jb
sbb
xor
movsl
sbbb
pop
mov
roll
or
fsubs
or
cmp
sub
pop
cmpsl
addr16
je
leave
cmp
sbb
mov
jb
int
imul
mov
cwtl
pusha
dec
lret
add
jmp
cmp
push
jne
in
lock
cmp
cltd
mov
nop
daa
ret
into
leave
stc
pop
ljmp
loop
jl
push
mov
mov
test
pop
dec
popf
xchg
nop
scas
cli
or
adc
push
xor
fs
mov
ficompl
les
mov
or
iret
mov
addr16
xchg
xchg
je
aad
ljmp
mov
push
int3
push
insl
rcl
imul
lcall
cmp
fsubs
mov
sbb
pop
and
push
int3
jmp
insl
pop
push
adc
cwtl
mov
mov
aad
aad
sbb
insb
mov
cmpl
sub
sahf
push
and
hlt
sbb
in
dec
sbb
test
mov
ljmp
push
xchg
out
imul
sub
fldl
repz
mov
mov
inc
sub
pop
add
sub
cmc
mov
mov
and
cmp
xchg
pop
pop
xchg
ljmp
gs
lret
stc
into
lret
mov
dec
sub
mov
mov
xor
or
cli
mov
ret
mov
vpdpwssd
nop
xlat
jbe,pt
clc
mov
xchg
addr16
sar
inc
test
sahf
inc
or
mov
mov
insb
push
jns
daa
sarl
out
or
mov
rcll
cltd
rorb
inc
pop
push
jle
pop
mov
adc
imul
sbb
mov
lahf
les
push
outsb
xchg
cltd
mov
push
fcmovne
xchg
fistl
or
lahf
aam
outsb
js
in
aaa
or
xchg
arpl
and
nop
dec
cmc
aam
mov
adc
popa
js
rorb
sti
mov
sbb
adc
cmp
movsl
cmp
movsl
inc
fcom
jo
pop
add
jp
adc
outsl
jmp
pop
cmp
inc
and
xorl
ljmp
and
pushw
add
cmp
enter
mov
ljmp
outsl
jle
xor
mov
pop
lds
subl
mov
lret
sti
pop
push
aad
xor
jle
addr16
sbb
mov
nop
ret
inc
pop
lret
or
cmp
adc
stos
out
rcll
jecxz
pusha
int3
fnstcw
stc
mov
adc
int3
cld
icebp
mov
leave
rolb
dec
int
into
ds
out
mov
jns
loope
punpcklbw
fidivl
test
adc
mov
cmpsb
xor
mov
enter
add
ret
sbb
jecxz
and
outsl
xlat
xchg
js
mov
inc
mov
xchg
sub
bound
into
mov
mov
scas
js
fwait
ret
addb
lock
enter
push
pop
pop
cli
cli
lcall
mov
or
mov
cmp
mov
clc
roll
cwtl
and
es
addr16
adc
lods
popl
mov
shrl
cmp
imul
jo
aas
adc
lds
mov
and
push
and
rcr
lret
xor
popf
dec
fidivs
dec
cmc
sti
pop
outsl
and
addr16
adc
inc
cmp
lods
lock
divl
and
adc
mov
inc
add
jle
jbe
shrl
int
inc
lahf
cmp
inc
test
xchg
shl
idivl
dec
add
adcl
leave
subl
mov
mov
or
mov
jle
cmpsl
js
sub
mov
jmp
test
xor
fsubp
cwtl
mov
mov
inc
and
loop
inc
mov
imul
xchg
loope
scas
aas
fisttpll
cmp
xor
mov
push
mov
les
stc
hlt
adc
xchg
in
push
ds
gs
or
add
pop
adc
enter
add
rcrl
sub
shll
dec
aas
movsl
scas
adc
std
dec
loope
xor
stos
pop
mov
and
je
jp
jo
xchg
test
aam
dec
inc
gs
or
cwtl
cmp
loopne
jnp
jne
test
ret
or
test
ret
icebp
outsl
jge
dec
lds
cmp
add
clc
adcl
outsb
xchg
out
fldcw
pop
aad
fsubrl
xchg
fisttpl
sbb
sub
and
add
mov
mov
loope
fcmovbe
shlb
cli
jns
and
subb
clc
sbb
into
aas
in
fdivrs
cmc
xor
imul
clc
add
popa
and
repz
jmp
mov
jnp
mov
sbb
iret
add
shrl
popa
pop
pop
mov
outsl
mov
mov
jns
xor
xchg
xor
pusha
divb
inc
jne
inc
or
push
mov
dec
repnz
mov
jmp
pushf
cli
popf
xchg
sub
mov
lock
mov
cmpsl
fdivr
sbb
jno
dec
cmp
jmp
mov
jmp
jo
jno
xchg
mov
sbb
fdivp
cmp
push
adc
mov
add
mov
test
popf
xor
scas
sahf
and
js
adc
lock
xchg
popf
sub
out
jmp
inc
dec
int
xchg
inc
add
or
xchg
repz
push
imul
adc
enter
mov
stos
aaa
pop
inc
test
mov
mov
stc
and
clc
addl
cmp
lea
fisttps
mov
es
roll
xchg
mov
negl
andl
mov
xlat
nop
dec
mov
mov
lahf
out
or
fcmovu
xchg
sub
dec
in
mov
aaa
sub
clc
push
imul
nop
mov
ret
int3
and
orb
mov
lods
lds
pop
sbb
jmp
mov
and
dec
adc
adc
in
mov
scas
push
dec
inc
fwait
pusha
dec
test
sahf
or
inc
jns
hlt
loope
jp
push
out
and
cwtl
test
adc
dec
xchg
adc
mov
or
test
lds
gs
mov
dec
pop
data16
dec
ret
fdivrs
je
xor
mov
stos
inc
in
cld
mov
enter
aad
pop
xlat
rcrb
jp
lcall
push
xchg
pop
stos
arpl
insb
and
xor
insl
subl
enter
mov
jb
cmp
or
cltd
mov
xchg
jae
stc
mov
sub
push
push
cmp
dec
xor
loop
pop
push
in
xchg
ljmp
add
pop
lods
out
bound
xor
push
inc
mov
inc
pop
push
inc
aad
mov
dec
cmp
aas
mov
dec
cmp
sub
jbe
sbb
jbe
mov
mov
aas
inc
int3
xor
icebp
popf
push
cmpsl
dec
xor
mov
jbe
loop
test
ss
fcoml
loope
push
sbb
out
mov
add
xchg
xor
pop
sbb
es
mov
push
push
test
popf
push
mov
dec
int3
mov
inc
sarl
ja
mov
lret
xorb
aam
dec
adc
int
lods
cmp
mov
nop
jbe
cmovg
cmc
dec
push
cmp
pop
inc
mov
je
inc
test
popa
jp
insl
popa
xchg
mov
cmpb
cmp
push
inc
dec
adcb
inc
dec
ds
fsubs
xchg
ja
sbb
and
mov
and
ljmp
scas
cwtl
pop
loop
iret
test
mov
adc
das
loopne
rcrb
inc
sub
cmp
lcall
repnz
rorb
push
jbe
inc
add
add
addr16
pop
bound
daa
push
cmp
inc
popf
xor
daa
arpl
sti
mov
jns
push
or
fs
xlat
test
in
xchg
in
aaa
pop
mul
xchg
mov
dec
sbb
fwait
xchg
mov
cmp
mov
gs
pop
cmpsl
movsl
inc
cmp
jb
clc
cmp
ljmp
adcl
mov
xchg
mov
cmc
ds
divl
pop
in
inc
das
dec
aas
mov
xor
push
jb
jbe
pop
mov
fsubl
push
mov
pusha
mov
add
into
out
incl
adc
rcr
vpsrlq
push
mov
fcmovbe
xchg
xor
cmpsl
insl
loop
aad
pop
mov
fistpll
mov
loope
outsb
add
mov
test
mov
or
and
and
cmp
int
cmp
and
sub
dec
jno
inc
xor
data16
mov
sahf
xchg
cld
mov
or
repnz
aaa
mov
dec
loopne
hlt
jbe
iret
loope
es
dec
in
mov
xchg
mov
mov
or
sbb
pushf
sbb
ficoms
jno
test
rorl
call
and
stc
jb
popf
outsl
mov
jne
push
inc
idivl
loop
jmp
fidivs
and
push
adc
inc
or
shl
ja
inc
inc
mov
and
fdivr
insl
sub
outsl
roll
popa
cmpsl
rcrl
outsl
jl
shl
ja
dec
scas
dec
divl
cwtl
jb
xor
inc
push
xlat
push
cltd
in
sbb
aam
xchg
pop
in
lahf
ds
sbb
or
int3
jle
cmp
jecxz
xor
mov
lock
pop
fnstcw
cmpsl
or
add
or
in
leave
mov
jmp
leave
push
jg
pop
xchg
imul
out
mov
test
lods
sbb
mov
das
shl
std
push
cli
clc
scas
into
cld
inc
inc
addr16
mov
xlat
and
stc
pop
arpl
cmc
pop
push
dec
imul
decb
push
aad
xchg
inc
sub
sbb
xchg
fwait
mov
popa
and
les
dec
inc
xchg
jg
cmpsb
movsb
push
int
rcl
push
xor
mov
xor
fildll
cmpsl
sbb
sub
into
fcomps
mov
les
in
xchg
add
mov
pushf
ds
jmp
into
jo
lods
mov
scas
or
or
inc
push
fmull
cmp
add
cmp
lods
push
into
mov
mov
sbb
mov
lods
sub
mov
mov
mov
dec
pop
dec
lea
and
arpl
sbb
sbb
imul
rorl
gs
js
mov
arpl
and
shlb
adc
jmp
aam
or
mov
imul
ss
mov
scas
cld
dec
aad
stos
lods
push
icebp
xlat
fwait
aaa
shlb
mov
outsb
mov
dec
bound
sub
sub
enter
stos
pop
mov
adc
lcall
das
sub
fstps
xchg
test
pop
je
inc
outsl
mov
scas
xchg
hlt
mov
popa
nop
mov
in
insb
das
cmp
roll
cmp
loope
sbb
stos
sti
sbb
je
xorb
mov
dec
pushf
notl
push
dec
pop
mov
ror
hlt
bound
cwtl
push
repz
fimull
mov
popf
cli
or
popf
lods
xor
inc
pop
cmpsl
into
aam
jbe
cwtl
int3
ds
int
mov
pop
push
popa
inc
cmpsb
dec
pop
jmp
mov
adc
push
xlat
js
mov
into
inc
or
test
jae
outsl
push
fadds
mov
dec
push
jae
repnz
addr16
fcomi
push
clc
jmp
stos
shl
daa
outsb
pop
or
sub
jnp
push
rolb
repz
jne
push
in
jne
or
scas
addl
sbb
push
pushf
stos
push
sbb
stc
push
test
mov
cmp
xor
lock
sbb
iret
xchg
das
jle
cmp
or
adc
imul
ja
mov
adc
cwtl
jne
jno
mov
aas
jb
add
popa
push
icebp
imul
sahf
movb
lahf
aad
jno
mulb
sub
inc
jecxz
inc
ljmp
xchg
cmpsl
jg
mov
inc
and
lds
add
les
pop
loope
mov
push
mov
fdivrs
dec
mov
dec
sub
iret
icebp
out
dec
dec
pop
leave
mov
xchg
imul
loopne
xchg
xchg
mov
js
and
add
es
cmpsb
into
jb
lea
mov
mov
mov
dec
push
cmpsl
pop
xor
fstps
add
imul
sbb
rsm
add
mov
test
imul
adc
lock
pop
pop
sti
gs
cmp
lcall
js
adc
andb
gs
jo
ret
shl
mov
add
pop
loopne
addr16
adc
push
xchg
and
sbb
or
nop
or
pusha
insb
aas
push
fbld
jg
js
mov
or
inc
pop
test
xor
push
mov
loope
mov
push
fldenv
cmp
arpl
pushf
jle
push
mov
mov
jnp
lea
sub
sahf
shrl
ret
aad
lods
push
outsb
push
xchg
adc
loopne
mov
jns
js
icebp
fiaddl
es
adc
gs
sub
adc
inc
jecxz
cmpsb
loope
cltd
add
adc
push
out
jbe
sti
fbstp
mov
lods
ret
dec
add
mov
divb
leave
pop
cs
xchg
mov
repnz
add
push
jl
pop
xor
inc
xchg
sbb
out
fadd
sbb
dec
int3
insb
rclb
xchg
shlb
icebp
stos
les
mov
jno
int
js
xor
add
xor
scas
and
loope
xchg
fistl
shl
inc
lods
into
or
xor
lahf
jo
push
cmp
push
outsb
jae
adc
lret
cli
gs
push
sub
mov
rcl
xchg
stos
inc
cmp
pushf
jne
mov
inc
cmpsb
add
sti
fisttps
mov
in
dec
fildl
xor
jecxz
dec
add
mov
fldcw
ret
sbb
cmp
lret
or
mov
aam
pop
orl
mov
mov
gs
subl
cmpl
call
mov
dec
rcrl
mov
sahf
jb
stc
cmp
mov
aam
lods
fucomi
ret
gs
push
push
sub
cs
in
rolb
movsb
scas
scas
adc
out
xchg
dec
sub
pusha
nop
jmp
mov
lds
cmp
mov
lret
pop
cmp
mov
mov
and
push
push
outsl
call
mov
mov
mov
sub
inc
jmp
sbb
dec
xor
mov
sbb
xor
fnsave
out
subl
pop
int
and
sbb
movlps
mov
loop
sbb
or
movsb
and
dec
jb
dec
xchg
pop
movsb
adc
dec
cmpsl
pop
outsl
jp
roll
std
pop
pop
rclb
outsb
data16
inc
cli
mov
lea
call
jecxz
sub
loop
jg
dec
mov
mov
adc
jg
push
push
cmp
mov
aad
adc
pushf
dec
stos
mov
inc
xchg
jae
inc
cmp
and
lods
repz
sub
mov
insl
ret
dec
orl
mov
fs
inc
add
in
icebp
lods
mov
mov
stos
bound
sbb
jb
xchg
push
mov
fwait
or
inc
mov
adc
add
sub
sti
cmp
jge
mov
cmp
xchg
fdivrl
mov
outsb
rorl
push
lret
sub
sbb
sub
stc
pushf
jns
adc
mov
hlt
pop
or
jmp
mov
inc
imul
add
loop
and
push
aad
cltd
add
sub
and
or
popf
adc
mov
imul
xchg
push
dec
mov
repz
mov
pop
int3
add
test
ja
movsb
fwait
add
imul
int3
int3
xor
mov
inc
cmc
jg
popf
nop
pusha
mov
mov
dec
sahf
jnp
mov
pop
mov
jo
clc
js
mov
cmp
add
sti
shl
movsb
push
cmpl
dec
xchg
mov
roll
dec
js
jle
xchg
adc
insb
loop
xor
or
movsl
pop
adcb
icebp
push
rcll
out
test
adc
je
adc
inc
push
mov
sbb
call
cld
xor
aam
je
and
in
sbb
sbb
push
or
ficoml
pop
jno
outsl
push
push
jno
mov
lods
xor
ja
imul
mov
pop
cmp
rorl
fsubs
imul
inc
sti
fistpl
addr16
jle
add
orb
test
mov
jnp
jecxz
sbb
jns
out
orl
adc
roll
ljmp
add
pop
pop
inc
lods
mov
jbe
jecxz
sti
mov
ficoml
xchg
push
pusha
out
ret
out
sarb
popf
push
cmp
mov
or
mov
sub
inc
adc
hlt
out
jb
imul
xchg
dec
js
mov
dec
repnz
aaa
les
cmc
out
div
mov
mov
bound
mov
sarb
push
mov
add
jmp
imull
imul
xchg
mov
cmp
movsl
jo
adc
fs
push
mov
or
mov
jecxz
sub
fcmovb
cs
movsl
fdivs
icebp
push
add
inc
sbb
and
sahf
ja
aaa
xor
pop
int3
aaa
xor
in
pop
mov
push
sub
decl
dec
or
das
mov
jmp
adc
into
xorb
pop
jge
xor
addb
mov
add
lea
arpl
mov
pop
addr16
das
add
jno
jge
pop
dec
mov
xchg
rclb
push
jl
adc
test
scas
imul
dec
pop
iret
and
lret
repnz
aam
sub
and
mov
fwait
or
add
xchg
ret
addr16
mov
jnp
mov
lods
mov
test
adc
pushf
loopne
mov
nop
and
int3
js
inc
mov
fstps
sti
nop
inc
in
cld
div
pop
cmpsl
add
stos
es
dec
sbb
adc
mov
jmp
pop
cwtl
in
sub
jne
into
pop
insl
inc
jmp
adc
das
cmp
cmp
inc
ljmp
repz
shll
jmp
lret
sbb
pusha
ljmp
jecxz
mov
add
cwtl
jp
mov
cmpsl
test
dec
addl
iret
in
add
inc
mov
in
jne
push
icebp
jb
pop
bound
ret
inc
mov
andl
out
inc
jns
test
das
test
mov
ror
add
dec
pushf
adcb
fndisi(8087
test
icebp
das
pop
xchg
into
repz
jg
fs
mov
mov
xor
mov
or
sbb
hlt
ret
call
fs
in
add
das
pop
in
movsl
dec
and
mov
sub
and
xlat
int
mov
inc
push
lods
cld
mov
mov
mov
cli
pop
xchg
xchg
sbb
imul
or
inc
jnp
cwtl
addr16
pop
xchg
js
add
inc
aad
mov
out
lret
push
and
push
aad
push
repz
mov
sti
testb
popf
shlb
dec
int
sbb
cmp
fwait
mov
stc
dec
mov
push
mov
repz
adc
icebp
sub
sub
xchg
push
cmpsb
mov
inc
dec
ja
dec
fimuls
clc
cmp
jns
sbb
dec
lods
dec
outsl
lds
ret
out
adc
cmp
mov
jge
dec
mov
aam
jb
adc
imull
roll
in
outsl
inc
out
ds
cmpsb
mov
lret
jae
stos
sub
test
rorb
hlt
fmulp
or
imul
insb
and
pushf
fdivs
sub
inc
xchg
addr16
cltd
gs
addr16
jb
jle
xchg
addb
lret
repz
fsubl
pop
pop
push
fwait
dec
jns
cmp
stc
dec
xchg
inc
or
lock
xchg
push
movsl
jnp
in
ljmp
sbb
fisubrs
jecxz
fistps
fidivl
mov
nop
in
pop
push
pusha
mov
jae
pop
dec
insl
jg
mov
inc
js
dec
inc
mov
dec
mov
inc
out
jb
xlat
mov
push
push
xlat
dec
js
mov
pop
mov
ss
mov
shlb
fstpt
lcall
ret
rorb
mov
push
pop
or
jl
and
push
xlat
loop
jg
shrb
add
pop
xchg
fisubs
push
cmp
pop
cld
movsl
jo
test
addb
test
xor
ret
xor
pop
jecxz
mov
mov
imul
push
mov
stc
ljmp
nop
inc
sbb
idiv
mov
addl
mov
mov
cmp
sti
inc
in
push
into
outsl
push
sti
in
test
out
aam
stc
in
pop
or
sbb
sahf
in
test
ror
mov
or
sbb
add
pop
dec
in
lds
dec
arpl
inc
inc
push
ljmp
or
scas
leave
emms
push
or
sub
dec
fucomip
sti
cltd
xchg
jmp
lahf
clc
and
popa
decl
icebp
and
pop
out
jmp
cmc
das
das
xor
pop
jne
cli
adc
test
subb
inc
push
es
mov
mov
adc
sbb
mov
ret
or
inc
xchg
in
mov
subb
jb
and
xor
cmc
insb
inc
shlb
mov
add
movsl
cmp
push
sub
and
xor
xchg
ljmp
xor
push
icebp
pop
pop
mov
aas
stos
add
xor
inc
ja
fidivrs
lret
loopne
mov
int
inc
xor
or
rclb
dec
xchg
sub
fs
leave
gs
out
cwtl
mov
popf
inc
cmpsb
sub
mov
mov
int3
rcrb
jne
mov
rolb
shlb
inc
xor
icebp
andb
outsb
xor
xor
mulb
shll
pop
push
inc
or
cmp
int
insl
lods
rcrb
mov
sbb
sub
jmp
repz
pop
mov
repnz
arpl
lods
push
and
les
jmp
mov
inc
push
es
aad
stos
push
gs
xchg
negb
sbb
push
xor
sub
shll
fs
xchg
push
into
dec
pushl
iret
cmp
dec
je
cwtl
lea
push
les
cwtl
and
push
jg
xor
mov
das
dec
mov
xchg
movsb
inc
cltd
adc
scas
fisubrs
aas
shlb
and
sub
cmc
cmpsl
stc
sbb
scas
push
or
pop
push
out
push
shl
pop
add
mov
dec
mov
cmp
jns
aam
nop
pop
gs
add
sub
iret
sahf
das
ret
insl
dec
mov
fnsetpm(287
inc
and
mov
cli
dec
dec
rclb
xchg
and
mov
call
and
mov
loop
mov
jge
sbb
or
sbb
push
pop
dec
mov
lret
lock
movsb
mov
and
cs
xchg
inc
sbb
xchg
cmp
mov
addb
push
hlt
cmp
add
sub
sbb
pop
or
popf
cld
pop
rorl
repnz
adc
out
fidivl
sbb
sbb
mov
dec
mov
outsb
sbb
shlb
add
dec
in
std
lcall
pop
cmp
bound
dec
xor
xor
cltd
xor
sahf
mov
call
xor
and
pop
inc
sbb
push
jo
scas
lcall
test
stos
cmp
sub
aad
out
jb
jecxz
cltd
inc
jge
imul
sbb
sub
sub
jg
in
imul
bound
clc
and
xchg
mov
fldcw
shrb
mov
ret
mov
xchg
mov
xor
outsl
out
ljmp
imul
jnp
loopne
lods
inc
test
inc
cmp
inc
in
imul
jmp
lret
rcl
out
mulb
or
add
ret
xor
sbb
lcall
loope
fs
mov
push
mov
mov
ja
out
jo
jns
lret
in
je
dec
lret
mov
add
fwait
push
cwtl
fwait
push
and
scas
jo
in
lds
cmp
mov
push
repz
cmc
cld
xchg
cmovp
sub
push
pop
cmpsb
std
out
stc
rorb
repz
sub
nop
les
arpl
dec
xor
and
pop
adc
jg
fcomps
pop
add
dec
push
mov
add
xchg
iret
xchg
ss
aaa
mov
push
ss
pop
add
fucomi
fwait
insb
push
or
testb
jns
aad
push
ja
adc
dec
aam
outsb
dec
int3
in
icebp
pushf
push
addr16
inc
mov
or
push
pushf
lds
mov
lods
inc
mov
cli
add
pop
xchg
leave
push
leave
scas
add
call
shlb
pop
adc
or
and
fmuls
sub
push
insb
sub
movsb
adc
or
shlb
xchg
out
call
mov
fildl
push
sub
and
dec
add
pop
mov
mov
xor
test
push
fs
xchg
test
pusha
inc
mov
iret
stc
push
pusha
fidivl
and
lahf
sub
ret
xlat
lahf
cmc
popf
and
testb
dec
mov
inc
cmc
cmp
inc
sub
cmc
inc
xorl
cmpsl
mov
loope
aaa
rorb
add
push
jge
not
test
or
pop
mov
mov
lahf
ror
rorb
adc
or
sbb
es
xor
nop
jns
adcl
fcomip
jb
or
mov
pop
sub
mov
cmp
stos
sti
pop
xor
out
push
stos
aad
push
dec
sbb
mov
push
test
mov
aas
in
aam
inc
aas
stc
pop
dec
cwtl
imul
sbb
mov
xor
lods
inc
icebp
arpl
adc
pushl
push
inc
loope
sti
inc
pop
mov
sub
nop
sub
jl
adc
ja
jp
popf
loopne
repz
js
test
test
ss
rclb
sub
jmp
xlat
mov
cld
dec
cmpsb
das
std
sarb
mov
icebp
add
stos
insb
bswap
aad
dec
movsb
je
jg
fnsave
dec
push
or
sub
mov
ds
push
fidivs
jno
fwait
inc
pop
out
xor
add
inc
iret
mov
push
jg
mov
loope
sub
adc
xchg
in
jmp
icebp
icebp
fdivp
pop
lret
mov
sbb
inc
add
iret
push
cmp
cmp
xor
sarb
ljmp
add
mov
adc
insl
xor
outsb
inc
pusha
pushl
loop
sbb
sub
stos
aaa
scas
or
sbb
sbb
add
shrl
pop
js
jbe
or
sub
adc
fcompl
arpl
ja
jmp
mov
lods
lret
shrl
and
dec
rorl
cmpsl
cmp
fsub
subb
add
popf
or
sarb
rcll
std
rcrl
add
dec
cltd
cmpsl
sbb
subb
cmp
pop
jne
ds
xchg
xor
out
fidivrl
inc
push
mov
inc
cmpsl
sarb
out
cmp
clc
nop
popa
rolb
dec
sub
adc
pop
loop
cmp
mov
mov
and
mov
arpl
adc
adc
cs
dec
xchg
and
jmp
xchg
mov
pop
cmc
shrb
in
xor
popf
adc
mov
xchg
inc
inc
jb
dec
jl
jae
shr
push
and
xchg
lcall
clc
jl
xchg
mov
dec
xor
cs
inc
adc
xchg
or
lods
lcall
addl
push
push
shll
gs
lods
shlb
cltd
movsb
mov
add
aaa
neg
stos
xor
dec
and
or
xchg
or
lahf
cmpsb
out
jns
stos
ss
adc
push
xchg
cltd
int3
cld
push
adc
sub
out
ret
jb
cmp
dec
lret
inc
add
rol
inc
stos
out
xor
mov
pop
ja
xchg
out
add
fsubs
cmp
cmp
add
les
sub
mov
pop
xchg
cmp
xor
imul
shrb
inc
int
inc
fs
pop
or
or
sub
mov
pop
aad
aam
xorl
xchg
fwait
arpl
rcr
jl
ret
jg
sbb
fcompl
jg
xchg
mov
adc
cmpsl
xchg
pop
mov
push
scas
and
ficomps
dec
pop
imul
push
cld
repnz
lds
mov
bound
popa
mov
pop
mov
pop
ds
addr16
push
add
and
cli
mov
mov
sbb
test
and
jo
mov
sub
fsin
mov
aas
mov
jg
fidivs
bound
nop
nopl
ja
repnz
lahf
rorl
lret
adc
repz
cmpsb
gs
inc
cmpsl
test
pop
push
dec
bound
jl
pop
nop
enter
sub
mov
call
and
hlt
xchg
adc
movsb
clc
dec
daa
icebp
jmp
bound
jns
or
out
fwait
jbe
je
fisttpl
repz
mov
fs
mov
ret
add
mov
dec
aaa
xor
insl
cmpsl
fmull
and
lahf
out
ljmp
sarb
sub
push
ds
mov
mov
fwait
lahf
iret
daa
into
push
push
rorb
imul
int
cltd
enter
imul
fstpl
insl
stos
inc
xorb
sbb
lods
lea
cld
imul
ja
fidivl
and
cmpsb
fistps
inc
push
add
dec
sub
pop
enter
imul
sub
mov
test
leave
loopne
lcall
push
andb
mov
mov
push
xchg
insl
add
mov
mov
xchg
add
dec
pop
push
hlt
add
xor
jno
dec
inc
mov
mov
dec
adc
mov
lahf
aad
sti
mov
cmp
cmp
sbb
int3
loop
cmpsb
les
test
or
repz
jnp
popf
push
loope
cmpsl
fs
lds
outsl
jo
out
cmp
popf
mov
push
pop
xchg
jg
rcl
stos
stc
popf
pushf
dec
jno
mov
jmp
ret
arpl
in
shll
pushf
jg
loop
iret
pop
xlat
sub
jmp
dec
dec
cmc
sarl
mov
or
and
and
mov
call
decl
jns
ss
ja
ffreep
xchg
push
mov
pop
aaa
filds
jb
pop
lcall
mov
stos
dec
into
mov
and
lret
cmp
adc
scas
xchg
jo
bound
je
xor
dec
in
aas
aad
in
mov
js
iret
lods
or
lea
jae
sti
shlb
cmp
scas
inc
stos
clc
cltd
push
js
sahf
decl
mov
leave
addl
lea
jmp
jns
xchg
push
add
mov
mov
imul
movsb
faddl
sbb
das
jo
fwait
xchg
mov
xchg
ret
mov
stos
test
sbb
cmp
movsb
or
sbb
mov
xchg
imul
push
aam
mov
pop
pop
pop
sbbb
dec
mov
cmp
insb
or
xor
mulb
fbld
or
dec
inc
iret
sub
clc
pop
push
testb
data16
lods
mov
xor
iret
adc
push
pop
pop
sbb
sub
repnz
cwtl
nop
jns
insb
test
add
xchg
nop
and
sbb
push
ja
add
push
divb
popa
adc
decl
sbb
add
inc
push
add
lret
fidivs
jmp
mov
ss
xor
leave
fdivp
or
std
popl
aaa
ds
sbb
jno
sub
call
jmp
mov
lcall
mov
mov
xor
subb
adc
sahf
and
iret
dec
loope
arpl
repnz
mov
sbbb
pop
mov
dec
cmpsb
test
loope
leave
je
mov
mov
vpshad
enter
pop
pop
mov
or
mov
push
movsb
xor
test
fmul
add
std
xchg
adc
dec
sub
xchg
out
sub
jp
xlat
xchg
testl
movsb
mov
sti
add
sub
lods
pop
adc
pop
jmp
push
ljmp
sub
dec
ret
mov
xchg
sahf
daa
xorl
or
add
ljmp
sub
xor
leave
inc
push
sub
subb
and
jmp
fwait
push
int3
cmpsb
and
es
movl
cmp
xor
popf
add
cmp
lahf
cs
jnp
inc
pop
adc
jg
insl
lds
dec
fidivrl
test
mov
pop
mov
jno
hlt
rol
xor
scas
sbb
ss
xlat
and
push
mov
aam
xor
add
xor
fld
ss
cmp
mov
sbb
jp
mov
or
test
and
mov
ljmp
lahf
sub
or
jle
mov
push
inc
mov
push
fistl
xchg
jge
mov
insb
sub
lods
insl
jae
xor
pop
pusha
xchg
jmp
es
movsl
loop
pop
je
ja
pop
clc
cmp
les
jno
push
and
jns
cmpl
outsl
xchg
int
out
arpl
jno
lods
repnz
mov
movsb
adc
push
sbb
pop
mov
adc
sub
jp
cmp
lcall
jns
push
mov
jns
push
mov
std
cmpsl
test
rcll
cmp
push
inc
and
add
incl
ret
cmp
aad
sbb
sbbb
xchg
mov
add
lret
sarb
sbb
inc
std
call
sti
inc
cmp
in
add
pop
fcoms
and
cmc
add
add
mov
mov
inc
xchg
dec
lods
xchg
in
xchg
and
push
stos
and
int3
lods
mov
psraw
pop
dec
pop
pop
cmc
sub
ret
movsb
data16
fdivrp
push
pop
pop
xor
fstp
sub
mov
dec
sar
test
addl
dec
les
push
xchg
ja
mov
jne
arpl
push
pop
je
sbb
or
sbb
or
lret
enter
push
mov
cwtl
jl
xor
pop
mov
iret
lods
imul
cmpb
sub
es
mov
xorl
fwait
jecxz
dec
in
loope
lret
test
push
pop
aam
ja
or
leave
sbb
mov
mov
inc
std
movsl
cmc
jl
shrl
xchg
jg
das
push
test
add
movsb
adc
idivl
sarb
scas
adc
sub
dec
xchg
incb
cmp
orl
or
call
inc
lods
and
adc
jae
fisttps
es
xchg
outsb
outsb
xchg
mov
lock
lsl
dec
call
std
xlat
wbinvd
push
mov
hlt
loopne
ljmp
rcll
jo
fsubrl
or
out
sbb
movsl
push
stc
aam
push
aas
pop
fisttpll
sbb
mov
lret
iret
cltd
sub
push
popf
nop
jns
inc
int3
stc
push
ljmp
daa
mov
mov
inc
ss
and
xchg
addl
in
xchg
roll
cs
inc
or
icebp
xchg
jl
cmp
jecxz
sub
mov
mov
mov
stos
sub
pop
cs
ss
das
addr16
aaa
jns
ds
cmp
ret
jl
xlat
or
stc
push
outsl
or
and
call
lret
inc
lahf
xor
int
xor
outsb
test
sub
popa
lcall
xchg
add
fisttpll
mov
xchg
pop
xchg
cmovo
cmp
cmp
int3
jo
fdivs
out
enter
sbb
add
pushf
adc
aas
je
jo
fstpl
frstor
sbb
lret
cmp
mov
cmp
into
mov
or
jp
adc
insb
in
pop
inc
call
add
les
subb
sub
inc
call
aas
dec
mov
ja
sbbb
aas
and
ds
rcrb
notl
or
adc
mov
lcall
cwtl
out
add
mov
mov
or
stc
ss
das
adc
scas
xor
xchg
clc
pusha
mov
xchg
pop
add
pop
cli
xchg
push
andl
jmp
or
les
dec
add
sub
dec
jge
and
jb
fdivp
arpl
mov
cmp
sub
inc
xchg
daa
xchg
mov
pop
sub
mov
cli
rcr
frstor
sahf
ds
mov
sahf
cmp
xchg
jl
and
jmp
jmp
pushf
mov
inc
in
adcb
inc
cmp
pop
sbb
cmpsl
or
mov
mov
or
arpl
out
push
sub
cmp
ja
or
cmp
shlb
sbb
inc
lret
inc
mov
mov
mov
adcb
mov
pop
xchg
imul
popf
aad
mov
jae
push
mov
jl
mov
dec
mov
dec
push
cmc
inc
xor
push
lahf
cld
pop
mov
or
shrl
dec
push
orl
mov
dec
out
mov
mov
sub
imul
in
mov
mov
mov
add
insb
add
mov
inc
aas
inc
addr16
shll
ficomps
arpl
or
movsb
repz
call
ret
jecxz
mov
mov
aaa
pop
outsl
mov
in
cs
popf
sub
jl
movsl
stos
inc
and
mov
adc
jmp
jmp
jp
sti
cmp
movhps
ret
arpl
mov
pop
rcrl
jg
lahf
or
iret
and
and
fldenv
xchg
push
data16
pop
or
or
dec
jecxz
int3
cwtl
dec
xor
cmp
dec
jle
loopne
movsl
xlat
jge
xor
jnp
rorl
inc
lret
cld
mov
scas
xchg
mov
sub
lcall
push
sub
mov
loop
sbb
dec
aam
mov
call
cld
int
in
mov
daa
ret
inc
enter
pushf
fdivs
rcrl
mov
popf
lcall
test
or
xchg
ret
aas
jp
mov
dec
xor
cltd
sbb
add
mov
insb
daa
js
xor
cs
xchg
in
out
imul
mov
lret
sub
ds
cs
and
dec
sbb
shlb
scas
and
andb
mov
rclb
imul
dec
and
cmp
shlb
fidivrl
dec
pop
xchg
push
mov
stc
jl
fdivs
inc
jnp
xor
and
iret
xchg
push
sub
loop
ja
adc
mov
nop
insl
push
cld
sub
stc
mov
rorl
pop
in
rol
mov
mov
iret
sahf
dec
stos
mov
mov
sbb
outsl
xchg
pusha
mov
rol
sbb
ret
mov
and
mov
push
and
push
popa
jge
dec
int3
dec
leave
daa
xor
adc
jb
lahf
bound
xor
pusha
out
into
leave
into
xor
arpl
mov
loopne
cld
sub
inc
pushf
push
jbe
sub
neg
mov
je
push
mov
mov
mov
jnp
bound
adc
pop
inc
jns
subl
mov
xchg
pop
sub
inc
dec
xor
loopne
sbb
push
lret
call
stos
mov
pop
and
in
sub
pushf
leave
jo
out
mov
daa
dec
fwait
xchg
jg
cmpsl
or
fnstenv
daa
scas
popf
inc
cltd
mov
add
add
xor
xor
aam
mov
test
bound
xchg
out
int3
cmp
test
ret
in
cmp
dec
push
clc
nop
inc
sti
dec
dec
xchg
jg
inc
incl
adc
pop
pushf
lock
ror
mov
xchg
cmp
dec
xchg
int
and
adc
xchg
and
outsl
sub
sub
cld
dec
fildll
push
cmc
inc
or
pop
ljmp
orb
aaa
mov
pop
pop
popf
adc
or
lds
xchg
out
sbb
mov
lods
inc
or
sub
loopne,pt
xor
shrb
sbb
push
push
adc
jnp
bound
cmpsb
or
adc
imul
jp
push
cli
inc
in
cwtl
push
xchg
pop
incb
daa
xor
jns
mov
lock
cmp
pop
or
aaa
pop
in
cmp
popf
cmp
dec
lods
inc
pop
pushf
inc
notl
imul
mov
inc
cmp
insb
jns
cmp
mov
sbb
pop
xchg
xor
clc
or
push
dec
int
outsl
lock
sahf
or
pop
jp
and
mov
mov
or
pop
add
mov
setb
ds
insl
lock
rorl
aas
bound
lea
pop
xlat
sbb
orl
in
lret
movsb
and
leave
adc
push
paddq
outsl
ljmp
call
aam
es
insb
or
loope
push
adc
imul
inc
jmp
cli
dec
jmp
std
lahf
push
pop
lods
inc
and
mov
pop
in
arpl
das
push
cmpsl
mov
adc
add
aad
aaa
pop
sub
jns
cmp
adc
mov
sbb
pushf
sarb
mov
cmc
nop
pushf
sub
mov
nop
pop
or
push
fs
mov
add
jae
push
sub
shll
out
iret
xlat
icebp
stc
outsl
sti
cld
pop
movsl
push
ficoml
pushf
cli
pusha
popf
sti
lret
jno
shll
push
out
fnsave
jl
insl
sbb
jl
popl
xchg
jbe
ret
test
cltd
in
cs
push
mov
push
dec
pop
stc
jmp
das
icebp
movl
dec
add
in
imul
add
loope
mov
test
jp
inc
dec
dec
out
int3
adc
cmp
orb
rcr
mov
mov
jbe
xorb
scas
push
push
in
test
mov
inc
push
sti
sbbl
loope
in
loope
orb
nop
jo
mov
fcompl
cltd
mov
dec
popa
lahf
jmp
add
flds
test
ja
adc
adc
dec
xchg
ja
in
mov
stc
or
mov
les
add
jns
aas
mov
add
push
or
sti
mov
addb
xor
arpl
sub
scas
push
push
mov
or
data16
xchg
fcompl
push
ret
outsl
mov
xchg
add
in
xor
mov
add
enter
mov
sbb
les
push
aaa
aad
fnstsw
sub
lea
or
scas
outsl
hlt
dec
call
xor
cmp
lods
in
test
lods
out
loopne
fimull
mov
cmp
sbb
jbe
xorb
adc
xchg
or
movsl
icebp
enter
lret
sahf
add
push
sub
movsl
ljmp
lcall
sub
loopne
pop
push
jae
int3
scas
aad
inc
cmp
xchg
mov
and
inc
rcl
add
inc
inc
xchg
jb
sti
fstpl
sbb
outsl
push
outsl
mov
jnp
inc
push
push
aam
es
mov
adc
xor
out
xchg
bound
out
and
out
pushw
push
mov
cmp
aaa
bsf
inc
pop
mov
fisubrl
call
dec
add
test
pop
into
imul
leave
xchg
aas
xchg
arpl
sub
and
add
sub
repz
inc
mov
or
mov
mov
int3
sbb
push
xchg
add
and
pop
pushf
popa
jns
insl
pop
or
cmpsb
push
pop
xchg
fdivp
sub
in
push
jmp
out
insl
adc
pop
loop
call
mov
xorb
ret
sti
jp
pop
lret
cmpsb
es
jb
enter
adc
mov
lea
push
mov
mov
push
movsl
push
jo
xchg
movsb
fcoml
pusha
stos
int3
mov
enter
cmp
mov
packsswb
loopne
pop
push
les
mov
add
ret
loopne
pusha
and
sbb
push
cwtl
shr
xchg
adc
mov
push
into
or
sub
ja
repz
test
mov
dec
jecxz
pop
mov
mov
push
ror
add
adc
xor
lods
in
pop
dec
push
cmp
inc
or
pop
scas
xchg
lea
out
out
lock
add
adc
in
xor
mov
leave
inc
adc
loope
popf
add
das
es
lcall
in
cli
call
shrl
ds
ret
out
adc
pop
ret
dec
xchg
into
divl
mov
pop
scas
in
dec
mov
shlb
loop
sbb
cltd
sti
inc
popl
xlat
and
adc
cld
mov
xchg
mov
add
out
dec
dec
jge
push
out
stc
mov
mov
or
into
sub
icebp
mov
sbb
repz
int
flds
aad
and
sbb
pop
cmp
adc
push
jae
cltd
aas
inc
je
cmp
xlat
xor
dec
jp
cmp
push
mov
adc
int
out
mov
xor
pop
xchg
hlt
sub
cmp
xor
fwait
imul
inc
popf
nop
xchg
sarl
add
xchg
xor
mov
cmp
inc
jae
and
push
int
pop
and
movsb
pop
in
scas
loopne
sbb
sub
xchg
push
inc
ret
xlat
push
iret
jp
mov
push
and
cmpsl
std
adc
fcmovbe
mov
add
out
or
aas
jle
cmp
jae
clc
addr16
aas
rcrb
stos
lcall
adc
adc
sbb
mov
popa
leave
aaa
xor
mov
inc
mov
xchg
jmp
or
test
xorl
adc
into
call
ret
les
mov
das
push
adc
iret
jge
test
mov
into
jbe
adc
into
pop
xor
cmp
cmp
mov
xchg
mov
xlat
cltd
add
in
dec
cmp
mov
mov
cmp
pop
aad
sbb
pop
scas
gs
mov
cmp
fbstp
and
dec
and
or
sti
mov
sbb
out
je
rcrl
test
lret
rolb
mov
je
nop
dec
fs
daa
sbb
dec
cmp
popf
imul
push
sub
sub
xor
push
ret
mov
and
xor
out
orl
cmp
adc
std
daa
lret
clc
adc
fs
mov
mulb
test
xchg
sbb
jb
cwtl
loopne
jge
ret
push
test
lock
in
and
stos
adc
loop
jae
mov
cmp
jl
adc
test
scas
mov
jmp
jmp
andl
cli
inc
mov
rolb
cmp
fcompl
push
das
pushf
clc
push
lds
aas
lahf
stos
jp
add
push
mov
cmp
stos
repz
lret
mov
adc
mov
push
adc
aas
sub
mov
data16
push
aas
lods
dec
lcall
mov
test
sub
das
pop
mov
mov
int
push
sahf
cwtl
pop
out
dec
add
pop
fcmovnbe
adc
lret
mov
push
imul
stc
xor
pop
daa
stos
out
pop
cli
cmpsb
repnz
jl
cs
xchg
cwtl
nop
xchg
mov
cmp
mov
mov
fldt
ret
das
fistpl
mov
cli
mov
ss
dec
test
enter
adc
clc
xor
outsl
add
adc
add
repnz
push
cmp
es
aam
inc
push
mov
or
cld
je
adc
mov
jg
adc
add
push
movb
testl
les
cmpsl
lock
mov
inc
cli
ljmp
hlt
sub
lods
insb
lods
xchg
xor
arpl
les
xor
cwtl
in
in
xchg
mov
push
into
fsubl
scas
cmp
inc
fiaddl
aam
jnp
pushf
jns
cmc
sbb
aam
mov
mov
cmp
inc
lret
mov
jg
xchg
mov
mov
sti
xor
and
sub
xchg
mov
jae
mov
pop
sub
nop
out
sbb
into
lock
mov
daa
add
xchg
test
adc
xchg
ret
add
popf
scas
or
and
daa
jnp
aaa
or
fldenv
xor
inc
jne
shll
inc
icebp
cmpsb
mov
jno
jo
xor
or
in
jge
cmp
mov
push
out
jns
leave
jl
iret
lock
inc
sbb
jne
push
push
xchg
je
adc
jae
cmp
out
mov
add
rclb
inc
je
loop
adc
push
pop
in
push
xchg
jne
or
bnd
dec
fisttpl
mov
mov
ljmp
test
xor
adc
push
add
loop
call
push
mov
sbb
jg
dec
pop
mov
int3
add
xchg
adc
pushf
aam
movzwl
xchg
add
mov
adc
fnstenv
xchg
mov
mov
repnz
popf
jnp
mov
sbb
or
in
lods
lret
jno
sub
cmp
arpl
ja
stc
testb
and
shrl
fstp
mov
pusha
xchg
and
jns
test
imul
add
fwait
and
xchg
add
nop
pop
lea
push
pusha
lods
mov
cmp
hlt
out
repz
pmuludq
leave
repnz
or
mov
mov
subl
scas
xor
aam
push
xor
push
xchg
in
pop
nop
in
movsb
sbb
jecxz
fists
mov
push
hlt
or
out
pop
rcr
push
aam
push
xor
popf
imul
xor
pop
popa
mov
sbb
jae
clc
fucomp
sbb
mov
add
ret
insl
sarl
es
xchg
push
pop
mov
das
xchg
enter
mov
aam
jb
cltd
jae
data16
fmul
wrmsr
push
out
xchg
pop
fcoms
jno
repnz
sbb
inc
inc
sbb
jnp
adc
and
and
rolb
mov
scas
jmp
add
mov
addr16
lcall
test
adc
clc
push
je
nop
repz
sbb
inc
cmp
sarb
cmp
or
addr16
nop
test
lahf
test
das
inc
push
aad
rclb
add
sbb
jecxz
mov
mov
sbb
sub
mov
cli
lods
sub
xor
xchg
insb
std
ret
dec
popl
hlt
rcrl
and
and
push
shlb
mov
push
cli
bound
xor
jbe
cli
shlb
xchg
dec
adcb
jmp
out
lret
xor
testl
mov
push
repz
int3
pop
push
cmp
fsubrl
inc
lret
lcall
mov
xchg
dec
xor
jecxz
subb
xchg
pop
pop
jbe
xchg
xor
inc
and
cmp
and
shlb
aas
and
cmpl
push
sbb
xor
and
adc
repz
arpl
jle
jle
notb
add
js
test
adc
push
orl
divb
xchg
push
mov
adc
fisttpl
ss
std
fsubl
cld
fmull
jo
xor
jmp
dec
pop
jp,pn
mov
add
out
push
cli
push
push
mov
int
xor
push
pop
push
out
inc
roll
ljmp
push
sub
mov
or
cmp
xchg
cmpsl
xor
pushf
sahf
or
push
mov
les
and
mov
mov
xor
jns
or
xor
fmuls
fdivl
je
stc
fwait
std
push
std
jg
push
sbb
cmp
inc
cli
cmp
inc
sub
pop
les
fcomi
jnp
mov
cwtl
test
dec
rcrl
mov
rcrb
or
mov
cmp
add
xchg
lcall
sub
imul
xor
fiaddl
sbb
sbb
testb
adc
fcoms
pusha
sub
into
jno
xchg
inc
mov
sbb
mov
mov
ret
xor
mov
sub
sarb
xchg
out
rorb
leave
inc
into
stc
cltd
shrl
sbb
arpl
pop
sbb
imul
aaa
push
and
test
pmulhw
mov
adc
add
xchg
mov
mov
lea
push
pop
or
mov
ficoml
or
cmpsl
xor
push
rcpps
jp
jle
mov
sarb
fbld
sbb
and
icebp
mov
cmc
gs
clc
push
and
outsb
push
es
iret
clc
es
jp
adc
shlb
in
mov
xchg
lods
scas
and
into
ret
imul
cmc
fwait
jb
ja
mov
std
imul
xor
adcb
push
addr16
adc
cwtl
ficoms
lcall
push
loopne
xor
int
or
jbe
or
jne
mov
push
outsb
pop
mov
mov
cmpsl
sbbb
sbb
outsl
adc
or
add
pop
mov
push
shr
xchg
inc
mov
stc
push
stc
and
lahf
and
xlat
inc
push
fildl
aaa
cmc
ss
insl
movsl
rol
mov
int
adc
in
or
mov
outsb
push
and
test
aas
add
mov
aam
das
or
scas
mov
out
inc
lock
es
data16
icebp
mov
test
push
xchg
sbb
xchg
mov
sbb
mov
fwait
clc
adc
ret
fs
add
aas
jo
fistpl
mov
out
cmc
adc
sbb
icebp
sbb
stc
pusha
sbb
into
imul
and
mov
dec
inc
push
and
test
data16
xor
or
call
xchg
sahf
test
push
mov
mov
dec
dec
push
inc
mov
or
cld
and
insl
mov
lret
pop
xchg
push
hlt
jb
pop
test
ret
push
pop
xchg
mov
jbe
pop
sub
push
shlb
fwait
notl
sub
daa
mov
fiadds
jae
scas
ljmp
push
cmp
mov
jae
popf
insb
lock
jmp
inc
pop
ret
mov
sbb
add
inc
inc
sahf
xchg
inc
cmp
pop
xlat
cwtl
pop
sbbb
sti
cmpsl
sub
cmpsb
dec
dec
cmp
jne
cwtl
shll
imul
lds
call
xchg
loop
pushf
jo
jge
mov
mov
jo
add
xchg
incl
cs
int
ss
fnstenv
push
or
loope
sbbl
nop
mov
std
push
jns
imul
jl
and
fildl
pop
fwait
cmp
inc
subb
es
pop
dec
imul
sbb
sbb
gs
xchg
dec
pop
add
jecxz
in
ret
int3
inc
mov
int3
fidivrl
cltd
add
std
shr
inc
insl
mov
or
aad
push
mov
cmc
in
and
lock
inc
mov
and
adc
loope
faddl
mov
push
mov
stc
push
jnp
jno
and
daa
in
jle
test
dec
dec
aam
divl
pop
or
pop
and
push
pusha
in
orl
out
shlb
mov
or
mov
mov
andl
pop
or
lret
int3
mov
mov
aad
lcall
clc
fwait
mov
rolb
or
je
mov
test
cmpsl
shll
test
lock
inc
sbb
cmpsb
or
pop
fs
data16
outsb
cltd
test
lods
repz
fadds
pop
sbb
lret
and
lods
out
cwtl
iret
js
or
pop
push
popa
jno
lret
out
and
dec
adc
clc
mov
sbb
jle
push
or
adc
mov
jmp
aaa
mov
std
xchg
cmp
push
in
dec
dec
adc
mov
int3
fsubl
xlat
push
cmc
pop
jl
roll
push
in
push
out
test
lcall
iret
loope
out
xor
fucom
xor
sahf
movsl
xor
addr16
push
aas
pop
push
sub
lret
jmp
pop
rep
cmp
popa
in
xchg
mov
ret
mov
fwait
sahf
pop
ficoml
mov
or
cmpsl
mov
sub
test
mov
mov
fwait
bound
jmp
mov
imul
xchg
push
cld
adc
push
test
in
dec
xchg
hlt
pushf
mov
loopne
fcmovbe
mov
inc
test
arpl
lcall
pop
outsb
mov
ljmp
cwtl
das
das
movsb
cmp
in
pop
pop
dec
cmp
cmp
out
out
jge
lock
push
inc
ror
cwtl
les
pop
lock
fadd
imul
xor
lcall
add
arpl
mov
mov
or
repz
pusha
or
ja
mov
jle
adc
roll
push
dec
xchg
in
jg
xchg
xor
cwtl
push
xor
test
cld
gs
stos
sub
xchg
xor
pop
pop
loop
xor
mov
fcmovnu
pushf
gs
lret
xor
cmp
push
test
insb
or
add
fdivrs
and
mov
xchg
cmc
jmp
xchg
xchg
adc
lods
xlat
aas
fadds
mov
int3
mov
cltd
in
popf
lahf
push
scas
lock
and
push
fwait
insb
sbbl
mov
xchg
jmp
clc
mov
push
jbe
mov
test
fldt
scas
jae
xchg
movsb
sbb
int
aam
pop
push
xchg
rcll
sub
and
les
push
imul
fwait
cs
stos
sahf
sub
inc
xchg
call
ret
inc
mov
fcoml
mov
xchg
movd
inc
mov
add
push
lods
mov
sbb
call
shl
inc
xchg
adc
push
fwait
outsl
popa
mov
lds
jl
xchg
and
jne
pop
out
movsb
xor
imul
int3
hlt
test
jmp
mov
mov
inc
lods
cli
roll
dec
add
mov
cwtl
stos
and
stc
sahf
dec
clc
jnp
xchg
es
ss
notb
in
inc
stc
andl
inc
imul
inc
bound
std
cmp
aas
into
sbb
push
ret
ja
test
aad
push
add
mov
add
mov
and
mov
stc
xor
in
out
cmp
jnp
push
pushf
add
sti
das
jb
outsb
sahf
push
test
nop
mov
adc
test
push
mov
push
push
sbb
xchg
cwtl
arpl
xchg
jb
ret
in
or
jp
std
sti
rcrb
test
ljmp
popa
pop
daa
loopne
pop
les
jl
int3
or
push
fldl
in
add
mov
enter
xor
jno
int3
mov
push
dec
lret
cmpsl
pop
shlb
negb
push
cltd
or
movsl
loope
push
lea
jl
aam
in
xchg
gs
mov
jmp
adc
push
icebp
inc
jp
rol
shl
ficomps
pop
push
mov
hlt
clc
pop
mov
xchg
orl
mov
mov
cli
lret
adc
xchg
push
sub
xchg
es
dec
inc
cs
jge
add
ja
mov
adc
inc
aaa
sbb
es
imul
inc
movsl
add
out
cwtl
stc
out
cwtl
leave
inc
cwtl
add
dec
cld
int
or
mov
add
ja
sbb
bound
rcrb
ds
outsl
test
jl
repz
out
insb
inc
repnz
xor
inc
shl
fsts
pop
sub
sbb
stos
sbb
add
sub
sbb
js
inc
inc
sbb
inc
adc
ja
adc
jle
push
add
adc
push
movsl
outsl
push
adc
mov
push
mov
adcb
and
pop
push
cmpsb
daa
movsb
addr16
popf
decl
out
jmp
cmp
fs
xchg
in
loopne
jae
aas
fst
mov
into
fdivrs
sub
arpl
dec
sbb
fisubrl
mov
testl
dec
add
ret
jns
inc
xor
negb
aas
je
dec
int3
jno
ret
mov
or
pop
scas
xchg
dec
xchg
push
mov
jne
notb
loop
outsb
or
pop
xor
orl
sub
js
divb
mov
lcall
add
bound
and
jne
repnz
stos
loop
cmp
push
je
movsb
popf
xchg
loope
sbb
push
jp
arpl
fildll
das
mov
dec
enter
mov
dec
lods
fisttps
add
sbb
add
adc
push
mov
ljmp
fisttpll
pop
movsl
add
cli
pop
dec
in
mov
je
pop
jle
cmp
cmp
bound
pop
movsl
enter
add
in
inc
pop
test
pop
loopne
sub
icebp
scas
jbe
lods
call
pop
pop
mov
mov
loop
jg
icebp
or
fnstenv
mov
das
adc
xor
adc
lds
adcb
xor
sub
mov
xchg
sub
dec
mov
add
pop
push
fnclex
ror
pop
inc
dec
cmpb
dec
push
push
inc
mov
pop
lods
push
ja
movsb
pop
mov
mov
push
xlat
mov
aaa
lds
outsl
adc
xchg
mov
jmp
enter
mov
mov
add
das
dec
je
fcoml
into
jnp
out
cmp
out
enter
dec
aaa
mov
and
and
cli
jae
jg
or
sbb
and
es
dec
mov
cwtl
sub
push
inc
jmp
or
pop
sbbl
ds
xor
fcompl
mov
push
cmc
mov
fdecstp
mov
inc
pushf
pop
fiadds
xlat
in
jns
jmp
lock
inc
xor
mov
mov
ss
mov
mov
mov
popa
mov
add
sbb
loopne
jae
mov
jmp
push
stos
fisubl
fcom
sbb
popf
push
in
sbb
mov
out
xor
stc
add
push
scas
addb
loopne
mov
cld
mov
out
cmpsl
and
rolb
xchg
gs
incb
adc
mov
clc
data16
mov
in
sbb
fcoml
andl
inc
or
iret
es
pop
cmp
test
cmp
fcmovb
xor
rcr
jg
rorl
aaa
pushf
imul
sbb
mov
jg
cmp
xchg
aas
cld
lret
xchg
cmpsl
mov
lret
xchg
cmp
lds
or
and
es
jge
jmp
xchg
popa
insl
out
adc
insl
int
test
sbb
inc
xor
sub
clc
xchg
mov
xchg
imul
push
sub
fmuls
fcomp
pop
pop
movsb
orb
xor
nopl
mov
jae
test
cmpsl
pushf
add
add
mov
stc
push
out
or
sub
mull
imul
pushf
call
das
jo
push
stos
shr
int
jl
stos
sarl
push
in
push
pushf
mov
adc
mov
ret
mov
jnp
xor
xor
mov
jg
ret
push
sub
jnp
xor
test
std
mov
adc
push
popa
adc
lret
enter
lahf
pop
mov
sbb
ffree
add
mov
jns
dec
lea
mov
adc
inc
cmpsl
addl
xchg
rorb
push
pop
mov
xchg
pop
lods
lods
mov
call
pushf
decb
mov
xchg
pop
leave
enter
or
add
mov
loop
add
and
cli
xchg
bnd
cmpsb
cmp
pop
js
fmulp
pushf
popf
xor
fildl
pop
cmp
mov
fldenv
sbb
bound
mov
lea
add
iret
movsl
and
push
rorb
jle
xchg
sbb
ss
aaa
cmc
pop
mov
add
mov
loop
push
test
and
sbb
or
xchg
mov
inc
inc
mov
test
pop
or
sbb
scas
aas
scas
fistl
xor
insb
mov
dec
test
sub
adc
into
fpatan
sub
popf
fisubl
icebp
cltd
jno
into
mov
cmp
ljmp
jnp
nop
xlat
aam
inc
add
scas
arpl
push
inc
arpl
jge
repz
cmp
pop
dec
loope
pop
outsl
sbb
testb
mov
aad
push
and
dec
mov
sbb
cmp
sbb
xor
xlat
data16
mov
mov
xchg
cmp
dec
mov
and
jns
xchg
jecxz
shll
lcall
cwtl
pop
add
in
xchg
pop
imul
mov
push
imul
fstps
inc
xorl
pop
test
pop
popa
movsb
jno
in
cltd
adc
mov
and
sbb
sub
jbe
mov
add
jge
pop
sarl
and
push
fists
sbb
xchg
arpl
out
push
stos
out
mov
int3
fs
pop
mov
incb
inc
cwtl
inc
sbb
aaa
inc
push
divl
test
add
jg
xor
and
xchg
xchg
xor
jge
scas
cmp
push
call
jg
fcmovnb
pop
sub
push
jo
push
cmp
lods
jnp
imul
sub
sub
xor
aam
and
das
cs
dec
mov
loope
daa
out
sbb
aaa
xchg
sbb
dec
es
pop
test
xor
inc
cmp
xor
lea
jl
sbbb
lock
test
cmp
adc
or
into
jne
sarb
mov
adc
pusha
loope
dec
mov
mov
rcrl
sub
inc
push
push
inc
dec
loopne
std
or
cmp
adc
imul
cs
ds
dec
cs
add
das
sbb
repnz
dec
std
cmc
into
hlt
sbb
jge
xor
jns
repnz
into
cmc
pop
stos
ljmp
pusha
lea
mov
or
scas
cld
cmpsl
push
icebp
mov
xchg
cld
pop
rcll
xlat
mov
push
push
dec
insl
jns
out
int
mov
cmpsb
mov
adc
test
and
cmpsb
inc
mov
sbb
dec
int
adc
scas
sti
inc
out
std
cld
adc
incb
adc
sarl
mov
insl
daa
push
int3
pop
dec
aaa
rorb
mov
mov
push
pop
or
or
pop
push
or
xlat
cmpsb
xchg
cmpsl
mov
mov
ret
lret
inc
sbb
mov
xchg
sbb
mov
inc
int3
mov
subb
mov
inc
les
pusha
push
icebp
pcmpeqw
add
repnz
jne
sti
dec
icebp
push
and
and
xchg
mov
stc
pop
testl
imul
int3
arpl
xor
jb
dec
mov
sub
int3
or
lahf
mov
lcall
inc
mov
and
inc
mov
pop
adc
aad
iret
repz
aad
adc
push
push
xor
clc
sbb
or
xchg
lods
push
movsb
rcl
xchg
xchg
or
repz
adc
ja
je
add
mov
sbb
mov
pop
mov
int3
mov
int3
cmpsb
adc
icebp
pop
sub
adc
push
cmp
out
into
popa
jge
inc
fstl
lods
adc
sbb
push
mov
mov
insl
mov
aam
inc
xchg
int3
inc
into
fbld
mov
rcr
pushf
jne
mov
daa
inc
hlt
cmp
or
fisubrs
idivl
inc
aad
and
inc
dec
jge
lds
sti
mov
and
push
loopne
imul
dec
arpl
adc
test
jne
cmc
adc
sbb
out
pop
lods
ror
stos
jns
push
or
adc
fldl
shrl
jl
sub
dec
lcall
arpl
inc
js
popa
inc
xchg
xchg
push
aaa
push
jp
or
mov
int3
loope
ljmp
dec
sbb
in
xor
fmull
cltd
aaa
jl
lock
in
mov
out
mov
fidivl
jns
push
arpl
and
flds
dec
andl
repnz
cs
fcom
out
shlb
ror
jmp
mov
dec
cmpsw
addr16
jg
pop
jns
into
test
sbb
inc
dec
push
xor
jne
mov
ret
inc
inc
pop
push
xchg
pop
mov
int
arpl
sub
dec
ds
jg
pushf
mov
outsb
sar
cs
mov
test
pop
push
test
pop
loope
mov
in
xchg
lods
sub
sub
push
fldl
rolb
pop
arpl
dec
sbb
push
mov
test
rorb
sub
test
jg
pop
roll
xor
outsl
push
pop
push
adc
pop
je
jmp
and
dec
and
scas
mov
mov
das
sub
push
pop
and
lods
push
inc
pushf
jno
xor
fldenv
inc
int
pop
arpl
or
push
rorb
pop
push
inc
add
test
cwtl
inc
das
jl
jl
loope
pop
adc
or
andnps
pop
sahf
jg
pushf
mov
repnz
jmp
sbb
mov
pop
add
call
imul
push
pop
add
cld
dec
das
addr16
mov
push
icebp
into
mov
imul
imul
cld
jl
shlb
push
movsb
jmp
lahf
lahf
and
mov
sbb
xchg
clc
xchg
inc
push
inc
or
pushf
popf
dec
jo
sub
mov
or
sub
hlt
clc
jg
mov
jne
pop
push
movsb
sbb
adc
and
in
test
inc
jne
dec
add
pop
test
sub
lea
inc
add
outsb
into
pop
ffreep
test
cltd
add
sarb
xor
jmp
mov
pop
jae
repz
rcr
cltd
sub
pop
jmp
pop
jnp
lcall
lea
push
push
mov
pop
add
test
inc
mov
in
mov
daa
jnp
in
or
insl
ds
les
stc
into
jne
imul
nop
popf
cmp
outsl
mov
bound
inc
xor
push
insl
das
mov
jb
mov
bound
ficoms
pusha
mov
subb
push
jmp
push
cltd
cmc
lock
add
xchg
pop
dec
out
lret
pop
and
mov
cs
es
dec
es
scas
xor
inc
bound
or
jnp
mov
insl
sub
mov
fistpll
mov
cld
fs
or
loop
and
mov
bound
sbb
mov
dec
cmp
inc
sarb
bound
mov
jle
cmp
fisubrs
jnp
repz
cmp
mov
ljmp
pop
xchg
rorb
jae
inc
int
rsqrtps
cmpsl
std
out
test
jo
in
sub
jo
lahf
push
adc
in
jae
push
adc
pop
rcrl
and
push
bnd
add
sub
dec
fldl
fidivrl
iret
inc
sbb
jle
ja
ja
xchg
lds
or
sbbl
jb
lods
pusha
sbb
scas
cli
pop
movsb
bound
mov
addr16
stos
mov
push
out
lock
ret
mov
inc
jp
jle
adc
jne
push
mov
movsl
pop
xchg
sbb
mov
std
sbb
mov
sti
adc
sub
mov
sbb
adc
lret
aas
cmpsl
lret
inc
rcr
hlt
inc
lock
pop
xchg
pop
add
and
lods
adc
and
call
es
iret
jp
or
dec
sub
jg
jo
mov
mov
fcomps
xor
adc
data16
mov
jnp
sub
cwtl
push
mov
iret
lcall
fdivrs
xlat
or
and
mov
call
gs
imul
dec
jns
jl
adc
mov
out
in
leave
enter
insb
jp
into
xor
adc
push
pop
je
pop
in
xor
std
inc
cmp
pop
loopne
hlt
lods
std
mov
and
sbb
test
dec
out
ret
daa
add
push
add
pop
loopne
push
push
xlat
pop
repz
sbb
outsb
out
add
popa
push
add
mov
push
jg
jmp
js
daa
dec
pop
push
adc
add
add
ss
xchg
jmp
pusha
js
out
adc
mov
mov
enter
lea
stc
or
or
mul
addr16
cmc
push
push
dec
xchg
cmp
sahf
inc
outsb
imul
aam
or
int
inc
mov
shlb
jnp
or
test
push
xchg
push
xchg
imul
pop
sub
insb
mov
sub
loopne
cmp
inc
mov
stos
pop
cmp
jmp
cmp
mov
mov
aad
repnz
jg
mov
sbb
test
fadds
mov
xor
scas
call
rcrl
add
and
es
subl
add
jno
sub
push
push
lahf
xor
insl
jmp
fwait
lods
lods
xor
push
insb
cmp
hlt
sti
xor
sbb
jl
stc
in
cld
jne
adc
fs
arpl
cmp
fldcw
jmp
mov
sbb
in
adc
lret
mov
stos
sarb
ret
xor
data16
popf
jb
test
outsb
imul
jb
inc
or
push
and
arpl
add
je
xor
xchg
rolb
ror
sub
lds
out
test
cs
pushf
fs
cmp
in
pop
ljmp
mov
dec
and
inc
add
pop
divb
pop
adc
adc
add
mov
jp
jecxz
dec
ja
sarl
in
ficoml
or
mov
sbb
xor
add
add
fmull
mov
ss
jns
outsl
je
imul
add
adc
or
arpl
push
in
lahf
adc
mov
aaa
pop
fs
ss
xchg
and
lret
inc
cmp
push
cmp
or
adcl
adcb
rolb
fldz
test
xchg
sub
push
cli
inc
iret
int3
jae
jnp
sbb
jle
in
das
mov
insb
sub
cmpsb
mov
lret
loop
jp
nop
hlt
cs
dec
in
fimull
adc
inc
call
lock
fdivrl
adc
and
inc
pop
nop
lock
xchg
aaa
or
fnstsw
cmp
rol
cmp
add
int3
inc
and
divl
daa
pushf
inc
dec
push
push
mov
cmp
add
scas
scas
mov
call
cmp
es
mov
add
lds
ss
adc
lcall
xor
add
push
mov
ss
cli
aaa
or
xor
and
hlt
sub
fisubrl
mov
push
inc
aaa
imulb
add
inc
jge
dec
push
fimull
in
sahf
les
jno
dec
mov
sarl
adc
shlb
xor
ret
mov
popf
xchg
mov
leave
xchg
adc
mov
insl
jge
add
mov
xor
add
fsubs
push
sbb
ds
addb
mov
ret
in
add
pop
ret
pop
xorl
icebp
insb
sub
push
or
adc
ret
push
dec
mov
xor
popf
mov
push
or
xchg
xchg
in
dec
mov
mov
cwtl
push
mov
cmpsl
sbb
inc
mov
mov
pop
mov
push
jg
inc
mov
fstpt
and
push
or
mov
sahf
xor
mov
repz
lods
das
roll
repnz
jle
aas
mov
bnd
stos
fisttps
das
shl
cmp
cwtl
negl
push
xchg
out
int3
imul
into
or
mov
jge
lock
push
sbb
incb
push
xchg
push
inc
call
sbb
mov
outsb
outsl
adc
ffree
mov
ja
icebp
iret
in
and
repz
xchg
push
pusha
jno
ror
mov
pop
sub
jp
ss
inc
xor
push
insb
sub
aas
rcll
mov
mov
add
aad
inc
and
jle
mov
sub
cld
pop
es
sbb
push
and
dec
push
pusha
daa
mov
shrb
lds
push
fidivrs
cmpsb
leave
test
xor
pushf
sbb
jb
jo
fidivl
xlat
cmpsl
pusha
pop
jg
inc
inc
dec
mov
and
in
jl
dec
test
imul
mov
mov
adc
clc
push
js
lret
pop
or
out
mov
jmp
jno
xchg
mov
out
xor
mov
sub
lock
pop
jae
mov
sbb
add
pop
sbb
stos
mov
cld
sarb
arpl
loopne
mov
dec
push
pop
cmpsl
adc
cmp
or
movsl
xlat
in
cld
ljmp
mov
sub
or
inc
add
jecxz
pop
into
pusha
in
jecxz
std
xor
xor
cmc
and
adc
in
jb
in
stc
jl
lret
xchg
sbb
inc
push
insl
repnz
lret
out
xchg
push
leave
sbb
jbe
dec
das
jge
lock
mov
dec
mov
fwait
inc
clc
mov
add
mov
or
movsl
fidivrs
push
inc
mov
and
dec
pop
fcomp
pop
xchg
xchg
push
popa
mov
mov
ljmp
xchg
push
pop
aam
push
loope
imul
xchg
fs
adc
into
jmp
mov
sbb
mov
push
lcall
scas
pop
ds
pop
pop
jae
cltd
sub
mov
shll
das
roll
pop
pop
lret
std
mov
lods
cld
mov
stc
scas
push
shlb
inc
mov
gs
jno
addb
lret
dec
addr16
xor
sbb
into
lahf
xor
pop
adc
add
setbe
jge
dec
sub
loope
sub
ret
fnsave
fadd
sub
mov
jp
mov
sub
fisttps
cmpsb
test
adc
cs
loope
test
sbb
inc
xchg
jns
jnp
push
adc
int3
ja
notl
jns
push
adc
sahf
decb
je
inc
mov
repz
repnz
outsl
and
sbb
ja
or
jns
inc
pop
lcall
mov
inc
jle
sbb
ret
inc
lret
mov
mov
mov
cli
mov
jp
dec
xor
shlb
stos
leave
dec
cmp
or
mov
pop
pop
lahf
ret
insl
lcall
shlb
in
ficoms
sub
or
repz
cmc
or
cmp
xlat
shrl
nop
adc
cli
mov
mov
push
mov
inc
jno
sti
ficoml
or
scas
add
aad
popf
movsl
xchg
sub
push
nop
movsb
lcall
dec
xor
rcrl
cmp
mov
mov
or
push
pop
ss
xchg
adc
jo
jns
cmp
ret
xchg
and
xor
adc
in
scas
sti
test
ja
icebp
pushf
outsb
mov
fs
fcomip
jecxz
jae
xchg
inc
addr16
xchg
inc
mov
mov
shll
adcb
push
stos
inc
push
jge
mov
mov
xor
push
mov
cmp
sbb
cmp
sbb
cmp
jb
lock
mov
incl
out
jecxz
aam
adc
jo
dec
test
sbb
mov
scas
and
loope
jmp
adc
mov
mov
mov
and
pop
lods
inc
jp
loope
xchg
pop
pop
and
mov
or
cwtl
daa
xor
or
add
xchg
cwtl
daa
push
pop
pop
mull
inc
into
jbe
dec
out
mov
adc
repz
clc
cmpb
bound
dec
add
push
mov
pop
in
inc
icebp
in
xchg
dec
mov
jnp
insb
xchg
js
inc
in
mov
jno
aaa
jl
jecxz
call
and
mov
dec
punpcklbw
add
fstpl
in
das
cmpsl
or
dec
stc
mov
cmpsl
xor
and
jb
pop
jg
insb
jae
push
push
int3
jbe
ljmp
ja
mov
rorb
mov
sub
fistpll
add
scas
lcall
sbb
jle
push
pusha
sbb
jnp
sbb
js
inc
int
or
mov
dec
jmp
mov
push
rol
out
repz
inc
dec
or
xlat
lcall
jge
mov
xchg
cld
ja
push
aad
loop
and
sahf
repnz
nop
add
cld
cmpsb
push
stos
sub
jl
sbb
cmp
jecxz
popf
push
jecxz
scas
pusha
fcmovnu
inc
mov
into
es
cs
int
cmp
inc
fnsave
jne
cli
int3
gs
mov
xchg
add
aas
stc
movsl
xchg
lcall
jge
imul
adc
test
pop
cli
rol
sti
mov
push
scas
outsb
inc
sbb
mov
inc
loopne
loopne
pop
mov
in
out
push
into
mov
sti
arpl
clc
icebp
test
sahf
jno
ror
pop
pop
pop
jecxz
mov
popa
cli
int3
mov
jle
addr16
sbb
push
xchg
lret
ret
sbb
push
pop
mov
pop
cmpsb
jge
add
divl
stc
mov
gs
repz
cmp
dec
mov
push
pop
jecxz
or
into
pop
cmp
test
fsubrl
cli
jae
xchg
arpl
call
mov
in
push
mov
hlt
and
push
in
cmpsb
imulb
out
mov
stc
dec
lret
insl
and
cs
jne
sbb
sahf
imull
push
xchg
das
inc
cmp
add
dec
lods
add
cld
mov
sbb
or
mov
or
jb
nop
mov
icebp
push
or
mov
repz
push
xchg
ret
outsb
pop
dec
fsubrp
cmpsb
cmp
lret
cmp
movsb
pop
decl
or
lds
jl
sbb
leave
pusha
mov
lret
add
in
adc
add
enter
mov
mov
pop
dec
cld
inc
sbb
sub
pop
std
adc
sbb
add
cli
lods
cmp
fnsetpm(287
in
sub
in
lods
adc
fnstsw
push
mov
sbb
call
adc
cmp
xor
es
mov
xor
xchg
pop
out
pop
outsl
into
mov
mov
push
sbb
and
xchg
aaa
cmp
mov
xor
leave
int
aaa
or
mov
aaa
fcompl
js
push
scas
nop
ja
mov
xlat
dec
inc
stc
jp
cmpsb
popf
mov
inc
push
imul
pusha
mov
mov
jl
or
mov
fdiv
jno
or
dec
and
pusha
and
add
repnz
push
testl
pop
mov
dec
add
sbb
mov
jmp
xchg
push
pop
push
fadds
imulb
or
daa
lea
loopne
mov
dec
xchg
jecxz
sbb
and
or
imul
mov
mov
or
into
adcl
xor
push
leave
in
xor
push
jno
sbbb
pop
inc
pop
pop
sbb
aaa
mov
mov
sarl
ljmp
cmpb
pop
push
lcall
sar
pop
dec
pop
adc
cli
cmp
lcall
adc
in
sbb
fmuls
fwait
test
leave
nop
mov
int3
shl
pushf
int3
add
es
mov
ja
adc
mov
add
push
ja
mov
or
add
sub
scas
enter
sbb
mov
or
in
push
cmp
mov
and
sub
stc
mov
mov
xchg
jmp
add
cmp
pop
lds
xor
xchg
mov
cltd
pop
xchg
aaa
adc
pop
mov
push
cmp
jmp
jo
pop
and
jmp
pop
sub
pop
cmp
xchg
notl
adcb
and
cwtl
push
repnz
test
push
jnp
dec
std
sbb
test
xchg
push
fnstcw
aam
adc
js
add
or
bound
test
test
or
jecxz
ret
or
mov
mov
int
pop
int3
xor
mov
sbb
inc
in
dec
pop
in
int3
mov
repz
cmp
pop
pop
shll
add
inc
sbb
dec
mov
imul
adc
xchg
packsswb
add
scas
into
lds
mov
adc
popf
outsb
adc
es
cltd
aam
pop
adc
ret
mov
sti
ljmp
call
fildll
inc
jb
test
pop
pop
in
mov
sub
aam
mov
mov
mov
repz
insl
adc
scas
adc
cmp
xor
in
adc
xor
mov
inc
sbb
push
jg
insl
xor
fldcw
roll
adc
lahf
in
stc
andb
sarl
fdivs
movsb
mov
add
xchg
xchg
jge
enter
adc
iret
out
mov
add
cmp
pop
dec
les
jmp
and
std
sbb
mov
pop
jl
dec
pop
aas
sub
push
cld
xchg
push
xlat
jb
mov
pop
es
dec
adc
dec
out
outsb
popf
push
mov
jle
push
mov
sbb
push
inc
xchg
daa
push
hlt
psubq
lods
and
xor
hlt
imul
mov
mov
mov
pop
xchg
je
clc
dec
inc
mov
mov
cmp
push
dec
fbstp
sti
mov
adc
xchg
and
cmc
xlat
bound
xor
jns
aas
sub
xor
or
jbe
enter
mov
mov
fwait
cmc
add
and
outsl
pop
adc
inc
push
rorl
mov
cltd
mov
int3
jno
push
jmp
pop
push
jno
iret
xor
fbstp
loop
out
aam
ljmp
pop
bound
mov
xchg
mov
fwait
cli
lret
inc
sub
sub
addr16
fcomi
or
sub
xor
push
andb
and
and
rclb
sbb
neg
jl
subl
xchg
ret
cmpsl
and
dec
and
jmp
dec
sub
scas
xchg
pop
repz
bound
jbe
jnp
mov
sbb
push
fidivl
cltd
inc
mov
popf
cmp
xor
push
leave
popa
aaa
imull
xor
out
dec
aas
or
jp
xor
mov
daa
jecxz
clc
jle
ficomps
sbb
dec
aas
jmp
incb
xor
mov
and
push
sub
test
or
add
int3
add
lea
lods
rorb
aaa
sub
or
adc
cs
imul
je
inc
fdivrl
mull
push
insl
inc
andl
xlat
and
xlat
cld
jb
xor
repnz
fists
pusha
int
xchg
shll
ffree
ja
pop
jle
stc
jae
aas
mov
mov
out
mov
add
mov
pushf
xchg
daa
adcb
add
loope
repz
je
lods
mov
xlat
std
push
push
mov
jo
cs
shll
lock
fxrstor
insl
stos
cmp
or
xchg
dec
sbb
or
mov
mov
andb
and
xchg
mov
fcoml
sub
xor
xchg
aaa
popf
sub
xor
stos
sti
lods
arpl
sbb
cmpsl
xchg
es
mov
popf
mov
sub
into
fmuls
mov
push
fwait
mov
cltd
mov
cmp
fildl
xor
jae
pop
xor
dec
lock
pop
lret
dec
or
add
adc
popa
add
outsb
aas
push
xor
xor
or
cmp
mov
clc
inc
stos
pop
sub
enter
pushf
adc
lahf
jb
lds
mov
fsubl
push
dec
test
in
in
sbbl
mov
mov
and
xchg
gs
lods
mov
cltd
sbb
dec
std
and
inc
mov
in
in
stos
dec
xor
rcrl
sti
push
sbbb
pop
sub
push
aad
int3
xchg
out
test
push
mov
enter
sbb
push
in
out
push
aad
xchg
test
xchg
je
fisttpl
shrl
inc
inc
sbb
adc
xor
stc
in
dec
push
cmpsl
cltd
fsub
xchg
inc
cwtl
fdiv
mov
inc
fsubrs
adc
int3
cmp
in
jno
xchg
in
xor
sub
stc
mov
sbb
or
out
xchg
lea
mulb
and
dec
ficoms
inc
fisubl
sub
mov
sbb
fisubs
fistps
in
rcl
iret
mov
pop
push
sahf
and
or
nop
pop
sbb
inc
adc
fst
fs
pop
in
xor
call
jno
aaa
pop
push
dec
pop
adc
pop
ja
sub
xor
lret
sbb
dec
mov
sub
gs
jge
jmp
inc
jl
sbb
icebp
xchg
dec
mov
sbb
cmp
ror
mov
outsb
xchg
mov
repz
sub
or
sbb
pop
cltd
sub
stc
sbb
das
xchg
sub
fsubs
pop
sahf
stos
jno
mov
pusha
fs
cmp
stos
sub
adc
call
fildll
sti
ret
shrb
sarb
les
das
jbe
pop
aas
mul
ljmp
loopne
pusha
std
roll
xor
andb
sub
inc
pop
dec
sbb
loopne
fidivrl
mov
repz
and
hlt
js
and
sub
sub
mov
xchg
fdivrs
jecxz
jne
or
cmp
test
in
cmp
jp
sbb
mov
or
mov
sbb
in
test
mov
rep
in
aad
insb
pop
mov
mov
movsb
mov
int3
add
shlb
cmpsl
stos
and
xchg
mov
push
sub
sbb
hlt
bound
jmp
xchg
push
cld
push
pop
addb
cmpsb
mov
ja
add
mov
pop
test
cmp
enter
xor
jg
adc
into
mov
add
mov
ficoml
sub
movsb
pop
ljmp
sbb
mov
loopne
ficoms
pop
lahf
fs
or
xchg
xor
cld
and
test
test
aam
out
imul
test
push
mov
or
daa
cmp
pushf
sahf
pop
cmc
and
negl
add
jmp
mov
add
xchg
push
mov
adc
dec
mov
sbb
sub
pushf
es
stos
pusha
std
fdivrs
daa
or
dec
xchg
test
pop
inc
stos
add
push
jmp
mov
nop
mov
movsb
push
imul
sahf
cmp
sbb
andb
loope
mov
sub
pop
mov
xor
test
in
mov
mov
nop
lret
mov
mov
lea
fcoms
xchg
clc
popf
or
jg
xchg
push
mov
icebp
int
push
adc
jle
sbb
or
int
je
lods
bound
inc
mov
pop
shrl
lds
dec
std
push
push
push
jns
pop
push
out
adc
sub
mov
dec
dec
ja
dec
pop
sub
ficoms
pop
mov
stos
mov
jbe
add
divl
dec
add
ud2
cli
gs
push
jmp
mov
roll
xor
into
cmp
cmp
in
xor
aad
sbb
mov
dec
mov
jmp
outsb
in
mov
test
adc
hlt
cmpsb
ljmp
jle
dec
sub
sub
leave
mov
jns
mov
xor
cmpsb
movsl
mov
jae
push
and
cwtl
into
mov
and
repz
lea
dec
aam
stos
pop
gs
lret
mov
mov
xchg
cmp
pushf
pushf
hlt
imul
or
mov
dec
and
repz
push
enter
enter
sahf
mov
fnsave
cmp
jge
pop
mov
mov
inc
test
inc
jmp
nop
outsb
adc
sbb
js
jmp
dec
jmp
mov
loop
inc
mov
adc
outsl
data16
lods
call
mov
test
inc
jbe
ja
jne
add
add
js
les
rcl
call
jae
les
rorl
add
add
jle
les
jmp
ja
jbe
ja
js
add
add
sbb
push
xchg
pop
push
call
jne
les
je
ror
cld
push
inc
pop
call
jnp
add
push
ret
jmp
sub
jne
mov
mov
shr
add
jmp
jbe
add
add
ror
mov
call
jmp
ret
call
jmp
dec
or
sub
js
jns
call
add
mov
inc
ror
call
jmp
mov
int
out
cld
sub
sub
push
call
jno
les
inc
mov
je
jne
jge
add
add
dec
add
call
jmp
add
push
ret
call
jmp
xor
ror
add
jle
jg
jmp
add
popa
addr16
jne
call
jge
add
push
ret
mov
mov
fbld
pusha
loopne
int3
sbb
lea
insb
pop
adc
jo
jnp
fcomps
popa
rcr
daa
cmpsl
dec
xchg
sub
sbb
loopne
adc
lret
stc
addb
fcmovne
in
push
in
mov
ljmp
fcomip
outsl
and
jbe
hlt
xchg
pop
push
lret
mov
out
jae
mov
add
xchg
inc
and
sub
cmc
lods
sti
add
cmpsl
add
cwtl
iret
push
adc
sub
push
icebp
hlt
jp
jns
shlb
out
xchg
sbb
push
ss
int
push
mov
adc
js
addr16
rcrb
mov
lahf
call
pop
adc
add
mov
mov
xchg
pop
aad
mov
or
jbe
test
cmp
stos
push
add
pop
add
add
dec
jns
imul
cmpl
fbstp
lds
xchg
lret
rorl
into
cmp
mov
hlt
movsl
jbe
addb
test
sub
dec
xchg
push
xchg
mov
pusha
rclb
ret
ficoms
repz
push
pop
mov
xchg
je
fnstenv
arpl
mov
fs
icebp
add
push
mov
aas
rcl
mov
jmp
mov
cwtl
xor
in
in
pop
cmp
dec
jno
dec
pop
sub
fcomps
out
aad
cli
cmp
or
in
add
stc
daa
dec
xor
test
inc
insb
add
in
mov
inc
xchg
popf
cltd
mov
cmp
stc
mov
lret
jnp
jae
inc
movsb
call
lahf
mov
jae
repz
sbb
cmpsb
hlt
es
clc
outsl
mov
movsb
mov
shrl
lock
std
jns
push
stc
xor
dec
xorb
or
shlb
cmp
mov
mov
mov
inc
inc
xor
mov
lidtl
test
leave
ror
or
pop
push
lahf
or
inc
push
loope
arpl
mov
hlt
inc
xchg
push
daa
imul
jno
and
fistl
stc
fnstenv
pop
jg
jae
enter
rcrb
add
push
mov
mov
pushf
popf
and
mov
xor
ss
mov
sub
imul
mulb
enter
ja
cmpsl
enter
jae
pop
pop
cltd
bound
xorb
jge
movb
negl
outsb
pop
push
stc
lock
fnstcw
cmp
push
insb
incl
ljmp
push
jl
adc
push
xor
stc
pushf
xlat
inc
lds
pop
pop
mov
insb
jl
lret
outsl
xchg
test
int
cmpsl
out
cmpsl
and
lret
daa
outsb
sbbb
jmp
test
imul
sti
dec
push
aam
and
push
insb
mov
inc
lods
add
add
lret
insl
mov
xchg
pop
jl
sub
mov
sub
or
add
ljmp
dec
adc
scas
leave
sub
lret
testl
clc
fwait
or
sbb
pop
pusha
pop
xlat
mov
popf
dec
pushf
or
cmp
sub
popf
inc
mov
mov
insl
mov
int
test
bound
push
mov
or
add
roll
xor
add
into
and
imul
jecxz
movaps
mov
sti
sub
fisttpl
mov
pop
lock
insl
dec
insl
push
sbb
xchg
mov
in
loopne
lret
inc
fwait
sbbl
pop
push
loop
pop
outsl
inc
push
fmul
enter
and
pop
aam
aam
pop
ss
and
scas
stc
das
outsl
pop
adc
or
sub
xchg
jge
jg
jnp
aad
cmpl
cmp
xchg
test
enter
out
mov
sahf
faddl
int
jb
sbb
mov
xor
cmp
int
cmp
pop
les
repnz
pop
push
cld
fnstenv
divl
notl
lock
xchg
popa
pop
cmc
into
repnz
iret
mov
es
xchg
xchg
rcll
gs
nop
push
add
dec
outsb
pop
in
sar
out
mov
push
pop
outsl
daa
mov
adc
lods
loope
and
pushf
jmp
push
sub
xchg
dec
dec
and
inc
shll
sub
jbe
sbb
fscale
lods
insl
bound
push
xor
xlat
jmp
out
jb
mov
mov
mov
mov
sub
cmp
xchg
xor
jne
in
js
mov
outsb
mov
cltd
mov
sti
pop
fldz
leave
enter
push
movsb
xchg
xor
jns
in
inc
mov
mov
ret
push
or
insb
push
adc
mov
rorl
mov
mov
push
sbb
pop
test
out
out
mov
cld
xchg
cmc
stos
pusha
push
addb
inc
add
dec
out
cmp
mov
vaddpd
addr16
pop
pusha
and
sbb
inc
lods
cmpsl
sbb
push
fwait
ljmp
jbe
fs
imul
in
xor
das
xorb
add
add
ret
fisttpll
or
js
shl
xchg
dec
or
jbe
ja
test
and
jbe
pop
lcall
je
nop
lea
jne
fsub
andb
test
mov
xor
aaa
mov
fcmovbe
not
cmp
cmc
stos
and
jb
mov
xor
push
push
xor
jo
mov
mov
inc
pop
ds
repz
aam
sahf
add
ret
cmp
stos
lret
inc
movhps
repnz
jnp
jbe
adc
movsl
xlat
mov
cmpsb
adc
rcrl
and
sbb
dec
mov
fimuls
or
in
testb
cmp
fst
or
push
xor
test
mov
mov
jo
cmp
insb
sbb
outsb
arpl
jp
ret
ret
mov
sbb
int
ret
jbe
shr
mov
xor
mov
ja
fiaddl
shlb
sbb
add
int
and
sub
add
or
sahf
js
rol
inc
aas
and
cltd
cmp
or
cmpsb
xchg
push
xchg
push
das
les
cmc
and
out
push
sarl
sub
pop
out
pop
addr16
mov
xchg
es
je
mov
mov
bnd
add
push
repz
pushf
mov
mov
dec
inc
imul
jne
push
xchg
gs
xor
je
cmp
dec
call
xor
pop
add
mov
adc
push
pop
sti
mov
sbb
lds
lret
shlb
add
inc
js
int3
out
cmp
js
loope
adc
add
add
decb
fsubl
iret
jnp
fs
push
xchg
iret
aas
add
repnz
mov
jb
fisttpll
push
inc
mov
movsl
push
mov
shrb
popa
mov
lgs
push
inc
fistpll
pop
or
xchg
popf
xchg
adc
imul
dec
sbb
dec
lret
sub
or
cmp
sbb
cmp
adc
pop
push
inc
in
ljmp
or
leave
daa
divb
adc
mov
sahf
enter
mulb
cmp
add
and
inc
hlt
jecxz
stos
cmp
or
ja
dec
fldt
sub
fucom
clts
ljmp
xor
or
adc
dec
sarb
imul
sub
xchg
lea
lcall
pop
stos
dec
and
inc
add
stos
mov
lds
cmp
mov
cmpsb
jl
or
cltd
mov
pop
loop
movsb
push
inc
rcll
ficomps
out
adc
hlt
pop
dec
shll
inc
xchg
cmpsl
int3
test
out
xchg
inc
sbb
pop
outsb
push
out
mov
test
mov
imul
mov
in
jmp
adc
adc
pop
int3
fs
testl
mov
sarl
rolb
lahf
cli
lcall
inc
lret
aaa
js
test
jmp
ja
jno
repz
ja
mov
aaa
jns
inc
out
in
pop
sub
pop
xchg
pop
jb
xorb
test
cmp
jle
repnz
ror
loop
push
mov
mov
inc
xlat
jb
jo
lret
fisttpll
les
dec
subb
xchg
pop
add
mov
push
mov
xor
mov
xchg
or
mov
and
rorl
frstor
jecxz
pop
shll
xor
or
sbb
sti
add
call
xor
out
sub
sbb
pop
test
dec
stos
and
shl
push
fldt
loop
es
dec
xor
mov
push
or
mov
adc
add
mov
fisubs
add
flds
mov
stc
mov
dec
dec
popa
xor
push
pop
jbe
pop
push
pusha
adc
mov
js
sbb
loopne
rcll
stos
mov
fidivrl
mov
adc
cmpsb
inc
leave
repnz
scas
xchg
add
mov
lea
in
jle
cs
jmp
lds
xor
stos
xchg
leave
xchg
icebp
jl
hlt
and
iret
enter
dec
aas
mov
lds
cwtl
mov
dec
push
and
push
ja
jns
rcll
cmc
inc
fstpl
rol
pop
test
xchg
pop
pop
sub
daa
into
pop
sbb
mov
shlb
sti
sub
lock
jp
jge
jbe
jbe
add
or
mov
mov
xor
aaa
cltd
addr16
and
xchg
orb
cmc
sub
add
sub
cmc
mov
mov
xchg
push
sub
or
cmc
xor
lahf
mov
and
xchg
mov
xchg
jb
lret
xchg
adc
cmpsb
and
push
ljmp
and
arpl
mov
add
lds
or
pushl
add
lods
bound
lds
sub
andl
jle
sbb
cmpsb
fstpl
test
mov
mov
arpl
lds
dec
daa
movsl
xchg
fsts
adc
push
fst
sbb
mov
push
clc
dec
lods
test
jbe
adc
push
aaa
sbb
dec
ds
push
iret
or
test
inc
test
lret
and
cmp
enter
push
jg
jg
push
movsb
xor
pop
add
mov
int
rcll
push
movsb
mov
or
insl
xor
mov
cmp
fistpl
jne
loope
call
jae
inc
lahf
lret
gs
dec
repz
rclb
ficomps
sub
mov
xor
in
sbb
push
mov
xchg
lock
fbstp
mov
in
nop
jp
xor
in
mov
xor
add
add
out
mov
outsl
je
inc
jp
push
clc
jno
fcmovnb
sub
jmp
push
std
popf
lods
pop
pop
pushf
rcr
jle
popf
in
test
jge
pop
into
rclb
fwait
sbb
mov
enter
cmpsl
popa
inc
ljmp
xchg
lock
or
repnz
cld
mov
insl
scas
and
push
cmp
rorb
ret
pusha
shrl
push
icebp
push
jns
sub
jns
xor
lret
cmc
aas
jns
dec
test
or
mov
das
clc
cmp
mov
inc
push
xchg
mov
inc
xor
jg
or
mov
popa
pop
jb
add
out
rcll
cmpsb
sahf
inc
outsl
lock
andl
sbb
fucomip
add
negb
cmp
fsubrl
xor
sti
xchg
mov
and
pop
jp
adc
or
mov
dec
sub
dec
int3
icebp
sbb
push
ds
inc
daa
add
adc
mov
shl
xor
and
dec
mov
jne
and
dec
xlat
cmc
mov
jne
popl
push
or
mov
dec
pusha
and
sub
mov
mov
cmp
or
mov
push
mov
popl
rcrb
xchg
push
dec
mov
das
cmpsl
loop
pop
cmpsl
mov
mov
loop
aad
push
cmpsl
ret
pushf
add
push
das
movsb
enter
mov
dec
sbb
adc
mov
cmp
add
push
jbe
dec
sti
mov
out
cmp
in
push
fs
xchg
mov
jb
jb
mov
fldcw
aad
cmpsl
mov
push
dec
movsb
into
fcoms
js
and
fcoml
push
fistl
jmp
jno
dec
std
adc
clc
and
test
outsl
xlat
jg
sub
cmc
aas
dec
aam
sbb
xor
inc
cmpsl
sahf
popf
or
xchg
and
pop
dec
rclb
dec
cs
enter
add
mov
daa
lods
sbb
andb
iret
jl
das
movsl
fnstcw
jmp
jg
lret
mov
das
orl
and
cmp
pop
add
sbb
cmp
cmc
push
clc
das
xchg
ss
js
scas
push
sub
lahf
xchg
repz
push
daa
pop
mov
stc
hlt
sbb
adc
std
and
sahf
and
clc
jge
pop
into
out
pop
mov
xchg
stc
enter
or
gs
scas
xchg
loop,pt
out
inc
xor
jl
mov
enter
test
dec
movsl
loop
fisttps
mov
or
xor
push
sub
cwtl
incb
add
add
mov
xor
dec
andb
dec
push
data16
cmc
pop
imul
mov
mov
dec
test
mov
cmp
pushf
adc
cmpsb
mov
pop
out
addl
mov
add
stos
sub
cmp
sub
cld
sbb
test
divl
clc
in
daa
iret
inc
push
ret
rcrb
mov
out
xchg
mov
push
fbld
std
je
pushf
test
in
test
jp
mov
dec
pop
jnp
mov
jg
aam
and
jmp
inc
repz
outsb
push
aad
dec
pop
pop
insl
push
jae
fldcw
fidivs
push
or
outsl
stc
call
pop
xchg
arpl
stos
cs
fwait
push
push
dec
imul
rcrl
lret
mov
lret
mov
loope
enter
pusha
stos
mov
add
add
clc
mov
test
fisubs
dec
lds
std
nop
and
xor
shl
pop
movsb
lea
inc
lcall
je
shl
std
fs
repnz
jmp
sub
dec
adc
mov
xor
push
mov
mov
loope
popf
mov
push
pop
mulb
scas
sub
andl
icebp
xchg
out
add
movsl
pop
or
mov
test
xlat
test
jge
mov
fst
jge
xrelease
scas
inc
jns
cmp
mov
ja
jnp
xor
aam
aad
call
leave
shll
push
jmp
dec
cmp
pushf
pop
jecxz
cmpsl
inc
pop
sbb
mov
mov
les
pop
mov
mov
jns
push
cmp
mov
rorl
mov
jnp
dec
mov
pusha
mov
lahf
dec
push
dec
ror
inc
sbb
mov
scas
adc
mov
xor
clc
dec
std
outsb
jmp
xor
fnop
loop
out
sub
in
insb
aam
inc
sar
dec
into
mov
testl
stos
aas
mov
leave
in
cld
push
retw
fs
mov
jne
lret
mov
les
adc
xor
pop
mov
cmp
subl
mov
ja
pop
nop
fwait
xorl
pop
jl
rorb
push
cmp
repnz
dec
in
mov
sub
addr16
cmpsl
mov
jae
add
inc
lock
cmp
or
sub
jb
and
fnstcw
popf
sbb
inc
pop
and
or
fstps
jno
gs
ss
fs
out
jb
nop
cmp
rorl
sub
pop
cmp
jne
test
dec
or
cmp
and
leave
leave
cmp
sub
add
add
loop
mov
je
lods
lret
mov
pop
xchg
mov
daa
ja
cmp
clc
int3
add
xor
movsb
pop
or
popl
in
sti
pop
mov
in
in
or
fldl2e
popf
mov
out
and
mov
fwait
cmp
inc
pop
and
pop
int
sbb
fstp
out
add
and
loope
mov
sub
cmpsl
pop
xor
and
cmp
pop
je
test
stc
shll
scas
lcall
inc
mov
sbb
mov
std
pop
or
sub
and
stc
dec
add
fcmovnbe
mov
mov
fcompl
xchg
in
xor
mov
aaa
shll
lea
sbb
sub
jne
inc
mov
xchg
xchg
loop
mov
gs
es
insl
frstor
inc
xor
adc
xor
or
dec
mov
stos
mov
and
mov
cmp
cmc
mov
fstpt
cmp
mov
stc
mov
jae
out
adc
popf
test
mov
cmp
call
pop
test
test
gs
ja
cld
mov
jno
cmpsl
movl
insb
fcmovnu
dec
add
jecxz
inc
or
mov
pop
in
rcll
and
dec
push
or
ret
andb
fs
mov
pushf
repnz
stos
sub
andb
adc
adc
inc
sub
or
mov
pushf
mov
aad
adc
push
cmp
jb
sbb
xchg
and
loope
sahf
push
dec
jg
popf
sub
sbb
bound
scas
fs
and
mov
dec
aad
notl
std
jns
imul
jg
cmc
add
push
les
stc
popf
or
test
inc
add
add
flds
call
movsb
gs
sbb
stos
dec
dec
xlat
test
or
loopne
repnz
push
in
fcoms
mov
dec
jne
int3
lods
jg
push
int
xor
push
cmp
mov
pushl
es
mov
js
push
adcl
pop
enter
dec
mov
mov
sub
pushf
and
in
xchg
pop
or
aaa
inc
loop
pop
hlt
push
test
or
test
cmp
sbb
inc
mov
shr
jp
jg
sahf
pop
or
and
stos
xor
xchg
addr16
arpl
cmpsl
and
mov
aam
and
cmpb
in
xchg
daa
je
mov
sub
jp
frstor
lock
xchg
xchg
jl
add
xor
aad
push
inc
xor
mov
sub
scas
fcoml
iret
pushf
xchg
sbb
inc
jl
pop
pop
mov
rcrb
adc
mov
imul
fisubs
pop
xchg
lret
stos
loop
push
outsl
cmp
test
ja
aam
sbbb
cmp
mov
test
stos
fwait
rolb
pop
mov
add
mov
leave
ret
mov
popf
fidivl
faddp
enter
adc
test
fdivs
pop
sub
lret
push
rorb
rolb
aam
add
xchg
or
or
xchg
ficompl
dec
push
gs
int
xchg
fnsave
mov
cmpsb
jmp
repnz
xchg
pop
or
jg
test
and
xlat
mov
add
dec
sub
add
add
mov
scas
jmp
pop
or
fxtract
mov
and
jno
fisubrl
sti
repnz
dec
fistl
lret
mov
fldcw
add
adc
test
negl
pop
cwtl
fistpll
insl
scas
jl
inc
loopne
mov
stc
rcll
clc
pop
xchg
loope
fstps
lods
nop
test
mov
imul
mov
scas
arpl
scas
loop
pop
leave
mov
nop
mov
mov
dec
out
mov
mov
mov
mov
stos
sub
ret
enter
jno
rolb
dec
pop
mov
or
std
pop
imul
aam
mov
cmp
in
lock
stc
add
mov
jp
imul
rcrl
outsl
mov
mov
mov
push
inc
or
ljmp
mov
enter
sbb
popa
pushf
xchg
movsb
mov
bound
out
pop
out
clc
fs
mov
loope
inc
inc
and
fcoms
adc
xchg
and
push
mov
lret
ret
and
inc
in
mov
clc
push
cmp
sbb
push
pop
sahf
or
dec
sub
addr16
and
stos
sbbb
enter
dec
cwtl
cmp
call
sbb
sti
mov
cmp
pop
gs
cmp
sub
sbb
std
sahf
inc
loope
push
mov
or
fcoml
stos
xlat
cmc
mov
fwait
push
pop
cwtl
inc
adc
int3
xor
aad
insl
popa
xor
mov
sub
mov
mov
push
mov
cwtl
movsb
leave
and
iret
sbb
jb
and
outsl
call
les
pop
test
xor
in
add
loop
shrl
adc
jno
and
aaa
outsb
or
push
jl
into
sbb
add
in
sbb
cld
push
pop
cmpb
movsb
ret
jne
jle
jle
mov
hlt
cltd
pop
cs
sbb
movsb
add
js
mov
or
negb
push
out
in
leave
push
fadd
inc
xchg
test
cs
pop
dec
mov
jmp
sub
shll
mov
loop
das
xchg
sbb
add
call
cmpsb
xor
sbb
cs
sti
in
adc
add
mov
movsl
aaa
fcom
xor
mov
push
loop
push
sbb
xchg
ds
jmp
mov
pop
imul
popf
das
xchg
pop
cmp
cltd
sub
mov
cld
push
popf
xchg
or
ja
xor
ror
es
hlt
mov
push
jmp
stos
push
ret
fdivl
cmp
add
or
mov
push
addr16
insl
xchg
adc
lahf
lds
jmp
sub
outsl
loopne
ret
push
xor
inc
stc
mov
xor
out
in
sbb
add
adc
pushf
mov
int3
lods
mov
xor
stos
jo
mov
fst
or
push
popa
loopne
dec
in
int
and
shll
add
test
stos
cli
in
jno
pop
mov
outsl
xor
inc
mov
idivb
add
xor
mov
dec
cwtl
cmp
stos
aas
clc
loopne
out
stos
into
adc
les
mov
sub
in
lret
inc
inc
pop
stos
dec
mov
mov
xchg
in
pop
jne
imull
lea
pusha
hlt
lock
hlt
sbb
shl
pushf
mov
lahf
mov
imul
xchg
bound
add
leave
add
jno
mov
cli
enter
sbbb
jmp
daa
dec
pop
add
shll
xchg
enter
ja
xor
mov
and
addr16
cmp
jle
adc
xchg
mov
push
ret
in
movsl
mov
sbb
rcrb
pop
sbb
dec
adc
cmp
bound
dec
test
inc
loopne
add
lds
shl
mov
pushf
jmp
mov
fnstsw
stos
and
push
les
icebp
sub
in
pushf
push
pop
imul
dec
incb
inc
jne
fisubs
push
pop
xor
insl
jecxz
data16
inc
mov
sbb
jl
icebp
mov
pusha
xor
test
adc
stos
and
test
and
les
negl
popf
pop
int
lret
mov
push
mov
hlt
roll
push
jg
lods
push
rclb
add
cmp
pop
pop
lcall
gs
je
jae
inc
dec
lret
mov
push
cs
jmp
negb
aad
cwtl
ljmp
xchg
daa
leave
das
fistpll
pop
adc
test
sar
lcall
and
cmp
dec
data16
dec
test
cmp
adc
mov
jle
lock
and
mov
cmp
xor
sbb
pop
aaa
es
in
inc
stos
out
push
fwait
mov
fldcw
in
dec
fistpl
add
ret
inc
pop
mov
sub
add
fcomps
cmp
cmpsl
mov
mov
adc
loop
incb
push
pop
jne
sahf
mov
lds
fldl
pop
testb
imul
push
mov
sbb
mov
xchg
fstps
cmovge
lock
outsb
or
pop
repnz
sbb
mov
mov
inc
push
or
or
fcmovnb
aam
pop
sub
jns
int
call
add
into
scas
decl
inc
into
xor
roll
aaa
add
add
test
stos
xor
mov
in
testl
push
push
sub
lahf
das
inc
lea
dec
mov
xchg
jno
push
insl
xor
add
xchg
lds
jmp
and
pusha
dec
aam
xor
adc
std
fcoms
mov
cld
aas
dec
jp
jae
xchg
ret
and
and
mov
jecxz
mov
cmp
popf
dec
repz
adc
and
mov
fmuls
adc
xchg
enter
push
fiaddl
cmpsl
cmp
cltd
pusha
mov
insl
fbstp
adc
jbe
hlt
ja
xor
mov
es
mov
or
mov
mov
lea
pusha
cs
pop
sbb
xchg
push
pop
jl
push
push
xchg
loope
fisttps
addl
mov
loope
or
cmp
cmp
xchg
mov
jle
mov
mov
adc
mov
andb
pushw
mov
insl
psrad
aas
cmp
scas
lea
jl
push
jb
test
add
nop
movsl
mov
faddl
in
cmp
mov
jl
addr16
xor
lods
jle
lret
in
call
std
dec
lea
push
stc
movsl
lods
add
sarl
shrb
mov
xor
pop
jmp
sbb
xchg
dec
das
sbb
call
inc
cmp
jae
fs
stos
push
mov
andl
mov
mov
lds
aaa
sbb
xchg
add
loop
arpl
loope
xlat
adc
mov
insl
dec
fiadds
cld
mov
imul
add
jns
shl
pop
push
sub
add
cmp
inc
outsb
stos
jge
sbb
mov
mov
and
inc
and
icebp
test
pop
xchg
sbb
adc
mov
mov
inc
fldcw
nop
mov
push
pop
hlt
push
insl
inc
or
cmc
xchg
mov
stc
js
pop
xor
lret
fisubl
or
jl
inc
push
mov
jnp
jbe
and
xor
push
shrb
xor
sar
mov
xchg
push
adc
scas
testl
std
xchg
and
fnstenv
lret
testl
pop
mov
test
lret
test
mov
cld
movsb
cmp
xchg
imul
mov
ljmp
mov
inc
push
les
xchg
xor
xchg
aam
xchg
cmp
push
dec
fldl
mov
shlb
js
adc
mov
ljmp
push
aad
cmpsl
rolb
and
sti
clc
jns
mov
mov
inc
imul
mov
loop
cltd
lcall
out
push
fwait
push
in
ds
imul
dec
and
ret
xor
mov
cmp
enter
cli
nop
cmp
mov
and
push
sub
pop
scas
mov
sbb
sub
sbb
pop
or
jb
nop
add
mov
rol
cli
sbb
sub
xchg
jno
jmp
lods
cli
mov
sahf
outsb
aam
rolb
or
stc
lcall
jmp
aad
test
cmc
iret
loope
xor
inc
jnp
movsl
lret
shl
xchg
aad
mov
aam
mov
mov
jnp
mov
jb
mov
adc
rcrb
cmpsl
add
mov
shlb
pop
dec
stos
dec
inc
cmp
mov
test
cli
jo
test
out
jge
ljmp
je
jmp
stos
std
shrl
js
gs
inc
shlb
minps
xchg
std
mov
jle
lret
outsl
orb
push
pop
aam
rorl
shlb
cli
loopne
arpl
outsb
leave
cltd
pop
and
pop
dec
aaa
sbb
adc
mov
imul
mov
sbb
in
scas
fcompl
fwait
xchg
je
fnstsw
outsb
adc
xchg
enter
jecxz
mov
sbb
jae
inc
inc
stos
imul
loopne
sarl
mov
push
sahf
pop
lahf
shrb
adc
or
or
stos
mov
xchg
push
cmpsb
push
inc
xchg
push
cmp
jno
sub
xor
shll
pushf
push
mov
fs
push
adc
inc
popf
stc
mov
orb
sarb
inc
cmpsl
std
and
popa
mov
jecxz
pop
or
shl
dec
add
fisttps
pop
int3
or
push
lret
fadds
repnz
pushf
lods
cmp
montmul
cmpsb
pop
pop
mov
movsb
lahf
push
test
stos
jl
pusha
cmpsl
scas
scas
lds
lret
pop
out
xchg
inc
mov
mov
add
dec
daa
sub
lahf
sub
popf
arpl
add
and
inc
adc
sub
int3
mov
and
lock
push
inc
xchg
jae
fwait
add
mov
ja
bound
xchg
sarl
sbb
add
xor
in
or
dec
sub
xchg
xlat
lahf
repz
gs
out
js
sub
in
sub
sub
mov
adc
test
ja
dec
call
sub
les
push
cmc
pop
ret
shll
mov
das
and
add
shr
in
test
adc
aam
add
rcll
fbld
jb
sbbb
and
sub
xor
cmp
imul
jmp
loop
pop
sbb
xchg
sbb
mov
jbe
cmp
dec
jp
dec
in
jmp
movsb
popf
cmpsb
outsl
int
lcall
sbb
and
fldt
rcl
sbb
sbb
inc
test
movb
mov
mov
hlt
add
subb
and
mov
inc
mov
repnz
push
addb
xchg
shll
xchg
testl
and
ja
xchg
rorb
add
jl
push
dec
pop
jae
sub
ljmp
or
add
add
push
movsb
iret
adc
nop
jge
mov
jp
dec
into
cmp
adc
xlat
sub
stos
push
cmp
jmp
pop
scas
fiaddl
mov
fidivrl
xor
movsb
dec
jbe
adc
adc
and
jp
ret
ss
pushf
nop
jae
or
idivl
movsb
inc
pop
jo
bnd
lahf
mov
mov
les
jo
enter
int3
pop
out
pop
pushf
sarl
jmp
or
ret
and
das
mov
xchg
jbe
pop
int3
sbb
and
pusha
pop
stos
xor
adc
decb
cld
push
inc
mov
addl
jne
push
test
addr16
lret
dec
cwtl
push
dec
xchg
xchg
ss
ret
xor
inc
cmpsb
mov
out
mov
shl
repz
test
in
and
dec
call
lock
ss
push
jns
mov
out
pusha
bound
mov
out
nop
jns
jle
movsb
mov
sti
inc
mov
bound
lret
cld
fdivr
cltd
jno
fs
es
scas
nop
cmp
pop
dec
subb
ss
inc
and
adc
nop
cld
outsl
bnd
mov
or
xchg
sbb
or
push
je
cmp
mov
mov
data16
mov
xchg
lea
cmpsl
mov
lahf
adc
xchg
cmp
pop
push
xchg
xor
mov
jns
mov
add
aas
bound
inc
lea
mov
mov
lret
in
imul
insl
ja
mov
mov
inc
test
pop
push
adc
jne
inc
cmpsl
sub
add
mov
push
sahf
dec
add
xchg
xor
loop
inc
jge
cmp
les
mov
add
add
inc
inc
adc
push
add
push
stc
pop
stos
ret
push
fmulp
pop
fs
stos
fmull
push
jle
and
xor
mov
cmpsb
pusha
pop
lahf
sbb
xchg
jp
mov
lret
fdivrl
cmpsl
adc
jns
cmp
and
adc
and
jae
subl
fldenv
add
pop
es
xor
jmp
lods
cmp
imul
mov
adc
cmp
rorl
mov
push
mov
movsl
lock
add
aad
mov
aas
aam
cmp
jbe
sub
adc
push
mov
or
cmp
sbb
inc
jl
cmp
push
rclb
adc
push
pop
xor
cmc
inc
shr
outsb
xchg
loop
jo
adc
add
add
dec
movsl
je
jae
adc
enter
test
lea
push
cmp
dec
adc
es
inc
pop
push
jecxz
and
lods
sub
repnz
pop
jl
jnp
inc
add
bound
jo
hlt
xchg
pop
cwtl
sahf
add
jno
jns
push
loope
pop
rcrl
dec
fldenv
xor
mov
sub
xor
mov
dec
cltd
addr16
loopne
sub
fst
into
dec
inc
sbb
inc
xor
repz
outsl
adc
sti
ret
push
push
lahf
xlat
jno
nop
je
and
loop
sub
push
fmuls
lock
lcall
lret
jecxz
mov
sub
imul
dec
or
les
jmp
rcrb
leave
or
sub
or
lock
test
mov
mov
adc
pop
repnz
inc
enter
xchg
nop
mov
popa
mov
sbb
std
aad
push
lods
add
mov
mov
in
sbb
push
out
pop
lea
xor
hlt
loope
repnz
xchg
pop
and
call
movsl
insl
test
ja
in
lods
add
repz
icebp
sub
push
mov
inc
jb
imull
sti
imul
in
or
jle
xlat
dec
repnz
mov
adc
mov
push
lods
jno
mov
test
push
fwait
ljmp
push
pusha
mov
sub
pop
xor
out
pop
sub
add
add
inc
pusha
push
push
pop
fldcw
mov
loop
jecxz
mov
aad
scas
ret
mov
aas
cmp
in
cwtl
inc
test
pop
sbbb
test
xor
cli
xlat
ret
ja
push
shlb
stc
addr16
testl
pop
push
stos
xchg
test
mov
add
je
jae
pushf
into
pop
adc
sbb
mov
ja
xor
dec
movsl
ret
pop
mov
imul
push
mov
jae
pop
sub
icebp
mov
aas
scas
es
in
inc
icebp
xor
add
lods
insl
fbld
out
pop
or
jl
ss
cmp
scas
mov
unpckhps
into
sub
push
pushf
icebp
or
xor
loope
cmp
imul
mov
push
stos
pop
sub
movsl
rol
sub
pop
gs
js
xorb
ja
pop
outsl
addb
pop
out
out
pop
xor
dec
lock
cltd
mov
mov
aas
jb
add
push
daa
std
sti
dec
jge
jb
pop
xlat
jbe
div
push
sbb
aad
js
mov
lret
mov
test
xor
icebp
adcb
hlt
test
pop
pop
insb
movsl
popf
mov
add
mov
add
adcl
inc
adc
inc
mov
and
mov
mov
fstpl
mov
int3
fsubs
pushf
int3
popf
dec
dec
cmp
xchg
jge
xor
push
aad
lret
xor
sub
int
cmp
idivl
ret
jbe
clc
and
pop
scas
jge
jnp
or
mov
aad
mov
jge
or
add
inc
sbb
insb
and
add
imul
pop
leave
fstl
push
hlt
jg
pop
lock
or
dec
or
gs
adc
test
pop
xlat
lods
iret
scas
mov
addr16
and
arpl
aas
test
push
sbb
ret
ja
and
rolb
andb
enter
pop
in
mov
inc
stos
sub
push
in
in
jno
adc
ja
mov
bound
ljmp
and
push
mov
enter
mov
add
scas
xchg
inc
movsb
xchg
pop
push
mov
jl
mov
test
mov
inc
imul
jmp
dec
lcall
dec
mov
and
lea
sbb
inc
dec
dec
scas
test
inc
push
dec
xor
jo
stos
in
test
nop
int3
lods
cli
push
pop
add
loope
sbb
aad
fildl
mov
xor
insl
fs
push
scas
mov
std
mov
gs
aad
xchg
pop
mov
test
xor
lret
lcall
add
in
das
scas
stos
mov
in
sbb
std
xchg
les
or
mov
or
loope
sub
jp
inc
repnz
subb
shrl
mov
inc
mov
add
sbb
mov
je
jg
xchg
add
insl
or
pop
adc
shll
cltd
je
pop
repz
shlb
std
pop
aam
gs
aaa
pop
xchg
fwait
and
add
add
cld
popa
or
push
out
jns,pt
xchg
mov
in
popf
add
inc
push
jge
mov
mov
bound
cmp
lea
fsubrl
data16
out
sub
sti
test
mov
mov
sbb
pop
sub
jbe,pt
lods
adc
filds
xchg
mov
pusha
xchg
sub
insl
bnd
fs
pop
shll
xchg
cld
lock
inc
lea
mov
les
std
std
add
into
cmp
dec
popf
movsl
mov
adc
sub
sahf
sbb
cmpb
adc
insb
and
jne
lret
fxam
ljmp
or
test
call
mov
adc
xor
cmp
in
mov
ds
dec
sbb
sub
xor
cmp
xor
adc
add
in
or
xlat
mov
push
sub
xor
sbb
jns
sub
or
pop
push
outsb
xchg
xor
sub
clc
mov
push
or
adc
jno
jl
push
or
sub
popf
sub
in
push
jl
push
add
and
pop
inc
pusha
sti
mov
lcall
mov
inc
xchg
gs
xor
cmp
or
ja
nop
pusha
xor
push
inc
xchg
aaa
loopne
or
push
fs
add
push
outsb
jno
mov
int
jl
shlw
add
es
clc
pop
dec
pusha
gs
mov
fsubs
dec
js
add
loopne
mov
dec
adc
ficoml
xchg
shlb
sbbb
dec
push
cmp
ret
and
xchg
push
popf
fs
lret
in
fnsave
lea
xchg
pcmpgtw
mov
xchg
fwait
lahf
xchg
mov
stc
xchg
stos
inc
add
jmp
or
call
cmpb
dec
xchg
and
movsl
dec
jecxz
xchg
pushf
and
xor
lret
pop
adc
pop
mov
pop
insb
out
faddl
out
shrl
inc
cmp
stc
adcl
xor
pop
fcoms
mov
xchg
inc
shl
inc
ja
or
inc
das
cs
in
push
pop
into
mov
nop
mov
rcr
mov
into
xchg
mov
xchg
loop
bound
jb
jne
adc
push
sbb
mov
nop
pop
out
popa
out
mov
xchg
divl
add
sahf
lahf
mov
test
in
push
outsb
sub
jnp
std
in
and
popa
inc
and
inc
jp
xor
sbb
sarb
jo
or
pop
inc
mov
cmp
pop
stos
and
push
add
add
mov
shlb
or
jbe
ret
sahf
stos
gs
std
jne
sahf
in
out
dec
mov
std
push
jp
int
adc
pop
push
hlt
cmc
xlat
push
mov
sbb
lea
adc
adcb
shll
ss
lret
clc
pop
or
xchg
mov
mov
mov
mov
jbe
and
push
inc
mov
stc
stos
jbe
pushf
sub
jge
int3
aad
sbb
push
loopne
inc
fistl
lret
jle
arpl
scas
pop
scas
repz
push
cmp
in
inc
inc
dec
inc
cli
adcl
or
or
xchg
push
insb
test
sbb
xchg
mov
fidivrs
push
or
mov
lret
inc
movsl
push
jl
cmovl
cli
sbb
stc
xchg
jns
jns
xchg
nop
incb
in
mov
xor
xor
mov
lret
jecxz
clc
add
push
call
cmpsl
stc
mov
movsl
cmp
jae
add
into
js
xor
jmp
pop
and
push
jecxz
adc
imul
pop
adc
lcall
cmp
mov
fidivrs
in
jnp
sub
mov
cltd
dec
inc
pop
jbe
dec
ret
jmp
outsl
lods
ss
sbb
jmp
inc
mov
xorl
mov
sbb
fsubp
je
jo
daa
std
jmp
jge
mov
lods
xchg
pushf
pop
jo
pop
pop
lds
out
jbe
inc
fnsave
pop
outsb
sti
pop
fwait
or
insl
lahf
stos
fincstp
pop
cmp
fsubl
nop
mov
in
or
mov
sbb
rolb
les
sub
in
add
pop
sub
test
cmp
jge
add
add
test
in
dec
dec
sub
icebp
dec
lahf
jbe
loop
pop
inc
pop
jno
jp
mov
cmp
mov
jmp
fwait
xor
lahf
jp
sahf
aas
and
je
pop
les
sahf
faddl
dec
mov
rol
clc
jp
scas
arpl
sbb
cmp
pop
cmp
loopne
es
jb
outsl
and
sarl
stos
lret
mov
inc
mov
xor
mov
test
sbb
lcall
jp
jae
icebp
test
pop
mov
cmpsb
lods
xchg
rorb
incl
ret
inc
fldl
push
rclb
push
cmc
jmp
jmp
aas
push
dec
or
cli
aad
in
mov
pop
push
cmp
js
adc
adc
mov
imul
sbb
xchg
std
xor
outsb
dec
jle
pusha
std
lea
and
dec
insb
nop
pop
mov
lcall
daa
push
pusha
shll
push
ret
stos
repnz
jns
loop
jmp
test
loope
mul
dec
movsl
insb
lds
imul
ja
pop
sti
add
and
mov
loope
mov
sub
into
xor
pop
aad
sahf
xor
clc
cmp
aas
xor
fdivr
ja
icebp
adc
std
pop
scas
sbb
je
ljmp
lret
or
jb
xor
stc
add
int
ja
mov
in
shrl
call
jo
push
aas
jecxz
and
xor
push
mov
pop
daa
lods
dec
mov
jae
ss
aaa
popa
lret
sbb
and
pop
cmp
pop
testl
mov
out
loope
xor
orl
rorl
aam
lock
cmp
pusha
cmp
jno
add
in
fidivl
mov
clc
inc
sub
int
enter
adc
je
cs
movsb
push
push
jae
int
add
out
pushf
stos
jae
pop
mov
dec
test
mov
adc
push
jnp
pop
jae
xchg
scas
dec
add
add
sub
pop
cltd
jge
jl
lods
adc
xchg
add
ror
loopne
jp
mov
sbb
stos
mov
fsts
dec
cmp
mov
loopne
hlt
leave
push
test
mov
jecxz
insl
es
pusha
cmc
push
jbe
xor
insb
xchg
add
add
lcall
inc
jne
or
ret
pop
out
or
shll
in
stos
icebp
lods
or
push
cmc
cmpsl
mov
sbb
or
fildll
push
inc
mov
movsl
jo
mov
leave
jb
cmp
rol
mov
fucom
ja
cmp
mov
or
push
int
xor
andb
data16
adc
into
pop
cmp
sub
inc
fs
adc
cmpb
lcall
mov
lods
adc
es
in
sbb
push
sbb
in
xchg
pop
sub
add
rcl
xor
pop
js
cmc
mov
lret
push
pop
or
or
xor
jg
inc
xor
push
xchg
rorb
or
sbb
mov
add
inc
inc
mov
rol
mov
and
or
mov
mov
sbb
ret
cmc
lahf
xor
call
das
shlb
mov
aas
ljmp
icebp
push
xchg
les
sbb
pop
enter
add
nop
mov
arpl
jmp
sbb
pop
xor
insb
loope
ret
test
push
and
push
jb
imul
js
pushf
mov
mov
mov
shrl
xor
subb
aaa
jg
adc
or
sbb
add
pop
xor
cli
add
xor
mov
add
sbbl
xchg
call
push
xchg
jo
or
scas
push
enter
stos
lea
test
xchg
imul
and
stos
das
ret
or
jg
xchg
adc
sbb
or
mov
pushf
es
cmp
ret
xchg
jg
add
inc
enter
sbb
inc
sbb
setne
gs
mov
jbe
mov
clc
push
jp
insb
inc
mov
and
jne
lret
mov
push
mov
push
mov
mov
mov
push
and
jns
mov
daa
pop
adc
arpl
les
add
pop
add
movsb
hlt
in
aam
dec
jae
adc
pop
lods
fidivrs
aas
jb
leave
fwait
shl
aam
mov
jno
mov
pop
adc
pusha
jb
or
out
into
mov
stos
ret
loopne
dec
and
add
add
cmc
jmp
cmp
cld
imul
inc
and
repnz
jg
jae
stc
lahf
out
push
sub
ret
les
xor
jne
movsl
inc
je
dec
cmp
movl
cltd
mov
pop
pop
out
sub
js
mov
mov
loop
lahf
cs
cli
xchg
xchg
orl
call
repz
mov
mov
mov
or
push
fstpl
xchg
lds
and
test
pop
insl
mov
pop
xlat
jb
insb
sbb
scas
pop
adc
pushf
rcl
leave
xor
mov
mov
push
adc
xchg
and
int3
fldl
push
jmp
je
dec
cwtl
pop
push
lret
repnz
fs
pop
add
test
test
mov
ja
pop
mov
rcrb
addb
push
movsb
loopne
scas
test
insl
cmp
xor
les
mov
mov
adc
xchg
lds
ja
adc
push
orl
loopne
push
mov
push
dec
mov
xor
aas
dec
push
xor
inc
push
mov
and
lea
cwtl
arpl
push
inc
push
mov
add
jmp
out
dec
flds
int3
push
fidivs
inc
sbb
mov
fisubl
leave
sub
sub
idivb
test
into
xchg
jb
loope
pop
adc
test
ja
adc
fbstp
adc
mov
lret
test
scas
rclb
filds
lret
pusha
lahf
lret
cmp
dec
stos
sti
js
xchg
insl
rol
push
icebp
add
xor
mov
fwait
clc
inc
dec
aaa
hlt
adc
add
roll
cmp
dec
loope
jo
cmp
cld
lods
xlat
push
sbb
outsb
int
inc
notl
pop
inc
outsl
jns
cmp
or
xchg
inc
xor
insl
push
out
xor
imul
icebp
mov
jne
jb
hlt
test
cmp
xchg
jne
pop
pop
push
and
xorl
sub
pop
pushf
and
adc
icebp
insb
mov
sub
in
jbe
int
sbb
clc
add
jmp
adc
es
inc
stc
adcl
xchg
arpl
test
das
xor
adc
adc
mov
jg
scas
jmp
lret
es
fistps
add
arpl
insb
ret
fisttps
xchg
das
adc
lock
je
dec
dec
push
xlat
stos
lods
adc
aaa
add
adc
lock
jae
stc
xchg
lahf
mov
jmp
jno
sar
mov
push
scas
sbb
xor
ficomps
pusha
movsb
xchg
xchg
jge
pop
pop
andnps
mov
leave
pop
jp
sbb
fwait
dec
push
mov
sbb
adc
cmp
sub
push
jae
jno
fnop
jmp
lods
jnp
mov
sbb
dec
adc
test
mov
and
dec
or
fnstenv
or
xchg
push
popf
fwait
jmp
pusha
jnp
push
ret
movsb
int3
push
and
in
pop
xchg
outsb
pushf
das
inc
add
cmc
jecxz
mul
push
add
scas
int3
dec
push
xchg
sub
lea
dec
in
data16
data16
or
adc
into
gs
aam
in
dec
outsb
mov
jmp
inc
sbb
pop
pop
jbe
enter
sti
movsl
dec
mov
nop
test
xchg
mov
mov
adc
adc
xchg
nop
sub
in
lods
inc
cltd
imul
add
xchg
adc
ret
lods
ja
and
adc
jg
aad
and
shl
mov
testb
pop
sbb
mov
imul
ret
bound
pop
lret
fmuls
movsl
std
dec
sbb
adc
cs
sbb
in
les
lahf
push
add
cltd
jge
ja
adc
cmp
xchg
cmp
mov
aaa
xor
fsubp
sbb
sub
repnz
mov
inc
push
jb
add
push
mov
data16
movsb
pop
mov
into
jp
push
movsl
mov
sub
in
push
mov
ljmp
aad
into
mov
ret
test
movsb
cmp
adc
mov
test
subb
or
fldenv
lcall
cmp
mov
in
popa
notl
icebp
pop
mov
dec
cmc
mov
fldl
addr16
lret
mov
cli
jnp
xor
mov
push
add
jg
bsf
cli
gs
out
mov
enter
sub
or
ret
icebp
jae
lret
das
pop
popa
or
les
test
std
adc
add
ljmp
cmp
fiadds
arpl
daa
dec
xor
xchg
fidivs
into
push
dec
xor
dec
mov
mov
jnp
cmp
add
jb
push
cmp
pop
fs
stos
int3
push
adc
mov
mov
mov
mov
jmp
ljmp
cli
test
inc
add
jmp
inc
gs
push
insb
lret
mov
lahf
loopne
scas
test
and
out
test
movsb
leave
subl
scas
xor
aas
mov
inc
sbb
sbb
mov
xor
mov
in
roll
ret
jp
es
ret
xchg
loope
loop
sbb
mov
daa
add
lods
inc
sbb
push
stos
in
sub
jl
fisubs
xchg
adc
sti
push
popa
mov
mov
inc
pop
jge
popa
cld
inc
stos
icebp
fimull
mov
sahf
mov
cs
mov
mov
jns
frstor
pusha
mov
repz
add
inc
out
push
arpl
aaa
xchg
lds
pop
mov
test
js
or
negl
jge
or
aam
in
movd
dec
mov
sub
cmp
je
in
call
jmp
das
aam
jb
arpl
in
lods
faddp
inc
mov
push
inc
lret
and
and
fidivrs
sub
loop
dec
or
dec
mov
mov
adcb
cmp
inc
sub
fmul
sub
sub
aam
aaa
push
cmp
mov
int3
sub
fwait
push
inc
inc
jl
dec
or
in
pop
push
lds
cli
and
movl
push
xchg
call
cmp
mov
lock
sbb
enter
push
je
out
gs
push
fadds
insl
ja
push
jne
sbb
lock
and
dec
mov
and
sbbb
sarb
cmpsl
bound
and
mov
or
and
add
push
or
hlt
mov
repnz
inc
mov
test
dec
js
jnp
add
test
jne
ja
mov
pop
mul
int
pop
dec
dec
data16
insb
ss
scas
lcall
call
in
stc
xchg
mov
bound
jp
push
les
xchg
cs
pop
stos
fmul
mov
scas
fdivr
iret
mov
jmp
dec
cld
bound
cli
std
or
insl
mov
inc
cli
mov
ja
outsb
xchg
test
jle
lret
fsubs
lock
ja
push
out
pop
jle
sub
ss
ljmp
push
fbstp
xchg
pushf
mov
sub
pop
jno
cmpsb
and
xchg
inc
jns
add
mov
sbb
push
mov
cmpsl
cmp
ds
out
roll
gs
xchg
cmp
ja
pop
cld
out
data16
jo
or
dec
xchg
lods
rclb
fdivp
inc
testb
in
faddl
jmp
or
push
add
shr
cmp
movsb
xchg
in
jmp
fwait
mov
mov
sub
das
mov
sbb
sub
subb
sbb
fiadds
xchg
sbb
jg
aam
aam
sub
mov
lret
fildll
je
mov
jp
dec
mov
mov
push
cld
sarb
mov
leave
push
xchg
test
filds
cmpl
rolb
sub
dec
in
pop
inc
sbb
pop
or
fnstcw
sub
sbb
push
iret
cmp
jb
call
int
ret
xor
test
mov
das
pop
pop
out
fisttpl
mov
repz
sbb
lret
cwtl
cmp
movsb
xchg
pop
mov
mov
xor
and
outsb
fldenv
mov
dec
lea
shl
rorb
loopne
mov
mov
outsl
and
or
shlb
xchg
frstor
ret
shrb
mov
aam
dec
xlat
pop
rcrl
cmp
and
lods
pop
or
push
outsl
sub
mov
pop
xchg
insl
add
shrb
sub
xchg
push
pusha
sbb
jnp
lock
jnp
pop
aam
fs
in
pop
adc
cli
lcall
xchg
push
out
out
enter
orb
outsl
cmpsb
frstor
aad
add
xchg
movsb
test
pop
dec
xchg
enter
int
cli
notl
test
jp
ss
into
xlat
nop
pop
mov
and
insb
dec
sub
or
push
ds
clc
inc
or
sbb
sbb
jge
mov
mov
fwait
in
in
adc
je
arpl
push
notb
push
inc
clc
push
clc
jns
add
push
imul
daa
nop
push
mov
xor
std
mov
xor
inc
dec
jns
ret
ja
in
dec
cmpl
pop
int3
inc
iret
and
rol
sbb
das
mov
test
or
les
xchg
mov
insl
sbb
add
push
popa
je
das
inc
and
adc
xchg
mov
iret
mov
cwtl
aad
mov
lret
sbb
or
jne
int
or
clc
mov
sub
inc
imul
scas
add
ret
mov
gs
rorl
out
dec
mov
dec
mov
hlt
dec
in
sarb
orb
jp
jp
add
push
repnz
xor
cs
xchg
cmp
ret
cmp
sub
mov
inc
sub
movsb
dec
adc
rclb
push
mov
lock
push
ret
sbb
mov
fiadds
add
add
inc
or
add
pop
mov
push
push
add
fldl
xor
leave
mov
lods
js
insb
xor
add
add
push
xchg
outsb
scas
lea
mov
cmp
dec
xor
das
mov
mov
in
pop
add
cmp
cmpsl
out
adc
cmpsl
rcr
xchg
stos
pop
or
mov
mov
pop
decl
adc
inc
sub
xchg
inc
add
lods
dec
push
pop
loopne
mov
movsb
in
xor
mov
cwtl
in
sahf
sahf
aam
add
xor
pop
jnp
mov
cmp
sbb
cmp
jns
dec
and
mov
push
jbe
pop
push
sahf
dec
push
out
fcoms
int3
cmp
sub
stos
roll
push
ret
clc
mov
add
out
mov
adcl
ficompl
push
div
xor
jge
or
add
push
out
setns
mov
test
hlt
repz
stc
les
negb
cld
inc
pop
xor
sub
es
mov
xchg
fxch
and
cs
hlt
or
pop
addb
rcrb
fs
pop
mov
sbb
xchg
dec
rol
jne
add
xor
hlt
shl
jns
rclb
adc
cltd
jns
jle
and
pop
inc
movsl
insl
out
jg
vmread
loopew
inc
cmp
lods
test
ret
pop
in
das
or
popa
lds
test
xlat
sub
xor
mov
outsl
jo
loopne
shrb
and
fnstsw
sub
test
lock
stc
es
xlat
sbb
inc
sub
pop
mov
cmp
and
fsts
inc
sub
push
sub
inc
sbb
xchg
sub
rcr
add
cmp
dec
and
ret
lock
outsb
sahf
mov
out
inc
repz
insl
add
dec
sub
mov
lret
or
dec
cld
sub
loope
scas
push
xchg
mov
loopne
jmp
dec
dec
sbbb
into
lcall
add
out
pop
cmp
xor
push
or
bnd
int
subl
mov
jae
mov
jge
adc
push
je
dec
mov
fdivr
or
aad
fsub
or
std
rolb
xchg
iret
out
jns
aaa
push
mov
aam
aaa
les
clc
ret
iret
mov
rcrb
push
pop
loopne
cli
mov
psubusw
lret
push
dec
jo
pop
jns
loop
ja
lock
pop
jle
sarl
jns
mov
fcoms
outsl
shr
mov
jge
xchg
jge
mov
mov
stc
inc
ret
in
mov
add
mov
int
divb
jg
shlb
ret
or
or
xchg
sti
push
and
stos
loop
adc
int
mov
push
iret
int3
sbb
mov
repz
mov
push
shl
stos
or
and
mov
test
push
int
inc
and
sub
add
pop
clc
xor
loopne
ret
and
arpl
xor
cmpl
mov
xor
or
ja
bound
fnsave
arpl
flds
js
pop
adc
pusha
lret
dec
inc
lahf
aas
movsb
insl
stos
stos
xor
jp
push
adc
push
lea
and
dec
mov
xchg
in
lcall
out
mov
int
inc
inc
cmovnp
hlt
inc
lahf
xchg
loopne
arpl
jmp
mov
sub
repnz
shlb
cmpb
and
sbb
sub
cmp
cmp
mov
and
xchg
mov
loopne
mov
shrl
cld
mov
add
shr
and
mov
imul
insb
in
in
hlt
push
ret
cld
add
pop
sbb
fistpl
js
xlat
ffreep
cmp
cmp
pusha
mov
or
rcll
push
jg
sub
fiaddl
jecxz
shrb
fwait
mov
mov
shlb
aaa
inc
xchg
jmp
into
xor
dec
popf
inc
or
inc
adc
sbbl
dec
or
xchg
adc
pushf
std
leave
insl
call
test
mov
jmp
idiv
xchg
push
mov
mov
jo
sbb
ds
mov
mov
outsb
int3
inc
sbb
cmp
mov
pop
call
push
mov
sbb
jns
clc
sbb
jne
add
add
dec
inc
lock
jne
in
jmp
pop
fadd
jg
loop
jne
pushf
sub
pop
leave
adc
push
aad
out
fsub
les
mov
je
mov
xchg
push
mov
sbb
jno
push
xchg
xor
dec
push
xor
mov
mov
std
pop
mov
ror
pushf
xchg
imul
ljmp
jo
xchg
aad
aas
lock
neg
mov
push
adc
icebp
sbb
fcoml
aas
xchg
cmp
fistps
sub
add
fwait
test
rcr
dec
mov
sub
out
stos
enter
cmc
mov
or
xchg
mov
lret
orb
xchg
cmp
cmp
test
push
roll
jb
pop
insb
rcll
sti
sub
sub
mov
xchg
nop
add
pop
cmp
jnp
insl
in
cmpsb
mov
sar
sub
sub
les
push
in
leave
lcall
add
add
lret
test
and
add
cmp
sub
sarb
les
movsl
and
inc
dec
pop
mov
jl
push
mov
and
jae
mov
sbb
ret
test
insb
nop
bound
xchg
rolb
in
sbb
jle
pop
jne
fld
inc
cmpsl
add
stc
mov
lds
jecxz
loope
xor
or
push
fcoms
dec
dec
lods
test
mov
clc
adc
mov
subb
mov
subb
push
lods
push
adc
push
dec
mov
stos
mov
mov
movsb
jb
test
arpl
lahf
jmp
addr16
into
push
jle
jg
add
dec
inc
test
push
mov
daa
addr16
push
scas
addr16
push
lahf
sub
fucomp
xlat
mov
jns
mov
add
add
mov
frstor
in
xlat
adc
push
jne
es
dec
lea
es
pop
out
mov
mov
add
sbb
push
sub
mov
aaa
fisubl
mov
adc
test
push
mov
push
ret
in
sub
mov
fsubl
sbb
push
iret
pop
popf
jecxz
mov
outsl
dec
mov
mov
or
push
fmul
add
or
and
loope
js
dec
outsb
xor
adc
pop
lds
jno
addr16
mov
xor
fwait
sarl
stos
insl
dec
decb
ficompl
jg
fwait
adc
dec
inc
out
jb
pop
int3
pop
mov
pop
inc
pop
cltd
mov
add
push
or
out
cmc
sub
add
mov
inc
jge
pop
jns
popa
cltd
enter
xchg
es
repnz
sub
sub
mov
popa
cwtl
and
jge
icebp
mov
push
mov
ficompl
jmp
leave
mov
out
lods
cltd
xor
push
mov
adc
lock
mov
mov
sar
push
data16
sbb
mov
pop
ret
fwait
push
xor
fs
xor
inc
jo
sbb
ret
jb
xor
jge
addr16
add
mov
insb
and
inc
cmp
jecxz
lret
popa
mov
popf
jp
mov
jge
push
xchg
mov
out
push
dec
aad
cmpsb
jno
or
fdivs
out
jno
inc
and
jg
aam
cmp
sub
mov
sahf
repz
divl
fsub
sbb
sti
mov
arpl
inc
adc
pop
cld
mov
enter
pusha
movsb
adc
mov
sub
sub
push
fdiv
out
testb
add
imul
std
or
jns
dec
enter
lds
aad
cmp
popa
lods
or
daa
out
xorb
push
ds
lcall
fcomp
lods
cli
ret
xchg
outsl
inc
pop
inc
push
stos
jmp
cmpb
insl
mov
adc
pop
pop
stc
push
mov
mov
adc
xor
stos
into
cmp
adc
mov
in
jecxz
dec
mov
sbb
adc
jle
sbb
popa
dec
es
push
bound
jae
outsb
imul
push
sbb
outsb
or
fists
repnz
jbe
mov
cmp
add
rolb
out
xorl
jecxz
cmp
into
sub
mov
aas
je
pop
fld
add
rcr
call
mov
xor
mov
in
fidivs
test
mov
jb
mov
lock
in
leave
jb
push
lret
ffreep
dec
dec
mov
cmp
popf
inc
test
test
cmpsl
push
mov
loop
push
pop
aaa
leave
xlat
xchg
ret
adc
sbb
pop
dec
das
cs
test
cmpb
inc
mov
arpl
lret
mov
cli
xchg
sbb
std
mov
xor
inc
pop
lods
cmp
adc
out
jb
in
iret
lock
xlat
adc
das
rcrb
adc
movsb
push
push
pop
sbb
mov
lcall
pop
sub
jg
and
add
pop
and
lret
lahf
jns
faddl
sub
adc
test
jp
clc
lods
mov
mov
fwait
pop
int
scas
mov
dec
roll
pop
pop
mov
pop
mov
fisubs
xorl
out
mov
bound
add
jb
cs
inc
and
insl
inc
bound
shrb
fucomip
jl
fisttpl
fsubs
std
cmp
stos
jns
imul
inc
xor
jb
sub
pop
xlat
sbb
loopne
lret
pop
outsb
repnz
daa
push
cli
mov
jb
popa
push
push
lahf
daa
adc
push
gs
or
jp
fs
enter
push
mov
mov
ljmp
jl
xor
and
int
int3
mov
ret
cmp
xchg
mov
sti
iret
sbb
sub
sbb
or
or
sarl
inc
pop
loopne
data16
subl
dec
and
jg
lds
lock
cwtl
pop
lea
xor
jle
pop
in
addr16
dec
aas
fwait
sbb
jle
lock
pop
sbb
mov
cmp
inc
jl
aas
xor
pop
and
add
jo
popf
fwait
fs
add
inc
mov
xchg
ja
adc
out
and
or
mov
es
stos
adc
lret
and
inc
mov
jmp
jle
scas
mov
or
push
arpl
push
xor
sub
xor
fidivs
mov
mov
fldcw
and
orb
nop
jno
ja
cmp
out
jbe
pop
pop
orl
adc
xchg
cmp
rol
daa
sbb
cmp
sbb
out
inc
and
dec
mov
ret
xor
jge
jmp
adc
inc
add
xchg
movsb
loopne
push
jbe
sbbb
fs
int
pop
stos
fwait
adc
cmp
imul
outsb
adc
test
mov
jle
icebp
ret
xchg
iret
add
test
pmuludq
jb
and
lds
pushf
ret
mov
loop,pn
jbe
inc
stos
jg
dec
pop
inc
sbb
notl
sbb
adc
rcll
push
imul
mov
mov
xor
xor
out
insb
pop
loope
data16
xchg
cmpsl
lds
cmp
icebp
test
fs
hlt
jns
adc
xor
das
dec
test
sbb
repnz
in
sahf
jge
xchg
mov
sbb
xor
std
push
mov
mov
and
popa
push
or
mov
cmp
insl
ret
stc
iret
stc
xchg
rolb
fldt
dec
out
fnstsw
adc
rcrb
ret
jl
stc
and
testb
jns
mov
ficoml
inc
jae
xchg
imul
rorb
pushf
cmp
push
dec
add
and
mov
sti
arpl
dec
xchg
mov
mov
sub
aas
enter
ljmp
inc
fmull
lock
test
and
rcr
stos
enter
xor
repz
mov
sub
loop
gs
lss
cmp
out
dec
je
push
ret
stc
cld
mov
ja
mov
push
jmp
fwait
jle
and
loopne
mov
and
add
push
test
cmp
fists
inc
cwtl
fwait
and
into
add
inc
in
mov
and
inc
mov
sbb
out
scas
sar
cmp
xor
es
arpl
fistl
cmpsl
inc
sub
inc
adc
and
jge
push
cmpsb
aam
scas
loop
inc
sub
sbb
das
negl
sub
mov
fcompl
pop
inc
outsl
sbb
inc
bound
lods
lods
pop
stos
rorb
insl
sbb
pop
and
lea
push
add
add
sahf
cwtl
adc
mov
daa
push
mov
cmpb
add
jmp
mov
jmp
xor
sbb
and
mov
incl
repnz
cmp
fwait
outsb
data16
mov
dec
xchg
inc
andb
aad
nop
push
mov
pop
fcom
xchg
sub
jg
testb
dec
inc
inc
testl
scas
int3
jbe
dec
sbb
out
mov
adc
xchg
lock
insb
xor
ljmp
mov
pop
pop
xchg
popf
icebp
mov
je
jmp
stos
mov
fs
cmp
pop
cwtl
dec
leave
jno
push
dec
mov
fs
fisttpl
loope
jle
mov
dec
andl
fmul
iret
scas
push
push
sbb
sti
call
jecxz
sbb
fwait
jbe
call
jge
pusha
push
push
inc
fcomp
addr16
mov
jns
out
mov
loopne
jae
scas
or
cmpsb
and
fs
stc
into
mov
loop
popa
scas
push
into
fsub
inc
inc
lcall
add
mov
cmp
push
scas
gs
mov
mov
xlat
pop
fsub
in
and
sub
xor
jns
xor
rcl
ror
cmp
mov
popa
pop
push
fidivl
and
gs
adc
pop
fcom
pop
ror
or
sub
ficompl
mov
dec
sahf
jg
fdivp
fadd
pop
iret
frstor
xchg
icebp
mov
add
adc
jbe
and
add
ja
sbb
sub
cltd
inc
loopne
xor
jp
bound
dec
pop
in
addr16
imul
cmpsb
inc
nop
pop
lock
test
cltd
ss
out
ja
push
xchg
arpl
insb
mov
pop
aam
mov
adc
mul
cmp
jl
sub
adc
and
cs
lret
mov
xor
arpl
add
aas
and
rorb
scas
lret
mov
outsl
inc
fstps
cmpsb
adc
dec
addr16
mov
mov
lea
mov
xor
sti
in
stos
xor
loope
or
dec
loope
mov
into
sbb
out
mov
mov
sbb
mov
xchg
fildll
dec
pop
xchg
cli
dec
mov
pop
out
neg
add
pop
imul
dec
pop
adc
ror
push
mov
jle
push
cmp
mov
mov
adc
in
scas
jmp
sub
mov
inc
shl
into
jle
xor
out
xor
or
jg
mov
sarb
xor
out
pop
insb
inc
fcoms
cmp
out
ds
jecxz
sub
out
push
and
add
jne
inc
cmp
rcrl
cld
pop
jge
roll
push
hlt
sub
test
lods
or
std
mov
dec
inc
cmp
adcl
out
add
or
mov
iret
cmp
mov
out
repnz
mov
aad
clc
out
xlat
cmpb
inc
mov
mov
bound
jmp
xorl
hlt
sub
bswap
jp
adc
fdivp
lahf
movsb
jbe
dec
jne
cmp
gs
loope
cmpsb
rcr
xorl
scas
je
xchg
push
pop
data16
fsts
and
jmp
repnz
call
cmpsl
pop
push
xor
xchg
pop
addr16
jbe
aaa
or
xchg
dec
pop
inc
push
and
icebp
dec
lret
es
hlt
fs
aad
add
in
stos
fstpt
inc
or
les
rol
pop
mov
pop
push
ljmp
test
sti
jae
loop
iret
subl
push
jl
cmpsb
jae
dec
test
imulb
daa
outsl
fcoml
lea
out
aam
or
les
sub
push
sub
pushf
pop
push
repz
mov
adc
push
jbe
out
push
clc
cmp
adc
xchg
cmpsb
dec
out
movsl
inc
out
sti
xchg
sarb
mov
dec
ret
stos
jmp
and
mov
rorb
aas
shll
out
clc
sbb
clc
iret
outsl
mov
test
insl
lahf
int
mov
int
inc
mov
jmp
cmpsb
add
mov
test
imul
xchg
push
jmp
sahf
cltd
jge
push
ss
sub
mov
je
push
cltd
mov
aas
testl
pop
push
inc
das
rcll
mov
nop
ds
sar
cmc
mov
leave
push
in
jge
sbb
sti
lcall
and
xlat
add
mov
mov
divb
daa
pusha
pop
jo
mov
sti
movsl
adc
pop
icebp
push
or
ja
ljmp
aad
adcb
mov
inc
jge
aas
pop
ja
aad
jae
jnp
loop
adc
ljmp
mov
pop
scas
xor
outsb
ficomps
aas
mov
sahf
cmp
adc
inc
xchg
outsb
fwait
in
inc
arpl
cmc
mov
sub
mov
test
sbb
sahf
mov
xchg
lea
lret
xchg
cld
scas
sub
mov
sbb
lea
pushf
into
loope
fcoms
in
clc
mov
jge
loopne
or
rcl
lea
out
adc
adc
sarl
insl
test
xor
fbld
mov
mov
sub
cld
repnz
stc
dec
imul
cwtl
dec
cmp
dec
xor
movsb
dec
jb
rorb
popa
jno
cmp
push
and
push
in
adc
pop
out
sbb
xchg
outsb
iret
pop
mov
nop
xlat
sti
out
fidivrs
out
bound
shll
pop
addr16
mov
leave
sub
sbb
in
mov
cmp
fiadds
test
push
mov
mov
ret
and
lcall
inc
pop
jnp
mov
push
inc
cmp
inc
jnp
lods
es
jp
mov
stc
das
cld
inc
inc
sbb
pop
enter
jl
in
int
jns
lahf
gs
stos
stc
comiss
inc
or
xchg
fmulp
sub
jb
cmp
outsb
xchg
out
adc
loope
and
sbb
xchg
sbb
cmp
cmpsl
pushf
jg
leave
add
inc
jp
mov
dec
fstl
mov
or
sbb
std
in
and
lcall
adc
ret
pop
rol
jl
or
scas
pop
pop
adc
mov
or
int
rclb
or
imul
pushf
rorb
nop
scas
xor
mov
sbb
dec
sub
out
mov
mov
push
mov
pop
or
inc
int3
popa
inc
sti
test
aad
mov
mov
test
jge
push
int
push
xchg
aaa
sbb
jecxz
movsl
fisubrs
jecxz
icebp
and
push
cmp
cmp
sbb
ljmp
pop
push
xchg
pushl
mov
sbb
mov
test
sub
mov
adc
cli
inc
sbb
lcall
pop
mov
push
pop
cmp
push
sub
jbe
dec
ds
mov
mov
xadd
arpl
inc
scas
inc
or
out
dec
pop
addr16
push
xchg
ret
pop
and
ja
lea
scas
push
jmp
rorl
cmc
outsb
lea
aas
xchg
in
addr16
push
nop
push
or
jp
mov
xlat
call
bound
xchg
adc
cmpsl
stos
scas
push
aaa
inc
loopne
ret
cmpsl
dec
push
mov
popf
adc
cmp
push
mov
push
add
push
cs
mov
rcrl
xchg
movb
jo
scas
sahf
fucomi
cld
aad
mov
xor
stos
loop
ficomps
cmp
jnp
mov
xor
push
scas
cmc
imul
mov
cmc
cmp
shll
ja
gs
pop
sbb
nop
cmp
ljmp
cwtl
xor
je
xchg
sub
inc
les
xchg
mov
pop
inc
add
adc
fiadds
jns
and
push
add
xchg
data16
jb
sub
pop
and
pusha
iret
icebp
clc
xlat
pusha
sub
popa
dec
push
add
push
lcall
xor
divl
loope
fisubrs
iret
mov
pop
mov
xor
add
test
sbb
xchg
lcall
pushf
xchg
mov
adc
sar
data16
insl
xchg
das
and
push
adc
push
test
push
inc
xor
push
scas
xchg
add
sbb
jbe
mov
mov
mov
fists
std
hlt
repz
xchg
pop
ds
jg
fisubs
lcall
adc
mov
jp
sbb
pop
cmp
mov
pop
and
mov
mov
xchg
mov
pusha
mov
arpl
add
adc
mov
jae
outsl
loope
xor
dec
and
loop
add
in
jp
pusha
aas
jle
jge
dec
jp
cmc
xchg
xchg
inc
mov
lds
ss
push
enter
adc
dec
pop
mov
loopne
jmp
ljmp
in
out
ja
push
scas
sahf
int
xlat
mov
add
add
clc
das
shl
push
stc
aam
push
inc
jl
in
inc
lds
roll
xchg
ljmp
iret
mov
arpl
sub
bnd
clc
sahf
in
outsl
rolb
das
add
iret
js
scas
negl
icebp
pushf
xor
les
lret
ss
pop
jp
popl
cmp
das
dec
scas
scas
mov
jo
mov
fdivrl
fld
idiv
aaa
imull
dec
mov
add
pusha
adc
ret
pop
bound
adc
xor
inc
bound
push
inc
inc
push
dec
jmp
mov
lock
sahf
aaa
mov
imul
andb
in
cld
dec
adc
pop
add
mov
js
lcall
jns
and
adc
cmp
adcl
in
in
cmp
sub
enter
or
xchg
dec
popf
popa
or
in
mov
mov
cmp
adc
out
mov
out
ja
loop
mov
enter
popl
sbb
mov
pop
pushf
add
cs
xchg
test
jecxz
sub
iret
loope
out
cmp
call
fimull
test
test
add
loope
stos
das
xor
dec
arpl
jg
test
mov
push
outsl
pop
mov
movsl
iret
xchg
mov
pop
repz
xor
and
cmp
pop
jle
cmp
adc
inc
sub
rclb
jp
out
subb
jbe
aam
outsb
and
adc
cmpl
test
add
jmp
leave
loope
insl
test
shlb
in
push
dec
fsubl
add
fsubrl
cmpl
sbb
adc
lcall
mov
jo
xor
aam
sbb
xor
dec
jbe
shl
or
mov
fabs
mov
icebp
cmpsl
loop
pop
outsl
movsb
stos
add
and
mov
popf
sub
pop
into
jecxz
xchg
fwait
jb
dec
rolb
clc
inc
or
fiadds
add
inc
dec
inc
and
cli
stos
add
std
pushf
mov
adc
cld
or
dec
mov
inc
cld
dec
outsb
stc
lret
and
lret
mov
push
jo
sbb
out
add
pop
dec
push
and
insb
inc
xor
mov
adc
inc
pusha
shrb
inc
or
push
test
jg
inc
pop
jp
xchg
mov
jb
test
dec
push
xor
ljmp
psubb
mov
andb
jecxz
jae
pop
xchg
push
pop
loop
stc
imull
lcall
mov
nop
mov
test
nop
cmp
arpl
insl
frstor
stc
scas
loop
incl
mov
lea
fldt
cmp
xchg
adc
movsb
mov
or
jge
dec
jne
shr
push
add
es
fildl
add
bound
xor
cmp
in
fs
inc
icebp
out
nop
push
pop
lods
sbb
mov
sbb
outsb
sbb
mov
lods
imul
and
mov
inc
jmp
or
out
loop
inc
mov
iret
ja
adc
addl
test
cmp
and
dec
hlt
cs
ss
es
pop
repz
cld
adc
xchg
jno
clc
mov
adc
cwtl
fnstsw
movsl
xchg
sbb
mov
in
popl
cltd
insb
mov
jns
jbe
cmpl
sub
data16
sti
cmp
test
popl
data16
mov
mov
cltd
jne
jge
push
ljmp
adc
iret
lcall
and
mov
mov
ret
mov
xchg
shll
push
xchg
test
sub
add
test
push
imul
ret
loopne
xchg
mov
fld
jo
addr16
adc
push
jmp
mov
jae
adc
push
add
adc
mov
add
sbb
clc
ljmp
int3
mov
push
pushf
add
mov
lods
adc
cmp
ret
mov
push
push
out
jg
xchg
addr16
or
sub
dec
imul
mov
enter
or
lods
nop
repz
into
dec
icebp
aaa
cld
aad
shlb
outsb
pop
ljmp
cltd
scas
je
pop
test
add
insb
arpl
enter
pop
pushf
cmpb
cmpsl
aam
adc
pop
jbe
scas
add
and
cmp
xchg
adc
leave
lods
xor
mov
ja
repz
test
xchg
and
pop
lock
lock
enter
add
sahf
out
movsb
fistps
ret
inc
sbb
jge
cld
jbe
ret
or
adc
sub
sub
loopne
fidivrl
xchg
pop
and
adc
pusha
mov
adc
aad
movsb
vmovntps
mov
cmp
mov
adc
in
xor
repnz
dec
decb
mov
mov
fs
shl
jae
cmp
mov
xchg
push
pop
lds
add
hlt
xor
inc
loope
sub
pusha
mov
or
out
int3
lahf
lods
mov
in
std
loop
repz
daa
rclb
test
xchg
in
ret
xor
and
shll
mov
repz
in
orb
int
sub
jno
imul
dec
mov
mov
push
mov
mov
pop
repnz
sub
cmp
lock
add
lock
jne
push
dec
sub
ret
sub
out
arpl
aam
pminub
or
lret
loope
into
daa
cmp
rcrb
mov
mov
mov
push
fistpl
in
xchg
mov
fisubs
das
cmpsb
pop
pop
sbb
push
movsl
imul
insl
xchg
add
mov
jns
push
shl
out
test
cltd
sub
jb
sbb
ret
add
jecxz
in
in
loopne
lods
gs
push
cmc
in
xor
xor
adc
out
movsl
mov
sub
sub
das
sub
mul
lcall
les
dec
cmp
mov
sahf
dec
stos
aad
ret
iret
mov
leave
adc
inc
in
xchg
sub
js
xor
push
and
mov
pop
fnstsw
dec
test
stc
and
in
add
fcmovnbe
push
mov
ret
iret
test
addr16
insl
push
insl
jne
hlt
scas
sarl
les
push
jg
dec
cwtl
cmp
ror
pusha
push
or
pop
mov
adc
sub
jle
or
cmp
and
push
nop
push
lcall
movsl
fisubrl
cmp
rcl
dec
stos
imul
pop
leave
inc
add
orl
arpl
jl
lock
mov
sti
inc
mov
in
fidivrs
sbb
out
cwtl
xor
rorb
in
push
pop
pop
sbb
dec
push
test
pop
aam
lods
add
sbb
rorl
fsts
data16
mov
and
pop
scas
gs
ljmp
lahf
push
or
stc
insb
les
arpl
repnz
ret
sbb
pusha
xchg
sar
push
cmp
inc
mov
movsb
dec
test
subps
mov
mov
pop
mov
loopne
nop
dec
pop
jle
xor
cmp
jl
jl
mov
mov
cmp
lahf
pop
call
xlat
stos
leave
mov
xor
test
inc
cmp
pop
fcompl
pusha
push
fwait
js
and
xchg
cmpsl
popf
int
or
or
xor
dec
stos
cmc
jae
je
cs
icebp
repnz
xchg
orl
sbb
and
pop
inc
test
jmp
push
hlt
push
mov
sbb
mov
cmpsb
jecxz
decb
jl
adc
xchg
les
data16
stos
idivb
ja
ret
adc
push
sub
push
jle
icebp
fsubr
test
pop
and
rclb
cmp
sbb
jnp
xchg
xor
fnstenv
lahf
sub
adc
aaa
outsl
in
push
xor
dec
scas
call
sub
cmp
sbb
adc
xchg
xor
insb
mov
or
ror
push
xor
fstps
fsubrs
inc
test
sbb
push
xchg
stos
iret
mov
imul
jne
outsb
xchg
jne
into
lock
mov
fwait
push
mov
cwtl
inc
mov
incb
xchg
add
add
inc
or
cmp
xlat
data16
pushf
mov
add
loopne
sbb
stos
movsl
add
cmp
jno
cld
inc
lods
push
dec
pop
jne
inc
push
xchg
dec
and
xlat
mov
pop
movsl
cld
mov
jmp
adc
popf
out
cmp
cmp
cmp
in
clc
enter
call
inc
jge
clc
mov
int3
inc
inc
xor
jmp
outsl
in
cmp
das
lret
push
or
lret
movsb
xlat
jno
test
sahf
aaa
mov
imul
scas
orl
mov
dec
add
loope
sbb
outsl
dec
popf
sbb
hlt
sbb
xor
push
push
push
cmpsl
in
sbb
xorl
call
in
idiv
outsl
in
lret
fs
xchg
aam
jne
loop
ret
test
or
add
add
bound
imulb
sub
shlb
lea
push
pop
pop
xorb
pop
mov
inc
sub
scas
push
stos
xchg
xor
fsts
lahf
push
lret
ror
test
mov
push
inc
insl
mov
mov
loope
mov
xlat
loop
mov
add
push
cmp
xor
cs
mov
ret
fnsave
mov
cli
adc
fcompl
and
cmp
xlat
outsl
test
jae
add
xchg
sbb
and
push
cmp
leave
and
mov
jae
mov
insb
mov
push
xor
mov
jl
mov
dec
pop
insl
popf
or
jmp
inc
mov
sub
xchg
nop
aam
call
fiadds
lea
push
adc
mov
aas
sbb
add
mov
pop
cmp
dec
add
dec
and
pop
fwait
cs
aaa
addr16
adc
cmpsb
lods
sbb
xchg
test
call
sbb
lret
xor
pop
inc
mov
mov
and
adc
ds
mov
mov
aad
cmpsl
sub
negb
jo
shll
jno
pop
cmp
pushf
cmpsl
sbb
loop
lret
or
pop
inc
cmp
lods
xor
xchg
popa
pop
out
push
popa
xchg
sub
scas
fwait
pop
mov
in
inc
call
inc
mov
das
ds
mov
cltd
rol
xchg
mov
test
inc
and
mov
inc
and
in
pop
push
cmp
popf
pushf
pushl
rcl
mov
sti
outsl
aaa
inc
mov
arpl
mov
sub
sub
push
sub
mov
iret
mov
mov
loope
data16
add
out
mov
dec
pop
push
sub
cmp
pop
decl
pop
mov
xchg
xor
jmp
xchg
jg
xchg
cmpb
add
fxch
insb
mov
scas
cmp
pop
mov
mov
fwait
and
movsl
adc
movsl
lea
cmp
push
cmpsl
cltd
sti
xlat
mov
test
mov
mov
test
inc
pusha
xchg
inc
ljmp
and
mov
into
popf
mov
xchg
push
jl
inc
inc
push
or
pushf
daa
sbb
adcb
fcoms
hlt
sub
negl
mov
inc
sbbb
mov
jge
push
jp
sahf
movsl
jcxz
dec
add
int
stc
rol
test
lods
insl
leave
stc
mov
push
mov
xchg
add
xchg
in
cld
inc
call
stos
shl
xchg
out
inc
arpl
loope
mov
mov
test
push
out
cmpsl
add
mov
shll
nop
lahf
adc
and
cli
mov
add
in
mov
pop
adc
xlat
out
sbb
enter
gs
sub
add
addr16
inc
jp
adc
mov
sub
mov
cmpsl
fcomp
pop
add
xor
lahf
mov
sbb
mov
std
jmp
in
in
dec
enter
leave
inc
aaa
push
decl
and
rclb
dec
mov
shlb
adc
adc
in
jno
sbb
sub
scas
or
sub
ss
dec
les
mov
jno
mov
sub
lea
inc
cmp
push
lds
gs
inc
shl
imul
sub
ljmp
xor
mov
popa
divb
push
xor
mov
adc
call
ror
das
dec
adc
clc
lcall
mov
xchg
sbb
inc
movsl
push
dec
mov
loopne
sti
stos
bound
add
sahf
popf
pop
negb
or
out
sti
push
xor
outsl
and
adc
imul
cmp
pop
push
adc
or
pop
pusha
stos
cmpsb
imul
dec
sub
mov
scas
push
xor
stc
lret
gs
repz
pop
loopne
add
ret
xor
jo
and
inc
sub
sub
xchg
ds
incl
call
push
xchg
sahf
cmp
mov
xchg
aaa
lods
adc
fadd
je
dec
mov
dec
add
ja
mov
ss
mov
mov
inc
push
std
haddps
insb
or
mov
sbb
xchg
and
cwtl
aad
xchg
inc
pop
push
in
mov
mov
popf
imul
mov
push
pop
and
push
mov
lea
daa
or
imul
mov
lea
lds
pop
popa
iret
inc
in
ss
jp
and
popa
mov
mov
out
int3
je
out
mov
je
test
fadd
lock
leave
shlb
rorl
pop
xor
das
insl
push
sahf
ljmp
add
add
sub
and
popf
cmp
xor
subl
jp
int3
sbb
cmc
lock
aas
test
cs
jmp
sub
ja
push
jns
jne
xchg
popf
decl
lcall
cmc
nop
insl
xor
cmc
mov
cmpsb
lcall
pop
outsl
adc
pop
adc
xor
dec
insb
and
pop
push
je
xchg
mov
mov
lret
mov
lods
push
sbb
lock
test
arpl
sub
cmpsb
inc
jmp
xchg
inc
mov
adc
cmp
rcl
jne
dec
mov
fcoml
adc
xchg
ret
bound
mov
bound
and
pushf
iret
cmpsl
call
cltd
xchg
and
xchg
sbb
ret
test
inc
sub
and
sub
sub
jno
xor
nop
dec
xor
imul
cmpsl
pop
inc
insb
mov
mov
scas
mov
insb
out
dec
mov
inc
icebp
mov
rolb
cmp
inc
push
rcrb
out
lret
dec
mov
mov
stos
sahf
repz
xchg
mov
jns
xchg
addr16
push
lret
ficoms
in
pushf
cs
add
sub
imul
loopne
cmc
jp
pusha
adc
mov
cmp
or
pop
pushf
jge
xor
divl
mov
and
imul
pop
cld
out
adc
xchg
das
scas
jge
mull
cmp
std
and
pop
idivb
insb
mov
lock
and
mov
and
mov
call
adc
scas
clc
in
cmpsb
test
cmc
xor
mov
outsl
pop
sbb
cmp
loopne
stos
lock
popa
push
push
xchg
shr
pop
out
sbb
fildll
push
cmp
mov
pop
dec
ja
xor
pop
jb
sub
pop
push
dec
out
jnp
adc
and
jl
imul
imul
mov
mov
pop
add
jo
xor
testl
popa
mov
xor
les
mov
cmpsb
sbb
add
mov
hlt
push
cltd
rorb
mov
adc
add
mov
mov
xchg
fmulp
lret
addb
xor
or
bound
fcmovbe
jnp
adc
sub
subl
sbb
or
xlat
sarl
test
xor
jno
je
dec
fdivr
mov
scas
cltd
pop
cli
imul
push
fs
test
fcoml
pop
push
ss
or
stos
int
push
jecxz
loop
lret
xor
dec
xor
sub
mov
jmp
fistpl
lret
and
add
inc
daa
xor
adc
jnp
cmp
imulb
stos
loop
xchg
icebp
inc
xor
fucomi
ret
shrl
xor
ja
fisubl
clc
push
inc
hlt
xchg
dec
pop
mov
lret
rcl
insb
jb
imul
add
mov
enter
xchg
rorb
mov
dec
mov
mov
cltd
pop
or
mov
sbb
outsl
outsb
sub
ja
shll
adc
xchg
mov
add
mov
ret
scas
cmp
repnz
jne
cltd
push
jg
aad
adc
in
xchg
lds
std
nop
jno
pop
adc
inc
call
addr16
cmp
mov
add
imul
les
push
enter
mov
test
mov
and
fistpll
jbe
insl
je
ljmp
out
testb
or
repnz
mov
adc
xor
xchg
xchg
fisttpll
push
jno
cmp
xchg
fnstsw
incl
xor
pop
mov
jmp
push
jg
jnp
faddl
xor
sbb
adc
xor
adc
rcr
out
dec
xor
scas
out
scas
sbb
jo
cmp
fxch
movsl
sub
incb
les
push
xchg
pusha
sub
and
mov
imul
jle
xchg
cltd
movsb
xchg
decb
mov
lods
and
cwtl
ret
rcrb
leave
sahf
jg
push
enter
incl
aas
ficoms
pop
movsb
jbe
loopne
mov
jg
lock
jg
xor
andl
mov
or
add
dec
xor
pop
add
ret
xor
or
mov
scas
pushf
test
hlt
leave
mov
pop
lret
int
das
in
cmp
jmp
push
mov
mov
pop
mov
cmpsl
out
jo
pop
sbb
jge
lcall
aaa
xchg
push
sarl
dec
sub
inc
outsb
add
push
cmp
jb
fs
js
jno
push
jo
iret
push
in
cmpsb
adc
fsubl
movsb
idivb
out
ja
outsb
lods
mov
xchg
daa
jp
mov
iret
push
out
aaa
xchg
aad
outsl
ret
sbb
jne
fwait
or
fs
sub
cmp
inc
dec
int
sbb
pop
jo
add
enter
dec
clc
popf
ja
clc
imul
jno,pt
ja
pop
test
mov
imul
sub
imulb
inc
popf
or
lahf
cli
in
inc
xchg
mov
mov
inc
je
aam
shll
movsb
scas
stos
fmull
dec
push
push
push
lods
idivl
mov
rclb
xor
sbb
jb
mov
push
dec
sub
jne
sub
jle
sbb
enter
sbb
lret
loope
imul
sahf
pop
shr
in
imul
sub
outsb
hlt
cwtl
cmpl
jns
ds
insb
adc
lods
daa
loopne
push
iret
scas
push
in
push
hlt
clc
and
adc
ljmp
fnsave
xchg
inc
add
stc
or
pop
aad
addb
cmp
or
mov
cmpsl
xlat
jecxz
iret
test
pop
gs
cli
xor
mov
push
pop
mov
or
fwait
negb
sub
mov
xor
jmp
inc
mov
or
xlat
scas
iret
stos
sbbl
and
daa
jmp
stc
cmp
arpl
movsb
arpl
and
scas
and
ret
mov
idiv
mov
subb
xchg
inc
outsb
dec
xor
lds
in
add
adc
xor
cmp
enter
fsqrt
insb
aad
in
imul
shlb
cmp
lahf
push
mov
add
stc
rcl
aam
dec
gs
lods
push
mov
mov
or
lret
lcall
cmp
mov
pop
add
xchg
nop
aaa
pop
adc
xchg
fdivl
cltd
pop
insb
xor
and
movl
mov
loope
push
insl
adc
push
mov
mov
sbb
dec
mov
push
movsl
pop
sarl
push
popa
outsl
xchg
sbb
cmpsb
adc
leave
cmpb
mov
test
mov
push
push
bound
call
cmp
mov
pop
inc
out
imul
lods
ss
les
adc
jecxz
or
mov
rol
dec
push
add
pusha
cmpsb
push
mov
sub
or
mov
mov
mov
jae
mov
cmpsl
jbe
adc
fidivl
out
faddl
aaa
jmp
out
push
pop
imul
sahf
out
adc
pop
and
rcrl
enter
loopne
sub
nop
xchg
lods
cmpsl
inc
xchg
or
dec
jns
push
jmp
sbb
xor
dec
xor
neg
nop
mov
shr
clc
insb
and
sub
xchg
nop
out
dec
icebp
je
filds
sahf
movswl
in
test
in
dec
mov
mov
jnp
jbe
stc
std
mov
mov
xchg
inc
cmc
mov
xchg
in
xlat
ret
mov
add
xor
cmpb
fists
xchg
cli
cmp
hlt
pop
out
pusha
adc
pop
fnstsw
shl
mov
add
dec
int
repnz
and
out
mov
cs
outsb
jmp
dec
test
xchg
xor
push
gs
and
mov
es
and
stos
sbb
int3
xor
pop
push
fwait
push
push
pushf
xlat
div
inc
and
addr16
adc
out
fwait
or
adc
add
mov
mov
or
sub
testb
movsl
sbb
loopne
loop
and
jle
sub
subb
hlt
lods
sub
out
sti
inc
ljmp
insb
adc
ja
aad
lcall
sub
push
push
and
mov
fucom
mov
push
rolb
xor
jbe
dec
stc
lahf
cld
pushf
lock
jg
and
xor
fldenv
jecxz
das
push
push
clc
aam
sub
add
add
les
xchg
adc
shrb
push
mov
xor
into
xor
clc
ret
dec
xchg
push
lret
inc
push
or
movsl
mov
jecxz
xchg
incl
push
in
js
sar
pop
push
dec
adc
mov
pusha
mov
out
insb
rclb
pop
xchg
or
sbb
idiv
loope
inc
ss
jmp
pop
mov
push
pop
pusha
fiadds
push
mov
imul
loope
xchg
std
add
inc
inc
add
add
push
popa
outsb
imul
add
add
push
add
test
xchg
add
mov
rcl
test
xlat
add
add
add
add
add
add
stos
mov
icebp
ret
shll
add
je
nop
nop
nop
nop
cmpw
jne
nop
nop
nop
nop
mov
leave
ret
xor
leave
ret
enter
cld
push
push
push
mov
mov
cmpw
jne
add
xor
mov
movl
inc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
inc
jmp
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
dec
je
jns
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
inc
dec
jne
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
movb
cmp
je
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
add
test
je
nop
nop
nop
nop
mov
jmp
cmp
je
inc
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
dec
dec
jne
nop
nop
nop
nop
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
dec
mov
mov
mov
xor
shl
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
or
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
ja
nop
nop
nop
nop
inc
inc
inc
inc
mov
mov
sub
rep
mov
jmp
mov
sub
lea
pop
pop
pop
leave
ret
gs
add
add
add
add
add
add
add
add
add
jns
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
add
push
add
add
inc
push
xor
cs
dec
dec
add
push
add
add
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
dec
insl
jo
jb
pop
inc
outsb
fs
and
inc
push
jo
outsb
outsl
je
inc
push
jns
push
inc
jne
inc
xor
dec
dec
jo
insl
arpl
hlt
adc
repz
add
les
add
add
add
add
add
inc
add
mov
add
mov
add
add
xchg
add
cmc
adc
cmpsb
and
add
mov
add
add
add
hlt
adc
add
add
xor
adc
ja
inc
add
hlt
adc
adc
add
xchg
inc
add
dec
add
dec
add
notl
add
add
add
cs
jae
data16
add
add
inc
add
add
add
and
add
add
add
add
mov
or
push
dec
int
incl
xor
add
add
add
