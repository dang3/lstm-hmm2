inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
jmp
inc
jns
ja
outsb
addr16
add
add
add
dec
add
add
add
xor
movb
xor
add
add
pop
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jo
arpl
add
push
or
add
add
jne
add
push
add
add
add
jb,pn
jb
add
add
loopne
add
pusha
or
stos
int3
add
add
add
add
pop
or
push
jbe
sbb
xchg
xor
divl
scas
and
xor
dec
mov
inc
jge
cmp
mov
pop
movsl
outsl
ss
in
and
insb
aam
mov
sbb
lret
into
xor
cs
and
mov
ds
jmp
movsl
cmp
shll
dec
jg
fmuls
shrb
xor
insb
lcall
push
shrb
int
sub
mov
lcall
pop
push
sbb
xor
mov
fdivrs
cwtl
push
or
xchg
push
and
add
push
in
iret
push
dec
mov
je
dec
roll
pop
pop
mov
pushf
ret
adc
jnp
out
jb
dec
pop
test
js
jbe
fwait
aaa
int3
cmp
repnz
xchg
in
mov
imul
fiadds
leave
shll
adc
cmp
push
push
je
das
incb
inc
divps
in
pop
push
push
nop
clc
mov
add
cmp
ljmp
inc
jne
lahf
ret
xchg
mov
rorl
ret
inc
insl
sarb
call
add
lret
push
les
ljmp
outsl
bound
lods
repnz
ret
fcoms
out
repz
cld
jnp
adc
add
xchg
mov
shlb
dec
jge
mov
mov
jne
fnstenv
je
iret
ret
or
jns
cmp
call
xor
out
rorb
cmp
push
arpl
movsl
and
test
leave
xchg
lods
xchg
loop
inc
or
adc
adc
push
lods
xor
orl
mov
shlb
stos
jecxz
pusha
cmp
push
cmc
mov
lahf
test
nop
ret
arpl
push
imul
push
cmp
rolb
int3
and
jp
insb
xchg
lret
ficompl
or
out
nop
rorl
dec
sbb
fwait
push
cld
push
stos
dec
mull
xor
or
addl
mov
ljmp
popa
jno
pushf
push
mov
cmp
mov
negl
out
rclb
push
xchg
mov
xchg
jle
loop
gs
sahf
loope
mov
aaa
pop
mov
dec
jnp
mov
and
mov
pop
lods
mov
dec
and
daa
cmc
mov
adc
nop
sub
mov
pop
dec
add
push
jmp
movb
clc
lea
int
xchg
lea
mov
mov
xor
nop
gs
popa
or
jge
movsl
xchg
ljmp
xor
insl
mov
call
insb
and
stos
loope
data16
dec
or
push
rorl
jl
jecxz
cmpsb
pop
hlt
popf
enter
and
mov
lahf
out
inc
dec
jns
fsub
int
and
push
push
imul
lahf
ss
scas
xchg
mov
inc
xor
sbb
cmp
rcr
in
push
jp
insl
cmc
push
fidivrs
add
dec
xor
and
or
and
movsb
mov
popa
xor
jecxz
jnp
dec
repz
notb
dec
aad
xchg
and
test
adc
cmpsl
sti
in
in
xchg
scas
dec
lods
dec
ja
jle
sbb
fildll
repnz
sub
int3
out
hlt
xchg
mov
mov
in
pop
push
pop
lods
flds
lods
es
mov
cmp
sub
nop
cmova
sub
leave
dec
and
sub
out
xchg
mov
leave
adc
pop
cwtl
xor
mov
xchg
sahf
and
xchg
lret
cld
adc
loop
push
push
mov
adc
pusha
lock
rclb
sbb
in
out
imul
call
sarb
pop
cmp
movsl
test
xor
es
mov
js
fnstsw
jnp
jne
dec
fs
pop
inc
repnz
or
or
fstps
lret
dec
xchg
sar
arpl
pushl
imull
sub
insl
gs
inc
call
out
test
add
xor
rcrl
rclb
aas
mov
inc
movsb
sbb
inc
imul
repnz
adc
ret
movaps
xchg
in
ja
jmp
mov
jle
push
fs
daa
xor
mov
xchg
cmp
decl
cmp
scas
inc
out
sbbl
test
mov
std
fistl
out
stos
cmp
dec
rcr
adc
mov
push
out
push
pop
jl
xor
and
lcall
cmp
std
popf
jle
pop
pop
inc
fdivs
pop
test
push
ja
shrb
popa
clc
mov
outsl
in
nop
ds
sub
pop
orb
push
cs
push
daa
ja
or
pop
lcall
ljmp
lea
cmc
scas
cmpsb
cpuid
jg
lea
test
adc
add
sbb
mov
xor
sbb
clc
mov
push
push
pop
mov
ja
inc
aad
mov
mov
fisttps
or
lahf
in
xor
aas
outsl
les
mov
imulb
push
out
sub
add
fiadds
lahf
hlt
stc
cli
jl
push
ja
cwtl
test
inc
aas
adcb
ret
xchg
enter
mov
insb
outsl
add
pop
out
adc
dec
xor
fs
inc
add
pop
pop
int
mov
inc
cld
bnd
pop
lahf
dec
andb
xchg
jmp
insb
push
mov
adc
push
sub
mov
jb
cltd
fists
ret
mov
cs
mov
mov
lods
push
sti
push
test
mov
loop
mov
cli
rorl
addb
neg
nop
cs
pusha
popa
mov
fmull
cwtl
rcr
xorl
mov
push
sub
aam
xchg
push
inc
mov
aaa
lock
jae
cmp
mov
pop
int
imul
test
sub
aad
xlat
jp
inc
clc
lods
xchg
push
mov
push
repnz
dec
movsl
and
faddl
je
xor
jl
xor
sbb
ljmp
xchg
outsb
rcl
rol
xor
push
adcl
xlat
je
loope
mov
mov
pop
movl
in
push
sarl
mov
push
iret
or
bound
repnz
cmp
outsl
pop
push
lret
inc
ret
and
and
pop
imul
ss
dec
scas
ljmp
shlb
or
mov
arpl
loop
mov
enter
push
xchg
movsl
jl
imul
ja
adc
pop
add
and
sti
mov
push
inc
repz
mov
adc
and
iret
icebp
xchg
clc
loopne
dec
jge
sti
mov
shr
push
mov
movsb
out
adc
and
adc
pop
cmpl
sti
or
inc
inc
es
loop
pop
pop
aad
sbb
mov
test
mov
not
mov
ja
dec
jmp
pop
aad
mov
jmp
xchg
xchg
fs
inc
fisubs
sbb
arpl
sbb
out
sub
icebp
add
dec
fcoms
fcompl
sti
push
xchg
aad
aam
scas
scas
js
hlt
dec
movsl
lds
loopne
xor
mov
jb
fistpll
push
xor
pop
or
mov
cs
cmp
add
add
sub
shll
jns
pop
mov
das
jb
mov
arpl
orb
aaa
xchg
cmp
ret
fnstcw
push
pop
dec
and
addr16
or
je
out
mov
subb
mov
sbb
ret
cli
cltd
dec
insb
iret
xchg
push
dec
mov
negb
mov
jbe
push
jmp
adc
mov
scas
mov
mov
push
lods
ret
jge
add
mov
icebp
es
arpl
and
test
xchg
ss
bound
fmuls
xchg
sub
outsl
push
push
sub
sbbb
mov
int3
inc
sbb
es
mov
jge
inc
cmpsl
mov
push
subb
scas
nop
inc
movsl
and
or
mov
jmp
and
cmp
sbb
push
jl
dec
inc
xchg
leave
leave
mov
mov
rep
and
pop
jns
xchg
inc
mov
cmp
push
and
iret
pop
ds
pop
push
pop
shrb
fmuls
rcrb
inc
add
mov
pop
ror
iret
int
sbb
std
mov
insb
inc
fisttpll
mov
push
ret
xchg
or
or
into
jge
push
sbb
rcl
mov
test
jne
fwait
clc
xchg
addl
fwait
cmp
add
orb
inc
mov
movsl
je
sub
push
add
push
jmp
clc
cltd
pop
cltd
mov
push
ret
xor
fidivrs
cli
movsb
push
dec
ja
sarb
lret
sub
cwtl
xor
pop
cld
in
and
pop
shrb
adc
xchg
push
xor
js
adc
push
push
and
int
stos
clc
add
idivl
jecxz
mov
pushf
cmp
sahf
cmp
call
lea
sub
int3
ds
mov
push
mov
mov
mov
clc
push
push
push
push
insb
mov
push
jno
clc
mov
cmp
shll
xor
cmp
data16
push
aaa
dec
cltd
aas
add
and
mov
popf
mov
out
pushl
inc
pusha
xor
push
pop
dec
sti
pop
xchg
inc
movsl
inc
dec
or
nop
mov
jge
adc
push
sbb
fisttps
push
jb
adc
repz
mov
cld
mov
xchg
add
pop
jge
addr16
inc
hlt
inc
push
and
cltd
sub
jnp
jne
mov
js
lods
xchg
fs
mov
cmpl
ftst
mov
pmulhuw
pop
push
lods
aas
dec
push
out
jnp
aad
arpl
loope
adc
cmp
iret
es
pop
and
sub
and
cmp
out
sbb
xchg
stos
push
push
xchg
fldenv
hlt
and
leave
add
or
mov
pop
mov
inc
cli
xor
aad
jl
cwtl
ret
ret
cltd
push
adc
xchg
imul
push
fs
xor
push
jp
sbb
mov
pushf
xor
shll
and
xchg
pop
sub
adc
add
loope
inc
lock
lea
push
cmp
clc
es
xchg
pop
sbb
pop
sbb
add
aaa
lock
mov
jae
inc
pushf
frstor
xchg
fstps
std
sub
mov
cmp
xchg
loop
lods
xlat
lret
repz
pushl
lods
and
call
leave
fmuls
orb
inc
add
xor
mov
mov
scas
jge
lret
aam
mov
xor
icebp
adc
cld
imul
push
aam
jg
adc
sbb
cmp
push
cmpsb
push
aam
mov
test
repnz
cwtl
aaa
xor
push
data16
xchg
out
stos
mov
inc
and
fs
or
and
lods
and
push
pushf
fstpt
xor
adc
add
xchg
pop
out
and
mov
stc
test
popf
push
sahf
jae
testl
xor
xorl
ss
jbe
loop
xchg
fcmovnbe
fisubl
sbb
adc
jns
leave
faddl
test
das
pop
xacquire
fsubp
das
lcall
fistl
dec
add
out
jo
cltd
sbb
loope
push
jle
push
pop
shrb
fidivs
repz
icebp
and
or
jb
mov
sahf
std
fsts
or
fnstenv
mov
lea
roll
mov
fadd
mov
xor
and
cltd
aaa
mov
add
das
nop
cmp
pop
push
fidivl
and
mov
loope
mov
data16
xlat
xor
lcall
stc
push
jae
sbb
xor
les
jecxz
repnz
aad
mov
stc
pop
mov
push
gs
inc
arpl
iret
in
js
sahf
mov
lods
out
sahf
pop
fildll
sbb
and
pop
sub
insl
or
jmp
nop
adc
ja
enter
das
das
jno
jecxz
loop
dec
cwtl
mov
cs
inc
push
add
mov
jae
rcrb
icebp
jge
std
fisttps
das
subb
xlat
cs
mov
into
jge
int
cmp
add
jno
jg
xchg
icebp
push
mov
out
popf
add
pushf
stc
pop
and
pop
std
cmp
pop
xchg
ja
xchg
dec
or
repnz
push
mov
pop
push
scas
xorl
xchg
decb
data16
jl
jecxz
mov
std
inc
lods
dec
stos
push
and
mov
cltd
xor
loope
push
or
push
pop
out
stc
xor
std
push
cmp
mov
orl
imul
icebp
nop
lcall
inc
leave
mov
clc
mov
adc
mov
xor
pop
repnz
cmpsl
adc
arpl
lods
mov
movsb
std
dec
or
stos
sbb
jo
hlt
aaa
arpl
cmp
mov
inc
push
gs
adc
aam
xor
mulb
sahf
push
ficompl
dec
sub
addr16
mov
mov
cmp
scas
js
adc
fsubr
out
das
pushf
lea
pop
js
enter
xor
jnp
into
or
sub
push
or
ret
mov
sbbl
mov
divl
pushf
and
in
xchg
ret
xchg
fst
dec
mov
cwtl
lea
fidivs
jge
mov
lds
hlt
fisubs
in
jnp
outsl
movsb
or
orl
sub
cmp
shrb
std
and
lods
inc
jmp
jp
lahf
repnz
mov
test
dec
push
pop
push
leave
mov
addr16
jne
clc
rol
iret
int
inc
out
sahf
dec
dec
xor
jo
mov
rolb
je
in
and
stos
sti
lret
jno
inc
push
mov
leave
fisubs
pop
insb
vunpcklps
lods
sbbb
into
fmul
ja
mov
clc
rclb
xchg
pop
dec
xor
je
mov
sbb
cs
js
push
jmp
jno
jg
or
lds
out
push
out
les
xchg
or
jecxz
stos
mov
aam
mov
pop
rcll
sbb
fs
iret
mov
sbb
test
cmp
pop
inc
mov
push
push
fsts
nop
fadds
ficoms
cs
ret
jecxz
bound
cmp
pop
scas
add
je
repnz
jmp
fs
lcall
es
stos
mov
cmp
cltd
pop
fsubrs
add
pop
jecxz
in
push
test
inc
stos
jl
mov
lods
cmp
mov
mov
pop
push
cmp
inc
arpl
dec
nop
enter
dec
jmp
xchg
bound
insl
jbe
dec
dec
pop
add
pop
fs
mov
xchg
push
bound
mov
push
mov
adc
ljmp
dec
dec
outsb
sahf
mov
cli
add
stc
mov
leave
pop
push
jo
sub
fmuls
push
mov
inc
xor
jecxz
or
or
xor
ds
jg
js
out
out
sbb
xchg
insb
fs
dec
pushf
lea
shlb
inc
push
jnp
iret
loope
dec
sub
icebp
mov
add
idivl
push
xor
imul
adc
xlat
scas
shll
arpl
aad
sbb
jle
aas
xor
movsb
xchg
jo
pop
mov
scas
outsl
cwtl
xchg
mov
cmpb
out
sub
aad
pop
adc
pop
jb
mov
lahf
fisttpl
mov
cmp
stc
mov
cmpsl
ret
ret
sub
push
pop
sbb
xchg
outsb
insl
adc
push
adc
nop
mov
pop
xor
popf
push
test
push
push
xchg
dec
rorl
nop
pop
sub
insb
stos
adc
mov
fidivs
stc
push
jp
dec
outsl
in
add
or
ds
popa
lods
addb
add
xchg
or
push
data16
or
stos
sbb
push
mov
pop
and
outsl
fs
test
sbb
push
mov
pop
jbe
shrl
outsb
ss
int
cmpsb
pusha
cmp
mov
xchg
cmp
xor
loopne
loope
add
sti
pop
daa
fs
inc
nop
jne
xchg
pop
clc
imul
adc
pop
inc
adc
add
xchg
cmp
sbb
daa
xor
imul
xchg
pop
in
push
and
dec
and
cs
testl
inc
inc
pop
jmp
addr16
sbb
or
xor
mov
fsubrs
rcrl
or
xor
adc
in
pop
roll
jl
inc
mov
lds
adc
fmull
lahf
clc
fwait
icebp
push
aam
inc
and
outsl
mov
cmp
pop
cmpsb
xlat
fsts
push
mov
and
idivl
sub
dec
inc
sub
out
insl
xchg
xor
je,pt
sbb
mov
mov
jno
out
mov
aas
iret
dec
cli
mov
outsb
mov
outsb
mov
cld
popa
mov
jo
or
xchg
je
movsl
pop
iret
lods
jecxz
mov
push
popa
pop
mov
jne
movsl
or
sbb
mov
ffree
adcb
jae
mov
adc
dec
sbb
push
ret
fnsave
inc
or
rol
mov
xlat
sahf
add
jle
mov
inc
cmp
dec
mov
and
mov
sbb
mov
push
xor
pop
mov
xor
lds
add
mov
mov
mov
dec
in
inc
das
ds
jmp
dec
pop
xor
sbbb
rcl
cmpl
in
dec
pop
fst
loop
or
scas
outsl
mov
or
cmp
ljmp
sbb
fiadds
fs
jecxz
mov
dec
sub
xor
test
pop
cmp
out
sub
dec
test
ljmp
xchg
mov
add
in
sbbl
lcall
aam
xorl
leave
sbb
fisttpll
jg
add
int
andb
pop
sbb
adc
push
inc
push
sub
xchg
stos
jge
jmp
jae
mov
cs
mov
cmp
inc
adc
inc
shl
bound
out
sub
int
jge
hlt
stos
cmp
inc
cmp
out
es
out
in
mov
das
pop
rorl
out
pop
mov
lcall
cld
mov
mov
icebp
mov
mov
jl
icebp
into
int
add
icebp
push
push
fsubrs
fs
out
or
adc
or
xchg
cs
sub
cld
sbb
fimull
fistpl
sbb
lret
test
int
fbstp
xor
adc
lock
in
adc
and
mov
loop
test
lods
pop
jbe
mov
fdiv
xor
xchg
jnp
es
js
adc
ret
inc
repnz
pop
das
push
lds
mov
sbb
adc
push
push
mov
xchg
add
xchg
sbb
stos
xor
cmp
fldcw
push
cmp
pop
gs
icebp
ret
dec
xor
sub
rcr
stos
adc
add
xor
xchg
test
popf
stos
cltd
aad
push
je
and
movsl
add
or
xor
insl
ret
mov
sbb
imul
jo
das
aam
adc
lret
sbb
pop
and
cld
dec
adc
test
icebp
push
or
jge
shlb
out
fisubl
cld
xor
sbb
dec
aas
call
dec
test
mov
cmp
cli
cmpsl
xchg
add
or
xchg
outsl
in
cmc
out
xor
daa
stos
inc
jae
imul
inc
hlt
stc
sbb
pusha
pop
push
in
mov
add
ss
sub
adc
movsl
cmp
das
stc
xorl
pop
out
out
fildl
pop
adc
int3
adcl
loop
mov
jne
mov
xor
push
xor
mov
adc
xor
inc
mov
out
cmp
adc
decl
push
mov
addl
or
repz
flds
imul
mov
dec
loopne
adc
sbb
bound
sub
lcall
ret
icebp
push
dec
cli
push
mov
sbb
inc
mov
and
jbe
push
mov
jo
fstpt
and
jge
jo
xor
lret
lcall
dec
lods
in
movsl
repz
addr16
push
jo
into
adc
pop
lock
gs
in
mov
pop
fldenv
and
jge
push
sbb
pop
inc
xor
inc
adcl
ss
int3
jl
ja
gs
fldcw
mov
and
pop
jecxz
fstps
imul
out
mov
or
lods
fcmovbe
outsl
neg
les
js
out
les
jp
cwtl
mov
shlb
add
mov
insb
xor
pop
fwait
arpl
xor
cmp
pop
cwtl
popa
pop
enter
pop
lret
cmp
jnp
fimuls
cmpsl
clc
lret
ud2
fimull
popa
jmp
mov
jmp
psubusb
sbb
ljmp
and
lret
fs
testb
pop
pop
ror
jp
mov
pop
fcomps
popf
mov
fisubrl
scas
int
ret
cmp
add
gs
lahf
rcll
push
lret
sub
call
lods
loop
dec
int
inc
push
call
loop
xor
shl
xchg
push
out
push
xor
dec
sub
out
ljmp
adc
lret
fwait
lcall
add
pop
sbbb
clc
cmpsb
mov
or
popf
or
mov
cwtl
and
jae
psubd
add
sbb
pop
or
pop
mov
jmp
sbb
pop
jl
and
cli
mov
adc
lret
xchg
dec
das
push
rorb
push
shrb
add
je
jg
fildll
dec
loope
je
sbb
aam
adcb
jmp
aam
xlat
cmp
pop
inc
les
gs
xchg
fisubl
jg
adc
rcll
int3
adc
adc
cmpsl
xor
cmp
aam
cli
add
xchg
inc
jno
test
jne
test
jecxz
add
and
bound
shrb
lds
sub
lods
fimull
push
cltd
cmpsb
mov
repz
lods
jbe
or
mov
inc
fbld
xor
divl
call
movsl
rorb
mov
and
gs
mov
cmp
cmp
lret
fwait
mov
or
fwait
orl
fwait
mov
mov
sub
pop
outsl
addb
and
scas
addl
pusha
loopne
arpl
mov
add
int3
jl
dec
cmp
xchg
jno
pop
imul
lds
test
test
mov
sbb
xorl
push
inc
xor
mov
fistpll
jb
pushf
in
adc
push
rorl
and
jne
mov
mov
pop
and
mov
or
enter
popf
push
sub
shld
mov
xchg
stc
jmp
inc
inc
mov
cmp
loopne
and
xorb
jmp
mov
pop
mov
mov
stc
push
sub
mov
pop
inc
mov
out
add
bound
lock
mov
mov
push
ja
and
imul
lods
xlat
mov
ficompl
fsubrs
ss
xor
push
cmpl
adc
cs
pop
mov
adc
sbbb
push
inc
jge
mov
test
sbb
lea
pusha
jecxz
out
filds
movsl
push
dec
test
popa
sbb
inc
sub
outsb
jmp
xchg
push
lret
hlt
into
in
orb
scas
add
cwtl
mov
cs
mov
xchg
scas
dec
cmpb
mov
fidivrs
mov
sbb
ss
dec
ret
pop
das
or
movsl
dec
push
inc
jmp
push
or
cmp
in
loope
mov
add
je
ss
fdiv
push
sub
jl
cmpsb
add
dec
xor
repz
inc
into
mov
mov
nop
bound
cmpb
inc
adc
mov
movsl
inc
jo
or
gs
outsb
call
int3
mov
mov
xchg
add
cmpsb
js
jl
pop
cmp
and
shrb
lds
daa
pop
das
pop
scas
rcrb
scas
pop
and
repz
mov
pop
mov
ret
jne
test
pop
aam
gs
fstl
lret
lods
stc
inc
movsb
mov
es
cmp
mov
gs
xchg
mov
aam
xor
les
fldl
dec
test
outsb
and
push
lock
imul
jecxz
push
dec
add
push
pop
lods
pop
or
or
cwtl
nop
scas
inc
adc
mov
sub
cmc
lcall
sub
pop
mov
inc
hlt
cmp
or
movsl
arpl
das
test
xorl
add
adcb
adc
and
in
or
addb
pop
xchg
lds
mov
push
xor
addl
enter
ljmp
js
lock
call
je
mov
xor
out
mov
int3
inc
je
xchg
fs
outsb
add
mov
fstps
lock
popf
and
lahf
arpl
dec
into
fcmove
hlt
xchg
jecxz
xlat
imul
push
push
and
iret
sub
sub
push
loope
jns
xor
push
movsl
lahf
movb
xchg
lds
xchg
sub
shl
dec
iret
inc
inc
pop
mov
int3
and
or
mov
push
add
cmp
neg
repz
mov
pusha
sub
sub
cmp
sub
mov
sbb
and
fldt
sub
stc
adc
push
stos
cmpsb
xorb
dec
rolb
test
mov
or
push
mov
xchg
iret
push
lahf
out
or
mov
mov
or
insl
sbb
jns
call
and
inc
test
xor
test
lahf
xor
push
call
jno
outsl
cmp
cmpsb
nop
dec
xlat
sub
adc
or
in
sahf
sbb
mov
xchg
rep
cmpb
inc
lea
adc
xchg
sbb
icebp
add
je
nop
sub
pop
sbb
xchg
out
sbbb
repnz
sbb
cmp
js
arpl
test
fcmovne
mov
mov
roll
cmp
mov
lock
push
jge
push
test
ja
iret
sahf
fs
jmp
stc
lds
ret
cld
cmp
das
loop
sbb
ret
push
sbb
and
mov
and
hlt
enter
xor
aaa
adc
or
and
loop
cld
sub
xchg
arpl
pop
or
mov
fwait
lds
mov
sti
dec
clc
mov
das
or
add
sub
pop
dec
stc
aad
or
loop
or
cwtl
pop
or
or
outsb
arpl
fwait
pop
lods
mov
lahf
pop
jle
jmp
dec
popa
xchg
xlat
pusha
cmp
ds
mov
mov
add
and
adc
in
jp
jb
pop
jne
repz
ljmp
dec
movsb
pop
das
and
jg
mov
adc
cli
icebp
jmp
sbb
add
pop
add
mov
cmp
mov
rcrl
sub
out
shll
add
mov
xchg
mov
sbb
pop
jns
sbb
in
in
pop
push
jg
push
mov
hlt
je
in
add
xchg
stos
push
add
cmp
sub
xorb
and
mov
sti
sub
je
jns
xor
jae
xchg
in
dec
cmp
lcall
imul
out
arpl
les
jne
popf
push
pop
sbb
fnstcw
in
and
imul
test
and
leave
mov
dec
pop
fs
xchg
mov
std
pop
mov
lock
pcmpeqw
sbb
lret
and
fcoml
arpl
test
popf
fcomp
lock
pushl
in
data16
or
or
daa
add
and
iret
inc
xchg
mov
jno
pop
mov
mov
dec
pop
sbb
and
in
xchg
add
push
lahf
xor
mov
mov
adc
fsubrs
nop
dec
loopne
jle
mov
stos
scas
in
dec
jns
sbb
cmp
subb
daa
adc
notb
push
fbld
divl
add
int3
jg
mov
rcrb
push
or
pusha
std
push
repnz
sub
popf
daa
pop
inc
ret
sub
fwait
jnp
or
ljmp
adc
mov
mov
movsl
and
notb
test
sar
mov
push
clc
inc
inc
ss
jne
mov
pop
repz
adc
iret
lahf
push
xor
mov
xor
jle
add
dec
mov
xchg
insl
mov
imul
xchg
xchg
movsl
lds
inc
rcrb
dec
in
dec
push
xchg
into
gs
inc
popa
push
lods
and
sbb
mov
mov
mov
ret
inc
inc
or
mov
xchg
sbb
fiadds
add
sub
sub
fwait
push
hlt
notl
bound
push
jl
lods
rorb
push
mov
and
out
xor
pop
xchg
xchg
push
cmp
pop
push
sbb
mov
cltd
mov
adc
push
add
fwait
out
mov
fsubrs
ret
add
jns
sub
popa
fcompl
mov
negl
clc
out
inc
or
dec
cwtl
movsl
fiadds
xor
inc
in
mov
mov
ljmp
cmpsl
and
mov
ds
iret
xsha1
cmpsb
mov
std
fmull
lahf
ja
push
aam
mov
mov
imul
mov
iret
nop
mov
rcr
fwait
and
adc
push
mov
imul
icebp
popf
je
inc
mov
mov
sbb
push
ret
inc
std
push
movsl
mov
test
repnz
lahf
subb
fidivl
insl
xchg
test
mov
faddp
lret
xor
in
dec
test
cmp
xlat
je
data16
add
sub
rorb
jmp
mov
cmc
add
out
push
out
data16
std
xor
push
rcll
pop
out
inc
loope
inc
aam
xchg
fnstenv
push
outsl
cmp
inc
cmp
adc
fsubl
pop
mov
ljmp
dec
and
adc
jmp
adc
imul
mov
mov
pop
cmp
add
dec
fdiv
push
insb
fucom
sub
sbb
push
or
xor
jnp
rolb
push
addl
dec
or
inc
cmp
jnp
jb
mov
in
lds
or
push
xlat
out
cmpsb
rcrb
and
pop
add
inc
jle
stos
jo
push
faddp
dec
das
jne
lret
xchg
inc
jne
lret
inc
rcrb
xchg
push
sbb
arpl
int
aam
cmp
shll
iret
sbb
out
xor
mov
fsincos
or
shrl
mov
outsb
jp
movb
popa
push
ret
adcl
sahf
in
xor
push
sbb
sub
push
outsl
pushw
mov
lods
adc
mov
out
aad
inc
insl
add
add
mov
lock
mov
inc
add
dec
sub
xchg
mov
aad
sbb
mov
jno
repz
outsl
dec
in
lahf
inc
outsl
mov
scas
push
cmp
mov
aam
addr16
push
add
inc
jo
loopne
dec
out
loope
in
mov
stos
call
shlb
xchg
xor
aad
cmp
out
jmp
add
push
or
xchg
inc
fsubl
stos
pop
test
push
dec
mov
lock
fsubr
jmp
cmp
in
rclb
cmpsb
jb
arpl
int
cmp
lods
inc
pusha
movsb
out
ror
ds
movsb
fs
push
lahf
jne
adc
mov
mov
or
and
inc
lock
push
pop
jecxz
stos
dec
push
push
fisubrl
sbb
or
cmp
sub
aad
mov
mov
data16
les
fmull
ss
dec
mov
adc
cltd
adc
pop
outsl
je
fwait
mov
ret
mov
shll
inc
aam
rclb
fbld
dec
shll
leave
repnz
mov
imul
push
pop
sbb
and
aam
add
pop
xor
insl
mov
fsubl
bound
into
cli
sarl
jle
inc
push
idivl
and
std
test
adc
test
es
std
add
jecxz
fsubrl
orl
jb
mov
leave
cld
adcb
mov
ljmp
adc
lds
in
push
push
pop
adc
ds
sbb
rorb
imul
es
or
outsb
subb
test
dec
mov
sbb
xchg
or
and
pop
ja
scas
pop
aas
sahf
ss
mov
inc
cwtl
push
cmp
stos
out
out
mov
addr16
adc
push
fcomps
int3
or
mov
pop
addr16
mov
in
inc
or
scas
adc
and
cmp
test
xor
filds
stos
out
jl
pop
mov
xchg
push
xor
or
scas
loope
flds
stos
mov
les
pop
sub
cmp
adc
aas
push
or
xlat
jp
adc
aam
fs
dec
or
mov
fwait
in
push
and
lds
arpl
add
or
ss
filds
sub
clc
inc
int
rolb
mov
push
mov
jae
inc
hlt
scas
lea
push
add
cmc
cmc
repz
setb
test
sbb
call
mov
bound
movsl
js
ja
inc
mov
jns
pop
cmp
cmp
ret
mov
lock
iret
mov
cmp
femms
aam
arpl
cmp
mov
repz
pop
inc
inc
xor
cwtl
in
loope
cmp
mov
outsl
xor
push
sti
xchg
mov
in
dec
fbstp
pop
mov
scas
or
ds
mov
dec
lods
push
test
mov
pop
adc
out
and
les
mov
or
mov
fucomi
xor
dec
pusha
jl
mov
sbb
icebp
pop
cmp
es
ret
out
aaa
jg
mov
fcoml
hlt
ret
push
clc
pop
lahf
mov
mov
test
divl
jno
jb
adc
fisttpl
adc
cmp
stos
sahf
mov
in
adc
lret
outsb
add
mov
out
and
adc
adc
sbb
leave
jae
or
cli
cmc
ljmp
mov
jo
nop
xor
int3
lret
outsb
scas
int
fwait
leavew
push
pop
inc
loop
mov
jecxz
cmpsb
lds
outsb
shl
das
xor
cld
push
dec
jle
das
pop
jmp
mov
mov
bound
inc
dec
jne
adc
inc
pop
mov
mov
int3
xor
mov
das
or
mov
frstor
cld
and
cmp
nop
cmp
pusha
loope
flds
pop
sub
loopne
push
fisttps
ja
jae
sub
adc
or
jo
lret
pop
push
lahf
sbb
ret
mov
loopne
mov
es
push
mov
sarb
test
mov
in
nop
scas
mov
mov
int3
xor
stc
outsl
stos
xchg
cmp
cmp
inc
adc
sub
in
mov
mov
sub
enter
xlat
out
adc
inc
pop
stos
or
imul
pushf
insb
arpl
aad
stos
scas
mov
jmp
jmp
and
add
rorl
in
xchg
repz
pop
int
xchg
mov
lods
or
sub
mov
scas
outsb
int3
enter
mov
pop
shl
adc
cmp
int3
pop
mov
cmp
adc
mov
cld
mov
inc
addr16
enter
mov
mov
scas
mov
fbstp
xchg
dec
pop
push
into
jg
jg
divl
jecxz
pop
mov
sbb
imul
icebp
aaa
dec
jg
mov
push
mov
dec
sbb
adc
movsb
push
push
jo
push
outsb
cld
and
jmp
cmp
clc
js
fdivrs
inc
lea
mov
xor
mov
je
add
repnz
out
pushf
int3
pop
test
lods
sbb
jmp
out
and
hlt
insl
push
idivb
shll
in
ds
imul
cli
jb
pop
sub
sub
test
repnz
pop
xor
push
jge
cmp
fdivr
cld
push
and
cmpsb
and
ret
cmpsb
inc
sarl
leave
and
cltd
test
cmpsb
and
inc
xor
xor
scas
mov
add
in
sbb
js
out
lret
mov
or
nop
insl
xchg
mov
pop
mov
and
adc
inc
repnz
daa
mov
insl
negl
fucomp
mov
out
insl
movsl
push
cwtl
push
and
dec
rolb
loope
data16
lahf
cmc
and
aad
cmp
cld
in
dec
push
sub
lock
xchg
test
or
testb
xchg
test
jp
adc
and
push
test
lret
and
in
xchg
iret
aad
jmp
and
xchg
sbb
push
mov
lock
jae
sbb
pop
filds
cmpsl
subb
cmp
pop
stc
fstpt
push
inc
jns,pn
stos
out
xor
add
push
xlat
scas
cmp
lods
jb
inc
enter
sarl
push
mov
jle
insl
sbb
insb
addr16
cmc
sbb
arpl
fwait
push
pop
cmp
addb
daa
mov
jp
xor
xor
mov
inc
pop
clc
sti
out
out
in
pop
fistpl
dec
push
mov
inc
pop
fstl
lahf
js
ficomps
adc
sbb
std
or
add
sar
jno
pop
insb
xor
add
stos
loop
mov
jle
loope
dec
scas
daa
stos
jmp
sarb
pop
dec
dec
pop
vpshlw
mov
sub
pop
mov
jecxz
jp
sub
xchg
adc
dec
out
xchg
xchg
ret
inc
cmp
cmp
cmp
fxtract
gs
mov
lock
ja
inc
xor
jp
mov
inc
mov
shrl
out
inc
jl
inc
mov
mov
in
psubsw
pop
xor
repz
jmp
enter
xor
fidivs
cmp
xchg
cltd
and
rorb
in
push
pop
movsl
lret
pop
jno
add
outsl
push
and
insl
ret
push
idivl
jnp
in
cmpb
mov
inc
add
adc
mov
repnz
negl
mov
sbb
mov
rclb
xor
mov
mov
fiadds
test
xor
fisttpl
xchg
sbb
test
out
aam
outsl
stos
add
into
cmpsl
data16
xchg
mov
out
lods
push
mov
jo
and
popa
je
movsl
lcall
out
sti
stos
mov
sub
outsb
lds
dec
jl
cmp
mov
leave
and
andl
outsl
fwait
pop
xchg
andb
xchg
je
dec
scas
test
shll
das
xchg
push
ja
int3
inc
xchg
jnp
lret
and
pop
shrb
sbb
push
sbb
lret
nop
sub
fs
xchg
jne
loope
icebp
nop
dec
mov
cli
out
mov
and
pop
inc
pop
adc
and
push
jg
insb
in
cmp
movb
inc
jle
out
dec
xor
mov
arpl
and
fmul
iret
sub
or
je
push
movsb
aam
inc
dec
repz
jne
out
jnp
mov
inc
add
sbb
ffreep
aaa
mov
xor
popa
add
rcl
test
pop
adc
js
and
or
nop
xchg
inc
mov
fists
cmpb
insl
inc
and
sub
test
cltd
dec
mov
aad
and
into
cmp
push
push
lret
push
sub
xchg
pop
jbe
jmp
and
pop
fidivs
outsl
mov
cmp
xor
cmp
push
add
les
mov
xor
shl
iret
insb
fisubrs
and
xchg
lahf
cs
or
adc
clc
xor
in
lcall
or
pop
or
xchg
movsl
xor
clc
cmp
pop
sbbl
sarb
icebp
push
adc
cli
inc
insb
xchg
andb
aad
ret
xor
insw
in
inc
adc
adc
mov
mov
sub
inc
arpl
pop
dec
fildll
in
gs
pop
mov
in
push
sti
shlb
xchg
sub
dec
mov
push
cmc
jno
xchg
call
adc
lods
sub
adcb
sbb
lock
popa
movsl
cmpsl
mov
sbb
sbb
sub
xchg
push
in
sti
sbb
add
test
iret
or
sub
loope
xor
out
xchg
flds
popa
cmpl
inc
add
gs
mov
sub
push
and
mov
inc
aad
dec
jg
insb
es
pop
mov
movsl
adc
negb
dec
xor
out
inc
inc
sub
mov
lret
loopne
addr16
inc
add
cld
aam
popa
pslld
xchg
pop
cli
dec
push
lock
test
mov
sbb
popa
add
or
aad
push
lock
xchg
cmp
dec
sub
and
inc
int
gs
and
inc
mov
ljmp
fdivrl
jl
mov
insb
int
mov
pop
push
add
mov
scas
rcrb
hlt
into
add
sub
sahf
out
xchg
xchg
jl
mov
into
imul
xor
pop
xor
push
xchg
cmp
jge
add
push
addr16
loope
rcrl
cmp
aaa
mov
loope
fisubs
sbb
xor
sarl
mov
leave
dec
xor
jo
loope
repz
pop
ret
mov
or
push
xor
cld
pushl
pusha
sbb
lret
fstpl
mov
clc
subb
sahf
add
dec
push
rclb
jb
mov
sbb
cs
cmp
in
outsl
loope
mov
out
lods
jmp
sbb
adc
dec
pop
sub
dec
in
jae
cld
aas
hlt
inc
mov
xor
mov
adc
adc
scas
cmpsl
repnz
mov
subl
pop
jo
int3
ja
or
or
adc
adc
dec
jbe
cmp
push
push
adc
dec
sahf
cmp
movsl
dec
movsb
in
push
xorb
popf
jle
addl
ss
rorl
push
add
imul
mov
clc
fs
leave
ficomps
and
xchg
fcoml
lods
xor
lahf
sbb
xor
sub
add
fnstcw
pop
loop
test
in
mov
rcr
dec
jp
pushl
or
cmp
cli
sbb
jb
sub
scas
xchg
imul
add
lds
pop
mov
lea
in
insb
mov
mov
sbb
dec
mov
or
and
push
push
pushf
mov
sub
cmp
leave
pop
shlb
sub
out
mull
cmpsl
in
ret
pop
jp
dec
in
flds
dec
pop
adc
aas
pop
mov
dec
cmp
test
insb
push
bound
ja
dec
or
aaa
jno
mov
sbb
mov
push
or
mov
in
mov
or
aam
addr16
fincstp
stos
push
mov
xchg
sub
loopne
mov
sbb
pop
sahf
call
mov
mov
enter
outsb
out
sbb
pop
mov
push
lea
sub
pop
lock
loopne
mov
sbb
rcrb
je
movsb
enter
sub
ds
add
sbb
addb
aaa
cmpsl
mov
inc
xor
mov
xor
sbb
xchg
fdivs
push
nop
sti
dec
outsl
call
mov
sbb
fwait
dec
sbb
push
mov
jl
repz
xchg
xchg
call
push
fldenv
jo
enter
mov
mov
jns
lea
sbb
jnp
call
cmp
loope
push
mov
lret
fmull
popa
push
insl
stc
fmuls
rclb
cmp
test
push
arpl
cmpsl
mov
insl
jbe
mov
inc
stos
rorl
xor
sarl
sub
adc
and
push
inc
loop
add
mov
arpl
ja
pop
pop
sbb
sub
test
mov
inc
and
inc
lahf
push
mov
xor
lcall
stos
mov
sbb
jb
adc
or
imull
adc
jbe
and
dec
cld
sbb
push
sub
test
es
pop
push
sbb
adc
dec
inc
shlb
mov
dec
imul
dec
cmpsl
push
out
jb
dec
lods
cmpsl
dec
sbb
or
xlat
scas
mov
xor
outsb
cmpsb
or
ljmp
and
ja
int3
pop
inc
inc
or
pusha
mov
imull
and
jge
clc
push
mov
jmp
js
mov
loope
popf
xor
and
hlt
cmp
pop
fcomi
pop
sbb
inc
sbb
cwtl
cmpsb
lds
sub
xchg
outsl
inc
and
insb
insl
pop
cmpsb
call
add
xor
push
jb
pop
test
mov
mov
in
lahf
cmp
flds
jno
cld
lret
mov
mov
mov
xor
and
in
movsl
xor
loopne
lcall
sub
xor
xchg
jp
sbb
fisttpll
xchg
cmp
faddl
mov
inc
out
and
in
push
xchg
std
aas
mov
sarl
in
stos
jecxz
push
jne
dec
cmp
or
fnstsw
pop
in
xlat
jge
jnp
fs
adcb
cmp
fstpt
pop
out
imul
clc
inc
cmpsb
xor
cmp
icebp
mov
mov
xchg
pop
fildll
push
push
test
int
out
push
add
mov
push
mov
pop
push
movsl
rcrl
addr16
out
mov
push
lds
in
lods
movsb
cmp
xor
movsb
out
adc
subb
popf
sahf
and
adc
imul
dec
mov
mov
fdivrs
jge
dec
ljmp
xchg
arpl
and
jg
mov
bswap
aad
push
add
mov
lret
popf
addb
fwait
and
jl
pop
ret
mov
jmp
fidivrs
mov
js
or
mov
xchg
and
addr16
dec
cld
inc
push
jns
out
add
lds
xor
push
mov
xlat
test
lods
out
add
mov
mov
in
rclb
ds
mov
outsl
add
or
pop
and
out
clc
mov
adc
loopne
xchg
test
imulb
push
cmp
lods
dec
js
cmpsb
sbb
les
rcl
orb
sti
lret
push
stc
jno
jno
les
cwtl
mov
loopne
mov
movsl
inc
mov
cmp
mov
clc
push
ljmp
cmp
cmpsb
mov
mov
mov
adc
xchg
xchg
mov
in
sarl
dec
mov
cmp
leave
pop
in
out
xchg
sub
les
push
xchg
push
call
test
cmp
faddp
xor
faddl
jae
push
leave
xchg
shlb
nop
loop
dec
push
jbe
push
inc
jp
enter
js
sub
outsl
and
lret
cmp
popa
mov
add
xor
pop
pop
sub
and
add
adc
mov
sub
cld
mov
lcall
and
xor
jg
jp
add
rcrl
mov
je
cli
stos
mov
jmp
mov
es
test
cmp
or
and
stos
and
xor
cmp
cmpsl
xor
fildl
jno
sbb
jmp
jbe
adc
sbb
sbb
jl
mov
lret
adc
shll
or
fstps
mov
sbb
js
sub
fbld
fucomp
push
pop
xor
aaa
sub
aaa
enter
leave
fstp
inc
int3
mov
push
cmp
xlat
adc
jl
adc
and
adc
insb
aad
movsb
and
xchg
jp
pmulhuw
das
push
xor
stos
ds
mov
mov
add
and
clc
clc
xor
pop
out
xchg
ret
or
pop
xor
or
adc
mov
pop
stc
add
and
fldenv
mov
fidivl
inc
mov
and
icebp
jmp
sbb
mov
repz
cwtl
jbe
cld
in
cmp
mov
jg
jmp
xchg
mov
push
sub
ja
ret
fldt
fnstsw
popa
push
mov
lret
and
cmpsl
ja
lods
jno
int3
sarb
shlb
addr16
and
or
xchg
xor
pop
or
lcall
and
jo
ss
xor
adc
subb
mov
mov
xchg
mov
int
fisttpl
xchg
push
nop
cmpsb
pop
sbbl
cltd
mov
icebp
cs
mov
or
pop
pop
data16
pop
icebp
push
xchg
inc
xchg
hlt
dec
jg
sbb
sti
xchg
push
sbb
fsubs
cld
rclb
ret
jmp
ljmp
mov
adc
mov
movsb
inc
jmp
push
mov
cli
imul
cmpsl
jbe
cmpsb
push
jle
ljmp
iret
xchg
cwtl
orl
cmc
stc
sub
mov
movsl
imul
jne
xor
add
les
popa
scas
fs
sub
jp
rep
sbb
pusha
loope
cmpsl
mov
popa
pop
inc
test
jns
fnstenv
lret
ljmp
addr16
xchg
mov
mov
loope
or
in
inc
cmp
dec
aaa
imul
scas
nop
push
inc
push
dec
sub
cwtl
inc
mov
popa
cmpsb
push
push
cli
cld
lock
das
sub
je
in
je
or
mov
inc
inc
ja
or
push
jno
int3
shll
scas
out
jmp
inc
fucomip
dec
adc
jnp
mov
xor
mov
aad
sar
dec
cmp
push
mov
mov
sbb
inc
loope
lea
lret
and
push
movsb
inc
dec
xchg
cmp
fcmovnu
jbe
jo
xchg
mov
lret
int
pop
adc
roll
sti
stc
inc
sub
cmp
bound
mov
sub
pop
mov
shr
es
jb
sbb
push
mov
sub
adc
mov
xchg
loopne
je
stos
fnsave
das
jecxz
mov
testb
dec
mov
push
or
mov
jbe
inc
into
cmp
pop
std
icebp
fmull
sbb
pushf
daa
aam
ja
clc
mov
iret
shrb
loopne
sub
repnz
cmp
loop
mov
fdivrl
popa
daa
test
je
sub
mov
orl
dec
cmpsl
nop
mov
setno
mov
xchg
and
lock
popa
data16
dec
inc
cmp
stos
gs
sbb
mov
mov
pushf
xchg
loope
cmp
aad
and
lods
outsl
fmuls
inc
and
aaa
data16
mov
xchg
mov
insl
fcoms
xor
sti
inc
mov
ret
mov
jno
push
sbb
dec
jnp
adc
icebp
loope
sub
or
push
pop
subl
gs
lahf
adc
jmp
pushaw
sub
and
test
jge
clc
pop
movsl
jmp
popf
fstp
xlat
je
pop
test
add
aas
jmp
mov
ss
rcrl
loope
insb
out
icebp
rcr
inc
xchg
sub
rcrb
mov
jb
mov
in
mov
adc
movsl
pop
movsl
push
pop
mov
pop
lock
sub
add
rclb
daa
sbb
xchg
out
dec
or
pop
mov
cld
aaa
mov
add
xchg
and
push
xor
mov
es
js
lods
xchg
stos
mov
iret
sub
or
popf
add
adc
ja
int
cmpsl
sub
imul
insb
xchg
push
and
std
fnstsw
loop
jae
add
mov
adc
int3
daa
cli
fstps
xchg
popf
mov
cmp
and
ss
lret
bound
in
jg
fstpl
jge
incb
jle
popf
cmp
xchg
jp
pop
add
ds
mov
add
cmpsb
jge
inc
xchg
add
adcb
pushf
sbb
pop
aaa
push
or
scas
pop
loope
inc
test
test
jno
push
pop
inc
or
lods
or
mov
add
cltd
in
xor
pop
and
mov
push
xor
dec
xchg
ret
mov
dec
pop
fwait
in
repnz
int
mov
fidivs
push
xchg
cld
sbb
pop
xchg
adc
dec
imulb
insl
daa
mov
in
pop
sahf
mov
mov
push
adc
push
add
jnp
sub
and
xchg
int3
movsl
out
ret
cld
mov
lock
mov
add
jae
xchg
or
xor
pop
cmp
test
pop
mov
jno
push
mov
sub
mov
sbb
and
jl
xor
sarl
xor
cwtl
cmpsb
inc
test
pop
push
xchg
push
ds
or
subb
pop
adc
sarb
xchg
mov
adc
pop
js
sub
jecxz
int3
xor
pop
or
cmp
cs
pop
ljmp
scas
clc
dec
mov
out
jbe
xor
mov
jnp
scas
into
inc
and
popf
sub
mov
or
add
push
or
repz
fs
fistpll
cmp
outsb
leave
adc
add
adc
jne
mov
sbb
jecxz
pop
adc
cmp
fcoms
lods
inc
adc
xchg
add
rcrl
adc
pop
and
fucom
iret
shl
cltd
mov
jno
sbb
sub
iret
push
jo
push
mov
jg
stos
stc
insb
lretw
push
mov
repnz
mov
mov
fcoml
lret
inc
cmpsb
push
mov
ret
mov
pop
fdivrs
in
fincstp
aad
movsl
cmp
add
pop
fldcw
jge
inc
outsb
lret
das
sbb
js
pop
roll
push
in
sbb
mov
jae
mov
in
std
aas
sub
lds
aad
lods
dec
outsl
jecxz
push
xchg
aam
adc
sub
inc
movsl
adc
popf
sub
rorl
pop
stos
cmpsb
mov
mov
add
cmc
cmpsb
loope
mov
push
dec
mov
mov
add
lcall
xchg
push
out
jg
push
loopne
out
arpl
add
mov
dec
gs
cmc
shl
sub
stc
push
jns
fstpt
dec
or
fnstenvs
mov
data16
push
dec
andb
cmp
aas
pusha
pop
cld
jbe
daa
mov
gs
orl
jne
mov
scas
stos
scas
nop
pop
popa
sti
or
mov
fisubrs
jne
popl
push
cmp
aas
movsb
mov
aam
add
add
insl
std
dec
addr16
and
adcl
shlb
xchg
xor
cmp
adc
adc
jae
aam
in
adc
scas
repnz
xor
cmp
mov
mov
seto
fisubs
imul
sahf
cmpsb
movsb
push
jnp
pop
scas
stos
push
cltd
push
jne
mov
push
cmp
outsl
xchg
mov
test
cs
jmp
or
push
or
gs
mov
inc
jae
adc
mov
test
push
sahf
push
scas
add
xor
xor
pop
sbb
out
jbe
es
sub
jo
dec
sbb
add
fmul
lea
mov
add
xor
je
fsub
xchg
pop
inc
lahf
sbb
in
lods
adc
jb
cmpsb
mov
fldl
out
das
daa
pop
cmp
sub
in
dec
push
gs
dec
bound
xchg
mov
loope
int3
sub
and
mov
adc
and
inc
ljmp
add
in
mov
push
lds
mov
and
mov
mov
data16
test
mov
popa
inc
shr
add
pusha
dec
sar
xlat
pop
mov
add
jmp
dec
rolb
les
lahf
pop
cmp
sbb
call
jg
push
inc
adc
lea
sahf
dec
rcll
ja
jo
push
aaa
pop
outsl
cltd
or
pop
pop
sbb
push
stos
insl
inc
notl
mov
add
daa
daa
ds
sbb
mov
mov
hlt
sahf
imul
shrl
inc
push
loop
enter
loop
cmp
and
cmp
mov
ret
cwtl
addb
xor
adc
pop
sub
mov
pop
inc
or
loopne
push
sub
mov
jmp
ljmp
movsl
adc
inc
aaa
mov
loop
xchg
sbb
pushf
repnz
in
dec
je
shl
mov
sbb
pushf
dec
mov
fisubs
clc
out
js
cli
add
fiaddl
std
sub
int3
xor
lret
mov
dec
add
pop
fcoms
test
xchg
sbb
rorl
adc
or
jecxz
mov
outsb
mov
pop
add
adc
mov
sti
sub
aad
cmp
aam
lret
jge
fstp
dec
dec
mov
push
pop
push
push
mov
sub
cmc
mov
or
adcl
js
outsl
pop
outsl
dec
xchg
xor
int
pop
and
mov
push
decb
mov
push
mov
cwtl
mov
cmp
imul
fiaddl
subb
scas
add
mov
dec
mov
pop
fwait
popa
ret
scas
lea
push
arpl
pop
push
xchg
pusha
cmovne
push
shl
popf
jecxz
xor
mov
jg
rcll
jmp
notb
js
inc
xchg
frstor
pop
sbb
in
cmp
mov
scas
fdivrs
test
jmp
mov
popf
cli
adc
pop
or
pop
jmp
push
mov
or
xchg
dec
cmp
and
jecxz
jnp
sbb
adc
gs
mov
js
mov
and
inc
mov
mov
inc
idiv
push
ss
fsubr
add
xor
dec
mov
lds
jmp
stos
jnp
lret
int3
jb
add
xor
pushf
jge
dec
popf
psubusw
cwtl
into
outsb
dec
mov
mov
fldenv
inc
mov
jg
jnp
fstl
push
dec
movsb
dec
cli
pop
pop
cmp
mov
cmp
sbb
aaa
sub
notl
pop
adc
cmp
sub
adc
test
xchg
fdivs
adc
je,pt
aaa
adc
fsubl
and
test
push
add
sahf
adc
pop
mov
enter
dec
int3
ret
push
test
fsubrl
add
popa
sbb
sbb
xor
sub
sub
xchg
lock
sbbl
arpl
sbb
push
stos
rorl
mov
mov
out
or
mov
cmp
into
sub
les
adc
push
xor
ljmp
xlat
jmp
shrb
xchg
dec
aad
jnp
sar
mov
leave
jae
push
enter
or
data16
in
jmp
sub
sub
pop
aad
repz
ds
sbb
push
notl
xor
gs
sub
mov
push
xor
pushf
pop
daa
ficomps
jbe
and
nop
mov
repnz
pop
test
fimuls
frstor
arpl
cmpsl
cltd
xor
cmp
out
xchg
cli
xadd
enter
xchg
mov
outsb
lret
ljmp
cmp
sbb
sub
lahf
pop
sarw
jp
jno
push
hlt
mov
adc
push
roll
push
test
push
pop
mov
cmp
sbb
rolb
mov
pop
pushf
push
or
cmpsl
mov
movsb
jl
leave
jo
add
jnp
popf
jp
and
stc
ljmp
scas
lret
fwait
insl
insb
dec
or
xchg
and
jle
add
out
idivl
fnstsw
cwtl
ret
jmp
adc
icebp
inc
inc
or
ret
xchg
fs
xchg
out
dec
lea
stos
pop
shrl
and
adc
mov
loop
xchg
sub
sahf
pop
adcl
push
push
mov
fs
jno
test
jb
add
mov
inc
or
decl
popa
sahf
mov
pop
xor
cmpsl
jno
add
cmpsb
std
aaa
adc
les
mov
int
mov
dec
mov
xchg
mov
jp
xchg
push
loope
mov
hlt
add
lods
adc
xchg
mov
lahf
cmp
xchg
pushf
ljmp
lret
daa
enter
jp
cwtl
mov
loope
push
in
xchg
dec
push
stos
and
stos
sarb
cmp
test
lods
mov
pushf
cmp
xor
jne
pop
mov
iret
sbb
test
in
loope
jl
lret
stc
or
sub
clc
mov
pop
hlt
xchg
ljmp
or
inc
add
ds
pop
insb
push
inc
test
mov
lahf
fiaddl
push
daa
dec
outsl
xor
lret
push
arpl
cmp
mov
int
insl
push
fcoms
add
fcomps
push
xor
lds
mov
cmp
and
insl
mov
push
sti
cmp
ret
outsl
pop
push
cmc
sub
repnz
ret
and
inc
mov
sahf
inc
mov
xor
shrl
fisubs
rcrl
pop
aas
negb
mov
mov
test
outsb
dec
xchg
repz
cld
testb
pop
fmulp
mov
shl
clc
dec
jb
xchg
cmpsl
fwait
xlat
hlt
mov
sub
and
fwait
dec
cs
mov
decl
pop
xor
jnp
mov
jae
add
dec
mov
adc
jmp
xlat
lods
cmp
fisubs
jne
shr
fisttps
mov
rolb
add
and
testl
movsb
cmp
cmc
xchg
mov
pop
and
stos
loope
mov
cltd
pop
js
mov
fwait
and
lock
xor
mov
sbb
lcall
push
nop
push
sahf
lods
pop
mov
fdivl
xor
mov
adcl
aad
lea
mov
mov
shrb
xlat
dec
xorb
fisubl
mov
dec
mov
xchg
adc
pop
pop
push
sub
xlat
adc
gs
mov
or
xlat
xor
jecxz
mov
inc
mov
popf
aaa
xor
stc
lods
fs
push
in
push
das
popf
ljmp
iret
mov
rorl
sbb
cmc
inc
jmp
cmpsl
push
inc
out
lods
or
dec
test
shll
dec
scas
adc
sbb
push
shr
and
sub
ss
pop
pop
push
pushf
or
test
mov
jo
mov
shlb
daa
mov
dec
pop
push
dec
sub
stos
sbb
popf
popaw
push
push
ja
fstl
push
fs
mov
xor
je
idivb
stos
inc
div
ljmp
or
inc
movsl
or
gs
mov
aaa
je
inc
mov
sub
xor
shlb
lret
xor
insl
rcrl
fistps
sbb
cs
ret
lahf
lods
or
sahf
in
cs
popa
inc
mov
add
mov
push
testb
ss
ss
sub
push
fstpl
addr16
add
fildll
adc
xchg
or
push
inc
aaa
fdivl
neg
jmp
inc
sub
lea
or
mov
cmpsb
adc
lock
mov
addr16
out
and
xchg
test
pop
jnp
xchg
in
into
jl
pop
sub
dec
inc
leave
daa
or
sub
xor
cmp
jmp
lea
xor
enter
push
ds
outsl
cld
repnz
inc
in
in
or
or
mov
sbb
cmc
mov
mov
nop
xchg
data16
shlb
ja
xor
push
push
add
adc
add
pop
std
cmp
arpl
idivl
cmp
test
xor
dec
insl
jmp
sarl
adc
add
and
adc
pop
xchg
jl
push
jb
mov
insl
push
add
pop
xor
pmaxub
icebp
pop
scas
dec
ret
xor
call
enter
stc
sub
mov
fcmovnbe
xor
mov
jg
and
sub
out
mov
or
fcompl
sbb
popf
adc
hlt
movsl
js
lcall
test
cmp
out
std
push
lahf
mov
movsb
lahf
stc
scas
fs
roll
dec
push
mov
iret
mov
stos
rcll
arpl
pusha
pop
inc
adc
push
push
mov
xchg
push
push
pop
inc
push
dec
fildl
call
iret
xchg
cmp
mov
sub
pop
ds
addr16
mov
mov
rcrb
jno
test
fmull
ss
out
lret
pop
movsl
rorl
out
scas
jle
pop
lahf
jge
das
jno
mov
sbb
add
sub
jl
pop
jo
cmpsb
fbstp
insl
jle
push
inc
add
cltd
and
sub
xor
jl
lret
add
sbb
mov
add
inc
test
and
bound
xchg
mov
sub
add
clc
jo
subl
dec
add
adc
inc
loopne
sbbl
sub
loopne
sub
scas
arpl
inc
sbb
sbb
lds
scas
sbbl
repz
add
aad
sub
add
lahf
inc
sub
jb
push
xchg
xchg
xchg
adc
and
push
outsb
and
cltd
pop
add
mov
in
sub
pushf
pushf
fisttpl
lods
mov
scas
in
into
mov
arpl
jp
lods
jno
into
lretw
outsl
je
cmpb
pop
addr16
mov
jns
mov
cmp
js
pushf
insl
mov
sbbb
lcall
adc
jg
adc
and
leave
fwait
lds
sub
movsb
adc
push
and
in
stc
push
aad
orb
and
icebp
xchg
jns
int
and
scas
inc
popa
cmp
sti
xlat
clc
push
xor
xor
fsubrl
mov
insb
cmpsb
rep
pop
subl
mov
dec
push
lret
stos
sub
or
lcall
movlps
adc
mov
shrl
dec
or
jno
out
pop
xchg
mov
jle
mov
bnd
sahf
cmpsb
pop
mov
lods
mov
pushf
leave
imul
lods
jge
jae
and
stos
inc
mov
cmpsb
imul
notb
aad
jno
or
mov
inc
repnz
mov
inc
cmpsb
mov
jbe
and
sbb
push
fadd
mov
cld
adc
mov
inc
or
loope
mov
out
mov
int
jp
add
mov
and
test
xor
icebp
xor
and
enter
pop
pop
xchg
adc
mov
dec
or
push
add
mov
cwtl
sarb
data16
pop
sarb
loope
pop
lret
faddl
jg
mov
jb
mov
inc
mov
cmp
add
fsubr
movsl
loope
push
push
add
aam
jb
ret
mov
lea
imul
or
adc
sbb
mov
lods
sub
xchg
movl
dec
jbe
push
adc
sub
rcrb
dec
movsl
add
lods
stos
push
insl
push
cltd
rcrl
push
and
mov
aaa
sub
dec
pop
add
jnp
inc
pop
xor
adc
push
mov
push
xchg
div
pop
inc
mov
cltd
jb
repz
xor
iret
sub
sbb
aad
bound
icebp
mov
push
mov
cmp
adc
jmp
cmp
sub
mov
sub
ficoml
aam
mov
mov
mov
inc
mov
fs
push
xor
popf
cmpsl
jb
sub
and
add
push
aad
add
and
pop
mov
mov
mov
sub
add
mov
pop
aam
inc
cwtl
jp
push
pop
push
lods
dec
adc
mov
insb
sub
aad
adcb
pop
stc
or
into
pop
lods
cltd
stos
sbb
sub
cltd
cwtl
shlb
pop
jp
mov
and
gs
jb
jno
push
cs
cmpsb
jge
or
push
or
mov
mov
data16
jg
fs
sub
faddl
mov
lcall
repz
dec
mov
mov
aas
int3
xchg
scas
repz
mov
pusha
jmp
daa
clc
decb
inc
inc
jno
fstpt
imul
add
or
jno
xor
in
jns
cs
pop
mov
out
rclb
pop
stc
mov
sub
or
push
push
jl
iret
jp
jae
repnz
adc
jnp
sbb
aaa
xchg
test
xlat
mov
test
cli
ljmp
lret
mov
mov
mov
mov
and
and
jge
mov
pop
lods
test
dec
ficoml
or
mov
out
xor
sbb
out
lahf
jmp
stos
xchg
add
fsubl
lods
push
pop
popa
iret
xor
pop
adc
fs
xor
push
mov
int3
fwait
pop
pop
sbb
cltd
pop
jl
or
and
call
repnz
rcll
mov
adc
xlat
mov
addr16
jle
jb
jmp
mov
aam
mov
fs
lods
xor
or
mov
add
into
cmc
push
es
and
mov
stc
loop
sub
js
flds
add
ret
cmp
jmp
adc
mov
movsb
cmpsl
add
mov
add
popa
in
jle
and
shr
js
jno
outsl
iret
ds
or
int
out
fsub
cld
push
xor
inc
add
es
jb
imul
mov
out
mov
lock
repz
or
in
imul
insl
push
data16
adc
and
out
cmp
pop
dec
xor
in
and
out
adc
add
xor
pop
mov
std
inc
sbb
sbb
xor
aaa
scas
and
mov
push
les
pop
sub
mov
test
les
jmp
call
arpl
bound
jge
lahf
test
xor
ret
aaa
push
out
addr16
mov
out
and
bound
dec
stc
cli
test
or
dec
and
jecxz
ljmp
test
adc
aas
inc
bound
stos
or
nop
inc
js
mov
push
imul
pop
or
aam
lods
ret
icebp
clc
dec
and
popa
dec
loope
cmpsl
jne
out
cmpsb
insl
mov
rorl
dec
int
jae
imul
cmp
ljmp
push
mov
xchg
and
loop
dec
pop
imul
scas
pop
adc
sub
cwtl
ret
pop
bound
test
dec
aam
jecxz
pop
add
xchg
sub
jnp
jbe
lock
pop
jg
sub
push
cli
out
in
fcoml
arpl
lahf
notl
incb
cmpsb
leave
push
testb
sbb
es
mov
mov
xchg
inc
cmp
adc
xchg
dec
dec
ret
mov
imulb
mov
or
inc
cmp
fisubrs
mov
call
mov
mov
repnz
sbb
rorl
sti
fisttpl
jo
cwtl
adc
push
popf
imul
sub
test
andl
sarb
sbb
incb
test
cld
xlat
jbe
jge
adc
mov
xchg
cltd
fdivr
cmc
lods
add
mov
or
pop
mov
add
xlat
xchg
sbb
sub
ret
popf
and
andb
push
mov
jbe
inc
xchg
mov
scas
dec
adc
inc
mov
jle
fsubs
mov
xor
pop
lods
ja
test
lds
movntq
xchg
jmp
int3
adc
mov
mov
inc
jge
jmp
insb
mov
andb
mov
gs
jl
xor
imul
cmp
cs
imul
dec
outsl
out
jnp
lds
push
stc
sbb
mov
and
repz
sbb
loope
and
mov
sub
inc
and
scas
adc
and
fnsave
push
jmp
push
xor
xor
nop
pop
negl
loop
xchg
imulb
add
adc
ret
push
stc
lds
dec
je
cmpsb
xchg
movsb
inc
les
pop
pop
int
and
ds
adc
pop
lcall
daa
push
xlat
outsb
fistps
repnz
dec
adc
mov
js
cmp
cwtl
xor
enter
xor
lods
xchg
out
sub
push
std
jl
test
xlat
inc
lret
shll
ds
ret
sahf
test
subl
xlat
or
jp
lods
mov
loop
idivl
imul
popa
pop
cmp
cmp
dec
push
dec
aaa
jb
sub
rol
lds
int3
jnp
pusha
fisubrl
xchg
xor
fnstsw
adc
out
dec
or
addr16
pop
arpl
add
stos
lahf
jns
sar
lds
ret
sub
stc
ret
cs
cmp
adc
cmp
push
mov
rol
adc
mov
ljmp
mov
dec
xor
cmp
das
cmp
ficoms
mov
sbb
mov
arpl
lock
neg
mov
lahf
jnp
pop
call
xchg
push
lea
or
adc
das
ja
aas
inc
xlat
add
dec
cld
cmp
xchg
out
add
cmp
push
mov
sub
sub
sbb
mov
sub
cli
sbb
ds
lock
out
fdivs
xchg
mov
lds
jg
insb
jmp
daa
mov
iret
stc
dec
xor
dec
mov
loop
sbb
xorl
dec
fisttps
pop
and
out
addr16
jecxz
out
sbb
cmp
sub
xlat
push
lret
mov
fmull
mov
sbb
mov
fs
cmp
ljmp
jnp
mov
mov
shlb
jmp
jnp
sbb
pop
push
adc
cmp
adc
jnp
filds
iret
xor
xchg
int
sbb
mov
xor
adc
or
int
mov
push
jle
lea
repnz
push
js
fldcw
mov
sbb
pop
arpl
neg
cmp
xchg
addr16
mov
sti
shll
popa
lods
cwtl
jmp
jmp
fildl
cwtl
mov
out
mov
fcmovnbe
loopne
lea
add
int
adc
xor
jecxz
addr16
aas
movsl
xchg
repnz
xor
shll
inc
enter
mov
mov
sbb
dec
leave
pop
jecxz
stc
cltd
fisttpl
sahf
iret
mov
adc
pop
sub
xchg
sbb
movsb
inc
dec
mov
rsqrtps
jae
mov
push
jo
icebp
outsb
sub
or
mov
les
out
scas
pop
sub
fdivs
mov
dec
pop
push
cmpsb
les
ss
popf
cs
rorl
and
test
mov
pop
pop
in
movsl
jbe
sub
ljmp
xchg
jmp
repnz
adc
les
dec
ret
sub
mov
loop
shlb
mov
cld
sbb
xor
ds
push
mov
adc
mov
jp
loopne
inc
inc
xor
jecxz
push
jns
nop
push
in
dec
jmp
stos
sti
mov
ror
fldenv
jg
cli
lods
sbb
in
fcomps
jns
data16
mov
jl
in
mov
inc
pop
in
jo
in
aam
shl
xchg
lods
jle
imul
push
iret
xor
push
and
sbb
dec
xchg
dec
and
mov
inc
daa
cmp
jbe
mov
sbb
push
icebp
xor
sub
xor
loopne
jecxz
cli
test
lods
mov
test
mov
dec
adc
dec
jbe
inc
xchg
mov
adc
aaa
inc
sub
movsl
and
pop
insl
lcall
mov
cld
inc
imul
xor
mov
jno
sub
aas
jmp
daa
jecxz
sub
ja
xchg
dec
movsb
stc
add
lea
xchg
push
int
shrb
sub
jo
push
ljmp
arpl
and
sar
or
nop
lahf
push
cwtl
sti
mov
fimull
hlt
adc
or
loop
filds
pop
fstp
mov
and
andl
add
xlat
outsb
stos
cmp
push
mov
adc
movl
stos
xchg
or
xchg
and
and
mov
push
push
cmc
add
test
xchg
int3
sub
sbb
pushf
aam
adc
and
adc
popa
loop
xchg
in
adc
or
outsb
mov
rorb
orb
adc
inc
js
mov
repz
mov
jmp
stos
rol
xlat
lret
jge
in
push
ds
cli
in
mov
adc
popa
xor
js
add
ret
ficoml
pop
dec
fscale
mov
xchg
andb
out
push
sbb
dec
arpl
pop
ds
insl
scas
add
lret
and
iret
scas
xchg
aaa
outsb
jns
pop
out
sub
ret
pop
aad
mov
mov
fists
inc
ret
inc
arpl
pop
ret
lahf
jmp
push
mov
fcoml
outsb
out
loopne
bound
je
push
pushf
jmp
mov
pop
xchg
movsl
inc
mov
xchg
adc
jo
push
add
mov
adc
or
pusha
popa
pop
xor
rorb
std
je
jns
dec
std
ret
repz
mov
fldenv
out
in
cmc
insl
mov
adc
mov
cmc
aam
pop
lea
int3
repz
pop
in
xlat
leave
jle
xchg
test
movsl
pushf
out
add
adc
addr16
call
and
xchg
sbb
loop
and
dec
dec
fldt
js
cwtl
mov
cmp
out
pop
xor
dec
xor
outsl
mov
loopne
pop
add
dec
scas
shll
scas
int
xchg
stos
xchg
inc
xor
or
ret
sbb
jns
aam
push
or
stos
jge
mov
push
push
dec
jp
add
sbb
int3
and
out
sbb
or
popa
cmp
orb
test
inc
bound
xchg
inc
and
out
pop
leave
les
xchg
lods
mov
divl
jae
aaa
lds
dec
cwtl
movsl
shl
dec
into
push
jmp
test
mov
mov
add
mov
int3
jmp
sub
aad
iret
and
dec
rcrb
ja
jge
test
call
dec
jmp
repnz
insl
test
add
lds
or
fsubrp
test
and
mov
scas
xor
lret
jp
inc
pop
add
push
jg
mov
adc
in
sub
scas
dec
clc
xchg
mov
or
and
in
movsb
cmpsb
fisubs
mov
add
fcmovnbe
or
sub
inc
jmp
decl
divl
fldl
sub
dec
rorb
js
push
sbb
mov
push
adc
pop
int
ret
mov
aam
orl
int3
push
es
jno
pop
icebp
dec
push
cmp
out
out
xchg
in
mov
idiv
shl
daa
cmp
gs
dec
shr
xor
mov
mov
jne
inc
mov
xchg
es
test
pushf
push
in
mov
sub
mov
mov
ljmp
xchg
lret
mov
sbb
std
lds
or
ss
mov
test
push
jmp
mov
loopne
sti
cmp
push
mov
jae
jb
or
pop
mov
fisttps
push
push
cmp
add
mov
loope
and
in
mov
sbbl
inc
mov
sbb
inc
adc
jb
pop
sbb
pop
jg
ret
or
push
push
bound
dec
jb
add
stos
fcomps
mov
int3
mov
xor
mov
xchg
or
shrl
repz
xlat
cmp
scas
addr16
sti
cmc
adc
out
repnz
fldt
lea
jns
daa
lods
and
and
inc
loop
out
gs
and
fsub
jae
sub
mov
aaa
sub
dec
jmp
adc
aad
pop
fxtract
mov
mov
mov
dec
sbb
cmpl
mov
xor
ja
lret
mov
pop
jo
dec
je
lods
cs
adc
sbb
idivl
mov
std
inc
aad
jg
sbb
mov
mov
outsb
rolb
mov
stos
ret
sarl
fs
dec
cltd
mov
test
jo
lods
in
out
pop
out
stos
in
jbe,pn
push
sbb
lods
or
or
aas
cmp
jl
cmp
out
stos
repz
cs
lds
add
outsb
add
cmpsb
into
mov
inc
das
mov
inc
jnp
and
mov
test
testb
lock
pop
xor
dec
icebp
xor
push
js
int3
xchg
imul
stos
push
pop
aaa
in
add
or
add
xchg
sbb
jno
andb
push
cs
dec
cmp
jb
cmp
lods
insb
test
mov
sti
pop
cmc
or
dec
jecxz
mov
bnd
pushf
bound
cmp
rorl
xchg
pop
jns
inc
scas
or
cli
out
mov
inc
lret
outsb
jb
jecxz
cmp
sti
jmp
cs
fadds
ja
aam
aad
or
or
mov
pop
cld
sub
ret
insl
test
lret
xchg
inc
imul
in
mov
jecxz
movsb
sub
fidivrs
call
cmp
adc
dec
push
lcall
clc
mov
iret
dec
and
jle
fisubrs
popa
lret
insl
shrb
mov
mov
cli
loopne
adcb
jl
mov
mov
clc
fdivr
mov
popa
sti
fcoml
dec
int3
dec
aam
data16
out
dec
test
hlt
enter
sbb
jp
sub
mov
fistpl
xor
or
stos
repnz
ret
push
je
mov
lods
sbb
sbb
push
adc
jp
lahf
add
dec
js,pn
inc
lcall
jno
sti
mov
add
mov
pushf
inc
jg
je
sti
popf
cmp
cmpl
or
inc
je
adc
cli
cmp
xor
in
loopne
test
jl
arpl
or
lcall
test
mov
icebp
mov
mov
sarb
fidivl
shll
out
push
or
sub
sahf
in
add
fldpi
mov
fistl
fstps
das
mov
mov
and
dec
pop
inc
or
push
in
jns
sahf
sbb
fidivl
and
aam
repnz
iret
decl
sbb
mov
cmp
sbb
faddl
mov
pop
adc
xchg
leave
imulb
add
and
sub
fidivl
rclb
mov
xor
xchg
popf
mov
xor
out
dec
adc
xchg
sub
jle
mov
aas
jnp
int
add
lods
and
mov
mov
xchg
xchg
fstpl
inc
fnsave
push
mov
dec
ja
sub
mov
inc
jae
sub
mov
inc
jmp
pop
jno
push
adc
add
stos
inc
daa
sub
pusha
movb
in
sub
stos
ds
pop
cmpl
cmp
cli
sub
into
js
fiaddl
push
loop
dec
add
jle
or
push
gs
or
ret
jg
mov
loopne
frstor
jg
insl
dec
fsubrs
lret
mov
jno
daa
jne
inc
xchg
jns
add
jle
or
inc
xchg
dec
mov
popa
icebp
dec
pop
pushf
add
pop
cli
cli
cltd
mov
cmp
sbb
lcall
stos
cmpsl
mov
add
jno
rcl
test
dec
fdivl
ss
sbb
cltd
nop
sub
mov
pushf
or
jne
or
xchg
faddl
push
xor
fisubl
xor
outsb
xor
mov
icebp
sti
jae
sub
lods
lahf
adc
jle
outsl
xchg
testb
pop
xor
lock
mov
lods
daa
cmp
ss
adc
popa
loop
rolb
stos
lea
jnp
jmp
ret
sbb
pop
jl
xor
pop
sbb
scas
aaa
adc
jge
sbb
add
sub
or
mov
mov
inc
and
sbb
cmpsl
push
out
aas
dec
mov
leave
add
sub
mov
add
xchg
call
out
mov
jno
insb
fs
fsts
add
xor
loop
jno
pop
sub
pop
and
out
psrld
aad
call
cmp
movsl
xchg
mov
fstpl
mov
stos
mov
sub
adc
xor
or
push
notl
fcompl
lock
push
out
mov
lret
push
vcmpneq_oqps
stos
dec
xor
pushl
sbb
push
ljmp
and
mov
push
lahf
filds
fnsave
jnp
mov
testb
mov
loopne
mov
fnstenv
fstl
data16
jl
jo
xchg
dec
xor
scas
push
push
inc
aam
gs
sti
xor
xchg
xchg
sub
mov
cmp
cmpsl
adc
inc
add
pop
lret
inc
ss
sbb
cmpsl
inc
sbb
inc
ja
cmp
sub
cmp
or
sub
mov
in
movsl
fcompl
adc
cwtl
shrl
lods
mov
pop
push
push
add
movsl
orb
push
adc
push
out
adc
rcll
xchg
mov
add
inc
cmp
roll
mov
and
shll
xor
enter
mov
or
push
push
push
icebp
sub
fbstp
xchg
sub
xor
fcmovnbe
mov
ds
push
test
lea
es
sub
inc
inc
xchg
aaa
fdivrs
lods
dec
cli
push
push
stc
call
and
cmp
jge
ljmp
jl
push
mov
mov
or
aam
mov
mov
pop
mov
repz
pusha
stos
arpl
mov
xchg
pop
clc
int
testb
xchg
xchg
lods
push
push
jbe
in
in
or
aas
mov
das
rorl
pop
in
lock
push
lret
imulb
inc
or
sbb
inc
mov
int
mov
adc
mov
lcall
and
nop
in
or
and
cmpb
rcrl
push
mov
rorl
add
xchg
mov
xchg
inc
roll
jle
outsl
push
sbbb
fs
scas
jle
fcoml
cmp
mov
inc
jo
jge
jle
jle
int
mov
in
mov
pusha
and
mov
xchg
leave
push
and
mull
jl
sub
mov
imul
xor
cmc
inc
aam
pop
push
xchg
adc
jmp
aam
cmp
lahf
roll
into
mov
ljmp
push
ja
shlb
dec
jno
push
popa
push
xchg
dec
mov
cltd
mov
sbb
popa
xchg
cmp
test
scas
inc
es
mov
dec
xchg
mov
sub
in
mov
dec
stos
sub
jne
out
or
test
mov
das
push
mov
testl
into
aas
inc
je
mov
or
mov
divl
rcrb
out
jle
xchg
inc
in
out
in
xchg
movsl
sub
push
and
out
repz
clc
daa
fsubrs
push
imul
repnz
loope
lret
xchg
ljmp
dec
push
imul
clc
xor
mov
mov
test
xor
mov
imul
sbb
sub
in
and
outsl
fimull
loopne
or
cmp
test
hlt
xchg
sub
mov
add
xlat
dec
movsb
lods
sar
in
mov
daa
add
pop
xlat
stos
cmp
mov
icebp
cld
pushf
in
movsb
add
stos
pusha
jp
push
ret
idiv
enter
out
jno
or
or
loope
test
mov
pusha
or
in
or
ja
xchg
rcll
mov
stos
nop
clc
lock
jge
mov
into
sub
push
adc
xchg
mov
inc
lret
addb
dec
cmp
fxch
adc
add
int
adc
dec
fcmovu
and
mov
xchg
mov
lock
and
aas
jmp
cmpsl
xorb
data16
dec
push
lahf
lret
leave
ret
movl
xor
out
xchg
dec
add
cli
std
push
out
filds
dec
stos
xor
push
shrb
leave
pop
jl,pn
fimull
inc
mov
cmp
lock
dec
add
cmp
lea
dec
mov
pushl
cmp
inc
nop
ja
mov
cltd
cmp
xchg
jp
sbb
mov
aad
inc
data16
inc
in
iret
into
xchg
add
sub
cmp
cmp
and
mov
push
fsubr
stos
test
or
inc
and
in
sbb
xor
mov
fucomp
loop
pop
cmpsb
loop
lcall
ret
out
pop
add
pop
jae
stc
xor
jne
push
mov
setno
in
cld
or
stc
sub
dec
lret
loope
mov
icebp
insl
xlat
xlat
nop
inc
into
lret
jmp
flds
push
shll
mov
or
test
js
sub
pop
jl
jecxz
ljmp
xor
movsb
xlat
mov
dec
and
mov
popa
mov
xchg
jl
jecxz
jbe
jg
fstpt
notb
adcb
xor
daa
jge
push
adc
lods
dec
rcrl
sbbb
push
scas
enter
stos
sbb
sbb
cmp
xor
aam
mov
test
mov
dec
fldcw
insl
sahf
rcrb
or
or
lret
repz
sbb
push
jle
subb
mov
test
js
shlb
xlat
in
loop
dec
inc
iret
sub
or
stos
cltd
sub
push
cwtl
cmp
sti
scas
mov
repnz
xlat
ljmp
dec
add
mov
mov
out
into
cmp
pusha
test
cmp
lret
call
pop
mov
xor
dec
pushf
aas
xchg
aaa
mov
add
cmp
jg
movsb
dec
push
cmp
add
repnz
pop
nop
inc
push
stos
adc
mov
aas
das
sub
int3
subl
insb
cmc
arpl
xlat
sbb
or
js
and
inc
jl
fistl
mov
ds
fistpll
test
dec
xor
test
push
fnsave
adc
cmp
xor
xchg
pusha
testb
inc
mov
les
mov
jg
inc
xchg
hlt
aas
push
jmp
mov
int
xchg
mov
icebp
ss
leave
std
xor
sub
or
or
lock
fnstsw
fisubrl
jge
shll
add
xchg
cmp
andl
cmpl
jns
pop
lock
mov
sub
xchg
aas
jnp
mov
push
mov
inc
out
testb
cmpsl
fstps
push
cs
js
fisubs
xchg
jno
stos
sub
inc
push
out
pop
push
adc
pushf
aaa
dec
int3
cmpsb
push
cmp
xchg
pop
and
cmp
xchg
pop
push
inc
mov
lcall
and
pop
cli
and
aas
mov
pop
push
ret
jo
xor
arpl
push
jnp
cmp
inc
sbb
popf
add
sbb
mov
adc
sub
loopne
imul
cwtl
insb
jle
push
pop
dec
cmpsl
stos
or
mov
and
scas
mov
sub
inc
imul
cmp
pop
jmp
cmp
mov
or
loopne
lea
xchg
lock
mov
fnstenv
pop
loopne
movsb
cmpsb
fs
xchg
stc
mov
dec
jns
ss
inc
pop
popa
adcb
call
and
mov
loope
xchg
setae
pop
stos
movsl
push
insl
cmpsl
fiadds
call
dec
sbb
imul
jo
xchg
push
lahf
and
repnz
dec
fisubrs
dec
mov
fldz
dec
jae
or
and
repnz
xor
rclb
cmp
jo
mov
mov
vcvtps2pd
mov
xor
inc
mov
clc
cwtl
inc
cmpsl
shlb
sti
test
cmp
lods
arpl
adc
add
xor
xor
cmp
test
jno
in
cmpsb
add
arpl
movsl
lahf
lods
scas
gs
cmpl
out
inc
mov
xor
cmp
sbb
cmp
adc
xor
dec
xorl
jo
mov
jae
mov
cltd
push
jmp
xchg
in
into
and
outsb
inc
lcall
mov
push
or
cmp
fcompl
fldt
push
stc
repz
jno
jae
xor
mov
in
int
or
sub
xor
cmp
stos
into
clc
pop
dec
pop
push
jge
clc
hlt
test
adc
cltd
pop
xchg
dec
popa
sub
add
repz
loop
dec
out
in
loop
xchg
push
ja
mov
pushf
push
movsb
sub
or
dec
cmp
frstor
iret
xchg
sbb
pop
cli
mov
dec
stos
fisubs
leave
cltd
ds
cld
add
pop
xchg
jp
lcall
fstpl
lods
jo
mov
jae
add
xor
push
frstor
pushl
rorl
repz
loopne
dec
out
mov
fisttpll
jg
mov
dec
clc
xor
cmp
fisttpll
enter
push
out
fldt
push
mov
ret
mov
xor
jns
nop
ret
pop
mov
inc
adc
jmp
cmp
ja
mov
bound
lock
and
stc
or
dec
push
dec
repz
call
cs
mov
or
int3
in
lcall
pop
std
adc
or
xor
push
mov
jbe
dec
dec
les
inc
stos
dec
roll
mov
or
sbb
xchg
cmp
in
aad
jp
or
mov
or
fmull
xor
dec
daa
sub
loop
lock
or
scas
mov
daa
lahf
data16
jecxz
push
cmp
filds
cmpl
inc
sbb
fsubs
daa
mov
inc
test
enter
jnp
and
push
stos
imul
repnz
and
or
negl
mov
pop
inc
jo
test
jne
sbb
cmp
push
rolb
daa
out
mov
cmp
mov
xor
jbe
test
pop
aas
mov
mov
cld
adc
xchg
bound
mov
mov
ds
and
and
xchg
fistl
add
mov
int3
dec
stos
pop
lahf
mov
xchg
repnz
mov
xor
imul
or
sub
mov
repz
and
jae
lcall
or
mov
pop
imul
insl
bnd
pop
adc
mov
mov
outsb
mov
enter
xchg
iret
les
mov
leave
or
in
cmp
das
and
pop
cmpsb
popf
jge
and
xlat
or
mov
nop
lods
stos
jg
cltd
mov
sti
fdivr
adc
xchg
test
inc
push
dec
aad
xchg
and
add
sbb
inc
ds
test
dec
or
xchg
cmc
and
sub
aad
xor
call
cmp
lods
mov
mov
dec
pop
mov
lea
lods
roll
rep
add
push
cmp
or
ret
mov
adcl
adc
ss
lods
int3
inc
ret
xchg
cli
ds
and
leave
xlat
add
or
pop
lock
outsb
out
sarb
sub
into
sub
mov
insl
cwtl
ljmp
das
push
aad
sbb
and
insl
ret
mov
dec
cwtl
mov
and
jae
push
or
clc
xchg
hlt
div
lock
mov
aad
out
icebp
aas
filds
push
cs
dec
sub
fisttps
imull
add
add
cmp
adc
cmp
das
scas
cwtl
push
sub
sub
fisubrl
insl
nop
inc
mov
orb
jne
xchg
enter
insl
ja
cmp
in
inc
pop
out
xchg
xlat
mov
inc
adc
out
adc
sahf
mov
mov
mov
aad
xor
out
das
jle
add
xor
push
sub
lcall
bound
repnz
inc
push
xchg
dec
xchg
mov
jmp
or
mov
hlt
sub
mov
dec
pop
leave
data16
pop
cld
popf
push
push
int3
testb
jge
sti
mov
lods
insb
sbb
xor
test
push
mov
out
test
push
bnd
sti
jne
cmp
pop
cmpsl
scas
out
cwtl
mov
mov
sub
jecxz
iret
mov
imul
fucomi
adc
loope
sub
insl
push
mov
pop
cltd
and
push
test
std
ds
test
repnz
mov
int3
sar
loope
cmpsb
jmp
sub
pusha
pop
lea
push
iret
cli
mov
or
push
clc
es
xchg
mov
xchg
pop
fwait
xchg
js
lret
mov
push
insl
je
cmpsl
cmpsb
jne
mov
adc
mov
out
popa
scas
jg
iret
push
sahf
lret
inc
and
inc
xlat
xchg
sub
xorb
xchg
stos
mov
mov
adc
cmp
fs
daa
test
pop
aad
jnp,pn
adc
mov
adc
adc
add
pop
inc
in
mov
test
and
mov
xor
mov
cmp
call
lahf
mov
adc
push
sub
nop
adc
ds
add
incl
mov
push
xchg
push
or
mov
roll
mov
je
xchg
adc
pop
sbb
dec
pop
xchg
add
mov
mov
repnz
pushf
add
int
cmp
mov
pop
filds
out
and
roll
movsl
sbb
mov
jne
hlt
pop
add
imul
xchg
jp,pn
orl
lods
inc
lret
std
rclb
add
mov
cltd
lods
mov
aas
int3
cld
or
nop
loopne
enter
pop
nop
xor
insb
and
ss
push
jmp
clc
scas
mov
pop
fdivl
mov
dec
add
sub
in
nop
mov
mov
push
sti
inc
sub
in
inc
xor
jbe
sahf
mov
nop
mov
sub
xchg
inc
shrb
cmp
pop
aas
mov
out
ror
mov
dec
pop
cmpsl
push
and
cltd
addr16
repz
sub
pop
push
das
sbb
sub
out
into
jmp
xor
cmp
in
sub
loopne
mov
add
sub
out
mov
ficompl
xchg
and
push
shlb
idivb
ss
inc
ret
sbb
xchg
jb
inc
pop
mov
rcll
and
ret
lret
loop
mov
mov
mov
pmulhw
mov
mov
jl
add
jbe
push
rolb
imul
dec
add
and
mov
push
imul
add
scas
std
test
pop
adc
aam
ds
fstl
clc
outsb
adc
rorl
rcrb
mov
cli
fs
lahf
lret
jns
dec
ja
testl
repz
mov
fcmovnb
pop
inc
cmpsb
cli
imul
mov
mov
push
sarl
adc
out
les
sbb
ror
inc
movsb
movsb
mov
ja
out
fistps
add
out
add
jmp
adc
stc
mov
or
into
aaa
enter
add
out
cwtl
xor
mov
adc
int
js
cmpl
in
insl
lcall
jmp
and
lods
add
and
jno
adc
outsl
test
test
loope
icebp
inc
fcoml
iret
sbb
push
icebp
jae
and
scas
cmpsl
xor
fimull
xchg
lods
loop
adc
fs
xchg
setns
jmp
int3
cmc
pop
adc
ret
push
std
mov
js
popa
xchg
movsl
pushf
into
in
int3
xchg
pop
arpl
lods
addb
scas
call
push
xchg
sbb
imul
adc
sti
cmp
pushf
hlt
pop
icebp
hlt
fldt
cmp
push
clc
mov
sbb
mov
and
hlt
mov
inc
daa
xchg
imul
rcrb
adc
lods
dec
int
dec
push
cli
jo
fnsave
jnp
insb
sbb
add
fidivs
hlt
mov
and
cmovb
fildl
enter
pop
in
mov
mov
loop
sar
mov
test
out
lret
punpckhwd
and
gs
sub
sbb
popa
cltd
sahf
jp
addl
call
xchg
scas
xadd
jnp
in
arpl
jne
adc
jg
mov
sahf
and
inc
rorb
dec
scas
xchg
daa
sbb
ficoms
lds
inc
push
jns
cli
jbe
je
inc
cmp
pop
jbe
clc
cmp
scas
mov
test
xor
out
nop
jge
iret
xchg
add
sbb
stc
psubusw
or
out
fnstenv
mov
aam
cmp
lcall
inc
popf
jbe
sahf
inc
lret
andnps
mov
mov
push
pusha
add
imul
mov
rcl
lret
add
pop
xchg
jne
or
test
lret
mov
lods
dec
xlat
or
sub
orl
mov
mov
mov
lahf
imul
iret
inc
jp
rol
or
insb
lods
dec
lcall
pop
in
pop
adc
aam
lret
inc
mov
rcrl
mov
xchg
int
adc
scas
arpl
sub
sbb
mov
jge
addl
faddl
in
push
inc
push
jmp
xchg
popf
leave
add
dec
pop
scas
add
iret
pop
iret
rcrb
out
cmp
cmp
mov
ret
adc
inc
jecxz
and
mov
push
out
xlat
push
add
or
imul
sbbb
push
dec
push
lds
jo
aam
jno
add
push
jle
and
mov
popf
in
jecxz
addl
inc
ds
jg
xchg
mov
adc
cmp
popf
aam
repz
sbb
fwait
fwait
and
push
xchg
fistl
sbb
ficoms
popa
add
adc
add
rcrl
mov
adc
out
dec
ds
xchg
mov
call
inc
xchg
arpl
or
jecxz
lods
or
stc
dec
add
loopne
stos
add
sbb
fldcw
stos
jg
push
and
xchg
cmp
dec
xchg
loopne
in
push
in
sub
add
jecxz
lock
inc
inc
xchg
pop
adc
xchg
push
shl
incl
inc
sbb
add
inc
inc
mov
sbb
into
aad
lcall
arpl
in
cmp
jns
dec
pop
sti
mov
push
fildl
mov
lcall
es
push
push
sub
inc
mov
cmpsw
mov
movsb
mov
sub
push
sahf
adc
call
cwtl
lods
clc
add
out
pop
adc
rorb
orl
aaa
mov
jno
adc
dec
inc
mov
stc
lods
ret
mov
xchg
and
call
in
inc
notl
push
add
xor
mov
and
lods
fwait
and
ficomps
push
mov
inc
ss
prefetchw
dec
sbb
lret
dec
and
aaa
cmp
cmc
rol
adc
cmp
lea
adc
dec
leave
pop
out
jbe
xchg
scas
sti
or
fstpl
shlb
push
clc
sbb
jae
jnp
movsl
push
mov
repz
inc
loope
mov
pop
mov
inc
and
iret
popa
sbb
outsl
cs
inc
enter
lcall
jmp
ret
fiaddl
push
loope
into
arpl
push
xchg
mov
push
and
scas
lods
mov
xor
dec
ljmp
push
dec
outsb
xchg
repnz
ja
dec
dec
and
mov
fisubrl
in
inc
xchg
jmp
inc
adc
mov
cmpsl
dec
push
icebp
inc
pop
xor
call
sbb
and
adc
mov
sti
or
sbb
lock
imul
push
xor
mov
xchg
mov
std
flds
or
pop
xor
arpl
movsl
mov
adc
and
cmp
mov
push
into
cmp
bsr
into
add
int3
dec
test
jo
mov
sub
sbb
mov
adc
xor
sbb
daa
mov
lds
lcall
aad
cmp
xor
inc
out
loopne
xor
pop
out
into
jae
clc
jp
and
adc
pop
mov
imul
fdiv
pop
loope
mov
call
fidivrs
mov
movsb
mov
sarl
test
sarb
pop
rclb
jl
add
cmp
filds
lcall
js
push
cmc
jno
push
and
fcomp
xor
adc
push
pop
sbb
cmp
lret
dec
add
cli
std
cli
insb
cwtl
adc
mov
xor
out
push
xchg
xchg
fcoml
add
mov
cld
sbb
aaa
xor
jl
cwtl
scas
out
std
inc
rclb
fdivp
add
lret
or
imul
add
xor
sbb
pop
and
jl
sti
mov
pusha
xor
push
xlat
sbb
mov
inc
push
lret
xor
in
addr16
movsb
pop
loop
addr16
push
inc
inc
sti
pop
lahf
rolb
icebp
xchg
push
xor
push
push
inc
pmovmskb
cmp
adc
out
add
orb
mov
jne
addr16
arpl
or
lcall
xchg
lret
sub
push
mov
sbbb
les
orl
mov
shr
cli
jp
les
jmp
sbb
mov
and
iret
arpl
pop
push
sub
and
subl
pop
cmp
cmc
into
es
pop
xchg
and
mov
cmp
sub
jbe
cmp
cs
add
out
push
cwtl
stc
and
adc
mov
mov
cmp
es
sbb
pop
cmp
shlb
stc
rol
sub
or
iret
dec
repz
fdivs
cld
iret
mov
push
lds
jg
shll
cltd
ljmp
mov
cmp
int
add
out
mov
push
stos
mov
adcl
aaa
mov
sar
jg
dec
pop
daa
out
std
shlb
push
testb
fildll
insb
xor
sub
loopne
push
mov
int
pop
cmpsl
dec
xchg
scas
xlat
mov
or
jg
cld
add
mov
xor
cld
sti
xor
mov
push
popa
jge
movsl
xchg
push
adc
loope
mov
or
loopne
jecxz
cmpsl
sbb
fcoml
leave
test
imul
icebp
adc
sub
shll
mov
cmp
mov
movsl
inc
or
adc
xchg
mov
outsb
lret
jnp
sbb
insl
mov
adcb
push
push
into
stos
lods
test
repz
scas
adc
out
insl
push
pop
out
cmp
or
out
out
imul
fiaddl
nop
ret
mov
test
in
ret
not
jge
xchg
pop
and
roll
xchg
into
mov
mov
sbb
mov
es
push
mov
js
lods
mov
test
push
cltd
or
cmp
arpl
dec
pop
ret
pop
dec
sbb
mov
sub
int3
sbb
outsb
jmp
punpckldq
in
fwait
pop
jmp
aam
or
repz
lea
mov
test
pop
jb
xor
xor
adc
adcl
xchg
mov
pushf
js
xchg
pop
sbb
ret
dec
mov
sub
lret
mov
and
lcall
cmp
cmp
in
jo
jmp
rol
call
shrl
jg
scas
notl
mov
push
add
popf
xor
push
xlat
xchg
push
mov
sbb
jbe
outsb
jmp
ljmp
sub
push
rclb
pop
sbb
mov
and
push
stc
xchg
sub
lret
xor
les
idivb
and
je
push
in
iret
sbb
pop
movsb
lds
jmp
ja
jg
mov
fwait
pop
loopne
jb
scas
lods
out
pop
xor
mov
pop
jmp
jle
inc
xor
rcr
push
push
push
mov
mov
mov
in
cs
lcall
jmp
inc
jno
movsb
push
shl
mov
cmpsb
ret
call
mov
sub
sbb
fs
aam
ljmp
and
xor
xchg
imul
and
test
mov
xchg
ss
jae
pop
adc
cmpsb
in
pop
data16
xchg
dec
sbb
inc
inc
nop
test
lods
inc
sub
scas
imul
scas
push
call
pop
test
das
lods
stos
aam
xchg
stc
and
adc
inc
mov
gs
cmp
dec
into
stos
aam
and
jb
daa
lods
mov
insl
fcomps
pop
stc
stos
adc
push
out
sbb
push
js
xchg
out
mov
sbb
cld
xchg
jo
aad
ds
icebp
sti
in
add
in
jb
iret
inc
sub
dec
jns
xchg
es
test
cld
mov
outsb
jl
daa
mov
lea
sub
shll
ror
in
or
and
push
in
xchg
jnp
lods
fldl
dec
pop
cmpsb
icebp
add
leave
jge
stos
cmp
and
adc
inc
xchg
aaa
fwait
push
jmp
test
cld
fimuls
scas
add
repnz
nop
push
xchg
outsl
testl
in
jle
or
pop
jae
out
mov
xchg
push
push
js
and
ss
lea
adc
sti
or
mov
push
mov
mov
push
fidivrl
std
mov
lea
mov
sbb
iret
pop
add
nop
mov
jg
pop
sbb
pop
ror
leave
jl
push
testl
pop
movb
lahf
xorb
push
test
outsl
xor
pusha
add
lods
xchg
sbb
das
sbb
fists
mov
imul
or
ljmp
mov
push
add
push
xor
es
pop
outsb
mov
inc
ret
dec
into
push
jle
popa
dec
pop
cmpsb
inc
into
mov
mov
inc
lock
and
jbe
lods
outsb
mov
ficomps
sti
pop
insb
and
pop
mov
lods
outsb
sbb
shrb
repz
test
addr16
outsl
aas
punpcklwd
movb
ss
adc
leave
mov
jae
pop
nop
cmc
aam
mov
or
pop
xchg
insb
test
leave
xchg
and
jl
mov
sub
jo
sub
std
mov
jg
jbe
xor
aad
adc
jbe
fcmovnb
je
inc
popa
mov
push
data16
sub
push
cli
ror
fnstenv
insl
or
rolb
or
inc
add
aaa
mov
stc
or
mov
mov
lret
cwtl
adc
aad
inc
std
ljmp
pop
insl
sub
fcomip
push
mov
rorl
inc
cmpsl
movsl
in
jp
lret
clc
or
or
scas
sbb
jnp
pop
arpl
push
mov
decb
mov
push
sbb
xchg
test
pop
repnz
push
in
jb
dec
shrb
int3
add
add
js
dec
add
pop
jecxz
dec
mov
jge
inc
add
ja
pop
out
rorl
pop
push
lcall
xchg
pop
jne
cmpsb
fs
add
das
in
jl
dec
js
adc
es
xchg
adc
adc
nop
xor
push
mov
push
orl
loope
pop
sub
cwtl
and
push
push
fs
aas
xchg
xchg
fs
xchg
inc
icebp
in
scas
lea
ljmp
push
in
cwtl
rorl
dec
inc
and
pop
mov
popa
adc
jae
in
or
lds
cmp
xor
test
fists
iret
in
dec
fwait
sti
xchg
ljmp
hlt
mov
repz
fisttpll
pop
add
xor
bound
test
popf
inc
pop
push
insb
mov
jle
idivb
lahf
sub
fsubrl
lahf
mov
testl
mov
in
jg
or
rol
sti
push
mov
ss
push
jg
mov
daa
ds
dec
sbb
ljmp
pop
jge
lcall
insl
mov
push
filds
fldenv
pop
add
xchg
inc
jl
shrb
mov
inc
std
pop
push
inc
and
addl
cltd
or
stc
popa
jg
xor
mov
or
mov
mov
ljmp
mov
mov
daa
in
sti
jl
mov
lahf
inc
mov
fistps
adc
push
imul
cmp
andb
das
sbbb
jl
aam
sub
ret
fdivrl
adc
aas
adc
lea
and
ja
add
fdivl
adc
and
test
aad
call
and
mov
push
test
mov
movl
jecxz
stos
lret
out
inc
jp
push
lods
cmp
insb
and
mov
sbb
sbb
dec
test
incl
cli
jne
loope
ljmp
in
mov
ljmp
xor
mov
add
lods
sub
mov
push
mov
ret
aam
mov
inc
cwtl
cmp
aad
test
xor
cli
jnp
sti
out
push
sub
jg
xor
xchg
lock
and
cli
push
cli
or
insl
in
in
leave
jns
and
sub
fs
inc
cwtl
mov
cli
lods
int
cwtl
call
ljmp
mov
sub
push
adc
xchg
jge
movsl
pusha
adc
es
lea
fsubr
adcl
xchg
xor
arpl
push
out
loope
sub
adc
fmulp
jp
cmp
xor
call
push
sbb
mov
out
dec
int3
mov
ror
jne
sbb
jno
xchg
out
imul
mov
jp
es
pushl
sub
sbb
jmp
imul
sbb
push
jne
sub
out
mov
outsb
mov
dec
lods
cld
sbb
inc
inc
imul
cli
test
push
pop
ja
jbe
inc
and
jge
pop
adc
sub
out
inc
adc
jne
xchg
data16
jns
insb
cmp
or
aas
mov
out
lea
shl
dec
popa
jp
jno
mov
xchg
mov
pushf
push
mov
imulb
mov
repz
shll
sbb
clc
loop
out
lea
dec
jno
popl
imul
mov
aad
mov
push
int3
shlb
inc
sbb
jl
pusha
inc
out
ret
adc
cli
shlb
stc
and
mov
mov
test
sub
aas
inc
mov
mov
shl
pop
pop
xor
test
mov
push
push
sub
add
cmp
mov
data16
adc
int
pop
jle
lret
sub
enter
daa
cli
cmpsb
cmp
fdivr
enter
dec
push
cmp
cs
pop
movsb
jnp
hlt
mov
xchg
js
mov
lcall
jnp
out
test
push
push
jg
xchg
lahf
in
and
leave
sbb
fisubrs
call
xchg
pop
adc
xchg
push
imul
popf
or
test
cmp
or
popa
cli
rclb
out
daa
mov
js
loop
jae
xchg
ljmp
mov
dec
mov
jnp
add
or
xchg
jo
inc
jp
cmp
sti
jns
je
mov
sub
mov
iret
mov
push
stos
dec
mov
leave
sub
xor
adc
hlt
in
xchg
lods
call
inc
daa
pop
roll
sub
das
adc
ljmp
mov
test
into
jo
jp
jmp
add
push
sbb
ds
jns
mov
xor
enter
sub
fsubr
inc
rep
popf
push
and
mov
jbe
daa
call
mov
aam
mov
adc
adc
mov
or
push
mov
mov
es
lret
sbb
add
repz
outsb
pop
bound
lret
in
jb
adc
daa
dec
fbld
dec
dec
cld
cmp
rolb
scas
xchg
sbb
lods
mov
mov
les
mov
scas
push
xchg
dec
dec
xor
pop
or
sub
jne
mov
or
mov
pop
lahf
icebp
arpl
gs
pop
lcall
aam
push
idivl
dec
icebp
ret
inc
leave
mov
push
daa
insl
add
imul
out
jne
mov
push
mov
add
adc
jge
push
add
clc
push
test
mov
pushf
lods
dec
das
nop
pop
xor
scas
pop
xchg
or
popa
out
mov
mov
aas
cmpsl
jae
std
cmp
pop
inc
roll
fisttps
mov
nop
pop
jl
xchg
shl
xor
jle
in
push
mov
cltd
xchg
enter
iret
and
fstpl
cmpsl
sub
dec
jnp
xchg
leave
adc
andb
jge
faddl
bound
scas
inc
sti
inc
mov
mov
and
push
sbb
add
out
xor
cltd
dec
andb
pop
xchg
sbb
outsb
jle
xchg
int
lea
aad
leave
and
imul
jecxz
add
fcmovnb
cli
pop
fwait
pop
pop
mov
orl
test
or
les
clc
mov
and
push
sub
sub
jmp
movsb
mov
inc
cmpsl
int
cmp
mov
lret
aam
ljmp
clc
mov
dec
lds
popa
sub
xor
add
sbb
insl
loop
adc
in
and
aaa
pop
jmp
or
ljmp
mov
out
push
out
jbe
in
cmc
jmp
cmpsb
dec
outsb
aaa
lahf
movsl
pop
aaa
test
jnp
adc
in
shr
repz
jne
mov
mov
xor
push
pop
push
ret
imul
out
pushf
xlat
outsb
int3
jne
shlb
stos
inc
push
sub
lahf
pushf
ds
push
iret
mov
lahf
jnp
sar
dec
sub
testb
inc
cmp
xor
cld
lock
dec
mov
in
je
dec
loop
mov
lock
add
sub
pop
xchg
xor
mov
xchg
or
repz
fs
mov
pop
adc
dec
dec
int
movsb
mov
cs
mov
jmp
mov
insl
pop
pop
lret
popf
pop
xor
repnz
aam
sahf
lods
mov
rolb
adc
and
xchg
add
cmpsb
pushf
es
inc
cli
ljmp
sti
cltd
xchg
outsl
pop
aas
lods
push
mov
jecxz
or
test
sub
inc
mov
xchg
or
jnp
cmp
test
mov
pop
sbb
orb
pop
add
jns
dec
mov
or
jge
fcom
push
push
sbb
cmpsl
shlb
out
shrb
ficoml
xor
adc
imul
xor
push
outsl
inc
xchg
pop
push
dec
stos
cmp
adc
and
and
cld
fists
adc
push
cwtl
fdivl
and
jle
std
push
dec
push
shl
int
adc
sub
add
lcall
xor
cmp
jb
icebp
cmpsl
adc
repnz
sbbl
cmp
push
push
call
imul
sbb
in
cmp
arpl
adc
sbb
out
add
pop
mov
insb
dec
fstpl
loop
cli
push
bound
fdivrp
pushf
fbld
xchg
test
insb
adcb
or
cmpl
mov
pop
ja
arpl
add
or
mov
stos
mov
popf
sub
sahf
loopne
icebp
add
xchg
pop
imul
je
test
xchg
pop
hlt
ss
sbb
push
inc
sbbb
mov
cmp
xchg
jmp
sub
iret
xor
notl
aas
je
mov
imul
fisubs
test
enter
jmp
mov
and
out
mov
test
aad
insl
sbb
adc
lret
dec
lret
jbe
cmp
sbb
push
mov
sub
add
cmp
add
int3
jp
sbb
data16
mov
xorb
xchg
not
mov
push
jns
sti
hlt
cld
dec
sbb
sbb
cmp
out
adc
mov
shrb
nop
sub
pop
push
out
mov
or
in
iret
arpl
xchg
inc
frstor
mov
cmp
fcoml
movsl
cmp
jnp
mov
sbb
sub
maxps
test
inc
rcl
outsl
int
mov
adc
sbb
sbb
sub
cltd
xor
xchg
and
sbb
inc
lods
iret
pop
cmp
inc
sub
sahf
int3
dec
ja
xchg
xchg
jmp
push
pop
int3
movsb
in
and
shrl
inc
mov
faddl
or
pop
jecxz
mov
xchg
je
xor
mov
out
cmp
add
or
cmp
std
xchg
iret
movsb
ljmp
fnstcw
ss
repz
mov
push
mov
cmp
pusha
add
mov
cmp
push
push
outsl
js
or
jns
pop
or
clc
adc
dec
mov
test
adc
mov
mov
arpl
xchg
aaa
cli
roll
out
sub
lods
jp
cwtl
sub
dec
sbb
bound
cltd
mov
int3
fdivrl
into
jle
xchg
daa
jnp
xchg
outsl
dec
or
inc
jle
ret
jo
push
popf
sbb
lret
and
mov
adc
mov
add
add
sub
jmp
insb
jmp
mull
dec
dec
into
mov
xlat
into
fdivrs
push
repz
xor
sub
popa
dec
mov
mov
pushf
gs
or
jne
popf
jno
and
aad
and
fidivrs
jbe
test
rcll
xor
repnz
mov
cmpsl
jae
jg
add
cwtl
sub
adcb
ret
add
cmc
push
clc
outsb
mov
ss
mov
add
stos
leave
sub
jle
out
inc
andb
pop
mov
adc
and
or
xor
push
bound
lret
xor
jo
and
lds
pop
jl
add
jo
xchg
xchg
lds
rcrb
pop
sbb
daa
pushf
dec
push
ljmp
adc
or
cmp
pop
sub
rcrl
dec
pusha
cmc
in
jnp
stos
out
fdivrs
mov
stos
cvtpi2ps
movsb
and
ja
jns
dec
int
jns
jo
adc
call
jo
push
arpl
mov
mov
push
push
aas
pop
xor
scas
push
adc
daa
js
mov
sbb
inc
sub
fdivrl
ss
cltd
fistps
jg
cmp
pushf
adcl
leave
imul
jns
lea
dec
cltd
inc
adc
out
mov
jae
imul
inc
aaa
sub
mov
in
icebp
jecxz
jnp
xchg
fwait
mov
ficoml
xchg
push
lret
xchg
push
or
aas
lock
push
arpl
out
dec
inc
pop
xchg
shl
xchg
sbb
pop
xchg
xlat
fdivl
fs
mov
mov
mulps
mov
cwtl
int
sub
inc
ljmp
out
in
mov
shrb
cwtl
push
test
jge,pt
jmp
adc
negl
xor
iret
popa
or
icebp
fs
popf
arpl
shlb
rorb
setle
shr
adc
xor
jl
imul
enter
jge
jb
pop
xor
add
outsl
jne
out
push
fists
test
call
outsb
outsl
aad
pop
incl
aad
repz
lods
addr16
pop
out
push
push
aaa
mov
arpl
inc
xchg
inc
jle
cmp
out
dec
jns
mov
jmp
les
lods
sbb
push
pop
and
in
xchg
adc
shr
ret
adc
push
cmp
xchg
stos
ret
ret
mov
stos
cmp
cld
addl
lods
dec
add
and
scas
cmp
inc
push
mov
jbe
sbb
movsl
mov
add
sbb
gs
pushf
popa
pushf
sbb
rcrb
pop
sti
stos
fistpll
aam
int
popf
add
ficompl
push
aam
sbb
cmpsl
jg
fldenv
sbb
cs
bound
fists
jo
out
inc
insb
push
aad
insb
xor
aad
adc
dec
jg
popa
add
xchg
push
cmp
test
sub
std
cmp
popa
pusha
pop
lcall
testb
out
out
stos
sbb
jo
sbb
testb
jbe
jg
mov
test
ret
dec
lea
stc
in
out
mov
and
push
and
clc
mov
fcmovne
sbb
cli
jo
loope
test
fists
cltd
ret
dec
cltd
mov
das
enter
cmp
and
mov
adc
mov
jl
sbb
xlat
insb
int3
add
out
push
faddp
leave
add
push
sbb
jge
xchg
int
enter
mov
adc
push
or
mov
mov
sbb
divb
add
and
in
out
pop
push
lret
fisubs
dec
sub
mov
jnp
push
sub
pop
pop
pop
data16
iret
js
cmp
add
es
push
cli
fbstp
cmp
xchg
xchg
jnp
into
aam
sub
sbb
adc
dec
push
popf
fistpll
mov
inc
std
cmp
std
test
out
in
mov
clc
inc
pop
test
icebp
xlat
loopne
xor
mov
je
inc
push
aaa
jmp
js
mov
mov
cs
push
sbb
lods
cwtl
fsubr
inc
dec
sahf
sti
ja
insl
push
fwait
popf
sbb
pop
xor
addl
cltd
aam
pop
ja
hlt
mov
pop
test
dec
fisttps
mov
xor
stc
sub
jbe
rorl
mov
sbb
jg
push
adc
adc
pop
pop
es
gs
mov
pop
test
push
sbb
add
xchg
subl
inc
mov
lods
std
xchg
jbe
adc
loop
mov
data16
xchg
or
and
adc
aam
in
nop
into
inc
loope
ffree
out
rcl
mov
add
mov
pop
jle
cmp
mov
lock
mov
jno
pusha
jne
or
leave
mov
pop
jecxz
call
cmpsl
fadds
ret
dec
mov
jp
repz
les
adc
js,pn
or
xchg
add
add
inc
stos
jae
sub
je
dec
cmp
out
mov
data16
jnp
stos
adc
nop
mov
cmpsl
enter
js
mov
sub
and
div
lret
push
mov
cwtl
inc
jno
adc
xchg
inc
mov
xchg
mov
pop
sahf
ja
sbb
inc
push
lret
push
xor
dec
int3
or
adc
fdivrl
pop
mov
or
scas
mov
xor
in
push
mov
xor
sub
je
xchg
std
push
and
mov
fiadds
add
pop
pop
cs
out
push
push
lods
pop
xorl
mov
aas
xchg
fsubl
adc
push
sbb
xor
xchg
test
mov
in
repnz
dec
movsb
or
dec
mov
das
loopne
insl
inc
sbb
aad
mov
adc
aad
clc
sbb
jmp
xchg
jo
and
pop
imul
loop
jnp
js
scas
push
rorb
pushf
dec
ret
adc
roll
jl
cwtl
repnz
fstps
stos
inc
sti
clc
jb
mov
insb
push
inc
popa
add
test
cld
cmp
mov
shlb
int3
xchg
leave
mov
lret
sub
sbb
inc
inc
inc
fdiv
in
adc
mov
sbb
ja
add
pop
shrl
push
xor
cld
add
enter
mov
pop
pop
iret
and
into
out
mov
dec
pop
sub
or
outsb
pop
mov
cmp
ja
cmp
inc
stos
ljmp
and
std
movsl
add
les
ja
or
cmpb
cmp
cld
scas
xor
arpl
loopne
inc
mov
xor
icebp
inc
gs
xchg
xor
xor
icebp
adc
jae
sahf
xchg
movsl
mov
lds
add
jae
aas
sub
aad
mov
push
and
or
cmp
xchg
push
pusha
add
mov
aaa
sbb
mulb
jg
popf
pop
fsubs
adc
mov
mov
mov
sub
into
add
xlat
movsb
iret
mov
pop
loop
xchg
sbb
stc
adc
jle
inc
out
mov
fwait
or
mov
sub
push
and
mov
aad
push
in
ljmp
stc
mov
repz
decb
pop
jae
jg
push
xor
dec
mov
rorb
and
pop
mov
mov
fdiv
and
out
and
lret
daa
dec
and
popa
out
and
and
and
mov
jmp
rcrl
pop
mov
mov
xor
adc
std
push
sbb
imul
add
loope
addb
pop
sarb
inc
adc
mov
hlt
cmpsb
xchg
add
std
mov
stos
xlat
sub
dec
add
out
cmp
cmc
pop
stos
sti
lods
push
fsubrl
add
jns
movsl
add
mov
ficompl
cmpsl
data16
cmp
aaa
inc
cmp
popa
test
loopne
out
adc
fcmove
int3
sub
mov
hlt
sbbb
jecxz
add
lods
outsl
out
jg
scas
les
inc
lock
repz
xchg
test
mov
xchg
ljmp
add
xor
add
adc
cs
outsb
push
push
movb
pop
lret
mov
and
cmc
divl
popa
loopne
icebp
xor
xor
mov
clc
icebp
pop
repz
nop
dec
xor
fnstenv
pop
jle
aam
shrb
push
mov
mov
pop
out
je
pop
addr16
call
int3
jns
adc
unpcklps
in
bsf
cmp
daa
imul
xor
cmp
shll
dec
adc
ret
loopne
int3
lahf
outsl
inc
mov
inc
xchg
or
lret
push
pop
aas
sti
push
jle
jne
ljmp
fstl
lea
arpl
ss
outsb
mov
pop
movl
pop
call
ljmp
lret
mov
addr16
xor
mov
imul
cli
scas
sbbl
mov
pop
outsb
lret
push
sub
out
dec
pop
xchg
mov
ja
lcall
ja
movsl
dec
cmp
and
push
insb
or
jle
aas
fcoms
jge
jle
xor
jns
xchg
es
jg
call
jmp
cmc
and
jp
lahf
test
lds
nop
jg
push
insb
in
ficompl
dec
mov
cs
dec
mov
dec
add
int3
subb
je
lret
fstl
mov
dec
imul
pop
loopne
in
iret
fyl2xp1
pop
mov
jb
outsb
decb
inc
pushw
inc
jns
notb
push
aaa
mov
sub
mov
out
pop
mov
cmp
neg
out
sub
push
jns
mov
fists
inc
and
subb
repnz
cmp
mov
movl
popf
xchg
and
jp
jp
cli
jmp
mov
xlat
mov
sub
test
mov
dec
in
xchg
arpl
adc
cmp
adcb
dec
out
sub
fisubrl
loopne
addl
aam
in
jecxz
xchg
xor
push
sar
test
push
negb
mov
das
bnd
jmp
xor
mov
sub
cld
or
cmp
fisubrl
push
inc
inc
insl
js
add
push
push
inc
int
or
xchg
push
popf
addr16
test
icebp
rcll
cmp
divl
mov
push
out
mov
fbld
jecxz
jbe
dec
sbb
xchg
dec
jns
in
fdivr
pop
ret
inc
pop
sbbl
mov
mov
adc
bound
data16
aaa
sahf
inc
fdivrl
add
xchg
jecxz
movsb
cmpsb
sbb
hlt
aas
leave
cmc
jbe
sarb
andl
ljmp
loopne
pop
rolb
ret
lods
sarb
mov
aaa
sub
hlt
xchg
cmc
and
push
mov
push
inc
iret
scas
bound
sub
pop
ss
scas
roll
or
xor
rorl
mov
jp
pop
idivl
inc
adc
sbbb
popa
test
inc
adc
out
inc
ljmp
dec
push
filds
fs
mov
xchg
sub
and
mov
inc
push
es
pusha
popf
mov
lods
fsubrs
cmp
call
mov
mov
or
out
scas
sub
dec
roll
push
mov
push
lea
rclb
xchg
gs
mov
aas
stos
loopne
xchg
leave
pushf
loope
sub
inc
jb
push
insl
mov
jg
dec
lock
mov
mov
arpl
arpl
aas
ja
or
inc
jmp
jle
pop
lods
dec
jg
jmp
adc
jne
mov
aad
and
xor
xor
push
fwait
loop
rorl
xchg
int3
pop
jl
sbb
pop
pop
mov
sub
daa
imul
int3
pushf
call
shr
shll
shrb
mov
pop
adc
pop
sbb
pushf
aam
fsubrs
xchg
push
mov
cmpb
cmp
jbe
sub
enter
int3
nop
lret
adc
sub
mov
pop
int3
sub
mov
in
adc
mov
and
or
xor
insb
ds
jmp
scas
or
loopne
mov
jnp
cs
push
ret
je
shll
pop
pop
lahf
mov
aaa
mov
xchg
leave
cmp
push
mov
test
daa
enter
mov
push
cmp
add
mov
fistpll
popa
cmpsl
jge
test
outsl
mov
sbb
sub
scas
fstpl
push
mov
dec
ds
push
jp
notb
xor
adc
mov
jp
cltd
inc
mov
test
pop
ret
inc
mov
mov
mov
roll
sbb
mov
pop
fs
inc
inc
pop
mov
ljmp
push
push
sub
lods
mov
xchg
pop
dec
das
sarb
add
loopne
add
ss
xchg
push
dec
in
cmpsl
sub
clc
pop
and
fidivs
jecxz
repnz
xchg
jno
out
fmull
sub
sti
sbb
aas
pushf
shlb
arpl
test
iret
es
in
shll
mov
sbb
out
js
cld
mov
lods
aad
or
push
xor
inc
dec
sarb
fisttps
add
mov
pop
mov
scas
and
fdivp
mov
sbb
rolb
inc
cmpsl
dec
add
insl
imul
mov
lea
lcall
sbb
jecxz
xchg
mov
rcrl
addl
in
fists
push
into
jl
xchg
push
roll
lods
cmp
mov
aad
lret
inc
pop
cmpl
and
mov
pop
jl
insl
mov
or
lock
fwait
pop
xorb
push
sub
movsb
das
aam
or
insl
sti
and
outsl
xor
xlat
sbb
popa
push
push
dec
jo
and
xchg
mov
pop
cmp
mov
sbb
xchg
mov
jbe
pushf
in
std
pop
nop
or
and
sti
mov
or
mov
jno
pop
add
test
stos
or
dec
cmp
mov
or
cmc
xor
int3
popf
mov
movsb
push
cmpb
sysexit
sub
popa
sbb
sub
sbb
out
fnstsw
pop
ja
push
jle
fchs
adc
jnp
cmpsb
loop
in
test
xchg
in
mov
aaa
into
dec
test
adc
add
jp
adc
dec
sbb
testb
stc
cs
stc
fs
and
add
pop
pop
mov
xchg
xor
push
jns
xor
pushf
rol
cmpsl
popf
enter
leave
adcb
xchg
add
ja
mov
xchg
daa
push
sbb
pop
ds
pop
cs
jg
test
push
clc
nop
ljmp
ss
push
shlb
add
pusha
ret
scas
jno
inc
xchg
hlt
or
out
stos
repnz
testl
jno
sahf
push
sti
es
mov
iret
add
jb
pusha
fwait
gs
pop
and
xor
xor
jnp
or
ror
loop
aaa
cmpsb
sub
add
subl
xchg
sbb
in
and
mov
sti
out
push
int3
cs
xchg
or
mov
cmp
insl
jbe
and
mov
sub
jmp
and
fnstsw
mov
std
mov
mov
pusha
mov
jne
mov
fdiv
xor
aam
lret
daa
jp
fnstenv
dec
nop
inc
dec
xchg
in
pop
adc
push
hlt
xor
pop
sbb
sbb
fwait
lods
es
jmp
add
cmp
sbb
jle
ljmp
in
xor
adc
idiv
push
out
push
pop
mov
adc
or
test
jnp
cmp
cmpl
fdivs
mov
or
and
and
lods
out
test
scas
in
mov
ljmp
dec
pop
andl
sbb
fstpl
xor
int3
call
pusha
nop
enter
icebp
dec
mov
repnz
pop
mov
xor
or
jbe
cmp
pusha
sub
jl
mov
enter
into
dec
jl
repnz
adc
lods
push
jae
addr16
push
inc
hlt
or
mov
dec
inc
sbb
into
push
gs
mov
negl
fildll
jnp
or
pop
pop
clc
fwait
or
js
das
jle
or
or
stos
and
push
push
ja
push
sub
mov
mov
sbb
ja
pop
mov
sub
insb
cwtl
insl
xor
cmp
dec
rcll
inc
shrb
cmp
ficomps
lock
or
jnp
jo
test
add
adc
fmull
xor
xchg
and
push
cvttps2pi
push
and
xor
push
mov
mov
or
fs
mov
mov
pop
xchg
or
cmpsb
fs
out
sub
sti
rorb
pop
sub
mov
inc
xor
jae
aaa
test
shl
iret
xor
out
mov
repz
mov
pop
ret
jle
aas
cmpb
push
ret
sbb
outsl
cmp
fistl
test
pop
mov
push
sub
sbb
xchg
lea
sbb
aaa
outsb
jecxz
add
sub
dec
mov
or
test
out
stos
or
insl
sbb
sub
aas
add
ds
mov
ds
xchg
pop
xor
cmp
test
jp
xor
ficoml
jg
je
mov
imul
xchg
out
aaa
mov
xlat
arpl
cmp
cvtpi2ps
pop
mov
mov
pop
xor
lret
push
jb
dec
mov
inc
fstpt
or
scas
adcb
pop
in
push
xor
mov
lods
nop
mov
sbb
int
adc
pop
xchg
loope
insb
jns
add
or
shr
cmp
test
cmpb
int3
add
inc
add
insb
dec
rclb
cmp
es
jae
jge
clc
rorb
pusha
arpl
sbb
and
xchg
ds
sub
in
clc
jnp
test
mov
sbbl
in
imul
and
stos
sti
loope
addr16
pop
jg
cld
outsl
xchg
inc
rol
push
loope
lcall
ret
inc
pop
insl
push
push
lock
icebp
mov
arpl
jns
or
out
adc
insl
push
mov
in
jp
mov
scas
push
stos
hlt
cmp
sub
movsb
add
pop
sub
sahf
int3
adc
push
insl
loope
aaa
add
add
inc
lcall
sub
popa
ja
push
mov
adc
adc
jbe
push
cmpsb
repnz
insb
cmpsl
enter
jne
lret
inc
xchg
jns
xchg
nop
inc
stos
push
or
inc
dec
add
stos
pop
cs
mov
mov
popa
std
movsl
pop
shll
pop
scas
insb
xor
je
add
xchg
lret
dec
xchg
es
jl
in
xor
jno
stc
pop
and
pop
mov
pusha
mov
shrl
mov
jecxz
lods
stc
sbb
jl
xchg
cmc
dec
mov
fwait
add
pop
mov
and
mov
sbb
pop
fisttpl
cs
push
fsubs
es
lret
fistps
jo
xor
xchg
cmp
sub
loopne
das
rcrl
sbb
adc
mov
mov
jmp
jae
js
jns
out
pop
sarl
and
add
ja
mov
push
jl
jnp
push
into
bound
fiaddl
das
imul
gs
dec
ss
add
push
xchg
cmp
pop
push
ret
add
fs
inc
icebp
sbb
dec
jb
sti
fbld
pusha
sbb
or
mov
mov
xchg
std
sbb
lock
mov
adc
ss
cs
mov
rol
add
les
fistpl
mov
pop
ja
scas
mov
test
decl
inc
rcrb
xor
push
cmc
dec
push
std
outsb
ja
fxch
out
inc
sbb
repz
rcrb
andl
aam
push
sub
push
jb
loopne
fwait
mov
movsl
mov
js
lret
repz
fisubs
xchg
in
daa
jl
inc
mov
push
add
sub
icebp
insb
cltd
hlt
and
cmp
dec
cmpl
insb
mov
pop
out
add
ret
incl
sbb
xchg
xchg
sbb
pop
shll
jo
idivl
repz
inc
mov
je
pop
inc
or
shl
daa
cld
adc
or
mov
inc
pop
jmp
std
jge
test
inc
adc
push
into
js
dec
cmpsl
lock
sbb
ss
int
and
subl
outsl
movsl
mov
inc
jg
and
mov
mov
or
ret
outsl
adc
aaa
loop
icebp
cmp
fmull
cmp
das
pushl
mov
pop
pop
out
adc
sub
imul
sahf
mov
aaa
fldcw
xchg
mov
lahf
xor
rcll
sub
cmp
xchg
cmp
jle
sub
sub
inc
mov
mov
pop
adcl
pop
xchg
xchg
aaa
fsubrs
inc
notb
mov
hlt
movsl
cmc
out
scas
xlat
add
jo
test
iret
ljmp
cmp
lahf
loop
dec
mov
jno
adc
int
sub
lcall
and
sarl
ds
out
insb
gs
ja
jbe
xor
loopne
mov
aaa
push
cmc
mov
mov
xor
movsb
int
inc
fcomi
std
lahf
jecxz
fs
aam
pop
sti
mov
iret
movsl
js
dec
ljmp
std
jo
adc
fidivrs
jnp
jg
scas
cwtl
jns
dec
cmp
orb
xor
lahf
push
or
jne
sti
outsb
ficompl
lahf
mov
add
hlt
mov
jbe
fists
and
outsb
cmpsb
not
mov
pop
push
push
cmp
mov
mov
sbb
ret
sbb
dec
xchg
outsb
ret
neg
sub
jecxz
jno
mov
jo
xchg
push
jnp
xor
adc
orl
mov
add
stos
cmp
sbb
mov
stos
jecxz
pop
sbb
mov
test
out
repnz
pusha
mov
notl
std
rcrl
stc
iret
push
stos
scas
repnz
or
fbld
ret
test
inc
shrb
mov
rcll
jp
fnsave
out
pop
and
jg
in
and
push
jmp
out
scas
lahf
or
ljmp
push
loopne
mov
mov
add
imul
inc
dec
add
push
push
out
lock
hlt
leave
stos
sbbl
and
xchg
push
push
insb
push
stc
dec
jmp
dec
sub
loop
lcall
inc
scas
cmpl
and
jg
sub
dec
adc
fs
xchg
popf
and
adc
dec
push
movl
add
mov
mov
or
lret
aam
adc
mov
insb
aaa
and
rcrl
outsb
cs
cmpsl
ds
rol
mov
ljmp
mov
adc
mov
imul
cmp
out
movsl
sbb
into
negb
enter
mov
pop
imul
add
dec
dec
adc
arpl
xor
testb
fbld
mov
rcr
fildl
imul
je
arpl
jmp
data16
js
sub
cmp
lock
aas
or
outsl
push
loope
popa
stos
mov
idivl
and
xor
aam
fwait
mov
loop
pop
cmp
loop
cltd
pop
loop
in
lock
popa
rclb
sub
push
sub
or
dec
and
pop
fsts
fcoml
movsl
pop
push
lds
sub
mov
push
adc
into
icebp
sahf
cmp
sbb
jb
out
mov
sti
mov
out
jbe
or
in
or
cmp
add
jp
or
inc
add
or
add
lock
mov
mov
imul
xor
mov
enter
imul
jnp
mov
mov
jae
fildll
xchg
das
mov
lahf
in
icebp
ficoml
mov
mov
lahf
adc
fidivl
sahf
xlat
sbb
loope
cmpsl
adc
sbb
test
shlw
adc
loopne
insl
imul
dec
add
jle
out
dec
cs
pop
mov
jnp
out
arpl
das
test
mov
lret
cmp
in
scas
aas
add
dec
cli
fidivrs
outsb
notl
inc
cs
sbb
in
xor
fst
daa
rcrl
movsb
scas
stc
push
mov
jg
cli
fcmovnu
cs
or
fs
mov
mov
mov
ss
in
and
lock
jno
out
aad
pop
aam
pop
cmc
mov
adc
add
enter
jp
outsb
push
popf
jmp
dec
fucomi
inc
imul
add
std
std
mov
mov
into
dec
mov
ljmp
int3
xchg
inc
mov
adc
ja
cmp
push
dec
sbb
dec
lods
pop
call
dec
adc
sbb
aad
push
lds
adc
xchg
jno
sbb
or
stos
pop
add
lds
pop
fidivrs
or
dec
test
or
scas
and
add
push
aas
fwait
jno
shr
cmp
std
and
mov
loopne
aaa
xchg
add
arpl
pop
or
out
imul
mov
jb
pop
ss
sbb
xorb
mov
fbstp
insl
mov
lods
popa
aam
add
fs
add
cmp
movsl
xchg
loope
aad
mov
mov
test
ret
clc
test
lahf
inc
pop
add
inc
outsl
push
daa
adc
jne,pt
jno
adc
xchg
jnp
cmp
nop
call
stc
mov
lret
popf
pop
bound
adc
add
fsubrs
int
pushf
mov
cmp
xlat
lods
outsb
imul
jno
and
push
dec
mov
bound
pop
and
mov
jmp
rcll
mov
cwtl
cmpsl
das
xor
sbb
lahf
cmp
mov
mov
inc
or
fs
call
daa
adc
aad
testl
dec
js
push
cld
jp
and
inc
xchg
cmp
sub
pushf
xchg
mov
xchg
icebp
fdiv
jle
or
inc
lret
xchg
jmp
lock
sbb
icebp
and
sub
mov
int
jmp
mov
cli
stos
sti
mov
adc
add
mov
js
push
incl
xor
push
mov
enter
sub
mov
aaa
and
sbb
int3
push
sbb
mov
sbb
iret
dec
push
movsl
insl
add
dec
xchg
movsb
in
mov
cs
icebp
sbb
sub
int3
push
iret
push
pop
pop
aas
std
xchg
sub
pop
jmp
pushf
movsl
cmp
jmp
fimull
mull
and
out
rolb
and
add
inc
jp
inc
shlb
int
loopne
cwtl
pop
lret
push
ret
fsts
xor
mov
xor
ss
lock
sub
out
iret
inc
fwait
enter
test
cs
dec
push
adc
in
jae
dec
inc
lcall
mov
repz
stc
rcll
inc
add
fdivs
pop
pop
pop
out
cli
and
jle
loope
cmp
shlb
sbb
das
fucom
mov
xlat
loopne
inc
dec
test
mov
add
cmp
ljmp
repnz
or
jecxz
jp
loopne
int
jae
jp,pt
les
repnz
adc
jecxz
add
cmp
inc
cld
in
fisubrs
repnz
pusha
push
pop
sbb
out
mov
add
mov
ljmp
ret
xlat
cmp
dec
dec
dec
add
mov
mov
outsb
sub
or
push
lcall
cli
int
dec
aad
xchg
aam
rclb
push
adc
and
adcb
call
out
mov
mov
inc
pop
add
and
push
xchg
das
dec
dec
cmp
add
ffreep
mov
repnz
int
test
inc
sub
dec
jecxz
test
dec
dec
aad
lcall
push
adc
mov
mov
cmp
into
add
stc
int3
aaa
pushf
sti
and
pop
out
gs
xchg
pop
jmp
xor
pop
es
pop
add
pop
push
xchg
pusha
push
sub
leave
std
lea
mov
mov
aam
inc
ja
add
push
xor
das
xor
test
loope
aad
add
fisttps
in
dec
sub
dec
stos
or
mov
add
in
test
sahf
sbb
xchg
mov
aad
in
bound
jbe,pn
gs
mov
jg
mov
jns
mov
push
call
insb
sarl
lock
out
into
push
jg
cmp
stc
pushf
xlat
aas
jge
inc
bt
cmp
outsl
add
jmp
sub
fwait
xor
push
das
sbb
adc
push
cmpsb
insl
lret
clc
aaa
dec
jne
sub
popf
pop
repnz
sarb
mov
inc
stos
or
insb
lods
mov
or
sahf
iret
or
mov
mov
push
ja
mov
xchg
adc
jmp
xchg
in
xor
repz
mov
loopne
xchg
out
out
sub
adc
add
jns
lds
dec
adc
inc
adc
mov
pop
lods
jg
fcomi
test
loope
outsb
mov
popf
fisttpll
push
dec
int
jb
cmpsl
mov
sub
mov
xchg
icebp
mov
jecxz
out
sbb
xchg
lds
mov
imul
pop
xor
rorl
xchg
cs
pushf
push
dec
adc
mov
push
aad
dec
sti
inc
jl
xchg
push
or
leave
sub
or
fbld
pop
pop
pop
dec
adc
adc
ret
xlat
fbstp
sarl
jmp
jne
nop
rcrb
jbe
imul
movntq
pusha
into
add
push
stos
in
sub
pusha
addb
or
push
xor
dec
dec
fxam
jns
aas
cwtl
cmp
nop
stos
int
stc
sbb
adc
dec
inc
jg
rcrl
cmp
push
pop
sti
sbb
fldl
int3
and
push
inc
test
repnz
sahf
jge
lahf
insl
mov
gs
cmp
scas
int3
stos
jno
push
sub
enter
jg
sbb
mov
inc
cwtl
sub
cs
aam
and
test
icebp
or
in
add
aas
mov
mov
iret
sub
test
out
dec
aam
jnp
ljmp
dec
pop
cmp
repz
mov
or
icebp
inc
cmp
and
cmp
or
fmul
mov
fiadds
insl
dec
rolb
and
movsl
sbb
orl
mov
xchg
sub
jae
sbb
lods
lods
popl
adc
rcrl
popa
mov
into
lods
ret
mov
xchg
fstps
pop
pop
inc
xchg
cmpsb
sub
fstps
push
mov
popf
cmp
jo
xor
sub
add
sbb
and
ss
fucomi
into
test
pop
mov
push
lret
out
repnz
push
xor
aad
es
test
mov
cwtl
lea
dec
fs
imul
lea
push
cs
sub
mov
scas
and
mov
ret
aas
xor
mov
adc
clc
mov
loop
jb
daa
push
xor
sbb
adc
push
loopne
ja
loop
push
cmp
mov
ror
mov
sub
cmp
jle
iret
loope
adc
mov
dec
movsb
out
lods
jecxz
jbe
fwait
mov
cltd
jne
cmp
daa
xor
je
cwtl
push
pop
jle
pop
ljmp
cmp
adc
mov
in
xchg
cmpl
dec
aam
ss
scas
rorl
jge
rcrb
sbb
jae
pop
push
ret
jno
test
sub
lahf
icebp
mov
ret
pop
add
mov
movl
sub
gs
in
popa
sub
scas
mov
sbb
or
jecxz
adc
lahf
call
stos
push
mov
insl
mov
mov
add
mov
lods
sub
fdivs
negb
push
insb
mov
or
fsubr
lods
aas
mov
cmp
nop
fsubrp
enter
sbb
notb
in
xor
mov
fcom
adc
xchg
stc
cmp
or
xchg
sub
repz
insb
addr16
scas
jg
ds
out
addr16
stc
sbb
adc
ror
test
xchg
imul
lcall
sahf
lahf
fdivs
dec
adcl
jns
inc
sti
xchg
mov
outsb
mov
in
mov
dec
scas
int
arpl
mov
cmc
inc
into
pop
call
jecxz
and
push
test
test
adc
aaa
fsubrl
sub
cmp
adcb
pop
sub
int3
jns
mov
push
sti
shll
sub
scas
jmp
leave
lock
sbb
or
mov
fucom
cmp
fimull
inc
xchg
shrl
arpl
sbb
outsb
loopne
jbe
imul
xchg
jne
adc
jne
fwait
mov
mov
fdiv
pop
imul
add
xchg
sbb
inc
mov
jp
jg
push
ljmp
inc
lods
mov
shrb
push
jmp
inc
daa
iret
push
mov
mov
or
fwait
jae
test
push
pop
adc
pop
int
shll
call
xor
data16
loope
mov
mov
outsb
jno
dec
movups
out
adc
mov
sbb
test
fptan
cmp
cmp
lea
cwtl
in
inc
clc
cmp
dec
push
lea
in
mov
out
jp
ror
pusha
addl
in
push
enter
pop
fnstenv
or
mov
test
shlb
fs
lods
sub
cmp
int3
cmp
pop
ret
fprem1
das
sbb
bound
adc
jp
xor
xchg
xchg
xor
lret
mov
daa
add
or
andb
outsl
push
jbe
pusha
mov
ret
pop
je
or
ja
inc
into
dec
mov
fwait
push
int3
mov
shrl
fwait
mov
or
leave
adc
mov
mov
pop
xchg
scas
sbbb
nop
cmp
mov
dec
adc
jecxz
shrl
jo
and
lock
xlat
jmp
aaa
or
sbb
push
insl
popf
mov
cmpsb
dec
bound
mov
mov
mov
mov
push
dec
mov
mov
fisubrl
fisubl
pop
test
scas
mov
arpl
test
lret
jne
sub
outsl
mov
cmp
mulb
cmpsl
mov
aam
in
xrelease
insl
ror
push
in
mov
std
or
xor
stos
dec
mov
aas
jg
js
cmpsl
popf
unpckhps
fiadds
das
mov
mov
xchg
leave
add
or
sbb
xor
lcall
adc
iret
add
sub
sbb
adc
iret
xor
cmp
imul
pushf
dec
add
adc
addr16
push
insb
inc
sarb
das
shl
enter
mov
rcll
in
cmp
std
out
fldt
mov
call
or
scas
pushf
xor
or
rcrl
inc
mov
shll
pop
jge
jecxz
push
pop
sub
les
int3
addr16
mov
adc
push
test
lret
xchg
push
push
shlb
stc
dec
push
in
xchg
stos
imul
xchg
repnz
xchg
jne
pushl
mov
addb
loope
iret
or
and
jo
jmp
mov
dec
les
jb
in
rcr
mov
mov
jmp
int
dec
dec
imul
andb
or
mov
jae
dec
mov
mov
mov
clc
cmp
int3
push
imul
mov
int
and
push
inc
cli
mov
dec
push
outsb
jmp
dec
aam
pop
inc
jge
jnp
adc
fsubrs
test
out
or
test
and
mov
and
int3
xor
add
xorl
push
pop
cltd
and
adc
lods
test
inc
cmc
es
popf
push
mov
daa
jg
jle
dec
sbb
sub
push
xchg
xlat
out
push
jl
push
mov
test
popf
xrelease
clc
aam
xchg
push
dec
jmp
adc
mov
mov
push
or
in
mov
scas
sarl
mov
or
ds
or
fwait
testl
jbe
dec
mov
cld
push
addl
test
fists
sub
lret
fwait
test
mov
daa
insb
rol
enter
pop
xor
mov
mov
dec
cmp
xor
aas
lcall
push
sbb
lcall
add
add
push
mov
or
mov
push
jbe
adc
mov
lea
insb
lods
sub
inc
imul
push
popf
mov
xchg
loope
cmp
movsl
ret
fldenv
mov
gs
add
ror
inc
sbb
push
cli
jno
mov
cs
les
std
test
lock
fidivl
pushf
fucom
inc
outsl
into
push
sub
std
cmp
incb
int
int3
stos
fnstsw
jo
push
inc
jp
xor
push
mov
jno
sub
cmpxchg
scas
cli
ljmp
push
data16
fcompl
pop
hlt
mov
sub
pushf
mov
out
lds
mov
dec
push
stos
add
inc
mov
aam
sbb
inc
pop
and
clc
inc
aaa
outsb
mov
popf
enter
outsb
cmp
in
or
mov
inc
imul
lea
data16
pop
mov
jno
lret
jg
push
bound
mov
sbb
into
fs
call
std
xor
and
into
hlt
xchg
mov
mov
aam
cmc
jg
sbb
aad
fadd
sahf
lcall
mov
out
mov
xor
int3
jle
cmp
fsubl
pop
sub
sub
cmpsb
or
insl
std
lock
xorl
dec
test
sbb
in
rol
fmuls
dec
sub
dec
push
mov
sub
pop
mov
shrl
add
push
arpl
xchg
mov
test
jge
and
dec
adc
int
insl
aam
mov
or
lods
push
xlat
sub
xor
in
fidivl
bnd
push
add
int3
hlt
rclb
sahf
imul
mov
sbb
push
call
cmp
and
jbe
xor
xchg
fdivs
repnz
adc
mov
dec
cwtl
jbe
iret
jle
dec
jg
lcall
shrb
xchg
push
mov
xchg
lods
fbld
cmpb
test
jns
or
hlt
sub
add
mov
inc
jo
pop
mov
xchg
mov
arpl
and
pushf
mov
pop
jo
test
lcall
cltd
test
negl
jb
inc
sbb
adc
ja
push
add
lret
icebp
filds
add
mov
iret
jecxz
cmpb
push
ljmp
rorb
cmp
mov
xchg
sub
jp
cwtl
dec
jnp
cld
shlb
int
ret
mov
push
inc
mov
daa
sbb
mov
push
movsb
jl
adc
inc
pushf
outsb
pop
hlt
cmpsb
xor
pop
inc
jmp
pop
in
jmp
mov
fnsave
in
mov
sbb
addr16
jo
cmc
or
gs
push
aaa
loope
test
mov
les
lcall
cmovnp
in
leave
mov
aas
psadbw
push
pop
popa
jmp
es
jo
xor
loope
mov
adc
mov
pusha
cmp
jns
test
lret
inc
push
mov
sub
leave
push
sti
fwait
mov
jl
dec
stos
dec
fs
cmp
je
mov
jge
stos
cmp
sbb
push
mov
insb
mov
adc
out
enter
lods
shrl
test
lea
ja
cs
pop
jne
mov
push
cmp
inc
xor
xchg
scas
jno
inc
mov
arpl
orb
mov
push
sbb
insl
xchg
add
fsub
inc
add
dec
push
mov
cmpsl
xchg
or
add
test
jo
xor
jecxz
lods
jmp
popf
push
test
jb
mov
xor
stos
lcall
popf
mulb
mov
pop
popa
lret
sub
jmp
aad
sbb
cli
inc
cmpsl
int3
pop
cmp
rcrl
in
adc
push
xchg
dec
mov
aaa
xor
jno
arpl
loope
jnp
and
dec
dec
loop
call
lret
xor
mov
cmp
xchg
mov
ljmp
xlat
mov
rcll
push
scas
stos
popa
dec
outsl
jo
clc
lcall
sub
xor
lods
pop
arpl
push
dec
imul
or
negb
add
pusha
jne
pop
fmulp
into
xchg
loope
mov
shlb
pop
jnp
ljmp
sub
jmp
mov
mov
push
cld
sub
cmc
jl
imull
mov
test
stos
and
call
out
mov
mov
xor
dec
pop
and
popa
inc
xchg
fmuls
fimull
repnz
pop
ja
lret
out
cmpsl
cmpsb
sbb
repnz
test
and
aaa
mov
pop
out
aam
pop
fcmovb
lret
sbb
gs
jae
ds
pop
add
popl
movsl
add
mov
in
jle
jecxz
jne
in
test
outsb
lods
test
cmp
jbe
mov
xlat
cmp
ret
sbb
aam
push
jecxz
inc
ja
insl
inc
inc
jb
xor
lods
add
out
xor
mov
pusha
cs
cwtl
mov
dec
lret
add
scas
mov
jge
dec
out
outsb
adc
lock
ljmp
cwtl
pop
pushf
push
rorl
insb
sub
sub
je
mov
or
dec
fnstenv
mov
push
or
cmp
pop
jbe
adc
add
mov
lock
pop
or
pop
notl
pop
inc
shrb
test
or
cwtl
mov
cld
enter
xor
push
das
and
adc
lods
and
movsb
movsb
scas
fstpl
es
cmpsb
lcall
lcall
bound
arpl
fwait
sbb
shl
cmovb
push
jae
adc
mov
mov
jmp
sahf
imul
in
into
leave
jae
push
leave
in
dec
pop
inc
or
jp
mov
enter
out
mov
sbb
lret
pushf
jle
add
lock
xor
int3
shlb
xchg
and
jb
push
xchg
data16
add
rcrb
and
jp
arpl
dec
adc
jae
add
fxch
out
or
pop
bswap
xchg
jle
and
and
add
das
cmpsb
xchg
aam
sub
ret
jns
push
sub
loope
lret
ss
and
add
adc
cld
clc
mov
cmp
into
dec
push
push
jnp
data16
dec
shll
in
pop
dec
sub
loopne
loop
mov
test
cld
sbb
pop
sub
pop
shlb
jns
scas
mov
xor
push
enter
mov
push
dec
and
pop
out
inc
js
loopne
mov
enter
lea
stos
jl
cmp
pop
mov
mov
arpl
mov
or
ja
adc
mov
cmc
int
mov
add
jge
stos
in
mov
out
frstor
inc
fsub
xor
jge
inc
mov
sub
and
sbb
adc
push
mov
adc
inc
stos
test
enter
push
push
mov
mov
xchg
xchg
mov
mov
push
fcomps
mov
imul
inc
mov
gs
xchg
mov
sbb
pop
pop
lcall
sti
inc
loopne
fnstenv
es
push
ss
pop
cli
das
mov
call
mov
ret
aam
lea
data16
dec
and
mov
push
or
fnstcw
fdivrs
jecxz
nop
pop
dec
pushf
ljmp
sub
ss
xchg
and
sbb
mov
sbb
add
dec
inc
xchg
push
int
jbe
mov
push
add
xor
ret
jb
popf
add
sub
call
add
add
jae
sub
jo
and
test
xor
jnp
mov
cltd
and
ret
jle
and
popa
icebp
cltd
mov
sbb
aaa
xor
mov
shlb
int
or
jl
out
xchg
pop
fstl
xlat
inc
cs
in
call
dec
push
sub
push
mov
add
add
lahf
outsb
or
adc
pop
les
inc
sub
jmp
fadds
shrl
mov
shrl
jo
pusha
sbb
push
es
mov
cmc
or
mov
xchg
jne
add
insb
mov
add
add
in
add
mov
pop
sub
test
mov
sub
mov
xchg
sub
dec
pop
or
push
int
xchg
xor
insb
sbb
loopne
mov
push
xchg
mov
xor
jbe
jae
jbe
or
orps
addr16
jle
testl
pushw
dec
mov
cmc
test
mov
mov
data16
ljmp
adc
scas
test
mov
fisubs
rcrl
scas
insl
mov
mov
mov
test
mov
and
or
sarb
inc
icebp
push
cmp
lock
arpl
push
fsubr
insb
leave
jp
push
jecxz
fwait
out
mov
mov
mov
jmp
or
push
xchg
ljmp
adc
push
imul
ror
pop
popa
ljmp
in
add
push
setbe
aad
xor
outsl
mov
xchg
aas
stos
loop
sub
stos
icebp
cmp
mulb
add
adc
mov
aaa
loope
shr
les
pushf
xor
popa
and
bound
pop
xor
dec
scas
inc
xor
and
xchg
leave
dec
dec
imul
inc
mov
push
xlat
sub
scas
int
movsb
mov
loope
int
jnp
jo
stos
pop
mov
ret
mov
in
stos
orl
dec
mov
xchg
cmpsb
loop
pushf
pusha
dec
push
sbb
xor
fisubs
and
xor
inc
xor
and
leave
hlt
mov
lods
pop
bound
rolb
jnp
add
lret
dec
rcr
iret
jnp
add
insl
cli
bound
mov
pop
lea
mov
cs
or
in
clc
xor
lea
clc
arpl
movsb
mov
sub
in
js
fnstenv
orl
and
cmp
jmp
enter
push
loop
mov
cld
jp
cli
cmp
aad
pushf
fisubrs
test
sbb
xacquire
stos
loop
in
xchg
jnp
or
add
ss
clc
jp
jecxz
xchg
inc
ja
adcl
ljmp
jp
push
sub
je
cmp
inc
stc
mov
cmp
sbb
sub
jbe
loopne
cmp
sbb
push
ret
lods
mov
push
movsb
pop
sub
addb
cli
add
mov
add
std
lea
ret
stos
mov
stos
andl
sbb
je
mov
sub
sub
notl
xchg
int
xor
adc
test
in
mov
cmp
fwait
mov
inc
adc
rorl
cmp
dec
scas
mov
or
cs
dec
clc
arpl
iret
enter
cmp
cmp
sub
cmp
lods
fsubp
and
cmpl
or
adc
dec
jle
js
or
outsb
loope
xlat
adc
pop
jbe
pop
pushf
into
dec
cltd
cmp
scas
sbb
fisubl
mov
add
mov
jl
cmpsb
adc
and
js
or
push
pushf
cmp
xchg
push
adc
out
int
ss
mov
or
adc
shrl
xor
and
jecxz
inc
repz
shll
sub
das
fs
lods
xlat
fadds
push
sub
adc
jae
ret
mov
test
push
out
aad
flds
fstpt
call
das
hlt
add
in
inc
int
xchg
mov
in
sbb
je
dec
test
push
cwtl
int
mov
ss
clc
inc
movntq
inc
out
mov
and
mov
jo
sub
test
loop
mov
mov
lret
imul
sub
addr16
iret
xchg
pusha
dec
in
pop
insl
cmp
mov
les
jmp
adc
push
dec
loopne
loop
movsl
adcb
insb
out
fmul
jbe
insl
mov
rorb
jae
jnp
iret
cmpsl
enter
sti
pop
mov
cmp
pop
js
xchg
sub
lds
jb
je
inc
cmc
push
add
mov
pop
call
inc
cmp
mov
ljmp
imul
adc
test
dec
inc
inc
xor
iret
sbb
shlb
test
cwtl
addl
and
fsin
insb
mull
mov
std
push
sub
xchg
jbe
decl
push
pushf
aad
in
ror
stos
adc
inc
mov
pop
dec
sub
mov
mov
scas
insb
ljmp
sbb
xor
mov
int
push
and
test
int3
mov
loopne
mov
lock
mov
push
jl
ds
mov
hlt
cmp
shl
mov
jb
lret
fwait
push
pop
rol
mov
adc
mov
fldt
imul
ret
xchg
push
lods
loop
adc
mov
testl
xor
imul
aam
sub
cs
inc
clc
xchg
into
sub
mov
mov
ret
imul
fbstp
jmp
outsl
stos
scas
sub
jmp
es
sub
mov
sub
movsl
inc
jge
add
rclb
push
jno
mov
sti
xchg
shrb
xchg
inc
adc
xor
stos
xor
stc
add
pop
loope
cmpsl
mov
mov
dec
or
rorl
jbe
ret
sub
push
insb
cmpsl
dec
fimull
test
inc
outsb
in
push
jbe
shr
push
aad
fs
cmp
cmpsl
icebp
lcall
in
in
cmpsl
pop
or
insb
sbb
hlt
mov
inc
std
je
xor
push
add
ljmp
pop
testl
inc
mov
mov
sbb
data16
or
mov
not
lcall
add
in
addl
jns
lock
and
inc
dec
dec
je
push
sub
movsb
les
cld
sbb
les
xchg
mov
add
mov
repz
xor
cld
loope
xchg
lret
adc
cmpsl
popf
orl
pop
lds
jb
sub
call
pop
mov
add
imul
sbb
aam
repz
shrl
sti
je
pop
cmpsb
cmp
popf
mov
iret
adc
adc
push
push
and
inc
pop
push
pop
imul
ret
call
int
push
xlat
add
push
int
pop
loope
insl
mov
adcb
mov
xor
rdmsr
cwtl
push
mov
aaa
jns
mov
jns
imul
jg
int
shll
addr16
xchg
stos
or
xchg
sbb
cli
mov
fldt
jb
push
cmpsb
fucom
fcmovbe
cmp
loopne
and
je
cmp
jne
cwtl
sbbl
dec
test
add
daa
jae
sbb
mov
inc
sbb
mov
outsl
sbb
mov
pop
push
mov
js
inc
dec
loope
out
sahf
popa
jmp
imul
popf
gs
sub
imul
dec
adc
addr16
bound
arpl
into
mov
fwait
sbb
add
cmc
or
push
mov
mov
test
fildl
into
and
ljmp
mov
dec
sub
xor
xchg
std
stos
cltd
jmp
fiadds
ds
push
fbstp
mov
lahf
mov
sub
sub
sbb
mov
inc
adc
lret
push
jge
repz
in
scas
cli
iret
ljmp
jnp
imul
cmp
mov
loope
cld
ret
insl
or
call
push
sbb
movsl
or
or
imul
jl
popa
mov
mov
fmul
sub
hlt
jne
mov
out
inc
ja
sub
jmp
xchg
sbb
dec
stos
ret
add
mov
daa
jecxz
adc
gs
lds
xlat
iret
or
ss
mov
test
outsb
cmc
call
pusha
cld
rep
mov
sbbb
sub
test
adc
call
push
das
mov
outsl
mov
test
and
xchg
rol
pop
xlat
movsl
cmp
arpl
and
adc
cmp
nop
add
lahf
outsl
and
fs
inc
out
mov
or
aaa
repz
push
fistpl
push
or
push
pop
mov
add
out
xor
xor
sbb
or
jge
mov
fwait
sbb
cli
and
cmc
fsubp
add
push
lods
inc
ja
xchg
pop
subl
push
mov
jp
cmp
fsub
adcl
popf
mov
enter
sbb
insb
add
dec
dec
data16
lds
dec
cmove
insl
push
mov
sub
inc
xor
push
sub
in
add
jne
outsl
sbb
aam
psrlw
ds
push
movsl
int3
idivl
mov
loopne
pop
mov
sbb
stc
fldenv
imul
and
cmpsb
sub
push
paddsb
je
arpl
icebp
cmp
shrb
lcall
and
jle
nop
cmp
rolb
clc
ret
mov
aaa
popf
push
sub
xor
cmp
push
push
mov
cmpsb
cmp
fldt
mov
mov
lret
js,pt
push
ds
dec
scas
cmp
xchg
insb
inc
xchg
inc
js
in
dec
jbe
sbb
flds
insb
sub
mov
cmp
mov
fidivrs
push
xchg
or
pop
mov
jo
inc
jecxz
loopne
mov
ljmp
mov
out
fisttpl
stos
pop
push
loopne
fcmove
xchg
mov
movl
jbe
xchg
dec
cmp
out
jp
sbb
lds
push
subb
stos
pusha
das
push
insb
test
or
js
pop
mov
add
xchg
push
cmc
sbb
or
pusha
jb
icebp
xor
mov
sbb
call
cmp
sub
or
in
sahf
dec
popa
mov
mov
mov
out
rcll
inc
sbb
stc
popf
adc
data16
aaa
xchg
sbb
jge
adc
sti
sbb
push
into
adc
cli
jno
int
dec
jmp
jb
imul
inc
cmp
adc
mov
xchg
or
adc
stos
add
xchg
sbb
aad
sarb
jnp
insb
dec
xchg
lcall
sar
out
hlt
sub
arpl
jg
adc
adc
sub
adc
or
and
jno
dec
stc
mov
jge
ljmp
mov
or
fdivs
sub
das
xor
add
lock
sbb
add
daa
es
push
inc
push
xchg
push
and
mov
pusha
cmp
mov
ret
pop
cmp
xlat
xor
pusha
ja
pop
pop
nop
xchg
iret
add
test
ljmp
repz
dec
in
mov
mov
or
dec
jno
mov
enter
pusha
mov
stc
addr16
sub
mov
adc
mov
xchg
loope
loope
cmp
aam
sahf
in
out
mov
xchg
jbe
insl
xchg
aas
and
out
push
and
and
sbb
and
ror
mov
jno
test
cs
and
daa
js
push
ja
dec
pop
aaa
and
sbb
stc
cld
les
fsts
jecxz
loope
cmc
adc
sbb
dec
loop
shll
rolb
ds
hlt
xchg
jp
popa
mov
dec
pop
cltd
jne
mov
pop
loope
mov
stc
adcl
add
fisubrl
fnstenv
imul
mov
out
movsb
inc
pop
inc
movsl
inc
mov
mulb
xchg
sub
fnstenv
fwait
adc
pusha
dec
mov
mov
sub
loop
cmp
loop
mov
lret
enter
leave
cmc
pop
mov
dec
xor
sbb
repnz
stos
into
mov
rol
clc
outsl
push
enter
lds
mov
jne
or
push
mov
cmc
rcrb
lcall
je
shll
sub
jb
xchg
out
mov
sub
xchg
shr
popf
inc
gs
ds
jnp
in
push
lahf
cmp
pop
insb
dec
popa
xorl
jmp
cli
lahf
fstpl
out
mov
fwait
push
xor
nop
pop
out
xchg
in
ljmp
ret
out
inc
movsb
jae
arpl
pop
jno
subb
scas
and
sbb
ret
mov
jns
mov
mov
leave
push
jmp
adc
or
stos
lods
inc
pop
dec
arpl
fsubr
mov
dec
jne
ds
addl
mov
into
add
in
jbe
repnz
je
sub
fadds
test
arpl
pop
gs
je
push
mov
rolb
sbb
pop
rorl
stc
sub
cli
popa
lea
xchg
push
mov
xchg
mov
jno
test
adc
mov
andb
into
and
sbb
push
lret
das
sbb
xchg
shll
add
and
or
test
jle
cltd
dec
lcall
mov
push
mov
addr16
dec
xchg
xlat
mov
add
mov
hlt
pop
das
in
sub
pushf
mov
mov
aad
mov
mov
dec
jne
addr16
dec
js
dec
iret
cs
inc
dec
pushf
loopne
xchg
push
adc
out
fdivrs
sbb
push
jnp
fnsave
in
pop
pop
inc
fstps
sbb
les
push
fsubrs
xlat
and
sub
je
lcall
sub
mov
xor
pusha
and
in
and
dec
loopne
outsl
popf
pop
rorb
dec
test
inc
mov
adc
push
dec
and
pop
push
mov
push
lret
fs
sbbb
mov
pop
jo
into
inc
inc
pop
sbb
dec
ret
fs
imul
inc
mov
inc
lcall
push
xchg
push
mov
rolb
push
jne
adc
and
jb
mov
daa
lret
mov
push
repz
mov
xor
movsb
push
push
adc
and
stc
xlat
lods
test
xchg
cmp
test
pop
outsb
mov
add
in
sbbb
dec
fsubs
cmp
xlat
push
adc
jmp
or
sbb
pop
xor
mov
pushf
rcll
mov
ja
jb
cmpsl
cmpsb
xor
rcl
jne
iret
fsubl
into
jecxz
rorb
dec
pop
adc
jo
sbb
mov
sub
cltd
insb
rcl
push
cwtl
push
push
lcall
adc
pop
test
aas
icebp
xor
adc
inc
je
cmp
out
cmp
mov
sub
in
xor
mov
push
dec
aad
sub
insl
repz
pmuludq
mov
popa
fimull
sub
or
hlt
jns
lods
out
push
inc
cmpsl
ret
sub
stos
or
dec
sbb
loopne
hlt
aaa
or
push
lret
js
icebp
adc
lds
arpl
call
sub
xchg
std
pusha
int3
lret
pusha
sub
sahf
cltd
test
rorb
mov
dec
add
adc
and
sbb
lock
rcr
shrb
sub
pop
cmp
cld
in
pushf
out
pop
jg
sbb
mov
inc
sub
les
xchg
mov
dec
in
cwtl
and
push
cli
aas
mov
cmp
pop
xor
mov
pop
cmpsb
mov
push
unpcklps
rorl
aas
testb
mov
pop
push
in
dec
mov
xchg
mov
jae
xchg
pop
inc
xchg
push
repz
or
pop
fxch
cwtl
fwait
fwait
mov
sbb
ds
test
and
mov
cli
xor
sbb
into
fstps
mov
pusha
sbb
loop
in
or
ret
mov
sti
xchg
push
pop
mov
pop
jb
sbb
and
hlt
addb
lock
push
movb
shlb
dec
lods
or
hlt
cwtl
arpl
fwait
lds
fwait
inc
cmc
call
insb
out
push
mov
adc
test
mov
cmp
pushf
cltd
lret
popa
cltd
daa
stc
gs
aaa
in
sarl
adc
cld
push
test
sbb
xor
std
loopne
inc
mov
pop
lret
fdivrs
in
mov
mov
xlat
popf
aaa
adc
imul
adc
pop
nop
add
lcall
adc
pop
adc
cmp
lahf
adc
insl
jbe
sbb
ja
sub
pop
xchg
repz
lret
ror
lcall
lret
sub
sub
cs
sub
dec
sbb
scas
cmpsl
adc
in
cmp
ror
lcall
cmpsb
scas
icebp
cmp
pop
orb
jmp
and
add
dec
testb
mov
jb
mov
lock
or
push
fcoms
stc
jge
push
jecxz
inc
out
flds
fdivrl
repz
in
add
jae
lcall
inc
push
in
stc
xlat
cwtl
add
jns
sbb
xchg
lret
aas
outsl
ret
test
mov
sub
xor
inc
xchg
fld
es
add
xor
fwait
sahf
pop
xor
frstor
imul
xor
pop
sahf
stos
insb
jo
jle
or
adc
cmpsb
fs
or
pusha
test
clc
dec
sbb
fistpll
scas
bound
sbb
sub
push
sub
ret
in
add
ljmp
and
pop
xor
jle
mov
xlat
jge
icebp
adc
or
dec
shl
adc
inc
adc
jmp
mov
iret
sub
sub
iret
in
test
lret
lds
pop
jge
push
clc
fwait
rcrl
fistl
hlt
call
ja
jbe
inc
ljmp
test
xchg
mov
or
out
loope
mov
int
leave
ret
xchg
mov
aas
cmp
sahf
mov
jnp
sub
pop
sarl
lods
mov
push
adc
mov
xorb
ja
adc
js
inc
dec
xchg
sbb
xor
jo
mov
sbbb
loopne
sbb
dec
ret
call
movsl
dec
bound
cmpsb
ror
pop
adc
repz
push
mov
fmull
xchg
push
sub
and
fdivs
rol
xor
cltd
sbb
das
jnp
mov
push
movsb
xorb
pusha
cwtl
lahf
into
inc
lret
inc
sbb
lahf
in
test
test
jne
push
push
insb
mov
inc
mov
and
or
sahf
jne
cmp
xor
jle
or
adc
push
xor
dec
jne
out
adc
and
jne
repz
call
dec
scas
and
xchg
movb
in
dec
fmuls
and
xchg
fdivrl
fld
push
push
mov
dec
jne
xchg
loopne
notl
incb
pop
cmpsb
mov
lahf
jnp
je
mov
popf
xor
or
inc
lds
push
sbbl
cmp
xorl
and
dec
les
mov
or
push
nop
pop
cmp
mov
fmull
sbb
iret
mov
mov
mov
sbb
mov
mov
cltd
les
loopne
sbb
xor
jp
bound
adc
rcr
mull
fdiv
lods
mov
xor
js
fsubrs
xor
outsl
jno
movb
mov
push
cltd
fldt
or
les
push
push
ret
test
cmc
push
pop
loop
test
scas
mov
mov
call
lret
fistl
sub
insb
xor
test
adc
mov
lea
inc
bound
and
fcmovnbe
mov
jbe
mov
stc
ss
stos
std
or
adc
mov
arpl
fmull
xor
loopne
mov
pmovmskb
or
sub
stos
imul
mov
in
add
lock
pop
xor
es
jmp
subb
in
insl
add
shrl
push
ja
mov
fwait
jb
dec
imul
mov
xor
ret
popa
rorl
inc
ficoml
adc
mov
in
iret
psubsw
movsb
xor
stos
scas
cmpsb
aam
push
adc
dec
addr16
nop
mov
fs
sub
xor
test
pop
bound
push
mov
jo
fidivl
sti
test
lcall
js
and
cmpsl
inc
jmp
loopne
clc
adc
mov
adc
imul
adc
loope
pop
ds
mov
int3
ja
fcoms
mov
pop
cmp
xchg
or
insl
daa
cltd
pop
xchg
jbe
inc
loopne
adc
push
cwtl
pop
sbb
or
gs
lods
jno
xor
xor
sbb
pop
dec
jne
in
cmp
sti
fdivs
mov
in
clc
daa
push
xchg
fdivrl
sti
loopne
add
xchg
mov
jo
dec
in
cmp
imul
xchg
pop
iret
test
sbb
repz
repnz
repz
lock
ds
mov
push
repnz
inc
jns
jo
mov
insb
push
push
dec
ja
push
fmuls
aaa
xchg
cmpsl
xor
test
push
out
pop
jae
clc
sub
repnz
xor
jmp
call
mov
sbb
cli
sub
mov
mov
dec
icebp
xor
arpl
es
pop
test
push
xchg
mov
inc
les
adc
hlt
xor
mov
adc
loope
pop
jo
mov
inc
rcl
ret
push
ret
mov
cli
in
dec
inc
mov
pop
ja
fisubs
loop
cmp
xor
inc
daa
lret
in
fildl
popf
cmpsl
mov
rorb
jb
jmp
popf
leave
ffree
and
lods
inc
xor
xor
out
pop
lcall
push
shrb
push
fistpl
sub
xchg
inc
mov
scas
lods
fsubs
loopne
std
mov
es
idivb
cmpsl
jge
fcoms
sub
in
mov
adc
jns
or
out
pusha
lret
jl
mov
out
sahf
sti
inc
push
aam
pushf
jns
lret
mov
lcall
cmc
in
enter
add
push
popf
mov
clc
inc
add
notb
stos
clc
jmp
lock
add
stos
in
cmp
lret
fisubrs
and
scas
sbb
scas
aaa
inc
sub
out
jae
aas
mov
xchg
jbe
scas
pop
pop
mov
or
jg
jnp
and
pop
fmul
inc
fsts
mov
pop
call
lods
pop
fwait
xor
xchg
mov
push
aam
dec
enter
mov
movsl
or
lahf
and
loopne
sti
loope
in
mov
stc
add
mov
mov
mov
pusha
xor
lcall
push
mov
fwait
jmp
or
pop
scas
and
lods
je
aas
dec
hlt
aaa
mov
insl
out
out
mov
mov
cltd
es
xchg
repz
sarb
out
add
dec
scas
xor
inc
sarb
mov
add
stc
movsl
push
mov
ja
sub
dec
fdiv
push
fucom
es
dec
xor
stc
ret
notl
or
push
loope
mov
jl
stos
jg
jmp
jl
inc
repnz
test
je
addr16
mov
aaa
cmp
add
pusha
adc
in
and
bound
push
mov
js
add
cmc
jae
sub
mov
or
pop
inc
xchg
in
pop
outsl
push
outsb
mov
mov
pop
sbb
xchg
push
pop
hlt
cmpsl
xchg
cmp
dec
inc
pop
adc
push
std
pop
pop
pop
mov
out
out
mov
xchg
fwait
shl
push
xor
and
sbb
jmp
stc
shlb
xchg
std
cmp
inc
mov
sti
mov
out
adc
insb
dec
iret
inc
sub
jmp
std
mov
jp
lods
sub
lods
jge
xor
cmpsb
or
imul
mov
cmp
out
xlat
cwtl
popf
iret
mov
xchg
pop
mov
cltd
rcl
fstps
imul
add
lahf
cmpsl
sub
mov
mov
push
and
mov
jbe
loopne
inc
sub
loop
push
fnstsw
lods
ret
fcomi
psllq
mov
int
pop
dec
cmpsl
xor
lds
or
notl
daa
out
push
push
pushf
hlt
rclb
fwait
mov
mov
pop
push
addr16
mov
mov
sbb
fs
iret
out
add
xchg
ljmp
mov
shll
subl
push
sub
dec
sbb
or
push
aad
mov
pop
cmpsl
in
pop
iret
lock
jbe
xor
cmp
add
jne
pusha
and
push
push
das
insb
ljmp
adc
orl
xlat
or
mov
lods
mov
xchg
sbb
clc
jle
sarl
xchg
jns
outsl
xlat
pop
or
and
cmc
fs
fdivl
cmc
mov
adc
cmp
cld
xchg
cmp
mov
das
imul
loop
mov
push
sbb
xchg
dec
mov
add
lcall
dec
push
leave
xchg
push
push
clc
das
stos
cltd
adc
jle
in
fs
fbld
cmp
nop
in
or
sahf
out
addr16
mov
subb
jo
inc
mov
inc
jns
les
add
xor
fs
mov
cmp
out
daa
or
cmp
cmp
sub
xchg
inc
sub
mov
loope
adc
and
clc
outsb
repnz
dec
repnz
mov
test
outsb
rol
lret
pop
push
cmp
fwait
stos
mov
idiv
adcb
push
mov
adc
xchg
or
adc
xchg
test
jmp
mov
xchg
scas
sarl
adc
and
cmp
mov
imul
int
sub
and
daa
dec
mov
int
es
xchg
pop
lret
mov
xchg
icebp
add
cmp
fbld
xlat
jmp
shll
roll
sub
fildl
call
dec
lret
sub
popf
icebp
mov
add
dec
shll
popa
ja
aas
out
popf
hlt
add
insb
pop
lahf
into
icebp
cltd
jnp
or
inc
pop
les
popa
push
jb
out
negl
pop
fisubrl
fnstsw
xor
push
cmp
inc
les
iret
jl
call
test
push
xor
pop
jnp
inc
sarl
in
rorl
pop
xor
cmp
and
stos
mov
shll
xchg
ljmp
dec
sbb
xor
in
or
idivb
aas
inc
aad
xorl
jmp
aam
lcall
shlb
sti
pop
sarl
push
sahf
pop
and
and
push
fs
mov
and
mov
push
mov
push
dec
xchg
add
mov
or
in
lds
jno
sub
pop
stos
aas
test
adc
or
sbb
div
leave
mov
adc
adcb
je
fldt
rcrb
sti
mov
cmp
adc
jmp
subl
sub
push
ja
jno
push
test
out
leave
xchg
pop
push
sbb
pop
stc
push
in
xchg
adc
test
add
bound
or
and
sbbb
push
out
and
xchg
add
xor
lahf
jle
push
stos
out
in
xor
xor
dec
imul
cmpsb
out
add
xchg
in
xchg
mov
cmp
nop
aaa
inc
mov
and
pop
inc
lea
ds
add
sbb
jo
mov
ficoms
xchg
mov
jo
out
ljmp
mov
sub
outsb
fmull
xchg
mov
fidivs
jmp
std
xchg
cli
shlb
inc
jg
mov
mov
mov
and
jb
and
pusha
sub
fidivl
cltd
dec
xchg
arpl
xchg
mov
inc
fidivl
pop
adc
add
fs
xchg
and
fdivrp
loope
mov
int3
test
in
mov
or
dec
push
push
stos
out
push
cld
les
dec
xchg
inc
sub
sbb
xchg
push
sub
dec
and
dec
push
mov
mov
mov
je
insl
push
cmc
stos
in
scas
inc
ss
das
inc
into
inc
jge
push
sbb
mov
xor
push
test
call
pop
xchg
sbb
and
movsl
ljmp
xchg
ficoml
xlat
push
push
add
mov
lcall
data16
daa
sub
or
orb
sub
and
jae
dec
pop
push
fwait
stos
fildll
or
sahf
in
or
and
cmp
jmp
and
push
mov
stc
nop
roll
into
add
xchg
or
aaa
das
xchg
int
gs
and
push
jae
pop
sbb
push
xlat
xchg
and
push
xchg
adc
jg
push
std
xchg
out
repz
test
and
leave
inc
scas
rorl
adc
je
pop
insl
pop
sbb
pop
pop
or
adc
sarb
lods
and
pop
call
xor
fisttps
dec
lret
gs
or
dec
sub
sub
mov
and
push
rclb
and
fsubrs
push
jbe
aaa
aam
ja
loope
leave
push
push
pop
pop
icebp
out
fs
dec
and
mov
lret
push
lret
adc
sarb
scas
push
imul
push
in
inc
js
andb
add
and
sbb
dec
out
fmuls
push
mov
iret
fistpll
cmpsl
test
push
ret
gs
and
adc
imul
jno
adc
rorb
fucom
and
push
fsub
out
js
push
into
and
dec
cmp
fldenv
push
fsubs
cmc
jmp
adc
cld
adc
inc
rorl
xor
jae
lret
clc
adc
or
mov
xchg
cmpsl
and
inc
dec
push
cmp
out
popa
pop
xor
pusha
pop
out
fiadds
push
ss
and
jp
lods
iret
pop
cmc
sarb
jno
bound
inc
daa
cmp
inc
mov
xchg
movsb
sar
hlt
lret
jb
std
arpl
dec
add
xor
mov
pop
jecxz
push
mov
fdecstp
sbb
in
ret
mov
dec
pop
rcll
pop
adc
cmc
xchg
nop
xchg
add
mov
pop
jmp
mov
cs
and
add
jp
push
or
mov
clc
jmp
adc
aam
jl
push
imul
dec
add
push
or
neg
xlat
mov
dec
fwait
sbb
or
adc
cwtl
popa
or
mov
mov
pop
outsb
jge
jae
sub
push
inc
cld
or
insl
notl
ss
ret
lcall
aas
add
mov
mov
mov
gs
mov
xchg
or
xchg
jecxz
push
repz
pop
inc
push
cmp
push
mov
sbb
ja
inc
jl
or
xchg
lods
sar
roll
enter
push
sti
sub
sbb
in
icebp
adc
sub
mov
loope
cmp
outsb
lock
or
jnp
push
sarl
lcall
mov
pcmpgtw
cltd
jbe
mov
es
ljmp
jnp
pop
xchg
jmp
adc
dec
xchg
das
pop
sbb
lods
or
loop
aas
ljmp
pop
test
and
cmp
mov
loope
mov
pop
rcl
cmp
xchg
movsb
push
mov
sub
mov
pop
lahf
in
xchg
cltd
rcrl
xor
adc
stc
movsl
roll
int
je
pop
mov
enter
xchg
mov
fistps
lods
aas
add
dec
pop
pop
cltd
adc
xorl
lods
bound
divl
cli
cmp
cli
mov
rcll
dec
jns
or
sbb
imul
sub
cwtl
add
jge
popa
cli
ljmp
ror
pop
imul
pusha
mov
fwait
js
scas
mov
mov
aaa
enter
dec
jg
lds
sbb
mov
pminsw
lret
notl
cmp
inc
push
dec
sbb
je
mov
push
rcl
or
loop
mov
in
lahf
cs
test
out
es
insl
mov
mov
push
imull
pop
sbb
hlt
scas
mov
imul
in
or
inc
call
leave
lret
sbb
cmp
bound
lods
cmp
jae
nop
fidivs
fwait
xchg
cld
sub
test
cmovo
or
in
xor
rolb
jmp
lea
push
sub
sti
lods
into
test
dec
sbb
test
pop
sbb
inc
adc
dec
insl
in
fmull
cwtl
cmc
mov
sti
imul
pop
or
dec
repz
push
sti
sub
adc
xchg
sbb
mov
jge
imul
dec
cmp
mov
imul
push
testl
jecxz,pn
test
stos
adc
cmpsb
jmp
mov
lods
mov
jns
mov
xchg
sbb
mov
cmp
or
push
sbb
std
mov
push
cltd
sbb
cmp
push
mov
and
cmc
les
je
sbb
jno
pop
stos
shll
sub
jmp
imulb
outsb
aaa
inc
adc
xchg
cltd
popf
ficomps
scas
jp
push
xor
subb
dec
mov
xchg
xchg
mov
push
fcmovnu
xlat
pushf
and
int
adc
icebp
ds
mov
pop
sub
mov
lret
lcall
jp
fisttps
xchg
mov
add
mov
xchg
xchg
iret
fimuls
mov
icebp
gs
or
lea
sbb
fisubs
xchg
sbb
fmul
or
imul
sub
call
movsb
pop
mov
imul
in
int
sbb
cld
enter
stos
mov
inc
leave
sub
mov
insl
mov
add
dec
inc
and
into
dec
adc
fs
mov
jp
jg
jp
inc
or
or
inc
sbbb
add
sub
fwait
dec
dec
mov
js
mov
and
test
rorl
js
int
or
push
leave
push
xchg
sub
and
insb
into
fisubrl
testb
xchg
int
ds
add
es
dec
and
jns
enter
vpaddusb
inc
sarl
sub
lock
mov
jg
popf
out
dec
lret
cmp
inc
add
fs
push
mov
popf
mov
sti
mov
stos
in
hlt
ret
push
add
and
and
add
stos
xlat
xor
add
repnz
mov
or
mov
or
sbb
sub
mov
leave
lods
dec
xchg
sbb
pop
cltd
mov
sarl
subl
inc
inc
aam
mov
inc
shlb
push
sahf
and
adc
xchg
outsb
nop
cli
mov
mov
jecxz
pop
dec
ljmp
out
adc
minps
cmp
inc
cmp
sub
pusha
pop
pop
mov
rorb
scas
pop
push
xchg
and
in
mov
jno
push
gs
pop
xchg
lcall
push
add
clc
cmp
jge
scas
int3
cmp
cltd
jnp
iret
out
xor
push
adc
js
in
int3
cltd
xchg
dec
lahf
cs
cmc
and
lea
call
clc
imul
inc
or
adc
out
dec
and
clc
call
les
or
push
dec
leave
xchg
cmpsb
jbe
sub
fcompl
mov
repnz
pop
clc
pop
and
in
fstpl
ljmp
mov
popa
sub
mov
out
mov
movsl
push
adc
repnz
sub
fbstp
adc
test
inc
lahf
imul
mov
lods
xchg
mov
iret
insb
jo
sbb
mov
ja
push
nop
stc
jp
mov
imul
loop
push
xlat
or
push
jns
mov
fs
pop
fildl
mov
ss
ss
dec
movsb
popa
xchg
mov
mov
test
dec
shlb
es
and
xchg
dec
mov
insl
out
popa
aas
cmpsl
inc
stos
adc
push
mov
mov
push
jns
movsb
lret
dec
stos
cmp
inc
mov
das
mov
imul
pop
mov
stos
cmpl
adc
enter
sbb
inc
dec
mov
cmp
rol
sub
and
sub
adc
call
out
sub
jg
jge
pop
xchg
addl
add
mov
push
lock
or
lret
sub
push
ret
xor
clc
mov
repz
mov
mov
mov
rclb
sub
int
stos
pop
pop
mov
std
sbb
xor
sti
push
mov
push
fidivrs
lods
jle
movsb
subl
ret
push
leave
je
out
push
fistpl
mov
push
pushf
test
mov
mov
mov
cmp
pop
hlt
or
or
add
outsl
sarl
add
pop
push
adc
push
mov
outsl
ljmp
mov
fcomip
nop
xchg
cmp
or
fnstcw
mov
add
add
loop
jecxz
addr16
std
cmp
mov
fiadds
pop
ret
mov
sbb
jbe
lret
cld
jmp
jno
xchg
aad
das
push
cmp
push
popa
mov
mov
push
adc
or
shll
in
or
push
pop
add
ja
out
adc
sti
in
ret
loope
fwait
and
pusha
js
jns
mov
or
addl
enter
jo
ja
cli
jp
inc
adc
fldl
fsubr
outsb
pop
inc
cmpsb
sub
loop
mov
mov
or
pop
das
and
dec
lods
jnp
lret
hlt
je
mov
xchg
aas
and
xchg
sub
cmp
pusha
lods
mov
xor
cmpsb
add
mov
jg
push
lahf
sti
jno
pop
ds
out
mov
out
sub
aas
adc
sub
std
ljmp
insl
lret
loopne
push
sub
adc
adc
and
inc
shrb
jmp
scas
sbbl
push
jg
sar
cmpsb
loopne
push
lods
in
jl
cmp
xchg
movl
dec
mov
cmp
jb
push
mov
scas
clc
pop
push
pop
aad
dec
andl
adc
mov
mov
or
jb
xor
in
push
mov
cmpsl
sub
mov
mov
adc
and
lahf
stos
push
mov
out
add
jb
dec
pop
movsb
scas
lcall
notb
xchg
jb
mov
add
inc
jne
dec
int
cmp
pop
repz
add
xor
and
jge
flds
push
mov
call
pop
dec
dec
aas
xchg
fldt
xor
je
dec
fisttpl
cmpsb
add
or
pop
mov
xlat
sbb
outsl
jle
mov
das
nop
sub
test
push
jg
adc
out
inc
mov
lret
mov
xchg
pop
adc
insl
hlt
sbb
dec
adc
push
dec
xchg
outsb
nop
mov
mov
add
push
add
rorl
out
xor
inc
add
push
imul
mov
mov
pop
jl
dec
das
das
cs
cmc
add
fdivrl
test
mov
xchg
sub
lock
push
xlat
mov
iret
insb
inc
or
mul
xchg
imul
cld
lods
fstpl
sahf
mov
xchg
fucom
es
dec
mov
lcall
jo
ficomps
cmpl
jmp
addb
mov
jne
or
jo
xor
adcl
dec
jmp
insb
imul
sbb
fwait
mov
leave
stos
pop
fldl
lahf
xchg
je
dec
cmp
imul
lea
push
sarl
cmp
ret
push
bound
clc
bound
out
jno
inc
ficoms
xchg
mov
outsl
mov
lcall
loope
jmp
xchg
push
out
mov
mov
int3
mov
push
leave
inc
repz
cmp
je
adc
pop
jecxz
in
jbe
cmp
leave
jno
or
leave
xchg
out
jns
fimull
pop
into
pop
xor
pop
dec
mov
mov
cld
arpl
jl
mov
mov
mov
cwtl
jae
adc
cmp
in
push
push
sub
or
lds
mov
push
test
fs
lods
mov
inc
dec
mov
movsl
shrl
push
xor
stos
leave
sbb
cld
lods
decb
sub
movsl
push
mov
in
push
add
inc
mov
mov
sahf
add
push
jle
in
nop
lcall
cmp
sub
mov
nop
mov
enter
add
dec
not
insl
popf
jl
dec
mov
jmp
fildl
push
fdiv
xlat
in
push
inc
push
ret
adc
mov
in
aam
cmp
xchg
and
ds
jmp
push
xchg
imulb
loopne
fwait
pop
sti
dec
or
xchg
mov
roll
or
xchg
lods
jl
cld
fidivrl
negb
inc
out
repz
sub
push
cmp
stos
andb
sub
xor
push
ficompl
imul
pop
lods
push
xchg
enter
arpl
cmovb
in
test
in
push
adc
push
jne
js
and
push
push
outsb
sbb
cmp
out
cmp
mov
sahf
or
mov
xor
mov
clc
mov
outsl
mov
shll
in
repz
mov
lret
push
jmp
fwait
add
add
lret
add
xor
cmpsb
xchg
insb
pop
sub
stc
jecxz
into
cmp
mov
cwtl
idivb
and
dec
cmp
scas
cwtl
into
add
sub
sub
pop
pusha
sub
aaa
mov
or
es
push
roll
push
push
or
push
push
shll
rolb
mov
mov
pop
and
jmp
mov
xchg
jnp
xor
call
mov
pop
push
out
pop
data16
and
dec
test
mov
icebp
sub
icebp
fs
mov
dec
sbb
inc
mov
mov
dec
arpl
test
dec
aad
ret
popa
rclb
clc
sub
ja
push
in
shl
and
adc
cli
test
pop
std
cmpsl
jle
inc
out
jns
daa
sahf
push
xor
xor
std
movsb
push
cmpb
into
inc
scas
mov
les
inc
or
rcrl
ja
push
add
popf
fisubl
push
sbb
hlt
call
inc
fwait
mov
lea
repnz
cwtl
les
sbb
xchg
rcrb
mov
ds
daa
pop
ja
ljmp
jecxz
mov
cmp
orl
pop
test
inc
sbb
sbbl
cmp
ds
testb
stos
hlt
cmpsl
fcomps
mov
jae
jno
out
dec
sub
push
fdivrs
cmp
pop
mov
mov
ss
fs
rorb
lea
outsb
std
test
repnz
mov
mov
xorb
mov
jmp
ja
mov
adc
enter
lods
out
mov
xor
adc
bound
shll
sbb
inc
sarb
fcompl
mov
stos
inc
lods
sti
mov
mov
or
xchg
jl
mov
out
pop
cld
jbe
or
add
xor
mov
fidivrl
fiaddl
testl
movsl
popa
mov
test
arpl
in
fisubrl
push
inc
sub
add
xchg
push
shlb
popf
xchg
mov
cltd
lds
mov
lock
leave
imul
mov
pop
mov
cmp
pop
dec
add
ja
in
mov
and
sahf
pop
mov
scas
fsubrs
mov
jl
enter
jmp
aad
sbb
mov
xorb
add
int3
ja
push
pop
or
negl
fucompp
shrd
inc
sub
push
movsl
jb
push
stc
inc
out
sub
pushf
mov
insl
sub
insb
inc
or
cmp
sub
fimuls
movsl
outsl
icebp
dec
mov
push
imulb
pusha
cmp
sub
adc
mov
je
inc
cmp
lret
jnp
mov
push
adc
ja
xchg
rcll
pop
cmp
loopne
cltd
jmpw
bound
dec
dec
call
aad
pop
push
mov
cmpsb
imul
scas
addr16
jmp
mov
or
add
icebp
cmp
mov
loop
out
push
and
rorb
sbbl
pop
rorb
dec
flds
mov
hlt
and
dec
aaa
xchg
stc
or
ret
jmp
adc
fidivrs
hlt
cmp
addr16
dec
cld
push
das
or
or
jl
adc
aam
lds
ret
sar
test
mov
mov
loopne
and
mov
add
clc
inc
and
mov
push
adc
jo
push
jp
xchg
aas
mov
test
sub
jbe
sbb
pop
stos
je
js
push
cmpsb
xchg
jge
mov
sbb
in
aaa
cmc
push
mov
in
sub
stos
sbb
loop
movsl
cmp
or
rcl
out
mov
ficoml
cmp
push
xor
sub
jbe
pop
and
cmp
or
add
es
xchg
loop
icebp
divb
sbb
cltd
pop
adc
xchg
into
aam
sbbb
arpl
xor
fistl
sub
iret
aaa
ljmp
cmp
shl
popf
lods
aad
sbb
ror
mov
push
add
fwait
lea
xor
imull
xchg
push
lret
dec
jne,pt
sub
pop
add
shrw
mov
adc
push
mov
xchg
insb
cwtl
adc
dec
jno
arpl
cmp
pop
and
jae
int3
stos
pushf
mov
lods
mov
das
in
inc
sti
mov
lds
cmp
dec
ja
cli
and
repz
cld
popa
movsl
pop
addr16
cmc
icebp
and
mov
inc
or
aas
ss
xchg
cmp
mov
pop
dec
mov
mov
addr16
jnp
xor
es
push
or
mov
or
out
sub
insl
lcall
jmp
xchg
imul
shl
or
aad
mov
movsl
sub
mov
lret
jg
sahf
out
out
pop
sub
ljmp
xchg
mov
sub
or
test
pop
test
ret
xchg
test
sub
lock
test
shll
outsb
pop
dec
jg
frstor
xacquire
push
imul
xchg
aaa
test
jb
add
jle
mov
push
stos
or
mov
das
dec
push
inc
jns
insb
subl
nop
adcl
xchg
xor
iret
out
les
xchg
sub
cmp
jmp
fs
fs
fcom
scas
add
test
gs
mov
shr
gs
mov
lcall
pop
adcl
jge
cli
or
mov
popf
icebp
jnp
push
mov
pusha
mov
mov
aaa
movsb
insb
fwait
mov
out
das
mov
negb
cmc
mov
inc
sbb
mov
es
pop
shrl
pop
inc
push
mov
imul
sub
lods
mov
pop
push
mov
sbb
and
insb
mov
mov
mov
out
addr16
lahf
jno
cmp
dec
pop
cmpsb
dec
pop
mov
data16
movsb
mov
add
dec
data16
shrl
pop
adcb
xor
ret
sarl
movsb
mov
out
pushf
mov
es
xor
sub
adc
lret
pop
add
js
xchg
sbbb
sbb
aam
cmpsl
ljmp
jmp
stos
fcomip
scas
cmp
inc
cmp
dec
stc
push
or
fsts
xchg
xchg
dec
push
mov
rolb
mov
clc
mov
bound
pop
popa
rcrb
mov
mov
inc
sub
jmp
lods
xchg
pushf
cmpsb
xchg
sbb
lret
pop
push
push
repnz
repnz
jle
outsb
aas
xchg
inc
add
enter
xchg
xchg
mov
pop
fcmovnb
mov
dec
mov
push
cmp
les
in
insb
pop
test
add
push
pop
push
cmpsl
shlb
push
or
ljmp
and
in
jl
call
sub
push
hlt
jnp
dec
mov
fisttps
icebp
popa
xor
xchg
cld
and
ss
es
mov
call
push
and
mov
mov
and
fnsave
stos
cld
jno
and
adc
xchg
aad
xlat
in
fildl
xchg
xor
js
xchg
sbb
das
mov
stos
cmp
iret
mov
push
aas
aad
out
cld
aas
xchg
mov
in
leave
notb
cmp
enter
inc
js
mov
jp
sbb
and
sub
jmp
test
leave
push
roll
nop
sub
outsl
ret
lret
inc
testl
pop
in
push
jbe
add
imul
add
dec
add
push
mov
dec
pop
fbld
sbb
add
push
pop
xchg
movsb
test
dec
in
sub
orl
sbb
or
sti
aad
aas
xlat
jne
leave
rcrb
dec
leave
outsl
lock
icebp
in
roll
std
or
test
jbe
data16
pushf
data16
loop
xor
sub
xor
int3
fwait
sub
cld
pop
imul
mov
xchg
pop
push
pop
sbb
lods
cltd
test
aam
mov
xlat
pop
cmp
pop
pop
int3
js
bound
adc
mov
dec
les
in
jg
and
cmp
rcll
dec
lock
cwtl
jmp
mov
outsb
add
cmp
cltd
adc
cmp
mov
cmp
fcoml
test
xor
cmpsb
jns
out
jg
jecxz
shrl
inc
lods
ds
add
cmp
sub
pop
mov
push
loop
jbe
scas
cltd
leave
inc
xorb
pop
dec
pop
xchg
fcoml
lods
adc
add
jae
outsb
cmpsb
test
sub
or
out
mov
jmp
das
cwtl
punpckhdq
lret
or
push
insb
or
sbb
mov
mov
adc
mov
pushf
adc
xor
into
and
inc
mov
add
push
xchg
pusha
mov
add
cmpsb
sub
lret
aaa
pop
add
into
sub
insb
xor
push
int
orl
shlb
inc
addr16
mov
iret
push
stc
sar
jl
jl
orb
dec
dec
sbb
outsb
dec
cmc
mov
xlat
lock
mov
jge
pop
push
imul
cmp
shlb
cld
cld
inc
cmc
gs
dec
dec
hlt
dec
sbb
pusha
data16
mov
xor
mov
inc
subl
mov
jnp
mov
push
iret
push
push
mov
jmp
and
push
shl
out
inc
mov
in
mov
hlt
inc
jae
int3
cmp
ret
or
pop
adc
decb
xor
mov
in
xchg
push
pusha
sbbb
jmp
aas
fisubrl
repz
adc
fmuls
cmp
xchg
dec
fdiv
mov
repnz
jmp
pop
out
ds
and
popf
pop
popa
addr16
push
call
arpl
lcall
jmp
pop
das
push
cmpsb
sahf
outsb
adc
inc
mov
mov
fadds
jns
jbe
mov
mov
insb
mov
cmp
mov
jae
dec
out
nop
repnz
int3
dec
insb
sbbl
test
or
or
es
mov
dec
jmp
in
inc
scas
mov
dec
dec
adc
and
ficompl
dec
rolb
cmp
aad
push
push
shll
jl
test
mov
adc
outsl
xor
nop
imul
xlat
lods
pushf
cltd
fistpll
imul
scas
addr16
push
mov
xchg
xchg
in
push
mov
inc
mov
and
adcb
cmp
dec
fldl
cs
in
push
lods
hlt
rcll
fsubl
in
xor
ljmp
or
pop
mov
inc
pop
xor
clc
push
jmp
icebp
icebp
nop
cmp
pop
or
int3
pop
push
loop
shll
mov
cwtl
lret
repz
xchg
lock
stos
lods
or
rorl
outsb
jecxz
adc
scas
lea
ret
push
into
int3
pop
pop
pop
ret
aas
popf
sahf
movsb
test
mov
push
cmpsb
mov
shrl
loopne
aaa
adc
testb
mov
sub
bound
add
mov
js
adc
test
inc
push
jns
xor
or
push
in
xchg
insb
sub
jne
jns
add
test
fdivr
jno
xchg
mov
adc
fisubs
into
in
fisttpl
fucomip
mov
and
xor
adc
ljmp
pop
pop
xlat
out
aam
clc
fldl
call
inc
cli
pop
inc
fwait
addr16
ljmp
sub
leave
icebp
icebp
in
test
outsb
push
jecxz
mov
popa
test
data16
scas
xor
shrb
jle
sub
lcall
push
dec
sub
stos
gs
adc
xor
push
mull
je
pop
jle
stos
mov
stc
sub
std
aas
fbld
popf
xchg
aad
lods
add
mov
inc
sub
adc
lods
iret
gs
and
adc
cmp
cli
push
dec
in
out
enter
das
in
adc
inc
test
xor
dec
nopl
pop
dec
das
xchg
adc
mov
cs
mov
dec
ret
loop
inc
mov
pop
ret
test
outsb
rsm
xor
mov
xor
fcos
pop
movsb
dec
ficoml
jns
and
pop
loopne
push
scas
cmpsl
cli
sbb
addr16
push
je
adc
sbb
hlt
inc
mov
pop
repz
sbb
div
dec
les
dec
push
mov
aad
xor
outsl
cmp
hlt
jp
push
jg
mov
adc
xor
js
sarl
aad
test
or
jno
test
mov
in
sbb
or
sti
mov
jl
dec
pop
js
shll
dec
dec
mov
xchg
mov
mov
test
mov
outsb
pop
icebp
loop
pop
push
jmp
mov
mov
loopne
push
fwait
sub
insl
mov
stc
fbstp
das
cmp
mov
mov
icebp
setno
setno
xchg
das
jmp
lcall
lea
push
sub
aam
xchg
fcompl
ret
jae
dec
cmc
rcll
pop
jge
push
adc
pop
sub
iret
les
into
fistps
in
sahf
mov
test
sbb
enter
rcr
mov
inc
push
fucomp
sbb
fstl
outsb
fstpt
mov
mov
jge
dec
mov
pop
cmp
sbb
jae
loopne
or
dec
ficompl
fnstenv
add
addr16
hlt
fsubrp
std
neg
aad
outsl
inc
pop
into
dec
mov
sbb
jg
dec
mov
cld
xor
mov
fwait
jle
xor
pop
dec
jl
icebp
lcall
xchg
rorl
in
mov
inc
scas
fsubr
pop
inc
inc
sbb
sbb
cwtl
dec
es
inc
push
and
push
lret
fisubs
fcompl
pop
leave
jno
sarl
pushf
out
inc
mov
icebp
aam
cmp
push
xor
scas
icebp
push
xor
jecxz
mov
test
and
inc
ret
xchg
mov
fbstp
loopne
jle
adc
cmp
cmp
push
leave
sub
sbb
dec
xchg
dec
fwait
adc
outsb
sbb
mov
daa
in
lock
push
lret
stc
push
xor
add
mov
shl
idiv
xchg
loope
lods
adc
pop
sub
mov
sub
push
mov
out
add
insl
jb
jp
test
sub
xor
xor
sti
xchg
pop
jbe
jnp
or
mov
mov
sub
je
imul
jecxz
fwait
sub
ret
jb
push
or
mov
mov
adc
rcr
adc
loope
in
loope
das
out
test
ja
pop
sub
std
scas
iret
add
iret
les
push
lock
mov
add
test
gs
jno
xchg
ss
adc
jmp
icebp
lcall
dec
inc
mov
shll
das
sub
dec
jns
fwait
insb
jnp
xchg
push
push
stos
imul
dec
icebp
mov
mov
push
dec
xchg
jno
lock
adc
call
nop
mov
xlat
dec
mov
mov
mov
adc
jle
stc
xor
pusha
xchg
shrl
jo
in
test
and
jle
jle
in
xor
sub
sbb
lret
call
adc
sahf
or
inc
add
cld
push
mov
push
jb
repnz
mov
xchg
insb
mov
mov
and
testb
stos
jmp
mov
insb
int
pusha
jecxz
les
cltd
js
dec
mov
mov
hlt
inc
inc
movsb
and
ret
cltd
push
sbbb
dec
repz
pop
mov
cmp
xchg
int3
fcoms
mov
mov
ret
dec
out
mov
out
pop
add
mov
inc
jo
fisubrs
enter
jmp
ret
lahf
test
hlt
push
repnz
vandps
mov
jp
sub
sti
shlb
mov
adc
push
loope
add
xchg
fstpl
mov
out
leave
mov
popa
sub
test
xor
mov
adc
movsl
stos
adc
sub
push
mov
jo
fadd
iret
inc
in
pminub
ljmp
cmp
scas
into
pop
adc
sbb
outsl
es
inc
and
fisubrs
shll
leave
xor
adc
pop
push
dec
sahf
loop
inc
pop
frstor
mov
cltd
sub
movsl
aam
subb
popf
icebp
adc
iret
mov
insl
xchg
into
jmp
test
dec
xor
js
test
loop
fnsave
mov
dec
ja
inc
hlt
or
popf
ljmp
leave
aas
sub
jmp
es
cmp
leave
mov
mov
and
das
sub
insl
outsl
xchg
jbe
add
in
jg
jg
sbb
and
sbb
aad
loop
xchg
enter
adc
fnsave
jge
test
mov
sub
dec
fisttpl
pop
and
cmp
mov
int
lret
insl
xor
clc
ss
sbb
push
xchg
sub
stos
add
ret
or
pop
ja
loopne
sub
icebp
mov
pop
push
addr16
daa
enter
sbb
and
int3
pop
out
cs
sbb
sarl
js
push
push
mov
subl
pop
pop
xchg
loope
dec
xor
pop
sbb
ljmp
sbb
imul
dec
xor
pop
mov
adc
mov
lret
mov
das
out
int
call
xor
push
popf
jns
inc
sbb
fucom
int3
dec
adcl
inc
repnz
cmpl
std
jp
or
push
movsb
add
adc
mov
mov
mov
mov
cs
sarl
push
jmp
scas
sub
push
cmp
push
les
pop
fs
sbb
inc
rorb
in
sub
lea
js
in
insb
ja
mov
cmc
jge
push
mov
jle
sti
js
mov
jmp
aad
add
cmp
sub
popa
push
cmp
out
or
fistps
push
mov
int3
add
test
frstor
sbb
ret
lcall
adc
cwtl
inc
dec
cwtl
adc
jns
sbb
repz
push
sbb
add
xchg
fidivrl
jbe
cmp
dec
cld
xchg
sbb
fdivrl
sub
testb
mov
dec
out
scas
lock
push
mov
fildll
cmpsb
test
imul
mov
inc
mov
arpl
rolb
xchg
xchg
sbb
and
aad
mov
out
mov
pusha
imul
push
sbb
rorb
popf
aad
mov
jecxz
sub
mov
into
je
loop
dec
imul
jg
fadds
dec
or
xchg
aad
push
sub
xor
cmp
mov
int
jl
xor
mov
adc
mov
ret
sti
rcll
dec
test
aad
out
jne
ljmp
repz
icebp
lcall
scas
jae
xchg
loope
cmp
xlat
incl
stos
sti
or
inc
or
mov
out
xor
jl
loopne
or
call
enter
das
mov
fmuls
negb
dec
mov
sbb
mov
lret
lret
in
nopl
mov
inc
int3
push
outsl
xor
push
loopne
inc
loop
dec
test
movsb
es
ret
rcrb
aam
push
mov
incl
test
decl
xchg
rcrl
inc
cmc
fldcw
stos
ret
jo
jns
sbb
or
push
negl
sbb
fimuls
aad
add
stc
jmp
test
pop
cmp
mov
jns
push
mov
mov
mov
mov
cmp
and
add
mov
negb
jae
sti
outsl
out
call
mov
inc
fnstcw
or
les
jb
cmc
sub
add
push
popf
arpl
cmp
sbb
pop
mov
in
sub
pop
push
pop
adc
push
addl
mov
jnp
push
mov
mov
enter
and
cmc
adc
ffreep
and
push
ds
push
pop
add
sbb
pop
mov
call
mov
test
xabort
jmp
inc
lcall
dec
test
inc
add
vpaddd
rcll
mov
shlb
outsl
in
dec
pop
fldcw
dec
imul
cli
stos
jns
pop
push
inc
sbb
test
xchg
sbb
std
mov
jbe
dec
dec
add
push
insl
aas
pop
mov
pop
inc
ficomps
enter
mov
cmp
sti
pop
movsl
scas
pop
add
subl
xor
cmp
fidivl
xchg
mov
mov
imul
ret
pop
leave
cwtl
pop
and
mov
sub
xchg
pop
mov
jne
pop
adc
outsb
xchg
pushf
and
lea
mov
and
dec
mov
sub
push
sub
or
inc
int3
mov
aad
or
mov
mov
enter
mov
lahf
mov
cmp
aam
mov
mov
jl
push
iret
or
sbb
and
das
push
sti
dec
fdivrl
stos
ds
stos
sub
sbb
cmp
hlt
and
cwtl
mov
ret
or
add
mov
lahf
adc
arpl
xchg
fs
mov
in
jns
popa
or
repz
adcb
sbb
cmp
adc
xchg
das
negb
jb
mov
dec
ror
imul
ds
mov
xchg
int
xor
rol
sbbl
jle
jl
add
lods
pop
pop
pop
repz
clc
ljmp
jp
clc
mov
cmpsl
push
mov
out
adc
sbb
leave
mov
mov
cmp
cmp
fsub
movsl
fcom
test
mov
add
push
ret
test
in
scas
inc
or
dec
mov
add
incb
xchg
sbbl
adc
daa
cmp
movsl
out
mov
es
mov
mov
ret
stos
push
pop
arpl
hlt
das
popf
inc
xchg
lret
hlt
pop
js
mov
aaa
dec
cmc
adc
mov
xor
fnsave
inc
out
imul
add
sub
roll
testl
gs
fnstenv
xor
mov
add
ja
mov
std
sar
mov
das
mov
fst
int3
cmp
lret
das
shrb
sub
jno
outsl
test
dec
ret
sub
push
icebp
inc
fwait
mov
sbb
or
xchg
push
rcrl
ret
jle
ret
setp
pusha
sbb
push
pop
jnp
fsubrs
mov
loopne
test
jbe
stos
lahf
pusha
mov
pop
cli
cmp
adc
or
add
jmp
sbb
mov
pop
call
mov
xor
xor
pop
adc
popf
or
adc
ret
je
push
jmp
ret
cmpsb
mov
dec
mov
or
daa
fstpl
xchg
mov
jle
arpl
jmp
outsl
jg
fcomps
or
loopne
lds
cld
add
xlat
sub
mov
pop
mov
movsb
lret
scas
cmp
clc
jmp
dec
mov
lods
sbb
lds
lahf
sbb
adc
imul
leave
push
div
movsb
ret
add
sbb
and
jp
stos
dec
sbb
aad
cmp
push
lcall
and
insb
movsb
negl
xor
mov
dec
es
lods
cmp
mov
mov
pop
sub
xchg
push
xchg
mov
bound
mov
mov
inc
adc
push
les
daa
add
subb
sbbb
rol
int
movsl
call
sbb
inc
jecxz
ss
push
add
loope
fisubs
stc
push
mov
mov
ja
xchg
pushf
xchg
out
sti
add
sbbl
shrl
jne
or
cmc
leave
test
adc
in
test
mov
or
std
icebp
push
push
mov
mov
cmc
and
inc
cmpsl
dec
repz
in
loopne
loopne
push
cmpsb
inc
mov
add
mov
fsubs
mov
repnz
jne
test
fcoms
test
xchg
rorl
aaa
bound
push
sub
nop
adc
out
mov
shlb
rorl
ret
or
xchg
cltd
mov
or
mov
mov
cmp
arpl
mov
mov
jge
and
xchg
mov
pop
orl
jnp
jmp
or
dec
mov
out
push
leave
outsl
inc
rcr
push
rorl
sub
fcmovne
sahf
adc
jnp
cmp
mull
sti
add
xchg
loop
push
fwait
or
sbb
jg
sub
add
push
pop
adc
mov
ja
rcl
repz
scas
arpl
es
inc
xor
cmp
aaa
lods
lret
icebp
sti
fstpt
xchg
inc
repz
rclb
adc
jae
lcall
sub
xor
int
push
pop
push
repnz
add
incb
pop
cmpsl
sub
in
dec
insl
pop
mov
push
pop
mov
aaa
xchg
and
add
out
mov
pop
cmp
std
mov
mov
sarl
aad
or
xchg
in
jbe
push
fisubrs
pop
ds
xchg
and
lret
xchg
aad
sti
adc
xchg
adc
and
lcall
mov
lods
push
int3
mov
pop
shrb
cmp
stos
mov
push
pop
jl
mov
shrb
xor
flds
cmp
aas
repz
cltd
adc
div
lcall
aam
hlt
icebp
push
cli
in
clc
inc
push
mov
outsb
ljmp
addr16
mov
add
sub
leave
jne
mov
outsb
adcl
xchg
push
sub
sub
pushf
jmp
and
or
inc
xorl
into
jns
add
clc
jbe
sarl
add
jmp
das
pop
data16
and
xor
por
imul
sub
call
leave
or
mov
jg
push
dec
cmp
data16
rcrl
hlt
fwait
ret
mov
sub
inc
in
jg
xor
ret
add
sahf
fwait
popa
inc
movsb
inc
mov
test
ljmp
jae
dec
sbb
xor
sub
or
jbe
popf
mov
cmp
mov
mov
es
lea
leave
mov
lahf
cmp
push
mov
sbb
ljmp
or
imul
cmp
insb
out
push
inc
js
mov
mov
mov
push
loop
aam
mov
inc
dec
pop
cltd
pushf
jns
adc
xor
cmp
jl
adc
lret
das
addr16
sti
add
and
ss
mov
xor
mov
xor
shll
aaa
push
and
sub
pusha
mov
sub
nop
pop
aaa
cmpsl
push
mov
or
inc
pop
mov
out
cmc
push
lods
adcl
sub
xlat
push
cmpsb
cli
jmp
int3
ja
mov
pop
mov
mov
mov
sbb
mov
addl
cmovnp
sub
xchg
popfw
fs
push
cmp
and
lock
jecxz,pn
ds
shll
sub
cmp
clc
xchg
add
pop
adc
fldl
xor
dec
adc
jecxz
add
rorl
adc
dec
std
jl
xlat
mov
dec
inc
adc
push
sbb
adc
shr
mov
fistl
roll
test
clc
mov
push
and
mov
xor
pusha
dec
pop
dec
sbb
dec
inc
xor
in
imul
sub
add
repnz
loop
sahf
xchg
hlt
cmp
lock
por
shl
push
imulb
adc
mov
and
mov
out
in
call
aas
je
dec
add
xchg
rcrl
or
xlat
push
inc
int3
loope
outsb
repz
je
cltd
xor
adc
jb
add
sbb
mov
pop
sub
enter
sbb
pop
mov
mov
loope
icebp
sub
int3
push
pop
imul
dec
es
jg
fstl
outsb
imul
insb
inc
imul
push
arpl
jmp
jo
or
mov
jp
gs
push
mov
pop
cmpsl
xor
jns
sbb
sub
call
inc
fidivrl
lahf
into
int
shlb
jle
cmp
fisttps
icebp
push
dec
lock
hlt
jbe
test
stc
inc
pusha
dec
ret
xor
das
out
xor
xchg
dec
push
insb
mov
in
push
ret
jo
inc
dec
int
jno,pt
sub
insb
add
ret
call
cmp
mov
sahf
dec
and
mov
or
js
adc
aaa
push
adc
xlat
inc
stc
in
xlat
rcl
jne
pop
test
cmpsl
mov
pop
psadbw
xlat
pop
cmp
test
inc
aam
mov
mov
std
dec
clc
adc
jne
or
fdivl
cli
shll
mov
roll
out
jp
add
push
cmp
sarb
mov
mov
inc
mov
movsb
cli
jns
mov
mov
ret
into
jmp
push
shlb
xchg
xchg
xor
test
mov
frstor
addr16
jg
jo
sub
cltd
xchg
mov
xor
cmp
sub
pop
out
push
in
mov
xchg
hlt
hlt
xchg
mov
cmp
sbbb
cmpsb
push
xor
jg
xor
push
gs
leave
or
fcoms
push
sahf
sbb
dec
rcr
je
dec
jbe
dec
lret
test
int
loopne
and
roll
cwtl
xchg
stc
adc
movsl
pop
add
sub
sub
mov
bound
cltd
inc
mov
fadds
adc
test
fstpl
sub
jl
mov
mov
lret
jne
roll
inc
cmpb
cltd
adc
out
adc
popf
ret
mov
loopne
sub
jge
shrl
mov
inc
pop
subb
mov
fwait
mov
jge
sar
mov
jae
jnp
mov
xchg
int
add
ss
cli
repz
jns
jns
fldt
jmp
cmp
pop
fdivl
stc
dec
mov
movsl
fwait
mov
movsb
addb
lds
jecxz
jecxz
mov
pop
outsl
sub
mov
xchg
cmp
and
ja
push
inc
mov
pop
ds
outsb
mov
daa
mov
lahf
lods
xchg
mov
sbb
xor
rcrb
cmp
insb
mov
ret
repz
bound
popa
push
pop
int
mov
xor
xor
cltd
icebp
pop
dec
xchg
sbb
in
repz
test
arpl
push
mov
aas
pop
int3
mov
lahf
es
icebp
push
xor
int3
rcll
push
lcall
leave
xchg
pop
inc
push
cmc
or
ret
pop
xchg
jl
jno
inc
sub
adc
inc
fs
mov
sbb
jp
frstor
mov
popf
rorl
popf
sbb
popa
aad
cmpsl
int
adc
cmpsl
popa
ja
jge
inc
arpl
mov
xchg
xor
lret
jg
or
or
lock
sti
dec
push
xchg
test
js
sbb
popf
lcall
cmpsl
or
movsl
retw
mov
sub
mov
push
sti
icebp
sbb
cmpsl
xor
cmpsl
inc
repz
mov
pushw
ss
mov
jnp
push
dec
shrb
mov
add
dec
in
inc
repnz
cmp
js
sbb
jle
push
es
cmp
sbb
sub
pushl
jecxz
fwait
dec
sbb
push
add
mov
fs
push
nop
jge
mov
icebp
mov
enter
or
popf
cwtl
rcrl
xchg
je
out
imul
out
arpl
loopne
xchg
jmp
leave
pusha
loopne
dec
arpl
bound
std
or
aam
ljmp
inc
fistps
hlt
test
dec
or
add
and
or
faddl
cmpb
dec
subb
adc
mov
xchg
xchg
sub
lahf
aad
and
shlb
cmp
push
mov
add
dec
mov
adc
mov
mov
pmaxsw
hlt
cmp
mov
xor
scas
add
fldcw
dec
data16
sbb
iret
je,pt
pop
das
lds
hlt
sbb
dec
inc
inc
fucomp
int3
pop
test
and
mov
fs
fucompp
sub
loope
imul
call
cmpsb
push
stos
ror
add
jmp
sub
sti
jae
leave
pop
into
arpl
ds
xor
pop
rep
aam
sub
jmp
add
fldt
arpl
outsl
iret
jmp
add
inc
sti
je
and
inc
mov
sub
fadd
sti
xor
xchg
lds
mov
xchg
pop
sbb
outsb
aaa
cli
mov
sbb
popa
mov
out
or
inc
push
or
xor
in
bts
jnp
aaa
pop
stc
gs
dec
pop
sahf
lret
mov
in
fwait
adc
mov
xchg
shrl
mov
push
movsb
out
adc
jle
popa
fistpl
es
in
sti
xor
sbb
push
test
enter
jns
jo
xor
mov
inc
mov
sbb
xchg
cwtl
out
add
lea
jno
mov
inc
aad
sbb
inc
addr16
sbb
push
sub
rcl
stos
testl
repz
push
sub
lods
aam
pushf
cmc
inc
cwtl
into
outsl
jns
mov
outsb
cmp
mov
call
shrl
ja
mov
in
add
push
sub
push
fadds
push
mov
adc
sub
fistpll
shrb
mov
dec
lock
dec
cld
sub
push
popa
or
xchg
fistl
xchg
xchg
fs
hlt
jl
in
data16
push
das
sub
mov
xor
adc
fdivrl
incl
xor
jmp
in
xchg
mov
sbb
iret
loop
test
xor
in
push
jb
mov
xchg
std
sub
xor
pop
popf
mov
ljmp
add
xor
sub
mov
push
je
sub
sub
pop
pusha
das
sbb
ds
test
movsl
pop
mov
loop
pop
fmuls
mov
hlt
lahf
testb
lea
nop
and
leave
pop
add
pop
fsubr
lcall
and
and
mov
and
ds
loopne
jbe
add
adc
jecxz
daa
mov
into
ret
fisubrl
aad
in
xor
push
and
add
mov
push
cmpsb
clc
jae
mov
or
mov
mov
inc
ret
sbb
in
insl
mov
cmp
jmp
add
test
jp
std
lcall
mov
scas
xchg
or
ljmp
int3
andl
test
mov
pop
cltd
sahf
mov
sbb
add
push
ja
adc
pop
aas
fildl
jge
das
jae
test
test
insl
mov
and
xchg
loope
cmp
cmp
xor
or
push
aaa
add
addr16
xchg
sub
les
sbb
cmc
mov
pop
add
mov
inc
mov
pop
insb
push
fucomi
cli
inc
mov
inc
inc
iret
mov
sbb
ffree
sub
adc
and
mov
pop
xchg
shl
add
lods
out
das
adc
jg
xchg
lds
in
shlb
cli
or
lea
add
pop
and
loop
mov
fistpl
pushf
adc
nop
sbb
mov
movsl
xchg
in
xor
ds
or
shrb
push
ja
iret
push
sbb
gs
push
fldcw
jp
in
adc
mov
cld
add
inc
and
pop
mov
stos
xor
mov
fimull
mov
imul
cmpl
push
push
nop
xorl
xchg
push
push
and
sub
fstpt
xor
push
out
push
mov
loopne
pusha
sarl
push
imul
jno
cmp
insl
fildl
push
jmp
push
mov
mov
mov
cltd
clc
add
out
dec
xor
mov
push
popa
and
aam
leave
pushf
inc
call
outsb
jo
jecxz
push
orb
pop
mov
xor
mov
cmpsl
or
mov
inc
sub
pushf
fldenv
icebp
subb
mov
or
jmp
outsl
push
inc
fisttpl
pop
xor
ss
pop
mov
mov
hlt
out
sub
and
mov
push
and
xor
mov
ds
sub
notl
ja
mov
data16
int
sub
arpl
gs
jne
repnz
idivl
dec
test
int
call
mov
inc
cmc
icebp
push
adc
mov
and
fstps
mov
lock
loopne
enterw
push
mov
loopne
and
fnstsw
popf
sbb
shl
sti
xchg
push
pop
sbb
sbb
jl
pop
in
sbb
scas
jmp
ss
popa
mov
shl
push
sub
shll
mov
cmpl
or
in
mov
aaa
sub
notl
mov
not
jb
jb
xchg
jg
mov
mov
cmpxchg
test
insl
pop
faddl
mov
arpl
push
mov
mov
mov
arpl
mov
mov
call
andl
xor
mov
adc
and
pop
testb
mov
loop
test
mov
cmpb
mov
rorl
add
mov
insl
int
cwtl
cmp
pop
xorb
sbb
mov
pop
mov
sbb
adc
je
push
jbe
adc
stos
and
das
outsb
jne
mov
add
stc
mov
xchg
or
sbb
cmpsl
cmp
cwtl
push
repnz
pop
ret
sbb
pusha
int
jb
inc
iret
out
test
or
repnz
stos
movsl
mov
cmp
mov
sub
pop
into
repnz
imul
xlat
es
clc
in
outsl
push
sub
or
push
mov
outsl
insb
stos
sub
dec
lea
lea
mov
test
imulb
dec
push
jno
and
outsl
or
stos
pop
into
add
push
mov
or
xor
arpl
nop
cmc
mov
mov
adc
test
push
adc
cmp
xor
shlb
ret
push
in
inc
cli
xchg
cmpsl
fiadds
xor
les
shrb
push
mov
leave
dec
push
pop
testb
pushf
scas
mul
insl
jae
ficoms
jecxz
cmc
dec
jnp
pop
ret
pushf
andb
scas
xchg
sbb
imul
adc
pop
inc
xor
cs
rcrl
adc
data16
push
clc
mov
mov
cwtl
adc
cmp
add
or
sti
rcrb
sbb
inc
ds
pop
test
xchg
rcrl
xchg
mov
shlb
jne
adc
mov
cltd
stos
inc
fildll
add
cmpsb
and
bound
rorb
and
sbb
aas
ljmp
cmc
cmp
jae
int3
or
int3
sbb
cs
add
pushf
popf
outsl
push
mov
cwtl
fldenv
mov
cmpsl
dec
inc
stos
fcompl
push
jge
stc
jo
sub
int
iret
jp
insb
push
and
cmp
mov
into
sbb
push
push
hlt
push
pop
iret
test
xchg
ljmp
mov
xor
mov
fs
and
mov
xor
nop
mov
mov
in
insb
xchg
movb
mov
popa
jb
xor
or
push
push
inc
call
jno
lea
xchg
push
mov
orl
pop
arpl
addl
adc
mov
addr16
jbe
leave
shrb
bswap
call
dec
loop,pt
es
mov
sbb
lods
outsl
pop
add
xor
lock
or
sbb
sub
stc
sub
push
test
pop
push
jne
in
push
stc
or
call
push
stc
sub
mov
mov
cmp
shl
outsl
ret
js
mov
sub
add
sub
movsb
or
xchg
lcall
cld
filds
mov
aas
inc
adc
push
repz
addr16
xor
xor
imul
leave
lret
push
push
mov
adc
lods
jb
jb
hlt
push
or
mov
push
or
mulb
lcall
push
mov
int
jne
test
push
jecxz
xchg
test
imul
cmp
add
jl
into
xor
filds
xor
rcr
cmpsb
into
ficompl
fwait
stos
mov
addl
mov
mov
in
test
js
cmp
mov
mov
aas
mov
cmpsl
ja
in
mov
or
mov
in
stos
dec
daa
xchg
cmp
fcmovnbe
pop
xchg
loope
mov
push
sbb
push
daa
sub
nop
test
int
popa
pop
incl
outsl
dec
mov
and
rorb
sarb
aaa
and
push
xchg
lcall
test
pop
push
in
mov
jg
adcl
mov
or
aaa
pop
add
dec
jne
jns
sbb
mov
out
add
sub
aad
sub
sub
adc
arpl
push
mov
sti
fsubs
adcb
out
push
jg
cmp
not
pop
cmp
icebp
test
outsb
int
js
add
jae
inc
sub
xchg
pop
push
pop
stos
stos
pushf
lret
push
dec
mov
pusha
cs
notb
hlt
dec
adc
imul
icebp
and
mov
icebp
xor
push
dec
mov
lea
sub
in
sub
xchg
xor
mov
sbb
and
adcb
xor
notl
rorb
test
and
dec
add
int3
xchg
lea
or
js
sub
cmp
xor
add
loop
aaa
test
in
pusha
cmpsl
leave
push
jg
stc
in
mov
loope
cmp
and
and
sahf
orl
inc
mov
mov
sar
cmc
fists
lea
or
mov
xchg
popa
fidivl
mov
mov
scas
jmp
pushf
xor
jnp
imul
xor
sti
inc
inc
xlat
jg
sbb
cld
loope
imul
hlt
pop
gs
sarl
mov
sbb
mov
movsl
lcall
mov
jmp
das
push
gs
xlat
adc
cmpsl
inc
xchg
mov
cmp
aad
aam
sbbb
push
lods
pop
scas
cmp
mov
xchg
ret
icebp
loop
in
js
outsb
adc
mov
test
dec
adc
pop
pop
xor
das
xorb
mov
cmpsl
lods
sahf
addr16
fcmovnu
rorb
pop
stc
and
es
nop
mov
shlb
xor
bound
es
lret
scas
and
mov
sub
fnstenv
xchg
les
bnd
pop
shl
and
call
add
in
push
sub
xchg
fsubl
mov
push
nop
push
mov
xorl
incb
jo
pop
or
xorb
inc
cmp
insl
insl
jge
xorb
pop
mov
mov
or
mov
fsubr
ss
xacquire
push
in
insb
test
flds
xor
push
dec
icebp
popa
sbb
fldcw
push
leave
jl
rorb
cmpsb
test
ss
mov
and
shlb
cmp
pushf
or
sbb
mov
mov
test
add
sbb
fdivrs
int
adc
xchg
jp
cli
or
xchg
sbb
pop
and
repz
hlt
mov
aam
subl
nop
mov
les
incb
mov
test
fwait
mov
push
adc
sbb
push
jmp
jg
les
in
fmull
mov
mov
pop
or
xchg
inc
orb
xchg
mov
sbb
add
jg
sub
paddusw
rol
test
push
in
sbb
mov
pusha
lock
test
out
insl
dec
push
cmp
scas
push
or
xchg
repz
lsl
jbe
popf
pop
add
mov
xor
fwait
xlat
xor
pop
xchg
js
test
mov
mov
mov
adc
psubq
clc
push
adc
lcall
ja
sub
andl
add
xchg
jp
mov
sbb
sbb
or
lret
push
adc
xchg
fidivl
add
push
mov
push
inc
loope,pt
push
push
and
insl
into
add
sahf
popl
inc
pop
or
add
js
pop
and
gs
mov
aas
test
pop
add
jb
in
aad
movsl
and
pop
inc
out
push
insb
imul
std
iret
sbb
cmp
outsl
mov
roll
and
dec
adc
popf
fldcw
scas
pusha
notl
into
cmp
adc
repnz
call
popf
nop
push
and
fcoml
aas
mov
lock
idivl
test
xchg
add
xor
add
lcall
mov
jne
dec
push
ret
mov
mov
popf
jno
inc
pop
cmp
test
adc
mov
stos
call
xor
pop
into
mov
mov
or
xchg
push
push
in
inc
decb
sti
sbb
push
imul
stos
fmulp
push
push
hlt
xchg
imul
shlb
add
rcr
xchg
adc
sahf
push
push
shll
lods
leave
mov
clc
leave
dec
les
test
add
aas
cmpsb
in
jno
sub
jle
push
sbb
dec
jno
mov
pop
imul
cld
xor
out
mov
sbb
sbb
shll
inc
mov
mov
lret
sarl
sub
in
cwtl
movsb
inc
mov
jp
pop
mov
pop
out
jae
in
ret
add
pushf
xchg
cmp
mov
inc
loop
cmp
xchg
dec
in
loop
mov
outsb
in
in
add
gs
mov
sub
stos
sub
hlt
cwtl
jge
xlat
add
popa
sbb
mov
in
pop
pushf
imul
lahf
sbb
push
movsb
jno
outsl
jns
and
call
aad
xor
push
adc
iret
inc
sub
mov
repz
mov
les
test
sbb
add
xchg
or
outsl
lret
xlat
subl
sbb
ret
ret
lock
icebp
mov
mov
cmpb
pop
test
sbb
xchg
cld
mov
adc
ljmp
call
mov
out
int
js
push
push
and
push
mov
rcrb
cmp
mov
and
ret
aad
and
test
pop
lods
xchg
test
rcll
mov
xchg
cmp
xchg
push
and
mul
or
fidivs
mov
lret
mov
gs
mov
ret
enter
pop
jge
ret
in
mov
dec
inc
mov
mov
xchg
push
push
dec
les
insb
rcr
ljmp
inc
inc
jecxz
js
fisttps
xor
dec
leave
js
mov
cmc
sbb
xchg
sbb
divb
jp
nop
pop
push
inc
pop
stc
push
cmpsb
xchg
add
xor
sub
lods
xor
jecxz
cmp
fucom
stos
inc
add
inc
pushf
fcmovnu
cld
pop
iret
divl
adc
mov
or
inc
and
sbb
dec
clc
test
scas
aam
andl
xor
aad
xchg
cmp
lods
into
cmp
jb
or
in
jae
cmp
lods
movsl
das
fs
outsl
enterw
pop
sbb
pop
push
xor
int
mov
sbb
push
sub
andl
mov
cmpsb
jbe
push
test
icebp
jb
andl
lods
icebp
outsl
pop
out
inc
adc
imul
jbe
clc
push
repz
jnp
dec
jae
out
and
or
jmp
scas
xchg
mov
call
mov
sub
loopne
or
jno
mov
imul
add
push
push
xchg
rcl
aaa
orb
cmp
cmpl
xlat
movsl
mov
je
cmp
jp
mov
incb
push
fwait
sub
mov
pop
stc
cmp
xchg
gs
shr
scas
push
and
fldenv
hlt
pop
mov
fdivs
cld
shr
dec
lcall
or
data16
fsubs
adc
cmp
pop
icebp
cmp
mov
pop
mov
loopne
push
inc
inc
lcall
lret
in
inc
dec
or
insl
cmpsl
in
jae
ret
mov
xor
push
sti
adc
inc
jbe
sbb
mov
mov
nop
adc
xchg
or
push
push
adc
in
jmp
ds
popf
push
in
jns
pop
ret
jge
jns
push
jnp
js
in
cmp
sarb
subb
add
pusha
sbb
xor
imul
fmuls
lods
pop
adc
and
inc
test
neg
lods
imul
inc
add
jg
arpl
sbb
popa
add
cmp
out
test
jg
sub
dec
push
mov
cmpsb
ja
enter
xchg
and
cmp
cmp
push
iret
mov
cmc
dec
out
outsl
int
std
add
xchg
xchg
bound
ret
ret
nop
repz
xor
mov
movsb
cld
insb
dec
rcll
pushf
stc
lods
xchg
or
ljmp
out
pop
out
xor
loopne
adc
cs
jbe
push
jns
enter
outsb
xchg
ss
push
xor
into
mov
addl
cmp
fwait
sub
add
mov
in
sub
mov
rcl
dec
xchg
loope
jnp
nop
sarb
jle
push
jnp
imul
or
cmp
adc
push
enter
js
prefetch
dec
inc
push
out
notb
movl
mov
into
xchg
mov
loop
pop
or
lds
or
mov
jns
xchg
push
std
out
cmpsl
adc
es
adc
fbld
push
cmc
inc
leave
out
imul
pop
or
test
neg
aaa
inc
or
pop
sub
push
insb
push
iret
daa
push
ret
aas
push
xor
mov
dec
out
sbb
xchg
sbb
andb
mov
pop
arpl
movsl
gs
adc
aas
das
jno
xlat
mov
add
xor
adc
pop
bound
mov
or
out
or
ss
jle
push
add
inc
imul
sahf
fsubrs
fsubrs
imul
and
cmp
scas
or
sbb
inc
sarb
jne
pop
scas
jecxz
jecxz
stos
sub
add
arpl
and
adc
outsb
or
mov
push
fcompl
or
insl
pop
inc
push
sbb
mov
adc
fs
repz
xchg
xor
call
andl
mov
insl
lcall
cmp
dec
pop
sbb
mov
and
add
add
rorl
lods
cmp
dec
xchg
add
pop
push
nop
cmp
shll
jecxz
sbb
std
pop
sbb
lret
dec
sbb
dec
lds
xchg
sub
lock
xor
fcompl
sbb
jle
mov
xchg
sub
mov
pusha
in
shrb
push
daa
subl
les
jb
out
dec
aas
pop
pop
rcll
inc
jg
in
mov
mov
cmc
push
repz
loope
mov
jno
sbb
mov
or
inc
divb
inc
mov
mov
pop
shll
pop
add
pop
or
dec
test
mov
mov
cli
pop
roll
fldl
and
jns
sarb
xor
das
xor
sbb
mov
adc
jmp
fimuls
addr16
xchg
popa
jnp
jg
push
jno
dec
mov
inc
aad
shll
xor
mov
repnz
enter
adc
test
xchg
sub
scas
imul
adc
fdivrl
mov
lods
mov
push
xchg
je
push
mov
imul
ljmp
mov
add
shlb
out
lock
lds
notl
test
pop
into
push
adc
sub
push
mov
sbb
scas
loop
hlt
ret
sub
lahf
add
sub
jle
nop
ds
fdivl
inc
inc
pop
mov
mov
sti
cmp
iret
add
mull
push
xchg
insb
rcr
xor
clc
mov
fsubrs
imul
xor
in
push
popf
push
or
push
nop
scas
sub
popf
loope
push
sub
daa
and
cmp
nop
adc
pop
xlat
aad
push
test
mov
dec
and
bound
rcr
mov
push
pop
in
pmulhuw
pop
cmp
outsl
mov
jo
call
arpl
div
cli
pcmpgtd
jne
popa
leave
jo
xchg
orb
out
lea
xchg
sti
inc
cwtl
jecxz
mov
jmp
sbb
mov
movsb
in
cmc
sub
enter
shr
adc
xchg
test
clc
add
fxch
popa
and
data16
fs
aam
lods
or
mov
pop
push
stc
xchg
icebp
outsl
mov
cmp
lods
cltd
lret
roll
push
cltd
sub
ja
out
flds
jae
xchg
sbb
push
test
std
sub
sbb
cmp
sbb
push
scas
stos
mov
pop
adc
push
out
push
add
filds
xor
jl
clc
or
sbb
mov
sarb
mov
sti
fldenv
sub
shlb
adc
adc
in
fwait
inc
sub
hlt
inc
pop
sub
jp
int3
popf
lds
mov
test
fldl
int3
cmc
mov
lock
mov
cbtw
jl
pop
jne
mov
dec
and
add
call
shlb
xor
add
outsl
or
push
adc
mov
loopne
pop
pushl
jns
pop
mov
popf
push
adc
outsl
xor
fisubrl
jmp
sbb
cmpsl
ss
mov
xchg
jbe
mov
insb
and
mov
add
notl
pushf
mov
sbb
fldcw
leave
in
xchg
jnp
jecxz
es
loop
sub
and
adc
aas
popf
repnz
mov
test
pop
push
xchg
in
je
fwait
and
scas
sti
lret
adc
xchg
lcall
or
in
in
or
mov
out
cmp
and
out
jb
inc
int3
push
mov
das
pop
push
xor
jl
push
push
jbe
cmp
xchg
out
ret
repnz
lods
imul
ja
and
mov
lret
cmp
dec
sub
adc
and
xor
push
or
enter
and
xchg
ret
lcall
rolb
out
loop
sbb
jge
fbld
add
dec
add
mov
adc
lods
xchg
dec
dec
inc
mov
shl
movl
fimull
inc
fmul
rolb
push
call
mov
sub
ret
inc
mov
test
out
dec
or
push
jnp
push
repz
test
pop
xor
jnp
shll
dec
dec
js
lods
sbb
test
jecxz
push
add
into
xchg
arpl
movsb
mov
or
pop
mov
gs
fsts
xchg
push
mov
stos
sub
push
add
dec
cmp
and
testl
aaa
jecxz
dec
stos
jno
shl
mov
dec
repnz
jne
xor
cmc
andl
mov
cmpsb
movzwl
sbb
pop
cli
and
sub
mov
push
pop
ficoml
fnsave
jno
xchg
xchg
lret
add
inc
arpl
cmp
test
sub
jne
stos
lods
sbb
jge
jae
sahf
test
sbb
xor
icebp
addr16
inc
fs
adc
mov
test
or
fidivrl
addr16
mov
sub
aas
orl
mov
xor
xchg
dec
dec
mov
cmpb
cs
adc
jae
jnp
stos
jp
int3
aam
xchg
mov
insl
cmp
push
out
nop
add
data16
xchg
cmp
test
pop
dec
orl
je
fistl
call
int3
inc
or
mov
out
pextrw
popf
dec
es
lock
pushf
bound
les
xor
lret
das
jge
repz
inc
or
hlt
mov
jns
scas
push
mov
stc
lea
out
and
pop
jge
imul
xchg
out
movsb
jns
jae
mov
int3
sbb
push
cltd
cmpsl
cs
fsts
mov
inc
and
dec
push
push
arpl
mov
rcll
shrl
call
fidivl
scas
loope
inc
ret
mov
adc
orl
popf
or
jmp
jne
scas
shl
sarl
inc
pop
cmpsw
and
jg
xchg
pop
subb
mov
sbb
xlat
lahf
leave
inc
mov
jbe
cmpsb
lret
and
add
loop
rcll
outsb
sbb
pop
mov
jmp
dec
dec
adc
jbe
push
push
loop
mov
mov
std
lahf
mov
adc
fdivrs
in
pusha
test
or
test
lea
lds
xor
leave
aam
stos
add
fldcw
xor
movsl
or
jle
movsl
adc
push
push
mov
pop
cs
test
mov
or
mov
adc
lcall
fbld
and
mov
cmc
out
xor
call
cmp
scas
adc
sbb
mov
loope
movsl
scas
xchg
xchg
fldt
inc
xor
int3
test
push
lahf
jle
int3
jle
js
push
std
test
test
jg
fnstenv
add
and
add
shlb
pop
xchg
xchg
adc
rcrb
repnz
test
push
ret
shr
mov
cwtl
adc
xchg
lahf
scas
lea
lods
xor
fbld
pop
xchg
mov
ret
dec
push
pop
mov
pop
ss
push
mov
mov
jo
insl
les
cmp
iret
inc
cmc
jns
mov
cmp
add
mov
pop
xor
dec
mov
es
dec
popa
sub
mov
in
test
pmaxsw
sbb
push
or
sti
dec
jne
ret
cmpsl
jmp
pop
loope
xor
scas
xchg
les
mov
into
mov
in
pop
jg
sub
cld
les
mov
xchg
inc
icebp
mov
daa
jmp
test
mov
repz
sbb
adc
xchg
movsb
push
fwait
sub
imul
mov
xchg
lea
loope
jnp
push
inc
dec
imul
mov
add
mov
mov
gs
mov
sub
dec
jmp
cmp
shlb
push
insb
pop
andl
pop
push
addb
mov
xor
stc
or
or
sub
inc
or
mov
sbb
sbb
add
mov
insb
hlt
and
cmp
fcoml
sub
pop
and
adc
mov
xchg
xor
xchg
aam
adc
mov
push
cltd
xor
jecxz
js
push
xchg
sub
sub
fisttps
xorl
adc
adc
repnz
mov
adc
pop
inc
sub
or
data16
sub
xor
or
icebp
shrb
adc
rclb
push
mov
sar
jge
mov
scas
lea
cmp
pop
xchg
mov
xchg
jnp
data16
clc
mov
cli
cmpsl
jle
lcall
jg
pop
sub
cmc
lds
mov
adc
xor
pop
loopne
and
lret
movsl
negb
inc
dec
push
in
loopne
or
ret
mov
notb
notl
push
mov
pop
inc
inc
cmp
mov
stos
rolb
lods
in
or
fldt
movsb
mov
dec
clc
add
sbb
mov
pop
mov
dec
cwtl
xchg
inc
push
lods
jbe
push
pop
mov
dec
sub
push
test
xlat
or
out
daa
sbb
jmp
std
pop
aam
xlat
mov
sbb
inc
adc
loope
insl
mov
mov
cltd
fcom
lahf
and
pop
jno
insl
cmp
negl
fdivs
cmp
ret
pop
sbb
cmpl
mov
stos
push
shll
cmp
sahf
mov
mov
and
jnp
pop
pop
jno
mov
jp
adc
das
rcl
cmp
dec
neg
cmpl
pop
jge
jns
ret
ret
xor
dec
cmp
loope
daa
adc
mov
stc
and
stc
ftst
push
movsl
push
mov
sahf
cmp
push
sub
xchg
sub
pop
pop
push
mov
jns
jae
je
lea
ss
jns,pn
jne
aam
cwtl
mov
out
xor
pop
in
add
fistl
add
stos
adcl
xchg
idiv
insl
sub
cwtl
fadds
test
jmp
mov
dec
aas
jae
add
rol
inc
jmp
jo
repz
lret
mov
andb
frstor
fiaddl
adc
fwait
inc
cmp
sbb
mov
test
outsb
and
sbb
gs
inc
pop
hlt
mov
cmp
mov
outsb
mov
or
gs
dec
repnz
sub
or
arpl
mov
ja
mov
mov
fiadds
sbb
or
jge
cmp
sub
push
out
aam
push
and
and
dec
pop
mov
push
lods
lds
cmp
mov
dec
jns
adc
les
movsl
jno
mov
cmpl
fnsave
ss
jl
sbb
ret
adc
in
push
fstpt
fisttps
xor
or
xchg
aas
mov
cmp
and
mov
mov
sub
sbb
inc
jo
out
fstpl
sub
cld
fisttps
repz
mov
fs
cmp
sub
xchg
gs
jecxz
mov
mov
cltd
add
pop
xor
divb
aaa
add
lcall
xchg
jl
mov
in
mov
adc
scas
mov
lods
int3
cmp
mov
ret
jno
pusha
decl
mov
cld
xchg
fdivrl
call
sbb
imul
push
fnstcw
jo
mov
pop
adc
inc
jae
cltd
and
add
notb
sub
je
xchg
repnz
outsl
xchg
sahf
scas
je
and
sub
insb
and
mov
insb
dec
sbb
jno
adc
dec
sub
mov
sbb
nop
stos
mov
add
pop
add
xchg
les
add
push
cld
push
push
addr16
orl
mov
pop
pop
xor
mov
hlt
loop
enter
push
xchg
mov
aad
insl
popa
dec
cltd
je
cwtl
or
stos
in
fisubrs
push
je
fwait
cmc
lea
push
inc
sub
arpl
ljmp
scas
insl
mov
or
stos
cs
and
jge
repnz
push
stos
fsubs
nop
xor
xchg
xor
sbb
pushf
push
test
mov
outsb
out
clc
orb
in
push
dec
inc
gs
mov
stos
fildll
and
inc
ds
in
pop
aam
cmpsb
fwait
jl
iret
loop
jle
jno
xor
dec
sti
cmp
lods
out
lahf
imul
xchg
jns
cltd
sbb
roll
xor
dec
jge
jge
fistps
jo
ret
repnz
jmp
xor
nop
fsubrs
gs
movsl
in
call
xchg
out
scas
mov
bound
dec
inc
sti
cmc
dec
clc
push
sub
cmpb
aaa
aaa
pop
lds
dec
pop
jbe
call
je
push
or
xchg
xor
dec
jl
cmpsb
pop
ja
in
pop
sub
cld
divl
movsl
repnz
cmovs
sbb
xchg
pop
fsub
sub
push
jl
mov
jae
ljmp
dec
aad
mov
inc
mov
repnz
pop
pop
popl
jmp
sahf
pop
mov
mov
push
pop
push
mov
repz
xchg
in
fmull
jae
outsb
dec
lods
popa
in
je
fiadds
pop
sbb
pop
insl
add
pop
xor
pop
insb
pop
pusha
inc
subl
lods
cli
mov
std
jnp
nop
mov
jns
jae
sub
jecxz
movsb
movsb
jns
add
sub
notl
inc
mov
adc
sbb
or
bound
adc
enter
lods
insl
loopne
divb
pop
je
lahf
es
push
dec
pop
jecxz
pop
push
lcall
add
sbb
int
or
arpl
in
lea
inc
and
pop
sbb
dec
inc
mov
pop
and
or
jl
sbb
adc
ret
mov
outsb
outsl
movsl
mulb
mov
int
mov
int3
adc
decl
cmp
mov
jae
jmp
in
cld
push
sbb
addr16
cmp
mov
add
test
xor
pandn
ds
loope
add
outsl
outsl
inc
pop
movsl
nop
leave
add
inc
add
jmp
jne
in
in
sub
fmull
jge
faddl
cwtl
popf
leave
lods
add
pop
mov
dec
mov
cmpsl
cli
ret
mov
pop
lock
lds
adc
ret
pop
inc
popf
jae
and
mov
cmp
cld
and
mov
inc
inc
popf
cmp
pop
mov
adc
loope
and
add
std
inc
mov
aaa
pop
cmp
xchg
loopne
mov
pop
mov
lds
cs
lret
and
jg
sbb
lea
add
mov
add
push
fisubs
in
adc
data16
out
and
xor
or
sbb
jo
xchg
ror
jle
xchg
xlat
xchg
sbb
arpl
or
cmp
jmp
jo
lods
iret
into
adc
jmp
mov
mov
xor
int3
dec
js
mov
sbb
and
add
lcall
insb
sbb
xchg
mov
insl
mov
mov
sarb
mov
jg
cwtl
pusha
xor
dec
movsl
shll
int
sahf
inc
sahf
mov
sbb
enter
and
aaa
xchg
jecxz
mov
jnp
mov
das
ret
daa
icebp
cmc
pop
xor
out
ljmp
clc
in
dec
rorb
or
and
sbb
loop
or
add
cltd
mov
push
pushf
into
xchg
hlt
sbb
mov
pop
sbb
sub
bound
mov
sbb
mov
adc
das
and
xchg
jg
sti
mov
dec
sahf
push
dec
push
jno
xchg
in
add
or
repz
loopne
jmp
aad
cmp
mov
add
cld
mov
out
dec
push
or
jp
testl
sbb
jmp
pop
cmp
in
mov
fmuls
scas
ljmp
dec
sbb
jae
fs
call
shl
sbb
fucom
and
mov
loopne
push
ds
jae
cwtl
fidivs
and
mov
pop
sub
adc
adc
in
push
movsl
and
outsb
push
in
jae
ds
mov
pop
loopne
ficoms
imulb
out
cltd
xor
aad
sbb
ret
add
cmp
xchg
push
dec
push
popa
push
lods
or
pop
lods
push
sbb
ljmp
mov
sahf
mov
lahf
mov
out
pop
mov
cmp
jecxz
mov
mov
cmp
and
icebp
shl
sbb
std
sub
aad
and
pop
popf
sub
data16
movl
push
inc
pop
cmp
push
iret
or
cs
out
xchg
daa
iret
lahf
sti
rcr
cmp
mov
popa
es
sbb
lods
pop
in
sub
xchg
fwait
gs
out
mov
xchg
push
rclb
js
repnz
adc
mov
cmp
in
lock
outsb
gs
mov
outsl
fimuls
arpl
cmp
add
sbb
jle
icebp
sarb
jne
and
andl
pusha
jg
add
daa
fwait
sub
in
sahf
and
test
outsl
jecxz
lods
push
nop
stos
mov
shlb
add
jecxz
jmp
push
sub
insb
mov
mov
movsl
jb
negl
pop
movsl
dec
pop
mov
push
es
stc
mov
adc
mov
mov
add
sbb
or
mov
pop
dec
clc
cmpsl
mov
popw
in
push
cmp
xor
mov
mov
cmp
dec
fsts
pop
stos
outsl
lret
xlat
mov
adc
test
xor
loop
scas
xor
lret
jge
in
dec
lahf
mov
aam
fdivs
sbb
mov
das
push
mov
adcb
jae
mov
mov
cmpsb
cmp
mov
xlat
or
icebp
jb
in
dec
xchg
mov
mov
sub
cli
adc
mov
aas
cmc
imul
stos
jp
adc
add
inc
repnz
jle
sbb
nop
sti
push
xchg
stc
xchg
inc
fildl
sbb
movsb
pop
xor
shrb
inc
inc
jbe
or
sti
call
or
lcall
pop
mov
loope
arpl
xchg
rcrb
sub
xchg
test
cmp
loop
out
mov
jb
xor
decl
out
bound
lods
add
out
fisttps
xchg
mov
mov
in
jle
jns
adcb
adc
xchg
mov
adc
xor
pop
in
das
jnp
mov
fstp
xor
push
lock
gs
pop
imul
imul
fists
addr16
mov
sbb
cmp
loop
inc
out
bound
kxnorb
fisubs
sub
imul
js
stc
lods
insb
sub
fwait
sbb
lock
inc
push
in
xchg
mov
mov
add
js
adc
cmpsl
cmp
out
xchg
std
lea
or
or
and
add
daa
add
cmp
jno
add
xor
into
dec
out
inc
push
push
rcll
insb
jns
or
jp
insl
pop
cmp
dec
inc
out
inc
in
xor
inc
or
push
xchg
dec
je
sti
aaa
inc
mov
hlt
fcmovb
movsl
mov
sahf
movsb
mov
imul
sti
cs
lcall
cld
cs
mov
mov
popa
gs
insb
pop
xchg
shrb
mov
stos
sbb
dec
addr16
inc
je
xlat
push
ret
fsubrs
mov
inc
dec
sbb
fwait
and
push
xchg
hlt
pop
nop
pusha
fbld
rclb
sti
push
mov
jg
clc
icebp
and
cmc
dec
subb
cmp
or
mov
mov
dec
mov
push
xchg
xor
aas
test
in
push
loope
jne
dec
add
fxch
mov
insb
xchg
int3
fimull
loop
pop
and
aaa
lea
mov
in
das
pop
pop
into
in
bound
pop
cmp
mov
and
push
imul
psrlw
insl
sub
call
fimuls
sbb
inc
out
pop
xchg
mov
mov
dec
inc
mov
cmp
fnsave
pushf
push
add
stc
push
mov
fs
lods
mov
out
adcl
mov
mov
test
scas
popa
pop
and
xor
adc
dec
mov
imul
mov
mov
lds
jae
rorb
mov
sbb
ja
mov
adc
mov
sbb
aas
mov
xchg
repz
out
dec
stc
jae
push
sarl
aam
dec
and
mov
push
pop
jp
mov
cld
mov
and
sbb
call
in
or
push
in
cltd
push
shll
or
push
ljmp
lods
cltd
lea
inc
jbe
mov
sbb
xchg
add
addr16
aad
xchg
sub
clc
pop
js
cmp
jp
or
into
cmpsl
scas
and
dec
pop
ret
sti
fisubrl
push
leave
iret
inc
inc
scas
ret
inc
iret
push
adc
arpl
mov
ss
jl
pop
sahf
sbb
int
xor
inc
hlt
std
add
inc
adc
sub
add
sbb
outsb
pop
ficomps
jo
repnz
pop
cmp
sbb
mov
jmp
mov
pusha
cmp
fstl
push
popa
cmpsb
sub
push
add
push
ljmp
jecxz
cs
xor
imul
pushf
orl
dec
push
hlt
sbb
divb
jae
sbb
mov
test
outsb
cmp
xorb
mov
add
pop
and
rcrb
in
scas
dec
jl
adc
push
cld
cmp
mov
pusha
and
inc
aad
repz
cltd
mov
dec
insl
sbb
rclb
ret
out
insb
arpl
pop
sbb
loopne
add
mov
sub
lea
push
dec
arpl
popf
pop
push
stc
push
xor
and
jo
xchg
sbb
pusha
xor
test
fstl
int3
xor
loop
das
jmp
leave
daa
inc
icebp
jp
sub
js
jnp
sahf
movsl
inc
ret
jl
test
xchg
lret
sbb
sub
xor
sub
jmp
xchg
add
mov
dec
mov
xlat
mov
or
fnstenv
rorl
jge
cld
xchg
mov
in
mov
jecxz
add
mov
movsb
mov
movsb
sbb
xlat
xchg
and
fstl
in
fisttps
jno
ja
dec
icebp
aas
popf
data16
cmp
cmp
leave
dec
scas
insb
movsb
xor
jg
fistpl
push
or
and
mov
rol
or
and
ret
leave
cld
lret
inc
and
inc
mov
bound
mov
negl
jno
imull
and
ss
mov
jns
push
lods
das
jo
xor
jae
daa
push
es
jge
cmpsl
cmp
cltd
rol
mov
enter
jmp
jmp
xor
sti
out
mov
jle
jg
aam
fildll
cmp
cltd
sbb
aad
and
les
add
call
xchg
sbb
jns
cmpsl
jl
sti
mov
mov
mov
cmp
movsl
inc
or
jnp
in
shlb
fs
mov
test
imul
cli
xchg
add
push
push
lock
push
lods
ret
or
cltd
out
sub
cmp
sbb
sbb
or
rorl
test
fwait
inc
in
lret
aaa
nop
jg
inc
sub
inc
mov
in
jno
sbb
mov
sub
inc
add
pusha
mov
mov
xchg
test
xchg
push
aad
lods
in
andl
inc
cmp
std
cmp
jge
popf
rolb
fnstenv
add
sub
loopne
fcomps
xchg
nop
aas
pop
arpl
cwtl
ljmp
in
test
lret
jo
jo
dec
test
ret
stos
in
out
sahf
cmc
stos
push
jae
dec
inc
mov
xor
jmp
mov
mov
add
dec
mov
std
adc
inc
mov
mov
or
adc
int
sarb
pop
popf
sub
xchg
cmp
movsb
xor
stos
fnstenv
rcl
sbbl
ja
add
add
ljmp
in
fstl
sub
fistpll
jbe
cmp
ljmp
insl
sub
cmp
and
inc
jp
dec
push
xchg
pop
test
mov
out
xorl
xchg
push
sbb
cmp
daa
movsl
mov
outsl
out
cli
fs
sar
insl
sbb
repz
xchg
das
adc
popa
dec
adc
test
jmp
out
sub
and
add
ret
xor
pop
outsb
fucom
push
sub
push
addr16
mov
mov
scas
dec
repnz
push
pop
rclb
xor
jg
scas
add
xor
cltd
adc
adc
mov
std
adc
sub
cmp
add
jne
setbe
mov
push
mov
push
notb
sbb
sbb
neg
mov
shr
loop
jmp
mov
xchg
mov
repnz
dec
aas
mov
int3
mov
roll
outsl
outsl
pusha
les
mov
pop
int
push
int
insb
add
adc
setne
xchg
adc
lcall
scas
fildl
pop
push
inc
mov
push
xchg
xor
mov
mov
negb
xchg
jnp
push
sti
fsts
and
ja
and
dec
xchg
pushf
mov
sbb
sbb
add
mov
es
lea
insb
leave
imul
ss
and
mov
adc
iret
ja
xchg
movb
mov
push
cmp
and
outsb
add
sbb
cmp
iret
test
or
pop
sti
test
cmpsl
and
sbb
in
bound
mov
pop
adc
cmp
loope
shrb
aam
sbb
dec
mov
mov
loop
test
js
lcall
jg
inc
inc
cmp
push
xchg
cs
pop
test
pop
lcall
shlb
push
push
in
movsb
push
xchg
xor
repnz
outsb
lcall
xor
mov
add
fnstcw
sbb
jle
scas
add
jno
jns
pop
jecxz
rorb
inc
or
stos
sub
push
sbb
or
and
loop
aam
repnz
lds
jmp
ret
insl
aam
arpl
fs
int3
dec
and
cs
mov
hlt
je
add
mov
cwtl
sahf
popa
xchg
aad
dec
add
inc
add
mov
add
xor
popf
fsubrl
xor
insb
xchg
or
in
mov
mov
xor
jo
lret
js
fs
adc
sub
fidivl
fistl
pop
fwait
pop
movb
and
cmp
gs
insl
xchg
xchg
jnp
sub
mov
push
push
movsb
fdiv
jns
adc
loop
shl
cmp
sbbl
sbbl
cmpsb
aas
adc
es
cs
out
into
repnz
je
sbb
imul
roll
cmp
cmc
mov
sub
mov
and
ljmp
negb
cmp
fwait
dec
test
push
mov
pop
cmp
ror
cmp
and
into
aam
dec
les
scas
inc
jmp
test
outsb
pop
or
in
mov
sarl
or
push
jp
push
and
inc
sub
test
mov
out
cltd
pop
lret
cmp
jo
or
sbb
clc
pop
jo
ds
push
imulb
mov
adc
push
add
push
push
adc
cmc
lods
scas
adc
cmp
stos
xor
or
das
popa
cli
cmc
imul
ret
xor
push
scas
nop
sub
imul
dec
std
dec
imul
or
or
pusha
js
and
xchg
repnz
inc
push
adc
add
fstpl
cmc
fs
movl
cwtl
mov
loop
dec
inc
add
fcompl
movsl
pop
inc
negb
ljmp
adc
repz
mov
push
pop
pushf
cmp
fiaddl
jg
rolb
mov
mov
nop
in
jns
mov
and
int
sahf
xor
stos
call
xchg
lret
or
std
fsubrs
pop
sub
loopne
inc
jp
lret
push
jmp
popf
push
adc
and
fsubp
dec
fucomp
das
notl
inc
mov
xor
mov
fsubrl
sahf
cmp
xor
mov
out
je
push
pop
stc
mov
enter
sbb
pusha
sub
je
gs
aad
or
xchg
mov
test
mov
cmp
repz
call
std
daa
mov
jno
rclb
and
out
cmp
fadd
aaa
fs
lods
adc
pop
mov
or
mov
loope
imul
or
and
and
or
pushf
push
scas
xchg
out
aad
ret
xor
icebp
clc
fwait
pop
std
or
cli
scas
sub
pop
mov
dec
xlat
int
xchg
lock
jbe
adc
sbb
mov
rcl
sub
push
andnps
cmp
pop
popa
and
jo
jecxz
xchg
addb
xchg
sub
movb
or
push
push
icebp
test
mov
jns
loope
mov
xchg
and
jmp
jle
xchg
xor
gs
add
enter
mov
stc
lahf
test
inc
mov
cld
lcall
mov
enter
dec
dec
fsubrs
inc
loop
push
aaa
sub
fstps
mov
mov
inc
push
pop
xorl
add
add
mov
test
movsb
lock
dec
adc
ss
icebp
int
arpl
js
mov
sub
sub
cmp
ds
cmp
loopne
stos
sbb
push
lods
dec
add
je
data16
rcrl
cmc
in
mov
lret
xchg
sub
cmp
sbb
jae
mov
fdivl
jg
adc
sub
jb
jbe
les
jge
in
dec
push
outsb
cwtl
pop
push
mov
sbb
test
dec
loope
push
push
popa
arpl
sub
pop
sub
in
add
in
push
xor
inc
push
and
and
pop
push
jmp
push
lahf
daa
xchg
idiv
cmp
and
psubusw
xchg
fwait
jo
loope
mov
enter
mov
in
lea
std
ss
out
das
gs
and
push
test
pop
lcall
jmp
enter
xor
enter
xchg
xchg
xor
cmp
or
jecxz
jns
xchg
xor
shrb
xlat
inc
add
adc
sbb
lock
ret
loopne
sahf
jge
xor
repz
cmp
cltd
sbb
sub
push
lret
mov
dec
xor
adc
fwait
cmp
mov
fidivrl
stc
mov
decb
jns
loope
je
sbb
addb
pcmpeqw
dec
inc
sub
aas
test
std
jg
js
pop
mov
test
mov
pop
push
stos
and
or
mov
das
leave
mov
jmp
sbb
or
jecxz
mov
mov
add
jae,pn
jge
sbb
jnp
mov
cmp
lcall
inc
mov
scas
fwait
cltd
roll
pop
icebp
xor
arpl
into
xchg
xor
mov
pop
cld
jno
push
mov
add
or
outsb
cltd
adc
and
stc
shl
int3
ljmp
and
adc
push
cld
cmpsb
stos
mov
xchg
xchg
or
cmp
pop
stc
sbb
imul
sbb
aas
jbe
jg
clc
lret
dec
dec
and
sub
movsb
or
adc
je
call
jb
jno
out
insl
push
xchg
inc
cmp
aas
jmp
lock
sbb
int
mov
lods
cmc
mov
cmp
mov
cltd
cmpsl
test
mov
popf
mov
mov
in
adc
push
sbb
test
xchg
test
sub
inc
xchg
mov
ss
pop
call
cmp
aas
call
jmp
lock
adc
pop
xor
push
lock
out
mov
pop
inc
loope
es
xor
call
cltd
lea
addl
add
and
popf
push
xchg
mov
imulb
subb
in
mov
jns
jmp
inc
xor
pop
jg
fdivrl
and
sub
mov
dec
pop
andb
pop
pushf
push
stc
jne
enter
in
out
shlb
inc
or
xor
aad
sbb
fdivl
imul
rcll
jo
fldcw
pop
or
cwtl
pop
pand
sub
and
xor
loopne
xor
pushf
adc
mov
fcompl
cmp
jo
mov
cmp
stos
xchg
std
dec
xchg
mov
xchg
inc
jmp
cmp
adc
mov
dec
fwait
jne
scas
cwtl
pop
insl
shl
bound
cltd
rclb
or
loopne
mov
aas
jb
sti
push
mov
in
loop
xor
scas
mov
mov
addl
mov
out
cmp
mov
adc
xor
and
scas
ljmp
cwtl
push
ja
or
dec
lock
add
cmpsb
iret
insl
aad
in
into
push
repnz
ljmp
cmp
pop
and
or
xchg
or
xor
cli
aaa
or
sub
cltd
fiadds
xor
psraw
sbb
fnsave
repz
push
cs
or
xor
sub
sub
pusha
dec
xchg
inc
pop
dec
or
and
ret
lea
inc
mov
movsl
jnp
arpl
scas
cmp
mov
movsl
xchg
mov
mov
fcmovnbe
movsb
lds
mov
adc
jns
inc
cwtl
ljmp
add
lods
test
pop
subb
xchg
in
hlt
add
mov
pop
imul
sbb
inc
lds
cmp
inc
loop
shlb
jge
mov
jp
and
push
pop
loopne
mov
test
lret
fiadds
jae
mov
test
gs
push
mov
fwait
mov
fsubrs
mov
add
cmp
cli
in
gs
out
pop
adc
int3
ljmp
inc
clc
imul
aam
xor
xchg
push
aad
push
xor
push
sub
out
in
mov
aaa
notl
xchg
pushf
jns
test
xor
ficoms
and
mov
xor
mov
leave
lea
cld
cltd
bound
mov
jmp
pop
xor
or
sbb
cmp
loope
xchg
jg
xor
divb
push
jbe
sub
idivb
mov
es
adc
pop
cmp
pushf
mov
sub
cltd
and
push
in
rcrb
cld
sbb
inc
lcall
arpl
inc
mov
cltd
jae
adc
push
fidivrl
dec
lret
and
jp
mov
insb
push
pusha
add
pop
fisubrl
out
sub
movsl
xchg
dec
inc
mov
jbe
repz
xchg
xor
pop
push
sub
xor
cs
cli
rcll
push
popf
daa
sbb
mov
cmp
xor
push
sub
add
nop
gs
lcall
or
imul
das
sbb
xchg
lret
sbb
mov
jo
or
call
mov
imul
int
ficoml
call
imul
xchg
pop
mov
lret
out
js
mov
adc
outsb
ds
and
addr16
jbe
outsb
out
imul
mov
push
pop
and
dec
mov
in
rol
xor
sbb
fistpll
mov
fs
or
rcrb
aas
dec
fs
std
pusha
or
mov
ret
lret
neg
inc
or
pop
add
mov
mov
cmp
cmp
inc
mov
push
jns
cwtl
jno
adc
or
cmp
jle
push
out
popl
sub
sbb
lock
xchg
imul
arpl
inc
or
mov
cmp
repnz
xor
xor
lret
xchg
rcl
and
repz
jne
jne
inc
jp
jnp
in
jae
push
mov
ret
sbb
sub
jbe
out
ljmp
fdivrl
lret
iret
imull
jp
fcomps
xlat
sbbb
mov
lods
enter
into
cmp
fs
cli
inc
bnd
mov
mov
adc
je
xor
test
lret
cmp
add
aad
push
inc
daa
mov
stc
and
aam
or
addr16
and
and
cmpsb
xor
and
dec
inc
pop
adc
sub
stc
repnz
mov
insl
pop
aas
sarb
repnz
adc
in
pop
popf
bound
lea
mov
ret
push
push
aad
into
movsl
shr
cmp
ss
xor
imul
out
inc
movsb
push
clc
je
aaa
lret
push
jg
fucomi
test
and
mov
sarb
jp
push
ss
stc
or
pushl
sbb
sbb
lock
sbb
les
popf
loopne
sbb
and
pusha
and
loopne
iret
and
xchg
stos
mov
adc
push
lods
repnz
in
cwtl
add
push
outsl
ja
sbb
lahf
fistpl
push
das
mov
jl
mov
dec
insl
mov
repz
dec
lret
mov
pop
imul
js
inc
ja
xchg
pusha
test
ja
fcoms
out
add
jge
jnp
mov
cmp
cmc
aam
icebp
xchg
jecxz
mov
popf
sbb
into
es
adc
outsl
add
xor
sbb
daa
js
mov
cwtl
adc
xchg
mov
cld
mov
js
lahf
xchg
bound
aam
stos
mov
sbb
sbbl
in
pop
repz
outsl
adc
in
call
xor
out
test
loope
inc
jecxz
mov
sbbl
mov
push
out
pop
pushf
hlt
lret
mov
aad
fsubs
pop
cmp
push
adc
ss
push
jmp
dec
jecxz
clc
xor
pop
xor
imul
lock
adc
push
cli
push
sbb
jp
dec
inc
jge
fisubl
or
orb
xchg
out
sti
push
jne
addr16
push
adc
loope
cmp
add
punpckhbw
jg
pushf
int3
pop
lret
nop
cmpsb
jmp
jl,pn
cli
outsb
pop
sub
insl
jg
test
stos
xor
in
push
pop
jge
fimull
popa
pop
cmpsb
cmp
in
and
adc
jbe
push
or
adc
add
std
ja,pn
jmp
mov
rcrb
ds
sbb
pushw
out
jns
test
int3
pop
sub
lahf
pop
out
dec
xor
enter
push
or
pushf
xchg
pushf
stos
jns
and
sub
addl
adc
pop
jle
push
sub
inc
jno
bound
fmul
push
gs
stc
pop
sti
jns
bound
push
pushf
lcall
js
mov
pop
scas
lcall
sarl
cwtl
mov
sahf
js
lock
xchg
jno
push
mov
cli
dec
xchg
or
inc
mov
cmpsl
inc
hlt
sbb
or
and
hlt
inc
es
pop
or
leave
sti
fisubrs
push
fnstcw
pop
jg
arpl
mov
mov
dec
lret
rclb
mov
sbb
sub
dec
ret
cmp
rcll
xor
ss
jns
imul
enter
and
sub
bound
jp
xor
sub
or
adc
adc
mov
cmc
jns
lret
test
mov
push
or
cwtl
mov
xor
jnp
in
xchg
lock
inc
test
sub
outsl
leave
or
inc
rcrb
rorl
inc
in
stos
mov
aaa
stos
dec
ja
xor
or
mov
lret
shl
xor
jmp
sub
jp
bound
push
xor
fbld
sbb
dec
orb
das
jno
pop
js
pop
mov
pop
push
bound
aas
out
in
sbb
xchg
mov
call
mov
cmpsl
es
sub
ss
mov
cmc
imul
xchg
push
insl
fmuls
inc
test
cli
lock
push
xchg
arpl
ss
les
jg
adc
stc
decl
loope
mov
scas
xchg
sbb
daa
inc
mov
push
outsl
sub
cwtl
xchg
mov
xchg
or
push
pop
add
push
mov
into
mov
xor
push
and
cmc
pop
divl
push
je
rorl
loope
push
pop
cmp
pop
lcall
xchg
lea
pop
sbb
mov
push
dec
jge
movsl
into
cwtl
loopne
mov
jl
inc
cmp
insb
inc
test
in
jmp
mov
jb
xlat
orb
xchg
xor
inc
and
add
pop
jo
mov
je
jbe
mov
adc
bound
mov
jle
movsb
inc
or
xchg
movsb
push
f2xm1
push
inc
add
or
scas
or
jle
or
rol
mov
and
mov
push
out
jbe
mov
mov
hlt
nop
mov
in
cwtl
jno
leave
dec
xchg
rorl
into
jns
ljmp
mov
sub
test
jmp
jne
adc
mov
mov
mov
adc
stos
inc
or
ffree
and
pop
cmp
std
mov
xchg
shll
scas
mov
sbb
subl
inc
in
dec
mov
mov
push
mov
mov
popa
mov
dec
aas
mov
shr
mov
bound
cmp
les
cmpsb
adc
icebp
jno
pop
inc
jno
push
fucomp
cltd
insb
in
inc
pop
xchg
mov
push
icebp
push
xchg
inc
test
push
out
pop
xor
xchg
cmp
mov
lahf
xrelease
in
fs
jecxz
mov
dec
fcmovnb
arpl
aad
push
movaps
xchg
test
xchg
inc
mov
cmc
inc
in
cmp
add
fdivp
or
pusha
sbb
subb
repz
adc
push
inc
jle
lret
fs
adc
push
outsb
in
test
mov
cmp
dec
dec
cli
in
adc
hlt
ljmp
shrl
sbb
adc
rorb
test
mov
dec
jecxz
out
dec
dec
popf
dec
sub
inc
call
les
shrl
stos
sub
mov
adc
andb
sbb
in
ljmp
mov
es
xchg
stos
test
fwait
lcall
inc
movsb
mov
sbb
leave
repz
sub
xchg
push
sbb
das
out
add
in
add
push
fcoml
adc
or
add
xchg
cmp
xchg
push
xchg
inc
repz
fwait
scas
daa
loopne
lret
cmp
cmp
mov
pusha
cwtl
ss
stc
xchg
and
xchg
and
sarb
mov
dec
pusha
mov
xchg
inc
out
or
pop
dec
add
sub
push
fbld
or
repz
mov
or
mov
jp
inc
add
ficoms
ljmp
adc
sbb
push
cmpl
push
nop
mov
aad
es
lret
and
inc
in
pusha
data16
jae
inc
lcall
cmp
test
pushf
cmp
jae
in
adc
mov
cmpsl
and
push
daa
insb
shrd
sahf
pop
dec
inc
test
pop
push
add
push
inc
fcompl
and
xchg
sbb
insb
xchg
aad
std
pushf
sub
test
dec
outsb
pop
ret
daa
adc
std
fidivrl
and
xor
adc
subl
dec
mov
in
jg
adc
push
sti
dec
jno
or
js
int3
inc
xchg
aaa
jne
xor
xor
aaa
inc
ds
out
pop
add
mov
jg
in
jns
hlt
pop
ljmp
sbb
stc
mov
cmp
mov
imul
addl
test
sub
lahf
out
in
pop
jo
lahf
das
mov
scas
cmp
jecxz
lcall
add
mov
mov
dec
cs
je
add
sahf
inc
push
dec
xlat
out
inc
jmp
test
cmpl
shrb
in
pushf
xchg
js
xor
das
push
adc
mov
das
cmpsl
dec
xchg
stos
std
ss
lods
push
dec
pop
inc
jp
xchg
jns
mov
mov
daa
fmulp
push
incl
jae
mov
adc
mov
xchg
fdivs
mov
mov
or
arpl
sub
dec
sub
pop
pop
test
jns
outsl
cmp
push
fs
mov
or
aad
call
cmp
dec
stc
fld
iret
in
dec
pop
div
xchg
ljmp
das
inc
pop
iret
cmc
pushf
test
arpl
fxch
pop
jae
push
or
pop
add
sbb
repnz
sti
pushl
inc
dec
lods
rcrl
test
sahf
and
mov
mov
scas
sti
loope
out
sub
xor
sti
sbb
jge
jnp
mov
sub
movsl
xorl
insl
ja
lcall
cmc
pop
lock
sub
xor
pop
popa
mov
mov
mov
repnz
push
mov
adc
inc
xor
pushf
aad
push
stos
cmp
sub
dec
js
aad
ficompl
bound
mov
mov
bound
loop
push
xchg
fstl
popa
cmpsl
cmp
sub
pop
or
cld
adc
push
in
iret
cmpsb
in
inc
ljmp
clc
mov
imul
sub
mov
jne
add
mov
pop
popa
or
cmp
inc
ucomiss
test
adc
lret
xchg
cmp
mov
aam
sub
pop
adcb
sbb
push
daa
mov
inc
clc
int
inc
rcr
es
je
aaa
das
cltd
dec
inc
pop
jle
in
les
in
inc
dec
push
xor
out
inc
insl
int
mov
addb
push
cmpsb
and
dec
out
add
mov
xchg
cmp
mov
xorl
sahf
ss
inc
push
and
xchg
loope
outsb
sub
jne
int3
in
push
mov
popa
inc
pop
fiadds
mov
stos
cmc
xchg
mov
pop
xor
out
cltd
pushf
push
inc
push
das
not
fs
sub
mov
aam
fsub
imul
mov
push
cmpsl
into
lds
mov
fxch
das
and
mov
cmpsl
fwait
popf
hlt
cli
fwait
mov
push
rorl
mov
and
in
iret
aad
sub
sbbb
pop
inc
and
test
and
mov
xchg
mov
dec
jp
pusha
fisttpl
std
adc
sbb
inc
sub
mov
popa
mov
sarb
mov
dec
or
nop
jbe
data16
mov
mov
dec
jo
aaa
xchg
mov
data16
or
cltd
cmpl
or
shl
pop
cmp
push
cmp
pop
mov
mov
jae
icebp
jg
loope
das
mov
xor
aaa
movsb
icebp
and
push
jmp
xchg
nop
loop
movsl
cmpsl
hlt
pop
inc
mov
fisubrs
lods
jecxz
je
inc
ljmp
scas
cmp
lock
or
mov
inc
dec
and
jns
jmp
push
pop
and
lret
mov
outsl
mov
push
xchg
lcall
sbb
cmp
xchg
xchg
imul
mov
popa
or
mov
ds
sbb
or
xor
dec
inc
rorb
cwtl
add
imul
pop
dec
mov
sub
ja
mov
mov
repnz
add
cmp
test
dec
mov
mov
jmp
imul
push
cmpsb
mov
cmp
div
pop
cmp
cmp
mov
mov
addr16
lret
or
fwait
dec
stos
adc
and
jle
pop
adc
mov
leave
cmpsl
mov
jmp
sub
repnz
add
mov
mov
sub
inc
mov
int3
xor
mov
mov
sbb
fldenv
test
mov
test
nop
jmp
loop
in
and
clc
xor
sub
dec
cmp
dec
and
dec
cmp
pop
jno
loope
adc
ret
clc
mov
and
push
xorl
pop
adc
in
lds
xchg
jb
div
ror
int3
lea
sub
or
adc
hlt
pop
jne
adc
cmp
scas
mov
adc
test
lock
stos
fwait
daa
push
jge
int3
imul
out
ret
in
pop
lcall
add
cmp
xor
push
push
xchg
out
cmc
xchg
mov
mov
ds
add
aaa
jmp
inc
idivb
xor
je
movl
roll
jbe
sbb
stos
inc
arpl
push
mov
js
push
test
shlb
outsb
daa
mov
xchg
testb
fsubrl
js
mov
xor
mov
notb
push
insl
mov
movsl
aam
leave
orl
rorl
in
or
notl
lcall
lods
mov
xor
mov
inc
test
xchg
push
and
add
je
and
pop
lcall
adcb
lock
adcl
js
aad
lcall
into
jnp
cli
jb
adc
cmp
push
mov
mov
adc
cwtl
or
mov
loope
test
fiaddl
out
push
add
aas
mov
movsb
movsb
out
cmpsb
leave
stos
push
or
and
scas
sub
pop
adc
xor
inc
jg
pop
push
in
sahf
sub
test
mov
test
pop
push
cmc
test
aam
dec
div
dec
mov
inc
fimuls
scas
cmc
adc
call
adc
ljmp
imul
lret
mov
mov
xor
ret
shlb
pop
shll
in
jne
lret
ss
out
push
lret
ja
loopne
push
imul
push
cmp
popa
jp
je
and
mov
repz
outsl
aad
inc
add
sti
icebp
mov
mov
in
mov
idivl
cwtl
push
mov
outsl
push
mov
pop
int3
cwtl
sub
test
or
sbb
pusha
push
aas
adc
sub
sahf
imul
mov
push
sub
jge
pop
fcmovnu
sub
mov
jp
push
lock
and
inc
pop
xchg
sub
loope
stc
jecxz
xchg
fldcw
sbb
fdivs
imul
in
test
es
mov
sarl
pushf
fcomp
ja
dec
cmp
lret
out
pop
ret
fildll
cmpsb
jecxz
cmc
mov
mov
and
mov
push
ret
add
movsl
push
cltd
add
stc
add
mov
mov
adc
lahf
cmpsb
vcvtsd2si
xchg
mov
add
icebp
bound
fimull
add
mov
push
and
jl
leave
pop
sqrtps
cwtl
mov
das
pop
js
and
dec
add
aas
shrl
loopne
inc
or
into
jno
ljmp
out
lods
cmp
aam
loop
test
add
in
mov
lahf
pcmpeqd
jl
ret
push
push
lea
scas
cmp
je
das
cmp
push
lods
and
iret
mulb
mov
inc
jmp
sbb
mov
and
in
out
ljmp
xchg
fadd
sbb
mov
or
scas
mov
pop
xchg
lods
sub
jno
mov
repz
mov
inc
ss
imulb
add
in
ss
movsb
mov
mov
inc
out
add
pusha
lret
outsl
gs
adc
adc
pop
inc
popa
xchg
or
addr16
pop
jne
sub
fdivr
icebp
test
push
xchg
mov
push
fdivrl
sub
clc
popf
sbb
cmp
cmp
mov
sbb
and
pushf
roll
ljmp
fwait
xor
adc
ds
in
fiadds
inc
sahf
fistl
leave
push
cmp
jae
sbb
mov
adc
adc
jo
ja
add
push
cmp
js
es
sbb
cmc
push
mov
and
pop
fwait
leave
dec
in
adc
xchg
cmp
push
fwait
js
mov
cwtl
xor
cltd
adc
mov
pop
outsb
call
mov
aaa
push
inc
gs
push
mov
and
mov
sbb
hlt
fistpl
fcoml
add
loope
mov
leave
imul
fsubs
push
fwait
sbb
xor
insb
mov
jns
or
adc
adc
or
or
cmpsb
add
adc
mov
inc
xchg
push
sbb
stos
roll
pop
ljmp
hlt
lret
and
insl
cmpsl
cmp
pop
out
xor
mov
test
mov
jmp
stos
and
sti
cmpsb
jb
mov
mov
inc
cli
fwait
cmpsl
xchg
int3
imul
sbb
adc
inc
out
inc
stc
jmp
cmp
out
outsl
sbbb
jg
in
arpl
or
inc
xchg
mov
pop
or
cli
lahf
pop
xchg
jmp
imul
fld1
xchg
xchg
nop
sub
fistpll
cwtl
push
cli
sahf
adc
rorl
scas
mov
std
lahf
scas
aaa
ret
mov
cltd
mov
jb
stos
push
jns
add
xchg
in
aad
xchg
sahf
push
in
add
xchg
sub
in
mov
adc
out
xlat
ret
cmp
pop
fdivrs
gs
scas
jg
in
xchg
inc
adc
jb
enter
push
cmpsb
pop
mov
imul
daa
imul
xchg
inc
jo
mov
xchg
insl
js
pop
out
mov
jge
jnp
pop
lcall
dec
es
loop
dec
mov
add
inc
mov
mov
dec
or
push
add
and
mov
xor
aas
cmp
cmc
xchg
bound
mov
mov
inc
xchg
repz
and
pop
and
or
or
push
push
mov
sub
inc
stc
mov
mov
fisubl
mov
mov
cmp
inc
add
outsb
lahf
add
movb
stc
stos
out
dec
jo
iret
stos
xorl
push
loope
mov
sbb
pop
lods
call
adc
cmp
out
xchg
xor
das
push
std
push
out
loop
cmpl
aad
xchg
sahf
mov
mov
push
loopne
test
cli
jns
jl
sbb
ja
cmc
ljmp
stos
loopne
pop
push
cmp
and
jae
dec
in
inc
jo
subl
cmp
cli
dec
scas
xor
mov
push
xor
les
int3
shlb
shlb
mov
mov
std
xchg
sub
cmp
mov
mov
xor
push
sbb
jg
movsl
std
stos
mov
xchg
adc
les
in
repnz
inc
daa
repz
outsl
mov
inc
jns
add
dec
mov
cmp
sbb
cmpl
pop
jecxz
mov
push
cmc
xchg
pop
sub
xor
ja
subb
or
push
xchg
movsb
mov
jl
push
pusha
lret
cs
mov
inc
ja
mov
cwtl
in
les
push
in
arpl
xlat
xor
cwtl
out
mov
mov
pop
cmp
call
outsl
and
rclb
jo
push
fwait
push
pavgw
inc
dec
and
test
ljmp
push
shlb
jp
push
sbb
mov
f2xm1
push
xchg
xchg
lahf
fdivl
inc
sbb
stc
mov
sbb
lods
pop
mov
xor
in
mov
cmpb
cld
int3
pop
rolb
or
fs
cmp
popa
xlat
out
adc
add
add
pop
dec
daa
cmp
or
mov
mov
enter
stos
not
loope
das
xor
imul
push
and
xchg
add
jg
sub
mov
daa
int
add
mov
mov
adc
sub
aas
sub
cwtl
stos
rclb
jecxz
icebp
imul
jne
sub
mov
ret
aam
adc
push
mov
test
testl
xor
mov
push
addb
imul
and
mov
scas
mov
add
jbe
push
test
ja
lods
out
sbbl
in
pushf
pop
movsl
xchg
inc
sti
sbb
sbb
mov
xchg
test
xchg
or
mov
dec
mov
jle
cltd
test
push
push
push
test
addb
cmp
loope
mov
mov
es
sbb
mov
mov
add
adc
je
jns
jmp
push
pop
mov
imul
jp
outsl
call
pop
inc
int3
bound
push
or
dec
icebp
shl
outsb
add
aam
mov
mov
ds
mov
push
rol
nop
adcb
sub
xchg
lret
sbb
pushf
add
bound
jmp
add
xor
or
xchg
and
fstpt
dec
inc
iret
ret
into
cs
inc
cld
push
jns
rcr
out
mov
hlt
adc
mov
mov
pop
cs
and
mov
mov
stos
pop
daa
adc
test
push
nop
mov
sub
mov
mov
lock
jb
mov
adc
jecxz
lret
loope
js
hlt
xor
testb
dec
sahf
lret
xchg
je
js
push
jo
out
leave
pop
cmp
push
inc
push
enter
add
mov
xchg
lock
pop
mov
xchg
jle,pn
sub
xor
js
push
xchg
or
lock
sub
in
ja
inc
fiadds
push
sbb
call
dec
int3
fwait
add
push
in
push
pop
in
js
clc
mov
out
ficompl
pop
fildl
je
ds
push
inc
mov
or
add
roll
in
das
sti
jl
shll
xchg
xchg
js
mov
es
in
loopne
add
mov
inc
xor
adc
ret
dec
pop
mov
mov
fists
outsl
pop
sbb
fcomps
movsl
xor
shl
andl
mov
lcall
pop
mov
ljmp
sbb
fmul
shlb
xor
jmp
test
fsubl
add
sbb
js
ret
or
enter
dec
cmp
inc
pusha
shlb
inc
repz
pop
jb
out
xor
dec
mov
ja,pt
push
add
jg
add
push
std
or
inc
std
insl
push
aad
movsl
icebp
xchg
cmp
int
test
or
jno
test
sbb
add
aad
push
add
inc
and
mov
jmp
or
or
xchg
or
mov
sti
sub
rolb
outsb
inc
adc
aam
mov
or
mov
pcmpeqw
aaa
dec
xchg
int3
adc
cmp
add
adc
repz
jno
jmp
push
lret
xchg
adc
cmp
imul
mov
and
mov
outsl
leave
pop
dec
ss
out
cld
add
or
scas
xchg
push
push
push
dec
lock
add
adc
pop
jmp
sub
pop
push
and
or
push
or
outsb
les
dec
rorl
cmp
rorb
cmp
mov
xorb
mov
sarb
xchg
xchg
ljmp
cmpsl
pop
dec
iret
inc
scas
fstpt
js
push
in
movsl
movsb
iret
jge
inc
pusha
ljmp
pushl
stos
vpshufhw
jp
xchg
cli
movsl
mov
daa
cmp
or
ret
cmpsl
repnz
cmp
mov
push
jns
mov
fidivl
push
je
out
je
xchg
push
mov
dec
dec
dec
mov
and
mov
and
push
pop
cmp
data16
xchg
xor
decl
das
xchg
and
adcl
xor
cwtl
cmpsb
ja
icebp
popa
in
xor
mov
xchg
xchg
pop
in
das
mov
push
shlb
cmp
fcoml
mov
pop
fidivl
out
and
mov
jo
les
les
lock
fs
nop
imul
in
inc
popf
inc
cs
cmp
pushl
rorb
push
in
mov
lods
ffreep
fisubrs
es
mov
dec
jecxz
imul
add
test
dec
pop
push
jne
dec
sahf
sbb
mov
arpl
int
or
mov
call
bound
loopne
pop
addr16
je
push
xchg
addr16
lds
xchg
cld
pop
nop
cwtl
mov
cld
mov
subb
mov
loopne
push
cmp
hlt
lods
cld
xchg
test
out
adc
xchg
fstpt
xlat
push
xchg
loopne
push
shr
fsubrs
xor
imull
pop
xor
pusha
filds
inc
int3
xchg
mov
ljmp
add
les
push
rorl
mov
and
stc
xchg
mov
into
hlt
mov
in
mov
cwtl
data16
out
out
call
jge
lret
sahf
lods
int
add
adc
pusha
push
popa
jecxz
test
inc
fldcw
insb
arpl
sub
push
lret
sbb
filds
inc
or
jnp
std
dec
jg
inc
pusha
jb
aaa
add
scas
push
push
sub
sub
pusha
ljmp
xbegin
aad
mov
test
das
xorl
pop
sbb
in
push
pusha
mov
sti
outsb
mov
mov
lods
mov
cmp
and
mov
imull
mov
sarb
lock
mov
clc
dec
push
inc
mov
mov
add
dec
xor
jle
sub
leave
cs
mov
cmp
cs
movsl
popf
sbbb
jp
out
imul
ljmp
inc
sub
in
iret
sub
jbe
ja
sbb
loopne
in
lods
fwait
dec
push
and
adc
push
mov
es
mov
xor
addr16
addb
cmpsb
fmul
push
aaa
dec
xchg
lock
add
xchg
mov
jecxz
ljmp
inc
pop
movsb
in
pop
rcl
test
hlt
test
mov
ret
pop
sahf
in
mov
or
or
add
leave
dec
xchg
ss
movsl
inc
pop
mov
negl
push
int3
mov
movsl
push
test
lea
sub
sbb
jne
jl
inc
inc
and
push
fdiv
ret
loope
std
aam
sub
push
fldl
fldpi
ss
add
xchg
mov
xchg
or
sub
mov
mov
test
inc
int3
loop
adcl
jl
in
mov
jp
and
mov
push
bound
sbb
fistps
je
cli
inc
add
stos
pop
pop
aam
add
outsl
cmc
xchg
mov
sbb
in
jae
xor
test
lods
push
and
insl
push
or
mov
xchg
mov
jl
pop
ljmp
insb
mov
in
sbb
jno
mov
sbb
sahf
bound
mov
fiaddl
je
out
mov
mov
mov
inc
xor
ss
mov
test
push
mov
push
jb
andb
and
imulb
add
ja
dec
pop
mov
arpl
lea
fwait
mov
pop
lock
stos
xchg
jnp
clc
mov
lds
add
mov
idiv
fwait
mov
fstps
nop
insb
cmp
pop
mov
sub
mov
int
pop
sbb
xchg
int3
stc
mov
test
ret
and
mov
dec
insb
js
and
jae
cmc
or
inc
push
mov
push
lcall
pop
push
mov
aam
ss
stos
cmc
and
in
cmp
pop
push
mov
cmpsb
add
inc
jecxz
scas
mov
addr16
out
ficoms
lock
sti
fiaddl
icebp
shlb
clc
xchg
pop
cmpb
fldcw
in
test
arpl
push
jl
repnz
xchg
add
jnp
popf
shrb
aad
mov
iret
repz
loopne
mov
fcmovb
mov
or
sub
imulb
insl
loopne
mov
xchg
adc
stc
and
cmp
lcall
int
fsubrp
cli
mov
xchg
inc
lcall
movsb
fcoml
loop
pop
mov
insl
jmp
dec
xchg
xchg
cmc
sub
or
and
pop
jns
out
mov
adc
xor
fs
mov
popf
js
xor
scas
sbb
imul
mov
and
out
pop
pop
pop
xchg
repz
nop
popf
imul
leave
jnp
mov
jg
sahf
cmc
mov
dec
cltd
repnz
mulps
test
enter
mov
into
incl
in
mov
cmp
fmuls
cltd
add
je
fstps
mov
lds
jb
arpl
adc
bound
adc
fcoms
sub
inc
mov
or
in
sbb
les
je
shl
mov
pop
xchg
cli
pop
cmp
fs
sub
sbb
mov
bswap
iret
sub
xor
inc
pop
push
sarl
loope
mov
fwait
sbb
pop
in
push
testl
cmc
adc
mov
sub
adc
cmpsb
xchg
div
out
mov
ljmp
int3
inc
clc
pop
add
fisttpl
repz
jo
loope
push
pop
inc
pop
add
cmc
scas
mov
xchg
xchg
in
dec
dec
xor
test
lcall
js
sbb
rorl
enter
sub
inc
sub
das
movsb
cmp
jp
xor
stc
jae
adc
ret
cmp
shr
jle
dec
pop
jbe
jnp
dec
lahf
sub
stc
xor
sub
shll
dec
les
fs
dec
fildl
outsb
nop
in
and
or
int
arpl
es
sbb
mov
adc
or
sbb
adc
jnp
out
sbb
jb
fwait
xor
add
fidivrl
leave
fnsave
sbb
inc
jp
ds
je
jl
fldl
jg
xor
or
jo
sbb
xchg
push
aam
in
test
fldl
xchg
arpl
xchg
pop
add
test
fstpt
pop
imul
call
mov
aam
lock
data16
xchg
repz
insb
lock
in
xchg
xchg
aad
mov
je
in
cmpsb
and
rorb
rorb
push
sarl
cmp
mov
out
shlb
mov
imul
sbb
outsb
jnp
aaa
sbb
loop
or
fmulp
xchg
adc
mov
adc
out
aas
int
aam
out
jb
pushf
or
jne
fsubrl
pop
mov
cmp
rcll
xchg
mov
sub
cltd
jmp
negl
fstps
jmp
pop
mov
xchg
mov
xor
push
je
in
or
sub
or
inc
mov
int
mov
pushf
ret
aas
jge
stos
mov
popf
ja
add
lock
fstps
push
sahf
les
out
mov
test
scas
iret
loope
sti
and
repz
fidivrs
mov
aas
sbb
inc
out
jno
xor
mov
mov
pop
add
sub
dec
and
sahf
add
jno
into
and
jo
fstp
or
jo
dec
adc
xor
je
sub
cmp
and
adc
shlb
sbb
pushw
push
ljmp
pop
addr16
fiadds
sbbl
into
mov
clc
xchg
iret
std
scas
xor
stos
stos
and
xor
js
cmpsb
lahf
pop
repnz
andb
test
out
test
movsb
dec
and
adc
mov
inc
pop
mov
das
mov
lret
arpl
jecxz
jno
icebp
and
xor
and
or
repz
sti
popa
push
add
std
int3
xor
into
decl
fsub
inc
add
in
les
pushf
adc
das
jae
pop
ret
sub
stos
xchg
push
mov
mov
addr16
fwait
mov
je,pt
loop
push
out
pop
lret
fwait
add
sbb
mov
xchg
dec
sub
jae
sbb
push
in
inc
pop
pop
mov
mov
data16
data16
and
mull
add
test
setl
sub
ja
popa
pop
in
nop
fidivl
dec
inc
sub
imul
mov
adc
lods
dec
cmp
addr16
mov
gs
fcompl
lods
jle
test
scas
inc
xor
notb
divl
mov
movsl
xor
pop
fs
cmpl
jl
sti
pop
outsb
shrl
adc
ret
adc
aad
nop
jbe
sub
cmp
int3
divb
mov
sbb
jmp
push
hlt
and
mulb
enter
pop
ret
cmpl
sahf
les
push
add
lret
fs
mov
pop
sbb
xchg
loope
jns
push
push
sub
xor
pop
out
call
pushf
cmpb
cmp
dec
sub
push
jae
dec
out
push
clc
fwait
push
test
enter
inc
ljmp
adc
daa
addr16
test
mov
repz
inc
adc
stos
pop
sbb
sarl
out
int3
cmp
iret
jns
cmpsb
jg
jnp
lods
dec
les
popa
cs
and
or
cmc
jae
icebp
mov
lret
stc
xor
je
pop
adc
pop
inc
dec
ret
add
je
shlb
mov
repnz
push
mov
les
push
call
roll
cmpsb
xor
dec
inc
add
sbbl
cld
push
xor
inc
jno
sbb
mov
lods
insb
loopne
adc
push
or
add
xor
jmp
rcll
filds
lock
mov
insb
int
jns
sub
inc
push
repnz
mov
cmp
mov
repnz
push
dec
mov
cs
mov
shr
arpl
iret
adc
and
sbb
mov
sbb
mov
jns
clc
fsub
mov
test
lods
loopne
mov
add
daa
sbb
inc
sub
add
pop
add
and
popa
das
ret
int3
outsl
andb
adc
scas
ds
or
repz
jle
lcall
xchg
ret
and
es
mov
pushf
movsl
adc
push
cmp
lods
push
test
inc
push
sbb
mov
das
std
inc
or
and
pushf
mov
mov
xchg
mov
jmp
adc
sbbb
cs
inc
loope
les
pop
mov
and
mov
inc
push
dec
sbb
dec
dec
out
mov
jmp
lea
mov
je
mov
push
inc
out
xchg
mov
cmp
repnz
ret
or
pop
mov
jbe
inc
pushf
outsl
or
into
inc
iret
shr
and
push
loop
mov
aaa
les
or
or
sbb
scas
popf
mov
add
push
addr16
jb
xor
hlt
or
push
leave
lret
push
pop
and
sarb
ret
cmp
roll
sbb
inc
rorl
cmp
xor
mov
inc
mov
push
push
ja
lds
out
mov
jae
mov
lock
inc
pusha
add
imul
in
or
or
and
mov
jns
pop
repnz
xor
rol
add
mov
scas
repnz
adc
adc
add
add
shrl
mov
mov
mov
xchg
mov
clc
pusha
stos
hlt
push
jbe
xlat
lret
addb
pop
xchg
adc
loopne
movsl
cmc
mov
and
aad
fadd
and
jl
aas
adc
or
jmp
sub
lds
mov
xchg
adc
test
push
inc
push
pop
clc
pusha
jl
rcll
mov
xchg
inc
sub
in
xor
dec
or
in
dec
in
cmp
movsb
pop
cmpsb
jecxz
mov
data16
into
cmp
mov
cmp
xchg
push
jle
inc
mov
push
std
pop
dec
inc
mov
enter
rorb
test
shr
fists
mov
arpl
bound
dec
pop
inc
mov
fstl
sbb
dec
pop
push
fildl
mov
dec
jno
jl
sub
xchg
out
adc
ljmp
cmp
add
jnp
jbe
imul
fildll
clc
lahf
jl
push
imul
xchg
ret
add
xchg
inc
adcl
inc
test
cli
ss
sarb
mov
sbb
inc
inc
sbb
fbstp
add
push
das
and
inc
icebp
and
dec
test
cmp
adc
ja
movl
add
fstpl
sbb
cmp
insl
mov
stc
add
js
dec
xchg
mov
popf
insl
rcrb
mov
inc
push
mov
in
insb
cltd
mov
shlb
inc
repnz
pop
andb
hlt
xchg
rorb
sti
inc
lcall
std
adc
lret
xchg
dec
mov
enter
mov
lcall
scas
mov
or
adc
insb
mov
loop
mov
pop
xor
lods
sbb
test
ret
shl
enter
cmp
mov
fidivrs
mov
mov
popa
rcrl
and
repnz
sahf
mov
mov
push
stos
cmpsl
pop
arpl
cmp
inc
xchg
jle
sub
js
das
sbb
sbb
ljmp
mov
fildl
or
cmp
lret
fnsave
jno
jl
mov
out
movsb
sar
sub
lea
sti
out
jae
loopne
shl
repnz
jge
iret
jecxz
lcall
loopne
mov
gs
lahf
out
mov
add
push
sbb
into
mov
arpl
mov
fidivs
jp
lods
xchg
clc
mov
ror
loopne
shlb
dec
frstor
mov
lock
bound
inc
sahf
jecxz
jp
ret
aaa
test
push
jecxz
out
pop
or
aas
std
push
ret
ret
inc
dec
xlat
inc
loope
testl
lea
outsb
mov
fidivs
jne
repz
rorb
or
pusha
cvtdq2ps
stos
iret
popf
out
aad
cmp
orb
mov
add
inc
rolb
loopne
xchg
push
or
or
and
jnp
cmpb
fmuls
ja
jl
insb
mov
lahf
ret
add
shl
mov
lds
insb
sub
pop
cld
lock
mov
stos
lods
call
hlt
lds
stos
jae
dec
ret
int3
xor
pop
sub
add
adc
xchg
inc
aam
wrmsr
mov
mov
rcrl
xchg
hlt
ja
scas
jl
fidivrs
xchg
jle
jg
add
mov
mov
and
insl
pushf
adc
int3
je
adc
pop
pop
dec
push
mov
adc
mov
pop
fsubrs
xchg
insb
cwtl
inc
adc
push
xor
cmpl
jmp
rcll
scas
das
ret
aam
push
or
mov
add
mov
call
dec
aam
ds
and
outsl
or
cmp
sti
pop
lahf
pop
mov
test
lcall
mov
repnz
mov
mov
adc
lds
mov
sub
mov
cmp
pop
dec
adc
sub
int
clc
inc
enter
rcll
aad
xchg
mov
fbld
out
push
xor
sbb
inc
dec
ds
inc
inc
xacquire
loopne
sbb
sub
lret
shrb
pop
incb
sbb
std
jle
bound
mov
movsl
xor
out
stos
movsb
adcl
cmc
rcl
out
inc
cmc
cltd
and
stos
test
inc
sbb
leave
and
imul
sub
xchg
xor
aam
lret
mov
xchg
in
hlt
or
sbb
push
xchg
cltd
outsl
cmp
out
mov
stos
rep
add
fdivl
mov
adc
add
das
imul
xor
inc
mov
mov
jp
adc
pop
cmp
push
push
jp
cld
jo
cmc
popa
ret
fs
lods
ret
jmp
loope
subb
sbb
xchg
push
rcrb
or
rorl
fildll
test
adc
daa
dec
lods
fstpl
jne
pop
push
mov
in
push
add
xor
adc
aaa
mov
adc
sbb
cmc
out
xchg
lret
pop
fmull
aas
out
jbe
inc
gs
mov
mov
rclb
insb
out
pop
inc
push
fwait
cli
dec
testl
xor
sub
roll
push
pushf
dec
stos
pop
jg
outsl
cltd
cwtl
adc
fnstsw
dec
outsl
fs
xor
rorl
cmpsl
jnp
dec
pop
lds
jbe
lds
cwtl
xor
sub
repz
js
outsl
int3
adc
xchg
insl
sbb
xchg
inc
sbb
pop
int
cmp
pop
ds
or
arpl
and
jge
mov
pop
fdivrp
cltd
aad
cmpl
fistps
xor
dec
lret
mov
test
daa
push
mov
lock
dec
mov
movsl
dec
jno
push
and
movsl
push
imul
aam
aad
lcall
out
sbb
cmc
clc
rorb
btc
jo
aad
fs
icebp
bound
add
sub
lahf
sbb
jg
cld
lods
insb
or
lahf
shll
dec
fisttps
scas
sar
jg
pop
fs
sahf
mov
pop
jle
jo
jne
dec
add
fldl
in
daa
int
aaa
xor
jecxz
pop
push
ret
mov
push
incb
gs
mov
xchg
xchg
or
mov
sbb
faddp
fstps
push
cld
xchg
lret
adc
pop
cmpsb
and
mov
jmp
sbb
pop
into
aaa
pop
lret
dec
repz
clc
enter
xor
pop
lock
fucom
xchg
pushf
xchg
pop
loop
out
push
mov
xchg
xchg
xor
dec
xor
jb
push
sahf
popa
fwait
lods
fwait
repnz
pop
gs
sub
aad
stc
dec
jl
pop
fnstenv
mov
jle
cwtl
es
sub
pop
push
sub
or
jae
add
test
xlat
test
cli
mov
sub
movb
mov
sbb
cmp
rorb
fsubs
inc
fdivr
add
dec
and
mov
movw
xor
cli
xchg
jno
add
gs
cmp
loopne
fldt
jmp
xchg
sbb
cmp
push
add
mov
xchg
sub
dec
imul
shlb
out
sbb
mov
mov
fldl
leave
aaa
mov
mov
cltd
rorl
mov
icebp
popf
mov
sti
test
out
push
out
cwtl
pop
psubsb
mov
popa
jle
inc
push
cmpsl
mov
push
add
shlb
cmp
repnz
sub
aaa
mov
add
in
mov
cmc
sub
mov
dec
sbbb
rorl
ds
dec
sbb
sbb
inc
int
imul
mov
push
cmpb
aad
sub
xorb
fs
int
psubusw
add
arpl
pop
sbb
xor
pop
sbb
ljmp
call
jnp
inc
xor
jae
or
mov
je
lret
gs
xchg
sbb
dec
xor
sub
sbb
test
test
push
fidivrl
sarb
push
shll
imul
jg
outsl
repnz
push
cmp
imul
daa
neg
hlt
jo
cmc
outsl
nop
lahf
loopne
xor
lods
out
or
or
sbb
dec
xchg
fs
push
icebp
shr
clc
lcall
jno
xor
ret
jnp
push
insl
les
sub
lea
test
aam
sub
push
dec
ret
mov
andl
sub
push
sahf
aam
in
aad
dec
push
add
mov
push
sahf
mov
fisubrs
mov
pop
or
fisttpll
cs
inc
sahf
lock
xchg
or
repnz
cmp
fidivl
pop
xchg
lea
and
jns
xor
in
cld
or
sti
mov
mov
outsl
roll
jg
fstpt
fmuls
and
stc
clc
sub
dec
inc
ret
adc
lret
inc
test
fistpl
cs
aas
inc
mov
in
in
mov
in
sub
lret
or
push
pop
stos
sub
iret
inc
lcall
lods
dec
cmpsl
imul
pusha
sbb
mov
ret
and
pop
sbb
ljmp
or
popa
adc
mov
imul
add
out
xchg
std
popf
in
sub
scas
aad
push
add
cwtl
je
jg
mov
call
into
lds
sbb
xchg
jle
loopne
cmp
fs
cmp
adcl
mov
data16
lea
icebp
add
mov
mov
mov
push
jne
xchg
cmpl
popf
out
lret
aaa
add
sti
xchg
fldenv
xchg
stc
std
fsubrs
les
sub
jp
rolb
jl
stc
adc
mov
cltd
loope
add
shlb
movsb
jge
cmp
loope
dec
cmp
pop
sbb
lcall
xor
jecxz
pop
add
or
mov
xor
xor
dec
cmp
pop
lods
lea
pop
mov
fldcw
mov
fdivrl
movsl
mov
xchg
sbb
fldl
lock
movsl
aam
fstpl
jge
lock
lahf
xor
sbb
imul
test
sti
pop
add
fwait
es
mov
and
xchg
cli
stc
mov
pop
cld
lods
outsl
test
scas
push
mov
out
add
inc
jae
adc
mov
inc
push
out
jns
lds
xor
mov
jns
jl
push
shrl
scas
int
scas
pop
insb
dec
in
daa
mov
ja
xchg
in
fdivrl
cmp
xor
inc
add
fs
pop
sbb
cmpsl
mov
sahf
sbb
lds
mov
popf
subb
dec
pop
pop
repnz
movsl
aas
out
mov
das
pop
loopne
dec
test
fstpt
jnp
or
jmp
jg
mov
das
and
divl
les
popf
fwait
ljmp
sbb
movsl
or
int3
test
sub
test
dec
xor
jo
adc
xchg
xor
mov
and
and
dec
jne
push
in
xor
test
xchg
cmp
inc
decb
fimuls
jge
insb
cmpsb
cmp
or
mov
in
aam
mov
sbb
mov
push
or
add
mov
mov
adc
add
call
push
adc
bound
adc
add
cmpsl
push
sbb
adc
adc
movsb
mov
ret
and
mov
push
add
into
xor
mov
sti
cmp
xor
loope
sbb
push
cmc
pop
fwait
loope
insl
sub
dec
mov
xor
or
xchg
dec
scas
mov
mov
jle
and
sti
and
loop
cmpsb
aad
loopne
cmpsl
pop
xlat
jbe
pop
push
shl
pop
inc
cs
adcl
push
out
stos
icebp
cmpsl
xor
mov
daa
je
lret
mov
ret
push
xchg
inc
arpl
mov
mov
filds
push
pop
cvtpi2ps
ss
push
adc
imul
lods
fdivr
lock
nop
orl
inc
mov
sub
fmuls
jmp
push
mov
je
pop
out
sub
psubsb
jo
aaa
dec
cmp
cmp
push
xchg
xorl
shrl
adc
clc
xor
xor
scas
mov
inc
xchg
mov
or
popf
adc
into
mov
cmpsb
and
in
dec
add
push
jle
sbb
daa
and
pop
ds
dec
and
jo
and
shlb
xchg
rorl
fsub
push
cmp
cmp
addr16
fwait
vpackssdw
mov
xor
int
add
pop
sub
out
mov
nop
bound
dec
ret
cmp
pop
cmp
dec
cli
movq
test
add
loopne
cmp
cld
dec
cmp
adc
add
mov
lds
or
data16
xchg
int3
pop
neg
mov
mov
inc
lods
movsb
xchg
or
push
xor
cmp
out
xchg
pop
jbe
clc
loopne
aaa
into
fwait
loope,pt
xor
sbb
rcl
mov
xchg
xlat
sbb
in
filds
push
mov
push
jne
adc
fnsave
push
jae
and
shll
daa
sub
push
aaa
inc
pop
testb
mov
pop
lret
inc
in
sub
push
push
add
dec
push
pop
test
xchg
in
push
fnstenv
enter
adc
lret
xor
icebp
stos
mov
mov
xor
ret
clc
xor
cld
subb
adc
pop
mov
sahf
push
and
ja
addr16
data16
ds
fdivr
call
push
rcl
aas
xchg
hlt
fildl
jns
or
repz
xchg
sbb
push
mov
leave
add
or
daa
sbb
cwtl
or
push
add
nop
shlb
cli
arpl
lods
fistps
mov
orl
dec
jae
pop
inc
pop
pop
out
pop
sti
or
cmp
aas
test
jbe
sub
mov
loop
mov
roll
in
mov
sarb
adc
adc
pop
mov
stos
pop
ret
dec
inc
out
pop
mov
cmpsl
mov
fimull
pusha
mov
loopne
sbb
stc
hlt
insl
jmp
mov
cmp
ljmp
call
xchg
sbb
xor
sbb
pushf
jg
jle
movsl
xchg
outsl
add
mov
pop
cltd
mov
ljmp
add
push
es
movswl
cs
push
neg
add
xor
loope
add
dec
jnp
jmp
insl
aam
call
lret
movsb
pop
stc
jg
add
adc
xchg
xchg
inc
and
or
test
test
dec
mov
xor
sahf
mov
mov
stc
hlt
dec
push
jne
pop
jae
pop
and
fstpl
push
popf
and
fldl
dec
xchg
xchg
sub
adc
ja
addl
mov
popf
xchg
mov
fcoml
sbb
and
call
pushf
sub
ret
iret
and
test
hlt
imul
out
sub
inc
jns
pop
push
sbb
sarb
add
add
movsb
and
mov
popa
inc
dec
movsl
add
sub
in
push
fmull
jle
es
loopne
out
decl
push
hlt
inc
out
xchg
ss
outsl
shrb
aad
int
adc
imul
or
lock
jb
mov
xchg
rcrl
cmp
jbe
xchg
mov
cwtl
push
mov
jge
cmp
jmp
push
lock
ljmp
into
jmp
hlt
subb
hlt
xchg
cltd
adc
enter
cmpsb
mov
sub
rcll
mov
adc
js
jo,pt
dec
cmpsb
hlt
decl
xor
xor
mov
popa
xor
test
inc
mov
mov
pop
xor
inc
enter
movsl
cmc
ret
sub
xchg
xchg
aaa
cltd
sbb
hlt
jmp
mov
js
iret
pop
inc
test
cmp
stc
shlb
fisubrs
in
aas
es
jecxz
push
or
mov
and
std
sbb
xchg
lock
mov
mov
pop
cmp
lret
testb
pand
sbb
fwait
mov
sub
fsubrp
xchg
push
or
and
mov
sub
cmpsb
daa
pop
shrl
in
add
mov
les
mov
ss
stos
insl
leave
int3
cmpsl
jp
or
pop
cmpb
pop
pop
dec
adc
es
loope
fwait
inc
mov
mov
mov
xor
sub
jbe
inc
xchg
roll
jmp
ds
sbbb
mov
cmp
sbb
repz
scas
dec
call
ljmp
imul
int
stc
lcall
pop
xchg
xchg
fwait
push
sbb
hlt
cmpsl
in
stos
cld
ja
sbb
xor
push
mov
gs
sbb
mov
aam
mov
es
mov
dec
inc
stos
cmpsl
aaa
and
clc
xor
dec
or
jae
xchg
push
dec
sbb
inc
addb
cmc
cmp
clc
mov
out
js
mov
cmp
mov
scas
sahf
adc
push
dec
inc
cmp
aam
psrlq
jo
shlb
cld
xor
es
pop
subb
lcall
dec
jmp
aam
cmp
xor
push
je
sbb
push
out
cmp
das
mov
add
jno
cwtl
mov
je
cmp
push
movsl
pop
sbb
dec
mov
mov
sbb
add
inc
jg
popw
imul
aaa
push
ljmp
jg
mov
enter
jp
ja
lmsw
gs
insb
adc
mov
lods
mov
jecxz
sbb
rorb
or
movsb
mov
sub
movsl
cmp
repnz
or
and
cld
mov
fimull
xchg
jbe
xor
lret
jecxz
repz
xchg
jae
test
mov
test
push
jl
kxorw
mov
pop
bound
popf
loopne
and
insl
lds
and
pop
inc
xorb
jl
jecxz
movsb
je
jge
xor
repnz
mov
mov
pop
clc
add
xchg
xchg
pop
xor
or
push
mov
lock
mov
cmp
cmp
out
add
ror
pop
dec
daa
cmp
jbe
sbb
cwtl
shl
sub
jmp
inc
sub
jne
dec
add
mov
sub
pop
loope
pop
dec
dec
ds
inc
lock
fyl2xp1
pop
lret
mov
ret
cmp
xorl
das
mov
inc
push
fidivs
das
lahf
mov
bound
xor
pop
xor
fisubs
lret
jmp
popf
cltd
mov
or
push
loop
xchg
cmpsb
or
fnsave
xorb
aas
les
jns
rcr
mov
sbb
dec
lods
cld
rolb
in
mov
clc
movsl
outsb
mov
sbb
jns
test
sub
enter
insb
fcompl
stos
and
movsl
pushf
stos
clc
dec
mov
sub
xchg
pop
jge
sbb
mov
mov
fs
daa
inc
cmp
lea
mov
leave
fisubrl
pop
and
cmp
jno
lret
push
mov
inc
cmp
pop
mov
aam
sub
scas
roll
pop
ja
test
or
cmp
stc
mov
pop
mov
cmp
xchg
cld
mov
mov
inc
cli
jle
cli
jg
mov
stos
popa
in
push
push
and
and
push
mov
sysexit
je
clc
lea
lahf
xchg
iret
cmp
dec
fstp
je
lret
pop
and
jno
into
inc
and
pusha
iret
fdiv
jne
pop
filds
push
imul
lds
jne
inc
sub
iret
loopne,pn
ret
shrl
js
dec
aam
xlat
fldcw
sbb
xchg
stc
dec
cmpsb
add
jne
repz
pusha
clc
leave
and
push
xlat
xor
sbb
cmpsb
adc
dec
divl
bound
or
xchg
jmp
stc
cmpsl
push
xor
adc
les
xchg
cltd
sub
mov
andl
xchg
outsl
ficoml
rolb
mov
outsl
jns
xchg
mov
mov
nop
mov
test
jp
pop
push
movsb
inc
cs
lahf
xchg
insl
mov
stos
or
imul
enter
fdiv
dec
add
mov
xor
sbb
adc
jo
lods
popf
rolb
xor
push
movsl
fwait
mov
fisubrl
dec
cmc
imul
lahf
inc
clc
pop
or
stos
pop
jb
push
cmp
sbbl
xchg
push
and
add
mov
icebp
outsl
bound
gs
call
xchg
out
movsb
adc
mov
ret
push
les
nop
rcll
sti
aas
jo
xor
scas
pop
and
fistl
das
sbb
test
mov
leave
push
cld
push
or
dec
sbb
ss
stc
jnp
mov
inc
aas
daa
xor
adc
adc
ds
clc
jl
jl
xor
daa
ret
out
dec
jno
stos
cmc
out
lds
fucomi
data16
gs
scas
test
mov
fnsave
std
fwait
or
data16
push
daa
sbbb
xchg
xchg
je
fs
jg
test
xchg
in
mov
inc
call
push
mov
lds
sbb
out
ltr
daa
pop
dec
popf
cmp
das
movsb
lea
dec
loope
loope
cwtl
es
pusha
shrl
mov
sarb
and
test
in
mov
jne
dec
push
sub
cs
lods
xor
movsb
and
push
into
push
fisttpll
mov
cmp
aas
test
les
adc
sbb
mov
outsl
loope
or
jl
in
lcall
dec
out
jg
pop
insl
or
int3
fsubrp
addr16
jae
bound
mov
aam
in
add
mov
xchg
in
mov
inc
jl
inc
mov
mov
mov
push
imul
adc
push
mov
inc
jge
push
fchs
mov
mov
pop
test
iret
mov
lods
and
insl
xchg
movsl
mov
jnp
div
enter
stc
cld
or
push
mov
cltd
int
pop
mov
pop
lahf
lret
sbb
mov
add
mov
test
mov
insl
jle
jl
adc
aam
or
xchg
repnz
push
or
in
dec
and
rcrb
mov
cmpsb
push
outsb
ljmp
and
jb
arpl
jecxz
lret
aad
push
inc
decl
shlb
mov
rol
bound
cmpsb
or
jb
add
adcl
bound
mov
ret
test
dec
inc
lahf
jmp
js
bound
mov
rcrb
sub
dec
add
inc
cmp
cmpl
mov
aas
xchg
xor
call
add
jmp
movsl
out
inc
mov
lea
dec
dec
dec
pop
mov
sub
and
inc
shrb
add
sbb
xchg
test
mov
fwait
int3
je
mov
enter
mov
jae
fwait
shll
and
mov
add
dec
cmpsb
outsb
insb
movb
arpl
sbb
add
imul
add
rcl
adc
add
pop
popa
push
jge
and
aam
push
leave
xor
and
mov
push
jecxz
out
icebp
inc
lahf
pop
mov
aaa
sub
push
je
loop
xchg
addr16
out
mov
sbb
or
test
or
out
xchg
pop
mov
cld
out
lods
mov
in
lgs
lea
cld
stc
mov
sub
je
push
imul
rcll
subb
arpl
fsub
mov
ja
std
aam
repnz
fistps
push
pop
xor
rolb
xor
or
inc
cmpsb
push
or
xchg
fwait
movsl
mov
add
insb
icebp
mov
test
sub
mov
aas
aad
clc
jp
das
or
xchg
inc
add
mov
pop
test
push
out
pop
lahf
jnp
subl
adc
adc
lret
sbbl
push
divl
test
or
mov
ret
loopne
aaa
pop
push
and
fistps
stc
daa
xchg
jne
sub
push
rcl
std
mov
or
arpl
enter
ja
leave
pop
mov
shlb
mov
push
mov
cld
lret
adc
cs
inc
popf
cli
ljmp
xchg
xchg
popf
cmp
sub
repnz
mov
popf
mov
or
cld
packssdw
scas
xchg
pop
xor
mov
xor
xchg
dec
pop
aam
mov
inc
mov
mov
insl
push
in
fcmovb
fidivs
mov
mov
push
fisubl
xchg
fisttpll
pusha
loopne
aaa
mov
fnstcw
mov
sbb
cmpsb
sbb
cmp
adc
stc
pushf
addb
scas
std
mov
cli
pop
sub
adc
adc
cmp
cmp
mov
mov
sub
push
mov
repz
dec
out
and
mov
sub
test
cwtl
xchg
pop
jbe
lret
mov
sub
leave
pop
or
xchg
xchg
xchg
lods
xlat
stos
enter
mov
inc
cmp
dec
or
and
jbe
mov
inc
sti
mov
or
sbb
mov
pusha
add
lock
xor
add
divl
push
clc
push
push
inc
sub
and
rcrl
mov
push
ja
test
sar
jg
fcoms
mov
call
xor
popa
rcl
data16
jecxz
mov
loop
cmp
add
adc
add
hlt
inc
push
or
add
dec
mov
push
jns
pmaxsw
daa
js
cld
nop
shlb
shl
rol
rol
sbb
and
mov
rcl
imul
sub
jae
lret
push
xchg
adc
test
adc
aaa
inc
mov
std
cmc
adc
sub
inc
jp
and
mov
popa
push
dec
cmp
daa
add
movsb
sub
push
push
pop
push
aaa
out
jp
in
in
loopne
cmpsl
or
lret
movsb
xchg
jbe
sbb
mov
jmp
cmc
gs
cmp
dec
adc
lods
leave
arpl
pop
jp
mov
jle
jbe
int
out
mov
notb
xchg
movsl
sbb
mov
mov
dec
aas
add
jnp
sti
mov
mov
adc
sub
pop
addr16
sub
shll
fnstcw
mov
shlb
cmp
jecxz
mov
and
and
xchg
pop
sbb
jp
add
and
xchg
add
lods
int
iret
inc
scas
movsl
fwait
jbe
mov
inc
xchg
fwait
loopne
pop
mov
pop
ss
addr16
lods
push
ja
add
fwait
sbb
mov
dec
ret
xchg
sbb
xchg
mov
pop
jo
enter
scas
pop
movl
aaa
sbbl
jle
pushf
mov
lahf
mov
cmp
push
xor
das
jge
jae
cwtl
mov
es
gs
jge
scas
arpl
or
dec
test
lret
insb
sub
push
fmull
int
iret
out
gs
mov
pop
mov
popa
cmp
adc
fcmovnb
cwtl
insb
test
mov
mov
fucompp
cmp
xor
push
test
or
push
lock
mov
cmp
sbb
lods
pop
cltd
mov
enter
lret
jbe
scas
add
push
jns
sbb
insl
and
mov
je
jp
pop
cmc
jp
dec
jp
call
and
lock
push
jae
daa
addr16
jge
add
mov
ds
daa
fs
leave
testl
shlb
insl
jecxz
outsb
mov
cmpsb
xor
jecxz
test
and
pop
jno
out
inc
and
mov
imul
aam
jae
inc
mov
lock
push
inc
add
ja
sbb
in
cmp
lock
push
mov
add
fwait
inc
test
jl
jo
sbb
shl
add
xlat
pusha
mov
cmp
ds
adc
push
xor
pop
add
shll
shll
jne
pop
movsb
mov
roll
mov
es
inc
mov
ja
repz
add
aad
jmp
and
fcoml
in
fcoml
or
in
jp
lock
cltd
mov
pop
stc
incl
shrl
xchg
rolb
xchg
xorb
push
aad
pop
lock
lds
sub
xor
pcmpeqd
lcall
pop
roll
sub
and
outsl
popf
xchg
mov
lret
out
repz
or
pop
add
add
and
push
faddl
jmp
push
fnsave
imul
dec
push
test
fxch
sarl
push
add
xchg
add
xchg
mulb
jno
or
inc
dec
outsb
imul
adc
subb
pop
fldcw
ja
lahf
rol
sub
popf
sub
fsts
popf
add
int
mov
hlt
daa
imul
notb
adc
aad
call
inc
add
dec
adc
xor
jnp
push
mov
cmp
xorps
je
outsb
add
test
jne
or
pop
dec
mov
mov
pop
or
lret
sub
push
add
or
incb
adc
in
and
out
pop
aas
pop
cmp
pop
mov
jp
cli
mov
fcmovnbe
and
push
int
push
movsb
jbe
and
or
cmp
rorb
xor
leave
push
fdecstp
add
push
cmp
movsb
pop
push
push
int
shlb
xchg
and
xlat
lods
cmc
adc
mov
fdivrs
in
aas
push
loop
cmpb
into
andps
js
ds
test
ja
enter
add
dec
mov
sbb
jge
clc
imul
xchg
push
sub
jno
xchg
mov
xor
aam
mov
dec
xchg
cmpsl
or
bnd
cmp
jge
inc
les
test
psrld
pop
lock
push
ljmp
and
addr16
outsb
cmp
icebp
jbe
xchg
sub
jge
pop
xor
and
cmp
fcoml
sub
jns
hlt
outsb
cmp
and
lods
cli
xor
dec
push
fstl
mov
scas
shl
shlb
lret
scas
jmp
cmp
mov
out
or
sbb
xor
jnp
orb
frstor
mov
movsb
push
sbb
sbbl
test
cmp
dec
jge
cmpsl
fdivrs
pushf
insb
test
mov
int3
outsb
xlat
jnp
aas
inc
adc
std
or
pop
arpl
xlat
data16
xchg
push
xchg
stos
pop
aad
push
push
add
add
fadds
lock
pop
cmc
inc
add
cmp
cs
add
lods
aaa
rcr
es
dec
mov
fildll
pop
outsl
mov
or
cmp
add
outsl
cli
mov
and
mov
push
shl
addr16
sub
cmpsb
cmp
mov
iret
and
cmc
cwtl
loope
xor
adc
movsb
outsl
popl
cmp
push
or
data16
outsb
add
cmp
lods
inc
push
shrb
outsb
add
adc
xchg
inc
mov
bound
insl
gs
sbb
inc
ret
xchg
dec
jns
xchg
dec
and
cmp
xor
push
into
aam
xor
sbb
inc
jecxz
out
lret
adc
pop
scas
pop
jmp
sbb
xchg
jo
push
aaa
pop
mov
sbb
xlat
ljmp
dec
push
and
mov
add
shrl
neg
adc
outsb
jbe
push
and
mov
xchg
ficoms
icebp
rcll
inc
jne
call
out
mov
push
cmp
inc
or
adc
repnz
stos
mov
and
pop
clc
fcompl
lahf
push
dec
mov
xor
mov
lds
push
mov
call
rorb
fincstp
nop
cld
mov
sub
jne
push
push
test
add
jle
or
xchg
imul
xor
mov
push
test
xchg
popf
pop
jnp
pop
mov
pop
cmc
and
mov
jmp
pop
ja
rorl
cmp
adc
inc
nop
hlt
addl
dec
sub
lds
das
test
cmp
pushf
mov
shll
ficoms
out
xchg
dec
scas
aas
ret
jp
dec
xor
pop
mov
adc
sub
loopne
scas
es
sub
mov
mov
pop
adc
xor
push
add
jge
and
sub
sbb
andb
aaa
out
jl
push
test
lds
or
sub
loopne
push
mov
cwtl
repz
jne
xor
adcl
jbe
xor
mov
sbb
or
fistps
sub
push
aad
push
pop
out
push
mov
cmp
inc
dec
fldt
and
das
stos
push
fadds
push
cli
mov
mov
jecxz
fisttpll
jns
scas
mov
xchg
mov
out
sub
fs
lret
inc
outsb
push
cmp
add
shr
or
mov
lds
sbb
lret
ljmp
cld
sbb
push
xchg
mov
mov
push
call
in
bound
mov
mov
repnz
xchg
mov
ret
popa
push
cs
arpl
fldl
rcr
sbb
jl
adc
int3
pop
imul
mov
andl
add
imul
xor
jno
push
xlat
maxps
shr
insl
test
data16
push
push
popa
mov
ja
inc
adc
sub
jae
adc
aaa
push
insl
sub
pop
mov
popf
mov
mov
aaa
dec
int3
ss
dec
mov
popa
cmc
push
cmp
enter
cmp
dec
mov
pop
sbb
mov
dec
in
ja
loope
mov
fwait
dec
lret
stos
adc
adc
pushf
or
aaa
jb
call
fs
cli
jo
mov
xchg
mov
negb
int
cld
mov
or
push
lods
dec
call
insl
push
jo
add
or
jo
push
xor
call
or
mov
mov
into
sub
int3
test
int3
popf
pusha
cmpsb
or
xchg
mov
popf
testl
inc
std
cmpsb
jmp
cmp
dec
es
dec
rclb
arpl
push
scas
mov
cmc
arpl
sub
inc
pop
std
iret
or
xor
jge
dec
xchg
push
pusha
push
dec
adc
cmpsb
push
aam
jb
or
movsl
mov
std
pushf
cld
add
cmc
ss
pop
mov
pop
jg
sub
mov
inc
lahf
sbb
les
iret
pusha
movsb
dec
js
push
ds
dec
dec
xchg
testb
mov
jne
orb
fildll
test
iret
adc
loop
mov
sub
subl
repnz
scas
adc
lods
sub
pop
ja
or
cmp
inc
adc
or
ds
cwtl
and
les
xor
test
aaa
enter
ret
mov
lar
mov
cmp
les
sub
filds
pop
mov
icebp
je
mov
sbb
xor
or
xchg
insb
inc
dec
xor
mov
xchg
sbb
pop
out
dec
xchg
mov
movsl
test
mov
mov
xor
push
inc
outsb
xchg
ja
push
cli
ss
xchg
sbb
mov
jmp
xor
test
repnz
fistps
lret
jecxz
push
adc
popf
cltd
jbe
xlat
imul
ljmp
mull
lock
mov
gs
ds
push
loope
fdivr
adc
and
jp
xor
int3
bound
insl
mov
mov
insw
mov
mov
xor
inc
pusha
out
mov
sahf
loope
aas
test
xlat
mov
and
mov
in
pop
cli
lds
xor
xchg
push
xlat
and
jbe
xchg
adc
cli
sub
jl
dec
cmc
iret
shll
sbb
fisubrl
daa
callw
rclb
cmpsb
scas
add
push
out
mov
add
test
xor
adc
ds
in
mov
adc
subb
xchg
xchg
lock
ss
cmp
xchg
out
mov
jl
outsb
add
mov
adc
in
add
ret
std
xor
sbb
mov
xchg
xor
insb
mov
add
mov
adc
mov
pop
sbb
test
insb
push
sahf
cli
outsl
clc
les
pushl
mov
sub
push
aaa
movsb
xor
test
mov
sub
pop
push
add
jnp
cmpsl
xchg
xor
mov
cli
in
repnz
inc
mov
cmpsl
stos
jne
lods
nop
push
mov
rolb
xchg
cld
pop
aas
inc
daa
je
ret
cmp
shll
fst
mov
pop
cmp
add
loopne
mov
push
test
add
fisubrl
xchg
loope
insl
cli
nop
cmp
ret
mov
dec
mov
or
or
mov
mov
pop
xor
jl
stc
jb
int
test
jo
fistpl
icebp
dec
jmp
sti
subl
lock
or
inc
xchg
inc
leave
cmp
xlat
sub
pusha
pop
adc
rclb
std
jp
cmp
jae
cltd
daa
xor
xlat
push
mov
pusha
push
aad
pop
jne
and
xchg
xchg
or
sbb
stos
std
dec
lret
mov
pusha
fldl
rcll
inc
mov
dec
das
inc
out
push
jns
sbb
jne
mov
sti
jg
rorb
jle
fldenv
sub
setbe
or
pop
fisubl
xchg
xchg
cltd
fisubl
pop
pop
or
pop
pop
sbb
pop
xor
pop
stos
push
test
shlb
popa
pop
cs
out
inc
pusha
jg
data16
mov
stos
cmp
cmp
push
les
popa
int
movsb
xchg
xor
or
cltd
mov
jbe
lods
je
faddl
and
dec
shlb
stc
sbb
repz
sub
pop
dec
pop
and
inc
cld
in
mov
in
repnz
xchg
adc
repnz
pushf
inc
insb
mov
jmp
dec
dec
pop
and
shrb
mov
mov
jbe
xor
test
cmp
dec
mov
mov
pop
xchg
sbb
repnz
pushf
int3
inc
fwait
mov
jmp
in
xchg
jns
cmp
lret
adc
js
nop
add
call
mov
rol
adc
in
rclb
mov
lahf
fidivrs
add
imul
or
movsb
sti
and
cmp
fstl
pop
xor
cmpsl
cmc
dec
push
sbb
ss
mov
cmpsb
mov
lcall
stos
and
sti
lcall
leave
jo
adc
ds
iret
fidivrs
popa
sahf
sti
aam
pop
push
adc
mov
punpckhdq
cld
leave
lods
popf
and
rcll
std
sar
xchg
cmp
inc
in
xchg
ja
jg
lret
pop
dec
push
and
jbe
int3
mov
or
lock
pop
adc
push
fsubl
mov
enter
and
sbb
and
adc
lret
loope
fsub
enter
dec
xor
dec
out
imul
loope
shl
fldcw
xor
mov
add
add
fs
cli
movsl
mov
lea
sub
shll
mov
repz
out
imul
ret
cwtl
mov
arpl
push
mov
sbb
addr16
mov
shrl
add
add
mov
mov
mov
mov
mov
xor
lret
xchg
mov
cmp
mov
dec
xchg
je
add
lds
js
pop
or
pop
xor
add
mov
or
negl
sbb
xor
clc
xchg
out
jl
dec
es
mov
in
stos
adc
pop
mov
das
push
push
mov
outsl
lds
or
jb
cmp
cmp
shr
movsb
dec
mov
lahf
dec
pop
sar
out
mov
jne
int3
aas
cmpsl
push
push
pop
mov
fsubrs
xchg
pop
xchg
fwait
int
inc
push
dec
inc
inc
data16
dec
adc
dec
imul
or
popf
sbbl
mov
jno
frstor
dec
subl
add
nop
adc
outsl
in
shlb
jnp
cwtl
sbb
popf
repz
dec
lock
xchg
mov
in
xchg
pop
aam
fwait
dec
sub
ja
es
pop
adc
das
into
fisttps
lods
mov
data16
imul
sti
jl
cmp
add
push
ljmp
push
cmp
ret
inc
or
lahf
cmp
out
fucom
adc
cmp
mov
into
les
jmp
in
or
loopne
rcrl
and
aas
xor
pop
ss
ljmp
or
or
pushf
in
jns
mov
adc
xchg
or
add
call
out
cmc
jo
gs
xchg
sbb
data16
mov
out
xor
dec
sub
outsb
mov
mov
in
xor
mov
int3
pushf
push
xor
lods
cld
popf
sbb
mov
fstl
cmpsb
int3
rcl
orb
pop
sarl
imul
aaa
dec
push
into
mov
movsb
out
enter
add
fcomps
out
pop
sbb
sub
imul
loopne
cwtl
jne
push
ret
mov
pop
inc
orl
mov
push
mov
pusha
fisttpll
cmp
fsubs
jge
rorb
testl
popf
in
cmpsb
mov
fcmovnbe
stos
jge
rcr
add
shlb
xchg
out
cwtl
jno
repnz
inc
add
sbb
lahf
lret
lret
testl
adc
push
in
or
mov
mov
adc
push
xor
pop
cmp
or
add
in
cmp
out
ss
mov
jno
inc
in
lret
in
adc
clc
jns
jb
mov
popf
test
pop
mov
mov
shll
js
mov
mov
or
sbb
xchg
clc
mov
mov
out
push
aaa
add
pusha
sbb
popa
xchg
xor
clc
inc
cltd
mov
into
jbe
shl
add
mov
mov
mov
and
out
mov
fsubrs
cmc
jbe
push
jl
test
iret
mov
push
fucomi
call
out
leave
mov
arpl
in
xchg
int
sbb
sub
mov
ja
testb
mov
push
aam
xchg
add
sbbl
daa
xchg
sbb
xchg
pop
pop
jne
js
push
cmp
cwtl
rcll
mov
jp
hlt
hlt
out
cmp
mov
std
sahf
je
lock
jo
into
inc
xchg
aam
test
xchg
in
mov
xor
aaa
inc
loop
out
mov
add
add
out
sbb
or
pop
sahf
out
xchg
sahf
ds
fisubl
fwait
jnp
push
loope
es
neg
lret
pop
ss
or
sbb
cli
fs
fs
test
aam
fidivs
jb
cmpsl
rorb
mov
pop
xor
xor
add
cmp
out
sbb
sbb
ret
xchg
stos
clc
xor
mov
sbb
sub
mov
dec
ret
lock
cwtl
sti
adc
bound
and
mov
push
les
dec
xchg
imul
daa
lret
dec
addr16
jb
lods
ror
jge
xlat
xor
mov
sub
clc
into
data16
add
mov
movsl
repnz
pusha
push
xchg
pop
jp
negl
sbb
push
out
clc
push
add
sbb
lcall
into
out
cmc
sarb
jge
fdivs
inc
mov
add
jl
js
inc
inc
xchg
and
add
xlat
loopne
ss
pop
ss
xlat
loope
fwait
cld
ret
push
and
ja
xchg
in
jge
and
negb
mov
scas
push
mov
xor
sbb
adc
ror
sbb
shl
inc
fldt
jae
mov
lret
ret
scas
sub
lcall
gs
push
cmp
mov
loop
sbb
add
and
jo
pop
pop
clc
mov
mov
inc
pusha
out
xlat
aad
push
push
ds
jecxz
inc
lfence
push
jae
test
jecxz
sub
decb
lock
fistpl
data16
addb
mov
mov
sbb
int
xor
cmpsl
andl
fwait
push
or
daa
lods
mov
jae
outsb
dec
into
lock
mov
scas
out
aam
adc
push
and
in
jg
gs
scas
and
ret
popa
xor
ficompl
das
push
mov
cmpsb
or
in
xor
sub
pop
cs
mov
insb
jae
mov
pop
outsb
int
sub
mov
mov
and
jne
sub
mov
sarl
outsl
xchg
mov
lahf
mov
ret
cmpsl
add
cld
mul
mov
pop
cmc
xor
xchg
jmp
gs
add
andb
dec
jne
jb
ja
pop
lret
fucomi
or
pop
sti
lahf
aad
sbbb
mov
push
popa
inc
sbb
add
lcall
xchg
test
out
xchg
out
je
sub
xor
bound
shlb
cmp
jae
movsl
loop
cmp
arpl
cltd
cs
in
mov
add
inc
nop
sbbl
test
popf
clc
mov
push
imul
into
dec
cmc
ffreep
scas
jno,pn
or
mov
icebp
adc
call
mov
hlt
xchg
xlat
push
jge
dec
je
ja
inc
lock
inc
add
lods
stos
xor
or
ss
outsb
mov
mov
dec
jge
sbb
push
stc
push
test
jl
lret
mov
arpl
push
jl
stc
mov
and
sbb
mov
pusha
mov
test
adc
jp
push
xor
cmp
adc
lds
mov
bound
nop
rcrb
divl
fsub
pop
jle
mull
inc
scas
pushf
or
or
scas
xchg
xor
dec
jb
shrl
sbb
popf
dec
gs
js
daa
orb
mov
scas
push
int
adc
adcl
mov
repz
sbb
or
ds
add
add
in
jp
movnti
sbb
mov
add
mov
imulb
dec
push
arpl
mov
jne
push
movsb
cmc
mov
cmp
mov
divb
gs
adc
cmp
or
push
pusha
pop
pop
fisubs
mov
ret
movsl
stos
iret
test
mov
and
stc
sbb
pusha
jle
stos
jmp
cmpsl
add
popf
jne
jle
rol
fists
cltd
popf
imul
cmpsl
xor
or
addb
rdmsr
add
out
leave
decb
cwtl
and
mov
cmp
scas
dec
mov
lret
fwait
push
sahf
cmp
popf
xchg
dec
mov
jl
xlat
inc
int3
pop
push
xlat
mov
xor
push
ret
sub
pop
lds
mov
pop
js
fcmovu
mov
pop
inc
data16
inc
dec
or
pop
jmp
add
sub
and
cwtl
adc
cli
adc
pop
cli
sarl
sbb
add
push
cmp
inc
mov
fs
xchg
xchg
dec
leave
leave
mov
into
mov
fwait
sub
pusha
sbb
rorb
jl
add
sub
mov
inc
adc
nop
xorb
pop
fs
pushf
sbb
pop
mov
in
iret
pop
scas
jno
out
sub
cmp
adc
imul
test
pop
xchg
int3
and
mov
ds
push
xchg
xchg
pop
sbb
pop
mov
xchg
xchg
cmp
mov
pop
ret
inc
xchg
out
cs
push
jmp
pushf
sti
cmpsl
push
cwtl
fildl
sbb
mov
into
or
daa
js
pop
dec
jg
repz
and
cli
leave
mov
in
jno
push
jmp
and
cmp
pusha
lods
sbb
xchg
adc
aaa
inc
sbb
jae
lret
outsl
sbb
call
movsb
jmp
popa
fadd
js
lret
out
test
dec
cs
mov
les
xchg
das
inc
int
push
dec
addb
insl
out
mov
pop
xchg
jecxz
lahf
popa
dec
and
jg
sub
mov
movsb
mov
inc
xchg
and
lret
in
add
add
add
dec
and
push
sub
add
push
mov
jb
inc
inc
xor
sub
fldt
sub
add
pusha
jne
add
jl
xor
and
ljmp
adc
loope
xchg
push
dec
in
subb
in
push
pop
dec
add
jmp
scas
aas
in
les
jb
in
and
lds
clc
js
pop
sahf
xor
mov
dec
loop
cmp
push
sub
roll
loope
and
into
jg
mov
inc
sbb
add
add
inc
stos
imul
jle
out
insb
imul
icebp
jbe
call
test
cld
sbb
inc
ss
and
jae
mov
ja
into
sahf
jae
cmp
mov
add
insb
inc
push
mov
adc
mov
adc
mov
sub
insl
mov
shll
fsubl
cwtl
sub
mov
out
pop
add
mov
fs
sahf
cld
lahf
out
lods
rcll
out
cld
js
aaa
cld
cs
leave
lahf
mov
sbb
jo
cld
dec
xchg
push
jp
rep
cmp
or
lods
ja
mov
shrl
pop
insl
rcl
xlat
in
test
inc
lret
fisubrs
mov
adc
into
jle
test
call
rolb
test
mov
pxor
mov
jp
xchg
aam
pop
mov
mov
dec
push
xchg
jg
ljmp
outsb
aam
dec
ss
jp
adc
lea
jno
xor
in
sub
lods
test
iret
scas
pusha
test
ret
jae
inc
or
pop
outsl
push
xor
movsl
mov
movsl
out
adc
es
into
clc
cmpsl
test
mov
xlat
imul
or
outsl
ljmp
mov
in
mov
outsb
mov
xor
fiaddl
ds
mov
jl
out
inc
push
cmpl
jns
aaa
fsin
dec
mov
jno
pop
cwtl
xor
dec
mov
subb
in
popa
popf
aad
mov
stc
jl
adc
fisttps
and
sub
out
mov
inc
dec
je
jp
mov
lret
add
arpl
lahf
imul
sbb
mov
daa
xor
adc
cmpsl
popa
mov
xchg
mov
add
or
xchg
jns
or
cli
dec
dec
inc
xchg
rclb
inc
lea
push
cmp
xchg
mov
lea
mov
mov
sarb
shll
je
pop
call
outsl
jmp
repnz
inc
inc
jnp
or
std
inc
stc
mov
jecxz
sbb
in
insb
sbb
dec
aam
out
jge
loop
add
test
test
rorb
data16
ds
jmp
sub
aaa
sahf
or
jg
arpl
mov
imul
clc
dec
jne
push
pop
pop
pusha
mov
stos
call
jl
xchg
push
jns
or
popa
std
pop
xchg
xor
rcl
push
insb
rorl
xchg
mov
pop
push
outsb
incl
out
movsl
mov
sbb
sbb
mov
loope
aaa
ret
loope
add
enter
inc
ja
jle
push
jle
ret
into
iret
out
movsb
sub
dec
xor
sahf
shll
repnz
fimuls
sub
jb
and
aam
mov
pop
lea
iret
lock
stos
sub
pop
jae
or
jbe
stc
sbb
or
sub
sub
out
sahf
mov
leave
xor
add
xor
lret
jno
repnz
sub
sbb
pop
fimuls
shlb
sbb
movsb
dec
ljmp
lahf
addl
shlb
gs
pop
fistps
xchg
pop
cmp
fisttpll
sarl
mov
mov
test
cld
mov
dec
and
dec
and
pop
hlt
sub
push
divb
sub
pushf
ljmp
push
bound
data16
adc
in
cmpsl
mov
leave
mov
cmp
in
xchg
sarl
push
inc
mov
cli
push
or
hlt
mov
dec
xchg
hlt
push
popa
jns
jbe
pop
call
addb
sbb
rcl
xchg
movsb
scas
add
adc
sub
out
mov
pop
aad
sbb
gs
mov
xchg
in
adc
arpl
pop
add
xor
fwait
in
pop
faddl
stc
sub
push
clc
xor
xlat
lock
lret
cmp
xchg
xchg
icebp
xor
rclb
in
lea
aaa
adc
pushf
mov
sub
dec
jb
push
dec
imul
imul
inc
fstl
and
stos
xchg
sub
jle
loope
mov
out
push
loop
cltd
inc
jno
test
mov
add
xchg
and
cli
sbb
xchg
call
movsl
push
cmpsl
pop
xchg
inc
test
sbb
repz
int
out
add
decl
jno
repz
mov
jle
dec
js
xchg
push
pop
mov
add
stos
bound
stos
fs
cld
lods
jge
adc
loope
mov
jp
adc
push
and
test
fcmovnu
inc
mov
push
mul
pusha
mov
in
test
hlt
lods
in
jg
mov
popf
adc
fldenv
add
fisubl
and
fisubs
xchg
sti
aas
cmp
arpl
jle
xlat
out
xchg
out
cmpsl
dec
pop
inc
add
imul
jo
in
out
jo
fldenv
test
xchg
ret
daa
lods
xor
mov
test
dec
mov
cmp
lock
add
mov
sub
push
pop
jle
fcomp
scas
mov
movsl
add
lock
xor
inc
xchg
lahf
cmp
mov
in
pop
xchg
insl
bnd
or
pop
mov
lahf
jno
out
enter
pop
pop
and
xchg
mov
or
clc
jl
push
xchg
fists
xor
in
add
add
cmpsl
sub
mov
dec
ss
dec
mov
subl
inc
fsubs
pop
and
bound
adc
inc
stos
ljmp
aaa
push
fsts
scas
imul
xorl
add
xor
sub
mov
lds
out
inc
sbb
mov
roll
sahf
xchg
pop
adcb
xor
cli
stos
je
nop
jmp
scas
mov
cmpsb
aad
btc
push
jnp
sbb
shll
pop
movsl
movsb
push
mov
or
ffreep
inc
and
test
sbb
dec
fists
xorb
add
inc
sbb
mov
add
stos
push
mov
pop
sahf
mov
fisubs
add
push
pop
cmpb
and
mov
xlat
rcrl
sbb
fstps
arpl
gs
loope
xchg
out
xchg
in
lcall
lea
push
jnp
cmp
xchg
xor
or
cmpsb
inc
dec
mov
shl
call
and
jmp
mov
imul
mov
negb
xor
jecxz
bsf
jns
in
jne
push
or
sbb
addr16
cmp
outsb
fwait
or
pop
lret
push
fnstenv
jne
roll
mov
les
push
push
fdivrs
lahf
cli
orb
lret
xchg
ja
insl
jnp
int
push
dec
std
es
mov
lret
icebp
pop
or
notl
dec
xchg
test
cmp
sahf
in
jmp
cmp
cmp
or
add
cmpsb
adc
jmp
into
mov
mov
xlat
data16
jge
test
dec
arpl
sbb
and
andl
in
ja
or
mov
imul
xor
mov
sub
and
imul
in
loop
out
inc
bound
clc
aad
lods
mov
les
jecxz
mov
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
nop
movsb
push
jne
mov
movsb
add
pop
dec
mov
imul
lea
jmp
mov
fwait
inc
fs
dec
jmp
mov
mov
mov
mov
pop
add
xchg
rep
lods
mov
rep
lods
push
push
xchg
pop
lea
call
jb
sub
jae
xor
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
sub
sub
mov
call
sub
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
sub
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
sub
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
