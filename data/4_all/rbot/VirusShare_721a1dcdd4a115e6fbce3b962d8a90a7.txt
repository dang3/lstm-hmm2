cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
cwtl
lock
cmpsb
xchg
rcrb
clc
jb
sub
movsl
xchg
fistps
loopne
mov
sub
cmp
xchg
les
lods
cmp
and
dec
inc
mov
adc
jae
push
bndstx
movsb
lea
add
decb
les
fcomp
mov
cmpsb
in
jmp
xchg
xor
push
gs
cmp
test
data16
and
cwtl
lret
jo
aam
lahf
fisubrs
jle
jbe
jo
inc
out
dec
mov
movsb
aam
test
mov
ret
in
jmp
lods
test
adc
sub
xchg
dec
scas
fsubrl
push
add
jb
jo
adc
cmp
lds
dec
rcr
mov
fistps
enter
adc
jmp
dec
xchg
jb
mov
or
pusha
shlb
sub
fs
sarl
push
push
addr16
movsl
xor
pop
xchg
pop
jae
adc
jl
push
and
xor
out
cmovno
or
lahf
pop
sahf
pop
fdivs
add
pop
jb
sbb
sbb
loope
aam
sbb
dec
pop
addb
add
aam
fwait
aas
jmp
popa
popf
pop
jo
xor
mov
jo
repnz
nop
jb
pop
leave
pop
sbb
aaa
icebp
mov
insb
int
shl
test
inc
out
movsb
mov
pop
shrl
mov
std
rcrl
inc
add
pop
shll
push
mov
xchg
ret
sbb
lcall
sbb
into
lods
push
jno
jb
sbb
jbe
jmp
lcall
jg
fisubrs
fcomi
push
add
cmp
addl
add
mov
xchg
and
mov
fwait
xor
mov
aam
pop
mov
push
jo
push
dec
jb
int3
data16
fisubs
fucompp
inc
xor
mov
mov
icebp
mov
inc
loope
lret
aam
stos
aas
mov
es
lret
gs
and
mov
pop
insl
xchg
in
jbe
lret
and
cld
xchg
out
aas
ret
sbb
pop
xlat
testl
stc
andb
mov
jle
or
pushf
sbb
je
jno
cmp
mov
lods
fbstp
lret
jb
shrl
mov
adc
pusha
in
movsl
dec
sbb
test
xchg
push
sbbl
add
rorl
mov
push
sub
das
dec
mov
icebp
jns
into
call
sub
and
pop
pop
pop
test
pop
gs
push
stc
sub
fsubl
add
ja
adc
test
mov
push
mov
or
cmpb
dec
inc
or
adc
pop
scas
shrb
outsb
lcall
iret
mov
jmp
push
mov
or
mov
cltd
pop
inc
cmp
fidivrs
sub
ret
mov
or
rcrb
mov
and
fisubs
cmp
mov
out
push
popf
xchg
pop
xchg
lcall
add
aad
jo
adc
cli
mov
fmull
and
fs
aad
jns
lds
nop
lds
mov
dec
maskmovq
notl
and
mov
test
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
fcmovnu
leave
call
mov
and
xor
sbb
xchg
stos
insb
push
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
fcoml
mov
movsl
sti
and
jns
roll
in
rol
dec
add
add
cmp
inc
sub
mov
and
and
mov
inc
stos
pushf
adc
mov
inc
add
pop
dec
sbb
lahf
sub
fildll
stc
mov
out
sti
lret
sar
loope
xor
les
sbb
test
mov
jl
jnp
cmp
xor
sub
mov
aad
mov
lods
aad
mov
jmp
lahf
adc
pusha
rcrb
popa
or
mov
or
mov
mov
jge
dec
jmp
lret
inc
stos
sbb
fisubl
sbb
sub
lahf
xlat
pop
into
clc
xor
popf
jb
xchg
sub
int3
pop
and
mov
dec
xchg
clc
insl
push
hlt
dec
addr16
jne
cltd
fimuls
jb
mov
shrb
stos
or
mov
jno
mov
inc
push
xchg
pop
sbbb
sbb
xchg
test
ret
test
mov
cmpb
adc
inc
in
xlat
mov
inc
and
jmp
popa
test
jo
mov
or
mov
push
sbb
mov
sbb
mov
rcl
cwtl
pushf
xchg
sbb
sbb
sub
pop
pop
jo
cmpsl
cwtl
arpl
loope
inc
or
or
dec
sarl
sub
pop
pop
out
mov
mov
out
test
in
xchg
jmp
ret
xchg
and
cmpsb
out
mov
cmp
fnsave
sbb
adc
cmp
pop
sub
idiv
lea
xchg
out
loope
dec
xchg
dec
mov
lcall
sub
adc
mov
and
jns
roll
in
rol
dec
paddusw
mov
out
pushf
pop
dec
sarb
sub
aas
repz
test
xchg
xchg
out
pop
stos
push
insb
aad
sbb
inc
lahf
push
xchg
adc
les
jmp
push
aaa
repz
rcrl
test
roll
in
inc
pop
xchg
adc
and
cmp
les
fistl
lods
shrb
test
fidivs
test
xchg
bnd
icebp
sbb
mov
rclb
or
push
sbb
nop
lock
xchg
mov
cltd
xor
in
jge
sbb
inc
mov
cltd
xabort
add
cltd
xchg
inc
out
call
jl
push
sbbl
add
mov
rol
xchg
dec
sahf
dec
movsb
adc
fsts
or
push
sahf
rorl
lahf
lds
push
xchg
iret
rcrl
femms
mov
hlt
mov
pop
lock
jg
repnz
out
fsubl
call
push
insb
fcmovne
sbb
dec
lret
sbb
mov
lcall
mov
fbstp
cmpsb
or
jp
cmp
stos
mov
or
inc
mov
pop
outsb
les
push
mov
xor
jecxz
fwait
pop
jp
mov
loop
mov
in
mov
leave
loop
in
nop
xchg
sbb
and
jb
mov
rol
adc
lret
js
inc
xchg
pop
mov
stos
icebp
mov
dec
adc
cmpsb
jnp
enter
inc
cmpsb
inc
test
inc
mov
or
in
dec
sbb
addl
mov
jmp
mov
cmp
mov
popa
push
mov
fldt
dec
popf
mov
pop
mov
jecxz
push
xchg
mov
jbe
mov
arpl
sbb
out
cmpsl
mov
cli
pop
and
iret
inc
sbb
xor
leave
sbb
mov
pop
jno
mov
xchg
jmp
movsb
aaa
mov
gs
mov
pop
sub
les
xchg
jne
sbb
or
cmp
sbb
movsl
insb
popf
adc
call
inc
push
dec
pop
inc
mov
out
push
nop
add
add
sub
sbb
mov
mov
adc
dec
and
inc
or
push
pop
lock
lahf
outsl
aas
add
outsl
or
or
push
out
leave
sbbb
sbb
mov
int3
inc
push
xchg
nop
fwait
and
gs
das
in
cmc
hlt
imul
adc
jge
mov
or
mov
jno
mov
repz
pop
and
addb
mov
jbe
add
icebp
mov
nop
pop
and
lret
icebp
ss
js
fs
inc
mov
stc
dec
dec
cmpsb
xchg
mov
mov
lcall
dec
rcr
jae
movsb
jno
inc
rorb
fmuls
pop
das
or
push
out
mov
movsl
or
jae
mov
xchg
sbb
add
int
dec
push
xchg
loop
iret
xor
fwait
imul
data16
mov
xchg
sbb
add
inc
mov
dec
aam
inc
fbstp
adc
mov
in
cmpsb
fsubrs
aaa
mov
adc
call
push
ret
insl
push
andb
cmp
or
cmp
xchg
sub
lret
mov
shl
pop
and
xorb
divb
popa
or
mov
jno
mov
repz
pop
and
addb
mov
and
sbb
inc
fs
xor
mov
xor
ror
mov
ja
out
jne
stc
xchg
dec
sahf
xchg
mov
cli
mov
lcall
dec
rcr
jae
fidivl
inc
fmuls
fmuls
pop
das
or
stos
out
mov
mov
jnp
mov
xchg
sbb
add
jnp
mov
mov
mov
int3
scas
adc
lods
mov
inc
shlb
add
mov
add
inc
mov
dec
shlb
adc
mov
add
scas
mov
ljmp
fnstcw
mov
mov
cwtl
push
andb
bnd
add
xchg
aad
hlt
lret
sbb
or
jmp
fwait
shrb
stos
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
dec
mov
adc
mov
mov
sbb
leave
pop
movsb
lret
movsl
ret
insb
test
rcl
dec
jle
cmp
sbb
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
dec
outsl
xor
adc
test
lods
or
adc
xchg
fsts
cld
ret
xor
dec
push
icebp
leave
cwtl
mov
mov
ss
add
ret
lods
popf
andl
addr16
mov
dec
and
inc
or
inc
pop
jno
and
std
bound
outsl
movnti
imul
out
leave
sbbb
sbb
xor
cmp
jmp
cmpsb
dec
pop
imul
fsubp
mov
fisttpll
sbb
repz
dec
call
push
xor
iret
int3
pushl
repnz
mov
adc
lret
inc
sbb
pop
mov
stos
sbb
iret
pop
testl
rorl
mov
push
lret
sbb
sbb
movb
in
jmp
adc
test
mov
sbb
xchg
fbld
sub
lret
jnp
out
adc
gs
scas
cs
icebp
leave
in
mov
add
stc
sub
and
adc
mov
add
jge
xchg
sub
subb
movsb
fs
mov
int3
loope
inc
and
es
repz
dec
jmp
pusha
xchg
adc
int3
pop
and
mov
enter
outsb
fisubrs
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
rorl
cmc
lret
push
adc
xor
jns
mov
add
cmc
lods
dec
lds
add
lods
movsb
sbbb
sbb
jmp
inc
sub
mov
add
cli
jne
repnz
mov
pop
mov
jae
lds
cmp
ret
or
enter
stos
jge
dec
or
cld
jp
add
sbb
xor
and
or
jge
inc
push
dec
pop
inc
mov
out
push
fmul
test
rorb
inc
mov
xor
fsub
cmp
imul
xchg
mov
push
jns
enter
cmpsb
fisttpl
sub
lret
cs
mov
enter
mov
xchg
stos
push
fwait
imul
sub
inc
xchg
ficomps
fsts
jmp
in
mov
loopne
pop
daa
setae
jecxz
jp
push
iret
sbb
mov
cltd
xor
std
js
aas
adc
mov
fs
out
fs
pop
stos
push
insb
xlat
lret
sbb
dec
into
xchg
mov
lcall
mov
fbstp
add
xchg
das
addr16
bound
loope
lea
fnsave
ljmp
add
push
fucomi
cmc
mov
enter
adcl
dec
cltd
sub
mov
adcl
push
or
lret
pop
and
outsb
test
push
fsubs
push
jmp
ret
push
jge
mov
jmp
std
mov
sti
and
stos
mov
mov
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
fsubr
mov
shlb
test
test
lahf
lret
in
rol
dec
add
add
cmp
ret
mov
sub
mov
fs
pop
cmpb
lret
xchg
dec
pushf
inc
stos
pushf
adc
mov
ja
cmp
aaa
stos
xchg
mov
das
pop
popf
scas
mov
jae
cli
jo
mov
or
mov
push
sbb
xor
scas
xorl
xchg
sbb
sub
adc
push
ret
scas
scas
pop
icebp
leave
bound
xorb
fwait
andl
xchg
push
out
mov
test
sbb
mov
adc
in
subl
push
gs
insl
or
xchg
sbb
popa
js
arpl
dec
fmull
enter
or
fimull
bound
imul
push
pusha
test
pop
and
mov
pop
dec
pop
dec
pop
iret
sti
mov
imul
shrl
sbb
inc
pop
adc
cs
sub
lods
xchg
sub
adc
sbb
std
test
pop
and
pop
dec
push
dec
push
dec
pop
fldt
jmp
movsl
push
jl
sbb
sub
sbb
or
stos
arpl
rcrb
sbb
jns
mov
fisttpll
jbe
lods
pop
xchg
adc
inc
mov
scas
fdivl
jo
arpl
add
push
push
inc
and
sub
dec
and
inc
and
xchg
cmc
mov
cwtl
imul
mov
mov
mov
jmp
lret
jne
cmpsl
movsb
inc
out
sub
sbb
sbb
das
lret
xchg
mov
cli
jmp
loop
pop
pop
mov
shr
xor
pop
loopne
mov
and
pusha
mov
lock
cmp
adc
cmp
mov
add
testb
iret
dec
fistpl
jp
sahf
inc
in
xlat
mov
inc
and
inc
dec
xor
pushf
lds
arpl
jo
inc
dec
xchg
shl
xchg
inc
pop
xchg
adc
sub
dec
outsl
les
pop
lahf
mov
aad
mov
add
dec
mov
jge
int3
scas
rcrb
ss
fdiv
sbb
sbb
loopne
or
inc
add
sbb
mov
and
dec
sub
xchg
cmc
mov
xchg
imul
lahf
xlat
mov
mov
push
lret
gs
movsb
inc
imull
xchg
dec
xorl
and
mov
xchg
cmp
xor
or
pop
divb
call
test
into
xchg
jecxz
lock
mov
sbb
out
mov
inc
cmp
add
std
dec
dec
jb
aad
xor
sbb
jecxz
cli
push
dec
sbb
popf
shrl
leave
test
scas
cli
sbb
adc
dec
popf
ljmp
pop
cmp
stos
xchg
pop
sbb
test
lcall
fimull
jae
lods
fwait
lods
jge
shrl
test
scas
mov
lahf
jecxz
enter
adcl
dec
icebp
sub
mov
adcb
adc
dec
mov
ror
sbb
pop
xchg
fistpll
stos
icebp
lea
dec
xchg
insl
or
or
stc
out
call
fmull
movsl
movsl
inc
mov
mov
cltd
sahf
inc
sub
sub
xchg
std
fwait
mov
repz
arpl
test
pop
ret
loopne
mov
lock
cmp
sbb
mov
fcompl
mov
jp
add
cmp
out
pop
and
mov
test
int
sbb
rcrb
adc
mov
mov
inc
lahf
push
lock
adc
lret
fucom
cli
mov
cld
mov
imul
pusha
inc
xchg
fsts
sbb
and
or
sub
sub
lods
xchg
neg
imul
inc
jb
lods
ret
sbb
mov
xchg
rorb
mov
dec
jg
leave
push
nop
adc
cli
stc
and
imull
mov
adc
or
in
mov
jnp
inc
push
mov
xchg
sbb
xchg
call
dec
push
adc
rcl
push
inc
cmpsb
inc
test
inc
mov
or
and
addl
mov
jno
inc
cmp
sub
ret
outsb
or
les
xchg
mov
cmp
testl
ret
cmp
outsb
inc
add
sub
mov
or
leave
lds
dec
pop
out
mov
repnz
jnp
inc
in
xlat
xor
test
xchg
test
fucomp
je
push
lret
into
xchg
rcrl
xor
jne
inc
push
lret
stos
xchg
fimull
fisubrl
pop
sbbb
cmp
add
inc
sbb
scas
jg
leave
dec
mov
std
cli
jnp
inc
mov
add
inc
orl
xchg
xchg
cwtl
ror
sub
andb
push
mov
xchg
cmpsb
or
pop
pop
rcll
fsubs
lahf
pop
pop
in
out
cmp
mov
or
rcll
int3
dec
fcoms
fidivl
bound
or
push
fiaddl
les
fstl
dec
cmp
int
mov
repz
mov
sbb
add
mov
and
mov
dec
ds
insb
mov
add
repnz
sbb
mov
push
inc
jne
aad
pop
lret
pop
imul
fimull
sbb
les
dec
inc
cmc
add
jl
add
cld
jp
add
sbb
xor
pop
and
or
dec
cltd
dec
mov
out
push
fmul
cmpsl
sub
rorb
add
mov
sbb
pop
xor
adc
xchg
xchg
and
mov
push
sbb
cmovae
fsubs
xor
push
and
andl
test
icebp
out
mov
sbbl
jle
addl
call
imul
fucomip
hlt
cmp
fists
iret
int3
out
aaa
jecxz
repnz
sbb
sub
inc
cmp
xchg
jo
jmp
cmp
jne
les
test
shlb
mov
lcall
lret
rcr
jae
add
sbb
test
mov
sbb
xchg
fbld
sub
lret
xor
sbb
push
mov
dec
jg
leave
push
nop
adc
scas
inc
xchg
cli
stc
and
fs
dec
xchg
or
sub
xchg
xchg
cwtl
rcl
sub
mov
adc
movsb
pop
jae
xchg
pop
rcll
fsubs
lahf
pop
cmp
mov
ret
mov
addl
cmc
mov
xchg
jmp
cmpsb
inc
pop
imul
fsubp
dec
mov
cmc
mov
inc
mov
dec
add
repnz
mov
jae
mov
mov
push
cmp
cltd
nop
loop
nop
pop
pushf
dec
and
ror
sbb
popf
adc
lahf
push
sub
sbb
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
mov
jle
cltd
adc
xchg
sub
ljmp
pop
stos
inc
xchg
fsts
mov
cmp
lcall
xchg
fwait
inc
repz
loop
inc
mov
pop
jb
or
inc
rcll
xchg
pop
pop
mov
sbb
test
in
xchg
jmp
ret
push
adc
xchg
std
bound
pop
and
fcoms
mov
inc
inc
mov
sbb
data16
addr16
je
addr16
fdivp
lret
sbb
or
pusha
mov
shrb
stos
popa
or
mov
jno
mov
hlt
movsl
ret
aaa
lods
inc
and
mov
sbb
insl
movsl
mov
cwtl
or
and
les
sbb
test
push
in
dec
sbb
pop
fstps
xchg
frstor
fisubl
mov
or
or
les
xchg
out
add
pop
mov
push
test
or
stos
xor
xor
fwait
cmp
lahf
adc
pusha
ret
popa
or
mov
or
mov
dec
shlb
sbb
out
ror
notb
push
fisubl
xchg
imul
insw
push
inc
push
dec
mov
psubusw
call
faddl
jle
lcall
or
sub
mov
rol
xchg
scas
sahf
dec
movsb
adc
fsts
in
ss
lcall
setae
jecxz
push
mov
fiadds
divb
add
mov
orb
xor
dec
and
iret
lds
jno
clc
lret
push
mov
cmp
inc
and
inc
jnp
push
dec
push
lret
pop
imul
inc
xchg
sub
nop
pop
dec
push
mov
xchg
stos
std
cld
dec
mov
jecxz
or
mov
aad
mov
add
dec
jb
mov
ficoms
sub
mov
xor
push
out
xor
pop
mov
and
or
in
mov
jnp
inc
push
mov
xchg
sbb
lret
push
pop
and
cmp
jb
pop
mov
jne
jecxz
out
fs
cmc
dec
dec
sbb
mov
mov
mov
mov
dec
aad
pop
repz
dec
call
cmpl
dec
lahf
lds
add
mov
or
xor
popa
mov
add
testb
movsb
ret
popf
fmull
repnz
stos
mov
jnp
inc
in
xlat
xor
test
xchg
mov
fucomp
je
push
lret
rcr
test
adc
and
stos
sbb
fisttpl
sahf
out
leave
add
mov
cmp
popf
adc
in
or
dec
pop
push
mov
out
push
fcom
test
or
dec
xor
push
dec
shlb
sbb
pop
xor
adc
and
mov
xchg
in
cmovae
fsubrp
fidivrl
loop
sbb
or
cmp
xchg
sub
andb
mov
fsubp
inc
mov
xor
mov
dec
add
repnz
mov
in
ljmp
mov
jae
mov
cltd
sbbb
enter
mov
decb
pop
and
mov
inc
stos
pushf
adc
mov
ret
ret
push
lret
jns
fildll
stc
mov
push
pop
fisttpll
test
or
push
into
arpl
xor
mov
lds
ljmp
cmp
loope
inc
pushf
shlb
lret
or
jnp
jg
scas
loope
pusha
ret
orl
fdivs
sub
push
mov
and
sub
test
push
xchg
adc
jno
fsubs
mov
mov
cltd
in
cmovae
fisubs
xor
push
and
addl
mov
push
lret
loop
imul
rol
xchg
lcall
fsts
imul
lods
pop
call
rcr
xor
mov
cmp
jp
add
in
mov
mov
sbb
leave
sbb
insb
test
fimull
mov
cmp
inc
and
stc
mov
fcomps
xchg
pop
in
push
sbb
sbb
xor
inc
sbb
or
stos
arpl
rcrb
in
mov
pop
jno
push
push
fsub
xlat
inc
pushf
shlb
lret
sub
jnp
jg
scas
loope
pusha
sar
orl
fdivs
sub
jb
scas
jbe
and
xor
dec
add
xchg
push
pop
cmpsb
fsubrs
pop
repz
lahf
pop
out
mov
mov
or
rcll
int3
dec
pop
push
rcr
lret
sub
mov
jne
or
dec
mov
dec
and
mov
mov
test
jo
out
daa
loope
in
mov
lock
loop
cmp
jbe
mov
leave
sarb
imul
out
push
testl
xchg
pop
lret
repz
fisubl
fisttps
lret
xchg
or
cwtl
adc
sbbb
stos
cmp
xchg
fisttpl
sahf
sub
adc
mov
mov
adc
popf
adc
or
dec
cltd
push
mov
out
push
rolb
in
sbb
mov
mov
int
into
sbb
mov
imul
mov
popf
inc
jns
and
xor
cmpsb
roll
mov
in
int
pusha
bound
cmpb
je
test
stc
mov
test
push
adc
sub
js
test
or
pop
jg
mov
add
imul
inc
out
repz
cmp
div
movsl
rcrb
mov
adc
lret
cmp
mov
fistpl
sbb
sub
mov
fldcw
popf
mov
mov
mov
or
bound
stos
xchg
sbb
test
sub
sahf
nop
fistl
mov
jmp
dec
loopne
cmpsl
push
push
fucomi
cmc
mov
enter
adcl
mov
adcl
dec
sti
sbb
pop
and
pop
out
loope
fwait
cmp
or
push
mov
xchg
sub
test
cmpsb
jnp
clc
jno
jecxz
sbb
add
cwtl
ficomps
or
lea
out
and
push
xchg
mov
filds
xor
mov
iret
ret
clc
shll
mov
repz
pop
and
addb
mov
test
sbb
leave
pop
mov
movsl
ret
insb
test
ljmp
mov
sbb
mov
cmp
xchg
mov
popf
lret
mov
adc
les
inc
scas
ja
add
es
lds
ljmp
sbb
lods
pop
xchg
mov
push
inc
mov
scas
fdivl
jo
arpl
add
or
fwait
push
dec
mov
and
dec
xchg
cmc
mov
push
cmc
std
push
mov
fwait
adc
shrb
inc
cmpsb
inc
test
jb
inc
mov
sub
aas
test
pop
or
cltd
sahf
ret
dec
mov
ret
xlat
mov
push
jne
pop
std
cmp
sbb
adc
mov
loopne
jmp
add
jnp
mov
adc
ss
jne
hlt
mov
fwait
jb
cwtl
lret
inc
sub
rcrb
cli
stos
xor
and
xchg
nop
cmp
int
dec
mov
fs
fistpll
arpl
lds
mov
mov
stos
js
scas
xchg
fisttpl
sahf
pop
out
sbb
add
sub
pop
cmpsl
pop
fs
lods
loopne
and
or
jge
inc
pop
dec
pop
pop
mov
out
push
fcom
jg
out
in
or
dec
xchg
adc
dec
jmp
xchg
jp
imul
push
jns
enter
ljmp
fnstcw
mov
mov
cwtl
push
sbbb
mov
lret
cmpl
or
in
mov
lods
negl
into
adc
rcrl
rcll
or
mov
cltd
xor
std
leave
inc
pop
adc
mov
fs
out
jecxz
mov
cwtl
pop
stos
push
insb
xlat
lret
sbb
inc
fists
cmpsb
jb
jo
int3
fnstenv
cmp
in
test
nop
sbb
sub
adc
stos
sub
jne
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
cld
ret
add
sbb
scas
jg
leave
cwtl
cwtl
xlat
xchg
js
mov
ss
inc
rclb
insl
ret
lods
nop
andl
inc
aam
inc
mov
fsub
sub
imul
push
jns
enter
ljmp
fnstcw
mov
mov
cwtl
push
orb
mov
lret
cmpl
pop
mov
repz
mov
imul
rorl
dec
cltd
fdivrp
mov
imul
inc
sbb
test
lcall
ss
iret
mov
dec
lods
dec
and
mov
test
push
xor
bnd
loope
push
out
lret
sar
xor
sti
fwait
into
ljmp
jae
xchg
lret
rcll
sub
dec
adc
xchg
fsts
xchg
lds
xor
sahf
xchg
fwait
pop
jo
and
and
pusha
push
cwtl
add
or
inc
test
cltd
jae
mov
sbb
std
inc
jp
add
inc
sbb
cmpsb
gs
pusha
mov
lods
int
pop
bound
cmpb
je
test
ljmp
cltd
sahf
push
xor
lea
cmp
pop
jg
out
movsl
push
lea
pop
and
mov
pop
push
dec
push
dec
cltd
mov
imul
cmovb
cmp
mov
daa
repnz
inc
sbb
push
jmp
lds
push
cli
mov
xchg
ret
and
mov
mov
mov
sub
push
cmp
and
or
cld
xor
and
jp
rorl
xchg
out
leave
dec
mov
mov
mov
jp
shr
rcrl
or
leave
push
nop
push
push
scas
inc
xchg
ret
sub
pop
mull
mov
dec
mov
xchg
sub
fsubs
adc
and
jae
xchg
cmpsb
enter
rcll
fsubs
lahf
pop
push
in
popa
jo
inc
mov
inc
bound
mov
test
loopne
add
xchg
cmp
xor
or
pop
loope
call
test
lcall
into
xchg
jecxz
jg
push
div
jmp
sbb
imul
popa
mov
adc
lret
xor
sbb
jecxz
sbb
mov
test
cwtl
mov
aaa
stos
xchg
pop
ljmp
jmp
popf
ljmp
adcb
loope
addb
sub
dec
push
sahf
push
fistl
fimull
jae
es
lods
jge
shrl
cmpsl
pop
push
fucomi
cmc
mov
pushf
repnz
pop
mov
ds
mov
add
push
sti
or
rcr
mov
out
loope
jp
imul
xchg
mov
push
cltd
scas
enter
ljmp
adc
inc
cltd
jmp
and
mov
inc
pusha
lcall
jmp
ret
add
xchg
cmp
or
pop
jg
xchg
bound
pop
and
mov
pop
push
dec
push
dec
pop
mov
imul
add
xor
add
lods
mov
mov
leave
out
insb
test
push
sbb
test
push
in
xor
popa
xor
cld
arpl
jo
inc
dec
xchg
push
fsts
pop
dec
push
pushf
mov
pop
mov
jecxz
cmp
mov
aad
mov
add
dec
test
mov
shr
repnz
fstps
sbb
mov
or
mov
mov
push
and
dec
xchg
dec
and
sbb
jb
adc
ret
js
lahf
xlat
mov
or
push
lret
jne
cmpsl
movsb
inc
push
sub
sbb
sbb
das
lret
mov
shrb
out
das
clc
cmc
xor
pop
cmp
mov
popa
push
mov
aam
sti
stos
mov
jnp
mov
aad
popa
mov
adc
ss
xchg
mov
loop
fisubl
xor
rorl
dec
hlt
add
lret
push
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
inc
mov
pop
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
loop
xchg
sbb
add
mov
test
in
popa
rol
js
xchg
cmpsl
test
leave
in
and
add
dec
sbb
add
cwtl
inc
cwtl
adc
lods
lret
xor
adc
fs
add
xor
inc
and
movsl
pop
repz
int3
xlat
xchg
mov
out
cmpsl
ljmp
icebp
inc
gs
fsubrs
test
ret
int3
lcall
mov
movsl
sti
and
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
inc
sbb
push
jmp
lds
out
stc
mov
push
in
stos
dec
fsubr
jae
mov
arpl
dec
in
xchg
dec
bound
xchg
add
lcall
jecxz
loopne
fistl
cltd
xchg
aad
push
xor
ficoms
stos
popf
scas
jg
stc
icebp
xor
icebp
pushf
out
sbb
or
inc
sbb
cmp
in
mov
jnp
inc
push
mov
xchg
sbb
mov
and
sbb
dec
pop
sbb
out
call
jl
jnp
popf
out
movsl
inc
out
addl
mov
jno
fidivrl
dec
insl
sub
ret
sbb
out
add
jl
mov
movsl
sti
and
pop
lock
in
rol
dec
mov
movsb
rcrl
sarb
sub
aas
jb
imulb
js
sub
lret
inc
and
stc
fimull
push
cmc
fstpt
stos
inc
and
scas
xchg
frstor
fisubl
jno
inc
fmuls
fmuls
jp
or
les
inc
or
add
leave
cmp
mov
stos
test
popf
adc
int3
or
jge
inc
pop
dec
cltd
addr16
out
push
push
or
dec
call
adcl
dec
cmp
add
adc
jns
fsubs
mov
mov
cltd
in
cmovae
rcr
arpl
clc
cmp
ja
cltd
push
bound
in
mov
je
sub
dec
ja
sub
xlat
adc
ret
lea
mov
cmp
and
mov
test
fwait
lahf
aas
sub
bound
jnp
mov
adc
sub
addl
popa
cmpsl
lcall
sarl
push
sub
movsb
fldcw
fdivrl
pusha
cmc
fbstp
push
cmp
push
xchg
dec
bound
push
inc
lcall
mov
mov
mov
sarl
mov
push
lods
inc
pop
lcall
fwait
out
pop
or
xor
ss
ret
rclb
andl
addr16
test
and
and
inc
or
jge
sbb
inc
mov
cltd
inc
adcl
and
mov
ret
hlt
mov
inc
inc
mov
mov
xchg
jmp
cmpsb
inc
imul
fsubp
fs
pop
mov
shr
xor
aam
sti
repnz
jmp
add
mov
lret
jnp
mov
adc
ss
xchg
cli
out
pushf
pushf
and
sub
movsl
mov
mov
dec
sbb
lret
sbb
inc
lahf
push
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
out
dec
stos
cltd
adc
xchg
sub
pop
inc
stos
xchg
fimull
cli
outsl
sub
pushf
fcoml
mov
test
lods
popa
sti
js
xchg
cmpsl
test
and
adc
mov
add
jge
jb
pop
ret
data16
mov
test
in
fwait
jmp
ret
xchg
sub
sahf
xor
fwait
insl
ds
jb
outsb
sub
rorb
lea
or
lea
fildll
loopne
push
negl
push
adc
sbb
pop
mov
daa
out
out
mov
lock
loop
cmp
lock
cmpsl
push
sarb
imul
lret
fisubl
and
dec
push
dec
push
dec
pop
movsb
fldt
jmp
adc
test
mov
sbb
mov
push
outsb
les
push
mov
xor
add
jnp
xchg
sub
mov
sbb
repnz
sub
rcrb
add
shlb
push
or
lret
pop
add
outsb
test
push
fsubs
adc
or
daa
pop
fisubl
cmp
fnsave
adc
cltd
push
add
mov
push
or
lea
aad
out
pop
fnstenv
shl
pop
and
orb
imul
fucomip
hlt
cmp
fists
iret
int3
lret
aaa
jmp
sbb
sub
cmp
xchg
jo
arpl
sbb
clc
test
incl
cmpsl
adc
lret
mov
lea
xor
mov
mov
mov
test
ret
leave
or
xor
mov
jp
add
sbb
sub
pop
and
or
leave
push
nop
push
sbb
stc
and
jge
pop
mull
mov
dec
mov
lret
in
mov
testb
movsb
xlat
push
jno
sub
popf
push
stos
xor
adc
pop
fsubs
mov
gs
xchg
enter
aam
sub
fidivl
sbb
mov
jne
jnp
xchg
repz
arpl
test
jecxz
loopne
mov
out
into
jge
sbb
mov
cmp
mov
add
cmp
lock
mov
leave
sarb
imul
clc
test
mov
xchg
dec
sbb
mov
insl
inc
jne
jge
pushf
arpl
jo
inc
mov
adc
xchg
inc
pop
xchg
adc
sub
dec
outsl
les
fistl
rcl
jb
sub
pusha
mov
ficoms
fwait
lods
and
mov
scas
jg
stc
icebp
xor
push
jecxz
testb
adc
sub
or
sbb
mov
pop
xchg
jmp
out
sbb
mov
inc
fstl
jmp
test
sti
xor
cmpsl
in
popa
bound
push
adc
cwtl
shl
mov
add
in
aad
pop
cmp
pop
xlat
adc
ret
lea
mov
cmp
and
mov
test
fwait
lahf
aas
pop
sbb
lcall
pop
xchg
ret
mov
mov
cmpb
lret
xchg
dec
pushf
inc
stos
pushf
adc
mov
inc
add
push
dec
sbb
lahf
sub
fildll
stc
mov
scas
sti
cmp
pushl
shll
mov
pop
daa
sbb
test
lret
add
or
sub
mov
jbe
sbbb
cmp
and
jo
into
scas
popa
jae
hlt
repz
lods
loop
inc
mov
pop
jb
movb
aam
gs
xor
add
jge
xchg
sub
xchg
or
mov
mov
cltd
inc
jl
cwtl
pop
fs
xor
fsubs
mov
int3
inc
cmp
sbb
jmp
cmpsb
inc
push
imul
fisubs
fcomps
and
cmp
and
mov
test
sahf
mov
in
ljmp
jecxz
movsl
mov
loopne
sarb
lock
mov
leave
sarb
imul
test
popf
stos
push
sub
movsb
leave
test
jl
cmovg
stc
mov
push
lahf
fisttpll
test
or
add
sub
lods
test
mov
lods
testl
push
sbbb
sbb
add
leave
shll
stos
push
fwait
leave
in
and
cmovbe
mov
add
jge
jb
pop
ret
out
data16
mov
test
in
fwait
jmp
ret
xchg
and
cmpsb
sahf
mov
cmp
fnsave
out
sbb
aaa
and
mov
dec
dec
mov
cltd
sahf
mov
mov
fisubs
fcomps
and
cmp
and
mov
test
fwait
lahf
aas
mov
mov
sbb
lret
lcall
cwtl
lahf
ret
mov
mov
dec
mov
sbb
iret
adc
xchg
adc
mov
sbb
jge
rorl
mov
push
sub
xchg
and
mov
jge
leave
mov
pop
sub
les
push
dec
push
stos
rcrb
xor
adc
jne
ja
lods
loopne
and
jmp
popf
in
data16
js
lods
das
fbstp
shlb
or
sbb
popa
addr16
inc
test
and
and
inc
add
and
das
arpl
xchg
cltd
test
cmpsb
jnp
call
pop
push
add
cwtl
cmp
jmp
inc
addr16
mov
sbb
add
cld
mov
shrb
daa
sbb
fstl
dec
mov
daa
stc
into
jns
fisttps
mov
jp
add
cmp
lock
cmpsl
push
sarb
imul
test
push
xor
bnd
loope
push
sub
xor
sti
sti
into
fidivs
pop
mov
ljmp
adc
or
out
out
js
cmp
push
fistl
cmp
mov
sub
pop
inc
sub
fwait
js
adc
cli
jnp
inc
mov
stc
frstor
mov
mov
cmp
sbb
mov
inc
xchg
jmp
fimuls
and
mov
dec
pushf
push
gs
fwait
mov
mov
fldenv
pop
arpl
cmp
xor
and
mov
dec
dec
mov
cwtl
sahf
insl
push
out
or
xor
ja
xor
mov
call
push
sahf
rorl
inc
lds
push
xchg
iret
rcrl
add
or
sub
mov
sbb
jmp
iret
mov
dec
xor
and
mov
test
rorb
lret
js
fildll
stc
mov
push
push
fldl
test
or
mov
cmp
mov
fistl
mov
jmp
adc
mov
data16
scas
mov
lahf
jecxz
enter
adcl
mov
adcb
dec
sti
push
aam
jno
push
pop
out
data16
mov
test
in
xchg
jmp
ret
push
gs
fwait
mov
mov
clc
cmp
iret
inc
in
rorb
out
jp
es
test
xlat
adc
ret
in
test
fsts
mov
cmp
jne
popa
or
mov
jmp
pop
mov
push
push
aam
loope
testb
int
test
jp
lcall
mov
sbbl
test
push
test
cwtl
mov
aaa
stos
xchg
mov
scas
sahf
popf
mov
mov
mov
or
jo
xor
push
sbb
adc
jae
imul
pop
cld
ret
and
inc
sbb
scas
popa
roll
repz
loop
inc
mov
pop
jb
or
shlb
add
jge
jb
pop
and
xor
clc
push
mov
mov
dec
cwtl
push
gs
fwait
mov
mov
fldenv
pop
gs
je
or
and
jne
dec
add
mov
in
lea
movsb
out
and
push
xchg
mov
xlat
cmp
fdiv
xor
jnp
iret
ret
clc
shll
mov
add
and
movl
inc
sub
jg
repnz
adc
mov
cmpl
mov
inc
mov
stc
lret
xchg
mov
cld
mov
lcall
dec
rcr
jae
or
arpl
loop
daa
or
lods
xchg
in
imul
pop
jb
lods
rcrl
hlt
push
push
pushf
rorb
mov
dec
mov
or
out
push
addb
inc
sbb
mov
mov
fucomi
mov
jnp
inc
push
mov
inc
or
mov
mov
cltd
inc
xchg
mov
mov
arpl
mov
lret
xor
sbb
push
pushf
data16
cmc
clc
pop
mov
cmc
mov
add
push
mov
popa
push
mov
and
mov
daa
add
push
cs
sahf
repz
pop
and
cwtl
pop
lock
jl
or
insl
movsl
mov
cwtl
or
fs
mov
sbb
test
dec
sub
push
lahf
push
sub
xchg
or
pop
das
pop
clc
mov
push
dec
fisubl
jno
inc
fmuls
fmuls
lcall
adc
pop
mov
inc
lcall
pusha
lods
add
add
jnp
mov
jns
mov
iret
js
mov
pop
fdiv
and
adc
rcrb
add
shlb
mov
test
sbb
and
mov
imul
push
fisubs
xchg
imul
pop
adc
rcl
and
cmpsb
inc
test
jp
inc
mov
and
loop
pop
pop
repnz
int3
xchg
jle
push
inc
mov
bound
xchg
mov
out
mov
loopne
sbbl
sti
fstl
dec
mov
mov
lock
loop
inc
sbb
mov
ret
test
mov
test
cli
mov
ja
jmp
xchg
sbb
sar
xchg
frstor
cmp
xchg
orl
xchg
dec
bound
push
inc
lcall
or
sub
inc
jae
lods
pusha
fildl
ret
fwait
cmpsb
enter
pusha
jle
cs
icebp
leave
in
mov
out
and
adc
mov
add
jge
xchg
sub
in
xor
popf
inc
jns
adc
lret
sub
cmpsb
jnp
enter
iret
xchg
add
popf
jb
insb
sub
je
xor
cmc
mov
dec
dec
mov
mov
cs
pop
fptan
adc
pop
and
xor
jge
mov
or
mov
jno
mov
movsl
add
add
mov
dec
xchg
or
add
ret
shl
aas
repz
imulb
js
scas
mov
inc
mov
stc
cmp
push
cmc
fstpt
stos
inc
pop
ljmp
fucom
jmp
fdivr
prefetchnta
imul
mov
xchg
stos
std
cld
dec
mov
lds
arpl
xor
scas
xor
scas
mov
lahf
fists
sbb
push
pop
xor
sbb
inc
sarl
xchg
pop
pop
sbb
fwait
xor
xchg
push
sub
cmpsb
fidivl
test
ret
cmpsb
sahf
jno
cmp
fnsave
dec
mov
jecxz
mov
out
in
hlt
xor
cmp
mov
adc
xchg
cmp
or
pop
jg
rcll
rorl
mov
push
adc
mov
jns
mov
idivb
test
mov
xlat
mov
out
popf
pushf
sub
sub
movsl
mov
mov
xor
and
xchg
xchg
dec
sbb
int
dec
mov
cmpsl
mov
jge
cmpsl
jae
add
cmp
and
sub
test
push
stos
stos
rorl
xchg
out
jl
add
xor
pop
pusha
ja
lods
loopne
and
jmp
popf
in
data16
js
lods
das
fbstp
ret
sbb
dec
add
mov
inc
mov
inc
aam
or
xchg
fsub
sub
adc
repz
rolb
inc
add
ljmp
cltd
mov
mov
mov
cwtl
push
cmpb
xor
push
hlt
dec
movsb
popf
out
loop
cmp
xor
add
jge
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
jae
fs
cmp
adc
mov
fs
icebp
mov
dec
jo
mov
sahf
pop
iret
xchg
cmp
scas
mov
sti
fisubl
fbstp
xchg
in
or
test
xchg
mov
loop
add
mov
mov
leave
xchg
fwait
adc
loopne
cmp
or
mov
fmull
jnp
dec
push
xchg
inc
fwait
imul
data16
stos
into
in
add
dec
mov
pop
repnz
out
mov
or
movsl
cli
jg
inc
insl
xchg
imul
adc
mov
popf
push
lahf
pop
daa
sti
mov
ret
lock
inc
inc
mov
cwtl
pop
or
gs
mov
movsb
popf
out
loop
cmp
or
pop
jg
jno
inc
lea
pop
and
mov
and
push
adc
mov
jns
mov
add
mov
adc
add
mov
divb
repnz
inc
sbb
push
jmp
lds
out
stc
pop
inc
mov
push
lret
fucom
cli
mov
cld
mov
or
test
xchg
mov
sbb
jne
jg
lds
ja
lds
ljmp
sbb
loope
inc
xor
or
jnp
jg
scas
loope
out
js
mov
adc
rolb
ja
mov
cli
dec
test
mov
add
insb
xchg
mov
insl
xchg
imul
mov
cmovae
fisubs
xor
push
and
addl
adc
cmp
xchg
sub
popf
out
mov
mov
lcall
and
lods
sti
and
push
adc
mov
jns
mov
xor
sbb
mov
cltd
inc
in
xor
mov
negl
sbb
test
push
in
xor
rcll
outsl
mov
sbb
fcoms
sbb
jno
jb
test
jo
push
scas
push
stos
loopne
jb
pop
stos
jne
vsubss
jle
mov
add
fucompp
sbb
shll
jle
scas
push
fdiv
hlt
jo
arpl
rcll
rorb
rorl
mov
push
mov
stos
icebp
lea
sub
aaa
pop
aam
popa
jne
outsl
push
ret
jae
sti
and
daa
loop
cmc
mov
pop
mov
xchg
inc
in
mov
sub
test
fninit
shrb
push
popa
pop
mov
aam
sti
stos
mov
jnp
mov
lds
mov
adc
ss
cmp
mov
mov
inc
stos
adcb
mov
in
pop
and
mov
mov
test
mov
ret
cmp
xchg
in
push
jl
sbb
and
or
stos
jge
dec
fdivs
mov
jbe
sbbb
sbb
add
mov
or
jo
cmpsl
test
fwait
leave
in
and
or
dec
sarl
sub
pop
addr16
xchg
and
push
sbb
inc
xchg
adc
mov
out
push
or
push
mov
xlat
pop
fstps
fldenv
add
and
sub
xor
loop
mov
xor
cmp
pop
mov
push
jnp
aaa
je
xor
mov
add
mov
icebp
dec
sbb
mov
je
aas
adc
cwtl
loope
and
ja
xchg
pop
ret
xchg
pop
fisubrl
pusha
std
fisttps
lret
xor
mov
inc
or
test
push
or
xchg
lcall
sti
bound
add
jae
pop
pusha
fwait
mov
lds
push
es
pop
fists
add
add
sbb
call
les
xchg
sub
xor
dec
or
xchg
push
pop
cmpsb
fsubrs
pop
repz
stos
insb
jmp
jne
pop
sbb
xor
fmuls
mov
inc
inc
mov
sbb
aaa
ljmp
cmp
inc
inc
and
xor
xlat
scas
neg
lea
pop
and
mov
pop
push
dec
push
dec
pop
icebp
sti
mov
imul
lret
mov
ret
sbb
dec
push
xlat
test
divb
cwtl
lret
inc
sub
push
xor
inc
push
sub
jge
cli
lret
cmpsl
cmpsb
push
clc
mov
jno
cmpsl
jae
lds
cmp
and
or
cld
xor
and
jp
rorl
xchg
fistl
jae
ficompl
mov
sub
jge
pop
xor
fwait
cmp
lahf
adc
pusha
lock
mov
addl
or
adc
dec
fmuls
xchg
cmc
xchg
xchg
sbb
pop
inc
pop
imul
sub
mov
dec
jmp
popa
xchg
xor
les
loopne
hlt
mov
xorb
sub
mov
cmc
mov
add
add
lret
popa
push
mov
and
pop
cmp
in
ljmp
add
loope
dec
xchg
or
cltd
inc
in
xor
mov
negl
sbb
test
push
in
dec
pop
dec
je
adc
cmp
push
lret
into
fidivl
adc
insb
inc
dec
cmpsl
xchg
test
cmp
xchg
add
jo
push
mov
push
stos
inc
xchg
fsts
mov
mov
pop
mov
jecxz
pushf
sahf
xchg
fwait
inc
loopne
sbb
aad
jo
mov
pop
jb
add
aam
or
mov
fs
inc
fmuls
xchg
cmc
mov
push
cmc
bound
pop
inc
push
insl
fwait
adc
push
mov
in
int
aam
xor
cmpb
es
dec
pop
xor
dec
xchg
jle
mov
das
sbb
hlt
imul
push
mov
lret
popa
push
mov
aam
sti
sub
jnp
mov
imul
cmp
mov
sub
pushf
fmuls
mov
inc
movsb
dec
and
mov
test
pop
dec
sbb
cmpsl
fildll
stc
mov
adc
push
fldl
test
or
cmp
mov
pop
push
test
mov
mov
mov
xchg
movsl
jg
mov
adc
test
xor
jecxz
repnz
fstps
push
enter
add
dec
rorl
dec
and
pop
pusha
out
data16
mov
test
in
xchg
jmp
ret
push
gs
fwait
mov
mov
fldenv
pop
in
jns
xor
xor
and
mov
dec
dec
mov
cwtl
sahf
insl
push
js
cs
imul
cmp
lcall
mov
movsl
sti
and
push
adc
mov
jns
mov
div
inc
fs
mov
adc
lret
lock
add
lods
xchg
sub
adc
mov
nop
test
pop
and
fnsave
rcll
sub
dec
sbb
in
push
jl
sbb
and
or
stos
jge
dec
fcoms
dec
jns
fnsave
adc
in
add
mov
out
popa
sti
pop
jo
cmpsl
test
fwait
leave
in
and
movb
shlb
add
jge
jb
addr16
adc
fcoms
sbb
jmp
jb
adc
sti
xor
fsubl
cmc
in
push
je
inc
int
loop
pop
pop
xor
dec
xchg
jle
push
inc
mov
lret
shll
out
mov
sub
mov
into
fwait
lahf
aas
out
adc
sbb
bound
popa
mov
adc
sub
cld
push
les
popa
cmpsl
fxch
adc
insl
stos
push
sub
and
inc
loop
jae
sbb
mov
sbb
lods
and
xchg
add
cli
inc
cmp
scas
test
mov
add
jne
lret
pop
jae
pusha
mov
cld
loop
adc
test
inc
mov
add
or
inc
mov
rcll
xchg
mov
insl
xchg
imul
adc
mov
xchg
cltd
xabort
xor
sti
sti
and
repz
clc
inc
mov
pop
mov
xchg
inc
in
mov
sub
test
fninit
xchg
sahf
repnz
popa
pop
mov
aam
sti
stos
mov
jnp
mov
lcall
or
dec
add
and
insl
movsl
imul
dec
and
mov
test
dec
pop
jae
mov
imul
pop
pop
lods
mov
mov
jno
inc
mov
or
cmp
adc
xchg
fbld
sub
lret
xor
mov
or
leave
push
nop
bound
stc
and
sub
sbb
shlb
add
jge
jb
pop
stc
repnz
movsl
ret
dec
mov
pop
mov
pop
jae
cmpsb
fistpl
cmpsl
inc
fidivs
and
addl
mov
hlt
out
adc
in
jne
dec
or
lea
cmp
pop
jg
test
mov
mov
push
dec
push
dec
cltd
cld
sti
mov
imul
clts
add
xor
add
lods
mov
sbb
iret
inc
sbb
push
jmp
lds
push
cli
mov
xchg
gs
mov
mov
fs
fistpll
stos
inc
lret
lds
cwtl
and
stos
cmp
xchg
fisttpl
outsb
stos
pop
adc
stc
add
or
lods
arpl
pusha
mov
cld
loop
mov
into
loope
out
js
mov
adc
rorb
add
mov
sbb
pop
xor
aas
fwait
lret
in
mov
mov
and
cltd
mov
mov
mov
cwtl
push
orb
sub
sub
mov
push
dec
mov
popf
int
mov
repz
mov
imul
dec
call
fs
lock
cld
repz
ret
repz
pop
and
test
lock
jecxz
test
jmp
iret
sbb
rcrb
sub
aad
adc
mov
ja
loope
adc
mov
sar
xor
sti
movsb
into
ret
test
sbb
jno
inc
push
sbb
sub
dec
adc
xchg
fsts
scas
xor
jno
aad
mov
fisubrl
jnp
inc
mov
pop
sbb
mov
or
lret
sbb
mov
test
mov
in
inc
jge
sbb
inc
mov
cltd
inc
outsb
push
sbb
ret
sbb
xor
mov
cmpb
sbb
je
cwtl
pop
dec
push
mov
mov
popf
out
das
fucomi
mov
addl
into
dec
stos
pop
in
mov
and
mov
mov
cmp
outsb
cld
add
subb
push
leave
lds
dec
out
cmpsl
ret
sbb
add
mov
jnp
inc
in
xlat
xor
in
or
xchg
test
fucomp
je
push
lret
rcr
in
inc
mov
or
cmp
adc
mov
sbb
xchg
dec
mov
xchg
sbb
sub
mov
test
scas
mov
lahf
jecxz
enter
adcl
dec
push
sub
mov
adcb
lea
xchg
lock
test
cltd
xor
mov
mov
mov
cltd
inc
mov
int
enter
cmpb
jno
sbb
push
cmp
mov
cmc
clc
pop
mov
jmp
loop
pop
push
mov
shr
xor
pop
test
into
lcall
mov
mov
inc
sbb
mov
sbb
inc
pop
adc
cs
sub
lods
xchg
sub
adc
test
jb
or
dec
sbb
mov
popf
lret
mov
mov
xor
push
fisttpl
lcall
std
mov
movsb
adc
mov
add
mov
std
add
repz
fcompl
stc
and
push
mov
cmp
xchg
js
cwtl
adc
mov
cmp
mov
mov
push
fsubs
or
mov
fcomps
movsl
faddp
clc
xor
cmpsl
sti
mov
jne
dec
inc
and
cmp
or
cmp
xchg
sub
fsubr
mov
cltd
incb
push
cmp
lcall
mov
sbb
out
mov
mov
xchg
lret
data16
add
rcrl
aad
mov
pushf
inc
cltd
fs
divb
fs
mov
testl
sbb
mov
std
test
adc
push
roll
fsts
or
mov
stos
xchg
fistl
sbb
xchg
jne
mov
mov
or
int
scas
inc
fwait
data16
and
push
cwtl
in
sarb
and
mov
adc
mov
push
out
imul
xchg
and
jecxz
jnp,pt
sub
xor
sti
sti
and
xchg
xchg
add
sbb
sahf
gs
adc
mov
add
cwtl
dec
and
mov
mov
test
fwait
lahf
in
stc
push
dec
daa
cmp
jp
add
adc
jecxz
adc
popa
cmpsl
mov
arpl
xchg
icebp
ss
jb
test
gs
sbb
jge
xchg
lret
fucomp
movsb
mov
popf
lret
add
or
cmp
adc
lcall
enter
nop
aaa
jns
inc
push
shlb
cltd
push
fcmovnb
scas
lds
aad
fnstcw
std
cli
jnp
inc
mov
adc
addl
fsubs
ja
or
in
mov
jnp
inc
push
mov
xchg
sbb
dec
cmpsb
jmp
jecxz
mov
jmp
std
mov
sti
and
xchg
enter
rol
insb
sbb
and
mov
xchg
cmp
or
pop
movsl
adc
mov
mov
add
mov
cmp
jp
add
ror
cmp
mov
add
lods
xchg
sub
adc
xchg
test
add
cs
mov
sahf
das
xchg
stc
cli
in
test
jl
or
cld
jo
andl
push
mov
xor
mov
cltd
lods
in
in
jb
mov
dec
pop
shlb
fucomi
and
push
fwait
leave
loop
and
daa
mov
in
cmp
mov
xor
mov
and
inc
push
das
push
and
scas
inc
loope
inc
std
jo
aam
cli
pop
cmp
sti
and
xchg
shl
inc
rol
test
outsl
loopne
add
xchg
cmp
or
pop
movsl
adc
or
sarl
fsubrs
popf
mov
cmp
jp
add
adc
les
add
dec
lock
add
lods
xchg
sub
adc
xchg
call
add
cs
mov
sahf
das
xchg
stc
cli
in
test
enter
dec
and
mov
add
sbb
mov
push
ret
jbe
mov
xchg
pushf
xchg
lcall
scas
jmp
sub
mov
int
mov
sbb
adc
sbb
std
cmp
mov
mov
out
aas
pop
dec
iret
pop
call
add
jbe
out
out
cmpl
outsb
mov
xlat
xchg
pop
add
cs
cmp
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
lds
mov
les
cmp
lock
add
cli
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
or
shll
popf
ficoms
rcll
push
mov
mov
in
repz
cmp
mov
loop
loop
xchg
test
or
daa
cwtl
inc
xchg
test
adc
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
lcall
mov
mov
negb
repnz
jbe
frstor
push
pop
mov
icebp
adc
mov
inc
mov
inc
roll
xor
jne
fdivr
pop
push
push
les
push
mov
nop
shll
fucom
cli
xor
roll
inc
test
std
xor
call
lret
jecxz
nop
pcmpeqb
xlat
inc
aad
or
ret
cmpsl
stos
cwtl
push
out
jle
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
aas
dec
sbb
add
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
clc
pop
sub
fstpt
or
add
icebp
lret
push
mov
aam
stc
lock
les
add
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
mov
sbb
dec
push
add
add
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
sub
mov
xchg
push
push
aad
or
push
pop
or
lea
mov
push
jno
fbld
mov
loope
pop
lods
push
outsl
sbb
jg,pn
push
jecxz
dec
gs
nop
aam
mov
fcmovnbe
int
dec
subl
leave
into
mov
pusha
mov
adc
fsubs
jbe
lods
xor
out
mov
fsubrs
xor
ror
xchg
xchg
jg
sub
xor
lret
lcall
push
jmp
fnstsw
xchg
ds
mov
add
jne
bound
jno
adc
test
sbb
mov
mov
cmp
mov
lods
movsl
pop
mov
and
imul
ret
add
sti
mov
mov
mov
adc
outsl
mov
xor
pop
leave
pushf
push
xchg
das
mov
aad
aad
xchg
jmp
jnp
inc
das
inc
or
inc
lcall
lds
in
ds
lret
ljmp
push
stc
and
pop
mov
and
test
test
sarl
and
pushf
xchg
cld
xchg
aam
mov
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
mov
cmp
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
push
stc
and
loopne
mov
mov
sbb
xor
nop
sub
sbb
inc
rcrl
ja
rcr
add
push
pop
add
fisubs
jnp
std
xor
cmpsl
jecxz
jns
cmc
mov
cwtl
pushf
fistpl
mov
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
jg,pt
inc
outsb
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
xchg
push
es
popa
jmp
or
xchg
pop
test
xor
popa
cmp
das
rorl
scas
jbe
flds
lock
jl
leave
call
lret
jmp
scas
mov
out
jae
pushf
sub
jae
popf
lods
push
jae
fidivrs
lahf
sub
xor
aaa
xor
add
and
push
add
adc
ja
push
ret
es
andl
leave
sbb
pop
stos
shrl
xor
addr16
xor
mov
rcll
jo
sbb
or
dec
xchg
mov
add
fimuls
mov
aam
dec
test
dec
aas
outsb
xor
test
ljmp
mov
lcall
pop
les
xchg
stc
cli
in
test
or
test
pop
jg
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
push
ss
test
jns
jmp
xchg
insb
push
dec
movsl
ss
js
pop
das
rcrw
inc
and
add
or
push
or
ja
pushl
xor
lret
scas
jecxz
jnp
sbb
pop
in
fistpll
iret
rep
mov
push
mov
aas
dec
mov
int
imul
inc
pop
pop
stos
int
adcb
pop
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
and
dec
pop
movsb
leave
loop
inc
sarb
or
or
push
xchg
lods
out
cmp
out
and
xchg
mov
xchg
rorl
gs
inc
pushf
mov
jg
repz
jns
popf
addr16
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
orb
dec
mov
out
mov
shlb
xlat
push
int
sarl
ret
xchg
add
movl
or
mov
adc
add
aam
pop
rorl
ja
xchg
movsl
lock
pushf
mov
adc
adc
mov
out
loopne
mov
or
inc
jge
shlb
aam
adc
es
add
mov
add
mov
ficompl
fcmovu
enter
jmp
cltd
movsb
fidivs
pop
aad
mov
fucomp
or
popf
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
sbb
stos
sbb
and
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
or
cmpl
or
push
sub
push
xor
std
cmp
out
inc
mov
icebp
nop
jle
xchg
push
mov
shlb
test
push
stos
lea
aam
lea
fildll
loopne
aas
adc
inc
dec
push
mov
lods
outsl
mov
loope
pop
inc
or
mov
push
mov
sbb
mov
mov
js
arpl
stos
ret
add
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
pushf
inc
addr16
pop
jnp
sbb
cmpsb
mov
les
fwait
movsl
gs
lcall
and
and
cmp
ret
add
test
mov
push
sub
inc
enter
repnz
jo
or
test
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
xchg
daa
mov
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
sbb
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
popf
aad
inc
gs
iret
movsb
stc
movswl
outsb
jno
sbb
jge
pusha
cmp
das
es
add
mov
mov
in
or
jle
les
test
ret
test
leave
jnp
sbb
xor
sub
adc
xor
popa
movsl
mov
enter
inc
gs
mov
cltd
je
movsb
mov
and
ljmp
mov
ficoms
sub
xchg
lods
lcall
popl
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
cld
mov
shl
jmp
scas
lods
pop
imul
pop
push
mov
shrl
fildll
shrl
dec
mov
fs
repnz
popa
dec
leave
test
adc
jle
mov
lods
inc
sbb
jbe
sbb
push
bnd
sub
pop
mov
scas
pop
out
cld
jb
mov
popl
mov
mov
mov
jb
fsubrl
jbe
fisttpll
mov
mov
lock
dec
inc
pop
shrl
xchg
test
loope
and
arpl
sbb
imul
sub
inc
lods
jo
push
inc
mov
add
inc
push
sbb
ficompl
adc
xchg
shll
sub
into
nop
rcrb
fucomi
mov
icebp
aam
ja
xor
lret
pop
xor
dec
mov
sbb
lret
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
aas
lcall
jle
das
pop
icebp
or
cmp
andl
mov
in
testl
mov
fsts
pop
add
and
push
xor
loopne
outsb
mov
or
out
scas
mov
lods
pop
aam
into
repz
lahf
lods
xlat
xor
mov
mov
push
test
push
andl
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
push
xor
leave
pop
ret
and
aam
mov
fistl
sbb
or
testb
sbb
fwait
aam
sub
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
cmp
mov
cli
xor
dec
sub
stos
les
aam
add
imul
lods
arpl
pop
jg
repnz
aam
cmpsl
adc
cwtl
lock
das
pop
mov
es
lret
inc
inc
pusha
test
stos
fcoms
jbe
fldl
jns
lret
sbb
pcmpeqw
mov
andb
movsl
data16
and
enter
mov
nop
add
and
jecxz
add
mov
mov
addr16
test
sbb
inc
mov
pop
inc
inc
dec
jae
inc
mov
sti
jae
fistpll
xchg
lahf
mov
andl
lret
sbb
sarb
icebp
stos
rcrl
fwait
addr16
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
sub
mov
push
sbb
mov
push
dec
jbe
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
inc
and
cwtl
scas
push
repz
hlt
cmc
jge
pushf
dec
es
ja
mov
mov
std
push
lret
mov
mov
adc
ret
and
jo
out
fisttpll
or
mov
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
lds
xchg
mov
pusha
adc
ficoms
inc
popf
scas
jne
test
add
pop
das
rorl
scas
repz
and
mov
or
cmc
adc
scas
xchg
out
cmpsl
inc
lret
cltd
push
pop
mov
dec
mov
imul
add
adc
mov
jl
out
mov
loope
ret
shl
xor
ret
xorb
add
mov
mov
out
pusha
jae
inc
cmc
mov
dec
lret
test
shrb
out
inc
sbbl
cmpsl
push
into
fnclex
pop
test
fisubrl
mov
fwait
dec
mov
lret
mov
mov
mov
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
mov
test
inc
jns
dec
cmpsb
xor
jb
fisttpll
cmp
lds
jle
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shrb
das
jo
sbb
je
jge
leave
cmpsl
js
jle
scas
cmpsb
mov
out
jo
jp
scas
xchg
scas
out
in
jp
mov
push
test
inc
cmpl
adc
and
mov
mov
sub
loop
mov
sbb
out
pop
sub
push
popa
push
test
sahf
clc
inc
pop
loopne
cld
mov
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
fld
cmp
sarb
push
fcompl
jne
jns
lds
nop
lds
mov
testl
loope
lret
movb
push
sub
xor
add
aam
adc
fs
dec
movsb
mov
xchg
dec
and
sub
pop
xchg
push
adc
and
mov
push
xchg
insl
les
stc
stos
xor
bound
enter
ret
cld
jae
cld
out
daa
dec
lock
std
add
cmp
mov
pop
dec
test
jmp
inc
stos
push
rcrb
mov
mov
loop
cmp
inc
sarl
push
scas
std
int3
inc
aas
ret
mov
jnp
sbb
in
out
mov
mov
cmp
adc
mov
movsb
repz
jne
les
cmpl
sbb
imul
sbb
or
jg
aad
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
bound
cwtl
adc
js
inc
sbb
je
pop
dec
dec
pop
pop
push
xchg
fs
cwtl
push
mov
add
mov
ret
mov
push
push
cli
mov
pop
mov
test
jp
sub
andl
ljmp
aaa
leave
les
iret
xlat
dec
mov
cmp
xchg
sti
pop
pop
inc
dec
push
push
in
sti
pop
fistpll
test
out
jmp
mov
mov
add
ljmp
mov
pop
dec
inc
inc
rcll
xchg
sti
push
inc
add
cmp
push
jnp
addr16
call
xor
xchg
sar
aas
sbb
sbb
ja
imul
movsb
mov
cmp
dec
shl
dec
fwait
sbb
add
inc
loopne
outsl
mov
push
out
and
add
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
int3
scas
inc
fs
push
in
mov
push
cwtl
lock
sarb
add
push
mov
scas
out
mov
nop
pop
mov
adc
stos
inc
sub
adc
jle
fbstp
add
and
rolb
rclb
xchg
and
sahf
insb
xchg
add
repnz
pop
mov
mov
call
and
add
or
pop
addb
rcrb
hlt
das
lock
mov
or
fs
icebp
mov
movsb
lds
nop
lds
mov
testl
loope
lret
movb
adc
mov
sbb
das
push
inc
inc
out
sub
sub
shl
dec
dec
pop
dec
scas
push
dec
add
dec
adc
mov
jl
call
je
or
xchg
popf
pop
xor
adc
rolb
sub
xchg
xchg
aas
inc
mov
xorb
cmc
mov
jp
fst
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
ret
les
xor
push
cmp
mov
pop
inc
xchg
jl
xorb
mov
arpl
add
icebp
mov
push
nop
push
stos
mov
sub
imul
sbb
out
mov
sti
dec
lods
into
add
adc
insb
push
nop/reserved
or
dec
ret
dec
and
push
out
mov
or
movsb
js
jbe
xor
std
cltd
lahf
fisttps
adc
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
bound
fisttpll
ja
jecxz
xor
vpcmpeqb
sbb
arpl
sbb
insb
dec
add
jo
pop
jnp
sbb
cmpsb
mov
les
popa
xchg
out
imul
and
push
dec
push
call
sub
ret
jl
sbb
cmp
or
push
xchg
xchg
inc
test
cld
push
pop
lock
jmp
iret
imul
jg
xor
sbb
in
jmp
test
aaa
jns
pop
push
mov
cli
mov
cmp
in
test
or
pop
sbb
outsb
or
cmp
xchg
sbb
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
outsb
or
test
sbb
lret
jl
fadd
xor
jp
in
outsl
inc
xchg
jnp
out
sti
out
decl
inc
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
xchg
mov
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
inc
xorb
ret
push
imul
mov
test
lret
jbe
push
jbe
jmp
decb
mov
aam
adc
mov
ret
loope
or
push
mov
gs
push
mov
xchg
nop
dec
lods
pushf
xchg
cld
xchg
rorb
lods
jne
cmp
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
int
cmp
sub
enter
mov
in
mov
jnp
inc
push
mov
or
in
mov
mov
jns
lahf
outsl
aas
adcl
in
call
jbe
ror
jecxz
outsb
pop
pushf
inc
sbb
pop
or
push
iret
hlt
aam
xchg
inc
gs
imul
test
and
jo
push
sbb
and
cmp
push
cmp
and
fistpll
bound
rol
fiadds
and
mov
adc
pop
jnp
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
adc
add
cmp
adc
mov
push
or
aad
pushf
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
loopne
xor
sub
jmp
inc
lock
aad
insl
mov
pop
outsl
dec
call
push
rcl
jae
pushf
lods
pop
jae
mov
or
jb
fwait
dec
call
hlt
repz
in
inc
xchg
jl
daa
loopne
hlt
jbe
gs
jnp
inc
inc
pop
mov
sbb
adc
int
int3
fwait
mov
in
and
xor
mov
jp
les
movsl
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
and
jle
mov
lods
push
xlat
pop
div
xchg
push
jg
int3
add
arpl
in
es
shlb
jns
inc
mov
lods
or
js
push
cmpsl
pop
pop
mov
inc
xchg
dec
scas
iret
dec
movsb
ljmp
cmp
push
and
scas
add
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
xor
cmpb
je
test
push
movsb
mov
aad
push
inc
test
mov
jno
popf
sti
push
add
lods
adc
dec
push
adc
mov
push
in
lock
popa
shrl
push
cmp
push
cmpb
mov
cmp
xor
sbb
loopne
mov
je
mov
push
xlat
imul
lods
mov
push
pop
call
imul
fsub
jbe
lods
push
outsl
sbbl
pushf
mov
out
fxch
loope
add
hlt
mov
mov
mov
dec
roll
mov
rcll
mov
pusha
mov
jmp
push
jp
in
adcl
js
adc
add
enter
inc
ret
and
jo
imul
out
push
in
aaa
ds
test
xchg
push
sub
jae
sbb
filds
out
sti
mov
fisubl
and
add
nop
cs
pushf
jne
mov
nop
xor
lea
xchg
test
iret
arpl
in
clc
aas
in
and
idiv
or
sbb
pop
xor
sbb
cmc
in
pushf
cmp
sub
outsl
pop
movsb
push
push
pop
movsb
fisubrl
mov
movl
jle
sti
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
enter
lods
xchg
cwtl
push
push
call
fldcw
pop
and
test
xor
bound
das
push
sub
xor
xchg
in
rorl
mov
std
add
cmp
or
sahf
inc
cwtl
dec
xor
cmp
repnz
scas
cmp
jae
fidivrs
pop
sub
jl
xor
hlt
icebp
adc
stos
les
aas
outsb
add
jle
nop
inc
fs
les
shrl
lds
cmp
jle
mov
inc
test
imul
and
clc
push
aam
cmpsb
add
stc
loop
mov
aas
pop
dec
inc
inc
push
decb
sbb
subb
aas
movsl
hlt
imul
test
mov
ljmp
lret
fstl
out
cmp
insl
xchg
aam
loop
pushf
inc
adc
xchg
mov
push
and
adc
push
mov
js
test
sub
es
rcrb
mov
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
cli
fisubl
pop
mov
enter
aas
sti
sti
and
test
cli
jge
shrb
cmp
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
push
dec
add
add
dec
movsb
push
mov
jne
insl
push
dec
xchg
shlb
je
sub
bound
xchg
push
xchg
inc
mov
jb
jg
iret
fs
scas
sar
sbb
pop
or
xchg
fstpl
addb
push
fidivrl
jp
sbb
cmpb
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
es
mov
push
mov
dec
xchg
leave
sub
ja
sbb
jecxz
ficomps
push
sahf
jg
test
les
insl
xchg
cmpsb
and
mov
and
jns
push
subb
mov
cli
test
xchg
fcmovne
aad
adc
sub
cwtl
shr
rcrl
inc
xor
mov
mov
fistpll
and
lret
add
mov
out
push
scas
shll
xor
sub
add
lea
shll
inc
out
mov
out
or
adc
mov
mov
lahf
fcomip
ss
add
lods
xchg
mov
mov
int
inc
mov
push
jecxz
leave
imul
or
test
cs
sti
xor
inc
xchg
in
mov
jbe
inc
movsl
cltd
adc
jns
sahf
rcrb
out
mov
sub
or
icebp
aaa
mov
sbb
jge
les
xlat
into
cmp
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
cltd
jg
inc
outsb
cmpsb
sub
mov
inc
fimull
jmp
in
int3
mov
adc
mov
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
nop
out
ud0
lock
outsl
xor
ljmp
lea
mov
aas
pop
adc
popa
sahf
scas
and
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
shrl
push
cmp
lea
or
loope
aam
sub
insb
push
sub
push
mov
dec
push
in
int3
inc
push
cltd
push
pop
lods
push
fcoms
adc
and
ror
mov
in
shl
fwait
aad
lahf
in
loope
ret
insl
dec
mov
jne
xor
mov
jnp
push
xchg
jle
jmp
cmp
jb
lods
xchg
mov
es
inc
rol
mov
lret
js
popf
scas
test
lret
aas
ja
xor
js
sahf
add
and
es
fidivrs
jo
rorl
push
fsubrs
test
movsb
fidivl
pop
push
sub
inc
fdivr
dec
mov
std
fwait
mov
mov
xor
add
test
sbb
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
cld
push
ret
mov
insl
mov
cmc
fcoml
and
push
dec
xor
xor
inc
mov
sub
push
pop
lret
pop
mov
aad
mov
xchg
mov
out
aad
movsl
dec
test
fmuls
push
xchg
aam
xor
dec
popa
push
ret
rclb
dec
mov
adc
cltd
dec
bound
jg
pop
rcll
movsl
sbb
xchg
incl
or
or
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
mov
mov
int3
jnp
popf
cmc
hlt
std
mov
sti
and
sbb
lret
dec
sbb
lea
cmp
shll
rcrl
or
jmp
xchg
cs
arpl
orb
sub
push
test
mov
jl
xor
mov
into
jbe
rorl
and
or
dec
das
jmp
jp
lcall
insb
test
lea
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
aad
xchg
fmuls
cmp
dec
sbb
mov
cmpsb
xor
jb
fisttpll
sbb
jle
jbe
lods
jae
jbe
pusha
mov
jmp
adc
jle
mov
sbb
aaa
cmp
shrb
push
dec
repnz
inc
xchg
rorb
out
pop
xor
ret
shlb
mov
mov
pop
fldcw
xchg
pop
enter
loopne
hlt
adc
addb
hlt
test
cmc
clc
jnp
xchg
push
cwtl
cmpb
xor
les
std
std
pop
loopne
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
lahf
movsb
leave
pop
subb
mov
push
sahf
jle
and
inc
and
mov
in
xchg
push
and
test
sub
outsl
xchg
testb
mov
or
adc
jns
out
js
pop
fimuls
or
or
jns
mov
mov
cmp
jae
xchg
adc
stos
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
or
pop
xlat
sbb
and
test
sbb
xchg
push
hlt
mov
xchg
test
push
lds
inc
dec
pop
pop
inc
mov
mov
adc
jmp
popa
xchg
fwait
jl
push
and
push
insl
sbb
nop
jle
sbb
dec
dec
xlat
insb
inc
in
ficomps
fldenv
push
aaa
mov
mov
out
mov
push
xor
dec
inc
sub
sub
inc
pop
fsub
ja
in
jg,pn
shl
je
gs
nop
push
loope
leave
insl
dec
mov
jle
int3
fs
rcrl
cmp
mov
jmp
mov
and
stc
push
adcb
dec
gs
add
adc
popl
mov
inc
sub
fs
lcall
jnp
out
cmpsl
mov
jg
jae
xchg
xor
dec
mov
push
jo
stos
loope
lea
repnz
leave
inc
aam
fisttpl
movsb
popf
xchg
and
mov
dec
mov
aas
test
xchg
jno
pop
mov
or
jno
stos
push
xor
xor
mov
into
jbe
and
enter
testb
jmp
xorb
lret
movsl
insl
movsl
cwtl
icebp
and
mov
dec
xor
repnz
mov
mov
daa
push
dec
dec
fisttps
jno
and
mov
mov
insb
mov
dec
xchg
mov
and
sub
outsl
push
inc
push
movsl
xor
add
aad
mov
popf
adc
scas
hlt
mov
adc
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
iret
cmp
xor
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
or
sbb
mov
and
test
pop
arpl
int3
push
xor
jo
and
out
inc
sbb
cmpsl
push
add
shlb
xor
sbb
nop
xlat
stos
movsl
push
movsl
push
rclb
lea
aaa
insb
scas
dec
sub
mov
push
ror
inc
lret
push
mov
subb
fistpll
test
sbb
subl
xchg
das
jnp
push
mov
fwait
push
xchg
jne
xchg
sti
test
mov
mov
xor
jmp
in
std
subl
add
jmp
out
xchg
adc
cmpsl
js
into
cmp
xor
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
insb
jecxz
mov
shr
sarl
sarb
inc
test
into
pop
stos
aad
push
out
pop
ret
jne
xchg
jns
lret
or
movsl
js
lret
test
test
lods
add
mov
fistl
or
ret
gs
cltd
fs
hlt
sub
or
jge
inc
dec
jge
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
jl
das
dec
iret
ror
jmp
fld1
stc
jp
scas
scas
loope
sti
jnp
out
scas
lods
icebp
sbb
stc
out
xchg
out
imul
out
dec
push
or
and
or
test
cs
inc
cmpsb
jg
stos
les
fbstp
std
or
mov
shrl
mov
fsts
inc
pop
cli
add
inc
mov
or
mov
fidivs
fs
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
sbb
subb
imul
cmp
movsb
push
sub
jns
push
inc
int3
mov
mov
in
ja
push
repnz
aam
jl
ljmp
pop
sub
cmp
je
xchg
fwait
xor
data16
push
cmp
insl
in
popf
pop
adc
fisubl
pop
mov
enter
aas
sti
sti
and
sbb
lret
dec
sbb
cmp
cltd
sbb
and
sbb
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
jmp
hlt
inc
pop
adc
mov
adc
xor
in
inc
ficoms
sbb
lods
lret
hlt
rolb
cli
sbb
sub
mov
pop
movb
arpl
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
cli
cmp
stos
xor
xor
mov
mov
lahf
mov
and
lret
add
mov
out
push
test
out
cmp
daa
dec
push
xor
leave
dec
loope
jo
sub
xor
sub
adc
jle
fildll
inc
data16
add
add
jle
nop
inc
fs
inc
mov
fs
jo
push
movsb
in
inc
insl
xchg
jp
add
mov
imul
and
clc
push
aam
and
push
aas
push
fwait
cltd
cmp
dec
or
xor
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movsb
leave
pop
testb
xor
ljmp
push
out
fwait
mov
push
mov
mov
in
and
xchg
jmp
call
scas
push
xchg
mov
push
xchg
fistl
outsl
clc
int3
fnsave
lahf
jb
push
hlt
push
ljmp
popf
addl
xchg
stos
lds
push
ficoml
lret
xchg
mov
adc
mov
call
pop
dec
add
bound
popa
xchg
or
push
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
sarb
test
idivb
arpl
out
les
cmp
jae
mov
repz
mov
sbb
stc
pop
int
rcrl
or
lret
xchg
dec
xchg
test
cmpsb
add
pop
push
fistl
addb
xchg
add
out
pop
fstps
inc
cmp
ljmp
push
clc
mov
push
or
lock
mov
mov
inc
sbb
out
mov
jno
aad
iret
cltd
and
inc
mov
sahf
adc
pop
test
clc
loop
in
dec
jne
mov
cmp
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
insb
test
jae
enter
lret
lret
mov
push
add
lods
xor
cs
loop
jmp
pop
mov
push
lcall
adc
out
leave
xor
mov
cmc
mov
shlb
fsts
inc
pop
loop
in
movsl
mov
jg
adc
mov
adc
sbb
mov
pushf
jmp
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
dec
cmpsl
ficoms
hlt
ja
dec
cwtl
dec
call
push
test
in
sti
push
pop
mov
out
push
or
cld
fildl
mov
sbb
out
enter
cwtl
stc
add
lcall
xlat
adc
or
cmp
cmp
outsl
int
cmc
test
cmp
scas
ds
mov
mov
dec
dec
aaa
pop
sub
imul
inc
jae
add
sbb
es
call
xchg
imul
test
push
stos
popf
inc
cmc
aad
pop
jns
cmpsb
not
fdivrl
fldl
negl
xchg
mov
out
jo
stos
cmpl
hlt
dec
test
mov
dec
fidivrl
fcmovu
xchg
outsl
cmp
std
push
cmc
xchg
cltd
fmull
cmp
jle
jp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
scas
out
mov
xor
daa
fs
mov
lods
dec
fsts
push
pop
mov
arpl
jae
lods
sti
jecxz
arpl
mov
pop
lods
repnz
push
rcll
dec
adc
pop
sbb
push
and
ds
pmuludq
aas
in
and
testl
add
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
lahf
es
pop
movsb
fisubrl
mov
movl
inc
xor
test
std
add
mov
lock
out
cltd
insl
jle
or
xor
es
sahf
pop
and
sub
mov
jecxz
test
jne
lahf
adc
arpl
subb
mov
mov
repnz
push
test
and
adc
lods
fidivl
imul
es
cmpsl
lock
cmp
mov
gs
fwait
mov
pop
add
push
pop
icebp
mov
dec
sbb
xor
pop
mov
lea
mov
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
mov
cmpsl
mov
hlt
rolb
popf
push
std
ljmp
in
xorl
clc
mov
movsl
push
orb
shrl
lea
cmp
jecxz
adc
mov
lds
xchg
or
inc
fdivs
mov
push
rcrb
in
cmp
mov
and
adc
adc
and
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
lds
fs
out
pop
sbb
push
inc
push
pop
cltd
test
or
push
sub
push
xor
iret
push
cmp
or
outsl
aam
sub
dec
aam
dec
into
pop
mov
repnz
loop
in
jno
lds
inc
in
sub
mov
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
mov
jp
add
add
jp
add
cmp
lds
pop
lcall
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
out
dec
loop
std
inc
out
out
scas
mov
sub
ljmp
cltd
xor
into
add
les
outsb
add
addl
fs
popa
sub
adc
rcrl
ret
and
in
inc
inc
xchg
adc
inc
mov
fstps
cmp
imul
lds
add
mov
adc
inc
ret
sbb
xor
mov
mov
jae
pop
jbe
mov
add
out
in
xlat
mov
testl
roll
arpl
jge
les
in
mov
xor
ret
std
les
or
stos
inc
lcall
hlt
inc
les
jecxz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
jns
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
pop
fsubl
jae
pop
inc
xor
aad
dec
fdivrl
sub
mov
push
xchg
mov
jnp
adc
fmulp
cmpsb
push
jne
dec
pop
iret
scas
xchg
sbb
outsb
push
dec
rcr
adc
mov
or
in
mov
pop
cli
add
mov
xchg
inc
test
shl
mov
dec
fwait
pushf
fmul
test
cwtl
xor
out
out
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
xchg
sbb
cmp
stos
in
mov
clc
inc
add
inc
sbb
movsb
iret
lods
loope
jg
pop
rcll
fcompl
adc
jmp
roll
in
sbb
std
and
cmp
xor
adc
dec
mov
adc
lret
lret
jnp
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xor
mov
loopne
add
xchg
cmp
or
aas
out
mov
loopne
push
jge
mov
jns
ds
mov
lock
pusha
test
fimull
orl
sub
jle
sbb
sub
data16
imul
push
mov
dec
sbb
scas
mov
bound
imul
cmpsl
xchg
test
lret
push
xchg
ja
in
adc
fcom
je
lret
repnz
pop
jmp
push
stos
int3
mov
scas
and
into
or
das
mov
in
mov
jmp
or
inc
arpl
lea
push
xor
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
cltd
push
stos
icebp
mov
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
test
sbb
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
dec
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
mov
pop
dec
lahf
and
pop
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
sub
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
daa
pop
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aam
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
mov
push
adc
jno
arpl
lds
sbb
sbb
icebp
dec
scas
xchg
stos
mov
inc
lds
adc
lret
test
push
lods
push
sub
leave
test
mov
mov
mov
jno
pop
and
repz
cmp
or
xor
and
pop
dec
add
shlb
fwait
arpl
gs
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
cmp
loope
add
add
sbb
mov
dec
sbb
jb
mov
lcall
xor
lahf
adc
jecxz
inc
jge
pop
fcomps
adc
cmp
daa
sub
call
fimull
imulb
aam
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
scas
add
mov
ljmp
lds
sbb
mov
les
int
fisttpll
jbe
mov
jbe
pusha
mov
pop
repz
cmp
pop
mov
ss
or
repnz
xchg
leave
add
mov
lcall
add
dec
loopne
iret
rclb
jp
scas
push
rcrl
shrl
js
cs
xchg
aas
movsl
dec
fistl
cmpsl
sbb
and
rolb
ss
xchg
test
push
subb
or
xchg
xchg
gs
mov
adc
mov
xchg
inc
pop
sbb
mov
out
iret
xchg
jp
call
mov
mov
pop
test
xor
ret
add
lcall
leave
xchg
xlat
stos
mov
xchg
cmpsl
loope
mov
int3
jmp
cmp
inc
push
stc
inc
repnz
popf
lret
push
or
dec
gs
jno
push
mov
xchg
sub
sub
jge
dec
pop
fwait
mull
into
add
bound
sbb
ret
sub
sub
adc
int3
pop
jno
mov
sub
int3
pop
dec
sarb
sbb
pushf
lcall
setp
jmp
cmc
fdivrs
xchg
imul
test
nop
das
inc
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
and
mov
add
ret
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
in
mov
cmpsl
into
cltd
add
cwtl
lret
dec
mov
inc
push
cltd
dec
testl
xor
pop
xchg
jmp
shll
fucomp
jne
jp
push
movl
sbb
or
dec
cmc
dec
and
push
out
mov
or
movsb
js
jbe
xor
fldl
cld
cltd
lahf
fisttps
adc
cli
jnp
inc
mov
add
adc
jle
add
and
mov
inc
fmuls
sti
adc
test
inc
xchg
mov
jbe
iret
test
iret
push
push
fsubl
out
sbbb
aad
dec
dec
mov
nop
sub
movsb
data16
fsubrs
mov
cs
fwait
pusha
xor
or
mov
xchg
test
or
push
cld
inc
or
adc
cmpsb
mov
sbb
pop
int
mov
jecxz
icebp
addr16
cltd
loop
les
inc
scas
dec
ret
jbe
jo
mov
or
jmp
lods
leave
push
sbb
sub
mov
jno
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
mov
fdivrs
and
lret
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
mov
mov
ljmp
repz
test
push
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
mov
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
pop
push
aam
int3
imul
into
mov
pusha
mov
in
mov
es
test
inc
das
sub
mull
nop
std
lds
idivb
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
cmp
shrb
cmp
mov
xchg
test
push
int
sub
repz
lods
out
dec
pusha
xor
aam
aaa
test
mov
hlt
test
cmp
dec
or
cmp
push
aam
mov
movsb
mov
cmc
imul
test
push
stos
test
movsl
inc
mov
fwait
jae
imul
ror
inc
lret
push
mov
pushf
inc
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
lcall
mov
inc
fmuls
test
out
dec
loopne
std
mov
shlb
xlat
shr
lock
fisttpll
into
pop
or
hlt
push
pop
outsb
or
jle
cs
cli
pop
dec
cmpl
sbb
xchg
imul
insl
popf
mov
xor
fbld
test
xchg
leave
cmp
mov
popf
sbb
orl
push
int3
xchg
mov
sub
or
push
stos
lea
movsl
push
jno
and
lods
push
jno
fildll
push
bound
mov
aam
push
outsl
sbb
jg,pn
shl
je
gs
nop
push
loope
leave
insl
dec
mov
push
xorl
lret
dec
cwtl
xchg
xor
fucomi
mov
adc
dec
repnz
sbb
inc
inc
loope
stc
loope
js
fstl
out
daa
mov
stc
fildll
ror
jg
dec
movl
pop
cld
push
sub
cmp
call
jae
bound
lds
lods
adc
pop
xor
ret
inc
lret
and
xchg
int
imul
inc
pop
sbb
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
lahf
iret
push
hlt
mov
arpl
jb
icebp
stos
lds
push
clc
stos
outsl
enter
fbld
pop
xor
inc
cmp
dec
imul
inc
and
scas
jp
ja
push
inc
je
faddp
lcall
leave
cmp
inc
sbb
in
push
dec
insl
dec
lret
outsl
fistl
xlat
jg
test
lret
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
add
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
test
popf
jge
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
sub
lods
xchg
mov
mov
and
lods
adc
fisubl
negb
dec
cwtl
jae
jmp
add
out
stc
or
fwait
imul
mov
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
subl
test
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
adc
aaa
jl
cmp
pop
or
cmpl
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
adc
adc
fisubrl
jnp
inc
mov
add
adc
mov
pop
repnz
adc
mov
shr
jmp
jnp
out
mov
out
fbstp
xchg
fxch
jb
sbb
lods
mov
inc
lods
subl
outsb
add
jle
nop
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
das
lea
mov
lods
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
test
aas
movsb
lds
nop
lds
mov
testl
loope
lret
movb
stos
sub
adc
adc
xchg
jnp
imul
outsb
lret
jbe
lahf
pop
and
add
add
arpl
pusha
shrb
jmp
jp
and
movsl
inc
sub
shrb
subb
xor
test
mov
dec
daa
sub
push
in
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
add
xchg
cmp
or
aas
test
fildl
or
mov
mov
rclb
mov
mov
jo
or
repz
std
popa
int
push
fcomi
imul
out
ss
int3
sbb
dec
imulb
adc
push
mov
jmp
pop
mov
adc
lcall
jecxz
add
in
dec
cmp
mov
mov
xor
add
sbb
call
and
jmp
enter
fisubrl
jnp
inc
mov
add
adc
lcall
mov
mov
negb
xor
jae
mov
adc
jge
test
dec
xchg
lret
lret
or
and
mov
mov
outsb
or
test
or
call
xlat
fsts
fwait
aad
ficompl
pop
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
ret
gs
push
lods
xchg
sub
adc
call
clc
mov
loop
jp
stc
scas
movl
sarl
les
xor
xor
or
adc
mov
imul
faddp
and
loope
test
pop
pop
cmc
test
shr
pop
fisttps
xchg
dec
addb
fcompl
unpckhps
mov
das
dec
sbb
push
pop
hlt
idivl
outsl
outsl
int
adc
loop
jae
mov
das
pop
and
clc
shlb
and
dec
cmpsl
dec
dec
test
inc
addr16
xor
seto
imull
fsubr
jbe
enter
aaa
cs
lods
jo
push
inc
push
push
push
lds
faddl
and
inc
les
inc
xchg
cmc
hlt
add
movsl
jg
addr16
into
and
rorl
imulb
lret
insl
lret
pop
xchg
outsb
xor
and
xor
add
xlat
and
call
repnz
popf
xchg
push
leave
inc
sub
dec
push
or
leave
rorb
nop
adc
fimull
out
rol
fwait
movsl
pop
jno
lds
inc
and
adc
fmull
sti
add
out
mov
sbbl
xchg
pop
adc
jle
add
and
add
cmp
push
mov
or
in
jg
fsubs
lret
sbb
syscall
cmp
lea
into
add
or
push
or
or
subb
imul
stos
xchg
mov
add
sub
mov
call
xlat
cmpsl
clc
mov
popa
aaa
dec
adc
mov
inc
push
inc
pop
sti
add
gs
rcl
sub
jl
repnz
and
rolb
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
sbb
sbb
daa
xlat
insb
mov
sbb
pop
sub
adc
jl
pop
lods
out
std
adc
es
movl
or
inc
fs
inc
dec
adc
mov
repz
mov
pop
sbb
insb
add
fadd
fldl
push
rorb
aad
movb
sbb
sbb
ja
push
mov
adc
add
lock
mov
mov
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
jae
int3
or
push
inc
outsb
scas
stos
rcll
les
push
mov
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
mov
test
jle
nop
lds
dec
dec
adc
mov
bound
lret
arpl
popf
jo
push
sbb
push
xor
pop
loop
mov
out
inc
adc
cmpsl
push
icebp
nop
movsl
iret
movsl
mov
fmul
or
adc
enter
xchg
jne
mov
mov
mov
fildll
inc
mov
inc
out
lret
push
mov
push
push
jnp
pop
lock
and
test
test
xchg
fnsave
xchg
ret
sbb
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
stc
pop
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
out
out
xor
adc
jae
fnsave
sbb
fidivl
xchg
out
fcmovb
dec
pop
sahf
aaa
stos
jecxz
dec
jbe
mov
sbb
push
xchg
cltd
loope
sbb
cmp
lcall
ficompl
in
adc
mov
sti
xor
cmc
shlb
add
mov
cmp
sbb
fs
mov
test
adc
test
cmc
sbb
mov
push
adc
jno
arpl
lds
sbb
sbb
icebp
dec
scas
xchg
stos
mov
inc
lds
adc
lret
test
push
lods
push
sub
leave
test
mov
mov
mov
jno
pop
and
repz
cmp
or
xor
and
pop
dec
add
inc
dec
aam
stc
lock
pop
xchg
inc
add
cli
cltd
push
stc
arpl
or
and
out
cmp
cmp
mov
ret
mov
sbb
es
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
pushl
pop
rcl
loop
mov
int3
mov
pushf
lock
mov
pop
mov
or
adc
outsl
movsl
xor
lret
scas
addr16
imul
xchg
or
inc
jge
shlb
aam
adc
lock
or
and
cmp
insl
dec
xor
pop
push
dec
mov
stos
movsl
pop
jno
lds
inc
and
adc
fmull
sti
add
out
mov
sbbl
xchg
pop
adc
lcall
decl
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
out
jecxz
mov
adc
inc
lock
xor
pop
xchg
push
pop
shlb
movsb
sub
das
jns
dec
pop
mov
cmp
pop
inc
in
seta
dec
dec
in
imul
sub
mov
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
lahf
jg
inc
outsb
cmpsb
sub
mov
mov
dec
loopne
adcl
test
ljmp
sub
bound
lock
mov
cmpsl
sub
add
add
call
push
iret
lret
subb
xor
sub
hlt
ss
outsl
jae
fdivrp
xor
scas
adc
sbb
pop
in
sbb
push
mov
aas
mov
pop
fldenv
aaa
adc
addb
fcompl
pop
ret
mov
mov
movsb
popf
divb
fstl
test
clc
mov
xor
jne
xchg
mov
mov
sub
pushf
ret
pop
mov
pop
adc
jnp
adc
test
push
jnp
lea
orl
mov
and
jecxz
lret
mov
insb
xchg
stos
insb
repnz
mov
pushf
xchg
das
cmpsb
int3
mov
adc
enter
lods
xchg
int3
mov
in
mov
jo
fs
les
jno
insb
loop
mov
dec
repz
das
mov
gs
jnp
xor
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
js
sahf
cmpsb
jnp
fdivs
dec
inc
and
cmp
or
cmp
xchg
sub
rol
dec
sbb
jb
mov
lcall
cld
mov
mov
jle
mov
inc
jge
pop
rcrb
adc
cmp
adc
sub
add
xchg
cmpsb
call
mov
lret
imul
push
stos
adcl
ljmp
out
testb
inc
gs
dec
sub
sub
mov
cs
dec
repnz
mov
mov
repnz
mov
hlt
in
rol
leave
jnp
lret
ret
lods
roll
scas
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
std
and
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
mov
enter
mov
mov
pop
add
or
nop
pop
adc
arpl
shll
popf
loopne
inc
xor
in
pop
xchg
dec
and
push
push
xchg
jb
sbb
mov
out
scas
rol
in
cmc
test
popa
push
push
rol
aam
arpl
ret
mov
mov
stos
outsl
mov
add
sbb
outsb
mov
mov
rcr
mov
ja
inc
frstor
mov
xchg
jp
jmp
dec
mov
nop
fstps
lock
sbb
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
dec
push
add
leave
lock
jl
das
dec
iret
shl
idivl
das
incl
scas
loope
sti
jnp
out
scas
mov
pop
pop
adc
jg
fwait
bound
lahf
stc
cmpsl
leave
fldenv
adc
addr16
sub
add
sbbb
iret
pop
mov
adc
and
jo
xchg
inc
xchg
or
ror
in
in
push
inc
movsl
cltd
adc
stos
add
das
jo
cmp
les
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
xchg
daa
mov
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
fnstcw
inc
outsb
cmpsb
sub
mov
mov
push
iret
mov
xor
ljmp
dec
fbstp
sub
mov
arpl
jecxz
xchg
das
push
sub
or
repz
out
and
leave
lock
xor
outsl
cmp
dec
xlat
dec
xchg
mov
stos
mov
dec
adc
es
inc
clc
pusha
mov
js
pop
mov
jne
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
inc
mov
mov
inc
mov
test
add
in
mov
lock
imul
icebp
sahf
adc
orl
adc
mov
insl
xchg
imul
test
les
cmp
imul
sub
push
push
aas
shrl
jl
xchg
pop
dec
push
les
clc
or
test
js
scas
mov
xchg
sub
add
dec
fisubs
mov
addr16
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
xor
rcrb
test
ret
addr16
jmp
shlb
pop
shrl
pop
sbb
push
inc
push
aaa
jo
arpl
int3
push
xor
xor
xchg
sub
cmpsl
push
aad
stos
pop
mov
lcall
push
lea
push
jnp
scas
jnp
stos
in
push
clc
stos
loope
mov
xchg
and
adc
inc
mov
cmpsb
loop
bound
pop
inc
jmp
sbb
lret
sub
test
adc
cmp
lds
push
fdivrl
jmp
mov
lret
xor
jge
pop
inc
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
mov
addl
pop
sbb
push
inc
push
pop
push
test
sbb
icebp
push
pop
add
push
and
daa
adc
xorb
mov
daa
fs
mov
push
mov
imul
stos
in
push
clc
stos
loope
addb
push
push
jle
sbb
daa
push
sahf
jbe
and
subb
ret
lret
xchg
fadd
add
lock
and
jge
and
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
jp
inc
mov
jne
mov
cmp
mov
pushf
xchg
sub
and
push
jnp
cltd
cmp
cmpsb
lods
ja
fldenv
fstpl
jge
or
shl
or
dec
pop
es
push
movsb
mov
mov
push
hlt
mov
jl
cmpsb
mov
pushf
test
aam
mov
cmp
decl
add
inc
sbb
jnp
jecxz
movsl
mov
test
test
lcall
inc
mov
int3
jo
and
mov
test
jnp
lea
orl
mov
and
jecxz
ljmp
test
xor
shlb
dec
sub
or
inc
pop
sahf
enter
dec
xor
ljmp
jo
sub
les
pop
mov
scas
add
ret
jg
sbb
add
out
cmp
xor
adc
dec
mov
adc
xor
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
xor
mov
loopne
add
xchg
cmp
or
pop
out
mov
pushf
xchg
cmp
or
into
mov
inc
add
mov
inc
inc
iret
orl
sbb
mov
test
mov
test
sub
ja
mov
gs
push
inc
push
sarl
cmc
inc
insl
stos
mov
mov
call
lret
orl
jp
pop
jp
push
out
aad
pusha
sub
lods
scas
sub
sub
stos
rcrl
or
mov
mov
mov
sbb
add
cld
sbb
arpl
nop
adc
push
mov
xor
add
add
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
insb
jmp
inc
fs
imul
aaa
sbb
push
push
push
lds
sbb
mov
orl
mov
test
cmp
pop
lret
cmp
mov
test
xor
add
dec
or
lret
movsl
gs
or
pop
vxorps
mov
cmpsl
pop
sub
adc
lcall
insl
mov
add
imul
push
clc
mov
jns
gs
jmp
jmp
les
dec
dec
push
adc
sbb
scas
cmpsl
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
inc
jecxz
call
stos
test
mov
bound
lahf
js
fstl
cld
xchg
xchg
cmp
push
add
xchg
es
lods
cltd
mov
movsb
iret
out
xor
ds
and
dec
and
add
xor
mov
fldt
cmc
adc
xor
shrb
pop
xchg
pop
test
test
rolb
mov
sub
xchg
mov
cmp
int
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
add
cmp
cmpsl
fdivp
sbb
mov
xor
sub
in
cmp
sub
loope
clc
adc
gs
add
add
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
cmp
mov
sub
mov
iret
add
inc
sbb
jae
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
and
ja
dec
xlat
xchg
jecxz
mov
sbb
mov
sbb
daa
sub
insl
jo
push
imul
sub
add
and
push
pop
jmp
dec
xchg
aam
jne
insl
bound
enter
lods
adc
mov
icebp
jbe
mov
rclb
inc
adc
in
add
iret
add
arpl
into
cmpl
xor
mov
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
fnsave
sti
sti
and
test
fnstsw
shrb
cmp
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
sub
jae
pop
push
mov
cmpsb
shlb
push
stos
lea
aad
lea
pop
mov
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
fisubrl
inc
dec
fsub
ja
in
jg,pn
shl
je
sub
loope
leave
and
jmp
fimull
push
jecxz
iret
push
lret
ret
mov
mov
popf
enter
jp
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
mov
aam
pop
aam
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
dec
inc
inc
lahf
sub
push
movl
push
outsb
je
add
outsl
hlt
jmp
decb
push
insb
jne
inc
mov
bound
add
imulb
push
inc
add
lds
inc
in
stos
cld
mov
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
movsl
lock
jp
add
add
jp
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
lods
sarl
push
cld
jb
mov
js
jl
leave
notl
lret
jg
scas
dec
cmc
adc
jno
lret
push
ret
adc
hlt
jp
mov
jne
sbb
mov
addr16
fcmovb
loope
orb
cmp
or
sub
push
dec
mov
lcall
and
or
adc
popf
je
hlt
xor
jae
ljmp
add
cltd
sub
adc
lods
cmpsb
sbbb
or
cmpsb
ljmp
ret
mov
in
imul
dec
and
mov
scas
das
cmpsb
in
enter
sub
sub
pop
mov
mov
je
mov
repz
xchg
aaa
jp
add
dec
and
adc
fs
push
jns
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
sarl
out
push
test
push
add
xor
dec
adc
pop
sbb
cmpb
je
arpl
call
int
and
cmp
push
sbb
lock
sub
inc
mov
or
mov
mov
push
cmpsb
shlb
cmp
jne
cmpsl
mov
imul
mov
pop
xor
fisttpll
fists
les
nop
mov
jno,pn
insb
repnz
sub
in
imul
and
and
fisttps
int3
cld
push
cmp
mov
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
cli
push
stos
sbb
and
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
add
jne
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
out
ret
sbb
xlat
stos
movsl
and
push
into
push
mov
insl
movsl
imul
mov
jmp
push
mov
dec
jno
jecxz
nop
std
pop
mov
sbb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
lret
mov
ficomps
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xor
jnp
lods
inc
jae
add
cs
jae
xchg
lods
xor
adc
sbb
outsb
push
mov
or
nop
add
pop
cmp
xor
push
in
repnz
mov
push
pop
lahf
fistl
inc
mov
fstps
cli
es
lds
add
mov
adc
inc
ret
sbb
xor
test
pop
leave
jae
pop
jbe
mov
add
out
in
xlat
mov
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
or
gs
dec
pop
bound
add
ja
dec
dec
daa
add
icebp
push
or
adc
movsl
stos
sbb
mov
cli
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
das
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
or
inc
ret
add
fidivl
sbb
mov
jbe
orl
jmp
lods
rcrl
aas
and
ficomps
shll
fistl
lea
sub
jb
fstl
movsb
shll
lock
jp
ss
push
out
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
mov
movsb
into
fsubrl
lret
popa
jno
fcmovne
lds
popf
cmc
jmp
js
lret
inc
fstl
inc
fprem1
jmp
adc
ds
push
test
mov
xor
sub
je
pop
adc
test
and
std
lods
xor
xchg
std
mov
mov
adc
iret
mov
push
push
shll
or
and
inc
stos
repz
mov
rcll
sti
mov
sub
inc
push
lds
rclb
inc
mov
lret
movsl
xor
push
jge
push
jmp
ss
push
imul
inc
xchg
data16
dec
movsb
mov
cmp
dec
push
dec
repz
int
inc
ret
pop
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
mov
jnp
push
xchg
jle
jmp
cmp
fcmovbe
mov
loope
sbb
arpl
pop
mov
cmp
pop
and
xchg
mov
pop
xchg
mov
subl
roll
imul
fistl
adc
test
mov
push
gs
pop
xchg
fstps
es
fdiv
addl
and
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
test
push
push
outsb
xor
sub
mov
bound
addr16
push
insb
jne
inc
into
push
mov
insl
cmc
imul
test
push
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
pop
push
in
push
dec
insl
dec
lret
outsl
fistl
xlat
jg
test
loop
fmull
sti
add
or
mov
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
pop
imul
mov
mov
jmp
std
mov
sti
and
test
fwait
jge
shrb
cmp
mov
xchg
test
push
int
sub
repz
lods
out
dec
pusha
xor
aam
aaa
test
mov
hlt
test
cmp
dec
or
cmp
push
aam
mov
movsb
mov
cmc
imul
test
push
stos
test
movsl
inc
mov
fwait
jae
imul
ror
inc
lret
push
mov
mov
sbb
or
dec
lods
mov
lds
adc
lcall
push
js
jbe
xor
frstor
mov
test
popf
adc
cli
jnp
inc
mov
add
adc
lcall
mov
inc
fmuls
test
out
dec
loopne
std
mov
adc
xlat
shr
lock
fisttps
jno
jecxz
fcoms
add
push
push
add
invd
andl
gs
xchg
lds
imul
jle
mov
mov
adc
fsubl
lahf
lret
hlt
mov
ja
aaa
mov
cmc
push
mov
mov
insb
adc
leave
sbb
inc
repz
ficomps
rolb
push
aaa
push
lea
xchg
scas
jo
movsl
int
jno
fbld
dec
inc
mov
add
push
outsl
sbb
jg,pn
out
in
test
xchg
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
pop
arpl
out
rclb
in
and
xchg
repz
dec
and
mov
sbb
pop
rcr
mov
mov
mov
out
cli
dec
test
shll
lods
inc
leave
mov
int
adc
mov
subl
xchg
test
subb
or
xchg
lcall
cmp
add
imul
in
shr
fcmovnb
mov
les
ljmp
repz
or
sbb
jnp
pop
loopne
sub
jo
flds
hlt
dec
inc
sbb
rolb
popa
lcall
xlat
int3
cmp
inc
mov
pop
jbe
mov
movl
inc
xor
rcl
negl
adc
out
in
sub
mov
imul
jo
arpl
pop
testb
arpl
or
das
sbb
pop
or
add
jo
mov
call
clc
jb
add
push
test
and
xchg
pop
outsb
ja
aas
call
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
push
movsb
mov
aad
push
inc
test
mov
jno
popf
sti
push
add
lods
adc
dec
push
adc
mov
push
in
lock
popa
shrl
push
cmp
push
cmpb
mov
cmp
xor
sbb
loopne
mov
je
mov
push
xlat
imul
lods
mov
push
pop
call
imul
fsub
jbe
lods
push
outsl
sbbl
pushf
mov
out
fxch
loope
ror
ret
rcrl
fwait
lods
jle
dec
xor
pop
rcll
inc
pop
xor
cmp
repnz
fimull
cmp
xor
pusha
cmp
das
rorl
adc
sub
add
cmc
test
xchg
loopne
push
mov
lret
cmc
ror
scas
xchg
out
cmpsl
mov
sub
ljmp
fists
jecxz
cmp
aas
ja
dec
int3
and
movsb
call
jmp
loop
int
adc
jo
xchg
test
sbb
push
sbb
adc
lds
pop
fcomps
adc
cmp
fsubrl
call
add
mov
jne
gs
cwtl
ret
cmpsb
ljmp
and
and
sti
sbb
pop
jne
push
sahf
loope
lret
xor
jmp
mov
and
cmp
imul
or
xor
lret
jnp
lret
pop
jmp
rolb
dec
push
jbe
lods
ret
aad
mov
add
inc
mov
leave
pop
fsubl
js
in
xchg
jl
sbb
fistl
popl
push
jo
and
mov
push
rcrl
jb
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
filds
loope
lret
les
sub
pop
mov
jo,pn
sub
packsswb
push
je
push
xchg
testb
mov
or
fmull
es
lahf
cmpsl
pop
icebp
cmp
jne
inc
daa
inc
add
inc
add
sbb
mov
cld
dec
xor
and
adc
mov
ja
aas
call
mov
mov
or
lahf
cltd
pop
adc
xor
cmpb
je
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
push
inc
mov
add
inc
push
sbb
cmc
mov
dec
lret
leave
lock
sbb
shrb
out
inc
sbbl
cmpsl
push
into
fnclex
pop
test
fisubrl
fnsave
jnp
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
test
mov
popf
jno
insb
negb
mov
push
jmp
add
mov
mov
cmp
outsl
addr16
lcall
fistpll
inc
test
daa
dec
leave
movsl
jno
pop
fistl
in
jle
fcomip
aad
mov
pop
out
rcr
mov
sbb
call
movsb
lea
push
pop
pop
push
test
movsb
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
in
outsb
mov
in
jg,pn
xchg
xchg
sub
jne
sbb
push
inc
ficoml
jmp
mov
in
scas
aas
test
xchg
adc
sti
popf
scas
inc
lahf
outsb
fmull
push
divl
mov
imul
push
add
pop
es
push
les
mov
ret
adc
icebp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
cmp
loope
leave
adc
add
xchg
sub
rol
dec
sbb
jp
push
xchg
mov
pop
adc
adc
mov
jle
pop
inc
jl
and
mov
lret
repz
pusha
test
fimull
inc
sub
icebp
xchg
add
ror
stos
sbb
mov
mov
test
lds
inc
in
sub
pop
pop
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
scas
lock
jp
rcrl
rorb
jb
fisttpll
cmp
lds
fdivrp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
sarb
adc
ret
das
adc
sbb
pushf
lcall
insb
cmp
out
mov
ds
sub
je
pop
jb
jae
add
ret
fld1
repnz
lods
iret
lret
cwtl
add
test
add
push
les
arpl
xor
and
aaa
mov
movsb
repz
mov
push
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
mov
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
shll
in
nop
or
mov
bound
inc
inc
shlb
cmp
pop
sub
outsb
add
dec
rolb
mov
outsl
xor
push
inc
dec
leave
les
sarl
push
push
data16
xchg
arpl
mov
rcll
ss
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
sbb
lret
dec
sbb
repnz
cltd
sbb
and
je
jge
pop
jo
or
jmp
mov
jmp
clc
mov
push
cld
mov
stc
adc
inc
ret
shrb
push
ds
adc
inc
rcrb
out
jmp
inc
inc
mov
insl
test
dec
mov
jle
dec
inc
popf
test
sub
sbb
jne
addr16
flds
sub
sahf
xor
jp
pop
adc
jl
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
in
xchg
incb
jmp
xchg
xchg
mov
scas
mov
out
dec
cld
lods
xlat
xchg
test
mov
mov
lds
jg
lahf
lods
xlat
lret
cwtl
shll
sub
mov
nop
lds
cmpsb
dec
pop
or
mov
pop
xor
xor
mov
popf
movsl
dec
sbb
jmp
popa
mov
cmp
rol
pop
add
rcrb
xlat
fs
orb
lds
xchg
movsl
aam
pop
xchg
push
mov
mov
repnz
inc
push
int
add
decl
xchg
dec
fs
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
hlt
inc
daa
add
out
and
or
roll
shll
out
mov
fwait
adc
dec
and
lcall
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
test
test
push
and
and
and
mov
xchg
cmp
or
aas
test
fildl
xchg
mov
mov
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
outsl
cmc
insl
push
imul
push
fistl
xor
mov
jnp
loopne
fucomp
jae
mov
loopne
ss
mov
iret
pop
cltd
adc
test
adc
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
lcall
mov
xchg
clc
cmpsb
fucomp
xchg
mov
sarl
test
leave
mov
sbb
fidivrs
sbb
sbb
pop
popa
mov
xorb
or
add
aaa
adc
xchg
nop
nop
and
push
cmpsb
pop
lcall
push
fwait
and
sub
jmp
popa
shrl
push
cmp
insl
or
jmp
add
das
mov
paddusb
xchg
mov
sbb
fisttpl
pop
dec
insb
push
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
add
jno
add
daa
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
js
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
out
dec
loop
std
inc
out
out
scas
mov
sub
ljmp
test
into
add
and
sub
pushf
ret
shlb
or
cmp
dec
dec
adc
dec
add
mov
push
test
or
jne
pop
or
cmp
imul
cmpsb
js
lret
inc
adc
lock
adc
inc
inc
sbb
gs
ret
sub
lea
pop
sub
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
sbb
subb
imul
cmp
cmpsb
fdivrl
outsl
cwtl
lods
inc
sbb
mov
lds
lret
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
add
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
jge
sbb
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
adc
cmp
push
sbb
push
mov
push
xor
adc
loop
inc
sbb
daa
adc
cmpb
jmp
jle
sbb
enter
aad
in
pop
outsb
xor
ret
scas
popa
adc
rcrb
sub
int
jno
lea
scas
fsub
jbe
lods
push
outsl
sbb
dec
pushf
mov
dec
sbb
xchg
stos
xchg
mov
scas
push
adc
mov
test
dec
cwtl
loop
cs
fucomi
das
jns
jno,pn
insb
repnz
mov
mov
int3
pop
push
mov
sbb
insb
pusha
pop
orl
lods
test
xchg
sahf
test
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
dec
pop
mov
or
scas
iret
fucomip
test
add
jb
jae,pn
lock
or
dec
sbb
mov
arpl
ret
inc
inc
xchg
mov
push
pop
test
test
ljmp
daa
push
popf
mov
jns
and
push
add
roll
fsts
aam
cmpb
xor
and
jns
or
shl
sbb
cmp
mov
in
jnp
cli
jnp
inc
mov
add
adc
lcall
mov
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
test
mov
jae
jo
incb
jl
outsb
addl
sub
mov
aad
test
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
inc
mov
jo
and
mov
test
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adcl
out
fnstenv
sub
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
or
std
fwait
add
in
or
xchg
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
cli
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
pop
jecxz
sbb
rorb
out
inc
sbbl
cmpsl
dec
icebp
xchg
jle
sbb
es
mov
out
test
aad
dec
adc
fwait
push
fwait
push
stos
cmp
jns
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sahf
lcall
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
dec
xlat
inc
call
mov
pop
popa
mov
lods
sub
adc
mov
sbb
lcall
test
pop
push
movsb
dec
jmp
lds
paddb
cmp
test
adc
pop
sbb
xor
iret
into
ret
adc
fsubrl
lahf
lret
hlt
mov
aaa
out
mov
jne
xor
pushf
jle
sbb
mov
sbb
pushf
push
nop
push
fnstcw
sbb
movsl
mov
ja
lds
cmc
std
push
mov
mov
add
jae
icebp
movsl
push
orb
cmp
lcall
push
lods
mov
mov
or
scas
sub
outsb
mov
push
je
lret
stc
add
jmp
mov
mul
addr16
fwait
jmp
mov
ficomps
fadds
push
fdivrs
cli
jno
stos
insb
lahf
inc
push
cmpl
jmp
test
enter
push
leave
daa
in
hlt
xor
and
gs
cmp
inc
push
push
cwtl
cmpb
xor
jge
push
mov
shl
jmp
stc
jae
inc
ret
rolb
jecxz
imul
into
rorl
aam
insl
jmp
push
pop
xor
lret
pop
xchg
mov
test
push
pop
sbb
aam
xor
rol
jb
fidivrl
xchg
adc
dec
and
ret
cmp
xchg
dec
push
sbb
ret
adc
sub
mov
push
xchg
fcmovnu
dec
push
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
lcall
mov
mov
negb
mov
je
pop
dec
cmpsb
cwtl
or
fwait
cmpsl
xor
je
lret
jo
add
and
sub
dec
ret
xchg
insb
adc
push
subb
xchg
dec
dec
or
pop
stos
rolb
jae
mov
outsb
cmovno
call
fcom
inc
sar
daa
add
test
ds
jmp
pop
lret
cwtl
mov
aam
mov
xchg
push
negl
in
lods
mov
cmpl
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
idivb
add
xchg
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
pop
int
pop
insb
into
pop
mov
repz
push
rcll
scas
push
push
orl
fsubrs
sbb
aad
mov
inc
mov
mov
mov
bound
lahf
mov
rcll
out
cld
xor
out
xor
adc
sub
es
test
insl
inc
xor
sbb
je
jge
pop
sub
or
mov
movsl
adc
lret
js
jle
lahf
dec
xchg
add
lret
and
sbb
fists
add
call
sbb
flds
je
mov
xor
dec
sbb
sub
test
aas
stos
push
insb
rorl
lahf
add
movl
pop
mov
sub
test
in
andb
out
add
shrb
ljmp
sub
and
jecxz
mov
push
rorl
and
dec
xchg
sub
mov
xchg
scas
push
mov
add
in
inc
stos
fwait
addb
cmp
orb
xchg
mov
push
mov
or
lods
pusha
pop
fidivrs
jnp
dec
xchg
je
inc
pop
mov
stc
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
subl
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
mov
mov
mov
and
clc
mov
movsl
sarl
and
pushf
xchg
cld
xchg
mov
mov
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
xor
add
negl
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
xchg
inc
test
dec
les
lds
mov
jo
fstp
inc
sbb
stos
adc
nop
sub
or
jl
cmp
jo
xor
cmp
call
lds
pop
xlat
pusha
push
xchg
jle
mov
xor
adc
push
mov
dec
mov
fldt
imul
test
movsl
push
imul
lods
mov
push
sub
mov
fsts
and
mov
ret
ret
push
leave
ret
sbb
xor
adc
pop
or
add
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
je
popa
sbb
in
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
sub
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
in
push
inc
movsl
cltd
adc
stos
add
das
jo
clc
cmc
ret
xchg
add
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
nop
daa
mov
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
fdivrs
inc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
mov
ret
mov
clc
rcrb
pop
jno
rorl
pop
addr16
inc
dec
stos
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
or
and
xchg
sub
lods
xchg
sub
adc
fldenv
icebp
mov
xchg
repnz
jmp
mov
out
jecxz
mov
mov
fs
add
shlb
je
sub
and
pop
lcall
push
xor
xor
jae
and
mov
fdiv
test
xchg
jo
rcl
mov
aam
clc
xor
mov
add
dec
cld
or
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
out
out
aaa
lahf
cmpsl
or
sub
dec
aaa
mov
movd
decb
in
int
imul
lcall
loop
add
push
sbb
cmp
mov
pusha
jecxz
rorb
test
popa
jecxz
pusha
in
mov
outsb
fs
and
dec
rclb
outsb
add
mov
jg
adc
fmull
outsb
mov
leave
push
adc
sub
scas
push
cmc
mov
mov
mov
cld
cmpsl
jae
test
mov
xor
push
fisttpl
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
pop
hlt
mov
outsb
int3
pop
add
addr16
into
add
and
rolb
dec
pop
mov
rclb
lock
or
andb
nop
and
andl
inc
xchg
sbb
push
inc
mov
cmp
jmp
clc
ds
mov
sbb
aas
ja
int
xor
mov
add
data16
xor
mov
insl
mov
jne
pop
inc
stos
mov
pop
xchg
shl
fcomi
xor
xchg
inc
dec
pop
adc
and
adc
inc
ds
movsb
ret
xor
xor
jbe
pop
xchg
sub
and
jge
add
andb
mov
fistl
push
shrb
sub
loopne
in
mov
btr
cmpsb
test
lret
xor
inc
scas
pop
push
lret
fiadds
lahf
cmp
jl
cmp
clc
push
jmp
push
mov
inc
add
test
test
ficoml
addr16
scas
inc
fisttpl
insb
dec
dec
sbb
ret
out
shlb
cmp
fldcw
push
dec
mov
popf
sbb
sub
cmp
ljmp
jnp
adc
jno
or
js
sbb
mov
cmp
inc
cmp
roll
fcomps
je
cmp
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
imul
mov
mov
pop
pop
push
repnz
push
es
dec
adc
in
jo
sub
cmpxchg
out
mov
jno
icebp
jle
scas
pxor
cld
repz
out
das
dec
je
inc
dec
addr16
sub
hlt
cmc
mov
mov
mov
dec
subl
stos
insb
lahf
inc
push
add
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
movsl
or
fisubs
faddl
push
cwtl
cmpb
xor
les
jp
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
ljmp
out
lods
mov
and
call
imul
inc
sub
sub
adc
jecxz
fdivs
or
xor
dec
dec
xchg
aam
push
pop
loop
dec
xorl
xchg
dec
scas
iret
dec
sbb
shll
inc
fdiv
dec
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
pop
xchg
gs
push
aas
fwait
lret
in
mov
mov
or
cmp
jl
jne
mov
mov
dec
sbb
mov
mov
int
gs
xchg
lret
cwtl
incb
fdivrl
pop
sbb
push
adc
rcrl
jl
fbstp
lds
add
ret
into
inc
lahf
out
loop
mov
adc
aas
loop
lahf
jge
dec
test
jp
jmp
jg
sbb
mov
aam
mov
push
aaa
pop
inc
std
lods
cmp
pop
les
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
xchg
sbb
cmp
in
mov
clc
inc
add
inc
fimuls
mov
pop
mov
xchg
cmp
ja
repnz
pop
sub
loop
cmp
in
xchg
xchg
jg
sub
xor
les
cltd
pop
xor
push
jmp
fnstsw
xchg
ds
mov
add
jne
bound
mov
or
cmp
xchg
sub
rol
dec
sbb
xchg
mov
pop
adc
mov
in
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cwtl
cmpsl
adc
cmpb
mov
sub
pop
mov
insl
push
imul
sar
jmp
stos
push
test
sbb
jae
lods
jp
jmp
xor
fwait
sti
pop
sti
mov
shlb
test
icebp
fiaddl
or
inc
mov
add
pop
inc
leave
mov
inc
into
aam
jge
pop
xor
mov
mov
pop
mov
and
lret
add
fsubl
test
adc
adc
orl
mov
in
enter
cmp
out
mov
out
loopne
js
mov
ds
dec
out
les
les
pop
or
mov
movsb
mov
aad
push
iret
lock
rcll
pop
sbb
bound
subb
mov
arpl
sbb
pusha
arpl
sti
push
cld
mov
shlb
push
cmpb
sbbl
mov
cli
mov
aad
lret
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
inc
cmp
jae
mov
mov
cmp
data16
mov
cmp
inc
dec
mov
jge
test
lods
inc
sbb
fildll
inc
imul
xchg
push
dec
and
enter
test
push
lret
and
lods
jmp
inc
cwtl
dec
and
sbb
ret
fwait
pop
int
inc
movsl
aam
cmp
ja
outsb
mov
test
inc
shrb
loope
movsl
or
daa
mov
mov
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
sub
cmp
mov
sub
pushf
ret
pop
mov
cmpsl
mov
dec
sub
and
mov
mov
pop
mov
imul
fsubs
inc
sub
mov
sbb
shrl
sub
xchg
push
loope
cmp
mov
pop
push
test
mov
popa
push
popa
cmp
cs
sub
out
xor
test
hlt
pop
mov
cmp
xor
xor
out
adc
pop
mov
ficoms
movsl
jg
outsl
jae
test
mov
cmpsb
push
addr16
cmp
arpl
js
cs
ss
mov
push
or
cld
cmp
mov
sbb
out
enter
cwtl
stc
add
lcall
xlat
adc
or
es
cmp
outsb
xlat
divb
incb
test
add
inc
sbb
jae
jecxz
movsl
mov
cltd
jo
iret
mov
mov
cmpsl
mov
push
push
mov
pop
pop
push
fistl
addb
pop
pop
scas
rcrl
and
in
clc
jecxz
cmp
fidivs
shrb
jmp
inc
scas
xchg
lret
imul
test
xchg
pushf
test
push
fdivs
mov
xor
pop
ret
jge
or
ret
adc
sbb
rolb
jno
fmuls
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
pushf
inc
lock
or
and
or
mov
push
mov
frstor
sub
clc
and
loop
cmp
inc
inc
xchg
sbb
mov
stc
loopne
mov
aad
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
sti
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
insb
int3
push
test
cmp
pop
and
bound
pop
xchg
adc
cld
jb
ds
add
cmp
leave
insb
iret
ror
aas
inc
scas
into
mov
out
repnz
loopne
decl
inc
push
popf
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
inc
mov
movsb
rorl
mov
sbb
or
sub
aaa
pop
add
mov
fsubl
mov
push
scas
mov
int
pop
dec
xchg
aam
jne
sbb
push
inc
ficoml
test
and
push
jb
loopne
fwait
mov
xchg
xchg
test
xor
arpl
das
push
divl
mov
repz
out
mov
in
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
xchg
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jmp
aad
sbbl
mov
sub
inc
sbb
into
push
mov
insl
mov
jne
pop
test
movsl
xor
push
int3
sub
test
sbb
dec
pop
pop
cld
repnz
fists
jae
into
nop
pop
movsb
outsb
mov
pop
sub
mov
xor
xchg
dec
testl
sub
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
ljmp
xor
lods
xor
mov
dec
test
mov
es
cmpsl
out
leave
mov
fs
pop
or
jno
dec
and
out
mov
mov
movsb
ret
lock
pusha
mov
loope
mov
popa
mov
push
add
decl
cld
pop
add
in
push
push
xchg
xchg
inc
add
mov
repz
sbb
push
cmp
je
stos
ret
fcoms
adc
and
ror
mov
lret
repz
cmp
ret
mov
in
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
lcall
mov
adc
mov
shr
jmp
jnp
out
mov
out
pop
mov
xor
rcrb
popf
addr16
add
les
inc
outsb
add
inc
add
or
ret
push
mov
xchg
mov
or
adc
xchg
cltd
mov
ljmp
test
sbbb
mov
jp
movsl
add
test
jp
lcall
daa
lahf
iret
push
hlt
mov
inc
pop
and
lock
jb
mov
das
cmpsl
xlat
adc
dec
out
mov
sbb
or
xchg
aad
pusha
sub
lods
scas
sub
sub
stos
rcrl
or
int3
or
and
mov
sbb
add
cld
sbb
arpl
nop
adc
push
mov
or
in
xchg
add
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
cmpsb
sub
sbb
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
pop
adc
push
popa
add
jne
mov
adc
out
enter
mov
add
inc
rclb
fucomi
mov
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
or
fisubl
cmp
inc
push
ret
call
ds
mov
push
lret
jo
fnsave
mov
sbb
sbbb
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
insb
jge
lods
jle
cltd
je
dec
enter
fisubrl
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
lea
sbb
xlat
shr
lock
fisttpll
into
pop
or
hlt
push
pop
outsb
or
jle
cs
cli
pop
dec
cmpl
sbb
lret
push
into
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
jmp
dec
dec
fcompl
pop
mov
add
jae
lret
fnsave
or
sbb
sbbb
inc
leave
or
pop
push
outsb
shlb
leave
jns
or
push
clc
xchg
std
mov
adc
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
je
pop
lods
addr16
sub
aam
sbb
push
dec
fcompl
jo
test
ss
push
roll
or
pop
jg
add
sub
add
sbb
adc
pushf
aad
ficompl
pop
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
ret
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
push
mov
insl
aam
rol
mov
xchg
int3
js
rcrb
sbb
xchg
sub
insl
jle
mov
je
cmp
inc
fwait
jae
pop
cs
xchg
xlat
pop
xchg
test
aad
xchg
xchg
dec
aam
pop
mov
cmp
xor
push
repz
imul
leave
xchg
sub
icebp
or
fwait
scas
mov
out
jae
pushf
sub
ja
sahf
mov
push
loope
sti
xor
aas
movsl
dec
fistl
cmpsl
sbb
je
dec
jl
outsb
addl
sub
and
mov
test
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
and
iret
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
xchg
jg
shl
je
sub
daa
je
loop
pop
cltd
enter
adc
pop
mov
gs
adc
adc
popa
sti
lret
lea
insb
out
pop
mov
push
roll
fsubp
repz
imul
mov
arpl
les
jbe
jae
test
aad
pop
inc
fisubl
push
int3
aas
hlt
mov
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
xchg
nop
xor
ret
subl
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jmp
aad
cld
dec
or
icebp
cwtl
jle
xchg
mov
pop
xor
sbb
imul
push
stos
lea
and
mov
mov
adc
push
pop
dec
stos
pop
cltd
insl
inc
dec
inc
sub
int3
push
sbb
fsub
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
in
int3
mov
in
mov
mov
fisttpll
repnz
fmull
sti
add
or
mov
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
mov
cmp
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
insl
aad
push
fistl
addb
ljmp
and
adc
cmp
adc
xchg
xor
dec
mov
cmpl
add
add
add
lea
cmp
jecxz
adc
mov
lds
xchg
or
inc
fdivs
stc
leave
in
test
sahf
mov
mov
in
cmp
mov
sahf
dec
dec
aam
inc
addr16
lea
mov
rclb
mov
and
call
jns
outsb
jmp
in
add
cmp
loopne
lods
test
or
sub
sub
mov
in
push
into
gs
xchg
movsb
mov
loope
inc
jg
pop
in
stc
xchg
xor
imul
sub
iret
mov
adc
mov
sbb
fdivrl
ret
insb
mov
sub
mov
test
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
fnstcw
inc
outsb
cmpsb
sub
mov
mov
push
iret
mov
xor
ljmp
shr
sbb
lgs
loop
cltd
xchg
enter
sar
jg
out
das
dec
lock
jl
das
dec
xor
or
fwait
arpl
xchg
movsb
mov
outsl
jae
cmp
jecxz
mov
int3
pop
into
mov
cmp
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
push
dec
sarl
les
jns
pop
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
enter
cmp
dec
dec
lret
movsw
cwtl
push
push
push
fsts
fs
push
jns
popa
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
push
push
push
push
adc
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
enter
pop
inc
ds
cmpsl
aad
cli
cmpsl
stos
cwtl
and
sbbl
mov
jb
pop
push
bound
push
test
mov
add
dec
or
bound
sbb
outsb
or
idivb
add
xchg
lcall
push
and
and
popa
xchg
jecxz
mov
rcll
pop
pop
xor
sub
mov
pop
mov
scas
and
ret
jg
or
out
aam
mov
mov
dec
aam
stc
lock
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
test
or
sbb
es
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
mov
mov
mov
leave
aaa
jnp
popf
fnsave
cmpsb
loop
mov
add
test
sbb
out
lcall
mov
lcall
sub
dec
fdivl
jns
lds
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
jle
add
and
mov
dec
cwtl
dec
and
adc
test
sbb
mov
xlat
jbe
iret
test
jecxz
inc
cltd
enter
in
inc
inc
and
aas
ja
xor
bound
pop
inc
pop
mov
insl
cltd
aam
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
and
scas
mov
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
cmp
cmp
cmp
jge
jb
mov
mov
cmp
clc
test
nop
mov
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
cltd
push
stos
icebp
mov
cli
ss
lds
mov
or
lahf
cltd
pop
adc
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
pop
pushf
pop
mov
call
push
add
jl
fbstp
dec
sbb
push
ret
enter
push
cmp
add
outsl
hlt
jmp
decb
push
insb
jne
lds
cs
mov
mov
dec
mull
imul
dec
and
iret
jae
xchg
rcr
mov
and
mov
das
sbb
dec
movsl
or
sbb
fistl
test
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
sub
xchg
xchg
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
dec
adc
ss
add
in
dec
jo
push
cltd
das
lea
mov
lods
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
xor
sbb
inc
mov
add
out
in
xlat
mov
testl
loope
lret
movb
vplzcntd
push
dec
and
xchg
stos
xor
mov
out
scas
push
and
sub
es
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
cld
inc
ret
jp
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
jb
mov
test
xor
sti
sti
and
test
jp
sbb
xchg
push
hlt
mov
popa
dec
mov
into
aaa
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
adc
ss
mov
or
out
pop
sub
push
mov
mulb
and
dec
pop
fwait
mov
movsl
mov
mov
aad
fisttps
or
in
dec
and
or
jp
sbb
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
push
dec
idivl
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
and
adc
ljmp
mov
addb
insl
mov
sub
mov
dec
call
lods
scas
jmp
popa
jae
fidivrs
lahf
jecxz
out
data16
and
inc
cltd
enter
and
xchg
jmp
out
rol
insb
sbb
aad
addb
fcompl
pop
ret
mov
mov
movsb
popf
divb
fstl
test
clc
mov
xor
inc
or
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
jge
lahf
jge
mov
notl
sub
sub
xor
dec
inc
mov
test
adc
iret
rcrb
pop
sub
out
push
sbb
xor
adc
popf
jae
in
scas
ret
mov
xchg
adc
cmp
or
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
aam
out
fwait
lea
aaa
fnstenv
pushf
pusha
cli
and
and
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
pushf
lahf
ret
les
xor
xor
mov
mov
pop
inc
xchg
jl
xorb
mov
arpl
add
lds
fs
xor
jp
push
lcall
and
push
pop
sti
adc
inc
ret
pop
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
int
jae
cmp
cwtl
xchg
cmp
ficoms
add
add
lahf
lea
fwait
add
iret
xchg
push
push
mov
adc
add
lea
rcr
mov
push
cli
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
add
jle
test
js
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
push
mov
insl
aad
or
push
data16
lea
lahf
jno
pop
cmp
mov
xlat
movsb
rol
mov
pop
lods
push
xchg
mov
addl
mov
cmpsb
dec
sub
cmpsl
pop
pop
mov
lods
scas
das
test
inc
mov
rcrl
ret
add
js
jle
xor
stc
leave
test
pop
sub
scas
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
lea
lds
cmp
mov
xlat
or
mov
add
jne
bound
cltd
add
mov
out
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
adc
out
xchg
fldt
in
push
cmp
pusha
push
daa
sbb
lock
add
dec
mov
das
cmpsl
cmp
cmpsl
mov
les
ret
push
push
xchg
xchg
mov
jns
movsl
aam
scas
aad
fisttps
or
in
dec
and
or
sbb
inc
outsb
cmpsb
sub
sbb
xchg
int
xor
jb
fisttpll
sbb
jl
adc
mov
inc
lahf
scas
cmc
lds
test
xor
popa
cmp
das
rorl
scas
jbe
cltd
imul
test
scas
divb
sbb
aaa
push
leave
jne
sbb
fidivrs
push
sub
adc
jge
pop
lods
divl
stc
into
add
les
cmp
mov
and
xor
fcomps
je
jne
dec
cmp
inc
push
push
sbb
test
pop
add
push
add
sar
fwait
js
jo
add
jo,pn
fnstenv
mov
mov
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
mov
mov
enter
mov
repnz
sub
in
and
sahf
add
cmp
dec
sub
lods
pop
out
mov
pop
movsb
lret
push
leave
jo
sub
icebp
fwait
mov
rcrb
mov
xor
inc
cmpsl
xor
loopne
js
sbb
sbb
call
push
out
aaa
jge
outsl
arpl
cli
push
push
or
pop
pop
iret
rorl
adc
ljmp
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
shlb
dec
sbbb
xor
push
repnz
and
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
scas
mov
ljmp
stos
dec
push
bound
mov
hlt
cwtl
rolb
sbb
jg
out
sub
sub
shl
sub
mov
sbb
sub
add
inc
cld
ja
adc
fadd
push
bound
cmpsl
xchg
scas
mov
and
or
xlat
or
inc
cmc
add
inc
pop
xor
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
adc
sahf
cmpsb
jnp
fcom
mov
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
imul
push
cmpsb
outsb
and
cmpsb
shlb
push
stos
lea
movsl
push
mov
xlat
sub
mov
xlat
xchg
movsb
rol
mov
pop
lods
push
xchg
mov
xchg
stos
push
popf
addl
mov
cmpsb
dec
sub
scas
push
and
mov
pop
pop
mov
in
mov
mov
lret
adc
pop
jg
shlb
aam
jl
lret
sti
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
fisubl
pop
mov
enter
aas
sti
sti
and
test
cld
jge
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
lret
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
rcr
lcall
ret
sbb
mov
scas
adcb
mov
xor
cmc
xor
mov
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
mov
mov
jns
lahf
outsl
aas
adcl
in
call
jbe
ror
jecxz
outsb
pop
pushf
inc
dec
inc
push
or
int
dec
add
inc
jbe
jbe
cmp
add
cmp
push
lds
pop
ja
and
popf
ret
dec
in
je
xchg
scas
jecxz
or
jne
sub
jl
or
shll
ja
lret
repnz
test
mov
mov
pop
xchg
shll
cmp
xchg
mov
mov
dec
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cmp
scas
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
pushfw
out
es
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
subb
xchg
xchg
sub
xchg
shrl
pop
sbb
in
int
or
pop
ret
ret
aaa
xchg
mov
jbe
inc
ret
imul
sub
iret
mov
adc
mov
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
idivb
add
xchg
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
or
and
iret
xchg
shr
jo
sbb
xchg
xchg
xor
addr16
clc
push
sub
leave
cld
icebp
jg
out
ud0
lock
xchg
mov
imul
rolb
push
adc
mov
jno
fdivrs
cli
jno
movsb
insb
lahf
inc
push
dec
inc
fnstenv
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
mov
or
gs
cs
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
es
call
ss
push
imul
dec
rcll
in
outsl
in
push
dec
call
and
inc
pop
cmp
xchg
mov
in
lret
cmp
subb
pop
imul
ret
mov
inc
push
insl
imul
push
mov
pushf
dec
mov
int
or
rcrb
sbbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
int
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
loopne
mov
xor
addr16
rolb
or
mov
int
pop
daa
mov
lcall
push
jb
cmp
and
fistpl
mov
jno
dec
cmp
jecxz
aaa
rcrl
inc
mov
jecxz
sbb
or
sub
negb
add
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
sti
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
sub
es
test
pop
and
movsl
adc
pop
and
in
jge
pusha
cmp
das
rorl
scas
pushfw
add
popl
mov
dec
pop
call
xchg
xchg
push
js
cs
jae
adc
pop
jle
jmp
push
jo
out
inc
add
fildl
push
lret
cmpsb
sub
jb
and
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
aaa
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
mov
popf
enter
mov
mov
sbb
mov
loope
aam
stc
xor
or
cmp
jmp
sub
jnp
testb
fucomi
hlt
std
mov
sti
and
test
cmp
shrb
cmp
mov
popa
dec
mov
into
aaa
stos
shll
inc
xchg
in
mov
sub
test
mov
mov
outsb
xor
xchg
adc
ss
stos
add
mov
jmp
lret
outsb
mov
call
bound
mov
mov
daa
push
dec
imul
cmp
ret
and
lds
fcom
dec
sub
insl
mov
leave
jnp
pop
cld
sub
adc
stc
sub
jg
xchg
cmp
std
cli
jnp
inc
mov
add
adc
jle
add
and
mov
mov
negb
xor
jnp
jo
jae
fidivrs
mov
rcll
xor
adc
sbb
xchg
arpl
popa
inc
imul
inc
inc
push
push
and
negb
sbb
les
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
mov
out
dec
jae
fldt
insl
int3
imul
mov
pusha
push
dec
and
addl
jbe
lahf
aam
jne
mov
inc
push
mov
xchg
sbb
and
dec
inc
lods
aas
stos
shrb
filds
xchg
xlat
test
inc
sub
divl
sub
mov
jo
imul
lods
cmc
fdivrs
lods
enter
rorb
arpl
fwait
jmp
push
std
mov
int
mov
or
lods
jnp
or
int
imul
push
in
mov
add
test
bound
jns
ss
jb
fnstcw
in
push
dec
daa
cmp
jp
add
add
mov
sbb
jl
orb
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
mov
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
lods
mov
mov
fwait
mov
popa
shr
pop
sub
repz
cmp
xchg
test
push
inc
jg
jle
xor
rcll
pop
inc
or
lds
sub
add
cmp
pop
adc
lock
das
add
xlat
repz
mov
or
inc
test
dec
les
and
fcomi
aaa
sbb
pop
popf
sar
stos
test
gs
lret
dec
fidivl
dec
mov
lea
inc
les
rorb
pop
or
js
sbb
ds
lock
mov
aad
push
lea
mov
cmp
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
mov
mov
enter
mov
repnz
sub
in
and
sahf
add
cmp
dec
sub
lods
pop
out
mov
pop
movsb
lret
push
leave
jo
sub
icebp
fwait
mov
rcrb
mov
xor
inc
cmpsl
xor
loopne
js
sbb
sbb
call
push
out
aaa
jge
outsl
arpl
cli
push
push
or
pop
xchg
push
mov
pushf
cmpsl
lock
lcall
cmp
popf
mov
pop
add
dec
xchg
mov
stc
and
sbb
pop
mov
mov
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sarl
aam
xchg
mov
mov
inc
mov
adc
and
xor
dec
dec
and
xchg
cmp
adc
movsb
pop
cmpsb
cmc
lods
xor
dec
inc
sub
int3
add
arpl
in
es
shlb
stc
add
mov
dec
xchg
test
inc
stos
rclb
movsb
ljmp
inc
fdiv
dec
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
pop
xchg
gs
push
aas
fwait
lret
in
mov
mov
or
mov
add
jne
bound
cltd
add
mov
out
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
cmpsl
push
test
push
mov
and
in
xlat
jnp
aas
xchg
push
fninit
lock
arpl
fmull
testl
loop
sbb
in
movsl
aam
sbb
test
mov
mov
repnz
inc
push
int
add
decl
cmp
fs
jno
adc
test
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
mov
cmp
das
push
roll
scas
repz
push
xchg
lods
out
cmp
out
repz
sub
xchg
mov
lret
xchg
repz
jns
outsb
out
sti
cwtl
inc
test
ss
push
shll
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
not
xor
mov
rorl
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cmp
xchg
xor
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
outsb
fwait
es
test
mov
push
or
push
pop
xor
je
add
pop
sub
ret
mov
dec
repz
ljmp
push
mov
cmc
fdivrs
push
test
fidivl
addr16
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shll
popf
loopne
inc
xor
movsl
mov
cmp
je
test
std
aaa
or
jne
les
cmpl
sbb
imul
sbb
or
jg
aad
pushf
ret
pop
mov
mov
sbb
cmp
nop
push
lcall
scas
jge
mov
mov
ds
cli
mov
adc
inc
aas
adc
pop
and
xchg
cmpsl
and
push
dec
gs
xorb
pop
push
push
mov
jne
dec
scas
push
dec
in
jb
mov
xor
insl
fldl
movl
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
jg
stos
sbb
and
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmp
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
fmull
mov
das
insl
lahf
mov
js
mov
push
aas
pop
out
pop
sub
jbe
sub
push
sbb
mov
jmp
mov
xchg
addr16
mov
pop
push
ljmp
mov
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
lret
xchg
fisttpl
add
jp
add
cmp
lds
lcall
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
lods
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
lods
inc
rcr
cmp
add
outsl
hlt
sbb
push
inc
out
mov
xchg
scas
sub
int3
dec
pop
fwait
mov
and
loope
jne
mov
and
in
lret
cmp
subb
pop
imul
mov
shrl
cs
or
xchg
push
mov
inc
mull
inc
lods
xchg
inc
sbb
loopne
fbstp
fists
pop
enter
pop
movsl
arpl
mov
xchg
mov
filds
orb
sub
xchg
cwtl
cwtl
popf
jmp
dec
mov
mov
inc
add
test
in
xor
and
jmp
cmpsb
scas
xor
pop
mov
lds
jp
push
mov
and
pop
lcall
scas
inc
lahf
mov
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
fwait
orb
xor
mov
arpl
mov
jg
cmp
push
push
mov
sub
jne
adc
call
push
sahf
jnp
stos
subl
shll
jecxz
scas
xchg
je
mov
xor
jb
mov
or
push
loope
movsb
fstl
fdivrl
lock
into
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
mov
mov
xor
addr16
fldcw
cmp
mov
dec
les
rcl
idivl
popa
out
test
aam
cltd
arpl
iret
inc
fists
fnstsw
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cmp
stos
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
out
push
cld
mov
bound
data16
sub
mov
push
push
inc
addl
mov
mov
test
jb
das
pushf
mov
repz
cmp
pop
gs
add
jae
jle
scas
pxor
and
mov
sub
mov
scas
pop
push
mov
dec
xlat
add
rcll
xor
sub
adc
ds
std
js
mov
pushl
xor
push
test
mov
or
dec
pop
or
push
out
pop
adc
lea
ss
and
in
xchg
arpl
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
cli
sbb
cmpsl
ret
test
pop
pop
push
fcompl
jne
jns
lds
nop
lds
mov
testl
rorl
arpl
jge
les
in
mov
xor
ret
std
les
or
stos
inc
lcall
hlt
inc
les
lret
leave
scas
dec
xchg
jp
xor
mov
inc
daa
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
test
and
cmp
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
pop
jecxz
sbb
rorb
out
inc
sbbl
cmpsl
dec
icebp
xchg
jle
sbb
es
mov
out
test
sbb
les
mov
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
mov
and
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
fwait
outsl
outsl
call
jae
daa
ja
mov
mov
fucomp
push
jg
lahf
lods
xlat
lret
cmpsl
leave
mov
add
jle
nop
lds
dec
pop
or
push
out
pop
adc
and
xchg
out
inc
ret
mov
xlat
pop
pop
inc
or
idiv
sti
add
test
sbb
daa
push
sahf
jbe
push
push
jle
sbb
stos
xchg
mov
cmpsb
stos
mov
outsb
mov
in
mov
shr
push
popf
mov
rcrb
jne
cmc
fwait
inc
rcrl
sbb
jae
les
sbb
or
dec
lds
adc
lcall
push
js
jbe
xor
std
cltd
lahf
fisttps
adc
cli
jnp
inc
mov
add
adc
lcall
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
sub
out
jns
ljmp
andl
mov
inc
addr16
inc
fs
inc
mov
out
mov
xchg
and
daa
mov
xor
out
mov
sbb
mov
mov
jnp
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
mov
decb
push
aad
les
lcall
sbb
mov
push
adc
jno
arpl
lds
sbb
sbb
insl
xchg
sub
xor
push
or
dec
and
pop
lret
test
push
push
xchg
push
es
jle
mov
mov
out
out
xchg
xor
inc
fwait
leave
in
daa
adc
adc
arpl
pop
int
or
dec
or
movsl
jg
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
cmp
rorl
pop
pop
hlt
mov
outsb
int3
pop
add
addr16
or
test
sarl
stos
pop
or
les
rcrb
mov
dec
stos
mov
lods
dec
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
lods
cmpsb
ret
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
into
adc
aas
mov
arpl
mov
xchg
xchg
xchg
mov
scas
pxor
ret
sti
mov
leave
lock
jl
das
dec
iret
shl
idivl
outsl
outsl
int
adc
scas
jmp
pop
cmpsb
ret
jns
mov
popa
jge
outsl
pop
lar
bound
popa
adc
inc
inc
mov
fwait
mov
loop
cmc
mov
lea
mov
and
test
idivb
arpl
out
les
cmp
mov
pop
mov
xor
leave
add
mov
or
mov
and
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
push
cmp
lods
or
add
dec
dec
adc
je
sub
and
xchg
nop
dec
lods
pushf
xchg
cld
xchg
orb
lods
jne
cmp
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
shl
add
negl
cmp
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
fstl
add
xchg
outsb
dec
sbb
xchg
cmp
repz
pop
int
push
arpl
jg
rcll
lods
cmc
dec
ret
ficoms
dec
and
jbe
push
imul
sbb
mov
push
xchg
mov
lahf
popf
fnsetpm(287
adc
fimull
mov
ror
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
mov
test
cmpsb
xor
jb
fisttpll
cmp
push
or
fstpl
js
adc
cmp
mov
popa
or
dec
mov
addr16
stos
dec
xchg
scas
out
js
scas
out
mov
out
lock
xor
push
iret
hlt
test
mov
das
shrl
xor
shrl
lahf
cli
cwtl
add
loope
outsb
add
jle
scas
pop
fwait
out
enter
jbe
and
and
mov
in
movsb
xor
xchg
fnstcw
or
cmpb
push
adc
int
mov
sbb
xchg
xor
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
testl
sahf
std
and
dec
cmpsl
xchg
int
rolb
mov
rcrb
cmp
mov
dec
mov
push
insl
jbe
pop
mov
shlb
dec
arpl
and
je
filds
jae
inc
outsb
cmp
inc
mov
dec
stc
arpl
or
test
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pushf
cmpsl
sti
clc
les
sti
sti
and
test
fstpt
shrb
cmp
mov
xchg
test
push
lds
inc
dec
pop
pop
inc
mov
mov
adc
jmp
popa
xchg
fwait
jl
push
and
push
insl
sbb
nop
jle
sbb
dec
dec
xlat
insb
inc
or
lahf
xor
and
xchg
movsl
push
jno
rcrb
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
pop
sub
fsub
ja
in
jg,pn
shl
je
sub
push
add
and
into
push
mov
xor
jae
sub
push
push
pop
js
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
add
es
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fisubl
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
test
and
sub
jb
sub
xor
divl
es
test
dec
jecxz
mov
orb
shrl
insl
movsl
imul
test
shl
loop
gs
test
lret
cmp
movsl
cmp
and
into
mov
inc
xor
dec
repz
and
inc
pop
lret
sub
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
dec
je
and
sahf
xchg
sarb
out
ret
xor
lahf
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
push
push
jle
nop
fs
insb
test
mov
pop
pop
test
loop
in
repz
ja
fwait
ja
pop
pusha
mov
cmp
mov
xlat
mov
hlt
std
mov
push
cli
sti
in
mov
aas
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
pop
fmul
test
cwtl
xor
xor
cmc
sbb
std
fistpll
sti
mov
mov
test
in
andb
sbb
mov
mov
and
mov
pop
push
xchg
xchg
push
es
lods
shr
cltd
push
xor
xchg
mov
xor
arpl
fwait
xor
repz
out
cltd
scas
push
dec
dec
lock
mov
dec
xchg
mov
pushl
cmc
jp
inc
sub
ja
popf
lods
push
mov
loopne,pn
js
lock
fwait
mov
out
lahf
stc
cwtl
roll
or
xorl
inc
mov
fsubr
push
adc
or
pop
das
idivl
mov
mov
mov
das
orb
aam
clc
mov
std
cmp
pop
movl
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
subb
clc
pop
enter
int3
inc
push
cltd
icebp
testb
in
mov
movsb
shl
sbb
test
add
into
pop
into
fcmovbe
dec
inc
sub
sub
add
jl
dec
add
insb
lret
sub
out
cmp
test
lret
inc
stos
rclb
pop
mov
cwtl
xor
test
fwait
ljmpw
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
fisubl
pop
mov
enter
aas
sti
sti
and
test
cli
jge
shrb
cmp
mov
popa
dec
mov
sahf
test
push
push
cltd
shrl
xchg
movsb
cld
scas
loope
jmp
scas
mov
ljmp
or
aad
add
mov
adc
ret
cltd
sti
xchg
std
aas
stos
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
test
cmp
js
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
data16
test
xor
pusha
xchg
jle
scas
pop
adc
dec
addr16
push
cmp
orb
xchg
test
ret
imulb
inc
lret
sub
adc
xor
inc
sarl
push
scas
std
int3
inc
aas
repnz
jmp
adc
mov
push
cmpsb
mov
pushf
test
aam
mov
cmp
decl
add
inc
sbb
jnp
jecxz
movsl
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
sar
or
jg
test
sbb
mov
les
loopne
sub
dec
pop
stos
repz
je
push
jae
fisttps
popa
inc
ficompl
pop
iret
into
icebp
xor
sti
sbb
cmp
dec
rorl
push
cmp
inc
jmp
push
js
pop
lcall
insl
fcomp
movswl
jmp
std
mov
sti
and
test
pop
jge
shrb
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
xchg
mov
shll
push
and
enter
inc
mov
and
lret
repz
sbb
sarb
icebp
stos
rcrl
mov
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
lods
sbb
mov
push
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
cmp
fnstcw
es
cmp
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
jbe
sbb
jnp
dec
ljmp
test
dec
les
and
or
mov
dec
dec
mov
sbb
jb
and
xor
call
rcrl
mov
into
fwait
cmp
aaa
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
sub
daa
je
loop
pop
cltd
enter
adc
sbb
cmp
ficoms
xchg
mov
insb
out
pop
mov
sub
xor
sbb
add
add
lcall
inc
mov
dec
xchg
aam
xchg
lds
adc
push
inc
sbb
lock
call
lods
cmp
or
and
rorb
add
inc
push
push
sub
cmp
cmpsl
xchg
sbb
mov
jb
test
and
sub
js
jae
inc
xlat
ficompl
pop
cmpsb
cli
and
rolb
jo
dec
dec
mov
or
addr16
into
push
mov
insl
aad
dec
dec
lahf
xchg
push
mov
and
movsb
mov
jno
subb
xchg
fstpt
arpl
dec
scas
pop
push
outsl
inc
iret
jae
aam
inc
adc
ret
roll
ret
fists
jae
outsl
les
mov
or
rcrb
mov
jl
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
arpl
dec
mov
and
adc
adc
and
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
arpl
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
inc
dec
adc
xchg
adc
je
xchg
and
addr16
and
movnti
mov
xchg
mov
dec
addr16
inc
push
dec
jo
nopl
fs
jecxz
sbb
cs
cmpsb
ret
pushf
in
iret
cmp
xor
inc
mov
push
mov
scas
iret
pinsrw
push
cld
test
mov
pop
icebp
icebp
or
cmp
mov
cli
and
mov
dec
xorl
xchg
and
into
add
roll
or
scas
sub
cs
sub
sub
and
es
fidivrs
stos
xchg
lods
xor
cmc
adc
xchg
test
fs
mov
lret
push
outsl
mov
mov
mov
xchg
mov
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
pushf
negl
mov
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
cmp
cmpsl
mov
arpl
cmp
add
mov
lock
pop
lods
jno
fistpl
stc
jg
sahf
pop
xchg
iret
icebp
icebp
add
adc
fsub
ja
push
push
cwtl
mov
aam
xor
rolb
xlat
push
mov
lods
testb
lea
mov
and
ss
pop
or
dec
jecxz
fdivs
adc
lahf
gs
jb
dec
imul
call
mov
mov
dec
jp
dec
aas
xor
push
jae
mov
mov
jns
outsb
out
arpl
out
or
and
sub
les
jnp
sbb
in
out
mov
andl
cmpsl
pushf
or
fucom
cli
xor
roll
ret
lahf
sbb
int3
push
xor
push
cmp
insl
or
jmp
add
mov
cmp
ret
xchg
addr16
out
jmp
cmpb
out
cmc
push
mov
scas
iret
or
cld
loopne
xor
ret
bound
rcl
xor
inc
into
xor
insl
push
int
jge
xchg
subl
stos
les
adc
imul
fs
lahf
jo
fists
xchg
mov
add
ret
and
jl
jnp
bound
gs
jecxz
mov
insl
mov
inc
lcall
xchg
incb
movsb
jno
cmp
mov
jne
loope
sub
lds
mov
lret
dec
sbb
repnz
jne
push
xor
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
add
xchg
loop
sub
ficomps
pop
push
stos
test
hlt
or
push
int
fwait
jae
imul
ror
inc
lret
push
mov
mov
or
sbb
jg
shlb
je
ret
bound
movsl
mov
cltd
pop
and
add
add
arpl
sbb
btc
and
out
xchg
out
push
idivl
sub
pop
sub
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
xchg
mov
mov
push
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
test
cld
jge
shrb
cmp
mov
fimuls
cmp
lods
into
pop
stos
movsb
xchg
mov
push
pop
push
outsl
xlat
jnp
out
mov
lds
mov
xchg
dec
or
js
push
mov
xor
sti
ret
inc
inc
xchg
mov
push
pop
push
into
push
mov
insl
inc
push
mov
out
mov
sti
dec
lods
into
add
adc
hlt
add
imul
cs
or
push
stos
sti
loop
arpl
pop
and
add
pop
sbb
arpl
jmp
mov
add
and
scas
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
sbb
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
sub
xchg
inc
mov
shlb
into
test
rolb
repnz
movsb
xchg
mov
adc
mov
mov
mov
cmc
mov
shlb
fsts
inc
pop
lcall
jg
adc
mov
adc
sbb
mov
pushf
jmp
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
test
xor
movl
fld
out
daa
inc
ret
rolb
scas
cwtl
cld
inc
jge
pushf
repz
out
lock
mov
xor
je
fidivl
pop
push
sub
inc
fdiv
dec
mov
std
fwait
mov
mov
xor
add
test
sbb
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jnp
push
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
sub
mov
call
push
xlat
sub
jbe
pop
mov
stos
push
or
push
shl
je
sub
out
fstps
and
sub
sbb
in
scas
aas
test
sub
sbb
pop
jecxz
pop
mov
repz
push
push
xchg
push
js
ret
dec
cmpsl
imul
mov
mov
icebp
push
fdivrs
cli
mov
push
pop
pop
imul
add
mov
xchg
ds
das
inc
test
push
and
adc
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
inc
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
lock
or
dec
sbb
mov
arpl
ret
inc
inc
xchg
dec
les
test
std
aas
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
aam
xchg
fmuls
cmp
add
or
xor
jb
fisttpll
cmp
lds
sahf
lcall
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
inc
pushf
out
es
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
dec
adc
pop
sbb
pop
inc
loopne
int
mov
lods
push
lsl
lahf
jmp
sbb
push
fists
add
jmp
test
mov
mov
sti
add
je
mov
xor
dec
sbb
sub
mov
aas
stos
push
insb
sarl
adc
test
cmc
sbb
out
push
cld
mov
bound
data16
scas
pop
repz
mov
cmpsb
dec
mov
push
insl
jbe
mov
pop
test
xchg
fs
sbbl
pop
and
test
hlt
pop
mov
and
test
push
mov
enter
jp
outsl
mov
jo
inc
int
inc
xor
jae
ja
jb
fdivrs
cli
jno
stos
insb
lahf
inc
push
cmpb
jmp
test
enter
push
leave
daa
in
hlt
xor
and
cmpsl
or
fisubs
faddl
cmc
mov
and
xor
les
sbb
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
sbb
loop
mov
dec
pop
stos
dec
popa
ljmp
push
sub
ja
lds
movsb
ret
enter
outsb
shll
mov
fwait
and
in
js
or
ret
push
mov
sbb
mov
inc
cmp
arpl
sahf
and
pop
out
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
mov
or
xchg
cmc
mov
cmp
movsb
ret
xor
lahf
cmpsl
mov
jae
mov
int
jno
ret
cmp
push
adc
jno
pop
adc
add
sub
sub
sbb
pop
add
and
push
loop
sub
ret
jecxz
out
hlt
aas
cltd
addr16
add
push
jns
sahf
rcrb
sti
mov
jle
mov
icebp
aaa
mov
sbb
jge
les
leave
into
cmp
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
xchg
lcall
push
and
and
popa
xchg
jecxz
mov
rcll
pop
pop
xor
sub
adc
dec
sub
int3
pop
push
cwtl
cld
inc
ret
jp
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
pop
mov
stc
mov
sti
sti
and
test
cmp
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
mov
and
cmpsl
rclb
xchg
jmp
shlb
int
data16
mov
sub
push
enter
push
dec
repz
lea
aas
sub
push
sub
cmp
shlb
jbe
in
mov
fadds
rcrb
xchg
stos
std
mov
push
ljmp
je
push
mov
scas
shrb
testb
les
mov
clc
jo
cmp
sub
or
das
inc
out
mov
movsl
out
cmp
scas
mov
out
jb
fmul
push
cwtl
sahf
fistpll
mov
call
add
ret
and
popf
in
sti
fisttps
into
xor
in
or
lock
or
andb
jecxz
outsl
insb
xchg
dec
lcall
fisubrs
outsl
or
mov
lahf
push
xor
sub
lea
xor
inc
idivl
adc
ret
pop
xor
or
sbb
cwtl
push
out
push
decb
jno
clc
sub
mov
push
fcoml
push
test
mov
lahf
cmp
aas
dec
sbb
add
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
jg
fwait
adc
add
sahf
xchg
mov
dec
xlat
add
fld1
stc
mov
dec
jae
daa
divb
mov
jae
fidivrs
js
cs
jae
xchg
xor
jo
shll
or
or
push
andl
es
and
xorl
ja
daa
pop
js
dec
dec
lods
les
pop
outsl
or
addr16
mov
mov
xchg
add
mov
inc
inc
sbb
daa
and
mov
push
dec
cmpsl
movsl
mov
movsb
dec
adcl
dec
hlt
xchg
test
push
stos
test
imul
movsl
inc
dec
fnstenv
dec
mulb
outsb
scas
imul
inc
test
and
mov
push
sarb
insl
outsb
pop
cltd
cmpsb
jmp
ss
rclb
in
mov
aas
and
in
inc
std
fildl
arpl
jns
mov
incl
js
or
cmp
fiaddl
stc
fildll
sbb
mov
lret
fwait
adc
dec
hlt
sub
fcomp
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
testb
test
push
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
push
es
leave
inc
add
add
sbb
into
xchg
fwait
cmp
lock
lods
hlt
addr16
pop
dec
ret
push
imul
mov
test
fwait
lcall
inc
mov
sahf
jle
sub
sub
movzbl
mov
push
in
xor
mov
push
push
push
mov
jne
dec
scas
push
dec
in
xchg
mov
cmp
imul
orl
pop
pop
notl
sar
sbb
pop
or
xchg
fstpl
aam
stc
lock
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
test
or
sbb
dec
push
add
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
inc
icebp
xchg
lock
mov
pop
mov
or
outsb
xor
push
lock
pop
lock
mov
fisttps
jb
pop
and
shrb
adc
cwtl
mov
mov
test
pop
sub
outsb
add
dec
adc
pop
aam
xor
stc
inc
outsb
inc
jmp
fwait
cmp
and
das
add
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
adcl
push
add
bound
dec
xor
out
inc
cmp
inc
mov
mov
out
repnz
ret
pop
mov
push
stos
add
imul
mov
cltd
rol
fimuls
xchg
cmc
in
cmp
add
sub
into
pop
imul
push
push
mov
sub
dec
xchg
mov
mov
sbbl
sbb
fs
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
idivl
les
pushf
jne
jnp
inc
mov
add
adc
jle
add
and
mov
mov
negb
mov
je
pop
adc
test
and
std
lods
xor
lods
fcmovnbe
popf
addr16
sbb
pop
inc
insl
hlt
xor
xchg
shl
data16
sbb
mov
xchg
jle
push
insl
xchg
mov
test
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
cmp
mov
xchg
aad
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
jge
lahf
jge
mov
notl
sub
movsb
repz
call
or
je
sbb
mov
sub
hlt
dec
jns
enter
dec
ds
repz
test
pop
and
xchg
xchg
mov
adc
loop
cwtl
das
push
roll
fsubr
das
add
push
cmp
rorl
mov
jae
popf
and
test
xchg
add
dec
scas
insb
lock
sahf
lods
xchg
xor
adc
push
mov
or
mov
mov
movsb
mov
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
cltd
sub
adc
cmp
add
inc
mov
leave
pushf
dec
push
fcmovnbe
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jg
imul
jecxz
fsubrs
loope
stos
adc
add
xchg
xchg
and
xchg
inc
and
psubd
leave
out
pop
xchg
cs
test
xchg
incl
or
std
loop
mov
stc
mov
imul
xchg
incl
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
aaa
lea
push
mov
mov
test
enter
sbb
imul
jmp
in
mov
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jmp
mov
lods
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
xorl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
test
jne
mov
repz
ret
loopne
dec
pop
inc
out
repz
sbb
and
lahf
lret
jecxz
gs
xchg
enter
int
cmpsb
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cli
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ljmp
mov
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
rol
mov
jbe
or
sbb
cltd
add
movsl
push
cwtl
sub
das
cmp
push
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
icebp
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
xor
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
mov
call
les
mov
int3
lods
test
xorl
jns
sub
push
gs
fwait
pop
call
pop
repz
test
and
and
je
and
xor
je
mov
out
mov
ficomps
fdivl
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
xchg
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
dec
movsl
mov
mov
stos
mov
ja
lods
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
out
mov
mov
bound
dec
outsl
sub
add
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jecxz
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
inc
movsb
pop
sbb
jno
into
push
cmp
ret
outsb
pop
dec
jmp
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop
xchg
dec
mov
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
test
pop
rolb
stos
xchg
or
lcall
push
push
aas
mov
mov
ret
pop
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
and
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
notl
sub
sub
popf
inc
and
call
cmp
inc
fcmovne
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
pop
push
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
movsb
lea
out
out
mov
enter
sbb
rolb
inc
mov
fmuls
in
push
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
shlb
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
xorl
xor
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
shl
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
lods
dec
mov
pop
adc
add
inc
stos
int
mov
test
jle
mov
sbb
cs
jnp
in
mov
stc
leave
cmc
je
mov
add
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
cmp
pop
xchg
ja
mov
ds
pop
mov
sti
mov
in
and
sbb
std
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
orl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
call
cmp
pop
inc
nop
jmp
clc
sbb
and
gs
lret
enter
int
xchg
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
movsl
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
js
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
icebp
mov
pop
rol
mov
jbe
push
mov
mov
add
push
cwtl
sub
das
cmp
dec
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
addr16
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
scas
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
or
lcall
sub
test
test
inc
mov
out
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xor
scas
mov
imull
mov
mov
bound
dec
push
sub
or
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
jle
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
lahf
test
xor
sbb
aad
fucomi
jge
shll
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
int3
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fs
xchg
dec
xchg
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbb
pop
xchg
xchg
inc
or
add
add
push
aas
adc
mov
ret
cwtl
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
orl
xchg
sbb
ret
xchg
jp
dec
shrl
sub
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
les
sub
sub
sub
lahf
jle
dec
call
cmp
enter
jmp
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
arpl
imul
mov
inc
adc
sub
stos
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jne
cmpsb
inc
cmpsl
fstp
jnp
mov
mov
test
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
sbbl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
loop
mov
clc
call
cmp
ret
loopne
dec
pop
inc
nop
jmp
clc
sbb
and
gs
js
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sbb
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
and
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
loope
mov
into
mov
dec
mov
mov
add
in
push
cwtl
sub
das
setl
push
jne
and
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jp
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jo
mov
mov
stos
mov
ja
dec
test
test
inc
mov
mov
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
insl
fildll
sbb
mov
bound
dec
subl
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
adc
dec
sub
mov
dec
les
xchg
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
shrb
dec
sbb
repz
fucomi
jge
rcrl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
mov
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aad
fimull
lcall
inc
inc
fcmovnu
loopne
scas
mov
mov
mov
sbb
push
outsb
sbb
sbb
push
xorl
icebp
testb
sbb
pushl
xlat
mov
sub
mov
mov
or
ljmp
ficoml
xchg
add
sbb
fdivs
sbbb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
shl
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
fistps
pop
bound
stos
inc
or
or
add
push
aas
cmc
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
fucomip
mov
mov
dec
cmp
cs
aam
aaa
mov
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
cmp
cmp
cwtl
jbe
mov
jbe
push
xchg
add
mov
iret
add
scas
xchg
jg
push
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
sbb
imul
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
movsb
popf
scas
inc
movsl
fcompl
xchg
clc
or
lret
add
jbe
dec
inc
push
aas
and
mov
ret
cmpsl
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
sbb
mov
sbb
in
and
xchg
jp
dec
out
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
out
and
call
cmp
cltd
enter
pusha
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cmp
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
mov
lock
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
ret
repnz
pop
mov
frstor
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
in
rolb
pop
dec
xchg
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
nop
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
and
dec
mov
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
fildl
je
aas
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
sbbl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
icebp
call
cmp
loopne
dec
pop
inc
push
jmp
clc
sbb
and
lret
jecxz
gs
in
enter
int
shll
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xchg
pop
stc
mov
cmp
cmp
add
inc
push
cwtl
sub
das
dec
pushf
dec
and
xchg
add
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
daa
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
add
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
mov
push
cmp
mov
jmp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
in
mov
mov
bound
dec
jno
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
popf
lods
mov
mov
xchg
test
dec
mov
xchg
dec
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
pop
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
pop
dec
js
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mul
jo
jb
dec
xchg
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
pop
xchg
jb
les
addl
add
push
aas
dec
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
pop
popl
mov
adc
xchg
jp
dec
push
test
sub
cmp
sbb
mov
fld1
std
jge
aam
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
xor
lahf
jle
dec
cltd
call
cmp
inc
fmulp
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
add
imul
fwait
lea
mov
inc
adc
sub
scas
push
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jno
cmpsb
inc
cmpsl
fstp
fsub
mov
mov
test
enter
sbb
jae
inc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fs
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
lahf
idivl
push
call
cmp
ret
loopne
dec
pop
inc
add
in
and
lret
jecxz
gs
and
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xor
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
out
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
pop
mov
stc
mov
mov
add
jo
xor
pushf
dec
and
xchg
std
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
call
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
sub
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
fwait
movsl
mov
mov
stos
mov
ja
lods
test
test
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
aad
xchg
dec
inc
shlb
or
imul
nop
aaa
fwait
lods
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
outsl
xchg
cwtl
fadds
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
mov
imul
hlt
or
les
mov
mov
sub
cmp
sbbb
mov
mov
aam
or
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
hlt
fildll
push
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
push
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
sbb
xor
mov
jge
rcrl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
xor
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
jo
jb
dec
jno
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cmp
fcompl
xchg
adc
addl
add
push
aas
jno
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
fldt
cmp
sbb
aas
ret
fld1
std
jge
xor
lock
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
lods
xchg
mov
sub
push
inc
and
call
cmp
inc
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
repz
lea
mov
inc
adc
sub
xchg
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
outsb
lea
pop
out
mov
enter
sbb
rolb
inc
cmc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
into
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sub
fucomip
jl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
sti
call
cmp
ret
loopne
dec
pop
inc
shr
repz
sbb
and
gs
jle
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
add
xchg
dec
rcrl
adc
xchg
mov
inc
mov
dec
mov
loop
inc
les
rcr
movsl
cmp
push
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
aam
int3
add
cwtl
sub
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
imul
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
clc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
es
pop
insl
mov
iret
mov
mov
add
xchg
cwtl
sub
das
rcrb
leave
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
cmc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
lcall
sub
test
test
inc
mov
sbb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
xchg
mov
mov
bound
dec
cmp
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
or
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
mov
xor
ret
mov
jge
rcrl
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
jmp
int3
xor
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loopne
jo
jb
dec
subb
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jo
scas
inc
movsl
fcompl
xchg
ret
sbbl
jbe
dec
ds
aas
dec
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
mov
mov
and
xchg
jp
dec
outsl
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xlat
xchg
mov
sub
jns
and
call
cmp
inc
jecxz
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
dec
mov
fisubrs
popf
xchg
outsb
mov
adc
into
popa
mov
mov
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fimull
mov
mov
test
enter
sbb
aaa
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jle
mov
lahf
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
mov
jne
mov
sbb
fadd
loopne
dec
pop
inc
int
repz
sbb
and
gs
in
enter
int
divl
inc
inc
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
xor
mov
jns
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jne
mov
int
mov
pop
mov
mov
add
add
hlt
das
or
or
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
and
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fs
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
fsubrp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
in
scas
mov
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
fiaddl
jo
cmp
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
inc
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
clc
jmp
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
jo
jb
dec
adc
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbbb
mov
jb
test
addl
add
push
aas
int3
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
shrb
aad
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adcb
jb
xchg
mov
repnz
and
call
cmp
inc
ja
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
or
repz
fwait
lea
mov
inc
adc
sub
add
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
out
lea
mov
je
xchg
jecxz
inc
sbb
fiaddl
inc
jg
mov
or
daa
xor
push
xchg
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
je
mov
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
cmpsl
idivl
xor
repz
ret
loopne
dec
pop
inc
jbe
repz
sbb
and
lahf
lret
jecxz
gs
ror
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
add
mov
sub
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jns
mov
sbb
mov
arpl
cmp
add
fisubrs
cwtl
sub
das
les
cli
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
loopne
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
and
lcall
sub
shrl
inc
mov
mov
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
mov
mov
bound
dec
add
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jl
mov
mov
xchg
test
dec
mov
out
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jecxz
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
jmp
xor
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
xchg
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
es
scas
inc
movsl
fcompl
xchg
dec
or
or
add
push
aas
fs
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
mov
push
popl
rcrl
mov
and
xchg
jp
dec
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cld
xchg
mov
sub
addl
jbe
jb
js
cmp
testl
sbb
cltd
xchg
mov
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
fwait
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrl
or
int
imul
push
sub
repnz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
fildl
je
int
jecxz
inc
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
out
mov
lods
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
addl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
inc
sbb
rol
decl
inc
call
in
and
lahf
lret
jecxz
gs
xchg
enter
int
xor
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
xlat
mov
js
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
daa
mov
mov
sbb
mov
or
sbb
push
cwtl
sub
das
jl
dec
and
xchg
sub
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
or
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
outsb
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
or
mov
mov
cmp
xchg
idivl
cmp
pushf
cmpsl
jnp
lret
adc
push
mov
xchg
loop
leave
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
shll
lcall
sub
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
js
scas
mov
imull
mov
mov
bound
dec
cmp
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
lods
mov
mov
xchg
test
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
sbb
mov
cmp
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sti
jmp
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mul
jo
jb
dec
lds
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
in
popf
scas
inc
movsl
fcompl
xchg
or
adc
xor
or
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
inc
es
mov
sbb
sbb
adc
test
sub
cmp
sbb
stos
ret
fld1
std
jge
nop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
in
and
call
cmp
inc
ds
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
jmp
repz
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
outsl
out
mov
enter
sbb
sub
inc
add
in
mov
push
xchg
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
js
mov
add
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
daa
call
cmp
ret
loopne
dec
pop
inc
fs
clc
sbb
and
lahf
lret
jecxz
gs
mov
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
adc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
adc
pop
jno
mov
push
ret
mov
add
scas
push
cwtl
sub
das
jge
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
sbb
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xor
lcall
sub
shrl
inc
mov
or
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
pushf
mov
mov
bound
dec
push
sub
les
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pusha
lods
mov
mov
xchg
test
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
popf
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
loop
xchg
dec
lock
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
fistpl
pop
and
stos
scas
or
add
jbe
dec
jge
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
xchg
jmp
sbb
std
and
xchg
jp
dec
add
push
sub
cmp
sbb
addr16
fld1
std
jge
stc
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rcll
sub
sub
xchg
inc
and
call
cmp
cltd
enter
fcmove
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
and
imul
lea
mov
inc
adc
sub
loope
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
mov
lock
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
ret
repnz
pop
mov
frstor
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
in
rolb
pop
dec
xchg
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
sti
push
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jmp
fstp
insb
out
mov
enter
sbb
cmp
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
bound
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
jl
xorl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
jno
mov
in
call
cmp
ret
loopne
dec
pop
inc
mov
in
and
lahf
lret
jecxz
gs
insl
enter
int
jge
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
shl
inc
mov
imull
cmpl
push
jl
jae
mov
adc
iret
xlat
cwtl
pop
and
pop
push
jmp
adc
or
mov
cmp
inc
mov
aaa
jmp
add
pusha
add
cmc
xor
jle
outsl
cltd
jmp
sub
sbb
rol
xchg
mov
sbb
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
call
imul
jmp
and
es
fcoms
add
sbb
fdivl
outsb
mov
dec
mov
mov
lods
call
cmp
pop
inc
add
repz
sbb
and
lahf
lret
jecxz
gs
imul
mov
adc
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
es
mov
jmp
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
jne
inc
scas
push
pop
jo
movsl
or
xor
mov
xchg
dec
in
push
push
fcoml
adc
ljmp
stc
jmp
js
or
xchg
test
cs
int3
dec
and
test
pop
aam
mov
adc
mov
rep
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
mov
jp
mov
leave
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
das
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
stos
mov
pop
stos
mov
jmp
sbb
fwait
add
cmp
cwtl
sub
das
test
dec
and
xchg
icebp
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lods
movsl
mov
mov
stos
mov
ja
jl
shrl
inc
mov
or
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
dec
mov
mov
bound
dec
nop
sub
and
or
cmp
inc
lcall
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
outsl
xchg
cwtl
fadds
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
mov
imul
hlt
or
les
mov
mov
sub
cmp
sbbb
mov
mov
aam
or
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
inc
fildll
push
mov
mov
bound
dec
push
sub
test
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
scas
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
cld
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
fwait
jmp
xor
mov
popf
dec
stc
shll
rorb
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
pop
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jbe
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
int
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
in
test
sub
cmp
sbb
in
fld1
std
jge
sub
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
mov
cmovge
call
cmp
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
in
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
movsb
out
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jmp
push
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
pop
call
cmp
ret
loopne
dec
pop
inc
cli
jmp
clc
sbb
and
lahf
lret
jecxz
gs
vsubps
pushf
int
stos
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
shl
inc
mov
imull
cmpl
push
jl
jae
mov
adc
iret
xlat
cwtl
pop
and
pop
push
jmp
adc
or
mov
cmp
inc
mov
aaa
jmp
add
pusha
add
cmc
xor
jle
outsl
cltd
jmp
sub
sbb
rol
xchg
mov
sbb
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
call
imul
jmp
and
es
fcoms
add
sbb
fdivl
mov
pop
sbb
idivl
xor
sbb
rol
loopne
dec
pop
inc
imul
repz
sbb
and
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
dec
mov
sbb
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jns
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
add
xchg
dec
rcrl
adc
xchg
mov
inc
mov
dec
mov
loop
inc
les
rcr
movsl
cmp
push
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
aam
int3
add
cwtl
sub
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
in
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jmp
ficomps
mov
jo
ret
mov
add
subl
and
sbb
pop
stos
fsubr
test
xchg
leave
pusha
fldt
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
popa
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
adc
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
adc
lcall
sub
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
scas
mov
mov
bound
dec
push
sub
sbb
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
ljmp
ficoml
xchg
test
dec
mov
sti
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmp
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
fucomp
bnd
int3
xor
mov
popf
dec
stc
call
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
out
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
scas
inc
movsl
fcompl
xchg
lods
or
cmpsb
add
jbe
dec
jo
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
mov
lea
jmp
sbb
in
adc
test
sub
cmp
sbb
dec
ret
fld1
std
jge
cmp
lock
mov
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
or
lahf
jle
dec
popf
call
cmp
inc
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jb
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
repnz
cmpsl
mov
fwait
lea
mov
inc
adc
sub
aaa
push
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
cmpsb
inc
cmpsl
fstp
or
mov
mov
test
enter
sbb
adc
inc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
and
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
cwtl
mov
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
fdiv
mov
scas
call
cmp
ret
loopne
dec
pop
inc
imul
repz
sbb
and
gs
jb
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
pop
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
enter
mov
mov
sbb
cmp
inc
pop
push
cwtl
sub
das
in
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
inc
movsl
mov
mov
stos
mov
ja
cltd
test
test
inc
mov
scas
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
scas
mov
imull
mov
mov
bound
dec
aam
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
add
fiaddl
xchg
test
dec
mov
fiadds
dec
jo
mov
dec
les
inc
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
lock
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
lahf
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop
xchg
dec
xor
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lcall
pop
loope
andl
addl
add
push
aas
cmp
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
push
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
sub
lahf
jle
dec
adc
fdivrl
fstps
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
jae
cmpsl
mov
fwait
lea
mov
inc
adc
sub
into
push
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shll
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
mov
cli
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
clc
dec
mov
jge
add
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
test
mull
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lahf
push
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
out
mov
enter
sbb
mov
inc
xor
mov
or
daa
jae
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
and
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
xorl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
and
sbb
mov
pop
inc
repz
clc
sbb
and
jecxz
gs
lret
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
and
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sarl
mov
jbe
sub
cmp
sbb
push
cwtl
sub
das
pop
pushf
dec
and
xchg
in
pop
stos
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
int
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
nop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
dec
test
test
inc
mov
fs
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
ret
fildll
dec
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
shrl
xcrypt-cbc
cmpsl
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
sahf
test
xor
sbb
inc
fucomi
jge
rorl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
in
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xor
jo
jb
dec
ret
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
lahf
or
je
add
push
aas
mov
mov
ret
inc
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
mov
mov
mov
and
xchg
jp
dec
stc
test
sub
cmp
sbb
pop
ret
fld1
std
jge
and
lock
mov
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
dec
xchg
mov
sub
sub
and
call
cmp
cltd
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
rcrb
mov
jge
les
mov
cmp
mov
ja
adc
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
mov
js
xchg
inc
mov
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
mov
mov
mov
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
jecxz
mov
sub
xchg
inc
and
call
cmp
cltd
enter
jecxz
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
or
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
cmp
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
sub
popf
push
jnp
stos
dec
and
push
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
dec
jbe
mov
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
int
sbb
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
rorl
jmp
mov
mov
test
enter
sbb
push
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
xor
mov
cmp
imul
mov
sarl
push
flds
sahf
dec
idivl
mov
mov
lods
fbstp
xlat
rclb
in
cmp
lcall
int3
xor
xor
cli
dec
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jae
mov
xchg
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
jmp
mov
lahf
aam
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
jge
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
sbbl
cld
inc
pop
mov
scas
jno
mov
sub
pop
push
dec
ja
loop
test
mov
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
iret
mov
push
mov
jnp
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
mov
in
and
lret
jecxz
gs
pop
enter
int
sub
inc
leave
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
sbbb
mov
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
hlt
cmp
mov
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
xor
out
lods
lcall
cmp
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jl
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
aaa
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xor
fwait
add
sub
add
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
dec
je
and
cmp
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
shll
mov
jl
jl
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
and
ficomps
mov
mov
sbb
pushf
add
push
push
cwtl
sub
das
xor
dec
and
xchg
scas
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
and
mov
or
pushf
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
test
les
test
cmp
mov
pop
icebp
imul
dec
cmc
mov
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
shlb
mov
loope
mov
cld
dec
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
into
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
cld
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
pop
addl
enter
jns
sub
test
push
sub
add
in
cmpsl
jne
mov
stc
insl
lsl
call
dec
jne
bound
cmp
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
ret
mov
shll
fidivl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jae
mov
mov
stos
mov
ja
sti
test
test
inc
mov
cmpsb
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
fdivl
sbbl
jge
subl
adc
sub
push
inc
pop
mov
mov
push
fidivrs
and
mov
pop
movsl
xchg
push
cs
test
movsl
je
enter
push
adc
add
mov
cmp
add
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fidivs
push
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
fs
mov
bound
dec
mov
shlb
or
imul
nop
aaa
fwait
lods
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
outsl
xchg
cwtl
fadds
cmp
aad
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
mov
imul
hlt
or
les
mov
mov
sub
cmp
sbbb
mov
mov
aam
or
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
adc
scas
mov
imull
mov
mov
bound
dec
mov
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
or
add
arpl
or
out
cmp
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
jp
jmp
xor
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fisubs
cmp
mov
xor
jmp
lcall
es
sbb
or
lds
ret
jle
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
fldl
dec
cmp
pop
dec
les
lcall
cmpsl
cld
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
sbb
xchg
mov
adc
mov
pusha
stos
cmp
mov
daa
fwait
lea
clc
and
and
test
sub
fwait
inc
jecxz
xor
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
mov
movsl
push
mov
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cld
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jl
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
xlat
jecxz
mov
or
loop
jne
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
cli
jecxz
add
sub
pop
add
adc
repz
and
int
inc
sub
push
fs
mov
push
and
lret
jg
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
jno
inc
push
cmp
ret
outsb
pop
dec
pop
jmp
xor
leave
loop
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
pop
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
mov
mov
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
addb
add
int
test
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
adc
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
jle
adc
test
inc
test
inc
jo
and
aad
scas
add
stos
lods
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
leave
mov
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
pop
cmp
stos
lds
addl
add
push
aas
and
mov
ret
insb
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
pusha
mov
int
mov
add
popf
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
decb
fnsave
test
insb
push
push
xchg
mov
lods
add
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcl
andl
mov
mov
and
xchg
jp
dec
add
cmp
inc
out
mov
ret
fld1
std
jge
cmp
lock
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
shrb
insl
std
loopne
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
jg
push
in
mov
jmp
inc
jno
arpl
movsl
divb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
lret
mov
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
sub
xchg
mov
pop
inc
and
call
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
jo
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
xchg
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
or
imul
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
movsb
sahf
stc
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
movsb
push
sub
adc
test
pop
sbb
mov
in
jo
mov
int3
pop
add
inc
xor
or
inc
cmp
dec
sahf
dec
mov
fwait
test
popa
stos
ret
call
jae
cmp
add
into
push
adc
push
inc
scas
mov
mov
mov
stos
lods
dec
add
add
movsb
js
cltd
lret
movsl
jle
hlt
or
xor
out
hlt
dec
sbb
adc
xor
mov
mov
mov
xchg
test
mov
test
inc
in
jecxz
mov
push
movsl
push
push
lret
gs
lods
pop
ja
sub
hlt
jbe
pusha
test
ficomps
jp
out
fbstp
lcall
je
jmp
or
dec
mov
ds
sub
pop
mov
xchg
mov
dec
mov
mov
dec
clc
loope
pop
xchg
js
jb
mov
xchg
push
cltd
enter
rorl
add
mov
mov
or
sub
adc
xchg
jg
imul
shlb
fisubs
sub
mov
ret
pop
jne
xchg
or
dec
sti
stc
sti
mov
sbb
out
inc
add
aad
or
scas
xor
dec
cld
xchg
xchg
sti
cmp
lock
add
iret
or
mov
pop
lods
dec
dec
and
repz
inc
and
cmp
fdivrl
enter
cwtl
cli
jp
cltd
mov
push
dec
cmpsl
push
ja
dec
jge
pop
add
mov
movsb
push
fcoms
lods
inc
pop
shlb
mov
push
in
xlat
mov
lcall
push
mov
pushl
adc
aaa
xchg
int
mov
rcrl
mov
in
pop
pop
pusha
inc
sti
cs
fsubl
pop
add
call
lods
push
cltd
jmp
adc
int3
pop
add
les
jp
adc
fsubrs
rolb
cmp
mov
into
inc
mov
mov
sbb
inc
mov
fists
inc
inc
scas
mov
adc
jb
mov
inc
sub
push
sbb
jl
pop
ret
adc
cltd
int3
addr16
mov
fisubrl
dec
in
ficoml
cld
lret
push
leave
mov
sbbb
xchg
mov
into
das
test
sarl
movsl
cmp
stos
cwtl
and
or
jge
or
push
jne
xchg
ljmp
sbb
push
jle
cli
cmp
xchg
dec
test
push
fwait
push
rcrb
inc
xor
push
js
dec
push
pop
xor
lds
in
push
lret
stos
xlat
insb
jmp
inc
jno
lret
mov
lods
xchg
inc
cltd
enter
movsl
add
jb
dec
add
xchg
dec
sub
gs
inc
dec
cmp
test
inc
test
popa
xor
fldt
xchg
xor
int
xor
call
rclb
lods
nop
dec
sbb
sarb
dec
out
push
test
push
iret
jmp
lret
clc
cmpsb
shrl
dec
jl
push
dec
repz
cmp
rcrl
pop
xchg
inc
inc
pop
xor
imul
pop
jb
mov
movsb
push
lds
mov
out
sti
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
push
xchg
adc
mov
adcl
push
sbb
jo
je
mov
push
movsl
push
xchg
pop
mov
int
cs
inc
mov
pop
mov
mov
sub
int
xchg
dec
push
mov
sbb
mov
sbb
cmpsl
sub
cmp
adc
cwtl
dec
and
mov
mov
test
add
imul
mov
dec
test
pusha
aad
nop
dec
add
or
insl
cltd
ret
push
sbb
mov
divb
js
sub
inc
push
pop
sbb
sbb
cli
test
std
mov
pop
dec
cmp
scas
fcoms
data16
jo
xchg
or
mov
add
sbb
xchg
jbe
lods
ficoms
jg
pop
push
fcomp
add
addr16
mov
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
or
push
pop
mov
xlat
xchg
imul
sbb
gs
in
outsl
out
ret
aad
xchg
mov
cltd
add
mov
mov
cmpb
pop
lret
dec
sahf
dec
movsb
lods
repz
lret
call
jg
aam
sbbl
cmp
test
or
lds
add
mov
sbb
sbb
or
lods
push
idivb
cmp
iret
dec
xor
lods
xchg
sbbb
stos
inc
in
cmpsl
push
push
ss
sub
fildll
fs
lods
dec
mov
xor
test
lods
or
cmp
adc
pop
dec
sub
or
scas
cmp
add
adc
mov
lcall
sbb
sbb
into
scas
push
cld
adc
adc
repz
jo
dec
sbb
add
dec
sarb
pop
icebp
lods
sbbl
mov
and
fdivrs
cli
jae
push
push
jae
gs
outsl
jl
dec
mov
call
movsl
mov
test
xchg
cltd
js
cmpsb
mov
aam
mov
cmp
and
mov
test
add
int
adc
in
and
mov
dec
test
ja
inc
sbb
dec
xchg
leave
fsubrl
int
inc
cli
leave
rcrb
sbb
les
pop
stc
mov
ja
inc
scas
sbb
mov
mov
popf
lret
mov
fmull
adc
xchg
or
dec
inc
cmp
scas
fbld
xchg
dec
movsl
xchg
mov
add
pop
cld
ret
mov
test
ret
std
pop
enter
icebp
sbb
leave
or
ret
rclb
mov
adc
cmpsl
or
sub
push
rcll
inc
cmpsl
add
cltd
push
mov
repz
mov
jmp
std
mov
sti
and
sbb
lret
sub
addr16
mov
int
imul
xor
pop
pop
pop
push
test
movsb
repz
adc
jne
movsb
or
mov
aaa
dec
mov
or
repnz
cltd
cwtl
out
mov
jecxz
xor
jmp
bound
push
fcompl
jne
jns
lds
nop
lds
or
lods
shrl
inc
pop
push
mov
stc
inc
xchg
mov
popf
fsub
mov
pop
adcb
jb
xor
ret
sbb
in
or
inc
mov
dec
dec
jno
mov
movsb
std
repz
int3
cmp
xchg
xor
mov
leave
xor
mov
fiaddl
punpcklbw
or
adc
test
cltd
imul
pop
aam
in
pop
push
js
stos
lcall
std
mov
push
push
fwait
xchg
mov
and
adc
xchg
enter
add
cmp
ljmp
sahf
insl
sahf
dec
mov
push
pop
stos
enter
mov
add
aas
push
clc
cmp
pop
lahf
lret
xor
jecxz
adc
pop
ret
mov
mov
iret
popf
mov
and
mov
xlat
dec
pop
xchg
in
daa
insl
jg
dec
pusha
in
push
pop
cmp
mov
lods
mov
mov
mov
nop
sbb
imulb
pop
lock
adc
mov
push
jae
aaa
push
xor
add
fsubrl
lret
or
jo
int3
mov
fs
addb
adc
fisubrs
or
stos
pusha
xor
xchg
push
mov
scas
iret
orb
cmc
mov
js
stos
lcall
stos
cmpsl
rcr
fsubrp
loopne
xor
inc
cltd
mov
mov
xor
push
icebp
mov
dec
dec
andl
pop
sahf
inc
sub
mov
call
pushf
mov
into
sbb
mov
jp
popa
xchg
lods
inc
add
adc
push
hlt
sub
lock
or
jg
enter
dec
decb
fnsave
or
rcll
jecxz
push
lahf
lods
paddusw
mov
mov
insb
or
sbb
mov
scas
lea
adc
lcall
sbb
and
lret
sub
xchg
cmpsl
xchg
push
xchg
leave
in
test
rcr
mov
sub
leave
lcall
imul
cwtl
outsb
test
push
fdivrs
sub
sub
pop
xlat
cltd
call
inc
sbb
bound
pop
mov
jecxz
movsl
add
adcl
sub
push
mov
pushf
imul
inc
lahf
sbb
call
loopne
pop
cmp
sub
divl
inc
xchg
stos
or
sub
mov
pop
mov
adc
sub
ja
mov
fstpl
ret
pop
jbe
sub
cmp
sub
cmc
sbb
call
dec
push
nop
sbb
test
sbb
sbb
jne
add
or
mov
add
pop
fs
mov
fisttps
jnp
js
xchg
jg
adc
enter
mov
sbb
pusha
push
test
popl
cmp
out
mov
adc
push
dec
sahf
imul
popf
add
mov
sub
cmp
mov
sbb
fstpl
xchg
scas
daa
loopne
mov
sahf
dec
inc
int
push
fcompl
insb
pop
adc
xchg
int3
pop
das
idivl
push
clc
jbe
mov
sbb
pop
loopne
movsl
mov
mov
jmp
jnp
xor
push
lcall
mov
adc
mov
sub
mov
mov
test
lds
lods
push
shrl
sub
test
ljmp
sbb
mov
inc
test
xchg
test
jo
and
fisubl
pushf
movl
rclb
mov
adc
jp
fisttps
fmuls
addb
popf
fbld
lds
rcrb
hlt
xchg
sub
sbb
mov
mov
test
jle
and
xchg
jp
int3
pop
test
sub
dec
fisubl
pop
fidivrs
mov
fwait
lea
pop
out
sbb
int
xchg
inc
inc
mov
cltd
adc
sbb
mov
cs
aad
test
test
bound
mov
arpl
filds
nop
sti
mov
jecxz
xchg
ret
mov
mov
pushf
cmp
inc
or
jecxz
mov
mov
aaa
cmp
adc
mov
sbb
scas
mov
jecxz
ljmp
pop
jne
cmpsl
xchg
push
nop
pop
stos
leave
add
or
mov
stos
push
inc
sbb
fsts
test
lods
mov
mov
pusha
inc
fisubl
loopne
jmp
push
dec
stos
leave
loop
sarb
rcrb
andl
test
cmpsb
js
inc
dec
pop
xor
pop
mov
pop
xchg
lahf
call
sub
mov
stos
cmpsl
ret
fisttpll
cmp
mull
xchg
adc
int3
add
or
push
hlt
test
push
hlt
jmp
push
cwtl
cmpb
xor
shr
and
dec
imul
clc
sub
inc
inc
div
cwtl
adc
cmp
mov
inc
sub
add
add
push
xor
dec
movsb
je
pushf
lret
movsl
ret
adc
lods
fsubrl
mov
push
and
test
cli
movsb
fnstenv
ljmp
cmp
icebp
add
pop
push
jle
or
jmp
xchg
lods
dec
mov
add
jbe
xor
adc
xlat
jnp
mov
mov
stc
leave
cs
inc
mov
out
or
ds
jo
mov
fdivl
sbb
and
cwtl
dec
and
push
out
mov
dec
push
fdivrs
push
mov
call
fnstcw
mov
xor
stos
jae
jecxz
or
hlt
jl
fwait
xor
fisubs
fsubrl
test
and
rol
xchg
or
enter
inc
pop
pop
outsb
loope
pop
daa
dec
repz
and
add
pop
dec
in
sbb
mov
inc
sub
xor
sbb
leave
lahf
sbb
aam
movb
inc
mov
shlb
fisubl
movsb
fstps
push
adc
ficomps
clc
sub
sahf
fcmovnb
adcl
or
imul
sbb
push
rcll
mov
push
test
add
nop
jae
push
mov
ficomps
jl
xor
mov
popl
lds
rolb
cwtl
cld
daa
js
mov
xor
adc
mov
mov
inc
lods
xlat
cmpsl
jbe
inc
sbb
inc
lods
pop
repz
cmp
test
cmpsb
jnp
clc
ja
adcl
xor
mov
push
or
rclb
xchg
dec
mov
inc
sub
ret
mov
fcomps
mov
dec
sub
pop
sbb
sbb
nop
sti
std
mov
or
pop
sti
scas
add
cli
fdivrs
mov
or
push
leave
jns
dec
movsl
ret
pop
mov
lret
mov
test
mov
jae
ljmp
jge
subb
sbb
stos
sar
adc
test
arpl
lods
clc
dec
mov
cmp
or
or
inc
adc
sbb
or
inc
test
push
add
inc
mov
std
adc
jmp
mov
fisubs
xchg
sbb
xor
jmp
sbb
fistps
aam
insl
loope
cli
mov
cmp
add
es
pop
pop
cwtl
test
out
push
adc
dec
xchg
cltd
push
shlb
fcmovbe
idivl
sub
test
or
mov
jmp
sahf
jle
imul
fsubl
shlb
hlt
gs
dec
aaa
into
int3
xchg
push
in
lods
dec
mov
cld
or
mov
aam
pop
xlat
icebp
negb
subl
mov
das
push
dec
repnz
mov
and
add
add
mov
fisttps
pop
scas
ret
cmp
test
push
or
lds
sbb
mov
fwait
lods
jle
jmp
loop
sbb
mov
mov
push
dec
cmp
cmp
sahf
sbb
subl
nop
outsb
out
add
cmpsb
js
add
pop
xor
sbb
fldl
push
jle
sub
ja
jno
ljmp
cmp
bound
xchg
xor
pop
dec
inc
push
adc
add
ljmp
insb
sbb
pop
xor
ljmp
push
popf
jp
add
pop
cmp
pop
push
shll
mov
lock
dec
sbb
jmp
xchg
sti
int3
jcxz
adc
pop
jnp
sbb
test
das
push
dec
pop
rorb
and
adc
dec
mov
xor
test
and
push
test
pop
call
sbb
push
shlb
inc
clc
dec
les
or
mov
mov
xchg
pop
pop
dec
xor
popf
fists
sbb
sub
shrl
push
inc
shlb
push
inc
pop
and
and
test
dec
je
scas
data16
dec
xor
dec
mov
lock
popf
cmpsl
icebp
dec
leave
jb
ret
xlat
or
bound
lret
or
fmuls
movsl
mov
adc
xchg
cmp
or
pop
ljmp
pusha
pop
loopne
dec
add
mov
cmp
jp
add
add
cmc
lods
inc
es
add
lods
movsl
sbb
mov
xchg
sub
adc
inc
in
std
test
and
fldl2e
je
sahf
das
xchg
stc
cli
in
test
jl
sbb
ret
add
sub
adc
pop
sub
jp
add
jno
jb
adc
test
pusha
jle
scas
adc
fisubrl
jnp
inc
mov
mov
inc
sarb
add
sub
mov
rclb
lahf
mov
stos
icebp
mov
fcomps
cmp
call
int3
vcmpps
and
inc
inc
popl
pop
or
inc
cmp
sbb
mov
cmp
adcb
lea
aam
sti
pop
mov
mov
jmp
jecxz
movsl
mov
fcom
mov
cmp
pop
mov
hlt
sub
fsubrl
adc
sub
sbb
pop
test
inc
lahf
stos
sub
scas
xchg
sbb
flds
xchg
inc
sub
jno
adc
test
mov
sbb
lcall
cmp
jns
inc
rorl
shll
cltd
fmull
cmp
clc
out
jmp
mov
mov
push
sub
popl
mov
mov
cwtl
adc
imul
rcrb
push
fdivrl
and
mov
sti
sti
and
test
or
ljmp
xchg
cmp
adcb
lea
into
push
stos
xchg
imul
push
popf
mov
cmp
jp
add
mov
mov
dec
cmpsb
dec
cmpsl
ret
test
dec
mov
icebp
idivb
mov
pop
add
jns
lds
sub
xchg
aam
ja
stc
cli
in
test
or
invd
mov
shlb
push
xor
popf
cwtl
clc
pop
stos
jne
add
shrl
dec
movsb
aad
xor
xor
fwait
iret
push
push
fwait
push
push
pop
adc
js
cwtl
hlt
inc
sarb
or
shll
and
cmp
pop
mov
mov
xchg
rclb
movd
mov
pop
mov
gs
outsl
cmpsb
sti
mov
in
int3
push
aaa
mov
add
mov
mov
int3
aas
pop
aad
aaa
pop
cmpsb
scas
out
fidivl
movsb
pop
ret
insl
xchg
scas
out
fildl
enter
inc
xchg
cmp
unpcklps
mov
add
pusha
add
mov
jp
pop
add
fcmovb
aaa
sub
sbb
jns
lds
nop
orl
enter
mov
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
rcll
adc
jl
sbb
mov
and
xchg
or
or
xor
pop
xor
icebp
leave
mov
lret
xchg
test
jnp
inc
mov
fwait
jnp
add
add
mov
clc
or
fstl
dec
test
mov
sahf
mov
fnstsw
rorb
data16
push
adc
inc
sub
inc
inc
mov
loope
test
jmp
xor
mov
inc
mov
test
das
test
clc
sbb
mov
sbb
sbb
dec
stos
pop
fnstsw
jecxz
cmpsl
jecxz
inc
xor
adc
sbb
cmp
dec
mov
and
ret
push
cmp
dec
and
mov
movsb
fisubl
lahf
mov
lret
fucomp
jae
jno
cld
xchg
mov
ret
cmp
scas
orl
xchg
dec
bound
test
inc
push
subl
stos
std
xor
lods
movb
loope
movsb
fcoml
es
xchg
cmp
jmp
mov
dec
jp
scas
jl
les
adc
xor
rorl
rcr
mov
mov
inc
fisttpl
arpl
add
push
cltd
push
jns
sbb
lret
sub
cmp
jae
mov
mov
fwait
repz
sarb
out
or
mov
mov
jnp
dec
jge
mov
fistps
and
push
mov
roll
pop
dec
scas
test
movsl
cmpsb
xor
sub
leave
cmp
outsl
lock
stc
loopne
mov
call
rorl
not
lret
mov
sbb
inc
stos
aam
clc
sub
or
lret
push
dec
jecxz
inc
sub
ret
or
jns
mov
popf
lret
add
stc
or
icebp
push
push
pop
jae
hlt
cmpsl
jmp
imul
push
jae
mov
repz
and
pop
jp
sbb
pop
pusha
jge
and
sbb
sbb
shlb
or
lret
test
sub
push
mov
popf
test
pop
xor
jge
jmp
dec
adc
xchg
jg
cmp
sub
jl
push
push
dec
mov
jae
sbb
sub
das
jae
ret
popa
mov
sub
sub
call
xor
daa
pop
mov
and
lods
mov
lds
add
sub
mov
in
cld
movb
add
mov
aaa
fnstenv
in
into
push
adc
xlat
stos
mov
mov
push
dec
sbb
adc
mov
fs
jne
das
xchg
stc
cli
in
test
or
and
fldl
js
scas
lret
fmul
cltd
pop
stos
xchg
fistl
jb
mov
jno
aam
lods
sti
add
inc
mov
scas
fcmovne
push
fbstp
or
xor
push
sarb
inc
sbb
add
xchg
push
les
xchg
and
mov
jp
pop
and
loope
in
cli
mov
push
bound
jmp
mov
inc
out
pusha
je
call
lock
inc
stos
jmp
lods
mov
loope
push
xlat
dec
mov
ret
les
cmp
imul
push
popf
mov
cmp
jp
add
adc
sbb
mov
insl
lcall
lret
movsl
mov
imulb
adcl
lret
sbb
gs
pop
push
rcll
in
ror
in
sbb
arpl
inc
push
test
ret
add
pop
addb
jl
and
dec
scas
mov
movsl
test
pop
sbb
jecxz
fwait
dec
cmp
into
mov
mov
cld
repnz
psraw
mov
adc
cmp
mov
dec
in
cs
xchg
xor
mov
outsl
push
pop
mov
mov
pop
hlt
in
jbe
cli
mov
mov
dec
cs
lea
data16
call
int3
pop
cmp
or
jmp
mov
fstp
dec
cwtl
xor
dec
inc
jmp
jge
cmp
inc
inc
lret
add
mov
loopne
pop
daa
into
xchg
jecxz
inc
mov
bound
loopne
mov
inc
fmul
jbe
pop
mov
or
pop
or
rcll
pmuludq
pop
cwtl
mov
scas
push
sub
dec
dec
sbb
lret
and
xchg
dec
sbb
test
mov
outsb
mov
inc
push
shlb
cwtl
adc
jb
sbb
popa
dec
ss
lahf
xor
lcall
sub
stc
stos
add
jbe
sbb
sbb
lods
je
out
idivl
stos
xor
pushl
mov
push
and
push
jmp
cwtl
movsl
inc
cli
cmp
adc
push
pop
jp
lahf
dec
jo
es
cmp
mov
into
sbb
cmpsl
mov
cmp
mov
jle
adc
or
xchg
dec
push
sub
jb
sub
mov
imul
sub
loopne
lcall
iret
or
jns
mov
adc
sub
or
scas
and
ljmp
xchg
push
mov
jbe
adc
jno
pop
in
pop
popf
out
pop
movsb
push
dec
shl
ljmp
add
jno
push
push
pop
xchg
lret
or
movsl
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
jnp
js
mov
jmp
or
and
subl
pushf
add
cmpsl
sub
cltd
jnp
pop
mov
hlt
ficompl
inc
pop
mov
inc
sbb
inc
mov
call
or
mov
jl
stos
mov
int3
add
int
icebp
mov
test
lret
cmp
out
aad
cwtl
mov
mov
int3
lcall
mov
arpl
out
add
call
jecxz
int3
cmp
add
lcall
or
sarb
imul
sbb
pop
jnp
or
bnd
xlat
int
inc
rcrl
mov
fisttps
mov
xchg
test
sub
fdivl
xorl
leave
xchg
xlat
jl
add
lods
jecxz
mov
outsl
push
sbb
scas
divl
jge
push
fwait
sbb
sbb
push
cwtl
add
arpl
add
js
lea
and
pop
outsb
mov
push
fisubl
and
movsl
cli
ss
lds
mov
or
and
jecxz
jmp
cmp
test
push
loope
cmpl
add
sub
imul
mov
fildl
je
or
nop
rorb
xchg
stos
inc
push
push
mov
shll
test
stc
mov
sbb
mov
fistpl
or
add
leave
sbb
movsb
ret
lods
out
int3
fnstenv
ret
les
xchg
jl
sbb
mov
push
sbb
adc
dec
sub
xor
lods
sahf
pop
js
jecxz
stos
popf
xchg
pop
and
in
adc
sbb
sbb
ds
pop
jb
adc
xor
xchg
insl
mov
stc
xor
prefetch
dec
inc
insl
sti
jmp
cmovne
cmp
fcomp
pop
fdivrl
jnp
fdivs
mov
addb
inc
inc
mov
sbb
or
mov
popf
lahf
push
mov
sarb
orb
inc
popf
shlw
fldenv
mov
std
data16
iret
subb
inc
rcr
sbb
mov
daa
push
pop
push
int
push
movsl
shrb
xor
in
xchg
std
add
mov
jb
or
lret
sbb
xchg
mov
push
aaa
mov
mov
cmpsb
fwait
jl
and
mov
cmp
je
adcl
mov
gs
ja
xchg
fidivrl
or
xor
bound
push
sbb
clc
arpl
call
pushf
mov
sti
and
mov
or
mov
dec
fdivrs
sbb
popf
es
sbb
enter
or
xchg
pop
inc
pop
pop
addr16
ret
adc
lcall
dec
add
and
movsb
hlt
popf
pop
cltd
mov
add
xchg
shr
mov
or
jp
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
iret
pushf
or
nop
adc
stos
out
push
stos
lods
mov
push
lahf
stos
and
mov
push
cmc
jns
sub
arpl
pop
sub
xchg
jne
mov
sbb
xchg
fimull
cli
mov
clc
inc
add
fidivs
aad
rcrl
lret
inc
jae
cmp
mov
mov
cmc
cmp
ret
jns
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
fldl
jnp
imul
dec
mov
or
call
cld
sbb
xor
push
ja
dec
add
fwait
dec
inc
lret
loope
dec
sbb
push
pushf
lret
sbb
cmpsl
sub
lcall
fwait
jp
lret
test
in
scas
inc
leave
lret
pop
mov
in
inc
mov
les
mov
mov
pop
out
push
sub
inc
mov
leave
testl
dec
pusha
sub
lds
pop
lret
cmpsb
lret
fucomp
pusha
in
mov
imul
cmp
ret
out
test
sbb
sbb
push
sub
test
rorl
in
bound
and
arpl
shl
add
mov
mov
xlat
jno
popf
cmpsl
sahf
xchg
je
mov
or
pop
rcrl
decb
les
cmp
jns
fdivrl
addr16
xor
lahf
outsl
aas
ret
repz
lahf
outsl
cld
xor
mov
mov
xchg
lods
repnz
mov
cmpb
lahf
adc
dec
sahf
inc
sub
jo
movsb
xchg
adc
fistl
mov
mov
fstl
ret
pop
sbbl
add
lods
jo
mov
sbb
sbb
mov
iret
push
sbb
pop
lods
mov
popf
fwait
sub
inc
xchg
jb
sbb
shrl
into
in
out
sahf
mov
lods
cmpsb
or
shr
pop
daa
bound
dec
push
sub
aas
or
sub
add
dec
les
mov
out
mov
add
sbb
push
xchg
push
test
stos
mov
fmull
xor
sbb
cmpl
xchg
mov
jge
sbb
lret
xor
add
mov
push
pop
scas
call
movb
mov
pusha
sbb
xor
cmp
cwtl
or
inc
sbb
mov
shr
mov
loope
out
jne
jmp
popf
xchg
jl
mov
pop
adc
pop
and
ffreep
ss
sbb
jno
lcall
nop
fmull
jp
add
mov
or
ret
push
lods
xchg
sub
adc
fnstcw
ja
inc
in
aad
push
test
scas
xchg
pop
imulb
daa
xchg
test
or
adc
or
test
aam
cmp
rorl
stos
fcmovnb
mov
into
xor
icebp
cmp
cmp
ret
push
mov
fsubrl
repz
dec
mov
mov
dec
sti
arpl
pop
cmp
mov
in
loopw
aam
xchg
fwait
xor
aam
fs
iret
adc
lahf
insb
mov
dec
push
pop
pop
pop
popf
aas
out
jne
je
lea
mov
rcll
iret
xor
and
je
mov
add
xchg
mov
pop
test
call
mov
ljmp
jl
push
inc
subl
test
pusha
inc
sbb
mov
repnz
lock
sbb
inc
shr
int3
cwtl
lret
movsl
push
xor
inc
cmpsb
sbb
jns
push
add
test
lret
mov
sbb
push
pop
testb
jns
mov
sbb
sbb
cmpsl
push
push
or
pop
loopne
jns
adc
dec
movsb
aad
xor
xor
cli
idivb
mov
cmp
jo
inc
mov
pop
jmp
or
sub
data16
xor
nop
dec
and
cmp
cli
jae
push
xor
fisubl
jge
outsl
scas
inc
cmp
hlt
int3
mov
mov
sbb
jl
shrl
pop
pop
push
mov
cwtl
pop
test
pop
stos
rcll
jns
mov
pop
lret
mov
pause
rol
aaa
dec
fdivr
cltd
icebp
movl
retw
mov
add
iret
fs
fsubrl
pop
imul
cwtl
pop
stos
push
sub
cmp
popa
and
jae
in
stos
outsb
inc
pop
lcall
xchg
stc
call
xor
icebp
lcall
aad
mov
stos
xchg
stos
mov
sbb
add
mov
sbb
xchg
and
andl
mov
test
shll
punpcklwd
inc
xor
push
or
cmp
mov
cmpsb
mov
mov
or
test
pop
xchg
sbb
lret
mov
pop
fidivrl
je
xchg
lods
pop
sti
enter
repz
or
jp
sbb
mov
cwtl
pop
gs
loopne
cmc
mov
movsb
adc
fsts
pop
or
adc
imul
or
jnp
add
add
cltd
addb
lock
adc
mov
jg
fwait
ljmp
pusha
pop
fldt
in
dec
push
inc
inc
lahf
stos
mov
mov
clc
sub
dec
jo
fnstenv
or
sbb
dec
xchg
sub
sbb
mov
adc
lret
mov
aad
rcll
inc
inc
sbb
xor
fmull
jae
and
add
arpl
int
stos
sbb
lea
or
jecxz
dec
mov
gs
xchg
and
mov
enter
aas
sti
sti
and
xor
or
out
mov
int
insl
cmp
inc
push
sbb
cmp
outsl
ljmp
pop
sub
dec
jae
and
int
adc
jnp
mov
add
rorb
and
sbbl
jmp
stos
pop
rcrb
sbb
sti
push
pop
mov
dec
push
cld
test
or
mov
lahf
ljmp
mov
subb
mov
int3
sbb
lea
aad
sub
adc
jne
aaa
fisttpll
int3
push
arpl
adc
pop
scas
cmp
adc
cld
mov
mov
inc
ja
addr16
pop
shl
inc
sbb
sbb
ss
mov
push
mov
dec
add
xchg
addl
lods
push
sub
mov
xor
inc
mov
in
lds
shlb
and
aas
cwtl
dec
add
fwait
dec
sub
addr16
mov
sbb
mov
shlb
fisubl
xchg
push
inc
mov
mov
iret
jg
mov
mov
repnz
dec
lahf
lret
std
jne
jecxz
enter
mov
inc
add
jmp
cld
shlb
loop
into
mov
sbb
cmpb
inc
sbb
push
mov
std
lods
rcrb
js
sti
mov
shlb
and
stc
and
and
jne
mov
push
sub
mov
pop
scas
dec
fwait
lods
pop
push
int3
jecxz
mov
mov
jnp
cmp
and
icebp
push
mov
cmp
adc
stos
fwait
das
pop
jp
std
adc
xchg
jle
out
jp
lcall
in
or
lcall
daa
xor
es
mov
cmp
pop
xor
fwait
lock
sub
mov
xor
lcall
sti
mov
and
enter
inc
pop
mov
push
pop
add
repz
int3
loop
cmpsl
sbb
aaa
into
aad
add
mov
lock
jg
mov
cwtl
cmp
mov
pushf
in
lahf
xchg
xlat
stos
clc
ficompl
jae
test
dec
sub
gs
flds
fstl
cli
out
jae
push
call
add
cmp
xor
stos
inc
fisubl
pop
insl
hlt
mov
cmp
std
add
xchg
cltd
sbb
arpl
mov
adc
pop
dec
jl
sbb
rcrb
fwait
add
loopne
lahf
out
add
dec
lods
fdivrl
daa
insb
xor
mov
stc
xor
aad
push
decb
shrl
cltd
jl
mov
jnp
pop
test
fs
stos
test
xor
icebp
mov
push
mov
inc
xor
push
popa
pop
xchg
mov
add
ficompl
data16
mov
sbb
jle
sahf
xchg
lret
jecxz
or
arpl
popf
mov
ds
iret
test
ret
or
mov
iret
dec
cmp
xlat
or
push
test
imul
addb
pop
popf
lret
popa
repnz
aad
inc
push
sbb
add
insl
pop
jae
cli
and
gs
and
mov
cmp
and
inc
sbb
mov
dec
cmp
cmc
jns
icebp
mov
cli
jl
inc
js
adc
inc
loop
mull
dec
push
pop
xor
sahf
out
lahf
adc
inc
lods
xlat
mov
ja
jo
call
jmp
pushfw
inc
inc
shll
aaa
sbb
inc
sbb
sub
jg
cmp
mov
dec
sahf
dec
pop
xor
fisttpll
dec
dec
aad
mov
adc
lahf
iret
ret
clc
jmp
fwait
out
jg
lret
xor
repz
push
enter
sbb
pop
stos
bnd
push
jno
gs
xchg
pop
addr16
fwait
push
xchg
fimull
pop
mov
fucomp
fs
jno
dec
add
jae
adcl
movsl
int
cmp
cmp
aad
jge
or
cmp
add
add
cltd
dec
inc
in
xchg
adc
call
jp
popf
jecxz
fs
repz
cmp
inc
xorl
mov
idiv
add
xchg
sbb
mov
out
push
push
lods
sub
mov
cwtl
cmp
lods
lea
aad
pop
enter
pop
mov
lods
lcall
mov
out
dec
inc
pop
mov
inc
das
into
pop
stos
enter
inc
mov
je
inc
inc
lods
mov
pop
add
xor
test
pop
mov
jbe
adc
fidivrs
add
xor
mov
mov
in
sbb
les
out
inc
cmp
inc
pushf
push
and
push
xor
jae
fwait
outsb
and
icebp
sti
jno
sarl
pop
int
scas
push
mov
shrb
cmp
push
sbb
xor
lods
aad
jmp
push
mov
cmp
push
ficompl
push
rorb
pop
mov
xor
mov
das
cmpsb
lods
jae
flds
sahf
jge
jl
push
inc
fisubl
sub
ljmp
loopne
clc
lcall
outsl
mov
xor
jo
enter
mov
push
or
jbe
std
cmpl
or
jns
cltd
dec
add
mov
adc
fists
lahf
loop
push
jge
lock
push
or
in
std
nop
fildl
movsb
jnp
adc
mov
mov
fstps
xchg
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
cmp
mov
mov
aad
xchg
repz
and
lea
in
jns
jo
and
and
mov
cmp
aas
lret
bound
cmp
jmp
addr16
es
xor
or
mov
adc
jb
lods
ja
and
xor
cmpsl
ret
fsts
pop
inc
mov
cwtl
and
mov
cmp
inc
dec
stc
icebp
mov
add
pop
mov
mov
popl
adc
xchg
popf
into
pop
stos
add
mov
jmp
cld
ja
sbb
cli
jecxz
mov
aas
cwtl
sbb
mov
jecxz
adc
lret
movsl
mov
mov
shlb
pop
movsb
fisubrl
jne
aad
mov
ss
pop
aas
dec
sbb
jbe
movsl
mov
jl
or
fistl
mov
mov
xor
sbb
ret
shrb
popf
loope
dec
mov
ret
jb
popf
popf
fistps
std
xor
xchg
adc
addl
dec
loope
sbb
cmp
sbb
or
jnp
inc
push
mov
adc
and
sub
push
fisubl
pusha
lret
mov
sahf
cmpsb
lds
in
pop
push
fstp
lods
xor
inc
mov
push
sbb
leave
pop
mov
shl
pop
es
imul
testl
adc
pop
mov
test
movsl
sbb
jp
add
adc
sbb
mov
insl
pushf
imul
mov
mov
mov
sbb
test
jnp
mov
mov
mov
hlt
fcmovne
push
inc
cmpl
push
xchg
fnstsw
adc
cmp
add
pop
test
push
push
mov
xor
xchg
dec
data16
sbb
ret
mov
add
dec
ror
lahf
popf
mov
add
loop
in
mov
andl
or
cmp
xor
scas
shll
out
sbb
cmpsb
fldt
fdivrs
cli
jae
and
jmp
mov
sti
sti
and
xchg
and
jge
dec
add
mov
gs
mov
jmp
cmp
das
jge
orl
xchg
mov
mov
test
clc
sub
push
enter
rcrl
or
sbb
test
aam
stos
push
test
test
ret
arpl
mov
in
jmp
aam
xor
inc
sbb
ljmp
insl
movsl
push
xchg
mov
mov
adc
pop
mov
lahf
inc
push
mov
lahf
jmp
mov
fwait
cmp
dec
push
sub
or
fldl
add
sti
add
xchg
int
dec
loopne
scas
addr16
clc
add
test
inc
mov
pop
mov
pop
xlat
stc
repz
seta
pop
sti
enter
or
xor
mov
add
pop
and
mov
dec
daa
adc
cmpsl
dec
xlat
dec
mov
iret
pop
mov
push
inc
call
mov
imul
ret
xadd
test
add
das
sti
xor
rcll
add
ret
pop
jl
mov
dec
pushf
dec
and
aad
sbb
test
test
inc
mov
popf
int3
jmp
dec
ds
xchg
xchg
movsb
ret
xchg
and
xor
jb
push
adc
testl
and
xchg
ja
mov
mov
data16
cli
cli
adc
jg
mov
ss
mov
testl
es
dec
decb
std
mov
mov
jnp
inc
push
mov
or
mov
aam
loope
inc
inc
popf
pop
test
push
test
cmp
imul
sbb
outsb
insb
sub
jp
fisttpl
cmp
ret
dec
sbb
or
cmp
cmp
cmp
inc
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
adc
push
add
lods
cmpsb
sbbb
hlt
sub
negb
pop
dec
adc
subb
xchg
mov
xor
scas
lahf
sbb
jae
ficomps
fs
icebp
add
jl
mov
daa
or
lock
push
xchg
dec
mov
lret
jnp
out
cld
and
adc
ret
mov
push
and
sarb
dec
jmp
iret
sub
add
or
arpl
xchg
and
lods
adc
cmpsb
shrl
push
fidivrl
out
cmpsl
jnp
or
lcall
push
add
mov
dec
xorb
sbb
and
mov
and
hlt
test
test
stos
les
push
sahf
xor
pop
cmpb
ds
and
iret
lock
push
mov
inc
mov
inc
sbb
jg
adc
cmp
pushf
shll
ja
test
add
test
jne
jnp
int
jae
jns
movb
jmp
test
xchg
push
pop
ss
push
push
mov
lret
sbb
pop
push
mov
lods
sarl
fstl
faddl
mov
icebp
or
mov
cld
adc
adcb
mov
inc
sbb
mov
dec
mov
pop
repnz
push
cwtl
dec
xor
loop
std
mov
sbb
stos
cmp
call
and
and
cmpsb
hlt
pop
and
ret
sub
push
adc
pusha
mov
inc
mov
sbb
sub
or
cwtl
movsl
push
ljmp
pop
mov
cmp
fists
rol
adc
add
or
and
js
push
mov
faddl
or
repnz
test
sub
sbb
mov
mov
movl
stc
cli
in
test
or
adcb
sbb
push
xchg
lcall
inc
pop
mov
mov
and
pop
pushf
repnz
popf
push
sbbb
push
cmp
mov
sbbl
mov
or
mov
and
lret
and
into
fisttpl
adc
dec
test
dec
test
fwait
pop
stos
cmp
call
inc
or
xor
mov
sbbb
sbb
loopne
aam
mov
fistpl
sub
inc
popl
xchg
dec
movsb
adc
fisubl
call
or
lods
clc
mov
mov
dec
sub
repnz
sbb
pop
mov
inc
sub
add
jg
faddl
psadbw
nop
adc
scas
repnz
mov
inc
sub
xchg
dec
add
push
mov
mov
mov
insl
jbe
cmpsl
xchg
fcoms
xchg
mov
sbbb
sbb
dec
jle
stos
jne
lds
fidivrl
xchg
dec
rolw
fdivl
jecxz
push
sahf
xchg
pop
js
cmp
scas
pop
aad
mov
sub
ret
test
shll
xor
pop
rcrl
pop
out
fwait
cmp
mov
or
stos
xor
mov
pop
jnp
fsubs
jb
xor
dec
inc
push
jb
dec
test
sbb
and
push
xchg
mov
pop
adc
call
pop
loopne
in
cmpsb
ficompl
pop
es
mov
or
and
cmp
sub
mov
mov
sarl
popa
out
cwtl
or
nop
adc
stos
push
ja
adc
mov
loope
sub
xchg
lret
sar
cmp
mov
cmpsb
cld
cmpsl
xchg
test
mov
js
push
cmp
xlat
stos
std
cld
dec
popa
and
xchg
stos
std
mov
mov
xlat
andl
insl
xor
pop
lret
jo
jge
xchg
and
loop
jae
add
inc
aam
cmp
xor
lahf
dec
clc
sbb
dec
enter
cs
cmp
cltd
add
mov
cmp
lret
xlat
push
pop
xorl
or
inc
sbb
sbbb
in
mov
int
xorb
rcrb
mov
add
adc
test
cmp
decl
fnstsw
xor
mov
add
fwait
mov
adc
xchg
mov
imul
cmpsl
add
jbe
xchg
stc
adc
adc
add
sbb
and
pusha
jmp
push
clc
and
dec
stos
mov
jae
inc
jbe
js
inc
shlb
push
or
xor
mov
mov
dec
xchg
cmp
push
sbb
mov
add
cmc
bnd
movsl
pushl
sub
and
cmp
add
imul
test
int
pop
mov
inc
enter
aam
sahf
mov
mov
mov
in
dec
ss
jo
pop
mov
dec
mov
push
push
lock
mov
shrb
mov
daa
das
in
jne
mov
adc
adc
inc
mov
movsl
imul
hlt
cmp
xchg
sbb
xchg
enter
or
jp
fwait
orb
lods
int3
fwait
jno
cltd
lret
inc
sub
sarb
jno
test
stos
push
lods
clc
push
cld
cmpsl
outsl
pop
xor
mov
sahf
stos
jae
mov
mov
ret
fisubl
sbb
sbbb
sbb
cmp
xchg
push
mov
fcoml
rcrb
pop
xor
fwait
js
cmp
scas
jg
dec
or
mov
pop
xchg
clc
xor
adc
or
xchg
adc
mov
cmp
xchg
imul
out
imul
lret
out
insl
cmovl
mov
xchg
jle
jne
jecxz
enter
inc
int3
icebp
icebp
mov
jmp
outsl
mov
dec
mov
adc
lds
mov
adc
loopne
and
fnstcw
imul
hlt
mov
std
lret
jecxz
in
outsl
outsl
lods
out
mov
mov
mov
fwait
xorb
cmpsb
out
mov
sbb
jp
icebp
stos
add
int3
sub
cmpsl
pop
jg
iret
and
in
xor
mov
cmpsl
pop
adc
test
pop
sub
pop
imul
xor
stos
jne
xchg
loop
push
mov
or
fwait
rclb
sbb
iret
xorb
or
leave
loop
or
std
xor
cmp
out
std
dec
rcr
push
in
test
mov
sub
mov
mov
cmp
pusha
jo
fwait
insl
or
sbb
inc
popf
jg
or
mov
push
jb
or
mov
fldpi
mov
lcall
mov
cwtl
aad
fistpl
cmp
pop
loopne
pop
add
fucomip
daa
stc
rolb
int
cli
jecxz
cmp
dec
or
adc
cmp
imul
mov
sbb
cmpl
cmc
mov
or
inc
lods
mov
std
xchg
shll
subb
sbb
dec
and
and
and
sbb
sbb
cmp
hlt
sub
rorb
lahf
and
mov
sub
inc
stc
leave
nop
or
cmpsl
std
jnp
jl
mov
jne
js
dec
daa
xor
insl
xlat
jp
sbbb
and
repnz
inc
ret
daa
sbb
test
dec
mov
xlat
mov
iret
dec
arpl
push
test
fnstenv
pop
aad
mov
push
cmpsb
mov
sub
ja
sub
mov
dec
pop
or
adc
or
jnp
mov
inc
mov
dec
sbb
fdivrs
mov
mov
pop
cmp
fwait
dec
xor
mov
mov
sbb
and
test
out
dec
sbb
dec
mov
insl
mov
test
and
subb
mov
imulb
jge
fistl
stos
outsl
dec
jecxz
add
push
jno
xor
movsb
std
lret
sbb
stc
lds
mov
cmp
inc
fdivrs
cmc
xchg
pop
xchg
cld
loope
or
in
push
out
xor
xchg
data16
insl
ljmp
rclb
cmp
xlat
insb
jbe
mov
inc
and
push
pop
fldenv
mov
cmpsl
cmpsb
inc
cltd
lret
out
mov
enter
adc
or
push
fisubrs
push
insl
lods
out
sahf
gs
stos
in
sub
aad
lods
lahf
hlt
add
cmp
mov
mov
lea
sbb
aas
fwait
and
imul
sbb
aad
pop
sub
cmpsb
mov
dec
push
dec
scas
push
stos
mov
cmc
sbb
sbb
dec
add
xchg
test
pop
psubq
cmp
xchg
cmp
push
loopne
inc
scas
push
mov
shlb
mov
add
push
leave
lahf
and
push
fists
repnz
add
push
rclb
pop
mov
pop
mov
or
pushf
mov
movsl
pop
jae
inc
pop
fucomp
or
popf
or
into
pushf
cmpsl
xchg
loope
clc
pushf
lds
arpl
divb
int
or
dec
push
or
add
mov
int
and
daa
inc
dec
sbb
or
inc
mov
sbb
pop
sbb
xchg
jne
mov
xchg
jnp
sub
cmp
rcrb
mov
cmp
dec
repnz
xchg
mov
fsubrl
dec
lcall
xor
stos
shll
mov
iret
mov
lret
pop
push
push
xchg
cmpsl
xchg
test
dec
cmpsl
shrb
fwait
xchg
loope
add
jne
imul
lcall
add
fidivrl
bound
call
cmp
aaa
xor
bound
or
loop
pop
mov
rcrb
sbb
imull
xchg
mov
push
mov
inc
jns
popf
xor
cltd
push
js
mov
lret
sub
fidivs
je
jb
lret
bound
push
mov
hlt
jb
add
pusha
jo
mov
imul
mov
fwait
add
aam
in
sub
sbb
fildll
test
cwtl
xor
clc
sti
pop
popl
cld
sub
ss
sbb
pop
sbb
movsl
xlat
cli
lods
pop
mov
jecxz
nop
cmpsb
pushf
dec
xor
movsl
dec
pop
out
jne
jae
cwtl
xor
test
sub
out
stos
iret
push
add
mov
add
and
loop
lods
hlt
and
fwait
scas
imul
sti
jmp
jne
lods
pop
call
lods
pushf
scas
mov
mov
jg
scas
and
faddl
inc
adc
cmpsb
add
mov
inc
adc
xor
inc
xchg
dec
xchg
jno
xchg
sub
test
push
sbb
jp
cmp
subl
push
xchg
or
sar
inc
adc
jge
fwait
lea
xlat
out
inc
fwait
push
sbb
xchg
xchg
push
or
inc
dec
fsubrl
mov
int
dec
mov
push
je
jecxz
in
mov
arpl
mov
sti
jge
divl
cmp
mov
das
add
fs
cmp
adc
jle
leave
lret
xchg
or
sbb
movsb
lret
or
inc
clc
push
sbb
fimuls
mov
in
jnp
jno
clc
out
or
mov
out
call
adc
adc
out
orl
pop
mov
push
mov
xchg
mov
add
mov
jo
dec
ret
clc
rclb
loop
gs
sbb
cmp
add
add
cmp
aaa
push
popf
mov
pop
flds
outsb
shlb
xor
inc
popf
jle
or
and
daa
dec
push
push
xchg
mov
sub
sbb
sbb
mov
rcr
addl
cmc
fsubs
cmp
cmpsb
push
lahf
lds
cmp
jp
ret
inc
sbb
or
lcall
les
push
pop
pop
mov
leave
fildl
outsl
sub
or
adc
mov
and
gs
dec
pushf
mov
lock
dec
data16
adc
mov
adc
sbb
pop
jnp
sbb
adc
test
adc
inc
fidivrl
mov
les
std
fstpt
aas
rcrb
cmp
out
jae
test
enterw
and
out
fwait
xor
jp
fs
ljmp
pop
fisubl
cmp
jo
jne
cmpsl
movsb
dec
enter
xorl
sub
lods
outsl
push
or
imul
fistl
mov
add
mov
mov
cmp
jp
add
adc
sbb
mov
insl
cltd
mov
adc
arpl
notl
aas
stos
pop
push
inc
sub
mov
dec
xor
fcompl
es
dec
outsb
bound
cwtl
nop
mov
int3
sub
cmpsb
or
or
mov
sbb
jne
pop
add
lods
jecxz
shl
imul
mov
sti
fstps
sbb
pop
cmpsl
xlat
adc
adc
div
std
data16
mov
push
testl
adc
push
aas
fwait
lret
in
mov
mov
or
cmp
mov
imulb
jae
jecxz
adc
inc
pushf
cmp
mov
adc
xchg
cmp
or
lahf
test
data16
xor
jge
lock
mov
iret
jbe
xchg
imul
sub
jecxz
add
fs
les
pusha
int
sbb
rcrb
stos
jge
cmp
add
aam
aas
sbb
ss
imull
fs
sar
push
sbb
fcoms
sbb
pop
outsb
push
jl
dec
xchg
adc
dec
inc
cmp
les
adc
jbe
or
mov
aas
and
dec
popl
mov
sarb
jb
add
adc
gs
xchg
sub
rcll
push
fidivrs
pop
stc
scas
inc
insl
jmp
test
xchg
pop
into
divb
pop
fisubs
out
and
mov
sbb
xchg
mov
jne
cmp
push
dec
mov
int
call
int
aas
imul
cmpb
mov
test
add
sub
test
push
sarl
or
repnz
jle
mov
xchg
dec
in
push
xchg
cld
sahf
lahf
mov
into
imul
std
es
lds
jns
pop
inc
dec
pop
or
inc
rorl
jo
das
mov
int
int3
adc
adc
rcrb
stos
dec
inc
lcall
cwtl
cmp
mov
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
aad
mov
pushf
cmpsl
mov
jo
enter
pop
das
frstor
xor
aas
mov
inc
repz
aad
shll
mov
fisttpl
push
jne
or
lods
movnti
cltd
xor
in
ret
and
mov
mov
mov
and
rcl
inc
push
leave
outsl
xchg
ret
insb
test
lock
cmp
lods
sbb
inc
lahf
sbb
ficoml
insb
in
das
orb
xchg
inc
iret
dec
movzbl
mov
mov
pop
add
cmpl
loop
and
sbb
call
push
push
pushf
sub
sbb
fdiv
or
or
mov
or
push
dec
flds
and
or
loop
mov
mov
push
cwtl
inc
stos
adc
fidivrl
inc
popa
lcall
mov
cmpsl
or
inc
and
mov
out
mov
adc
jnp
push
lock
repnz
ficompl
or
jo
add
xor
dec
xchg
jo
fwait
or
jnp
jecxz
cs
mov
mov
leave
stc
sti
pop
es
cmp
cwtl
sbbb
mov
stos
mov
cmpl
mov
pushf
in
imul
add
cmp
arpl
jne
dec
movsb
pop
cs
mov
gs
into
mov
jge
and
push
pop
subl
sbb
stos
outsb
cli
imul
pop
ror
mov
mov
cwtl
popf
adc
mov
adc
fldt
mov
les
and
sub
pop
out
add
lcall
fisttpl
cmp
xchg
mov
push
add
leave
xchg
xchg
cmpsb
call
popf
mov
fdivrl
sti
icebp
dec
test
aam
aam
aaa
es
push
cmp
mov
int
imul
fstp
cmp
adc
in
xor
xchg
sahf
ficomps
loopne
mov
repz
pop
add
add
shrl
mov
cltd
jl
popf
arpl
xchg
xor
leave
inc
adc
jge
les
push
dec
jb
lcall
xchg
fistps
lds
cwtl
dec
data16
or
shlb
mov
cmp
jp
shll
mov
sbbl
lds
inc
mov
sahf
adc
insl
pushl
mov
popa
sbb
in
cmp
mov
xchg
push
mov
ljmp
scas
fwait
mov
mov
fdivs
sbb
fldl
int3
pop
or
mov
aas
adc
push
xchg
jmp
inc
sbb
mov
shlb
fsubs
add
mov
out
movsb
mov
loop
inc
and
mov
push
dec
cltd
jecxz
mov
nop
dec
sbb
pop
imul
in
leave
fsubrl
lea
inc
hlt
push
adc
scas
and
inc
sub
test
adc
dec
popf
imul
cmpsl
xchg
fcomps
outsb
or
mov
subb
xlat
stos
lds
xchg
out
fnsave
push
mov
xor
jge
test
in
jns
jo
and
shl
inc
pop
mov
mov
mov
adcb
dec
in
cs
xchg
and
addr16
outsl
mov
fwait
push
mov
subl
call
dec
repnz
push
ljmp
jb
fnstsw
popf
mov
mov
dec
inc
in
into
sub
and
xchg
sbb
xchg
and
pushf
gs
xchg
outsb
cli
mov
aad
ss
and
dec
movsl
dec
add
lahf
push
cmc
js
pop
ds
and
xchg
lret
aaa
fdiv
mov
in
ja
fwait
test
or
leave
push
add
aas
mov
out
pushf
mov
shr
mov
jno
scas
push
sub
add
ljmp
xor
fsubrl
movsb
push
dec
pop
bound
in
or
insl
pop
mov
subb
lea
pop
stos
xchg
mov
rolb
or
push
ja
add
fistl
fadds
mov
js
mov
or
repz
jmp
pop
xor
sub
xor
cmp
xchg
mov
push
cmp
lock
cmpsb
cmp
xor
dec
int
xchg
dec
subl
xchg
jb
jle
adc
inc
pushf
pop
mov
stos
mov
jge
repz
mov
mov
je
lock
in
popf
dec
push
subb
divps
add
ja
fisttpl
hlt
scas
cli
mov
out
lret
movsl
ret
pop
jbe
sub
cmp
sub
cmc
sbb
xor
mov
mov
mov
or
cmp
adc
cmc
pop
mov
or
inc
sbb
push
mov
mov
sbb
pop
mov
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
or
sbb
sbb
jmp
gs
rorl
xchg
sub
pop
jns
inc
adc
push
insl
fistpl
mov
lea
mov
pop
add
sbb
cmp
int
pop
mov
push
dec
jo
idivb
shr
repz
ret
or
aas
mov
out
inc
insb
pop
and
pop
sub
add
cwtl
pop
lock
lock
adc
mov
sbb
lret
mov
out
movsl
xchg
jnp
sbb
test
xor
shll
aam
mov
sub
jae
test
mov
mov
repz
add
sub
aas
push
sbb
xchg
push
int
and
inc
cmp
int3
adc
test
push
jbe
lods
ss
shrb
cmpl
jns
cmp
in
cld
adc
inc
fwait
leave
loop
and
sub
add
cmp
inc
stc
or
add
lods
test
iret
dec
and
push
fidivrs
fimuls
push
cmp
push
fisttpll
adc
jg
cmp
xchg
jnp
int3
jl
pop
mov
int3
add
dec
inc
gs
mov
and
cmp
jmp
adc
sbb
mov
push
pop
adc
pop
pop
pop
push
add
mov
fnstenv
ret
scas
mov
jb
mov
adc
inc
ret
sbb
sahf
aad
stos
mov
leave
cmp
in
mov
xchg
push
inc
insl
push
fcompl
lret
adc
push
les
xlat
lret
push
ret
lods
dec
imul
aad
mov
insl
xchg
lcall
aad
lods
push
mov
icebp
in
jge
lds
xor
ret
cmp
adc
push
jp
jp
push
xchg
sbb
idivb
xchg
mov
ret
mov
xchg
mov
xchg
not
iret
mov
insb
mov
pop
mov
icebp
cmp
cmp
movsl
mov
xor
mov
out
rorl
dec
mov
lea
test
mov
pop
or
inc
divb
fnstsw
orb
insb
mov
add
sub
nop
ss
sbb
dec
adc
repz
and
filds
test
pop
shrl
arpl
mov
sahf
das
xchg
stc
cli
in
test
les
sub
data16
mov
pop
lahf
mov
sbbl
cwtl
rcrb
arpl
imul
mov
jmp
aaa
mov
cli
jnp
inc
mov
add
arpl
popl
push
dec
cmp
cwtl
sub
mov
bound
test
mov
sbb
xchg
or
dec
cltd
pop
xchg
mov
and
fiadds
imul
xor
sbb
adc
dec
push
outsl
dec
and
pop
imul
call
ret
daa
pop
subb
mov
mov
icebp
jnp
sahf
rol
or
jl
cs
iret
cmpsl
mov
popf
mov
jl
js
push
dec
push
xor
scas
push
sub
push
add
sbb
sub
ljmp
rcrl
stc
pop
sub
mov
gs
je
and
movsl
add
lds
mov
lds
cmp
shl
jne
jae
in
push
pop
jno
and
test
ss
sbb
mov
or
std
jecxz
mov
lods
mov
fs
lcall
mov
dec
ficompl
inc
fisubs
mov
push
xor
pop
ret
push
pop
out
mov
xchg
sbb
lods
jae
lea
cmp
cmpsb
jecxz
arpl
xchg
push
push
clc
xchg
adc
add
mov
jmp
clc
add
ret
pop
popl
movsl
xchg
shlb
push
inc
push
cmpsl
xor
pop
xlat
fs
jb
lea
cmp
add
mov
inc
inc
sahf
xor
mov
cld
or
inc
arpl
lret
in
mov
jns
and
sbb
push
pop
out
dec
cmpsl
mov
fistl
out
lods
movb
push
mov
pop
xor
cwtl
mov
mov
leave
sub
xchg
lret
add
xchg
addl
sbb
ja
xor
sub
inc
inc
mov
imul
push
sbb
js
es
in
imul
push
mov
lds
sbb
sub
mov
fsubrs
in
dec
popa
pop
dec
mov
sbb
std
call
mov
in
xor
leave
mov
sbb
cmp
stos
sub
or
mov
imul
lds
push
push
cmp
ret
jle
jnp
lds
xchg
jp
push
jmp
pop
cmpsb
sbb
cltd
gs
cmc
add
cmp
bound
lret
mov
insl
fsubl
lret
push
ret
push
xchg
ljmp
jne
pop
jae
dec
popa
xchg
mov
das
xchg
dec
sbb
sub
lahf
jns
out
mov
push
pop
xor
in
sti
cld
pop
aas
mov
sbb
shlb
add
ljmp
and
mov
std
jne
mov
cltd
push
sbb
inc
dec
shlb
pushf
cmpsl
sti
fdivrp
lcall
enter
adcl
add
sti
sub
jmp
lret
imul
fwait
or
in
or
xchg
cmp
jns
stc
add
push
mov
sbbb
dec
push
lds
repz
xchg
cwtl
xchg
test
cld
xor
out
addr16
gs
cmp
mov
push
iret
jns
add
sbb
mov
xchg
ret
dec
adc
xchg
pop
test
imul
lret
cmpsl
mov
jb
pop
add
shll
and
or
xchg
push
xlat
xchg
fldl
shufps
xlat
loope
or
pop
sub
jle
sub
mov
add
shrb
dec
roll
addr16
xchg
out
jecxz
mov
add
aad
repz
std
mov
inc
cmc
push
push
jne
jge
xchg
std
loope
insl
stc
sbb
inc
sti
subl
sub
out
mov
cwtl
int
mov
pop
dec
call
jge
leave
pop
js
mov
mov
cmpsl
cmp
sbb
aas
ja
int
or
sbb
add
and
dec
push
push
xchg
subb
icebp
sbb
dec
out
push
fwait
jmp
jno
mov
push
lret
idivb
lret
sti
imul
jmp
es
lds
xor
mov
mov
push
jbe
xchg
jns
pusha
pop
or
dec
data16
cmp
mov
dec
and
stc
std
in
mov
in
cmc
jl
dec
mov
aad
jp
mov
push
or
loope
into
movsl
push
adc
ret
push
jg
dec
sbb
subb
dec
fdivrs
cmp
jb
cld
add
inc
mov
data16
adc
dec
mov
mov
repz
rcll
movsb
fdiv
push
and
cmp
mov
in
inc
cmp
orl
outsl
test
inc
jecxz
add
shl
add
loope
dec
inc
mov
xor
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
pop
scas
dec
cwtl
lods
pop
push
or
mov
xor
and
bnd
popf
mov
fwait
or
dec
out
mov
rcrl
ja
add
adc
jle
pop
lret
je
mov
sub
mov
js
xor
xchg
pushf
ja
jo
sbb
out
int
roll
mov
popa
ffreep
dec
mov
xor
incb
les
push
int
nop
or
adc
jbe
out
push
and
int
ret
pop
loopne
mov
repz
stc
fimuls
ret
sbb
repnz
dec
cltd
jl
mov
negl
cmc
dec
sub
cwtl
xor
mov
decb
adc
arpl
dec
sbb
out
cli
lret
mov
mov
repz
cwtl
dec
pop
xchg
sbb
fisubrs
or
lret
jge
push
shlb
mov
xchg
stos
jecxz
loopne
cmp
push
clc
aam
mov
cmp
push
test
or
negl
nop
daa
mov
add
inc
cmp
ds
ds
jp
sbb
rcr
out
push
lret
cmp
sub
push
mov
and
cmp
jne
int
xor
adc
test
leave
enter
sbb
mov
xchg
cltd
je
cmpsb
mov
pushf
neg
xchg
dec
add
jnp
aad
inc
push
mov
loopne
pop
pop
sbbb
pop
fnstsw
sbb
outsl
cltd
pop
sub
dec
cld
sar
mov
or
repz
pop
in
int3
inc
call
inc
ss
sbb
outsl
inc
jo
pusha
push
mov
dec
pop
cwtl
mov
ss
cmc
mov
imul
mov
pusha
jecxz
pop
sahf
out
push
pop
pop
mov
dec
mov
dec
xor
jno
jns
jmp
push
icebp
cmpsl
sbb
mov
mov
aad
mov
adc
jge
adc
js
sbb
lock
clc
xor
iret
pushl
scas
lahf
mov
xchg
mov
fxch
mov
daa
pop
filds
loopne
aad
xchg
mov
mov
mov
xchg
dec
inc
idivb
ret
mov
xor
cmpl
mov
dec
or
std
fmuls
jb
jno
mov
insl
popf
add
inc
popf
jp
add
mov
lret
pop
aad
adc
lret
xchg
hlt
mov
xor
xlat
rol
xchg
test
ret
test
dec
cmp
pop
dec
icebp
mov
out
outsl
sub
xchg
aas
stos
subl
mov
aaa
push
icebp
mov
pop
push
stos
xor
adc
jmp
iret
sbb
xor
cmpsl
or
jns
push
jbe
sub
xchg
dec
jnp
dec
sub
cmp
pop
ss
ja
mov
inc
jg
xor
jle
in
jl
jnp
filds
add
jge
pop
xchg
xor
cld
loopne
test
faddl
fbstp
cld
sbb
popf
jmp
sti
enter
or
xor
sbb
notl
xchg
dec
inc
int
imul
jns
pop
push
xchg
sti
mov
and
add
arpl
movsl
add
adc
iret
cmp
cmp
divps
test
lea
push
inc
repz
cmpsl
stos
cwtl
push
in
jle
dec
xor
mov
sub
test
push
rolb
jmp
mov
mov
std
or
and
insl
pop
mov
cmpsb
lea
shll
xchg
aad
push
inc
lcall
or
popf
push
jge
cmp
or
test
in
inc
jo
cmc
in
mov
flds
and
idiv
decl
cmp
daa
xchg
and
inc
cmpsb
pop
aaa
adc
fwait
stos
xlat
insb
imul
popf
out
pop
cmp
pop
lods
std
mov
mov
out
cmp
pop
sub
mov
adc
lods
sbb
add
add
inc
xchg
sub
insb
inc
inc
je
incl
inc
adc
jg
ret
cmp
sbb
sbb
aas
out
xor
enter
pop
repnz
rcrl
imul
push
leave
adc
fwait
push
cmpsl
mov
repnz
mov
gs
mov
push
les
fcompl
add
inc
sub
addb
mov
lret
mov
movsl
add
dec
jns
pop
inc
fdivs
xchg
cmp
adc
int
insb
and
mov
test
jo
fdivl
jmp
cltd
pop
sbb
ret
xchg
mov
add
fidivrs
test
data16
cli
add
inc
lret
mulb
popf
jmp
test
inc
shll
movsb
fldenv
xorl
enter
lret
mov
xchg
jp
das
jge
mov
pop
fsubs
inc
enter
loopne
fisubrs
and
adc
pop
jno
mov
lahf
in
imul
add
add
pop
dec
pop
jecxz
jmp
jmp
xchg
int3
addr16
loopne
jle
dec
inc
test
mov
lret
mov
cmc
test
dec
dec
sbb
mov
ret
aam
dec
in
jns
push
subb
mov
call
push
xchg
jle
sub
cmpsb
jns
lcall
inc
inc
lods
shrb
cltd
sbb
lahf
pop
movsl
mov
fucomi
cmc
mov
outsl
clc
loop
dec
lahf
aas
cmpsl
mov
addl
cli
jo
test
sbb
and
jae
sar
mov
or
faddp
in
dec
gs
pop
mov
imul
pop
les
shrb
repz
push
les
mov
daa
adc
testl
mov
mov
pop
scas
cmp
or
mov
mov
add
add
repz
int3
lret
aaa
hlt
repnz
enter
popf
mov
sub
mov
dec
in
and
sub
in
movsl
add
outsb
inc
push
and
dec
and
mov
pop
push
sahf
aaa
push
stos
ljmp
bound
cmpsl
add
test
and
test
inc
ljmp
sbb
lahf
mov
aad
mov
fstl
mov
push
inc
insb
push
or
inc
enter
mov
pop
aas
lret
ljmp
outsl
inc
mov
mov
xor
jp
inc
xor
cmp
rorl
clc
iret
insb
jbe
push
cmp
add
jb
sbb
sub
int3
pop
sbb
inc
pop
dec
or
jmp
int
push
xchg
xchg
pop
jge
add
pop
loop
insl
jecxz
inc
mov
and
mov
and
repz
sti
inc
sbb
sbb
jecxz
add
mov
mov
lcall
dec
sub
cwtl
cmpsb
ret
sbb
add
sub
push
dec
bnd
xchg
jg
push
and
cmp
xchg
cli
cmp
cs
ss
outsl
mov
or
or
jne
dec
sub
lahf
fwait
adc
loopne
scas
cmp
xchg
lock
push
hlt
adc
and
fs
push
shll
ror
mov
sub
js
mov
push
jge
jg
pop
ficompl
jle
mov
loopne
sub
pop
cli
mov
cli
leave
and
mov
dec
pop
rclb
sti
lahf
out
cld
into
sub
enter
aas
push
or
push
inc
cltd
cwtl
sbb
rcl
negl
dec
push
stos
sbb
je
or
lods
mov
mov
pop
test
xor
adc
mov
push
jo
out
ja
inc
adc
add
cmpsb
stc
ss
rcl
lret
inc
sbb
push
mov
sub
test
push
mov
ds
and
mov
loope
pop
mov
repz
adc
addb
push
enter
sub
add
inc
fmul
pop
clc
test
xchg
jbe
lret
adc
andb
cli
les
fwait
ja
sbb
mov
xor
xchg
mull
mov
fsubl
dec
jmp
out
jmp
movsb
in
ja
or
pushf
cmpsl
es
inc
sub
xor
jge
or
and
pop
sub
rorb
mov
or
repnz
mov
fimull
imul
scas
in
xor
leave
mov
sbb
cmp
stos
sub
or
mov
imul
lds
push
push
cmp
ret
jle
jnp
lds
xchg
jp
push
jmp
pop
cmpsb
sbb
cltd
gs
cmc
add
cmp
and
mov
fwait
push
daa
je
sbb
xchg
jge
push
ljmp
jnp
xchg
jae
in
push
pop
cmp
sbb
add
test
lods
loopne
or
fwait
add
in
sbb
lahf
cmpsl
or
repnz
jecxz
mov
fucomp
mov
cltd
push
lods
repz
xor
sbb
fstpl
sbb
nop
adc
scas
cmp
test
pop
mov
fdivrs
faddl
sub
iret
cmp
push
sbb
xchg
or
dec
aam
sub
or
push
fsubrs
mov
mov
jo
cmp
bound
xor
or
xchg
ret
and
ret
fnstsw
sarb
lret
test
call
and
lret
shrl
push
adc
push
sti
arpl
pop
fstl
mov
pop
in
mov
push
lods
nop
xchg
mov
sbb
pop
ret
push
xchg
test
lock
ficomps
or
and
cli
add
popf
jle
jecxz
shll
lea
por
xor
scas
sbb
addr16
and
xlat
xchg
ret
into
repnz
mov
push
cwtl
jne
dec
dec
rolb
aam
sbb
ret
pop
out
inc
and
add
gs
aad
sbb
or
vandps
sarb
pop
loopne
fisubrs
dec
jge
add
test
jno
pop
add
xor
mov
push
mov
add
jae
int3
xchg
or
jb
pushf
pop
sub
mov
shll
shr
mov
jle
push
lods
dec
bound
int
test
pop
ds
les
lcall
aad
mov
neg
mov
mov
lea
push
mov
sarl
dec
mov
cmp
pop
pop
ds
sbb
leave
loop
inc
fiaddl
enter
adc
xorl
and
test
sub
mov
lea
sbb
imul
cmpsb
fadd
inc
mov
jg
inc
and
and
mov
inc
or
aam
leave
jecxz
mov
aas
adc
sub
loope,pn
push
sarl
shr
repz
pusha
mov
mov
imul
lea
jmp
mov
stos
jne
stc
popa
int
inc
mov
iret
pop
adc
push
inc
pop
das
push
fwait
sub
fwait
cmp
cwtl
mov
call
repz
jnp
sub
dec
mov
fsubrp
push
adcl
push
mov
outsl
addb
sbb
sub
jne
xlat
mov
lods
jle
stos
xor
add
ret
pushf
sahf
sahf
frstor
or
push
out
pop
aas
sti
mov
mov
pusha
jp
stc
test
or
outsl
cwtl
mov
loope
xchg
mov
jno
test
test
loopne
adc
cli
pop
xchg
in
mov
std
andl
inc
loope
lea
sbb
leave
pushf
fcompl
std
mov
js
jmp
sbb
mov
mov
jo
or
adc
mov
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
or
movsl
xchg
and
add
adc
imulb
outsl
mov
push
xor
cmp
rcrl
mov
test
jns
pop
push
jle
mov
dec
lea
push
xchg
cmp
dec
sub
adcb
bnd
movsb
lret
push
leave
cmp
inc
xchg
jnp
adc
loop
add
xor
xor
mov
xchg
imul
andb
in
adc
dec
pop
insl
pop
leave
jbe
lea
shrb
movsl
mov
inc
xor
icebp
xchg
mov
mov
mov
mov
jmp
or
mov
fildll
mov
cmp
enter
inc
negl
mov
hlt
cmp
sbb
cmpsb
and
cmp
cmp
nop
ds
dec
test
or
loop
add
mov
adc
ficoml
adc
pop
push
fiadds
push
cs
lcall
xchg
cld
aad
jp
push
rcrb
xor
sub
js
push
gs
outsl
xchg
sti
je
lcall
sub
xlat
fs
mov
push
popa
jmp
mov
cmp
jno
fisubs
or
ret
rcrb
add
lock
add
scas
sbb
mov
cwtl
sub
clc
adc
mov
sbb
mov
mov
fnstenv
sub
jne
mov
inc
xor
xchg
push
aas
mov
dec
push
aam
dec
mov
cmc
jmp
enter
pop
mov
cmp
sub
cmp
ds
lahf
lret
pop
es
sbb
sbb
xor
lods
popl
mov
mov
or
leave
sbbb
pop
aad
pop
fnstsw
ljmp
or
popf
test
xor
test
mov
int
mov
repnz
dec
mov
sub
scas
sahf
mov
sbb
mov
rol
pop
lods
pop
dec
fsubs
jb
mov
arpl
adc
cmp
mov
popf
popf
enter
add
xchg
lret
in
mov
mov
dec
dec
cmc
mov
outsb
pop
xchg
mov
arpl
jg
xlat
pop
out
inc
sbb
fnstsw
pusha
outsl
add
mov
bound
xor
movsl
inc
into
or
cmpsb
pop
jge
xlat
test
inc
fadds
inc
inc
into
hlt
aaa
nop
sub
stos
mov
lods
pushl
rolb
sti
mov
hlt
std
in
fidivrl
enter
add
test
jecxz
js
mov
dec
leave
jg
and
test
dec
mov
pop
add
push
sti
enter
push
sub
test
mov
inc
int3
and
and
ds
jmp
aas
stos
mov
cmp
ficoml
dec
in
sub
pop
imul
push
sub
inc
sbb
dec
in
and
fucomi
xor
shr
xor
mov
test
add
adc
add
xchg
imull
add
lds
vreducesd
sbb
push
aas
lret
mov
fistps
cmpsb
pop
cmc
or
test
dec
les
jge
cmp
push
dec
add
shrb
xchg
and
dec
and
sarb
xchg
rclb
pushf
fldl
fstl
mov
fnstenv
out
fimull
jno
or
pusha
xchg
aas
mov
jmp
xchg
inc
mov
sahf
jl
in
and
add
add
fwait
clc
lret
dec
sub
lahf
movsb
pop
sbb
mov
imul
dec
js
subb
js
aas
imul
cmpl
xchg
and
ret
cmp
clc
sub
mov
xchg
inc
scas
push
fadds
stos
sbbl
xchg
add
or
xchg
cwtl
jbe
xchg
cwtl
jae
cmp
jl
pop
in
jg
sahf
pushl
sbb
bound
out
pushf
sub
sahf
mov
push
loope
pop
movsb
sbb
loopne
cmp
enter
mov
xchg
or
lods
adc
hlt
popf
inc
push
mov
int
ja
fistpl
hlt
cmpsl
or
push
pop
cmp
test
aaa
fsubrs
movsl
add
fucomip
repz
jl
pop
sbb
cli
jecxz
and
push
inc
sub
xchg
or
push
dec
xchg
stc
fsubrl
or
mov
pop
mov
lret
dec
sbb
push
dec
repnz
sbb
mov
dec
xor
cld
and
push
rcrl
mov
test
ja
pop
push
jle
mov
dec
lea
xchg
cmp
dec
sub
adcb
bnd
movsb
lret
push
leave
cmp
inc
xchg
jnp
adc
loop
add
xor
xor
mov
xchg
imul
andb
fisubrl
in
adc
dec
pop
insl
pop
or
lea
shrb
movsl
mov
inc
xor
icebp
xchg
mov
mov
mov
mov
jmp
or
lods
fists
hlt
cmp
xchg
rorb
xchg
negl
mov
hlt
cmp
sbb
cmpsb
and
cmp
pop
dec
nop
ds
dec
test
or
loop
add
mov
notb
adc
pop
push
fiadds
push
cs
lcall
xchg
cld
aad
jp
push
rcrb
xor
sub
js
push
gs
outsl
xchg
sti
je
lcall
sub
xlat
fs
mov
push
popa
jmp
mov
cmp
jno
fisubs
or
ret
rcrb
add
lock
add
lods
std
ds
push
pop
mov
cwtl
sub
clc
adc
mov
sbb
fistps
and
or
enter
cmovbe
inc
sub
dec
push
aam
dec
mov
cmc
jmp
or
repnz
mov
cmp
sub
cmp
ds
lahf
lret
sti
pop
es
pushf
pop
bound
lds
stc
nop
mov
shl
enter
je
rcll
mov
lds
cmp
push
shrl
mov
test
xor
push
imul
icebp
mov
test
mov
loope
add
pop
loop
mov
pop
aam
jge
stos
es
in
cmp
cld
cmp
push
mov
mov
out
sbbb
js
xor
jo
mov
lret
adc
popf
in
ja
or
ds
je
sbb
fildl
lds
mov
inc
cltd
push
sbb
mov
leave
xor
adc
lea
fbld
dec
pop
cld
loope
mov
xchg
shll
sub
dec
popa
mov
jne
jnp
data16
mov
sub
pop
inc
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
insl
pushf
xor
mov
mov
fsubrl
fmull
xchg
mov
jnp
pop
mov
popa
jmp
test
fwait
adc
int3
sub
jmp
imul
jp
xchg
mov
inc
inc
repz
mov
push
push
and
mov
dec
scas
dec
jnp
add
scas
jno
repnz
mov
sub
xchg
sbbb
aas
cmpsl
sub
or
idiv
add
cmpsb
test
push
adc
pop
adc
movsb
test
cmpsb
dec
nop
gs
jnp
mov
aad
pop
mov
sbb
jg
cwtl
push
jb
push
cmc
adc
add
pop
das
jo
or
insl
xchg
movsb
cmp
pop
add
out
cmp
stos
mov
sub
in
flds
les
or
sub
and
mov
xchg
lock
test
xchg
stos
push
sub
sahf
inc
lret
add
ljmp
sti
mov
xor
les
jmp
test
cmpl
adc
dec
lods
xchg
stos
cmp
pop
lods
pop
xchg
aam
mov
mov
fdiv
icebp
jge
jae
fs
mov
nop
mov
inc
orl
mov
mov
daa
out
shrl
test
adc
cltd
mov
cmc
cmp
pop
mov
mov
and
xor
jno
lds
inc
xor
jg
mov
sbb
sbb
jbe
cmp
iret
push
inc
mov
dec
dec
pushf
divl
add
lcall
pop
lods
enter
inc
ja
sbb
inc
add
jecxz
inc
lahf
fisttps
out
cwtl
stc
mov
shlb
fidivrs
inc
adc
inc
pop
xor
pushf
xchg
cwtl
in
mov
mov
punpckhdq
add
incb
sbb
sarb
cmp
or
inc
cmp
int
frstor
jb
dec
les
inc
and
pop
lahf
push
dec
data16
incb
fidivl
insl
fildl
inc
xlat
lahf
and
ret
sbb
cmp
test
or
ss
mov
out
add
jns
and
mov
push
pop
fs
sub
sub
inc
jp
jb
adc
dec
fcompl
mov
aaa
sbb
das
jnp
or
xor
inc
jg
stos
int
fcompl
xor
mov
mov
gs
xchg
fnstcw
imul
mov
jge
sbb
add
sti
in
sbb
fistpl
mov
mov
sarl
push
addl
xchg
fimull
in
mov
cmc
pop
xchg
hlt
fcmovne
push
mov
xor
movl
sbb
fs
pop
or
inc
pop
mov
insl
mov
mov
push
mov
and
push
push
dec
cmpb
cmp
push
or
add
jo
ret
cmp
add
inc
cmp
jae
xchg
adc
mov
popf
shll
pop
cmp
mov
ret
pop
fisubl
push
lret
mov
ss
mov
adc
pop
lcall
sub
adc
dec
mov
mov
repz
rcll
movsb
fdiv
push
and
cmp
mov
in
inc
cmp
orl
outsl
test
inc
jecxz
add
shl
add
loope
dec
inc
mov
push
mov
cmp
lret
sti
dec
cmc
test
pop
and
scas
mov
cmpl
mov
fcoml
or
inc
aas
sbb
pop
sub
push
and
and
popa
xchg
mov
dec
cltd
lods
inc
sbb
push
loop
mov
cmpsl
xchg
out
add
mov
inc
andl
xchg
sub
xchg
mov
or
fwait
test
jl
stos
mov
mov
cwtl
rcrl
xor
and
sbb
mov
cmp
in
xor
mov
pop
lahf
cmc
into
or
cmpsl
add
pop
clc
faddl
push
pop
add
in
jae
mov
mov
lds
add
mov
mov
sbb
in
dec
or
lods
outsb
and
mov
insb
sub
add
push
cmp
push
dec
jne
cmc
js
lods
push
dec
dec
popf
lret
gs
mov
cltd
pop
mov
xchg
aas
cli
mov
push
sahf
mov
pop
sub
adc
pusha
mov
cmpsl
loopne
push
push
sbb
xchg
xchg
jae
les
ds
inc
cmp
dec
pop
and
xchg
jbe
xor
scas
mov
int3
fstpl
and
daa
pop
cmc
lret
mov
add
aaa
popf
mov
mov
or
dec
xchg
push
std
or
xor
cmpsb
mov
rorb
pop
push
je
jecxz
in
mov
arpl
jo
pop
fdivrl
mov
movsl
sbb
adc
sbb
mov
fidivrs
inc
xor
jecxz
testl
aad
add
and
movsb
push
push
jge
adc
lods
rcl
rcrl
imul
pop
add
aas
sub
insl
mov
adc
and
fildll
inc
lcall
test
push
and
inc
mov
sahf
pop
imull
cmp
mov
jecxz
push
add
arpl
push
jbe
fdivrl
addr16
icebp
jnp
in
push
jg
push
out
xlat
loop
jge
jg
add
insl
stc
out
and
mov
xor
dec
mov
adc
sub
dec
imul
mov
aam
mov
ja
or
arpl
movsl
call
jl
fstl
ja
lret
jecxz
add
aaa
mov
repnz
lock
in
iret
imul
inc
pop
xor
jmp
fcompl
mov
sub
push
mov
push
and
lock
bound
push
cmp
cmp
cld
jbe
pop
mov
lods
xchg
dec
shll
pop
lret
fs
jnp
fstps
push
ja
pop
lahf
inc
jge
pop
pop
pushw
jle
stos
test
popf
cmp
or
add
arpl
add
std
sub
xchg
cwtl
jns
int
dec
mov
cli
dec
inc
sbb
add
jbe
loop
sahf
add
pusha
jo
out
sub
jb
fwait
jo
jo
sahf
adc
sbb
jg
insb
aaa
es
inc
cmp
orl
data16
dec
stos
pop
cs
cmp
popa
mov
adc
sbb
mov
pop
pop
stos
inc
ret
and
cltd
jge
popa
cmp
mov
call
inc
adc
and
in
pop
inc
mov
cmp
push
rol
popa
and
aaa
mov
clc
dec
outsl
enter
mov
or
subb
pop
jae
iret
sub
inc
xchg
and
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
arpl
arpl
fsubrs
lods
loopne
pop
int3
sbb
cld
cmp
bound
test
dec
nop
dec
xchg
cmp
sub
inc
jmp
lret
lahf
inc
fcmovnu
jecxz
or
xchg
adc
es
shr
sub
adc
mov
jecxz
xchg
add
push
xor
lret
xor
jg
movb
inc
js
add
sub
int3
adc
xor
inc
push
aam
xchg
incl
cmp
pop
mov
lock
outsl
sub
dec
iret
or
mov
test
dec
mov
push
dec
int3
in
jne
pop
xchg
cmp
ret
jl
xchg
test
jo
outsb
push
inc
pop
jo
inc
scas
ja
add
push
push
inc
xchg
dec
mov
cmp
xchg
js
push
arpl
fnsave
cltd
lahf
movsl
mov
add
inc
add
stc
adc
mov
rcrb
fldenv
jmp
jmp
aam
repnz
jb
out
stc
fcomps
into
fsub
ret
adc
leave
adc
pop
call
scas
std
mov
cltd
enter
dec
hlt
mov
cmp
mov
mov
cmp
or
adc
or
jmp
aad
into
pop
stos
cmp
aaa
fdivrl
jne
inc
inc
xor
clc
lock
idiv
fstl
push
loope
dec
aad
cmp
add
movsb
insl
mov
adc
dec
leave
fsubrl
adc
cmpsl
outsl
mov
sub
adc
xchg
jge
mov
and
push
int3
xor
xor
xchg
test
cltd
fists
test
jge
insl
lcall
fsubrl
std
mov
fcompl
cli
push
sub
test
jbe
je
add
xchg
push
xlat
sahf
js
faddl
add
jp
jl
xchg
cwtl
clc
mov
jp
scas
repnz
les
sub
sbb
or
adc
popa
dec
push
imul
shrb
fs
push
pop
pop
call
jne
sub
add
inc
hlt
mov
or
xor
mov
mov
or
stos
sbb
or
push
movsb
xchg
jmp
inc
test
push
and
jge
insl
rolb
test
pop
adc
push
pusha
fbstp
inc
rcr
or
xchg
cmp
fsubr
les
or
add
leave
sbb
mov
and
dec
stos
adc
mov
dec
je
mov
cmp
mov
pop
push
lods
pop
stos
negl
xchg
mov
fstpt
sarb
movsb
scas
pop
push
dec
jmp
push
cmp
bound
mov
inc
mov
aas
cmpsl
push
or
jbe
pop
push
inc
pop
pop
jmp
js
jns
call
rcrl
push
mov
cli
imul
pusha
jo
fwait
clc
inc
pop
mov
mov
jp
xor
stos
ffreep
cmc
and
jge
sbb
loop
mov
dec
sbb
push
inc
sub
mov
cmp
adc
mov
fldt
xchg
iret
cmp
push
add
fsubs
xchg
jecxz
pop
outsl
jo
sbb
ja
inc
xor
cmp
mov
mov
in
xor
add
mov
rcll
xlat
fbstp
adc
sbb
sbb
imul
gs
mov
iret
jns
sub
ljmp
fbld
jno,pn
out
and
sub
mov
test
shlb
jnp
clc
mov
sbb
cmovns
and
test
dec
scas
fldl
push
or
jle
mov
pop
adc
inc
mov
sbb
jle
pop
inc
daa
or
mov
pop
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jno
inc
inc
and
dec
test
lock
sbb
mov
fcoms
rcr
je
push
inc
jecxz
mov
or
sub
mov
inc
sbb
sbb
pop
xlat
jne
sub
test
sub
cmp
in
mov
inc
aad
imul
insl
fmull
into
lcall
pop
and
mov
push
adc
push
sti
arpl
mov
inc
jnp
int3
stos
jecxz
enter
lods
in
adc
mov
sbb
cmpsl
mov
les
push
sbb
dec
add
inc
clc
nop
andl
test
shl
cmp
sbb
jle
clc
je
aad
jo
adc
push
lods
jle
addr16
out
mov
lahf
xlat
insb
mulb
inc
cmpsb
jnp
es
cmp
nop
out
leave
xlat
imul
xor
xor
into
mov
pop
rcrl
movl
cmc
push
xor
lret
xor
jg
movb
inc
js
add
sub
int3
adc
xor
inc
push
aam
xchg
incl
cmp
pop
mov
fwait
mov
lock
jnp
test
lret
loop
push
icebp
fnstcw
xchg
pop
cmp
mov
fidivl
push
mov
jae
inc
fs
lret
mov
adc
push
add
pop
cmpsl
push
jne
add
xlat
in
js
push
mov
or
adc
push
push
push
fdivrs
fbld
dec
xlat
push
or
stos
push
mov
inc
andl
add
gs
ja
int
and
and
push
mov
mov
push
sbb
andl
pop
addl
inc
lea
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
cmc
cld
or
mov
pop
jle
cwtl
push
movsb
push
arpl
add
fcoms
aam
xor
rol
xchg
pop
cmp
push
fmull
pop
insb
fcomps
xchg
call
inc
scas
ja
test
push
sbb
rcrb
jae
scas
js
push
jb
fistpl
ret
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
jmp
lret
pusha
jo
iret
leave
test
pop
mov
sbb
sbb
inc
mov
mov
lret
movsb
pop
mov
inc
mov
xchg
xor
xor
pop
xchg
push
or
mov
clc
or
ljmp
ret
dec
cmpl
lock
and
nop
pushf
test
ja
pop
sbb
inc
cmp
imul
adcb
icebp
int3
addr16
shlb
std
or
adc
inc
mov
fucomp
fs
subl
add
in
push
mov
insl
mov
fisttps
mov
inc
mov
mov
insl
mov
lods
pop
popf
inc
pop
pusha
fisubrs
repz
out
js
cltd
mov
cmp
or
lcall
lea
sub
lret
dec
notb
push
test
cmp
lock
inc
and
mov
lea
jle
popf
iret
sbb
or
imul
mov
xor
imul
inc
stos
orb
mov
enter
adc
je
mov
sub
sbb
imul
fsubrl
mov
fwait
jmp
mov
insl
test
or
sub
xchg
sbb
xchg
ds
outsb
in
scas
shrb
lcall
aaa
stos
inc
test
xchg
fdivl
push
dec
cmp
js
pop
mov
dec
popf
lret
cltd
push
aam
sbb
pusha
sbb
idivb
scas
xchg
stos
jnp
inc
mov
jge
dec
mov
mov
popf
bound
cmp
jo
pusha
push
adc
push
cwtl
fs
mov
inc
orl
cmpl
xor
movsb
cmp
xor
cmc
out
push
cltd
push
mov
xchg
mov
xlat
ja
pop
into
sbb
mov
scas
lahf
jle
mov
rorb
test
inc
ss
adcl
mov
xlat
aaa
push
adc
or
jne
fcmovnb
cld
pusha
mov
push
sbb
or
jae
in
mov
decb
in
inc
cmp
xor
dec
xchg
ss
ja
mov
les
std
std
roll
sub
mov
enter
jp
add
mov
movsb
mov
dec
aam
mov
enter
iret
inc
andl
in
jmp
cmpsb
jns
lcall
inc
inc
lods
shrb
cltd
sbb
lahf
pop
movsl
mov
fucomi
cmc
mov
outsl
clc
loop
dec
sbbl
sub
jmp
pusha
outsl
xor
dec
mov
stc
hlt
mov
out
push
stos
shrb
sub
out
shr
jb
fwait
pop
es
mov
mov
sbb
insb
aaa
dec
push
sbb
cmp
pushf
cwtl
stos
sub
sub
and
fbstp
test
pop
or
mov
xchg
jl
and
jmp
cwtl
bound
xor
cmpsl
mov
cmp
packsswb
test
int
xchg
iret
stc
xchg
mov
cmp
negb
and
shrl
mov
xor
bnd
xchg
pop
and
lcall
mov
cld
cmpsl
lock
insl
insl
shll
mov
mov
dec
cmpsl
subb
xchg
mov
dec
add
fadds
dec
mov
in
and
stc
out
inc
fimuls
fucomi
jmp
js
fcomip
jl
push
push
xor
ljmp
xchg
and
mov
push
ljmp
adc
adc
ja,pn
stos
pop
mov
cmp
out
cmp
cmp
adc
jl
xorl
jp
mov
sbbl
dec
push
inc
inc
ror
lahf
rcrb
gs
iret
in
cmp
add
dec
or
dec
ret
jg
adcb
rclb
cmpb
mov
cmp
add
and
scas
mov
or
add
notl
fwait
mov
imul
test
shrb
cmp
outsb
mov
in
and
xchg
pop
roll
add
and
mov
sti
pop
fsts
subl
js
shlb
movsb
ret
sub
dec
jo
repz
dec
xor
sbb
aas
lock
repnz
xorl
mov
std
add
fcmovu
out
xchg
rcrl
push
fbld
insb
jbe
cmp
mov
ret
xchg
sti
xor
push
icebp
dec
faddl
inc
hlt
xchg
sbb
aas
xorl
int
inc
sbb
mov
rolb
and
mov
inc
inc
mov
xor
push
pop
or
pop
call
iret
sbb
bound
cmovge
cltd
pop
inc
push
sbb
cmp
push
fs
dec
mov
sbb
mov
lret
test
call
inc
mov
jnp
mov
mov
insb
push
iret
push
pop
or
sbb
sbbb
add
jge
stos
aam
fistpll
lcall
or
stos
xor
xor
jnp
pop
sub
dec
lret
pop
add
in
mov
in
fistl
lds
inc
dec
icebp
xorl
enter
repz
lret
push
jge
insb
push
pop
xchg
ret
jge
daa
incl
xchg
bnd
xlat
adc
lahf
aaa
shll
pushl
inc
add
mov
adc
lcall
mov
bnd
addr16
push
lret
inc
pushf
fimuls
dec
lock
mov
jecxz
pop
adc
or
adc
inc
fucomip
push
setae
lret
ficoml
sub
sub
pushf
in
add
dec
mov
in
icebp
pop
fsub
or
xchg
mov
add
iret
hlt
add
enter
lods
insl
jo
fsts
mov
push
aam
sub
popf
push
aad
pop
fdivs
push
ret
dec
pop
gs
mov
sub
xlat
jbe
xor
xchg
ds
inc
xchg
js
fidivrs
mov
sti
cmp
cmp
pushf
dec
and
orb
or
jle
sbb
stc
sahf
push
test
xchg
mov
int
mov
stos
xor
into
fadd
pop
fdivrl
jnp
fdivs
cltd
push
adc
pop
sub
inc
pop
jp
out
jns
dec
jne
ficompl
rclb
or
stos
sbb
or
push
movsb
xchg
jmp
inc
test
push
and
jge
insl
rolb
test
pop
adc
push
pusha
fbstp
inc
rcr
or
xchg
cmp
fsubr
les
or
add
push
mov
sbb
test
mov
mov
mov
lret
mov
inc
jnp
int3
stos
jecxz
enter
lods
in
adc
mov
sbb
cmpsl
mov
nop
push
and
arpl
or
sub
mov
pop
fdivrs
js
in
cs
fdivl
cmp
mov
out
into
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
hlt
mov
jl
xchg
test
aad
lret
mov
imul
rcrb
xchg
pushf
rol
lahf
ret
loopne
sbbl
popa
les
dec
mov
or
ficoms
adc
loope
dec
pop
movb
inc
imul
test
shl
mov
jmp
arpl
cmp
cltd
mov
and
mov
lods
outsl
jge
insb
xchg
sar
mov
fwait
xchg
push
out
movsl
add
into
lds
xlat
push
in
iret
xchg
js
subl
and
xchg
push
and
dec
xor
mov
bound
lret
xor
add
lcall
dec
in
rorb
mov
neg
sbb
repz
xor
lods
mov
ret
xchg
cmpsb
mov
test
daa
bound
clc
in
or
fwait
std
xchg
addr16
jmp
pusha
loop
sub
aaa
adc
pop
inc
adc
or
daa
dec
sahf
dec
mov
rcr
je
push
inc
jecxz
mov
or
sub
mov
inc
sbb
sbb
pop
xlat
jne
sub
test
sub
cmp
in
mov
inc
aad
imul
insl
fmull
into
lcall
dec
pop
xchg
cmp
push
or
lret
cmpsl
jno
lret
rolb
mov
cld
or
push
stos
lret
and
pop
mov
push
iret
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
aas
push
les
cmpsl
ret
fcomp
mov
mov
pop
xchg
cltd
sub
mov
fstpt
pop
dec
lea
jae
push
repnz
imul
aas
gs
pop
jge
fs
push
sub
add
pop
add
arpl
mov
jne
popa
or
mov
mull
xlat
xchg
xor
ror
pop
imul
inc
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
mov
dec
mov
push
push
pop
pop
mov
sbb
or
or
mov
adc
xorl
dec
push
inc
add
xchg
out
mov
in
inc
sbb
sbb
ret
xchg
sbb
sbb
sub
dec
out
repnz
lods
test
pop
xchg
imul
xchg
mov
push
jns
pop
jmp
pop
or
fsubrs
cmp
das
dec
mov
push
sarl
or
movsb
sub
xor
xor
rcll
subb
cli
sar
jp
push
xor
mov
xor
or
dec
jb
jae
pop
sbb
mov
jecxz
mov
xchg
std
ret
testb
mov
ljmp
rcrl
addl
dec
icebp
push
and
dec
imul
xchg
mov
ficompl
xchg
pop
pop
jno
add
xchg
jae
mov
sbbb
lahf
xchg
das
xchg
stos
shlb
nop
xchg
mov
sbb
pop
ret
push
xchg
test
lock
ficomps
or
and
cli
add
popf
jle
jecxz
shll
lea
por
xor
cld
sub
jmp
mov
repnz
rcll
dec
fdivrl
nop
fistps
test
pop
lods
pop
push
jle
aaa
cld
add
mov
iret
xor
push
jg
inc
lods
imul
push
adc
push
addr16
aam
lret
pop
cmp
clc
mov
std
lret
hlt
les
pop
fadd
ret
inc
adc
cmp
or
movl
jno
test
cmp
aas
stos
inc
movsl
std
sarb
inc
stc
scas
or
lods
cmpsb
fdivl
ret
dec
scas
cld
aad
mov
les
inc
ss
sbb
inc
pop
mov
test
and
jge
mov
faddl
mov
mov
stos
ret
cmovle
push
sub
sahf
add
jo
shrb
cmp
add
inc
inc
sbb
cltd
push
andb
out
jno
jns
je
out
into
and
popf
aad
sti
pop
fisubl
pop
lret
mov
cltd
mov
mov
mov
mov
pop
add
inc
cmpsl
es
dec
sbb
nop
mov
lret
lcall
cld
adc
adc
and
or
mov
adc
in
xchg
mov
push
inc
jecxz
add
in
fdivrs
dec
inc
pop
ret
gs
xchg
int3
addr16
push
mov
enter
scas
push
sub
xchg
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
test
dec
or
cmc
add
xchg
mov
jge
mov
test
push
enter
adc
inc
ljmp
std
xor
sbb
aas
lock
add
loope
mov
repnz
fdivs
data16
movsl
jp
adcb
aam
inc
and
lret
sbb
movlhps
outsl
mov
inc
cltd
lea
mov
fmul
dec
mov
call
dec
mov
inc
fstpt
or
dec
xor
add
dec
rcl
pop
loop
vcmpss
cmp
inc
cmp
mov
mov
or
enter
mov
movsl
or
pop
into
push
movsb
mov
mov
xlat
sbb
rcrb
xor
sarb
add
cmp
lahf
push
loop
mov
imul
push
lock
out
xchg
cmp
imul
inc
dec
push
push
sub
fs
add
pop
lds
inc
dec
pop
popa
int
int
adc
xor
push
pop
arpl
xchg
and
out
push
pop
sbb
inc
enter
push
aam
scas
enter
aas
sahf
imul
repnz
mov
cld
cmp
sbb
gs
mov
adc
ret
push
out
push
pop
fcmovne
jns
and
fwait
push
jne
inc
push
scas
push
mov
mov
push
or
fdivr
sub
cs
lock
imul
fisubl
and
int
xor
movsb
lea
test
xor
lret
push
insb
imull
popl
arpl
ds
inc
jb,pt
dec
leave
inc
push
adc
iret
jp
fwait
sub
mov
jne
icebp
pop
sub
adc
mov
lret
jmp
scas
sbb
gs
pop
mov
jb
push
shlb
mov
jns
filds
mov
add
mov
fldt
adc
or
repz
or
inc
mov
je
divl
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
addl
jae
enter
lret
pop
es
test
jo
jno
pop
stos
adc
xchg
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
adc
in
iret
imul
jg
xor
pushf
inc
loop
in
movsb
les
sbb
mov
inc
inc
fnsave
jae
fldt
sti
mov
test
xchg
mov
cmp
int3
test
mov
sbbl
test
testb
clc
push
pop
subb
cmp
xor
outsl
iret
inc
movsl
cmp
std
fiadds
aad
testb
mov
daa
fsubrs
lret
push
shlb
sbb
sahf
insl
push
add
jo
inc
mov
pop
push
ljmp
mov
inc
inc
and
jge
fs
push
jns
or
js
mov
dec
mov
lock
xchg
popf
std
jb
adc
subl
popf
cmp
pop
mov
sbb
or
mov
hlt
call
adc
pop
jnp
mov
pop
mov
dec
jmp
cmp
sahf
xchg
aam
push
mov
sbb
repz
cmp
ret
xor
orl
sbb
ret
mov
sub
mov
mov
or
je
shl
mov
cmpsl
dec
push
mov
leave
dec
inc
xchg
lods
or
jae
xor
xchg
xlat
mov
or
movsb
test
out
add
lret
enter
dec
pop
loope
test
adc
xchg
stc
dec
in
bnd
mov
pop
push
scas
sub
je
pop
fnstsw
xor
imul
out
sbb
das
in
repz
push
sub
mov
jb
xchg
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
add
sub
mov
xor
mov
in
mov
cmp
nop
mov
inc
pop
xchg
loope
out
and
xchg
fistpl
dec
sbb
xchg
xchg
dec
push
clc
subl
add
enter
dec
fdivl
xchg
popf
adc
push
mov
sbb
sbbl
pop
movsl
stos
sbb
mov
jl
cwtl
movsl
pop
jae
inc
gs
pushf
inc
cltd
mov
cmp
fsub
and
jne
xchg
jo
ffree
push
mov
add
adc
sbbl
mov
mov
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
push
add
lret
testb
inc
arpl
ret
sbb
int3
jmp
icebp
stos
les
fldenv
push
ds
movsl
fisubs
push
lods
shl
test
enter
mov
sarb
jae
mov
jnp
aam
xchg
xchg
xlat
xchg
pop
out
jmp
fisttps
insl
inc
push
mov
mov
test
jo
and
jne
cld
and
out
jg
shlb
cmp
sbb
mov
lahf
lcall
ljmp
xchg
les
sbb
adc
imul
sbb
ret
test
push
dec
add
bound
gs
or
cltd
push
ss
sbb
dec
or
jns
cmp
dec
mov
xlat
fistl
int
clc
lods
shrl
iret
jecxz
int
add
test
sbb
in
enter
lock
mov
cld
dec
pop
adc
test
popa
push
lock
pop
fnstsw
push
aaa
jmp
hlt
hlt
mov
and
or
movsb
mov
xor
adc
daa
lret
add
mov
and
mov
aad
imul
inc
and
ret
xchg
rclb
fdivr
push
dec
fsts
cmp
xchg
jp
in
pop
dec
push
aad
fwait
data16
enter
mov
jg
add
orl
lcall
decl
adcb
xchg
sbb
sub
jnp
push
imull
addl
rorb
mov
adc
fwait
sahf
ret
in
sbb
lea
jno
adc
mov
xor
inc
cmc
inc
fwait
xchg
pop
int3
ljmp
sahf
imul
or
dec
cltd
push
sti
mov
or
inc
xchg
mov
arpl
mov
dec
cmc
cmpsl
into
enter
fwait
icebp
or
in
ja
in
lds
hlt
adc
lret
mov
scas
xor
div
inc
dec
jno
leave
push
insb
mov
or
push
inc
fisttpl
push
cmpsb
push
push
adc
addr16
jle
scas
sarl
pop
lods
jmp
lods
sahf
xchg
pop
push
fbstp
cli
cmc
xor
xor
add
and
or
sub
rclb
dec
mov
adc
cmpsl
inc
jge
loope
sbb
mov
and
cmpsl
ret
fld
call
sbb
mov
cmp
mov
sbb
xchg
gs
ffree
jne
inc
aam
ss
popf
flds
pop
into
xchg
cmp
push
pop
jmp
lret
iret
pop
jmp
jae
cmpsb
add
arpl
dec
lock
add
movl
or
ret
cltd
cmp
xchg
movsl
lahf
xlat
add
sbb
adc
push
mov
stc
or
jmp
fistl
rol
adc
inc
in
das
int
clc
cwtl
mov
fists
adc
mov
mov
xor
jo
cwtl
xor
dec
mov
mov
and
sti
jns
push
inc
rorl
rorl
cmp
or
sbb
cmp
mov
enter
inc
test
std
lods
test
adc
jne
mov
pop
push
ja
fbld
push
or
in
popf
cmpsb
inc
cltd
dec
into
test
shlb
bound
mov
dec
sbb
xchg
out
lret
loopne
int
fbld
xchg
xchg
xor
cmp
push
inc
int3
sbb
push
mov
or
loop
jbe
sti
int3
sti
mov
gs
cmp
ja
mov
iret
fs
iret
sbb
sbb
lcall
loope
cmp
into
bound
cmp
mov
sbb
cwtl
divb
adc
mov
stc
mov
pop
rolb
pop
push
popf
cmp
dec
xchg
lcall
inc
adc
call
lods
pop
xchg
pop
mov
and
fsubrs
adc
jo
leave
dec
gs
lods
test
dec
xor
test
jns
ret
outsl
add
and
and
and
dec
xchg
adc
inc
jmp
xor
mov
lods
cmpsb
repnz
mov
inc
js
or
cmp
pop
test
fildl
les
fstl
add
push
or
inc
jl
ret
pusha
rcrl
inc
sbb
add
push
mov
addl
stos
push
lods
xchg
sub
adc
fsts
test
mov
pop
add
filds
sub
fistps
jbe
outsb
arpl
scas
cltd
adc
mov
add
inc
stos
enter
notb
nop
mov
adc
pop
nop
inc
sbb
xchg
mov
das
ficoms
dec
mov
mov
mov
cmp
add
rol
call
add
dec
ficompl
dec
mov
incl
sub
push
loopne
sahf
cmp
push
gs
pop
jge
out
pop
hlt
or
and
xchg
inc
inc
mov
ret
jl
xchg
movsl
xchg
mov
test
clc
mov
cmp
shlb
rol
iret
push
pusha
loopne
dec
xor
insb
cmc
stc
fidivrl
enter
mov
test
mov
mov
aad
push
repz
xor
leave
movsl
mov
and
cmp
jp
out
xorb
lcall
shrb
int3
mov
arpl
adc
jmp
cwtl
stos
cmp
scas
xchg
fisttpl
outsl
mov
xor
adc
inc
mov
and
mov
mov
in
repz
mull
inc
sarb
js
push
inc
and
call
fadds
out
jmp
inc
cwtl
inc
stos
adc
fidivrl
cli
mov
push
pop
sbb
adcb
push
or
fwait
out
push
int
aam
jne
mov
int3
pop
add
stos
bound
xchg
fwait
aad
aad
mov
jmp
mov
pushf
negl
sbb
dec
and
mov
mov
test
add
mov
sbb
push
xchg
mov
jbe
adc
mov
aas
cli
or
out
or
pmuludq
js
xorl
mov
ljmp
sub
loopne
cmpsb
xchg
adc
subb
push
xor
jb
ja
stos
imulb
in
sbb
fdivr
mov
fisttpll
push
stos
xor
xor
fsub
bnd
mov
sbbl
insl
fidivrl
jecxz
iret
dec
cmp
movsb
test
enterw
adc
adc
lds
mov
mov
mov
lahf
in
adc
push
xor
cmp
jo
mov
push
sbb
dec
lock
fsubl
popa
sub
das
add
sub
and
roll
xor
std
cmpl
mov
in
orb
add
jne
decb
push
push
pop
fistps
lock
inc
jge
pop
xchg
leave
aam
rep
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
fsubl
dec
pop
insb
mov
sbb
enter
push
xor
in
xlat
testl
xchg
sbbl
int3
add
fwait
and
inc
add
bound
aad
int3
outsb
xor
add
scas
mov
or
and
jp
adc
xchg
ljmp
xchg
ljmp
cs
test
push
push
adc
xor
aam
add
or
push
movsl
mov
fcomp
push
dec
adc
lcall
and
push
movsb
mov
out
and
push
jle
add
add
nop
pop
ljmp
popa
das
inc
adc
or
sub
bound
aad
icebp
ret
sbb
add
mov
test
xchg
movsl
stos
mov
jne
inc
int
jno
cld
in
lea
push
adcl
mov
pop
lcall
push
and
adc
pop
and
js
cmpl
jecxz
cmp
push
adc
ret
je
data16
cltd
jb
fcompl
add
lret
adc
enter
dec
addr16
push
sbb
cmp
imul
out
xchg
mov
pushf
mov
lret
in
mov
mov
or
dec
cltd
pop
xchg
mov
cwtl
push
add
cs
add
mov
push
dec
mov
leave
mov
cmpsl
xor
or
sub
mov
imul
mov
ja
adc
lret
aaa
lock
mov
mov
or
inc
or
outsb
xor
jae
fadd
adc
mov
pop
mov
mov
aam
dec
add
xorl
imul
mov
shlb
xor
out
mov
push
sbb
mov
testb
sbb
cmp
mov
fisttpll
test
pushf
sti
push
icebp
sub
js
popf
pop
xchg
std
out
js
shlb
lret
adc
sbb
call
les
fildll
mov
inc
cwtl
dec
lods
push
decl
jae
mov
pop
adc
dec
fisubl
pop
fidivrs
sti
xor
jb
mov
jne
cltd
cmpsl
inc
popf
std
ljmp
cmc
pop
xorl
sbb
cmp
mov
and
xor
sub
jae
cli
call
lods
mov
mov
clc
cmp
mov
cmp
add
mov
and
js
fistps
addr16
cmpsl
cld
lea
in
or
lret
lcall
sbb
sbb
lods
dec
sbb
sti
mov
ret
mov
xchg
cmp
mov
roll
sub
les
and
push
dec
fldt
xor
mov
xor
iret
js
pop
int3
xor
and
adc
xchg
push
cmp
pop
mov
and
rcl
xor
add
mov
sbb
adcl
in
xor
pop
mov
push
cltd
enter
mov
cwtl
dec
jecxz
mov
push
out
mov
incb
xchg
popa
inc
sbb
mov
shlb
xchg
inc
scas
shr
xor
test
sub
jp
iret
mov
imul
out
mov
decb
sub
cmpsl
mov
sbb
rclb
xchg
xor
sbb
fisubrl
sub
aam
popa
dec
cld
lods
fdivr
cmp
stos
inc
or
jmp
mov
xchg
dec
mov
fildll
push
lcall
push
fildll
push
mov
inc
mov
cmp
mov
adc
scas
mov
repz
push
mov
adc
jl
adc
inc
mov
movsl
cmpl
mov
sbb
jnp
inc
push
mov
sub
xchg
xchg
mov
sbbl
sbb
cli
xor
cmpsb
pushl
mov
push
or
cltd
mov
out
xor
inc
lcall
push
mov
mov
mov
sbb
pop
add
ret
or
fidivrs
jnp
inc
xchg
push
idivb
rcrl
mov
cli
dec
mov
jns
ret
sbb
push
daa
xchg
adc
sub
lcall
ljmp
lea
lods
popf
mov
or
or
or
cmp
adc
mov
mov
std
lock
fistpl
cltd
lds
mov
xchg
jle
test
scas
adc
fisubrl
jnp
inc
mov
orb
fisubs
xor
sti
dec
js
mov
and
lret
lret
movsl
ret
sub
push
add
add
sbb
sti
dec
jns
mov
stc
sub
shrl
aaa
sbb
enter
add
jnp
icebp
pop
outsl
fs
test
cwtl
cmpb
xor
jg
push
or
pop
cmpl
cmpl
mov
bound
ljmp
sub
cltd
push
cmc
mov
and
shll
imul
push
mov
popf
mov
fists
lods
cmp
push
xchg
leave
test
jae
xchg
rorl
xchg
cld
xor
jge
imul
pop
mov
mov
fwait
mulb
fisttpl
cltd
fsubl
repz
mov
mov
icebp
sbb
js
popf
enter
insl
xor
pop
push
sbb
es
sbb
mov
fidivrs
imul
xorl
je
cmpsb
shlb
push
stos
push
cmpsl
movsb
inc
sbb
pop
xchg
push
in
jb
fwait
dec
icebp
xor
add
lods
int3
pop
sub
xor
or
int
push
push
or
push
xchg
shl
mov
int3
in
repz
lret
imul
rol
imul
xchg
in
or
sbb
in
aas
repnz
in
ja
push
testb
popf
jl
and
ret
icebp
decl
push
lahf
loop
les
xlat
mov
inc
and
les
pop
cmp
arpl
pop
clc
mov
scas
pop
daa
test
xchg
test
nop
adc
xchg
mov
and
mov
mov
fcoml
jecxz
push
cmp
mov
mov
pusha
push
add
add
mov
xchg
cmpsl
and
dec
xor
adc
inc
sbb
sub
aad
pop
xchg
ret
push
mov
lds
pop
pop
stc
shlb
out
push
lea
lea
inc
mov
in
adcb
mov
out
xor
int
fisttps
ds
repz
ret
push
jmp
lds
into
cwtl
out
sbb
enter
cmc
int
jg
fyl2x
cld
jg
fnsave
fsubrl
and
movsl
mov
xchg
mov
add
les
jge
leave
pop
push
lock
jbe
add
dec
aad
into
arpl
jo
orl
inc
pop
xchg
leave
daa
jne
dec
xchg
xchg
fistl
pop
sub
or
imul
into
mov
pop
jns
xor
xchg
sti
and
push
mov
inc
icebp
inc
clc
mov
adc
or
insb
xor
mov
lds
ret
xor
xchg
cwtl
aam
adc
jnp,pn
or
mov
adcl
out
mov
xor
and
cmp
movsl
aas
fadds
mov
pop
and
and
mov
outsb
inc
sahf
xor
mov
ja
lret
in
out
test
inc
rolb
xchg
xor
leave
add
fistpll
lock
ret
inc
mov
jecxz
sbb
arpl
arpl
mov
les
push
cli
mov
adc
mov
fcmovb
jmp
sub
mov
dec
jnp
dec
mov
daa
and
jne
inc
and
xchg
fwait
adc
cmp
rorl
mov
mov
sbb
data16
int3
mov
pop
or
add
popa
or
int
or
push
idivb
lcall
popl
xor
pop
mov
xor
movsl
inc
pop
push
and
sbb
sti
repz
lods
ss
lea
pop
jb
stos
nop
jns
fiadds
and
xchg
sub
dec
jne
jbe
pop
inc
add
adc
idiv
mov
jns
aas
sub
hlt
movsl
leave
roll
popa
lahf
loope
pushf
sub
in
fwait
hlt
xor
rcr
push
jge
sub
cmp
cmc
and
test
ficoml
mov
rcrl
mov
ffree
xchg
lods
cmpsl
mov
cld
mov
xchg
cmp
jae
les
mov
orb
xchg
adcb
mov
enter
mov
scas
jg
sub
or
scas
inc
xchg
cli
sti
and
call
jae
scas
push
add
inc
mov
sbb
lods
test
lods
int3
aam
mov
xor
mov
jecxz
cmpps
iret
aad
jp
dec
repz
sbb
inc
inc
mov
pop
lahf
inc
push
pushf
mov
pop
movsb
popf
xchg
push
adc
shrb
pop
pop
test
lcall
and
xchg
dec
movsl
and
int
mov
mov
hlt
mov
ret
int
inc
mov
rorl
jno
cltd
jne
in
inc
sbb
jne
mov
pop
stos
test
adc
sbb
xorl
lcall
pop
add
dec
sub
adc
daa
adc
mov
add
or
pop
sar
lock
add
jecxz
cmpsb
fstl
cmpsl
dec
pushf
jp
sub
fnsave
jl
incl
or
cld
sbb
sub
push
cwtl
hlt
inc
xchg
cmpsl
es
sbb
mov
fwait
and
mov
imul
adc
jbe
mov
movsl
dec
pop
xchg
jle
jb
fwait
inc
mov
repz
push
and
inc
fiadds
sbb
jae
out
stos
stc
jne
dec
mov
sti
mov
ffree
push
mov
lret
cltd
cmovns
pop
or
andl
jg
repz
sti
pop
pop
iret
mov
mov
pushf
lret
mov
sbb
mov
fsubrl
adc
ret
pop
jl
mov
sub
shrl
jmp
push
xlat
stos
fs
movsl
dec
cltd
lret
ja
or
sub
mov
mov
inc
push
xchg
std
aad
mov
mov
pusha
stos
fistl
lods
shrb
jnp
mov
lahf
scas
jg
sbb
dec
push
scas
inc
xchg
ljmp
or
or
and
es
pop
outsb
rcl
pinsrw
fildll
mov
and
push
add
mov
pusha
jo
in
fld1
jb
cmp
out
enter
cmp
cmc
aaa
sbb
in
mov
int3
out
test
cmc
xor
push
adc
push
dec
mov
cs
or
and
pop
or
hlt
fnstcw
movsl
mov
sub
add
xlat
rcrb
xor
ret
fs
nop
lret
mov
test
lret
push
insb
xlat
lret
sbb
inc
mov
rcrb
jns
lahf
std
in
repz
sub
sbb
mov
cmp
rcrl
inc
sbb
sub
shlb
movb
and
jae
lods
inc
sbb
cs
fnsave
cli
lds
stc
inc
mov
mov
jae
xchg
adc
roll
adc
data16
push
sub
insl
in
imul
pop
fstl
pop
mov
sti
xor
jb
adc
ret
test
pop
xor
mov
sbb
cmp
and
cmp
repnz
push
inc
addr16
cs
cmc
adc
mov
mov
dec
inc
dec
lret
call
pop
test
lcall
cld
divl
add
sub
jge
xor
lods
and
mov
loop
pop
mov
mov
arpl
mov
ja
push
rcr
test
push
sub
cwtl
paddusw
shll
bound
mov
xchg
fcoms
addr16
fsts
std
daa
push
pusha
imul
jge
lcall
pop
pop
rorl
mov
push
inc
int3
xchg
jecxz
popf
xchg
jmp
pop
and
cmc
xor
inc
adc
jg
or
std
jecxz
mov
pop
xchg
pop
xor
mov
dec
xchg
ret
cs
xor
mov
aam
cmp
cmp
loope
push
or
adcl
out
mov
enter
pusha
inc
ds
mov
adc
lret
dec
sahf
dec
mov
lea
add
stos
aam
sbbl
jae
mov
xor
outsl
inc
sbb
into
mov
ret
mov
mov
rcll
ret
sbb
add
pushf
stos
mov
jnp
inc
in
xlat
pop
mov
mov
push
mov
sbb
punpckhwd
mov
xchg
bound
xchg
or
and
movsl
xchg
mov
jns
inc
inc
inc
fisubrl
nop
fstl
jnp
dec
cwtl
add
sbb
into
scas
pushl
test
mov
in
idivl
push
sbb
adc
orl
rcll
xchg
xchg
pop
jp
mov
xor
lcall
pusha
jo
pop
inc
in
jb
pop
fisubs
inc
jbe
adc
inc
ret
pop
aaa
enter
popf
inc
sbb
dec
pop
xlat
mov
insl
sahf
dec
mov
into
add
and
sahf
cmp
mov
sar
sub
lock
inc
push
push
dec
sti
pop
or
rcrb
dec
and
jl
aaa
xor
push
sbb
mov
lods
inc
fnstcw
divb
mov
test
mov
xor
adc
mov
popf
les
cld
mov
nop
cmp
mov
fisttpl
stos
rsm
jecxz
sub
push
add
test
add
sbb
js
jle
sub
movsl
fadds
xchg
xchg
dec
inc
xchg
mov
mov
sub
or
test
pop
xchg
fistpll
stos
icebp
mov
pop
pop
xchg
jnp
sbb
js
jb
mov
rclb
or
cli
fwait
sti
orl
je
test
sbb
fsubr
dec
mov
xor
mov
out
lret
mov
adc
adcl
pop
adc
fldl
mov
or
cltd
xchg
enter
dec
movl
or
ret
test
inc
mov
mov
mov
sbb
rol
inc
dec
jnp
push
mov
sbb
mov
mov
pop
ljmp
push
cmp
pusha
mov
les
or
lcall
inc
sbb
cs
mov
jge
xchg
loop
repz
gs
jb
add
add
mov
test
adc
data16
add
cmp
mov
push
pop
adc
testb
push
insl
loope
xchg
cltd
mulb
lahf
movsb
push
lds
mov
gs
enter
hlt
je
xchg
xchg
jmp
jle
push
ret
mov
cltd
fisubs
int3
xor
mov
movsl
negl
push
and
pop
mov
imul
fwait
hlt
mov
inc
mov
add
sub
or
gs
inc
sbb
shrb
jg
les
adc
push
in
fisttpl
or
stos
outsb
fucomp
shll
pop
dec
sbb
test
add
fidivrl
mov
mov
add
pop
in
ljmp
xchg
pushf
stos
orb
std
add
mov
xlat
in
loope
andl
cbtw
push
mov
inc
xchg
pop
aam
sbb
push
ret
or
cltd
loop
pop
shll
inc
cmp
icebp
or
es
hlt
or
and
mov
fdivr
gs
loopne,pn
cmc
mov
movsb
test
mov
ret
arpl
int
fmulp
aam
sti
pop
xchg
dec
dec
lds
add
cmp
jmp
mov
inc
ret
jae
stc
daa
rcrl
xchg
pushf
or
mov
cmpb
out
scas
cwtl
icebp
ss
ret
sub
and
scas
sahf
repnz
push
loop
mov
rcrl
ljmp
pop
in
lret
sbb
or
fs
jne
adc
cmp
mov
scas
sub
and
pop
mov
dec
mov
rcrb
jnp
xchg
push
mov
xchg
xor
scas
inc
cld
cli
sti
das
test
add
add
or
scas
dec
push
addr16
les
inc
push
fisubs
xchg
jmp
or
and
pop
shll
inc
mov
mov
in
cmpsl
xlat
imul
rclb
lret
inc
cmp
das
xor
dec
pop
pop
mov
jbe
mov
mov
pop
je
sarb
ja,pt
cmp
mov
xor
mov
sbb
add
mov
jecxz
inc
add
dec
mov
and
cmpsl
aam
dec
sbb
add
add
push
clc
mov
lahf
or
dec
push
test
dec
sbb
rol
cmpsb
cmpsl
xchg
mov
sbb
mulb
pusha
outsb
cmpsb
sub
lcall
or
fistl
test
xor
imul
mov
add
adc
adc
fisubs
xor
mov
pop
mov
icebp
js
ds
pusha
xor
mov
push
les
shl
aam
sahf
xchg
sbb
test
xor
xor
fdivrs
sti
mov
ror
push
adc
outsb
jecxz
es
hlt
pop
jmp
sub
mov
push
inc
mov
imul
ja
push
test
lret
adc
mov
mov
lods
sbbl
or
divl
add
mov
add
jbe
and
mov
sti
dec
lds
sbb
out
sbb
xchg
test
movsb
jmp
stos
fucomp
rclb
sub
mov
ret
add
push
addb
lret
jge
mov
repz
xor
lods
movb
cmp
cltd
lods
inc
inc
mov
into
fcmovnb
pop
mov
mov
xor
add
adc
mov
sarb
sbb
jmpw
or
mov
sahf
pop
inc
fstl
mov
loop
pop
fsubs
test
add
xor
mov
sbb
popl
adc
pop
adc
adcl
fisubl
movsl
loopne
lods
lods
mov
test
pop
pop
iret
ret
mov
fwait
scas
mov
push
jo
mov
lock
adc
lea
and
ljmp
notb
mov
cmpb
inc
std
xlat
lret
in
sbb
lods
dec
ds
loopne
inc
sbb
adc
sub
cmpsl
jno
inc
push
push
push
push
cmp
addb
add
pusha
sbb
xchg
stos
std
mov
sub
pop
xchg
push
leave
mov
jmp
popf
push
jecxz
loope
js
jg
movsl
enter
andl
mov
jge
push
dec
mov
mov
inc
les
fwait
mov
aad
jno
enter
aad
pop
cmpsb
sub
mov
pop
repz
lahf
insl
mov
dec
mov
inc
and
hlt
xor
test
ret
fcoms
faddl
loopne
shl
pop
adc
inc
dec
or
dec
clc
sbbl
mov
imul
xor
inc
sbb
sub
mov
mov
adc
in
sbb
nop
aas
ret
cmpsl
ret
dec
lret
lahf
adc
mov
xlat
cmp
add
lods
dec
incb
inc
push
clc
mov
iret
jnp
cmc
mov
or
or
jp
push
stos
jge
test
jecxz
jl
mov
pop
test
fstl
pop
cmpsl
pop
push
push
mov
movsb
push
jmp
mov
subl
rcll
es
fs
adc
and
fisubs
and
inc
add
mov
xor
cmpsl
jnp
enter
outsl
lods
add
inc
mov
dec
jg
inc
into
arpl
pop
dec
inc
mov
push
imul
in
cmc
fmull
hlt
mov
sahf
xor
jo
adc
pop
mov
loopne
mov
imul
adc
lahf
mov
pusha
xor
mov
add
and
movsl
ret
inc
mov
icebp
ss
xchg
call
push
insb
rorl
lret
inc
fcmovbe
scas
sbb
fldt
pushf
dec
test
cltd
js
xor
jae
les
loop
or
dec
sbb
dec
mov
mov
fisubl
jmp
aad
mov
enter
enter
fdiv
and
cwtl
in
pop
es
sbb
mov
inc
mov
pop
and
pop
mov
xchg
cmc
mov
xchg
sbb
movsb
adc
and
mov
mov
mov
inc
xchg
and
add
sub
popf
out
push
mov
sarb
pop
pop
mov
inc
fsubl
xor
mov
xchg
stos
int
push
add
sbb
inc
cli
iret
sbb
lds
xchg
xor
or
cmc
mov
cli
or
mov
aam
xor
jne
dec
push
in
fs
push
ja
addb
stos
push
icebp
int
pop
add
fcoms
movsb
push
dec
repz
ljmp
push
sub
cld
jo
xchg
adc
inc
cmp
xchg
mov
xor
jecxz
or
cld
cmpsl
pop
push
jno
in
mov
mov
cld
repnz
daa
lcall
push
sarb
clc
jb
adc
or
popa
mov
xchg
fsubs
sub
fidivrl
sbb
mov
push
int
and
xor
and
pop
pop
xchg
xchg
push
out
sarb
jmp
add
daa
aam
test
or
cmpsb
int
imul
xor
outsl
pop
jg
adc
popa
push
or
js
sub
in
and
pop
in
lcall
int3
ret
cmp
mov
popf
fwait
add
jo
fwait
lock
jmp
jmp
int
inc
sbb
pop
push
dec
sbb
add
stos
and
leave
cmp
lahf
mov
ja
mov
rorl
jmp
xchg
xor
inc
pop
imul
lcall
xchg
fcmovbe
mov
mov
pop
xchg
lcall
jmp
popf
iret
arpl
js
cmp
repnz
movhps
loope
xchg
adc
mov
dec
xchg
cs
mov
and
xchg
pop
xor
jae
enter
mov
push
stc
shlb
out
mov
popf
jb
inc
mov
jmp
or
leave
sbb
adc
stos
aad
scas
mov
mov
repz
or
mov
int
pop
lea
mov
mov
lods
lcall
ja
fninit
incl
inc
add
insl
push
sbb
jnp
adc
lret
inc
mov
adc
aad
sbb
das
sbb
test
shl
xor
sbb
fdivrp
inc
flds
mov
pop
fidivl
jno
add
sbb
adc
dec
xchg
or
xchg
cltd
or
cmp
sub
icebp
mov
sub
cmpsl
pop
push
icebp
fsts
scas
inc
xchg
cli
sti
and
jmp
and
adc
aas
inc
mov
stc
mov
xor
jp
cmpsb
mov
cmp
int
mov
pop
fisubs
cmp
std
jb
xchg
xor
xor
in
push
int
pop
out
mov
sbb
push
je
inc
roll
test
dec
inc
dec
or
dec
clc
sub
pop
mov
pop
mov
call
hlt
mov
ret
int
inc
mov
or
stos
aad
mov
and
fadd
sbb
fildll
sahf
dec
inc
lahf
push
sub
mov
jnp
pop
cld
test
in
jno
addb
ret
add
nop
xchg
or
enter
outsb
add
mov
test
xchg
cmp
bound
jl
pusha
test
xchg
fwait
jbe
cs
mov
icebp
jmp
cld
mov
loop
in
xor
add
ror
push
xchg
sub
push
movsl
ret
inc
mov
lods
repz
xlat
pop
repnz
xor
test
inc
and
lret
lods
ja
mov
movsb
out
push
ljmp
mov
shr
rcrb
sub
lret
test
pop
iret
ret
shl
mov
or
or
or
stos
flds
xorl
shll
push
xor
test
jne
mov
cltd
or
hlt
fisttpl
lret
scas
in
cmp
xchg
test
dec
retw
adc
pop
icebp
insl
push
mov
adc
ja
lds
lcall
ret
inc
sbb
scas
adc
js
sub
inc
fwait
add
push
add
push
mov
jbe
rcll
jo
mov
fmul
and
xor
imul
push
test
dec
push
mov
sbb
dec
gs
lahf
adc
or
lret
out
adc
mov
rclb
and
pushf
sbb
mov
insb
nop
mov
popf
repz
pop
dec
add
int
pop
lods
inc
mov
ljmp
xlat
jae
enter
lock
mov
out
inc
loopne
sbb
add
insl
movsl
ret
fs
push
lock
into
sub
inc
lods
push
and
test
movsb
leave
test
cld
mov
pop
jmp
icebp
repz
ljmp
jno
inc
push
sub
jnp
xor
les
lds
sarb
andl
inc
pop
mov
push
xchg
scas
dec
cwtl
jp
scas
jg
leave
in
mov
test
cld
repnz
das
lea
xor
fiadds
pop
xchg
aam
jns
cwtl
and
aad
shll
sbb
imul
stos
out
aad
pop
scas
sarb
cmpsb
sti
or
pop
mov
and
test
inc
mov
cmpb
fcmovne
mov
xor
lret
repz
inc
sarb
in
mov
xor
jmp
mov
add
add
jmp
rcr
inc
or
ret
inc
mov
jp
pusha
fwait
cwtl
push
addr16
jb
mov
lret
ret
dec
subb
xor
pop
fucom
repz
xchg
call
or
stos
or
in
xor
rcrl
lahf
iret
jmp
shl
adc
ret
into
xor
shl
mov
leave
loop
out
rclb
andl
roll
mov
lret
movsl
jp
sbb
insb
mov
pop
scas
testb
call
xlat
lret
cmp
leave
cltd
je
or
or
stos
sub
aad
add
scas
lret
gs
xor
les
inc
sahf
shrl
cmpsb
iret
sbb
jmp
xchg
ds
mov
mov
sbb
and
mov
mov
dec
popf
sti
push
cwtl
lret
aas
mov
ss
aad
dec
cld
mov
sti
stc
push
cld
sub
lahf
push
lock
xor
fucom
cli
test
mov
aaa
ljmp
push
sbb
ret
sub
jge
int
ficoml
pop
xchg
stos
adc
fwait
lods
adc
and
movb
push
sbb
bound
enter
cwtl
icebp
cmp
jb
adc
addl
add
mov
and
mov
imul
mov
mov
xchg
insl
cmovae
xchg
xchg
inc
cmp
call
inc
jecxz
insb
aaa
and
xchg
ret
mov
sbb
ljmp
ss
daa
test
xor
inc
les
lds
movsl
sbb
iret
addl
or
pop
push
hlt
mov
push
lret
lret
addr16
nop
jg
adc
ret
insl
pop
insb
test
jb
mov
ror
push
add
sti
cmpsb
xchg
out
jae
push
clc
mov
iret
pop
vphaddbd
mov
inc
pop
xchg
lret
mov
sub
lcall
pop
xor
lds
push
pushf
jae
sbb
pop
pushf
jle
scas
cmc
and
xor
adc
add
adc
dec
mov
nop
sub
mov
xchg
mov
fisubl
mov
cmpsl
ret
dec
int3
gs
std
mov
mov
stc
xor
and
and
lcall
inc
pop
push
xchg
sbb
addr16
jnp
adc
ss
loopne
jno
cwtl
cmc
lds
jp
mov
lar
scas
lcall
push
stos
inc
aas
loop
cmpsb
add
push
push
mov
xor
scas
dec
in
ficoml
pushl
dec
stos
push
cmc
test
out
add
popa
xchg
lret
add
or
or
add
push
rorl
scas
fistl
aas
jns
leave
inc
stos
shl
adc
inc
ljmp
lock
jg
mov
mov
xchg
addb
add
pop
movsb
mov
mov
sti
and
xchg
imul
mov
jle
shrl
vpshuflw
add
mov
jb
xchg
enter
addb
orl
cmpsl
push
push
arpl
inc
orb
push
xchg
sbb
addr16
bound
cmpsb
mov
lcall
add
in
icebp
jno
xchg
sbb
pop
bound
inc
sbb
inc
sub
rcrl
imul
shll
stc
xor
mov
test
pop
adc
xchg
shlb
arpl
arpl
out
icebp
dec
push
test
test
adc
jae
dec
push
or
adc
xor
sub
adc
cmp
lea
sbb
cmp
or
pop
mov
in
ret
push
xchg
out
lret
and
or
cmpl
mov
sbb
ds
enter
push
mov
xchg
jle
mov
push
xor
rcrb
inc
jge
imul
popf
xchg
pop
xchg
inc
test
xlat
pop
jg
call
jg
clc
imul
mov
sub
stos
daa
inc
inc
hlt
mov
lret
test
mov
fisubl
movsl
jmp
cmp
ja,pt
fildl
div
cwtl
in
inc
rcrl
inc
fistpll
xchg
jecxz
adc
lret
inc
sbb
arpl
out
dec
inc
sbb
ret
push
xor
rorl
or
cmp
sub
cmp
addr16
mov
fucomp
fs
mov
mov
pop
fcoms
sbb
fldcw
jl
sbb
add
insl
mov
adc
ficoml
cs
nop
sub
test
fadd
js
sub
enter
push
ja
sbb
and
add
xchg
andl
adc
cwtl
inc
mov
adc
test
inc
inc
ret
push
fsubs
xchg
jmp
inc
inc
mov
xchg
cltd
loop
add
jno
fwait
push
adc
addl
fsubrl
and
mov
mov
xor
mov
xlat
pop
adc
add
stos
arpl
jo
push
sbb
imul
lds
ds
mov
int
hlt
movsl
ret
inc
sbb
or
add
mov
sbb
into
cmpsl
mov
rcrb
dec
pushf
dec
xor
rorl
dec
add
mov
jnp
fisubrl
sti
mov
pop
sbb
fnstenv
lods
into
arpl
push
sbb
lret
jg
test
sbb
push
push
mov
xchg
fbstp
sub
enter
enter
jns
ret
xor
sbb
jmp
or
or
jge
andl
shl
cmp
rcr
ficoms
dec
shlb
adc
cmpsb
mov
sub
mov
cmp
lock
push
sbb
data16
push
adc
pop
inc
inc
mov
enter
lret
adc
iret
test
cmp
out
mov
add
adc
xchg
out
mov
jp
cmp
jnp
test
pop
mov
lds
and
mov
pop
mov
aad
inc
add
dec
and
jno
movsb
or
test
mov
sbb
dec
push
dec
xchg
in
inc
scas
fldt
scas
xor
shll
lock
sbb
in
ljmp
or
into
or
pop
xchg
jae
push
inc
sbb
mov
xor
pop
mov
jo
popa
or
push
mov
nop
out
sbb
add
ret
pop
cld
int
mov
push
mov
pop
pop
jl
cmp
inc
and
inc
lock
ja
ret
sahf
cmpsb
push
adc
lcall
pop
add
je
jg
test
dec
mov
repz
lods
xchg
stos
shrl
stc
int
pop
inc
inc
fnstcw
xlat
fidivrl
aas
in
and
cmc
jmp
mov
add
add
out
aad
inc
pop
adc
ljmp
call
ss
dec
sbb
sub
jmp
xlat
les
mov
lahf
jnp
cmc
mov
ljmp
push
or
fwait
shlb
les
dec
lret
or
movsl
add
jbe
cmp
iret
and
jno
sarl
jnp
movb
jmp
popf
fiadds
and
test
mov
cmc
cmp
add
fisubrl
mov
mov
dec
jmp
sub
shlb
pop
xchg
imul
and
mov
out
out
cmp
cmpsl
fistl
push
test
pop
cwtl
sahf
sbb
inc
hlt
xor
or
fbstp
sub
or
mov
sahf
dec
mov
ljmp
mov
popf
cmpl
mov
clc
add
adc
test
mov
mov
ret
xor
imul
aas
out
add
mov
pop
mov
fisttps
lret
arpl
jns
iret
mov
test
dec
push
push
jl
sbb
std
or
mov
sub
inc
mov
pop
xchg
jb
mov
popa
mov
push
sbb
int3
scas
mull
jl
xchg
pop
push
cwtl
add
mov
sbb
adc
or
xor
test
sbb
mov
pop
test
insl
xchg
imul
cmp
call
and
push
adc
mov
cwtl
pop
or
mov
push
test
dec
outsl
aad
mov
adc
repz
punpckhwd
jmp
mov
das
lret
jecxz
xor
rcrb
xchg
sbb
sub
imulb
aaa
cltd
xor
out
sbb
subb
lahf
sbb
cli
mov
pop
fistl
mov
push
mov
mov
fldt
jae
add
test
sbb
jae
leave
mov
or
lods
fcoms
mov
mov
sbb
fistl
xchg
jbe
out
arpl
cmp
jg
leave
in
mov
push
pushf
repnz
mov
push
andb
clc
mov
adc
or
dec
xor
xor
dec
icebp
bound
mov
and
test
sbb
inc
cli
out
cmp
cmpsl
fcmovne
pop
jne
jecxz
mov
inc
mov
call
adc
cltd
sahf
gs
mov
sahf
dec
mov
fstpt
loopne
stos
mov
push
lahf
lock
hlt
jb
es
outsl
xor
rcrl
mov
testb
xchg
mov
enter
aad
les
sbb
test
push
in
int
inc
insl
ljmp
lret
test
push
cmp
and
or
shrb
mov
lods
jle
mov
loopne
sbb
inc
pop
cs
popf
leave
lret
adc
ret
outsb
mov
out
push
mov
addl
push
cwtl
cmpl
addr16
andb
xor
sti
sub
xchg
iret
pop
call
sti
xchg
pop
xor
int
enter
test
fimuls
addl
lret
inc
sub
loope,pn
aad
sbb
sbb
push
pop
or
and
inc
imul
mov
fistpll
in
lret
fwait
pop
adc
jecxz
lods
call
lds
or
sbb
and
gs
sub
adc
mov
jb
cli
inc
aad
subl
push
mov
xchg
lcall
sbb
push
inc
mov
sbb
xchg
imul
cmpsl
fistpl
pop
mov
and
push
adcl
ret
loop
adc
xor
sbb
jno
clc
jg
clc
or
dec
xor
rol
jge
xchg
sub
scas
xlat
insb
jbe
push
inc
fstl
mov
call
cmpsl
push
lds
enter
inc
sbb
mov
je
sub
pop
inc
sub
loope,pn
push
fbstp
dec
loopne
jmp
ret
rcrl
pop
hlt
test
mov
ret
lcall
cmp
pop
sub
stc
xchg
sarl
int3
addr16
sub
cwtl
xlat
div
inc
stos
push
lods
push
daa
and
cmp
mov
fucomp
jae
jge
fcompl
test
dec
test
fsts
pop
push
add
xchg
stos
lds
pushf
stos
adc
or
or
mov
mov
test
ficoms
jp
das
push
jmp
or
shrl
cmp
mov
out
std
jmp
test
xchg
scas
sbbb
dec
and
xchg
imul
out
mov
movsb
inc
sbb
or
ja
jae
mov
enter
enter
mov
popl
mov
sub
sub
inc
das
mov
cmc
xchg
bound
mov
in
mov
lods
stc
fnsave
clc
sti
pop
pop
popl
inc
inc
jnp
mov
mov
cmp
shll
inc
add
jge
leave
dec
inc
mov
insl
pushf
dec
and
rorl
dec
add
imul
lods
lds
pop
movsb
sarl
cmpsb
fs
fistpll
stos
ljmp
pushf
xor
xchg
mov
mov
cwtl
stos
sbb
cli
movsl
xor
pop
addb
enter
xchg
lds
in
jbe
jecxz
fwait
add
jno
sub
int
ficoms
inc
shlb
jl
arpl
rolb
jne
test
loope
mov
fcomps
cmpsb
xchg
rcll
and
fbld
mov
fld1
jb
sti
dec
ss
enter
mov
fnstcw
mov
fwait
mov
ss
daa
stc
arpl
aam
mov
repz
repnz
ret
arpl
sub
pop
mov
imul
enter
ret
sarl
imul
mov
mov
jno
dec
and
push
hlt
mov
fidivrs
inc
push
xchg
sub
push
std
aaa
repnz
dec
push
dec
subl
fs
mov
or
xchg
sbb
or
xchg
push
rcrl
pop
inc
adc
ja
lcall
test
lods
jno
aad
mov
out
aad
cli
sti
fistpl
inc
insb
sbb
mov
add
and
cmp
add
popa
add
mov
xor
xorb
sub
add
sbb
and
fldlg2
jb
fwait
outsl
movnti
mov
cwtl
cltd
mov
int
mov
sbb
sub
sub
mov
xor
adc
shlb
pop
push
mov
push
jmp
dec
stos
aam
sti
pop
mov
jno
or
repz
jecxz
popf
sbb
pop
add
ror
and
test
lahf
mov
negb
mov
pushf
xchg
rclb
mov
pop
mov
sbb
lods
dec
fistps
dec
sbb
rol
ja
xchg
or
pop
sub
mov
cli
test
push
inc
sbb
add
mov
xchg
lds
and
lahf
ficoms
mov
sub
testb
add
arpl
rolb
sti
rclb
dec
shlb
rclb
imul
cmp
push
sub
movsb
jnp
enter
out
scas
ret
mov
add
addl
adc
inc
dec
mov
int
inc
cmp
sub
mov
mov
cmc
fistl
imul
iret
inc
xlat
lds
aas
in
divl
inc
test
add
rcrl
hlt
mov
push
cmpsb
mov
dec
rorb
xchg
aas
dec
sbb
and
lds
pop
movsb
inc
and
int3
jno
jno
outsl
jge
arpl
or
les
jae
jne
stos
lds
stos
fistl
fisubl
push
jbe
lea
mov
and
test
jecxz
xchg
fwait
iret
data16
int3
scas
fnstcw
loope
into
add
leave
repnz
pop
add
mov
test
aam
dec
mov
dec
aam
stc
fadds
adc
movsb
pop
or
daa
adc
inc
lds
jp
and
in
xor
mov
cwtl
ds
mov
sub
adc
sub
pop
fiadds
shll
ljmp
negl
popl
shrl
jae
xlat
lds
jp
iret
sbb
in
in
add
add
add
nop
lock
nop
or
mov
push
sbb
shrb
sbb
out
mov
test
inc
mov
ffree
jmp
aaa
arpl
sub
cld
jo
xchg
adc
imul
push
mov
fcoml
mov
fstl
pop
cmpsl
inc
jl
lea
js
jge
xchg
fcoml
repz
mov
cmp
cmp
add
sub
mov
jno
mov
pop
nop
imul
popf
mov
and
clc
shrb
inc
cltd
out
cmp
loopne
je
or
pushf
and
adc
bound
ret
gs
cmp
cmc
mov
stos
std
pop
mov
pop
pop
loope
pop
mov
div
sti
mov
jecxz
add
mov
push
pop
pushf
mov
mov
adc
repnz
mov
pushf
inc
mov
dec
pushf
fs
jb
mov
dec
jmp
sub
scas
pop
popf
shll
mov
jo
mov
insl
hlt
mov
adc
dec
push
sub
dec
movsl
sbb
xchg
dec
mov
mov
in
jle
mov
and
mov
jmp
popf
fbld
jmp
mov
xlat
int
jo
shlb
pop
jb
add
add
add
clc
inc
test
dec
shll
push
xchg
jmp
inc
mov
pop
cmpsb
push
adc
sub
gs
dec
mov
jb
shll
inc
imul
inc
push
xchg
dec
out
adc
mov
ljmp
fdivs
movsl
cmp
lods
pop
fistps
mov
lods
stc
fstl
inc
cmpl
rcll
xor
or
movl
or
ret
inc
mov
push
divb
sbb
fisttpl
stos
cmp
lret
jnp
ja
sahf
popf
les
mov
in
popa
cmp
ss
inc
mov
sub
inc
xchg
jge
stos
inc
sbb
fstps
xchg
jb
mov
mov
shrl
mov
enter
fstp
adc
out
jbe
inc
shlb
pop
xchg
jae
and
mov
test
in
test
xchg
and
test
push
mov
ficoms
clc
and
aad
pop
cmpsb
sarb
fisubl
jno
inc
scas
ret
cmp
jecxz
icebp
or
jecxz
leave
cwtl
pop
adc
fcomps
mov
dec
mov
inc
cltd
jbe
mov
mov
pop
mov
pop
jg
mov
add
ljmp
push
int3
cwtl
adc
popf
add
iret
cmp
ror
add
fstpl
fstps
jno
loope
popa
cmp
sbb
mov
mov
fistps
jle
push
pop
jl
movsb
or
inc
push
sbb
ret
adc
sub
lret
sub
gs
mov
in
inc
dec
ficomps
mov
mov
mov
test
in
xchg
push
je
adc
cmp
mov
push
shll
pushl
fidivs
cmp
addb
xor
add
lea
add
jne
adc
jnp
enter
and
jns
inc
in
or
sbbb
push
jp
dec
mov
inc
xchg
pop
stos
push
inc
mov
cmc
mov
add
mov
push
cld
fildl
les
pop
push
dec
subl
dec
lahf
pop
bound
hlt
leave
popf
add
pop
enter
or
ret
dec
cmp
fsts
arpl
jge
xlat
stos
les
sbb
daa
adc
test
mov
jae
fisttpl
lret
rol
ja
xchg
test
add
push
pop
pop
ret
adc
cmpsl
push
push
push
dec
mov
inc
pop
pushf
sub
sbb
push
fs
mov
xor
or
jge
dec
mov
mov
add
call
vpshld
mov
fnstenv
fdivrs
icebp
iret
xorb
xchg
test
xor
and
clc
jb
fwait
inc
push
dec
aad
cmpl
or
and
xchg
cltd
dec
scas
jne
dec
movsb
xchg
xchg
jg
cmc
xor
mov
repz
jbe
mov
test
inc
sahf
cmp
pop
push
dec
cmpl
sbb
in
in
add
scas
push
cmp
fscale
cld
jg
pop
je
testb
iret
sbb
rcrb
sbb
scas
test
jnp
mov
fisttpll
dec
cmp
lahf
fucom
leave
inc
arpl
sub
test
lods
pusha
mov
or
adc
cmp
mov
lret
cmp
mov
jecxz
fstl
xchg
je
ret
sub
or
adc
out
insb
inc
xlat
and
pop
mov
cmp
repnz
fwait
push
dec
mov
xor
rcl
popl
ret
into
push
push
sub
dec
mov
adc
enter
int
inc
add
or
or
mov
enter
jne
jge
jge
mov
push
rcrb
mov
push
mov
pop
in
ljmp
pop
mov
repz
sti
pop
pop
iret
xchg
insb
repz
ret
sub
pop
hlt
mov
cmp
dec
lds
or
pop
nop
icebp
mov
inc
push
inc
push
mov
pop
test
mov
mov
scas
rcl
xchg
mov
movb
jmp
test
xchg
into
push
scas
jne
inc
aam
mov
pop
clc
dec
les
jno
aad
xor
add
inc
mov
lea
leave
xchg
mov
fwait
out
js
stc
mov
lods
movsl
add
mov
dec
mov
jb
bound
fwait
xor
push
push
sub
das
push
stos
xchg
out
sub
pop
fsubs
lock
or
push
mov
mov
lcall
dec
mov
rorb
iret
mov
jne
mov
ret
arpl
int3
inc
pop
lods
dec
in
cmp
ds
dec
rcl
pop
mov
jecxz
movl
add
sarb
jle
gs
or
mov
negb
pop
dec
sbb
and
inc
push
sub
les
sbb
ss
fcmovnb
ja
jge
rol
xchg
dec
pushf
mov
xchg
fcoms
xchg
sbb
aaa
cmp
inc
xchg
dec
aad
xchg
cli
or
and
adc
inc
pushf
shl
pusha
add
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
aam
mov
add
add
js
in
xchg
mov
cld
push
aam
ret
inc
insl
fwait
inc
or
inc
mov
push
add
fsubl
inc
fsubrp
pop
xor
push
and
cmp
push
adc
mov
cmp
xchg
cmp
or
filds
inc
dec
pop
lods
dec
sbb
in
mov
sbb
mov
jae
mov
adc
or
add
jno
mov
call
lds
nop
outsb
test
stc
pop
es
imul
jge
rcrl
data16
aaa
lds
sbb
dec
mov
lds
lret
add
ret
adc
sbbb
sbb
gs
loop
adc
test
adc
in
test
mov
icebp
stc
test
jb
adc
inc
sarb
clc
jb
add
icebp
in
dec
test
ljmp
jmp
mov
pop
fisubs
testb
fadd
sbb
xchg
push
jle
call
push
je
test
xchg
pop
xchg
test
cwtl
movsb
xchg
xchg
jne
adc
push
pop
pop
mov
fbld
xchg
ret
cmp
sbb
add
in
aas
jl
loope
testl
or
je
lock
js
stc
adc
mov
sbb
inc
and
leave
iret
inc
sbb
test
lahf
stos
and
lds
jge
ret
in
pop
cmp
loop
jge
push
pop
leave
dec
arpl
mov
jo
hlt
and
cli
test
lock
jl
arpl
cmp
imul
add
inc
mov
sahf
adc
pop
je
lods
jmp
out
mov
mov
adc
push
mov
fdivs
dec
lcall
inc
cwtl
fnstenv
mov
or
mov
dec
int
stos
cmp
std
mov
jle
clc
enter
lcall
pop
es
jl
sub
movsb
std
je
mov
lea
mov
add
aaa
ljmp
loopne,pt
iret
jl
in
std
jno
out
in
or
xchg
sbbb
mov
shlb
sbb
ret
cwtl
ret
insb
mov
lret
inc
in
lods
gs
rcll
roll
inc
inc
sbb
inc
pop
icebp
add
xor
pop
jae
lret
adc
mov
fwait
xor
xchg
int
xor
jb
mov
pop
test
or
sbb
sahf
fistps
bnd
enter
test
mov
push
cwtl
add
mov
cwtl
or
and
push
repnz
dec
and
sub
pop
pop
xchg
mov
mov
ret
test
movl
push
adc
xchg
js
mov
dec
push
and
sub
fsubr
mov
sbb
push
cmpsb
jl
mov
shll
mov
ret
loopne
mov
sbb
mov
adc
clc
mov
mov
add
popa
sahf
rolb
jl
clc
sub
aam
xor
ret
xchg
pop
xor
xor
in
pop
stos
push
test
push
das
ss
jns
mov
cmp
xchg
jp
cltd
dec
test
jmp
xor
test
dec
or
jnp
jbe
movsb
stos
xchg
stos
inc
lds
adc
pop
mov
into
xchg
mov
scas
mov
mov
pop
sti
and
sbb
or
sub
rcr
xor
dec
shlb
adc
xchg
and
mov
sbb
pop
cltd
divl
nop
lea
mov
add
adc
mov
mov
and
out
ficoms
js
mov
stos
shll
mov
dec
call
fwait
cmp
clc
sti
dec
loop
mov
das
jnp
jae
pop
mov
inc
push
hlt
mov
push
and
iret
cmpsl
ret
cmpsb
mov
sub
mov
add
inc
and
stos
lds
pop
movsb
out
fwait
lods
mov
test
mov
lahf
jae
adcb
cs
and
stos
jne
inc
xchg
roll
xchg
imul
sbb
aad
xor
push
mov
or
and
repnz
leave
loop
dec
scas
arpl
pop
push
xchg
jmp
shrb
add
jb
and
inc
les
popf
mov
mov
leave
or
inc
inc
pusha
push
insl
fwait
insl
or
cs
fsubrl
fnsave
and
pop
ret
xchg
int3
sub
mov
jne
dec
movsb
push
mov
mov
pop
pop
mov
shr
stc
int
lahf
lret
stc
jmp
lcall
mov
adc
cmp
test
lock
js
or
cmp
cmpsl
mov
test
adc
xchg
push
cmp
and
pop
stos
fsubr
scas
sub
sbb
test
mov
pop
mov
imul
scas
cmp
imul
mov
cwtl
data16
scas
xchg
ficoml
lcall
and
dec
mov
movb
ret
fstl
pop
cmpsl
inc
je
lcall
mov
notb
fdiv
stc
scas
xchg
adc
in
outsb
inc
in
and
or
inc
test
xchg
sub
or
push
fsubs
adc
ret
push
xor
pop
jb
pop
fsubl
xor
das
lods
pop
sub
es
sub
loop
out
mov
cwtl
sahf
inc
mov
loopne
mov
test
xchg
lcall
mov
call
ffreep
loopne
lock
imul
in
sub
out
inc
adc
sbb
xchg
and
adc
inc
mov
push
or
test
lods
sub
sbbl
test
stos
jae
add
lahf
jae
loop
imul
adc
test
sbb
roll
stos
movsl
adc
outsl
lret
inc
mov
xlat
call
jbe
mov
imul
add
enter
pushl
popa
mov
call
jle
inc
sbb
test
dec
pop
mov
dec
andl
aad
push
xchg
and
es
xor
mov
imul
xlat
push
out
and
mov
jmp
adc
inc
sub
cwtl
sahf
dec
daa
int3
cs
pop
popa
mov
shlb
call
shr
data16
das
pop
mov
sub
or
jns
cmp
jnp
mov
pop
add
jl
mov
inc
inc
pop
adc
xchg
mov
das
cmp
cltd
lcall
sahf
sbb
test
fldcw
insl
ljmp
fstl
xor
push
test
ret
loop
push
sbb
stos
pop
mov
add
or
jl
fisttpll
jbe
cmp
sbb
add
outsb
mov
cmc
stc
sub
jb
adc
addl
sub
mov
lods
addb
adc
test
sub
movsl
cli
xor
push
stos
lds
cmpsl
ret
inc
imul
adc
pop
sbb
bound
aam
mov
inc
stos
popf
jp
push
and
ja
push
test
out
sahf
dec
mov
dec
pop
test
ss
aam
sti
pop
xchg
mov
loopne
jae
mov
jns
pop
pop
jge
shr
aas
mov
shr
enter
or
movsl
ret
inc
mov
mov
xor
fisttpll
fiaddl
mov
lds
pop
mov
jae
lret
fldt
dec
mov
idivb
or
imul
dec
push
cmp
adc
sbb
mov
add
in
or
cmp
jle
scas
and
jmp
xchg
mov
dec
test
add
jge
xor
or
aas
stc
xor
lcall
sahf
mov
and
cltd
xchg
cmpsl
ret
sbb
mov
popl
xor
and
pop
sub
or
fldenv
test
jb,pt
das
cwtl
js
sahf
add
pop
push
mov
call
inc
xchg
sbb
in
pushl
sub
jmp
adc
push
hlt
mov
push
sub
cwtl
pop
adc
imul
mov
psubd
lea
test
mov
scas
push
popf
fnstenv
aaa
ljmp
push
cmp
ret
xchg
dec
imul
cmpsl
push
xchg
stos
std
lock
je
jnp
push
fsubl
lahf
int3
imul
repz
loop
inc
sarb
andl
xchg
dec
mov
pop
lds
inc
sub
fcoml
test
push
test
cmc
lret
movsl
and
mov
ss
imul
call
dec
sub
bound
sti
jae
enter
hlt
je
nop
inc
mov
mov
mov
inc
sub
xor
mov
call
pop
movsl
or
ret
pop
lret
aas
pop
cmpb
ret
inc
mov
movnti
gs
mov
xor
or
xchg
push
hlt
mov
fldt
nop
xlat
dec
sub
sub
lods
aad
sbb
cmp
cmp
ficomps
cmpsl
xchg
mov
mov
push
sbb
dec
mov
movsb
sub
mov
mov
mov
mov
jmp
sbb
jp
scas
jg
jnp
js
jge
out
push
stc
and
les
adc
jp
rclb
dec
aam
stc
repnz
xor
imul
adc
mov
jo
jge
and
test
xlat
push
stc
xorl
cltd
aam
dec
xorl
fcompl
jns
mov
xor
ljmp
test
sbb
loop
hlt
mov
repz
sti
pop
pop
push
or
jns
cwtl
rcrb
add
sub
movsb
pusha
or
mov
subb
lret
movsl
jle
sbb
in
cmpsl
shr
push
and
shlb
movsb
pusha
adc
scas
mov
lret
mov
shr
cmp
or
cld
nop
pop
test
xchg
sub
push
mov
mov
sub
inc
pushf
shr
lahf
lcall
jle
sub
int
xor
add
lret
mov
jle
inc
sbb
mov
push
andl
addb
sbb
push
mov
mov
fdivrl
mov
xchg
dec
cmp
bound
adc
enter
push
lret
mov
shr
out
mov
jg
sub
mov
xor
mov
repz
push
hlt
mov
in
fisttps
cwtl
out
cmp
pop
sub
ret
inc
sbb
mov
ret
test
dec
sbb
xlat
test
in
cmpsl
dec
sbb
mov
scas
push
and
clc
xor
mov
jo
aad
add
pop
ret
out
push
sbb
lret
or
stos
sahf
pop
stos
or
jmp
jae
mov
sub
inc
stos
mov
fldenv
bnd
enter
jmp
jmp
sbb
xor
mov
shlb
pop
les
push
xchg
mov
and
movsl
cli
mov
push
jb
lods
es
bound
xchg
out
cmp
and
je
mov
mov
shr
mov
jg
mov
jecxz
pop
gs
arpl
int
mov
in
mov
jae
mov
jecxz
xor
rcrb
lock
pop
fsubrs
or
out
jno
dec
call
or
xor
lods
adc
pop
pop
movsb
inc
adc
scas
mov
testl
add
lods
fld1
push
pusha
test
inc
or
jge
dec
movsl
fisubl
dec
mov
rcrl
les
jns
inc
inc
loope
mov
in
mov
leave
inc
sti
and
adc
inc
mov
clc
mov
cmpsb
call
les
fwait
xor
data16
mov
test
in
xchg
imul
pop
fstl
pop
mov
cmpsb
test
push
lahf
out
cmovl
popf
jp
mov
dec
adc
jp
dec
mov
push
sub
movsb
mov
enter
dec
lret
sbb
push
cmpsb
cwtl
std
mov
shll
mov
ret
loopne
aas
mov
clc
sti
mov
jns
push
rcll
fnsave
ja
lds
and
adc
lds
fs
dec
xor
movsl
leave
sbb
and
mov
mov
pop
lret
pop
mov
rorl
sbb
or
inc
or
nop
std
jb
or
jge
adc
push
cltd
lods
clc
lahf
cmpsl
push
xchg
jmp
scas
inc
fwait
sbb
jb
adc
into
inc
cmp
fidivs
mov
xor
ret
push
mov
pop
fadds
pop
fisubl
cmp
popf
mov
jl
sub
inc
jp,pt
inc
mov
incb
fsubrs
in
jge
mov
mov
loopne
or
pop
dec
xchg
test
into
cwtl
cmp
or
add
jo,pn
stc
jne
lock
cmp
or
cltd
mov
ret
daa
test
push
dec
push
hlt
mov
sbb
seto
rcrl
mov
dec
push
les
dec
sub
mov
mov
out
push
pop
in
jmp
adc
inc
dec
addr16
icebp
lcall
dec
inc
cmp
adc
jne
mov
fisttpll
sbb
dec
push
fucomi
loope
leave
jg
mov
adc
sbb
mov
add
dec
xchg
ret
inc
test
dec
loope
add
imul
push
inc
mov
cmpsb
out
mov
ds
jb
mov
or
mov
shr
cmpsb
fldl
cmpsb
cmp
gs
xor
xor
pop
stos
les
push
fld
mov
mov
in
fnstsw
loope
insl
mov
adc
pop
cmp
or
sbb
jg
adc
dec
xor
movsl
dec
pop
lahf
and
or
sahf
jp
jmp
jae
shlb
sub
aaa
or
nop
sbb
stc
int3
cwtl
pop
addb
stos
cmc
jo
aam
out
xor
aam
mov
adc
movsl
dec
mov
sub
ret
lret
push
js
cmp
xor
repz
pop
add
push
inc
sbb
mov
pop
cmp
sbb
aas
stc
xor
imul
mov
pop
sahf
adc
loope
xchg
xchg
outsl
or
aad
sarb
out
enter
adc
daa
loopne
ljmp
adc
enter
mov
add
gs
ss
mov
pop
stos
xlat
out
cltd
arpl
cmp
ss
jmp
adc
push
iret
rorl
rcrb
xor
leave
mov
adc
lret
inc
orb
adc
dec
xor
sarl
les
push
test
push
in
fcmovne
jae
push
clc
stos
outsb
rcr
loopne
and
sbb
adc
add
xchg
lods
outsb
lods
stos
lock
stos
std
ds
or
fwait
pushf
xchg
mov
mov
pop
push
push
enter
pop
pop
xor
adc
inc
mov
add
or
jge
xchg
int
test
inc
xchg
inc
mov
mov
pop
cmpsb
pop
stos
mov
cmpsl
ret
test
xlat
add
and
dec
aam
adc
push
addl
mov
push
or
sbbb
inc
mov
sbb
mov
jns
into
add
int
fwait
addr16
xchg
pusha
pop
push
inc
cmpl
lcall
outsl
jmp
clc
cs
ret
mov
cltd
mov
xchg
adc
aam
enter
inc
and
les
lods
jmp
jae
ficoml
push
rcr
cmp
xchg
fmuls
jae
test
test
or
add
xchg
jbe
mov
jmp
pushf
leave
test
lcall
cld
bnd
mov
mov
addl
or
xchg
test
xchg
cld
int3
cmp
inc
popf
mov
ret
add
popf
push
stos
cmp
imul
cli
inc
bound
sbbb
mov
and
xchg
movsb
xchg
jecxz
adc
ret
pop
mov
aaa
jle
stos
outsl
mov
rclb
mov
sbb
mov
ja
fnsetpm(287
lock
out
mov
mov
rcrl
add
or
imul
or
ret
inc
mov
pmuludq
icebp
idivb
rcl
std
dec
adc
lds
movsb
mov
test
idivl
jae
fldt
arpl
xor
add
push
cld
push
dec
adc
ficoml
cwtl
cmp
mov
cmp
pushf
ret
mov
inc
sbb
mov
repz
out
xchg
inc
add
mov
adc
loopne
fbld
sbb
mov
adc
lods
push
sub
mov
mov
lcall
pop
fdivrl
aam
xor
dec
add
je
jl
xchg
testl
stos
out
sub
xor
mov
sub
adc
imul
ja
dec
aas
jno
cltd
divl
cmp
jbe
add
pusha
push
repnz
inc
pop
xorl
lahf
ret
popf
xor
cmpsb
aam
pop
mov
je
test
loop
jne
cmp
cmp
lahf
cli
in
xor
xor
test
push
nop
xchg
adc
repz
dec
pop
stos
ja
lret
cmpb
jmp
xchg
sbb
lods
jbe
cmpsl
push
cmpsb
fucomi
cmc
add
fsubrl
push
js
mov
subl
das
sub
ljmp
mov
pop
mov
mov
jae
cwtl
mov
pop
sarb
ret
jb
mov
sti
repz
rcll
inc
add
inc
inc
mov
shrb
jne
int
dec
pop
shrl
loopne
jne
dec
mov
addl
jne
les
adc
es
popa
xlat
lds
ds
mov
les
mov
testb
sbbb
ret
aad
inc
cltd
jo
hlt
mov
sarb
cmpsb
push
stos
mov
aaa
dec
inc
std
xlat
xor
add
push
mov
ffree
jmp
sub
and
xchg
mov
push
cld
imul
pop
cmp
testl
add
pop
cld
add
or
das
ret
jge
dec
xchg
loop
rolb
push
xchg
sbb
jo
loope
int
fnsave
inc
sbb
adc
rcll
rcll
sub
adc
mov
inc
lret
jbe
or
or
xlat
xchg
scas
xor
test
inc
cmp
jg
inc
cmp
cs
jle
shlb
add
jle
pop
xchg
push
mov
repz
ds
movsl
div
or
jnp
cltd
jge
sub
add
rol
sub
push
cmp
and
mov
icebp
mov
movsb
lds
nop
lds
repz
outsl
jno
mov
and
mov
xchg
stc
inc
sbb
fs
push
inc
push
push
sbb
leave
push
outsb
push
inc
sbb
sub
lock
sub
sub
test
adc
lds
jno
adc
fucomi
repnz
aas
jg
or
mov
adc
les
adc
push
cmc
outsl
jns
sub
xchg
sub
dec
enter
aam
inc
insl
sti
inc
popf
and
mov
jnp,pt
fcmovnbe
mov
mov
fistl
ret
cltd
je
push
and
inc
jnp
shrb
mov
out
sub
or
xor
push
repnz
test
mov
pop
fcmovnbe
loopne
jmp
lcall
mov
mov
pop
and
test
repnz
nop
mov
popf
pushf
jle
xchg
lret
movsl
mov
js
stos
mov
inc
mov
test
cmpsb
inc
mov
pop
dec
xchg
dec
and
movb
aad
dec
scas
xchg
test
add
push
cmp
ret
adc
sbb
jecxz
push
jb
lods
cmc
int
add
inc
sbb
out
jns
js
jp
mov
popf
andl
call
add
jb
adc
test
xchg
jns
ficoml
sti
and
dec
cmpsb
push
lods
xlat
push
fsubs
push
out
mov
fwait
lea
xor
mov
cwtl
fnstcw
xchg
enter
ret
push
ficomps
int
imul
gs
xor
cmp
popa
mov
inc
sbb
mov
loopne
inc
sahf
ja
js
cmp
pop
add
sahf
sub
insl
cmpsl
push
xor
lock
shlb
mov
sbb
inc
imul
shll
dec
ficoml
lahf
stos
and
rcrl
mov
xchg
rcrb
xchg
test
int
jno
or
cmp
cs
add
andb
les
scas
or
lea
cwtl
mov
mov
mov
adc
inc
mov
and
xchg
decl
insl
clc
push
sub
pop
cmc
arpl
shrb
sbb
test
jle
loope
loope
dec
out
xchg
test
xchg
sbb
inc
mov
inc
push
dec
bound
jmp
scas
mov
repz
sbbb
mov
jmp
lret
inc
mov
fcoms
pop
ret
mov
lahf
sub
stos
pop
lods
lea
pop
or
in
mov
repz
push
add
lret
jecxz
and
scas
clc
pop
sub
arpl
inc
sbb
push
sbb
sub
lods
jns
dec
and
pop
sbb
test
clc
stos
or
adc
cmpl
jae
pop
in
cmc
fcmovnbe
test
dec
mov
daa
sbb
idivl
dec
xchg
stos
inc
sbb
rol
fisttpl
pushf
jbe
lods
mov
aad
in
scas
movl
push
xchg
loop
mov
clc
js
or
add
mov
push
cmc
outsl
jns
stos
push
sbb
dec
and
sbb
es
push
gs
insl
scas
add
jo
xor
call
je
jmp
xchg
inc
pop
xchg
dec
into
mov
cwtl
sahf
inc
pop
int3
scas
mov
cmc
mov
mov
std
pop
test
add
ret
popa
mov
cmp
mov
sar
sti
mov
jecxz
add
lret
inc
add
add
pop
shll
lret
inc
jecxz
insb
push
adc
add
mov
in
stos
push
inc
repz
push
mov
and
fildll
bound
lods
mov
mov
stc
mov
ljmp
nop
pop
nop
xchg
shl
stos
lds
mov
sub
push
jnp
push
xor
scas
fildl
mov
scas
aam
sbb
jo
inc
jo
pop
sub
andl
cwtl
in
dec
shlb
xchg
roll
mov
pop
xchg
adc
fcmovnu
lock
sub
test
test
fld
call
sti
adc
shl
xor
xchg
inc
inc
mov
enter
enter
inc
jle
movsb
xchg
out
push
nop
or
inc
mov
lret
incl
jo
xchg
dec
out
loopne
iret
loopne
cmp
jae
mov
arpl
andl
fxch
inc
call
or
mov
mulb
movsl
mov
mov
push
adc
mov
sbb
test
pop
jmp
ja
vfrczsd
ffree
fnstenv
popf
lret
fcomip
and
sbb
mov
and
push
test
sbb
sub
add
add
push
cltd
lods
and
aad
mov
mov
js
enter
sbb
jo
inc
or
add
add
sbb
mov
lea
xor
mov
iret
les
sub
cmpsb
addr16
dec
loope
mov
popf
in
push
lea
mov
jmp
nop
bound
push
mov
sbb
mov
pop
mov
daa
and
mov
push
pop
test
adc
pop
add
aas
xchg
jg
pop
lods
push
pop
repz
aam
sti
pop
pop
dec
sub
jo
std
iret
inc
in
adc
fmul
inc
sbb
test
or
mov
fsubrl
nop
push
hlt
mov
fisubrs
aad
dec
mov
and
lds
test
mov
pop
mov
ljmp
xchg
sahf
lds
xchg
arpl
mov
ja
or
sahf
pop
stos
ja
lret
inc
mov
fcoml
sbb
jp
lret
jnp
push
lret
stos
jbe
lahf
rclb
mov
fists
repz
mov
mov
nop
dec
test
add
aaa
rclb
roll
mov
fwait
cmpsb
addr16
fadd
push
fisubl
and
call
xlat
push
jle
out
and
es
fsub
jmp
or
int
imul
jmp
mov
test
cmc
in
test
stos
shl
mov
mov
sbb
int
inc
mov
call
hlt
je
ds
push
push
repnz
mov
adc
xchg
and
cmp
rcrl
and
testl
leave
test
fnstsw
cltd
sub
fcmovne
mov
xchg
fsub
sbb
cmp
add
xchg
add
outsb
mov
add
sub
jmp
push
inc
jmp
popf
ficoms
lcall
cmc
cmp
jge
andl
xchg
adc
mov
and
push
cmp
dec
add
jmp
push
jne
insl
testl
jne
jecxz
stos
xchg
sub
addl
xor
cmpb
cvttps2pi
test
xchg
mov
negl
jbe
mov
pusha
test
add
lods
sti
es
xlat
pop
mov
clc
enter
cmc
jmp
jns
jae
pop
add
addb
sub
add
dec
nop
insb
pop
mov
movsl
lock
fs
jecxz
in
xlat
call
jecxz
jns
popf
inc
ljmp
aaa
mov
pop
fcoms
mov
sub
test
xchg
stos
stos
rcrl
rclb
cli
movsl
mov
movsb
push
sub
jne
adc
sub
cld
or
popf
scas
cmp
sbbl
cmp
or
fstpl
sub
push
mov
hlt
xchg
mov
jge
imul
stos
cmp
aam
dec
sahf
lea
jge
push
adc
pop
sub
mov
push
adc
ret
push
inc
mov
sbb
sub
cmp
sbb
inc
dec
adc
shl
fidivrs
fistl
pop
pop
cmp
in
and
cmc
jmp
and
inc
and
out
add
mov
hlt
lods
ret
pushf
or
sbbb
jno
dec
inc
sbb
jo
nop
xlat
stos
les
dec
fstpt
jns
stos
stos
fildll
fnstenv
leave
sbb
cmpsl
addr16
xor
pop
ret
imul
nop
push
stos
mov
stos
xchg
fistl
jb
mov
mov
inc
inc
pushf
shr
fwait
popf
ficoms
lcall
cmc
and
cmp
rcll
jecxz
mov
addr16
les
fwait
xor
mov
push
fisubl
loop
insl
cmovae
mov
bound
and
mov
enter
sub
sub
mov
into
jmp
lret
sbb
cmpsb
fs
mov
enter
int
pop
lods
loop
hlt
mov
imul
push
hlt
je
mov
mov
sbb
movsb
pusha
or
mov
addb
lret
movsl
jle
fisubl
in
in
in
stos
push
and
rolb
pop
cld
stos
jae
lret
subl
lcall
daa
push
fsubrp
idivb
imul
cmp
sbb
and
fstl
jl
dec
push
mov
popf
lahf
xchg
pop
and
jo
add
sahf
push
cwtl
add
movsl
and
or
in
mov
xchg
and
sub
adc
mov
pop
mov
cmpsl
dec
xabort
test
mov
sub
bound
add
cltd
push
mov
inc
mov
push
xchg
repz
lret
xor
dec
sahf
dec
mov
repz
cmc
dec
add
ret
arpl
mov
dec
call
shr
in
fcomip
push
ret
fdivp
ret
and
rolb
adc
mov
adc
lret
inc
sbb
and
adc
mov
mov
push
fistl
loop
dec
sbb
xor
mov
dec
or
test
sub
addr16
xor
pop
shll
inc
sbb
sub
aaa
cmp
adc
sbb
mov
add
mov
movsb
mov
js
bnd
into
scas
call
sbb
jo
ja
js
or
add
bound
xchg
adc
dec
shlb
push
mov
xor
lret
inc
jge
jmp
or
mov
dec
ror
clc
les
cmpsl
jo
push
jne
mov
jle
jo
mov
dec
inc
push
and
mov
aad
xor
dec
sahf
dec
mov
repz
test
mov
lea
jns
pop
call
xchg
cmp
clc
sti
dec
loop
mov
das
jnp
jae
pop
mov
inc
push
hlt
mov
push
and
iret
cmpsl
ret
cmpsb
mov
sub
mov
add
inc
and
stos
lds
pop
movsb
out
fwait
lods
mov
test
mov
lahf
jae
adcb
cs
and
stos
jne
inc
xchg
roll
xchg
imul
sbb
aad
xor
push
mov
or
and
repnz
leave
loop
dec
scas
arpl
pop
push
xchg
jmp
shrb
add
jb
and
inc
les
popf
mov
mov
leave
or
inc
inc
test
fwait
inc
std
movsl
test
xlat
pop
jae
in
mov
icebp
dec
add
mov
or
sbb
xor
pop
mov
jg
pop
cmpsl
pop
cmp
ljmp
decl
inc
iret
jmp
clc
cmpsb
mov
dec
cmp
repnz
fdivr
aas
mov
bound
sbb
add
imul
mov
mov
xor
lea
mov
ret
sub
xor
push
cwtl
rolb
in
insl
lods
jae
lret
xchg
xorl
daa
gs
jmp
dec
mov
or
inc
lcall
int
dec
mov
mov
xchg
adc
pop
push
push
sub
js
in
icebp
mov
adc
sbb
test
push
test
roll
rcll
dec
out
push
mov
cmp
pop
outsb
and
enter
mov
enter
das
lods
pop
sub
cltd
and
sub
in
loopne
jne
inc
mov
repz
lods
test
stos
sarl
sbbb
sub
rclb
mov
mov
and
push
sbb
mov
dec
clc
aas
mov
popa
sbb
inc
aas
adc
jp
mov
sahf
jnp
cmp
lret
inc
fwait
mov
lds
mov
scas
push
pop
ljmp
aaa
ljmp
and
or
adc
adc
push
mov
adc
pop
fcmovnu
repnz
pop
out
jecxz
fwait
pusha
xchg
dec
out
pusha
mov
cld
loop
jg
mov
cmp
add
jae
addl
add
mov
pop
stos
add
sbb
fwait
xor
xlat
sub
movsl
ficompl
inc
std
movsl
test
sahf
in
call
je
or
inc
ds
dec
inc
mov
loope
inc
cmp
das
mov
mov
into
add
mov
idiv
mov
jecxz
aas
fldcw
movsl
ret
inc
loope
in
sub
add
add
lret
lds
jae
inc
sbb
add
test
lret
fldenv
sbb
cld
mov
sub
jp
mov
stc
mov
ljmp
insb
mov
mov
mov
mov
inc
movsb
pop
rcll
fwait
lods
insl
fldt
mov
lock
scas
mov
popf
fists
inc
shlb
js
or
or
or
inc
adc
rorb
push
xchg
adc
push
fisubl
mov
or
cmp
out
cmp
loop
je
jnp
fsubl
adc
inc
dec
stos
inc
mov
lret
dec
adc
cs
jle
shlb
push
inc
ret
arpl
int
pop
movsl
dec
call
jg
in
lcall
push
add
jnp
mov
mov
mov
or
fsubrl
adc
mov
test
fdiv
push
test
cld
mov
or
mov
mov
arpl
cld
mov
sbb
dec
mov
imul
mov
inc
sub
push
scas
xchg
shr
xchg
outsb
cmc
mov
pop
jns
inc
push
cltd
lods
mov
aad
in
scas
mov
lahf
lahf
pop
ds
loop
jae
loope
pop
push
mov
clc
or
push
add
sub
sbb
sbb
addr16
dec
out
mov
lods
insl
mov
mov
jb
cmp
out
pushf
and
das
lods
pop
sub
es
sub
loop
out
mov
jge
inc
cmp
fcom
test
cs
mov
jecxz
test
pop
clc
mov
ret
loopne
pop
pop
dec
or
jae
mov
lret
icebp
add
mov
jp
dec
inc
inc
sbb
push
dec
sub
imul
mov
dec
push
aad
dec
mov
and
lods
movsl
or
sti
xor
std
mov
xor
insb
push
les
sbb
xchg
test
sbb
stos
clc
or
negl
fistpl
icebp
shrb
lret
mov
popf
sahf
into
jle
bnd
dec
fists
inc
out
pusha
pop
sub
or
or
inc
xor
rolb
xchg
adc
push
fsubl
and
frstor
pop
mov
call
int3
mov
enter
movb
stc
cmpsl
lcall
jmp
mov
cmp
adc
add
ret
arpl
int
mov
xchg
sbb
cmp
jnp
mov
aas
mov
inc
sbb
test
or
mov
fsubrl
lret
movsl
mov
mov
xor
rorl
dec
add
lds
push
pop
xchg
jae
lret
rorl
lret
add
scas
cmp
imul
cs
data16
stos
jne
test
xchg
fistl
inc
daa
push
jb
lods
pop
fyl2xp1
lds
in
ret
popf
cwtl
fucomi
repnz
pushl
pop
sti
and
or
add
popl
lcall
or
xchg
mov
adc
dec
aad
pop
cmpsb
push
xchg
xchg
cmpsl
dec
call
dec
sub
bound
add
sbb
mov
dec
mov
pop
xchg
dec
scas
lcall
cs
aad
cltd
shl
dec
adc
call
mov
les
loope
sbb
mov
in
mov
lret
lahf
push
dec
and
ljmp
test
iret
test
xlat
stos
mov
ja
pop
test
test
mov
sahf
sbbl
ret
pop
xchg
arpl
dec
pop
mov
adc
xchg
push
mov
inc
xchg
dec
stos
xchg
fistl
fisubl
enter
outsb
icebp
jmp
add
inc
stos
repz
lahf
rol
pop
jo
aas
mov
or
add
xor
mov
xchg
into
insb
and
shrl
movsl
ret
push
sub
adcb
lahf
xlat
iret
rol
call
and
push
in
adc
inc
inc
mov
rorb
bnd
mov
cwtl
sahf
repnz
pop
scas
xchg
cmp
shrb
iret
loopne
jns
aad
dec
inc
mov
jmp
jns
mov
add
sti
pop
add
xor
mov
ss
aam
or
xor
xchg
jbe
dec
mov
movsl
inc
decb
lds
lahf
inc
into
push
mov
push
pop
xchg
jae
sbb
xor
add
jno
inc
push
and
lret
sbb
and
sub
repnz
mov
or
inc
sbb
adc
aad
mov
jmp
cmc
daa
fwait
leave
cmc
cmp
call
mov
sbb
aam
jns
dec
and
inc
les
and
sub
inc
adc
mov
dec
adc
mov
cmp
out
cmp
xorl
add
dec
push
or
cwtl
sahf
cmpsb
insb
loopne
mov
shl
pop
adc
fistpl
lods
imul
js
jo
cmp
mov
cmp
inc
fnstenv
mov
arpl
lock
iret
or
inc
mov
icebp
fmuls
mov
jns
lds
movsb
jmp
inc
mov
dec
mov
cmp
pop
sbb
jecxz
cld
pop
lret
scas
inc
scas
out
inc
xchg
rorl
addr16
inc
repz
scas
jle
mov
and
jmp
cld
jge
xchg
and
jo
add
std
jo
or
fcmove
inc
cmp
mov
fsubrs
dec
repnz
dec
and
sbb
insl
xchg
jmp
or
insl
push
mov
adc
add
out
cmp
shrl
lods
pop
sub
es
sub
loop
out
mov
jge
inc
sbb
fcom
jmp
cs
mov
inc
cli
repz
jb
mov
push
cmp
clc
sti
pop
push
add
in
idivb
iret
cmp
adc
repnz
rcrl
nop
out
test
adc
in
pushf
dec
and
sbb
test
inc
mov
cmpl
imul
sbb
ret
or
addb
ficoml
repz
fistpl
imul
mov
add
subb
fucomi
xor
xor
cmc
xor
popa
cmp
pop
es
adc
testl
roll
out
fwait
shll
mov
cli
or
in
sbbb
xlat
cmp
loope
and
mov
lea
or
fisubrs
dec
mov
mov
sub
call
mov
repz
push
hlt
mov
call
sbb
in
ret
mov
mov
hlt
xor
xchg
adc
mov
test
sub
mov
add
js
pop
movsb
jmp
shrb
xor
mov
shlb
stc
adc
inc
inc
sbb
lret
test
imul
jge
fwait
lods
jle
push
sub
fiadds
pusha
jnp
xor
sbb
xor
fwait
leave
mov
jmp
or
push
push
addl
add
cmp
dec
or
les
push
xchg
mov
int3
add
in
mov
sbb
cmovae
into
push
mov
call
mov
out
sub
dec
push
and
mov
cwtl
loope
cmp
jle
pop
pop
mov
pop
loopne
lods
divb
movsl
xor
pop
les
repz
in
clc
add
mov
pop
jp
pushf
inc
inc
sbb
inc
dec
sub
scas
out
popf
pushf
dec
xchg
mov
lock
mov
nop
xlat
dec
sbb
test
arpl
jae
dec
push
dec
out
int3
push
or
lods
mov
aaa
ljmp
push
sbb
lds
sub
lds
ja
or
outsl
lret
inc
mov
xlat
call
jbe
mov
imul
add
enter
pushl
push
mov
subl
xchg
call
dec
mov
pop
mul
or
adc
aam
sahf
mull
sbb
xchg
push
out
mov
lret
pop
or
xor
loopne
je
leave
sbbb
mov
mov
arpl
dec
sahf
dec
cmc
xchg
lahf
pop
adc
xchg
lods
mov
cmpsb
popa
mov
loopne
ljmp
enter
sar
jp
insl
mov
push
cmp
mov
cltd
mov
inc
add
dec
xchg
ret
sbb
cs
add
lds
rolb
pop
pop
dec
lret
fucomp
fs
fisttps
lret
rcr
cmp
pop
or
lds
jl
or
mov
imul
fistpl
mov
jle
mov
and
mov
call
fwait
push
insb
jp
mov
mov
icebp
and
mov
rcll
out
and
popl
xor
bound
rcll
iret
push
movsl
ret
inc
mov
sbb
cmpsb
int3
test
bound
cltd
addr16
inc
out
scas
es
hlt
je
xchg
dec
mov
mov
out
sub
in
adc
jbe
mov
popa
mov
jle
pop
movsl
dec
call
fucomip
cmc
mov
pop
adc
shl
mov
mov
or
push
aas
cli
add
mov
clc
fidivs
cwtl
lret
inc
sbb
pop
sarb
aas
stos
inc
in
scas
dec
sbb
sbb
scas
mov
test
xchg
inc
cmp
jno
pop
sub
or
xchg
lret
or
xor
xchg
fcmovbe
mov
out
push
lods
push
fwait
pusha
ficomps
jge
inc
inc
mov
insb
inc
fwait
iret
daa
popl
or
rolb
test
rclb
dec
xor
xor
imul
pop
movsl
inc
sbb
cmpsb
jnp
enter
outsl
scas
add
cwtl
pusha
mov
and
mov
xchg
xlat
out
and
push
dec
mov
dec
sahf
dec
mov
into
pop
in
arpl
jo
xchg
dec
out
loopne
pop
adc
out
sti
mov
dec
clc
mov
push
int
inc
aas
adc
gs
ret
xor
cwtl
and
xor
cs
outsb
xchg
and
js
dec
dec
outsl
mov
or
lahf
fnsetpm(287
leave
mov
pop
sub
mov
sub
in
jmp
dec
cmpsl
outsb
shrb
pushf
shlb
pop
mov
lods
inc
inc
mov
mov
mov
js
ds
inc
fwait
leave
cmc
xor
add
adc
adcl
jns
mov
mov
fwait
pop
cmpsl
addr16
inc
clc
push
fsubs
ss
pop
cltd
and
pop
pop
jmp
popa
rcrb
mov
int3
add
addl
leave
sbb
add
stos
mov
jne
dec
movsb
mov
push
loop
ret
pop
fistpll
jbe
sbb
pop
pop
dec
or
jae
mov
lret
icebp
add
mov
jp
dec
inc
inc
sbb
push
dec
sub
mov
cwtl
push
hlt
mov
sbb
and
pop
stos
hlt
push
push
cli
mov
push
int3
and
popf
les
shrb
js
mov
btr
test
test
add
sbb
addr16
imul
inc
mov
xlat
call
jbe
mov
imul
push
inc
call
popf
scas
pushl
jmp
mov
andl
add
dec
shlb
repnz
and
inc
les
cltd
push
mov
cltd
jne
mov
mov
ret
fld1
std
jge
lea
int3
out
mov
iret
pop
jns
sbb
add
jp
stos
fsubr
mov
sbb
es
push
test
sbb
movsl
push
jmp
mov
mov
in
sbbl
jnp
xchg
enter
fnstsw
jmp
stos
fsts
lds
nop
imul
mov
cmp
pop
cmp
loop
jge
push
cmp
out
arpl
aaa
jp
pop
sbb
xor
mov
pcmpeqw
inc
sahf
inc
mov
pop
ret
cli
add
pop
test
mov
inc
mov
push
or
incl
fcompl
mov
add
or
js
clc
or
pop
fnstcw
fwait
xchg
lock
cld
or
data16
fwait
xor
lock
sub
test
repnz
insl
xchg
enter
mov
cltd
out
cmp
mov
test
inc
ds
dec
inc
mov
loope
inc
cmp
das
mov
lds
les
shrl
mov
push
call
fnstsw
pop
iret
ret
mov
jae
jecxz
pushf
sbb
mov
push
repnz
and
xchg
iret
cmpsl
mov
cmpb
pop
mov
and
ja
push
adc
jnp
sub
ficomps
mov
jbe
call
test
ret
add
pop
pop
inc
push
stos
pop
pop
cmp
pop
pop
adc
inc
pop
mov
mov
sub
imul
sti
into
lahf
fists
fucomi
ret
les
add
js
fisubrl
add
pop
and
loop
rcrl
adc
adc
pop
ret
inc
insl
xchg
imul
mov
call
jnp
int3
jne
jecxz
mov
add
cmp
sub
push
fwait
push
add
or
nop
out
push
adc
ret
pop
std
sti
int3
sbb
test
xor
pushf
divb
inc
fnstenv
lret
hlt
inc
mov
xor
in
sbb
mov
jbe
push
or
pop
adc
popa
cmpsl
ret
insl
cmp
mov
push
push
cli
inc
std
xlat
xor
rolb
fildll
jb
shrb
arpl
inc
fmuls
push
cmp
sbb
lahf
push
mov
push
stos
mov
stos
xchg
stos
inc
lcall
int
test
pushf
push
jg
push
fucomi
in
mov
fdiv
sti
cmpsl
xchg
add
and
or
inc
mov
test
cltd
jnp
pop
inc
cwtl
dec
rcrl
push
fisubs
xchg
imul
pop
mov
inc
jns
icebp
cmp
cmpsl
fcmovne
cwtl
jne
out
dec
mov
enter
dec
push
and
mov
xchg
loope
cmp
ret
pop
mov
dec
loopne
jmp
sub
aas
pop
inc
xor
jmp
add
pop
push
iret
ret
ljmp
cld
or
mov
repnz
xchg
pop
add
dec
inc
sbb
sub
adc
ret
sbb
inc
notb
adc
and
vminss
jae
fisubl
lahf
test
repz
je
lods
jae
aam
jl
roll
add
sub
sbb
xchg
int
xor
jb
fstl
fldt
scas
jno
aad
mov
leave
cmc
inc
mov
jmp
inc
js
or
xchg
js
mov
add
sub
jmp
inc
push
push
sub
loope
insl
xchg
imul
lahf
xlat
cltd
fdivs
js
cmpsb
inc
cltd
enter
inc
mov
pop
sub
xor
add
mov
cwtl
sahf
inc
cmp
cmpsl
mov
test
pop
adc
popa
mov
sbb
aaa
fdivr
mov
repz
sti
pop
push
iret
pusha
mov
sbb
or
mov
hlt
xor
sub
rol
cli
lret
cltd
adc
dec
xor
rorl
dec
xlat
test
mov
cmp
sbb
xchg
mov
popf
lret
not
test
or
nop
daa
sub
add
adc
sbb
rorl
xchg
fwait
jnp
movb
xor
scas
cmp
cmc
mov
iret
leave
loop
inc
shlb
pop
xchg
ret
cwtl
or
cmpsl
stc
pop
and
ret
les
xchg
stos
andl
addr16
popf
push
stos
mov
enter
insl
ds
pusha
and
mov
inc
inc
mov
dec
aas
add
scas
sbbb
inc
mov
sub
scas
cmp
pop
les
inc
sahf
cmp
mov
repz
mov
inc
sbb
dec
aaa
inc
cmp
add
rcll
add
cs
cmpb
iret
sbb
imulb
leave
mov
mov
push
in
dec
mov
xor
outsl
cmp
jmp
jl
lret
mov
sub
dec
into
mov
or
sbb
fistl
pop
les
cmp
jno
mov
mov
aad
popf
mov
scas
pushl
shlb
inc
pop
loop
sbb
test
jo
adc
xor
xor
adc
jns
out
xor
xchg
jnp
fisubs
jo
outsl
or
mov
ds
cmp
xor
xchg
lea
pop
movsb
lcall
mov
repz
pop
push
add
adc
imul
in
std
jmp
xor
sbb
mov
add
dec
lds
xchg
pop
nop
icebp
idiv
test
cli
sub
mov
pop
push
cli
sub
mov
mov
loope
xor
mov
bound
fxch
bound
sbb
adc
cmc
loop
xchg
fcomip
add
xchg
pop
test
sub
jp
xor
mov
loope
sarl
xchg
stc
and
rorl
inc
sarb
dec
divl
pop
jb
and
dec
aam
sti
fwait
xor
push
sub
test
cmpsb
call
mov
call
dec
or
call
jle
sub
xchg
and
adc
pop
inc
sub
inc
push
adc
or
jns
idivl
dec
loopne
jmp
les
loope
roll
inc
inc
divl
sarl
popa
lcall
or
das
push
push
jp
inc
sbb
rorl
dec
inc
lods
inc
in
lret
pushf
lret
pop
sub
xchg
sbb
xchg
in
mov
rolb
cmp
stos
mov
sbb
test
imul
fistl
mov
dec
test
lods
cmp
xchg
ret
in
fucomi
in
shr
ja
fmull
sti
and
mov
inc
aam
cmp
add
add
push
mov
fwait
xor
enter
movsl
or
add
jmp
cmpsb
aas
mov
cltd
iret
sbb
push
add
mov
lea
ds
push
dec
mov
fdivl
out
and
pop
in
stos
mov
in
cmp
in
test
mov
mov
sar
add
xor
push
hlt
xor
pop
adc
mov
fs
dec
pushf
in
push
adc
lds
pushf
test
mov
pop
ljmp
imul
je
add
cmp
ret
add
daa
sub
aaa
pop
enter
lods
ja
mov
or
movsb
inc
inc
add
mov
in
inc
pushf
sbb
loop
sbb
js
das
popa
or
lret
add
or
xor
push
lahf
push
aam
jmp
cmp
mov
mov
call
jae
jne
sbb
or
mov
mov
cwtl
cmp
cwtl
mov
mov
shll
xchg
mov
loopne,pn
push
mov
mov
test
adc
aam
stc
dec
xchg
dec
lahf
add
sbb
mov
jnp
mov
xchg
test
repnz
mov
adc
roll
sbbb
out
movsb
ret
sbb
fs
push
cmp
popf
lds
jge
jecxz
sbb
ss
sbb
push
cld
mov
imull
jo
mov
pop
sbb
add
nop
stos
jns
scas
xchg
fisttpl
stos
xchg
fistl
cmp
fwait
lods
jle
mov
cmp
mov
pusha
jp
xor
cmp
sub
fwait
sbb
mov
stos
loope
pop
sub
sbb
mov
flds
cmc
rcr
loopne
test
dec
shlb
adc
fs
test
xchg
aam
cli
jae
push
jne
in
roll
xchg
jns
enter
and
test
push
adc
jmp
inc
movsb
in
xlat
repz
pop
mov
dec
add
ret
arpl
lea
movsl
pop
lock
pop
adc
lock
in
rcr
sub
cmc
mov
push
adc
push
add
jbe
inc
leave
sbb
mov
xor
rorl
leave
test
add
dec
dec
sbb
inc
stos
adc
jns
sahf
popf
stc
inc
inc
cmp
stc
mov
lock
and
add
stos
jne
pop
sbbl
mov
adc
or
and
fstl
pop
cmpsl
pop
cwtl
jnp
sub
test
movsb
push
jmp
mov
andl
xchg
mov
dec
testl
push
xchg
imul
frstor
pop
stos
xor
inc
clc
rcrb
sti
rep
jno
xchg
push
adc
ret
sbb
xchg
dec
inc
mov
fstps
aaa
lock
cltd
fisubs
clc
xor
mov
movsl
ja
dec
test
aam
sti
pop
test
std
sbb
fs
jnp
mov
mov
lock
adc
mov
mov
ret
sbb
insb
xorl
fisttpll
mov
mov
scas
pop
mov
jmp
repz
cmp
push
inc
data16
jo
xchg
dec
push
stos
jge
mov
inc
adc
pop
sahf
jns
inc
sbb
cltd
fmull
jnp
pop
insb
mov
jmp
pop
mov
mov
cwtl
in
mov
cs
lock
sarb
push
dec
aam
fnstenv
xchg
mov
popf
mov
mov
ds
enter
sti
xor
gs
rcll
addb
lret
inc
lea
sub
movsl
push
mov
movsb
out
push
repnz
push
mov
jns
xor
cmp
mov
mov
in
testl
testl
lea
lahf
jnp
sbb
leave
rcrb
sbb
xlat
push
fidivs
mov
lret
mov
sub
xchg
cmp
clc
sub
pop
fidivl
jno
or
or
les
push
xchg
or
xchg
rorl
stos
fwait
gs
jl
fistpl
xchg
fwait
jnp
xchg
movsl
xchg
xchg
fucomi
cmc
mov
fwait
leave
cmc
xor
adc
fildl
dec
dec
adc
jns
mov
cmp
repnz
or
add
mov
fbld
xchg
jle
lea
fwait
lea
cmp
out
push
aam
test
add
mov
ret
mov
shlb
dec
pop
pop
mov
shr
ss
xchg
lcall
or
add
pop
iret
ret
sahf
or
stos
rcrb
xor
mov
adc
mov
pop
sub
popa
lcall
repz
dec
and
stos
lds
jge
fstps
sahf
popf
stc
inc
pop
cmp
sarl
nop
jecxz
jo
xor
push
sbb
lds
push
fistl
sbb
and
jg
imul
mov
in
scas
mov
xchg
sti
ss
push
inc
mov
js
or
dec
test
rolb
add
fwait
int
je
or
les
aam
sbb
daa
cli
mov
push
gs
in
out
addl
ret
push
mov
add
inc
mov
sbb
sbb
mov
cwtl
sahf
inc
cmp
das
and
add
mov
jae
inc
mov
dec
add
mov
cmp
ds
fwait
cmp
dec
sbb
sbb
negb
mov
orb
mov
aam
xor
rolb
mov
test
mov
add
inc
mov
sbb
lods
mov
jbe
arpl
and
lds
xchg
dec
push
inc
fsts
pop
daa
or
dec
movsl
or
pop
mov
inc
jnp
js
jbe
xor
or
scas
negl
js
jg
scas
push
stc
cmc
and
jb
add
add
push
dec
and
test
dec
ljmp
movb
stos
sbb
gs
pop
xchg
int3
push
xor
loope
sahf
imul
fsubrl
fisttpll
addl
push
add
mov
cs
mov
mov
inc
cmc
mov
movsb
xor
dec
add
ret
arpl
fsubrl
jne
mov
mov
pop
cmc
setae
out
pop
mov
pusha
icebp
add
mov
push
or
push
pop
ljmp
dec
test
mov
mov
movb
in
xlat
dec
mov
add
mov
lock
popf
lret
test
dec
or
les
xchg
stos
leave
jne
inc
in
xchg
pop
stos
xchg
stos
std
mov
add
adc
lds
cltd
cmpsl
pop
push
xchg
leave
addr16
loop
inc
mov
pop
jb
adc
or
add
dec
aam
pop
mov
xor
inc
les
scas
jp
cwtl
inc
jns
sbb
loop
pop
mov
std
cmp
lea
mov
pop
add
and
test
push
adc
inc
mov
sbb
cmpsl
pop
push
mov
jb
push
mov
pop
in
cmp
and
lds
ds
mov
movsl
iret
aaa
rcrb
lods
dec
or
movsb
mov
push
adc
dec
insl
fmull
nop
xlat
dec
sbb
test
test
loope
sbb
test
pop
push
dec
pop
inc
xchg
insl
imul
sbb
nop
dec
mov
dec
xchg
dec
outsb
lret
sub
shrl
rcll
and
fcoml
pop
into
lods
fucomi
repnz
push
jg
mov
mov
xchg
sbb
mov
inc
xchg
and
mov
adc
addl
cmp
add
mov
push
jns
fcomp
pop
xchg
cltd
xabort
pop
sbb
sarb
or
and
stc
mov
sub
pop
jp
pop
cmc
mov
outsb
mov
out
add
adc
lods
test
add
loopne
jno
or
clc
lds
add
sub
out
aad
ja
repnz
lock
inc
xchg
or
mov
xchg
cmp
xor
mov
sbb
loopne
lret
sbb
sub
scas
xchg
shll
repz
sbb
addr16
pop
lock
test
push
sbb
lret
or
cmp
xchg
std
mov
mov
jg
add
pop
in
ret
adc
bound
dec
out
or
mov
in
jo
sbb
add
mov
ja
xchg
xchg
pushf
es
dec
sarb
lock
sahf
fcom
xchg
testl
fcoms
fidivrl
mov
lds
pop
pop
sbb
bound
out
shlb
test
inc
ds
dec
inc
mov
aam
out
aad
pop
mov
icebp
pop
adc
movsl
cmc
pop
xchg
into
pop
enter
fnsave
jae
orb
popa
popf
orb
cwtl
ljmp
mov
xchg
lret
fsubrl
pop
int
cli
sub
call
and
rcl
dec
stos
push
jno
cld
sub
lret
dec
pop
sbb
stc
dec
data16
pop
xor
test
push
pop
pop
test
xchg
or
pop
dec
fistl
mov
dec
test
mov
xor
fs
ds
push
xchg
mov
sarb
cld
inc
sarb
inc
stc
or
sub
rcll
push
fdivrs
jge
imul
mov
pop
icebp
out
daa
pop
lods
cmpsl
arpl
outsb
cmp
mov
mov
and
dec
push
add
lret
add
dec
mov
pop
incb
mov
icebp
pop
mov
aad
jns
or
cmp
stos
aam
sti
dec
mov
jae
mov
pop
mov
mov
in
ja
hlt
mov
fsts
ret
sbb
aas
ljmp
fs
jb
lcall
ja
push
icebp
fldt
jae
fisubl
fisttps
mov
lahf
lcall
sbb
roll
xchg
add
lcall
jge
jns
lods
mov
lods
mov
repnz
inc
sbb
sbb
loope
std
addr16
cmp
adc
cmp
cwtl
fadds
mov
inc
jmp
or
xchg
pop
aaa
xchg
and
mov
push
fidivrl
insl
icebp
imul
stos
cmp
shlb
outsl
cmp
mov
xchg
cmovno
test
inc
sub
loope,pn
aad
mov
pop
test
fcmovu
adc
popf
mov
adc
dec
rcrl
iret
ret
mov
mov
sbb
adc
dec
inc
test
sahf
and
jo
fists
shrb
cwtl
lret
icebp
scas
jl,pn
and
mov
test
shrl
xor
xchg
or
cmp
jnp
setns
jl
sbb
mov
xor
inc
cmp
xchg
aad
sbb
mov
mov
int
movsb
les
cld
ret
mov
pop
insb
jp
xor
stc
in
mov
jmp
jmp
inc
test
mov
inc
pop
sbb
test
xchg
and
test
mov
xchg
and
mov
cltd
cmc
repnz
gs
cltd
xlat
xchg
sbb
jne
mov
push
test
or
cltd
cmp
fs
divb
mov
pop
das
or
pop
test
aaa
sub
mov
fstl
jae
test
cld
add
jp,pn
add
test
cmc
mov
lcall
jno
pop
and
mov
nop
icebp
mov
xor
stos
leave
mov
cli
push
clc
xor
icebp
stos
sub
fucom
cli
mov
gs
dec
popf
in
mov
dec
cmp
test
test
cmpsl
sbbb
push
fwait
insl
pop
test
push
or
sub
popf
ficoms
mov
enter
pop
icebp
xor
jge
and
arpl
addb
ljmp
xchg
sub
xor
sahf
mov
sbb
fisubl
jb
fisubs
cmp
fldl
pop
mov
mov
push
adc
lea
in
iret
ljmp
mov
dec
in
pop
push
into
inc
or
mov
iret
jp
ds
aas
notl
in
dec
or
repnz
cmp
lds
add
insl
lcall
das
icebp
mov
xor
int
sbb
add
inc
and
shrl
inc
popa
sub
ficomps
inc
sbb
xchg
shll
call
test
sbb
add
inc
pop
xchg
leave
add
addr16
inc
stos
enter
imul
push
and
lahf
ficoms
jg
sub
xor
stos
js
or
inc
add
sbb
cwtl
inc
mov
dec
aam
stc
repnz
pop
ret
insl
xchg
imul
imul
pop
std
inc
push
xor
call
je
cmp
int3
inc
push
xchg
dec
lret
dec
jg
add
sbb
insl
daa
lock
mov
mov
inc
mov
into
lcall
iret
fwait
jmp
inc
clc
inc
xchg
rcrb
xor
mov
adc
mov
and
roll
dec
push
fs
dec
xlat
or
mov
test
pop
mov
popf
cmc
ja
fldt
popa
mov
xchg
fcoms
subl
xchg
add
xchg
add
pop
jb
xor
js
jbe
lods
jbe
cmpsl
pop
insb
jnp
scas
jg
fxam
cmp
icebp
jmp
mov
inc
shlb
push
inc
pop
adc
sub
rcr
mov
inc
cwtl
push
test
imul
xor
cmpsb
call
pop
lret
cwtl
gs
outsl
or
aad
push
inc
mov
sbb
mov
push
dec
mov
fstps
in
aad
gs
xor
mov
lods
sti
lods
int
jg
aam
sti
sub
jnp
mov
ret
push
cmp
jbe
add
mov
pop
adc
insl
pushf
sub
inc
test
rcll
pop
xor
rorl
add
aad
cld
lret
push
in
fxch
lahf
dec
cmpl
jae
or
pop
sbb
jae
test
lods
xchg
push
fisubrl
pushf
lods
outsl
or
ljmp
cli
cltd
cmp
inc
xor
pusha
pop
xor
pusha
js
xchg
sbb
push
out
mov
mov
sub
inc
xchg
sahf
nop
add
repnz
inc
xor
jp
imul
in
out
inc
in
insl
or
push
adc
mov
jg
sbb
es
hlt
xchg
fwait
daa
dec
dec
mov
dec
lahf
movsb
in
dec
lock
mov
les
jg
arpl
mov
lods
ds
sbb
mov
mov
sbb
xchg
mov
sbb
add
leave
inc
sbb
das
arpl
fsubrl
adc
mov
testl
jmp
dec
inc
int
sbbb
push
ror
jae
mov
or
cmp
adc
cmp
mov
or
mov
mov
mov
fcoml
jp
xor
mov
pushf
repnz
das
xchg
xchg
mov
xchg
cmp
sti
adc
addb
push
pop
data16
push
repnz
xrelease
push
pop
cmpsb
shlb
fdivrl
cmp
cmp
repz
jne
in
adc
mov
sub
sub
cmp
sbb
rcrb
push
pop
push
mov
inc
fmuls
int
pop
movsl
inc
shrb
mov
mov
cmc
jmp
mov
adc
add
sbbl
cmpsl
add
js
xchg
lret
movsl
ret
sbb
fs
sbb
lds
int
mov
inc
mov
test
mov
xchg
dec
popf
mulb
cmpsl
xchg
test
inc
loop
test
sbb
sub
xor
adc
or
fistl
popl
jbe
sub
bound
jg,pn
leave
hlt
test
int3
das
fistps
jmp
or
adc
add
iret
push
sub
and
dec
xchg
xchg
sub
add
adc
clc
fmuls
mov
push
insl
out
std
imul
shlb
lret
cmpsb
inc
test
push
mov
ds
leave
sbb
pop
les
out
jne
dec
movsb
mov
xlat
adc
ret
pop
sarl
loopne
sub
xor
pop
adc
mov
push
iret
ret
ljmp
push
or
inc
mov
xchg
dec
and
scas
sbb
cmpb
lahf
frstor
add
inc
and
int3
push
push
push
outsl
mov
sar
or
add
cmp
rorl
sub
rorb
adc
lcall
loop
pop
mov
aaa
cmc
jno
fsub
out
lahf
scas
mov
fists
sbb
loop
xchg
js
or
inc
inc
cmp
xchg
aam
inc
mov
pop
xor
or
xchg
imul
cltd
in
lods
inc
test
push
xor
jb
inc
lea
fmul
push
adc
lea
in
iret
addr16
sahf
dec
mov
popf
pop
loopne
adc
jp
push
xchg
rorb
aam
cmp
and
enter
jle
sbb
in
or
rcll
pop
mov
cmpb
insl
cwtl
mov
dec
pop
lds
mov
test
inc
lahf
out
aad
loop
jno
int3
in
lahf
mov
add
or
pop
push
pop
cmp
or
dec
mov
lret
lcall
xchg
cmp
inc
insb
ja
lods
mov
dec
bound
out
mov
dec
ret
sahf
gs
mov
dec
push
and
mov
inc
nop
sbb
xchg
and
mov
lods
adc
rolb
xchg
imul
jnp
mov
jge
out
out
add
mov
cwtl
cmp
cmpsb
aam
sub
imul
cmp
aam
or
cmp
adc
pop
into
pop
stos
add
mov
dec
loop
mov
jmp
fstpt
insb
mov
fmull
mov
hlt
rclb
inc
sbb
dec
or
popa
cmpsb
ret
sbb
adc
xor
negl
mov
pop
stos
inc
push
cli
ss
fisttpll
test
ljmp
push
and
ret
add
cmp
lret
or
cmp
insl
mov
jle
mov
cmp
ret
outsl
jle
scas
or
mov
jo
sbb
add
add
sbb
mov
dec
aam
pop
lcall
or
inc
sub
mov
mov
pop
test
stos
xor
xabort
pop
fidivrs
fcmovnu
out
cmp
loop
push
dec
sti
test
jle
xchg
test
mov
mov
mov
mov
push
push
lea
ss
and
mov
ficomps
repz
fists
add
sahf
sbb
jecxz
popf
mov
xchg
mov
ss
xor
jno
jmp
xor
adc
stos
jb
mov
stos
rorb
push
in
dec
push
lds
pusha
std
mov
jmp
xchg
fucom
adc
adc
nop
popf
das
add
mov
lock
movsl
adc
sbb
xchg
mov
lods
pop
xchg
jbe
sub
xor
mov
popf
ficoms
shlb
jecxz
arpl
rolb
stos
rclb
adc
xor
addb
rol
fstpl
mov
cmp
call
sbb
add
ds
xor
and
mov
jne
dec
pop
xor
mov
cmp
mov
lea
mov
or
fiadds
pop
push
add
shl
mov
sub
rcrl
repnz
xchg
int3
addr16
hlt
scas
icebp
negb
and
pop
test
pop
push
cmp
in
test
jmp
scas
repz
sbb
pop
arpl
aaa
jl
lcall
mov
aam
imul
jge
fcmovbe
xchg
out
xchg
fwait
xchg
frstor
mov
int
sahf
jecxz
mov
pop
nop
jnp
scas
jg
sub
cmp
xlat
loopne
sti
sub
sub
or
inc
inc
sbb
mov
dec
mov
jb
sub
outsb
sbbb
cmp
mov
and
inc
mov
lcall
mov
arpl
enter
loop
mov
dec
lcall
cld
jl
adc
dec
cmpb
push
inc
mov
cmp
test
les
inc
mov
fcmovu
cmp
jae
mov
sti
jns
mov
mov
rcrl
aaa
xor
adc
clc
icebp
mov
cmpl
mov
inc
mov
mov
inc
mov
xchg
inc
cld
stos
mov
cmpsl
jae
mov
orb
or
push
stos
jge
mov
add
jl
fsts
xchg
ja
sub
jno
aad
rcll
icebp
fxam
xor
stc
icebp
cmp
sbb
or
inc
sbb
rclb
lea
rcll
pop
mov
or
fildl
pop
in
push
mov
das
out
repz
daa
jl
or
daa
je
seto
ret
push
dec
addb
push
or
clc
daa
sti
gs
sahf
and
mov
adc
mov
jns
cs
sbbb
lods
shlb
adc
mov
repz
fsubrl
adc
ret
popf
pop
out
pushf
adc
sub
mov
addr16
enter
in
fisttpl
dec
sub
lahf
mov
stos
aam
push
jl
lret
sahf
nop
test
or
dec
ficoml
cmp
xchg
stos
std
mov
mov
lret
push
movsb
add
mov
add
inc
mov
and
xchg
lahf
adc
js
mov
sbb
mov
dec
repz
rcll
or
les
cmp
xchg
in
push
fidivrl
das
pop
lea
xor
mov
jge
out
cltd
bound
sahf
or
cltd
pop
inc
sub
loope,pn
aad
test
xchg
repz
adc
xchg
push
into
inc
andb
xlat
int
cmp
mov
inc
fcoml
scas
push
imulb
add
mov
aas
adc
gs
aam
mov
cmpsl
ret
popf
fsubl
dec
pushl
mov
ja
push
cmc
fisttpl
inc
add
adc
push
dec
pop
lret
rorl
push
push
xchg
fsts
pop
daa
adc
mov
mov
movsl
or
xchg
xchg
sbb
test
mov
aad
sar
out
xchg
ljmp
out
jl
sarb
jb
push
mov
jo
es
or
xlat
mov
pop
cmc
out
stc
repnz
popl
push
fisubl
jb
sub
sti
xor
dec
es
cltd
xlat
call
int3
add
bound
mov
pop
pop
dec
xchg
test
jle
push
dec
mov
push
xchg
insl
cmp
out
cmpsb
testb
sarb
mov
adc
mov
sbb
divl
lock
add
mov
jg
inc
sbb
loop
xor
test
adc
mov
jno
push
test
dec
push
lret
mov
movsb
sbb
jno
pop
sbb
out
popf
pop
fcoms
sbb
xor
les
or
inc
sub
loop
ret
pop
push
rol
fistpl
adc
and
mov
cmp
fwait
cmc
jmp
js
or
add
push
dec
aam
aam
cmp
arpl
inc
stos
sbb
fisubl
pusha
mov
or
stos
cmp
and
xlat
push
sbb
or
les
loopne
hlt
pop
mov
adc
inc
or
fisubs
sub
cmp
ss
mov
jmp
pop
ja
lret
in
out
fists
rol
repz
popf
fstp
out
add
ror
cmpsb
cltd
js
fstl
xchg
push
lock
mov
jne
stos
leave
sbb
and
les
sbb
mov
idivl
pusha
cli
lret
dec
pop
lret
rcrl
nop
cmp
or
cmp
jge
pop
movsl
or
jns
add
cld
sub
cmp
movb
jmp
pop
mov
fists
add
rorl
mov
add
inc
mov
leave
enter
push
cmp
insl
ljmp
push
push
popf
rep
cmp
jb
outsl
inc
cltd
cwtl
in
fs
xchg
and
rcll
addl
mov
sub
lcall
pop
adc
arpl
xchg
divb
mov
repz
cmp
mov
adc
add
rcrl
ret
inc
mov
pop
hlt
lods
jno
dec
xor
adcl
stc
lds
lds
sbb
jge
xchg
push
clc
mov
xchg
or
jl
or
inc
inc
sbb
lret
or
sbb
xor
mov
sbb
add
lds
add
out
xchg
ljmp
pushf
repnz
and
push
mov
sub
orb
xchg
add
push
addr16
cwtl
dec
xor
inc
pop
test
out
xor
push
jne
insl
jl
cmp
out
shrb
cmp
addb
push
jp
out
push
adc
adcl
rorb
mov
push
mov
icebp
arpl
int
fsubrs
mov
test
out
mov
lock
mov
push
sbb
cmc
cld
jg
repnz
idivb
sbb
rcrb
sbb
les
pop
mov
push
in
divl
fisubl
insl
lods
repz
jo
mov
jl
shrl
add
inc
cmp
leave
mov
movsl
sbb
fimull
mov
jge
add
test
adc
iret
jbe
jle
scas
pushl
mov
or
add
mov
adc
sbb
rclb
or
sbbb
fsubs
repz
inc
cmp
movsl
cli
jae
push
push
dec
xabort
mov
movnti
imul
mov
cmpb
cltd
and
inc
mov
pushf
cmp
adc
xchg
int
andl
dec
scas
mov
xchg
into
cltd
push
inc
call
in
test
lret
mov
clc
push
pop
and
mov
inc
jnp
mov
add
lds
or
sbb
xchg
sub
lods
xchg
sub
adc
fsts
test
xchg
mov
mov
lahf
dec
shll
jno
dec
outsb
pushf
ljmp
cli
xchg
cmp
in
push
xor
xor
or
sub
pop
mov
rorl
test
loope
inc
xor
or
push
jg
xor
cmp
add
sub
mov
loopne
clc
cld
jb
mov
and
sub
push
pop
mov
aam
jbe
mov
pop
fsubl
cmp
jmp
and
es
pop
adc
mov
shrb
cs
hlt
cwtl
movsb
xchg
xchg
inc
lcall
test
loop
lea
ss
ret
loopne
pop
push
add
in
sti
jno
or
js
out
mov
adc
rol
xchg
cli
inc
dec
cmpsl
mov
faddl
or
xor
test
stos
push
and
les
lods
fstps
sub
fisttpl
test
lods
fcoms
mov
xchg
test
mov
test
xchg
stos
xchg
stos
inc
lcall
pop
xor
cmp
sbb
sti
iret
js
jle
xor
xchg
leave
loop
xchg
cmove
sbb
call
add
popl
xor
mov
sbb
movsl
ret
fcom
push
mov
push
insl
loope
xchg
fld1
jb
xor
enter
es
sub
addl
mov
mov
cwtl
cmp
jmp
mov
adc
fsts
das
jae
mov
sbb
push
jne
in
fists
add
sti
jns
cmpsb
dec
aaa
mov
and
mov
mov
sbb
andb
or
mov
jb
cli
lods
push
sub
jmp
pop
and
adc
mov
lock
repz
adc
jl
pop
sbb
inc
inc
pop
ret
xchg
stos
xor
pop
loop
mov
sbb
movsb
push
sub
mov
mov
push
xlat
lahf
cli
js
rcrl
cmp
in
testl
std
pushl
sub
mov
add
cmp
push
push
lods
xlat
push
in
movsb
mov
cltd
jo
cmp
fsubs
popf
jb
mov
sbb
aam
aaa
fs
dec
inc
aaa
xchg
dec
in
inc
xor
int3
mov
sub
inc
fadd
or
cld
out
les
inc
inc
mov
jp
dec
jmp
pop
jae
mov
call
jo
sub
ja
outsl
add
jecxz
cld
test
add
add
test
xor
mov
mov
sbb
push
dec
test
pop
mov
jne
push
cld
pop
sub
push
mov
push
push
andb
mov
scas
sub
das
cmp
sub
in
mov
push
cmp
lods
mov
mov
pop
fldl
mov
jle
mov
jge
jns
cmp
out
addr16
addr16
cmp
enter
imul
and
or
shll
cmpsb
inc
iret
sbb
xor
inc
mov
sbb
mov
in
dec
inc
mov
dec
mov
xor
inc
inc
mov
fisubs
xchg
sahf
adc
pop
aas
fdivl
jge
pop
dec
aaa
inc
lea
add
add
xchg
xor
leave
jg
and
mov
add
leave
add
and
movsb
push
push
push
les
and
dec
jae
fidivl
xchg
insb
push
cmp
sbb
lret
inc
nop
cltd
nop
std
cmpsb
add
jbe
dec
push
push
inc
lcall
inc
pop
lahf
lret
data16
jnp
cmp
loope
add
out
jl
jl
js
push
push
idivl
adc
sbb
js
pop
mov
jp
mov
push
lods
inc
movsl
xchg
jbe
mov
pusha
jo
jnp
mov
push
aad
dec
iret
sbb
aam
aaa
jle
cmp
and
inc
jne
pop
repz
adc
mov
push
test
or
pop
stos
shll
mov
enter
inc
ja
pop
loopne
test
pusha
xor
dec
jo
sub
ja
pop
jmp
mov
cld
jg
push
add
and
mov
mov
and
fstl
push
shrl
push
and
shr
xor
lods
dec
mov
in
mov
insb
push
ja
test
mov
push
pop
add
gs
push
cmp
testl
fistpl
js
jno
dec
push
insb
test
pusha
jp
and
and
hlt
std
mov
fucomip
js
inc
sub
adc
inc
loop
mov
pmulhw
add
xchg
int
inc
pushf
pop
mov
push
cmp
inc
out
mov
cmp
into
jns
fs
sti
cmc
mov
int3
mov
push
or
jl
and
les
mov
insl
test
mov
xor
pop
or
or
imul
fcomps
sti
sbb
cmp
add
lds
mov
mov
add
sbbb
sub
xchg
xchg
pushl
daa
lret
inc
std
test
pushf
fwait
pop
and
out
cld
stos
inc
and
xchg
mov
xchg
push
push
jg
mov
outsb
fstps
idivb
xor
test
cmp
sub
aaa
stc
sbb
movsb
push
sub
mov
inc
pusha
push
lock
stc
adc
bound
pushf
out
jmp
js
mov
idivl
add
pushl
rcrb
dec
in
mov
sub
fsubs
insb
jbe
sbb
mov
lcall
mov
cltd
enter
mov
xor
mov
mov
and
fistl
or
fisubrl
or
ljmp
shrl
mov
add
fidivrs
movsl
mov
aad
ja
lock
pop
push
sbb
jbe
and
arpl
add
and
lods
pop
and
mov
push
repnz
mov
jo
test
xchg
outsb
push
mov
push
push
dec
cmpsl
inc
das
fwait
sbb
mov
scas
jb
cmp
cmp
lahf
pop
loope
jne
dec
lahf
fimull
hlt
cltd
in
idivl
and
std
mov
inc
cwtl
call
push
or
adc
jbe
cli
mov
mov
test
pop
lea
stc
out
sbb
mov
pop
hlt
fdivs
and
inc
inc
jb
test
sub
loopne,pn
push
dec
dec
mov
mov
push
mov
js
icebp
cmp
mov
cmp
fists
add
hlt
mov
imulb
int
inc
xor
or
ret
inc
aaa
mov
mov
or
adc
stos
jb
pop
push
push
inc
mov
rclb
adc
mov
popf
test
cmp
outsb
push
cld
jbe
jge
push
arpl
cmpsl
push
outsl
call
scas
dec
pop
sbb
movsb
push
sub
mov
inc
pusha
push
je
test
lods
pushl
popa
or
jge
orl
jge
jns
js
out
gs
push
pop
dec
and
xchg
jg
pop
jne
lods
xlat
insb
jae
cli
jne
mov
pop
mov
outsl
adc
data16
popf
adc
cmp
or
sub
dec
mov
repz
inc
inc
std
xor
or
pop
jg
mov
pop
add
les
pusha
loope
or
add
pushf
cmp
dec
jp
sub
jg
inc
add
and
mov
arpl
ss
push
lret
push
mov
jne
sub
inc
js
and
dec
shll
cmp
test
xchg
outsb
push
mov
das
cmc
sbb
xchg
dec
mov
out
jne
gs
fwait
dec
fs
mov
sub
pop
pop
jg
lahf
inc
pusha
popl
les
clc
fs
dec
scas
xlat
in
or
jmp
pushl
pop
adc
cmp
and
xchg
mov
sbbb
push
sub
test
mov
cld
popf
out
push
or
cmp
scas
add
icebp
mov
nop
sub
movsb
fadds
in
dec
ret
add
or
pop
pop
mov
imul
ja
stos
push
adc
add
sbb
jns
pushf
rcrl
sub
addb
xor
or
lds
clc
sub
ja
and
fists
cmp
and
sbb
push
clc
mov
pop
ljmp
cmp
pop
add
in
cwtl
bound
lods
roll
ret
cwtl
fmuls
pop
daa
or
inc
sbb
cmp
jns
inc
leave
xchg
fwait
cmpl
mov
je
jg
mov
cmpsl
mov
repz
testl
add
rolb
or
xchg
mov
movsl
movsl
andl
cli
xor
int
xchg
xorl
mov
add
clc
sbb
mov
cmovno
push
xlat
cs
movsb
incl
cmp
ljmp
push
test
mov
sub
fwait
sahf
adc
fdivrl
mov
out
lock
fldl
jg
add
stos
mov
rcr
inc
sub
imul
adc
mov
mov
cmp
mov
pop
cmc
jno
out
mov
aaa
lcall
ret
sub
mov
mov
sbb
pop
inc
cmp
sub
lock
in
pop
mov
fstl
fsubl
push
add
ficoms
jg
mov
shl
dec
js
adc
jb
add
iret
push
cmp
rclb
mov
rcll
push
fidivrs
cli
mov
push
pop
adc
pop
dec
out
mov
jge
outsl
scas
inc
sar
mov
fiadds
cmp
xchg
xchg
jmp
jle
pop
xlat
mov
cmp
pop
pop
inc
int
pop
loopne
stos
cmp
pop
mov
cmpl
cmp
xor
inc
mov
add
cli
lock
cltd
inc
fs
xor
ss
pop
add
jno
test
fisubl
js
pop
insl
cmp
rcr
cmp
pop
cmp
shrb
mov
dec
movsl
sbb
pusha
lret
cltd
fsub
cli
add
xor
jno
aad
lds
push
jg
inc
xlat
cld
or
cmp
call
cmp
dec
add
popl
mov
push
aam
stc
bnd
push
lahf
imul
sub
mov
xchg
jns
shlb
cmpsb
sti
or
jb
mov
or
out
enter
dec
add
jmp
es
mov
jmp
add
push
adc
lret
push
dec
mov
cltd
fisubs
in
xor
jae
push
xchg
or
mov
jae
sbb
cmp
imul
stc
add
mov
pop
cli
or
movsb
ret
inc
cltd
pusha
psllw
jns
sub
cmp
sub
cmc
sbb
movsb
push
scas
xchg
bound
sub
test
push
pop
arpl
or
dec
sub
mov
add
pop
cld
and
xchg
ret
pushf
bnd
xchg
lret
out
jns
into
mov
sti
out
push
jb
add
arpl
int3
push
cmp
rolb
mov
or
call
inc
jge
imul
stos
cmp
into
clc
hlt
pop
fidivrs
jo
loop
mov
add
jb
adc
inc
inc
jp,pt
maskmovq
testl
aad
sub
ljmp
sti
fidivrl
push
push
fimuls
imul
push
mov
loopne
mov
inc
lahf
push
imul
xlat
les
and
add
mov
sbb
dec
inc
sbb
lds
sbb
and
movsl
dec
inc
lahf
mov
mov
jmp
shl
cltd
mov
and
mov
mov
pop
daa
sub
pop
inc
cmp
or
pushf
xchg
popf
xchg
jb
scas
push
sbb
lahf
scas
jg
push
cltd
cmp
pop
dec
pushf
and
and
dec
or
or
inc
dec
or
out
or
test
xchg
sub
pop
ret
fwait
xor
enter
mov
jne
outsl
cli
rcll
mov
call
mov
cmp
mov
cltd
and
fwait
push
mov
movsb
lea
push
adc
adc
adc
arpl
or
add
out
and
xchg
shl
pop
test
sbb
jecxz
inc
add
pop
mov
sbb
pop
lret
add
xorb
pop
loop
cmpsl
scas
add
stos
shrl
subb
mov
repz
fs
daa
icebp
add
push
sbb
jnp
xor
mov
int3
dec
cmp
xchg
dec
mov
leave
jns
dec
inc
mov
sarl
inc
pushf
add
sbb
jmp
mov
shr
loopew
dec
add
repz
jecxz
sub
dec
mov
repz
xor
imul
mov
fldenv
mov
cmp
fstl
ret
dec
pop
add
mov
mov
in
jle
lret
push
cmp
loopne
cmc
mov
cmc
xchg
fsts
rcll
jb
inc
ficomps
lret
push
xchg
add
out
and
pop
jmp
rol
or
jo
bnd
push
adc
mov
sbb
rol
adc
ret
dec
leave
inc
adc
mov
pop
or
test
lahf
stos
sub
divb
or
iret
sbb
rcr
xor
rcrl
movsb
jmp
fdivl
test
test
or
imul
cmp
pop
mov
jmp
mov
into
xor
xor
cmc
xor
or
mov
fdivs
addr16
xchg
sub
outsb
mov
jp
jnp
and
or
pop
fiadds
mov
clc
sbb
push
or
std
mov
sbb
and
add
mov
sub
sub
and
push
inc
mov
popa
xchg
insl
or
xor
and
pop
scas
shrb
sub
imul
jns
mov
sahf
adc
jecxz
popf
fwait
add
jl
xchg
nop
shlb
fsts
nop
pop
ljmp
pusha
xor
rorb
inc
inc
mov
lds
mov
sub
pop
je
pop
iret
pop
test
out
cmp
xchg
ret
or
daa
xor
xchg
roll
lods
sbb
jb
mov
icebp
push
jl
mov
dec
test
mov
mov
in
leave
push
mov
mov
push
rcrb
adc
shll
mov
les
stc
repnz
or
test
stc
stc
jb
lret
pushf
insl
prefetchwt1
mov
enter
and
hlt
sbb
push
push
jp
dec
mov
add
mov
pop
gs
xor
mov
mov
push
cmp
pop
mov
push
cld
ds
cmp
clc
add
xor
or
rclb
sub
nop
bound
rorb
dec
sub
push
dec
xor
roll
dec
pusha
pop
into
das
add
adc
mov
testl
xchg
mov
add
cld
jo
cltd
push
dec
cmc
add
or
sub
mov
mov
fstl
aaa
std
add
js
or
jno
mov
movl
xchg
mov
les
adc
rcr
and
rclb
test
xor
insl
cmc
outsl
lcall
int
inc
stc
pusha
xor
push
adc
inc
mov
sub
push
or
dec
inc
sub
out
cmc
xor
and
jbe
pop
add
xchg
lods
lahf
leave
mov
or
pop
push
add
lea
cmp
repnz
jbe
add
mov
aas
cli
or
mov
les
pop
adc
mov
push
xlat
sub
dec
sbb
sub
lahf
mov
xor
mov
sbb
xchg
andb
fmull
xchg
add
xchg
dec
movsl
or
inc
lret
fwait
lods
adc
shrb
jnp
xchg
mov
cmp
fdivrl
sti
and
mov
cmp
adc
dec
shlb
call
aam
stc
repnz
femms
inc
std
mov
and
int3
pop
fidivrs
jnp
pop
icebp
fstps
outsl
or
rorb
dec
add
jb
mov
or
sub
cmp
sbb
ret
pop
push
test
dec
add
jmp
sarb
sti
imul
jns
aas
cmp
dec
or
divl
inc
mov
in
ja
or
add
movsb
jl
bound
sbbb
aaa
hlt
repnz
inc
cmpsl
adc
fnstcw
fldenv
lods
dec
push
xchg
imul
push
sbb
mov
cltd
nop
fbld
lcall
les
std
lock
sbb
pop
cld
sub
mov
dec
mov
iret
jg
mov
xor
jmp
subl
xchg
push
clc
mov
aam
pop
lcall
mov
inc
xor
inc
inc
jmp
insl
popf
jmp
ret
jp
xor
std
inc
mov
mov
cmp
mov
ja
ja
jecxz
sbb
lea
cmpl
scas
cmc
or
int3
outsb
cmc
jmp
jo
xchg
ljmp
sbb
jl
stos
mov
mov
fwait
sahf
mov
cmpsl
lods
lahf
lret
dec
jnp
push
jno
jmp
sub
mov
push
lods
fwait
cwtl
int3
addr16
ret
and
cld
push
cmp
repnz
stc
scas
cmpsl
das
loope
mov
cli
cli
mov
pop
into
test
xchg
addl
imulb
fildl
vmovdqu
add
pop
ret
mov
fwait
lea
or
fcoml
aas
jge
dec
enter
cld
pop
jecxz
push
pop
xchg
sti
loopne
lret
pop
pop
mov
mov
mov
inc
fbld
adc
fwait
lret
in
mov
fldt
mov
nop
mov
loop
adc
xchg
mov
enter
imul
add
in
int
jg
jmp
ret
sub
daa
fwait
mov
movsl
adc
leave
mov
les
jg
sbb
xor
xor
test
xor
add
inc
rorl
sub
jbe
pop
dec
inc
out
pop
aaa
xchg
xor
lds
sbb
mov
pop
scas
cmpl
pushf
fucom
loopne
dec
push
jno
lods
lock
clc
push
adc
add
xchg
mov
fisubl
lret
dec
dec
inc
sbb
fnstsw
cs
test
mov
fucomi
sbb
inc
xor
std
lock
iret
add
jge
mov
sub
xor
mov
cmp
cmpsb
cmp
std
cmp
and
lea
mov
mov
jmp
adc
and
shrl
xor
ljmp
push
adc
int
pop
bound
and
pop
cmp
push
loopne
in
mov
jo
pop
jbe
xchg
insb
out
fs
movsb
dec
and
mov
fbstp
jg
ret
xchg
push
mov
movsb
inc
scas
xchg
aaa
shl
repnz
movsl
jne
jne
xor
mov
jae
xor
out
arpl
dec
shrl
dec
ret
test
hlt
sub
pusha
inc
lds
rorl
ja
fistl
xchg
add
xchg
cmp
fidivrs
mov
jmp
cmp
pop
stc
xlat
adc
cltd
ds
mov
and
andl
sti
lea
push
pop
add
cltd
pop
xchg
imul
jge
movsb
lret
inc
mov
repz
jge
jmp
ljmp
adc
inc
loopne
pop
in
setb
sub
and
sub
imul
ljmp
jg
sbb
pop
jl
or
repz
mov
xor
push
inc
clc
jae
cwtl
dec
mov
mov
lret
inc
dec
ss
mov
sbb
xor
aam
sbb
xor
repz
and
or
arpl
lock
pop
int3
ret
test
in
sub
and
lds
mov
inc
lret
dec
and
inc
dec
ret
out
sbb
jbe
cmc
mov
int3
repnz
pop
lret
aam
cli
movsb
add
or
loopne
add
stc
mov
mov
inc
dec
out
loopne
mov
mov
rcr
mov
mov
or
out
jecxz
jne
sbb
jae
das
jb
cmpsb
es
xor
dec
cmp
push
je
shrb
mov
fs
mov
sbb
jmp
shll
jmp
add
scas
ret
pop
nop
in
mov
jno
pop
cmp
jns
inc
mov
jle
cmp
loope
xor
xor
or
inc
mov
push
sub
jmp
jo
sbb
dec
mov
jg
pop
and
dec
xor
cmp
scas
xlat
lds
mov
in
mov
movsb
or
pusha
dec
ret
test
in
or
xchg
pusha
xor
mov
pop
cwtl
dec
xchg
cli
aaa
mov
loop
pop
mov
sti
dec
out
jg
leave
dec
daa
pop
insl
mov
aaa
push
and
sbb
push
andb
mov
mov
pop
stos
aam
mov
jnp
inc
push
mov
cmpsl
add
aad
pop
cmpsb
shrl
xor
out
testb
enter
mov
int3
pop
loop
dec
jge
fcomps
inc
and
mov
gs
jbe
jno
xor
shll
jb
mov
or
pop
jecxz
ret
or
mov
inc
or
arpl
adc
cmp
sbb
mov
cli
cmp
divl
jo
stos
cmpsl
xor
ja
cmpsb
inc
test
iret
jae
xor
jbe
movsl
loopne
mov
inc
mov
adc
push
adc
lcall
sbb
lret
jno
lods
hlt
aad
fsubp
xor
fs
adc
stos
lret
out
jp
jecxz
pusha
scas
push
test
into
adc
xor
imul
enter
add
jecxz
out
xor
jle
mov
test
mov
ret
push
jecxz
out
frstor
cwtl
jmp
cmpsb
lret
bound
pop
push
xchg
inc
rcll
aam
xor
cmpsb
push
cld
push
bound
push
daa
aad
jne
pop
aad
mov
arpl
sbb
cmp
sbb
push
std
aad
jae
push
and
mov
shlb
inc
lahf
dec
or
inc
dec
xchg
dec
xor
mov
fwait
outsl
and
mov
divl
pop
cmpsb
loop
test
sub
jl
xchg
in
xor
push
jecxz
into
jb
daa
jno
inc
test
add
sub
mov
mov
mov
pop
out
inc
ljmp
imul
xlat
xor
and
ret
xchg
loope
lcall
sbb
hlt
jmp
pop
aas
testl
mov
xor
cwtl
dec
and
cli
pop
movsb
add
insb
adcb
in
test
mov
xchg
in
loopne
loope
fs
daa
aad
cmpsl
pusha
fdivs
add
out
push
inc
ffree
mov
pop
jns
jmp
iret
add
sarb
push
pop
xchg
lds
aas
xchg
leave
jge
cmp
ja
ret
in
ret
aas
mov
ja
les
or
xlat
aam
ja
adc
and
scas
xchg
aaa
shl
inc
scas
push
inc
push
dec
dec
jp
insl
push
scas
sahf
cmp
and
xor
push
inc
icebp
mov
shrl
rol
test
or
lds
adc
stos
add
leave
lods
jle
xchg
ljmp
mov
jmp
stc
rcr
icebp
cltd
jle
mov
pusha
mov
andl
mov
xchg
test
jle
adc
dec
lods
or
xchg
clc
sbb
cmpsl
dec
into
int
mov
mov
bound
adc
inc
shlb
push
and
xor
dec
mov
enter
xchg
shlb
mov
pop
dec
scas
out
xchg
cmpsl
jle
ja
fwait
div
jb
std
scas
cmp
je
hlt
test
mov
in
push
push
fldenv
lahf
iret
push
cli
mov
mov
mov
fwait
pop
stos
ret
cmpsl
xchg
ficoml
dec
sbb
ljmp
push
lods
mov
in
adc
pop
sbb
or
scas
jne
jbe
mov
dec
cs
in
and
push
sahf
in
xchg
in
stos
jne
iret
mov
cmp
addb
fisttpll
push
int
cmpl
or
sub
out
in
hlt
inc
adc
push
loop
sub
xchg
pop
icebp
xchg
adc
rcrl
inc
fwait
loopne
jb
sbb
test
loope
shlb
jb
aaa
ffree
inc
cwtl
ds
rclb
sti
imul
dec
sahf
gs
aam
out
mov
push
aas
daa
and
jne
les
cmp
add
push
inc
ret
pop
sub
and
push
push
jae
loop
je
mov
pop
sub
cmp
arpl
lods
push
push
cmpsl
mov
dec
mov
mov
clc
add
sahf
mov
pop
pop
mov
je
gs
pushf
out
xchg
dec
and
cmpsb
xor
shll
inc
cmp
aam
push
mov
popf
js
pop
fisttpl
in
cmc
in
mov
int3
inc
sbb
scas
subb
lahf
or
gs
cwtl
out
adc
lret
inc
xchg
ret
mov
or
mov
fsubrs
scas
mov
inc
sub
je
lods
into
ret
jg
jae
mov
ljmp
in
pop
inc
shr
aaa
rclb
sbb
scas
sbb
cmpb
mov
hlt
xchg
xor
addr16
insb
sbb
bound
ffreep
fcomps
je
les
push
inc
cld
push
add
add
pop
pushl
scas
push
jle
lds
fnstsw
hlt
inc
imul
imul
or
test
push
lret
pop
stos
dec
push
jmp
push
and
mov
shll
xor
cmp
cmp
xor
dec
sub
mov
insb
sahf
imul
testb
push
fs
jne
dec
sahf
loopne
shrb
xor
mov
push
jo
sub
inc
xchg
mov
lahf
jns
sbb
repz
incl
inc
adc
loop
adc
mov
inc
addl
sbb
lds
ficomps
push
sahf
mov
sbb
and
call
inc
sub
xor
fbstp
lock
shlb
std
loope
fs
xchg
je
dec
into
imul
sub
xchg
push
cmpsb
pop
std
cmpl
aam
cmp
out
repz
jl
mov
out
push
jecxz
pop
aas
fld
inc
sbb
inc
enter
cld
or
pop
repz
imul
adc
ret
test
aaa
lea
push
fistpll
arpl
xchg
push
dec
jnp
mov
push
aam
sub
rcrb
mov
ror
js
mov
dec
mulb
hlt
gs
aad
pop
sbb
addr16
in
out
dec
inc
orb
je
pop
addb
addl
cwtl
loop
adc
add
scas
xor
mov
sbb
rolb
cmp
or
ficompl
outsb
jno
icebp
out
mov
test
cmpsb
mov
test
aam
dec
xchg
dec
jo
pop
test
ret
pop
lods
or
les
fstp
imul
push
das
cmc
and
jo
ja
fidivl
jmp
movsl
and
test
fucomip
repz
scas
xlat
fstpt
mov
incb
cmc
adc
or
push
cwtl
dec
or
inc
push
cmp
lds
push
dec
int3
xchg
jmp
mov
clc
push
sahf
mov
add
subl
cmp
movsl
gs
pop
rcrb
insl
or
movb
lods
fcomp
int3
ficomps
fmulp
jns
int
mov
arpl
pop
sub
and
lahf
bound
in
dec
and
xorb
out
cmovo
add
xchg
and
jne
xchg
ret
mov
add
cmp
jg
sub
mov
pop
jnp
inc
jbe
loopne
js
mov
out
cmpb
mov
xchg
dec
push
dec
inc
jl
pop
sbb
adc
mov
addr16
adc
or
pop
xchg
shll
les
mov
jl
inc
push
mov
in
sub
fdivl
add
sbb
aam
and
out
cs
dec
or
push
mov
jl
subb
jmp
ljmp
mov
cmpsb
mov
clc
dec
cld
sahf
mov
sbb
je
gs
jge
repz
and
cmpb
ret
and
stos
mov
adc
or
cli
jae
ja
sub
enter
adc
pop
jns
mov
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
std
pushl
jne
xchg
push
pop
dec
jg
cld
push
xor
out
xor
xor
sbb
pusha
jo
test
inc
insb
mov
aaa
ret
insb
cmp
xor
sbb
out
test
dec
inc
cmp
mov
decl
lcall
mov
inc
int
inc
andl
loopne
or
ds
or
jmp
mov
out
popl
pop
add
sbb
popa
mov
outsl
push
push
mov
inc
inc
adc
dec
push
pop
dec
out
adc
mov
mov
mov
dec
pop
push
jg
sub
pop
testb
lds
vandps
mov
xchg
cmpsl
outsb
sub
sub
pop
pop
scas
dec
fs
lods
fcoms
int3
ficomps
leave
imul
fistps
inc
jg
stc
mov
adc
xlat
in
subl
clc
paddq
inc
stos
push
stos
fs
cmp
imul
das
jecxz
xchg
inc
out
ja
das
les
xchg
adc
nop
add
pmaxub
mov
aam
cmp
or
adc
lock
push
mov
sub
xor
pop
add
push
std
jecxz
arpl
xor
pop
add
inc
xlat
sahf
test
pop
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
or
mov
and
cwtl
push
aas
mov
es
push
mov
jmp
push
pop
aas
mov
les
inc
jb
pushf
mov
out
insb
jns
fimull
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
sahf
es
leave
xchg
cmp
pop
jns
or
mov
mov
js
ja
out
jg
js
incb
nop
les
in
mov
push
out
cmp
popa
add
sbbb
inc
mov
mov
dec
jno
push
inc
xchg
dec
adc
sbb
hlt
pop
repnz
cwtl
ds
jbe
leave
pop
cmpsb
push
mov
sub
lock
nop
mov
out
mov
jp
inc
clc
je
out
movsb
mov
push
roll
fisttpll
decl
adc
int3
aad
jp
sbb
adc
cld
jg
or
arpl
cmp
add
dec
in
adc
loop
and
pushf
scas
scas
sbb
roll
sub
testb
and
orl
loop
inc
cmp
pop
int
adc
mov
adc
jnp
xchg
mov
sbb
mov
pop
dec
lods
pop
adc
into
adc
lret
push
inc
ds
cmp
mov
pop
cmp
xchg
add
daa
push
pop
push
je
lcall
dec
push
fidivs
stc
fldenv
mov
and
dec
aam
fwait
xlat
inc
xchg
rcr
in
pop
cmpsl
leave
pop
cltd
adc
or
je
loope
cmp
and
pop
pop
sub
inc
pop
movsl
fdivrl
int
pop
sbb
mov
add
leave
fstpl
add
loopne
sub
call
cmp
jmp
xchg
fldt
mov
insl
cmp
popa
sub
ret
data16
cmp
xor
push
add
and
inc
stos
mov
sbb
movsb
movsl
xchg
divb
or
sbb
ja
jbe
gs
jae
cmp
dec
dec
xor
push
jge
mov
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
xor
rcrb
add
add
push
in
xor
testl
cwtl
sti
jo
inc
stos
pop
iret
sub
and
outsb
cmp
ret
inc
cmp
cli
cmp
sbb
jo
xor
aaa
rcr
icebp
push
sbb
mov
addr16
and
arpl
in
sub
test
mov
dec
lods
jo
jecxz
ljmp
jge
popf
cs
xor
push
mov
in
cmp
pop
pop
popa
and
inc
push
mov
fs
sbb
or
inc
jmp
jle
int3
adc
mov
outsl
sub
int
xchg
ds
and
inc
out
movsb
insb
inc
out
mov
push
and
fcompl
pop
insb
dec
scas
fsts
int
mov
sub
int3
pop
sbb
ja
sti
mov
sbb
jecxz
lret
push
fs
cmp
and
push
push
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
mov
xor
cwtl
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
mov
fsubl
xor
adc
subl
push
loope
cld
arpl
shlb
xor
jbe
adc
dec
push
fimuls
push
xchg
push
mov
loop
cli
notl
ss
enter
adcb
in
add
jo
ds
inc
mov
xchg
cld
dec
insl
ljmp
mov
andb
arpl
push
mov
jmp
push
pop
aas
mov
les
inc
push
xor
pop
xor
insb
jns
fimull
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
sahf
es
leave
xchg
cmp
pop
jns
or
je
fisttps
jg
adc
mov
push
aad
pop
jmp
outsl
push
je
jne
addr16
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
mov
test
or
mov
adc
shlb
in
mov
jb
dec
shl
jl
mov
test
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
xor
pop
js
mov
cmpsl
xor
outsb
add
pop
push
sub
inc
inc
jmp
add
sbb
or
inc
xchg
arpl
int
ja
dec
bound
lahf
jne
popa
mov
and
cmc
sub
dec
cld
sahf
mov
add
push
rcr
jg
mov
pop
repnz
xor
jmp
scas
sub
lcall
in
lods
rcrl
lcall
fdivr
fdivrp
and
std
rcrb
pop
ss
xor
insl
out
and
pushf
xorb
out
cmovo
adc
add
cmp
or
rcl
and
mov
lahf
mov
cmp
iret
jns
sbb
sahf
fwait
sti
in
popf
mov
mov
jg
bound
je
fmul
push
lods
popa
jns
adc
xor
fcomps
je
xorb
je
push
movl
or
clc
fsubs
adc
outsl
cmpsb
sarb
mov
bound
inc
mov
mov
cli
mov
mov
into
lahf
sbb
add
int
inc
pop
adc
pop
pop
add
pop
dec
adc
pop
add
push
sbb
popa
insl
ret
fisubrl
ja
pop
outsl
dec
insl
xor
adc
jno
iret
mov
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
add
popl
je
ja
addr16
jl
dec
cli
sbb
xchg
loope
test
mov
addr16
cmpsb
scas
mov
test
test
push
pop
mov
es
xchg
mov
es
popf
aas
mov
outsb
inc
jecxz
lods
lcall
pop
or
push
xor
mov
xor
ljmp
addr16
es
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
imul
ja
mov
add
in
cmpsb
sbb
lret
cmpsl
adc
shrb
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
fsubp
stos
xchg
ror
push
clc
daa
out
xchg
xorl
leave
or
pusha
push
jg
push
test
int3
addb
cs
das
cmp
out
sti
jl
fiaddl
inc
mov
jo
std
cltd
outsl
push
cmp
pop
mov
mov
pop
int3
fistps
into
jns
sbb
call
pop
je
jo
in
cmc
xor
xor
loope
add
push
xchg
ret
pop
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
rolb
ss
jnp
out
test
cld
and
stos
std
xor
add
and
fstpl
cmp
lret
mov
stc
push
and
insl
in
mov
sbb
lock
outsl
adc
add
pop
sub
push
and
push
shl
jle
adc
mov
cld
lret
mov
in
adc
push
mov
enter
ret
xor
imul
je
inc
mov
jmp
or
push
mov
cmp
test
and
push
sub
mov
std
lods
pop
pop
js
xchg
cmp
loopne
mov
xor
pushl
test
insb
mov
je
das
je
pusha
in
inc
sti
test
imull
jne
data16
pop
lods
mov
jb
sub
pop
jl
fisttps
jecxz
jg
sbb
or
mov
cmp
in
imul
mov
lods
cmpsl
mov
fistpl
sbb
testb
repz
jge
addb
adc
inc
push
mov
cltd
pop
adc
xchg
dec
lds
stos
mov
insb
mov
sub
gs
cmpsb
fsubrl
bound
push
loope
dec
adc
lcall
out
xchg
aas
sbbb
jae
mov
push
jle
lds
cmc
xorb
fst
push
pop
imul
daa
sbb
pushf
dec
dec
sub
pop
mov
xchg
stos
jns
dec
mov
js
lcall
stc
jle
mov
leave
stc
paddq
sbb
dec
mov
jl
fs
cmp
aam
push
mov
inc
sbb
mov
sub
add
sbb
cmp
aaa
jl
dec
or
cmpsl
fst
lds
fs
loope
in
sub
pop
sbb
adc
loopne
mov
stos
shl
shrl
push
les
mov
pop
movsb
pop
insb
movsl
or
clc
fsubs
adc
outsl
cmpsb
sarb
mov
bound
inc
xor
xchg
mov
divb
or
sbb
add
int
inc
pop
adc
pop
pop
add
pop
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
xor
push
push
jge
std
push
fisttps
fstps
add
test
aad
pop
pop
ljmp
shll
push
leave
xchg
cmp
cmp
push
in
dec
push
test
cmp
incb
aad
test
jl
dec
cli
sbb
xchg
loope
test
mov
mov
cmpsb
scas
xor
xor
test
push
pop
mov
es
xchg
mov
push
aaa
popf
aas
mov
outsb
pop
jecxz
lods
sbb
sbb
or
sub
pop
adc
jo
mov
daa
jno
add
xor
ror
js
out
jge
or
addb
sub
push
incl
add
popa
pop
cmc
lea
divl
outsb
jb
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
shrb
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
in
xchg
ror
push
clc
daa
out
xchg
in
enter
mov
outsl
in
xor
outsb
lods
sub
orb
xor
test
xlat
add
das
xor
sbb
sub
pop
test
jmp
xchg
loopne
pop
int3
fistps
jo
jns
sbb
call
pop
je
jo
in
cmc
xor
xor
loope
sbb
push
xchg
and
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
and
ss
jns
out
test
cld
and
stos
std
xor
faddl
inc
lcall
inc
jp
in
gs
sbb
call
lret
adc
jbe
sub
push
dec
jb
insl
and
mov
test
pop
mov
sarl
insb
fsubr
jbe
mov
push
push
mov
sub
sub
xor
sbb
loop
daa
fstpl
mov
xchg
mov
inc
pop
jns
inc
inc
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
mov
negl
mov
inc
stos
push
mov
les
cmp
imul
das
jecxz
xchg
sbb
jo
jnp
aas
add
popa
nop
or
dec
into
fsub
std
jg
sbb
or
mov
cmp
in
imul
mov
lods
out
arpl
stc
fistpl
sbb
testb
repz
jge
addl
inc
push
fwait
mov
loope
popf
pop
adc
xchg
dec
jl
xchg
or
dec
loopne
push
mov
pop
gs
adc
mov
movsb
mov
in
pop
inc
pop
insb
fadd
xchg
lds
mov
into
dec
das
lea
cmc
xorb
fst
push
pop
imul
daa
sbb
cwtl
dec
dec
sub
pop
and
call
jns
dec
mov
js
lcall
sti
jle
mov
leave
cmc
paddq
fdivl
mov
jl
fs
cmp
aam
jne
dec
lods
or
mov
or
and
sub
mov
mov
leave
test
mov
adc
xor
mov
cmp
das
or
xchg
call
lods
mov
rcr
lcall
inc
add
div
jmp
test
pusha
fsubs
lock
mov
mov
popl
pop
add
xchg
push
adc
dec
and
and
sbb
sbb
out
adc
mov
mov
stc
arpl
dec
adc
lock
push
pop
jmp
outsb
and
cmc
push
mov
dec
lods
push
movsl
int3
ficoms
cmc
pusha
mov
ljmp
fs
cltd
inc
andl
cmp
outsl
push
sbb
sub
fmuls
cli
cltd
cmp
fstpl
sbb
daa
adc
push
pop
inc
std
dec
cli
pop
cwtl
in
lock
popa
pop
cmpsl
push
and
movsl
inc
ds
dec
push
mov
cmpsb
push
fmulp
jle
xor
pop
add
push
std
jecxz
arpl
mov
mov
xlat
dec
adc
add
iret
sbb
in
cld
inc
push
mov
jmp
pop
dec
jnp
ja
inc
dec
incb
divl
add
mov
or
mov
mov
mov
mov
jae
lods
pushl
fadd
test
call
test
xchg
sub
movsb
push
lds
jo
stos
push
adc
leave
lods
pop
sbb
shl
sbb
lods
ret
int
gs
int3
bnd
iret
scas
es
loop
std
shll
jae
shll
cmpsl
jbe
mov
aam
mov
jnp
inc
push
cwtl
and
push
fwait
or
out
pop
jo
and
jnp
xor
cltd
out
push
push
clc
mov
enter
cmpb
xchg
sub
test
stc
mov
dec
sahf
gs
pop
shll
aad
repz
les
jg
cmpsl
mov
xor
sti
sti
mov
sbb
inc
or
adc
jnp
add
test
cmpsl
xchg
fnop
mov
and
sub
or
push
push
ret
mov
sbb
faddl
pop
and
xor
icebp
das
cwtl
pop
lock
push
sbb
inc
pop
loope
inc
sbb
push
ljmp
sub
mov
jge
dec
dec
xchg
ss
lods
lock
cmp
arpl
xlat
ret
stos
cmc
mov
call
popa
je
addl
ljmp
imul
xchg
out
ljmp
sti
je
inc
jp
cmp
jb
xchg
xor
or
cld
pop
out
and
mov
add
mov
mov
push
push
adc
lds
xchg
iret
xor
ja
outsb
xor
xor
mov
dec
and
mov
insl
fiadds
repz
mov
xchg
mov
add
mov
add
and
adc
addr16
fdivrl
ljmp
fnstcw
mov
sbb
inc
jmp
lret
lret
ret
inc
dec
movsb
push
je
bound
js
ljmp
popf
mul
ss
cli
outsl
jno
sub
lcall
sti
and
jb
shrb
les
pusha
inc
aaa
and
test
dec
or
mov
mov
cs
stos
and
outsb
lcall
jp
bound
mov
sbb
sbb
in
push
sbb
jecxz
lds
add
imul
sti
sti
and
cmc
or
ret
inc
arpl
add
adc
lret
xor
inc
cmp
adc
dec
rcl
int
fcmovnb
add
test
lcall
lahf
inc
std
sahf
data16
pop
popf
lret
ret
cmp
push
imul
fbstp
sbb
ret
inc
and
jmp
add
aaa
xchg
out
sbb
mov
fcoml
xchg
lret
sub
ss
out
xor
in
jns
sbbl
sub
adc
add
cmpsl
and
pop
stos
xchg
add
mov
mov
test
shrb
mov
inc
sbb
push
sub
hlt
test
mov
popa
je
addl
and
or
mov
xchg
rcr
xor
mov
adc
adc
cmpsb
xchg
or
inc
pushf
jle
lea
jno
out
jns
outsl
das
add
jecxz
je
mov
and
leave
mov
lods
pop
mov
push
mov
xor
aad
repz
sub
pop
repz
repz
sti
inc
pop
out
lds
andl
push
and
mov
imul
mov
cmpsl
mov
ja
and
sub
repnz
xchg
inc
in
in
outsl
in
inc
mov
and
dec
pop
cmp
xchg
pushf
mov
sti
pushf
sarl
mov
cmpsl
xchg
test
lret
inc
rcr
ficoml
xor
stos
mov
stos
enter
dec
jno
or
mov
jmp
flds
sub
lock
lods
popf
inc
sti
xchg
mov
mov
cmp
outsb
js
and
mov
jle
insb
inc
push
add
rcl
outsb
fcmovb
leave
xor
mov
cmp
and
cmp
pop
dec
fiaddl
arpl
xor
lock
rcrb
mov
int3
adc
int3
jp
mov
push
xchg
jge
aad
das
je
xor
push
int
inc
xchg
fcomps
cmp
push
sti
sahf
ds
jo
mov
insl
loop
and
or
fs
cmp
mov
inc
cmp
sbb
dec
xchg
in
push
mov
adc
sahf
and
jle
adc
icebp
add
inc
fsubrs
mov
sbb
daa
popa
xchg
das
inc
stos
xchg
fwait
and
xor
jae
faddl
dec
insb
jbe
lret
xchg
pop
pusha
test
ficoms
js
push
jns
mov
push
adcl
add
mov
stos
sbb
lods
push
fsubr
xor
xchg
mov
call
fadds
cmpsl
movq
pop
xchg
mov
les
fwait
enter
je
dec
jl
jmp
fimuls
push
adc
test
popf
sub
popf
pop
sbb
and
mov
adc
jo
mov
call
lahf
lret
hlt
mov
push
and
mov
push
adc
mov
lahf
into
xor
sbb
iret
lea
xor
cmc
test
inc
inc
fstpl
lret
and
cmp
bound
les
jp
mov
or
lahf
hlt
and
popf
jle
pop
stos
push
inc
lcall
cli
sbb
and
pushw
inc
cwtl
mov
insl
inc
cli
xor
xchg
bound
sbb
loop
out
popa
aas
sti
mov
pop
pop
cmp
rcl
jo
pop
push
daa
mov
mov
jp
mov
lock
test
jmp
mov
jns
sbb
int3
xchg
gs
mov
gs
jge
mov
loop
xchg
add
or
sub
add
je
shll
sub
xor
popa
or
push
cmc
jne
mov
bound
adc
or
shlb
push
cwtl
cmc
mov
sub
mov
pop
mov
inc
sub
dec
push
mov
cs
movsb
mov
push
pop
icebp
adc
push
adc
mov
les
cmp
outsl
cmc
jae
fldt
arpl
ljmp
cmp
push
push
xor
xor
arpl
fwait
lods
orl
mov
in
leave
and
cmp
ja
leave
push
cwtl
ret
mov
inc
sbbl
ss
pop
cltd
fimuls
dec
aad
mov
jecxz
in
pop
push
and
mov
cs
cmpsb
insb
lahf
inc
pop
push
inc
aam
ds
mov
gs
jge
jmp
and
mov
fcmovnu
mov
sbb
enter
mov
inc
push
lcall
pop
push
stc
or
ljmp
lret
test
mov
mov
sahf
mov
out
push
and
add
jp
adc
adc
out
mov
test
popf
addr16
cmp
cli
mov
push
inc
mov
jnp
jmp
dec
popf
scas
sarl
add
jno
and
cmp
scas
fcmovb
imulb
mov
mov
inc
sbb
mov
loope
test
push
rcrl
and
mov
jmp
push
shlb
jl
dec
mov
fisubs
xor
mov
outsl
fwait
test
clc
in
pop
cmp
sub
and
mov
cmpsl
ret
adc
mov
jg
enter
scas
cmp
aaa
sbb
and
dec
xor
daa
adc
lret
inc
ja
ret
into
sbb
and
add
rorl
adc
cmp
call
out
mov
ret
mov
add
fsubrl
jo
scas
mov
cs
jg
mov
push
test
xchg
and
sbb
cmpsb
mov
sahf
shlb
fistl
fs
jnp
sbb
sub
mov
mov
in
xchg
lods
outsb
lods
scas
lock
push
rolb
shll
shll
enter
pusha
jle
sub
xor
test
pop
es
sarb
mov
sbb
xchg
pop
xchg
call
or
jecxz
loopne
pop
cmpsb
fstpt
insb
fidivrl
cli
sahf
imul
fsubrs
jmp
int3
int
push
enter
add
mov
dec
mov
inc
jno
dec
xchg
clc
jmp
inc
push
jns
cmp
xor
into
pop
push
cmp
sti
pop
mov
loopne
mov
repz
jp
dec
sbb
jnp
xor
aaa
cmc
cmp
or
mov
cmp
les
push
negl
movb
fs
sub
and
jp
in
lock
fmul
add
ret
cmp
push
arpl
sbb
or
stos
vmaxss
mov
mov
movsl
push
sub
and
pop
push
mov
push
or
sub
inc
add
inc
jg
jp
bound
cli
clc
or
add
or
add
sti
adc
and
and
out
mov
inc
cltd
fsubp
test
fcmovnu
mov
mov
jle
fwait
ljmp
sarl
movsb
jno
je
inc
xchg
mov
out
cmpl
je
scas
stc
pop
ja
aam
hlt
out
jle
pusha
xor
mov
movsl
pop
sub
leave
push
dec
or
push
or
into
movsl
sbbb
or
fidivrs
leave
leave
mov
aaa
stos
push
faddl
sub
into
dec
scas
mov
sti
cli
js
loope
push
mov
insb
or
inc
sbb
lret
rcll
lret
stos
jge
stc
ljmp
or
fwait
pop
mov
in
cltd
lods
cmp
lcall
fxam
jle
mov
jle
push
jo
add
jle
movsb
js
scas
or
je
add
lret
out
je
shl
fsubs
stc
xchg
ret
dec
adc
scas
mov
pop
pushf
cmpsl
mov
movl
int
add
xor
testb
jle
and
in
sbb
dec
jl
jmp
int
jle
push
dec
mov
dec
mov
mov
cmpsl
fwait
stos
sarb
arpl
lock
mov
mov
clc
xor
cld
pop
rorl
cmp
lret
enter
pop
iret
cmpsl
sbb
fwait
lret
movsl
cltd
jne
mov
xchg
popf
jne
jno
shrl
xchg
enter
dec
and
jae
scas
jmp
jae
repz
les
xchg
add
sti
or
inc
outsl
mov
adc
test
mov
jmp
test
es
mov
jmp
xchg
call
sbb
or
and
in
enter
mov
mov
push
mov
push
jg
mov
xchg
lahf
dec
fisubl
pusha
jnp
cmp
fistl
sbb
sbb
jae
mov
icebp
mov
aas
gs
xchg
or
xor
sub
add
jge
xchg
or
or
repz
dec
add
cs
push
cmc
cwtl
in
fists
ret
sti
jno
pop
pop
enter
fdivrs
test
cmc
mov
jb
push
lret
test
sbb
fldt
stos
mov
adc
and
ds
xchg
fdivrp
pop
std
lods
xchg
fistl
mov
fdivrl
mov
fsubrl
fdivl
mov
fwait
push
inc
mov
xor
add
add
leave
cmp
enter
sbb
push
pop
and
mov
and
adc
mov
xchg
jl
lods
dec
xchg
adc
insl
mov
adc
lds
push
mov
gs
cwtl
movsl
dec
rorl
mov
xchg
lods
jecxz
pop
push
sahf
push
cmp
popa
jo
inc
pop
pop
dec
inc
fnstenv
or
testb
add
insb
cmp
movsb
hlt
js
sbb
aad
imul
xchg
dec
dec
mov
loopne
scas
mov
pop
aas
in
and
dec
jecxz
les
in
pusha
stos
pop
dec
mov
mov
lds
dec
test
add
leave
jnp
les
clc
sub
or
fdivrl
mov
adc
mov
insb
push
jl
mov
mov
xchg
xchg
ret
cmpsl
stos
xchg
stos
lret
cmp
mov
add
push
loopne
sub
dec
sub
repnz
testb
mov
stos
repz
div
xor
add
sbb
cmp
stc
andb
mov
mov
sub
sbb
repz
inc
sbb
fcoml
rol
jo
roll
and
and
mov
je
test
ret
push
push
mov
sbb
cmpsl
test
mov
mov
mov
sbb
loop
inc
insl
repz
push
fists
add
pop
dec
inc
cmpsb
sub
mov
imulb
loop
and
movsl
pop
cld
fwait
xor
inc
xor
mov
hlt
sbb
xchg
popa
dec
pushf
mov
mov
mov
fisubrl
jbe
mov
lcall
jnp
push
cmp
and
xchg
stos
inc
lcall
cmp
jl
add
mov
and
pop
xchg
rolb
subb
stc
loop
xchg
dec
ds
adc
aam
mov
push
adc
lea
rcr
fucomip
push
cwtl
pop
xlat
sub
outsb
cli
mov
dec
movsl
mov
mov
lahf
movsb
bound
and
add
mov
dec
nop
cmp
int
mov
adc
ja
cmpsl
popf
idivl
cli
or
add
jg
mov
loopne
test
or
jmp
jno
test
inc
cmp
dec
mov
pop
dec
mov
mov
cmc
rorb
aaa
stc
xor
push
pop
sbb
ret
notl
iret
aam
out
dec
sbb
mov
sub
cmp
insb
or
sbb
inc
sbb
mov
fldt
movsl
cltd
outsb
xchg
add
xchg
fcoml
sub
push
pop
mov
xchg
scas
mov
xorl
mov
adc
add
sbb
int
dec
mov
cmp
mov
cwtl
pop
mov
cmp
lods
pop
xchg
pop
scas
int3
nop
dec
inc
and
es
out
cmp
ja
fldt
and
loopne
sub
popf
aad
rcl
inc
enter
dec
xchg
jno
dec
stos
push
xchg
out
inc
pushf
jne
call
pop
fdivrl
add
aaa
lea
xchg
xor
jnp
xor
mov
mov
mov
lods
subb
es
push
inc
xor
lods
push
jg
insb
scas
or
jge
and
ret
lods
stos
mov
lret
cmp
pop
jae
cltd
cwtl
stos
lret
addb
int3
sub
or
and
iret
test
in
rorl
jecxz
jmp
cltd
fisttpll
pop
jo
lcall
mov
sbb
xchg
mov
xchg
loopne
lea
pop
xor
test
push
mov
mov
pop
push
stc
mov
retw
cmpsb
sti
cmp
mov
in
inc
jecxz
int3
add
sbbl
push
xchg
jno
loop
mov
pop
stos
les
fadds
les
fisubs
sbb
imul
lahf
push
jmp
hlt
inc
mov
mov
jl
jecxz
jmp
push
jo
cwtl
dec
mov
nop
sub
mov
gs
lods
push
jg
sbb
and
dec
inc
xchg
ljmp
cmp
test
adc
lret
jge
push
mov
add
dec
ret
push
push
cmp
xor
pop
cmpsl
sbb
pop
jecxz
sbb
and
xor
sbb
mov
mov
adc
repz
pushl
add
push
je
cwtl
dec
movsl
jp
mov
mov
cmp
add
mov
ret
fld1
aam
adc
xchg
int3
add
xchg
inc
sbb
pop
add
xor
mov
mov
dec
fldln2
inc
das
or
xchg
aam
mov
pushf
sbb
push
xchg
std
pop
pop
jno
daa
jb
roll
ja
or
insl
cltd
mov
cld
push
sti
imul
mov
jbe
mov
fs
push
sti
lea
lds
mov
push
jg
xchg
lods
jo
push
sahf
lcall
fidivs
int3
mov
rcrl
les
loop
mov
jmp
rclb
cmp
lock
rcr
xor
lods
push
pop
test
aam
inc
cmp
mov
mov
jo
xor
stc
leave
stc
or
jb
add
mov
sbb
jge
cwtl
mov
mov
push
in
lahf
pop
xchg
ficoms
int3
insb
aam
mov
lahf
std
incl
mov
jne
jecxz
adc
mov
repnz
cmp
mov
cmpsl
push
or
dec
push
test
push
pop
fadd
jp
cmp
stos
jae
and
xor
repz
cwtl
lahf
fiaddl
je
fcomps
je
and
add
inc
mov
jp
out
adc
shll
inc
pop
push
imul
xchg
shlb
pop
pop
imul
inc
les
sbb
fmuls
inc
or
jl
imul
add
mov
add
cmp
fdivp
dec
movsb
mov
mov
adc
push
jmp
mov
or
mov
add
inc
test
fidivrl
dec
and
xchg
mov
mov
dec
or
jne
mov
or
pop
sarb
dec
jecxz
adc
push
mov
dec
push
or
stos
cmpsb
das
enter
sub
mov
movsb
mov
out
push
sub
insl
ror
push
cmp
in
xchg
enter
in
inc
xchg
inc
js
into
outsl
push
int
sti
cmp
daa
or
jo
mov
clc
clc
pop
mov
xlat
stos
mov
mov
sti
sbb
pop
mov
popa
nop
xchg
aaa
in
xor
aas
mov
sbb
pop
sub
fwait
cld
pop
daa
or
and
lods
imul
repz
stos
les
and
inc
into
jnp
mulb
fisubrs
outsb
or
sbb
test
popa
xlat
in
testl
adc
xchg
mov
dec
shlb
jno
in
cltd
cmp
iret
inc
jne
imul
inc
jge
stos
cmp
xor
adc
pop
shll
jns
jns
es
mov
fs
mov
in
jne
add
pop
cmp
xorb
or
int3
add
dec
call
mov
out
mov
repnz
inc
lods
adc
enter
or
ret
inc
clc
lds
lock
xchg
stos
rorl
push
and
mov
sub
hlt
fcmovne
adc
sar
arpl
cmp
mov
jmp
inc
sub
cwtl
fs
test
mov
xchg
lea
add
pushf
or
cmpb
cld
js
stos
pop
mov
jne
fyl2xp1
leave
cmc
xor
cmp
or
imul
ds
loop
lods
test
xor
movsl
clc
mov
enter
mov
lahf
mov
ljmp
mov
out
or
aam
imul
sbb
inc
pushf
stc
scas
sub
cmp
mov
into
xchg
add
pop
jns
xchg
mov
sub
sahf
cmp
imul
repnz
std
lret
jecxz
ret
cmp
mov
xchg
or
cld
xchg
iret
sti
cmp
pop
xchg
sbb
mov
aad
push
xlat
stos
cmp
inc
or
pop
dec
test
aam
arpl
mov
mov
xchg
test
pop
es
mov
pop
cs
jno
mov
fiaddl
or
jp
add
adc
cmp
push
mov
inc
in
sbbb
negb
outsl
cli
addl
add
or
ja
and
sub
or
bound
cwtl
dec
jbe
adc
js
movsl
xlat
insb
jmp
inc
xorl
mov
jne
cmpsl
inc
stos
jle
mov
adc
cmc
add
mov
test
test
shl
stos
fidivl
mov
movsb
and
jmp
xor
sahf
in
mov
daa
jb
int3
imul
dec
dec
mov
sarb
mov
add
push
jnp
xor
mov
mov
aad
jae
add
add
lds
xchg
sbb
test
imul
pop
adc
loopne
stos
inc
xchg
add
sub
push
ja
repz
loope
js
add
jb
or
jo
arpl
add
or
movsl
shlb
push
iret
xchg
arpl
pop
inc
sub
or
rcll
mov
or
stos
add
adc
add
fld1
movsl
xor
lods
xchg
xchg
enter
jge
jmp
test
inc
mov
adc
inc
and
xor
loope
stos
push
adc
pop
mov
fstps
lahf
cmp
pop
out
jno
out
rcr
loopne
adc
fisubs
loop
shl
pusha
shrb
test
movsl
int
sub
add
push
push
std
xchg
sbbb
movsl
pop
jp
daa
bnd
push
dec
shlb
pop
test
fcmovne
in
jge
and
scas
stos
inc
inc
ljmp
shrl
les
test
push
bound
inc
mov
divb
lcall
mov
iret
pop
lods
movb
orb
pushf
mov
cmp
inc
and
mov
cld
sahf
loop
cmpsl
jl
jns
adcl
cmpsl
and
sarl
lock
cmp
push
into
rolb
sbb
movsb
fidivl
mov
pop
fincstp
clc
in
pop
mov
out
push
lds
outsb
add
sub
add
adc
fidivs
pop
bound
adc
mov
scas
and
lahf
iret
fucomip
or
xchg
aaa
dec
pop
mov
sbb
scas
repz
scas
shlb
stos
into
or
lret
pop
adc
pop
jnp
jnp
dec
push
mul
inc
in
stos
dec
mov
dec
stc
scas
xchg
lret
fucomp
movsb
jl
cli
sub
mov
addl
ret
hlt
and
inc
jle
sbb
cli
adc
inc
movsb
push
sub
cmc
in
scas
cmp
sbb
sti
pushf
cmpsb
or
mov
loop
inc
fidivrs
mov
xchg
mov
in
mov
adc
xor
mov
adc
sbb
mov
test
sub
lahf
push
idivl
mov
shlb
pop
mov
test
gs
daa
insl
cmp
xchg
adc
ficoms
pop
jmp
mov
fidivs
stos
shr
je
je
addr16
push
or
icebp
clc
sti
mov
pop
dec
jo
mov
mov
ffreep
or
fmull
ds
jecxz
xchg
pop
mov
sub
dec
sbb
dec
mov
popl
insl
push
clc
in
pop
clc
pop
adc
mov
dec
jae
or
sbb
ret
int3
xchg
fistl
fnstsw
sub
movsb
outsl
push
push
push
dec
lods
pop
test
push
mov
mov
iret
sti
ljmp
pusha
push
inc
add
sti
inc
jge
popa
push
std
jmp
fcompl
add
sub
pop
ret
cmp
insb
jbe
jbe
outsb
mov
inc
cltd
jmp
into
add
mov
rorl
andw
rcl
int3
xchg
cwtl
mov
andl
subb
inc
int
mov
ficoml
add
repz
mov
lock
lock
aaa
sbb
mov
inc
scas
shl
jns
cwtl
xor
jno
lret
and
iret
lahf
test
shll
mov
test
inc
dec
out
lret
pop
vpermd
das
xchg
lret
jecxz
test
ret
pop
insl
sbb
add
and
adc
xchg
dec
add
testl
aad
fwait
lods
movb
imul
dec
pop
pusha
jge
add
xchg
and
ds
inc
cmp
inc
cwtl
movsl
jg
aas
xchg
push
scas
pusha
sub
mov
cmp
enter
mov
add
lcall
mov
jns
cmp
test
jp
mov
lds
ret
dec
xor
add
mov
dec
xor
nop
test
sub
int
mov
call
add
mov
aaa
call
ret
loopne
cld
out
or
fwait
loop
ret
cltd
aaa
dec
popf
fs
cmpsl
rcrl
mov
adc
js
cmp
pop
sub
cwtl
jmp
outsb
mov
stos
push
push
pop
push
sub
faddp
fnstsw
jge
scas
dec
call
lods
fwait
aaa
and
rcl
popl
scas
ja
in
push
inc
scas
xchg
stos
jnp
shrb
push
inc
jne
jbe
push
xchg
pop
scas
and
add
les
xor
pushf
cmc
out
js
insb
scas
es
leave
loop
test
into
pop
push
cwtl
call
sbb
add
rcr
push
jb
mov
nop
xlat
adc
lods
push
sub
fucomp
stos
movsl
xchg
cmp
xchg
mov
orb
mov
out
mov
stc
mov
pusha
jmp
mov
jmp
sbb
xor
or
push
pop
mov
or
mov
jle
mov
or
pop
test
outsb
jns
pop
dec
and
or
cmpb
andl
jmp
dec
mov
cmpsl
dec
mov
pushf
lahf
mov
fldl
clc
int3
stc
jecxz
sbb
in
je
xchg
test
dec
mov
xchg
leave
xchg
stos
lds
imul
fst
inc
scas
dec
jns
lret
pop
test
mov
xchg
jbe
lahf
in
scas
fisttpl
mov
or
lcall
js
fadd
test
stos
imul
xchg
pop
mov
shr
fisttpll
js
jmp
fisubl
movsl
lret
mov
lcall
xor
imul
dec
xchg
pop
and
pusha
cmp
xor
xchg
stc
sti
ljmp
adc
lret
dec
sbb
and
mov
out
xlat
jb
fisubrs
lds
sub
and
out
inc
mov
adc
and
or
orb
pushf
adc
pop
mov
mov
mov
test
test
jecxz
xor
ja
das
stos
leave
cmp
mov
mov
stc
and
mov
fcoms
leave
jns
adc
lock
adc
hlt
scas
lods
pop
mov
cmpsb
mov
adc
jg
jns
std
rolb
dec
fildll
shr
mov
inc
sbb
xorl
mov
mov
sub
imul
repz
les
xlat
push
cmpsb
decl
lcall
fisubs
rcl
inc
popf
gs
fpatan
leave
jl
or
dec
inc
cmc
add
push
rorb
filds
inc
jmp
popf
lahf
pop
insb
add
mov
in
mov
pop
cmpsl
push
imul
insl
call
jmp
mov
minps
mov
and
icebp
arpl
push
mov
outsl
push
and
pop
notb
cmp
dec
jecxz
dec
xor
cld
out
popa
scas
ja
cli
mov
dec
subb
xlat
addr16
loope
jae
vpshufhw
jne
sbbl
lods
movb
or
enter
sbb
pop
test
test
dec
inc
je
popf
loope
push
jns
orl
mov
pop
lcall
dec
mov
scas
addr16
clc
xchg
mov
and
shlb
push
in
jg
cmp
pop
pop
je
outsl
add
shlb
pop
lds
lods
nop
adc
test
or
imul
movl
mov
lret
fisubs
inc
fnstsw
add
aad
lods
pop
stos
sarb
lcall
ret
jo
pop
dec
mov
inc
outsl
dec
mov
push
pop
test
push
imul
aam
mov
inc
and
push
dec
bound
mov
test
cltd
xchg
addb
cmpsb
push
xlat
pop
mov
and
and
andl
xchg
cmp
adc
pusha
and
cltd
xchg
scas
mov
jl
mov
sbb
lret
pop
adc
lcall
push
pop
adc
mov
cmp
or
push
call
dec
pop
je
insl
mov
iret
jge
les
pop
mov
aaa
sbb
xchg
mov
add
mov
xchg
jmp
movsl
mov
jae
das
jge
xchg
or
leave
test
mov
ds
pop
mov
fisttps
push
push
loope
dec
cltd
fsubrp
mov
mov
mov
loope
inc
or
adc
test
filds
mov
lods
dec
pop
pop
scas
mov
jg
jmp
and
sub
xchg
test
into
xchg
test
add
or
xchg
stos
icebp
pop
sub
ret
sbb
lods
pusha
cmp
shrl
cltd
xchg
jp
jmp
pushf
sahf
mov
mov
leave
icebp
ss
outsl
push
pop
movsl
jmp
jl
pop
adc
repz
pushl
arpl
fsubrs
mov
lret
js
jg
mov
xlat
sbb
mov
hlt
xor
es
lods
mov
lcall
cmp
insb
sbb
lea
and
mov
imul
ljmp
nop
adc
testb
movsb
repz
sbb
ljmp
jge
mov
xor
mov
aad
and
mov
jo
sbb
or
pop
xchg
lods
fwait
aam
addr16
aam
es
adc
mov
out
imul
pop
mov
jne
push
sbb
stos
mov
faddp
rcr
jae
xchg
movsb
int3
sbb
inc
inc
fcoml
imul
mov
mov
mov
xchg
xchg
jno
and
cltd
sub
inc
pusha
test
cmp
mov
fnstcw
sub
add
bts
mov
lods
xchg
adc
jnp
xchg
lock
mov
scas
pop
push
mov
outsb
les
cli
sub
cmp
push
pushf
cmpsl
test
test
pop
lret
pop
in
mov
enter
adc
fidivl
fidivrl
mov
int
push
inc
pop
add
pop
pop
dec
adc
call
push
iret
filds
adc
imul
ror
or
pop
hlt
jg
icebp
aam
push
cmp
mov
add
nop
in
test
cmp
pop
jmp
out
int3
in
adc
and
mov
fldenv
dec
or
pop
dec
mov
cmp
stos
push
les
push
sahf
xchg
mov
mov
dec
mov
xchg
cmp
xor
inc
ret
cmp
or
jnp
out
add
nop
mov
or
jle
fucomi
lcall
push
mov
cwtl
adc
movsl
cmp
mov
dec
js
daa
fisubl
pusha
cmp
adc
ljmp
stc
bound
std
jae
cmc
fisttps
dec
push
ficompl
or
imul
test
xchg
mov
mov
cmp
stos
mov
lods
ljmp
cld
imul
cltd
test
scas
mov
lock
and
sub
cmp
cmp
add
cmpsl
mov
and
mov
lahf
xchg
inc
mov
pop
or
dec
sub
dec
sbb
lock
sbb
cs
sti
mov
enter
clc
xor
subb
fcmovnb
aam
and
xchg
push
ret
enter
cmpsl
pop
js
mov
arpl
jl
jns
clflush
xchg
mov
mov
lcall
mov
dec
and
xchg
jns
jle
les
adc
sahf
jge
fistpl
mov
mov
shlb
insb
aaa
dec
out
sbb
cs
xor
dec
pop
ret
cmp
cmp
les
cmpb
pop
test
jae
mov
jecxz
mov
ret
xchg
mov
sbb
insb
test
pop
sbb
in
cmpsl
add
shl
dec
lret
repz
jno
mov
xor
out
popf
inc
ja
jns
cmpsl
sahf
push
shr
dec
cmpsl
ret
push
adcl
or
add
pop
cmp
test
or
adc
sbb
sarb
mov
dec
inc
jge
add
sbb
sbb
jg
dec
xchg
lea
mov
andl
shlb
dec
repz
je
gs
in
shl
es
push
add
xor
push
dec
icebp
out
lods
adc
mov
mov
das
jne
adc
xor
enter
jae
lods
cmpsl
sub
mov
out
sub
mov
sub
fxtract
mov
mov
jmp
clc
mov
loopne
sahf
pop
jmp
enter
hlt
aas
jecxz
outsb
int3
mov
pusha
sub
mov
add
sbb
outsb
xor
dec
pushf
inc
stos
test
stos
xchg
lret
adc
test
dec
add
and
push
inc
ss
mov
clc
subb
mov
test
movsl
xor
addl
push
mov
xor
mov
data16
jle
jns
push
mov
push
or
sub
lds
inc
clc
rorb
inc
pop
fidivl
cmp
fimull
adc
push
clc
push
or
ret
xchg
inc
jp
cltd
jb
and
fidivrl
mov
cmp
into
data16
es
mov
xchg
enter
mov
cld
imul
cwtl
cltd
ffree
fsubr
push
and
fsubrl
ja
in
or
add
mov
rep
sub
push
xor
xchg
mov
jmp
push
fmuls
ret
xor
lock
in
or
sub
lahf
dec
loop
jmp
paddusw
into
in
test
lea
dec
jp
xchg
push
mov
repz
xor
popf
cli
lea
pop
push
mov
mov
lods
push
sub
inc
pop
and
lahf
inc
leave
test
imul
test
std
test
or
cmp
xchg
push
fwait
push
dec
and
cmp
jno
mov
jle
outsl
and
inc
mov
sub
in
rol
pop
lds
jl
push
je
mov
push
ret
fnop
pop
das
xor
imul
ss
and
mov
loope
inc
mov
cmc
inc
xor
or
into
fisubs
sbb
inc
mov
lret
xor
outsl
pop
sbbl
aad
mov
jl
scas
mov
and
pusha
lds
jns
cld
cmpsl
into
stos
dec
mov
push
mov
cmc
idivb
push
xchg
stos
lds
ret
cmp
dec
xchg
pop
add
out
sbb
jnp
clc
push
pop
scas
adc
add
rorb
shl
andl
pop
sub
aad
loopne
insl
add
rcll
insl
popf
lahf
mov
cwtl
dec
mov
int3
dec
movsl
ret
pop
call
fsts
mov
rcr
call
cmpsb
inc
aad
stos
jle
data16
xor
and
jp
adc
inc
xchg
imul
cmp
and
inc
push
push
sub
pop
dec
push
idivb
dec
call
sahf
mov
mov
aam
pop
dec
nop
pop
dec
stc
xor
lods
pop
cli
cmc
cld
fnstenv
sub
scas
stos
cwtl
in
lret
fisubrl
xor
decl
sarl
mov
mov
pop
fsubr
mov
mov
icebp
sbb
xchg
shll
inc
sbb
test
pop
xor
add
lock
lods
mov
mov
pusha
mov
dec
push
in
sbb
dec
ds
or
stos
loop
xchg
or
adc
sbb
or
or
sbb
test
adc
cmp
pop
movsb
xchg
mov
mov
cwtl
mov
fucomi
push
dec
cmc
fst
mov
mov
cwtl
pop
pop
xchg
enter
test
sub
mov
push
xchg
dec
sbb
jp
pop
push
mov
neg
xor
popf
cs
sti
and
repz
push
cmpsl
pop
dec
lahf
enter
cmp
cmp
mov
lock
pop
or
or
lds
xor
or
mov
pop
ss
add
jle
inc
cmc
test
mov
sti
aaa
adc
idivl
push
stos
jbe
movsl
pop
sbb
xchg
idivl
ds
mov
inc
jne
jmp
push
inc
or
loopne
cltd
cmpsb
lds
jle
sbb
push
popa
stos
mov
xchg
repnz
mov
cmpsl
ds
jge
scas
mov
jp
test
mov
int
dec
mov
and
or
into
cmp
pop
mov
aaa
in
cmpsb
dec
mov
aaa
outsl
mov
iret
and
loop
mov
sbb
jb
lret
push
movsb
fisubrs
test
cmc
jne
jmp
fsubrs
cltd
mov
ss
push
hlt
in
inc
jle
das
mov
or
cmp
cld
cli
cmp
je
push
gs
dec
movsb
mov
push
scas
mov
inc
lods
xchg
push
push
mov
adc
int3
xchg
fisubrl
stc
cmpsb
aaa
lods
rorl
jmp
inc
and
mov
jecxz
inc
fdivrs
dec
sbb
jb
sub
dec
mov
inc
xor
cld
jp
fistl
pop
aam
xor
test
adc
leave
ljmp
lods
and
sbb
test
or
mov
jb
addr16
rol
imul
sbb
sahf
xor
movsb
inc
lcall
inc
sbb
cmpsl
ret
fucomi
shlb
jb
mov
jns
adc
xor
loope
xor
stos
fidivs
sti
xor
fs
mov
xchg
mov
xor
or
inc
mov
iret
fidivrl
ds
divl
dec
aaa
mov
mov
lcall
xchg
pop
cwtl
lret
movsl
mov
mov
mov
jae
mov
lret
pop
in
pop
add
std
shll
imul
sub
scas
sbb
popf
cwtl
lds
xchg
stos
stc
xchg
outsl
stos
inc
lcall
jle
fdivl
xchg
ret
pusha
push
cmp
cmpsb
shlb
shlb
test
inc
popf
rol
sub
xchg
jecxz
xchg
test
out
jbe
andb
jbe
xlat
add
popf
insb
lahf
jg
xchg
test
imul
push
pop
sub
decb
mov
lods
sbb
out
mov
test
in
jnp
int
push
cmc
jne
mov
pop
cmc
lcall
mov
jbe
sbb
bound
fcomi
cmp
ror
push
das
or
add
int3
call
stc
and
int
sbb
or
sbb
addr16
xchg
pushf
lea
lds
jg
sub
stos
mov
sbb
mov
add
insl
cmp
lods
mov
shl
cmp
lods
fcoms
cmp
push
sub
sub
pushf
stos
lds
xchg
fistl
jb
int
xor
dec
push
jmp
call
popf
scas
jg
mov
xor
jg
sbbb
xor
je
fdivrl
les
popl
mov
stc
fcoms
push
dec
and
mov
stos
mov
pop
sbb
xchg
ret
fldpi
cwtl
xor
sub
cltd
enter
cld
lret
int3
pop
sub
add
xor
push
or
int
push
ss
dec
mov
into
pop
test
loope
sub
es
mov
or
lock
iret
fucomip
sbb
sbb
out
lret
jecxz
cld
mov
mov
cmp
mov
andb
jno
mov
lds
popf
into
xor
mov
push
and
mov
cli
xor
test
dec
std
lods
into
repz
mov
sbb
movsb
outsl
dec
mov
inc
push
arpl
or
repz
movsb
sbb
cltd
data16
fcoms
cwtl
and
mov
and
dec
mov
jnp
dec
xor
out
nop
mov
negl
jle
xchg
aas
cs
fmuls
mov
push
mov
sarl
inc
nop
cmp
loope
push
jns
add
sub
pop
pop
lret
xor
test
popa
inc
imul
pop
adc
repz
adc
cltd
int3
pop
shll
lds
subl
dec
push
or
dec
inc
cmc
sbb
fdivs
cmp
imul
aam
je
cmp
xchg
sub
or
sbb
test
out
mov
int
mov
add
movsl
pop
ds
fwait
cmp
shrl
aam
pop
jo
jnp
mov
push
pop
add
cmp
in
fistps
test
ljmp
bound
iret
enter
dec
and
mov
sbb
lock
ret
adcb
mov
cli
xchg
cmp
xor
test
into
xor
add
mov
out
js
inc
push
lods
clc
xchg
clc
dec
inc
push
sub
jb
lea
movsb
mov
adc
push
rcll
push
fdivrs
jp
fldenv
xchg
imul
fnstsw
push
push
xor
add
fidivrl
je
inc
adc
sub
xor
xchg
int
mov
jne
imul
xor
mov
dec
fwait
pop
movsl
cmp
loopne,pt
iret
jl
daa
clc
clc
mov
mov
inc
lds
cld
movb
mov
cli
xchg
jno
cmp
inc
int
aaa
push
xor
mov
test
dec
jbe
fwait
or
in
cld
leave
lods
ret
sti
arpl
subb
mov
sbb
sti
lret
and
inc
push
lcall
pop
sbb
mov
mov
ja
xor
mov
push
inc
repz
push
push
adc
ljmp
scas
mov
mov
xor
sti
mov
mov
push
cmp
bnd
cwtl
movsl
cmp
xchg
inc
pop
add
mov
cmp
lock
lock
in
mov
sbb
xchg
jbe
enter
call
dec
lods
out
dec
pusha
aad
enter
ljmp
push
mov
shl
xlat
ret
loopne
jl
roll
xchg
lock
mov
sbb
cmp
sti
mov
jo
mov
inc
insl
cwtl
insb
and
je
arpl
lahf
scas
add
cmpsl
cli
push
dec
sbb
ds
leave
cltd
scas
scas
jge
mov
aad
mov
sub
ror
outsb
xchg
xchg
adc
sub
mov
dec
fwait
mov
dec
xchg
out
inc
lcall
dec
push
js
sarb
leave
pusha
mov
out
xchg
lahf
and
out
jl
mov
fisubs
js
mov
xchg
mov
test
dec
cltd
movsb
ret
fs
mov
adc
push
call
jno
test
jmp
and
fsin
repz
and
jne
bound
dec
sub
or
dec
push
or
pushf
outsl
mov
lcall
aad
xor
cmp
pop
dec
mov
ret
arpl
inc
imul
lds
xor
rcrb
loopne
stc
addr16
fldt
or
inc
scas
cmp
aad
sbb
mov
jne
jb
cmc
test
stos
mov
das
push
dec
mov
addr16
daa
xchg
push
xor
les
in
or
sbb
lods
scas
into
negb
stc
add
sbb
jns
xchg
xchg
dec
popf
ficoms
mov
out
xchg
subb
sbbl
dec
ret
mov
daa
insb
sub
jmp
and
jecxz
jp
cmpsb
int
stos
out
jbe
jb
nop
jg
jnp
mov
enter
xchg
sbb
call
inc
jecxz
insb
aaa
and
inc
or
add
inc
sub
pop
lahf
in
movsl
shrb
ret
or
mov
cmp
stos
cmp
ss
mov
xchg
adc
mov
fnsetpm(287
aaa
sbb
in
cmp
roll
cmc
in
ja
scas
cmc
pop
pushf
and
xor
sahf
and
mov
add
xchg
push
jge
and
adc
add
sbb
dec
pop
lods
mov
mov
addr16
inc
fcomps
mov
xor
lcall
popa
mov
insl
cmp
mov
mov
add
or
sub
sbb
mov
bound
xor
jg
cmpsl
jno
pop
test
mov
push
sti
movsb
jge
daa
mov
fidivl
push
lds
lds
mov
enter
es
mov
lea
lea
std
rep
mov
push
or
and
mov
adc
test
movsl
repz
jo
cmpsl
dec
repz
mov
pop
mov
mov
cmpsl
push
sbb
cmp
dec
mov
dec
shl
shll
sub
fldt
pop
nop
xlat
dec
stos
and
imul
popl
sbb
fisubrl
sbb
add
ret
movl
lds
cli
fsubrs
out
mov
xor
jnp
jmp
imul
jmp
mov
mov
repz
or
jae
mov
and
xchg
mov
shlb
and
jl
fs
or
lret
lahf
adc
rolb
out
push
mov
xchg
aaa
out
inc
mov
incl
loope
imul
push
adc
rcrb
mov
imul
lds
xchg
arpl
xchg
call
lock
popa
pop
pusha
mov
add
rolb
fs
cmp
mov
pop
or
les
pop
scas
mov
or
cwtl
sbb
jbe
je
fstps
pop
mov
mov
pop
adc
inc
push
shlb
outsb
les
out
sar
and
test
lods
insb
inc
sbb
outsl
fucomi
pop
push
add
fidivrs
mov
pop
jae,pt
push
call
and
or
stos
call
mov
pop
ficoml
movsb
iret
adc
or
mov
or
lods
nop
add
dec
adc
mov
enter
shlb
add
jns
lcall
mov
push
pop
movsl
dec
add
ret
push
cs
mov
lods
mov
repz
mov
sbb
leave
adc
cld
inc
sub
pusha
ret
xorl
leave
cmp
jnp
push
push
movsl
rcll
repnz
cmpsb
push
lods
and
mov
in
insb
daa
stos
in
ljmp
mov
arpl
sub
stos
xor
cmpb
stos
repnz
call
popf
adc
sub
lahf
ffree
js
pop
orb
loope
sahf
jg
xlat
pop
or
mov
sbb
out
mov
xchg
xor
pop
lret
and
stos
out
nop
inc
mov
sbb
jne
xor
stc
cltd
enter
push
movsb
fdivr
imul
fldenv
adc
fisubrs
sbb
inc
adc
xchg
dec
mov
divb
orl
sbb
int
pusha
jl
inc
pop
lahf
lret
insb
mov
and
mov
mov
arpl
fwait
push
cwtl
lret
pop
aas
das
and
mov
aaa
or
shrl
mov
gs
xorb
lea
cmp
mov
mov
push
cmp
add
cmpb
stos
fistpll
les
std
mov
sub
pop
push
iret
imul
lret
pop
mov
cmp
pop
pop
add
cmp
sub
mov
insb
aas
xor
cmp
cmc
xchg
scas
inc
mov
popf
xor
lret
repnz
bound
repz
fwait
fistl
inc
mov
cwtl
das
xchg
enter
adcb
sub
mov
pop
jmp
sbb
xor
popf
mov
call
mov
mov
movsl
cmp
addl
iret
jecxz
fnstenv
clc
pop
sub
std
popf
js
or
xorl
pop
pop
dec
mov
in
and
ficoms
mov
cmp
mov
movsl
fsubs
cmpsb
idivb
fsubrs
popf
mov
bound
jae
sub
push
in
imul
pop
imul
push
cltd
roll
push
lds
pushf
push
cmpb
mov
mov
or
stc
add
sarb
es
adc
add
call
test
adc
mov
lock
mov
pop
std
inc
pop
ret
in
jb
pop
dec
xlat
ss
imul
cmp
push
inc
shr
mov
cmp
jne
sbb
mov
les
pop
mov
mov
jmp
iret
jb
push
inc
xchg
xlat
mov
or
add
sub
dec
add
ss
dec
sbb
test
or
insl
jno
fs
icebp
cmpsb
mov
sbb
and
mov
or
mov
dec
pushf
sbb
stc
cmp
dec
sbb
xchg
sti
mov
in
cmp
into
mov
cmp
andl
fcmovne
or
dec
ss
shlb
in
jo
inc
push
mov
lea
jg
inc
sbb
mov
out
jl
mov
adc
or
sbb
test
inc
arpl
jp
cmpsb
mov
enter
inc
push
mov
mov
lds
loope
movsl
into
sbb
inc
pop
cwtl
xchg
arpl
int
out
mov
cltd
cltd
imul
mov
jne
fstpt
pop
sahf
push
daa
pop
mov
iret
fucomip
and
inc
inc
sub
int3
jecxz
inc
ret
mov
sbb
dec
mov
lds
jg
sub
or
xchg
lods
insb
sbb
movsl
push
stos
inc
out
lods
mov
roll
and
movsb
shr
fwait
mov
jle
adc
dec
inc
bound
lret
addb
add
sub
add
movsl
sub
gs
lods
clc
xchg
xchg
mov
out
jmp
into
fbstp
jae
addb
inc
in
fstl
or
iret
hlt
imul
dec
je
jge
fdivs
mov
mov
add
or
test
gs
dec
xchg
cmp
jle
adc
xchg
enter
sub
aad
inc
xchg
mov
mov
push
imul
arpl
fs
sahf
mov
pop
es
int3
jl
jae
pushw
adc
ficomps
mov
incl
sub
xchg
dec
push
pop
mov
mov
icebp
in
cli
ljmp
sahf
fwait
movsb
test
cmc
sbb
xchg
mov
adc
in
cmp
stos
fcomip
popf
push
pop
mov
or
pop
add
int3
mov
in
cmp
xchg
stos
std
jo
hlt
or
in
mov
push
adc
add
or
mov
out
loopne
or
sbb
pop
mov
and
cmp
push
enter
test
jecxz
pop
cmp
push
xor
popf
repz
aaa
out
mov
in
fdivl
jge
cmpsl
hlt
lods
xor
mov
xor
seto
lea
fisubrs
sbb
aam
sbb
sub
cmp
pop
and
fisubl
pop
pop
mov
add
repz
cmp
rdmsr
loopne
sbb
imul
movsl
fwait
test
add
mov
je
mov
cmp
jecxz
sbb
ljmp
popf
js
stos
lods
and
and
mov
and
in
or
push
cmp
push
cmp
cmp
jae
mov
sub
in
scas
dec
and
push
cmp
push
mov
fld1
jb
inc
push
push
mov
mov
jnp
sbb
out
test
andl
negl
out
mov
ja
mov
inc
int3
lock
inc
add
ret
sub
and
inc
out
ret
repnz
cmp
mov
jne
cmc
mov
mov
test
dec
and
std
xchg
jmp
mov
shrb
mov
popa
mov
dec
out
mov
sbb
aam
sti
iret
dec
inc
push
push
std
insl
rorb
mov
pop
or
inc
sub
movzwl
jno
pop
and
mov
xchg
ficompl
inc
jmp
xchg
arpl
sbb
scas
mov
lret
shrb
mov
xchg
test
pop
mov
cld
js
mov
fisubrl
pop
stos
xchg
stos
add
sub
jns
inc
ret
icebp
data16
adc
repnz
xchg
insb
iret
adc
fs
imul
sbbb
mov
lret
add
add
outsb
rcl
add
je
and
xorl
in
xchg
fdivrp
add
fucomp
ja
insl
cli
lock
jo
aaa
shrl
adc
add
cmc
pop
pop
addr16
shr
mov
jmp
jns
mov
push
mov
pop
cs
push
sub
xchg
sub
mov
je
cmpsb
cmp
or
cmpsb
lods
subl
sbb
lcall
inc
mov
movl
mov
addr16
mov
test
and
mov
in
jg
scas
jae
jp
xor
movsb
mov
mov
out
int3
cmp
sahf
test
pushf
inc
cmp
jbe
adc
mov
mov
pusha
fcoml
nop
sub
mov
cs
test
aaa
mov
cli
jnp
lods
push
aas
add
pop
sbb
mov
add
es
and
jp
mov
dec
xchg
es
sbb
push
lcall
xor
add
push
repz
repnz
mov
and
cwtl
and
ror
sub
mov
fcmovnu
jp
inc
push
inc
push
inc
rolb
or
mov
mov
jo
sbb
xchg
xchg
call
inc
rolb
mov
stos
call
iret
adc
shll
frstor
xchg
adc
and
dec
push
sbb
mov
jnp
je
dec
jae
jp
mov
repnz
rcrl
imul
stos
fdivrl
sahf
test
fcompl
cmp
rcr
fwait
pushf
cmpb
cmp
pushf
int
mov
aad
lods
lcall
inc
loope
add
xor
in
and
mov
sub
clc
jp
sub
cli
clc
sub
jle
cltd
pop
iret
setae
jp
cmp
mov
sbb
xor
sti
jmp
sub
fldcw
cmp
mov
mov
movsl
pushf
icebp
mov
or
cmp
pop
out
push
das
xchg
dec
fs
xor
jg
mov
outsb
dec
jbe
mov
mov
and
inc
inc
jmp
outsb
ja
std
mov
add
and
imul
mov
aam
leave
xchg
sbb
mov
out
outsl
inc
aam
push
jp
jne
gs
pop
mov
xchg
rorl
and
sub
add
cmp
inc
push
dec
add
pop
lea
mov
repz
xor
cli
jl
add
mov
hlt
sti
fbld
enter
add
stos
daa
mov
inc
out
dec
adc
lcall
je
mov
out
sub
imul
test
outsb
mov
lahf
in
ja
shr
add
mov
fs
dec
leave
inc
mov
push
inc
mov
jbe
inc
mov
sub
mov
or
dec
mov
pop
xchg
jle
rcl
mov
or
outsl
leave
cmp
mov
in
mov
aaa
dec
repz
repz
mov
mov
jecxz
bnd
fwait
sbb
sub
or
adc
lds
dec
loopne
cmp
aad
push
inc
and
faddl
fisubl
fs
repnz
jp
adc
inc
int
call
ja
les
pop
dec
insl
mov
lods
inc
pop
scas
cs
mov
sbb
mov
les
outsb
scas
cmpsb
fucomi
repnz
imul
das
mov
cmp
pop
lret
out
std
jg
in
rcr
and
push
shr
clc
push
in
out
xchg
or
inc
sbb
pushf
enter
jns
enter
xlat
pop
pop
mov
xor
loopne
pop
imul
cltd
push
daa
adc
xchg
repz
adc
xor
lods
or
sti
pop
mov
mov
jmp
jecxz
push
xchg
mov
test
sti
mov
ds
leave
adc
loopne
sbb
jg
and
mov
sahf
dec
jae
xchg
pop
ss
add
mov
mov
and
lcall
cs
xchg
in
mov
xchg
test
mov
jno
add
adc
push
jno
pop
test
pop
push
dec
sub
lock
mov
push
jle
mov
fimuls
pop
rolb
sbb
imul
or
int3
sbb
add
push
xchg
sbb
fidivrl
pop
jmp
mov
mov
aad
xchg
jbe
add
cmp
push
fucomi
hlt
std
mov
sti
popa
and
xchg
sub
std
push
daa
add
and
test
stc
mov
roll
test
into
add
inc
sub
mov
sbb
ds
adc
pop
jb
popa
mov
outsb
inc
mov
inc
test
jl
in
fldcw
mov
sub
add
push
mov
test
and
out
rep
imul
pop
cmp
into
pop
xor
xor
mov
pop
rcl
bnd
or
repnz
push
push
push
lcall
stc
lock
aad
dec
jecxz
inc
sbb
inc
mov
inc
lret
pop
add
jae
outsb
or
pushf
pop
idiv
aas
mov
jb
mov
or
push
mov
repz
xchg
jmp
jns
insb
jbe
int3
xor
inc
sarl
pop
lock
lock
popf
dec
inc
je
cmp
clc
inc
es
mov
pop
mov
mov
cmp
mov
xor
aaa
jmp
mov
fistps
mov
in
jecxz
enter
shrl
jnp
add
imul
inc
int3
psrad
dec
and
sub
lahf
add
icebp
and
fidivrs
outsb
leave
test
int
jae
fnstenv
lret
les
shrl
add
cmpsl
pop
mov
lock
pop
pop
mov
int
ret
mov
mov
jns
pop
lock
popf
scas
pop
popf
lods
or
inc
rcll
cmp
cli
add
and
sub
mov
imul
mov
in
xchg
nop
lret
mov
adc
popf
ds
cmp
out
les
fidivl
lods
mov
repz
sub
movsb
mov
dec
stos
ficoms
or
mov
jne
imul
inc
mov
inc
pop
xchg
inc
rcrl
inc
ljmp
rol
lods
mov
scas
push
daa
jecxz
cmp
ljmp
or
jne
ret
pop
push
pop
push
push
xchg
sbb
adc
sub
adc
addr16
aas
dec
mov
pop
clc
aaa
jecxz
fsub
les
cld
xorb
xchg
or
inc
mov
orl
push
jne
xchg
adc
stos
shlb
pop
ficoms
mov
sahf
mov
pop
sbb
dec
cli
or
es
lods
std
imul
mov
jp
cwtl
inc
xor
je
jp
call
pop
cli
xor
sub
lds
sbb
ficoms
lds
fsub
fbstp
pop
sub
inc
mov
cmp
dec
inc
dec
outsl
mov
mov
movsb
mov
addb
dec
stos
mov
loopne
dec
mov
jl
into
rcr
sbb
add
add
xchg
je
and
and
or
scas
outsb
cmp
push
cli
movsb
mov
lds
adc
rcl
dec
xor
push
ficoms
dec
mov
or
jl
fimull
stos
mov
lods
adc
and
jne
test
cmp
fnsave
dec
push
pop
stos
cmp
sti
push
lods
mov
inc
mov
sti
sbb
movsl
cmp
dec
fsub
or
sub
add
mov
adc
cld
mov
int
pop
push
stos
jge
mov
cmp
cltd
xchg
xor
sub
pop
sub
cmp
inc
xor
cmc
xor
ffree
xchg
dec
mov
jmp
popf
lods
ret
fidivs
jno
lahf
jle
jmp
and
fstp
mov
push
rcrl
mov
outsb
sarl
std
aad
add
pop
shlb
ret
mov
mov
sub
cmc
push
cmp
lods
sbb
xlat
xchg
in
and
mov
jg
inc
out
cmpsl
sarl
sub
sbb
mov
xchg
jns
sub
test
inc
scas
dec
fs
daa
clc
adcl
fucompp
sub
pushf
mov
push
lcall
sub
leave
lock
cmp
mov
and
nop
push
lea
pop
adc
mov
daa
mov
loopne
jb
cs
faddp
fisubl
jmp
cmp
and
mov
mov
pop
jge
popf
and
pusha
ds
sbb
inc
ljmp
lods
inc
and
add
es
sbb
mov
xchg
pop
mov
loopne
inc
lcall
inc
dec
mov
lock
adc
lods
adc
test
in
jmp
lret
in
dec
inc
dec
movl
mov
lds
fwait
data16
scas
popf
adc
xor
inc
in
jmp
les
arpl
jae
ja
adc
lcall
cmpsl
push
ret
sbbl
xor
cmp
mov
fildl
mov
outsl
xor
sub
push
xor
popl
add
adc
cwtl
movsb
cmpsl
cld
sbb
sub
jl
and
xlat
xchg
fsubrp
jns
movsb
xlat
pop
mov
dec
aaa
test
dec
adc
push
ficoml
fsubs
aas
jnp
int
or
mov
rcrb
arpl
pop
pop
enter
mov
clc
aas
cmp
jg
shr
cwtl
xchg
pusha
mov
xor
or
mov
dec
mov
outsl
mov
scas
and
push
addr16
inc
and
movsl
stos
xchg
sbb
ds
lret
sub
mov
bnd
and
xlat
jae
xor
int3
add
icebp
sbb
mov
push
mov
insl
ljmp
movsl
fimull
or
cmc
and
pop
dec
aad
dec
test
push
in
mov
sarb
nop
lahf
movsb
mov
loop
xchg
loopne
xor
inc
adcl
push
cwtl
leave
jae
mov
repz
in
pop
push
xchg
mov
insb
ret
inc
outsb
popf
lahf
pop
mov
cmp
jae
cli
lods
iret
sbb
jnp
or
sbb
mov
jl
in
sbb
ffree
fsubl
lahf
inc
adc
mov
cmp
sub
adc
int
xchg
into
outsl
insl
pop
sbb
pop
int
add
loopne
rcl
sbb
add
jae
fsubrp
xor
sub
cmc
cld
add
sub
popf
xchg
pop
dec
adc
jg,pt
out
or
mov
cmp
jnp
pop
cmpb
in
in
test
or
nop
in
bound
sub
xchg
cwtl
add
xchg
mov
ret
orb
push
jo
and
push
leave
loop
inc
mov
xchg
lock
js
jnp
mov
dec
addr16
xorps
sbb
les
inc
mov
push
jmp
or
sbb
dec
cmp
jl
inc
cltd
aaa
popf
inc
popa
rol
mov
hlt
xor
shlb
dec
inc
mov
dec
dec
mov
xchg
jmp
adc
pop
sahf
push
das
jge
xchg
or
xor
jns
mov
pop
inc
and
jne
mov
fbld
adc
xorl
lds
repnz
and
popf
out
dec
into
jns
movsl
fstps
sbb
ret
mov
and
add
sti
cmp
iret
aad
jae
fistl
test
sti
arpl
mov
adc
in
add
add
std
repz
ficoml
fiadds
push
mov
aas
out
test
mov
gs
push
pop
jmp
fists
push
mov
sbbl
pop
dec
add
xchg
and
punpckhbw
or
sbb
xor
into
inc
std
inc
les
cmpsb
cli
jae
push
popa
xchg
sbb
xchg
mov
shll
jnp
cmp
fbld
inc
pop
adc
xchg
enter
pop
cmp
add
in
jne
dec
pop
sbb
adc
idivl
sti
aaa
in
and
lods
js
mov
pop
adc
jno
mov
jmp
push
sbb
insl
rolb
jae
sti
inc
sub
ret
mov
fsubrl
sbb
ret
in
in
stos
dec
notl
in
lods
jmp
js
mov
xor
sbb
test
sub
mov
cmpb
insb
mov
add
pop
outsb
xor
or
rcr
lcall
pushf
jp
xchg
push
and
into
loope
mov
fst
adc
sti
pop
inc
bound
clc
dec
sarb
dec
fsubs
cmc
push
lahf
xchg
imul
jae
and
rcl
insl
loope
out
outsl
add
dec
mov
jae
pop
mov
jg
shll
mov
inc
test
or
or
mov
xchg
cmpsb
fimull
repz
jo
popf
inc
or
add
push
pop
mov
mov
sti
clc
pop
pop
iret
xchg
push
jmp
popa
mov
orl
inc
lcall
cmpsb
iret
jns
aas
xor
imul
mov
sbb
lods
lea
cli
pusha
neg
iret
jge
rorl
imul
xchg
cwtl
rcrl
pop
push
dec
add
inc
lods
mov
xor
mov
test
rorb
pop
lods
xchg
sub
lods
dec
test
aad
mov
jmp
aam
neg
xchg
xor
test
push
pop
fisttpll
cmp
add
cmpsl
fnstcw
pop
and
daa
test
in
mov
fildll
and
xchg
mov
pop
push
xchg
xchg
gs
jb
mov
pop
bound
out
daa
sarl
cwtl
or
dec
push
or
cmpb
dec
pushf
dec
mov
dec
aas
inc
shrl
mov
aam
mov
push
iret
sarb
adc
leave
inc
sbb
mov
sti
in
mov
je
pop
int
inc
daa
inc
cli
push
cwtl
lret
int
push
decb
rcr
adc
push
jns
in
dec
mov
mov
std
adc
dec
and
pushf
lds
call
ss
js
jge
cmpsl
or
push
adc
push
leave
adc
mov
cmp
mov
int3
scas
jne
fildll
int
pop
ret
cmp
aas
add
add
pop
add
fidivrs
fisubs
pop
xchg
arpl
loop
test
insl
xchg
popa
cmp
mov
rorl
push
ret
add
mov
repz
xchg
stc
sbb
cmc
aaa
jle
push
lar
mov
xor
mov
jmp
inc
push
stc
mov
rorb
mov
cmp
mov
in
aas
push
iret
pop
lds
jne
ret
jns
jb
xor
cmc
sbb
sub
xlat
mov
ljmp
lods
stc
cmp
push
xor
fbstp
push
mov
test
inc
mull
ljmp
pop
cmp
sbb
xor
aad
xchg
mov
mov
mov
mov
dec
pop
push
aam
gs
mov
mov
mov
ss
int3
fisttpll
mov
mov
or
es
pop
xchg
push
xchg
popa
jecxz
loopne
sbb
or
lods
mov
pop
notl
xchg
inc
fsubrs
adc
mov
xchg
ja
inc
cltd
mov
insb
dec
push
mov
lea
or
fwait
push
and
mov
rcl
mov
and
gs
loope
je
cmp
fcoms
push
movsl
inc
adc
lods
andb
pop
cmp
loopne
cmp
xor
mov
lahf
push
enter
mov
subl
leave
pop
push
shll
ret
sbb
fs
lret
int
pop
mov
pop
ljmp
jnp
jmp
xor
xor
pop
sub
stos
adc
add
or
mov
std
inc
lcall
mov
jbe
inc
mov
jp
fisttps
mov
int
jb
out
pusha
sub
push
add
inc
pop
test
xor
mov
lcall
lds
push
cwtl
dec
xor
imul
cmc
adc
aas
pop
fsubl
mov
int
inc
cs
pusha
aas
and
daa
and
sbb
call
or
push
decb
and
ret
ja
pop
fsts
add
fcmovnbe
pop
mov
sbbl
mov
adc
out
mov
pop
cs
sarl
std
rolb
enter
lahf
push
xlat
scas
hlt
addl
mov
or
add
mov
pop
push
inc
fst
dec
sbb
sub
ds
int3
sarl
jo
mov
adc
mov
xor
stos
jge
lcall
loopne
pop
outsl
jno
mov
call
jnp
or
xor
jb
iret
inc
jl
lret
push
jmp
mov
das
add
pop
mov
iret
cmpsb
leave
cli
push
sub
stos
or
pop
jge
mov
sbb
cmpsb
push
adc
cli
test
outsl
pop
std
cwtl
lret
out
mov
enter
jno
and
cmp
jmp
or
negl
les
jae
cmpsl
sbb
mov
and
ds
lock
sarl
fwait
lea
ret
mov
add
aam
xor
cmpsb
xchg
push
sbb
mov
adc
lods
mov
inc
int
or
aaa
push
scas
sub
lcall
sub
add
pop
jg
xchg
push
out
sub
pop
ss
stos
adc
fwait
lods
pop
fs
aam
rcrl
push
xlat
and
stc
adc
or
xchg
lods
xor
std
pop
push
mov
cmpl
popl
and
add
cmp
aam
jns
mov
push
push
movsl
cli
arpl
or
sarl
lods
mov
fldcw
push
test
inc
out
mov
mov
jp
dec
add
cs
push
imul
test
lock
inc
arpl
sti
adc
dec
xor
hlt
sbb
int3
add
xchg
and
or
lret
fcomps
add
xlat
mov
xor
lahf
inc
mov
cltd
cltd
inc
mov
or
jae
fwait
pop
jmp
sbb
push
cwtl
sbbb
arpl
push
push
sub
fnstenv
test
dec
mov
stos
ja
mov
mov
push
jg
loope
fidivs
inc
cltd
mov
imul
xchg
repz
xchg
call
scas
inc
xlat
mov
pusha
test
dec
repz
add
cmovge
inc
ljmp
or
jle
fs
add
aaa
arpl
enter
cmp
cmpsl
cmp
jb
fnstenv
mov
test
in
adcb
push
xor
adc
sarl
repz
sti
popa
pop
mov
mov
inc
repz
push
mov
dec
clc
or
push
push
xor
or
cmp
xlat
aad
pop
shlb
mov
dec
jno
jl
adc
sbb
add
stos
mov
sbb
lods
inc
sub
dec
and
mov
lahf
popf
in
mov
movsl
cltd
xchg
jne
int3
clc
in
mov
xor
movsl
xor
jge
shrb
mov
rolb
into
mov
lds
setnp
loop
addr16
add
jmp
out
cltd
add
or
leave
sub
fsubrs
push
icebp
sub
test
xor
out
cmp
mov
xchg
fisubs
add
dec
pop
jecxz
loope
outsl
lds
fcompl
flds
jno
jmp
sub
imul
lds
insb
xchg
lcall
jne
dec
hlt
fcmovbe
pop
jecxz
mov
cmp
sbb
jne
mov
xor
in
pop
sbb
mov
mov
pop
add
mov
aas
fimull
popa
movsl
xchg
jns
fisubrl
xlat
mov
mov
mov
pop
pushf
stos
nop
rcll
aad
pop
sub
sbb
lahf
arpl
jge
xchg
mov
xchg
fsts
popf
sub
add
in
mov
mov
inc
push
sub
sbb
dec
mov
int
sub
pop
dec
xchg
fwait
popf
loope
scas
pusha
fs
das
pop
push
leave
in
mov
mov
cmp
xorb
cld
mov
and
fadd
shll
sbb
pop
std
sbb
imul
jb
xchg
lods
mov
lret
xor
jb
sbb
enter
inc
inc
pop
test
test
cmp
add
and
fisubrs
pop
add
fwait
ds
push
adc
dec
stc
lea
divb
aam
xchg
pop
lods
out
loopne
aas
scas
clc
add
or
ret
xchg
add
mov
and
sbb
lret
push
movsb
inc
imul
stos
and
lret
out
cmc
imul
movsl
jmp
scas
sbb
bound
pop
hlt
daa
push
cmp
jae
les
mov
dec
mov
cmp
stos
xchg
sbbl
mov
inc
jbe
sub
dec
cltd
bound
adc
push
jl
dec
mov
push
test
in
idivl
inc
sbb
rol
gs
std
test
in
mov
mov
dec
jbe
cmp
aas
fwait
lret
in
mov
fldt
mov
dec
cmpsb
inc
cltd
sbb
cltd
fwait
das
add
mov
mov
xchg
and
lock
xor
push
repz
inc
cmp
out
notb
aam
icebp
cmp
sbb
dec
lods
jle
lods
xor
std
xor
mov
xchg
mov
loope
add
sub
lret
mov
and
and
rcr
mov
cwtl
pop
mov
push
inc
in
xlat
int
shll
mov
int
push
negl
inc
cmp
mov
dec
lret
fwait
es
cmpsl
dec
xchg
push
pop
sbb
inc
dec
xchg
loop
xchg
jb
jle,pn
jbe
xor
mov
or
enter
sub
push
cmpps
fdivs
mov
inc
shl
aas
out
adc
incl
fidivrl
sub
add
adcl
dec
cmp
pop
xchg
je
jb
xchg
stc
bound
cmp
aaa
add
hlt
hlt
sub
movaps
inc
push
cmc
jge
mov
je
mov
popf
out
mov
pop
pop
mov
mov
rorl
or
pop
sub
icebp
xchg
sti
sbb
pop
mov
rcl
movsl
pop
dec
shll
js
lea
mov
ljmp
and
stos
or
repnz
in
pop
mov
gs
inc
call
or
test
mov
pusha
or
xorl
stos
sub
inc
push
push
test
into
mov
call
sbb
scas
call
pop
bound
sbb
enter
mov
inc
addl
shrl
xchg
int
cmp
mov
ret
test
push
fdivrs
cli
sbb
cmpsl
iret
jp
or
addl
lock
mov
aas
adc
cltd
stc
enter
dec
ret
clc
movsb
cmp
ja
sti
adc
lea
fadd
cli
mov
fildll
test
lcall
or
cmp
cltd
jl
imulb
int
mov
cmp
lock
addr16
mov
pop
mov
dec
mov
pushf
ret
arpl
js
lds
pushf
dec
jbe
leave
adc
adc
jo
addb
cmp
or
stos
jbe
outsl
sub
ffree
lcall
mov
push
push
push
mov
dec
stos
popf
popf
mov
and
test
enter
xchg
pop
ret
lcall
test
lods
push
enter
out
cwtl
movsl
loop
test
adc
mov
mov
cmp
push
jg
sub
out
popf
mov
sbb
sbb
pop
icebp
mov
xor
ror
movsb
mov
pop
ds
mov
push
es
mov
out
dec
pushf
dec
pop
outsl
jns
cmp
mov
jae
mov
mov
into
test
pop
mov
cli
mov
cld
jge
cwtl
lret
movsl
mov
inc
adc
dec
test
dec
or
repz
xchg
sbb
lret
cmpsl
dec
lret
dec
loope
insl
mov
mov
or
lds
js
mov
xor
sbb
fwait
popf
adc
mov
jl
sti
inc
cmp
or
fadds
pop
sub
incb
mov
lods
test
je
mov
in
and
repnz
push
mov
cmpsl
ret
fnstenv
jge
lea
add
sub
sub
xchg
scas
int3
pop
sub
test
jb
ss
or
lcall
adc
popa
sahf
mov
pushf
shrl
int3
call
jae
pop
pop
mov
mov
mov
cltd
xchg
pop
pop
ds
and
lcall
lds
enter
mov
cmpsb
movsb
leave
in
jmp
push
test
cltd
mov
lcall
mov
adc
dec
sbb
xor
test
repnz
mov
in
cmp
add
pop
push
enter
sub
lret
push
cmp
sub
inc
push
pushf
xor
lret
mov
or
mov
sti
aad
push
push
sub
xor
cs
mov
sub
xor
adc
mov
mov
repz
cwtl
aas
add
bound
inc
mov
xchg
enter
cwtl
mov
mov
rol
mov
add
and
push
xchg
addl
inc
cltd
aad
jnp
pop
jmp
add
xor
cs
sbb
in
ret
mov
sub
mov
lahf
lods
aas
fldl
mov
xor
fdivl
dec
mov
mov
dec
mov
adc
hlt
int
xchg
aad
push
dec
js
fwait
mov
lods
or
jo
jno
jp
in
jae
mov
mov
fildl
sbb
and
enter
pushf
mov
cmp
pusha
dec
sub
jp
pushf
xor
repnz
sbb
mov
xor
movsl
aas
repz
ret
orb
lock
mov
mov
xor
fucomp
cmp
cmp
lahf
jbe
add
pop
fbld
pop
pop
jo
sahf
cmpsb
sti
push
sub
inc
fwait
stc
mov
sbb
xchg
hlt
xor
cmc
add
mov
cltd
push
mov
mov
xor
mov
movsl
lea
sarb
adc
call
cmc
or
mov
pop
dec
aaa
testl
inc
jg
mov
jp
mov
jnp
push
aad
test
mov
outsl
mov
push
ret
mov
orb
arpl
push
sbb
mov
in
pop
push
add
or
sub
fyl2xp1
fstpl
push
push
xchg
lcall
push
pop
ficoml
and
add
popf
popf
fmulp
pop
sbb
sbb
sbb
jecxz
jmp
add
cmp
push
xor
jmp
inc
lcall
cmpsl
imul
stc
into
clc
and
cs
sti
enter
in
stc
aam
fsubs
mov
cmp
int
sub
dec
pusha
cmc
pop
cmpsl
push
fbstp
push
stos
imul
mov
clc
inc
jns
inc
mov
insl
leave
mov
mov
rclb
ret
xchg
sub
and
rorl
xchg
cmpl
shll
in
sbb
push
dec
repz
fcmovu
jmp
lock
ss
mov
pop
into
stos
cmp
aas
adc
outsb
push
add
stos
push
mov
or
pop
scas
jb
mov
add
mov
das
into
das
adc
int3
jmp
lcall
add
ljmp
mov
iret
out
call
mov
jge
insb
test
cltd
repnz
cmp
popf
mov
add
push
xchg
cmp
pop
adc
aaa
mov
out
mov
in
xor
xchg
cmp
jbe
inc
pop
aad
daa
inc
push
inc
xchg
mov
sbb
add
pushf
add
mov
inc
rolb
or
test
mov
xchg
test
rcrb
mov
cmpsb
dec
pop
fdiv
jmp
ss
loop
mov
dec
jno
cmp
in
test
lahf
mov
add
push
aam
lods
pop
movsb
movsl
clc
jo
fldt
outsb
pop
pop
insb
push
mov
pop
outsb
push
and
outsb
out
push
push
outsb
notl
and
ljmp
fwait
or
dec
push
and
inc
pusha
popa
lds
pusha
add
js
outsl
inc
pop
aam
idivl
sbbb
pushl
insl
ret
insl
out
jp
add
aam
out
push
aam
xlat
insb
jbe
rcrl
fbld
imul
fs
ds
adc
fsub
pop
inc
xor
sbb
loope
adc
xchg
sbb
xor
mov
xor
xchg
add
test
inc
xor
adc
loopne
jae
xchg
adc
xor
xor
popf
push
inc
mov
adc
sbb
repz
or
jecxz
shrl
or
and
dec
mov
xchg
ret
js
add
mov
add
loop
mov
xchg
add
xor
xor
mov
dec
cld
mov
les
outsb
out
outsb
push
das
or
cmp
xchg
stos
lret
fpatan
pop
scas
dec
ss
pop
test
push
mov
mov
push
or
inc
mov
dec
pop
sub
loopne
sub
out
cmp
popl
int
shrb
outsb
mov
jl
push
sub
dec
jno
out
das
mov
push
pop
mov
jne
cmc
mov
mov
jle
and
jl
imul
in
and
sbb
int
mov
pop
sbb
jb
pop
push
fnstcw
outsb
push
add
xchg
stos
adcl
add
lds
add
dec
mov
shlb
xor
cli
mov
adc
xlat
mov
iret
sbb
or
inc
cs
mov
mov
faddp
rcll
and
clc
pushf
sbb
dec
sbb
push
mov
pop
mov
sub
pop
or
test
and
test
aam
lahf
inc
leave
fisubs
ja
scas
add
jl
push
stos
daa
add
jae
in
push
and
mov
and
ror
imul
mov
in
jnp
pop
mov
mov
xchg
jl
fdivs
adc
enter
jnp
ret
ret
in
cs
xor
insl
int3
jb
adc
jne
sbb
cmpsl
push
movsl
lcall
sub
xor
or
xchg
mov
cmp
jp
add
mov
jmp
mov
mov
cmc
mov
int3
inc
mov
dec
inc
ljmp
xlat
les
adc
mov
ficompl
jno
or
xor
fwait
bound
jl
movsb
or
adc
xor
xchg
pop
test
mov
add
nop
sbb
adc
xor
xchg
data16
lret
pop
mov
and
fisubs
jg
les
test
jb
aas
inc
cmp
and
sbb
repnz
call
insl
test
and
push
mov
outsl
jge
mov
or
push
nop
pop
or
xchg
addr16
out
cmp
sbb
xor
jns
jg
cmp
push
sub
cmc
xor
push
adc
hlt
inc
mov
pushf
push
sub
mov
mov
mov
jmp
and
popf
mov
cmp
jp
add
mov
jmp
mov
mov
cmc
mov
int3
inc
mov
dec
inc
ljmp
xlat
les
shrb
lods
or
pop
inc
aaa
mov
push
dec
outsl
in
in
bound
ds
xlat
mov
xor
add
dec
cmp
jo
mov
int
sbb
add
push
cmp
cltd
lahf
fimuls
push
sbb
lods
xchg
rclb
sahf
scas
add
mov
iret
movsl
orl
jl
mov
fisttps
dec
mov
cmpsb
repz
or
cmpsl
mov
mov
inc
fimuls
adc
jecxz
sub
in
or
jl
loope
mov
popa
cmpsl
sub
mov
cmp
lods
inc
mov
cmp
xlat
test
je
adc
cmp
cmp
lret
or
rep
dec
or
ja
pop
jmp
and
jecxz
mov
fistps
cmp
shr
aam
inc
sbb
inc
push
lret
std
dec
out
in
stos
mov
icebp
loop
icebp
pop
mov
iret
mov
fsubr
push
jae
aaa
xchg
testl
xchg
jnp
or
in
mov
insl
cmpsl
and
pop
adc
adc
fs
sahf
pop
int3
cmp
dec
jae
sub
mov
or
mov
jo
sbb
push
sbb
mov
repnz
enter
imul
mov
sub
or
xor
lcall
and
push
aaa
jb
dec
pop
or
incb
pop
mov
in
xor
push
dec
or
roll
xor
cld
test
inc
mov
repz
sbb
mov
std
ret
cltd
cmp
scas
and
dec
sub
sub
jno
fsubrl
sahf
sub
jno
sbb
sub
or
lahf
jbe
mov
dec
xor
pop
and
icebp
sti
arpl
dec
sub
sbbb
cs
or
dec
cmpsl
pop
scas
mov
gs
nop
lea
inc
xchg
dec
iret
jb
fwait
jecxz
pusha
mov
jmp
scas
inc
fwait
out
stc
hlt
xchg
adc
and
xchg
mov
lcall
mov
cltd
cmp
and
movsb
test
lds
fadds
or
sub
pop
dec
fld1
jb
inc
cmpsb
out
cltd
imul
inc
adc
push
or
int
imul
jns
shl
fcoms
add
addr16
mov
sahf
ret
mov
jns
into
mov
jecxz
out
pop
add
aas
mov
mov
mov
pop
adc
pop
xor
dec
lahf
inc
push
arpl
lahf
filds
mov
mov
aaa
imul
sbb
jae
xor
mov
cmp
inc
xchg
mov
xchg
xchg
popa
and
stos
cmpb
xchg
addl
inc
pop
loope
cmpsl
add
fnsave
adc
int
nop
scas
lods
push
mov
in
jge
add
inc
leave
inc
roll
xor
push
dec
in
ret
jb
dec
aam
stc
xor
call
fs
mov
push
out
inc
out
pusha
in
or
xchg
cmp
int3
outsb
sbb
inc
xor
xchg
and
or
mov
jmp
mov
lods
repz
test
rcrl
loopne
rcr
mov
xor
hlt
repz
sti
mov
dec
cmpsl
mov
leave
aaa
mov
xchg
rol
in
or
mov
and
or
ljmp
ljmp
jge
nop
test
add
sub
xchg
mull
adc
mov
daa
xchg
int
or
shr
movsl
xchg
mov
add
xchg
add
adc
pop
ret
xchg
cmp
stc
sub
xchg
pop
rorb
cli
shl
sbb
cwtl
stc
xor
data16
or
idiv
mov
data16
je
or
jecxz
movsl
ret
fdiv
push
fdivrl
fistpll
or
inc
pop
cmp
jp
fcomps
jns
enter
xchg
jl
in
sub
cmp
stc
hlt
mov
jmp
pop
lea
aaa
in
mov
sub
popw
ret
cwtl
loopne
roll
sbb
add
in
fsubrp
xor
sub
iret
cmpsl
scas
imul
mov
mov
xlat
stos
les
jp
outsl
jb
notb
xlat
sbb
fnsave
test
clc
inc
jnp
add
push
cld
mov
xchg
fimuls
sbb
mov
mov
lock
inc
shlb
jne
scas
mov
cmp
pop
cs
insb
scas
es
leave
loop
dec
repz
aas
inc
cmp
loope
andb
mov
out
loope
push
xchg
sahf
addr16
aam
push
mov
lods
repz
scas
mov
pop
dec
jns
sar
aaa
fincstp
xchg
imul
cmp
mov
sbb
aaa
stos
add
push
pop
xor
movsb
sub
mov
adc
movsl
ficomps
fcomps
leave
cmp
cmpsb
mov
mov
mov
in
shl
mov
pop
add
adc
lock
mov
sbb
leave
sar
cwtl
ds
push
clc
pusha
test
xchg
insl
scas
push
test
sub
cld
mov
pusha
pop
int3
jmp
mov
fsub
jmp
ss
push
mov
test
jnp
pop
stos
xchg
xlat
inc
pop
fwait
jnp
pop
sbb
jmp
xlat
test
pusha
mov
push
xchg
mov
fwait
scas
inc
xchg
cli
repz
jl
mov
or
or
sbb
pop
sbbb
xor
mov
sbb
and
pop
lods
mov
jmp
cmc
fldl
pusha
int3
rorb
or
sub
clts
hlt
test
xchg
fcoms
std
push
mov
xchg
cmpsl
jne
cmp
aad
repz
adc
pop
mov
jg
mov
jns
shll
sahf
xchg
mov
jmp
mov
ret
mov
cld
xchg
mov
cmp
lock
xchg
push
mov
ljmp
sbb
inc
sbb
mov
jbe
insl
paddusb
sub
in
and
inc
cmp
dec
addr16
mov
xchg
adc
cli
cltd
mov
aaa
push
fstp
mov
add
xchg
ds
int3
in
stc
sbb
add
call
enter
xchg
cmp
add
ljmp
jl
sbb
aam
mov
lods
fucomip
push
test
das
adc
inc
cmp
cmpsl
ret
test
dec
or
lods
or
cltd
out
mov
sub
jge
lock
iret
lods
out
sti
int
inc
sub
in
cs
jle
pop
push
xchg
ficoml
push
mov
int
lcall
or
sbb
add
lods
and
mov
sub
and
cmp
add
daa
inc
lods
adc
mov
add
jne
mov
stos
sub
movsl
pop
jg
dec
pusha
pop
mov
fcmovnu
ljmp
inc
sarl
inc
shrl
arpl
mov
sbb
sbb
xchg
out
shrb
fcoms
aas
mov
inc
jae
shl
adc
ret
int3
mov
in
int3
cmp
imull
jo
pop
xchg
ljmp
mov
loop
mov
mov
inc
lock
mov
adc
mov
insb
es
sub
roll
cltd
call
cwtl
sti
push
iret
sbb
fdivs
out
mov
fsubr
push
adc
pop
loop
xchg
js
in
push
stos
shll
xchg
fstps
sti
addr16
mov
pop
add
fistps
lret
xchg
inc
shl
mov
adc
pop
xchg
and
and
movsl
leave
test
repnz
ret
and
dec
enter
stos
mov
push
cld
and
lea
lods
roll
int
xor
dec
cmc
lret
daa
into
mov
shrl
es
scas
xchg
in
inc
mov
push
lahf
jg
inc
lcall
shll
lahf
mov
pop
xlat
and
pop
mov
xchg
inc
popf
scas
mov
xchg
jae
stc
loopne
and
or
xchg
adc
mov
and
lea
xchg
sbb
mov
imul
push
cmp
inc
mov
jp
into
pop
enter
sbb
mov
test
xchg
dec
xor
das
mov
das
sub
push
cmp
inc
pop
pop
dec
pop
loopne
xor
cmp
jnp
xchg
mov
stc
cmp
mov
int
inc
sbb
or
or
mov
xor
lods
lcall
outsb
scas
leave
cmp
call
lods
outsl
shr
mov
sbb
test
loope
fs
cmp
xchg
xchg
jo
int3
sub
cmpsb
mov
mov
imul
fldcw
movsl
test
ja
enter
push
and
push
mov
loop
sbb
or
and
out
mov
dec
mov
shll
lahf
lods
push
test
sub
pop
fdiv
mov
push
jo
mov
leave
or
mov
mov
mov
je
dec
inc
dec
push
or
mov
adc
lret
in
pop
xchg
lret
sbbb
ljmp
dec
add
mov
mov
pushf
mov
pop
dec
add
mov
lret
cmc
and
xchg
fsts
lods
fsubrl
lcall
cmpsl
jge
mov
xchg
inc
test
pop
sbb
mov
sub
cmp
xchg
fsts
cmp
push
arpl
and
test
into
mov
push
in
inc
cmp
sub
cmp
pusha
push
pop
insb
adc
push
mov
xlat
mov
xchg
sub
xor
jbe
sub
sub
mov
out
int
ret
fldenv
sti
mov
js
scas
cmp
gs
mov
push
das
xchg
les
pop
fisubrs
xor
inc
mov
pop
mov
xchg
sub
jbe
movsl
adc
inc
mov
in
cmp
sahf
mov
popf
mov
dec
lret
add
adc
scas
mov
movsb
leave
int3
push
jae
imul
fs
xor
mov
dec
mov
mov
stc
push
mov
paddusw
dec
rcr
cmp
mov
ret
xchg
cmp
jns
imul
inc
lcall
loope
xor
inc
lds
sub
mov
test
pop
outsb
repz
cltd
lahf
and
adc
shl
stos
out
stc
leave
dec
sti
cli
arpl
add
inc
and
mov
rorb
xor
repnz
cltd
sub
shlb
fwait
lret
inc
pop
clc
pop
ror
out
sub
or
pushf
sbb
push
mov
adc
movsb
pushf
stc
mov
int3
dec
jp
jmp
daa
pop
sbb
dec
mov
leave
arpl
or
push
dec
into
inc
sahf
mov
inc
add
lods
roll
mull
add
mov
hlt
sbb
cmp
faddl
call
fwait
push
imul
xor
shr
jbe
fbld
in
gs
andl
loopne
and
mov
lcall
js
or
adc
mov
rorl
sbb
jbe
scas
ret
sbb
mov
cmp
shl
fists
adc
insl
filds
mov
dec
jns
mov
pushl
stos
push
scas
popl
mov
mov
cmp
out
mov
rcl
mov
stos
inc
adc
pop
add
jb
sar
xlat
pop
xchg
mov
les
fbstp
and
fdivl
pop
movsb
popf
out
jnp
or
inc
push
jbe
mov
into
loopne
cmp
add
test
dec
incb
inc
rep
xchg
outsb
ja
lret
sbb
ja
inc
sub
inc
adc
shlb
cli
mov
mov
loop
add
icebp
mov
push
enter
sbbl
into
push
clc
ss
jne
les
mov
js
fidivl
dec
pop
jae
add
cmc
loope
pop
pusha
test
sbb
subb
sbb
shrl
stos
movsl
xor
mov
dec
test
les
mov
popa
dec
sub
dec
les
or
out
fstpt
jle
bound
pushf
nop
clc
xor
add
xchg
daa
xchg
int
mov
roll
push
je
test
pop
test
jne
dec
xor
out
mov
lds
mov
fwait
repz
shlb
hlt
fdivl
push
mov
mov
lret
cmpsl
mov
fiadds
adc
or
pop
inc
inc
pushf
sub
je
cwtl
lods
mov
jge
inc
inc
mov
add
je
pop
dec
aaa
test
or
mov
inc
scas
push
sarb
bound
mov
dec
fsub
lds
lods
fadd
lods
dec
or
mov
mov
das
xchg
stc
cli
out
subb
data16
and
xchg
movsl
sbb
xchg
push
pop
mov
movl
subb
add
adc
add
test
filds
mov
jne
outsb
dec
add
cmp
fs
adc
test
or
ret
jo
inc
test
and
orl
sub
adc
pop
jp
mov
hlt
mov
test
es
leave
roll
xchg
push
rolb
int
pop
sub
and
ja
ret
lds
rcll
dec
mov
ret
mov
lock
je
fnsave
lock
mov
adc
fiaddl
or
scas
pop
ja
int3
int
mov
xchg
jmp
push
test
cwtl
mov
inc
fwait
or
xchg
loop
mov
pop
xchg
int
test
outsl
and
mov
inc
cmp
call
fistps
sub
movsb
mov
xor
fwait
lods
pop
xchg
cmpsl
jnp
movb
jecxz
pusha
and
mov
hlt
cmp
push
adc
daa
cmpsl
add
jne
movsl
mov
fcomps
add
xchg
pusha
leave
xor
mov
repz
xchg
mov
sarb
inc
inc
push
push
insb
lea
jb
fwait
insl
ds
aam
jle
xor
enter
or
mov
lret
inc
pop
aam
loope
sbb
mov
xchg
je
mov
mov
mov
mov
jno
mov
xor
dec
xchg
pop
mov
mov
add
dec
mov
pop
loop
enter
mov
mov
jae
mov
cmp
sub
cmpsb
aaa
mov
loope
mov
pop
in
xchg
mov
and
test
sbb
xchg
stos
arpl
ret
mov
mov
fistpl
cltd
sbb
sbb
in
jo
scas
movl
aam
js
pushf
mov
sbb
add
test
mov
gs
gs
loopne
aaa
adc
lods
cmp
insb
fists
out
jo
push
xchg
std
mov
js
ss
cltd
enter
xchg
stc
sbb
add
shl
inc
lea
test
push
das
or
mov
pusha
pop
aam
pop
addr16
xchg
pop
addr16
sbb
xor
mov
xchg
xchg
mov
mov
push
jecxz
mov
sahf
xchg
in
enter
rcrb
lds
jl
sbb
mov
arpl
pushf
in
dec
sbbl
dec
pop
pop
sbb
outsb
push
or
pop
mov
and
push
push
or
push
sub
adc
push
sbb
repnz
sti
enter
sti
nop
inc
sbb
sbb
testl
es
gs
jb
mov
nop
rcll
cmp
xchg
mov
lahf
xchg
and
fistl
dec
loope
into
sbb
sti
aam
icebp
pop
mov
mov
jl
shrl
gs
adc
xchg
aad
in
push
or
negb
roll
mov
jle
xchg
lret
dec
mov
adc
pusha
sbb
mov
mov
jle
adc
or
jle
imul
jmp
sahf
xchg
pop
jnp
sub
loopne
and
inc
lahf
cmp
popf
lret
rcll
cmp
outsb
push
idivb
insl
push
xor
mov
push
sub
cmp
jmp
jg
inc
inc
mov
or
stc
js
or
sub
or
es
call
fsubrs
and
sbb
and
fwait
jo
cmpsb
xchg
rclb
cld
jno
inc
call
insb
clc
ret
int
dec
cmp
jne
xorl
mov
xor
stos
pop
jne
test
mov
ror
mov
inc
inc
dec
mov
repz
jns
pop
loopne
dec
mov
and
pusha
lret
jecxz
out
cltd
fdivl
sbb
idivl
imul
sbb
cwtl
pop
enter
mov
ret
push
repnz
push
dec
mov
add
shll
ret
into
in
scas
lahf
jae
dec
cmpsl
mov
aaa
sub
adc
xchg
sbb
pop
dec
push
fistps
push
std
cld
stc
mov
mov
aaa
insl
ss
mov
jp
aam
inc
ljmp
sbb
pop
fists
jns
lret
jge
in
mov
adc
jo
arpl
repz
xor
mov
dec
and
dec
push
xchg
sbb
movsb
and
cwtl
rolb
xor
jge
ja
mov
xchg
mov
lea
lret
dec
mov
rol
adc
jl
mov
insl
xchg
in
pop
xor
mov
sbb
mov
sbb
sbb
xor
push
or
rolb
movsl
add
xor
ret
sbb
dec
push
shlb
dec
push
sbb
and
mov
shrb
add
jae
test
arpl
push
fsts
mov
pop
mov
insb
insl
mov
aaa
lret
cli
inc
pop
inc
mov
xchg
mov
lcall
mov
push
and
out
aam
popf
scas
push
push
xchg
inc
stos
inc
addl
mov
dec
mov
jg
inc
adc
mov
cmp
xchg
sbb
int3
sbb
inc
ss
xchg
inc
fisttpl
shlb
mov
jbe
sbb
ja
inc
push
adc
inc
icebp
mov
iret
lods
cmpsl
fwait
int
gs
cld
insb
push
pop
pop
sahf
dec
test
dec
xor
das
push
mov
adc
mov
fisttps
sbb
jmp
lock
pop
xchg
mov
jp
mov
mov
and
inc
xchg
lret
es
aad
cmp
jge
leave
xchg
je
push
mov
shrl
out
gs
push
mov
cld
adc
push
inc
jae
movl
and
pop
adc
xchg
adc
fistpl
enter
cmpsl
dec
jo
xlat
add
mov
popa
aad
fadd
jl
ret
xor
xor
repz
jne
subl
cmpl
mov
or
or
subb
dec
jmp
lcall
loop
je
pop
shlb
fsubp
lcall
enter
shlb
xor
js
push
fwait
hlt
jl
dec
mov
mov
jecxz
fsubr
test
jne
mov
adc
xor
inc
ret
pop
nop
shlb
repz
pusha
sbb
or
cmp
shlb
sbb
add
sub
sbb
mov
imul
stos
cmp
jecxz
or
out
cmp
jae
repnz
pushf
lds
cld
cmpb
or
xchg
mov
mov
cli
movsl
mov
aaa
pushf
xor
arpl
insb
jp
xor
mov
add
mov
push
add
addl
and
imul
mov
les
dec
fsubr
xchg
xchg
inc
jp
dec
push
dec
stos
negb
and
and
mov
mov
jnp
mov
add
cmp
jo
and
mov
or
adc
lea
rcll
dec
mov
cmp
in
ss
repz
inc
icebp
iret
std
imul
aad
add
xchg
pop
vmovdqa
aad
pushf
sbb
je
int
xchg
decb
push
adc
sub
ljmp
inc
lahf
imul
lods
jae
mov
std
mov
push
lret
daa
push
pushf
mov
punpckhbw
je,pt
inc
scas
jne
dec
push
pop
mov
or
adc
sarl
test
mov
mov
fldenv
mov
add
jo
loopne
and
shr
iret
and
or
fidivrl
out
mov
fimuls
xor
cmp
push
cwtl
lock
lahf
push
inc
dec
loope
pop
mov
in
xor
lahf
cmp
mov
push
mov
jecxz
call
add
idivl
sub
outsb
dec
xchg
or
ret
cmp
fxch
loopne
mov
xlat
je
xchg
lea
repnz
cmp
sub
loopne
cld
jg
xchg
xor
xchg
dec
push
pop
jecxz
outsl
insl
test
mov
stc
jecxz
jns
je
sbb
inc
mov
int
js
sbb
xor
test
rorl
sub
and
lcall
pushf
imul
sub
lds
sub
dec
lea
jae
pusha
push
je
mov
sbb
dec
and
clc
add
jne
cmp
xor
jne
mov
adcb
mov
aam
fisttps
mov
jns
fidivrs
outsw
jl
rorl
inc
jle
and
mov
popf
out
push
cmp
jmp
adc
bnd
cmp
pop
inc
xor
sub
loopne
gs
imul
fbstp
ficoml
int
sbb
pushl
add
mov
call
mov
push
adc
aad
aas
gs
outsl
sub
imul
mov
mov
in
jbe
dec
lret
insl
ljmp
ljmp
pop
sbb
inc
adc
push
mov
sbb
pop
inc
push
enter
pushf
mov
pop
cltd
lods
movb
push
sbb
mov
adc
js
cmp
scas
lahf
icebp
or
repz
mov
add
inc
sub
ds
lock
xchg
mov
fwait
jmp
or
sbb
ja
addb
aad
inc
outsb
and
xor
int3
pop
mov
js
xor
sahf
pop
cmc
or
xchg
pop
sub
xchg
les
inc
int
imul
popa
inc
sub
stos
inc
inc
xor
xor
add
mov
pop
mov
or
cmp
xor
testl
dec
jo
dec
mov
mov
daa
push
inc
push
push
js
jg
push
popf
test
sbb
out
pop
adc
push
cld
stos
sub
xchg
pop
adc
repnz
test
mov
movsl
shll
xchg
inc
leave
insl
cmp
jno
push
outsb
cmp
jns
sub
sub
movl
mov
loopne
add
je
enter
nop
mov
cmpsl
and
jae
xor
insl
jo
andl
jl
mov
pop
and
test
js
loopne
fadds
pop
out
out
push
andl
jo
test
mov
pusha
jg
lock
add
inc
mov
or
push
mov
or
roll
out
in
std
shlb
ds
add
pop
das
xor
sub
fsubrs
sub
mov
loopne
mov
or
cltd
mov
fs
xor
outsb
cmp
mov
dec
jno
cld
or
ret
mov
adc
inc
outsb
mov
int
lods
ljmp
mov
sbb
lods
sbb
rsqrtps
sarl
pop
sbb
pusha
test
push
pop
pop
outsl
ret
test
sub
cmp
mov
pop
out
mov
jbe
adc
pop
mov
out
xchg
sub
imul
inc
inc
sbb
pop
ds
movsb
test
fisttps
fnstsw
cmp
imull
mov
mov
loope
into
add
out
cs
stc
mov
int3
inc
jle
and
mov
shlb
cltd
cmp
aad
ja
lods
test
dec
dec
sahf
ss
and
popf
jno
ljmp
lods
mov
dec
incb
rorb
jge
lahf
fwait
outsb
push
sbb
subb
sbb
iret
fwait
orb
push
add
movsl
repnz
inc
mov
call
lcall
cmpl
imul
out
push
lahf
jp
cmpsl
mov
das
xor
test
cmp
jnp
inc
outsb
jmp
test
popf
mov
add
dec
fisubrs
test
cmp
xor
push
and
cmp
ret
mov
pop
inc
mov
scas
mov
cmpsl
fimull
pop
shlb
gs
imul
jno
icebp
hlt
jmp
mov
xchg
rcr
insl
pop
mov
lret
mov
cmp
add
cmpsb
sub
mov
dec
sbb
inc
in
jne
jae
test
mov
adc
pop
jl
in
sbbl
lahf
lret
jecxz
cmp
jle
xchg
pop
xor
shrl
fcomi
sub
sahf
pushf
das
lahf
repnz
pop
mov
loope
stos
add
fstp
dec
sbb
mov
sbb
jno
push
mov
cmp
jno
insl
mov
ret
adc
jns
add
cmp
fs
out
dec
mov
mov
mov
adc
jbe
pop
inc
pusha
push
hlt
fisttpll
mov
fs
sti
and
addl
adc
int
add
inc
cltd
or
out
inc
addr16
push
push
jns
cmp
aas
jnp
out
lret
xor
movsl
inc
push
cmpsl
ljmp
add
mov
sbb
mov
sub
cmpsl
jle
imul
shlb
movsb
jecxz
pop
cmpsl
pop
sar
movsb
xor
pop
push
inc
in
mov
stc
clc
sti
jmp
shlb
pcmpgtw
inc
sub
sbb
lsl
push
cmp
movsb
aam
loope
mov
adc
dec
out
or
cmp
mov
xchg
xchg
dec
popf
lret
aad
push
and
stos
xor
in
xor
sti
pop
movsl
push
lods
ja
dec
xchg
inc
les
mov
test
jmp
push
mov
and
stos
das
xchg
or
sub
xlat
adc
pop
pusha
mov
jmp
xchg
test
fbstp
test
xor
pop
aaa
add
mov
xor
jnp
js
mov
fiadds
xor
in
lock
mov
inc
aam
mov
dec
jo
in
mov
aam
movsl
xor
sub
xchg
cmp
sarb
ret
mov
data16
je
mov
mov
divps
jnp
jmp
cmc
xor
cld
clc
sub
imul
call
cmp
lret
mov
ror
xor
aam
stos
sbb
fwait
out
repz
jmp
push
jl
jmp
inc
sbb
lret
mov
popa
add
add
pushf
push
cmp
enter
insl
cmp
lcall
iret
rclb
lods
in
js
rcll
add
mov
mov
int
pop
jns
jmp
fs
mov
clc
dec
mov
cmp
xor
xchg
xor
enter
mov
jae
fstp
fsubrs
adcb
aam
push
rcrl
xor
cs
sbbl
add
mov
sub
mov
cmp
popw
pop
roll
dec
ret
pop
xchg
and
aad
mov
cld
nop
ss
inc
or
or
lret
stos
enter
mov
vmaxss
fidivrs
jae
pop
lds
fs
adc
xchg
lcall
mov
pop
mov
inc
pop
xchg
xchg
int
xor
shrb
lock
sub
sbb
shll
jo
in
mov
fyl2x
xor
pop
and
or
repz
icebp
xchg
jge
xchg
add
adc
or
insb
aam
mov
fs
or
mov
jb
lock
mov
dec
mov
fwait
enter
ret
jl
sub
cmp
lea
add
xchg
cwtl
inc
xor
dec
mov
arpl
inc
cmc
jno
sbbl
mov
aad
jo
or
mov
add
mov
ss
int3
in
rcrl
es
mov
pop
add
test
test
int3
fdivrp
loopne
xor
pop
popf
test
lret
cmpsl
dec
ljmp
cmpsb
iret
mov
scas
xchg
push
cmc
mov
gs
sti
dec
or
icebp
fs
jne
int3
cmp
cltd
pop
fwait
sbb
mov
lret
and
loop
jo
or
shlb
sbb
shlb
xor
mov
pop
push
clc
shll
push
push
xor
in
jbe
mov
lahf
push
xchg
and
pop
lea
stos
into
push
iret
sbb
pop
mov
xchg
add
or
sbb
adc
mov
mov
sub
test
pop
ficoml
add
bnd
pop
sbb
cwtl
xor
sbb
js
sbb
pop
pop
dec
xor
repnz
fidivrs
dec
mov
filds
insl
fwait
dec
sahf
cmp
flds
aaa
or
in
mov
lods
sub
mov
repz
sub
xchg
stc
cli
in
test
mov
es
nop
inc
fcoml
roll
fistpll
stos
in
stos
popa
imul
xchg
pop
js
jmp
cmp
popa
or
mov
loope
inc
pop
add
test
jb
or
rorl
cmc
fmul
mov
or
pop
ds
mov
lcall
mov
repnz
adc
xchg
add
cmpsl
cmp
sub
mov
enter
xchg
xor
inc
enter
cld
cmpsl
dec
jl
imul
mov
sub
test
mov
mov
aad
or
ja
test
aam
in
mov
fs
inc
adc
cmp
mov
enter
pop
dec
inc
jg
inc
sub
ljmp
mov
repz
jo
xchg
hlt
dec
sbb
push
dec
into
lcall
dec
mov
cltd
mov
popa
push
jp
pop
push
push
ds
es
stos
outsb
push
push
mov
mov
and
cmp
test
push
jle
sbb
inc
inc
push
test
movsl
sbb
cwtl
stc
sub
data16
or
push
lods
call
les
fwait
out
jp
subl
mov
out
xor
mov
mov
mov
arpl
mov
mov
mov
dec
push
or
ljmp
adc
ret
ljmp
jp
sub
push
mov
in
mov
jmp
clc
sti
mov
mov
mov
jmp
pop
loopne
push
mov
jne
xchg
lret
movsl
mov
push
pop
test
mov
movsb
fidivrl
insl
dec
sub
mov
fs
sbb
mov
jp
push
dec
cltd
and
mov
xchg
sbb
xchg
mov
adc
jae
movsb
int3
jb
cmp
adc
pop
fdiv
icebp
sbb
dec
sub
push
idivl
push
push
sub
in
pop
js
mov
mov
packuswb
in
call
mov
xchg
imul
push
add
xchg
cltd
dec
mov
jg
out
adc
data16
or
insb
aaa
and
test
outsl
fbld
ficoms
movsb
cs
mov
clc
and
rorb
cmp
lret
inc
cwtl
lea
pop
add
inc
ficoml
mov
lahf
mov
cmc
lret
dec
pop
pop
xor
mov
bnd
adc
jle
push
dec
jb
movsb
sahf
mov
adc
push
ficompl
pop
int
jae
mov
sbb
ror
popf
cmp
imul
sbb
sbbl
mov
jb
push
mov
lret
and
ja
add
inc
pop
mov
lahf
inc
outsb
scas
push
fucomi
repnz
fbld
scas
fwait
leave
loop
js
pop
pop
sbb
sbb
stos
add
lahf
divl
je
mov
inc
cmp
dec
mov
dec
adc
insb
imul
jg
pop
sbb
fdivp
cmp
push
pop
pop
pushf
mov
or
loope
test
and
js
inc
xor
or
pop
mov
dec
sbb
cs
or
lea
cmp
xor
jmp
clc
sti
mov
insb
mov
sbb
aaa
mov
mov
xchg
xor
ss
loop
xor
faddl
test
push
xorl
stos
dec
daa
xor
in
mov
mov
leave
sarl
movsb
icebp
popa
inc
push
xor
adcl
fisttpl
pop
and
cmpsl
adc
imul
fcoml
sbb
push
fadd
dec
enter
lahf
xchg
or
imul
scas
leave
xchg
mov
popl
and
mov
adc
or
add
loop
sarl
ds
mov
mov
push
out
sub
push
lods
jle
sbb
daa
daa
mov
lahf
mov
mov
jle
mov
and
cmpsb
hlt
pop
ljmp
push
sub
ret
fwait
lods
divb
jge
mov
jno
lea
mov
push
jl
sbb
fbld
loope
sub
shlb
pop
mov
sbb
loop
stos
pop
xchg
cmp
sub
mov
mov
nop
push
inc
stos
cmp
mov
in
std
fmull
sub
mov
pop
idiv
ficomps
adc
fwait
sbb
cmp
add
and
pop
push
cld
jnp
xchg
push
ficoml
sbb
inc
popa
lock
push
arpl
aad
ret
add
sarb
or
fldl
add
push
or
and
cmpl
test
jmp
sub
addr16
push
xor
leave
imul
push
mov
pop
xchg
sahf
push
add
fldenv
pusha
pop
add
jecxz
inc
call
cmp
adc
mov
repz
sub
jmp
or
cs
or
and
in
inc
mov
test
jnp
mov
std
je
mov
stc
test
jmp
jg
hlt
jno,pn
cmp
push
push
sbb
rcrb
repz
jns
xchg
into
mov
mov
subl
std
fbstp
xchg
mov
ret
fisubl
insb
pop
inc
sbb
jno
test
or
xchg
outsl
cmpsb
stos
inc
lcall
mov
adc
and
in
sbb
js
xchg
cmpsl
inc
addr16
leave
in
xchg
loop
xor
cmp
push
adc
call
rclb
jne
fwait
jge
data16
xchg
loope
xchg
xor
jmp
lea
shrl
ret
inc
xchg
and
and
xchg
inc
cld
shrl
mov
ja
mov
dec
push
or
sarl
fst
or
dec
xchg
dec
mov
lahf
pushf
push
call
dec
xchg
leave
cwtl
xchg
rcll
sahf
ret
dec
jnp
cmpsl
cwtl
scas
xchg
dec
sti
and
flds
xor
test
ffree
int
data16
push
neg
lods
fstp
push
sbb
loop
arpl
lods
dec
pushf
popf
adc
mov
subl
rcll
addr16
adc
mov
xchg
lcall
xchg
adc
or
test
adc
in
sub
mov
js
jle
cmpsb
inc
stc
leave
inc
and
push
pop
xchg
clc
xlat
clc
sbb
jle
inc
out
adc
push
pop
mov
or
dec
ficoms
mov
out
fwait
ja
stos
out
leave
ljmp
mov
cmp
jb
sti
mov
inc
mov
and
movsl
roll
hlt
jl
push
loope
pop
loopne
or
fisubrs
sub
jnp
sbb
rcl
jnp
je
sbb
loop
xor
pop
inc
mov
and
mov
mov
fwait
pop
iret
fwait
xorb
xor
ja
int3
dec
push
cltd
aad
in
pop
nop
xlat
stos
jp
push
sub
jb
mov
sbb
cli
jae
pusha
imul
cmpl
test
xchg
dec
push
adc
les
push
dec
xchg
adc
mov
mov
test
sbb
dec
in
xor
fwait
push
pop
std
fildl
cli
jo
sahf
daa
js
pop
je
push
jo
pop
mov
pop
ret
sbb
sahf
dec
mov
fiaddl
ret
jne
mov
aaa
mov
jo
jns
xor
sti
ret
push
xorb
ret
xor
mov
gs
pop
loope
ret
aas
cmpsb
xchg
or
dec
cmp
fimuls
dec
test
arpl
xchg
xchg
xor
jge
push
pop
push
add
and
inc
inc
roll
cwtl
mov
testl
mov
jecxz
cld
cmc
ffree
sbb
and
dec
push
pop
mov
test
divb
fldcw
cli
inc
frstor
filds
xlat
cmp
in
test
leave
adc
jnp
xchg
movb
test
pop
ja
shll
lcall
cmc
xor
xor
mov
or
ficompl
mov
enter
jp
inc
mov
enter
jae
push
add
loope
sub
dec
mov
xchg
inc
add
ret
sbb
scas
pop
clc
cmc
pushf
cmpsl
push
add
movsl
je
enter
outsl
xor
adc
sbb
mov
dec
cmp
xor
mov
or
cmpsl
mov
ja
sbb
shrb
mov
pop
addr16
lock
stos
mov
lods
fstpl
cmpl
push
dec
push
lahf
roll
popf
out
mov
in
add
loopne
mov
hlt
or
aam
imul
xor
jmp
adc
xchg
pop
mov
imul
cmp
mov
stos
repz
hlt
pop
orl
xchg
mov
mov
sub
test
push
mov
push
sbb
js
mov
xor
decl
mov
hlt
imul
movsl
add
add
mov
mov
mov
les
add
mov
enter
inc
push
inc
inc
fnstenv
sbb
out
js
or
or
jnp
or
aad
imul
xchg
aas
stos
or
out
mov
or
lahf
fcompl
and
jmp
jl
pop
add
mov
sbb
xor
mov
xor
jmp
cmpsl
stos
cwtl
pavgb
and
cmp
in
gs
xchg
ds
adc
lret
arpl
pop
js
out
sbb
inc
shrb
dec
xchg
dec
and
sbb
mov
pop
xor
enter
scas
std
lcall
and
nop
mov
inc
and
xorb
dec
roll
imul
mov
lahf
cmp
movsb
jno
call
pop
mov
jb
cmp
xchg
ja
jg
dec
lds
xchg
sti
gs
mov
sub
mov
fdivs
mov
lds
ljmp
inc
and
rorl
fbld
stc
push
popf
pushf
jnp
sbb
or
push
int3
iret
lds
lea
xor
sti
call
sbb
icebp
stos
rcrl
pop
in
mov
push
jg
mov
cmc
lcall
push
sti
arpl
and
mov
mov
cmp
add
dec
test
inc
xchg
push
fisubrs
icebp
cmp
and
mov
lahf
mov
dec
cmp
call
cli
lcall
xor
les
sbb
xchg
mov
push
mov
add
cmp
sar
pop
mov
ret
inc
fisubl
pop
lret
mov
pop
cmpsb
jo
mov
sbb
sbb
dec
rorl
sbb
mov
mov
fsubs
aas
jns
mov
iret
xchg
mov
test
ret
inc
movsb
fisttps
out
int3
jp
mov
lahf
pop
fwait
adcb
pushf
mov
jb
mov
hlt
imul
xlat
leave
adc
repz
push
adc
fidivrs
stc
scas
rcrl
pop
call
adc
fldl
test
add
pop
or
cmp
lds
stos
jns
stos
pop
or
mov
add
enter
lods
in
fwait
mov
fisubrl
mov
inc
daa
inc
xlat
popf
jmp
mov
xor
into
test
les
pop
ss
mov
sbb
iret
xor
cs
movsl
icebp
xor
mov
xchg
jmp
mov
leave
dec
ret
inc
mov
rclb
add
stos
xchg
cmp
loop
xchg
and
mov
jnp
dec
inc
pop
mov
mov
mov
xchg
divl
pinsrw
mov
lods
fnstcw
lods
mov
clc
clc
cmp
in
jg
enter
pop
in
cmpsl
dec
add
mov
cmp
jb
mov
cltd
sbb
fistpll
push
mov
jne
movsl
in
push
xorl
jle
add
pop
ret
adcl
mov
and
sbb
pop
or
js
repz
and
xchg
sub
das
mov
or
push
cmp
call
in
lahf
ret
insb
jo
and
cmp
je
pop
sub
pop
imul
xchg
or
sub
dec
sub
in
sbb
es
cmpsl
lock
xchg
je
out
pop
mov
stc
bound
jg
mov
faddp
sbb
sub
mov
mov
lret
inc
pushf
divl
pinsrw
dec
rorb
push
int
lret
jge
rorb
sub
jge
mov
mov
jle
gs
fnstsw
leave
nop
ds
dec
in
movsl
movsl
inc
std
push
and
pop
pop
subb
jo
fstp
mov
frstor
imul
cmpsl
icebp
or
fisttpl
sbbl
mov
sub
shlb
push
pop
or
and
push
or
cmpb
push
push
ds
clc
loop
add
or
imul
cmpsl
idivb
pop
sub
sbb
lds
mov
sbb
or
pusha
es
cmpsl
stc
sahf
mov
ret
aaa
cltd
add
adc
mov
test
rcrl
xorb
jae
inc
aas
rep
int
fcompl
xchg
shlb
mov
test
push
and
or
pop
or
mov
outsl
adc
sbb
mov
sbb
sbb
mov
fdivrl
cwtl
push
loopne
jle
dec
inc
test
ja
lret
stos
jge
test
inc
xchg
pop
cmpsl
frstor
jns
bound
sti
mov
cmpsl
out
mov
in
push
jb
fs
cmc
or
ret
or
loop
xchg
fwait
lret
xchg
pop
fs
push
jns
mov
inc
push
scas
hlt
repz
add
loop
xorl
repnz
orl
cmpl
xor
popf
int
fmuls
or
xchg
mov
adc
into
mov
cmp
push
fsubrl
mov
cmc
jb
sbb
push
negb
mov
push
cltd
loopne
movsb
mov
xchg
jmp
sbb
ret
jne
call
pop
faddl
loopne
cli
mov
pop
arpl
mov
add
xrstors
adc
rcll
dec
ror
xor
iret
imul
inc
pop
xor
pushf
insb
cmp
fdivs
test
in
mov
jg
and
lret
xchg
mov
mov
andl
cwtl
rcrb
test
fwait
push
sbb
scas
stos
mov
movsl
test
adc
inc
sbb
stc
or
in
cwtl
rcl
fildl
adcb
lahf
leave
xchg
pop
and
js
fsubrs
and
push
mov
inc
orl
cmpl
mov
adc
dec
add
add
and
mov
push
pop
mov
clc
lcall
push
lret
mov
push
das
inc
aad
ljmp
ss
sti
popa
mov
mov
push
movsb
mov
fdivs
mov
mov
std
aaa
or
mov
leave
ja
inc
mov
fcomps
incb
jnp
add
mov
push
xor
in
iret
imul
inc
pop
xor
loope
cmp
or
xlat
addr16
fwait
push
fwait
push
movsb
fimull
mov
mov
fists
mov
dec
add
les
jge
sahf
test
xorb
lds
fisubl
stos
jg
adc
push
imul
dec
or
and
mov
fdiv
ret
inc
inc
add
xchg
jp
mov
inc
les
adc
mov
push
mov
lds
jns
mov
ds
xchg
ljmp
cmpb
pop
fxch
push
call
jle
cmp
insl
xor
imul
mov
iret
pop
jbe
jmp
mov
test
hlt
pushf
lock
call
pop
inc
fld
inc
lods
mov
mov
fistps
mov
cli
jecxz
mov
jle
sti
in
sbb
fwait
orb
mov
sbb
je
jp
fcmovb
addr16
or
dec
imul
inc
pop
mov
popf
in
jns
int3
subb
cmp
sub
js
in
fwait
dec
and
xchg
cmp
mov
arpl
fadds
mov
arpl
call
je
or
xchg
add
fistpl
dec
jae
xchg
nop
jnp
stos
sbb
mov
cli
dec
push
adc
cmp
cmpb
ret
adc
out
fwait
inc
pop
add
stc
bound
popa
lods
xlat
or
mov
mov
or
cli
mov
imul
push
sarl
rcr
jno
rorb
inc
lods
mov
clc
daa
lods
dec
cmp
mov
sti
xor
cmc
subb
pop
leave
inc
jnp,pt
in
movsl
aam
clc
xchg
cmpsl
aas
stos
and
xor
arpl
ret
jae
sbbl
mov
inc
rcrl
jnp
xchg
movb
test
pop
xor
scas
jb
dec
les
inc
and
pop
std
stos
mov
mov
add
and
scas
jge
xchg
jp
pop
mov
mov
in
and
xchg
mov
dec
in
lea
xor
add
arpl
gs
int3
mov
add
cmpsl
lock
dec
xchg
je
inc
push
addl
push
xor
xchg
push
jecxz
sbb
test
xor
mov
test
out
shrb
outsb
mov
std
jmp
fildll
fnstcw
repz
jns
rorb
jle
mov
lcall
sub
sbb
mov
aad
lret
adc
leave
pop
lret
add
cmc
test
mov
jl
js
push
cld
cmpsl
pop
or
shll
inc
xlat
dec
mov
scas
pop
or
pop
mov
sub
outsl
mov
insl
pop
jbe
push
jns
movsb
jne
inc
es
xchg
mov
mov
inc
add
in
pop
cmp
lcall
movsb
sub
xor
les
add
out
cltd
push
xchg
mov
dec
inc
sbb
push
mov
and
mov
andb
jne
jecxz
sbb
xchg
add
int
stos
cmp
jmp
sbb
add
mov
leave
call
sbb
cli
mov
in
leave
popa
aaa
dec
rcrl
cmpsb
rolb
fimuls
mov
repz
xor
or
outsb
mov
mov
ror
adc
sbb
mov
rcrb
push
pop
sti
mov
stos
mov
cmp
ja
test
or
mov
mov
mov
or
rcrb
sbbb
fdivrs
mov
js
fsubrs
gs
jl
fbld
adc
xor
movsb
cmp
cltd
pop
mov
cmpsb
pop
fs
add
lcall
lahf
in
push
andl
dec
inc
add
popf
sbb
or
daa
hlt
mov
cmp
mov
xchg
jmp
sbb
loope
xor
xchg
call
sbb
sarl
rorl
jmp
in
test
pop
out
sub
iret
jge
dec
push
pop
imul
movsb
lds
xor
pushf
xchg
mov
mov
pushf
cmc
lret
test
mov
ds
mov
xchg
hlt
fcmovne
pop
mov
sti
arpl
xchg
inc
cmp
les
inc
imul
mov
push
inc
stos
jbe
stc
inc
sbb
push
or
lret
xchg
insb
and
daa
mov
fdiv
dec
cmp
out
clc
cmp
imul
sahf
or
les
adc
xchg
cmp
iret
lods
test
and
fs
sbb
lcall
inc
scas
cmp
and
test
sbb
sti
jo
xchg
mov
mov
pushf
aas
cmpsb
sub
das
lock
cld
dec
rolb
leave
push
std
ja
xor
dec
test
ss
adc
mov
add
jecxz
inc
mov
or
or
call
cltd
lods
popl
mov
jns
dec
rcrb
jmp
icebp
stos
mov
fwait
push
mov
dec
in
mov
sahf
mov
mov
popf
push
jns
push
subb
mov
cmp
lds
ljmp
test
push
jae
mov
mov
cmp
mov
fdiv
fildl
leave
add
xchg
add
sbb
cmp
sbb
xchg
mov
sbb
shlb
cli
dec
inc
add
adc
mov
adc
and
pop
and
cli
xor
mov
mov
pop
mov
gs
aad
test
mov
shr
push
dec
pop
pop
sti
mov
cmp
dec
call
jge
mov
sbb
mov
mov
jno
dec
add
jecxz
adcl
into
ret
insl
adc
dec
mov
sub
and
scas
nop
dec
out
xor
aas
stos
xor
dec
push
fisubrs
stc
scas
mov
mov
fmuls
push
subb
jg
or
sbb
cwtl
insb
push
test
adc
testl
ljmp
mov
xchg
cltd
lret
inc
pop
pusha
jnp
mov
or
add
xchg
dec
ret
sbb
stos
shll
aad
xchg
inc
dec
add
inc
pop
xor
or
outsb
cmp
ficomps
fisubrs
or
and
mov
xchg
mov
mov
out
bound
gs
cltd
rcrb
mov
shlb
fnstcw
push
cmpsb
mov
pushf
neg
sbb
loope
rcll
xor
fbld
sahf
fisubs
imul
clc
test
and
mov
je
cmc
or
push
cmp
adc
das
imul
mov
pop
mov
cmp
int
inc
ljmp
int
aas
dec
rcrl
mov
jnp
popf
movb
test
pop
ja
jmp
pusha
push
mov
and
sti
or
or
inc
mov
enter
jp
inc
mov
push
xor
in
dec
add
inc
pop
xor
push
dec
sbb
inc
add
ret
sbb
scas
pop
clc
je
cmpsl
push
add
mov
and
adc
pop
lds
xor
mov
mov
ja
adc
shrb
mov
mov
dec
stos
mov
lods
fstpl
andl
push
dec
push
lahf
addl
out
mov
in
xor
adc
mov
hlt
stos
aad
lret
imul
xor
imul
xchg
imul
ljmp
cmp
hlt
pop
lea
inc
push
pop
imul
je
imul
les
push
mov
push
sbb
push
push
mov
xor
decl
mov
mov
sarl
add
add
mov
push
mov
les
add
mov
or
rolb
or
out
js
mov
sbb
jnp
or
aad
imul
xchg
aas
stos
add
mov
inc
fs
mov
or
fsts
lahf
call
cmpsb
stos
fbld
jmp
jl
cmp
mov
sub
test
repz
cmpsl
stos
cwtl
pavgb
andb
jne
mov
shll
add
cltd
ds
adc
cmp
dec
push
sti
arpl
pop
js
out
pushf
pop
or
shrb
dec
in
dec
and
sbb
mov
pop
xor
enter
scas
std
lcall
xor
nop
mov
inc
and
sbb
add
inc
cmp
imul
mov
dec
cmp
movsb
jno
pop
movsb
insb
lahf
inc
pop
roll
fwait
cmpl
sbb
gs
cltd
clc
andl
jb
cmp
cld
dec
vpavgw
into
adc
stos
xor
mov
ret
sarl
rorl
fbld
stc
aam
scas
mov
lock
or
lret
iret
lds
lea
pop
xor
ret
push
jp
add
stos
rcrl
pop
in
mov
jo
jle
clc
cmc
cmp
enter
adc
sub
pop
or
cmpl
lds
fimull
or
xchg
push
fisubrs
icebp
cmp
and
mov
push
repnz
cmp
call
cli
lcall
xor
les
xor
xchg
mov
push
mov
add
mov
ret
cmp
mov
adc
fisubl
pop
lret
mov
sbb
jo
sbb
lds
xchg
imul
xor
sbb
mov
mov
insl
mov
mov
gs
sub
push
cmp
mov
iret
xchg
mov
test
ret
inc
scas
fisttps
out
aam
mov
jb
imul
lods
jb
mov
hlt
lret
leave
adc
fwait
fwait
push
adc
mov
sub
stc
scas
rcrl
pop
call
adc
inc
test
add
pop
or
cmpl
and
pop
call
or
add
arpl
add
pop
mov
fisubrl
lock
inc
daa
inc
xlat
popf
jmp
mov
xor
into
test
les
je
xchg
mov
sbb
js
cwtl
test
and
cwtl
movsl
icebp
xor
fs
jmp
mov
mov
dec
ret
inc
mov
rclb
add
stos
inc
cmp
loop
jp
mov
mov
jnp
lds
mov
mov
or
xchg
divl
les
rorb
xchg
lods
mov
clc
clc
cmp
lret
test
cmpl
adc
push
in
cmpsl
dec
lahf
pop
add
fsubl
mov
cltd
sub
mov
push
mov
jne
movsl
in
push
sbbl
mov
adc
adcl
mov
inc
rolb
div
mov
pop
or
lods
and
xchg
ljmp
cmpb
add
iret
call
in
lcall
idivl
sub
pop
sub
pop
imul
xchg
std
mov
mov
jnp
inc
push
mov
into
lahf
cltd
push
shrb
mov
pop
mov
into
inc
fnstenv
inc
lods
sbb
sbb
pusha
aas
fisubrl
lds
lock
mov
daa
jmp
mov
shl
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
shll
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
jbe
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
