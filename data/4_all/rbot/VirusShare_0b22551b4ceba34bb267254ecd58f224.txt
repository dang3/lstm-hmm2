data16
and
fmul
nop
outsb
lret
out
sub
insl
push
sbb
add
dec
lret
and
sbb
push
pop
inc
and
dec
pop
jl
mov
out
repz
mov
rcl
mov
and
inc
or
incb
mov
je
aad
daa
loopne
push
pop
xor
and
out
adc
xchg
setle
jno
in
les
loope
insb
lock
repz
ds
cs
mov
lret
fistps
xor
pop
iret
popf
roll
nop
push
test
mov
sbb
adc
out
mov
sbbl
dec
mov
jns
or
aam
dec
push
sub
inc
fs
push
sahf
les
dec
call
into
cmp
pop
ljmp
sbb
mov
mov
inc
mov
sahf
jl
jmp
jo
insl
and
cmc
sub
pop
movsl
test
rcll
fmull
outsb
daa
inc
jecxz
cmp
cwtl
pop
sbb
fimull
mov
enter
push
stos
loopne
andl
popf
test
out
xchg
test
sbb
outsl
sub
mov
fsubrl
xlat
mul
addb
lock
sbb
pop
cld
mov
pop
mov
ds
test
std
adc
or
cmp
sbb
mov
fiadds
mov
ljmp
jnp
lahf
add
fisubs
jmp
loop
jnp
jne
shl
or
cmp
jo
test
jne
scas
adc
out
cli
popf
in
daa
or
push
cmp
jp
sahf
dec
test
xor
sbb
mov
or
xor
and
movsb
inc
aam
push
fwait
mov
stc
nop
push
cmp
or
xor
xor
push
mov
mov
faddp
cmp
jmp
pop
lods
shl
mov
add
orb
mov
aam
push
jp
lahf
push
cli
gs
jge
adc
mov
cmpsl
jmp
or
int
pop
jp
bound
fiadds
sub
cmp
push
pop
add
sub
sti
bound
sub
ret
mov
mov
ja
push
sbb
xor
shrb
xchg
aad
loop
mov
loopne
in
ficomps
push
add
lods
jbe
loop
arpl
insl
lcall
mov
and
iret
push
inc
dec
cmpsl
sbb
out
dec
rorb
adc
cmp
insb
jecxz
mov
fisubs
cvtdq2ps
xchg
xchg
iret
push
xchg
mov
imul
mov
outsl
rorb
jne
mov
cmp
add
adcb
cmp
push
fsts
push
sub
in
mov
xchg
jbe
mov
xor
sbb
add
and
cmpsb
sub
add
andl
rcr
xlat
call
lret
jo
sbb
rclb
testl
add
jns
cmp
in
ljmp
fs
sub
jnp
inc
test
in
pop
scas
pop
cwtl
jle
movsb
adc
jge
dec
fwait
mov
push
loopne
lret
in
xchg
fcompl
pop
sti
cmp
xchg
jle
adc
cltd
cmpsl
stc
in
push
pusha
mov
pusha
daa
or
or
push
pop
sbb
inc
decb
xor
jnp
push
add
mov
sub
xor
add
inc
push
jmp
pop
push
lods
mov
sahf
les
jbe
inc
iret
pop
cmp
mov
and
sbb
adc
and
fucomi
mov
sbb
int
push
sahf
out
cmp
jg
sbb
scas
cmp
pop
pop
jbe
jl
pop
dec
sar
inc
jne
cmp
xor
push
sub
push
cmp
fs
add
cmp
repnz
or
xor
lods
ja
lock
push
jbe
pop
mov
mov
popf
imul
jge
call
xor
add
and
push
lret
push
mov
or
aam
hlt
in
cmp
pushf
sub
lret
and
ds
insb
ret
push
or
sub
xchg
aas
mov
ficoml
test
push
ja
push
icebp
repz
cmp
movsb
adc
sbb
imul
push
pop
cmpsl
jg
fisubrs
push
sahf
loopne
and
sub
enter
js
hlt
push
jae
jno
adc
cmpsb
pshufw
test
and
and
outsb
push
fmull
dec
out
add
inc
add
mov
movsb
divb
pop
orl
mov
push
pop
fsubr
inc
pusha
lea
add
addr16
sub
sub
das
popl
dec
dec
shl
mov
adc
cmp
ja
fwait
imul
pop
clc
movsl
and
push
fisttpl
ret
ret
clc
cmpsl
xor
popa
dec
sub
cli
jp
inc
add
iret
push
mov
and
cmp
leave
mov
outsb
int3
sbb
ret
xor
mov
fidivrl
xchg
dec
shll
mov
pop
pop
ret
push
mov
push
clc
je
cmpsb
rol
loopne
insl
lods
mov
jbe
std
mov
mov
push
mov
inc
dec
inc
lcall
jle
add
xor
xchg
aaa
jnp
arpl
mov
cmp
push
ror
xchg
test
sub
fwait
sbb
sbb
in
dec
jg
iret
shl
cmp
cmpsb
and
push
fistl
icebp
jbe
push
xchg
cmp
shr
jno
in
push
push
push
stos
movsl
xchg
les
add
pop
popf
fsub
in
jno
add
rcll
sarb
sahf
adc
les
dec
inc
xchg
aas
add
push
pop
add
mov
mov
je
jmp
rcl
sub
add
mov
pop
sub
push
or
ret
addr16
clc
cmpsl
sbb
ret
xor
sub
loopne
fisttpll
cmpsb
xchg
mov
and
push
test
pop
gs
or
lahf
push
mov
popa
cmp
rcrl
inc
sbb
jbe
mov
cmp
in
xchg
mulb
dec
push
rcll
pop
mov
sub
arpl
repz
ret
cmpsb
inc
pop
insl
xchg
fidivrs
xchg
xorb
sti
ror
int3
and
mov
rol
cli
cmp
int3
ljmp
fstl
in
lcall
imul
mov
mov
cwtl
add
addr16
stos
test
add
fistpll
das
fs
dec
cld
aad
insl
test
or
and
and
dec
in
mov
inc
clc
mov
cli
xchg
xchg
sub
push
mov
and
push
ds
add
aam
popa
loop
add
enter
lods
mov
ret
cmp
jmp
sbb
ss
lret
jmp
pushf
aaa
orb
aaa
mov
es
or
xchg
daa
gs
shl
std
xlat
mov
pop
in
or
das
test
or
or
cmp
scas
pop
xchg
scas
and
cmpsb
test
adc
js
cmp
dec
lret
lahf
mov
or
daa
icebp
fsubr
outsl
sarb
and
push
fdiv
dec
xlat
and
fstl
jb
movsl
lea
inc
out
pop
sub
int3
and
push
std
xchg
adc
inc
fidivs
jb
sarl
cld
jl
jns
pop
ja
sub
cmp
loopne
push
add
or
mov
clc
adc
dec
ficoms
ret
sbb
jb
lds
xor
adc
push
mov
mov
pusha
jne
outsl
or
rcll
pop
cmp
aaa
and
ret
arpl
mov
adc
dec
ds
push
call
adc
jmp
das
inc
outsb
hlt
cmp
sbb
adc
test
sbb
icebp
std
cmpsl
or
cmp
pop
mov
stc
int
es
jmp
pop
in
fcmovne
aad
sub
insb
xchg
and
sub
pop
iret
imul
inc
int3
xlat
inc
stos
filds
daa
or
add
data16
cmp
sub
movsl
mov
pop
push
repz
stos
je
mov
insl
mov
jecxz
mov
loope
jp
outsb
ret
cmp
into
aad
lock
out
incl
inc
mov
push
xor
pop
xor
add
movsb
xchg
stc
or
dec
stc
push
adc
lret
std
movsb
bound
sub
push
int3
repz
jp
enter
out
inc
in
inc
mov
popf
sub
and
icebp
fcomp
sbb
pop
adc
add
mov
or
pop
mov
ds
xchg
pop
aam
mov
push
add
ds
pop
es
js
aad
icebp
paddd
sbb
test
ljmp
outsl
fldt
sub
incl
pop
xchg
sub
andb
lods
nop
xor
cmpsb
cmpsb
xchg
pusha
addr16
out
repz
cltd
fmull
xchg
push
jb
sbb
cmpsl
ds
mov
rorb
pop
cli
mov
adc
xchg
mov
or
push
and
fadd
adc
pop
cmp
out
clc
jo
xchg
pop
sub
sti
rcl
adc
xor
pop
mov
test
imul
inc
and
in
xchg
fcmovnu
add
sbb
push
sbb
addl
cwtl
jp
iret
cmp
data16
sbb
xchg
jle
lret
mov
adc
push
inc
mov
jmp
pop
scas
inc
xlat
inc
ljmp
dec
push
add
loop
add
cmp
mov
push
xchg
xchg
cltd
out
addr16
add
iret
in
stc
jecxz
xchg
imul
mov
imul
enter
push
mov
add
add
in
or
sahf
scas
loop
subb
and
jnp
xchg
mov
pop
imul
dec
xor
bound
jb
xlat
rclb
xor
sub
movsl
das
mov
mov
mov
sub
shl
push
push
add
inc
scas
test
mov
add
push
pop
jmp
add
add
subb
push
jg
lock
stos
adc
inc
scas
aam
mov
xchg
scas
stos
es
push
stos
mov
sbb
lock
mov
push
sub
cmp
dec
aam
ss
call
mov
mov
add
push
enter
xchg
aad
lods
fadds
lods
icebp
nop
cmpsl
cltd
lret
jno,pt
arpl
adc
jae
outsl
adc
fwait
jmp
out
psrld
dec
mov
ljmp
push
lret
jno
and
in
pop
cmp
mov
xchg
sarl
jne
dec
xor
ljmp
roll
jbe
sbb
jp
cwtl
aam
in
rol
cltd
xchg
jge
fst
jns
stc
insb
and
andb
dec
popl
leave
dec
mov
repnz
fiaddl
and
jle
add
orb
mov
stos
outsb
add
ret
sahf
mov
test
push
sbb
adc
mov
dec
imul
cmp
popa
add
ss
adc
leave
mov
sub
out
add
movsl
fadds
jo
movsl
xchg
std
inc
imul
out
mov
sti
xor
and
in
xor
or
inc
or
shlb
add
loop
out
ret
sbb
outsl
mov
movsb
dec
sub
add
mov
or
inc
pop
iret
pop
add
cwtl
xor
jb
out
xchg
or
popf
loope
mov
pop
fucom
xchg
cmp
sub
adc
push
push
mov
icebp
nop
jp
aas
xchg
imul
xchg
pop
out
inc
lods
imul
mov
mov
in
andb
pushf
stos
or
in
mov
dec
or
fbld
outsb
loope
lcall
enter
lahf
je
mov
mov
cmp
mov
loop
pop
test
jp
imul
push
aaa
inc
or
mov
arpl
cli
or
hlt
lret
and
pop
inc
push
mov
jle
cmp
or
lods
push
stos
lret
repnz
pusha
ss
and
ss
jne
iret
mov
xchg
cmpsb
lahf
add
pushf
add
push
sub
daa
cmc
sbb
es
inc
sbb
jecxz,pn
mov
out
mov
mov
insb
or
int
or
cmp
ret
jno
scas
xor
out
pop
xchg
push
pop
add
pop
fsub
insl
into
sahf
nop
pop
das
xchg
jp
popf
jb
cli
sbb
sub
jmp
nop
inc
out
ss
mov
adc
jno
sahf
mov
xor
cwtl
stos
and
fists
push
xchg
fstpl
fildll
mov
pushf
push
inc
pop
notb
fs
lock
addr16
es
lahf
jmp
pop
or
adc
loope
loop
test
imul
movsb
aas
loopne
sbb
in
imul
outsb
jae
dec
iret
fidivrs
xchg
mov
mov
mov
inc
sub
imul
shlb
mov
xchg
jnp
jge
push
fs
lds
jb
jb
int3
fs
jmp
pop
xor
data16
es
daa
lods
lahf
inc
mov
es
inc
jg
lock
scas
call
rol
sbb
pop
dec
jae
pop
jecxz
adc
pop
inc
out
add
sub
and
inc
fldcw
ds
dec
xchg
idivl
mov
xor
cmp
push
sbb
icebp
or
rol
pop
sub
sub
and
fmull
push
jno
sbb
mov
insl
aam
pop
or
mov
dec
dec
imul
inc
jl
push
cld
or
data16
and
enter
jmp
mov
test
ret
jge
dec
mov
clc
rolb
ljmp
jae
fs
aaa
dec
stos
xchg
aam
pop
pop
mov
inc
mov
data16
imulb
ds
add
pop
pushf
xchg
das
in
jae
out
fbld
and
sti
pop
dec
mov
and
sbb
test
test
dec
fnsave
and
lods
jl
inc
dec
xor
sub
out
pop
adc
mov
lods
imul
xchg
jl
aad
test
dec
inc
rclb
sbb
cmpsb
clc
sub
sahf
mov
out
push
cmp
fsts
inc
jp
sbb
inc
mov
mov
push
mov
lock
add
loopne
mov
xor
lock
bound
adc
fdivrs
xchg
js
gs
pop
cmpsb
or
push
push
mov
mov
jns
add
stc
aad
inc
rclb
push
mov
mov
pop
adc
add
in
mov
imul
iret
ficomps
ja
cmp
dec
or
shlb
sub
mov
aam
sbb
cld
movsb
mov
nop
test
jp
scas
mov
adc
push
rorl
test
call
pop
ret
dec
dec
mov
mov
rcr
dec
mov
sub
sbbl
in
rcr
lds
lods
imul
call
fwait
sbb
lahf
insb
xchg
sub
ljmp
lahf
scas
inc
cmpsb
ret
xchg
aaa
movsl
mov
jno
mov
cmc
mov
frstor
mov
or
fnstsw
rcrl
outsl
sbb
ficoml
sub
dec
mov
mov
push
xchg
shrb
sub
mov
aaa
mov
mov
leave
push
push
shrb
lea
jmp
push
test
cmp
ss
mov
adc
loop
imul
in
mov
inc
in
int
cmp
es
cmp
mov
sbb
ja
or
scas
jl
std
dec
imul
es
jnp
rcll
aad
jae
adc
aaa
sub
aam
pushf
movsb
incb
insb
inc
in
cmp
fnstenv
ficompl
xor
or
lcall
push
push
in
imull
sbb
or
xor
inc
fidivl
loopne
jmp
sub
sub
loopne
pop
faddl
lret
mov
jbe
xlat
gs
out
pop
dec
stc
psubusw
sbb
std
xchg
out
cltd
xor
loope
stos
sbb
lods
push
mov
xchg
addr16
repnz
cs
mov
sub
mov
lods
ret
lods
cmp
jns
jmp
cltd
icebp
sbb
dec
in
inc
xchg
shr
clc
subb
mov
mov
pop
mov
mov
inc
xchg
out
jle
hlt
mov
push
xchg
lods
push
xchg
outsl
pop
out
ja
cmp
lahf
and
popf
pop
or
sbb
jnp
dec
adc
jns
cmc
sti
mov
sub
nop
cmpsl
sbbl
je
nop
jp
js
movsb
stc
jns
push
inc
add
aas
lds
stos
cmpsb
and
and
test
xchg
sub
adc
mov
aam
les
pop
gs
popf
push
and
in
adc
mov
jecxz
clc
int3
sbb
and
xor
stos
lret
clc
popf
adc
push
leave
mov
stc
cmp
sbb
ficoms
lahf
mov
mov
movsb
sub
inc
xor
mov
scas
xor
xor
jle
lds
iret
jbe
decl
insl
inc
fsub
jo
aam
mov
mov
fstpl
dec
cltd
dec
push
ficoms
pusha
ljmp
mov
incl
sti
push
and
inc
push
jne
mov
loop
sar
sbb
out
xor
iret
mov
lret
dec
and
cmc
fadds
nop
mov
shlb
popl
int3
push
mov
jno
mov
mov
xchg
mov
push
lret
stos
stos
xchg
shr
sti
fldl
cld
leave
dec
push
mov
test
xor
movsb
das
dec
adcb
test
js
cltd
lret
popa
push
mov
pop
out
inc
incl
jge
mov
mov
inc
fcmovnb
leave
loopne
jno
fwait
jnp
adc
xor
mov
dec
clc
dec
shr
nop
mov
aam
push
mov
fnstsw
sbb
aaa
xchg
xchg
mov
subb
sub
xchg
scas
and
repz
loopne
cmp
sub
lds
frstor
je
fwait
scas
inc
jmp
lcall
loop
dec
xchg
push
rcrb
cli
clc
or
jl
push
sub
out
or
pushf
jb
mov
push
sub
jns
adc
stos
insb
hlt
mov
xchg
aas
loope
adc
mov
xchg
mov
or
ficoml
pop
idiv
repz
mov
pop
fstpt
push
dec
lods
les
scas
aaa
test
lods
sub
and
roll
movsl
jae
push
push
sbb
push
ret
push
lret
daa
shll
insl
pusha
mov
jle
jns
stos
out
out
or
pop
xchg
test
mov
sbb
sub
add
or
fbstp
sti
ljmp
out
aaa
xchg
mov
push
mov
lret
cmp
sbb
pop
push
das
mov
mov
out
mov
cmpsl
sbb
clc
dec
jp
repnz
cmp
cmp
fcomp
fcoms
xchg
sub
xchg
fucomp
and
adc
in
ss
out
pop
sub
clc
gs
out
push
fs
mov
mov
fcmovne
gs
les
adc
int
pmaxsw
add
jnp
jmp
cmp
mov
jle
imul
mov
adc
ret
addl
mov
dec
fwait
sub
mov
xor
inc
mov
push
push
pop
sub
push
lea
sub
mov
sub
fdivrs
movsl
sub
fdivr
and
aas
ss
ret
push
shlb
insb
cwtl
mov
mov
xlat
sub
inc
inc
xchg
cmp
mov
movsb
mov
dec
cmc
mov
data16
push
and
int3
xor
sbb
cmpb
inc
fsts
scas
adc
or
cmp
pop
mov
xor
fcompl
cwtl
arpl
sti
popa
imul
sub
mov
xchg
lods
rcr
ljmp
add
imul
cld
subl
cmp
or
jle
ljmp
jecxz
pop
popa
jae
xor
jns
ret
xchg
xchg
dec
jg
lea
add
mov
mov
push
lds
test
pop
or
rep
pop
aam
jnp
mov
xchg
lret
imul
jecxz
push
xchg
sar
lock
and
clc
into
enter
mov
sub
mov
pop
imulb
jo
inc
popf
jns
int3
arpl
inc
rol
in
dec
cwtl
icebp
cmp
test
pop
ret
ret
test
cmp
xchg
in
jb
or
or
js
xchg
inc
pop
aas
jae
test
sbb
push
pushf
jge
daa
push
dec
add
push
push
arpl
mov
cli
in
push
jmp
pop
ret
pop
push
sbb
cmp
xor
mov
adc
stc
sbb
idivl
adc
add
cmp
and
call
pop
out
pop
add
adc
mov
add
jmp
xor
dec
daa
xchg
push
mov
add
arpl
data16
dec
lahf
imul
push
sbb
xchg
rorb
add
inc
cmc
cmp
test
push
cmp
lea
cltd
adc
repnz
sbb
mov
stc
lea
inc
lret
test
sub
mov
xlat
loop
scas
fnstenv
into
pop
pop
bound
inc
jp
lock
in
adc
leave
adc
sti
movsl
fidivrl
lock
in
lods
mov
aad
addr16
adc
sbb
idivl
fisubrs
ljmp
fwait
arpl
addb
lcall
sub
js
push
push
imul
pop
pop
scas
mov
icebp
xchg
push
aad
into
ffreep
adc
es
sbb
add
divl
mov
and
add
push
das
loopne
mov
movsb
xchg
jge
adc
pusha
dec
addr16
add
stos
push
outsl
sar
xchg
inc
mov
sti
rclb
imul
popf
push
fs
icebp
scas
rcl
outsb
std
cmp
sub
aaa
add
fs
jg
movsb
mov
dec
test
dec
push
mov
inc
jae
in
xchg
in
adc
imul
mov
and
push
inc
sub
add
pop
lods
sbb
cmpb
in
lds
and
scas
mulb
stos
jl
inc
mov
mov
andb
sti
pop
enter
test
jne
or
lahf
push
in
push
scas
mov
add
test
xor
xor
enter
cmp
xor
jl
pop
aaa
jl
xlat
jbe
cmp
loopne
add
dec
mov
rorb
xchg
ss
cmpsl
pop
xlat
clc
pop
out
pop
adc
xlat
js
pop
loope
rcrb
aam
pop
lret
aam
sbb
psrlq
fdivrp
imulb
mov
scas
cld
lea
and
aas
aas
add
fwait
mov
or
scas
pop
cs
inc
push
push
rorl
xor
jae,pn
mov
dec
inc
cmp
add
lret
into
ds
addr16
dec
fnstcw
shrd
jno
idivb
xchg
cmpsb
pop
add
cmpsb
push
and
adc
xchg
iret
rorl
lcall
mov
popa
mov
js
jbe
xchg
sub
jo
mov
xchg
adc
aaa
outsb
push
sbb
inc
mov
cmp
sub
xor
call
aas
or
testb
and
stc
push
sub
rorb
mov
icebp
jno
sti
fcomps
pop
inc
fstpt
mov
in
lods
int
adc
or
fwait
inc
xchg
sub
mov
mov
inc
test
hlt
xor
rorl
fldenv
std
fisttps
mov
cmp
pop
sbb
hlt
pop
or
orb
aad
jo
sbb
fwait
js
leave
xchg
in
cs
loop
fiaddl
xor
shrb
pusha
adcl
mov
outsl
mov
push
push
sub
mov
mov
arpl
jp
fadds
nop
mov
mov
pusha
jo
push
sub
inc
cltd
loop
loope
and
neg
adc
jb
xor
or
scas
mov
sbb
sbb
iret
mov
repz
inc
fldcw
out
mov
jo
test
mov
dec
and
sub
jle
inc
rclb
mov
dec
and
jge
cwtl
in
fwait
inc
and
xor
cltd
int3
imul
fmul
jg
cltd
into
mov
les
lods
jno
xchg
dec
adc
mov
out
ljmp
inc
lds
dec
mov
mov
js
and
push
cltd
out
shl
js
inc
out
scas
popa
jns
test
stos
leave
xchg
push
inc
cmp
xor
mov
repz
ljmp
imul
or
or
adc
in
out
cltd
rcrl
scas
push
jmp
shrl
jle
cli
mov
lret
lods
add
jecxz
adc
inc
fldenv
popa
sbb
fs
mov
jns
outsb
xchg
jp
dec
je
pop
push
push
mov
mov
mov
mov
mov
js
lock
enter
jecxz
mov
jge
push
cmp
and
inc
adc
hlt
cmp
pop
or
sbb
sbb
lods
rorl
push
stos
or
pop
int3
jo
neg
fistps
jns
jns
push
addr16
cli
add
sbb
out
in
fdivs
sbb
imul
or
loop
adc
push
idiv
mov
cld
mov
sti
out
fisubl
xorl
mov
mov
jecxz
stos
jle
xchg
pop
rolb
addr16
cmp
bound
xorl
sub
add
ret
mov
sbb
and
mov
mov
int3
fsubrl
add
aam
and
lahf
stos
jg,pt
adc
shll
pop
cmc
mov
lret
mov
push
jle
jne
inc
cmovno
dec
test
pop
pop
cwtl
mov
les
loopne
arpl
fiadds
sbb
or
jle
neg
pop
xchg
mov
jbe
gs
dec
mov
sub
insl
in
jno
push
pop
cmc
je
aaa
loopne
mov
in
insb
push
pop
add
xor
mov
fiadds
sub
jb
jo
mov
test
imul
mov
fcmovu
pop
out
fldl
adc
jle
sahf
loope
mov
stos
fcoms
xor
loopne
cmp
andb
outsl
out
jbe
outsl
jmp
fwait
aaa
cmpsl
addr16
rep
mov
push
call
mov
imul
push
call
aam
add
leave
ret
pop
ret
xor
add
pop
push
sub
mov
in
std
sbb
out
mov
ss
xchg
call
sahf
dec
ja
lds
sbb
cmpb
and
je
cmpsb
fwait
call
mov
add
fcom
icebp
add
xor
in
mov
adc
xchg
in
pop
mov
cmp
and
lock
gs
inc
fsubrs
icebp
dec
outsl
sub
cs
cmp
and
scas
mov
ljmp
cmpsl
push
mov
jl
enter
stos
scas
xchg
pop
push
cmp
lcall
pop
xchg
icebp
in
cmc
stos
repnz
cmc
and
outsb
or
stc
je
mov
aaa
xchg
add
dec
ja
rcrl
mov
cmp
das
jle
jmp
mov
pusha
xchg
aaa
leave
mov
sbb
movsb
in
or
pop
jo
pushl
push
adc
cmpsb
ljmp
sbb
inc
sub
xchg
push
test
loope
mov
dec
das
movsb
and
sbb
fcmovbe
and
in
lea
inc
aas
xchg
orb
frstor
lea
inc
add
rolb
jnp
push
hlt
ficoml
sub
adc
add
movsl
xchg
jge
and
cmpsl
cmpsl
clc
sub
mov
out
cltd
cmp
dec
fdivl
cmp
loopne
push
jmp
pop
or
mov
add
add
push
and
push
gs
sub
imulb
fldl
dec
pop
fildll
mov
aas
movsl
hlt
mov
repz
dec
jmp
sub
cli
jb
sbb
push
call
jns
xor
mov
and
jnp
test
mov
push
push
fs
sbb
or
inc
out
add
cmp
into
mov
dec
test
sbb
mov
xchg
mov
dec
cwtl
xchg
jnp
les
int
sub
std
xor
inc
icebp
push
mov
mov
xchg
inc
push
lea
rorl
divb
lea
rcl
out
lds
inc
cmpsb
in
enter
into
push
sbb
loop
lcall
xchg
inc
outsb
cmp
test
xchg
cmp
jge
cmpsb
inc
and
shll
dec
xor
imulb
xchg
lahf
sbb
inc
es
inc
in
call
stos
test
jbe
cltd
imul
mov
mov
daa
addr16
inc
mov
mov
out
and
pop
aam
mov
pop
xchg
mov
cltd
dec
stos
jo
jle
push
ss
cmp
iretw
sub
loop
cltd
aaa
add
xlat
xor
hlt
jbe
push
movl
cmpsb
jne
xor
fcoms
test
lds
push
and
pop
test
test
shlb
mov
out
dec
pop
sbb
imul
daa
jne
xchg
lahf
out
push
sbbl
aas
sbb
mov
rcr
sti
pusha
jbe
repnz
clc
scas
jae
jae
sub
lea
cmc
pop
sub
fists
adc
sbb
or
and
inc
repnz
in
cmp
rcll
fucom
jle
jecxz
mov
cwtl
repz
mov
push
cmc
add
push
mulb
stc
adc
stos
js
sbb
and
pop
jle
aaa
cmpsb
mov
xchg
xor
mov
pusha
cmpb
or
sahf
and
lock
shlb
sbb
mov
scas
inc
insl
movsl
mov
lods
pop
xlat
addr16
xor
mov
jmp
jmp
pop
sbb
xchg
pop
push
test
cmp
loopne
push
dec
adc
pop
pop
lret
add
dec
cltd
and
fbstp
dec
loop
pop
scas
pusha
xchg
pop
mov
mov
cmp
mov
loope
jmp
aas
repz
fnsave
pusha
dec
jae
xchg
lahf
inc
mov
pop
xchg
mov
ret
mov
xchg
jbe
clc
aam
into
adc
xchg
sub
mov
inc
fiaddl
inc
xchg
jne
aad
mov
mov
adc
xchg
mov
lock
scas
ja
xor
xchg
scas
mov
sbb
cli
jae
xor
mov
jo
mov
das
and
add
pushf
sub
cli
sbb
xlat
push
rolb
mov
mov
lahf
imul
aam
dec
jp
xor
jg
lods
fldl2e
rcll
mov
jbe
xor
pusha
lret
clc
push
jae
jl
adc
lret
sub
inc
outsl
dec
in
sbb
repz
lods
in
enter
pop
frstor
mov
push
push
cld
mov
sub
pop
fsubr
fnstenv
pop
xchg
out
std
mov
mov
jl
mov
mov
test
pop
rep
pop
jge
icebp
jno
mov
mov
mov
fs
inc
xchg
push
popf
jns
andb
hlt
mov
and
adc
inc
lods
into
adc
cmovno
das
inc
out
or
gs
lds
add
pop
push
and
mov
xchg
xchg
or
push
lret
je
xor
cmpsl
adc
cmp
test
lock
jmp
mov
adc
pushl
shl
test
cmp
or
jg
push
and
push
and
fisttps
ret
sahf
and
jbe
mov
pop
pop
ret
jae
jmp
cmp
xchg
call
stc
popa
ds
imul
push
jle
outsb
mov
lret
cmp
inc
push
sub
add
pop
jb
inc
add
xor
cmp
and
cmp
ljmp
out
jmp
cmc
pop
retw
push
mov
mov
and
cli
cmp
add
imul
sti
in
out
xor
push
dec
add
xchg
loop
imul
pop
xchg
sbbb
push
leave
das
lahf
and
xchg
adc
cmc
pop
or
daa
mov
rclb
jbe
mov
mov
mov
outsl
fldt
jo
mov
aas
jge
lock
cld
jbe
les
cwtl
dec
and
add
push
movsb
fdiv
cwtl
mov
lahf
mov
jno
and
ret
cmp
daa
arpl
mov
push
jmp
orl
mov
mov
lret
out
cmp
push
or
out
jb
and
std
repz
test
dec
inc
loope
xchg
lds
clc
inc
std
cli
xchg
mov
sbb
cmc
imul
roll
sahf
out
mov
push
js
push
in
mov
js
mov
xchg
push
push
xchg
sub
jmp
loop
scas
test
movsb
fwait
mov
jno
leave
stos
jmp
sbb
mov
jmp
push
xchg
flds
xchg
mov
pusha
xor
push
pop
push
inc
into
fwait
inc
mov
fwait
or
cmpsb
sub
inc
mov
fmull
scas
scas
inc
stos
pop
into
jge
gs
pop
or
hlt
pop
push
lcall
pop
mov
decb
in
scas
shll
add
mov
sub
xor
push
dec
mov
jle
xlat
mov
enter
adc
xchg
cmp
jne
mov
cs
cwtl
pop
push
mov
mov
daa
xchg
sbb
popa
or
je
lcall
xor
jp
adc
js
lcall
nop
das
add
mov
mov
lock
loopne
add
add
cmpsb
in
mov
or
or
fdivs
lret
addr16
pop
pusha
and
sub
ss
mov
cld
es
out
cmp
in
mov
cmp
xchg
jecxz
and
test
iret
ss
movsl
dec
xor
jns
and
jae
insb
sbb
jno
dec
adc
mov
push
or
sbb
clc
xor
push
sbb
dec
sbb
fcomi
jne
cmp
in
and
test
jno
sbb
jmp
or
aas
mov
rcl
cs
cmpsb
ffreep
add
inc
sahf
cmp
mov
stc
bound
mov
fnstenv
mov
push
push
fldt
xchg
or
mov
pop
mull
sti
mov
add
add
addr16
xchg
mov
pop
adc
mov
jmp
cld
cli
pop
jbe
mov
cli
lods
or
fimuls
mov
out
les
movsb
or
push
lods
xor
ss
popf
xlat
push
mov
push
les
xor
jo
xchg
shlb
mov
dec
add
mov
sbbb
xor
outsl
push
negl
scas
and
mulb
leave
imul
dec
or
inc
dec
fcompl
dec
pop
sbb
movsl
dec
dec
and
xor
sub
leave
jge
jmp
push
cltd
stos
xchg
dec
mov
xchg
xor
jp
mov
outsl
cmp
pop
outsl
cmc
aaa
ds
push
test
mov
ja
rclb
icebp
ficompl
divb
xor
push
icebp
push
sahf
ja,pt
pop
xor
xchg
jmp
jmp
lret
pop
push
lret
addr16
mov
daa
mov
cltd
roll
insl
push
call
adc
push
call
xchg
test
or
mov
mov
or
adc
mov
cmp
test
cmp
arpl
fwait
clc
dec
pop
inc
rolb
mov
push
rorl
das
mov
std
lods
mov
outsl
dec
icebp
scas
mov
subl
push
repz
scas
jbe
xchg
scas
cmp
imul
hlt
dec
sbb
ja
push
stos
add
cltd
outsl
sar
int
lret
cli
stos
je
jae
cwtl
push
push
movsb
cltd
cld
cmp
jae
inc
sti
push
xor
movl
xor
jmp
add
push
les
test
addr16
rcrb
mov
push
stos
stos
mov
pushf
mov
orl
ljmp
xchg
xchg
lahf
pop
inc
mov
sti
mov
pop
in
popa
xchg
scas
and
fdivp
xor
sbb
push
add
push
cld
dec
rcrb
call
mov
sub
test
mov
stos
mov
or
sbb
cmp
sbb
clc
lcall
cmpsb
sbb
push
cltd
movsl
push
push
sbb
mov
jb
test
cwtl
outsb
cli
jge
fistpll
daa
or
cmc
mul
sub
nop
ljmp
les
mov
mov
mov
add
mov
mov
subl
and
dec
lahf
pop
jbe
mov
mov
and
mov
mov
pusha
cwtl
xlat
jb
xor
pushf
pop
xchg
adc
movsb
repnz
mov
inc
insb
cmc
mov
mov
pop
jle
push
pop
push
cld
dec
jmp
dec
dec
mov
out
adc
and
jne
and
out
addr16
fwait
rolb
pop
dec
in
gs
mov
mov
lods
daa
icebp
pop
mov
stc
or
jp
lcall
lcall
leave
ret
jae
mov
inc
out
and
stc
dec
pop
out
out
jb
dec
pop
pop
mov
std
scas
or
fs
insb
add
mov
inc
jecxz
push
xlat
loopne
pop
mov
jg
hlt
pushf
pop
or
xor
aam
xchg
mov
add
cmc
hlt
xor
bswap
jbe
inc
fsubl
insb
insl
xchg
mov
in
test
into
shl
addl
test
shrb
sub
and
nop
fst
movsl
jne
outsb
mov
xor
sti
cmp
je
repz
icebp
icebp
or
ljmp
mov
cmp
pushf
xchg
inc
ror
lahf
popf
pop
int
call
call
adc
or
in
repnz
inc
fmull
jge
ljmp
xchg
loop
mov
call
test
mov
rcl
inc
xchg
push
xchg
xor
outsl
mov
jmp
mov
mov
out
mov
pcmpeqb
sub
or
pusha
dec
inc
lret
mov
outsb
push
aad
inc
int3
xchg
dec
lock
lret
std
dec
testb
xlat
and
sbb
test
xchg
scas
mov
sub
imul
lret
mov
xchg
xchg
mov
call
movsb
ror
mov
lret
mov
imul
das
push
jg
mov
cmp
out
orl
dec
push
rolb
mov
les
push
or
mov
or
mov
test
cvtps2pd
dec
frstor
and
cwtl
inc
sahf
mov
jg
lahf
jo
or
and
popf
jo
gs
out
pop
adc
jae
popa
mov
aas
jbe
scas
mov
adc
loopne
xor
test
xchg
xlat
sub
lcall
push
out
fstl
shlb
sarw
scas
sub
enter
subb
jb
gs
mov
push
pop
clc
loopne
cwtl
inc
mov
jne
std
inc
out
dec
mov
jmp
out
sti
addl
sbb
loop
repnz
cwtl
pusha
stc
lret
test
aam
inc
ds
mov
arpl
into
xor
sbb
xor
jno
push
ret
add
pushf
adc
lret
fcmovnu
cli
ret
sbb
xchg
xchg
sbb
or
xchg
push
lcall
rorb
mov
repz
jb
ret
shll
cmc
sbb
call
push
popf
lock
jge
clc
adc
in
xchg
std
ret
cs
cmovle
int
data16
and
movsb
ret
pop
enter
mov
mov
fsubrl
in
fcmovbe
xchg
aad
jg
pusha
rcr
rorb
inc
adcl
aad
dec
add
mov
repnz
xor
loopne
pusha
inc
push
shl
ds
pop
sbb
xor
idivl
pop
imul
test
test
mov
call
or
add
cmp
dec
xor
lahf
inc
iret
adc
mov
cmp
dec
lods
stc
insl
mov
fldl
push
xor
shll
mov
stc
or
and
outsl
je
loope
arpl
mov
mov
cmpsb
mov
movsl
xchg
call
adc
push
loopne
fdivs
lods
sub
insb
pop
mov
push
mov
jns
push
rep
push
out
jmp
inc
in
mov
dec
aas
dec
mov
mov
sbb
pushf
inc
out
jmp
sar
or
inc
xchg
push
cltd
mov
ja
push
push
mov
or
pushf
call
and
add
loop
mov
cmpsb
sub
ret
mov
push
sub
adc
dec
cmp
adc
stos
mov
adc
mov
jo
pushf
je
std
push
arpl
test
add
pop
shlb
pop
call
dec
mov
dec
fwait
pushf
jns
push
pop
sbb
sub
pop
pop
mov
mov
mov
mov
sub
fsts
xchg
aad
iret
and
cmp
adc
jnp
sbb
fisttpl
mov
sti
mov
les
pop
xchg
push
push
into
stc
mov
jmp
jns
inc
cmpsl
adc
cli
mov
jp
pop
pop
jns
or
add
sub
les
repnz
not
mov
and
jmp
jecxz
mov
call
and
in
and
xor
jnp
aas
inc
fiadds
xchg
fs
imul
pop
mov
sub
mov
fildl
in
push
lret
xchg
or
lock
mov
jg
dec
sbb
sbb
and
adc
shlb
fiaddl
jbe
call
add
mov
xchg
mov
mov
jg
outsl
cmc
sarb
aaa
xchg
cmp
ljmp
jl
dec
enter
xor
clc
or
arpl
enter
popa
mov
push
mov
cli
push
repz
pop
bound
dec
movsl
and
test
push
jne
stos
xchg
inc
sahf
repz
push
movsl
es
mov
outsb
ss
ret
pop
daa
shl
cmp
pop
inc
jnp
push
xchg
cltd
pop
dec
cmp
mov
xchg
mov
inc
cmc
imul
push
push
fsubl
dec
mov
and
mov
adcb
push
pop
push
xor
push
add
ss
and
mov
jle
fsts
or
iret
ljmp
fsts
mov
jne
and
jecxz
xor
mov
int3
fidivrs
je
pop
dec
aaa
mov
jge
jae
idivl
ljmp
xchg
or
movsl
ret
mov
es
xor
shrl
loope
jne
je
arpl
int
or
lock
mov
xor
call
jmp
add
arpl
xor
xor
pop
pop
scas
xchg
out
cmp
test
mov
xor
insb
inc
fiaddl
or
pushf
aad
fmull
jge
flds
mov
cmpsl
mov
dec
xchg
daa
and
ljmp
sbb
sub
push
push
imul
mov
int
jae
inc
jmp
jg
mov
xchg
or
xchg
nop
push
mov
and
mov
loopne
rolb
ret
and
or
in
adc
pop
nop
inc
test
push
std
mov
xlat
lods
sub
mov
cmp
jno
clc
or
scas
aas
out
hlt
loope
fidivrs
aas
repz
adc
cmp
repz
pop
pusha
adc
adc
cmpsb
mov
js
out
or
jg
gs
push
adc
xchg
mov
orl
sbb
jge
sub
sub
lcall
in
stc
xchg
mov
mov
movl
sbb
fs
adc
adc
dec
mov
dec
push
cs
xor
iret
mov
cmp
mov
rcrl
jnp
xchg
pop
sub
popa
pop
imul
push
mov
ljmp
pop
xchg
fsubs
xor
pushl
imul
lock
sbb
pop
pop
inc
mov
and
xchg
sub
sbb
cmpb
pop
lock
and
loope
push
add
fimuls
popf
out
sahf
flds
and
cmp
sti
addr16
inc
sub
mov
dec
aam
cli
xor
xor
or
and
stos
push
xchg
aas
aam
add
frstor
inc
mov
daa
out
daa
push
shl
out
scas
mov
out
sub
popf
cmp
icebp
xchg
xor
test
cmpsb
cltd
cmc
mov
fcmovne
inc
test
ror
fisubrl
pop
ficoml
mov
push
mov
and
pop
mov
mov
out
pop
add
and
push
cmpsb
scas
mov
leave
add
or
stos
mov
jmp
stc
mov
fstl
inc
dec
jnp
inc
loop
sub
pop
stos
test
mov
add
movsl
jecxz
mov
jae
sbbl
or
sub
jns
push
lea
testl
pop
sub
dec
lcall
scas
mov
lret
iret
mov
xchg
sbb
sub
or
push
pop
pop
mov
insl
mov
mov
fstp
mov
dec
repnz
inc
ror
out
repz
shrl
fs
stc
jbe
pushl
and
sbbb
rcrl
lahf
jecxz
popf
mov
loopne
push
lcall
int
aaa
jmp
in
xchg
testl
in
adc
push
mov
mov
cmpsb
dec
sub
add
mov
data16
lret
inc
lods
fdivrs
faddl
dec
pop
jae
lods
enter
sbb
ret
shlb
jge
hlt
divb
push
inc
adc
mov
das
add
shll
je
add
mulb
bound
mov
xlat
cmp
or
movl
scas
and
mov
mov
pop
push
lds
ds
jbe
sub
in
outsl
mov
into
cwtl
push
cmp
es
push
cmp
pushf
cmpl
push
cmp
nop
fcoml
pushf
sbb
mov
jge
xchg
movsb
dec
das
xor
in
ret
int
shr
mov
mov
inc
rolb
push
dec
stc
or
dec
push
insl
fdivr
and
jbe
jmp
mov
cmp
cli
push
sti
aad
outsl
enter
ret
and
add
jmp
dec
add
dec
test
cwtl
mov
adc
sbb
shrl
or
cli
out
xchg
sub
jecxz,pt
test
stos
jo
test
test
test
lods
sarl
in
fdivrl
hlt
testl
cld
dec
nop
push
out
std
hlt
fisubs
aaa
mov
lret
mov
mov
dec
divl
mov
jae
and
or
jb
gs
jle
adc
divb
ret
add
add
hlt
fildll
in
cmp
mov
push
mov
xor
cmp
inc
sbb
mov
jns
lcall
fidivs
std
mov
mov
cmp
and
sbb
sub
push
mov
std
mov
testb
fnstenv
addl
jg
jae
mov
dec
ss
xor
pop
mov
xor
and
mov
shrb
in
cli
xchg
sub
rcll
mov
inc
out
imul
jb
or
push
bound
mov
mov
jg
iret
cwtl
ja
add
into
cmp
popa
aas
sub
call
cmc
out
jg
cmpsl
repnz
loopne
ljmp
sbb
mov
inc
dec
in
mov
cmpsl
sub
sbbl
cmp
pop
in
mov
stc
insl
aad
fildl
xor
lret
in
cmp
adc
idivb
enter
cli
lods
and
pop
jnp
mov
fisttps
test
add
mov
dec
int3
in
aad
mov
sbb
inc
jae
add
cmp
adc
sbb
mov
sar
mov
stos
in
xchg
adc
ret
sbb
lods
jo
in
cmp
mov
aaa
hlt
mov
test
inc
popf
fimuls
ret
imul
lcall
mov
ss
fimuls
cmp
ljmp
sahf
rcrl
xor
ja
xor
add
in
sbb
ret
mov
xchg
scas
pop
test
push
mov
xchg
sbb
or
lock
jl
fs
xor
sub
push
push
mov
data16
in
and
and
ret
lahf
lahf
gs
push
shl
xchg
push
repnz
pop
or
insb
lods
loope
notb
jp
mov
jle
xor
xor
repnz
or
add
nop
test
jecxz
adc
jecxz
in
fidivrs
jge
add
pop
mov
repnz
inc
mov
push
clc
sub
cmp
sub
inc
lret
out
xlat
cmc
fs
leave
popa
mov
mov
repnz
lret
and
es
sbb
shlb
mov
xor
mov
lock
inc
aas
push
and
pop
xlat
push
sub
mov
int3
test
jno
sbb
popf
sahf
cmovb
notl
mov
scas
js
in
in
cmpb
mov
outsb
dec
in
sub
stos
call
daa
push
imul
pushf
cwtl
divb
mov
dec
sar
call
aam
cmc
pshufw
pop
sbb
std
ljmp
pop
dec
pop
jo
mov
out
cmp
hlt
xchg
outsl
shrl
push
dec
repz
inc
call
movsl
or
and
mov
inc
sbb
cmp
and
sub
jl
inc
push
sbb
into
add
movsl
dec
sub
loop
cltd
xchg
add
scas
mov
subb
mov
stc
cmp
js
pushf
clc
mov
push
xlat
push
or
fs
ret
ds
pop
inc
fwait
outsb
add
dec
fwait
enter
push
jo
mov
sub
dec
xchg
jecxz
jp
xchg
push
pusha
outsl
sub
jl
xchg
adc
lret
int
or
outsl
lods
push
xchg
loope
lds
outsb
fs
int3
arpl
xlat
adc
sub
push
add
test
aad
inc
arpl
and
or
fwait
shlb
sbb
mov
inc
cmpsb
shrb
pusha
loope
or
icebp
push
mov
inc
cmp
std
lret
push
mov
es
sahf
clc
xchg
bound
cwtl
jmp
or
jns
out
jne
dec
dec
cmc
xchg
popa
sti
push
push
jl
inc
jl
aam
inc
mov
push
push
je
pop
mov
aas
xchg
and
pop
cmp
aaa
in
lock
or
mov
mov
imul
inc
inc
sbb
idivb
bound
in
ja
or
sbb
inc
mulb
stos
sarb
xchg
cmpsl
cli
jo
int
xchg
fimuls
inc
fadd
rorb
jmp
pop
or
stc
sarb
ljmp
and
cwtl
sbb
fimull
je
mov
mov
daa
repz
cmpsl
pop
and
jle
cld
stc
push
aam
out
pusha
sti
loop
mov
dec
ja
fcoml
add
or
fimuls
mov
movsl
dec
mov
movsb
imul
mov
ljmp
push
pop
xchg
jge
ret
aam
loop
dec
clc
in
pop
jne
adc
std
inc
mov
movsl
lods
mov
pop
in
clc
loop
nop
je
inc
xchg
cltd
push
xchg
pop
mov
ret
xchg
jg
mov
and
jns
jl
mov
cmp
out
adc
adc
stos
cmc
cltd
popf
out
leave
push
ja
and
jp
and
push
call
xor
jo
daa
mov
inc
cmp
ds
mov
cmp
jg
lcall
jp
fwait
fs
jbe
imul
jmp
pop
pop
push
xlat
or
and
jno
nop
xchg
jle
mov
xchg
mov
xlat
mov
mov
pop
ret
xchg
cmpsb
sub
xchg
ret
or
sub
js
mov
inc
orb
movsb
fcompl
mov
jne
inc
aad
jnp
mov
jns
and
mov
aaa
cmp
icebp
xchg
leave
les
mov
lock
stos
fsts
jmp
and
or
cmp
cmp
daa
mov
stc
jle
and
sbb
inc
and
in
adc
js
sub
cmpsb
sub
pop
popf
pop
xchg
shlb
push
cmp
ror
dec
and
ficomps
add
add
add
mov
shrl
inc
sahf
mov
mov
jmp
call
push
or
xor
movsb
test
filds
mov
rorb
repz
cmp
bound
mov
outsl
loop
aas
xchg
inc
sbb
int3
aaa
clc
sub
pushl
sti
add
in
mov
sub
inc
out
pop
in
arpl
add
mov
push
cs
mov
mov
xor
cmpb
sarl
mov
or
mov
mov
cmp
aas
mov
cwtl
adc
mov
or
inc
stos
add
push
xchg
adc
shrb
and
jge
out
inc
mov
lea
adc
insl
mov
sti
enter
hlt
test
sub
adc
dec
push
mov
jne
ja
cmpsb
push
and
fdiv
shl
inc
fidivrl
xchg
inc
push
jno
stos
jge
dec
cmp
push
inc
adc
repnz
aam
inc
pop
mov
cmpsb
adc
cmc
ret
movsb
lret
sbb
movsl
pop
mov
pop
or
push
out
or
sub
in
rol
cmp
mov
push
aaa
dec
push
pop
test
dec
jl
or
push
xor
adc
sti
jmp
in
lret
push
cltd
cwtl
vmovaps
lret
shll
cmc
inc
in
in
insb
sub
int
into
sub
sbb
subb
lock
or
ret
push
in
imulb
ficoml
outsb
jg
imul
fiadds
jns
jp
xchg
out
or
fs
outsl
and
js
push
pop
lret
and
loope
icebp
sub
pop
addb
xchg
dec
jb
push
sahf
ss
and
jno
mov
xchg
jo
mov
in
mov
mov
jb
xchg
orl
addr16
jnp
mov
mov
push
out
int
movsb
sahf
add
inc
fsubr
sbb
inc
lods
rdpmc
test
vucomisd
sub
or
or
hlt
sbb
jo
stc
leave
add
mov
xchg
mov
xor
push
pushl
addr16
push
mov
mov
leave
xor
lret
adc
cmp
dec
and
sub
and
repz
adc
xchg
inc
or
xor
mov
movsl
stos
mov
enter
scas
mov
push
adc
sbb
sbb
repnz
dec
pop
in
in
cmpl
shl
mov
mov
mov
xchg
pop
cmc
lods
pop
inc
cmc
repz
and
das
enter
mov
fcomi
mov
mov
shrl
pop
add
mov
leave
or
test
cmp
lds
mov
fidivl
sbb
lods
jne
jle
mov
movsl
xchg
jo
sbb
aad
ss
jl
pop
lock
mov
imul
pop
mov
sti
jp
jp
mov
cmp
dec
inc
sbb
enter
mov
mov
sbbb
add
mov
sahf
cs
jnp
icebp
or
or
inc
movsb
out
cmpsb
mov
shrb
dec
test
repnz
imul
test
hlt
jae
push
orl
fiadds
jne
dec
int3
out
jge
xchg
jge
mov
and
xor
push
dec
cwtl
ret
pop
iretw
jne
jecxz
inc
iret
mov
sbb
add
xchg
adc
adc
mov
cmpsl
addb
cmc
pushf
jg
or
push
or
and
mov
imul
push
adc
xchg
push
stos
out
jbe
je
inc
jo
push
call
je
cmpsl
ror
jb
mov
mov
mov
cli
mov
pushf
jge
push
mov
test
xor
js
xor
data16
xchg
xchg
shlb
test
inc
sub
sbb
stos
xchg
pushf
or
add
push
push
test
adc
xchg
push
rolb
add
je
and
jp
dec
dec
pop
push
mov
daa
xorl
faddl
or
lahf
call
dec
dec
insb
xchg
and
rcrl
jno
xlat
iret
mov
scas
mov
jae
jns
mov
arpl
jo
sbb
jge
nop
mov
aaa
push
int
sbb
dec
fsqrt
dec
push
xor
mov
push
pop
jmp
sbb
mov
fs
loopne
test
xchg
ret
jge
xchg
push
int3
mov
sbb
push
imul
cmp
xchg
mov
jne
mov
in
cmp
mov
push
push
in
and
xchg
sub
in
xorl
sbb
push
mov
popf
mov
add
daa
lcall
into
cmp
dec
cs
cmp
dec
mov
jp
imull
je
adc
mov
inc
add
dec
jle
push
xchg
hlt
dec
sub
mov
pop
and
pop
shlb
dec
loope
xchg
jne
add
add
add
lods
js
pop
push
ret
sarl
pop
leave
dec
xchg
js
dec
push
call
add
arpl
repnz
or
cwtl
xor
xorw
push
stc
out
mov
add
test
cmp
in
daa
jecxz
pop
popf
adc
and
adc
ret
jne
pusha
adc
jl
test
cvtdq2ps
test
xor
pop
das
dec
stos
dec
cmpsb
stos
pop
push
fs
outsb
fimuls
out
stc
cmpsb
insl
adc
jmp
jle
insb
cltd
insl
dec
loop,pt
mov
push
add
dec
xchg
jbe
push
jno
addr16
pop
pop
dec
xor
ja
jl
cmp
xchg
xchg
dec
add
or
and
inc
push
cmc
mov
add
push
cmpsb
arpl
xchg
fcomps
cmp
ds
sbb
pop
sbb
pop
sbb
out
dec
inc
fsts
test
jecxz
shlb
lahf
loope
addr16
pop
mov
add
jecxz
jecxz
pusha
jnp
xor
test
rcll
dec
mov
das
lret
jnp
pushf
loop
xchg
mov
cmp
xchg
pop
mov
inc
jno
stos
out
imul
ss
fisubrs
jbe
addl
imul
jecxz
mov
mov
jae
mov
int3
loop
clc
rcrb
in
sbbb
add
xor
sarl
nop
sti
mov
pop
gs
jnp
cmc
outsb
jge
pop
add
mov
dec
out
mov
loopne
in
xchg
jbe
ret
fdiv
popa
out
out
in
int
add
push
xor
adc
cmp
dec
push
mov
dec
cmp
cwtl
cmp
fmull
pop
lds
sub
add
jb
dec
fistpl
pop
lds
xor
mov
xlat
push
jo
leave
xchg
dec
ljmp
sbb
cld
test
aaa
and
mov
push
outsl
sub
ficoms
aam
cmc
out
sbb
add
pop
adc
shrl
inc
xchg
cld
jmp
xor
cld
jbe
and
lahf
sub
jmp
loopne
sbb
xor
push
mov
add
in
pop
mov
pop
enter
or
push
jnp
jb
xor
inc
jp
fisubl
pop
rol
pop
add
cmpsl
xchg
inc
xor
inc
mov
aaa
in
xor
roll
pop
jg
mov
pop
mov
mov
sub
fcomps
test
jnp
cmp
notb
push
movsl
jle
gs
xor
sub
sahf
adcb
xlat
inc
xchg
aas
stos
mov
movsb
aad
sub
aas
call
aam
je
xor
sahf
push
fstp
cmp
shlb
sbb
push
cwtl
pop
cs
aad
dec
std
xchg
mov
push
out
adc
shll
popf
clc
jne
inc
mov
push
mov
cwtl
adc
inc
xor
movsb
int
dec
sbb
jp
fiadds
and
and
out
sbb
sub
mov
pop
push
cmp
scas
roll
lcall
loop
pushf
xchg
mov
cwtl
mov
jp
mov
clc
sbb
cmp
mov
ret
pop
test
mov
pop
jge
push
sbb
movsl
xor
or
lea
cmp
mov
cmp
adc
pushf
data16
dec
adc
adc
cmp
jecxz
test
push
sub
push
das
pop
pusha
lock
jae
mov
fidivs
data16
inc
in
ret
adc
popf
int
adc
adc
cmp
loopne
pusha
shrl
adc
loopne
lock
pop
cmc
gs
lret
in
insb
inc
call
cmp
push
aaa
xchg
cmp
pop
iret
mov
out
ja
mov
fadd
add
add
ret
xor
clc
mov
test
aad
fwait
xchg
fistps
add
dec
stc
cmp
outsl
xor
push
mov
jbe
fsubrs
das
je
movsb
dec
inc
cmpsw
icebp
jp
jecxz
enter
ret
sbb
mov
add
sarb
cmp
in
hlt
rclb
mov
push
xor
push
pop
movsb
jno
test
xchg
inc
fsubrs
and
add
mov
mov
hlt
pusha
xchg
ja
ret
lcall
repnz
sbb
cltd
in
mov
push
lcall
movsl
lahf
add
lock
pusha
pop
push
xchg
aad
push
pop
daa
xor
stos
adc
inc
clc
xor
mov
fbld
sub
mov
mov
imull
push
xor
mov
ja
cwtl
subl
outsb
push
jo
sbb
cmp
xchg
sbb
cmp
rcr
cmp
inc
push
xor
mov
mov
imul
add
shlb
pop
testl
add
xchg
mov
int3
xchg
xchg
repz
or
mov
lock
into
inc
arpl
mov
or
xor
mov
inc
mov
push
std
std
inc
xor
pop
fsubp
or
cmc
cwtl
out
out
ljmp
ljmp
ja
call
repz
popf
adc
iret
cmp
push
addb
lret
inc
repz
iret
xor
pop
pusha
jb
mov
inc
test
dec
and
cmp
add
mov
push
fnstsw
addr16
jp
jmp
sub
pop
and
fmulp
out
enter
in
mov
xchg
loope
mov
outsl
push
and
sbb
dec
lcall
in
int
sub
or
and
push
xlat
mov
push
pop
js
cmp
or
mov
push
adc
pop
repz
add
dec
mov
mov
sbb
repnz
inc
jno
sbb
jle
nop
lods
and
mov
out
push
test
fwait
popa
insb
lock
add
andl
mov
out
or
cli
sbb
out
inc
inc
xchg
and
cmp
jns
out
inc
mov
fisubs
sub
andl
in
jecxz
add
rorl
inc
xchg
jecxz
ficompl
dec
cltd
loope
mov
mov
outsl
sahf
sbbb
lcall
xchg
movsl
std
lock
or
pop
cmp
fs
mov
repnz
pop
pop
push
pop
cmpsl
xchg
shrl
sbb
push
call
pop
sti
inc
cli
out
jae
mov
xchg
call
ds
sbb
loopne
rclb
lds
cmpsl
add
mov
enter
pop
popa
es
cwtl
add
xlat
sub
sub
dec
outsb
leave
xchg
or
sti
lods
jno
push
decl
dec
lea
insl
add
addl
jg
fstpl
lret
push
cmp
pushf
lods
mov
dec
xor
cmpsl
popl
call
insb
sbb
addr16
lock
subl
push
mov
movsb
pop
hlt
lret
mov
jg
lock
cmpsl
cmpsb
sub
and
cmp
pop
inc
mov
pop
pushf
sub
inc
fs
test
mov
dec
and
lods
and
mov
sub
cmp
xchg
push
push
pop
jge
or
jnp
imul
in
adc
or
add
enter
aas
inc
imull
pop
sub
dec
and
arpl
push
mov
data16
flds
cli
scas
rcrb
out
cmp
loope
push
mov
in
mov
sti
out
rcll
add
imul
lea
outsb
stc
pop
jle
in
jp
repz
rcll
xor
xchg
pusha
imul
enter
jnp
inc
mov
dec
fisttpl
insl
loopne
mov
mov
pop
and
inc
arpl
ljmp
inc
movb
push
popa
dec
jb
cmpsb
movsb
push
cmp
sub
xchg
inc
mov
cmp
pop
add
inc
mov
lods
rol
pop
repnz
lahf
or
pushf
push
jp
sbb
and
hlt
enter
xchg
xchg
test
std
push
add
shrb
aaa
rcrb
adc
jb
outsb
das
jp
test
pusha
push
stos
mov
movb
pop
mov
add
scas
dec
mov
pop
pop
ljmp
neg
xchg
cmp
or
lret
fstpt
xlat
stos
lea
adc
mov
add
cmp
xchg
push
out
add
repz
stos
and
lea
dec
mov
je
cmp
mov
mov
sub
in
cmp
mov
mov
push
js
lods
ja
pop
shl
out
jns
clc
repnz
or
inc
std
mov
daa
data16
add
push
stos
push
pop
inc
mov
movsb
mov
push
ret
ds
jle
pushf
lret
add
jp
push
aad
out
lock
loope
into
mov
sub
fwait
sbb
jbe
pop
inc
push
push
push
mov
mov
and
movsb
fisubrs
test
cmp
enter
mov
mov
lahf
cli
xchg
adcb
push
cmc
in
pop
fcom
add
xchg
scas
mov
xor
and
out
inc
pop
mov
scas
sbb
jge
dec
or
push
mov
sbb
push
jmp
jle
mov
xor
jle
repz
ja
loope
das
pop
jno
stc
cld
xchg
pop
aad
sahf
mov
cld
aaa
inc
rolb
fadd
mov
clc
adc
fimull
mov
adc
lea
punpcklbw
lods
aaa
mov
or
test
cli
shlb
pop
insb
xor
testb
ret
xor
dec
loope
movsb
fwait
add
pop
lods
pop
mul
jge
add
les
ret
mov
movsb
pop
rorl
shll
mov
sti
js
sbb
push
and
loopne
mov
cmc
mov
jo
add
or
adc
add
add
aaa
test
jnp
mov
push
jae
mov
pop
sbb
fstl
subl
cmp
mov
push
aaa
cld
xchg
ja
leave
stos
cmp
out
jp
lock
cmp
jmp
mov
or
roll
jbe
or
adc
mov
adc
and
xor
jnp
push
jmp
mov
mov
jg
inc
das
mov
mov
sub
cld
jmp
cmp
sahf
repnz
add
mov
daa
in
inc
or
repnz
test
ret
shlb
in
ret
lods
dec
jns
test
leave
jmp
subb
shl
insb
mov
cmp
mov
int
mov
add
add
lods
lock
pmulhuw
xchg
xchg
xchg
jnp
add
dec
sbb
or
addr16
mov
into
sahf
xchg
and
clc
call
mov
setbe
test
mov
rcll
cmp
jne
xlat
sub
xchg
push
mov
es
int3
jp
cmp
out
pop
pop
pop
jnp
xchg
sbb
test
gs
lret
lret
popf
movsl
imul
int
lret
mov
push
rcr
repnz
shlb
int3
mov
push
inc
sub
mov
mov
mov
and
sahf
mov
xor
jnp
push
aad
cmc
jb
fwait
enter
out
int3
clc
mov
in
pop
sbb
stos
bound
xorb
lcall
ja
cmc
loope
aam
adc
out
jecxz
mov
jo
movsl
adc
dec
cmp
push
frstor
aaa
cwtl
pop
mov
data16
add
les
out
pop
fcmovnu
cmp
xor
fs
jg
jo
adc
dec
adc
call
cmp
scas
push
push
pop
mov
mov
adc
add
mov
iret
enter
mov
imul
movsl
push
xor
stos
add
jb
stc
xchg
cmp
mov
push
sub
loop
xor
scas
test
xchg
xchg
les
fimuls
push
and
push
jmp
and
lea
mov
inc
cmc
stc
inc
mov
xor
push
inc
repz
pushf
loop
movsl
popf
inc
mov
outsb
lretw
push
jp
iret
es
scas
addr16
jnp
cltd
pop
enter
insl
sub
dec
ret
jp
pop
lret
or
mov
test
adc
test
sub
and
pop
sahf
jnp
mov
jmp
inc
ret
fdivrs
push
or
xlat
mov
push
dec
fmull
ss
sbb
arpl
cmp
push
imul
sub
cmc
jae
mov
dec
jns
sbb
mov
std
dec
add
adc
push
sub
pop
push
adc
popf
mov
cmpsl
int3
sub
pop
imul
fisttps
icebp
jns
jmp
sub
dec
xor
pop
repz
or
fistl
cltd
push
daa
frstor
scas
jb
cmc
xchg
fistpl
lret
lods
push
enter
into
push
imul
mov
dec
mov
sub
scas
add
cld
mov
out
fwait
and
pushf
fldl
cmp
push
sub
repnz
dec
xchg
and
push
xchg
and
fs
sub
das
cmp
jmp
loope
cmc
mov
lds
inc
fsubp
mov
aad
icebp
lahf
add
lret
sub
push
dec
sbb
rcrl
iret
in
mov
aas
xchg
lods
and
pop
cltd
imul
adc
push
iret
in
add
dec
pop
shr
loopne
and
stos
in
inc
leave
push
lods
out
adc
iret
out
movsb
xchg
test
ja
enter
adc
out
push
cltd
dec
mov
or
xchg
scas
mov
shlb
xor
jo
fisttpll
mov
cmpsl
scas
and
out
xchg
sbb
cmp
dec
dec
popf
dec
lock
sbb
cmp
test
ret
scas
mov
or
test
test
hlt
pop
popl
mov
mov
popa
adc
jle
cmpsl
inc
data16
call
arpl
or
lret
lock
add
inc
jle
mov
lock
mov
leave
jge
cmp
push
mov
ror
xchg
mov
rcrl
lret
mov
cli
xchg
and
icebp
push
push
aaa
int3
pop
xor
jp
in
sub
dec
xchg
dec
or
and
mov
adc
lret
into
fwait
js
xor
lds
sbb
xchg
int3
push
xlat
jmp
inc
or
and
adc
push
stos
sbb
inc
call
inc
iret
jne
pusha
mov
sbb
push
sub
or
roll
std
popa
jmp
jb
fwait
lret
ja
push
call
or
pusha
xchg
ret
scas
shll
mov
pop
push
pop
filds
ss
clc
lods
dec
sub
and
sbb
sub
adcb
inc
mull
stc
bound
ficoml
sbb
insl
in
test
shrb
les
mov
scas
add
jg
subl
sbb
xchg
sbb
cs
imull
fisttpl
mov
out
sarb
mov
cmp
sbb
ss
cmp
loope
jge
cmp
and
pop
mov
lods
nop
mov
pop
loop
bound
out
push
mov
push
push
pop
sbb
sub
repz
rcrl
xchg
js
enter
stos
repnz
cmp
mov
inc
xor
in
js
push
adc
shr
jbe
call
sbb
ds
subb
xor
mov
lds
aaa
mov
cmp
fisubl
adc
pop
xor
inc
test
mov
sbb
addl
mov
pop
push
xlat
jbe
mov
sbb
imul
mov
mov
mov
movsb
pop
mov
vshufps
test
xor
push
cli
ds
insb
sub
enter
lcall
jno
sub
es
lcall
fdiv
aaa
rcrl
pop
mov
jmp
cmpsl
shll
pop
mov
clc
es
push
rolb
insl
movsl
sbb
dec
stos
insb
inc
nop
sub
stos
cld
psllq
nop
scas
jbe
sahf
rolb
daa
popf
arpl
popa
jns
lret
loop
dec
fists
test
xchg
repnz
jbe
pop
pop
lret
mov
pop
subb
sub
add
pop
hlt
insb
loop
push
jg
lahf
inc
inc
mov
idivb
mov
shl
jmp
lods
in
jmp
test
jno
lret
sarl
in
fadds
add
out
pusha
push
cli
cltd
dec
sub
les
jmp
fwait
aam
adc
les
scas
insl
loopne
push
jb
dec
or
dec
fcompl
lods
cli
sub
xchg
das
in
arpl
ja
shr
fcomip
pop
xorl
pop
sbb
int
stos
lock
into
sub
jmp
cmpl
popa
mov
mov
scas
filds
pop
leave
test
in
sti
add
mov
loope
sbb
jb
sub
jno
dec
inc
loopne
and
dec
and
stc
jge
jp
mov
stos
filds
pop
filds
scas
jl
cmpsb
fnsetpm(287
or
aas
nop
outsl
xorb
nop
pop
or
addr16
cld
mov
scas
je
jle
dec
test
nop
ljmp
push
pop
add
pop
xor
cwtl
xchg
inc
outsb
out
jle
insb
and
sbb
mov
cmp
cs
scas
and
jmp
lock
scas
sti
xlat
or
inc
andb
jo
lds
xchg
push
push
push
aaa
call
popa
mov
cmc
pop
das
loop
mov
mov
inc
cli
loope
stos
insl
push
inc
mov
aaa
in
filds
rol
adc
cmpsb
in
sbb
test
scas
push
mov
sub
sbb
adc
add
inc
daa
mov
cmpsl
mov
sub
mov
or
jns
sahf
or
xchg
ficoml
decb
mov
adcl
lcall
insl
jmp
push
sti
jo
dec
std
and
push
lcall
adc
and
and
and
add
movsb
in
jmp
xor
mov
imul
popa
fiadds
add
or
pop
push
mov
fldl
je
or
dec
jno
sbb
xor
lock
and
int3
lock
jge
aam
sbb
sbb
add
ret
data16
nop
das
imul
enter
mov
push
xor
dec
adc
les
out
test
pop
or
push
and
imull
mov
arpl
mov
push
sbb
dec
xor
xchg
or
xchg
test
imul
add
pop
aam
cmc
mov
and
cli
dec
popaw
adc
push
idivb
cmp
inc
sub
xchg
and
mov
jge
xor
xchg
push
jnp
or
push
jo
xchg
sti
shl
dec
dec
push
aad
xchg
in
adc
mov
xchg
sub
mov
out
jnp
pop
sub
mov
cli
xor
mov
cld
add
pop
popa
lods
adc
pop
jg
xchg
push
rcrb
je
adc
xor
pop
ljmp
lcall
repnz
js
test
jl
je
sub
pop
test
mov
ret
jp
inc
adc
mov
mov
push
daa
and
and
mov
outsl
cs
pop
cmpsb
cmp
xor
jg
repnz
add
loopne
daa
sub
enter
scas
int3
inc
mov
pop
lret
xchg
inc
jle
test
xor
fimull
adc
popf
stos
dec
inc
add
xchg
mov
and
rcrb
jbe
pop
inc
jg
cld
cmp
sbb
pop
mov
push
jns
test
and
clc
mov
add
push
popf
push
fsubrl
popf
stos
gs
mov
mov
sub
aas
popa
lock
jl
sar
clc
in
cltd
aas
in
daa
adc
or
push
clc
cwtl
push
rclb
ja
inc
in
push
pop
sti
aad
pop
sub
arpl
pop
mov
mov
mov
or
bound
cmp
aad
rcl
jb
ds
jne
mov
dec
mov
enter
fwait
push
cmpsb
ds
mov
mov
in
icebp
daa
jno
sub
mov
sbb
test
dec
fmull
and
rcr
mov
sbb
dec
cmp
cwtl
or
jge
sub
push
sbb
sbb
loopne
adc
jl
test
ret
add
jbe
out
cli
mov
mov
jmp
mov
mov
add
jb
cmp
sbb
and
test
testl
pop
sti
dec
add
divl
movaps
outsl
imul
add
ja
lea
fmuls
out
inc
cmc
mov
mov
loopne
or
pop
pop
sub
lds
rcl
jo
pop
mov
rclb
enter
push
adc
out
mov
inc
xor
outsl
dec
rorb
cltd
xor
mov
cltd
jecxz
mov
and
repnz
jmp
out
cmc
flds
adc
dec
dec
lahf
lods
push
loopne
cmpl
pop
das
add
std
add
xor
mov
xchg
loopne
cltd
jmp
xchg
xchg
cmc
xor
sub
pop
add
adc
push
sti
cmp
xchg
push
mov
sub
data16
std
xor
mov
dec
into
adc
and
les
mov
adc
or
pop
jp
out
sbb
std
int3
cmp
sub
pop
or
xor
adc
sbb
mov
int
jae
add
rolb
push
sub
jmp
sbb
xor
push
push
pop
and
pop
insl
add
sbb
test
fdivp
pop
xchg
mov
add
lock
sub
je
lahf
jbe
in
sbb
xchg
jmp
pusha
jl
push
or
fsubp
test
push
lcall
sub
cli
cmpb
mov
ffreep
rclb
mov
jno
adc
fistpll
add
ss
ror
xchg
and
aaa
cmp
sbb
ja
ja
push
jle
daa
inc
pop
sbb
mov
jo
jmp
imul
pop
scas
mov
stos
adcl
cmc
dec
dec
out
fwait
dec
inc
xchg
or
shll
jno
movsb
mov
arpl
push
xor
push
cmp
sub
in
cmc
mov
cmpl
cli
ljmp
fs
rorl
fistl
push
sti
mov
mov
add
sti
dec
sub
jg
int
inc
add
dec
je
bound
xchg
les
sub
xlat
dec
sahf
xlat
mov
mov
leave
jle
stc
leave
pop
lods
ffree
icebp
in
inc
dec
add
or
test
mov
ja
pop
sbb
or
add
jne
insb
enter
aad
mov
lds
ds
pop
jno
inc
popa
pop
ss
mov
inc
inc
inc
pop
mov
insl
jns
xchg
or
shlb
lods
gs
or
add
pop
les
mov
lock
inc
jg
faddl
js
mov
stos
les
xchg
fbstp
lcall
push
movsl
cwtl
mov
iret
cmp
and
sub
sub
jb
and
or
sub
clc
ret
xor
push
sbb
xchg
addr16
pop
sbb
pop
inc
sbb
adc
call
ret
pop
sub
cmovle
aam
mov
cmp
push
in
imul
outsl
sbb
adc
dec
inc
sub
lret
in
mov
dec
cli
iret
cld
loope
inc
loop
mov
push
push
es
adc
popa
ja
mov
lea
clc
test
out
add
xchg
xchg
jae
lret
lods
mov
lahf
aas
sahf
mov
mov
sub
into
ret
aas
std
push
jbe
mov
xor
adc
inc
stos
mov
jle
cmpsl
leave
jg
push
lds
cmp
and
loope
icebp
fldt
inc
jg
jae
repnz
imul
add
out
mov
xchg
xor
or
imul
into
dec
mov
ja
cmp
cmp
int3
or
dec
imul
inc
mov
pop
sahf
mov
inc
jp
xor
insb
sbb
subl
mul
cmp
mov
stos
test
add
cld
mov
cmc
pop
push
scas
xchg
push
cli
idivb
push
or
push
add
jmp
insb
add
arpl
movsb
cmp
dec
xchg
push
lahf
jno
loope
lock
shll
mov
in
test
daa
cld
pop
sub
or
mov
jnp
dec
repz
fs
jo
call
and
outsb
mov
jle
lock
mov
dec
add
leave
dec
sarl
es
mov
xchg
insl
mov
das
add
fdivrl
sub
mov
jo
cmp
lods
or
sub
mov
pop
pop
cmc
addl
and
sub
loopne
or
sti
stos
scas
and
pop
pop
pusha
adc
fisubrs
cmp
loope
xor
inc
movsl
fsubs
lcall
imul
sub
jge
xor
dec
imul
fimuls
lret
daa
mov
jmp
adc
gs
and
cld
pushf
push
sti
clc
daa
mov
mov
insb
dec
and
inc
mov
je
xor
daa
and
hlt
int3
fwait
sbb
lea
pop
shl
mov
and
sbb
cmp
addl
fs
movsb
stc
insl
pop
in
adc
stc
insl
cmpxchg
push
xor
mov
xor
jle
loope
ds
or
inc
push
sub
mov
and
push
sub
test
jmp
cmp
jge
cmp
pop
jl
stos
ret
fnsave
aas
mov
jl
rorb
xchg
lock
cmp
insl
movsb
mov
loop
daa
lcall
xchg
and
insb
mov
pop
lock
das
jp
push
xor
pop
jo
adc
es
push
pop
mov
pushf
dec
test
inc
hlt
popa
adc
iret
mov
test
scas
or
in
sbb
dec
xchg
movsb
xchg
cmp
xchg
sbb
pop
mov
mov
add
call
xchg
push
dec
jb
mov
xchg
js
dec
jns
stc
inc
icebp
std
arpl
dec
fmull
push
or
repz
cmp
push
push
rcrb
push
data16
jmp
pushf
iret
lods
fstpt
push
fs
pop
shll
jno
push
mov
cs
mov
stos
inc
jmp
jecxz,pn
test
movsl
pop
sub
scas
adc
out
daa
nop
push
mov
cmp
loop
subl
sbb
negl
scas
outsl
jge
adc
or
negl
sub
pop
lcall
mov
fistpll
movsl
scas
xchg
sbb
movsb
cmp
inc
cmp
sbb
sub
and
leave
ret
sti
pop
data16
test
fimuls
imul
sbb
adc
test
xchg
in
pop
sub
popf
inc
cmp
dec
es
testl
push
sbb
fucomp
scas
popa
xor
adc
mov
stc
int
lock
sarb
test
push
ja
int3
negl
iret
mov
inc
popa
pop
fcoms
xchg
or
bound
add
mov
clc
rcrl
stos
cmovs
cmp
clc
aas
sbb
jecxz
xor
loopne
mov
mov
lahf
sbb
and
push
push
dec
js
push
call
fstpl
mov
push
cmp
bound
pop
test
iret
dec
push
loop
xor
sarl
xchg
and
iret
inc
icebp
xchg
lods
and
jno
sbb
lret
inc
push
negl
xor
mov
out
mov
test
push
push
and
mov
mov
scas
fstl
fisubrl
insb
jge
stos
ljmp
sbb
inc
aas
daa
pop
faddl
jbe
or
shrb
inc
stc
adc
outsb
sub
aad
sub
xorb
jbe
fcoml
lock
movsb
jl
fdivrs
in
jno
leave
sbbl
xchg
sub
add
leave
cmpsl
sahf
dec
rorb
push
js
pop
jl
and
xchg
das
add
mov
sub
testb
cli
aad
dec
inc
addr16
cmp
daa
and
fnsave
pop
out
scas
and
lahf
adc
les
test
test
cmp
inc
dec
jmp
dec
lock
and
dec
lods
add
aas
lret
jmp
in
pop
jmp
xor
mov
mov
aas
mov
sub
fimull
cmp
push
cmpsl
and
cmp
loop
pushf
dec
or
fcomi
xor
and
mov
fstl
push
xchg
andl
fcmovne
inc
fs
push
and
lret
cmp
dec
push
jge
ja
std
pop
sbb
and
xrelease
xor
or
ret
cmp
sti
xchg
or
out
repz
in
cmc
push
out
jmp
repz
lret
icebp
sarl
adc
ret
adc
push
pop
sbb
inc
lock
cld
jno
pop
rorb
and
mov
stos
mov
mov
cmp
loope
out
pushl
outsl
out
jne
jae
push
movsb
cmp
cmp
cmc
push
xchg
jae
pop
pop
jmp
aaa
adc
jbe
xor
push
or
add
xchg
dec
lods
adc
xchg
sub
js
jno
cmp
cld
out
in
ret
leave
sbb
mov
sbb
jle
bound
add
out
mov
int3
mov
lret
add
sbb
and
adc
ret
push
out
addr16
push
mov
xchg
data16
dec
scas
cld
lds
rorl
cmp
sub
add
adc
stos
call
sbb
scas
ja
cli
outsb
fisubrl
repz
push
rcrl
sbb
sbb
rolb
dec
gs
movsb
jle
push
xchg
pusha
mov
xor
jge
add
fsubrp
pop
shll
push
add
mul
imul
cld
jbe
dec
mov
cwtl
loop
bnd
js
faddp
and
xchg
jns
outsb
aas
outsb
psraw
cmc
repnz
push
add
or
sub
jne
mov
jge
or
loope
cmp
pop
clc
sbb
add
mov
insl
loopne
inc
aas
lods
sub
mov
rclb
call
shll
push
in
dec
sub
xchg
or
cmpsb
lods
add
in
push
test
cmp
cld
jb
sbb
daa
lar
inc
pop
mov
jne
dec
popf
aaa
jle
xlat
fwait
push
xchg
add
cmp
inc
xchg
xor
sub
and
jp
pop
mov
jo
inc
cmp
mov
in
mov
mov
cmp
pushw
jp
and
and
mov
mov
and
push
lock
into
loop
jmp
cmp
jecxz
cwtl
push
cmc
stc
mov
pusha
aas
push
mov
mov
mov
xor
sub
mov
cwtl
inc
daa
int
aas
lods
mov
inc
or
bound
jge
les
sti
cmp
xlat
imul
outsb
and
mov
dec
daa
jnp
shl
addb
inc
adc
inc
xor
movsl
adc
sti
sbb
push
jo
cmpsl
sbb
cmpsl
mov
xor
arpl
jo
inc
jno
add
jmp
cmp
clc
dec
xchg
iret
addl
repnz
sbb
loope
adc
rol
lret
push
mov
adc
sbb
gs
mov
jl
imul
add
add
jmp
out
add
out
test
inc
jne
xchg
xchg
push
sbb
movsb
inc
fucomip
cmp
insl
pop
push
ljmp
push
pop
fisubs
pop
mov
sbb
push
in
cmp
push
sbb
mov
mov
dec
mov
jge
adc
pop
cmp
sub
pop
jge
mov
cmpsb
outsb
xchg
ret
cs
enter
ffree
jns
std
pusha
sbb
push
mov
hlt
test
fisttpll
fwait
push
lods
aas
xor
sar
shrl
test
ret
test
push
adc
sub
push
call
inc
outsl
lret
mov
sti
jge
insl
pop
push
loop
push
fcmove
mov
add
add
xlat
push
jne
call
lahf
mov
clc
dec
out
adc
scas
sahf
xor
popf
add
jmp
div
mov
inc
cmpsl
cmc
pop
push
lock
addl
cli
aam
scas
iret
push
add
in
jb
xor
sbb
or
pop
hlt
jmp
cmp
inc
push
hlt
push
mov
sahf
rcrb
push
in
or
stos
stos
dec
dec
test
xlat
push
fyl2xp1
mov
dec
add
mov
pushf
fdiv
ret
mov
mov
outsl
jmp
das
loopne
sub
dec
test
test
sub
mov
and
or
inc
or
adc
pop
jle
movsb
movsb
push
jmp
or
popf
lock
jge
push
xor
inc
popa
jp
loop
xchg
icebp
push
pop
pop
cltd
inc
pop
sub
adc
jbe
push
popf
test
pusha
imul
mov
mov
jno
andl
pop
cli
inc
adc
xor
fisubrl
out
mov
xchg
cld
push
mov
in
pop
xor
mov
push
sti
mov
loope
lahf
inc
bound
repnz
je
andl
ljmp
mov
shlb
lds
loopne
ret
mov
repnz
mov
inc
mov
stos
iret
push
add
aaa
push
dec
mov
fsts
xchg
mov
ljmp
rep
mov
rorl
movsl
mov
and
test
push
sub
mov
xchg
jns
jl
inc
enter
ljmp
mov
lods
lods
jp
clc
sub
fstpt
lods
jb
pop
lret
mov
dec
or
mov
mov
jo
mov
aad
jp
ret
mov
mov
push
aam
jne
fistl
out
arpl
fdivl
pop
cmp
xchg
jmp
dec
les
cmp
ret
dec
insl
lcall
xchg
out
bound
lds
inc
xor
insb
les
je
dec
jl
test
and
mov
outsl
push
mov
mov
loope
mov
outsb
xor
jbe
mov
gs
pop
dec
and
sub
mov
adc
jae
adc
push
xor
sbb
imul
xchg
faddp
jmp
or
add
imul
stos
fisubrs
add
les
adc
movsb
pop
sub
and
push
popf
ret
jge
dec
pop
std
or
fistpl
xor
fisubrs
mov
icebp
fimull
lcall
addb
xchg
jbe
mov
xlat
jle
dec
cmp
push
mov
jecxz
out
test
sub
inc
xor
lods
push
jecxz
nop
dec
and
inc
xchg
jb
or
push
xor
ret
lock
fidivrl
ret
jo
stc
enter
inc
aad
aam
dec
adc
lcall
aaa
or
adcl
js
aas
and
or
les
daa
jmp
push
call
je
sahf
add
mov
xchg
sub
cmc
push
fs
fidivrs
sub
dec
pop
mov
subb
and
and
xchg
jmp
and
movsb
xchg
sub
fwait
pop
sub
adc
arpl
dec
imul
xchg
stos
roll
ds
xchg
subb
jle
outsb
lods
pushf
lods
negl
movsb
sub
mov
xchg
cmpsl
in
jmp
mov
pop
mov
fcompl
jb
mov
enter
mov
jns
jp
aas
push
jge
inc
adc
ret
rol
jb
dec
stos
lret
mov
call
cmpsl
lea
pusha
push
pop
lret
inc
nop
adc
adc
js
pop
stc
bound
mov
rclb
frstor
int3
out
pushl
imul
mov
lock
add
testb
push
push
mov
fstl
jnp
nop
iret
or
cmp
pop
scas
std
sarl
xor
dec
sub
push
ds
out
jmp
pop
out
jnp
sbb
inc
insb
ljmp
jmp
into
movsb
mov
inc
xor
xchg
int3
and
mov
enter
jmp
xchg
sub
flds
test
les
js
sub
jb
lods
clc
jb
push
push
aam
push
and
jmp
and
xchg
rcrb
jae
call
sahf
fldt
push
mov
cmp
aaa
dec
adc
insb
mov
test
imul
pop
cwtl
nop
sbb
mov
push
ss
jns
out
dec
test
sub
dec
cs
pop
xor
add
or
pop
inc
jle
mov
mov
aaa
push
cltd
cwtl
movsl
mov
xchg
mov
cs
cmp
jp
imul
iret
stos
aad
imul
int3
push
rcll
mov
enter
cwtl
in
sbb
imul
cld
aam
and
xor
add
ficompl
xchg
mov
clc
fidivrl
adc
in
or
clc
dec
jge
pusha
or
insl
xchg
dec
pop
ja
mov
notb
mov
out
ret
scas
dec
std
cmpsl
int3
cmp
cld
push
out
das
mov
sbb
out
jp
lahf
push
test
mov
adc
lds
mov
fs
lahf
cmp
add
loop
sub
pop
mov
les
int
in
mov
jmp
scas
cmp
cmp
jl
cmp
pusha
add
mov
pop
test
andb
aad
gs
inc
fs
sub
dec
int3
cmp
fstpl
inc
cli
lock
push
repnz
stos
pop
sbb
inc
imul
jmp
xchg
add
mov
rol
rcll
sbb
and
sbb
and
lock
adc
inc
aam
mov
add
dec
or
sub
push
lahf
push
dec
xchg
mov
out
cmp
cmp
inc
mov
push
ret
push
test
ja
je
xchg
fisubl
mov
movl
add
sti
int
lret
push
dec
mov
xor
das
in
in
aam
mov
test
aad
and
cmp
push
mov
stos
test
sbb
jo
hlt
daa
movsb
push
in
adc
jecxz
fcmovnb
lds
ficoms
movsl
inc
jbe
orl
pushf
jne
push
xorb
xchg
ja
insb
mov
ljmp
loopne
ret
mov
jl
icebp
and
push
lock
add
pop
mov
pushf
dec
mov
test
call
cld
lcall
movsb
psubsb
das
js
xchg
hlt
mov
jp
sbb
sub
sub
dec
jbe
add
mov
lods
pop
in
imul
jne
inc
scas
popa
call
fs
in
stos
mov
push
mov
cltd
cmp
adc
stos
js
xchg
cld
xor
lahf
push
stc
fiadds
mull
push
cld
push
jle
int3
mov
bound
cltd
fbstp
add
div
jbe
test
nop
inc
mov
inc
out
test
fmull
jbe
mov
pop
mov
ljmp
outsb
in
push
push
sbb
add
ds
and
sbb
in
jg
lcall
imulb
fisttps
push
scas
xchg
cmc
lea
popf
arpl
lcall
ds
aad
cmp
popa
xchg
pushf
roll
dec
mov
jle
pop
push
push
in
dec
ja
out
mov
sub
inc
sbb
dec
mov
pop
mov
rcrl
mov
xor
mov
adc
and
lcall
imul
mov
adc
out
and
je
ss
mov
int3
adc
mov
mov
jecxz
scas
push
sahf
add
jb
shrl
loopne
pushf
cmp
mov
stos
ret
stos
adc
add
fcomi
mov
lret
mov
std
mov
popf
mov
mov
dec
mov
mov
in
push
cmp
enter
or
jae
jle
dec
or
aad
mov
loopne
sbb
or
sub
push
dec
clc
dec
fwait
test
cli
cmp
mov
leave
mov
enter
mov
jl
adc
and
mov
push
push
xor
or
jb
les
mov
jge
push
fbld
xchg
mov
sti
stos
push
mov
xchg
in
mov
xchg
mov
sub
lcall
out
outsb
push
std
inc
and
call
jge
xchg
jns
inc
cmp
sbb
and
sbb
and
inc
inc
mov
xlat
rcrb
fwait
adc
stos
xchg
sbbb
xchg
and
dec
das
outsb
clc
pop
fiaddl
add
cltd
sbb
movsb
test
inc
lret
dec
orl
mov
xor
aas
dec
mov
sub
ret
pop
movsb
mov
lret
fs
sub
sbbl
mov
stos
stos
push
in
lea
dec
movsb
mov
mov
test
sub
mov
push
lret
adc
cltd
xchg
push
sub
sub
insb
aaa
push
jno
pop
xorb
dec
adc
daa
cs
pushf
mov
scas
xchg
pushf
mov
push
icebp
push
push
pop
lret
loope
mov
call
mov
mov
xor
fs
das
add
cmpsb
sub
in
mov
jnp
clc
outsb
lcall
adc
sti
jge
pop
jge
out
add
loop
and
and
cmp
js
jle
mull
inc
lods
jecxz
mov
std
enter
push
data16
mov
pushf
lods
add
xchg
mov
movnti
fisubrs
inc
frstor
aaa
xchg
fdivrl
cltd
mov
sbb
faddl
ror
sub
cmp
call
add
jmp
pop
xor
mov
lds
call
rcrl
xchg
inc
stos
pop
test
xchg
imul
and
ds
mov
insl
decl
push
aaa
or
movsl
push
clc
push
adc
inc
mov
stos
jns
shll
out
leave
cmp
cmp
cmpsb
cmp
add
sar
jae
and
sub
xchg
cltd
in
test
jl
pop
andl
mov
dec
repnz
dec
mov
dec
test
les
cmp
pop
rcll
filds
jle
jo
cli
sbb
loopne
add
mull
movsb
jmp
pusha
inc
pop
adc
scas
push
mov
dec
sbb
pusha
dec
sub
mov
aad
ljmp
out
jl
mov
fwait
mov
push
cmp
je
cmp
sub
xchg
mov
out
xchg
test
test
in
inc
mov
xor
pusha
cmpsl
aam
mov
sbb
push
inc
mov
fdiv
sub
test
push
imul
and
lcall
xor
aam
mov
cs
mov
pop
sarb
shrb
cltd
inc
and
hlt
mov
cld
mov
lock
push
arpl
dec
cld
pop
sbb
xchg
js
lcall
in
arpl
xor
mov
loopne
mov
jbe
pop
mov
lcall
adc
std
xorb
sbb
xchg
pop
gs
add
decl
popa
cli
mov
std
mov
lret
pop
and
xor
lahf
and
cwtl
pop
pop
stc
xor
mov
sub
data16
and
xor
sbb
mov
and
add
mov
adc
lret
and
cmpsb
xor
push
lock
daa
add
or
push
mov
call
nop
push
inc
mov
mov
pop
hlt
movsb
dec
addl
out
sarl
mov
in
sub
nop
roll
aam
xchg
shll
and
xchg
jle
push
sub
xchg
inc
nop
adc
sbb
dec
les
xor
lea
cmp
mov
out
mov
lea
nop
inc
repnz
and
dec
loopne
sub
mulb
lcall
or
fiadds
jle
lahf
cmp
aam
out
fstps
fists
andl
frstor
lret
rcrb
add
int
cltd
sub
std
add
cltd
int
test
mov
mov
inc
in
popa
jb
popf
out
arpl
shrl
jg
ss
push
xor
sahf
in
push
push
mov
mov
xor
cld
mov
lds
mov
pusha
sti
insb
pop
pusha
test
push
xchg
fdivs
sbbl
fdivrp
sbb
pop
dec
adc
mov
or
es
inc
mov
or
sbb
cli
push
pop
orl
push
add
stos
mov
mov
sbb
dec
sub
mov
or
test
push
data16
push
inc
fwait
inc
sbb
inc
mov
mov
dec
test
mov
xor
insb
fcomps
stos
and
add
inc
loopne
aad
ds
and
int
pop
push
scas
jo
sti
pop
int3
scas
and
or
mov
jo
std
and
pop
lahf
das
pop
mov
repz
ljmp
dec
cmp
push
je
jb
adc
cmp
cwtl
orl
insl
add
movsl
dec
inc
jo
imul
arpl
mov
cmp
or
lds
xor
fdivl
mov
cld
mov
pop
icebp
dec
and
sbb
push
cmp
fnstenv
mov
adc
push
cmpsl
mov
repz
jecxz
neg
mov
dec
ds
hlt
insw
add
or
pop
cmpsb
xchg
push
mov
mov
in
push
lods
lock
xchg
cmp
inc
sti
mov
fiaddl
unpcklps
jecxz
adc
pop
cmp
jne
cmp
lods
and
stc
pop
mov
push
jmp
inc
rolb
mov
dec
mov
cwtl
loope
lods
pop
popl
test
adcb
fwait
sub
jno
jp
sti
push
scas
mov
or
rorl
cmpsb
cli
fdivr
in
mov
dec
xchg
test
notb
idivb
mov
cwtl
push
xor
mov
test
js
fistpl
adc
inc
call
faddl
lock
mov
addr16
and
scas
sbb
rep
pop
orl
mov
lods
ja
out
add
daa
pop
fcomip
mov
rcrl
lods
pop
daa
movsb
hlt
jne
xchg
push
aaa
ja
mov
sbb
popaw
add
int3
je
xor
or
imulb
fs
outsb
insl
fcmovb
stos
or
jb
mov
fldenv
clc
lock
xchg
xor
loope
cltd
or
dec
mov
cmp
pop
xchg
addl
test
cmp
mov
jmp
shlb
push
out
ja
imulb
dec
inc
pop
add
addr16
cli
rorb
pop
lcall
lds
in
outsb
adc
scas
jecxz
pushf
push
push
add
stos
in
int3
cmp
push
xchg
sub
test
daa
add
cli
or
pop
ret
inc
mov
cmp
repnz
nop
cmc
fsubrs
jnp
clc
jle
mov
xchg
addl
inc
imul
das
xor
jo
enter
mov
jl
fldcw
sub
mov
xchg
fucomi
mov
idivl
dec
rcll
repnz
mov
or
das
out
push
lret
cmpsb
xchg
sbb
and
push
mov
jmp
add
pop
sti
inc
mov
clc
mov
aam
mov
xlat
pop
push
stc
std
loopne
xor
cmpsw
mov
shlb
add
outsl
sbbl
sbb
inc
and
mov
imul
scas
roll
cltd
sbb
jp
out
add
add
rol
sub
xor
enter
roll
pop
lods
bound
cwtl
gs
outsw
dec
sub
loopne
outsl
sub
rclb
jnp
addr16
loop
sbb
addb
sarb
adc
mov
xor
das
fs
ljmp
aas
ret
jge
mov
outsl
out
fs
jge
fdivs
repnz
out
pop
fwait
roll
enter
mov
add
dec
inc
sub
inc
pop
mov
movsb
cwtl
push
adc
loopne
push
incb
mov
fidivrs
jno
pop
js
insb
dec
clc
and
bound
and
jge
cmp
out
fisubs
push
sahf
xchg
mov
push
leave
sahf
sub
scas
ja
pop
test
daa
test
cltd
and
push
in
loope
jns
xchg
fcmovnbe
lret
pop
mov
mov
push
pop
xor
mov
sbb
mov
push
outsl
hlt
cltd
mov
mov
push
add
dec
lret
jno
in
arpl
xchg
mov
mov
mov
hlt
pop
adc
push
pop
stos
cmpsl
test
pop
std
fstpt
out
icebp
shll
xor
popw
mov
int
sub
fidivrl
inc
sub
insb
leave
pop
xchg
gs
gs
jb
movsb
shrl
cmpsl
bound
inc
je
dec
ds
dec
out
lods
test
push
push
adc
insl
int3
leave
pop
enter
cmp
int3
cli
imul
daa
in
rol
ret
jo
jge
push
js
ds
in
sti
push
add
out
subb
loopne
popf
sub
scas
xchg
push
mov
xchg
out
sahf
aad
rcrb
mov
dec
mov
push
imul
popa
fiaddl
out
les
ljmp
popf
out
enter
jb
loope
jge
add
sub
inc
dec
adc
jae
mov
mov
inc
iret
sahf
mov
or
popf
add
cmp
push
jo
push
setge
or
subl
fidivs
rol
adc
ds
cmpsl
cmp
xor
jmp
inc
lock
movhps
pop
cli
pop
inc
inc
push
nop
jle
sbb
mulb
fucomp
mov
cmp
scas
dec
loope
in
cmpsl
movsb
add
roll
mov
xor
out
sub
inc
push
mov
out
push
pushf
pusha
cwtl
sub
adc
or
mov
pop
push
or
in
mov
add
mov
adc
mov
inc
or
ror
cmpsl
or
jge
sub
jo
std
test
in
cwtl
out
aad
lds
rcr
xchg
mov
jbe
ss
adc
movsl
repz
mov
stos
outsb
push
idiv
jecxz
mov
cmc
cmpb
fcmovnb
enter
cmp
mov
loopne
ds
push
xor
fsub
das
cmp
mov
xor
popf
out
and
and
push
in
push
mov
mov
popf
cmp
es
dec
inc
js
test
neg
pop
xchg
mov
cmp
jg
jns
nop
or
pop
ret
add
insb
insb
dec
out
mov
jbe
mov
subb
push
adc
icebp
imul
clc
movsl
movsb
or
xor
cmp
add
stos
stos
cmp
xchg
addr16
out
xor
sub
movsb
push
and
mov
adc
imul
inc
pop
ljmp
push
or
cmp
and
or
es
jg
stc
fiaddl
and
xlat
xchg
adc
sbb
stos
jmp
out
test
or
daa
lcall
and
mov
jne
xchg
mov
sbb
sub
int
mov
sbbb
pusha
lea
cwtl
clc
cmp
testb
lret
cmp
lea
ljmp
nop
push
add
test
jno
daa
push
and
mov
xor
mov
nop
dec
push
call
rcr
scas
sti
xor
or
mov
mov
jg
inc
mov
sub
sti
xchg
jne
rcll
mov
shll
cmp
dec
add
int3
aad
test
adc
and
daa
insl
lods
stos
ljmp
scas
enter
dec
mov
push
data16
add
cmp
incl
daa
push
insl
xor
inc
popf
and
inc
ja
sub
insb
nop
mov
jg
dec
jp
jo
cltd
mov
sub
or
push
mov
sti
and
or
sbb
mov
pop
push
push
ljmp
shrb
xorl
or
jecxz
adc
dec
jp
push
adc
fwait
addr16
fs
cmp
daa
push
dec
xor
dec
loop
or
adc
imul
sub
xor
cltd
test
pop
adc
mov
test
push
or
or
add
jp
test
mov
inc
inc
in
sbb
inc
aam
int3
into
push
xor
fistl
enter
rorl
mov
fwait
insl
or
cmc
mov
roll
movsl
lock
cmp
mov
mov
popf
dec
ja
push
cmc
or
stc
in
lods
add
cs
jne
inc
je
jno
and
cs
in
xchg
push
or
cmp
data16
cmpsb
mov
pop
stos
push
push
aam
cli
cmp
jb
andb
movsb
fs
mov
addl
outsl
xchg
hlt
lods
push
cmp
cmc
push
jo
push
aas
popf
hlt
add
push
dec
cmp
lds
jne
imul
into
divb
es
xor
stos
jno
in
xchg
shll
je
sub
jo
shll
push
inc
stos
add
xchg
daa
push
fdivrs
in
jecxz
dec
rorb
xor
jae
xor
repz
inc
inc
jle
mov
clc
xchg
push
sub
sti
subb
pop
daa
push
pushf
frstor
jne
shll
testl
cmp
inc
fdivp
pop
mov
std
adc
pop
mov
lret
cli
xor
or
js
daa
ret
test
mov
pushf
add
enter
movsl
add
mov
fcompl
ds
push
jae
sbb
push
dec
enter
fists
test
xchg
lods
fsub
sub
mov
mov
lret
sub
lea
xchg
lret
add
mov
cld
test
xchg
mov
cli
mov
bnd
jmp
and
pop
iret
fsubp
mov
dec
push
add
mov
jnp
adc
shll
dec
in
addb
mov
cmc
addb
sbb
in
and
cs
ret
push
insb
add
add
sbb
dec
ss
xor
or
mov
divl
movsl
cmpsb
in
mov
clc
push
or
mov
clc
cld
cltd
mov
ret
cmp
cwtl
xorl
gs
mov
hlt
cmp
inc
jbe
movsl
nop
pop
imul
cmp
jno
add
push
mov
testb
adc
lret
dec
adc
jmp
sub
mov
xor
pop
and
add
daa
and
gs
inc
ss
test
shlb
mov
sub
cmp
adc
dec
out
movsb
xor
adc
adc
mull
fcomi
cwtl
adc
dec
push
cmpsb
fs
pop
sarl
and
mov
lods
cwtl
test
cmp
and
push
inc
sub
mov
nop
inc
xlat
xchg
xchg
data16
in
popa
mov
inc
das
push
loopne
dec
jecxz
test
sbb
and
xchg
popf
call
cld
inc
divl
add
xchg
mov
mov
lcall
out
fistps
outsb
popl
xchg
iret
outsb
pop
cld
repz
and
movsb
or
jge
stos
jne
and
ss
xchg
push
dec
pop
xchg
mov
inc
sub
lds
push
ret
sbb
adc
mov
mov
inc
dec
jg
cmp
popf
and
jmp
out
xlat
mov
insl
pop
jp
les
stos
outsb
mov
jae
fs
outsb
xor
jl
xor
idivl
jmp
mov
orb
push
outsl
inc
sub
pop
jp
addr16
cmp
outsl
xor
movsb
xchg
inc
sahf
mov
and
pusha
in
test
xchg
rolb
adc
adc
cltd
insb
jb
adc
lcall
mov
sub
insb
test
ret
mov
inc
js
cmp
call
lds
or
jnp
pop
aas
std
mov
test
cli
adc
sub
sbb
imul
cwtl
lahf
sub
pop
mov
mov
js
or
mov
sub
pop
les
xchg
repz
xchg
inc
dec
sbb
rcl
cmp
daa
xor
ja
repnz
and
dec
repnz
jg
jne
add
xor
add
cmpsl
pop
movl
sub
mov
fcomip
jns
clc
mov
imull
fcoms
sub
adc
enter
push
mov
push
cmpsl
mov
cmp
lds
sbb
std
fists
mov
popf
and
shl
push
cwtl
add
xchg
and
add
fidivrs
jae
cmp
jae
fbstp
dec
push
arpl
clc
xchg
dec
push
mov
cmp
push
outsl
mov
mov
inc
cmpsb
nop
test
xchg
aaa
cltd
repz
stc
mov
mov
xor
sbb
out
pcmpeqw
lock
ds
pop
mov
testb
dec
pop
dec
push
mov
ss
int
mov
mov
pop
in
push
std
mov
push
mov
scas
push
add
inc
sbb
stos
add
outsb
mov
push
ret
xorl
sub
mov
jns
cmp
sub
hlt
fwait
fwait
decb
dec
aaa
push
mov
cli
and
leave
dec
sub
insb
cltd
jp
stc
jg
jo
mov
mov
pop
orb
imul
into
dec
and
adc
pop
jmp
lock
and
addr16
mov
pop
outsb
sub
sub
loop
fdivrl
xchg
idivb
testb
dec
stos
sub
lea
rol
arpl
adc
movsl
sti
shlb
scas
scas
call
push
add
push
test
lea
mov
cmp
mov
dec
adc
aad
aam
pop
xor
loope
call
dec
sbb
rcrl
leave
mov
jg
lea
idivb
dec
xchg
inc
mov
xchg
fimuls
outsl
dec
int
xor
pop
inc
dec
push
lock
nop
call
insl
jmp
int3
fstl
pop
push
cld
jno
mov
xor
rorb
add
pop
pop
jmp
rcrb
add
and
cmp
mov
loopne
sub
shr
push
fs
adc
inc
aas
push
orl
push
jbe
or
cmp
mov
lods
int
lret
jge
lods
adc
jl
pop
leave
popf
mov
and
pop
adc
cwtl
aas
add
xorb
dec
shrb
sub
and
mull
fadd
popa
or
sahf
push
or
test
fidivl
mov
jmp
inc
sbbl
jp
loopne
mov
jmp
adc
sub
sahf
fcoml
cs
nop
sbb
pop
scas
test
dec
add
test
popa
mov
add
cli
jae
stos
out
xchg
movsb
int3
jl
sbb
pop
iret
dec
cmp
adc
xchg
je
adc
lret
loopne
std
add
andl
lock
add
add
pop
cmp
xor
sbb
dec
lods
xor
outsl
lret
sbb
int
inc
push
lret
into
xor
movsb
sub
xlat
pop
and
mov
outsl
sub
loopne
pop
mov
mov
mov
dec
and
je
xchg
int3
pop
xchg
ds
dec
cmpsl
in
cmp
das
movsb
aaa
shrb
fiadds
lret
pop
dec
xchg
test
repz
push
sub
pusha
mov
jmp
add
mov
popa
imul
bound
sbb
arpl
or
in
in
lahf
push
sti
adc
cwtl
into
nop
lds
shrb
in
pop
icebp
or
shrl
jne
cmp
roll
ljmp
adcl
push
jae
mov
clc
jns
xchg
or
xor
add
jbe
pop
inc
sbb
sbb
stc
jl
sbb
mov
xchg
scas
mov
add
addr16
jb
cli
sub
or
xlat
shr
pusha
iret
mov
repnz
and
inc
xchg
jg
addr16
jae
ljmp
push
out
and
lds
lods
test
iret
xchg
test
stos
jge
push
decb
xchg
jns
sub
mov
add
mov
cmpsl
lret
mov
bnd
ljmp
je
mov
pop
mov
int3
mov
and
dec
pop
inc
mov
cli
fwait
out
cmp
inc
xchg
cmp
mov
mov
xchg
icebp
pusha
jecxz
sub
sub
lret
ljmp
subl
jp
out
outsl
inc
call
ret
mov
lcall
xchg
cs
add
mov
sub
sub
test
xchg
add
in
push
jno
and
xchg
pop
mov
loope
lret
loop
inc
sub
bound
enter
and
jb
xor
std
jle
pop
adc
mov
cmp
lods
imul
es
subb
dec
dec
adc
outsl
xchg
test
or
xor
sub
add
out
nop
cs
xor
lcall
scas
or
dec
inc
jge
scas
xchg
sbb
and
dec
push
inc
imul
cmp
pop
cmpsl
icebp
adc
push
jo
popf
cld
jge
add
hlt
xchg
ds
inc
test
jp
inc
out
sbb
stc
cmp
pop
inc
cmp
es
roll
jge
subb
pop
push
cmpsl
jno
pop
add
mov
push
push
enter
adc
or
push
scas
mov
jbe
mov
into
jmp
mov
sahf
and
fnstcw
xor
lea
pop
mov
xchg
popf
mov
push
out
pop
jl
xchg
mov
repz
imul
pop
add
mov
jne
dec
insl
pop
daa
pop
and
pop
pop
jns
xor
das
repnz
test
outsl
xor
sub
lods
jns
fcomi
push
inc
loope
lods
dec
je
sub
movsb
inc
jno
adc
mov
jno
out
js
and
dec
xor
fbld
xor
jle
pop
inc
jp
mov
adc
popa
test
push
mov
cmc
aaa
int3
cwtl
ljmp
subb
mov
mov
push
jge
mov
out
jle
fwait
loopne
sbb
in
outsl
jmp
bound
dec
sub
out
data16
rcll
sub
popw
mov
push
sub
push
loopne
bound
mov
lods
and
mov
mov
sub
jb
subl
in
push
setp
cwtl
mov
xchg
and
push
add
data16
outsl
push
add
imul
dec
and
movsl
mov
mov
lahf
fisttpll
xor
daa
outsl
movsl
sbb
jae
dec
fimull
out
jnp
cs
jns
sub
test
mov
loope
jg
push
testb
push
bound
cmpsb
xor
in
mov
cmp
loope
adc
test
jp
pop
mov
jge
mov
in
inc
ror
cld
adc
push
sub
cmc
or
jmp
cmp
ds
or
fadds
movsl
xor
xor
cmpsl
dec
push
xchg
push
mov
sbb
push
xchg
out
cli
test
mov
mov
enter
fwait
insl
add
fsubrs
lea
icebp
out
ret
loop
jnp
adc
sub
and
adc
shlb
or
pop
enter
mov
ficoms
out
jns
inc
push
and
fnsave
stos
push
and
mov
mov
pop
jecxz
mov
addr16
fwait
fwait
adc
and
pop
in
jns
lock
lahf
cli
std
in
sbb
jmp
mov
sar
cmp
movsb
aam
push
iret
cmpsb
gs
sub
bound
in
inc
in
pop
adc
push
imul
cmp
mov
pop
push
pop
cli
mov
rol
insb
mov
int
mov
adc
out
or
bound
sub
nop
mov
mov
into
mov
icebp
int
adc
mov
rcrb
pop
popf
and
gs
mull
out
xchg
xchg
push
jns
dec
pop
jne
pop
xor
jns
add
cmpsb
fisubl
adc
push
ds
pop
and
in
xchg
imull
es
imul
inc
hlt
cmc
fwait
sub
nop
pop
ds
daa
jg
jae
xchg
adc
iret
xor
adc
pop
mov
fisttps
mov
push
xchg
out
mov
or
shrb
mov
xchg
out
mov
into
xor
test
movsb
jle
movsl
inc
movsl
fnstsw
movsb
adc
or
and
mov
xchg
or
sub
add
cmp
je
mov
out
leave
je
xor
bnd
fmull
xlat
fwait
adc
pop
push
bound
jle
scas
xchg
in
or
inc
push
mov
into
sbb
mov
mov
mov
cli
mov
cmpsl
jns
dec
fidivrl
sbb
adc
mov
repnz
sbb
andb
fimuls
pop
push
sbb
aaa
out
mov
sbb
adc
cmpsl
btc
rcrb
outsl
mov
cmp
pop
xor
enter
adc
sarl
lret
xchg
aam
dec
adc
sbb
cmpsb
xor
lock
jbe
into
cwtl
pop
pop
jne
call
push
int3
or
jmp
in
mov
adc
inc
mov
mov
ds
mov
nop
xchg
jmp
push
scas
idivl
call
arpl
into
mov
out
loopne
cmp
and
mov
mov
gs
popa
jmp
loop
imull
mov
insb
jle
outsl
stos
jp
pusha
pop
jne
enter
add
stos
jb
dec
adc
dec
testl
cmp
outsl
fdivrl
pop
dec
fwait
mov
sbb
mov
xchg
lds
iret
sbb
lret
push
pop
imul
xchg
test
lret
test
xchg
fistps
out
add
nop
mov
mov
dec
pop
xlat
mov
add
popa
int3
lods
sahf
out
and
mov
stos
xchg
repnz
dec
stc
dec
jecxz
addb
icebp
bound
xor
jne
fcoml
sbbl
shll
push
pop
sysret
lret
push
or
cmp
sub
js
std
fwait
dec
or
mov
mov
inc
push
xor
xchg
clc
leave
movsb
and
mov
adc
jne
sub
add
pop
test
pop
mov
add
xor
and
jno
add
jmp
repnz
dec
imul
inc
cli
mov
pop
add
out
push
insl
test
xchg
sti
jg
adc
int3
or
pop
imul
xchg
mov
xor
stos
adc
insb
divl
add
loop
rorb
mov
dec
pop
sti
jb
js
sbb
and
je
shlb
jbe
repz
ljmp
mov
xchg
addl
jp
inc
mov
leave
dec
lcall
dec
xchg
xchg
xor
repz
sub
pop
imul
int
lret
popf
mov
out
sub
push
push
je
fwait
mov
lods
add
pusha
jbe
push
jge
bound
xchg
imul
mov
xor
adc
mov
test
adc
sahf
inc
mov
mov
loopne
ret
cs
daa
dec
ret
sti
xchg
add
icebp
cmp
bound
inc
sbb
mov
xchg
cltd
mov
push
mov
int3
xchg
imulb
pusha
ljmp
dec
inc
bound
sarl
mov
pop
int3
in
lret
dec
ror
scas
xor
ret
inc
inc
inc
xor
cmc
dec
les
mov
sbb
xchg
mov
imulb
int
xchg
std
sub
icebp
out
arpl
jecxz
mov
xor
sbb
add
pop
jl
push
inc
xchg
pop
ja
cmpsl
push
dec
adc
adc
jo
and
push
sub
cmpsl
jl
add
mov
jb
rcr
iret
aad
lea
xlat
push
inc
adc
cmp
pop
lods
cmc
push
inc
push
test
popa
or
cli
rcrl
adc
dec
xor
das
sub
jg
ljmp
mov
or
adc
pop
cmpl
inc
leave
cli
lea
mov
add
xchg
pusha
aad
test
xor
adc
pusha
insb
cmpsl
cli
pop
gs
push
es
mov
mov
insb
xor
outsb
xchg
repz
dec
push
push
call
push
xlat
lds
stos
cmp
add
dec
int
movsl
pop
mov
addb
add
mov
loop
lcall
inc
pop
inc
or
fistpll
outsb
insl
bound
push
leave
xor
push
cmpb
pop
stos
ds
lret
and
sbb
pop
stos
mov
bnd
arpl
rcrb
pop
add
xchg
sub
push
cmpsb
dec
iret
lret
sbb
jl
lret
dec
adc
fs
loope
andl
lods
mov
ja
sub
aad
ret
xor
popf
mov
xchg
in
sub
inc
stc
mov
clc
insb
js
ljmp
enter
inc
pop
jnp
rcl
fists
inc
jns
popf
loop
int
arpl
mov
sahf
sub
inc
pop
inc
jmp
movsl
sbb
out
out
jp
sbb
mov
mov
ds
scas
inc
test
pop
and
test
jnp
fdiv
xor
add
xor
push
addr16
rclb
mov
ja
mov
add
dec
arpl
shll
mov
mul
subl
or
movsb
jmp
and
cmp
aam
sub
out
int
inc
enter
and
mov
push
gs
mull
sub
jmp
cmpsb
cmp
adc
mov
and
xchg
fcmovu
stc
cmp
mov
stc
add
xchg
out
cmp
out
fbstp
and
push
outsl
or
lock
mov
sbb
loopne
mov
add
lret
xor
mov
lds
test
cmpl
mov
xchg
xor
inc
stos
rcll
aad
fstps
inc
aam
xlat
popf
push
xchg
pop
pop
jge
mov
xchg
lock
negb
xchg
push
out
pop
mov
repz
daa
int3
jg
pop
sbb
pop
inc
mov
pushf
pop
hlt
cld
mov
out
addr16
or
push
sbb
mov
fidivrl
mov
push
cmpsl
jmp
loop
cmp
lcall
or
inc
popa
cltd
mov
daa
mov
loop
sbb
cmp
push
fidivl
and
mov
mov
mov
test
jbe
movsb
sbb
inc
dec
or
sub
imul
jge
pop
inc
test
repz
inc
xlat
movsl
movsl
sub
ficoml
adc
xor
cli
mov
lret
cs
xor
lods
mov
jl
jne
push
pop
mov
adc
in
xor
cmp
lods
jle
fisttps
sub
mov
jp
cmp
cmpsb
inc
sbb
push
aas
jmp
xchg
pop
mov
in
loope
mov
mov
lds
sub
or
jge
dec
pushl
push
lds
addl
dec
and
ss
dec
sbb
arpl
cmpsl
ret
xor
ret
add
xor
mov
jl
adc
out
xlat
clc
insb
and
testb
fst
cmp
fst
push
mov
cli
cmp
xor
in
popf
addr16
add
mov
xchg
out
outsl
jecxz
xchg
cld
mov
sbb
lret
and
aad
rcrb
lret
inc
imul
mov
int
in
jbe
xor
pop
and
and
xorb
movsl
enter
je
shlb
faddl
adc
lcall
popf
ret
pop
push
inc
jb
push
lret
cmp
cmp
hlt
movsb
test
dec
add
mov
popa
push
stc
push
inc
or
lds
ja
ss
sbb
pushf
sbb
mov
sbb
cltd
pushf
pushf
daa
mov
out
jg
push
cwtl
cwtl
and
pop
push
pop
cmp
xacquire
adc
pushf
xlat
mov
pop
outsb
push
adc
shll
psubusb
adc
and
sbb
aad
fidivrl
sbb
imul
ljmp
sbb
mov
out
jnp
dec
js
fdivs
push
sub
fsubrs
jle
cmp
or
mov
imul
sbb
call
adc
pushf
ja
dec
rol
shll
cltd
xchg
add
out
sbb
clc
add
lods
daa
ljmp
xlat
push
cmpsl
lcall
stos
xor
xchg
inc
jmp
adc
gs
or
push
inc
xchg
or
popa
bound
pop
or
in
scas
sbb
test
jge
loope
rcl
call
push
lock
lods
repz
jo
adc
lret
call
sbb
mov
shr
scas
push
add
pop
push
dec
mov
mov
lahf
xchg
xchg
ret
adc
addb
pusha
int
or
aaa
das
scas
mov
lret
push
push
sbb
lret
push
fsts
mov
repz
test
push
mov
repnz
mov
pusha
enter
scas
mov
adc
clc
in
mov
daa
push
inc
popf
add
sarb
es
sbb
movsb
pop
mov
lret
sub
push
negl
scas
cmp
imul
out
fdivrs
xor
cmp
mov
lods
add
push
mov
das
pop
push
filds
and
scas
sbb
gs
sbb
pop
inc
aaa
xchg
push
xorb
xchg
pop
je
test
negl
push
arpl
cmpsb
loope
mov
xor
jmp
movsb
xchg
lret
in
enter
enter
push
lea
pop
sub
jnp
out
icebp
cmp
cmp
adc
scas
bound
adcb
xchg
pop
jl
pop
inc
clc
pop
int3
adc
icebp
adc
inc
mov
xchg
mov
into
stos
dec
xchg
pusha
or
aaa
or
inc
cmp
cmp
and
push
xchg
test
sahf
sbb
dec
in
int
movsb
xchg
push
cmp
push
xor
ret
mov
jnp
int3
test
and
inc
pop
sbb
in
jb
scas
and
jmp
or
xchg
mov
mov
shlb
aam
das
data16
pusha
lods
xchg
sub
aaa
jb
cmp
daa
imul
push
lods
aas
dec
mov
adc
mov
js
flds
pop
or
iret
adc
push
add
inc
test
mov
mov
test
adc
stos
mov
scas
sbbl
or
push
dec
xor
push
test
ds
xchg
xchg
test
aam
mov
xor
or
fists
stc
push
xchg
lahf
jno
rolb
pop
popa
adc
test
cmpsb
sub
ljmp
jnp
inc
shl
les
pop
lods
and
cmp
dec
dec
sbb
and
cli
push
data16
call
xchg
int
sbb
aad
cmpsb
mov
push
adc
push
sub
cmp
iret
mov
cld
sbb
ds
cs
mov
mov
push
mov
push
aam
ss
pop
loopne
in
sbb
jg
lret
and
ds
xchg
cmc
mov
daa
cs
mov
fsts
lea
dec
es
xchg
es
or
dec
fcompl
and
pop
sbb
lods
inc
popa
imul
nop
arpl
mov
push
arpl
mov
mov
clc
add
push
pop
mov
push
js
leave
inc
test
aas
inc
xor
cmc
aaa
imul
sarb
mov
mov
cmpl
mov
fistl
adc
lods
into
fwait
xchg
nop
cmp
andl
jp
mov
outsl
roll
xor
or
xchg
sbb
xchg
mov
scas
adc
out
out
lahf
push
arpl
jbe
cmp
push
in
dec
xchg
pop
xchg
test
dec
push
fxam
inc
dec
data16
cmp
or
fsubl
inc
inc
inc
xchg
xchg
pop
pushf
lock
cmp
jmp
mov
xor
inc
inc
bound
add
and
mov
push
push
or
mov
push
push
mov
pop
xchg
mov
arpl
pop
sbb
pop
leave
jne
sbb
mov
enter
push
dec
shll
test
test
fs
xor
pop
xlat
jge
fdivrs
inc
jmp
dec
movsb
addr16
mov
data16
jecxz
dec
inc
add
cmp
sub
and
add
push
leave
xchg
pop
push
sub
xor
cmp
push
mov
cmpsb
mov
cmp
cmp
enter
cmc
clc
pop
pop
xlat
in
sub
fcmovnb
mov
in
sub
and
cs
mov
push
cmpsl
push
adc
mov
mov
shll
test
mov
sets
lea
aam
or
or
pop
and
lods
push
mov
pop
sub
mov
mov
mov
xchg
pop
mov
repz
and
pop
mov
jge
mov
mov
adc
mov
jmp
inc
ret
cmp
movsl
xchg
in
mov
aaa
push
add
xor
in
lahf
lret
rcll
sbb
or
xchg
hlt
movzwl
icebp
inc
and
and
insl
xchg
jb
lcall
clc
repnz
subb
push
dec
push
push
stc
jo
jp
incb
jns
push
fstps
mov
pop
add
jb
push
jp
mov
xor
and
iret
lret
and
test
test
imul
add
cmp
lock
incl
sbb
cmpsl
or
jnp
hlt
imul
aam
add
aam
mov
mov
xchg
mov
pop
mov
xor
fucomi
and
out
cmp
inc
pop
data16
lea
and
out
cmp
push
test
int
iret
xchg
imul
cmp
jmp
pop
mov
mov
push
sub
sarl
insl
adc
jb
add
icebp
push
call
aaa
push
test
insl
dec
pop
jp
daa
lcall
testb
inc
mov
jo
jbe
es
ja
push
adc
jbe
test
fisubrs
fs
cmp
addr16
in
add
dec
aad
jb
notl
bound
loope
test
inc
add
cmpsb
in
aad
xor
leave
sbb
jle
out
mov
outsb
pop
cmp
mov
mov
mov
vsqrtpd
rcll
loop
xchg
aam
rcrl
das
cmp
sub
fcoml
cs
mov
fstpt
pop
adc
jae
fwait
lea
arpl
pop
jle
rcl
push
imul
outsb
loopne
ja
ss
bound
pop
jle
out
mov
lret
sbb
lret
push
cmp
cwtl
mov
mov
shl
xchg
xchg
ljmp
pop
xchg
sub
in
das
jecxz
dec
pushf
scas
and
or
sbb
rcll
xor
cmpsl
imul
test
out
mov
cmp
pop
xchg
adc
mov
mov
dec
mov
push
xchg
adc
in
lret
push
push
iret
lea
stos
adc
adc
mov
sahf
adc
popf
out
fmuls
lea
xchg
push
cmp
sbb
sbb
aas
cmpsl
or
xor
push
xchg
aaa
frstor
in
jl
fisubl
hlt
mov
pusha
xor
push
adc
imul
orl
in
xor
testb
in
inc
add
mov
and
aas
mov
js
sahf
stos
jge
cli
mov
test
mov
xor
incb
adc
sbb
cli
and
inc
mov
aas
scas
xchg
stos
adc
push
pop
mov
mov
pop
lds
mov
push
fmuls
gs
fisttps
push
xchg
inc
int
insb
lods
scas
sub
xchg
ret
or
test
dec
inc
test
add
mov
sub
daa
iret
testb
lcall
mov
xchg
adc
rcr
sub
jge
aas
cli
mov
mov
push
les
scas
add
xor
and
mov
sbb
arpl
cmc
rolb
roll
or
cmp
mov
data16
xor
rolb
cmp
push
cmp
lcall
mov
mov
cs
jb
call
push
sti
mov
mov
sub
inc
cld
std
int
push
mov
fwait
jbe
es
push
mov
pop
testl
scas
add
sub
inc
add
enter
ficoms
andb
add
clc
daa
cmp
mov
pop
push
mov
mov
outsb
cld
fs
xchg
jo
mov
adc
loopne
xor
mov
in
into
inc
and
stos
xor
sbb
jb
push
sub
dec
sub
or
jmp
hlt
js
inc
sahf
mov
push
pop
hlt
into
sti
lcall
jecxz
lods
push
sti
sub
jne,pt
cmp
loop
movsl
aam
movsl
filds
lds
pop
les
mov
add
jno
push
mov
xchg
mov
call
lods
jmp
les
out
aaa
stos
push
pushf
dec
out
sbb
sub
inc
mov
loop
repnz
in
push
pop
jecxz
jmp
adc
dec
dec
shrl
pop
loope
mov
inc
lea
fwait
out
inc
sbb
rolb
or
xchg
sub
pop
aas
and
sbb
popa
insl
add
ret
mov
mov
cmp
dec
ljmp
sbb
test
paddsw
lret
mov
push
sbb
pop
aaa
jno
loopne
rolb
jno
je
lods
nop
out
xor
xchg
push
popf
adc
cmpsl
add
mov
ret
and
icebp
scas
mov
enter
loopne
mov
inc
or
stos
sti
adc
sub
xchg
shl
mov
pop
mov
shll
fnstsw
test
clc
dec
fimuls
test
sub
test
or
gs
enter
push
xlat
fs
xchg
xchg
xchg
cltd
movsl
sub
mov
mov
cli
and
jmp
scas
push
std
inc
movd
sarl
pop
cmp
push
xchg
mov
jmp
pop
and
jecxz,pt
mov
je
pop
iret
inc
popf
loopne
mov
push
sbb
aad
les
pcmpgtb
xor
enter
aas
repz
jno
mov
push
jno
push
inc
inc
mov
jns
mov
movsl
dec
ficoms
mov
mov
sub
icebp
aas
dec
and
sbb
xchg
mov
adc
inc
sti
and
int
cli
adc
psubq
cwtl
gs
mov
jmp
nop
loopne
cltd
and
insb
jo
movsb
mov
popf
mov
call
mov
loope
mov
xchg
inc
push
cmp
xchg
add
push
sub
pop
es
pop
pop
in
push
jne
into
test
cmpsb
pop
es
movsl
sub
mov
ljmp
sbb
gs
aaa
shll
leave
mov
fdivrl
mov
test
in
jge
out
xor
and
mov
mov
movsb
jmp
mov
out
lea
in
push
pop
in
mov
dec
add
jl
jbe
cmp
xor
mov
int3
jb
mov
and
lock
mov
outsb
mov
hlt
insl
out
xchg
dec
fdivl
mov
incb
rcll
mov
mov
iret
sarb
lahf
xchg
or
subl
dec
dec
shll
loopew
mov
imul
xlat
jge
jo
mov
cmpsl
pop
pushf
inc
xchg
lret
inc
sti
mov
stos
xchg
mov
mov
push
or
aaa
lcall
adc
aaa
aaa
sub
xchg
mov
or
push
sbb
js
adc
iret
mov
or
enter
in
or
popf
mov
aaa
rcrl
js
lea
add
sbb
test
sbbl
and
cmc
xor
das
pop
mov
xor
neg
dec
mov
pop
xchg
inc
dec
out
enter
or
in
push
ljmp
test
cs
pop
sbb
adcl
cmp
popf
push
pop
imul
rol
mov
imul
loopne
cmc
hlt
cmp
dec
mov
cmp
fisttpll
cmp
add
lods
lahf
lret
push
xorl
out
mov
mov
cmp
mov
lcall
mov
add
mov
cmp
push
stc
or
test
loop
iret
sbb
fcomip
dec
stos
push
dec
mov
xchg
cmp
stc
pop
jmp
sti
pushf
into
clc
adcl
adc
nop
jbe
inc
bound
cmp
shrb
adc
mov
into
sub
push
fisubrs
popf
test
mov
sbb
xchg
mov
fstl
data16
gs
aad
add
cmp
xchg
add
sbb
dec
stos
or
bound
mov
push
cmp
push
lret
insb
in
lds
inc
das
mov
mov
lock
mov
insb
mov
rolb
leave
mov
mov
mov
adc
push
lret
adc
ret
xor
xor
dec
aas
ljmp
dec
adc
sub
pusha
cld
push
and
cltd
mov
mov
jp
rcl
mov
cld
sub
repz
xor
dec
or
inc
dec
dec
ljmp
sti
into
mov
lahf
jl
pushf
repz
js
fsubs
test
jb
xlat
dec
in
repz
inc
aad
ljmp
stos
add
scas
pop
int3
push
roll
iret
mov
pop
dec
popf
and
movsl
pop
ret
push
xor
mov
xchg
out
scas
icebp
ljmp
les
shll
stos
xorb
pop
mov
jnp
xor
cwtl
cmp
push
sub
cmpl
adc
jne
aaa
call
push
ljmp
adc
fists
iret
repz
mov
push
or
xchg
jo
or
in
nop
xor
cmc
shl
sbb
bound
loopne
mov
jecxz
jne
push
and
add
xchg
ficoml
sbb
fsubrl
insb
cmp
pop
dec
ror
cwtl
mov
sub
mov
push
testb
dec
dec
mov
repnz
pushf
repnz
jb
inc
es
insl
mov
ja
cmp
jl
loop
sub
or
push
xor
sbb
pop
jl
movsl
xor
das
mov
in
pop
mov
fwait
sbb
in
push
loope
mov
fidivrl
inc
out
and
sahf
xchg
ss
push
push
xor
push
mov
ficompl
xor
pop
hlt
lds
ja
test
xchg
sahf
rol
mov
das
dec
ja
mov
test
mov
lea
xlat
scas
inc
adc
mul
fldlg2
push
sub
fnstcw
fs
outsb
jne
add
test
mov
xor
inc
shrb
mov
and
int3
sub
adc
sub
aad
ds
jge
inc
jnp
nop
push
pop
pop
xchg
add
xchg
xchg
inc
inc
jmp
dec
push
loopne
push
add
shlb
into
sbbb
ja
cmpsl
test
push
push
mov
mov
add
and
mov
xchg
ss
fistpl
mov
push
int
cwtl
dec
ret
rcll
xchg
cmp
imul
loopne
leave
sbb
rol
mov
fwait
and
xor
clc
adc
jne
jbe
adc
or
and
movsb
jne
mov
and
mov
jbe
jno
add
mov
pop
lret
mov
iret
test
ret
ljmp
jbe
or
roll
fsubrs
adc
lea
jae
pushf
imul
push
add
fildl
mov
subl
lret
add
idivl
pop
int3
cmp
jg
add
pop
pop
lcall
or
jecxz
aas
pop
and
pop
fwait
or
sbb
cltd
inc
pop
xor
xchg
and
sbb
dec
dec
jg
ljmp
adc
sbb
cmp
loopne
pop
mov
or
movsl
repnz
test
inc
push
out
stos
sub
aas
mov
xchg
daa
mov
pushf
xchg
iret
pop
xlat
aaa
mov
mov
cmc
cli
jmp
les
sbb
pop
sbb
xorl
aad
in
lea
aad
negb
cmp
sub
xor
out
push
sub
imul
sbb
jge
xchg
popa
jnp
aad
fcom
mov
mov
inc
lret
mov
mov
rol
jl
pop
aam
adc
popf
add
gs
loope
test
fcoms
fstpl
jl
cmpsl
and
cmpsl
orl
xchg
lds
xchg
lods
and
mov
dec
adc
pop
adc
div
test
cmpsb
shr
loope
dec
jle
les
daa
lock
cmc
jnp
add
add
pop
imul
xor
loopne
mov
imul
push
pusha
inc
sahf
inc
cmp
sub
xchg
jmp
sub
outsl
jecxz
fiaddl
cli
push
push
add
cwtl
sbbl
cmc
enter
shrl
xchg
mov
and
xchg
int3
mov
xlat
cmp
push
sub
rol
subl
sub
jmp
mov
jl
xlat
pop
mov
sar
shrl
xchg
mov
test
popa
mov
test
arpl
jle
inc
rcr
jecxz
dec
jge
pop
data16
or
push
push
xchg
lret
inc
out
fs
repz
iret
cmpsl
lahf
cli
push
xchg
call
sarb
cmpsl
sarb
fldenv
push
repz
ret
mov
jb
fcomps
jge
lods
jmp
and
or
ljmp
push
roll
or
pop
and
imul
mov
mov
fcmovb
inc
cmpsl
arpl
cli
add
cmp
scas
sbbb
adc
mov
in
outsl
push
leave
and
idivb
fldt
movsl
push
negb
fldl
mov
adc
and
out
mov
inc
or
jno
jecxz
in
push
cltd
pop
out
out
inc
enter
jnp
jle
call
loop
lret
pop
push
cld
add
xchg
ret
stc
test
jns
jge
in
mov
inc
pop
xchg
adc
jae
mov
shll
sar
faddl
jbe
es
xchg
jp
imul
adc
xor
push
push
jp
insl
inc
mov
add
fwait
mov
push
lods
into
out
inc
popf
jle
in
mov
scas
test
repz
pop
inc
mov
in
cmpb
call
test
popa
int3
dec
dec
mov
imul
mov
lret
stos
mov
repnz
xor
scas
xchg
push
cli
add
adc
lret
ret
jge
dec
adcl
xchg
imull
cmp
jo
add
lods
sahf
loop
inc
dec
test
std
cwtl
aas
jp
jl
xchg
lret
pop
pushf
in
mov
scas
aas
lods
jmp
jns
xlat
sar
movsl
jno
lcall
fidivrs
lcall
jae
aad
ds
mov
inc
jmp
jo
stos
xchg
fisubl
das
pop
ss
movsl
mov
sbb
jnp
enter
inc
in
dec
enter
lcall
out
sbb
outsb
repz
mov
iret
push
cmp
push
push
ja
xor
sbb
sahf
fstpl
adc
dec
push
jp
sti
inc
movsl
ja
dec
pop
jg
fnstcw
cwtl
ljmp
das
pop
and
mov
pop
mov
lea
icebp
divl
xor
mov
or
jb
sub
loop
pop
sbb
cwtl
sub
jbe
mov
mov
movsl
rcr
cmc
jo
outsb
inc
fidivs
mov
std
mov
mov
mov
cmp
scas
dec
mov
jne
fwait
push
adc
push
test
and
mov
cltd
pop
xor
pop
movsl
or
add
mov
cmpb
xchg
stos
push
jmp
lahf
ficomps
pusha
pushf
sub
insl
clc
mov
and
xchg
cmc
data16
sub
inc
inc
sahf
adcb
sbb
add
nop
inc
add
js
in
sbb
or
ljmp
mov
loop
js
daa
aad
mov
adc
inc
dec
cmc
in
xor
mov
sub
lea
mov
jle
mov
and
into
subb
ret
gs
roll
inc
stos
xchg
xchg
sub
lret
subl
addl
lock
mov
xchg
push
pop
lret
scas
jnp
mov
pusha
std
or
movb
jb
inc
insb
mov
push
aad
pop
iret
lea
dec
mov
fs
cs
cmpsl
lds
outsb
xlat
cmpsl
mov
cmp
cmp
je
sahf
mov
cmpsl
mov
hlt
push
lock
shlb
leave
sbb
jmp
in
adc
mov
pop
fmul
imul
xlat
and
mov
xor
mov
pusha
loope
push
mov
lods
push
les
fcmovb
cltd
test
ja
jbe
out
or
ss
jae
adc
inc
pop
fdivp
fcoml
outsl
sti
movsl
inc
xor
or
scas
testb
xchg
push
bound
xchg
push
rcr
lea
cld
fwait
inc
dec
aas
mov
jp
jno
and
lcall
ds
cwtl
dec
push
stc
les
cmp
leave
out
cmpsb
push
add
xchg
adc
pop
decb
push
lods
mov
adc
arpl
sbb
ljmp
mov
lret
sub
fnstenv
mov
push
cmp
adc
sarb
out
pcmpgtb
mov
inc
jo
push
sub
ret
js
mov
sbb
rcrb
popf
sub
ss
in
roll
vhaddps
lret
lret
dec
or
out
or
mov
movsb
xor
push
add
lods
sub
cmp
sbb
xor
cmp
and
ljmp
add
es
js
or
adc
xchg
fst
scas
inc
push
pop
sar
fistps
repz
xchg
fists
push
pop
sahf
fs
pop
hlt
inc
movsl
add
fistpll
sti
aam
adc
dec
sti
jae
in
stos
fidivrs
insl
cld
xor
pop
push
cmp
in
xchg
mov
xor
ja
jne
and
jp
pushf
lds
mov
mov
xor
enter
ja
sbb
add
scas
je
rclb
pop
add
stos
add
push
cld
fnstcw
add
dec
test
test
daa
and
int
mov
xlat
and
lock
rorl
gs
subl
cwtl
or
mov
hlt
scas
in
ss
mov
push
mov
xor
push
enter
popa
dec
cmp
clc
sbb
pop
cmp
sbb
jg
sbb
loope
enter
pop
lret
pop
es
cmp
push
sub
push
push
jne
lret
movsb
test
mov
loope
stos
or
rolb
cmpsb
mov
jo
dec
pusha
jle,pn
fstpt
imul
mov
les
sti
or
les
and
enter
cmp
mov
xchg
loope
dec
pop
push
cmpsl
push
fadds
lret
pop
or
movsb
jge
enter
mov
mov
jmp
mov
aad
cltd
or
or
scas
pop
push
jo
mov
imul
cmp
cmp
bnd
xor
xchg
addr16
js
ljmp
jns
jno
push
mov
mov
enter
cmp
jo
xor
mov
and
shrl
cmpsb
pop
pop
cmp
jnp
and
sub
mov
sub
xchg
jae
xor
cmp
or
xchg
movsl
fsubrl
cmc
dec
pop
imul
push
neg
push
int
xchg
adc
adc
push
or
lods
aas
xor
stos
sbb
insb
or
sahf
out
popa
xor
xchg
push
mov
fbstp
xchg
push
sahf
mov
lret
in
ds
xor
mov
adc
mov
pop
bound
inc
jge
xchg
test
out
pop
shrb
out
dec
push
push
mov
jno
dec
push
aaa
hlt
cmp
jp
and
pop
mov
adcb
lcall
int3
in
jmp
adc
jle
mov
inc
insb
push
in
arpl
into
jge
sbb
icebp
jl
lahf
mov
dec
jp
pusha
js
or
jno
push
out
dec
stos
pop
xchg
sar
jne
sbb
adcl
fsubr
xchg
jmp
mulb
mov
jno
dec
cli
dec
or
xchg
xor
movsl
jge
pop
dec
test
adc
mov
dec
ljmp
fdivs
pusha
jmp
loopne
jno
jecxz
mov
je
test
pop
mov
xchg
mov
dec
lods
mov
rorb
cmp
loopne,pt
mov
lret
dec
fcoml
ret
pop
adc
push
std
loop
popf
inc
cwtl
xlat
iret
mov
js
mov
push
push
inc
jb
push
pop
es
movsl
rol
jns
shlb
xchg
pop
in
push
movzbl
lea
push
stos
jo
cmp
push
daa
shrb
mov
xchg
sti
sbb
stos
sub
mov
iret
xlat
insb
jmp
aas
int3
dec
and
std
or
mov
daa
inc
push
int3
add
shl
fmulp
xor
xchg
leave
repz
and
mov
xlat
sub
push
pop
mov
pop
add
int
add
sar
jp
xor
lcall
mov
push
loop
cmpsb
and
imull
sbb
sbb
adc
add
sbb
push
xor
adc
pop
lea
cli
jp
jmp
stos
int3
sti
sbb
xor
mov
and
out
adc
insb
pusha
xor
outsb
aas
add
or
inc
sbb
subb
mov
sub
int
adc
pop
inc
mov
jge
add
push
mov
cltd
das
je
fcoml
cmp
push
inc
mov
xor
dec
shrl
inc
aam
pop
xchg
fidivs
je
aad
enter
in
add
sub
jo
mov
aaa
mov
sbb
fwait
jmp
mov
int
out
das
scas
sbb
in
addr16
xchg
cltd
ret
bound
xor
insb
and
stos
lods
mov
inc
ss
ljmp
cmp
aaa
mov
fcmovnb
jecxz
xchg
fdivl
lcall
sub
iret
inc
mov
scas
adc
imul
test
ret
jbe
adc
mov
out
scas
jecxz
mov
shlb
xor
fwait
hlt
cmpsl
adcl
mov
ja
repnz
mov
or
hlt
imul
jg
xor
out
push
sub
cmp
mov
sbb
jl
cmc
andl
and
cmpsb
dec
mov
pop
bound
jg
or
ficomps
lods
imul
aas
pop
jne
jle
mov
icebp
xor
or
idivb
into
popf
sbbl
je
sub
and
jns
pop
push
sbb
aad
rolb
and
xchg
imul
jmp
clc
gs
sub
and
cmc
cmp
popf
mov
mov
clc
pop
cmpsl
push
xor
sbb
and
js
fldt
out
xchg
jl
cmp
add
add
loop
lea
push
adc
jge
cmc
jb
fsubrl
movsb
mov
popa
in
xchg
je
inc
xlat
dec
xor
mov
sub
jecxz
jae
hlt
xchg
les
stos
enter
test
cmp
and
pmullw
addb
xchg
mov
jo
ds
ret
adc
lock
add
fsubrp
decl
xor
repz
cmp
pop
subb
inc
arpl
push
mov
into
mov
mov
jle
jns
adc
jne
test
fs
imul
mov
popf
push
je
sub
mov
lret
fwait
negb
fldl
out
in
pop
and
xchg
fldt
aad
mov
popa
pop
jl
mov
and
or
popf
inc
inc
hlt
and
imul
sarl
es
rolb
add
cmpsl
mov
cmp
imul
shl
jb
mov
dec
jb
mov
cmc
adc
fsub
push
cmpl
fs
fistps
fs
nop
daa
inc
xabort
ret
adcb
movsb
stc
sub
and
mov
cld
imul
insb
jle
dec
dec
xchg
mov
xor
aas
repz
and
or
pop
pop
dec
pop
push
fdivs
adc
mov
adc
mov
nop
jp
lds
idivb
jle
dec
push
jmp
je
cld
add
cmpsl
cmp
ja
sbb
jge
inc
sbb
inc
sarb
dec
scas
sub
inc
xchg
dec
mov
sbb
pop
mov
std
cltd
out
inc
pop
sahf
loope
push
mov
outsl
imul
iret
jmp
push
push
add
cwtl
out
mov
inc
sbb
addr16
loopne
dec
sbb
insb
jg
mov
inc
cld
mov
fdiv
add
push
push
inc
xlat
adc
pusha
dec
xor
xchg
mov
scas
int3
xorl
call
notb
ret
mov
icebp
xchg
fisubrs
jl
movsl
adc
lret
popf
enter
adc
jp
mov
or
xchg
sub
push
adc
mov
dec
jl
sbb
or
ljmp
push
mov
cmp
push
sbb
mov
xor
mov
mov
jb
je
rorl
lret
in
hlt
sbbb
add
xchg
addb
xchg
jo
jmp
lods
or
mov
cmp
xor
pop
jbe
aaa
mov
push
sub
adc
dec
lcall
das
movsb
push
add
and
push
test
das
lds
xchg
add
aas
or
mov
xchg
cmp
das
addr16
aam
and
xor
dec
test
xor
call
add
xor
test
hlt
cmp
lods
xchg
sbb
stc
aam
dec
jae
dec
mov
mov
scas
xchg
xor
inc
lods
adc
lcall
bound
ret
cltd
les
pop
js
jbe
in
xlat
das
iret
jno
dec
sti
sub
je
fnstenv
xchg
pushf
xchg
scas
orb
xor
dec
imul
fisubrs
and
in
xchg
cli
jo
bound
outsb
lcall
jecxz
rcrl
jp
fisubs
lds
std
adc
shr
cmpsb
adc
addb
mov
rcrl
mov
xor
sub
rcr
bound
stos
lea
inc
sbbl
pop
sbb
es
lahf
es
dec
mov
mov
in
add
iret
out
push
adc
in
imul
scas
mov
subps
test
imul
pusha
jb
pop
ret
xchg
and
ret
push
mov
in
insl
sub
push
sub
mov
es
push
mov
push
filds
adc
fwait
movsl
xchg
push
imul
jno
mov
sub
adc
and
xchg
iret
jle
xchg
pop
mov
lret
pop
lods
xor
add
scas
xchg
xor
in
mov
cwtl
jmp
scas
repnz
jbe
or
push
pop
sub
movsl
repnz
xor
jecxz
adc
mov
push
add
add
fnstcw
pusha
inc
int3
cli
jmp
sub
mov
imul
in
imul
push
jle
cld
jnp
in
jne
cltd
in
dec
lods
ss
jp
dec
or
or
inc
cmpsb
pop
js
addr16
imul
in
dec
out
add
loopne
mov
lahf
sub
push
les
xchg
adc
cli
sub
loop
ljmp
mov
les
sbb
es
or
in
or
xchg
ret
push
mov
dec
pop
scas
ja
cmpsb
lds
pop
mov
jle
repz
int
dec
dec
in
add
pushf
repz
insb
mov
movsb
push
jns
cmp
aad
sahf
shrb
dec
cmc
scas
sbb
dec
push
push
add
sbb
and
pop
push
nopl
push
push
jmp
cmp
ss
sbb
sub
das
or
inc
imul
test
or
and
push
push
xor
sub
xchg
pop
push
aad
popl
xchg
cmp
or
sbb
call
mov
mov
mov
fnstenv
in
xchg
mov
sub
cli
mov
std
das
or
movsb
idiv
xchg
push
or
fidivl
xchg
pop
mov
push
in
xchg
repnz
add
or
dec
shlb
jg
shl
adc
aaa
arpl
xchg
stos
jge
aas
mov
dec
fdivrl
mov
fildl
pop
out
or
dec
sbb
sub
dec
or
idivb
inc
mov
pop
fstpl
mov
dec
scas
popf
iret
push
xor
and
fistpll
cltd
orb
inc
pusha
cmovnp
push
in
into
popf
leave
loop
inc
cltd
dec
jl
daa
sbb
insl
cs
pop
clc
enter
mov
cld
iret
nop
iret
roll
dec
es
into
pop
movsl
sarl
ror
ret
dec
mov
stos
and
call
xchg
sbb
ja
es
push
xchg
jl
dec
push
or
out
adc
neg
sub
call
mov
outsl
xchg
popa
inc
pop
pop
scas
cs
cmp
sub
fdivl
movsl
clc
popf
xor
or
push
loopne
nop
pop
dec
or
xor
pop
pop
out
fcmovnb
jecxz
mov
fwait
push
adc
repz
inc
movsb
cmp
inc
or
adc
pop
jle
jecxz
scas
sbb
popa
jnp
push
sbb
xor
sbb
jge
cltd
aas
repz
inc
arpl
insl
mov
mov
sbb
loope
movsl
mov
mov
setp
dec
sub
jg
inc
xchg
hlt
adc
xchg
arpl
dec
push
cmp
fimuls
subb
push
xchg
dec
inc
loope
jp
out
xor
js
mov
mov
pop
out
pop
sub
and
nop
jbe
lds
fdivrs
sbb
add
ljmp
hlt
in
pushf
fs
dec
in
scas
lock
sbb
dec
mov
mov
pop
fwait
test
push
lods
or
loope
cmp
cld
pop
cmp
xor
pop
jae
cmp
mov
rcll
mov
bound
mov
js
fmuls
push
aad
les
cmp
loopne
lea
insl
cmp
xchg
pop
fsub
dec
mov
int3
push
sub
sti
mov
addr16
mov
daa
test
std
pushf
ficomps
sub
xor
fidivl
jno
fwait
and
outsb
in
jle
sbb
bound
jmp
mov
adc
xchg
sbb
sbb
or
stc
jnp
sbb
xor
mov
pop
mov
mov
lahf
dec
lret
add
movsl
mov
popf
or
outsl
incb
pop
or
adc
frstor
loop
push
jne
cmp
pop
lock
insb
cmp
and
adc
or
bound
add
dec
or
into
jae
cld
xor
aam
mov
xor
add
fisubrl
shrd
je
ret
sub
mov
add
rclb
jnp
lds
loop
jne
xchg
xchg
addr16
jle
lods
les
mov
cmp
lret
cmp
xor
pop
cmp
cmp
imul
int3
lcall
lods
test
push
jne
mov
mov
sbb
push
clc
or
in
lds
cmp
loopne
loope
aad
push
out
imul
js
inc
and
pop
ret
add
mov
dec
dec
dec
sti
mov
push
jo
sbb
pop
jmp
or
les
jle
insb
xchg
mov
mov
daa
insl
jne
rcr
mov
push
xchg
cmp
sub
and
or
adc
push
pop
or
mov
stc
divl
seta
pop
lret
hlt
sub
ret
or
or
adc
loopne
xor
xchg
push
dec
jge
mov
pop
test
sub
push
or
push
mov
mov
fwait
or
xchg
xchg
ret
ja
stos
stos
sahf
ljmp
push
mov
push
sbbb
mov
cmp
fs
mov
jg
sbb
es
sbb
push
fstpl
xchg
lret
mov
gs
fstpl
lcall
lret
arpl
pusha
fwait
mov
int
popl
lcall
sub
mov
sbb
xor
xchg
xor
mov
mov
test
loope
cmp
jae
pop
mov
xorb
xor
pop
sub
js
das
loop
jne
mov
sbb
aaa
adc
push
lock
mov
sub
and
stos
adc
aam
jge
dec
pushf
dec
orl
xor
push
ds
jecxz
fs
int
sbb
mov
pop
add
fsubrs
push
clc
and
adc
jo
mov
pop
sbb
arpl
pop
in
mov
mov
mov
imul
cmpsl
jge
mov
mov
jb
push
outsb
mov
mov
or
test
insb
bound
stos
int3
gs
mov
fbld
pusha
in
jg
xchg
cmp
xor
mov
add
call
push
pop
mov
add
mov
cmp
or
pop
add
fs
sarb
jle
xchg
fdivrl
xchg
mov
add
repz
fimuls
out
ja
fsubrl
out
xchg
cmp
fs
xchg
jp
xor
in
dec
cmp
adc
lock
shl
arpl
sti
and
xchg
sar
dec
or
dec
sahf
cltd
add
xchg
xchg
test
ljmp
in
and
xor
add
adc
es
in
xor
imul
in
mov
xchg
test
imul
in
add
into
dec
mov
adc
xchg
std
xor
loope
enter
or
mov
in
fs
movsl
mov
lret
push
fs
sti
and
cltd
lock
sub
mov
ljmp
shll
and
es
addr16
fcom
sbb
inc
pop
ds
nop
dec
pop
sub
sub
roll
xchg
movsl
mov
je
outsl
mov
mov
sarl
xchg
hlt
mov
dec
sub
outsl
dec
sahf
es
cmp
xor
dec
cs
jne
or
outsb
shlb
sub
push
mov
repz
fxch
mov
xor
sbb
pop
mov
inc
adc
inc
ljmp
out
ret
insl
loopne
out
in
pusha
nop
or
or
pop
inc
enter
mov
cwtl
pushf
mov
mov
insl
sub
nop
rolb
inc
in
mov
and
pop
neg
mov
ja
or
shr
jl
jo
scas
adc
clc
stc
pop
test
mov
jmp
cltd
lods
cmp
lret
pop
int
mov
pop
cltd
or
sbb
dec
arpl
mov
loopne
scas
and
push
mov
hlt
pop
fimuls
xor
pop
fnstcw
popa
lea
cmp
movsb
bound
mov
sahf
sbb
mov
dec
mov
shl
jmp
mov
jg
ds
movntq
mov
push
call
sbb
xchg
std
fs
sti
mov
in
shlb
sarl
jl
pop
gs
sbb
or
testb
xlat
and
dec
cli
and
xor
dec
push
aad
pushf
ficompl
xchg
repnz
fisttpll
or
aad
jb
fidivrs
dec
pop
xchg
adc
cwtl
rcll
jp
xchg
out
jmp
and
push
clc
in
sub
cmp
dec
movsbl
scas
push
push
push
sbb
scas
jno
mov
movsb
adc
and
push
inc
sub
jno
lea
iret
xchg
insb
push
mov
sbb
in
cmp
imul
sti
movhps
mov
pushf
arpl
fs
mov
adc
mov
cwtl
stos
ljmp
push
cmpb
dec
cmp
mov
js
fisttps
add
lcall
mov
adc
daa
inc
sbb
ret
mov
scas
add
popa
cmp
enter
cwtl
cmc
shll
mov
mov
lds
jl
push
insl
rcrl
stc
jl
iret
loopne
imul
lea
fistps
xor
or
gs
ficoms
sbb
in
mov
mov
jno
mov
movb
lds
or
cmp
mov
jns
sbb
cli
fsubrs
imul
pusha
cld
cli
jae
andl
mov
pop
loopne
jecxz
jecxz
mov
mov
adc
xchg
cld
das
out
dec
mov
stc
aad
scas
gs
notb
inc
mov
sbb
sbb
cmp
cmp
sub
push
fcmovnbe
lea
and
int
mov
mov
mov
iret
sbb
jno
nop
sbb
cmp
pop
push
or
lret
sub
popf
adc
adc
cmpsl
pop
push
loope
mov
rep
aaa
mov
mov
ja
mov
repnz
push
test
test
and
pop
mov
pop
mov
xor
mov
pop
mov
push
xchg
mov
cmp
mov
and
daa
rcrb
adc
inc
adc
lret
push
pop
sti
adc
xchg
lcall
xchg
mov
dec
lret
pop
out
leave
push
aaa
repz
xor
add
rclb
iret
mov
ds
mov
lds
add
sub
mov
xchg
jmp
and
xor
sbb
dec
pop
cmpsb
lea
fdivr
dec
aaa
mov
je
test
and
dec
mov
aam
jbe
jnp
cltd
outsl
pop
mov
in
inc
pop
je
test
sbb
clc
add
leave
orb
lahf
dec
cmp
mov
push
mov
xchg
psrad
pop
dec
mov
mov
mov
pop
add
xor
inc
fldl
in
out
mov
clc
mov
test
sub
int3
out
xchg
shrl
test
jne
mov
gs
pop
in
sarl
stos
xlat
out
iret
and
cs
lods
lods
sbb
dec
pop
sbb
fs
xor
insl
fstps
xchg
mov
jl
and
test
mov
mov
imul
stos
push
xchg
xchg
and
ja
in
xchg
fisttpll
ucomiss
xchg
jns
mov
jmp
insl
cmp
sahf
pop
pop
adcb
cmp
xorb
testl
pop
push
inc
xchg
out
or
jae
cwtl
cmp
push
scas
or
dec
stc
sbb
loopne
faddp
pop
inc
jb
dec
cmp
outsb
sbbb
cwtl
adc
int3
sbb
daa
lods
cli
fincstp
mov
scas
iret
pop
sbb
mov
push
shlb
into
ljmp
xchg
mov
bswap
rorb
cld
pop
or
jle
dec
mov
movsb
jg
dec
xor
adc
add
push
xchg
add
fstpl
idivl
xchg
push
jno
ljmp
mov
mov
mov
mov
in
sbb
loopne
lret
cmp
adc
push
or
scas
dec
insb
xchg
cmpsl
xchg
js
mov
push
fwait
inc
lds
roll
sbb
aam
sub
mov
cmp
and
add
stc
loope
push
ret
inc
mov
addr16
cmp
cmp
out
jb
jne
decl
fs
xor
ja
fisttpl
das
add
dec
add
fidivrl
dec
add
mov
jmp
repz
sub
sbb
sbb
cmp
mov
ret
or
mov
inc
mov
lahf
mov
xor
fldl
hlt
int
cmp
adc
xchg
xchg
xchg
fdivl
sub
arpl
jns
je
sub
jge
or
cmpsb
or
int3
or
xchg
rolb
xchg
mov
mov
cmpsb
sub
sarb
dec
subb
fs
icebp
xor
out
mov
mov
mov
mov
adc
sbb
dec
roll
push
fwait
addr16
bound
arpl
repnz
inc
mov
push
push
loop
xchg
jno
dec
pop
pop
addr16
pop
xor
adc
cmp
out
xor
xchg
shlb
jp
xorb
lahf
dec
inc
sub
mov
repnz
mov
mov
jo
stos
xor
push
int
dec
pop
roll
daa
in
sahf
pushl
nop
mov
add
stos
push
adc
pop
push
idivl
cli
negb
js
mov
test
fwait
int
lods
filds
add
stos
add
xchg
cwtl
cltd
inc
xchg
sub
in
inc
add
stos
fsubr
sub
and
xchg
ficoms
mov
fsubrl
pushw
mov
add
push
cmpsb
and
add
fsts
push
fcmovne
je
lods
pop
mov
mov
sbb
and
mov
push
faddl
dec
jo
mov
and
adc
fwait
xor
adc
push
arpl
cmpsl
xor
fistl
enter
clc
pop
gs
cmp
cmp
pop
inc
mov
mov
stc
add
cmpsb
jb
lea
shlb
sahf
and
adc
xchg
or
repz
pop
cmp
je
dec
push
int3
mov
adc
mov
shlb
fimull
ficompl
lahf
dec
mov
xchg
push
push
ret
push
fwait
test
repz
inc
mov
out
popa
mov
aaa
hlt
jmp
jmp
adc
mov
mov
adc
ja
add
jmp
add
cld
add
clc
pop
sub
mov
pop
ss
inc
in
jne
jl
lret
ret
jmp
jnp
mov
daa
adc
inc
mov
dec
mov
cmpsb
fnsave
imul
js
shr
adc
add
or
or
lea
in
sbb
pop
popa
loop
arpl
lcall
push
push
dec
pop
idivb
pop
xor
cmp
xor
inc
push
and
rorb
insb
divl
xor
icebp
ror
xor
dec
iret
adc
cmc
lods
aad
push
mov
int
scas
adc
pop
xchg
bound
ljmp
jno
sub
xor
cmpsl
mov
cli
cmp
sub
adc
loop
inc
push
lock
sbb
or
cs
and
push
pop
mov
lods
push
push
jle
and
dec
push
sub
jae
jno
and
imul
push
xor
add
cmp
cmpsb
sbb
adc
mov
movsb
mov
push
std
pop
cmp
cmp
inc
iret
test
test
dec
es
push
mov
fucomi
in
fmul
push
shrb
adc
dec
lcall
push
push
je
les
adc
sub
loope
ret
add
jp
fcmovne
in
jne
iret
scas
mov
icebp
aas
mov
inc
add
enter
xchg
xchg
inc
dec
scas
add
push
cwtl
sbb
int3
cmpb
cmp
outsb
push
xor
pop
or
sub
test
sub
test
pop
lcall
ljmp
sbb
mov
add
mov
add
stc
inc
dec
sub
outsl
push
fstpl
lret
out
pand
mov
cmpb
cld
mov
daa
or
mov
or
sbb
ja
xchg
out
xorb
test
pop
push
aaa
sub
xor
inc
mov
mov
data16
mov
adc
push
ret
jae
cs
cmc
mov
xor
pop
stos
fdivrs
xchg
outsl
fsubp
mov
and
mov
xor
mov
cld
mov
pop
sub
loope
and
mov
aas
push
inc
into
pop
cmpsb
insb
xor
pusha
mov
test
in
arpl
push
sahf
sti
pop
bound
cmp
push
test
aaa
sbb
scas
push
js
add
lea
push
xchg
pop
mov
shlb
add
adc
pushf
arpl
xchg
add
inc
rcrl
aaa
cmp
insl
pop
jbe
fisttps
mov
iret
or
popa
lret
hlt
adc
dec
or
sbb
movl
jl
sti
mov
mov
loope
jge
sahf
dec
out
adc
inc
push
insb
mov
fsubrl
insb
cwtl
cmp
adc
test
ljmp
test
nop
add
inc
jbe
xchg
mov
push
and
xchg
insl
hlt
mov
loope
adc
pop
pop
add
push
scas
inc
ja
sub
aaa
inc
mov
jnp
into
shrl
inc
rol
call
int3
mov
fwait
bound
loop
mov
fdivrs
pop
std
fsqrt
add
pop
daa
mov
pusha
adc
jnp
js,pn
xchg
dec
imul
and
cmpsb
pusha
test
aas
or
sub
or
mov
pushf
xchg
orb
incb
inc
sahf
js
aaa
inc
lock
outsb
mov
js
js
fisubl
pop
mov
sti
mov
div
addb
nop
xor
call
lcall
fldl
jae
fcomps
ret
idiv
sub
das
or
popa
cmp
xor
js
fsubr
fcompl
mov
scas
mov
adc
add
in
iret
js
push
mov
cmp
cmc
xlat
das
xchg
scas
scas
jae
mov
add
jg
mov
call
lahf
aaa
popf
adc
xor
out
xorps
lea
ficoms
daa
jbe
pop
push
rolb
clc
inc
sbb
xor
mov
add
shl
out
push
sarb
aaa
mov
pusha
popf
lret
insb
adc
xor
gs
ret
jecxz
int
jp
adc
pusha
ja
mov
jecxz
add
mov
sub
push
pushf
rcrl
sbb
fisubs
adc
and
cmp
sbb
popa
pop
jns
push
in
xchg
mov
insb
or
mov
cmpsb
je
mov
stos
clc
inc
int
cli
mov
enter
cwtl
push
int
shll
mov
iret
fstpt
cltd
mov
push
fwait
add
rorb
mov
add
push
call
jge
popf
push
cmpsb
pop
divl
push
loope
subb
pop
into
in
lcall
lods
jbe
gs
mov
mov
jae
mov
scas
popf
push
pop
lds
cmp
mov
fistpl
call
mov
imul
and
pop
arpl
test
xlat
divb
fwait
sub
pop
sbb
mov
jb
mov
fs
push
aaa
sti
xchg
inc
xchg
and
push
mov
scas
test
movsb
cmpsl
sub
dec
inc
sbbb
push
sbb
jns
mov
xchg
movsl
jnp
aam
pop
rclb
push
cs
adcw
jmp
sub
sar
mov
dec
push
in
stos
mov
add
or
dec
fstl
pop
pop
ja
mov
mov
hlt
mov
cmp
stc
xchg
mov
inc
or
and
outsb
je
jle
sbbl
cmc
lods
aad
push
jge
or
int
adc
or
jo
mulps
sar
lds
sub
out
xor
xlat
imul
dec
mov
mov
sub
sub
jnp
test
sub
adc
out
bound
rcrl
pop
faddp
clc
pop
lret
and
daa
into
xchg
xchg
and
cmp
call
sbb
fistpll
dec
int3
je
mov
xor
dec
xchg
ret
mov
popa
sbb
inc
sub
cs
mov
sbb
adc
mov
xchg
and
std
dec
dec
mov
and
iret
rcl
outsb
inc
pop
rcrl
xor
cmc
stos
icebp
jmp
pop
push
push
push
mov
and
ljmp
pop
imul
adc
fstpl
pop
cmpsb
sbb
out
popf
add
push
dec
mov
cmp
cmp
loopne
jmp
ds
push
addr16
or
fwait
aaa
aas
icebp
push
xor
push
push
movsb
mov
inc
test
shlb
or
lea
pop
mov
and
xchg
sub
xchg
sub
xor
push
mov
pop
cmp
or
movsl
xor
sahf
jge
dec
and
cmp
fs
stc
clc
push
scas
dec
mov
xor
lahf
ds
lea
movsl
or
gs
sub
cmpsb
push
add
jge
xor
mov
push
es
fisubrl
xor
les
insl
or
in
adc
add
repnz
push
nop
data16
and
adc
shrl
mov
cmpb
sub
xchg
inc
int
loop
rol
test
mov
or
aam
outsb
divb
dec
out
jg
aad
lods
roll
cli
movl
jecxz
push
pushf
mov
adc
mov
inc
adc
lcall
popa
lret
push
cmpsb
shrb
sti
cmp
test
jbe
sbb
push
ja
rolb
cli
jns
sbb
adc
gs
and
in
mov
hlt
mov
sub
pop
add
or
cwtl
ja
int3
out
mov
cmp
daa
lcall
jp
popa
call
cmp
mov
push
mov
cwtl
or
aam
mov
ret
cmpl
mov
dec
inc
inc
adc
push
rcrb
lcall
out
sbb
pop
aad
int
add
xchg
mov
faddl
xchg
incl
and
cmp
insl
mov
in
aad
movsl
lock
sub
daa
cwtl
xor
and
stos
push
cmpsb
rorl
or
stos
push
mov
pop
xchg
iret
fsubrs
pop
push
push
add
dec
cmp
cmp
cmpsl
sub
inc
pop
into
lea
imul
jns
shll
test
cmp
sbb
cmp
decb
dec
jns
inc
dec
aaa
push
shll
add
aaa
mov
loopne
cmp
mov
ds
mov
aaa
push
jmp
adc
fists
ficoms
and
ja
and
bound
in
jns
pop
bound
dec
pop
cmpsl
push
mov
dec
cld
scas
iret
jnp
and
jg
mov
xchg
push
xlat
add
xor
fcmovnbe
mov
push
add
sbb
xchg
mov
adc
push
inc
or
inc
mov
jmp
mov
aam
mov
jnp
sbb
pop
mov
jle
adc
push
sahf
rclb
adc
test
pop
push
and
int
cld
push
sub
dec
and
movsb
mov
cmp
mov
or
ret
dec
fildl
shlb
cmc
sahf
mov
enter
dec
outsb
push
dec
jle
pop
inc
and
jo
xlat
mov
lea
jno
notl
int
das
repnz
cltd
pop
adc
pushf
ret
xchg
pop
lock
scas
mov
int3
ret
aad
shr
rcr
fbld
out
es
mov
sbb
sti
sub
inc
add
cltd
xchg
adc
inc
lcall
lds
pop
mov
stos
xchg
cmp
add
aas
push
mov
scas
pop
in
out
test
pop
add
lret
add
and
movsl
cld
pop
lret
mov
add
mov
cs
push
addr16
pop
lahf
add
jns
xchg
cltd
fnstenv
jae
cld
push
fistpl
es
out
cmp
aas
lds
mull
push
pop
leave
aas
jns
sbb
xchg
push
movsb
loope
and
cmp
pop
out
adcl
jb
xor
arpl
inc
or
in
insb
shll
cld
inc
nop
jp
arpl
xchg
icebp
dec
hlt
jo
push
mov
add
mov
test
mov
dec
cmp
adc
push
das
jecxz
fmulp
rclb
cmpsb
icebp
inc
sub
add
cmp
mov
push
je
jl
stos
addr16
push
push
inc
hlt
cmp
and
pop
sbb
insl
iret
fisubrl
leave
scas
xlat
into
push
mov
jae
sti
or
addr16
add
leave
lods
fldenv
movsl
adc
fadd
add
sub
dec
inc
mov
lods
sbb
insb
aaa
mov
test
sti
cli
dec
mov
out
and
xor
jl
icebp
cli
jp
hlt
xchg
popa
jbe
or
dec
int3
mov
mov
lcall
pop
shrb
xchg
hlt
bt
jge
and
stos
mov
nop
ljmp
test
addr16
pop
jae
inc
lock
mov
inc
adc
fistpll
add
dec
mov
test
mov
stos
mov
mov
stos
in
icebp
out
and
int3
xchg
push
dec
arpl
jno
mov
inc
xchg
dec
ror
dec
push
leave
cltd
xor
mov
loope
mov
inc
imul
xor
mov
into
push
sbb
fisttps
nop
loope
loope
push
xchg
rorl
andb
lcall
shrb
or
cmpsb
and
out
or
sbb
and
cmpsl
adc
int3
ja
pop
sti
cli
or
mov
in
xchg
cmpsl
mov
movl
aas
andb
or
fcomp
aad
push
cmp
cmp
adc
adc
sub
data16
outsl
push
add
hlt
inc
sub
sub
dec
clc
xor
push
mov
pop
cmp
jno
inc
ja
fs
sbb
or
or
sbb
cmp
int
xchg
imul
sbb
add
dec
scas
push
dec
jb
popa
rorb
xchg
mov
dec
sarb
addl
sub
sbb
repnz
pop
cmc
pop
cmpsb
mov
inc
bound
cmp
xlat
xchg
xchg
scas
mov
pop
out
mov
jle
jecxz
xchg
mov
dec
adc
mov
roll
cmp
jns
cmp
in
jae
mov
inc
cmp
cltd
fs
fnstenv
jbe,pn
sbb
aam
ja
dec
lods
cmpsl
adc
out
jmp
ficoms
or
in
dec
stos
adc
push
pushf
push
mov
add
mov
push
jle
test
add
xchg
insl
mov
pop
xchg
jp
cli
mov
leave
lods
mov
fdivrl
inc
mov
aaa
mov
xchg
lods
push
pop
std
cmp
mov
test
cwtl
lcall
sarb
cmp
cmp
or
cwtl
in
dec
adc
hlt
mov
pop
mov
jno
rep
clc
cli
mov
mov
xor
mov
lds
mov
push
dec
push
imul
sub
and
das
stos
xchg
mov
imul
xlat
pop
lods
fdivl
add
cltd
fisubs
mov
mov
cmc
insb
cmc
ss
aas
xchg
daa
dec
mov
test
in
je
int3
sub
sbb
sbb
or
cmc
pop
lds
in
hlt
dec
mov
std
adc
dec
adc
into
enter
pop
sbb
pop
push
sub
pop
pop
jnp
cmp
nop
popf
mov
jo
stos
add
push
mov
cmc
adcb
arpl
inc
push
xchg
loop
mov
enter
je
ret
ret
shrl
or
cmp
pop
loope
fbld
xchg
int
mov
add
lret
call
sub
push
lods
lds
out
mov
out
sbb
add
pop
xchg
mov
mov
pop
lock
sbb
imul
outsb
ss
cltd
inc
mov
int3
cmpl
xchg
dec
fdivrp
ret
pinsrw
sbb
adc
out
iret
nop
cmpsl
sbb
or
insb
scas
cmp
fcompl
push
popf
push
lds
sub
in
inc
jne
loopne
ret
pop
loop
cmp
pop
xor
or
mov
cmpsl
popf
negb
cld
jae
addr16
xchg
and
and
adc
inc
nop
adc
xchg
mov
out
inc
dec
stos
inc
push
mov
sub
inc
xchg
lret
push
dec
sahf
ljmp
sbb
inc
mov
push
xchg
cltd
lahf
xor
std
fs
and
inc
fldcw
xlat
add
mov
inc
mov
mov
xor
jbe
xchg
call
add
sub
pop
dec
gs
sbb
push
cmpsl
mov
js
cmp
fists
dec
pop
dec
mov
and
sahf
push
jge
pusha
dec
repnz
inc
pop
in
xchg
jge
cmp
adc
mov
sub
mov
mov
popf
in
aaa
inc
fsubl
xorl
dec
push
aam
dec
or
mov
fwait
nop
ret
subl
inc
sub
imul
mov
or
dec
pusha
in
leave
test
out
fcomip
or
pushf
add
push
cmp
push
and
inc
inc
push
push
dec
sbb
or
or
outsb
xor
sbb
imul
lahf
es
outsb
xchg
dec
sub
int
pop
xchg
sub
arpl
test
xchg
in
pop
xchg
sbb
mov
mov
hlt
insl
cmp
or
repz
inc
bound
mov
inc
call
mov
mov
mov
sbb
movsl
sub
repnz
or
iret
mov
push
inc
fs
es
je
arpl
xor
outsb
mov
pop
mov
insl
xlat
or
rcrb
fdivr
xor
jg
daa
add
loopne
ss
imul
fdivrp
fdivrl
out
and
lret
xlat
and
cld
or
int
enter
lcall
jns
jo
sbb
mov
das
lret
gs
icebp
subb
mov
adc
mov
mov
popf
sarb
dec
sub
mov
inc
sti
and
inc
icebp
adc
imul
call
xchg
jae
push
sti
rcll
cltd
and
pop
and
mov
clc
int3
add
sti
rcrl
ja
repnz
test
jmp
pushf
sbb
push
mov
scas
mov
cltd
test
fisttpl
adcl
outsb
jnp
ffreep
adc
repnz
xor
enter
dec
es
xchg
xchg
and
mov
sub
mov
ss
movsl
jno
movsb
pop
dec
push
sbb
cmpsl
lret
insb
cli
xchg
movsl
ss
dec
scas
push
mov
insl
dec
mov
sahf
mov
inc
and
cs
out
fdivrl
push
jg
sub
in
fwait
cwtl
repnz
jp
push
xlat
fstl
mov
sahf
inc
arpl
dec
test
ret
rcrb
stc
ret
fildl
jmp
push
cmp
add
ucomiss
sbbb
ret
xchg
outsb
and
test
push
pop
jle
ret
mov
inc
ret
aad
fstpl
loope
inc
add
adcl
jns
in
shl
fcmovbe
pop
call
mov
push
fsubrs
cmp
xchg
or
cmp
sub
cmp
or
pop
cmp
enter
pop
es
incb
enter
data16
dec
and
mov
mov
mov
mov
scas
test
call
std
aas
push
imul
and
pop
mov
mov
xchg
add
dec
dec
push
or
push
dec
loop
enter
mov
fstps
or
scas
mov
nop
insb
fldenv
fwait
loope
in
dec
std
test
cmp
mov
in
mov
pop
add
hlt
sub
gs
cltd
sarl
pop
adc
into
jp
mov
scas
fcoms
xlat
hlt
mov
out
repz
inc
jp
lds
ficoms
push
cwtl
push
movsb
push
repz
push
scas
xchg
sbb
cmp
movsl
lret
xchg
sbb
out
mov
push
mov
loop,pt
inc
xchg
divb
jle
hlt
sub
pop
cs
out
pop
std
inc
push
and
aas
lahf
xor
push
scas
add
in
dec
xchg
pop
dec
jle
dec
popf
mov
push
orb
pop
repnz
xchg
push
dec
add
push
dec
fs
or
mov
das
in
sbbl
int
xchg
mov
adc
das
fildll
sbb
xchg
shl
or
cmp
jnp
xchg
pop
adc
mov
or
ds
lods
in
jmp
push
add
insl
jne
daa
mov
mov
cmc
dec
sbb
xchg
or
bound
xchg
fisttpl
cwtl
sbb
dec
mov
sub
xor
stc
pop
dec
arpl
mov
adc
shlb
xchg
or
arpl
mov
cwtl
iret
test
mov
andl
bound
and
xor
xchg
rcr
mov
add
subl
and
loopne
cmc
push
pop
pop
ljmp
dec
adc
stos
sarb
inc
mov
rorl
flds
or
add
lahf
loope
jno
pop
popa
xchg
cs
mov
cs
mov
setb
test
in
addl
inc
outsl
aad
cltd
addr16
js
pop
jle
in
movsb
mov
lods
add
loop
repz
stc
pop
jno
out
jb
bnd
pop
mov
jle
aad
xchg
pop
xchg
pmaxub
arpl
repz
ret
jmp
pop
inc
dec
jl
lods
nop
cmp
ret
sar
xchg
in
sbb
push
mov
or
aas
mov
inc
fidivrl
in
and
ret
mov
ficomps
fidivrl
sbb
mov
jge
je
test
mov
pop
pop
pop
daa
lea
inc
pop
repz
jb
mov
xor
test
sub
pop
enter
out
imulb
sbb
lea
fdivr
xor
jp
push
add
sub
movsl
imul
lock
sub
aas
cld
push
loopne
push
mov
pop
xor
push
mov
roll
mov
into
sub
repnz
call
insb
orb
pop
into
xor
sub
mov
cs
scas
js
insl
stc
xchg
dec
cli
outsl
insl
jg
jl
jbe
inc
rcrb
test
xchg
repz
rorl
push
movsl
mov
das
mov
jg
stos
inc
jno
int
insb
in
push
inc
push
out
sbb
shrb
pusha
ret
into
cmp
rol
push
lret
cmp
mov
icebp
jle
mov
inc
clc
pop
test
testb
push
in
dec
lods
xor
push
push
test
mov
push
jne
xchg
lret
xchg
lret
inc
shll
inc
xchg
jae
insl
pop
test
push
pop
or
out
pop
jmp
sbb
test
aaa
inc
lahf
ret
add
xor
mov
cmp
adc
mov
ds
jns
adcl
addb
test
jb
add
xchg
sub
mov
sub
insb
adc
inc
loopne
adc
xor
fadd
popf
sarb
jnp
icebp
cmpsb
jmp
ret
jl
push
push
lods
and
push
dec
push
sub
add
fistl
jo
mov
add
inc
lahf
or
outsl
push
call
mov
les
adc
cld
xor
jge
insb
xlat
dec
jo
jnp
fmull
and
idiv
mov
lcall
cli
fbld
lods
xchg
test
sbb
xor
shlb
or
and
inc
or
inc
jmp
shl
mov
dec
mov
lock
mov
cmpsl
es
push
xchg
or
dec
dec
scas
jnp
test
icebp
adc
rolb
in
sub
loop
fwait
adc
mov
jg
scas
jns
std
hlt
xchg
imul
push
out
fisttpl
adc
movsb
test
ds
fldln2
xchg
cmc
leave
stc
mov
sub
cld
in
pop
rorb
orl
adc
inc
xor
lahf
pop
dec
fcmove
xor
sarl
outsb
jmp
and
int
xorl
sub
sbb
add
pop
adc
inc
xchg
in
lret
add
inc
orb
add
push
movsb
mov
mov
jnp
ficoms
jno
andb
pop
fcmovne
sub
std
cmp
mulps
cmpsb
test
push
mov
and
mov
or
pop
loop
add
xlat
rol
jg
pop
scas
shrb
lea
mov
push
dec
sbb
lfs
xchg
outsl
les
rol
out
out
fcoml
outsb
adc
push
push
mov
test
mov
arpl
pop
inc
cltd
ret
xlat
in
popa
sub
fbld
ds
sbb
clc
sarb
xor
xchg
mov
lcall
inc
iret
jo
test
push
cmp
pusha
mov
bnd
adc
mov
outsl
and
lock
lret
cmp
into
jnp
add
push
add
sti
xchg
int
or
dec
testb
out
les
cld
xor
sbb
ja
test
imul
divb
sbb
cmp
dec
popa
pop
imul
mov
cmp
test
les
or
cmpsl
shrb
push
mov
je
fwait
mov
das
cld
cmp
inc
mov
inc
inc
xorl
mov
xchg
stos
pop
inc
jecxz
arpl
xchg
xchg
cmp
jo
inc
or
test
cli
shll
cmp
sub
or
or
daa
cli
cld
sbb
orl
clc
ljmp
sub
mov
jmp
lea
jmp
adc
das
jl
shrl
js
sbb
sub
jb
jae
iret
bound
xchg
je
or
out
sarl
dec
adc
add
mov
mov
adc
jecxz
mov
sbb
js
mov
clc
add
pop
xlat
push
movsb
enter
or
mov
ficomps
repnz
cmc
dec
cmc
xchg
and
adc
adcl
fimuls
nop
scas
dec
adc
jge
mov
cmp
inc
in
pop
xorb
sbbb
mov
cmpsb
lea
jns
lret
jge
lods
and
mov
and
jge
push
aad
pop
pop
and
rcll
cmp
xchg
jecxz
flds
cld
lcall
movb
pop
jge
ret
insl
unpckhps
or
pop
pop
popl
fs
pop
shrd
daa
lcall
orl
and
aas
or
cmp
outsl
sbb
cmp
push
movsl
nop
aas
jmp
sbb
sbb
shrl
fbstp
add
mov
or
and
mov
icebp
jecxz
js
cmc
cs
inc
pushl
nop
pop
xchg
std
jl
fistpll
fdivrl
pop
sar
dec
push
iret
pop
pcmpgtd
cmpsb
dec
jmp
movl
and
add
jg
mov
hlt
push
cmp
lds
ja
dec
xchg
std
loope
filds
mov
ds
iret
stos
rcl
movsb
jo
adc
inc
or
rcr
xchg
mov
xchg
loopne
fistpll
sub
mov
mov
shl
xlat
add
mov
cmp
div
addr16
mov
and
pop
addr16
mov
add
mov
mov
or
divl
pusha
mov
mov
stc
add
jmp
xchg
nop
outsl
dec
fs
fdivr
aas
inc
cmpsb
cltd
sahf
jle
lods
and
aam
inc
imul
pop
pop
xlat
pop
mov
out
call
call
cmpsl
rcll
mov
mov
cmp
and
sub
lds
mov
xchg
fcmovnbe
add
jae
pop
adc
cmp
pop
ljmp
adc
into
mov
sub
in
les
cmp
and
sub
mov
jmp
adc
fstpt
xchg
mov
adc
stos
fistpl
pop
cld
pop
dec
jmp
stos
xchg
mov
xor
lods
xor
mov
test
mov
movsl
popf
vdivsd
js,pt
mov
pusha
mov
js
jno
xor
xor
sub
dec
cmpsl
sub
xlat
mov
loop
je
pushl
into
mov
clc
jmp
and
imul
in
mov
jp
mull
pop
mov
and
fwait
cmpsb
shlb
testl
jns
mov
shlb
sbb
mov
sbb
scas
mov
stos
test
fcompl
mov
ret
aam
or
stos
clc
inc
xor
add
adc
sub
lods
imul
mov
out
xchg
dec
and
ja
cmp
shll
jo
mov
jo
aas
cmpsl
lock
shrl
addr16
nop
dec
jmp
mov
xchg
push
adc
add
ss
repnz
stc
inc
xchg
lods
mov
inc
sbb
call
sahf
ret
sub
aaa
sbb
pop
mov
push
outsl
rorb
or
lahf
sub
fcmove
mov
pop
sti
ds
cmc
mov
outsb
xor
jbe
cmp
in
cmc
fcomi
jle
fxam
sarl
xchg
lcall
cltd
clc
push
lcall
mov
hlt
mov
xor
mov
sub
push
jle
pop
xor
jecxz
lea
psubsb
push
jp
dec
mov
or
xchg
mov
loop
cmc
sbb
lcall
out
sub
arpl
and
jmp
int3
aad
lods
pop
push
and
sub
ss
pop
mov
mov
iret
jle
mov
mov
add
lret
pop
call
test
test
test
stc
std
cmp
jg
push
jecxz
icebp
dec
mov
rcrb
jb
sahf
sub
cmp
rcl
dec
pop
push
call
jmp
jo
and
pop
js
and
decl
jg
loope
mov
jp
dec
jmp
nop
fsubrs
dec
cmpsb
inc
insb
repz
nop
mov
ret
loop
push
fsubl
pop
push
outsb
push
inc
inc
testb
add
add
sbb
cmp
mov
mov
lods
jecxz
ja
inc
jge,pt
lea
nop
jae
js
pusha
push
mov
stos
push
bound
test
negl
roll
lods
imull
int3
sbb
pop
outsl
push
mov
and
movsb
in
scas
jnp
adc
inc
iret
push
xor
pop
inc
xchg
or
out
mov
addb
arpl
jl
sbb
dec
fmul
scas
push
fldt
in
lret
arpl
inc
inc
mov
mov
notl
push
fidivl
adcb
popa
in
outsl
xor
inc
aaa
adc
sub
mov
rcll
jnp
mov
push
loopne,pt
inc
out
xchg
add
push
and
std
into
ficompl
xor
pop
sbb
pop
mov
repz
and
dec
pop
lds
adc
and
decl
stos
mov
dec
cltd
add
cwtl
mov
dec
xchg
loopne
in
xchg
and
cmp
sub
or
pop
mulb
int
sbb
int3
out
stos
cmp
aaa
xor
xchg
jmp
lcall
lods
push
xor
imul
adc
js
push
fs
pusha
pop
jecxz
jmp
aam
nop
or
dec
mulb
pop
and
xor
das
in
mov
mov
aad
adc
or
daa
cmpsl
in
pop
cmpsl
out
shlb
rorb
or
add
cwtl
popf
or
aaa
cmpb
in
outsb
pop
stos
sbb
lcall
push
shrl
pop
sbbl
xchg
add
add
lds
add
pop
mov
jp
popa
dec
cmc
test
icebp
or
fsubr
push
xchg
lods
dec
out
lods
push
fwait
push
sti
call
orb
xchg
fdiv
lods
pop
cli
test
adc
loop
jne
pop
push
hlt
mov
mov
dec
add
enter
dec
xchg
dec
push
xor
fdivrl
in
mov
cmpsl
out
ret
loopne
clc
xor
pop
and
adc
push
xor
stos
popf
fldcw
xchg
and
divl
inc
or
mov
fmul
xlat
outsb
lods
test
mov
fisttps
test
xor
sbb
mov
shll
loope
mov
addr16
mov
add
stos
scas
sti
pop
mov
out
fwait
sub
in
inc
and
pop
fsubrs
sbb
lods
lret
ret
out
lea
testl
out
js
push
pop
imul
add
mov
movsb
pop
mov
loope
cmp
int3
shll
les
sbb
dec
iret
mov
scas
adc
scas
jecxz
xchg
cmp
adc
xchg
jmp
inc
sub
lods
sub
add
test
xor
add
cmp
mov
in
dec
mov
sub
mov
pushf
push
lret
test
es
sahf
stos
jno
add
push
out
int
cmpsl
ret
iret
cmpsb
in
loop
pop
xchg
bound
jnp
inc
lret
mov
mov
leave
call
push
and
xor
jno
pop
inc
pusha
inc
ljmp
pusha
xchg
loop
lea
aad
mov
fwait
push
mov
rcrb
and
in
pop
xchg
add
invd
and
xchg
popa
sub
push
test
std
cwtl
mov
je
in
xchg
push
pop
ret
dec
imul
pop
and
dec
ficoml
mov
mov
in
outsl
scas
sbb
aaa
gs
sahf
cmpsb
ss
fsts
popf
mov
mull
xchg
dec
pop
cld
xchg
jno
jp
pusha
mov
mov
ja
call
clc
push
lods
fisttpl
fdivs
mov
push
mov
jp
add
pop
mov
xor
stos
or
push
insl
sahf
sub
data16
mov
jge
xlat
cmp
fdivr
and
cs
sbb
sub
cs
enter
jmp
jb
jl
adc
shlb
insb
cmp
cmp
sub
pop
popa
pop
dec
and
pop
dec
push
dec
push
ficoms
mov
sub
fcomp
adc
sbb
in
fdivrp
stc
mov
push
pop
das
push
lcall
mov
mov
or
es
rol
inc
jbe
jno
push
pop
repz
sub
adc
int
sbb
daa
hlt
add
add
jno
lcall
lods
scas
dec
cmp
ds
shlb
push
adc
jne
fwait
out
les
cld
mov
mov
mov
push
orl
jb
xchg
shll
cs
push
movsl
cmc
roll
lods
mov
cmp
dec
dec
jno
aad
fcmovnu
sub
pop
xchg
pop
daa
popa
jns
jmp
iret
fiadds
mov
mov
xchg
rcl
add
jp
or
mov
add
and
gs
bound
inc
jbe
add
pusha
add
mov
xor
mov
mov
jecxz
imul
add
and
pushl
ds
or
jle
or
xchg
xchg
ds
add
repz
pop
mov
cmp
in
or
cmc
mov
jg
dec
push
fld
std
sbb
adc
ljmp
and
pop
ss
jnp
cmp
into
cmp
xor
lds
xchg
inc
push
repz
in
dec
iret
rorb
pop
push
xor
mov
sbb
xchg
adc
jo
push
pop
lcall
int
xchg
shl
jmp
cmpsl
scas
call
outsl
dec
bound
nop
xlat
xchg
add
mov
pusha
sub
pop
jno
fmul
jne
in
sti
mov
test
sub
repnz
data16
es
aad
std
fldenv
mov
or
outsl
shll
push
lcall
inc
pop
pop
iret
adc
jne
iret
inc
cmp
in
dec
loop
lods
lods
mov
push
cld
xchg
inc
test
or
adc
lock
or
sbb
outsl
cmpb
sbb
or
inc
mov
ljmp
jbe
ja
mov
push
enter
or
sbb
mov
in
xor
out
repnz
pop
sti
pusha
dec
nop
pop
je
mov
push
jns
movsl
push
adc
loope
cmp
push
jecxz
dec
xchg
lods
inc
loopne
pop
mov
cmp
cmp
pop
sbb
clc
ja
sar
mov
mov
cmp
sbb
pop
or
icebp
incl
test
push
in
dec
jmp
bound
std
loopne
movsl
les
sub
daa
pusha
repnz
xor
push
sbb
xchg
and
int3
inc
test
lahf
adc
and
sahf
cmp
sar
inc
popf
or
cltd
out
sbb
je
push
add
test
cld
pop
pop
sub
push
cltd
adcb
in
jbe
sbb
cli
js
test
adc
adc
ficompl
aaa
or
repz
or
enter
into
pop
jae
xchg
repnz
repz
jge
pop
test
sbb
rorl
loope
mov
stos
fbstp
stos
jo
mov
adc
mov
mov
ds
test
cmc
mov
inc
sub
gs
xchg
divb
jno
das
lds
sbb
lcall
sbb
js
sub
mov
fnstenv
aas
pop
leave
add
stc
mov
adc
addr16
sbb
ret
sbb
or
cld
adc
fldcw
mov
das
out
pop
data16
mov
fsubr
test
mov
adc
fisubl
fisubs
inc
sarb
push
inc
push
insl
cmc
dec
dec
cmp
addb
jmp
pop
js
xchg
mov
dec
pop
rcrl
cmpb
rorb
and
arpl
addr16
cli
push
push
pop
mov
testb
std
mov
mov
hlt
sbb
cmp
aaa
adc
cld
pushf
xchg
jne
sub
cs
jge
jno
jp
dec
int
rcrb
notb
and
sub
loope
mov
pop
sbb
mov
push
outsl
or
fs
xor
inc
add
fisubrs
push
jnp
push
pop
stos
out
cwtl
popa
mov
outsl
push
push
push
pop
mov
idivb
je
mov
xor
xchg
shrl
sub
ret
sbb
add
sahf
lret
sbb
jecxz
mov
out
push
sbb
ja
fidivrs
mov
add
insb
mov
hlt
sti
rcrb
mov
pop
cs
jne
pop
test
in
outsl
idivl
jle
dec
jae
cmpsb
mov
sarb
mov
pop
mov
movsl
mov
dec
pop
aad
cld
or
inc
pop
filds
push
jbe
lret
push
or
pop
xchg
arpl
push
mov
aaa
jno
inc
jbe
push
cmpsb
shlb
push
scas
sub
xchg
lock
inc
in
flds
faddl
sbb
les
repnz
shrb
ret
aad
das
inc
mov
xchg
sub
mov
dec
loopne
jmp
call
xchg
inc
in
mov
scas
cmpb
or
and
ss
push
aad
cld
lret
push
insb
mov
stos
dec
jns
outsl
fisttps
ja
and
jg
rclb
adc
shlb
out
lds
out
test
pop
sub
movsl
int
push
dec
ret
pop
pop
adc
jno
int
mov
jo
inc
sub
jno
mov
je
mov
or
or
scas
dec
aad
sahf
sbb
sysexit
out
test
in
inc
pop
loope
shll
movsb
xchg
xchg
test
mov
stos
dec
sarb
enter
imul
jg
out
jb
cmp
xor
push
pop
jo
mov
test
movsl
jae
movsl
sarl
sub
inc
stos
mov
jge
roll
rcrl
lcall
pop
aam
inc
sbb
popa
ja
das
lret
xor
addr16
mov
or
push
insb
shll
cld
xchg
mov
ficomps
xchg
pop
ss
outsb
xchg
inc
xchg
cltd
ss
mov
mov
cmp
mov
xchg
sarl
push
mov
js
orl
sbb
int3
mov
mov
in
push
and
cli
pushf
xlat
xchg
popa
jns
pop
jmp
xchg
xorl
cltd
sub
mov
loopne
cs
or
jmp
cltd
adc
inc
adc
sub
js
sbb
mov
pushf
imul
mov
mov
shr
fsubrs
xchg
adc
mul
push
mov
mov
lea
mov
and
hlt
movsb
imul
cmp
cld
popa
cmp
pop
mov
push
lea
ja
mov
mov
js
jae
rcrl
push
jl
ds
jae
pop
or
sti
aaa
insl
cmc
lea
push
pop
mov
icebp
mov
stc
popa
mov
ret
incb
test
dec
movsl
xor
mov
sbb
ds
push
cmp
call
push
lea
test
push
mov
inc
mov
movsb
or
lods
imul
jno
bound
add
mov
scas
repnz
jge
xchg
movl
pusha
xchg
cs
cwtl
pop
cltd
nop
imul
outsb
out
bound
sub
mov
arpl
test
hlt
dec
es
push
subl
pop
lret
pop
pop
mov
or
jmp
aad
jge
and
push
lods
push
mov
mov
sbb
addb
leave
add
cld
je
xor
roll
loop
mov
push
rorl
imul
clc
popa
loope
mov
add
in
or
pop
imul
in
inc
testb
arpl
dec
mov
push
xor
out
adc
xchg
lret
inc
cmp
lods
cmpsl
or
fld1
mov
mov
xor
push
hlt
stos
decl
mov
aaa
mov
mov
jg
adc
add
or
mov
push
and
and
aaa
lds
test
sbb
add
out
adc
pop
popa
lcall
xor
pushf
mov
insb
sti
out
sbb
cmpl
jg
dec
mov
sub
ret
in
sbb
dec
les
push
movl
xchg
mov
in
lods
test
mov
cmp
js
mov
les
gs
pop
jno
mov
mov
jle
or
ljmp
ret
leave
mov
nop
mov
pop
mov
shlb
push
ds
or
ffree
cmp
js
adc
xchg
repnz
das
cmp
inc
push
sbb
cld
imul
inc
pop
push
les
xor
cmpsb
mov
adc
fimuls
xor
pushf
push
xchg
push
mov
stos
es
lods
and
mov
jmp
add
leave
cltd
call
xor
inc
mov
loop
clc
pop
lods
int
or
daa
adc
lcall
shr
pop
cmp
test
sub
jo
stos
mov
out
loop
mov
xor
sbb
mov
fisttps
lods
ss
test
pop
lea
in
jmp
aas
inc
add
clc
push
lret
cmpsb
mov
shrl
hlt
xchg
dec
imull
sbb
ret
jnp
mov
pop
sub
mov
add
mov
inc
and
xchg
dec
dec
cmp
xchg
xchg
push
cld
sub
lock
pop
decb
and
and
cli
sbb
popf
sbb
repz
dec
jp
pop
ss
lods
pop
out
jecxz
lds
aas
pop
adc
out
cmc
mov
sbb
or
mov
mov
scas
pusha
and
jnp
mov
dec
cwtl
cmpsl
out
adc
ds
test
adc
jns
jns
aad
popf
xor
out
mov
ret
and
sbb
inc
enter
push
push
lods
sub
mov
pop
les
dec
add
inc
mov
aas
mov
xchg
out
sbb
sub
sbb
gs
popa
and
sub
test
lods
jmp
fs
mov
movsb
mov
nop
repnz
in
stos
mov
fistpl
imul
mov
into
or
cs
adc
in
mov
or
sub
ljmp
pushf
push
inc
shll
cmp
cmpsl
sbbl
mov
fdivl
sub
clc
fdivs
cltd
sub
adc
pop
inc
xor
pusha
in
arpl
in
js
imul
inc
jo
in
subl
cmpsb
or
add
xor
dec
mov
adc
add
inc
push
stos
cld
jno
mov
lds
mov
mov
mov
jge
mov
sub
outsl
aas
adc
dec
aam
sbb
fisttpl
jecxz
mov
pop
popf
or
pop
add
out
inc
mov
icebp
out
dec
push
push
sti
test
mov
mov
jo
xchg
ret
push
ficomps
syscall
test
cld
jl
mov
mov
inc
mov
inc
in
push
jno
add
int3
xchg
mov
xchg
icebp
mov
push
enter
lods
mov
mov
fildl
jge
jb
add
inc
push
xor
mov
or
dec
mov
clc
xor
lahf
add
mov
sbb
and
xchg
shl
dec
mov
lahf
xchg
xchg
jo
push
mov
lcall
imul
and
jo
in
adc
test
dec
fbld
cmp
sbb
in
jo
dec
push
insl
add
in
inc
xor
push
test
cmp
hlt
jno
int
inc
mov
aas
lds
mov
fs
aad
popa
mov
or
xor
and
aaa
sub
adc
add
mov
and
pop
adc
pop
xlat
rcrb
fisttpll
lods
and
mov
xchg
xchg
fwait
push
cli
jmp
lret
outsb
loop
aas
cmc
mov
cmp
ret
sbbb
xor
mov
ret
and
js
add
cli
cmpsb
mov
jns
repnz
push
adc
dec
cmpsb
mov
xorb
or
or
mov
pop
mov
lret
out
mov
sbb
pop
jnp
arpl
dec
push
push
mov
xchg
jno
jb
push
mov
into
in
xchg
out
stc
shr
fmulp
es
adc
pop
testb
filds
out
cmp
outsb
cmp
orl
or
out
aas
dec
pushf
repz
ljmp
jne
xchg
in
and
adc
xchg
outsb
jmp
sbbb
repnz
test
mov
in
lcall
and
stc
mov
jg
push
mov
push
add
rorl
scas
push
inc
pop
mov
sahf
mov
jo
into
mov
sbb
add
or
cmp
jl
or
push
xor
ss
test
fstl
mov
loope
xchg
mov
loope
scas
xchg
das
xchg
cld
or
daa
jo
mov
mov
cmc
sahf
cld
andl
out
mov
xchg
jl
mov
outsl
push
sbb
sbb
and
mov
ljmp
jae
xor
jb
pushf
out
jno
mov
inc
mov
iret
aam
xchg
lahf
jns
xlat
inc
ret
or
or
filds
lds
dec
mov
or
xor
ret
mov
or
mov
andb
jp
mov
cmp
pop
outsl
mov
pop
pop
cltd
mov
push
lahf
add
ret
jae
cmp
subl
mov
fisubl
das
popf
outsb
fiaddl
push
lock
xchg
add
or
jb
aas
xchg
fnstenv
out
dec
out
hlt
int
mov
nop
aad
imul
mov
dec
in
push
stc
mov
pushf
lret
inc
inc
mov
lret
aad
sub
fldcw
push
xchg
adc
xor
cmp
jp
cli
mov
pop
push
cmp
mov
and
mov
loop
jno
std
cmp
aas
test
bound
sbb
mov
addr16
pop
push
cmp
xchg
adc
jmp
aad
jbe
std
lock
sub
je
adc
pop
adc
sub
lea
iret
pop
lahf
pop
sahf
jno
push
aad
cmpsb
sub
xor
jne
mov
fwait
push
data16
notl
or
pop
add
lret
dec
add
ficomps
add
fdivrp
ja
sub
in
shlb
mov
repnz
dec
jae
sub
dec
xchg
cmp
add
fisubs
loop
jmp
xchg
rcrl
lea
shlb
mov
jp
pop
adc
cmpsl
push
std
mov
loopne
mov
insl
imul
inc
clc
and
dec
ljmp
sti
dec
jns
xchg
std
jp
ret
ficoms
sbb
lods
lods
out
mov
es
popf
cli
sub
or
sub
movsb
pushf
sahf
stos
dec
popa
lret
jecxz
add
rorl
sbb
xchg
int
ss
sub
cld
xchg
mov
mov
sub
insl
inc
push
sub
je
push
scas
lret
sbb
test
mov
test
and
mov
push
lahf
daa
xlat
out
test
mov
out
jmp
cld
push
mov
jg
insl
fucomi
lds
or
cli
mov
outsl
push
repnz
daa
fisubrl
xchg
jb
and
ss
or
out
stc
aas
or
iret
rcll
ret
and
test
lods
cmc
xor
cmp
push
push
daa
rcl
cs
mov
inc
mov
outsl
pop
lods
stos
test
adcl
adc
mov
pop
fldl
fidivrl
xor
fwait
push
pop
lahf
out
jle
jb
cmpsb
adc
xchg
lahf
mov
adc
jl
add
popf
stc
das
push
inc
mov
mov
jl
fldl
das
sti
sbb
daa
sti
jge
xchg
out
divb
stos
subb
dec
push
or
jle
imul
imul
stos
xchg
repnz
std
fnstenv
cmp
xchg
fdiv
loop
int
xchg
pop
dec
cmp
sti
aas
popl
pop
sbb
xchg
sub
mov
push
stc
gs
mov
pusha
movsb
mov
std
fbld
loop
fisttpl
or
or
mov
xchg
jns
inc
jo
xchg
lret
mov
rol
popa
insb
inc
pop
outsb
pop
sbb
jno
dec
bound
aam
jp
subb
je
rcll
popf
fstpt
xlat
sbb
xchg
xor
lret
add
xor
ret
mov
in
test
dec
fwait
push
adc
popf
mov
mov
divb
adc
cmp
inc
jno
rolb
fwait
jmp
fiaddl
dec
outsl
jno
mov
jecxz
push
repz
shll
lcall
push
fs
push
mov
pop
adc
int3
inc
shlb
out
mov
mov
aas
sub
xor
insb
sub
add
jmp
pop
das
fimuls
mov
mov
sbb
shrl
add
mov
fcom
jp
or
jno
and
cmp
mov
pop
mov
mov
sbb
cli
out
repz
adc
loop
stc
push
adc
inc
xchg
cwtl
insl
ljmp
lcall
mov
xchg
add
andl
repz
pop
pop
in
jle
fdivrl
jns
jne
pop
lods
sub
push
adc
push
outsl
jns
or
in
or
adc
sub
in
add
cli
ret
cmc
ds
push
jl
cmp
hlt
ljmp
cmpsl
add
mov
lret
mov
xor
mov
mov
shll
xor
xor
pop
jmp
roll
mov
out
ret
mov
sub
call
movsl
cmp
adc
jl
jno
add
clc
mov
sahf
pop
repnz
repz
mov
les
scas
int3
push
rclb
and
push
int
rorl
aam
pop
lods
dec
mov
jns
mov
cmp
cld
adc
sub
or
cmp
and
push
cmp
add
clc
push
in
and
decl
stos
xchg
adcl
int
and
stos
clc
scas
pop
pushf
and
sbb
popa
and
lret
or
shl
push
popa
out
push
pop
or
mov
test
out
xor
cmp
sbb
push
jmp
call
shlb
mov
loop
dec
loope
nop
mov
lock
mov
jae
mov
adc
dec
cmp
sub
aas
aam
inc
sub
mov
idiv
popa
jmp
push
mov
andb
stc
xor
add
dec
inc
dec
or
into
scas
sub
mov
sbb
out
pop
inc
mov
pop
cltd
daa
pop
add
xchg
and
mov
out
mov
and
jnp
add
inc
jnp
push
sbb
mov
cwtl
inc
mov
mov
mov
leave
xchg
das
daa
adcb
negl
int
adc
push
clc
jb
jae
fdivs
popa
js
adcl
enter
jmp
add
test
push
stos
adc
aam
fs
cmp
or
jo
or
pop
mov
mov
mov
mov
fwait
enter
sti
movsl
pop
pop
sarl
add
or
idiv
sub
mov
and
dec
sub
push
xor
inc
in
or
and
xchg
imul
out
lahf
data16
sub
dec
mov
lock
out
cmp
inc
inc
enter
push
sub
js
jae
cmp
mov
pushf
xchg
lret
mov
sbb
push
ja
sbb
add
sbb
ja
adc
fdiv
push
jg
mov
jl
and
sbb
pop
xchg
push
xor
and
inc
sbb
lods
call
pusha
jmp
hlt
mov
shrl
add
jae
jg
int3
cmp
pop
adc
inc
sub
mov
in
dec
mov
mov
sbb
mov
into
in
icebp
sub
push
cmp
in
lock
cmp
loopne
sbbw
jb
and
std
mov
idivb
sub
adc
sub
movsl
in
cwtl
jl
daa
xchg
fists
test
xchg
shlb
inc
fildl
pop
mov
sarb
fstpl
movsl
ret
pop
icebp
out
jp
cld
std
pop
mov
xchg
sub
sbb
nop
mov
push
add
insb
jo
cmp
mov
mov
mov
int
inc
xor
lods
adc
lods
dec
pop
adc
dec
das
sbb
push
shll
xlat
sti
dec
mov
or
nop
push
test
inc
adc
dec
sti
mov
jb
xchg
mov
cmpsl
add
aad
clc
pop
es
mov
sub
aam
push
out
enter
ja
mov
mov
lods
sub
xor
push
pop
push
fdivs
shl
in
cmp
pop
mov
push
hlt
pushf
lcall
push
lock
imul
mov
dec
jge
pop
inc
lds
xchg
cmp
mov
jae
add
pop
lods
pusha
out
xchg
pop
or
sbb
xor
pop
xchg
jmp
pop
pushf
xchg
push
mov
pop
pop
popl
fidivl
jb
jp
cltd
push
scas
dec
add
xor
repnz
xor
push
test
mov
ljmp
inc
jge
add
rol
dec
sarb
in
test
xchg
fdivrl
ror
sbb
jge
adc
and
mov
xor
outsl
pushf
pusha
or
inc
out
xchg
mov
repnz
shrb
mov
pop
shll
out
lahf
and
mov
aas
jne
or
daa
xor
test
xchg
out
inc
push
and
ss
jle
sub
cmc
daa
adc
jmp
shlb
pop
jle
sub
xchg
mov
dec
jg
or
sti
aad
pop
roll
aad
cmp
lock
lret
push
out
and
mov
ret
fnsave
pop
ds
es
inc
jnp
fxch
dec
adc
sbb
sbb
mov
cmpsl
push
shll
rorb
sbb
ljmp
sub
jb
adc
popf
jg
mov
push
test
repz
pushl
aaa
jp
nop
pop
xchg
popf
adc
fucomp
push
aam
adc
xor
mov
mov
push
int
pop
inc
iret
insb
push
adc
push
int3
or
jo
mulb
ja
and
mov
cs
inc
rorl
inc
xor
pushf
jns
scas
add
daa
outsb
cltd
cmp
test
mov
add
mov
push
fs
xchg
cmp
and
or
outsl
mov
mov
mov
imul
stc
cwtl
lods
mov
sub
test
movsb
push
push
cli
cmp
outsl
lds
dec
and
cmp
ror
in
mov
out
out
mov
hlt
out
enter
jae
inc
test
xor
push
popf
and
jno
mov
or
test
arpl
adc
in
push
add
push
add
mov
fdivp
xor
scas
andl
test
mov
out
xchg
sub
repnz
into
sbb
sbb
lock
dec
xor
adc
lcall
or
adc
mov
cmp
push
aas
gs
shrb
fists
xchg
inc
sbb
adc
sbbb
aas
pop
scas
stos
xlat
out
inc
es
dec
gs
sub
push
jne
jb
pusha
jecxz
jle
pop
or
sbb
jp
mov
adc
scas
xchg
mov
lods
cmp
cmp
pop
insl
cs
sub
repnz
xlat
movsl
or
pop
addr16
or
lahf
fstl
cmp
pop
ljmp
fs
shlb
sti
clc
mov
and
xchg
addl
add
loopne
mov
imul
sbb
and
lcall
insb
push
mov
cwtl
dec
xchg
jecxz
outsl
xchg
stos
test
add
stc
mov
sbb
ds
xor
mov
cmp
cmp
mov
sub
data16
sub
or
jae
hlt
push
pop
pop
fidivrl
sti
adc
xchg
push
jnp
jge
mov
pop
pusha
flds
leave
out
or
jp
push
mov
xchg
mov
add
jnp
add
adc
sahf
cmpsb
mov
insl
lcall
cmpsb
in
icebp
xchg
mov
sarb
mov
mov
xchg
ljmp
out
insb
pusha
les
fnstsw
fwait
xor
dec
dec
int3
ljmp
xor
popf
dec
push
jg
push
sub
adc
dec
mov
jle
lcall
in
out
int3
mov
push
ljmp
je
out
stos
inc
ret
out
popf
xor
add
stos
push
xchg
cli
push
xor
xor
into
out
pop
lcall
and
xchg
inc
call
xchg
rcl
imulb
vmaxsd
sub
jge
mov
insl
cltd
pop
dec
iret
adc
and
test
adc
fnstsw
inc
je
pop
mov
out
dec
jle
shll
mov
clc
inc
iret
sbb
loope
out
fwait
in
dec
lret
jecxz
sti
or
rorl
xchg
sub
bound
or
mov
aaa
clc
inc
lods
popa
adc
lea
sbb
cmp
push
add
inc
insl
mov
pop
jl
jne
cmp
mov
jle
jmp
jb
jge
out
in
sti
pop
push
cmp
sub
sub
add
stos
cmp
aad
daa
addr16
sahf
outsl
int
inc
inc
stc
bound
mov
xor
add
xchg
jmp
cmpsl
mov
pusha
inc
jae
movsb
and
pusha
addb
adc
push
rcl
jne
and
mov
adc
mov
fists
aad
insb
cmp
fs
jle
test
mov
dec
mov
xor
push
xchg
and
xor
jae
repnz
mov
cs
shl
int
lods
seta
test
mov
push
push
cltd
lcall
and
aas
hlt
pop
jo
add
pop
pop
adc
add
fstpt
repnz
add
xor
repnz
push
fldcw
jb
adc
popf
sbb
dec
mov
icebp
iret
fistps
stos
pop
cmp
push
bound
xor
xor
js
mov
je
mov
fadds
dec
nop
add
fists
mov
sub
in
cli
ss
cwtl
sub
clc
jnp
pop
lret
push
repz
movsb
add
fisubrs
pop
cltd
rcrl
add
psraw
add
mull
adc
sbb
das
inc
mov
test
sbb
lcall
lock
push
push
ret
scas
dec
push
rcr
hlt
push
mov
mov
jno
imul
scas
mov
imul
jo
outsb
fistl
xchg
ja
dec
xlat
mov
mov
mov
in
mov
lods
and
outsb
ds
popa
fucomi
and
inc
gs
mov
fcom
mov
ficoms
push
jnp
daa
shr
mov
dec
pop
popa
ds
insb
mov
xor
mov
clc
inc
outsb
movsl
fcmovnb
push
gs
xchg
in
mov
hlt
in
cwtl
test
mov
fistl
sbb
fwait
inc
pusha
addr16
movsb
movsb
andl
jns
sbb
shlb
inc
out
mov
ret
lods
rol
jl
xlat
and
jmp
and
popf
add
sarb
jecxz
inc
rclb
dec
adc
push
add
dec
loop
xchg
dec
sbb
pop
add
imulb
inc
fadds
scas
out
sbb
in
and
xchg
movsb
hlt
shll
dec
cwtl
fs
in
jecxz
out
xlat
and
or
pop
adc
xchg
add
dec
out
int3
repnz
xchg
sbb
lcall
sbb
cmp
sbb
pop
add
dec
insb
fistl
dec
loopne
insl
lods
aas
push
fprem1
xor
movsb
jle
les
xor
fstpl
adc
insl
sbb
mov
scas
arpl
mov
dec
add
addr16
jo
lods
shlb
in
nop
push
lds
fadds
inc
rorl
shrb
jp
pushf
cmc
lahf
and
ss
movsl
and
pop
divl
cld
mov
stos
ds
lods
inc
imul
inc
or
fnsave
adc
nop
push
cli
mov
lret
and
mov
je
xor
sub
ljmp
shll
movsb
in
jns
lods
sub
dec
dec
test
pop
adc
push
int
sbb
and
arpl
sub
stos
inc
hlt
rcll
loope
incl
repz
push
cmpsl
sbb
arpl
call
js
dec
dec
hlt
enter
imul
fs
ret
cs
lret
fwait
jno
xchg
loop
push
xchg
cld
clc
xor
repz
adc
paddd
movsl
or
pusha
xor
clc
add
outsb
jno
xchg
outsl
or
inc
xchg
inc
xor
repz
ljmp
inc
mov
xlat
addr16
out
jg
rorb
mov
stos
xchg
ret
fildll
inc
cmp
iret
push
popf
test
movsb
inc
fwait
out
loopne
repnz
inc
xor
ret
pop
cmp
pushf
aas
add
cmp
inc
outsb
sub
insb
and
cmpsl
cli
loope
jnp
gs
push
fcmovne
out
cs
outsl
cltd
mov
arpl
lea
and
jne
mov
xor
movsb
roll
xor
ljmp
dec
xchg
adc
push
mov
ja
push
pop
stos
cmp
lret
stos
dec
xchg
jne
and
popf
xchg
lock
hlt
jb
add
adc
xor
rcl
add
addr16
lods
mov
dec
pop
jnp
dec
jno
jnp
pop
dec
push
int
inc
jl
imul
repnz
or
in
fucomp
inc
push
insb
in
cmp
mov
je
xor
imul
in
in
xchg
push
sub
sahf
pushf
cltd
pop
xchg
shll
out
mov
leave
cmp
dec
xchg
insl
lret
add
fsubl
xchg
lret
movsl
inc
out
testl
xchg
sub
xchg
mov
jb
dec
cmp
int3
mov
leave
push
add
leave
or
sahf
xchg
dec
test
fcmove
loop
repnz
jae
clc
xor
adc
mov
roll
inc
vmaxps
push
push
push
cmp
dec
jg
adc
ljmp
cmp
enter
push
cmpsl
mov
testb
xor
shrl
lret
lret
push
cld
xlat
aad
ljmp
mov
popa
push
out
mov
pop
pop
mov
ret
push
jp
mov
dec
lock
data16
dec
ss
in
sub
jge
loop
aam
xchg
popa
lret
in
or
jo
push
jno
fsubl
sub
cld
xor
imul
movsl
mov
mov
iret
aaa
jnp
inc
sbb
into
stos
cmp
inc
dec
in
lds
xlat
dec
insl
sub
nop
and
pop
fstps
repnz
outsl
push
clc
hlt
jge
stc
mov
in
mov
adc
daa
jo
mov
xchg
testb
mov
cmp
cltd
fsts
cmp
lock
dec
mov
mov
idivb
adc
je
inc
outsb
dec
xchg
cs
into
lcall
sbb
and
xchg
adc
push
pusha
dec
test
xlat
mov
mov
imul
rclb
arpl
jg
test
inc
fwait
rorb
push
ret
rcr
pop
lret
cmpsl
rcrb
movsb
jmp
das
mov
je
movsl
cmp
dec
dec
rol
in
and
xchg
aaa
or
dec
ljmp
aam
push
and
shrl
std
cmpsb
mov
adc
push
adc
sti
dec
jl
sub
lret
mov
jecxz
pop
mov
fsubl
xor
mov
stos
add
pop
jnp
push
jae
jnp
or
lcall
fs
xchg
das
jbe
mov
adc
enter
lret
fwait
pop
loope
mov
add
xchg
pop
xchg
push
icebp
test
inc
inc
cmp
push
mov
cmp
mov
ljmp
das
movsl
in
mov
aam
mov
xchg
pop
or
inc
js
jbe
shl
xchg
orb
stc
xor
mov
dec
sub
int
or
lahf
clc
outsl
pusha
and
stc
addr16
insl
lahf
setae
adc
or
and
pop
clc
jl
fimuls
mov
xchg
dec
icebp
outsl
fdiv
mov
sbb
inc
mov
xor
scas
mov
sub
xchg
lcall
sbb
fcoml
test
cmpsl
fidivrs
xchg
imul
jno
fistl
jo
dec
pushf
popa
push
loop
pop
ds
outsl
dec
cmp
mov
je
xchg
aam
subl
shrb
sub
xorl
xchg
inc
or
xor
fwait
pop
fldz
jne
push
mov
jmp
test
dec
and
shrb
adc
je
sub
xor
adc
inc
push
push
ret
mov
mov
mov
xor
mov
add
sub
and
push
sbb
mov
mov
jp
cmpsb
bnd
sbb
stos
dec
inc
cli
pop
popf
aad
or
xchg
xorb
lret
or
add
insb
jl
mov
dec
pop
pusha
dec
sete
fs
stos
in
orl
repz
pop
aad
rcrb
push
arpl
cmp
or
arpl
inc
inc
push
notl
gs
and
mov
pop
jmp
xor
fstpt
cmpsb
stos
cmp
test
or
sbb
lods
pop
lret
scas
addr16
pop
or
fistps
mov
or
pop
xchg
adc
jmp
or
std
in
xchg
push
push
mov
inc
sbbb
adcb
jbe
sub
in
dec
push
add
loope
lock
xor
push
jae
stos
je
pop
xor
add
xchg
lret
adc
dec
call
or
push
adc
fwait
sbb
jo
mov
and
outsl
movsl
lods
push
add
xchg
rep
movsl
inc
push
pop
test
jb
clc
aam
aas
cwtl
xchg
push
inc
lods
mov
add
stc
push
outsb
lret
pop
mov
movsb
imull
cmpl
arpl
in
scas
stos
ss
push
lcall
xor
cmpsb
pushf
gs
lret
push
out
pusha
or
cld
dec
test
add
push
dec
sub
sbb
sti
cs
xchg
mov
rorb
jg
loope
enter
stos
adc
jae
xchg
cmp
push
pop
in
xor
lret
stos
mov
pop
ret
pop
adc
enter
push
je
dec
jl
mov
fstps
xor
leave
loop
lods
test
xchg
in
dec
xchg
inc
jnp
ficoml
xor
cmp
and
xor
adc
inc
rolb
or
ror
test
mov
adc
push
sbb
and
cmc
cmp
stos
stos
xchg
daa
push
je
add
ja
lods
sub
and
lds
in
and
repnz
sub
roll
and
arpl
inc
cltd
xchg
inc
mov
jnp
mov
sub
and
call
adc
pop
popf
sub
mov
popa
adc
mov
mov
mov
sub
push
adc
push
push
ret
add
out
js
and
jle
sub
inc
lret
lea
mov
stos
cmpsb
sub
push
push
sbb
mov
jns
jno
sub
push
xchg
xor
into
mov
sar
fldenv
icebp
daa
clc
xchg
jno
adc
lret
lea
xchg
mov
in
lods
sbb
jnp
aas
les
lea
mov
ret
push
ljmp
imul
lods
inc
adc
mov
movsb
mov
mov
and
scas
jnp
mov
jo
testb
clc
push
scas
sbb
pop
adc
mov
mov
sbb
fbstp
xor
mov
repz
inc
sbb
mov
jge
test
notl
lret
in
xor
js
cmp
cmp
push
pand
loope
add
and
inc
imulb
test
jns
jns
push
xchg
push
add
test
xchg
outsl
sbb
data16
in
stos
push
dec
xor
xchg
pop
aas
mov
test
push
into
daa
enter
jecxz
adcl
idivl
mov
nop
int3
jo
lods
clc
orb
int3
js
lods
loopne
fcompl
cmpsl
xchg
lcall
aas
jl
cmp
repz
je
sbb
push
jge
jnp,pt
sbb
mov
push
out
inc
gs
mov
and
sahf
sbb
jo
add
xor
or
cmp
mov
xchg
adc
push
ds
fwait
adc
push
xchg
dec
loop
stos
bound
adc
push
sub
movsb
aad
push
shll
test
repnz
stos
sbb
shlb
test
jbe
mulps
dec
clc
inc
arpl
cltd
jno
fwait
ret
adc
dec
gs
rorb
add
cltd
sbbb
cmpsl
jecxz
mov
mov
xor
test
movl
or
add
sbb
clc
cltd
daa
jae
call
mov
je
nop
jle
xchg
fsubs
cmpsl
jp
insl
inc
pusha
cmp
aas
add
pushf
pop
notb
push
jno
sarb
mov
add
pop
xchg
in
or
mov
mov
pop
loope
loope
pop
xor
test
insl
ljmp
imul
mov
icebp
push
lret
dec
or
imul
xchg
sub
cmp
ficompl
push
inc
imul
mov
jnp
xor
sub
clc
lret
xlat
add
ja
mov
inc
mov
shrb
mov
lods
and
mov
mov
enter
push
push
fadds
in
jmp
loopew
movsb
popf
mov
clc
cld
js
jo
cmp
mov
fmul
xor
mov
or
test
rcrl
cld
jb
and
dec
xchg
pop
cmpsl
pusha
pop
mov
repnz
dec
jbe
sti
stos
mov
inc
mov
lret
dec
repz
mov
insl
fists
js
cwtl
nop
ja
mov
in
push
xchg
les
int3
xor
mov
fwait
nop
push
jge
push
xchg
cmp
aam
cmp
pop
les
pop
jl
ret
xchg
mov
in
outsb
cmp
das
push
insl
jnp
cmp
xlat
cmpsl
or
cmp
mov
xchg
mov
mov
push
jne
dec
fildl
push
cmp
push
jg
in
jp
movl
mov
into
adc
and
dec
sarb
clc
add
mov
test
ret
sbb
pminub
roll
or
mov
sbbl
mov
out
mov
outsb
dec
ss
int
pop
int3
cld
ss
int
add
pop
sbb
cmc
movsb
leave
lods
int
popf
mov
mov
jp
arpl
movsb
add
mov
rolb
pop
push
cmp
add
nop
mov
cmc
aam
arpl
mov
mov
jp
or
or
dec
mov
addl
mov
xchg
jmp
pop
and
mov
adc
bound
add
cld
lods
shl
popf
ss
xchg
outsb
out
jg
cmp
ljmp
push
scas
add
cmc
lret
pop
adc
sbb
inc
cmpsl
pop
dec
add
mov
ret
pop
adc
lock
outsb
adc
movsb
stc
mov
stos
push
pop
sbb
in
pop
ss
popf
mov
xor
rol
test
inc
fs
mov
shlb
sbb
mov
enter
cwtl
cli
jns
jle
sub
int3
adc
jno
push
jmp
pop
fstpt
fadds
xor
xor
cmp
data16
jnp
fwait
mov
jno
xchg
int3
fwait
xchg
je
push
repnz
leave
call
rclb
int
negl
sub
int3
sahf
sub
ret
ss
push
leave
data16
ret
cld
mov
inc
out
sub
adc
sbb
rclb
fwait
mov
cmc
flds
ja
aam
in
movsb
stos
xchg
dec
sbb
cmp
lcall
loope
cmp
mov
js
hlt
sbb
cmp
mov
xchg
jbe
lods
mov
pop
and
add
sub
lods
into
sbb
test
xor
or
loope
pop
or
and
cmp
dec
mov
xor
inc
sarb
pushf
mov
div
clc
repz
ja
mov
sahf
fcoml
adc
cmc
xor
stos
or
push
mov
add
je
xlat
loopne
aas
dec
iret
into
stc
push
sahf
gs
scas
das
sbb
mov
out
enter
loopne
xchg
shll
jle
inc
sub
xor
xchg
sbb
int
faddl
push
adc
std
div
rcll
stos
mov
je
jmp
or
es
int
sub
sahf
ficompl
xlat
and
test
rolb
scas
sbbl
pop
mov
cs
inc
jbe
inc
cmp
in
sbb
ret
sbb
mov
shlb
icebp
xchg
push
lock
js
orl
les
lea
sub
inc
sbbb
xor
pusha
xchg
enter
insb
mov
mov
lods
nop
imul
nop
pop
fwait
adc
call
xor
out
pop
in
cwtl
ret
lea
sub
mov
dec
pop
jge
xor
inc
int
fcoml
jno
inc
mov
test
das
imul
inc
cmp
test
pop
mov
or
or
sub
popf
cmp
cli
insl
and
in
cltd
dec
jno
mov
cwtl
xchg
push
mov
int
pop
aaa
jg
out
jl
rol
xlat
inc
aaa
fistpl
dec
fisubs
pop
hlt
push
sbb
add
adc
sub
aaa
push
test
mov
arpl
icebp
into
addb
or
adc
xor
pop
stos
cli
dec
cmpsb
mov
adc
iret
imul
cmp
jge
push
jmp
sub
scas
shlb
push
pop
dec
mov
out
cmp
lea
clc
pop
ss
inc
fimuls
xor
movsb
loopne
nop
xchg
inc
sbb
adc
add
mov
repz
pop
xor
lods
lahf
and
add
add
shrl
cmp
lahf
inc
dec
inc
cmpsb
cmc
cmp
add
xchg
dec
out
mov
stos
add
jg
lea
push
mov
mov
jbe
sahf
movsl
adc
repnz
arpl
outsl
jle
das
das
lods
push
or
sbb
hlt
jle
mov
mov
mov
test
cli
es
and
pop
or
outsl
mov
jo
add
adc
daa
adc
and
pop
clc
mov
pop
rcr
xchg
ds
out
xchg
fwait
sub
jmp
xchg
mov
mov
add
dec
mov
insb
lcall
scas
hlt
push
nop
into
push
dec
dec
sub
clc
dec
lahf
iret
icebp
jle
stc
jle
les
incl
pushf
sbb
lds
lea
gs
mov
mov
push
mov
subb
dec
xor
inc
add
scas
adc
repz
stos
fcompl
test
sub
fiaddl
outsl
mov
pop
xor
mov
outsl
scas
jge
mulb
mov
xor
dec
int
mov
aas
clc
inc
jecxz
fistpll
lods
inc
fistpl
inc
push
testb
ja
outsb
jo
lret
jno
lret
scas
call
jno
jmp
sub
mov
call
out
cmpsl
jg
and
cltd
mov
pop
and
notb
nop
lahf
and
xchg
adc
sub
cmp
insb
push
mov
adc
push
inc
mov
push
ljmp
or
aas
sub
test
dec
inc
hlt
mov
xchg
or
fsts
pop
xchg
insl
test
mov
shll
add
xchg
into
pop
lods
jmp
imul
pop
out
hlt
dec
xchg
adc
adc
add
fstl
insb
mov
adc
imul
push
mov
jg
sar
mov
mov
rcr
sbbb
xor
jb
js
adc
imul
andb
sub
sarb
out
test
lret
and
mov
cmpsb
insb
dec
js
fs
xor
int
mov
test
jns
lahf
int
lahf
dec
sarl
inc
int
ss
mulb
scas
imul
and
decl
scas
fsubrs
rcrl
mov
push
test
dec
fisubrs
sbb
in
dec
fnsave
mov
loope
movsl
cli
jo
push
movsb
mov
mov
aad
leave
es
cmp
sbb
aas
fwait
out
or
add
repz
rol
jmp
push
sbb
lock
xorb
pop
outsl
mov
sti
mov
add
fstps
pop
mov
and
test
out
add
cmp
addl
in
pushf
es
sub
push
add
sbb
scas
dec
xor
in
in
or
xchg
lahf
mov
inc
imul
enter
loope
clc
mov
mov
cmc
xor
insl
xchg
pop
lock
cmp
lea
bound
xchg
adcl
adc
arpl
pop
mov
xor
inc
pop
jno
cli
aas
out
adc
inc
aam
mov
sbb
sub
inc
push
push
sbbl
repnz
mov
xchg
dec
fildll
mov
je
pop
cli
or
cmp
lods
fwait
dec
jae
movsd
lret
or
fs
push
cmpsb
push
pop
jo
push
add
dec
enter
mov
test
xchg
sbb
jmp
mov
out
inc
xchg
roll
fdivrl
jno
push
add
pop
cs
mov
shll
rcrb
xor
dec
in
add
stos
push
push
mov
dec
sahf
andb
push
and
xchg
lock
dec
jge
xchg
or
popa
or
and
add
or
xor
pop
adc
mov
mov
testb
sarb
stos
lcall
int
push
ss
push
pop
dec
mov
icebp
pop
in
test
rcl
pop
cmp
cmp
sub
jmp
arpl
and
inc
fidivs
insl
int
or
testl
cmp
sbb
cmpb
xchg
cmpsb
jge
xor
push
pop
jnp
xorl
add
cmp
icebp
int
sub
aad
rcrl
cmc
out
in
and
push
inc
mov
imul
inc
push
add
mov
inc
insl
outsl
ds
sub
inc
roll
fs
mov
add
test
inc
dec
test
mov
pop
add
cmp
adc
adc
adc
cmp
or
into
inc
xor
pop
cmp
ret
inc
mul
jl
xlat
jmp
test
lcall
sub
int3
fidivrl
icebp
cltd
mov
in
mov
sti
add
movsb
movsb
outsl
xor
add
jo
xchg
icebp
xchg
stos
dec
call
out
and
adc
jbe
in
fmulp
jl
dec
dec
push
mov
cwtl
popf
sub
and
xchg
bound
mov
repnz
scas
imul
jbe
mov
pop
add
insl
outsb
adc
adc
fisttpll
adc
rorl
into
insb
and
xchg
sub
jbe
jge
mov
inc
xlat
lock
cmc
shrb
lcall
pusha
mov
pop
popa
cli
lret
repnz
push
jmp
popf
cmp
movsb
das
pushf
xor
sub
bound
inc
fimull
dec
hlt
add
adc
shll
aaa
dec
push
cmpsl
push
sub
add
cld
inc
jl
xchg
insl
je
repnz
and
not
jo
stos
lds
pop
shll
repnz
mov
inc
or
loopne
scas
or
push
mov
ss
mov
xlat
xchg
icebp
rclb
add
cmpsb
in
aad
aad
dec
hlt
dec
sub
dec
loopne
imul
inc
jbe
les
loope
and
mov
loope
leave
push
inc
and
mov
sbb
fwait
xchg
scas
adc
ljmp
fistl
pop
out
add
lods
dec
je
push
and
mov
iret
sub
adc
mov
in
fimuls
cmp
mov
mov
mov
movsb
mov
gs
mov
push
inc
pop
push
pusha
dec
jns
scas
jle
rolb
cmpsb
scas
das
cmp
cmc
aad
icebp
cmp
jg
dec
dec
sti
cmpsl
scas
pop
cli
inc
aaa
je
mov
call
cmpsb
fcoml
arpl
cmp
pop
mov
xchg
add
mov
adc
jnp
inc
outsl
push
cmc
sbbb
popf
out
add
lock
cmp
pop
xlat
mov
bound
imul
int3
cmc
push
mov
mov
pushf
call
dec
aam
ret
stos
xor
jne
ror
clc
fsts
pop
aam
xor
jnp
mov
push
imul
xchg
leave
fwait
jnp
dec
jb
xchg
rcl
mov
imul
into
dec
mov
jp
add
pop
bnd
ljmp
jnp
push
push
sti
fwait
or
and
mov
or
test
sti
jo
ficoml
mov
xchg
push
es
in
add
in
rorb
lds
cmp
outsb
cmp
clc
test
jne
xchg
xchg
sbb
cmc
xor
mov
pushf
test
push
gs
jbe
sahf
pop
push
push
mov
pop
leave
das
movsb
jno
xchg
or
xchg
xor
and
lods
jns
in
mov
cmp
cmc
pop
fistps
rclb
and
mov
jp
bound
loope
fwait
dec
pop
cli
push
and
inc
mov
inc
pop
das
in
or
xchg
lret
adc
add
jge
outsb
or
out
enter
inc
dec
push
jg
pusha
dec
lods
xchg
aaa
lods
jns
dec
adc
cmp
inc
sbb
loopne
mov
xchg
and
into
lods
jbe
in
daa
jo
add
jmp
sbb
rcl
pop
inc
inc
xchg
sub
loopne
lods
pusha
or
lret
push
call
cmp
or
xchg
push
xchg
cmp
imul
pinsrw
add
xor
insb
sbb
mov
or
aas
sarb
out
sbb
out
imul
inc
sbb
xchg
and
inc
push
add
frstor
insb
test
inc
inc
mov
inc
lock
inc
inc
notb
sahf
push
loop
ficoml
jp
mov
lret
pop
mov
mov
aas
mov
inc
sbb
cltd
xchg
jp
loop
xchg
mov
cmc
mov
and
iret
daa
fisubrl
out
mov
dec
sahf
xchg
loopne
mov
fidivs
hlt
shl
lret
sub
loope
jp
mov
xchg
jle
movsl
xor
pop
xchg
inc
cli
jno
mov
and
xor
insl
jae
or
mov
push
aam
mov
icebp
mov
insl
mov
jns
xchg
pop
lahf
sbb
icebp
cmpsb
mov
inc
loopne
sub
fisubs
out
lea
jnp
push
or
sbb
jle
scas
ds
add
dec
xchg
inc
cmp
stos
pop
and
in
divb
shrb
aad
scas
lret
push
fidivrl
xchg
inc
out
in
fdivrs
stc
mov
jne
fsubrs
sbb
daa
xorb
pop
jg
test
and
sbb
shll
sub
lds
sahf
mov
xor
xchg
push
or
cli
daa
inc
xchg
cmpsl
add
stc
mov
addr16
mov
repnz
aam
push
push
out
addb
insb
sub
xor
mov
scas
mov
adc
mov
jmp
inc
es
pop
lret
mov
mov
push
subl
dec
xor
xchg
dec
scas
pop
mov
pop
ljmp
scas
sbb
jg
pop
mov
lahf
mov
mov
decl
in
clc
jnp
pop
cmp
dec
inc
psubb
push
negl
clc
xor
and
dec
pop
or
mov
in
clc
sbb
or
in
cwtl
pop
ljmp
js
mov
out
jb
int3
mov
outsl
lods
cmp
pop
outsb
xchg
dec
imul
sbb
ds
andl
add
cwtl
aam
lock
or
adc
dec
lds
xorl
pop
xchg
daa
push
ror
cmpl
or
scas
lods
and
lds
or
das
nop
and
mov
or
stc
cltd
lock
das
mov
gs
stc
pop
jle
xchg
mov
movsb
mov
sbb
insl
mov
inc
cltd
test
or
stos
cmpl
pop
stos
sub
scas
scas
xor
iret
or
ljmp
xorl
repnz
dec
pop
and
cld
aad
mov
push
rorl
rclb
fcmovbe
sub
movsl
test
cmp
cld
fsubrs
pop
mov
mov
push
jo
je
jg
cmpsl
push
mov
mov
mov
shld
cld
andl
xor
sub
insl
dec
imul
jo
pop
aaa
outsb
dec
pop
pushf
ds
rolb
jg
pop
mov
mov
icebp
out
jnp
les
in
or
adc
push
aas
lods
movsb
pop
test
jg
mov
cli
lock
jae
push
out
cmpb
inc
loop
add
pop
add
and
arpl
xchg
test
jp
inc
iret
js
jo
adc
cmp
cli
adc
rcl
addl
sahf
idivb
push
notb
repz
add
cwtl
clc
cmpsl
into
adc
sbb
push
pushf
test
es
lcall
xchg
movsl
fists
dec
and
push
movsb
cmp
pop
aad
mov
leave
inc
int
jnp
jns
xchg
cmp
out
push
xchg
push
xchg
aad
jns
dec
and
adc
jo
fnstsw
testl
xor
mov
test
push
in
shl
call
loopne
sub
xchg
jp
inc
adc
ss
jge
push
ljmp
mov
jg
mull
xlat
adc
repnz
pop
push
add
shrl
cmp
ds
iret
call
lcall
push
xorl
insl
sbb
enter
or
sub
insb
lcall
cmp
cmp
test
pop
add
ja
je
ljmp
pop
negl
ds
lods
int
hlt
cli
testb
aad
cmp
addr16
sub
sub
pop
mov
cmp
aad
ret
int3
xchg
jmp
in
mov
pop
mov
leave
sub
jg
repz
test
fcompl
and
mov
notl
mov
das
inc
or
xchg
inc
leave
jg
mov
cli
inc
std
add
pop
dec
ret
push
add
and
or
adc
insb
mov
mov
aas
jle
add
enter
in
jnp
or
xor
mov
and
fldcw
inc
push
cmp
sbb
fwait
sbb
mov
xchg
sub
scas
out
stos
roll
cwtl
jl
pop
popa
enter
jl
jge
test
mov
in
repnz
xor
insb
adc
das
sub
mov
sarl
cmp
xchg
pop
xor
xor
add
enter
adc
xchg
movsl
xchg
sti
mov
ss
std
and
pop
and
mov
xchg
jle
cmp
rorb
insl
push
pop
or
mov
pop
arpl
mov
frstor
fwait
icebp
cltd
loope
and
jg
add
pop
mov
aas
aaa
cmp
es
pop
fnstcw
rcll
int3
ljmp
dec
aad
sbb
and
out
orl
addr16
adc
dec
mov
shll
je
jecxz
mov
and
imul
scas
dec
and
pop
cs
add
aam
push
cli
aad
and
adc
out
dec
push
jo
push
xor
test
and
pop
add
jecxz
je
mov
xor
mov
mov
dec
dec
in
in
inc
jge
movsb
push
xor
mulb
inc
add
and
mov
in
stc
xor
inc
add
shlb
and
and
insl
and
dec
jno
arpl
add
shl
sbbl
aas
shll
or
hlt
adc
test
fcoms
ds
mov
fs
in
sti
and
in
rol
movsl
lock
inc
movsl
push
cmp
int
sbb
cmc
ficomps
fldt
mov
aaa
dec
inc
jbe
shll
pop
jns
cmc
sbb
jge
pop
popa
adc
imul
dec
movsl
vandps
pop
insb
xlat
stos
hlt
nop
out
cvtps2pd
cwtl
js
decl
cmp
repz
icebp
iret
xlat
bound
mov
shl
xchg
sub
mov
inc
jmp
daa
jbe
mov
gs
mov
mov
mov
icebp
and
fnstcw
mov
add
cmp
mov
dec
cmp
in
sbb
sbb
inc
cs
pushf
loopne
mov
xor
xor
das
pop
fs
out
mov
iret
ja
shrl
cmpb
add
lret
movsb
jno
imul
mov
iret
xchg
inc
sbb
mov
das
xchg
stos
xchg
jp
cmp
inc
mov
push
or
shl
clc
aaa
lods
insb
lret
mov
lret
rcll
mov
and
mov
push
push
sahf
das
pop
mov
jge
movsl
jno
mov
xchg
lcall
scas
pop
adc
add
add
leave
or
add
add
add
rolb
add
add
add
or
popa
xor
or
popa
xor
or
add
mov
daa
out
xor
loop
mov
add
add
add
notb
inc
les
xchg
adc
add
add
add
inc
inc
daa
push
aaa
aaa
add
add
add
gs
daa
inc
push
push
adc
divb
add
add
gs
daa
inc
push
push
fs
push
push
add
adc
add
push
add
add
mov
sub
push
push
lea
push
push
xor
call
roll
dec
loope
push
push
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
mov
sbb
sbb
and
mov
adc
mov
adc
add
sub
or
rdtsc
mov
push
push
testb
dec
sbb
dec
call
xor
or
std
mov
out
pop
test
dec
adc
sbb
inc
lods
cmp
push
ja
ss
call
ret
add
call
xor
mov
inc
cld
jae
sbb
push
sbb
ret
ret
lea
sbb
or
sbb
sub
add
cmpl
je
jae
cmp
cmp
ret
add
jnp
sbb
cmp
dec
add
popa
clc
jnp
outsl
add
sbb
push
call
push
mov
sub
mov
popf
inc
push
push
dec
cmp
adc
call
aas
rorb
mov
xlat
add
filds
roll
add
mov
push
inc
cmp
xchg
lcall
inc
mov
inc
jne
xchg
jmp
testl
push
push
and
lea
pop
sbb
pop
sbb
sub
or
enter
pop
dec
cmp
or
inc
push
pop
int
inc
mov
rcrl
add
sub
sbb
lahf
cmp
dec
inc
icebp
add
movb
popa
add
jmp
mov
repz
lret
aad
rol
cmpb
or
pusha
or
pop
pop
pop
pop
ret
mov
add
in
add
mov
pusha
push
sbb
out
lods
les
add
push
call
test
inc
sar
xor
mov
je
push
cs
fs
ret
mov
stos
pop
add
jmp
psllq
push
jne
or
dec
hlt
jp
aaa
ror
nop
add
lret
sar
cwtl
and
or
stos
pop
push
mov
adc
adc
jmp
cltd
xchg
cld
clc
es
cmp
loop
cmp
or
dec
push
jmp
mov
andb
add
inc
adc
xchg
jb
sub
cltd
cmp
inc
es
cmpb
pop
adc
add
add
cmp
jge
push
inc
xor
mov
add
sub
je
dec
jne
sbb
add
xor
rorb
shr
rclb
les
add
cwtl
jmp
inc
jmp
pop
pop
inc
push
movsb
mov
inc
cmp
inc
xchg
jnp
mov
xorl
add
sub
push
scas
jecxz
fiadds
jbe
push
push
call
std
jle
scas
sbb
scas
jge,pt
mov
adc
faddl
inc
sub
xor
dec
je
jno
sbb
in
adc
dec
or
or
add
movsl
movb
sub
push
cli
pop
rcrl
stos
lea
sbb
stos
pop
shlb
xor
and
call
jns
popf
inc
add
push
and
lock
aaa
xor
dec
js
push
push
push
jl
inc
adc
jmp
fcmovb
inc
push
push
jge
fcoms
cltd
cmp
xchg
lret
pop
insl
addb
add
jge
call
mov
pop
sub
std
inc
push
push
push
in
rcr
sub
je
inc
adc
adc
mov
in
jmp
pop
dec
nop
cli
cmp
jl
pop
push
stc
jmp
cmc
pop
int
inc
sbb
or
sub
fs
scas
push
cmp
testl
dec
shrb
add
addr16
mov
fidivrl
mull
push
je
adcb
cmpsl
add
dec
shlb
dec
loop
sub
test
and
push
push
addr16
xchg
adc
sbb
pop
pop
outsb
or
call
and
mov
inc
or
orl
scas
sub
inc
rcr
push
and
sarb
jmp
jmp
dec
je
jmp
xchg
push
lock
adc
rolb
mov
testb
mov
push
dec
test
fisttps
push
dec
pop
nop
mov
insl
xor
cmp
inc
and
dec
jb
es
outsl
adc
inc
adc
in
jmp
lcall
lock
aad
call
mov
hlt
adc
sbb
dec
or
dec
repz
xor
cld
cmp
add
fstpl
mov
sbb
decl
call
and
je
push
pop
mov
sbb
or
xchg
add
ss
imul
jo
mull
jns
sahf
in
in
imulb
dec
or
or
sahf
jne
push
push
sti
divl
adc
iret
xchg
aaa
and
inc
dec
mov
and
popa
ss
ja
push
sarb
fs
insb
and
popf
or
mov
pop
loop
out
addl
daa
out
jne
gs
xor
daa
mov
addr16
outsl
js
dec
inc
mul
ja
cmpsl
data16
sub
aas
inc
js
je
test
pop
pop
aaa
dec
inc
dec
neg
inc
push
mov
dec
stos
or
pop
sub
push
add
or
sub
and
hlt
or
add
add
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
pop
add
add
cmp
add
xor
pop
add
rolb
add
pop
add
add
and
pop
add
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
sub
pop
add
add
add
jb
gs
xor
cs
insb
add
loopne
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
pop
push
push
popa
jb
and
push
je
popa
insb
je
add
call
pop
sub
mov
add
add
jmp
jmp
add
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
stc
add
stc
add
add
ror
xor
stc
add
dec
sub
add
clc
nop
stc
sub
stc
dec
sub
sub
stc
stc
xor
clc
clc
stc
add
stc
add
add
stos
loop
xchg
test
ljmp
sbb
lds
pop
inc
xor
mov
mov
iret
insl
mov
inc
ss
rcrb
and
xchg
into
rol
fstpt
jmp
mov
andl
xor
or
dec
dec
pop
sub
ficoml
xor
testb
dec
lret
fimull
adcl
adc
jae
mov
and
rorl
sbb
aad
cmp
add
movsb
stos
insb
gs
lock
inc
pop
dec
inc
jne
adc
adc
rorb
stos
mov
mov
iret
outsl
jge
inc
inc
push
add
adc
loop
jbe
test
push
cmpsl
je
lea
fistpl
pusha
lcall
fidivs
jecxz
scas
mov
testl
or
inc
pop
hlt
pop
dec
sbb
inc
mov
mov
in
inc
jne
mov
pop
cmp
push
mov
pop
data16
rcrb
rclb
or
iret
movsb
adc
or
mov
roll
notl
fdivr
stos
cwtl
mov
mov
jne
inc
xor
sbb
sbb
sub
stc
in
mov
inc
jbe
lret
dec
lea
mov
inc
loop
adc
test
mov
loop
mov
inc
mov
outsl
or
loop
cmp
fdecstp
ret
test
sub
pushf
jnp
in
push
gs
jno
sbb
adc
decl
rcrl
gs
fsubrl
stc
pop
popa
mov
iret
jmp
mov
xchg
jg
push
clc
add
sti
sar
fsubrl
enter
sbb
xchg
jb
out
stos
jge
ss
jmp
sbb
dec
ret
mov
and
scas
popf
pop
jns
sbb
and
iret
mov
lods
mov
xchg
jg
mov
mov
mov
xchg
adc
sub
xchg
mov
jmp
pop
jnp
pushf
xor
pop
fldenv
mov
ret
cmp
int
lock
add
jge
mov
xchg
es
push
lret
les
pop
mov
cmp
xchg
jecxz
scas
aad
jne
jbe
adc
in
xchg
xchg
inc
pop
insb
sbb
sbb
inc
jnp
dec
ljmp
mov
jae
sahf
xchg
xchg
push
or
pop
xchg
cmp
mov
int
pusha
roll
push
xchg
stc
nop
mov
sbb
sar
out
xor
sbb
xchg
in
pop
out
lock
mov
aam
or
nop
xchg
faddp
adc
out
and
mov
push
fsubr
mov
mov
xor
inc
inc
cmpl
fld
imul
imul
inc
jle
xchg
rorl
popa
gs
lods
jae
cmp
popa
bound
test
cmp
dec
inc
xor
push
xchg
mov
loopne
lea
pop
mov
gs
cmp
fisubrs
lahf
and
lahf
popf
jo
and
sub
inc
lods
pop
dec
inc
mov
xor
lods
das
pop
invd
or
sti
cli
jae
ret
push
ds
adc
xchg
addl
sbb
jno
das
iret
enter
ficompl
mov
cltd
sbb
ja
xlat
add
sub
xchg
fidivs
mov
dec
push
leave
xlat
movsb
sbb
in
inc
jb
lods
or
cmpsl
inc
outsb
dec
dec
sub
dec
dec
in
dec
mov
fwait
popa
in
mov
mov
inc
scas
dec
pop
pop
or
call
or
lods
mov
xchg
jg
push
pushf
inc
xchg
add
push
sub
push
icebp
xchg
push
jnp
cmp
pop
pop
mov
push
and
imul
in
xchg
scas
sti
mov
and
sub
push
add
sub
dec
xchg
or
test
adc
cmp
mov
test
rcr
arpl
pop
data16
adc
in
testl
or
cmp
push
imul
or
sbb
jge
jne
subb
or
pop
jae
hlt
loop
sub
test
mov
ja
cs
idiv
sub
mov
push
sub
inc
add
loop
addr16
mov
aad
push
jo
mov
loopne
in
cld
out
ret
shlb
sahf
and
in
sbb
repz
jg
ljmp
fildll
lahf
testb
jmp
lret
and
roll
or
jo
leave
cmp
jnp
inc
inc
sbb
sub
xchg
xchg
sub
xchg
mov
jle
cmp
cmp
cltd
lret
fidivl
xlat
in
lock
mov
popw
ss
out
cld
pop
out
cmpsb
pop
int3
fidivrl
out
dec
loopne
in
ja
inc
imul
mov
ret
adc
add
xor
fsubrs
cli
movsl
xor
aas
ret
loopne
pop
ja
cmpsl
scas
test
sarb
sub
dec
imul
jp
sub
repnz
mov
lret
test
testl
sbb
test
lret
adc
xchg
jb
inc
sbb
mov
fmuls
and
mov
shr
xchg
mov
pop
push
sbbl
pop
inc
xor
mov
add
push
mov
dec
int3
lcall
shl
fisttps
fucomi
fwait
in
int3
into
insb
test
mov
mov
gs
int
es
sub
into
jbe
jp
insl
clc
inc
jns
gs
aad
test
pop
inc
jl
xchg
add
movsl
mov
and
call
push
negl
sbb
rcll
das
fs
lea
arpl
shlb
mov
cwtl
or
andb
out
aaa
mov
test
inc
aad
aam
or
test
pop
jge
mov
add
popa
xchg
fiaddl
xchg
fcomps
iret
cmp
add
fists
andl
ret
cmp
ja
mov
inc
sbb
daa
jns
sub
lea
mov
les
add
out
mov
out
cmp
faddp
icebp
push
xor
je
or
int3
dec
iret
dec
xchg
int
and
mov
cmp
arpl
sbb
push
mov
ljmp
imul
xor
pop
imul
fs
das
jmp
xchg
ret
int3
leave
push
jne
and
xchg
loope
and
in
jnp
cmpsl
out
inc
push
jo
jle
sub
xchg
loop
out
cmpsl
sbb
mov
rcr
mov
xchg
movsb
inc
mov
jo
imul
dec
ljmp
mov
xchg
sbbl
leave
cmp
decl
arpl
outsl
jge
xchg
xor
or
pop
and
clc
out
xchg
mov
mov
test
xchg
das
cmp
adc
sbb
enter
sub
popf
mov
pop
jl
sub
xor
loopne
in
cli
sbb
movsb
mov
mov
xchg
mov
jns
add
dec
call
push
lods
mov
xchg
jg
stos
dec
aaa
push
arpl
outsl
or
cmp
or
iret
insl
jnp
mov
imul
adc
call
mov
andl
sub
hlt
adc
push
sub
mov
lea
jb
jle
sub
ss
loop
out
cld
sbb
cmpsb
mov
rcr
mov
movsb
inc
mov
pop
jnp
pop
adc
ljmp
mov
xchg
sbbl
sbb
sub
aad
loope
or
arpl
outsl
jge
xchg
xor
or
pop
and
clc
out
xchg
mov
mov
test
xchg
das
cmp
adc
sbb
enter
sub
popf
mov
pop
jl
sub
xor
loopne
in
cli
sbb
movsb
mov
mov
xchg
mov
jns
add
dec
call
push
lods
mov
xchg
jg
stos
dec
aaa
push
arpl
outsl
or
cmp
or
iret
insl
jnp
mov
imul
adc
call
mov
andl
sub
hlt
adc
push
sub
mov
lea
jb
jle
sub
ss
loop
out
cld
sbb
cmpsb
mov
rcr
mov
movsb
inc
mov
pop
jnp
pop
adc
ljmp
mov
xchg
sbbl
sbb
sub
aad
loope
or
arpl
outsl
jge
xchg
xor
or
pop
and
clc
out
xchg
mov
mov
test
xchg
das
cmp
adc
sbb
enter
sub
popf
mov
pop
jl
sub
xor
loopne
in
cli
sbb
movsb
mov
mov
xchg
mov
jns
add
dec
call
push
lods
mov
xchg
jg
stos
dec
aaa
push
arpl
outsl
or
cmp
or
iret
insl
jnp
mov
imul
adc
call
mov
andl
sub
hlt
adc
push
sub
mov
lea
jb
jle
sub
ss
loop
out
cld
sbb
cmpsb
mov
rcr
mov
movsb
inc
mov
pop
jnp
pop
adc
ljmp
mov
xchg
sbbl
sbb
sub
aad
loope
or
arpl
outsl
jge
xchg
xor
or
pop
and
clc
out
xchg
mov
mov
test
xchg
das
cmp
adc
sbb
enter
sub
popf
mov
pop
jl
sub
xor
loopne
in
cli
sbb
movsb
mov
mov
xchg
mov
jns
add
dec
call
push
lods
mov
xchg
jg
stos
dec
aaa
push
arpl
outsl
or
cmp
or
iret
insl
jnp
mov
imul
adc
call
mov
andl
sub
hlt
adc
push
sub
mov
lea
jb
jle
sub
ss
loop
out
cld
sbb
cmpsb
mov
rcr
mov
movsb
inc
mov
pop
jnp
pop
adc
ljmp
mov
xchg
sbbl
sbb
sub
aad
loope
or
arpl
outsl
jge
xchg
xor
or
pop
and
clc
out
xchg
mov
mov
test
xchg
das
cmp
adc
sbb
enter
sub
popf
mov
sbb
pop
mov
jle
dec
pop
movsb
mov
mov
shlb
loopne
jl
rclb
call
clc
incb
pop
clc
es
fwait
aaa
push
arpl
outsl
sub
inc
adc
movsb
dec
dec
dec
jge
adc
and
jno
dec
stos
mov
cli
call
out
cltd
shr
movsb
js
mov
out
adc
add
sub
inc
push
sbb
add
loop
out
cld
sbb
or
xor
jl
inc
mov
pop
jnp
mov
pop
ret
andb
mov
jp
andb
ficompl
lahf
push
ja
cmpsb
jb
