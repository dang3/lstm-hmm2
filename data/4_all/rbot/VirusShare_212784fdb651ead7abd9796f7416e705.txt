add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
pop
add
xorb
add
add
add
add
add
add
add
add
add
dec
add
add
add
enter
in
add
add
add
add
push
add
dec
add
mov
movsb
je
sbb
sub
inc
bound
scas
in
pop
xchg
jmp
mov
cltd
and
sub
clc
adc
jns
hlt
nop
sbb
sbb
les
cmpsl
loop
sbb
push
enter
add
mov
cltd
lcall
test
js
ficomps
ds
mov
rcrl
les
pop
inc
in
icebp
adcl
add
imull
xor
inc
lods
mov
mov
and
rcl
bnd
pop
test
out
sub
xchg
loope
cmp
nop
arpl
addr16
lret
cmp
orb
jl
out
insl
lcall
push
jns
outsb
dec
nop
cmpsl
pop
mov
cld
mov
fsubl
test
lods
das
lds
add
jg
pop
mov
or
out
daa
xlat
es
insb
int3
jb
add
test
push
loop
repnz
add
hlt
movsb
test
fs
lds
and
pop
ja
es
fwait
aas
ret
aam
fisubl
jns
push
sahf
pop
aam
or
pop
mov
push
aad
movsb
adcb
adc
aaa
or
mov
sti
repz
movlps
xchg
cmp
sahf
pop
sbb
imul
daa
ficompl
movsl
adc
push
pop
xchg
in
jmp
mov
add
jge
add
jne
testl
xchg
mov
jne
mov
lahf
inc
pop
fistps
es
outsb
mov
es
mov
push
mov
mov
es
or
insb
arpl
jns
mov
cwtl
in
aam
jge
push
push
mov
inc
shrb
dec
jge
jge
dec
mov
out
jp
test
mov
xorb
sbb
das
stos
shrb
adc
pop
or
adc
inc
dec
filds
and
insb
and
or
inc
xor
ljmp
sarb
outsl
mov
add
mov
popa
jno
andb
cs
jp
dec
dec
adc
dec
lret
mov
dec
insb
mov
out
xor
in
push
push
cmp
dec
adc
es
push
xor
out
sub
dec
sahf
push
inc
and
loop
jbe
jno
insl
rcll
jae
xchg
outsb
hlt
xchg
and
lds
sarl
sarb
cwtl
dec
lea
dec
scas
lahf
mov
loop
dec
mov
cmp
xorl
inc
adc
sub
outsl
scas
jge
jge
mov
test
movsl
push
xchg
add
pop
adc
cmp
push
sub
out
mov
shrb
sbb
out
lods
lds
pop
xchg
jns
mov
dec
mov
sbb
xor
cmp
jnp
pop
and
add
or
add
popa
ret
data16
fadds
jg
cmp
dec
out
dec
xchg
jns
add
lret
fstpl
jg
mov
push
notl
sarb
push
mov
pmulhw
scas
mov
ds
int3
sarl
loopne
jbe
push
lea
mov
sbb
sti
mov
jl
movsl
iret
rorl
sub
mov
stos
jg
cmc
push
adc
outsb
jp
jbe
sbb
je
fnstsw
outsb
lods
sbb
lea
push
lods
inc
lock
je
pop
mov
in
out
mov
movl
mov
es
mov
loop
repnz
fwait
pop
outsb
push
cwtl
and
lcall
dec
xor
mov
and
xor
ret
icebp
outsl
scas
popa
repz
xor
mov
sub
mov
pop
popf
mov
es
and
jae
popf
inc
adc
outsl
pop
popa
cmp
dec
test
xchg
mov
test
cmpsl
fs
inc
and
addr16
xchg
sbb
adc
and
ds
dec
test
outsl
rol
fwait
dec
pop
xorl
jbe
xorb
in
cld
xchg
cli
sub
pop
insl
xorb
push
fisubrs
mov
mov
mov
cmp
int3
inc
jno
sub
inc
repnz
mov
pusha
inc
push
pop
leave
mov
shl
push
cmp
mov
dec
icebp
mov
sub
sbb
loope
jg
mov
inc
dec
fs
les
push
and
test
dec
jne
mov
adc
and
adc
jnp
mov
movsl
data16
es
shrb
sub
je
sub
pop
fstl
cmp
cmp
test
std
and
addr16
divb
div
lret
mov
dec
jecxz
pusha
roll
dec
out
clc
adc
and
cmp
mov
jo
adc
jl
xchg
int
cmp
xchg
mov
inc
mov
or
push
or
cmpsb
or
out
ds
js
nop
push
fwait
xchg
inc
mov
scas
and
xchg
push
push
hlt
fxch
mov
jp
sbb
cltd
inc
jle
jl
imul
mov
lods
add
and
outsl
loop
or
cmp
sbb
pop
cmpsl
lcall
out
std
clc
sub
lock
icebp
bound
lcall
xor
push
fisubs
adc
rclb
xchg
fmul
mov
jp
adc
pop
add
lds
jmp
das
loop
lret
daa
pop
sub
push
leave
xchg
push
mov
xchg
xchg
mov
jns
andl
inc
push
lods
loope
jecxz
add
dec
call
or
sub
jl
fldcw
mov
aam
xchg
das
sub
ret
pop
pop
daa
mulb
xor
lea
dec
iret
sbb
dec
std
adc
lods
aad
ljmp
and
movsl
mov
lock
cli
mov
adc
popa
mov
xchg
jecxz
jmp
stos
sub
xor
stos
add
push
xlat
jp
cmp
xchg
push
mov
or
or
or
xor
and
fsts
loopne
in
xchg
pusha
mov
or
lret
mov
les
shll
and
adc
addl
es
mov
adc
cmp
and
mov
pop
inc
mov
pop
lcall
fmul
cs
add
test
std
popf
mov
aaa
repz
cli
outsl
repz
xor
dec
inc
sbb
js
in
dec
adc
shll
push
cltd
test
jo
ds
adc
add
or
push
call
xchg
dec
xor
dec
jno
frstor
xor
push
sub
adc
mov
cmp
adc
out
add
fs
lea
lret
in
inc
sub
in
jmp
ljmp
xor
cmpsb
jbe
sarb
dec
jne
jns
and
mov
enter
int3
je
mov
adc
mov
mov
dec
jb
cltd
imul
mov
ljmp
jnp
inc
enter
aad
pop
mov
inc
out
hlt
test
adc
jp
das
xchg
lock
fimull
aas
jne
xchg
shll
mov
mov
push
mov
cmp
scas
pop
push
ljmp
push
fldcw
js
out
inc
xchg
cmp
or
lea
jl
enter
xor
xor
adc
pop
daa
out
mov
cmp
fxch
cmpsl
es
fldl
cmp
rcll
jge
push
cmp
jp
cmp
not
pop
sarb
cwtl
out
and
pop
push
push
mov
sbb
adc
fs
mov
ljmp
dec
dec
push
aaa
fidivl
ja
loop
mov
mov
mov
and
lahf
in
ret
inc
repz
jbe
sub
mov
into
add
xchg
lds
shrl
push
pop
orl
pop
leave
clc
cmc
mov
xchg
sub
arpl
je
pusha
in
jl
lds
mov
xchg
insl
fldt
jmp
sub
push
popf
dec
fsubrs
mov
xor
cmp
loopne
mov
add
mov
mov
xor
es
insl
loope
inc
je
xchg
arpl
jo
xor
jl
cmc
int3
je
xlat
lods
xchg
xchg
jmp
sub
scas
adc
das
xchg
pop
fsubrs
lret
rcr
push
outsl
lret
imul
push
cmp
mov
and
dec
sub
call
mov
ja
mov
and
icebp
or
mov
push
sbb
data16
mov
pop
scas
adc
inc
add
inc
pop
mov
cltd
xor
sahf
push
ret
xchg
adc
cmpsb
mov
imul
arpl
xchg
rcrl
or
in
decl
jmp
scas
jmp
arpl
adc
iret
and
loop
mov
xor
push
xchg
jne
dec
je
xor
cli
clc
cmp
mov
jmp
fcoml
inc
add
cmp
outsl
subb
movsl
rol
jecxz
popa
rolb
or
outsl
add
outsb
pop
pop
negb
into
sub
cmp
jmp
ficompl
mov
mov
xchg
jnp
add
add
fstps
pusha
lock
das
xor
mov
mov
cs
cld
lods
jle
imul
push
popf
divl
pop
rol
xchg
cmc
xchg
gs
push
outsb
setno
jp
xor
dec
pop
insb
std
das
xor
sbb
pop
pusha
and
data16
mov
adc
adc
push
and
ljmp
pushf
scas
ffree
cmp
sub
or
sbb
push
mov
mov
andl
std
sbbl
je
add
test
mov
mov
pop
cwtl
mov
sti
pop
add
fisubs
cmp
cli
ret
repnz
pushf
dec
mov
adc
in
fsubrs
jbe
mov
adc
mov
fnstcw
stos
divb
jg
jle
jle
outsl
pop
jle
hlt
fsubr
je
or
hlt
in
clc
ja
or
in
push
dec
dec
pop
call
cmp
sub
ja
sbb
mov
leave
icebp
jbe
xchg
popa
in
lret
add
aam
je
sbb
sahf
sti
or
inc
mov
leave
adc
dec
mov
int
sarb
call
push
sahf
push
fsub
mov
repnz
ss
and
adc
mov
mov
lds
inc
pop
jmp
fisttps
cli
push
adc
xchg
jbe
inc
orl
fsts
lock
and
push
cwtl
adc
add
hlt
jo
sbb
xor
mov
add
sbb
pop
int3
fistpll
mov
call
mov
or
xlat
loope
pushf
pop
inc
xchg
ljmp
out
inc
add
push
lods
jmp
add
cmp
jge
popf
push
cld
je
mov
sbb
or
add
fdivs
adc
xchg
mov
mov
xchg
in
jae
aas
pop
insl
frstor
stc
jmp
scas
lods
xor
cmp
sub
and
xchg
xor
js
push
push
xor
ljmp
mov
out
sbb
out
hlt
pop
shll
jg
std
cmp
pop
xor
sbb
lock
enter
xchg
xor
dec
sti
shll
fmuls
xchg
jecxz
xor
mov
out
dec
xor
pop
add
imul
jnp
jne
add
mov
fwait
lock
das
xlat
cmp
xor
cmpsb
xor
fstpt
jno
out
ficompl
mov
cmp
sub
or
pop
fistps
mov
push
imul
arpl
push
mov
inc
fld
dec
out
aad
fwait
in
adc
js
iret
int3
out
push
pop
loopne
jl
jecxz
and
push
xorb
lea
fucomip
test
cmp
leave
mov
les
dec
cmpsl
sub
js
xor
mov
je
pushf
test
mov
add
mov
mov
sub
fs
push
enter
stc
xchg
adc
push
fidivl
inc
cltd
pop
aaa
xchg
popf
cltd
cld
sub
outsl
arpl
push
dec
cs
das
lock
subl
cs
out
or
xchg
or
push
adc
stos
cld
int
outsb
mov
aas
xchg
call
sub
ja
xchg
adc
loop
das
jnp
dec
aaa
sub
and
lock
rcll
mov
xchg
jecxz
mov
jne
mov
jb
mov
mov
shrl
and
mov
jno
add
stos
push
movsb
repnz
jno
pusha
inc
pushl
addr16
and
xchg
jb
adc
or
sbb
mov
je
pop
sub
sti
jb
add
pop
xchg
cmp
add
stos
sbb
divl
loop
lods
dec
mov
or
jmp
out
fstp
push
mov
les
nop
pop
xor
ret
sbb
in
fsubl
dec
stos
xor
repnz
xlat
divb
test
jmp
push
je
in
hlt
adc
ficompl
add
rcll
pop
repnz
clc
hlt
xor
roll
pop
mov
pop
into
addr16
dec
std
fsub
sub
pop
cltd
stos
ret
mov
pop
in
xchg
or
ljmp
out
cmpl
das
mov
enter
pop
jge
inc
mov
fldcw
sub
or
les
popf
inc
ljmp
xchg
loope
sub
push
ss
mov
arpl
jno
jae
push
jg
mov
xor
insl
int
test
inc
cli
ja
leave
sahf
mov
mov
mov
pop
sub
daa
sbb
pushf
shlb
and
adc
push
sbb
ja
cs
mov
xchg
js
lea
ljmp
roll
fistpl
in
jp
popf
xchg
mov
push
or
clc
dec
into
cmp
in
icebp
ret
push
jno
fwait
lods
cmp
nop
sbb
frstor
ljmp
inc
xor
jb
movl
lcall
lcall
in
jo
cmc
hlt
jb
and
cmp
mov
out
mov
in
dec
insb
cwtl
cmp
push
push
mov
lcall
insl
imul
hlt
mov
or
sahf
mov
test
or
das
mov
fisttpll
std
xlat
ljmp
mov
jmp
xchg
mov
sub
pop
shrd
mov
adc
stos
and
mov
and
pop
mov
dec
in
or
mov
leave
cmp
mov
dec
idivb
inc
sbb
sub
dec
mov
subl
or
cli
pusha
jg
pop
xchg
push
outsl
sub
xchg
stos
add
aaa
push
jmp
mov
mov
adc
or
into
fistpll
push
mov
sub
mov
ljmp
mov
cmp
stos
inc
adcl
mov
rcrl
jne
xchg
mov
mov
mov
xlat
insb
hlt
inc
into
fisttps
js
test
mov
mov
fldt
dec
inc
insb
or
mov
jb
xlat
pop
and
call
add
cld
addl
jb
mov
sbbb
nop
inc
out
repz
fisubrl
sbb
or
push
aas
mov
jecxz
or
dec
fnsetpm(287
sbb
adc
inc
int3
xchg
ja
clc
add
paddsb
pushf
dec
insl
sub
cmc
movsb
dec
sbb
imul
mov
sub
div
xchg
inc
ds
aaa
push
sti
xchg
jg
pop
daa
cwtl
mov
cmpsb
mov
mov
push
stc
in
cmp
jns
ss
lcall
scas
mov
movsb
fwait
in
push
push
mov
stos
aad
adc
add
aaa
ds
sbb
imull
lret
aas
jge
aas
cmc
scas
pop
shll
cmc
ja
dec
stc
or
pop
call
pusha
aad
mov
xor
int3
pop
addr16
imul
dec
sbb
nop
scas
inc
adc
int3
xchg
insl
jnp
dec
jg
pop
push
lret
mov
std
push
fcoml
mov
push
scas
add
aam
shrb
ror
data16
jbe
cmp
scas
sbb
mov
mov
pop
add
push
lcall
andb
jne
mov
clc
pop
mov
scas
bound
and
cli
addb
add
pushf
out
add
fisttpl
adc
std
shlb
test
test
and
xchg
scas
mov
xchg
cltd
sbb
fnstsw
sti
xor
xchg
ljmp
jp
fwait
stc
insl
and
sbb
and
jae
stc
cltd
mov
pusha
pop
xor
frstor
mov
jl
inc
or
enter
pop
push
xchg
mov
sub
inc
mov
inc
adc
mov
dec
dec
add
or
and
push
pop
push
dec
repz
and
repnz
mov
cld
mov
aas
push
jge
shlb
mov
jae
inc
out
rdtsc
fstl
cmp
sahf
mov
push
mov
cmc
aas
cltd
sti
push
in
mov
out
push
push
lret
adc
pop
outsl
orb
push
mov
jecxz
push
fwait
jae
push
daa
js
scas
pop
or
lret
stos
cmpsl
fstpl
sub
aas
insl
pop
pop
in
outsl
ds
dec
fistl
outsl
inc
lret
cmp
cmp
inc
mov
lcall
rorl
pusha
int
inc
popfw
jmp
inc
shlb
sbb
cltd
jbe
mov
adc
subb
add
aaa
or
xchg
or
fcompl
fsts
sti
mov
inc
in
push
and
sub
lods
jl
mov
popf
imul
mov
mov
xchg
or
xor
xchg
stos
fwait
rcrl
xchg
pop
icebp
aad
enter
lock
mov
insb
outsl
or
iret
xbegin
dec
xor
add
xchg
nopl
shl
mov
jnp
imul
out
fldcw
addr16
add
mov
sub
movb
mov
test
xchg
repz
inc
jg
test
mov
pop
lahf
inc
repnz
test
and
imul
mov
aam
in
pcmpeqw
ss
mov
or
dec
cs
hlt
add
cmp
mov
int3
xchg
ds
push
loopne
std
add
cmp
dec
js
jp
popa
jns
mov
js
adc
jp
jg
bts
mov
cmp
out
insl
sbb
ds
add
icebp
push
adc
iret
or
push
ret
outsb
mov
je
and
xchg
and
rorl
cmp
mov
call
int
sbb
sbb
add
jl
dec
and
mov
inc
sub
and
and
mov
xlat
lret
lret
lock
loopne
test
outsb
push
ret
ss
adcb
inc
mov
test
jb
dec
outsl
rorl
popf
jo
push
scas
sbb
mov
call
fadds
hlt
lret
ret
jns
mov
pop
add
adc
movsb
or
sbbl
cmp
add
sbb
loopne
jno
stos
xor
xchg
sub
mov
add
add
cmp
loope
clc
jmp
mov
pusha
imul
xor
or
push
sub
add
or
pop
fistps
dec
xchg
scas
loopne
pop
sbb
lret
cmp
inc
dec
ja
jb
enter
fcoml
jl
sub
cmp
sub
fisubl
mov
lret
sbb
stos
mov
sti
mov
mov
mov
pop
add
sbbl
fnsave
outsb
mov
iret
fyl2x
in
mov
insb
cmpsl
into
cld
mov
loop
out
sti
pop
cmpsl
pop
scas
arpl
lods
lea
sbb
sbb
mov
jae
mov
xor
ret
cs
fstps
mov
jg
ds
jo
cmp
clc
xchg
cmp
enter
or
xchg
mov
out
xchg
jne
and
xchg
cmpsl
sbb
std
sbb
icebp
fistl
das
out
xchg
lods
bound
jmp
adc
test
inc
dec
leave
and
jo
stc
xor
aam
scas
icebp
sbb
dec
arpl
pop
adc
repz
ljmp
push
sti
adc
repnz
or
ficoms
enter
mov
sahf
mov
insb
push
cli
out
add
movsl
shll
cmp
ja
pop
aas
push
adc
rcrl
cli
xor
sub
test
ret
sbb
out
ja
popa
fucom
jecxz
or
fwait
dec
mov
jl
xchg
insl
cmp
mov
dec
ja
shl
dec
or
lret
cmp
dec
ljmp
fs
cld
add
shr
push
or
sub
cmpsb
aaa
sub
xchg
data16
mov
xchg
jl
and
sti
fimuls
lret
sub
cmp
lea
shll
cmp
int3
icebp
mov
ljmp
inc
fists
out
ds
mov
sub
xchg
adc
mov
out
nop
std
lock
cld
mov
xor
out
mov
sbbl
cmc
add
inc
push
test
mov
movsb
cmc
pop
jnp
push
mov
shrl
ficompl
sub
lods
jl
jmp
lret
mov
mov
add
shl
es
sti
mov
shrb
dec
je
dec
pop
pushf
fwait
cmpsl
sahf
outsb
loopne
pop
stc
sbb
out
lar
xor
sbb
or
mov
sub
pusha
in
shr
jle
notb
xor
sbbb
pop
xor
pop
insb
adc
outsl
inc
repz
pop
xchg
out
mov
push
pusha
out
pop
pop
mov
dec
lea
mov
test
shll
xor
mov
push
jae
test
add
pop
push
dec
mov
or
std
nop
aas
imull
xor
xlat
inc
or
mov
pop
mov
sbb
jns,pn
mov
loop
call
mov
pushf
jns
dec
movsl
dec
dec
iret
jnp
enter
xchg
aaa
jnp
nop
or
pop
push
and
inc
mov
and
ds
push
movsl
mov
shl
nop
ljmp
fnstsw
pop
pop
mov
push
xor
stos
cmp
mov
subb
rol
add
add
in
xor
inc
xchg
insl
mov
ja
inc
les
jge
cli
popf
add
aas
outsl
jb
aas
fsubl
inc
or
mov
or
daa
dec
rcr
pop
cmpsb
and
mov
jb
scas
or
pop
mov
xchg
cmp
loope
xor
cld
cld
cmp
xlat
mov
mov
pop
jae
cld
xchg
std
lahf
lods
aam
mov
fimull
add
gs
add
mov
push
sub
mov
in
addr16
stc
je
and
mov
jns
sub
or
sbb
int3
dec
jg
dec
aad
jle
mov
add
iret
inc
xchg
sub
stos
ds
xor
mov
insb
pushf
ret
adcl
jl,pt
add
push
mov
xor
shrb
lret
dec
mov
mov
mov
faddl
lahf
bndstx
pop
div
movsb
mov
adc
sub
add
pop
jecxz
inc
pop
popf
rep
loopne
xchg
mov
mov
stc
in
pop
std
call
sti
popf
sahf
aam
aaa
movb
xchg
push
cli
loope
popa
les
jae
fisttpll
jne
xor
jle
js
mov
popa
std
data16
xor
dec
xchg
fimull
and
dec
xrelease
sbb
aaa
pop
xor
and
inc
xor
dec
pop
dec
sub
ds
push
mov
jle
sub
xchg
imul
nop
push
jg
stos
cmpsl
faddl
push
cmp
jle
mov
mov
and
gs
lods
mov
icebp
pop
outsl
shlb
cltd
jo
cmp
repz
andl
imul
sbb
pop
mov
fnstsw
xchg
jg
in
and
in
and
call
out
dec
push
add
sbb
xchg
mov
inc
xchg
insb
popa
loope
lcall
add
pusha
fwait
xor
imul
inc
loop
repnz
enter
inc
push
cmc
pop
pop
lock
jl
lcall
scas
push
pusha
pop
jno
add
hlt
pushf
es
int
sub
jl
add
push
out
adc
mov
pop
jg
dec
xor
or
hlt
mov
pop
and
pusha
lods
jmp
dec
insl
cltd
scas
sti
push
inc
fsubr
adc
mov
adc
out
fdivrl
std
das
nop
leave
cmp
roll
scas
mov
jle
popa
divb
cli
cli
mov
negb
mov
ljmp
adc
mov
aad
inc
xorb
push
ja
shll
jbe
stos
lock
scas
ret
repnz
repnz
lret
fwait
les
sub
test
outsl
ret
bound
sbb
jne
scas
aas
mov
push
add
ljmp
out
mov
pop
pop
cwtl
pop
pop
push
cmpsb
fwait
xchg
cs
sub
and
cmp
ja
pop
lret
repnz
cltd
popa
test
cmp
adc
xchg
push
rclb
call
imul
shl
out
jno
mov
popf
xchg
clc
mov
mov
mov
into
outsl
outsb
mov
pop
ret
es
mov
cmp
mov
pop
std
shll
add
jle
jb
gs
loopne
sbb
lcall
imul
xchg
cmp
dec
inc
cmp
jno
and
sbb
add
cltd
jae
pop
sub
mov
jae
mov
fidivrl
adc
out
test
jecxz
lahf
pop
fdivrl
add
rcll
add
data16
fstpl
shr
sbb
pop
pop
dec
mov
pop
insb
dec
pop
enter
les
jno
sahf
push
lds
lea
mov
cmp
inc
mov
aad
inc
dec
out
int
jp
arpl
fistps
pop
aaa
cmp
jp
fistps
into
enter
aad
dec
cwtl
shlb
out
mov
mov
jmp
inc
mov
jmp
mov
or
lds
lods
xchg
adc
in
sbb
mov
repz
jmp
cmc
adc
in
lret
adc
addb
std
cmp
mov
insb
xor
mov
mov
out
jnp
pop
iret
iret
les
or
idivb
in
inc
sub
sub
jecxz
test
arpl
mov
loopne
dec
fadds
cmc
clc
lods
or
inc
xchg
cmp
adc
std
insb
pop
inc
in
mov
sub
rorl
push
mov
or
enter
roll
test
xor
js
adc
mov
mov
jnp
rorl
jns
jp
lret
push
daa
or
pop
andb
addr16
int
add
pop
lahf
test
jne
xor
cs
push
popl
test
ret
mov
loope
push
cwtl
jg
xorb
cltd
mov
xchg
mov
cmc
xchg
movsb
test
call
in
ret
or
xchg
jnp
sbb
xlat
in
inc
repz
out
fcmovu
stc
pop
xlat
gs
adc
lret
push
cli
jmp
aam
shrl
outsl
pop
adc
ret
stos
jbe
es
add
cmp
sub
cmp
mov
nop
in
push
scas
lock
adc
push
jmp
loopne
lcall
stos
xor
sub
pop
mov
stos
adc
mov
mov
mov
lock
call
sbb
fldcw
and
mov
push
inc
lret
fisttpll
or
ret
dec
jnp
pop
add
adc
leave
push
pop
jp
jns
xchg
pop
or
fstl
sbb
xor
shll
sarl
push
fcmovne
add
inc
or
leave
in
ja
cmpsl
mov
test
xor
idivb
push
imul
mov
pop
sbb
int3
mov
push
sar
jle
aas
push
inc
movb
scas
inc
or
push
sti
cltd
jns
xor
mov
pusha
push
push
aas
scas
clc
mov
cmp
js
str
or
rorl
icebp
repnz
jmp
add
ss
fwait
pop
mov
jle
push
adc
repz
pop
loopne
sub
sub
push
mov
push
loope
test
xor
rol
sbb
jge
loopne
pop
inc
fbstp
test
push
sahf
or
jo
pop
mov
or
or
push
jle
jecxz
cmp
xchg
jmp
push
push
call
mov
and
sub
shll
mov
jle
sbb
jo
sbb
mov
stc
daa
or
cs
xchg
data16
pop
imul
dec
ljmp
lds
and
sbb
movsl
xchg
rolb
inc
jo
add
stos
enter
andl
mov
lods
aaa
mov
mov
leave
lods
mov
std
pop
cmp
push
jecxz
repnz
mov
xor
fdivrl
lcall
pop
pushf
ja
shrb
es
pop
mov
movsl
int
jg
rcrl
mov
dec
cmc
cmp
sbb
outsb
cmp
xchg
and
lahf
xor
pop
outsl
scas
dec
pop
test
jne
sbb
fisttpl
mov
dec
and
out
cmp
cmp
sti
sti
mov
add
in
popa
out
xor
xchg
cmpsb
pop
cltd
and
pop
push
xchg
test
ficoml
outsl
sub
in
and
jg
xor
xorb
ss
mov
stos
push
mov
and
out
les
mov
sub
mov
es
jp
mov
call
leave
adc
mov
sub
pop
fwait
mov
cmp
sub
ds
loope
sub
xchg
pusha
or
mov
push
cld
daa
sub
pop
mov
adc
sub
aam
push
cld
push
xchg
mov
lret
adc
dec
mov
in
aam
movsb
cmp
push
push
sbb
loop
shrb
lds
leave
sbb
ret
fnsave
ror
sbb
lods
adc
in
test
xor
cwtl
test
add
or
dec
xchg
test
jmp
jmp
mov
fwait
push
lods
dec
aaa
sub
and
je
lods
ret
mov
pop
jne
xchg
adc
rep
lds
lahf
mov
push
xchg
cld
mov
les
xchg
mov
add
cmp
and
or
xchg
jl
pushl
add
filds
and
std
stos
adcb
or
adc
add
call
xor
push
adc
shll
inc
jmp
xlat
movsl
sbb
hlt
dec
dec
mov
push
shrl
sbb
dec
adc
add
in
cmp
shll
xor
push
mov
es
inc
testb
rclb
cwtl
lret
and
push
pop
mov
dec
mov
loop
jp
sub
mov
inc
adc
cld
movsl
es
scas
outsb
push
cmp
test
ljmp
xor
add
add
add
add
out
mov
cmpxchg
push
mov
pop
stos
gs
mov
jmp
in
or
or
out
sub
insb
xlat
scas
inc
add
loope
and
test
mov
dec
sub
test
lret
cmovp
repz
and
add
push
ret
stos
test
jo
or
fldl
jnp,pn
popf
mov
jns
inc
or
and
xchg
jg
pop
mov
adc
cmpsb
loop
repz
jno
push
xchg
sahf
test
jmp
pop
xchg
mov
fwait
push
repz
jmp
insb
dec
jmp
mov
add
jne
outsb
jg
lods
popf
rorb
xor
add
scas
push
sahf
out
data16
outsl
pushl
and
mov
int3
mov
cmp
iret
sbb
ficoml
push
jns
jne
mov
adc
push
cmp
pop
xorl
mov
or
xchg
xlat
sbb
jge
aaa
fsubrp
jo
sub
scas
aas
xlat
popf
and
orl
xchg
lock
loopne
sbb
mov
jg
or
inc
loope
mov
aam
rorl
scas
outsb
mov
sub
faddl
cmpsl
cmpsb
out
inc
negl
xor
push
imul
nop
mov
and
das
clc
rcrl
xor
aad
hlt
mov
push
pop
xor
mov
jl
paddd
dec
arpl
sub
daa
xchg
sub
lret
jg
push
jg
dec
ds
cmc
adc
mov
jmp
clc
cmp
pop
or
je
sub
fistl
decl
mov
dec
and
testl
ljmp
push
mov
out
jnp
and
outsl
in
inc
xor
xchg
test
mov
push
xchg
cmp
loopne
pop
stos
ficoml
clc
and
mov
pop
repz
iret
dec
pushf
cmpsl
movsl
lahf
sbb
ljmp
inc
jl
jbe
sub
mov
jmp
add
sub
outsb
dec
xorl
lock
test
into
ds
push
xchg
jmp
xor
ret
add
daa
inc
dec
fidivs
push
incb
stos
adc
loope
iret
aam
sbb
xor
xchg
scas
push
inc
jo
mov
out
jno
roll
iret
pop
mov
inc
fildl
inc
adc
push
ret
shll
stos
xor
mov
stos
mov
loope
lds
repz
xchg
pop
addr16
or
inc
pusha
loope
test
mov
test
add
in
pop
pop
sub
je
in
adc
rorb
lret
aad
xor
test
push
enter
xchg
mov
xor
jecxz
xchg
mov
inc
xlat
in
dec
call
dec
mov
cs
lret
aad
jno
into
je
aad
cs
cltd
sub
fnsave
lock
push
ja
pop
xchg
inc
sbb
xchg
popa
xor
fiaddl
scas
cmp
repz
add
cmc
or
hlt
ja
xchg
mulb
call
imul
loope
fimull
jae
fmull
sub
add
xor
lods
rolb
in
adc
xor
test
cmpsl
jmp
shrb
mov
ficoms
add
dec
jle
mov
out
sbb
in
pop
mov
add
xchg
scas
sahf
stc
lods
jge
popf
rorl
push
lds
inc
daa
mov
xchg
mov
or
arpl
paddd
pop
jbe
icebp
mov
addl
jb
add
dec
xchg
mov
dec
popf
es
mov
sbb
aaa
fcompl
in
lcall
das
movsl
loope
lret
cmp
dec
stos
push
pop
mov
pop
shlb
push
lret
and
adc
dec
sbb
out
mov
mov
ljmp
dec
xchg
push
xchg
or
xlat
inc
push
aaa
aaa
in
pop
or
repnz
or
mov
dec
pop
sahf
test
mov
mov
out
pop
leave
iret
pop
movb
in
clc
pop
push
sub
mov
mov
push
fwait
inc
adc
loope
xor
cmp
hlt
out
push
cmp
mov
filds
xor
repnz
cltd
push
mov
push
pop
or
sbb
jmp
dec
add
int
bswap
insb
or
and
cmc
inc
loope
push
pop
lds
ret
in
lods
fwait
out
outsl
ror
test
sub
push
popa
sub
lahf
mov
js
insb
outsb
pushf
lea
xchg
pop
cld
rclb
inc
bound
cmp
mov
cmp
pop
and
add
daa
mov
dec
pop
sub
leave
or
or
or
lcall
iret
sbb
out
pop
xchg
test
ficompl
in
or
xor
jnp
xor
adc
cltd
aas
dec
sub
mov
push
xor
cld
stos
jp
cwtl
cld
lcall
inc
in
push
add
adc
adcl
sti
lds
enter
mov
mov
jbe
xchg
test
test
test
movsl
repnz
mov
lds
repz
xchg
push
lods
in
jge
sbb
lods
and
int3
std
cli
ret
movsb
rcrl
xacquire
pushf
xchg
push
out
lcall
xchg
push
dec
mov
imul
lock
mov
xor
push
xor
out
jbe
subl
fnstenv
fiaddl
mov
pop
or
add
xchg
cli
mov
or
or
ja
or
push
mov
cli
into
fstpt
xchg
addr16
xorl
xchg
pop
mov
call
ljmp
je
sub
fwait
je
sarl
fs
lods
push
dec
fld
idivl
inc
loopne
xor
sbbl
cmc
inc
cmpsl
int3
aaa
inc
dec
dec
out
lea
cltd
loopne
push
lds
scas
mov
pop
mov
mov
fs
inc
out
addr16
mov
pop
sub
jmp
push
clc
add
or
pop
dec
sub
jns
pushf
adc
sbb
ljmp
add
xor
dec
xchg
pop
fsubrs
and
push
ficoms
aaa
cltd
shl
lds
xchg
js
dec
xchg
lea
push
and
test
ss
ret
and
or
sub
mov
cmp
in
loop
movsl
hlt
adc
dec
adc
pusha
cwtl
loope
sbb
fadd
inc
jb
orb
or
fstpl
repz
ljmp
xchg
movsb
pop
shlb
int3
push
mov
lods
cli
pop
mov
or
aaa
les
pop
sbb
gs
pusha
xor
shrl
mov
adc
push
nop
cltd
xchg
data16
cmpsl
dec
jno
sub
fs
jl
inc
fldl
jo
xchg
loop
or
mov
inc
imul
test
mov
dec
out
lods
sub
push
std
scas
or
mov
push
icebp
aad
mov
stos
jo
sbb
sti
ret
dec
push
add
ja
and
je
stos
or
and
push
xor
int
cwtl
cli
xchg
popa
imul
pop
ss
jmp
pop
das
scas
pop
mov
scas
pop
push
add
push
mov
pop
xor
dec
bound
rorb
dec
mov
mov
mov
inc
or
and
cli
mov
imul
ror
in
js
test
int3
movsl
lcall
aas
aam
lea
pop
popa
int3
cli
pop
dec
push
lods
popf
fbstp
pop
jecxz
leave
inc
adcb
sbb
pop
jecxz
jmp
cmpsl
stc
jno
add
add
imul
pop
jb
inc
cmp
test
lds
pop
test
dec
xchg
fldl
cwtl
sub
mov
clc
xor
jl
xlat
cmpsb
push
es
add
fildl
dec
xor
cmp
pop
imul
outsl
cmp
pop
std
and
addl
and
pop
scas
loopne
lods
mov
mov
sahf
pusha
pop
pop
xchg
mov
pushf
rolb
mov
xor
jg
out
into
mov
lret
loop
bound
rclb
rcrb
dec
stos
xor
pop
nop
outsl
mov
loope
and
testb
mov
out
ljmp
push
sbb
stc
je
repnz
incb
in
popf
and
jae
add
inc
add
clc
scas
xor
mov
test
jnp
or
je,pt
fnstsw
out
ljmp
imul
js
add
dec
rol
sub
lcall
aaa
mulb
mov
push
push
push
mov
outsl
mov
xchg
in
mov
xor
hlt
cmc
push
inc
pop
push
lret
xchg
int3
xor
and
subl
adc
xor
or
adcl
dec
std
mov
cmp
dec
lahf
jp
jge
mov
cmp
inc
cmp
sahf
sub
std
rcrl
sub
test
sar
sbb
sbb
adc
ficoms
out
fs
cmp
mov
lret
mov
lods
lahf
nop
shl
loop
cli
sub
xchg
pop
ds
cmp
in
jb
mov
orb
pop
aam
sti
push
or
xchg
out
lea
and
mov
mov
dec
jb
psraw
inc
pop
or
or
das
in
faddl
inc
lret
lret
xchg
cmpsb
xor
pop
xchg
aam
or
ret
mov
add
jno
and
movsl
mov
ja
aas
enter
sbb
push
cs
fmuls
jo
cmp
inc
stc
push
data16
cmpb
sahf
mov
xor
lods
sti
mov
ja
jnp
mov
or
pushf
je
aaa
sahf
daa
lds
pop
push
movsb
loop
out
xor
mov
aaa
cli
or
lret
cmp
andl
or
aaa
subl
fldl
adc
negl
out
lcall
test
jge
xorb
stc
xor
add
pop
dec
jle
push
push
insl
mov
outsb
out
mov
call
lret
mov
mov
inc
xchg
adc
xchg
sbbl
inc
sub
xchg
shr
mov
repnz
in
push
icebp
jp
xchg
mov
ds
cmp
leave
in
mov
xchg
dec
daa
lock
jmp
mov
pop
and
stc
sbb
rcll
xchg
pusha
subb
push
bound
sub
inc
dec
xor
fwait
sub
jno
mov
jo
cmp
imul
xor
mov
lea
clc
aam
inc
mov
pop
xor
cmp
lahf
das
subl
mov
ss
cmp
ficoml
and
mov
cmc
lods
mov
dec
mov
stos
in
pop
popf
mov
pop
iret
icebp
push
mov
movsb
jo
and
jmp
jo
jecxz
out
adc
mov
out
fs
stos
in
test
mov
addb
inc
scas
sbb
and
movsl
sub
cld
or
lcall
stos
add
lods
inc
cmp
pop
cltd
pop
dec
dec
sub
daa
mov
pop
mov
insl
cmp
ret
rcrl
sbb
sbb
sub
sarl
je
adcb
and
push
jmp
push
mov
popf
sub
cli
jae
cli
mov
out
rep
out
ss
fbstp
idiv
and
push
dec
movsb
sub
addr16
push
xchg
mov
push
push
js
jp
push
and
aam
call
in
mov
and
gs
xor
add
fcomps
lcall
shlb
lods
iret
pop
shrl
xorl
scas
sbb
mov
sbb
out
sbb
inc
dec
lret
push
jmp
cmpl
adc
scas
pusha
xchg
sbb
stos
xchg
jno
sub
das
fidivl
xor
pop
xor
fnstcw
dec
adc
outsb
xchg
cmc
aam
fnstcw
mov
dec
enter
cld
test
inc
lock
push
jns
mov
cmove
jnp
xor
pushf
sbb
cmc
xchg
fldcw
mov
jo
aas
mov
push
push
cwtl
lock
aas
call
fwait
jecxz
pop
inc
pop
pop
lret
aad
aaa
int3
sub
mov
adc
in
sbb
cli
pop
push
in
add
xor
sub
mov
bound
scas
fisttpll
or
gs
and
sbb
pop
pop
inc
insl
je
pop
push
cmp
pop
push
in
mov
cmp
arpl
sbb
xor
pop
das
das
jmp
mov
clc
sub
mov
mull
fildl
into
mov
data16
push
dec
lods
xchg
pusha
pop
cvtps2pd
push
dec
pop
fbstp
fnstsw
xor
pusha
or
adc
mov
push
mov
inc
fisubrs
ds
add
pushf
loope
outsb
test
lahf
iret
adcl
sbb
sbb
or
das
mov
mov
sarl
add
dec
scas
sbb
add
leave
cmc
pop
or
aaa
cmp
out
or
or
test
dec
mov
sarb
xor
cltd
into
lcall
mov
cmp
rcrl
repz
sub
addr16
mov
dec
jg
and
inc
inc
sti
mov
movsl
aaa
cmp
sub
jae
or
das
cld
sbb
cmp
test
ja
andl
outsl
push
daa
outsb
cwtl
pop
jo
and
sub
popa
sub
jmp
inc
add
sub
dec
fcomp
push
inc
mov
mov
fcmovu
adc
aad
push
inc
sub
es
pusha
xor
lea
std
repnz
test
cld
gs
addr16
mov
outsb
outsl
and
sub
scas
stos
sbb
xchg
inc
sbb
push
pop
xchg
in
and
cltd
cltd
xor
orl
push
fs
out
notb
scas
inc
icebp
xor
sub
rorb
ret
jnp
xchg
push
aas
xchg
pop
pusha
mov
pop
jge
sbb
add
lcall
fbstp
fldl
add
cli
lds
xchg
add
and
movl
push
cmpsl
push
ret
outsb
add
cmp
fldenv
aas
jne
addr16
cmp
jno
pop
and
sbb
sub
fidivs
ficomps
fildll
push
test
stos
sti
dec
sbb
scas
push
cs
mov
jns
in
in
xor
jl
clc
push
loop
stos
data16
into
neg
mov
enter
pop
mov
cli
mov
sbb
pushf
mov
push
inc
jae
addr16
mov
in
inc
enter
xor
in
mov
jo
mov
mov
pop
jge
push
sub
lret
xorl
xchg
sbb
fcmovnbe
ss
xorl
ja
pop
dec
insb
pop
dec
pop
mov
aad
jle
xchg
jecxz
inc
or
add
or
mov
in
jecxz
pusha
xor
daa
repz
aad
fdivp
push
ja
sbbl
pop
pop
and
popa
lret
adc
push
dec
lret
fildl
inc
add
mov
mov
xorb
lcall
push
sub
mov
fwait
mov
arpl
psraw
inc
or
adc
insl
ret
xor
subl
mov
jge
inc
mov
xchg
test
lods
mov
jnp
xor
or
add
mov
and
in
pop
loope
or
mov
cs
mov
jmp
pusha
shll
lods
or
stc
fistpl
pop
insb
pop
mov
popl
and
outsl
or
sbb
pop
pop
xchg
test
mov
mov
insl
xor
fldcw
pop
cmp
das
sub
jnp
sub
jg
mov
or
aad
mov
test
and
cmp
cmp
mov
push
aam
cmpsl
dec
bound
ret
push
dec
xchg
or
dec
pop
add
and
aad
addl
imul
sub
and
inc
sub
rol
pop
mov
jp
addr16
repnz
pushf
popl
mov
xchg
push
out
popa
jno
daa
idivl
xor
js
inc
and
xor
xor
cli
mov
cld
sti
je
mov
fists
add
dec
add
jl
subl
dec
fisubrl
jecxz
mov
popf
sub
icebp
mov
dec
cwtl
repz
sub
mov
jno
stos
cmpsb
pushf
jno
stos
mov
mov
or
xchg
insb
dec
bound
and
ds
or
fwait
rclb
out
les
lods
pushf
aam
xchg
add
cli
pushf
aam
mov
or
incb
outsb
push
dec
sub
pusha
and
js
cmp
or
sub
shlb
jecxz
stc
fldt
test
cmc
aaa
push
ret
inc
and
in
sbb
xlat
lret
mov
jle
fcomip
mov
pop
daa
imul
xor
cld
jne
movsb
xlat
icebp
shll
push
pop
xor
xchg
insb
imul
jmp
sti
or
adc
mov
mov
or
push
inc
sbb
lret
sbb
insb
enter
stos
decl
mov
lret
dec
push
mov
mov
mov
xchg
mov
ss
cwtl
es
mov
andb
lock
fxch
push
mov
and
shlb
test
cmp
sub
cmp
daa
cmpsl
mov
mov
arpl
cmc
rcrb
mov
cli
and
repnz
adc
mov
nop
shlb
dec
dec
cs
mov
xchg
loop
iret
mov
loope
inc
scas
xlat
dec
cs
adc
mov
out
xor
popf
sub
fwait
std
pop
pop
adc
das
sub
int3
lds
ss
clc
sub
aaa
lret
aad
and
mov
idivb
cmp
dec
dec
jg
xchg
nop
pop
jo
rclb
cmpsl
repnz
fildl
cmp
inc
xchg
mov
or
and
testb
lds
pop
push
stc
stc
loop
push
aaa
xchg
shrl
bound
cmp
repnz
mov
movsl
jmp
xchg
xor
lods
or
lahf
mov
mov
or
add
subl
cmp
lods
imul
sbb
push
or
and
dec
stos
aaa
rcl
pop
inc
subb
sbb
loop
mov
pop
add
mov
xor
popf
movl
lcall
clc
std
fs
jne
sbb
ret
movsl
cli
push
mov
sub
bound
inc
stc
pop
stos
in
jbe
test
jbe
in
mov
xchg
mov
mov
xchg
pop
mov
out
fsubrp
push
mov
imul
ror
mov
fidivrl
lds
add
xchg
sbb
enter
pushf
mov
inc
xchg
adc
arpl
sbb
and
sub
into
sbb
mov
scas
xlat
jno
popa
cli
sbb
into
enter
dec
mov
test
loopne
and
test
sub
arpl
scas
mov
add
push
dec
std
stos
out
aaa
arpl
mov
inc
stc
nop
sbb
mull
in
sub
popf
call
cmp
pop
lret
xchg
test
push
cmp
fldenv
call
xor
outsb
mov
sub
dec
dec
outsb
hlt
loop
leave
mov
xchg
mov
repz
inc
mov
cmc
push
mov
cwtl
lea
lds
loopne
inc
in
es
aam
cmp
pop
imul
cs
sub
mov
mov
lods
xchg
insl
dec
mov
cmp
cld
mov
xlat
xchg
pop
lods
jmp
add
inc
icebp
cli
out
add
ret
into
jmp
sub
jb
test
push
mov
inc
push
mov
push
repnz
repnz
pop
ret
jmp
xor
sbb
pop
adc
sub
inc
ljmp
push
aas
jo
ljmp
stc
jb
adc
cmp
pop
dec
lods
adc
inc
add
jno
fisubs
jno
adc
sub
add
scas
inc
ljmp
and
xchg
cli
jl
dec
cmp
loopne
xchg
pushf
mov
mov
and
stos
jl
xchg
dec
mov
loop
dec
pushf
mov
mov
cmp
push
aas
paddd
fs
arpl
dec
mov
gs
lahf
fidivs
addr16
mov
rcl
popa
je
shlb
es
into
adc
cmp
lock
push
xchg
inc
sti
xor
dec
dec
mov
scas
cmp
xor
push
insb
testl
add
xor
mov
adc
pop
popa
mov
js
popa
popa
xchg
and
pop
mov
or
push
mov
out
jae
je
ljmp
adc
xchg
xchg
shlb
loope
jecxz
adc
inc
mov
jo
mov
movsb
gs
mov
push
ja
aas
mov
jge
sub
scas
cmp
jnp
outsl
dec
movsb
sbb
inc
mov
insb
dec
in
ljmp
jmp
frstor
sub
and
pop
loop
sbb
jbe
fstps
dec
imul
adc
icebp
in
stc
hlt
in
mov
jg
xchg
jno
aam
ss
out
dec
jl
loopne
popf
test
mov
xor
mov
mov
inc
inc
data16
xor
lcall
sti
movsl
imul
dec
in
mov
mov
bound
dec
sub
stos
sub
xor
pusha
mov
sub
in
add
jb
rcll
xchg
sub
stc
xchg
imul
push
frstor
or
mov
xchg
nop
stc
xor
out
icebp
in
int
addb
mov
or
sbb
stc
inc
sub
sub
push
mov
adc
add
or
jl
dec
inc
jae
add
adc
pop
sub
or
fiaddl
scas
jns
cmpsb
or
jae
mov
loopne
xor
out
sub
pop
hlt
ret
rol
loope
loop
sahf
test
jle
in
xchg
les
sub
lds
xchg
or
pushw
xor
mov
and
in
test
insl
repnz
push
inc
cld
cmp
insl
jg
fwait
outsl
cmc
xlat
pop
into
stc
insb
push
imul
push
stos
xchg
fpatan
test
ja
stos
mov
jmp
inc
inc
js
icebp
fnstenv
cmc
sarb
add
aas
in
mov
pushf
clc
cmp
push
and
cli
inc
cmp
cmp
sbb
pusha
pop
mov
lahf
mulb
popa
inc
mov
shlb
pop
jg
xchg
xchg
int
xor
repnz
mov
test
lods
jno
cmp
div
mov
pushf
insl
mov
mov
sti
xchg
xchg
cmc
in
push
scas
popa
mov
mov
sbb
fistpl
sbb
jge
dec
pop
add
jp
xor
stos
adc
inc
sbb
mov
or
inc
scas
enter
mov
dec
pop
aad
xchg
in
xchg
add
jmp
jl
mov
and
lea
add
push
sti
incl
clc
dec
lods
add
jmp
std
add
add
imul
mov
ljmp
in
and
push
dec
mov
push
or
fwait
push
mov
push
push
int
test
add
jns
inc
adc
adc
mov
iret
frstor
fnsave
aaa
mov
ds
push
mov
out
std
push
adc
jae
xor
mov
ret
sarb
mov
pop
lods
gs
jae
mov
roll
jns
pop
and
jbe
clc
xchg
jnp
scas
and
mov
pop
ss
repz
aam
add
mov
push
fnstcw
insb
lret
dec
xchg
data16
adc
lods
pop
incl
xor
lret
testl
mov
mov
dec
and
pop
dec
jo
and
mov
movl
pop
adc
sbb
nop
stc
sbb
push
daa
lods
dec
mov
mov
addl
lea
xchg
inc
dec
into
dec
pop
sbb
cmp
and
divl
dec
inc
sbb
push
push
mov
aad
fldl
or
adc
out
ljmp
jne
cmc
movsl
pop
cmp
xchg
fldl
cmp
dec
rcrl
aam
test
mov
lods
dec
pop
test
hlt
and
pusha
shlb
int
sub
mov
cs
in
cmp
jecxz
and
sbb
call
inc
insb
adc
cmp
leave
mov
leave
lods
fidivs
sub
ss
rcrl
xor
fsubrl
cmp
sub
adc
int
sbbb
jnp
or
push
adc
hlt
enter
mov
out
or
mov
inc
jno
in
lods
dec
idivb
js
sub
or
pop
das
ret
rcrl
jnp
popa
test
out
mov
xchg
sub
test
push
or
inc
shlb
das
mov
cmp
mov
cmp
js
bound
test
pusha
push
inc
cmc
xchg
adc
aaa
pushf
xchg
jmp
repz
nop
int
push
inc
popa
faddl
adc
mov
or
lock
scas
adc
pop
cmpsl
roll
in
and
or
addl
xchg
je
aam
scas
sti
cld
insl
sub
dec
shr
scas
dec
out
fnstenv
mov
xchg
sbb
or
repnz
in
xor
mov
adc
jne
and
xchg
sub
inc
or
mov
add
push
loopne
lret
bound
ss
out
popa
lds
cwtl
icebp
dec
jl
xchg
icebp
cmp
icebp
dec
test
scas
xor
and
dec
inc
insl
dec
sbb
jns
xchg
cmp
popf
push
xchg
sub
add
push
dec
dec
movsl
mov
cmp
scas
enter
je
xchg
cmp
scas
aad
push
adc
ss
sbb
aad
mov
xchg
push
jnp
push
xor
repnz
lods
dec
pop
mov
sbb
mov
das
iret
loopne
lods
fwait
lea
rcll
jo
jne
dec
jle
or
add
or
ret
sub
ficomps
adc
xor
loopne
lods
imul
xchg
stos
mov
das
dec
call
lcall
pop
or
jg
mov
notl
inc
cmp
xchg
mov
jl
pop
pop
mov
sub
pop
imul
loopne
lods
inc
pop
scas
aam
andl
pop
movsb
adc
cmpsl
adc
das
scas
movsl
cmp
lret
mov
xchg
sbb
jle
add
adc
xchg
adc
fstpt
je
cli
fistpll
pop
sbb
pop
push
mov
mov
dec
in
sbb
push
dec
mov
jle
and
clc
out
pusha
pop
xchg
cmpsl
popf
inc
add
inc
dec
stos
scas
scas
mov
das
lods
mov
scas
sti
dec
loop
pop
xchg
test
fisubrs
sarb
jmp
mov
sub
adc
imul
imul
xor
xchg
mov
in
jb
pop
add
ret
dec
inc
gs
jno
jmp
sub
push
pop
push
enter
jae
test
inc
daa
lods
lret
mov
fstpl
inc
stc
loop
lods
in
mov
sbb
cmp
in
pop
int
cmp
push
lods
cmpl
imul
into
loop
cmc
push
or
push
aas
jns
cmp
arpl
xchg
xchg
retw
std
mov
sbb
ljmp
adc
cmp
sti
inc
xor
add
shll
push
jecxz
mov
aam
ja
mov
pop
fsts
sub
pop
mov
movsl
xchg
cmc
jns
shll
les
adc
inc
cltd
or
mov
imul
in
gs
mov
cltd
bound
fidivs
rolb
sti
stos
xchg
imul
jb
xchg
fwait
in
shlb
mov
add
fildll
mov
or
mov
js
rcr
ret
jp
jg
adc
ds
pop
push
mov
mov
sarb
xchg
inc
inc
es
hlt
fs
fsts
add
cmpsl
jnp
mov
mulb
jnp
sbb
push
outsb
cmp
lods
fildll
push
fisubs
or
push
aam
pop
mov
insl
call
ljmp
cwtl
orb
xor
shrl
mov
pusha
test
iret
cmp
add
sbb
dec
faddp
mov
cmp
dec
gs
loope
push
and
in
ss
add
out
or
sti
fwait
xchg
adc
xor
push
sbb
cmp
aas
xlat
xchg
xchg
pushf
xor
loopne
or
and
stos
jge
dec
jl
sbb
jp
arpl
jae
cmp
lret
sahf
or
xor
fiadds
mov
or
or
outsl
inc
push
dec
cld
loopne
movzbl
push
fsubl
int3
dec
leave
xchg
dec
and
xchg
inc
sub
test
stc
js
int3
imul
fwait
dec
outsl
pop
scas
cmc
bound
sub
cmp
jg
aad
inc
jl
insb
xor
movsl
sahf
jo
out
in
mov
push
inc
xchg
lock
ret
push
les
mov
fistpl
pop
test
leave
pop
xchg
addr16
idivl
outsl
adc
aam
or
push
add
test
cli
jg
and
jne
xor
popa
pop
and
xchg
mov
dec
popf
adcb
push
iret
jp
daa
xchg
jle
not
jns
jecxz
test
roll
lock
or
ja
popf
sbb
fdivr
jle
xchg
jne
dec
add
cmpsl
xor
add
push
test
mov
out
shl
or
sbb
lahf
sub
jle
fmuls
fwait
mov
sbb
aas
sbb
out
push
jl
clflush
xor
loop
sbb
enter
jo
std
jne
in
fnsave
cmpsb
xlat
hlt
repnz
rcr
dec
xchg
orl
mov
and
int
dec
adc
mov
cmp
jo
mov
jne
or
test
gs
inc
mov
or
xchg
pop
sti
lcall
mov
xchg
xchg
push
sti
aad
cwtl
in
mov
hlt
scas
lret
mov
pusha
mov
cmpsb
roll
push
adc
mov
loopne
lcall
push
cmp
push
bound
or
enter
out
pop
idivb
scas
sti
xchg
mov
lods
sbb
testb
push
das
imul
leave
inc
xor
mov
shll
repz
mov
cld
xorb
lahf
cmpsb
cmc
sbb
xchg
push
sbb
repz
mov
test
mov
mov
fiadds
push
out
mov
cs
mov
mov
pop
pop
jmp
sbb
xor
call
js
jae
mov
mov
xlat
shr
sbb
pop
mov
pop
dec
push
jmp
lret
add
mov
xor
fldl
int3
cmp
jecxz
inc
icebp
xchg
loop
sbb
and
push
lods
cmp
out
shll
push
icebp
pop
mov
add
jno
hlt
sub
jne
imul
mov
sbb
pushf
sbb
cld
sub
outsb
xchg
jne
fs
testb
out
in
movsl
add
and
adc
cmp
ja
xchg
stos
dec
push
sbb
lcall
dec
pop
or
lods
sub
or
add
cmp
inc
ret
dec
cmpsb
push
bound
arpl
push
inc
call
jns
sub
push
pop
sub
mov
or
or
pop
push
cmp
popa
and
cmp
lock
jp
ret
leave
aam
out
pop
adcb
adc
push
dec
call
jne
cmp
aaa
jmp
or
mov
aad
mov
das
xlat
mov
and
std
imulb
sbb
push
test
shlb
dec
xchg
inc
es
ds
scas
cmp
dec
or
stos
in
movl
mov
sbb
in
or
xor
into
jl
inc
js
xor
adc
out
stos
out
dec
or
sub
ds
mov
xchg
pop
ja
mov
cwtl
cmc
in
push
or
mov
in
jmp
mov
subl
mov
pop
icebp
and
cwtl
stc
popa
add
daa
add
or
mov
pusha
mov
mov
stos
fidivl
js
mov
cltd
push
hlt
cmpb
pop
outsb
adc
push
lock
xchg
ret
stc
xor
js
mov
pop
pop
loopne
or
imul
sti
in
es
mov
cmc
sub
dec
test
test
mov
test
in
cmp
and
mov
mov
stos
pop
sub
fnsave
cmc
aas
hlt
cmc
stos
int
sarb
sub
les
jb
js
sbb
push
fs
jno
sub
iret
inc
xchg
jge
rcll
flds
mov
mov
inc
jl
shlb
nop
ja
mov
popa
fstpl
cmc
dec
mov
mov
idivb
fbld
lcall
call
inc
loope
jle
addr16
loopne
xor
imul
pop
cmc
sbb
mov
mov
stos
mov
or
arpl
dec
and
and
cmp
mov
insb
test
mov
xor
sbb
xchg
fstpt
sbb
xor
test
das
setl
xor
xchg
xchg
stos
ljmp
mov
mov
xchg
cmpsl
sub
fistl
cmpsb
lds
xchg
mov
mov
ss
jbe
aam
lods
mov
stos
negb
movsb
cmp
mov
repnz
cs
jp
ret
jbe
jl
mov
xchg
aaa
imul
and
and
stos
dec
and
adc
dec
push
loop
push
data16
in
xchg
insl
mov
shll
sahf
and
push
and
jge
mov
int
xor
sub
mov
call
or
adc
shlb
add
leave
lock
ljmp
dec
insl
in
mov
cmp
push
ja
jmp
jmp
pop
imul
dec
out
dec
nop
scas
cmpsb
mov
sub
add
cmpb
sbb
adc
jp
inc
lcall
mov
sbb
pop
xor
aaa
dec
mov
cmp
mov
jae
pop
pop
dec
dec
cld
sahf
pop
add
pusha
push
fwait
cmp
push
mov
aas
mov
popf
cmp
sub
xchg
pop
fs
inc
xchg
add
xorb
in
mov
int
int
or
test
arpl
jns
test
fldln2
xchg
ret
daa
cmp
xlat
pop
cli
std
popf
mov
outsb
fsubrl
xor
cwtl
pop
sub
xor
shrl
imul
sahf
or
shl
scas
imul
mov
hlt
in
ret
xchg
lock
adc
inc
in
mov
pop
cmp
lds
xchg
or
loopne
cwtl
aaa
xor
or
dec
xor
or
incb
sub
mov
cmpsb
push
clc
repnz
dec
xchg
inc
jo
and
test
cmp
mov
lret
cmp
inc
jl
xor
xchg
xchg
sti
push
mov
inc
dec
lods
arpl
imul
in
pop
ss
pop
push
mov
ret
dec
enter
scas
inc
cmp
mov
push
cmp
inc
fistl
or
hlt
adc
mov
loop
ficoml
fcompl
and
push
or
xchg
ja
cmpsl
imul
insl
in
xchg
outsb
jbe
cmpl
iret
sarb
jle
std
bound
sub
mov
inc
clc
addr16
outsb
dec
into
mov
fmull
cmp
push
pop
es
cmpsb
push
adc
push
adc
and
insb
jb
aas
push
repz
aas
or
push
pop
fwait
xchg
scas
shr
pusha
in
mov
cld
out
sbb
arpl
inc
decb
mov
push
sub
pop
jmp
push
mov
es
out
pop
test
xor
nop
jo
add
inc
and
mov
pop
sub
das
push
pop
sahf
push
push
stos
xor
sub
cmp
clc
xchg
pop
out
sbb
add
outsb
add
lret
cmp
cmpsl
fistpll
cld
mov
dec
fxch
fs
xor
test
scas
imul
xor
jge
es
mov
aam
loope
or
and
dec
adc
add
in
lret
xor
mov
loop
fmul
push
pop
nop
bnd
push
mov
into
jp
mov
sub
out
push
gs
lods
lds
repz
ds
adc
add
jnp
jb
jle
push
das
xor
xor
adc
rcr
gs
or
in
stos
cmp
ja
nop
repz
push
popa
xor
or
inc
icebp
mov
sub
pop
jno
jge
cmp
ja
daa
xlat
add
in
cli
dec
pop
jns
add
and
mov
mov
inc
mov
sbb
aas
xchg
jae
sub
cmp
out
hlt
scas
xchg
sbb
popf
or
dec
lret
fstps
add
test
cmp
jo
les
movsb
jbe
orb
jle
adc
push
sub
int3
enter
fldl
je
clc
dec
pushf
ljmp
das
and
jp
adc
lahf
or
mov
sub
adc
sbb
or
mov
in
push
xor
loope
push
mov
data16
pop
cmp
cmp
imul
sbb
lcall
ret
lock
int
fldcw
lea
dec
xor
ss
cmp
push
pusha
ficoml
imul
out
int
in
jns
fmull
pop
sub
fwait
inc
push
popa
lret
adc
adc
addb
ds
cwtl
inc
daa
rolb
fisttpl
cltd
lret
mov
inc
dec
xor
sysexit
out
dec
xchg
ffreep
jg
jle
aam
or
jb
pop
cmpsl
pusha
cmp
jae
or
incl
pop
push
mov
cmpsl
xor
add
sbb
jg
mov
int3
sbb
int3
mov
fimull
jle
jp
insl
mov
cltd
and
push
enter
aaa
cltd
xor
and
ss
ret
ds
mov
cmp
gs
repnz
pushl
cmp
mov
pop
mov
mov
mov
flds
push
inc
push
enter
cmp
ljmp
pop
xchg
insl
jbe
rorl
and
xchg
mov
xchg
mov
jecxz
je
out
or
fstps
cmpsl
xorb
dec
sub
add
push
mov
imul
add
xor
fnstcw
pushf
dec
xor
or
push
jcxz
push
jmp
adc
cmp
in
sbb
xlat
dec
or
xor
jns
jae
jo
or
testl
adc
cli
jo
daa
enter
ret
mov
ficompl
lods
mov
lret
add
sub
jns
cmp
shr
mov
outsb
idivb
pop
pop
popf
dec
out
sbbb
mov
xchg
faddl
mov
inc
fisttps
dec
dec
pop
loop
cltd
das
pop
into
cmpsb
add
cli
inc
adcb
stos
rorl
add
xor
cmp
addl
or
xor
rcrl
xchg
repnz
mov
test
aaa
mov
cmp
daa
xlat
push
mov
hlt
les
or
or
xor
es
pop
or
inc
aas
adc
fisttpl
insb
fwait
fwait
xchg
push
stc
insl
pop
jnp
dec
dec
fwait
pop
in
cs
cmpsb
mov
ljmp
or
dec
xor
mov
js
adc
or
andb
jne
xchg
push
aaa
into
cltd
loope
push
cwtl
fnsave
jg
mov
fcomps
lods
push
sar
les
jp
mov
xchg
and
cs
jbe
rorb
pop
mov
mov
pop
push
xchg
cmp
and
gs
rcr
inc
pop
adc
pop
sub
aas
mov
xor
pop
inc
insl
out
xchg
sarb
xchg
fdivs
mov
add
js
ror
xchg
pop
ret
sti
or
ja
adc
mov
adcb
push
mov
je
movsl
adc
dec
inc
je
lret
mov
adc
and
cwtl
cli
rolb
shll
mov
in
adc
mov
lods
fdivp
xchg
insl
xchg
test
xchg
icebp
scas
loope
xchg
jmp
out
cmp
xor
scas
add
sar
sub
pop
and
paddd
pushf
stc
jns
pop
js
in
mov
mov
pushf
shll
cmpl
xbegin
sub
or
xchg
cmp
dec
mov
push
and
mov
out
push
lods
ret
outsb
sahf
fnsave
add
jo
sub
xor
dec
or
mov
mov
cmpsb
or
ror
fists
and
mov
les
dec
shl
lods
add
cmpsl
fstps
push
push
fimull
xorb
aad
das
sti
movsb
loope
testl
test
fnstenv
xchg
inc
sbb
xchg
frstor
fimuls
and
mov
out
and
cmp
outsb
sub
cld
shrl
and
sub
pop
ss
aaa
imul
out
idivl
popf
dec
push
or
inc
shl
frstor
call
mov
call
fsubrs
and
lods
fsubrl
mov
test
mov
std
push
dec
push
stos
sub
add
testl
jnp
pop
inc
adc
pop
repnz
ljmp
orl
cmc
stos
fs
sbb
adc
add
imul
dec
shlb
xchg
mov
stos
roll
pop
std
adcb
jl
stos
cli
lock
sub
adc
lds
xchg
fldl
mov
pop
not
loope
push
pop
push
fimuls
dec
popf
mov
cmpsb
add
sbb
roll
xor
incl
xchg
pop
add
dec
mov
ja
lret
clc
in
out
mov
jne
and
stc
xlat
outsl
cmp
jno
jmp
repz
jns
repz
add
push
jo
adc
xor
pop
aam
push
sbb
mov
orb
lahf
imul
paddsw
addl
sbb
fcmovnb
inc
rorl
icebp
xchg
and
sahf
mov
loope
push
mov
sahf
push
scas
loop
ret
jno
jp
std
gs
in
movsl
add
push
gs
stc
or
push
push
mov
sbb
popf
popa
inc
dec
gs
arpl
cltd
adc
insl
dec
imul
cld
int3
ljmp
mov
jb
ja
in
call
jns
roll
sbb
lcall
dec
mov
add
insb
jecxz
std
add
jg
xchg
jmp
int3
push
adc
mov
xor
aas
ret
shl
jno
imull
iret
nop
outsl
mov
sbb
repnz
rorl
repnz
loope
cld
movsl
es
dec
loope
andl
sub
pop
fwait
cmpsl
pop
xchg
notl
stos
sbbl
dec
imul
dec
mov
push
mov
outsl
xor
mov
cmp
pusha
push
fstl
dec
mov
iret
or
adc
dec
imul
jp
jae
sub
addr16
pop
mov
sub
test
fsubl
popa
bnd
sub
cmp
mov
mov
push
mov
fadds
in
and
popa
push
cmc
adc
cmp
add
gs
mov
fiaddl
inc
jle
imul
test
pop
dec
cmp
scas
cli
sub
push
test
out
rorl
fs
and
aam
or
cmp
sbb
les
inc
push
mov
mov
loopne
arpl
add
enter
pushf
outsl
ret
lea
xchg
mov
shr
ljmp
xchg
cmp
das
pop
dec
shl
mov
cmpsl
add
out
adc
add
fwait
cmp
push
push
into
sbbb
mov
dec
xor
pop
stc
sbb
test
pop
inc
adc
xor
flds
dec
lock
pop
and
jl
pop
push
cmp
dec
xor
nop
dec
divl
test
ret
cmp
mov
pop
ffree
xchg
roll
xchg
scas
jge
lea
jnp
push
jecxz
pop
sbb
mov
stos
lret
cmc
jno
xchg
cmc
cltd
pop
enter
into
ljmp
test
ss
adc
cli
pop
sahf
sahf
push
sbb
aam
rcl
jno
popf
pop
mov
inc
lea
mov
out
cmpsl
inc
cmp
or
push
scas
fcmovbe
cmp
aaa
inc
lcall
push
in
inc
cltd
fsubs
pop
movsl
imul
cwtl
or
sub
inc
xor
jb
mov
cmpsb
sbb
jp
out
mov
mov
daa
pcmpeqd
sbb
cmp
decb
pop
dec
in
push
and
sti
jb
and
inc
inc
and
inc
and
dec
push
lcall
addl
mov
nop
rorb
add
cmp
xchg
inc
add
pop
dec
mov
cmp
lcall
push
mov
popf
mov
cmpsb
les
inc
xor
bound
dec
pushf
xchg
and
fidivrl
add
js
jb
mov
dec
insl
mov
xor
mov
mov
mov
ror
jle
data16
xor
dec
cmpsb
dec
repz
and
imul
adc
in
push
xchg
sbb
jg
mov
rorl
mov
push
gs
ljmp
push
je
inc
cld
not
inc
lock
fucomi
push
pop
lret
lock
dec
cmc
shr
push
xchg
imul
cmp
xor
adc
fs
lea
mov
mov
into
arpl
gs
dec
or
push
cli
imul
fildl
and
fsubrl
and
xchg
mov
push
addr16
nop
or
and
push
ljmp
inc
adcb
dec
mov
xor
pop
sub
pop
test
cmpb
movsl
jb
jne
aam
mov
mov
dec
outsb
roll
in
int
loop
mov
dec
stos
mov
in
push
outsb
inc
jnp
jge
scas
nop
jbe
mov
add
xorb
sbb
and
cmp
mov
movsl
rcrb
mov
vmovntps
mov
loopne
cmp
into
mov
lret
mov
adc
jae
jmp
and
cld
in
sti
repz
mov
jge
lret
adc
cltd
xor
cmc
loopne
insb
jno
pop
mov
cltd
or
xchg
add
pop
push
inc
xchg
xor
aas
jbe
out
dec
lret
fwait
mov
aad
inc
xlat
cmp
inc
cltd
adc
xor
mov
or
and
sbb
push
pop
push
mov
inc
faddl
in
cmpb
push
or
fsts
jne
fisubl
mov
loop
cmpsl
cmpb
rolb
in
pop
scas
lock
aam
dec
jo
int
mov
xchg
add
loopne
pop
hlt
mov
iret
pop
imul
sub
xor
push
rcll
sub
gs
push
sbb
out
rolb
pop
jge
add
jne
fstpl
jmp
sbb
mov
shll
adc
pop
sbb
lds
ficompl
dec
sbb
shll
sti
mov
in
cli
jnp
cmp
or
lahf
pop
stc
cmp
mov
out
pop
fisttpl
jns
mov
mov
jo
cmpsl
addr16
push
ret
cmpsb
sub
pop
rclb
and
aam
sbb
bnd
inc
popf
out
mov
dec
mov
iret
cs
arpl
int3
and
fiadds
mov
pushf
inc
and
fldt
xchg
jg
repnz
ja
xchg
sub
cmp
hlt
pop
mov
jnp
hlt
scas
xchg
and
adc
fdivs
jmp
xchg
dec
mov
sub
in
mov
or
mov
loop
dec
inc
xor
ss
xchg
dec
je
xchg
test
lea
push
mov
push
fs
mov
std
mov
lret
dec
fwait
add
sbb
div
daa
mov
jmp
mov
call
scas
cmp
imul
cmp
pop
andb
aaa
mov
xorb
icebp
shl
popa
clc
nop
mov
mov
cmpsb
mov
push
mov
cltd
inc
push
inc
inc
into
jl
pop
stos
xor
or
ja
icebp
fcoml
sub
inc
out
push
insb
inc
add
loopne
aaa
dec
and
and
push
rolb
mov
out
jmp
out
or
sahf
and
pop
push
pop
ljmp
sbb
popa
pop
xor
jp
fiadds
sahf
adc
adc
add
out
int3
sbb
lods
push
mov
addl
cmp
loop
ja
inc
or
cmpsb
out
lret
lods
push
sarl
sub
xor
add
enter
cmp
dec
jne
adc
adc
fwait
repnz
sub
lods
cwtl
cltd
gs
push
in
shll
cli
ret
cltd
adcb
test
add
push
fs
loopne
aam
jae
lock
out
cltd
scas
ja
test
lods
sub
mov
pop
test
rolb
jle
mov
test
out
shrb
shl
repz
sub
shr
inc
ficompl
fldlg2
xor
pushf
or
rclb
xor
sbb
mov
mov
push
push
xor
imull
jp
adc
lcall
cwtl
mov
inc
jns
psllq
xchg
int
loop
aam
dec
or
xor
loopne
fstps
xchg
insb
and
int
roll
out
inc
lods
adc
jns
mov
add
rorl
pop
das
decb
andl
or
in
pushf
icebp
push
jp
inc
or
dec
stos
xor
ret
mov
decl
rcrl
or
cmp
sbb
jl
jno
ffree
mov
cltd
leave
aam
dec
stc
cwtl
fsubr
pop
cwtl
lods
xor
and
ror
dec
std
ss
dec
and
fdivrs
mov
in
fistpl
sbb
arpl
notl
jno
cmp
std
shll
ljmp
loop
bound
adc
in
movsb
stos
cld
js
sbb
and
xchg
lods
pushf
mov
loopnew
mov
repz
jecxz
aas
ret
popa
add
cmp
mov
cmpsb
sbb
sbb
into
jae
scas
mov
pop
or
inc
push
cmpsb
mov
sub
push
fadds
mov
icebp
dec
imul
xchg
in
pop
gs
int
mov
jecxz
push
adc
not
jl
insb
xlat
mov
sub
jle
notl
pop
icebp
sbb
lcall
pop
pop
call
arpl
das
sub
push
xlat
sub
or
push
mov
xor
xchg
int3
mov
cmp
xchg
pop
ljmp
push
jnp
in
add
popa
inc
xchg
mov
sbb
into
out
cmpsl
pop
test
adc
and
fsubr
sbb
mov
adc
outsb
jno
shll
adc
shrb
icebp
sbb
push
or
cmp
push
cmp
pushf
jle
data16
popa
and
dec
jb
mov
test
dec
jne
jg
enter
roll
stc
jnp,pn
testl
lahf
stc
sub
das
outsb
xchg
std
sbb
jmpw
dec
ss
lret
jbe
stos
loope
dec
or
mov
lret
gs
mov
dec
pop
dec
or
cmp
enter
shll
test
mov
jmp
sbb
cmp
test
xchg
mov
out
scas
mov
int3
or
push
adc
dec
push
inc
stos
xchg
inc
es
leave
xor
gs
xchg
push
adcb
fistpll
cmp
xchg
sahf
testl
out
nop
push
jns
dec
ss
jg
jl
jecxz
out
sub
dec
lods
out
pop
icebp
add
cmc
pop
mov
push
iret
lock
jle
nop
xchg
pushf
fstpl
add
ja
mov
xor
popf
and
ror
push
adc
mov
cmp
push
call
xor
sub
ja
hlt
xor
mov
xchg
in
repnz
shll
sbb
bound
xor
ljmp
lds
std
xor
jns
repz
jnp
les
cmp
add
sahf
sbb
mov
dec
cmc
fdivrs
sysret
into
inc
jnp
shl
gs
mov
sti
clc
add
fnstcw
popf
insb
sbb
flds
mov
pop
cmp
mov
fnstenv
icebp
cmp
ja
out
iret
pop
test
mov
cmpsl
movsl
pop
rolb
aam
pop
inc
or
sub
ret
or
cmp
inc
dec
inc
xchg
call
repnz
jg
repz
ret
sub
jae
repz
xor
sub
pusha
pop
pop
int3
out
push
mov
jns
mov
xchg
lods
pushf
ja
out
stc
ljmp
arpl
sub
cs
inc
mov
lods
hlt
hlt
jmp
and
sti
push
push
and
sbb
stc
scas
xorl
jno
aaa
and
lcall
jnp
mov
mov
imul
jmp
inc
pop
adc
jns
fistl
subb
sub
out
cltd
pop
cwtl
jecxz
inc
scas
dec
movsl
xor
push
cwtl
sbb
sbb
notl
push
dec
addr16
sub
aas
ljmp
outsb
push
cltd
lods
push
dec
inc
mov
or
rcrb
sub
in
outsl
jg
push
push
push
cmpsb
test
xor
xor
mov
xor
mov
mov
inc
jmp
cld
jecxz
xchg
add
dec
es
push
and
xor
loope
out
enter
pop
setp
mov
shlb
add
pop
in
xchg
mulb
mov
push
push
ss
test
dec
or
or
mov
jge
mov
ljmp
pop
dec
adc
sbb
insl
mov
fcmovu
cmp
mov
insl
scas
lret
sbb
xchg
cli
hlt
lds
or
xchg
push
mov
testl
adc
or
hlt
adc
mov
scas
push
lods
cli
and
shrb
xchg
sub
push
mov
stos
or
jp
and
fsts
xchg
das
xchg
xor
pop
inc
inc
outsl
rorb
popl
xlat
mov
rcll
cmp
out
lahf
push
lret
xorb
enter
or
or
mov
mov
mov
push
test
and
pop
lea
shl
movsb
dec
cmp
adc
pop
test
mov
aaa
fwait
cld
mov
sahf
jns
xor
inc
cmc
mov
xchg
fcoml
xchg
jo
sbbb
pushf
mov
sbbl
ret
mov
int
xchg
pop
push
js
pop
test
inc
cmpl
push
push
movsl
pcmpeqd
mov
mov
lcall
sbb
sbb
mov
shll
and
add
addr16
cmp
pop
test
stos
mov
subb
nop
add
sub
dec
lret
in
push
sbb
adcb
add
fcompl
loope
or
pusha
push
mov
int
lock
in
outsl
shrl
push
xor
mov
xor
xchg
loop
mov
mov
dec
mov
mov
mov
and
shll
or
testl
mov
pop
popf
je
shlb
mov
popa
cld
mov
lahf
sbb
fistl
mov
mov
arpl
sub
pop
or
add
fwait
ret
clc
in
mov
rcrl
cs
pop
mov
mov
andl
sub
pop
jno
or
cmp
outsb
sub
mov
cmp
push
loopne
insl
or
shlb
or
lock
or
je
lea
repz
subl
lret
push
push
mov
popf
dec
jl
scas
dec
jno
jne
pop
andl
outsb
iret
pop
mov
enter
loopne
mov
add
adc
pusha
pop
cmpsb
mov
lods
xchg
mov
lcall
cmp
cmp
mov
push
std
iret
mov
repz
push
inc
mov
mov
add
xchg
xchg
mov
fildl
addr16
mov
push
lods
inc
loop
cwtl
lock
and
xchg
pop
insl
lret
xchg
stos
dec
aas
mov
mov
push
xchg
ret
clc
cmp
stos
test
ret
popf
mov
or
lea
call
push
lock
ljmp
adc
imull
loope
sbb
cmc
adcb
sbb
rcrb
filds
mov
dec
ss
jo
je
sbb
mov
mov
aad
aam
inc
ret
jg
enter
sbb
js
mov
mov
repz
and
push
ljmp
push
bound
jo
js
xchg
out
es
xchg
jae
mov
ja
stos
cld
xor
pop
adc
pop
push
decb
jge
and
sub
in
mov
xchg
and
les
jno
push
stos
aad
cli
pop
cmpsl
lock
mov
cmpsl
mov
and
mov
test
inc
cmp
cmc
push
dec
stos
stos
push
add
jl
cltd
lods
mov
add
in
inc
movsl
xchg
xchg
or
add
inc
call
mov
ficoms
repz
sbb
xor
outsb
and
iret
xlat
enter
je
mov
repnz
loop
xchg
xor
dec
add
repz
push
sub
nop
orl
mov
add
mov
leave
ljmp
mov
stos
out
imul
imul
addr16
es
cli
outsl
icebp
add
hlt
in
std
test
lods
sub
xchg
or
mov
movsb
test
xchg
in
ljmp
sub
loopne
dec
sub
test
stc
ds
pop
movsb
mov
sub
fsubl
inc
jmp
pop
bswap
xchg
push
jecxz
sbb
pop
repz
push
add
lods
inc
mov
scas
jp
cmp
arpl
jmp
push
pop
cmpl
cld
pop
sti
dec
rolb
jno
adc
js
and
mov
mov
ja
shlb
mov
test
dec
pop
movsl
push
fcoml
push
mov
test
dec
stos
xchg
mov
ret
cmp
jg
mov
movsb
hlt
idivb
ljmp
movsl
test
cwtl
arpl
fs
insb
shl
movsb
cwtl
cli
pop
addb
jecxz
cmpsl
movsl
shrb
adc
shrb
dec
mull
aad
iret
jae
pushf
daa
push
aam
and
mov
and
xchg
push
in
xchg
hlt
cmpl
and
stos
rcl
push
aam
and
in
jmp
sub
mov
rcr
jmp
push
insl
out
mov
add
push
mov
lcall
into
pop
pop
fldcw
neg
xor
mov
sub
cli
sbb
xchg
addr16
inc
aam
pop
dec
dec
test
pop
adc
mov
push
adcb
push
lret
mov
fwait
mov
xor
ret
stos
pusha
out
fs
enter
mov
iret
push
push
or
add
and
adc
adc
popf
pop
add
sub
ret
fldcw
dec
aad
adc
fistpl
mov
in
mov
sbb
outsl
leave
sbb
out
sub
or
movsb
icebp
insb
jle
xchg
or
scas
and
bound
lret
rcr
inc
cmpb
int3
jecxz
lods
mov
dec
sbb
fsub
shrl
test
cltd
jg
mov
xchg
xchg
out
rcr
push
repz
incb
es
sub
dec
sub
imul
and
ret
movsl
loope
dec
movsl
sub
cltd
loope
cmp
sub
xor
fistpl
xor
cmp
outsb
out
mov
mov
dec
or
fdiv
pop
std
sarl
packssdw
mov
mov
ja
imul
repz
dec
xor
inc
xchg
mov
into
lcall
cmp
pop
add
out
adc
push
and
stos
bound
repz
test
divb
or
add
leave
sbb
out
dec
loop
je
inc
push
leave
cwtl
mov
adcl
pop
cmp
dec
insl
mov
push
cmp
into
repnz
shl
pop
mov
int3
jge
les
push
push
and
cmp
shl
add
jecxz
out
dec
and
xor
jmp
outsl
cld
ja
jg
sub
aad
out
sbb
lock
popa
decl
mov
and
loop
lds
scas
jne
and
xor
xchg
xlat
mov
jg
cmc
jl
push
fucomip
mov
push
mov
cmp
frstor
mov
insb
mov
cmpsl
push
adcl
andl
jl
iret
add
mov
cmp
xchg
orb
cmp
sbb
mov
adc
cmp
add
push
pop
or
mov
pushf
fnstcw
jp
lock
popa
dec
fists
in
sbb
cs
and
fs
and
stos
mov
cmp
fdivs
and
out
mov
leave
xchg
sbb
sub
enter
fsts
ret
cmc
out
or
and
fbstp
mov
push
add
mov
fsubrs
loopnew
leave
inc
insb
cmp
lcall
movsl
je
cmp
inc
mov
xor
push
cmp
out
pop
idivl
mov
iret
xlat
cmovs
aas
adc
pop
mov
adc
jae
cld
roll
icebp
push
jnp
lahf
call
sub
les
add
push
add
push
cltd
xor
test
xchg
jge
xchg
xchg
or
lock
fimull
mov
aaa
lcall
nop
inc
or
pop
pop
cmpsb
adc
sub
test
cld
pop
out
sar
pusha
add
stos
lea
lods
int3
mov
pop
mov
outsb
and
adc
sarl
lret
mov
jle
lods
jae
pushf
sub
jnp
mov
fimuls
ja
jns
lods
sbb
enter
push
sbb
push
fisubrs
add
sbb
xchg
add
int
popf
fimull
cmpsb
in
imul
scas
cmp
jbe
jno
mov
sub
pop
and
fs
fwait
push
xor
in
inc
lcall
test
mov
lret
iret
pop
xor
sub
adc
sbb
add
test
mulps
and
scas
int
adc
out
nop
sub
aad
pop
ret
aaa
rorl
sti
or
flds
mov
movsl
sub
jo
sarb
jg
adc
aaa
jecxz
outsb
push
popa
or
scas
shrb
cld
jg
ror
pop
push
test
fstpl
loope,pt
popf
into
test
adc
test
mov
push
inc
xchg
sbb
icebp
mov
mov
jb
or
div
scas
pop
adc
mov
in
mul
lock
loop
cmp
xchg
sbb
mov
mov
and
dec
dec
push
or
repnz
jg
sub
loopne
out
jno
xchg
dec
cmp
loopne
xchg
and
imull
mov
fwait
ret
ret
mov
cltd
incb
push
in
push
mov
dec
loopne
lahf
jge
push
and
mov
sbb
sub
mov
pop
insb
dec
mov
mov
lds
pop
leave
popa
xchg
adc
mov
dec
sbb
shll
outsl
dec
and
dec
shll
bound
mov
insl
aam
sbbl
stos
mov
ret
mov
addr16
out
nop
adc
les
bound
add
ficoms
rcrl
mov
pushf
xor
mov
fisttps
adc
je
push
movsb
enter
mov
fnop
inc
or
pop
test
jns
icebp
or
fs
dec
fcmovne
daa
cwtl
mov
or
imul
add
test
lock
mov
adc
ds
jecxz
mov
add
push
pop
mov
cmp
push
fsubp
mov
mov
mov
xchg
dec
inc
stos
xor
mov
push
xchg
test
imul
mov
dec
int
test
nop
std
cmp
cmp
cmp
or
data16
xchg
jb
cld
in
add
ja
dec
lretw
cmpsb
movb
and
push
mov
mov
push
into
cmp
push
adc
add
or
out
frndint
sub
loope
adc
daa
daa
test
repnz
cmp
mov
push
push
adc
sti
addb
mov
xorl
xchg
stos
rol
lret
fstpt
mov
lret
add
jno
iret
int3
iret
int
sbb
or
stos
jnp
es
xchg
arpl
mov
pusha
add
mov
imul
nop
inc
mov
cmp
pop
sub
adc
mov
inc
sbb
and
jl
test
adc
lods
pop
mov
into
imul
jbe
or
sbb
mov
jmp
dec
arpl
jae
movsb
mov
and
or
arpl
mov
mov
filds
inc
repnz
sbb
test
push
test
inc
adcb
hlt
push
add
xchg
js
sub
ret
xchg
jl
dec
aas
shrb
out
fisttps
sti
mov
stos
mov
pushf
jb
mov
lds
adc
push
sarb
mov
and
iret
mov
movsl
cmpsb
mov
push
cli
mov
sub
fcompl
xchg
rol
out
sub
push
xchg
sub
mov
xchg
xchg
std
inc
cmp
pop
push
inc
cmp
sub
pop
xor
lods
mov
inc
in
addb
mov
notl
std
mov
mov
add
push
add
lods
pop
je
xor
scas
daa
adc
push
sub
test
fidivs
imul
ret
push
out
pop
aaa
cwtl
xchg
xchg
fxtract
mov
cmpsb
imul
test
test
inc
call
xor
mov
jmp
dec
jmp
push
faddp
jg
xchg
cltd
pop
pop
inc
das
mov
aad
or
mov
lahf
loop
xchg
lods
dec
shll
jmp
arpl
jno
cmp
pop
fs
inc
scas
orl
mov
nop
cs
addr16
iret
fsub
inc
cmp
loopne
mov
xchg
mov
pop
js
or
decb
push
int3
inc
dec
hlt
test
add
repnz
fstps
jns
jns
xor
jno
int
jmp
cltd
sub
sbb
sbb
pop
shrl
mov
adc
movsl
leave
out
push
cld
movsl
mov
dec
jmp
push
pop
loop
and
mov
fistps
xor
and
sbb
sub
test
fisttpl
jp
cs
mov
xchg
repnz
rcll
int
dec
cmp
cmp
das
dec
jge
adc
sub
mov
scas
xlat
xchg
mov
push
pop
ret
push
inc
xchg
or
or
sbb
inc
in
sub
adc
xor
mov
xor
movsb
pop
outsl
stos
mov
or
iret
or
pop
shlb
scas
xor
lock
pop
mov
push
lods
adc
wrmsr
inc
xchg
rep
mov
pop
ds
imul
lcall
add
cmp
push
add
shrl
dec
jbe
mov
cli
clc
nop
lds
or
adc
xor
js
popf
push
call
es
mov
lock
scas
cli
pop
mov
test
arpl
ja
jno
cltd
mov
loop
ret
mov
inc
inc
mov
adc
add
pop
mov
imul
mov
das
or
mov
sub
outsl
jo
inc
mov
ret
dec
andl
sbb
mov
loope
shll
pop
push
xlat
jne
and
cmp
add
in
mov
cmp
daa
and
mov
pop
add
fs
mov
adc
daa
mov
push
mov
push
loop
lar
sahf
daa
jns
shrb
pop
mov
xadd
mov
sub
popf
sarb
jge
ret
enter
les
mov
shr
cmp
in
outsb
sbb
mov
testl
mov
insb
mov
jns
xchg
cwtl
sahf
and
out
gs
ret
data16
xor
lds
aad
ret
jb
mov
into
out
sub
xchg
sti
push
loop
dec
aad
es
enter
addr16
aas
std
xor
push
fadds
cmpsl
mov
and
ficompl
iret
adc
in
add
push
xchg
inc
movsb
push
dec
sub
sbb
lods
fistps
lods
loope
fxch
sbb
cmp
xchg
movsb
fcmove
jo
lea
dec
push
das
jl
ss
into
lcall
das
sbb
pop
add
test
dec
dec
mull
push
push
pop
mov
mov
xchg
stos
sub
arpl
jmp
js
fwait
and
dec
push
aaa
mov
test
mov
pop
mov
enter
shr
loope
dec
pop
cmpsb
test
xchg
cmp
in
je
sub
bound
hlt
iret
fsubs
cmp
loopne
sub
mov
notb
and
ret
add
push
pop
or
mov
sbb
xchg
pop
mov
andl
mov
push
lds
mov
push
xor
xchg
je
fnstsw
xchg
or
xchg
mov
adc
mov
xchg
sbb
rcl
mov
push
idivb
mov
mov
shr
fsub
or
cltd
dec
fisubrl
in
les
divb
mov
adc
arpl
and
mov
call
add
inc
ret
pop
stc
ljmp
cmp
dec
imul
adc
mov
push
jmp
jmp
out
lds
or
mov
jnp
push
sub
cmpsb
cltd
ret
sbb
pop
hlt
adc
dec
int
das
or
aas
xor
dec
sbb
mov
xor
mov
inc
mov
das
cli
aam
pop
cwtl
call
aaa
mov
sub
pop
popf
pop
push
fwait
pop
xchg
scas
dec
imul
lcall
js
push
and
es
inc
movsb
mov
push
loopne
xor
les
adc
clc
cltd
loop
dec
aad
sbb
and
pushf
sahf
mull
in
adc
iret
jp
cmp
jnp
pop
cmp
bound
stos
lods
mov
dec
sub
cmc
arpl
loop
dec
fldl
test
mul
pop
lds
outsl
cs
inc
in
mov
jmp
pop
pushf
enter
shrl
lret
mov
jns
inc
stos
mov
mov
ret
icebp
xchg
pop
dec
pushf
mov
xlat
imull
push
jmp
fistpll
and
mov
xlat
js
and
mov
jge
pushf
inc
adc
test
pop
jne
aaa
add
test
mov
jbe
es
or
cmp
dec
daa
dec
movsl
loop
std
xchg
inc
fnstsw
ret
dec
std
ficoms
lcall
jmp
mov
lahf
lcall
movsl
jecxz
or
addr16
sbb
sbb
test
push
test
xchg
xchg
xor
push
jp
nop
inc
pop
add
xchg
leave
and
shrl
cmp
or
aad
push
or
xor
dec
scas
inc
ljmp
pop
mov
jecxz
adc
sub
lahf
mov
jl
add
loop
jns
jle
cld
flds
push
orl
frstpm(287
in
dec
adc
repnz
scas
aam
imul
jecxz
xor
jle
sbb
or
add
mov
jb
xor
mov
movsb
cmp
loopne
inc
mov
imul
stos
push
mov
xorb
pop
in
mov
inc
push
push
cs
cmp
xorl
lods
jne
test
dec
lods
fisubl
dec
xor
cmp
jge
dec
negb
xor
int
fnstenv
mov
inc
das
mov
xchg
dec
sbb
sbb
mov
push
je
clc
fsubp
cltd
rcrb
insb
and
sbb
xor
scas
roll
mov
sub
cmc
mov
mov
or
fidivrl
push
fdivl
mov
push
xor
lock
push
mov
subb
jo
lahf
pop
cld
dec
mov
push
imul
fiaddl
jmp
cmc
imul
jp
mov
fdivrs
outsl
mov
test
out
mov
test
pop
xor
test
dec
mov
push
les
daa
pop
rcr
jno
add
xorb
mov
rclb
xor
lcall
and
clc
lds
stos
fwait
or
xchg
sahf
pop
inc
dec
test
aam
sub
xchg
rcr
inc
push
or
adc
repz
rolb
outsl
fcmovnbe
lods
jge
jl
data16
into
in
pop
push
lds
cli
les
in
fprem
sahf
sbb
dec
and
inc
clc
shll
push
jp
cmp
mov
stos
jb
sbb
push
mov
cwtl
push
adc
jg
pop
mov
mov
mov
aas
mov
cmp
mov
jb
insl
scas
push
pusha
js
pop
xchg
aad
push
mov
add
mov
xchg
inc
into
jne
cmpsb
and
and
xchg
xor
pop
cmp
subb
xor
hlt
test
push
test
pop
dec
aad
mov
jno
sub
mov
addb
jle
out
mov
sub
pop
push
jo
clc
shll
nop
in
add
call
sahf
aaa
test
cmp
and
ss
std
sbb
es
stos
scas
mov
jb
loop
cltd
jmp
nop
push
test
xor
imul
push
cmp
loope
mov
stos
fadds
loopne
xlat
imul
dec
push
dec
pushf
or
leave
cli
sub
inc
ja
ds
xchg
xchg
mov
or
rcrl
dec
test
xor
add
push
mov
and
mov
jnp
fistpll
icebp
mov
lds
dec
mov
ds
addb
clc
mov
mov
lcall
push
bound
cli
dec
int3
mov
frstor
lret
loop
insl
xor
mov
pop
inc
movsl
das
sbb
mov
fst
cmp
rorl
sub
les
es
stos
fistl
sbbb
push
loopne
cmpsl
cld
fsts
test
adc
xor
xor
rcll
rol
sbb
mov
mov
jl
incl
add
xchg
and
mov
imul
nop
rclb
popl
jae
add
outsb
xchg
mov
or
mov
push
stos
rolb
pop
cmp
inc
shrb
mov
call
adc
clc
mov
xor
sbb
adc
xchg
xchg
jmp
adc
jp
pop
jnp
pop
xor
and
cmp
inc
les
inc
push
fisttps
add
adc
cmpsl
push
sahf
test
mov
js
rcll
outsb
into
test
mov
sub
xchg
xor
pop
js
push
mov
test
cmp
cmc
scas
cwtl
pop
mov
mov
int
daa
jo
adc
xchg
push
lock
fistpll
xchg
mov
push
cmc
push
movsl
movsb
jge
add
ds
sbb
sub
int
sub
push
add
xchg
xchg
xchg
rorb
arpl
jmp
jne
push
icebp
cmp
int
and
inc
popl
sahf
push
mov
sub
popa
aaa
mov
push
sbb
test
dec
xchg
push
fldcw
cli
push
movb
lock
repnz
ss
jo
rcr
mov
pop
add
popa
mov
test
in
scas
or
insb
popf
ss
sahf
add
sub
push
and
push
lods
cmpsl
jbe
and
adc
adc
xor
pop
imul
jmp
into
xchg
in
andb
jns
add
cs
push
inc
hlt
jnp
mov
jae
popa
sbb
inc
cmp
cltd
int3
xor
mov
fwait
hlt
loope
mov
inc
sbbl
aad
xchg
decl
mov
xlat
add
pop
outsb
mov
mov
or
stos
hlt
test
mov
fists
inc
jp
push
mov
nop
es
mov
sbb
lcall
hlt
pop
cmpl
inc
xchg
pop
ss
popf
jmp
hlt
mov
jl
roll
xor
ss
sbb
out
cmp
imul
int3
dec
rol
and
sbb
hlt
ss
xchg
cmc
movsb
mov
cmp
fs
mov
mov
jecxz
adc
subb
xor
popa
cmp
or
shrb
fucom
jl
loope
inc
xlat
scas
nop
sbb
or
movsl
lret
inc
imul
cmp
push
jb
mov
mov
or
les
les
arpl
jge
fidivs
jno
int3
cmp
das
xchg
out
mul
out
sub
sbb
pop
popa
cs
mov
fldt
movsb
pop
and
aas
xor
and
rolb
xchg
in
dec
xchg
int
xor
mov
inc
in
stos
jge
ficomps
out
insb
and
sbb
nop
sbb
dec
icebp
addr16
shl
push
clc
scas
cmp
or
cmp
jne
dec
sub
mov
mov
push
jb
cmp
adc
pop
pop
sub
sub
mov
xchg
dec
add
cmp
xor
les
mov
and
dec
dec
pusha
lret
xor
sub
test
das
mov
shll
mov
add
popf
pop
pop
rclb
fistpll
enter
dec
xor
inc
lods
cmp
outsb
push
cmp
lahf
dec
sub
test
das
dec
push
addr16
or
lock
insl
imull
mov
lock
iret
sbb
push
cmp
xchg
pop
and
xor
out
add
and
add
loope
and
dec
insl
push
cld
pop
movsb
lock
mov
jg
dec
mov
dec
add
mov
jg
mov
pop
sub
sahf
lcall
adc
in
popa
inc
push
fwait
adc
mov
into
int3
aam
in
in
add
pop
sbb
cmc
pop
repnz
and
inc
pop
mov
hlt
sahf
les
mov
xor
sbb
es
adc
aas
cmpb
cmp
dec
sbb
adc
mov
push
daa
arpl
mov
sti
movsb
mov
xor
and
inc
into
lcall
push
dec
stc
dec
rcrl
sub
insb
inc
testl
xor
shr
retw
pop
rcl
mov
movsb
pop
xor
leave
or
inc
shrb
inc
push
xchg
lea
xchg
cmc
mov
cwtl
fnsave
out
int3
xchg
fwait
pop
and
inc
sti
loop
addr16
push
out
cmp
jmp
arpl
sarl
fstp
mov
pop
sarl
add
or
ffreep
push
sub
popf
jmp
int
les
mov
jb
sub
hlt
aaa
ljmp
out
test
xchg
in
pop
arpl
mov
out
add
or
imul
mov
in
stc
pop
pushf
adc
mov
insl
push
pop
cmpsb
insl
cli
stc
mul
xchg
insb
hlt
je
mov
aam
mov
xlat
cvtdq2ps
push
jnp
les
jns
and
add
ss
xchg
stos
xor
sub
sarl
imul
sbb
sbb
inc
cmp
sbb
cmp
inc
dec
mov
aam
xchg
and
aam
mov
jne
mov
dec
push
xchg
mov
jne
xor
mov
add
inc
psubusw
sarl
jge
insb
dec
icebp
xchg
xchg
cmpsl
mov
imul
mov
arpl
sahf
les
bound
out
xor
push
shll
mov
pushf
fdivl
shrl
pop
or
adc
flds
hlt
cmp
scas
ljmp
insl
fwait
add
inc
jo
cmp
xor
into
enter
lods
popa
mov
jnp
mov
popf
pop
sub
pop
outsb
and
lock
jl
stos
mov
push
pop
lods
sahf
xor
xchg
andl
in
in
and
or
jnp
pop
dec
sahf
xor
incl
push
dec
js
mov
add
stos
lods
push
push
fwait
out
mov
pop
aaa
sbb
iret
fs
cs
cmp
jnp
xor
lea
jl
push
dec
lret
ds
enter
inc
nop
fwait
push
sub
je
xor
movsb
fmull
xchg
test
dec
push
mov
sbb
mov
clc
sub
ficoms
daa
mov
cmpsl
inc
sbb
insb
mov
shrd
sbb
scas
pop
mov
push
test
ja
inc
xor
loop
data16
cmp
idiv
jp
jecxz
push
fxch
mov
fwait
jmp
jb
mov
out
cmp
jno
adc
mov
addl
ds
clc
xchg
mov
dec
xor
mov
aam
inc
mov
or
in
sbb
aas
push
pushf
dec
or
inc
push
jg
out
mov
fisubrs
jae
stos
ja
mov
push
insb
jmp
fsubrl
cwtl
addb
add
cmpsb
hlt
inc
mov
dec
jns
cli
inc
push
jl
cmp
xorb
imul
xor
ljmp
and
push
push
in
fdivrs
ja
cmp
pop
dec
jl
mov
mov
xchg
mov
lock
lahf
stos
inc
or
aaa
ds
and
fistpl
mov
xchg
adc
dec
movsb
sbbb
add
stc
rcrb
mov
repz
int3
daa
mov
in
loop
stos
rclb
insb
jo
lds
mov
out
mov
lock
rolb
aas
mov
sub
inc
stc
ja
pop
lahf
insl
lret
lock
inc
pop
pop
cmp
and
cmpsl
fists
pop
push
repnz
jae
push
mov
out
aad
cmp
and
scas
into
into
adc
clc
aaa
cmp
adc
inc
push
stos
repz
push
sahf
mov
pop
inc
ret
js
or
and
sub
inc
lcall
cmp
clc
or
push
and
cmp
sbb
xor
push
movsl
mov
or
mov
mov
and
cli
lret
mov
ds
lds
xorb
push
arpl
shll
lcall
jmp
stos
push
push
gs
xchg
sbb
lret
popf
fsubl
bound
ljmp
cld
xlat
fbld
fwait
paddq
lret
xchg
xorl
sahf
jne
add
mov
add
clc
mov
adcb
cltd
imul
xor
rclb
push
or
add
cs
and
out
adc
pusha
daa
cmp
lahf
pop
enter
mov
scas
cmpsl
push
out
mov
add
xor
aaa
dec
in
jnp
shrb
sub
adc
mov
or
jnp
insl
jle
mov
es
sub
aad
fwait
out
adcl
and
inc
mov
subl
pop
stos
mov
dec
jns,pn
jge
xlat
jns
cmp
dec
mov
push
addr16
push
test
dec
push
and
das
test
cld
dec
xor
jb
shrl
cmc
or
jmp
inc
adc
lahf
scas
adc
adc
dec
daa
dec
or
dec
fimuls
xor
and
mov
ljmp
cld
test
pop
jp
fdivrp
daa
shl
test
pusha
mov
sbb
cmc
push
sbb
push
hlt
fldl2e
nop
inc
jb
pushf
jecxz
in
jbe
inc
roll
ds
arpl
sbb
push
in
xor
xor
inc
daa
popl
outsl
xor
insb
sbb
sbb
adc
jbe
pop
push
and
push
loope
fcmove
mov
addr16
mov
iret
stos
popa
cld
repnz
pop
out
xchg
icebp
or
xchg
dec
push
shlb
pop
lods
pushf
int
les
shll
in
daa
mov
and
mov
aaa
adc
pop
mov
jae
cmpsl
push
push
add
sahf
repnz
cli
adc
mov
xchg
pop
scas
sub
sahf
xchg
sub
sbb
fnstsw
push
mov
adc
lret
push
stc
test
xor
sarb
mov
push
mov
mov
lret
adc
adc
out
loopne
jmp
arpl
mov
dec
shrb
push
call
mov
xlat
jns
sub
fwait
push
cmp
minps
and
xchg
and
incl
inc
test
push
ljmp
mov
and
shl
aas
fcmove
je
cmp
mov
stc
pushl
imul
mov
add
cld
mov
inc
lock
mov
or
inc
test
lea
pop
hlt
adc
xchg
mov
repnz
or
sub
or
xchg
push
xor
inc
dec
jbe
jo
out
cmp
xchg
cwtl
scas
xchg
fcoml
repnz
inc
cmp
std
out
fisubl
ljmp
outsb
jg
pushf
xor
test
add
xor
jns
jmp
pop
push
stos
jae
loope
sbb
xchg
shrl
push
or
andl
pop
xchg
lahf
xchg
fwait
sbb
aas
jecxz
mov
imul
and
fistpll
int
xor
cltd
lahf
inc
stos
out
push
cmpsb
xor
or
stos
dec
cmp
mov
xchg
push
ds
mov
jge
or
cmp
add
loopne
lret
add
mov
inc
and
fcompl
add
call
pop
mov
rolb
hlt
mov
lods
push
xchg
adc
sti
out
sbb
fadds
adc
mov
dec
loope
lods
add
icebp
rorb
inc
add
es
mov
int
and
andl
xchg
sbb
sahf
ficomps
adc
mov
ds
loopne
ss
xchg
pusha
jnp
jno
or
stos
jne
or
inc
push
sub
fstpt
push
movsb
add
mov
dec
xchg
push
aaa
call
fs
inc
mov
xor
mov
in
leave
stos
lcall
xor
push
sub
arpl
or
imul
fucom
ja
or
mov
insl
add
leave
sti
ljmp
loop
xor
sub
jns
xchg
pop
clc
push
jle
movsl
js
out
js
sti
jle
rorl
jno
xchg
jns
dec
aam
out
adc
push
pop
inc
or
and
daa
sbb
ljmp
xchg
test
or
xchg
inc
mov
push
push
je
dec
mov
add
add
pop
xor
add
ja
dec
add
pop
in
sarl
push
out
rorl
fstpt
mov
fldt
pushf
and
xlat
movsb
in
test
push
pop
enter
dec
xchg
cld
clc
sbb
ficompl
sbb
repnz
fcompl
mov
pop
shlb
fcoms
or
add
push
mov
test
js
das
insl
push
data16
dec
dec
fimull
jge
mov
pop
rclb
fwait
repnz
cmp
sbb
xlat
ret
push
dec
lock
ret
sub
push
std
in
adc
ljmp
fld
aam
nop
inc
imul
aaa
les
ret
or
sbb
inc
outsl
push
pop
mov
add
repz
mov
adc
fildll
jns
xchg
push
das
inc
or
cli
ds
dec
or
decb
loop
jo
mov
cmp
lock
mov
xchg
fidivrs
mov
ss
mov
fisubs
sarb
adc
mov
pop
sbb
inc
jp
adc
push
mov
je
sbb
mov
inc
loop
sar
pop
cmp
mov
cmpsl
addl
addr16
aaa
push
cmp
outsl
jmp
fbld
repz
cs
or
outsb
arpl
std
cmp
lahf
xchg
out
push
sub
push
mov
inc
xchg
in
mov
ljmp
das
dec
jp
int
mov
fwait
push
aam
popf
je
leave
pop
stc
mov
mov
cmpsl
icebp
jnp
lret
fistpl
inc
mov
in
gs
out
xor
daa
gs
ljmp
lret
test
xchg
xchg
sbb
repz
shrl
adc
cs
outsb
into
hlt
ljmp
gs
outsb
movsb
xor
push
mov
in
subl
or
xor
xchg
ficoms
sub
enter
test
mov
sub
add
int
data16
xlat
pop
or
xor
pop
orb
jb
cltd
jne
iret
lock
int
js
adc
int3
or
mov
mov
int3
aas
inc
testb
pushf
in
jmp
arpl
push
xchg
in
inc
sub
jne
sub
cmp
push
test
mov
push
aas
repz
lds
xchg
sahf
jbe
cmpsb
adc
mov
adc
sbb
leave
fstp
lahf
inc
ljmp
mov
add
mov
add
sbb
in
push
cwtl
das
mov
mov
or
insb
lret
repnz
testl
hlt
sbb
mov
mov
sti
adc
pushf
addl
adc
push
mov
push
pushw
push
jbe
lock
insl
int3
jo
std
pop
xor
int
xchg
xchg
pop
and
pop
adc
jne
cmp
pop
fldl
xor
pop
cmp
lahf
xor
adc
xor
out
push
inc
movsl
jno
pop
pop
mov
sub
add
insl
cmp
arpl
enter
mov
xchg
mov
insb
into
pop
cmp
cmp
mov
mov
insb
cmp
mov
and
pop
pop
repnz
lret
flds
fcmovb
outsl
imul
aaa
add
clc
clc
pusha
and
sub
and
push
scas
or
mov
inc
sub
cmc
push
fidivl
data16
sbb
dec
rolb
push
or
cltd
inc
test
jp
wbinvd
call
fcompl
jl
inc
jne
xchg
or
into
add
loope
ds
mov
dec
or
test
and
xchg
and
lcall
or
sub
or
jle
in
pop
push
lcall
sahf
jle
mov
in
rcll
mov
cmp
xor
cmp
shrb
repz
pop
push
sbb
xor
enter
or
jg
and
imul
lret
push
adc
or
sahf
popf
test
push
inc
mov
imul
pop
xor
jle
cmp
mov
adc
lahf
or
adc
jmp
push
in
imul
add
std
push
sbb
cmp
lahf
rcl
mov
xor
dec
sub
aaa
sbb
pop
scas
push
jp
mov
sbb
xor
sub
addr16
pop
and
push
adc
lods
shrl
aam
sbb
push
add
pop
popa
mov
stc
fsubs
divb
scas
xlat
pusha
and
xchg
xchg
adcb
shrl
jae
pop
jg
aad
pop
xchg
out
pop
mov
leave
add
jbe
mov
xchg
popa
ret
rolb
add
sub
mov
mov
push
add
subb
shll
and
ljmp
ror
and
mov
bnd
adc
and
add
lds
add
sub
pushf
pop
fcmovnu
test
das
adc
sbb
leave
add
lret
or
jns
dec
add
mov
jg
adc
sub
dec
cmp
cmp
push
mov
into
adc
loop
pop
jno
or
icebp
popa
int3
add
bound
xchg
outsl
push
adc
adc
push
sarl
outsl
sub
out
imul
pop
out
ret
test
aaa
jae
push
data16
arpl
and
dec
clc
push
jae
icebp
jmp
pushf
ds
xchg
call
jg
xchg
nop
adc
adc
sbb
mov
adc
fwait
sbb
mov
lds
dec
sbb
fistl
or
xor
daa
xor
ja
mov
out
jbe
pushf
sbbb
repnz
dec
cmp
sahf
push
test
jecxz
push
dec
xchg
dec
lret
int3
or
fstpt
sahf
push
out
adc
mov
inc
xor
cmpsb
xchg
dec
mov
lcall
mov
jnp
xor
jns
in
mov
repnz
in
shl
loop
push
fs
nop
mov
jl
sbb
popa
sbb
shlb
jbe
jo
ja
leave
call
dec
in
rclb
and
outsb
jae
scas
stc
sbb
js
jle
std
imul
lea
dec
sbb
scas
sbb
out
xchg
push
cmp
jg
or
cmpsl
cmpsb
loopne
mov
inc
outsb
xchg
scas
outsb
add
fs
stc
ss
js
and
lahf
shrb
adc
pop
jecxz
in
push
mov
or
pop
jo
or
sbb
imul
push
adc
cs
xlat
inc
push
inc
addr16
imul
and
cli
and
jns
pop
cmpsl
stos
push
xor
sti
push
insb
jecxz
cld
cmp
test
sub
ret
stos
push
and
fsub
add
pop
push
jbe
rolb
cmpsl
andb
lret
test
jns
xchg
sahf
cmp
inc
pop
mov
sbb
xlat
fs
pop
je
jae
pop
adc
dec
and
mov
jns
mov
imul
sub
xlat
dec
ja
pop
in
adc
cmp
xlat
lret
call
insl
aad
and
imul
in
sbb
fidivrs
nop
daa
dec
or
sbbl
out
pushf
xlat
dec
scas
cwtl
repnz
xchg
xor
bound
popf
int
fs
and
inc
arpl
push
xor
jae
fdiv
daa
jp
add
inc
cmc
cld
les
cmp
sub
mov
xchg
jp
inc
out
cmpsb
int
sub
pop
push
pop
pop
xor
scas
mov
into
arpl
in
pushf
aam
push
xchg
icebp
xchg
mov
xor
into
mov
mov
imul
jno
push
or
adc
sub
xchg
es
dec
cld
cs
pop
pop
adc
adc
jae
push
lret
jns
movsb
xor
ficoms
jl
daa
shrl
xor
cli
or
cs
xor
adc
xchg
jle
push
jb
push
dec
fsubl
push
scas
adc
aas
jg
jl,pn
sbb
repz
adc
jle
subl
xor
push
pop
daa
fldcw
cmp
lods
arpl
les
cmpsl
inc
lret
xchg
cs
cli
cltd
jne
lds
dec
adc
mov
adc
inc
mov
dec
mov
adc
ss
lods
inc
adc
jns
aam
push
loope
outsl
jle
xor
ds
mov
cmp
cmpsl
xor
inc
aaa
pop
push
cli
cmp
add
addr16
lcall
fstps
int
inc
jle
ljmp
fwait
gs
popa
int3
xor
cmp
fdivrl
mov
xlat
ds
pop
mov
loopne
mov
out
cmp
cmpsb
imul
scas
in
mov
pop
push
and
inc
push
xchg
dec
pop
pop
jp
aad
aas
sub
insb
mov
out
adc
ja
das
jecxz
fists
insb
mov
popf
push
mov
xchg
mov
pop
popf
iret
stc
lahf
pushl
mov
pusha
adc
push
add
pop
jge
and
xchg
cmc
fmull
loope
mov
inc
scas
pop
sub
pop
dec
xchg
dec
fld
adc
sbb
mov
mov
aas
dec
add
cmpsl
push
add
js
sti
nop
repz
sarb
lcall
fisttps
popf
movsb
mov
sub
mov
cmp
inc
out
add
in
je
out
inc
scas
sbbb
add
jmp
adc
lea
xlat
test
pop
fistps
dec
popa
cltd
test
mov
sub
jle
cmp
pop
fwait
bound
rcr
dec
out
stc
and
ljmp
mov
mov
push
pop
test
divb
fldenv
cltd
cwtl
push
lds
addr16
mov
pop
adc
mov
fs
cld
mov
and
jae
orl
mov
xchg
dec
and
adc
inc
pop
lret
stos
jl
xor
mov
js
sub
vpmacsdd
nop
push
ret
mov
cmova
mov
fidivrl
cmpsl
hlt
loopne
mov
popa
cwtl
lock
iret
test
push
outsl
cld
mov
pop
inc
inc
stos
cmp
scas
cmp
lods
fists
sub
xchg
je
xor
add
mov
ret
dec
rcrl
jp
ljmp
push
add
jmp
lahf
xchg
jecxz
adc
cmp
dec
ret
mov
mov
cmp
mov
fwait
popa
in
test
addl
pop
lahf
addb
stos
repz
and
sahf
sahf
adc
push
lret
icebp
or
in
pushf
dec
sub
ret
sar
jno
cmpsb
shll
icebp
inc
or
adc
daa
ljmp
jnp
fcomps
ret
out
in
mov
addr16
pop
jle
cmpl
sub
stc
enter
mov
inc
sub
xchg
test
push
push
test
test
sti
sub
into
pop
xor
repz
lret
stos
jmp
dec
cmpsb
add
dec
jns
cmc
das
bound
outsb
loope
roll
xchg
mov
rorb
outsl
and
mov
add
mov
mov
xchg
push
mov
cmp
std
push
je
inc
rolb
mov
aas
daa
mov
cmpsb
cmp
int
sahf
or
push
mov
int
cmc
loope
mulb
into
jge
mov
addr16
js
push
cld
stc
js
shr
aaa
mov
andl
repnz
outsl
jl
fistpll
push
movsl
cmp
dec
mov
adc
fildll
or
outsb
popf
mov
repz
imul
icebp
jp
xor
sti
xor
sbb
push
cmp
push
push
dec
xor
int
sub
outsb
int3
lcall
adc
cmpsl
or
xchg
inc
dec
or
and
fwait
hlt
outsb
mov
out
ja
out
outsb
jp
sbb
popa
out
xchg
sub
stos
mov
outsb
ds
hlt
push
xchg
clc
out
daa
test
lahf
sbb
aad
fidivrs
outsb
mov
cmp
das
fdivrs
bound
cli
orl
fisubs
cmp
or
xor
push
mov
ds
xchg
pop
pop
jns
sbb
cmp
mull
loope,pt
mov
sub
inc
rol
sub
frstor
push
lgs
mov
mov
xchg
out
jmp
lret
pop
or
xlat
fstps
xlat
in
pop
ret
or
lods
rcll
icebp
adc
movsb
in
sahf
lahf
scas
dec
jmp
xchg
push
out
sbbl
mov
outsl
sahf
xlat
ss
test
pop
cmp
and
mov
cmp
jns
loop
aas
je
adc
test
bound
inc
cmp
jg
arpl
dec
enter
add
jecxz
xor
mov
jno
mov
hlt
mov
jg
add
mov
pop
nop
nop
xorl
andl
cmp
push
mov
pop
mov
mov
or
les
inc
jecxz
mov
pop
fstps
cmp
das
jmp
and
xlat
scas
xlat
test
sub
leave
mov
gs
cltd
mov
outsb
cmc
je
pop
inc
lds
scas
adcl
mov
stos
mov
sti
nop
push
jle
mov
das
das
and
mov
test
add
cmc
fwait
mov
imul
movsl
inc
add
rcrb
fildll
jno
adc
dec
push
subl
ja
mov
dec
out
pop
jo,pn
adc
push
not
cmp
dec
movsb
jne
xchg
adc
fsubs
and
iret
movsb
lret
into
sub
out
jmp
fsubp
nop
cmp
mov
ja
xlat
cmpsl
in
mov
iret
cmpb
pop
ficoml
repz
pop
inc
pop
aam
rcl
dec
gs
xor
cmpl
pop
xor
sub
dec
xor
movsb
scas
outsb
mov
dec
or
cs
dec
push
mov
outsl
adc
shr
ljmp
add
sbb
bound
push
gs
dec
dec
dec
stc
aad
rcrb
cld
adcb
dec
insb
jmp
js
adc
bound
pop
pop
dec
lcall
or
lds
shl
xor
out
cmp
mov
mov
push
mov
add
test
xchg
call
pop
or
jae
and
push
jae
jle
sbb
mov
xor
jno
jl,pn
push
aas
test
int3
sbb
in
sti
out
or
push
lcall
arpl
jl
shr
aad
mov
mov
mov
jp
jecxz
mov
filds
cli
mov
jle
insl
sbb
insl
int3
jbe
push
cwtl
lret
outsl
mov
add
out
enter
xor
in
test
push
flds
repnz
dec
inc
fmuls
and
adc
psrad
dec
lret
nop
sbb
sbb
rcl
dec
xorb
add
outsb
cmp
fbstp
xchg
enter
in
xor
test
pop
xor
push
std
decl
jno
xor
or
cmc
mov
aam
mov
xor
dec
xlat
mov
popa
jno
and
mov
push
inc
rol
lods
xchg
insl
ds
inc
das
std
pop
push
inc
aam
or
lock
pop
fisttpl
sti
test
cmp
loopne
std
movsb
mov
aam
inc
xor
xchg
out
pop
or
and
mov
outsb
ret
lock
in
inc
xchg
adc
xorl
lahf
push
jnp
cmp
test
cmp
jb
lret
and
pop
push
fsub
es
xor
mov
jp
test
fbld
paddusb
inc
push
xchg
rcll
cmp
mov
mov
je
lds
lahf
imul
or
jne
lods
add
in
lods
rcr
jecxz
orb
and
or
sbb
xchg
pop
loop
jg
clc
inc
data16
lea
sbb
and
add
ja
mov
fsubl
pop
xchg
ss
andl
push
stos
cmp
push
repz
pop
sub
int3
es
mov
xchg
dec
in
mov
xor
add
fnsave
add
aad
pop
jmp
std
pop
ja
ja
bound
add
jae
push
fnstsw
stos
xchg
dec
push
nop
aas
mov
sub
fistpll
sbb
rcll
mov
cwtl
leave
and
mov
jnp
lret
pop
jecxz
into
cmp
add
adc
cmp
xor
xchg
push
stos
sub
or
stc
xchg
loope
clc
pusha
pop
stos
pop
inc
lret
jo
mov
mov
das
mov
mov
mov
xchg
pop
mov
add
pop
sub
cli
lret
xchg
dec
out
das
mov
sub
inc
push
popf
add
xor
stos
data16
jle
adc
loop
sbb
test
mov
xlat
in
fst
int3
outsl
inc
dec
mov
decl
aad
stos
cmpsb
ffree
cmpsl
or
lret
inc
add
add
int3
stos
stos
xchg
lods
add
and
movsb
dec
add
in
add
push
jle
pop
mov
xchg
inc
pop
jo
cmpsb
cld
lcall
xor
sahf
sti
push
mov
lock
sub
orl
popa
outsb
out
xchg
adc
add
and
lods
sarb
fmull
movsl
lcall
notl
int3
dec
lea
xor
xor
adc
and
dec
nop
icebp
dec
inc
int3
test
icebp
mov
or
lret
jne
pop
mov
push
lret
xor
add
outsl
addr16
movsb
loop
pop
loope
sub
cltd
jne
or
jbe
lcall
pop
xlat
mov
fldcw
aaa
loop
mov
test
mov
loope
mov
inc
mov
jae
xorl
sub
int
cmc
cmp
mov
sub
xor
es
pop
push
gs
cmc
movnti
bound
nop
add
mov
jns
jbe
cmp
cmp
jno
jno
mov
pop
jnp
lods
imul
lods
jge
xchg
xor
jbe
inc
xorb
rorb
adc
or
aaa
mov
xchg
loop
mov
imul
sub
idivl
in
dec
movsb
mov
cmc
lods
jp
mov
outsb
add
add
dec
sbb
xchg
cmp
bound
imul
mov
add
mov
rcr
jg
cmp
into
sbb
sub
push
jmp
push
inc
sti
ror
cmp
icebp
fldl
mov
inc
lret
sarb
jg
add
fmul
mov
cld
lods
aas
out
rol
in
aad
mov
jns
push
push
push
add
xor
xchg
testl
mov
fcomps
pop
dec
shll
push
mov
xor
idiv
xor
mov
popa
addb
cmpsb
add
addr16
test
cmp
subl
mov
inc
xchg
cmp
aad
pop
loope
sub
or
cmpl
fstl
pop
push
std
mov
cmpsb
jae
int3
push
add
xchg
add
das
rcl
in
push
out
inc
repz
sar
fwait
xchg
sub
cli
aad
lods
pop
aaa
sub
cmp
aad
test
mov
sti
les
xor
sub
es
popa
sub
mov
push
mov
andl
hlt
mov
fstpl
xlat
pop
lret
out
pop
dec
movsb
shr
mov
sbb
outsl
repz
cli
inc
xchg
xchg
pop
mov
adc
or
test
dec
inc
jge
lret
dec
out
lea
xchg
inc
das
cmc
dec
xchg
cmpsl
loope
out
push
bound
lcall
xor
and
int
pop
cmp
xor
mov
stos
inc
call
xor
ret
dec
in
lret
lock
pop
sub
and
pop
leave
mov
leave
jns
pop
xlat
pop
inc
xchg
hlt
or
test
mov
das
std
fxrstor
shlb
enter
and
loop
repz
in
rorl
pop
push
sbb
push
pop
xchg
adcl
not
scas
cmp
or
daa
cli
mov
dec
test
mov
setnp
rorl
push
loop
add
mov
fildll
add
add
shlb
cmp
popa
jne
movsl
addr16
bound
cwtl
add
push
out
mov
xor
adc
out
inc
shlb
pushf
mov
adc
mov
push
test
dec
andb
xchg
xlat
adcl
arpl
xchg
test
xchg
xlat
mov
sbb
test
ret
adc
cmc
push
jae
cmpsb
ret
adc
sub
mov
and
add
xor
mov
lock
popf
out
dec
mov
xlat
les
dec
jle
pop
sahf
sbb
dec
sbb
inc
nop
lret
fcmovbe
icebp
pop
pushf
hlt
subl
popa
inc
inc
movsb
mov
mov
int
inc
mov
ja
mov
outsb
add
pushw
push
jle
pop
pusha
add
bound
xchg
clc
jmp
imul
lret
out
iret
rclb
inc
push
cs
cmpb
in
adc
jmp
adc
inc
jo
shll
add
rcr
mov
cmp
adc
push
mov
push
std
sub
push
cmpsl
push
mov
pushf
xorl
repz
rorb
xor
adc
add
pop
jno
in
inc
or
dec
pop
adc
je
mov
das
ljmp
jle
notb
hlt
lret
jecxz
pop
loope
popa
sub
test
sub
pop
in
dec
out
dec
dec
xor
mov
and
imul
adc
cmp
sbb
pop
jmp
pop
test
and
dec
or
mov
into
and
xorb
aad
xchg
cli
cmp
pop
ds
je
mov
pop
dec
mov
fs
pushf
jae
ret
cmpsb
inc
jne
xchg
mov
push
lds
inc
test
push
push
imul
pop
adc
ds
data16
xor
rep
jmp
and
in
fstl
das
ficomps
arpl
fcmovnbe
nop
jbe
in
add
icebp
scas
movsb
jbe
pop
sbb
add
icebp
in
fwait
clc
inc
stc
mov
xchg
out
cmp
aaa
add
ficomps
adc
or
rcrb
inc
push
mov
cmc
or
push
enter
and
lahf
sub
mov
pop
jl
faddp
dec
iret
adc
imul
das
jl
leave
movsb
hlt
mov
pop
shll
jmp
mov
cmp
leave
out
push
std
mov
cwtl
fdivrl
int
clc
test
jle
cmp
cmpb
xor
shr
test
jg
push
out
jmp
in
loop
scas
andl
jbe
inc
xor
int3
jb
xchg
adc
push
sti
mov
mov
push
sub
daa
sbb
jne
je
les
test
imul
gs
adc
je,pt
or
test
sti
sbbl
hlt
sbb
lcall
shll
cli
inc
pusha
jo
push
ja
lods
addl
sahf
cmp
and
scas
or
mov
cmpsb
cmp
inc
fnstsw
mov
flds
inc
sahf
pcmpeqw
fimuls
notl
jecxz
pop
icebp
and
ret
push
dec
sub
les
jnp
xchg
xor
sbb
inc
pushf
cmpsb
jno
cwtl
lea
clc
sub
jle
sti
testb
xchg
negb
xor
repnz
adc
cli
pop
xlat
or
daa
test
lret
xchg
jb
clc
hlt
mov
mov
sbb
stos
cmovp
and
mov
adc
cltd
mov
push
sbbl
mov
pop
mov
stc
dec
jle
jne
add
inc
lods
dec
ret
cwtl
js
inc
mov
sub
jmp
xor
cltd
inc
mov
xchg
in
mov
repz
jne
jecxz
dec
sub
loope
loop
mov
mov
int
mov
dec
hlt
or
test
sti
push
adc
cmp
inc
push
out
jecxz
enter
loop
enter
lock
lods
push
std
jno
sub
and
arpl
stos
sub
xchg
ljmp
decl
mov
mov
sub
dec
lods
ja
je
cltd
mov
stos
repz
ss
dec
inc
sub
test
cmc
lret
mov
bound
xchg
mov
les
into
movsb
mov
imul
jl
arpl
push
jno
shr
or
pop
stos
pusha
adc
push
mov
in
sub
adc
jle
jl
ja
cwtl
sbb
push
adc
push
push
int
push
add
popa
adc
add
and
cli
mov
sub
mov
ss
lock
inc
lock
jns
push
decb
enter
lret
fldcw
pop
push
cmp
or
add
out
jae
or
jno
loopne
loopnew
or
lea
or
test
pop
in
test
je
or
and
add
dec
add
push
mov
lods
push
addl
mov
ret
adc
std
xchg
cwtl
rcl
cli
pop
loop
subl
or
nop
leave
pop
in
jbe
sbb
cmp
rolb
fbstp
push
test
test
add
jno
aaa
cli
jnp
je
dec
mov
or
hlt
xchg
adc
enter
push
fwait
rorl
movb
or
inc
ret
add
mov
test
popf
push
xor
into
repnz
cli
mov
jge
inc
mov
cmp
cmp
ds
mov
aas
adc
pop
cmp
add
jne
pop
mov
dec
outsl
fsubrl
repz
mov
addr16
shl
sub
scas
fwait
push
xchg
outsl
out
mov
xchg
inc
rcrl
testl
movsb
test
ds
push
adc
outsb
dec
daa
mov
inc
or
cs
or
stos
inc
xlat
loopne
icebp
xlat
jae
inc
lret
adcb
adc
ja
inc
daa
mov
xchg
jmp
and
inc
xchg
cwtl
push
fwait
cld
shl
mov
dec
dec
sub
std
lods
fcoml
jnp
mov
fucomip
mov
cmp
std
cmp
xchg
pop
je
lods
mov
sar
xchg
sbb
out
inc
loopne
ja
lods
shll
les
sbb
mov
lods
decl
adc
pop
out
sti
aas
or
ret
jne
pop
aam
pop
inc
sub
popf
lds
cmpsl
mov
jle
lret
stc
mov
loopne
out
mov
xchg
dec
sti
lods
and
inc
or
aam
xchg
mov
lds
lds
dec
mov
filds
lret
xchg
inc
jl
adc
sub
xchg
adc
stc
cmpsb
in
loope
addl
lds
xchg
int3
sti
shlb
jo
push
je
mov
add
add
mov
pop
push
push
sub
sbb
popf
in
cld
mov
enter
cmp
rclb
pop
push
ret
das
add
ret
dec
in
dec
popf
sub
idivb
arpl
jecxz
sbb
loop
dec
lods
xchg
ds
sar
sub
mov
mov
mov
push
cld
xchg
in
jmp
pop
into
sahf
xchg
das
xchg
daa
pop
dec
mov
or
push
fs
fistps
pop
pushf
jo
cmp
int3
xor
pop
imul
pop
nop
jb
mov
adc
push
pop
cmp
pop
or
mov
sub
scas
push
in
cwtl
aas
imul
dec
ret
sti
lahf
cld
pop
test
lahf
dec
push
js,pt
cmpb
mov
in
loop
push
mov
xchg
fstpt
fiadds
clc
sbb
rclb
insb
adc
shrb
mov
jno
and
inc
dec
mov
out
push
aad
jg
pushf
fnstsw
std
les
in
fs
out
cmc
cmova
jbe
clc
in
jecxz
adc
add
test
jmp
jae
jbe
cld
push
imul
sub
mov
dec
negl
adc
int3
mov
jecxz
jle
mov
fcoms
cli
adc
out
jb
add
or
push
sti
sub
cli
fstpl
ret
dec
lret
add
cld
movsl
mov
scas
dec
mov
and
repnz
jno
push
jae
sbb
movsl
lds
lea
addr16
adc
sbb
pop
xchg
sti
lcall
adcl
mov
xchg
inc
push
adc
scas
mov
scas
fisubrl
sahf
aam
mov
jae
lret
arpl
push
inc
lcall
stos
xlat
stc
aad
pusha
xlat
insl
movsl
aad
lods
xlat
jb
push
outsb
and
out
jne
inc
cmp
xor
inc
mov
pop
or
pop
bound
sbb
inc
push
ss
mov
jbe
dec
data16
fwait
insb
jge
ds
mov
cmp
mov
pusha
adc
icebp
lea
and
lods
cli
popf
pop
inc
mov
fisttpll
imul
sti
loop
clc
pushf
mov
add
sbb
lcall
in
cmpsb
dec
push
sub
mov
aad
clc
inc
lods
adc
cmp
mov
jg
out
mov
push
sti
pop
or
icebp
jns
push
sub
movsl
inc
jmp
ljmp
xor
in
subl
inc
jns
jmp
idiv
inc
sar
jle
mov
and
lods
rclb
daa
or
leave
sbb
or
mov
pop
ds
das
jno
inc
lds
sahf
and
xchg
jge
sub
lods
pop
jno
jns
aas
les
aad
jae
aad
cwtl
mov
scas
dec
jle
xor
push
sub
xchg
fwait
mov
push
mov
lahf
add
mov
decb
mov
test
dec
mov
stc
cmpb
out
add
xchg
push
insl
sti
call
outsl
jmp
mov
xchg
das
add
jge
add
mov
sbb
jge
out
bound
loope
dec
sti
pop
adc
shll
into
pop
inc
dec
shlb
test
jnp
add
lahf
pop
repnz
or
mov
ljmp
xchg
jmp
inc
pop
out
mov
mov
std
dec
cmp
sbb
push
lock
orb
stos
in
mov
divl
mov
push
das
jmp
mov
mov
ret
cmp
lods
movb
and
lret
sub
jno
pop
pop
sub
aad
sub
or
jne
mov
fidivl
ret
in
and
adc
fdivrs
xor
mov
mov
sbbl
rclb
push
ret
gs
push
lea
and
push
into
pop
push
sti
pusha
lods
mov
sub
pop
add
inc
test
add
rcrb
jbe
push
call
sbb
pop
ja
cld
xchg
jne
or
mov
jnp
mov
pop
daa
mov
out
stc
js
push
stos
sar
add
or
inc
cmp
mov
add
aas
cmp
arpl
xchg
jecxz
cmc
repnz
adc
cmp
pop
pop
add
loope
int
mov
cmpsl
lods
xchg
push
das
std
in
jb
mov
dec
push
into
pop
or
jb
fistpl
sub
push
inc
std
sub
sub
popf
fsubrs
dec
cmp
sahf
push
xor
lods
test
aam
inc
mov
xor
std
ret
js
fdivrp
rorl
or
pop
jb
and
repz
stc
mov
movsl
mov
dec
outsl
push
loop
or
movb
outsb
loopne
pusha
pop
pop
mov
dec
outsl
shrl
fstl
and
into
into
outsl
stc
leave
cld
pusha
push
dec
xchg
aam
es
pop
rorl
outsb
xchg
mov
jge
sbb
xor
cmp
jg
inc
lods
jbe
in
inc
lret
sbb
fisttpll
mov
fadd
adc
sbb
idiv
push
sahf
test
test
inc
rolb
mov
cmp
inc
aaa
aad
pop
aaa
out
lods
icebp
add
inc
adc
ss
mov
xor
imul
sbb
dec
ljmp
stc
push
daa
cmp
and
data16
in
sar
int3
jne
sbb
mov
aam
fs
aam
add
scas
mov
xchg
add
xor
mov
push
push
sub
das
repnz
jp
inc
push
sub
pop
and
ficoml
adc
les
les
push
and
out
ja
xchg
cmp
add
sub
adc
icebp
aad
cmc
cmp
mov
pop
and
pop
xchg
in
fiaddl
mov
push
or
stos
dec
xchg
fwait
sub
push
mov
inc
rcrb
jl
xchg
movsb
iret
in
jns
data16
jecxz
sbb
jo
lock
fcompl
pop
frstor
out
mov
xor
int3
xor
mov
and
mov
scas
movsb
xchg
or
cmp
clc
std
bound
xor
gs
je
add
inc
ss
fnstenv
ss
mov
add
pop
or
dec
popf
fldt
pushf
jle
push
lahf
fidivl
or
insl
sarb
and
push
xchg
mov
nop
into
repz
jge
aas
faddp
stos
mov
ss
push
push
inc
jae
mov
pop
cld
fnsave
jae
jmp
inc
jl
jbe
push
repnz
pop
cwtl
test
pop
cmp
imul
adc
pusha
js
pop
cmp
leave
sub
and
cmp
xchg
into
rolb
out
loopne
cmpsl
pop
lahf
add
pop
jmp
pop
jg
lret
dec
pop
dec
sbb
sub
ja
xchg
sub
lock
cmp
gs
pop
int
and
negl
stos
dec
xor
jno
arpl
lds
loop
enter
push
push
mov
mov
jg
leave
int
lock
xchg
inc
cmp
mov
pop
inc
cmp
jmp
dec
add
cmp
mov
or
pushf
mov
cs
and
outsb
nop
inc
dec
and
movsl
inc
xchg
daa
add
mov
add
push
jb
fsubrs
mov
scas
pop
jno
enter
xor
xchg
addr16
xchg
push
sub
dec
jge
lea
mov
dec
xchg
insl
and
or
add
loop
pop
mov
mov
adc
addl
shrb
inc
or
stos
pop
leave
jbe
mov
lea
leave
jp
inc
xchg
rol
sarl
sub
repz
std
ljmp
jnp
xor
and
in
nop
lock
push
xor
lea
in
js
popf
cltd
cmpsl
pop
sbb
or
inc
fldt
sub
mov
stos
das
je
mov
repnz
cmpsb
xlat
bound
sbb
xchg
lods
popa
insb
jmp
push
popf
mov
sbb
scas
add
shr
lret
arpl
push
aas
dec
xlat
xchg
enter
in
or
fstpl
insb
pop
vphaddudq
icebp
sbb
fnstsw
mov
xor
push
mov
ffree
push
pushf
mov
add
adc
xor
in
add
xchg
in
jbe
xor
lds
ds
pushw
dec
ss
cwtl
xchg
and
bound
cwtl
clc
xor
arpl
push
ja
inc
sahf
xchg
xchg
jo
cmp
xor
push
es
pop
pop
cmp
lea
inc
stos
inc
push
test
push
pop
inc
pop
test
lret
xor
xchg
and
outsb
or
lods
mov
adc
cmpsl
push
fdivrs
in
mov
cwtl
push
add
and
pusha
mov
rorl
pop
pop
xchg
mov
jecxz
adc
cmpsl
and
hlt
jbe
lea
cli
xor
inc
mov
pop
cmp
shlb
and
in
stos
adc
out
sbb
fiaddl
into
ror
or
imul
in
sbb
push
pop
lods
mov
test
fnstenv
test
call
shll
jle
mov
jl
dec
lea
jne
sub
and
push
push
out
inc
arpl
mov
rcr
rolb
mov
jae
incb
adc
pop
aad
push
push
xor
jo
or
or
push
pop
pop
sub
dec
cmp
sbb
jae
cltd
lock
cs
enter
push
mov
mov
clc
pop
leave
adc
mov
cld
xchg
jl
mov
aas
jbe
mov
adc
and
gs
scas
sbb
xchg
fwait
cwtl
cmc
mov
ds
out
or
leave
stos
jecxz
call
xchg
or
xchg
pushf
js
add
inc
test
lret
adc
xor
xorb
cmpsb
lret
icebp
ret
add
xor
ret
sti
jbe
sar
mov
jge
lods
roll
push
or
rcr
cltd
dec
dec
mov
pop
jno
adc
sub
jmp
dec
push
cltd
ds
loope
adc
adc
loope
pop
cmp
out
enter
push
mov
inc
mov
add
xor
into
into
lds
outsl
inc
mov
inc
push
mov
imull
shll
adcl
jne
ljmp
arpl
daa
movsl
cmp
in
fisubrs
sti
sbbb
out
push
cmp
inc
mov
pop
xor
mov
sub
mov
xchg
sbb
push
pop
stos
jle
pop
daa
insb
push
cmp
sub
xchg
push
inc
mov
jno
test
int3
mov
call
cld
imul
jp
dec
stos
xor
sbb
adc
fs
aam
into
mul
aaa
js
sahf
and
mov
incb
pop
xchg
xlat
mov
xchg
jne
or
mov
jle
dec
stos
dec
xor
pop
das
into
pushf
repz
xchg
loope
sbb
jg
rep
xor
mov
loopne
and
jae
sbb
js
push
push
mov
lret
sbb
stc
mov
xor
inc
dec
xchg
or
stos
pop
pop
add
notl
shrb
sub
daa
stos
adc
sar
xchg
jbe
adc
test
scas
cmp
ds
cmpsl
lahf
mov
js
cli
push
or
rolb
cmp
fld
push
dec
mov
bound
mov
in
fwait
pop
loop
and
push
mov
out
xchg
fdivs
add
jmp
pop
mov
popa
icebp
adc
sbb
cmp
adc
lcall
mov
ss
lods
scas
jecxz
outsl
xchg
gs
repz
mov
adc
movsb
ret
add
mov
adc
sub
inc
or
int3
fcmovne
stos
xchg
cmp
mov
push
lea
lret
push
loope
ds
adc
cs
jno
sbb
lret
push
loopne
mov
dec
push
gs
nop
loope
insl
sbb
imul
les
adc
jmp
loopne
push
xor
add
movsb
bound
fsts
jp
divb
ss
jnp
mov
test
xlat
divb
bound
lret
mov
mov
movsb
lock
cltd
push
divb
mov
fdivl
lcall
mov
mov
mov
insl
jmp
jae
inc
iret
ret
adc
xor
pop
ret
test
shrl
mov
pop
enter
std
inc
test
push
jne
cli
xchg
clc
pcmpeqw
int
xchg
push
pushf
jle
xor
and
cld
loopne
scas
and
pushf
fidivl
fcmovu
mov
push
and
mov
cld
call
xor
imul
jmp
xlat
movsl
add
sub
nop
or
or
sbb
inc
mov
das
jnp
and
cmpsb
sarl
mov
xor
shrl
push
sahf
xchg
imul
push
push
insl
dec
mov
pop
cli
imul
sbb
cmp
jne
js
nop
jmp
jne
or
push
gs
pop
mov
xchg
loope
int3
out
mov
xlat
jle
mov
mov
rorl
loopne
mov
aaa
lcall
shl
push
lret
push
in
adc
inc
xor
stc
inc
pop
ret
mov
es
sub
xchg
inc
adc
mov
hlt
dec
xchg
add
test
fwait
lods
repnz
dec
sbb
xorl
stc
mov
mov
gs
loope
data16
jmp
xor
and
or
out
jbe
push
repnz
jno
and
push
push
stos
push
or
xor
or
push
push
pop
in
adc
xchg
cs
cld
ret
daa
pop
scas
xchg
mov
pop
mov
insl
outsl
outsb
fidivrs
dec
sti
outsb
or
fs
cmc
fmull
inc
mov
aad
rolb
inc
lds
or
xor
mov
lret
push
inc
push
ficomps
mov
rorb
in
popf
loop
mov
aas
stc
sub
push
push
jp
icebp
test
insl
xchg
clc
push
aam
loope
ds
popa
mov
iret
das
xchg
scas
or
loopne
jae
cmp
add
push
repnz
jns
jmp
push
outsb
mov
or
cmpsb
dec
cmp
jns
mov
aas
mov
mov
add
xor
rclb
aad
aad
dec
cmp
inc
out
add
mov
pop
test
cld
les
subl
ljmp
cwtl
cli
add
les
in
aaa
or
xor
in
and
ret
int
cmpb
xchg
mov
push
cmp
jg
sub
mov
dec
fmull
repnz
mov
adc
dec
push
mov
xchg
sub
shlb
gs
push
int
aam
mov
fwait
inc
out
es
pop
lret
cmp
jne
loopne
cmp
jp
andl
dec
jne
or
sbb
mov
jp
pop
adc
test
mov
xor
fbstp
imul
inc
outsl
jnp
push
jae
iret
jg
fwait
inc
xor
and
pop
daa
mov
ret
das
pop
cmpsb
mov
push
int
scas
push
mov
xchg
loop
test
ficomps
or
and
xchg
mov
mov
aam
lock
lds
lcall
xor
les
sbb
pop
and
mov
inc
std
sbb
rcrl
arpl
mov
pop
mov
lock
int
mov
into
dec
clc
adc
aad
xor
rolb
xor
inc
mov
xor
pop
push
outsl
outsb
sbb
sbb
aad
stos
movsl
fsubrp
fdivrl
mov
push
pop
jmp
or
lcall
xchg
clc
cli
dec
adc
adc
xchg
sbb
stc
pop
ja
jno
sub
shrl
lea
and
insl
pop
adc
stos
xor
mov
aam
aad
inc
gs
mov
cmpsb
imul
or
sarb
jno
pusha
fdivl
mov
movsl
pushf
push
hlt
std
lcall
test
insb
nop
aam
jns
cmpsl
cmp
fimull
and
pop
push
cld
xor
repz
xor
jg
adc
int
sub
sbb
xchg
mov
outsl
mov
fwait
pop
testb
jmp
and
in
cld
lret
loop
in
mov
cmp
add
push
inc
or
xchg
fistpl
cmp
rcr
mov
mul
cld
or
test
lret
cld
inc
jb
xchg
andl
mov
xor
pop
xchg
enter
or
testb
jp
lods
ds
nop
sub
add
in
outsb
mov
push
js
jb
repnz
test
sbb
and
cmc
stos
scas
push
int3
movsb
sub
clc
imul
mov
jne
ja
cltd
test
idivl
inc
pop
pop
mov
ljmp
call
dec
cmc
loopne
mov
icebp
dec
push
mov
lcall
sbb
sbb
jae
mov
mov
sub
push
cmp
mov
lahf
out
test
divl
jecxz
pop
pusha
sbb
push
popa
lods
push
lea
jg
add
cs
loop
scas
inc
ret
enter
iret
cmpsb
add
cld
loopne
xor
mov
jmp
cli
add
xor
sub
sti
sbbb
stos
pop
dec
scas
rorb
sbb
xchg
pop
jle
mov
and
iret
dec
add
lods
add
and
jb
push
rorl
fwait
sahf
add
sub
dec
lods
lar
mov
idivb
sub
js
stos
inc
dec
or
data16
into
jp
jge
fcompl
sbb
mov
out
sub
jbe
cltd
insb
jle
add
mov
inc
popa
xchg
fwait
or
add
and
std
lea
test
adc
arpl
dec
stos
or
lcall
fnstsw
shlb
sbb
stc
mov
inc
in
aam
mov
repz
and
jle
xchg
add
std
aam
ja
mov
cwtl
lods
ljmp
fsubl
aad
pusha
jge
in
xor
es
xor
ss
mov
mov
lds
imul
sbb
lock
ret
imul
sub
lret
ret
xorb
ficomps
shlb
xor
xchg
ror
cmpsl
jns
cmp
xchg
sub
sub
adc
and
xchg
ret
pusha
gs
and
jg
fcomi
std
stos
out
sahf
add
pop
in
mov
out
jb
shll
jnp
adc
jns
ljmp
push
fnstsw
lcall
pop
dec
repnz
imul
dec
arpl
fsubrl
fcoml
pop
call
xorb
in
mov
inc
scas
fdivr
repnz
test
xor
test
pop
push
loop
inc
nop
pop
pop
sti
les
mov
lret
scas
je
dec
adc
jge
inc
mov
xor
and
xchg
aad
sbb
iret
dec
xlat
sbb
inc
shll
cld
mov
fmull
pusha
ljmp
push
push
nop
or
scas
incb
pop
roll
cmp
xchg
xchg
stc
and
mov
push
sarl
mov
lock
xchg
js
mov
cwtl
loope
out
dec
jae
data16
add
jl
rorl
dec
cld
iret
push
xchg
push
lahf
je
push
sbb
inc
sbb
rorl
xor
sti
lods
inc
adc
mov
test
lods
insl
add
pop
movups
jecxz
mov
arpl
push
outsb
sub
push
bndldx
icebp
les
filds
and
mov
test
xor
notb
push
subb
inc
test
mov
inc
cld
cltd
daa
mov
sti
clc
sub
or
and
mov
data16
push
out
mov
pop
xor
push
int3
mov
inc
into
stc
jmp
push
pop
stos
mov
or
sub
mov
push
inc
rorb
add
popf
jmp
adc
sub
int
idivb
sbb
jbe
insb
std
push
leave
add
xchg
sub
shlb
mov
add
dec
loopne
stos
test
jl
jmp
jae
adc
xor
xor
arpl
add
jne
ss
es
fstpl
xchg
inc
fs
enter
inc
dec
mov
leave
xchg
lgs
mov
imul
mov
xchg
cs
mov
push
cmp
inc
mov
add
sbbl
sub
cmpsl
push
imul
fyl2x
adc
mov
xchg
and
push
and
movsb
mov
hlt
pop
xor
mov
xor
xor
aad
pop
es
xor
repnz
jmp
dec
sub
popa
push
scas
adc
add
pop
jae
push
aam
aas
pop
xchg
enter
in
dec
push
jl
scas
dec
test
inc
gs
out
pop
jecxz
or
add
push
mov
sbb
jae
dec
adc
cmp
pop
imul
ffreep
jge
push
loop
inc
or
jo
clc
shll
js
xchg
cmpsl
adc
fsub
mov
pop
pop
xchg
xor
or
icebp
fiadds
add
mov
inc
lods
pop
adc
xlat
cmp
sub
adc
sarl
cli
loope
shrb
pop
mov
cmpb
repz
jg
mov
add
push
or
and
je
sarb
and
mov
test
or
test
add
outsl
inc
push
iret
flds
cltd
ss
dec
mov
arpl
fists
lds
hlt
mov
ljmp
imul
test
ja
jl
mov
xchg
shlb
in
nop
loop
sbb
xor
sub
cmc
inc
imul
int3
test
arpl
mov
stos
cmpsl
add
xchg
test
adc
pop
in
addr16
jno
cmp
or
gs
pop
aaa
mov
jbe
ja
dec
loop
loope
xor
std
es
jmp
and
jb
shrb
pop
fmull
pop
mov
adc
mov
pusha
repz
ljmp
outsl
adc
jae
imul
sbb
out
lret
ss
ret
mov
jnp,pt
hlt
mov
xchg
inc
leave
daa
pop
xchg
repz
sub
dec
cmp
sub
sub
mov
add
sbb
or
cs
lahf
push
xorl
js
push
inc
and
addr16
and
hlt
lods
xor
outsb
pusha
cs
mov
mov
or
push
in
sbb
aam
ds
aas
lret
sub
cmp
sub
out
test
and
xchg
jne
mov
cltd
pop
jp
clc
mov
fs
out
fisubrs
int
inc
nop
jno
fists
inc
dec
mov
movsb
stc
dec
sub
cmp
test
divb
call
icebp
pop
jmp
pusha
sbb
xchg
inc
mov
inc
outsb
add
add
dec
jne
dec
sbb
mov
push
cmp
push
outsb
movsl
pop
mov
mov
repz
sbb
xor
popf
push
repz
adc
arpl
popf
loopne
std
arpl
aad
pop
sbb
mov
dec
jg
jb
inc
not
push
insl
mov
rorl
in
mov
stc
push
imul
cld
lret
fcoms
sbb
mov
rorb
jg
scas
jl
fucomp
mov
sbb
cli
mov
mov
dec
stos
js
or
add
shl
jl
cmc
enter
popa
js
sbb
mov
xor
push
fiadds
pop
mov
cmpl
rcll
sub
and
data16
and
les
adc
add
sbb
mov
and
xchg
jbe
sbb
mov
mov
loopne
cltd
xchg
fnsave
stos
sbb
clc
lods
test
imul
fstl
push
cs
mov
iret
rcll
popa
lcall
fisubs
call
sbb
nop
gs
mov
pop
shl
lock
icebp
inc
cld
rorl
in
lret
cmp
adc
in
int3
cmpsb
imul
mov
test
mov
push
lods
sbb
loope
in
jae
rcll
add
mov
sbb
mov
cmpsb
and
lods
pop
and
add
sti
xchg
adc
addb
fsubs
sub
mov
and
or
xlat
push
mov
aad
aas
fdivs
loop
rolb
cmp
sbb
data16
stos
cmp
lcall
xor
sub
in
lcall
sarb
mov
rclb
mov
jp
insb
pop
cli
jae
xchg
lret
add
and
stos
push
les
in
scas
in
sahf
movsb
inc
cld
sub
and
in
pushf
fildll
imul
ret
lcall
les
jns
mov
xchg
jp
add
mov
movsl
jno
cmp
stos
inc
icebp
push
je
fsub
pop
mov
ds
mov
aaa
nop
push
stc
mov
pop
push
push
inc
aas
cmp
xlat
push
ret
lock
out
push
test
mulb
mov
push
bound
mov
fnstenv
sub
xlat
and
add
mov
icebp
mov
sbb
sbb
lahf
stos
mov
adc
add
xor
sub
fst
jbe
adc
pusha
mov
mov
insl
mov
lret
cmp
and
dec
fwait
dec
adc
popa
xor
xlat
popa
adc
les
pop
fnstcw
rorb
fwait
out
pop
mov
push
hlt
mov
add
pusha
xlat
into
pop
push
sbb
incl
out
rorb
mov
ss
pusha
data16
je
xlat
push
pop
out
fsubrl
jge
jge
sti
cmpsl
or
xlat
mov
stos
out
ss
aas
call
scas
jne
and
sub
das
enter
fsubl
les
stc
scas
cmp
adc
jne
or
stos
jae
insb
and
leave
mov
sub
dec
mov
ds
std
sub
std
or
push
stos
push
lret
pop
insl
dec
inc
lea
and
data16
lods
lahf
enter
cs
popf
jge
jp
xor
int3
fidivs
mov
popf
inc
sbb
movlps
mov
mov
fcoml
jns
shll
sbb
inc
xchg
daa
mov
imulb
push
jmp
dec
dec
add
cmp
fs
xchg
les
cmp
aad
repz
cmp
adc
scas
dec
imul
jno
or
pop
jne
jb
sub
inc
rcrb
dec
in
sub
nop
sbb
cld
jbe
jbe
inc
sbb
pushf
sub
fistl
fwait
mov
std
push
dec
xor
dec
xlat
adc
ss
mov
lds
iret
pop
cmp
pop
ds
das
or
sub
xchg
lods
mov
les
mov
out
cltd
out
pop
test
and
ja
ds
push
in
mov
shlb
mov
clc
cld
js
pushf
mov
xchg
cmpsl
add
inc
mov
add
cli
dec
push
pop
cld
jns
dec
sbb
pop
xrelease
shlb
cmp
negb
add
aaa
popf
and
pop
lods
in
loop
inc
leave
pusha
add
pushf
movzwl
jge
stos
repz
xor
add
inc
mov
pop
std
or
dec
pusha
orl
push
mov
inc
sti
fisttpll
ret
sub
or
iret
pop
mov
push
js
js
jo
sub
mov
sub
lcall
adc
icebp
jg
or
das
adc
andl
xor
cmpsl
rcrl
shld
repz
pop
out
mov
sub
cmp
and
in
xor
pop
out
pop
data16
and
dec
call
push
pop
mov
andl
stc
pop
je
mov
test
cmpsb
mov
icebp
xor
lcall
jns
test
je
jg
pop
ljmp
mov
dec
or
mov
sti
cmp
cmp
cld
into
push
pushaw
xchg
sub
jg
sub
jge
pop
aas
push
and
pop
mov
out
push
mov
cmp
pushf
pop
push
sbb
xor
nop
lahf
stc
mov
inc
xchg
addb
cmpsb
fldt
push
popa
jle
mov
xor
pushf
into
stos
mov
outsb
test
inc
test
mov
aad
call
add
adc
in
push
mov
arpl
and
sub
jge
lcall
aad
shrb
xchg
or
push
mov
or
dec
out
xor
mov
and
push
xor
hlt
out
jnp
int
dec
fs
fcmovnbe
mov
push
push
jb
mov
ljmp
jb
sbb
mov
mov
or
or
int3
mov
mov
repnz
sub
aad
outsb
cvtps2pd
adc
lret
rolb
xor
dec
test
cmc
and
jmp
out
xor
loopne
jnp
xor
imul
in
pop
repz
sbb
push
scas
push
dec
inc
mov
aas
sub
pop
pop
shll
fcomps
lock
jo
mov
fisubrs
or
test
push
adcb
icebp
testb
mov
scas
sbb
jne
insb
out
push
mov
and
cwtl
xor
std
out
sti
adc
sub
mov
sbb
aaa
inc
fstl
mov
mov
mov
and
call
arpl
xor
and
scas
test
mov
adc
pop
nop
ss
mov
sbb
movsb
xchg
cmp
rcrl
cltd
add
xchg
jae
call
sub
xor
inc
pop
and
lods
add
jg
pop
repnz
or
pusha
loopne
loopne
movsl
mov
add
mov
or
xor
xchg
mov
push
xor
les
dec
bound
or
js
ss
pop
adc
test
jnp
std
push
and
sub
and
cmp
out
jb
mov
or
mov
mov
and
push
cmp
adc
in
stos
sub
dec
mulb
fstps
cwtl
dec
xchg
call
loopne
lret
adc
in
xor
enter
fwait
xchg
outsl
stos
cmp
pop
iret
sbb
pushl
aaa
out
popf
sti
adc
imul
aad
fisubs
pop
cmp
addr16
mov
push
iret
sbb
enter
flds
or
mov
out
lods
jbe
stc
mov
in
mov
inc
sub
pop
sbb
aas
xchg
ret
fwait
and
ret
push
mov
lock
xor
decl
mov
jae
mov
dec
lds
leave
push
push
sbbb
cli
in
fs
sahf
sahf
dec
cli
lret
cltd
jno
filds
inc
imulb
xor
adc
push
xor
add
sbb
xchg
push
push
lods
hlt
mov
push
sbb
mov
cld
add
mov
sub
jns
cmp
pop
lods
mov
lret
popa
in
dec
jp
lods
rcll
or
and
rep
add
sub
mov
ljmp
jnp
dec
dec
roll
cmp
or
pusha
pop
into
lret
xchg
out
dec
xchg
fsubl
sbb
mov
pop
dec
sbb
xchg
push
sti
fwait
inc
jl
sub
clc
cmp
js
push
and
inc
sub
cmpsb
add
stos
repnz
add
mov
movsl
insb
test
fisubl
inc
ja
cmp
xor
or
push
icebp
xchg
fidivrl
int3
ret
mov
cmc
fwait
pop
mov
dec
arpl
mov
xor
mov
adcl
iret
or
push
xor
incl
xor
sub
xchg
cmpsb
inc
out
popa
xorl
mov
lds
pop
icebp
jecxz
sahf
ja
cmp
xlat
loop
ds
push
pusha
rcl
mov
stos
pop
int
sub
dec
rcrl
push
jge
add
mov
out
addr16
int
pop
out
ror
ficompl
mov
movsb
inc
sbb
mov
inc
mov
pop
xchg
rolb
jmp
and
out
jp,pn
stos
xchg
pushf
dec
push
aad
mov
xchg
aad
popf
call
popf
adc
or
mov
push
dec
xchg
mov
fldl
enter
pop
inc
sub
enter
inc
sub
leave
ret
add
push
jge
stc
and
push
xchg
test
lea
rorb
and
ds
mov
neg
jmp
pop
push
sub
and
jo
enter
sbb
into
outsl
cld
cmc
lods
dec
dec
sub
jmp
push
mov
mov
xrelease
lock
pop
lds
jns
inc
pop
adc
jmp
lahf
sbb
roll
dec
jecxz
dec
lods
mov
dec
enter
pop
jne
in
dec
and
repz
and
sarl
jmp
lret
loope
adc
mov
cmp
cmpsl
lds
mov
xor
fpatan
aad
repz
cmpsl
cmpl
lcall
ror
push
scas
daa
int
mov
sbb
adcl
imul
cmp
mov
dec
push
jae
add
cmp
ds
jecxz
sti
mov
mov
movsb
out
mov
push
cld
adc
movsb
sbb
pop
loope
mov
fdivrs
fbld
and
out
call
popa
inc
pop
int3
push
cmp
inc
lods
out
test
insb
ja
scas
xchg
xor
or
rcrb
pop
and
stc
sub
ss
mov
popa
loope
gs
push
test
fsub
out
cmc
out
push
pop
xor
inc
cmp
imul
in
sbb
push
test
sub
or
repnz
sbb
lret
jns
xor
mov
push
rorl
int3
mov
cmp
mov
adc
dec
cltd
or
in
enter
pop
dec
fnstcw
mov
add
sbb
enter
add
mov
mov
ja
out
jns
loop
call
mov
jg
lret
jmp
mov
pop
test
sbb
fadds
movsl
cmpsb
adc
or
push
adc
ja
pushf
xlat
cmp
addr16
add
cmpsb
fst
adc
add
mov
mov
push
fistps
test
sbb
add
pop
xlat
jno
xchg
or
xor
pop
movsb
mov
gs
loop
push
sub
fldcw
inc
mov
bound
xlat
push
mov
dec
out
outsl
fwait
cmc
dec
push
popf
add
xorl
bound
xchg
mov
imul
jae
add
push
xchg
int
pop
test
stos
clc
mov
dec
sahf
xor
pusha
jo
and
pop
pop
mov
or
mov
mov
outsl
xchg
call
mov
and
pop
aam
jge
inc
into
jle
test
fcoml
dec
lret
cmp
adc
into
sub
cltd
push
outsl
clc
ss
sar
jbe
mulb
lret
leave
stos
lods
insl
hlt
icebp
and
ret
jno
inc
dec
int3
mov
jle,pt
pop
jl
inc
das
fnsave
and
movl
xchg
mov
test
cmp
push
mov
mov
adcb
mov
rcll
mov
ss
clc
fildll
sbb
cmp
les
stc
push
and
and
cmp
pushf
cmc
mov
and
cmp
into
in
call
mov
shlb
pop
pop
ret
xchg
mov
inc
cmpsb
out
adc
push
lcall
scas
fs
jnp
mov
in
in
sub
sahf
mov
mov
add
push
fld
xchg
in
insb
push
xchg
push
mov
dec
imul
flds
xchg
adc
stc
idivl
out
lea
inc
xor
int
xchg
mov
sbb
mov
jmp
movsl
xor
test
or
push
fs
das
jae
int
cs
in
sbb
clc
repnz
adcb
popa
repz
sbb
and
lahf
adc
dec
mov
jmp
sahf
out
lahf
dec
or
push
int3
aaa
in
jbe
aad
sub
inc
test
gs
adc
int3
dec
fwait
setbe
fisubs
inc
movsl
pop
fstps
push
cmpsl
jns
jg
mov
fs
sub
mov
loope
mov
cld
cs
adc
and
adc
xchg
je
jns
or
inc
out
shrb
clc
in
out
xchg
addb
xlat
push
clc
sub
sbb
mov
lods
loope
jae
ja
inc
sub
and
pusha
xchg
inc
mov
xchg
out
and
and
js
fnstsw
and
aas
loop
scas
or
test
aad
fists
sub
dec
mov
cmp
pop
aad
cltd
ucomiss
in
jnp
dec
stc
pushf
mov
sbb
mov
push
xchg
int3
clc
leave
ss
pop
sub
inc
fsubrp
inc
dec
out
mov
insl
jne
stc
test
xchg
inc
xchg
sti
push
xchg
pop
and
mov
dec
js
inc
xchg
icebp
xor
cmp
ds
sub
sub
out
jne
pop
adcl
in
xor
out
mov
sbb
mov
aam
test
sub
push
pushf
faddl
cli
xorl
es
hlt
xchg
jge
out
lahf
jl
mov
sbb
stos
push
dec
jmp
or
cmp
dec
mov
lods
movsb
or
scas
fcmove
nop
push
testb
enter
add
dec
repz
jae
push
out
inc
pop
scas
iret
dec
int
jno
out
pop
jb
mov
out
movsb
pop
adc
and
and
aam
mov
enter
lret
sub
lea
push
scas
xchg
cmc
repz
aaa
lock
pop
mov
push
push
inc
push
jb
lea
in
sbb
dec
jae
add
xchg
push
push
mov
test
jge
push
cmp
es
push
repz
lock
loop
pop
fsubl
add
add
xchg
out
inc
jnp
iret
cmp
sbb
test
mov
add
cmp
iret
lods
iret
aaa
stos
inc
aam
fstp
jg
sbb
out
jae
mov
bound
sbb
cmp
pushf
decb
sti
insb
pop
add
cmc
lcall
popa
fmull
movsb
dec
lret
lcall
and
xor
lods
sahf
pusha
icebp
push
mov
ds
adc
in
lods
pop
dec
mov
in
and
jnp
mov
test
xchg
push
insb
pop
xchg
daa
cli
xor
test
into
or
scas
and
fildl
add
cmp
andl
xchg
enter
clc
jne
lock
jge
xor
xchg
mov
pop
ret
lock
lret
pop
aaa
aas
add
mov
repz
mov
push
popf
mov
xor
insl
and
pop
jmp
mov
pop
sbb
dec
enter
push
add
jp
bnd
hlt
pop
push
fistps
push
fwait
stc
mov
dec
mov
insb
jle
fnsave
cli
jl
out
decl
rclb
cltd
jmp
adc
push
jp
inc
adc
adc
lods
lahf
push
mov
test
push
xchg
ja
cmp
and
in
loop
lret
stos
mov
mov
jge
pop
jne
inc
int
jo
mov
fwait
pop
pop
test
adc
psubusw
ret
loop
rorb
push
sub
rorl
cli
push
pop
mov
and
mov
add
pop
push
mov
rcrl
or
stc
xor
mov
cli
fsub
movlps
mov
dec
push
mov
mov
jmp
in
sub
dec
xchg
out
lret
dec
gs
jnp
push
cbtw
fwait
sub
sub
jo
dec
cli
aad
int
icebp
add
outsl
sbb
test
addr16
cli
test
notb
cmp
adc
shl
xchg
test
mov
jne
cmp
sbb
gs
dec
repnz
aad
add
xlat
sub
ss
mov
cmc
mov
daa
and
jmp
lret
cmpsl
imul
jle
repnz
in
mov
dec
xchg
notb
sbb
pop
shlb
push
in
inc
pop
inc
inc
add
xchg
pop
or
mov
in
dec
push
jmp
xchg
daa
mov
in
ret
jnp
pushf
paddusb
push
add
or
mov
outsl
in
das
jge
outsl
mov
mov
lahf
adc
pop
mov
add
outsl
cld
mov
xchg
enter
stos
popa
adc
hlt
and
and
addr16
cmp
movl
stc
shl
lahf
fs
pop
xor
leave
cmp
rclb
and
jg
repnz
mov
pop
ret
inc
imul
rcrb
movsb
stc
jmp
fiaddl
ljmp
rorb
and
mov
stos
stos
cmp
pop
sbb
push
mov
popf
lods
dec
push
xlat
mov
mov
mov
mov
xor
ljmp
or
leave
sbb
jmp
push
leave
sbb
cmp
mov
test
je
arpl
test
cmp
ja
and
mov
cmp
bound
mov
or
adc
loop
cltd
and
push
ror
mov
inc
sub
add
and
cmp
cmp
mov
xchg
pop
cmp
xchg
ret
inc
mov
and
popf
jg
rcrb
popa
incb
stc
push
rcr
ret
dec
push
mov
fsubrl
rolb
divl
dec
push
orb
test
roll
outsb
in
sbb
pop
pop
repz
sti
lods
sti
repnz
roll
bswap
jle
dec
stos
hlt
and
sub
xchg
mov
es
sub
sahf
cmp
lea
cld
pop
mov
sub
push
mov
xchg
movsb
push
repnz
or
rolb
jmp
scas
add
mov
xchg
aas
leave
sar
or
or
push
mov
or
mov
and
shlb
insl
in
out
cmp
lret
cmpsb
push
hlt
in
aas
xchg
pop
lret
pop
pop
pop
sub
sub
add
pop
mov
jge
xchg
inc
jge
sbb
inc
popa
out
and
test
sti
push
sub
and
lret
jle
pop
pop
fiaddl
pop
ljmp
inc
lret
pop
dec
lods
pop
cmpl
fs
outsb
and
fwait
out
shrb
int3
jbe
jbe
scas
negb
xchg
xor
outsb
sbb
es
adc
push
js
andl
ret
in
adc
jp
xchg
addb
iret
add
test
dec
cld
aad
dec
movsb
dec
cmpsl
mov
cmp
sub
rclb
xchg
push
or
and
mov
push
outsl
inc
in
scas
cmp
lret
loopne
mov
adcl
movb
fsubrl
sahf
mull
fwait
adc
fs
pop
fdivs
in
sub
popf
enter
repnz
aaa
or
out
xor
cmpsl
mov
jp
mov
sbb
push
cltd
inc
stc
into
in
movsb
mov
in
cmc
xchg
xor
xorb
mov
fstpl
add
mov
ret
cmp
mov
test
aas
pushf
push
pop
pop
pusha
mov
sahf
testb
xchg
popa
in
fs
mov
or
push
mov
shrl
sub
rep
fcoms
xchg
mov
push
fcmovb
lret
aad
loope
je
inc
dec
fs
mov
jl
adc
pop
out
sbb
mov
or
add
frstor
sti
push
adc
adc
stos
inc
in
add
cli
inc
inc
movsl
mov
daa
mov
jbe
mov
lret
test
adc
fldt
sub
or
inc
jg
insl
movsl
aaa
sbb
shrl
es
js
ret
jbe
imul
adc
shll
fiadds
out
enter
sahf
xchg
sbb
pop
push
push
add
xchg
fmuls
sub
rorb
ror
push
arpl
inc
mov
fbld
push
ret
repz
loop
nop
inc
cltd
fsubrs
mov
jns
inc
into
insl
add
cmp
inc
sbb
rorb
jae
into
mov
jb
adc
adc
scas
loope
lahf
movb
sub
mov
nop
xchg
dec
or
ret
lods
mov
aaa
mov
ret
lods
aas
rcrb
cs
call
mov
jbe
movsb
add
jg
data16
mov
in
aam
mov
test
sbb
loop
arpl
pop
xchg
ljmp
arpl
cwtl
je
lock
xorb
movsb
cmp
into
fnstenv
cmp
add
lcall
adc
mov
xchg
stos
pop
sahf
hlt
xlat
cld
ficompl
inc
pop
in
push
push
mov
lahf
xchg
add
lret
mov
outsb
movsl
push
mov
arpl
push
fbstp
mov
sbb
pop
test
push
outsl
scas
adc
push
adc
push
add
popa
lret
dec
mov
aaa
add
jg
fmul
or
cwtl
or
rclb
shll
gs
and
aas
enter
mov
dec
lahf
inc
data16
adc
mov
cmc
mov
jle
jg
fisubrs
pop
and
sti
dec
mov
jg
iret
jmp
pop
std
cs
ds
inc
push
shll
movsl
fists
mov
mov
cmpsl
sub
pop
in
lods
ds
sbbl
or
xor
push
pop
cmc
mov
mov
daa
das
xchg
mov
inc
sar
mov
daa
mov
jge
or
ljmp
dec
push
orb
xor
sbb
adc
xchg
push
cmp
sub
mov
jo
fstps
in
or
repz
adc
xor
add
mull
ret
mov
add
jbe
fsub
push
xor
and
ficoms
lock
testl
loopne
pop
pushf
mov
fwait
push
xor
push
sbb
jecxz
jge
xlat
mov
mov
dec
mov
inc
inc
out
xchg
jae
jp
cmpsb
iret
adc
mov
pusha
jge
outsb
pop
push
adc
dec
in
sbb
jp
jbe
cmp
push
mov
rcrl
push
ljmp
fisubrs
inc
stos
in
cmpsb
aaa
sti
aaa
push
les
ljmp
pusha
or
pop
es
push
xchg
ret
cmpsb
cwtl
rcrl
test
aad
call
ds
and
mov
movsl
xor
das
sub
fdivrs
mov
sbb
jg
push
cmp
mov
xor
jno
mov
in
shll
mov
lods
testb
out
mov
add
orl
pop
fstl
arpl
or
mov
cmc
pushf
lock
loop
leave
dec
ret
test
jno
insl
inc
xor
mov
loopne
cmp
xchg
xchg
mov
loopne
rorb
cmp
fwait
loope
addb
cmc
lods
fimuls
or
mov
xor
push
je
push
mov
and
ret
jnp
out
mov
lods
add
imul
jb
jbe
mov
xchg
dec
sbb
xor
push
dec
add
andl
mov
pop
inc
fists
popl
mov
push
testb
mov
cmp
cmp
int
imul
push
ja
in
jge
insl
or
iret
cmp
aas
pop
out
mov
xor
mov
stos
int3
lds
bound
lods
push
mov
scas
dec
xchg
imul
jecxz
sbb
dec
dec
xchg
sbb
adc
test
outsb
mov
jbe
or
xchg
mov
pop
dec
mov
pushf
mov
adcb
hlt
xor
pop
mov
out
and
xchg
out
and
sbb
cmp
aaa
push
mov
sub
cltd
test
sbb
and
outsl
popf
clc
adc
ljmp
pop
leave
or
push
fs
lret
and
mov
call
addr16
es
and
jg
sub
mov
xchg
sub
aaa
dec
int3
arpl
jbe
popf
and
lahf
fsubs
ja
fs
mov
mov
mov
in
fs
mov
in
mov
pop
cwtl
lret
mov
push
out
idiv
out
sub
lods
cmpsl
arpl
xor
push
sbb
pop
jae
insb
sbb
push
jmp
sti
mov
ficoml
inc
xlat
sti
mov
rcrl
out
xchg
cmp
nop
shlb
shrl
int
rclb
add
pop
pop
stos
mov
aaa
push
test
jb
push
jecxz
mov
mov
cmc
mov
or
push
out
insb
jle
jecxz
fwait
dec
lods
jmp
call
mov
xchg
mov
push
jge
push
test
data16
je
pop
bound
int3
sbb
xchg
lods
sub
pop
inc
das
les
xchg
jecxz
test
pop
dec
mov
xor
outsb
out
mov
cmpsl
dec
mov
xchg
mov
cmc
and
sahf
fs
cld
test
sub
lahf
sbb
ja
gs
xor
popf
xor
clc
dec
pop
pop
pop
fsubp
stc
pop
push
ret
in
xchg
stos
out
das
outsl
loope
inc
fistps
insb
cmp
loope
cld
jnp
or
xchg
jo
mov
or
xor
xchg
add
add
je
xchg
fstpl
test
clts
repnz
mov
or
xor
pusha
leave
sbb
adc
incb
sub
std
pop
or
pushf
out
sub
cmpsb
sub
aam
pop
xchg
in
int3
or
sarb
jp
push
jo
mov
sti
mov
mov
jmp
adc
cmpsl
adc
roll
inc
pop
jp
mov
add
push
arpl
je
pusha
in
outsb
mov
std
jbe
jecxz
leave
std
sub
and
dec
imul
out
ss
adc
popf
mov
adc
std
xor
push
cmp
insb
mov
ret
jb
pushf
lock
xlat
lahf
rcrl
popf
dec
repnz
and
adc
jno
xchg
push
pop
add
cmp
aad
inc
adc
mov
aam
fs
test
out
mov
mov
mov
pop
test
je
repz
inc
ret
cmp
sub
fisttpl
push
insb
jo
cmp
sub
add
xchg
insb
mov
or
pop
push
pop
stos
sbb
rcll
or
shr
push
std
sub
rcll
dec
mov
mov
mov
in
push
test
loop
xor
jecxz
cs
cmpsb
mov
inc
xor
and
stos
add
xchg
and
pop
inc
jno
push
pushf
mov
loopne
std
xchg
ljmp
ret
dec
dec
out
add
lock
sub
adc
cmp
stc
push
dec
push
mov
int3
mov
jl
adc
xchg
mov
mov
int
xchg
jne
xchg
mov
add
pushl
pop
cmpsl
pop
mov
mov
dec
push
jge
cwtl
sbb
cmp
loope
pop
mov
push
pop
xchg
pop
daa
xchg
xchg
or
pop
xchg
sub
imul
mov
popf
xchg
xor
call
inc
or
lds
sbb
mov
and
fisubrl
data16
fcoml
sti
sarb
sbb
popf
mov
adc
fwait
lcall
push
pusha
cmp
out
mov
cmp
lds
rclb
adc
out
push
sbb
cld
jae
aam
xchg
ds
ja
jle
xor
sbbl
lret
pushf
stc
xchg
adc
mov
ficoms
add
inc
stos
pop
mov
int
ss
and
sbb
fs
push
adc
lock
rol
es
dec
enter
insl
sahf
test
and
cmc
iret
loop
and
adc
movsl
dec
loop
cmpsb
mov
movsb
sbb
xor
or
test
in
ret
xor
or
fldln2
and
les
dec
iret
stos
sub
aas
add
fcmovu
cltd
and
adc
int3
rcrl
pushl
addb
mov
popf
into
dec
cs
popa
and
stos
fdiv
and
filds
sub
adc
ljmp
pop
or
fbstp
jb
mov
les
xchg
in
mov
rcrl
movb
icebp
cmp
ss
mov
push
push
xchg
push
movl
jne
jp
sarl
nop
xchg
cmpl
or
jno
jns
and
in
notl
adc
inc
xchg
mov
into
arpl
jecxz
sub
xchg
in
sbb
add
inc
xor
leave
stos
or
movsl
ficoms
or
insb
push
add
push
andl
aaa
pop
jo
dec
sub
fstps
mov
xchg
mov
loop
pushf
pop
push
sub
or
pushf
js
mov
xchg
inc
dec
pop
movb
lods
cmp
inc
fstpl
fisubrl
call
xor
ud1
add
loope
mov
ds
push
xchg
popa
std
dec
in
cltd
aas
es
push
pop
push
or
pop
sub
scas
mov
jne
adc
cwtl
test
cmp
int
pop
sbb
sub
ljmp
inc
ficoml
test
pushf
notl
popa
das
jmp
jge
add
cli
imul
add
cmp
xorb
das
pushf
jp
and
push
sub
andps
jb
or
add
xchg
jle
scas
xor
les
lea
out
popf
push
ret
loop
dec
adc
jmp
in
xor
jne
adc
repz
jge
jp
mov
mov
jmp
int
jbe
sar
lahf
or
nop
mov
stos
and
pusha
cmp
in
sbb
int
stc
push
or
pop
std
xchg
jbe
mov
mulb
out
cmp
mov
inc
mov
sub
mov
xorl
and
inc
adc
inc
data16
lret
mov
push
xor
xor
pop
aas
jmp
jle
aas
and
out
jp
pop
push
inc
mov
xchg
or
cwtl
push
adc
push
iret
jae
mov
push
lock
jle
outsb
adc
loop
mov
mov
scas
mov
mov
mov
adc
inc
adc
gs
mov
int3
xchg
inc
popa
call
out
push
xchg
sub
push
sub
lods
dec
jp
int
test
cmpsb
xchg
mov
test
cmpsl
push
sbb
lahf
mov
addr16
jo
dec
and
mov
xchg
gs
int3
scas
jb
jb
movsl
bnd
lret
fdivrs
jbe
add
mov
repz
jbe
jnp
stos
dec
or
xchg
cli
aam
scas
cmp
inc
dec
mov
and
sub
add
dec
cmpsb
dec
in
test
lahf
cld
inc
xchg
dec
std
fldcw
and
jecxz
xor
add
je
and
inc
mov
jns
imul
call
jecxz
orl
jb
nop
sbb
popa
shrl
add
jmp
clc
cmc
mov
xor
add
mov
loopne
rclb
sub
test
cld
jge
out
mov
mov
sbb
inc
xchg
and
sub
pushf
stos
xchg
fs
imul
xchg
inc
les
xlat
dec
push
popa
icebp
rcrb
mov
lret
addr16
mov
inc
push
aad
jl
bound
shrl
push
xor
roll
mov
sbb
xor
icebp
cmp
mov
and
rorb
ficomps
fcompl
adc
les
add
xchg
js
cmp
xorl
je
dec
aam
daa
je
push
ficoms
adc
pop
fists
jmp
push
div
testb
mov
mov
mov
lret
push
sbb
jae
sahf
and
mov
xchg
stos
sbb
adc
movsb
xchg
pop
cmp
jle
lods
mov
sub
push
mov
idivb
pop
mov
loop
dec
jecxz
push
mov
or
jne
clc
xchg
mov
mov
ja
fwait
xchg
rclb
push
std
add
mov
scas
int3
aas
push
ja
in
aaa
ds
rorl
add
sarl
sti
cltd
mov
or
adc
and
cwtl
pop
loopne
mov
fwait
push
out
lea
lret
jg
sarl
pop
mov
dec
ja
dec
xor
cli
loope
jl
lods
and
hlt
stos
mov
test
jecxz
dec
pusha
enter
dec
or
xchg
leave
push
sarb
cmp
sub
fmuls
or
mov
add
icebp
test
cmp
or
aam
inc
dec
addb
add
push
cmc
or
stc
test
inc
aas
pop
adc
movsl
sbb
nop
xlat
fdivrs
in
in
loop
enter
dec
mov
mov
clc
and
test
dec
ret
roll
loope
cmp
push
and
dec
cmpb
xchg
cmc
sti
stos
push
inc
and
sbb
outsl
loop
xor
outsb
shl
mov
pop
jo
jmp
or
cmp
fidivrl
fwait
sub
pop
mov
divl
inc
fstpt
rcr
cmp
iret
inc
lret
pushf
sub
xor
jmp
xor
push
cmp
mov
and
cld
into
mov
add
adc
xlat
cwtl
dec
inc
and
jns
sub
add
cmp
ja
xchg
adc
in
iret
cmp
add
fstps
lret
imul
mov
sbb
es
mov
insb
rclb
cld
insb
outsb
in
mov
jge
inc
xchg
rcl
push
or
call
fiaddl
mov
mov
xlat
fmuls
dec
jbe
or
divl
cltd
xchg
pop
sarb
jb
jnp
inc
lods
adc
outsb
and
ret
mov
jne
repnz
testl
push
cmc
xchg
mov
dec
jns
or
test
cmp
and
cmp
fcmovnbe
neg
add
inc
lods
out
repnz
pop
cwtl
cmp
bound
insb
xchg
dec
xor
into
test
push
rol
mov
adc
iret
clc
mov
test
lahf
outsb
bound
pop
test
sbbl
xor
mov
inc
push
jbe
enter
shll
xchg
mov
repz
movsb
ds
jo
push
jge
inc
xor
cmp
xorl
cld
and
lods
push
in
mov
out
sub
cwtl
mov
ljmp
lret
dec
shll
xchg
and
outsb
adc
mov
shrl
push
jbe
pop
inc
mov
addl
test
inc
or
loope,pn
mov
fsubrs
inc
jl
andb
add
inc
mov
or
and
lahf
aas
fistps
int
aas
inc
xlat
fstl
lret
inc
js
adc
mov
lahf
pop
mov
sbb
loop
add
ljmp
add
cltd
pop
sub
cmp
mov
inc
cmp
sub
addl
icebp
sub
loope
fldenv
adc
xlat
inc
mov
dec
cmpsb
retw
in
adc
jge
sbb
lret
lea
pusha
jl
fcompl
fidivrl
add
xchg
xor
mov
mov
cmp
pop
scas
repnz
fdivs
adc
jg
inc
push
cmp
xlat
std
pop
aaa
push
pop
cmp
add
mov
ljmp
loope
pop
push
sbb
or
movsb
mov
or
pusha
jns
adc
int3
pop
jmp
insb
adc
mov
cwtl
lods
and
push
adc
pop
fistl
push
mov
rclb
out
iret
es
dec
sub
cmpsl
sub
in
jge
mov
mov
out
cmp
cs
add
lods
push
pop
sub
iret
movzbl
jnp
das
shrb
jno
scas
mov
lcall
xchg
loop
sub
insl
filds
sub
fmull
std
sub
int3
jg
dec
and
xlat
mov
add
lods
pop
ds
and
jb
adc
mov
rorb
stc
fistps
into
in
pop
xor
repz
push
and
mov
xchg
fisubs
clc
cmp
or
dec
cltd
xchg
pop
aam
std
testl
fdivrl
mov
adcl
dec
aaa
xchg
gs
mov
cwtl
dec
dec
mov
xchg
jo
xor
pop
and
nop
push
mov
cld
enter
in
les
cmc
loop
mov
add
iret
jns
cltd
lret
sbb
xor
xlat
pop
mov
push
push
mov
outsb
add
fs
mov
dec
dec
std
scas
notb
and
inc
imul
call
pop
or
xchg
arpl
and
mov
lcall
test
push
jnp
lret
or
loopne
sub
mov
stos
push
mov
repz
addr16
xor
outsl
or
dec
out
mov
fldl
jp
gs
mov
sbb
jecxz
aas
into
mov
cltd
xor
adc
cmc
cwtl
mov
out
adc
cmpsl
leave
mov
lods
sarb
cmp
xchg
es
je
pop
bound
inc
sbb
jb
jg
imul
adc
popf
sqrtps
cmp
loop
inc
lret
or
or
cmpsl
push
jg
mov
cmpsb
scas
test
test
sub
es
jns
lock
mov
ds
and
inc
mov
cmpsb
mov
sbb
cld
out
add
fucom
test
aaa
dec
jnp
stos
insl
jmp
or
loopne
aas
sbbl
sub
notb
testl
mov
cltd
push
xchg
stos
loope
mov
cmp
dec
push
shl
mov
mov
pop
ljmp
sbb
fnstenv
repz
test
sbb
or
mov
xorl
mov
ficompl
push
psllw
fldcw
fwait
mov
mov
mov
fwait
mov
es
pop
or
pushf
ret
xor
sub
fsts
cmp
jg
scas
hlt
mov
dec
fsubl
and
push
xchg
xchg
mov
shlb
dec
mov
jl
push
lea
jp
loopne
cld
mov
shll
adc
push
cmp
jnp
jne
outsb
out
push
cmp
xor
mov
xchg
push
mov
cli
out
and
jmp
adc
add
xor
pop
mov
push
jne
jle
pop
fnstenv
mov
stc
push
push
or
test
sahf
inc
imul
lret
mov
xabort
loopne
inc
movsl
xor
cmp
xchg
testb
mov
push
push
out
push
or
pushf
xchg
pop
imul
push
sub
mov
stos
jp
lahf
mov
les
icebp
aaa
fbstp
push
xor
pop
xor
ret
fcomp
sti
inc
rolb
cltd
call
jnp
xor
ss
aas
mov
mov
or
push
pushf
pop
mov
dec
enter
dec
mov
xor
imul
mov
jae
pop
sbb
dec
sbb
cmp
push
insb
or
test
scas
sbb
inc
push
gs
jae
gs
outsl
xor
cltd
loopne
adc
xchg
and
dec
cld
adc
adc
mov
mov
pop
xlat
enter
rcl
cmovle
mov
call
pop
adc
shlb
push
cmp
xor
cmpsl
add
pusha
xchg
ret
cmp
or
addr16
dec
aam
cmp
aad
mov
cld
mov
push
cmp
test
je
ljmp
mov
adc
push
mov
xchg
mov
inc
rclb
mov
je
loopne
add
mov
jp
movsl
sbb
icebp
les
clc
lcall
mov
jno
push
adc
adc
mov
mov
cwtl
cli
mov
aas
fcom
sbb
hlt
das
nop
push
fistpl
jne
or
lods
pop
movsb
mov
fucomi
mov
stos
cmp
jns
outsl
cmp
sub
in
out
mov
enter
cld
mov
jge
inc
jp
push
pushf
jecxz
jmp
bound
inc
sahf
aaa
repz
cmc
test
jle
cmp
dec
or
mov
loopne
sub
ljmp
cmp
hlt
sti
aas
fldt
adc
and
jecxz
push
xchg
lret
stc
pop
add
jbe
enter
cltd
stos
ljmp
add
push
sub
out
test
aam
lods
idivb
jecxz
pop
jbe
fidivrl
jl
movsl
lods
mov
adc
jg
fbld
cmp
stos
repnz
sbb
and
inc
sbb
lret
jmp
jns
clc
rcrb
pop
fnstcw
movsl
fwait
sbb
push
sbb
cmpsl
int3
cmp
push
push
mov
in
inc
data16
out
sub
cltd
dec
mov
lret
pop
and
fsub
lods
cwtl
cs
sbb
andl
push
aad
aas
mov
and
outsl
test
fldcw
adc
pop
inc
jmp
push
lret
aad
inc
dec
sahf
jmp
lret
xor
clc
into
xlat
in
mov
imul
push
mov
inc
xor
mov
mov
jge
xchg
jmp
aam
imul
movq
test
lods
mov
mov
rcrb
sbb
cli
mov
sub
andb
pop
and
bound
lods
arpl
inc
jecxz
pusha
gs
gs
mov
adc
out
xor
lock
inc
adc
in
std
lcall
int
lcall
fimuls
lahf
fmull
sbb
popf
sbb
mov
mov
out
repz
mov
add
mov
or
cmpsb
addr16
mov
adc
xchg
dec
push
cmp
dec
loope
push
ja
pop
jmp
repnz
add
in
out
jl
mov
pop
push
dec
addr16
sub
dec
inc
out
sbb
sbb
outsb
xchg
xor
lds
pop
inc
xor
mov
and
inc
add
daa
stos
dec
std
mov
rol
xchg
cld
aam
sbb
clc
jns
bt
in
into
imul
or
mov
dec
xor
aaa
loopne
pop
sbb
lds
gs
mov
sub
bound
aam
int3
cmp
push
js
movb
int
das
sbb
pop
imul
test
add
je
mov
push
in
lea
push
jo
push
call
repz
jmp
inc
leave
imul
shll
push
leave
xchg
mov
not
mov
push
xor
xchg
mov
and
add
imul
lds
dec
push
int3
cmp
nop
mov
enter
test
bound
lods
jp
sbb
and
pop
sub
shlb
and
sub
mov
int
cs
pop
add
mov
xor
push
mov
test
adc
mov
pop
aas
ljmp
xor
inc
and
insl
cmc
aas
cmc
rcll
inc
sub
inc
out
repz
repnz
pop
mov
lods
ljmp
mov
mov
addr16
inc
lret
int3
inc
pop
sbb
cld
movsb
mov
mov
int3
dec
add
and
ja
pop
push
mov
and
dec
and
or
adc
inc
daa
and
std
push
mov
mov
jno
ficoms
adc
lods
inc
xor
sbb
out
and
mov
fidivs
ss
xorb
xlat
es
aad
je
rorb
sub
movsb
aad
or
inc
cld
mov
jl
sahf
xchg
cmpsl
pop
std
int
lahf
arpl
cli
nop
cmp
call
iret
jg
in
cmp
into
stc
jns
sub
jge
lods
jp
sbbb
jp
push
sub
add
xor
imulb
sbb
aas
xchg
and
xchg
cli
jbe
mov
das
les
test
xchg
aaa
out
in
push
aas
in
fnstenv
movsb
rcll
cmp
cmp
test
test
xchg
inc
cmpsl
xchg
jb
dec
subb
scas
sbb
sbb
pusha
orb
arpl
sti
fisttpll
push
xchg
mov
out
hlt
mov
mov
fcompl
push
dec
cmovg
int
sbb
test
fdiv
xor
mov
xchg
repz
mov
xchg
lea
inc
mov
daa
popa
mov
stc
shl
cmpsb
jbe
adc
push
int3
fs
or
push
add
lods
test
mov
bound
mov
stc
repnz
movsb
xchg
fidivs
add
adc
cmp
push
lret
insl
dec
sub
inc
lock
push
inc
aaa
in
inc
addr16
pop
or
in
fadd
insb
mov
pop
mov
scas
xchg
inc
stc
fimull
daa
jg
inc
shrl
and
mov
sub
test
push
xlat
dec
mov
xchg
lcall
imul
daa
sub
call
mov
mov
mov
scas
inc
xchg
out
cmp
pushf
fdivs
icebp
ja
je
popa
popa
les
inc
push
popa
loopne
push
gs
inc
in
popa
arpl
mov
int3
cmp
pop
cmp
lret
jnp
ds
pop
filds
and
mov
loopne
inc
dec
mov
mov
jb
mov
mov
add
cwtl
cmpsl
repnz
out
outsb
add
lahf
negl
fistpll
out
pop
mov
pop
in
outsb
sbb
and
pop
sti
insb
dec
repnz
stos
lret
dec
mov
daa
or
das
sbb
pop
dec
into
cwtl
rorb
and
push
add
shrb
pop
push
in
into
mov
hlt
scas
lret
ret
cmpsb
and
jl
hlt
lods
jg
pop
pop
mov
mov
mov
fbstp
js
cmp
add
push
aad
fistpl
addr16
and
mov
data16
jge
subl
leave
sub
pop
out
push
stos
or
std
sbb
cld
repnz
add
movsl
movsl
mov
lods
xchg
cmp
and
sub
push
sahf
sahf
inc
les
lock
add
jg
dec
movsl
mov
sub
xor
pop
xchg
jp
int
push
mov
lret
incb
imul
pop
sbb
dec
adc
fdivrs
cmc
mov
data16
mov
push
out
pop
mov
dec
icebp
sbb
into
mov
nop
or
mov
pusha
fsts
test
inc
or
or
dec
sub
nop
mov
xchg
pop
or
imul
cs
jmp
iret
insb
adc
jne
jg
sub
xor
mov
out
aas
fmull
lds
rolb
cld
repz
ja
cmp
pop
xor
shlb
fxch
stc
int3
fidivrl
sar
push
adc
bound
and
dec
mov
push
and
leave
jge
fiaddl
out
lret
or
add
mov
jne
and
jg
ret
or
ret
in
lock
repz
das
lret
adc
jl
cmp
test
dec
dec
les
pop
mov
jno
stc
cwtl
adc
aaa
outsb
dec
dec
inc
movsl
cmpsl
jno
mov
repz
mov
fcmovbe
or
imul
inc
jo
popa
inc
jo
nop
rcll
fwait
xor
sti
mov
bswap
clc
in
sub
fs
adc
ja
jno,pn
ficoms
mov
and
add
xor
imul
mov
mov
dec
aad
sbb
stos
data16
or
or
xor
jge
fidivs
aam
testl
das
stos
fwait
and
pop
cs
xor
and
or
subb
stos
cmpsl
adc
movsl
mov
aas
sahf
dec
das
xchg
outsl
jmp
fisubl
pop
push
addr16
pop
mov
clc
mov
cmc
cs
subl
lock
add
cmp
push
sbb
cs
pop
or
and
test
imul
xchg
ret
jne
pop
push
push
mov
out
mov
fcmovnb
shlb
fisubrs
ljmp
push
xchg
inc
mov
je
jge
lods
sbb
mov
jbe
cmp
test
ret
test
cld
dec
test
cwtl
xchg
fimuls
jne
test
adc
cmpsl
xor
pushf
paddq
aas
pop
call
rcl
ds
xchg
xchg
and
movsl
repz
aam
inc
inc
push
sub
in
fs
jl
shlb
or
sub
sbbb
movhps
cwtl
adc
int3
xor
es
call
or
mov
cmp
fcompl
inc
and
lahf
outsl
mov
mov
xchg
pop
push
das
dec
push
sarl
xchg
bound
loop
jno
call
rclb
aam
bound
test
loop
push
adc
push
lods
loop
push
loop
lea
shll
aas
push
inc
pushf
sbb
shrl
fwait
inc
jnp
xor
ljmp
sbb
gs
int3
test
arpl
bound
mov
adc
arpl
dec
pop
dec
push
mov
push
lahf
push
push
cwtl
inc
lods
shl
pop
sub
ja
sti
push
mov
scas
insl
nop
sti
call
adc
rcrb
fmull
add
jg
and
ret
jle
outsl
daa
lret
pop
fisttpl
jbe
fidivl
mov
mov
push
shll
jg
cli
jecxz
je
test
outsl
adc
inc
and
dec
jnp
stos
adc
mov
and
enter
xlat
pusha
adc
adc
add
xlat
orb
fadds
pop
adc
inc
sbb
cwtl
in
push
mov
aam
xchg
test
sbb
adcb
outsl
lods
xchg
aam
adc
and
loopne
fwait
dec
bound
push
int
in
cmp
into
pop
adc
addr16
cmp
mov
and
push
ror
les
xchg
and
mov
pop
jo
iret
enter
mov
xor
dec
imul
dec
inc
add
adc
test
pop
sbb
lods
xchg
inc
pop
inc
adc
jl
iret
mov
push
xchg
cmc
movsb
fiadds
sub
cmp
sbb
push
mov
sub
push
sub
xor
in
jnp
movsb
leave
xor
xor
cmp
sti
insl
test
mov
test
sub
out
jbe
mov
repnz
fwait
aam
push
add
loope
sub
cmp
xchg
insl
cmovae
test
test
push
inc
negb
mov
aas
nop
xor
push
notl
ret
and
fildll
add
aam
and
imul
dec
dec
lea
or
outsl
lret
pop
dec
or
xchg
xor
push
lcall
cmpsl
and
aas
loop
cmc
cmpsb
sub
pop
jmp
adc
arpl
mov
std
pop
push
outsb
sti
push
jmp
xlat
push
and
xchg
test
add
lods
fstps
pop
adc
data16
dec
mov
push
adc
sbb
lret
xchg
mov
jmp
aaa
cmp
in
mov
ja
dec
lods
adc
mov
inc
jl
scas
mov
xchg
aaa
dec
sbb
xchg
sbb
ss
fistpll
dec
subl
stos
outsl
jne
xchg
sbb
mov
mov
pop
pop
push
mov
fldt
scas
pop
and
lods
outsl
fbstp
test
jle
iret
cmp
jnp
mov
xchg
xchg
lock
cmc
lods
shl
in
pop
ret
cwtl
ret
aam
out
ss
rcrb
daa
jp
ret
loope
xor
mov
adc
pop
jnp
add
jecxz
loopne
cltd
enter
fsubrs
jne
xchg
xchg
xor
data16
lock
popf
rorl
test
frstor
into
mov
imull
jg
inc
ja
dec
cmp
fldt
ret
pusha
imul
in
loopne
sub
pop
popl
adc
and
and
jns
dec
cmp
push
int3
jnp
jg
repz
cltd
jo
cs
or
sbb
gs
dec
and
daa
in
xchg
adc
jo
mov
and
mov
adc
jno
add
mov
test
fstpl
lods
fwait
cmp
add
add
sub
int
jb
or
mov
sbb
orl
ljmp
mov
jmp
in
cmpsl
mov
imul
cmc
sbb
into
fisttps
lock
fs
cld
jne
mov
imul
lret
inc
iret
fnstsw
les
mov
test
inc
cmp
enter
rcll
mov
push
jp
pushf
test
dec
pop
add
jg
out
test
ret
jmp
add
test
out
movsb
in
jmp
jle
mov
push
xor
rol
mov
sub
push
add
pop
insl
test
jns
mov
inc
mov
test
mov
arpl
xchg
mov
mov
pop
mov
out
xor
fcmovu
in
mov
mov
cmp
xchg
scas
hlt
in
xchg
xchg
cmpsb
pop
gs
pop
jne
dec
pushl
adc
xchg
mov
push
stc
stos
inc
and
aad
jns
dec
sub
push
pop
cltd
cmpsl
mov
cld
adc
mov
mov
stos
mov
out
pop
cs
into
jecxz
or
notb
in
push
mov
dec
lret
clc
xlat
sub
add
repz
or
cmp
cmp
jle
movsb
cwtl
pushf
xchg
mov
push
insl
les
lret
mov
pop
mov
mov
mov
jg
mov
lret
sti
lock
mov
scas
mov
in
out
nop
xchg
or
popa
lock
dec
mov
lock
andl
push
test
mov
stos
push
lcall
mov
std
pop
aad
cmp
shrb
sahf
cld
adc
in
mov
mov
aaa
popa
icebp
mov
pop
inc
mov
mov
lcall
adc
movsb
arpl
add
int
sbb
xor
fnstcw
dec
and
dec
pushf
dec
push
sub
adc
out
and
cmp
out
push
mov
fimull
in
lret
mov
inc
hlt
sub
inc
sbb
ret
pop
jno
clc
test
es
test
jl
sbb
lods
or
push
insb
adc
and
repnz
or
fs
imul
mov
xorb
les
in
rcrl
cmpl
jge
leave
and
mov
inc
cmp
loop
lds
and
push
inc
xor
inc
mov
sub
cltd
mov
adc
mov
mov
rcrl
clc
lret
mov
ljmp
popf
lahf
stc
out
mov
pop
cltd
in
jo
cmp
inc
insb
arpl
xor
out
hlt
mov
xlat
jno
cmpsl
pop
or
jle
or
mov
or
add
adc
dec
cmpsb
push
pop
jp
test
xor
fistpll
fsub
push
cmp
mov
aam
sbb
es
in
mov
lret
pop
rorb
jmp
adcl
xchg
fildll
jge
or
mov
aad
loop
push
cmc
or
test
mov
cltd
fs
xor
jnp
mov
std
lock
mov
xchg
sbb
clc
inc
cmp
jecxz
mov
mov
sbb
sbb
faddl
adc
mov
mov
lods
fs
inc
mov
sarb
adc
jnp
lock
push
jns
push
fwait
popa
cmp
dec
leave
cs
add
les
pop
lahf
sti
mulb
push
sub
outsb
adc
push
xchg
mov
sub
rcll
cmpl
adc
enter
push
pop
mov
and
cmp
and
movsl
xchg
mov
ret
lahf
jb
cmp
mov
negl
jecxz
xlat
adcb
xchg
in
imulb
lods
mov
adc
insl
jno
or
and
fwait
mov
subl
jp
loop
mov
dec
pop
add
subb
movsl
aam
sbb
mov
cwtl
pop
mov
push
fwait
cmp
dec
mov
je
inc
ja
aaa
lock
dec
push
addr16
les
fsub
lods
pop
jne
fwait
imul
cmp
pop
inc
imul
sub
mov
inc
out
gs
fsubrl
pop
adc
dec
hlt
rcrb
pop
inc
aas
rolb
es
andb
popf
repz
inc
rcrl
mov
xchg
mov
popa
repz
and
orb
xchg
mov
jmp
jge
js
or
les
dec
mov
xchg
jmp
cmp
mov
popa
dec
clc
aam
mov
dec
xchg
es
ret
in
sub
add
fisubrl
mov
xchg
insb
outsl
jp
mov
std
mov
or
cwtl
sbb
leave
mull
push
xchg
ret
fs
cmp
adcl
pop
inc
jp
retw
jno
xor
scas
adc
cltd
mov
test
xchg
add
push
or
rorl
fnstsw
push
jb
xchg
nop
outsb
add
xor
mov
outsb
leave
lods
jae
jge
pop
mov
pop
dec
sub
push
clc
add
imul
xchg
and
xor
pop
out
rorb
and
ror
movsb
dec
and
pop
pop
sbb
fadd
dec
pusha
pop
push
mov
popf
push
cmc
or
xchg
cmp
in
dec
iret
mov
mov
mov
test
popa
mov
pop
dec
out
cmp
flds
inc
lea
outsb
push
and
mov
pusha
mov
lods
shlb
rcrl
shlb
add
push
xor
pop
or
stc
add
leave
mov
xchg
sub
sbb
cmpsl
xor
and
lds
out
test
cli
cmp
cmc
mov
xorl
andb
adc
stos
in
and
iret
mov
mov
cmp
repz
lock
rcll
push
cmp
faddp
icebp
pop
fwait
addr16
aaa
push
xchg
lds
xchg
cmp
mov
das
fs
pop
push
mov
jnp
movsl
sahf
adc
ficompl
outsl
pop
push
jo
jecxz
cmc
shrb
push
cmc
inc
xchg
cmp
or
out
and
lds
and
xchg
sub
insl
popf
testb
stc
das
or
mov
push
rorb
stc
mov
arpl
jb
fwait
mov
fstpl
adc
push
add
int
push
out
dec
stos
arpl
mov
inc
sub
cld
sbb
dec
in
mov
les
push
rcll
jg
mov
les
sub
pop
mov
pop
icebp
or
int
mov
scas
gs
fisttpll
clc
xlat
ret
push
out
inc
negl
and
cmpsl
dec
out
push
sub
cmpsb
mov
fidivrs
and
lods
lock
int3
adc
stos
sbb
scas
cmc
dec
cltd
mov
call
repz
add
fbld
out
add
nop
xor
push
icebp
pop
sub
pop
cmp
popa
jnp
stos
pop
jle
push
fcoms
or
push
xor
xchg
outsl
push
jl
stos
das
cwtl
clc
cmpsl
mov
clc
test
or
je
jl
adc
sbb
sbb
adc
cmp
add
test
js
and
adc
or
sti
mov
adc
xor
sub
mov
fwait
jae
pop
sahf
or
popf
in
js
or
sbb
loope
aaa
test
mov
add
or
scas
cmp
mov
dec
pop
imul
mov
inc
aaa
rcrl
pop
adc
sub
adc
push
push
leave
fstpl
hlt
jno
add
jnp
ret
fidivl
jp
outsb
adc
lds
jnp
pop
push
adc
ja
lods
mov
or
pushf
push
sbb
dec
sub
hlt
scas
arpl
lahf
jl
scas
vunpcklpd
test
jb
mov
xor
orl
push
pop
xchg
cmp
mov
pop
mov
lods
scas
cmp
xchg
inc
dec
mov
mov
add
popa
sarl
mov
sbb
inc
mov
scas
mov
mov
mov
or
inc
and
or
adc
out
gs
ss
leave
ljmp
add
lret
into
lret
out
xor
jo
and
repz
sbb
popf
test
mov
repz
aaa
adc
push
outsb
pop
test
mov
shrl
lods
add
jmp
movsl
pop
xchg
cmp
aaa
sbb
jo
aaa
cmpsl
test
push
jo
jo
into
sbb
add
jb
pushf
popa
push
popf
mov
mov
cli
push
mov
and
cmp
pop
add
pushl
cmp
out
or
stc
dec
testl
inc
repz
int
mov
xchg
push
xchg
lcall
scas
mov
and
dec
inc
mov
addr16
push
add
jg
push
sbb
test
loop
imull
push
clc
jge
jae
dec
rcll
adc
imul
insb
push
mov
incl
and
dec
jle
jae
jmp
sub
jno
add
xchg
int
insl
sub
xchg
or
cmpsl
sti
jns
outsb
pop
push
fnsave
jnp
adc
jbe
jnp,pt
xchg
sbb
shlb
dec
pop
add
and
jbe
in
iret
cmp
push
xor
pusha
fisttps
dec
fs
nop
emms
and
dec
sbb
xor
adc
inc
jne
testb
mov
dec
enter
inc
insb
loop
or
adc
pop
lahf
pop
add
repz
je
and
call
repnz
pusha
aaa
push
mov
xor
pop
fcomps
pop
pop
or
mov
push
pop
lds
inc
jbe
mov
wbinvd
dec
fists
xor
jp
test
out
mov
add
mov
inc
inc
mov
or
lcall
push
mov
ja
lods
sti
pop
fldcw
cmp
jno
inc
lea
loopne
jb
dec
jbe
adc
out
popf
icebp
cmp
mov
push
ret
lds
dec
sbb
movsb
lds
and
or
fwait
lret
test
push
xchg
dec
test
jmp
add
xchg
iret
xchg
cmp
addr16
iret
cmp
gs
sarb
pop
jbe
int
pop
lods
rcll
cmp
cmp
mov
scas
pop
in
inc
jg
scas
repnz
or
adc
sbb
ljmp
int3
jle
jo
pop
xchg
add
mov
xorb
icebp
out
jl
pop
adc
lds
add
pop
ret
mov
sub
clc
add
cmp
mov
cs
cmp
mov
andl
iret
repnz
or
jmp
xchg
xchg
sbb
nop
aad
pop
arpl
movsl
adc
js,pt
dec
fcmovb
shrl
push
fwait
cld
sbb
cs
ficompl
imul
inc
nop
repnz
sbb
lods
inc
jbe
aad
std
jns
inc
push
xor
jmp
pop
shll
lods
daa
out
cmp
ljmp
fdivrs
mov
loop
push
mov
mov
cvtpi2ps
and
sbb
in
jg
cltd
add
or
jns
xor
fs
rorl
pop
mov
push
mov
cmpsb
xor
or
cmp
dec
pop
add
test
clc
push
push
std
fsubrl
xchg
xor
xchg
aad
fsub
pop
jo
test
dec
shrl
addb
sbb
jmp
fnstenv
dec
movsl
push
out
icebp
push
cli
mov
add
jb
out
xchg
adc
or
stos
es
rorb
push
push
fwait
xchg
sbb
dec
jo
ret
add
pop
jmp
jo
cmpsb
call
mov
sti
add
push
addr16
inc
mov
pop
xchg
popa
inc
mov
cmp
sarb
xchg
cmc
repz
mov
cli
das
into
xchg
shlb
pushl
mov
cmp
movsl
adc
arpl
cmpsb
mov
lcall
in
jle
jg
stc
inc
sub
xor
pop
mov
stc
adc
jb
add
pop
lcall
dec
mov
sarb
jmp
inc
out
jb
ljmp
cltd
cmc
int3
rcrb
xchg
jbe
sbb
or
icebp
xchg
xchg
inc
es
andl
mov
out
out
mov
fbld
scas
cmp
imul
and
jne
data16
and
out
ret
dec
pop
data16
pop
inc
cld
daa
ja
pop
cmp
ja
out
ss
aas
movsl
je
add
jno
sub
mov
cmp
adc
cmp
lods
into
adc
scas
mov
js
and
test
jle
loop
movsb
cmc
nop
rolb
mov
cmpsb
sub
jo
sub
neg
sub
lods
lcall
add
fadd
mov
repz
xchg
mov
loop
repnz
and
pop
adc
fstpl
outsb
mov
push
inc
repz
sbb
sbb
es
test
in
das
inc
outsl
pop
jmp
loope
int3
test
iret
popa
pusha
cwtl
adc
xchg
xchg
xor
mov
mov
mov
dec
cwtl
ret
pop
fldt
data16
es
js
out
daa
or
arpl
adc
pusha
shrb
or
mov
cld
rclb
loopne
loope
and
mov
jge
out
pushf
in
in
in
push
int3
sbb
test
pop
push
jmp
pop
lcall
mov
push
mov
sub
mov
fnstcw
mov
mov
xor
or
sub
out
test
sti
push
dec
inc
fadd
sbb
fs
aas
mov
icebp
cmp
mov
mov
sub
cmp
lods
inc
pop
adc
aaa
adcl
sbb
rorb
and
sbb
js
mov
xchg
mov
xor
xchg
and
push
js
mov
les
shlb
divb
cmp
loopne
popa
jle
cmpsl
arpl
inc
adc
sub
adc
stos
ds
xchg
test
jne
pop
sbb
pushf
nop
aas
lock
push
xchg
adc
cmp
jl
mov
and
jmp
addr16
xchg
push
inc
and
xchg
inc
jbe
or
cli
pop
add
add
xor
lret
cltd
pop
mov
xchg
gs
imul
pop
imull
mov
pop
lods
push
and
cmp
dec
pop
inc
fsubrp
add
sti
push
rcrl
lock
lcall
push
mov
mov
dec
sub
lcall
cmp
lods
aad
dec
fs
je
call
in
pop
lds
mov
faddl
adc
test
lahf
outsl
mov
scas
es
and
arpl
dec
repnz
lods
and
es
stc
gs
bound
fmuls
xor
outsb
or
clc
add
es
rorb
mov
pop
es
xor
sbb
std
inc
and
in
add
pop
andb
push
test
inc
std
mov
pushf
sbb
cmp
jb
cltd
fsub
jecxz
or
pushf
jne
xor
or
adc
fld1
sbb
enter
movl
pop
mov
cmc
pop
push
and
push
cli
lods
js
and
jnp
xor
jns
mov
les
jp
adc
push
in
imul
imul
push
jnp
lods
imul
roll
loop
mov
hlt
pop
mov
aas
mov
imul
repz
in
cmp
movsb
mov
push
mov
je
pop
into
repz
pop
ljmp
pop
nop
pushf
ss
imul
popf
lock
popf
aas
sbb
jno
std
lods
cwtl
xor
cmpsl
sarl
enter
mov
sub
pop
inc
sbb
cli
push
xor
mov
push
sub
mov
ret
xchg
push
out
cwtl
mov
push
and
adc
mov
lahf
sahf
enter
aas
lret
aam
push
sub
imul
push
or
push
je
cmp
fidivrs
sbb
xor
jecxz
push
add
sub
inc
es
lahf
jle
xor
cld
mov
sub
imul
push
push
int
movsl
dec
pusha
cmp
je
or
xor
push
push
mov
push
lret
int
fwait
test
cmp
fwait
loopne
add
mov
sbb
inc
lea
jl
sbb
pop
xor
or
mov
lret
xchg
xlat
stos
stos
sti
cmp
shl
js
pushf
cmp
mov
mov
aas
push
arpl
pop
or
cltd
fnstsw
fcoms
adc
popf
xchg
push
stos
insb
shlb
lods
and
mov
ja
jl
test
jmp
stc
lds
int
mov
addr16
aad
fidivrl
push
push
adc
cmpsb
dec
mov
dec
jmp
add
or
ja
negl
push
push
or
ret
pop
sbbl
mov
loope
stos
dec
adc
lods
push
insl
fstp
mov
push
adc
add
imul
rcrl
xlat
sbb
out
int3
adc
add
repz
test
xor
sub
pop
mov
sub
mov
loop
add
pop
cmp
call
jae
xlat
jne
or
out
pop
hlt
in
jmp
js
dec
repnz
cltd
jae
jb
and
lods
jne
subb
mov
fwait
mull
icebp
aaa
subb
jae
push
adc
stc
scas
jle
dec
push
jle
out
xchg
sub
or
push
add
fs
inc
dec
jo
repz
pop
adc
xor
pop
testb
mov
jecxz
push
jae
fldenv
sub
aad
gs
enter
les
add
xchg
in
addr16
adc
lods
out
sub
jp
adc
inc
push
cmp
xchg
mov
gs
aaa
imul
sub
inc
aad
jmp
adc
cs
ja
icebp
pop
pop
pop
fwait
stos
sub
mov
out
in
sub
xchg
dec
adc
push
xor
fiadds
mov
aaa
push
xchg
shll
xor
and
dec
mov
aam
sub
mull
mov
flds
cmp
inc
hlt
sub
dec
inc
data16
dec
mull
push
or
int3
scas
xchg
fadds
and
loopne
xor
mov
sbbb
adc
inc
popf
xchg
rcl
xchg
sbb
adc
cld
push
cld
adc
cmc
add
or
cmp
and
add
in
jb
mov
subl
sahf
mov
imul
inc
mov
mov
sub
jnp
jns
cmp
in
sbb
dec
std
or
or
xorb
xchg
xor
jp
arpl
cmc
outsb
ficoms
mov
addr16
push
in
xor
mov
cld
pop
pop
add
int
aam
xchg
mov
in
push
pop
cwtl
movsl
or
das
out
mov
call
jmp
jecxz
cmp
rep
js
lahf
out
sarb
sub
lea
inc
loope
pop
mov
aas
shl
cmp
inc
imul
insl
jmp
push
cmp
imulb
ja
into
test
cmp
mov
outsb
mov
inc
pop
lret
ret
lcall
es
int3
popa
sti
push
mov
xor
lret
cmp
pop
push
pop
lods
lds
in
push
dec
cmpsl
mov
pop
xchg
push
aad
icebp
mov
and
not
pop
jb
lock
and
repz
mov
daa
bound
insl
mov
dec
inc
pushf
test
jmp
xchg
enter
xchg
imul
iret
xchg
xor
or
fcmove
mov
mov
jne
pop
sub
fwait
xchg
lret
cwtl
push
cwtl
xchg
lods
sub
pop
sub
daa
jle
popl
not
or
jne
add
pop
sbb
mov
dec
mov
negl
call
or
in
outsl
mov
xor
cli
stc
or
push
mov
sbb
je
mov
cmp
or
lods
ds
cmp
or
and
jp
lret
sbb
sbb
daa
lahf
imul
mov
pop
push
mov
shrb
jae
mov
adc
ffreep
rorb
jecxz
nop
cmp
jmp
xchg
pop
lahf
lods
arpl
pop
pop
xchg
data16
cmp
in
pop
mov
pop
out
jns
shlb
scas
fwait
jp
mov
inc
inc
and
xchg
out
pop
jg
lret
adc
aad
std
std
jns
push
inc
stc
int3
std
dec
and
test
stc
or
mov
inc
add
mov
pop
xor
cmc
test
cmp
cmpsb
pop
cs
mov
lret
cmpsb
xchg
outsl
and
mov
test
insb
push
dec
xor
adcb
lret
lods
in
stos
add
fisubrl
shr
loope
push
repnz
mov
cmp
jmp
sub
sbb
out
mov
push
shll
xor
inc
out
mov
push
inc
push
jns
xor
jbe
shrb
pop
sbb
iret
jns
sbb
lahf
pop
mov
push
cmp
adc
pop
mov
pop
out
lret
sub
inc
adc
or
pop
jne
xchg
xchg
jnp
xor
cmp
lea
out
push
or
adc
leave
loopne
hlt
jo
es
jb
or
push
dec
dec
out
daa
jecxz
in
fisubrl
adc
inc
inc
ds
jge
or
jo
cmp
call
repz
sub
push
pop
cmpsb
js
popf
pop
push
aad
add
jl
ror
xor
sbb
lret
pop
jbe
loope
mov
into
cmp
js
out
in
jge
addb
leave
mov
jmp
adc
or
test
push
clc
pop
js
mov
addr16
inc
sbb
mov
cmpsl
loope
mov
not
lret
xchg
mov
stos
jmp
lock
fbld
repz
xchg
add
add
loopne
shr
pop
ret
cmp
sub
insl
xchg
add
subb
lret
and
and
pop
sbb
inc
jnp
lds
jo
in
repnz
push
int3
jo
mov
cli
dec
and
mov
dec
scas
je
xor
push
cmp
fisubrs
cmp
out
sbb
out
fistps
push
out
lcall
push
out
xor
fcoms
or
push
orb
add
xor
inc
dec
push
call
jno
insb
xchg
out
test
gs
sbb
pop
jb
push
push
sbb
fcoms
add
imul
cmp
fiadds
inc
push
loope
stc
popf
xchg
or
imul
xchg
or
add
mov
lret
scas
mov
mov
push
dec
es
into
jnp
mov
mov
pop
jecxz
aam
pusha
adc
jle
ds
rcll
or
movsl
sub
push
jle
sar
and
xor
xchg
fnsave
add
aas
xchg
stos
stos
mov
in
aam
push
aam
and
jp,pn
push
stos
mov
lea
pop
inc
inc
ret
mov
scas
xor
mov
cmp
orl
stos
add
adc
push
add
cmp
add
fistpll
enter
pushf
add
fmul
fidivl
test
mov
repz
and
mov
pop
outsb
loop
rolb
mov
mov
lods
fldt
lea
mov
pop
repz
xchg
push
push
std
fsts
cmp
xor
sub
test
aad
and
mov
cmp
rcll
fldenv
mov
xchg
pop
pusha
xor
imul
push
xchg
mov
outsl
out
inc
sahf
rcll
jmp
mov
adc
pop
push
xchg
mov
test
xor
mov
dec
rcll
mov
inc
lods
lcall
mov
mov
add
pop
aad
sub
test
sub
mov
into
mov
mov
cli
stos
mov
daa
cld
and
push
rorb
push
jae
lahf
cmp
ss
sahf
imul
incb
sbb
lds
shrl
repnz
das
push
mull
push
cwtl
add
fwait
cmpsb
mov
pop
lret
loop
push
push
sbb
jp
jns
and
mov
sbb
xor
cld
lret
cmp
imul
jbe
cmp
cmpsb
fwait
and
mov
and
xlat
mov
jle
pop
jns
test
adc
mov
jle
pop
sti
cltd
add
cmp
add
push
aad
cmpl
dec
dec
jb
in
repnz
fcomi
or
lds
push
int3
jle
mov
or
fnstcw
in
loope
cli
ss
shrb
xchg
cmp
test
or
jbe
mov
xor
inc
xchg
stos
les
push
pop
xorl
dec
aaa
js
add
iret
push
iret
arpl
iret
jg
popf
or
shrl
jb
fcom
addr16
pop
lock
xchg
sbb
push
imul
add
adc
cmp
clc
lahf
jg
jl
xlat
ficomps
inc
xor
jl
repnz
arpl
loop
pop
repz
xchg
sub
imul
jp
add
divl
pop
dec
in
aaa
push
lds
dec
and
in
push
and
mov
aad
xor
pop
fdivrl
cmp
adc
subb
lahf
pop
je
mov
pop
lods
adc
xchg
xchg
ljmp
xor
xchg
adc
pop
jno
ret
mov
ret
xchg
les
add
lods
xor
je
adc
cmp
adc
jecxz
and
xchg
into
jmp
sbb
scas
push
xor
pop
xchg
fistpl
xchg
mov
cmp
add
scas
lahf
push
leave
std
or
rcll
int
xor
xor
adc
fs
ret
pop
inc
or
sbb
sbb
mov
scas
fcmovu
pop
add
mov
xchg
loopne
mov
gs
add
jle
std
adc
movsb
mov
imul
repz
rcll
pop
xlat
mov
pop
or
add
rolb
popa
fnstcw
int
ficomps
pop
stos
xchg
mov
ret
push
std
jcxz
push
daa
inc
int3
loopne
outsb
pusha
lcall
jge
out
pop
sahf
movsl
insl
jg,pn
lcall
in
pop
xor
repz
imul
gs
inc
dec
hlt
jle
sbb
mov
cmc
aam
cs
pop
lea
push
sahf
aad
and
sub
inc
dec
in
adc
mov
adc
fsubrs
mov
call
mov
loop
add
mov
adc
or
stc
mov
cmc
lods
cmp
jg
ret
push
xlat
ljmp
scas
mov
in
es
jmp
sahf
outsl
loope
push
lds
dec
xor
dec
call
add
movl
push
mov
adc
bound
inc
inc
pushf
cs
and
call
sbb
jbe,pt
push
mov
adc
add
mov
mov
dec
pop
lcall
sub
shll
jne
roll
jmp
mov
pop
lods
sub
shl
loope
je
fs
sbb
and
or
jle
push
repz
sbb
add
pop
in
or
dec
add
sbb
inc
movsl
lods
je
pushf
mov
push
imul
adc
scas
call
lret
pop
push
pop
test
es
fisubrs
push
clc
iret
mov
push
adc
call
out
or
loop
mov
addr16
push
push
adc
sub
mov
jns
add
dec
shr
mov
popa
pop
xchg
sahf
nop
in
mov
xor
cmp
es
jle
mov
lea
xchg
mov
roll
insb
mov
mov
insb
xor
cmpsl
mov
push
jne
push
jmp
loop
inc
hlt
xchg
xor
pop
pop
not
dec
cli
test
sbb
movsl
dec
fbld
push
in
scas
mov
push
xor
adc
outsb
mov
into
je
jmp
adc
loopne
and
mulb
iret
in
sbb
push
jle
and
sarl
adc
fcomip
xchg
jo
xchg
stos
lcall
cmp
stos
push
addr16
ja
lods
jae
and
stc
mov
jecxz
cmpsb
and
xor
out
xor
push
xchg
jmp
roll
cwtl
jno
jmp
shll
mov
movl
pushf
add
pop
enter
xchg
pop
je
lret
mov
and
mov
mov
in
test
cmp
sub
pop
aam
jl
scas
outsb
aas
or
push
mov
scas
adc
xlat
xchg
sahf
rorb
push
insl
test
adc
or
insl
push
in
pushl
stc
test
enter
movsl
pop
lods
in
test
mov
or
push
mov
lret
push
sbb
popa
rcl
clc
std
fsts
test
pushf
jge
in
cmp
cmp
aam
add
and
mov
popf
mov
arpl
mov
cltd
shrl
cmp
mov
sbb
mov
mov
sub
mov
fstps
push
aaa
sbb
in
and
dec
cltd
out
andl
xchg
add
cmp
push
sub
inc
and
dec
repnz
mov
test
push
mov
imul
mov
ds
lods
sbb
subl
push
cltd
into
cmp
and
sub
jp
cmp
inc
jb
xchg
mov
ds
iret
and
sub
aad
jmp
mov
lock
dec
add
pop
mov
cltd
lods
andl
push
bound
cmpsl
pop
adcb
xor
adc
xchg
je
enter
shl
aad
inc
lock
dec
adc
push
ret
push
jbe
push
pop
in
add
nop
cmp
xchg
cmpsl
push
xor
hlt
xchg
jmp
subb
xor
sub
push
ror
xor
ret
pusha
std
cmp
sub
adc
dec
shlb
mov
and
jne
movsb
mov
ret
dec
pop
fwait
mov
mov
add
in
jecxz
pop
and
add
iret
xchg
or
push
popa
shrb
js
cltd
clc
pop
sbb
or
fdivr
into
xchg
adcl
dec
andb
popa
pop
pop
xor
int
aad
shl
inc
mov
xor
outsb
loope
scas
fstl
cmc
into
sub
mov
adc
mov
inc
inc
inc
mov
shrb
sarl
int3
call
xchg
sub
or
mov
or
fidivs
iret
jecxz
sbb
and
out
xchg
mov
lahf
gs
push
mov
add
popf
stc
dec
cs
inc
cmp
inc
outsl
sub
shrb
push
repz
fwait
bound
mov
out
pop
jnp
add
mov
ljmp
jecxz
cld
clc
inc
mov
insl
adc
jno
jo
fsubl
lock
mov
test
movsl
push
mov
cmp
sbb
in
mov
mov
xor
rcll
nop
cmp
and
mov
mov
pop
lret
addb
call
call
stos
mov
add
popf
jo
xor
dec
inc
das
and
sub
push
lret
mov
icebp
xor
stos
clc
and
hlt
lock
and
sarb
mov
cmpsb
jb
cli
fnstenv
aad
jbe
inc
inc
jns
lret
inc
mov
or
dec
sbb
mov
xlat
sub
movsl
xlat
dec
aas
dec
mov
mov
adc
in
dec
xor
cmp
das
mov
xchg
dec
cmc
sar
or
lds
cmp
push
adc
cwtl
imul
or
xor
xor
or
sbb
pop
shl
sarb
andl
sub
jge
xor
les
xor
lock
mov
cmp
add
mov
lret
ss
jge
fmull
push
and
inc
jno
pop
sub
or
scas
mov
insl
xchg
iret
push
lods
xchg
push
aam
pop
add
loopne
aaa
cli
lods
or
fs
ret
mov
dec
sub
xor
xchg
aas
mov
push
dec
add
mov
cmp
aam
and
jnp
sub
sub
pop
lret
xor
mull
add
bound
xlat
and
mov
xchg
test
or
or
jl
jmp
mov
aad
divb
adcl
pop
sbb
sbbb
enter
test
xchg
test
popf
mov
mov
cmp
cmpsl
jno
sub
out
les
in
rorb
dec
mov
aam
stos
aam
ret
jns
mov
or
repnz
imul
outsl
or
pop
sarb
daa
pop
lods
xor
arpl
into
loopne
mov
mov
dec
sbb
repnz
shrb
cmp
adc
xor
jns
and
dec
pop
cltd
shrb
mov
movsb
aas
stos
add
rcll
iret
jns
mov
xchg
mov
sbb
and
mov
cmpb
int3
lock
popf
ds
cmp
xchg
icebp
call
pop
popa
les
add
stc
pop
add
xorb
adc
xlat
cmp
popf
int
aad
xchg
sub
sbbl
fld
push
sbb
nop
jnp
add
inc
out
sahf
xor
sub
iret
mov
xchg
cmp
fst
mov
and
xor
jae
push
cld
out
mov
enter
test
lea
mov
imul
repnz
xor
insl
jno
sahf
jle
pop
icebp
inc
add
lcall
mov
sti
dec
out
dec
sbb
inc
int3
pop
mov
dec
sbb
les
shlb
test
lcall
jp
sti
mov
dec
addb
mov
insb
sub
lods
adc
in
lret
mov
push
orb
imull
lods
stos
add
out
andl
push
cmpl
sub
inc
divl
mov
push
jmp
cmp
ret
call
popa
in
sbb
mov
cs
dec
into
stos
lcall
enter
pop
imul
jns
and
push
jmp
mov
push
int3
das
lock
pusha
pop
int
pop
iret
push
mov
mov
and
lahf
je
mov
lock
mull
xchg
cwtl
push
pop
dec
dec
fs
ss
inc
cltd
lock
xor
les
js
popa
cs
hlt
mov
daa
lods
int3
push
sub
jmp
arpl
rcrb
leave
pushf
imul
xchg
popf
cmp
add
lock
btc
dec
aad
mov
cmpsl
fldt
push
and
mov
inc
int
xlat
mov
movsb
sub
add
or
and
scas
gs
je
mov
out
mov
das
call
jbe
sti
andb
adc
scas
insl
and
adc
jae
mov
jae
xor
sbb
aas
add
pop
rcrl
add
in
mov
gs
adc
das
fdivrs
lds
mov
inc
outsb
lods
push
xor
es
pop
aam
mov
xor
cmp
pusha
in
sbb
and
xchg
das
lret
or
test
xorl
add
sub
lahf
out
aad
cmp
mov
push
jae
sahf
cli
scas
ja
loop
loopne
aaa
loope
dec
std
loopne
movl
nop
xchg
pushf
int
dec
cmp
mov
jmp
cmpsb
inc
fisttps
or
cmpl
addr16
fstl
popa
ss
add
std
cld
fiaddl
ljmp
dec
iret
pusha
js
ljmp
xchg
xchg
lods
addr16
add
cmp
mov
dec
icebp
lret
fistpll
and
add
inc
xchg
push
lods
xor
jae
mov
push
pop
insb
pusha
mov
inc
push
xchg
int
cs
mov
jl
cmp
into
enter
icebp
int3
or
stos
pop
sub
mul
xchg
cmc
mov
jns
or
dec
aaa
xchg
into
xor
push
and
sbb
add
sbb
inc
mov
xchg
push
mov
push
lock
mov
lods
push
jmp
nop
adc
dec
in
ljmp
lcall
imul
scas
or
das
fsubrs
push
out
add
divl
in
popf
mov
mov
imul
xchg
stos
out
adc
mov
stos
add
xchg
pop
pop
cmpl
adc
xchg
fs
repnz
pop
push
add
testb
adc
out
jge
fsubr
mov
mov
sbb
jle
sarb
pop
out
cmpsl
sub
pop
jae
mov
dec
push
dec
addl
push
mov
insl
adc
pusha
xchg
fldcw
mov
inc
in
mov
das
imull
dec
adc
loope
shll
xchg
xor
insb
xor
cs
mov
mov
repnz
add
or
scas
cmpsl
int
push
pop
stc
int3
ret
sbb
push
stos
test
cmp
xchg
push
imul
popf
push
or
xor
scas
test
lods
dec
jo
outsl
push
clc
daa
jne
loop
inc
inc
jo
pop
push
aad
or
je
dec
addr16
ret
xchg
mov
into
jnp
out
adc
fisubl
add
dec
sub
push
fwait
out
psubq
push
and
popa
imul
repnz
jo
inc
dec
rclb
arpl
adc
xlat
mov
rcrl
cmp
sub
pop
pop
imul
sbb
out
repnz
lock
mov
popf
aaa
adc
jo
inc
push
pop
mov
push
andb
and
loop
push
je
sub
mov
or
add
mov
inc
shll
jmp
push
sbb
mov
lock
cmc
test
lret
mov
fwait
lds
dec
setne
out
xor
mov
in
clc
adcb
push
and
fimull
jge
cmp
xchg
cmp
dec
aas
aad
mov
lods
sbb
mov
stos
or
pushf
andb
repz
push
movsb
inc
jbe
push
test
dec
push
stos
cld
lods
mov
or
gs
xor
dec
pop
add
test
push
bound
push
inc
and
lret
lcall
enter
mov
lret
ret
add
rclb
adc
xor
cld
inc
mov
xchg
mov
gs
push
insb
out
ja
and
mov
mov
mov
rcrb
jmp
push
imul
outsb
test
lods
inc
sub
push
or
addr16
lret
js
gs
outsl
adc
jo
sarb
movsl
gs
jg
sti
sub
mov
dec
sbb
stc
insl
cmpsl
jnp
lahf
subl
inc
inc
jno
rcrb
test
jae
mov
xlat
scas
jb
push
jl
ja
push
pmullw
push
adc
lods
repnz
xor
adc
cmp
and
loopne
je
scas
loopne
stc
enter
and
repz
pop
and
xchg
and
and
incl
movsl
fwait
mov
xorl
mov
shll
ret
sub
or
lock
sbb
mov
cmp
hlt
popa
cmp
repnz
and
ret
pop
fdivl
testb
testb
stos
cmc
fadd
and
out
inc
ret
push
jecxz
cmpsl
dec
inc
or
std
nop
ficomps
pop
xor
fadd
jbe
dec
lods
jmp
mov
imul
add
test
or
fmul
repnz
inc
loope
pop
jmp
mov
lock
jge
roll
popf
jp
sub
pop
sbb
mov
lods
push
iret
adc
popf
cmp
es
mull
push
fcmove
sbb
aas
adc
mov
ljmp
movsl
mov
xchg
fsubs
hlt
test
ja
lret
push
out
gs
bound
jge
pop
int3
icebp
jmp
cld
cmpsb
sbbb
jle
mov
hlt
sub
bound
and
and
sub
mov
lcall
in
jecxz
scas
std
cmp
out
sbb
add
scas
lahf
add
pop
repnz
push
or
xor
sbb
loopne
xor
mov
cli
addb
push
pop
dec
fsubp
movsb
or
add
out
add
mov
dec
dec
add
pop
and
push
int3
outsl
push
data16
push
fistl
sbb
vcmpsd
inc
add
imulb
insb
xchg
mov
test
push
pop
jl
repnz
add
pop
and
scas
mov
push
mov
cmp
pusha
rol
sbb
dec
dec
sub
adc
push
inc
sub
inc
aam
popa
cmp
fstpt
push
mov
jge
je
loopne
out
or
int3
sub
jbe
xlat
jno
ficoml
or
xchg
push
cmp
sub
pop
push
fsubrl
leave
mov
sub
lods
test
cmp
jae
mov
sarw
sysenter
push
lahf
aas
and
xchg
stc
xorb
inc
jo
and
shl
out
push
pop
jne
push
movsl
pushf
adcb
cmpsb
popa
aaa
mov
cmpsb
in
ds
loopne
pop
add
lret
mov
fstps
enter
pop
mov
push
lcall
aaa
rcrl
jno
adc
popa
out
popa
sub
xchg
pop
xor
dec
add
decb
adc
jmp
jmp
fs
shl
cmp
pop
dec
fsubs
and
cmp
fs
push
mov
arpl
out
lods
mov
add
sahf
mov
adc
xor
loope
outsb
stc
iret
jo
mov
dec
jo
pop
push
mov
dec
je
pop
cwtl
xchg
fistpll
xorl
pop
pop
aad
fcoml
les
xor
lds
cmp
fisubrs
push
cmp
xchg
jnp
inc
sub
mov
sub
push
sub
sbb
xchg
psubw
sub
ss
lds
push
cmp
fildll
jno
xor
xchg
xchg
notb
sbb
xchg
jmp
push
in
mov
enter
xchg
addb
xchg
loope
scas
lock
pushf
fiadds
es
jmp
sub
inc
repnz
dec
and
adc
je
and
in
repnz
insb
or
das
jecxz
nop
or
jbe
cmp
daa
jb
scas
iret
insb
iret
cmp
mov
adc
mov
adc
mov
and
lods
xchg
xchg
jnp
dec
out
call
ds
orl
sbb
xor
icebp
lret
push
add
xchg
in
mov
jge
stc
adc
cvtps2pi
mov
push
sti
dec
ljmp
push
stc
xor
pop
test
cmp
inc
xchg
xor
dec
dec
or
nop
pop
lods
loopne
sub
sbb
scas
testb
cmp
sbb
add
push
loopne
pop
sbb
test
cmp
sub
out
test
jae
in
lahf
loopne
adc
adc
lret
or
mov
dec
dec
aam
int
cmpsl
or
ret
adc
xorb
mov
push
fs
push
stos
jns
add
cltd
fcmovnb
int
sbb
sub
dec
jno
xchg
mov
mov
jns
pop
jecxz
push
inc
popl
xor
dec
cmp
inc
jbe
insb
sub
pushf
nop
mov
push
lds
and
jbe
addr16
xlat
xchg
or
inc
xor
insl
outsl
xor
adc
pop
xchg
mov
add
mov
rcrb
leave
dec
sti
cmp
mov
lock
dec
rcrb
stos
sub
jg
leave
add
cwtl
pop
stos
dec
jecxz
push
mov
sub
xchg
jp
lret
fwait
out
jmp
inc
ret
mov
push
add
fidivl
int
jo
call
jbe
push
cmpsl
push
jno
popa
in
subl
lock
movsl
jnp
mov
push
inc
push
xlat
mov
stos
adc
mov
loopne
in
arpl
fdivs
jns
addl
rorl
pop
cli
and
out
lds
mov
rcll
xor
sub
pop
push
adc
inc
lret
and
nop
out
cmpsl
loopne
mov
roll
push
inc
xchg
xchg
dec
or
mov
cmp
imul
mov
jnp
sub
daa
out
sbb
das
xchg
push
repz
repnz
test
lock
sub
jo
cs
push
inc
push
pop
int
push
repz
and
mov
outsb
xorb
lcall
dec
or
and
shrb
cmpsb
pop
pop
sub
push
shll
add
xchg
xchg
jg
mov
or
andb
ja
add
mov
inc
mov
sub
out
fdiv
or
repz
repnz
fistl
std
inc
imul
icebp
scas
xchg
sbb
in
mov
xor
scas
and
insb
movsb
adc
mov
xchg
mov
scas
sti
mov
xchg
sub
stos
jg
into
mov
test
bound
inc
xchg
mov
push
push
jge
loopne
popl
and
fsts
and
rclb
sub
sarl
test
aad
insl
adc
pusha
sahf
cmp
mov
inc
lret
adc
subl
pop
outsb
mov
pop
adcb
enter
jne
sbb
fidivl
es
sub
jle
insb
inc
mov
xchg
lods
out
or
arpl
mov
les
mov
aas
and
push
and
imul
arpl
cmp
les
add
mov
inc
out
mov
jne
mov
cmpsb
stos
fcoms
inc
pop
das
pop
sti
cmpsl
pop
cli
xor
and
out
mov
leave
jmp
adc
or
push
cmp
fwait
iret
std
and
in
mov
gs
testl
loope
ret
push
fwait
and
in
test
jae
leave
dec
test
sub
stos
inc
cld
inc
pop
sbb
sub
xchg
subl
out
add
into
std
push
dec
into
lds
pop
dec
aam
and
outsb
push
mov
mov
sti
popf
push
or
xchg
xchg
jnp
bound
cld
cmp
sbb
push
push
mov
cmpsl
and
fstpl
pop
fnstsw
xor
cmp
loop
mov
sub
mov
stos
and
int3
addr16
xor
push
mov
pop
insl
insl
pop
mov
push
stc
mov
fs
mov
pop
test
inc
mov
xchg
sub
fsubrs
lods
shr
jle
fmuls
stos
jecxz
imul
pop
xchg
lods
mov
mov
and
leave
es
cmp
das
pop
insl
shrb
rep
sahf
jne
stos
movsb
pop
or
mov
out
in
inc
fcomi
sbb
cmpsl
xchg
push
inc
adc
jp
ja
mov
xchg
xor
jno
test
ret
lods
or
jp
out
cld
xlat
out
inc
mov
rclb
repz
test
pop
loopne
dec
push
mov
lcall
repz
iret
shll
xchg
dec
sub
add
mov
pop
or
xchg
gs
cmpsl
xor
add
pop
xor
pop
jae
dec
xor
icebp
xchg
test
jbe
mov
mov
xlat
xchg
add
push
test
jnp
cmp
fdivs
sbb
add
insl
or
lahf
pop
stos
and
xchg
mov
push
cwtl
addr16
orb
lret
sbb
mov
popa
push
std
add
mov
dec
adcb
in
cmp
cltd
sbb
inc
lea
adc
xchg
bound
int3
cmp
cmp
leave
jge
fucomip
dec
push
addr16
and
int
jbe
ret
pop
out
int3
in
orl
mov
into
scas
push
pop
int
push
pop
fucomp
adc
xorb
add
push
insb
test
imul
xchg
aaa
psubusw
xor
jnp
neg
gs
inc
fucomp
add
xchg
mov
rcrl
iret
test
mov
push
xchg
or
mov
scas
mov
lds
insb
adc
cmc
pusha
xor
mov
inc
dec
cli
cmp
jb
test
addb
cmc
add
addl
sbb
insl
xchg
push
popf
std
jge
cwtl
in
ud2
cmc
mov
jge
cwtl
mov
and
ljmp
cmp
pop
pop
jnp
shll
xor
setne
outsl
dec
into
and
sub
arpl
es
fsub
mov
inc
imul
popf
aam
pop
jle
pusha
jl
into
mov
xchg
sub
lea
xor
cmp
sub
ss
lods
push
sub
push
addb
xlat
adc
mov
or
or
in
mov
adc
jle
jle
leave
shr
pop
lods
jp
mov
adc
cmp
cld
ret
out
and
add
fcmovbe
xchg
xor
mov
aaa
loope
xor
clc
sahf
cmc
jb
aas
sbb
mov
mov
iret
or
call
sub
cmpsl
sbb
daa
mov
cmc
stos
es
fstpl
std
push
jns
push
pop
flds
dec
cs
pop
pushf
fcoml
xor
xchg
jno
nop
fs
xor
mov
inc
std
lods
sbb
fstp
fdivrs
test
cmp
andb
inc
sbb
jo
clc
pop
cmp
mov
mov
loope
std
push
fcoms
pop
daa
dec
int3
xchg
or
push
lds
mov
push
cmp
mov
jo
jle
jns
xor
mov
add
push
daa
in
mov
dec
fs
cmp
push
fsubl
out
jne
jnp
je
lock
movsb
pusha
add
jp
xchg
mov
movsb
fsubp
fiaddl
jb
adc
clc
clc
xchg
mov
mov
dec
xor
nop
mov
push
adc
pop
add
fldenv
fimuls
sbb
cmp
or
add
mov
fcoms
in
adc
fwait
addr16
xchg
push
or
outsb
aas
stos
daa
lcall
mov
cmpb
sub
fsubp
leave
add
xchg
or
fdivs
loope
gs
call
mov
aad
xor
ss
push
cmp
shrl
mov
mov
stos
push
into
xor
push
cltd
and
adc
push
push
sub
loop
mov
pusha
sbb
mov
sbb
cli
xchg
pushf
pop
js
sbb
add
out
nop
popf
mov
xchg
push
mov
stos
xor
pop
mov
xor
les
and
and
bound
popf
sub
sub
adc
sahf
ror
adc
in
iret
stc
mov
and
insl
sub
loopne
mov
sbb
mov
push
dec
lret
mov
push
cmp
pop
cli
nop
xchg
sub
jae
sahf
push
outsb
movsb
fdivs
fidivrs
sub
movsb
mov
iret
mov
pop
rcl
dec
ljmp
mov
mov
sbb
jno
popa
lea
je
das
cmpl
mov
out
repz
idivl
or
adc
out
enter
jae
and
in
dec
hlt
sti
jge
inc
push
mov
icebp
test
cmc
test
test
or
es
testl
mov
aad
xor
scas
mov
adc
mov
icebp
cmp
lock
or
out
jge
aaa
dec
ds
imul
mov
and
cltd
cmc
dec
mov
cmp
rcrb
lcall
mov
pop
inc
lea
xchg
sbb
adc
cltd
int3
popf
jl
cmc
mov
pop
sub
sbb
push
push
call
mov
sbb
adc
mov
insb
out
adc
outsb
rol
out
je
inc
and
pusha
add
jecxz
arpl
jle
sub
cmpsb
fsubl
sub
dec
iret
call
mov
rclb
outsl
xchg
pop
loopne
leave
push
mov
add
pop
scas
xor
sbb
inc
or
imul
lret
inc
out
cmp
test
adc
lret
pop
loop
fcomps
mov
out
mov
or
lods
jmp
aad
add
add
orb
and
sub
cltd
shlb
fucomi
sub
add
imul
lds
dec
int3
insb
in
jmp
mov
push
lea
shrb
lods
nop
movsl
xchg
pop
pop
mov
fadd
out
xor
rclb
add
push
in
sbb
sub
dec
nop
fidivrs
xchg
add
in
adc
mov
cmp
add
lea
cld
xchg
xchg
jg
cli
incb
xchg
mov
add
popa
mov
push
mov
idivb
adc
pop
add
sub
sub
repnz
adc
mov
xchg
or
jecxz
xlat
mov
add
adc
pop
mov
aad
test
fdiv
mov
xor
jge
aad
loope
movl
sti
idivl
cld
dec
lahf
adc
neg
daa
adc
aaa
pop
pop
mov
mov
inc
rorl
and
mov
repz
rcrl
sahf
xor
adc
add
jno
xor
movsl
jle
and
dec
int
ja
sub
cmp
iret
jle
or
stos
dec
ficompl
xchg
das
mov
mov
cs
inc
pushf
or
xchg
mov
jg
cld
cmp
jns
adc
jp
add
adc
int3
xchg
jnp
stos
imul
loopne
and
jns
jl
loope
cmp
xor
or
mov
inc
in
sbb
dec
arpl
ret
fistpl
mov
push
nop
adc
sbb
or
mov
lods
lret
xor
dec
inc
inc
push
dec
sbb
incb
cmpsl
mov
hlt
xor
fnsave
popf
pusha
dec
in
xor
pop
adc
sub
pop
dec
jbe
mov
mov
ret
add
ficompl
sti
jne
jge
mov
mov
jns
int3
mov
movsb
xchg
mov
cmpsl
mov
xchg
add
sbb
sbb
sub
daa
bound
mov
inc
push
adc
add
cmp
xor
scas
xorl
xchg
xchg
imul
xchg
mov
test
mov
xlat
ficompl
cltd
jge
fstpt
dec
jge
cmpsl
sbb
cmp
cld
imul
subb
loop
or
add
out
cmc
push
pushf
push
mov
push
out
mull
lcall
stos
roll
shlb
jmp
outsb
test
repnz
jp
pop
cltd
cmp
push
fidivs
mov
stos
sti
call
aas
fiadds
mov
xchg
push
cltd
inc
lret
mov
movsb
sbb
pop
pop
mov
xor
push
jl
xchg
ret
push
xor
mov
frstor
sbb
sbb
stos
sbb
mov
sbb
jmp
xor
sarl
or
cmp
dec
pop
add
jle
shlb
iret
jl
inc
hlt
mov
negl
lahf
sbb
pop
out
dec
pop
insl
mov
ret
mov
loope
jge
int
ss
sti
lcall
scas
popf
stos
mov
mov
aaa
call
pushf
sbb
push
and
ret
jg
push
cld
xor
mov
bound
xchg
out
cmp
pop
ljmp
in
mov
movntps
and
add
aaa
jae
mov
xor
clc
xchg
push
lahf
ljmp
and
in
cmp
test
push
cmc
inc
nop
cmp
fldl
mov
fstpl
push
loopne
lret
dec
repnz
pop
fs
rol
daa
pop
jns
out
testl
movsb
push
mov
shl
dec
cld
or
shl
test
stc
mov
dec
add
ss
test
sbb
rcr
add
dec
mov
sbb
sub
outsl
sbb
cmpsb
xchg
test
jbe
test
aam
repnz
xor
sub
cmc
mov
push
gs
fistpl
and
movsb
dec
insb
in
push
movsl
sbb
pop
pop
xor
adc
es
jo
inc
sub
sbb
ficomps
loop
sbb
lcall
ja
cmpsl
repz
cs
das
lods
push
jle
fucom
fcmovnu
hlt
js
cli
sbb
dec
xchg
clc
mov
loopne
mov
ss
sbb
imul
outsb
imul
xchg
mov
dec
repz
push
cwtl
xor
push
add
xchg
pop
sub
cmpsl
bnd
xor
inc
pusha
fldenv
pop
imul
jp
pop
cmp
mov
fadds
aaa
imul
mov
hlt
leave
or
aaa
inc
insb
out
jle
push
mov
dec
sbb
outsl
xor
mov
mov
ljmp
cs
test
movsl
dec
lods
lds
mov
adc
push
das
cld
xor
das
out
xor
lea
mov
std
sbb
mulb
or
dec
jmp
sbbb
pop
pop
sahf
sti
movsl
mov
or
mov
jnp
inc
push
ljmp
add
mov
mov
outsl
sbb
inc
adc
push
cs
lret
jmp
pop
inc
mov
push
repz
pop
mov
leave
ret
pop
xor
loopne
or
and
sbb
mov
gs
icebp
mov
xor
addr16
je
add
cmpsb
mov
unpckhps
ljmp
jbe
sbb
mov
outsb
jbe
mov
add
pusha
pop
mov
ds
nop
cmp
movb
ret
ds
or
xchg
or
outsb
or
sub
xchg
in
xor
cmpsb
adc
and
mov
lcall
testb
scas
scas
test
pop
sbb
pop
das
movlps
add
daa
xchg
sub
repz
fwait
cmp
das
int
push
inc
in
jno
flds
sub
xor
push
mov
jp,pn
fisttps
aad
in
das
push
call
push
lret
xchg
das
push
cmpsl
jae
adc
xor
ja
lret
inc
inc
jae
rcrl
jns
mov
cmp
arpl
mov
lock
sbb
jmp
dec
lds
bound
lods
dec
loop
sbb
push
cmp
inc
mov
mov
fcomp
mov
cwtl
out
add
jbe
dec
dec
or
pushf
sbb
imul
sub
and
pop
ret
cltd
sub
push
jmp
mov
dec
push
adc
pop
cmp
mov
or
mov
inc
xchg
xchg
adc
mov
sub
jbe
repz
cmp
sbb
aam
in
mov
out
pop
les
xchg
xor
pop
stos
cmp
shll
loopne
jmp
push
jg
fidivrl
add
jno
or
movsb
pusha
add
sub
fwait
callw
in
mov
mov
mov
sub
shl
aaa
xorl
cmp
sbb
lahf
popf
daa
mov
jle
jbe
lds
push
stc
mov
nop
pop
roll
inc
pf2iw
or
jo
sti
push
push
inc
cmp
mov
jbe
sub
lods
pop
repz
lock
push
loop
jmp
out
movsl
int3
imul
xor
cli
jb
repz
and
pop
sbb
aam
out
adc
xorl
xchg
add
incb
dec
mov
pop
shlb
in
out
gs
lcall
leave
loop
data16
xchg
mov
mov
xchg
pop
dec
jp
xor
lods
push
jg
cmp
mov
in
jnp
in
outsl
cld
mov
loop
stos
mov
ja
int3
aam
outsb
movsb
mov
and
scas
push
daa
pusha
decl
pop
sahf
movsb
jne
push
sub
aad
fwait
mov
sbb
andb
ds
decl
push
mov
lret
js
pop
cmp
ret
xchg
dec
andb
jno
cld
jmp
enter
or
pop
hlt
jne
popf
mov
jae
sarb
and
cmp
in
lcall
fstl
push
xchg
fucomip
stos
je
int3
cmp
xchg
jo
stos
cmp
xchg
mov
or
lret
lock
mov
jo
out
push
ret
cmp
add
out
cmp
jae
jno
ljmp
mov
mov
and
dec
mov
arpl
lds
outsb
mov
push
nop
sbb
rcl
sbb
cmp
jns
mov
xor
pusha
notb
mov
std
inc
in
lret
mov
aad
xchg
lds
cmp
lcall
sbb
pop
icebp
mov
xchg
push
and
stc
cmp
mov
cmp
pop
jmp
mov
or
in
test
and
sub
nop
movsl
leave
aas
adc
xchg
push
je
aaa
ds
data16
sub
push
dec
push
mov
ret
sbb
cld
movsb
lret
mov
out
out
es
shrl
lods
push
ljmp
sahf
push
in
push
js
lds
fcomp
add
or
scas
fcomi
daa
mov
ret
aad
add
icebp
mov
sub
xchg
in
nop
xchg
fiadds
out
loope
jge
xor
inc
in
mov
and
add
and
mov
mov
add
mov
sub
aas
adc
mov
push
mov
dec
cmp
sbb
sbb
cs
test
inc
cmp
dec
sarl
movntq
out
cmpsb
stc
mov
cmp
decl
rol
jge,pt
inc
mov
mov
enter
rcrb
data16
fidivrl
adc
mov
xchg
lods
out
rcrb
stc
filds
ret
jne
cmp
pop
lods
dec
jnp
jb
sub
pop
push
testl
aas
inc
fcmovbe
sbb
mov
xlat
test
and
in
push
dec
add
dec
test
and
mov
jb
divl
cli
jne
pop
loop
movnti
and
mov
outsl
popf
pop
popa
mov
divb
xlat
cwtl
sbb
add
mov
sub
pusha
sbb
lock
push
movlps
jl
or
frstor
orb
inc
into
dec
xor
pop
outsl
dec
daa
sub
mov
lock
jecxz
jl
inc
lret
pop
sub
ss
loop
pusha
icebp
fldcw
inc
jg
lea
jp
fidivrl
xchg
fdivrs
loop
mov
paddsw
mov
test
test
sub
mov
add
or
insb
mov
sahf
fstpt
push
sarl
mov
data16
xorb
dec
adc
rol
mov
jb
jns
addr16
xchg
xor
pusha
in
mov
adc
mov
loope
or
xor
mov
mov
dec
mov
enter
out
ret
loope
sub
adc
imulb
cmpsl
rolb
orl
dec
ret
arpl
jmp
loope
out
pop
sti
mov
mov
idiv
jg
jecxz
xor
out
lods
pop
cwtl
scas
mov
outsl
les
dec
push
ja
mov
cld
jnp
jl
pop
insb
nop
xchg
data16
pop
add
jmp
mov
mov
adcb
push
adc
inc
das
adc
daa
xchg
sarl
mov
rcrl
cmpsl
fsubrl
sar
std
and
in
jb
stc
jle
into
rclb
mov
icebp
in
push
mov
mov
sub
xchg
sbb
inc
packuswb
lea
lock
add
add
arpl
inc
sahf
inc
fsubl
mov
jg
xchg
fwait
dec
pusha
ret
and
or
inc
testl
mov
call
mov
cwtl
ret
jbe
sub
sbb
mov
sub
push
sub
clc
imul
jmp
xchg
or
dec
in
xchg
mov
sarl
fldcw
pop
into
sub
mov
fwait
lods
cmpsl
std
movb
out
iret
jle
dec
jecxz
scas
sub
or
jle
faddl
mov
test
sub
pop
stos
pusha
ret
repz
mov
ret
fs
sub
js
test
popa
iret
dec
jge
cmp
clc
dec
movsb
cltd
pop
lcall
xor
or
sahf
sarl
push
into
inc
lea
inc
repnz
int
jge
movsb
lea
xlat
cmc
pop
insb
sub
fistpl
push
sbb
inc
cmp
jl
lods
iret
movsl
int
imul
in
jp
outsl
mov
leave
pusha
mov
and
mov
inc
or
xchg
adc
jnp
adc
and
jb
inc
out
push
lret
sub
sbb
sbb
in
jb
lock
jg
shlb
and
pop
fcmove
jo
push
test
push
and
xor
hlt
adc
jno
and
mov
push
rolb
mov
pop
cmp
notl
in
dec
jle
in
int
es
inc
je
aad
imul
shlb
push
js
mov
xchg
mov
fs
mov
fidivl
sbb
imul
cli
xchg
dec
push
push
or
fnstenv
inc
mov
and
or
push
lock
ljmp
inc
dec
pop
xor
or
dec
xchg
ds
aad
addl
sub
stos
push
fstpt
loop
xchg
popa
push
ss
mov
das
jae
mov
mov
cmp
pop
push
mov
dec
mov
jle
xor
gs
test
fbstp
and
jp
mov
shrl
gs
sbb
xchg
test
into
xchg
jo
sahf
lock
into
por
jg
and
pop
mov
sbb
lahf
in
shll
int3
mov
subl
fnstsw
cmp
jp
mov
ds
nop
pop
scas
mov
push
movsb
arpl
stos
sbb
mov
dec
pop
cmp
movsl
jle
and
xchg
ffree
fsubrl
loope
mov
dec
xchg
push
ret
enter
shlb
add
mov
addr16
repz
cmp
adc
mov
cld
pop
push
call
mov
pop
ja
sub
jo
adc
cmp
push
sahf
pop
fldl
push
pop
push
mov
faddl
dec
lret
push
jns
out
mov
popa
jl
xor
hlt
jno
inc
and
xor
jo
lcall
inc
jbe
movsl
nop
rcrl
xor
icebp
imul
fildll
sub
cmpl
xor
lock
or
cmpb
jo
jnp
mov
add
mov
aad
das
xor
adc
popa
inc
mov
mov
test
out
adc
pop
jp
in
inc
bound
idivb
jbe
and
sti
jns
cmp
xor
subb
pop
mov
lcall
jno
hlt
push
push
jae
pop
adc
pusha
mov
in
jmp
mov
arpl
arpl
in
imul
cltd
and
cmp
out
and
xchg
mov
push
addr16
jo
fcompl
cmp
jo
orb
xor
ja
imul
fwait
cmp
stos
pop
fstl
call
adc
jle
sub
ficoms
shl
mov
jae
fs
loope
sub
rorl
movsl
or
dec
js
cwtl
out
out
lcall
cli
jmp
pop
or
push
inc
shl
lret
jo
add
arpl
fwait
mov
or
icebp
or
adc
icebp
scas
pop
and
cmpsl
push
jge
or
xlat
mov
mov
push
xchg
outsl
jnp
xor
rolb
out
or
cmp
dec
jmp
jbe
cmp
jmp
js
frstor
add
jns
outsb
mov
mov
sub
lret
aas
lcall
sti
test
fstpl
push
ret
adc
fistpl
push
loope
xchg
or
stos
or
adc
cmpsb
dec
mov
sbb
inc
xchg
pop
std
xor
jle
add
inc
insb
in
add
or
lcall
mov
mov
in
jb
xchg
xorb
arpl
out
pusha
incl
mov
ret
jne
mov
add
jns
rol
loope
rclb
fwait
ss
out
loopne
fsubr
dec
or
jo
repnz
inc
enter
or
and
mov
neg
mov
pop
dec
mov
push
arpl
jmp
ljmp
repnz
adc
push
cmp
and
xchg
pop
push
enter
movsl
insl
cltd
fiadds
jp
mov
outsl
xlat
sahf
jp
jno
iret
cmp
repnz
nop
xchg
mov
mov
lods
jmp
popf
cld
sub
orb
cmp
dec
jg
cmp
push
dec
add
xchg
in
mov
push
cs
jo
dec
push
dec
aad
add
jge
mov
sbb
pop
push
jecxz
rcrb
inc
pop
test
and
push
cmpsb
mov
ret
pusha
ljmp
sub
scas
minps
cld
loopne
jb
cmp
xor
aam
mov
out
aas
hlt
ret
loop
icebp
cs
outsl
popa
xor
cs
sub
lods
pop
cwtl
pop
and
out
mov
lcall
sbb
mov
sub
sbb
xchg
ds
cltd
and
mov
ficoms
dec
aaa
push
or
add
ss
sub
dec
and
aaa
sbb
mov
mov
mov
mov
adc
lret
mov
jnp
add
repnz
mov
pusha
dec
mov
sub
arpl
push
fstp
negb
iret
test
xor
lock
sub
jno
mov
sbb
or
or
add
xchg
inc
pop
mov
arpl
ss
fsubl
rolb
and
stc
jle
mov
fldl
cli
add
je
xor
adc
pop
inc
ffreep
lcall
testl
mov
xchg
or
xor
add
xor
daa
out
sbb
mov
cltd
aam
rol
lds
cmp
popa
dec
mov
push
jmp
sahf
es
xor
xchg
mov
loopne
xchg
loop,pt
sub
imul
mov
fists
out
and
into
andl
cmp
out
jle
jne
cmc
xlat
arpl
fildl
adc
mov
sub
dec
mov
mov
mov
inc
adc
sbb
xchg
mov
inc
rcr
cmp
test
xor
and
je
and
pop
push
jle
fidivrs
aas
in
push
hlt
adc
test
pop
mov
rol
fstps
scas
or
jnp
push
lret
add
fs
subl
jg
outsb
dec
adc
lods
imul
test
push
and
lea
xor
ret
mov
mov
fldl
jge
xchg
ss
in
call
pop
jo
mov
lret
xorb
adc
add
jg
or
fstpl
cli
sub
cmpsb
jecxz
mov
out
dec
test
fldl
jge
xlat
cmp
sti
adc
cmc
mov
dec
push
jo
and
hlt
or
xchg
xchg
jg
push
stos
push
aad
mov
or
je
dec
inc
cmp
push
fldenv
test
jns
fldt
call
stos
adc
mov
test
mov
insl
cld
cmp
pop
js
pop
stos
cmp
xchg
adc
xor
cmp
lahf
aas
mov
lret
mov
cmp
pop
mov
jnp
mov
adc
push
add
cmp
cmp
cltd
add
ficoml
xor
pop
into
aaa
xor
push
pop
push
pushf
jno
addl
pop
add
xor
dec
push
movsb
movaps
loop
out
stc
insb
imull
xchg
out
jle
inc
add
cli
sbb
lret
mov
call
jecxz
mov
pop
mov
xor
test
mov
call
mov
xor
jle
psubusb
dec
nop
sub
xorl
popa
dec
mov
mov
sbb
xchg
loop
fidivl
push
push
arpl
out
cmpsl
pop
add
or
jl
mov
adc
paddb
mov
repnz
cmp
inc
add
mov
and
jb
shrl
xchg
add
fnstcw
jmp
in
and
out
orl
sub
and
and
sub
lahf
sub
in
xorb
out
nop
in
bound
repz
xor
lds
mov
cli
jb
and
or
les
lcall
sub
repnz
stos
dec
pop
xchg
sub
xchg
mov
int
push
leave
icebp
mov
ficoml
or
mov
cltd
or
sbb
fnstcw
ficoms
aas
sahf
stc
inc
xor
mov
sbb
adc
sub
in
sub
adc
rcrl
ljmp
sub
pop
mov
xlat
outsb
mov
mov
mov
fists
dec
xchg
ror
bound
pop
inc
in
jecxz
lock
pop
out
jae
mov
hlt
rcrb
push
insl
push
jbe
outsl
call
jmp
xor
enter
cmpsl
xor
decb
enter
loopne
mov
dec
dec
mov
mov
nop
mov
mov
daa
lds
sub
mov
mov
cmp
mov
jle
ja
push
outsb
push
mov
gs
stos
add
ficoml
inc
inc
mov
jae
dec
add
insl
or
outsl
sahf
jnp
pop
dec
mov
ljmp
rcr
pop
loope
mov
xchg
lock
testb
jle
outsl
jge
pop
jb
cmp
shlb
dec
stc
adc
lret
loope
fwait
lret
dec
push
in
mov
xchg
nop
xchg
mov
mov
pop
jo
ds
mov
mov
lcall
les
cltd
add
push
mov
dec
loopne
inc
push
fisubs
pop
xor
cmp
jno
insl
dec
aad
push
sub
mov
das
push
outsl
fwait
xchg
jne
sti
jp
or
fcoml
lret
mov
shrl
stos
repz
test
add
pushf
stos
cmpsl
fnstsw
std
jae
mov
push
sub
xchg
loope
es
mov
push
stos
sbb
sub
call
inc
and
sti
mov
inc
pop
dec
scas
ficoml
test
loope
adc
int3
jno
icebp
xchg
mov
fmuls
mov
xor
in
dec
pop
shlb
and
push
aas
adc
stc
inc
daa
in
xchg
out
push
add
stos
pushf
cmp
push
sub
push
xchg
lret
aam
jbe
sbb
sbb
xchg
dec
fcomps
cmp
int
push
dec
and
and
scas
out
pushf
cmp
pop
sbb
les
dec
addr16
into
rcll
addr16
outsb
cmc
adcb
int
adc
mov
cmp
sub
mov
stos
add
add
add
stos
pop
jo
imul
cmp
jb
add
lret
mov
jl
push
mov
subb
incl
add
adc
pop
pop
push
out
repnz
inc
imul
out
xchg
sbb
adc
or
push
adc
scas
lods
dec
xlat
fildl
jge
adc
sub
pop
in
xchg
int3
sub
lds
shlb
fsts
mov
push
call
add
out
mov
jl
xor
push
lock
mov
aam
mov
outsb
pushf
inc
pop
mov
cltd
js
mulb
mov
ret
mov
addr16
ja
sub
fisttpll
call
dec
add
push
pushl
add
popf
ds
pusha
out
and
or
or
out
sbb
push
inc
out
hlt
xchg
jae
outsl
rcr
push
testb
mov
shll
lret
cwtl
jl
xchg
addr16
dec
fisttpl
ds
xchg
daa
shll
xchg
leave
incb
push
mov
mov
push
mov
push
add
popl
or
movsb
fwait
adc
mov
outsl
ljmp
mov
pop
jmp
mov
cmc
mov
out
lcall
mov
stos
les
call
mov
ret
and
push
test
pop
or
jmp
inc
mov
push
rcrb
jmp
push
pusha
lret
je
scas
stos
or
jmp
jne
sti
and
lret
xchg
fdivs
ljmp
dec
mov
inc
adc
das
mov
dec
pop
push
push
aam
sub
pop
or
pop
add
xchg
xor
cmpsb
sti
leave
cmp
jecxz
xlat
aam
sub
gs
sub
das
es
loop
sti
jge
lock
dec
pushf
sbb
or
add
and
mov
into
or
enter
pop
pop
xlat
cmc
push
push
xorl
ljmp
lahf
sbb
shrb
int
shrl
xchg
lods
inc
push
jnp
stc
pop
das
je
mov
data16
adc
in
pop
mov
inc
in
mov
jb
inc
mov
pop
jno
xchg
les
mov
mov
cmp
cmp
and
test
dec
pop
adc
mov
xor
in
cmp
gs
int3
push
jle
jg
in
popf
imul
dec
imul
dec
jb
mov
bswap
mov
jae
jae
inc
scas
cmp
imul
cmpsl
ja
jae
xchg
jmp
aaa
inc
cmp
aas
add
call
inc
xchg
ffreep
pop
xchg
test
std
aad
addb
mov
or
stc
imul
sub
pop
das
pop
xchg
dec
daa
or
in
sub
mov
cltd
pop
enter
popf
mov
stos
dec
gs
xchg
push
jae
arpl
clc
lds
lret
dec
and
sbb
sub
or
hlt
push
mov
stos
testb
adc
xor
popf
dec
stos
jns
mov
sub
sub
add
push
inc
fwait
iret
xor
cmp
jp
leave
cmp
inc
sbb
lea
test
push
dec
std
jne
ds
mov
dec
out
pop
jmp
insl
cld
and
data16
jmp
lahf
push
aad
adcl
pop
sahf
jp
cmp
fs
jl
pop
les
outsb
test
adc
fldcw
das
adc
inc
xlat
inc
add
push
add
outsb
push
enter
pop
adc
repz
cmpsl
lods
xchg
test
cmp
rclb
push
mov
mov
jae
pop
mov
or
lods
enter
xchg
test
in
divb
dec
dec
jne
out
cmp
pop
sub
ja
mov
je
cli
enter
enter
inc
sbb
jmp
in
mov
adc
inc
pop
ret
and
out
lea
test
inc
push
mov
outsb
mov
add
ds
add
sbb
dec
xchg
mov
adc
sbb
sub
jl
stos
in
dec
cs
out
test
fildll
adc
xchg
pop
sub
sahf
iret
fcompl
sarb
push
movsl
decb
cmp
addb
js
mov
lret
pusha
mov
adc
mov
insb
inc
xlat
stos
push
or
mov
and
lds
xor
fcoml
or
out
movsb
outsl
mov
adc
jo
loope
ret
pusha
stos
push
jae
jno
subb
stos
inc
add
fsubr
outsb
push
loopne
inc
fwait
adc
cltd
bound
ljmp
icebp
lock
aad
adc
int
or
dec
pop
mov
pop
mov
out
pop
rorb
jl
lods
nop
jl
push
push
sbb
in
adc
cmpsl
xor
imul
jl
scas
adc
inc
jge
dec
push
push
pop
es
loop
mov
jge
pushf
into
out
push
pop
mov
or
or
inc
sbb
mov
mov
int3
xor
call
mov
xor
jbe
in
shll
aam
lock
jns
cs
fdivr
inc
pop
mov
mov
out
loopne
jmp
mov
xor
inc
dec
mov
repz
ljmp
mov
aas
adc
mov
out
rorb
stc
call
lahf
xchg
outsl
mov
sbbb
xchg
adc
inc
je
insb
mov
xchg
movsl
add
mov
mov
push
cmp
cmp
hlt
je
dec
stos
sarl
mov
sbbl
mov
stos
daa
and
mov
push
lcall
jb
jecxz
aam
pop
mov
xchg
jl
jns
cmp
and
dec
aaa
xor
mov
jg
push
sub
and
jp
aam
mov
inc
stc
jbe
mov
adc
int
out
jb
xchg
or
add
xor
sub
mov
or
xchg
inc
mov
fwait
arpl
mov
aaa
add
roll
sub
in
push
sbb
push
pushf
in
fnstenv
sub
pop
fbld
xorl
sub
stc
in
dec
add
out
into
xlat
jmp
cmp
pusha
add
push
out
shl
aad
sbb
leave
xor
mov
adc
ss
cmp
sbb
sahf
sahf
jmp
jge
xor
push
insl
rol
repz
idiv
adc
push
pop
pop
hlt
push
imul
js
test
addr16
in
shr
adc
repz
push
sarb
jg
clc
ror
lods
dec
sbb
das
addr16
pushl
dec
call
lret
pop
xchg
add
movsb
cmpsl
loope
das
dec
xchg
ja
ds
mov
je
pop
xchg
add
jl
rcrl
sbb
mov
in
push
xor
insb
add
enter
add
cmpsb
mov
sub
mov
pop
pop
inc
into
and
pushf
aaa
xor
xor
sub
cmp
stc
aad
stc
test
xchg
sbb
repnz
add
xor
sarb
inc
loope
jo
pop
test
dec
adc
cld
cwtl
insb
xor
xor
or
arpl
push
and
inc
adc
xchg
lock
stos
cmpsb
repnz
stos
or
enter
pop
aas
push
xlat
sub
adc
xor
retw
mov
test
fisubl
jecxz
mov
mov
scas
loopne
out
fstl
jne
xor
rcll
mov
and
testb
mov
pop
shrl
cmp
mov
mov
lcall
rolb
scas
data16
cmc
hlt
xchg
and
mov
add
popa
and
inc
popa
hlt
hlt
in
jnp
xchg
fldl
sbb
repz
push
faddp
push
lea
xor
insl
ss
or
fistpl
es
and
xchg
cwtl
add
jae
cmp
repnz
cmp
lea
cwtl
pop
call
pop
bound
add
jmp
das
cmpsl
mov
in
cmpsl
add
enter
or
ds
jecxz
stc
add
pop
mov
imull
imul
ja
cld
pop
aam
jle
adc
sub
ja
mov
push
push
cmp
xchg
pop
nop
mov
xor
or
mov
rolb
jle
adcl
hlt
in
cli
or
add
dec
mov
mov
nop
mov
sar
xor
idivb
dec
ret
jbe
push
push
or
imul
pushaw
cmpsb
jl
mov
sub
loop
scas
and
call
or
aam
xor
out
addr16
cmp
jbe
lods
enter
fdivrs
vpminsw
pop
pop
sub
call
jmp
jle
mov
xchg
cmp
dec
inc
inc
cmpsl
inc
or
stc
cwtl
mov
xchg
add
pop
jo
in
xlat
mov
mov
shlb
cmp
mov
xchg
stos
ret
mov
sbb
or
aad
loop
sub
outsb
in
xor
test
push
or
cli
mov
ljmp
jmp
and
out
pop
jns
xchg
int
mov
cmp
jbe
jl
xchg
ret
ret
dec
lahf
xchg
dec
xchg
lods
fildll
stos
enter
push
cmpsb
mov
and
push
iret
or
cmp
or
movb
loopne
neg
fwait
push
jge
cmp
push
imul
roll
jns
sti
jo
inc
in
ret
in
cmp
pop
notb
int
insb
pop
adc
test
hlt
dec
test
pusha
lret
sub
fnstcw
sub
ljmp
xchg
inc
cmp
or
mov
or
cmpsb
ja
xor
call
add
jecxz
sbb
mov
sbb
push
and
mov
test
xor
and
adc
cmpsl
jno
movb
outsb
fsubrl
fcomip
mov
lods
lret
mov
jno
into
xchg
xchg
sbb
aam
scas
cs
add
cs
jo
mov
or
pop
or
icebp
jp
jg
mov
mov
mov
push
push
scas
hlt
cmp
jns
arpl
push
idivl
lds
pop
out
pop
or
lret
mov
addl
mov
jae
insb
jbe
jge
push
shrl
xchg
pusha
loopne
ret
mov
and
imul
hlt
sub
xor
aaa
lock
iret
dec
mov
jnp
or
mull
jno
push
fsts
rolb
out
outsb
pop
bound
fadds
in
and
mov
and
lret
int
test
push
add
xor
aam
add
jno
sub
lods
push
pusha
sub
push
stos
add
roll
push
xor
push
sti
jbe
xchg
jns
jecxz
arpl
dec
xor
push
mov
fcompl
shll
lahf
inc
cli
sarl
mov
push
lock
fucom
add
push
and
mov
cmpsl
icebp
mov
dec
dec
jb
fwait
jg
push
stos
pop
sub
std
enter
mov
shlb
pop
call
insb
jns
mov
add
in
jno
call
adc
scas
adc
pushf
xchg
out
sbb
mov
push
shrb
mov
mov
imulb
inc
jns
aaa
jnp
inc
jmp
pop
push
add
cmp
jmp
inc
cmp
clc
test
out
fidivs
push
push
int3
rolb
xchg
scas
mov
jp
and
push
dec
inc
mov
cmpsl
in
add
sahf
push
insb
xor
dec
aaa
cmpsb
hlt
aam
xchg
lea
mov
and
dec
jnp
cmp
adc
fs
add
adc
movsl
pop
mov
jg
push
adc
out
dec
cmc
cli
fldlg2
mov
in
sbb
push
mulb
mov
sbb
fs
sbb
mov
sub
or
or
jge
xor
sahf
or
jae
xchg
cmp
xor
dec
jno
shll
and
dec
mov
loope
ss
cmp
dec
jns
xchg
push
ss
push
ss
mov
daa
cmpsb
bound
mov
adc
sbb
xchg
out
das
mov
sub
push
dec
dec
xchg
push
push
mov
lods
aad
mov
inc
inc
andb
imul
push
in
xchg
cmp
mov
lea
inc
into
push
add
pop
aas
push
rep
add
ds
push
sub
flds
test
enter
inc
ret
add
lods
sbb
pop
pushf
movsl
sahf
mov
push
sub
jle
sarl
pop
sub
xor
mov
std
pop
mov
pop
xchg
and
fnstenv
stc
xor
xor
cmp
jg
jge
js
sahf
dec
and
jae
sub
std
or
dec
ffree
and
mov
es
mov
jbe
jo
movsl
jmp
ret
aas
int
test
lock
mov
cmpsl
fimull
dec
mov
and
cmp
flds
fisttps
cmp
fnstcw
cmp
dec
or
dec
xor
je
sub
rol
shlb
jge
and
mov
xchg
mov
or
dec
cs
repz
jecxz
dec
sbb
mov
mov
mov
xchg
jmp
mov
jl
push
repnz
or
cmp
andl
adc
aaa
flds
cmp
out
or
dec
dec
dec
hlt
outsb
add
xchg
ret
dec
test
xchg
and
loope
sti
inc
scas
andl
inc
or
sub
rorl
movsb
test
pop
jmp
mov
or
lds
push
dec
lock
mov
das
das
cltd
jno
sti
or
adc
xor
subl
pop
fisubrl
sbb
inc
sub
and
std
rcrl
inc
scas
jmp
icebp
sub
call
xchg
mov
adc
flds
push
xchg
fcmovu
movsb
cmp
pushf
sub
fcoms
gs
outsl
repnz
hlt
sub
mov
lret
adc
adcl
sbb
das
filds
push
out
pop
mov
loop
fidivl
jle
mov
pop
shll
jbe
dec
int
inc
add
iret
outsl
arpl
icebp
inc
cmp
stc
and
mov
scas
mov
ss
mov
mov
pop
popf
mov
xor
outsl
push
inc
andl
xchg
cltd
sbb
dec
mov
xor
mov
add
ljmp
xchg
imulb
jns
ret
jbe
pop
into
notb
and
and
sub
dec
xor
hlt
cwtl
fcmovnu
es
sahf
add
mov
pop
cmp
testl
lret
ss
adc
push
xchg
fists
movsl
movsb
push
inc
scas
pop
adc
inc
and
int
cltd
mov
adc
xchg
xor
call
push
inc
stos
push
nop
push
lahf
xchg
lahf
mov
repnz
movsl
push
insl
or
jp
mov
push
lock
adc
loop
push
dec
test
inc
cmp
es
lahf
push
test
pusha
mov
test
fdivrs
fcomp
mov
xchg
aam
xor
testb
push
test
addb
gs
jbe
nop
out
jnp
cld
jns
pop
jge
mov
mov
cmp
les
enter
daa
lock
sub
sub
push
xorl
adc
stos
mov
inc
nop
pop
mov
adc
inc
in
adc
pusha
cwtl
mov
insb
mov
insb
inc
adc
test
stos
out
imul
jl
jge
add
cltd
clc
mov
call
dec
test
sbb
outsl
xor
mov
icebp
pusha
pop
scas
repz
leave
fadd
xor
sbb
add
cmpsl
outsb
xchg
lahf
enter
mov
mov
inc
inc
fidivrl
sub
xchg
mov
lcall
pop
mov
push
mov
lods
aaa
lea
jne
fstpl
cltd
or
push
xchg
mov
mov
lods
dec
into
push
and
pushf
mov
into
cmp
repnz
int
inc
sub
int3
repnz
mov
cld
jle
inc
pushf
inc
enter
outsb
lss
xchg
jnp
notl
repz
popa
jb
add
jmp
jge
gs
das
dec
cli
and
lock
jb,pn
into
bound
sbb
sbb
jo
fidivl
adc
jae
or
lret
add
sarb
mov
mov
sub
inc
inc
dec
mov
dec
je
push
popf
loop
clc
imul
hlt
cmp
adc
out
and
adc
cli
les
test
scas
rcr
jecxz
stos
jae
in
xlat
cs
movsl
lret
mov
insl
pop
loope
fdivrl
jns
dec
cmp
sub
bound
sub
adc
movsl
xchg
dec
cltd
push
in
js
mov
jno
es
and
cmp
pop
mov
es
push
cltd
cmpsb
push
cmp
ss
cmp
cld
jno
or
sbb
repz
outsb
inc
mov
jmp
or
or
adc
call
cmpb
pop
adc
in
paddsb
fdiv
cmpsl
test
jo
bound
or
js
push
xlat
call
jmp
add
fsubl
test
imul
out
dec
xlat
mov
inc
scas
jnp
rcl
fwait
push
outsl
sub
fidivl
les
push
push
mov
fidivs
or
jnp
stos
clc
pusha
out
es
pop
testb
mov
fdivrl
adc
inc
push
push
fisubrl
imul
lods
fldln2
cmp
fstps
inc
jnp
sub
out
pop
cmp
adc
arpl
es
sub
pop
sub
jle
xor
sub
mov
sub
add
aam
mull
pop
pop
sub
lea
into
orl
stos
mov
jg
jg
xchg
xor
pop
std
in
cltd
jg
add
jp
fwait
mov
sarb
shl
repz
into
push
out
push
bound
mov
push
pushf
movsl
in
xchg
mov
out
out
xor
loope
cld
xchg
cmp
imul
stc
mov
push
lcall
add
adc
jbe
cmp
movsl
bnd
loope
push
or
nop
dec
pop
ret
fsubl
xchg
int3
fidivl
xor
add
sbb
jo
inc
jecxz
xchg
pop
lahf
lret
stos
cmp
popa
movsb
sub
in
stos
rcrl
iret
decb
ret
xchg
inc
cs
mov
lret
fdivr
and
sti
in
and
jp
in
lahf
cld
or
mov
aas
shlw
push
aas
sbb
repnz
sub
cmc
cmp
mov
adcb
daa
mov
roll
lret
int3
and
cmpsl
inc
dec
inc
inc
adc
xchg
cmp
jnp
mov
xorb
pop
fiadds
addb
and
xor
test
bound
mov
cmpsb
loope
xchg
movsb
mov
jg
xchg
adc
sti
mov
or
dec
xor
mov
loope
icebp
jno
aas
xlat
je
testb
sahf
out
inc
fldl
cmp
xor
dec
pop
sti
test
iret
out
cmp
push
xchg
movsl
add
outsl
int3
cmp
mov
jno
inc
xchg
push
xor
movsb
pop
mulb
je
pop
add
adc
push
sbb
ret
dec
fs
dec
mov
cmp
test
sbb
add
sbb
dec
lret
jmp
pop
stc
pop
inc
or
popf
pop
mov
and
mov
pusha
mov
clc
mov
adc
je
pop
sbb
cld
fsubl
pop
or
lcall
xchg
inc
js
mov
and
test
lea
mov
push
jae
adc
mov
sbb
rcll
cwtl
aas
push
ret
mov
push
and
sub
mov
imul
mov
jnp
movsl
js
adc
ret
mov
test
inc
test
cmc
insb
nop
outsl
inc
jp
or
stos
flds
lret
lods
jp
jmp
jnp
imul
sbb
test
int
add
mov
push
cs
mov
daa
cwtl
push
nop
ss
sbb
outsb
jp
push
aas
adc
negl
cmc
adc
sbb
pop
cli
add
mov
mov
mov
mov
push
mov
push
mov
sbb
aaa
lods
mov
mov
dec
push
mov
cld
inc
xor
or
push
dec
test
cmp
insb
ds
gs
jmp
pop
mov
pushf
and
mov
fldl
scas
jbe
inc
jo
and
xchg
inc
and
cmc
repnz
gs
aam
or
sub
pop
jns
jl
das
cli
jns
pop
pop
out
cmpsb
outsb
imul
addb
int3
repnz
iret
sahf
mov
xor
jg
jmp
cmp
mov
dec
dec
mov
loope
xchg
add
and
nop
sbb
jnp
ljmp
insb
je
int3
mov
jnp
fimuls
dec
inc
pop
cmc
mov
test
data16
dec
fld
mov
dec
add
fnsave
sti
sbbb
xchg
pop
push
mov
mov
xlat
adc
subl
add
gs
shlb
pop
jmp
xor
imulb
ffree
std
js
mov
popa
or
add
lret
fimull
pop
jp
fdivp
pop
push
andb
leave
pop
inc
cmpsb
cli
icebp
gs
or
mov
and
cld
dec
icebp
add
cmp
and
insl
or
adc
pop
subl
xchg
cmp
mov
mov
dec
sahf
sub
nop
loope
call
xor
int
insb
xor
leave
stos
add
sub
dec
sub
cli
insb
out
sbb
lods
js
sbb
jb
push
mov
pop
lods
lret
adc
adc
dec
lret
lcall
add
push
std
inc
sbb
inc
mov
add
adc
adc
aam
mov
push
jge
sbb
cmp
xchg
dec
mov
andb
sbb
pop
cwtl
addr16
test
fbld
push
orb
xchg
mov
jge
push
mov
lock
rorl
fcoms
out
pop
addl
out
loope
shrl
stos
stos
lcall
push
jns
cmpb
pop
cwtl
mov
jl
pop
scas
ficoms
in
call
sub
cmpsl
and
stos
mov
jge
in
jns
jns
fidivrs
ret
cld
nop
jmp
popa
cwtl
lgs
adc
scas
aaa
aad
sub
fdivp
int
leave
mov
or
mov
dec
and
popa
mov
jge
sbb
dec
repz
mov
and
lock
dec
jmp
lret
pushf
sbb
out
pop
stos
test
popf
ret
movsb
in
shr
or
cmpsb
mov
cld
notl
jns
fdivr
rolb
mov
pop
xchg
gs
pop
jno,pt
ja
or
push
sbb
sbb
push
loopne
leave
mov
mov
mov
test
cmpsb
push
mov
jle
nop
sbb
js
xchg
dec
jg
push
jmp
push
or
popa
scas
aam
sub
xor
xor
or
pop
inc
outsl
jle
lret
aam
mov
xor
inc
loop
push
and
add
add
or
sahf
idivl
enter
imul
jecxz
rcrb
es
fs
mov
rolb
sub
inc
and
mov
cmp
fidivrs
or
jno
les
femms
rcrb
xor
cld
inc
jae
sbb
jmp
lds
push
push
lcall
mov
fiadds
push
enter
xchg
lret
dec
xchg
lods
inc
mov
inc
xchg
or
or
subw
into
fadds
pop
mov
sub
pop
insb
rorl
repnz
roll
popf
xor
bound
xchg
arpl
adc
cwtl
sar
mov
les
inc
loope
ss
adc
and
pop
jmp
cmp
and
mov
and
pop
loop
dec
push
push
mov
or
mov
xor
movsl
imul
mov
jne,pn
sbb
jns
inc
mov
adc
xchg
stos
pop
xchg
stc
pop
and
pop
negb
jbe
das
flds
je
insl
leave
cmp
mov
xor
mov
xchg
orl
int3
ret
repnz
sub
orl
sbb
mov
jns
fxch
mov
pop
adc
or
xor
pop
push
adc
mov
test
mov
out
testb
cmp
and
subb
hlt
addr16
mov
dec
shrl
xchg
xlat
xchg
sub
sub
mov
jb
sub
xlat
push
repz
ss
mov
insl
mov
dec
clc
mov
mov
push
cmp
xlat
stos
mov
ds
in
imul
scas
xchg
dec
add
shll
and
push
into
insl
cltd
mov
add
ja
lds
add
sbb
push
mov
cmp
xchg
fbld
int3
push
jo
jl
ja
sbb
xor
sbb
xchg
fmull
xor
mov
sub
mov
jmp
fnstsw
add
mov
pop
jne
sub
xchg
testl
andl
mov
jle
andb
mov
loop
pop
mov
daa
hlt
lock
shlb
pop
dec
dec
int
ret
repz
mov
fimuls
mov
imul
xchg
mov
in
sub
ljmp
dec
repz
push
xor
xlat
ret
cmpsl
mov
jns
jns
in
hlt
cmpsl
das
mov
or
mov
repnz
pop
iret
sbbb
or
jl
fsubr
pushl
loopne
push
in
popf
lods
pop
lcall
lcall
movups
mov
mov
mov
mov
stos
mov
pop
das
xchg
push
push
sbb
dec
imul
ret
sbb
add
mov
jecxz
adc
push
xchg
lret
sub
mov
pop
dec
pop
inc
pop
andl
repnz
pop
sbb
jmp
and
push
insl
jecxz
fldl
aas
push
and
test
scas
insl
adc
cli
outsl
and
jbe
loop
in
push
cltd
jle
adc
jp
jae
jb
push
cli
insl
lret
std
mov
loopne
mov
stos
in
aaa
add
test
push
pop
addl
inc
push
inc
cmpsb
xchg
dec
scas
xor
mov
outsb
xchg
xor
jnp
xchg
into
pop
adc
and
sub
and
jg
push
test
insb
mov
cmpsb
icebp
iret
cmpsb
pop
int3
dec
andb
xor
cmp
jbe
bound
cmp
aas
and
pop
mov
fists
pop
add
mov
jp
leave
push
fisubrs
insb
in
inc
sub
mov
dec
pusha
xor
adc
cmp
popa
adc
not
sub
aas
dec
mov
mov
aad
mov
frstor
push
xor
lcallw
xor
fcompl
pop
orl
adc
mov
sbb
repnz
push
shll
adc
lret
call
outsl
lret
push
loop
push
jg
push
mov
mov
xor
fimuls
je
cwtl
jle
push
mov
fists
or
inc
pop
fisubl
push
and
loope
push
sbb
mov
sub
data16
mov
jecxz
rcl
in
dec
or
mov
fcomps
fdiv
rorb
stc
sub
scas
pop
lcall
ret
pop
add
cs
push
fwait
mov
dec
or
das
std
rcrl
push
mov
xor
push
mov
pop
mov
push
int3
pop
test
aam
push
sub
and
leave
or
jl
call
std
pop
out
cmc
and
call
mov
lods
push
jg
iret
push
lods
jbe
mov
cmc
jb
mov
dec
pop
inc
lds
ret
test
pop
data16
mov
sbb
xchg
ja
out
inc
push
lret
ds
xchg
ljmp
dec
test
push
cmpsl
in
mov
add
ds
out
mov
cmp
jp
add
cli
cmp
sub
outsb
dec
and
pop
int3
sub
add
xchg
stos
mov
out
faddl
xor
loop
xchg
leave
repz
add
aaa
enter
and
sbb
inc
rclb
mov
pop
negl
aam
adc
mov
push
or
xchg
mov
mov
mov
lcall
dec
push
mov
loopne
fidivrl
cltd
lods
ljmp
arpl
js
sti
mov
call
lock
mov
add
data16
into
out
leave
hlt
daa
add
pop
in
add
xchg
rcr
mov
out
call
mov
lcall
fsubr
mov
outsb
dec
dec
sbb
mov
iret
test
cli
xchg
mov
pop
xchg
loope
and
mov
adc
xor
subb
sbb
dec
aas
mov
das
and
mov
aad
int
pop
int3
insb
data16
push
mov
ljmp
jno
std
dec
lods
rcll
das
sub
out
sbb
shll
sbb
call
xchg
and
cmp
jno
xchg
repz
jns
mov
xchg
aam
or
xorb
cmp
fs
sarl
js
cmp
call
in
aad
or
shl
sbb
shrl
adc
fidivrs
pop
mov
ficoml
mov
xchg
call
insb
pop
into
adc
pop
adc
scas
daa
dec
sbb
xchg
xchg
iret
cs
rcll
hlt
arpl
push
js
imull
xor
sub
stos
push
and
inc
xchg
into
and
xchg
lret
mov
sub
xor
ret
enter
lds
inc
fs
mov
mov
pop
mov
cwtl
jl
mov
lcall
push
push
js
shlb
jbe
sbb
shlb
mulb
jo
cmpsb
push
pop
aas
inc
sbb
ds
aam
out
add
outsb
ret
ljmp
pushf
and
or
xor
sbb
aaa
les
adc
jl
fcmovbe
es
sub
pop
iret
ss
nop
movb
sbb
mov
flds
or
cld
mov
adc
mov
in
fdivl
std
ds
fdivrs
mov
lahf
clc
jmp
jae
mov
jecxz
popa
push
push
js
mov
dec
incb
sub
jbe
dec
pop
insl
fbld
push
ret
out
aas
sub
cmp
sbb
mov
adc
inc
inc
stc
push
push
mov
xor
lea
aas
push
imul
pusha
pop
orl
mov
and
xchg
jmp
cmp
cmp
jns
add
bound
test
aas
pop
outsl
mov
cmp
loopne
dec
xchg
fdivl
dec
mov
xchg
pop
movb
insb
mov
jae
fidivrs
data16
sti
xchg
cmp
ja
fwait
xor
push
push
cs
xor
dec
xor
adc
std
pop
cltd
scas
or
and
dec
mov
adc
es
xchg
cmp
fs
xchg
sub
cmp
shlb
dec
jl
jb
add
fistps
pop
add
push
stc
stos
add
fcoml
fwait
jecxz
int3
outsl
mov
and
sbb
and
insb
aam
clc
pop
repnz
repz
popf
leave
inc
imul
std
mov
bound
jl
cwtl
ss
outsl
in
cmp
push
sbb
or
outsb
ljmp
xor
cmp
mov
scas
mov
mov
fidivl
push
data16
test
dec
jo
add
icebp
push
stc
adc
std
dec
addr16
or
jl
sub
xchg
outsl
push
sub
aad
std
xchg
and
test
cmc
aas
int3
push
pop
sbb
mov
push
pop
adcb
fistpl
jp
shrl
push
loop
into
mov
fs
stos
jo
jbe
insl
adc
mov
xor
les
push
cmp
mov
std
mov
sti
jmp
fdiv
xchg
jne
and
pusha
imul
push
in
popa
cli
lret
mov
pop
jae
inc
cmovae
jmp
xor
test
pop
push
nop
rolb
das
xlat
dec
pop
movsl
pop
div
push
in
xor
lret
test
cmp
and
or
lds
sub
mov
and
das
add
movsl
mov
sub
or
push
sub
imul
mov
mov
cmp
stos
hlt
xorl
dec
or
push
xor
stc
pop
sbb
fldenv
adc
mov
fcmovb
adc
in
pop
rol
adc
gs
sub
mov
sbb
pop
dec
lret
mov
push
and
pop
push
pop
fldenv
insb
es
ss
or
jae
jle
mov
pop
mov
test
pop
cmp
sbbl
xchg
call
stc
jecxz
pop
cmp
ficoml
sbb
xlat
into
clc
imul
imul
cmp
and
aas
xlat
ds
push
insb
outsb
data16
dec
push
ud1
mov
cmpsl
pop
js
push
jmp
popf
dec
jp
mov
sahf
push
les
adc
jne
les
or
movsl
cli
pushf
xlat
rolb
push
or
jmp
ficoms
stos
pushf
sbb
pushf
call
daa
stos
je
sti
jle
jne
mov
ja
test
int
gs
inc
xchg
push
daa
push
nop
rcrb
scas
out
push
mov
sub
adcb
sbb
push
mov
jp
jbe
mov
shll
jnp
arpl
mov
ds
dec
inc
gs
repnz
fdivrl
insb
rcrb
fcoms
fisttps
mov
push
dec
jno
mov
sub
out
add
or
ret
mov
pushf
jae
pop
sbb
fstp
mov
mov
ret
dec
ss
or
sub
scas
cmp
in
push
lods
ror
clc
mov
dec
repnz
pop
add
and
rcrl
sarl
xor
mov
negl
out
test
fsubl
mov
add
mov
dec
jbe
jg
pop
ret
push
subb
push
add
xchg
int
inc
ror
xor
call
stc
in
call
jge
xchg
loope
imul
dec
popa
mov
cmp
lock
stos
scas
mov
pop
insl
or
sbb
imul
imul
cli
and
stc
or
repnz
push
add
je
aam
lods
in
inc
jbe
and
xor
mov
or
push
arpl
js
inc
cwtl
and
cmp
push
insl
push
mov
xor
mov
cmpsl
ret
lods
cmpsb
sub
mov
adc
stos
mov
pop
pop
xchg
dec
xor
add
sbb
inc
out
data16
hlt
notl
int3
or
add
push
mov
repz
mov
sub
sub
and
das
out
dec
les
pushf
por
roll
bound
cmp
ss
mov
cld
sahf
sbb
sbb
xor
add
ja
daa
sub
sbb
rcl
jg
inc
or
data16
and
xor
pop
shll
adc
jbe
and
call
lret
xchg
mov
mov
subl
mov
add
rcrb
pushf
insb
push
gs
add
and
daa
or
test
adc
in
test
imul
push
pusha
dec
or
shrb
movsb
inc
xchg
pop
and
jo
jge
std
jo
dec
pop
sbb
jb
adc
adc
pusha
push
sub
lahf
aaa
leave
divb
ds
aad
scas
cmpsb
aas
ret
mov
insb
mov
repnz
inc
repz
or
aas
mov
ds
xchg
mulb
adc
jne
xor
pop
mov
push
imulb
sub
inc
ret
frstor
loop
jle
out
pop
shrl
xor
fistpll
xor
xchg
ds
xchg
mov
push
and
icebp
cmp
and
pop
jmp
xchg
lret
jbe
jge
sti
and
cld
jp
stc
mov
mov
mov
mov
in
imul
add
cmp
cwtl
fcompl
and
or
les
dec
insb
sub
xchg
ljmp
lcall
jg
addr16
add
mov
push
mov
nop
xchg
bnd
dec
fpatan
lahf
outsl
popa
and
in
leave
add
scas
push
or
mov
lods
dec
cltd
sbb
std
jns
xchg
mov
setg
xchg
add
cmpsb
pop
adc
jne
sub
or
jo
push
sub
xor
mov
mov
test
fadd
mov
das
cwtl
or
push
fsin
jp
dec
mov
or
pop
sbb
push
add
sti
popf
nop
or
mov
and
int
mov
push
sbb
fstpt
inc
push
fistpl
shr
xor
pop
xor
push
stc
rcl
jl
mov
insl
cmpsb
sbb
jecxz
inc
inc
or
sub
std
fstpl
in
push
loop
xchg
ret
loopne
hlt
jns
add
rclb
mov
repz
sub
inc
pop
es
and
shl
enter
cmpsl
out
push
push
loopne
or
adc
push
shlb
daa
pushf
ret
sbb
push
cmpsb
imul
jle
ret
ja
fwait
adc
jnp
lods
mov
fsts
out
and
testb
mov
jmp
decl
cmp
js
sbb
repnz
xchg
xor
and
sbb
inc
lock
cmp
repz
mov
call
xchg
inc
fwait
jecxz
sbb
out
inc
jp
ret
into
fcmovnb
lea
jle
push
mov
mov
xchg
repnz
insl
bound
push
enter
and
in
shlb
mov
enter
push
es
push
xor
jae
cli
movsl
push
adc
stos
push
pop
jnp
cmpsl
mov
sti
xchg
dec
push
cs
push
cmpsl
sarl
into
fdivl
bound
adc
xchg
stos
cmp
loop
or
add
sbb
mov
xchg
mov
inc
ljmp
shll
or
dec
out
mov
mov
lret
loopne
sub
mov
test
push
ss
jecxz
in
pop
and
ds
cmc
and
and
test
lods
test
xor
push
mov
shlb
outsb
inc
dec
std
cmp
ret
cmpsl
hlt
hlt
mov
in
mov
inc
sbb
ds
pop
cmpsl
cwtl
sbb
lods
fwait
or
pushl
test
mov
arpl
addl
orl
ljmp
inc
lods
and
pop
pop
add
push
and
sahf
sub
testl
les
lods
cmp
jg
icebp
lods
mov
out
mov
pop
lret
or
outsb
iret
inc
mov
mov
mov
pop
cld
pop
xchg
clc
ja
pop
sti
inc
daa
lret
icebp
sub
clc
stos
orb
sub
pop
xlat
sub
cltd
cmp
xchg
or
pop
xchg
push
stos
call
cmp
or
or
stc
in
or
jmp
adcl
jp
cmc
scas
and
mov
and
nop
imul
cmpsb
jmp
xchg
out
lock
shlb
inc
data16
punpckldq
adc
sub
xor
cmpsb
jo
mov
sar
inc
xchg
xchg
stc
or
clc
lea
pop
fistpll
lea
jo
add
sbb
sub
clc
inc
mov
inc
cmpsl
aad
and
lahf
test
loop
mov
hlt
movsb
sub
xor
fisubrs
jnp
sbb
mov
mov
xchg
scas
adc
cmc
add
jmp
cmp
dec
cmp
push
icebp
dec
dec
sahf
inc
cli
push
inc
movsl
call
lea
mov
inc
out
pop
enter
jno
mov
es
js
outsl
popf
testl
bound
mov
jbe
roll
sahf
lret
pop
in
jbe
mov
push
lret
push
rcll
test
outsl
je
mov
dec
imul
out
jae
cmp
push
mov
xor
mov
cmpsl
xchg
and
jge
xchg
movsl
push
mul
or
sbb
sub
xor
repz
cmp
hlt
fdivp
add
jp
or
jnp
sahf
add
lret
cmp
lahf
xchg
and
inc
mov
mov
mov
xor
mov
in
jbe
push
ret
cs
ds
cmp
pop
sbbl
xchg
sbb
ret
orl
icebp
int
mov
outsl
pop
pushf
daa
lock
pop
push
cli
sbb
inc
outsl
aad
outsl
jle
cli
outsl
in
ficoml
fidivs
cwtl
stc
jb
lret
jecxz
fmull
fs
mov
clc
popa
out
mov
xor
cltd
mov
repz
ljmp
push
xor
mov
addb
dec
sti
jmp
iret
imul
jbe,pt
xchg
xchg
stos
int
loop
push
dec
lea
aam
faddl
sbb
jle
idiv
cmc
mov
nop
int3
mov
sbb
dec
jle
shr
fcmovu
jmp
mov
add
les
inc
pop
or
repz
bnd
mov
mov
out
add
enter
mov
inc
das
insb
imul
test
add
scas
in
rclb
sub
mov
stc
mov
repz
sbb
dec
outsl
push
ret
push
cltd
xchg
adcl
adc
push
loop
push
nop
addb
lret
lahf
call
inc
lahf
xchg
repz
adc
outsl
cs
mov
filds
cmpsl
dec
sbb
lret
rcll
leave
cmp
test
cltd
cmpl
imul
lret
outsb
in
int
xchg
jbe
dec
sbb
jge
in
movsl
pusha
jne
pop
cli
out
ljmp
ret
mov
ffree
inc
dec
ret
push
mov
xchg
pop
push
stos
add
dec
and
sub
mov
xor
mov
fstpl
push
arpl
or
sub
movsb
xor
mov
cld
iret
xchg
stos
dec
mov
xor
stos
subl
xor
xlat
stc
inc
fnsave
xchg
mov
jns
scas
mov
sub
lods
and
add
push
mov
mov
dec
faddl
jl
jne
hlt
les
sbb
adc
mov
movsl
pushf
pop
fnstcw
shr
bound
mov
fsubrp
sub
cmp
cmp
mov
push
mov
rorb
inc
adc
shll
sbb
orl
mov
dec
inc
jecxz
push
idivb
cmp
cld
mov
frstor
fldcw
nop
push
repnz
xchg
mov
dec
aaa
int
mov
dec
push
sbb
data16
adc
dec
xchg
pop
mov
shrl
xchg
jnp
or
mov
scas
cmpsl
jb
test
icebp
or
xor
inc
repnz
mov
xor
push
lods
lahf
inc
cmpsb
cs
mov
pop
leave
test
adc
push
mov
sbb
add
pop
mov
cmc
orb
adc
lahf
xor
jns
rcl
outsl
mov
xor
cmp
sti
and
xchg
adc
jne
inc
rorb
pop
and
neg
and
outsl
mov
pop
aad
scas
pop
imul
mov
movsl
mov
mov
cmp
pop
jns
nop
fldl
dec
jecxz
mov
nop
fisubrl
mov
lds
loope
call
insb
fcoml
mov
sub
test
lea
sub
mov
jecxz
data16
cwtl
aad
js
pop
mov
mov
insl
xor
test
fnstcw
outsl
stc
xchg
gs
or
or
in
ds
mov
inc
imul
pop
in
sbb
pushf
pop
imul
fsubs
pusha
and
cmp
or
les
int3
ja
cltd
push
mov
dec
out
dec
or
inc
cmp
adc
daa
inc
xor
pop
out
fimuls
outsb
out
iret
clc
stos
mov
or
inc
mov
aad
inc
jmp
ficomps
xor
test
mov
lret
and
in
scas
out
dec
push
sti
or
xorb
imul
scas
scas
jg
mov
fidivl
jmp
jg
inc
dec
shll
incb
push
push
adc
int
inc
je
and
sbb
cmc
inc
xor
loopne
dec
cmp
cmp
cmp
mov
fnsave
imul
jno
inc
jg
sbb
out
sti
test
push
xchg
scas
pop
xchg
add
push
sub
js
test
xchg
pop
cmc
fildll
fistpll
popa
inc
rcrl
inc
and
ljmp
daa
cmp
mov
mov
pop
cmp
lods
jp
lret
inc
and
in
clc
int3
sbb
inc
cwtl
out
mov
xchg
jns
leave
out
gs
jo
cli
sbb
xchg
lods
add
test
aas
test
and
xlat
scas
aaa
pop
xchg
int3
jg
cmp
and
pop
shlb
jle
lds
inc
add
jle
cmpsb
sbb
enter
mov
lret
mov
sbb
loop
adc
scas
sbb
or
jbe
rolb
jle
dec
leave
jp
push
jecxz
addl
adc
jg
sub
adc
jno
aaa
and
push
mov
sarb
pusha
je
outsb
movsl
or
ret
movsb
enter
lods
sub
cmp
in
jmp
cmp
mov
addl
lcall
mov
test
cmpsb
mov
dec
cwtl
pop
and
xor
and
mov
add
addl
insb
fwait
xor
rcrb
adc
or
or
push
xlat
dec
mov
loope
adc
inc
jg
mov
cltd
stc
iret
popa
stos
outsb
xor
fidivrs
add
insl
mov
pop
or
jb
cmc
mov
jle
aas
and
xchg
fs
mov
aad
enter
mov
jbe
mov
cmp
sub
mov
into
pop
or
mov
inc
fs
repnz
stc
test
ret
imul
mov
sbb
or
decl
pop
addr16
gs
aam
std
ds
cmp
fldenv
mov
cmpsb
test
adcl
and
or
popf
sub
in
mov
push
dec
mov
movups
and
lret
js
aad
and
aas
push
dec
fstpl
inc
push
ja
lods
xor
cmpsb
enter
shrb
iret
leave
jo
sub
iret
stc
mov
push
pop
int3
fisubs
and
mov
loope
adc
addr16
in
sub
das
cmp
inc
inc
test
adc
pushf
or
pop
inc
jne
pop
pop
dec
pavgb
scas
jnp
test
or
ret
push
call
xchg
data16
cmp
in
and
cld
mov
add
int
out
repz
icebp
xor
push
push
and
in
jmp
cltd
mov
jle
sub
std
incb
adc
pop
lret
push
and
jmp
cmp
xchg
mov
mov
push
cmp
mov
fcmovnb
jl
out
lock
cmp
mov
in
xor
xor
xor
push
add
divl
jnp
mov
jo
mov
mov
xchg
sub
cmc
pop
shrl
jnp
adc
lret
insl
adc
xor
mov
pop
scas
or
and
adc
jbe
repz
mov
xor
cmp
daa
int
test
pop
ds
dec
mov
ja
and
js
in
call
cltd
enter
pop
and
dec
xor
pop
mov
sub
js
aad
mov
pop
test
add
lcall
mov
push
andl
out
mov
mov
sub
scas
xor
sbb
add
mov
mov
adc
ljmp
xchg
add
sbb
test
jl
pop
pop
movsb
lret
cmp
rolb
jns
cld
xchg
cmc
and
push
cmp
les
insb
sub
mov
stc
pop
lods
mov
mov
das
pop
inc
imul
and
in
pop
dec
icebp
aas
fmull
and
or
inc
fisubl
mov
stos
pusha
xchg
mov
fnstenv
rcl
lds
or
adc
mov
xor
mov
out
pop
enter
adc
fbld
ss
std
icebp
loope
sub
sbb
push
jns
inc
mov
das
inc
dec
in
cmpsl
out
out
ret
fiaddl
stos
mov
xorl
in
ja
push
lock
pop
pop
jb
add
bound
popf
out
jp
adc
lret
sbb
lock
add
int
shll
lods
dec
repz
inc
adc
add
pop
push
sub
push
ljmp
das
sub
outsl
pop
repz
push
dec
pop
inc
popf
pop
in
in
adc
fildll
fbld
test
mov
push
inc
mov
int3
adc
inc
inc
data16
xchg
mov
adc
or
and
out
bound
jmp
xor
jg
imul
pop
mov
push
fwait
cmp
psubd
sub
xchg
push
cltd
cwtl
inc
mov
es
pop
mov
cld
jns
stos
pop
mov
scas
sbb
arpl
mov
xor
and
cld
insb
mov
mov
repz
in
fstp
lret
fs
into
sti
mov
int3
push
icebp
mov
jae
mov
pop
std
dec
fildl
mov
out
in
pop
cmpb
mov
imul
arpl
cwtl
call
popf
cmp
stc
xchg
in
lds
roll
push
add
jo
push
jbe
adc
xor
push
dec
push
mov
or
jns
ret
adc
mov
mov
inc
int3
mov
ret
cli
mov
loope
push
jnp
xchg
shld
loopne
popf
aaa
lret
iret
and
and
xor
dec
jp
shlb
jge
sub
imul
inc
mov
sahf
ljmp
test
xchg
lods
fcmovb
test
nop
xor
repz
stc
into
iret
inc
out
mov
lock
sbb
imul
push
ljmp
les
pusha
xor
nop
or
test
jmp
and
add
hlt
js
repz
fs
mov
push
jg
out
and
lcall
add
clc
xorl
adcb
mov
mov
xor
andl
push
sbb
adc
movhps
lret
loop
sub
adc
mov
ja
adc
incb
inc
shlb
dec
iret
addr16
idiv
jns
cmc
mov
outsb
mov
mov
in
push
outsl
xor
outsb
arpl
mov
push
dec
stos
xor
mov
jl
mov
add
push
pop
aas
pop
cmp
ljmp
lods
push
lcall
jle
into
push
xor
ret
and
lahf
push
sub
inc
adc
stc
inc
in
jbe
in
and
scas
icebp
dec
iret
pop
addr16
into
int
mov
lods
sub
pop
sub
ja
dec
iret
xchg
mov
cmpsl
int3
das
stos
xor
add
nop
loopne
orb
xor
rorb
jge
or
pop
mov
test
pop
arpl
icebp
pop
stos
iret
clts
xorl
mov
lds
sbb
gs
mov
mov
fwait
xchg
jg
popf
mov
and
push
cmpsl
jo
inc
mov
enter
jno
sbb
add
insb
push
out
mov
jbe
nop
scas
lcall
jl
xor
pop
mov
fistl
jb
idivl
jne
andl
push
jbe
int
bound
xchg
sbb
dec
adc
and
icebp
es
pop
mov
repnz
sub
mov
fldl
scas
mov
pusha
mov
lea
sbb
adc
cmpsl
cmp
jge
cli
pop
fbstp
gs
ret
sbbb
rcll
clc
rcrl
cmp
mov
arpl
xlat
sbbb
aam
or
and
mov
leave
loop
gs
inc
adc
sub
cmp
pop
loope
lock
out
icebp
std
imul
mov
test
and
ret
in
dec
sbb
push
xchg
fsubs
movb
icebp
int3
pop
subl
push
fnsetpm(287
mov
add
cmp
push
sub
sub
outsl
fwait
sub
xchg
dec
repz
mov
xlat
lret
pop
lds
mov
out
fists
aam
insl
add
or
loope
and
lret
sub
not
push
mov
adc
pop
cmp
cli
xor
pop
mov
and
push
push
movsb
mov
pop
dec
sysexit
fsubl
lcall
pushf
in
insb
cmp
mov
jbe
pop
xchg
out
in
xor
xlat
or
cmp
outsb
out
dec
test
imul
lret
xchg
or
push
dec
mov
push
pop
cmp
sbbl
inc
xchg
xor
add
loope
pop
push
xchg
mov
insb
and
jg
mov
mov
shll
div
sub
lods
lock
mov
push
mov
scas
fisubrs
fisttpll
imul
mov
mov
adc
jmp
mov
jg
pop
scas
dec
sub
faddp
fisttpll
pushf
adc
push
and
popa
sub
clc
in
dec
and
and
xchg
lret
inc
test
nop
cmpsl
pop
outsb
sbb
adc
int3
test
lret
mov
dec
add
xor
inc
dec
pop
mov
repnz
xor
rorl
lds
clc
push
clc
sahf
or
cmpl
loope
sbb
sarb
in
sbb
ret
cmp
les
flds
les
jno
add
add
push
ss
xchg
xchg
cmp
aas
sub
cmpsb
xor
inc
ljmp
scas
mov
repz
loopne
cld
mov
movsl
pop
dec
jp
and
repnz
cmc
dec
jns
sub
xor
cmpsl
in
sub
inc
mov
jns
pop
loop
push
adc
cmp
jge
icebp
scas
movsb
sub
mov
sub
and
jo
adc
and
dec
mov
xchg
stc
mov
ficompl
xchg
cli
push
insl
inc
adc
add
dec
ret
push
push
push
ja
fldenv
fs
adc
xor
jmp
orb
stc
xor
xchg
push
fisubl
add
cld
test
das
lock
jge
daa
mov
cmpsl
mov
jae
or
add
mov
add
ret
repnz
jl
ret
lret
aad
inc
and
adc
and
cmpsb
sub
pop
push
cmp
jo
or
inc
les
pop
insl
loop
std
push
inc
mov
aas
sbb
testb
ret
les
insl
mov
movsl
xlat
test
negb
addl
loop
adc
je
shrl
dec
fisubrl
push
dec
je
rol
shl
aad
push
push
adc
sbb
pop
lahf
js
fsubs
sbb
add
adc
inc
lock
out
jns
movsl
cmp
inc
imul
ret
add
mov
fimuls
cld
adc
dec
scas
clc
jecxz
sbb
jnp
cmp
test
and
or
mov
aam
imul
xchg
clc
push
and
mov
xor
mov
cltd
in
mov
sub
neg
insb
cs
jne
lods
loope
sti
cltd
andb
outsb
jecxz
pop
std
sub
out
nop
pop
ficoms
jl
loope
cmp
fs
push
lret
rcrb
xchg
sbb
xor
out
mov
mov
xor
pop
mov
sarl
out
cmp
into
imul
mov
cmp
std
add
push
test
ja
js
shl
stos
cmp
je
cmp
mov
mov
imul
xchg
cli
push
push
stc
cwtl
ljmp
push
imul
shll
int3
xchg
sbb
xor
inc
jae
scas
orb
outsb
idiv
sbbl
xchg
fsub
insb
dec
cmp
sbb
nop
js
out
and
roll
xchg
sub
ret
loopne
jg
cli
out
cmp
into
add
aad
shlb
xor
push
es
xchg
clc
jno,pn
xchg
fsubs
sub
sti
aad
inc
push
out
popa
aaa
inc
mov
lret
jge
dec
mov
stc
sahf
testl
outsl
in
dec
sub
stos
mov
out
mov
inc
clc
js
cmp
or
imul
cltd
shll
popf
mov
loopne
addl
and
sub
sahf
aas
and
aad
icebp
call
inc
mov
pop
cmc
mov
xor
jno
jle
mov
inc
lcall
xchg
add
push
movsl
popf
fistpl
roll
cmc
xlat
imul
test
leave
sbb
outsb
add
mov
dec
scas
xchg
movsb
xchg
inc
push
mov
iret
xor
mov
sbb
aaa
aad
mov
xchg
push
mov
pop
loopne
xchg
xorl
mov
xchg
dec
push
fistps
pop
pop
jle
decl
shll
aaa
and
or
jns
mov
testl
outsb
or
cwtl
stos
cmpsl
push
xor
push
je
test
xlat
sarl
loopne
pop
stc
hlt
sahf
push
inc
xchg
es
and
mov
shll
dec
jle
loop
pop
jecxz
cs
adc
stos
repnz
ljmp
mov
mov
mov
push
add
bswap
cs
orb
pop
cwtl
mov
adc
mov
stos
lods
adc
repnz
push
cmp
jbe
mov
cmp
dec
hlt
test
inc
and
jo
scas
push
mov
fwait
mov
call
mov
in
lret
call
sub
clc
imul
dec
sub
fs
or
inc
or
fisttps
sub
orl
fwait
jl
xchg
add
jg
xor
test
inc
out
xchg
call
test
mov
cmp
and
or
or
xchg
sub
xor
push
add
jmp
es
jno
divl
scas
pop
adc
jae
inc
out
notl
mov
rolb
popa
jl
decl
xchg
loopne
aaa
in
mov
addr16
js
push
test
cmp
push
ljmp
and
call
lods
lock
sub
bound
inc
fs
fldcw
std
dec
scas
inc
sahf
jle
xor
imul
xchg
pop
push
pop
outsl
test
pusha
jb
pushf
lss
cmp
aad
fldcw
pop
mov
pusha
push
cltd
inc
pop
inc
or
sahf
adc
bound
and
jno
movsl
hlt
cltd
jecxz
sub
fildl
pop
mov
insl
setnp
adc
adc
and
cmp
cli
je
xchg
sbbl
sub
mov
pop
sbb
adc
jp
dec
fwait
inc
shl
inc
xchg
xchg
mov
pop
leave
lcall
inc
mov
adc
mov
mov
sub
adc
outsl
gs
xor
inc
mov
out
rcl
popa
cwtl
rcrb
push
push
mov
xor
insl
ds
in
and
lock
insl
mov
mov
push
pop
mov
jl
pop
sub
sbb
pop
adc
xchg
lods
cld
mov
jecxz
in
xor
and
jge
lret
push
inc
jecxz
inc
ss
ja
rcl
lret
jno
push
or
lahf
jmp
adcb
or
sub
cmp
cmp
subl
fcmovnu
mov
jmp
push
adc
scas
rclb
std
jb
and
sub
call
cmp
dec
aad
sbb
sub
pusha
out
jae
mov
addb
cli
pop
mov
loopne
pop
add
cmp
cmp
adc
stc
cld
test
ja
test
or
jbe
push
loopne
js
repz
fwait
loop
divb
test
push
iret
add
or
mov
mov
ret
jns
jbe
cmp
ds
mov
add
sbb
push
add
je
and
pop
int
mov
test
pop
xchg
popa
ss
mov
out
mov
add
outsl
or
inc
push
out
push
pushf
fsubs
and
push
cmpsb
jl
insl
sbb
jne
add
js
fistpll
jbe
ja
movsw
test
andb
mov
into
and
xchg
cmp
dec
clc
or
inc
ljmp
sub
fisttps
je
out
sub
ljmp
push
pop
adc
adc
fcomps
std
leave
jbe
repnz
jae
xchg
idivl
push
ss
shrb
dec
pop
enter
inc
jl
inc
add
rcll
inc
mov
aaa
jae
pop
lods
sbb
pop
outsl
xchg
pop
fidivs
faddp
in
jnp
out
fcmovnbe
sbb
mov
sbb
mov
xchg
loop
jns
or
repnz
xchg
stc
leave
pop
sub
sub
push
aad
testl
jbe
pop
popa
inc
pcmpeqw
add
addr16
cltd
repnz
push
enter
sub
mov
mov
lcall
push
mov
xchg
pop
mov
test
dec
mov
mov
mov
in
cmpb
fwait
bound
dec
push
imul
int3
popf
sbb
pop
in
jecxz
pop
in
mov
jns
fwait
shlb
loop
mov
repz
cli
jp
cs
push
jno
loope
mov
int
outsl
mov
sbb
mov
ljmp
xor
pop
sbb
or
and
mov
popf
roll
shr
popf
xor
ja
mov
nop
movsb
out
xchg
jns
sbb
leave
pop
pop
and
into
scas
imul
or
scas
out
stc
xlat
fnstsw
lods
add
cmc
shrb
not
dec
xchg
pop
nop
xor
inc
int
jbe
loop
jo
das
add
pop
mov
mov
cs
fdivrs
test
imul
xor
jle
mov
push
inc
arpl
adc
scas
mov
dec
movsl
addr16
push
jb
jp
inc
adcl
mov
jbe
fistps
xchg
ret
mov
xchg
cmp
sbb
outsl
and
mov
iret
test
add
pop
popa
jnp
call
mov
push
pop
dec
cmp
adc
cmp
testb
pop
je
les
and
pop
xchg
cmc
and
icebp
test
xor
jle
add
je
js
aad
ja
dec
lret
jo
std
inc
mov
push
aas
jge
jb
cmp
jp
cmp
xor
or
lea
es
cmp
rorl
test
push
sbb
insl
nop
test
pusha
add
pushf
sti
cmp
repnz
daa
lea
adc
lret
sbb
push
aad
and
cwtl
out
outsl
notb
out
arpl
lds
xor
lret
dec
aam
stos
mov
mov
aad
mov
movsb
add
in
mov
xor
arpl
test
aaa
sbb
repnz
dec
outsb
fidivrl
sbb
jo
fiaddl
pop
in
cli
test
mov
pop
shr
mov
lods
pusha
pop
lcall
cs
adc
fildll
lea
dec
fs
cmpb
pusha
jmp
mov
pop
ljmp
bswap
aas
sbb
adcl
aaa
iret
insb
sub
mov
imul
rcrb
clc
rcrb
mov
add
mov
ror
mov
xchg
sbb
jecxz
aad
shrl
pop
sbb
push
xchg
pop
xor
cmp
popa
mov
jg
add
mov
add
xor
lock
mov
hlt
push
insl
mov
sti
push
add
push
xchg
inc
or
ret
or
lods
mov
mov
jmp
xchg
stc
push
xchg
lret
xchg
push
bound
mov
cmpsb
scas
mov
shrb
xor
push
into
xchg
adc
mov
push
cli
mov
loope
out
sub
testl
ret
in
es
out
add
adc
jle
int
mov
xchg
push
iret
lods
push
popf
add
loope
adc
mov
lret
in
pop
ds
addr16
loope
or
je
stos
cld
lods
jno
mov
push
nop
test
inc
push
push
mov
push
fucomp
stc
mov
ljmp
add
lods
inc
jo
pop
mov
dec
mov
mov
mov
sub
mov
push
mov
ljmp
clc
mov
popf
jp
fbld
mov
int
pop
testb
hlt
mov
icebp
jmp
push
std
std
cmp
cmp
cmp
cld
jns
mov
in
shl
dec
popa
movntq
adc
mov
jne
mov
inc
xlat
xlat
inc
jecxz
or
adc
repnz
lcall
out
jne
add
sbb
pop
insl
das
mov
sbb
sbb
repnz
xorl
faddp
jp
cltd
push
rclb
pushw
mov
repz
inc
and
cmc
sub
shrl
pop
cmp
xor
pop
xchg
or
js
mov
mov
test
push
xor
movsb
push
mov
std
ret
dec
ret
popf
lahf
mov
add
adcl
pop
fcomps
mov
imul
nop
sub
jle
pop
inc
repz
xchg
mov
inc
and
pop
and
out
lret
bound
mov
cmp
dec
into
jo
mov
jge
push
dec
push
and
lahf
hlt
mov
rcrb
mov
xor
sbb
pop
sub
fcoml
loop
cmpsb
sub
add
mov
or
bound
test
jns
xlat
ret
jb
mov
and
cmp
test
arpl
outsb
movb
lcall
inc
std
add
push
mov
out
jns
in
jae
fistpl
lret
jne
add
xor
cmp
in
je
sub
xchg
out
mov
dec
xchg
and
cmpsb
jp
pushl
cmp
movsb
push
aam
icebp
loopne
jb
lds
push
push
sub
xor
inc
cld
popf
sub
negb
gs
test
sub
inc
into
jnp
test
mov
andl
dec
jle
dec
or
gs
jae
and
adc
stc
sahf
into
lock
add
sbb
test
sbb
and
popa
jl
outsb
aad
enter
leave
or
lods
xchg
popa
push
mov
mov
aaa
lock
add
adcb
xchg
mov
aaa
inc
adc
shrl
jmp
jae
xlat
iret
cli
movsb
and
popa
jmp
fistpll
add
cmp
jle
and
cwtl
loop
iret
mov
inc
aad
jne
cmc
stc
idivl
dec
call
das
ljmp
mov
push
add
stos
mov
pop
int
aaa
sub
xlat
out
fsubr
bound
lods
xchg
adc
gs
icebp
xchg
mov
mov
adc
pop
pop
mov
or
and
adc
xchg
sub
outsl
inc
xor
imul
xchg
add
or
add
jmp
adc
add
data16
test
cmp
pop
add
test
int3
jnp
and
adc
not
cmc
loope
dec
int3
mov
outsb
lahf
pop
xchg
mov
jb
pushf
lock
pop
inc
sahf
mov
data16
test
cmpsl
cmpb
mov
mov
shlb
xlat
cmp
xchg
cli
mov
jge
cmp
pop
fldcw
jl
lcall
lock
bound
cmpsb
cmp
adc
test
ret
add
sbb
and
mov
add
shll
int
mov
xchg
jnp
mov
xor
das
mov
xor
push
mov
push
xchg
and
add
mov
pusha
insl
adc
sub
adcl
mov
repz
inc
iret
inc
leave
mov
cmpsl
loope
push
pushl
lahf
jo
cmp
ss
das
sbb
lcall
push
in
push
jno
add
pop
fcoml
push
dec
add
je
push
mov
dec
out
mov
jl
iret
push
dec
adc
aas
aaa
or
nop
jnp
dec
in
push
xor
test
in
lret
inc
imul
mov
ds
pop
push
mov
sbb
xchg
loope
insb
movsl
push
mov
ja
jbe
adc
inc
jp
icebp
cli
pop
sarb
push
mov
out
mov
mov
jge
inc
arpl
je
xchg
sub
jg
icebp
cltd
loop
neg
adc
push
fistpl
js,pn
test
sub
jge
gs
cmp
xchg
imul
and
or
push
push
cltd
dec
shrb
mov
inc
push
icebp
scas
jb
sarb
hlt
subl
idivb
idiv
and
add
add
jo
jae
jle
aaa
mov
test
jp
das
std
add
ja
xchg
or
out
jecxz
push
addr16
push
push
lcall
mov
jge
or
push
icebp
stos
mov
mov
sub
mov
inc
and
negl
dec
bound
out
cs
pop
adc
movsl
and
adc
adc
rclb
and
pop
and
jmp
mov
mov
outsl
push
movb
dec
in
lods
mov
sbb
jmp
scas
gs
in
mov
fbstp
pop
lea
sbb
jo
or
mov
add
aas
test
scas
outsb
mov
icebp
fisubrl
stos
mov
xlat
adc
sbb
sbb
sbbl
lcall
and
aad
not
jecxz
in
dec
cmp
cmp
fisubs
mov
pop
cmp
movsb
xchg
or
sti
cmp
adcb
add
cld
pop
leave
mov
dec
add
adc
insl
daa
lcall
aaa
xlat
or
adc
mov
push
ret
nop
out
or
repz
xchg
sbb
repnz
insb
dec
or
pop
and
pop
inc
add
lock
adc
dec
mov
inc
orl
stc
in
pop
pop
mov
mov
out
test
mov
inc
popf
xchg
mov
jb
xor
sti
xor
sahf
divps
adc
push
sahf
jno
push
sbb
xor
or
add
fidivrl
gs
aas
cmp
sbb
push
sub
pop
inc
jb
outsb
add
test
cltd
and
mov
or
mov
andl
xchg
pop
cltd
je
push
push
fidivrs
mov
jg
ds
xor
push
push
fwait
inc
mov
sub
jno
xlat
popf
or
cmc
inc
cmc
xor
push
sub
xor
xchg
test
js
icebp
xchg
jg
or
fs
adc
jecxz
into
cs
ret
jne
popf
lret
out
pop
pop
jnp
xchg
jecxz
adc
inc
inc
nop
kmovd
dec
mov
xchg
fidivrs
aad
mov
enter
sub
scas
mov
daa
js
aaa
lock
fcompl
enter
inc
les
jl
dec
leave
inc
lods
mov
je
cs
outsb
jl
mov
fcomi
loopne
imul
pop
mov
lret
jle
rclb
push
mov
mov
and
xchg
outsb
gs
addr16
add
ret
das
xchg
cmp
or
cmp
dec
aam
fildl
scas
inc
out
mov
jl
or
pushf
repz
out
sub
cli
pushf
hlt
das
sub
jg
mov
sbb
sti
dec
imull
hlt
aaa
out
daa
xchg
sub
jl
movsl
nop
adc
fiadds
xor
add
repnz
outsl
ljmp
js
mov
add
rcll
insb
movsb
out
cmp
push
mov
in
out
push
stos
cli
jmp
pop
adc
xchg
sbb
inc
pop
hlt
stos
xchg
cmp
and
sbb
js
push
int3
shr
or
pop
fildl
pop
xchg
arpl
rdtsc
incl
push
clc
sbb
data16
xor
arpl
pop
sbb
pop
pusha
mov
dec
cmp
xor
fbstp
enter
pop
out
jp
aaa
in
push
push
subl
cmp
or
pop
push
imul
lods
dec
fnstenv
int3
xor
sti
int
jbe
cmpb
fcmovnu
adc
in
xchg
or
loope
fistpll
movsb
pop
mov
out
sub
and
and
and
call
xchg
sbb
inc
jg
xor
cmpxchg
cmpsb
sub
lret
into
aas
insb
iret
push
ljmp
and
fistpll
push
and
jmp
mov
movsb
or
movsb
dec
add
shll
dec
bound
mov
sbb
scas
xor
jecxz
incb
movb
in
faddl
adc
aam
ret
jne
insl
jb
iret
mov
adc
fcompl
mov
pop
and
cmp
rcll
mov
xchg
pop
jnp
aas
into
fsubp
mov
sbb
shll
sahf
jge
xchg
movsl
hlt
aaa
repnz
fnstenv
push
outsl
aam
out
dec
and
outsl
enter
mull
mov
sub
movsl
xchg
cmp
stos
xor
sbb
neg
push
cwtl
mov
cli
adcl
pop
xor
scas
mov
sbbl
stc
cmp
ljmp
add
fwait
rcll
les
inc
sbb
inc
add
cmpsl
fs
xchg
xchg
or
jmp
mov
ud1
lret
rorl
adc
addl
inc
cwtl
and
les
jecxz
aam
adc
lret
out
iret
rcrl
cmp
mov
movsl
pusha
gs
jns
cmp
js
lods
inc
jns
enter
add
js
pop
jns
sbb
iret
sbb
xor
mov
jp
fildll
sbb
and
jg
sbb
cli
pop
mov
adc
mov
mov
jno
movsb
daa
movsb
dec
aaa
dec
sbb
sbb
sub
out
jbe
jno
xchg
in
pushf
lds
push
push
mov
and
dec
lds
xchg
mov
call
push
mov
sarl
call
ret
adc
add
fsub
and
xchg
lock
ja
inc
jnp
xchg
dec
lea
lods
les
cli
and
push
mov
stos
sbb
push
into
mov
loope
mov
sti
mov
addr16
inc
in
mov
push
nop
popf
xchg
rcll
cmp
inc
nop
orl
mov
xorl
loope
add
xchg
rolb
sub
repz
mov
push
in
mov
sbb
data16
xchg
int
sti
scas
or
sbb
jo
ret
mov
sarl
pop
jle
add
pushf
xchg
shrl
dec
adc
mov
sbb
mov
sub
inc
cwtl
lret
subl
ret
xlat
mov
cs
lcall
xchg
cmpsb
mov
pop
dec
or
or
push
dec
and
sub
xor
ffree
pusha
cmp
aad
inc
inc
mov
push
jns
cwtl
and
adc
jmp
addr16
xor
mov
inc
add
stos
push
dec
mov
jnp
xor
jno
stc
out
jb
cmpsl
and
cld
repz
mov
cmp
insb
lods
not
stos
push
push
out
and
or
add
mov
inc
ja
into
jne
lahf
cli
in
leave
pop
xor
loopne
push
scas
mov
xor
cmp
or
inc
lds
xchg
sub
dec
outsb
pop
imul
out
movsb
mov
mov
enter
lds
rorb
add
les
mov
lahf
leave
nop
add
fsts
xor
adc
ja
sub
out
inc
sahf
sub
jns
or
jl
sub
fisubs
fcompl
jp
cltd
jmp
jecxz
out
bound
std
pushf
sysexit
imul
xor
stos
cmp
enter
bound
mov
push
ret
sub
aaa
push
jno
sbb
ds
sar
jl
jbe
pop
inc
adc
mov
subl
in
mov
test
shlb
icebp
pop
xchg
jo
and
dec
fbstp
neg
sub
push
sahf
test
mov
sti
inc
adc
stos
dec
pushf
sub
jecxz
jnp
xchg
push
dec
jne
nop
xchg
adc
loopne
into
pop
inc
jl
dec
aam
jno
je
xchg
jmp
out
and
and
lock
js
mov
pop
lahf
dec
mov
ret
cmp
xchg
xor
js
inc
sbb
sbb
pop
out
sbb
std
or
jno
push
sbb
nop
cli
cmp
sbb
scas
pop
mov
xor
or
sub
mov
std
mov
xchg
add
mulb
mov
and
jp
in
dec
movsb
daa
in
or
scas
jmp
sahf
mov
std
pop
push
shrb
mov
mov
inc
fwait
mov
mov
ffree
mov
mov
pop
in
cmc
jo
push
dec
jmp
push
pop
outsb
dec
xor
adc
mov
mov
xor
and
aaa
mov
in
shl
jb
mov
xlat
cltd
or
sub
fbstp
cmp
pop
adcb
xchg
std
dec
cltd
sbb
push
and
push
adc
sbb
pop
dec
addl
push
jno
and
cmp
shrl
lahf
adc
out
pop
mov
and
lret
movsb
fdivl
dec
dec
jbe
lds
rorl
dec
push
wbinvd
mov
cmc
mov
sbb
mov
dec
jecxz
stos
sbb
popf
inc
ficomps
inc
xchg
or
jl
outsb
or
sahf
xchg
jns
cmp
or
into
sub
mov
xchg
popa
insb
popf
movsb
cmp
outsl
xchg
jle
loop
pop
mov
xchg
or
imul
add
jmp
lahf
add
mov
jno
or
test
add
inc
jmp
mov
out
push
inc
mov
daa
jno
into
jmp
hlt
cmp
shl
fs
pop
cld
aam
clc
pop
incl
in
pop
sbb
bound
fisubrl
cmpsb
jae
lret
dec
mov
adc
loop
dec
out
cmp
and
sbb
lods
movsb
mov
roll
arpl
jb
inc
jae
movb
fdivrl
push
mov
xchg
inc
add
xchg
mov
mov
rcl
mov
mov
mov
fstpt
ret
push
cmp
mov
cmp
jecxz
mov
mov
sbb
ja
call
or
pop
add
jae
push
jl
out
push
mov
rcrb
shr
fsubl
sub
and
xlat
or
gs
xor
lcall
int
test
stos
mov
mov
addps
bound
mov
jp
sub
jl
jne
cmp
sub
mov
adc
insl
mov
mov
jp
jmp
rclb
add
pop
fucomi
pop
dec
rcll
loop
mov
dec
in
idivb
adc
add
pusha
jns
ret
xchg
test
aaa
cmpb
push
insb
fnsave
pushf
mov
iret
movsl
mov
pop
cwtl
jns
xor
sbbl
mov
sub
lret
fdiv
fistpl
xchg
ljmp
jecxz,pn
sbbl
push
dec
movsb
cmpsl
sub
xchg
cli
mov
cmp
jne
adc
insl
bound
fsubr
icebp
jecxz
sub
lret
mov
mov
arpl
sub
mov
sub
mov
mov
jge
jecxz
inc
test
jb
mov
pop
push
fwait
push
jo
and
or
cli
inc
jecxz
mov
sbb
ljmp
and
lcall
and
or
arpl
xor
xor
fs
dec
inc
mov
dec
dec
xor
das
int3
movsb
aaa
cmp
lahf
and
dec
or
icebp
mov
or
ficoms
adc
icebp
xor
mov
fstpl
push
xchg
inc
fdivs
sbb
jle
outsb
shrl
dec
sbb
xchg
stos
jecxz
lcall
std
xor
pop
cltd
sbb
andb
andb
fisubl
and
test
xor
test
scas
inc
cli
inc
push
mov
stos
adc
mov
jl
mov
stos
add
into
sub
xor
or
and
xor
add
xchg
add
fdivrs
push
adc
jo
aad
ljmp
xor
stos
jecxz
int
mov
fwait
aad
add
xor
ss
lcall
cwtl
iret
pushf
andb
adc
in
aam
jge
dec
fs
data16
bound
sub
or
fnstsw
in
sub
or
stos
es
xchg
aas
loopne
cs
test
fbstp
std
sti
out
dec
xor
in
jle
inc
mov
xor
aam
es
cmp
sub
outsb
negb
repz
jnp
inc
dec
cmp
pop
pop
in
outsb
jno
or
cmp
gs
sub
adc
cmc
leave
cmp
insl
and
jge
int3
xchg
pop
stc
and
loope
sub
cmp
sub
pop
int
leave
ret
hlt
jge
out
arpl
sub
inc
arpl
xlat
cwtl
imul
fisubl
shl
push
aad
dec
adc
mov
lahf
push
fwait
jmp
inc
popa
push
std
or
push
pop
mov
pop
imul
mov
jne
orb
lret
xchg
xchg
repnz
out
xlat
shll
je
pop
push
xchg
xchg
lea
push
mov
lds
pop
dec
push
adc
dec
clc
xor
pop
or
inc
xchg
sahf
sbb
cmp
adc
out
hlt
sub
fwait
stos
js
repz
mov
les
cmp
jbe
aad
mov
in
jno
lods
cmp
arpl
and
dec
jb
cwtl
lea
push
jne
xchg
add
xlat
int
cltd
cld
fisttps
xchg
in
stos
ret
or
sbb
pop
stos
lcall
or
rcr
and
sbb
inc
cmp
jbe
outsl
aas
sub
fbld
cmp
popf
sarb
pushf
jp
test
in
push
pusha
fadd
aam
lods
mov
in
std
mov
adc
jo
lods
sbb
rcl
pop
mov
push
or
mov
fsubs
xchg
sbb
jmp
dec
sbbl
sbb
or
dec
mov
inc
jp
int
mov
lds
push
dec
sbb
adc
and
imul
xor
bound
jae
jecxz
jno
sbb
leave
into
pushf
mov
dec
fwait
out
pop
adc
ds
and
test
sahf
ret
push
pop
pop
into
mov
lahf
lock
iret
push
clc
dec
sarb
iret
out
lret
sub
ss
call
add
cmpl
inc
inc
fists
dec
push
sbb
jbe
cltd
icebp
xlat
out
insb
fs
in
xchg
or
mov
add
stc
mov
repnz
mov
out
jnp
xchg
ret
addr16
cmp
inc
out
test
out
mov
dec
push
jbe
call
xor
shll
dec
out
xchg
push
xchg
xchg
test
xor
add
ljmp
shl
outsb
stc
inc
daa
es
out
out
cmp
sbb
add
adc
aas
adc
rcl
mov
hlt
mov
jno
in
leave
cmp
or
ljmp
xor
test
jno
popf
adc
xchg
aas
or
add
test
xchg
or
mov
shlb
cmpsl
sbb
es
mov
mov
mov
loopne
out
rcr
adc
cmp
imul
push
and
mov
pop
or
into
incb
out
xor
xchg
ret
cmc
xlat
mov
jp
stos
out
stos
fldcw
dec
negl
aaa
and
dec
jbe
out
sub
sub
xchg
fnstsw
pop
sbb
cmp
mov
nop
add
add
mov
mov
add
jle
adc
stos
adcb
jle
fsts
fidivrs
push
inc
xchg
std
imul
mov
inc
ljmp
lahf
pop
xchg
ficoml
out
flds
repnz
lret
cs
lahf
std
fwait
xlat
out
inc
cmp
mov
dec
push
mov
int
aam
cli
add
aas
sahf
mov
enter
or
sub
xchg
xchg
js
cld
xor
jae
pusha
fldl
pop
sub
add
xlat
test
mov
xor
pop
es
jl
xor
mov
inc
scas
popa
mov
lahf
in
and
sbb
xor
aam
mov
fimull
dec
xor
or
sbb
push
or
test
mov
rorb
and
std
icebp
lods
dec
fwait
stc
push
mov
and
cwtl
adcl
sub
adcb
int3
movups
cmpsl
lret
xor
int
dec
lods
int
jmp
ret
sbb
pushw
arpl
cmpsl
mov
insb
mov
and
icebp
xor
adc
outsl
test
mov
sahf
and
dec
pop
inc
push
ficoms
in
outsb
lods
mov
clc
vmwrite
xor
pop
fcompl
or
es
mov
cli
mov
add
dec
cmp
leave
jno
or
fwait
hlt
pop
outsb
push
das
fs
sub
cwtl
jae
test
sub
jo
lods
jne
repz
xchg
jno
jle
jecxz
mov
add
pop
mov
mov
lea
or
push
sub
sti
inc
adc
fcom
loop
rolb
sbb
cwtl
andb
and
jbe
outsb
sarl
sbb
pop
mov
imul
inc
mov
in
xor
cli
mov
push
mov
xor
or
push
xor
push
cs
push
je
in
clc
xchg
cmp
les
adcb
call
idivl
cmc
sub
cmp
dec
mov
sub
cmc
jb
sub
call
imul
pop
cwtl
push
pop
rcrl
and
ds
mov
enter
jo
and
iret
xchg
push
jns
inc
mov
add
and
push
fs
mov
shll
aas
add
test
lahf
xchg
sbb
idivl
mov
cmp
push
fdivl
dec
cmp
dec
xchg
mov
in
aaa
test
push
and
xor
popf
scas
dec
lds
andps
and
mov
cwtl
pop
test
iret
js
add
aam
out
cli
lret
in
call
rcrl
mov
fld1
push
or
xlat
fwait
pushf
sbb
cmpsl
jmp
mov
dec
sbb
addl
add
dec
add
cmp
jecxz
dec
mov
ficoml
imul
mov
and
mov
pop
cmpsb
jle
mov
jmp
mov
pop
mov
inc
dec
xchg
adc
ret
fistl
cmp
out
insb
inc
pop
rclb
int3
daa
in
clc
cmpsl
dec
sbb
pushf
cli
adc
loopne
repz
leave
pop
sarl
jb
add
test
or
in
sbb
mov
sbb
iret
cwtl
pop
notl
sahf
scas
or
enter
pop
cld
cli
mov
pushf
jl
les
and
test
gs
loopne
adc
sbb
add
or
cmpsl
mov
pop
lea
push
ljmp
scas
mov
int
mov
xchg
adc
xchg
jno
xchg
cmp
out
xchg
dec
iret
mov
loope
test
ret
cwtl
push
jl
clc
fldenv
pop
jae
in
out
loop
repnz
ret
mov
das
xchg
xchg
push
add
js
or
add
cmp
in
mov
sub
test
add
icebp
loope
imul
xchg
inc
fmull
out
ljmp
mov
movsl
shll
and
mov
adc
inc
cld
xor
icebp
push
loope
mov
stc
movsb
test
mov
sub
inc
push
mov
mov
dec
fcomps
push
mov
xor
cmp
mov
out
mov
adc
dec
fbstp
add
lock
xchg
jecxz
push
imul
mov
sbb
stos
push
bound
dec
test
push
add
mov
cmp
or
jl
mov
or
adc
add
es
mov
push
xchg
pop
mov
test
xchg
xor
lret
adc
fisubrl
add
icebp
inc
fistpl
pusha
mov
lret
push
adc
jge
pop
jne
das
push
add
pop
lret
test
mov
stos
jae
daa
sahf
dec
hlt
lock
stos
dec
mov
inc
ficompl
cmpsl
dec
dec
mov
rcr
sbb
ja
add
lahf
inc
imul
sbb
push
pop
pop
scas
cmp
imul
xchg
shr
dec
pop
out
ret
pushf
cmpsb
cld
adc
mov
or
leave
push
sub
mov
int
fstp
mov
mov
lcall
icebp
add
mov
push
es
jo
in
leave
xor
pushf
arpl
fisubl
or
adc
or
pushf
mov
jno
subl
aam
xor
xchg
dec
xor
pusha
insl
xchg
dec
inc
jmp
aam
mov
inc
mov
ret
sbb
popa
dec
dec
sbb
dec
adc
cwtl
leave
jbe
pop
jp
int
mov
mov
arpl
adc
sub
dec
ja
in
int3
loop
mov
in
inc
xchg
ja
add
jg
ja
mov
dec
xor
adc
std
pop
cmp
inc
mov
orl
xchg
mov
cmc
inc
push
lods
adc
lds
mov
shl
push
mov
push
push
jg
jmp
movsl
inc
ret
ret
jle
xor
outsb
jl
cmp
in
cmp
and
add
insb
cmc
data16
cli
lds
ret
xchg
js
int
stos
imul
or
ss
mov
movsb
push
or
xor
sub
add
jae
test
incb
pop
mov
sti
and
int3
jg
mov
pop
andb
int3
add
mov
mov
sub
push
mov
inc
lods
pop
aam
into
mov
mov
frstor
cmp
pop
adc
cmp
and
lret
aaa
incb
popf
pop
inc
or
test
std
push
xchg
ret
push
into
shrb
out
xchg
jno
jle
cmpsb
fcompl
inc
test
ds
insl
dec
in
xchg
mov
fstpl
jp
mov
andl
fidivs
pop
cld
mov
dec
xchg
int3
pop
out
add
in
lea
inc
jbe
xchg
push
ss
into
jecxz
jmp
sub
xor
jle
nop
dec
add
dec
pop
ja
orb
fs
inc
sub
sub
ret
sub
enter
ja
mov
adc
in
insl
pop
push
and
icebp
ljmp
xor
out
stc
jg
in
jmp
mov
hlt
nop
mov
jmp
xchg
jb
xchg
cltd
add
cmp
data16
jle
and
adc
popl
push
cmpsb
inc
inc
cli
or
jge
cli
ds
pop
xor
sbb
int
cltd
sub
fildll
les
es
test
repz
fbld
mov
xor
xor
inc
fwait
enter
in
pop
xchg
sub
fucomp
out
sbb
test
push
push
jne
push
shrb
mov
pop
imul
sub
push
hlt
enter
iret
imul
fildl
xor
aad
mov
dec
sub
xchg
test
fsubs
cmp
jbe
shll
arpl
lods
adc
xor
notb
jle
mov
sbb
lods
movsl
cltd
insl
inc
inc
test
jo
sub
sub
pop
leave
push
inc
pop
push
jae
mov
pop
mov
xor
notl
out
xchg
mov
cli
es
rolb
not
xlat
sbb
inc
lea
aaa
jl
mov
mov
nop
push
into
jbe
inc
mov
pop
sub
and
dec
sbbb
jmp
out
push
add
push
sbb
pop
add
imul
mov
jle
xor
and
into
ret
jns
pop
jmp
mov
sbb
push
xchg
sti
mov
and
outsl
ds
cmc
inc
mov
aam
shrb
jns
dec
loop
or
lahf
out
pop
cmpsb
or
lret
sti
inc
cmpsl
xchg
stos
shrl
adc
mov
out
jecxz
xor
and
inc
mov
mov
nop
mov
mov
xlat
dec
jle
inc
jecxz
mov
pop
hlt
jmp
or
iret
mov
xlat
add
arpl
les
add
add
and
xchg
mov
pop
mov
stos
mov
inc
cld
xorb
jmp
jge
dec
and
xchg
insb
popa
inc
fwait
add
clc
adc
add
cmp
jmp
pusha
xchg
sbbb
shl
dec
or
test
lds
mov
inc
or
jne
movsb
cmc
out
xor
xorb
xor
shrl
clc
push
test
pop
test
imul
pop
jae
xor
dec
cli
cmp
mov
lahf
push
inc
jb
shl
xor
in
xchg
mov
das
cltd
cmp
imul
ja
pop
sbb
xlat
insb
cmc
inc
adc
aam
outsb
cmp
in
xlat
adc
iret
dec
cmpsb
ret
loopne
xchg
pop
pushf
mov
pop
ficoms
pusha
cld
jno
sub
aam
cmp
iret
dec
sahf
sbb
pop
lcall
bt
ficompl
xchg
fcmovbe
or
push
or
scas
testb
addl
mov
jbe
int
stc
pop
gs
out
add
jp
pop
mov
adc
cmp
rcll
test
lods
pop
cmp
adc
je
lods
mov
out
or
xor
adc
fwait
lds
stc
jne
jge
dec
aaa
jo
dec
cli
cmpsb
jecxz
adc
mov
mov
mov
ljmp
and
xor
mov
sbb
mov
cs
mov
fnstsw
icebp
ret
inc
test
and
jg
add
int
dec
nop
and
orl
jne
loop
sub
push
dec
out
ljmp
mov
mov
aam
jl
mov
sbb
mov
fadds
aas
ss
sbb
fimull
rolb
dec
out
mov
jnp
fildll
mov
stos
push
sub
lods
movsl
xchg
xchg
test
daa
push
aas
jl
ja
xchg
loopne
mov
pop
xchg
push
pusha
ret
dec
cmp
fmuls
ss
nop
pop
cmp
gs
mov
xlat
mov
jg
sahf
mov
push
enter
lods
insl
adc
adc
popf
mov
loop
push
jp
stc
mov
fmul
imul
cmpsl
clc
mov
lcall
cmpsb
mov
jle
xchg
aad
cmpsb
dec
jp
mov
stos
mov
xor
pop
std
and
imul
nop
lcall
sub
jbe
add
test
in
fmuls
or
xchg
loop
gs
dec
fdivrs
adc
mov
add
pop
fsts
cmp
outsl
xchg
loopne
jns
imul
mov
movsl
mov
rolb
push
and
cmp
and
loope
in
int3
mov
outsb
shrb
xor
mov
les
jae
rorl
mov
mov
fdivl
iret
mov
add
inc
and
xchg
std
mov
cmpb
or
popf
xor
dec
popf
mov
mov
leave
jg
mov
imul
enter
pop
mov
inc
push
or
loop
divb
sbb
and
or
xchg
test
pop
xchg
mov
ret
shlb
out
inc
pushf
addr16
in
mov
rorb
add
pop
and
popf
fwait
jb
stos
rcl
hlt
fdivl
xchg
fsubp
pusha
in
mov
xlat
mov
rclb
lods
pop
ret
hlt
outsl
shll
pop
test
js
dec
add
adc
xchg
ljmp
enter
cmp
adc
sub
sar
sbb
jns
cmc
add
jmp
in
in
je
repnz
ficompl
pop
imul
fs
mov
imul
sub
fsubs
or
fisttpll
xchg
enter
and
orb
adc
cltd
cli
faddl
push
jmp
fdivl
stc
xchg
js
sbb
rolb
jl
mov
push
lds
add
xor
xor
gs
roll
fmull
dec
inc
into
adc
and
movsb
ret
xchg
call
loopne
mov
cmp
inc
add
or
test
jb
jg
dec
xor
das
push
pop
pop
mov
clc
and
jl
sub
xor
xchg
sbbb
leave
push
inc
jmp
mov
mov
imul
rcrb
xor
orl
iret
mov
inc
in
sarb
xchg
sbb
or
out
or
lea
fstpl
push
das
jle
dec
js
xchg
ret
test
fsubs
pop
jb
je
mov
in
lods
sarl
daa
and
push
jle
pop
scas
and
fcoms
arpl
sub
jmp
mov
cmpsb
outsl
lret
mov
cmp
push
ss
xchg
iret
or
and
sbb
cmp
lea
repnz
dec
sbbb
or
idivl
and
outsb
pop
dec
test
outsb
xchg
mov
ljmp
xchg
int3
inc
rcl
xchg
push
mov
shl
and
push
mov
icebp
mov
xchg
test
inc
mov
inc
sub
mov
shlb
das
push
stc
inc
mov
pop
xchg
sti
test
jge
divl
or
loope
push
cmp
sbb
adc
adc
pop
add
int
pop
pushf
adc
fstpl
popf
iret
sti
lcall
sub
push
sbb
test
jb
xor
dec
ss
jle
sahf
dec
inc
movsb
lods
aaa
icebp
sbb
dec
jbe
push
cmpb
push
sbb
mov
call
xchg
or
pop
pop
mov
cs
lds
or
xlat
lcall
sub
in
push
pop
jbe
and
xor
jae
sbb
dec
jl
xor
cmc
push
in
pop
xor
std
test
nop
loope
mov
into
aam
rorl
mov
hlt
mov
jg
stos
sarl
dec
icebp
inc
filds
inc
fists
adc
add
sbb
sbb
mov
xchg
ret
sbb
xchg
int3
mov
pop
add
adc
test
or
hlt
lds
mov
fs
std
out
js
test
sbb
gs
xor
call
int
je
inc
ret
push
xchg
in
mov
inc
sbb
mov
add
push
sub
ss
stos
add
inc
fidivrl
push
jge
icebp
add
fcmovnb
sbb
ss
xchg
out
sub
pop
inc
xor
sahf
movsb
in
popa
orb
cmpsb
mov
inc
mov
pop
iret
lahf
sarb
cmpsl
pop
icebp
icebp
dec
xchg
andl
inc
or
jno
outsl
jb
add
add
push
pop
nop
mov
add
sub
jge
loope
test
xchg
or
mov
adc
popf
imul
loope
jo
shl
shlb
xchg
pop
testl
in
or
lds
push
jbe
aas
jbe
jmp
jbe
xchg
pop
lcall
jne
inc
jl
or
decl
push
scas
jb
sarb
push
mov
imul
mov
push
inc
mov
mov
lahf
sbbl
inc
arpl
popf
fidivrs
adc
lods
and
or
and
sub
inc
inc
cld
cmp
sbb
sub
lcall
loop
cmpsb
xor
or
pop
xor
fldenv
inc
iret
dec
sub
mov
test
jmpw
mull
add
cli
xor
jno
mov
dec
fidivrs
repz
push
andl
mov
imul
test
xchg
mov
dec
cmp
orb
xor
mov
rolb
sub
sbb
add
lods
xchg
sti
jmp
scas
out
dec
add
pop
jne
push
mov
add
or
movsl
lods
repnz
in
sbb
or
add
arpl
out
aam
jmp
xchg
rol
cmp
sbb
inc
shll
adc
je
or
ja
mov
orl
sub
adc
ja
adc
pop
cmp
scas
sub
aam
sbb
jl
test
xor
push
mov
adcl
test
lcall
jo
jp
lcall
das
movsb
sub
sbb
cmpsl
std
xor
push
jo
push
testl
or
cwtl
ret
mov
in
mov
inc
inc
data16
xchg
repz
cmp
mov
into
add
outsb
popa
jmp
loop
dec
dec
fdivp
outsl
mov
ja
xor
xor
jno
jg
dec
sbb
mov
dec
xor
dec
mov
jo
mov
sub
in
aam
ret
fwait
cli
nop
cmp
pusha
cmp
repz
jmp
aas
jno
xor
loop
je
loop
cmpl
push
mov
mov
imul
push
and
cs
pop
in
pop
cltd
push
out
add
sub
or
pop
sbbb
push
cwtl
dec
and
outsl
sar
mov
push
pop
or
push
jle
rol
mov
dec
lret
sub
xchg
add
rcrl
xchg
dec
push
or
pop
or
dec
loopne
and
lcall
cmp
pop
xchg
jno
mov
pushf
sbb
push
xchg
mov
jge
mov
pop
fistl
iret
or
add
rorb
sbbb
icebp
and
addr16
jae
pop
sub
inc
add
outsb
xchg
cmpsb
adc
std
iret
and
mov
xchg
nop
loope
in
in
lret
std
arpl
lret
push
fiadds
dec
repz
idivl
pop
movsb
inc
mov
mov
popa
mov
addr16
and
bound
xchg
pop
push
or
or
sahf
fsubrp
mov
ja
or
mov
cmp
aas
or
push
sbb
loop
push
lds
rolb
cmpsb
icebp
notb
jge
pop
xor
jo
mov
mov
pop
out
into
test
lock
into
push
add
adc
nop
mov
mov
mov
sub
push
ljmp
sub
or
adc
aam
xchg
cmpl
cwtl
mov
sbb
stc
rcrb
sbb
aaa
dec
stos
lahf
repnz
fadd
pop
shlb
mov
inc
rclb
pop
jne
mov
sub
rolb
and
dec
popf
mov
stos
push
pop
enter
mov
daa
cmp
push
or
cmp
repnz
pop
push
imul
dec
fmul
adc
ljmp
mov
jp
cmp
repnz
xchg
mov
dec
and
or
es
subb
sub
pop
dec
packuswb
mov
ljmp
aad
fwait
sub
mov
ja
hlt
xchg
and
mov
stos
pusha
ret
insb
insl
dec
push
mov
mov
lods
or
mov
ss
mov
lods
movsb
push
sub
mov
pop
mov
loop
imul
dec
sbb
insw
push
iret
fisubrs
mov
xchg
mov
jae
lahf
and
push
cwtl
neg
ret
iret
or
add
push
pop
rcrl
or
mov
mov
lcall
ret
negb
mov
cs
xor
inc
les
and
lcall
repz
cltd
sahf
mov
inc
xchg
or
dec
clc
in
in
shr
movsb
dec
mov
and
sub
fs
sub
incb
jp
dec
pop
mov
pop
push
loop
pop
push
push
xchg
stos
cmp
pop
push
inc
xor
adc
cld
push
int3
idivl
pusha
aaa
js
jle
int3
sahf
dec
adc
icebp
repnz
cmp
ja
xor
imul
pop
push
and
jne
loop
xchg
test
or
lock
fsubl
idivb
xor
or
dec
xchg
fcoms
mov
jns
push
sub
das
jns
test
aad
aad
inc
cmp
rclb
vpaddd
inc
lcall
pop
dec
addr16
cmc
filds
loop
jl
xchg
dec
mov
xchg
rcr
pop
jp
fsub
mov
jp
add
mov
mov
mov
fsub
dec
lahf
scas
lods
test
dec
filds
inc
push
or
push
jnp
cmpsl
loope
aad
mov
sarl
and
out
sub
dec
shll
push
or
lods
or
jbe
inc
jl
jnp
stc
jmp
dec
nop
movsl
push
stc
mov
or
lcall
ret
cmp
inc
jb
dec
repnz
scas
fdivrs
sbb
jl
inc
pop
mov
sub
xchg
add
aas
cmp
sub
popa
insl
lea
jmp
xor
jl
pop
loop
jge
sti
das
scas
insb
mov
int
pop
imul
pop
adc
and
mov
sub
sub
inc
les
mov
cmpsb
jge
or
jp
sahf
mov
mov
imul
xchg
xor
popa
popf
xchg
inc
push
sbb
cwtl
sbb
notl
xor
adc
stos
inc
cmp
adc
in
push
shlb
repz
jne
pop
cmp
jne
cmpsb
cmp
jle
mov
jne
cli
stc
sbb
in
mov
mull
daa
jns
inc
iret
in
inc
cmp
hlt
jge
ja
push
cmp
mov
jg
cmc
cmpsb
sbb
lods
rclb
add
jmp
or
and
pop
insb
push
adc
push
lcall
rcrb
and
push
fs
push
pushf
insl
cld
lea
lods
test
stc
fcomip
push
xor
cmp
arpl
xor
jp
pop
cltd
test
push
arpl
jbe
sbb
mov
js
add
xor
aad
loopne
fisttpl
cmp
sub
aam
cmp
data16
mov
jp
lcall
and
mov
cwtl
mov
push
das
cmp
cmp
es
sbb
sub
mov
mov
loope,pn
call
test
lret
test
add
mov
loop
inc
fwait
cmp
test
jno
lock
add
ucomiss
jg
push
je
and
dec
iret
jnp
cs
add
rcl
mov
in
pop
cs
js
int
test
in
jno
cmp
sahf
into
rcll
xchg
fists
jbe
aaa
jp
mov
and
push
stc
clc
mov
loopne
ss
inc
nop
mov
mov
fisubrs
ficoms
and
repz
arpl
push
das
jnp
sub
fs
xor
iret
sbb
dec
lods
pop
push
cmp
lcall
popa
pusha
fwait
dec
popf
and
sbb
jo
or
xor
add
add
ret
jne
pop
andl
popf
lods
pusha
subb
cmp
pop
push
ss
ljmp
mov
pop
rcrb
pop
test
cmpsl
add
cmp
and
loop
pop
sub
sub
xor
pop
lods
int3
sahf
pop
fadds
jnp
xchg
xor
clc
mov
icebp
rorl
xor
gs
in
or
popf
int
and
imul
mov
seto
jnp
movsl
sbb
sbb
xor
xlat
jmp
fs
arpl
jle
fnstsw
xor
add
mov
cmp
sahf
dec
jge
shr
cli
sub
add
jne
add
mov
mov
sbb
js
cmp
lret
outsl
sbb
int
jbe
and
push
cmp
cmp
jae
arpl
leave
push
mov
int
lea
xor
shll
mov
and
gs
aam
pop
dec
push
add
outsl
sbb
adc
and
out
xor
shl
imul
cltd
leave
pusha
lcall
fcomp
imul
lahf
adc
loope
or
push
mov
mov
jo
pop
movsl
xor
pop
dec
or
sarb
jg
push
xchg
jo
mov
xor
mov
clc
xor
daa
push
cmpsb
mov
mov
sub
popf
sub
orb
jp
jge
lret
pop
daa
out
inc
fsubrs
push
jmp
or
mov
and
fists
clc
fmul
mov
stos
stos
mov
js
mov
fcmovb
aam
ljmp
inc
adc
sbb
pop
jge
addr16
scas
cmp
mov
aam
adc
sbb
dec
mov
pop
or
fidivrl
sti
and
inc
andl
subb
add
and
mov
js
and
test
inc
xor
int
sub
sbb
or
xlat
mov
xor
subb
mov
adc
pop
test
jo
and
les
outsb
mov
dec
pop
xor
lods
out
sbb
dec
es
or
xchg
mov
cli
xchg
and
outsb
popl
jns
jmp
pop
std
and
lods
push
sahf
loopne
into
mov
xor
xchg
mov
push
out
xor
mov
jno
adc
and
or
aad
pop
jecxz
push
mov
inc
or
jae
xor
mov
sbb
inc
push
mov
inc
inc
inc
xlat
mov
jns
mull
mov
scas
enter
cmp
test
push
and
dec
clc
inc
mov
shll
out
jl
rorl
pop
cmpsb
insb
sbb
dec
inc
pop
xor
or
popa
push
div
mov
lret
adcl
sahf
leave
cmpsl
ror
sbb
and
xchg
nop
stos
inc
sbb
pop
dec
clc
idiv
fwait
dec
xor
call
sbb
inc
jne
enter
jl
add
orb
xor
or
shll
dec
push
rcrb
mov
or
sarl
jb
ljmp
scas
data16
int3
mov
and
mov
out
xchg
mov
sahf
mov
cmp
jg
mov
jnp
mov
rorl
xchg
test
lret
rorl
pop
std
fildl
mov
xchg
pop
popa
jmp
mov
out
out
gs
mov
mov
lods
hlt
cmpsb
xor
lds
pop
scas
jne
jge
addr16
dec
add
fucomi
jae
dec
je
jno
loopne
xchg
cwtl
ja
push
lods
scas
out
rcl
jne
inc
lods
and
cmp
aas
lret
add
ret
scas
add
aad
adc
mov
push
sbb
stc
push
das
test
mov
sahf
repz
jle
lcall
fwait
sti
in
icebp
shrb
pusha
mov
lock
mov
leave
lods
sbb
sbb
cmp
push
jb
out
stos
test
js
add
das
jbe
dec
rcrl
dec
xchg
add
leave
xchg
sti
cwtl
imul
xchg
add
in
add
bound
cli
idivl
jne
mov
mull
scas
cli
cwtl
mov
pop
mov
scas
adcl
lods
ret
imul
jo
das
push
pop
out
lret
cmp
xchg
fnstsw
mov
pop
and
jecxz
push
dec
jns
in
push
hlt
jmp
nop
icebp
mov
jb
and
mov
mov
jno
mov
cmp
je
adc
lahf
jns
imul
daa
mov
cld
lds
cld
out
xchg
insl
inc
sub
xlat
std
mov
addb
fistpll
mov
jle
sub
xchg
cmp
jg
iret
imul
pop
or
or
fiaddl
sahf
hlt
pop
icebp
cmp
int
xchg
in
rcrb
test
call
jns
push
test
arpl
jp
mov
outsb
sub
add
cmp
es
inc
dec
aad
adc
ljmp
pop
loopne
mov
add
and
ljmp
jp
cltd
rcrl
ja
xchg
daa
shll
mov
je
loope
jle
dec
fs
dec
movsl
jge
push
das
mov
dec
and
pop
ficomps
or
cmpl
dec
outsl
or
sub
sti
add
dec
push
sbb
mov
mov
divb
repnz
jno
mov
scas
scas
imul
xchg
stos
addl
sahf
jo
decl
fstl
mov
xor
lods
js
mov
add
rcrl
adc
jmp
xor
test
or
jl
dec
cmp
mov
movsb
mov
mov
xchg
lds
jbe
fadds
aaa
pushf
push
or
shlb
mov
adc
adc
jne
lea
imul
sub
pop
adc
loopne
jl
stc
sub
pop
jle
sahf
cmpsl
fs
mov
stos
sub
sub
lret
into
mov
sbb
call
mov
lods
xchg
pop
lock
pop
aaa
dec
jp
fistpll
out
imul
out
pop
jle
jl
dec
mov
shr
pop
pop
mov
sub
dec
xchg
jecxz
dec
adc
jmp
fldcw
adc
pop
fldcw
clc
push
aad
mov
pop
fldcw
cmp
cmpsl
into
mov
or
mov
jle
lret
mov
in
adc
xchg
lods
xchg
lahf
adc
mov
jg
movsb
in
xchg
push
jno
mov
movsb
test
push
and
cltd
mov
js
roll
neg
test
aaa
or
dec
xchg
pop
mov
cmp
xchg
setle
and
or
push
in
dec
popa
dec
out
ficompl
jnp
pop
mov
imul
cmp
xchg
sbb
pusha
out
push
and
push
inc
sar
or
ss
pop
xlat
sub
scas
rol
jnp
stos
adc
jbe
and
and
dec
aad
in
scas
inc
jae,pn
mov
ds
and
jno
adc
imul
mov
je
mov
sub
repnz
data16
scas
lds
insb
mov
dec
les
sbb
cwtl
mov
incl
cmpsl
es
sarb
sub
lods
push
aaa
ss
sbb
pop
dec
fcoml
push
jl,pn
mov
cld
mov
xor
clc
jle
lret
fsubrs
sbb
testl
jmp
pop
jmp
adc
mov
mov
cmpw
mov
push
aad
push
pop
mov
lcall
mov
scas
push
fwait
cmp
sbb
dec
cwtl
xor
cmp
aaa
cmp
add
insl
cmp
xchg
jge,pn
sbb
cmp
xchg
mov
xor
dec
mov
mov
imulb
push
xchg
jge
pop
xchg
push
jae
loopne
cmp
out
and
inc
xchg
ret
inc
inc
xor
xchg
xor
dec
lea
ss
pop
out
push
sub
mov
mov
fldl
js
mov
loopne
out
cwtl
test
jl
jp
jo
loop
addr16
inc
add
lahf
nop
lahf
jae
sub
faddl
add
cli
outsb
dec
aaa
aam
cs
enter
jno
data16
cmc
mov
sti
cs
pop
xor
mov
sub
pop
ret
jecxz
out
outsb
test
xor
or
push
inc
sbb
dec
cmp
sub
lret
or
xchg
iret
sbb
hlt
das
cld
xor
xchg
mov
or
jecxz
stos
mov
in
jmp
lret
cmp
push
sbb
scas
jmp
xor
repnz
mov
test
rorb
push
add
dec
jmpw
scas
mov
mov
sub
std
imul
cmc
lods
add
and
sub
mov
outsl
sbb
lods
dec
inc
jae
or
popa
adcl
add
cmovo
sub
sahf
scas
sarb
aaa
cmp
jle
int
hlt
imul
cmc
out
gs
cmp
js
add
stos
jg
in
inc
stc
inc
sti
sub
xor
jae
in
in
icebp
sbb
fldl
push
cmpsb
fldl2t
pop
insl
or
pop
xchg
scas
movq
outsb
fnstsw
cs
dec
xlat
xorl
popf
in
mov
sbb
ds
sub
test
into
mov
sub
gs
jecxz
out
sarb
mov
cmpsl
xchg
sti
mov
pop
imul
pop
jae
cli
lea
xor
inc
push
lds
aam
cmp
iret
scas
clc
iret
or
scas
adc
je
sub
lock
cmc
lret
aad
mov
or
arpl
jecxz
fs
loope
mov
pop
xchg
pop
mov
dec
jo
ljmp
mov
pop
lock
cmp
test
cltd
xor
or
mov
pop
or
std
fcomi
push
int
nop
mov
popa
xor
sbb
dec
xchg
mov
cmpsl
jne
jmp
shrl
movsb
xor
xchg
das
adc
cmpsb
pusha
cmp
push
and
mov
test
out
out
iret
mov
xlat
lahf
add
decl
adc
fisttpll
mov
push
out
inc
and
cli
cmp
jmp
jmp
xchg
fwait
push
mov
jbe
pop
lret
ds
in
xchg
mov
into
and
mov
cmp
scas
in
add
xchg
in
pushf
fldcw
sub
repnz
cli
inc
push
xchg
aad
mov
pop
sub
push
dec
test
sar
mov
mov
gs
mov
daa
push
in
ljmp
pop
push
and
jmp
jns
cld
mov
mov
sbb
cmp
movsb
jbe
sbb
xchg
xor
push
mov
pushf
cmp
nop
mov
cmp
icebp
xlat
cmp
popf
lds
fiadds
jge
push
daa
decb
dec
hlt
xchg
out
std
in
jge
aas
and
shlb
aad
lcall
add
cpuid
je
repz
cmp
test
fcoml
insl
sub
adc
lock
clc
lahf
loope
mov
dec
xor
dec
pop
mov
test
packssdw
xchg
stos
pop
mov
enter
fiadds
test
into
push
xchg
fists
cli
mov
push
mov
das
or
mov
dec
roll
lcall
sub
sahf
adc
enter
aad
in
jle
xchg
or
cmp
ja
ljmp
dec
lods
mov
xchg
iret
fucomip
jl
or
xchg
dec
xchg
pop
mov
lea
sub
ret
repnz
inc
add
add
and
call
fstps
fldln2
cmpsb
int
out
pop
adc
hlt
cmp
xchg
mov
dec
jmp
mov
dec
sahf
fildl
fimuls
lret
push
popf
add
sarb
sbbb
ret
mov
inc
cmpb
inc
jno
call
mov
cmpsb
mov
dec
ds
jo
das
lock
loop
mov
mov
push
and
lcall
xchg
push
push
jmp
xchg
fisttps
clc
into
inc
test
pop
mov
lock
jns
xor
jmp
sub
cmp
inc
les
out
mov
cmp
outsl
imul
jbe
cmp
into
xor
mov
lods
pop
inc
jae
rorb
shlb
faddl
mov
mov
push
fnstsw
lods
or
sbb
mov
mov
lcall
inc
int3
lahf
pop
out
je
sahf
jne
ja
loopne
loopne
jo
ficoms
push
xchg
jecxz
mov
outsl
xchg
mov
ret
scas
push
rcrb
repnz
cmp
scas
cmp
dec
out
leave
stos
push
inc
or
test
out
sub
cmovnp
fistl
subb
sahf
or
adcb
loop
sub
popa
sbb
dec
sahf
rcl
push
or
icebp
jecxz
xor
adc
leave
jge
xor
mov
int
sbbb
mov
lock
div
mov
jae
cmpsb
insl
fdivr
jnp
and
ss
inc
mov
out
test
popa
jg
test
ror
sbb
fidivrs
and
mov
and
imul
sub
bnd
mov
ja
sbb
cmp
fstl
sub
sahf
or
call
ret
xor
sub
addr16
and
scas
xorps
and
fwait
sub
andl
xchg
mov
or
ret
pop
insl
lock
repnz
xchg
dec
into
push
and
push
loop
stc
jecxz
mov
hlt
int3
cld
jb
sub
into
mov
andl
pop
mov
lods
mov
mov
inc
jge
into
lods
or
or
cmp
aam
jge
dec
cltd
pop
jo
xchg
pop
jle
or
shlb
jnp
xor
mov
push
std
xor
xchg
addr16
jo
dec
adc
imul
leave
into
inc
je
out
pusha
xchg
inc
xor
test
xchg
lret
cmp
sbb
and
and
add
xchg
xor
mov
sbb
mov
lea
push
fcmovnu
cmp
sub
mov
lahf
std
orb
bound
xor
pop
out
test
orl
andb
sbb
rcr
loopne
adc
pop
xor
repnz
adc
cmp
mov
mov
xchg
add
cmp
daa
out
out
sub
mov
and
sti
cmp
outsl
jae
mov
xchg
std
cmpsb
adc
aam
cld
clc
pop
lods
insb
fldenv
stos
aad
arpl
pusha
cld
push
pop
mov
sub
lret
xchg
inc
bound
rorb
sub
sbb
and
xchg
cmp
pop
mov
mov
xor
add
cmpsl
fistpl
sub
sub
into
dec
add
shrb
lahf
dec
push
mov
inc
jg
jp
outsl
adc
jns
out
cld
pop
fildll
fwait
popa
lock
ljmp
addb
std
fildll
dec
cwtl
js
cmp
fdivl
or
xor
mov
cmp
int3
test
sbb
jns
cli
mov
js
ja
add
repz
pop
out
popf
push
push
ret
cmp
sbb
xabort
pop
lods
add
rcrl
ret
sub
inc
mov
pop
es
test
mov
imul
adc
roll
jl
fs
shll
and
inc
or
sbb
cmp
jae
inc
push
adc
jo
xor
ficoml
mov
mov
lods
add
in
jne
jo
imulb
xchg
adc
fisttpl
mov
jl
jns
nop
mov
out
jae
test
dec
outsl
aaa
sub
outsb
xchg
std
push
xchg
mov
nop
sub
cltd
fisttps
xor
mov
and
mov
call
in
pop
cmp
mov
out
push
mov
and
inc
addl
popa
push
insb
jno
sub
pop
push
sbb
push
cmc
addr16
sbb
aad
js
jb
aad
loop
imul
ljmp
sbb
movsl
dec
dec
cmp
dec
lret
pop
jp
add
inc
repz
dec
dec
mov
fbld
add
xchg
das
pop
js
cmovge
testl
jo
inc
dec
lahf
adc
push
mov
and
inc
push
jmp
mov
popa
or
add
jle
inc
popf
sub
and
mov
rcl
std
mov
jge
outsl
jl
jp
addb
cmpsb
mov
aaa
adc
lods
hlt
jb
out
mov
adc
iret
mov
ret
outsl
mov
push
sub
cmp
leave
push
add
lcall
inc
xor
push
and
xor
cmpsb
clc
jb
mov
cmp
mov
fldenv
sub
jo
mov
inc
test
addr16
or
lret
out
jbe
gs
movsb
and
ja
xor
insb
fidivl
adc
dec
fsubrl
mov
cmpsb
inc
ja
inc
and
dec
xchg
inc
inc
or
out
inc
or
es
loopne
jns
inc
cmp
hlt
outsb
mov
push
jmp
cmpsb
inc
mov
adc
adc
adc
lods
pop
sub
sarl
mov
sarb
and
call
push
js
dec
repz
lds
fwait
add
in
cltd
stc
mov
or
jae
dec
sarb
push
inc
mov
cmp
pop
add
popf
pop
inc
jg
and
dec
test
xchg
insl
xlat
lock
pop
jns
nop
cmp
jl
pop
cmp
test
add
bound
jbe
aam
scas
xchg
dec
mov
mov
dec
add
in
dec
or
pop
pop
ret
ss
incl
xor
pop
xlat
iret
or
sub
xbegin
je
scas
jno
mov
adc
cmp
push
dec
pop
aas
xchg
nop
aas
mov
pop
xchg
into
int3
xchg
daa
mov
test
popf
loopne
lahf
adc
arpl
aad
lahf
scas
imul
push
arpl
push
xchg
into
lahf
in
mov
pop
xchg
in
fsub
ljmp
lods
add
fadd
int
or
pop
sbb
push
scas
mov
fstpt
shll
xor
dec
add
cmp
xchg
xchg
out
mov
call
test
push
or
leave
popa
lahf
mov
pop
xor
mov
into
jp
movsl
jbe
pop
addr16
aas
dec
rorl
loope
lahf
sbbl
mov
xchg
mov
inc
mov
insl
inc
imul
test
loopne
xor
arpl
jle
push
jg
sub
shl
xchg
cmpb
setnp
sbb
popf
sahf
out
or
test
out
into
hlt
sti
jg
jno
out
and
outsb
es
sbb
ror
push
rcrb
dec
gs
sbb
mov
clc
xor
popa
mov
insb
push
or
sbb
and
lcall
xchg
dec
icebp
ja
pushf
mov
lods
xor
test
and
hlt
sub
mov
jecxz
dec
test
mov
jmp
lcall
sbb
inc
lahf
mov
sub
cs
xchg
rorl
dec
lods
xchg
sbb
adc
pop
sbb
adc
push
and
xchg
int3
cltd
mov
jo
dec
jno
sbbb
push
cmp
inc
insb
fidivrl
loopne
loope
cmp
inc
es
in
cmp
ret
fucomi
add
xor
insl
sti
jb
push
lods
xor
and
movsl
sbb
jb
repnz
sub
push
test
call
aaa
ficoms
test
gs
pop
cmp
sub
jmp
xor
fsubrl
xor
sub
mov
pop
outsl
xchg
das
daa
cwtl
cltd
test
add
es
jne
je
lahf
and
aas
test
jp
adc
daa
cmp
push
and
mov
mov
jp
or
mov
push
scas
mov
movsl
adc
pop
jp
out
cmp
add
test
pusha
das
inc
stos
xchg
adc
mov
xchg
xor
lea
dec
je
repz
leavew
jns
or
add
lods
add
lods
mov
inc
rclb
leave
cmpsl
out
repz
push
xchg
arpl
sar
cmpsb
daa
mov
lods
jae
arpl
mov
push
cmp
mov
lea
vhaddps
dec
imull
jns
cmp
xchg
jle
sahf
outsb
or
fildll
mov
xchg
and
xor
in
jo
sub
sbb
lret
cld
mov
sti
aaa
stc
push
pop
out
lret
jno
out
mov
inc
sbb
pop
iret
mov
jae
sbb
mov
pop
rolb
popa
mov
pop
inc
cmp
aad
dec
int3
jo
mov
mov
std
mov
dec
in
push
int3
lds
in
scas
pop
or
xchg
dec
or
rorl
shll
aad
inc
roll
jmp
xor
addl
push
scas
sbb
pop
call
mov
cmp
pop
lods
inc
scas
loope
outsb
ss
bound
lds
mov
shl
lret
movsb
rorl
bound
jae
and
pushf
inc
scas
mov
in
cmpsl
cmp
fsubrs
dec
or
xor
mov
push
aaa
popa
add
jb
mov
popa
sti
mov
inc
mov
sbb
adcb
jb
lods
add
fadd
and
addr16
mov
loopne
sub
mov
outsl
scas
sbb
or
or
insl
fdivrl
pop
es
ljmp
int3
bound
rol
sahf
add
sbb
dec
xchg
inc
add
int3
mov
xchg
lods
mov
ficompl
outsb
push
jno
imul
bound
incl
jmp
movsb
and
inc
xor
insb
int
fstps
dec
or
loopne
jp
pop
adc
roll
fildl
sbb
push
sbb
lcall
stos
test
or
or
dec
dec
and
stos
pop
mov
shlb
movsb
push
inc
gs
adc
lcall
ljmp
sub
imul
mov
aaa
cmp
sti
sbb
mov
int3
lret
pop
jnp
icebp
repnz
rcrb
loop
cltd
pop
and
popa
dec
sub
cmc
sar
stos
or
adc
sbbl
nop
pop
push
sub
and
and
or
cmp
test
and
inc
jbe
je
ds
dec
cmpsb
fwait
div
or
mov
inc
repz
rol
cmpsl
mov
gs
sbb
aaa
dec
lret
sub
mov
fisttpl
adc
cwtl
dec
sbb
adc
jg
int
xchg
mov
sub
ret
movsl
and
enter
sbb
adc
sbbb
and
cmc
push
mov
or
fiadds
jle
je
mov
ret
adc
mov
fidivrl
nop
lcall
pop
ja
push
outsb
int3
div
push
scas
xor
adc
outsb
mov
loopne
push
pop
daa
mov
mov
adc
sbb
jmp
sub
add
mov
push
test
mov
pusha
inc
cmpsl
push
sub
jecxz
nop
mov
imul
cmp
adc
xor
push
shlb
xchg
xor
cltd
fsubrl
mov
jbe
mov
ret
dec
scas
cmp
dec
add
push
dec
adc
lea
dec
ljmp
sub
jecxz
jns
pop
sarb
mov
mov
push
push
jbe
jb
adc
in
inc
push
mul
or
fnstcw
or
cmp
mov
mov
mov
mov
mov
jp
enter
sbb
mov
imulb
ret
ret
fistpl
sti
test
and
inc
inc
add
sbb
fdivr
insb
loop
mov
in
jl
hlt
sub
mov
pop
mov
jecxz
mov
push
jnp
fwait
int
popa
xchg
cwtl
push
fsubp
mov
cmpsl
inc
or
sub
sub
push
xor
insb
sbb
lea
push
adcl
cmp
gs
jo
stc
mov
cli
push
dec
pop
or
ljmp
lret
imul
sub
cmpsl
inc
mov
sti
pusha
roll
or
push
repnz
xor
test
lret
cmpsl
push
jnp
ret
jae
mov
push
cli
mov
sti
arpl
pop
loopne
push
or
jae
and
outsb
xor
pop
cwtl
pop
push
sbb
sahf
pop
jnp
cltd
add
out
jle
and
dec
mov
adc
outsl
mov
aad
mov
lock
sti
xlat
cmp
scas
cmp
or
mov
loope
cld
xchg
push
out
add
loopne
xor
cmp
js
repnz
jp
push
fs
ret
es
add
push
mov
sbb
mov
add
in
xchg
pop
pop
pop
call
inc
dec
dec
sub
pop
sub
js
jne
push
data16
js
dec
std
aaa
jnp
insl
out
mov
call
fidivrs
fiaddl
test
xor
je
push
lret
lock
add
rol
mov
sub
cmp
jle
idivl
repz
mov
mov
mov
push
jnp
and
jbe
or
lea
jnp
push
sub
mov
mov
fwait
out
mov
arpl
inc
mov
push
sarl
mov
mov
add
xchg
mov
rolb
stos
xor
and
int3
adc
push
fsubs
mov
cmc
mov
mov
cs
mov
xchg
in
cld
xchg
ja
xor
ret
andb
leave
loopne
pop
jne
int
inc
xchg
push
ljmp
jmp
repnz
xorb
cmpsb
loope
inc
repnz
sbb
sbb
popf
sub
cmpsb
add
rorl
adc
or
enter
imul
shrb
lcall
outsb
movsb
repz
pop
stc
jb
push
test
xlat
test
and
decl
repz
push
and
out
or
push
data16
push
adc
imul
sbb
rcl
mov
xchg
inc
enter
push
js
xor
xchg
cmp
sub
xchg
sbb
cltd
hlt
mov
jo
aas
test
divb
imull
loop
adc
or
pop
in
std
dec
incl
push
js
cmpsl
filds
mov
jle
xchg
fs
xchg
dec
or
jp,pn
rclb
mov
jle
sahf
xchg
pop
lcall
add
mov
loopne
aad
jle
jl
mov
ja
aam
pushf
push
daa
cmp
loopne
loopne
lds
mov
pushf
popf
je
sbb
orb
xor
jno
lea
pop
xchg
pop
mov
jecxz
adc
ljmp
js
scas
inc
jae
mov
push
popf
xor
ss
bound
lods
or
cmc
inc
and
repz
cmc
std
sbb
lods
faddl
push
inc
bound
jle
inc
ret
mov
jp
or
sbb
lret
sbb
pop
fbld
aam
imul
and
shlb
dec
dec
or
int
movsb
lcall
push
js
out
dec
mov
add
ficompl
mov
mov
cmpsb
and
das
out
lds
xor
shrl
mov
jg
in
int
push
cmc
pop
mov
mov
pop
fidivrs
jns
push
push
jp
mov
leave
leavew
iret
cmp
es
adc
jbe
test
or
outsl
cmp
mov
aam
mov
ror
nop
dec
xchg
cmp
pop
mov
xchg
dec
jbe
inc
loopne
mov
sbb
adc
lahf
add
stos
loopne
enter
pop
test
jl
sub
loope
int3
test
jg
mov
dec
dec
pop
divb
int3
push
xchg
push
cmp
pop
push
ds
lea
mov
jle
jecxz
jge
rorl
push
cmpsb
aam
mov
push
or
adc
popa
mov
in
xchg
inc
addr16
pop
negl
cli
sbb
insb
cli
std
andl
xchg
je
in
shlb
test
cwtl
jle
pop
push
aaa
aad
addr16
pop
inc
inc
ret
jge
push
inc
mov
mov
fisubrs
xchg
xor
cmp
push
in
daa
dec
xor
jecxz
das
cmc
bound
xor
mov
and
sub
adcl
xorb
add
mov
cld
mov
lds
push
jnp
js
mov
push
inc
je
xchg
xchg
filds
xor
and
lods
cmp
xor
divb
and
addb
pop
pop
mov
mov
jl
or
dec
fs
pop
adc
push
or
rolb
mov
xor
adc
daa
xlat
or
jecxz
loopne
mov
stos
pop
push
sbb
push
clc
cmp
clc
mov
mov
and
outsb
dec
xchg
mov
out
add
movb
fsubrs
mov
popf
pop
adc
pop
mov
jae
mov
aam
out
mov
out
cmpsb
daa
inc
rcrb
mov
setno
movsl
sti
or
into
test
sub
push
imul
xchg
int
cmp
cmp
fimull
push
push
pop
xchg
jl
sub
push
mov
cmpsb
fmul
cmpsb
mov
test
lcall
js
lock
jb
xchg
iret
outsb
mov
or
dec
or
in
ret
sub
or
hlt
fdivrl
pushf
or
mov
loope
sub
test
jnp
mov
addl
add
dec
jns
fldt
sti
pop
repnz
push
sub
cmp
in
test
frstor
lods
pop
pop
jno
cmp
mov
jmp
and
jmp
jmp
dec
inc
pop
fisubrs
mov
jns
psubusw
test
ret
dec
xchg
fisttps
or
imul
push
lret
cmp
sub
mov
movsb
test
dec
mov
jo
das
sub
jecxz
into
push
scas
or
rorl
pop
push
out
mov
mov
jb
mov
cmp
test
sub
mov
repnz
push
jge
repnz
adc
lods
sti
adc
xchg
cmp
and
and
inc
test
and
daa
mov
mov
add
mov
inc
lahf
push
mov
sbb
push
cmp
sbb
cmp
mov
xor
mov
ss
pusha
push
hlt
rcll
inc
std
imul
call
and
sub
pop
arpl
inc
subl
out
xchg
aad
mov
js
in
xor
xchg
xchg
jnp
jns
xchg
mov
inc
repnz
xchg
pop
xchg
jno
pusha
fs
inc
mov
sbbb
xchg
adc
insl
iret
scas
adc
add
clc
ljmp
add
cld
or
loopne
sbb
xor
jae
fbld
pop
jo
popf
test
pushf
dec
sbb
hlt
ja
repnz
add
cmpsl
jmp
fdivr
mov
data16
mov
or
or
dec
xor
notb
out
gs
dec
jp
mov
dec
shll
add
fstpl
stc
iret
pusha
jbe
enter
mov
or
cmpsl
daa
add
jnp
mov
out
int3
loope
je
sub
or
add
adc
mov
pop
and
dec
adc
mov
fcomip
xor
and
adc
scas
add
sub
sub
fisubs
jge
sbb
or
imul
mov
jns
popf
dec
dec
sub
test
sub
je
cmpsl
imul
mov
cmpsb
mov
in
in
lock
push
or
jno
ss
movsb
gs
int
outsb
imul
call
iret
lcall
mov
into
and
push
shlb
jnp
push
sub
or
dec
cmp
fdiv
xor
insb
iret
cmp
repnz
xchg
subl
bt
mov
cmpsb
btr
push
xchg
movsl
lret
adc
int
or
xchg
mov
add
mov
lret
test
sub
imull
mov
loopne
bound
data16
pop
scas
mov
inc
push
xchg
test
movsl
shll
jp
lcall
jne
inc
adc
fldl
xlat
insl
loope
sub
xchg
sub
sti
js
push
leave
xchg
loope
sarb
push
sbb
aad
jne
aam
call
lahf
sub
sbb
imul
out
or
mov
push
push
stos
jbe
shlb
xor
xchg
std
fisubrl
mov
jae
std
imul
leave
fstpt
pop
pop
lcall
in
out
inc
mov
enter
stos
les
movsb
mov
pop
testl
das
xchg
aam
pusha
adc
and
inc
repnz
jge
pop
jle
in
mov
xchg
dec
inc
imull
jmp
xchg
pop
pop
clc
sub
and
xlat
xlat
movsl
push
int
cmp
jno
jns
je
icebp
les
movnti
push
xchg
ret
xor
fidivrl
xchg
xor
sub
sub
xchg
pop
sub
or
sub
jmp
arpl
daa
inc
add
lcallw
push
xchg
dec
aad
sbb
mov
pop
jne
jb
push
sub
cmp
xor
jo
int
lock
push
int
shll
int3
pop
in
cwtl
in
mov
das
xchg
ror
push
bound
lods
bound
push
xchg
mov
adc
or
adc
divl
jnp
sub
into
xchg
fists
out
mov
jno
stos
or
rcrb
rorl
push
pop
loop
push
inc
dec
mov
in
xor
out
push
loope
pop
call
sub
inc
lds
push
dec
xchg
push
repnz
xor
mov
dec
inc
push
jnp
rcrb
sbb
leave
lods
gs
cmpsb
aaa
fs
ljmp
das
pop
es
dec
shrl
pop
mov
pop
push
push
push
out
das
pushf
dec
inc
div
imul
jle
mov
mov
xorl
test
les
ja
cld
int3
cmc
mov
xor
loop
cli
push
stc
std
xor
mov
push
leave
ds
add
enter
pop
push
cld
cmp
stc
inc
mulb
insb
sarl
ja
xchg
mov
mov
xor
xchg
xchg
outsl
xor
mov
sub
and
pop
sub
loop
call
push
adc
scas
mov
pusha
xor
fisubs
leave
dec
test
imul
cs
in
pcmpeqd
cmp
fidivrl
das
scas
je
pop
in
sbb
pushl
imul
push
dec
cmpsb
in
add
ds
xor
rcll
inc
addr16
sbb
popf
cld
push
xor
cmpsl
cltd
cmp
mov
and
scas
xor
imul
push
idivl
jp
jb
repnz
js
rcll
das
ja
sub
enter
or
cmp
lock
cmpsl
cwtl
sub
mov
repnz
pop
and
cmc
gs
popf
dec
rorb
mov
int3
out
xchg
xchg
iret
jo
lods
es
pop
imul
aam
daa
push
mov
mov
inc
add
cld
mov
ja
loope
adc
fidivrs
pop
movsl
clc
in
cmpsb
out
test
out
dec
or
mov
push
das
pop
push
add
enter
mov
sbb
or
insb
sti
xor
fs
and
adc
add
push
aam
pushf
insb
outsl
shl
mov
pop
xlat
xrelease
insl
pushf
pop
xor
push
xor
sti
frstor
mov
data16
cmp
jl
push
dec
outsb
dec
push
ret
sbb
pop
xor
es
push
cmp
jne
cmp
push
mov
xchg
push
mov
out
mov
cmp
hlt
notl
or
out
ss
jbe
fisubrs
loop
mov
dec
dec
cwtl
movsl
les
inc
scas
push
movsl
mov
mov
aam
out
daa
and
jg,pt
xchg
fsubrs
testb
xor
lahf
popa
xchg
sub
push
jns
in
stos
repnz
push
mov
and
leave
sbb
loope
mov
shrb
sbbb
jmp
dec
inc
pop
dec
lahf
and
les
cld
fptan
je
arpl
ja
xlat
roll
js
repz
cmp
or
push
jge
fs
fwait
xor
test
cmpsl
popf
nop
or
sbb
dec
adc
mov
jo
nop
add
pop
ds
bswap
pop
jmp
pop
sbb
scas
jmp
outsb
xor
jne
add
mov
sbb
cmp
das
nop
mov
jno
dec
icebp
std
fs
xchg
push
inc
lahf
push
jp
ret
addl
shll
call
xor
and
jae
adc
mov
push
je
cmp
icebp
inc
xchg
into
idivl
pop
out
js
dec
sbb
lods
mov
sub
out
inc
or
pop
stos
mov
pop
inc
lahf
inc
dec
stos
sbb
daa
mov
cmp
ret
add
xor
pop
cmp
sti
loop
pusha
sub
sub
cmc
jno
pop
lds
int
aaa
dec
jb
inc
rcll
cmp
cltd
fs
mov
jle
lods
lds
iret
pop
je
inc
sahf
jl
cmp
dec
orl
xor
loope
xchg
inc
push
inc
int
pop
je
mov
setb
jo
es
sub
xchg
inc
dec
nop
inc
mov
imul
fcomps
jae
lea
adc
in
dec
or
xor
mov
cli
sub
cmp
lret
dec
jle
ja
mov
jb
lcall
stos
xchg
orl
jbe
pop
pop
xchg
add
cmp
mov
mov
gs
into
ret
hlt
loope
or
loop
push
shll
fcomps
out
iret
pushf
testb
xchg
iret
mov
in
popf
xchg
inc
in
mov
shll
mov
sub
fs
push
in
cmp
clc
mov
int3
xor
cs
popa
fcomp
or
add
mov
mov
and
pop
cmpsb
inc
stos
sub
xor
cmpsb
xchg
negb
pop
push
insl
adc
pusha
adc
movsb
stos
sub
jecxz
xor
icebp
xchg
js
clc
pop
in
add
lret
mov
lods
pop
sub
daa
cmp
push
fisttps
or
xchg
shlb
pop
xchg
lock
inc
out
push
inc
fdivs
mov
add
shlb
sub
fwait
rcrb
out
sbb
cmp
cmp
shll
mov
sub
cmpb
sub
andl
popa
fs
ljmp
dec
mov
dec
xchg
mov
mov
sub
sub
fildll
adc
adc
shrb
cmp
mov
sub
and
add
pop
xor
xchg
xchg
lds
add
es
imul
fdivrs
or
sbb
imulb
or
leave
jae
xchg
inc
fimull
jle
cs
test
pop
xchg
inc
push
aas
shll
xchg
pusha
adc
pusha
dec
das
dec
dec
daa
xchg
sub
cmp
aam
insb
xor
and
orl
js
and
lret
xchg
test
push
repnz
sahf
xor
pusha
inc
repz
stos
xchg
inc
push
push
insl
xor
cli
movq
or
push
adc
mov
int3
add
push
mov
inc
insb
jl
mov
and
adc
pop
xlat
adc
in
add
repnz
int
xchg
out
push
pop
bound
in
lock
ror
cmc
sbb
scas
push
xchg
hlt
mov
movsb
pop
dec
xor
popf
add
inc
shll
andl
and
mov
adc
bound
shlb
lock
cmp
ror
jl
dec
or
pop
or
sahf
in
add
sarb
stc
pusha
sub
pop
leave
sarb
sbb
mov
inc
xchg
fistpll
push
pop
jmp
push
dec
arpl
cld
std
dec
rorb
sbb
push
ss
loopne
jl
loopne
lahf
adc
loop
ljmp
xorl
mull
mov
xchg
cltd
mulb
cmp
cmp
int
xchg
fisubrl
xorb
sbb
xchg
inc
inc
sub
cmp
mov
icebp
add
iret
lret
test
lret
pop
mov
std
add
xor
pop
jecxz
dec
faddl
xor
orl
icebp
ljmp
lea
std
mov
inc
mov
int3
outsb
fcomps
cmc
test
shll
cltd
dec
cmp
push
insl
xchg
out
sbb
int
aad
xor
sbb
sahf
in
ret
xchg
inc
mov
adc
or
fists
inc
adc
jno
cmc
pop
or
daa
gs
clc
dec
ljmp
ds
adc
mov
mov
cmp
mov
mov
inc
push
push
fisttpl
inc
in
cmp
repz
das
ror
inc
dec
movb
jb
cmpsl
xor
jns
push
sub
push
mov
bound
jmp
xchg
or
lds
pop
dec
mov
std
sub
cmp
jmp
lcall
xchg
enter
sub
push
sbb
movsb
pusha
pop
push
and
jnp
inc
jae
stos
or
es
aaa
inc
inc
movsl
ret
xor
negl
add
jmp
jp
adc
push
lret
adcb
ljmp
fmuls
fisubl
shrl
pushf
xor
hlt
push
je
push
popa
dec
movsl
pop
incl
xlat
jo
sbb
fdivrl
pop
mov
fisubrl
xchg
fbld
daa
add
pop
repz
movsb
dec
imul
cld
jno
jns
dec
bound
hlt
leave
repnz
pop
jb
loop
pop
mov
sub
cmc
in
cmp
cmp
jb
arpl
or
jmp
lcall
enter
jecxz
push
jp
push
inc
adc
and
pop
mov
mov
leave
pop
fisubrl
mov
add
mov
mov
push
decb
cmp
cwtl
lods
stos
jmp
jbe
shl
in
insb
neg
push
lods
push
jbe
pop
add
or
push
jg
xorb
ljmp
jnp
ret
mov
cmp
sbb
lret
xor
sub
jg
pop
mov
stos
sbb
out
movsl
cmp
add
adc
adc
jmp
push
lea
sbb
mov
adc
cmp
jmp
push
aam
movsb
sbb
pop
in
cli
test
ds
or
jbe
push
adc
mov
xchg
pop
test
jo
jmp
test
fisttpl
fidivl
insl
dec
xor
push
out
mov
out
xchg
in
in
hlt
popa
cs
mov
loop
add
mov
lods
mov
push
gs
ss
xor
cmp
mov
sbb
cmovp
roll
push
pop
ret
sbb
jle
or
ss
outsb
mov
cmp
or
in
jae
movsl
adc
inc
arpl
lock
dec
outsl
and
mov
ret
stos
in
loop
cmp
jecxz
pushf
pop
daa
arpl
das
jo
inc
inc
sbb
xchg
dec
idivl
out
iret
xor
jae
mov
cmc
repnz
adc
jecxz
test
insb
xlat
stos
mov
sub
sbb
dec
adcl
je
jp
jge
cld
les
add
xchg
pop
lods
xchg
dec
add
mov
cmp
adc
sbb
pop
test
and
mov
movsl
jb
push
insl
xchg
inc
inc
bound
maxps
and
mov
pushf
cmpb
mov
push
mov
notb
icebp
repnz
mov
jo
mov
mov
insb
lahf
sar
sbbl
sbb
push
shll
xchg
or
js
jg
cmpsl
popa
pop
push
test
sahf
or
mov
mov
addr16
imul
out
cmpsl
gs
xchg
pop
push
pusha
xlat
add
mov
mov
pop
jg
mov
int
push
mov
arpl
std
push
inc
nop
stos
ss
in
xor
and
mov
test
into
outsb
push
lret
push
xchg
push
and
dec
cli
cltd
xor
lahf
stos
in
shll
dec
inc
jle
xchg
add
jne
mov
sub
cltd
and
mov
push
repnz
add
mov
stos
shrl
dec
loopne
add
add
data16
popf
lcall
lahf
jns
push
fsubrl
pop
sub
jmp
loope
mov
icebp
mov
dec
iret
push
xchg
mov
jb
mov
dec
mov
add
mov
in
insb
ds
leave
stos
out
outsl
enter
mov
add
jg
mov
leave
dec
dec
xchg
mov
daa
cwtl
mov
hlt
xchg
cltd
data16
and
mov
lahf
push
subl
aad
xchg
jb
sarb
sbb
sub
lret
dec
outsl
ret
sub
mov
dec
jl
xchg
hlt
and
repnz
cmp
aad
push
jne
out
loopne
add
add
and
mov
ret
ret
or
daa
mov
mov
mov
ds
or
dec
cmp
sbb
je
cs
data16
fst
gs
add
fiaddl
cmp
mov
jg
aad
sbb
in
cld
mov
out
cmp
mov
lock
jp
cmp
aaa
cmp
mov
pusha
jl
sbb
push
imul
pop
clc
mov
jo
outsl
xor
mov
fcompl
test
add
add
loopne
xor
mov
sbb
das
add
clc
add
xorl
ret
pop
ret
jecxz
mov
shrb
dec
cmp
ror
shll
mov
and
cltd
in
push
in
mov
xchg
push
add
xlat
inc
stos
xor
push
xor
xchg
adc
sub
mov
xchg
sbb
jge
fwait
mov
lret
int3
roll
mov
popfw
pop
aad
push
xchg
or
data16
sbb
dec
dec
push
xor
or
sti
xchg
jge
push
rorb
nop
mov
adc
fcom
sub
inc
mov
inc
hlt
lds
icebp
rclb
in
cs
jle
xor
pop
adc
add
cmpb
js
mov
push
scas
lods
jo
cmpsl
pop
jecxz
roll
lahf
mov
jne
rclb
fdivrl
mov
inc
fwait
jl
xor
push
popa
fsubl
xor
shll
inc
imul
and
stos
adc
data16
add
in
mov
int
dec
std
xor
sub
mov
xchg
inc
movsl
mov
sbb
test
clc
xchg
rcr
mov
scas
rolb
mov
pop
mov
pop
pop
rcrl
rcr
je
out
in
dec
push
mov
popf
fs
cltd
mov
sbb
adc
lods
fisttps
sbb
std
and
push
cmp
inc
pop
enter
negb
push
dec
pop
mov
js
jne
jns
adc
pop
pusha
repz
lahf
lock
cmp
and
sub
adc
psubb
das
imul
mov
out
add
pop
pop
mov
jb
mov
call
loopne
call
out
add
stos
out
dec
cmpxchg
inc
or
push
fsts
xchg
add
cld
jmp
test
lds
or
stc
loop
inc
or
mov
jle
fimull
inc
out
outsb
pop
sbb
stos
loop
dec
mulb
mov
cwtl
sbb
ss
jle
jne
rcl
fisttpll
nop
outsb
lods
jge
shlb
mov
dec
xchg
fbstp
daa
pusha
das
call
pop
mov
pop
or
lahf
pop
les
sbbb
xchg
in
pop
cmc
add
jl
pop
ret
jl
inc
inc
pop
scas
insl
enter
lret
pop
cmp
shr
xchg
fdivs
mov
scas
adc
or
ja
test
rcrl
rorb
in
mov
add
pop
jp
mov
and
out
xor
rorb
aaa
int3
xchg
push
test
maskmovq
mull
pusha
inc
lret
jg
andl
cs
add
bound
lds
cmpsl
fsubrl
lahf
xchg
mov
out
xor
cmp
xor
cwtl
xor
mov
push
sub
push
es
jb
adc
sbb
or
int3
inc
das
xor
or
ficomps
ficomps
jb
xor
pop
dec
fstpt
cmp
jb
dec
push
jg
xchg
jl
pop
push
push
and
or
int
jo
or
adc
jmp
test
pop
pop
sbb
pop
dec
jmp
iret
in
xor
shll
xchg
mov
int3
mov
out
cld
testb
cmc
jecxz
xchg
mov
and
dec
mov
out
inc
int
sub
mov
inc
sub
pop
mov
jge
or
or
cmp
cli
pop
hlt
out
pop
aam
cmp
addb
and
jecxz
xorb
movsl
int3
xchg
adc
inc
jae
or
gs
jbe
out
rclb
cmp
ret
push
cmpsb
or
xchg
orb
sub
mov
dec
mov
jmp
fimull
inc
dec
adc
leave
dec
sub
push
and
sub
cmpsl
loopne
push
fisubl
out
insl
cli
push
out
movsb
cli
mov
cmp
inc
push
cmc
sub
xor
cld
daa
pop
cmp
pop
xchg
into
mov
lret
push
lods
je
dec
sbb
cld
loop
aad
out
cmp
push
dec
mov
jnp
and
or
fwait
hlt
xor
mov
punpckldq
std
mov
popa
bnd
rolb
loope
ret
push
sub
in
inc
jmp
rorl
pop
push
pop
mov
fsts
aaa
xor
fidivl
imull
fwait
push
loope
shl
mov
les
jp
cmp
xor
mov
mov
dec
pop
cmp
ljmp
fldl
adc
add
lds
and
test
xchg
out
lret
repnz
mov
sbb
pop
push
push
mov
fisttpll
fs
push
cld
imul
loopne
cld
xchg
enter
jne
mov
mov
lret
outsl
mov
ds
inc
insw
aad
inc
loop
push
push
bound
movsb
aas
lahf
push
ds
or
xchg
mov
push
xor
xor
leave
les
fstpt
push
sub
dec
mov
and
or
shrl
xor
outsl
push
or
mov
dec
dec
mov
fidivrs
out
cmp
mov
movsb
imul
ds
pop
sbb
lods
scas
inc
xor
pop
sub
repnz
pop
rcll
xor
and
dec
jp
pop
and
xor
stos
mov
mov
sbb
pushf
clc
test
aaa
pop
cmc
mov
pop
shll
inc
inc
inc
out
aad
dec
fnstenv
flds
cmp
ds
sub
add
and
lods
mov
ja
mov
xor
jp
jl
mov
or
testb
stc
jo
aad
data16
inc
mov
mov
movsb
mov
lret
cmpsb
ret
jb
iret
scas
hlt
notb
inc
jb
in
mov
fnstcw
mov
cli
xchg
jmp
mov
jbe
push
push
push
jb
loope
xor
push
lods
dec
jg
mov
stc
fwait
xchg
enter
das
push
xor
fiadds
hlt
rcrl
add
adc
in
push
add
cwtl
es
das
xor
xchg
enter
jbe
add
ss
leave
xor
loope
packuswb
and
addl
add
push
cmp
movsb
fcmovnu
fistps
xchg
jno
nop
mov
or
jae
xchg
xlat
mov
inc
out
mov
insl
les
pop
sbb
dec
fs
inc
iret
pop
pop
dec
cmp
adc
std
mov
adc
add
inc
int3
add
mov
dec
mov
xor
xor
cmp
js
add
xchg
mov
gs
add
movaps
add
loopne
mov
fdivl
test
add
pop
std
cmp
outsl
jb
int3
add
xor
arpl
jl
push
sbb
fst
lret
fcompl
movsb
stos
loope
mov
push
insb
out
and
push
lods
fcom
aad
jecxz
outsb
cmpsl
hlt
es
inc
push
in
add
mov
jmp
inc
push
sbb
inc
adc
mov
ja
cli
or
xlat
adc
mov
or
jno
jo
test
adc
test
push
add
dec
cmp
neg
pop
loop
lret
inc
inc
push
and
outsb
jo
fmuls
inc
sbb
dec
pop
aas
and
mov
pop
call
dec
xchg
je
xchg
mov
cld
sti
pushl
cmp
movsb
jbe
test
and
sbb
jge
movsb
or
aam
jnp
xchg
loop
lahf
xchg
rcl
pushf
push
cmp
pop
xlat
fcmovnbe
out
xlat
aas
xor
cmpsl
insb
call
addr16
ret
test
mov
inc
xchg
mov
jmp
into
add
sbb
sar
dec
push
btrl
fcmove
loop
jmp
sbb
sub
pop
je
int
cmp
clc
mov
clc
popf
aam
js
inc
sbb
or
aas
rol
dec
fidivl
scas
xor
push
mov
xchg
or
popa
cli
sbb
jl
loopne
mov
and
jg
jl
shrl
ret
fisubrl
pop
scas
out
stc
aas
cltd
pusha
mov
mov
xchg
mov
lds
test
out
xchg
jbe
out
arpl
outsl
sub
out
ss
push
jecxz
dec
adc
pop
or
push
jno
mov
sahf
push
gs
fcomps
adc
push
ljmp
push
outsl
ja
jbe
mov
push
adc
fs
rolb
adc
addr16
aaa
and
mov
imul
mov
mov
jp
mull
cltd
scas
and
cwtl
push
jecxz
lock
mov
fildll
bound
popa
cmp
push
cmp
and
cs
sti
mov
inc
in
ja
pop
fdivr
push
fisttps
cmp
hlt
cmp
push
jnp
cmpsb
das
cmpsb
test
loop
xchg
inc
es
jmp
popf
pop
sbb
xor
sbb
shlb
or
fnstsw
mov
movsl
sbb
cld
mov
scas
cmp
mov
mov
add
rolb
rclb
in
push
xchg
fcoms
xchg
andl
and
xchg
xchg
jnp
cmp
xchg
sub
adc
mov
rclb
sbb
testl
fdivl
or
into
add
push
fmuls
pop
add
adc
and
mov
int3
xlat
icebp
jle
dec
pop
sub
mov
stos
pop
push
lods
pop
and
ret
out
sarl
adc
pop
push
daa
mov
adc
orl
jb
mov
or
sbb
xorl
les
xchg
sub
repz
xchg
and
shrl
cli
test
insl
mov
loop
sub
jnp
clc
sub
into
adc
jmp
or
jl
or
adc
cmp
ret
mov
hlt
test
jle
cmp
out
jg
cli
aam
je
adc
pop
sar
cmp
loop
and
mov
inc
push
test
movl
ds
ret
xchg
aad
xorb
mov
addb
hlt
pop
out
iret
mov
in
inc
push
int3
iret
jle
adcb
out
sti
aaa
loop
mov
adc
xchg
push
jbe
dec
cld
inc
xor
stc
add
fwait
jge
or
cmp
cli
and
cmp
out
mov
in
cs
clc
pop
cmp
push
jo
dec
iret
adc
arpl
call
jge
test
sub
mov
and
sub
fisttpl
dec
mov
aam
jmp
ljmp
adc
mov
aas
movsl
jmp
not
pmuludq
loope
sub
mov
and
adc
repz
loope
push
adcb
js
fsubl
pop
pop
cld
popf
movsb
ss
dec
xor
add
xor
xchg
aad
mov
and
xchg
sub
adc
out
cmc
in
push
sub
xchg
xlat
push
cltd
jne
xchg
leave
mov
lahf
aam
jl
aas
dec
dec
jecxz
or
jns
xchg
sub
out
jne
mov
fstp
jns
push
push
rcr
bound
or
icebp
nop
ja
xor
js
lret
mov
cltd
or
andps
mov
shlb
stc
fimull
xor
in
enter
out
vrsqrtps
adc
addr16
adc
insb
or
push
add
xor
cld
ss
pop
subb
or
sahf
jp
repz
cmp
jp
or
mov
push
mov
add
cmpb
neg
mov
popf
xchg
or
ljmp
shr
mov
and
jmp
push
or
pop
sub
sbb
push
dec
inc
push
jg
jle
mov
inc
and
testb
ljmp
test
in
dec
fdivp
push
fsubs
adc
inc
and
cltd
dec
lds
or
cltd
jae
outsl
test
pop
sub
out
daa
push
subl
cmp
xlat
sbb
and
ja
lods
add
movsl
adc
popl
xchg
loop
jno
test
test
in
in
sub
jp
fcoml
push
insl
in
je
stos
cli
outsl
cwtl
mov
iret
lea
jnp
xor
mov
std
push
aam
push
pop
mov
pop
inc
imulb
dec
mov
sbb
push
orl
sbb
adc
aas
icebp
movl
inc
test
pop
xor
cmpsb
movsb
sbb
icebp
pusha
adc
mov
cld
mov
test
in
cmp
aam
idivl
xchg
pop
add
dec
aaa
shrb
out
sub
aas
fs
dec
or
aad
xchg
stos
jne
mov
mov
xchg
push
push
pop
xor
test
std
mov
lcall
xor
xchg
adc
cld
loop
inc
loopne
add
cwtl
lahf
cwtl
inc
mov
inc
lods
jno
fidivrl
lcall
mov
movsb
shll
test
test
ss
add
xchg
out
xchg
or
mov
pop
iret
cwtl
mov
adc
nop
jo
test
push
neg
js
lret
mov
ss
or
cmpb
arpl
cltd
outsl
sbb
add
imul
fiaddl
aas
lods
mov
dec
stos
mov
xchg
stc
imul
cmpsl
xor
pop
xlat
pop
or
pusha
rol
shll
icebp
mov
iret
xchg
aas
stos
push
or
sbb
or
cmp
add
add
pop
daa
std
lods
fdivs
sbb
rep
pop
les
push
rorb
mov
inc
mov
repnz
stc
jle
pusha
pop
pop
dec
aad
xchg
cld
or
push
imul
jmp
xlat
imul
loopne
adc
jne
or
or
stos
frstors
push
inc
mov
cmpsb
xchg
jo
sbb
rcll
shlb
xchg
in
repz
je
and
js
es
add
data16
subl
push
and
cmp
call
out
push
jl
mov
xor
lods
or
cs
or
scas
add
and
pop
jp
pop
and
into
or
or
ss
movswl
jbe,pn
adc
push
into
inc
ljmp
repz
and
sahf
mov
mov
lret
mov
in
pop
sub
dec
cld
mov
mov
sub
xchg
call
jbe
repz
mov
cmp
cmp
insb
imul
mov
adc
jge
inc
stos
push
addl
outsb
jb
repnz
cmp
push
js
and
jo
icebp
insb
adcl
jns
xchg
dec
and
leave
pusha
out
loope
mov
lods
aad
xchg
lahf
xchg
arpl
mov
std
jne
vmovdqa
cmp
push
mov
ficomps
sbb
cltd
xchg
in
test
test
test
xchg
ret
fcoml
call
adc
loop
sub
mov
clc
clc
mov
sub
ja
jmp
mov
cmc
add
jl
sbb
pop
in
gs
cli
lcall
and
rcrl
enter
outsb
pushf
xchg
dec
mov
mov
sahf
or
test
adc
sub
add
push
cs
cs
mov
subl
ret
hlt
cmp
stos
mov
xchg
in
jecxz
push
xchg
inc
pop
inc
aad
mov
sub
xchg
push
cmp
gs
test
repz
inc
lock
adc
inc
gs
rclb
or
movsl
mov
call
in
dec
jns
dec
or
nop
mov
cmp
fadds
xchg
cmp
bound
out
mov
mov
sbb
fistpll
adc
adc
pop
and
es
ficoms
push
jb
lret
test
and
adc
fstl
lods
imul
sti
cmp
pop
filds
or
jne
pusha
fxch
enter
mov
xchg
outsl
cmp
pushf
jne
clc
stc
outsl
test
test
push
dec
rorl
xchg
data16
cwtl
pusha
loope
out
jp
mov
loope
lods
out
mov
fidivrl
inc
cmpsb
and
xchg
cmp
rolb
fisubl
mov
push
stos
xor
dec
roll
pusha
mov
xor
lods
pop
pop
mov
or
pop
jno
mov
sub
push
xchg
mov
test
stos
xor
cmc
imul
cs
lods
jle
fcmove
pop
sub
or
xor
test
fsubrs
lods
cmp
or
add
or
jb
enter
inc
and
jl
sub
sbb
xor
adc
dec
fwait
push
sbb
xor
cmp
push
or
cmpsl
adc
or
int
scas
adc
sbb
jbe
jge
bound
fwait
dec
or
cmp
lea
mov
or
and
cmp
daa
dec
lret
lret
ljmp
push
mov
pusha
and
mulb
cli
inc
cltd
out
dec
adc
sub
pop
loop
scas
xor
sbb
xchg
and
nop
pop
mov
dec
lods
rclb
add
mov
inc
mov
bound
sbb
jno
push
rcrl
inc
xor
stc
xlat
testb
data16
imul
xchg
mov
jecxz
repz
inc
xlat
push
xchg
shr
xchg
std
push
imul
and
fldenv
test
bound
pop
sti
jno
fdivrp
les
sti
inc
xchg
dec
pop
add
inc
cwtl
or
ds
jg
rol
add
aaa
dec
aaa
cmp
dec
push
scas
ljmp
jae
ljmp
test
fcmovnb
mov
xor
popf
mov
dec
adc
cltd
push
xchg
adc
lds
jno
mov
push
enter
les
cmp
ss
mov
mov
jecxz
xor
xor
fisttpl
popa
mov
call
clc
jecxz
and
adc
xchg
adcl
xor
idivl
and
sahf
lret
push
push
cmc
shl
inc
shll
xchg
jb
data16
hlt
stos
lahf
scas
fwait
outsl
dec
aad
and
fnsave
cmp
fisttpll
scas
dec
aam
jne
ja
jmp
jl
repz
inc
mov
push
cmpsb
into
xchg
pushf
cs
out
dec
in
ljmp
fwait
js
push
jb
push
bound
stos
aad
pusha
cmc
loopne
js
pmulhuw
push
adc
add
jno
push
out
jne
aaa
int3
dec
out
sbb
fbld
test
pop
int3
adc
ds
xchg
inc
mov
cmp
pop
sbbl
out
cmp
and
loope
mov
sbb
pushf
repnz
hlt
adc
jb
aad
pop
and
push
imulb
or
ss
dec
mov
cs
in
mov
lods
xor
or
mov
jns
jno
ret
imul
mov
movsl
mov
cwtl
cmp
jp
mov
xchg
mov
in
xor
pop
pop
pop
mov
sahf
nop
fstpl
data16
mov
insb
lock
add
sbb
jge
or
std
lret
xchg
dec
or
xchg
sbb
pop
scas
inc
cmp
lea
push
push
pop
femms
insb
inc
jl
add
cmpsl
aaa
into
mov
inc
int
mov
xor
int
scas
mov
or
int
xor
push
pop
rolb
ret
fiaddl
cmp
dec
test
fs
clc
pusha
sub
in
pusha
fdivl
aam
testb
outsb
mov
shrb
push
ss
xchg
outsb
cmp
imul
push
xchg
push
inc
fwait
push
push
inc
sbb
shrl
fwait
jae
cmpsl
test
scas
sbbl
leave
ret
push
sbbb
fmul
mov
enter
and
pop
lock
pop
test
cmp
xor
sbb
insl
xor
pop
aad
ret
xor
push
pushf
int
out
lret
fcmovnbe
xor
jno
xchg
mov
xchg
pop
xor
xchg
popf
lahf
mov
movl
dec
aas
jb
sbb
fcomps
xchg
out
inc
cltd
jo
ficompl
pop
mov
push
shrb
add
jae
aad
cmp
cmp
or
gs
adc
mov
in
xchg
xor
inc
or
insb
sub
addr16
cld
fstl
fucomip
das
sbb
jp
cmp
xor
mov
sti
rorb
adc
pop
in
std
xor
cmpl
shlb
or
fildll
jnp
out
or
xchg
in
popf
xchg
shl
mov
in
iret
cwtl
mov
adc
int3
divb
xchg
xchg
jp
std
xor
dec
test
icebp
mov
flds
mov
mov
pop
push
lock
gs
sub
int3
push
jg
push
xlat
leave
insb
xor
out
adc
and
mov
out
sub
jo
sbb
inc
jl
psubsw
scas
add
mov
pusha
popa
outsb
mov
jne
outsb
mov
sbb
adc
inc
les
popa
lahf
pop
cmp
push
inc
xchg
inc
fstpt
xlat
pop
and
cli
ds
negl
inc
fidivl
in
rcrl
fdivrl
xchg
push
mov
add
xor
es
out
sub
jb
mov
out
movsl
rorb
loop
push
fs
jmp
add
lods
jne
cld
fsubrl
in
add
lea
cs
les
xchg
and
and
xlat
mov
cmpsl
int3
out
jge
out
sahf
add
daa
fldcw
movsl
xor
mov
and
rorl
sbbb
dec
aad
mulb
cs
inc
mov
xor
pop
inc
jbe
cmp
aas
cmc
push
stos
test
pop
adc
cmpsl
jg
mov
ds
je
mov
inc
movsl
adc
mov
xchg
mov
adc
sahf
sahf
sbb
inc
sbb
insl
xor
jp
cld
cli
mov
xor
or
xor
fcoms
adc
dec
arpl
sub
leave
xor
xchg
je
lock
cmc
loopne
dec
cs
int3
shlb
lret
aad
scas
in
and
int3
adc
push
sbb
sbb
jg
inc
sbb
sbb
sub
jns
and
inc
jg
movsb
in
cmp
nop
aad
loop
push
push
ljmp
jg
push
into
or
pop
dec
mov
cld
jbe
cli
lods
enter
mov
mov
mov
mov
test
sub
xchg
sbb
stc
sbb
pusha
or
cli
pop
sahf
rcr
outsb
adc
mov
sub
gs
das
xor
dec
adc
les
or
adc
pop
and
lock
xchg
inc
loopne
enter
xchg
or
mov
mov
cmc
icebp
loop
push
gs
outsb
xorl
push
out
clc
idiv
xor
out
dec
cli
sub
inc
pop
ja
daa
sbb
scas
subb
std
testl
ja
adc
cmp
ss
fcomi
pop
inc
pop
inc
xlat
xor
mov
xchg
pop
jbe
cltd
int
mov
mov
test
push
push
inc
xor
pop
loop
push
scas
nop
lret
adc
push
xlat
daa
xor
xchg
xchg
mov
push
addr16
cli
xor
das
les
pop
int3
js
mov
and
divb
out
mov
movsb
fadds
fisubl
nop
mov
cmpsl
mov
xlat
xor
std
add
mov
push
sbb
popa
push
adc
dec
hlt
push
xor
cmp
mov
mov
fucom
jae
mov
lret
ret
xchg
jge
out
mov
pop
lea
das
fldenv
or
cmp
xchg
xchg
jge
iret
push
out
fisttpl
pop
hlt
ss
out
arpl
mov
inc
in
loope
imul
jmp
das
in
ljmp
int
lahf
data16
std
daa
test
xor
sbb
int
div
sub
shr
inc
test
jnp
repnz
out
test
xchg
and
mov
enter
mov
pushf
mov
arpl
xchg
nop
xchg
jno
add
out
sub
cmp
mov
cmp
popa
aam
nop
xchg
or
int
shlb
outsb
sbb
mov
push
mov
sub
jmp
and
xchg
test
push
stos
fs
pop
mov
mov
inc
mov
pop
outsb
push
lds
sub
dec
bound
int
out
clc
push
cmp
dec
loopne
enter
cli
push
adc
xchg
dec
addr16
cs
sub
scas
stos
adcl
push
mov
addl
rol
ret
sbb
test
mov
push
xlat
dec
stos
dec
dec
xchg
fstpt
orl
xchg
jmp
adc
lret
dec
fistpll
mov
adc
sub
popa
jb
mov
xor
sbb
cmp
out
jmp
cmp
cmovae
sub
sub
sbb
mov
jge
sub
inc
out
scas
les
ret
nop
fistl
ja
add
aad
mov
dec
fwait
inc
lahf
daa
cmpsl
push
clc
inc
daa
xor
movsb
test
loop
loope
insb
adc
aaa
rclb
mov
inc
push
ds
fcom
stos
fs
ja
pop
mov
mov
push
shr
jmp
or
sarl
mov
sahf
jg
repnz
je
xchg
cli
and
mov
es
stc
sub
adc
mov
aad
js
mov
and
jae
mov
std
jg
xor
adc
xor
imul
out
xorl
unpcklps
hlt
int3
mov
xchg
ja
pop
lcall
mov
xor
daa
dec
hlt
je
pop
jecxz
scas
mov
sub
dec
jb
mov
int
push
xchg
pop
mov
jecxz
mov
jne
push
decb
xchg
pop
popf
fadds
gs
mov
push
xlat
stos
xchg
xchg
arpl
cs
leave
xchg
inc
movsl
jmp
in
repnz
aam
stos
push
pop
hlt
call
pop
iret
jp
hlt
cmp
cmc
cmp
test
or
cmp
add
jmp
cmc
aad
mov
sub
scas
and
jne
add
fisubrs
and
insl
sub
mov
dec
data16
notb
lods
mov
jmp
repnz
inc
mov
fisttps
or
sub
sub
lahf
pop
mov
jne
pop
and
or
push
test
adc
inc
inc
testl
mov
lahf
cmpsl
lods
cmp
mov
enter
pop
repz
mov
adc
dec
push
mov
pop
jb
mov
jl
out
test
ss
pop
cltd
sub
pop
scas
ja
xchg
xor
add
cmc
mov
and
cli
jne
push
aam
fs
add
push
adc
ret
pop
add
fwait
pop
or
mov
push
or
mov
js
pop
lret
fcmovnu
cmp
pusha
arpl
or
mov
sbb
adc
out
adc
xchg
dec
sti
add
adc
push
pop
and
les
or
jmp
das
nop
pusha
int3
out
jno
out
jnp
repz
mov
call
enter
cmp
ficompl
lods
icebp
push
lds
cmpsl
mov
insb
inc
insb
into
loope
movsb
xor
xor
mov
jbe
jmp
daa
mov
mov
dec
jl
pop
xor
pop
sarb
test
jle
jmp
out
add
mov
sbb
imul
pop
push
mov
sbb
std
aam
jae
mov
sbbb
imul
shlb
cli
loope
loopne
mov
enter
dec
ret
orb
and
push
jg
adc
scas
add
sbb
inc
adc
push
inc
add
jecxz
dec
mov
stos
shlb
mov
push
lcall
adcb
cltd
mov
xchg
into
ja
pusha
sbb
jae
std
out
aam
loope
in
or
imul
sbb
stc
cmc
mov
push
or
popf
dec
roll
fsts
xor
inc
stc
das
mov
add
daa
filds
jl
mov
ss
scas
sarl
loope
add
adc
lock
pop
mov
das
dec
push
sbb
pop
mov
mov
lods
mov
mov
xor
in
sbb
ja
cmp
pop
ret
fnstenv
adc
in
out
pop
inc
mov
add
fsubp
push
mov
xchg
cmc
lret
popa
shrb
jecxz
addl
mov
ss
mov
stos
insb
xchg
or
push
xchg
movsb
cmc
popa
sbb
mov
gs
loop
sbb
test
inc
ljmp
add
fsubs
adc
xchg
cmp
icebp
stos
lock
or
test
inc
jns
loope
mov
inc
add
push
inc
fs
leave
dec
lret
push
mov
cmp
dec
and
icebp
cld
adc
add
dec
stc
shrb
cmpsl
enter
xchg
dec
mov
push
cmpsl
int3
sbb
ljmp
pop
stc
adc
das
add
mov
in
mov
or
cmpsb
loope
mov
inc
mov
sub
adc
addr16
loopne
add
adc
aas
mov
inc
jle
push
frstor
xor
aam
loopne
in
jo
jne
fnsave
fbld
cmp
jp
and
loope
jl
lret
dec
orl
jno
pop
fstenv
push
cmp
add
pusha
aas
mov
and
test
arpl
shr
cmp
push
pop
push
cwtl
adc
stos
xchg
mov
dec
cmp
pop
fbstp
add
aas
stos
stos
push
imul
pop
ret
pop
or
addb
cmc
xchg
cmp
fs
sbb
test
rcll
das
xchg
dec
jo
mov
fdivs
lods
xchg
loopne
inc
mov
dec
adc
jno
clc
and
jmp
adc
aaa
xchg
sbb
movsb
adcl
xchg
loopne
push
adc
fnstsw
movsl
mov
mov
mov
jecxz
and
jge
add
rcrb
cltd
cmp
ljmp
clc
hlt
mov
insl
push
hlt
mov
push
test
jne
cwtl
insl
xchg
pop
dec
lods
fs
mov
and
push
push
push
psubsb
in
jl
rolb
jle
fcomip
inc
jne
pop
sarl
mov
add
mov
fisubs
sbb
test
pop
sub
push
push
jle
inc
and
les
test
pusha
fdivrp
mov
mov
cld
jb
push
inc
jno
scas
arpl
test
add
cld
bound
inc
stos
sahf
imul
xchg
daa
dec
roll
pop
lahf
in
pop
push
cwtl
aaa
insl
lahf
sbb
pushf
adc
pop
pop
in
test
lcall
nop
std
shrb
inc
arpl
jb
xchg
add
mov
aas
pop
into
and
cmp
lods
dec
decb
mov
clc
cmpsl
ja
or
cmc
mov
fwait
fs
jb
push
iret
inc
pop
inc
lcall
cmp
dec
mov
mov
xchg
push
cmp
push
mov
sub
stc
cmp
aas
dec
inc
sbb
jno
arpl
inc
pop
sahf
scas
sub
int
mov
punpckldq
push
push
mov
adc
test
or
outsb
icebp
dec
sahf
mov
lea
rclb
cmp
sbb
cltd
xchg
gs
and
out
daa
xchg
push
mov
and
popa
jae
clc
hlt
and
lods
insl
push
rorb
inc
sbb
imul
push
movsl
adc
xchg
inc
or
mov
pop
add
loop
sti
or
push
test
and
mov
idivb
popf
out
repz
and
scas
xor
mov
push
cmp
aad
jae
jl
lret
add
sarb
rolb
xor
std
or
andb
jae
in
dec
outsb
pop
ss
lret
outsl
ret
dec
sbb
cmp
loop
jg
mov
rcl
push
sbb
jbe
jo
call
inc
movsl
and
pop
dec
jae
mov
dec
jo
pop
push
mov
cmp
ja
out
adc
cmp
adc
in
lds
inc
insl
and
pushf
sbbl
daa
xor
repnz
mov
movsb
mov
gs
or
inc
or
test
add
ja
cmpsl
mov
loope
jecxz
sbb
test
inc
inc
or
jecxz
jl
cli
addr16
inc
clc
mov
mov
imull
enter
push
xchg
or
test
mov
ja
rorb
and
aas
movsb
inc
jae
adc
out
scas
pop
dec
subl
xchg
sarb
js
dec
and
or
into
pop
test
adc
dec
lret
xor
into
lret
or
lahf
stc
jae
pop
repz
adc
fimull
lahf
fimuls
fdiv
jno
cmp
addr16
cmp
in
dec
int
pop
sbb
hlt
aad
loop
leave
jp
cwtl
rcrb
add
xor
add
stc
insb
cld
push
xor
and
dec
push
xchg
or
push
repz
dec
cwtl
xchg
mov
insb
mov
mov
aas
sub
loope
push
lahf
mov
pop
dec
xchg
pop
clc
or
fidivrs
outsw
fdivp
and
xchg
xor
aas
loopne
xchg
dec
cs
xor
into
cmp
lods
clc
lcall
xchg
roll
xchg
mov
adcb
mov
sbb
mov
mov
enter
fadds
lcall
mov
insl
movaps
mov
and
ficompl
cmpsb
shrl
test
imul
mov
pop
mov
sahf
xchg
sub
dec
into
lcall
cmp
pop
cli
pop
inc
negl
pop
aas
mov
aad
dec
fidivl
subl
lock
in
xchg
test
cltd
aam
and
loop
or
fstps
in
icebp
jecxz
push
ljmp
mov
pop
bswap
sub
or
add
push
sbb
adc
cmp
ds
mov
xor
sbb
jne
repnz
jp
pusha
mov
imul
pop
xchg
shr
dec
cmp
std
adc
test
gs
fimuls
adc
ret
inc
jl
adc
push
adc
je
jg
cmp
int3
cmp
cmpsl
xchg
std
pop
mov
out
jne
cld
push
add
gs
dec
rcll
push
enter
loop
mov
mov
repz
lds
or
cmp
inc
fsubl
enter
jnp
popf
lcall
inc
mov
lea
rorl
or
jno
cmp
sbb
sbb
pop
xor
jge
jae
push
pop
insb
stos
xchg
mov
mov
shrl
vmread
xlat
std
xor
inc
ret
leave
repnz
cld
jmp
mov
jp
xor
or
and
mov
mov
sbb
repnz
gs
ljmp
stc
cld
xor
fidivrl
cmp
cmpl
push
cmp
mov
add
jbe
sbb
in
mov
pushf
cmc
in
mov
mov
loopne
mov
jbe
outsb
or
inc
adc
adc
add
cmpl
push
inc
out
xor
aaa
cwtl
fisttpll
popf
lea
aas
out
mov
adc
and
fsubrl
not
adc
out
insb
sahf
iret
rolb
mov
xchg
cmp
test
mov
jecxz
cmc
gs
dec
inc
stos
cli
idivb
aas
jmp
mov
push
sbb
cmp
out
dec
rolb
mov
fimuls
xorb
sbb
aaa
push
out
shll
sbb
in
xor
xchg
mov
mov
lahf
fnstsw
cwtl
cltd
fcmovnu
outsl
sbb
sbbl
loope
fnstsw
mov
inc
test
pop
xchg
scas
je
in
xor
ljmp
icebp
test
jb
mov
pop
mov
inc
sub
bound
add
mov
pand
cmp
lret
adc
add
mov
mov
aaa
pop
jl
add
mov
jno
rclb
or
ljmp
inc
jno
sub
sbb
stc
sahf
dec
pop
out
xchg
lret
ja
inc
mov
or
adc
xchg
out
sbb
imul
xor
ss
cmpsl
movsb
jge
dec
pop
adc
dec
or
mov
repnz
inc
xor
adc
outsb
pushf
xchg
out
sarb
inc
push
pop
int
das
mov
cmpsl
ds
cmp
push
fprem
mov
imull
test
jno
mov
lock
fnclex
das
push
push
adc
loopw
sbb
in
dec
sub
dec
xor
mov
or
insl
mov
ret
shrl
loop
fbld
jge
insl
jmp
mov
enter
push
push
insb
movsl
cmc
es
xchg
push
push
add
cld
das
dec
add
sub
dec
push
fildll
imulb
mov
add
ss
ss
or
pop
sbb
dec
pusha
add
adc
loope
or
scas
cmp
mov
cltd
mov
push
imul
mov
sbb
sub
and
pop
or
fisttpl
xor
add
and
daa
jb
cmc
lds
mov
es
or
or
lret
ja
incb
push
mov
push
in
sti
sbb
ret
pop
and
sub
push
lahf
loopne
jp
jmp
xchg
movsl
aaa
cmpsb
lea
cmp
insl
lds
inc
test
mov
fisubs
push
cmc
ja
mov
fbld
std
mov
add
test
and
shl
stos
jns
orl
mov
lret
push
arpl
outsb
ljmp
mov
mov
rcrl
dec
les
jno
lods
mov
pop
inc
sbb
jnp
lea
adcb
sbb
lcall
nop
jae
sub
fwait
cmpb
or
mov
and
xlat
and
sbb
push
jmp
xchg
jmp
jo
mov
xchg
push
imul
dec
insb
aas
dec
cmp
scas
fmuls
push
call
dec
and
cmp
jl
adc
movsb
cli
or
sub
ss
js
xchg
jnp
outsl
pop
cmpsb
out
xor
cltd
int
xchg
fldcw
mov
mov
bound
test
movsb
or
repz
cmpsb
fisttpll
jno
push
xor
xchg
add
adc
mov
or
ja
or
in
dec
int3
xor
cli
sbb
push
jl
push
insb
sbb
mov
sub
sarb
and
cld
mov
test
adc
pop
nop
cmp
mov
mov
les
jp
mov
add
add
and
repnz
lea
imul
xchg
inc
xchg
das
push
in
sbb
in
mov
into
mov
sub
loop
jge
push
sbb
mov
hlt
mov
mov
inc
outsl
cmp
outsl
adc
scas
and
adc
imul
sbb
int3
lcall
outsl
das
movsb
dec
mov
adc
mov
mov
popa
sti
and
jmp
lcall
dec
aam
out
sbb
adc
push
cmp
jge
lahf
in
nop
xchg
jns
push
lods
mov
dec
sub
push
outsl
jge
mov
cltd
outsl
mov
les
mov
iret
mov
mov
pop
lret
sbb
jnp
repz
inc
sbb
movsb
imul
arpl
lds
in
sub
mov
adc
mov
andb
lods
in
js
stos
test
test
lods
fistps
lret
push
je
xlat
stos
sbb
movsl
out
test
inc
add
imul
mov
fwait
lods
aam
xor
mov
aam
ficomps
stos
pop
push
aaa
icebp
sub
mov
out
lock
add
cmp
jecxz
shlb
sbb
xchg
cld
or
xchg
cld
sub
dec
mov
jns
cmp
adc
enter
xor
sub
das
fs
inc
jle
int3
sbb
popa
mov
movsb
mov
insl
inc
add
inc
aas
jnp
inc
les
mov
sbb
fcmovnb
dec
repz
pop
mov
pop
popf
cmp
push
mov
pop
mov
inc
popa
loop
pop
mov
loopne
add
mov
mov
and
add
out
xchg
inc
and
xor
adc
aad
ret
or
imul
inc
and
jp
test
jg
sbb
int
pop
jb
test
inc
jle,pt
push
xlat
sbb
pop
push
mov
xor
mull
cltd
test
sbb
mov
mov
mov
jae
pop
xchg
sub
call
mov
fld
xchg
mov
imul
add
cmpl
push
or
lea
movsb
push
movsl
test
rolw
and
or
lods
xchg
stos
addl
xchg
mov
pop
xchg
gs
in
loopne
xorb
inc
and
xchg
cmp
rorl
or
sub
jl
cltd
add
insl
sub
and
push
les
mov
cmp
loopne
sbb
xor
je
sub
jle
ret
scas
sub
pop
xor
icebp
ds
or
test
test
dec
jmp
sbb
mov
sahf
test
fcomps
int
movsl
adc
sbb
mov
and
rcrl
xchg
xor
or
mov
out
popf
sbb
stc
mov
cmp
enter
ja
sti
bound
fnop
insl
ret
pop
dec
inc
add
mov
leave
add
xchg
jge
pop
test
or
jae
cmp
pop
in
adc
xchg
mov
sbb
and
in
jmp
push
pop
push
les
dec
adc
testl
in
cmp
add
pop
inc
mov
dec
das
test
imul
or
imul
mov
mov
outsl
outsb
arpl
test
inc
xchg
call
mov
pop
or
mov
mov
push
loop
dec
cmp
cs
add
ret
sub
sbb
sub
jg
cmp
adc
xor
sbbl
out
ljmp
xorb
xlat
jbe
push
dec
xor
int3
xor
xchg
xchg
int
xorb
mov
add
les
bswap
xor
push
stos
testb
and
sahf
or
adc
lds
cmp
rorb
or
popa
push
movsb
or
sub
outsl
je
sbb
push
or
fsubs
in
stos
mov
fisttpl
movsb
xchg
dec
icebp
repz
sub
loop
xor
push
test
imul
es
jns
out
sti
pop
addb
in
mov
dec
add
pop
pop
loop
mov
mov
mov
xchg
in
mov
adc
cmp
xchg
push
cmp
dec
in
adc
inc
push
ljmp
add
test
adc
scas
notl
scas
outsb
jno
out
mov
jno
scas
ja
adc
or
push
iret
add
jg
dec
cli
nop
cld
fisttpl
faddl
jl
movsb
cmp
movl
inc
or
rcrb
in
and
lret
lds
and
xchg
daa
dec
pop
mov
jp
std
sub
ja
mov
dec
and
fwait
push
or
and
inc
xor
insb
xchg
xor
jb
lea
jecxz
aam
push
xor
push
repz
imull
faddl
pop
and
fwait
popf
call
xchg
sbb
fwait
push
aas
mov
popa
shll
lods
cli
jnp
shl
xchg
cmp
mov
scas
jo
jmp
adc
cs
push
xor
fucomi
pop
xlat
sub
adc
sub
jl
inc
gs
sub
and
leave
sbb
lock
scas
aaa
loope
sub
loopne
addr16
aad
into
adc
faddl
push
out
mov
rcrl
sbb
sub
clc
xor
mov
push
ds
xorb
movsb
das
loopne
pusha
aaa
inc
test
ficompl
pop
adc
ror
stos
nop
lds
lahf
outsb
lods
ss
mov
in
es
xchg
ret
test
mov
add
xchg
sbb
pop
jl
repnz
inc
cld
stos
lods
test
pop
setnp
pop
add
into
xchg
test
jbe
lock
adcl
fldt
movsb
ja
ja
xchg
dec
cmp
cli
test
mov
lea
stc
imul
lcall
ss
ror
mov
cs
sbb
adc
mov
dec
mov
ja
loop
jno
lahf
xor
lret
add
mov
and
xchg
and
inc
and
sub
enter
call
push
mov
pop
mov
scas
xlat
pusha
mov
into
rol
shlb
movsb
jp
push
cmp
mov
cmp
push
sub
push
jmp
add
cmpsl
mov
cld
aad
aaa
fsubp
sub
fstpt
test
lahf
pop
in
cmp
pop
ret
fbstp
rcrb
push
adc
std
or
push
sarb
pop
and
aad
sbb
mov
popf
test
mov
cmpl
and
adc
jbe
sub
xchg
loopne
jge
popa
push
jo
in
pushf
push
push
arpl
add
ret
lods
cmpsb
aas
rorl
mov
dec
add
icebp
jecxz
mov
gs
ds
ds
lock
xor
xor
sub
scas
mov
lret
xchg
mov
xchg
in
stos
cmc
xchg
mov
xor
pop
mov
jmp
test
or
outsb
sub
add
loop
test
out
mov
std
mov
sbbl
sbb
jbe
jno
xchg
dec
mov
jb
imul
and
lret
in
test
jl
mov
into
testl
jge
int3
stc
outsb
mov
push
cmpsb
imul
leave
arpl
sub
add
cmp
ret
dec
pop
cmp
push
popl
nop
sbb
xchg
mov
dec
test
and
loopne
jecxz
fiaddl
cmpl
iret
outsb
adc
cli
andb
cli
adc
inc
test
mov
daa
mov
sub
leave
mov
loopne
outsb
or
outsl
insb
pushf
bound
ret
icebp
inc
das
insb
lods
inc
bound
push
dec
fwait
or
add
arpl
add
jae
movsl
jbe
cmp
hlt
repz
mov
cmpsl
pop
or
jecxz
cmpsl
mov
rcr
mov
jb
add
js
pop
cwtl
mov
into
mov
shl
add
clc
cli
dec
push
cmp
shll
cmp
repnz
in
pushf
dec
push
ret
js
cli
mov
into
sbb
lcall
mov
lret
and
cmpsb
rolb
push
mov
lods
daa
and
pop
or
jo
fidivs
or
rol
fs
or
ret
adc
fmul
test
lret
or
xchg
adc
mov
and
cmp
adc
je
mov
outsl
dec
jmp
lret
fists
dec
jnp
ret
scas
leave
pop
dec
bound
faddl
cmc
scas
cmpsl
dec
std
ret
aad
clc
mov
daa
xor
lcall
sub
bound
or
push
ret
int3
xchg
loop
mov
dec
fisubrs
mov
lods
jmp
push
pop
mov
cmp
push
sub
mov
jl
jne
sbb
into
stc
pop
decb
cmp
add
and
xor
push
xchg
test
and
xor
fidivs
mov
dec
in
sbb
mov
mov
arpl
lock
ret
xchg
sbb
pop
inc
push
and
in
mov
outsb
ss
icebp
in
pop
daa
add
pop
in
sbb
mov
fdivp
and
sub
dec
sbb
addr16
mov
push
cmpsl
add
fwait
and
dec
inc
mov
repnz
repnz
mov
test
mov
inc
mov
mov
mov
iret
jmp
pop
aas
push
cmpsb
sti
pusha
aam
mov
mov
push
pop
and
xchg
mov
dec
dec
xor
sub
js
sti
mov
pop
pop
push
dec
sbb
pop
mov
inc
rcll
jecxz
dec
push
roll
rol
jmp
mov
clc
js
xchg
pushf
add
bound
js
ds
pop
push
inc
shrb
jo
xchg
jbe
push
aas
cmpl
jecxz
xor
cltd
std
add
imul
addr16
cmp
inc
mov
add
jno
sub
mov
mov
push
sub
std
and
pop
mov
enter
out
and
popa
lcall
push
lcall
in
pop
mov
gs
inc
insl
xchg
pop
stos
and
call
imul
push
data16
data16
gs
xchg
dec
pop
gs
nop
adc
cmp
sbb
xor
jno
xchg
push
pop
movsb
pusha
pop
xchg
mov
push
xchg
mov
test
outsl
xor
insb
adc
mov
shll
cmpsl
adcl
mov
icebp
repz
pusha
lcall
fmuls
andl
push
add
in
mov
lea
into
jne
les
sar
out
pushf
ja
fildll
sbb
add
popa
push
cmp
enter
fstpt
icebp
imul
inc
cmpsl
mov
mov
inc
jae
sub
ds
and
test
cmp
fiadds
ljmp
fdivl
cltd
ror
test
adc
add
dec
jbe
stc
or
popa
das
fdivrl
scas
nop
cmp
sbb
or
jne
mov
sbb
shll
add
xchg
loope
xor
jle
inc
pop
scas
sbb
lcall
clc
fsubs
push
xor
imul
in
outsb
push
rcrb
jge
out
push
setae
lods
pop
jbe
orb
shll
jecxz
aas
insl
cwtl
int
daa
mov
incb
mov
mov
mov
cmp
push
sub
cmpl
movb
insb
push
test
xor
sahf
clc
jno
bound
cmp
dec
nop
in
pop
test
pop
orl
or
mov
cmp
or
pop
xchg
cmp
push
jnp
repz
mov
lock
imul
sbb
sub
inc
xor
setnp
outsb
loope
icebp
xor
jo
jb
or
cmpsl
es
xchg
adc
push
jge
cmp
pop
shll
mov
mov
popa
pop
enter
daa
dec
sub
sbb
dec
loop
sbb
inc
sub
dec
jno
pop
lods
mov
dec
repnz
jp
inc
xor
jg
xchg
pop
and
pop
pusha
in
cmpsl
pop
xor
popl
and
mov
xchg
mov
daa
mov
inc
push
call
cld
pop
adc
stc
lods
pop
push
mov
pop
hlt
and
sbb
jae
sarb
hlt
in
jno
aad
fdivp
cmpsb
dec
xchg
cltd
xchg
push
dec
sbb
cmpsb
and
fwait
scas
outsb
mov
rcl
xchg
sub
in
or
pop
imul
dec
nop
adc
mov
jmp
rorb
mov
mov
jl
fcmovbe
orb
pushf
xchg
push
lock
lods
xchg
mov
xor
cltd
mov
jne
fwait
fwait
fwait
rorl
mov
inc
sub
mov
adc
outsl
rclb
and
or
cs
lds
adc
or
fnstcw
mov
sub
cmc
sub
or
jmp
aad
fcmovnb
repz
or
loop
cmp
movb
inc
stc
add
jg
lret
mov
fs
inc
adc
xchg
add
mov
xchg
cmp
movsl
and
shrl
clc
jmp
insb
jbe
imul
pop
pop
mov
fwait
or
and
loopne
dec
pop
mov
and
dec
add
arpl
popf
test
incl
xchg
mov
jo
dec
sub
mov
fidivrl
imul
add
aad
scas
in
popl
aaa
int3
xchg
nop
adc
daa
imul
andl
sub
lret
enter
ja,pt
ret
cmp
cli
fistps
addr16
push
sub
fmuls
sbb
stc
sub
lcall
adc
xlat
push
adc
sahf
jmp
add
xor
and
push
pop
inc
mov
jl
push
bound
xor
jecxz
mov
sbb
cs
aad
es
or
push
rcrl
xacquire
test
into
mov
jbe
cmp
dec
test
add
jo
push
mov
mov
lcall
and
fstps
ljmp
add
sbb
movsl
push
or
inc
call
add
or
push
outsl
push
leave
xor
inc
pop
pop
lods
insl
ja
dec
cmp
add
imul
lods
popf
out
inc
clc
mov
pop
mov
cmpsl
inc
fcoms
daa
pop
in
push
idivb
ja
jg
dec
scas
mov
add
jmp
leave
adc
orl
pop
mov
sbb
adc
jge
push
nop
cld
jb
stc
test
lds
mov
mov
call
xor
mov
ds
idiv
and
or
push
imul
stos
or
mov
icebp
add
inc
popa
mov
outsb
insl
test
into
std
call
pop
lods
pop
jecxz
xchg
sbb
jl
sub
xchg
test
inc
or
xchg
rorl
int3
ja
xlat
push
test
daa
xchg
call
cmp
push
les
jns
fisubrs
in
aam
stos
pop
push
sub
mov
jns
pop
and
test
pop
pop
mov
push
inc
adc
xchg
jae
pop
aam
gs
syscall
fldt
lods
ret
and
lahf
lret
test
mov
sub
nop
mov
std
push
cmpb
adc
mov
mov
adc
pop
dec
and
sub
adc
push
pop
mov
and
cmp
lahf
and
sbb
nop
mov
lds
pop
jae
rorb
pop
repz
push
xor
cmc
jge
jg
outsb
cmc
adc
and
pop
aam
dec
cmpsb
mov
lahf
xchg
mov
scas
pop
inc
mov
mov
or
stc
add
sarl
rcrl
sub
aaa
cmpsl
out
hlt
scas
xchg
ss
adc
add
outsl
setl
mov
daa
sbb
scas
dec
push
cltd
aaa
mov
mov
enter
mov
rclb
fwait
rorb
in
mov
hlt
in
fwait
xor
xchg
fadd
int3
test
add
cld
test
dec
loop
shl
jae
xchg
jle
adc
mov
sbbl
test
outsb
rorb
repnz
xchg
pop
out
stos
sbb
jno
sub
int
cmp
fnstenv
pop
pop
scas
push
adc
test
loop
add
mov
rorl
pop
outsl
aas
cmpsb
pop
loope
jb
loop
in
lods
repz
pop
push
mov
xchg
xchg
or
aaa
xchg
ja
push
pusha
out
push
xchg
or
push
mov
clc
mov
loopne
test
or
jmp
sub
add
xchg
xchg
mov
fwait
adc
cmp
mov
mov
inc
mov
fcmovne
mov
aad
ret
jno
fsub
sbb
scas
lret
push
in
and
push
or
push
shl
int
outsb
mov
sbb
sarl
push
jle
and
xchg
inc
das
iret
push
lods
jbe
mov
ljmp
mov
add
adc
push
cmc
in
jl
adc
and
roll
ja
mov
add
mov
mov
cmp
sub
mov
ficoml
and
push
aas
xchg
rcrl
test
add
mov
test
filds
loope
jecxz
push
push
mov
add
test
push
dec
push
aad
das
add
xor
test
jns
dec
mov
sub
mov
cmp
pushf
push
jb
fbstp
jmp
jge
jmp
xor
mov
sbb
sahf
cmp
pop
jge
rcrb
pop
xor
lahf
pop
mov
sub
pop
xchg
insl
pusha
xchg
addr16
inc
cmpsl
and
sbb
loopne
cmp
inc
pop
fistl
pop
mul
clc
arpl
jl
cmc
sub
sti
imul
in
insl
push
adc
and
mov
out
in
pop
or
cmpsl
rcrb
jae
mov
or
imul
cld
scas
or
out
jns
and
cmp
push
jmp
mov
fsub
xor
pop
mov
cmc
pop
iret
push
adc
fs
aaa
lds
mov
in
add
aad
mov
fmull
js
cltd
and
jmp
mov
int3
fdivrl
pop
xchg
inc
iret
xchg
jecxz
in
xor
fdivl
or
fs
ret
popf
add
pop
lcall
sub
fld
sbbb
das
stos
notb
dec
mov
jo
pop
push
dec
out
pusha
mov
mov
push
fcompl
jmp
jmp
xchg
sub
jnp
cmc
in
mov
push
out
mov
adc
in
sub
cmp
mov
ret
adc
sub
add
hlt
cmp
jg
jns
pushf
cmp
sbb
dec
fdivr
adc
stos
inc
inc
cmp
add
jge
scas
add
adc
sahf
mov
mov
jl
jge
jecxz
xchg
jno
imul
xor
mov
pop
mov
push
dec
dec
sbb
sbb
call
and
adc
lahf
test
mov
or
inc
dec
call
pop
pop
rcrb
fisubrs
out
add
loop
push
loop
pop
fcomip
divb
loopne
add
aam
push
mov
lea
add
jns
add
dec
leave
sub
push
inc
lret
xchg
ret
nop
nop
mov
or
push
imul
jg
push
test
into
lcall
clc
in
and
inc
mov
or
mov
add
pop
mov
jp
fsubrs
push
mov
add
ja
lods
aaa
pop
ret
shll
out
repnz
mov
sbb
ret
sub
lods
push
loope
dec
fimull
inc
dec
add
jp
jns
dec
loope
inc
mov
xor
mov
imulw
dec
add
and
push
popf
and
nop
mov
and
mov
mov
scas
xor
push
insb
jae
decb
fistpl
cmp
mov
iret
inc
pop
fwait
pusha
addr16
xor
leave
mov
xchg
loop
leave
in
or
daa
cmp
push
jp
aad
lea
mov
in
loopne
fcmovnbe
sahf
stos
dec
popf
cmp
movsb
repz
mov
mov
bswap
adcl
lods
rcll
pop
jns
in
and
fstpt
adc
imul
pop
or
jno
movsl
push
mov
mov
add
fdivs
cmp
nop
data16
cltd
dec
outsb
in
std
ss
stos
inc
add
inc
mov
sub
shrb
fcomip
xchg
mov
scas
sarb
adc
fcomps
mov
sbb
mov
xor
mov
sub
rcll
scas
hlt
sub
push
flds
sbb
jo
cli
popf
jle
je
pusha
xchg
cmp
fidivs
popa
jbe
add
push
in
dec
xor
shlb
sub
sub
addr16
mov
fnstcw
test
in
insl
mov
gs
inc
pop
dec
cmp
and
test
call
loopne
imul
inc
jl
ret
out
sahf
ss
ljmp
mov
and
stc
sbb
rorl
ja
icebp
jl
mov
and
into
xchg
and
mov
add
stc
inc
lcall
and
jo
shl
clc
xchg
push
pop
outsb
ffree
sbb
pop
dec
aas
pop
cmc
xchg
jo
in
dec
or
jae
nop
fst
push
arpl
dec
mov
imul
testl
push
mov
lret
test
inc
pop
loop
lods
sub
sbb
int
or
push
addr16
xchg
sbb
loope
pop
pop
imul
pop
xorl
js
sarl
lcall
jae
ret
dec
adcb
and
cmpsl
popf
xchg
sbbb
pop
scas
inc
fldpi
dec
push
pop
jns
sahf
pop
test
dec
push
sbb
xchg
das
subl
mov
pop
fadds
rcl
push
repnz
int3
test
sbb
xor
jo
pop
adc
inc
jbe
mov
in
vmovhpd
out
out
cmc
js
mov
out
rolb
adc
in
sub
loopne
mov
jl
sbb
fs
sahf
sub
mov
loope
or
lret
jne
fdivrl
push
orl
call
dec
imul
js
jne
in
in
xchg
stc
test
arpl
call
sbb
dec
lcall
mov
push
xchg
ljmp
and
enter
mov
imul
xor
lahf
pop
fxch
or
leave
es
adc
ds
xor
jecxz
pop
mov
lahf
test
stos
jecxz
and
movsl
push
flds
xor
push
jg
adc
or
mov
push
pop
mov
push
ljmp
sbb
sbb
loope
data16
add
in
xor
or
adc
mov
sarl
and
lds
xchg
inc
dec
xlat
or
movb
outsb
dec
mov
pop
push
sub
ror
fidivs
xor
cwtl
inc
mov
mov
in
xchg
fsqrt
push
xchg
mov
ds
sbb
jnp
in
je
lods
leave
es
sub
adc
push
je
es
out
mov
scas
mov
shrb
mov
add
jae
ror
in
adc
push
cmpsb
in
adc
ret
xor
imul
pop
mov
ffree
sub
xor
lea
int
lcall
inc
mov
in
dec
xchg
movb
jbe
sbb
bound
push
sub
sub
in
lods
iret
dec
add
fwait
scas
and
push
jb
cmp
adc
xchg
movsb
lods
pop
cwtl
gs
cs
pushf
xchg
lcall
test
idivb
or
test
mov
outsb
arpl
test
jae
jp
pop
and
dec
mov
aas
mov
mov
or
adc
cmp
cmpsb
pop
jge
xor
clc
out
jnp
mov
inc
in
in
mov
sub
jp
out
inc
call
ja
aad
cmpsb
rclb
aaa
add
mov
jne
push
xor
xchg
sub
or
gs
daa
mov
jmp
loope
jb
lcall
sub
das
adc
jns
adc
daa
aad
xlat
mov
lds
and
pop
mov
daa
loopne,pn
jns
pop
push
fs
ja
xor
fisttpll
xchg
push
lds
and
out
data16
mov
mov
sub
int
mov
pop
sub
imul
push
outsl
subl
imul
pusha
ret
data16
test
cmp
testl
push
gs
jne
lret
jp
shll
in
inc
pop
mov
push
sub
inc
leave
neg
roll
pop
enter
jg
imul
faddp
mov
mov
add
xchg
fsubrp
mov
or
in
inc
jp
sub
push
jge
or
pop
repnz
aaa
push
outsb
sbb
or
mov
mov
pop
dec
dec
out
call
cmpsl
fisubs
mov
mov
js
push
out
aam
call
cmpsb
inc
mov
push
jb
jo
inc
sbb
scas
repz
test
shlb
pushf
jp
jle
test
aam
cmp
and
mov
adc
adc
lret
mov
push
cwtl
jp
xlat
push
test
cld
dec
xor
fwait
inc
pop
pop
outsl
mov
push
lods
mov
ret
dec
sbb
mov
stc
lret
daa
test
mov
loopne
cmp
mov
scas
les
pop
jnp
in
jns
jne
jle
aam
add
subb
pop
scas
push
jg
push
push
fdivrl
in
movsl
es
add
aas
fnstcw
ljmp
roll
stc
or
cmpsl
cmc
aad
cmpsl
mov
or
fbld
bound
jno
fildll
lods
test
jno
fisttpll
dec
test
cmpsl
in
mov
inc
add
stos
jbe
dec
pop
testb
push
jl
xchg
mov
push
push
inc
out
mov
sbb
aad
adc
push
cltd
sahf
xor
sub
xor
pop
iret
mov
cmp
sti
dec
mov
and
andl
imul
loope
mov
add
dec
iret
dec
ss
fstpt
sub
jp
aad
jae
cmpps
or
push
jb
das
push
add
push
jle
cmp
xchg
pop
or
cld
sbb
mov
loope
or
push
add
mov
push
jmp
lahf
out
rcrb
and
jge
dec
mov
cwtl
scas
sbb
popa
stos
push
sbb
call
rcll
clc
jbe
lods
and
dec
dec
sbb
lods
xchg
inc
shrb
jae
mov
shll
repnz
lods
xlat
fcmovnu
jnp
add
jne
hlt
adc
insb
out
mov
push
lock
out
dec
add
xor
or
cmp
mov
inc
cmc
jecxz
loope
out
jno
les
adc
pop
mov
dec
mov
and
lcall
inc
cltd
mov
shlb
push
iret
dec
xor
adc
decl
lds
aad
add
and
xchg
arpl
dec
rorl
jb
or
jnp
seta
mov
cmpb
out
ljmp
aaa
nop
scas
lods
lret
and
leave
xor
test
mov
pop
notb
outsb
leave
pop
sub
cmc
aas
ret
jno
testl
sbb
push
fstps
cmpsb
into
iret
out
mov
mov
out
xor
add
sarl
dec
xlat
repnz
push
pop
xchg
cmp
mov
cmp
mov
jo
and
rcrb
adc
adc
push
mov
or
loopne
sub
lods
xchg
inc
xlat
dec
mov
fcompl
bound
nop
cltd
sbb
xor
lahf
pop
sarl
les
adc
loop
test
das
mov
inc
and
inc
rorb
mov
cmp
loop
dec
mov
loop
and
push
push
cmpsb
pusha
dec
cmpsb
mov
sbb
loopne
xchg
sbb
test
mov
jge
test
cs
sbb
sub
test
mov
mov
out
cmp
in
mov
lcall
call
loope
stc
add
adc
fdivrs
gs
push
scas
adc
push
cs
xchg
xor
ficoms
cmpsb
popf
cs
dec
rcrl
mov
test
cmp
shr
adc
cmp
pop
sbb
jno
sti
jbe
das
mov
or
add
jmp
mov
int
adc
test
rclb
ja
cmp
imul
lods
rcrl
pop
lret
cwtl
push
ret
inc
cmc
inc
dec
scas
mov
jne
sbb
inc
aas
mov
out
addl
repnz
fidivs
xchg
fidivrl
cmp
xor
mov
push
cmp
in
dec
lahf
fstpl
sub
gs
push
push
in
xchg
xor
push
outsb
sbb
call
in
arpl
fadd
pop
out
cmp
cli
and
cmp
scas
pop
sbb
jg
push
test
jbe
pop
cli
ret
cmpsl
or
mull
ret
mulb
inc
divl
mov
lahf
xor
xor
push
xor
ljmp
roll
loop
fmull
fisttpl
jecxz
inc
or
je
inc
shlb
pop
scas
mov
int
xchg
std
cmpsl
inc
es
stos
loopne
lea
pushf
fcom
test
jbe
nop
jne
out
jg
dec
mov
fadds
fdivs
call
jmp
sbb
push
jge
mov
fisubrs
mov
cmpsl
in
pusha
pop
test
pop
cmp
stos
lret
inc
pushf
dec
cmp
fisttps
inc
jle
adc
xlat
aam
loopne
jne
xor
pop
popa
add
xor
and
mov
sahf
push
mov
pop
insb
xchg
or
mov
sti
ret
cmp
test
xor
sub
pop
jns
popf
mov
outsl
xchg
js
mov
push
lods
mov
dec
cmpsb
and
pop
out
inc
pop
outsb
cld
divb
pusha
cld
dec
jmp
sub
ret
add
sub
or
in
mov
xchg
cli
xchg
fwait
call
xor
cwtl
push
lret
out
cmp
es
flds
jp
test
pop
cmpsb
pop
mov
push
repnz
mov
lret
flds
sub
sahf
into
sub
icebp
push
xchg
xor
mov
xor
aas
inc
mov
stos
push
fs
xchg
xchg
data16
mov
sbb
movsl
mov
jle
and
dec
lahf
push
mov
sbb
in
mov
add
sub
cmp
icebp
cmpsb
xchg
add
mov
and
jle
shll
push
lret
shll
jne
add
push
jo
xchg
movsb
aaa
ja
mov
orl
jle
cmpsb
sbb
sub
pop
or
addl
mov
ss
adc
cmp
imul
mov
pop
out
sbb
sub
mov
imul
mov
loop
adc
pop
xorb
lret
jne
paddq
jne
lods
out
sbb
fcoml
inc
mov
mov
ret
mov
push
mov
pop
jge
xlat
sub
test
inc
jmp
mov
mov
xor
lea
dec
sarl
cmpsl
cmpsl
rcl
sbbl
loopne
push
dec
adc
sbb
push
insb
addl
andl
loopne
xchg
sub
jmp
ficompl
jne
out
call
cld
repz
js
cmp
jle
or
addl
insb
push
data16
inc
divb
aas
mov
int3
in
sub
sub
fmull
xorl
push
sahf
stos
shlb
jnp
add
mov
mov
inc
add
sbb
shr
mov
mov
pusha
ss
popf
mov
imul
add
xor
daa
sub
mov
lods
imul
loope
icebp
jo
jnp
push
out
scas
xlat
push
ret
fimuls
and
out
cwtl
es
cmp
loopne
pop
xchg
inc
mov
inc
popf
xchg
cmc
push
xchg
adc
pop
cltd
cld
xchg
mov
cmc
iret
fnstcw
test
in
push
cmpsb
adc
aas
cltd
ds
sub
jne
push
mov
inc
sbb
jnp
out
aas
cld
xchg
pop
repnz
loopne
das
mov
sbb
je
mov
pop
js
inc
scas
mov
xchg
decb
iret
sbbl
loope
sub
rcrl
mov
arpl
mov
mov
add
xor
in
adc
lds
test
sub
xchg
mov
mov
pusha
cmp
clc
jmp
adc
aaa
push
gs
mull
inc
adcb
test
outsb
popa
addr16
mull
mov
lock
loopne
imul
sbb
insb
and
out
inc
and
and
jle
push
repz
pop
ret
aaa
xchg
sub
insl
cmp
cmc
fldcw
or
and
ss
mov
mov
mov
sbb
mov
rorl
mov
imul
or
sub
inc
outsb
xchg
int
inc
dec
sbb
or
adc
aad
addr16
sub
hlt
fildll
fistpll
shll
jle
jb
cmp
inc
fsubrl
pushf
dec
sbb
pop
dec
ficoms
and
inc
fnsave
pop
sbb
push
mov
xchg
or
fnstenv
push
xor
lret
pop
cli
test
pusha
outsl
xchg
pop
inc
mov
lcall
pop
adc
push
dec
xor
fbld
in
push
sub
stos
xchg
test
push
dec
or
mov
xchg
cmc
aaa
out
mov
mov
xchg
or
or
push
cltd
mov
or
sub
mov
push
rclb
dec
pushf
inc
test
push
adc
lret
test
mov
mov
test
xchg
idivb
mov
rolb
cli
ja
out
cmc
fimuls
mov
add
test
mov
xchg
cwtl
jecxz
dec
lds
sar
test
sub
cmpsl
aaa
mov
mov
imul
xchg
dec
mov
lds
pop
mov
push
rcrl
fdivl
xlat
lods
jno
jbe
inc
mov
inc
pop
add
ss
ss
movsb
lds
in
push
push
dec
mov
scas
fldenv
mov
or
aas
mov
jb
inc
iret
subl
push
adcb
xchg
je
je
mov
scas
inc
cmp
mov
imull
adc
adc
insb
pop
les
adc
xlat
xchg
mov
dec
fistps
movl
clc
add
dec
std
icebp
or
insl
fsubrp
pop
in
inc
inc
int3
into
je
std
lret
jle
cmp
jnp
out
adc
mov
jbe
out
decl
fisttps
jmp
jmp
shrl
xchg
into
sub
fadds
inc
out
sti
cmp
mov
mov
fnsave
jp
and
cmp
mov
into
dec
cli
push
movsl
in
push
bound
mov
scas
je
and
mov
ret
fnstsw
out
int3
clc
jge
lods
adc
out
loop
inc
mov
in
jbe
loopne
pop
adcb
sysret
push
in
sti
cld
addr16
mov
mov
loop
xor
shll
std
jg
lahf
lods
insb
jo
leave
leave
jmp
movsl
push
push
hlt
lock
scas
mov
mov
and
mov
xlat
sub
dec
pop
xchg
push
mov
push
mov
out
xchg
cmp
ret
adc
xor
mov
call
fistps
ret
into
lret
cmp
adc
lret
cmp
ja
pop
xchg
out
aad
inc
lds
daa
cmpsb
dec
pop
add
lds
in
cmp
mov
pusha
lock
jb
push
mov
or
jbe
adc
and
fisubrl
xlat
sbb
cmp
jecxz
sub
adc
fidivrl
push
in
leave
pop
ret
dec
xchg
mov
lods
cmp
mov
sti
dec
das
leave
nop
adc
fistpll
lea
bound
mov
test
loopne
cwtl
loopne
sahf
cmp
addl
popf
mov
and
in
lea
out
ficompl
bswap
aad
mov
ja
stos
xchg
or
push
or
jns
cmp
adc
add
insb
subl
gs
mov
fdivrl
out
sbb
mov
and
lret
adc
adc
scas
and
push
push
jmp
inc
jle
lock
cmp
jno
cmpsl
lock
mov
sbb
xchg
sbb
aaa
dec
adc
dec
jno
pushf
hlt
or
xchg
cmpb
cmp
and
push
lahf
and
push
pop
jge
ret
aam
rcll
repnz
lods
pop
mov
add
or
rorb
in
int
dec
lods
xor
cmp
lret
out
jle
add
push
pop
add
into
dec
aaa
xchg
xlat
jl
dec
xlat
fldl
inc
test
add
es
ret
stos
xor
mov
test
mov
mov
test
stos
dec
cmpl
outsb
lds
test
je
movl
pop
jge
push
das
sub
repnz
cli
fisttps
fimull
add
xchg
add
push
into
out
call
ljmp
jbe
cmp
int3
jbe
in
mov
mov
daa
jno
inc
mov
clc
in
in
je
xchg
out
xlat
adc
int3
pop
push
xor
or
sbb
jno
cmpsb
mov
jmp
lock
orl
pop
in
mov
popf
dec
mov
cmp
mov
jno
fsubrl
mov
adc
mov
push
push
add
jg
add
pop
sahf
mov
loop
jl
and
mov
scas
adc
in
push
repnz
fs
dec
lcall
inc
cmpsb
data16
pop
daa
pop
mov
lret
pop
in
xchg
dec
dec
jl
pop
lahf
mov
test
jp
aas
movsb
sbb
and
bound
xchg
wbinvd
in
and
test
ret
add
fiadds
movsb
jb
std
cmpsb
sbb
inc
lds
lods
fldt
xor
sahf
or
xor
jbe
mov
jmp
aas
les
mov
mov
lahf
mov
into
and
test
rorb
and
pop
lahf
inc
mov
shll
stos
jge
inc
lahf
jl
insb
das
es
adc
inc
mov
sub
lea
insb
imul
int3
add
sbb
pop
into
pop
push
jae
push
xchg
movsb
adc
mov
jp
sbb
and
stos
rcrl
cmp
icebp
and
idivl
jo
fwait
xlat
sahf
sahf
jp
lock
push
and
lret
fwait
mov
inc
fbld
cmp
neg
cmpsl
cli
inc
ljmp
adc
and
addl
mov
jne
wbinvd
xlat
js
int3
outsb
out
or
xlat
add
mov
js
jns
pop
mov
into
in
jmp
cwtl
jecxz
into
pop
xlat
cmp
fucomi
aad
fistpl
push
sbb
jns
ja
or
je
fdivl
add
icebp
movups
pop
imul
jo,pt
sbb
scas
cld
outsl
push
les
pop
push
sub
add
shll
jne
mov
push
mov
pop
pop
mov
mov
les
or
cmp
aaa
mov
fmul
pop
push
test
add
adc
test
repnz
dec
xchg
mov
mov
in
cmp
and
inc
jno
inc
fimuls
ret
pusha
inc
in
in
es
mov
cs
pop
insb
das
rcll
pop
inc
push
icebp
cmpsl
dec
int3
cltd
jae
sub
repz
add
lret
sub
xchg
icebp
out
jge
jmp
inc
mov
sbb
cmpb
divl
and
pushw
ret
push
ss
dec
sbb
and
rclb
pushf
popf
add
cmpsb
data16
jo
cmc
mov
push
mov
jl
cmp
or
popf
movsb
mov
lahf
scas
add
dec
mov
cs
imul
pop
pop
ss
mov
ret
imul
pop
jns
test
xor
sbb
mov
sub
pop
xchg
test
sbb
add
fwait
jbe
addl
jns
push
bound
xor
stc
push
inc
mov
roll
pop
test
notl
aas
pop
mov
popl
pop
repz
xchg
pop
jg
imul
jmp
sbb
dec
test
jae
outsb
aam
push
jns
or
adc
lcall
sbb
jle
push
decb
push
test
mov
and
sbb
das
stos
test
jg
faddl
jbe
mov
xor
pop
inc
and
pop
aam
sub
pop
jmp
fwait
xchg
pop
mov
insl
or
xor
xor
mull
fdivs
outsl
sub
pop
inc
icebp
repz
xchg
jno
daa
movsb
ret
add
add
in
enter
xor
adc
popa
xchg
dec
movsl
int3
pop
pop
movsb
adc
xchg
out
push
cmc
loop
cmc
push
sub
sub
sbb
adcb
lds
mov
rolb
add
mov
mov
push
mov
mov
por
fdivl
inc
scas
push
cmp
mov
xchg
popf
sti
add
insl
and
enter
xchg
fcoml
leave
iret
and
orb
call
dec
jp
aam
test
and
cltd
iretw
pop
jae
mov
loope
mov
hlt
stos
dec
fcoml
movsl
mov
jge
xor
xchg
lcall
in
shl
xchg
fiaddl
sub
cwtl
xchg
jbe
shrl
xchg
mov
adc
loopne
dec
daa
pop
scas
scas
xchg
icebp
add
mov
push
and
xchg
mov
ret
sub
dec
repnz
push
jge
sbb
mov
fstps
fstpl
pop
aad
call
jae
ljmp
out
cmp
cmp
aam
fsubrs
jbe
xor
cmp
ret
call
les
cmp
push
arpl
sbb
sub
push
xchg
jp
insb
inc
loope
jl
imul
out
std
iret
sub
lcall
pushf
mov
pop
inc
fnstcw
push
and
inc
mov
js
jg
dec
aas
cld
push
in
aad
lcall
cmp
cmpsl
sbb
stos
or
mov
push
mov
inc
jl
lahf
je
push
lret
mov
mov
mov
or
std
xchg
cld
das
in
clc
and
jo
add
sub
jl
daa
adc
fstp
dec
mov
push
hlt
cld
push
test
push
out
or
dec
shrl
pop
cmpsb
adc
mov
inc
movsl
cltd
int3
jmp
lea
jno
adc
xor
movsl
push
or
rcrl
ds
pop
push
lret
mov
xor
fsub
add
sbb
mov
xchg
leave
mov
in
hlt
cltd
lods
push
push
and
sti
xor
xor
jmp
xchg
insb
mov
bound
xlat
int3
or
mov
push
cmpsl
dec
jl
scas
push
mov
insb
sbb
pmaxsw
mov
icebp
aas
sub
fcomip
xor
repnz
daa
push
push
mov
cmpxchg
aad
xor
aas
push
fwait
and
aam
and
dec
in
ret
ja
push
filds
in
and
push
imull
push
inc
loopew
jbe
add
mov
popa
int
dec
subl
sub
adc
stos
push
dec
sbb
xor
jl
stc
dec
sub
int
jo
mov
mov
rorb
fstpt
jle
lret
lcall
mov
fnstenvs
rcll
test
jns
mov
inc
mov
add
push
push
movl
and
jmp
nop
in
and
scas
pop
pop
mov
dec
loopne
aam
push
insl
pop
cltd
mov
pop
mov
hlt
cs
idiv
add
sbb
inc
push
xchg
test
call
fdiv
push
pop
sub
cmp
xor
cli
pop
fdivs
mov
lret
or
loopne
in
mov
mov
push
fbld
fcompl
fdivl
daa
sbb
adc
ljmp
in
mov
xchg
and
add
dec
lock
fbstp
mov
int
pusha
out
scas
jnp
xchg
in
dec
cmp
push
out
fidivrs
or
pop
jae
lock
xchg
cmp
xchg
or
pop
push
mov
jge
xor
xchg
cld
nop
aam
cmc
jb
push
xor
cld
pop
mov
cs
adcb
loopne
and
or
out
aam
insb
aaa
das
js
fsts
mov
push
ljmp
inc
mov
and
cs
inc
adc
sbb
sbb
push
inc
test
leave
ss
xor
and
mov
add
and
femms
push
adc
pop
adc
push
fadds
std
int3
push
dec
mov
xchg
sbb
jb
in
dec
fisubs
mov
cli
daa
and
sub
pop
lcall
inc
pop
pop
ljmp
pop
xchg
push
stos
imul
pushf
enter
push
test
daa
jp
out
shl
js
scas
or
fdivs
sub
scas
pop
dec
sahf
adc
mov
jle
cmp
pop
rcrl
push
leave
subb
sub
or
xor
in
xor
loop
js
dec
xchg
pop
lods
inc
xorb
jl
xchg
shrl
dec
xor
pop
pop
inc
mov
rorl
push
fcompl
and
ljmp
jecxz
cmp
pushl
shlb
dec
adc
lods
loope
sub
sbb
lret
xor
pushf
lcall
in
popf
jge
imul
call
roll
stos
adc
pop
test
push
ret
cld
jg
push
je
ret
push
frstor
inc
jbe
add
and
sub
outsl
fwait
cltd
or
jp
cltd
aad
and
mov
pop
cmp
push
pop
loope
xchg
xchg
movsl
pop
add
pop
and
xchg
ja
js
pop
int3
fadd
pop
mov
xchg
sbb
cwtl
icebp
lahf
push
dec
nop
aam
aad
jae
ret
cmpsl
and
cmp
decb
fsubrl
gs
fs
out
mov
jmp
pop
outsl
ja
test
es
insl
add
sbb
ss
fucomi
movsb
and
jg
cs
in
addr16
imul
cwtl
sub
pop
xlat
mov
and
rclb
dec
ds
jb
jns
pop
addb
inc
inc
leave
rclb
sub
inc
push
pop
xchg
rclb
jnp
inc
lret
sub
xchg
xchg
adc
icebp
sub
xchg
xor
mov
and
inc
fsubrl
mov
inc
in
shll
jp
cmpsw
out
lods
sub
fadds
clc
outsl
xchg
xchg
ja
shr
out
test
adc
sbb
mov
addr16
lret
pop
or
jns
inc
mov
test
sub
adc
xor
xchg
jge
hlt
ja
sub
movsb
mov
clc
sbb
mov
jmp
pushf
jb
adc
les
adc
test
js
in
loope
jl
push
fcomps
mov
or
inc
out
mov
mov
das
outsb
add
ror
dec
dec
sub
ror
pushf
jo
dec
pop
xchg
ret
ja
stos
sbb
inc
push
push
in
sub
mulb
pop
push
jecxz
sub
push
inc
fmul
or
enter
fidivrl
push
push
mov
in
mov
push
jno
cs
clc
jle
mov
and
in
leave
inc
dec
dec
xchg
fldenv
in
sahf
pop
and
pop
or
xchg
xchg
mov
xchg
mov
inc
mov
jl
dec
push
mov
xchg
aam
jno
out
cmp
cmp
clc
jecxz
mov
nop
loopne
sbb
pop
insb
mov
jmp
and
aas
jae
inc
jecxz
xchg
push
movsl
adc
push
push
mov
test
in
movsl
es
mov
mov
rclb
mov
lcall
jbe
andb
ret
int3
cld
lock
push
inc
movsb
scas
insl
movsb
idivb
stc
aaa
out
mov
cmp
das
int
mov
adc
adc
push
mov
add
std
ret
xchg
repz
lret
mov
stos
adc
jle
mov
test
lahf
scas
mov
push
outsb
sub
pop
mov
xor
insb
sub
nop
divb
pop
mov
orl
xor
dec
shlb
lock
into
add
sub
aam
sbb
int
pop
mov
xchg
inc
ffree
pusha
adc
or
into
dec
xchg
aad
dec
sahf
cmp
sbb
loop
call
negl
add
in
mov
dec
mov
sbb
add
push
loope
jge
sub
and
fcom
lods
pop
in
loope
into
cwtl
push
push
mov
jp
cld
jns
pop
scas
xor
push
sub
xchg
outsb
daa
das
rorl
scas
aam
lea
out
outsl
sbb
in
repz
lods
mov
insb
mov
push
mov
lds
inc
sbb
lret
js
repz
dec
or
push
or
jb
sbbb
xor
ret
jge
in
push
mov
adc
cmp
in
fists
add
mov
popa
add
cltd
mov
xor
adc
loopne
repz
rorl
fs
out
and
or
mov
jp
movsb
in
jae
push
sar
repz
pop
xchg
fxch
jnp
lcall
push
add
dec
mov
xorb
call
inc
std
leave
adc
addb
test
push
push
xchg
pushf
in
pop
fucomip
scas
insb
fidivrs
lahf
loop
mov
xor
mov
fidivrl
cltd
ret
pop
push
or
cmp
data16
cli
xor
jns
jno,pt
leave
ror
sbb
and
jle
cltd
movsb
pop
out
push
xchg
sub
ja
cmp
xor
mov
insb
iret
push
dec
pop
sub
jae
rcrb
pop
pop
inc
mov
clc
addr16
mov
xor
aas
cvtpi2ps
fsubrs
enter
push
cmp
lret
movsb
adc
hlt
js
inc
lret
test
out
cmp
lea
or
pop
ljmp
enter
iret
cli
push
inc
and
shl
jmp
call
mov
insb
imul
rorl
mov
inc
fwait
loopne
pop
arpl
inc
sar
cmc
add
mov
dec
or
add
out
rcrl
jmp
mov
and
dec
hlt
sbb
pop
es
jae
lock
negl
push
aas
outsl
cltd
push
pop
pushf
pop
push
pop
jns
cmp
jle
dec
xor
pop
jp
fdivs
sbbb
movsl
shll
ret
inc
pop
in
imul
xchg
ja
movsl
lods
jns
bnd
cmp
scas
push
fcmovnbe
arpl
cwtl
insb
aad
and
lock
sbb
imul
adc
adc
dec
movsb
lock
xor
mov
in
cmp
mov
stc
add
xor
cmpsl
es
pop
inc
sti
inc
xor
push
jbe
jle
mov
subb
lret
repz
mov
push
cli
adc
imul
out
aas
out
dec
inc
sub
lret
stc
std
mov
or
in
xchg
or
pop
add
push
test
jmp
inc
and
jns
pop
cs
push
push
push
in
mov
ljmp
xchg
scas
xchg
cltd
pop
inc
push
inc
mov
ret
mov
and
cli
inc
bnd
int
inc
push
gs
stos
and
push
mov
bound
xchg
cli
xchg
pusha
mov
nop
sbb
inc
dec
jl
pop
ret
packssdw
jns
jge,pt
lea
mov
sahf
xchg
sbb
je
jmp
dec
adc
lds
xor
cmp
stos
jo
or
and
dec
andb
nop
jno
jno
fstps
test
adc
lea
rorl
pop
pop
pop
lret
inc
xchg
icebp
pop
xchg
rorb
push
int
lcall
pusha
jecxz
hlt
out
mov
xchg
xchg
dec
test
push
es
pop
in
jg
jne
lret
dec
push
adcb
xchg
fmuls
push
mov
push
mov
mov
out
fmul
xor
cmc
in
mov
xchg
hlt
mov
lods
or
push
out
and
cmp
push
shll
xor
and
leave
inc
jmp
dec
sub
je
push
dec
arpl
aaa
pushf
jg
jge
andb
lcall
ja
in
das
mov
sub
out
lahf
mov
jo
dec
out
rcll
ljmp
inc
mov
pusha
jb
in
dec
dec
adc
xchg
aas
xchg
idivl
fildll
push
aaa
mov
mov
add
xchg
jns
ret
xchg
push
call
mov
aam
cmp
add
mov
push
inc
dec
xchg
pop
or
repnz
into
jbe
adc
popf
fidivrl
outsb
out
aas
pop
or
xor
dec
jmp
xorb
subb
sbb
pop
aam
stos
sub
jb
add
jne
fisubrl
arpl
lahf
or
outsl
flds
sahf
in
pop
mov
mov
nop
or
incb
adc
jbe
lahf
jae
int
push
xchg
fwait
add
ss
mov
js
dec
dec
or
or
repz
shrb
inc
and
dec
push
lret
jne
ljmp
xor
cmc
mov
mov
cld
mov
dec
mov
sbb
lfs
push
ret
out
popf
subb
jp
rcll
add
loope
push
push
xchg
push
lea
pusha
leave
xchg
push
add
fmul
xlat
jbe
mov
mov
nop
aas
test
iret
mov
sub
and
push
outsb
in
pusha
imul
inc
popf
cwtl
and
aaa
enter
push
sbb
xor
adc
inc
cmpsl
outsl
push
push
xchg
pop
add
pop
std
das
mov
cmpsb
jns
lods
in
ret
test
cmpsl
dec
xlat
in
cltd
pop
fsubrs
cmpl
mov
aam
call
jnp
les
aaa
neg
test
adc
cmpsl
in
jns
jp
fisubrl
mov
imul
lret
mov
cmp
stos
push
mov
jno
xor
cmpsb
pushfw
lret
sub
sub
pop
negb
sub
mov
dec
cmp
outsl
cli
push
ret
and
jae
test
jl
xchg
je
push
sbb
popa
jnp
mov
mov
pop
addr16
std
loopne
xchg
lahf
out
dec
xchg
enter
adc
je
lds
inc
subl
shlb
jbe
imul
add
loope
rorl
cmp
or
mov
imul
push
ja
lock
test
pop
cmpsl
cmp
testb
ljmp
lcall
cmp
ret
mov
and
add
or
add
leave
loopne
jns
xor
testl
push
jns
adc
and
or
mov
bound
sub
std
adc
push
stos
xor
xacquire
jecxz
divb
out
cmp
sub
ficoml
mov
mov
xor
dec
popf
dec
out
iret
imul
pop
jmp
test
jbe
xorb
adc
xlat
clc
inc
pop
popa
and
push
js
or
jnp
ret
test
pop
adc
or
pop
loope
pop
movl
repz
bound
push
push
add
pop
ja
cmp
ret
mov
sub
cmp
jmp
push
pop
loop
in
repnz
pop
or
shlb
in
jge
clc
adc
scas
mov
outsl
sub
adc
cwtl
cmpsl
lret
std
scas
push
sub
in
xchg
dec
mov
jmp
aas
lret
popa
jle
bound
adc
insb
push
xor
and
mov
mov
xchg
rep
xchg
dec
js
mov
std
inc
cmp
inc
adc
push
sbbl
cmp
cs
adc
sbb
mov
add
jns
push
mov
cmp
arpl
dec
cld
into
jle
mov
push
shl
movq
xchg
call
mov
push
pop
pop
mov
jnp
lret
xchg
fstp
mov
mov
jle
xchg
mov
test
ret
sti
pop
jg
into
add
pop
adc
gs
xor
push
mov
xlat
leave
add
sbb
cmp
xchg
fdivrl
out
stc
addr16
cmp
xchg
mov
mov
call
dec
mov
aam
jno
pop
orb
add
mov
adc
dec
push
sarl
sbb
mov
jnp
and
push
push
sbb
inc
jno
lods
cwtl
mov
iret
stos
adcb
inc
jecxz
pop
adc
pushf
je
mov
and
inc
sbb
sbb
pop
push
int3
rolb
jp
pop
lret
dec
aad
mov
adc
mov
addr16
cmpsb
loope
hlt
xor
push
sub
xchg
mov
xchg
int
in
outsl
jnp
sbb
test
shl
adc
sbb
add
mov
ds
mov
mov
shlb
aas
xchg
mov
lods
sahf
ret
lcall
ss
mov
xor
and
insl
stos
add
cmp
les
fs
push
mov
xor
add
lret
aaa
jbe
or
xchg
fwait
rorl
pop
orl
dec
push
es
inc
xchg
mov
insb
and
iret
in
leave
in
mov
xor
andw
movsl
xchg
jno
mov
adc
inc
inc
pop
mov
jle
cmc
mov
sbb
lret
rep
or
jnp
aam
dec
xor
outsb
mov
sbb
hlt
push
push
aaa
push
mov
dec
dec
sbb
je
inc
mov
pop
fwait
mov
xor
cmc
sbb
inc
pop
fistpll
cs
aam
lock
dec
fisttpl
rcrl
push
xor
add
jae
xor
jae
call
std
lods
xchg
fs
jl
or
inc
push
lret
les
mov
xchg
mov
rcll
loope
daa
push
outsl
xor
push
xchg
push
inc
test
and
mov
xchg
call
mov
aaa
xor
jmp
dec
sub
xchg
rorb
insl
ljmp
insl
int3
or
push
mov
pop
daa
or
mov
xor
add
in
fdivs
faddl
popa
cld
mov
scas
push
pop
out
xchg
sbb
lea
xchg
or
dec
test
mov
sub
bound
lea
data16
or
test
mov
int
loop
add
mov
call
cmc
or
mov
sub
test
pop
mov
push
bound
inc
inc
jg
imulb
adc
sub
sbb
mov
pop
pusha
cmpsl
push
fnstcw
in
inc
dec
jecxz
nop
fmul
mov
enter
mul
sub
push
cmp
popa
orb
aam
jae
cmpsl
popf
jge,pt
ss
les
out
daa
sub
shl
and
out
mov
dec
xchg
pop
add
add
shlb
call
test
cld
cmpsl
inc
cld
cmp
pusha
jbe
jmp
adc
push
stos
pop
imulb
aaa
pop
aad
test
xchg
inc
decl
testl
loop
add
dec
or
and
es
lea
pop
add
sbb
push
pop
dec
add
sub
mov
or
pop
jb
adc
adc
fwait
hlt
stos
stos
fildl
add
push
dec
sub
inc
adc
test
addr16
sub
fs
cmp
sbb
fsts
jle
xor
jp
mov
aas
jns
adc
inc
ja
punpcklbw
jae
xor
add
mov
dec
mov
inc
std
lret
push
aam
sbb
sub
lods
psubq
out
xor
outsl
or
sbb
sbb
call
mov
push
arpl
and
mov
and
xchg
call
push
xlat
mov
mulb
add
and
movsl
ret
lods
mov
mov
imull
cld
fisubrl
push
adc
sbbl
xor
jne
push
pop
push
mov
aad
fld
inc
add
jp
pusha
or
push
lret
popa
or
jl
imul
add
dec
pop
dec
ret
add
insb
stos
push
ret
sbb
das
icebp
xchg
in
cmp
mov
jno
and
cmp
mov
pusha
fisubrl
mov
bound
mov
add
sti
nop
cmpsl
xor
mov
mov
iret
sub
aas
scas
mov
test
jg
mov
data16
sbb
sahf
jns
popfw
sbb
jnp
pop
push
pop
setns
cmpsl
in
and
aas
lret
cmp
pop
mov
cwtl
cltd
sahf
arpl
push
stc
mov
addl
stc
aas
push
add
outsl
and
ja
jp
lock
xor
leave
hlt
cmc
add
and
mov
fdivrl
arpl
lret
pop
fstpt
cmpsb
sbb
test
lret
jo
inc
mov
push
push
lret
aad
xor
or
pop
jne
xchg
pop
test
inc
roll
inc
insb
lods
adc
mov
and
fucom
mov
sbb
add
mov
sbb
test
mov
mov
mov
ret
outsl
outsb
movsb
adc
addl
lods
idivb
pop
add
push
jl
push
mov
popf
sub
dec
push
pusha
movsl
mov
out
jmp
adcl
insl
arpl
sub
cmpsb
push
cmp
dec
rcl
insl
into
mov
aas
cwtl
mov
pop
xchg
jne
lahf
sbb
xchg
xor
cwtl
jne
jns
or
mov
out
adc
mov
pop
lea
rcrb
xchg
jo
and
mov
fucomi
outsl
pusha
and
cmpsl
dec
push
js
popf
or
add
mov
dec
push
jo
ss
cs
enter
add
jecxz
add
in
icebp
std
sub
out
outsl
pop
imul
xor
xchg
cmpsb
xchg
movsl
jb
ficoml
jne
addb
nop
inc
sub
sub
cld
stc
pop
iret
lret
mov
ja
pop
add
pop
and
test
pop
adc
jle
addr16
and
das
inc
mov
inc
stos
sbb
fiaddl
stos
leave
int
jg
adc
sub
cmp
les
daa
stos
rcll
aaa
pop
cmc
xor
lcall
mov
aaa
add
pop
pop
arpl
and
fcomip
iret
and
cmc
aam
push
pusha
sub
js
sahf
data16
cmc
add
mov
jae
sbb
cmp
sub
adc
std
icebp
stos
push
push
pop
pop
inc
rcr
test
xchg
or
cmp
jo
into
mov
out
and
push
ficompl
mov
mov
icebp
ljmp
insb
inc
aam
lea
push
push
or
cltd
pop
hlt
clc
insl
push
and
test
ljmp
mov
mov
jecxz
faddl
lea
sbb
scas
shll
push
fisttps
fwait
dec
push
in
inc
and
sub
call
sbb
ja
jle
xor
adc
cmp
dec
mov
pop
test
lods
lcall
insl
dec
dec
bound
jo
cli
mov
test
push
std
lret
test
lret
pusha
call
push
mov
jmp
pop
fistpl
scas
icebp
xchg
mov
adc
cmp
and
mov
popf
mov
push
sti
dec
stc
daa
push
stos
ss
or
je
leave
push
test
int3
or
fildl
add
cwtl
sbb
scas
and
push
mov
decb
jecxz
jmp
rclb
pop
adc
and
dec
dec
or
lods
movsb
xchg
es
lahf
ret
scas
cs
xor
push
sbb
and
jmp
xchg
sub
fimuls
fnstcw
or
pop
or
cmc
mov
inc
clc
add
lret
xchg
pop
test
xchg
jno
or
fstpl
lahf
xor
iret
mov
stos
shll
push
cs
xchg
adc
lods
jae
push
imul
adc
inc
adc
imul
mov
ja
add
insb
sti
sti
lods
outsb
fs
into
sbb
pop
jae
jmp
mov
addb
adc
mov
scas
mov
stc
add
lret
push
jae
mov
hlt
addr16
jae
loopne
adc
stos
mov
sub
scas
iret
push
imul
stos
icebp
inc
imul
in
data16
iret
cmp
jle
daa
xchg
and
push
mov
lock
push
dec
test
mov
ss
mov
inc
jb
and
lcall
mov
lahf
mov
inc
xor
cmc
ret
adc
daa
stos
fnstsw
clc
or
xor
test
sbb
pop
out
xor
xchg
cmp
add
mov
sbbb
call
sub
jg
pop
int
shrb
fimuls
jo
mov
mov
xchg
jne
jle
ljmp
fisttps
sub
jno
icebp
fucom
rolb
arpl
fsubp
sub
cld
test
out
fcom
mov
xor
push
popf
pop
iret
push
filds
jge
orl
les
lds
popf
xchg
in
and
aad
shll
adcl
push
push
and
lods
and
aam
cmpsb
pop
xchg
daa
or
popa
scas
arpl
xor
mov
mov
iret
xchg
cli
mov
es
lds
mov
repnz
inc
sub
mov
cld
and
or
xchg
sarl
orl
jmp
shlb
cmp
shrb
jno
dec
mov
das
jp
dec
mov
inc
shrb
ds
jl
mov
hlt
jecxz
mov
out
lcall
lahf
jge
repz
cmp
scas
in
inc
sbb
mov
sbb
inc
test
nop
nop
pop
xlat
lods
mov
jl
mov
inc
int
je
add
xor
inc
mov
mov
fidivl
inc
push
ljmp
pop
in
cmp
mov
xor
stos
mov
fsubs
shll
test
and
movl
xchg
inc
cmp
pop
sbb
insb
push
mov
lret
xlat
xor
sub
loop
jae
sbb
repnz
pop
and
imull
mov
lock
pop
repnz
notl
push
mov
scas
in
dec
lods
js
push
out
repnz
mov
push
xor
ljmp
shll
insb
mov
out
fisttps
inc
iret
lahf
gs
mov
jcxz
ss
ficoms
xchg
push
add
loopne
ret
cs
pop
jne
push
push
lods
xor
inc
inc
and
sub
loope
shll
jns
jae
sbb
movsb
dec
mov
jnp
call
aad
inc
insl
fsts
sbb
fld
test
jbe
cmp
insl
jne
movsb
dec
bound
fstpl
test
pop
fs
sub
mov
ds
out
and
xchg
jmp
mov
ljmp
mov
mov
lods
pushf
mov
loop
jg
dec
or
subl
sub
inc
rcr
rcl
adc
imulb
addl
dec
clc
nop
pushl
adc
mov
inc
lods
xor
mov
inc
xchg
fs
mov
cmp
mov
aad
mov
pusha
fidivrl
mov
cmpsl
xlat
fistl
movsl
iret
mov
mov
jns
jge
scas
fmulp
repz
outsl
mov
pusha
mov
ss
push
popf
fwait
decb
mov
xchg
lods
out
mov
mov
stc
ret
mov
sbb
and
std
out
adc
out
shll
sub
xchg
idiv
add
jecxz
xor
gs
xchg
js
ja
jl
shrb
jb
push
xor
sub
sub
jle
jge
imul
cmp
shrb
cld
popf
bswap
push
es
lcall
xor
test
push
psubd
ljmp
in
lods
dec
sub
or
add
mov
jbe
int
cli
xchg
mov
xchg
stos
test
and
cmp
xchg
popa
hlt
xchg
or
and
cmp
flds
mov
cmp
shll
scas
pop
sti
cs
push
popf
mov
cwtl
xor
and
aas
leave
xchg
or
rcr
xchg
sub
mov
aas
sbb
inc
js
cmp
push
dec
cmp
rol
jb
dec
sbb
sub
lock
cmp
test
push
stc
mov
loopne
testb
push
ficoml
mov
mov
add
shrb
popa
dec
hlt
sub
jo
and
push
sarb
lret
loopne
into
daa
fdivrp
inc
fmulp
pop
mov
pop
lret
ljmp
aad
and
jo,pn
leave
sahf
xor
xor
adc
add
mov
sar
outsb
xchg
push
mulb
xchg
cmpsb
lock
sahf
loopne
loop
andl
lods
int
daa
mov
push
pop
sti
in
or
mov
mov
outsb
push
adc
jle
pop
mov
in
add
sub
sub
jnp
dec
fistpl
popa
in
int
and
or
aam
inc
lds
jae
push
lea
sub
mov
inc
cmp
call
lcall
cmp
xor
cwtl
xchg
ljmp
push
shrl
push
xlat
mov
jbe
adc
lahf
jns
fs
sbb
sbbb
insb
xchg
mov
jmp
sub
inc
inc
into
mov
pop
xchg
mov
enter
dec
mov
fistps
ffreep
adc
iret
cmp
pop
ret
scas
mov
sbb
repnz
mov
movsb
jp
inc
aaa
nop
jge
aad
fmull
adc
and
iret
aad
in
mov
fbstp
imul
add
cmp
jecxz
in
pushf
cmp
adc
ljmp
cmp
test
movsl
gs
js
ret
inc
insl
xchg
push
repnz
daa
popa
in
daa
fisttpll
push
mov
dec
mov
scas
mov
cmp
jno
imul
data16
pop
xchg
xor
dec
shlb
mov
sub
addr16
int
fistpl
inc
fs
mov
outsl
sub
sub
mov
cmp
in
cmp
lods
fisubrs
fildll
sub
test
js
pop
ret
test
jne
sbb
out
sbb
std
xor
push
stos
sahf
outsl
xchg
adc
in
das
xor
xor
xchg
adc
push
jnp
movsl
es
xlat
fstpl
mov
dec
sub
jle
ss
adc
push
mov
mov
add
add
data16
imul
mov
aaa
add
jmp
xorb
xchg
rol
mov
das
les
inc
in
push
xchg
or
insb
ljmp
aas
jmp
jae
fbstp
mov
insl
sbb
inc
mov
fs
lods
fwait
sbb
out
mov
nop
pop
dec
in
pop
rclb
call
and
ret
sub
jle
sub
addr16
aad
aad
hlt
pop
jns
sub
add
out
pop
sub
dec
cmp
stos
and
aaa
rcrb
inc
mov
mov
ret
lret
inc
jo
repz
test
pop
mov
adc
mov
mov
pop
adc
xor
std
imul
cmp
add
sub
mov
or
sub
mov
add
pop
cmp
imul
cwtl
fmul
in
iret
mov
push
test
cli
push
xchg
cmpsl
roll
mov
mov
stc
or
cli
std
loopne
in
xchg
mov
inc
fbstp
jecxz
imul
pusha
pop
adc
pushf
xchg
sbb
pop
and
daa
mov
imul
pop
cmova
xchg
and
mov
ja
ljmp
mov
mov
andl
in
shlw
aas
sub
sbb
outsl
jne
mov
add
jbe
push
iret
push
sub
aad
dec
pusha
xchg
in
movsl
lds
sbb
sub
push
mov
out
add
test
lods
loope
pop
test
orb
xor
jbe
or
lds
pop
movsb
orb
wrmsr
dec
sub
insl
xchg
lret
rclb
aad
imul
sub
test
dec
dec
jnp
rolb
mov
adc
ds
insb
inc
add
xor
or
stos
mov
sbb
stos
insl
xor
cmpsl
les
jg
jmp
pusha
out
add
xchg
pusha
pop
mov
lret
cli
sti
pop
xchg
scas
cmp
scas
or
fdivp
or
dec
mov
int3
shll
ror
std
mov
sahf
adc
xor
mov
loop
repnz
inc
jmp
and
pusha
inc
stos
inc
xlat
out
pusha
add
imul
pop
pop
aam
mov
and
pop
in
sarl
fprem
fstps
fwait
jnp
stc
pop
adc
loope
jg
popf
movl
movsl
push
jl
ja
arpl
sbb
cmpsb
xlat
or
mov
mov
leave
outsb
pop
xchg
fmuls
pop
mov
es
outsb
dec
movsb
lock
and
cmp
lret
dec
mov
insb
add
lret
xchg
in
or
out
push
enter
shr
push
stos
mov
popa
push
stc
fisubrs
inc
xor
mov
rorl
icebp
push
xchg
test
jno
mov
cltd
stos
inc
stc
es
jb
jne
cmp
adc
dec
push
movsb
xor
cmp
mov
or
and
mov
js
adc
mov
dec
adc
and
lods
xor
push
dec
loopne
std
mov
jns
lods
xchg
out
xchg
nop
repz
cwtl
arpl
sbbb
movb
out
jo
jno
mov
divl
js
mov
addb
mov
jnp
and
cld
xor
es
fbstp
int
fldl
xchg
jo
int3
mov
rorb
pop
and
cmp
adc
sbb
xchg
and
daa
repnz
mov
popf
gs
sub
daa
adc
loop
int
adc
ljmp
test
lret
fs
rorb
arpl
cli
insl
stc
mov
pop
lods
push
fstpl
inc
rclb
pop
xor
push
add
mov
lcall
mov
push
xchg
lret
mov
adc
lret
mov
push
push
dec
fsts
jge
lea
or
out
dec
into
mov
jbe
pop
jecxz
mov
aaa
mov
push
insl
or
daa
jno
aam
mov
gs
mov
imul
mov
out
loop
es
mov
inc
pop
dec
in
dec
pop
lods
rcrb
popl
jecxz
sub
mov
push
lea
adcl
rolb
add
jl
iret
and
sti
insb
decb
sub
jle
lret
push
xchg
or
xchg
stos
jno
cwtl
cmp
rorl
lds
xchg
lea
xchg
cmp
ficompl
cmp
jnp
xor
leave
stc
mov
xchg
sbb
inc
jg
in
cmp
imul
outsb
pop
imul
mov
push
mov
cli
imul
in
fisubrs
fs
aaa
sar
inc
int3
stos
clc
push
lock
lahf
repz
mov
ret
sbb
insb
pop
push
push
xor
imul
dec
ja
xor
pop
sub
xor
mov
jno
mov
pop
rcrl
or
mov
jge
decl
je
xchg
jg
xor
inc
je
test
push
cld
les
movsb
mov
bound
cwtl
fisubrs
out
mov
cmp
pop
test
addr16
dec
sbb
aas
xor
sbb
xchg
jbe
in
mov
cs
addl
pmulhuw
sbb
adc
sbb
mov
mov
cmpsl
shll
repz
movsb
std
cwtl
pop
shll
arpl
inc
pavgb
imul
xchg
repnz
jne
cmpsb
lea
jb
icebp
push
es
lret
or
daa
xchg
arpl
sbb
pop
and
inc
pop
xchg
push
xchg
sbb
out
idivl
aas
mov
push
push
popl
ljmp
sahf
sbb
std
cmpsl
sub
xchg
sbb
dec
aaa
or
cmpsl
pusha
pop
mov
xchg
pop
out
cmpsl
outsl
imul
dec
inc
pop
or
lret
imul
and
ror
sti
adc
mov
icebp
pop
cmc
mov
movsl
popa
cmp
test
aad
outsb
fwait
push
push
mov
gs
leave
push
roll
icebp
mov
sbb
cmp
ror
xchg
inc
mov
cmpb
cwtl
adc
insl
jns
xor
shl
inc
leave
mov
adc
xchg
mov
push
mov
in
adc
mov
mov
pop
inc
lds
scas
loope
test
sub
push
pop
push
pop
push
pusha
js
inc
sub
in
jbe
ja
imul
pop
loopne
cli
pop
pop
dec
or
inc
xor
pop
ds
jnp
icebp
sbb
ja
lea
xor
mov
stos
jmp
pop
enter
add
cmp
mov
cmc
adc
dec
xchg
pop
and
addr16
xchg
popa
fadds
xchg
popa
or
and
sbb
adc
dec
inc
mov
shl
leave
mov
or
add
ficoms
out
nop
rcrb
add
sub
inc
rcrl
inc
fistpl
mov
xchg
out
mov
xor
rorb
pusha
jbe
mov
adc
xorb
adc
outsb
sbb
or
arpl
mov
pop
xor
sti
pop
or
es
mov
sbb
bound
fsubr
sub
cmp
adc
or
test
cmp
mov
lds
fsubrl
mov
sar
into
dec
addr16
xchg
lods
mov
push
int
mov
inc
inc
mov
in
lea
lods
sub
xchg
mov
inc
outsl
test
mov
stos
xchg
or
jbe
pop
inc
mov
sub
sub
mov
fstl
jp
rclb
rolb
cmp
sub
sub
jp
fadd
repz
sub
mov
insl
sub
pop
out
outsb
adc
std
shlb
cmp
cli
cmp
out
add
mov
mov
cmp
add
negl
scas
sti
jp
jmp
orb
adc
xchg
mov
insl
or
adc
shrl
mov
sbb
stos
aaa
or
jge
pop
sub
outsb
xchg
inc
nop
mov
fldt
enter
stc
push
int3
js
mov
jnp
or
sub
in
addr16
lret
pop
dec
addps
arpl
shl
mov
lretw
and
and
dec
test
push
inc
sahf
cltd
inc
cs
ret
xor
mov
and
das
int3
xor
cmp
lds
mov
mov
std
shll
xchg
mov
gs
es
roll
xor
xchg
sub
call
clc
aas
push
mov
and
or
jne
pop
inc
out
xchg
sub
inc
pop
mov
aad
stc
jg
hlt
push
lcall
scas
cltd
aas
out
daa
xor
cmpsl
adc
out
insb
xchg
rclb
cmp
mov
dec
or
scas
imul
pop
mov
jl
mov
jnp
adc
out
xchg
and
repz
jecxz
fldcw
inc
outsl
jb
inc
inc
cmpsl
xor
lods
scas
cmpl
dec
cmpxchg
sub
jno
fbstp
sub
mov
cmp
mov
popf
aad
std
adc
xor
cmp
xchg
arpl
inc
push
daa
shll
das
xchg
ret
dec
push
xor
aad
popa
pop
inc
pop
mov
or
xchg
fisttpll
jp
lret
movsb
mov
sarb
add
sub
dec
movsb
fs
aam
lret
mov
xchg
push
icebp
mov
inc
dec
stc
mov
inc
mov
repz
pop
pop
dec
mov
mov
push
clc
sub
inc
xchg
inc
cld
xor
outsl
or
mov
mov
mov
fisttpll
pop
mov
jne
jbe
fs
xor
xchg
dec
push
dec
xor
push
push
cmc
mov
movsl
lret
fisttpl
and
and
push
lret
ret
mov
push
jnp
mov
bound
xchg
or
jae
add
in
cmpb
xor
cmp
pop
mov
xor
jb
loopne
pop
stos
movsl
and
lea
outsb
mov
inc
insl
sbb
cltd
clc
ss
cmp
cwtl
fsubr
and
and
addr16
scas
jb
orl
fcmovne
addl
divb
mov
push
dec
cmp
scas
and
cltd
mov
stc
sbb
roll
in
and
lods
decl
add
sub
pop
xor
xchg
ds
cmp
into
pop
mov
and
xchg
push
std
mov
and
push
push
push
sub
loope
mov
sbb
xor
pop
fcomip
pop
fldenv
mov
sbb
ljmp
inc
jno
pusha
xlat
mov
orb
xchg
roll
ds
mov
sub
pop
push
imul
mov
lods
jmp
arpl
iret
lea
jg
xchg
lock
js
mov
mov
lea
stos
cmp
mull
ficompl
cmc
aaa
pop
lock
sub
js
insb
imul
xor
dec
mov
aad
stc
cmc
pop
rcrb
mov
outsl
xchg
dec
mov
and
xor
mov
or
pop
jnp
inc
pop
pop
and
mov
pop
popa
add
dec
inc
jbe
std
fdivrs
sub
jg
inc
lret
out
dec
insb
movsb
jbe
dec
mov
push
es
push
test
popf
pop
shll
fldenv
cs
movsb
xor
lods
inc
daa
jl
cwtl
inc
cmpsb
mov
sbb
addr16
jne
mov
pop
push
mov
mov
mov
pushf
test
push
sub
out
pop
pop
mov
sub
cmp
xchg
fs
dec
jp
xchg
scas
cmp
stos
lea
bswap
cmp
mov
pop
mov
adc
pusha
mov
nop
mov
mov
in
and
iret
mov
push
dec
fstpl
jne
sbb
popa
sub
cli
repnz
ss
jecxz
mov
gs
js
loopne
sbb
imul
mov
in
das
lahf
jns
push
dec
arpl
rcll
cwtl
aas
jns
or
mov
pop
lock
push
lret
dec
inc
mov
cmc
mov
cmp
test
mov
fcomi
mov
insb
je
inc
jge
mov
xor
inc
mov
mov
xor
xchg
sub
add
xchg
pop
or
out
adc
or
mov
aam
add
or
cltd
sbb
and
out
icebp
imul
pop
push
pop
dec
fsubs
or
xchg
xchg
mov
jbe
movsl
std
dec
repnz
adc
pushf
pop
xor
mov
pusha
fnsave
pop
test
mov
xor
stc
aaa
pop
out
mov
movsb
or
iret
sbb
loop
std
xchg
arpl
inc
xchg
inc
test
es
aaa
insl
in
jecxz
roll
js
adc
mov
into
icebp
push
mov
mov
push
sub
popf
mov
in
pop
ds
stos
cmp
adc
xor
mov
mov
ret
nop
test
xor
mov
inc
push
add
dec
sahf
je
int3
fwait
lock
sub
xchg
dec
mov
orb
sbb
mov
call
pop
cmpsl
mov
les
mov
inc
adc
clc
mov
dec
repz
cmp
inc
jmp
pop
lret
jmp
rcrb
clc
mov
inc
lock
sbb
xor
and
sbb
lods
out
mov
xchg
stos
push
dec
pushf
push
mov
fdivrl
add
jne
sbb
fsubl
bound
or
ret
push
pop
or
xchg
xor
stos
push
sub
out
pusha
pop
adc
fcomps
mov
adc
xchg
pop
mov
mov
cld
fists
add
jl
in
sub
hlt
cmp
les
mov
jnp
sbb
mov
push
inc
jle
sub
lret
sub
faddl
mov
mov
popf
jge
cmpsb
ja
mov
lods
jae
stc
and
je
jo
xchg
lods
je
sti
lods
dec
lock
decl
and
cmp
mov
dec
lds
ds
jge
and
ljmp
sub
fildl
fcmovb
xor
insl
pop
add
int3
movsl
adc
aam
inc
fwait
sti
rcl
xchg
fistps
mov
and
pop
fwait
push
sub
jo
jno
sahf
stc
xchg
jae
das
pop
test
mov
lods
and
fwait
cmp
movsl
pusha
dec
cmc
pop
adc
call
dec
sbb
add
xor
inc
push
imul
or
outsl
cmpsb
pusha
negl
call
out
leave
test
and
xchg
mov
insl
jb
sbb
punpckldq
iret
cltd
aad
add
imul
push
ficomps
and
mov
lods
push
aam
mov
lahf
mov
sbb
push
pop
xchg
scas
out
add
out
inc
les
repz
mov
xchg
enter
add
scas
jbe
lds
pop
xchg
mov
and
movsb
xchg
mov
add
mov
mov
cwtl
int
shll
imul
lcall
divl
mov
insl
std
scas
inc
sbb
jb
fucom
xchg
inc
and
mov
call
adc
jmp
rolb
insl
icebp
add
jnp
cli
out
pop
movsl
ss
stos
push
push
xchg
pusha
dec
cwtl
rcrb
add
sub
lea
inc
add
out
cmp
mov
repz
lds
push
jge
scas
push
push
sbb
out
add
and
sbb
jb
push
incb
mov
pop
adc
rcll
ljmp
inc
lods
dec
cmc
xor
jmp
sub
aad
inc
cmp
mov
jbe
adc
sub
das
arpl
jmp
dec
pop
mov
inc
inc
in
mov
cmp
popw
outsl
push
cmp
xchg
sbbl
sbb
ret
pop
insb
mov
dec
mov
inc
nop
or
fnstenv
insb
jge
lcall
movsl
out
push
lret
cmp
cmp
callw
push
arpl
loopne
mov
mov
inc
push
dec
adc
sti
lahf
rol
sbb
movb
dec
xorl
add
cwtl
push
pop
mov
nop
and
dec
js
sbb
adc
das
out
jno
sbb
mov
jno
cmp
cmp
xor
subl
arpl
ds
inc
aam
mov
orb
mov
lock
test
test
sti
negl
rorl
leave
clc
add
add
mov
jne
lret
mov
mov
and
mov
sbb
fs
es
xlat
adc
es
aam
icebp
stos
insb
mov
ret
je
add
out
or
ret
cmp
loopne
divps
jbe
mov
fimuls
lds
ss
loopne
xor
jge
lahf
sbb
xchg
xor
mov
mov
push
sub
clc
ret
bound
inc
xchg
push
nop
and
cmp
dec
dec
cmc
pop
imul
add
mov
stos
inc
ja
test
lods
and
ljmp
mov
mov
pop
adc
fs
mov
aam
lds
negb
mov
jmp
aaa
jmp
xor
adc
inc
and
and
in
jl
popa
lcall
pop
aaa
mov
decl
loop
adc
xor
ret
shlb
mov
loop
dec
sub
scas
leave
pusha
fstp
dec
push
jne
and
out
xorl
loope
mov
inc
mov
cmp
outsb
sahf
aas
repnz
orl
xor
inc
sub
xor
inc
sti
dec
shrl
xchg
dec
inc
mov
dec
bound
aad
pop
mov
fstpt
xor
jno
outsb
push
pop
out
lods
in
push
mov
in
out
xchg
nop
in
mov
lret
movsb
sti
mov
push
pop
mulps
add
ret
lods
xor
mov
jg
push
pop
and
mov
or
in
roll
test
inc
in
sub
sbbb
pop
loope
and
notb
jno
jecxz
cld
xchg
mov
mov
call
scas
fdivs
pop
test
jns
adc
or
mov
cltd
pop
mov
mov
shll
and
cmp
shll
push
add
stc
insl
mov
add
movsl
mov
sub
pop
out
pushf
push
stos
sbb
push
aam
aam
sti
dec
cltd
push
dec
out
xchg
out
mov
ja
xchg
loope
mov
aam
loope
outsb
mov
jl
insb
lea
movsl
push
inc
insl
pop
call
xor
jle
lret
jle
or
add
jle
push
cmpsb
pop
mov
or
adc
sbb
xor
daa
cmp
in
pop
push
scas
outsb
mov
call
stos
xchg
pop
mov
mov
inc
sub
jge
cs
gs
aas
ror
or
lcall
into
andl
pop
hlt
sahf
jl
xor
out
mov
push
sbb
cmp
xchg
sbb
sub
cmc
loopne
cld
lds
pop
push
xor
sub
or
mull
ficoms
dec
lods
jp
test
enter
mov
jb
int3
ret
push
out
cmp
push
and
outsl
pop
and
mov
cwtl
inc
xor
test
lods
adc
push
xchg
sbb
stos
xchg
adc
jae
or
dec
popa
add
imull
fstp
dec
adcb
xchg
and
adc
jg
dec
or
pop
add
jp
add
cmpsl
das
pop
gs
cmc
inc
out
lds
pushf
sbb
sahf
mov
adc
sub
in
idivl
sbb
aad
pop
sbb
sahf
or
ljmp
std
sbb
mov
pop
and
lods
cli
pushf
xlat
sub
mov
lcall
push
push
inc
cs
test
fs
and
xchg
das
aad
sbb
daa
ret
adc
lods
cwtl
subb
mov
jle
popa
fsubrl
shl
pop
and
cmp
mov
xchg
pop
push
pop
rcll
pop
daa
push
jbe
mov
ljmp
in
mov
xchg
cld
dec
push
repz
fdivrl
xor
leave
das
adc
shl
es
xor
xchg
add
cmp
daa
test
int
lret
mov
enter
mov
call
ret
rclb
mov
inc
cmp
xchg
fdiv
xor
stc
dec
lds
adc
outsl
stos
and
int
add
test
sub
shl
dec
push
mov
outsb
into
jnp
xor
inc
cmpb
fbstp
les
rcll
inc
sbb
pushf
out
cli
mov
adc
fstps
push
pop
ja
adc
out
mov
jge
pop
fldl
pop
mov
pop
xor
testl
mov
insb
int
icebp
adc
les
ljmp
dec
sub
push
sbb
repz
daa
notb
faddl
in
sahf
cld
or
jp
dec
test
xor
mov
pop
sti
imul
jg
stos
mov
mov
jo
inc
test
jmp
lds
mov
es
roll
test
jo
in
fidivrl
xchg
sub
jmp
loopne
mov
or
cmp
outsb
sarb
bound
and
inc
xchg
mov
push
fldenv
push
outsb
shr
ja
dec
ret
call
dec
pop
cmp
mov
cld
sbb
xor
xchg
add
dec
adc
xchg
arpl
or
cs
bound
stc
xchg
bound
loop
mov
jmp
mov
mov
call
imul
adc
int
cmpsl
rcll
test
mov
xor
cmpsb
sub
pop
sbb
fadds
add
push
or
enter
xlat
mov
dec
add
ftst
mov
or
fstp
stos
pop
inc
sbb
mov
call
enter
fistps
daa
negl
call
jl
cmp
std
jge
jl
jle
cltd
sub
cld
aaa
push
ds
fstpt
mov
or
cmp
add
test
add
lea
and
mov
mov
mov
cmp
nop
add
fcomip
movb
mov
mov
lret
dec
add
mov
push
shlb
add
scas
dec
sub
out
aam
jo
mov
js
ss
inc
mov
out
jo
mov
inc
mov
lahf
nop
rclb
decb
js
adc
sti
vpunpcklqdq
mov
jo
into
mov
aas
imul
fsubl
xlat
mov
jb
mov
scas
add
lea
and
xorb
xchg
addr16
push
les
xchg
arpl
xchg
imul
inc
subl
or
add
testb
cvtps2pd
out
and
dec
inc
ss
cmc
adc
push
out
sti
pusha
adc
and
pop
pop
cli
fisubrl
rol
mov
cli
push
xor
addb
cld
jecxz
lcall
mov
push
jno
sub
out
mov
xchg
dec
outsl
clc
popf
sbb
mov
xor
imul
sub
adc
popf
clc
fwait
paddb
jns
rcll
mov
inc
xor
mov
test
push
test
lret
xor
lods
cld
stc
sub
into
sub
sub
fisttpl
push
jl
outsb
bound
cmc
jns
and
jecxz
mov
in
aad
add
mov
mov
leave
add
or
in
in
xchg
int
pop
xchg
cmp
negl
in
scas
test
pop
inc
test
xor
jns
jmp
nop
jnp
sbb
in
shr
lods
dec
test
cmp
dec
xchg
push
jp
mov
jg
jge
jp
fyl2xp1
pop
out
roll
scas
xor
sub
push
cmpsb
push
lret
mov
idivb
dec
mov
repnz
notb
decl
and
pop
mov
pop
and
sbb
andl
cmp
xchg
je
into
xlat
divl
sbb
cmp
sahf
jno
pop
test
aaa
dec
jno
xchg
mov
cmp
and
mov
mov
repz
jno
rorl
and
pop
fimuls
push
cmp
ret
and
adc
pop
jno
jg
xchg
cs
dec
jle
or
outsb
aam
push
cld
arpl
push
cmpsb
mov
movsl
arpl
imul
fxch
sbb
es
mov
xor
inc
imull
add
xchg
mov
stc
jl
scas
jmp
mov
out
push
stos
std
pcmpeqd
cmp
loopne
mov
sub
aam
xlat
call
scas
mov
adc
cli
push
fsubr
repnz
shll
mov
pop
std
iret
stc
jns
mov
mov
cltd
lods
pop
aaa
push
xchg
inc
xor
push
xchg
mov
push
or
cmp
daa
xor
xor
xor
stos
sbb
dec
cltd
ja
mov
and
jmp
xor
mov
clc
xchg
sub
dec
outsb
push
shlb
les
fistpll
pop
jo
dec
mov
out
mov
sbb
ja
adc
xor
mov
mov
push
cmp
stos
jno
jmp
push
sbb
add
mov
imul
mov
pushf
popf
xchg
rolb
and
cs
mov
out
sbb
fs
push
push
mull
stc
push
add
xor
fstl
and
scas
loope
pushf
mov
fst
sub
sete
inc
or
insb
lods
add
fsub
jns
sub
int3
test
imul
jno
sbb
fdivrs
stos
popf
xchg
aad
jo
fs
lea
sub
inc
xor
popa
xchg
stc
cmpsl
adcb
mov
jo
sbb
imul
cmp
mov
push
jne
test
push
pop
cli
cmpb
rolb
shlb
or
push
cwtl
fists
xor
mov
jbe
pop
not
shll
jl
xchg
ljmp
mov
ss
cwtl
mov
add
sub
sbb
icebp
test
jl
cmp
jno
stos
ret
aaa
in
cmc
inc
sub
mov
mov
outsl
cmp
pop
xchg
adc
and
stos
sbb
ja
inc
jge
cltd
leave
fnsave
daa
mov
mov
or
fstl
cs
or
loop
cmp
mov
sub
data16
addr16
mov
scas
xorl
nop
xchg
pushf
imul
loope
jmp
out
cltd
xchg
test
adc
cmp
jge
adc
int
jle
mov
push
cmp
movsb
out
inc
mov
xchg
and
mov
sub
pop
dec
or
mov
clc
fdiv
mov
xstore-rng
cmpsl
pusha
mov
dec
dec
xlat
mov
pop
push
stc
scas
imul
xor
xchg
push
push
and
scas
jb
sahf
lcall
xor
sahf
add
mov
addr16
pop
fsubl
ror
cmpsb
movsb
repnz
fldl
sub
clc
add
out
push
jns
push
sub
pop
sub
sbb
scas
pushf
ljmp
repnz
xchg
mov
pop
dec
and
scas
les
lcall
xchg
dec
sti
dec
mov
adc
inc
out
inc
shrb
arpl
popa
into
xchg
and
fsub
sub
xchg
add
jl
inc
jmp
add
hlt
in
movsb
dec
adc
lretw
cmp
movsl
insb
sbbl
jecxz
divl
sti
lds
ret
incl
cmp
adc
add
cmp
jns
pop
dec
pop
jns
mov
mov
mov
jbe,pn
data16
cli
in
mov
jecxz
outsl
js
lret
mov
pop
or
mov
mov
and
movsb
test
jns
dec
loopne
scas
int3
stos
negb
add
inc
mov
xor
xchg
jl
mov
mov
ds
mov
add
lahf
ret
lock
int
mov
mov
xchg
pop
ror
sbb
ret
lahf
cmpsl
mov
ret
scas
push
out
or
into
fsubr
push
inc
pop
push
rol
dec
ret
xor
xchg
dec
adc
lock
add
fs
cs
and
inc
xor
clc
xchg
fmuls
in
or
fadd
outsb
inc
stc
xchg
shll
sub
mov
lret
fisubl
and
sahf
jno
repz
fcmovb
ljmp
inc
outsl
std
cmp
push
repnz
push
inc
test
push
gs
jmp
push
sub
push
mov
dec
gs
xorl
jmp
push
pop
les
pop
push
mov
adc
mov
lret
mov
pop
ljmp
ja
mov
cmp
add
scas
fidivl
rcrb
pop
fwait
aad
and
push
add
in
xor
pop
idiv
mov
xchg
decl
cmpsb
addr16
call
or
and
les
push
insb
cltd
es
movsl
movsl
sti
dec
bound
pop
add
cmp
das
adc
adc
je
shlb
sub
adc
lcall
addr16
mov
push
sub
xor
stos
push
cmpb
mov
add
imul
repnz
mov
xchg
lret
mov
cmp
xor
filds
push
lahf
pop
fcompl
inc
shlb
out
and
sti
jne
mov
pop
jp
int
imul
sbb
mov
shr
xchg
sub
sti
outsl
cmpsb
je
mov
out
sbbl
lods
dec
shrl
movsl
jo
and
xor
ficompl
add
das
enter
fldcw
sbb
int
mov
pushf
sub
iret
dec
imul
jecxz
into
sbb
imul
mov
xor
popa
mov
ds
lcall
xchg
inc
mov
test
mov
sbb
in
cmp
sub
out
cmpb
or
mov
cmpsl
scas
push
scas
repnz
cli
std
jge
and
or
mov
push
fadds
scas
or
add
repnz
jne
inc
outsl
inc
push
xchg
ljmp
movsl
movl
sbb
pop
addr16
mov
or
mov
roll
into
stos
sub
jns
faddl
push
jbe
iret
scas
push
cmpsb
loopne
lret
in
aas
adc
rorb
lcall
fisttpl
lea
out
scas
inc
adc
lods
out
sub
fcompp
ficoms
cmpsl
dec
mov
data16
out
push
push
mov
ss
inc
rorb
jle
std
aad
ja
repz
mov
cld
mov
imul
into
or
fildll
outsb
mov
mov
jne
in
imul
and
scas
aas
stc
and
aam
lahf
mov
js
cmpb
das
sti
lahf
test
sub
jle
push
sbb
adc
jle
pop
or
lret
mov
addl
in
xchg
scas
xchg
add
mov
icebp
dec
pop
fsubr
sbb
insb
sbb
aaa
inc
call
sbb
push
inc
cmp
pop
pop
mov
lcall
in
shl
mov
in
int
int
pop
in
lds
call
aaa
dec
mov
mov
sbb
inc
shl
push
insl
test
mov
or
scas
mov
add
xor
imul
test
xchg
jle
or
ja
or
enter
outsl
mov
lahf
cmp
jecxz
add
dec
add
cltd
gs
rcll
xor
pop
jo
sbb
xchg
fiaddl
std
outsl
xchg
cmp
dec
pushf
lcall
mov
stos
call
ja
xchg
and
cmp
je
jge
adc
inc
inc
mov
arpl
stos
outsb
jg
mov
push
loopne
pop
insb
iret
mov
xacquire
outsw
cs
stc
and
jecxz
mov
jne
push
dec
xor
jmp
ret
jbe
mov
mov
mov
add
push
cmp
mov
fdivs
mov
xchg
adc
fildl
xchg
xchg
inc
push
mov
scas
push
push
add
xlat
mov
repz
inc
pop
mov
mov
stc
arpl
and
dec
lahf
lret
jg
or
repnz
les
mov
repnz
lods
mov
jno
xor
mov
ficoml
sahf
in
jo
mov
mov
rclb
push
ljmp
into
xor
fistl
jmp
cmp
fs
mov
sahf
in
pop
cmp
test
fisubrl
bound
xlat
out
movsb
mov
scas
inc
stos
sub
mov
pop
in
pop
xor
stos
in
stos
adc
out
push
add
cmpsb
jp
vmwrite
jae
movsb
inc
cwtl
jg
mov
mov
das
stos
or
rclb
cmp
add
mov
inc
movsb
xchg
push
adc
fists
out
orb
aad
outsb
imul
lock
inc
fwait
xchg
mov
aad
in
cmp
aas
loope
shlb
push
push
push
fs
mov
in
fisubrs
clc
sahf
fstl
call
push
push
out
icebp
mov
fst
cmpsb
imulb
sub
nop
xchg
loopne
lods
inc
sub
pop
cmpsl
je
push
ret
adc
mov
mov
xor
fwait
mov
push
cmp
test
neg
jge
cli
cld
cmc
mov
xchg
das
jge
aaa
sbb
add
das
push
jge
xor
pop
jae
test
jl
or
or
fldl
add
add
outsb
sub
jg
inc
mov
inc
std
mov
pop
push
aam
pop
js
cmp
cmpb
push
adc
ljmp
out
mov
jge
icebp
cmpsb
add
mov
cmp
xor
aam
xor
sub
mov
lock
gs
es
les
adc
imul
leave
xchg
sub
insl
verw
sbb
comiss
mov
or
and
notl
shl
pushf
outsl
aas
call
and
adc
mov
xor
sub
ficoml
dec
and
mov
xchg
push
lret
dec
push
jl
jmp
jmp
lds
nop
xchg
and
sub
data16
mov
adc
pop
stc
add
jbe
arpl
jnp
stc
out
es
push
mov
fcoml
bound
sarb
jge
je
iret
sahf
pop
or
std
cltd
div
jl
xchg
xor
pop
adc
in
jle
push
jg
push
dec
pop
bound
mov
fisubl
add
rolb
pop
outsb
jl
pop
idivb
and
lds
leave
outsb
subl
xor
pop
lock
mov
jno
cmp
lea
imul
aaa
pop
mov
inc
cmp
push
jl
adc
shlb
xchg
lcall
das
leave
call
push
and
bound
fxch
int
xchg
popf
mov
out
aam
cs
int
xor
mov
xchg
imul
lea
lds
es
in
push
dec
int3
stos
and
sahf
fstpt
jmp
in
int3
out
or
ja
push
push
mov
cmp
xor
mov
mov
cmpsb
sub
mov
fldt
into
mov
jge
fsubrs
stc
xor
cmp
cmp
jl
in
loopne
lock
xchg
or
mov
or
ja
cmp
es
mov
mov
cld
mov
xchg
sub
fdivrl
punpcklbw
and
mov
icebp
insl
sbb
sbb
aas
mov
and
push
insb
test
jg
push
scas
in
or
adc
pop
fwait
xor
das
sub
fsub
push
dec
mov
pop
push
aad
jae
mov
lock
sahf
mov
xchg
mov
jg
add
mov
cmp
out
sub
mov
push
es
leave
push
mov
or
fldenv
xchg
jbe
sbb
mov
out
ds
inc
std
dec
push
mov
leave
jecxz
pop
mov
loope
shll
dec
enter
repnz
call
sbb
mov
or
adc
add
repnz
rclb
or
mov
mov
jo
fcoms
dec
dec
into
mov
mov
insl
cmp
lea
pop
push
fldcw
out
aad
loope
outsb
aam
push
jbe
jne
or
xorb
cmp
adcb
jp
inc
jle
push
movsb
mov
mov
fs
fnsave
iret
subb
adcb
mov
hlt
movsl
lods
mov
clc
rcpps
movsb
loopne
in
lds
fwait
sbb
fbld
out
and
jmp
push
dec
sahf
dec
daa
sub
shrl
or
in
repnz
hlt
int3
adcl
or
adc
stos
dec
and
daa
dec
mov
xor
out
scas
sbb
stos
push
aas
cltd
scas
sub
jmp
js
cmp
add
mov
jne
mov
or
and
scas
pop
shll
out
lock
and
xlat
test
jmp
inc
popf
jbe
jns
repnz
leave
iret
dec
into
and
int3
lahf
popf
bnd
inc
loop
jle
mov
mov
adc
push
nop
les
sub
std
push
pop
jge
es
cmc
mov
aad
das
pop
ja
jmp
ds
mov
pop
stos
addr16
imul
inc
test
bswap
sub
adcb
xchg
jno
es
pop
mov
mov
pop
xchg
add
out
lret
sub
adc
rol
daa
mov
ljmp
stos
dec
cmp
push
or
jge
mov
mov
mov
pop
mov
std
je
and
xchg
or
cwtl
mov
ss
or
xor
sbb
xor
arpl
loopne
mov
sub
jp
jnp
lret
cmp
sub
bound
and
push
icebp
in
fwait
aaa
imul
mov
dec
movsb
daa
cltd
mov
mov
and
xor
adc
sub
inc
mov
push
push
rcrb
iret
test
jns
lods
inc
and
xor
hlt
add
lcall
pop
cltd
add
add
pop
ret
test
jge
or
pop
jge
inc
outsb
xchg
push
push
cmp
xchg
adc
and
ljmp
mov
fildll
jmp
cmp
stos
mov
out
addl
mov
adc
sub
mov
in
lock
or
xchg
dec
fcomps
jns
or
out
adc
xor
jp
out
jnp
mov
and
jmp
cmp
inc
pusha
pop
lds
rcrb
xor
sub
push
insl
cmc
mov
ret
test
popa
cmp
add
xor
nop
pop
and
sbb
ret
adc
punpckhdq
mov
jge
aas
xor
and
xorl
into
mov
movsb
add
fadds
add
sbb
aas
jmp
imulb
addr16
inc
jp
mov
sbb
cmp
jns
push
add
aaa
cmp
inc
and
iret
nop
std
ret
fcompl
adc
icebp
mov
xchg
pop
arpl
lcall
mov
mov
cvtpi2ps
outsb
popa
and
inc
shrd
push
scas
pop
jo
loop
dec
incb
jno
push
test
mov
mov
imul
in
sarl
popf
jns
cwtl
cmp
jnp
add
call
mov
jnp
sub
into
call
dec
xor
sbb
mov
repz
shl
jp
pop
inc
sbb
divb
jg
pushf
ja
adc
or
pop
ret
xor
adc
pop
decb
mov
mov
icebp
cmp
xor
inc
imul
cmp
push
inc
or
fs
adc
out
into
dec
fistps
jecxz
fxam
sub
jb
or
outsb
cltd
add
inc
icebp
fs
das
mov
cli
ja
out
mov
ljmp
outsb
mov
dec
ret
jle
mov
jbe,pn
jo
leave
cmp
jne
xor
push
mov
jo
call
movsl
xchg
mov
stc
add
xor
xor
ficompl
fs
test
decl
popf
sbb
pushl
sbb
mov
cld
cmp
and
mov
out
and
leave
aas
xchg
push
dec
divb
aad
cwtl
int3
cmp
pop
sti
inc
call
rorl
dec
push
das
pop
int
dec
js
or
sbb
lret
mov
dec
pop
rcl
push
xor
mov
sti
inc
pop
mov
xchg
pop
push
inc
out
fdivr
nop
lods
lods
lahf
les
ja
out
test
sbb
mov
inc
adc
andl
adc
cmp
add
mov
jb
mov
cmpsb
mov
data16
outsb
lahf
jecxz
cmp
cmp
std
or
jg
adc
xchg
adc
repnz
push
inc
fs
aad
data16
lods
ds
fcompp
cmp
divb
cltd
or
fstps
mov
jge
xchg
repnz
popa
mov
push
adc
or
pushf
adc
push
lods
scas
push
popf
shr
ret
adc
fcoms
pusha
add
push
mov
mov
test
mov
pop
mov
fldenv
out
push
test
daa
scas
dec
mov
ja
incl
into
add
sarl
mov
cwtl
fiaddl
xlat
cmp
insb
dec
mov
mov
sbb
fisttps
xchg
dec
adc
leave
icebp
or
lea
xchg
in
xchg
mov
jns
mov
mov
loop
xchg
push
mov
shrl
pop
mov
lahf
xor
pop
xchg
movsb
cltd
jbe
or
jge
mov
add
fisttpll
jecxz
sbb
xor
jnp
jmp
inc
push
out
orl
inc
cwtl
mov
cmpb
fildll
jno
sbb
sub
jae
add
negl
aas
js
mov
and
inc
xchg
jp
sub
and
imul
mov
enter
lahf
xchg
leave
adc
xchg
inc
outsb
iret
outsb
pop
enter
aad
stos
mov
xchg
repnz
sahf
pop
lret
lahf
aaa
sahf
xchg
out
in
bound
pop
sub
xchg
popf
add
into
cli
inc
fwait
push
into
adc
jp
in
xor
xor
mov
pop
xchg
dec
pop
dec
push
xchg
adc
inc
je
adc
stos
inc
sbb
push
lods
mov
out
dec
mov
dec
add
jg
cmp
adc
pop
adc
cs
push
cbtw
fs
mov
jns
jmp
dec
cmp
or
adc
jg
mov
cmp
mov
pop
stos
add
imul
scas
fmull
sahf
pop
sub
pop
dec
push
lods
mov
xchg
push
push
lds
push
imul
sub
mov
cmpb
lods
outsb
xor
jle
pop
scas
and
jo
sbb
leave
push
clc
push
sahf
jbe
xchg
jno
jge
cmp
iret
fucomip
push
xchg
mov
mov
adc
iret
mov
inc
ret
jge
adc
jo
pop
ss
cmp
pop
stos
dec
sbb
push
pop
lds
xchg
mov
xchg
mov
es
je
sub
mov
pop
in
inc
xor
test
shll
sbb
jge
fcompl
pop
xchg
insl
movsl
fst
jle
add
fadds
jg
jno
add
addr16
dec
adc
out
push
add
mov
sahf
jbe
sbb
sub
lfence
lret
insb
dec
insl
hlt
push
fcmovbe
mull
xor
sbb
loop
mov
pop
pand
pop
sbb
rclb
bound
in
push
sarb
test
push
sub
jmp
mov
pop
aad
inc
pop
nop
mov
push
push
sbb
cmp
dec
dec
data16
push
outsl
jecxz
pop
mov
or
mov
aas
in
jnp
push
aas
adc
push
inc
dec
shrb
add
push
xchg
jns
fbld
jns
mov
mov
push
aam
cmp
and
or
popa
jo
in
xchg
add
jecxz
mov
jne
cwtl
test
lods
mov
push
and
or
pusha
popa
ficomps
js
rcll
mov
cmpsl
test
jg
outsl
sub
lahf
inc
adc
mov
in
jl
mov
out
mov
jne
mov
jne
sti
inc
xor
jno
jb
lret
push
inc
push
lahf
push
xor
jge
gs
pop
enter
cli
lods
jp
mov
mov
jbe
movsb
mov
adc
adc
and
scas
jmp
and
jle
sbb
pop
adc
scas
shl
je
xchg
jg
nop
cmp
int3
mov
adc
xchg
inc
pop
repz
or
adc
xchg
push
push
fnsave
sub
sti
pop
xor
mov
test
jbe
ds
out
sub
dec
out
sub
push
pop
sub
and
push
fstps
mov
xor
dec
xchg
ror
test
xchg
or
cmpsb
adc
movsb
push
or
push
cmpsl
clc
jae
and
aam
mov
mov
sub
orb
xor
fs
insl
out
out
mov
mov
jo
and
add
push
int
sbb
add
mov
ret
sub
mov
mov
or
loop
ds
jno
push
mov
or
fiadds
mov
sbb
pop
in
xchg
dec
mov
into
scas
mov
insb
jno
addr16
insl
push
inc
add
je
inc
in
dec
dec
in
and
loopne
and
push
loope
cld
enter
push
sbb
xchg
cmp
cld
clc
les
incl
and
xor
mov
inc
sti
and
mov
scas
jb
sub
jnp
cmp
cltd
inc
cmpsl
js
test
call
test
xchg
mov
cmp
mov
insb
xchg
call
and
xchg
out
inc
clc
adc
pop
lcall
mov
loope
sbb
loop
dec
test
adc
jge
jne
filds
lcall
or
mov
shll
push
dec
mov
adc
idivl
cmpsl
inc
test
cmc
sub
or
jnp
mov
push
xchg
sbb
lods
popa
push
jnp
pusha
cwtl
mov
fcmovnb
push
and
rcrl
jne
xchg
fsubrs
cmp
aaa
cmc
movsl
xor
push
mov
inc
push
mov
sub
xchg
lret
lods
fcoms
adc
pop
out
cmp
cmpsb
mov
jecxz
cmc
pop
push
cmc
cmp
push
xchg
pop
cmp
test
jg
add
cltd
xor
insl
cmp
popf
cmp
cmc
daa
int3
sbb
adc
repnz
lahf
add
pushf
cld
int
sub
enter
jg
add
xor
xor
pushf
scas
cmc
iret
xchg
add
sarl
and
addb
int3
or
arpl
jbe
jmp
daa
mov
in
or
push
stc
rcr
imulb
cmpsl
cmpsl
out
add
jne
mov
sbb
cwtl
je
jb
push
jne
pop
scas
jbe
repnz
jnp
ljmp
ret
pop
and
cli
jae
xor
jno
dec
int
repz
mov
inc
mov
jmp
lret
xor
cltd
cs
insb
mov
sbb
push
clc
mov
xor
xchg
xchg
push
and
xchg
fwait
sub
aad
cld
aam
cmp
push
fstl
jecxz
xor
jbe
out
jns
repz
fs
push
adc
lods
mov
stos
inc
mov
mov
add
adc
test
xchg
mov
fisttpll
hlt
loop
cmp
add
pusha
leave
cld
pop
aas
jl
sub
push
push
mov
nop
shll
cmc
daa
fstps
and
add
jle
sub
mov
xor
enter
data16
pop
popa
inc
xor
inc
adc
xchg
outsb
xchg
jg
jno
test
and
push
cmpsb
pop
jbe
push
lods
aad
add
idivl
stos
push
mov
sbb
mov
loope
mov
xor
les
in
or
insb
adc
in
mov
mov
dec
pop
popw
insb
rcrl
jae
ss
xchg
and
inc
addr16
ficomps
pop
mov
aas
out
es
sbb
out
ljmp
test
std
mov
xchg
mov
adc
dec
lock
push
mov
test
rcl
or
sub
xchg
xor
loop
aas
pushf
dec
push
sbb
and
mov
jg
sbb
stc
mov
add
ljmp
sbb
aad
pop
mov
fwait
movsb
xor
clc
sub
ret
xlat
and
mov
pop
mov
lock
dec
das
cmc
sub
jge
push
push
sbb
jl
xor
mov
adc
fiaddl
imul
in
add
xor
jns
xchg
sti
sub
cmp
sbb
pop
rorb
sbb
push
jnp
mov
or
movsb
stos
sub
in
sar
repz
jle
dec
scas
inc
mov
repz
inc
mov
stos
sub
sub
mov
push
add
jbe
push
add
mov
imul
bts
clc
xchg
mov
jae
push
xchg
xchg
rolb
cli
or
lcall
jmp
sub
jecxz
mov
mov
inc
sub
jge
inc
fistl
lds
ds
adc
or
jb
je
cli
push
add
stc
mov
fs
rcrl
adc
je
and
push
mov
into
pop
mov
mov
in
mov
sub
bnd
cld
test
out
ror
mov
xchg
icebp
dec
pop
cmp
in
aad
jp
cltd
cltd
mov
out
jge
data16
xchg
scas
fnstcw
dec
imul
push
add
mov
sub
pop
in
cltd
cmc
and
shl
cmpsl
dec
jno
add
shr
scas
lret
out
fisubs
jge
push
fcompl
jbe
dec
cmp
es
bnd
sbb
dec
pop
pop
lret
inc
lret
leave
pop
ret
cmp
iret
ret
sbb
in
aad
mov
jnp
xor
in
fldl
bound
xor
push
cmp
in
add
loope
lods
insb
outsb
lahf
insb
pop
jle
ja
cmp
mov
jne
xor
fcomi
dec
fldenv
insl
mov
cmp
dec
xchg
xlat
dec
inc
or
mov
mov
jbe
push
es
push
push
mov
out
fstp
mov
add
pop
call
out
push
cmpsb
cmp
ds
or
or
push
adc
ja
scas
cmp
push
lahf
push
lods
mov
mov
sub
xor
push
sti
push
cli
test
popf
das
push
jmp
test
aam
jmp
xor
cld
dec
mov
out
test
repz
std
iret
mov
jno
push
sbb
jmp
mov
lret
mov
mov
icebp
scas
push
jmp
jne
cli
lds
ret
loop
icebp
push
mov
fs
or
out
xlat
lcall
pop
rol
sarb
into
mov
std
mov
lcall
push
cmc
push
pop
stc
dec
stos
testb
imul
jg
sbb
dec
jne
pop
jp
mov
sbb
loopne
lods
iret
mov
imul
in
addr16
test
bound
xadd
add
and
or
push
mov
jns
icebp
sbb
jp
pop
cltd
mov
lcall
fistpll
jl
sbb
xor
loop
xchg
jg
xchg
adc
inc
pushf
out
sbb
mov
jge
out
push
jns
aaa
gs
mov
imul
cmp
add
jbe
sub
adc
add
loopne
iret
cmpsb
lds
dec
cld
pushf
inc
inc
leave
pop
mov
push
mov
push
daa
sbb
xorb
sbb
push
sub
jge
icebp
shll
cmp
gs
sbb
cmp
or
mov
pusha
pusha
test
inc
xchg
dec
jno
stos
adc
sbb
loope
pushf
mov
and
sahf
pop
rcrl
sahf
fistpll
aas
cmp
xchg
jmp
mov
inc
xor
mov
test
sub
daa
jp
in
inc
jge
mov
sub
mov
and
jb
xlat
xor
out
cli
movsb
movsb
jle
dec
inc
imul
push
and
cmp
pop
mov
daa
adc
adc
lahf
imul
out
xlat
mov
shrl
cmp
ficomps
movsl
sahf
rorb
ret
shl
inc
xchg
add
sub
push
jge
push
js
cmc
mov
scas
test
mov
xchg
rorb
mov
les
in
or
mov
das
addr16
inc
xor
out
test
jne
movsb
sahf
pop
test
mov
stos
dec
xchg
push
jns
xlat
icebp
shrb
push
jae
ret
and
nop
or
sub
or
incl
xor
imul
or
mov
inc
xchg
jne
jbe
out
int3
fisubs
fldcw
push
adcl
movsb
pop
push
pop
mov
aam
lock
movsb
xor
outsb
inc
inc
cmp
push
and
lods
jg
int3
xchg
push
mov
xor
push
push
mov
mov
push
xor
aas
aas
bound
scas
mov
push
popf
or
test
mov
data16
or
or
sbb
fsubrl
and
enter
jo
jne
mov
fsubl
mov
jecxz
hlt
pop
popa
lods
push
and
cmp
add
jnp
jbe
in
mov
or
into
rclb
adc
or
lcall
in
in
and
add
shll
fidivs
mov
nop
sub
cmp
pop
xor
hlt
mov
xchg
inc
xlat
divb
out
addr16
or
or
or
push
out
mov
and
psadbw
jl
cs
push
stos
inc
ss
imul
ljmp
pextrw
into
dec
icebp
loop
cmp
pop
xor
xor
xchg
sarl
dec
sbb
int3
xor
mov
mov
push
push
pushw
push
push
and
subl
lods
mov
pop
cmc
test
shlb
mov
jecxz
insl
lcall
sbb
cmc
rcr
sub
lahf
push
dec
out
or
mov
aas
xchg
inc
adc
scas
and
jmp
pop
mov
pop
and
out
daa
pop
jmp
mov
inc
pop
pop
lods
ljmp
dec
ror
ss
enter
and
test
add
pop
frstor
push
jbe
popf
jnp
lret
xchg
add
loop
lods
aad
mov
sub
jmp
mov
cmpb
mov
jbe
mov
jno
cwtl
imull
lret
sub
cmp
lcall
pop
scas
and
out
xchg
sub
sbb
mov
shll
sub
jae
mov
cmp
xchg
mov
not
dec
sbb
ds
pop
loope
notl
xchg
pop
and
mov
mov
mov
inc
sub
cld
push
push
test
add
test
add
mov
negl
inc
xor
add
pop
fists
lcall
lret
insl
mov
cmpl
sub
nop
and
lea
cltd
xchg
and
jae
inc
mov
mov
popa
xchg
sbb
or
cmp
out
loop
xchg
jmp
dec
mov
dec
sahf
mov
sbb
or
fisubrs
push
and
test
inc
inc
sti
push
sbb
mov
pop
sbb
sub
push
clc
dec
mov
mov
js
shl
test
and
ficomps
inc
cmc
imul
sarl
in
adc
icebp
xchg
xchg
sub
add
jo
xor
adc
in
fcoml
je
inc
adc
jae
xor
mov
cmp
inc
dec
out
sti
or
adc
mov
dec
sbb
shrl
pushf
or
pop
inc
dec
mov
push
fsubs
mov
adc
push
out
and
xchg
imul
repnz
je
push
in
cmp
mov
into
lcall
loop
gs
aam
lgs
mov
xor
fwait
xor
daa
mov
jns
dec
aaa
jb
insb
hlt
loope
push
loop
loope
cmpsb
cld
lret
movb
call
push
pusha
add
cmp
pop
fldt
repz
push
lods
xchg
fdivr
test
repnz
rolb
fistpll
sbbb
ds
es
pop
pop
mov
dec
ret
mov
or
pop
ss
xlat
andl
scas
add
addr16
subl
push
push
movsl
movsb
pushf
add
mov
ss
mov
and
cmpsl
sub
imul
sbb
dec
and
jmp
xor
je
and
sbb
sub
sbb
adc
or
movsb
ljmp
xchg
add
nop
push
jmp
faddl
adc
ficoms
fwait
scas
pop
shl
repz
enter
xchg
dec
xchg
xor
lret
inc
or
adc
jno
call
xchg
fwait
aam
jno
inc
lea
rclb
or
mov
sahf
push
xchg
das
jbe
pop
adc
sbb
jge
pop
mov
push
or
xchg
push
daa
and
test
jmp
aad
sbb
fistl
cmp
dec
cltd
mov
lods
cwtl
inc
inc
inc
dec
pop
in
mov
mov
push
iret
mov
jo
cmpsl
inc
lods
aad
imul
ficoms
mov
adc
lret
inc
insb
stos
ret
mov
aam
mov
jmp
lahf
bound
movsl
mov
mov
cld
lea
test
adc
test
mov
aad
xchg
ljmp
pop
stos
aaa
int
lahf
shlb
mov
adc
pop
frstor
jb
pop
mov
dec
mov
pop
mov
pop
call
push
je
push
adc
adcb
lods
cmp
cmpl
out
stos
mov
je
in
std
xchg
stos
xor
jae
mov
add
cmp
push
sti
or
sbb
call
fadd
mov
jg
out
outsl
push
cmp
jbe
mov
pushf
icebp
xadd
repnz
pushf
orl
fstl
xlat
lock
jns
test
repz
out
dec
popa
stos
call
out
push
out
cmpsl
push
push
push
repz
dec
pop
cmp
adc
or
xchg
fisubrs
sub
mov
xor
lock
xor
push
push
lcall
mov
rorb
cmp
sub
mov
xchg
add
push
stos
clc
jmp
sub
insl
push
mov
mov
inc
mov
sbb
mov
add
inc
dec
in
mov
and
fdivrs
aad
or
notb
and
rorb
push
add
and
xchg
call
xor
jo
inc
sub
ss
je
lcall
jmpw
fimuls
inc
mov
sub
out
cmpsl
cli
insb
imul
xor
nop
inc
or
cmpsb
jl
jecxz
inc
lods
scas
aad
loop
insl
xor
adc
fwait
clc
xchg
pop
addr16
pop
inc
idiv
add
pop
jbe
inc
jl
aad
icebp
loop
mov
push
rdtsc
fdiv
imul
mov
jb
inc
cmpsl
xchg
aas
into
ljmp
adc
std
inc
in
in
leave
jmp
scas
add
arpl
sub
xchg
cmpsl
sub
jno
sbb
inc
movsb
rolb
inc
andb
jl
lods
outsl
movsb
enter
data16
testl
dec
loop
push
jb
and
dec
xchg
addr16
push
out
icebp
sahf
pop
enter
inc
xor
mov
push
idivb
rolb
js
xor
push
jle
filds
dec
xor
add
ret
push
lock
jbe
push
scas
int
pop
inc
sahf
push
movsl
xlat
xchg
jp
xor
add
xor
mov
xlat
cmc
hlt
aaa
int3
dec
mov
or
add
aaa
in
jmp
rclb
daa
and
mov
sub
add
xorl
mov
das
dec
rolb
inc
xchg
push
xor
stos
xchg
movups
lcall
and
cmp
out
test
mov
push
mov
xor
mov
mov
lods
out
mov
lret
ds
xor
pop
cmpsb
aad
xchg
lods
mov
jno
aas
hlt
loope
pop
repnz
repnz
mov
cmp
mov
lock
sub
push
pop
outsl
andb
xor
stos
int
enter
push
adc
in
test
adc
or
cmp
repz
mov
jae
mov
imul
testb
and
add
loope
inc
and
mov
sti
add
jp
add
nop
fidivl
cmp
cltd
in
mov
iret
inc
pop
jg
jbe
mov
jns
mov
je
sbb
aas
icebp
pop
adc
jne
call
lods
mov
arpl
leave
xor
mov
lock
mov
out
rol
inc
jb
cmp
cmpsb
xchg
mov
int3
aaa
xchg
fstp
fidivrs
stos
clc
mov
out
push
stc
andb
gs
xor
mov
leave
ds
bound
imul
into
mov
test
sub
test
xchg
testl
sbb
or
mov
sbb
mov
mov
movsl
in
jb
fsubr
cmp
ljmp
and
leave
roll
mov
and
add
cmpsb
fildl
push
or
mov
xchg
pop
or
or
into
dec
mov
or
fs
push
out
pop
add
in
and
cmp
pop
test
lea
sti
dec
fcomi
dec
add
jmp
in
in
push
rcl
int3
lods
add
cmp
lret
mov
mov
jmp
notb
packsswb
adc
mov
and
dec
push
lahf
fs
lock
adc
data16
xchg
sbb
mov
daa
dec
xorl
lcall
push
sbb
inc
icebp
jo
iret
in
inc
ja
dec
mov
xchg
fucomi
rolb
adc
outsl
push
dec
jle
xchg
jecxz
pop
cmp
dec
lock
adc
and
stos
clc
lret
pop
add
enter
aam
pop
adc
mov
inc
sub
sbb
mov
dec
nop
fwait
or
add
mov
cmpsl
mov
mov
popf
add
ja
mov
adc
mov
mov
xchg
dec
add
sub
jge
inc
outsb
imul
in
lods
aas
pop
push
lock
adc
add
popf
xchg
mov
dec
insl
pop
mov
subb
push
push
icebp
adc
pushf
inc
ret
daa
out
addr16
push
inc
pop
push
add
insb
xor
xchg
js
inc
das
and
mov
outsb
pusha
or
lods
jo
andl
inc
es
cs
push
mov
mov
loop
mov
xor
add
loopne
fldl
adc
pop
fdivrl
and
aas
repnz
test
in
xor
jl
jg
jnp
fimuls
jecxz
mov
hlt
lcall
sub
icebp
sarb
iret
scas
push
mov
jl
mov
movsb
ljmp
xchg
loop
sbb
pop
pop
cmp
xchg
nop
shrb
fwait
loop
sti
movsb
lea
inc
mov
out
sbb
out
pop
fwait
nop
ds
aad
stos
or
mov
sub
jns
repnz
pop
and
xchg
sti
push
ljmp
nop
les
out
sahf
adc
mov
xor
bound
lods
rolb
rcrl
data16
mov
out
dec
js
scas
fwait
jb
lock
and
movsb
cs
mov
fldln2
bound
notb
aad
bound
add
in
cmp
movb
or
fidivrl
add
jno
pop
fwait
mov
pop
pop
outsl
mov
mov
je
lock
sahf
lds
sbb
pop
icebp
mov
cmc
int3
iret
sub
fimuls
mov
sarb
inc
pop
ret
in
into
mov
arpl
mov
out
cli
or
add
jbe
add
insb
cld
inc
adc
jne
sbb
arpl
xor
sub
push
aam
out
mov
and
je
xchg
fistl
in
jge
and
cmp
stos
jne
pop
and
mov
fwait
jmp
adc
pop
adc
mov
hlt
push
jge
int3
fsubrs
sbb
push
and
shrb
add
mov
xchg
cli
test
mov
lahf
addr16
cmp
ljmp
popa
mov
mov
sahf
inc
push
fcoml
lret
insl
jns
xchg
jge
add
lods
fcomps
ret
in
movsl
inc
int
or
or
pop
outsl
adc
cmp
mov
lods
loop
mov
scas
pop
mov
mov
xchg
jle
push
adc
push
test
and
and
mov
sub
out
ficompl
lock
je
mov
sbb
cmpsl
push
and
dec
mov
cli
pop
cmp
and
xchg
mov
js
mov
cmpsl
push
rcl
cmp
ret
out
lcall
outsl
cltd
mov
and
into
pop
xor
jmp
test
aad
arpl
pop
and
and
push
inc
test
jo
mov
sub
hlt
jle
das
and
adc
and
bound
arpl
pop
inc
cli
movsl
fwait
cmp
pop
arpl
mov
cmp
push
sub
lods
and
mov
inc
cmp
dec
pop
hlt
dec
push
iret
mov
adc
sub
or
sarb
adc
jb
jae
mov
dec
outsl
mov
cmp
sbb
push
cmp
and
sbb
dec
fwait
mov
inc
pop
add
andb
dec
sbb
and
mov
cmpsb
out
sbb
jb
inc
dec
xor
jns
push
mov
pop
xlat
rcl
fnsave
rcrb
ret
dec
inc
rcrb
push
popf
fisttps
cmp
leave
aas
lock
lret
mov
sub
push
js
add
sbbb
daa
mov
jmp
jae
or
test
push
jnp
loop
test
mov
push
xchg
rol
adc
andb
les
ficoms
stos
mov
pushf
lods
xchg
cltd
std
stc
lods
adc
insl
xchg
imul
push
push
jbe
xchg
inc
std
movsl
pop
rcr
popf
mov
ja
pushf
mov
fs
xchg
daa
ret
mov
imul
mov
push
mov
pop
das
ljmp
scas
push
popf
xchg
or
dec
xchg
inc
inc
aam
inc
xor
mov
mov
jo
repz
lea
mov
fdiv
imul
mov
push
int
in
xor
pop
dec
gs
mov
lahf
xchg
xchg
clc
xor
and
sub
mov
imul
fdivrl
aam
jne
xchg
test
fidivl
rcrl
in
jp
pop
call
mov
xor
fmull
out
cmp
mov
insb
sub
ds
test
mov
fcomps
adc
imul
rcr
cli
mov
bound
jg
xchg
xchg
xor
pop
movsl
test
rcr
push
sub
jbe
loopne
clc
inc
lret
add
stos
in
push
sub
ds
pop
sub
cmp
repnz
bound
orb
dec
jl
std
mov
es
or
out
inc
test
jge
pop
sub
add
jl
sarl
xorl
jo
ret
jae
repz
and
xorb
sar
jp
clc
jmp
dec
add
in
sarl
push
lods
pop
or
jle
stos
fldenv
mov
jb
cmp
sahf
les
out
pop
inc
roll
mov
sahf
ljmp
ja
stos
mov
cmp
sbb
sbb
movzwl
shlb
mov
sub
icebp
in
ss
enter
lods
adc
jb
gs
cli
sub
jo
jae
xchg
sti
cmp
jo
rorb
subl
jl
imul
aas
das
fdivr
push
les
or
push
stos
outsl
jle
mov
inc
adc
sbb
and
xor
jno
cmp
lods
aam
inc
sbb
sbb
xchg
pushf
sub
inc
icebp
and
lock
xlat
pop
mov
mov
add
imul
pop
jge
call
push
popf
dec
mov
jge
out
mov
push
ret
jp
cmp
push
lods
dec
gs
sbb
jl
popa
push
lahf
scas
adc
sahf
cmp
cmp
mov
xchg
push
insl
popf
jge
adc
fsubp
and
jae
es
gs
outsl
mov
and
out
pop
cmc
in
inc
popf
ret
fmul
push
out
das
mov
fs
addb
mov
movsl
mov
repnz
mov
pop
jge
decl
mov
xchg
cmp
call
mulb
mov
outsl
ficomps
push
mov
add
inc
jns
jp
or
bound
pop
add
sbb
xlat
fsubrl
mov
jno
mov
in
or
inc
mov
ret
sbb
xchg
scas
xchg
in
enter
out
cmp
scas
add
sbb
sub
cli
divb
cmp
sbb
xor
cld
sbb
add
cmp
cltd
ret
sub
ror
hlt
js
cmpsl
sbb
popl
inc
movsb
and
cmp
cli
fcmovnu
arpl
xor
popa
insl
ss
add
inc
mov
sbb
push
and
iret
or
sub
sbb
adc
xor
push
daa
and
gs
loope
ja
sub
daa
js
jle
jno
mov
imul
stc
or
or
xchg
or
stos
aam
data16
inc
test
fiaddl
lahf
cmp
lods
imul
mov
inc
dec
gs
testb
jae
ss
leave
imul
sub
cmc
nop
push
iret
inc
popa
addr16
pop
mov
cmp
mov
adc
sbb
jmp
inc
xchg
jg
stos
aad
icebp
jne
add
pushf
popa
loope
mov
jmp
mov
and
jo
insl
push
in
mov
insl
xchg
decb
and
cli
movsb
fcmove
arpl
dec
leave
xchg
ja,pt
mov
ret
mov
subb
add
jne
fstps
imul
sti
mov
sub
scas
mov
push
cmp
lret
inc
push
jno
ret
mov
out
pop
mov
jb
rcrl
fiaddl
fstpt
inc
or
mov
int
jg
or
push
dec
add
jge
cmp
js
lahf
loope
push
stos
outsl
test
jne
arpl
mov
and
cmp
push
pop
sahf
dec
and
jae
call
loopne
ja
and
fwait
adc
push
leave
idivb
mov
mov
or
sub
mov
and
out
cmc
cs
pop
ljmp
outsb
fcmovu
movsb
addr16
mov
mov
pop
push
mov
insl
rcrl
mov
mull
mov
andl
add
xchg
lock
and
mov
jno
cmp
xor
mov
and
mov
add
jae
jbe
jns
push
ds
mov
sub
push
mov
sbb
clc
sub
ror
sbb
pop
sub
andl
cli
lcall
push
and
clc
xchg
pop
test
jecxz
addr16
icebp
adc
jecxz
dec
shll
ss
sbbb
mov
iret
jne
ja
je
or
movsl
sub
insb
sub
lods
inc
adc
dec
clc
adc
adc
enter
fdivrs
imul
xlat
filds
fdivl
ja
rclb
adc
dec
cmovne
pop
stc
fisttpl
subb
scas
xlat
mov
or
push
and
push
cmp
jge
mulb
sbb
mov
cmp
xchg
inc
scas
jne
pop
mov
lret
pop
les
jmp
lea
jp
out
sub
pop
fs
push
inc
cmpsb
inc
lcall
test
cmpsl
not
sub
fsubs
xchg
fwait
push
inc
sbb
push
sub
dec
xor
stos
cmp
data16
stos
push
sub
cmpsb
jns
jmp
push
jbe
xchg
sbb
mov
lret
push
sti
xchg
testl
jg
stos
dec
inc
roll
ficomps
sub
sub
xchg
clc
add
sarl
aad
ret
js
aaa
push
outsl
shrl
rcll
cltd
in
dec
jmp
jle
jmp
pusha
inc
les
xchg
imul
pop
int3
cli
aam
cmp
lock
iret
adcb
lret
out
arpl
stos
les
add
dec
outsl
cld
aam
adc
outsl
add
in
and
pop
rcll
lds
movsl
or
imul
push
nop
shr
in
push
push
xor
pop
push
and
in
mov
rolb
mov
sbb
inc
bswap
mov
mov
push
dec
loop
xchg
rcl
and
and
pop
push
insl
and
loope
pop
xchg
cwtl
mov
scas
subl
in
push
mov
insb
jb
lock
or
mov
rcrb
ljmp
popa
add
inc
mov
jge
test
add
fwait
push
jmp
inc
jp
insb
jne
fidivs
xor
pop
sbb
les
into
hlt
loope
cmpsb
xchg
fistps
pusha
dec
hlt
push
mov
icebp
sub
xchg
repz
xchg
repz
mov
cmpsb
push
leave
or
mov
lea
fistl
pushf
push
mov
hlt
cmp
or
mov
imul
jnp
iret
fisubrs
into
push
fwait
sbb
pushf
ljmp
and
in
dec
outsl
pop
movsb
dec
js
addr16
lret
sbb
fwait
adc
and
jne
shlb
jb
and
sbb
out
clc
test
and
xor
cltd
adc
shl
fdivrp
daa
jne
mov
mov
xchg
rclb
push
dec
or
or
mov
aaa
int3
int
clc
sub
mov
addb
inc
or
mov
fsubrl
adc
mov
ret
sahf
loop
mov
int3
orl
add
push
cltd
mov
xchg
call
dec
mov
ds
jns
cmp
icebp
hlt
push
rorl
jecxz
aam
outsb
and
jnp
sub
mov
cltd
test
dec
loopne
lcall
dec
cs
mov
mov
fldcw
jo
and
lret
js
or
xchg
and
leave
add
gs
imul
adc
sub
decl
je
jg
in
pop
pop
mov
notl
lahf
pop
dec
mov
mov
pushf
push
jg
inc
adc
lret
js
std
add
lcall
inc
or
cld
inc
test
int
push
push
xor
fs
stos
xchg
mov
pop
insb
insb
into
xlat
jno
js
xchg
and
dec
loop
test
xor
or
leave
outsl
mov
clc
into
lea
and
stc
rclb
dec
fistpl
lods
add
cmp
cli
loope
cmpsb
pusha
push
mov
add
xchg
mov
sahf
inc
popf
sub
aad
sahf
mov
and
fs
fcomp
loop
test
mov
imul
out
dec
push
jle
and
icebp
xchg
mov
gs
pop
sbb
fmull
into
ljmp
xor
arpl
ljmp
inc
mov
mov
and
push
add
test
cli
lds
pop
lds
xlat
mov
jle
fildl
mov
adc
jmp
in
pop
loop
fwait
int3
std
pop
stos
push
es
pop
cmpsl
ja
jns
aad
mov
add
pushf
pusha
xchg
sbb
jp
xlat
rcll
out
xchg
mov
jbe
js
xchg
cs
mov
xor
mov
adc
inc
repnz
lods
ficoml
pop
js
addl
pop
subb
movsb
add
push
cmpsl
dec
and
jecxz
or
lea
hlt
mov
jg
rorl
in
hlt
jne
mov
dec
sti
cmp
xchg
std
int
adc
sbb
outsl
dec
movsb
push
call
movl
add
movsl
fstp
mov
cmpsl
jns
push
xor
jmp
das
out
inc
push
iret
clc
pop
sub
cld
add
jle
inc
jb
cmpsb
xchg
mov
cld
dec
ja,pn
stos
sbb
sbb
out
lcall
sub
cltd
cli
sarb
jae
add
inc
out
push
dec
data16
psubb
fldenv
cmp
pop
push
and
jp
xchg
les
sbb
and
jmp
outsb
mov
fiadds
lret
xchg
push
pop
stc
cmp
sti
or
jp
pop
cwtl
dec
sbb
repz
lods
ret
fcompl
mov
adc
add
cs
rcl
mov
pop
mov
xor
xor
cmp
or
and
mov
adc
cmp
arpl
xor
sbb
out
mov
stos
add
inc
dec
imul
sbb
adc
inc
add
adc
or
shrb
shlb
aam
jae
test
int
jae
or
hlt
dec
mov
or
mov
pop
dec
test
xor
outsl
cmp
pop
repnz
je
xchg
ljmp
sahf
jl
jle
lcall
jno
ljmp
adc
push
out
pop
xor
call
rclb
cs
push
es
cld
test
insb
mov
pusha
and
rcr
in
add
mov
or
mov
movsb
cmpsl
mov
dec
icebp
ss
inc
loope
orl
mov
xchg
push
shrl
or
je
lahf
shll
imul
cli
in
fcmovu
iret
outsb
loop
addb
sahf
mov
or
pop
sub
repz
xchg
ja
mov
push
or
mov
fmul
imul
test
cmp
sar
mov
sbb
push
pop
push
push
or
mov
test
scas
mov
jmp
xor
dec
cmp
daa
pop
lret
jmp
stc
pop
pop
sbb
jae
adc
or
sbb
inc
mov
jg
and
jl
popa
aas
sbb
in
inc
mov
movsl
leave
int3
xchg
pop
jl
enter
push
cmp
pop
mov
loop
or
mov
jmp
or
pop
inc
sbb
ret
imul
daa
or
in
cli
imul
into
inc
sahf
lahf
jo
orl
lahf
cmpsb
leave
shl
and
std
sbb
jp
and
in
push
rcrl
sar
jbe
jecxz
push
add
adc
or
xchg
inc
test
add
mov
cmpb
out
arpl
pop
xchg
scas
push
and
pop
ret
or
adc
adcb
test
cltd
add
loopne
push
ficoml
into
fiaddl
icebp
inc
xor
dec
jecxz
loop
pop
adc
pop
pop
aas
mov
inc
cmp
test
std
sbbb
inc
lret
dec
pop
in
arpl
sbb
shrw
jbe
cmp
or
jbe
xchg
xor
sub
dec
mov
lcall
test
cmpsb
insl
les
xchg
dec
add
std
test
xchg
or
mov
shrl
jbe
fcoms
test
push
fimuls
sti
xchg
xchg
out
dec
scas
or
or
ss
adc
push
sti
in
cwtl
cmp
in
push
xlat
rorb
in
push
icebp
loope
cmp
ret
ljmp
jne
cwtl
inc
rcll
mov
rcr
jg
mov
mov
push
push
mov
jecxz
push
rcrl
enter
mov
in
call
adc
mov
pusha
lret
hlt
scas
adc
jno
xor
in
and
jle
int
fsubs
into
test
stc
outsb
lds
dec
push
sub
call
call
pop
call
sub
test
adc
inc
sub
sahf
repz
popf
sbb
insb
dec
hlt
in
cli
sarl
inc
arpl
lret
mov
in
pop
xor
lahf
push
adc
mov
inc
aaa
mov
neg
mov
jns
sub
out
jae
icebp
sbb
repz
scas
lret
sahf
lret
repz
mov
xor
int
scas
hlt
lds
xchg
fidivs
fs
mov
xchg
mov
or
loopne
push
into
out
jg
mov
pop
in
mov
mov
stc
rcrb
ja
jne
jns
push
jmp
dec
pop
int3
mov
shll
movsb
fidivl
sbb
jno
add
mov
jns
mov
adc
add
inc
pushf
inc
fcomi
mov
cli
sbb
inc
popf
dec
sbb
in
testl
xor
sub
cmc
call
pushf
movsb
in
dec
notb
testl
mov
jb
or
icebp
or
fsub
imul
lret
fiadds
sub
pushf
dec
jno
xlat
arpl
xchg
fdivl
iret
pop
lock
loopne
dec
into
adc
lea
mov
cltd
arpl
or
addr16
sahf
int
mov
test
pop
rclb
push
ljmp
xchg
in
mov
jmp
dec
aas
or
lret
loopne
sub
aaa
insb
call
pop
ret
out
mov
mov
add
inc
sar
js
sub
lret
dec
push
mov
divb
mov
xchg
mov
in
ret
rol
lret
loope
jne
pop
call
ret
outsb
jmp
mov
mov
aad
aaa
lahf
jbe
mov
sub
lcall
cmp
inc
push
or
jge
inc
push
leave
icebp
push
in
jl
dec
lahf
adc
fwait
lcall
mov
leave
cld
fs
clc
int
sbb
js
rclb
push
lock
jo
aam
imul
dec
fcomi
fld
lret
push
sub
aas
loopne
xchg
lahf
out
ljmp
sbb
ljmp
mov
mov
test
xlat
inc
pusha
int
iret
es
enter
pop
mov
insb
sbb
push
sbb
movl
ja
les
fidivs
int
inc
pop
dec
jle
loopne
mov
lods
mov
jl
push
scas
dec
iret
dec
mov
test
pop
movsl
daa
push
in
and
or
mov
pop
shlb
mov
sbb
xchg
call
ljmp
jge
dec
lea
push
push
mov
bound
mov
fdivrs
stos
daa
inc
daa
mov
std
adc
push
sub
mov
dec
loope
mov
add
adcl
push
popf
adc
xor
cmc
and
out
add
out
in
js
fcoms
lds
fdivl
xchg
test
inc
jl
cmp
inc
imul
mov
in
jmp
fidivs
outsl
cs
jmp
fidivrs
sub
sti
cmp
mov
std
loop
popa
ds
jne
rcll
mov
fmuls
mov
or
cmp
in
mov
imul
push
es
xor
outsb
enter
cmp
pop
das
aas
roll
dec
adc
or
outsb
push
xchg
stos
push
dec
or
mov
mov
adcl
pop
push
clc
into
dec
cmp
enter
fistl
and
inc
int3
insb
inc
nop
cli
add
xor
and
cmp
arpl
or
add
rcrl
jo
outsb
xor
stos
mov
sti
les
jb
cmp
in
pop
fwait
mov
mov
daa
pop
mov
pushf
mov
xor
add
icebp
stos
psrlq
bound
jp
add
pop
cmp
push
ds
into
and
jb
fimull
mov
loopne
mov
pop
sub
or
jae
mov
fldlg2
inc
sbb
mov
inc
jne
clc
lret
push
jae
fsubrl
jge
nop
lahf
imul
jnp
jmp
cmpsl
and
cs
mov
adc
lret
in
dec
fdivp
cmp
mov
test
inc
addr16
jle
lea
jb
cmpb
arpl
mov
xor
outsb
lods
jne
add
jle
mov
adc
jl
and
and
sahf
jns
movsl
hlt
cwtl
xor
push
push
add
adc
sbb
fistpll
xchg
pop
mov
leave
jb
in
das
add
xchg
rcl
sub
xor
fisubs
clc
outsl
int
mov
inc
outsb
sbb
addr16
inc
enter
ret
pop
jl
rcrl
sub
fldcw
outsl
stos
mov
sub
or
xchg
mov
lret
mov
mov
in
or
pop
les
cmp
movsl
cmc
mov
mov
cmpsl
xchg
rcrb
jno
cmp
out
xlat
sbb
leave
mov
negb
sub
push
jle
in
pop
das
mov
fcoms
cmp
inc
rcrl
mov
loope
cld
mov
xchg
js
das
cmp
dec
cmpsl
fsubr
dec
or
adc
pop
pusha
jle
jmp
ret
mov
mov
and
loope
hlt
mov
mov
fdiv
iret
ret
adc
verr
adc
jo
jne
aad
test
pop
add
mov
in
movsl
ss
cli
out
jns
jge
ja
movsb
stc
pop
mov
pop
mov
jle
xchg
xchg
xchg
push
jbe
lods
xchg
add
pushf
jp
std
popf
pop
push
insl
push
test
hlt
sub
pop
rcll
sub
xchg
outsb
mov
and
inc
dec
aam
insb
sbb
pop
add
fisubs
sarb
jge
cmp
je
mov
mov
mov
mov
jmp
aas
add
iret
cmpsb
xorb
xorl
sub
add
fistps
sbb
adc
sbb
sub
fdivl
ret
jo
pop
sbb
xchg
cwtl
aam
push
movsb
repz
xor
dec
xor
ret
cld
sarb
and
jo
cmp
jl
cmp
and
mov
mov
cli
or
adc
mov
pop
mov
test
stos
gs
inc
je
push
int
inc
int
cltd
rorb
sub
outsl
lds
cld
fiaddl
bound
enter
iret
add
mov
dec
cmpb
mov
je
jmp
mov
xorl
das
cltd
fildl
fimuls
sub
rcrl
inc
enter
out
add
enter
cmp
and
xor
mov
pop
cmp
push
jmp
pusha
enter
mov
pop
push
jae
repnz
cmp
jg
jo
cmp
dec
cmp
cld
loope
sub
mov
or
mov
enter
int3
lret
movsb
push
lods
sbb
out
repnz
lret
xchg
imul
and
frstor
push
test
mov
lahf
lds
ffreep
je
je
int3
daa
stos
add
mov
imul
insl
inc
iret
fdivrs
int
inc
jmp
lods
jmp
ficoms
or
lahf
insl
xlat
sbb
fisttpl
pop
popa
lock
mov
push
pushf
push
cmp
adc
shrb
sbb
das
mov
add
jmp
fadds
fimuls
popa
nop
pop
adc
mov
cmp
push
roll
repnz
mov
push
mov
lret
add
sub
inc
xchg
sti
mov
and
and
scas
xor
mov
sub
mov
imul
outsl
sahf
icebp
adc
jecxz
mov
mov
xchg
mov
pop
mov
dec
loopne
in
std
pop
jno
jno
out
mov
dec
sbb
loope
xor
cs
or
mov
dec
or
cmc
jne
testl
jnp
das
inc
ret
jp
or
repz
jbe
mov
push
insb
jb
ret
jnp
popa
loope
pop
daa
movsb
pop
insl
mov
fcmovbe
shrl
mov
jecxz
jns
cld
push
mov
xlat
hlt
or
shll
and
bswap
bound
sbb
enter
cmp
cmp
push
xchg
idivl
adc
scas
jl
rorl
popf
inc
xchg
repz
push
scas
dec
jecxz
and
icebp
push
push
adcl
cli
push
xor
sbb
adc
push
jno
fdivrl
insb
icebp
pusha
mov
loope
pop
jne
cld
push
adc
arpl
lods
imul
call
enter
loope
fistl
out
fdivrl
dec
inc
mov
testb
mov
fwait
push
cwtl
inc
lret
imul
gs
add
push
aas
out
test
pop
shl
in
mov
in
testb
rolb
sahf
lods
pusha
and
and
jne
cltd
icebp
pop
cwtl
add
fwait
xchg
mov
push
dec
and
aaa
loopne
std
divps
das
pusha
mov
inc
xor
fsub
lea
push
push
pusha
mov
mov
std
cmp
mov
shll
imul
push
dec
jmp
mov
xor
fs
jnp
xchg
mov
enter
insb
jmp
mov
pop
loopne
dec
sahf
adc
clc
lea
gs
rcr
imul
xchg
mov
cmp
outsb
incb
stc
popa
xchg
mov
xchg
cmp
mov
addb
mov
addl
pop
movsl
pop
enter
cmp
push
jne
imulb
int3
mov
pop
and
test
sahf
inc
out
push
jg
pop
xchg
mov
out
addr16
shll
ret
jecxz
adc
mov
push
xchg
es
call
hlt
mov
push
sub
outsl
in
jae
push
scas
sub
adc
in
and
inc
or
mov
pop
cmp
enter
jo
fucom
push
stos
push
sbb
xchg
test
jle
imul
int
shll
dec
mov
fisttpl
cwtl
sbbl
sar
arpl
add
fwait
push
sbb
aas
sbb
add
dec
ret
out
cltd
call
push
xor
shrl
lods
fwait
outsl
mov
jle
xchg
decl
xchg
push
push
fdivp
pop
and
ja
jg
rcll
fistpll
cmc
imul
sub
add
mov
mov
stos
imul
or
ret
loope
jo
loopne
xor
fstl
clc
mov
xor
scas
iret
add
mov
sub
enter
cwtl
jbe
pop
imul
or
mov
mov
add
mov
outsl
inc
push
xchg
xchg
xchg
dec
xor
mov
scas
xchg
test
jbe
cli
bound
and
sbb
ret
xor
push
cmp
pop
inc
iret
add
xchg
dec
jb
xchg
push
aam
push
push
rorl
loopne
sub
aam
sub
or
dec
notb
inc
cvttps2pi
icebp
jp
lret
jne
pop
movsl
aaa
mov
pop
sub
sarb
orl
fucom
insb
push
xor
loopne
push
loope
adc
add
out
push
inc
cmp
inc
hlt
adc
out
adc
add
pushl
jecxz
lea
pusha
push
or
ljmp
lock
and
dec
inc
fldcw
cmp
stos
mov
push
xchg
mov
inc
mov
shlb
scas
xor
mov
add
jecxz
clc
cmp
xor
jge
stos
es
mov
in
sub
add
insl
add
sub
mov
sbb
fstl
fwait
or
les
or
xchg
mov
push
addl
pop
gs
xor
mov
pusha
pop
xorb
jns
xor
and
jg
cmc
js
outsl
fstpt
sbb
or
movl
cmp
lds
dec
in
add
mov
push
stos
pop
sbb
dec
imul
xchg
movsb
xor
xchg
cmpsl
ds
cmpl
cmp
jno
adc
push
clc
jl
xchg
lahf
push
push
mov
adc
pop
cli
inc
cmpsb
lret
fidivrs
fldl
rcrb
jg
jno
std
cmc
push
out
mov
pop
pusha
outsl
andl
jno
mov
setbe
lret
cltd
sbb
subb
sbb
lods
mov
xor
int
imul
or
cmpsb
cmp
xor
cmp
push
push
std
std
add
nop
mov
sub
idiv
pop
mov
lods
sbb
jbe
push
arpl
mov
leave
inc
fcoml
pop
cmp
je
xchg
sbb
aam
test
mov
add
rcl
sbb
fmuls
hlt
push
cmp
push
movsb
sbbb
xor
fcmovu
shll
divb
jp
add
lret
fidivrl
stos
mov
fisubl
pop
aaa
sub
sar
dec
enter
fimuls
mov
ret
pop
jnp
mov
cmp
pusha
cmp
and
scas
out
std
xchg
push
mov
mov
adc
ds
out
cmp
in
push
cltd
mov
cmpsl
xchg
subb
jge
shlb
jnp
ja
mov
sbb
into
in
cmpsl
dec
xchg
ret
out
xchg
jo
sbb
lods
mov
roll
sub
push
jecxz
mov
loopne
mov
mov
jne
repnz
jnp
pop
cmp
std
push
sbb
stos
insl
push
cmp
mov
dec
jle
cs
out
cmpsb
aas
add
mov
mov
data16
stos
fnsave
shll
sbb
mov
or
sarl
inc
daa
icebp
adc
into
xor
rcrl
std
push
mov
jo
arpl
adc
call
pop
push
fcmovne
daa
in
mov
filds
repnz
out
hlt
push
das
xchg
popa
fs
mov
or
shl
mov
mov
push
sub
movsl
jnp
cmp
insb
push
cwtl
call
mov
rclb
or
in
pop
mov
or
adc
jl
push
inc
loope
inc
imul
movq
cmp
jecxz
jns
lret
and
jecxz
aam
aas
popa
test
sub
or
mov
cmc
mov
pop
push
ret
dec
xor
mov
fcomp
out
xlat
jae
xchg
mov
mov
pop
add
xor
dec
test
mov
push
imulb
cmp
sbb
data16
ret
fcomi
dec
dec
add
push
rcrb
pop
inc
mov
shl
outsb
hlt
jne
ljmp
xchg
leave
movsl
dec
pop
cmp
add
mov
fsub
ja
xchg
cwtl
mov
mov
push
push
and
in
sti
jp
test
cmp
xor
daa
jp
push
pop
jbe
std
lahf
add
push
mov
andb
fadd
das
push
loop
imul
iret
sub
shlb
int
scas
inc
rolb
rclb
cs
cmp
fidivrs
dec
xor
pushf
sub
filds
jns
popa
in
cmp
jl
jnp
xor
clc
cmp
or
arpl
aam
xor
repz
popf
mov
mov
sahf
pop
mov
xchg
mov
mov
push
push
leave
pop
fsubl
loope
xchg
imul
xor
xchg
sub
xlat
mov
cs
fnsave
mov
lods
cmp
arpl
lods
mov
pushf
pop
addr16
add
or
lock
jmp
lods
lea
cmova
and
inc
mov
jne
lcall
iret
hlt
fdivrs
mov
ret
inc
outsl
cmp
in
lahf
aas
cltd
pop
repz
push
xchg
mov
divl
sub
mov
sti
or
cs
test
testb
sbb
enter
and
iret
sub
push
push
call
cwtl
repnz
jp
xchg
inc
ret
fxch
inc
scas
jns
and
les
stc
mov
mov
mov
in
sub
out
push
xchg
lcall
pusha
lods
jl
push
adc
mov
cmp
and
dec
mov
sub
cmpsl
mov
mov
or
pop
xchg
push
pop
ljmp
add
add
add
mov
add
cmpl
jne
mov
mov
jmp
mov
mov
lea
lea
xor
push
push
push
push
call
mov
call
jmp
pusha
mov
pushl
pushl
add
pushl
add
call
popa
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
mov
mov
jmp
inc
cmpb
jne
inc
mov
add
add
mov
jmp
push
call
or
jne
call
test
je
mov
mov
jmp
mov
mov
push
pushl
call
test
je
mov
addl
add
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
add
add
mov
cmpb
jne
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
call
call
popa
jmp
popa
ret
pusha
lea
push
push
push
pushl
call
movl
mov
add
add
add
mov
add
mov
lea
push
push
push
push
call
popa
ret
pusha
mov
or
je
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
mov
xor
add
jmp
movzbl
cmp
jae
push
add
add
add
add
add
sub
add
inc
jmp
movzwl
xchg
sub
push
add
add
add
add
add
sub
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
add
mov
mov
cmpl
je
jmp
cmpb
je
cmpb
jne
mov
cmp
jne
mov
bswap
sub
add
sub
mov
add
sub
inc
dec
cmp
ja
jmp
cltd
jmp
inc
cmpb
je
cmpb
jne
mov
bswap
sub
mov
add
add
sub
inc
dec
cmp
ja
popa
ret
pusha
mov
mov
add
mov
or
je
add
add
mov
or
je
mov
jmp
push
cmpl
je
push
push
pushl
call
pop
add
mov
or
jne
popa
ret
lea
pusha
mov
mov
rol
cmp
jne
ror
xor
cmp
jbe
xor
push
pushl
call
jmp
ror
pushl
pushl
call
push
pushl
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
lea
mov
add
mov
popa
ret
pusha
lea
push
call
push
push
call
mov
push
push
push
push
call
mov
push
pushl
cmpl
je
pushl
jmp
pushl
call
mov
jmp
inc
cmpb
jne
jmp
movb
dec
cmpb
jne
inc
jmp
movzbl
mov
inc
inc
cmpb
jne
pushl
call
mov
push
push
pushl
call
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
das
mov
push
add
jb
gs
xor
cs
insb
add
add
push
add
push
add
mov
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
aam
add
pusha
add
aas
aad
add
addb
adc
add
mov
add
add
add
add
add
add
inc
adc
cwtl
loope
roll
test
aaa
cwtl
lock
xor
sbbb
sarb
insb
fsubp
loop
lods
test
cmp
daa
push
mov
pop
fsubp
xlat
enter
xchg
jne
cli
repnz
push
ficomps
daa
dec
pop
ss
shll
out
bound
push
push
das
scas
inc
mov
and
imul
adc
shlb
mov
inc
inc
mov
js
loopne
std
add
mov
xchg
lock
sub
xor
cld
mov
aad
pushl
add
adc
rclb
sbb
stos
dec
stos
stos
adc
mov
lods
push
or
rcll
cmp
xlat
push
mov
cmc
fcmovbe
adc
sub
or
lret
test
mov
pushl
sbb
mov
std
jg
push
add
add
add
test
add
mov
add
add
