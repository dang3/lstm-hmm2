bound
dec
lea
sub
fisubrs
mov
mov
pop
adc
cmpb
cmpsb
dec
sbb
shl
test
bound
mov
jecxz
cld
push
and
xchg
xchg
xchg
sbb
push
and
cmp
xor
adc
lret
jnp
push
xchg
jnp
lods
cmp
nop
sbb
cmp
lock
out
cwtl
js
sbb
jp
je
hlt
push
test
mov
jae
or
call
stc
out
mov
adc
inc
or
or
dec
into
test
dec
int3
imul
and
ljmp
div
ss
clc
fidivl
ljmp
fnstcw
insb
xor
xchg
pop
pop
outsl
sbb
daa
mov
xor
arpl
xorb
sub
or
add
or
enter
and
ficomps
adc
scas
stos
inc
or
arpl
repz
loope
aas
sbb
add
pop
and
xor
mov
inc
fistpl
icebp
pop
test
jge
inc
mov
addb
fsubrl
xchg
ja
pop
fs
ljmp
call
enter
daa
mov
or
and
inc
push
roll
mov
xchg
mov
mov
andb
mov
pushf
addr16
lock
pop
lahf
mov
jnp
mov
imul
push
jge
dec
not
int
scas
leave
sub
sub
cmpl
and
ds
clc
ds
pop
nop
add
inc
xor
or
arpl
push
xchg
dec
cmp
cmp
and
sbb
xchg
xchg
xchg
test
fldt
icebp
push
lea
into
cmp
and
pushf
push
lret
mov
dec
mov
icebp
sbb
lahf
xchg
sbb
lcall
pop
dec
pushf
cmp
pop
rolb
pop
stos
xchg
cmc
test
xchg
push
cltd
cmp
ds
push
gs
cmpsl
movsl
cmc
and
mov
andl
jmp
cmp
xchg
inc
mov
lock
push
jb
std
mov
or
rol
mov
in
stos
in
jbe
and
and
and
sbb
mov
push
jae
push
imul
pop
daa
popf
add
sbb
xor
adc
sbb
push
repnz
xchg
jns
lret
cld
push
in
push
rcrb
xchg
ficomps
or
pusha
scas
xchg
and
filds
and
enter
pop
ret
add
sub
xor
shll
mov
mov
add
test
outsb
leave
out
testb
icebp
insb
push
lock
jne
and
les
sbb
xchg
or
orb
mov
or
es
push
sub
mov
loop
add
sbb
into
fs
xor
pop
fsubrp
hlt
sti
or
or
add
sarb
rol
jno
pop
cmc
mov
sub
rolb
adc
inc
inc
movsb
ljmp
lods
push
jmp
pusha
lods
cli
stos
or
test
lret
jl
adc
mov
mov
insb
in
xchg
and
lods
shrb
pop
xchg
jbe
push
mov
xchg
or
push
rcrb
sbb
add
jg
iret
jl
fwait
js
mov
mov
adc
loope
cltd
popa
adc
popa
mov
adc
push
clc
outsl
inc
or
test
cmp
adc
xchg
mov
mov
mov
imul
out
stc
jns
adc
jl
je
dec
movsb
or
and
mov
outsb
push
xchg
cmc
add
xchg
add
aaa
out
popf
inc
in
dec
int
mov
insb
das
dec
out
cwtl
mov
mov
dec
mov
into
fwait
rcrb
push
dec
cld
push
dec
push
test
mov
movsb
stos
sub
pop
add
int3
pop
mov
push
cmc
sub
enter
pusha
dec
pop
scas
cmp
push
mov
clc
and
clc
mov
jns
jl
jb
into
jle
inc
in
nop
mulb
and
push
add
in
sti
xchg
push
sti
into
cs
or
xchg
adc
imul
mov
fisttpl
or
jo
fwait
xchg
cmp
insb
jbe
push
sbb
mov
sub
call
mov
push
sub
popf
push
fiadds
cwtl
loope
adc
sahf
jl
push
in
sub
mov
out
mov
mov
dec
lret
dec
jecxz
pop
int
insb
mov
ret
callw
pop
xchg
sbbl
inc
adcw
into
dec
inc
push
cmc
push
nop
pop
xchg
xchg
mov
xchg
mov
xchg
push
call
dec
dec
mov
dec
cmp
push
xor
sarl
adc
inc
adc
pop
clc
xchg
in
add
add
call
rol
push
and
pop
push
and
pop
jo
test
cmc
mov
xchg
jg
push
jnp
push
add
pop
push
push
push
push
sub
pop
pop
pop
pop
cld
ror
test
cmc
lea
add
push
pop
jo
jbe
push
ror
pop
jno
nop
js
jne
push
dec
pop
ror
push
dec
pop
call
jmp
xor
mov
mov
sbb
ljmp
mov
mov
inc
mov
test
icebp
inc
cmpsb
xor
movl
test
push
push
jns
test
pop
pop
shr
test
stc
mov
movl
clc
cmp
jg
sar
xchg
cmc
cld
push
popl
jmp
jp
rclb
or
loop
dec
stos
cmpsl
fadd
cmp
test
fmul
push
xchg
inc
xchg
mov
mov
pushf
sbb
jl
data16
xchg
movsl
mov
dec
and
inc
scas
mov
xchg
dec
jne
jmp
sbb
orl
int
dec
aas
jge
inc
movsl
mov
mov
jmp
xchg
mov
push
add
stos
inc
ds
xchg
sbb
xor
mov
dec
xor
add
pusha
cmp
ds
push
in
loop
jecxz
sub
xchg
icebp
sub
push
push
add
pop
pop
pop
cmp
nop
jae
jno
push
add
push
or
pop
jmp
jmp
call
and
jmp
add
punpcklbw
xchg
jne
imul
pop
in
gs
lret
add
mov
add
jp
push
push
xor
pop
pop
clc
ror
cmp
push
push
jl
shr
pop
pop
xor
rol
shl
or
push
add
push
pop
pop
cmc
cmp
clc
mov
xchg
add
xchg
push
call
ss
pushf
ljmp
in
insl
in
addr16
mov
lods
negl
jg
xor
add
pop
push
add
mov
pop
xor
jmp
lahf
stos
stos
fcmovne
mov
stos
pop
scas
call
fstl
aad
mov
jl
in
xor
pop
mov
add
dec
lahf
stos
adc
push
and
sbb
xor
add
and
push
cmp
pop
jae
push
cmp
pop
push
mov
pop
test
test
je
nop
jge
sub
jge
push
push
cmp
pop
pop
jo
mov
cmc
ja
push
test
pop
jle
add
nop
push
add
pop
push
movzbl
add
js
push
sub
pop
jns
ror
loop
pop
and
jmp
mov
int3
or
dec
setne
in
stc
ds
ja
jg
lahf
mov
es
and
ret
daa
ljmp
xor
in
pop
push
les
cmp
jb
mov
lea
jnp
adc
dec
lret
flds
std
pop
ja
jae
shr
jb
push
push
and
pop
pop
push
dec
pop
push
xchg
pop
push
pop
xchg
pop
rol
cmc
push
xor
pop
push
push
add
pop
jns
je
push
and
pop
stc
mov
inc
push
movzbl
or
push
pop
lea
push
push
neg
neg
pop
pop
lea
ja
cld
jno
push
jp
push
test
pop
pop
inc
dec
jbe
ja
push
test
pop
push
js
jge
and
pop
push
add
and
jle
jge
test
push
push
rol
pop
pop
sub
loop
pop
push
movzbl
or
push
cmp
pop
cld
test
push
mov
pop
or
cmc
clc
push
test
pop
or
ja
push
mov
pop
push
jb
add
pop
push
test
pop
or
clc
test
loop
pop
test
jnp
push
jns
and
pop
xor
test
inc
dec
ror
jmp
nop
or
cmpsl
mov
out
dec
mov
jge
aaa
and
rol
rcl
popl
imull
call
mov
rol
clc
jns
jp
cmp
jle
add
rol
or
rol
nop
push
sub
pop
xchg
push
cmp
pop
jae
push
push
rol
pop
pop
test
xchg
jl
push
push
jns
or
pop
pop
or
xor
cmc
or
nop
loop
pop
stc
cmp
loop
jecxz
and
pop
jecxz
nop
xchg
sbb
xor
loopne
das
cmpsl
jne
rclb
icebp
bound
es
insb
test
stos
push
mov
daa
clc
jbe
mov
mov
imul
lods
push
xor
in
ret
addb
mov
mull
xor
rcll
jmp
stos
add
aad
xchg
fimuls
out
mov
mov
jmp
fcomp
adc
sub
gs
mov
inc
xor
adc
sub
push
xor
sbb
cmc
int
mov
leave
add
fsubs
sti
out
xor
fdivr
test
sahf
push
cli
inc
jbe
inc
xlat
xchg
or
ret
nop
stc
dec
xchg
xor
pusha
dec
roll
scas
and
cs
repz
push
fwait
xor
mov
mov
rorl
push
inc
mov
pop
jle
in
mov
sbb
aaa
and
enter
hlt
jbe
cmc
push
cmp
test
jecxz
mov
test
mov
jp
mov
stos
jae
das
je
rol
outsb
or
or
pusha
pop
cld
call
loop
subl
jne
or
adc
inc
and
call
inc
cli
sub
cltd
cmp
pop
cmc
js
push
adc
jno
and
aad
filds
xor
push
mov
ffreep
adc
shlb
lcall
movsb
inc
sbb
jmp
adc
sub
sbbb
shrl
pop
scas
stos
and
xchg
flds
mov
outsl
cltd
xor
popf
dec
sbb
push
cltd
mov
sub
push
jge
repz
adc
pop
mov
test
jno
lods
adc
out
and
and
pop
push
sahf
jne
lahf
xchg
adc
xchg
xchg
pop
mov
dec
fisttps
ljmp
add
movsl
pop
popa
shlb
fisubrl
outsb
scas
mov
scas
push
and
push
mulb
div
or
ss
mov
xor
sub
loopne
pop
jmp
mov
sub
fcmove
popa
sub
dec
xchg
sbb
cld
ljmp
in
sti
in
cld
scas
nop
dec
scas
mov
sbb
ljmp
fidivrl
sub
lods
jns
lods
sbb
add
ret
shlb
roll
inc
insb
pop
xchg
insb
xor
mov
jns
lret
xchg
adc
xchg
pop
pop
in
pop
es
pop
out
lods
outsl
in
push
jo
nop
ret
add
test
mov
sub
push
jp
fidivl
sub
stc
xor
repz
sub
ret
push
dec
or
lcall
nop
xchg
mov
sub
adcl
push
mov
jmp
xchg
xchg
xor
scas
pop
sub
jle
loopw
movsl
xlat
jmp
sub
mov
orb
push
pop
into
cmpb
les
aad
vmovhpd
or
sbb
mov
je
ja
or
push
add
or
push
fsubr
imul
mull
push
dec
and
pop
je
subl
fidivs
mov
sbb
xor
cs
adcb
mov
shrb
rclb
sub
or
popa
std
scas
stos
add
stos
inc
add
inc
or
xchg
or
pop
jge
pop
iret
xor
insl
xchg
ss
inc
addr16
inc
mov
loope
jmp
pop
aas
sbb
xchg
sbb
ret
enter
hlt
mov
inc
pop
test
pop
sti
mov
cmp
xorl
mov
repnz
jae
je,pn
sbb
outsb
or
pop
cld
call
xor
cmp
mov
outsb
mov
inc
xchg
or
in
cwtl
stc
out
dec
call
mov
sahf
mov
mov
fwait
push
inc
jbe
inc
fiaddl
ficoml
sub
filds
filds
xor
pop
cltd
or
das
add
mov
mov
dec
or
pushf
or
pop
jno
sub
jbe
nop
enter
sahf
into
test
ljmp
sti
xchg
mov
or
pop
dec
int3
and
push
loope
xchg
jge
sub
lcall
push
aam
pop
mov
sub
popf
test
and
jae
push
sub
push
scas
xchg
xchg
stos
xchg
push
leave
mov
ljmp
mov
inc
pop
xor
or
outsb
pusha
sub
stos
cmp
repnz
push
sbb
into
pavgb
fidivs
mov
stc
mov
xor
mov
lods
adcb
mov
jb
push
ja
cltd
and
mov
xor
mov
insb
clc
xchg
push
pushl
pop
or
pop
jbe
inc
pop
fisubs
pop
inc
sub
dec
imul
orl
mov
sub
shr
cmp
imul
push
cltd
dec
pop
cwtl
pop
push
lock
insb
gs
loop
jbe,pt
sub
icebp
inc
push
mov
adc
fcmovnu
add
jge
mov
mov
fimull
out
sub
test
in
in
pop
sub
adc
mov
and
cltd
add
mov
cmc
imull
mov
arpl
inc
sub
js
ret
es
test
dec
out
lods
jecxz
and
or
sub
xchg
inc
pop
xor
inc
insl
push
inc
movsl
pop
and
stc
neg
pop
ja
dec
lret
sub
ficoms
push
inc
mov
inc
mov
fwait
mov
mov
fisttps
jl
rolb
cmp
gs
scas
dec
clc
pop
subl
xchg
and
and
out
sub
pop
mov
cmc
xchg
addl
push
xor
decb
cmpsl
lock
mov
lahf
lock
insb
rorl
mov
xchg
out
push
sbb
inc
xor
orb
adc
push
mov
adc
test
pusha
push
sbb
andl
je
cli
hlt
pop
push
dec
dec
lcall
inc
enter
and
lods
fldl
sub
adc
mov
outsb
mov
jbe
int
and
mov
out
test
cmp
pusha
dec
sub
sbb
or
sbb
fidivrs
mov
inc
mov
mov
xchg
lea
out
inc
cld
inc
fwait
sbbl
sbb
addr16
stos
jge
stos
jno
sbb
mov
jge
sub
scas
cwtl
xor
jmp
mov
es
rcll
ficomps
jns
dec
out
popf
xor
or
xor
out
fs
xchg
jb
push
fcompl
clc
mov
and
jb
inc
dec
repnz
in
popa
xor
adc
icebp
sub
in
pop
adc
call
sub
xchg
xchg
das
cmp
mov
jno
jns
and
movsb
stos
fisubrl
in
repnz
ja
loope
add
stc
cmpsl
or
and
and
dec
out
push
fmull
inc
les
loopne
pop
jecxz
push
mov
cmpsl
jg
gs
mov
fdivs
cmp
notb
sbbb
sbb
lods
test
mov
dec
movsl
aas
jne
movsb
lods
cmc
stos
popf
cwtl
dec
xorl
int3
test
orb
aas
inc
mov
and
dec
sub
repz
xor
inc
stos
add
mov
jmp
les
in
ss
cmp
fistpl
sbb
adc
adc
and
push
les
cmp
aad
push
xchg
outsb
shlb
dec
lds
cwtl
decl
sbb
rcll
pushf
or
adc
outsl
je
out
dec
out
lret
sub
test
pop
das
mov
in
mov
and
fimull
mov
mov
test
inc
cmp
fdecstp
dec
lcall
imul
ja
pop
into
adc
dec
lds
dec
push
cs
sub
inc
les
es
ljmp
push
mov
inc
inc
mov
jns
and
and
arpl
inc
iret
jns,pt
loopne
pop
notl
sub
sbb
or
pushf
pop
ficoms
subb
xor
in
cmpsb
dec
in
scas
mov
mov
inc
or
subb
push
fcompl
add
pop
addb
sbb
mov
out
mov
std
push
adc
xchg
inc
add
or
test
jns
sub
pop
mov
xchg
mov
enter
roll
loop
dec
pushf
js
push
cmp
clc
xabort
mov
pop
cwtl
ret
jns
fisttpl
inc
and
roll
adc
jl
je
fcoms
gs
mov
cmpb
cwtl
inc
pop
mov
mov
jl
adc
jp
cld
xor
push
xchg
outsl
mov
pop
and
test
push
jnp
xor
adc
fstpl
mov
xor
insl
add
ret
jmp
inc
pop
fdivs
jb
int3
mov
add
jb
imul
lret
fists
movl
cmc
pop
movsl
cltd
imul
fcmovb
in
fs
mov
fcompl
iret
dec
dec
outsb
mov
push
dec
out
and
inc
mov
mov
nop
out
pop
or
inc
sti
fs
rclb
xor
daa
iret
gs
pop
xchg
xor
loope
mov
int3
lods
mov
arpl
jp
sbb
sub
jecxz
inc
push
fdivrs
mov
sbb
popa
js
add
jnp
das
movsb
xchg
jp
imul
mov
mov
push
imul
iret
jb
in
ret
mov
es
lcall
test
xchg
jnp
xchg
jmp
loopne
leave
push
int
mov
popa
push
popf
dec
pop
loope
cmp
sbb
mov
mov
mov
or
pop
mov
mov
xor
sahf
mov
dec
inc
shrb
jg
clc
mov
ret
pop
aad
rorl
xor
cltd
mov
shl
add
ret
jnp
or
mov
xchg
outsb
test
fisubrs
inc
aad
xor
stos
cmpsb
cmp
out
cmp
js
arpl
push
add
sti
dec
movsb
or
xchg
jecxz
test
push
pop
jge
in
and
out
lock
mov
dec
adc
xlat
jo
and
js
lret
mov
clc
pop
jg
or
stos
sbb
sub
xchg
add
fwait
ret
mov
lret
inc
xchg
jno
xor
popa
nop
inc
push
ja
ljmp
imul
cmpsb
adc
push
popa
mov
pop
fisttpll
or
pop
sub
mov
or
pop
nop
and
xchg
pop
or
fsqrt
jnp
call
das
lock
mov
xor
adc
jle
push
pop
cmp
enter
pop
lahf
push
sub
icebp
pop
out
out
sbb
xchg
mull
mov
aaa
jge
stc
loope
push
add
leave
test
icebp
jmp
push
daa
fwait
push
daa
stc
push
andb
les
or
inc
sbb
mov
xor
jmp
jge
pop
sbb
xlat
lea
lock
int
jns
push
add
mov
dec
jle
fs
push
inc
cmp
mov
dec
jle
movsb
add
mov
dec
enter
fsubrs
icebp
push
loop
inc
mov
testb
pop
int
adc
sub
std
idivb
jns
stos
in
repnz
mov
xchg
jns
inc
stos
xchg
push
das
add
pop
cmc
xchg
aas
dec
iret
pop
xchg
cltd
push
rolb
jbe
jecxz
mov
jbe
out
sti
push
fisttpl
js
jge
push
out
jge
push
xchg
loopne
mov
repz
mov
xrelease
jb
jbe
push
cmp
mov
jl
and
cmp
ret
sub
jg
mov
adcb
ret
ret
push
sbb
loope
nop
jmp
aad
nop
push
xchg
xor
pop
jbe
jbe
mov
add
mov
cltd
popf
gs
pop
ret
inc
loope
lahf
adc
pop
dec
movsl
sub
lret
dec
repz
lret
and
mov
cmp
inc
and
call
mov
push
sarl
daa
test
popf
pushf
adc
add
aaa
inc
cmpb
add
jmp
dec
stos
test
xchg
inc
pop
sub
stos
gs
push
xchg
negb
or
pop
xchg
cltd
ret
jae
cmp
xchg
add
das
adc
lcall
fistpl
fwait
rolb
pushf
adc
sub
vmread
roll
pop
rclb
in
leave
mov
and
push
lock
mov
outsb
pop
ja
jmp
sub
mov
mov
xchg
incl
mov
sub
mov
loopne
addr16
in
xchg
or
push
psrad
stc
cmc
cmc
mov
add
lea
insb
push
push
inc
imul
xor
adc
adcl
dec
aad
rorb
outsl
push
in
in
or
aam
push
sub
cmp
and
stos
push
xor
lret
adc
movsb
icebp
outsl
rorb
test
sbb
pop
dec
push
lret
xchg
sarl
je
mov
mov
or
shl
scas
adc
add
xor
aas
addr16
jg
push
cmpsl
inc
cmc
repz
mul
pop
push
mov
shll
mov
sbb
lret
int
sbb
jmp
push
lahf
xor
imul
adc
loop
stos
mov
inc
mov
mov
dec
loopne
fwait
mov
dec
hlt
stos
mov
mov
mov
push
pop
fistpll
dec
xor
call
push
mov
pop
adc
adc
jne
icebp
inc
in
pusha
ret
xchg
dec
mov
mov
xchg
mov
sub
or
xlat
lret
popa
or
repz
aas
mov
ficomps
push
mov
pusha
inc
aaa
sbb
imul
movsb
mov
jo
adc
sbb
xchg
cltd
add
hlt
sub
lret
mov
mov
clc
jl
aaa
or
push
inc
mov
push
xchg
push
shrb
mov
sysret
dec
mov
lds
lods
shll
push
clc
xor
pop
mov
fsub
pusha
xchg
call
fdivl
cmp
mov
les
or
data16
push
adc
leave
data16
mov
jecxz
and
js
pop
loop
xchg
out
cmp
add
adc
sub
mov
sbb
xchg
pop
cmp
sarl
and
pop
cs
jne
cltd
test
call
sub
dec
jns
cwtl
sbbb
sahf
call
stos
jmp
add
scas
in
mov
inc
dec
and
xchg
cmp
xchg
add
sbb
inc
pop
bnd
popa
dec
push
mov
xchg
mov
push
shlb
imul
in
mov
and
push
les
pusha
xor
lock
leave
jno
sti
cwtl
and
cmp
xchg
out
int3
lds
mov
xor
into
popf
push
fcmovb
dec
xchg
jmp
int
arpl
jb
mov
shr
dec
pushf
orl
repz
push
xor
jecxz
push
into
leave
push
test
ja
cmp
mov
bound
outsb
lods
or
fcmovb
lret
and
rcrl
push
arpl
sub
lret
xor
adc
mov
or
or
faddl
mov
ss
shll
sysret
enter
cmp
js
aaa
lea
lret
int
mov
inc
adc
roll
fdivrs
aam
mov
push
mov
aam
hlt
sarl
sub
mov
dec
shrb
mov
aas
pushf
lret
psubb
int3
lds
push
xchg
dec
mov
insb
cmc
mov
pushf
in
xchg
xchg
cli
mov
lock
pop
mov
ret
gs
xchg
xchg
loop
jl
fsubp
popa
mov
jmp
sti
jae
jno
mov
push
addr16
cli
mov
sub
and
mov
dec
mov
adc
push
dec
and
xor
dec
insb
jbe
jg
shll
xor
xor
test
dec
lods
dec
lret
push
xchg
or
or
popl
sbb
int
data16
add
inc
cmp
ret
inc
inc
dec
fs
gs
mull
or
add
mov
aad
loop
jns
xchg
jge
fwait
mov
lds
fldt
mov
and
dec
push
cmpsl
in
mov
or
hlt
js
xchg
xor
fidivl
out
sub
xchg
jb
or
and
pop
jle
div
adc
mov
ljmp
sbb
jbe
stos
lods
jge
lods
sub
jmp
icebp
adc
ret
sbbl
je
or
mov
test
in
mov
adc
fwait
js
pop
es
inc
mov
pop
ror
xchg
sarl
mov
jo
cmp
sti
xorb
popf
stos
or
xor
xchg
mov
lret
lock
push
sbb
inc
inc
mov
push
jns
faddl
xor
mov
mov
pop
imul
jge
mov
sub
or
and
data16
cmp
pop
lret
adc
mov
call
test
or
mov
mov
mov
insl
insl
loop
dec
ret
movsl
cmp
xor
pop
testb
fimull
pusha
sub
jns
lods
cltd
es
int
ja
adc
xor
lods
and
mov
xchg
inc
mov
sub
int3
add
add
lret
out
pop
testl
mov
and
xlat
mov
loop
enter
gs
das
sub
sub
or
or
sbb
lock
push
push
into
fnstenv
pop
add
and
or
push
mov
add
mov
xor
sub
mov
in
lret
jmp
into
or
sub
icebp
mov
stos
lret
dec
hlt
pop
or
jecxz
nop
cld
fcmovnb
fidivl
inc
mov
movsl
xchg
loope
pop
repnz
sahf
adc
aad
xchg
sbb
jbe
pop
mov
test
or
cmpsl
pop
les
sahf
aam
xchg
adc
mov
pop
jae
inc
mov
aaa
mov
add
icebp
pop
fs
add
sti
data16
pop
sub
sub
daa
sub
divl
cmp
sbb
out
imul
inc
push
push
mov
xor
and
xor
mov
mov
or
or
ljmp
pop
dec
push
mov
stos
jae
mov
repz
sbb
or
jecxz
imul
fstps
or
lcall
iret
dec
sub
arpl
inc
iret
pop
jmp
jnp
jg
cmp
push
addr16
push
jne
in
into
sbb
fsts
popf
xchg
fnstsw
fs
jbe
lahf
enter
xor
out
addr16
lea
fimull
ljmp
sar
push
shll
test
stc
and
add
cmpsl
dec
insl
jmp
inc
mov
test
and
pop
pop
push
fst
adc
pop
fisubl
orl
xor
xor
xchg
or
pushf
ja
and
push
cmp
test
pop
movsb
fisubrs
imul
sub
mov
mov
add
add
mov
iret
and
pusha
inc
pop
add
pop
sbb
mov
add
mov
imull
cmp
cmp
mov
sub
cs
adc
adc
rcll
scas
push
repz
dec
dec
ja
lret
in
sbb
inc
ja
inc
ljmp
scas
aad
sub
lcall
or
and
xchg
insl
push
dec
xchg
cmp
fdivs
aad
or
add
out
lcall
jmp
mov
jecxz
and
jno
jno
push
add
fildl
icebp
cmc
adc
outsb
add
mov
sub
jo
mov
clc
inc
inc
inc
push
fistpll
or
imul
push
bound
sarb
adc
fildll
sbb
stos
or
mov
int
outsl
stos
cmp
xchg
jl
push
mov
sub
fwait
jg
or
cmpsl
inc
adc
hlt
push
dec
sub
movsl
adc
pop
jno
sub
cmpsl
cmp
mov
add
pop
js
inc
jmp
jmp
out
sar
pop
xchg
jecxz
daa
imul
sbb
out
mov
lret
dec
pop
adc
jge
movsb
imul
test
sbbb
fwait
jmp
rcl
test
lock
bound
stos
rcr
in
push
mov
add
cmp
mov
fidivs
mov
mov
clc
push
adc
test
xchg
cwtl
stc
in
xor
out
fcompl
cmp
add
jle
fdivl
cmc
mov
and
pop
loop
mov
shl
cmp
inc
and
daa
ret
cmp
mov
testb
and
sub
mov
jmp
jg
push
xor
leave
inc
add
push
mov
cs
pop
test
jb
push
cmp
inc
out
adc
sbb
shrb
insb
fldl
bound
loopne
test
cmp
scas
nop
fsts
cmp
xor
arpl
push
mov
pop
out
bound
push
xlat
fs
sbb
pop
jbe
adc
xchg
mov
fsubrl
xchg
lcall
add
push
rcll
test
ss
push
mov
sar
call
mov
cld
scas
adc
sub
cmp
aas
or
add
out
insl
jb
pop
iret
inc
push
pushf
xor
or
repnz
imul
sub
test
in
dec
push
in
jne
nop
stc
ljmp
test
pop
push
xor
xchg
test
xchg
leave
dec
movsl
int
xchg
jmp
mov
jb
sub
repnz
outsl
mov
lahf
jg
sbb
or
xchg
arpl
aam
and
cs
dec
jecxz,pt
popf
flds
xchg
dec
repz
lods
and
popf
pop
aas
fildl
add
mov
jbe
pop
jecxz
es
jmp
mov
inc
shrl
push
out
sahf
icebp
xor
push
adc
push
icebp
outsb
rolb
mov
dec
inc
add
sbb
mov
cmc
pop
cs
push
xorb
jnp
xchg
or
sti
iret
adc
adcl
or
out
jne
int3
pusha
cmp
test
sbb
mov
lahf
das
mov
adc
pushf
movsl
pop
or
out
adc
movsl
pop
std
xchg
push
jae
xchg
in
nop
cs
lock
add
push
inc
push
repnz
outsl
das
je
iret
aaa
cmc
fstps
xchg
movb
outsl
xchg
insb
mov
test
sub
fucom
inc
lock
push
push
adc
rcll
ficompl
jne
ss
lcall
jmp
mov
sbb
sbb
aam
std
or
cli
out
cmp
rcr
inc
xlat
in
sub
mov
into
sub
inc
mov
cli
test
cmp
out
mov
push
mov
loopne
and
jmp
scas
sahf
or
mov
mov
in
scas
pop
in
cmp
daa
push
jbe
mov
testl
testb
movsb
mov
cli
stos
mov
stos
inc
rorb
or
movsl
insb
shl
sbb
add
rorb
jbe
int
sub
lret
inc
ret
decb
les
adc
mov
xchg
in
push
push
sub
xchg
lea
pop
aaa
js
loope
es
cmp
mov
fildl
clc
pop
adc
add
adc
xchg
test
cli
dec
sub
mov
jp
scas
mov
pop
jne
or
addr16
outsl
jo
loop
add
mov
insl
rorb
lret
leave
ficoms
xchg
mov
add
sbbb
mov
idivl
inc
imul
je
hlt
xchg
sub
pop
sbb
mulb
pop
sahf
leave
push
clc
xor
jno
inc
test
and
cmp
inc
outsl
dec
mov
sub
stc
rcrl
loop
idivb
in
les
neg
push
adc
lock
iret
xor
jns
pop
into
ljmp
jmp
popa
nop
shlb
scas
lea
std
mov
mov
arpl
sub
cmp
xchg
inc
std
mov
fs
pop
jns
or
mov
cs
scas
mov
subl
inc
cwtl
jbe
shl
jns
inc
rcrl
frstor
cmp
inc
xchg
xchg
lret
jae
jmp
sbb
cmp
mov
xor
mov
sbb
jge
fwait
into
or
inc
mov
sbb
jle
cmp
push
clc
popa
adc
inc
pop
cmp
arpl
mov
pop
or
fstpl
dec
pop
add
jb
pop
addl
test
ds
push
pop
call
sbb
adc
mov
aam
jnp
outsb
test
push
mov
and
in
bound
add
pop
sub
and
js
mov
fmuls
jle
push
add
sub
dec
aad
lods
dec
hlt
icebp
pop
mov
pushl
xchg
ret
adc
rcrl
repnz
sub
inc
jno
sub
mov
iret
push
lret
outsb
or
sbb
add
fcom
scas
adc
fs
out
aam
push
std
inc
mov
fldl
and
stos
jmp
in
shlb
xchg
or
sbb
mov
or
call
pop
cmp
fldcw
int
lret
mov
sbb
or
movsb
sbbl
mov
xchg
setno
fsts
aad
mov
iret
js
mov
ljmp
adc
jae
jno
loop
cmp
mov
xlat
jl
std
and
ljmp
mov
popf
push
das
outsl
mov
dec
jl
and
lret
or
dec
arpl
loope
push
dec
filds
pusha
or
pop
mov
sub
out
sti
pop
in
push
pusha
sbb
push
xchg
adc
sbb
movsb
xchg
sahf
inc
cwtl
mov
cli
push
imul
jp
push
aam
pop
hlt
maxps
add
inc
mov
pop
int3
xchg
mov
add
sub
or
out
ljmp
mov
sub
sbb
stos
ret
push
lcall
or
pop
pop
cltd
add
scas
addr16
cmp
fwait
maskmovq
mull
ret
xchg
jge
jb
mov
xchg
addr16
lods
xlat
xor
sbbl
ret
aad
cmc
mov
xchg
imul
ds
sub
mov
push
or
inc
jae
adc
data16
stos
adc
rclb
test
sbb
push
sarb
loope
sbb
push
movlps
ja
dec
popa
xchg
xchg
jno
add
je
mov
inc
mov
dec
sbb
bound
loop
inc
loop
mov
mov
dec
and
xchg
shl
arpl
jp
clc
jbe
cmp
xlat
add
rcl
out
fwait
xchg
fsubrs
leave
stos
imul
pop
fcomps
addr16
popa
mov
imul
insl
cld
xor
jp,pt
jnp
shlb
scas
cs
mov
xchg
mov
push
aaa
mov
sahf
in
xchg
icebp
enter
ss
in
jmp
nop
jb
xchg
adc
dec
push
imul
mov
loope
mov
inc
jbe
fwait
daa
das
mov
xor
push
scas
fiadds
cmpsb
pop
out
bound
faddl
mov
xlat
pop
mov
add
add
pop
add
cld
rcrl
pop
push
mov
or
and
cmp
dec
std
add
scas
clc
test
bound
dec
in
ljmp
es
aaa
add
sbb
lcall
sub
dec
mov
mov
jmp
mov
jo
cmpsl
inc
loopne
jbe
sub
iret
pop
test
dec
pop
mov
mov
imul
cmc
mov
push
sub
push
pop
xchg
mov
and
push
mov
subl
jp
stos
sub
out
push
mov
sbb
mov
push
es
in
mov
mov
push
sub
mov
push
mov
nop
cmc
icebp
inc
in
ret
test
mov
outsl
mov
mov
jb
ja
push
mov
pop
dec
pop
pusha
popa
cmpb
dec
movsb
sbb
push
sub
mull
clc
les
aaa
inc
mov
jns
sub
add
sarb
ljmp
gs
push
ret
xchg
bound
xchg
mov
fdivl
mov
jb
mov
mov
mov
ljmp
mov
fwait
xchg
addr16
subl
ret
dec
ret
lods
mov
addr16
sub
leave
or
adc
ret
test
xor
mov
orl
test
sbb
shlb
mov
shlb
stos
divl
ds
mov
push
mov
inc
decb
mov
bound
loop
mov
xor
xlat
leave
jecxz
ds
ljmp
mov
xchg
or
shlb
inc
loopne
sbb
sti
sbb
push
xor
sti
je
pop
and
mov
jb
lcall
xor
clc
cmpl
and
loopne
pop
xorl
imulb
sub
movsb
ret
mov
jne
xor
jp
test
icebp
test
outsb
or
sbbb
mov
pop
add
dec
mov
or
lcall
insl
cltd
cs
outsl
xor
into
popa
mov
out
jns
xor
pop
jno
ds
pop
add
sbb
jnp
std
data16
xor
jmp
popa
mov
jb
mov
punpckhdq
loope,pt
mov
sahf
call
addb
loop
cmpsb
fmuls
jecxz
and
inc
push
fsubrp
sahf
stc
mov
movsl
xchg
xor
lods
mov
ds
push
add
test
xchg
jo
fldt
cli
push
pop
ret
imull
es
jb
mov
push
test
sbb
xor
shll
xchg
lahf
dec
xchg
mov
aad
inc
test
lea
xlat
push
int
arpl
fildll
test
cmp
divl
mov
stc
pop
mov
sbb
xchg
scas
mov
imulb
push
add
xchg
scas
sub
rorl
leave
push
mov
orb
xchg
jge
vpshab
fwait
jge
mov
and
mov
out
inc
sbbb
mov
ss
pop
daa
sub
aas
clc
scas
aaa
inc
jbe
jmp
mov
xor
ret
xor
inc
and
cld
push
sbb
loope
mov
in
pusha
mov
sub
jmp
shrl
add
movsl
das
sub
adc
call
enter
push
jmp
fidivrs
out
cmp
addb
incl
pushl
ds
data16
pushf
adc
mov
leave
sbb
movsb
rcr
inc
in
cmp
jle
and
callw
mov
xor
inc
sub
jbe
jmp
push
dec
aas
add
jp
add
test
sub
push
enter
push
mov
test
lock
sbb
xor
cltd
adc
subl
ja
push
and
es
movsb
stc
arpl
adc
loop
loope
jmp
outsb
cmp
inc
fnstsw
mov
lods
sub
add
jle
mov
repz
inc
adc
lods
into
mov
add
push
xchg
int3
outsl
ficoms
xchg
fnstcw
stc
roll
clc
movsl
cli
insl
outsb
je
insb
loope
out
cmpsb
lods
push
xchg
pushf
push
jmp
test
add
imul
filds
jecxz
jns
add
add
mov
sti
mov
mov
push
inc
push
cli
push
fildl
rcrl
pop
jmp
scas
fdivl
sbb
les
lret
xlat
mov
pop
pop
lret
cmp
xor
std
call
add
jmp
testb
jne
dec
negb
inc
or
cli
jg
outsb
pop
push
push
xor
in
sbb
xlat
mov
or
sahf
and
xchg
sub
sub
imul
inc
loopne
loop
or
push
dec
dec
testb
xchg
arpl
and
mov
cmpsb
stos
cmp
xor
mov
jae
lret
inc
repz
dec
and
test
outsb
nop
mov
popa
xlat
outsb
fwait
jmp
cmpb
fs
insb
iret
test
test
imul
mov
or
pop
out
cltd
cmp
pop
pusha
data16
hlt
andl
lret
ret
imul
inc
inc
les
mov
xor
repnz
push
outsl
push
cmc
inc
dec
pop
xchg
sbb
add
pop
adc
repnz
xchg
xchg
inc
add
shlb
mov
push
sbb
add
mov
mov
and
adc
daa
mov
test
xchg
mov
int
rorb
xor
stos
movsl
aam
ret
mov
imul
xchg
loopne
sub
xchg
xor
fs
out
lcall
pop
test
jb
add
aas
xchg
lcall
push
sbb
cs
adc
push
mov
or
sbb
test
mov
sub
mov
mov
std
loope
mov
sub
cmp
sbb
sti
push
fwait
je
inc
add
sbb
ja
js
or
das
daa
and
mov
outsl
fwait
mov
bswap
sbb
push
xchg
popf
sbb
cmp
ret
mov
jg
and
into
jns
repnz
add
in
int
add
adc
aaa
insb
dec
dec
mov
das
xchg
pushf
mov
xchg
stos
lods
dec
shlb
lret
jle
inc
pop
out
shlb
les
push
push
add
loopne
jae
mov
cmp
inc
mov
test
or
cld
jnp
cmp
mov
sub
jle
xor
xchg
enter
pop
mulb
test
cmp
lods
push
es
jp
adc
mov
xchg
cltd
mov
mov
test
sub
xchg
gs
mov
clc
cld
xchg
adc
jle
aam
mov
and
aad
mov
and
hlt
pop
shl
sub
sbb
xor
fsts
push
gs
mov
popf
loopne
jg
pop
adc
adc
int3
pop
aaa
into
jne
mov
jle
test
aam
add
and
dec
push
inc
call
data16
repnz
rclb
inc
out
mov
mov
or
cmp
cs
aad
pop
dec
outsl
push
scas
out
mov
aas
lret
dec
jae
push
push
aaa
pop
call
vunpcklps
test
dec
jl
inc
sub
addr16
fcomps
fldcw
call
outsb
push
lret
or
arpl
cmpsb
dec
xor
jb
dec
pop
sbb
adc
sarl
inc
fcoms
out
in
repz
cmp
inc
fnstenv
sbb
out
push
ja
lretw
imul
insl
xchg
dec
popa
push
sbb
and
cld
dec
fidivl
xlat
loopne
pop
hlt
inc
jle
or
mov
nop
sbb
jge
cmpsb
repnz
inc
fiadds
inc
fadds
popa
dec
mov
fsubl
cmp
ja
cltd
cld
and
push
out
xor
pop
fldt
adc
xchg
shll
stos
add
cmp
nop
push
sbb
in
int
outsl
sti
mov
in
push
cmp
addb
subl
or
and
iret
push
sub
cmpsb
jp
push
mov
mov
jg
loopne
call
daa
pop
stc
ds
jne
subl
fldl
xor
imul
sbb
pop
scas
jle
mov
fwait
xor
and
out
push
lret
xor
leave
sbb
or
xchg
pop
popa
outsb
lret
pop
sub
daa
jae
mov
adc
mov
push
scas
sub
mov
inc
out
cmp
dec
in
ljmp
ds
js
xor
adc
dec
imulb
daa
lahf
xchg
mov
add
mov
xchg
pop
sbb
dec
mov
inc
mov
stos
add
and
stc
js
or
mov
jge
add
sbb
mov
jg
xor
mov
xlat
adc
xor
into
shr
out
mov
sbbb
sbb
imul
subb
ds
orl
sub
daa
sbb
ret
in
inc
lea
add
jno
sahf
sub
lret
ret
ljmp
fnstsw
pop
sub
inc
cmp
mov
imul
mov
add
inc
mov
adc
and
jge
lahf
insb
xor
mov
mov
pop
push
inc
sub
jge
pop
imul
mov
test
movsl
inc
adc
stos
adc
mov
divb
pushf
ljmpw
mov
fwait
cmc
and
jo
xor
aas
fisttps
add
out
sbb
pop
in
mov
adc
lret
xor
mov
pop
pusha
cltd
adc
xor
addr16
push
das
in
clc
arpl
mov
xchg
xor
inc
loopne
mov
sub
cltd
out
daa
incb
dec
lods
cmc
cmp
xor
shlb
sub
aad
aam
push
inc
bound
popa
es
outsb
jp
cmc
mov
test
jae
cwtl
stos
lds
push
fadds
movsb
dec
into
pusha
js,pn
cwtl
cmpsl
lds
outsl
into
aad
sahf
inc
xchg
push
decb
fmull
sbb
mov
fadd
repz
inc
or
push
out
sbb
daa
icebp
shll
out
mov
mov
jno
aaa
fnsave
xor
test
ss
out
fstpl
pop
loop
push
push
aam
data16
pusha
roll
cmp
mov
repnz
fwait
sub
std
out
ja
jb
fmuls
cmp
sbb
xchg
fsubl
popf
pop
mov
pop
inc
or
dec
mov
out
mov
int3
jne
sbb
cmp
arpl
movsb
inc
push
daa
mov
enter
repnz
int3
dec
sbb
mov
pop
xchg
lcall
and
sbb
stos
pop
push
add
pop
andl
jns
js
mov
fcoml
inc
mov
mov
mov
adc
mul
cmpsb
out
adc
addb
or
rcrb
mov
dec
jbe
adc
pop
fbld
dec
iret
fs
fildll
enter
ror
sub
fldl
shrb
mov
mov
lret
mov
cmp
sbb
xor
pop
fwait
xor
shlb
not
add
pop
inc
js
cltd
das
aam
xchg
test
mov
mov
cs
add
push
lret
jbe
add
xchg
xor
into
movsb
cmp
test
jae
aam
loop
sbb
add
iret
test
movsb
xchg
lds
mov
pop
xlat
xor
jl
push
inc
add
inc
sub
jno
xor
outsl
dec
pop
mov
mov
out
scas
movsl
cld
leave
scas
loope
cmp
in
mov
pop
inc
sub
or
mov
jl
xchg
cli
out
call
fdivrl
sub
add
out
pop
test
lock
xchg
les
adc
mov
mov
flds
fdivs
add
imulb
ror
outsl
popa
adc
pop
jne
mov
xor
xchg
pop
jno
pop
jle
scas
movsb
ret
sub
dec
stos
sub
js
mov
sub
adc
pop
mov
mov
xchg
adc
xchg
pop
mov
test
push
pop
je
aad
lret
dec
psubq
decl
adc
ror
lret
shr
dec
stos
and
lahf
es
insl
inc
jno
fsubrs
scas
mov
mov
adc
rclb
xor
jnp
orl
mov
stos
imul
dec
test
push
pop
jne
out
dec
cmp
cmp
jecxz
sbb
icebp
stc
jle
pop
jmp
xlat
mov
adc
ficomps
out
pop
movsb
pop
sbb
cwtl
mov
mov
aad
mov
sub
inc
add
cmp
sub
lret
outsl
cmovle
xor
mov
mov
pushf
jae
test
push
test
loope
lcall
sub
and
in
inc
in
out
in
inc
or
sar
add
bound
rorl
push
dec
shl
jl
jg
mov
dec
mov
fwait
sbb
lret
fbstp
les
popf
stos
adc
xchg
faddl
lret
adc
pop
imul
ss
aas
inc
xor
xor
or
aas
dec
sbb
nop
dec
test
xchg
pop
or
pop
rcl
mov
jle
or
mov
pop
into
mov
cmpl
lock
cmp
fsubr
mov
cli
dec
gs
dec
ljmp
mov
jo
bnd
cmpsl
push
ss
test
dec
jmp
mov
mov
outsl
je
call
pop
cld
out
sbb
movsl
mov
inc
iret
popa
or
cld
aam
mov
pop
es
in
pop
rcrb
test
sbb
testl
jb
movd
cs
sub
adc
and
enter
ja
in
iret
and
pop
notb
testb
jne
xchg
call
cmc
in
inc
pop
or
lahf
add
mov
mov
xor
lcall
insl
mov
push
mov
and
dec
cmp
dec
cmc
pop
fmull
cli
std
inc
insl
shlb
call
sbb
adc
ds
xchg
data16
pop
jmp
sbb
cld
leave
inc
hlt
test
ret
and
andl
pushf
cli
rclb
dec
fidivl
dec
xor
mov
setp
mov
jmp
cmp
jmp
sub
xor
sbb
adc
decl
loopne
push
lret
dec
and
scas
roll
lea
lods
push
sub
nop
fwait
cmpb
fmull
adc
outsl
dec
aas
iret
xchg
and
xchg
leave
and
add
cmp
mov
push
repnz
sti
in
mov
jne
andl
imul
pop
cli
push
pop
fnstsw
nopl
and
pop
lahf
shl
ja
and
data16
cmp
pop
mov
popf
into
into
mov
and
push
pop
cmp
mov
ret
mov
jae
repz
loope
push
cld
xor
lret
aad
daa
mov
xor
mov
out
outsb
in
dec
stos
je
pop
push
mov
jo
adc
sub
sbb
adc
jmp
inc
insb
and
fs
shll
or
stc
shlb
mov
push
jmp
or
pop
or
outsl
dec
adc
cmpsl
scas
xchg
add
std
push
and
aam
jne
aas
jg
je
call
clc
adc
add
cmpsb
mov
mov
jl
mov
imul
aaa
push
faddl
fs
das
fcmovbe
jp
insl
jnp
sub
dec
jo
xchg
bound
rcl
cli
pop
subl
pop
popf
jl
movsl
outsl
inc
stos
dec
cmpsb
cmpb
add
incb
inc
fstl
xchg
iret
in
sbb
icebp
call
fldl
aad
sub
and
mov
aam
testb
cmp
or
enter
sbb
jbe
mov
and
or
pop
jmp
aad
pop
sub
aam
or
and
dec
sbb
push
js
loop
or
adc
adc
adc
xchg
mov
hlt
sbb
int3
sarb
and
sub
add
add
into
scas
sbb
mov
pop
xchg
add
bound
addr16
cli
mov
mov
subl
mov
cmp
push
or
xchg
mov
mov
adc
jle
and
ss
inc
jecxz
rcr
sti
add
aad
cltd
loop
sbb
add
jl
lret
aad
dec
dec
and
xchg
xor
out
xchg
int
and
and
into
sbb
jbe
cli
jecxz
xchg
arpl
repnz
in
hlt
popf
fstpt
mov
aad
sub
mov
or
cmpsb
icebp
dec
sbb
mov
fwait
leave
outsb
cmpsl
lahf
xorb
std
das
cli
jno
rolb
jb
cmpsl
bound
or
adc
push
scas
sbb
fdivs
or
xor
popl
andl
pop
mov
xor
pop
pop
jl
out
clc
inc
shlb
sub
scas
push
fwait
or
jecxz
sbb
mov
sub
scas
popa
adc
scas
adc
and
je
push
test
sbbl
dec
gs
dec
mov
push
aaa
jo
jl
add
xchg
pop
testl
xor
ljmp
bound
pop
adc
iret
cli
ret
pop
test
jp
idivb
mov
jnp
dec
dec
fsubrl
pop
andb
sarb
mov
test
push
mov
push
hlt
jae
sub
scas
mov
jl
inc
push
dec
mov
add
pop
std
mov
fs
fs
roll
cmp
imul
dec
sahf
mov
xor
jnp
push
mov
jle
into
repnz
mov
push
repz
fisttpll
fimull
int
andb
shlb
mov
movsb
cmp
mov
test
mov
je
fldl
jnp
mov
adc
sbb
test
pushf
or
mov
mov
lock
hlt
jecxz
dec
imul
cmp
push
lret
sub
lock
adc
iret
cmp
push
sbb
lock
pop
dec
mov
inc
add
sbbb
mov
addr16
gs
push
push
push
push
xor
sahf
shrl
arpl
push
mov
idivl
imul
fs
jecxz
cmp
add
shll
cmpsb
sbb
inc
sub
mov
fistl
icebp
in
sub
push
cmp
and
and
and
lcall
adc
hlt
push
lcall
mov
sarl
fisubrl
sbb
pushf
ret
sarl
pusha
lods
stc
out
hlt
shrl
fdivp
xchg
shrl
imul
int
mov
xchg
or
adc
mov
jae
je
cld
stc
gs
loop
inc
inc
cmp
insl
inc
mov
jno
or
xor
popf
fidivrl
add
lea
cwtl
xchg
sub
dec
ja
mov
or
lods
ds
scas
dec
sub
ds
cld
and
scas
sub
cwtl
add
sub
aas
and
jp
shlb
lods
jne
div
mov
jns
dec
cld
call
pop
pmaxsw
cs
stos
and
lock
xchg
pop
adc
mov
mov
jecxz
repnz
mov
adc
hlt
les
inc
jecxz
fdivrl
cmp
jmp
xchg
cld
mov
stos
in
outsb
shlb
ficoml
test
sub
jp
dec
add
es
pop
scas
dec
jmp
inc
xchg
roll
iret
lea
push
push
fists
and
or
pushf
fs
nop
mov
pop
adc
neg
nop
dec
sub
dec
int3
or
outsl
mov
xchg
jns
pop
cmpsl
hlt
push
push
or
push
cwtl
lds
insb
jne
not
int3
xchg
scas
cltd
imul
adc
les
add
cwtl
lret
test
xor
cwtl
testb
movsb
xchg
add
lret
fisubrs
mov
push
popa
xor
and
push
insl
mov
insb
pop
add
and
adc
xor
insb
popa
sub
lahf
mov
ret
aam
ret
imul
mov
sbb
cwtl
aas
aas
add
or
mov
mov
mov
stc
out
das
cmp
cli
loope
or
stos
scas
jbe
sbb
and
pushf
in
outsb
inc
mov
xor
cmp
fcmovbe
jne
imul
sub
mov
scas
xchg
ljmp
cmp
jmp
iret
popa
scas
xchg
enter
mov
jecxz
scas
test
in
push
sub
add
rolb
pop
test
pop
sbb
xor
out
sub
fists
jp
mov
sub
divl
adc
cltd
mov
adc
push
pop
dec
jbe
je
push
push
sbb
stc
or
jo
adcb
add
pusha
std
mov
xchg
xor
bndstx
or
and
inc
dec
xchg
inc
jb
jl
leave
xchg
jb
adc
and
add
mov
sbb
pop
cli
test
rorl
call
pop
or
es
loopne
js
movsb
nop
xor
dec
test
mov
pop
imul
xor
pop
adc
pop
or
jo
mov
imul
mov
mov
inc
pop
orb
cmp
in
inc
movsl
popa
out
xchg
pop
adc
lock
inc
mov
mov
add
fistpl
fimuls
sbb
das
aam
stos
sbb
cmc
xchg
mov
push
and
imul
inc
inc
cmc
jp
jo
cmpsb
xor
sbb
sbbl
mov
push
mov
xlat
leave
cmp
push
dec
mov
inc
imul
xlat
add
push
adc
xor
insb
push
out
xchg
andl
sbb
inc
or
jo
pop
add
cmpsl
xor
loopne
nop
fmuls
and
lds
pop
xor
sub
andb
xchg
cmp
and
sbb
sbb
stos
jae
mov
out
scas
popl
xchg
xlat
lods
dec
mov
in
ljmp
pop
fadds
pop
jne
dec
sub
cmp
xorb
out
add
je
sbb
test
popf
push
psubb
cmp
outsl
sbb
pushf
jecxz
sub
inc
movsb
jl
test
xor
arpl
clc
push
outsb
in
mov
aad
aam
pop
push
add
xchg
sub
xchg
inc
imul
test
imul
aad
arpl
jle
popf
in
add
lods
or
cmp
test
mov
lock
mov
stos
or
gs
es
lods
adc
and
movsl
sbb
sbb
mov
jns
nop
inc
jl
dec
fildll
jnp
mov
add
adcb
or
in
xorl
jge
sbb
arpl
int3
xor
out
add
xchg
loopne
sub
je
xchg
insb
cld
xchg
call
fcompl
loopne
mov
mov
inc
mov
mov
inc
push
leave
cs
jno
outsb
stos
jb
pop
je
sub
stc
scas
js
cmp
sub
sub
and
push
sarl
adc
cmpsl
mov
lods
mov
enter
mov
mov
and
shll
test
out
ret
jge
sbb
imul
push
inc
cmp
jmp
jg
je
adc
lods
adc
mov
mov
aas
adc
in
ljmp
push
xlat
out
es
testb
into
add
cmp
insl
sub
fs
sbb
add
and
xor
jbe
out
xchg
xchg
lods
jmp
test
divl
jo
xor
test
insl
add
xor
cmpsb
lods
lock
or
idiv
enter
es
inc
stc
jnp
scas
pusha
fcomps
in
shl
dec
jecxz
mov
xchg
jecxz
inc
pop
inc
dec
in
sbb
fld
or
mov
jns
adc
mov
jle
cmpsl
lret
pop
mov
and
mov
inc
xchg
mov
std
dec
lods
or
inc
mov
imul
inc
fists
int
xchg
mov
in
addb
sar
mov
inc
mov
xor
sbb
je
pop
cli
rcll
pop
mov
push
cmp
mov
adc
push
dec
cmpsb
daa
pop
mov
sub
xchg
jo
stos
or
bound
pop
fs
popf
repz
call
imul
roll
in
stos
cmp
sti
rolb
test
cmp
or
test
lret
or
mov
loopne
test
jo
jb
or
inc
add
in
in
inc
xchg
clc
out
add
mov
out
popf
insl
jnp
jmp
cmp
gs
daa
push
push
and
sbb
push
mov
sub
mov
leave
sbb
lea
das
mov
mov
and
in
cmp
xor
xchg
in
sbb
fsubl
cmp
movsl
mov
addr16
popf
sbb
rorb
std
lcall
pop
mov
call
mov
pop
lret
xchg
xchg
ss
mov
outsb
cwtl
sub
cmp
outsl
mov
jnp
stc
fnsave
in
repz
sti
jecxz
je
jle
daa
lock
sbb
xor
mov
cld
sbb
sbb
das
sahf
orl
hlt
stos
or
sub
leave
mov
out
mov
notb
xchg
sub
dec
jmp
pop
mov
or
jno
add
lret
xchg
dec
push
pop
rorb
or
push
mov
xor
xchg
and
into
pop
out
sub
loope
lock
movsb
cmp
popa
hlt
out
ret
bnd
daa
jne
jl
jl
inc
mov
aas
int3
dec
ljmp
arpl
lret
cwtl
sti
mov
xor
repz
lcall
repz
les
jne
add
xchg
pop
lods
sbb
scas
fldl
ret
cmp
xchg
cmp
adc
in
fcmove
arpl
xchg
adc
mov
mov
mov
data16
xchg
cmc
rcrb
adc
shrl
pop
fadd
mov
mov
inc
xor
insb
dec
xchg
mov
fs
lock
mov
repz
inc
aas
xor
sbb
xchg
ja
test
cmp
jecxz
add
out
mov
lods
dec
xchg
mov
xchg
cmpsb
push
lcall
jmp
dec
jbe
arpl
xor
mov
sbb
or
fsubl
leave
dec
inc
lahf
and
icebp
and
push
xchg
push
mov
jmp
lret
adc
in
shll
cmp
xchg
xchg
aaa
inc
dec
cmp
ja
mov
sarl
shll
rcrb
mov
jecxz
adc
pop
jb
clc
and
push
gs
outsb
mov
cmpsb
sahf
cli
xor
fildll
popa
movsl
aas
roll
imulb
cwtl
std
ret
lods
negb
sahf
cmp
mov
mov
pop
or
int
push
mov
insl
adc
in
addr16
dec
lods
out
out
les
les
je
adc
xor
or
aas
orl
mov
outsb
inc
scas
pop
mov
push
add
pushf
mov
lds
push
dec
sub
xchg
push
movsl
je
adc
cmc
or
les
pop
lods
arpl
inc
mov
pop
popa
bound
inc
push
in
inc
das
stos
nop
add
xor
pop
push
jmp
or
sbb
out
fdivl
outsb
je
movsb
nop
or
sbb
mov
in
mov
dec
and
jnp
mov
loop
insl
loop
in
mov
jl
in
repnz
aam
or
cmp
aam
mov
xor
lcall
add
ja
or
jmp
aam
push
clc
adc
jne
xchg
pusha
daa
push
dec
mov
inc
call
sub
mov
sbb
mov
popf
jae
xchg
mov
hlt
xor
les
mov
pushf
call
inc
cmp
test
in
dec
mov
cmp
lods
adc
inc
mov
daa
push
xor
lods
inc
addr16
roll
cmpsl
inc
push
orl
mov
or
lcall
mov
sbb
inc
in
bound
ljmp
sar
stc
xchg
add
cmp
int
xorb
xor
movsl
jbe
xor
outsb
stos
mov
and
inc
pop
addr16
dec
mov
ss
fisubl
test
cmp
hlt
cmp
std
insl
lahf
push
adc
dec
ret
fdivr
out
push
xchg
sbb
xchg
add
shrl
mov
or
pop
sbb
js
insl
lahf
inc
stc
rcll
xchg
int3
mov
jge
les
fisttpl
test
push
fisubrs
addr16
pop
ss
repz
bound
cmpsl
push
add
and
into
mov
pop
jns
test
dec
repz
pop
cmc
sub
inc
cmp
dec
faddl
outsl
push
lret
fstps
cmp
mov
insb
mov
lds
les
push
inc
js
sti
sahf
mov
sbb
stc
fisttps
lret
sub
pop
lcall
mov
jecxz
inc
pop
aam
adc
or
push
arpl
dec
pusha
loope
mov
mov
and
jne
pop
inc
lds
shlb
jns
fnsave
inc
repz
or
sub
lea
clc
enter
das
je
stos
cmp
sti
je
xor
stos
cwtl
add
mov
and
add
mov
pop
jo
hlt
mov
xlat
dec
jmp
xchg
filds
jge
test
out
jbe
push
jno
ss
jle,pn
je
mov
lods
lods
push
mov
push
leave
xor
push
or
lcall
sbb
jmp
adc
push
mov
ficomps
call
and
stc
data16
hlt
in
icebp
xor
andb
xchg
sub
jno
dec
push
xlat
rol
fdecstp
sbb
outsl
xchg
or
ret
jno
inc
cmpsl
jl
push
lods
mov
lahf
jno
insb
and
les
fcomps
dec
and
mov
add
fnstsw
xor
mull
mov
pop
bound
shrb
out
xchg
sbbl
jg
dec
out
jmp
not
addb
push
cmp
shr
idiv
arpl
mov
and
jmp
cmpsb
jle
aas
dec
mov
or
pop
mov
nop
loope
mov
ret
scas
mov
lret
mov
mov
mov
sub
dec
lcall
notl
mov
xchg
mov
jle
sbb
mov
inc
ljmp
mov
ret
cmp
gs
push
mov
mov
xor
mov
cmp
sbb
mov
xchg
jne
mov
xchg
roll
dec
push
mov
xor
gs
repz
lods
andps
fisubs
jb
out
out
push
mov
pushf
shlb
clc
mov
add
rcrl
shrb
fisttpl
inc
rclb
cmpsb
loopne
mov
fld
dec
add
in
sbb
hlt
movsl
lahf
mov
rcrb
add
or
stos
roll
fidivl
inc
pop
rorb
push
movsb
imul
push
xor
mov
push
xchg
cltd
xlat
mov
jns
sbb
call
mov
and
sbb
push
scas
das
es
adc
add
jae
push
jle
data16
out
in
sbb
and
xor
and
shlb
sarb
rorb
add
dec
push
push
loopne
leave
or
addr16
int3
mov
inc
cmpb
das
rcr
jle
test
sbb
ljmp
jg
jge
pushw
sub
cmpsl
push
daa
mov
call
push
stc
popa
dec
sbb
xor
xor
pop
jbe
sbb
add
aam
inc
or
rorb
int
jl
sbb
rorl
pop
pcmpeqw
mov
push
loop
xchg
and
sub
into
jb
mov
jmp
out
sbb
loopne
out
lods
lds
mov
repnz
mov
adc
and
repz
lcall
sub
icebp
pop
fwait
aad
ss
loope
test
int
xor
dec
inc
mov
outsl
int3
sbb
int
cld
test
or
mov
ja
and
and
push
mov
orl
arpl
push
movsb
in
inc
icebp
pop
adc
in
mov
xor
jg
and
stos
mov
cld
iret
movsl
pop
pop
cmp
jg
fwait
lret
sub
jne
mov
jmp
sbb
dec
and
fsubrs
rorl
sahf
nop
out
add
mov
dec
out
mov
push
mov
jl
xchg
sub
daa
ror
and
or
rorb
pop
or
bound
sbb
js
ds
lods
pop
out
xor
sahf
dec
mov
push
mov
sub
ds
sub
mov
mov
enter
jno
mov
clc
adc
enter
repz
in
leave
pushf
data16
push
addr16
sbb
ljmp
xchg
out
cli
push
jns
das
insb
ds
lahf
icebp
push
cwtl
sbb
add
and
xchg
sbb
jge
pop
mov
scas
rorl
ljmp
int3
xchg
jp
outsl
cmp
stos
test
and
das
jbe
cmp
lret
aad
pop
inc
or
jecxz
jle
mov
push
xor
test
lods
das
mov
sub
pusha
fdivrl
enter
mov
das
cwtl
aas
dec
push
jns
hlt
dec
dec
cmp
leave
fsubr
push
jl
cs
lahf
mov
inc
inc
insl
adc
scas
xchg
add
jnp
sarb
loope
imulb
adc
dec
imul
fiadds
mov
ficomps
mov
inc
jecxz
fistpl
testl
outsl
fdivl
lock
mov
sbb
adc
jnp
xchg
push
enter
aam
rorb
jge
rcr
or
icebp
push
fucomp
imul
mov
xchg
js
rclb
repnz
inc
gs
sub
cltd
outsl
sub
sub
cs
shrb
sbbb
adc
xor
cmp
cmp
aaa
jo
xor
jmp
enter
inc
aas
rorb
mov
les
mov
mov
mov
pop
pop
adcb
push
popa
aas
in
pop
sub
int3
sahf
cmp
mov
leave
adc
rorl
pop
and
int3
adc
mov
outsl
popf
iret
lods
and
xchg
cmp
scas
pop
insb
jo
dec
aaa
adc
and
pop
out
xor
mov
sub
je
pop
out
ret
outsl
popf
das
sbb
flds
scas
mov
add
jbe
or
jp
shlb
xchg
test
stos
shlb
rcrl
int
je
add
mov
jg
into
push
pop
pop
adc
or
inc
dec
jecxz
sbb
pop
out
inc
pop
mov
inc
test
add
add
fldenv
inc
jns
aaa
and
sti
pusha
push
sbb
cmpsb
jbe
xor
sub
mov
pop
jmp
mov
and
mov
xchg
pop
jmp
mov
sub
jbe
adc
adc
mov
and
mov
mov
and
mov
and
jle
fisubrl
cmp
lock
xchg
sahf
test
call
mov
push
push
icebp
lcall
push
xchg
pop
add
and
dec
jae
in
lds
stos
cmpsb
mov
or
cmp
xor
enter
es
subl
xor
mov
lcall
mov
add
xchg
in
mov
and
aad
out
test
jbe
inc
mov
test
push
sarl
adcl
jo
aad
in
daa
pop
xchg
subb
cmp
imul
rcll
je
fnstsw
mov
xor
or
inc
sub
test
popf
out
getsec
and
and
lretw
outsb
inc
sbb
xorl
push
rol
das
add
hlt
jmp
scas
fldcw
xor
jns
xchg
xor
mov
stos
xchg
mov
cmpsl
pop
repnz
test
jp
inc
lret
or
add
jge
sbbl
push
mov
popa
push
adc
jns
sub
testb
pop
aad
out
xchg
jno
mov
outsl
mov
xor
adc
push
cmp
fisttpll
xchg
push
adc
pop
add
xor
lods
lea
xor
sub
fnsave
mov
sub
cmp
or
pop
and
hlt
es
ds
mov
pop
jle
inc
adc
add
call
shr
push
ljmp
bound
push
mov
cwtl
arpl
mov
or
cmp
pop
inc
lahf
lret
mov
daa
dec
mov
arpl
jmp
test
icebp
mov
imul
sahf
cmp
test
imul
push
mov
mov
fcomi
fs
inc
lret
clc
dec
mov
jp
jb
jbe
mov
in
push
addl
mov
loop
loopne
pop
fwait
add
test
outsb
or
pushf
adc
xchg
out
scas
push
fldl
mov
cmp
mov
xor
outsl
cwtl
or
pop
imul
int
filds
mov
popf
cltd
ss
xor
test
dec
inc
ss
ss
inc
jno
adc
mov
inc
xor
imul
adc
jnp,pn
and
ror
and
stos
jmp
rcr
inc
mov
jne
jns
test
shlb
mov
inc
push
mov
pop
adc
cmc
bound
cld
out
jge
mov
scas
jnp
jns
in
push
push
mov
xor
jle
xchg
popa
cli
popf
lea
xchg
and
mov
inc
mov
imul
lret
outsl
sub
in
lea
sbb
push
int
mov
xor
mov
inc
push
ror
mov
pop
adc
lods
xlat
les
ret
enter
cmp
notb
pop
push
push
daa
ficoml
rcll
sbb
jb
push
xchg
dec
aam
inc
push
sti
cmpsl
sub
cmp
mov
jmp
in
and
xchg
insl
repz
out
pop
movsl
lds
mov
loope
and
push
or
repz
out
jo
push
jbe
push
dec
adc
loope
cmpsl
lahf
or
sbb
in
mov
and
ret
mov
decb
adc
dec
lcall
in
jns
test
lea
aaa
sub
in
pop
shl
inc
adc
cmp
lahf
jae
or
rcrb
jno
jl
pop
roll
xlat
out
mov
xor
jae
adc
sbb
jnp
jge
cwtl
jg
enter
jp
es
je
sub
xor
cmp
add
ret
add
xor
jne
inc
cld
rorb
lahf
loope
xor
lods
mov
push
into
push
mov
les
in
out
xchg
mov
roll
add
adc
shr
inc
ret
gs
cmp
mov
das
repz
pop
mov
call
mov
sbb
dec
mov
psadbw
xchg
in
testb
sbbb
cmp
out
inc
lahf
lret
fimuls
cmp
leave
enter
rclb
push
lcall
roll
mov
pop
hlt
adc
fwait
inc
mov
cli
outsl
sahf
or
adc
adc
fstpl
add
push
cwtl
push
test
mov
push
sbb
cltd
movl
cmp
test
or
cmp
cld
enter
inc
icebp
int3
popa
jb
xchg
jecxz
xchg
shrl
mov
int3
mov
and
or
mov
sbb
xchg
out
mov
stos
add
enter
roll
and
xchg
push
movsl
pop
xor
inc
sbb
out
out
jle
repnz
push
jnp
inc
out
in
and
repnz
dec
rcll
jae
imul
jp
adc
add
scas
pop
push
sub
xchg
inc
lods
xchg
vmwrite
jae
aad
psadbw
inc
xchg
and
rdmsr
xchg
fadds
fadd
jg
shll
test
xor
shl
scas
aas
das
mov
mov
lcall
clc
and
mov
mov
shlb
cmpsb
mov
lock
pop
xor
cs
iret
lock
lret
cmp
sub
lods
lock
or
jne
mov
fs
xchg
int
pushl
cmp
in
mov
mov
jmp
xchg
add
jge
scas
adcb
sbb
insb
ret
stc
sbb
xchg
pushf
lret
ret
xlat
movsb
test
inc
insb
inc
rorl
push
xor
mov
inc
pusha
jecxz
sti
jp
jmp
imul
mov
add
les
add
lock
jae
jge
and
aad
repnz
add
aaa
aaa
xchg
roll
cwtl
and
das
repz
dec
sub
mov
rorb
or
mov
lcall
lret
ja
imul
cmp
adc
psrld
or
inc
xor
xor
sub
outsb
lds
adc
out
mov
push
dec
add
sahf
sbb
rcrl
adc
xchg
mov
das
xchg
cmpsl
pop
and
test
cmp
movsb
mov
xchg
sbb
xchg
xor
xchg
mov
daa
sahf
les
inc
xchg
int3
add
fldt
stos
loope
sub
xchg
arpl
dec
mov
movsl
movsl
jmp
mov
stos
outsl
sbb
adc
testb
ljmp
xor
pop
loop
call
or
popa
popf
cmp
out
jmp
mov
lods
push
flds
adc
sub
fwait
ds
mov
ret
fnsave
cld
xchg
cmp
fucomp
fdivp
sbb
mov
in
mov
dec
inc
mov
imul
inc
lahf
movsb
inc
and
es
pop
adc
call
lret
enter
dec
add
push
pop
test
mov
push
mov
sbb
sub
add
in
mov
dec
push
mov
mov
sbb
mov
add
xchg
jle
nop
and
push
jmp
pop
jb
xchg
ljmp
icebp
outsl
out
jecxz
bound
aad
or
bnd
sub
and
into
js
or
cli
out
test
sub
aam
jb
push
adc
iret
mov
sub
xor
outsl
psadbw
jmp
xchg
ficoms
and
push
arpl
add
fcmove
lea
or
out
mov
or
xor
push
es
push
or
mov
ljmp
or
imul
lcall
mov
xchg
jo
in
cli
test
lds
jnp
and
loope
rol
out
scas
sub
test
xor
inc
inc
cmp
jle
mov
in
or
mov
push
stos
js
pushf
lods
mov
push
ficoml
xor
hlt
jge
jmp
add
es
insb
jo
movsb
mov
jno
out
cmp
jne
add
stos
sub
pop
in
and
mov
out
jecxz
dec
mov
cmp
mov
lds
add
jb
ficomps
dec
adcb
inc
mov
mov
aas
push
mov
xchg
add
ds
sahf
out
cmp
pop
jl
dec
aaa
mov
inc
adc
popa
jge
out
das
jb
lods
test
dec
dec
lods
xchg
icebp
daa
push
sbb
ja
mov
outsb
push
or
mov
pop
fstps
ret
pop
mov
jo
jle
or
push
stos
arpl
aad
xor
adc
xchg
xchg
lret
sub
pushf
jecxz
lods
xchg
js
add
mov
insb
pop
pop
decl
es
mov
inc
dec
xchg
test
mov
sti
insl
roll
ljmp
add
xor
mov
push
addr16
mov
mov
icebp
and
clc
and
imul
xchg
lds
mov
add
insb
inc
jecxz
scas
add
rorl
in
ljmp
jge
pop
add
mov
lds
aam
imul
push
adc
mov
je
fwait
fwait
pop
mov
adc
stos
xchg
fdivrl
test
cld
mov
sub
add
cmpsl
cli
adc
imull
sti
stos
insl
dec
lret
cmp
push
iret
test
pop
adc
push
inc
sub
push
adc
adc
fdivp
mov
stc
gs
fisttps
add
adc
adc
aas
in
cmp
iret
cmc
inc
out
xchg
adc
and
xor
pop
cmp
fcmovb
mov
mov
mov
in
push
jg
mov
xchg
movl
lret
push
inc
mov
in
pop
jbe
mov
loope
or
aas
dec
jmp
ja
push
fwait
sbb
out
mov
mov
mov
movsb
bound
adc
leave
or
mov
movsl
and
push
xchg
push
out
movsb
rolb
shl
jno
add
dec
mov
addr16
sbb
fildll
add
dec
andl
pop
adc
sub
cli
leave
xchg
dec
or
xor
mov
or
jbe
inc
sarl
inc
into
mov
xchg
fimuls
sub
sub
jbe
pop
in
bswap
lcall
cmpsb
mov
pop
push
aam
lea
orb
mov
mov
add
xchg
or
pop
roll
add
inc
out
sub
sub
ljmp
xchg
xchg
test
sub
pop
adc
testl
dec
mov
and
inc
inc
pop
icebp
fidivl
jl
lret
mov
gs
insb
lahf
pop
scas
add
sbb
jbe
sbb
loope
popf
pop
popf
jg
iret
in
dec
mov
push
push
xchg
mov
mov
inc
or
mov
pop
push
jbe
or
lock
hlt
stc
adc
xchg
push
and
xchg
mov
outsl
andb
aad
dec
adc
inc
xchg
incl
outsb
sahf
test
nop
je
cs
or
xchg
or
push
aam
push
inc
lea
into
sbb
dec
stc
xchg
adc
mov
pop
fwait
add
repz
imul
sub
and
mov
jne
cld
pop
inc
in
push
adc
jle
pop
das
xor
dec
push
mov
push
or
inc
shll
mov
push
xchg
mov
aas
les
lret
add
push
cmpsb
jbe
lret
dec
add
pop
add
mov
arpl
jne
std
stc
mov
in
pop
js
pop
cmpsb
pop
loopne
adc
fwait
rclb
ret
cmpsl
pusha
sbb
jae
dec
push
insl
xchg
jp
cmp
fmuls
sbbb
xor
dec
imul
jp
adc
lcall
adc
adc
jne
scas
cmpsb
pop
ret
cmp
lret
cmc
jno
jns
fisubl
jo
sub
add
mov
es
aad
mov
adc
lcall
testl
test
and
pop
cli
pop
neg
add
mov
or
fnstsw
mov
sbb
jmp
jmp
movsl
ja
clc
inc
cltd
insb
jge
sub
mov
mov
dec
mov
inc
in
ret
xlat
je
test
xchg
xchg
sahf
dec
push
push
sub
mov
mov
sbb
and
ljmp
subl
mov
cmp
xor
insb
xor
cltd
popa
jmp
xchg
adc
push
subl
adc
mov
dec
xlat
mov
adc
mov
jbe
imul
xor
fcom
not
push
push
movsl
hlt
test
adc
xchg
xlat
mov
lret
jns
mov
lret
retw
xchg
aas
add
jo
mov
xor
cld
xorb
adc
sbb
add
shll
xorl
sbb
std
pop
jmp
or
sbb
xchg
add
inc
sub
mov
stc
xor
jge
cmp
xor
inc
loop
lret
repnz
aad
clc
xchg
int
sbbb
sub
or
mov
sti
ss
push
daa
mov
cli
push
add
loope
ja
lea
add
push
xchg
fimuls
jbe
lret
sbb
inc
mov
enter
mov
stos
fistps
aad
lea
ja
shl
out
sbb
push
jp
sti
cmp
fldcw
sbb
out
popf
inc
xor
test
std
subl
jae
pop
rcr
jno
pop
je
cmp
lods
scas
push
inc
sbb
cmp
adc
sti
repz
out
xor
into
cwtl
notl
ret
gs
push
ficompl
mov
push
sub
loopne
cmp
push
add
jp
insl
pusha
push
rcr
hlt
mov
pop
xchg
push
cmp
lods
in
insl
push
pop
ss
cmp
lea
out
fnstenv
mov
mov
repnz
ret
ret
call
or
sbb
lock
sti
fists
jmp
inc
pop
cmpsb
cmp
pop
fisubs
sub
sub
xchg
jne
call
push
ja
jnp,pt
in
inc
fbld
and
out
adc
jg
pop
push
sbb
jae
ljmp
inc
shlb
repnz
in
or
mov
mov
jg
sbb
rcll
fiaddl
jl
xor
inc
jge
pushf
mov
cmp
inc
popa
xchg
imul
cli
jnp
inc
movsl
sbb
arpl
dec
pop
and
add
sbb
int
dec
test
jns
add
push
mov
mov
add
jp
xor
ret
add
fwait
lret
movsl
test
fsubrl
push
sbb
ficoml
cwtl
xor
or
dec
mov
orb
jns
dec
or
ret
rol
je
rcrb
mov
loope
scas
mov
xchg
cmc
adc
aaa
xchg
cs
or
cmpsb
xchg
sbb
push
jbe
insl
jne
mov
test
stc
aam
sbb
dec
xor
ljmp
sbb
lcall
push
popa
mov
cmpb
jo
ja
call
gs
sti
xchg
mov
add
jno
cld
frstor
jmp
and
add
outsb
lahf
and
imul
fwait
ds
scas
popf
jmp
ljmp
jbe
or
cmc
push
sar
sub
sbb
xor
dec
add
int
jg
xlat
pop
icebp
les
aad
sub
sbb
xchg
subl
add
fs
enter
mov
cmpsl
fidivs
stc
or
jb
adc
cmp
mov
outsl
pop
push
add
ja
dec
xchg
or
hlt
xlat
scas
fnstcw
cs
and
jmp
mov
xchg
ret
mov
inc
inc
fistpll
adc
cmp
dec
push
notb
xchg
jnp
js
sbb
jne
jl
mov
add
xor
jmp
hlt
cmp
adc
inc
call
mov
dec
dec
mov
or
add
inc
dec
dec
cs
jp
add
mov
xor
xor
inc
mov
jecxz
dec
loopne,pn
jb
test
mul
sahf
jne,pn
pop
pop
outsl
cli
xchg
adc
dec
notb
adc
sub
mov
xorb
adc
and
inc
in
pusha
and
pop
repz
sbb
jge
clc
push
fwait
cmc
lods
adc
dec
push
sub
push
popa
mov
iret
fnstcw
add
stc
xor
ret
jg
lods
ret
insl
xorb
adc
mov
mov
out
cmp
xchg
mov
in
and
rcrl
inc
inc
jae
mov
mov
sbb
mov
fistpll
add
pop
sub
or
push
gs
por
pushf
inc
mov
mov
loope
pop
sbb
outsb
lret
sbb
arpl
jmp
mov
outsb
pusha
test
mov
out
shlb
mov
pop
ret
jae
mov
pop
loope
hlt
inc
cmp
pusha
pop
sub
xorb
out
cmpl
add
xorb
lods
inc
icebp
ja
andl
xchg
bound
add
stos
and
cmp
dec
jmp
scas
fistpll
inc
mov
push
leave
add
addr16
adc
mov
sub
out
aas
mov
xlat
dec
push
mov
popa
shrl
jl
mov
push
pop
mov
jns
cmp
int3
cltd
mov
push
push
push
sbb
cmp
loopne
inc
fsubrl
and
mov
mov
sbb
std
mov
sub
arpl
dec
xchg
in
xor
xchg
jne
idivb
mov
std
out
adc
aad
dec
sub
scas
popl
enter
and
repz
out
dec
inc
lahf
dec
add
dec
dec
cli
dec
in
aas
jp
in
movsb
push
lds
sahf
mov
cmc
fiadds
lods
jbe
cmp
xor
in
push
mov
push
mov
xor
adc
fsubr
call
repz
scas
lret
push
push
sbb
mov
loop
mov
mov
and
in
sub
ds
jae
sti
sbb
dec
mov
push
sbb
sub
dec
xor
sbb
adc
sbb
inc
push
fsubs
adc
test
loope
sbb
stos
out
mov
sbb
dec
pop
movaps
and
insb
dec
fcom
inc
dec
mov
andl
pop
push
cli
imul
mov
cmpsb
cmp
xor
repnz
pop
dec
mov
lds
jl
in
movsb
repnz
push
dec
std
loopne
daa
ss
int3
shll
call
lock
leave
mov
mov
adc
popa
cmp
dec
adc
sbb
shrl
pop
mov
fsubrs
cmc
add
push
lods
ror
sahf
cmp
jb
int
or
or
std
jo
dec
mov
fs
or
inc
loopne
jae
inc
aas
andps
enter
popa
mov
bound
pop
aad
xor
js
cmp
cmp
sbb
gs
std
jbe
pusha
add
stos
test
jge
push
arpl
or
fstp
jecxz
inc
popf
in
ret
gs
sub
adc
push
rcll
push
jge
push
js
and
stc
orb
std
add
lret
xchg
pop
sahf
insb
lods
mov
ret
es
out
sub
je
xor
adc
shrl
sbb
adc
jle
out
stc
mov
shrb
add
orl
repnz
int
int3
push
push
or
jns
repnz
mov
and
popa
sbb
test
mov
lcall
test
jns
aas
lea
scas
sbb
aaa
or
imul
mov
mov
jb
pop
cli
xchg
sbb
dec
imul
jbe
push
cmp
xchg
sub
mov
es
in
add
adc
fidivs
mov
imul
test
add
sbb
in
imul
mov
pop
mov
pop
mov
pop
ret
int
data16
sbb
mov
push
das
imul
pop
xor
jecxz
fcomps
daa
nop
mov
mov
and
pop
fsubs
xchg
lret
push
nop
mov
lods
inc
dec
sbb
pop
inc
adc
sbb
mov
jg
cmp
xor
push
dec
mov
shrb
movsb
pop
rdmsr
lds
xor
add
scas
negl
xor
sub
fs
inc
loop
mov
jnp
in
das
sub
aaa
push
mov
xor
mov
xchg
aam
push
or
xchg
xchg
lods
lcall
dec
test
out
test
cld
aas
add
out
loope
fcmovnb
lock
mov
mov
inc
inc
or
mov
arpl
rclb
mul
xlat
mov
cmp
push
push
mul
sub
notb
sti
xabort
aad
dec
jmp
push
in
jne
flds
popf
xor
rcrb
cli
notb
cmpsl
cmp
xchg
insb
in
lret
cmpb
leave
cli
inc
pop
jmp
xor
fs
mov
mov
icebp
adc
mov
lds
lods
std
addr16
aas
push
push
pop
mov
dec
and
jle
xor
test
je
cmp
cmp
fimull
xor
xchg
int
out
inc
sbb
mov
lcall
in
cmp
jno
loope
xchg
hlt
cltd
mov
lahf
and
xor
test
mov
inc
xor
mov
push
ret
and
mov
out
cmp
arpl
int
je
fadds
outsl
rorb
cltd
iret
bound
jle
aad
mov
sbb
movsb
popa
pop
ficoml
clc
ficompl
mov
orl
xor
insb
xchg
int
std
fsubrl
sub
and
ret
mov
movsb
mov
inc
in
adc
sub
test
cmpsb
dec
xchg
sub
lret
push
cmp
sbb
push
push
lods
sbb
inc
inc
adc
xchg
pushf
iret
pop
mov
xor
xlat
mov
lds
repz
arpl
test
fmulp
leave
sub
mov
xchg
lcall
sub
inc
dec
rcll
jecxz
xor
stos
mov
mov
sub
adcb
xchg
xor
adc
movsb
pop
push
push
imul
sub
dec
mov
or
or
xor
xlat
adc
adc
int
sbb
test
fiadds
jnp
aaa
dec
pop
fmuls
dec
movsb
bound
rcrb
out
push
xchg
neg
mov
mov
adc
hlt
push
pop
xor
add
mov
fisubrs
cwtl
jb
mul
out
jle
fdivrl
pop
pushf
dec
xor
cmpsb
outsb
xor
cmc
push
imul
push
inc
into
push
xchg
notl
cmp
jnp
and
mov
ret
or
jmp
ja
lea
bound
push
dec
icebp
in
pop
sbb
dec
dec
adc
adc
xor
insb
jle
mov
sahf
data16
and
pop
repnz
cwtl
push
sbb
std
adc
rcrb
jb
xor
and
sbb
mov
outsb
pushf
arpl
test
fistps
xor
ficoms
test
jg
jae
jl
and
dec
in
cmp
xor
pop
in
mov
cmc
loop
pop
mov
int3
daa
sbb
xchg
imul
lret
sub
or
pop
lds
pop
or
in
cs
rorb
repz
divl
clc
pop
and
pop
data16
xchg
dec
xor
pushf
shlb
out
cmpsl
push
jg
sbb
mov
std
je
bound
aam
fdivrs
cmp
sub
sub
ficoms
fstl
in
iret
je
xchg
pop
fidivs
push
js
fiaddl
test
ds
stos
rcrb
add
push
dec
gs
or
insb
jns
subb
dec
or
test
adc
lea
jmp
inc
dec
into
outsl
lock
call
mov
xor
dec
sarl
clc
cmp
pop
subb
cli
int3
popf
loop
xchg
add
add
or
mov
pop
adc
bound
mov
adc
inc
ljmp
and
mov
sarb
cmp
in
jle
lds
lahf
stos
xchg
shrb
xchg
movsb
xor
lods
cmp
xor
dec
push
mov
cli
adc
xor
pop
jbe
sbb
js
inc
loopne
push
mov
xor
xor
sbb
fbld
lret
pop
popa
cmp
scas
xchg
mov
xchg
mov
cmp
add
stos
lock
cwtl
add
xchg
in
inc
mov
cmpsb
mov
fiadds
movsl
xor
push
pop
rolb
sub
stos
lret
fisubs
push
imul
inc
and
lret
push
scas
pop
test
inc
dec
aaa
mov
mov
pop
out
lret
nop
lods
imul
js
pushf
fdivs
mov
lock
cmp
mov
rcrl
ljmp
mov
ret
jo
and
pop
test
sub
nop
mov
movsl
push
imul
fcomps
addr16
push
mov
cmp
inc
sbb
in
dec
lret
enter
sbb
shl
jmp
stc
pop
fs
and
pop
js
mov
mov
popa
or
out
test
lods
jmp
mov
in
in
shrl
add
xchg
push
das
lahf
out
xchg
scas
popa
sub
decl
push
sub
jno
dec
dec
daa
adc
movsl
push
fld
add
adc
dec
inc
push
mov
and
inc
addl
js
adc
mov
and
stos
push
fdivl
je
inc
mov
or
mov
out
pop
xchg
rclb
adc
sbb
xchg
aam
add
mov
jmp
aam
into
xchg
pop
sahf
scas
xlat
sbb
sbb
lcall
inc
data16
or
sahf
loope
mov
dec
out
repz
pop
gs
sbb
mov
pop
inc
or
jecxz
inc
jb
popf
jg
pop
movsl
lea
out
add
xor
push
cmp
adcb
scas
jecxz
inc
out
aas
movsl
adc
int
push
xchg
adc
or
scas
xchg
push
dec
xor
xchg
cwtl
scas
or
repnz
cld
mov
call
loope
psrld
add
ret
cmp
scas
lret
test
xchg
sub
ds
jno
gs
lods
mov
pop
and
mov
or
jbe
loope
dec
pop
adc
jg
mov
pop
sub
or
out
dec
mov
push
pop
cmp
and
out
sti
push
push
add
inc
sbb
push
aam
jle
loopew
xchg
imul
add
loope
in
dec
sarl
jae
add
repz
jne
add
push
mov
adc
lds
pop
xchg
shrl
push
jg
dec
movb
push
add
jno
pop
xchg
inc
pop
mov
cltd
xchg
adc
lds
in
jnp
dec
lds
lret
sbb
sbb
test
sub
push
xchg
push
mov
sub
ds
add
mov
push
push
mov
jecxz
ss
and
inc
sub
push
subb
mov
mov
push
ror
adc
mov
jmp
in
aam
adc
popf
sti
dec
mov
lods
scas
mov
shll
or
loope
subb
je
out
xchg
sbbb
adc
sahf
add
add
jae
pop
loopne
mov
imul
stc
xor
sarl
jmp
lret
mov
jno
jmp
negb
xchg
push
xchg
insl
sbb
jno
or
ss
adc
jmp
js
mov
sub
scas
leave
mov
xchg
mov
lcall
add
in
lods
or
stos
loop
movl
int3
fmull
xor
adcl
inc
inc
das
jo
cmp
push
xor
fs
mov
mov
std
jl
cwtl
xchg
ds
cltd
je
add
mov
ljmp
aaa
shlb
subb
mov
cli
test
iret
mov
daa
or
iret
add
mov
jns
shrl
into
xor
int3
je
xchg
cmp
pop
lods
clc
insl
jne
clc
aaa
sbb
mov
idivl
je
adc
adc
or
dec
scas
shl
jae
and
pop
addr16
fistpl
mov
fwait
pushl
lods
adc
lret
lcall
pop
mov
inc
icebp
dec
adc
sarb
add
push
sahf
dec
inc
cmp
rcl
adc
outsl
cmp
mov
out
jecxz
repz
sbb
loopne
loopne
sub
push
add
sub
sbb
cmp
outsl
jnp
dec
push
sub
jle
cmpsb
popf
aam
mov
int
jmp
xchg
popf
divl
push
es
dec
test
mov
jge
ss
inc
mov
pop
pop
call
add
sbb
sub
mov
lds
adc
add
notl
xor
mov
dec
icebp
shl
leave
push
lahf
enter
in
call
mov
pop
ret
add
cmp
loopne
leave
and
mov
mov
or
xor
fwait
jmp
rorb
sti
jno
pop
mov
mov
sub
imul
mov
mov
sbb
fcoms
jp
jl
pusha
sbb
cli
adc
jnp
aaa
pop
cmp
out
and
dec
mov
mov
mov
aam
rcrl
jmp
xor
jge
inc
cmp
jl
push
enter
jb
add
sub
mov
sub
jmp
or
insb
aad
mov
xchg
lds
jo
mov
mov
pop
xor
cltd
out
dec
pop
sub
or
sub
leave
inc
cmc
xor
adc
rcl
xorl
add
mov
cmp
inc
jg
mov
dec
std
xchg
mov
xor
popa
push
shrb
mov
mov
inc
sbb
add
stos
ret
and
fcomps
inc
mov
lea
lcall
xor
hlt
mov
imulb
xor
mov
dec
mov
inc
push
loop
sub
xchg
insl
cmpsl
xchg
sbb
aas
xchg
sub
sbb
lods
stos
testb
in
cmp
pop
mov
insb
ret
out
mov
std
in
push
decb
or
pushf
lds
push
lcall
into
mov
fiaddl
test
andl
adc
aaa
xor
pushf
xor
test
clc
loope
inc
repnz
or
mov
lcall
inc
push
push
or
aad
nop
xchg
sbb
into
dec
cs
daa
jb
xor
bswap
and
in
push
sub
mov
dec
test
cmc
pop
xchg
fwait
icebp
jb
jp
insl
outsl
cmpl
mov
popa
jle
cmpb
mov
dec
fisttps
add
pusha
push
shrb
xor
and
sub
fcoms
mov
mov
mov
movsb
xchg
push
cmpl
sub
inc
adc
punpckhwd
or
mov
mov
or
rclb
push
mov
std
mov
stos
xor
sub
mov
adc
and
mov
leave
out
mov
jbe
mov
test
xchg
push
in
ds
fldt
pop
and
andl
or
clc
repnz
or
mov
cmp
and
push
insb
cs
out
lods
xor
sub
scas
mov
inc
sub
loope
fbstp
loope
jl
push
ret
nop
sbb
jg
push
out
and
sti
repz
mov
lods
mov
add
mov
mov
mov
mov
aam
iret
movsb
jmp
fs
js
pop
fcompl
inc
pop
je
mov
fimuls
int3
rol
and
std
lea
push
jg
ljmp
hlt
fisttpl
or
push
dec
mov
push
pop
lods
xor
scas
dec
fnstenv
sub
lahf
cs
jle
add
dec
sub
ss
or
loop
enter
std
cmpsl
add
xchg
testb
lret
lods
mov
cmc
enter
xor
fucomp
add
fdivrl
out
stos
xchg
sbb
jl
xchg
cmp
inc
pop
insl
pushfw
sbb
xchg
fwait
jb
add
addr16
add
push
push
ljmp
into
pop
test
subl
cmpsb
mov
and
push
push
icebp
add
sahf
cmp
sub
fwait
mov
aam
rol
cmc
push
xchg
and
jno
mov
aaa
xchg
mov
clc
xchg
pop
fimull
adc
mov
cltd
mov
jp
or
push
add
repz
add
xor
rcrl
lret
call
shrl
stos
mov
xchg
mov
xchg
idiv
mov
mov
mov
inc
sbb
dec
adc
repnz
mov
xchg
mov
jnp
cmp
cmp
jno,pt
out
lahf
and
push
cmp
nop
xorl
jns
pop
mov
lret
or
xchg
sub
sbb
inc
ror
add
push
jg
jp
or
cmp
mov
mov
xlat
jne
jg
xchg
inc
das
sbb
jnp
cmpl
jmp
stc
mov
ret
xor
mov
pop
jp
push
lds
jo
lret
std
sbb
add
jecxz
and
punpckhbw
or
dec
jmp
in
stos
repnz
mov
imul
inc
xor
ret
sub
repz
push
cmpsl
out
popf
inc
hlt
mov
repz
xchg
gs
leave
loopne
pop
sub
rcrl
mov
fdivrl
outsl
xchg
cmp
sar
or
rorl
loop
inc
arpl
es
or
test
idivl
mov
mov
push
push
mov
jbe
shl
jecxz
inc
fdivs
inc
ds
and
mov
push
fs
dec
sbb
daa
cmpb
pusha
xchg
fwait
subb
adc
ds
xchg
sbb
or
inc
out
or
jo
flds
adc
test
push
sbb
and
xchg
rcrb
out
mov
mov
xchg
fidivs
lret
mov
push
add
addr16
and
mov
cmp
testb
out
les
mov
xchg
cltd
mov
or
mov
adc
divb
push
loop
roll
popa
in
cmp
mov
xor
dec
stc
aam
sub
jno
adc
and
fdivrl
cwtl
addr16
pusha
in
test
and
jg
add
sbb
negl
add
and
cmp
cmc
or
add
jb
mov
adc
andb
sub
lahf
cmpsb
stos
push
sbb
test
pop
push
dec
div
cmp
xor
cmp
scas
sub
pop
xchg
mov
notl
gs
push
and
movsb
iret
ds
push
mov
sbb
insl
cmp
mov
rcll
jno
inc
xor
test
cmp
rclb
mov
jge
jo
lret
mov
stc
es
std
cmpsb
repz
jge
sarb
xchg
jmp
repz
cmp
mov
inc
gs
or
mov
ss
in
sbb
test
icebp
or
int3
jmp
popf
mov
je,pt
hlt
push
fadds
or
jne
jno
fdivr
ljmp
movsb
dec
xlat
movsl
data16
dec
lcall
test
mov
std
outsb
test
outsb
fwait
adc
lds
lea
aas
icebp
cmpsl
lahf
daa
cmp
push
insb
adc
jbe
jns
push
arpl
jecxz
xchg
out
pop
push
fucom
cmp
int3
aaa
cld
clc
fwait
loop
je
into
xor
mov
rclb
push
or
int3
lods
inc
jp
pop
nop
dec
add
ljmp
cmp
xchg
fs
mov
icebp
push
inc
xor
pop
dec
pop
push
fwait
icebp
mov
or
sti
lods
mov
loopne
pop
fucomi
xchg
stos
add
pop
xlat
jne
ret
jae
mov
fcomps
add
rorl
jnp
ffreep
int
adc
jo
arpl
xchg
or
adc
rcrl
lret
mov
xor
mov
pop
movsl
mov
jne
mov
sarl
xor
cli
xchg
fldcw
addr16
push
out
ljmp
xchg
dec
add
mov
jo
iret
add
sub
mov
lods
dec
outsb
adc
cmp
mov
dec
out
aas
pmulhuw
push
aaa
out
test
mov
jp
pop
dec
loopne
and
dec
or
aad
ret
cmp
in
sbb
add
jmp
sbb
das
xchg
dec
out
dec
icebp
pop
adc
lods
clc
inc
dec
jecxz
xor
or
cmp
mov
mov
ja
out
pop
xchg
movsb
jle
fbstp
js
and
andb
idivb
jnp
sbb
in
rclb
enter
in
dec
mov
xchg
cltd
or
jg
dec
shrl
dec
jnp
push
jl
mov
loop
icebp
in
and
add
fsubs
or
mov
je
push
cli
pop
imul
push
mov
xchg
xchg
test
adc
leave
add
mov
out
and
jnp
mov
fmull
jecxz
sbbb
inc
fcomip
push
xlat
and
and
sti
pop
ja
roll
cltd
cmp
js
and
and
and
adc
xchg
hlt
out
pop
jg
mov
sbb
lods
out
sub
es
gs
mov
push
dec
lahf
ret
cmp
int3
or
in
mov
mov
ja
mov
cmc
push
icebp
in
fiadds
lret
xchg
or
jmp
or
pop
sbb
lea
add
in
push
xor
pop
xlat
cmp
bt
call
mov
pop
xor
les
lcall
mov
push
sbb
scas
inc
aam
xchg
dec
ds
and
pushf
adc
das
mov
jae
inc
lods
fdivrl
add
sbb
shlb
movsl
mov
mov
fsubl
sbb
nop
and
pop
mov
jns
sub
lea
xor
out
fnstsw
shl
popf
mov
fisttpl
cmp
fiaddl
or
push
xchg
pop
shrb
stc
adc
and
cmpsb
inc
push
mov
mov
adc
push
cs
push
cmp
jno
fsubl
push
and
insl
aaa
push
pop
out
push
fadds
mov
xchg
mov
xchg
popa
pop
js
mov
xor
inc
mov
je
lahf
scas
jl
push
xchg
and
fwait
jge
mov
push
out
pop
mov
xor
iret
ds
pushf
jge
push
repz
stos
jnp
add
out
inc
repnz
es
pop
push
stos
pop
dec
in
xor
fwait
push
xchg
aas
fstpl
xor
pop
dec
sub
icebp
aas
mul
pop
loopne
ja
adc
mov
out
rcll
add
push
pop
push
adc
sbb
nop
dec
aad
dec
cs
push
and
xorb
adc
cmp
mov
repz
dec
inc
add
mov
stos
pop
cmc
pop
xchg
mov
insb
insb
mov
frstor
or
int
popa
testl
and
jns
adc
add
jle
lret
in
mov
push
and
arpl
or
out
mov
cli
mov
pop
not
pusha
inc
jp
shrl
mov
jae
faddp
aas
jne
inc
push
pop
ja
jecxz
or
sub
testb
mov
cmp
lds
pushf
pop
adc
push
cmp
or
xor
mov
cltd
sbb
inc
pushf
imul
sti
es
popa
aas
inc
sarb
orb
ds
adc
adc
loope
stos
cmpsb
ss
cld
xlat
mov
dec
mov
aad
out
adc
jmp
jecxz
mov
mov
xchg
inc
insl
xor
stos
adc
cmp
lret
fwait
lcall
ja
and
jg
mov
push
xchg
les
jmp
sub
loop
xchg
jl
xor
xchg
inc
inc
push
cli
arpl
aas
sub
inc
add
outsb
xlat
cs
lret
pop
mov
repz
icebp
pop
mov
stos
jecxz
scas
mov
jno
push
imul
or
lods
xchg
mov
int
sti
cmpsl
sbb
lahf
data16
xor
sarl
aas
mov
mov
mov
scas
xchg
fildll
or
mov
xchg
mov
test
mov
push
cmp
js
mov
mov
fmull
orb
add
fsubrl
pop
es
mov
lea
nop
stc
cltd
mov
fwait
mov
push
fsubrl
xor
and
xlat
pop
in
imul
fwait
ds
and
xchg
push
outsl
mov
andb
frstor
and
int
inc
mov
push
pop
int3
les
data16
bound
loope
mov
dec
lea
pop
mov
inc
jl,pt
push
loop
push
icebp
daa
pop
or
pop
shl
xor
inc
mov
fwait
jne
mov
test
sub
jbe
xor
and
je
divb
pop
insw
repnz
jo
sbb
sbbb
ret
test
insl
aas
loop
dec
add
faddl
insb
out
mov
aam
jmp
xchg
mov
mov
and
xor
aaa
test
movsb
add
xor
scas
sbbb
add
repz
pop
lods
orb
push
push
ss
pushf
sub
cmpl
cmp
add
mov
sar
xchg
repnz
arpl
mov
aad
cmpsl
mov
mov
lock
jns
pusha
ret
repnz
mov
mov
nop
mov
adc
pop
add
jp
stos
jb
loopw
sti
adc
xchg
or
cmp
das
adc
mov
in
mov
loop
mov
addr16
pusha
sbb
fwait
jp
sbb
mov
xchg
adc
jmp
bound
jns
mov
pop
in
dec
test
pushf
mov
fldcw
pusha
dec
arpl
add
cli
inc
out
sub
sti
mov
add
rcll
pushf
and
inc
sub
gs
mov
sahf
out
cs
push
arpl
pop
dec
add
pop
iret
je
adc
sbb
mov
add
imull
andl
test
inc
dec
inc
sbb
loope
aam
outsb
xor
aas
or
pop
mov
push
inc
insb
cmp
insb
cmp
mov
int
push
pop
incl
popa
stc
pop
and
mov
mov
jnp
movsl
dec
icebp
std
sub
call
inc
and
pop
scas
iret
rcl
test
push
pushf
and
das
or
pop
and
adc
mov
dec
adc
inc
jnp
call
jb
outsl
fwait
push
out
out
loopne
jbe
out
push
mov
decb
fiaddl
inc
fwait
lahf
scas
xchg
enter
daa
es
popa
pusha
fisubrl
iret
sbb
push
sub
ja
fldcw
lock
and
repnz
fs
mov
movzbl
and
adc
dec
jle
rcl
dec
lahf
stos
mov
es
cmp
test
xchg
in
rolb
icebp
fwait
dec
push
dec
or
jecxz
pop
mov
lcall
mov
iret
adc
pusha
loop
adc
push
add
std
mov
cmp
mov
stc
jmp
icebp
test
push
xor
pop
lock
sbb
jp
in
das
adc
call
das
gs
popa
xchg
lods
loop
add
subb
in
sbb
cmpsl
xor
mov
cmp
frstor
push
les
jecxz
sub
cmp
cmp
test
popf
or
jge
mov
jle
jg
push
mov
scas
push
mov
xchg
push
inc
xchg
jle
xchg
push
lret
insb
mov
out
push
out
movsl
mov
aas
or
push
sub
js
fnsave
in
outsl
out
push
dec
mov
mov
jae
andl
sub
outsb
jmp
testb
inc
dec
pop
cmp
loope
stc
sub
js
sbb
fcom
out
insb
imul
icebp
adc
in
mov
push
xor
data16
cmp
adc
sti
mov
fisubrl
and
cld
ljmp
js
jecxz
test
int3
sub
dec
stos
add
inc
sbbl
mov
popf
mov
jb
jmp
dec
ret
mov
inc
and
inc
in
stos
mov
push
fcoml
sbb
nop
sub
xchg
pop
imul
lret
mov
jl
push
sub
jl
mov
mov
adcb
aas
mov
shrb
and
mov
push
dec
icebp
cwtl
and
pushf
pop
outsl
or
sbb
dec
or
aaa
out
push
pop
in
jnp
lock
ds
push
lea
lcall
pop
dec
shl
jmp
loop
dec
adc
mov
pop
mov
andl
adc
mov
dec
and
jnp
jo
sub
mov
loopne
gs
inc
or
mov
add
movsb
xchg
mov
stos
insb
shrb
mov
jmp
jmp
push
push
or
cmp
pop
push
mov
ret
push
push
pop
lock
inc
xchg
cltd
and
push
ja
out
or
or
xchg
push
jns
aad
out
cmp
outsl
push
ret
or
mov
sbb
dec
int
mov
das
imul
mov
cmp
pusha
adc
add
mov
movb
adc
stos
mov
filds
pop
outsl
mov
call
int3
out
clc
scas
pushf
xor
pop
xor
sti
add
mov
mov
adc
lock
xlat
dec
mov
imul
sahf
add
adc
out
data16
inc
push
sbb
inc
insb
mov
cmpsb
and
jbe
negl
testl
jns
mov
pushf
pop
das
add
lods
mov
or
jbe
mov
sbb
stos
cmp
mov
mov
lret
jno
addb
sbb
jae
jmp
mov
test
adc
rcrl
lret
mov
movsl
nop
aaa
xor
mov
test
and
adc
sub
mov
mov
cli
sbb
jb
mov
xchg
pop
out
jbe
cmp
ja
mov
mov
or
fnsave
loopne
mov
fsubl
repz
mov
ds
dec
mov
lahf
xacquire
xor
add
out
dec
pop
xlat
xchg
pusha
pop
sub
imul
jg
aad
xor
out
cmp
out
data16
push
mov
int
cld
out
test
push
imul
mov
sbb
jnp
in
mov
jne
imul
fimull
popa
mov
xchg
jmp
cmp
push
lods
outsl
loope
mov
repnz
in
inc
jae
cs
pop
in
jmp
int3
cmp
pop
je
es
mov
inc
xor
mov
in
pop
jae
xchg
lods
sub
mov
mov
or
ja
rcrb
pop
inc
push
push
mov
bound
je
push
arpl
xor
jae
pop
jle
push
fdiv
out
in
pusha
cmp
jbe
mov
xor
mov
imul
ss
lahf
out
int
xchg
sbb
pushf
rcll
int
addb
pop
push
dec
das
xchg
je
sti
imul
or
push
or
inc
inc
push
add
sub
fisubs
sbb
dec
inc
mov
fiaddl
aas
ss
inc
lahf
cmpsb
inc
rcrb
cmp
xor
push
push
mov
cltd
pop
mov
pop
push
jl
sub
or
push
enter
sahf
les
insl
out
adc
jmp
push
andl
into
jg
mov
xchg
push
mov
cmp
arpl
lahf
cmpsl
or
xchg
adc
outsb
shrb
subl
in
add
in
dec
adcb
mov
or
mov
jecxz
xchg
add
not
cmp
adc
pop
xchg
jge
or
jno
mov
pop
in
fsubrs
loopne
sbb
scas
ficomps
mov
adc
jne
outsb
xchg
std
aad
iret
negb
loope
sbb
in
aaa
jp
push
xor
fldenv
clc
arpl
out
push
jl
arpl
hlt
std
jle
in
fdiv
mov
mov
jg
sbb
cmp
ds
repnz
arpl
dec
lods
addl
sub
push
xchg
adc
cld
push
xlat
pushf
jle
jle
lds
sub
ffreep
pop
inc
dec
testb
and
fistps
xchg
push
std
movsb
sbb
cmp
adcl
or
out
sub
lea
fnsave
aaa
div
ja
add
ljmp
arpl
or
xor
mov
lret
pop
push
or
xor
or
int3
mov
sub
dec
inc
cmp
dec
stos
mov
cli
pop
call
lcall
repnz
inc
jle
pop
aam
call
lret
imul
mov
fists
add
fadd
mov
shrl
fsubrs
jb
xchg
adc
pop
outsb
or
xor
divb
jo
cmp
xchg
inc
fnsave
popa
sub
adc
scas
movsl
jp
inc
nop
call
jno
out
les
xor
scas
dec
bound
std
mov
sbb
mov
push
sarb
xchg
xchg
jge
std
pop
orl
mov
imul
test
inc
shl
sub
jne
lcall
xchg
movsb
pop
pop
jl
sub
mov
push
add
and
out
in
and
and
add
sar
xchg
into
cmp
inc
insl
and
inc
insb
xor
out
push
adc
dec
mov
rolb
mov
loope
xor
jbe
push
bound
inc
jne
push
sbb
shrl
and
movsb
pop
int3
test
sbb
push
rcrb
pop
xchg
inc
add
sbb
into
or
lret
sub
daa
decb
in
push
or
or
mov
push
inc
stos
out
cmp
push
mov
mov
lcall
andb
jge
pop
sahf
shll
je
mov
gs
orb
lock
xchg
call
sub
mov
sbb
jp
and
sti
bound
push
mov
or
dec
inc
stos
or
loope
loopne
test
jmp
shl
cmpsl
push
or
nop
jns
adc
mov
jle
mov
mov
and
mov
out
xchg
cwtl
fs
lcall
xchg
ljmp
dec
mov
xchg
lods
cmc
fisubs
add
nop
ficoml
xor
xor
fst
fsubrs
jmp
xchg
xor
mov
jl
sub
icebp
in
stc
out
stos
mov
dec
js
lcall
jmp
gs
insl
cmpsb
fnstsw
fiaddl
cld
aad
gs
test
scas
pushf
call
and
mov
push
outsl
pop
sub
xor
xchg
sbb
mov
lahf
fs
and
add
lods
inc
mov
jae
cmp
addb
idivl
dec
fwait
inc
mov
imul
pusha
or
sub
loopne
xchg
xchg
int3
ss
lock
pop
idivb
dec
subl
negb
mov
insb
mov
clc
pop
ret
and
dec
cmpl
or
out
int3
bound
insl
test
jne
fsubrl
repz
add
pop
lods
xchg
jbe
mov
push
fstpt
aaa
lods
fisttps
aam
xchg
addr16
add
int
stc
adc
adc
icebp
or
lret
xor
in
xor
mov
pop
mov
popf
enter
push
pop
mov
sbb
mov
rolb
pop
mov
pop
sbb
cld
inc
push
xchg
out
sahf
inc
test
ret
and
shrb
inc
hlt
xchg
aad
pop
js
bound
mov
ljmp
mov
and
inc
loop
mov
add
pop
int3
stos
dec
inc
dec
xlat
inc
mov
push
push
pmulhw
cmp
pop
or
push
dec
lods
mov
xlat
sbb
stos
nop
out
out
jo
and
outsl
dec
and
xchg
cmp
cmc
sbbl
sbb
mov
cmpsl
push
dec
pop
data16
lock
cmp
push
fwait
cmpsl
pop
cmp
in
loopne
in
aad
xor
or
lea
dec
cmpsl
inc
xchg
in
je
les
aas
mov
add
test
clc
jo
inc
pop
pop
icebp
and
pusha
out
jae
std
push
xlat
xor
add
pop
out
fisttpl
mov
enter
push
xchg
mov
mov
mov
dec
cmp
sub
popf
je
inc
jnp
dec
push
mov
mov
aas
mov
mov
int3
in
jae
cmp
sar
adc
sbb
mov
push
pop
int3
jbe
or
xchg
add
pop
xor
mov
ljmp
into
ss
pop
repnz
fwait
or
add
out
cld
dec
dec
push
or
shr
cmp
inc
incb
push
ret
mov
lods
add
lret
rcrl
in
bound
adc
and
pop
lret
or
xor
jmp
or
push
xchg
mov
insb
and
xchg
xchg
cli
idivl
push
out
mov
xlat
movsb
aaa
nop
scas
adc
sahf
lds
leave
outsb
sti
sub
in
call
sub
subl
pop
cmp
movsb
xchg
mov
pop
pushf
aam
fsqrt
mull
xor
mov
pop
mov
push
fmuls
cld
dec
mov
sub
push
sub
jmp
push
jge
sbb
fst
sbb
inc
push
mov
in
cld
scas
shrl
xchg
xchg
ss
movsb
sbb
xchg
xchg
jb
or
fldl
and
in
xor
mov
aam
jg
out
push
lret
sar
sbb
out
loopne
nop
mov
lret
sub
push
rclb
nop
jmp
or
in
add
add
push
mov
mov
xchg
dec
adc
insl
addr16
ja
popf
cmp
es
rcll
fidivrs
sub
cmp
xchg
sub
test
stc
sbb
dec
jnp
std
and
out
jo
repnz
insl
daa
movb
js
add
pop
sbb
xchg
adc
adcb
xchg
cmc
outsl
divb
cmp
mov
xchg
push
adc
jmp
hlt
lret
sbb
repz
imul
cli
testl
int
pop
in
xlat
inc
shrl
xchg
or
push
pop
sti
out
jl
sub
inc
cli
xor
adc
push
dec
mov
pop
adc
pop
pop
sti
loopne
scas
push
or
cmc
sub
in
js
mov
inc
icebp
push
stos
cwtl
sub
mov
sarl
sub
es
lret
lret
mov
out
mov
push
jo
lock
rcll
leave
or
cmp
cmp
and
nop
popa
lds
hlt
aad
push
mov
in
std
jo
pop
movsb
push
lret
adc
out
outsl
repnz
push
or
lods
sbb
in
out
push
inc
dec
or
mov
mov
ljmp
fnstenv
xchg
fcomi
jbe
sbb
pop
cli
jo
out
lds
clc
or
xchg
cmp
dec
mov
sbb
in
mov
inc
fwait
or
push
imul
insb
mov
cmp
xchg
push
add
je
pop
insb
inc
cld
and
or
mov
mov
jno
test
xchg
sbb
add
enter
cmp
dec
pusha
dec
adc
dec
dec
hlt
mov
popf
ret
lods
ljmp
adc
sbb
mov
mov
sbb
lret
push
xchg
jns
jae
and
cmpsl
fisubs
pop
into
movq
and
adc
dec
movsb
in
imul
mov
jnp
mov
sbbb
jl
ja
fildl
in
and
push
aas
popa
int
sub
jmp
sbb
dec
jno
dec
ret
stos
aas
repnz
xchg
test
leave
rcrb
and
mov
arpl
push
push
mov
out
popa
sub
cmpsl
jns
pop
loop
mov
daa
jmp
in
cmp
mov
into
les
cmp
xor
push
jnp
sarb
lods
push
adc
mov
mov
data16
cmp
aas
fs
xor
add
mov
add
outsl
mov
mov
cli
mov
in
inc
push
leave
fimuls
lret
mov
out
dec
push
pusha
push
push
xchg
pop
sahf
cmp
pop
mov
std
sbb
push
mov
xchg
test
sti
test
dec
fstpl
jbe
sbb
repz
or
push
jle
sbb
xor
jg
outsb
ljmp
sahf
push
adc
or
fstpl
out
mov
aam
sub
inc
movd
cmp
mov
daa
sub
test
jecxz
and
inc
ja
xorb
pop
mov
rcrb
jg
xchg
into
sub
enter
mov
xor
sub
jg
sti
pusha
inc
nop
push
push
jae
jo
aam
sti
ss
shll
push
jae
fsqrt
inc
mov
fldt
sub
ss
inc
std
adc
cwtl
into
sbb
loop
pop
mov
adc
dec
out
xor
pop
push
adcb
add
push
pop
aas
dec
push
das
insl
in
push
movsb
cmp
jmp
push
sub
das
pusha
push
in
ja
addr16
add
mov
pop
in
outsl
out
cmp
dec
cwtl
sub
sbb
les
pushf
repnz
jo
jae
push
cmp
sahf
ret
lret
addr16
and
add
and
loopne
inc
jg
cmp
dec
lahf
mov
jle
fs
jecxz
pushl
push
je
jecxz
fisttpll
mov
lret
repz
repnz
xchg
in
sub
bound
jne
ss
std
cwtl
and
ss
and
mov
pop
xor
in
das
cmp
push
pushf
inc
or
jmp
lret
int3
movsb
lret
xlat
dec
pop
adc
xchg
lds
imul
iret
test
cmpsl
lock
and
inc
xor
lds
es
add
push
das
mov
scas
inc
in
movsb
sbb
icebp
pop
ss
jl
into
sbb
mov
stos
sbb
cmpsl
xlat
cmpsb
ror
fs
xchg
das
mov
rorl
cmpsb
iret
int3
inc
rorb
test
push
push
mov
imulb
sub
adc
test
mov
stos
cmpsb
js
push
or
adc
lods
adc
ret
jmp
ret
jmp
add
out
xor
leave
jge
arpl
cmpsb
lods
pusha
xchg
daa
hlt
jne
addr16
out
add
dec
ds
lods
call
xchg
pop
sub
pop
aad
in
or
adc
loop
inc
cmp
push
je
inc
inc
ja
int
mov
movsb
call
fdivl
out
add
adc
add
jns
sarb
data16
cmp
stos
dec
xchg
stos
adc
test
repz
jbe
mov
push
pop
shll
aam
jb
mov
int3
rcrl
pop
movsb
cld
test
nop
aam
nop
rcl
push
inc
in
jae
mov
jnp
pop
test
enter
adc
xchg
jne
aaa
shlb
dec
int
cmc
sbb
icebp
cmp
and
or
stc
movsl
aam
dec
test
cltd
test
in
pop
int3
loopne
pushf
mov
lret
push
out
idivl
adc
pushl
out
mov
jno
std
inc
test
rcll
gs
shrl
push
xchg
add
xchg
sbb
dec
ret
andb
aad
push
negb
dec
test
sbb
cmp
xor
repz
inc
movsb
mov
or
dec
ljmp
mov
fchs
aam
loope
xorl
push
stos
fwait
pop
fsubl
jo
decl
pop
into
out
out
stc
movsb
enter
jecxz
das
inc
into
cld
cmpl
fsubr
out
mov
xchg
inc
pop
andl
jp
add
test
jle
je
fimuls
mov
pop
and
jae
iret
imul
pop
inc
jg
push
cmp
movsb
data16
cli
ds
and
cltd
dec
imull
cmp
lds
fimull
dec
repnz
add
outsb
out
push
pop
sub
int3
loop
cmp
sub
cli
gs
mov
shlb
fcom
out
dec
stos
sbb
add
pop
hlt
div
loop
mov
xchg
lret
inc
push
out
lret
ljmp
into
add
jle
lods
clc
add
mov
rcrl
pop
cmp
jmp
ret
xor
sbb
add
mov
inc
sti
cmp
mov
add
xchg
xchg
pop
int
dec
jmp
sub
xor
rcrl
dec
jmp
or
arpl
insb
xchg
pop
mov
pop
outsb
dec
inc
xor
xchg
xor
hlt
push
xor
and
sub
mov
repnz
cmovp
xchg
inc
push
mov
test
xchg
out
add
push
pop
movsb
in
add
insl
adc
mov
dec
add
arpl
dec
adc
inc
lds
in
popl
jb
add
and
xorl
mov
divb
or
out
jbe
jg
lods
call
subl
add
insb
pop
adc
mov
lahf
jle
sub
mov
xor
and
push
fwait
jb
dec
fisubl
inc
xchg
mov
shlb
jmp
adc
cltd
test
pushf
subl
xchg
lret
or
adc
rcrb
js
jp
mov
ret
dec
icebp
sbb
lahf
add
pushf
cltd
push
sub
loope
stc
mov
shll
imul
pop
daa
inc
out
repnz
adc
lods
scas
std
into
ret
inc
sbb
or
mov
inc
lods
xor
mov
add
rclb
or
and
cvtps2pd
or
data16
sub
sub
les
or
jmp
sub
sbb
mov
das
filds
outsb
sub
in
clc
rcrl
jne
mov
jb
iret
pop
and
pushf
mull
push
cmp
cli
sbb
inc
repnz
mulb
mov
fsubl
pop
sub
jae
test
repnz
hlt
rolb
popa
push
inc
or
add
add
jne
sbb
pop
jmp
int3
cmp
push
insb
or
pop
sti
insb
test
mov
and
mov
xor
lret
movsb
or
push
jmp
fcmovb
sbb
es
stos
or
enter
stc
testl
cs
call
popf
scas
pop
xchg
fistps
test
adc
mov
cmpsl
popf
dec
dec
push
xchg
sbb
xchg
jns
daa
mov
dec
ljmp
add
in
in
movsb
sarl
push
scas
or
sub
jle
or
dec
iret
popf
in
xor
mov
cld
aad
jl
orl
out
adc
stc
in
adc
dec
pminub
cmp
addb
sbb
mov
inc
repz
mov
mov
lock
and
pushf
lea
inc
mov
hlt
sbb
jns
sbb
mov
xchg
xchg
mov
xorb
mov
fildl
jp
popa
je
xchg
mov
sub
inc
cmp
stc
std
push
jmp
cltd
xchg
mov
mov
push
add
mov
enter
mov
mov
addl
jnp
sub
pop
sbb
and
xchg
call
idiv
xor
jle
cld
pop
in
adc
popf
push
push
mov
mov
mov
lock
scas
sahf
test
bound
aam
pop
in
aad
push
mov
lret
je
push
xchg
aam
dec
dec
subb
cmp
lret
jge
in
xor
int
mov
jl
xchg
popa
adc
mov
in
out
adc
inc
lahf
xchg
cmpsb
mov
sahf
clc
cmp
jno
pop
jge
in
dec
inc
fs
dec
cmp
scas
popa
xor
lds
iret
sbb
inc
xor
cmp
addb
shld
lret
dec
mov
mov
insb
mov
dec
rcl
subb
adc
sbb
cmp
and
lock
jp
and
std
les
sub
push
cmp
push
add
jno
mov
fwait
loop
idivl
dec
cmp
iret
adc
pushf
and
pop
in
pop
xchg
mov
scas
sti
mov
jmp
outsb
or
sub
pop
stos
mov
sub
fdivs
loop
fsts
jb
xchg
loop
sub
adc
pusha
and
mov
enter
lods
jmp
fnsave
enter
test
shrb
fnsave
mov
sbb
and
test
gs
test
add
xchg
ret
cmp
xor
negb
fstpl
movsb
loope
sub
inc
mov
fmulp
std
sahf
xchg
pop
bound
int
jbe
jg
jns
push
jae
shlb
dec
fistl
xchg
pop
xor
push
je
mov
or
repz
pop
mov
sbb
das
dec
sbbb
mov
pop
and
cmpsl
cmp
andl
xchg
inc
or
or
mov
mov
or
jge
sbb
xchg
add
cmp
xchg
fists
out
and
and
mov
inc
jge
popa
xor
xor
std
cs
lret
xlat
nop
adc
pop
mov
je
jl
in
jnp
xlat
adcb
icebp
cmp
lcall
push
and
sbb
mov
push
sub
inc
xchg
or
cmp
mov
or
enter
pop
xchg
lcall
aaa
out
inc
rorb
jbe
cwtl
addr16
jg
jl
leave
xor
inc
push
xor
push
les
sbbb
add
int3
jo
mov
pop
int
xor
mull
sub
dec
popf
mov
fs
mov
add
jle
cmp
outsl
stc
ffree
jne
jle
push
pop
scas
dec
cmp
inc
cmp
mov
fdiv
pop
aas
lods
fidivrs
cmc
cwtl
lahf
fmul
sbb
xor
ret
jge
in
push
fstpt
pusha
sbb
xchg
adc
xor
rcrl
push
sarb
jecxz
rcll
jmp
jae
call
xchg
or
cld
ret
flds
mov
cmpsb
fmuls
push
mov
cmpsl
mov
inc
mov
int
mov
jns
mov
scas
iret
sub
es
jo
inc
push
sbb
cmc
shr
cmp
dec
jns
jb
imul
int3
pop
fists
xchg
push
jbe
mov
xor
cmpsl
or
es
xchg
dec
sub
jae
dec
sbb
call
bound
cwtl
test
out
fwait
js
std
hlt
fisubl
add
aad
fwait
or
fsqrt
mov
bound
sbb
loope
in
fcomps
push
repz
loope
movsl
push
xchg
loopne
mov
pop
rcl
push
pop
mov
xor
and
and
test
out
add
sub
pop
add
xchg
fucom
movsl
sub
push
mov
add
xchg
sbb
fdivl
aas
add
daa
hlt
imul
lock
sub
cwtl
sbb
xor
xchg
mov
lcall
dec
and
and
mov
test
inc
push
dec
les
push
sub
jle
and
mov
fwait
xchg
lahf
jae
je
jle
sub
div
and
call
ss
sub
lret
fucomp
xor
jl
mov
add
pop
cmp
adc
movsb
lret
bound
fcomps
mov
sub
dec
subl
push
je
icebp
sub
xor
notl
xor
aas
rcl
rorb
inc
je
int3
mov
mov
or
roll
sbb
cmp
sahf
cwtl
inc
mov
aas
repnz
xchg
adc
ds
pop
cmp
les
sbb
das
lcall
mov
inc
stc
and
inc
aas
pop
mov
test
xchg
es
addr16
or
jns
cwtl
pushf
movsb
ss
xchg
mov
mov
cltd
adc
sub
fwait
xchg
out
pop
shl
sub
adc
xor
push
out
in
iret
dec
push
adc
cmpsb
xchg
inc
jo
rclb
cltd
add
imul
rcrb
xchg
repnz
outsb
fs
sub
mov
push
js
shlb
inc
cmpsl
push
xchg
adc
mov
in
inc
sar
dec
mov
cmp
or
bound
sbb
shl
push
popa
cld
jg
push
and
ds
push
push
in
addr16
lahf
out
in
xor
movsl
sarb
jge
push
mov
into
jmp
xor
into
out
cmovnp
xchg
test
ds
dec
and
ret
inc
and
mov
jnp
test
nop
jl
jg
dec
insl
sahf
mov
lods
cwtl
xor
adc
pop
mov
mov
xor
pop
pop
ret
sbb
mov
loop
in
lret
mov
sbbb
mov
add
push
in
lods
cli
pop
push
out
jb
or
popf
xor
xor
push
mov
mov
dec
and
jmp
cmp
cmc
xchg
and
or
in
sbbl
in
and
mov
mov
stos
stos
lods
mov
sti
cmc
mov
les
jae
fildl
stos
mov
movsb
mov
push
xchg
mov
bnd
je
inc
inc
inc
mov
mov
cwtl
inc
pop
jnp
stc
ficompl
lods
hlt
ss
or
movb
scas
adc
nop
decl
mov
sti
outsb
in
lcall
loop
pop
aad
xor
cwtl
mov
int3
rolb
scas
shrl
subl
mov
mov
jnp
fidivl
in
gs
xor
adc
lcall
jg
int
mov
fucomi
push
arpl
cmc
add
fnstcw
dec
scas
mov
pushf
push
sub
cmpsl
imul
rcrl
lock
push
cmc
pusha
in
sbb
xchg
inc
push
sub
popf
xchg
pop
insb
mov
adc
aad
out
nop
push
lahf
nop
sbb
incl
jmp
fstps
jb
cmp
test
jg
mov
lea
dec
into
aam
hlt
idivl
aas
push
mov
push
sbb
xchg
into
or
mov
cltd
dec
cmp
popf
xor
loope
scas
cld
dec
pop
push
jb
or
xchg
xchg
pop
sbb
lret
dec
cwtl
mov
cmp
and
pop
out
xor
pop
and
mov
adc
fxch
pop
mov
lods
scas
in
rcrb
dec
and
lods
in
ret
push
mov
cmp
fwait
ret
mov
xchg
ret
out
mov
jne
and
push
add
clc
pop
xchg
mov
lea
inc
cmc
or
mov
test
call
push
jb
cmp
xlat
mov
stos
arpl
cmpsb
cwtl
jmp
aam
in
and
add
inc
xchg
int
push
xchg
xor
add
mov
inc
insl
stos
aaa
in
dec
adc
lds
testb
lock
jne
rol
lret
out
lret
into
sahf
mov
pop
popf
push
cmp
mov
mov
adc
mov
rol
cmpsl
xchg
pop
out
add
lods
jb
lret
pop
out
rcrl
cmp
sbb
sahf
loop
jo
mov
rcrl
pushw
daa
mov
inc
push
sbb
adc
cmp
movsb
cli
lahf
push
mov
cmp
les
clc
xorl
scas
push
and
mov
leave
inc
mov
inc
shl
cmp
in
jb
sarl
add
insb
js
mov
adc
insl
and
dec
fwait
out
dec
adc
mov
xchg
add
add
jle
gs
push
daa
pop
xor
call
in
imul
pop
into
dec
sub
mov
xchg
mov
scas
popa
mov
xchg
cmp
sub
inc
add
test
cmp
imul
std
cmp
sti
sub
mov
lods
xor
bound
add
fwait
dec
loop
mov
fistpl
push
cs
add
cmp
mov
adc
js
sub
cmpsb
mov
cmp
fwait
jg
imull
mov
pop
push
xchg
fmul
in
dec
in
add
aad
push
sbb
dec
decl
dec
cwtl
repnz
and
xor
pop
daa
les
xchg
push
loopne
ret
jo
nop
jo
in
ss
int
adc
outsl
imul
dec
adc
inc
cmp
out
sbb
add
cmp
jmp
into
cmp
mov
mov
xchg
push
stos
jl
nop
cmp
jmp
push
xchg
and
fst
std
pop
mov
repnz
popa
imul
popf
add
pushf
pusha
jnp
add
je
fbstp
pusha
xchg
call
adc
cmpsl
and
stos
shrb
and
pop
add
cmp
mov
xchg
xor
xor
pop
add
and
aaa
xchg
ret
xor
jge
or
mov
call
incb
mov
push
ret
test
mov
popf
int
jp
das
loope
and
outsl
test
sbb
or
int3
insb
mov
xchg
mov
push
push
int
arpl
je
push
stc
hlt
mov
iret
push
stos
test
jb
pop
ljmp
mov
mov
inc
hlt
daa
std
cld
mov
enter
ret
call
or
jae
shl
nop
les
sub
insl
sahf
repz
rcrl
or
dec
xor
and
mov
fdivr
or
sahf
fisubrs
or
test
bound
mov
push
or
xchg
int3
sbb
imul
pop
lock
arpl
push
scas
mov
jns
aas
pusha
jl
aaa
jl
sbb
daa
js
ljmp
xchg
jmp
outsl
xchg
mov
mov
iret
pop
push
enter
clc
dec
or
lcall
and
xor
push
inc
mov
inc
test
in
ds
mov
in
pop
pop
movsl
jmp
sub
mov
and
and
adc
mul
std
sbb
cld
push
lods
cwtl
cmp
das
sahf
repnz
pop
hlt
jge
mov
sbb
xchg
rolb
dec
lds
test
or
cmp
pop
cmpsl
scas
gs
jmp
pop
cld
jmp
mov
mov
cmp
xor
pusha
cmp
xorb
fiaddl
mov
outsl
mov
adc
fnop
je
ret
fisubrs
mov
dec
dec
and
sti
gs
scas
aam
mov
mov
inc
loopne
adc
cmp
rclb
pop
les
xchg
jne
dec
cmpsb
and
sti
jnp
mov
dec
clc
into
or
push
xchg
aas
in
in
add
rol
fstl
in
cmp
jg
addr16
xchg
sub
rolb
xchg
adc
bound
jbe
cmp
xor
xchg
inc
or
add
jmp
fstps
call
stos
or
insb
jnp
dec
adc
inc
testb
cltd
fcoms
push
sbb
fimuls
movsl
data16
lods
daa
sbb
int3
push
mov
xor
jno
add
aaa
push
add
adc
sub
into
divb
nop
mov
rcl
in
adc
push
testb
or
inc
out
jno
xchg
sub
fsts
and
out
jo
pop
sbb
mul
mov
js
push
dec
ret
mov
dec
push
rcr
push
mov
push
jg
sub
push
dec
mov
push
and
pusha
adc
lret
insl
and
ljmp
cmpsl
jbe
add
rcrl
adc
enter
dec
dec
mov
jl
dec
in
xor
and
int
pop
dec
ljmp
jb
cwtl
xor
movsb
mov
insl
das
dec
mov
and
into
jns
pop
cmc
aaa
lcall
sbb
xor
add
mov
movsb
mov
std
sarb
faddl
pop
imul
mov
out
pop
push
movsb
in
mov
movsl
mov
xchg
mov
sbb
jae
cli
pop
push
jp
dec
lahf
mov
mov
mov
enter
pushf
jl
add
push
out
repnz
loope
mov
mov
orl
add
sub
hlt
pusha
ret
mov
in
push
fmul
out
mov
mov
imull
je
inc
dec
out
imul
mov
inc
xorl
dec
fistpl
test
cmp
dec
push
lock
sub
loopnew
test
add
push
mov
cmc
es
ds
repnz
jns,pn
mov
push
int
test
stos
pop
push
mov
adc
mov
out
mov
sbb
cmp
mov
jmp
push
mov
mov
cmp
add
ljmp
xor
cmp
loopne
ret
into
dec
daa
push
push
and
jle
mov
inc
inc
xchg
ss
pusha
pop
push
cwtl
inc
mov
xchg
mov
inc
std
dec
and
xchg
test
dec
push
into
sarb
cmpsl
dec
jne
jb
push
es
sub
pusha
outsb
add
lods
sbbl
pop
sbbl
fmull
xlat
clc
movsb
mov
and
mov
inc
xor
and
dec
inc
loop
mov
jno
les
xchg
mov
cmpsl
lock
sub
test
inc
push
xor
cmp
ja
xor
stos
mov
and
sbb
sbbl
mov
xor
jp
cmpsl
xchg
dec
ds
pop
mov
dec
lret
mov
mov
cwtl
gs
rcll
cmc
inc
push
lock
adcl
cmpsl
dec
hlt
hlt
mov
push
aas
push
repnz
add
jns,pt
out
ja
ljmp
jmp
jl
nop
adc
add
mov
dec
fs
sub
enter
mov
fstpt
lcall
ljmp
inc
repnz
push
rorl
andl
and
addb
inc
in
dec
lcall
rcl
sbb
sbb
addr16
mov
jle
push
dec
push
adc
mov
pop
mov
loop
cwtl
jg
xchg
xchg
xchg
orb
jnp
out
int
dec
aas
adc
xor
cmp
scas
fucomi
jge
or
lods
jp
int3
jb
add
insb
fs
leave
mov
fdivr
lods
adc
int
in
push
cmp
aaa
mov
mov
mov
fdivl
dec
jge
jp
imul
cmp
gs
mov
xchg
dec
xor
adc
in
imul
mov
sbb
sub
or
and
jbe
repz
sub
sub
jmp
clc
bound
jb
sbb
and
mov
mov
sbb
pop
decb
sub
rclb
fbld
add
mov
cmp
and
ret
les
jne
jno
fs
mov
or
push
sbb
mov
cmp
jmp
mov
adc
pop
in
inc
inc
mov
adc
ds
fcmovnu
sbb
mov
popa
pop
xchg
lret
push
scas
daa
adc
or
das
das
xchg
add
mov
xlat
xchg
loopne
mov
sub
outsb
lods
insb
dec
fiadds
push
aam
xchg
je
dec
pop
cld
popf
and
dec
cmp
mov
dec
jp
push
ret
ljmp
fwait
in
jne
ret
shll
or
xchg
popa
fnstenv
test
daa
aaa
jo
ja
pop
nop
cli
mov
jl
fldt
aaa
mov
test
jl
dec
scas
inc
subb
mov
stos
dec
pop
cltd
pop
inc
outsl
in
inc
mov
xchg
push
enter
aas
push
adc
mov
lret
repz
sub
push
cmpl
jns
mov
int3
hlt
nop
sbb
prefetchnta
push
popa
lahf
sbb
shrl
daa
clc
popa
lea
nopl
pop
cmc
jge
aam
adc
test
xchg
sbb
ljmp
pushf
lret
xchg
lcall
aad
lock
cmc
sbb
ja
add
fistpll
sbb
gs
cmovb
jbe
jl
iret
push
adc
inc
rcrl
pushf
push
mov
inc
fwait
or
sub
xchg
sub
fcomps
pop
stc
inc
mov
test
xor
cmpsb
leave
sbb
stos
mov
loop
int
fisubl
sbb
and
mov
lretw
and
fldz
mov
aas
add
xorb
in
aaa
dec
ja
mov
sbb
enter
inc
rorl
mov
outsb
leave
cli
jno
jne
jne
and
gs
fstpl
into
lds
pusha
fucomi
pop
mov
pop
sbb
sbb
pop
int3
push
ficompl
xor
push
and
push
dec
cltd
inc
push
mov
xor
pop
sete
push
jl
pop
mov
dec
jns
les
dec
bound
es
outsb
cmp
aas
push
fwait
xor
lds
into
or
mov
mov
pop
push
lods
jno
movsb
adc
fsubs
jnp
xor
xchg
cmp
in
aad
sub
dec
add
ljmp
push
cmp
rcrb
adc
les
inc
out
sbb
push
sbb
jecxz
or
adc
sub
mov
cmpb
mov
cmp
inc
dec
fwait
push
iret
mov
scas
lahf
inc
adc
push
xor
lods
out
xchg
mov
adc
and
add
or
push
sbb
xlat
jmp
xor
sbb
adc
and
rcrb
or
or
xchg
imul
push
lahf
ss
or
iret
call
add
lds
aas
dec
sbb
ret
add
movsb
in
mov
add
sub
rorw
push
ficoml
ds
out
fldcw
push
lock
stos
and
add
sbb
inc
xchg
into
dec
dec
lds
xchg
shl
sbb
fildl
sahf
mov
sahf
and
add
mov
int3
add
leave
inc
loopne
sbb
mov
push
pop
push
dec
imul
pop
mov
fmul
mov
mov
inc
adc
pop
pushf
mov
and
push
mov
dec
ror
or
mov
insl
in
sbb
lahf
int3
cli
nop
cmp
je
push
stc
call
cli
adc
adc
mov
lret
fisttpll
lods
ss
pop
leave
pop
mov
daa
pop
nop
repnz
pop
cmpsl
dec
push
bound
mov
fdiv
mov
jg
or
in
jge
dec
jmp
dec
movsl
in
push
inc
pop
mov
inc
cmpl
sbb
sbb
div
inc
adc
adc
fs
test
mov
pop
sbb
sub
loopne
mov
mov
hlt
pop
sbb
mov
inc
in
aas
imul
xchg
push
pop
xor
fcomps
fimuls
jno
dec
dec
nop
mov
dec
test
mov
sahf
jle
rorb
lods
pusha
add
push
cmpsb
push
push
test
and
pop
add
imul
rcrl
movsw
jge
andb
xor
adc
xchg
push
mov
jle
nop
cmpsl
out
fstl
push
adc
out
int
inc
xchg
push
sub
ss
das
xchg
sub
push
sbb
jle
movsb
xor
sub
pop
pop
ret
fucomip
lods
dec
movsb
sub
cmp
xchg
pop
mov
popf
pop
mov
cmpsb
or
mov
out
mov
roll
repnz
mov
fs
popf
daa
fs
pusha
jae
pusha
fldl
xchg
xchg
decb
mov
adc
adc
test
stc
mov
jne,pt
pop
fucomi
popf
xchg
test
sub
inc
push
in
or
test
outsb
into
sbb
xchg
cmp
gs
sub
push
cld
aad
sbb
pop
inc
cmp
int
inc
xchg
inc
inc
mov
out
inc
sarl
sarl
push
adc
addr16
add
xor
pop
dec
ss
xlat
lds
adc
out
mov
in
jecxz
test
imul
sbb
stos
add
iret
fnstenv
into
dec
or
adc
iret
add
inc
mov
subb
sbb
push
cwtl
or
movsl
iret
sti
out
fwait
xchg
cmp
or
mov
pop
in
sbb
out
and
data16
pop
pop
adc
lcall
jne
or
adc
pushf
test
div
dec
les
or
adcb
fs
out
fiadds
iret
inc
xchg
xor
push
cmp
inc
test
mov
mov
fiadds
inc
pusha
out
cmp
xor
iret
test
in
data16
loopne
fidivl
fnstcw
adc
insb
shl
loopne
xchg
jnp
xchg
test
enter
push
stc
add
xor
test
ficomps
leave
dec
nop
inc
push
or
jnp
stos
mov
std
jge
pop
dec
xchg
cmpl
sbb
fiadds
adc
mov
lea
test
sti
aaa
outsl
xor
cli
fsts
movsl
and
xchg
push
shl
inc
cmp
cmp
or
shrl
push
inc
insb
test
xchg
iret
popa
rorl
js
fbstp
add
out
dec
dec
testl
inc
cs
push
into
dec
enter
jno
jge
or
or
insb
rcrb
dec
pop
mov
lcall
mov
sbb
addb
xchg
es
bound
push
cmp
mov
ljmp
jae
xor
xchg
insb
adc
ret
aas
pop
mov
pop
outsb
shll
adc
jns
xor
xor
int3
gs
push
mov
call
push
out
jl
sub
inc
sub
xor
xor
pop
xchg
sahf
in
adc
repnz
and
pop
mov
in
out
scas
ja
arpl
repz
sub
mov
cmpsl
cmc
arpl
dec
outsb
cmp
repnz
xor
cmp
mov
xchg
popf
sahf
push
dec
movsl
sbb
jge
push
dec
pop
fcoms
ss
repz
nop
shll
insl
rclb
jp
and
imul
inc
jbe
sub
jns
mov
outsb
inc
adc
out
or
mov
cmp
jo
add
dec
cltd
pop
jge
aas
add
test
std
dec
mov
sub
pop
scas
sub
add
repz
mov
sbb
cmp
dec
adc
cmc
adc
stos
push
xchg
cmp
ljmp
hlt
mov
movsb
cld
mov
xor
lock
cltd
and
pop
pop
out
lahf
sbb
cmp
scas
lds
xor
ret
push
fildl
mov
hlt
leave
lods
sbb
pop
jecxz
xchg
out
negl
orb
adc
mov
cmpsl
inc
inc
test
scas
xchg
shrb
dec
ds
cmp
aaa
xor
xor
sbb
lret
push
fnsave
test
lret
in
or
jp
pop
push
enter
into
pop
fmuls
and
out
jmp
enter
cmp
flds
cld
pop
push
dec
push
mov
add
ljmp
in
fwait
jl
hlt
ja
mov
shrb
pop
mov
dec
jmp
sbb
lods
dec
sbb
jbe
bound
dec
test
icebp
int3
movsb
mov
mov
sbb
das
and
out
lahf
pop
cmp
stos
add
jle
jae
out
jecxz
mov
in
fistpll
fmull
mov
xor
int
or
mov
adc
push
push
push
sub
inc
clc
mov
addr16
and
xor
hlt
test
fcompl
out
mov
test
cmp
lods
cmp
adc
sub
lret
push
fnstenv
test
lret
adc
insb
icebp
mov
fdivrl
test
pop
jbe
cmpsb
dec
push
adc
nop
mov
mov
mov
hlt
sub
pop
fstps
sbb
int
int
cwtl
test
aam
cmp
loop
stos
clc
sbb
cmc
fdivl
nop
cmp
fsub
cmp
loope
ss
push
sub
dec
int3
popf
xchg
inc
out
out
sarl
cmp
fistpll
fcmove
inc
lods
xchg
mov
and
add
mov
sub
mov
cmpsb
lret
mov
dec
stos
cmpsb
lahf
lock
adc
decb
dec
or
add
add
loope
xchg
or
and
mov
insl
lahf
sub
lea
mov
js
adc
mov
pushf
and
ds
cld
shrl
sbb
bound
cmp
into
loope
out
fnstsw
push
mov
jmp
and
pop
cmp
pop
jns
repnz
jp
mov
jmp
loopne
mull
sbb
int
pop
mov
dec
inc
inc
push
lods
xabort
or
xchg
and
lret
inc
mov
stos
mov
std
adc
push
jo
data16
lods
xchg
adc
sbb
adc
adc
xor
into
sub
mov
or
and
hlt
insb
aad
sahf
inc
daa
ljmp
repz
mov
movsl
mov
xchg
inc
testb
push
push
sbb
iret
jbe
lret
ret
and
cmpl
xchg
test
sarl
or
lahf
insl
stos
bound
test
inc
or
out
cmpsl
leave
adc
add
jge
in
sub
repz
mov
jb
push
lea
xor
jl
mov
rorb
inc
cmp
xor
dec
je
push
mov
dec
adc
push
dec
push
push
jmp
jo
fdivr
enter
jmp
stos
adc
out
stc
adc
pop
jle
lahf
sbb
aam
cmp
pop
dec
lcall
mov
mov
jns
xor
pop
or
jno
inc
ret
fwait
mov
sbb
xlat
xchg
aas
mov
xor
aad
sub
dec
mov
push
sti
xor
roll
loopne
fcoml
mov
decl
and
add
fists
jb
cmpsb
cmp
outsb
pop
xor
add
jbe
jg
mov
mov
inc
popf
pop
inc
or
idiv
sub
fs
jne
repz
mov
inc
and
mov
jle
cwtl
mov
or
dec
bound
and
cmp
and
outsl
xchg
jge
sti
push
jge
mov
lods
sub
cmp
mov
pop
out
jp
cwtl
sub
mov
cmp
xchg
sub
mov
dec
sbb
test
ljmp
aam
lods
or
fxch
lcall
in
jne
fisttpll
push
xor
pop
inc
push
mov
jb
xor
and
fsubl
cmp
pop
stos
jno
leave
cmpl
std
out
mov
mov
mov
fmuls
subl
sub
test
xchg
into
push
xor
inc
cli
xchg
shll
insl
cltd
hlt
pop
cmp
sbb
lahf
pop
movl
pop
std
mov
lock
cwtl
fld
jbe
movsb
adc
dec
pop
js
fisttps
aad
cmp
aaa
xchg
xchg
lods
cmp
add
add
popl
dec
mov
subb
mov
in
ljmp
jne
fs
push
pushf
je
pusha
add
icebp
mov
into
lret
jp
mov
addr16
mov
pop
mov
repnz
not
fdivr
mov
sbb
inc
sti
jecxz
xchg
cltd
adc
mov
inc
ljmp
movsl
sub
mov
lcall
lods
stos
lds
imul
rcr
fidivrl
incb
pop
dec
mov
popa
std
aad
stos
aas
mov
sbb
sub
sub
nop
jle
pop
shl
int
jo
cmpsb
sbb
repnz
jg
cmp
mov
enter
cmpsb
inc
cmp
aas
cltd
cmp
xchg
add
mov
sbb
or
or
mov
ret
cmp
jecxz
lock
inc
adc
fdivrl
inc
lcall
js
out
cwtl
pop
in
fsubrs
shrl
pop
xchg
movb
jb
inc
dec
inc
mov
jp
cmp
mov
dec
out
rcl
add
stc
sbb
lods
test
shrb
push
fwait
mov
stos
jo
xor
sbb
xor
cld
mov
jne
popa
push
mov
inc
xchg
sub
insb
jbe
push
mov
jmp
das
rolb
or
xchg
movsl
test
mov
add
push
mov
ljmp
and
rol
lods
je
leave
mov
js
lock
pop
cld
sti
movsl
mov
lea
daa
daa
scas
and
rdtsc
fistps
jnp
sbb
xlat
and
dec
mov
pop
pop
inc
mov
sbb
imul
xor
orb
pop
popf
lcall
mov
and
inc
xchg
pop
iret
add
jmp
pop
fstl
xor
jae
movsl
xchg
lcall
push
aam
bound
jne,pt
loopne
inc
inc
mov
fyl2x
inc
loop
dec
mov
inc
cmp
push
sbb
add
pop
push
mov
and
sub
loop
adc
fstpt
gs
mov
sar
and
pop
sahf
add
mull
arpl
leave
or
iret
push
das
repnz
xchg
or
xor
data16
insl
daa
adc
aad
mov
mov
cmpl
push
lods
xchg
pop
cltd
sarb
mov
pop
xchg
adc
out
push
pop
lcall
arpl
popa
sub
sbb
xor
adc
arpl
out
je
sbb
test
popf
xor
sub
pushf
jecxz
cli
or
movsl
xchg
cmp
dec
inc
lods
mov
push
and
jmp
arpl
stc
into
adc
shlb
movsb
clc
cmp
es
inc
pusha
test
dec
imul
movsl
cmp
or
jb,pn
aas
in
ljmp
es
mov
cmp
in
out
repz
lods
fidivs
std
clc
or
loop
cmpb
xchg
aam
push
jp
xor
push
push
test
xchg
push
popa
aas
mov
stos
pushf
out
ja
pop
repnz
xchg
lret
xlat
mov
out
or
cmp
or
into
fwait
das
scas
fisubrs
daa
test
jp
rep
scas
pop
sub
in
sub
xor
pop
cld
jg
jno
xor
mov
int
mov
adc
cld
pusha
mov
faddl
in
notl
jp
inc
jmp
repz
dec
pop
or
outsb
lods
call
xor
inc
jo
or
out
loopne
outsb
lock
sbb
adc
jne
cmp
jne
loop
lods
pop
xor
imul
ret
mov
xchg
push
arpl
js
dec
mov
ljmp
xchg
cmpsb
lcall
jns
cs
fxch
pop
or
cmp
in
mov
shrb
and
fnstenv
sub
call
jnp
test
pop
mov
lds
stc
lds
into
std
xchg
dec
dec
lcall
xchg
out
mov
inc
fmul
enter
leave
and
ret
stos
mov
adc
repz
sti
ja
fsts
sbb
push
mov
xor
pop
push
inc
or
mov
push
rcr
mov
leave
push
mov
ret
xchg
loope
or
in
roll
inc
cmc
adc
in
ss
lds
mov
xor
repz
push
aas
xchg
call
xor
in
jmp
loopne
and
aaa
push
sub
push
ret
ret
lret
or
sub
jns
inc
mov
push
mov
int3
test
mov
push
mov
lds
jno
clc
int3
fistl
add
cs
pop
pop
out
sbb
outsl
stos
pop
dec
jae
rclb
loope
mov
or
rcll
xlat
cmpb
dec
outsl
icebp
lret
mov
add
add
jp
out
loopne
cmp
mov
or
loop
std
add
adc
jle
repnz
sbb
jno
jbe
push
cld
fisttps
adc
out
outsb
pop
mov
inc
push
add
and
xchg
mov
inc
jl
mov
ds
sbb
xor
pop
push
in
cmp
mov
xor
repz
dec
pop
add
insb
aam
dec
mov
xor
jne
pop
ds
mov
loopne
ss
imull
sbb
and
pop
out
push
inc
out
ds
jae
dec
cmp
jne
popf
mov
insl
mov
push
call
scas
add
out
jmp
sub
out
jl
in
rol
mov
das
test
sarb
sarl
pop
sbb
ret
insb
or
push
std
stc
mov
or
sahf
jp
push
mov
and
stc
in
push
rcll
data16
lahf
jmp
repz
mov
int3
pop
movl
in
cmpsb
lret
dec
adc
jp
aas
nop
jbe
inc
bound
add
neg
ficompl
adc
mov
sbb
jno
test
cltd
or
mov
pop
out
pop
cli
mov
cltd
mov
lcall
jnp
add
add
mov
or
jge
int3
xor
aas
loop
xor
push
xchg
pop
pop
clc
push
popa
add
mov
or
js
jge
fstpt
cmpsb
sti
xor
push
imul
rorb
sbb
push
or
pop
push
mov
imul
sarb
mov
inc
push
add
add
or
lret
xlat
out
push
or
nop
jbe
insl
mov
std
xor
and
cs
out
lahf
xchg
sbb
out
jbe
sub
out
cmp
xor
adc
adc
inc
dec
addb
lcall
dec
iret
cmp
enter
mov
js
outsb
fnsave
outsb
cli
pop
mov
ja
and
fstps
mov
scas
mov
jl
push
subl
adc
dec
jae
insl
cld
call
call
mov
push
mov
xchg
push
in
loopne
push
cwtl
mov
enter
les
push
loope
inc
sbb
jecxz
out
loop
push
out
inc
adc
das
pop
jecxz
icebp
mov
popf
negl
pop
mov
je
jo
test
sub
std
inc
cmp
loop
stc
pop
mov
dec
cmc
fwait
je
lods
in
mov
insl
insb
imul
imul
fisubl
insl
adc
mov
cmp
push
leave
jmp
jo
mov
hlt
mov
fimull
sub
sbb
dec
xlat
mov
dec
xor
cli
mov
cmpsb
inc
and
mov
dec
push
es
fwait
and
leave
insb
xor
sub
fwait
call
scas
or
rolb
fsubrs
and
fadds
and
xchg
xchg
shll
xor
mov
push
adc
lods
jl
clc
jmp
mov
loop
lret
xchg
loopne
sub
dec
lret
pushf
mov
jae
fnstcw
negb
lahf
movsl
adc
jae
xchg
gs
ljmp
push
decl
adc
lds
mov
out
loop
cmc
stos
pop
lahf
mov
aaa
xchg
stos
adc
mov
pop
push
ljmp
xorb
dec
outsl
sub
adc
repnz
dec
call
hlt
sarb
shlb
cmp
pop
or
jb
inc
aam
insb
cmpsl
sahf
insl
mov
mov
inc
fidivl
cld
out
pusha
cmp
jg
pop
inc
adc
aas
sbb
mov
popf
out
cmp
into
lea
add
cmp
inc
pushf
aaa
jae
sub
js
and
cld
xchg
push
mov
sbb
mov
mov
adc
fists
xchg
lods
stos
or
in
rsqrtps
sbb
mov
mov
cwtl
xor
jbe
mov
pop
xor
sbb
loop
mov
movsb
mov
xchg
shl
mov
loope
mov
mov
jge
jp
or
push
stc
mov
int
pop
and
add
sub
lds
data16
out
adc
into
sub
stos
adc
sbb
in
add
pop
ja
and
dec
jb
out
cwtl
das
mov
pop
mov
sub
mov
es
add
sub
and
dec
loop
shlb
popf
icebp
lret
jle
mov
jno
or
cmc
dec
jbe
xor
add
mov
sbb
lock
fists
push
movb
xchg
inc
cmp
in
xor
aad
push
xchg
mov
out
hlt
mov
std
in
test
sbb
nop
stos
push
add
stos
and
mov
mov
jnp
sbbl
push
out
lcall
inc
fdivrs
pop
and
ds
jmp
flds
sub
mov
xor
test
ss
out
sub
inc
jb
sbb
sbb
cmpsl
sti
scas
push
add
or
cmpb
int3
sbb
pop
mov
test
clc
inc
jg
loopne
inc
fldenv
add
xchg
mov
insb
pop
push
sub
iret
or
out
pop
cs
out
dec
cmp
fsts
ss
cmc
or
jecxz
xor
dec
stos
mov
sub
lahf
lahf
sub
lcall
rorb
sahf
and
lods
js
fdivr
out
out
test
sub
scas
pop
ljmp
jge
jle
repnz
or
pop
push
mov
cmpsb
dec
or
ret
sbb
add
cwtl
js
imul
ja
loope
push
stos
xor
or
outsl
pop
insb
scas
or
cmp
mov
mov
xchg
lahf
outsb
aam
inc
pop
sbb
in
into
js
rclb
adc
mov
pop
ret
sub
jbe
push
lahf
or
mov
sbb
xor
test
or
xor
and
fisubrl
mov
inc
dec
or
loopne
mov
outsb
jle
xchg
test
insb
mov
cmpsl
test
or
pop
mov
sub
adc
gs
js
fidivrl
fwait
or
pop
inc
lds
lds
aaa
addr16
push
mov
mov
mov
add
mov
mov
cld
fidivl
push
sbb
rcr
and
mov
das
inc
xchg
sbb
xchg
jmp
fidivrs
mov
js
sti
inc
push
imul
pusha
jae
js
push
jns
mov
ret
mov
and
mov
loop
aas
cmp
bound
ss
test
icebp
gs
filds
pop
add
mov
aad
pop
std
jge
sbb
out
xlat
ficomps
fildll
xorl
hlt
push
pop
bound
sbb
fxtract
push
or
mov
sub
jae
imul
test
subb
inc
sub
iret
mov
ljmp
pop
jge
dec
loopne
incb
xchg
or
icebp
mov
loop
sti
arpl
fisttpll
gs
mov
adc
nop
cmp
addl
ljmp
bswap
mov
pop
xor
fnstenv
add
pop
inc
icebp
mov
and
sub
dec
xchg
test
cmpsb
and
roll
loopne
jl
push
stc
mov
mov
sub
and
repnz
mov
orl
in
sub
and
lcall
repz
mov
mov
pop
cmpsl
es
mov
inc
push
mov
aam
adc
dec
ret
nop
inc
push
xchg
sub
dec
sbb
push
daa
dec
scas
add
or
aam
sbbb
jo
add
mov
nop
dec
mov
adc
lods
dec
mov
sarl
sub
rcr
pop
xchg
mov
insb
div
mov
sub
out
mov
lea
dec
in
xor
or
cld
mov
pop
cmp
adc
outsl
in
pop
mov
xor
lods
xorb
icebp
inc
ds
int3
pop
xor
mov
into
std
xchg
push
xchg
add
push
sbb
outsb
and
int
adc
test
jecxz
adc
push
popa
dec
loopne
push
mov
std
inc
jae
outsb
cmp
push
pop
dec
ret
lods
and
jns
insl
sbbb
adc
sbb
jns
scas
out
mov
mov
and
in
jb
lret
sub
bound
and
out
sti
sarl
arpl
inc
lahf
mov
ret
ljmp
cmp
stos
jb
scas
out
xor
push
pop
ficoml
adc
in
adc
aas
ds
shl
push
jmp
xor
xchg
and
mov
cwtl
dec
inc
mov
cmpsl
sbb
cmp
sbb
push
jbe
sbb
into
dec
xor
shl
cmp
sub
push
rcll
sub
dec
adc
cmp
xchg
xchg
lods
mov
fnsave
cli
xchg
lret
mov
xor
test
aas
imul
lcall
adc
scas
leave
sbb
sti
push
mov
cmpsl
push
mov
rcr
lret
ljmp
xchg
inc
mov
sub
repz
iret
lret
pop
lcall
cmp
movsl
dec
fadds
lretw
or
mov
xor
dec
sub
cmp
je
cmc
aad
push
daa
stc
aad
mov
pop
lahf
adc
add
mov
int3
cmp
sub
das
add
xor
lret
dec
add
sbb
sub
imul
push
sbb
stos
cli
ljmp
pop
push
dec
aad
xchg
xor
jg
dec
dec
jge
and
jge
imul
jnp
jb
and
jae
data16
and
popa
fdivrl
push
xchg
cmpsb
xchg
rclb
sbb
jle
pop
scas
frstor
dec
jb
rcr
ss
xchg
push
pop
jns
je
sbb
mov
mov
add
lcall
sbb
add
dec
aam
enter
and
lret
and
mov
mov
stc
fwait
xor
push
dec
cmc
loope
test
push
pop
outsl
mov
xchg
xor
sub
fiaddl
cmp
jecxz
mov
push
leavew
aas
add
testb
or
stos
dec
xor
xor
sbb
sub
push
dec
sub
mov
and
xorl
or
enter
sub
pop
kmovb
test
mov
pushl
sbb
daa
lcall
xchg
ljmp
pop
cli
icebp
cld
jb
adc
cli
dec
cmp
jae
aas
hlt
xor
and
out
jge
push
and
pop
adc
and
test
inc
aaa
negl
or
jae
imul
xchg
or
pop
or
pop
addr16
nop
and
in
arpl
mov
stos
in
aam
xor
and
xlat
xlat
push
sbb
arpl
rorl
loopne
stc
mov
popa
cwtl
pop
int3
xor
mov
imul
jo
xor
stc
movsb
call
sub
adc
xor
in
nop
jo
xchg
mov
in
hlt
adcb
mov
xchg
or
pop
popf
out
pushf
cs
imul
dec
inc
xchg
orl
in
subb
xchg
push
sbb
sahf
addr16
ja
xchg
in
lock
pop
adc
loop
icebp
push
cmp
mov
mov
or
into
mov
fwait
aam
and
push
xorl
dec
iret
cltd
test
lcall
xchg
je
punpckhdq
cs
outsl
lcall
pop
fdivrl
mov
fs
loope
sbb
inc
jg
push
cmp
xchg
inc
lret
data16
pop
xor
rclb
aas
enter
ljmp
imul
and
sbb
pop
ror
movsb
loope
popf
push
cmp
cmpsb
jno
inc
push
fptan
jae
cmpsl
scas
push
shll
leave
test
fisttpll
mov
mov
inc
dec
jbe
mov
mov
or
loopne
sbb
cmp
xor
mov
lret
inc
add
out
lods
lret
pop
jp
test
jl
adcl
movsb
jmp
sbb
popf
push
pop
out
sub
jno
jle
adc
cmp
cli
pop
sti
xchg
clc
icebp
dec
aaa
mov
xchg
inc
pushf
rolb
dec
nop
imul
mov
pop
dec
push
mov
hlt
push
stc
outsb
sub
mov
mov
repnz
ds
outsb
test
sbb
inc
adc
dec
jae
lods
mov
stc
out
xor
pop
sub
sub
test
pop
push
xchg
pop
fcomip
or
and
insl
dec
iret
cmp
pop
shrb
jno
sbb
in
inc
inc
mov
lret
mov
fincstp
mov
ret
jp
xchg
data16
pop
mov
call
adc
popa
xor
fisttpl
pushf
rcrl
icebp
or
mov
mov
mov
stos
call
mov
mov
xchg
ss
mov
push
imull
mov
cmpsb
int
jae
cmp
pop
lock
mov
push
xchg
xlat
sbb
pop
xchg
sub
add
insb
xchg
push
bound
dec
or
mov
and
adc
jae
mov
aad
jl
add
nop
daa
mov
scas
aad
movsb
dec
arpl
cld
xchg
imul
adc
inc
imul
movsl
es
sub
jl
sti
icebp
add
sbb
daa
sub
xchg
pop
jecxz
leave
xlat
or
jno
ficomps
hlt
pop
mov
je
call
mov
inc
cli
insb
aad
adc
js
sarb
and
adcl
dec
loopne
cmp
xor
mov
mov
lret
cmp
jae
fiaddl
push
and
out
adc
jl
and
leave
cmp
or
ret
pop
inc
jg
inc
dec
dec
jb
scas
push
cmp
inc
dec
pop
repz
dec
cmp
bsf
cmp
fstps
hlt
push
aad
jae
imul
xor
loopne
cmp
cmpb
adc
push
sti
mov
jp
sbb
cmp
movsl
push
decl
jnp
in
push
mov
and
dec
adc
pop
add
gs
or
std
mov
push
out
ss
jmp
aaa
add
pushf
dec
add
jle
das
sbb
fwait
clc
sub
jge
lret
pop
hlt
loop
shrl
sahf
inc
lds
fdivrs
cmp
push
or
shlb
jge
mov
lods
cmc
lea
scas
aam
xchg
mov
cs
inc
xor
fmul
popa
push
bound
pop
lahf
xor
mov
jl
sbb
cmpsb
repz
icebp
dec
fsubrp
push
call
jg
loopne
fwait
out
dec
inc
sub
mov
dec
sbb
stos
sub
xchg
push
xchg
push
adc
nop
sbb
test
mov
out
rcpps
mov
jge
xchg
in
mov
data16
pusha
add
stos
inc
in
cmp
lds
dec
pop
dec
sbb
rclb
jp
popa
leave
or
hlt
cmpsl
aaa
jge
push
inc
sub
in
mov
ss
mov
in
inc
mov
stc
jns
mov
mov
jne
fsts
inc
mov
sbb
push
sub
jb
mov
lahf
shrl
adc
neg
fistpll
adc
sub
push
repnz
jmp
rol
add
lcall
add
pop
pop
add
or
add
gs
jmp
lock
mov
inc
push
popf
xchg
iret
mov
imul
cmp
pop
push
es
shlb
movsb
andl
adc
cmp
cld
test
scas
pop
lods
into
movsb
xchg
pop
sub
sub
stos
or
mov
cmpb
fimull
arpl
jnp
repz
push
xchg
push
in
stc
xor
inc
pop
shlb
dec
mov
push
inc
loope
mov
sub
fstpl
int
stos
dec
mov
test
mov
dec
lcall
adc
add
mov
test
jp
inc
rorb
push
hlt
mov
jmp
and
and
lods
lods
xchg
inc
lcall
inc
subl
scas
and
pop
sub
aaa
jmp
add
pop
shll
fdivrl
sbb
jb
nop
das
or
xchg
xor
icebp
xlat
jge
dec
lcall
mulb
mov
lahf
or
fcmovu
adc
cmpsb
jo
sub
test
dec
sbb
push
cmp
scas
stc
xchg
icebp
adcl
clc
imul
stos
jbe
outsb
sbb
cmpb
shlb
dec
loope
xor
mov
jae
inc
jno
in
add
mov
test
sub
lahf
lret
je
mov
jp
push
xor
scas
dec
lcall
cmp
in
or
int3
pop
mov
xor
shrl
pop
jns
and
dec
fucomip
cmpsb
add
pop
dec
jns
mov
fistpll
mov
and
imul
add
out
inc
pop
sbb
mov
jmp
mov
adc
and
mov
cmp
mov
jo
push
popf
pop
rorl
and
adcl
add
mov
jp
mov
mov
stos
mov
dec
sub
adc
dec
inc
mov
add
fimuls
pop
mov
popl
push
jmp
xchg
push
fsubs
shll
adc
idivl
xor
pop
inc
inc
cmc
popf
mov
mov
shlb
sbb
adc
out
sub
bound
lock
xchg
mov
push
push
test
sarl
dec
pop
cmp
call
cmp
push
jmp
and
popa
mov
sub
xlat
aas
rcll
inc
or
sub
iret
aad
jne
xor
cmc
and
orb
cltd
sub
xchg
xor
jecxz
sub
lret
xor
pop
in
mov
xlat
int3
arpl
push
adc
jmp
sbb
sahf
negb
imul
jo
scas
mov
out
scas
inc
cld
repnz
mov
ljmp
imul
add
add
and
sub
or
add
rcrl
les
push
add
pop
xor
decb
pop
push
std
out
movsb
sahf
aaa
lock
inc
call
aaa
and
fwait
push
mov
push
jle
adc
andb
inc
sub
js
pop
xchg
xor
mov
adc
push
and
xchg
or
subl
push
mov
mov
push
xchg
aaa
push
loopne
shrl
insb
adc
aam
pop
test
dec
mov
fucomp
xchg
add
adc
test
in
push
lahf
sbb
js
xor
push
mov
sub
mov
dec
inc
ret
push
das
loop
or
js
and
sbb
in
test
cmpl
data16
or
popa
mov
vmaxsd
cli
mov
mov
xchg
add
mov
in
loopne
or
call
call
jo
push
aas
imul
fisubrl
mov
dec
dec
jmp
adc
or
je
outsl
add
mov
pop
cs
lcall
and
mov
mov
out
or
addr16
xor
out
cmpb
js
inc
pop
movsl
aaa
xchg
jno
xchg
test
icebp
fsubs
fstl
or
lahf
loope
aam
test
cmp
cmpsb
xchg
or
movsb
and
jl
scas
mov
pop
pop
lods
mov
push
or
inc
lcall
inc
mov
mov
ret
les
xlat
xchg
loopne
dec
cmpsl
adc
popf
mov
bswap
jge
cmpsl
pop
sub
movsb
push
mov
jge
adc
add
outsb
push
into
xchg
imul
or
pop
jmp
mov
inc
fdiv
ds
mov
test
ret
jecxz
arpl
iret
iret
or
sub
or
imul
lret
xchg
xor
stos
dec
mov
xor
je
fldt
les
cmp
mov
pop
lods
repz
in
mov
iret
adc
mov
and
dec
mov
ds
int3
mov
push
dec
rolb
das
ffreep
lds
xchg
daa
or
dec
rolb
pop
cwtl
and
sub
inc
aam
or
cld
push
arpl
loop
pop
xlat
cmp
jp
lret
cltd
cwtl
mov
inc
mov
xor
or
jnp
les
movsl
add
out
jns
push
fwait
mov
fcom
jle
or
jp
inc
mov
aas
sahf
and
sbb
and
dec
cld
mov
fsubl
mov
repnz
inc
pop
pop
imul
jbe
push
popa
sub
jae
push
std
mov
pop
rol
mov
adc
popa
and
jns
scas
nop
push
cmp
xchg
shll
sub
nop
lock
inc
jmp
stos
and
loope
jb
or
push
sahf
es
lods
stos
sub
cli
test
iret
mov
aas
adcb
decl
mov
or
jp
jbe
jg
js
clc
cmp
lret
sti
cmpsb
loopne
cltd
cmp
insl
inc
dec
inc
mov
aaa
push
mov
leave
adc
sub
test
jle
adc
repz
pop
insb
pop
inc
fistpll
sbb
adc
hlt
push
jb
shlb
ret
mov
aad
fstl
imul
js
testl
imul
out
cmp
mov
jae
lods
or
divl
in
jl
add
adc
mov
ret
mov
sahf
inc
fiadds
in
pop
addb
dec
mov
inc
mov
pop
jo,pt
add
loopne
push
in
jb
imull
cmpsb
adc
enter
dec
pop
stc
imul
pop
push
pop
mov
in
push
mov
push
loop
mov
push
shrl
xlat
xchg
xchg
push
rol
dec
sbb
push
mov
fadds
mov
pop
xor
jns
adc
sbbl
rclb
xchg
lcall
ljmp
xor
inc
jne
lea
xchg
sub
and
and
sbb
out
jmp
popf
or
aad
je
addb
in
idiv
mov
pop
xor
loopne
stc
xchg
lahf
into
xor
xor
insl
in
clc
data16
inc
cmp
fdivrl
xchg
xchg
or
jle
out
and
test
test
dec
addr16
push
xchg
push
and
loop
das
ljmp
lret
sbb
xchg
subb
aas
cmp
bound
movd
loop
scas
push
fcmovne
cmp
mov
mov
inc
je
mov
cmpsb
push
xchg
adc
lea
and
and
imul
fnstcw
push
push
call
repnz
sub
cld
mov
fistps
mov
and
mov
fnstcw
or
std
push
mov
das
cmp
push
lods
ss
ja
in
outsb
cmp
cs
and
in
sub
lods
insl
xchg
sbb
push
push
mov
pop
or
jb
iret
mov
sub
add
lods
lea
jnp
cmp
sub
loopne
adc
or
push
cmp
jbe
add
cmp
in
mov
icebp
pop
out
fisubrs
dec
add
cli
mov
pop
addr16
push
jnp
jbe
inc
clc
aaa
mov
ret
jl
xchg
push
adc
mov
out
leave
pusha
dec
mov
hlt
lret
jns
mov
cld
mov
stos
arpl
mov
jl
data16
cld
lret
stos
mov
or
shr
pushf
and
inc
popa
bound
aas
inc
loop
add
insb
ja
add
lret
pop
push
outsb
push
pop
add
sahf
mov
or
and
or
popa
mov
int
js
repnz
xchg
ficoms
pop
add
mov
test
jecxz
xchg
das
push
adc
mov
pop
lahf
sub
push
sub
cmp
shlb
sbb
rolb
sbb
insl
pop
xchg
movb
mov
das
sbb
jno
mov
pop
bound
data16
xchg
adc
fnstsw
icebp
pop
je
div
sbb
imul
popf
outsl
push
repnz
jl
mov
push
push
mov
pop
sarb
andb
xor
out
push
test
adc
sahf
xchg
loopne
pop
mov
insl
inc
mov
cmp
jae
inc
std
push
xor
cli
or
rcll
repnz
cmp
sbb
jne
add
xchg
sbb
adc
mov
mov
mov
or
lahf
add
into
neg
xchg
xchg
adc
pop
mov
xlat
and
sub
out
inc
sti
add
jnp
sbb
cmp
iretw
mov
push
jmp
or
cmpsl
jge
jecxz
xchg
mov
and
outsb
pop
dec
js
jne
xor
push
mov
iret
xchg
fs
sbb
add
jl
mov
addr16
mov
aaa
and
push
xor
or
inc
mov
sub
fsts
aam
dec
repnz
loop
or
js
or
fucomip
cwtl
dec
mov
enter
push
hlt
rolb
adc
mov
bound
xchg
pusha
arpl
test
pop
data16
inc
push
in
aas
lods
mov
mov
jbe
mov
mov
adc
cmpsb
jmp
mov
mov
cmp
sbb
mov
xchg
aas
jecxz
test
xchg
push
cli
jge
lock
or
outsb
cltd
hlt
shll
nop
cmp
outsl
pop
cmp
and
out
fdiv
xor
sub
mov
insb
into
xlat
dec
adc
push
jge
add
push
mov
das
clc
jnp
dec
cmp
movsb
sub
xor
adc
stos
sub
push
fimuls
adcl
lret
cmc
fwait
scas
cmp
bound
mov
sbb
rolb
cld
pushf
inc
adc
imul
test
sbb
mov
fs
pop
hlt
mov
dec
out
icebp
test
test
lret
jmp
adc
mov
inc
rorb
mov
scas
mov
dec
push
ret
cmp
shlb
std
push
fsts
popf
bnd
mov
int
ss
or
adc
aad
popa
popa
shl
xchg
repz
imulb
subb
out
sub
xchg
rcl
inc
cld
push
sub
rcrb
andl
push
andb
lds
out
fcomp
in
loopne
inc
sti
pop
sbb
mov
mov
xchg
cmp
mov
sub
or
lds
mov
cmpsl
cmpsb
inc
mov
xchg
pop
aam
pop
sahf
mov
xor
neg
jg
insl
xchg
in
repnz
outsl
cmpsl
out
cmpsb
pushf
mov
push
mov
mov
or
cwtl
xchg
icebp
mov
int3
jo
int3
inc
lock
fwait
movsb
jnp
push
test
pop
xchg
es
sub
fdiv
addr16
dec
insl
popa
and
js
cmp
pop
cmpsb
sbb
push
mov
xchg
stos
push
not
popa
lahf
dec
gs
aad
icebp
fistpl
cmp
cld
sbb
arpl
push
and
negb
push
outsl
test
jge
bound
inc
dec
shr
mov
hlt
push
jne
mov
test
cld
fimull
cmpsb
add
in
or
sahf
inc
and
inc
pop
rcl
inc
mov
mov
cmp
adc
bswap
cmp
pop
dec
nop
clc
clc
sbb
cmp
rorb
pop
dec
adc
xchg
mov
xchg
daa
notl
std
jle
shrb
fwait
testb
shll
stc
fsts
aaa
xor
repz
js
sti
mov
adcl
xchg
jnp
xchg
mov
test
insl
and
and
mov
ds
and
dec
xchg
cmpl
mov
inc
xchg
dec
jl
cld
jo
ret
sbb
call
lock
mov
ja
insl
jecxz
mov
sbbb
ret
enter
push
sahf
imul
loope
insl
sti
or
es
push
rcrb
jae
mov
nop
ret
clc
fnstcw
loope
cltd
push
xchg
cmp
mov
inc
push
repz
mov
cs
adc
inc
jb
push
jp
js
outsb
pop
fnstsw
or
sahf
or
test
repnz
sub
mov
xchg
insb
pop
popf
int
ret
inc
pop
addb
add
in
fdivl
adc
push
sbb
fsubr
rorb
jp
mov
adc
ja
mov
sub
jne
cmp
jg
lds
ret
sub
cmp
add
loopne
sbb
out
gs
pop
test
cmc
sbb
stos
add
mov
jnp
jge
into
orb
mov
jg
std
repnz
test
jg
cmp
ds
and
and
ret
fs
lea
lahf
ja
cli
loopne
xchg
mov
divl
or
mov
push
jmp
cli
push
push
jg
int3
lahf
sub
sbb
icebp
mov
sti
xchg
ljmp
in
ret
dec
mov
xchg
pusha
sti
data16
movsl
jmp
into
lea
xchg
icebp
mov
rolb
jecxz
mov
cmp
into
testb
fdivrp
daa
push
push
notl
adc
sbbl
add
cld
in
push
sub
enter
rolb
lock
stos
imul
cmp
ret
cmpsl
dec
movsb
or
add
cld
or
push
sub
xor
sub
std
mov
mov
jmp
call
xchg
xchg
jg
ret
ret
cwtl
in
pop
mov
incl
jnp
pop
pop
and
ror
pop
test
pushf
loopne
dec
lret
int3
and
pop
pop
push
outsl
rcrl
push
ret
inc
aaa
fnstcw
shlb
cmp
pop
movsb
aas
xor
dec
inc
je
std
repz
sbb
adc
push
add
sbb
lds
mov
inc
pop
pop
in
mov
push
sub
arpl
or
jnp
subl
jns
icebp
iret
data16
imulb
pop
xchg
jb
sub
xor
rcrb
mov
ud0
sub
jno
mov
jmp
fists
pop
mov
shlb
aad
repz
je
sub
rolb
addb
imul
in
pusha
sbb
push
mov
das
rclb
xchg
pop
xor
rclb
or
xchg
cmp
xchg
pop
inc
xchg
imul
aas
mov
flds
xor
leave
rcrb
arpl
mov
shlb
mov
mov
sahf
add
jecxz
out
or
jmp
cli
and
in
mov
mov
imul
out
push
or
je
xchg
cs
ds
adc
in
jae
cmp
out
xlat
sbb
xor
stos
and
aad
adc
pop
cmp
mov
imul
add
lods
sahf
mov
sub
inc
addl
notb
push
outsl
or
mov
icebp
inc
cltd
push
or
and
mov
or
call
inc
xchg
popf
pop
pop
jp
add
int
popa
and
test
jmp
dec
int
pushf
and
pop
jb
repnz
lret
stos
push
jecxz,pt
mov
outsl
lds
loopne
mov
jle
test
cmpsl
loopne
sub
arpl
sub
push
mov
jns
pop
xor
mov
adc
mov
sub
out
fbld
hlt
mov
fidivrl
pop
sbb
decl
lock
in
push
or
icebp
sub
mov
call
add
fdiv
scas
sbb
in
pop
sbb
sbb
andb
arpl
adc
xchg
lods
bound
in
leave
jo
std
push
add
adc
fucomp
aas
fdivrp
cli
mov
lcall
shlb
cmp
addr16
leave
in
cmp
adc
in
pop
push
sbb
or
mov
jg
sbb
std
nop
mov
mov
adc
lret
push
insb
push
sub
inc
xchg
inc
inc
sarl
mov
push
adc
dec
mov
inc
jb
or
sahf
jmp
lock
inc
cmpsb
sbb
push
dec
xlat
in
cwtl
test
push
iret
insb
fimuls
divb
orb
outsb
add
shll
pop
sub
lods
jl
pusha
xchg
mov
mov
stos
je
add
mov
repnz
pop
inc
repnz
orb
divb
or
xchg
xchg
scas
mov
and
popa
or
shlb
jmp
out
daa
in
mov
lahf
cmp
mov
gs
xor
adc
jecxz
dec
dec
aaa
rcrl
divl
fwait
test
popf
insl
xchg
and
push
aad
sbb
xchg
cmp
movsb
mov
or
loop
pop
out
cld
dec
mov
xor
shll
sbb
loop
or
inc
lods
aam
mov
sbb
rcll
testl
sti
setns
dec
insl
and
add
push
imul
cmp
sub
xchg
addr16
gs
sub
mov
loope
scas
jp
in
jne
movsl
test
ret
dec
icebp
je
jl
mov
sub
les
stos
retw
int
lret
subl
insb
ret
sbb
sarb
les
pop
sub
ja
sbb
dec
adc
fwait
orl
dec
popf
adc
call
inc
sbbl
sbb
sub
adc
or
sbb
lahf
lret
ret
jns
cmp
mov
xlat
xchg
cmp
or
ret
subl
ficompl
popa
mov
test
ja
sahf
add
pop
cmpsb
fsqrt
inc
mov
dec
jmp
xchg
cltd
mov
jp
adc
repz
mov
lea
test
xchg
cmpsb
aam
pop
sbb
adc
test
push
iret
shlb
mov
mov
xchg
inc
pop
jmp
imul
inc
adc
fcoml
mov
adc
dec
ss
repnz
ds
outsl
xchg
or
dec
sti
fst
in
jp
imul
fldcw
test
mov
mov
pop
fsubr
mov
jmp
lock
movsb
xchg
adcb
mov
inc
and
cltd
pop
stos
clc
lahf
sti
addr16
imull
inc
cwtl
push
fmuls
or
test
jae
and
in
add
frstor
xchg
movb
ljmp
mov
inc
fisubrs
jp
leave
pop
aas
fistpl
insl
xorb
in
xchg
jo
lret
data16
mov
jno
fildl
push
jo
mov
loop
sbb
add
or
fstps
add
daa
push
mov
in
jmp
imul
jbe
inc
test
bnd
daa
add
or
inc
test
and
fisttps
sub
movsl
frstor
lods
jb
adc
shlb
hlt
jb
pop
jbe
andl
outsb
xchg
sahf
push
mov
dec
out
xchg
mov
es
jb
cltd
int3
mov
into
jmp
sbb
fcmovu
test
js
mov
insb
pop
jne
cmp
dec
shll
cmpsl
xor
ss
mov
jp
dec
rclb
sbb
push
mov
sub
out
dec
jo
aam
pop
mov
out
or
add
cwtl
mov
dec
ret
movsb
aas
movsb
push
cmp
mov
data16
jo
jnp
test
mov
imul
inc
lock
mov
push
sub
repz
sti
out
loopne
cwtl
jnp
sub
sbb
add
addr16
push
dec
inc
mov
test
xchg
insb
inc
movl
add
shl
stc
insb
test
lcall
inc
aas
andb
repz
mov
mov
inc
push
dec
mov
loopne
inc
sbb
dec
lock
xor
push
xchg
imul
frstor
and
out
xchg
push
fcoml
xchg
ljmp
push
fsubs
imul
jmp
mov
pop
mov
cmp
fdivr
repnz
jo
lds
or
outsl
inc
data16
or
sbbl
adc
pop
mov
in
and
jmp
dec
filds
lds
inc
adc
cli
aad
or
jno
fildll
jno
call
add
pop
and
cmp
add
dec
sbb
and
frstor
loopne
adc
fcoms
cld
jl
xor
mov
repz
mov
lds
in
mov
mov
mov
push
out
mov
mov
inc
sti
pop
xchg
int
lods
mov
jo,pn
pop
push
xchg
xchg
dec
jge
push
xor
outsb
movsl
pop
cmp
divl
std
stos
movsl
dec
stos
mov
xchg
daa
sub
lcall
or
sub
popa
ja
filds
std
and
cmp
cmp
pop
pop
fwait
and
mov
or
inc
xchg
mov
test
imul
mov
xchg
push
mov
push
pop
cs
mov
lahf
js
fidivs
outsb
movq
inc
jecxz
pop
xor
or
cmpl
in
mov
in
mov
arpl
dec
push
int
and
inc
lock
out
jns
subb
shl
or
sbb
xchg
jns
mov
pop
nop
jmp
bound
xchg
ret
and
cmp
mov
orl
mov
sub
xor
xchg
sub
pop
ljmp
mov
or
pop
pop
shrb
pop
pusha
adc
or
inc
cltd
hlt
mov
lds
or
or
jecxz
pusha
inc
sbb
hlt
sub
mov
mov
xchg
in
icebp
stos
add
jne
mov
movsl
push
mov
pop
nop
mov
or
fbstp
xchg
popa
or
xchg
push
jae
sbb
aad
pop
call
push
xchg
xchg
xchg
adc
add
dec
icebp
lret
jns
icebp
iret
add
addr16
into
xlat
xchg
jmp
push
lret
je
js
or
lods
js
aaa
jecxz
sbb
cmp
test
mov
jb
pushf
les
cmp
xor
mov
sbb
fmull
orl
repnz
sub
cmc
pop
das
jb
mov
and
mov
xor
pop
fidivl
js
leave
pusha
cmpb
outsb
add
xchg
addr16
shll
add
cmp
rcll
xchg
sub
sahf
push
test
pushf
jle
repz
pop
pop
mov
in
es
loope
das
loopne
loopne
mov
sbb
hlt
test
cli
in
xchg
aam
enter
popa
repz
repz
jb
aaa
xchg
xchg
xchg
xlat
and
outsl
xchg
fidivl
jmp
sti
cmp
outsb
jo
cwtl
test
subl
or
mov
xchg
popa
sbb
and
cmpb
mov
jbe
dec
jno
out
adc
int3
aam
mov
pop
std
mov
lcall
pop
mov
scas
dec
jl
movsl
and
inc
dec
lock
fwait
dec
loope
pop
fcmovnbe
addb
cld
jnp
jbe
fwait
and
add
push
sub
fs
mov
mov
stos
mov
adc
xchg
xchg
icebp
jae
mov
cmp
popf
loopne
adc
and
mov
sbb
jae
jmp
lea
leave
rclb
fsubrs
mov
push
mov
inc
int3
repnz
xchg
dec
scas
lock
push
mov
es
jne
add
fstl
jmp
inc
es
test
mov
cmp
push
in
stc
or
push
sub
lret
aam
mov
dec
addr16
mov
sarl
add
and
adc
jne
int
out
pop
iret
adc
mov
or
cmp
out
cmpsb
cli
call
jmp
lcall
jae
pop
xor
jne
data16
xor
daa
cltd
es
in
mov
pop
jb
lock
mov
out
mov
push
fisttpl
xchg
cmp
sub
mov
jae
sahf
jmp
cmp
pop
add
push
sbb
push
clc
push
sti
or
sbb
inc
lret
sbb
test
int3
cli
mov
aad
jle
ret
and
cmpsl
jno,pt
push
pop
push
aaa
lahf
stos
inc
ret
js
and
pop
jmp
fcoml
inc
int
mov
or
cmp
sbb
sti
addr16
daa
or
dec
hlt
in
and
and
clc
mov
insb
arpl
jae
andl
pusha
rcrl
movb
push
mov
mov
arpl
jo
mov
insl
test
mov
jge
lds
aas
mov
lods
enter
fdivs
aam
add
out
adc
dec
ret
fdivrl
push
lock
and
icebp
mov
mov
add
arpl
xchg
insl
fldenv
rcrl
loopne
xor
popf
cli
add
dec
int
push
testb
push
adc
divb
icebp
mov
xchg
mov
pop
push
jmp
xchg
insl
mov
push
les
or
bound
cmp
cmp
cwtl
xchg
mov
pop
sarb
dec
sub
aad
inc
ficomps
fmull
ret
adc
sub
popa
xor
mov
mov
xor
leave
clc
lea
fisttpl
rcrb
mov
fsubr
rorl
dec
arpl
mov
and
dec
fistps
mov
cli
cmovle
and
out
xor
sub
push
jo
cmp
mov
jno
dec
pop
push
outsl
add
xlat
mov
outsl
mov
mov
mov
add
xor
leave
movl
addr16
jecxz
jle
or
mov
pop
insl
orb
scas
jmp
mov
inc
inc
xor
ret
adcl
jecxz
sbb
add
push
pop
mov
imul
sti
pop
inc
sahf
xor
jge
mov
sti
jns
mov
jb
lock
aad
dec
mov
jp
hlt
popf
gs
pop
lds
sbb
xchg
aam
add
add
cmpb
mov
dec
mov
stos
or
enter
scas
std
push
mov
jl
mov
jecxz
or
pusha
push
in
mov
jl
push
addr16
xchg
xchg
mov
pushf
cmp
xchg
jne
and
dec
push
test
sbb
inc
adc
sub
xor
es
mov
in
push
xor
outsl
cmpsb
les
int3
jge
repnz
pop
lods
mov
xchg
imul
jns
xchg
adc
aas
jae
push
pop
add
scas
inc
add
sub
mov
lods
daa
xor
xor
cmp
in
mov
jmp
imul
mov
pop
outsb
add
and
ror
roll
jge
lds
rcrb
pop
sbb
pop
cs
loopne
loope
aas
enterw
shrb
ret
jp
fidivrl
mov
lods
push
push
sub
sub
mov
sub
dec
in
shl
loop
scas
das
dec
mov
jle
jo
cltd
mov
in
cltd
mov
inc
pop
sub
add
in
scas
adc
lret
aad
std
jg
js
in
insb
leave
push
xchg
inc
xor
scas
cli
xor
sub
and
mov
sub
add
mov
xor
jno
sub
je
mov
mov
xor
inc
push
and
inc
enter
jle
fiadds
test
push
dec
fldlg2
ret
lds
pop
lret
int
mov
xchg
mov
insl
mov
in
dec
and
int3
mov
jl
mov
xchg
push
pop
adc
aas
loop
repz
mov
mov
test
js
aas
insb
mov
aaa
and
mov
into
cmpsl
xor
enter
mov
cmpb
pop
mov
add
inc
nop
aad
test
xchg
fldl
repz
in
mov
add
loopne
mov
jl
pop
idivb
and
sub
xchg
in
push
push
int3
push
pop
jg
orl
xor
sti
pop
inc
mov
push
int
stos
xchg
mov
pop
out
add
xlat
mov
push
sti
jg
mov
xchg
adc
push
pushf
and
es
add
inc
ss
insl
lea
mov
jno
push
les
dec
xchg
out
adc
popf
sub
repnz
jns
add
in
mov
enter
cmc
clc
iret
xor
xor
inc
jb
cmp
imul
das
jo
addr16
sub
jg
sub
add
shll
cmpb
mov
ret
ss
inc
or
testl
mov
in
mov
jb
addr16
imul
add
xchg
into
jl
sbb
push
hlt
xchg
mov
inc
in
push
adc
xchg
into
arpl
push
scas
cmpsb
mov
dec
and
outsb
mov
mov
ja
mov
mov
nop
mov
inc
test
mov
cwtl
cmp
lret
and
aaa
inc
loopne
movsb
loopne
or
lods
sahf
arpl
popf
dec
push
jle
leave
hlt
leave
mov
xchg
mov
into
outsb
pusha
jne
push
sub
xor
ret
mull
mov
add
dec
rcl
add
cwtl
popl
xchg
sbb
add
xchg
scas
nop
mov
push
repz
rcrl
xor
into
loope
mov
stos
xchg
nop
scas
mov
insb
push
imul
or
jbe
adc
in
addl
adc
mov
enter
mov
lret
arpl
push
in
movsl
aas
inc
mov
sti
adc
sub
dec
in
hlt
test
sub
jg
dec
test
in
out
or
fnstsw
nop
xlat
mov
pop
es
out
and
xchg
sbb
cmp
ror
ret
repnz
ret
scas
mov
movsl
shlb
push
popa
xchg
int3
push
je
mov
stos
dec
fwait
ljmp
add
jg
push
cmpsl
and
push
scas
jne
xorb
repnz
cld
ljmp
call
sbb
das
int
add
adc
fcmovbe
bound
imul
arpl
jb
int3
cld
inc
mov
push
repnz
and
sbb
xlat
pop
cmp
lahf
in
sbb
shl
sbb
popf
add
ret
mov
lret
xorl
mov
sarb
mov
xchg
sbb
ljmp
fsubl
out
lds
mov
out
int3
lock
dec
cltd
xor
aam
jae
jmp
xlat
insb
pop
aaa
push
push
les
jae
mov
xchg
xor
mov
hlt
jne
cmc
add
dec
loop
sub
jae
fcompl
aas
jle
push
in
in
fistps
jmp
sbb
js
enter
xchg
push
cmp
sbb
cwtl
mov
fistpl
lock
arpl
addb
mov
cmpsb
loopne
mov
in
mov
into
enter
sbb
dec
insb
aad
data16
call
inc
cmpsb
out
enter
loope
dec
mov
aad
xor
out
fldcw
mov
int
push
aam
cmpsb
imul
add
push
fiaddl
cmp
xchg
adc
or
cmp
inc
imul
loope
idivb
icebp
mov
jp
lret
js
pop
in
dec
outsl
jmp
je
fwait
aam
into
add
aam
mov
mov
sbbl
enter
xchg
leave
pop
push
xchg
out
adc
es
nop
add
jge
dec
xchg
gs
pop
icebp
mov
cmp
push
adc
inc
in
les
mov
out
pop
xor
inc
push
data16
push
gs
pop
out
pushf
pop
pop
inc
mov
xor
xchg
mov
sbb
rorl
jle
dec
mov
in
test
xor
les
ret
inc
jae
add
push
xchg
les
inc
sub
jg
adc
mov
daa
push
sbb
inc
scas
test
lret
cmc
sbb
lds
pop
adc
mov
hlt
mov
inc
pushf
xor
notb
mov
je
mov
inc
xchg
fsubl
enter
int
mov
aaa
or
jae
aaa
ret
repz
jne
mov
mov
mov
mov
mov
sarb
pop
add
sub
or
mov
loop
or
cs
add
movsb
mull
repnz
xlat
xorl
aad
xchg
adc
sbb
in
shlb
push
mov
sti
adc
and
or
inc
sbb
dec
jmp
in
and
out
push
push
and
mov
enter
fwait
das
pop
jl
and
loop
and
aad
aad
adc
loopne
int3
fnstsw
push
lret
xchg
mov
cli
sbb
or
push
ret
lea
ds
or
out
push
fcmovne
repz
ret
jle
ja
inc
fs
lea
mov
imul
cmp
insb
fisttpl
adc
xchg
adc
stos
mov
inc
sbb
enter
add
mov
ret
sbb
fldt
sbb
fucomi
fstps
or
arpl
out
imul
stos
push
out
cmc
push
push
jge
lods
push
mov
and
insb
nop
fcoml
sbb
xlat
add
popa
pop
out
cmpsb
xlat
adc
mov
in
xchg
in
sub
push
cmp
in
dec
cmp
cmc
lock
pop
int3
fbstp
mov
sub
imulb
imul
inc
push
xchg
sbb
jg
mov
into
lea
test
shr
and
jmp
pop
xchg
decb
rcrl
bound
les
mov
fs
inc
push
ds
pushf
lret
notb
outsl
push
jecxz
cmp
pop
and
jmp
rolb
or
aas
arpl
add
sahf
and
ds
lods
cmp
test
dec
mov
add
idivl
mov
and
ret
pop
and
mov
xchg
sub
adc
and
dec
andb
mov
pop
outsb
mov
jae
dec
and
movb
and
int
or
xor
rcrl
movsl
dec
insl
aam
xchg
insl
iret
movsb
lds
mov
xchg
dec
mov
lods
enter
pushf
and
push
cwtl
data16
cs
daa
fisubrs
push
push
pop
inc
mov
mov
bound
int3
dec
shrl
push
mov
and
add
iret
xor
mov
xchg
mov
adc
loopne
test
jge
mov
pop
lock
sarl
test
lret
jcxz
jo
aaa
incl
test
mov
mov
movsl
push
fs
xchg
and
call
xor
mov
mov
lahf
cld
fadd
and
dec
push
lock
adc
pop
inc
cmpsb
mov
sub
sahf
iret
jecxz
mov
jb
shlb
and
mov
xor
lds
leave
dec
repnz
jle
sbb
inc
sbb
aas
dec
in
fdivs
xorl
jge
jp
inc
ljmp
shlb
fistps
push
pusha
imul
orb
and
ret
adc
jp
ret
test
aas
jle
loop
in
repnz
jecxz
mov
add
lahf
xchg
inc
jns
pop
xor
out
fxch
mov
mov
pop
rol
ss
inc
or
aas
sbb
jmp
leave
dec
shll
adc
cmpsl
cltd
cltd
xchg
sbb
dec
cmpsl
loop
scas
hlt
dec
and
mov
scas
scas
pop
xchg
fsubrl
bsf
dec
inc
inc
cmp
or
mov
insl
fsubrl
or
sub
cmp
sbb
aaa
pop
lea
addr16
int
cmp
or
outsl
cmpsl
xorb
xor
inc
or
jne
mov
xchg
hlt
lods
mov
add
or
mov
pop
fcomp
mov
dec
repz
cli
shr
sahf
ss
mov
lods
and
inc
test
int
or
xchg
sahf
sahf
sbb
sub
mov
xor
sub
imul
lret
cmp
ljmp
data16
pop
push
call
in
pop
lret
pop
cmc
push
lods
sti
cmpsl
sti
mov
mov
inc
imul
jno
push
pushf
jbe
pushl
mov
lret
mov
in
inc
lock
inc
inc
dec
mov
insl
mov
cmp
call
cmpsl
cmp
sub
dec
mov
das
dec
bound
hlt
jns
lcall
push
pop
in
psllq
mov
push
add
fsubr
out
call
or
mov
jae
in
pop
pop
sbb
pusha
pop
sbb
addr16
stc
es
dec
addb
jg
cltd
pop
xor
in
mov
call
loop
dec
pop
lods
xor
std
push
dec
adc
icebp
stos
push
sub
mov
or
fcmovnbe
sub
mov
mov
xor
out
jle
xchg
mov
js
into
mov
adc
fldt
dec
negl
push
stc
movsl
or
jl
int
or
ficoml
test
pop
mov
cld
hlt
fadds
mov
js
pop
dec
cmp
mov
fstpt
push
shrl
inc
pusha
es
push
pop
mov
adc
enter
dec
pop
les
xor
jl
mov
cltd
jae
js
and
inc
inc
ret
lahf
in
add
leave
in
aam
push
sub
xor
jb
mov
inc
or
mov
fcompl
pop
cltd
in
dec
addr16
lret
pop
cmc
add
hlt
ret
xchg
dec
jnp
outsb
das
iret
xchg
inc
imul
pop
push
aas
jno
cmp
loopne
mov
fsubl
dec
nop
pop
jmp
outsl
stc
mov
jb
xor
pop
dec
xorl
mov
cmpsb
cld
adcl
lea
and
and
leave
test
in
inc
out
xchg
mov
lods
pop
cltd
subl
sbb
out
jp
divps
push
pop
int
repz
or
insb
cmp
pop
divl
pushl
jnp
scas
int3
ja
addr16
inc
xor
cld
mov
push
dec
mov
mov
sub
xor
jmp
rorb
cs
xor
lock
xchg
sahf
mov
push
add
xor
stos
dec
addr16
ret
dec
pop
sbb
mov
mov
jecxz
push
test
out
sbb
pop
xchg
out
loop
xchg
and
bound
jg
xchg
sbb
pop
sti
lcall
xor
cld
xchg
fadds
sbb
cmp
std
and
mov
cmpsl
mov
in
arpl
fisubs
ud1
xchg
lods
in
mov
mov
ret
mov
stc
insl
dec
xchg
cltd
es
test
aaa
or
inc
mov
mov
nop
rcll
and
stos
fsubrp
cmpsl
jbe
mov
xor
xchg
outsb
sub
mov
rcrb
test
inc
cmp
bound
push
inc
pop
test
adc
pop
test
test
ss
push
ds
fildll
notl
ljmp
pop
pop
sub
insb
popa
add
jo
negb
popf
mov
pushf
mov
lahf
in
fs
imul
aam
push
lahf
rcl
aam
sarl
ret
idivl
push
call
js
cmp
clc
int3
xor
and
add
testl
add
sub
movl
mov
jmp
push
ret
pop
push
das
repz
mov
jbe
xchg
out
sub
cmp
ja
data16
or
push
test
mov
test
lea
mov
ljmp
out
mov
adc
test
ret
pop
mov
inc
addr16
xor
int3
inc
mov
loope
fnstcw
xor
and
lock
jle
xchg
xor
ja
or
xor
push
outsb
jb
sub
lea
inc
pop
insl
cwtl
lahf
inc
lret
push
fwait
vshufpd
push
dec
inc
sbb
jle
or
and
mov
xchg
xor
popa
cmp
xor
sbb
inc
cmp
mov
or
sarl
lds
int
and
outsl
push
jnp
add
lret
cmp
xchg
sbb
pop
dec
test
push
mov
aas
mull
jbe
call
mov
in
jno
sahf
lds
lcall
lds
iret
sub
fmul
push
push
push
frstor
in
rcrb
outsl
push
mov
outsb
shll
xor
mov
inc
arpl
jnp
mov
fucomi
cs
sub
addr16
push
insl
lcall
mov
subl
adc
insb
pop
dec
push
insb
inc
inc
mov
pop
pop
ja
dec
inc
in
hlt
sarb
cs
sub
pop
pop
mov
stc
push
lds
xchg
add
push
cmpsl
mov
cmpsb
in
dec
mov
inc
test
or
push
push
cmp
call
js
and
or
pusha
jno
inc
mov
lods
fwait
jge
sbb
addl
mov
push
inc
adc
add
fildl
loop
and
loop
mov
je
pusha
cmp
hlt
mov
sub
xchg
int3
aas
dec
in
push
pop
std
insb
sbb
push
push
lret
cwtl
pop
add
inc
jg
mov
data16
cmc
push
jg
cmpsb
sbb
outsb
scas
mov
iret
stc
cmc
in
andb
rorb
sar
lret
push
outsl
push
dec
xchg
rcll
jmp
or
or
bound
xchg
inc
je
jno
or
xor
inc
je
sbb
pop
in
jle
ljmp
push
repz
sub
jns
jge
das
mov
mov
xchg
xchg
int
or
mov
ret
add
pusha
pop
lds
int3
xor
mov
pop
mov
xchg
ret
push
sarl
xor
test
addr16
mov
ficomps
push
cmp
cltd
mov
lcall
sahf
sti
test
inc
pusha
shrl
pop
insl
jg
cmp
add
sub
inc
mov
lods
pop
jl
pop
daa
cltd
test
mov
outsl
sti
fdivrl
pop
push
je
push
daa
ficoms
add
fsub
call
fwait
adc
inc
mov
nop
dec
cld
sub
js
cld
testb
push
test
ja
fwait
cmp
or
lcall
xor
jl
jmp
stos
rcrl
aaa
mov
test
mov
or
xor
jne
push
ret
mov
ljmp
leave
lds
jl
test
sub
xchg
xchg
cmp
scas
ljmp
push
adc
clc
jmp
push
mov
inc
pop
jo
and
add
adc
repnz
int3
adc
lret
sbb
mov
pop
mov
jae
das
xchg
fcomps
out
dec
nop
int
sti
push
movsl
jp
repz
xor
fxch
call
fwait
out
aam
add
dec
sbb
jbe
scas
adc
mov
leave
mov
inc
daa
in
cmc
xchg
push
testl
ret
xor
xchg
std
loopne
xchg
in
inc
aad
push
scas
cmp
ljmp
test
jb
shll
push
aad
loopne
imul
out
adc
lret
jg
ficoms
jmp
cltd
mov
jae
inc
cmpsb
inc
pop
loope
data16
mov
and
add
pop
push
lret
sub
sub
mov
repz
push
popf
mov
lahf
sub
pop
jg
inc
es
jle
mov
xchg
pop
jae
stc
scas
mov
pop
pop
xchg
cmp
mov
nop
push
cmp
dec
cmpl
cmp
fcmove
sub
xchg
or
mov
xchg
adc
push
mov
mov
jno,pn
out
pop
xchg
jne
dec
mov
ffree
lahf
repz
add
mov
or
out
not
into
out
clc
into
or
in
jmp
push
add
pop
add
pop
repnz
inc
xchg
int
adc
jne
rcrb
idivb
mov
nop
inc
mov
cmpsl
push
mov
mov
iret
push
add
mov
and
mov
adc
insb
jecxz
pslld
push
jno
repnz
cmp
icebp
rcll
fwait
inc
sbb
cmp
push
push
push
cli
mov
and
xchg
add
or
or
push
cmpsb
mov
inc
test
mov
cli
xchg
push
hlt
repnz
out
leave
rcll
scas
lds
adc
jge
push
scas
jmp
adc
add
xor
or
data16
sbb
faddl
jbe
xchg
mov
iret
aad
inc
sbb
inc
icebp
aam
sub
iret
sub
push
in
cmp
mov
jo
sahf
jl
push
jl
mov
fs
fwait
cmp
cmp
test
push
lock
mov
or
xchg
in
andb
mov
pop
jb
and
push
sbbl
sub
or
or
enter
lods
jnp
lods
xor
shll
lock
je
scas
jo
insl
loope
and
outsb
cvtps2pd
cmpsb
inc
sbb
xorb
aaa
ss
and
test
inc
xchg
xor
in
xchg
shl
mov
in
rcl
pop
stos
out
lret
sahf
cmpsb
les
mov
push
sub
xchg
mov
imul
pusha
cmpsb
nop
dec
dec
iret
je
or
insb
adc
fistps
lcall
insl
xchg
shlb
mov
pop
test
or
jecxz
stos
cld
cmp
xor
les
flds
push
dec
push
dec
xchg
fisttps
lcall
mov
fnstcw
in
jo
mov
push
out
pushf
mov
lds
push
fwait
nop
mov
fidivrs
ljmp
popa
mov
or
and
mov
imul
mov
mov
push
jne
insb
mov
mov
repnz
in
cli
out
and
inc
test
arpl
jnp
mov
xor
jl
fwait
cmp
mov
jg
cld
push
push
bound
pop
mov
notl
push
or
or
xlat
mov
inc
xor
out
stc
dec
dec
popf
lds
cmp
jl
movsb
nop
orl
outsb
pop
push
mov
nop
stos
lcall
ffree
adc
addr16
daa
cs
mov
lods
ja
jp
sbbb
or
pop
pop
mov
sbb
push
mov
rcr
fld
loope
and
pop
sub
orb
leave
hlt
inc
cld
pop
lods
dec
sbb
pushl
popa
push
inc
dec
push
notl
mov
mov
push
leave
push
sbb
cld
gs
orb
cmp
popf
hlt
xchg
iret
jo
add
jl
aam
sub
jecxz
jnp
icebp
sbb
or
xchg
xchg
mov
mov
sbb
imul
xchg
sbb
adc
mov
fstpt
imul
pop
or
pop
aaa
sbb
mov
stos
dec
stos
cmp
or
inc
outsl
mov
rorl
outsl
stc
aas
ss
into
cltd
adc
in
xor
mov
pop
mov
vshufps
inc
mov
xor
adc
lcall
dec
mov
es
inc
fcmovne
fwait
xchg
mov
pop
push
jle
out
fisubl
mov
enter
jmp
sub
sub
scas
mov
lds
pusha
inc
mov
out
dec
in
push
mov
xchg
cmp
test
mov
test
add
out
data16
mov
cmpl
and
hlt
in
shll
add
jmp
les
sti
mov
pop
inc
adc
mov
aam
cmp
clc
jnp
cmp
and
test
mov
or
xor
mov
mov
je
aaa
or
adc
pop
adc
jl
sbb
jo
out
lock
in
add
mov
sbb
mov
push
stc
push
push
xlat
xchg
cmp
repz
inc
int
dec
mov
fdivrl
xchg
xchg
jbe
sbb
mov
mov
imul
and
mov
xchg
push
push
and
jns
outsl
inc
nopl
sub
fisttpll
ja
jno
leave
sbb
ror
in
cs
js
cmp
js,pn
fadds
mov
pop
xor
adc
push
aas
dec
cmp
and
in
hlt
cmp
cmpsb
out
xchg
adc
push
fadd
leave
aas
xchg
push
andb
mov
aam
push
popa
lock
and
popf
mov
movsl
mov
jmp
std
loope
sbb
scas
pusha
or
jae
not
mov
pop
push
dec
push
outsb
fistl
jbe
ret
hlt
out
loop
add
ret
xor
push
movl
insl
pop
cmp
xor
push
pop
mov
cmp
aaa
stc
jl
outsb
xchg
cmpsl
ljmp
movsb
mov
jmp
cmpsb
xchg
or
mov
or
loopne
cmp
xchg
xchg
faddl
and
and
dec
push
adc
xor
pushl
xor
or
push
loope
test
push
in
sub
push
fwait
je
popa
pop
inc
add
sbb
lret
push
in
mov
nop
fwait
mov
loope
mov
lds
fcmove
cmp
dec
lock
sub
push
add
popa
in
push
mov
int3
lcall
leave
lret
push
fnstsw
ds
or
and
movsb
sti
cmpb
add
in
adc
ss
ljmp
cpuid
add
ret
sarb
push
mov
push
test
loopne
insl
fwait
lock
sbb
ljmp
mov
sub
push
push
pop
ret
dec
hlt
and
sti
jg
insb
xchg
lea
add
fucomi
push
mov
popa
lret
js
sarb
in
adc
mov
and
adc
cwtl
jae
sahf
push
test
outsl
adc
fwait
cmc
loop
je
nop
jp
scas
and
out
rorb
mov
and
fisubrl
fstpl
or
popf
je
fcompl
cltd
fists
dec
lret
inc
out
or
inc
inc
out
mov
sbb
push
pusha
clc
in
sahf
xchg
dec
mov
mov
cmp
and
mov
mov
es
int3
lret
movsb
stc
inc
dec
cwtl
xchg
mov
cmp
jae
inc
les
mov
sbb
jno
sahf
or
and
dec
jbe
mov
int3
and
mov
sbb
addb
push
cmp
xchg
jbe
and
lods
mov
fs
push
lret
rcrl
imul
faddl
addr16
inc
push
adc
dec
add
in
mov
and
mov
jo
ja
push
jmp
int
push
add
pop
fst
shrd
es
xchg
pop
and
push
into
pop
xchg
jb
fstps
lret
push
fmuls
std
add
sub
imul
xchg
cmpsb
inc
mov
push
inc
nop
mov
inc
imul
mov
mov
dec
addr16
mov
lock
ret
jp
divb
fwait
lahf
das
test
aam
nop
fwait
negl
adc
pushf
lock
int3
dec
hlt
adcl
jae
push
insb
cmpsb
dec
dec
shlb
out
inc
fwait
push
dec
mov
fsubrl
mov
lock
xchg
xchg
push
push
mov
ret
enter
pop
add
aad
xchg
sbb
sub
fistl
lahf
daa
insb
incl
fisubs
sar
inc
fdivl
push
mov
test
push
daa
sbb
push
pusha
cmpsl
scas
mov
push
push
push
sbb
mov
push
enter
arpl
rcrl
vcvtss2sd
mov
cmp
mov
xor
add
cltd
pop
je
push
dec
cmp
and
mov
jle
cmp
dec
ret
push
cwtl
sub
xchg
mov
aad
loop
test
xchg
sub
cmp
addr16
push
in
and
mov
icebp
clc
mov
add
aaa
push
jb
les
sub
pushf
out
divb
lret
jne
mov
stos
test
in
or
push
add
pop
or
inc
sub
rol
outsb
push
imul
jb
test
icebp
std
or
cmp
mov
xchg
hlt
lock
lods
stos
xor
push
rol
inc
ret
fdivr
pop
mov
aad
lock
sub
adc
imul
xor
pop
pop
aaa
andb
cmp
jg
cltd
mov
repnz
hlt
add
clc
scas
shlb
repnz
imul
pop
ljmp
xor
sbb
test
pop
and
mov
call
adc
repnz
aas
out
bound
and
stc
js
jg
pop
sti
lods
dec
xor
cwtl
rcrb
int3
subl
fbld
inc
cmp
scas
cltd
stos
pop
lds
jmp
or
sub
jno
lods
pop
sbb
add
dec
je
fistps
mov
mov
hlt
add
sbb
cli
cmp
call
rorl
sub
sub
mov
push
mov
mov
cmp
test
jbe
les
add
mov
rorb
mov
fs
adc
scas
inc
ds
leave
mov
dec
xor
push
xor
stos
imul
out
inc
fwait
lock
adc
cs
popa
int3
je
gs
in
fadd
add
inc
cmp
xor
mov
jp
inc
aaa
jb
and
pop
fsubs
js
jmp
imul
push
dec
les
xor
xchg
lods
addr16
arpl
cli
stc
int
jmp
outsl
movsb
jmp
in
xor
arpl
and
jae
ja
mov
in
jae
movsl
nop
ja
push
cmp
push
jno
xchg
xchg
std
outsb
int3
add
iret
xor
sub
xorb
out
push
out
cmp
dec
inc
out
in
dec
and
int3
lea
lods
mov
pop
sbb
or
push
out
push
outsl
loope
pop
sarb
cmc
pop
sub
sub
pop
push
pop
repz
push
stos
push
cmp
std
pusha
inc
hlt
lret
test
or
movsl
scas
shlb
mov
insb
addr16
data16
into
ret
ficoml
adc
add
xlat
mov
mov
out
mov
stos
xchg
sahf
mov
out
inc
pop
push
push
lcall
test
stos
dec
cmp
lahf
cmpsl
int
jae
insl
inc
sbb
aas
mov
sbb
xor
fdivr
mov
ficompl
jne
in
cmp
jp
jne
add
xchg
mov
adc
cli
or
jmp
aas
shlb
mov
sbb
pop
adc
xor
xchg
in
shlb
mov
test
adc
jb
pop
or
test
xchg
xlat
sbb
arpl
mov
dec
call
mov
lock
fwait
lock
dec
fistps
test
adc
cmpsl
shll
rcl
shl
mov
out
push
aas
and
cmp
test
hlt
insb
sbb
push
or
and
stos
pushf
hlt
std
adc
fwait
or
mov
test
dec
int3
sbb
or
inc
xchg
and
mov
fdivs
cmpsl
xchg
add
add
subb
and
pusha
or
inc
cmp
and
imul
push
jle
es
push
int
ficomps
out
fsubrs
mov
and
jge
push
sbb
imul
lock
cmpsb
lret
xor
sbb
mov
mov
cmp
jecxz
scas
push
cmc
ret
out
pop
sub
and
pop
fwait
pop
in
xchg
sub
xor
std
enter
pop
pushf
jmp
jbe
lods
stos
int
push
mov
mov
repnz
dec
fistpll
mov
xchg
ret
jle
add
mov
int3
in
popa
or
dec
dec
sub
icebp
mov
clc
ret
sub
pop
xchg
lods
mov
shrb
pop
add
cmp
lods
mov
lods
pop
mov
push
dec
cmp
aas
mov
pushf
mov
enter
in
or
out
mov
mov
sahf
jne
lock
jle
xor
aas
aad
xor
pop
cmp
jb
cmpsl
ljmp
scas
fmul
push
mov
mov
fisubrl
jge
inc
jnp
out
cmpsl
pop
cmpsl
sub
je
or
popa
push
cmp
mov
arpl
sbb
cmp
repnz
inc
adc
sub
mov
adc
cli
cmp
dec
push
sbb
push
add
in
push
jns
xorb
and
scas
negb
sti
xchg
jno
xchg
or
adc
iret
jecxz
jne
or
aam
dec
icebp
add
loopne
loop
xchg
jle
xor
or
ds
arpl
lods
lahf
inc
mov
addr16
daa
push
adc
mov
lods
mov
movsl
inc
arpl
fstps
lcall
adc
test
sahf
test
sbb
icebp
pop
aaa
sub
cmpl
jmp
adc
sub
aam
mov
jmp
dec
bound
es
mov
push
xor
scas
push
adc
inc
mov
les
cmpsb
std
pop
sbb
inc
dec
mov
insb
cmp
jbe
mov
enter
fldcw
inc
xchg
pop
insb
mov
in
mov
xchg
flds
inc
pop
sub
or
mov
loope
das
pop
and
movsl
loope
out
push
movsl
in
loopne
mov
sahf
sub
cmpsl
loop
pop
jp
out
mov
out
jb
mov
sbb
out
mov
adc
mov
inc
repz
push
pushf
mov
pop
push
xchg
pop
leave
test
repnz
sub
inc
mov
call
aad
add
pop
push
out
inc
cmpsl
test
shlb
test
outsb
mov
sub
jmp
inc
aas
or
pop
ret
filds
sub
mov
jno
add
push
cmp
xchg
mov
sti
je
xchg
xchg
inc
aad
cmp
push
inc
shr
mov
call
xchg
inc
xchg
inc
dec
xchg
inc
shl
xor
or
nop
cmpsb
es
lret
add
mov
repnz
mov
or
push
filds
mov
inc
jbe
lahf
out
popa
in
sub
xchg
loope
push
cld
sub
aaa
sbb
lret
out
xchg
popa
pushf
jge
push
xor
inc
xor
cld
shr
pop
pop
in
movb
and
add
scas
or
xor
inc
leave
sub
push
inc
fcmovne
pop
addr16
sbb
or
std
push
loopne
stos
lahf
inc
clc
lods
pop
adc
popa
lds
xchg
add
inc
xchg
jbe
stc
and
mov
test
pop
mov
daa
mov
mov
into
push
mov
test
xchg
jo
cmp
imul
dec
loop
cld
movsb
pop
pop
pop
sub
sbbb
rorl
dec
and
emms
mov
sbb
lock
cmpsb
inc
lret
pop
xchg
mov
xchg
insb
outsb
das
loopne
sbb
mov
pop
insb
mov
adc
sbb
clc
sarl
dec
clc
mov
or
mov
cs
loopne
pop
mov
jne
jbe
test
ljmp
add
cmp
push
movsl
mov
ffree
push
stos
stos
cld
jecxz
addl
push
subb
ret
push
pushl
and
fadds
mulb
mov
out
test
mov
mov
test
add
or
lcall
and
xchg
cmp
pop
cwtl
aas
nop
lods
jl
jmp
pop
pop
or
xchg
shl
lret
ret
cmpsb
je
jb
aad
int
cmp
fiaddl
arpl
es
and
fldenv
cmpsb
fstps
push
xchg
pop
lods
jg
iret
hlt
dec
mov
xor
fldt
enter
arpl
jl
mov
jmp
loop
imul
daa
add
mov
mov
jge
mov
lahf
dec
andb
sbb
adc
idivl
mov
pop
push
pop
fcmovne
push
push
and
scas
mov
scas
in
pop
ret
clc
in
mov
xlat
dec
push
xor
adc
in
adc
cmp
jp
cmp
enter
dec
shr
inc
decl
cmpsl
pushl
push
icebp
mov
out
push
out
sub
loop
cmpsl
jmp
cmp
cld
repz
testb
shlb
add
pop
jge
mov
cmp
ret
sub
mov
lcall
mov
dec
push
sbb
das
dec
gs
push
rolb
sahf
cmc
dec
jo
sub
sub
cli
mov
sub
loope
jns
xchg
sbb
nop
pushf
fildl
stos
sbb
xchg
iret
jl
int
cmpsl
movsb
push
popf
inc
ljmp
dec
jae
aaa
imul
ss
sbb
jae
shlb
mov
xchg
mov
xchg
aaa
xchg
jge
sbb
rol
outsl
mov
popa
jle
push
mov
pop
bound
fcomps
jle
rcl
mov
dec
sub
pop
movsb
sbb
add
bndstx
ja
mov
mov
les
cwtl
js
xor
push
ds
and
fdivrl
xlat
xchg
jno
inc
outsl
je
imul
mov
es
fs
call
cltd
clc
leave
test
pop
or
sarl
pusha
xor
ss
dec
test
fldenv
stos
mov
movsl
jge
or
popl
js
les
dec
adcb
mov
mov
lret
sahf
mov
lods
std
iret
adc
pop
sub
jb
arpl
addr16
jne
mov
out
bound
xchg
mov
outsl
mov
cmpsb
subb
mov
das
cmp
xchg
xchg
stos
cli
mov
fwait
sbbl
add
mov
dec
and
mov
and
mov
and
push
out
mov
mov
lock
push
mov
sahf
mov
loopne
pop
adc
cld
cmp
add
sub
cmp
into
xorb
mov
or
mov
movsb
insl
fadds
and
fcompl
addr16
cmp
fnstsw
push
or
or
mov
fcmove
mov
call
mov
jnp
and
sbb
mov
pushf
stos
xchg
mov
aad
inc
pop
cltd
aad
icebp
mov
icebp
nop
mov
jo
add
clc
sub
jl
mov
movsl
ror
into
inc
push
xlat
push
insl
scas
xor
stos
sbb
pop
push
lods
movsl
insl
sub
xchg
std
jecxz
pop
in
pop
insl
test
inc
test
mov
push
scas
and
xchg
jecxz
jg
add
mov
lret
mov
movb
dec
int3
lods
mov
insb
cmpsb
or
mov
test
xor
inc
imul
cmpsb
adc
loop
push
adc
les
std
mov
sub
and
scas
xchg
inc
icebp
lcall
or
es
cmp
pop
xchg
mov
roll
mov
inc
int3
jnp
mov
std
dec
push
in
xchg
sbb
push
xor
popa
mov
std
cmpsb
pop
mov
shlb
inc
cmpsb
pop
mov
lock
mov
fistl
xchg
lahf
cld
jge
and
jl
in
cltd
adc
push
or
mov
hlt
call
pop
lods
fstps
jmp
sub
dec
inc
jl
add
por
jl
iret
xchg
dec
jae
pop
xchg
pop
cld
lea
or
dec
mov
imul
sbb
lret
subb
inc
xchg
call
or
mov
out
pop
sbbl
test
inc
out
flds
mov
ds
push
in
fidivl
rcrl
jns
mov
push
jl
imul
xchg
jns
add
das
cwtl
sbb
mov
test
outsb
notb
cmp
fwait
pop
dec
push
pop
cmp
dec
pop
pop
cmp
mov
and
sbb
xor
jbe
cmpsb
lahf
rol
gs
stos
xchg
call
les
std
cmpsb
pop
mov
fcmovne
outsl
pushf
add
push
and
jle
repz
shll
rcrb
pop
cmp
push
xchg
shll
in
stc
pop
stos
inc
les
ret
cmp
sbb
cmp
sub
push
and
or
repz
nop
rolb
cmpsb
push
lea
pop
xor
push
ljmp
xchg
inc
cmp
mov
mov
jp
xchg
sub
mov
mov
sub
icebp
adc
arpl
popf
xor
subb
testl
data16
test
and
repnz
sbb
jns
movl
xchg
mov
push
mov
adc
std
sbb
add
xlat
mov
sbb
pop
lret
sub
mov
add
dec
mov
sub
pop
jne
push
idivl
jp
or
add
stc
mov
mov
leave
cwtl
inc
inc
push
dec
out
or
aam
dec
lock
inc
int
xchg
int
icebp
jo
mov
pop
movsl
push
lds
jno
out
out
in
call
shll
rcr
sbb
jbe
push
xchg
cmpsb
sub
adc
lea
shlb
cmp
sub
and
nop
call
xor
les
and
sbb
jbe
mov
sub
pop
cwtl
push
xchg
or
dec
mov
faddl
cmpl
xchg
sbb
pop
or
and
in
int
inc
xchg
pusha
out
js
movsb
popf
popa
lods
jbe
adc
pop
xor
xchg
mov
push
or
jae
xor
sub
dec
jge
jno
lods
lock
mov
lods
in
nop
sarb
xor
mov
jns
mov
ret
daa
sub
test
js
jl
data16
cmp
test
lds
test
shrb
jb
ljmp
ret
add
mov
dec
sub
mov
into
loop
inc
push
xchg
fadd
divl
roll
pushf
int3
xor
cld
cmp
mov
insl
and
addr16
xchg
push
mov
lcall
pop
add
in
and
imul
out
mov
and
cmc
data16
inc
pusha
movsl
clc
mov
xorb
lret
inc
out
fstpl
es
push
rcll
sub
aas
std
cmp
outsb
addr16
fnsave
sub
test
test
mov
imul
pusha
movl
push
mov
cmp
inc
cli
cli
add
sbb
test
loop
decl
call
sbb
jae
lret
in
pop
addr16
push
sub
fisttps
movsl
out
adc
lret
inc
cmp
xor
sar
lcall
sub
xor
sub
fs
arpl
xor
xor
push
ss
xchg
adc
jb
cwtl
mov
jo
xchg
mov
jle
ficoms
xchg
push
stos
movsb
xchg
data16
or
lret
push
cmp
cmp
or
in
clc
lods
out
or
stos
sub
mov
dec
mov
cwtl
cmp
mov
mov
mov
or
and
pop
sbb
dec
and
data16
and
push
daa
cld
repnz
push
and
mov
or
xchg
or
shrb
shr
cmc
cmpsb
iret
in
mov
in
insb
roll
into
mov
ss
mov
cmp
jge
push
aad
adc
outsb
adc
int
ja
das
add
outsb
cmp
xorl
icebp
cmpsb
push
movsb
bound
jmp
xchg
or
xor
ret
shll
mov
push
mov
pushl
adc
add
ret
cmp
push
aas
stos
lcall
std
dec
mov
or
xor
popf
jb
mov
or
push
adc
jo
and
mov
push
cwtl
xor
sbb
pop
clc
fdivrs
cmp
mov
mov
inc
mov
fcmovnbe
jne
ret
enter
loopne
cwtl
or
adc
in
cwtl
sbb
pop
push
loope
fwait
ret
adc
jns
outsl
or
iret
push
into
xchg
scas
shlb
mov
inc
add
or
test
data16
movsl
int3
movl
mov
ja
pop
ja
test
jl
shrb
pop
out
pop
test
out
mov
fcmovnb
sub
mov
call
xchg
add
xchg
adc
in
int
test
test
lret
movsl
mov
sarb
cmp
mov
imul
dec
out
mov
jb
mulb
ltr
push
cmp
push
mov
mov
lahf
je
jb
std
mov
sub
iret
hlt
sub
mov
out
xor
orb
sbb
mov
and
xorl
aad
nop
and
mov
fs
add
pop
mov
and
or
shrb
mov
and
ja
inc
xchg
adc
sub
dec
insl
mov
sbb
sar
add
mov
mov
cld
stos
mov
inc
das
in
add
mov
add
cmp
rorl
xor
in
push
sbb
arpl
xor
fcmovnbe
aad
out
mov
ss
repnz
fisttpll
nop
mov
add
shlb
bound
sub
lock
ss
adc
add
mov
scas
cmpsl
icebp
cmp
push
imul
ss
lock
or
inc
push
cmpsl
add
mov
or
lret
dec
adc
data16
repnz
lock
adc
sbb
dec
xor
add
cmp
pop
fs
jne
gs
or
bswap
cmp
inc
popa
pop
xchg
jle
adcb
mov
cmp
lods
sbb
ja
sub
out
jle
inc
out
ret
rcl
and
jne
pushf
adc
and
orb
push
add
xchg
lea
mov
dec
mov
cmp
xchg
movsb
cmp
gs
and
hlt
cmp
adc
sub
test
insl
pop
jae
cli
mov
cmp
stos
nop
aaa
jp
cmpsb
xchg
movsl
or
and
or
mov
test
in
cmp
push
xor
jg
xchg
pop
xlat
mov
and
mov
cli
pop
arpl
add
fsubr
std
sub
jmp
and
inc
andl
fisttps
mov
mov
in
jae
hlt
and
and
sbb
pop
stos
into
in
pop
jno
out
push
xchg
inc
inc
push
xlat
push
fnstsw
add
xor
xor
push
fisttps
pop
adc
popa
scas
std
cmp
xchg
mov
push
leave
mov
sbb
push
rclb
push
enter
nop
mov
cli
scas
cmovno
shrb
mulb
imul
imul
inc
jnp
int3
mov
cmp
sbb
jns
pop
mov
mov
sti
stos
arpl
add
aad
aad
inc
mov
or
fs
and
sbb
stos
jo
stos
push
xor
cmp
inc
imul
je
cmp
pop
scas
cmp
sbb
dec
sub
push
jbe
sub
mov
jecxz
shlb
xchg
and
inc
add
push
cwtl
adc
imul
dec
popa
push
jge
movsl
add
pop
loope
insb
ds
jle
mov
mov
das
movsb
lret
stos
lock
dec
adc
scas
pop
mov
push
sub
popf
mov
or
add
inc
mov
iret
cmp
sub
dec
adc
out
jmp
inc
jo
add
call
adc
das
mov
xchg
mov
sub
ja
movsl
stos
rcrl
pop
and
clc
bnd
aaa
cwtl
xchg
aaa
cmpsl
sbb
arpl
and
movsl
lret
lret
in
add
push
jnp
cmc
push
adc
clc
jge
add
arpl
or
sub
xchg
enter
fisubs
xchg
mov
or
adc
rorb
jbe
xlat
mov
decl
adc
jns
fsubrs
adc
and
ficompl
ds
xor
adc
imul
push
lea
mov
adc
aas
mov
bound
pop
in
mov
mov
push
mov
pop
test
clc
cmp
in
jp
mov
pop
fsts
adc
in
imul
lock
xchg
lret
enter
sbb
test
mov
mov
loop
cmpsb
xor
and
in
bound
jno
cmp
stos
or
xchg
fdivr
lods
xchg
mov
in
fstps
cmp
and
insl
or
push
inc
gs
mov
loopne
xor
sbb
mov
push
push
popf
sub
mov
int
ljmp
fcmovb
push
ficomps
cmp
mov
aam
sub
push
jp
push
pushf
or
addr16
outsl
sub
mov
mov
pop
mov
mov
push
or
mov
in
test
jns
adc
jp
lret
mov
lcall
in
stos
out
test
mov
test
cmp
rorb
adc
fwait
push
jge
adc
or
std
cmc
mov
pop
fwait
and
in
shl
fwait
int3
call
dec
xchg
adc
cmpl
mov
mov
adc
adc
cmc
or
icebp
loop
mov
shr
cmpsb
frstor
add
inc
mov
push
or
fisubrs
push
ret
shlb
icebp
fidivs
and
push
repnz
mov
mov
bound
movsl
rcr
mov
int
jae
sub
mov
pop
jg
cmp
fidivrl
and
sbb
xchg
cmp
cmp
jp
mov
insl
je
mov
iret
adc
lds
test
xchg
sbb
xchg
mov
iret
in
lods
push
dec
lock
repz
xchg
mov
and
jg
mulps
lods
sub
push
pop
in
inc
push
xchg
or
jb
xchg
lea
hlt
pop
shr
icebp
movsb
jno
je
push
clc
push
inc
nop
lds
sbb
pop
push
adc
or
mov
lea
adc
add
je
cmpsl
repz
push
je
and
pushf
ret
or
test
pop
or
aaa
adc
pop
test
xor
pop
mov
fbstp
sti
frstor
xchg
ret
ficoms
out
lock
imull
pop
call
mov
mov
movsb
cmpl
das
dec
jb
sbb
push
and
pop
sub
cmp
add
int3
movsb
leave
pop
loop
pop
in
jge
inc
and
lods
fdivl
mov
jg
in
cmp
cwtl
mov
xor
ds
insb
cmp
pop
sahf
lret
imul
loopne
ret
sub
fnstsw
jle
dec
add
mov
xchg
jae
jns
push
jnp
sbb
fidivl
push
es
arpl
nop
es
lret
lret
mov
in
mov
pop
fsts
aas
inc
add
in
add
or
in
xchg
xchg
cmc
jae
idiv
mov
repnz
shr
push
jge
shr
cwtl
test
loope
inc
jg
cmpsb
mov
out
sahf
dec
mov
shll
pop
sub
adc
cmp
sbb
lods
pop
dec
insb
add
mov
adc
inc
lahf
cmp
and
popf
movsb
lods
insl
xchg
nop
or
ss
into
dec
or
ljmp
cld
stos
sti
mov
pop
or
clc
popa
xchg
lret
cmp
repnz
add
jnp
push
push
insb
mov
push
stos
and
mov
or
cmp
test
mov
out
jns
iret
lret
mov
aam
icebp
arpl
test
mov
testb
mov
loopne
xor
jmp
xlat
push
rolb
jl
aam
jmp
ficomps
pop
and
jnp
pop
mov
xorl
call
imul
push
mov
push
push
addr16
out
lret
or
mov
adc
jno
inc
cltd
or
jb
data16
stos
cmpsl
in
mov
push
jnp
mov
aam
fucom
mov
jecxz
in
leave
mov
movsb
daa
insb
adc
cmp
in
imul
fidivs
dec
xor
push
in
pusha
scas
add
ret
popa
dec
out
and
test
lret
in
lods
daa
pushf
mov
ret
lds
data16
jecxz
inc
sub
call
xor
call
mov
mov
lea
das
outsl
arpl
test
mov
repz
out
out
xchg
pop
rcrb
xchg
fdivrl
ret
out
in
xorb
ret
sub
cmp
arpl
sbb
outsl
jecxz
fcomps
and
jne
dec
pop
sbbl
stos
mov
int3
fnstsw
cmp
xchg
push
jns
xor
cmpsb
and
outsb
addr16
adc
mov
addr16
vmwrite
ficoms
fmull
movsl
fdivr
mov
jne
jno
shlb
push
mov
call
jle
mov
xchg
mov
lahf
jb
cmp
lods
test
mov
xor
ljmp
in
divb
fnsave
xchg
xor
jge
hlt
ret
inc
aaa
inc
adcb
insl
add
push
mov
sbb
sbb
sbb
sbb
and
jl
jb
xor
fisubs
push
dec
addb
push
int
inc
movl
ds
aam
ljmp
inc
fcompl
push
push
adc
arpl
pop
incl
les
movsb
ljmp
push
xchg
hlt
mov
or
in
push
das
xor
pusha
jo
xor
xor
push
scas
xchg
add
push
enter
pop
jnp
ffree
and
lds
push
nopl
sub
xchg
rcll
sbb
test
dec
cmp
sub
pop
mov
sti
rclb
aad
imul
rcl
cmp
mov
leave
outsb
mov
les
out
aaa
inc
inc
sbb
add
cli
pushaw
fsts
aam
xchg
out
sbb
jns
adc
xchg
cmp
inc
push
shlb
out
insl
fildll
leave
ss
inc
pop
mov
adc
sahf
add
xchg
es
or
loop
xchg
mov
sbb
pop
mov
mov
mov
push
mov
aas
push
inc
cmp
pop
pop
cmp
insl
test
dec
les
sti
xchg
push
sub
imul
ss
adc
test
imul
add
test
shrl
mov
cmp
andb
mov
push
mov
movl
mov
cmp
jp
test
das
jl
loop
mov
sub
and
mov
test
and
lods
adc
aad
push
jne
cld
xchg
push
sub
xor
fnsave
jnp
mov
dec
jno
stos
or
pusha
push
xchg
into
pop
xchg
sub
loop
movsb
sub
adc
mov
xchg
mov
loop
push
call
gs
jnp
xchg
and
mov
sbb
cmp
and
xor
pop
loop
xor
pop
push
repz
clc
add
hlt
dec
test
xchg
bound
cmp
les
scas
inc
repz
js
push
lahf
movsl
xchg
fwait
mov
lcall
cltd
mov
insb
in
aas
mov
leave
mov
add
pop
aas
adc
inc
and
push
sub
pop
mov
sarb
cli
xor
push
pop
mov
or
sarl
mov
mov
fucomip
lret
xchg
je
ja
push
data16
xor
fwait
cmc
loopne
or
adc
lods
mov
sar
mov
cmp
imul
in
jecxz
shlb
pop
jae
push
pop
cmp
push
cmc
jne
sbb
cmp
push
test
mov
leave
stos
sub
into
mov
jmp
enter
dec
xor
push
dec
mov
repnz
ss
leave
test
stc
bound
sahf
test
cli
jno
mov
mov
inc
das
rorl
fbld
and
push
lods
mov
add
loop
xchg
adc
cmc
xchg
cs
push
or
jp
dec
xor
xchg
jo
xchg
ret
out
fimull
fadds
jl
mov
fcomp
adc
jno
add
mov
push
insl
and
mov
mov
dec
fisttpll
mov
scas
aam
jo
dec
mov
out
or
lea
mov
add
test
cld
jo
sub
int
icebp
andb
xlat
mov
adc
or
or
xchg
dec
pop
js
mov
test
psadbw
mov
aaa
push
xchg
aam
fildl
cmc
ja
pop
fisubs
dec
xorb
aad
mov
sarb
orl
or
flds
jge
mov
adcl
in
test
les
xor
std
sbb
jno
mov
pop
es
fcomps
pusha
imulb
push
xchg
xor
mov
in
sub
adc
mov
aaa
inc
lock
repz
jbe
dec
xlat
and
out
rcrl
test
dec
inc
sbb
fsts
xor
aas
push
push
inc
cli
js
and
bound
mov
push
ds
inc
cmp
cmp
aam
mov
mov
outsl
or
call
int
cwtl
dec
jo
add
push
jg
test
adc
or
icebp
aaa
aad
cmp
pop
icebp
imul
push
mov
mov
fcmovnb
jbe
adc
sbb
fcoms
pop
popf
and
sbbb
cltd
adc
gs
push
repz
movl
pusha
xor
std
mov
lea
js
leave
jmp
fiaddl
or
mov
insl
xchg
cmp
stos
mov
ljmp
mov
add
xchg
movsb
mov
pop
inc
loopne
mov
xchg
pop
xchg
cwtl
mov
sub
test
jp
xchg
cld
push
and
mov
hlt
mov
push
das
in
fs
lods
gs
test
fpatan
cli
addl
adc
dec
ja
push
xchg
ss
enter
scas
mov
or
pop
sahf
nop
inc
test
dec
ds
lock
push
dec
inc
dec
loope
pop
icebp
push
sub
sbb
mov
in
ja
add
or
mov
sarb
and
int3
pop
cmpsb
dec
sub
insl
adc
lahf
pop
ja
cli
jle
ret
inc
or
call
int
aas
dec
adc
call
sarl
sbb
loope
dec
sbb
push
or
jbe
lcall
pop
dec
js
mov
or
sbb
icebp
icebp
xor
shlb
dec
outsl
sbb
cmp
xlat
mov
ja
sub
int3
dec
cs
in
mov
pop
neg
adc
shl
out
adc
xchg
data16
imul
cmc
sbb
aam
out
leave
outsl
mov
test
sub
jo
xchg
out
in
nop
sub
pop
push
mov
icebp
in
mov
fsubl
rorl
lret
pop
inc
orl
mov
das
sub
adc
test
ret
sarl
mov
negb
pop
jp
jb
xchg
aaa
leave
test
mov
or
or
std
lcall
das
leave
dec
sbb
data16
test
jmp
xchg
mov
pop
adc
bound
mov
and
pop
mov
cmp
stc
and
mov
mov
or
push
push
pop
jno
jae
and
vsqrtpd
pop
jae
adc
leave
out
les
push
daa
insl
in
xlat
int3
and
add
lret
jl
ja
adc
adc
shll
setl
lock
shll
and
leave
mov
mov
jns
or
movsb
nop
and
leave
movsb
lods
shl
xchg
test
mov
pcmpeqd
sbb
pop
dec
pushf
pusha
dec
std
icebp
loop
lret
jmp
lods
cmp
jle
sub
loope
and
cmpsb
in
xchg
xchg
adc
cli
adc
mov
iret
bound
out
adc
or
rcrl
cmp
pop
clc
mov
ret
cs
cmp
pushf
mov
cmpb
sub
je
cmc
mov
int3
scas
push
daa
xchg
pop
lock
xchg
insb
cmp
mov
mov
and
mov
in
aam
sahf
sahf
adc
rclb
pop
push
fldl
dec
pusha
notb
push
mov
jnp
xor
xchg
int3
xchg
les
push
add
inc
sub
fwait
inc
cltd
out
daa
cmpsb
mov
mov
cmp
fisubrl
pop
add
in
inc
adc
cmp
insl
pop
test
push
xlat
and
jmp
imul
add
and
jecxz
hlt
or
int
pop
mov
stos
push
rcr
adcb
jno
aas
cmp
aam
das
cs
int
arpl
cmpsl
scas
adc
xor
sub
jmp
xchg
pop
jo
dec
fisttps
lock
lds
jecxz
int3
faddl
jne
call
mov
mov
sub
push
pop
hlt
fs
sbb
xchg
mov
cmpsb
aam
sub
mov
loope
lods
testb
adcl
sbb
add
adc
loope
mov
mov
movsl
loopne
punpcklbw
adc
add
pop
or
scas
test
shl
pop
insb
in
loop
or
pushf
insb
dec
sbb
mov
xor
in
sub
mov
shl
inc
xchg
jg
test
or
xor
shlb
mov
mov
dec
insl
sbb
jbe
enter
loopne
sub
sub
test
mov
pop
adc
rclb
pop
out
inc
cs
inc
mov
pop
js
mov
sbb
fs
aad
mov
ror
vpmacsdql
sbb
xchg
movsb
ja
stc
jbe
pop
mov
mov
in
sbbl
js
aas
push
inc
xlat
mov
inc
call
pop
rcrl
add
test
jbe
cli
mov
outsl
or
jbe
xlat
mov
mov
mov
pop
mov
jne
mov
xchg
adc
rcrb
loope
sbb
popa
in
mov
cmp
sub
enter
cmp
in
mov
push
fwait
out
xchg
pop
insl
and
ret
add
dec
push
cmpsb
idivl
repnz
sahf
test
iret
flds
cmp
mov
fdivs
cmc
jne
ret
lea
dec
shrl
cmpsl
pop
lcall
in
jecxz
dec
adc
sbb
enter
enter
mov
lret
fdivl
ficoms
and
add
inc
insl
xlat
sub
and
cmp
cmpb
mov
mov
mov
dec
jns
dec
rcll
sub
test
xor
in
jne
mov
mov
jecxz
jns
jbe
fcompl
sub
xchg
hlt
push
or
fbld
cmp
inc
sbbb
sub
and
push
out
repz
sub
mov
aam
icebp
xchg
push
lods
arpl
fisttps
cmp
movsb
sub
mov
or
sbbl
inc
scas
xchg
push
sub
filds
jno
icebp
mov
mov
lock
aaa
push
mov
push
in
insb
movsb
xorb
xchg
test
in
or
and
lcall
mov
daa
jb
mov
test
icebp
rorl
shl
inc
ret
aaa
rcll
pusha
les
xlat
pop
adc
out
sub
inc
aam
mov
cltd
jb
mov
sahf
lods
or
and
loop
je
inc
pop
andl
les
stc
dec
dec
repnz
lret
xlat
leave
inc
or
fcoms
and
in
or
mov
mov
pop
jb
mov
lret
rcll
xchg
subl
icebp
movsl
popf
leave
fcompl
push
sbb
daa
sbb
inc
cld
add
nop
sub
push
push
fldl
dec
das
insl
loop
lods
sbb
das
lret
shrl
lea
xchg
xchg
sub
je
dec
mov
mov
and
or
push
call
pop
je
lret
aad
outsl
ret
rorb
scas
movsb
das
mov
int3
adc
mov
mov
pop
test
mov
mov
and
in
inc
adc
add
psubb
jno
fidivs
add
pop
test
popa
adc
sbb
in
xchg
cmp
iret
in
add
dec
call
popa
mov
sub
fs
and
push
repz
dec
mov
cmp
push
out
sbb
rolb
fbstp
jno
pusha
lock
sbb
popf
mov
sbb
iret
adc
pop
scas
and
pop
jns
ficompl
push
adc
mov
sbb
stos
and
int
out
xchg
fldcw
mov
adc
xor
and
fmul
push
ret
lret
mov
ret
pushf
sub
mov
dec
xchg
inc
movsb
push
cmovs
arpl
lods
stos
scas
mov
outsb
inc
dec
jno
pop
inc
fwait
or
xor
and
lcall
mov
add
mov
stos
inc
loope
jmp
xor
inc
outsl
in
inc
arpl
cmp
arpl
jg
pop
movsl
lcall
xchg
lret
cmpb
das
mov
add
cmp
adc
sub
mov
xor
adc
ret
loop
out
mov
xor
mov
int3
or
lds
lock
fsubs
lahf
dec
xchg
lcall
sub
jae
xchg
aas
pushf
out
xchg
or
sbbl
dec
test
adc
dec
push
cmp
fildll
and
fwait
mov
sti
jno
cmp
rclb
adc
inc
pop
mov
test
icebp
add
jb
mov
xor
mull
rclb
imulb
and
adc
frstor
bound
out
mov
jbe
sub
push
call
or
or
dec
mov
lock
insl
sub
pop
dec
inc
or
push
clc
push
push
sub
test
cmp
and
mov
sub
inc
or
cld
arpl
push
adc
out
xchg
das
mov
dec
push
and
int3
shlb
outsl
push
fsubrs
cmp
cmp
inc
popf
xor
test
xchg
mov
addr16
inc
jns
fsubrs
ljmp
repnz
cli
mov
cmc
sub
test
sub
mov
add
movsl
lods
not
out
sub
mov
cs
std
xchg
mov
inc
pushf
ljmp
outsb
mov
lcall
pop
cs
outsl
jbe
movsl
mov
imul
pop
push
mov
or
xor
enter
mov
jecxz
mov
out
adc
mov
out
fwait
pop
jmp
cs
ficoms
outsl
mov
sahf
push
sub
pop
in
xlat
xchg
jns
mov
in
cld
ret
test
lea
sub
or
mov
les
in
pop
je
mov
je
push
enter
int
aam
cltd
mov
and
add
fbld
mov
adc
xchg
ret
sub
adc
mov
and
lcall
out
jbe
test
mov
jge
ss
xor
pop
lock
sahf
sub
std
je
cmp
mov
sbb
or
jg
hlt
cmp
aad
hlt
ret
or
ds
dec
popa
add
sbb
push
xor
jne
mov
into
and
bound
insb
and
mov
ja
push
ljmp
push
dec
loope
xchg
mov
lcall
and
sbb
lea
xchg
inc
hlt
shr
pop
test
stc
cld
loope
fcmovnb
cltd
aaa
xchg
cmp
cltd
inc
rclb
popf
sahf
call
sti
popa
outsb
cltd
scas
inc
in
jmp
insl
cld
jecxz
push
fs
adc
loop
arpl
xchg
cmp
repnz
dec
ljmp
xchg
mov
loopne
test
jb
cltd
notb
mov
iret
add
pop
jae
fcmovnu
popf
jg
jns
int3
dec
imul
cmp
inc
mov
popf
dec
adc
sarb
and
inc
lock
xchg
and
shl
out
mov
mov
decl
shrl
clc
inc
std
mov
cmpsl
pop
call
pop
outsl
adc
xchg
xor
lcall
mov
jnp
or
xchg
mov
push
lret
test
sbb
dec
sub
movsb
dec
test
insb
sub
dec
push
sub
popa
shl
es
sub
lret
mov
dec
adc
in
je
sub
lret
lret
add
cmp
fcompl
sub
push
pop
mov
inc
add
leave
lock
out
dec
out
imul
mov
mov
sahf
push
lret
addl
pusha
test
das
cmp
jp
das
push
inc
sub
test
adc
aad
mov
pop
cli
push
in
std
out
lcall
mov
enter
jle
or
pop
mov
arpl
fisttpll
push
rcll
and
push
iret
gs
enter
fwait
jmp
rcll
xchg
mov
push
movsl
jl
popa
inc
mov
xlat
xchg
rclb
pop
mov
into
sub
push
sub
jnp
cmpsl
mov
hlt
and
in
push
insl
add
dec
pause
push
adc
mov
lods
cmpsb
mov
mov
xchg
add
fcmovnbe
frstor
or
xor
mov
or
add
test
imul
sbb
scas
dec
and
xor
add
sub
incb
inc
mov
scas
adc
xchg
pop
insl
xorb
push
xor
aaa
outsl
ret
ret
adc
sbb
es
fdivl
imul
mov
pop
inc
xchg
int3
testl
in
mov
popf
lret
leave
adc
outsl
shrl
push
faddp
mov
pop
jle
popf
cs
xchg
dec
lea
sub
mov
push
test
jecxz
pop
jge
mov
xor
mov
aam
jge
xchg
daa
adc
ljmp
idivb
push
adc
jbe
roll
pop
jmp
xor
push
inc
adc
pop
push
outsb
cwtl
cltd
clc
xchg
insl
mov
mov
ret
dec
loop
pop
lods
fistl
adc
cmp
add
sbb
mov
jns
mov
into
and
aad
xlat
cmp
in
mov
add
roll
idiv
push
cmc
adc
imul
inc
xlat
cwtl
testl
and
xchg
cwtl
nop
pop
aaa
test
lret
adc
jecxz
inc
push
rcl
push
add
mov
adc
addl
lods
pop
pop
rorl
sahf
iret
lods
outsl
rorl
ficoms
push
lret
mov
stos
insb
out
repnz
int3
mov
popf
ror
mov
cmc
or
add
xchg
pusha
cmpsl
jmp
sahf
and
das
bnd
bound
push
add
jns
repz
sub
mov
jmp
mov
jbe
jnp
mov
pop
jmp
sbbb
mov
mov
push
and
dec
mov
ds
cmp
adc
or
xor
out
sti
jne
add
test
leave
repz
jl
xor
out
dec
cwtl
dec
dec
dec
mov
cmpsl
push
mov
lcall
aam
mov
loopne,pn
mov
mov
enter
lcall
mov
enter
lods
js
sub
pop
inc
cld
mov
stos
call
xchg
cmp
inc
test
in
jb
pop
pushf
es
outsb
mov
int
xor
mov
popf
ljmp
dec
fisubrs
popf
sub
mov
mov
aaa
je
adc
rclb
sub
add
pop
inc
shr
or
rorb
aas
pop
xlat
clc
movsl
mov
xchg
push
pop
inc
mov
in
mov
jo
dec
xor
cmp
add
xor
or
mov
pusha
xor
xor
addl
out
inc
clc
mov
rol
fcompl
push
and
inc
call
pusha
adc
cmpsb
jle
cmp
pusha
daa
jns
xchg
cmc
xchg
or
pop
outsb
xor
stos
clc
mov
movsl
add
cmp
mov
enter
and
repz
fcoml
pop
mov
push
cmpsb
int3
cmpsl
jno
sub
jae
icebp
cmp
sub
nop
mov
shl
pop
and
lret
xchg
pop
inc
sahf
out
sbb
or
lahf
jp
lods
lahf
xchg
inc
mov
bound
pop
rcl
daa
cmp
cmc
jecxz
pop
pop
add
push
or
push
outsl
insb
pop
lea
jnp
jmp
jge
jbe
mov
loopne
xchg
popf
xchg
mov
rolb
adcb
push
pop
xchg
inc
mov
or
scas
push
je
mov
xchg
cld
jbe
jbe
das
arpl
sahf
cmp
adc
sbb
popf
dec
push
les
clc
hlt
loop
add
push
neg
cmp
fcmovnu
in
inc
xor
sbb
sub
fucomi
lock
push
jno
hlt
mov
enter
xchg
inc
jp
out
sbb
repnz
xor
and
fs
pop
sahf
add
mov
rcr
cmc
gs
jl
sub
test
mov
pop
mov
aam
mov
adc
pop
ss
xor
xor
fmul
stos
int3
addl
xchg
into
sbb
pop
sbb
mov
in
mov
lea
xchg
adc
push
mov
test
bound
inc
add
jmp
pushf
aaa
adc
xchg
decl
and
sub
mul
xchg
mov
enter
in
jb
adc
add
xchg
mov
adc
call
enter
mov
call
cmc
es
pop
insb
pop
pop
xor
inc
pop
cltd
lock
add
dec
dec
push
out
dec
cmpsb
aam
pxor
and
mull
fs
sbb
fsubl
xchg
aas
mov
lahf
pop
psubd
xchg
sbb
sub
mov
and
jl
jns
lods
jno
inc
fs
mov
call
add
sbb
add
pop
cltd
push
xchg
adc
sbb
mov
sbb
cltd
jmp
fsts
rcrb
ret
shlb
mov
out
movsl
in
inc
loopne
and
aaa
repnz
pop
arpl
push
xchg
repnz
mov
test
mov
jae
adc
mov
xlat
fcmovu
fisubs
in
out
pop
aaa
test
mov
add
mov
and
adc
mov
in
xor
out
jp
xchg
cmp
dec
repnz
in
adc
sub
dec
xchg
movsl
jmp
xchg
pop
int
dec
imul
rcrl
cld
js
jne
ljmp
cs
aad
inc
je
addr16
std
testb
add
sub
cmpsb
out
mov
ds
sbb
push
icebp
movsl
cld
sti
mov
push
aas
sbb
xchg
sbb
lods
rcll
fs
mov
pop
adc
ds
lods
ret
das
loopne
and
or
roll
pop
jnp
mov
imul
mov
cld
cmpsl
out
rorl
jmp
insl
loop
lret
push
ljmp
pop
mov
or
pop
lahf
dec
fcomps
or
lahf
and
mov
test
xchg
add
leave
shr
dec
mov
orb
aaa
sub
ja
jns
mov
inc
outsl
sub
add
repz
fisttpl
shll
sub
xor
and
mov
loopne
jbe
cld
push
movsb
das
fcomps
mov
sub
and
pop
mov
add
lods
mov
repz
mov
push
sti
divb
mov
les
lahf
mov
and
dec
les
int
push
hlt
scas
loop
pop
lock
inc
sbb
cltd
andl
push
jne
scas
and
pop
lahf
in
in
jecxz
mov
cmp
popfw
cwtl
out
xor
and
out
xchg
enter
roll
mov
ja
add
xchg
jbe
fldt
mov
out
fimuls
cmp
pop
pop
in
mov
adc
pop
fldl
movlps
stos
lods
gs
int3
xchg
xor
add
xchg
imulb
push
out
bound
ja
insl
iret
cld
jo
negl
xor
aaa
jecxz
xor
idivl
mov
outsb
ljmp
lods
dec
loope
vcvttsd2si
adc
push
push
negl
jge
sub
sbb
loope
sbb
inc
dec
and
repz
xchg
scas
mov
out
fstpt
dec
xchg
lods
loope
adc
and
movsb
cmpsb
sarl
xchg
icebp
push
xor
mov
sub
jnp
test
adc
stos
mov
loopne
adc
or
adc
mov
dec
xor
dec
repnz
inc
mov
jbe
xchg
cmpsb
cwtl
jge
mov
add
andb
fs
sbb
dec
mov
test
jae
ds
xlat
add
int3
inc
scas
in
dec
push
add
push
mov
jmp
stc
inc
roll
sbb
cmp
push
lods
jecxz
and
insl
test
clc
ret
arpl
sbb
add
jns
fstps
xchg
xchg
mov
fwait
inc
xchg
imul
gs
add
mov
mov
std
lods
movsb
cmp
ss
sbb
adc
pop
pop
jb,pn
stos
xor
int
mul
mov
mov
int
loop
into
mov
jle
jmp
push
mov
add
mov
cmpsl
inc
xor
subl
pop
mov
and
lret
fcmove
cmp
cmc
aam
mov
jbe
leave
jne
pop
jbe
popf
cmp
sbb
cmc
sbb
outsl
out
sub
or
nop
and
mov
jge
add
mov
push
test
xchg
pop
imul
mov
arpl
lret
repnz
addl
pop
inc
pop
shl
inc
sbb
add
adc
mov
call
out
jmp
sbb
xchg
ret
add
mov
sbb
jae
mov
xor
inc
or
imul
add
pop
adc
jl
jns
scas
sub
mov
mov
mov
in
push
pop
sbb
xor
insb
sub
out
pop
sub
xchg
xchg
fildl
or
int
fists
loop
test
pop
ret
push
movsl
fisttpll
out
mov
rolb
in
scas
cmp
mov
push
scas
daa
mov
repnz
daa
out
and
xchg
iret
add
xchg
fucomip
xor
js
out
pop
loop
add
push
ljmp
mov
sbb
je
int3
mov
cmp
sar
mov
and
xor
fcompl
add
dec
cmc
in
mov
in
repnz
popf
or
shll
adc
lret
movsb
dec
mov
pushf
push
enter
mov
add
lretw
jle
xor
iret
divb
sbb
int
mov
jae
dec
dec
sahf
inc
cmpsl
push
sar
idivl
cli
cmp
js
andb
adc
insb
jno
jns
out
sbb
leave
call
pop
xchg
jmp
icebp
adc
leave
fidivrs
enter
pushf
jmp
cmp
mov
pop
or
xchg
loop
mov
add
shll
and
outsb
lock
lods
mov
mov
mov
popf
mov
xorb
push
fistpl
inc
jnp
pop
pop
in
icebp
fnstenv
mov
lock
in
mov
xchg
pop
rcrl
cld
pop
jne
push
shlb
push
xor
push
in
leave
out
lods
cmpsl
and
loope
out
pop
int
lea
inc
imul
adc
and
and
add
sub
lds
mov
pop
mov
pop
add
roll
out
or
test
leave
aaa
cmp
mov
mov
dec
jp
loop
sahf
sarb
cmp
rcr
pop
in
push
imul
jg
gs
mov
fnstenv
int
pop
push
push
pop
dec
int3
mov
mov
pusha
dec
jecxz
movsb
adc
mov
dec
rorl
sub
inc
sub
stos
jp
adc
cmp
cmp
mov
dec
push
xchg
sub
push
adc
jle
ror
cmpb
xchg
sti
sbb
cld
adc
aas
imul
bound
ljmp
push
shlb
hlt
mov
pop
inc
into
add
mov
push
outsl
or
lds
pop
pop
out
sti
imul
xor
lock
jle
mov
mov
loope
pop
or
pop
sbb
pop
mov
and
jmp
cltd
xchg
or
adc
aaa
clc
xchg
dec
xchg
xchg
movsl
dec
mov
aas
jmp
das
stos
inc
lds
shll
adc
add
and
mov
cmpsl
add
cmpsb
data16
push
test
pop
and
mov
lods
mov
mov
adc
dec
outsb
or
and
mov
repnz
outsb
push
je
shll
push
int3
out
rolb
call
adc
or
hlt
push
xchg
cmpb
and
ss
cmp
movsl
sbb
gs
push
mov
shll
in
pop
nop
iret
or
aas
aad
cmp
xchg
lret
pusha
pop
or
jg
inc
outsl
outsb
push
pop
loopne
xorl
ljmp
dec
sub
xchg
out
lss
loope
push
mov
sti
and
push
add
xchg
mov
push
sbb
pop
jbe
xchg
cwtl
add
push
add
imul
iret
mov
mov
inc
fs
outsl
lret
test
sbb
cwtl
or
add
dec
jge
jns
je
push
cmpsb
mov
dec
lret
mov
dec
les
repnz
out
xchg
out
or
mov
xchg
inc
mov
push
mov
es
mov
mov
cwtl
cmc
fwait
rol
mov
add
xor
dec
into
aas
mov
mov
pop
dec
popa
xor
scas
and
mov
mov
jne
xchg
test
sbb
dec
outsl
add
ret
mov
mov
outsl
add
mov
mov
sti
xchg
std
and
ret
dec
in
sub
les
sbb
push
or
arpl
dec
xchg
in
jge
xchg
paddusw
fstpt
push
jecxz
push
insl
add
push
jmp
sub
repz
and
mov
outsl
aaa
jecxz
add
xor
mov
pop
xor
xor
mov
or
xor
xor
clc
jb
mov
sbb
loopne
pop
lock
jno
sti
pop
stos
xchg
and
nop
push
inc
outsb
adc
pop
lret
shl
mov
fwait
adc
fimuls
popa
mov
jmp
dec
in
rolb
int3
cmp
pop
aad
fidivl
mov
call
loope
ljmp
inc
jb
and
rorl
pop
add
adc
bound
sub
dec
pusha
xorl
rcrb
mov
in
mov
aam
pop
sbb
pop
push
inc
jns
adc
lret
pop
sub
sbb
or
adc
popf
lret
push
jmp
add
movsl
imul
enter
out
fdivrp
jg
enter
adc
jne
rcll
insl
xor
popa
mov
add
aam
out
xchg
inc
in
in
xchg
cli
stos
call
ds
ds
mov
mov
enter
jmp
mov
leave
repnz
enter
std
add
mov
call
sbb
xchg
jns
in
popa
mov
mov
sahf
adc
cmpsb
adc
push
inc
lret
add
pop
cmp
fdivrl
sar
pop
scas
jle
mov
test
mov
and
push
in
enter
scas
insl
mov
frstor
sub
stc
daa
mov
popf
mov
insl
cli
ficoml
adc
daa
add
and
push
and
cmp
mov
xor
pop
jp
leave
xlat
testl
mov
and
sbb
xchg
xor
rolb
stos
fiaddl
jle
xor
lahf
test
leave
test
ljmp
push
push
adc
mov
and
loopne
sub
mov
adc
out
cli
sahf
lea
addr16
sbb
mov
repz
loop
in
xchg
or
and
mov
icebp
pushl
push
ret
fdivr
mov
adc
pusha
popf
std
mov
push
test
std
mulb
push
gs
jo
stos
ja
push
inc
les
push
cmp
xchg
je
and
cmp
jmp
and
jae
adc
cmp
inc
xor
xchg
lds
fstps
rclb
clc
add
aad
out
popl
xlat
cld
pop
xchg
cmp
xchg
adc
push
lods
cltd
jae
call
mov
sahf
push
hlt
mov
jae
xchg
adc
enter
and
adc
dec
lret
arpl
mov
fs
jmp
pop
add
and
hlt
rcll
lcall
out
and
imul
xchg
xor
sub
adc
daa
mov
xor
pusha
push
jmp
orl
rclb
mov
mov
mov
fxch
jno
cld
inc
icebp
shrl
fs
cmp
inc
mov
in
fdivs
sbb
jp
lret
mov
sbb
jno
ficoms
cs
sub
mov
jge
in
xchg
or
in
icebp
push
loop
or
inc
pop
lock
in
loop
bound
stos
das
xchg
jns
cwtl
ds
adc
loop
aam
daa
xchg
xchg
pop
dec
movsb
mov
ret
out
mov
loopne
cli
dec
rcl
stc
adcl
inc
sub
pop
sbb
add
xchg
xchg
push
fwait
jbe
adc
inc
pop
stos
.byte
