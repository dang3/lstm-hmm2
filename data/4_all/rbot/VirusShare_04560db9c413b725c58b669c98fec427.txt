movsl
lock
stos
jns
jno
ljmp
out
ret
loop
inc
adcl
inc
iret
gs
add
aas
into
in
cmp
movsb
aad
mov
daa
sbb
pop
push
insb
inc
xchg
out
out
dec
sub
sub
sub
inc
imul
stc
sahf
fs
aam
cmpsl
add
ljmp
cmp
mov
sub
add
shl
shrl
sbb
sbbb
mov
lahf
outsb
xor
inc
mov
and
mov
inc
and
dec
pop
orb
lock
push
into
es
loop
ss
mov
xchg
ret
dec
mov
insl
call
or
lock
pop
popa
xlat
add
cmp
int3
xor
test
adc
or
dec
push
pop
sub
lods
in
aam
sub
pusha
nop
jbe
xor
sub
in
fimuls
shr
mov
mov
sub
xor
icebp
mov
jge
pop
movsb
int
mov
int3
jp
shr
scas
push
xor
rolb
mov
adc
pushf
and
out
imulb
adc
and
xchg
dec
movsb
clc
fwait
mov
fmulp
fcomps
jmp
aam
mov
or
lea
test
cmp
icebp
out
ds
decl
sub
rcrb
jp
bound
push
addl
adc
cld
outsl
dec
sbb
daa
sti
cmp
std
xchg
pop
int
push
out
lret
rcl
clc
mov
jb
mov
jae
sub
jge
std
mov
lods
mov
insb
cmpsl
cmp
into
xor
ljmp
xor
mov
pop
movsb
push
imul
push
test
xchg
sbb
pushf
lods
inc
sbb
pop
pusha
xchg
sbb
jne
imul
pop
nop
pop
inc
fdivrl
add
popf
pop
cmc
addb
bnd
stos
enter
repnz
xchg
mov
adcl
fcmovbe
outsl
repz
mov
addr16
push
addb
dec
cmc
mov
lret
out
iret
shr
mov
mov
jecxz
lret
out
clc
repz
pop
or
daa
insl
jno
mov
jge
xchg
jns
popf
sarl
je
dec
cld
sub
mov
ret
mov
or
rorl
push
testb
scas
aas
push
fdivr
call
dec
loop
gs
dec
fs
nop
push
add
push
imul
or
mov
jo
dec
outsb
out
add
loop
mov
rcrl
imul
jge
enter
ds
hlt
je
mov
scas
xor
das
mov
mov
mov
outsb
gs
ret
and
in
icebp
int3
jmp
fidivrl
sub
rcll
test
repnz
loop
dec
adc
insb
and
popf
push
rol
rcll
mov
mov
cli
lret
xchg
push
ficoms
je
xlat
nop
popl
lods
fbld
jmp
rorb
scas
fwait
outsb
lret
ret
fildl
jb
mov
push
xor
sbb
stc
mov
shll
or
mov
push
push
scas
adc
xchg
ss
mov
int3
mov
shll
insb
cmp
call
xlat
ljmp
inc
mov
push
xor
fwait
lret
sahf
icebp
fptan
not
fcmovnb
mov
icebp
mov
loop
cmpsl
xor
fmull
inc
cmp
icebp
cmp
jp
std
shlb
cmpsl
lds
hlt
pop
push
and
les
sbb
jge
inc
repnz
sub
xchg
fnstenv
mov
ret
fsubrs
scas
out
pop
fstpt
push
cmc
int3
or
add
in
out
mov
ret
ret
add
in
mov
fists
roll
test
xor
xor
or
fcomps
out
adc
imul
pop
es
imulb
jo
inc
in
mov
and
negl
icebp
iret
mov
xor
inc
sub
les
dec
sub
fwait
scas
or
push
sbb
push
mov
pop
pusha
das
orl
imul
pop
ljmp
push
repz
fdivrl
jmp
mov
mov
or
dec
mov
add
stc
roll
push
out
and
pop
lods
push
sub
pop
sub
addb
jp
int3
scas
push
pop
cmp
sbb
mov
add
sbb
sbb
dec
movsb
repz
movzwl
sub
push
pushf
push
xchg
jle
inc
sbb
ficoms
out
shl
mov
repnz
pusha
cld
xchg
faddp
sbb
andl
in
xchg
sbb
lds
dec
clc
mov
scas
jle
bound
insl
rcrl
pop
insb
sbb
mov
mov
sbb
scas
jb
mov
cs
mov
mov
mov
add
int
cmp
fildl
dec
sub
adc
sbb
sub
add
push
jge
cmpsl
fcmovu
aad
fdivr
sbb
push
push
mov
mov
add
loop
xor
pop
push
mov
add
lret
clc
sbb
cmpsl
and
cmpsb
jne
and
mov
xchg
hlt
mov
test
scas
pop
rolb
rorb
jne
fistps
mov
pushf
cmpsl
js
fistpll
stos
ror
sbb
mov
jmp
jo
pop
jbe
mov
bound
pushf
cmc
aad
dec
fbld
lods
adc
xchg
mov
pshufw
outsb
sbb
mov
ret
sti
sbb
inc
shll
xchg
bound
mov
cmpsl
in
lods
lock
lret
inc
jg
and
insb
mov
dec
mov
insb
mov
push
aaa
ljmp
dec
xchg
shlb
mov
ss
scas
insl
mov
cli
hlt
mov
jle
push
daa
add
push
xor
mov
mov
mov
outsl
push
jno
mov
sbb
int
lock
jno
cmp
shll
fs
ss
scas
jno
fwait
rol
xchg
mov
stos
cmpb
shrb
pop
pushf
cmp
mov
add
and
xchg
in
out
inc
mov
ss
addb
cld
mov
mov
in
in
cmpl
out
mov
pop
cmovb
inc
push
in
leave
lret
mov
jecxz
int3
insb
fdivr
in
inc
pusha
data16
adc
daa
sti
call
pop
jecxz
lds
jno
into
or
sbb
fldt
adc
pop
stc
mov
imul
push
loope
and
outsb
mov
jp
rcl
scas
mov
out
pop
lods
fwait
repz
pop
pop
jge
cmpsl
and
outsb
daa
cmpl
pop
cmpsb
sub
xor
add
dec
scas
lcall
dec
movsb
cli
shll
and
out
lret
enter
sbb
and
clc
out
stos
in
sub
outsb
iret
rolb
mov
fsubrs
dec
xchg
add
ret
dec
out
sbb
test
inc
mov
in
into
jne
shll
sbb
xchg
jns
ljmp
leave
inc
cmpb
adc
cs
in
sti
and
inc
jo
dec
and
std
or
xor
sub
jge
mov
jg
sbb
mov
leave
imul
scas
imul
adc
pop
enter
inc
mov
mov
lods
cmc
xlat
sub
sbb
insb
inc
mov
subl
shlb
enter
cmc
sarl
scas
arpl
jge
cmp
mov
or
clc
or
inc
push
and
jmp
inc
fmul
inc
frstor
test
sarb
aam
jmp
loopne
pop
dec
movsl
out
mov
push
repz
mov
mov
cmp
mov
mov
xor
pop
jle
mov
rorb
mov
lods
adc
stos
sbb
jne
xchg
hlt
nop
sub
mov
pop
insl
stos
lret
mov
mov
fistpl
push
ficoms
mov
jo
in
add
ja
sbb
fisttpll
jb
xorb
sub
std
repz
xchg
scas
push
sbb
sub
pop
sbb
and
lret
sub
xor
movsb
test
lea
mov
cmc
int
add
in
sti
xchg
clc
sbb
es
xchg
fcoml
idivl
lea
ljmp
pop
jmp
mov
push
mov
push
mov
inc
xlat
adc
fcom
std
ds
pop
mov
pop
addb
dec
mov
sbb
inc
or
cmp
call
lock
call
add
in
cmp
jmp
jbe
add
pop
dec
fnstsw
lahf
push
enter
aam
mov
pop
cmpsl
dec
adc
sub
ds
clc
sahf
and
jmp
repnz
mov
lods
xchg
xor
cld
and
outsb
rorl
xlat
std
loopne
sbb
sahf
xchg
rcrl
cmp
adc
in
int3
jp
push
repnz
mov
pop
int
decl
imul
pop
test
repnz
or
nop
adc
dec
or
out
stc
xchg
loop
sbb
xchg
or
mov
or
jno
pop
xlat
bound
out
sbb
mov
jecxz
sub
pusha
into
xor
int
inc
push
xchg
or
cmp
aam
pop
sbb
fsubrs
pmaddwd
push
popa
scas
add
loope
mov
ret
cmp
xchg
or
xor
ljmp
mov
int
mov
mov
pop
call
lea
mov
repz
rcll
stos
iret
xor
decl
mov
shlb
fiadds
jae
sbb
sahf
sub
jne
lahf
sahf
xchg
mov
shlb
push
sub
xchg
andl
pop
inc
cli
cmp
mov
xlat
jbe
lret
lds
cltd
mov
lds
push
fdivrl
fmul
xor
cli
int3
outsb
adc
push
lea
ja
std
into
es
lea
fadds
inc
push
xorb
add
cs
sub
sbb
les
inc
ljmp
pop
leave
out
xchg
es
lea
ja
ljmp
adc
imul
mov
rcrb
test
hlt
imul
hlt
mov
cwtl
in
repnz
pop
sbb
in
push
pop
in
or
hlt
sbb
mov
xor
or
and
push
stos
in
and
and
sub
cli
rolb
and
dec
cmp
cmpl
mov
sbb
cld
jb
mov
data16
pop
and
sub
dec
adc
pusha
xor
cmp
and
cmpsb
dec
sbb
xor
hlt
out
jp
les
stc
jns
add
in
sbb
dec
adcl
xor
sbb
jmp
call
sti
and
test
in
add
aas
out
push
sbb
xchg
jp
rclb
cld
sar
lcall
mov
mov
repz
jle
lahf
cmp
pop
mov
icebp
xchg
in
mov
inc
lahf
cmpsl
and
sub
jp
movsb
pop
addb
sbb
jge
cmp
icebp
out
inc
xor
mov
or
push
cmc
lock
in
and
ret
gs
sbb
jle
cmp
adc
dec
ret
add
mull
stc
pop
jne
lea
xor
out
pop
mov
std
xchg
push
jl
rcrl
mov
push
out
inc
maxps
popa
leave
jp
out
fidivrs
pop
lea
or
loope
lock
daa
pop
sub
mov
add
mov
les
xchg
sub
jg
push
and
mov
push
add
mov
sbb
add
fsubl
pop
mov
scas
loop
data16
xchg
cmpsb
xchg
std
push
cld
adc
jg
add
daa
mov
mov
pop
lret
push
inc
sbbl
ret
dec
pop
cmp
enter
fadd
sti
leave
mov
addr16
jecxz
iret
xchg
sbb
js
rorl
addr16
sub
jl,pt
xchg
clc
fwait
loopne
sti
sbb
scas
test
rorl
inc
movsb
fisttpl
add
clc
and
cmc
sub
sub
lcall
stos
xchg
ds
jle
out
or
inc
das
outsl
pminub
aad
sbb
jns
fwait
or
mov
aaa
rolb
fidivs
test
outsb
jno
daa
dec
lret
fistps
add
scas
jecxz
mov
xor
mov
les
and
push
add
push
mov
inc
ret
cmp
mov
das
cmpsl
and
ret
cld
movsb
arpl
or
jge
mov
cld
iret
lret
outsl
xchg
ja
jae
cli
mov
jp
jne
leave
jle
insl
lods
test
clc
sahf
xlat
or
xor
repz
sub
in
movsb
push
jl
xor
out
out
xchg
inc
repnz
sub
out
jp
inc
xchg
hlt
int
mov
into
je
mov
mov
lea
cmp
int3
les
sahf
lods
mov
push
mov
sub
cld
and
pop
out
mov
or
xor
bound
std
rorb
jp
and
push
inc
mov
adc
push
push
leave
sti
in
bound
adc
and
lods
aam
sti
lea
inc
aaa
fs
call
mov
dec
or
adc
dec
xchg
sti
dec
je
jg
sbb
adcl
sbb
pusha
rol
bound
lods
adcl
iret
mov
stos
int3
push
out
pop
incl
dec
push
hlt
sub
mov
mov
pop
aam
or
movsl
int
inc
scas
cltd
xchg
call
xchg
xorl
adc
outsl
jbe
cwtl
dec
pop
jns
int
xchg
push
dec
insb
stos
inc
sbb
cmc
inc
je
inc
adc
loopne
mov
jo
jg
ds
xorl
leave
mov
sbb
stc
adc
and
repnz
ds
mov
aad
insb
in
or
in
adc
or
push
movsb
cmp
aam
and
xchg
dec
ret
std
fcom
sbb
adc
xor
pop
call
cli
inc
pop
xor
dec
loopne
or
aam
fwait
sub
mov
lds
lahf
cmc
rcll
les
add
fcoml
mov
jo,pn
lret
fisubl
inc
jnp
jno
out
insl
xor
call
push
xor
mov
repnz
movsb
push
mov
add
ret
cmp
ror
jl
fisttps
xor
jp
out
mov
mov
mov
add
xchg
out
mov
push
inc
shl
adc
add
inc
or
mov
mov
add
jno
stc
repnz
and
repnz
and
mov
test
data16
push
rolb
mov
dec
lods
xor
xchg
fs
xchg
mov
mov
xor
sub
in
subl
mov
inc
sub
dec
imul
and
lea
into
fwait
mov
jmp
loopne
adc
dec
jo
ror
and
cmp
sbb
xlat
xor
jne
xor
xor
dec
pushf
pop
xor
add
mov
das
xchg
repnz
test
adc
in
shll
roll
mov
or
lret
out
xor
mov
lock
notl
and
adc
aad
adc
push
dec
or
gs
jp
xchg
lock
and
jns
mov
jecxz
xor
jae
mov
cltd
repnz
or
lcall
ret
pusha
dec
inc
fs
sbb
in
mov
adc
popf
into
aad
xlat
or
jle
xchg
jb
and
pop
subl
mov
scas
adc
lcall
xor
scas
stos
hlt
xchg
fbld
jno
dec
pop
movsb
aad
std
movsb
pop
lock
cmpsb
adc
rorb
popa
xchg
shr
and
fnstcw
aam
mov
mov
or
mov
pop
icebp
pusha
sahf
xchg
fldcw
repnz
adc
in
sahf
cmpsl
xor
xchg
fisttps
or
push
push
mov
push
xlat
test
je
xor
je,pt
repnz
or
push
push
popa
mov
xchg
xor
fcmovne
push
dec
mov
rcl
xchg
ret
mov
out
dec
mov
lods
mov
in
dec
push
je
and
movsl
mov
sbb
xor
push
bound
mov
cmpsb
push
clc
pushf
adc
test
or
std
lea
cwtl
lret
popf
negb
inc
movsl
test
xchg
sahf
nop
push
in
mov
or
push
cmp
incl
xor
mov
cmp
jo
mov
xor
sub
push
enterw
or
adc
test
movsl
add
jmp
stos
int
sahf
xlat
mov
jno
adc
jo
lahf
in
popa
jg
jns
aam
add
lahf
lret
ret
popa
sbb
call
xchg
mov
mov
mov
in
mov
insb
jns
stos
ljmp
les
pop
adc
les
fwait
mov
xchg
std
ds
in
ljmp
dec
or
push
push
icebp
gs
cmc
pop
jb
nop
sub
mov
cmp
orb
frstor
xchg
out
adc
jne
gs
faddl
push
jmp
outsl
stc
inc
sbb
lds
pop
insl
mov
ficomps
enter
adc
bound
fidivrs
mov
mov
mov
jmp
mov
sbb
push
in
push
pop
pop
lock
xor
aad
cltd
test
cmpsb
jbe
adc
pop
fs
jg
sub
lods
loop
mov
stos
call
fldcw
pop
and
sbb
mov
loop
xchg
nop
jbe
in
iret
test
loope
or
insb
jno
ret
xor
pop
xchg
add
leave
lods
jbe
pushf
loopne
ret
imul
stc
sub
inc
adcb
clc
andb
cmc
xor
cld
mov
shll
mov
or
mov
xchg
fsubl
shll
ret
dec
dec
pusha
jns
mov
fmul
not
inc
push
push
fwait
or
jno
repnz
mov
fldt
inc
int
mov
loopne
fisubl
cmp
outsb
ss
in
mov
xchg
xchg
xchg
jge
cmp
pushl
andb
in
mov
in
cld
inc
clc
xor
cmp
pop
mov
test
pop
add
xchg
mov
ljmp
cmpsb
fnstcw
mov
rolb
push
lret
push
mov
push
popf
jns
jp
inc
jno
clc
mov
dec
lds
cmp
pusha
daa
sti
push
inc
pop
xchg
dec
mov
movsb
add
sbb
cmp
cwtl
mov
sbb
cld
cmpsb
inc
and
cmp
pop
adc
fs
iret
xor
dec
mov
or
inc
fnstcw
sbb
pushf
lock
sti
pushf
sbb
test
mov
cmp
std
test
mov
mov
add
xchg
cwtl
shl
aas
dec
int3
mov
aaa
movsl
int
aam
out
adc
and
add
xchg
jle
jp
push
testl
test
mov
add
out
mov
mov
jbe
jecxz
inc
jmp
rclb
mov
sub
outsl
jge
jp
pop
adc
gs
insb
cmpsb
mov
and
push
or
and
sub
insl
fsubrs
in
add
ficompl
sub
xchg
push
xchg
pop
cld
ret
mov
shl
data16
std
push
mov
xor
cld
ljmp
repz
push
nop
jno
mov
and
or
pop
pop
pop
inc
call
mov
mov
xor
xchg
push
and
fistl
fsubl
ror
pop
int3
fs
cmpsl
jne
es
rcrb
or
sbb
aas
xor
loope
out
iret
in
cmp
or
enter
ja
je
aam
push
dec
jae
sbb
in
add
mov
fxch
icebp
xchg
data16
mov
dec
sub
scas
or
mov
jp
cld
push
mov
in
ja
xor
pop
call
jp
pop
push
or
and
movl
cwtl
rcr
mov
cmp
mov
sub
mov
das
add
movsb
ja
out
fwait
clc
mov
fsubrl
add
andl
adc
decb
push
mov
add
sub
inc
sub
fcompl
and
lods
test
and
push
repnz
enter
cmp
xchg
mov
mov
mov
pushf
and
aam
repz
sub
cmpl
sahf
out
jb
vpsrlq
ret
mov
cmp
std
cmp
lcall
inc
dec
sub
cli
loope
xchg
es
movsb
ret
pusha
mov
ljmp
repz
movsl
jb
or
sub
pop
mov
dec
rcll
xor
enter
lret
insl
out
adc
stc
imul
cli
faddl
or
sbb
icebp
leave
mov
cmpsl
adc
xchg
rcr
adc
or
cmp
test
sti
inc
movsb
repz
xor
mov
push
icebp
mov
mov
ljmp
mov
nop
and
mov
loop
iret
mov
clc
xchg
inc
sbb
int
stc
jae
adc
aad
mov
fnstenv
ret
xchg
xor
scas
mov
lods
je
mov
fisttpll
fldenv
mov
aad
leave
insb
pop
cmp
pop
pop
sub
adc
cmp
cmp
sub
mov
or
sbb
mov
daa
pop
mov
call
sbb
cmp
and
pop
lcall
or
dec
hlt
out
inc
stos
fwait
bound
mov
repz
adc
sub
jg
movsl
adc
mov
push
dec
cmp
dec
scas
je
push
je
sub
cld
add
or
and
in
jg
cmp
inc
jle
mov
bound
fmuls
push
lret
in
xchg
push
mov
jb
mov
and
pop
mov
sti
fs
xchg
cmp
jle
add
emms
push
cmp
or
pushf
sti
xor
loop
lods
add
jno
das
decl
lret
popf
xchg
mov
lret
lret
or
or
in
xchg
sbb
cmp
loope
stc
mov
mov
pushf
ja
clc
arpl
scas
test
lock
push
negl
jae
inc
add
das
loopne
lret
lock
xor
dec
inc
add
lods
aad
sub
fst
xchg
adcl
inc
adc
push
pop
enter
icebp
mov
in
xchg
shlb
xchg
iret
arpl
sahf
xchg
mov
inc
gs
push
xor
dec
inc
bound
add
push
mov
call
push
jae
push
in
adc
cmp
jnp
std
stc
jae
mov
xchg
and
xlat
push
hlt
sar
movsl
jno
mov
mov
pop
fdivl
add
adc
std
and
add
push
test
push
mov
les
sub
leave
lahf
adc
and
adc
inc
aam
test
test
dec
std
pop
xlat
add
mov
xchg
int
imul
mov
adc
mov
xchg
mov
test
fs
ss
xchg
inc
mov
lcall
cmpsl
or
jno
mov
cltd
xchg
mov
lea
pop
pop
arpl
scas
adc
mov
stos
cmp
cwtl
cld
cmpsb
push
mov
xor
test
push
test
lods
and
xchg
lahf
idivb
inc
pusha
sub
sbb
jae
mov
jbe
pop
cltd
push
arpl
sub
mov
adc
dec
jnp
dec
bound
movsb
into
lds
jne
call
imul
addr16
insl
fmuls
out
aad
xor
cmp
sahf
push
cld
ljmp
add
sbb
sbb
adc
fcomps
imul
lock
loopne
sahf
cltd
fiaddl
or
lock
iret
add
pop
imul
in
jg
pop
cmp
pusha
jno
and
or
shrl
dec
inc
mov
lock
lret
and
cmc
repnz
inc
ror
mov
mov
cmp
pop
cmp
lds
adc
sti
sub
stos
dec
fdivr
pop
adc
insl
iret
ljmp
addr16
lcall
dec
mov
sbb
sbbb
clc
jb
pop
mov
dec
mov
mov
rorb
sbb
xchg
xchg
add
cmp
loop
pop
out
enter
xchg
out
mov
lret
ljmp
arpl
cwtl
scas
scas
lods
or
or
pop
mov
shr
shll
dec
fisubrl
push
lock
out
scas
mov
dec
xchg
xchg
pop
data16
leave
pop
test
xchg
lods
push
dec
xchg
lods
xor
dec
test
dec
ret
aaa
xlat
shlb
lret
bnd
ret
cmp
repnz
cmp
fucomip
jno
xor
stos
push
pop
mov
idivl
mov
or
insl
sub
das
aas
fidivrs
mov
icebp
rcrb
mov
dec
pop
jge
inc
cmp
in
mov
scas
cld
cmp
jb
add
incb
add
shr
xchg
into
xchg
push
arpl
cs
or
adc
jmp
push
das
addr16
lcall
inc
sub
loop
sub
enter
inc
sbb
rclb
ds
mov
aaa
es
and
pop
out
jp
ljmp
out
sub
xor
jmp
psubw
aaa
adc
inc
insl
loop
and
adc
mov
imulb
dec
sahf
cmpsb
filds
cmpsb
mov
sub
fistl
icebp
popf
out
adc
inc
mov
out
push
or
jp
cs
test
scas
or
or
sti
push
cmp
andl
loopne
inc
int3
mov
test
and
pusha
mov
shrb
dec
fiaddl
pop
pop
push
jns
inc
shrb
xchg
cmpsb
das
icebp
cmpsb
sahf
xlat
lock
sbb
push
dec
iret
xor
mov
mov
in
xor
and
inc
jnp
mov
sbb
and
call
out
push
leave
jno
adc
push
adcb
dec
lahf
pop
ss
and
cmc
int3
xchg
cs
mov
rol
and
push
pop
int
lods
mov
jge
repnz
lahf
fiadds
jecxz
into
enter
add
push
das
xchg
cmpsb
or
in
inc
and
cmp
sbbb
test
push
jl
xor
gs
addl
or
movsb
mov
repnz
scas
lock
adcl
cmp
aad
stos
je
into
out
nop
or
add
jb
jb
hlt
sbbl
pop
xor
mov
into
hlt
adc
inc
or
sahf
push
cwtl
xor
mov
and
cmc
rclb
outsl
in
xchg
js
xor
pop
adc
leave
cmp
mov
lahf
ss
or
jle
leave
adc
pop
cmp
push
cli
scas
xor
ljmp
adc
xorb
mov
lods
in
cmpsl
insl
xor
and
and
mov
adc
dec
dec
xor
pop
mov
mov
into
aas
sbb
fsubrl
push
mov
adc
insb
repnz
leave
stc
insl
in
xor
and
stos
jb
decl
pop
jge
pop
repnz
pop
mov
pop
insb
movsb
out
mov
cmc
xor
arpl
repnz
jmp
pop
loop
ss
hlt
adc
dec
sar
pop
ror
jle
andl
lahf
div
scas
cmpsb
rcrl
mov
push
hlt
or
stos
push
int
imulb
xchg
rclb
fisubs
mov
mov
sbb
mov
xlat
clc
fisttpl
xchg
pop
stos
int3
rclb
pushf
add
push
ljmp
lret
outsl
stos
cmpsl
push
js
or
scas
scas
out
scas
xchg
cmp
fiaddl
xor
pop
pop
dec
inc
or
daa
push
push
adc
mov
pop
testb
cwtl
inc
loopnew
mov
cli
sbb
aam
in
loope
dec
xor
jmp
out
out
xor
repz
iret
sahf
xor
pop
data16
push
xor
in
inc
xchg
cmpsl
mov
cmp
push
jns
arpl
mov
cltd
push
mov
stos
cwtl
xchg
add
mov
xor
xchg
ljmp
test
out
into
pop
and
sub
dec
loopne
sbb
test
jno
daa
fisttpll
ds
cmc
mov
adc
imul
and
inc
out
add
cli
dec
inc
sub
ja
jge
dec
pop
or
mov
ja
ficomps
or
xchg
dec
je
popf
fwait
int
insb
fmuls
inc
inc
scas
lock
adc
lret
jp
or
xchg
loopne
xor
orb
push
mov
invd
jecxz
bound
ss
or
sub
sahf
inc
inc
jge
pop
fnsave
lock
fchs
int
sbb
std
sub
xlat
sbb
lds
adc
dec
cmp
or
mov
ja
push
jno
loop
jle
push
or
inc
and
out
xchg
pop
in
add
into
inc
pop
into
xor
pop
dec
hlt
dec
lock
xchg
pop
sti
push
jne
jb
rorb
push
imull
ljmp
push
aad
mov
dec
faddl
out
pop
dec
pop
xor
push
xchg
jb
inc
pop
fisttpl
mov
movsb
mov
pop
or
fimuls
test
sub
pop
rcl
shrl
nop
stos
and
les
inc
icebp
cmp
out
pushf
fstpl
test
in
xchg
jge
jnp
mov
lea
test
aas
sbb
dec
push
mov
jecxz
inc
outsl
mov
and
aaa
ss
xor
and
fidivrl
fcomps
and
push
sub
movsb
jnp
arpl
pop
insl
pop
ds
or
lcall
stc
cld
jo
gs
jno
mov
xor
std
out
jns
push
fidivrl
mov
les
or
int
cmc
loop
sarl
mov
fisubl
and
inc
sub
enter
movsb
push
call
iret
imul
xchg
push
loope
hlt
xchg
aam
mov
sbb
jecxz
fbstp
mov
lret
loope
adc
inc
mov
mov
jecxz
or
or
aad
out
add
cli
loop
int
cli
out
mov
push
cmp
jae
insl
push
mov
mov
loope
add
jnp
movsl
adcb
fstl
pop
loop
pop
and
fidivrs
int
cmpsl
mov
jmp
or
or
inc
push
out
mov
lcall
in
sub
mov
notl
addr16
add
test
pop
sub
inc
test
fistl
int3
mov
fsubl
lret
inc
mov
mov
out
add
or
push
or
nop
pop
mov
pushf
add
repnz
inc
cltd
jle
adc
lret
dec
jne
hlt
mov
inc
cmp
loope
cmp
lret
ljmp
movsl
dec
into
cmp
pop
clc
mov
arpl
mov
lret
cmp
xor
clc
gs
jne
fwait
and
and
jo
ss
stc
sti
cltd
sub
fwait
cmp
fsubs
xchg
insl
jno
and
inc
and
mov
and
int3
out
imul
xor
mov
xorb
stos
pop
or
mov
xor
cmp
mov
add
pop
push
test
pop
enter
or
mov
sub
push
dec
out
push
sbb
stos
movsb
out
cmp
jp
in
lock
mov
ds
jb
es
lock
cmc
gs
push
ljmp
xchg
xor
add
lret
sbb
push
loopne
jae
rcrb
mov
sub
pop
mov
inc
push
clc
push
ss
jecxz
stc
in
pushf
or
cld
in
je
mov
pop
sbb
adc
cld
movsl
in
add
cli
mov
mov
or
ss
data16
pop
repnz
test
hlt
negl
ljmp
enter
repz
lret
aad
mov
add
stc
rclb
add
sbb
push
sbb
jns
lock
or
into
les
or
push
or
je
adc
xchg
push
and
cmp
mov
std
add
mov
pop
jo
jl
mov
push
loop
lea
jb
int
or
push
sbb
daa
or
add
mov
sbb
mov
rcr
leave
int
jmp
int
cmpsb
jo
xlat
clc
js
in
mov
std
mov
or
mov
push
mov
out
mov
shrb
mov
ja
call
inc
pop
add
or
imul
push
movsb
rolb
sub
insl
jge
xchg
or
decb
cld
jle
lea
rol
inc
jbe
cwtl
or
dec
outsl
insb
stc
pop
mov
pop
sub
cmp
push
call
jmp
stos
pop
outsb
push
shrl
insl
pop
adc
adc
xor
cmp
insl
icebp
add
std
mul
jg
hlt
fidivrs
cmp
cmp
repz
incb
mov
lods
xor
leave
pop
mov
push
dec
iret
sbb
cltd
cmp
ja
xchg
ja
pop
inc
dec
sti
xchg
or
cmc
inc
jno
and
add
divl
mov
dec
or
sub
imul
iret
inc
mov
push
xchg
push
mov
fisubs
adc
iret
mov
push
cmp
mov
sbb
stc
mov
int
add
jle
rol
sub
popl
sbb
sbb
jae
js
mov
pop
add
sub
imul
mov
cwtl
or
int
mov
clc
fisttpl
mov
or
cmp
adc
std
in
jmp
jns
jnp
mov
fistpll
cmp
mov
mov
test
push
inc
inc
stc
cmpsl
int
insb
push
scas
inc
mov
adc
and
cltd
in
mov
sub
xchg
imul
push
mov
data16
test
aad
insb
out
icebp
xchg
and
popf
cltd
loope
jge
call
movsb
sbb
addb
inc
sbb
in
mov
adc
mov
xor
rcrl
inc
popf
fisubrs
lods
inc
xchg
fdivl
push
cmp
adc
inc
sbbl
cmpsl
push
sbb
mov
aam
popf
mov
out
push
insb
lea
and
divb
test
int
lret
clc
fucomi
xor
dec
adc
cli
mov
cmc
popa
mov
in
out
xchg
arpl
jl
cltd
insl
mov
aas
add
pop
push
dec
sahf
hlt
data16
ficoml
xor
pop
sbb
lea
loope
stc
adc
pop
iret
inc
aas
mov
adc
sbb
loopne
shl
and
repnz
ds
fildll
sahf
xlat
pop
mov
dec
ds
mov
repz
dec
les
int
roll
cmp
repz
outsl
or
xor
or
pop
or
aam
mov
inc
inc
mov
lock
lods
pop
cmp
mov
xor
add
dec
out
rolb
mov
jle
sahf
imul
xchg
in
outsl
lret
aam
push
mov
in
add
sbb
jns
cmc
iret
jl
adc
jb
push
pushf
outsb
leave
sar
adc
ss
mov
mov
imul
jns
data16
cmp
jnp
loope
push
out
sub
add
and
adcl
dec
xchg
or
data16
test
loop
push
adc
ret
push
call
inc
jp
hlt
xchg
xor
clc
popa
mov
orb
addr16
cmp
xor
das
pop
bound
fisttps
and
retw
jle
mov
scas
mov
adc
mov
ss
iret
repnz
mov
cli
in
fists
int3
jb
jl
add
int3
mov
aas
test
test
insl
addr16
jo
aas
loope
out
jbe
insb
loop
aam
and
insl
dec
add
fidivrl
and
cli
and
ret
cld
icebp
mov
add
call
xchg
cmpsl
cmp
in
enter
loop
xor
cmc
iret
or
testb
pop
je
std
hlt
jp
push
cmp
popf
out
sti
adcb
hlt
push
mov
nop
mov
mov
push
mov
insb
jnp
pop
call
xor
push
pusha
push
push
mov
je
xor
jnp
dec
mov
hlt
stc
adc
lcall
enter
sbb
fimull
push
or
sbb
xchg
movsb
or
mov
inc
mov
fs
pop
mov
cwtl
mov
push
adc
xor
add
push
mov
in
sbb
out
push
inc
jecxz
add
inc
enter
lea
cmp
ljmp
in
lock
iret
dec
pop
aam
cs
pop
xlat
push
shlb
add
in
in
and
ret
icebp
lds
and
dec
jg
push
mov
int
aam
mov
jb
pop
je
mov
push
jb
loop
add
pop
cmc
push
cld
cmp
scas
jle
add
daa
push
insb
xchg
in
sbb
jmp
shlb
cld
mov
clc
loope
ss
and
cmp
lahf
pop
movsb
icebp
f2xm1
div
pop
and
movsb
fidivrl
inc
mov
jmp
aas
clc
in
shrl
ljmp
mov
push
push
mov
mov
jl
xor
sbb
bnd
mov
xchg
mov
js
pop
jle
push
sbb
test
add
cmc
push
repnz
xchg
loop
adc
imul
in
loope
push
sub
adc
jg
dec
stos
or
dec
xchg
clc
nop
jp
aam
daa
icebp
rcrl
out
push
lret
lret
stc
dec
jmp
fs
ja
test
in
sub
jp
imul
sbb
ja
ds
fwait
push
jp,pt
mov
pop
insl
cltd
shl
add
dec
test
pop
dec
cmp
pop
push
dec
sti
or
dec
xchg
xchg
or
xor
lcallw
addr16
sub
and
pop
jg
mov
mov
mov
js
xchg
lods
pusha
add
cmpsl
lcall
sub
dec
jbe
jne
xchg
mov
fsts
adc
jle
sbb
sar
les
inc
cmp
inc
mov
adc
pop
aas
std
mov
and
cwtl
stos
roll
div
pop
mov
fildl
mov
repnz
arpl
cwtl
in
jnp
cmc
popa
mov
xor
stc
mov
arpl
fbstp
cmp
cld
pop
xlat
aaa
jne
pop
lods
lds
stc
fs
sbb
mov
push
out
push
ds
mov
mov
fs
and
mov
sbb
cmp
les
inc
xchg
data16
lretw
das
sub
and
fcomip
jecxz
cmc
pop
xchg
sbb
negb
mov
xor
jp
xor
test
sbb
out
pop
cmpsl
das
arpl
insb
inc
xor
shrb
clc
xchg
imul
jne
out
mov
sbb
pusha
mov
leave
adc
jb
in
iret
mov
call
iret
clc
or
pop
mov
int
aaa
shll
imul
adc
cmp
pop
sbb
add
scas
adc
mov
cmp
add
popw
pop
les
lret
data16
inc
iret
dec
sub
out
sarl
in
xor
insl
add
cmp
mov
test
cmp
cmpsl
xor
test
sub
sub
xlat
push
adcl
inc
loope
out
add
jmp
loopne
imulb
scas
dec
mov
sbb
and
adc
inc
mov
cmp
cld
adc
lcall
jecxz
jg
icebp
cld
adc
xchg
addl
rorl
mov
outsb
push
sbb
test
movsl
jo
mov
ljmp
mov
add
add
adc
and
mov
pop
xchg
or
fcmovnbe
push
mov
xchg
insl
push
mov
enter
xchg
mov
ret
ss
shlb
or
ljmp
pop
push
jnp
xchg
sbb
js
inc
out
lods
shr
in
cmp
push
testl
sub
nop
stos
test
or
ret
dec
cmc
jb
jmp
lea
icebp
in
add
push
xor
xchg
test
in
lock
dec
mov
ret
fadds
aas
fiadds
push
out
xor
je
add
cmc
or
fs
jecxz
jae
int
jnp
into
add
and
mov
mov
or
out
test
lods
and
push
cmpl
and
jl
jb
or
nop
jno
jp
jcxz
lock
mov
out
sti
add
call
lock
and
xor
negb
out
or
jmp
out
xor
add
divb
cmp
std
pop
jnp
bound
mov
sar
mov
lea
sbb
add
and
or
ljmp
xchg
mov
aaa
in
or
cmpsb
loope
add
cmpsl
pop
fisttpl
pop
add
test
clc
cmp
push
cmp
xchg
xchg
sarb
icebp
xchg
movsl
xor
insl
jg
outsb
mov
cmp
lds
pop
mov
or
inc
pop
add
and
cs
lahf
daa
xor
je
cmp
out
gs
fwait
or
outsl
fbstp
inc
adc
xor
mov
mov
inc
repnz
sub
cmp
aas
inc
or
xchg
scas
incb
test
xor
shr
std
je
imul
lea
gs
jp
test
imul
sub
sub
and
in
xor
call
loop
popa
cmp
pusha
or
hlt
test
xchg
or
and
insb
ljmp
pop
pop
stos
fdivl
jne
adc
mov
or
mov
cmp
cmc
and
xchg
pop
jge
repnz
in
lds
xchg
inc
push
adc
or
cmc
aas
call
repnz
aam
testl
test
movzbl
repz
in
jnp
cmp
mov
sar
jecxz
cmc
fcompl
testb
mov
test
add
xchg
mov
or
or
jg,pt
pop
fmulp
shll
shr
jl
out
mov
push
adc
stc
and
xor
push
inc
fdivs
int
shll
call
xlat
add
and
mov
push
jbe
in
das
pop
lahf
lods
and
cwtl
movsl
into
aam
mov
aas
mov
xor
dec
jmp
test
push
scas
push
sbb
cld
loopnew
test
push
hlt
je
jmp
ficompl
sbb
inc
mov
xor
push
test
cmc
clc
xor
popa
mov
jmp
push
jnp
fucomp
mov
addb
adc
pop
cmp
cmp
addr16
mov
loopne
les
pusha
aaa
fs
jl
cli
and
xor
ret
inc
dec
aad
jle
out
testb
mov
rcll
je
test
jae
loop
rorl
push
xor
dec
pop
es
mov
add
jge
es
xchg
push
scas
xlat
push
aam
cltd
jne
mov
sahf
cld
popf
push
lods
inc
imull
push
or
aam
jne
xor
repz
push
insb
or
xchg
rol
xor
xor
test
lcall
or
sbb
dec
or
data16
orl
out
jg
pop
mov
jne
pop
xchg
pop
cmc
adc
cltd
les
sbb
push
xchg
or
fs
test
test
mov
fstps
std
xchg
mov
movsb
lods
das
paddsb
sti
pop
pop
jno
inc
pop
mov
xchg
ret
popa
xchg
test
pop
push
pop
fiaddl
cs
repz
imul
add
movsb
outsb
mov
pop
inc
jmp
mov
xchg
xor
mov
stos
mov
xorl
cld
xor
xorb
xchg
and
lock
aaa
cmpb
in
jbe
lods
in
mov
arpl
popa
icebp
sbbb
in
mov
cmp
popa
fistpl
out
mov
jmp
xchg
or
ss
and
into
cmc
insl
inc
sbb
adc
sarl
jne
dec
xlat
loop
push
fstpl
jmp
push
cmp
repz
push
mov
pop
clc
lahf
cmp
mov
in
imul
mov
or
int
js
out
mov
pop
bound
sub
pusha
jns
out
movsb
test
mov
loopne
jbe
fcmovnu
mov
or
stc
out
lock
inc
jmp
or
pop
xor
setbe
out
or
hlt
fldt
rcrl
mov
test
orb
fcmovne
sbb
cltd
shll
or
sti
jecxz
push
mov
inc
in
mov
or
sbb
ds
jge
and
into
outsl
mov
in
loop
clc
xor
daa
xor
fnstenv
fsubrs
adc
sti
push
ror
pushl
imul
addl
mov
rcll
nop
cwtl
cmp
enter
mov
loop
mov
pop
xor
add
dec
cmp
adc
sub
or
mov
aam
mov
mov
mov
dec
pop
pop
popa
jne
xor
mov
stc
or
jne
loope
cltd
mov
in
shlb
enter
repz
jmp
cmpsl
je
mov
cli
mov
out
xlat
mov
pop
sub
push
adcb
or
sub
or
dec
mov
mov
jmp
xchg
ds
and
or
hlt
pop
aaa
and
sbb
pusha
repz
push
sbb
mov
mov
xor
test
pop
sbb
aaa
xchg
stc
pop
dec
call
dec
mov
jp
popf
in
or
fsubrl
addr16
test
sbb
in
sbb
xor
cmp
pop
stos
xor
movb
scas
xchg
sbb
cmp
adc
imul
out
mov
outsb
mov
scas
xor
das
fiadds
cmp
push
addr16
mov
andb
add
cmpsb
jno
movl
icebp
fwait
das
call
dec
push
push
or
out
jle
fdivr
adc
in
push
xchg
jecxz
ret
insb
mov
je
add
dec
lds
ds
in
fisttpll
add
sahf
ficoms
leave
xor
lods
jne
jecxz
lea
sub
hlt
sub
loop
add
incl
push
xor
xchg
inc
xor
mov
das
pop
xchg
mov
fildll
mov
ja
ficoms
daa
sbb
mov
gs
add
inc
ret
out
int3
shl
or
or
sbb
pop
loop
push
pop
push
sbb
push
bound
pop
std
push
adc
std
adc
cmp
cwtl
or
xchg
repz
outsl
mov
push
jb
inc
mov
jnp
add
dec
int3
xlat
ja
xchg
add
dec
fs
loop
sbb
data16
lcall
mov
incb
xor
push
xor
mov
pushf
push
imul
jnp
inc
inc
xchg
adc
gs
lds
sbb
or
sub
movsb
adc
mov
sbb
aad
les
mov
xor
out
or
stc
push
cmp
inc
int
jo
and
int
adc
mov
pop
mov
mov
inc
jmp
fstpl
lea
mov
hlt
sbb
or
push
in
xor
mov
xor
clc
inc
icebp
gs
popa
or
aas
inc
cmc
xor
pop
add
stos
or
dec
je
aas
lods
xchg
scas
fnstsw
sub
inc
fdivrs
in
jbe
outsl
xor
test
sbbb
sub
xor
xor
inc
jl
lcall
adc
lock
bswap
add
ds
xchg
push
std
jb
or
or
repz
sub
dec
inc
lcall
negl
cmpsl
enter
ds
add
xchg
add
mov
mov
repz
clc
or
or
movsb
lahf
lds
les
xor
pop
std
mov
fs
fstpl
cld
dec
dec
pusha
xchg
jle
and
fsubl
fwait
push
mov
iret
movsl
aad
xchg
ljmp
fcomps
xchg
mov
fdivl
or
loope
dec
out
lock
outsb
sbb
jb
jo
in
push
sub
arpl
mov
add
pop
nop
mov
rorl
sti
xchg
dec
insb
cwtl
push
fwait
cmp
mov
fimuls
lret
jno
in
cmp
cmp
movsl
adc
push
aam
mov
xor
cltd
clc
rcrb
icebp
xor
stc
inc
repz
das
aaa
or
lret
dec
mov
dec
clc
mov
scas
jmp
ret
das
in
out
popl
push
adcl
sbb
popf
in
pop
jb
jp
push
notl
pop
dec
inc
into
mov
repz
sbb
fdivs
jns
aas
cmc
loopne
push
jl
repnz
sbb
jmp
ret
cmp
test
in
fdivrl
repnz
subb
stos
dec
into
popf
out
jo
fadd
add
cltd
js
and
add
bound
xchg
ret
cli
pop
sbb
or
movsb
adc
push
repz
out
and
lahf
mov
jge
pop
std
movsb
test
pop
cmovle
mov
aam
cmp
sbb
in
fcmovnu
aaa
gs
cmc
stos
jmp
xlat
cmpb
imul
test
mov
cmpl
clc
ficomps
cs
fistpl
out
shlb
int3
xor
mov
cmp
mov
pop
test
fsubrs
dec
mov
lods
rcr
inc
sbb
inc
movsb
mov
pop
mov
ja
leave
cmp
xchg
dec
repz
push
inc
leave
call
and
sbb
sub
daa
clc
mov
push
std
movsl
insb
mov
lret
and
add
and
inc
xor
push
pushf
xlat
ljmp
and
pop
les
je
push
fnstsw
sbb
or
mov
xchg
fbstp
test
and
dec
mov
push
outsb
mov
sub
ret
dec
mov
ja
incb
mov
add
add
adc
mov
mov
insb
sub
test
cltd
mov
cwtl
pop
cmpsb
mov
aaa
mov
jge,pn
arpl
mov
inc
add
wrmsr
jnp
or
inc
int
inc
adc
repz
scas
jmp
subb
test
xor
shll
mov
dec
push
pop
add
xchg
mov
dec
test
jb
or
mov
xor
mov
cmpsl
cmp
bound
sub
mov
adc
cli
mov
aad
fimuls
pushf
cmc
jae
enter
pop
int3
push
push
out
inc
push
pop
lret
sub
arpl
movsl
hlt
jmp
pop
mov
jmp
lds
push
mov
test
outsl
cmpsl
adc
lret
flds
or
fsubrl
inc
gs
and
inc
loopne
in
adc
pushf
sbb
mov
pop
test
mov
dec
popa
mov
enter
js
rclb
and
and
mov
jns
adc
mov
sarl
test
or
movsl
cmpsl
dec
mov
test
js
test
dec
stc
push
lock
sbb
cli
sbb
pop
ret
inc
rolb
repz
out
mov
dec
outsl
sbb
push
repnz
clc
mov
and
cld
sbbl
xchg
lret
imul
xchg
mov
and
icebp
mov
sbb
inc
adc
movsl
xchg
xchg
cld
sarl
mov
ficoml
and
pop
mov
push
cmp
imul
js
add
sti
in
cmp
cmp
mov
lahf
lret
insb
and
mov
cwtl
cwtl
sub
movsb
insl
xchg
xor
or
cmp
mov
xor
dec
aam
xchg
xor
and
lods
or
bound
inc
sub
aam
gs
decl
fs
arpl
imul
and
pop
lcall
push
call
repnz
sbb
cwtl
dec
or
stc
dec
addl
lock
xlat
addb
inc
shll
fmuls
out
sti
icebp
gs
stos
mov
jo
pop
lret
mov
push
movsl
sub
aaa
pusha
xchg
or
fxch
xor
rcr
cmpsb
add
adc
xchg
push
call
xchg
push
and
sti
shrl
push
fst
mov
inc
push
xor
push
repz
push
scas
in
mov
ss
mov
pusha
mov
pop
xor
and
mov
jbe
and
xchg
cli
loope
aad
loopne,pn
sbbb
pop
sub
push
lock
pusha
shll
inc
cmp
out
dec
mov
call
cmovno
icebp
test
lds
mov
or
test
popl
arpl
aad
xor
and
rcl
cmc
stos
fwait
call
stos
push
sahf
push
push
cmp
mov
dec
lcall
out
int
push
and
cmp
and
in
cmc
test
mov
cli
mov
dec
xor
enter
mov
cwtl
repnz
cltd
sarl
and
jmp
in
repnz
cld
outsl
sub
sbb
fcmovnu
shlb
push
hlt
std
inc
dec
jmp
push
adc
adc
das
inc
stc
inc
stos
sarb
stos
mov
sti
ret
hlt
dec
repz
js
fwait
call
or
push
sub
or
adcl
jnp
add
pop
xchg
pop
mov
aam
lret
scas
mov
fidivrl
jno
test
popa
lods
jle
pop
repz
xor
inc
cld
and
pusha
fimuls
out
sti
iret
fwait
stos
cltd
lock
rep
pop
sbb
in
sbb
jp
ret
mov
or
rcll
jmp
adc
inc
or
mov
orl
jo
xchg
xchg
in
cld
aaa
data16
cmpl
dec
mov
ljmp
pop
in
fmulp
jmp
sub
push
jmp
gs
fsubl
adc
cmp
ror
xor
and
dec
jae
sbb
jmp
sbb
push
lahf
xchg
fisubrl
and
xchg
lock
sbb
data16
cld
lods
jmp
jmp
mov
lock
pop
push
mov
mov
dec
mov
enter
xchg
mov
push
sub
push
lods
inc
lcall
inc
pusha
notl
mov
or
sbb
or
mov
icebp
fidivl
dec
pop
aaa
sbb
sbb
sahf
jp
push
cmp
mov
xor
aam
and
push
adc
xlat
sbb
scas
cli
popa
push
mov
or
mov
pop
push
clc
ror
add
cs
mov
loopne
mov
xchg
xchg
pop
jle
jge
test
loope
insb
xor
cmp
adc
mov
insb
mov
out
inc
clc
aas
jg
ds
sub
push
sbb
enter
scas
stos
sbb
imulb
test
and
mov
xchg
rclb
lods
movsl
lods
push
nop
and
fcmove
lcall
repz
fdivp
dec
in
sub
push
mov
jns
in
push
mov
pop
mov
and
fistpl
or
sub
ss
xchg
enter
sti
fdivr
sub
pushf
fldenv
iret
ljmp
addr16
cmpsb
in
cld
jle
pop
imul
in
je
lds
push
test
mov
mov
gs
imull
lods
add
push
enter
mov
ljmp
loopne
pop
aad
mov
lds
push
out
sbb
mov
dec
push
add
shrl
cmp
sub
rcl
and
mov
loop
inc
sti
jo
xor
dec
jmp
outsl
sub
icebp
mov
mov
clc
cmp
inc
data16
js
stos
movsl
ret
loopne
mov
mov
int3
sub
jg
repnz
inc
xchg
divb
stos
adc
test
sti
mov
repnz
dec
fldenv
jne
popf
dec
sub
aam
pop
cmp
adc
sbb
loopne
shll
push
call
cli
sub
testb
inc
clc
hlt
adc
xchg
dec
leave
test
fwait
out
pop
in
test
xorl
mov
jbe
andl
xchg
daa
mov
xor
inc
xor
push
test
aas
lds
jno
outsb
call
call
cmpsl
pop
sbb
add
jmp
pop
xor
test
and
mov
cmpsl
fs
inc
call
dec
repnz
push
fcompl
clc
sbb
push
clc
mov
jb
int3
xor
dec
sbb
andl
int
sub
inc
add
cmpb
data16
out
mov
xor
mov
inc
inc
in
cmp
shrl
shll
mov
push
xorb
lea
ja
cmp
mov
push
enterw
xor
mov
mov
adc
dec
push
push
test
sbb
and
push
shr
test
or
dec
iret
cld
inc
aas
jge
xor
mov
ret
dec
sti
fmuls
sub
out
fdivrs
fwait
cmp
jo
test
pop
and
or
ljmp
dec
sbb
dec
inc
popa
xchg
and
out
jnp
out
scas
test
repnz
lea
jge
mov
mov
mov
loopne
lods
lods
xchg
inc
pushf
loop
stc
sbb
xchg
sets
scas
sahf
sbbl
je
and
xor
cmp
fwait
cld
repnz
dec
add
and
xchg
push
jl
jne
xor
add
inc
les
rorb
leave
inc
nop
push
dec
lret
sub
cmc
loope
mov
xor
pop
mov
or
icebp
add
cld
cld
or
pop
repnz
jmp
repz
int
loope
iret
cmp
jle
std
sbb
pop
xor
les
xor
je
xchg
or
dec
cmp
out
daa
and
push
or
xchg
stc
bound
test
movsb
dec
push
push
je
pushf
fwait
mov
jb
xor
sbb
jmp
add
test
pop
jmp
fisubl
adc
int
in
sbb
scas
cmc
add
jmp
mov
inc
test
cmc
imul
pop
push
test
mov
mov
sub
imul
push
xor
sbb
ret
push
sbb
icebp
push
push
ljmp
mov
mov
out
pusha
imul
cmp
icebp
cltd
call
mov
push
cld
add
test
stc
jp
and
pop
or
xchg
cmp
cmc
insb
in
cmp
mov
xchg
and
hlt
jg
pushf
dec
fiaddl
add
mov
xchg
add
jg
adc
lds
subl
pop
shl
pop
sarb
or
inc
and
ret
fwait
jecxz
mov
mov
enter
dec
shrb
xor
nop
xchg
mov
sbb
push
sbb
outsb
std
lods
outsl
ljmp
scas
inc
test
dec
xchg
popa
sbb
aam
dec
mov
fprem1
and
mov
insl
mov
or
imul
aad
fadds
mov
mov
dec
clc
cld
imul
push
jge
add
sbb
xchg
lock
push
lcall
js
mov
add
call
mov
popa
cld
push
dec
xchg
repnz
es
cmp
call
mov
add
ficoms
stos
pop
mov
out
rcr
out
cmpsb
sti
jge
adc
mov
adc
ss
mov
lcall
push
jge
lret
loope
outsl
into
mov
mov
adc
int3
lcall
rcrl
xor
xor
xor
xor
in
js
adc
sahf
mulb
out
mov
lea
repz
cld
roll
cld
call
hlt
mov
push
cltd
add
test
icebp
ret
js
pop
das
mov
mov
sub
out
xchg
push
add
xor
sbb
mov
vmread
sbb
cmp
push
arpl
sbb
add
mov
mov
xor
dec
inc
stc
aam
add
rorb
jge
inc
cmp
shll
fmuls
cli
repnz
outsl
cmp
or
out
cmp
sarl
or
add
xchg
in
pop
adc
ljmp
int3
ljmp
in
iret
mov
dec
add
je
pop
dec
cmp
scas
xlat
cs
xor
inc
pop
lds
lcall
mov
or
pop
adc
adc
add
movsb
sahf
stos
mov
adc
mov
cld
push
adc
pop
fnstsw
ds
dec
out
repnz
push
dec
leave
or
out
mov
mov
mov
cli
and
sub
add
aam
mov
iret
frstor
mov
icebp
or
out
ljmp
loope
repz
jb
inc
scas
popl
test
adc
push
and
cmp
stos
cmp
outsl
lods
loop
shll
mov
xorl
push
repz
in
or
out
sub
dec
push
jl
test
push
test
cmp
cmp
repz
or
pusha
dec
mov
gs
cmpsb
mov
out
adc
add
mov
popf
inc
into
pop
push
push
xchg
xor
call
lea
jge
enter
push
mov
push
sub
popa
mov
push
repz
mov
nop
dec
or
adc
addb
lods
inc
mov
push
cmp
xchg
fildl
ljmp
cld
add
cmp
into
mov
repnz
xor
cli
push
inc
fisubl
cmp
pop
sub
or
loope
adc
mov
xchg
and
sub
jecxz
fdivs
ret
jg
or
push
lods
mov
lahf
fcoms
mov
cmp
mov
fwait
pushf
push
es
pop
inc
mov
push
jl
cs
scas
addr16
jo
fwait
jmp
adc
sbb
sub
pop
adc
dec
jo
mov
mov
pop
je
movsb
imul
xchg
stos
out
xchg
icebp
pop
fldcw
fsubs
mov
adc
lock
je
dec
pop
cwtl
mov
bound
add
jb
sub
jmp
sbb
nop
xchg
jae
xchg
sbb
lahf
xor
mov
pop
imul
lret
push
rolb
loope
inc
mov
arpl
int
cmpb
mov
std
adc
push
fcomi
jns
iret
jecxz
fwait
push
mov
mov
inc
loop
dec
scas
bound
ret
mov
int
mov
insb
popf
inc
addr16
fmuls
push
lds
addl
sarl
daa
stos
jno
je
adc
rcl
cmpsb
notb
sub
outsb
aad
adc
stos
stc
repnz
xor
xchg
xchg
int3
outsb
mov
test
xchg
mov
call
mov
inc
pop
shr
add
or
sbb
jl
mov
sbb
mov
in
dec
shl
fwait
shrl
mov
push
mov
sub
stos
mov
and
ds
imul
or
mov
mov
jge
ljmp
jae
add
pop
loope
ds
loopne
mov
mov
loopne
call
or
repz
mov
push
push
or
xchg
rcll
mov
cmp
into
pop
sbb
pop
dec
aas
es
je
dec
ja
jne
sbb
push
mov
push
dec
out
rorb
inc
mov
mov
inc
mov
stos
pop
xchg
and
fs
pushf
rcll
stc
cmp
aam
cmp
popa
or
test
and
shrb
inc
mov
mov
mov
pop
int
fwait
and
mov
dec
or
testb
mov
pop
aas
jne
loope
cmp
fwait
std
add
cld
sbb
add
jl
cwtl
bound
jp
adc
adc
mov
mov
mov
ljmp
push
rclb
or
imul
sbb
dec
imul
lds
shl
outsl
sub
vpavgw
sub
out
ds
and
bound
test
mov
cmc
fisubrs
fcmovb
push
adc
xchg
movsb
loop
cld
and
dec
xchg
pop
or
xor
lds
fldcw
adc
es
cmc
cli
sbb
in
lret
pop
adc
aaa
or
mov
loopne
addr16
stc
jae
add
imul
fcoms
test
mov
int3
loop
sbb
std
push
xchg
push
mov
in
icebp
cmp
insl
xor
insb
iret
push
inc
mov
jne
add
or
jmp
lods
popl
jmp
mov
and
or
cmpsl
ljmp
sub
jle
sbbb
cwtl
xchg
std
jo
and
ret
mov
pop
mov
cli
mov
rcrl
ret
aad
dec
std
lock
inc
mov
adc
in
ficoml
leave
jbe
sub
jne
cli
adc
add
or
loopne
pop
dec
jbe
sbb
mov
pop
mov
sti
pop
sbb
add
lods
movl
push
mov
mov
ja
enter
inc
mov
mov
incl
into
or
shlb
int3
dec
mov
cwtl
outsb
hlt
loopne
push
or
cmp
pop
mov
int3
testb
jge
pop
pop
pop
test
sbb
mov
inc
dec
cmc
add
scas
and
push
aas
out
sbb
xor
hlt
and
out
jle
int3
rcrb
jo
sbb
loopne
mov
mov
stos
sbb
loopne
ljmp
add
outsl
cmp
pusha
loope
jnp
imul
inc
and
or
or
mov
xchg
add
and
jbe
into
test
pop
ljmp
adc
xor
xlat
subb
or
andb
jge
mov
add
mov
or
push
les
jb
fstpl
adc
shlb
in
and
loopne
loop
sub
sahf
in
std
in
mov
mov
mov
pop
divl
mov
cltd
shlb
xchg
pop
push
fistpll
repz
push
icebp
adc
ret
std
cld
fnsave
fcmovnbe
push
xor
cmpsl
sbb
enter
js
stc
add
xchg
popa
add
or
inc
int3
push
inc
ret
mov
xlat
fdivp
mov
sub
cli
jo
sti
cli
fs
adc
imul
adc
dec
fsubl
sar
je
cmp
mov
out
cld
orb
fcmovnb
dec
into
ror
movsb
pop
dec
push
repz
sbb
icebp
push
mov
out
mov
dec
aam
inc
cwtl
repnz
sbb
mov
or
mov
sub
cmp
jns
and
hlt
and
cld
and
or
ror
cli
hlt
je
xchg
sbb
mov
fnstenv
jb
movsl
es
iret
data16
xchg
es
cmc
cmp
out
inc
push
out
fdivl
leave
repnz
ds
pop
or
mov
or
aad
dec
mov
int3
sbb
mov
std
hlt
enter
clc
ficoms
jb
mov
mov
mov
mov
rolb
pop
ret
cwtl
jmp
jno
test
iret
dec
movsb
lods
xorb
in
dec
mov
fildl
mov
jl
push
pop
jno
lock
fdivp
mov
or
pop
xlat
arpl
scas
mov
jl
mov
jb
adc
fdivrs
ljmp
pmaxub
popa
sbb
ret
xchg
inc
push
xor
popf
fwait
adc
loopne
inc
leave
repnz
pop
icebp
mov
inc
pop
or
aaa
cmp
push
xor
into
ret
adc
pop
or
xchg
leave
jmp
out
mov
xchg
jl
je
lret
std
insb
xchg
repz
rcrb
xchg
inc
and
ret
ret
cmp
jmp
dec
adc
out
sub
adc
xor
hlt
data16
jnp
ret
jmp
add
dec
jmp
into
ljmp
scas
jle
xchg
movsb
popa
pop
or
in
mov
sub
push
addb
push
outsb
mov
aas
test
push
inc
inc
imul
imulb
mov
call
scas
adc
jecxz
sbb
ret
mov
dec
jecxz
in
cmp
jmp
or
rol
les
out
or
sub
ljmp
sarl
fnstsw
je
sahf
in
in
mov
rorl
fmul
mov
fimuls
int3
mov
cmpsl
jne
popa
lock
inc
in
adc
add
inc
cmpsl
adc
jno
mov
fstpl
fcoms
sub
or
inc
add
pusha
jl
cmc
pop
loop
sub
mov
cmp
cmc
ljmp
imul
xchg
imul
nop
leavew
adc
out
loope
notl
pop
in
fisubl
dec
jmp
add
cmp
in
xor
cmp
dec
sbb
cli
inc
dec
and
les
adc
sbb
test
and
dec
int3
mov
jne
push
dec
movsl
insl
xchg
push
lcall
jmp
iret
mov
stos
movsb
hlt
pop
nop
xorl
push
mov
rcrl
mov
mov
mov
shll
ja
inc
cld
roll
mov
jne
xor
rorb
push
push
xchg
xor
pop
rolb
or
sahf
ds
or
insl
mov
aaa
idiv
outsl
add
pop
xor
std
sbb
popf
imul
aaa
into
adc
std
mov
pop
xlat
gs
cmp
lretw
ss
xchg
or
adc
mov
pop
movsb
mov
adc
jmp
in
jbe
insb
iret
mov
adc
mov
stos
cmpsb
sahf
sub
xchg
ret
mov
out
lods
arpl
cltd
sbb
or
out
outsl
xor
pop
insb
jge
xor
std
mov
or
fwait
push
mov
das
lds
xor
sti
push
stc
rolb
and
orl
imul
pop
or
mov
adc
jb
jbe
inc
pop
hlt
jg
mov
jo
push
jbe
mov
in
push
push
fcompl
insb
mov
rol
push
cltd
hlt
pop
pop
push
mov
cmp
setge
pop
pop
sarl
dec
jns
sti
cmp
movsl
cwtl
dec
mov
insb
imul
push
out
cmp
sbb
push
and
idivl
sub
sbb
sarb
pop
stos
enter
loop
or
iret
xor
mov
inc
inc
cmp
daa
repz
sub
or
jnp
out
jp
ss
clc
cmp
or
movsl
push
dec
cltd
lds
addl
cli
icebp
cmc
push
lret
movsb
cmp
outsl
mov
dec
sub
push
decl
inc
hlt
jle
lods
hlt
outsl
jb
stc
scas
dec
mov
scas
push
xchg
pop
dec
lock
insl
sub
loopne
arpl
addr16
movsl
xor
xchg
mov
ja
mov
rep
ljmp
xor
dec
imul
push
push
mov
scas
dec
cmp
cwtl
xor
jo
stc
std
mov
pop
movsb
ja
scas
pusha
push
loop
stc
aas
insl
inc
xor
lea
mov
jb
pop
or
pop
push
popa
aad
fcompl
mov
shlb
mov
js
mov
jp
xlat
sti
push
stc
es
stos
cwtl
xor
add
mov
stc
inc
popa
jmp
or
in
cmc
mov
movsb
pop
jmp
inc
imul
or
rcrb
sub
push
imul
or
and
push
dec
shl
adc
jnp
int
mov
push
insb
or
lock
dec
mov
scas
jae
shrb
test
or
pop
arpl
loop
into
dec
lea
shr
sbb
insl
mov
icebp
jae
std
and
or
aas
jnp
pop
lcall
mov
mov
std
xchg
scas
aas
test
dec
addb
pop
xor
inc
pop
leave
test
sbb
jo
push
int3
shlb
or
inc
sbb
or
mov
fxam
mov
xor
xchg
push
mov
dec
mov
mov
lea
xor
push
mov
aaa
jb
pusha
sbb
cmp
std
clc
outsb
push
imul
aam
dec
scas
outsl
xor
push
fiadds
add
cmc
push
fs
mov
pop
push
test
mov
lahf
das
ficomps
pop
repz
call
inc
dec
sbb
sbb
dec
pop
push
test
in
mov
pop
lds
push
lods
xchg
test
pop
lods
jp
std
or
mov
pop
xchg
outsl
add
push
std
mov
xchg
add
dec
and
sub
fisubs
sbb
add
sub
jb
jo
jnp
xlat
mov
and
ret
xor
popa
repz
ret
pusha
or
dec
lea
sub
pop
into
inc
inc
mov
add
ret
ljmp
js
rcr
fdivl
je
loopne
fadds
pop
js
dec
les
add
or
popa
pop
add
dec
outsl
fisubrs
cmp
lret
js
xchg
jecxz
repnz
into
dec
loope
cmp
fdivrl
andb
mov
mov
jno
out
push
jge
xor
or
inc
xchg
dec
xchg
adc
xor
dec
call
lods
cmp
stos
repz
aas
int3
icebp
or
or
lahf
aas
mov
fmul
ret
push
gs
iret
xchg
cld
sti
inc
outsb
mov
sbb
jle
lods
sbb
sub
in
roll
pop
mov
push
out
mov
or
lahf
xor
dec
cwtl
into
jno
out
jno
movb
and
jl
and
or
pop
mov
xlat
fstl
pushf
or
fcos
imul
jb
mov
jg
out
mov
gs
or
shlb
push
enter
scas
pop
es
mov
movsb
jle
xchg
dec
repz
pop
or
lods
push
lods
jge
test
sbb
fs
push
push
push
dec
insl
cmpl
repz
dec
mov
dec
xchg
lods
into
sahf
or
xchg
push
repz
lcall
bound
pslld
in
in
imul
jmp
sub
loop
rcrb
int3
lds
mov
cwtl
out
inc
or
lds
les
jmp
xchg
call
pop
stos
cmpsl
scas
outsb
jno
loop
mov
adc
mov
cmpsb
ja
rcrb
insb
sbb
adc
daa
xor
cwtl
and
dec
lret
cmp
outsl
cltd
jmp
add
xchg
or
pop
pop
pop
test
mov
push
and
xor
jns
inc
mov
outsb
stc
mov
pushf
inc
or
sbb
decb
pop
adc
popf
fmuls
and
cmp
lret
pop
xadd
cmp
out
test
sti
sahf
sti
cmp
jmp
cmp
orl
jmp
inc
ss
lret
and
test
aaa
fnstsw
fimuls
sbb
jae
mov
cmc
dec
mov
aaa
or
repnz
mov
insl
aaa
jle
loop
or
inc
or
cmp
or
add
lcall
pop
imul
or
adc
ret
lret
aaa
jns
daa
sbb
inc
xor
movsb
stos
xchg
or
test
sbb
fwait
adc
mov
mov
sbb
dec
cmc
lret
daa
inc
daa
ja
inc
iret
bound
sbbb
mov
mov
sub
or
fistpl
ret
sub
xor
pop
in
stos
sub
cmpb
inc
lock
mov
push
push
mov
push
dec
out
test
push
mov
mov
rclb
fisubl
leave
mov
add
jp
lahf
jo
mov
push
mov
push
rep
mov
sub
inc
fistpl
sub
xor
movsb
jecxz
std
jb
fdivrl
push
fs
jecxz
fistpl
movsb
cmpsl
test
mov
lret
lret
stos
mov
repz
jmp
mov
or
push
mul
inc
call
add
shll
sbb
push
andb
xor
adc
push
fwait
inc
inc
mov
xor
int3
daa
ret
nop
push
sub
ss
inc
ljmp
push
loope
adc
mov
push
dec
nop
addr16
xlat
adc
pop
xchg
loope
cmp
incb
movsb
cmp
fistpll
out
dec
movsl
dec
loop
xchg
inc
xor
fidivrs
nop
shl
and
scas
jo
sbb
xor
xchg
and
lcall
push
jb
or
sub
xchg
sahf
push
sub
hlt
and
dec
out
rorb
rolb
outsl
bound
mov
in
inc
cld
jo
imul
roll
pop
mov
inc
clc
mov
xchg
dec
pop
lea
mul
and
jg
ja
mov
mov
mov
and
mov
jnp
pop
outsl
mov
xchg
mov
or
and
add
mov
sahf
mov
ret
ss
lret
or
mov
mov
loop
jns
lret
lods
mov
pop
jmp
inc
dec
dec
scas
addr16
sti
pop
dec
xchg
shlb
jb
insl
jp
out
or
jb
jecxz
add
std
popf
fdivrs
fadds
push
out
divb
mov
mov
dec
pop
pusha
in
and
mov
icebp
scas
loop
push
int3
sub
cltd
js
jmp
pop
loopne
call
lods
repz
adc
jo
pop
mov
push
ret
les
pop
stos
cmpsb
aad
stc
leave
mov
movsl
pop
mov
mov
mov
addr16
lods
dec
inc
and
or
test
sbb
sahf
push
aaa
xor
dec
mov
mov
xchg
cmp
jb
movsb
jp
pusha
mov
aaa
jl
mov
sub
adc
and
inc
bound
push
inc
mov
sbb
add
push
fidivl
rol
inc
cmc
scas
sub
cmp
adc
xchg
scas
lds
out
cmp
daa
mov
or
ficomps
xchg
and
insl
int
push
adc
call
sti
or
fsubrs
in
cmp
stos
push
clc
leave
rcl
jle
lret
dec
xchg
negl
enter
loop
mov
in
pop
pop
mov
nop
jb
mov
rcrb
data16
mov
stos
jecxz
inc
shrl
lods
sbb
je
pop
add
int3
mov
push
rcrb
int
loop
ja
dec
pop
jp
inc
and
jo
inc
pusha
dec
es
int
mov
rcll
imul
xor
insl
ds
sub
movsl
ficoms
popf
sahf
shrb
pop
cmp
mov
pop
push
mov
int3
xor
movsl
dec
into
inc
push
fucom
fs
hlt
sub
stc
sbb
inc
jo
push
sbb
or
test
push
stc
out
mov
iret
dec
or
out
xchg
cmp
jecxz
push
xchg
iret
mov
enter
mov
jg
pop
mov
movsl
fidivrs
xchg
push
push
hlt
andl
out
push
dec
mov
mov
out
push
mov
jecxz
aas
mov
fidivs
aas
pop
leave
and
loop
cmp
insb
stos
cld
jmp
jbe
jp
repz
pop
mov
sahf
subb
daa
sub
push
in
into
das
icebp
adc
mov
stc
cmp
pushf
adc
mov
push
jno
cs
les
stc
adc
enter
dec
fisubl
or
sbb
push
test
pop
sbb
outsl
rorb
fdivr
out
mov
or
mov
scas
xor
cmp
arpl
dec
mov
xchg
and
ret
test
cmp
clc
ja
fsubs
cmpsl
ljmp
stc
mov
imul
loop
add
inc
movsb
cltd
out
mov
jne
jne
in
daa
adc
gs
xor
mov
popa
ss
cmp
add
jle
scas
pop
mov
mov
sub
bound
push
xor
push
adc
cmpsl
adc
sbb
repnz
hlt
cmc
xor
xor
lds
jecxz
cld
dec
sti
ret
hlt
inc
insl
sahf
xchg
pusha
push
andl
ret
mov
movsl
pop
dec
jl
push
fcompl
insl
rol
adc
dec
aam
cld
das
dec
push
mov
xchg
shl
inc
sbb
jp
das
xlat
aaa
adc
inc
sahf
repz
jns
mov
sarl
loope
loop
sbb
add
ret
sbb
and
xlat
pop
dec
xor
leave
cmp
out
push
cli
out
test
loop
push
xchg
movsb
lds
jns
repz
dec
pop
push
lahf
addr16
adc
cwtl
das
popf
into
push
mov
mov
mov
sbb
daa
xchg
mov
jle
shrl
adc
int
sub
cld
stc
mov
jbe
mov
sbb
test
stos
pop
sub
jnp
or
addb
in
jae
ds
mov
mov
call
frstor
push
pop
inc
hlt
sbb
repnz
arpl
sbb
jge
adc
imul
iret
outsl
clc
xor
pop
setnp
dec
add
std
mov
sbb
loopne
push
jmp
push
int
fiaddl
mov
mov
sti
adc
insb
xorl
jl
out
insl
push
xor
lret
imul
add
scas
das
cwtl
data16
enter
setno
jge
into
pop
jne
xchg
fsts
int3
and
cltd
in
adc
std
pop
andl
jl
dec
inc
or
jne
dec
or
sahf
cmpsl
aas
in
sbb
ret
add
cmp
dec
out
lea
inc
jmp
cli
lret
lea
jmp
push
sub
push
add
and
push
insb
les
jp
fdivs
mov
rorl
imul
mov
pusha
je
loopne
mov
enter
jecxz
aaa
adcb
pop
or
lahf
jmp
xchg
pushf
lret
cld
sahf
cli
sub
xchg
js
das
xchg
mov
mov
jp
leave
test
mov
add
mov
pop
sti
movsb
outsl
push
sub
in
adc
mov
mov
stc
lea
ds
inc
sbb
lahf
mov
dec
in
testb
into
xlat
sbb
jmp
xchg
jne
pop
data16
sahf
sahf
inc
out
xchg
fs
jecxz
jecxz
int
call
ror
push
stos
push
mov
int
jo
xor
or
hlt
lods
ret
cmpsl
dec
xor
adcl
bound
in
sub
jge
cmp
jecxz
shr
mov
jmp
mov
popa
out
lds
mov
out
fsubrl
or
inc
std
push
std
xchg
jmp
push
push
push
sbb
push
or
aaa
inc
xchg
lea
sbb
out
insl
fnsave
out
or
push
inc
mov
cs
adc
pusha
sti
outsb
jnp
cmp
fsubrl
adc
cmc
push
push
rsm
pop
adc
mov
mov
pop
aas
cmpsl
out
pop
or
mov
lret
lcall
lret
insb
push
jmp
out
inc
movsb
pop
pop
popa
out
repz
mov
xlat
data16
mov
clc
push
dec
sarl
ja
js
popf
inc
and
sub
add
je
push
and
adc
cmp
sbb
rorl
sbbb
std
into
jge
lea
int
clc
test
dec
sbb
inc
push
into
inc
xchg
cmpsl
dec
pop
push
out
pop
xchg
sbb
mov
or
sub
mov
repnz
iret
andl
mov
adc
int
pusha
pop
pop
and
jmp
add
mov
sahf
leave
lods
insl
stc
test
jnp
add
out
les
cwtl
test
fmull
stc
jp
aad
shr
scas
xor
or
out
mov
or
add
aad
xor
jge
test
outsb
add
cli
std
xor
movsb
hlt
push
xchg
jae
jne
mov
dec
and
ja
dec
loop
or
adc
mov
mov
lock
xor
fs
repnz
mov
mov
clc
fidivs
xor
cmp
mov
adc
mov
push
lret
sti
cmp
fldcw
int
and
jmp
fdivrs
rclb
add
push
push
rcr
mov
mov
xchg
cmp
push
dec
in
xchg
or
mov
sbb
pop
add
aad
push
clc
push
add
sbb
xchg
cmp
push
in
stc
inc
pop
notl
fucomip
pop
sbb
sbb
or
outsb
flds
inc
ret
mov
fcoms
sti
clc
lea
ret
lea
in
xor
vfrczss
mov
pop
cmp
arpl
inc
pop
test
pop
mov
out
adc
pop
popa
pop
or
adc
leavew
iret
in
clc
jnp
sbb
test
gs
push
test
mov
inc
in
and
fcompl
mov
push
rclb
in
xchg
jno
mov
inc
or
ficoml
jl
in
mov
movsb
std
jne
in
add
divb
xorb
mov
cmc
test
jp
push
pop
mov
js
sti
mov
xchg
inc
nop
int3
pop
mov
nop
lret
sbb
dec
dec
jge
das
out
cli
cmp
dec
xchg
push
add
loop
loop
pop
add
dec
and
repnz
and
ss
pop
jecxz
les
scas
fstpl
xchg
mov
pop
cwtl
lds
mov
mov
out
or
fiadds
dec
push
es
xchg
cmpsb
loop
mov
imul
fisubs
cmp
mov
mov
jmp
inc
js
out
data16
mov
lea
cmpsl
add
out
xor
sbb
int3
sbb
mov
mov
fs
push
inc
scas
mov
rcr
xor
inc
rcrl
pop
mov
and
into
push
xor
push
std
test
mov
cmp
or
loopne
in
xlat
push
lds
data16
pusha
lds
or
jl
ret
jmp
push
mov
xchg
call
or
jl
mov
addr16
nop
test
push
ret
sbb
out
jmp
xchg
movsl
rolb
inc
xchg
adc
xchg
or
jg
outsb
sbb
add
and
ffree
xchg
es
stos
mov
add
mov
adc
inc
test
inc
inc
push
mov
out
xchg
mov
aaa
int
sbb
mov
jmp
pop
cmpsb
inc
shll
pop
or
xchg
repnz
dec
push
inc
mov
lret
iret
jns
sbb
and
cmpsl
xor
dec
scas
popa
mov
bnd
sbbb
jecxz
jnp
imul
mov
inc
mov
movsb
mov
pop
and
enter
daa
repz
sub
mov
sbb
outsl
mov
sub
adc
loop
js
or
inc
gs
call
xchg
mov
test
push
aam
mov
jnp
fstpt
stc
push
pop
aam
in
pop
xchg
xor
mov
pop
nop
lock
out
adc
inc
cmp
cltd
adc
mov
dec
div
jmp
sbb
js
cwtl
dec
cmpsl
inc
push
pop
pop
leave
push
test
pop
insb
out
push
das
push
xchg
movsb
jne
out
mov
int
lock
shld
xchg
mov
sti
mov
ror
push
nop
fcoms
out
mov
pop
dec
movsb
je
pusha
in
xor
decb
add
jmp
xchg
outsb
pop
test
dec
shr
in
test
push
dec
mov
lock
mov
lret
call
xor
stos
mov
or
push
mov
mov
xchg
mov
pusha
inc
std
mov
cmp
push
mov
pop
aad
cs
and
jae
shrl
pop
inc
inc
jne
pushf
xchg
dec
lea
sub
jg
cmc
pop
xor
add
push
adc
and
iret
sbb
adc
pushf
mov
mov
xor
addb
xchg
lret
pop
push
pop
mov
rcrb
ljmp
jp
push
xor
inc
bound
dec
leave
mov
mov
rcrl
roll
in
rol
rol
outsl
cmpsb
xchg
hlt
dec
test
iret
es
flds
fstl
inc
jo
adc
je
xor
int3
std
mov
xor
sbbb
jmp
test
lods
fs
sub
push
pop
and
dec
out
push
fcomp
dec
fdivrs
imul
or
adc
insb
xor
fcmovu
pop
enter
repz
xor
pop
xorb
nop
mov
dec
ror
sti
les
jae
int3
enter
inc
mul
pusha
push
xchg
add
lods
mov
sarl
xchg
daa
or
pop
and
mov
sub
dec
loope
sbb
lea
fsincos
jle
push
adc
mov
jns
sbb
inc
gs
add
inc
jge
addr16
cmc
rcrl
mov
inc
mov
pop
xchg
fisubs
mov
cli
fwait
ljmp
mov
cmc
xor
mov
and
arpl
fxtract
je
xchg
cmc
into
stos
jle
pop
std
inc
xchg
scas
fcmovnu
repnz
sub
jmp
add
mov
cmc
in
fistl
aas
mov
mov
repz
repz
inc
iret
lahf
int3
mov
pushf
int
dec
sub
or
pop
push
pop
scas
mov
inc
iret
mov
dec
xchg
int3
xchg
and
ret
or
push
std
icebp
mov
jp
dec
mov
movsl
or
call
cmp
pusha
push
mov
dec
xchg
testl
mov
into
fidivrs
ror
dec
movb
lods
sbb
int
cs
decl
sub
icebp
and
sub
mov
push
in
mov
dec
mov
add
xor
outsl
fiadds
or
dec
inc
mov
or
fsubl
inc
icebp
push
pop
or
sbb
mov
ret
mov
or
pop
outsl
jbe
stc
rclb
fdivs
add
pop
xor
mov
in
add
dec
int3
or
cmc
pavgb
xchg
push
mull
or
xor
pop
xor
insl
mov
sbb
adc
lea
fwait
jne
arpl
jge
je
gs
outsb
jge
jo
pop
sbbl
leave
sub
int3
repnz
hlt
stos
cs
or
aam
push
push
insb
mov
jecxz
mov
adc
pop
loope
icebp
xor
rcrb
jb
and
std
out
icebp
jo
sbb
pop
mov
or
popf
fwait
adc
sub
shrl
pop
arpl
cmp
jp
xchg
lahf
or
outsb
loop
mov
scas
cmp
adc
addr16
adc
aaa
inc
mov
popl
dec
jl
xor
xlat
scas
mov
imull
push
lods
adc
ret
mov
push
cltd
sub
out
das
int3
stos
mov
or
xchg
lock
test
add
xor
and
xor
aaa
aas
into
jecxz
mov
daa
leave
xchg
fisttpl
enter
jle
movsl
mov
push
dec
jb
mov
leave
mov
mov
add
xor
call
enter
mov
shlb
jmp
fldz
leave
xchg
push
sbb
dec
push
sbb
andl
loop
cmpsb
into
movsb
dec
xchg
call
push
mov
cld
test
cli
into
outsb
or
xchg
sbb
and
adc
sub
mov
imul
sbb
jo
inc
add
add
std
mov
fst
rcl
out
scas
stos
and
rorl
cwtl
mov
daa
push
xor
mov
pop
xorl
add
mov
repnz
imulb
movsb
rolb
sbb
dec
scas
aaa
mov
enter
stc
shlb
cmpsb
adc
add
mov
insl
push
loopne
faddl
dec
mov
pusha
push
dec
add
ror
or
adc
mov
push
fs
push
xlat
jne
cmp
and
sbb
out
adc
clc
je
jmp
jl
adc
jbe
clc
scas
inc
sub
jbe
cwtl
mov
push
cmp
push
and
testb
in
jle
inc
cmp
add
test
daa
ljmp
xchg
jmp
out
and
js
fcmovnu
mov
jbe
or
aam
or
sahf
xor
addr16
jo
in
xor
addl
xchg
cltd
not
mov
mov
xor
dec
mov
mov
test
mov
arpl
or
ja
aam
cmpsl
xor
jnp
push
sub
jae
adc
mov
movsb
icebp
mov
and
mov
dec
je
dec
cmc
mov
sbb
mov
inc
sub
orb
mov
in
repnz
test
xchg
pusha
inc
dec
js
jg
dec
std
pushf
lret
jns
push
add
jno
pop
icebp
sti
sbb
xor
call
push
lds
mov
fwait
sbb
pop
pop
loop
loopne
ret
dec
fsubl
xor
jmp
sub
fprem1
push
or
aam
out
jmp
and
jae
ds
mov
cmp
dec
sub
imul
gs
lods
in
xor
fs
int3
repz
data16
push
dec
mov
jmp
jo
sbb
outsl
test
dec
lods
push
fucomp
movsb
rcrb
into
sub
or
push
cmp
sbb
fsts
in
xchg
sbb
lds
mov
outsl
lea
daa
cmp
and
push
test
fstl
iret
push
mov
icebp
mov
and
mov
decl
jbe
mov
in
xor
mov
outsb
cld
and
add
std
sub
sbb
xchg
ret
pop
mov
adc
jo
out
jecxz
loope
cwtl
fwait
add
mov
or
imull
pop
out
aam
outsl
xchg
mov
add
ljmp
add
and
xchg
rclb
push
std
call
and
fdivl
cmp
lods
out
mov
repz
push
hlt
daa
fstpl
sahf
xchg
repnz
and
dec
arpl
push
pop
mov
insb
sub
cmp
in
push
stc
jbe
xor
es
jg
fidivrs
sbb
cmc
jmp
les
push
jmp
mov
shl
xor
mov
sbb
jmp
or
lock
outsb
mov
and
or
xchg
xor
mov
jg
mov
lods
xchg
sbb
mov
pop
ficoml
or
in
mov
cmpsb
stc
sbb
fwait
rolb
add
fucomip
add
pop
xlat
call
jg
inc
push
ret
mov
loopne
jecxz
mov
add
insb
pop
or
rcrl
mov
pop
rcll
xor
and
adc
imulb
xchg
outsb
push
loop
mov
mov
push
or
je
sbb
cmp
rorl
cmpsl
ljmp
dec
xor
out
dec
out
pop
mov
add
mov
push
lds
mov
mov
mov
fsubrp
repz
jecxz
xor
aaa
push
insb
lds
sti
fwait
xchg
in
loopne
push
inc
les
dec
lock
push
xchg
sub
and
les
cmp
pop
dec
pusha
pop
adc
andl
faddp
in
bswap
mov
psubb
data16
push
repnz
imul
ss
mov
sahf
scas
into
movsb
ja
push
cmp
jae
clc
mov
mov
das
loop
popa
adc
lods
xor
pop
mov
out
scas
jmp
aaa
stc
add
push
and
push
in
xor
push
in
shr
in
sub
repnz
rclb
sti
nop
repz
dec
push
fnstenv
adc
cmp
push
xchg
jp
in
push
jge
add
addl
adc
fisttpll
subl
lock
hlt
dec
fisubrl
jmp
ljmp
pop
or
sahf
xchg
jmp
mov
into
xchg
jmp
sub
mov
dec
int
and
inc
inc
adc
fdivs
or
mov
sbb
pop
pop
repz
sbb
cmp
add
jne
notb
add
lds
pushf
je
repz
cmpsb
mov
sub
adc
popa
in
xchg
jg
xor
push
and
xchg
ljmp
data16
rolb
xchg
pop
ret
rclb
xor
out
fwait
mov
xchg
push
cmpsb
loop
mov
mov
stos
lret
and
jecxz
roll
push
cmp
push
mov
mov
mov
sbb
add
gs
out
xor
push
mov
or
fnsave
leave
xchg
int
mov
xor
jo
insb
push
vpsllq
adc
cmc
inc
cltd
add
sub
rcll
arpl
xor
aas
xor
ja
inc
int
hlt
fidivl
fdivrp
push
cmp
mov
jmp
mov
jbe
add
pop
idiv
insb
inc
cmpb
pop
sbb
and
jge
pushf
or
shlb
push
mov
pusha
adc
inc
fucomip
and
add
out
leave
mov
aas
mov
nop
test
inc
push
bound
clc
test
jb
cld
cmp
inc
popa
sbb
fstps
cmpsl
out
pop
call
mov
sbb
cmp
dec
sti
insb
scas
jne
sbb
inc
hlt
add
add
inc
xchg
xor
lret
fistps
movsb
leave
mov
add
jg
cmp
mov
std
fistl
clc
sub
sub
push
mov
sub
jge
decb
pop
jns
out
pop
push
jp
into
data16
jne
add
push
mov
test
mov
jle
sbb
mov
lret
push
pop
les
clc
cwtd
jne
js
dec
std
push
push
outsb
xchg
ret
lret
jno
pop
mov
cmp
jl
pop
rcr
and
arpl
aam
pop
jp
in
sub
leave
imul
inc
jle
pop
adc
in
xchg
sub
mov
mov
outsl
mov
int
add
bnd
sbb
das
scas
add
std
in
sbb
xor
sbb
subb
rcrl
call
fistps
imul
cmpsl
xchg
inc
in
test
stos
push
cmp
cwtl
test
add
scas
mov
and
and
out
push
mov
fidivrl
mov
das
mov
inc
cld
loop
mov
jl
mov
aam
rcr
and
out
cltd
jae
enter
xchg
lods
xchg
fldl
aad
rorl
in
pop
cmpsb
xchg
out
inc
icebp
popf
mov
and
repz
mov
movb
insb
cmp
xor
jp
adc
imul
dec
adc
repnz
arpl
mov
dec
inc
cmp
repz
fbld
shll
inc
popf
test
aas
add
sbb
jne
sahf
push
mov
cmp
pop
inc
xchg
stos
test
push
pop
inc
int
mov
hlt
add
mov
cld
or
leave
push
mov
sahf
add
pop
outsl
adc
fs
or
adc
stc
xorb
cmp
pusha
jae
test
pop
fnstcw
pop
pop
sbb
lret
ret
js
lock
fnsave
sub
lret
enter
rorb
push
cli
cmc
jle
add
jmp
xchg
cmp
push
scas
sub
add
filds
in
adc
or
push
add
aad
push
jb
xor
out
lods
pop
mov
shrl
mov
stos
cmpsl
xchg
mov
xlat
adc
adc
movsb
ja
xchg
test
fwait
adc
pop
ja
and
out
mov
xchg
adc
sarb
cmpsb
dec
inc
or
loopne
pop
scas
xchg
adc
movsb
mov
xchg
cli
dec
ret
dec
adc
mov
mov
mov
das
mov
ret
outsb
jno
add
cmp
sbb
lock
fdivrs
adc
loopne
adcl
ljmp
imul
add
loope
adc
xor
jns
mov
out
push
popf
in
push
push
shlb
sbbl
incb
and
cmc
mov
inc
mov
out
ss
insb
xchg
loop
arpl
mov
ja
add
pop
shlb
setbe
or
add
mov
rcrb
ja
outsb
add
lds
mov
shlb
jne
std
sbb
stc
ja
and
addr16
xchg
leave
jl
dec
fcoml
push
ret
in
push
clc
test
xor
test
repz
aam
js
ja
ss
je
ror
mov
shr
mov
in
cmp
hlt
cld
mov
loopne
pop
pushf
insb
xor
pop
call
adc
jl
mov
push
addr16
cli
imul
mov
sbb
cmpsb
lods
pop
xchg
rcll
loopne
gs
push
mov
adc
sub
jp
inc
aad
sub
jp
sbb
inc
loop
add
clc
pop
sub
mov
popa
movsl
pop
cmp
in
lret
fdivrl
mov
sbb
in
je
in
pop
push
mov
inc
into
outsl
sub
sub
lds
shrl
pop
dec
shrb
scas
or
mov
adc
pop
mov
cmc
movsb
xor
idivb
inc
mov
jg
sbb
xchg
popa
pushfw
push
mov
lret
push
or
xor
roll
jbe
mov
fwait
fs
cmpsl
and
sarl
lahf
lret
test
push
sbb
scas
pushf
hlt
icebp
out
mov
pushf
outsb
dec
out
rol
jl
stos
xorb
nop
lods
lret
add
inc
mov
sbb
pop
fdiv
cli
jb
stos
inc
fisubs
popf
cs
cmp
adc
mov
fimuls
or
sbb
add
push
lods
mov
fs
add
es
add
aad
movsb
pop
inc
add
insb
cld
xchg
icebp
mov
sbb
mov
cmp
out
icebp
pop
mov
sbb
insb
out
sbb
cwtl
push
pusha
mov
loop
into
add
clc
out
xor
pop
jmp
or
cmp
rcrb
lret
loope
lds
out
push
loopne
fidivs
inc
loope
insl
mov
or
ss
sbb
fstl
out
jnp
jle
nop
xor
fsubs
push
mov
das
lcall
cmp
xchg
popf
mov
hlt
and
sub
mov
test
cltd
jns
jle
movsb
mov
xorb
xchg
pop
pop
mov
data16
pop
test
in
arpl
fidivrs
push
iret
mov
decb
mov
xor
fildll
xchg
ds
add
or
test
mov
mov
dec
lds
xor
and
mov
ja
and
inc
mov
ret
fs
out
pop
mov
push
cmpsb
cmp
insb
xor
and
xchg
fstl
xchg
stos
inc
sub
add
dec
lahf
pop
push
pusha
jmp
add
mov
fdivrs
neg
cmc
je
mov
mov
leave
lea
bound
mov
mov
leave
cltd
insl
add
add
add
stos
repnz
out
ljmp
push
and
aas
sbb
or
push
mov
shll
fcompl
mov
inc
out
mov
std
and
jbe
cs
pusha
mov
sbb
scas
inc
inc
mov
jbe
jnp
adc
cmp
lea
cmp
mov
clc
dec
je
push
leave
mov
outsl
jb
xor
ss
or
cltd
sahf
jne
fisttpll
sub
iret
xorl
mov
xchg
lsl
mov
js
bound
mov
push
insb
fs
sbb
lret
scas
inc
movsb
cmpsb
mov
cld
lret
clc
and
xchg
and
js
or
test
sbb
and
mov
push
sbb
cmc
neg
jl
pop
pop
mov
cmp
xor
lds
negb
in
mov
pop
rcl
pop
xchg
xchg
dec
hlt
adc
mov
aas
or
xchg
sbb
mov
push
mov
adc
jl
cltd
shll
shll
movsl
mov
xor
hlt
test
jp
je
cmpsl
jnp
orb
fildl
jae
sbb
movsl
jp
pop
and
in
mov
and
xor
in
cmp
shlb
lods
push
sbb
in
shlb
repnz
mov
lea
cltd
sub
sbb
sahf
test
push
add
mov
sub
repz
mov
xchg
add
sbb
adc
mov
xor
fidivrs
test
pop
add
mov
mov
dec
cmp
movsl
mov
push
and
cmp
in
popa
addr16
dec
scas
jb
out
xchg
out
iret
lret
and
cld
mov
inc
sbb
outsb
xchg
test
cld
dec
xchg
cmp
pop
xchg
cld
mov
or
and
fsubl
loopne
cmpsl
imull
xchg
cmc
mov
cmp
ss
jno
mov
movsb
xchg
andl
jmp
mov
push
test
lock
and
fisttpll
inc
jo
or
cmp
jo
scas
dec
dec
pop
or
mov
daa
aam
mov
test
insl
sbb
call
aad
cwtl
push
pop
jmpw
cltd
pop
cmpb
xchg
add
cmp
add
lods
cli
lahf
xchg
ds
adc
ds
hlt
add
cmp
addr16
loope
mov
out
sbb
jecxz
or
and
xor
xacquire
dec
push
in
pusha
push
adc
and
pop
push
inc
rclb
xchg
inc
adc
daa
mov
push
fisubs
xorb
mov
inc
iret
adc
scas
test
jecxz
jae
out
inc
adc
jp
dec
pusha
jecxz
movsl
xchg
sub
and
jmp
and
mov
jnp
jecxz
adc
repz
jle
das
xchg
shrb
addr16
scas
dec
fisttps
push
push
aas
daa
lea
fidivs
pop
clc
xor
push
xor
or
lods
cltd
xchg
inc
jno
mov
mov
mul
xchg
mov
mov
and
lods
jns
iret
ljmp
ja
lds
hlt
sar
lds
inc
inc
pusha
pusha
jbe
in
test
in
jmp
out
mov
imul
sarl
jmp
aas
cmc
xor
je
mov
rorb
xchg
int3
mov
or
pop
mov
cld
aad
push
inc
inc
mov
clc
fists
or
ds
out
push
jge
adc
loop
insb
loopne
cmp
cmp
rorl
xchg
shrl
int3
cmp
ret
out
xchg
lcall
idivl
and
or
mov
loope
mov
clc
or
popa
pusha
in
fmull
adc
jnp
lods
jecxz
addb
cmp
aam
repnz
stos
sbb
xor
fadds
mov
xor
pop
mov
dec
and
out
dec
xchg
ljmp
sbbb
xchg
sub
pop
cmp
push
adc
xchg
and
inc
in
arpl
mov
cmp
mov
add
fidivs
xchg
pop
sbb
jg
or
call
cmpsb
std
lret
ljmp
addl
adc
sub
push
test
push
jmp
fwait
out
mov
popl
add
xchg
fidivl
xor
je
jnp
and
xchg
das
mov
and
loop
push
out
test
mov
and
outsl
push
sarl
xorl
mov
jle
adc
push
cmp
pushf
and
mov
leave
iret
pop
xlat
sti
mov
adc
jne
test
jp
rcr
enter
mov
rcr
lret
or
cmpsb
je
mov
pop
imul
add
out
lods
imul
xlat
je
and
xrelease
add
mov
xlat
js
mov
and
add
mov
mov
or
and
and
pop
call
adc
fistps
stc
fcomps
jmp
pop
xacquire
adc
jecxz
dec
mov
out
xor
movsl
icebp
cwtl
pop
dec
cmp
push
testl
inc
in
and
add
mov
scas
imul
sbb
out
jb
ret
xchg
jl
xchg
jg
cmp
or
xchg
or
std
frstor
jmp
sbb
clc
adc
sbb
fs
add
adc
or
in
push
int3
jmp
and
scas
loopne
adc
repnz
xchg
jae
or
sbb
imul
leave
pop
sub
sbbl
gs
adc
mov
pop
push
popa
or
xchg
cmp
mov
pop
imul
xlat
pop
mov
inc
inc
fdivs
push
mov
push
lock
jl
xor
cmpsb
push
rcrl
mov
jb
and
iret
cmpsl
dec
fcmovb
je
test
xor
aaa
jns
jp
jae
pusha
sbb
mov
movsb
js
inc
sub
jecxz
mov
dec
mov
lods
incb
shll
addr16
adc
aas
ja
jmp
or
ret
nop
fadds
add
push
push
mov
push
inc
add
fnstsw
xchg
popa
das
movsb
or
xchg
add
lret
adc
aaa
or
aaa
jno
test
roll
mov
dec
sbb
mov
in
jbe
adc
cmpsb
dec
cmp
adc
pusha
jno
pushf
mov
cmc
mov
out
icebp
adc
leave
jns
pop
gs
sub
push
repnz
pop
in
xchg
pop
mov
sti
int3
jmp
insb
jb
cmpsw
test
fisttpl
pop
mov
popa
add
inc
rorl
ja
adc
jns
sbb
popa
aad
push
hlt
jp
popf
xchg
inc
jge
not
jmp
sti
pop
dec
repz
pop
js
or
daa
ljmp
sti
dec
push
lahf
mov
jle
nop
mov
out
sbbb
les
and
or
fld
xchg
mov
imul
cmpsl
test
scas
mov
jecxz
aam
cli
sub
shrb
jmp
aam
sbb
mov
xor
push
repz
fnstenv
inc
shr
leave
inc
mov
scas
mov
adc
sahf
xchg
jo
inc
push
out
into
mov
aaa
mov
xchg
mov
mov
mov
and
xchg
sahf
mov
jbe
out
insl
into
repnz
mov
shrb
into
pop
and
sbbb
and
sub
cmp
xor
leave
mov
mov
fcmove
mov
loopne
fdivp
sbb
and
loop
ja
adc
gs
and
mov
push
loopne
inc
lahf
or
mov
bound
and
inc
jo
test
dec
inc
dec
leave
jp
mov
gs
mov
or
popa
addr16
adc
aas
jl
cmc
pop
mov
nop
xchg
dec
sub
pop
int
inc
sbb
ja
inc
outsb
out
inc
push
fidivs
in
mov
out
jl
clc
in
popf
outsb
dec
idivl
pusha
test
sub
jbe
test
pop
jne
mov
sbbl
popa
or
in
mov
mov
and
jp
sbb
inc
repz
dec
mov
push
and
jge
fistpl
and
inc
adc
pushl
stc
mov
outsl
mov
push
xlat
js
jecxz
jb
movsb
and
and
and
fnstsw
add
fdiv
sub
xchg
popl
mov
xor
cwtl
sub
add
stc
bound
jl
gs
xlat
mov
mull
sub
push
and
dec
dec
mov
jecxz
aam
add
mov
add
repnz
int
fs
pusha
jb
mov
fsubrp
int
push
mov
lret
lock
sub
push
loop
lret
insl
dec
in
scas
mov
stos
gs
inc
in
xor
inc
and
or
mov
mov
jne
icebp
cmpsb
jle
imul
pusha
and
dec
std
add
and
or
or
add
pop
lcall
mov
bnd
mov
adc
sti
sbb
lret
dec
and
into
xchg
icebp
jnp
cli
mov
hlt
ficomps
std
or
cmpsl
inc
iret
push
push
xor
inc
lret
mov
jge
cmc
cmc
stos
fisubrl
cmp
aas
pop
bound
into
fwait
rorb
jo
in
lods
or
popa
sti
hlt
inc
or
inc
mov
pop
pop
or
mov
sbb
int
aad
xchg
lock
arpl
popa
cli
nop
je
pushf
fnsave
fwait
inc
movsl
lds
adc
es
sbb
push
cmp
jne
jae
jne
add
sbb
add
adc
test
out
cmp
sbb
push
rcrb
inc
mov
in
fwait
shr
cmc
scas
leave
pop
lods
mov
cmc
or
xchg
and
aam
movsl
cmc
jbe
lds
cmpsb
push
or
jo
pop
in
lret
mov
stos
xchg
jle
push
inc
cmc
jle
xor
jb
push
mov
pop
mov
inc
mov
fsts
cmp
jae
cmc
fstps
xchg
pusha
xchg
loop
cli
sub
pop
cmc
xor
in
mov
out
mov
test
mov
lds
sub
call
mov
and
inc
add
stos
mov
or
ds
ret
add
mov
mov
sub
cld
sbb
jle
mov
std
ds
mov
or
cli
ret
push
insb
add
pop
lds
sarb
mov
xchg
loop
add
iret
push
mov
jne
mov
dec
jbe
add
test
in
sbb
mov
and
pop
jo
call
cmp
testl
movsl
mov
sbb
mov
repz
or
mov
out
loope
outsb
or
xchg
out
mov
pmaxub
push
fbstp
pop
sarl
pusha
cli
mov
jns
gs
call
mov
icebp
arpl
ret
out
add
stos
mov
mov
cltd
xor
lret
mov
in
repnz
cli
into
out
in
mov
or
scas
jo
mov
fstpt
add
sub
outsb
je
cmp
sub
insb
es
jbe
rclb
pop
cmp
aam
adc
or
popa
adc
loope
into
repz
bound
jg
mov
cmp
aaa
ficoms
sub
mov
fidivs
mov
sbb
sub
std
mov
mov
aad
cmp
cmp
mov
push
sub
mov
and
shll
shrb
loope
decb
push
inc
mov
into
shlb
scas
jmp
jl
mov
mov
inc
imul
test
leave
iret
xor
fidivs
cmpsb
add
jmp
xor
inc
push
cmp
add
fdivrp
cmpsl
stc
ds
sbb
pop
dec
cmc
ret
mov
std
jbe
aaa
repz
aaa
mov
std
add
mov
jg
int
mov
lock
imul
lock
sub
sbb
clc
or
pop
rep
sti
rolb
in
adc
sub
xchg
mov
test
mov
inc
inc
add
or
adc
mov
stos
movsb
leave
int
out
push
jmp
push
sub
add
mov
and
and
insl
jae
adc
or
popa
ret
push
jp
lret
push
and
dec
int
mov
or
daa
fcomip
subb
pop
scas
cltd
lds
pop
ret
in
push
scas
test
mov
push
cmp
insl
cltd
scas
shlb
mov
icebp
xlat
outsb
jmp
dec
insl
pop
mov
leave
ja
inc
stc
pop
subb
insb
loop
scas
xor
jle
mov
mov
and
or
das
out
pop
xchg
jl
mov
xor
cmpsl
dec
ds
orl
cmc
cli
jle
bndstx
loopne
lcall
cmpsl
loop
int
rorl
xchg
push
sahf
sti
fiadds
fisttpll
loop
into
add
loop
add
cltd
movsl
decb
lods
fisttpll
test
cld
adc
frstor
pop
addr16
or
xor
movsl
jmp
repz
pop
into
inc
mov
jmp
ja
sub
sbb
decb
cli
mov
push
jle
mov
mov
mov
or
push
pop
xor
cmpsl
repnz
fcompl
repz
mov
jle
dec
inc
sbb
sbb
scas
aad
insl
shl
cld
imul
xor
push
xor
push
push
int3
xchg
les
pop
mov
in
adc
xchg
add
mov
mov
out
bnd
jl
mov
sub
arpl
fucomip
push
jne
xor
push
xchg
pushf
fcmove
jno
sub
les
mov
imul
in
je
push
cld
nop
in
or
xor
mov
les
outsl
lret
insb
ds
repz
fs
dec
pslld
addr16
push
std
mov
xor
sbb
imul
sahf
loopne
mov
in
push
mov
leave
or
inc
mov
push
or
inc
in
push
mov
scas
in
adc
fnsave
in
mov
fsubl
push
fdivrs
cmpsl
inc
xor
daa
imul
cmpsl
xor
pop
xchg
fistps
mov
js
and
sbb
sub
into
movsb
mov
adc
mov
jle
mov
loopne
mov
adc
fstps
fisubs
repnz
in
adc
ja
or
push
imul
lret
loope
mov
fldl
fbld
push
hlt
fsubrl
vcvtdq2ps
inc
js
mov
and
jnp
popf
addl
add
test
sub
enter
mov
clc
shll
cwtl
out
insb
sbb
mov
jne
repnz
cmpsb
loope
sbb
fwait
adc
fildll
dec
inc
insb
int3
sti
mov
push
adcb
aaa
mov
inc
fists
out
es
sub
sub
std
popf
xor
fsin
mov
hlt
xchg
inc
pop
cmp
ret
push
dec
in
sbb
lock
lock
cmpsl
test
push
mov
into
pop
sbb
in
fldcw
sti
ss
push
lds
mov
call
in
call
inc
imul
movsl
jecxz
mov
push
jl
add
mov
repz
mov
out
cmp
mov
and
rcrw
push
addb
fwait
jbe
xchg
test
or
lods
cli
ret
push
or
mov
movsl
test
std
shlb
sub
movsl
push
sbb
test
in
nop
mov
int
clc
das
nop
pop
inc
and
jmp
out
xorl
sbb
inc
or
jmp
stos
enter
cmpsb
jl
mov
in
inc
adc
ljmp
repnz
cmp
sti
sub
adc
mov
paddsw
sti
or
jle
loopne
mov
movsb
jmp
push
outsb
outsb
icebp
dec
int3
addr16
mov
aad
inc
mov
mov
sub
loopne
addr16
fbld
fwait
dec
inc
xor
and
lock
inc
or
clc
push
xchg
inc
pop
outsb
call
xor
xorl
mov
cmp
sbb
inc
test
int3
ret
scas
call
mov
mov
insl
or
sbb
mov
out
sub
fiaddl
addr16
mov
mull
or
ja
icebp
sub
std
jns
mov
aam
dec
imul
in
mov
and
rclb
sarb
and
cmp
mov
lret
nop
jbe
lahf
mov
push
mov
mov
lds
in
in
or
out
insb
xorb
in
sbb
fnsave
cmpsl
sarb
add
sbb
repz
jle
mov
std
jmp
cmp
movsb
mov
repnz
ds
mov
push
sbb
cmc
dec
mov
outsb
pop
popa
mov
jmp
pop
sbb
icebp
sub
enter
hlt
bnd
jecxz
cli
test
mov
inc
sub
adc
loopne
lock
adc
pop
xchg
in
popf
sub
push
lods
pop
xor
xor
mov
out
xor
sub
xor
xor
ret
xor
imul
out
xchg
fcmovne
loopne
icebp
jmp
sub
hlt
in
lret
push
stc
xorb
dec
stc
sbb
leave
push
mov
ret
cmpsb
mov
std
in
xor
add
test
ss
repnz
cli
test
mov
push
outsl
push
pop
pushf
mov
xorl
les
sbb
clc
mov
xor
call
ret
add
aaa
push
xor
in
pop
std
sub
repnz
adc
jne
and
dec
cmp
pop
loop
add
pop
push
cmpsb
repnz
xor
sti
and
js
push
insb
sub
inc
in
mov
mov
lds
js
insb
add
pop
push
fdiv
sti
movb
add
ja
and
fldenv
push
nop
and
cmpsb
mov
or
pop
sub
mov
call
hlt
mov
xchg
or
xchg
cmp
rorl
out
xchg
dec
xor
cmpsl
std
lods
pop
mov
cld
rcr
push
or
lds
aas
inc
packssdw
mov
lods
fisubl
gs
into
rorl
loope
jl
mov
into
int
jo
testl
mov
mov
pop
cmpb
sub
mov
scas
movsl
clc
les
stc
aad
add
mov
adc
xchg
mov
ret
inc
xor
xor
jecxz
lret
shlb
pop
int
push
cmp
inc
xlat
mov
push
popa
xor
es
xchg
repnz
test
sbb
mov
or
fucomp
jno
add
mov
add
mov
jns
cmp
mov
std
ss
xlat
add
xlat
arpl
jecxz
pushl
pop
push
jb
in
out
std
adc
xchg
nop
dec
inc
loopne
sub
and
into
mov
in
sub
cmpsl
mov
mov
mov
rorl
cmc
shll
jb
jne
pop
bnd
add
inc
cmp
aam
or
les
outsl
cmp
test
pop
inc
aam
lret
ret
bswap
xor
jae
movsb
inc
sbb
xchg
and
addl
lods
push
stc
enter
lea
out
xorb
es
dec
sub
lcall
pop
mov
inc
xor
clc
mov
nop
mov
sbb
out
cmp
imul
xchg
paddw
ret
mov
add
repnz
aam
push
jo
les
or
jns
xor
sbb
add
loop
jl
test
add
aam
sbb
mov
xor
push
gs
cmpw
sbb
sub
cmp
adc
push
mov
xchg
std
repnz
std
daa
in
xor
fsub
push
popa
idivl
imul
cmp
addr16
pushf
dec
dec
pusha
add
push
nop
xor
scas
dec
adc
sbbb
jnp
mov
pop
cmp
stos
out
pusha
adc
or
arpl
cld
inc
mov
or
mov
test
arpl
cmc
fcoml
pop
fidivs
hlt
sahf
add
pop
inc
les
jle
in
dec
mov
lods
xor
int
mov
outsb
mov
pop
xor
shll
mov
pop
mov
pusha
sub
aam
shl
repz
mov
sbb
and
lret
lods
and
push
xorb
leave
fwait
push
jmp
jecxz
fsubrs
push
les
inc
and
jg
or
shlb
sub
roll
mov
cmp
jns
imul
rorl
outsb
pop
cld
lds
imul
out
scas
xor
outsb
mov
xor
bound
test
xor
fwait
hlt
add
add
lods
cmp
push
jb
push
pop
push
movsb
push
les
rcrb
lods
test
mov
rcl
and
xchg
aaa
rcrb
mov
ret
adc
and
js
data16
cld
iret
mov
cs
pop
movhps
xor
loop
stos
cwtl
in
cmpsl
fsubrp
and
pop
push
or
mov
cli
mov
ss
xor
inc
pop
mov
mov
cmpsb
bound
fwait
decl
inc
sub
xor
cmpsl
cmpb
les
push
in
ja
mov
test
sbb
mov
jg
into
fwait
hlt
jge
mov
mov
jmp
push
jno
push
decl
adc
mull
subb
and
in
cli
sbb
mov
fldenv
mov
std
sub
inc
jnp
mov
xchg
aam
out
cmc
hlt
je
sbb
int
insb
out
pop
pop
cmp
mov
test
push
in
ret
jle
adc
aam
push
stc
call
mov
mov
jle
enter
loopne
in
into
es
nop
shl
mov
in
push
test
pop
aaa
inc
es
shlb
mov
fcmove
inc
scas
mov
adc
sub
mov
add
imul
jg
dec
enter
lcall
push
sub
mov
cmp
ss
arpl
xor
test
repz
dec
testl
data16
mov
xor
sbbl
movsb
push
inc
mov
std
loope
popa
pop
dec
in
cli
push
std
enter
sbb
push
push
mov
call
cmc
jbe
inc
cld
push
pop
inc
mov
data16
sbb
cli
inc
repz
push
test
mov
mulb
mov
nop
fldl
icebp
repz
data16
xor
out
dec
mov
fimuls
aad
add
sbb
mov
fdivrl
lea
pop
cmc
or
jge
imul
pop
sarb
outsb
mov
out
rolb
dec
mov
pop
and
std
pop
mov
push
stc
xchg
lahf
push
fstpt
movsb
lret
pop
xor
dec
mov
jl
mov
add
pop
or
push
movsb
ret
add
lret
in
insl
je
scas
and
outsl
aaa
mov
in
jnp
inc
dec
daa
sti
dec
push
mov
test
ss
stc
int
fimuls
jae
inc
push
popf
mov
add
cli
mov
and
push
dec
lret
sub
dec
lods
mov
inc
fidivrl
mov
cmp
jo
xor
scas
aaa
pusha
test
lods
sti
bound
lahf
pop
pop
jg
loopne
xor
xorb
mov
pop
mov
mov
in
sbb
or
xchg
push
adc
insl
es
sub
push
aad
jae
ss
xchg
add
fcom
inc
aas
sbb
push
mov
out
push
ljmp
popf
insb
pop
subl
out
push
dec
mov
pop
aaa
hlt
sbb
mov
or
cld
ret
stos
into
xchg
mov
push
add
jb
push
scas
jae
and
int3
fistps
pop
jbe
sbb
mov
jmp
sbb
sbb
mov
adc
fisttpl
xchg
sbb
loope
in
sub
fs
jmp
adc
add
inc
inc
stos
pop
jp
inc
aaa
clts
push
nop
or
in
jno
xchg
sub
inc
push
call
adc
sbb
add
xchg
xchg
mull
fcomi
push
or
push
xchg
movsb
mov
jbe
cmp
fstpl
mov
repnz
sbb
test
stos
pop
icebp
adc
sbb
js
ss
in
fucomi
cli
mov
xor
xor
jo
mov
add
mov
and
push
cli
std
fidivrs
mov
out
leave
pop
mov
mov
cmp
lds
cmpsl
xchg
xor
pop
out
movsb
mov
fwait
pop
and
adc
jno
and
mov
cmp
popa
mov
or
cmpsl
cmpsb
jle
sub
sbb
cmpsb
pop
pop
imul
ret
movsl
xchg
or
mov
push
mov
adc
loope
dec
shll
int
or
insl
mov
pop
sti
xlat
hlt
xchg
div
mov
cli
rclb
icebp
into
test
je
gs
fistpl
fnstsw
mul
or
push
mov
add
out
mull
je
jg
cli
cmc
xchg
push
leave
mov
jns
dec
insb
int
jno
ss
pop
ljmp
daa
stos
add
cmp
mov
mov
sub
mov
iret
call
mov
data16
mov
scas
mov
jmp
xchg
jmp
mov
adc
and
test
bound
mov
jp
sub
data16
movsl
into
fbld
lods
push
pop
scas
in
add
mov
and
adc
adcb
mov
in
dec
loop
adc
repz
jl
cmpsl
pop
fbstp
dec
inc
add
xchg
iret
xor
loope
jo
jle
sbb
adc
or
paddsw
or
xor
test
daa
andl
sbb
cld
push
or
das
ret
jmp
fistl
dec
lods
movsl
stc
jecxz
in
loop
es
jp
repnz
mov
mov
inc
out
cmp
mov
ljmp
xchg
fidivl
imul
mov
and
fcoml
push
sub
call
std
or
and
mov
jmp
adc
or
xchg
xchg
arpl
outsl
aam
add
ss
into
pop
cmp
int3
jo
push
pop
jo
push
cli
mov
or
mov
push
lods
jne
mov
cltd
or
fs
in
sbb
das
std
cld
daa
rolb
sub
xchg
test
jnp
in
pop
jmp
roll
loope
test
or
aad
pop
stos
sub
rcrb
or
lcall
imull
mov
inc
push
pop
push
int3
inc
mov
fs
shlb
mov
loop
scas
push
xor
mov
dec
nop
outsb
sub
icebp
jbe
adc
xchg
movsb
loope
cmpsb
jae
xchg
xchg
mov
adc
mov
xor
pop
cmpsl
scas
push
sub
jge
jl
ret
xchg
outsb
insb
push
cmp
xchg
and
pop
je
mov
cli
insl
or
out
ret
hlt
ret
cmp
out
jb
push
push
clc
and
mov
mov
stc
lea
loop
jae
or
pop
sbb
int3
pop
inc
in
cmp
xchg
aas
insb
js
xchg
std
push
and
push
pop
fadds
cwtl
adc
cmc
mov
clc
or
inc
mov
clc
scas
setbe
popa
pop
imul
insl
data16
lcall
loopne
and
mov
aas
cmp
out
push
xlat
ljmp
js
pop
push
adc
mov
mov
pop
shll
mulb
push
out
mov
push
test
add
sahf
rcrl
and
or
xchg
popf
test
add
leave
into
jb
stos
mov
add
dec
clc
mov
push
inc
fsts
sahf
inc
gs
gs
push
push
xchg
mov
in
mov
xchg
in
pusha
aaa
call
mov
cmp
add
sbb
out
dec
aaa
push
sbb
fdivrp
lds
cmp
fldl
in
cld
or
inc
cltd
jnp
xchg
and
icebp
push
cld
movsb
js
cld
cmpsl
mov
iret
loopne
xor
fdivp
push
into
or
cmpsl
mull
jge
cmp
push
leave
push
push
icebp
stos
mov
jne
mov
and
js
movsb
jge
mov
dec
ret
int
inc
or
fildl
jo
inc
lret
lds
push
lods
jnp
inc
sbb
imul
jne
adc
mov
lcall
mov
test
test
fs
in
inc
mov
and
pop
cli
fcomps
das
icebp
movsl
int3
mov
rcrb
ljmp
das
out
cmp
ret
xchg
mov
in
pop
imul
and
dec
nop
mov
mov
lea
xacquire
pop
adc
pop
test
mov
pop
sbb
lcall
inc
scas
mov
std
pusha
fmulp
xchg
xchg
sbb
or
xchg
stos
push
jb
sub
mov
aas
adc
sbb
lods
xor
sub
jne
cmpsb
jb
cld
stos
in
push
sub
js
adc
xor
and
je
adc
in
in
add
fs
bound
fdivr
cltd
orb
push
pusha
addr16
fdivr
mov
iret
imul
mull
mov
ljmp
ret
xchg
jbe
fildll
xchg
icebp
je
push
and
sbb
cmpsb
cmc
dec
push
jo
sahf
test
mov
mov
cmovp
pop
or
outsb
dec
adc
inc
pop
push
js
jmp
jecxz
cmp
xor
int3
inc
dec
cs
movsb
movsb
xlat
lret
cltd
jns
adc
push
imul
xor
andb
sbb
std
fs
stos
jle
or
das
cltd
cli
and
inc
sub
lock
jge
lret
mov
push
jno
pop
insl
test
inc
xor
mov
add
jp
lret
out
jnp
push
fnstsw
sbbl
mov
js
adc
push
cmp
aaa
ja
lock
mov
cld
std
add
pop
mull
out
xor
xchg
push
mov
cmp
imul
mov
lcall
bound
sbb
mov
push
outsl
clc
les
mov
rorb
xchg
xchg
xchg
dec
mov
xchg
or
jmp
adc
and
cmc
fs
cmp
xlat
dec
add
lds
leave
int3
sbbb
lahf
lret
insl
add
pop
in
sbb
repnz
or
js
add
loopne
iret
push
popa
lret
decb
and
ja
and
adc
cmp
lcall
dec
adc
ljmp
cli
pop
popf
rcr
and
push
dec
movsl
data16
push
lret
xchg
sti
lret
cmp
cwtl
arpl
xchg
inc
jbe
inc
xor
fnstsw
sub
nop
out
lea
dec
out
cmp
scas
add
outsb
call
imulb
push
testl
cmpsl
pop
dec
jbe
mov
xchg
icebp
or
mov
sar
push
jecxz
and
and
cmpsl
out
sub
and
pop
jmp
jne
popa
stos
loop
inc
pop
repnz
mov
adc
mov
sbb
push
ja
imul
mov
arpl
stos
pop
xor
inc
push
movb
push
mov
adc
dec
mov
inc
sbb
xchg
jmp
xchg
or
jmp
fcompl
cmpsb
xlat
cli
popa
add
rcr
cmp
clc
and
stc
fdivl
sbb
cld
inc
sbb
stos
xchg
ret
popa
fstpl
gs
push
pop
dec
xchg
jp
cmp
ret
xor
jns
aaa
or
and
mov
sbb
push
jmp
sub
adc
jo
adc
arpl
jle
cld
xor
fwait
or
scas
cmpsb
adc
test
push
cmp
rcr
inc
pop
or
adc
cmp
push
popf
inc
adc
pop
pop
xor
movsb
into
icebp
ljmp
or
fs
int3
push
movsl
xchg
lods
in
mov
bound
add
mov
xor
or
xchg
fisubs
mov
call
xchg
insb
pop
adc
shl
pop
dec
cmp
fs
xchg
push
std
mov
mov
mov
hlt
dec
jge
pop
addr16
test
les
mov
fisttpll
and
faddl
cmp
add
xor
push
insl
xchg
lods
lret
jo
mov
fldl
or
sub
lods
sbb
mov
and
mov
stc
insb
xchg
push
mov
stc
pop
fs
push
rorb
cltd
ret
xor
jae
push
jl
mov
push
hlt
bound
mov
push
divl
sbb
jno
clc
jae
or
mov
jnp
jecxz
xchg
psraw
or
scas
std
dec
insl
es
test
fildll
repnz
or
jae
out
cli
or
xchg
pop
pop
push
aas
pop
in
and
lods
das
xchg
mov
icebp
rorb
pop
add
lret
nop
cli
loop
pop
pop
nop
out
add
mov
lds
cmc
mov
in
mov
mov
adc
in
cmp
or
inc
jb
movsb
adc
fmuls
adc
rorb
mov
cld
push
jp,pn
fwait
ret
and
sbb
shll
mov
inc
xchg
clc
iret
movsl
addr16
sbb
into
rcrl
mov
xorb
inc
jg
jb
movsb
icebp
mov
loopne
insl
jmp
bound
dec
mov
test
shlb
adc
push
jmp
pop
insl
loopne
ret
into
push
int3
out
lcall
into
push
pusha
std
mov
call
cld
mov
outsl
std
lret
jecxz
in
call
adc
repnz
mov
add
inc
mov
dec
pop
ja
cmp
xor
lea
mov
mov
push
jns
out
adc
or
or
pop
std
aam
push
mov
sub
xchg
fsubl
add
jmp
in
push
pop
in
jge
mov
dec
mov
dec
je
lret
sub
sub
int
jae
scas
adc
sbb
mov
repnz
enter
insb
adc
lock
xchg
dec
sbb
out
cmp
xorb
mov
clc
lock
xchg
or
inc
mov
ss
or
mov
out
or
sbb
or
out
jge
push
push
dec
add
push
pop
cwtl
mov
mov
mov
lret
loope
paddsb
xor
mov
and
jmp
out
or
mov
mov
lcall
mov
add
jb
cmc
mov
push
and
xor
or
sahf
pop
pop
push
add
jg
mov
pusha
jl
repnz
or
xchg
loopne
loope
dec
mov
or
xor
icebp
lds
cmc
pop
cld
fidivl
mov
mov
mov
mov
xchg
adc
inc
and
iret
or
push
popa
movb
mov
movsb
xorb
mov
sbb
addr16
dec
outsl
mov
mov
sti
sub
dec
and
mov
adc
mov
insb
push
or
and
aad
loop
xlat
adc
add
incb
add
xor
sti
loopne
or
xchg
inc
int3
sbb
jecxz
out
or
adc
cmp
sbb
jl
fwait
mov
add
add
cmc
or
xor
add
insb
lods
rol
das
movsl
vmread
fstl
and
inc
aam
sbb
mov
mov
sub
push
mov
aad
movsb
sub
mov
fucomi
fdivrl
sub
ds
icebp
cmc
pop
xor
sub
pop
jl
call
or
mov
sbb
test
divb
jnp
adc
fidivs
jns
inc
push
lea
loope
sub
stc
icebp
jbe
mov
cmc
lret
and
roll
push
pop
out
mov
aad
sbb
mov
cmpsl
and
push
mov
insl
push
dec
mov
out
sbb
into
not
into
in
jecxz
add
pusha
into
xchg
movsl
dec
in
dec
repz
shrd
push
push
mov
xchg
dec
dec
mov
sbb
lahf
movsb
inc
adc
add
lcall
fstps
jnp
stc
psrad
jne
mov
sarl
rorl
xchg
cmpl
ss
jecxz
jmp
jb
cmp
sbb
fsubrs
push
cs
mov
mov
mov
push
mov
out
fcomps
sbb
adc
test
xchg
sbb
leave
and
test
cmc
push
pop
pop
test
jle
mov
nop
jmp
and
mov
cs
pop
ljmp
sub
xchg
lds
xchg
dec
sti
jae
pop
add
dec
nop
push
mov
xor
cmpsl
inc
aam
push
xchg
fbstp
out
pop
movsb
lods
mov
movsb
scas
movsl
cmp
and
aad
adc
ror
imul
sahf
jmp
jecxz
cmp
mov
out
mov
scas
ss
sbb
call
inc
xorl
movsl
inc
sti
pusha
jnp
aaa
int3
jle
mov
inc
addl
xor
frstor
inc
aad
ret
leave
or
sub
dec
mov
push
cltd
adc
pop
xchg
aam
aas
sub
cli
call
add
cld
inc
xor
dec
movsl
dec
sahf
and
mov
out
mov
jmp
mov
ds
mov
sar
mov
int3
aam
and
xchg
jmp
movsl
inc
pop
bound
adc
rcrl
xor
xor
out
xor
ljmp
call
sarl
jle
mov
push
mov
fadds
adc
cmpsl
bound
push
jae
or
bound
das
adc
pop
push
shrb
jge
mov
adc
stos
lret
rorb
mov
mov
lods
jmp
mov
out
stc
movsb
stos
and
sbb
nop
popa
and
xchg
rolb
js
fsubl
sbb
add
mov
lock
dec
dec
sub
loop
sub
mov
fs
insl
mov
pusha
push
stc
in
ljmp
jo
fidivs
push
movsl
add
mov
sbb
mov
and
or
jbe
push
repnz
rcr
inc
pop
repz
repnz
cmpb
sub
insb
cmp
ss
int
insb
ror
in
cmp
data16
loopne
sbb
mov
idivl
sub
in
sbb
je
int3
or
sbb
jg
ljmp
cwtl
rol
int3
pop
push
ljmp
frstor
adc
sarb
scas
int
imul
jns
sbb
mov
es
xchg
aaa
mov
fwait
xor
lcall
xlat
into
cltd
notl
push
outsb
adc
or
stos
lds
sbb
or
push
lcall
and
and
filds
ret
stos
adc
in
dec
test
or
jbe
dec
xor
mov
add
xor
shll
add
fdiv
push
or
mov
xor
repz
inc
mov
lcall
fcmovu
lcall
push
push
and
push
jl
pop
xchg
jle
pop
fistps
repz
dec
push
das
sbb
popf
inc
and
das
int3
add
xor
xchg
stos
jae
pop
gs
ror
outsl
aad
or
and
jb
out
mov
ret
mov
inc
mov
fnstcw
mov
jp
iret
sarb
aad
test
jnp
leave
mov
pop
mov
lahf
popf
sbb
int3
mov
sbb
adc
test
lds
gs
ret
mov
inc
adc
jecxz
mov
sbb
stc
and
std
mov
push
int
fbld
mov
xor
dec
pop
inc
adcl
add
arpl
ljmp
xor
pop
pop
pusha
mov
aad
jecxz
inc
mov
mov
and
push
sarb
rolb
sbb
nop
push
ficompl
and
push
int
sbb
sahf
in
pop
pusha
pop
scas
fiadds
in
pop
dec
mov
and
inc
rcrl
adc
ficoml
cli
test
xchg
js
fldz
adc
test
jnp
ja
pop
sub
lahf
sub
inc
cmp
repz
inc
push
cmp
in
scas
fcoms
imul
xor
das
add
outsl
xor
add
ss
fs
mov
mov
xchg
inc
pop
dec
loopne
imull
sub
adc
add
sbb
push
or
cmp
jb
in
adc
and
add
and
push
adc
lcall
shll
fidivs
cmp
jle
hlt
aaa
and
aad
outsb
xchg
popa
loopne
ret
pop
inc
insb
inc
mov
sbb
es
lcall
mov
aad
adc
and
test
arpl
sbb
cmp
sub
cmc
pushf
ficoms
jbe
or
or
cld
and
aaa
push
add
mov
fisubrs
sub
ljmp
js
mov
push
or
adc
js
or
addb
mov
mov
int
lods
jbe
add
lsl
push
mov
ret
stc
mov
pop
in
mov
push
outsl
data16
iret
pusha
iret
outsl
pop
das
lret
push
xor
cmp
jecxz
and
imull
jge
push
and
scas
jp
mov
shrl
int3
stc
fcomps
insb
lcall
sbb
lds
lcall
push
or
push
inc
inc
ror
ret
mov
aam
sbb
cltd
inc
jno
mov
scas
cld
pop
add
xor
push
std
sbb
push
std
mov
push
dec
sahf
dec
outsl
inc
or
icebp
and
inc
mov
sbb
stos
shll
push
and
sbb
dec
enter
and
mov
repnz
into
icebp
jae
call
repz
cwtl
movsb
and
xchg
enter
sbb
rolb
pusha
mov
outsb
jns
cmp
imul
jno
jge
sbb
or
adc
xchg
dec
and
push
push
mov
inc
push
push
lods
and
ficoml
inc
sti
cs
test
pop
bound
cmpsl
es
js
int3
enter
sbb
sbb
and
stos
out
repz
test
and
cmc
mov
inc
dec
shlb
cmp
xchg
iret
jmp
jae
je
out
mov
mov
add
sarb
adc
gs
int
cld
out
pop
aam
adc
ror
cmc
out
mov
push
and
sub
ljmp
call
fwait
pusha
push
repnz
jecxz
cmp
pop
test
push
xlat
or
adc
jne
jb
or
out
push
aas
or
ljmp
adc
add
cmpsl
and
fistl
push
xor
bound
sahf
pop
mov
inc
repnz
push
int3
and
jmp
adc
in
sti
fadds
clc
and
pop
add
push
leave
mov
mov
mov
in
dec
dec
jns
jns
and
loop
inc
mov
in
mov
push
inc
dec
adc
cs
pop
or
ja
into
pop
jmp
xor
mov
ror
mov
imul
out
pop
mov
inc
dec
mov
xchg
push
mov
ret
pop
repnz
mov
mov
sub
or
cmp
mov
xor
test
iret
pushf
lods
insb
enter
dec
popa
sub
out
pop
mov
jg
inc
add
mov
adc
test
jle
pop
and
test
dec
pusha
push
lods
mov
call
adc
fsubs
mov
and
aad
out
mov
cmp
lds
cmp
fs
sahf
insl
popf
mov
xor
jp
or
arpl
cmp
iret
shlb
jp
jle
lret
sbb
and
dec
jmp
sbb
not
xchg
mov
fs
mull
mov
mov
test
inc
cmpl
dec
cli
adc
mov
inc
movsl
adc
pop
sbb
jae
inc
mov
cmp
mov
jl
and
pop
lcall
or
addr16
fwait
mov
aad
dec
imul
jmp
push
out
cmpsl
notl
fldcw
std
popf
inc
out
or
aam
inc
mov
inc
cmp
xor
inc
es
xchg
inc
sti
lods
rcl
outsb
lea
in
lret
loope
push
scas
jo
or
adc
pop
mov
cli
mov
cltd
cmp
and
jg
adc
daa
inc
aas
mov
ljmp
lahf
pop
cmc
mov
cmp
ret
and
insb
insb
mov
stos
out
clc
ljmp
into
sbb
pusha
cmp
loope
loope
fsubr
ds
xor
loop
pop
or
imulb
mov
mov
call
pushf
xchg
es
faddl
sub
hlt
mov
xor
jo
rclb
loope
cwtl
outsl
jne
lret
pushl
mov
adc
cmpsl
fisubs
sbb
sti
clc
jo
xor
movl
cmpsl
lods
pop
mov
icebp
sahf
fs
out
xor
mov
sbb
mov
sbbl
jns
pop
cmp
adc
sbb
enter
aam
int
push
jp
loope
pop
xor
int
adc
push
je
ficoml
mov
enter
and
xchg
jae
sbb
mov
iret
in
ljmp
popf
dec
and
std
pop
movb
pop
daa
mov
ds
jle
stc
rorl
enter
xor
mov
cli
add
in
in
push
lock
jge
jbe
popf
ss
lods
push
shl
adc
add
sarb
ds
xor
pop
mov
les
popf
and
mov
test
jno
inc
dec
loope
xchg
lods
push
add
push
fcompl
pop
sub
into
inc
outsl
test
stos
aaa
dec
xchg
jb
xor
scas
sbb
inc
pop
loop
idivb
rcl
loop
push
or
inc
sbb
jb
jo
idiv
dec
ds
push
inc
push
add
cli
jno
mov
in
sbb
or
lds
pop
push
ss
push
pop
adc
sub
sbb
sbb
cmpl
and
lea
jne
out
ljmp
dec
roll
call
cmc
mov
fld
jo
cltd
xor
xchg
je
aas
cli
out
sbb
sbb
adc
pop
pusha
inc
push
imul
ja
call
push
push
mov
mov
mov
inc
and
aad
mov
mov
and
xchg
dec
mov
lods
and
enter
pop
and
or
inc
fdivp
stc
pushf
xchg
incl
adc
xor
and
xlat
sahf
in
fmul
fwait
lret
dec
sbb
test
sarl
xchg
aas
jg
push
sahf
lcall
add
push
mov
mov
icebp
xchg
out
repnz
sbb
cld
ss
and
cmp
inc
sbb
adc
xchg
lea
sti
mov
push
sub
xor
fstp
add
mov
leave
mov
dec
sbbb
je
sub
mull
notl
or
mov
scas
jae
and
aas
js
dec
jecxz
sbb
aam
subb
pop
jbe
imul
leave
cwtl
adc
xor
xor
outsb
cmp
push
sbb
ss
push
jbe
cmp
sti
mov
and
lret
out
sbb
cltd
fidivl
sbb
loop
pop
insl
push
aam
pop
icebp
xor
or
jmp
lret
nop
test
addr16
jle
pop
jl
dec
loope
iret
or
jbe
mov
inc
icebp
mov
insl
sub
xchg
sbb
cli
fs
jl
call
movsl
rclb
adc
dec
cmp
dec
imul
data16
mov
mov
and
push
insb
or
loopne
out
out
into
push
ret
add
adc
mov
test
insb
or
lock
jb
fbstp
mov
add
cltd
idivb
data16
movsl
xchg
loop
xchg
aaa
xor
in
pop
inc
mov
test
test
jecxz
cltd
in
or
inc
sbb
or
cmpsb
or
data16
mov
repz
pop
add
sub
leave
dec
sti
sub
out
push
imul
mov
sub
popl
sub
mov
cmp
mov
mov
stc
cmp
in
mov
pusha
clc
dec
push
ds
and
add
sbb
xchg
lock
je
aaa
cs
loopne
aad
mov
nop
aaa
jl
xchg
sub
mov
adc
stc
sub
xchg
cli
sbb
stc
in
scas
inc
xchg
fstps
out
dec
adc
cmpsb
mov
jne
jge
fbstp
push
ficompl
ret
bound
ss
cwtl
scas
push
jb
mov
shl
add
cmpsb
lcall
sub
clc
mov
mov
or
mov
test
flds
mov
cmpb
mov
cmp
pop
pop
push
lods
int
cmpsb
pop
iret
sbb
jo
nop
pop
xchg
jle
mov
and
mov
cmp
cltd
cmp
inc
jg
test
lods
push
mov
lods
lret
out
sub
lret
mov
lret
sub
jns
and
cs
in
lahf
adc
push
data16
pop
add
sbb
inc
push
pusha
jl
jle
xchg
sub
xor
add
lcall
clc
cmp
test
int3
ljmp
gs
fdivr
imul
lret
orl
adc
dec
stos
or
movsb
mov
sub
repnz
test
ds
inc
ja
sub
rorb
daa
enter
mov
cli
int3
xor
cmpsl
cmp
fst
sub
sti
cmpsb
pop
mov
mov
gs
imul
or
clc
rol
add
inc
jmp
rolb
int
loope
nop
divl
mulb
sbb
sub
jecxz
cmp
dec
in
or
rclb
daa
addb
adc
repz
or
xor
lahf
cmpsb
stc
adc
adc
sbb
pop
sbb
outsl
or
xchg
les
in
or
repnz
dec
std
inc
movsb
loopne
jnp
movq
push
mov
andl
idiv
cmp
mov
loop
mov
int3
test
fsts
movsb
xor
mov
fwait
inc
mov
shlb
push
bound
jb
mov
aad
mov
testb
sub
mov
out
pop
int
mov
cmp
int
pop
xor
inc
cmc
mov
sbb
shrl
sbb
int
sub
pop
lods
mov
out
shlb
mov
stc
insb
imul
lret
out
cmp
jmp
dec
mov
ss
sub
outsb
cmp
fidivrs
add
mov
dec
mov
dec
inc
int3
outsb
push
xchg
cltd
gs
mov
cmp
mov
sti
mov
and
call
loopne
ss
cmc
add
pop
movsb
mov
in
movsb
push
push
pop
outsb
push
or
loope
in
dec
out
mov
add
jne
cmc
out
push
cmc
xchg
les
mov
ret
inc
sbb
or
fdivrp
aad
push
fcoms
fld
mull
jmp
pop
mov
inc
shl
dec
mov
pop
push
pop
push
shrb
test
scas
push
mov
and
push
push
cmpsb
lods
add
push
sbb
int3
bound
dec
push
dec
or
mov
or
les
sarl
repz
push
mov
subl
incb
sbbl
cmp
inc
ror
hlt
or
int
jg
dec
ss
inc
push
pusha
cld
dec
dec
jecxz
cmc
mov
adc
repz
cld
fsubrp
insb
xor
mov
mov
in
jne
xchg
icebp
mov
aaa
sbb
mov
sub
sahf
cmp
add
mov
dec
stos
and
ja
inc
cmpsl
test
mov
clc
sbb
popa
dec
pop
xchg
sub
aaa
outsl
lcall
xchg
cld
cltd
rorl
xchg
dec
sti
into
fdivrl
push
lods
pop
roll
daa
sbb
adc
loope
pusha
loop
inc
pop
jne
cmc
loope
jg
gs
ljmp
mov
in
xorl
inc
popf
sub
and
push
push
cmp
jne
fimull
ljmp
addl
mov
pop
and
aaa
inc
mov
scas
subl
jl
imul
int
dec
imul
jge
sbb
inc
or
roll
or
movsb
aaa
adc
repz
mov
mov
sub
sbb
cld
and
scas
add
add
add
inc
adc
stc
mov
idiv
adc
movsb
lock
xchg
cld
stos
dec
xor
int3
and
xorl
or
xchg
mov
push
adc
cmp
jecxz
ret
test
xchg
imul
stos
je
inc
mov
test
inc
add
push
or
int3
in
adc
popa
cmp
pop
cli
dec
push
lahf
inc
lock
int3
xlat
stos
scas
xlat
or
add
adc
inc
mov
repz
xor
push
out
jb
ret
add
add
imulb
xchg
lea
lds
add
ljmp
inc
mov
cld
dec
mov
sti
das
out
daa
inc
or
add
dec
jnp
add
and
bswap
xor
sbb
mov
repnz
movsb
cmc
mov
add
dec
jecxz
repnz
lret
or
xchg
inc
xor
es
cmp
cmp
loop
inc
sbb
mov
inc
and
push
in
mov
cs
dec
fidivs
dec
mov
int
cmp
sub
in
jbe
add
and
in
loope
pop
aam
sysret
xor
jae
idiv
fwait
sar
icebp
cmp
sub
jle
movsl
dec
inc
loope
adc
cmp
pop
pop
loope
sqrtps
bound
push
xchg
out
add
jne
test
lret
shlb
push
in
and
fs
cmc
cli
jmp
lds
cmc
xor
stos
mov
jno
jl
xor
mov
or
jg
stos
dec
xor
outsl
jnp
arpl
add
mov
inc
and
repz
sub
or
icebp
push
inc
mov
lret
pop
cmpsb
sbb
in
insl
lret
stc
aas
mov
inc
std
pushf
int3
sub
and
sub
test
inc
shll
cmp
data16
mov
loopne
xchg
cli
movsl
xor
add
int
jmp
sbbl
push
sbb
ja
push
sbb
lods
mov
sbb
mov
sbb
mov
movsl
inc
jge
xchg
and
cmpsb
jmp
jle
push
jne
fwait
not
jge
inc
xchg
sbbb
lret
cmp
gs
jp
incl
jae
or
dec
sbb
adc
xor
int
popa
popa
mov
xchg
mov
mov
adc
cmp
push
call
dec
jo
sbb
out
mov
cmp
jp
icebp
inc
adc
xchg
xchg
xorl
fistps
dec
sbb
sub
repnz
lods
andb
test
or
cld
mov
adc
leave
add
ljmp
mov
popa
pop
je
mov
das
in
movsl
repnz
and
adc
rorl
jecxz
and
dec
mov
mov
or
dec
mov
and
icebp
imul
jle
out
sti
xchg
stos
jecxz
int
lock
sbbb
aam
adc
cmp
sbb
cmpl
xchg
fcoms
push
call
mov
or
ret
cld
push
in
mov
neg
shrl
add
rcl
ret
fs
repz
sbb
jb
ret
add
inc
pop
adc
fsubl
leave
and
pop
int
inc
loope
add
push
fwait
lods
adc
ss
adc
ja
mov
loopne
inc
popa
xor
add
add
pop
and
sbb
inc
ret
cmpsl
fldt
mov
pop
push
int
fisubs
movsb
adc
mov
push
or
cli
fisubrs
sub
cmp
ror
loope
xchg
lds
dec
rcr
stos
xchg
mov
xchg
cmp
ds
popa
imul
sub
inc
jmp
inc
lret
fisttpll
push
std
push
dec
outsb
lods
xchg
leave
popa
sub
mov
and
lea
xor
and
push
sub
test
push
fwait
cmp
cld
sahf
inc
add
stos
pop
jp
push
lret
mov
xor
int
popf
fiaddl
cmpsb
test
jl
cmc
mov
mov
std
outsl
adc
xor
adc
xchg
push
mov
dec
jb
pop
mov
fs
dec
pushf
jge
dec
and
inc
or
adc
dec
push
ret
push
movsl
call
cmpsl
push
jmp
dec
fistps
or
jmp
mov
lret
cli
cld
shrb
dec
push
cmpsl
adc
gs
and
test
mov
daa
icebp
js
sbb
add
jl
add
std
ljmp
lahf
or
arpl
jne
lock
shrl
dec
jne
fsubrs
mov
cmpsl
push
mov
mov
and
das
pushf
dec
xchg
repz
enter
or
jmp
add
push
dec
push
push
jg
mov
aad
dec
enter
mov
insl
mov
mov
shll
pop
push
pop
pop
dec
addb
cwtl
hlt
mov
in
div
jl
sub
jl
ljmp
dec
sbb
test
sbb
gs
pusha
add
fdivs
jge
mov
mov
lods
push
add
call
push
repnz
int
pushf
ss
cwtl
ljmp
inc
shlb
bound
inc
cmp
and
cmp
xor
mov
mov
dec
imul
xchg
sbb
lock
cs
or
stos
xchg
dec
inc
rorb
xchg
sub
mov
fs
aam
arpl
adc
xchg
sbb
or
into
jae
out
sbb
out
negb
cmp
sbb
mov
pop
xchg
shrl
test
push
mov
push
outsl
jg
sbb
mov
rcll
jno
mov
fs
pop
dec
fwait
or
stos
mov
pop
sub
lods
or
gs
in
mov
mov
dec
shll
icebp
lock
fucomp
dec
or
nop
xor
dec
mov
mov
shlb
dec
pop
dec
mov
mov
jbe
fstpt
inc
push
test
ja
xor
mov
aad
add
xchg
jp
out
adc
xlat
jle
nop
sub
fldcw
repnz
dec
dec
and
pop
sub
in
mov
sbb
test
pop
das
lods
outsb
lret
mov
sbb
lret
xchg
imul
cld
ret
orl
hlt
into
ret
lea
push
test
aad
ss
or
inc
mov
lret
add
jecxz
repnz
mov
cmpsl
loop
mov
and
or
ljmp
add
lahf
jle,pt
lcall
adc
sub
outsl
mov
jp
es
leave
sbb
imul
sbb
lcall
lock
fnstcw
mov
or
inc
and
push
xor
scas
in
test
mov
dec
mov
lock
leave
pop
push
imul
outsb
jp
inc
mov
pop
sbb
pop
cmpsl
xabort
ret
cmc
out
clc
insb
add
loopne
dec
repz
push
dec
fistl
xchg
push
xchg
fs
jg
dec
int3
pop
iret
je
rorb
inc
push
fildl
fwait
dec
jg
add
mov
test
addl
and
jge
inc
mov
out
imul
xchg
stc
sbb
aam
movsb
mov
shl
inc
mov
lds
mov
repnz
fwait
inc
scas
dec
xlat
pop
repnz
push
mov
push
pop
lret
cld
xor
sbb
stc
repz
or
push
inc
push
in
pop
inc
mov
negl
push
les
cltd
pop
and
and
popf
inc
cmp
imul
rcrb
sub
jne
sub
dec
shl
notl
adc
dec
push
cmpsb
push
cmpsl
xchg
xor
dec
mov
rcr
adc
dec
mov
pop
adc
dec
push
inc
inc
mov
mov
mov
loop
jge
test
daa
mov
add
fists
loope
sbb
shl
lret
xor
jp
mov
mov
repnz
pop
mov
mov
jg
xchg
call
cmp
out
aam
test
rorb
add
das
movsl
add
ja
aam
decb
push
ret
dec
inc
ljmp
dec
sub
mov
into
imul
mov
mov
mov
cmc
bound
add
stos
data16
test
and
jns
cmp
jge
jecxz
jns
cmc
insb
cli
lock
inc
repnz
or
lock
inc
in
stos
adc
cmp
xchg
or
call
jg
test
sub
ss
roll
insl
dec
pop
fldenv
pop
add
jmp
in
mov
adc
jecxz
out
insl
inc
push
jg
cmp
dec
popa
lahf
sub
aaa
daa
inc
ljmp
jl
gs
dec
out
push
adc
pop
movsl
add
shlb
sbb
sbb
mov
jns
lds
push
dec
stos
mov
les
sub
insl
mov
ja
gs
cwtl
xchg
sti
popa
add
push
mov
jmp
sbb
fcoms
mov
xchg
mov
imul
pop
loopne
aam
mov
cmp
jmp
loopne
cmp
nop
ret
inc
imul
stc
fidivrl
repz
cs
in
and
pop
repnz
out
adc
loop
and
cmp
cs
dec
fwait
repnz
lea
scas
add
xor
xchg
xchg
jl
xor
and
push
add
and
shr
jo
ds
xor
movsb
push
loop
xor
aaa
jbe
pop
mov
cltd
push
testb
repnz
cmc
sahf
mov
xchg
aam
lods
test
fstl
test
lock
push
lods
aas
jne
in
mov
push
bound
loop
fwait
cmp
or
cmpb
lods
mov
int3
xchg
shlb
sbb
aam
lahf
pop
push
pusha
or
fwait
enter
fsin
cld
ret
jl
mov
imul
popf
cs
les
loop
sub
nop
dec
jo
and
fwait
xor
mov
sti
mov
dec
dec
fwait
lods
mov
lea
ja
cli
mov
mov
pop
mov
mov
jg
inc
sbb
mov
lret
cli
in
and
push
or
sub
mov
movsb
mov
jp
out
jne
mov
data16
subl
push
push
and
fistpl
push
int3
inc
jbe
cmp
in
cmpsb
jo
insl
xchg
adc
xchg
mov
cs
mov
into
rcll
testl
repnz
mov
les
movsb
in
pop
andl
and
jbe
jne
out
in
lea
add
dec
mov
mov
pop
int
cmp
out
push
mov
and
cmp
dec
add
in
popa
rol
cmp
mov
inc
jmp
cmp
sbb
ret
inc
ds
es
jp
testb
mov
inc
into
xchg
cmp
xchg
xor
push
or
andb
ret
dec
loope
movsb
and
dec
mov
pop
cs
pop
ror
cmc
lds
ja
cmp
xchg
iret
call
scas
imul
fstpt
dec
cwtl
inc
xorl
cmp
cmp
hlt
outsb
aad
sbb
xor
mov
jmp
mov
cmp
arpl
xor
pmuludq
cmpsb
mov
inc
mov
pop
sub
push
add
xor
icebp
shl
lods
call
fsts
mov
pop
xchg
out
push
xchg
jbe
insl
adc
mov
push
dec
add
addb
inc
push
ljmp
clc
xlat
mov
inc
test
hlt
mov
or
mov
cmpsb
repz
mov
mov
pop
adc
cmp
mov
aas
add
adc
inc
dec
sbb
or
dec
sub
jne
test
ds
and
xor
fs
dec
and
jge
and
mov
clc
or
fucomp
or
in
testb
out
cmp
push
loope
hlt
shll
inc
mov
jp
and
jecxz
push
mov
out
xor
cmpsb
xor
xchg
jmp
and
dec
and
mov
push
add
mov
std
test
sar
inc
add
clc
and
mov
adc
mov
mov
icebp
push
push
sbb
or
dec
push
push
scas
jge
sbb
mov
xlat
cmp
mov
out
cs
sub
sbb
mov
inc
fnstsw
mov
cmp
mov
and
pop
cld
mov
call
mov
inc
fs
adc
dec
test
and
push
loop
stc
adc
xor
setno
mov
mov
and
inc
inc
sbb
fisubrs
pop
pop
jmp
pop
xchg
cmp
arpl
das
decb
push
jae
jmp
jmp
mov
add
aad
push
mov
test
lds
or
or
inc
sti
xchg
movsb
subb
or
outsb
inc
jbe
adc
jno
fsubrs
cmp
inc
and
sahf
adc
xor
mov
fisttpl
ret
call
cwtl
add
mov
fmul
sti
pushf
and
or
push
push
xchg
push
xlat
pop
loop
dec
out
dec
mov
fisubl
bound
inc
mov
lds
pusha
lcall
jle
mov
push
out
pusha
xchg
sbb
push
pop
add
shll
mov
mov
fwait
stos
inc
decb
pop
lcall
mov
add
imulb
mov
xchg
jg
in
aaa
ss
or
mov
cmp
int
fisubl
xor
cmp
lods
shl
mov
or
jecxz
mov
cmp
iret
push
adc
adc
orb
xor
jp
mov
shlb
in
mov
add
clc
and
fwait
pop
xor
out
scas
loop
aas
dec
dec
sbb
repnz
xchg
and
hlt
dec
imul
add
les
cmp
repnz
mov
das
std
nop
dec
cld
loopne
push
inc
jmp
pop
ret
and
fdivl
or
popa
pop
in
jno
adc
cmpsl
lds
inc
mov
mov
aas
xchg
sbb
mov
outsl
or
jge
push
fstpt
cli
add
icebp
icebp
stc
jne
adc
or
pop
sub
mov
jmp
ljmp
dec
pop
lock
lea
inc
pushl
test
jmp
shl
sbb
iret
xor
adc
jnp
push
test
jp
cli
dec
adc
adc
call
iret
lret
fiaddl
mov
pandn
sti
sub
lock
adc
imul
xchg
or
cmp
and
imul
jmp
stos
jb
jnp
jle
stc
xor
mov
stos
icebp
mov
add
dec
and
mov
lret
mov
bound
mov
cld
loopne
cli
push
lret
aas
mov
adc
cmp
dec
jne
push
ja
mov
rcrl
repz
imul
cmc
outsl
ret
push
push
or
mov
ljmp
sarb
pusha
pop
jae
outsl
lcall
mov
mov
push
inc
movsl
push
lock
dec
enter
cmc
stos
push
in
cmp
jecxz
mov
xchg
pop
sub
sub
fsubrp
fistpl
mov
js
adc
stos
xchg
inc
dec
in
adc
mov
inc
andb
sbb
in
shlb
pop
jmp
lods
iret
mov
push
arpl
dec
int3
pushf
je
cli
sub
push
xor
sub
inc
add
adc
jmp
mov
or
xor
mov
xchg
pop
and
in
xchg
iret
aaa
clc
ficoms
push
jecxz
adc
ret
call
mov
xor
mov
fadds
pop
ret
nop
inc
testl
loop
inc
sbb
dec
testl
cwtl
jne
jle
mov
js
xchg
repz
mov
sub
and
sbbb
addr16
cli
dec
cmp
stos
enter
sbb
test
mov
xor
push
mov
mov
fbld
idivl
into
mov
sahf
in
jbe
jg
jmp
icebp
jb
and
inc
xor
ss
lods
std
inc
sti
jmp
mov
mov
adc
fstps
out
in
lds
sbb
xor
inc
jb
push
jg
leave
or
dec
dec
test
jnp
fs
in
shl
lock
mov
sbb
pushf
mov
sti
les
mov
inc
mov
jmp
and
cmp
stos
imull
jne
lock
mov
les
lods
aaa
adc
bound
xchg
lcall
sbb
insb
popa
sub
lcall
mov
mov
jne
das
mov
lock
loop
cmpsl
jbe
leave
adc
or
insl
xchg
push
add
xor
adc
jl
sbb
cmpsl
adc
aaa
and
out
mov
or
mov
mov
incl
fnsave
sub
pop
cmp
repnz
pop
insl
loop
inc
sbb
imull
ret
imul
push
xchg
jge
inc
dec
dec
inc
and
fs
cmp
fwait
or
mov
rolb
sbb
stos
ja
ds
arpl
adc
push
sti
les
mov
popl
mov
fldt
pop
movsl
repz
ljmp
mov
push
test
mov
jg
incl
loopne
fcoml
daa
data16
and
imul
cmp
adc
jmp
es
cmpsl
push
jmp
sub
push
sbb
imul
adc
mulps
mov
and
mov
test
data16
pop
xchg
sbb
in
sbb
dec
mov
imul
test
mov
push
xor
cmp
push
test
or
xor
in
adc
mov
jne
repnz
pusha
push
adc
jb
out
xchg
push
fldl2t
mov
jmp
adc
rol
addb
data16
nop
fsubrl
je
test
sbb
push
add
mov
add
cmc
xor
adc
sub
inc
sbb
dec
xchg
lret
add
lock
loope
xchg
das
sub
dec
clc
insl
cwtl
add
mov
dec
sub
cmp
insb
iret
ret
sarb
sbb
lea
or
mov
push
je
xchg
xchg
push
lea
pop
dec
add
aad
pop
cmpl
sbb
mov
in
dec
or
pop
ljmp
icebp
and
add
ja
mov
push
out
cmp
jmp
cli
dec
rep
mov
mov
sbbl
mov
leave
inc
hlt
push
mov
inc
cmpsb
jns
xchg
add
rclb
out
fwait
push
xor
pop
loop
mov
sbb
fwait
mov
sarl
pop
xor
cmpsb
dec
cltd
and
add
jl
call
in
cld
ss
aam
outsb
xchg
invd
jb
pusha
cmc
pop
mov
dec
xor
xor
insl
push
sahf
push
mov
push
pop
pop
mov
rcl
addr16
je
dec
xor
mov
jne
addr16
and
gs
addl
xor
addr16
call
jno
push
dec
cli
addr16
shrl
sub
ret
and
jbe
in
jbe
inc
inc
push
call
dec
sbb
out
mull
popf
subb
aaa
stc
aas
xchg
rclb
ficompl
in
out
inc
and
cmpsl
and
stos
gs
sbb
mov
int
cmpsb
cmc
testb
jl
jle
jb
testb
and
ja
dec
cmp
aam
inc
incb
arpl
mov
push
jle
or
loop
mov
dec
mov
sub
js
mov
lahf
test
je
mov
xchg
push
enter
or
call
push
xchg
push
hlt
jnp
scas
fldl2t
in
xchg
call
test
aad
stos
fsubrl
or
hlt
xor
pop
jmp
ja
outsl
push
bound
subl
repnz
js
idivl
add
sub
in
lds
lea
mov
or
mov
cs
je
pop
insl
add
cli
in
sbb
inc
cwtl
arpl
icebp
dec
dec
or
mov
rorl
out
or
loopne
loopne
div
clc
js
push
push
fisubrl
sbb
pusha
push
inc
movsl
incl
jge
fisttpl
out
push
push
sub
cmp
xlat
mov
push
cltd
jnp
dec
pop
or
mov
pushf
loope
cmc
call
hlt
je
test
pusha
iret
push
mov
cli
test
in
out
jp
out
and
inc
push
cli
xchg
jg
push
mov
push
mov
mov
pusha
adc
icebp
mov
or
test
inc
popf
push
fidivrl
mov
icebp
xor
nop
cmc
fwait
xchg
xlat
mov
jmp
push
cmpsb
add
aam
rolb
enter
mov
dec
das
push
mov
add
adc
sub
fs
push
xchg
call
popf
push
icebp
movsb
movsb
or
pop
sti
sub
sbb
sub
outsl
sbb
xor
mov
adc
ds
gs
lret
jns
sbb
jo
test
data16
inc
xchg
loop
xchg
cmp
lahf
nop
add
xchg
adc
es
pop
lods
jne
and
xlat
mov
inc
xor
sti
aam
add
into
push
andb
inc
icebp
jge
push
out
test
je
scas
mov
inc
push
imul
push
adc
shll
test
jg
leave
test
fs
insb
scas
je
push
loope
xor
ret
xor
push
xchg
push
addr16
jle
fbstp
sub
push
xchg
add
cmp
add
frstor
mov
sub
ret
mov
loopew
sbb
cmp
jns
lock
std
repz
test
call
js
arpl
sbb
inc
mov
mov
stc
add
pop
or
int3
cmp
ljmp
mov
pop
addl
aaa
inc
inc
or
dec
adc
cmp
stc
insb
sbb
movsb
inc
jl
mov
cmpsl
ret
mov
push
mov
out
cmpsl
loope
and
lret
dec
adc
push
sub
cmp
aaa
lock
divl
jmp
and
test
mov
insb
loope
dec
adc
in
inc
pop
jp
jnp
or
xorl
daa
jle
int3
adc
inc
outsb
inc
add
testl
dec
cmp
cld
xchg
fildl
int
jns
aad
test
or
lods
lret
popa
ret
adc
out
and
jge
repz
push
mov
aam
inc
stos
pop
test
and
repnz
in
push
sbb
lahf
xor
inc
test
ret
outsb
pop
fnstcw
and
out
outsb
cmp
push
test
int3
jp
lret
cli
cli
pop
sbb
ss
inc
fs
lods
mov
shll
add
lret
sub
mov
out
mov
out
add
lds
fs
cmp
push
shll
push
addr16
cmp
jnp
xor
sbb
cmp
sbb
mov
mov
cmpsl
sarl
cli
cld
jb
out
clc
pop
mov
ss
aad
insl
jmp
lea
leave
add
and
pop
and
adc
jmp
pop
jbe
int3
icebp
hlt
xlat
insb
insl
rorb
or
movsl
or
leave
loop
pop
or
faddl
sbb
mov
and
jnp
bound
clc
lds
testl
rcrl
fcmovnu
hlt
cwtl
je
cli
lcall
incb
inc
movsb
sbb
aam
int3
sti
mov
push
aad
in
xor
sub
push
push
ret
add
or
fwait
testl
lods
mov
imul
paddusb
shlb
inc
or
out
and
ret
mov
stc
mov
adc
dec
cli
adc
fndisi(8087
and
jmp
mov
fs
pop
cld
cli
addr16
aaa
add
ljmp
sub
ds
inc
jmp
es
repz
mov
jg
or
jp
pop
test
movsb
fcomip
cmpsl
outsl
cld
push
xor
data16
mov
mov
enter
add
lcall
sbb
in
mov
push
cli
xchg
xchg
cmc
enter
shl
sub
out
xor
xchg
outsb
xchg
pop
dec
fsubrs
cmpsb
daa
pop
mov
jnp
sub
ret
fs
aad
inc
sub
nop
div
aam
sti
mov
repnz
mulb
cli
gs
xchg
mov
movsb
cmp
or
inc
sbb
sbb
loopne
mov
fwait
or
aad
xchg
and
js
xchg
gs
sahf
dec
aam
ret
xchg
mov
pop
cwtl
push
int
add
sahf
dec
out
sbb
pop
out
or
xor
fwait
repnz
sub
and
cmp
mov
mov
adc
stc
jge
outsl
dec
jmp
lds
and
sbbb
frstor
push
leave
rorb
xchg
sbb
add
bound
arpl
iret
push
cli
push
popl
lret
pop
jge
gs
or
mov
out
and
fisubrs
adc
push
sub
sub
andl
lds
cli
mov
pshufw
cli
xchg
int3
das
lock
mov
cmp
lahf
pop
mov
cmp
cmp
mov
outsl
int
push
lret
ret
add
cmpsb
dec
ret
lds
cmpsl
ret
stc
sahf
fdiv
scas
std
or
xchg
cmp
mov
add
divl
loope
push
in
xchg
sbb
in
sub
in
daa
in
cltd
out
mov
ljmp
push
and
sbb
pop
and
ds
std
rorl
nop
xchg
inc
adc
jmp
sti
pop
jo
lods
iret
cmpsb
xchg
lock
dec
or
cmp
movsl
fimuls
sbb
fisttpl
int3
add
jg
add
adc
cltd
push
mov
mov
movsb
les
lahf
into
sbb
decl
dec
lds
ret
cld
arpl
mov
push
stc
mov
int3
rolb
rorb
xlat
and
xchg
movsb
ljmp
xor
into
mov
fdecstp
sub
lds
addr16
test
call
xchg
adc
or
jl
pop
mov
jnp
dec
and
xor
push
pop
mov
lcall
push
ljmp
adcb
int
push
in
aaa
push
jp
ret
mov
push
push
xor
or
jne
adc
outsl
cmp
std
es
sbb
rorl
inc
jmp
lods
or
movsl
push
push
jl
shr
ljmp
dec
cmc
mov
scas
fadd
mov
dec
mov
xor
xchg
call
inc
mov
sbb
pushf
test
sub
out
lds
outsb
xchg
loope
data16
dec
ds
adc
pop
ljmp
sbb
jo
mov
cmc
repz
insl
fbstp
and
lods
popf
js
push
popa
popa
adc
rorl
fbstp
cmpsl
roll
xor
sub
scas
ljmp
cmp
pushf
sub
inc
pushf
push
xchg
enter
sub
aad
repz
aaa
lret
cmc
das
repnz
xor
mov
call
push
xlat
sub
int
and
jnp
mov
add
push
fildll
xchg
cmp
cmp
movsl
fwait
push
mov
jmp
shrl
jmp
push
mov
cmp
ret
stos
xor
mov
cmp
inc
dec
xor
xchg
lcall
outsb
inc
pop
loopne
lret
movsb
dec
cwtl
mov
xor
push
pop
cltd
jb
jl
ret
mov
lods
mov
mov
push
mov
fbstp
jns
sbb
cli
sti
inc
ret
xchg
aam
xor
xchg
inc
inc
arpl
mov
add
aas
scas
mov
cmp
mov
adc
jle
int3
dec
jbe
or
leave
ret
jns
xchg
popa
fsts
sahf
and
adc
adc
or
sbb
push
mov
inc
or
mov
lds
iret
icebp
or
sbb
fwait
rolb
addl
sahf
daa
jp
sbb
add
xchg
cmp
pop
sbb
jae
lahf
pop
dec
aaa
arpl
shl
mov
lret
or
mov
xor
add
mov
adc
mov
iret
jg
in
sahf
fidivs
jnp
mov
add
adc
imul
enter
data16
mov
xchg
jb
mov
pop
push
es
sub
imul
dec
and
sub
sahf
jmp
sbb
mov
lcall
lock
imul
mov
add
or
xor
outsb
outsl
push
sub
iret
mov
jbe
xor
test
aaa
sbb
fwait
jno
adc
fcomp
cmp
and
cld
subl
daa
jecxz
bound
test
xor
fwait
inc
sub
push
dec
xor
xchg
push
rol
fidivrs
adc
leave
add
les
mov
fldt
xor
cmp
xchg
cmp
mov
insl
xor
and
sub
outsb
jnp
xchg
mov
dec
in
xor
push
xor
je
and
lods
lcall
test
xor
push
pop
call
lret
lods
out
dec
movsb
insl
cmc
pop
mov
and
aaa
dec
subl
std
or
mov
cmc
test
lock
insb
cmpsl
mov
jmp
fwait
scas
mov
push
popf
jmp
cmc
cli
repnz
pcmpgtd
sbbl
mov
mov
add
pop
or
dec
sbb
cmp
xlat
add
test
cmpsb
add
jp
pop
sub
push
mov
sbb
add
cmp
add
lcall
rol
sbb
adc
mov
shll
mov
xor
imul
and
or
add
scas
fisubrl
fdivs
push
jecxz
mov
aaa
test
add
xchg
add
fisubl
fdivr
icebp
dec
jb
jl
ds
mov
mov
push
cwtl
out
aad
aad
jecxz
mov
dec
cmp
lahf
push
dec
mov
cli
adc
jbe
fstl
sub
popa
pop
rol
incb
mov
bound
outsb
in
jl
mov
add
lods
xchg
or
jb
lea
repz
aaa
out
mov
fs
int
sti
xchg
aas
jmp
cwtl
adc
dec
sbb
loop,pn
cmpsb
and
rep
es
incl
data16
push
push
mov
lret
xchg
cmp
cld
andb
mov
mov
clc
fisubrl
int3
jnp
or
iret
pop
sbb
xor
mov
in
dec
addr16
jge
jecxz
rorb
jmp
push
cs
mov
nop
stos
popa
cmpsb
lahf
push
in
xchg
cli
cmp
add
xchg
ljmp
pushf
inc
sbbl
fcompl
mov
std
or
pop
mov
xchg
dec
incb
popa
ret
stc
mov
popl
jmp
hlt
sbb
jle
movsb
mov
sbb
cmpsb
clc
ss
mov
or
ja
imul
nop
mov
mov
push
pop
mov
pop
cmp
mov
loopne
push
fwait
out
sub
pop
fsubp
mov
inc
sub
pop
dec
cmp
loop
in
xchg
xor
xor
out
dec
shrb
mov
leave
pop
sbb
fwait
sub
xchg
or
fidivs
jno
mov
mov
hlt
cmc
push
and
mov
sbb
mov
sub
mov
jmp
mov
inc
and
xor
or
adc
sbb
jb
ds
jmp
xchg
popa
jb
bnd
ret
or
jbe
adc
jne
pop
cltd
pop
sbb
sbb
pop
scas
fcoml
jne
mov
loope
add
mov
cmpsl
roll
mov
push
and
les
xchg
int3
push
cmc
sub
mov
jbe
popa
jp
cmp
push
jnp
stos
or
fs
ret
xchg
xchg
lahf
mov
pop
mov
popl
add
pop
ss
adc
jg
sbb
jnp
sub
in
out
push
in
adc
pop
and
aas
dec
fs
sti
aaa
or
sub
popf
out
lret
cli
add
ret
repz
in
cmpsl
mov
clc
outsb
sbb
lds
ljmp
ret
inc
out
ljmp
aas
cld
call
xor
sbb
push
inc
dec
push
ljmp
lods
mov
fldl
sub
cld
lods
sbb
cmpsb
stc
repnz
std
ss
movsl
push
sbb
lock
adc
fistpl
fs
loope
sti
add
jmp
in
movsl
inc
or
mov
loopne
mov
in
xchg
pop
or
adc
in
ljmp
add
sbb
and
inc
add
out
in
ja,pn
lods
loopne
add
loopne
fdivr
and
sbb
lods
cmp
xor
xchg
push
and
mov
out
leave
push
aas
subb
add
inc
xchg
pushl
rclb
sub
sbb
cmp
out
stos
or
xor
push
ret
dec
aad
xchg
sub
cmc
out
xchg
jbe
mov
shl
inc
movsl
sbb
push
mov
out
mov
pop
adc
enter
pop
cmp
or
cmpsl
jge
or
jns
and
cld
pop
out
cmp
push
fsub
lds
cmp
or
sbb
out
push
into
outsl
sbb
adc
std
inc
pop
xchg
nop
push
cmp
out
jb
sub
ret
jecxz
imul
es
sub
dec
push
xchg
out
rorl
fnstcw
mov
daa
xchg
mov
dec
push
leave
jmp
mov
inc
xchg
out
sub
inc
mov
lock
and
int3
push
out
and
cmp
jb
test
enter
mov
push
shr
push
cmp
les
add
cwtl
jmp
push
movsl
fldl
jns
mov
inc
dec
mov
gs
xor
inc
out
in
filds
les
mov
loopne
cwtl
dec
lahf
pop
daa
sub
sbb
sarb
adc
sti
icebp
inc
jmp
mov
bound
adcb
sbb
push
mov
push
shrl
rorl
ret
shll
xchg
and
popf
dec
dec
cmc
dec
or
in
or
cmp
mov
cmpsb
stc
sbb
mov
and
loope
stos
or
in
out
shlb
push
cmp
inc
mov
into
loope
add
arpl
jae
push
sbb
push
in
jl
out
call
add
push
sbb
dec
and
out
cmp
mov
nop
fstpt
loop
adc
ds
cmc
xchg
push
dec
scas
sar
or
and
or
negl
push
ret
xchg
push
iret
adc
mov
daa
shl
repnz
sub
and
jns
imul
out
pop
das
or
cmp
shr
inc
adc
cmpsb
stc
loopne
jp
mov
mov
jns
lret
mov
scas
add
data16
mov
imull
fs
in
shlb
insl
enter
ja
jae
adc
adc
jmp
sahf
mov
sar
test
xor
jnp
loop
lock
push
push
icebp
push
cld
cmpsl
pop
leave
mov
outsl
push
dec
add
sbb
mov
fwait
and
jno
mov
insb
dec
flds
push
cld
leave
loope
adc
pushf
bound
sahf
hlt
push
xorl
cltd
mov
cld
clc
cld
inc
pop
pop
pop
mov
shr
sub
enter
aaa
jns
xchg
dec
imul
sbb
xor
loope
push
jae
out
xor
aam
sbb
xchg
popa
dec
dec
sub
movsb
cmp
mov
icebp
inc
inc
jns
or
jo
xchg
mov
push
and
pop
dec
sarb
dec
shll
pop
adc
mov
lds
add
dec
pop
mov
dec
imul
jp
sbb
clc
pusha
sbb
sbb
inc
xor
mov
in
mov
sub
in
and
push
cwtl
pop
mov
lret
sarb
outsl
push
mov
cmp
aam
cmc
ficoms
jge
push
add
add
je
xchg
inc
call
std
or
sbb
add
push
cld
movl
push
sti
loop
inc
jmp
std
mov
sahf
mov
jne
insb
popf
sbb
xchg
aad
cmp
push
ret
sbb
push
test
mov
shl
repnz
push
sbb
inc
dec
jmp
outsb
pop
jmp
jmp
aaa
xor
in
xor
js
inc
mov
mov
bound
and
push
inc
sbb
mov
insb
cmp
jge
inc
loop
push
stos
mov
dec
aam
xchg
out
pop
push
jmp
shr
into
fldcw
rcrb
stc
cmpsb
ljmp
jmp
repz
in
add
jns
sub
test
loop
push
push
mov
and
loop
jp
mov
mov
divb
ror
std
dec
mov
int
flds
ret
clc
mov
pop
stos
enter
cld
sub
data16
pop
push
movlps
mov
std
insl
rcrb
mov
fincstp
or
pop
pop
dec
and
sub
xchg
les
out
sbb
sarb
aad
add
mov
daa
mov
adc
bound
mov
testb
inc
out
sub
fdivrp
xor
mov
hlt
in
dec
cmpsl
add
call
pop
cli
in
movsl
loope
sub
dec
jmp
add
pop
and
fdivl
adc
cltd
cmp
inc
mov
cmpl
scas
push
jb
add
inc
cmp
aam
sbb
xor
outsl
sbbl
dec
sbb
dec
fs
aas
inc
popf
mov
dec
lret
cltd
inc
jo
loopne
inc
push
pushl
mov
aam
js
or
lcall
xchg
sbb
mov
sbb
loop
lds
and
mov
psraw
icebp
or
add
rsqrtps
xchg
cmp
mov
das
icebp
mov
repnz
jmp
push
mov
dec
fwait
push
cld
mov
icebp
sbb
or
pushf
test
add
shl
stos
cmpsb
nop
lret
mov
mov
mov
add
cld
hlt
mov
or
movsb
sti
and
add
inc
adc
std
rorl
mov
jg
pop
push
sarb
sbbl
fisubs
aam
sbb
or
mov
fstpt
fistl
xchg
or
es
lea
ret
xchg
or
or
ret
mov
ds
pop
push
mov
sub
lds
inc
std
xor
cld
out
pop
cli
adc
xor
pop
repnz
imul
mov
xor
dec
pop
test
pop
mov
decl
fwait
es
mov
cltd
lcall
std
fdecstp
int
pop
ja
insb
mov
repz
sub
les
aas
andb
push
std
cmp
cmp
lock
ds
xor
mov
mov
scas
das
jge
mov
out
mov
lret
ss
add
dec
pop
adc
in
lret
xor
imul
cmovb
pop
add
lret
je
popf
xor
in
iret
and
lods
popa
xor
fiadds
jecxz
pop
aad
jns
lods
repz
inc
je
jge
rcll
out
stos
pop
rcll
sub
sar
repnz
imul
les
mov
inc
mov
sahf
pop
call
test
icebp
movsb
outsl
loopne
and
xor
or
or
ljmp
push
fadd
jbe
aam
adc
and
adc
push
pop
cmovbe
sbb
cmp
cmpsl
fisttps
icebp
lret
mov
adc
jne
gs
cltd
int
xchg
fs
sbb
fidivl
test
cld
add
in
xchg
and
ljmp
scas
mov
cmpsb
xchg
lret
popa
xor
faddl
int3
test
pop
out
lock
daa
and
out
lcall
xchg
fwait
push
sti
dec
cmp
das
out
aaa
insl
fdivl
or
jne
xchg
lcall
cmp
js
lds
in
and
or
pop
mov
and
out
insl
lods
repnz
push
xor
arpl
ret
dec
or
ror
adc
jp
push
imul
outsb
pop
jno
and
cmpsb
std
aas
sub
addr16
pusha
and
lods
xchg
push
adc
out
or
push
arpl
sbb
fiadds
jmp
or
mov
mov
mov
pop
dec
mov
jb
aas
or
lock
dec
shl
incb
or
mov
inc
hlt
jl
ss
mov
aas
sub
and
jb
sahf
lock
lods
sub
cmp
sub
cli
inc
movsb
add
jno
dec
add
je
add
add
sbb
js
rolb
pop
test
shrb
cld
push
or
jbe
loope
shll
sbb
pushf
imul
xor
fcomps
xchg
sub
mov
mov
addb
push
clc
fwait
or
xlat
insl
or
loope
or
in
sti
jo
call
sub
xor
sbb
push
rcrb
loop
push
cmp
jnp
cli
mov
les
insb
pop
pop
in
lret
dec
idivb
mov
and
loope
push
jmp
adc
mov
xchg
jmp
insl
je
in
in
inc
aad
adcb
call
jg
mov
sti
int3
hlt
call
loop
mov
or
negb
test
mov
push
adc
mov
sub
fdivrl
jne
cmp
call
mov
inc
vpmaskmovq
movsb
fwait
jo
add
into
sarb
push
adc
xor
imul
fcomps
shrl
cs
xchg
add
jno
add
sbb
loop
pop
mov
inc
cld
gs
leave
loope
ljmp
mov
push
xor
sub
out
fisttpl
lock
jp
repnz
or
pop
lea
mov
clc
sbb
pop
nop
add
adc
dec
cld
test
aaa
xor
fsubrs
add
mov
sbb
mov
push
mov
stc
jae,pt
sti
into
jle
lret
pop
fcmovbe
jnp
cli
pop
jmp
add
and
adc
loopne
rclb
or
mov
and
lods
fwait
lret
mov
icebp
xor
cmp
push
lods
xor
cmp
jno
cmp
popf
cmpsb
mov
xor
arpl
movsl
pushw
out
mov
pusha
nop
pop
cmp
xchg
hlt
mov
pop
stos
pop
mov
sbb
mov
lret
ret
cmpsb
in
shl
pop
gs
mov
push
rcll
or
imul
xchg
outsb
mov
sti
push
imul
push
jmp
stc
jb
aas
out
or
jp
cmp
andl
mov
mov
mov
dec
or
jbe
sbb
jnp
inc
std
mov
mov
or
or
jns
cltd
adc
add
jecxz
pop
add
lcall
cmpsl
or
cmp
jecxz
ds
jl
repnz
stos
andl
shlb
test
or
push
bound
cmp
mov
gs
out
dec
add
fsubl
mov
pop
leave
xchg
data16
jg
push
mov
cltd
or
sub
jb
jmp
cmc
xor
dec
mov
mov
out
outsb
repnz
outsb
cmp
jbe
fsubrp
push
in
aaa
data16
sub
pop
repnz
dec
inc
adc
cli
mov
push
cwtl
and
dec
or
mov
push
repnz
add
cmp
popf
mov
mov
outsl
push
sbb
inc
xor
rclb
sbb
fsubr
iret
jg
rclb
and
xchg
sub
out
add
leave
jae
add
mov
inc
leave
sbb
dec
jno
push
jnp
push
pop
dec
pop
push
sbb
mov
sub
mov
scas
and
lcall
inc
mov
jo
sbb
xor
adc
mov
cld
loope
outsl
dec
mov
cmp
outsb
add
fxch
jo
movsb
jp
sbb
stos
addr16
aam
cmp
add
es
in
pand
xor
push
lcall
pop
cmp
andl
sbb
push
mov
cld
jae
stos
push
inc
rcrb
add
pop
je
daa
addr16
lods
add
sbb
inc
insl
fcomi
leave
mov
repnz
rorb
int3
aam
xlat
mov
xor
std
mov
mov
lahf
add
or
cmp
push
loope
cmp
addr16
or
jmp
insl
sub
or
out
int3
and
pop
mov
xchg
in
inc
into
pop
pop
mov
ljmp
cmpsl
inc
mov
test
pushf
add
cmpsb
imul
xor
lods
scas
ffree
sbb
and
out
push
push
jle
mov
or
aam
loop
sbb
sbb
inc
test
cld
loopne
jnp
sbb
pop
mov
stos
test
aad
sub
mov
xlat
adc
inc
outsb
sarl
outsb
and
mov
lock
enter
out
pop
lcall
ret
xchg
stos
pop
inc
in
cld
imul
shr
xchg
rcr
enter
aam
inc
mov
xchg
and
adc
mov
cmpb
mov
lods
into
jmp
lods
cmpsb
adc
xchg
push
outsb
xor
pusha
jno
loopne
push
inc
jns
push
pop
pop
mov
jnp
mov
clc
xlat
data16
mov
mov
sbb
push
fdiv
xchg
adc
mov
movsb
emms
enter
jge
popl
out
inc
xchg
sub
rorl
inc
iret
xor
fisubs
inc
mov
fimull
loop
jmp
loop
jo
fcoml
add
subb
out
cmc
fsubl
pop
mov
mov
and
mov
and
jg
inc
lret
fisttps
insl
jmp
push
dec
or
mov
and
inc
movsb
inc
jo
movsb
sbb
dec
cmp
lcall
xor
int
pushf
add
into
mov
rcrl
fnsave
xchg
outsl
ror
test
dec
jae
fnstenv
imul
push
fldenv
xor
int3
or
cmp
mov
or
pop
icebp
inc
mov
push
cmp
sbb
outsb
fwait
push
repz
dec
inc
int
pop
and
stos
jno
loop
cltd
mov
ss
loop
call
ss
or
jne
decl
lds
push
cmp
int3
jnp
jbe
or
mov
pop
mov
sbb
xchg
test
or
sub
sub
test
cli
lcall
mov
jae
sbb
and
cmp
xor
testl
or
cld
pop
lret
sbb
icebp
xor
insb
repnz
push
xchg
es
ss
add
js
ret
sub
jb
sub
and
cmp
jge
test
xor
in
or
jecxz
xor
gs
mov
cmpsl
andl
mov
and
ljmp
imul
xchg
inc
out
adc
arpl
add
jne
pop
iret
mov
outsb
stos
test
data16
xchg
cmp
inc
mov
pop
es
inc
ret
scas
fistps
into
decb
cmp
cmp
adc
pop
imul
inc
in
movsb
add
jmp
jne
push
lock
arpl
or
popa
pushf
push
test
pusha
enter
cld
fidivrl
mov
cmp
insb
inc
xchg
mov
xor
icebp
cmp
movsl
and
pop
repnz
je
fdivs
enter
in
xchg
push
rorb
scas
xor
fyl2xp1
sub
push
sbb
cld
ret
xchg
popa
stos
push
mov
pop
dec
loop
xchg
cmp
inc
jns
cltd
sbb
cmp
scas
or
mov
mov
mov
aam
enter
adc
ds
adc
mov
mov
test
add
adc
fdivs
cmpb
nop
jne
add
lods
dec
fmuls
mov
sahf
inc
push
add
add
in
sahf
or
jbe
push
pop
pop
out
jp
push
sbb
xchg
call
pop
inc
jp
mov
lea
adc
lea
pop
push
jnp
mov
repz
cmpsl
sbb
loope
lds
jne
sub
pop
test
xor
push
mov
int3
cld
lret
bound
sub
ds
add
or
movsl
dec
mov
mov
push
cli
dec
inc
ror
loope
test
adc
push
sbb
xchg
xchg
or
clc
loop
test
adcl
les
pop
pop
cs
push
loope
scas
xchg
inc
ja
mov
dec
jns
scas
out
ret
or
nop
out
les
adc
xchg
enter
mov
adc
or
ficoml
push
fs
sub
sbb
dec
cmp
aas
pop
adc
popa
xchg
mov
lods
sahf
xchg
xchg
scas
pop
mov
adc
loop
and
sub
sbbl
mov
jmp
xchg
cld
test
aas
ret
or
out
and
fsts
mov
lahf
movsb
add
pop
subl
hlt
icebp
lret
ds
ljmp
in
lods
push
stos
xchg
jg
pop
mov
push
mov
dec
mov
or
add
daa
add
iret
lahf
xchg
out
pop
sarl
inc
xor
scas
icebp
and
mov
bound
outsb
cmp
xor
adc
pushf
sbb
sbb
cmp
test
dec
push
sub
adc
std
dec
dec
xor
cmp
cmpb
outsl
shlb
add
jbe
rcl
popa
add
stos
or
cmp
outsb
mov
pop
lret
mov
and
cld
push
push
fldl
or
inc
movsw
mov
xchg
test
and
xor
jb
out
mov
sbb
clc
scas
pop
jnp
in
mov
push
insb
xor
int
mov
mov
pop
push
arpl
or
std
and
hlt
add
xchg
hlt
cmp
sbb
xor
ret
mov
lods
cmpb
mov
push
int3
ret
mov
mov
sub
jo
and
pusha
jmp
dec
pop
xor
add
mov
dec
notl
mov
xchg
pusha
es
aas
ficoms
icebp
cwtl
pushf
int
push
inc
mov
sti
pop
sbb
aaa
dec
outsl
div
aaa
idivl
stos
push
add
cmpsb
xchg
mov
push
enter
testl
ljmp
jns
mov
lahf
fldl2e
movsl
aad
mov
pusha
sbb
add
jecxz,pt
and
lret
les
push
xchg
and
and
sbb
jbe
mov
dec
add
mov
out
xor
cld
adc
or
outsb
imul
xor
xchg
repz
negl
mov
add
add
adc
pop
cmc
add
jg
stc
pop
das
inc
add
shlb
mov
cltd
dec
nop
and
sbbl
sub
ret
jp
sub
inc
and
loopne
dec
repz
rolb
or
sbb
lahf
mov
sub
neg
ss
or
test
jp
and
add
mov
movsl
mov
adc
hlt
mov
sahf
fs
call
icebp
sarl
sub
and
jns
and
ror
icebp
sub
insb
and
repnz
ret
stos
in
lock
jnp
icebp
jle
loope
cmc
fwait
lret
inc
outsb
pop
jbe
sbb
ds
cmc
and
dec
cwtl
mov
add
dec
lock
xchg
xor
dec
and
push
mov
ss
int3
inc
push
xchg
cmp
fimull
xlat
loopne
mov
loopne
mov
imul
xor
and
sbb
enter
inc
aas
jns
ss
adc
subl
xchg
add
xor
out
icebp
cmp
jo
mov
mov
and
lahf
adc
push
ret
push
sbb
ficoms
cmpsl
int3
in
mov
cli
dec
add
jmp
cmp
aam
lcall
dec
inc
iret
out
add
or
xchg
stc
imul
aas
inc
fnstsw
fwait
or
lds
lds
sbb
loopne
sbb
jb
decl
push
sbb
in
push
xchg
push
leave
and
lret
gs
std
movsl
mov
outsl
les
mov
shlb
dec
xchg
adc
fcompl
add
jg
or
and
lods
pop
out
iret
flds
sub
jne
lcall
mov
xchg
cmp
out
fsubr
ss
push
out
stos
out
inc
mov
call
scas
stos
pop
push
mov
stos
icebp
push
jbe
pop
call
mov
xorl
mov
lods
daa
cmp
clc
jns
fcomps
in
sbb
cmp
jg
dec
or
stc
push
es
jnp
lret
mov
in
inc
pop
adc
adc
or
shl
pop
shrb
cmp
btr
lret
ljmp
insl
xchg
into
cwtl
pop
loope
test
loope
iret
in
cwtl
jmp
jmp
leave
test
iret
lods
or
stc
in
jp
sbb
xchg
xor
mov
jae
mov
cmp
jmp
xor
xor
jg
sbb
mov
lods
and
push
mov
ret
sbb
fsubrs
insb
into
es
pop
loop
jecxz
loope
and
adc
testl
enter
sbb
inc
mov
movsl
xchg
mov
push
inc
clc
cmpsl
xorl
xchg
push
ss
pop
gs
out
or
das
and
dec
and
inc
aaa
iret
add
add
adcb
cli
or
mov
push
mov
insb
sbb
mov
cmp
xchg
aaa
leave
xor
add
mov
sbb
add
test
cmp
and
stc
mov
adc
push
jp
sbb
stc
clc
shrl
xchg
xlat
repnz
rcr
cld
lods
stc
leave
push
mov
daa
pop
out
xchg
xlat
mov
fcoms
test
mov
bound
and
fimull
out
mov
sub
sub
adc
mov
dec
cltd
ds
or
push
sbb
cmpsl
mov
cwtl
ljmp
mov
push
cmc
sti
sub
test
cltd
test
mov
jl
loop
push
inc
adc
mov
mov
and
sub
pop
add
adc
push
inc
push
cmpsb
jae
push
loope
mov
mov
cld
mov
pop
stos
fstpl
xor
popa
pop
xor
mov
je
adc
clc
fstl
xor
jp
pop
ret
xchg
lods
repz
inc
jo
xchg
nop
ds
adc
or
aam
int3
lock
lods
mov
inc
iret
ds
inc
mov
dec
sbb
jns
data16
es
andl
icebp
pop
divb
xchg
cmp
cmpb
jb
and
and
je
sbbb
add
fwait
jecxz
jno
lea
test
stos
push
lods
sbb
mov
call
cmpl
add
stos
mov
lods
ljmp
lcall
mov
xor
idivl
fs
lea
adc
mov
mov
fnstsw
jecxz
call
xor
mov
lret
jnp
mov
int
jb
icebp
aam
dec
push
in
or
jecxz
cmpsb
aaa
lret
int3
xlat
cli
cltd
inc
add
mov
bound
inc
into
decb
mov
cmpsl
clc
orl
outsb
lret
loope
sbb
in
fcmovnb
add
std
jmp
adc
and
or
gs
adc
inc
loop
or
mov
xchg
mov
dec
mov
fwait
leave
pop
dec
outsb
fsubl
in
inc
mov
xchg
lret
rcrb
lcall
mov
scas
jle
jmp
dec
sbb
lcall
lea
hlt
lods
ljmp
dec
and
repnz
std
push
mov
insb
adc
and
mov
test
test
popf
inc
xor
push
nop
lds
aad
jg
insb
adc
pop
leave
data16
push
fs
sbb
cld
or
inc
adc
bound
pop
pop
sub
jge
xor
hlt
pop
imul
es
cltd
cmp
sti
adc
in
cmp
mov
fs
pop
dec
pusha
jl
inc
xchg
add
and
daa
mov
jle
xor
test
jge
mov
rorl
jnp
outsl
jmp
das
and
test
adc
packsswb
subb
or
sbb
int
inc
dec
xlat
test
lahf
jmp
repz
int
stos
in
stc
popf
mov
in
inc
push
xor
jp
fstpt
stc
out
ret
xor
or
jnp
mov
sahf
out
or
push
sub
jmp
or
loope
out
and
mov
add
sbb
dec
pop
out
nop
sub
pusha
push
and
test
repnz
adc
xchg
test
lret
add
sbb
mov
addb
or
ljmp
negl
mov
and
inc
inc
mov
push
outsl
sbb
repnz
sbb
div
sbb
aas
xchg
cltd
mov
push
xchg
out
fwait
stos
jo
mov
jb
or
cmc
fildl
adc
mov
adc
ret
xor
dec
mov
inc
dec
pop
in
jne
jmp
jb
pop
mov
orl
jg
icebp
pop
xor
mov
popf
cltd
push
jne
adc
std
stos
jp
cmpsb
mov
sub
push
roll
int3
out
and
mov
call
mov
sub
shll
pop
add
push
inc
call
cmp
jp
cmpsl
imul
mov
add
cmc
add
loope
int
jne
push
lcall
mov
mov
cmpsl
mov
fwait
stos
adc
cmp
decl
sub
aaa
les
mov
cmc
outsb
not
sub
jmp
mov
fwait
add
leave
lods
jb
lret
arpl
jbe
sbb
push
sbb
les
test
repz
and
push
mov
call
or
clc
out
cmc
rorb
int3
addr16
push
inc
mov
jbe
loopne
jmp
mov
jecxz
stos
call
jno
lret
and
lods
out
mov
repnz
daa
cmc
pop
pop
mov
cmp
adc
aam
aaa
mov
dec
jg
out
lret
mov
dec
or
or
icebp
daa
xor
aad
push
aad
mov
cmc
js
lea
push
nopl
adc
insb
and
dec
jg
aam
dec
popf
add
in
fmul
sub
jbe
sti
jo
clc
incb
mov
loop
test
fnstenv
jb
xor
mov
jecxz
mov
jb
negl
cmp
arpl
xor
or
fnstcw
clc
fwait
adc
cmc
jle
lea
in
jbe
push
and
xor
enter
push
cld
inc
adc
insb
or
ret
push
pop
out
cmp
pop
ret
test
pop
cmp
aaa
inc
popf
stos
xlat
repnz
fs
jge
or
into
push
jnp
jecxz
bound
test
daa
lock
adc
mov
orb
add
and
jne
jg
pop
xor
orl
adc
xchg
fistpll
stos
adc
inc
cld
outsl
xorl
jmp
mov
push
and
add
shll
mov
jb
jb
scas
jnp
pop
ret
mov
lea
adc
push
jnp
jb
xor
jp
mov
cs
mov
fs
cmp
push
fcompp
fwait
call
dec
sbb
gs
xor
jmp
into
pop
sarb
pop
std
hlt
sbb
pop
mov
gs
or
or
sbb
mov
repz
sti
hlt
and
add
bound
clc
mov
adc
cld
xchg
rolb
pop
and
push
mov
or
dec
out
rcl
jns
push
or
lcall
int3
push
pop
jo
hlt
sub
mov
hlt
xchg
sbb
pop
mov
cmp
testb
ljmp
or
push
inc
aad
sti
xorl
enter
push
call
mov
pop
outsl
loop
pop
adcb
frndint
cmc
aam
and
cmp
inc
outsb
push
inc
add
cmp
imul
adc
jge
lahf
pop
or
cmp
xchg
and
xor
insb
jne
jno
lods
xor
mov
lahf
popa
repnz
subb
inc
lods
lds
push
cld
clc
out
sbb
mov
int
mov
loopne
imul
inc
push
pop
push
xor
mov
mov
jmp
mov
ficoml
push
adc
cmpsb
cmp
in
or
iret
loop
push
pop
pop
sbb
cwtl
fwait
movsb
sub
mov
clc
ja
adc
orb
loopne
pop
add
arpl
call
xlat
jns
mov
mov
mov
pop
pop
in
insb
fcoml
das
or
sbb
mov
clc
jp
mov
dec
movsl
xchg
cli
mov
out
and
sti
je
fstp
push
mov
imul
aas
jp
ja
mov
out
cmp
dec
cmp
notl
shl
sti
inc
insl
sti
addl
push
sub
aaa
push
loope
cmp
sti
push
mov
out
les
repnz
shl
adc
lcall
movsl
mov
sbb
add
out
push
inc
push
into
cli
mov
fnstenv
push
add
or
js
mov
inc
mov
push
xor
jmp
inc
lea
xor
enter
fs
jnp
jle
int
insb
data16
jne
push
imul
test
sbb
mov
mov
jae
pop
push
jle
sub
cmpl
jle
js
mov
insb
add
mov
sahf
inc
dec
popa
sbb
xor
mov
and
fadds
and
repnz
std
or
loope
mov
repnz
leave
addr16
sbb
stos
leave
dec
daa
or
notl
insb
dec
sub
mov
dec
jecxz
lods
add
scas
cmpsl
sarl
and
xlat
fimuls
ljmp
sbb
mov
inc
mov
ret
cld
push
pop
and
mov
ds
xchg
ret
or
or
pushf
xchg
add
in
sbb
out
fstps
cmpsl
pop
paddd
in
push
mov
movl
sahf
lea
or
and
xchg
je
lahf
dec
fldt
dec
xor
push
ror
jo
js
aam
dec
push
dec
add
jno
clc
push
and
pop
je
gs
adc
mov
xor
mov
adc
fwait
pop
mov
ss
idivb
or
push
ja
push
pop
pop
lahf
cli
fsubl
sub
jle
sbb
sahf
cmp
aad
movsb
jns
mov
repnz
shll
mov
loopne
insl
es
push
jbe
lods
ss
hlt
mov
lea
mov
mov
dec
pop
std
ret
insl
sub
fwait
lock
add
loope
test
sbb
in
imul
cmp
or
cmp
in
mov
iret
xorb
ret
punpckldq
xchg
cltd
in
cmp
sbb
mov
or
test
adc
dec
adc
jg
pop
push
pop
movsl
push
ret
cmpl
mov
jle
jecxz
jbe
insl
mov
mov
lock
mov
in
movsl
sti
adc
lock
add
movsb
insb
push
aaa
jns
addb
lods
xchg
or
cmp
ja
pushf
mov
dec
sbb
into
movsb
repnz
pushf
mov
flds
imul
movsbl
movsl
int3
mov
dec
cmp
pop
lods
ss
ret
jne
outsb
into
shlb
cmp
jl
hlt
cmp
hlt
or
out
movsb
sbb
add
and
fdivr
push
cltd
push
adc
push
clc
mov
mov
xor
dec
in
ret
adc
movsl
sbb
movsb
push
lea
call
les
popf
cmp
std
inc
notl
adc
sbb
daa
sbb
pop
hlt
insb
xor
mov
cmpl
ror
daa
lock
out
addb
sub
and
dec
jo,pt
push
test
mov
ret
popa
mov
loop
lock
cli
and
popf
icebp
jmp
jl
adc
in
or
adc
push
lret
jp
or
inc
push
inc
aaa
pop
inc
test
cmp
xchg
pop
lock
mov
sub
xor
mov
jl
into
dec
lea
mov
ret
sbb
in
out
ficomps
sbb
aaa
outsl
loope
mov
push
mov
lret
cmc
push
stc
fcomip
jecxz
inc
int
adc
ret
mov
sub
jle
pop
retw
nop
adc
repnz
cmpsb
push
fldcw
les
loope
pusha
mov
add
jp
fs
sbb
lcall
or
outsl
add
adc
adc
fstpl
sub
insb
jle
lahf
push
lods
jmp
repz
or
mov
inc
call
loop
mov
and
xor
dec
cmpsb
push
fwait
mov
xor
xor
sbb
ret
shrb
pop
pop
and
push
ds
outsb
cmc
bnd
mov
pop
jle
sti
push
dec
les
push
cld
lahf
in
ret
adc
fcompl
jg
scas
adc
mov
pusha
pop
dec
xor
sub
sbb
movsl
adc
xor
repnz
jns
or
in
shll
dec
or
or
lea
adc
scas
mov
pop
mov
int
and
orl
rorb
add
adc
xchg
mov
sub
gs
sti
aas
imul
ds
daa
pushf
data16
pop
sub
add
mov
mov
fldt
stc
imul
andb
mov
pop
ljmp
cltd
add
mov
ja
pop
mov
hlt
mov
hlt
sbb
fldcw
cmp
sbb
mov
outsl
int
insb
add
lahf
lcall
jmp
mov
enter
pop
pop
adc
js
rcll
mov
cmp
sarb
ja
jge
dec
mov
movsb
imul
or
or
lahf
xor
data16
xor
lahf
or
dec
inc
mov
lahf
fidivl
mov
jbe
movsl
mov
in
out
lret
or
jne
add
add
sti
ss
insb
dec
in
jne
mov
or
pop
xchg
into
loop
push
jno
ret
add
xchg
sbb
div
jp
sbb
gs
in
sbb
xor
pop
xchg
ja
ss
add
rcrb
jge
mov
mov
sahf
and
movsl
sub
shl
or
jp
xchg
loop
push
stc
jp
fwait
and
das
in
test
stc
je
negb
adc
divb
hlt
mov
outsl
aaa
xchg
cli
aaa
mov
or
pusha
ret
iret
jmp
jecxz
aaa
inc
cmpsl
jl
test
repnz
rcr
sub
enter
xchg
sbb
pushf
clc
push
cmp
fldt
mov
pop
or
xchg
sbb
repnz
push
cli
fs
jnp
ss
cmp
pop
xchg
inc
mov
jae
push
les
mov
or
mov
imul
mov
aas
jno
or
jecxz
adc
sbb
fwait
sub
mov
les
dec
enter
adc
push
movsl
sbb
inc
push
fwait
and
nop
cmp
aas
aas
clc
and
jno
das
ja
xchg
mov
loop
outsl
out
insl
es
mov
sub
call
movsb
das
xor
sub
hlt
or
int
inc
mov
jo
int3
push
sbb
sbb
decl
cmp
mov
js
lret
add
inc
xchg
adcl
mov
repnz
aam
add
xor
cs
scas
push
cld
hlt
adc
mov
dec
lahf
inc
and
xor
je
xchg
and
repnz
pop
fucompp
inc
outsl
or
jns
stos
enter
sub
movsl
cmp
sbb
lds
inc
inc
xchg
inc
sbb
adc
cmpsb
add
jg
xchg
faddl
das
adc
jl
lahf
mov
cmc
mov
xor
cltd
sbbl
shrl
adc
mov
test
popl
push
pop
roll
xor
dec
adc
out
add
les
gs
fcomps
gs
jge
mov
jle
bound
movl
cmp
xor
loopne
call
xchg
xchg
and
and
xchg
add
mov
mov
sub
or
add
inc
lods
adc
jmp
and
faddl
xlat
int3
mov
fstl
adc
cmp
or
xor
test
mov
clc
in
push
push
jmp
insb
cs
dec
inc
cmp
mov
test
dec
push
adc
pop
cmp
xchg
or
push
or
cwtl
push
push
lods
push
bound
addr16
inc
cltd
cmpsl
inc
shlb
inc
outsl
ret
popf
push
gs
sti
sbb
mov
mov
fstps
xor
cli
rorl
sbb
cmp
jl
dec
sarl
emms
sbb
sub
out
fcompp
mov
je
test
popa
mov
sub
gs
cmp
push
adc
inc
push
xchg
scas
test
stc
into
jecxz
jne
sbb
add
outsb
fcoml
add
outsl
sbb
fdivrl
cld
pop
sbb
sahf
fists
jno
adc
sub
movsl
inc
sub
out
sbb
mov
out
xchg
repnz
rcrl
mov
xchg
test
out
in
pop
movsb
adc
shll
sbb
mov
cli
aam
std
pusha
cld
inc
nop
pop
push
aam
or
popf
ss
cmp
cld
xor
sbb
or
mov
mov
xor
out
bound
out
xchg
inc
mov
xor
fisubrs
and
loope
test
sub
inc
mov
sbb
fninit
sarl
loope
ret
push
or
fimuls
xlat
jns
call
in
rclb
xor
jmp
outsl
jmp
ret
pop
sub
mov
test
testl
cmp
icebp
or
test
sbb
mov
in
fdivrl
push
ss
je
cmp
movsl
int3
mov
fwait
xorb
clc
cli
or
sbb
push
pushf
shrb
jecxz
jno
rol
mov
in
ficoms
fsubrp
cld
aas
lods
in
push
lcall
jmp
add
xlat
adc
mov
mov
aam
sbb
sbb
push
pop
sbb
adc
inc
xlat
sbb
fcmovnu
sti
inc
add
mov
and
loopne
mov
movsb
or
jo
in
roll
xchg
outsl
decb
in
xor
insb
and
mov
push
pop
subb
dec
adc
fidivs
add
add
lahf
ror
lds
jle
sub
imul
into
cwtl
ljmp
inc
jmp
or
ds
sbb
jnp
into
dec
add
dec
xchg
or
jmp
mov
lock
jg
mov
push
jmp
ljmp
inc
cmp
aam
pop
add
inc
mov
stos
and
jb
aas
mov
rolb
xchg
movups
mov
sbb
fadds
push
dec
inc
sub
gs
xchg
add
pop
js
ljmp
inc
push
pop
lock
into
vmovupd
mov
mov
call
jge
or
jle
xor
cwtl
adc
fidivrs
inc
sbb
jge
xor
push
pop
sbb
shll
jb
lods
add
pop
cmp
and
loop
cmp
or
divb
repz
push
or
xlat
add
sbb
pop
int3
or
neg
sbb
adc
adc
in
and
stos
pop
stos
enter
xor
sub
lods
jb
les
adc
cli
lret
jecxz
xchg
jge
ffree
cli
pop
cli
cmp
pop
cltd
pop
int3
sub
repnz
and
mov
cwtl
iret
adc
test
inc
mov
mov
fnstenv
push
mov
movsb
sbb
and
fldl
cmp
add
inc
fwait
arpl
das
adcl
push
sbb
repz
sarb
icebp
mov
and
aas
jle
sar
sub
cmp
adc
cmpsl
stc
aas
lret
cmpsl
push
xor
or
dec
mov
js
push
inc
ret
push
adc
outsb
pop
imul
mov
repz
sti
imul
push
dec
jl
lcall
dec
dec
ret
mov
cmp
stos
cmp
push
jo
jne
repz
xor
add
lock
insl
mov
adc
call
jns
icebp
mov
in
cmp
out
adc
sarb
inc
call
in
cld
loopne
int
lcall
xor
pop
cwtl
mov
call
sub
fisubrl
fwait
cmp
ret
jo
test
stc
loopne
sar
push
lea
pop
push
lock
test
or
push
roll
out
xor
inc
or
xor
and
testl
fsubp
inc
cli
mov
repz
lods
fadd
ljmp
jl
or
sar
sbb
push
ja
rcrl
fnstsw
pop
adc
mov
pop
nop
push
cmc
xchg
mov
sub
push
sbb
negl
mov
and
jle
jns
loopne
iret
add
lret
mov
jo
mov
sti
inc
outsb
scas
cmp
cli
loopne
mov
sbb
add
sub
inc
int3
dec
aam
lcall
cmp
push
jmp
mov
cld
xchg
or
enter
addr16
aad
addr16
fcomi
enter
inc
jle
mov
scas
hlt
out
loope
mov
or
fbstp
sbb
rorb
jbe
stc
cmpsb
lods
sahf
pop
mov
int
hlt
lahf
lret
cltd
jns
stos
cmpsb
jecxz
cmp
aad
push
lret
out
addr16
in
fwait
sbb
mov
bound
movsl
adc
mov
imul
inc
jb
sbb
cmp
sub
xor
mov
inc
lcall
les
gs
les
dec
xlat
mov
in
out
pop
testb
xchg
cmp
cmp
pop
mov
adc
dec
mov
mov
into
test
int3
add
xchg
pop
add
push
pop
xor
dec
add
pop
icebp
and
movsl
xor
xlat
movsl
mov
cltd
mov
or
add
clc
sbb
and
jmp
je
push
adc
cmp
add
insb
sub
or
in
jb
cmp
xchg
adc
cmp
stc
in
push
in
push
dec
nop
sbb
jecxz
push
repnz
push
fimuls
cmp
push
dec
js
push
mov
cmp
ds
mov
loope
and
dec
mov
cmpsb
es
dec
add
add
push
pop
int
mov
pop
xchg
cmp
jno
adc
cmpsb
inc
frstor
add
mov
jns
loope
daa
and
je
out
adc
adc
cli
out
ret
sti
sti
adc
repz
mov
fsubl
repnz
xchg
cmp
pop
add
std
or
loopne
xor
hlt
popa
jnp
fcomi
dec
adc
in
adc
push
add
das
jnp
in
outsb
dec
shll
popf
lret
sbb
inc
repz
or
nop
movsb
cmp
lods
jns
roll
js
add
push
movq
push
mov
lea
imul
mov
pop
sub
add
pop
iret
rol
and
lcall
jns
into
bound
aad
popa
push
fwait
out
out
outsl
adc
mov
and
ljmp
movsl
cli
cmp
les
fstpt
xchg
jns
stos
lcall
xor
xchg
sbb
dec
pop
jp,pt
gs
out
sbb
out
out
push
and
cli
jmp
push
fwait
jno
pushf
pop
jnp
sbb
nop
in
mov
or
sbb
ds
lock
out
loopne
sub
std
out
or
in
jb
mov
int3
xchg
mov
pop
in
hlt
xor
out
jbe
in
shl
aas
dec
hlt
std
lret
sbb
push
or
aad
jmp
test
aaa
sbb
loopne
xor
stos
inc
hlt
loop
mov
cmp
cli
bound
dec
cmc
mov
repnz
mov
in
mov
xor
pop
mov
cld
and
jae
mov
leave
ficoml
xchg
aam
mov
mov
ss
mov
bound
sub
imul
pop
sbb
and
push
push
add
in
out
ss
mov
icebp
xor
sub
fcmovbe
and
test
stos
push
inc
push
cmp
or
lds
mov
fcompl
aaa
pop
int3
test
mov
pop
dec
sub
sbb
dec
push
lcall
jge
or
jo
cmc
int3
int
xor
out
mov
or
aad
or
sbb
mov
lds
dec
clc
xor
lea
inc
add
ror
ucomiss
dec
in
fmuls
test
test
call
lret
adc
popa
in
jnp
outsb
sbb
push
mov
fisttpll
ja
jecxz
jns
add
sub
mov
shrb
leave
out
jecxz
xlat
leave
scas
pop
dec
lcall
cs
xchg
into
fdivrp
je
aaa
cli
in
or
push
jl
cltd
test
lahf
aam
sbb
cwtl
and
mov
mov
das
sbb
cmp
xchg
mov
cmpsl
pop
dec
or
lret
sbb
mov
and
sbb
dec
inc
test
lret
mov
mov
pushf
cmc
fwait
sub
shlb
pushf
icebp
add
cwtl
test
push
mov
fisttps
jmp
fcoml
fstl
jl
dec
xchg
mov
repz
ss
push
loop
mov
add
push
arpl
and
call
push
sti
call
mov
jne
mov
push
dec
cmp
js
or
test
mov
ljmp
inc
fsub
dec
das
lock
xor
and
outsl
pop
pop
dec
add
add
lock
lcall
and
cltd
inc
aam
jae
sbbb
or
adc
stos
cmp
fldenv
bswap
or
ret
push
adc
or
loope
and
pop
and
lock
aas
ss
jb
add
fs
in
dec
inc
icebp
in
scas
push
push
std
jns
fisubrs
shll
xchg
jl
add
or
mov
push
jmp
mov
hlt
add
iret
cmpb
insb
sti
xchg
data16
imul
mov
aam
cmpsl
push
out
sarb
out
mov
pushf
xor
xchg
jge
push
mov
pop
xor
nop
shlb
cmp
sbb
ds
cmp
push
jne
pop
xor
sbb
aaa
js
fidivs
fcomps
fwait
xor
bound
xchg
cld
jb
inc
es
out
ljmp
fstps
mov
push
pop
push
stc
jle
push
insl
daa
pop
ja
nop
cli
jnp
pop
jns
out
repnz
fsubrs
lcall
or
jl
adc
pop
loope
and
sti
xchg
nop
jmp
or
mov
stc
gs
jbe
shrb
add
addr16
rorb
movsb
imulb
cmp
push
mov
sbb
mov
decb
add
fs
xchg
sub
scas
fwait
inc
xchg
xor
ret
jbe
aas
cwtl
pushf
cltd
xor
cmp
pop
pop
and
mov
shr
sahf
loopne
outsb
data16
std
incl
mov
pop
ljmp
or
orl
cmp
and
mov
lds
jo
cmc
xor
incb
mov
fs
cmc
cmp
mov
jecxz
pop
add
pop
jg
sub
gs
dec
inc
pop
pop
pop
psllw
cmc
hlt
xchg
cmp
mov
sub
data16
stc
xchg
pop
out
push
stc
daa
and
adc
mov
pop
or
mov
or
xor
and
sub
arpl
xor
xlat
lar
pop
sbbl
xor
stc
movsl
lea
cmpsb
stos
out
sub
fcomps
loope
cmpsl
subl
lea
push
and
je
sub
insb
add
dec
mov
les
jp
jmp
out
repz
loope
jmp
sbb
ljmp
push
sbb
sbb
push
add
iret
jecxz
and
loop
sub
mov
jecxz
bsr
ss
jns
out
daa
mov
cmpsl
ret
daa
inc
adc
push
shlb
or
movsb
inc
popf
mov
lock
inc
imul
bound
iret
ret
sub
sbb
addr16
hlt
sbb
mov
lcall
cli
cmp
sbb
adc
stc
cmp
xchg
sbb
lcall
push
dec
repz
hlt
pop
arpl
out
flds
popf
test
ss
mov
xchg
mov
mov
loop
and
push
std
sub
adc
or
fmull
ljmp
insl
xor
or
pop
stos
cmp
test
pop
int3
fcoms
rclb
mov
inc
fildll
mov
mov
into
in
lock
enter
inc
jle
xchg
rol
xor
into
lods
jl
call
lret
sti
test
lock
hlt
mov
movsl
xor
jge
popf
addr16
stos
lahf
sbbl
jo
adc
call
or
sbb
add
les
cmpsb
loop
mov
fidivs
mov
ja
mov
jle
cmpsl
mov
in
push
sbb
or
pop
jge
subps
jge
es
hlt
inc
out
and
out
je
jmp
sbb
incl
ror
add
add
icebp
fucomp
cmp
and
sbb
aam
sahf
pop
rclb
and
pop
imul
sbb
inc
test
testb
into
push
mov
in
and
lea
or
int
mov
decl
xlat
inc
les
icebp
icebp
lea
orb
cltd
leave
repnz
xor
push
fdivr
xor
push
lock
repnz
push
and
bound
sub
sbb
lret
mov
xor
inc
mov
xor
enter
dec
orb
sub
xchg
lret
mov
mov
insl
pusha
push
addr16
shlb
cmp
fidivrs
add
mov
std
fdiv
lea
aas
xor
das
xchg
add
in
pop
in
push
mov
adc
nop
push
and
mov
push
cmp
aaa
mov
cmpsb
mov
cmpsb
sbb
shl
mov
repnz
xchg
mov
sbb
sbb
adc
and
jmp
xchg
fcomp
and
cmpsl
inc
repz
or
add
adc
in
sub
inc
sarl
add
popl
ja
sub
and
xchg
jbe
sbb
cmp
cmp
jg
pop
push
adc
or
mulb
popf
or
ret
dec
cmpl
loopne
mov
cmp
mov
bnd
and
jmp
sbb
repnz
jne
jbe
lods
xor
xor
and
xor
cmp
or
std
inc
sbb
jecxz
in
insb
pusha
xchg
and
push
mov
xlat
push
add
inc
or
out
mov
jbe
loope
lcall
fstpl
fcoms
cltd
shlb
test
xchg
push
add
xor
into
adc
add
cmpsb
ljmp
repz
add
es
in
dec
out
inc
mov
ret
lds
or
out
sub
shll
push
pop
clc
adc
mov
dec
sbb
jle
cmp
stos
imul
js
hlt
repnz
sub
dec
daa
out
repz
ss
pop
lahf
mov
loope
xchg
inc
adc
xor
sarb
jne
dec
and
xor
mov
lret
outsb
or
hlt
jmp
inc
dec
jmp
mov
ret
iret
in
inc
shl
imul
pop
fiadds
push
ret
imul
inc
mov
lds
mov
sbb
movsb
sub
xor
push
or
cmpsl
sub
mov
push
pop
daa
scas
sub
pop
lret
jno
into
aaa
int3
outsl
insb
jp
dec
sub
cmpsl
xchg
inc
fwait
cmp
in
ret
mov
in
mov
lcall
mov
fildl
fistpll
stc
inc
cltd
or
in
cld
pop
shrl
pop
add
jg
cmp
adc
cmpsb
mov
loopne
xchg
mov
scas
sbb
fwait
xor
mov
repz
cli
dec
inc
test
push
ret
insl
shlb
jmp
fisubrl
fstpl
mov
cld
addl
aaa
xchg
cmc
fs
cmp
in
ud1
pop
ja
fwait
lods
or
jl
fcoms
xchg
subl
cmp
add
push
dec
inc
inc
or
sbb
mov
or
or
pop
mov
popa
daa
movsl
dec
push
cmp
data16
pop
sub
jno
jp
cmp
stos
mov
push
jecxz
lret
fbstp
and
mov
sub
vpsllw
adc
push
cmp
iret
lods
mov
shlb
ss
jo
int
daa
sbbb
out
insb
pop
adc
pushf
fwait
idivl
into
add
dec
push
push
cmp
repz
xlat
out
repnz
or
ljmp
sbbl
cmp
insb
pop
sarb
aam
dec
sub
ret
ljmp
push
or
mov
int
jns
sarl
mov
cmp
mov
ret
or
inc
add
paddsb
pop
div
aad
add
jge
call
sbb
loop
sarb
sub
sub
dec
test
cmc
mov
bswap
pop
jno
inc
adc
xor
adc
fidivrl
or
fldenv
dec
aad
dec
and
in
push
add
mov
xor
cld
push
mov
dec
push
das
minps
call
inc
cmp
xchg
lret
push
cld
popf
push
movsl
in
jno
test
inc
out
cli
enter
cmp
cmp
inc
and
shll
gs
dec
xorl
cmpl
jns
pop
pop
and
fwait
test
mull
fistl
inc
lea
mov
pusha
jle
lds
clc
das
push
mov
mov
jnp
mov
or
in
push
movntq
out
iretw
push
bound
ret
arpl
enter
xchg
clc
sub
xchg
mov
push
sub
cmp
xor
inc
and
popl
mov
lcall
jae
mov
addr16
sti
nop
xchg
cmp
jnp
mov
mov
mov
pop
sub
mov
sub
push
sbb
or
shrb
cmp
enter
mov
xor
aas
int3
sti
dec
decb
or
xor
out
cmpsl
sbb
jno
pop
pop
pop
dec
out
aad
sub
leave
mov
xchg
and
add
jecxz
fwait
hlt
ds
pop
shr
call
pop
pop
and
add
rcrb
inc
mov
sahf
test
jmp
shrb
sbb
cmp
and
sub
or
les
movsb
cltd
loop
or
mov
mov
insl
sbb
stc
xlat
insl
loopne
adcb
sbb
jg
call
scas
sbb
pop
xchg
push
fildll
cmp
push
daa
push
icebp
lods
lock
stc
mov
iret
push
push
jns
loop
ror
sub
cld
lock
cltd
xchg
inc
cmp
cwtl
sti
fwait
dec
repnz
ljmp
jb
ja
pop
mov
aas
popf
adc
lds
ds
adc
cmp
nop
popf
sub
addr16
icebp
bound
cmp
add
mov
ret
xor
lret
addl
enter
les
inc
adc
push
pop
mov
jbe
fs
popa
push
or
mov
mov
or
mov
aaa
nop
pop
pop
outsl
movsl
jmp
insb
mov
fadds
cmpsl
add
test
lcall
pop
shrl
mov
mov
pop
add
sbb
xor
rolb
sbb
xchg
xchg
loopne
out
imul
test
lea
je
pop
dec
xchg
repz
mov
jne
inc
push
push
lods
mov
mov
int3
sbb
aam
sub
push
lret
lahf
xor
outsb
adc
push
and
mov
cmp
dec
icebp
pop
fisttps
xchg
push
xor
sbb
scas
and
pop
fldenv
or
repnz
mov
jl
pushf
pop
push
lret
test
fists
and
sbb
pop
inc
aam
mov
repz
int
mov
mov
movsl
in
imul
jne
adc
lret
mov
mov
rcrb
arpl
sub
mov
into
xor
and
and
ficomps
loope
or
loope
je
cltd
lds
jge
sti
call
jbe
cmpsb
mov
mov
insl
das
into
inc
jmp
push
fs
pop
xor
sbb
insb
mov
aaa
add
aam
lret
ds
mov
xor
stc
mov
sub
cmp
idiv
jb
dec
rcrb
ds
push
or
inc
movb
push
mov
jle
test
data16
pop
jne
mov
push
daa
int3
xor
adc
push
fs
jge
mov
int
call
imul
lret
arpl
nop
repnz
inc
rcrb
hlt
pop
icebp
push
shlb
js
mov
cmp
mov
movl
in
scas
lahf
jns
adc
call
sub
mov
and
adc
mov
pushl
dec
outsb
mov
test
ss
lret
dec
ljmp
fwait
sub
sarb
xlat
xor
scas
mov
push
xor
add
ret
pop
call
js
in
lea
repnz
jae
add
icebp
sub
aaa
data16
jp
inc
popf
cs
jo
cld
cli
movsb
fimull
jnp
push
mov
mov
lods
mov
iret
jecxz
push
js
push
sbb
loope
lods
movsl
cltd
adcl
ds
jle
inc
insl
jnp
adc
cmc
jmp
and
cmc
shrb
or
dec
xor
jmp
pop
pushf
imul
dec
jl
insl
lret
in
ss
pop
test
les
mov
lret
mov
sbb
icebp
icebp
sbb
xor
iret
loop
push
movsb
mov
mov
mov
cmp
mov
popf
cmpsb
or
shlb
mov
jb
sbb
pushf
fcomp
adc
mov
mov
xchg
jecxz
dec
push
sbb
dec
clc
dec
enter
add
sti
sub
icebp
rcll
fnstcw
clc
pop
add
fwait
adc
jl
push
and
xchg
mov
cmpsl
inc
mov
out
aaa
je
dec
lahf
xchg
dec
stc
pop
dec
push
mov
adc
inc
fstl
sbb
sbb
dec
push
mov
inc
jge
or
or
sahf
dec
jo
cmp
and
repnz
or
stos
js
xorb
sub
xchg
rcl
jb
jne
popf
out
lret
inc
sarb
push
lods
push
ljmp
pop
ljmp
leave
lds
or
or
pop
std
and
mov
adc
aad
lods
sub
add
xor
lock
jge
inc
adc
mov
test
fistpll
outsl
ds
and
cmp
mov
cmp
ljmp
add
popf
xchg
jg
mov
imul
stos
and
dec
in
add
addr16
inc
lock
movsl
xchg
jne
push
jmp
xor
jbe
cmc
jmp
jp
inc
xor
xchg
jns
nop
inc
dec
in
and
cmp
adc
daa
testl
pop
push
adc
xor
in
xchg
jno
out
mov
xor
mov
mov
jle
jecxz
inc
ja
movsb
xor
aas
mov
xchg
in
mov
lret
cmpsl
cmpsl
aaa
repz
lret
loop
mov
movsl
xchg
xor
in
pop
mov
adc
ss
or
mov
mov
xchg
aaa
dec
sbb
bnd
sbb
mov
outsl
dec
loopne
shll
stc
inc
cmp
push
sarl
mov
cwtl
inc
push
mov
mov
mov
sahf
cs
and
mov
jne
int3
or
ret
lret
rolb
push
or
add
dec
std
push
andl
xchg
aam
cli
leave
lahf
mov
movsl
das
repz
cld
fistps
in
xor
mov
adc
xchg
aaa
dec
or
jb
mov
mov
inc
dec
xchg
aas
aad
inc
hlt
pop
sub
mov
xor
sub
cld
jb
or
jge
lds
ja
frstor
mov
into
mov
shrl
stos
xor
jmp
jne
adc
pop
pushf
test
mov
bound
sarl
inc
sub
out
fbld
jns
push
call
std
lcall
fyl2x
inc
sub
pop
ret
int3
stos
ds
hlt
flds
inc
lock
pop
adc
in
pop
mov
pop
mov
fcoms
add
xor
push
cld
jge
test
add
mov
pop
fcoml
jmp
sub
je
inc
ss
push
je
mov
xor
mov
lds
push
sbb
ss
cmp
fwait
std
clc
enter
mov
aam
cli
fmull
or
xchg
sub
sbb
jg
inc
sti
mov
sub
aas
pusha
aaa
orb
xchg
adc
in
cmp
sub
mov
cmpb
stos
xchg
sub
in
cmp
aad
sbb
cmp
les
sub
xor
jb
mov
imul
in
cmp
std
xchg
dec
sbb
xor
dec
mov
ret
ret
add
out
ret
adc
aaa
push
push
mov
mov
popf
push
aam
aam
cmp
cli
jne
inc
call
movsb
lret
push
aas
jns
dec
and
add
das
lock
dec
fs
push
repz
sar
push
test
pop
fidivrl
lock
jnp
test
insl
push
push
add
mov
xlat
cli
jnp
pop
or
mov
pavgw
test
add
ss
cli
xchg
ss
push
repnz
inc
popf
sub
add
int
fdivp
dec
in
push
add
jle
stc
cmpsb
and
imul
shrb
fsub
xor
daa
xchg
and
out
ficoms
clc
mov
sub
xchg
push
mov
out
inc
sahf
roll
loope
mov
stc
jno
punpckhwd
cmp
jae
xchg
insb
mov
lods
imul
jle
xor
loopne
or
cmpsb
pop
int3
shll
fisttpll
xchg
arpl
jns
cwtl
or
pop
pop
shl
and
pop
cmp
lret
push
cmp
push
add
call
dec
in
push
aad
sbb
mov
inc
stc
ljmp
push
cwtl
and
jne
shrl
jle
fs
rcl
xchg
xchg
inc
inc
mov
sub
and
or
or
ja
and
fsub
and
test
sbb
cmp
dec
xor
adcl
jecxz
imul
sub
cmpsb
inc
add
inc
mov
pop
jmp
movsb
cmp
pop
mov
out
sub
dec
outsl
xor
fistps
aad
mov
fnstcw
sbb
lret
push
shll
in
pop
pop
clc
mov
cmp
cmc
aaa
push
inc
cli
or
adc
sti
push
mov
jmp
icebp
cmpb
rol
rolb
jecxz
xor
jge
out
or
pop
push
xor
rdtsc
out
bound
cmpsl
pop
cmc
in
sarl
cld
lods
in
std
sbb
and
xor
mov
mov
shll
stos
mov
hlt
dec
pushf
xchg
stc
jmp
mov
xor
out
jno
or
shlb
push
in
inc
adc
dec
mov
aas
sub
stc
adc
sub
sbb
fsts
idivb
stc
fs
lcall
pop
inc
cmpb
dec
xchg
mov
inc
divb
sbb
shl
jle
inc
dec
mov
repnz
icebp
in
or
test
or
mov
das
cmc
cmp
cld
clc
out
cmc
pop
ret
or
mov
add
adc
mov
out
or
fdivrl
sbb
je
ja
in
sahf
es
push
xchg
daa
or
mov
gs
xor
popf
and
jbe
pop
test
push
ljmp
insb
ss
ret
or
jo
adc
or
mov
ret
and
jb
addl
rorb
xor
aam
call
notl
mov
dec
fwait
add
xlat
dec
or
jecxz
lods
aas
xchg
jbe
shrl
icebp
pop
add
mov
xchg
add
cmc
dec
addb
cld
mov
movsb
sbb
push
push
les
inc
inc
out
je
cltd
or
jge
aam
lods
das
inc
clc
scas
xlat
dec
popf
mov
hlt
pop
fstpt
sbb
divl
inc
stc
inc
cld
xor
sahf
scas
cmp
repnz
and
aaa
mov
sbb
in
mov
sub
lock
neg
pop
xlat
test
xchg
or
or
icebp
ret
dec
pop
add
loop
imul
and
push
orps
push
sbb
in
stos
outsl
sbb
aas
es
outsl
cltd
xor
imul
out
mov
out
jbe
jl
dec
and
aas
push
mov
shlb
in
gs
xlat
rorl
and
hlt
shl
addr16
jns
add
push
push
jmp
push
ljmp
testb
inc
push
pop
or
cmpps
xor
pop
popf
in
mov
clc
ds
out
pop
mov
fildll
loope
scas
mov
aam
xchg
das
hlt
cs
push
insb
sub
pushf
testb
jbe
mov
into
mov
aaa
or
cmp
inc
daa
ljmp
inc
scas
in
xor
divl
pop
mov
sbb
dec
pushf
mov
inc
xor
in
aas
das
dec
adc
cmpsb
mov
jae
dec
cmp
aas
push
mov
outsl
ljmp
in
mov
outsb
inc
jecxz
idiv
pusha
adc
daa
ror
sub
in
xlat
mov
push
mov
xorb
fcomi
js
sub
fistps
addb
mov
ret
add
push
sbb
xor
push
jecxz
inc
sti
cwtl
dec
add
add
sbb
das
out
in
pushf
add
xor
and
out
push
push
scas
mov
popa
push
push
mov
sub
fwait
iret
out
test
push
push
out
jnp
cmp
mov
popa
or
cld
or
ss
sub
fs
or
and
in
scas
inc
shrl
subl
popf
cs
xchg
shlb
cli
ficoms
out
fldenv
xchg
pop
or
push
imul
test
repnz
mov
sub
push
cmpsb
cld
fsubrs
enter
add
xlat
ss
push
std
scas
rclb
or
lea
pop
jp
xor
das
shrb
inc
cmp
and
in
int3
or
gs
in
dec
call
sub
test
dec
push
xorl
xor
push
repz
mov
xor
lret
data16
mov
movb
jne
cld
and
int3
in
mov
add
dec
out
jno
fwait
sbb
pop
lret
fnsave
add
ss
iret
repz
out
push
xor
icebp
push
jne
scas
test
xchg
and
in
enter
push
mov
stos
add
add
or
sbb
jecxz
add
xlat
callw
push
data16
data16
fwait
xor
push
xchg
pop
and
test
push
fisubs
fcompl
rcr
jb
cs
jbe
rcrb
and
jle
adc
push
popf
ret
mov
push
repz
and
int3
fucomi
add
lock
inc
int
jnp
fimuls
aaa
shl
pop
push
xchg
push
jecxz
sub
fstp
jmp
pop
push
sbbb
push
das
imul
imul
xor
adc
test
adc
inc
lods
fisubrs
fcompl
sbb
je
mov
pusha
push
sub
loop
push
std
popf
mov
xchg
ja
loope
jle
sbb
xor
das
stos
aad
mov
movsb
and
data16
sub
inc
sub
fcomip
loopne
clc
das
in
sarl
pop
or
test
mov
cmp
aam
sbb
xor
pop
cmpsl
adc
insl
lret
fcomps
and
in
popf
lods
push
repz
ret
aas
push
or
out
mov
jp
push
mov
dec
cld
cmp
fldenv
shll
dec
in
sub
xor
adc
mov
mov
movsl
mov
scas
mov
aad
test
jno
mov
mov
push
xor
dec
lret
and
aas
jo
call
cmp
cld
out
mov
lods
sub
cmpsl
sub
movsb
rcrb
sbb
out
mov
or
or
addl
in
cmpsl
add
add
or
in
imul
push
movsl
adc
enter
cs
and
adc
pop
push
call
ret
lea
stos
mov
sub
push
sarl
divb
fimuls
pushf
push
sub
mov
pop
sarl
pusha
jb
popf
mov
stc
cmp
dec
push
add
movsl
movsb
mov
int3
mov
mov
mov
cli
cld
dec
push
mul
aad
shll
xchg
push
aad
stc
xchg
mov
in
inc
aaa
inc
movsb
sbb
dec
mov
cltd
pop
and
repnz
xor
cmp
or
lret
inc
jb
mov
mov
add
hlt
cmp
dec
jp
outsb
xor
into
mov
movsl
jp
xor
cs
and
cmp
or
clc
mov
sbb
dec
idivl
imul
fcompl
nopl
mov
popf
decb
xor
push
xor
xlat
fyl2xp1
stos
cli
mov
leave
mov
faddp
jmp
mov
and
das
ljmp
push
push
mov
add
xchg
jae
jmp
rorl
movsb
jge
dec
lods
adc
pop
adc
sbb
mov
jge
negb
and
mov
pusha
dec
int
sub
xchg
lods
dec
out
mov
das
adc
cmp
aad
cli
repnz
popf
xchg
inc
mov
adc
cmpsl
clc
mov
or
inc
notl
ljmp
mov
aam
aas
nop
push
daa
or
dec
addr16
push
icebp
int3
jge
mov
jl
or
aas
mov
xchg
addl
das
jb
mov
notl
sarb
stos
mov
in
cmp
aad
dec
mov
sub
cmp
sub
imul
out
pop
ret
xor
cltd
adc
adc
lret
pmaxub
cld
sub
fcomps
imul
fisubl
es
mov
jbe
mov
inc
inc
mov
adc
lret
sbb
pop
icebp
push
fistps
cltd
cmp
xchg
sub
push
sahf
and
bound
outsl
add
adc
lret
icebp
xor
mov
in
sub
mov
push
hlt
and
and
insl
test
push
mov
xor
fcmovbe
cmp
adc
mov
pop
mov
lahf
mov
mov
mov
or
sub
mov
xchg
pop
xor
adc
test
movl
mov
cli
or
fisubrs
out
ret
jge
rcrb
rorl
mov
or
sub
push
insb
je
arpl
loope,pt
fldcw
push
mov
lret
out
add
mov
std
aad
cmpsl
cmp
sub
pop
mov
inc
fiaddl
mov
xchg
mov
cmpl
sahf
sub
and
popf
fisubl
test
sti
xorl
hlt
das
je
daa
mov
movsl
cld
sbb
shrl
mov
xchg
notb
icebp
pop
imull
or
mov
cld
xor
sbb
into
mov
clc
lock
loopne
clc
sbb
jno
add
xchg
or
mov
mov
fcoms
xor
out
std
ja
xlat
testl
mov
les
js
mov
gs
je
adc
cltd
adc
lret
dec
call
add
lahf
add
or
cmp
sub
or
dec
std
add
or
cmp
icebp
insb
repnz
in
mov
add
xor
add
ss
xor
sbb
mov
ss
push
pop
fabs
cmp
push
or
fs
in
push
xorl
sbb
dec
jnp
fildl
push
sub
xor
add
or
aas
stos
xorb
mov
mov
int
in
pushl
cli
add
jl
xor
mov
lahf
ret
in
addl
mov
nop
int3
pushl
sub
pop
cmpsb
sbb
sbb
test
or
repz
xor
shrl
int3
adc
mov
stc
shrb
mov
cmp
mov
cmp
aad
sti
aas
aad
ljmp
in
gs
stc
filds
jle
jb
jle
mov
xlat
cld
movsb
xor
mov
sub
stc
sub
mov
clc
insl
leave
bound
in
xchg
decb
aaa
test
in
stc
rcrb
sbb
scas
clc
pop
mov
neg
mov
push
imul
inc
mov
or
sub
idivl
adc
enter
cmp
idivl
push
cmpsb
xor
or
icebp
add
fidivrs
into
testl
lret
mov
sahf
xor
imul
jecxz
jns
dec
mov
ljmp
fmul
dec
data16
cmp
jecxz
mov
dec
mov
idivl
popa
adc
sub
cmpsb
btsl
test
sub
clc
jl
add
jae
lret
lsl
jns
mov
mov
sbb
fsubrs
fildll
or
pop
cli
ret
pushf
inc
cmpsl
out
pop
rol
adc
xor
cwtl
das
stc
test
inc
bound
sub
aas
xchg
xor
dec
int
cmp
pop
ret
dec
stc
ljmp
xor
jo
add
inc
outsb
shll
sub
or
inc
add
sarl
and
sub
adc
cmp
xchg
push
xchg
cmp
xor
and
mov
loope
pop
adc
push
push
lds
dec
sbb
ja
fidivrs
xor
adc
iret
cmp
jl
mov
paddsb
cmpsl
pop
push
sub
lods
push
imulb
adc
mov
dec
pop
adc
jl
mov
paddsb
cmpsl
sbb
inc
enter
jne
dec
xlat
pusha
push
pop
ret
push
call
push
ds
std
inc
sbb
sub
lods
adc
out
pusha
push
loopne
ret
fucomi
jbe
adc
setae
mov
sub
pop
int3
xchg
lds
cmp
ds
add
xor
call
push
sbb
dec
or
dec
stos
movsb
fsubrp
push
rcrb
jmp
pop
sbb
jl
mov
sub
ret
jmp
mov
mov
cmp
loop
and
inc
movsb
cmc
cltd
xor
iret
mov
push
jl
adc
sbb
fwait
sub
test
movsb
sub
cld
std
ret
stos
cmp
ljmp
sbb
daa
pop
daa
add
hlt
inc
dec
pop
sbb
out
xchg
clc
out
leave
mov
sbb
std
filds
cld
std
stc
test
shl
pushl
ss
jbe
xlat
aam
adc
xchg
lea
les
neg
ja
pop
sti
xor
and
jmp
dec
sahf
xchg
sub
loop
dec
mov
push
mov
adcb
lock
and
pop
ljmp
mov
lcall
add
xchg
mov
mov
or
insl
clc
and
xor
lock
dec
lods
jecxz
lods
lahf
leave
sub
sub
in
push
data16
dec
loope
or
mov
ds
xchg
sub
rolb
das
divb
fildll
std
mov
xor
out
test
mov
xchg
sbb
sub
add
mov
add
out
popf
dec
out
sahf
cwtl
in
mov
repnz
mov
adc
push
sbb
sti
imul
push
out
sti
loop
sbb
imul
hlt
cmp
out
lock
cmp
ret
xchg
sub
xchg
lret
mov
pop
sub
xchg
test
fidivl
outsb
in
xchg
jge,pn
cmp
dec
orb
std
fidivrs
or
xor
and
xchg
enter
adc
or
pop
outsb
sbb
sbb
xchg
test
jmp
aas
push
int3
stc
rol
add
push
mov
add
cmpsl
jmp
call
lock
xorb
inc
cmp
add
mov
push
popa
pop
or
lock
cmp
imul
inc
xchg
movb
lret
jbe
je
mov
testl
inc
sti
out
mov
xor
adc
rorb
fsts
dec
pop
out
dec
sub
in
push
je
push
cmp
dec
cmpsl
pop
out
pop
inc
in
and
ret
mov
or
mov
add
and
lea
add
add
jno
or
fwait
adc
inc
sahf
jp
testb
jbe
cmc
lds
push
sarl
fsubr
cmp
cmc
movsb
jbe
dec
sbb
dec
clc
into
std
mov
xor
dec
sbb
mov
dec
dec
jge
sub
and
fildl
lret
popf
dec
xchg
add
or
and
and
xchg
das
jb
cld
outsb
out
sbb
lods
pushf
add
sarb
test
cmp
mov
add
cli
decl
int
and
xchg
mov
dec
test
sbb
cwtl
push
aas
jno
sbb
imul
rcl
mov
faddp
push
sub
add
rorl
xor
adc
cld
subl
mov
jns
aaa
push
dec
ja
repnz
pop
push
jne
fwait
pop
pop
mov
or
shl
stos
mov
negb
jb
test
and
xor
lea
repnz
dec
sbb
gs
or
test
and
sub
inc
addr16
push
xlat
fisubrl
mov
mov
les
lcall
jl
mov
ljmp
lds
divb
cmp
push
movsl
jl
pop
fwait
aam
scas
jg
dec
mov
sub
fwait
inc
cmp
sbb
ss
icebp
outsl
cmp
add
rcrl
into
das
ja
fs
sbbl
arpl
pop
jl
dec
jne
or
lock
jo
adcl
sub
aam
sahf
cmp
sbb
push
xchg
int3
arpl
lods
jae
leave
and
ss
rorb
dec
out
mov
int
stc
inc
mov
dec
out
fnstcw
sub
iret
loopne
insl
lcall
hlt
imul
loopne
icebp
pop
sbb
sbb
push
imul
fisttpl
lcall
add
adc
push
mov
les
adc
and
cmp
xor
test
mov
test
fwait
adc
inc
lcall
pop
sar
in
mov
pop
pop
push
adc
call
psrlw
dec
lods
aaa
outsl
adc
jno
in
pop
sbb
jp
mov
out
and
push
iret
and
imul
mov
test
sbb
cmpsb
inc
in
mov
xor
lret
dec
cmpsb
jb
into
in
roll
enter
enter
ja
xchg
divb
mov
sbb
insl
sbb
rcr
test
aaa
sbb
inc
sbb
sub
push
push
loop
stc
push
dec
add
repz
shl
add
testb
inc
loop
jmp
mov
roll
mov
add
pop
push
pop
add
outsl
mov
aam
adc
or
cmc
mov
jmp
add
wrmsr
pop
ret
ja
cmp
loop
sub
test
in
dec
hlt
lock
lahf
dec
test
insb
addr16
inc
leave
pop
xor
negb
lahf
lods
push
inc
stc
push
lahf
add
adc
cld
or
mov
outsb
mov
cmp
lahf
push
xor
mov
shlb
add
pusha
out
cmp
fcom
inc
cmp
adc
ss
mov
push
inc
das
std
jbe
cmc
and
inc
lock
pop
or
orl
cmp
xchg
stos
subb
fstpt
inc
jns
hlt
es
mov
dec
ljmp
adc
xor
xlat
dec
mov
fldcw
sub
aas
mov
in
mov
adc
push
or
std
jl
test
inc
sbb
pop
fildll
out
inc
push
inc
sbb
add
or
pop
xor
mov
sahf
cli
rep
ja
add
sub
sbb
cli
cmp
cld
loop
es
ss
rolb
pop
adc
or
pop
mov
aaa
out
repnz
add
cmpsb
dec
loop
rclb
je
xchg
pop
jb
aaa
jmp
cmpsb
ss
pop
mov
or
adc
in
je
popa
jmp
or
dec
loop
jb
popa
ss
xor
mov
jbe
out
jb
shrb
pop
rcl
aas
jo
jne
cmpsl
fsubrs
loop
int
mov
in
mov
je
dec
mov
lods
push
aad
mov
add
push
add
mov
sbb
popf
mov
jge
fldcw
cmp
or
sbb
mov
in
out
jb
andl
mov
cmp
mov
fmuls
add
sbb
inc
dec
jmp
sahf
adc
and
lods
cmp
iret
add
sti
cwtl
and
rolb
adc
or
mov
sbb
adc
sbb
push
adc
adc
add
mov
sbb
into
and
fisttpl
popa
and
loope
fcoml
xlat
and
aam
or
prefetcht1
or
pusha
mov
jo
sbbb
and
fisubs
lods
xchg
mov
rcrl
jne
clc
jl
imul
sbb
sti
lds
and
rorb
fwait
test
mov
call
in
or
push
jns
mov
ret
mov
inc
scas
std
ja
pop
mov
dec
cld
clc
inc
cmp
test
out
dec
mov
clc
stos
hlt
xorl
mov
cmp
ret
movsb
aas
mov
neg
push
in
xlat
and
aam
and
sub
jmp
das
notb
and
pop
popf
add
or
jge
rcl
arpl
frstor
fcmove
add
sub
xchg
jae
push
pop
mov
in
aaa
call
add
mov
mov
cmp
add
add
jns
mov
adc
into
or
cmp
out
jp
test
in
aaa
push
movsb
push
dec
push
mov
stos
jnp
mov
push
mov
in
pop
mov
jp
jge
cltd
mov
pop
in
xchg
pop
xchg
lahf
mov
mov
call
mov
cmp
aaa
rcll
jp
sbb
out
ljmp
dec
cmovs
sti
inc
or
sbb
cmc
sarb
mov
stc
sbb
insb
push
jl
push
dec
dec
sbb
pop
mov
jmp
or
sarb
int3
dec
sahf
sbb
inc
in
push
cmp
insl
call
dec
scas
jle
sbb
testb
dec
loope
dec
and
push
push
dec
fldt
and
push
cmp
lds
mov
shrl
gs
sbb
jns
xchg
xor
out
aaa
es
popa
lds
imul
cli
push
mov
test
ret
dec
and
push
clc
mov
cs
sbb
jmp
or
mov
int3
and
pop
xchg
out
pop
dec
cli
lds
push
jp
mov
rorb
adc
or
popa
out
movsl
in
test
xor
add
or
shlb
std
inc
or
adc
xchg
jg
scas
or
sbb
out
aam
cmc
test
sahf
pop
sub
std
sti
mov
sti
and
cwtl
add
cmp
push
and
in
adc
or
out
nop
repz
lds
pand
jae
mov
cmpsb
sub
ret
hlt
in
mov
aam
fwait
sbb
dec
xchg
adc
push
sbb
cmp
icebp
enter
mov
rolb
cmp
scas
es
fnsave
push
fistpll
pop
or
inc
arpl
mov
pop
js
xchg
test
outsb
mov
xor
scas
gs
and
jle
stc
mov
or
loopne
jno
aam
imulb
aas
iret
in
xor
xor
insl
or
sarl
addr16
and
scas
push
add
jns
mov
or
xchg
gs
pop
sbb
aas
sbb
mov
and
lret
jbe
or
add
in
les
loop
mov
and
pop
lods
in
clc
notl
mov
jmp
sbb
je
data16
ret
pusha
shll
out
mov
or
sbb
adc
xchg
and
mov
pop
imul
and
test
cmpsb
popf
cli
cmpb
aas
push
inc
bound
inc
aam
mov
pop
xor
and
sbb
jg
out
out
mov
fsubrl
and
shr
push
jnp
and
mov
jb
cmpsl
xor
or
add
dec
aam
lret
sbb
ss
ljmp
push
rcl
adc
data16
add
push
or
aad
out
jl
cmp
sbb
loop
sub
add
or
mov
pop
pop
daa
sub
sub
repz
in
cli
repz
push
adc
push
je
mov
js
cmpsb
rcll
out
inc
pop
outsl
inc
xor
xchg
xor
rcrb
push
in
mov
cltd
add
cmp
push
add
cmp
das
loop
add
into
stc
xchg
push
xor
dec
mov
aam
or
pop
cmp
insl
out
orb
or
cld
sti
into
fst
inc
mov
ds
pusha
filds
push
jo
leave
in
call
es
mov
mov
js
cmp
data16
insl
jbe
cmp
movsb
stos
cmp
lods
or
jbe
pop
outsb
je
shlb
jnp
mov
pop
or
cli
and
push
in
add
test
push
sti
or
idiv
test
inc
inc
lahf
xor
mov
and
mov
jae
popa
push
sbb
jecxz
dec
call
into
jbe
ja
dec
adc
cmp
inc
shll
jne
in
int
std
out
xchg
xchg
jp
in
sbb
xor
xor
and
lods
mov
mov
xor
fsubr
aad
and
ret
jmp
test
mov
sbb
lcall
test
out
push
xor
add
sbb
dec
fnstcw
adc
enter
iret
dec
negb
xchg
or
or
repz
dec
leave
lcall
lea
mov
movb
insl
add
pop
pop
add
push
cli
std
cmp
and
ljmp
mov
push
stos
or
lock
and
in
sub
cmpsb
std
fwait
sbb
pop
push
outsb
addr16
lcall
mov
rolb
pop
sti
fstl
jl
add
test
ja
sbb
mov
cmp
mov
loope
push
das
lret
push
pushf
fdiv
adc
pop
mov
scas
roll
or
pop
cmp
jb
stos
std
lahf
mov
xor
in
push
sarl
add
and
jle
mov
dec
mov
shlb
js
into
xchg
mov
mov
adc
mov
loope
test
les
aam
ljmp
fistps
hlt
jl
outsl
fcomp
add
cmove
mov
adc
lret
js
cmp
in
or
vpsubusw
mov
ret
notb
stos
mov
cwtl
pusha
int3
inc
sub
adc
pop
sub
add
iret
sub
sub
iret
fneni(8087
inc
xlat
in
and
mov
jbe
sbb
xchg
mov
loopne
lret
fiadds
enter
dec
or
dec
fstpl
jo
ret
add
and
gs
and
aam
clc
sahf
popa
add
or
enter
sub
sub
sub
adcb
aas
ret
inc
fs
fdivr
es
adc
enter
loopne
ret
hlt
pusha
out
cmpsl
cmp
cmp
mov
push
mov
add
lods
mov
and
movsb
mov
xchg
cld
test
adc
mov
mov
roll
mov
dec
and
loop
ret
mov
push
sbb
sub
arpl
sbb
lret
cmp
pop
cmp
and
int3
mov
push
shll
mov
sbb
dec
lret
cmpl
into
dec
fidivs
cmc
mov
mov
cmp
mov
out
outsl
jl
iret
outsl
push
cs
dec
cs
lds
cmp
ja
cmpl
push
cs
lret
aam
inc
xchg
lret
adc
ret
cmp
adc
mov
scas
fiaddl
out
cmp
dec
inc
pop
mov
sar
cmc
or
mov
fdiv
xchg
mov
fsts
mov
int3
mov
repnz
or
call
movsb
pop
push
fistpll
sbb
xchg
div
lret
orb
in
mov
xor
mov
in
cld
xchg
lret
mov
xchg
add
enter
xchg
mov
mov
ret
dec
popf
cs
inc
movsb
scas
test
or
adc
sub
mov
mov
aas
cwtl
dec
adc
mov
in
loope
add
out
and
mov
insb
push
sahf
aam
leave
push
cmc
stc
sbb
xchg
enter
mov
and
cmp
in
cmp
es
shrl
bound
push
sbb
aam
pop
xor
out
xor
jae
add
mov
outsb
sub
clc
mov
push
jb
mov
and
daa
scas
loop
or
jmp
lret
in
or
shrl
adc
jmp
sbb
loopne
mov
repnz
jne
or
dec
mov
ds
lret
pushf
ret
adc
inc
add
push
xchg
aad
fisubrs
fmulp
outsb
pop
shlb
ss
stc
push
lods
inc
in
popf
shl
dec
js
inc
cltd
iret
mov
js
cmp
add
adc
int
lret
dec
dec
mov
add
mov
into
shlb
cli
mov
int
add
hlt
mov
adc
pop
fcompl
sub
or
rorb
fidivs
fildl
int3
sub
and
cs
xlat
addr16
inc
mov
outsl
mov
repz
ds
ficomps
xchg
call
subl
subb
sti
dec
cmpsb
sub
sbb
jb
imul
sub
lods
stc
sarb
push
fdivrs
cmc
inc
rolb
pop
scas
sub
je
and
dec
pop
loop
cmp
stos
es
mov
jne
or
dec
hlt
movsl
loopne
imul
hlt
addr16
mov
lds
push
aad
sbb
cld
mov
jne
inc
fadds
push
xchg
pop
mov
sbb
mov
sbb
out
adc
icebp
mov
mov
push
or
bound
cltd
xchg
test
and
icebp
and
push
add
out
or
xchg
pop
popa
xor
mov
call
cs
adc
adc
pushf
bound
loop
mov
jo
frstor
nop
mov
cmpsb
xor
xchg
in
jl
mov
sub
add
inc
testb
inc
inc
popf
cmp
insl
add
hlt
pusha
xor
out
pop
or
push
sbb
stos
xor
repnz
dec
pop
dec
mov
les
sub
sti
xchg
rcrb
jmp
xchg
in
xor
or
movsl
xor
sub
bndldx
jb
lcall
int
dec
roll
adc
add
popl
adc
add
js
adc
add
xor
icebp
and
cmpsl
aas
pop
mov
mov
movsb
in
ffree
inc
xor
addb
dec
scas
mov
xor
fsubrs
xchg
cltd
mov
repz
sbb
imul
pop
sub
in
gs
mov
pop
pop
mov
ja
std
adc
adc
inc
xchg
fnstcw
push
in
les
or
push
mov
subb
jmp
lock
int
sbb
data16
sub
add
sub
pop
xchg
ljmp
xlat
fstps
xchg
jb
imul
pop
sub
adc
ffree
xchg
push
stos
jmp
sbb
mov
adc
xor
loopne
sub
xor
repnz
stos
push
fidivrl
push
enter
add
outsl
mov
xor
and
sbb
gs
cmp
xchg
jno
out
cmp
add
addr16
dec
inc
js
imul
mov
sub
adc
jns
mov
cmp
fbstp
js
push
mov
aaa
sbb
xchg
aas
or
sub
lea
mov
ret
adcl
outsb
add
ljmp
out
push
fcmovu
popa
sub
xor
out
subb
push
movsb
mov
imul
inc
inc
adc
pop
dec
add
test
inc
pushf
and
add
gs
xchg
ret
pop
sahf
aaa
push
loope
outsb
jne
sub
lods
sbb
movsl
int3
mov
imul
insb
test
sbb
push
sub
jl
push
ret
xor
icebp
pop
and
jge
fidivrl
lret
stos
sbb
push
mov
xlat
outsb
add
bound
movsl
repnz
mov
mov
lock
aaa
push
clc
inc
je
cmc
pop
fmuls
ljmp
in
xor
jbe
test
cmp
test
pushw
test
sbb
les
jg
hlt
pop
clc
out
insl
sbb
adc
fcmovu
hlt
int
push
dec
cmc
jae
push
movl
jl
jno
scas
outsl
mov
push
sbb
insl
mov
jp
jne
mov
icebp
cmp
dec
pop
jnp
dec
insl
mov
cltd
push
lods
clc
dec
imul
test
sti
xchg
hlt
jns
in
jecxz
out
popf
sub
sbb
xor
push
inc
xor
or
adc
adc
adc
daa
xchg
add
lret
loop
cmp
daa
bound
push
into
adc
lahf
out
mov
cmc
sbb
push
mov
pop
xchg
or
jno
data16
lret
mov
sbb
dec
jmp
jb
jo
mov
adc
push
jmp
fadd
mov
div
scas
mov
fucomp
loop
loop
lcall
pop
cmpsb
xor
xchg
and
lods
lahf
stos
xchg
and
movsl
lret
cli
xor
loope
fdiv
or
in
fstps
xchg
or
pop
xchg
fcom
pop
fcompl
sub
add
and
jge
dec
push
pop
mov
popa
orl
or
je
sahf
fidivrl
inc
push
jb
loope
cmp
pop
inc
push
sti
lcall
fstp
mov
adc
popa
jbe
cmp
call
fwait
scas
mov
stos
jo
xchg
clc
repnz
or
cmova
leave
mov
es
lds
mov
test
cltd
andl
jae
dec
mov
shlb
adc
xlat
lea
inc
pop
push
cmpl
movsb
fcmovb
or
jbe
xchg
stos
aam
outsl
mov
xlat
mov
enter
shr
sub
les
in
loopne
mov
sub
xor
cltd
push
sbbl
imul
and
dec
or
mov
cld
rorb
pop
loopne
sbb
in
xor
sbb
fadds
mov
xor
and
imul
pushf
out
rcl
mov
fstl
and
mov
fs
rcl
fildll
mov
sub
mov
call
jbe
mov
cmp
or
xor
mov
out
mov
fwait
xor
pop
pop
adc
xor
es
pop
xlat
lods
xchg
bound
and
mov
pop
frstor
push
scas
inc
in
daa
shll
dec
mulb
shlb
mov
shlb
dec
mov
mov
push
aad
pusha
shlb
push
in
icebp
hlt
adc
out
test
fisubs
dec
ljmp
cs
mov
adc
dec
aam
lcall
xor
adc
push
push
jb
and
aam
inc
pop
cmpsl
jl
outsb
pop
ret
dec
mov
bound
push
push
lret
cld
enter
out
jno
es
dec
cli
cmpsb
js
xchg
int3
mov
ja
mov
adc
sub
dec
mov
gs
aad
mov
lods
insl
leave
lahf
stos
ljmp
sbb
outsb
jnp
rcr
jo
cmp
dec
or
int
shll
ljmp
ja
data16
pop
ficoml
enter
and
and
mov
mov
ficoms
insw
cltd
inc
ja
out
mov
rcl
sub
popa
push
cmp
inc
fdivr
pop
lret
pushf
inc
rcll
adc
xlat
lahf
sbb
add
mov
cmp
cmc
int
ficoms
inc
leave
ja
lods
cmp
ljmp
inc
cld
inc
ja
sub
mov
sbb
sbb
mov
ss
mov
sub
xchg
cmpsl
inc
ffree
in
adc
das
pop
dec
lret
les
test
jo
sbb
cmp
inc
aam
lret
ret
pop
je
inc
and
inc
lcall
sub
je
fisttps
popf
fiaddl
roll
inc
or
xor
icebp
xchg
push
adc
iret
into
in
lds
fildl
adc
int3
les
dec
popf
loope
btr
mov
es
mov
cmp
xchg
xlat
or
cltd
xchg
adc
ret
cmp
push
sub
test
shrb
cmpsb
adc
mov
mov
push
push
arpl
das
into
outsb
decl
adc
loope
xlat
xchg
mov
sbb
into
inc
popf
mov
mov
fdivrs
inc
mov
jbe
mov
ljmp
xchg
in
add
jge
lret
fmuls
xor
mov
cmc
nop
mov
mov
es
push
out
mov
lcall
popf
add
loop
adc
frstor
xchg
fcompl
add
std
lret
bound
push
test
sbbl
sub
jmp
mov
adc
jmp
sub
stc
lea
jo
cltd
orb
sbbb
and
mov
pushl
and
dec
imul
jmp
inc
scas
xchg
pop
cmc
pop
fadds
sbb
js
add
loop
lahf
mov
sbb
add
fs
out
dec
cs
ffreep
sub
sbb
inc
lock
xchg
int
adc
imul
xchg
enter
in
ja
cmp
cs
xchg
mov
lea
not
sbb
mov
xchg
loop
xchg
sub
andl
cmp
leave
subb
lret
or
sahf
sub
adc
or
shr
ljmp
testl
lret
inc
xor
inc
les
repnz
jb
adc
jecxz
test
es
push
lods
add
mov
inc
in
pop
dec
jp
xchg
loope
mov
adc
lret
pop
cmp
hlt
in
pop
lock
dec
mov
sbb
icebp
cld
call
mov
mov
dec
out
sbb
aas
adc
popa
insb
push
xchg
or
cmp
pop
xor
inc
in
add
lods
xor
inc
pop
std
loop
repnz
dec
popf
rorb
outsb
lcall
mov
or
stos
mov
sbb
push
rolb
lahf
arpl
lret
lahf
inc
imul
loope
into
mov
and
adc
push
insl
cmpsl
ret
jmp
and
daa
int
sbb
nop
dec
addr16
adc
stos
loop
insl
or
pop
sub
mov
mov
jmp
in
stos
and
xchg
add
dec
mov
lret
dec
mov
push
fists
cltd
mov
insl
jns
dec
inc
pop
pop
fldl
stc
push
sub
dec
mov
and
add
xor
add
lock
es
mov
and
dec
scas
cmp
imull
sub
sub
mov
mov
bound
jp
add
outsl
xor
jecxz
lock
mov
jmp
dec
jg
rolb
imul
sbb
shlb
jb
out
mov
xchg
push
lret
mov
incl
imull
int
popf
lods
sub
inc
and
jg
rep
add
call
shl
mov
aam
adc
add
sarb
inc
xlat
hlt
lret
out
jnp
lock
lods
push
jb
fistps
leave
cwtl
test
mov
int
cmp
xchg
jle
shl
add
mov
hlt
imul
arpl
popf
sbb
cmpsl
mov
rolb
and
mov
dec
and
scas
push
mov
outsb
sar
cli
in
sub
mov
dec
aaa
adc
je
mov
sub
ret
aaa
inc
dec
cli
daa
mov
icebp
leave
fistps
mov
lods
pushl
adc
mov
addr16
push
lods
lds
mov
in
dec
mov
push
inc
loopne
je
or
ret
xor
or
jmp
insb
mov
shrb
out
sub
push
pusha
sahf
xlat
push
out
mov
shrl
add
in
add
dec
push
out
aam
ljmp
inc
add
mov
or
mov
outsl
sbb
subl
imul
inc
cli
and
and
dec
pop
js
ja
xor
add
es
xor
jb
cmp
sbb
repnz
sbb
xor
or
adc
std
movsb
popl
xchg
mov
mov
adc
lret
insl
xlat
jmp
pop
out
cmp
rcrb
xor
xchg
popf
loope
add
arpl
insb
xchg
in
negl
loope
jle
mov
repnz
mov
sbb
rcl
sbb
inc
push
inc
sub
cmpsb
inc
xchg
cli
test
std
out
ret
jb
popf
call
cli
add
lret
repnz
pop
lea
sub
jb
mov
xor
xchg
shlb
and
add
mov
out
sub
cs
bt
and
mov
push
mov
pop
jge
sub
mov
add
pop
push
cmpsb
fdiv
stos
jns
or
pop
fstp
cmp
stos
cmp
movb
mov
mov
dec
cmpb
pop
loope
int
jns
mov
push
and
test
pushf
mov
arpl
in
into
jbe
mov
arpl
jl
cmpl
es
pop
push
je
out
popa
pop
xor
sub
ret
fldenv
andb
adc
dec
loope
inc
mov
jns
push
cmp
repz
scas
dec
aam
pop
clc
xchg
sub
push
lods
lcall
ret
inc
adc
std
pop
cmpsl
xor
mov
push
inc
stos
pop
mov
mov
pop
jo
adc
bound
dec
test
rol
xchg
test
mov
sub
daa
lret
or
sub
inc
pop
xchg
in
xchg
call
dec
dec
mov
leave
cs
or
lret
mov
mov
outsb
insl
sbb
in
sub
fxch
aaa
out
subb
arpl
lcall
pop
push
ret
insl
mov
int3
aas
dec
in
cmpl
jmp
bound
or
in
xchg
xor
aaa
test
and
inc
push
cmpsl
addl
out
xor
aaa
fldt
mull
out
push
adc
xor
jbe
mov
movl
or
jbe
dec
mov
sarb
cmp
rolw
outsb
stc
stc
roll
fnstenv
out
lods
jns
xor
insb
or
mov
inc
dec
mov
dec
xor
push
push
stos
out
or
dec
push
add
stos
push
adc
shlb
sbb
sub
sbb
pop
xor
int3
lahf
ficoml
mov
in
daa
bound
stc
mov
inc
xchg
das
cltd
push
cmpsb
push
sarb
mov
push
pop
or
mov
cli
cs
int
mov
push
popf
xchg
cmpb
lret
xchg
fisubl
and
or
addr16
inc
les
fwait
mov
fisubrl
out
xor
call
pop
sub
pop
mov
cmp
outsl
dec
sbb
out
stos
daa
insl
arpl
rorl
adc
mov
mov
cli
pop
and
jmp
mov
inc
ror
stos
sahf
pop
xchg
push
dec
mov
cli
sbb
dec
sbb
push
loope
xchg
pcmpeqb
mov
pop
roll
clc
rclb
mov
pusha
xor
push
adc
movsl
nop
icebp
jp
mov
bound
jae
mov
lods
push
and
lods
fsubrs
imul
fst
aaa
or
test
gs
jne
dec
cmp
lods
dec
dec
loopne
mov
sahf
insb
jp
fcomps
push
bound
scas
test
lock
pop
imul
adc
mov
jg
mov
mov
mov
dec
sub
sbb
and
adc
std
mov
xchg
data16
scas
mov
sbb
stos
adc
pop
sbbl
out
xor
ret
es
or
iret
cmc
inc
mov
mov
cmp
addb
fidivs
push
push
cmp
inc
pop
andb
xchg
cmp
icebp
aas
incl
roll
push
sub
xchg
cmp
sbb
sub
fistps
out
scas
jae
inc
outsb
mov
pushf
xlat
ror
cwtl
dec
mov
add
cld
testb
push
and
shlb
es
cmc
cmp
and
movsl
cltd
leave
imul
mov
dec
fstpt
popa
add
mov
test
mov
pop
or
aam
lods
loop
mov
mov
dec
xchg
xchg
push
pop
fmulp
sub
shll
out
sbb
ljmp
push
lahf
int3
and
adc
sbb
pushf
cmpsb
fistpll
sbb
jb
push
nop
int
dec
adc
xchg
sub
xlat
add
loope
ds
xchg
ja
mov
adc
mov
or
subb
inc
fcmovbe
adc
clc
aam
vmovsldup
pop
cmpsl
push
push
mov
loopne
mov
bound
aam
sbb
xchg
pop
ret
fsubr
pop
push
cmpsb
adc
mov
icebp
leave
mov
mov
loop
movsb
jg
aad
shlb
andl
mov
sbb
xchg
sti
mov
mov
sbb
enter
lret
xor
lea
aad
repz
sbb
jno
cmp
lret
mov
das
stos
hlt
aam
cmp
jle
push
imul
repnz
dec
push
push
fs
nop
int3
inc
add
lret
inc
je
mov
and
pop
scas
lahf
outsl
int3
daa
lods
dec
movsb
mov
fsubrl
std
adc
nop
and
xchg
bound
imul
xlat
stos
call
mov
data16
sub
shll
movsl
aad
subl
jecxz
xor
xor
xor
adc
cmpsl
shr
add
mov
mov
shlb
ret
out
adc
inc
mov
sub
dec
outsb
in
sub
jae
int3
sbb
jp
adc
ja
fiaddl
lds
clc
dec
xchg
lahf
mov
vminps
adc
popa
aas
xor
into
jl
add
pop
xor
mov
mov
mov
aaa
jmp
movsl
xor
dec
mov
nop
mov
je
outsl
ret
push
stos
xlat
ja
mov
mov
mov
dec
add
rorl
inc
ret
mov
ds
dec
sbb
jmp
or
bound
lcall
data16
cwtl
pop
daa
inc
jbe
pop
dec
xchg
adc
ja
and
push
aaa
jae
push
movb
mov
cmpsb
xchg
or
aas
lret
incb
int3
sti
pop
std
daa
and
cmp
xchg
xchg
mov
ret
cmp
shr
sub
fists
fsts
aas
xchg
fnstsw
outsl
add
into
jg
sbb
pop
stos
mov
std
lea
add
subl
xchg
adc
shll
nop
jb
sbb
mov
sub
push
into
movsb
ss
mov
cld
push
xor
jmp
lcall
inc
orl
rol
push
xchg
adc
js
mov
xchg
pop
addr16
sub
sbb
cmp
cmpb
mov
adc
mov
inc
inc
xor
xor
mov
shrb
decb
inc
cwtl
ljmp
pop
nop
dec
negb
push
dec
xor
jmp
dec
pop
mov
bound
test
lods
mov
cmp
in
push
and
lds
stos
enter
sti
pushf
shlb
pop
fisubs
mov
add
mov
and
cli
cs
jmp
div
sbb
ror
stos
rorb
adc
jb
push
nop
out
jle
push
dec
outsb
pop
jns
lret
xor
xchg
adc
out
popa
xor
pushf
mov
iret
rcr
dec
mov
in
inc
sahf
ret
jmp
or
lcall
sbb
cmpsl
push
sbb
in
xor
mov
add
inc
push
xlat
mov
cmc
mov
xlat
in
mov
sub
shl
inc
je
ret
push
inc
or
sub
jp
dec
and
inc
shlb
int
mov
adc
jo
push
jmp
mov
add
dec
push
movsl
pop
dec
imul
inc
xor
and
mov
mov
pop
ds
mov
pop
fmul
dec
push
and
jbe
popf
adc
in
jecxz
jecxz
js
sti
imul
mov
sahf
mov
or
ret
ljmp
aad
push
in
fmul
add
push
xor
rorb
push
mov
dec
cmp
into
push
and
cmc
nop
loope
mov
leave
xor
or
xchg
out
push
in
lds
mov
or
inc
inc
mov
icebp
rcrb
pop
lret
shr
sbb
int
and
jg
pop
mov
xlat
repnz
xorl
lret
xor
loop
mov
inc
inc
and
jb
stc
out
outsl
or
jne
fldenv
outsb
sahf
cmp
mov
fstpt
std
xor
movsb
andb
ret
jl
outsl
or
outsl
lock
nop
nop
and
cmp
int3
fcompl
mov
lods
adc
sub
xchg
cmpsl
pop
filds
ljmp
sub
movsl
imul
into
adc
push
adc
jl
push
mov
repnz
imul
cmp
pushl
mov
icebp
inc
jge
xchg
sbb
icebp
outsb
leave
mov
mov
call
mov
mov
jge
and
rorb
jne
ror
mov
add
xor
lret
lcall
gs
fnstsw
in
mov
jmp
or
mov
xchg
inc
mov
in
lds
mov
movsb
ror
ljmp
sbbl
jbe
fidivs
aam
lea
sbb
xor
sub
mov
mov
sub
mov
lea
mov
in
fisubs
ljmp
xchg
lahf
jp
ja
push
adc
sub
mov
in
mov
cmc
xchg
jmp
jmp
test
or
sbb
int3
ds
arpl
lea
pop
jecxz,pt
jl
xor
in
inc
mov
mov
in
test
sub
xchg
nop
out
mov
call
mov
jb
sbb
in
jno
jl
mov
push
mov
sarb
sar
cs
ss
cmp
out
ss
cmc
in
jae
mov
cltd
xor
mov
mov
jmp
or
mov
push
not
rol
add
test
lahf
jae
sbb
fstl
into
inc
fnop
out
jg
sbb
shlb
data16
sub
in
pop
push
pop
pop
sbb
dec
mov
mov
pop
adc
into
fwait
xchg
les
jae
sbbb
pop
lret
pop
mov
fcmovnbe
shrl
jmp
dec
cmpsb
insb
fistpll
movsb
add
nop
out
andb
lahf
mov
in
lret
adc
cmp
sahf
mov
and
and
dec
dec
xor
cmpsb
mov
mov
aaa
jl
cli
mov
ficoml
jne
sbb
call
inc
lods
sbb
jno
xchg
sbb
mov
rcll
add
dec
jmp
pusha
mov
insb
arpl
sub
push
sub
mov
lcall
repz
outsb
std
mov
push
pop
aaa
fsts
test
xchg
stos
and
in
les
lods
jb
cmpsl
adc
dec
aad
dec
sbb
enter
jb
lea
push
inc
jl
xchg
push
es
cmp
test
cmpsb
dec
cld
dec
inc
popa
mov
pop
loope
fidivrl
dec
mov
xchg
mov
adc
dec
leave
sub
pop
orl
ds
into
loopne
aad
mov
fsubrs
subb
mov
cmp
jge
xchg
ret
lahf
inc
pop
and
push
lahf
das
mul
jae
ss
cs
xlat
cmp
pop
push
nop
push
or
nop
jo
xor
out
fucomp
int3
adc
mov
mov
aam
dec
outsb
adc
ret
loope
dec
bound
hlt
test
int3
sub
push
pop
sahf
jno
fistpll
xchg
fdivrs
push
inc
pushf
insb
mov
mov
popa
int3
push
inc
loope
out
pop
repz
push
outsl
xor
mov
add
push
xor
add
xor
jb
scas
pushf
sar
mov
jb
pop
cmp
add
jge
dec
aas
sub
xchg
push
pusha
rcrb
dec
sbb
mov
xchg
or
insl
mov
into
push
ret
adc
movsl
sub
jmp
mov
aad
inc
out
dec
jne
iret
adc
xor
mov
pop
loopne
sbb
jbe
xchg
fwait
sahf
xchg
call
out
mov
push
cli
loope
out
mov
cmovs
shl
pushf
adc
std
test
loope
inc
icebp
les
movsl
pop
aam
mov
enter
cmpb
fwait
nop
xorl
jmp
cmp
mov
dec
icebp
pop
mov
sub
and
and
arpl
fwait
jo
jae
movsl
pop
mov
cmp
iret
mov
jmp
lods
rolb
and
push
nop
mov
sar
std
xchg
gs
add
xor
xchg
mov
mov
andb
int3
shl
fsub
cmp
lcall
cmp
or
cmp
mov
stos
shrb
out
lret
fbld
stos
cmpsb
sub
outsl
nop
sub
jecxz
je
ret
sbb
sub
and
jo
pop
pop
sbb
pop
jb
cld
call
and
mov
pop
and
mov
jnp
data16
fistl
lret
pop
outsb
movsl
mov
cmc
sbb
push
ret
xchg
mov
fistpll
gs
ljmp
mov
loope
fstpl
shrl
test
pop
aad
or
jl
call
sarl
iret
movsb
xchg
add
mov
adc
ret
mov
into
mov
push
mov
ret
je
or
das
lods
sahf
insb
mov
mov
and
jle
repz
aas
ss
sarb
hlt
mov
mov
jp
sub
sbb
dec
subl
mov
cs
inc
mov
loope
out
movsb
adc
shrb
ljmp
mov
or
xor
xchg
adc
addl
dec
sbb
adc
push
or
sbb
cltd
ja
cmp
add
sbb
mov
sub
mov
cmpl
xchg
or
push
jo
push
ds
lahf
pop
pop
into
or
xor
sub
mov
inc
stos
lret
push
cmp
out
sti
sbb
cmp
dec
inc
adc
rcl
xchg
mov
popf
hlt
cld
xor
inc
xor
and
mov
mov
sbb
ja
daa
xlat
in
cld
sahf
lcall
enter
sti
cs
inc
in
mov
pop
mov
out
mov
sbb
ss
aaa
movsb
out
add
imul
ret
lret
xor
mov
movsb
mov
add
jl
fwait
mov
mov
loop
repz
push
call
jo
sbbl
mov
add
or
cmc
lods
dec
test
cmc
mov
lret
mov
pop
call
cld
jb
movb
pop
loop
repz
jp
mov
repnz
imul
divb
imul
mov
repnz
mov
in
int
push
repz
call
or
iret
pop
orb
push
xchg
mov
inc
push
int3
sub
sbb
inc
sub
cltd
fs
test
mov
es
mov
lods
or
call
rcrb
dec
rcrl
cld
divl
sbb
or
mov
sarl
jne
sbb
xchg
xchg
test
callw
jbe
cwtl
sbb
dec
mov
inc
xor
into
adc
jp
aam
bound
repnz
adc
inc
loope
dec
sub
scas
sbb
xor
testl
test
adc
lods
fisubrs
mov
mov
fsts
add
mov
out
ljmp
loop
repz
lods
push
jmp
shl
imul
testb
sbb
shlb
repnz
adc
inc
aad
push
in
cld
push
out
cmpsw
scas
movsl
jb
push
loop
repz
push
call
push
mov
or
call
mov
mov
fdiv
push
jmp
sbb
ss
std
sbb
pop
mov
dec
mov
pop
mov
repnz
adc
loop
repz
push
call
xor
lret
sbb
jp
test
or
jmp
mul
jge
jle,pn
mov
inc
repnz
mov
loop
repz
insl
jmp
push
jne
sbb
lea
call
mov
push
call
lods
mov
sub
mov
inc
imul
push
mov
repnz
adc
jne
jb
cltd
bnd
shr
xor
ret
jb
sbb
mov
or
call
mov
mov
add
xor
ds
and
xchg
adc
subb
mov
adc
adc
loop
repnz
out
sbb
cld
shll
loop
cmpsb
stos
movsl
lods
in
shll
sti
sbb
ljmp
imul
dec
fiadds
test
imul
icebp
mov
in
mov
xor
stos
sbb
sub
xchg
sbb
inc
mov
cmp
sbb
mov
lods
mov
repnz
sbb
out
loop
repz
cmpsb
test
jge
sbb
inc
pop
notb
imul
mov
mov
fptan
add
push
call
or
cmpsb
mov
xor
loop
add
lds
xor
call
inc
sbb
inc
mov
cmp
sbb
ret
movsl
mov
std
aad
adc
loop
in
push
dec
inc
mov
or
ss
sbb
inc
js
mov
adc
shlb
repnz
adc
inc
aad
push
in
stc
repnz
push
jmp
call
cmp
cmp
push
and
ljmp
insl
adc
popf
pop
loop
repnz
cmp
call
fdivs
sbb
mov
or
jecxz
enter
sbb
cmp
dec
notl
dec
popa
cmp
imull
adc
lods
fisubrl
divb
std
rcll
inc
cmc
sbb
cmpsl
mov
add
xor
out
pop
rclb
jg
mov
test
imulb
dec
fldenv
loopne
adc
imull
cmpsb
andl
dec
adc
lods
cli
imul
mov
repnz
adc
inc
xchg
xor
call
fdivl
sbb
mov
cmovle
pop
pop
mov
in
pop
sbb
pop
or
push
jo
jp
popa
cmp
imull
adc
lods
fisubrl
lret
fnstenv
push
inc
std
out
in
pop
jmp
call
xor
inc
pop
notb
imul
mov
mov
push
out
pop
call
add
repz
dec
lods
scas
inc
test
pop
adc
cli
mov
dec
mov
bnd
jp
popa
mov
loop
repnz
ret
call
shlb
sbb
mov
or
loop
repnz
lods
stos
imul
pop
adc
loop
repz
push
call
sub
sbb
mov
or
jmp
imul
jge
sbb
dec
loope
fimull
xor
test
idivl
jge
sbb
inc
js
mov
mov
sub
repnz
adc
in
shl
cld
push
out
insl
cmpsl
mov
adc
inc
inc
shl
adc
ljmp
insb
mov
repnz
adc
inc
test
mov
push
call
hlt
jb
sbb
add
dec
pop
pop
mov
enter
add
rcll
outsl
lods
subb
mov
repnz
mov
push
out
pop
call
or
push
dec
adc
adc
out
pop
dec
mov
bnd
inc
insl
mov
popf
repnz
and
fucomi
cmp
lret
jb
sbb
mov
or
call
sbb
mov
repnz
mov
loop
xrelease
call
test
sbb
mov
or
call
fcompl
dec
int
inc
hlt
testl
pop
xchg
mov
lods
pop
jl
mov
aaa
jbe
pusha
jne
sbb
mov
cltd
or
call
mov
jp
fdiv
push
jmp
sbb
or
sbb
pop
pop
jl
aaa
cmp
mov
push
repz
mov
sbb
or
call
rcrb
dec
rcrl
cld
divl
sbb
cld
cmpsb
setl
sbb
ljmp
push
push
mov
repnz
adc
jne
jle
cltd
bnd
shr
xor
into
mov
or
call
sbb
psrld
sub
ss
pop
out
inc
negb
imul
mov
mov
fptan
add
push
call
add
out
sbb
dec
add
mov
lods
out
pop
xchg
mov
jl
repnz
adc
popf
test
scas
cmp
imul
dec
shll
jb
sbb
mov
cmovp
out
adc
dec
mov
pop
mov
repnz
adc
loop
repnz
and
fucomip
xor
into
mov
xlat
mov
or
call
mov
mov
jnp
sbb
mov
bnd
bound
jb
cltd
bnd
shr
xor
ret
jb
sbb
mov
or
call
sbb
xor
call
and
inc
insb
testb
adc
cs
test
mov
in
leave
repnz
push
call
nop
fidivl
inc
jge
sbb
inc
int3
mul
adc
xchg
imul
mov
jne
shrl
adc
lods
imulb
data16
shll
inc
loope
dec
aam
mov
mov
sub
inc
dec
mov
mov
call
sub
sbb
mov
testl
dec
jmp
inc
pop
add
cmp
sbb
inc
push
lods
mov
cmp
repnz
mov
fptan
add
push
call
add
repz
dec
shrl
adc
out
pop
dec
mov
bnd
inc
insl
mov
loop
repnz
push
call
dec
jb
sbb
mov
or
out
push
dec
fld
stos
mov
cmp
adc
inc
pop
mov
js
mov
mov
cmp
sub
or
jmp
negb
jl
or
xor
inc
dec
out
sub
std
cmc
cmpsb
add
adc
inc
call
int3
jb
sbb
xchg
outsb
test
jle
gs
dec
mov
adc
lods
outsb
imul
in
mov
dec
sbb
mov
dec
pop
imul
push
call
jo
sbbl
mov
or
call
mov
mov
loopne
adc
rep
add
xor
xchg
xlat
repnz
mov
roll
jb
sbb
out
sahf
test
outsb
call
cwtl
sbb
dec
mov
inc
xor
into
adc
jp
fadd
push
call
in
push
and
ljmp
repnz
mov
subb
adc
and
xor
or
jmp
negb
jl
sbb
dec
cmc
ss
mov
push
jle
mov
mov
aaa
cmpsl
out
push
xor
call
pushf
sbb
dec
fiadds
test
imul
lds
loop
jmp
push
dec
loop
push
mov
xor
inc
push
mov
subb
adc
cs
aaa
mov
or
jmp
notb
jl
sbb
dec
jmp
and
jnp
aaa
cs
xor
out
arpl
mov
gs
repnz
inc
mov
mov
pop
fisttpll
shl
ljmp
pop
add
loope
scas
adc
jle
pop
dec
mov
bnd
inc
insl
mov
popf
repnz
and
fucomip
xor
into
mov
or
call
sbb
push
sub
and
mov
sbb
xchg
std
addl
mov
xorl
push
in
int
push
imull
call
sbb
mov
add
repz
shl
pop
jne
sbb
mov
cltd
or
call
mov
incb
imull
jmp
sbb
or
sbb
pop
pop
jl
mov
aaa
cmpsl
out
push
xor
call
je
jb
popf
sub
neg
adc
lods
lret
jp
fmul
mov
repnz
adc
inc
loope
dec
in
mov
sub
and
sbb
inc
xor
adc
lods
imul
mov
repnz
add
push
in
std
repnz
insl
mov
ds
xor
out
pusha
rclb
xchg
or
call
test
mov
nop
lods
push
imul
daa
sbb
adcl
mov
pop
mov
repnz
adc
jno
jle
gs
sbb
shr
xor
ret
jb
sbb
mov
or
call
loopne
dec
out
scas
mov
cmp
inc
pop
mov
js
mov
mov
es
das
mov
or
jmp
negb
jl
sbb
dec
in
jl
xchg
fisubs
pop
jnp
aaa
push
dec
add
cli
adc
xchg
imul
fdivp
test
stos
inc
mov
cmpsb
loop
repnz
push
call
clc
jb
sbb
add
call
rcrl
jb
sbb
mov
or
outsb
jge
sbb
inc
xor
into
adc
imul
lds
dec
jecxz
inc
shrl
jbe
enter
repnz
adc
loop
clc
test
orl
adc
sub
and
sarb
aas
mov
or
jmp
mul
jge
push
dec
loop
scas
mov
cmp
inc
pop
mov
subb
adc
cs
cmp
or
jmp
mul
jge
jle,pn
ret
add
fwait
outsl
pop
or
inc
fcomi
jmp
rcl
and
xchg
add
pop
cmp
cmc
das
dec
addb
sbb
fstpl
cmpb
dec
movaps
fildll
in
mov
adc
push
sbb
es
test
xchg
inc
in
repz
mov
iret
xor
jmp
push
shll
ja
hlt
sbb
and
daa
adc
xchg
shrl
push
mov
sahf
and
adc
les
rcrb
arpl
mov
mov
pop
popa
mov
cltd
movsl
mov
mov
outsb
fnstsw
sarl
xchg
cli
or
push
ficoml
sbbb
data16
fisttpll
popa
adc
adc
adc
pop
and
push
out
cmp
or
negl
inc
bound
dec
add
mov
sub
dec
push
sbb
dec
in
sbb
fucom
pusha
xchg
pop
out
xchg
movl
das
andl
cmp
dec
lods
lahf
imul
xchg
out
mov
daa
mov
lock
stos
ja
int
or
lods
adc
push
fildl
adc
mov
cli
les
in
jmp
push
inc
shrl
ljmp
adc
std
popa
adc
ljmp
flds
out
jg
jge
xlat
mov
popf
mov
or
mov
jmp
repz
data16
ljmp
cld
mov
xor
insb
mov
add
push
mov
ljmp
pop
fcmovbe
xchg
jne
rorb
xchg
sub
outsl
bound
shll
popa
in
and
pop
mov
mov
inc
pop
dec
sub
fdivr
pop
fs
addb
inc
icebp
sar
and
es
and
mov
inc
rorb
cmp
in
bound
fistpll
xchg
or
and
scas
or
dec
daa
insl
mov
inc
out
into
sti
jmp
repz
into
xor
cmpsb
int
dec
rcr
mov
daa
push
cmp
add
add
fdiv
inc
imul
adc
movb
imul
cmp
in
outsb
add
shll
and
movsl
outsb
push
mov
mov
repz
jp
movsb
add
cld
out
cmp
sub
andb
cmp
push
fsubp
ss
outsb
sub
add
nop
scas
and
cltd
adc
aad
shll
aam
dec
es
and
lods
fwait
mov
push
push
lock
add
pop
pop
dec
pop
int
cli
mov
bound
das
std
cli
stos
pop
mov
jo
cltd
mov
les
int3
flds
push
xor
je
aaa
jbe
push
out
mov
pop
cli
ret
lcall
hlt
loope
ljmp
mov
dec
push
add
int3
cltd
add
xchg
out
sahf
xchg
es
cltd
loope
ret
dec
xchg
cmp
movsl
add
push
mov
femms
daa
in
xor
out
in
hlt
lret
cld
fcoml
cld
sahf
xchg
mov
mov
pop
aad
int3
lds
rorb
cmp
sub
clc
jmp
aaa
mov
in
aaa
adc
rcl
dec
in
or
nop
inc
repz
sub
sbb
es
out
dec
add
xchg
cmpsl
xchg
jne
xlat
std
add
sahf
out
aam
cld
cmpsb
xchg
test
je
pop
sbbl
pminub
mov
ret
jmp
pop
push
int3
ss
outsb
cld
adc
test
not
cli
lahf
adc
call
push
mov
inc
and
xchg
or
cld
leave
xor
push
inc
idiv
insb
in
mov
out
fldcw
fisubs
in
push
test
outsl
cmc
jl
cmp
sub
repnz
ss
xor
aaa
andl
add
std
mov
or
dec
add
outsb
aaa
pop
mov
add
xchg
pmulhuw
xchg
pusha
sbb
or
orl
enter
mov
pop
hlt
inc
rcll
cs
cmp
in
test
sbb
ljmp
jmp
adcb
and
adc
cmpsb
lret
mov
in
cmc
push
push
jae
pop
lret
jle
cmp
cmp
out
cmc
hlt
inc
dec
lcall
adc
fiadds
sar
and
lock
sti
aam
lods
lds
ds
mov
push
pop
push
imul
aaa
lea
push
insl
loop
stos
jecxz
lock
sbb
mov
pop
std
mov
mov
and
loopne
push
xor
cli
cmp
xor
push
add
lcall
adc
fsubrl
shlb
pop
mov
out
ja
shlb
aaa
inc
or
scas
aaa
cmpsb
aam
repz
out
mov
mov
jns
jmp
mov
ss
push
or
mov
outsb
inc
call
int
insl
hlt
adc
clc
xchg
ss
mov
and
push
enter
sub
mov
es
adc
roll
out
jbe
das
insl
sbb
lock
sarl
icebp
mov
dec
movzbl
repnz
or
jle
sbb
jbe
and
cld
xchg
mov
sub
hlt
xchg
pop
and
and
or
adc
ss
mov
popa
cmc
push
jae
xor
enter
enter
daa
cmp
std
jne
mov
fldl
push
inc
xor
xor
push
xchg
xchg
repnz
bound
lds
jmp
call
add
lods
and
bound
pusha
stos
pcmpeqw
orb
jns
jno
popf
sub
outsl
cli
jmp
cmp
add
insb
out
aaa
jg
add
leave
push
and
fcompl
sbb
push
jge
addb
mov
cmp
std
incb
cld
cmc
icebp
or
and
pop
sbb
inc
and
adc
outsl
push
xor
xchg
scas
fcompl
lods
test
in
cli
dec
daa
clc
inc
ret
data16
sbb
adc
sub
out
loope
mov
sub
jl
xor
dec
add
fiaddl
adc
jl
sub
inc
sahf
and
sub
xchg
jmp
and
cli
incb
sbb
adc
mov
mov
push
std
cmpsb
repz
add
adc
pop
imul
bound
sub
adc
or
pop
cli
mov
push
frstor
jp
push
loope
push
cli
pop
and
sbb
and
xchg
push
mov
mov
jge
jns
add
fwait
mov
cltd
outsb
hlt
push
rorb
scas
pop
test
and
stos
cs
pop
dec
or
pop
pop
sbb
lds
sbb
imul
leave
xchg
adc
out
lds
iret
or
aam
and
cmc
xor
pop
setl
lcall
insl
aas
mov
pop
add
iret
es
shl
out
ret
sbb
dec
test
faddl
jp
pop
mov
or
xor
and
jmp
iret
fwait
add
aam
and
pop
movsb
add
push
or
cmp
les
sub
loop
mov
popa
ss
or
daa
add
frstor
fisubrl
push
lods
call
loopne
jbe
inc
icebp
adc
xor
test
pop
into
out
cltd
cmp
mov
xchg
sarl
out
nop
lea
inc
inc
in
int
adc
jg
cld
out
pop
cli
call
sahf
mov
cmp
push
sti
sub
sub
out
outsl
in
jmp
adc
mov
dec
shl
es
aad
insb
pop
lret
xchg
and
ss
das
aaa
in
sub
pop
inc
pop
add
movsb
popf
aaa
dec
add
daa
add
insl
in
out
cmp
ljmp
sub
outsl
mov
in
je
cli
mov
sbb
inc
sub
xchg
ret
push
sub
enter
fcoms
xchg
ktestb
dec
incb
ret
add
jnp
pmaxub
xchg
bnd
repnz
fstpt
int3
pop
mov
stos
mov
mov
adc
out
cmp
cmp
sbb
bnd
mov
int3
cli
inc
cmp
insb
test
sub
cld
or
fucom
sub
daa
add
xchg
testb
mov
add
adc
lods
push
insb
inc
sub
mov
lret
mov
call
lock
sub
in
pop
cli
cmp
cli
or
mov
test
das
mov
shll
lds
xchg
xchg
adc
sbb
jo
push
ror
shll
cmpsl
xor
xchg
or
fimuls
out
and
enter
in
out
sub
jmp
inc
icebp
leave
dec
imul
jb
push
mov
push
xor
pop
in
insl
sbb
jnp
mov
xor
shlb
andl
add
ret
add
sub
xor
insl
mov
jae
jmp
xchg
mov
mov
pop
out
dec
in
add
xchg
clts
in
sub
cld
jnp
out
arpl
mov
jp
dec
and
mov
add
repz
shrb
pop
or
xchg
in
push
pop
call
push
popa
xchg
cmp
lcall
cmp
stos
shl
mov
jecxz
pop
pusha
cmp
shrb
pop
cwtl
mov
hlt
fcmovb
loopne
xlat
jno
inc
paddusb
aaa
sub
cmp
iret
outsb
pop
stos
pop
mov
cmc
loop
adc
cmpsb
outsb
mov
mov
mov
pop
push
rcr
nop
dec
xchg
add
sbb
mov
mov
cmp
xor
insl
hlt
pop
cmpsb
repnz
mov
roll
pusha
js
push
cli
daa
or
icebp
mov
hlt
ror
enter
mov
mov
rcll
sub
lea
aaa
adc
cmp
mov
xorl
xlat
sub
insl
test
jnp
lahf
pop
mov
pop
std
add
xor
mov
inc
out
cmp
incb
loop
test
add
shl
cmp
mov
ds
xchg
add
mov
or
cld
sahf
call
pop
arpl
pcmpgtb
test
rcrb
jo
mov
in
jb
in
cmp
decb
lahf
push
adc
sbb
lret
and
cmp
in
in
push
pop
jo
sub
sub
mov
pop
in
jne
push
mov
xchg
jmp
ja
xchg
push
sbb
sub
test
adc
iret
outsb
jmp
ficoms
bswap
sbb
shl
and
es
stos
cmc
aaa
addr16
or
add
or
dec
lea
aad
xor
mov
std
pop
add
dec
pop
jb
push
add
xorb
les
add
push
push
insl
pavgb
mov
add
push
popa
pusha
jle
les
leave
or
pop
jp
mov
xchg
mov
bound
push
cmovl
int3
add
imull
daa
xor
ljmp
sub
jb
lock
fs
inc
loopne
mov
fyl2xp1
out
sti
out
mov
test
xor
sub
jnp
sbb
cld
adc
lods
jmp
dec
jl
mov
xor
xchg
shll
jns
push
out
je
and
imul
mov
mov
leave
dec
add
mov
lahf
stos
ss
fisttpl
gs
lret
icebp
sub
add
pop
mov
inc
aad
push
mov
rolb
sbb
adc
xchg
lods
add
or
bt
push
cli
cltd
jg
adc
mov
jl
jbe
stos
add
daa
std
loopne
xchg
pop
add
aaa
mov
std
in
fisttps
pop
push
sub
jmp
adc
adc
lret
cmc
mov
or
in
cmp
test
pusha
sahf
xchg
imul
cmp
call
ret
inc
jmp
or
pop
cmp
rolb
rcrl
setp
cwtl
push
jns
sbb
icebp
sub
sar
sub
in
aad
adc
out
bound
test
mov
xor
loope
lds
cld
lret
push
mov
mov
mov
jb
movsl
mov
fsts
push
xlat
js
int3
cmp
mov
lods
mov
addb
add
in
jge
inc
or
outsl
xor
loop
in
mov
sub
mov
imul
sub
daa
sub
mov
stos
cli
add
add
roll
idivl
imul
in
mov
hlt
addr16
stos
ss
sub
and
sbb
fildl
rorb
cmp
adc
adc
mov
or
data16
xchg
ss
movsb
xor
and
leave
sarb
pop
ret
mov
pop
xor
cmc
addb
or
lds
rclb
xor
adc
loope
nop
fmuls
fsubs
cltd
iret
lcall
das
add
mov
andl
inc
xor
jle
enter
sub
test
or
adc
and
out
icebp
lahf
push
push
int
push
push
adc
roll
cmovnp
push
scas
fs
ret
add
sbb
lahf
scas
test
pop
jo
fisubrs
push
lods
out
mov
adc
out
jg
or
rol
sbbb
jp
dec
lcall
mov
in
rcl
jle
mov
and
mov
lcall
dec
xor
or
mov
pop
dec
add
in
push
subl
rclb
pop
xchg
cltd
mov
psubusb
push
mov
inc
inc
aaa
outsl
and
bnd
inc
mov
addr16
pop
lds
call
pop
call
cmc
and
pop
fsubr
shl
pop
aam
int3
hlt
in
rcrl
ss
lcall
cld
push
or
loope
in
out
in
cmp
and
push
rorb
sbb
push
inc
pop
enter
imul
sub
jae
inc
in
adc
mov
lret
out
daa
fisttps
mov
add
leave
rol
movsb
scas
mov
sahf
jmp
std
pop
and
push
stos
das
cmc
sub
cmp
mov
aam
scas
je
lea
mov
and
ret
fdiv
rep
lds
and
bswap
sahf
push
or
sbb
dec
out
mov
ror
cmp
rcrl
rcrl
adc
xchg
sub
test
inc
scas
mov
leave
cltd
data16
lret
cmc
addb
fucomip
ss
add
inc
subb
in
mov
jmp
lea
add
add
add
xchg
and
stos
popf
pop
aad
fwait
mov
xchg
mov
popf
ret
cli
mov
jp
adc
jo
or
popl
sbb
push
add
shlb
and
fsin
lds
cli
sti
xchg
movsb
adc
es
pop
andb
jns
inc
jnp
push
pusha
xchg
outsb
cli
mov
test
dec
jl
orb
ficompl
je
leave
stc
push
cli
mov
subl
std
stc
jl
xor
jb
popf
scas
fisubl
mov
cli
fcoms
aaa
aaa
in
ss
hlt
shl
pop
int
clc
mov
mov
sub
in
dec
call
rclb
mov
sahf
ja
stos
jle
in
std
faddl
add
and
inc
icebp
add
movsb
arpl
out
add
out
and
push
mov
lea
push
adc
mov
adc
mov
sub
bound
add
adc
pop
xchg
xchg
aam
daa
cmp
sub
pop
in
aaa
out
ja
lock
xchg
inc
cmp
enter
in
cmp
das
fnstsw
cmp
xchg
js
sbb
shl
push
and
orl
push
or
movsl
cld
or
mulb
pop
adc
test
add
xchg
push
dec
rcl
hlt
cwtl
and
in
sub
cltd
cwtl
inc
idiv
jmp
cmp
addr16
mov
faddl
push
into
mov
mov
cmpsl
jae
xchg
mov
and
pop
mov
bound
test
lds
icebp
and
pop
jne
repnz
out
icebp
hlt
aaa
mov
ss
or
xor
ss
cmp
or
dec
lods
movsl
dec
mov
pop
mov
cmpsl
xor
push
sub
adc
push
rorb
dec
out
std
xor
in
sub
add
jge
add
xchg
dec
aad
jle
jo
adc
xchg
out
js
cmpsb
mov
jae
sub
fchs
mov
shr
xchg
int
push
sbb
pop
adc
mov
xor
and
dec
or
outsb
pop
xchg
pop
cmc
mov
add
push
inc
pop
mov
mov
jns
pop
scas
js
mov
xor
in
mov
sbb
cli
in
push
inc
hlt
inc
mov
add
xchg
imul
punpckldq
push
bound
cld
insl
lcall
mov
mov
ds
out
push
push
and
lods
sbb
aaa
lock
iret
inc
psllq
stos
aaa
stos
cmc
scas
and
adc
mov
cwtl
jns
add
iret
lret
insb
in
adc
rcrb
iret
push
pop
shr
push
leave
sub
mov
cmpl
xor
dec
jb
mov
lods
mov
loop
or
ljmp
xchg
sub
xor
bt
rclb
mov
inc
addr16
in
rcl
push
mov
cmp
fistps
out
add
pop
loop
aaa
add
cwtl
inc
sub
and
inc
ror
mov
dec
sahf
mov
lods
push
sub
lods
movsb
or
fwait
mov
fiadds
mov
cmc
daa
dec
cmp
repz
sarl
das
daa
push
xchg
add
jmp
pop
loop
imul
xor
std
insl
jnp
mov
pop
cmpsb
pusha
cld
stc
pop
adc
rorl
cld
popf
sbb
les
in
in
mov
adc
in
lds
sub
in
inc
pop
sub
inc
incb
scas
aad
cld
insb
push
cmp
ja
add
add
cwtl
es
mov
stc
push
cmc
shrb
lds
in
in
lods
cs
sub
cmpsb
sbb
pop
mov
xor
jmp
xor
and
in
dec
out
mov
rorb
pop
enter
cmp
into
test
test
pop
pop
stos
push
xchg
push
xchg
and
lds
push
jmp
or
add
sub
adc
xchg
call
iret
jmp
andb
lock
roll
sub
fwait
lcall
hlt
and
cmp
hlt
in
push
adc
stc
sbb
clc
or
sbb
and
mov
loopne
and
or
rolb
fcmovnu
shrl
loop
scas
ret
push
xor
mov
ret
inc
pop
rcll
add
or
imul
ret
mov
movsl
roll
out
jno
inc
movhps
cs
push
or
orb
cmc
pusha
push
std
stos
xlat
sub
add
test
cmc
lods
ss
lods
inc
mov
test
cwtl
std
inc
popf
repz
or
add
mov
cltd
adc
iret
not
xchg
and
jge
jns
mov
push
data16
sar
mov
jbe
mov
push
or
dec
scas
or
sbb
cli
sub
and
jnp
xchg
sbb
cli
pop
in
push
and
daa
adc
pop
push
mov
ss
roll
inc
push
cmp
div
add
adc
mov
aad
aad
or
fiadds
addl
idivb
pop
mov
push
addb
mov
fnstenv
sub
test
imul
jmp
leave
inc
lcall
clc
lock
test
mov
or
mov
jmp
dec
imul
bound
jmp
mov
cltd
mov
and
jle
adc
popf
add
les
pop
push
jmp
adc
push
mov
add
loopne
in
hlt
int
ss
xorl
fsts
jo
cwtl
out
mov
dec
add
pop
das
jb
sahf
in
jle
cmc
into
mov
adc
sbb
xchg
jbe
testl
shrl
insl
mov
decb
rorl
mov
outsb
sub
fdivrs
pop
xchg
xor
movsb
cld
out
adc
adc
pop
repnz
movsb
cmp
cs
mov
inc
add
gs
out
xor
sub
stos
inc
out
jmp
add
in
jne
fs
xchg
and
in
add
rolb
mov
rcll
in
jmp
std
aaa
int3
mov
cmc
and
adc
pop
pop
sbbl
adc
lcall
aad
popa
mov
fimuls
pop
push
jmp
lahf
inc
mov
fadds
ret
or
rclb
dec
push
add
repnz
shr
daa
or
fiaddl
lods
jle
lock
mov
add
in
cld
sti
outsl
pusha
add
je
add
aad
inc
dec
push
sub
in
leave
jg
mov
insl
cld
push
or
adc
lods
std
xchg
loope
cmc
xchg
aad
ss
cmp
in
out
xor
cmc
jb
mov
out
out
fsts
in
repnz
adc
shlb
std
mov
lock
cld
in
sub
sbb
jmp
jbe
add
cld
mov
sub
dec
jmp
ss
push
xor
adc
push
cli
xchg
xor
mov
es
add
mov
push
push
aaa
xchg
and
shll
xor
and
jmp
loope
add
ja
sbb
mov
adc
lahf
mov
add
fsubrs
mov
xor
push
out
je
out
gs
push
in
loop
mov
sub
push
subb
xor
inc
insl
mov
dec
sahf
mov
cmpsb
fldln2
std
out
adc
test
in
insb
out
or
xchg
cmp
jno
inc
sbb
repnz
mov
ss
mov
or
inc
out
adc
push
sbb
mov
cmpsl
sbb
and
lods
cmp
xlat
inc
pop
mov
cwtl
lock
cmp
add
aaa
dec
dec
xchg
mov
mov
int3
push
mov
xchg
push
and
movl
call
outsl
push
cld
cmp
lea
add
fwait
adc
insl
loop
mov
je
sub
popl
add
inc
into
jb
sub
sarb
mov
mov
xchg
cmc
push
pop
rorl
mov
mov
or
xor
bound
cs
daa
outsb
stos
arpl
xchg
popa
mov
sbb
push
stc
out
pop
push
cmp
sbb
in
lds
pop
pop
cli
jg
sbbl
cwtl
shlb
xchg
popf
int3
sub
incl
mov
or
mov
pop
std
jmp
fimuls
xlat
dec
ret
sub
adc
jbe
inc
std
or
adc
xchg
test
cmc
adc
cmc
mov
movsb
mov
out
mov
daa
lea
test
lahf
cli
dec
mov
xadd
out
push
pop
inc
ret
dec
icebp
adc
mov
or
ret
adc
popf
lds
rol
ret
sbb
sbb
in
shll
into
push
ja
outsb
mov
mov
pop
inc
ljmp
dec
out
pop
loope
dec
pop
cmpsl
lods
adc
cmc
stos
xchg
repz
outsb
pop
pop
jl
fcmovbe
pop
outsb
pop
ret
ret
mov
fucomip
and
roll
and
cmp
mov
mov
rclb
jecxz
xchg
loopne
in
mov
lods
xchg
test
shrb
orb
fucomp
push
mov
add
fnsave
jo
ss
sti
jg
pop
into
popf
imul
into
and
das
mov
enter
mov
aaa
orb
arpl
movsb
cs
mov
cmp
xor
xor
mov
adc
fsubl
xchg
andb
or
add
roll
imul
das
sbb
hlt
sub
xchg
aad
jle
jne
jg
in
int3
add
jg
jae
mov
aas
js
movsb
xlat
push
fimuls
jb
cltd
pop
mov
jmp
xchg
mov
mov
sub
pop
cmpsl
sub
mov
mov
adc
or
push
mov
pop
push
mov
data16
lret
push
mov
pop
add
mov
push
leave
ret
lods
scas
or
pop
mov
mov
daa
orb
mov
pop
dec
mov
push
loopne
jnp
push
sbb
mov
cmpl
out
jmp
mov
hlt
ja
incb
jmp
ret
cmpsb
daa
jmp
pop
aaa
sub
imul
leave
mov
scas
fcomps
rolb
into
in
xor
mov
insb
mulb
out
arpl
mov
fiadds
and
inc
mov
iret
in
hlt
cwtl
pop
and
test
movsb
shlb
mov
inc
xor
mov
mov
jb
aam
push
lret
fldcw
or
sar
cmpsb
push
nop
fidivl
cwtl
in
sub
inc
sub
cltd
adc
fs
mov
outsb
es
sbb
mov
pusha
ds
jmp
sub
cld
add
rol
and
push
js
cmc
pop
nop
pop
push
cs
push
shrb
sub
in
adc
rcl
bound
cmpsb
adc
add
pop
loope
xlat
xlat
push
loope
mov
jo
xor
fwait
sub
scas
push
mov
or
lret
js
inc
pop
int
shlb
sub
and
mov
repnz
arpl
sbb
adc
xchg
insl
aad
jecxz
push
dec
mov
cmovns
mov
push
cmc
loope
sub
mov
repnz
add
push
dec
movsl
adcb
cmp
push
movsl
xchg
int3
out
jbe
lods
lds
fimull
cs
mov
pop
xchg
daa
int
adc
xor
pop
push
insl
push
fsubrs
dec
enter
pop
and
inc
adc
xor
mov
andb
ret
sbb
mov
loop
out
inc
fs
mov
pop
fldenv
jae
push
movsl
in
enter
add
xlat
aam
jne
enter
mov
gs
sarb
daa
adc
cs
push
cmp
inc
dec
fimull
dec
addr16
inc
frstor
push
cltd
sbb
or
pop
push
jge
in
stc
adc
sub
out
in
sub
ljmp
add
adc
mov
lcall
inc
bound
test
lahf
sbb
mov
scas
xchg
add
xor
lods
push
or
jl
jbe
sbb
push
cmp
push
jo
mov
rcl
add
shll
cmp
pop
lahf
std
das
lret
push
push
in
pop
pop
xchg
movsb
pop
fiadds
cs
gs
fldenv
aad
push
jno
dec
negb
dec
std
and
jle
adc
and
fwait
les
mov
or
sub
leave
out
push
xor
cmp
fildll
clc
inc
inc
or
in
mov
sub
push
mov
int3
repz
mov
outsb
cltd
xadd
pop
dec
xchg
orb
loope
pop
inc
mov
cmc
lahf
push
unpckhps
inc
lcall
mov
sahf
rclb
push
mov
pushf
cmp
lods
jle
hlt
data16
inc
leave
stos
mov
add
roll
sbb
push
adc
mov
movsl
xchg
mov
add
or
xchg
jl
mov
cmp
addr16
out
ficompl
jle
xchg
mov
fxch
cmpsb
pop
xchg
push
push
xor
clc
push
push
xor
mov
xchg
vmovapd
add
push
out
pushf
mov
movsl
popa
jmp
mov
lcall
adc
mov
sub
ss
fisubrs
dec
movsb
xor
mov
fldl
out
xor
lcall
jecxz
daa
dec
lds
je
roll
inc
xchg
incl
push
push
xchg
and
rcl
rol
ss
stos
adc
or
push
ss
dec
xchg
mov
cmpsw
push
fcompl
aad
mov
leave
push
xchg
mov
jmp
dec
out
cmp
out
into
and
fldt
pushf
mov
je
and
sbb
pop
or
pop
sarl
jns
add
mov
or
sti
repnz
push
sub
pop
ret
pop
movsl
test
cltd
iret
lret
mulb
adc
fcoms
adc
mov
pop
sbb
jae
cmpl
inc
jo
jbe
cwtl
scas
sub
mov
les
sbb
sti
lock
mov
xchg
lahf
push
out
in
rcr
icebp
cli
sub
int
or
mov
mov
xchg
fisttpll
mov
mov
push
or
sarl
adcb
bound
add
fisttpl
das
and
jno
pop
out
arpl
fucompp
lock
hlt
mov
dec
rol
push
push
push
sarl
mov
popf
adcb
lret
jmp
movsl
shld
cs
adc
in
test
out
movsl
lret
push
mov
sahf
and
mov
out
xor
pop
ss
xchg
stos
aad
push
inc
iret
imul
scas
push
inc
ret
fcompl
push
inc
outsl
scas
mov
dec
loope
or
inc
sbb
stos
fcmovbe
dec
sahf
mov
adc
lret
stos
movsl
add
inc
outsb
mov
cli
and
es
sbb
inc
call
sub
jmp
rcrb
imul
lock
pushf
sub
cmp
add
pop
mov
push
jnp
adc
test
scas
loop
ds
xor
pop
std
addr16
pop
mov
lret
lcall
cmp
inc
lret
cmp
push
xorw
leave
push
and
lds
push
insb
mov
push
int3
mov
ret
cmp
clc
jge
repz
ja
addr16
insl
mov
lea
icebp
lods
call
xor
repnz
jns
mov
pop
mov
mov
jae
jo
sub
cmp
shrl
or
and
pop
out
in
mov
dec
std
int
dec
dec
push
inc
sub
mov
push
pop
inc
decb
or
into
mov
lret
or
imul
lock
pop
gs
or
push
adc
jecxz
shll
inc
rcrl
in
shl
stos
mov
fsts
jbe
dec
and
push
mov
sub
xor
mov
or
outsb
xor
jp
mov
lahf
adc
in
pop
cmc
sbb
sbb
mov
dec
pop
push
pop
jl
sub
je
or
inc
lock
rcrb
push
adc
aaa
ret
sbb
and
stc
movsb
out
icebp
repnz
pop
pop
cmp
inc
stos
daa
std
mulb
sti
mov
out
loope
dec
cld
test
mov
inc
mov
mov
xor
inc
insb
pop
jbe
test
push
repnz
loop
push
lock
orb
pop
dec
das
outsl
mov
cmp
test
js
pop
add
addb
push
in
jg
adc
jle
mov
mov
push
push
lods
ret
pop
inc
daa
imul
gs
dec
or
stc
lods
xchg
cli
inc
push
jns
cmp
push
mov
add
jge
mov
jp
scas
mov
int
aas
loop
pushf
or
aad
aas
insl
pop
aaa
in
mov
adc
ret
xchg
fs
xor
mov
jbe
add
xor
iret
fdivrs
push
cmpsb
ds
mov
negb
adc
out
notl
pop
jns,pt
jl
push
cld
push
or
stos
leave
pop
loop
lods
or
movsl
sti
fists
inc
dec
fadd
cmpsb
mov
lods
cltd
gs
mov
daa
jae
and
jg
xchg
sti
testl
xchg
xchg
mov
cld
data16
data16
mov
stos
adc
add
and
jmp
adc
repnz
call
sti
jno
jno
mov
cmp
nop
mov
cmc
inc
idivl
out
lods
xchg
lock
scas
test
test
mov
fldenv
aam
xor
mov
mov
inc
pop
xor
adc
mov
sbb
pop
jp
add
test
sbb
popa
and
mov
or
mov
loopne
cmp
flds
cmp
jnp
rol
inc
add
dec
stos
push
enter
or
jb
inc
icebp
sub
pusha
into
sub
aas
aam
mov
mov
xor
mov
push
pop
inc
mov
push
and
ror
mov
push
cltd
shr
imul
mov
enter
and
aad
cs
pop
andb
out
repnz
fcmovnbe
shr
imulb
int3
or
lret
scas
add
hlt
xchg
push
pop
fsubl
add
lret
cmpsl
loop
inc
nop
push
sub
pop
pop
cmp
les
ljmp
add
add
or
inc
movsl
mov
jg
shl
fildl
mov
out
xchg
sub
pop
dec
mov
xor
outsb
lahf
and
stc
push
xchg
push
fbld
pop
test
push
sub
adc
in
xchg
and
jge
addb
fs
insb
popf
std
jmp
test
xchg
and
lret
add
sub
xchg
arpl
inc
pop
loope
pop
inc
rclb
ret
test
das
shrb
mov
iret
fldcw
xorl
das
mov
mov
icebp
add
ret
in
imul
pushf
mov
cltd
popf
std
add
xor
fidivl
dec
aaa
lea
mov
and
ja
push
fldt
pop
cli
bound
add
push
fcmovne
inc
subl
or
add
mov
inc
aad
jmp
lods
je
xchg
ds
sahf
ret
push
aad
rcr
push
loopne
shrb
xchg
mov
pop
cmp
xchg
fwait
loopne
shr
push
lret
ffree
cmpsl
popf
xchg
aad
aad
sbb
inc
in
inc
cmpsl
iret
dec
xchg
cs
arpl
imull
xor
outsb
lods
arpl
testl
loope
sbb
dec
fst
xchg
jae
jg
pop
ret
push
xchg
mov
mov
or
lcall
or
mov
pop
adc
out
data16
pop
mov
mov
decl
pop
inc
add
dec
adc
cmp
enter
push
mov
jo
mov
cmpsb
mul
pusha
jl
enter
lods
sub
in
mov
sbb
push
les
in
push
movl
repz
lret
addb
sahf
dec
jb,pn
mov
jb
mov
jbe
orl
cmpsl
fldcw
out
call
mov
jo
in
sbb
repz
sub
mov
xchg
lret
pusha
in
lcall
in
xchg
movsb
faddp
mov
ret
adc
inc
jle
and
dec
jmp
arpl
in
push
iret
xchg
and
adc
daa
out
push
int
roll
lret
and
repnz
daa
aaa
adc
or
insb
push
pminsw
andl
and
push
and
dec
mov
add
ss
mov
addr16
orl
jmp
push
daa
mov
lds
cs
adc
sbb
xchg
sub
out
pushf
xchg
cmpsl
imul
ret
js
mov
mov
mov
dec
repz
push
mov
push
scas
mov
out
and
jo
pusha
femms
inc
shll
sub
mov
cli
jmp
call
mov
je
mov
add
and
add
jae
jno
rorb
push
int
jg
hlt
addr16
add
jae
mov
mov
mov
sub
inc
xor
xchg
xchg
in
lret
xchg
dec
shlb
mov
arpl
imul
pop
aaa
inc
add
pop
sub
push
movb
xchg
xor
mov
mov
stos
shrb
xchg
cmpsb
pop
inc
fs
movsb
mov
sbb
sbb
loop
sub
loop
iret
mov
in
sbb
rcrb
insb
push
and
mov
mov
cltd
ret
in
repnz
cmc
sbb
imul
sbb
and
mov
ja
jbe
push
sbb
push
xchg
int3
cmp
sbb
lods
cltd
and
cmpsl
sahf
call
lock
dec
aas
sbb
cld
cli
sub
in
out
ret
arpl
sub
and
mov
into
mov
xor
outsl
mov
sub
jbe
inc
xor
lods
test
shl
mov
in
inc
sub
push
fiadds
repz
cmp
add
int
xlat
mov
sahf
or
or
subl
inc
jo
aam
clc
and
and
or
fcmovbe
subl
lret
xlat
loop
stc
pop
add
add
in
mov
push
pop
les
pop
into
pop
push
cltd
fsubrs
outsl
cmp
lock
cmpb
cmp
xor
ss
insb
jb
cmp
aam
push
in
adc
push
jne
xchg
roll
lock
mov
andb
sbb
push
scas
mov
push
into
xchg
test
mov
mov
push
loop
mov
or
push
out
leave
xchg
push
dec
iret
add
sub
jle
fdivs
enter
inc
into
idivb
push
inc
dec
push
scas
mov
aaa
mov
out
ret
pusha
cmp
addr16
in
xchg
outsb
cwtl
add
sbb
mov
pop
and
lods
enter
sub
lret
aas
into
and
cmpb
sub
pop
mov
imul
sarb
push
test
insl
pop
rclb
adc
sti
rcrb
add
add
jmp
inc
fisubrl
out
xorb
int
mov
cmc
roll
cmp
xor
fldl2e
outsl
gs
mov
sbb
or
add
outsb
xor
in
ljmp
dec
adc
jb
sbb
mov
or
ret
sbb
dec
test
push
inc
lock
or
jg
mov
jb
push
dec
mov
bnd
jb
popf
test
cmpsb
dec
push
call
cld
jb
out
pop
sbb
jl
and
xchg
subl
imul
sbb
pushf
push
call
pop
jne
sbb
mov
xchg
or
call
movsb
sbb
dec
int
inc
clc
divl
sbb
add
loop
repz
push
call
xor
lret
sbb
bound
test
add
test
inc
mov
and
cmp
and
std
gs
test
testb
int3
sbb
dec
cmc
ss
pop
mov
es
and
rep
test
call
xor
sbb
mov
cmovp
scas
adc
out
mov
jo
jb
popf
adc
inc
test
push
out
add
add
mov
sub
sbb
inc
jo
mov
adc
mov
movsl
mov
std
int
out
inc
cmc
repnz
adc
sbb
sbb
sahf
jge
sbb
inc
and
ficoms
cmp
push
lock
out
fsubrs
out
addr16
test
ret
imulb
dec
in
testl
test
xor
jge
sbb
inc
je
mov
pop
lods
ret
push
mov
daa
sbb
subb
mov
ljmp
mov
inc
mov
mov
in
or
orb
testl
dec
sub
test
imul
in
mov
push
gs
call
enter
arpl
or
jge
sbb
dec
rcll
inc
lock
inc
inc
add
pop
insl
sub
shrl
sub
ret
sbb
mov
or
jecxz
in
ret
sbb
mov
jne
jb
nop
sbb
dec
mov
inc
fdiv
push
adc
lods
push
imul
xor
vprotw
mov
inc
mov
or
call
in
stos
push
mov
dec
imul
jl
jp
gs
inc
test
add
stc
repnz
insl
cmpsl
pushf
mov
sbb
ss
repz
push
call
inc
jb
sbb
mov
cmovle
mov
lods
roll
jb
sbb
lcall
test
cmpsb
jge
sbb
dec
roll
add
mov
push
inc
sub
mov
call
cmp
sbb
mov
add
test
pop
mov
sub
adc
loop
repnz
push
call
in
jb
sbb
lds
inc
mov
lods
out
imul
mov
repnz
inc
mov
mov
pop
insb
mov
pushf
dec
pushf
ds
pop
repz
call
adc
sbb
mov
or
jmp
imul
jge
sbb
in
adc
repnz
mov
pop
repz
jl
mov
mov
out
sbb
jnp
repz
outsl
in
push
imul
dec
adc
loop
repnz
sub
call
fdivl
sbb
mov
xchg
imul
or
callw
ret
sbb
dec
mov
inc
fdiv
push
adc
lods
push
imul
cmp
jmp
insb
rolb
daa
mov
or
jmp
imul
jge
push
dec
push
sub
inc
jge
jp
cltd
repnz
xor
call
call
sarl
push
mov
rclb
pop
mov
or
jmp
imul
jge
sbb
in
sbb
and
sub
mov
gs
ret
call
fdivl
sbb
sarb
shll
sbb
xchg
cltd
or
call
cmc
sub
fisttpl
adc
stc
or
adc
fimull
in
lcall
inc
fwait
rcr
out
icebp
insl
lea
out
xor
lret
fists
fstp
aas
fs
out
mov
mov
jbe
repnz
xchg
and
cmp
or
repnz
pushl
xchg
mov
testb
jmp
stos
repnz
cmp
lret
in
add
std
jge
std
lahf
xor
loopne
mov
cmp
sbb
add
out
pop
or
hlt
add
add
subb
mov
enter
dec
lea
lret
int
inc
fstpt
sarl
out
xor
stos
bound
icebp
sbb
xchg
xchg
or
ret
push
lds
shll
push
sbb
leave
imul
or
push
lcall
sbb
outsb
les
or
stc
push
jg
lds
lret
cld
and
jb
outsb
aaa
mov
enter
decl
mov
mov
out
leave
dec
xor
cmc
ljmp
add
das
mov
and
stos
clc
test
push
jns
cmpsl
ret
mov
push
jno
cmpsb
jno
inc
jnp
gs
pushf
cltd
cmp
lret
mov
dec
fisubl
add
fsubs
js
dec
repz
sbb
mov
cmp
rcll
test
dec
xor
rclb
hlt
jb
sarb
stos
cld
mov
jl
test
xchg
lret
push
into
push
inc
insb
mov
cmc
jp
cltd
fsubs
pop
xor
test
sahf
dec
dec
push
addr16
int
rolb
dec
mov
or
scas
repnz
arpl
xchg
mov
xor
fdivl
lods
jl
insl
mov
add
comisd
in
adcb
jb
ror
imul
adc
inc
test
and
xchg
mov
loop
mov
or
xor
sbb
js
pop
mov
fs
lcall
shl
inc
sub
cmpsb
ds
aad
mov
dec
leave
dec
jmp
xchg
cmp
xchg
or
nop
mov
sti
addl
js
jb
mov
stos
fnstenv
fisubrs
sbb
dec
add
int3
inc
push
jb
fcom
mov
inc
cmc
cld
ljmp
icebp
mov
arpl
xchg
push
bound
inc
fs
add
mov
sar
fwait
add
rolb
inc
jmp
mov
shl
or
std
test
push
fcmovb
addl
xchg
cmc
imul
cmpsl
mov
xchg
rol
push
mov
insl
popf
je
cmp
jle
push
push
cmpsb
call
cmp
push
shlb
mov
repz
stos
cmp
inc
lods
scas
xchg
test
loope
xor
mov
ja
mov
cmp
push
or
mov
je
inc
adc
out
cmc
add
dec
mov
inc
shrb
and
adc
mov
push
scas
push
adc
divl
testb
xchg
cwtl
dec
stc
push
mov
dec
mov
test
leave
mov
adc
ret
and
cmpsl
cmp
jns
pop
dec
fsubs
cmc
fstpl
aas
cmpsl
mov
sbb
xchg
andl
mov
inc
fabs
pushf
or
mov
fwait
test
push
mov
xchg
jne
jnp
mov
lret
ret
movsb
sbb
mov
mov
xor
xchg
add
push
repz
leave
insl
pop
cwtl
xlat
hlt
sub
mov
fsubs
push
stc
movsb
lret
data16
std
push
sbb
jmp
jmp
lods
mov
rol
out
mov
in
cmp
repz
or
stos
sbb
mov
stos
cli
int3
mov
dec
ret
cld
ss
ret
mov
pop
lret
test
movsl
je
cli
mov
or
mov
inc
mov
push
dec
push
repz
pusha
mov
pop
cwtl
outsl
and
or
movsb
mov
inc
shl
movsb
aam
jl
dec
mov
popa
loope
sub
repnz
int3
and
jb
inc
add
fistpll
jecxz
stc
mov
cmc
inc
pop
and
mov
js
cld
xor
sub
dec
pusha
imul
aam
loop
testl
outsb
push
pop
jo
test
push
dec
mov
inc
call
bound
mov
sub
inc
loop
dec
sub
jmp
bound
xchg
pop
jecxz
adc
loope
cld
vhsubps
push
test
add
fcomi
cmp
aas
lcall
rcrl
rorl
data16
xchg
cld
or
add
jmp
hlt
xchg
inc
pop
subl
fwait
pop
jae
repnz
jmp
int3
mov
nop
shrb
rcl
and
xchg
and
repz
push
sub
shlb
or
pop
hlt
std
pop
mov
ret
aaa
inc
cmc
dec
cmpl
aad
or
bound
aad
in
dec
inc
into
shlb
xchg
lods
in
cmc
xor
inc
lods
jne
dec
fisttps
call
mov
inc
inc
scas
scas
popf
out
insl
icebp
push
mov
mov
or
mov
cmp
dec
test
cmpsb
mov
jl
mov
test
add
inc
mov
dec
into
add
test
sub
mov
jge
or
ss
test
push
sarl
repnz
xor
mov
sub
mov
xor
xchg
int3
shll
cmpsb
roll
stos
call
cltd
push
mov
mov
in
enter
testb
inc
repz
push
cmpl
std
in
cmc
cld
mov
das
inc
add
mov
ljmp
iret
scas
cltd
test
movsl
test
mov
mov
jbe
arpl
xlat
movsb
ret
repz
cmp
mov
adc
hlt
ficoml
aas
inc
mov
jo
movsl
addl
add
in
ret
lret
xchg
loope
shll
push
add
sub
mov
rcrb
dec
mov
mov
mov
mov
xor
ds
movsb
rcrl
push
lret
insb
ficomps
rorb
or
cli
arpl
mov
mov
sbb
and
cmp
cmpl
icebp
hlt
inc
insb
in
pushl
jno
xlat
cli
cmp
dec
aaa
sbb
push
pusha
xchg
sti
push
push
sub
cmp
sti
imul
test
fbstp
inc
mov
mov
jbe
inc
repz
mov
jns
cmp
insl
inc
outsb
mov
stos
mov
pop
pop
xor
movsb
lcall
stos
rdpmc
in
pop
ret
nop
add
xchg
out
arpl
data16
into
mov
dec
test
mov
jnp
xor
dec
push
cmp
mov
inc
push
clc
xor
or
cmpsl
and
mov
int
fcoms
bound
pop
test
jle
sbb
dec
pusha
icebp
imul
sbb
sbb
scas
test
popa
sub
sar
mov
sbb
test
xchg
mov
mov
addr16
imul
inc
mov
push
mov
shll
jle
xor
in
pop
jo
mov
mov
and
scas
popa
sub
mov
pop
data16
rcrb
lock
int3
test
jno
push
mov
repnz
dec
sarl
or
fisttpl
aas
addr16
scas
lds
out
jnp
cmp
xchg
cs
jns
mov
dec
repnz
cmpsb
lret
out
sub
stos
insb
mov
add
loop
cmc
xchg
pusha
lock
xor
push
inc
loope
stc
repnz
lret
out
rcl
lret
dec
imul
out
push
mov
push
daa
push
dec
sbb
lods
mov
mov
data16
aaa
sbb
fmuls
sub
idivl
mov
cmpsb
insb
shrb
push
inc
in
dec
sbb
scas
xchg
inc
aad
arpl
aam
jecxz
cmc
add
mov
sub
cli
movsl
popf
or
add
stos
fcom
loopne
adc
std
loop
scas
jl
lret
movsl
je
mov
xchg
mov
out
pop
nop
sub
adc
loope
je
xchg
inc
jae
pop
lds
mov
xor
mov
test
mov
icebp
push
adc
or
cli
ret
pop
imul
les
mov
inc
mov
lods
fwait
cld
js
shr
mov
lret
lds
xchg
ss
jp
idivl
fdivrp
add
xor
negb
sbb
cmpsl
lret
fs
es
fildl
mov
dec
dec
mov
outsb
cld
fidivl
cmp
sub
test
push
pop
arpl
out
pop
and
stos
push
mov
out
test
jb
push
and
adc
sub
movsl
addl
repz
sbb
inc
push
mov
jne
dec
inc
dec
sub
add
int
cmp
pusha
xchg
adc
icebp
push
mov
std
xchg
loop
mov
push
ds
mov
add
repz
push
adc
xchg
lock
add
aaa
xchg
inc
adc
les
fs
test
mov
mov
xor
js
mov
ror
ret
cld
mov
push
jp
or
jle
std
lock
fists
lret
inc
test
leave
xchg
lock
ds
pop
push
add
jg
add
in
push
cmpsl
cmp
cmp
es
iret
hlt
add
fimull
adc
fdivrl
mov
inc
das
cmp
in
lods
sahf
push
jecxz
cltd
aam
hlt
shll
push
sbb
adc
push
inc
dec
das
inc
sbbb
push
jmp
sub
jae
cld
xor
adc
ret
push
fadds
fdivrs
hlt
jp
aas
xchg
orl
and
sub
in
mov
push
or
pop
mov
dec
dec
mov
xchg
stos
call
sub
sub
insb
cmpb
or
cmp
inc
fstp
dec
sbb
out
in
push
push
pop
les
xor
divl
xor
int3
xchg
js
ja
mov
fcompl
dec
shlb
jb
sub
pop
jb
es
xor
pusha
cmp
addr16
subl
lods
sub
xlat
scas
cmc
out
test
mov
inc
dec
xor
cld
loopne
sub
out
fldt
push
dec
lods
or
mov
cmc
cld
ljmp
in
mov
int3
aam
mov
cld
es
add
lock
test
sub
icebp
js
mov
in
jb
or
mov
cltd
pusha
cmp
pushf
out
mov
fnstsw
js,pt
stos
fucomp
hlt
push
enter
inc
stos
and
adc
hlt
test
xor
outsb
xor
hlt
xchg
mov
or
inc
mov
shl
repnz
xor
cmp
mov
add
cli
and
lea
leave
lahf
adc
shll
mov
dec
lds
mov
bound
adc
jp
cmp
lcall
cli
out
lret
int
adc
inc
sahf
cld
stos
jns
cld
jo
repnz
cld
mov
adc
xchg
stos
xor
push
cmp
repnz
sub
mov
mov
sti
movsb
inc
movsl
mov
mov
lcall
jns
aad
setg
xchg
dec
sbb
add
out
jl
mov
call
aad
cmpsb
mov
mov
cmc
or
incb
or
jns
je
lret
mov
mov
sub
cmpl
lds
das
mov
xchg
mov
sbb
lret
cmpsl
ja
sub
cmp
mov
das
stc
arpl
jle
in
je
into
xchg
jns
incl
dec
adcl
push
insl
mov
cmp
inc
mov
push
stc
stos
ret
xlat
ret
pop
xor
pop
fmull
pop
xchg
ret
inc
arpl
inc
add
mov
xor
das
xor
and
and
nop
aad
cmp
push
and
aad
out
sbb
xchg
leave
clc
ljmp
sbb
in
sarl
adc
adc
out
cltd
and
push
cmc
adc
aad
sarb
enter
das
add
pusha
adc
or
aad
mov
imul
xchg
insb
scas
xchg
addr16
pop
dec
xor
icebp
mov
cli
in
and
movsb
insb
mov
loop
jp
aam
push
adc
mov
push
stos
repnz
jmp
lods
mov
and
pop
fnstenv
out
incb
pop
loope
cmpsl
mov
cmp
sahf
jo
addr16
mov
sbb
aam
outsb
insb
or
test
outsl
xor
stc
test
xor
aas
mov
cmp
push
outsl
mov
inc
xor
sbb
cmp
ds
cld
jl
sub
lahf
mov
pushf
ja
pop
dec
jp
add
inc
jecxz
dec
call
test
sub
mov
sub
inc
adc
mov
adc
data16
in
and
pop
sub
mov
jl
and
cwtl
pop
pop
jbe
ss
dec
ss
sbb
mov
movsb
sbb
dec
add
cld
mov
push
hlt
sub
sbb
shll
outsb
into
pop
inc
mov
bound
cltd
jns
sar
dec
sti
sti
das
inc
mov
in
xchg
inc
cld
xor
adc
ljmp
xor
mov
add
add
gs
loope
cmp
jle
adc
cmp
dec
push
xor
dec
dec
pop
into
pop
repnz
dec
andl
push
pop
enter
xchg
mov
sbb
jge
loopne
xchg
push
cmc
or
dec
xchg
cmp
lds
mov
dec
subl
xchg
cmpsl
xor
outsb
stc
add
mov
cmp
sahf
xchg
xchg
enter
push
pop
fs
adc
xchg
fcomps
adc
gs
repnz
xor
cld
push
shr
icebp
out
mov
sub
popa
mov
ljmp
data16
push
cmpsl
jo
mov
xor
movsl
add
push
cmp
ss
loop
test
pushf
cmp
pop
mov
add
rcll
in
repnz
imul
sub
adc
inc
pop
mov
in
push
repz
fs
or
insb
rorb
je
sarb
mov
mov
or
call
out
sbb
dec
into
rolb
neg
adc
lods
ret
lret
mov
adc
inc
rorl
sbb
push
call
pushf
cwtl
mov
xchg
sbb
pop
outsb
hlt
mul
repz
mov
mov
mov
push
mov
mov
rep
in
pop
shll
pop
add
add
or
adc
mov
sbbb
das
inc
in
lahf
mov
loopne
outsl
lods
sbb
mov
gs
test
stos
das
sub
dec
test
inc
mov
bound
push
into
movsb
mov
insl
lcall
add
mov
xor
push
xchg
gs
int3
mov
push
sar
pop
fistpll
cmp
adc
inc
decb
rorl
or
add
aaa
ljmp
add
daa
in
add
xor
psrad
repnz
call
sub
sarb
inc
ror
xchg
hlt
mov
in
fisubs
cltd
je
hlt
subl
sbb
mov
lcall
jne
add
mov
jb
lods
popl
negl
pushw
mov
iret
loope
js
pop
ds
jmp
xor
xacquire
xchg
push
imul
push
cmp
add
ljmp
lcall
jbe
inc
int
out
std
es
push
cmc
jp
xor
pop
ss
andl
sub
mov
incb
mov
aam
and
lods
shll
jb
out
jp
dec
sub
mov
xchg
in
aas
leave
cmp
cmovae
push
xor
inc
in
aas
xchg
movsb
jno
adc
jg
sbb
adc
fsts
sti
fsubrl
sar
pop
push
in
push
jmp
hlt
adc
shll
movsl
push
cmp
xor
push
adc
mov
adc
in
xchg
repnz
dec
cmp
inc
jno
ljmp
lret
sbb
pop
dec
pop
jne
or
enter
mov
dec
jbe
add
fwait
mov
pop
repz
adc
jl
in
cmc
std
xor
push
sub
lahf
pop
rcrb
in
adc
xor
int3
xor
push
lock
sub
or
cmpb
cwtl
cwtl
notb
bound
xchg
sahf
fnstcw
and
negl
jo
orb
add
in
movsl
cli
jne
in
pop
aam
scas
lods
cltd
cmp
xchg
jbe
and
in
test
mov
enter
mov
xchg
dec
data16
xor
push
inc
inc
dec
lahf
inc
pop
orb
jbe
dec
sahf
dec
aaa
jge
nop
pushf
add
pop
arpl
and
mov
lds
aas
xchg
jae
gs
xor
push
ljmp
cltd
push
pushf
inc
aas
push
iret
mov
jp
orb
insb
lds
inc
xchg
cmp
xlat
pop
jno
dec
out
pop
popf
int
in
jbe
test
aas
inc
add
notl
lea
or
xor
mov
sbb
pop
mov
repnz
aad
cli
pop
scas
call
dec
pushf
xor
repz
dec
jo
cmpsb
adc
aam
loopew
pop
mov
cli
mov
negl
push
push
daa
mov
jmp
test
imul
scas
sub
mov
loop
jg
divb
mov
jbe
or
pop
mov
inc
or
movsl
xor
cltd
sbb
dec
mov
mov
push
loop
jne
sbb
mov
aad
push
and
dec
adc
imulb
xor
fst
push
sub
mov
jge
js
xchg
filds
rorb
adc
in
loop
sub
addr16
addr16
and
daa
or
pop
jle
in
add
je
out
xor
mov
test
fistpll
adc
call
or
ficoml
xor
mov
pop
and
or
or
cltd
mov
push
nop
in
push
loope
bound
sbb
mov
inc
jg
ret
push
movsb
and
insb
scas
insl
aas
mov
jb
cmp
sbb
aad
push
jg
loopw
bound
repnz
in
sub
loope
xchg
mov
stos
or
ficomps
mov
fstl
rorb
push
adc
scas
jns
mov
xor
jle
push
in
xchg
mov
movsl
dec
aad
xchg
rcr
xor
andb
pusha
adc
cmpsb
push
loop
dec
xchg
movsb
aas
and
pop
cmpsb
dec
inc
loop
pop
xchg
add
push
sbb
dec
test
aas
mov
or
push
cmpsb
cli
adc
add
or
repnz
dec
int3
