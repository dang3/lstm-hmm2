gs
pop
out
popf
xchg
mov
cmp
roll
mov
mov
loopne
in
out
adc
lods
jge
mov
popf
dec
mov
es
enter
sub
jnp
lods
test
xor
add
daa
stos
sbb
inc
lret
stos
or
lea
outsl
movsb
inc
or
mov
sar
add
ret
je
jae
cwtl
pusha
mov
xlat
cmpsl
aaa
insb
jne
jo
and
push
daa
hlt
xchg
cmp
sub
cmp
shrl
and
add
push
dec
xor
jns
test
mov
loopne
push
loopne
mov
sub
aad
test
cmp
stos
xor
std
adc
sub
imulb
mov
xchg
inc
mov
sub
jno
sub
xchg
out
in
cmpsb
xchg
push
jle
popa
data16
dec
jle
pop
mov
jl
jno
pop
aam
aam
mov
les
lds
aaa
lods
es
adc
sbb
icebp
or
test
mov
push
out
mov
cltd
jno
fbld
bound
ret
push
and
xor
loope
jno
test
pop
gs
xchg
popa
adc
pop
adcb
cwtl
lock
or
cmp
mov
xchg
mov
add
and
push
jae
lock
cld
mov
pop
js
push
jno
sub
or
xchg
adc
lahf
mov
fistl
dec
outsb
sbb
pusha
ret
scas
loop
stos
clc
cmc
iret
int
or
pop
lods
sub
mov
fcompl
jmp
enter
pop
roll
sbb
data16
shrl
hlt
popa
jne
js
int
test
inc
adc
addb
push
test
push
mov
sbb
jnp
mov
or
or
xor
pop
into
add
add
cmp
call
jo
std
inc
cmpsl
lods
cmp
xchg
sub
shrb
push
jbe
jle
jnp
ss
cmp
fucom
loop
outsl
xor
arpl
sub
shlb
movsl
popf
xor
mov
std
add
test
mov
xor
sub
and
nop
fsubrl
inc
jne
aas
daa
dec
pop
daa
movsl
lods
fsubs
adc
sti
adc
dec
jbe
dec
out
push
mov
in
fdivs
mov
inc
push
xchg
out
aad
cmp
adc
subb
push
cmc
push
xchg
mov
jl
pop
mov
movsl
andb
cld
mov
loopne
dec
sbb
iret
in
mov
xchg
mov
fwait
scas
jl
scas
cli
xchg
adc
insl
jecxz
out
mov
add
jns
xor
xchg
jp
test
outsb
or
call
xchg
lcall
scas
jo
and
lret
gs
movsl
inc
mov
sbb
cmpsl
mov
in
mov
push
push
jp
in
cmc
push
ds
dec
sub
sbb
or
ja
int3
daa
mov
daa
data16
fs
aas
aam
and
dec
mov
push
sti
testl
xor
mov
sahf
loopw
and
push
and
in
and
mov
js
inc
mov
xchg
adc
mov
and
dec
push
jbe
enter
jl
arpl
stos
ljmp
sub
or
mov
popa
mov
xchg
sub
sbb
movsl
cmp
or
stos
mov
stos
cmp
push
and
push
add
mov
jae
xchg
mov
cmp
lods
nop
or
xchg
mov
movsb
orb
cmpb
jle
int3
jo
jo
sub
dec
lds
add
adc
push
pop
call
mov
frstor
push
in
adc
jo
subl
iret
jmp
xor
add
mov
fidivl
fstpt
xor
mov
lods
fcoms
aaa
cld
arpl
xor
int
jns
lods
mov
fisubs
pop
enter
xchg
ss
lods
add
cld
mov
push
inc
xor
mov
roll
fdivs
test
inc
pop
fmuls
outsb
roll
cmc
insl
lds
out
dec
daa
aaa
add
inc
js
sub
cltd
cmpsl
gs
cmp
sti
orl
push
das
push
or
mov
outsl
dec
insl
test
test
xor
sub
and
sub
nop
arpl
mov
xlat
aam
jl
xchg
push
rep
mov
and
out
push
cmp
pop
adc
push
hlt
rorl
sahf
mov
inc
fwait
dec
lock
cltd
adc
add
pop
cld
pusha
push
jnp
je
jle
or
pop
jbe
cmp
jg
or
cmc
jae
push
push
dec
pop
pop
push
jns
or
pop
rol
stc
cmp
add
mov
cmp
jb
cmc
jnp
ja
cmp
test
sub
lea
jg
push
and
pop
push
and
pop
sar
push
pop
cmc
add
jg
cmc
jae
shr
stc
ror
stc
call
test
jmp
inc
bound
cwtl
or
je
xchg
xchg
rcrl
xor
mov
and
mov
mov
and
les
nop
push
add
push
pop
pop
push
pop
lea
push
add
push
pop
pop
cmc
ja
cmc
add
mov
push
js
add
pop
push
call
sarl
fs
push
jnp
neg
add
lock
lret
addr16
push
int
pushf
scas
lea
ret
xchg
and
push
xor
mov
pusha
mov
pop
testl
je
push
call
mov
sbb
jg
negb
xor
or
ret
dec
push
mov
sub
daa
negb
xor
push
push
jns
mov
js
and
movsb
sti
rorl
daa
imul
push
add
pop
push
push
pop
pop
push
jb
push
push
pop
pop
pop
push
jle
je
and
pop
and
stc
push
mov
xor
pop
push
call
inc
es
mov
sahf
ret
movsb
js
jae
push
xchg
push
dec
mov
and
add
cli
mov
sub
sub
mov
sbb
push
inc
pushf
inc
mov
jecxz
sub
xchg
loope
addr16
shlb
mov
in
stos
or
popa
les
imul
and
lahf
inc
or
push
add
xor
cltd
lods
mov
enter
push
clc
dec
mov
adc
xlat
js
pop
jbe
pop
push
xchg
pop
push
pop
xchg
pop
push
call
push
xchg
mov
test
adc
cmp
gs
scas
pop
push
cli
add
xor
and
aam
daa
inc
adc
lcall
dec
loopne
lock
sbb
dec
lods
lret
push
std
out
xchg
add
fstl
jle
rcrl
pop
mov
lock
int3
in
or
sbb
cmp
push
cmpsb
jecxz
arpl
out
les
push
push
pop
add
pop
nop
dec
jne
push
call
sbb
cld
xor
clc
mov
sub
inc
repz
push
push
mov
cld
lock
into
and
xor
push
stos
cmp
jle
popf
and
fs
pop
jmp
cmpsl
aad
shrw
cmc
sbb
cwtl
jp
lcall
or
cmp
push
mov
mov
in
insl
fbld
jbe
dec
lea
fld
or
cwtl
xor
push
imul
mov
mov
ret
insl
stc
sysexit
ret
push
and
jge
mov
inc
and
cmpl
lret
cmpl
or
dec
add
or
in
xor
cld
cmc
or
iret
outsl
mov
jae
add
das
outsl
mov
push
jmp
xchg
mov
mov
lods
push
les
popa
pop
mov
jnp
scas
arpl
mov
xor
sub
and
sbb
mov
inc
adc
mov
push
mov
ds
jo
cwtl
dec
jmp
loop
jecxz
js
aad
fsub
fidivs
push
adc
mov
mov
mov
bound
clc
je
les
ljmp
bound
adc
movsl
jae
sbb
sbb
mov
hlt
call
mov
and
cmp
add
test
test
stc
and
jg
jg
or
or
jns
push
push
rol
pop
pop
jns
push
or
pop
and
push
cmp
pop
jg
push
push
xor
pop
pop
cmp
dec
inc
cld
xchg
loop
pop
push
call
pop
cli
ds
or
or
dec
lods
in
xchg
jns
scas
fnclex
jns
add
outsl
sub
xor
ficoms
fwait
push
jne
mov
aaa
dec
inc
js
mov
sahf
inc
and
cmp
xchg
inc
or
aas
or
subl
lahf
dec
jae
fdivr
sbb
mov
dec
cmpsl
rolb
lahf
out
jg
mov
xlat
cltd
inc
test
mov
sbbl
fsubs
outsb
xchg
xor
out
int
inc
pop
push
dec
and
and
pop
adc
test
sub
ret
pop
xchg
dec
pop
adc
ljmp
xchg
jns
add
lcall
adc
icebp
inc
jp
pop
pop
pop
sub
cmpsl
enter
adc
inc
rcll
and
pop
mov
pop
cmp
dec
pop
rcrb
or
mov
add
pop
pop
and
clc
or
add
and
hlt
xor
jnp
es
sbb
mov
dec
xor
iret
das
mov
add
cmc
roll
es
clc
mov
push
fidivs
dec
xor
addr16
inc
xchg
fisubl
xor
pop
shr
rcrl
push
scas
fndisi(8087
jne
ljmpw
mulb
mov
idiv
pcmpgtd
adc
repnz
sbb
repnz
loope
add
push
jp
clc
ret
and
jbe
cmc
sbb
dec
stc
test
pushf
pop
sbb
cmp
sarb
adc
mov
in
push
mov
fsubl
int3
jl
imul
mov
mov
cmp
popf
lahf
pop
mov
xchg
xlat
cs
cmpl
mov
mov
rcll
mov
lds
and
jo
bound
mov
inc
lcall
add
fs
test
mov
imul
dec
fs
lds
push
es
pushf
dec
inc
dec
lahf
xchg
gs
mov
scas
repz
out
lcall
cli
add
test
lret
testb
sub
and
mov
cmp
jne
push
jp
mov
xor
or
rclb
sbb
insb
sub
inc
jns
jle
les
pusha
xchg
dec
test
insl
loopne
out
pusha
cmp
cmovb
shrb
ret
adc
fwait
sub
mov
cmc
push
and
inc
mov
mov
rcll
jp
icebp
xchg
rolb
mov
xchg
clc
leave
lahf
repnz
xchg
mov
push
lds
xor
or
fwait
mov
je
aad
js
cmc
sub
mov
testb
sbb
lea
jne
or
xchg
sub
ss
or
outsl
mov
aaa
loop
es
push
lahf
jae
rcrb
flds
dec
clc
les
pusha
stc
mov
jb
and
mov
fwait
adc
pushf
or
mov
ja
std
fcomi
pop
into
mov
fldenv
icebp
insl
cmp
sbb
cs
data16
scas
pop
xor
mov
loopne
fisttps
sub
jg
out
popa
popa
imul
push
mov
adc
imul
mov
adc
xor
xlat
sub
sub
or
push
test
test
je
in
roll
insb
push
xchg
and
pop
pop
imul
mov
cld
frstor
pusha
stos
mov
and
push
adc
shrl
add
ljmp
cmp
sub
adc
jmp
imul
dec
insb
inc
out
orl
cmpsl
loop
lods
daa
out
ja
mov
stos
stos
hlt
out
inc
inc
or
adc
pop
adc
dec
iret
jle
inc
out
fiadds
cmp
jno
or
push
inc
sub
pop
shll
adc
push
lret
scas
push
xlat
xchg
push
incl
fdivrs
jg
out
sbb
out
push
clc
and
mov
std
cmpsb
outsb
fdivr
cmp
stos
or
mov
js
pop
sar
ljmp
jmp
shl
mov
jb
fbld
fiaddl
mov
jp
cli
cs
mov
jb
cli
mov
arpl
lret
add
adc
push
lods
popf
shll
inc
xor
mov
in
mov
adc
cwtl
or
in
xlat
pop
sub
mov
mov
imul
or
clc
and
push
jmp
cmp
jnp
inc
aaa
mov
imul
cmpsb
sbb
sub
cld
fimuls
mov
test
pop
jbe
jns
arpl
into
aaa
fld1
sub
negl
xor
rorb
xchg
out
jp
mov
outsl
stc
loop
jp
lret
mov
xchg
or
mov
jae
or
cmpsl
jae
xor
xor
jle
jg
mov
add
in
jl
movsb
mov
lret
xor
and
push
pushf
popa
clc
lret
das
insl
push
lods
and
xor
nop
xchg
aam
ret
xchg
xchg
cmp
fs
popa
xor
popa
das
sarb
xor
and
lret
pop
xorl
andb
pop
jbe
icebp
scas
fsub
push
mov
push
imul
outsl
cmp
sub
push
mov
adc
ret
mov
aaa
xchg
jb
xorb
pushl
mov
int3
xor
jb
inc
or
call
test
inc
roll
in
xor
inc
or
insb
xlat
cmp
jp
push
popa
orb
inc
mov
mov
in
or
dec
and
filds
aad
mov
inc
subl
jbe
pop
out
ljmp
add
mov
jecxz
add
loop
outsl
add
push
adc
pusha
cmp
lahf
sub
arpl
pop
xorb
sub
roll
ss
mov
cmpsl
mov
xor
push
mov
lcall
dec
cmpsl
gs
sbb
jnp
push
push
mov
mov
call
in
push
fldt
or
push
cmp
test
pop
addr16
or
xchg
aam
stc
lahf
and
stos
orb
fmull
outsl
pop
push
in
lret
jmp
in
pop
aad
iret
cmpps
push
mov
jno
fiaddl
xor
fldcw
sbbb
movsb
or
scas
lret
mov
pop
loopne
ficompl
loop
xchg
xor
inc
rorl
lds
add
adc
pop
sbb
das
incb
popa
test
and
inc
ljmp
jno
cltd
scas
mov
jb
ret
cmpsl
sbb
scas
xorb
sub
jnp
in
jecxz
mov
inc
pop
aas
mov
xor
rclb
cmp
jg
and
mov
repz
js
das
cmp
scas
fiaddl
out
loope
test
xchg
ret
out
std
inc
mov
add
ja
imul
cmpsl
icebp
jmp
cld
push
addr16
ret
fldl
hlt
mov
pop
js
lcall
cld
jp
and
mov
clc
lcall
add
je
mov
or
loopne
push
cmc
hlt
sarl
pop
pusha
cmp
pop
loop
jo
movsb
orl
lahf
mov
cmp
enter
cwtl
sbb
dec
dec
scas
nop
sub
arpl
xchg
cmc
dec
push
cmpsl
jp
test
inc
lock
aam
movsl
leave
repnz
mov
cs
xor
pusha
pop
mov
xor
dec
sub
or
ljmp
jb
push
mov
stc
call
push
shll
mov
mov
call
das
push
ja
shrw
jg
js
mov
xor
mov
and
mov
mov
and
xor
mov
ret
stos
decb
cmp
bound
jbe
insl
jne
cmpsl
shll
cmp
sub
lods
test
add
test
jle
jo
fcmovb
mov
or
mov
lock
mov
mov
jne
ds
inc
aad
push
jmp
xchg
roll
cs
adc
in
and
mov
push
cli
inc
and
mov
jno
outsb
shll
push
lds
pop
cld
xorb
push
mov
pop
sarl
xor
loop
aad
ljmp
daa
outsl
mov
sub
je
mov
xchg
lcall
test
out
imul
or
rolb
pop
pushf
lds
jle
push
sub
push
mov
push
or
in
mov
cmp
insb
sub
shl
dec
adc
push
adc
sti
fnstcw
sub
sbb
test
pusha
sub
addb
scas
int3
dec
xchg
ljmp
loope
test
data16
call
xchg
mov
ss
cltd
mov
in
lods
add
lods
into
mov
xlat
stos
xchg
fnstenv
and
pusha
jle
sub
mov
out
rcrl
adc
std
and
xchg
mov
loop
xchg
pop
std
aas
and
and
or
out
sbb
int
mov
xor
push
lret
or
sbb
aam
repz
sbb
push
and
add
xchg
icebp
mov
ds
cli
dec
fldt
and
sub
dec
xor
lcall
clc
rcrl
insb
xchg
addr16
jb
jl
jge
ja
xchg
stos
push
adc
jo
mov
add
lahf
mov
pop
inc
push
adc
push
call
jmp
cmp
fsubl
dec
popa
fs
sbb
jb
fcmovu
sbb
rorl
lods
or
arpl
and
push
repz
fmuls
or
or
jae
jl
ret
fldt
mov
jecxz
cli
enter
inc
push
je
int
in
out
cmp
inc
ljmp
repnz
js
push
jb
adc
iret
shll
shr
jb
jnp
arpl
mov
rcrb
or
scas
cltd
xor
mov
mov
and
xchg
sub
test
ret
mov
add
js
cmp
int3
test
xor
mov
test
lahf
sub
ficoml
aam
dec
or
pop
mov
pop
lcall
xor
adc
adc
push
or
adc
xchg
shlb
lock
mov
bound
rcr
push
mov
mov
dec
imul
daa
iret
sbb
cwtl
outsb
pushf
stos
lea
inc
add
bound
mov
test
mov
cmp
push
cmp
and
fisttps
arpl
jne
in
dec
int
xor
dec
push
cmp
insb
cmp
in
xor
mov
pop
xor
xchg
mov
fstpt
imul
push
push
lahf
and
sbb
int
xchg
mov
dec
outsl
repnz
add
inc
fildll
dec
push
cmc
xchg
mov
clc
add
outsb
dec
inc
rcr
inc
mov
iret
nop
repz
int3
jle
aad
or
dec
mov
inc
fcmovb
mov
mov
out
and
xchg
pop
lret
popf
inc
or
je
popf
mov
insl
inc
inc
xchg
leave
mov
or
aaa
add
fmull
mov
xchg
add
dec
popf
sbb
mov
mov
push
pop
mov
dec
aaa
sub
idivb
les
js
or
adc
dec
loope
cs
imul
lods
xchg
int3
outsb
jle
cli
lods
xchg
xor
test
shll
popa
pushf
mov
push
mov
xor
push
mov
inc
lods
sahf
jns
aam
sbb
outsb
pushf
cwtl
lahf
jle
sub
mov
xchg
sub
mulb
lret
push
pmaxub
pop
js
push
jl
lds
popa
aaa
inc
or
adc
lcall
jle
pop
jno
lea
cmp
imull
dec
inc
ret
jnp
jmp
cld
cmc
mov
mov
xor
sub
pop
add
xchg
jl
push
inc
push
test
sbb
cli
sbb
test
push
iret
cli
xchg
or
into
pop
inc
pop
jbe
sbb
pop
aam
push
add
and
imul
out
jnp
push
dec
je
test
push
xchg
sbb
mov
push
add
mov
pop
lds
mov
inc
popa
add
and
pop
arpl
sahf
pop
pop
or
mov
imul
jb
add
dec
cmp
sarl
cmp
insb
xor
inc
fldcw
mov
lods
popf
xor
bswap
cmp
mov
ss
cmp
out
outsl
ljmp
and
cli
sbb
pushf
ret
aaa
and
push
inc
sbb
mov
mov
enter
jns
test
popf
xchg
mov
xor
pop
orl
sub
jno
lcall
pop
xchg
xchg
mov
cmpl
daa
jg
inc
jb
mov
popa
mov
xor
bound
push
xchg
ss
imul
mov
sbb
imul
inc
nop
std
inc
push
adc
jg
push
lds
adc
fmuls
nop
adc
sbb
push
push
popa
insl
pop
imul
js
cmp
leave
outsb
xor
and
rclb
lods
ss
imul
mov
aaa
adc
pop
jecxz
push
xor
ret
push
dec
cmpsl
or
icebp
ds
dec
xchg
pop
mov
in
test
test
pop
movsb
sub
ja
inc
je
cwtl
lret
push
andb
movsl
fmull
dec
xorb
mov
adc
mov
cmpsb
out
cmp
loopne
insl
je
mov
xor
mov
jecxz
push
adc
pop
ss
mov
iret
pop
lcall
inc
out
mov
xchg
pusha
fdivrs
jp
and
ja
in
xor
add
xchg
lahf
and
jp
lahf
cld
mov
stc
loope
aam
jle
inc
mov
mov
loop
clc
scas
ja
pop
sbb
shlb
inc
fsub
sub
in
and
sbb
pop
dec
negl
or
fimull
repnz
addr16
movsl
xchg
adc
lds
outsl
mov
scas
cmpsb
xchg
jb
fsubrs
dec
jnp
or
mov
dec
in
cmp
adc
or
mov
sub
cmpb
mov
movsl
into
js
and
test
mov
fistl
ja
pop
inc
lea
rclb
adc
cmpsl
cld
mov
lock
cmp
push
pop
lods
aaa
subb
inc
push
rcrl
pop
lds
jle
es
decl
sub
sub
push
jbe
and
mov
movl
pop
and
dec
scas
mov
stc
push
and
adc
in
mov
or
sub
je
jns
cmp
lds
sbb
cmc
cmpb
fwait
pop
inc
add
mov
sub
lret
sarb
lods
out
mov
xchg
cli
or
mov
pop
lcall
dec
or
and
sub
or
loopne
adc
stos
inc
adc
test
fstl
cmp
jl
pop
sub
aaa
fwait
and
leave
aas
les
push
cmpsb
jbe
sub
ljmp
mov
daa
test
add
jo
sbb
addb
inc
push
inc
cmp
div
push
sbb
add
js
jl
pop
mov
dec
stos
ja
aaa
sbb
adc
movb
inc
pop
std
ljmp
sarb
push
stos
pusha
lds
pushl
frstor
sub
push
pop
cld
sub
or
sti
pushf
push
mov
xor
xchg
ds
jae
mov
int
pcmpgtd
inc
cli
fs
or
lock
outsb
mov
mov
push
decl
mov
jb
sahf
cwtl
and
fldt
or
pop
int3
sbb
mov
adc
std
lods
jle
fdivrs
in
xor
std
sarl
insb
lret
aam
or
xchg
cld
xlat
inc
jbe
and
ret
test
clc
dec
xlat
lods
sub
out
lods
dec
dec
inc
imul
das
mov
cmp
out
sbb
stc
cmp
mov
fsubs
adc
mov
and
ret
push
imul
jmp
jne
outsb
lea
lret
ds
jo
mov
ret
fdivrp
out
rolb
js
mov
adc
pop
xor
add
add
jo
xor
xchg
psrlw
push
aas
push
jmp
leave
add
fwait
gs
push
sbb
adc
xor
add
mov
ja
dec
fsubr
enter
mov
inc
pushf
movsl
mov
mov
push
mov
rcrl
xchg
cmp
mov
pop
dec
aas
into
loope
sarl
jne
lret
imul
call
add
roll
and
mov
out
mov
cmp
add
fnstsw
mov
inc
call
int3
cmpsb
dec
movsb
es
dec
push
scas
jae
daa
sbb
jl
or
mov
popa
add
arpl
sbb
fisttpll
clc
enter
xchg
mov
sar
repz
or
inc
mov
mov
lds
mov
in
add
add
push
rorb
jb
pushf
popf
jl
ds
aad
cmp
xor
pusha
mov
xor
add
into
mov
js
je
push
std
idiv
nop
mov
push
js
add
je
sbb
test
imul
pop
inc
in
mov
repnz
push
lcall
inc
adc
xchg
std
aad
sbb
xor
jbe
stos
in
test
ljmp
xorb
pop
imul
scas
nop
aam
aam
add
std
sbb
aas
pusha
hlt
lds
in
pop
lock
out
insb
dec
aad
jecxz
cmp
jne
mov
and
push
test
lock
in
fwait
xchg
or
flds
cmpsl
outsb
or
inc
inc
lcall
sbb
push
insb
data16
and
jecxz
inc
imul
jo
xchg
cld
mov
or
mov
cmpsb
stos
xchg
aam
mulb
loop
mov
fildll
out
mov
jnp
stos
fstp
loopne
sbb
mov
or
add
addl
jmp
mov
out
mov
pop
mov
movsl
mov
int
adc
inc
pop
add
cmp
out
out
bound
into
or
ret
idivb
jmp
test
cmp
adc
xor
shl
xchg
dec
stos
mov
push
cmp
add
lock
jl
push
mov
jne
cli
push
lahf
xchg
lret
movsb
push
test
jl
cmp
cs
inc
inc
cmc
cmp
mov
cli
negl
sti
xor
push
xchg
data16
pushf
scas
push
jmp
shl
pop
adc
daa
and
xorb
xor
movsb
mov
sbb
push
xchg
movb
mov
xchg
xchg
out
adc
or
outsl
push
fidivs
pop
mov
pop
cmp
imul
ret
aad
in
pop
sbb
add
mov
shll
xchg
cmp
pop
ret
hlt
mov
cmp
xchg
pop
or
mov
lcall
inc
in
fstps
mov
aad
sub
dec
dec
fcmovbe
mov
imul
xchg
add
daa
out
adc
and
cmpsw
in
sbb
mov
ldmxcsr
das
sbb
mov
pop
dec
inc
mov
and
clc
hlt
out
roll
aad
mov
incl
orb
push
dec
stos
mov
dec
idivl
jmp
mov
fdivr
sub
push
dec
push
push
pop
push
xlat
add
cmp
dec
fidivrl
mov
mov
pop
les
pop
leave
rorl
test
mov
cmc
inc
and
aam
in
jg
jmp
addr16
xor
jnp
or
jmp
mov
sti
addr16
sbb
test
in
outsl
lds
fidivrs
xor
mov
shl
mov
outsl
fwait
xor
and
ficompl
add
or
adc
mov
sub
push
cmp
ds
xor
enter
cmc
sbb
push
loopne
add
ss
mov
mov
push
and
mov
sub
sub
dec
scas
out
out
pop
add
sbb
divl
mov
pop
out
shll
call
mov
int3
push
data16
cmp
scas
sahf
into
push
add
jge
mov
push
movsb
mov
jle
lret
scas
andl
mov
movsb
hlt
mov
jnp
adc
and
lahf
jae
xlat
aaa
add
int
fsubrs
jbe
xchg
fdivrs
xchg
int
adc
mov
cmpsl
and
inc
xchg
and
insl
out
pusha
fisttpll
xlat
loope
push
mov
xor
mov
jno
jnp
inc
test
loope
xchg
jb
enter
stos
ret
xlat
andb
fs
ja
cli
pop
inc
aaa
sbb
lock
std
jmp
xor
and
push
sbb
fldlg2
sbb
fsubp
mov
dec
and
bnd
daa
add
push
lret
mov
inc
push
dec
loop
enter
scas
push
jae
push
int
scas
add
xchg
movsbl
pop
inc
scas
outsb
add
ret
loope
pop
xchg
cmp
add
insb
fmull
movsb
xor
dec
ret
xor
aad
jno
outsl
jne
sbb
fsts
xchg
in
or
lods
bound
sub
das
sub
jmp
jp
pop
clc
movsb
mov
or
dec
mov
lcall
iret
test
lock
xchg
repnz
xchg
icebp
frstor
pushl
mov
xchg
jbe
jge
mov
xchg
loop
cmc
rolb
mov
jl
out
jle
jle
pop
xchg
out
push
int
cmp
mov
pop
dec
pushf
stos
cmpsb
mov
mov
mov
idivb
pop
leave
mov
sbb
icebp
outsl
sahf
add
xor
mov
add
sbb
add
clc
rorl
test
sbb
fmuls
pop
loop
mov
mov
outsb
jg
out
or
iret
or
xor
mov
sbb
iret
cmp
xchg
adc
mov
arpl
mov
mov
lods
les
ja
push
dec
stos
dec
mov
cmp
inc
xor
std
subb
adc
inc
lods
mov
ret
mov
loop
and
mov
int
hlt
stos
pop
lods
mov
inc
mov
inc
repz
adc
jnp
mov
pushf
fists
or
sbb
sbb
jg
into
imul
cmp
fsubrp
adc
mov
aam
mov
pop
lock
jo
rorl
pop
int
xor
and
cmpsl
repnz
ret
fs
sti
xor
stc
imul
test
ret
sahf
repnz
int3
jb
fisubrl
push
mov
outsb
jg
cwtl
cmp
push
std
call
dec
and
cs
dec
movl
and
bound
mov
add
mov
outsb
xchg
inc
cltd
and
js
fidivrs
or
sbb
mov
push
rcl
mov
lock
pop
xchg
imul
je
data16
pushw
repz
cmp
xchg
lods
je
mov
dec
stos
pop
stos
sbb
shrl
pop
test
scas
sbb
inc
jl
xlat
jp
jno
lahf
dec
mov
add
aam
xor
adcl
adc
jg
jne
aam
test
xlat
das
in
dec
ss
and
out
pop
mov
push
sbb
jg
enter
shll
add
and
rorl
in
pop
ret
adc
mov
or
mov
add
in
xchg
cs
outsb
lock
cs
pop
sarb
or
fxch
sub
dec
lock
xlat
or
les
ja
dec
push
rcrl
imul
rcrl
das
pop
lods
adc
mov
bound
adc
mov
movsb
sbb
inc
xchg
loop
push
std
sbb
lea
pop
jp
inc
or
in
jecxz
mov
stos
push
jne
mov
imul
xchg
in
mov
mov
lds
stos
sbb
test
test
push
orb
insl
xchg
mov
test
stc
mov
xor
mov
cld
mov
out
push
fldt
sbb
fldl2t
ror
incb
and
es
or
stc
into
pop
scas
loop
lock
or
push
add
xlat
sub
mov
es
inc
dec
xchg
fsts
dec
fst
insl
fidivrs
pop
gs
aad
movsl
jle
test
push
dec
jns
scas
stc
imul
mov
dec
push
cld
xchg
lret
inc
sarl
sub
int3
inc
sub
dec
adcb
sub
add
mov
mov
adc
fs
dec
mov
adc
jmp
cwtl
inc
jnp
fcmovne
or
rorb
pop
inc
sub
add
cmp
lret
sub
jecxz
sbb
and
andl
pop
pop
mov
popa
in
data16
xchg
mov
aad
cmp
pop
dec
inc
mov
scas
sub
mov
jbe
cmpsb
dec
dec
fists
inc
mov
daa
out
aam
xlat
lret
jmp
sbb
fdivrl
sub
inc
pop
out
mov
insl
adc
mov
pop
adc
or
inc
sub
lock
aad
out
bound
ds
push
lea
push
mov
dec
call
inc
imul
test
insb
daa
hlt
sbb
imul
fidivrs
cmp
sbb
push
jge
outsl
pop
dec
or
sub
sub
and
scas
stc
ret
xor
sti
mov
sbb
aaa
rcl
push
fmull
lea
idivl
addb
push
adc
popa
popl
icebp
adcb
scas
jle
push
daa
or
test
popf
push
movsl
jne
gs
xchg
aad
pop
jp
shr
or
stos
jmp
mov
mov
stc
ds
sahf
add
add
xchg
jae
pusha
fs
mov
pushf
cmp
shl
pop
mov
paddw
jmp
lods
mov
mov
psubq
ret
and
sbb
dec
and
and
dec
in
ja
fdivrs
pusha
push
xchg
into
xor
out
fdivs
xor
out
jmp
xlat
push
xchg
jnp
dec
mov
rcl
push
dec
jl
mov
dec
mov
sub
or
add
pop
les
ljmp
cmp
lret
push
cmpsl
cs
test
enter
out
in
in
mov
push
dec
mov
sbb
and
sub
test
jecxz
xchg
mov
cmp
cld
in
lret
dec
push
addr16
push
lret
and
gs
mov
mov
push
mov
imul
or
mov
sbb
mov
ffreep
into
add
adc
arpl
push
or
cs
mov
adc
hlt
rol
sbb
sbb
fsubl
popf
das
pusha
mov
cmc
inc
dec
outsl
pop
cmpsl
adc
je
insb
fsubrs
icebp
pop
aad
push
cli
add
mov
cmp
jle
mov
xchg
or
inc
pop
pop
mov
jecxz
inc
cmpb
ljmp
scas
test
xlat
and
mov
movsl
insb
xchg
mov
fwait
pusha
sbb
scas
xlat
dec
aas
mov
cmc
xchg
mov
es
xor
sub
mov
adc
and
aas
pop
out
int
mov
sbb
add
shlb
pop
ret
inc
mov
push
ljmp
cmp
inc
inc
pop
sub
add
mov
repnz
rcrb
dec
xchg
dec
mov
sub
xchg
xchg
sbb
adc
cmp
bound
mov
and
repz
aam
lods
adc
insb
out
dec
add
sbb
shr
bound
ds
inc
clc
mov
jecxz
add
jns
adc
cld
int3
into
aad
pop
mov
adcb
mov
push
in
xchg
xor
xchg
mov
jnp
pop
add
and
je
or
jecxz
imul
cmc
jb
fadd
mul
adc
pop
int3
inc
pop
push
sti
dec
dec
adc
sbb
xchg
sub
lcall
push
in
lcall
lret
test
xchg
add
mov
cmp
rol
das
into
bnd
pushf
outsb
dec
cmp
in
jg
mov
mov
pop
push
push
mov
xor
dec
mov
sub
dec
sub
and
rolb
loopne
shlb
pop
repnz
jge
xor
adc
dec
fstps
sbb
cmpsb
lcall
inc
fiadds
jnp
cld
push
pop
inc
lods
addl
pop
fsub
loopne
lea
mov
fsts
divl
ret
jo
int
pop
cld
mov
jne
outsl
and
fsubl
fcoms
pop
test
sub
rcr
fmuls
cmp
ret
cmpsl
lahf
sub
cmp
jb
jae
orl
loopne
test
pop
pop
shrl
inc
sub
ja
gs
enter
out
add
ret
loope
and
enter
outsb
das
daa
je
sbb
or
daa
leave
out
insb
loop
pop
cmc
aam
aam
xchg
iret
popl
mov
and
mov
dec
xchg
lds
xchg
dec
push
subl
icebp
scas
sub
jnp
cmc
cs
out
xor
xor
or
mov
or
rcll
and
cmpsl
jno
xchg
push
rorl
add
icebp
mov
call
shl
je
rol
in
fucomip
mov
and
pop
lods
mov
ret
mov
xor
adc
and
or
xor
aad
mov
ds
xor
dec
sub
pushf
pop
xorb
pushf
push
loopne
mov
push
bnd
sbb
ret
inc
xor
lods
fs
jbe
iret
mov
xor
in
mov
mov
cli
mov
pop
lods
js
adc
sbb
mov
mov
jmp
jo
sub
jmp
pop
imul
std
jno
dec
adc
lcall
std
jp
dec
push
ja
into
mov
pop
mov
mov
aas
xor
je
test
sahf
es
inc
enter
mov
inc
pop
push
dec
inc
xchg
dec
in
push
xchg
cmp
push
enter
loop
dec
cmp
xchg
das
add
push
call
sbb
sti
dec
xchg
mov
in
lods
aaa
and
rclb
mov
or
daa
add
sarb
fs
mov
repz
mov
sbb
cwtl
clc
fstps
push
mov
imul
inc
xchg
cmp
xor
fisubs
loopne
jge
push
in
xchg
cwtl
aas
sbb
test
dec
sbb
lahf
xchg
xor
in
bnd
dec
pusha
jo
cmp
push
mov
adc
or
push
inc
sub
btl
std
jns
gs
pop
movl
into
cmpsb
addb
xor
dec
movsl
mov
data16
or
xlat
jne
les
cmp
rclb
jae
int
mov
cmp
inc
cmp
fs
gs
mov
xlat
xchg
inc
push
inc
mov
pop
ret
cld
or
and
dec
pop
mov
lcall
addr16
xor
nop
sbbl
dec
cmp
inc
pop
cs
rorb
ret
mov
mov
or
mov
aam
scas
out
aaa
push
int3
lahf
cmc
dec
xor
add
push
jb
imul
es
imul
push
mov
cltd
fildll
push
and
insb
mov
in
iret
pushf
adc
xlat
pushf
loopne
imul
testb
scas
test
fisubs
or
or
sbb
jecxz
mov
test
ja
ret
sbb
mov
imul
int3
in
pop
xor
sub
call
test
mov
call
lods
jb
gs
decl
cmpsb
sarb
jnp
mov
sti
sbb
loopne
push
inc
test
adc
test
xchg
dec
push
shll
dec
les
roll
jns
test
xor
lret
in
cld
mov
sub
mov
lret
mov
push
lahf
rcrb
repz
mov
lcall
scas
push
mov
notb
insb
in
and
cmpl
and
adc
cmp
mov
bound
subl
test
push
xor
dec
inc
flds
and
ds
sub
push
cmp
outsl
cli
or
test
xchg
cli
repz
das
push
inc
mov
push
xlat
pop
cs
sahf
int
popf
mov
lods
add
pop
cmp
pop
add
sbbb
imul
and
cmp
xlat
cwtl
data16
test
add
mov
int
repnz
or
stc
push
pop
xchg
in
xor
cmpsl
jo
pop
add
push
and
pop
andl
and
xorl
es
notb
pop
sub
faddl
push
lahf
mov
stos
mov
out
mov
mov
je
sti
push
mov
in
movsl
push
sbb
and
sbb
icebp
jle
adc
loope
imul
into
mov
inc
push
sbb
add
icebp
lock
sti
mov
and
dec
clc
jge
cwtl
leave
jns
test
mov
xor
mov
mov
leave
std
movsl
jno
xor
mov
adc
aas
mov
push
xchg
aad
add
test
or
jo
nop
dec
ds
ss
hlt
mov
sti
lret
cmp
out
mov
and
fistps
and
pop
mov
lods
jo
stos
mov
and
push
mov
andl
lret
mov
pop
in
out
std
inc
push
add
insb
inc
mov
iret
shll
mov
out
inc
mov
jns
test
inc
cmc
ror
test
je
mov
xor
inc
stos
ss
lods
scas
dec
jae
ljmp
mov
pop
adcb
mov
jecxz
mov
mov
jae
sub
and
mov
dec
inc
push
test
insl
xchg
leave
mov
adc
cs
cmp
test
je
adc
sbb
sub
outsb
dec
inc
or
inc
xor
shll
pop
inc
push
sbb
sbbb
fisubl
stc
pop
add
jg
mov
push
sbb
mov
jnp
xchg
enter
pop
fiadds
dec
lods
js
dec
hlt
pop
mov
addl
mov
inc
sti
jbe
pop
sbb
pushf
inc
shl
sbb
mov
dec
negl
pop
mov
or
jp
test
out
sub
stc
dec
xor
lods
inc
adc
test
test
xchg
dec
and
dec
push
out
mov
movsl
loop
xor
inc
pushf
hlt
add
bound
insl
insb
cmpsb
adc
jno
push
lock
xchg
dec
xchg
rcrl
in
pusha
clc
shrl
popf
scas
notb
mov
sbb
or
insl
xchg
jns
addr16
mov
inc
xchg
movsl
dec
mov
and
mov
mov
xchg
mov
pop
cmp
pop
mov
push
out
std
inc
loopne
repnz
sbb
cmpsb
jge
pop
cld
hlt
fsubrs
sarb
fwait
popf
loope
data16
das
adcb
imulb
es
mov
adc
jge
mov
cmp
dec
outsl
sub
clc
cmp
stos
in
movsb
lock
mov
out
and
jnp
xchg
daa
rolb
add
xchg
addl
out
jle
inc
outsb
repz
dec
punpckhbw
mov
inc
inc
sub
push
pop
cmc
push
jge
sub
dec
xor
outsb
cmpsl
mov
insb
orl
popf
mov
imull
push
jmp
or
or
movsb
lds
xchg
or
pusha
cwtl
push
jbe
fiadds
shrl
fcomp
test
das
ret
cld
xchg
mov
push
lahf
pop
lahf
pop
dec
lods
sub
lret
std
enter
out
xchg
stc
cmpsb
mov
push
pushf
dec
xchg
pop
dec
fimull
dec
xchg
imul
sbb
mov
ja
cmpsb
insb
xlat
imul
push
pop
idivb
ret
mov
mov
add
cmp
in
push
adc
mov
ja
outsb
ljmp
add
cltd
push
pop
sahf
add
into
or
dec
push
scas
sahf
sets
loop
pop
fdivs
aam
mov
and
add
xchg
cs
pop
and
mov
sbb
negl
cltd
xor
sti
xchg
sub
push
cmp
jne
addr16
push
je
imul
sub
cmp
cli
mov
xor
scas
in
test
iret
cmp
cmp
pop
lcall
add
pop
std
dec
fcmovbe
in
sbb
adc
icebp
sub
je
push
adc
orl
gs
adc
xchg
cwtl
and
aam
aas
outsl
mov
adc
cmp
das
ret
adc
jbe
push
jmp
mov
mov
add
out
xorl
mov
push
aam
mov
shrb
jne
pop
lret
and
fstpl
pusha
idiv
sbb
cmp
or
and
pop
push
fistl
out
or
push
xchg
and
mov
push
int
jae
dec
cli
push
inc
test
mov
jns
mov
xchg
cmpsb
cmp
shlb
aaa
adc
stos
and
or
stos
xchg
lret
mov
jecxz
push
push
je
shrb
jnp
jge
xchg
xor
push
jle
mov
mov
bnd
bound
jl
mov
jnp
inc
scas
sub
and
insb
mov
inc
fldcw
mov
fdiv
mov
cmp
cmp
jne
jne
or
cwtl
pop
pop
xorl
xor
dec
add
or
ret
lahf
inc
fsubs
jp
call
xchg
pop
pop
adc
push
and
je
ds
movsl
mov
ret
iret
push
mov
stos
sub
pop
add
ljmp
fstps
lds
testb
inc
sub
xchg
cs
sbb
and
or
and
pop
pop
std
fucomip
xchg
inc
insl
clc
push
pop
adc
sarb
jp
jmp
sbb
adc
negl
add
scas
mov
sub
sbb
test
xorb
pop
add
jne
add
or
and
in
cwtl
addr16
mov
push
adc
mov
gs
add
fisttpll
mov
or
das
push
mov
hlt
imul
out
lds
or
mov
xchg
jg
push
and
test
and
cli
ret
leave
gs
fnstsw
test
xor
dec
arpl
mov
movsb
sbb
sbb
sub
pop
cmpsl
push
inc
xchg
jo
mov
xlat
jnp
mov
mov
daa
push
repnz
and
xor
lds
mov
and
dec
jle
out
mov
sbb
les
test
cwtl
fisubl
and
xor
insl
icebp
pop
int3
xchg
xchg
dec
popa
mov
clc
add
insb
adc
sub
mov
out
jne
outsl
jp
push
push
jecxz
xor
shrd
cmp
sub
cmp
mov
pop
sub
sub
push
cld
inc
test
idivb
rclb
mov
inc
outsb
inc
loopne
push
and
or
ljmp
mov
or
cs
mov
sbb
mov
mov
into
movsb
adc
iret
lods
mov
or
mov
loope
jns
mov
mov
cmc
fistps
out
out
inc
adc
rorl
pop
in
xchg
bound
jbe
in
add
loope
adcb
daa
ficoms
inc
xor
pop
cmc
mov
orb
fnsave
loop
xor
das
xchg
dec
add
das
out
pushf
lcall
cld
outsl
int
jae
std
jl
xchg
xor
adc
add
aaa
sti
scas
xchg
jbe
xor
jl
inc
cli
mov
int
mov
push
lret
addb
das
sub
pushf
or
jecxz
mov
es
pop
adc
pop
loopne
sub
adc
jb
loope
push
in
daa
repz
fisubrl
add
aaa
hlt
dec
or
sbb
mov
ljmp
or
cltd
sbb
push
jg
lea
cmp
rcrb
negl
test
cwtl
pop
test
pop
out
inc
mulb
nop
pop
fsubs
imul
push
sbb
fimull
fadd
ljmp
push
and
dec
or
and
cmp
test
mov
dec
sbb
push
sti
push
iret
mov
iret
inc
pcmpgtw
jbe
push
mov
dec
inc
cmp
pop
sub
xchg
or
cmp
jecxz
es
sbbb
lods
out
js
call
rcrl
repnz
lret
or
dec
aaa
jle
ret
pop
xchg
push
pop
pop
mov
andl
clc
movsb
cmpsl
inc
lds
xlat
xchg
inc
stos
mov
xor
or
cltd
in
hlt
and
mov
fiadds
mov
push
js
fsubrl
clc
inc
mov
pop
not
pop
jne
rcll
adc
fstl
aad
cmp
add
push
xchg
jno
arpl
stos
and
arpl
dec
pushl
dec
hlt
orl
push
fwait
sbb
outsl
loopne
xor
js
aam
sarw
jl
out
pop
push
cmp
cmc
inc
movsb
jnp
sub
mov
add
rcrb
xchg
inc
stos
and
xchg
pop
divl
nop
fidivl
scas
push
ljmp
gs
add
push
pop
jl
or
fisubrl
fstp
xchg
mov
jge
pushl
lahf
xchg
in
adc
jno
cmp
sub
mov
fstl
push
sub
dec
aas
shl
clc
sub
stos
inc
sub
mov
and
xchg
mov
loop
int3
in
and
loopne
sbb
jl
xchg
es
int3
negl
ret
test
add
insl
or
or
xor
dec
mov
cltd
fidivl
sbb
loope
shl
xorl
pop
data16
push
test
and
out
in
mov
cmpsl
repz
or
push
push
fidivrl
test
push
fldenv
sub
add
mov
fcomip
add
and
mov
dec
lret
adc
faddl
dec
mov
fwait
jmp
sbb
push
loopne
mov
pop
xchg
sbb
push
data16
and
jb
arpl
mov
mov
loopne
jecxz
sahf
sbb
xchg
add
push
and
lock
fwait
sub
andl
push
imul
data16
pop
lret
jmp
cmp
jmp
jmp
fisubrs
ret
xor
push
imul
and
rorl
or
adc
adc
and
repz
jl
xchg
dec
rorl
mov
cmp
and
add
fldenv
in
mov
decb
test
lods
cmpsb
les
js
cltd
push
and
shll
mov
sbb
add
cmp
jge
lret
jbe
rclb
adc
sub
or
faddl
repz
insl
inc
shlb
sub
jmp
lock
mov
pop
xchg
adc
add
xchg
gs
mov
cmpsl
faddl
lds
pavgb
cmp
pop
push
test
xchg
lret
inc
pop
push
mov
push
cmc
in
sti
popa
cmp
push
lea
jae
mov
push
sub
jbe
xlat
inc
mov
mov
das
adc
mul
hlt
sub
out
jle
cmp
ljmp
pop
sbb
inc
and
insb
pop
ficoml
cmp
cmc
into
test
shlb
and
fwait
in
in
dec
fistps
mov
adcb
data16
sub
loopne
mov
mov
mov
xchg
mov
push
xchg
jecxz
addb
addr16
cwtl
dec
dec
pop
mov
addr16
jno
imul
push
cmp
imul
into
jl
mov
hlt
push
sub
scas
add
push
or
inc
int3
and
int3
divb
xchg
adc
into
es
xchg
lcall
gs
lcall
push
fucomip
in
cmp
dec
pop
cwtl
gs
ret
sub
inc
and
xor
enter
pop
push
dec
cwtl
rorl
cli
daa
int
sbb
xchg
enter
outsl
leave
xor
push
sbb
ljmp
aam
cld
push
adc
push
mov
rclb
sbb
dec
stc
pop
or
loopne
sbb
dec
popf
mov
fcoms
dec
xchg
add
mov
sbb
daa
mov
lret
je
jle
dec
sub
jo
mov
sub
insb
mov
adcl
push
rcrb
inc
sub
dec
and
stos
pop
and
xor
xor
xchg
mov
jo
ds
scas
cmp
xlat
idivl
push
inc
lods
cmp
and
xor
sbb
add
sub
aam
int3
cmpsb
pop
loop
int
fs
outsl
and
mov
popa
mov
call
in
std
mov
cs
pop
cmp
inc
sbb
lds
stos
adc
sub
adc
xlat
xchg
iret
xor
jmp
lods
test
pop
pop
pop
push
cmp
lret
xchg
call
xchg
fs
xchg
sbb
jmp
push
repz
adc
mov
inc
bound
rcrl
inc
dec
icebp
jo
int3
ficomps
cmp
data16
push
gs
int3
dec
xor
sub
mov
dec
jg
jnp
push
adc
pusha
adc
je
popf
xchg
xchg
xchg
sub
sbb
loop
in
xchg
cmp
jp
inc
or
xor
cltd
adc
in
push
cli
hlt
adc
xchg
adc
mov
xor
mov
mov
fwait
mov
cmp
inc
iret
adc
aam
dec
jo
add
sbb
jae
and
jge
je
orb
jnp
fwait
test
js
push
loopne
mov
cmc
adc
inc
xchg
and
mov
test
mov
xor
mov
cmp
or
test
call
dec
int3
movsl
ss
dec
sbbl
movsl
sbb
lea
fimuls
and
je
add
adc
mov
dec
jae
movsb
cmp
or
aas
mov
out
jle
mov
hlt
mov
cltd
mov
adc
pusha
insb
insl
lret
mov
repz
cmpsb
mov
xor
addr16
pop
lods
mov
rolb
jge
cltd
lds
fidivrs
jge
mov
in
mov
int3
jb
mov
dec
fisttpll
insb
sbb
sub
lret
jmp
mov
lods
cmpsl
add
push
fs
pushf
inc
popf
xlat
je
dec
sub
cld
inc
xchg
stc
sbbl
inc
dec
xor
fs
pop
pusha
jnp
mov
sub
and
push
mov
sahf
cmp
fcomp
cltd
sub
xchg
mov
sbb
inc
pusha
in
sub
repnz
into
imul
jl
call
xor
cmp
adc
push
fmuls
cmp
lds
lahf
mov
fadd
lea
push
sub
cmp
sbb
in
rcll
jae
inc
in
dec
rcr
inc
sub
addr16
std
xchg
fnstenv
or
out
lea
aam
cld
cmp
gs
push
cmp
xchg
cmp
push
adc
test
and
jbe
stos
push
cs
xor
and
adc
in
jo
sbb
inc
jb
dec
mov
rorl
adc
mov
push
aam
cli
ret
es
pusha
daa
imul
and
cmp
inc
sbb
pop
aad
fisubs
or
jg
repz
ss
shrb
jmp
inc
xchg
movl
rolb
ds
inc
and
push
mov
addb
test
or
fistpl
iret
fadds
jle
push
jne
cltd
add
leave
xor
fildll
pop
pop
sbb
insb
inc
lahf
xor
jmp
aad
cmp
out
repz
imul
push
sbb
mov
test
add
push
movsl
sti
jle
mov
int3
cmpsb
fistl
cs
jne
movsl
sahf
jnp
mov
lods
push
and
enter
or
dec
bound
add
cwtl
xchg
mov
mov
or
imul
mov
test
and
aad
mov
arpl
mov
lcall
pop
stc
int
ljmp
incb
repz
lret
shrl
and
mov
pop
mov
mov
push
sar
or
fs
icebp
add
push
jae
add
sbb
sub
iret
call
rep
pop
daa
push
daa
shll
jbe
add
xchg
mov
mov
cltd
les
jmp
and
loopne
rol
cmp
inc
repz
and
mov
repnz
scas
lret
push
jno
fmull
xor
xchg
pop
inc
je
lock
and
xchg
pusha
add
sbb
and
mov
inc
in
inc
lret
enter
les
xlat
inc
mov
or
popa
fs
lcall
cmpsb
pop
dec
fwait
leave
jg
pop
mov
jnp
sti
lods
cli
sub
leave
movl
inc
mov
ss
mov
out
stc
int
cmp
rol
lret
or
jno
jmp
insb
sub
inc
fwait
ret
cmpsl
dec
insb
jecxz
out
and
pop
lret
outsl
xchg
cmc
lret
and
and
sti
adc
ljmp
leave
jmp
jl
enter
adc
imull
arpl
mov
cmp
jno
pop
xchg
add
pusha
mov
idivb
jecxz
inc
push
push
test
divl
fistpll
divl
xchg
push
je
icebp
outsb
dec
scas
sbbl
mov
data16
adc
stc
pop
leave
mov
movsl
add
push
ret
add
xchg
insl
push
adc
dec
mov
pop
lcall
mov
pop
sbb
inc
stc
cwtl
iret
mov
pop
sbb
push
adc
mov
ret
cld
sub
jns
in
pop
mov
or
test
dec
jns
test
sub
lcall
or
mov
orl
sub
test
ja
adc
jmp
out
push
adc
add
sub
pop
cmpsl
outsl
cs
xchg
cmp
inc
and
or
cmc
lock
js
mov
push
add
out
xchg
and
jno
ljmp
fisttpll
fs
gs
mov
lret
xor
jmp
inc
lret
enter
lret
jae
mov
sahf
xchg
pusha
lret
pop
lret
int
sbb
push
ljmp
cmp
push
outsb
adc
mov
ss
jnp
int
sbb
orl
aad
sbbl
test
adc
sub
pop
popa
sbb
rol
pusha
rclb
popa
pop
dec
adc
push
pop
mov
xor
pop
fisttps
ficomps
xlat
mov
jg
repz
pop
adc
xchg
mov
dec
popa
lods
xlat
xor
push
jbe
add
clc
pop
adc
add
scas
mov
pop
xchg
inc
or
and
testl
sub
mov
jne
inc
mov
js
loopne
addr16
pusha
mov
dec
aam
dec
leave
fstpt
popf
push
bound
daa
mov
mov
dec
cs
insb
leave
adc
popf
push
pop
int3
insl
in
lock
mov
mov
outsl
cmp
push
jecxz
stos
push
inc
jg
insl
xor
cmp
shrb
mov
mov
mov
push
jmp
fistps
xor
les
mov
notl
adc
fwait
test
jle
insb
in
aad
jmp
mov
in
mov
mov
jns
fisttpl
lret
jo
mov
sbb
ds
sbb
test
add
jo
fisubrs
jp
das
xor
inc
fisubrs
mov
mov
subb
and
xchg
cwtl
push
xchg
and
mov
sub
jne
or
lods
mov
jp
add
ds
mov
mov
outsl
int
sub
mov
mov
xlat
mov
mov
jl
jmp
pushf
decl
seta
in
lret
push
sbb
xchg
push
aaa
add
xchg
fmul
push
in
add
mov
inc
adc
xor
cmpsb
pop
arpl
cli
mov
xchg
sub
mov
inc
and
mov
sbb
mov
jle
mov
adc
push
clc
mov
loope
js
lods
rcrb
push
push
nop
sub
and
imul
imul
mov
sarl
iret
test
fnstsw
ficoml
pushf
int3
jp
xorl
or
cltd
xor
mov
xor
jl
test
or
and
rcll
and
leave
mov
fadd
mov
scas
pop
dec
insb
mov
cmc
or
inc
jmp
inc
fiadds
xlat
rcr
or
mov
cmp
xor
pop
adc
jl
sbb
cmp
shrb
subb
fisttpll
or
mov
gs
cmpsl
fnsave
mov
das
scas
push
jge
mov
mov
lock
cmp
mov
dec
outsb
imul
inc
imul
lods
xor
hlt
sub
inc
imul
xor
subl
jmp
dec
int
in
ret
test
xor
int3
dec
push
xchg
dec
mov
loopne
and
add
roll
and
mov
mov
mov
mov
dec
addl
aas
int
ret
lahf
stc
cltd
add
xchg
test
or
and
sub
push
dec
aad
iret
stos
rorl
daa
jae
jmp
cmpb
adcl
add
je
and
cmp
sarb
stos
xchg
mov
test
mov
xchg
xor
imul
xchg
inc
inc
adc
xchg
inc
divl
and
daa
jp
pop
mov
sbb
mov
push
jle
into
fstpl
cmp
mov
int
mov
loopne
pop
int
mov
sahf
cli
fwait
push
lcall
bnd
xchg
in
push
push
sub
sbb
jecxz
push
xor
push
aad
push
movsl
ja
sahf
cmpsl
rorw
mov
cmp
sub
mov
in
push
loop
fwait
cmp
push
xlat
imul
cmp
stos
aaa
mov
adc
push
mov
lods
mov
lss
int
fwait
mov
mov
mov
out
fdivs
dec
dec
xchg
or
outsl
aad
jne
addr16
icebp
push
xor
shrl
jbe
xchg
inc
cmp
and
movsl
out
mov
test
clc
ret
inc
popw
aam
push
fwait
mov
push
cmpl
xchg
jl
push
iret
cli
xchg
add
adc
dec
lahf
shlb
mov
outsb
mov
out
dec
lock
fmulp
imulb
adc
cmp
frstor
pop
dec
out
mov
pop
rolb
or
sbb
pop
bound
aas
cmovae
out
insl
mov
jecxz
mov
push
sti
push
mov
sub
ud1
scas
jns
sbbb
sarl
push
push
mov
fisubl
addr16
das
cmp
pop
scas
loopne
divb
pop
xchg
xor
mov
pop
mov
cld
mov
push
push
xchg
mov
cmp
jmp
leavew
mov
shlb
outsb
mov
mov
loop
arpl
fstps
std
movsl
mov
icebp
and
mov
in
jl
mov
scas
mov
sub
sub
imul
and
loop
and
ret
test
add
adc
and
lods
inc
out
sbb
negb
and
popf
pop
orl
das
adc
dec
sub
outsb
stos
int
cli
pop
rol
push
push
fs
ss
stc
cs
adc
aad
mov
inc
insb
xor
dec
cld
mov
mov
loop
ror
dec
test
inc
add
adc
xor
ja
mov
mov
jecxz
divb
and
cli
insl
ret
or
subl
out
xchg
jns
in
push
and
decb
lods
adcb
xchg
imul
mov
dec
mov
jb
jnp
jns
into
cli
mov
data16
lock
mov
pop
into
push
out
dec
push
ficompl
inc
or
adc
lock
lret
and
or
sub
inc
dec
bound
dec
dec
cwtl
push
inc
inc
dec
loope
cmpsb
jae
pop
fs
out
scas
rcrl
aaa
adc
jo
dec
add
pop
mov
sbb
movsb
jbe
je
sub
lahf
sbb
add
inc
inc
aam
jbe
xchg
clc
pop
je
fldl
or
push
xchg
lods
cltd
rorb
and
fsubrp
sarb
inc
xor
aad
cmp
out
jbe
xchg
mov
xchg
cli
sub
jl
push
les
adc
adc
jg
or
sub
aaa
inc
cmpsl
mov
push
outsb
and
outsl
xorl
jl
nop
mov
les
push
dec
test
pop
inc
outsl
sbb
addb
mov
xchg
ds
fwait
push
fidivs
add
in
xor
cmpsb
enter
mov
add
mov
dec
jno
dec
xchg
je
sub
stos
cmp
les
lods
rcrl
sub
jne
dec
mov
hlt
fstl
jecxz
jae
mov
push
mov
ja
mov
rorb
addr16
fwait
add
xchg
loop
mov
pop
sub
and
je
inc
jle
stos
stos
cmp
xchg
or
xchg
cmp
dec
test
nop
and
pop
xor
ss
xor
das
jge
xor
fs
aas
out
icebp
inc
xchg
lds
or
sarl
mov
pop
cwtl
addr16
inc
jg
out
out
orl
sarb
movsb
xchg
push
jno
push
pop
jb
dec
push
ds
adc
mov
jb
mov
add
mov
cmp
jnp
testl
sbb
fisttpl
cmp
stos
bsr
jl
jge
xchg
rorb
and
mov
add
popa
je
int
fildl
add
leave
and
mov
rolb
inc
push
jecxz
pop
hlt
filds
fisttpl
int
in
cmpsb
mov
nop
out
adc
fdivp
sbb
dec
scas
add
cmpsl
sub
mov
rcll
push
in
sahf
jg
pop
xchg
and
inc
mov
aaa
lcall
cmp
or
xchg
push
cmp
lcall
stos
xchg
cmpsl
push
outsb
pop
jg
iret
adc
inc
inc
pop
push
lret
dec
mov
rcrl
dec
fs
inc
adc
jns
and
ret
bound
aam
int
pop
jb
push
sti
mov
stos
icebp
xchg
ljmp
push
scas
adc
into
adc
adc
add
inc
arpl
pushf
rcrl
jmp
inc
addr16
cmp
movsl
das
aaa
or
popf
xchg
pop
into
xchg
call
cmp
jns
lds
xor
jno
iret
sahf
jecxz
jge
fwait
dec
mov
mov
je
mov
scas
or
sub
ja
mov
mov
fldcw
cs
add
mov
cmpsl
in
sbb
sti
jmp
mov
popa
pusha
pop
sbb
fmull
shll
stos
or
push
call
js
fcmove
popa
pushf
inc
rolb
mov
roll
and
test
pushf
popa
jmp
dec
pop
jge
pop
xchg
add
cmp
pop
sbb
mov
insb
cwtl
sahf
lahf
jo
push
jb
lea
adc
test
icebp
inc
lds
cs
js
pop
cwtl
and
jno
loopne
pop
xchg
js
jp
repnz
fbstp
rcrb
adc
inc
test
cmp
jne
and
pop
push
inc
test
pop
mov
push
jae
lods
mulb
push
mov
add
or
out
mov
xor
cmp
mov
add
sbb
cli
and
and
aam
mov
lods
xor
xchg
insb
out
out
mov
js
mov
mov
stos
movsl
pop
pop
pop
stc
push
xsavec
adc
mov
iret
mov
mov
imul
sub
jb
mov
lea
scas
lcall
sub
or
or
xchg
cltd
les
pop
lret
add
jp
pop
push
outsl
jno
sbb
dec
imul
inc
enter
sahf
xor
sbb
push
cltd
mov
jno
inc
mov
cmp
scas
cwtl
ds
add
mov
xor
xchg
hlt
jecxz
lcall
inc
shl
mov
or
test
dec
mov
movsl
stos
test
shlb
inc
jecxz
sub
cmp
adc
mov
jne
mov
inc
cmp
je
loopne
lods
inc
xchg
dec
jmp
or
incb
arpl
dec
test
inc
dec
mov
and
sub
mov
dec
xor
test
and
arpl
jge
test
lahf
mov
jg
add
lret
je
arpl
sub
cmp
mov
leave
jbe
movsl
jbe
mov
jmp
cmpsl
in
jge
sbb
mov
rclb
mov
and
adcl
fdivl
loop
mov
test
add
push
out
mov
jne
cmc
not
sbb
inc
sarb
aad
nop
nop
inc
xchg
add
cli
hlt
xor
xor
xor
in
mov
xchg
pop
push
xlat
leave
xchg
add
std
pop
jno
xlat
rolb
imul
fs
into
or
rorb
in
inc
pop
xchg
cmp
push
fisubl
mov
lods
add
fidivl
push
fwait
bound
and
add
mov
gs
adc
nop
sbb
or
mov
push
push
aad
paddw
mov
data16
push
arpl
popf
cmp
sbb
mov
jl
shll
mov
out
sti
pop
sbb
cmc
pusha
pop
jae
add
lret
sub
cmpsl
cmp
fdivs
js
aad
jl
cmp
movsb
movsb
ret
push
jne
sbbl
push
sub
stos
pop
push
das
dec
cli
roll
movsb
push
sarl
xor
push
mov
aaa
pop
mov
ss
mov
leave
pushf
fists
sbb
add
inc
mov
xlat
and
push
popa
mov
test
jge
mov
fs
cs
sbb
adcl
popa
je
jmp
mulb
xor
inc
inc
mov
int3
push
imul
in
jp
test
loope
fmuls
subb
lods
inc
sub
mov
in
adc
push
jns
test
ljmp
in
cmpsl
pop
push
and
es
cli
nop
sti
mov
lock
daa
mov
enter
add
or
int
orl
push
lea
jb
sbb
add
fwait
js
data16
xor
scas
lods
out
jecxz
orb
je
insb
adc
dec
inc
jmp
pop
shrd
ror
mov
rorb
mov
mov
test
imul
mov
pop
hlt
mov
fidivrs
mov
nop
mov
test
xor
icebp
ljmp
cltd
xabort
stos
pop
adc
mov
xchg
pusha
cmp
push
inc
add
ja
cs
mov
sub
imul
lds
sbb
fsubrs
sbbb
adc
ds
aad
xor
xor
rclb
sbb
int3
imul
lds
pop
xchg
add
idiv
movsl
imul
int
stc
call
js
out
lods
jp,pt
pop
shll
sub
pusha
jnp
stc
std
cmp
sbb
arpl
sbb
push
pop
mov
xorl
cmp
push
movl
call
lret
in
push
cmpb
dec
sti
xor
call
idiv
and
dec
into
or
dec
add
xchg
cmp
ja
sub
xchg
dec
daa
push
dec
xchg
in
clc
std
mov
push
dec
roll
sub
mov
inc
in
outsl
mov
icebp
sub
popa
ja,pt
test
leave
cmp
xor
lret
cld
lds
in
sbbb
jno
or
insl
xchg
mov
cpuid
movsl
xchg
cmpsb
rorb
pop
js
and
mov
sub
std
jecxz
pushf
lock
int
in
sbbl
adc
sbb
popa
je
push
mov
pop
inc
adc
imul
lods
xchg
test
push
sahf
dec
lds
mov
mov
lea
adc
and
cmp
ss
test
lds
sbb
xchg
dec
aad
adc
pop
adc
xchg
popf
fdivs
ljmp
sbb
xor
ret
xor
in
aaa
ficoms
inc
fsubrl
xchg
lds
pop
ja
mov
xchg
fiaddl
mov
cmpsb
out
scas
and
scas
ficoms
dec
stos
icebp
mov
push
aaa
or
cmp
outsl
stc
stos
jae
movsl
negb
or
xchg
add
aad
jno
data16
push
mov
lret
cmp
cmc
push
pushf
or
cwtl
inc
adc
xor
jns
js
and
xlat
das
add
testl
jne
xchg
fldt
push
cmc
out
add
and
pop
lret
mov
mov
push
loope
dec
lcallw
adc
push
ret
pop
loop
cmc
mov
and
popl
js
push
pop
outsb
or
mov
out
ss
push
inc
loope
mov
pop
addr16
clc
movsb
and
fsubrp
xchg
push
jo
cmpsl
je
xchg
ja
loope
mov
sahf
je
add
mov
arpl
scas
icebp
cltd
cmp
jbe
pusha
adc
mov
negl
aad
push
icebp
outsl
and
jne
xor
cmp
add
mov
mov
adc
pop
sub
jae
movsl
lcall
fimull
into
cmp
imul
xchg
pop
xchg
cmc
sub
lret
sbb
mov
cmp
cli
clc
je
std
pushf
gs
cmp
cmc
out
mov
jmp
movsl
push
push
fcomip
pop
cli
sbb
sbb
enter
xchg
cmp
xchg
bound
and
iret
mov
int
dec
mov
rol
enter
cwtl
mov
sbb
std
adc
push
lods
mov
xor
stos
lds
lods
mov
das
es
icebp
dec
pop
and
add
loopne
mov
xlat
and
fisttps
adc
sar
add
jbe
or
movq
dec
xchg
in
mov
repnz
pop
push
cli
sbb
xchg
loope
inc
mov
mov
adcl
test
add
icebp
int3
andl
out
shr
dec
lods
cmp
cmc
jp
cs
cmc
push
pop
mov
in
add
fcompl
cmp
je
stos
fldl
add
adc
mov
scas
aaa
stos
mov
mov
jb
jbe
test
mov
shlb
js
out
pop
imul
jg
xor
hlt
sub
xor
repnz
iret
pop
xchg
rorl
or
shll
cmp
sbb
inc
jns
shrb
xlat
pop
imul
adc
lahf
fidivs
sarb
std
xor
pop
cmp
mov
cltd
pop
dec
arpl
jnp
test
pop
sbb
pop
mov
adc
les
rclb
adc
repnz
imul
sbb
std
sbb
inc
les
jle,pt
out
inc
aam
adc
test
mov
cmp
add
sbb
popf
ret
rorl
jge
loop
sbb
push
loop
mov
call
cmp
fisubs
hlt
jge
fistl
enter
insb
imul
xlat
call
inc
push
fisubs
insl
icebp
ret
sbb
lods
jo
xchg
leave
fisubrl
cmpsl
mov
addr16
pop
fs
ljmp
fnstenv
and
or
cmc
mov
mov
hlt
into
movb
xor
les
sarl
xor
dec
fldenv
or
adc
cmc
mov
jo
bound
jo
sbb
shr
xlat
ja
xchg
aad
out
jbe
mov
movaps
pop
clc
test
pushf
lcall
push
rorl
jle
mov
jbe
rclb
popf
test
push
cmpsb
mov
movsl
in
js
jb
push
lds
and
push
fstl
insl
and
sbb
xchg
mov
mov
dec
fwait
in
aas
ljmp
jl
stos
jo
repz
outsb
js
mov
adc
cltd
js
inc
stos
mov
push
daa
sub
xchg
add
xor
iret
sbb
sub
std
mov
pop
or
mov
cs
add
pop
push
test
cmp
pop
jno
inc
scas
sub
xor
les
lahf
pop
aam
test
lods
testl
xor
int3
cmpsb
jecxz
lds
movb
xor
test
xor
jno
xchg
push
sub
js
fmuls
arpl
popf
or
jno
cmpb
lods
pop
ss
add
xlat
lds
mov
in
pop
lret
shr
mov
mov
out
pop
push
aas
insl
lahf
insl
push
sti
mov
push
mov
arpl
xchg
dec
insl
divb
out
les
dec
adc
out
loopne
xchg
cmc
jae
fbld
imul
xor
std
bound
jnp
jo
out
sti
shrb
mov
mov
adcb
push
dec
fwait
in
bsf
mov
imul
popl
push
out
sub
fucom
les
cmp
cmpsb
andb
les
aam
lcall
stos
outsl
cld
jge
lcall
nop
jge
gs
dec
cli
fs
xchg
xchg
xchg
int3
fadds
ror
pop
ja
pop
sbb
adc
mov
sub
loop
adc
lret
loop
mov
jb
mov
sub
xor
inc
xlat
outsl
xor
add
sbb
fimull
icebp
stos
inc
adc
int3
data16
je
movsl
mov
pop
push
adc
bnd
push
lods
imull
xchg
pop
mov
pop
inc
lahf
cmpsl
push
lret
add
xlat
adc
sbb
and
cwtl
int3
popa
stc
push
ja
pop
fistpll
pop
mov
pop
in
les
stc
adc
cmc
lcall
fsts
leave
or
popa
scas
mov
pushf
adc
cmpsb
jae
jge
and
mov
xor
lahf
test
sbb
xchg
push
in
ds
push
lcall
pushf
outsl
lods
mov
les
in
fisubs
adc
pop
mov
gs
addr16
cwtl
sbb
clc
dec
shlb
scas
mov
dec
outsl
push
inc
jne
dec
aad
test
js
jg
shrl
or
adc
out
mov
cwtl
pop
jb
pop
jno
pop
pop
xchg
xchg
fs
mov
jne
pop
mov
mov
jae
push
pop
push
nop
mov
shl
xchg
ljmp
push
stos
insl
sub
sub
push
or
mov
les
aad
lock
fldenv
dec
add
sbb
aaa
mov
fiaddl
ret
mov
or
push
aaa
lods
and
or
fs
inc
jnp
pop
test
testl
and
dec
cmc
adc
push
inc
ret
add
rcr
cmp
loopne
mov
fsubl
outsl
push
lahf
xchg
shl
xchg
outsb
loope
stos
mov
dec
add
or
jge
jge
xchg
pop
xchg
test
xor
lcall
pop
sbb
mov
jecxz
adc
push
loop
clc
mov
imul
or
pop
cmc
jns
cmp
in
fld
lea
xor
lret
shlb
fsts
cmpsb
jg
shlb
repnz
nop
lea
loopne
dec
pop
dec
adc
test
add
insb
lcall
jmp
nop
sti
jl
cltd
xlat
popa
xor
imul
lock
dec
aaa
xlat
popf
dec
pop
xchg
jg
cmp
jnp
and
sub
pop
or
or
jp
repnz
mov
add
mov
add
push
leave
mov
lcall
mov
cmp
xchg
fstpl
sub
sub
inc
and
popl
loop
js
dec
pushl
push
mov
insl
xor
enter
scas
fbstp
jae
push
xor
mov
cs
and
mov
repnz
inc
ret
cs
fs
xor
jns
fwait
in
testb
sub
bound
sbb
pushf
xchg
fndisi(8087
in
or
shll
xor
lretw
orb
cmp
add
es
cmp
pushf
iret
inc
jmp
loopne
out
jb
jns
xchg
and
cmpsl
mov
adc
push
cmp
adc
fnstsw
pop
dec
mov
dec
xchg
rcrl
stc
shll
jecxz
mov
mov
jg
lcall
jecxz
dec
mov
test
pushl
or
mov
inc
cli
ja
and
sub
adc
cmpsl
std
into
mov
mov
outsb
mov
flds
push
lcall
xlat
es
repz
int3
js
dec
fisubs
cmp
in
insl
add
jmp
sub
or
jmp
dec
jecxz
or
fildll
add
sub
mov
test
xchg
push
gs
xor
cmp
push
outsl
adc
and
pushf
fwait
aad
in
mov
xchg
cmp
push
xchg
ja
lods
mov
cmp
jne
rcrl
pop
lods
fiadds
jo
lret
iret
and
jmp
scas
push
lret
xorl
fwait
lods
dec
sbb
pop
adc
sar
loope
das
hlt
aaa
adc
fcomps
cmp
xchg
cmpxchg
jb
nop
enter
outsb
mov
or
mov
mov
mov
aaa
adc
fwait
lret
clc
lock
mov
push
mov
cmpl
xchg
les
fldenv
xlat
xchg
test
adc
lds
dec
movsb
pushf
and
das
js
lret
mov
pop
fnstcw
fs
inc
xchg
dec
loop
insl
sub
push
xor
dec
cs
xchg
pop
popf
shl
cmp
mov
lcall
movsl
fistl
mov
bound
inc
xor
subb
mov
push
xorb
addb
adc
sbb
mov
arpl
mov
mov
push
stc
jp
push
add
cmp
xchg
outsl
lret
shl
mov
insl
jp
in
xor
xchg
xchg
sbb
leave
rcl
jae
aad
push
fists
adc
mov
mov
jge
gs
pop
cltd
inc
mov
cmc
dec
repnz
push
mov
jo
or
pop
lock
adc
fildl
fwait
pop
fdivs
enter
xor
mov
je
outsl
mov
inc
out
clc
ss
dec
jns
aas
roll
sahf
nop
mov
and
xlat
mov
push
sbb
insb
mov
aam
push
mov
lea
push
jne
pop
popa
push
sbb
mov
test
lods
test
and
jo
js
push
xchg
mov
sub
in
adc
pop
dec
imul
orb
mov
add
cli
mov
push
push
adc
dec
jae
scas
icebp
bound
hlt
aaa
adc
pusha
ja
fildl
cs
cmp
dec
xor
idivl
push
fiaddl
xor
mov
lock
mov
mov
xor
push
adcb
xor
cmp
sub
ja
rorb
mov
and
ljmp
and
les
repnz
jns
cltd
mov
ret
add
cmp
sbb
repnz
aad
pop
inc
jg
sbb
bound
mov
pusha
cltd
xor
test
pop
xchg
shl
jnp
push
shlb
psubq
ss
call
insb
jl
cmpsb
mov
test
push
pop
andb
notb
mov
pop
sbb
xor
ret
sub
sub
cmp
cmp
push
adc
or
cld
loop
mov
repz
imul
movsl
iret
jmp
add
adc
aad
cmc
mov
mov
lret
and
or
lods
frstpm(287
stos
sbb
dec
lea
cmp
nop
and
jg
fwait
mov
inc
push
scas
jns
jmp
mov
push
add
dec
stos
xor
stc
ja
lods
inc
xchg
pop
in
nop
or
es
push
cmp
ret
pop
or
cli
dec
lahf
or
cmp
mov
sbb
dec
addr16
aam
daa
push
lods
add
inc
inc
adc
out
stc
int
packuswb
sarl
cmc
fmul
mov
jbe
adc
inc
xchg
cmp
les
xchg
mov
rcr
stc
roll
repz
leave
int
divl
dec
adc
or
fwait
mov
jns
xor
sbb
pop
addr16
sbb
sbb
cmp
aad
mov
orb
loop
push
leave
pop
nop
or
popa
out
lods
daa
xchg
or
inc
sbb
jle
fcoms
shll
jne
lods
and
add
into
fcmovu
adc
daa
cmp
pop
ds
mov
push
scas
jge
jb
adc
jmp
cmp
fwait
leave
or
mov
mov
or
aad
bound
adc
sbbb
das
mov
lods
enter
mov
push
pop
push
lahf
mov
iret
push
outsb
out
add
lcall
mov
inc
sar
test
mov
lods
andl
dec
ret
pushw
sbb
cmp
jp
shrb
std
sub
sub
das
bound
mov
lahf
adc
mov
dec
daa
dec
xchg
out
mov
out
jg
pop
pop
lahf
xor
imul
cltd
cli
adc
jno
mov
es
inc
inc
shlb
popa
pop
arpl
ret
add
cmp
sbb
fsubl
fisubl
mov
mov
xchg
mov
sbb
ret
pop
add
fcmovu
mov
jbe
in
mov
xchg
xchg
dec
iret
adc
xchg
or
popf
fnstcw
divb
pop
hlt
adc
and
adc
repnz
add
pusha
cmp
pop
and
xor
xchg
sub
inc
notb
mov
js
jns
pop
or
int
ds
xchg
mov
ljmp
je
rclb
sbb
out
mov
ds
pop
mov
stos
popl
int3
lea
fists
inc
fs
cmpb
stc
mov
lods
sbb
pop
es
jae
and
xchg
lea
adc
call
sub
das
lods
sub
sbb
adcl
aam
imul
aas
jp
inc
fiaddl
das
insl
pop
shll
xchg
ja
fcomi
dec
mov
inc
in
push
addr16
sbb
xchg
movsb
into
rcrl
sbb
ds
cld
ret
lods
mov
xchg
test
rolb
or
enter
mov
adc
inc
push
inc
pusha
test
lock
jg
xor
out
mov
bound
outsl
pop
add
pusha
sti
outsb
mov
pop
jl
or
popa
int3
xchg
insb
fstpl
xchg
jge
and
add
mov
sti
mov
mov
idivl
es
leave
cmc
jo
push
into
push
sbb
lods
push
pop
mov
fildl
mov
jg
cmpsl
fnstenv
push
fildl
mov
inc
fs
and
popa
movsl
pop
pushl
lds
ret
push
sahf
pop
pop
inc
lds
pop
sub
mov
vpaddb
mov
call
xchg
pop
adc
mov
mov
and
fnsave
push
fldcw
sbb
pop
sbb
enter
dec
inc
stos
movsl
gs
xchg
imul
and
mov
imul
mov
inc
sub
pop
sbb
push
cmp
adc
jno
xor
call
pop
cs
sahf
and
in
mov
dec
movsl
push
mov
mov
jecxz
add
jmp
mov
inc
inc
lahf
mov
jns
dec
and
and
jge
adc
adc
cwtl
xchg
adc
fwait
inc
mov
jmp
clc
and
mov
and
cld
js
and
xor
aas
mov
loop
dec
cli
sahf
lcall
mov
insb
loopne
clc
or
arpl
in
cmp
stos
mov
pusha
jbe
add
mov
rcll
dec
pop
xor
in
push
scas
repnz
mov
inc
out
fistpll
pusha
pop
cmp
cs
mov
add
fistps
pusha
outsb
call
pop
mov
leave
push
fdivr
iret
and
lcall
fists
ja
cmp
icebp
jns
cmp
cmp
lock
push
sbb
pop
push
pusha
aam
jle
mov
bound
sarb
cmc
std
pushf
lret
insl
cmp
or
ret
jae
in
push
outsb
push
pusha
push
pop
leave
mov
jmp
inc
or
mov
sbb
pop
and
mov
jg
cmp
dec
push
lods
xchg
rcl
fsubrp
loope
lret
les
jp
shlb
rol
push
mov
and
sub
jbe
push
and
mov
mov
pop
inc
jmp
inc
mov
scas
std
jae
or
mov
shrl
fbld
lods
pop
jo
dec
xchg
daa
inc
not
add
xchg
idiv
push
dec
cmp
mov
sub
repz
in
pop
mov
sbb
jne
push
out
push
aas
out
mov
mov
out
subl
js
fistpll
dec
bound
inc
popf
and
ss
loope
or
int3
xor
lcall
and
test
inc
rcrl
sbb
push
xchg
push
xor
xchg
jmp
dec
push
popa
sbb
inc
sahf
repnz
out
jns
in
adc
loop
cmp
push
cs
popa
xchg
inc
dec
pop
nop
sbb
leave
popf
outsl
jno
insb
sub
jecxz
cmpsb
xchg
jmp
hlt
dec
nop
pusha
jno
outsb
and
stc
or
mov
xchg
adc
jg
mov
dec
hlt
mov
loope
push
fisubrs
gs
pop
pop
imul
stos
lret
cld
add
and
sub
cmpsb
cmpsl
adc
sbb
and
leave
mov
out
mov
cmp
inc
jno
fdivr
js
mov
imul
jecxz
and
jns
lock
call
cs
lret
add
add
int
or
adcb
mov
push
jnp
ss
mov
or
mov
shll
and
out
xor
mov
ja
lock
lcall
lods
ljmp
adc
mov
test
sub
sbb
dec
out
sub
out
dec
clc
mov
ds
and
test
into
repz
pop
aam
hlt
imul
lret
imul
dec
ljmp
imul
and
mov
sar
add
testb
pop
sbb
mov
sbb
sub
add
cmp
pop
adc
cmpsb
push
enter
mov
push
shll
sub
inc
sbb
xchg
mov
pop
rcl
repz
movsb
mov
dec
xchg
rcrb
mov
lods
inc
lret
movsb
mov
cmpsb
fnsave
repz
mov
jp
loope
mov
aad
jg
out
call
frstor
iret
mov
mov
lds
test
negl
adc
pusha
xchg
cmp
test
inc
xchg
pop
mov
jl
mov
test
clc
sahf
mov
and
ljmp
xor
mov
xchg
mov
test
pushf
stos
out
dec
addr16
lods
xchg
test
jmp
jp
sbb
and
jg
and
insl
push
rcrl
push
fsubrl
add
mov
in
xchg
mov
addr16
sbb
lods
cli
insb
in
push
int
mov
sub
rorb
jp
pop
imul
push
fnstsw
mov
cmpsl
fldl
inc
sbb
outsl
xor
es
movsb
popf
cwtl
jle
lahf
cmp
push
mov
in
imul
inc
push
add
addr16
insl
cmc
in
adcb
popa
jb
test
mov
addr16
mov
add
cmp
and
outsb
jae
push
imul
sub
inc
inc
push
mov
mov
jecxz
cwtl
mov
bound
ficompl
push
sub
adc
rorl
mov
add
inc
add
jecxz
aas
mov
mov
push
ljmp
sar
or
fwait
pusha
mov
lock
jbe
dec
roll
das
addr16
xchg
in
mov
lea
shll
sahf
lds
xlat
sub
add
or
dec
scas
push
add
add
fwait
pushf
iret
inc
ds
push
in
dec
pushf
in
fimuls
cmp
jno
shlb
xchg
and
cmp
fisttpll
arpl
and
push
out
pop
iret
pop
sbb
out
dec
dec
jge
or
and
lods
jg,pn
rol
les
cli
inc
push
std
add
jle
adc
push
orb
fs
cltd
sub
sub
add
fistl
insb
adc
jecxz
lods
or
scas
aad
push
movsb
cmp
dec
mov
arpl
jmp
pop
jle
push
push
int3
or
mov
mov
mov
aad
mov
jmp
frstor
jb
shll
bound
pop
dec
push
arpl
push
mov
mov
add
dec
xchg
cmp
sbb
lea
cmp
xchg
inc
adc
xchg
pop
das
push
inc
jnp
es
data16
aaa
pop
iret
push
inc
mov
pushf
sbb
pop
and
push
inc
fdivl
push
inc
aad
shlb
in
test
fcmovbe
sbb
cmpsl
stos
out
shll
pop
mov
jne
jmp
cmp
push
mov
push
pop
mulb
adc
repnz
adc
fmul
mov
aam
cmp
mov
stos
sar
sub
jne
scas
lods
fnsave
xchg
sbb
stos
adc
or
fdivs
pop
cld
pop
jb
pusha
mov
fsubrl
leave
adc
jp
dec
cmp
mov
inc
outsl
inc
popa
fisttps
jle
xlat
mov
arpl
int
lret
xor
es
pop
sahf
repz
fmull
stos
pusha
or
std
adc
mov
xor
push
mov
mov
push
test
jge
cmp
mov
xor
into
std
lea
into
das
aas
adc
pop
jns
lds
orl
xchg
push
xor
stc
sarl
frstor
or
xor
incb
ds
shlb
lock
es
hlt
push
outsl
jb
daa
loope
add
and
mov
add
inc
or
push
cltd
xchg
xor
and
scas
out
cmp
adc
mov
mov
movsl
and
rcrb
stos
mov
stc
loope
pop
fsubrs
cmpsl
popl
xchg
xchg
push
or
sub
loope
cmp
int3
push
xchg
das
push
addb
dec
pop
in
sbbl
add
popf
jno
cmp
or
mov
popf
fmull
sbb
sub
loope
rorb
sub
enter
sub
std
mov
inc
adc
popa
mov
adc
jo
lods
cmp
leave
pop
sbb
mov
scas
ret
xor
jb
adc
jp
jl
add
jg
idivb
jmp
leave
iret
add
shll
test
add
lret
dec
aas
cmp
push
or
rolb
out
cmp
sbb
dec
ret
xchg
mov
push
icebp
decl
idivb
scas
daa
repz
push
and
or
in
mov
lea
mov
jecxz
xor
or
cltd
jmp
mov
dec
int
xor
mov
inc
add
fsts
mov
ss
lret
pushf
adc
mov
jp
leave
sub
movsl
sbb
cs
add
pop
jb
xor
clc
jg
les
add
jmp
mov
call
cwtl
aas
push
out
call
or
and
xchg
lahf
js
or
dec
andb
jnp
push
int
int3
js
mov
and
mov
je
sbb
lea
xchg
int
adc
dec
xor
sbb
sub
jecxz
and
inc
and
xchg
cs
push
sbb
sti
out
add
cmpsl
jne
popf
in
or
lea
mov
cltd
shl
push
ljmp
mov
popf
das
and
and
cmp
ds
pop
aas
inc
fidivl
popf
xchg
jns
mov
lcall
and
sarl
in
inc
arpl
inc
pop
out
pop
call
mov
push
and
movsl
mov
enter
addr16
ror
lock
cmp
loopne
in
lock
add
mov
mov
jns
popf
cmpsb
dec
pop
stos
push
and
mov
cld
cmp
call
aaa
mulb
test
inc
iret
sub
icebp
or
lds
jnp
cmp
test
cli
movsl
inc
cld
push
jne
adc
adc
xchg
imul
fisttpl
xchg
inc
ss
mov
mov
pop
or
mov
push
inc
cmpsl
repnz
into
dec
mov
dec
popa
mov
push
mov
sub
loop
xchg
adc
in
ds
mov
popf
lods
sti
and
dec
out
push
jo
pop
mov
mov
dec
loope
iret
pushf
std
mov
push
mov
popa
jmp
stos
arpl
repz
inc
sub
jg
sbb
jno
pop
aad
dec
pop
pop
scas
pop
inc
push
sbb
aam
and
fsub
push
pop
test
movsb
arpl
sbb
sub
adc
lret
mov
faddp
fnsave
cmp
push
or
xchg
mov
subb
imul
xchg
mov
add
inc
push
xchg
test
jae
sub
xor
adc
or
sbb
dec
and
dec
and
push
sbb
fldcw
xchg
sbb
inc
cltd
paddb
test
push
ds
call
dec
int3
cmp
test
or
or
aam
je
adc
sub
cmc
push
adc
sub
sub
adc
test
out
jo
mov
in
rorb
and
mov
cmp
jp
aas
add
ss
loopne
shrb
dec
cmp
nop
and
cmpsb
cmp
or
aas
dec
movsb
sbb
jnp
sub
fcmovnbe
cmp
push
add
sbb
pop
mov
lea
popf
ja
icebp
fcomps
xchg
repnz
sbb
push
or
sub
push
push
add
je
mov
ljmp
push
hlt
stc
push
dec
sub
adc
sarl
inc
rol
sbb
pop
sbb
push
shr
shrl
add
cmp
pop
inc
mov
arpl
sbb
cmpb
std
adc
int3
mov
cmp
outsl
popa
push
movsb
xchg
inc
add
cwtl
jnp
arpl
les
jg
ffree
mov
leave
mov
push
inc
aam
and
jne
xor
arpl
inc
in
fs
pop
inc
jecxz
es
pop
mov
adc
aad
fidivrs
and
xor
mov
push
cmp
pusha
ret
pushf
dec
lods
inc
sub
mov
loopne
inc
jns
insl
addr16
sahf
jns
bnd
sbb
add
fsubl
and
add
add
loop
adc
sub
xchg
lock
jae
je
pop
cmc
cmp
dec
adc
add
push
std
pusha
jo
pop
sbb
mov
test
ss
pushf
xor
dec
testl
mov
dec
cmc
add
inc
in
ret
mov
fcompl
inc
jbe
jb
adc
mov
fildll
sub
mov
jle
into
mov
adc
add
lods
mov
pusha
outsb
xchg
enter
lea
cld
mov
hlt
xchg
inc
cmpsl
mov
fimull
pop
xor
loopne
push
mov
repnz
pop
outsb
and
gs
mov
xlat
stc
std
lods
lahf
sbb
adc
push
sbb
sub
mov
add
xchg
stc
inc
jmp
scas
inc
cmp
mov
js
push
pop
ja
gs
add
sub
cmc
sti
adc
jbe
pop
addr16
or
and
push
shlb
mov
ds
pop
hlt
mov
pop
test
sahf
cwtl
inc
lea
clc
pop
lea
and
cmp
add
cltd
in
adc
and
mov
std
xchg
cmpsb
dec
xor
cmp
dec
adc
mov
pop
and
or
or
add
xchg
xor
nop
out
dec
pop
cwtl
pushf
pop
add
dec
test
loop
fs
push
mov
mov
fimull
icebp
movsb
lret
adc
ljmp
das
das
loop
sbb
and
jge
dec
rol
fcomps
shr
jno
xlat
movsb
xchg
mov
insb
pop
pusha
stc
inc
inc
xor
test
push
hlt
js
dec
add
int
xchg
in
hlt
in
fs
sbb
fisubs
xor
sub
mov
jmp
dec
add
sahf
sub
jl
jge
cmp
xchg
push
push
push
in
mov
xor
es
adc
je
lea
add
xchg
push
leave
mov
pop
and
ss
dec
bound
in
movsl
sbb
push
movsb
jb
jp
dec
xchg
cmp
cwtl
push
scas
add
lcall
jmp
int
mov
and
mov
mov
ja
popa
mov
mulb
inc
jp
cmc
push
aaa
aad
jp
daa
lret
out
lds
sbb
pushf
jne
pushf
cli
mov
cwtl
jno
sub
push
popa
das
jo
cmp
xor
out
xor
jb
push
pop
pushl
icebp
ljmp
push
pop
movsb
popl
popa
push
inc
cld
movsl
and
cmp
call
mov
fadd
lahf
dec
xor
popa
out
mov
into
outsb
je
sbb
or
pop
enter
pushf
sub
xor
lods
xchg
mov
sahf
loope
sbb
cltd
sahf
lret
xor
mov
mov
cmp
into
sarl
xchg
jb
dec
push
lcall
sti
lcall
sbb
rorl
push
out
or
add
push
scas
icebp
in
cwtl
mov
mov
jo
popf
or
inc
cld
or
jl
jns
repz
shll
pop
pop
lret
add
push
rol
into
jb
gs
dec
push
cmp
fucom
jecxz
cwtl
test
cmpsl
loopne
inc
sti
sbb
xchg
jnp
cltd
sbb
mov
jno
jge
xlat
nop
xchg
lret
lock
pusha
mov
outsl
pop
rclb
test
push
inc
sub
subl
lea
adc
inc
and
int3
rorb
ret
adc
and
fisttpl
mov
int3
in
mov
xchg
in
test
frstor
xor
and
push
cltd
or
ret
jae
in
pop
jecxz
flds
ja
pop
push
iret
jno
mov
stc
nop
pop
js
imul
dec
aas
lods
sub
sub
int3
push
xchg
in
inc
aad
mov
add
jl
mov
leave
call
sub
insl
jns
xchg
inc
cld
xor
ret
lahf
rcr
mov
gs
fimull
inc
adcl
dec
aam
cmc
fsubl
cmpsl
int
lea
popa
insl
sbb
adc
call
arpl
mov
sub
inc
dec
rcrl
fnsave
mov
fnstcw
incb
loop
adc
lods
lea
fbld
adc
add
popf
pusha
xor
jno
mov
pop
scas
popf
dec
adc
mov
pop
leave
dec
movsb
xchg
xor
adc
mov
adc
enter
sti
jle
imul
add
pop
js
repnz
cmp
stos
sbb
dec
fcoms
jecxz
cmpsb
mov
jmp
stos
popa
pop
dec
add
push
mov
orb
insb
xor
mov
out
int
and
sub
fs
push
cli
push
sub
hlt
ss
sbb
call
mov
arpl
push
jo
jle
adc
out
ljmp
out
cmp
fsubrl
hlt
out
pop
sar
rorb
in
sub
hlt
sbb
addr16
mov
dec
gs
enter
scas
sar
bound
fwait
sbb
pop
pop
xchg
adc
sub
int3
xor
das
aad
xchg
mov
cmpsb
inc
repnz
add
aaa
jne
or
push
fsubp
fildl
mov
and
dec
inc
pop
inc
subl
jl
mov
sbb
loop
mov
lcall
pop
mov
xor
and
vmovss
pushf
push
insb
imul
idivb
ret
loop
mov
nop
and
repz
pop
sbb
movsb
stos
in
clc
push
jo
fsubr
aam
cmp
lahf
repnz
lret
lds
scas
stc
mov
jns
jo
ss
fcoml
dec
xor
bound
push
sbb
add
das
nop
in
mov
xor
daa
mov
fsubr
fbld
pushf
sbb
inc
popf
dec
pop
rcrl
aas
xor
push
add
mov
pop
jp
mov
fmul
push
jmp
or
mov
test
sbb
adc
mov
testb
fbstp
adc
out
in
mov
ret
xor
and
sbb
rolb
js
sub
push
rcll
sbb
loope
push
fnstsw
sar
stos
in
daa
and
fisubrs
es
xor
and
or
sbb
cmpsb
sarl
repz
push
sub
mull
and
mov
and
shlb
or
inc
mov
adc
jns
lds
add
aaa
popf
sbb
pushf
rol
daa
lcall
inc
int
add
inc
mov
in
dec
push
insb
push
adc
adc
lea
mov
out
or
adc
mov
repz
int
pop
insb
mov
inc
sbb
add
jg
lods
iret
inc
pusha
jl
sub
mov
jmp
nop
cmp
testl
fwait
xlat
jmp
mov
pop
lods
scas
cli
inc
sbb
and
mov
jbe
ror
mov
inc
mov
scas
jl
scas
lock
or
icebp
sbb
or
into
jmp
dec
and
rolb
push
jge
pusha
addr16
jns
bound
es
addr16
loop
call
mov
jg
add
outsl
mov
lock
jp
cmpb
jg
ss
or
mov
pop
pop
inc
nop
mov
xlat
or
mov
addb
add
push
lods
iret
and
push
das
leave
pop
dec
add
rcrl
inc
push
fcompl
xchg
out
call
insb
stc
add
and
sub
adc
mov
fistpll
cli
lea
inc
pop
and
inc
test
push
jbe
inc
mov
mov
mov
ja
dec
loopne
sub
mov
cmc
mov
mov
or
mov
arpl
lea
in
orl
ja
adc
sub
mov
sub
mov
out
cmp
in
ds
xor
xor
cld
js
out
fistpl
mov
mov
adc
pop
mov
cmpsl
xchg
jne
fisubl
sub
je
enter
scas
push
jnp
lds
xor
push
dec
xor
push
xchg
insl
add
adc
xchg
mov
jcxz
dec
cltd
and
cmpsb
and
pop
pop
icebp
test
stos
aam
xchg
inc
jecxz
incb
cltd
daa
outsl
sbb
mov
push
in
xchg
lock
scas
inc
push
loope
nop
sarb
inc
pop
sub
inc
add
pop
or
lds
and
das
and
pop
dec
dec
lods
sub
mov
xor
in
mov
idivl
inc
lock
add
outsb
mov
lods
sahf
js
or
rcrl
mov
mov
decl
sbb
pop
xchg
sbb
jae
mov
mov
hlt
ret
ret
xor
repz
dec
or
cmp
mov
into
jnp
lds
pop
pop
fwait
std
mov
fs
pop
xchg
sahf
rcrb
adc
sbb
lahf
sub
mov
mov
cmp
imul
cmp
dec
or
inc
jb
xor
or
mov
xchg
or
stos
push
inc
sbb
inc
inc
mov
cmp
jmp
xchg
aas
push
shl
push
addb
dec
jle
mov
mov
lret
scas
scas
add
mov
js
fwait
imulb
hlt
out
popf
pop
adc
mov
sub
mov
or
popa
test
pop
aad
jo
jge
and
adc
pop
pop
adc
ror
jb
mov
sub
in
hlt
int3
movnti
jp
pop
jmp
push
movsl
iret
enter
popa
ss
cmp
clc
fstps
out
rol
ret
mov
nop
xchg
inc
gs
je
inc
loopne
je
mov
cmpsl
testb
mov
jne
mov
fwait
jno
mov
or
xchg
mul
sbb
mov
popf
sub
push
mov
stos
sub
jno
dec
in
inc
in
int3
pop
jnp
jl
lahf
xchg
mov
pop
dec
xor
jns
imul
mov
rcll
mov
sbb
popa
lcall
mov
pop
mov
test
cmpsl
sub
out
cmp
mov
pop
jne
lcall
push
sbb
and
cltd
or
cmp
inc
or
mov
push
popa
inc
sahf
repz
add
icebp
imulb
aaa
push
shrb
jg
insl
arpl
into
adc
lret
pop
insl
dec
pusha
in
adc
cmp
popf
inc
add
push
loop
jg
add
sarl
loop
inc
cmpsl
fimuls
adc
jecxz
jns
inc
fdivl
insl
xor
mov
addr16
push
sub
and
mov
lret
mov
xchg
stos
pop
sub
mov
jns
jbe
out
add
cwtl
cmp
stc
out
xor
gs
push
mov
xchg
sbbb
push
push
cmp
fsts
mov
dec
sub
pop
mov
mov
add
ljmp
into
testl
stos
and
mov
xor
xchg
push
shlb
jbe
outsl
ss
jbe
adc
pop
jno
push
insb
lret
and
es
je
add
sub
or
or
aam
mov
mov
jmp
cmp
cmpsb
cmp
fdivs
in
xor
lods
out
hlt
mov
cmp
or
addr16
cmpsb
cmp
imul
inc
xor
nop
loopne
ret
mov
scas
push
mov
outsl
jg
ljmp
sbb
push
stc
or
or
aam
mov
lods
jmp
in
int
out
push
pushf
rorl
fidivs
sbb
pushf
call
in
iret
in
mov
enter
xor
sar
dec
pop
or
stos
mov
jg
sub
and
xchg
adc
adcb
push
push
pop
dec
test
popa
push
cmpsl
movsb
sub
cwtl
dec
aas
test
ljmp
dec
xor
push
fwait
sbb
jb
lcall
stos
cs
ss
pusha
movsb
mov
inc
sbb
adc
into
dec
cmp
insl
repz
test
dec
shlb
xchg
xor
and
sahf
arpl
mov
mov
pop
outsl
sub
sbb
test
fstpl
and
lret
fmuls
insb
xchg
ret
cmp
push
or
insl
mov
cli
mov
xlat
mov
into
or
push
cli
mov
repz
fs
xor
jb
pop
inc
xchg
sbb
adc
mov
jb
nop
adc
pusha
or
xchg
push
idivl
dec
mov
add
sti
mov
nop
stc
sbb
cmp
test
adc
adc
into
dec
mov
or
imul
lds
inc
decb
mov
outsb
jbe
bound
test
sub
inc
dec
inc
inc
xor
popa
out
decl
inc
scas
loop
cli
push
stos
jle
icebp
clc
sti
lret
mov
add
mov
xor
jo
cmp
add
adc
add
sbb
jae
adc
and
lods
das
sub
clc
or
cwtl
bound
adc
adc
clc
mov
mov
xor
or
and
andl
scas
mov
nop
and
add
out
mov
or
mov
jb
int3
lcall
or
push
lret
or
add
repz
test
push
mov
ret
pop
fldcw
mov
faddl
jge
lea
push
negl
aaa
push
ss
pushf
fsubp
sbb
sbb
mov
add
jno
mov
inc
jbe
push
sbb
and
outsl
inc
mov
inc
xor
lea
xor
mov
jg
xchg
and
stc
jb
adc
jle
int
push
mov
inc
fdivr
or
push
adc
in
push
sbb
mov
sbb
lret
jb
cmp
jbe
mov
xchg
ja
jno
test
out
and
cmova
bound
out
jae
and
orb
daa
push
xchg
mov
push
pop
jl
sub
jg
push
movsl
insb
lds
cltd
lret
inc
mov
ficomps
daa
or
ret
leave
sub
push
add
lret
add
mov
dec
adc
sbb
jnp
sub
shll
in
mov
xor
dec
je
aaa
in
ret
test
or
pop
aas
dec
call
xchg
out
jg
pop
into
mov
sub
push
pop
or
insl
ret
int
xlat
inc
neg
lahf
xor
lret
cwtl
push
scas
or
out
pop
adc
sub
cmp
rclb
xchg
mov
or
xchg
push
dec
shll
cwtl
test
pop
and
shrl
jbe
in
cmp
push
rclb
pusha
jl
pop
sbb
div
das
cmpsb
sub
stos
leave
adc
pop
sbb
xor
mov
adc
scas
shlb
mov
xor
fmul
incl
pop
sti
and
sub
sarb
jl
adc
ljmp
iret
repz
pop
jbe
outsl
test
lcall
cmc
mov
mov
adc
mov
loopne
pop
lock
shll
into
push
push
push
jo
cmp
fistpll
push
iret
les
int
inc
sahf
xchg
arpl
imul
xlat
pop
rorb
sub
lock
rcrl
pop
into
lahf
mov
mov
stos
jbe
fists
cmp
outsb
push
out
or
mov
lret
add
test
adc
mov
mov
loopne
sbb
adc
cmp
gs
adc
pushf
loop,pn
jno
jmp
out
cs
jge
jmp
stos
sbb
jle
and
int3
add
inc
xlat
mov
xchg
xchg
in
push
popf
or
and
shlb
pop
cli
aas
imul
mov
xchg
outsb
adc
jnp
mov
xchg
push
add
pushf
mov
pop
stos
xchg
xor
mov
scas
pandn
int
add
addr16
and
inc
repnz
inc
sbb
inc
xor
mov
jne
fwait
dec
mov
xchg
mov
dec
lahf
aaa
insb
fsubl
add
pushf
insl
push
adc
cld
cmp
push
scas
enter
aas
sub
inc
loopne
fcoms
fdivrl
rcrl
add
aad
or
jae
aaa
shll
lods
jne
xchg
xor
pop
and
fnstenv
jns
in
push
mov
fistl
aaa
mov
mov
out
sbbl
ds
jbe
je
stos
nop
insl
inc
repnz
and
pop
sub
xlat
movsl
movsl
jl
js
jns
and
jae
mov
sbb
add
push
imull
adc
inc
iret
fldl
mov
rcl
dec
pop
filds
cmp
aad
out
mov
add
data16
mov
push
rorb
shlb
pop
jle
sub
sbb
push
inc
mov
div
sbb
out
sbb
or
leave
aam
xchg
push
xchg
loopne
pop
push
xlat
shll
in
mov
push
cmp
cmp
and
icebp
ss
outsl
and
loop
mov
mov
test
mov
repnz
mov
call
lock
push
mov
gs
rorb
xchg
jae
dec
cs
movsl
jp
popa
lret
std
addl
xchg
inc
jp
jae
or
cmp
jne
aam
sbb
add
inc
repnz
cwtl
cltd
adc
jo
cmp
testl
dec
mov
fwait
hlt
test
inc
push
cmpsl
jg
adc
pop
addl
jp
or
xchg
lods
dec
cwtl
inc
xor
mov
ja
mov
push
or
inc
in
ret
sub
arpl
bound
loope
lods
js
mov
sub
lcall
push
aam
rclb
push
lahf
xchg
dec
hlt
inc
cwtl
xchg
jnp
or
pop
shrl
pop
movsb
dec
cs
mov
cwtl
sahf
cmp
jge
mov
xor
push
adcb
add
push
enter
test
mov
fiaddl
push
lds
loop
les
std
test
lods
push
and
das
out
pop
leave
xchg
add
xor
fldl
mov
mov
xchg
mov
mov
loope
out
xor
xchg
test
cmp
xor
imul
and
in
je
xchg
xchg
pop
movsb
ret
outsb
lret
loopne
inc
sub
sub
into
incl
sub
std
adcb
repz
test
out
aam
imul
sti
sti
testl
jge
add
imul
repnz
mov
mov
jp
cmpsb
jae
aas
aad
pop
cmp
fiaddl
cmpsl
jo
repnz
jg
shlb
jmp
aaa
inc
push
scas
or
std
outsb
div
imul
pop
mov
lcall
mov
daa
xchg
mov
xchg
inc
lock
mov
mov
jmp
pushf
in
xchg
jo
dec
add
imul
push
push
mov
sub
dec
aad
lahf
lcall
insl
jp
mov
aas
pushf
jne
dec
jne
test
fdiv
push
imull
out
setae
and
jle
sbb
push
jno
cmpsl
adc
pushf
sbb
imul
push
inc
mov
fstl
lcall
mov
cmpl
pushf
xchg
or
mov
cmpb
xchg
cld
mov
or
je
cmp
sub
es
shlb
dec
in
mov
pop
leave
sar
mov
xchg
and
stc
mov
push
dec
push
outsb
push
cmpl
out
cltd
xor
loopne
rolb
or
sub
dec
les
jecxz
xchg
iret
push
xchg
frstor
xlat
cmp
lods
pusha
sbb
sub
popa
sub
xor
aad
add
cmp
xor
mov
mov
or
nop
cmp
fstl
fs
stos
push
js
sub
scas
jnp
push
sahf
dec
jg
into
lahf
push
adc
push
daa
jmp
aas
xor
loop
jno
or
mov
pop
push
inc
adc
xor
pop
fdivrs
mov
jae
inc
mov
scas
test
sbb
bound
sbb
mov
sub
jae
popf
add
dec
rcrl
cltd
pop
cmpl
rorb
cltd
js
gs
prefetchw
inc
sub
inc
mov
adc
xor
repz
xor
out
fwait
adc
repz
mov
push
xor
in
sbb
je
pusha
cltd
sub
pop
xchg
add
push
cli
push
loope
jmp
xchg
dec
stc
pop
aaa
cld
or
into
or
jne
mov
bound
adc
cmp
pop
outsl
dec
mov
push
push
mov
xchg
fdivrs
xorl
sbb
test
stos
or
cmp
xor
fisttpl
xchg
bound
in
fnstsw
popa
inc
imul
xor
into
cmp
int
popf
dec
inc
mov
imul
mov
cld
sub
and
mov
mov
int
sahf
jo
fsub
jo
fisubrl
push
cwtl
inc
push
adc
data16
push
dec
cwtl
rcr
pop
cmp
inc
stos
or
icebp
jno
xchg
pop
popa
inc
dec
pusha
fs
shr
pop
push
lds
jg
imul
negb
cmpsl
mov
mov
or
xlat
add
pop
inc
stos
incl
sbb
jb
pop
sahf
mov
cmc
adcb
icebp
lcall
adc
enter
dec
xlat
jbe
pop
cmpsl
stos
cmc
dec
nop
enter
mov
addl
fwait
add
xchg
jl
and
sbbl
out
test
sub
jne
dec
and
lahf
rclb
out
or
add
xchg
jne
int
inc
sbb
jnp
dec
mov
cli
mov
rclb
mov
test
std
stos
aas
xor
dec
add
rorb
sahf
jo
cli
xor
lds
jae
xorb
push
jbe
ds
mov
and
add
stos
mov
icebp
xchg
insl
xor
insb
and
std
push
pushf
and
or
lds
aam
push
mov
and
leave
inc
push
dec
test
loope
mov
cli
add
dec
sbbl
push
jle
psllq
lock
out
jle
popa
push
xor
mov
add
imul
mov
or
jl
inc
lret
pop
add
pop
dec
out
dec
push
ret
xor
loop
fcomip
jmp
add
adcl
and
popa
fstp
or
dec
mov
je
mov
xor
movups
inc
push
aam
lock
imul
pusha
add
pushf
test
or
test
shlb
sbb
cmp
pushf
cmp
add
lret
push
loope
scas
ss
pop
lds
mov
jp
dec
int
out
inc
push
jg
mov
adc
nop
jg
das
mov
xchg
js
pop
std
arpl
inc
shr
mov
jnp
and
scas
in
push
push
mov
jl
repz
fimuls
leave
cmpsb
mov
fwait
lds
or
or
in
sbb
pop
sti
xor
cmp
das
cmp
cmc
sub
call
or
lret
mov
fwait
add
add
ret
and
cli
adc
cmp
aas
cmpsl
jns
mov
std
movsl
mov
or
dec
push
ja
mov
loopne
push
int
pop
repz
loope
sbb
mov
nopl
inc
cmp
cmp
fsubrp
add
scas
in
adc
outsl
cmpsb
pop
mov
or
out
xor
sbb
ret
fs
daa
jnp
sub
rol
popf
lahf
loopne
stos
push
fwait
gs
cmpsb
xor
shlb
pop
and
jno
es
mov
or
pop
push
sbb
jns
pop
and
inc
mov
mov
mov
dec
scas
adc
mov
push
push
cwtl
push
mov
adc
lahf
jmp
lcall
aas
pop
mov
lret
xor
pushfw
loopne
sbb
loop
inc
mov
xchg
mov
sub
test
shrl
cmp
fwait
mov
add
stos
mov
lea
cmpsb
nop
repz
shrb
jl
and
outsl
fistpll
jle
lret
and
inc
test
jno
dec
sbb
push
push
ficomps
sbb
inc
xor
push
lock
lods
cmp
xor
inc
xchg
es
cs
jno
in
mov
aam
sbb
cmp
adc
cmp
fistpll
mov
call
sub
loopne
mov
xchg
arpl
xor
dec
psrlw
inc
repz
sub
push
dec
xchg
hlt
mov
dec
out
push
out
xchg
roll
push
sbb
loop
xchg
ljmp
or
push
pop
in
nop
iret
lds
cwtl
cld
jbe
aas
les
jl
pop
add
insl
mov
hlt
mulb
pusha
mov
jnp
inc
pop
fdivrs
lcall
adc
popa
lock
add
fmuls
adc
or
popf
mov
gs
outsb
adc
aad
ja
mov
jo
adc
push
mov
sbb
inc
jg,pn
xor
fucom
cld
or
movb
jo
loope
jno
aad
add
fdivrs
xchg
cld
push
mov
mov
daa
loop
das
call
aas
fisttps
push
mov
ret
popa
cwtl
hlt
push
test
hlt
pop
in
outsl
lcall
cmp
int
movsb
icebp
cmp
pop
mov
jae
stc
xor
xor
inc
sahf
sbb
xor
test
xchg
ljmp
inc
cli
movl
sub
mov
xor
inc
test
scas
mov
mov
cs
mov
insb
fbstp
arpl
out
mov
push
lahf
mov
pop
or
sub
jb
int
xor
xor
mov
cmp
or
mov
int
fwait
cmp
popa
aad
call
and
jle
stos
mov
push
ljmp
inc
cmp
add
out
fdivrp
inc
add
xor
fsts
cmp
push
jne
fistl
fldl2e
xor
add
mov
loope
and
mov
mov
clc
push
lods
cmp
lahf
hlt
outsl
mov
hlt
add
pop
inc
dec
and
jp
call
ret
jne
in
stos
mov
xor
lret
lret
adc
jl
xlat
dec
sbb
mov
nop
cmp
outsb
xor
cmc
pop
dec
dec
shl
cmpsl
insb
les
xchg
dec
cmp
lret
jle
or
cmp
and
and
loop
adc
outsb
inc
ljmp
dec
or
jge
into
xchg
outsl
rcll
add
cmpsb
add
outsb
mov
inc
inc
add
pop
and
orl
or
add
push
adc
cmpsb
popf
jae
inc
pop
sbb
fwait
xor
xchg
add
push
out
add
push
jmp
out
ljmp
pop
mov
push
mov
or
mov
rol
add
jbe
push
adc
add
cmp
mov
cmp
mov
cmpsl
inc
movsb
sbb
lret
pop
sbb
orl
or
daa
imul
push
and
hlt
int
adc
jle
ljmp
sbb
inc
xchg
xchg
sbb
data16
xor
add
or
fwait
shrl
and
test
xor
loop
push
rcll
mov
into
pop
fwait
jo
rcrb
dec
aaa
push
inc
fdivrs
push
cmp
inc
and
icebp
cmpsl
sub
aas
pop
cmpsb
mov
cmp
je
inc
adc
inc
jle
jbe
outsb
mov
in
push
mov
jecxz
inc
mov
push
fld
jge
test
push
addl
sbb
mov
jno
ret
clc
in
arpl
call
insb
and
cmp
pop
pop
and
adc
inc
stos
cltd
into
jnp
cld
fsubs
fiaddl
subl
jg
dec
aas
ss
push
aam
cmp
movsb
pop
and
mov
mov
lret
outsl
cmp
adc
lods
add
or
sti
jp
push
in
mov
roll
add
test
repnz
jmp
cwtl
icebp
popf
adc
cmp
add
ret
adc
mov
jae
mov
test
scas
call
ret
sub
movsb
scas
xlat
pop
adc
xchg
ja
scas
lcall
sub
mov
mov
dec
ss
outsb
mov
filds
lahf
cltd
rorl
push
shl
mov
fidivl
cld
faddp
add
mov
dec
mov
adc
jno
mov
lds
xchg
push
repnz
movsl
or
cwtl
lods
insb
pop
in
stos
lret
in
pop
xchg
mov
sti
test
and
pusha
mov
pop
pushf
jne
pop
flds
mov
add
cmc
in
sbb
pushw
dec
fcmovnbe
sarl
inc
xor
imul
int3
cs
sub
aaa
dec
add
ja
sub
sbb
imull
out
mov
gs
ds
cmp
leave
into
xchg
movsb
pop
cmpsb
push
adc
adc
sbb
cltd
jo
int3
pop
cmp
add
test
xlat
ret
icebp
mov
scas
mov
adc
out
test
movsb
dec
sub
xchg
arpl
xchg
dec
mov
frstor
sbb
ss
shl
fsts
pop
clc
das
outsl
scas
sti
ret
decb
fldt
sub
and
push
enter
rclb
push
lods
jmp
sar
sub
insb
sarl
xchg
cli
filds
lock
orl
scas
sub
or
lret
nop
js
mulb
or
dec
add
ret
dec
fucomip
mov
fsubr
aas
sbb
out
arpl
ficomps
ret
xor
sahf
xchg
sub
fidivrs
cli
push
sarb
sub
add
gs
pop
push
fbld
xchg
stos
mov
sti
mov
fstl
sub
jecxz
cmp
dec
repz
outsl
xchg
and
rcrb
adc
loopne
cld
add
rol
imul
sub
stos
andb
push
lds
js
lds
test
leave
test
jns
fidivrs
test
xor
rorb
repz
sbbl
ljmp
pop
ss
inc
push
dec
pop
add
pop
leave
lret
mov
mov
or
inc
mov
mov
add
popa
pushf
mov
fadds
outsb
pop
ds
and
dec
xchg
lods
mov
lods
addr16
push
mov
sbbb
outsb
jne
icebp
and
sbb
sbb
bound
test
decl
in
dec
bound
fst
out
dec
imull
mov
dec
popa
or
push
ljmp
sti
pop
xor
loopne
mov
mov
lods
shl
enter
stos
int
sbb
call
mov
xor
xchg
call
rclb
mov
insb
inc
nop
int
push
popa
mov
jbe
nop
aas
sbb
stc
jecxz
jne
jb
popa
cmpsl
roll
push
insl
xchg
addl
push
jge
leave
cmp
test
repz
mov
xorl
je
cmp
fstpt
xor
adc
or
or
mov
sbb
sub
aaa
add
stc
cmp
mov
add
jmp
sbb
mov
mov
push
popa
loop
sbb
cmpsb
cmp
bound
pop
push
aaa
xchg
mov
outsb
cmpsb
popf
clc
idivl
lret
mov
ljmp
inc
sbb
mov
push
jns
call
jnp
push
clc
or
sbb
mov
mov
in
in
mov
lea
or
sub
loope
rcll
jne
sahf
sbb
xlat
jne
mov
fnsave
imul
or
add
out
dec
mov
daa
stos
or
jb
mov
clc
jae
pop
scas
ljmp
sub
dec
xchg
mov
jne
cli
sub
push
and
in
pop
sar
or
xor
popa
cmp
in
mov
or
movsl
cmp
jg
jne
xchg
mov
mov
and
dec
push
shlb
loope
mov
and
xchg
icebp
cwtl
and
test
das
mov
adc
cs
fidivl
jns
adc
mov
sbb
cmp
push
ficomps
push
xor
push
jmp
xchg
xor
push
xlat
inc
fstps
mov
arpl
xor
stc
jecxz
lea
addl
inc
mov
xor
push
sub
arpl
imulb
cltd
mov
cmp
jg
test
jl
in
xchg
sub
jp
inc
es
sti
inc
mov
lret
lret
jbe
out
jns
push
xchg
and
or
inc
data16
mov
cltd
fldenv
pop
stos
in
fs
inc
mov
sbb
ret
imul
aad
ret
xorb
clc
sub
or
neg
in
jo
jmp
inc
sahf
mov
inc
add
test
dec
add
int
mov
sbb
mov
jl
mov
push
test
sub
stc
das
pop
mov
push
mov
push
jle
iret
test
pop
mov
bound
or
pusha
inc
cmp
adc
xlat
push
rorl
jmp
es
add
add
add
lea
sub
or
shld
lds
push
push
call
cmpsl
outsl
mov
cmp
xchg
popw
sub
shr
orb
pusha
cmp
cmp
mov
push
testb
dec
add
jle
add
or
cmp
dec
cli
data16
push
mov
es
and
pop
cmp
sti
and
or
or
sbb
push
sahf
xchg
cmpsb
mov
inc
fbstp
pop
orb
outsl
jg
add
test
aad
dec
rcrl
pop
sub
loop
fst
sub
xchg
pop
xor
xchg
dec
fxch
ss
push
mov
ret
nop
mov
dec
lcall
in
push
imul
mov
mov
lret
out
movsl
lock
lret
inc
xor
test
sbb
jecxz
loopne
push
roll
mov
les
adc
xchg
jmp
push
adc
stos
jns,pn
test
lcall
addr16
jnp
std
scas
mov
dec
lret
mov
lock
hlt
inc
jb
xchg
pop
push
in
mov
add
push
fiadds
stos
sub
add
in
int
jmp
or
mov
dec
idiv
bound
dec
dec
jns
leave
mov
popf
mov
scas
mov
or
xor
xchg
mov
sub
in
dec
xchg
cwtl
imul
push
hlt
and
dec
inc
jl
inc
xlat
mov
bound
scas
sub
sub
and
lds
mov
sbb
push
cmpsb
cmpsl
xor
inc
jo
and
dec
test
ljmp
mov
popf
pusha
fcoms
and
loop
push
js
adc
and
xchg
mov
add
jl
cmc
push
xchg
inc
pop
fst
test
pusha
fdiv
mov
push
mov
sbb
outsb
xor
push
xlat
rcrl
leave
ljmp
test
in
sbb
sub
cs
cmpsl
adc
mov
aas
ss
fnstcw
ret
popa
shlb
mov
and
call
imul
ret
push
mov
int3
adc
insb
jne
inc
test
movsb
popf
mov
lcall
push
int3
mov
and
shlb
or
in
xchg
rcrl
mov
jp
sbbl
out
inc
cmp
dec
push
jg
xor
loopne
sbb
push
and
das
in
jmp
adc
push
jns
jnp
dec
hlt
xlat
sub
or
ljmp
mov
mov
cmp
mov
sbb
pop
jae
movsb
sub
fnstsw
add
in
stos
jns
and
or
mov
jns
cmp
jle
mov
add
xlat
jp
xchg
out
hlt
aas
xchg
test
iret
cwtl
nop
cmp
pop
shlb
loope
xchg
xchg
mov
inc
dec
fdivl
pushf
mov
and
imul
xchg
psrld
hlt
lret
out
rcrl
das
add
outsb
lret
emms
fdivl
sbb
mov
adc
std
sti
enter
add
fistpl
out
push
cmc
int
ljmp
sbb
stos
mov
and
mov
pop
xor
cli
out
cmp
jl
mov
lret
cmp
cmpb
lods
imul
mov
jns
call
xlat
jecxz
sub
or
test
lcall
pop
bound
lcall
in
inc
sub
iret
pusha
in
call
test
sub
add
out
mov
outsl
and
idivl
xchg
sbb
test
lods
add
aad
outsl
shlb
stos
mov
ret
test
jbe
icebp
adc
clc
arpl
jno
push
and
lcall
add
cmpsl
mov
ljmp
pusha
push
ret
and
test
insl
int3
adc
lods
addr16
stos
insb
jns
data16
or
fsubrs
in
enter
cmpsb
fimuls
add
es
mov
xchg
aad
mov
inc
push
adc
fidivrs
xchg
dec
mov
jb
int
and
fdivrl
jle
data16
call
push
call
lret
add
test
ja
lret
out
xchg
das
movsb
mov
out
jp
dec
mov
mov
or
fdivrs
out
je
fdivs
sub
out
sbb
inc
push
fwait
xor
push
mov
mov
xchg
pop
subl
xor
addl
out
and
sub
es
popf
sub
jns
push
mov
pop
jecxz
mov
addb
cwtl
xor
lret
insl
jae
aaa
xchg
jg
and
rol
cmp
out
mov
xor
push
jle
lods
iret
leave
inc
jbe
push
xchg
cmpsb
cmp
mov
or
insb
fwait
pop
ret
push
test
shll
cmp
adc
jg
inc
fidivl
test
aad
dec
sahf
leave
out
pop
inc
imul
leave
inc
scas
mov
sahf
iret
fistpl
sahf
mov
xchg
data16
hlt
stos
es
lds
pop
add
les
jae
xchg
dec
mov
in
inc
roll
rorl
and
aam
inc
add
and
cmp
or
sahf
dec
push
mov
pop
test
xor
inc
bts
mov
lea
add
mov
jo
cld
in
ds
lds
mov
or
cmp
push
in
mov
ret
and
xor
pop
mov
fnsave
dec
mov
sub
add
xchg
out
pop
jb
add
pop
and
aas
nop
pop
pushf
pushf
xorl
xor
jbe
jnp
mov
sahf
pop
lea
adc
adc
or
or
sub
aad
xor
sti
out
fdivp
and
adc
icebp
push
mov
stos
add
push
mov
orb
loop,pt
punpckldq
pop
shr
jnp
xchg
enter
lds
sar
arpl
mov
jecxz
xor
rorl
xor
dec
pop
inc
push
insl
mov
mov
or
loope
mov
stos
in
or
add
cmp
add
stos
jo
mov
inc
inc
adc
inc
mov
sbb
adc
pushf
mov
or
addb
mov
jno
aaa
fstps
fnstsw
cmp
ljmp
loop
mov
fs
xlat
mov
ror
jbe
ret
xchg
mov
fnstenv
xor
mov
ret
dec
addl
cltd
xor
jns
xchg
push
retw
push
jo
mov
add
fcmovnu
jl
jb
mov
daa
push
add
int
leave
xor
mov
insl
jmp
inc
adcb
es
xchg
fistl
mov
and
cmp
fisubrl
mov
scas
icebp
cmp
mov
xor
cmc
sub
shrl
add
jns
sbb
xchg
adc
inc
scas
dec
movsb
jo
dec
in
push
pop
imul
aad
lret
dec
mov
inc
jp
xchg
xchg
out
adc
adc
fwait
cmp
xchg
mov
xor
inc
push
jno
incb
mov
gs
daa
mov
adc
cltd
jge
pop
mov
inc
mov
jge
popaw
mov
or
mov
mov
ret
subb
mov
mov
std
dec
mov
and
fdivrl
cmp
sub
ret
setg
data16
cmp
xchg
cltd
fiaddl
pop
addr16
pop
pop
pop
test
lds
xor
cmc
shll
arpl
int
lods
inc
in
loopne
jmp
push
xchg
jle
aad
call
mov
pop
cmpl
sub
cmp
shl
inc
sbb
imul
addl
pushf
push
repnz
into
cmp
jb
jo
js
je
pop
pop
out
in
pop
decl
xchg
sbb
mov
pop
in
mov
adc
xor
cld
pushf
shrb
icebp
sbb
add
adc
jno
mov
fsubrl
inc
mov
dec
lret
mov
or
dec
insl
mov
jge
out
popf
mov
pusha
xchg
add
cmpsl
icebp
cmp
adc
addr16
dec
daa
dec
into
xor
mov
mov
push
loop
xor
mov
cmpsb
mov
insl
in
lods
test
inc
jmp
faddp
in
sbb
adc
popf
out
cltd
iret
mov
xchg
arpl
add
and
ret
cli
add
jge
mov
adcl
jbe
add
outsb
xor
cwtl
xor
mov
push
inc
fwait
in
es
cmp
xlat
shl
repnz
sub
insl
lods
dec
fidivrs
adc
fcompl
jmp
dec
aas
dec
mov
addr16
lahf
jl
dec
pop
and
adc
cmc
cmp
xchg
add
push
pop
xlat
ja
cmp
sub
fisttpl
add
mov
sub
sub
sub
xchg
out
icebp
pushf
xor
xchg
lret
fisubs
aaa
xchg
vcvtss2sd
pop
xlat
lea
lret
sub
inc
and
loop
int3
cli
dec
and
cld
faddl
mov
sahf
push
mov
popf
pop
fwait
std
mov
imul
push
cmc
xchg
std
cmpsb
pop
push
xor
pop
mov
xchg
and
movsl
pop
out
leave
sub
imul
pop
push
repnz
sub
adc
xchg
ret
rcll
inc
fstp
test
cmc
inc
and
jbe
mov
cmp
mov
ret
sub
sbb
mov
mov
fucomi
push
fwait
jle
icebp
out
popf
fmull
or
mov
dec
cmp
subb
add
dec
jp
stc
mov
jge
dec
fadds
js
aaa
pop
push
xchg
xchg
sbb
or
mov
cmc
cli
push
push
mov
mov
mov
ret
outsb
mov
jp
sbb
push
mov
int3
or
mov
sbb
fiaddl
inc
jno
aam
push
adc
lret
sub
fmuls
les
mov
cmp
mov
mov
pop
xlat
cli
dec
mov
sbb
pushf
and
addr16
pushf
and
popf
mov
sub
inc
dec
adc
and
nop
sub
sbb
push
xchg
and
inc
aaa
pop
lods
and
out
inc
bndstx
cmovnp
add
scas
push
outsb
inc
insl
cld
mov
mov
mov
je
push
xchg
icebp
push
add
jne
mov
or
sbb
lret
sub
push
stc
inc
mov
test
cwtl
in
xor
xlat
adc
xlat
push
stos
mov
mov
mov
jns
xchg
jle
mov
pop
inc
adc
aad
test
imull
aad
push
push
inc
xchg
xor
pushl
inc
xor
std
jae
xchg
dec
fmuls
int3
sbb
sahf
out
andb
sti
push
nop
cmc
std
push
or
pop
jge
and
inc
movsb
loop
mov
shll
les
pop
fwait
jne
xor
jnp
les
stc
orl
repz
cwtl
adc
inc
pop
lahf
pop
dec
cld
arpl
movsb
pop
cs
jo
cmp
movsl
addr16
jbe
out
loopne
js
xchg
sti
mov
repnz
add
push
in
sbb
pop
gs
push
xchg
aam
nop
xorl
pop
mov
cwtl
or
insb
lret
jbe
arpl
sbb
lods
adc
dec
mov
jl
stos
jne
push
movsl
and
arpl
js
fiaddl
faddl
dec
out
clc
adc
js
cmp
fdiv
lods
shrb
pushf
inc
mov
js
orb
leave
lock
lods
mull
fldenv
and
sar
mov
jge
adc
push
cmpsl
xchg
lret
jmp
ficoml
cwtl
sarb
bound
xor
inc
or
popa
pop
repz
sbb
sbb
lods
jecxz
mov
mov
adc
xchg
ret
xchg
lahf
das
dec
dec
cli
mov
lcall
repz
inc
and
mov
pop
mov
popa
faddl
push
push
test
inc
pop
lea
sti
inc
std
jno
cmp
push
scas
mov
sub
pop
fldln2
mov
adc
mov
sbb
push
imul
andb
mov
mov
pop
addr16
dec
or
pop
decl
enter
into
fsubr
lcall
cmpsb
or
sbb
push
subl
lods
jb
mov
dec
les
mov
push
adc
push
xchg
jg
je
adc
xlat
jno
sahf
ljmp
pop
scas
jl
data16
lods
push
sbb
mov
or
jmp
ds
nop
or
mov
jg
cmc
fs
sub
fistpll
or
lret
addr16
push
adc
imulb
xlat
jno
push
adc
imul
sbb
push
fxch
xchg
mov
xchg
gs
test
ljmp
xchg
cmp
xor
sbb
clc
into
sbb
or
les
inc
jno
pop
imul
imul
push
inc
mov
xchg
movsl
icebp
nop
mov
insb
scas
mov
mov
ret
fisubrs
cmpsb
inc
cmp
imul
mov
pop
xchg
jle
xor
jp
mov
cli
lock
jecxz
nop
outsb
insl
imul
call
rcrl
xchg
and
xchg
push
push
out
add
and
lds
push
jmp
jle
hlt
mov
mov
cmp
popf
data16
xor
mov
scas
mov
mov
jae
out
scas
ret
arpl
cwtl
sub
jns
jge
pop
popa
clc
orb
jae
dec
push
in
mov
rolb
clc
xor
fimuls
scas
inc
bound
adc
adc
cltd
pop
mov
sub
xchg
inc
push
mov
and
mov
movl
jae
jno
inc
xchg
inc
in
movb
cmpsb
mov
add
and
push
cmp
jne
add
xor
mov
loope
fidivrs
leave
cmp
sbb
add
nop
aaa
fistpl
arpl
mov
testb
xchg
mov
repnz
fisttpl
stos
rorb
rcll
mov
imul
call
push
rcrl
mov
bound
aaa
daa
in
sbb
inc
push
and
in
dec
mov
mov
dec
out
cltd
divb
mov
fildll
xchg
rcrb
mov
pop
iret
sbb
cltd
sub
ficomps
xchg
or
jp
or
pop
cwtl
test
js
insb
and
xchg
push
sub
and
daa
sti
xchg
fsubrs
loopne
rcll
sahf
mov
jae
mov
imul
lea
cwtl
rcll
xor
add
out
sbb
lock
push
jno
push
mov
inc
out
pop
mov
test
mov
adc
xchg
sub
aam
push
pop
insb
sub
daa
xor
pop
sbb
mov
icebp
into
mov
cmp
push
dec
loopne
push
les
push
clc
and
mov
test
pop
pop
push
jne
lods
sahf
dec
mov
loope
repnz
and
pop
and
into
popa
ja
cli
dec
lds
jg
and
fbld
fld
push
pop
mov
push
popa
arpl
adc
jl
or
lret
sub
and
mov
movsb
xor
add
rcll
dec
sub
call
adc
mov
ret
adc
frstor
jmp
jg
inc
pop
pop
push
test
mov
pop
aam
dec
sbb
add
xlat
cmp
pop
dec
mov
pusha
mov
mov
cwtl
ss
pop
sub
enter
mov
mov
sarl
pusha
jge
sub
sub
bound
push
adc
mov
add
cwtl
push
addr16
xchg
cmp
imul
in
jg
scas
push
lret
cltd
mov
pop
sbb
sbb
lds
les
lods
xchg
or
cli
lods
adc
or
mov
inc
cltd
std
mov
call
adc
enter
add
push
bound
sub
lds
dec
mov
call
push
xlat
or
add
and
jmp
jbe
loop
add
sub
mov
xchg
sbbb
add
repz
push
mov
xlat
cmp
jns
hlt
aaa
jge
shrl
stos
movb
jb
fcmovnu
mov
ljmp
test
fcmovbe
imul
aaa
jns
sarb
jecxz
jno
xchg
mov
xchg
push
pop
push
cmpsb
xchg
push
jge
mov
pop
mov
incb
dec
xor
adc
pop
fstp
jl,pt
cli
xchg
dec
pop
add
cs
xchg
fisttpll
ret
loop
lock
lods
mov
jp
pop
pop
cmp
arpl
aas
jmp
outsl
mov
cwtl
jb
out
jl
mov
lahf
sub
into
imul
adc
mov
mov
lods
pop
xor
inc
repz
mov
cmp
mov
add
ret
xor
inc
iret
lcall
cmc
loopne
jg
lock
into
and
inc
repz
xor
ret
loopne
adcl
sub
xchg
les
mov
xchg
cmp
mov
cmp
jecxz
in
jg
aam
mov
outsl
sub
out
lcall
addr16
aaa
clc
mov
push
sarb
lea
stc
inc
roll
sbb
pop
sub
and
cli
inc
bound
jecxz
loop
loope
add
rolb
pop
daa
add
adc
out
push
dec
rolb
cmp
out
inc
xor
xchg
mov
fisubrs
repz
std
or
hlt
sbb
out
stos
jno
push
rcrb
pop
repnz
mov
out
pop
adc
test
mov
dec
cmp
addr16
ljmp
popf
gs
aaa
cmp
filds
jae
imul
push
push
imul
or
mov
loope
dec
shlb
mov
imul
pop
outsl
test
jge
adc
mov
dec
inc
cmp
pop
insb
cmp
and
rdtsc
inc
aaa
test
in
pop
pop
dec
add
cmpsl
fstp
pop
rolb
inc
lcall
or
cli
in
mov
cmp
inc
inc
imul
iret
fisubrl
lods
cmpsb
popf
and
adc
fadds
lds
jg
dec
jge
out
pushf
mov
int
lret
mov
int
pop
mov
in
andb
cmpsb
xchg
push
mov
xor
sub
call
jno
imul
arpl
call
lock
sbb
lcall
jo
jl
and
sbb
cmp
mov
decb
hlt
xchg
pop
cld
leave
or
out
bound
testl
out
imul
scas
add
lods
pop
outsb
lcall
popl
scas
insl
mov
sub
ss
movsb
sbb
mov
cli
jo
cmpsl
test
das
mov
or
jmp
and
leave
dec
adc
mov
inc
mov
push
shlb
hlt
clc
push
sub
in
pop
lret
loop
xchg
insb
cwtl
outsl
das
cmp
mov
andl
jb
test
divb
out
jae
mov
jns
dec
xchg
mov
add
icebp
pop
xor
mov
insb
movsl
subb
mov
imul
sub
xor
dec
dec
fidivrl
ret
fldl
fldl
loop
out
jne
sahf
mov
mov
add
or
loopne
sub
and
pop
cmp
mov
sti
orl
dec
or
xlat
mov
jle
loopne
dec
sti
lock
mov
ja
push
lods
dec
fcmovnu
ret
aam
sbb
scas
pop
sarl
jb
sub
jmp
cmp
cmp
stos
out
sarl
push
mov
mov
cmpb
call
and
lock
call
stos
push
cmpsb
xor
and
push
pushf
cmp
dec
jno
and
xor
icebp
push
inc
lcall
cmp
mov
loop
push
ljmp
sbb
push
lods
xchg
ss
dec
push
and
cmpb
xchg
adc
in
mov
inc
fiaddl
mov
aad
mov
xchg
pop
mov
cmp
add
je
sahf
cmp
into
mov
divl
nop
sbb
and
sbb
lods
adc
sbb
jecxz
sbb
mov
sub
nop
cwtl
lcall
ret
mov
add
out
outsb
cwtl
mov
xor
inc
daa
pop
mov
jp
push
bound
pop
ljmp
sti
pusha
aaa
scas
mov
nop
fcoml
test
inc
test
push
mov
inc
hlt
pop
stos
mov
add
xor
mov
push
lret
jl
mov
iret
inc
divl
cmpl
rcpps
pusha
sbb
scas
aad
jbe
push
fcmovnu
shlb
mov
inc
mov
push
mov
hlt
sub
aad
sbb
push
and
lods
rcl
test
mov
mov
add
sbb
mov
inc
scas
sbb
xor
xorps
bound
in
adcl
push
lret
out
or
stos
or
cmpsl
ficoms
xlat
dec
jnp
ret
mov
sbb
mov
sbb
mov
push
sbb
nop
jmp
dec
les
cmp
mov
sub
pop
jb
int3
jns
in
test
cwtl
repnz
or
xorl
sbb
or
mov
inc
sub
xlat
movsl
mov
dec
or
loopne
dec
subb
jae
and
sbb
cmp
addr16
xor
and
mov
push
sub
sbb
xchg
mov
mov
pop
cmp
xchg
jmp
mov
xor
cmpsl
in
pop
or
mov
pop
mov
cmpsb
ja
fildl
push
mov
imul
lahf
xchg
in
lret
sub
repz
lcall
jl
add
pop
and
fildl
test
notl
test
daa
sti
sahf
fisttpll
inc
xchg
loope
rcrb
testb
dec
xchg
mov
loop
mov
cld
ffree
hlt
adc
pop
clc
loop
test
adc
and
fsts
mov
add
mov
stos
insl
jno
mov
push
popf
cmpsl
stc
rcrb
mov
lea
bound
or
test
push
sar
addr16
nop
cmp
popf
sub
leave
or
in
nop
mov
pop
push
pop
fs
mov
add
dec
inc
jne,pt
mov
and
dec
jbe
or
ja
stc
jb
dec
xchg
das
add
xchg
out
cmpsb
pop
pushf
cltd
push
mov
aam
ds
pushf
jno
lock
out
push
mov
mov
xor
movsb
loope
into
ljmp
adc
or
sub
sub
sub
xchg
ficoml
aad
push
out
cmp
call
adc
xchg
add
out
inc
hlt
and
sbb
cmp
out
rcl
scas
sub
les
rcrl
inc
rol
outsb
rep
movsl
jo
popf
sbb
dec
xlat
out
pusha
cld
xor
pop
mov
ss
repnz
fcmovb
jns
ljmp
mov
lds
push
ret
mov
adc
fsubs
pop
ljmp
or
xchg
sub
jp
jle
push
add
sub
popf
in
jns
adc
jmp
mov
data16
mov
or
inc
mov
push
decl
or
imul
sub
adc
fisubs
mov
pop
into
sub
mov
movsl
jnp
rcl
in
cmp
hlt
push
jle
ljmp
lret
jbe
repnz
push
outsb
jp
imulb
pop
or
mov
mov
in
mov
and
and
mov
ds
movsl
pop
es
or
mov
jae
ja
sbb
rcl
mov
lods
cmp
negl
and
dec
daa
cmpsl
pop
inc
ss
outsl
push
mov
xchg
push
icebp
shlb
ja
or
pop
test
sar
stos
test
xchg
and
fnstcw
mov
jl
jns
mov
inc
std
push
push
lret
inc
cmp
loopne
aas
iret
sbb
fsubs
das
es
jg
push
xor
cmp
mov
push
push
out
stc
jl
mov
loope
fisubrl
cmc
push
xor
repz
cs
or
mov
andl
xor
call
rcll
dec
mov
fstpl
fistpll
jns
pushf
sub
mov
mov
cmc
insb
cmpsl
xchg
imul
stc
cmp
les
lcall
xchg
cwtl
cmc
loop
rcll
adc
and
pop
test
test
xor
pop
xor
lret
insb
adc
fdivrl
fiaddl
sub
ror
sub
aaa
mov
ss
or
fiaddl
outsl
xor
scas
pushf
orb
jbe
pmaddwd
xchg
andl
daa
jae
pop
mov
dec
mov
pop
jbe
adcb
pop
lods
mov
or
mov
xchg
addr16
adc
popf
in
cmp
sbb
cld
dec
cmp
or
cmp
loopne
push
scas
xchg
inc
addr16
sbb
in
lods
sub
test
in
imul
movsl
inc
fisubrl
pop
out
and
ret
fstpl
in
test
shrb
add
mov
movsb
cmc
popf
test
xchg
pop
testl
or
ds
mov
adc
sub
scas
jg
data16
orb
mov
sub
sub
xchg
xchg
shl
orl
adcb
je
aad
jg
das
sub
idivb
out
iret
ss
pop
mov
sbb
arpl
push
lock
mov
add
sub
cld
outsb
cmp
dec
daa
xor
gs
jbe
outsl
and
dec
sub
fstpl
lret
inc
aaa
sbb
scas
inc
mov
cmpsl
pop
and
outsb
mov
mov
xlat
xchg
pop
mov
lahf
and
push
push
frstor
push
stos
push
das
das
adc
xchg
subb
pop
les
mov
orl
cmp
int3
mov
push
shll
stc
mov
into
rcr
insb
jmp
jns
out
in
lcall
pop
into
je
stc
test
cmpl
pop
sbb
jne
ds
xor
inc
cmp
dec
inc
inc
pusha
mov
loopne
out
pop
push
xor
in
insl
out
and
or
jne
cmp
adcb
popa
lods
gs
lds
or
shll
pop
dec
ss
pop
push
push
pop
js
lock
pop
rcll
mov
cmpsb
inc
stc
test
js
lds
pop
push
sbb
nop
xor
std
add
loopne
jmp
rclb
xchg
addr16
aas
xchg
test
in
stos
push
or
sub
lret
fwait
lea
xchg
dec
adc
lds
aas
test
jp
iret
es
sahf
jge
jo
imull
pusha
mov
xchg
lds
fdivl
fmull
lods
dec
and
dec
ds
mov
movsb
or
imul
pusha
ss
jbe
js
jge
lret
test
les
insb
push
test
loopne
addr16
out
and
in
cltd
test
push
lds
jg
or
mov
std
mov
cmp
mov
fimuls
loop
xor
add
xor
cmp
cmpsl
sub
lahf
fsubr
cmp
test
out
ljmp
iret
in
mov
aam
add
mov
imul
test
int
insb
mov
sbb
mov
cmp
movsl
cli
fwait
sbb
arpl
hlt
dec
and
std
loope
dec
repnz
hlt
jle
out
push
sub
inc
adc
movsb
in
cmp
mov
sub
xor
aas
pop
ret
hlt
scas
in
jbe
lcall
test
loop
out
xor
repnz
inc
icebp
popa
daa
fisttps
xorl
add
pop
mov
xor
popa
lds
xchg
clc
mov
or
lret
gs
aaa
jp
out
jns
dec
subb
sub
pop
iret
out
dec
push
in
pop
popa
mov
sahf
push
sbb
outsl
in
inc
sbb
int
or
pusha
test
or
cmp
sub
ja
lods
fisttpll
test
and
shr
dec
cmc
jo
loop
or
ret
pop
addr16
and
sbb
jmp
sub
lods
lahf
push
data16
ss
les
adc
js
mov
jb
xchg
je
test
jae
int
xchg
int3
ds
outsb
mov
pop
push
lret
add
add
enter
addb
test
loopne
fldcw
sub
adc
xchg
inc
inc
inc
dec
push
mov
in
xor
inc
out
cmp
inc
ficoms
sub
fdivrs
adc
ret
pop
mov
cmp
and
aas
test
dec
into
cmc
fwait
sub
arpl
sbb
sar
mov
inc
jne
push
scas
insl
add
and
dec
push
iret
sub
ret
sbb
in
sbb
push
xor
mov
aas
sbb
or
inc
mov
push
movsb
and
inc
mov
pop
mov
test
or
ss
xor
mov
les
mov
mov
adc
sub
ss
mov
cmpsl
sbb
cld
ret
addr16
ficompl
lcall
nop
adc
mul
cld
test
ds
sub
test
sbb
sbb
adc
dec
out
bound
imul
or
cmp
adc
inc
jmp
or
mov
jns
out
mov
mov
pusha
fs
nop
insl
mov
sbb
pop
xchg
fcmove
in
mov
and
fneni(8087
daa
loop
cmp
ret
loope
out
sub
mov
pop
fisttpll
ret
fwait
xchg
ret
inc
push
mov
or
xchg
scas
or
inc
and
push
imul
push
ss
or
mov
fs
push
sub
inc
setl
loop
sarb
sbb
div
pop
in
dec
mov
push
push
js
jg
cli
aaa
push
sub
fwait
lret
xorl
add
loopne
ret
cmp
lcall
cmp
rcr
dec
lods
or
push
dec
ficoml
inc
imul
mov
popf
sbb
test
clc
pusha
in
push
or
xor
lods
xchg
insb
adc
ficoml
dec
sbb
xor
movsb
test
dec
dec
std
js
cmpsb
adc
lret
iret
xchg
repnz
sub
stos
sbb
insl
dec
sbb
pop
inc
aas
mov
cs
push
xchg
cmpsl
pop
cmp
arpl
xor
aas
lret
fdivrs
jno
jbe
int
stc
aam
pop
inc
imul
sub
das
pop
sahf
jle
or
xchg
inc
cmp
pop
mov
shlb
sbb
sahf
push
ljmp
mov
sti
xlat
jmp
adcb
jmp
xchg
arpl
mov
daa
lock
adc
call
sahf
lods
sti
add
test
inc
xchg
pop
mov
jno
loope
adc
andl
sbb
decl
cmp
fwait
outsb
inc
mov
in
fisubs
or
jl
or
pop
js
xlat
sbb
lret
sbb
test
push
popa
nop
test
lods
adcl
aad
push
arpl
pop
shll
add
stos
out
insl
add
push
mov
in
xor
fcomps
mov
xor
mov
push
dec
das
repz
rolb
out
insb
sub
insb
inc
mov
loopne
loopne
in
mov
ffreep
sub
mov
jg
pop
mov
loop
mov
pop
or
pop
jne
int3
jne
cmp
cmc
sbb
xor
or
add
fldt
dec
pushf
mov
cmp
fsts
mov
sahf
stos
dec
jbe
clc
sub
adc
lock
ficoms
jno
mov
and
shl
outsb
or
mov
fcomps
lret
jmp
imul
dec
jne
cli
cmp
mov
test
dec
nop
jp
scas
mov
addb
pop
inc
mov
dec
stos
inc
es
and
and
out
popf
mov
stos
aam
inc
push
mov
jge
out
xor
icebp
sbb
inc
add
decl
jle
mov
std
sbb
sub
sub
add
jb
xor
lret
imull
xor
outsl
fidivl
popf
xchg
pop
rcll
ljmp
cwtl
stos
adc
mov
jns
mov
push
push
dec
out
das
xor
insl
mov
add
push
je
adc
push
test
dec
pop
push
sbb
test
lret
mov
leave
lock
push
ret
nop
xor
mov
pop
and
enter
arpl
xchg
test
pop
or
sbb
out
mov
mov
pop
and
and
fldt
xor
aas
stos
ficompl
pop
pop
xchg
xchg
aad
mov
das
inc
arpl
mov
je
test
inc
xchg
sub
bound
lahf
pop
mov
adc
dec
sub
push
sub
lods
push
aad
int3
repz
fdiv
dec
sub
rcr
les
insb
mov
mov
sbb
or
mov
pop
andl
add
call
in
inc
pop
sar
dec
inc
pop
sub
add
out
dec
sti
rclb
rorb
out
sub
push
mov
jmp
stc
pop
movsl
mov
add
clc
push
in
adc
subb
std
movsl
addr16
jo
mov
sub
xor
test
cmpsb
or
jno
lret
jnp
push
ss
and
icebp
gs
push
push
adcl
repz
sbb
sub
push
push
mov
fsubrs
xchg
dec
fwait
aaa
inc
lods
mov
pop
clc
and
dec
jns
inc
push
fildll
cld
je
enter
dec
ret
or
jmp
ja
push
dec
cmpsb
es
ljmp
aaa
je
test
rcll
jb
stos
adc
test
jmp
pop
and
sub
inc
hlt
sub
sbb
cmpsl
rcrb
mov
in
xchg
repz
xchg
inc
loopne
loopne,pn
imul
int
cmp
jp
sbb
cli
movsb
and
popf
mov
test
scas
call
mov
inc
leave
pop
lock
xchg
xor
ss
cmpl
mov
cmp
clc
sbb
mov
sub
add
push
es
inc
gs
popf
cmp
jle
push
js
cmpsl
add
or
add
jge
push
aad
test
sbb
mov
inc
add
notl
xchg
dec
dec
sbb
shll
mov
mov
inc
int
adc
sbb
add
mov
aad
rcll
and
iret
lock
lds
loopne
push
xor
xchg
dec
sahf
sbb
inc
or
rol
sub
push
sbbl
adc
mov
mov
roll
test
dec
ljmp
mov
push
loop
imulb
xor
sbb
xchg
pusha
xor
cmc
lds
sub
push
push
repz
call
fs
push
int
sbb
mov
add
popf
stos
scas
add
lret
pop
dec
fcompp
and
ljmp
popa
mov
add
dec
mov
popf
hlt
subl
sti
and
xor
imul
and
ljmp
aad
mov
aam
adcb
mov
inc
mov
pusha
xchg
mov
mov
pop
xchg
mov
sahf
jns
jo
mov
mov
loope
lret
rclb
loopne
lds
mov
pop
add
cmp
daa
dec
add
jg
or
sub
jbe
gs
mov
mov
sbb
jl
mov
int
int
xchg
or
fidivrl
jmp
jl
imul
lods
cmpsl
add
enter
push
aam
push
iret
inc
out
mov
or
sub
jge
ja,pn
pop
decb
add
xchg
xchg
ret
mov
sbb
mov
and
loope
dec
sub
and
jp
mov
or
xor
loopne
out
inc
outsb
js
aam
jne
fldcw
mov
lahf
mov
ret
sbb
ss
sti
push
cld
jb
adc
pop
add
xorb
fbld
jne
and
fwait
cmp
data16
jne
mov
push
push
rorl
mov
hlt
mov
adc
adc
hlt
gs
std
bound
fwait
je
sub
or
mov
cmp
fcmovu
or
jns
xchg
xlat
lcall
lea
aaa
adc
jae
out
inc
push
mov
hlt
je
mov
inc
shrl
pop
push
movsb
cmc
jae
insl
js
dec
adc
add
push
ret
mov
out
mov
push
and
dec
jb
jg
cs
xor
pushf
inc
psraw
mov
das
shlb
outsl
imul
and
je
fnsave
daa
or
lods
push
push
pop
push
inc
cmp
pop
mov
adc
add
dec
pop
stos
outsb
imul
push
mov
jmp
arpl
xchg
jae
int
cmc
pop
or
pusha
mov
fs
pop
fsubp
bound
adc
ds
xchg
push
mov
dec
cmpb
test
cmpsb
shlb
xlat
stos
imul
cmp
mov
cwtl
adc
dec
jge
call
in
rcll
inc
std
dec
nop
inc
or
sbb
stos
xchg
ss
mov
push
cli
or
dec
data16
sar
inc
and
clc
adc
sahf
imul
and
out
mov
jle
into
adc
mov
inc
add
into
inc
push
xchg
inc
insl
leave
loop
or
push
in
loope
fbstp
or
jle
das
lods
cmpsl
jns
cs
movsl
cmpsb
push
in
mov
sbbb
stos
test
push
jg
ljmp
scas
aad
push
fcomps
cmp
push
jb
and
je
add
mov
repnz
repnz
orl
add
or
test
jp
outsl
ret
push
pop
cmp
enter
test
add
gs
subb
int3
jbe
pop
pushw
mov
adc
mov
into
pop
or
mov
jo
xor
xchg
addl
jp
mov
push
movsl
pop
addr16
add
sub
lcall
sbb
test
fsubrs
shl
fisttps
fdivs
in
jmp
fwait
jno
mov
testl
roll
bound
imul
popa
push
push
vpunpcklbw
gs
repnz
sahf
out
nop
inc
outsl
scas
cwtl
scas
jmp
fs
sahf
dec
paddusb
cmc
add
in
mov
popf
mov
test
scas
and
lods
fidivl
in
and
xlat
mov
mov
mov
mov
mov
mov
ljmp
cltd
test
and
roll
test
out
ror
ljmp
lds
mov
clc
xchg
mov
mov
mov
or
shrl
bound
sub
jbe
and
inc
xor
sar
stos
inc
je
mov
mov
jbe
or
xchg
cld
test
mov
in
or
shll
xchg
dec
lret
cld
jae
lock
xlat
mov
fnsave
imul
sbb
dec
push
insl
push
arpl
cli
adc
xchg
jbe
inc
or
stos
mov
jecxz
push
mov
addr16
stos
popf
enter
pop
push
push
repnz
push
imul
mov
mov
jp
mov
out
je
je
pop
mov
sub
xchg
pop
cmpsl
movsb
sti
inc
movsb
xchg
lahf
xchg
sbb
xchg
clc
or
loopne,pt
jmp
jb
fisubl
stos
and
insl
cmp
int3
pop
inc
mov
mov
sub
push
dec
dec
pop
and
frstor
xlat
std
xor
hlt
and
lcall
or
pop
test
cmp
into
das
jbe
xorl
aam
mov
xchg
and
pop
and
dec
aas
lock
shlb
lock
notb
ljmp
dec
xor
add
lahf
sarb
push
ljmp
inc
xor
mov
xor
jle
fdivl
ret
shl
lcall
inc
pop
ja
cmp
pop
or
sarb
outsl
cwtl
cmc
adc
xchg
mov
pop
dec
pop
pop
adc
pop
pop
jmp
push
cmp
dec
test
lahf
fwait
push
xor
jbe
adc
xchg
adc
out
sub
pop
sbb
insl
leave
mov
stc
test
sar
rcr
and
mov
mov
out
aad
loope
push
push
aas
icebp
jnp
inc
fs
or
mov
test
in
out
lods
cmpsl
popf
fldenv
push
cmp
nop
out
add
loop
push
addr16
insl
push
cmpsl
rol
inc
and
sub
lods
movsl
push
mov
imull
addr16
mov
jl
adc
cmp
pop
jmp
and
out
mov
sbb
shll
xlat
add
mov
xchg
or
cmp
or
xchg
cmpsb
fldenv
insb
xor
pop
out
dec
in
insb
xor
lods
mov
ret
dec
fwait
adc
sbb
bnd
push
cmp
add
sbb
xor
addr16
scas
out
dec
xor
sbbl
adc
mov
sti
aam
pushf
or
stc
sub
lods
iret
sub
lods
mov
loop
jmp
loopne
dec
mov
mov
adc
lods
mov
pushf
out
test
add
sbb
out
leave
jbe
in
cmpsl
lahf
push
lret
jbe
push
lea
pop
xchg
adc
cmp
dec
and
std
mov
fwait
repnz
bound
imul
push
dec
in
dec
push
mov
jmp
xchg
adc
mov
pop
cmp
dec
jb
repz
push
sub
xchg
jne
data16
int3
je
div
push
repz
imul
or
clc
add
inc
data16
sub
imul
pop
or
aad
and
adc
out
sbb
and
push
aam
jmp
das
jle
add
jae
xor
pop
mov
xlat
sbb
fadds
sbbl
pop
mov
adc
fcompl
loope
add
or
or
push
xor
mov
insl
mov
aaa
ljmp
jbe
pop
sbb
vxorps
testl
insb
xor
mov
xor
xchg
mov
mov
paddd
inc
xlat
pusha
call
cmp
and
sub
mov
pop
mov
lsl
inc
add
enter
mov
push
or
repz
xchg
loope
cmpxchg
adc
call
adc
pushf
xchg
inc
pop
rol
mov
mov
mov
loope
es
addb
jo
ficoml
jmp
popa
sbb
outsb
fistpl
pop
aam
mov
ret
js
sub
adc
xor
mov
xlat
dec
pop
test
and
std
popf
inc
std
xlat
aaa
stos
fcoml
aaa
mov
test
jns
add
xor
adc
push
push
cmc
push
daa
ror
dec
in
push
or
cmp
in
sub
mov
fs
inc
push
pop
jge
jbe
lea
jo
fildll
jecxz
pop
xchg
pushf
mov
dec
lea
insb
or
out
les
imul
push
add
jge
pusha
stos
lcall
loope
dec
mov
imul
xchg
je
pop
outsl
mov
fs
sbb
movsl
cs
sti
imul
aaa
jnp
dec
cli
pop
sti
data16
inc
daa
xchg
movsb
xchg
ret
call
push
fdivp
in
pop
pop
aam
inc
mov
push
sbb
inc
pop
movsb
mov
pop
inc
ljmp
iret
icebp
push
jle
rolb
sub
mov
addr16
inc
push
dec
in
add
call
and
mov
call
out
jle
dec
call
cmpsl
dec
incl
or
ficompl
pop
loopne
jno
ret
dec
push
cmpsl
js
loop
add
int
jl
cld
out
push
and
cwtl
push
xchg
aaa
mov
hlt
lods
or
es
ret
jle
dec
jno
mov
xchg
dec
or
jl
lret
xchg
in
xor
mov
scas
out
mov
sbb
jnp
mov
out
clc
push
jl
ja
jge
stos
push
out
cmp
cli
repz
inc
fwait
mov
inc
retw
inc
push
loopne
enter
aam
jl
add
xor
add
mov
lock
jnp
ds
adc
pop
cmpsb
out
mov
test
adc
fmul
xor
fwait
pop
int3
push
add
xor
lds
stos
shr
or
scas
add
mov
aam
pop
push
cli
test
pushf
pop
test
adc
stos
ljmp
and
ficompl
insb
js,pt
clc
fsubrs
ja
sahf
icebp
aas
jae
cli
imul
jae
cltd
and
add
stos
or
pop
xchg
xchg
sub
out
out
mov
dec
and
int
in
xor
push
adc
movsl
push
add
sbb
add
scas
sti
fisttpll
sub
xor
mov
ds
inc
mov
fst
ja
clc
repnz
andb
mov
ficoms
leave
sti
stos
in
sub
cmp
and
mov
lock
in
cltd
xor
mov
pop
dec
mov
xchg
or
jo,pt
dec
xor
sbb
in
aad
test
stos
lods
notb
in
cmp
aad
xor
cld
push
ret
lcall
jae
cwtl
or
jbe
inc
or
cmp
data16
xlat
insl
inc
and
in
push
in
ds
xor
lods
jl
lret
loope
int3
addl
mov
call
push
add
xlat
in
sbb
sbb
stc
loopne
pop
jne
popa
jne
jb
adc
por
xor
jne
into
adc
or
es
jmp
je
push
cli
xor
in
mov
pushf
fcoms
rcrl
aas
cltd
ret
aas
dec
cmp
xor
adc
ja
cmp
sbb
lahf
idiv
sbb
sbb
fistpll
in
std
in
bound
xchg
lret
jne
popf
adc
sbb
add
subl
movsl
sub
pop
pop
push
or
adc
cmpl
dec
arpl
inc
xor
lcall
cmpsl
xchg
and
dec
jnp
shl
inc
xchg
or
sahf
xchg
add
add
test
clc
mov
cli
mov
push
pop
lods
test
imul
dec
movb
pop
aam
frstor
sete
mov
mov
pop
mov
mov
mov
gs
mov
es
mov
int
popf
sti
jmp
sub
mov
mov
or
std
xchg
sahf
imul
subl
pop
push
or
mov
xchg
decb
jmp
inc
fnstenv
sub
test
pop
or
mov
scas
dec
pop
xchg
xchg
into
add
es
out
sbb
mov
add
xor
lret
daa
xchg
xchg
insb
test
adc
shrl
inc
pop
push
mov
cs
hlt
test
je
mov
std
test
inc
cmpb
xchg
shlb
ret
cmc
jno
push
sub
jp
mov
ljmp
mov
rol
lods
mov
shr
mov
sbb
mov
loop
shrl
fidivrl
out
mov
sub
push
jg
push
popf
xor
int3
xchg
push
push
cmp
jnp
jne
xlat
jecxz
mov
lds
lahf
insl
adc
jnp
push
mov
mov
mov
or
movb
inc
test
cld
jg
lret
ret
jbe
out
sbb
testl
lods
adc
push
jae
lcall
int
sub
dec
cmpsl
inc
dec
or
dec
subb
jnp
fsubs
dec
or
sub
es
or
push
in
dec
cltd
out
add
dec
add
bound
mov
mov
loop
enter
repz
mov
popf
sbb
and
pop
mov
jae
mov
aad
aam
loop
mov
cwtl
mov
out
jo
jno
sahf
fxtract
test
adc
mov
cli
cmp
call
xchg
dec
adc
clc
inc
movsl
pusha
and
push
ljmp
dec
add
in
jne
cmc
mov
push
or
fcmovnb
dec
sbb
jb
push
push
inc
xchg
sti
cmpsl
mulb
pusha
cmpb
or
add
push
adc
sbb
adc
or
addr16
inc
sbb
cmp
sub
mov
cld
fisubrs
sub
cmp
in
push
out
inc
es
loopne
fs
jae
adc
dec
enter
cmp
sbb
pop
push
sub
movsb
test
dec
add
push
pop
in
and
sbb
out
out
or
push
dec
xchg
lahf
mov
mov
pop
and
xlat
adc
mov
mov
cmp
rclb
and
out
fcmovu
stos
push
xor
push
aaa
add
dec
pop
dec
inc
in
xchg
testl
and
fwait
mov
dec
add
decl
xor
or
xchg
mov
xchg
mov
cld
xchg
mov
outsb
and
xor
and
js
cmpsl
inc
daa
adcl
arpl
es
insb
and
dec
mov
sti
cmpb
ret
xor
stos
gs
xchg
push
ret
mov
push
pusha
and
dec
dec
inc
dec
and
stos
out
xchg
iret
popa
jmp
cld
push
or
fcmovne
cld
cli
pop
leave
inc
movsl
ret
cld
scas
lret
pushl
push
add
pop
xor
inc
xchg
push
mov
mov
scas
out
push
and
push
jo
fdivr
adc
and
lods
pop
push
adcl
enter
and
in
dec
daa
dec
cmp
js
movsb
jge
mov
sahf
adc
sbbb
cli
xchg
mov
loopne
popa
xchg
push
in
cmp
push
dec
xchg
icebp
mov
andb
pop
cmpsl
bound
imul
sub
inc
ljmp
out
adc
xchg
xor
inc
rcl
inc
lret
push
xor
ja
mov
rorb
mov
sbb
in
push
int3
aaa
and
jmp
cmp
popf
sub
jl
xchg
gs
fwait
xchg
nop
in
mov
notl
lods
scas
push
lock
cmc
outsb
add
ret
sbb
jg
push
leave
aas
mov
pop
xchg
fildl
dec
aas
and
fdivrp
ret
inc
in
inc
insl
inc
fwait
call
adc
in
enter
cmpsl
rolb
and
in
inc
and
pop
andb
inc
adc
les
push
push
pop
subl
aas
jbe
mov
dec
repz
ja
daa
mov
sub
in
or
dec
xor
fbstp
cwtl
xchg
xchg
add
mov
xor
add
cmp
insb
add
loop
ljmp
faddl
pop
adc
shl
and
pop
rep
mov
xchg
lods
inc
pop
xchg
aam
dec
mov
pop
xor
mov
or
insl
lods
jp
imul
idivb
mov
sub
mov
das
and
mov
addr16
pop
and
add
jae
int3
sahf
lret
mov
mov
add
sarl
popf
push
cmp
sbb
push
ss
inc
aas
sub
fimuls
cmp
inc
pop
inc
xlat
icebp
lds
sbb
pop
cmp
or
mov
cli
arpl
fisubrs
mov
in
xchg
in
aaa
in
mov
cwtl
xchg
adc
sbb
pusha
filds
popa
add
jns
add
jp
cmp
lahf
push
fwait
test
jge
rorl
push
xchg
in
pusha
jmp
cmp
pushl
ja
and
jmp
cmpl
pop
sbb
movsb
add
jge
ss
cmp
mul
mov
jno
lcall
mull
cld
xor
sahf
stc
pop
or
add
mov
ret
rcrl
xor
and
push
aad
push
push
or
xlat
xchg
push
adc
sub
imul
fisttpll
testl
mov
xor
int3
jl
adc
sbb
outsb
sahf
in
cltd
adc
and
push
and
xlat
rclb
daa
push
idivb
mov
bound
scas
mov
and
inc
push
imul
sub
aas
jns
dec
mov
mov
callw
fwait
int
xchg
jecxz
jmp
jno
inc
repnz
push
scas
adc
outsl
and
xor
pop
jp
jne
aas
jmp
pop
sub
mov
xor
das
scas
je
repnz
outsb
jo
fadds
jge
mov
cld
inc
fs
xlat
push
lds
popa
inc
in
dec
fistps
sub
insb
add
jl
xor
loope
shrb
lea
mov
fbstp
jo
fidivrl
mov
cmp
std
repz
fistpll
mov
repnz
shll
movsb
mov
pop
ja
test
cmp
ds
xchg
enter
dec
rcl
outsl
and
nop
addr16
decb
cmp
fwait
popa
sub
push
arpl
lcall
dec
into
in
mov
cmc
cmp
fstps
mov
and
ljmp
in
out
cwtl
and
aad
outsb
loop
mov
mov
dec
xchg
insl
das
add
es
adc
out
sub
cmp
adc
enter
test
sbb
adcb
inc
jg
fidivl
jae
or
iret
push
jle
sbb
js
notl
lret
jecxz
repz
cmpsl
mov
push
mov
add
xchg
fistpll
jb
and
test
repnz
lret
pop
out
xor
xchg
jae
dec
mov
push
fsub
or
push
outsb
jge
xchg
test
out
out
add
fdivrs
mov
loopne
in
xchg
test
test
shr
mov
fs
pop
mov
sbb
fsubs
mov
mov
inc
imull
xchg
jno
mov
sbb
sbb
mov
pop
jmp
dec
cwtl
pop
and
testb
pop
pop
push
pop
jl
ret
loop
shlb
sarb
insb
pop
fsub
fisttps
mov
clc
int3
loop
daa
adc
ds
mov
and
mov
es
stos
stc
inc
and
pop
lds
sub
js
in
push
pop
subb
pop
xchg
ljmp
stos
movsb
cld
andl
mov
es
pop
xor
push
dec
cld
or
aaa
ret
test
in
jae
popa
dec
sub
sbb
stos
popa
xor
arpl
mov
jge
cmp
push
sub
rcll
sub
outsb
cli
popa
pop
cmpsb
mov
add
aas
lea
or
std
jnp
ds
popf
das
add
mov
and
stos
xor
dec
or
push
dec
lock
lds
and
jno
push
jmp
notl
mov
push
in
cli
shlb
lods
push
mov
push
dec
cmp
das
insb
mov
icebp
xor
jp
leave
pop
or
scas
mulb
std
mov
out
mov
mov
testb
mov
lock
xchg
and
or
or
push
pop
das
pop
or
adc
dec
mov
jp
stos
outsb
add
fdivl
popa
inc
push
aaa
cmpsl
divb
shlb
addb
subl
mov
mov
xchg
cmpsl
push
cwtl
xorb
sbb
mov
movsl
or
xchg
in
in
unpckhps
cmp
adc
das
fsubrl
inc
push
sub
cmp
lcall
pop
push
mov
ret
sbb
addr16
repz
mov
pop
inc
xchg
stos
xchg
pusha
pop
insl
mov
lret
pop
xor
aas
orb
mov
fld1
jg
or
stos
sbb
outsb
scas
or
sbb
pop
call
jne
sub
lods
mov
jg
popf
ss
xlat
gs
sub
scas
ja
mov
cmp
enter
cmp
lret
repz
push
sub
rcll
add
adc
popf
dec
js
and
outsb
jae
js
aam
and
cmp
lods
dec
jmp
aaa
stos
in
cltd
subl
mov
bound
xchg
loopne
lea
in
inc
movb
lds
inc
movsl
inc
leave
fwait
sbb
ret
push
mov
xchg
jns
dec
jmp
mov
ret
lods
fdivrp
pop
std
cli
lock
adc
sarl
pop
fcoml
aaa
xchg
push
inc
aaa
adcl
out
xlat
or
or
aam
notb
outsb
jecxz
add
mov
and
mov
icebp
cmp
addl
stc
or
cmp
les
mov
into
mov
adc
add
fisubl
mov
or
cmpsb
jl
xor
loop
pop
out
sub
jno
sti
sahf
es
push
xlat
outsb
in
jnp
in
mov
add
dec
add
scas
lds
enter
mov
pop
gs
mov
xlat
mov
cmp
das
xor
imulb
inc
cmp
rorb
push
dec
mov
rorl
fsubp
or
mov
mov
cmp
lock
jae
jge
mov
cli
jl
push
push
jne
pushf
arpl
mov
iret
mov
pop
std
sub
ret
sbb
mov
xchg
fsubrl
adc
lods
push
mov
inc
jae
ret
and
into
push
xor
aaa
es
repz
mov
stos
adc
jecxz
in
xor
xchg
mov
ja
jne
clc
stos
xchg
out
push
pop
sbb
movsl
lcall
mov
fcmovbe
push
inc
inc
fnstenv
daa
clc
sbb
call
inc
jns
pop
aad
ljmp
push
ret
hlt
adc
sub
hlt
sbb
ss
sbb
mov
lds
test
sahf
xchg
dec
rorb
cmc
pop
xor
pop
data16
sub
lods
rorb
aaa
testl
jb
sbb
daa
fisubl
adc
loopne
cmp
data16
pushf
sarl
cmp
ljmp
gs
or
xchg
ss
shl
negb
ficoml
push
roll
add
dec
add
mov
sbb
sub
fisubrs
shll
clc
mov
movsb
lret
movsl
xor
xchg
mov
bound
cmp
fisttpl
insb
cli
ss
adc
cwtl
dec
pusha
je
adc
adc
cltd
es
dec
popa
or
ss
mov
gs
fwait
pop
push
mov
jne
add
adc
jg
sbb
xor
lret
out
xchg
icebp
out
inc
imul
je
lds
lods
test
and
xor
dec
es
xor
and
xchg
cmp
aad
shr
sbb
xlat
xchg
lock
mov
pop
dec
xchg
lret
push
fmuls
outsb
addr16
ret
fdivrl
mov
push
mov
testl
mov
int3
and
xchg
push
add
mov
adc
dec
inc
xor
sub
xchg
scas
xchg
repnz
jecxz
push
mov
cmp
gs
and
rcr
repnz
jecxz
push
mov
dec
mov
mov
lret
ret
jg
sti
ljmp
jge
cli
jle
std
xor
sbb
int3
test
add
add
std
shrb
pop
pop
cmpl
xor
shl
xchg
xor
jns
mov
pusha
sahf
daa
lock
std
pop
lahf
push
mov
fadds
cwtl
cmp
aaa
fisubrl
and
ss
mov
push
sbb
push
scas
jno
in
das
scas
mov
lcall
pop
fs
cltd
aaa
int3
or
push
sub
insb
xchg
inc
pop
inc
jbe
aam
aad
inc
mov
ret
pop
xlat
pop
fstl
adc
mov
jnp
jmp
jb
or
mov
push
inc
sbb
mov
dec
clc
js
push
inc
xor
out
jne
lret
icebp
arpl
lret
shrb
jl
ljmp
sbb
lret
adc
cwtl
adc
enter
adc
xchg
pushf
inc
mov
movsb
out
das
push
lods
insl
idivl
js
mov
and
push
push
pop
aaa
mov
jne
jne
xchg
jle
cmpsb
pusha
adc
test
mov
add
xchg
imul
or
inc
mov
insl
jne
into
sbb
out
sub
mov
fisubrl
fwait
push
hlt
stc
les
es
mov
cmp
lret
mov
addl
movsb
pop
mov
cmp
jl
and
or
push
push
mov
push
pop
mov
dec
sub
mov
lea
dec
mov
xchg
scas
mov
mov
outsl
cmpl
outsl
mov
roll
cmp
fxch
mov
gs
xchg
inc
mov
es
adc
or
adc
cs
pop
fimull
loopne
pop
frstor
dec
call
inc
xchg
lods
data16
movd
pop
jp
cmp
fstps
dec
lea
inc
dec
push
insb
aad
mov
jge
imul
add
xlat
cmp
mov
sbb
cld
repnz
push
test
and
jno
mov
mov
inc
in
cmp
pop
pop
iret
mov
adcl
xchg
ljmp
cmpsb
hlt
mov
mov
repnz
sti
js
cs
insb
sub
ds
fwait
and
shl
adc
jg
adc
cmp
sahf
cmp
push
push
sub
cmp
stos
bound
mov
jnp
fwait
out
sti
flds
imul
mov
das
fwait
cmc
daa
aas
add
mov
movsb
jae
lahf
or
xchg
xlat
mov
lods
push
aam
clc
dec
imulb
cmpsl
mov
xchg
xchg
ret
std
jg
pop
ja
pop
mov
mov
fidivs
push
fs
cld
pop
test
sbb
mov
cmp
fnstsw
push
xor
jno
pusha
push
push
rclb
fld
jbe
or
fbstp
idivb
mov
addr16
mov
fs
sbb
fwait
xor
lods
mov
mov
add
mov
inc
pop
mov
call
sbb
mov
lahf
inc
ret
xor
cmpsb
std
stos
lock
sbb
add
add
pushf
mov
add
mov
in
jl
xchg
into
inc
fsubs
test
dec
call
mov
clc
dec
popa
mov
xchg
sbb
inc
shlb
iret
ljmp
je
popa
lcall
clc
jge
mov
daa
fnsave
arpl
rorb
lods
sub
mov
xchg
shl
fcmovne
pop
hlt
addr16
aas
int
sbb
fists
in
movsl
pop
jp
call
xor
or
or
and
sub
imul
sub
jbe
mov
imul
cld
jns
fimuls
aaa
call
xor
int3
jg
decb
mov
lret
dec
mov
xchg
or
shll
daa
adc
ss
popa
sub
orb
xlat
xchg
leave
mov
adcb
inc
iret
cmp
std
rcrb
mulb
inc
xor
movsl
push
in
stc
pop
sbb
in
jmp
add
pop
and
push
out
cwtl
dec
out
sarl
fisubs
fildl
push
pushf
jb
cwtl
ja
mulb
pusha
in
xchg
sti
dec
xchg
imul
add
sbb
lds
adc
jbe
in
adc
and
mov
and
mov
adcl
sub
lods
dec
xor
je
gs
jmp
mov
mov
push
cmc
jnp
jo
not
pop
aam
xor
mov
inc
pop
cs
pop
shrb
sub
movsl
cmpsl
stos
sub
push
mov
aaa
es
mov
addb
sahf
inc
cmpsl
stc
popf
mov
sbb
clc
xchg
adc
jne
lret
adc
rcrl
popf
or
aam
lcall
push
lods
addr16
mov
xchg
push
cmp
sbb
mov
cwtl
sub
xor
and
sbb
fcomps
lods
scas
dec
pop
inc
cmp
inc
mov
or
jge
adc
xchg
pop
icebp
inc
xor
test
mov
jge
iret
push
pop
ja
in
cmp
shl
inc
aad
xchg
sti
mov
stos
sub
dec
shrl
dec
icebp
sbb
gs
jp
ret
jg
arpl
xor
dec
sub
pop
and
repnz
push
xor
add
xchg
aas
jle
cmc
inc
fsubrs
jmp
add
mov
and
xor
in
outsb
push
subb
sbb
push
rolb
sbb
test
mov
xchg
push
decb
sub
pop
and
mov
dec
dec
or
pop
xor
divps
dec
add
pushf
jnp
sub
fs
and
clc
mov
xor
aas
pop
inc
test
dec
or
add
mov
xor
fmul
push
dec
or
cmp
add
insl
and
out
jle
cmc
cmp
test
jg
add
push
mov
adc
mov
call
das
mov
sar
mov
cmp
jo
inc
xor
fsubrs
dec
lods
data16
test
ss
aad
sbb
je
mov
jo
sbb
push
or
std
dec
jl
pop
cmpsl
cli
int
js
test
xchg
inc
mov
stc
stos
inc
ljmp
hlt
push
ret
aaa
inc
addr16
mov
mov
icebp
aam
jg
sbb
push
cwtl
out
and
test
mov
gs
scas
push
mov
xor
mov
mov
aam
sub
xor
pop
jae
addr16
mov
or
xchg
fs
loopne
mov
dec
cltd
mov
lret
jle
aam
out
shlb
pop
pop
pop
jmp
mov
cmp
mov
lds
adc
push
jle
xor
je
rorb
test
mov
shl
adc
testl
div
cltd
adc
paddq
sbb
add
cmp
sbb
data16
add
sub
xor
inc
or
pop
fsub
and
loop
leave
pusha
mov
and
mov
adc
mov
inc
mov
cmp
mov
push
inc
pusha
dec
xchg
sub
adc
xor
sbb
pop
je
cwtl
dec
mov
xchg
fdivrl
xlat
push
mov
inc
outsb
stos
cmp
xchg
test
jl
mov
loope
cmc
dec
mov
mov
arpl
push
sub
test
out
and
xchg
or
and
arpl
cltd
in
push
fldt
ret
sub
sbb
lret
push
icebp
jo
arpl
call
xchg
sbb
in
mov
push
pop
popa
lods
or
daa
push
jle
popf
xchg
sbb
stos
pop
pop
adcl
js
rclb
es
mov
jb
add
jmp
movsb
xchg
in
outsl
dec
lods
cmp
iret
and
cs
push
inc
subl
push
push
cmp
inc
cld
ds
mov
pop
hlt
imul
adcl
aas
or
mov
push
mov
inc
lcall
sub
xchg
test
fsts
sti
dec
out
in
sub
add
or
jo
inc
test
jne
sbb
xor
pop
outsl
lods
dec
push
cmp
cli
pop
jl
and
pop
lods
test
imul
int3
or
dec
ds
and
insl
inc
inc
lods
pop
scas
std
cmpsb
dec
loope
inc
cmc
mov
xchg
push
add
jle
mov
xchg
inc
ss
push
mov
js
add
push
fcomip
inc
les
aaa
repz
pop
outsl
xchg
sbb
sub
imul
enter
aaa
test
xor
sahf
sbb
repnz
movb
jle
fdivr
dec
aaa
jbe
arpl
jb
mov
int3
inc
inc
rorb
mov
mov
add
ja
test
ret
clc
xchg
add
test
lods
imulb
aam
mov
adc
jns
xchg
imul
icebp
jns
adc
mov
dec
dec
add
adc
jno
cmpsl
das
mov
test
addr16
movsl
loope
aaa
mov
inc
pop
xchg
fisubrs
mov
popf
push
adc
xchg
mov
ja
xchg
inc
sahf
xor
push
adc
pop
lret
pop
sub
dec
dec
mov
inc
scas
inc
pop
leave
repnz
je
out
stos
int3
cs
mov
jmp
lock
sbb
cli
mov
adc
pop
fstpt
loop
divl
or
or
mov
ret
and
mov
lods
int3
mov
testb
and
inc
movb
ja
sbb
out
fsubrp
mov
das
add
mov
aas
cmp
lods
add
xlat
ja
push
sbb
lds
adc
add
push
data16
std
sub
mov
fwait
pop
mov
add
mov
mov
inc
lds
mov
jg
push
fucomi
daa
in
arpl
add
mov
es
pushf
xchg
xor
mov
dec
icebp
orb
test
popf
stos
ror
pop
leave
sahf
nop
iret
jg
outsb
imul
movsb
loope
xchg
mov
fdivrs
gs
rolb
pop
int3
cltd
lahf
pavgw
jp
xchg
data16
xchg
jg
inc
mov
or
push
call
adcb
bound
into
outsb
fdivrp
gs
out
outsb
adc
dec
sbb
movsl
mov
dec
sahf
cld
in
mov
icebp
movsl
or
roll
mov
daa
or
pop
add
jbe
lods
xchg
mov
cmpsb
and
lds
lret
xor
movsl
ds
mov
mov
or
or
testb
jo
dec
or
movsb
dec
stc
es
mov
lods
adc
and
stos
jle
cmc
adc
lock
xchg
xchg
push
xchg
push
push
addr16
fimull
sarb
lret
gs
cwtl
fmul
push
inc
cld
xchg
mov
inc
mov
mov
pop
scas
insl
pop
ja
aad
das
xchg
jae
mov
mov
sbbb
sbb
dec
cmp
or
mov
and
ds
adc
pop
hlt
sub
pop
imul
cld
lock
adc
jb
xchg
pop
shl
xchg
and
jle
jle
push
lods
sbb
add
fdivrl
in
and
test
aad
lret
mov
lds
aad
inc
and
lods
pop
jecxz
inc
cs
je
add
lods
ds
pusha
imul
cli
rolb
jecxz
cmp
add
jo
es
lahf
or
inc
dec
jecxz
dec
leave
jg
mov
and
jae
mov
sbb
ljmp
mov
pop
gs
add
dec
mov
into
push
cltd
xor
gs
cmp
mov
mov
mov
imul
add
sbb
jp
mov
inc
ret
push
sub
mov
mov
cmpb
clc
jl
out
fmul
loop
out
pusha
fisttpl
inc
jbe
iret
xor
dec
nop
sub
iret
mov
fcomip
cmp
xchg
jl
shll
and
sbb
or
and
shlb
add
imull
mov
imul
insb
mov
mov
jmp
xchg
rep
mov
sbbb
push
jne
add
xchg
lahf
in
cwtl
cmp
rcrb
in
ficomps
inc
notl
jbe
adc
shlb
push
sti
jp
push
dec
add
popa
xor
fadd
push
cmp
fnstsw
mov
lcall
adc
or
jb
add
mov
mov
ficomps
das
jle
pop
dec
push
mov
xor
aas
add
inc
sub
sbb
mov
inc
mov
mov
sti
jno
and
push
push
fucomp
jne
push
cmpsb
mov
mov
pop
test
mov
push
lcall
rorl
test
jno
cwtl
je
dec
popf
cmp
pop
aaa
mov
pop
lcall
fsubp
mov
adc
ficomps
mov
into
ret
addr16
mov
push
jo
cltd
mov
cmp
cltd
mov
and
arpl
lock
fisttpll
insl
and
inc
aad
inc
mov
jp
mov
add
mov
icebp
mov
or
push
test
inc
dec
sbb
and
add
mov
xchg
jb
out
push
into
or
xchg
lods
jbe
mov
push
jnp
movsl
mov
leave
jnp
aad
clc
lret
pop
fcoms
mov
sub
test
call
test
adc
data16
and
movsb
pop
testb
data16
or
mov
cmpsl
sbb
cwtl
insl
mov
out
push
cmp
aaa
or
xchg
bound
shl
mov
and
xor
push
push
and
iret
lahf
dec
ljmp
mov
js
shr
daa
and
jns
xchg
std
stos
test
ds
in
js
sub
push
jo
fimull
adc
inc
lret
pop
daa
jb
jo
add
mov
cmp
lcall
fucomip
sbb
lock
es
pushf
fsubs
rolb
fcoms
push
leave
xchg
jg
subl
ficoml
xor
inc
mov
mov
stos
cwtl
inc
xchg
xor
add
xchg
mov
in
xchg
aas
inc
xchg
push
loopne
arpl
fcoml
sbb
in
push
inc
mov
xchg
out
int3
arpl
cmpsl
pusha
leave
xor
test
cmp
imul
inc
call
pop
leave
repz
xchg
push
sbb
mov
lea
call
fwait
nop
fs
xor
or
lahf
in
xor
dec
sti
fsubrs
xchg
sub
sbb
push
cmpsb
int3
ljmp
dec
in
repz
cmpsb
enter
cltd
add
jo
inc
scas
mov
mov
fisubs
mov
push
pop
mov
mov
dec
ret
and
xor
sub
iret
loope
cmp
dec
push
adc
sarl
rolb
lds
iret
adc
push
pop
imul
call
les
sub
pop
cli
shlb
or
jo
and
movsb
add
mov
inc
bound
jb
fdivs
cwtl
ret
dec
mov
dec
add
sbb
xchg
dec
movsb
mov
jbe
xchg
jbe
cmp
out
add
sti
xor
and
movsb
aas
mov
adc
fucom
xchg
cmpsl
mov
or
mov
mov
xor
movsl
push
dec
pop
mov
daa
lcall
je
cmp
addr16
out
pop
jnp
mov
shll
mov
insl
xchg
cld
cld
sbb
jl
mov
je
xchg
mov
dec
out
add
test
inc
adc
sbb
add
inc
jbe
sbb
pop
popf
dec
stos
fadds
adc
testb
xor
add
push
aam
mov
push
mov
arpl
or
leave
arpl
incb
pop
jle
add
cmpsb
mov
loopne
cwtl
jbe
add
lcall
lret
js
adc
fiaddl
js
fbstp
jl
fildl
pop
xor
mov
inc
loopne
sub
pop
and
xchg
pusha
scas
jge
cs
mov
test
add
in
mov
jmp
fwait
insb
mov
dec
lea
int3
jg
push
out
jl
not
outsl
jecxz
out
pop
sbb
jae
loopne
xlat
in
pop
mov
ss
adc
mov
add
xchg
mov
fwait
popf
sub
xor
add
int3
gs
or
rorb
jg
xor
push
mov
data16
in
push
jns
inc
add
repnz
mov
insl
mov
dec
mov
stos
jle
mov
je
nop
das
or
jmp
jg
and
inc
out
lock
cmpsb
cmp
sub
cmpsl
jo
int
pop
lods
and
xchg
les
dec
sbb
js
pop
mov
or
inc
idivl
inc
pop
jle
or
cmp
sbb
xchg
and
fsubs
pop
scas
jbe
je
xor
test
dec
popa
fistl
and
nop
or
loopne
sub
mov
or
xor
fildl
loope
iret
sub
mov
lea
cmp
aaa
cmp
lahf
cli
jp
sbb
cmpsl
aaa
inc
fldenv
cld
cmp
mov
les
test
fstpt
and
cmpsl
iret
std
loopw
cmpsl
in
push
adc
in
jno
pop
mov
adc
jo
stos
mulps
ret
sub
aad
push
add
sub
jo
and
mov
mov
or
aas
inc
sub
insl
cwtl
xchg
mov
pop
lcall
jmp
pushf
dec
aam
jns
aam
scas
push
or
adc
rorb
mov
stos
bound
clc
and
out
and
push
movsb
enter
fidivs
loopne
jo
test
mov
push
xor
ret
arpl
out
out
xor
ss
sti
sub
inc
sub
int3
mov
mov
movsb
mov
cmpsl
movl
movsb
sbbl
xchg
ljmp
jbe
xlat
jb
out
mov
addr16
mov
dec
dec
nop
loopne
jmp
scas
cmc
enter
jnp
adc
ret
pushl
pop
adc
jl
push
cmc
dec
pusha
sbb
popf
mov
xor
xor
movsl
stos
mov
jmp
imul
fisubs
pop
fidivrs
mov
cs
scas
xorb
jecxz
xchg
movsb
outsl
fwait
insl
xorl
cmp
push
in
or
hlt
std
pop
cmp
stos
dec
mov
push
lahf
lods
mov
xchg
sbb
and
or
cmp
jg
mov
in
je
xchg
stc
sbb
jbe
loope
in
mov
cli
ss
addr16
push
add
sub
cmp
jbe
fistpl
fs
pop
add
subl
push
mov
pop
sarb
inc
outsb
hlt
and
xor
jo
mov
sub
push
mov
hlt
jno
in
jne
xor
arpl
jb
cld
inc
push
in
cmp
test
mov
jmp
mov
xchg
mov
sub
loope
shl
cmp
push
inc
and
push
das
cld
and
pusha
cmp
lret
hlt
jmp
lea
das
mov
xor
and
sbb
mov
fsubrs
mov
nop
mov
mov
lahf
jo
push
enter
outsb
js
in
or
shlb
ljmp
out
sub
je
push
mov
shr
inc
mov
push
mov
into
push
adc
pop
ss
or
movsb
movsb
or
sti
sbb
aas
dec
mov
adc
fcos
test
adc
faddl
cld
scas
lds
int3
fmul
mov
pop
daa
push
popa
jae
stos
outsb
enter
and
cmc
pop
ds
js
ret
adc
xor
cmpsb
into
mov
in
xchg
sti
mov
and
mov
ret
dec
enter
sbb
or
orl
xor
cmp
lock
xor
cmp
xor
cltd
add
xchg
int
cltd
and
adc
lahf
sti
gs
sbb
bswap
shrl
in
sbb
in
setbe
jmp
xorl
push
sub
dec
pop
inc
add
stc
inc
aas
xchg
adc
fsts
add
mov
hlt
fs
xor
iret
jmp
mov
rorb
jge
dec
fst
adc
dec
xchg
ss
xchg
cmp
inc
xor
imul
pop
jg
out
pop
sbb
dec
jo
or
lock
pop
or
dec
test
shlb
nop
cmpsb
mov
jle
pushw
daa
adc
dec
fnstenv
sahf
add
addr16
xchg
jae
push
pop
aaa
mov
shrb
xorl
cmp
xor
inc
mov
xor
xor
jbe
fbstp
out
adc
mov
add
push
ds
out
mov
in
add
jmp
xor
push
leave
insl
push
push
rcrl
dec
jp
push
push
inc
scas
xor
iret
sub
outsb
jae
stos
jecxz
pop
imul
xor
aas
cld
xor
orl
xlat
jp
mov
loopne
out
stos
lock
fwait
mov
cmp
gs
mov
dec
pop
popa
popa
adc
sbb
sub
ljmp
lcall
aaa
push
testl
cmpsl
outsb
xor
into
orl
xchg
jmp
mov
and
jmp
les
fidivrs
in
fsubs
shlb
jns
inc
push
ret
xchg
sbb
xchg
sbb
jns
pop
jne
mov
shr
jmp
sti
mov
xchg
roll
jl
or
in
and
jo
xchg
inc
inc
and
das
or
and
rol
stos
sub
mov
clc
or
mov
jge
ret
out
inc
fcomp
cld
lea
or
sbb
inc
push
cmp
xchg
cmp
xor
mov
ret
movsl
daa
aad
push
push
adc
add
mov
push
scas
mov
push
movsb
jle
cmpsb
hlt
js
sbb
push
pop
mov
or
jno
movb
dec
xchg
cvtps2pi
sahf
daa
jg
stos
push
jno
push
loop
icebp
push
mov
ja
ljmp
into
xchg
je
mov
iret
or
push
adc
adcb
insb
push
cwtl
movsl
hlt
in
mov
sbb
push
jnp
cmp
sbb
popa
cmp
jecxz
mov
or
mov
ja,pn
xor
ja
mov
stos
inc
lds
add
and
cmc
mov
sbb
push
xor
sub
pop
dec
fsubrl
cmc
lret
shrb
out
mov
jnp
push
cltd
pushf
mov
flds
subl
adc
xor
loopne
test
ret
ret
aad
dec
push
ss
out
inc
and
lods
test
cmpsl
popf
xor
lcall
int3
out
mov
mov
and
mov
movsb
inc
mov
test
subl
jae
and
insl
sub
cmp
mov
aad
loop
inc
mov
lahf
fwait
ds
mov
mov
pop
in
adc
fdivrl
xor
xlat
ret
pop
inc
ljmp
cmp
stc
mov
inc
mov
mov
adc
adc
sub
mov
call
sti
subb
dec
add
add
clc
mov
xchg
xor
call
cltd
adc
sbb
fimuls
cmp
add
jle
inc
sarb
rcrl
bound
and
xchg
push
mov
loope
or
arpl
movsl
aas
mov
je
mov
and
mov
ret
sbb
loope
jp
test
mov
and
dec
push
repz
fidivrs
rorb
ljmp
xor
sub
shlb
cmp
negl
add
mov
adc
rclb
sahf
dec
sub
jns
or
jne
pop
or
sbb
popa
les
negb
push
and
fildll
and
cmp
or
push
idiv
out
pop
and
ret
fdivr
mov
out
sbb
daa
insl
xchg
jae
jge
stos
enter
sub
sub
fbstp
mov
mov
into
dec
data16
test
in
dec
xchg
inc
jo
mov
jle
ret
cmp
jo
fs
in
je
mov
lret
mov
cli
mov
lods
jns
or
in
or
outsb
fldcw
mull
pop
je
and
jnp
rolb
lock
xor
xchg
pop
inc
cs
cld
arpl
dec
into
push
sub
lods
addb
mov
sahf
and
mov
push
lock
test
or
add
and
and
dec
xchg
adc
push
lods
mov
pop
lods
out
jmp
insl
ret
or
sbb
ffreep
push
or
or
gs
sbb
push
xchg
add
outsb
jl
mov
flds
lcall
jge
jns
dec
fsubrl
imul
int3
pop
ss
stos
sti
and
lahf
add
aaa
and
xchg
jle
jo
cmc
ret
lahf
hlt
mov
insb
jb
sahf
fstps
or
lcall
jbe
or
xlat
rcr
fldl
enter
aas
in
and
sub
jb
enter
xacquire
stos
pop
jge
movsl
push
jecxz
in
push
xchg
jnp
test
or
inc
push
push
inc
add
jmp
xchg
inc
movsl
xchg
xchg
ja
mov
push
fisubs
leave
and
xor
sti
and
mov
int3
mov
ss
jns
cld
sub
into
sbb
sti
xchg
fcoml
int3
fnstenv
xchg
jmp
scas
lock
sbb
adcb
scas
or
push
sbb
jae
xor
fwait
lret
and
cmp
and
jnp
jp
cld
test
movsb
mov
incb
adcl
push
pop
fcmovb
pop
mov
pop
xor
je
ret
arpl
adc
mov
scas
mov
test
icebp
daa
jno
cmp
mov
mov
arpl
mov
or
lret
hlt
mov
push
cmpsb
mov
jmp
fs
push
fs
jl
in
jb
idiv
push
and
jo
in
or
pop
aad
jl
cwtl
and
push
pop
xor
inc
push
or
and
ljmp
or
and
fdivrs
push
fs
cltd
or
or
popa
jecxz
aam
sub
jle
xor
cmp
push
push
or
jge
inc
insl
mov
clc
scas
sub
std
xlat
repnz
pop
sti
jno
and
mov
lcall
xor
mov
insl
sub
dec
stos
imul
loope
cmpb
push
fisubrs
xchg
push
push
ja
fidivrs
ret
repz
mov
ljmp
and
sbb
cwtl
mov
mov
inc
jge
dec
movsl
pop
rcrl
xchg
cmp
or
cmp
popa
xchg
xor
js
jge
push
sub
mov
cmp
mov
mov
je
adc
jno
cmp
push
mov
add
or
jle
inc
adc
and
and
hlt
or
sbb
int
mov
popa
lods
sub
in
repz
loop
leave
lods
subb
in
cltd
mov
dec
cmp
stos
xchg
inc
jbe
out
je
mov
in
dec
sub
jg
xor
std
xchg
xor
divl
ljmp
mov
push
lea
push
mov
ljmp
jno
in
push
pop
lret
lods
jns
sub
pop
es
pop
push
dec
shll
iret
adc
mov
andl
hlt
frstor
mov
ja
cmp
sbb
or
jne
enter
pop
popa
mov
insl
aam
pop
inc
in
jl
in
pop
push
xchg
ret
jo,pn
push
sub
push
mov
outsl
in
icebp
jmp
mov
repz
aaa
nopl
outsl
dec
jp
mov
push
sbb
fcoml
push
ljmp
mov
xchg
or
gs
leave
jle
pop
fnstcw
out
sbb
sbb
xchg
adc
clc
aam
scas
push
sbb
sbb
mov
xor
pop
jge
jg
fdivl
pusha
cmpsl
ret
mov
incl
and
xchg
popa
mov
fwait
fdivl
push
pop
ret
sub
ror
jns
std
loope
les
insb
imul
cs
lcall
jle
mov
subb
aad
sbb
jg
add
inc
shlb
jae
dec
adc
or
int3
pop
pop
sub
aam
and
add
inc
pushf
nop
sub
gs
and
in
flds
pop
jp
icebp
dec
xchg
inc
inc
sub
mov
push
xor
cmpsl
cmp
push
adc
jae
out
out
sub
jbe
stos
add
shr
mov
fdivl
fists
inc
scas
jp
sub
fisttps
jecxz
movsl
jnp
in
mov
bndstx
repz
inc
push
mov
lods
ss
enter
sti
rol
mov
test
add
jle
insb
jmp
loope
enter
mov
jg
scas
and
mov
js
mov
lret
sbb
dec
cli
or
fisubrs
pop
loope
xor
aam
rcrl
and
out
inc
and
or
xor
adc
clc
ret
imul
mov
sub
push
jae
sti
addr16
jno
cltd
or
xchg
ljmp
pop
adc
lods
test
into
jg
and
movsl
mov
pop
xor
stc
subb
ljmp
data16
xchg
mov
imul
scas
push
jmp
sbb
setne
push
pop
push
das
movsb
or
pop
aas
cmpsl
stc
xchg
jnp
cs
loopne
lods
push
adc
xchg
sub
fwait
leave
jno
dec
aas
lods
mov
shrb
lds
cli
fsubl
repz
int3
mov
jmp
push
ja
pop
inc
mov
and
push
and
xor
pop
mov
enter
adc
mov
pop
sub
leave
mov
dec
xor
mov
sub
push
jnp
stc
pusha
pop
ljmp
sahf
aam
jb
add
stos
inc
clc
fnstsw
inc
adcb
cmp
sti
push
orb
loop
pop
cmc
ficoml
lcall
inc
adc
ja
ret
call
xchg
xchg
adc
aaa
mov
pop
les
sbb
repz
or
popf
orps
fldln2
pop
and
push
jnp
dec
inc
adc
cmp
mov
in
in
jmp
mov
xchg
das
add
notl
sub
adc
testl
dec
dec
adcb
push
sbb
jo
in
inc
mov
add
cli
mov
fdivr
sub
scas
pushf
fistl
jmp
rorl
insb
int3
push
fcompl
or
cmpsl
lds
lock
lret
dec
xor
mov
xchg
fimull
repnz
inc
sbb
add
inc
pushf
cmp
jb
dec
das
sbb
shrl
cmp
push
mov
mov
dec
lock
out
or
jle
lods
shlb
push
mov
out
out
push
enter
clc
sub
add
xor
xlat
lods
cld
cmpsl
cmp
xor
cmp
xchg
aas
cmp
mov
xor
cwtl
lea
cmp
stos
add
sub
mov
lcall
mov
cmp
fcompl
fistps
sub
mov
cmpsb
or
mov
test
mov
xor
pop
xchg
imul
sahf
add
add
loop
jnp
les
jnp
sti
std
dec
lcall
mov
pop
lahf
es
sub
jne
sbb
cmp
jno
insb
maskmovq
testl
leave
popa
mov
adc
mov
repnz
jne
out
cmc
add
cld
add
cpuid
in
fs
and
lds
mov
pop
mov
mov
daa
mov
cmpsb
addr16
fistpl
scas
mov
int3
rcl
mov
sbb
stos
cld
xchg
sahf
xor
dec
lock
jmp
imul
push
mov
rorl
dec
lds
popl
movsb
int3
hlt
sbb
lods
enter
push
pop
push
inc
test
dec
jp
popa
imul
aad
leave
cmp
cmp
dec
push
xchg
mov
cli
inc
movsb
ja
test
push
pushf
dec
jg
das
push
xor
cmp
cmp
stos
push
push
adc
sub
jg
jp
sbb
popa
jne
sbb
sub
fistps
push
adc
scas
inc
mov
aam
xchg
aam
nop
mov
or
arpl
loopne
pop
gs
out
pop
xchg
pop
mov
aad
enter
repnz
mov
fucomip
sub
enter
sti
cmp
mov
ret
cmc
icebp
mov
and
xchg
test
sub
leave
cmp
ja
or
xor
das
push
ljmp
xor
loopne
lods
push
cmp
mov
sbb
fwait
push
jle
pop
ja
cmp
push
cs
sar
sbb
xchg
xor
enter
les
xorb
decl
mov
push
inc
mov
jnp
sbb
arpl
xchg
jbe
adc
jb
js
lea
bound
out
nop
repz
stos
std
xorl
adc
cmc
mov
jne
ljmp
mov
xor
pop
mov
adc
jle
in
mov
fstps
fisttps
xor
fsubrl
mov
sub
aas
xchg
idivb
stc
into
and
sub
add
mov
ja
xchg
xor
test
lcall
dec
cmp
xchg
das
fprem
xchg
sub
xor
push
or
and
xor
cli
xor
jbe
sub
test
mov
faddl
jne
mov
das
andb
js
mov
xor
ja
sbb
cwtl
loop
mov
bound
ret
movsl
jnp
xor
ss
iret
cwtl
rclb
jmp
adc
adc
mov
nop
mov
hlt
aad
in
stc
arpl
ret
pop
adc
jl
adcb
mov
pushf
std
mov
in
mov
js
pavgb
xchg
clc
jae
or
leave
pop
jo
pop
inc
js
mov
aaa
pop
and
arpl
icebp
mov
add
fsubl
cltd
lock
xchg
sub
clc
cmove
pop
mov
fmuls
push
stos
test
rcrl
test
push
mov
das
jg
mov
push
fldcw
loopne
and
jmp
out
pop
cwtl
sbb
shl
daa
cwtl
push
out
push
mov
fwait
int3
hlt
mov
bound
xchg
cld
es
fisubrs
jbe
jge
jle
add
ret
stos
sbbl
inc
data16
xchg
inc
sub
jmp
adc
xchg
mov
jmp
popf
call
sub
xor
lret
or
xchg
sbb
in
mov
add
jb
xchg
int3
ficompl
into
ret
inc
pushf
cmpsb
and
cmpsb
push
push
xor
insb
shll
sub
dec
jp
mov
mov
rcr
enter
and
fldcw
test
inc
inc
stos
inc
inc
adc
or
pop
and
sbb
mov
adc
das
clc
repnz
nop
call
dec
arpl
not
mov
mov
imul
sub
ja
xor
xchg
xor
sarb
aad
add
or
int3
cmp
inc
sti
add
pop
jb
adc
testb
xchg
es
imul
jnp
icebp
pop
scas
jge
lahf
xor
or
aaa
data16
pop
fcoml
aad
adc
mov
jo
pop
out
cs
dec
mov
xor
push
dec
sahf
push
and
sbb
lods
push
jns
adc
mov
push
pop
xor
xchg
in
idivb
pop
iret
pop
fisubrl
push
loope
ficoml
cmp
push
push
jo
adc
and
adc
stc
sbb
mov
sahf
test
inc
lcall
in
int3
stc
xorl
rolb
loop
and
and
dec
ljmp
test
je
in
mov
pop
push
xor
adc
sbb
and
ret
jo
push
pop
popf
test
sub
or
ret
inc
fildll
sub
lds
rcl
js
xor
shl
xor
jo
or
popa
lret
call
mov
testl
add
jge
lods
cmp
jno
or
mov
mov
pop
imul
mov
sub
cmp
push
pop
outsl
imul
xlat
dec
shrl
and
mov
repz
scas
sbb
cmp
lods
jo
call
iret
cmpsl
leave
mov
xor
sbb
mov
xor
push
lea
repnz
pushw
loop
int
aad
out
test
and
mov
jecxz
fsubl
dec
test
xor
xor
test
sbb
or
leave
gs
test
movsb
sbb
push
lock
pop
ror
aam
ret
push
dec
das
ret
mov
mov
sub
aaa
call
icebp
out
pop
pop
xor
in
outsl
mov
add
rcrb
cmp
adc
stos
pop
or
push
inc
dec
push
cmp
out
sbb
or
test
and
adc
out
dec
std
pop
fsubr
dec
or
lock
jge
rolb
mov
mov
and
loopne
push
inc
add
cmpsl
lahf
cmp
mov
aas
sbb
cmc
repnz
xor
leave
xchg
push
or
fstl
inc
sub
and
imul
adc
jle
loope
das
dec
popa
pop
movsb
pop
mov
sub
jl
jae
dec
iret
in
int3
je
adc
mov
in
and
leave
dec
shr
test
iret
aad
jecxz
std
out
xchg
cmpsl
outsb
cmp
mov
hlt
jb
xchg
xlat
jno
fwait
stos
mov
bound
out
js
adc
into
push
data16
xchg
inc
jbe
xchg
cmpsl
add
lods
iret
out
loope
cld
lods
sbb
jae
mov
mov
cmp
inc
lret
mov
dec
jl
lods
cmp
aas
ds
pusha
std
sbb
adc
lret
xor
mov
pop
cmpsl
sbb
jl
push
cltd
xorb
pop
stos
push
pusha
pop
ret
out
movsl
mov
pop
and
pop
fcmovne
fistps
insb
std
push
push
out
shlb
stc
or
push
and
inc
mov
into
sbb
inc
ficoms
lds
pop
jo
jg
and
je
pop
xlat
das
push
mov
fucomp
sbb
repz
outsb
mov
imull
push
lcall
incl
adc
add
in
push
dec
fcomps
jecxz
repz
mov
xorb
jmpw
sahf
lock
xor
mov
imul
and
in
js
out
mov
ds
shlb
mov
cltd
pop
and
dec
mov
sub
imul
push
dec
xor
pop
mov
add
xor
repnz
pop
inc
dec
das
out
lds
jecxz
lret
or
fnstenv
mov
dec
adc
pushf
mov
xor
cmp
mov
push
push
push
sbb
lods
test
in
bound
lock
insb
add
xlat
jno
and
or
mov
mov
sub
inc
lret
mov
sub
adc
sub
inc
shl
imulb
enter
mov
pop
ljmp
sub
adc
dec
push
int3
add
out
jl
add
or
movsb
in
mov
outsl
or
repnz
jmp
out
cmp
add
repnz
daa
and
insl
and
je
lds
add
inc
mov
les
push
cmpsb
pushf
pusha
cld
jnp
xchg
xchg
pop
into
lcall
push
lret
int
rcll
pop
inc
je,pn
outsl
adc
dec
data16
cmp
xor
and
pop
xchg
xor
clc
push
fcomp
pop
movsl
inc
in
inc
pop
pop
sbb
aaa
cs
nop
movsb
or
out
xchg
inc
scas
sbb
pop
xchg
je
testb
cmc
inc
movsl
ret
mov
stos
sub
fsubrl
scas
je
popa
ds
mov
imul
cld
dec
movsb
clc
subps
stos
andb
pop
and
pop
or
lds
mov
mov
test
in
xchg
out
mov
xchg
mov
cmpsl
xor
xchg
stc
fwait
pushf
fwait
mov
pop
es
push
or
mov
hlt
xor
les
and
scas
push
or
mov
lods
cmpb
rcrb
push
leave
dec
adc
cmpl
ljmp
fisubrl
sbb
push
and
scas
xchg
les
lret
movsb
sub
scas
and
jecxz
sarl
push
xchg
fwait
sbb
ljmp
push
pop
insl
jo
inc
inc
push
push
cmpsb
dec
pop
or
adc
mov
or
lret
mov
adc
fnstenv
arpl
in
fs
daa
inc
shlb
bound
lret
into
popa
imul
push
xchg
and
jnp
dec
pop
dec
xchg
sbb
cltd
movsb
ljmp
mov
fsubs
or
jmp
cmp
aaa
sbb
loopne
icebp
sub
sahf
pop
clc
mov
insl
and
cltd
fldl
push
out
and
ficompl
xchg
or
jle
adc
add
mov
push
push
pop
xor
insl
lods
pop
out
cmp
int3
push
pop
movsl
jecxz
add
and
xchg
cwtl
xor
cli
lcall
add
fistl
sbb
icebp
out
xor
inc
xchg
xchg
pop
fcompl
data16
test
push
mov
push
cmp
cltd
sub
xchg
ret
adc
cltd
lahf
sub
nop
dec
iret
popf
inc
jmp
mov
insb
or
pop
insb
dec
sbb
ret
pop
mov
shr
pop
dec
je
mov
inc
sub
adc
ljmp
mov
test
mov
mov
loop
dec
pop
sub
add
adc
pop
add
enter
sbb
leave
push
jle
repnz
es
or
fucomip
or
or
rorl
lahf
xor
loope
inc
rol
cmp
sbb
mov
xchg
leave
out
rolb
repz
sbb
lret
in
lret
subb
fs
rolb
jb
test
aas
ds
mov
pop
bound
sub
jnp
mov
mov
jae
aam
push
shrl
jne
faddl
arpl
iret
push
add
outsb
stos
cmc
mov
in
mov
lcall
xchg
in
push
jno
mov
and
mov
add
cmp
dec
jno
mov
in
les
xor
into
dec
inc
xchg
in
pop
mov
enter
xchg
es
push
push
scas
sbb
or
cltd
push
pushf
add
scas
rclb
xor
xchg
movl
jnp
sub
push
mov
pop
scas
push
pop
das
lock
add
cwtl
insl
dec
out
mov
loope
sub
test
fwait
push
in
add
push
pop
pop
nop
aaa
lahf
ffree
fdivrl
xor
xorl
fistps
iret
mov
test
and
sub
mov
xchg
aad
inc
xchg
aas
adc
push
adc
repnz
movsb
push
cld
jo
insb
dec
mov
xor
aam
imul
pop
sbb
lods
mov
pop
and
dec
stc
inc
xor
mov
add
inc
jae
cltd
push
push
insl
in
out
fldenv
adc
xchg
jl
mov
out
mov
push
xor
in
xchg
add
mov
sbbb
jp
adc
add
cmp
insb
add
fucom
xor
sbb
sub
cmp
lds
movsb
pushf
sbb
xchg
push
cwtl
fs
jl
fwait
or
das
mov
mov
ss
add
frstor
int3
ljmp
dec
aaa
ret
loop
lock
sub
js
jp
cmpsl
fstl
test
xlat
and
xchg
cmp
sbb
mov
int
pusha
sub
mov
xor
mov
pop
sbb
dec
cmp
pop
mov
xor
ljmp
daa
stos
sbb
add
fsubrs
nop
adc
leave
sahf
cmp
mov
lret
sti
data16
into
in
jmp
sbb
push
jecxz
fildll
and
lods
clc
out
fldl
in
xorb
push
iret
aaa
daa
push
cwtl
jg
imul
sbb
fdivrl
cli
add
mov
mov
or
lods
adc
sbb
cmp
lret
cld
lods
cli
pop
je
push
cmpsb
add
frstor
jne
je
cmpsb
or
jnp
iret
decb
push
mov
or
test
fiaddl
sub
js
add
xchg
mov
pop
addl
ja
aad
mov
sub
add
test
or
cmp
or
shll
sahf
add
pop
out
iret
adc
imul
ja
rcll
add
push
in
cmc
lds
fcmove
xor
xchg
jne
call
sti
jp
dec
push
pop
testb
insl
movsl
jno
rclb
cltd
mov
loopne
and
jge
sbb
cmpl
pop
mov
push
push
in
add
sarl
and
sbb
cmp
scas
dec
sahf
jbe
movsl
pop
imull
sahf
rorb
js
inc
ja
mov
xchg
add
adc
loope
sbb
push
dec
daa
and
jp
out
pop
xlat
scas
mov
inc
cmpsb
jp
leave
js
xlat
adc
les
movsb
cmp
mov
inc
test
stc
jge
stos
jnp
mov
pop
scas
mov
cltd
mov
inc
gs
cmp
and
cli
sahf
push
add
stc
mov
loopne
pop
test
mov
insb
lds
add
shl
adcb
xchg
mov
jno
push
xor
cmp
cmp
sub
inc
and
push
pushf
les
cs
mov
popf
clc
lock
das
lods
es
mov
xor
inc
bound
xchg
push
mov
add
sub
je
lcall
inc
aas
lea
push
xchg
lret
pop
xlat
xorl
dec
push
std
sbb
mov
lock
jmp
mov
cmp
arpl
outsl
pop
or
imul
jl
pusha
fistl
pushf
and
orb
mov
push
cmp
fs
dec
sub
repnz
jl
dec
inc
dec
insb
fcoml
lret
pop
into
subb
add
cmpsb
into
dec
mov
lock
lret
mov
push
orl
test
rcr
xchg
jp
das
cmp
in
xor
cmp
cmp
mov
scas
repnz
outsb
testl
jns
adcl
stos
outsb
in
addr16
xor
in
cltd
add
pop
aaa
mov
out
aas
adc
bound
mov
ret
pop
outsb
jns
out
push
inc
stc
pushf
inc
enter
push
jne
mov
mov
inc
shlb
mov
and
add
cli
xchg
outsb
cld
outsb
add
out
add
push
and
inc
jg
lcall
mov
fdivs
fwait
push
xchg
inc
mov
mov
pushf
aad
inc
insb
push
sub
dec
push
in
sub
mov
out
fadd
faddl
xadd
sbb
shl
xchg
lea
inc
add
mov
mov
xchg
jb
icebp
nop
in
iret
sub
sub
es
arpl
ficoms
fs
mov
push
test
jnp
scas
dec
loopne
dec
stos
mov
aas
lods
fildll
mov
loope
leave
nop
ds
sub
xor
pop
test
lds
push
mov
fldenv
jnp
and
out
push
loopne
pop
sub
xchg
sub
ljmp
daa
adc
xor
inc
dec
mov
push
stos
push
or
leave
xchg
jb
shll
cmp
xor
idivl
lret
sbb
xor
stos
and
andl
and
hlt
ja
adc
repnz
add
ss
std
mov
xor
pusha
add
pop
repz
jb
push
pop
dec
xchg
pop
ja
out
in
jmp
sbb
xchg
jmp
in
shll
push
cmp
jle
mov
dec
cs
adc
inc
inc
fidivrs
push
ret
neg
sub
jl
jl
imul
lcall
test
dec
pop
outsb
xchg
int3
sbb
decl
mov
out
inc
gs
fcompl
jp
cmpsb
mov
ja
cmp
dec
dec
popa
sbb
push
fcoml
in
mov
cmpsl
mov
mov
push
adc
xor
out
shrl
mov
jg
popf
dec
mov
sub
and
mov
inc
cmp
pop
mov
test
stc
mov
and
cmp
lods
and
adc
add
mov
push
inc
jo
ret
jns
repnz
add
push
jo
insl
mov
test
xchg
jl
movsl
jmp
adc
lahf
lea
and
pushf
hlt
sbb
sbb
xor
aas
lds
dec
into
jmp
out
pop
imul
mov
mov
pop
push
mov
cmpsb
into
out
stos
mov
inc
inc
sar
pop
into
mov
jmp
daa
inc
adc
jno
cmp
push
inc
nop
repz
je
xchg
cli
pop
mov
lods
std
inc
movsl
push
jns
aam
mov
pop
idivl
fstpl
pop
daa
jbe
sub
mov
add
and
scas
jg
insb
cmp
shrb
inc
dec
dec
pusha
ficomps
mov
sbb
mov
dec
pop
and
jbe
jo
mov
push
dec
pop
je
xchg
clc
fstl
push
idivl
sbb
out
inc
outsl
dec
mov
movsb
push
ljmp
jp
lahf
xchg
out
je
loope
mov
lods
in
sub
sti
inc
push
imul
dec
ljmp
cmp
adc
xor
enter
dec
int
lds
pop
gs
push
inc
xlat
jno
loop
in
call
orb
or
dec
test
xchg
insb
or
inc
pushf
das
jo
dec
addr16
push
ret
push
mov
das
xchg
fdivrp
xlat
cmp
push
mov
lret
mov
sbb
push
insl
xchg
xchg
lea
jne
pusha
mov
addr16
cmp
hlt
rorb
push
inc
test
xor
mov
xor
ds
ljmp
inc
adc
ja
mov
adc
xorb
or
cs
xchg
test
jns
mov
cltd
pop
pop
push
pop
fwait
ret
mov
out
xchg
loope
dec
int
cmc
je
mov
and
mov
cmc
mov
leave
push
inc
inc
mov
jbe
faddl
or
push
dec
insl
or
mov
cmp
into
push
in
and
out
dec
ljmp
insl
mov
cmc
insb
mov
filds
mov
in
test
lret
sti
sub
pop
add
xchg
inc
leave
mov
out
xchg
enter
stos
mov
xor
call
nop
xchg
fcmovbe
repnz
xchg
adc
popa
mov
lcall
stc
dec
data16
mov
xor
shrb
pop
movsb
enter
mov
sub
popf
xchg
sub
psllw
sbb
inc
jmp
mov
push
lods
sub
or
addr16
fsubrl
cmpsl
push
fimull
pop
mov
icebp
hlt
xorb
sub
lea
dec
sarb
add
sub
mov
shll
sub
pushf
inc
sbb
xor
mov
data16
mov
mov
enter
or
lea
xor
xchg
stos
jae
push
sbb
jne
mov
adc
movsl
adc
jbe
cmp
mov
sbb
and
lret
das
dec
sub
in
push
dec
loop
push
imul
add
lock
stos
and
fdivs
xor
icebp
xchg
pop
sarl
xchg
sub
jbe
inc
sub
pusha
sbb
stc
xlat
popa
xchg
push
pop
mov
scas
repnz
fs
jl
shrb
test
jb
mov
or
fadds
jge
jge
push
mov
and
jecxz
lcall
inc
fsubrl
ret
or
jae
mov
ret
cmp
pop
inc
jge
jmp
mov
or
jo
movsl
vpsrad
movsl
shl
daa
mov
push
icebp
sub
jmp
sbb
mov
aad
pop
ret
mov
jns
xchg
sarl
mov
jmp
fbstp
addb
rolb
mov
nop
test
fsubl
dec
or
aad
outsl
adc
pop
popl
pop
xchg
stos
add
rclb
lock
mov
mov
test
pop
and
stos
repz
inc
adc
leave
push
repz
cmovno
xor
and
inc
jmp
mov
lock
or
addb
aam
xchg
test
dec
push
loope
dec
pop
mov
scas
bound
cmp
clc
stos
or
lods
pop
or
or
lahf
addr16
mov
xchg
cltd
xor
mov
mov
pop
mov
push
int3
in
test
lock
xchg
mov
mov
mov
xchg
in
in
push
or
pop
stos
les
mov
stos
sbb
je
std
inc
das
fdivrs
mov
sahf
repz
mov
mov
or
ljmp
pop
test
mov
fsubl
jp
jno
cmp
sbb
pushf
shl
xchg
scas
adc
test
div
jl
aas
adc
xchg
mov
mov
sbb
jbe
jno
lea
ds
popa
div
cmpsb
insl
nop
jb
hlt
shll
stos
push
lcall
jmp
cmp
cltd
sti
mov
popa
loopne
loop
dec
jbe,pt
sbb
mov
mov
and
sbb
or
dec
or
inc
fildl
imul
mov
shrb
mov
jo
lods
mov
pop
int3
inc
or
pop
shlb
idiv
sahf
push
adc
xchg
mov
jns
pop
jo
call
jmp
popa
mov
adc
fstpl
inc
pop
jmp
in
xor
std
test
in
repnz
push
mov
jle
adc
xchg
push
std
fsubr
xchg
or
adc
inc
xchg
sbb
rolb
xor
test
fidivrs
movsl
clc
adc
popf
mov
jb
test
out
add
icebp
mov
xchg
push
jp
neg
mov
sub
clc
sti
mov
icebp
loopne
movsl
popf
icebp
stos
aas
leave
push
addl
cmp
xchg
mov
mov
ja
leave
cmp
sbb
clc
repnz
popa
out
adc
xor
and
jge
jge
sbb
ja
push
mov
icebp
ret
dec
ficomps
xchg
push
nop
fucomp
popa
adc
and
out
mov
adc
pop
and
test
mov
jecxz
rol
sbb
mov
inc
mov
pop
inc
aas
or
or
and
jbe
jecxz
fcomip
in
xor
and
cwtl
mov
cmp
push
ss
pop
pop
push
movsl
es
add
imul
repz
pop
add
mov
or
call
mov
xchg
fnstenv
ret
enter
lock
cmp
test
vmovdqa
mov
add
pop
add
ret
mov
or
rcll
mov
jmp
pop
int
cmpsb
xor
sub
out
jbe
cmpsl
xchg
push
ja
repnz
pop
mov
add
add
xchg
fidivs
jnp
xor
insl
mov
or
mov
xchg
das
mov
outsb
lret
sbb
or
fs
pop
sub
add
push
dec
aaa
mov
in
ljmp
xchg
jnp
pop
cmc
mov
jmp
daa
into
and
fwait
iret
pop
out
or
das
adc
rcll
test
test
aas
or
je
mov
dec
inc
mov
aaa
stos
leave
outsb
pop
dec
add
mov
jne
fisubs
pop
fwait
inc
cmp
les
shll
scas
aad
data16
and
addb
out
inc
adc
add
dec
mov
mov
cmpsl
inc
mov
lcall
jo
inc
lock
stc
out
sbb
imull
nop
in
add
adc
pop
enter
int
xor
imul
push
xchg
dec
jle
es
mov
xchg
xchg
pusha
cmp
adc
jbe
rol
sub
xlat
pop
jmp
roll
pop
popa
pusha
jnp
mov
lahf
inc
pop
xor
xchg
mov
cmp
xor
push
das
das
and
xchg
mov
stc
loop
push
xchg
int
mov
pop
dec
and
cmp
xor
and
jg
pop
adc
mov
dec
inc
stc
sub
cmpsb
xchg
stc
iret
in
jp
test
xchg
pop
pop
rcrl
push
fwait
fwait
mov
outsb
jg
rorb
cld
push
or
in
in
hlt
push
jne
ja
adc
xor
push
mov
cs
sarb
sub
popf
lods
and
lods
pop
push
outsl
cmp
pusha
into
mov
out
push
dec
ljmp
jp
jp
xchg
inc
cmp
dec
int3
je
shrb
fdivl
das
xlat
fistl
mov
xor
cmp
sbb
jl
mov
or
jmp
out
mov
fmul
mov
and
and
mov
or
push
sbb
xor
add
mov
xchg
insb
add
dec
ds
or
in
xchg
jl
gs
mov
push
iret
lahf
je
inc
add
das
xchg
lret
outsb
shlb
dec
jnp
mov
inc
or
sub
ss
popf
stos
loope
and
test
dec
push
cmpsl
or
xchg
mov
xchg
loop
js
mov
sub
and
stc
lcall
sub
xchg
xchg
lock
out
lods
dec
inc
cmp
je
scas
mov
cld
or
call
add
mov
cmp
pusha
or
or
mov
pop
std
outsb
push
pop
es
xor
add
arpl
mov
dec
adc
imul
push
leave
shrb
dec
test
repnz
sti
xor
jb
mov
xchg
add
ljmp
in
je
mov
jbe
fimull
jns
idivl
jae
jmp
sbb
loop
push
sub
daa
jo
int3
dec
lds
sbbb
mov
hlt
inc
inc
xlat
or
addb
inc
imul
cli
adc
jnp
pop
jecxz
rcll
test
fs
sti
fnstcw
ja
pop
cltd
push
push
pop
ljmp
lret
jle
mov
test
int
pop
in
loopne
fisubrl
and
sub
xchg
sbb
scas
and
hlt
jne
lods
stos
ficoms
mov
sbb
inc
insl
lds
cmc
mov
mov
dec
inc
pusha
fsubs
cmc
sub
imul
xchg
add
sub
pop
loop
out
mov
push
mov
rcrl
or
jge
xchg
pop
sahf
xchg
mov
rorl
iret
out
adc
in
scas
cld
jg
in
cltd
movsb
inc
sub
in
insb
ret
fsub
out
jecxz
subl
mov
in
jo
xrelease
jg,pt
fs
fld
aad
dec
lret
mov
outsb
xchg
inc
jmp
out
fidivs
push
jno
stc
mov
adc
int
mov
mov
mov
adc
lds
outsb
xor
fwait
pushf
cmpsl
mov
fdivl
cmp
xor
or
adc
sub
sub
int3
into
xchg
pop
cltd
repz
loop
cmp
loopne
sbb
fldcw
push
jnp
dec
ljmp
and
out
pushf
push
hlt
daa
xlat
xchg
lcall
sahf
lret
jbe
sarl
repnz
and
or
xchg
hlt
loop
ret
sub
fisubrs
std
das
pop
inc
dec
std
js
dec
inc
xor
test
std
movsb
jae
jg
addr16
xchg
sti
iret
xor
into
adc
rclb
pcmpgtb
add
cmc
add
std
into
jecxz
into
fnsave
fsub
stos
fisubs
ret
xor
int
andl
pop
loope
lods
add
jecxz
sahf
testl
dec
je
and
mov
or
add
stos
push
jmp
sbb
inc
pop
fwait
roll
sbb
mov
inc
add
add
lods
inc
loope
xchg
rolb
fdivrp
mov
test
in
dec
adc
jno
inc
test
pusha
xchg
or
cmp
popf
jae
stos
fst
jmp
jo
hlt
int3
mov
mov
repnz
scas
jnp
add
test
dec
lods
jns
int
gs
xor
fwait
test
cmp
push
mov
out
pop
inc
ret
xchg
rorb
mov
jmp
sub
push
imul
subb
sbb
incb
aas
les
cwtl
mov
in
push
in
frstor
lods
imul
mov
xlat
xlat
rcr
xchg
in
adc
pop
lret
adc
xchg
xor
and
push
test
das
mov
xchg
push
xchg
mov
rcrb
sbb
mov
dec
int
mov
push
lret
pop
and
out
test
pop
sbbb
inc
xor
and
push
push
mov
scas
nop
add
jno
sbbb
add
lock
xchg
rcrb
mov
pop
sbb
jp
cmc
mov
and
imul
push
and
sbbl
sub
inc
outsl
test
fdivl
xchg
scas
call
sub
pop
or
cs
insb
out
push
pusha
cs
xor
pop
inc
dec
xchg
pop
popf
add
lock
push
xor
in
fbld
jp
mov
jbe
add
sbb
mov
lock
cmpsb
loop
and
addb
leave
push
push
adc
xchg
repnz
push
sbb
add
icebp
dec
fisubs
in
sub
cmpsb
push
dec
inc
xor
cli
add
js
or
mov
fldt
cs
mov
cmp
sub
or
xor
push
ret
in
popa
inc
mov
lods
loop
shll
mov
sahf
cs
sbb
xor
imul
mov
or
pop
lods
pop
sbb
popf
iret
nop
push
pop
cltd
adc
and
daa
pushf
pusha
adc
fimuls
mov
rorl
mov
dec
ss
loopne
lahf
imul
and
movsb
dec
int3
mov
imul
sbb
sarb
addl
dec
cmpsl
pusha
or
and
nop
cmp
stos
inc
sahf
mov
and
sub
shlb
aas
rcr
sbb
hlt
mov
hlt
jecxz
dec
movsb
enter
scas
icebp
std
xorb
mov
mov
clc
mov
xchg
leave
mov
cwtl
neg
mov
hlt
fsubs
fdivrs
mov
dec
in
scas
xor
out
int
jns
cmpsb
imul
pop
jae
mov
popa
inc
lret
dec
or
sbb
jle
mov
call
or
mov
lret
pop
mov
les
test
int
in
xor
add
xor
or
int3
mov
fiaddl
xchg
xchg
or
cmp
xchg
adc
scas
xchg
push
test
mov
cmp
adc
aad
xlat
pop
dec
pop
add
jae
aam
and
add
mov
jb
jmp
jnp
xchg
ljmp
test
mov
dec
xlat
jmp
enter
sarl
jnp
and
pusha
cmp
add
jmp
je
xchg
in
cltd
das
mov
loope
push
int
fcompl
lret
xchg
mov
adc
pop
dec
xor
std
insl
jb
adc
addl
xchg
fidivrs
repnz
add
pop
cs
je
dec
pushf
jae
cmp
inc
std
lds
mov
cmp
mov
mov
sbb
or
stos
lea
lcall
inc
movsl
and
jno
cmp
lret
aaa
fs
push
mov
lahf
jbe
cmp
insb
ja
xor
pushf
mull
mov
or
ljmp
mov
fsts
call
jg
push
aad
gs
adc
pop
movb
push
sbbb
xor
pop
mov
lret
loopne
mov
cmpsb
adc
lods
cwtl
jmp
push
inc
add
adc
sub
mov
dec
popa
adc
int
mov
in
sbb
pop
cmc
ficoms
movsl
sbb
cmpb
jnp
mov
imul
scas
notb
test
in
xor
push
jmp
in
les
in
xchg
icebp
pop
in
jmp
push
lods
orb
addb
lock
push
mov
movsb
push
sub
bound
ds
dec
ja
daa
xorb
fistps
pop
pop
inc
and
xchg
jbe
push
lods
stos
movsb
repz
int3
xor
mov
push
fcompl
cmp
repz
mov
popf
shll
rcrl
aas
add
sti
and
cmp
pop
enter
push
outsl
mov
mov
in
jno
and
push
stos
cmp
pop
lret
gs
push
je
sbb
jmp
and
dec
fs
or
test
aad
scas
adc
xchg
movsb
enter
das
aad
push
arpl
sbb
cmp
mov
insb
neg
clc
pusha
cmp
stc
jecxz
xor
and
out
int
faddp
andl
lods
out
add
addr16
xchg
sbb
cmpsl
ficoml
mov
or
les
or
outsb
into
xor
sub
mov
jecxz
enter
out
out
mov
mov
sti
mov
mov
adc
in
jge
out
mov
test
in
fs
xlat
sub
adc
dec
lea
aas
shlb
add
data16
mov
sub
es
std
stc
pusha
call
aam
pop
hlt
in
repnz
push
push
popa
rcll
movsb
xor
inc
data16
mov
push
stos
adcl
fdivrs
push
ljmp
sub
pusha
mov
xor
negl
mov
dec
lock
cmpsb
jnp
lahf
popa
or
insl
pusha
cmp
out
ljmp
inc
outsb
push
dec
insb
stc
popf
add
jle
jae
mov
mov
mov
sub
ds
test
jb
cmpsb
xchg
ljmp
xchg
push
fwait
loope
or
das
popf
movsl
pop
mov
sub
dec
clc
mov
and
sbb
cmp
pushf
xchg
imul
rclb
hlt
popa
insb
mov
mov
mov
cmp
mov
clc
push
cmp
cmp
or
ret
les
arpl
jmp
push
sub
not
test
xor
jne
jmp
pop
adc
enter
lcall
mov
scas
das
xor
xorl
repz
inc
add
and
cmp
std
pop
js
mov
sbb
cs
xchg
jae
insb
mov
outsb
pop
adc
xchg
mov
push
fistl
nop
lods
movsl
jle
inc
fnstcw
adc
and
mov
mov
div
and
ljmp
aaa
insb
jmp
pop
add
sahf
aaa
lcall
dec
sub
add
test
pop
iret
cmp
rcr
es
jnp
pop
cmp
xchg
dec
iret
mov
mov
in
mov
sbb
into
andb
shll
scas
insb
jnp
out
dec
adc
push
xchg
dec
stos
push
push
push
dec
in
lea
mov
mov
sbb
pop
inc
push
shll
aaa
jle
sbb
and
cmpsb
pop
loop
ja
lea
inc
mov
stos
icebp
ret
int3
jb
mov
jbe
paddd
xchg
shl
push
add
aaa
add
jg
xor
sbb
pop
sbb
out
pop
mov
jp
jge
lock
jge
push
call
mov
sbb
push
out
in
fldcw
jo
sbb
pop
sbb
push
mov
and
fimull
outsl
xchg
mov
mov
pop
js
xchg
scas
xchg
icebp
inc
or
out
or
std
cmp
xor
jne
sbb
sub
imul
pop
fsubs
jmp
add
ss
lock
fisubl
adcb
imul
add
pop
test
femms
xchg
cs
xor
mov
mov
dec
mov
xor
pop
xor
cli
rcrl
pop
lods
outsl
ret
gs
ret
and
es
ss
nop
xorl
test
pusha
repz
push
mov
jmp
ljmp
xchg
sub
mov
and
daa
and
xor
mov
sbb
sub
icebp
push
sti
pop
or
mov
mov
enter
stc
ljmp
inc
dec
mov
bound
cmp
ss
jmp
xchg
fs
adc
addb
xchg
push
lods
jb
in
arpl
add
pop
in
aas
or
mov
pop
push
std
cmpsb
aam
loopne
test
mov
mov
int3
lahf
adc
movsb
shl
stc
push
push
lret
lahf
sub
inc
mov
jmp
mov
jne
jae
data16
jge
outsl
dec
jge
sbb
sbb
lret
in
adc
cmpsb
cwtl
or
enter
lock
jbe
add
or
fbld
add
cmp
pushl
sarl
lea
call
xlat
mov
lcall
add
or
cmp
aaa
jbe
stos
xchg
arpl
mov
xchg
es
adc
mov
jle
fsubr
outsl
cs
inc
push
cmp
negl
inc
mov
jl
mov
mov
xchg
lds
jle
sbb
mov
cmp
or
inc
punpckhdq
dec
in
xor
aam
shlb
dec
sti
flds
add
aaa
dec
stos
or
jl
xchg
mov
dec
cltd
int3
xor
dec
mov
lods
push
jle
mov
and
mov
jecxz
jo
cmp
inc
mov
ret
xchg
xor
sarb
add
push
and
imul
cwtl
mov
jg
imul
sbb
mov
insl
mov
test
inc
pop
fcmovnu
add
push
inc
sbbb
add
ja
imull
insl
push
sbb
mov
cmp
jno
jle
pop
stos
fsubrs
int3
movsb
and
pop
xor
mov
pop
adc
adc
mov
xchg
ret
scas
mov
mov
clc
xor
sbb
sub
incb
inc
in
jae
test
scas
jb
jbe
invd
jle
jno
int
and
and
cmp
out
pop
rclb
adc
pop
push
iret
mov
jno
loopne
jp
pushf
or
pop
push
mov
mov
sahf
jmp
xchg
inc
repz
pusha
popf
fbld
sub
jle
push
jnp
fucomi
ret
in
mov
xor
add
inc
js
mov
mov
out
and
push
cmp
and
cs
out
mov
xchg
cmpsl
ljmp
popa
testl
push
fcom
sbb
and
xchg
int3
enter
cmp
sub
adc
add
xor
xor
mov
clc
xchg
cli
scas
ljmp
fstpt
test
aaa
push
add
jae
sub
jb
sbb
stos
xor
or
cld
and
add
sbb
incb
sbb
mov
push
dec
es
push
push
sbb
popf
imul
shlb
xor
gs
subb
jge
test
inc
movsl
mov
sahf
xchg
scas
mov
push
pusha
xor
inc
sbb
jp
inc
ret
xor
test
mov
sbb
cld
cwtl
outsb
movsb
fcomps
pop
mov
mov
stos
aad
adc
push
dec
mov
out
pop
dec
aas
and
pop
and
push
sub
xchg
jo
xchg
test
jbe
pusha
rclb
adcl
ret
add
outsb
dec
xor
pushf
xadd
jg
adc
xor
and
xchg
lea
sti
repnz
test
sti
push
add
in
xor
mov
mov
mov
add
test
lcall
xlat
xchg
sub
iret
cwtl
aad
mov
out
shr
jmp
les
xlat
mov
jns
adc
fisttpll
clc
loop
add
or
mov
inc
inc
imul
test
rcrb
push
cmpsw
push
ss
in
add
cmp
lcall
in
cmp
cmp
and
sub
add
xchg
adc
fistpll
inc
and
push
dec
fidivs
mov
mov
or
push
or
or
inc
inc
jno
jp
test
clc
xchg
out
movd
call
jecxz
mov
movsb
add
sbbl
sub
ret
mov
cltd
push
push
js
lahf
repz
gs
test
cli
sub
sarl
sub
mov
push
mov
add
popl
std
pushf
cmpb
imul
cmp
rcrl
dec
imul
mov
xor
push
imull
cltd
test
xchg
imul
push
mov
push
rol
negb
adc
push
or
inc
out
fcmovu
push
xchg
hlt
sar
cmp
mov
data16
cmp
add
jmp
push
push
cmp
ljmp
and
lahf
insl
xchg
mov
jle
lods
adcl
sbb
and
sbb
mov
and
xchg
sbb
jb
jns
imul
lds
dec
daa
or
data16
cmp
cwtl
pop
or
repnz
ds
pusha
sub
pop
ds
cmpsl
push
sub
jae
adc
sub
scas
ds
push
pusha
outsb
pop
out
fisttps
push
inc
int
and
xchg
xchg
mov
jle
cmc
mov
adc
mov
rcrb
sbb
adc
adcb
mov
adc
leave
mov
in
loop
sbb
jns
mov
cs
test
cmc
push
call
aad
push
xor
dec
adc
lcall
xor
push
pop
ret
bound
xchg
cmp
and
sub
xor
mov
mov
mov
nop
loope
lret
loopne
lods
popf
mov
lret
add
inc
push
cmc
push
in
jmp
mov
cwtl
je
push
jns
iret
pop
outsb
fistps
stc
dec
mov
mov
sbbb
or
xchg
xchg
dec
and
sub
int3
test
mov
push
xor
dec
cmp
cmp
mov
daa
fisubrl
notl
iret
adc
adc
jnp
fisttpll
xor
pusha
dec
cwtl
into
lret
lds
cmpb
xor
jae
push
pop
pop
pushf
aam
sbb
mov
push
xchg
fidivl
addr16
mov
add
ror
sbb
fisttpl
jg
sub
rolb
and
pop
lcall
pop
and
jg
add
xchg
cltd
stos
movsl
dec
rcr
lds
scas
adc
fwait
scas
sub
xor
jle
aad
mov
xchg
es
icebp
cmp
adc
inc
pop
ja
xor
adc
fwait
sahf
sbb
sti
jne
fldt
cwtl
imul
adc
leave
mov
dec
inc
rorb
inc
sub
sub
into
pop
lods
sti
ss
cmp
test
lret
push
jge
jle
push
or
jle
lret
pop
xchg
jg
ja
sub
lock
mov
add
jae
pop
scas
icebp
lret
scas
lds
dec
adc
sahf
aaa
jns
mov
sub
inc
push
and
out
jne
imul
cs
popf
sti
inc
jmp
pop
and
pop
and
repnz
out
and
test
jne
mov
sbb
mov
xchg
mov
jecxz
xchg
xchg
jecxz
adc
into
jno
add
mov
ljmp
fisttps
add
inc
int
pop
in
add
dec
xchg
int
push
jl
imul
xchg
mov
adc
lea
mov
add
dec
cmp
add
or
mov
ljmp
inc
add
cs
lret
call
mov
rol
or
mov
dec
adc
inc
inc
js
adc
lcall
xchg
scas
mov
xor
mov
out
stos
sub
jbe
pop
push
adc
into
inc
js
lret
pop
xlat
push
frstor
push
mov
xchg
aad
mov
in
test
adc
pop
loope
adc
fwait
mov
pop
adc
inc
jge
fwait
mov
repz
adc
lcall
fisttps
cmp
sbb
cs
cmp
inc
pop
enter
jle
sub
aas
outsl
jmp
xchg
scas
ljmp
pop
jno
inc
dec
shll
xchg
outsl
jno
in
in
or
xchg
mov
adc
out
inc
dec
and
or
test
pusha
rcll
inc
bound
xchg
out
out
sub
je
jl
pop
cmpsb
fcoms
daa
scas
dec
sub
stc
outsb
addr16
ss
jno
push
aaa
leave
out
scas
call
cltd
sub
or
mov
orb
cmp
jno
arpl
shlb
lods
in
mov
mov
dec
arpl
aas
jns
scas
fs
pop
sahf
in
inc
jmp
pusha
js
scas
fdivrp
ss
loopne
push
mov
pushf
jno
loopne
daa
adc
lret
add
popf
add
and
shlb
xchg
lods
imul
sub
outsb
aas
es
repz
inc
fsubrs
repz
xchg
sub
or
shll
mov
rcll
inc
cld
les
dec
mov
icebp
outsb
lea
int
loopne
les
es
cmpsl
and
sub
lds
jo
rorl
sbbb
cwtl
cmpsl
or
adc
inc
shlb
out
inc
jp
mov
pop
push
fstps
fistps
shll
bound
sbb
test
dec
sahf
lea
sbb
jne
in
movsb
or
stos
inc
mov
in
pop
enter
cwtl
js
dec
cmpsb
mov
mov
xor
push
mov
cld
sub
sbbl
mov
cltd
mov
adc
pop
roll
jge
dec
movsl
lea
push
cs
pop
or
cmp
sbb
xor
je
lret
dec
inc
sub
pop
jae
addr16
adc
xchg
dec
cmc
push
inc
dec
lea
mov
push
mov
push
ret
jp
adcl
mov
mov
fsubrs
jne
or
mov
js
pop
lcall
mov
addr16
push
sub
in
ljmp
dec
sti
adc
sbb
movsb
cwtl
gs
aad
push
cmpsl
scas
inc
filds
fistpll
scas
lahf
add
ret
add
add
xchg
cmp
add
fisttps
out
pop
sub
cmc
xchg
adc
std
pusha
das
mov
sbb
and
mov
inc
ds
inc
xchg
sarb
lds
add
mov
mov
fmull
pop
outsb
sub
jl
pop
pop
mov
adc
fmuls
add
into
xchg
jecxz
pop
ret
loopne
out
repz
xchg
mov
jge
cmc
in
pushf
push
mov
jl
mov
pop
negl
movntq
out
je
scas
inc
push
mov
ret
cmp
sbb
fistpl
add
ret
xor
adc
push
stos
lahf
int3
nop
out
mov
mov
out
cmpsb
repnz
faddp
aad
push
outsb
inc
lock
imul
shll
ret
add
mov
mov
and
imul
fimuls
mov
push
arpl
and
add
push
enter
mov
in
cs
mov
adc
lds
lods
std
adc
scas
cmp
pop
xchg
inc
push
movsl
lds
push
mov
jmp
sub
cld
mov
scas
popa
das
mov
add
in
hlt
bound
stc
test
idivb
out
xchg
leave
repz
jl
or
push
mov
pop
mov
js
repz
imul
push
mov
out
jecxz
pop
sub
mov
loope
or
stos
jb
cmp
cmp
cmpsb
adcl
pop
mov
jmp
repz
dec
push
stos
ficompl
sbb
push
icebp
fbstp
in
adc
ss
mov
mov
jmp
sbb
int3
add
jae
pop
inc
outsl
cmp
add
mov
mov
dec
ret
and
mulb
mov
xchg
cmp
movsb
cltd
adc
pop
in
pop
add
mov
mov
mov
iret
sbb
into
shlb
mov
pop
iret
out
sbb
rolb
or
adc
cmp
add
repz
ds
add
add
inc
sub
dec
adc
jle
xor
out
cli
push
test
or
incl
inc
xchg
idiv
mov
cmp
jp
and
xchg
inc
gs
mov
jp
mov
icebp
cmpsl
rcrl
lds
push
xor
daa
adc
fwait
xchg
cmp
repnz
jp
stos
push
iret
sbb
nop
pop
pop
int3
and
xor
sbb
pop
adc
aam
cwtl
adc
ffree
jge
mov
sub
sti
jne
jmp
sub
mov
clc
dec
jbe
ljmp
push
daa
bound
mov
cmpsl
or
adc
pop
out
pop
xchg
jle
sbb
andl
stc
arpl
jo
or
shlb
jp
mov
shrb
mov
sti
pusha
lods
mov
jecxz
stos
cmpsl
lock
inc
aam
cmp
lods
xor
sub
and
dec
aam
jg
jmp
jae
inc
arpl
dec
pop
shlb
mov
push
dec
push
gs
or
push
mov
xor
lcall
cltd
mov
or
sbb
jmp
jmp
push
test
punpckhdq
cmpsb
flds
mov
lahf
adc
outsl
push
xor
sbb
test
aad
lods
aam
xchg
ljmp
lret
xor
and
rcll
scas
movlps
dec
outsl
sahf
sub
push
jns
in
loope
out
movsb
aas
cmp
cmp
or
mov
lret
push
fs
lret
pop
push
imul
adc
push
lcall
jo
jbe
pop
push
add
mov
add
fwait
insb
and
adc
lds
hlt
leave
add
xor
xchg
iret
adc
cmp
inc
cmpl
adc
push
xchg
or
jmp
mov
into
pop
rorl
push
mov
and
mov
jno
mov
stos
stos
sbb
out
mov
lret
jp
and
xchg
jns,pt
mov
sub
repnz
outsb
push
aad
addr16
fisubrs
ret
das
mov
lcall
and
filds
testb
mov
stos
inc
cmpsb
je
lahf
rorl
sbb
xchg
repz
inc
xor
jae
mov
or
jl
in
test
pushf
pop
cmc
add
cmp
js
jmp
je
pop
adc
int
push
xor
xlat
jp
out
mov
xchg
sbb
and
bound
movsb
jnp
pop
and
in
stos
sahf
inc
xor
jge
cmp
xchg
mov
imul
ret
int
lods
push
icebp
pushf
cmp
pop
ret
imul
std
or
xchg
scas
xchg
pop
outsl
jg
mov
or
cwtl
adc
out
jnp
cmc
xor
dec
sub
pop
mov
mov
cmp
fmuls
cmp
pop
push
pop
sti
outsl
es
cmpsb
or
outsl
clc
pop
test
test
mov
inc
repnz
je
dec
test
or
and
adc
lret
xor
jp
icebp
hlt
xchg
fwait
xor
shr
pushf
pop
add
sar
cmpsl
imul
mov
sahf
push
les
inc
test
mov
lahf
sahf
inc
push
mov
mov
dec
mov
add
in
out
xlat
divb
pop
cmp
adc
idivb
ret
data16
test
mov
repz
jle
jbe
mov
in
in
cwtl
movsl
xor
pop
nop
fistpl
jp
dec
aas
lods
mov
push
sub
out
dec
inc
pushf
mov
or
data16
sbb
xchg
mov
or
pop
gs
xchg
xor
ret
div
xor
mov
jle
add
mov
push
or
mov
or
add
insb
mov
push
mov
sub
push
jg
jmp
icebp
pop
inc
popf
lods
inc
stos
sbb
fwait
icebp
push
cwtl
imull
inc
jle
bound
test
add
popa
mov
mov
inc
out
cmp
cmc
jg
cmp
push
mov
lds
test
enter
jo
cmp
fiadds
stos
lahf
pop
or
jae
pop
push
cmp
push
rorl
push
xor
loopne
lahf
imul
mov
lea
out
iret
and
rcr
mov
incl
popf
fistpll
jle
dec
ret
xchg
adc
ljmp
arpl
jle
fs
push
xor
xor
movsl
and
mov
sbb
lds
add
cmpsl
fstl
xchg
ret
int3
jl
push
xchg
push
sbb
pushl
sub
xchg
xor
lods
jecxz
ss
popa
jg
pop
jnp
pop
aam
movsb
pop
dec
xor
rorl
cltd
mov
sub
cmp
mov
fstpl
outsl
mov
nop
mov
stos
jl
inc
cld
mov
xor
inc
mov
shr
mov
push
out
adc
push
adc
jl
into
fsubl
mov
scas
dec
in
movsb
jb
dec
xchg
fsubr
jmp
jnp
push
test
cmpsb
or
loop
rcrb
call
cmpsb
mov
inc
loop
fimull
ss
mov
pop
cmp
mov
dec
adc
call
dec
shl
cmp
daa
fcomps
rorb
shlb
xorl
xchg
iret
insl
ss
je
jno
xchg
cmpsl
cvtpi2ps
jns
pop
add
xor
mov
fs
icebp
mov
addb
push
scas
inc
out
lret
mov
sbb
and
cli
ja
sub
stos
xchg
in
hlt
push
or
iret
cmp
inc
lcall
out
jo
ds
dec
test
fidivs
add
mov
lcall
sbbl
scas
xchg
add
jg
and
icebp
xchg
xchg
mov
mov
mov
mov
movsb
mov
ret
mov
movsl
pop
sti
gs
and
movsl
out
adc
data16
cmp
push
test
xchg
add
adc
out
xchg
push
insl
daa
mov
mov
pop
inc
xchg
dec
jns
push
ljmp
paddsb
push
or
jp
inc
popf
in
push
xor
add
cmp
dec
movsb
push
cmp
nopl
sbb
inc
and
mov
ret
adc
mov
adc
or
outsb
mov
fidivrs
pop
jp
orb
cmpsl
cs
adc
imul
dec
mov
mov
outsl
stos
call
and
xor
inc
sar
xchg
push
fsubp
mov
add
in
jnp
mov
adc
inc
lahf
sbb
lcall
repz
jae
insb
lock
push
aad
mov
repz
or
dec
sub
mov
pop
in
es
pop
cmp
add
fincstp
add
fwait
test
sti
jae
xor
clc
and
push
in
or
dec
mov
xor
int
push
xchg
test
jp
or
xor
xor
and
add
outsb
mov
cmp
addb
aas
jmp
xor
and
adcl
adc
ds
push
in
lea
or
test
and
push
mov
sub
leave
dec
leave
mov
out
add
cwtl
outsl
cmp
cmovns
leave
out
int3
rol
adc
sub
or
mov
stos
imul
int3
add
adc
sahf
push
xchg
xchg
lds
inc
ds
jp
mov
lret
sbb
fldt
xchg
scas
stos
xchg
dec
and
mov
dec
dec
pop
loopne
daa
push
aas
outsl
nop
ficompl
aaa
lock
cmc
sbb
icebp
and
aam
fadds
push
movsb
adc
cmp
out
push
cltd
out
xchg
mov
xchg
xor
stos
std
aaa
mov
mov
outsb
gs
sub
cmp
sahf
std
cli
inc
or
push
cwtl
cs
insb
divl
jecxz
jne
jne
rcr
mov
pop
sub
add
xchg
xchg
inc
sub
pop
test
xlat
cmp
jmp
dec
pop
lcall
mov
or
fisttps
adc
je
popa
loope
jle
pusha
iret
cmpsb
andl
cld
jg
xor
pop
inc
mov
into
jecxz
fistpl
add
ljmp
add
jno
test
lcall
sahf
arpl
aaa
in
adc
xlat
loope
cmpsl
pusha
mov
aas
lods
les
stc
jmp
cld
push
cmpsb
sbb
enter
mov
xlat
out
bound
pop
outsb
xor
xchg
or
inc
dec
xor
mov
shll
mov
repz
and
sti
mov
movsb
xlat
xchg
mov
pop
rorl
clc
repz
movsb
daa
and
mov
mov
pushf
arpl
mov
shll
aas
or
scas
push
jno
lcall
popl
aad
movsb
push
and
pop
add
add
popa
xchg
cmp
imul
add
mov
xor
push
pop
jecxz
xor
je
fcompl
jmp
pop
xor
mov
adc
adc
xor
mov
jo,pn
insl
mov
and
sub
shl
fwait
lcall
scas
fmul
xchg
call
jno
out
inc
insb
outsl
cmp
xlat
adcl
cmp
addb
fimuls
mov
ja
sahf
test
push
jge
int
sub
pop
adc
aas
sbb
mov
icebp
sahf
or
xor
jb
into
and
sub
xor
sbb
cmp
js
add
iret
or
movsb
dec
and
mov
repz
rcr
lahf
mov
test
movsb
push
jl
pop
leave
fs
and
add
nop
test
sub
and
xchg
incb
xlat
lcall
or
mov
loop
in
push
mov
inc
mov
xlat
inc
or
sarb
in
lret
jb
inc
out
jbe
jb
fmull
pop
push
std
jmp
aaa
cmp
xchg
push
adc
lret
xchg
add
jg
add
sub
mov
rcrb
fists
push
sub
mov
mov
adc
test
out
dec
pop
testb
xor
test
mov
insl
lcall
push
or
sbb
cmpsl
ret
xchg
mov
pushf
jnp
and
cmpsb
popf
cs
addb
xlat
dec
sub
xor
test
inc
cmp
push
push
ret
sbb
push
movsl
roll
imulb
rcrl
in
pop
leave
int3
pop
dec
leave
and
jmp
push
cld
xchg
jmp
ret
into
fisttps
mov
daa
pop
mov
fdivrs
push
cmovns
xchg
cmpsb
xchg
mov
fisttpll
fs
es
or
addr16
push
cltd
and
pop
mov
xchg
jecxz
sbb
arpl
dec
insl
das
stc
cmc
sbb
dec
lods
sbb
pop
in
add
in
pop
mov
aaa
ror
sbb
adc
ja
mov
aas
push
xchg
fs
ret
xlat
outsl
imull
or
add
pop
icebp
shlb
jb
stos
jmp
ficomps
xchg
lods
or
out
sub
daa
sbb
jnp
mov
adc
in
ss
cmp
mov
jge
push
out
insb
into
call
insl
push
cmp
lock
xchg
fiadds
adc
sbb
xor
cltd
inc
cs
jl
fldcw
add
mov
sbb
leave
add
insl
in
fldt
hlt
je
xchg
xchg
addb
testl
aad
outsb
stos
lock
scas
inc
xor
inc
xor
lds
popf
adc
enter
int
notl
ret
xchg
daa
mov
fcomps
push
push
pop
in
fcomps
xchg
in
jmp
sbb
fldenv
push
push
push
xchg
and
or
inc
int3
mov
lahf
dec
jmp
jg
push
jmp
inc
stos
rorl
push
xor
mov
cmp
xor
bound
xor
push
push
hlt
dec
mov
or
or
jns
jmp
push
or
mov
inc
mov
scas
sahf
aaa
dec
test
xchg
out
insb
or
lret
nop
inc
movsl
fcomi
xchg
cmp
into
sub
pop
sbb
rcrb
sahf
scas
rcl
lahf
fstpl
cmpsl
ljmp
dec
jno
push
cmpsb
mov
lcall
shrl
or
in
add
xchg
cmc
pusha
hlt
push
repz
mov
test
xor
ds
pop
iret
out
push
cli
xor
push
movsl
push
or
sarl
jo
dec
and
jg
push
in
and
arpl
flds
sarl
lahf
addl
cmp
ljmp
push
scas
mov
insb
test
pop
in
ds
pop
fwait
xchg
out
add
sub
push
std
jae
fsubl
out
les
shll
cli
push
dec
fs
imul
mov
sbb
nop
xchg
adc
aam
xchg
aas
mov
daa
stos
push
lds
pop
iret
sbb
xor
cli
add
scas
gs
mov
adc
and
inc
mov
fildl
jg
jne
mov
jg
inc
mov
aam
jmp
lcall
cmp
insl
sbb
dec
mov
mov
sbb
sub
cmp
call
fcos
adc
fld
push
push
jp
jle
ss
xor
rcrl
inc
and
jbe
inc
xor
pop
xchg
loop
loopne
or
pop
add
cmp
outsb
test
jle
xor
add
outsb
or
jbe
and
and
or
int
or
lret
or
popa
mov
jp
fldcw
mov
push
xchg
in
jmp
xor
in
dec
mov
stc
test
pop
adc
mov
mov
jb
out
adc
dec
scas
mov
into
subl
imul
bound
jbe
loopne
stos
jge
inc
je
out
movsl
enter
into
and
addr16
fldenv
xor
shrl
xchg
inc
or
ret
mov
add
add
pop
aad
dec
xor
and
xorb
rolb
xor
inc
mov
movsl
aaa
dec
iret
cmp
jne
sub
mov
push
or
inc
sub
pop
jg
jle
sub
mov
into
mov
popf
xchg
sub
sahf
aam
filds
pop
xor
sarl
iret
cmc
push
pop
pop
pushf
aam
adc
cmpsl
inc
pop
mov
hlt
popf
lock
xchg
add
movsl
mov
adc
add
loope
jns
mov
xor
xor
aad
fsubl
sbbb
cmpb
sarb
fsubrl
and
xchg
dec
sbb
test
push
nop
inc
ja
fidivrl
mov
imul
repz
mov
jle
faddl
loop
ds
int
push
inc
xor
daa
sub
cltd
dec
fisttpl
push
outsb
xchg
dec
push
xlat
xor
cmc
lret
push
mov
fidivrl
movsb
pop
and
daa
lods
mov
movntps
imul
inc
mov
in
or
pop
mov
int
and
sub
test
push
in
ds
repz
adc
pop
jno
mov
inc
cs
and
mov
dec
loope
insl
push
cmpsl
js
jecxz
daa
and
xchg
or
ds
sub
js
mov
mov
movsb
add
scas
inc
stos
mov
add
xor
std
out
ja
ja
inc
scas
test
inc
in
ja
int
mov
pop
mov
cmp
lds
test
decb
popl
xchg
sbb
push
push
gs
jecxz
out
aas
adc
lock
push
jno
push
pop
or
das
xchg
push
lcall
mov
cmpb
dec
clc
or
adc
jmp
cmp
push
clc
mov
fistpll
repnz
cltd
popa
jg
dec
pop
mov
outsb
mov
sbb
jecxz
les
cmp
xchg
sub
lcall
vmaskmovdqu
stc
imull
enter
xchg
cmp
leave
mov
leave
cwtl
hlt
test
test
scas
stos
mov
pop
dec
into
jl
cmp
dec
add
ss
lahf
mov
adc
cmp
lea
jg
mov
mov
mov
lahf
xchg
fsubl
dec
jge
mov
fstcw
push
jb
ja
mov
sbbb
scas
decb
addr16
fidivs
jle
out
fidivrl
fcomps
push
cmc
jmp
imul
shr
out
or
adc
hlt
lea
pop
xchg
sub
inc
mov
mov
mov
push
shlb
pop
jae
mov
loop
adc
cmp
cmpsb
xchg
mov
jmp
and
push
shlb
push
sbb
icebp
jl
xchg
int3
fbstp
mov
ret
push
xor
lods
fmuls
les
rorl
ja
stc
and
sub
mov
fwait
shlb
adc
cmp
insb
dec
lcall
call
push
int
shll
sarb
xor
push
jns
mov
gs
mov
out
pop
mov
sub
and
dec
mov
aaa
mov
jnp
inc
mov
and
jp
pushf
sbb
fs
mov
sarl
mov
mov
mov
adc
adc
and
push
fsubrs
pop
xor
loopne
pop
mov
sub
mov
sub
cmp
dec
ja
cmp
add
push
hlt
mov
sbb
or
xchg
jmp
pop
cmp
xchg
js
mov
sbbl
sti
aad
hlt
push
mov
sarb
fs
xor
rcrl
mov
call
push
and
add
sub
mov
pcmpeqd
ret
inc
mov
mov
mov
mov
mov
aad
xor
xorb
pop
add
ljmp
or
subb
and
jns
pushf
imul
wbinvd
or
cmpsb
in
inc
cmc
div
mov
test
outsb
or
pop
test
xor
out
movsb
sub
dec
xchg
push
scas
insl
sbb
xchg
or
in
jge
jo
pop
adc
xor
dec
ljmp
iret
in
cmp
call
adc
cmp
adc
aaa
cltd
push
iret
pop
into
sbb
mov
jbe
dec
dec
fidivs
xlat
pop
jg
xor
scas
nop
scas
fidivrs
jns
sub
sarb
xchg
ds
adc
movsb
sub
mov
cwtl
jle
mov
push
std
ja
push
out
xchg
pop
rcrl
dec
mov
jp
or
ja
or
mov
dec
mov
ds
cmp
jle
jp
pop
ret
aas
pop
mov
mov
into
jge
cld
xlat
push
push
in
jg
pop
bound
pop
imul
rcrb
insb
andb
adc
adcb
sahf
cwtl
pushf
and
adc
movsl
mov
push
and
jb
testl
hlt
mov
fmull
jp,pt
sbb
jns
sbb
or
popa
les
xor
xlat
vdivps
inc
hlt
cmpsl
call
paddq
jns
xchg
xor
cmpsl
cmp
jne
fucomp
adc
sahf
and
in
xchg
cli
dec
fstps
dec
push
das
and
inc
push
lahf
push
movsl
ss
sbbb
outsl
pop
ret
cs
mov
dec
in
or
sub
stc
xchg
cmp
sub
xor
dec
or
dec
pop
leave
sbb
sahf
jo
in
xchg
jmp
test
out
sbb
sti
pop
add
loopne
adc
stos
ljmp
test
ret
adc
in
cmc
adc
std
and
xor
stos
movsl
insl
rclb
adc
push
jecxz
sbb
add
sbb
ret
rcrb
sbb
jno
jnp
cmpsb
sarb
fwait
imul
cmpsl
mov
push
mov
int3
or
push
or
into
pop
jns
push
push
testl
cmpsb
rcrl
outsb
sbb
fdivrp
sbb
notb
xchg
imul
add
in
pop
test
dec
jne
out
int3
push
jl
adcb
das
in
and
sub
andb
int
pop
sti
inc
pushf
mov
dec
cs
cmp
roll
out
push
ds
insb
add
ret
jb
divl
xchg
pop
outsb
lret
pop
mov
or
cmpsb
mov
out
cmp
pop
out
iret
lds
mov
jbe
xchg
bound
das
lea
test
jge
and
xchg
rcrb
popf
inc
ret
lods
sub
xchg
pop
es
dec
jp
mov
xor
fs
loop
fcomi
pop
fdiv
aad
jmp
ljmp
or
sub
repz
in
push
jb
cmp
lock
mov
jp
into
xchg
int
int3
pop
fptan
push
add
jg
rcrb
lahf
and
jo
fsubs
push
dec
ljmp
aas
fidivrl
sbb
sub
test
push
lock
ss
cmp
imul
xor
cs
mov
stc
call
movsl
les
dec
call
or
ljmp
jbe
sbb
hlt
or
xchg
in
cmp
subb
pop
mov
test
gs
pop
xchg
mov
fdivrs
arpl
or
mov
mov
mov
bound
cli
int
pop
aas
in
adcl
mov
mov
mov
je
lds
icebp
and
adc
xor
lea
test
xchg
imul
dec
adc
adc
jo
lods
into
pop
out
mov
fwait
dec
dec
adc
rcll
mov
icebp
leave
mov
dec
pop
and
fdivs
pop
or
jmp
cmp
pop
js
sbb
sub
mov
int3
mov
adc
push
hlt
call
test
sub
push
pop
push
xchg
in
test
push
in
jl
mov
ret
aad
out
aas
mov
pusha
ret
jl
std
sub
mov
out
cli
fnstsw
pusha
jo
xchg
xchg
dec
mov
push
or
lahf
fwait
out
mov
adc
addl
push
sti
mov
addr16
dec
adc
add
leave
sub
pop
cmp
loope
stos
rcll
cmpsb
pushf
mov
pop
sti
cmp
mov
dec
xor
push
pop
sub
popa
pusha
rcl
inc
out
repz
popa
cmp
mov
push
pop
sub
mov
lock
jnp
iret
mov
adc
xchg
mov
lret
lret
out
push
imul
into
in
scas
sbb
outsb
pop
adc
call
inc
sahf
mov
xchg
sti
out
aad
dec
mov
pop
lods
xchg
decb
mov
rclb
ret
sub
jb
enter
mov
fisttps
jge
test
mov
jmp
xchg
lods
jp
or
add
jb
out
adc
xor
mov
fistps
imul
pop
or
in
fimuls
sbb
icebp
sub
repnz
std
ja
stc
shl
les
cltd
and
out
scas
test
pop
aaa
mov
adc
movsl
mov
outsb
fmull
mov
call
shrb
add
inc
negb
lods
aad
mov
test
pop
hlt
or
aaa
adcb
xchg
xchg
push
inc
push
cmp
jecxz
mov
mov
cmc
xor
mov
ds
sbb
jbe
loop
in
push
sbb
lret
and
andl
lret
xor
in
fistpll
aam
pop
push
mov
dec
stos
xor
test
aas
sbb
push
adc
pop
jnp
jne
out
cld
test
icebp
adc
mov
lods
cmp
adc
xchg
and
jbe
psrad
imul
in
notl
movsb
dec
repz
sbb
push
or
stos
lret
sbb
jne
lock
mov
sub
push
push
ret
mov
test
nop
scas
mov
xor
popf
push
enter
aam
add
mov
shll
sarl
inc
imul
test
lods
std
ret
mov
aad
mov
ljmp
sbb
push
cmc
sub
push
js
xor
push
mov
and
add
pusha
jl
push
gs
jmp
mov
fs
cmpsl
adc
aaa
cmp
data16
in
add
mov
stos
xor
add
aam
repnz
pop
pop
inc
dec
xchg
add
sbb
pop
adc
push
mov
shlb
inc
insl
bound
and
push
scas
testb
sub
add
nop
push
mov
shrb
mov
dec
test
sbb
outsb
fisttpl
cmp
push
cld
adc
xchg
out
das
ficoms
faddl
test
adc
mov
mov
push
lcall
cmc
push
xor
fsqrt
orb
lcall
push
lea
je
or
xor
sahf
xor
xchg
mov
repnz
dec
sbb
mov
repnz
clc
aas
leave
pop
mov
and
dec
scas
mov
pop
cmp
popf
and
or
xor
and
arpl
cmp
fcmovb
push
shrl
pop
cli
mov
pop
mov
addr16
pop
jnp
cmp
ret
xorb
jl
mov
stos
movsl
xchg
lock
mov
inc
adc
scas
inc
movsl
fistpl
scas
inc
and
fyl2x
mov
jle
jmp
sub
jmp
mov
pusha
in
call
jge
fwait
inc
cld
mov
adc
sub
inc
lock
xchg
sbb
xor
add
movsl
repnz
xlat
punpcklbw
add
in
dec
fwait
adc
jg
lret
mov
lods
xor
cmpsl
out
sbb
pop
clc
movsb
rcrb
cli
andb
add
push
jne
cmp
out
xchg
ss
xrelease
mov
popf
mov
in
push
leave
and
mov
mov
sbb
into
test
sub
add
or
push
sbb
jnp
ss
adc
ljmp
jo
push
add
insb
push
rcrl
pop
fst
push
dec
cld
mov
movsl
cmp
or
ret
int
in
fistpl
idivl
leave
movsl
repz
pusha
mov
cli
sbb
xorl
pop
repnz
adc
cld
fwait
in
push
and
mov
and
popf
cmp
and
fsts
push
sti
les
sbb
push
pop
add
mov
cmp
repz
mov
icebp
test
xor
adc
clc
dec
pop
jl
and
mov
cmpsl
in
pop
xchg
imul
js
pop
nop
sub
out
cltd
pop
add
dec
mull
dec
push
sbb
dec
lret
add
filds
insl
push
push
xor
sbb
cmp
pop
rorb
lods
push
adc
lods
jne
in
or
fistpll
or
or
loop
dec
cmpl
mov
jo
aad
out
adc
adc
mov
mov
adc
or
in
mov
outsb
jg
loope
mov
push
ljmp
fbstp
mov
jae
push
lea
mov
aas
mov
or
xchg
add
ljmp
and
add
dec
testb
fdivrl
scas
adc
pop
std
outsb
add
out
pop
popf
sub
in
sub
shr
xchg
mov
aas
mov
lock
clc
mov
rcr
jae
xchg
stc
ljmp
bound
cmp
sbb
jge
push
inc
pop
cmc
inc
mov
fbld
and
add
pop
jle
xchg
in
je
adc
sub
push
aad
jmp
push
inc
lds
fmull
int3
mov
rcr
mov
push
push
lods
in
xchg
ficompl
xlat
insb
pop
mov
popa
bound
xchg
or
mov
fwait
ret
jg
popa
cmp
rcll
mov
sub
call
cmp
add
movsb
mov
cmpsb
mov
sbb
jge
in
sub
push
cmc
push
jle
dec
sub
int
or
leave
jmp
scas
repnz
sbb
scas
add
push
add
xchg
in
test
jnp
push
imul
mul
rorl
and
popa
lcall
cmc
ss
sub
mov
adcb
or
lret
sbbl
add
std
pop
fprem
adc
in
aad
testb
jns
movsb
inc
push
pusha
jl
sub
leave
push
mov
sbb
dec
add
repnz
enter
fldl
dec
arpl
mov
or
push
scas
std
test
inc
stos
inc
ja
lret
bound
push
inc
lea
test
dec
mov
mov
mov
xor
mov
sub
movsb
sbb
mov
mov
mov
ret
bound
ljmp
adc
add
incl
mov
sbb
cltd
sub
ljmp
mov
push
sbb
repz
in
jne
cmp
push
inc
loope
outsl
jle
mov
push
jno
aam
cmc
or
inc
fdivrs
jecxz
sub
or
lods
or
or
xchg
les
add
rolb
sahf
pop
mov
sti
dec
mov
repnz
cmp
in
sbb
jae
dec
pop
add
idivb
pop
test
fwait
jg
repz
sbb
mov
lea
sub
scas
mov
pop
ljmp
lgs
repnz
je
dec
or
shrl
aam
add
and
cmp
and
xchg
sub
je
ja
data16
ficompl
decl
inc
add
sar
pop
inc
push
clc
dec
in
pushf
andl
and
shl
dec
rcll
jb
call
push
sub
rorl
loopne
or
jbe
push
ret
rcrb
rcrb
loopne
popf
mov
mov
movsb
or
imul
push
movsb
jnp
mov
pop
mov
inc
mov
xchg
xor
arpl
ror
pop
std
ds
inc
ss
cmp
lret
icebp
mov
fst
cmp
lds
xor
ja
sub
and
aam
add
adc
dec
inc
into
add
in
pop
jnp
fucomip
pop
int
aas
notb
shlb
ror
lret
lock
sub
loope
and
cmc
sub
data16
jns
push
notl
pop
push
out
sbb
inc
fs
lods
jbe
adc
mov
in
inc
xorl
mov
pop
adc
int3
pop
mov
es
movsb
loop
rorl
rorl
pushf
ffreep
mov
es
ror
cli
sbb
inc
jmp
xor
ja
setno
call
mov
jg
stc
adc
jle
jo
inc
loopne
cmp
sti
xor
xchg
mov
dec
popa
or
les
ja
es
mov
dec
adc
fwait
inc
push
imul
mov
pop
insb
lods
popfw
mov
roll
dec
dec
loop
mov
fists
inc
add
xchg
cwtl
cli
or
movsl
les
mov
xor
push
cmp
stos
lahf
mov
jg
xchg
pop
mov
daa
gs
push
stc
cmp
push
lahf
aaa
lcall
ja
int3
imul
push
pop
test
ja
sbb
in
stos
add
mov
dec
adc
ljmp
hlt
xor
ret
push
pop
cwtl
add
dec
xorl
sub
enter
mov
in
pop
add
fs
xchg
out
pop
xchg
mov
rorb
data16
sbb
call
call
push
outsl
sub
push
mov
push
push
dec
lahf
lcall
mov
xchg
pop
ficoml
cmpsb
jmp
jb
fildl
inc
in
push
scas
mov
imul
cwtl
dec
fld
lahf
jae
add
adc
mov
lds
mov
pop
insb
adc
out
je
test
jne
loopne
and
sub
mov
push
cmp
dec
daa
or
sbb
cmp
jno
pop
inc
dec
or
out
push
out
mov
sbb
lods
and
lds
jge
jae
test
pop
xor
inc
mov
notl
cmpsb
insb
inc
iret
add
sub
scas
mov
das
icebp
dec
scas
inc
add
cmpsl
inc
mov
jmp
mov
testb
pop
loope
out
loope
push
cmp
outsl
xchg
aad
fs
inc
dec
stos
ja
cli
shrb
std
outsb
into
notl
sub
mov
jmp
sbb
adc
dec
outsl
enter
iret
aam
out
icebp
sub
pop
fxch
xchg
mov
cwtl
ret
push
lods
imul
ljmp
scas
or
xlat
jns
dec
aas
in
push
test
jne
add
xor
les
mov
testl
addr16
dec
testb
or
xor
mov
push
cmp
clc
out
add
mov
or
jns
push
dec
inc
fwait
push
hlt
dec
testb
addb
loope
ljmp
out
sbb
jns
fcomps
push
stos
push
jne
shlb
sar
call
adc
sbb
out
out
loope
les
aas
rclb
rclb
cwtl
std
jno
jg
popa
xor
in
mov
jl
jo
std
shrb
sbb
mov
test
ret
xchg
push
mov
je
sub
movsl
fwait
pop
mov
push
jp
sbb
into
lret
cmp
mov
xchg
aas
mov
scas
rol
and
adc
cmp
lods
dec
cmp
or
in
xor
pop
movsb
adc
repz
movsl
dec
inc
in
mov
imul
iret
dec
sbb
cwtl
mov
ja
inc
imulb
mov
lods
jge
pop
sub
dec
mov
xlat
outsl
inc
cmp
jnp
xlat
jae
ret
jne
movsb
xchg
test
mov
jbe
cld
mov
jmp
add
fcoml
sbb
dec
int
fwait
imulb
out
pusha
lds
sub
lods
xchg
lahf
les
mov
mov
sarl
enter
call
icebp
iret
lcall
repz
daa
aad
aad
leave
decl
inc
xchg
test
xchg
sbb
mov
mov
mov
popf
dec
mov
inc
jg
mov
and
imul
repz
int
xchg
cmpsb
fidivrl
cwtl
dec
push
lcall
fld
repnz
clc
mov
pop
jbe
gs
les
xchg
fists
mov
lahf
mov
insb
sub
jl
inc
push
lret
shl
cld
dec
mov
and
repz
sbb
pop
into
fadds
mov
cs
pop
les
popf
mov
imul
or
dec
cwtl
faddp
inc
and
arpl
popa
hlt
dec
icebp
push
enter
popl
call
pop
or
xor
and
loope
lahf
push
jge
cmp
cmp
ret
cmp
cld
cmpsl
mov
aaa
jp
jno
pop
push
xchg
mov
dec
add
repnz
scas
test
mov
lret
test
push
jae
leave
jbe
mov
xchg
adc
sub
mov
push
jno
es
loop
fs
cmp
rcll
hlt
lock
outsb
sarl
cmp
xor
daa
add
cmp
mov
mov
test
push
orl
add
or
out
adc
into
fiadds
xorl
cmp
sub
cvtps2pd
or
push
mov
in
pop
xchg
dec
shll
jnp,pn
cmp
or
int
ja
mov
pop
or
cwtl
inc
dec
or
aad
mov
leave
dec
sub
fs
scas
das
ss
cltd
imul
adc
icebp
or
inc
int3
sahf
mov
test
push
fnsave
sub
fucomp
push
cmp
and
inc
xor
mov
dec
arpl
cmp
push
call
icebp
or
in
xchg
and
enter
jo
and
sub
adc
jmp
sbbb
adc
lret
xor
icebp
mov
dec
int
fsub
pop
cmp
xchg
sub
push
call
jl
fidivl
pushf
adc
clc
mov
add
jmp
sti
mov
push
lahf
mov
int3
inc
or
jne
push
aam
xchg
cwtl
movsl
pop
int3
insb
cli
shlb
pushf
sahf
xor
lods
jmp
add
mov
call
xor
mov
push
dec
mov
inc
fdivrl
mov
mov
fwait
cmp
out
sahf
enter
insl
pop
xor
cli
daa
inc
lret
or
sahf
iret
stos
mov
mov
and
and
mov
into
or
jb
jns
das
jp
mov
inc
arpl
call
push
pop
fwait
xor
das
ds
mov
pop
dec
sbb
mov
xchg
les
scas
mov
xor
mov
push
cmpsl
sub
lret
loope
adcb
mov
sbb
and
add
jb
xor
rclb
dec
int
adc
and
ret
and
xor
add
sub
adc
sub
test
push
enter
mov
lods
and
notb
popf
inc
ja
mov
loopne
jnp
repnz
lods
add
movsl
mov
ret
js,pt
push
stos
sti
push
fcmovnbe
xchg
enter
out
cmp
hlt
faddl
out
mov
aad
cmp
shrb
shlb
adcl
shll
bound
mov
push
cwtl
xor
nop
shrb
add
leave
inc
fsts
add
add
mov
inc
les
sub
cmpsl
xchg
lods
sub
jge
sub
cmp
jmp
jns
jp
and
rcl
fildl
clc
fdivrl
jo
pushl
jg
sar
movsb
xchg
fs
or
sbb
and
mov
or
inc
dec
in
scas
lret
sbb
xor
outsl
or
inc
data16
mov
insl
and
outsb
nop
scas
pop
ljmp
or
cmp
sar
and
and
pusha
and
sub
sub
dec
fimuls
dec
jnp
pop
mov
into
mov
mov
xlat
mov
lahf
movsb
lret
les
or
fsubl
ror
pushf
scas
scas
cmpsb
stos
adc
fists
xlat
decl
dec
out
fsubrl
cmc
test
mov
sar
scas
pop
add
scas
outsl
push
adc
mov
lds
sti
cltd
cli
adc
adc
inc
notl
ja
lods
push
dec
shrl
pop
scas
int3
addr16
shr
jns
sub
fucomi
clc
ljmp
faddl
xlat
sub
pop
jnp
sarl
stos
lcall
adc
lods
scas
xchg
sub
fwait
push
int3
stc
xchg
repz
in
mov
jl
filds
rolb
jecxz
push
pop
cld
sub
and
push
push
aaa
pusha
adc
or
aas
jl
out
stc
push
mov
cmp
xchg
mov
loope
ret
es
mov
test
cmpsb
push
mov
mov
popf
mov
enter
or
xchg
imull
dec
mov
cmp
and
push
or
mov
sbb
movsb
repz
insl
mov
lock
pop
jg
cmp
fistl
test
inc
iret
mov
and
add
fs
mov
int3
mov
adc
fistpll
cmp
mov
rolb
adc
aam
loop
pop
mov
mov
addr16
and
mov
out
sub
rolb
add
cltd
pop
cmp
idivl
mov
dec
jae
sbb
xor
inc
xor
je
repnz
aam
jno
in
inc
mov
cmp
jbe
mov
stos
in
xchg
mov
push
or
jno
insb
insl
rorb
negl
movsb
mov
rclb
fdivl
jbe
mov
cwtl
dec
sbb
push
ss
push
out
jl
lea
fs
inc
and
pop
mov
sub
lret
or
jl
mov
in
xchg
or
xor
sub
in
loope
popa
sti
mov
repnz
jg
mov
add
jbe
std
sbb
adc
push
sti
in
bound
sbb
sbb
mov
inc
jmpw
mov
sti
cmp
mov
cmp
pushf
push
in
push
sub
repnz
in
push
popf
jle
lahf
fisubs
pop
ret
inc
add
imul
add
add
mov
mov
lea
cmovno
roll
pop
cmp
cmp
rorl
jo
xor
inc
mov
cmpsl
iret
pop
cltd
xchg
insl
sahf
xor
xchg
mov
add
dec
rolb
jns
leave
cmpsl
sub
pop
popa
arpl
shll
add
lahf
daa
sub
mov
ss
arpl
es
rcll
pop
fsubrs
xchg
sub
scas
test
xchg
xorl
popa
out
test
loopne
cmp
cmp
mov
incl
cmp
inc
dec
cmp
inc
js
pop
mov
fcomps
jbe
scas
orl
dec
outsb
fs
mov
inc
cmpsl
push
lahf
insl
aas
in
or
leave
hlt
je
in
push
push
adc
sbbb
aam
cmp
xchg
imul
popf
out
push
sub
aad
les
adc
cwtl
mov
fwait
ljmp
call
xchg
mov
orb
scas
add
in
jb
dec
arpl
xchg
pop
sbb
or
enter
dec
sub
sbb
maskmovq
idivl
ficoms
dec
clc
ds
and
cmp
xchg
subl
fwait
xchg
stos
fildl
fidivrs
jno
push
test
aam
iret
mov
jae
push
pop
mov
movsl
dec
or
test
rorb
sbb
mov
push
add
push
cmp
dec
fsubs
jle
xor
and
icebp
push
test
shrb
push
mov
in
ds
dec
jb
mov
enter
shr
enter
dec
inc
fldl
mov
inc
in
sub
sbb
ja
inc
out
inc
jg
lds
inc
dec
jle
pop
repnz
lret
sbb
mov
xchg
inc
aaa
push
data16
pop
and
jb
mov
sbb
and
xchg
outsb
xchg
stc
xchg
add
stc
jecxz
scas
jmp
and
adc
sti
mov
ds
mov
mov
popf
push
or
jae
jge
pop
nop
xchg
data16
stc
push
or
sarb
cmc
mov
dec
call
js
jbe
das
jae
mov
loop
mov
stos
cs
adc
add
push
sub
inc
shrl
jp
insl
pushf
fiadds
sub
iretw
mov
lret
or
cltd
pop
clc
add
ss
enter
inc
fucomi
adc
das
in
shrb
movsb
call
pop
inc
cmp
mov
push
ljmp
mov
push
cmpsb
jne
imul
add
aas
scas
into
aas
mov
popa
jl
ljmp
cs
inc
inc
int3
cld
test
imul
inc
pop
mov
push
divb
xchg
or
ret
cmp
jle
cmp
and
clc
cltd
xchg
and
in
cmp
aad
pop
cmp
sbb
inc
pop
repz
or
adc
fucomp
andb
mov
shl
push
dec
add
cmp
inc
andl
gs
xchg
and
mov
xchg
cld
test
sub
sub
mov
call
enter
sarb
int3
adc
data16
cs
loope
es
mov
adc
mov
enter
out
dec
push
jmp
push
movsl
fdivp
sbb
sahf
cmp
jo
sbb
mov
dec
int3
jg
or
push
ljmp
dec
fdivr
cmp
xchg
es
mov
insb
jnp
xlat
xlat
dec
cmpsl
ja
stos
sbb
sub
aaa
sbb
xor
adc
and
xchg
movsl
imul
sbb
cmp
xor
jb
arpl
xchg
push
rol
or
test
test
test
push
mov
xchg
rclb
push
jae
mov
jecxz
push
mov
and
fimuls
int
enter
mov
insb
xor
jl
jmp
mov
lods
test
test
xorl
mov
pop
xchg
js
js,pn
jle
sub
fcomps
popf
cmp
push
jle
jg
pusha
push
pop
add
ficoms
in
or
or
int
loope
arpl
jo
pop
lahf
orl
add
mov
jne
aaa
inc
stos
xchg
dec
mov
data16
or
insl
cltd
lcall
push
and
dec
in
adcb
jle
mov
insb
xor
jns
ret
mov
inc
pop
adc
adc
mov
dec
xor
fistpll
xchg
mov
in
lods
jmp
pushf
pop
cmp
mov
xchg
mov
fidivrl
dec
inc
imul
and
xlat
or
daa
inc
aad
into
sbb
in
adc
dec
mov
mov
repnz
sub
xor
out
mov
jbe
pop
add
outsl
inc
test
outsl
ficoms
cli
xchg
sbb
dec
jmp
cmp
imul
mov
add
enter
add
xchg
out
adc
into
shll
loopne
mov
pop
into
and
jmp
pop
xchg
cmc
jo
sbb
mov
dec
mov
inc
incb
or
cs
ret
mov
andl
xchg
push
inc
jg
lret
xchg
mov
in
jbe
nop
aaa
aad
and
pop
dec
push
mov
xor
mov
sahf
or
inc
imull
mov
gs
dec
sbb
pushl
mov
cld
xor
int3
repnz
xor
pop
cwtl
sbb
subl
aas
push
cmp
js
fiaddl
inc
xor
push
mov
rcr
xchg
dec
and
mov
insb
mov
mov
mov
cli
pop
data16
jns
stc
divl
xchg
push
jo
lds
out
push
jl
loope
in
fnstsw
mov
sub
adc
sub
lcall
or
sbb
mov
ljmp
pusha
mov
xor
push
dec
inc
out
jecxz
xchg
scas
pop
xor
dec
dec
lret
xchg
leave
call
jg
enter
fldenv
mov
adc
in
cltd
sbb
dec
ljmp
iret
adc
cmc
or
dec
adc
sbb
jae
pop
sbb
mov
push
xchg
je
lds
dec
sahf
push
notb
gs
sarl
mov
dec
push
fsubrs
mov
icebp
mov
andb
pop
leave
scas
sub
insb
out
jae
push
mov
xchg
stos
into
jle
and
add
pop
jbe
mov
fdivs
dec
add
lret
test
clc
sti
imul
or
lock
pop
adc
cs
jg
enter
jg
jle
sub
cli
cltd
sbb
cmp
mov
adc
mov
dec
loope
test
insb
lea
jmp
inc
inc
nop
ljmp
mov
lock
aaa
lret
cmpsb
cmp
sub
fcoms
mov
push
or
cmp
sub
mov
add
loope
jnp
loopne
fst
jp
cltd
mov
dec
loop
jo
xor
lea
aad
in
mul
cmp
jno
outsb
push
in
popf
adc
push
js
xchg
mov
pop
bound
das
add
setg
and
jo
add
sahf
or
lea
push
rclb
push
ds
call
js
daa
stc
mov
aas
mov
scas
sahf
out
imul
mov
subb
inc
cmpsl
imul
lock
stos
pop
push
add
push
repnz
rolb
and
jg
call
cmp
or
out
shl
mov
push
iret
xor
mov
hlt
std
mov
jnp
push
pop
or
sahf
aas
jb
push
packssdw
push
push
in
int3
movl
lcall
and
repnz
adc
sbb
xchg
loope
fidivrs
jne
xchg
insl
adc
imul
call
mov
js
std
pop
adc
add
jle
push
jle
cmpsb
xor
and
int
mov
inc
lcall
out
mov
xchg
cmp
dec
xchg
cmp
or
mov
repnz
jecxz
pop
pusha
out
xlat
jnp
lret
jnp
jo
add
or
dec
testl
mov
leave
mov
dec
xor
xor
add
in
addr16
dec
cmp
xchg
popa
inc
cmp
add
sub
ficomps
mov
aam
cli
add
test
inc
shr
inc
or
jl
out
cmp
mov
xchg
mov
xchg
sbb
mov
cs
xor
or
ret
lahf
and
in
dec
jmp
mov
add
dec
leave
dec
xor
clc
les
adc
in
mov
int3
sub
inc
mov
inc
adc
and
mov
flds
subl
ja
xlat
push
jo
lcall
jmp
and
mov
lret
lods
ret
mov
out
jge
pop
movsl
inc
shrl
scas
es
sub
nop
mov
testl
movsl
push
in
and
adc
jmp
xchg
sar
shrb
xchg
lds
rcrb
lds
lea
fmul
pop
shrb
and
mov
sbb
pushf
in
cs
cmovge
mov
enter
cli
add
xchg
loope
insl
mov
mov
pop
or
test
repz
mov
sbb
add
pop
int3
js
jle
pmuludq
adc
inc
sub
jl
popf
ret
js
sbb
fwait
scas
xchg
leave
mov
sbb
movsb
es
mov
outsl
lcall
dec
jmp
xchg
push
lods
imul
jno
push
mov
mov
pop
movsb
add
add
shl
cmpsl
sub
or
addr16
int3
inc
imul
das
jno
cmp
jmp
or
insl
dec
scas
divb
dec
fnstenv
sub
jno
movsb
push
dec
imul
push
mov
movl
or
arpl
push
and
xchg
rcrb
shl
pop
js
add
aam
notl
mov
popf
ret
sbb
jle
dec
push
mov
dec
or
mov
insl
sub
cmp
xor
lcall
stos
nop
mov
sub
movsb
add
clc
xchg
xor
scas
adc
pushf
cmp
sar
js
testb
stos
out
inc
mov
xchg
xchg
lods
out
xlat
sub
cwtl
push
add
cmp
sbb
sub
lret
into
sarl
das
sbb
scas
lods
xor
lret
sub
sbb
outsb
cmp
stc
cmpsb
add
lcall
arpl
sbb
or
or
cmp
sbb
xor
inc
jnp
sti
lahf
rclb
push
out
push
mov
push
shr
mov
adc
mov
add
adc
pusha
mov
fdivr
pop
test
add
scas
add
pop
xchg
mov
mov
adc
push
mov
sub
iret
mov
cmp
mov
inc
mov
or
cmc
daa
jns
lods
movsb
or
mull
frstor
pop
lcall
shr
or
js
into
add
pusha
out
outsl
sbb
shlb
mov
push
in
ret
dec
inc
add
repnz
mov
cmp
mov
inc
mov
popf
sub
or
in
cmp
idivl
inc
push
in
mov
lret
in
call
cmpsl
scas
pop
jae
ds
rcll
sub
repnz
shlb
push
pop
mov
lea
inc
push
sub
sahf
loop
loopne
and
pusha
jge
xchg
xor
mov
inc
std
pop
push
push
ja
push
aad
lahf
aas
out
stos
cmpsl
cltd
cwtl
fstpt
lcall
jb
inc
mov
sbb
pop
add
or
sbb
pop
movsl
mov
sub
xchg
push
adc
mov
aaa
add
push
filds
adc
add
add
cli
mov
inc
inc
sub
aam
sbb
jbe
inc
cld
pusha
fildll
jno
add
mov
cmc
arpl
sti
xor
aad
repnz
je
cmc
cld
shll
mov
ficompl
or
add
xor
enter
jge
xor
js
push
jp
cli
pop
mov
ljmp
iret
xchg
loop
or
pushl
fwait
sub
enter
add
cmp
pop
add
fbld
sub
lcall
test
jp
das
mov
jnp
mov
add
jne
dec
xchg
test
mov
ret
mov
sbb
push
push
sahf
sub
mov
mov
in
test
loope
iret
push
repnz
pop
add
push
mov
mov
ljmp
inc
call
stos
mov
fiadds
rolb
dec
negl
jecxz
mov
xorl
lret
imul
js
fsubrs
incb
and
sub
dec
inc
sbb
movlps
mov
xor
ficompl
mov
mov
mov
xchg
sbb
std
out
mov
sbb
sub
aam
js
dec
jmp
sub
loope
mov
faddl
mov
dec
jp
ret
mov
out
add
flds
jae
cld
add
int
and
fdivrl
stc
xor
test
push
out
sti
popf
sbb
outsl
movsl
mov
push
repz
int
mov
cli
loopne
and
jl
push
pop
dec
sbb
stos
ficomps
push
jg
ljmp
aad
mov
sub
insl
gs
in
popa
mov
popa
lock
add
xor
push
jecxz
les
jb
fs
test
ret
loop,pn
loopne
add
sub
mov
rorb
lahf
out
clc
push
mov
loop
add
cmp
popf
inc
aam
aam
mov
jle
outsl
dec
fxtract
sub
jle
loope
or
push
xor
roll
pop
into
mov
out
stos
pop
mov
out
or
pop
push
arpl
or
arpl
cltd
xor
dec
in
push
lret
data16
mov
inc
daa
lods
popf
mov
int
stos
add
jb
sahf
and
ljmp
push
inc
movsb
push
fcoml
lock
lahf
sbb
mov
lods
push
mov
mov
sbb
inc
leave
or
cld
int
lods
or
xchg
xor
arpl
push
mov
dec
or
lea
xlat
mov
sbb
xor
leave
bound
push
test
and
into
jg
icebp
nop
xchg
dec
sbb
cs
push
aam
rsqrtps
rol
out
xchg
sahf
mov
idivl
xchg
mov
movsl
and
std
lods
negl
std
cmpsl
stc
jecxz
pop
mov
push
push
push
arpl
add
arpl
sti
add
lahf
mov
cmp
fstpt
push
lods
mov
or
fdivs
sbb
cld
jnp
cmpsl
adc
xor
or
jo
pop
fidivl
push
subl
push
fstpl
sbb
mov
mov
enter
lret
jmp
inc
xor
xor
mov
sub
sub
jecxz
inc
xchg
inc
lahf
jo
lds
jo
push
pop
movsb
lock
inc
jmp
call
jge
test
dec
sbb
sarb
aaa
mov
xor
stos
icebp
cmpsl
add
push
jmp
adc
push
dec
mov
fiadds
int
or
daa
cwtl
and
cld
push
fists
sub
xchg
ss
in
adc
jg
jb
mul
xchg
jg
ss
and
std
mov
xorl
jmp
sub
inc
movsl
inc
in
mov
jbe
or
addr16
nop
push
xchg
inc
test
outsb
xor
icebp
test
mov
push
push
test
arpl
mov
jl
mov
mov
mov
mov
push
mov
lcall
and
push
mov
fsubrl
sahf
or
rcll
pop
inc
xchg
sahf
int3
aas
rclb
cli
ss
cltd
and
std
or
dec
xchg
aad
pop
fiadds
jle
and
shll
repnz
jp
cmpsb
adc
nop
pop
jl
push
dec
into
not
cmpsl
popa
mov
icebp
jecxz
dec
lcall
sub
rorl
jae
aad
inc
aad
mov
mov
jae
fsub
adc
inc
loopne
jne
out
pushf
push
cli
daa
cmp
push
les
add
loope
xor
dec
in
data16
shl
or
mov
jecxz
add
push
add
jle
adc
pop
cwtl
cmp
mov
movsb
pop
loopne
pop
mov
mov
cld
jmp
mov
aaa
and
fsubrs
nop
or
jmp
lods
push
div
mov
les
fwait
dec
mov
aaa
push
fldz
stos
lret
enter
mov
xchg
shrl
daa
popl
lea
mov
cwtl
insl
xchg
ror
dec
mov
lds
aas
push
out
pushf
xor
mov
xchg
mov
push
sti
dec
and
mov
mov
out
pusha
pop
aam
pop
sbb
mov
cld
fcomp
or
fsubrs
mov
dec
out
ja
adc
xchg
aaa
dec
sti
lods
xchg
xchg
mov
cltd
pop
nop
push
mov
js
and
pop
xor
mov
ds
or
or
lea
jnp
subl
jne
mov
mov
in
imul
jmp
sbb
cmp
add
mov
mov
scas
lock
and
insb
scas
loopne
jl
sub
lods
dec
aam
loop
dec
pop
xchg
scas
ja
shl
lahf
push
clc
push
lods
push
mov
ja
cld
sbb
call
push
rcl
mov
ret
pop
push
jnp
sbb
sbb
mov
sbb
test
mov
aam
cmp
mov
ja
add
or
jb
loopne
xor
aad
shlb
adc
inc
and
jl
rcll
frstor
imul
cmp
push
lret
xor
in
mov
mov
mulb
adc
dec
jb
das
cltd
test
sbb
das
out
stos
lahf
je
ret
inc
or
hlt
and
jmp
cmc
xchg
push
xchg
mov
sub
cmp
push
lahf
jge
mov
inc
sbb
out
loopne
xlat
xchg
and
sbb
mulb
jne
mov
jne
mov
dec
cmp
or
rol
inc
push
insl
jg
fisttpl
xchg
fs
fadd
fxtract
or
sbb
lret
inc
xchg
jb
or
jl
mov
mov
and
cmc
jecxz
fstp
or
xor
aad
or
movsl
or
lret
cmpsl
loopne
cwtl
fs
inc
jl
loopne
jg
movsb
test
lea
clc
mov
imull
outsb
inc
mov
push
adc
jle
nop
cmp
xchg
jmp
hlt
sbb
into
xor
sbbb
xchg
shlb
jnp
stos
test
cs
xchg
push
fcmovne
cmp
pop
movb
rclb
inc
push
inc
in
into
mov
out
sbb
pop
aas
movsl
cld
mov
iret
jecxz
mov
test
sub
pop
or
mov
mov
mov
mov
pop
pop
jne
jno
inc
dec
out
daa
mov
add
cmp
js
xchg
lods
mov
jle
adc
popl
fcomp
sahf
mov
mov
je
lods
sbb
mov
aas
das
lods
push
mov
adc
push
jp
and
mov
mov
and
mov
fwait
enter
lods
loopne
mov
sub
sbb
jnp
jmp
cmpsl
mov
movsl
loop
je
add
lcall
mov
adc
jmp
fwait
scas
aaa
inc
pop
cltd
rcll
dec
mov
int
movsl
mov
neg
aas
stos
xor
cmp
push
add
ss
sub
xchg
sbb
pop
inc
int3
mov
jae
lods
dec
gs
add
pushf
mov
ja
aam
push
xchg
xchg
mov
jb
lcall
push
mov
lds
and
xchg
cltd
fcmovu
imul
dec
dec
into
stos
inc
or
mov
lea
or
or
cmp
imul
lods
pop
leave
mov
fsubrl
sti
movsb
adc
lret
cmp
fnstcw
stos
pop
inc
xor
sub
sbb
sbb
arpl
lods
xlat
push
std
lret
adc
add
scas
push
pop
out
mov
int3
aas
pop
repnz
loop
push
add
sub
jae
or
inc
cs
fildll
mov
inc
lods
xchg
fadds
jbe
test
ljmp
shll
jle
xchg
stos
cmp
pop
sbb
in
je
fsubrp
lock
fldt
arpl
jmp
lcall
filds
push
inc
aam
roll
dec
mov
mov
xor
jecxz
or
sti
jo
xchg
cmp
dec
shrb
sub
stc
pop
pop
bound
out
fcompp
jno
pop
sbb
xchg
ret
pop
mov
mov
mov
data16
add
jmp
cmp
movsb
xchg
jno
push
dec
mov
xchg
inc
mov
dec
movb
ret
cli
inc
push
sbb
cmpsl
jmp
sub
push
xor
fwait
sahf
add
sub
push
rolb
sub
sbb
call
pop
and
xlat
ljmp
daa
fldt
push
dec
xchg
cmc
in
bound
or
mov
and
add
clc
popa
pop
or
aas
sub
loopne
popa
pop
daa
sub
pop
movsb
loope
movsb
fsts
loopne
and
aaa
rcr
adc
test
outsb
jp
popa
lret
sbb
adcb
xchg
and
push
xor
dec
push
cmp
cwtl
js
fistpl
pop
iret
addr16
std
mov
sub
mov
out
aaa
stos
inc
sub
adc
leave
xlat
clc
jnp
jle
jmp
scas
sbb
enter
lret
icebp
jno
pop
sbb
shlb
xor
fisubrl
mov
in
inc
inc
aam
das
xchg
divl
inc
or
jecxz,pn
add
inc
dec
push
sbb
inc
lea
stos
out
xlat
and
sub
movsl
push
adc
ss
xchg
ret
jno
jp
outsb
jbe
jmp
lods
xchg
push
fcomps
lods
xchg
out
int3
ljmp
and
shlb
cmp
adc
and
mov
jnp
out
sbb
lahf
hlt
lea
jo
mov
mov
lcall
push
aaa
sub
scas
imull
dec
xchg
jne
leave
fdivrs
lds
fs
pop
lcall
jle
sbb
push
icebp
pusha
sub
repnz
sbb
data16
test
jne
dec
push
icebp
testl
push
adc
sbb
push
mov
jbe
jle
out
out
enter
mov
imul
lock
test
es
ss
adc
bound
lods
pop
jns
and
inc
movsl
mov
inc
popa
jl
fadd
sub
mov
add
lock
xor
lret
lds
into
sub
mov
jnp
pop
mov
inc
je
and
pop
xchg
iret
and
sbb
mov
cwtl
mov
push
xchg
mov
mov
bound
mov
icebp
xor
xor
div
repz
jecxz
scas
add
int3
inc
sti
test
or
xchg
adc
jmp
lock
mov
sbb
imul
shl
pop
or
mov
push
pop
mov
jne
outsb
mov
std
in
add
push
sub
pop
pushf
xor
push
fsubs
les
cs
scas
jg
scas
je
sub
mov
inc
jle
mov
xchg
mov
jno
movsb
rclb
jl
xchg
rorb
push
ret
mov
pop
fiadds
repz
pop
xchg
adcl
add
ss
es
dec
hlt
dec
scas
cmp
mulb
mov
pushf
insl
pusha
add
inc
ss
pop
inc
pop
mov
lock
ret
pop
cmp
inc
add
js,pt
daa
xor
popf
js
shl
mov
xor
mov
sub
inc
lret
sbb
push
cmp
loop
xchg
icebp
aaa
mov
leave
adc
cmp
jmp
mov
mov
insl
mov
push
nop
vorps
pop
mov
loop
add
xor
sbbl
aad
in
jno
cmpsl
mov
pop
iret
add
fdivs
dec
mov
dec
mov
inc
call
jg
xor
push
xor
xchg
mov
add
xlat
fcomps
sbb
clc
mov
adc
out
cwtl
pop
cli
lcall
and
aam
insb
push
outsb
sti
stos
or
std
int
loopne
cmp
shl
lcall
rclb
jo
imul
cmc
and
pop
fmuls
mov
aam
xorb
les
pop
pop
in
fadd
jo
jnp
loope
cwtl
mov
jne
rclb
lea
jecxz
je
pop
cwtl
lods
pushf
mov
pop
mov
add
adc
mov
popa
je
andb
rorl
loope
gs
mov
jmp
adc
xchg
aaa
sub
mov
mov
ret
aam
push
js
lret
repz
out
andl
lret
dec
pop
daa
or
mov
xlat
rol
dec
mov
sub
jne
cmpsl
dec
dec
jno,pt
mov
or
stos
std
fstp
jge
xorb
jg
cmp
loope
xchg
outsb
incl
orb
xor
rcrb
lds
adc
nop
icebp
int3
mov
fsubrl
pop
lcall
mov
insb
repnz
xor
add
notl
pop
add
repnz
cmpl
sub
scas
pop
loope
mov
lock
add
stos
sub
and
mov
pop
lods
test
repnz
in
mov
push
rol
push
je
pop
push
out
insb
ja
cld
loopne
mov
and
adc
call
scas
sbb
push
xor
jns
js
cld
mov
fsubrs
sti
jmp
mov
jns
xchg
mov
sti
mov
mov
cmp
gs
sbb
mov
into
and
push
xchg
sbb
add
sub
mov
test
daa
enter
lret
test
in
adc
dec
add
jmp
fisubs
in
insl
xor
mov
je
push
mov
inc
or
sbb
adc
in
icebp
dec
pushf
popf
outsl
jge
xor
fpatan
aaa
sub
cld
int3
xlat
push
pop
sbb
and
add
adc
inc
test
repnz
les
outsb
movsb
testb
out
ror
pop
test
data16
mov
bnd
cmp
lods
jns
mov
mov
xor
push
test
mov
or
std
ret
pop
call
lock
daa
xchg
pop
outsl
sahf
shrb
lods
inc
cmpsl
je
rcll
iret
mov
nop
scas
and
out
xchg
icebp
stos
out
adc
stos
add
in
xchg
js
daa
outsl
imul
ljmp
xor
adc
leave
in
pop
push
dec
fsubrs
mov
adc
push
push
sbb
popf
xchg
test
jae
jnp
xchg
lcall
cmpsl
adc
fstpt
xor
xchg
push
push
aam
fnstenv
cmp
divl
loop
push
cmpsb
es
ja
pop
sbb
sbb
pop
ss
jmp
ja
ljmp
js
fsts
sti
int3
loopne
sbb
mov
sbb
arpl
cmp
adc
cmp
test
js
mov
movsl
loope
dec
jae
mov
push
jnp
dec
mov
test
or
jae
mov
xchg
adc
pop
movsl
or
or
cmpl
ficoml
fdiv
mov
cmpsb
sbb
inc
roll
pop
mov
sub
add
add
add
inc
mov
or
dec
mov
or
add
add
dec
mov
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
