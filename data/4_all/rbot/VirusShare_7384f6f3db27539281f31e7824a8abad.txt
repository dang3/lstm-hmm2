add
ljmp
sub
adcl
minps
push
jl
push
ret
push
xor
mov
out
in
in
cltd
jnp
and
inc
js
outsb
inc
jl
push
push
addr16
outsl
lds
fs
dec
jge
shlb
movb
sbb
mov
add
or
dec
dec
xor
ds
movl
fs
aas
sti
dec
dec
loop
lahf
clc
aaa
pop
xchg
inc
jle
rclb
mov
and
ss
outsb
xor
pop
push
mov
rorl
push
lods
imul
pop
scas
sub
in
sysret
loop
inc
shl
jecxz
fadds
aam
fisttpl
jg
std
mov
cwtl
jne
loop
sti
repz
push
lods
push
jb
push
fisttpll
xor
fdivrs
invd
mov
dec
shll
mov
mov
push
jns
lahf
lret
mov
mov
push
ljmp
inc
add
rolb
in
and
mov
dec
int
mov
rcrl
adc
add
jg
mov
dec
icebp
movl
fidivl
adc
push
cmpsl
jle
xchg
ficoms
xor
pop
xchg
subb
dec
rol
test
mov
cmp
movsb
mov
adc
das
jg
and
test
lcall
outsl
sub
les
push
mov
cltd
lahf
pop
jmp
pop
or
in
out
fnsave
imul
popf
adc
add
xchg
cld
xchg
cs
stos
cmp
jg
cmp
mov
xchg
fsts
dec
sahf
pushf
jbe
mov
mov
cmpl
xor
lahf
cmp
fwait
movsb
cmp
test
popa
fucomi
jne
fstpl
loop
xor
ret
lods
insb
xchg
xchg
negl
fs
cmp
aam
arpl
insb
sub
ret
inc
push
xchg
call
mov
push
es
frstor
icebp
nop
jge
mov
mov
adc
cmp
xor
js
pop
outsl
sbb
bound
mov
ljmp
in
xchg
push
pop
movsb
imulb
in
fists
mov
jg
jge
push
aas
mov
and
xchg
mov
jnp
test
push
mov
push
fildl
bound
popf
addr16
push
stos
in
ftst
arpl
scas
fbld
dec
xor
sbb
jb
xchg
pop
stc
mov
sub
enter
jno
nop
sub
test
cmp
dec
push
jg
lret
adc
inc
adc
pop
xchg
icebp
incb
pop
mov
gs
fisttps
jae
cmp
jmp
mov
jo
pop
xchg
je
sub
divl
movsl
fldt
loope
out
call
mov
or
dec
and
lods
cli
imul
jo
loop
inc
imul
push
mov
out
filds
sub
jno
cwtl
mov
pop
mov
xor
cmp
cmc
xor
inc
mov
rcll
ss
mov
xchg
rorl
inc
enter
sar
ds
daa
mov
mov
jle
mov
jns
sub
stc
mov
sbb
in
arpl
repnz
jnp
push
push
insl
jmp
fistpll
test
sbb
mov
adc
daa
jl
repnz
dec
or
jmp
or
cmpsl
call
mov
cmp
out
imul
std
sub
adc
das
or
testb
fists
pop
adc
enter
mov
cmp
jl
test
xor
test
mov
mov
addl
jl
sub
pop
fadd
sub
inc
push
cmp
sbb
jne
daa
rolb
lods
out
jge
rclb
adc
enter
lock
add
add
aas
jb
nop
je
cmp
xchg
push
and
cmp
inc
sbb
xlat
pop
iret
xchg
or
es
push
mov
sbb
pop
and
mov
ss
es
push
lahf
sbb
xor
pop
jp
loopne
jno
sbb
or
jmp
push
push
fmull
roll
xchg
sarl
cmp
leave
flds
xor
xor
das
pusha
sbb
sub
push
stc
jmp
mov
movsl
cmp
idiv
mov
xor
aam
leave
push
jns
and
mov
aam
sarl
cltd
mov
vmovntdq
xchg
test
decl
lods
xchg
std
arpl
xor
mov
cwtl
push
insl
mov
mov
inc
lcall
dec
fwait
iret
shlb
and
jmp
mov
insb
lds
mov
ret
push
fwait
mov
mov
stos
cmc
adc
dec
daa
push
xorb
cmpsl
xor
cmp
mov
xlat
cmp
clc
or
mov
jge
add
xlat
jmp
std
pop
frstor
or
mov
add
daa
cmp
iret
add
shll
mov
add
cmpsl
xor
push
push
outsl
test
mov
push
cmp
sbb
call
pop
mov
stos
cld
js
es
push
fcompl
cmp
in
aaa
dec
xchg
pop
lods
das
push
jno
mov
dec
adc
xlat
and
and
xchg
push
push
dec
mov
sbb
imul
rolb
jnp
int
dec
inc
es
das
les
dec
push
mov
xor
xchg
aam
js
push
xlat
test
ja
pop
push
fucomp
add
cmc
xchg
sbb
cltd
mov
xchg
sub
and
mov
pushf
cmp
sbb
test
xor
data16
dec
cmpsl
int3
clc
mov
push
push
xchg
fmuls
xchg
sbb
mov
daa
push
mov
mov
cmpsb
rol
inc
jne
insl
jmp
mov
js
mov
insb
add
imul
add
les
ja
mov
repz
xor
dec
loopne
or
mov
lods
test
test
mov
dec
fs
rolb
mov
insl
and
movsb
out
movsl
orb
cs
dec
mov
xor
fldpi
and
inc
ficompl
adc
pop
mov
pop
ret
sub
fwait
inc
cmp
cmp
add
aaa
lret
fisubl
mov
push
mov
cltd
inc
pop
test
je
ds
movsl
iret
pop
push
inc
sub
stc
int
enter
sarl
push
aam
sub
loope
xor
imulb
adc
aam
adc
mov
pop
fwait
lods
mov
mov
xor
cmp
popf
or
icebp
mov
cmp
cmpb
lahf
add
push
push
xor
inc
cs
int3
out
cs
jl
jmp
mull
mov
into
out
xchg
pop
jg
push
xor
mov
dec
ljmp
pop
std
int3
mov
mov
mov
dec
ret
fdivrl
repnz
leave
add
aaa
in
sub
fmul
dec
lods
movsl
ljmp
mov
adc
mov
mov
aaa
stc
ret
cmp
inc
in
adc
mov
push
popa
dec
fidivs
or
fsubs
dec
adc
and
cld
jmp
dec
push
pop
aam
jae
jg
scas
subl
imul
pop
nop
lret
ss
mov
adc
lods
pop
push
lods
cmp
fs
and
adc
dec
mov
mov
lods
sub
jl
js
mov
mov
nop
mov
cmp
or
and
mov
jae
out
jg
das
loop
sbb
inc
dec
popa
out
lret
pusha
adc
std
ret
leave
mov
cmc
and
cmp
popf
outsb
scas
add
push
xchg
es
add
sti
sbb
roll
jg
xchg
cmp
fstpt
inc
xor
inc
shrl
lods
pop
lret
scas
std
test
and
lahf
imul
cmp
mov
fists
das
pusha
pop
repnz
lods
add
mov
cmp
inc
outsl
mov
stos
ja
into
cmp
jmp
cmp
pop
sub
je
xchg
pop
aaa
jl
mov
icebp
pop
add
loope
mov
push
shlb
leave
loop
inc
sbbl
stos
scas
push
out
das
ret
in
cmpsb
psrad
cld
and
popa
dec
repz
push
rcll
aaa
push
xchg
popa
xchg
int3
fisttpl
xchg
and
popf
sbb
jbe
mov
mov
mov
mov
sub
cmp
jecxz
or
cmpl
scas
push
lcall
jmp
fstl
or
add
dec
xchg
inc
mov
clc
lret
movsb
sub
stos
push
cld
mov
iret
aaa
popa
pop
rol
imulb
in
mov
inc
fadd
movl
mov
imul
or
rcrb
pop
in
jns
daa
xor
sbb
rol
pop
rolb
ret
mov
ds
iret
push
stos
ja
aam
cmc
out
es
add
cmp
lods
xor
fucomp
jo
lcall
fiadds
xchg
insb
leave
in
pop
xchg
adcb
jl
or
sbb
dec
pop
jne
sahf
icebp
adcl
jo
inc
push
fwait
sbb
sub
dec
das
xchg
dec
cmc
out
push
fwait
aam
inc
mov
daa
je
aad
test
sub
pop
arpl
dec
cmpsl
pop
cld
inc
cmp
ja
sub
adc
sub
fcomi
inc
add
xor
repnz
stc
orb
pop
mov
adc
lcall
adc
xchg
adc
jle
push
xchg
stos
push
ljmp
xchg
movsl
inc
out
movsb
out
push
fwait
lock
xor
jle
lds
dec
jge
lods
fs
xlat
mov
cli
add
adc
and
leave
outsl
imul
pause
inc
push
sub
rolb
fsts
cwtl
pop
pop
cmp
scas
push
nop
mov
cmp
cltd
cmp
icebp
jmp
inc
cs
scas
mov
add
ret
push
mov
push
sti
xor
xchg
repz
adc
popf
repz
cmpsb
xchg
in
pop
adc
call
shll
icebp
jno
pushf
jns
mov
mov
fcompl
cmp
mov
sub
lret
gs
daa
cmp
xchg
sub
pop
inc
adc
fdivrl
inc
je
sub
jne
push
jecxz
wrmsr
in
fiadds
arpl
into
iretw
jle
jno
cmpb
fiaddl
in
test
xor
and
cld
addr16
and
scas
repnz
sbb
insb
fistps
imul
jmp
sbb
test
lea
imul
mov
fisubrl
add
or
ljmp
lret
push
in
mov
dec
dec
jnp
test
add
sti
pop
imul
outsb
and
cmpsl
jmp
inc
stos
and
sbb
loop
jae
popf
xchg
jge
iret
mov
daa
mov
sti
jno
cmp
push
aad
mov
jp
jge
jle
or
mov
fwait
ljmp
add
and
mov
inc
mov
pop
sbb
mov
cmp
test
sbb
mov
ret
fcomps
mov
inc
out
mov
dec
dec
leave
das
jl
jp
daa
shl
lods
xor
mov
push
mov
cmp
pop
pop
xchg
das
mov
es
push
lahf
mov
xor
nop
es
in
sub
add
iret
ja
fistps
stc
inc
sub
rclb
xchg
sub
jno
inc
mov
in
es
jge
push
bnd
aam
shll
push
test
xchg
sbb
cmp
imul
enter
in
fcomi
xchg
daa
dec
jg
js
jle
mov
shl
or
jl
jns
pop
into
aam
pop
es
dec
mov
push
out
adc
or
or
cwtl
mov
mul
je
outsl
sbb
mov
xor
test
repnz
out
cld
dec
dec
cmpsl
cmpsl
xlat
push
rorl
or
jns
cmc
dec
cmpsb
stos
rcrb
cmp
cmp
push
popa
push
pop
scas
shll
cmp
sbb
bound
lahf
dec
cmpsl
dec
insb
inc
fcmovbe
dec
push
cmp
dec
mov
in
push
call
das
es
pop
jl
fimull
lahf
add
fsubl
mov
push
in
lret
mov
xchg
push
mov
pushf
jbe
push
jle
mov
jle
test
int3
jl
cmp
cmc
pop
imul
jl
fwait
js
adc
jl
mov
xor
pop
outsl
sbb
xor
add
jo
sub
in
gs
jecxz
pop
imul
adc
add
in
mov
andb
ja
pop
sub
push
ret
dec
movsb
scas
das
fldl
mov
jmp
out
push
sbb
pop
dec
push
out
in
lods
mov
fsubrs
or
jmp
add
hlt
aad
in
das
cld
jae
pop
xor
add
jmp
int
jbe
push
adc
sbb
aad
lahf
push
das
fsubl
pop
iret
cwtl
aaa
and
paddusw
dec
mov
sahf
pop
cmpb
push
push
inc
iret
es
cmp
jg
mov
test
jo
or
rcrb
adc
push
leave
mov
pop
lods
iret
insb
pop
push
ljmp
fwait
mov
adc
xchg
or
fcos
rcll
rclb
aad
aas
xchg
pop
xchg
xor
cli
ds
cwtl
ret
mov
or
pop
sub
shlb
and
aaa
jge
sbb
dec
fiaddl
ja
int3
daa
add
es
jno
mov
or
les
daa
out
cmpsb
sar
add
pop
into
sbb
ss
xchg
loopne
fists
mov
sub
pop
js
mov
mov
or
cmp
pop
xchg
lea
or
inc
or
pop
push
cmp
lahf
sahf
negl
mov
mov
mov
sub
add
lock
push
cmp
aam
pop
data16
mov
add
and
mov
pop
ja
xor
push
fcom
cltd
jne
mov
fcoms
aam
sarb
add
xor
adc
cmpsb
mov
jg
add
pop
mov
cmp
hlt
into
or
jne
into
lret
dec
mov
out
push
popa
sub
sbb
xor
fdivl
repz
mov
int3
sbb
xor
test
call
pop
into
fdivs
int3
push
sub
jge
aam
sbb
or
xchg
mov
orl
pop
xchg
fidivl
pop
mov
idivb
notl
sbb
cmp
adc
out
mov
mov
mov
arpl
xor
in
fidivl
sub
shr
fdivl
or
gs
sarb
mov
subb
sarb
fnstenv
push
mov
jp
dec
ret
in
push
push
nop
add
movsb
xor
jns
mov
pop
push
mov
ja
push
loope
pusha
mov
xor
add
pop
pusha
aas
pop
ja
ficoml
loope
stos
sti
pop
insb
in
div
loop
cmp
jp
mov
movsl
xchg
scas
add
add
aas
sub
mov
fldt
mov
jns
mov
in
cmp
movsl
aaa
daa
iret
inc
movsb
pop
xor
sbb
xchg
mov
and
sahf
mov
push
into
fidivrs
mov
leave
les
ret
nop
sub
mov
subb
int3
out
xchg
jne
std
aad
xchg
mov
out
mov
pop
or
xor
sbb
mov
stc
out
xchg
test
pop
incl
cmp
sub
mov
pop
jg
xor
jnp
push
adc
addl
aas
cmp
push
sbb
outsl
imul
jecxz
xor
cmp
adc
cmp
mov
sarb
push
jae
rorb
xor
sbb
cld
jns
mov
sbb
mov
xor
pop
ljmp
mov
jb
in
fsubl
loopne
and
lahf
cmp
sarb
cmp
insl
popa
iret
and
mov
rcrb
lahf
std
adc
cmp
jp
rcl
xchg
mov
enter
mov
out
mov
stos
dec
cli
out
pop
xchg
sub
jne
and
cld
push
ds
sub
mov
lahf
push
jl
or
mov
xchg
push
lret
arpl
push
inc
imul
pop
aad
js
incb
add
popa
adc
in
push
rcrb
testl
out
rorl
cmp
je
jns
add
inc
pusha
xlat
andb
xchg
ja
xchg
inc
inc
arpl
aaa
ja
cmpsb
jp
es
jo
stos
es
lret
or
adc
daa
mov
xchg
sbb
adc
or
lds
sbb
add
or
popl
dec
cli
lods
bound
lret
ds
cmp
ja
in
cltd
paddsw
mov
mov
jmp
int3
js
jbe
and
mov
ds
xchg
sbb
add
in
cwtl
dec
roll
cmc
jno
and
xlat
adc
sahf
push
sbb
sub
jo
add
xchg
pop
push
rcr
mov
lods
mov
inc
lcall
xor
sub
sub
dec
xchg
add
add
sahf
push
mov
sub
dec
sub
mov
xor
fidivrs
push
xchg
ret
ror
inc
xchg
fs
addr16
sbb
adc
inc
adc
lds
pusha
ret
insb
ja
inc
sbb
in
adc
pusha
pop
pop
mov
aam
outsb
leave
add
pop
sbb
mov
lret
mov
insb
mov
into
idivb
push
adc
xchg
xor
fisttpll
aas
aad
mov
jb
test
lret
mov
xlat
jle
inc
inc
jbe
into
sbb
adc
and
fisttpl
mov
addr16
jle
stos
or
das
xor
sbb
push
cmp
lret
loop
adc
ret
jle
lret
rcrb
pop
adc
mov
or
cwtl
sbb
fistps
data16
jl
repnz
xchg
lods
es
add
mov
dec
icebp
stos
pop
add
insb
lret
cmc
aam
loopne
mov
jg
mov
repnz
cltd
push
adc
sbb
fnstsw
rclb
ret
cltd
cld
jbe
sub
mov
clc
cmpsb
add
sbb
icebp
gs
scas
xorb
xor
and
mov
int3
stos
icebp
add
mov
imul
in
add
aam
jp
dec
adc
cmp
ret
sahf
xor
mov
fsub
sbb
jle
adc
cltd
sbb
sbb
add
lods
imul
fdivrs
stos
into
inc
sub
lahf
repnz
rclb
lret
sub
or
pop
pop
push
cmp
lret
push
cli
or
jnp
ret
popa
cld
cmp
ret
mov
dec
es
jbe
dec
xchg
pop
ds
cmp
fidivl
out
shll
das
jae
jne
psrlq
cmp
mov
dec
mov
cmp
arpl
jecxz
push
leave
insl
and
into
stc
mov
ret
inc
ret
pushf
sahf
divl
and
push
rcll
iret
xchg
mov
and
jnp
pop
add
imul
std
inc
xor
sub
aaa
imul
mov
out
jbe
inc
sub
leave
jmp
inc
sbb
jg
push
out
mov
stos
sub
ret
rorb
data16
cmc
adc
sbb
iret
inc
test
xlat
xchg
xorl
sub
or
stos
push
jb
daa
xrelease
mov
enter
fcompl
outsb
lods
arpl
cmp
mov
ja
scas
and
dec
sbb
fs
mov
sub
xchg
daa
mov
iret
xchg
imul
std
ucomiss
ret
js
xor
dec
cmpsb
sbb
jg
mov
or
mov
xlat
pop
jno
adcb
xor
jne
dec
adcb
fimuls
fstpt
jnp
inc
ljmp
sbbl
mov
xlat
sub
iret
mov
ja
sbb
xchg
into
sub
shll
or
adc
int3
jne
inc
ret
sbb
repnz
test
mov
mov
notl
and
push
mov
or
push
cmpsb
sub
mov
jae
rcrb
mov
and
pushf
ljmp
iret
xchg
or
ja
popa
shrl
ja
push
stos
fdiv
in
jb
clc
leave
push
in
push
repnz
cmpsb
sbb
push
mov
in
mov
jno
fs
inc
insb
cmp
cmp
fucomi
sbb
out
lret
jne
das
nop
push
out
in
lea
addb
cli
xchg
cmp
cmp
and
shll
mov
mov
ss
inc
jb
dec
cmp
cltd
and
cmp
repz
dec
jo,pn
lret
adc
pusha
mov
push
lea
push
push
repz
push
sbb
test
pop
adc
add
ret
mov
setb
les
enter
pop
iret
xor
int
adc
dec
out
ret
daa
mov
jns
mov
imul
cmp
popf
lock
xchg
mov
out
mov
or
in
cld
mov
test
push
vpmacssww
daa
lret
or
out
adc
sub
adc
and
add
inc
nop
enter
cld
ret
mov
cmp
adc
jns
jnp
dec
adc
xchg
mov
int
scas
insb
lock
js
bound
inc
les
in
outsl
cli
rclb
loopne
popf
add
jne
xchg
clc
stc
jo
jno
aam
xor
rorb
mov
push
or
pop
push
jns
xchg
jle
cmp
fucom
rcrl
enter
jp
js
add
scas
js
ss
xchg
cwtl
mov
push
mov
or
cs
inc
add
lret
add
aam
inc
xchg
xor
xor
arpl
lea
jg
xlat
inc
cmp
lods
iret
clc
int
mov
popf
lock
ljmp
adc
test
aam
xor
je
in
push
in
testl
cmp
andl
js
mov
shl
outsb
mov
int
cmp
ljmp
pop
fidivrl
xchg
lahf
ljmp
mov
sahf
sti
push
push
ss
je
and
and
xchg
std
xor
jbe
jnp
cmp
nop
sbb
xchg
adc
cmp
adc
sbb
and
mov
cld
fcmovu
push
je
add
lock
decb
push
push
cs
push
mov
imul
mov
xchg
scas
test
sbb
pop
and
lret
xcrypt-ofb
cmpsl
test
pusha
xor
cs
mov
lea
sbb
test
dec
sbb
push
das
sbb
ret
hlt
mov
pop
xor
jne
movsb
stos
pop
cmp
jge
nop
jo
and
jo
fidivl
xor
inc
pop
jl
push
scas
aaa
daa
jmp
aad
insb
mov
test
aam
lret
add
mov
jb
jp
lahf
cmp
jb
mov
data16
lcall
adc
push
test
testl
insl
jo
jle
sub
jbe
xor
add
aas
fimuls
movsl
cmp
mov
sbb
mov
adc
movsb
out
lret
jle
out
jmp
mov
sarb
mov
ficoms
lret
cmp
mov
adc
xchg
and
aad
jno
push
enter
push
sub
bound
ds
push
cmp
xchg
dec
or
fcoml
es
push
inc
arpl
fwait
je
stc
dec
jg
add
cmp
cmp
int
push
fiadds
shrl
aam
in
stos
addr16
jl
adc
inc
xor
neg
add
loop
sub
int3
mov
pop
mov
sbb
js
pop
aam
xor
pop
popf
loope
xchg
mov
dec
mov
out
add
mov
xor
ss
es
rclb
mov
nop
push
test
jbe
lods
cmp
mov
pop
inc
incl
pop
cs
jo
xor
ja
rcll
adc
clc
and
sub
dec
xor
xor
fs
jmp
or
mov
add
test
xorl
jmp
mov
xchg
push
or
aam
das
pop
or
lock
insb
xor
pop
xchg
das
or
push
das
test
lods
call
inc
pop
mov
in
pusha
and
sbb
loopne
pop
sub
mov
and
fldcw
pop
sub
cs
mov
xchg
jg
sub
mov
ret
push
aaa
lods
cmp
ret
push
xor
enter
adc
movsl
lds
sahf
inc
mov
lret
pop
fwait
testl
cmp
push
out
xchg
repz
adc
jge
jae
loope
inc
mov
js
cli
inc
mov
xchg
lods
mov
sar
mov
ret
adc
aam
cmc
dec
scas
outsl
push
cmp
mov
inc
mov
std
dec
dec
inc
cs
lods
xchg
pop
add
mov
dec
cmpl
push
stc
mov
push
sbb
hlt
jo
sti
mov
mov
mov
lret
cmp
testl
xor
cmpsb
push
cmp
stc
js
in
add
lods
stos
dec
pop
lahf
out
dec
jnp
das
pop
mov
inc
sub
int
pop
jl
push
or
xchg
dec
xor
mov
push
mov
adc
adc
addl
cltd
outsb
pop
fcom
insl
popl
stc
push
xchg
sub
ret
xchg
jb
hlt
out
mov
cmp
and
inc
inc
mov
and
add
inc
dec
sbb
je
sub
fldcw
scas
and
notb
aaa
shll
mov
and
sbb
sbb
aaa
cs
inc
testl
and
pushf
jecxz
cmp
sbb
js
inc
lret
push
enter
call
daa
pop
loopne
push
div
pusha
mov
je
push
rcrl
and
cmp
fcom
adc
inc
aas
dec
std
inc
dec
or
fcomp
into
and
pop
sub
push
add
imul
and
es
les
push
cld
dec
jno
test
das
sub
push
fcmovu
adc
jge
xchg
shrb
xchg
xlat
add
jle,pt
mov
stos
push
shr
inc
pop
mov
dec
adc
fistl
jge
lahf
aas
les
mov
push
insl
leave
test
mov
ljmp
add
cmpsl
ror
mov
repz
mov
rcr
ss
mov
dec
ljmp
paddsw
inc
xor
data16
jbe
mov
mov
out
adcl
ljmp
mov
jp
add
mov
xchg
or
mov
pushf
cmc
repz
lock
std
or
sub
cmp
sbb
jne
add
enter
fwait
ds
sbb
out
push
aas
pop
aad
push
pop
mov
lods
mov
mov
lret
inc
rorl
ret
adc
add
pop
xor
push
rcl
push
inc
int3
aam
insl
pop
sbb
movsb
adc
mov
lock
sub
xchg
loope
outsb
sub
push
adc
rorl
mov
sub
mov
aam
leave
add
xor
ret
stos
int3
xchg
jns
lcall
or
adc
xor
out
cmp
bound
push
es
cmp
pusha
mov
imul
ret
fldt
adc
bound
inc
fldcw
aam
or
mov
jl
mov
out
imul
out
push
sub
pop
and
and
mov
push
cmp
push
push
sti
xor
mov
xlat
les
inc
mov
or
push
add
das
fmull
cs
push
stos
mov
icebp
inc
xorb
push
mov
cltd
sub
test
out
fwait
fs
xchg
imul
loope
pop
xchg
xor
nop
test
out
xor
enter
add
fdivr
push
cmpsl
push
jo
pop
add
pushf
push
pop
xlat
sbb
mov
jle
xchg
mov
test
jp
fcmovu
mov
mov
mov
scas
pop
enter
or
jae
and
pop
push
es
xchg
dec
ret
inc
loopne
rcrl
mov
pop
xor
adc
mov
arpl
pop
sbb
add
dec
mov
jg
adc
leave
fsubs
sbb
sti
addb
cmp
es
inc
xor
jae
loopne
leave
call
repz
popf
fsubr
sub
js
ret
js
cmp
scas
icebp
iret
lods
iret
push
jns
hlt
loop
adc
leave
cmp
jl
outsb
xchg
pop
out
aaa
es
ja
sub
mov
mov
push
aaa
outsl
test
test
scas
mov
lods
addr16
aad
push
ljmp
jae
xchg
pop
inc
mov
hlt
enter
fwait
sbb
jae
out
fldt
jno
lret
movsb
enter
jmp
lret
add
inc
pushf
push
test
push
pop
push
ficomps
jg
in
xor
adc
bound
rcrb
data16
popa
imul
insl
add
hlt
rorb
lds
in
mov
adc
repnz
data16
mov
daa
iret
sbb
and
xchg
mov
xor
insb
scas
add
pop
test
sar
cmp
pop
inc
pop
cmp
sti
pop
sbb
mov
xor
add
xchg
jbe
and
jae
mov
adc
fistps
fsubl
xor
out
mov
cmp
jmp
incb
addr16
fwait
insl
mov
or
cli
and
insb
cmp
adc
orb
add
ficompl
xor
xlat
adc
sub
pop
rcrb
sahf
cwtl
pusha
inc
sbb
aaa
push
es
aaa
cmpsb
xlat
dec
jno
aaa
cld
js
cmpsb
mov
mov
add
push
imull
enter
push
clc
xchg
or
mov
push
mov
jp,pn
ds
out
stos
and
mov
das
add
stos
clc
xlat
mov
xchg
pop
cmp
jb
xchg
aam
and
cld
sbb
mov
lods
push
cmc
outsb
xchg
es
into
dec
out
aaa
idiv
test
sub
sbb
jne
adc
pop
or
pop
xchg
mov
int3
pushf
lods
xchg
cltd
mov
outsl
cmp
add
test
mov
jnp
cmp
aaa
mov
mov
mov
xchg
pop
outsl
or
ror
pusha
xor
rolb
pop
dec
add
jne
daa
aam
and
cltd
and
xchg
movl
xor
rol
aam
pop
insl
int3
lods
pusha
out
insb
sbb
xchg
push
lret
es
test
adc
add
mov
sti
pop
into
pop
push
mov
inc
cltd
jmp
dec
fidivrl
fidivrl
sub
shlb
jnp
lret
mov
ja
pusha
xchg
mov
pop
cld
leave
aaa
aaa
dec
xor
sub
inc
fistpll
inc
aam
adc
mov
cmpl
cwtl
and
pop
xor
out
fcomps
and
call
sarb
aaa
sub
ficomps
adc
popf
inc
jbe
jg
xchg
or
mov
sbb
imul
inc
iret
xor
push
cli
fdivp
push
xchg
mov
clc
inc
xlat
push
push
int3
mov
push
divb
xor
jbe
ds
add
push
mov
push
pop
imul
dec
in
movsb
aas
cmp
mov
cmp
nop
aam
lcall
pop
xchg
adcb
dec
mov
mov
xchg
xor
mov
xlat
mov
add
int3
pop
out
cmp
mov
sub
inc
xchg
add
mov
push
inc
popf
ret
and
dec
idivl
repz
repnz
xor
mov
cmp
xlat
lds
insb
lock
mov
fisubrs
sbb
shll
xchg
pop
add
icebp
daa
data16
movsl
addb
lock
lea
sbb
cmc
sahf
mov
xor
add
inc
clc
mov
popf
pop
jb
lods
lods
lods
iret
sub
test
adc
xorb
adc
inc
fiaddl
scas
ljmp
jno
aam
mull
sbb
inc
jns
lcall
cmp
push
adc
fisubrl
xor
sub
ljmp
cmc
pop
dec
rcl
pop
mov
movsb
lret
js
pushf
cmp
push
pop
sub
and
pop
je
mov
dec
pop
mov
cmp
fadd
or
ret
xchg
inc
test
adc
lods
pusha
daa
fildll
ds
addr16
push
push
outsb
stos
test
lods
inc
cltd
sub
ret
cmp
in
xchg
xor
jmp
fwait
jno
pop
ds
pusha
icebp
and
lds
mov
xor
out
sub
movsb
mov
push
repz
xor
fisubrl
xchg
or
sti
lahf
test
jbe
jb
adc
movl
sbb
js
inc
push
bound
push
mov
arpl
mov
imul
nop
int
pop
fiadds
sbb
loope
scas
nop
add
mov
mov
xchg
cmp
mov
adc
adc
mov
call
mov
lods
xchg
loope
out
cwtl
add
in
test
dec
outsl
or
dec
repnz
push
cmc
jns
push
rolb
cmp
jge
xor
in
inc
mov
xchg
jmp
pop
lods
push
xchg
mov
mov
rolb
mov
shrl
pop
cmp
arpl
push
and
lahf
leave
insb
inc
fbld
cmc
fistpl
cltd
nop
dec
mov
push
xchg
aam
xor
std
in
stos
in
insl
dec
lea
cmp
pop
aaa
stos
jmp
faddl
sbb
in
sbb
lds
sbb
pop
fsubrs
movsb
adc
xchg
sub
daa
push
stos
lahf
addr16
nop
dec
andl
jmp
imul
out
dec
and
out
and
call
sbb
rclb
jle
mov
sbb
push
fldcw
mov
movsb
sub
dec
shlb
rcrl
jbe
xlat
mov
movb
mov
or
push
xchg
insl
push
cmp
sub
mov
pop
nop
daa
or
outsl
data16
push
jo
dec
sub
fmuls
pop
sub
lock
cmp
or
sub
cltd
xor
xchg
or
roll
xchg
jecxz
mov
cmp
test
cmp
pop
icebp
push
fisttps
sub
jne
mov
push
inc
and
je
out
call
mov
aaa
pop
fwait
push
pusha
inc
cmp
lock
push
jl
push
cmpsl
pop
fwait
push
js
bound
xor
jmp
mov
cs
or
xor
push
and
jmp
out
int
lret
mov
sti
jmp
dec
cmp
sub
ret
ss
sarb
cs
jo
cwtl
dec
gs
in
rorl
fcmovne
movsl
int
jmp
mov
fdivs
pop
lds
xor
pop
mov
xor
xor
push
jge
mov
scas
jg
gs
inc
sti
popf
stc
add
jb
and
ret
mov
jge
mov
cli
sbb
bndldx
je
and
xchg
mov
mov
out
loop
mov
sbb
lcall
ret
popf
push
pop
pop
cmp
out
lahf
pop
adc
pop
lods
out
xchg
pop
ja
hlt
inc
fcompl
jl
mov
jecxz
fcmovbe
icebp
call
xor
ficoml
scas
cmp
in
bound
in
inc
xor
mov
fidivrs
loop
std
inc
mov
nop
lods
dec
aaa
mov
mov
xchg
inc
aam
addr16
push
cmp
and
jg
mov
sbbl
cmp
in
ja
mov
jle
sti
nop
mov
stos
imul
sbb
jmp
jns
or
xchg
add
popa
push
out
fwait
sub
nop
cmp
iret
mov
mov
bound
movsl
jnp
shr
mov
mov
adc
adc
insl
fstpl
xchg
popa
cmp
cmp
jae
adc
jle
mov
sbb
cmpl
sahf
pop
aaa
sbb
iret
lret
nop
jnp
insb
xchg
loopne
cltd
inc
add
push
push
fisttpll
lahf
or
or
pop
push
cmp
fcomip
outsb
loop
sbb
subb
orb
xor
push
jle
dec
xchg
js
jbe
movsb
outsb
inc
push
push
push
repz
pop
push
push
add
jb
lahf
imull
mov
xor
mov
gs
orl
in
imul
xor
jne
adc
loopne
and
push
in
mov
mov
pop
inc
daa
jo
lahf
and
and
into
cmc
mov
lods
dec
cwtl
ja
mov
mov
in
adc
adc
inc
nop
js
mov
lea
aam
cmp
jbe
nop
jbe
add
adc
xchg
inc
fidivrs
pop
addr16
cmp
xchg
xchg
xorl
dec
mov
dec
leave
lock
das
jp
jge
fdivl
loope
mov
push
mov
mov
rcrb
push
jp
sub
sarb
fwait
roll
xchg
imul
pop
dec
sarl
daa
mov
and
test
orl
lahf
out
push
stos
push
mov
imul
aas
pop
sbb
ret
daa
jnp
fisubrl
ljmp
pop
inc
hlt
ljmp
mov
mov
fwait
rcrl
imul
rclb
aaa
cmp
xor
pushf
pusha
dec
test
dec
ret
mov
jle
dec
cmp
pop
outsl
cmp
push
scas
mov
mov
jecxz
adc
jle
push
aam
xor
cmp
aas
xchg
in
lret
nop
ja
push
outsb
lods
repz
lock
arpl
add
jns
lahf
inc
aaa
loopne
ja
sub
add
xlat
and
clc
dec
sbbb
ljmp
int3
jge
inc
bound
xchg
les
imul
add
fisubrl
cmp
push
ficoml
les
xchg
jmp
ds
leave
pop
or
and
aas
daa
mov
xlat
aad
mov
lds
sarl
aaa
lds
push
sub
push
rol
xchg
lret
and
mov
and
sub
pusha
dec
test
mov
repnz
aad
cmp
sub
fucomp
ficoml
jp
fmuls
sbb
out
in
cld
xchg
xchg
inc
mov
sub
out
jle
xor
ds
and
and
jg
dec
push
and
es
ss
dec
jg
int
sahf
cmc
or
jns
fucomp
jecxz
sub
xor
jo
cltd
cltd
xor
xchg
mov
cmp
ret
pop
or
pushf
mov
pop
lret
mov
dec
mov
cltd
bound
scas
cmp
repnz
pop
popa
pusha
mov
lahf
inc
js
nop
into
clc
mov
add
mov
cmp
pop
arpl
fbstp
test
push
sbb
lods
fidivrs
push
xchg
fstps
int
lret
cs
leave
movsl
xchg
pop
std
dec
cmp
jne
out
or
bound
mov
jecxz
push
or
cwtl
xchg
cld
push
inc
xor
cmp
cmc
push
mov
jb
sub
xchg
sbb
cltd
sub
roll
pop
push
bound
lahf
sub
outsl
and
ja
inc
mov
sbb
xlat
push
dec
xlat
sub
ds
xor
mov
fscale
loop
test
or
int3
and
dec
or
pop
pop
pop
add
enter
rolb
sub
add
mov
sar
jecxz
and
cmp
push
out
sub
imul
or
jbe
aas
add
jbe
imul
mov
dec
jnp
movsb
das
popf
and
pop
push
xchg
jecxz
dec
and
mov
jo
loopne
jnp
sub
negl
xchg
push
notb
arpl
les
mov
inc
push
aaa
das
add
cmp
adc
gs
in
jbe
xchg
leave
rcl
push
cmp
or
stos
inc
sbb
adc
mov
aad
inc
dec
sub
cmc
mov
xor
xor
adc
dec
mov
inc
inc
jg
lret
xor
sahf
jns
xchg
sub
lods
test
mov
add
pop
adc
inc
xor
mov
fwait
sbb
popf
mov
das
push
cmp
dec
mov
lods
mov
inc
insb
mov
imul
jg
lcall
sbb
jmp
loope
ss
in
push
inc
imul
dec
sub
aad
sbb
jg
daa
inc
lret
cmp
cs
cmp
inc
scas
shlb
jb
out
cmp
jge
imul
push
adc
je
mov
xchg
mov
xchg
aad
lret
cs
iret
cs
jecxz
adc
sbb
add
in
outsb
fwait
or
sbb
rcrl
in
mov
scas
jecxz
xchg
adc
sbb
jns
mov
add
xor
xor
dec
and
dec
jo
arpl
xor
mov
loop
xor
mov
subb
cmp
sahf
roll
pop
fnstcw
je
pusha
movsl
insl
pop
mov
cmp
add
jp
mov
cs
add
repz
testb
push
xor
or
pushf
pop
dec
mov
mov
fisubrl
leave
ljmp
add
nop
sbb
jle
jge
mov
rorb
sub
sub
cmp
mov
mov
sbb
test
or
inc
xor
sbb
ja
mov
xchg
ficompl
je
cmp
in
dec
jg
mov
repnz
test
test
sub
xor
xchg
aam
push
stos
add
add
outsb
mov
sbb
jbe
xchg
notb
add
mov
mov
lds
cs
xor
xchg
lea
or
jecxz
pop
cmc
push
mov
repz
test
cs
test
stos
cs
push
fdivs
lahf
sahf
inc
notb
or
sbb
add
cltd
jge
mov
cmc
inc
test
cld
das
dec
loop
fsubr
adc
clc
jmp
xor
ljmp
out
insb
jbe
push
xor
jb
fcomip
xchg
gs
sti
sti
mov
lcall
out
adc
fs
adcb
rolb
or
jmp
cli
insb
fidivl
cmp
sbb
jecxz
pop
repz
pusha
mov
jae
push
in
jo
sbb
fwait
pop
push
cmp
aas
xor
push
lahf
in
mov
icebp
mov
pop
xchg
jmp
xor
call
ret
test
sub
sub
das
rcr
aam
or
pop
sahf
push
fcomps
daa
sbb
pop
fs
mov
push
jnp
aad
push
xor
stos
mov
jnp
mov
adc
incb
ds
xchg
out
sub
mov
xchg
inc
or
xor
xor
lcall
rorl
lahf
fistpll
jg
shlb
mov
adc
jmp
mov
jne
in
inc
das
cli
pop
ljmp
outsb
je
and
and
fmul
fwait
into
mov
in
sub
sub
pop
jmp
sub
push
sti
adc
cmp
sbb
mov
cld
add
xchg
jecxz
mov
pop
roll
push
adc
xchg
xchg
pop
mov
add
pusha
mov
sti
lods
imul
jge
inc
cmpl
jecxz
add
imul
test
idiv
push
lahf
les
jle
push
pause
cwtl
dec
into
out
inc
loope
ss
push
out
inc
inc
sub
inc
mov
enter
std
lods
bound
add
push
inc
dec
mov
dec
aaa
cmovne
icebp
jo
xchg
mov
pusha
sub
push
test
jecxz
inc
out
testb
hlt
push
mov
rcr
pusha
dec
outsb
js
lcall
daa
cmpb
xchg
add
fsubs
jmp
out
sbb
sti
xlat
pop
movsb
push
push
jbe
lds
cmp
outsb
scas
or
dec
in
inc
pop
mull
loope
lods
scas
fisttps
ret
lret
out
scas
ljmp
popf
push
dec
cmp
movb
mov
test
out
fwait
sbb
and
loopne
mov
pop
shlb
or
repz
mov
lds
lods
mov
or
addr16
mov
das
lods
sbb
out
mov
add
push
cmpsl
adc
leave
repz
cli
cmp
test
push
cmpsb
cltd
and
cmp
jnp
popl
sti
xchg
test
test
push
jp
stos
mov
das
sbb
inc
cmp
adc
and
aas
lret
das
fdivrp
imul
test
jbe
in
sub
andl
jae
pop
inc
cmp
cmp
mov
pop
dec
rclb
aam
jg
push
int
fcom
fsts
sti
in
xor
or
fidivrl
scas
cwtl
call
sub
dec
cmp
jbe
in
inc
out
cmp
arpl
push
test
fiaddl
push
in
sarl
lret
push
xchg
mov
pusha
inc
aaa
jl
jge
add
aad
or
je
sbb
rcl
cli
stc
xlat
fcomi
mov
xor
cli
shrb
xchg
add
jecxz
xchg
push
sbb
sbb
push
mov
stc
rorl
subb
sub
lret
test
lret
sbb
xchg
divl
pop
xor
push
shll
mov
mov
pop
mov
jb
fstl
mov
jecxz
cs
xor
leave
pop
jno
enter
fwait
mov
pop
outsl
pop
mov
aas
sub
out
sbb
push
xor
jo
mov
dec
mov
or
or
mov
push
cmp
nop
sbb
and
adc
je
mov
addl
mov
out
in
add
sub
sub
pop
mov
xor
repnz
aas
fildll
mov
pop
stos
push
jno
cmc
in
mov
xchg
lret
cli
fimuls
jnp
bound
andl
cli
dec
das
ja
pop
add
jg
push
xchg
mov
adc
jae
imul
aas
cmp
insb
push
fwait
inc
lods
push
ds
dec
inc
dec
bound
jnp
out
ss
fwait
sub
inc
push
out
hlt
shlb
mov
jp
xor
pop
lods
push
lahf
ret
xor
paddd
popa
scas
adc
test
das
or
outsb
enter
push
das
repz
daa
cmp
xchg
imul
flds
pop
push
lods
out
aam
addr16
mov
adc
jae
add
adc
sbb
push
cmpsb
inc
jns
xor
into
xchg
fistl
mov
cmpsl
xchg
or
cwtl
stc
fcoml
in
hlt
testb
pushf
inc
scas
gs
pusha
test
push
or
mov
cmp
leave
add
andl
mov
mov
add
andb
aas
xor
stc
jo
xor
pop
cmpl
js
jns
or
iret
ljmp
cmp
test
xor
clc
pop
mov
lods
into
cmp
cmpsb
mov
outsl
mov
mov
leave
pushf
mov
mov
out
insl
movsb
daa
xchg
in
jae
test
jae
inc
leave
push
lea
daa
add
lret
sub
lods
push
inc
ds
jge
jnp
das
mov
out
adc
leave
jl
push
pop
mov
stc
popf
out
sub
mov
mov
push
orl
scas
outsl
stc
add
pop
jns
or
repnz
pop
shll
enter
cli
leave
jecxz,pn
rorl
movsl
movsl
dec
add
test
push
dec
dec
sbb
outsb
aam
jae
imul
jo
mov
out
repz
push
sub
aam
hlt
ljmp
lahf
mov
or
jp
cli
fadds
lret
fidivs
cmpsb
sbb
std
dec
sub
cmpsl
fdivrl
xchg
outsb
add
jg
imul
inc
pop
mov
xorl
mov
out
cs
in
lea
ds
or
fildll
into
ds
imul
push
jge
test
leave
sub
lds
test
cmp
inc
and
test
push
cltd
stc
das
and
xlat
idivb
mov
arpl
pop
and
push
fwait
jmp
in
cwtl
fs
mov
stos
aam
bound
les
add
mov
jae
pop
lods
mov
push
ljmp
iret
add
or
or
or
add
adc
push
sub
out
adc
push
jle
mov
insl
lcall
jl
cli
jp
rcll
ficompl
pusha
pop
cmp
bound
push
xchg
movsb
popf
dec
pop
fcmovnu
xor
jecxz
movsb
int
and
or
xlat
xor
incb
aad
movsb
ss
testl
ret
bound
add
jmp
cld
or
imul
dec
jnp
lret
pop
inc
lcall
cltd
outsb
adc
repnz
out
es
xchg
mov
dec
test
addr16
gs
push
iret
cmp
lret
jns
loopne
add
xor
das
dec
jle
jns
ret
adc
addb
pop
jl
jge
cmpl
inc
iret
inc
in
dec
xor
inc
scas
scas
shr
scas
jbe
mov
cmp
cld
mov
fistl
cwtl
or
push
stos
iret
add
aad
lea
push
adc
add
xor
inc
or
inc
pop
sti
in
ds
rclb
jmp
sub
pavgw
ljmp
mov
pop
popf
jnp
daa
push
mov
call
orb
ret
jo
scas
sub
scas
and
adc
push
sti
shlb
add
mov
les
leave
inc
pop
fnclex
rcll
imul
insl
cmp
daa
push
xorl
xchg
hlt
lea
fdivl
pop
bound
dec
jnp
ret
add
jle
scas
adc
out
or
ljmp
inc
cmc
inc
cmp
mov
cs
andb
insb
push
inc
js
call
and
adc
iret
mov
cli
ror
fistl
push
cmp
arpl
mov
outsl
xlat
inc
pop
inc
inc
mov
fcmovb
imul
adc
pop
popf
mov
sbb
hlt
ret
mov
ljmp
das
in
mov
sub
sbb
adc
xor
nop
dec
mov
or
or
sahf
push
xchg
fidivl
inc
sbb
jo
fwait
or
sti
add
inc
out
in
sti
cmp
sub
inc
pop
leave
cmp
subb
jae
call
in
lods
jl
dec
aam
repz
shlb
push
outsb
mov
push
xchg
mov
gs
push
push
jne
sahf
xchg
pop
inc
aas
adc
jne
arpl
sbb
in
pop
add
xchg
xor
stos
or
adc
scas
cmp
sbb
jmp
and
in
loop
ret
int3
or
jmp
je
push
outsb
ljmp
pop
out
mov
sub
sbb
lea
pop
push
call
inc
sub
out
loopne
pop
sbb
xchg
lret
and
adc
and
and
push
push
and
cmpb
or
mov
cmp
sbb
arpl
out
scas
inc
pop
xor
jnp
dec
cmp
mov
xor
mov
xor
ds
push
xchg
mov
mov
gs
sbb
sahf
mov
mov
sbb
cmp
and
arpl
test
pop
mov
push
loope
pop
fwait
jle
daa
popa
push
lea
pop
cmp
dec
mov
dec
xor
sub
xchg
push
and
bound
lret
repnz
mov
sub
pop
cmp
jb
push
daa
popf
xchg
pushf
adc
cs
push
xor
in
sub
xchg
cwtl
sbb
mov
inc
cli
xlat
xorb
pop
sub
jl
mov
shll
sub
sbb
mov
mov
pop
xchg
inc
cmp
repz
adc
repz
in
push
cltd
stc
arpl
in
sub
push
mov
bound
mov
mul
call
lret
or
sbb
mov
pusha
aaa
mov
test
xor
adc
lea
ds
sarb
adc
aas
push
and
scas
jecxz
or
and
fcoml
inc
jbe
test
sbb
ret
repnz
jg
xchg
jl
out
scas
arpl
pop
mov
into
pushf
fwait
pop
test
and
or
mov
out
sub
repnz
sti
fimuls
std
das
adc
lret
mov
inc
out
jle
pusha
and
out
sub
pop
jmp
or
jg
test
push
xor
xchg
pop
loop
sbb
scas
popa
sub
jl
out
scas
pop
aaa
mov
imul
mov
inc
xchg
mov
sub
jl
in
add
into
push
call
push
mov
pop
ljmp
inc
ret
mov
mov
jl
mov
rcll
jnp
mov
es
cs
insb
rcrl
movsb
das
mov
mov
push
loop
lret
xor
filds
filds
rcl
test
repz
aaa
iret
lds
pop
test
adc
movsb
das
mov
push
sub
fwait
mov
movsl
lcall
adc
xchg
pop
outsb
mov
cli
loop
xor
inc
ljmp
pop
cs
adc
shrb
scas
orb
nop
jge
stos
mov
aaa
sbb
call
jae
clc
sub
inc
sub
inc
sub
idivl
xlat
xor
mov
addb
cmp
sbb
lock
cli
mov
repnz
rcrb
fmull
pop
sbb
mov
push
lahf
mov
xchg
outsb
mov
ret
insl
pop
lret
repz
xor
repz
daa
testl
push
pop
xchg
int
cmp
lods
push
outsl
repz
das
dec
mov
sahf
lret
inc
rcr
and
jbe
dec
mov
bound
iret
mov
jle
mov
clc
movsl
add
loopne
sahf
mov
cmpsb
adc
mov
scas
dec
pop
jnp
subb
adc
lret
mov
cld
pop
lahf
in
adc
push
mov
inc
into
ja
push
xor
jnp
push
imul
sar
lret
cli
divl
imul
cmc
xor
bound
jae
shl
mov
push
xlat
into
subl
inc
scas
orb
mov
mov
fisttpl
das
dec
pushf
cmpsb
sub
jmp
sub
rcrl
cvttps2pi
mov
push
xchg
les
outsl
sbbb
cmp
sbb
psubq
fsub
out
mov
mov
fldl
sub
icebp
cli
subb
scas
xchg
testl
cmp
lret
popf
fcmovnb
mov
neg
test
filds
push
pop
mov
fiadds
pusha
add
or
sbb
add
mov
dec
out
mov
inc
call
and
mov
aad
int3
push
sbb
out
out
inc
iret
ss
dec
push
xlat
sub
lods
iret
fstpt
pop
pusha
incl
mov
mov
push
insw
push
test
add
je
or
mov
push
jecxz
out
lret
fwait
and
je
add
aam
adc
mov
test
and
mov
mov
xor
js
jns
push
sub
sbb
fisttps
test
mov
lods
xlat
mov
fnstenv
ss
add
pop
lret
push
mov
xchg
xchg
sti
ret
and
sbb
push
js
es
int
inc
jmp
sub
hlt
or
pop
clc
mov
in
or
add
addb
and
dec
add
push
sbb
das
ficompl
js
mov
in
jnp
add
cmpsl
adc
lods
arpl
ds
jmp
fmuls
adc
cmpsb
xchg
int
outsb
pop
pop
arpl
aaa
enter
sti
cmp
aam
test
mov
sbb
add
cmpsb
mov
loope,pt
xchg
push
inc
jl
nop
in
adc
pop
sti
test
lock
mov
push
inc
xor
jne
inc
dec
or
push
mov
cmp
dec
int3
enter
leave
and
mov
inc
mov
mov
xchg
mov
cltd
fbld
sbb
mov
add
push
cmp
push
xor
enter
jmp
rorl
test
out
cmp
mov
mov
sbb
mov
xchg
inc
dec
mov
dec
jno
cli
loopne
push
movsb
mov
inc
testl
mov
cld
cmp
xchg
pop
and
frstor
mov
and
movsl
mov
into
push
repnz
rcll
mov
cmp
mov
scas
es
sub
push
xlat
imul
sarl
inc
lods
xor
cli
cmp
mov
sahf
int
movsl
iret
push
xor
stc
mov
mov
jne
ret
pop
mov
cmpsl
gs
xor
cmp
cmpsl
inc
lret
xchg
fwait
inc
jbe
pop
fdivl
pop
leave
sub
mov
cmp
ss
cmpsb
lods
push
add
lock
pop
ja
sub
fucomi
cwtl
and
add
inc
aam
jns
rcrl
stos
fld
cmp
and
push
mov
mov
fildll
pop
mov
push
jp
pop
adc
in
addl
sti
test
nop
das
daa
push
xchg
loop
nop
scas
ja
and
and
xor
and
lods
dec
jg
push
mov
mov
xor
jbe
mov
dec
jmp
das
lret
adc
test
pop
test
dec
aaa
dec
add
mov
cmp
notrack
mov
mov
jl
sahf
sbb
shr
cltd
jbe
outsb
call
imul
stc
mov
xor
gs
fdivs
out
gs
xchg
and
popf
lahf
mov
xchg
bound
mov
sarl
adc
or
and
out
adc
enter
mov
inc
shlb
adc
mov
mov
mov
lock
xor
jp
push
ret
mov
dec
stos
push
jnp
add
hlt
add
cmp
out
subb
pop
stc
pop
mov
test
sti
sub
fisttpll
nop
xchg
adc
and
xlat
into
movsb
inc
or
lret
jae
nop
cltd
jmp
scas
leave
and
fdivrl
add
jno
push
xchg
popf
jnp
sahf
repz
jle
mov
enter
fidivl
xorb
xchg
fdivs
shlb
dec
fcmovbe
adc
out
push
notl
stc
mov
sbbb
rep
in
sahf
fwait
les
stos
xorb
sbb
xor
dec
negb
add
xor
sub
adc
das
in
aas
test
jp
stc
je
sti
das
cwtl
xor
scas
cld
movsl
pop
push
test
imul
add
fdivrs
cmp
adc
push
mov
fcomps
in
or
imull
xchg
dec
aam
xlat
arpl
mov
xorl
inc
call
imul
xchg
insl
dec
out
fildl
mov
daa
lods
repnz
dec
lahf
mov
sarl
insb
negl
lea
mov
xlat
add
xor
mov
cwtl
addb
add
int3
vcvtdq2pd
es
ds
mov
stos
aad
cmpsl
mov
std
or
xor
inc
fisubs
pop
sub
xor
and
and
or
sbb
sub
mov
inc
les
xchg
enter
popl
mov
pop
mov
or
sub
std
cmp
cltd
bound
jge
push
test
mov
cmp
out
fsubrl
pushf
jbe
cmp
dec
lods
or
jecxz
and
shrb
add
xchg
sbb
ret
xor
je
sub
jg
jae
mov
push
daa
sahf
xor
sarb
lods
out
xor
or
insl
dec
cwtl
mov
leave
aam
inc
in
xor
inc
pop
mov
and
cwtl
mov
inc
adc
pop
lods
cmpsb
mov
out
adc
mov
shll
std
push
incl
xor
cwtl
inc
bound
jmp
movsl
cld
push
sbb
adc
lret
ss
aad
sbb
dec
mov
cmp
and
dec
jl
xor
cmp
jb
pop
test
cmpsl
push
aam
mov
das
push
sti
pop
cmp
lahf
jns
inc
adc
jle
cmp
das
mov
mov
es
scas
xor
fs
sub
mov
cmp
cli
cmp
and
lds
xchg
dec
dec
aam
xor
ret
xorl
pop
mov
pop
mov
popf
jp
push
sub
lock
sub
bound
pop
jg
and
add
into
jnp
insb
stc
ja
cmp
add
push
js
jmp
imul
dec
or
push
mov
and
and
or
jg
mov
les
adc
dec
xor
insl
je
pop
jnp
shll
loop
enter
jl
sub
pop
push
mov
mov
cltd
inc
call
aam
pusha
sbb
stos
dec
pop
add
loopne
clc
popa
add
sbb
or
push
push
mov
addr16
fidivrl
xchg
dec
movsb
loope
or
sub
loope
cmp
out
push
nop
jge
fdivr
mov
xlat
xchg
shr
cmpsb
pop
outsl
out
jnp
xor
dec
cmp
dec
push
add
inc
jmp
icebp
lods
sub
dec
inc
xchg
inc
or
into
or
fwait
out
aad
pushf
push
push
movsl
xor
inc
and
xchg
pop
iret
lods
mov
inc
insb
pop
test
cld
jecxz
ljmp
xor
jecxz
cmpsb
jp
call
inc
jmp
inc
lods
sbb
fwait
out
iret
cmp
mov
push
inc
push
jb
push
sbb
dec
in
icebp
add
sbb
scas
ds
pop
inc
mov
in
cmpl
xchg
movsl
nop
orl
int3
cwtl
mov
ss
and
mov
js
or
sub
cmc
lea
outsb
push
jmp
dec
push
xchg
pop
jae
cmp
xor
xchg
lea
movsl
adc
leave
sub
and
mov
outsb
ljmp
pop
dec
and
xor
pop
jae
jp
sbb
dec
cmp
mov
sbb
and
scas
insl
neg
jle
in
sub
adc
leave
mov
fnstsw
inc
int3
mov
nop
popl
cmpsb
pop
push
sub
sbbl
inc
xchg
stc
pop
inc
cmp
cwtl
dec
lea
out
sti
jge
push
jmp
das
lret
loopne
push
fisubs
shr
jnp
jne
dec
sbb
jne
pusha
push
pop
xchg
mov
jnp
aam
fbstp
push
push
mov
inc
andb
mov
lods
icebp
pop
test
xor
dec
xchg
adc
enter
cmp
dec
lea
and
lret
fldt
stc
jb
push
jo
sbb
add
sarl
xchg
outsb
fst
pusha
jg
xchg
jmp
inc
je,pn
xchg
jp
flds
mov
xor
je
push
xchg
ret
mov
push
pop
hlt
and
xor
mov
ja
inc
sbb
cmp
loope
add
jae
sub
fldcw
pop
pop
in
dec
in
outsb
dec
pop
pop
xlat
add
mov
lahf
imul
fsubrs
mov
add
popa
shlb
sbb
push
fidivrl
inc
jecxz
cmp
jns
push
mov
gs
pop
sarl
jnp
hlt
mov
sub
shlb
imul
test
and
push
pop
fnstenv
repnz
mov
and
xor
in
test
dec
or
popf
push
xchg
inc
pop
dec
push
imul
push
jg
pop
mov
pop
cmp
xchg
pushf
pusha
inc
popf
push
adc
fcomps
fwait
lea
cmpb
loope
sbb
or
dec
pop
mov
repz
adc
rcll
cltd
xlat
cld
loopne
into
sub
push
pop
inc
ds
add
daa
sub
adc
xchg
inc
xchg
push
out
xor
push
add
pop
push
jb
push
rcrb
cwtl
std
or
in
and
inc
mov
and
shrb
jecxz
mov
jnp
mov
shll
jnp
sub
test
shrl
lock
xchg
iret
imull
aam
push
sub
jmp
sbb
push
xchg
test
sub
stc
mov
add
jae
jl
xchg
xor
addr16
push
cmp
sub
mov
add
xchg
or
inc
jecxz
jno
sbb
and
mov
jnp
ljmp
pop
out
xchg
lds
and
es
push
jecxz
jbe
arpl
lea
mov
std
lret
sahf
dec
ret
int3
xchg
mov
adc
mov
pop
inc
shlb
lock
cmc
jae
mov
jno
cmp
xchg
mov
jge
xchg
leave
ror
pushf
icebp
pop
push
adc
dec
pop
roll
addr16
sub
cmpl
inc
xor
les
leave
push
inc
or
into
pop
jmp
mov
and
add
outsl
cmp
in
or
cmpsb
dec
loopne
pop
add
mov
cmp
cmc
movsb
dec
or
bound
loopne
popf
mov
mov
test
cmp
mov
sub
int3
incl
dec
push
fistps
xor
mov
leave
cld
sub
scas
in
jge
lods
add
inc
adc
fistps
aad
jl
cld
clc
mov
imul
inc
faddp
nop
mov
xchg
or
mov
rorl
mov
je
pushf
mov
mov
aas
pop
jmp
dec
cmc
mov
pop
push
daa
lods
stos
push
cmpsl
stos
cwtl
sbb
mov
insl
sbb
sbb
fdivs
jmp
jl
push
pop
loope
jo
rcrl
add
mov
sti
mov
insl
mov
aam
scas
insb
nop
cmp
xor
mov
mov
sbb
loope
das
or
jbe
loopne
pop
sahf
xor
pushf
sbbl
mov
sub
std
in
es
cwtl
pop
xor
xor
inc
loop
jmp
push
insl
mov
jne
sub
adc
pop
das
fdivp
fstpt
mov
fstpt
outsb
stos
dec
jp
es
imul
push
mov
inc
imul
and
jbe
mov
mov
daa
aam
xor
lahf
aad
xchg
sub
into
adc
mov
add
mov
push
lea
ficomps
or
cmp
mov
stc
out
lahf
pop
cltd
mov
clc
push
inc
sub
je
outsl
or
imul
pop
xchg
sti
push
sbb
fiaddl
insl
inc
loope
mov
push
adc
jnp
daa
mov
or
add
insl
sbb
pushf
cs
enter
cmpl
sbb
or
and
cld
cld
lods
xor
mov
inc
sub
adc
lcall
imul
mov
aam
testl
mov
cwtl
sub
loop
in
daa
mov
cmp
mov
divl
cli
jb
scas
dec
clc
sub
fistps
sub
xor
stos
xor
xchg
or
stos
or
fwait
sbb
sbb
pop
sbb
addr16
adc
mov
test
xchg
push
mov
add
mov
es
mov
jg
or
pop
adc
cmp
pop
call
xor
das
imul
ds
scas
jecxz
mov
fsubrp
outsl
pop
nop
dec
and
and
dec
dec
xchg
add
aaa
addr16
and
mov
push
pop
jb
inc
push
add
xorb
jns
xchg
or
mov
or
popf
mov
stos
lods
jne
nop
cs
xor
adc
fimull
fldenv
push
clc
xchg
sbb
out
sbbl
cmp
push
inc
jecxz
jno
std
dec
cs
call
fwait
jmp
push
ds
scas
and
cmpsb
jae
and
mov
lcall
outsb
call
jns
stos
shl
andb
loope
clc
inc
lock
push
es
adc
fdiv
xchg
sbb
inc
xchg
fwait
iret
jae
stc
hlt
adc
mov
xor
and
fadds
push
ret
in
sub
push
mov
inc
inc
push
push
add
add
stos
mov
sbb
insb
call
dec
in
jge
cmp
push
lods
xchg
dec
push
iret
jg
pop
and
cltd
inc
cmp
push
std
mov
mov
lea
and
sbb
mov
pop
lods
dec
jg
ficompl
cmpsb
addr16
andl
cmpsl
andl
lock
cmpsb
mov
xchg
rolb
pop
push
fwait
jp
out
addr16
mov
out
test
pop
cltd
and
mov
xor
fcmovbe
adc
shll
adc
cmp
sub
pop
sbb
mov
mov
jl
cmpsl
or
mov
dec
cltd
fiadds
push
push
bt
scas
and
into
lock
xorl
and
shrb
and
testl
out
cs
dec
mov
mov
outsb
in
fs
movsl
mov
rorb
les
andl
into
cmp
dec
test
and
fnstenv
and
popf
dec
int3
popf
and
pop
cmp
dec
push
shr
cwtl
es
mov
or
inc
sub
push
push
inc
arpl
mov
adc
cmpsb
dec
lret
lods
inc
sbb
loop
fucom
iret
shrb
cltd
fdivs
cld
adc
jne
cs
loopne
dec
mov
ljmp
jecxz
push
jb
inc
add
outsl
arpl
push
inc
rolb
in
negl
xlat
test
rcrb
cs
jbe
aam
in
in
cmp
jp
jle
cmpsl
pop
daa
ret
mov
repz
cmpsl
imul
sbb
adc
xchg
inc
loope
lret
mov
mov
rcl
cmp
jne
out
sub
cmpsl
movsb
jg
cwtl
popf
imul
iret
shl
or
movsb
add
test
mov
jnp
nop
stc
jl
es
jle
xor
mov
aam
mov
dec
sub
pop
adc
jno
adc
pop
daa
xchg
sbb
xor
cmp
push
xchg
int3
xor
sub
sub
ret
fimuls
cmp
lds
push
pop
cmp
lcall
test
dec
rclb
and
mov
sbb
jae
std
aaa
daa
mov
xchg
mov
ficompl
sbb
pop
mov
popa
cltd
in
repnz
pop
cmpsb
arpl
mov
jmp
repz
push
jbe
pop
xchg
push
inc
cmpsb
rcll
push
add
xchg
imul
mov
xchg
insl
cld
pop
jne
clc
mov
aad
test
js
popa
stos
push
repnz
mov
push
jg
inc
and
mov
stos
cmp
jnp
xchg
idivl
add
ja
int3
aam
adc
loope
lahf
and
ret
mov
push
xor
je
insb
scas
sahf
stos
inc
or
jns
mov
scas
in
adc
dec
dec
xchg
sbbl
mov
inc
sub
stos
fdiv
insb
fucompp
mov
dec
sub
popf
dec
shll
push
jg
xlat
js
nop
xchg
push
cmp
ret
cmp
cmpsb
in
insb
leave
jecxz
scas
cmp
popa
inc
ljmp
dec
dec
adc
mov
arpl
cmc
cli
pop
cwtl
pop
lahf
rcll
mov
scas
xchg
popf
sbb
rorb
in
in
mov
lods
adc
add
in
popf
data16
fdivrl
popa
xor
or
mov
imul
lea
test
or
mov
mov
sub
xchg
cwtl
sahf
ret
pop
jge
mov
jno
stc
repz
push
jb
in
scas
out
popa
or
arpl
rorb
and
ficoml
test
mov
das
mov
xlat
jl
test
pop
test
pop
inc
stc
or
dec
and
cmc
jge,pt
hlt
xchg
loop
ret
dec
jmp
lock
call
movsb
pop
fcomi
push
repz
out
ja
mov
pop
je
dec
add
sbb
dec
xor
sub
repz
or
es
fsubrs
and
pop
cmp
adc
es
sbb
xchg
bnd
sub
sub
cwtl
fcmovu
mov
adc
cmp
aam
jge
fistpll
xchg
pop
inc
js
and
sbbl
mov
pushf
jecxz
scas
jno
adc
in
rcl
push
pop
mov
je
sub
fldpi
fsubl
sbb
cwtl
and
pop
fists
insb
xor
push
je
pop
mov
sbb
sub
mov
cmp
push
and
push
and
cmp
push
and
repz
std
pop
inc
pop
pop
push
jl
das
in
mov
sbb
je
in
sbb
ljmp
out
fisubrs
dec
adcb
aad
xlat
push
jno,pn
push
aas
push
repnz
jmp
jb
dec
cmpsl
imul
icebp
ss
jecxz
in
aaa
shrb
push
sub
jne
cmp
xlat
sub
data16
jae
adc
inc
mov
xor
xchg
dec
push
out
std
mov
xchg
xchg
lds
cld
not
imull
mov
xchg
mov
imul
pop
adc
mov
jne
xor
mov
push
movsb
sub
xor
out
es
and
dec
xchg
mov
cmc
cwtl
mov
addr16
adc
insb
addr16
sub
aas
pop
js
ds
jp
add
aad
xchg
xor
mov
dec
mov
cltd
mov
fwait
jge
fwait
pop
hlt
out
sbb
xchg
cs
pop
xor
sbb
ret
aam
inc
andb
out
cmc
xor
push
popf
cmp
out
mov
dec
pop
in
xor
jp
jae
aam
push
rep
jae
adc
or
adc
pop
add
lock
push
outsl
arpl
mov
jo
test
lret
imul
mov
movsb
je
xorl
xchg
xchg
ljmp
push
repnz
scas
adc
cmp
pop
mov
out
test
test
ficoml
dec
xchg
adc
xchg
jmp
push
roll
mov
roll
daa
mov
push
mull
pop
fisubl
mov
mov
call
sbb
jnp
aam
and
pop
dec
cmp
push
mov
adc
jge
push
adc
sub
mov
jbe
push
cs
push
fst
or
sahf
pop
inc
es
fdivrs
dec
sbb
jg
adc
shlb
mov
jl
pusha
mov
xor
mul
stc
je
xchg
ss
fmull
dec
dec
jo
adc
jno
inc
stc
daa
push
loope
inc
popa
je
inc
mov
cmc
jne
in
mov
enter
jp
nop
mov
inc
mov
or
fdivrs
mov
push
pop
sub
mov
push
cmc
mov
out
pushf
ljmp
cwtl
scas
sbb
ja
adc
push
aam
xor
sahf
mov
test
and
jo
dec
loop
sub
jecxz
call
mov
je
in
test
jbe
mov
mov
fisttps
das
cmp
mov
jmp
mov
dec
add
cmp
push
inc
lods
ljmp
cmp
or
mov
or
int
nop
std
lcall
hlt
fwait
mov
pop
icebp
jg
fbld
iret
out
sbb
mov
xchg
movsl
icebp
jp
mov
sbb
movsb
xor
sarl
in
addl
jmp
mov
push
xchg
out
mov
sbb
push
inc
fisttps
jbe
inc
cmp
sub
repz
js,pn
incl
out
cmp
mov
test
out
daa
imull
sub
lret
hlt
fists
addr16
jl
mov
or
dec
pusha
xchg
in
decl
sub
cmp
pop
cmp
jp
dec
scas
mov
push
sub
xchg
xchg
cli
inc
imul
inc
mov
dec
lods
imull
mov
aam
push
inc
or
pop
test
sbb
enter
nop
test
xorb
fwait
cmp
mov
pop
cwtl
push
jle
popa
xchg
loopne
jno
jae
fsts
cmp
stc
shlb
push
xchg
enter
sub
inc
les
jp
icebp
repnz
dec
push
cli
pop
lret
js
clc
jns
fbld
test
push
pop
cmp
dec
add
mov
fstpt
push
in
xchg
and
mov
lods
xchg
xor
sub
test
movsl
jecxz
push
mov
cmp
out
outsb
scas
xchg
pop
lock
add
ret
push
xchg
adc
add
cmp
or
push
arpl
cmp
mov
stc
xor
mov
dec
inc
mov
sti
scas
jbe
loopne
inc
dec
push
popf
pop
sar
lahf
scas
dec
stos
mov
mov
cli
sbb
cmp
dec
mov
icebp
shrl
cmp
mov
fstps
mov
mov
popa
sar
mov
jecxz
hlt
or
aad
jne
cmp
rcrl
les
jb
les
notl
hlt
inc
sbb
xchg
dec
mov
sbb
mov
fcoms
push
dec
loopne
mov
fdivp
lret
xchg
mov
push
dec
pop
add
inc
dec
mov
inc
jo
mov
out
es
cs
dec
push
fwait
mov
push
lcall
mulb
in
or
add
enter
leave
jecxz,pt
imull
orb
daa
sarl
pop
push
xchg
out
mov
jo
out
add
cmpsl
lret
adc
add
xchg
lea
arpl
mov
aas
je
imulb
aad
flds
sbb
sar
das
pop
lcall
pop
bnd
jle
push
mov
xlat
imulb
fsubl
fistl
xchg
dec
cltd
pop
cmp
push
scas
in
mov
mov
outsl
fidivrl
aam
lods
dec
sbb
cmp
xor
xor
mov
push
mov
xor
cmp
xor
push
loopne
xor
aaa
int
addl
cmp
sub
sub
jnp
repnz
mov
inc
testb
icebp
jmp
test
mov
inc
mov
sub
add
imul
call
sub
mov
cmp
mov
sub
xor
arpl
cmp
leave
add
sbb
sub
pusha
packsswb
scas
pop
cmp
mov
ret
jo
push
test
xor
and
faddl
adc
cmp
jae
jmp
mov
stos
xor
mov
fdivs
push
push
dec
cltd
jp
jmp
xchg
rcrb
jnp
and
sbb
cli
ficompl
sbb
es
jb
jns
mov
xchg
out
xchg
inc
sbb
xchg
inc
sub
fidivs
xchg
mov
out
fucomi
pop
jp
inc
into
xchg
pop
jno
addr16
aas
push
dec
add
dec
or
orl
sar
arpl
js
popa
dec
cmpb
aaa
push
cmp
sub
cwtl
pop
daa
mov
add
mov
add
call
outsl
ja
xchg
dec
addl
dec
sbb
outsl
fdiv
ficompl
cmpsb
test
scas
rorb
pusha
push
xor
out
sub
jp
mov
xor
dec
cmp
cmp
imul
mov
in
push
out
push
out
fbld
push
mov
inc
scas
push
or
xor
cmp
stos
aam
xor
pop
out
mov
dec
ret
aaa
in
and
xchg
pop
xor
cmpb
outsl
dec
mov
ret
jp
movsb
or
inc
out
pop
shrl
inc
nop
jle
lods
test
jne
xchg
stos
pop
and
mov
cmp
xchg
outsb
jecxz
xor
das
repz
add
and
inc
dec
test
and
xor
adc
test
daa
imul
adc
subb
xor
aaa
lcall
inc
mov
sbbl
repnz
in
add
jl
std
add
cmpsb
in
pop
jb
in
add
daa
ljmp
xor
bound
push
xor
incb
inc
cmp
mov
out
scas
mov
fsubrs
lods
xlat
mov
add
inc
jns
sbb
add
or
jo
jae
fwait
add
pop
sub
push
mov
movsl
mov
xor
pop
outsb
xor
adc
and
push
lret
xor
push
or
or
and
add
lret
enter
int3
and
add
fistl
cmp
push
test
pusha
fwait
cld
push
lret
jo
jmp
cmpsb
aam
mov
adc
cmp
or
pusha
xlat
cwtl
rcrl
jnp
dec
pop
dec
out
sub
inc
shlb
dec
add
pop
repz
iret
cmp
mov
addr16
add
and
out
xchg
pop
mov
outsl
test
out
add
sbb
jle
popa
xlat
sbb
jb
sub
aaa
fisttps
shlb
inc
testl
dec
or
lcall
jp
stos
int
add
call
inc
inc
cmpsb
mov
call
popf
imul
into
pop
jns
push
xchg
or
stos
push
mov
push
test
repnz
das
mov
nop
into
repnz
inc
dec
je
mov
hlt
testl
iret
in
jb
xor
popf
xor
test
std
sbb
lods
ret
xchg
lock
jo
jle
je
push
subb
and
in
pop
adc
out
incl
push
lret
hlt
or
mov
pop
sbb
xor
adc
mov
outsl
xor
mov
fmul
push
sbb
jb
inc
aad
or
xor
sti
fwait
xlat
cmp
cmp
jle
jo
sub
jb
sub
mov
sbb
popa
mov
enter
lods
dec
dec
mov
js
dec
rcrl
mov
loopne
jmp
mov
in
xchg
inc
jnp
add
fcoml
push
lods
movsb
dec
and
sti
insl
mov
mov
adc
xor
xchg
aam
dec
mov
rclb
jno
add
inc
js
in
or
arpl
cmpsl
imul
out
adc
aas
movsl
jmp
mov
jle
daa
sbb
scas
fisubs
fmulp
mov
add
cmp
loop
rorb
push
mov
or
gs
insb
or
fisubrs
jno
sub
mov
mov
stc
test
xchg
push
in
or
jns
out
bound
negl
inc
cld
and
fstpt
jmp
dec
das
sbb
mov
inc
mov
mov
jl
mov
fwait
cld
shl
sbb
add
jp
movsl
mov
pop
stos
ja
inc
sbb
test
lea
mov
call
andb
push
mov
pop
pop
fstpt
push
adc
out
lds
cmp
stos
fcoms
popa
mov
das
xchg
std
and
into
aas
push
fwait
repz
cmp
add
mov
loope
out
jb
xor
sbb
mov
imul
xchg
aaa
cmp
push
aam
inc
add
insl
fwait
adc
mov
mov
jmp
push
in
arpl
cmp
sub
inc
mov
int3
cmp
ja
sbb
pop
rclb
or
movsl
inc
pop
sub
dec
call
pop
into
ficoms
aad
jmp
lret
rorl
or
orl
mov
mov
fwait
aas
pop
xchg
xchg
or
mov
btc
sarl
or
pop
fnstcw
inc
dec
movsl
inc
push
and
imul
mov
into
ja
out
shrl
in
add
xor
cli
leave
imul
cwtl
sbb
aam
cmc
push
sbb
fimull
outsl
shlb
cwtl
xlat
or
jne
cmpsb
adc
sar
cs
out
jno
into
cwtl
xchg
je
sbb
mov
adc
inc
push
je
mov
mov
pop
cmp
xlat
xorl
adc
xor
lods
aad
dec
mov
cmpsl
push
movsb
pop
idivb
sub
rcrb
fiaddl
xor
sbb
fs
gs
pop
jbe
jnp
mov
xor
cmp
pop
jbe
jle
das
popf
shlb
mov
into
outsl
sub
outsb
les
pop
mov
scas
sbb
add
cs
dec
mov
fidivs
mov
div
and
xchg
icebp
inc
stos
mov
fdivrp
enter
xlat
sub
in
scas
pop
and
fstps
and
pop
mov
aaa
inc
lret
sub
xor
pop
ljmp
sub
js
inc
jae
jno
cmpb
aaa
ffree
clc
cmp
mov
mov
das
pop
cmp
fisttpl
mov
mov
orb
adc
cli
dec
and
cltd
mov
rcrb
inc
add
mov
sbb
movsb
outsb
imul
rcrb
jg
mov
dec
fdiv
and
imul
mov
ds
push
cmp
cmc
jnp
mov
sbb
push
pop
inc
dec
fcoms
xor
pop
sbb
ret
es
jbe
mov
inc
mov
lahf
dec
outsl
mov
sub
adc
mov
pop
sub
mov
inc
xchg
lods
cmp
lea
sbb
add
arpl
ljmp
dec
push
mov
sar
cltd
fcoms
sbb
inc
pushf
inc
mov
mov
push
les
idiv
cmpsl
les
adc
je
inc
jg
lock
sub
fsts
xchg
out
aad
xchg
outsb
fstpt
pusha
lods
mov
fs
jbe
out
jae
pusha
stos
test
clc
aaa
pop
out
jbe
push
shrl
aam
ror
hlt
add
pop
loope
cmp
dec
xchg
leave
mov
sub
mov
push
jmp
ret
lods
or
push
cmp
jb
sbb
push
push
insb
cwtl
xor
movsb
dec
jge
xchg
push
ficompl
sbb
or
push
in
xchg
aad
stos
sti
out
sahf
xor
mov
sti
ja
mov
xchg
xchg
cmp
lahf
out
out
fs
arpl
jge
call
pop
and
enterw
stos
push
mov
imul
push
and
or
mov
xchg
mov
xchg
icebp
js
sub
je
or
pop
lods
in
inc
xchg
mov
adcb
sti
mov
in
int3
xchg
push
adc
jecxz
ret
add
sbb
mov
stos
je
adc
xlat
imulb
push
lcall
std
cmp
int3
mov
push
dec
les
fstpt
jo
xchg
push
mov
fiaddl
mov
pop
shlb
jnp
das
mov
inc
mov
sub
sbb
push
movsb
push
insb
push
ret
aaa
or
pop
or
das
jbe
std
lret
or
outsl
xchg
dec
mov
mov
add
or
je
repz
xor
adc
shlb
divb
mov
out
xor
mull
loope
sub
fdivrs
sub
mov
push
jmp
icebp
vprotb
mov
mov
lret
stos
mov
cmp
fwait
add
cmc
add
movsl
xchg
loope
jno
push
mov
sarl
xchg
aam
mov
sub
mov
inc
add
arpl
fwait
dec
and
jmp
lods
leave
mov
cmp
push
dec
cmpsb
sti
pop
fidivrs
mov
lret
das
jmp
xchg
sbb
sub
repnz
inc
xor
addb
iret
xchg
dec
add
add
aad
pop
mov
cmp
orl
and
jne
pop
inc
jmp
ljmp
xor
mov
dec
clc
sqrtps
ds
int
lret
negb
pop
push
xor
and
xor
sbb
leave
orl
scas
hlt
sbb
outsl
mov
cmp
jns
daa
and
add
sarl
cmp
iret
cmp
cmp
fstl
notl
mov
pop
jle
ja
cmp
cli
add
stos
jecxz
sbb
sti
mov
sbb
mov
xlat
rclb
test
lea
data16
lods
or
jl
aam
icebp
lcall
or
xchg
adc
inc
es
push
pop
lods
dec
test
inc
cmp
jl
cmpsb
or
sbb
aam
decb
insl
fisubs
inc
mov
mov
xor
ret
dec
xchg
dec
scas
popf
or
adc
je
add
ja
scas
mov
imul
aaa
mov
lret
inc
arpl
jecxz
push
in
jl
std
push
adc
add
dec
flds
daa
or
call
lahf
xor
jnp
out
cwtl
mov
rdpmc
fsubrp
pop
repnz
push
movsl
mov
lret
movsb
ror
mov
lock
negb
lret
in
sbb
mov
int
or
cs
fbld
adc
push
pop
adc
sbb
pushf
pop
mov
imul
jo
es
shrl
xor
repz
inc
cwtl
pop
punpckldq
pop
aaa
xor
xchg
ja
jne
add
mov
or
xor
inc
lods
pop
inc
mov
fwait
sub
mov
xor
jge
and
outsl
or
add
push
xchg
sti
pop
stc
cmp
push
pop
inc
xor
int3
movl
aad
inc
aam
imull
imul
shr
pusha
sahf
jae
add
out
int3
jle
in
jnp
mov
int
xchg
push
mov
add
dec
or
mov
adc
out
push
and
fstl
xor
push
inc
shl
aam
in
in
das
imul
pusha
sbb
cmp
popf
push
mov
mov
ljmp
or
mov
sub
jl
jne
sub
push
cltd
insb
push
push
push
xlat
loop
leave
pop
xlat
or
sahf
jle
jb
into
jge
mov
movsl
add
and
xchg
sbb
sub
rcrl
xchg
outsl
imul
cmpl
xchg
scas
fsubrs
and
movsb
cwtl
std
pop
dec
test
ret
mov
das
in
iret
enter
sbb
jecxz
dec
sbb
mov
xchg
push
popa
nop
sbb
stc
test
jno
xchg
dec
nop
push
jmp
aam
push
lret
ss
xor
test
push
loope
fnstcw
pop
jae
ret
es
cs
enter
xchg
xchg
cmpsl
ja
push
xchg
and
icebp
or
mov
push
cmpsl
xor
imulb
cmp
loop
mov
cltd
inc
mov
or
xor
stos
sub
mov
test
es
jne
jp
push
sub
push
scas
adc
outsl
jecxz
jae
mov
jg
outsl
mov
xchg
imul
xor
sub
popf
cmp
xorl
xor
add
fsubl
cltd
lret
sub
sbb
int
sbb
and
shrb
cmp
xchg
je
cmp
repz
hlt
js
xchg
and
js
in
xchg
sahf
dec
lea
popf
rcrl
out
in
js
push
stos
ret
xchg
push
add
daa
nop
iret
mov
mov
imul
mov
loopne
and
push
mov
das
insl
fistpl
ss
scas
imul
lea
adc
mov
in
cmp
mov
aad
fisttpl
ss
pop
push
adc
dec
fs
notb
rclb
iret
dec
out
fwait
dec
test
sbb
fidivl
imul
fildl
test
xor
cmp
jp
and
inc
ror
jbe
repz
jns
int3
mov
xchg
andl
mov
std
inc
decl
cmc
call
popf
xor
cmp
mov
xchg
xchg
push
je
or
nop
adc
mov
das
jnp
out
mov
cltd
imull
sbb
in
mov
fisubrl
shll
jb
cmpsl
stos
lahf
dec
push
xchg
das
jo
ljmp
mov
out
push
inc
enter
ljmp
mov
imul
es
mov
mov
inc
dec
dec
ret
sub
out
sub
sub
sub
add
in
and
adc
ja
or
orl
mov
jecxz
add
je
int
xchg
or
xchg
push
repz
sub
ja
xchg
fidivl
loopne
dec
aad
icebp
loop
addl
pop
daa
scas
mov
cmp
pop
push
and
loop
jno
adc
stos
hlt
push
jle
pushf
add
insl
shrl
icebp
sbb
mov
scas
hlt
iret
in
hlt
lea
or
adc
mov
ja
and
mov
pushf
scas
dec
sub
pop
and
and
pop
xchg
insl
dec
and
sti
frstor
push
loope
into
or
mov
ds
push
fs
and
stos
mov
inc
icebp
add
fistpl
push
lds
imul
sti
mov
and
adc
outsl
jle
add
rorb
ss
xchg
call
les
sub
cmp
sub
mov
cmpl
in
es
xor
scas
daa
cmpsl
mov
int
xchg
lahf
outsl
testl
pop
jg
stos
loop
cmp
int3
int
fwait
notb
js
jecxz
ficoml
imul
sub
xor
xor
mov
jmp
outsb
out
nop
add
pop
mov
adc
stc
shlb
pop
jle
xor
mov
bound
cmp
aam
lret
pop
adc
ret
push
mov
lahf
mov
movsl
mov
cmp
dec
pop
xor
adc
sub
vmptrld
pop
addr16
push
sbb
mov
mov
jbe
mov
mov
push
sub
loope
pop
lods
ret
cltd
rorl
das
int
mulb
insb
push
jnp
cmc
lret
jns
xor
lock
push
int
mov
dec
push
ja
jbe
test
pop
outsl
push
fadds
stos
jbe
dec
call
inc
jle
mov
js
ficompl
sti
scas
iret
jp
inc
fmull
cmp
jp
fwait
lahf
mov
mov
jle
out
add
cmp
and
inc
movsb
pop
inc
imul
add
and
pop
dec
cmc
out
fsubr
ja
pop
push
test
xchg
cs
loop
mov
sub
clc
clc
popf
mov
xor
cmpb
dec
leave
push
push
xor
arpl
arpl
pop
lret
xor
arpl
or
addr16
xor
adc
inc
push
mov
fdivl
xlat
popa
scas
add
push
scas
mov
cmpsl
sub
cmp
cli
push
scas
leave
in
repnz
outsb
lods
adc
sub
add
lcall
xchg
test
repz
mov
jnp
push
xor
jmp
faddp
mov
xor
mov
ficoms
rcrb
sbb
lret
inc
pop
lds
lret
or
xor
hlt
gs
mov
jmp
movsl
cmpsb
add
rcrl
mov
and
mov
jno
jnp
jo
into
popf
fldcw
or
cwtl
imul
das
pushf
jge
or
scas
mov
sbb
cmpl
insl
repnz
ret
mov
pop
xchg
jns
jnp
clc
movsl
shl
out
sbb
popa
mov
insb
inc
lret
lahf
shrl
cmp
jnp
mov
and
fsubrl
imul
mov
jnp
jecxz
adcb
inc
push
repz
dec
xchg
jge
sbb
mov
sahf
adc
jns
mov
repz
out
add
mov
sub
test
sti
fwait
scas
out
xor
inc
mov
loop
shrl
pushf
push
leave
lds
test
push
ror
sub
aam
sarl
sub
xchg
inc
jae
loopne
xor
addr16
js
mov
sub
addl
mov
mov
dec
push
loop
stos
in
sbb
xor
mov
add
pop
scas
and
cmc
lods
cmp
mov
and
sti
sbb
out
cmp
shl
mov
jmp
xchg
call
jno
mov
test
ror
aam
addr16
aaa
mov
in
insl
jecxz
mov
lods
inc
ret
sub
xlat
inc
mov
je
xchg
stc
in
enter
fadds
cmp
or
aad
add
fnstcw
popf
sub
aad
arpl
popf
loope
testl
popf
or
stos
test
sti
pop
aaa
sti
orb
or
xor
push
push
loop
fadd
int
xchg
sahf
dec
sub
sub
int
rorb
movsl
rorb
es
mov
cmp
jg
push
adc
push
popf
lea
or
xlat
outsb
dec
inc
stos
push
imull
das
xor
arpl
xchg
jno
jae
les
mov
xor
loop
dec
xor
movsl
int
rcrb
out
js
test
mov
imul
sub
loopne
mov
sub
test
stos
inc
cli
xor
lahf
in
push
movsb
sbb
and
loopne
cmp
xchg
fldcw
subl
test
imul
std
in
hlt
sub
dec
xchg
icebp
dec
test
in
cli
add
dec
mov
rclb
popa
push
sti
cvttps2pi
add
xor
ret
dec
adc
mov
lods
mov
mov
jecxz
jmp
jbe
bound
cwtl
adc
fucom
aas
lock
mov
sbb
mul
mov
sbb
pusha
outsb
ja
mov
xchg
mov
jle
out
jmp
into
cmp
cltd
orl
pop
pop
cmp
sbb
sub
pop
push
push
imul
fistl
adc
xchg
lea
push
scas
js
out
in
xadd
aaa
adc
cld
pop
jno,pn
mov
mov
lea
insl
xchg
mov
sbb
dec
ret
hlt
aas
loop
fs
out
jbe
into
cmpsb
mov
daa
fucomp
push
push
push
jne
cs
imul
out
mov
repnz
cmpsb
jo
imul
in
xchg
xor
xor
pop
ret
sarl
cmp
xor
insl
push
mov
mov
mov
jns
adc
int
pop
test
test
mov
sti
int3
mov
scas
add
inc
lret
adc
lret
xchg
les
and
into
push
inc
movsl
rolb
push
scas
daa
add
lods
mov
mov
ror
sbb
mov
rcrb
cmpsb
outsl
and
mov
fisubrl
in
mov
inc
repz
ret
dec
mov
mov
xor
xor
inc
fs
fidivrs
fcmovbe
mov
out
pop
movsl
negl
dec
in
dec
xchg
xchg
mov
addr16
pop
adcb
call
dec
scas
adc
push
jno,pn
in
das
popa
jle
shrl
pop
add
add
add
sub
mov
lods
xor
stc
lret
jmp
jg
repnz
push
ss
mov
loop
cmp
xchg
cmp
dec
pop
push
fnstsw
cmp
das
pop
into
jge
adc
and
fisubrs
je
xchg
mov
mov
xchg
xorl
sbb
or
andl
sti
ja
jb
jbe
out
push
mul
fnsave
loop
sbb
ja
adc
push
mov
lods
sahf
dec
ret
pop
stos
inc
cmp
call
test
xchg
aam
call
hlt
mov
in
notb
out
std
push
cmp
int
imul
test
jno
pop
lea
fcoms
fadd
test
xor
call
cs
rcll
cwtl
xchg
sub
xchg
jno
stos
ret
dec
cmovnp
in
out
add
cmp
repnz
pop
xor
jl
xor
les
stos
ret
fnstenv
and
push
jns
lcall
dec
inc
cltd
and
xor
jo
jecxz
jne
imul
mov
adc
add
mov
pop
mov
mov
push
inc
xchg
filds
pop
jo
std
int
cmp
jge
cmp
in
and
xor
and
shlb
inc
decb
pop
mov
cs
into
pusha
out
add
dec
das
test
mov
and
inc
push
cmp
or
pop
out
adc
stos
fstpl
jle
sub
fisubl
das
add
in
sub
repnz
out
lahf
mov
cs
and
roll
aam
lods
in
sub
xlat
mov
rorl
cwtl
mov
scas
mov
insb
mov
ds
cmpsl
mov
es
test
mov
mov
adcb
mov
pop
adc
xchg
sub
pop
repz
cmc
push
stos
lcall
je
iret
jmp
inc
ret
aad
lds
adcb
pop
sub
sbb
movzbl
pop
mov
fwait
nop
hlt
pop
xchg
inc
scas
mov
xchg
xor
inc
xchg
cmp
daa
les
test
testl
xor
push
pop
fisubrs
leave
enter
nop
cmp
pop
mov
dec
pop
inc
outsl
jg
mov
mov
cmpsl
outsb
push
and
cli
test
in
out
jae
sbb
in
push
ljmp
xchg
push
push
pushf
popa
lock
lods
testb
push
push
mov
xor
mov
pusha
jae
or
jo
cs
xchg
dec
mov
adc
scas
pushf
lret
add
mov
in
cli
out
add
xchg
xchg
adc
scas
sub
out
mov
pop
jo
inc
jmp
jp
inc
lods
rcrl
or
or
push
test
sahf
jnp
xlat
fcomp
enter
stc
loope
inc
js
out
xchg
add
lds
xchg
lcall
sahf
add
adc
sahf
out
std
push
pop
fsts
out
js
sar
shrl
inc
popf
mov
mov
je
xor
jp
dec
popa
mov
aam
or
mov
sub
inc
pop
jae
fs
test
xchg
lods
sbb
insl
xor
cmp
cmp
push
notb
inc
fisubrl
outsb
cwtl
scas
sbb
jle
cwtl
lret
mov
cltd
es
adc
imul
jbe
sbb
ja
push
cltd
aad
lcall
or
xchg
aam
cmc
jnp
out
inc
stos
into
movsl
imul
ret
mov
cmpsb
jmp
inc
sbb
push
pop
cwtl
mov
inc
jo
ja
pop
mov
inc
out
mov
faddl
shll
sbb
dec
sbb
fidivs
and
jne
sbb
sub
test
cmp
shrb
inc
xchg
out
jl
dec
lea
andl
mov
or
push
fisubrs
or
mov
sti
or
add
mov
data16
jmp
pop
lock
cltd
jae
ret
xchg
stos
jo
aam
cld
mov
test
push
pushf
cmp
stos
fdivr
in
out
adc
or
int
push
movsl
push
jmp
mov
jecxz
pop
push
loop
xchg
or
dec
cmp
or
sbb
adc
testb
add
inc
je
imul
mov
and
mov
mov
lret
in
inc
pop
jmp
imul
lret
mov
add
or
jmp
ss
mov
push
pop
les
or
loope
clc
shr
lcall
lret
sub
jno
inc
lret
cmp
inc
push
arpl
xchg
aam
mov
mov
or
mov
xchg
stos
push
add
sbb
jge
cltd
sbb
sbb
mov
pop
popa
push
xchg
xchg
dec
pop
inc
rcll
lds
sub
sub
cmp
and
xchg
mov
pop
idiv
add
mov
pop
xchg
adc
inc
int3
xor
jne
push
movsb
xchg
mov
sub
xchg
mov
adc
clc
cmp
repz
fdivl
cld
lods
shrl
xchg
stos
hlt
xchg
es
nop
jns
in
aam
jp
jb
js
int3
sbb
sub
sub
sbb
xor
mov
imul
add
mov
or
mov
xor
jnp
jg
xchg
mov
enter
popf
and
sbb
cmp
lret
mov
add
adc
adc
out
sbb
push
pop
sub
out
xor
in
popa
aam
xor
add
mov
xchg
inc
jo
scas
mov
es
jmp
gs
repnz
add
mov
popf
ss
ret
decb
xchg
mov
push
pop
sbb
rol
movl
cmc
lahf
pop
push
pop
lods
jae
ret
fdivrl
mov
rclb
mov
jnp
pop
ds
push
sbb
mov
ret
out
xor
xor
outsb
push
mov
sub
bound
mov
sahf
xor
fldt
mov
jno
mov
or
xchg
rcrl
stos
sub
mov
cmp
pop
sbb
mov
cmp
ficomps
mov
je
mov
das
pop
push
jne
mov
add
out
mov
mov
cltd
or
stos
sbb
and
fisttpll
lret
imul
lods
popa
mov
lcall
das
shll
pop
mov
daa
in
in
je
jo
aas
into
and
mov
int3
jmp
adc
xor
add
sub
lods
test
push
pop
sub
insl
or
fwait
mov
andb
aas
inc
in
or
xchg
sahf
mov
fidivrs
cmp
add
push
mov
stc
ficoms
jb
adc
fdivp
sub
mulb
pop
insb
jns
xchg
jnp
xchg
jnp
lds
xchg
inc
enter
inc
leave
jae
ss
fcmovnb
cli
add
adc
or
add
mov
lret
xor
push
test
mov
or
inc
jae
sarl
sub
es
out
scas
leave
je
xor
inc
sub
lcall
cltd
mov
and
and
loop
push
lcall
shll
std
pusha
add
inc
adc
out
jns
js
mov
loopne
mov
lea
and
lds
lods
aad
int
fisttpll
and
fisubrs
mov
outsb
lret
ficomps
mov
mov
xor
test
inc
mov
test
cmp
shrd
rcrl
cs
addr16
popf
jne,pn
data16
cmp
adc
dec
stos
dec
xchg
inc
xor
jbe
push
xchg
out
inc
dec
and
adc
mov
les
jmp
or
push
jge
jle
mov
jb
cmc
or
mov
adc
fldenv
flds
push
push
pop
je
cmp
mov
jne
test
cmc
in
dec
sub
sbb
push
or
mov
cmp
cvtps2pd
loope
xor
xor
cld
sub
push
test
push
dec
aaa
inc
lret
or
xlat
pop
aam
cmp
ret
out
outsb
lret
mov
int
jne
push
pop
cmp
into
xor
fwait
pop
sbb
lretw
sbb
cwtl
and
ror
push
cwtl
adc
fidivrs
dec
push
in
push
and
sub
sti
idivb
leave
jle
stos
shll
arpl
and
mov
inc
mov
cltd
aaa
cld
push
cmp
push
repz
push
in
sbb
rolb
call
les
push
test
pop
ss
pop
por
je
fwait
xlat
xchg
call
imul
sub
enter
push
fisubrl
fsubrl
lret
clc
daa
sbbl
test
clc
inc
hlt
sub
mov
hlt
dec
in
inc
or
jg
notl
pop
jno
xchg
aam
loope
xor
adc
lock
mov
add
pop
add
xchg
scas
add
sbb
popf
jge
in
sub
shll
or
xor
fstpt
in
pop
mov
mov
mov
lret
lods
adc
nop
xchg
repnz
in
out
imul
fldenv
jo
xor
mov
xor
insl
xchg
xor
fcoms
shrl
ret
movsb
mov
pushw
push
cmp
fs
push
cmp
xchg
push
and
push
add
inc
jp
push
lods
inc
inc
and
or
cli
dec
mov
mov
rcl
adc
pop
ret
nop
fsubr
xchg
jle
repz
cmp
sbb
dec
das
int3
mov
xor
sbb
subb
jecxz
int
push
cmp
nop
or
ret
jnp
pop
or
fisubs
orb
adc
int
out
inc
sbb
adc
lock
stos
mov
sub
sbb
out
and
fiadds
sub
adc
int3
or
in
popf
lahf
xor
push
add
lahf
test
imul
and
shll
sub
xlat
pop
stos
or
stos
sub
or
out
fisubrs
cmc
fstps
xchg
mov
push
cmp
jns
push
cs
bound
test
pop
sbb
jne
mov
sub
add
lods
jecxz
mov
and
mov
dec
cmpsl
xchg
cmp
cmp
cwtl
shlb
inc
enter
dec
push
sub
shl
push
mov
xlat
in
xlat
mov
ret
sub
inc
and
push
cmc
add
test
inc
out
push
outsb
jmp
cmp
jl
inc
pop
dec
mov
incb
es
ficompl
sbb
inc
push
mov
dec
or
mov
iret
in
mov
scas
clc
ja
jge
pop
fwait
inc
pop
data16
inc
sub
inc
js
fsubrs
decb
rorl
jl
mull
inc
adc
cmp
test
fwait
aas
push
mov
popa
cs
push
adc
ficomps
sti
or
jp
xor
pop
or
popa
adc
in
mov
test
ret
push
lea
dec
inc
stos
lds
test
xor
cmp
imul
jge
mov
jnp
fldcw
adc
ret
sti
push
mov
pop
and
xchg
cmp
ss
cmc
addr16
xchg
rorl
add
fdivrs
mov
inc
sbb
mov
and
dec
outsb
out
in
dec
mov
scas
mov
fidivs
adc
out
shr
add
inc
lret
push
cltd
es
adc
xchg
lds
jp
sbb
sub
xchg
cli
cli
inc
dec
xchg
jmp
out
in
mov
pop
push
mov
cltd
imul
je
sub
cmc
movb
xor
xchg
data16
fistpl
mov
mov
es
filds
enter
ds
lahf
mov
jp
inc
mov
aam
mov
les
pop
xchg
fistpl
mov
ficompl
adc
cltd
jo
lret
fbstp
add
push
cli
lock
xor
inc
lcall
adc
sub
cli
pop
jl
movsl
and
cmp
add
add
in
push
pop
push
leave
push
jno
sub
cmc
or
pop
dec
push
push
mov
ds
movsl
mov
ss
add
push
popf
xor
or
push
subl
or
mov
fisttpll
daa
mov
pop
pop
dec
cmpb
out
lcall
pop
arpl
lods
testl
lds
jbe
in
push
sbb
add
dec
or
and
mov
pop
jmp
mov
divb
lahf
test
test
je
in
repz
sar
sbb
ss
data16
rolb
add
or
adc
in
add
lret
and
lock
lods
or
ret
inc
lret
pop
or
push
popa
lods
mov
cld
daa
repz
ja
ljmp
fsubrs
call
das
pop
sub
mov
leave
pop
push
call
dec
dec
xchg
es
mov
pop
ret
mov
testb
lret
jp
iret
test
fwait
jne
daa
lds
mov
movsb
pop
lods
clc
sub
mov
push
insl
jg
inc
push
nop
jnp
ret
inc
test
or
push
adc
or
sub
push
jns
ret
orb
sub
cmpsb
test
jle
into
xchg
repz
push
dec
xchg
rcrl
inc
repnz
push
xor
xor
in
fcoml
ret
popf
mov
in
inc
jns
jp
mov
jbe
rcrb
mov
popf
push
pop
cltd
int
insl
leave
sahf
xchg
daa
pop
faddp
sub
mov
mov
xchg
mov
add
lea
add
push
cmp
or
xchg
xchg
jle
repz
push
mov
clc
push
adc
xchg
push
dec
pop
outsl
jl
out
mov
lea
push
ja
xor
cmp
imull
adc
mov
arpl
mov
mov
push
sub
clc
clc
out
dec
clc
ret
or
gs
push
or
mov
mov
sub
adc
pop
push
mov
or
das
mov
movb
iret
jp
push
xchg
sub
outsb
int3
cld
mov
iret
add
adc
dec
into
jmp
lods
out
xor
dec
imul
fs
movsl
jb
mov
jge
cmp
mov
xor
gs
lret
mov
add
sub
xchg
popa
and
cwtl
mov
and
pop
les
shlb
movsb
xchg
pop
cli
mov
add
enter
pop
insb
testb
add
push
pop
inc
lds
movsb
dec
jo
filds
and
xor
mov
or
inc
ja
dec
inc
xor
mov
push
sub
xor
data16
xchg
adc
inc
out
dec
jbe
lahf
das
pop
mov
ja
push
loopne
push
std
dec
dec
jne
sahf
mov
sbbl
sub
fs
inc
leave
or
sub
push
das
xor
daa
repnz
mulb
cmp
or
xor
outsb
sbb
shl
dec
pminsw
add
int
push
dec
cmp
mov
jmp
sbb
stc
xor
sub
sub
or
outsb
jae
out
jnp
fiadds
pop
mov
inc
ret
lock
outsl
rorl
pop
in
jnp
rcl
out
or
aad
int
fsubr
mov
mov
int
dec
jp
cmp
mov
outsl
in
mov
call
or
xchg
sub
aas
sahf
into
xchg
xorb
inc
xchg
popf
sarb
sbb
mov
addb
bound
xchg
into
mov
jne
loop
sub
inc
push
and
sub
adcl
dec
dec
push
call
cmp
push
int3
dec
insb
gs
mov
mov
std
cli
sarl
repz
mov
xorb
sub
xchg
cwtl
jecxz
or
cmp
push
mov
jle
cmp
add
imul
push
xor
test
push
nop
adc
pushf
outsb
dec
aad
xor
push
push
adc
and
add
xlat
lahf
shl
daa
lret
daa
into
push
sbb
pop
mov
xchg
int3
cmc
add
xchg
xchg
mov
push
mov
and
arpl
inc
inc
outsb
dec
dec
dec
mov
push
jg
pop
dec
mov
iret
add
nop
clc
or
mov
pop
out
xchg
xchg
dec
jno
test
cmp
pop
mov
inc
out
jns
adc
aam
jno
xor
xchg
sahf
arpl
mov
xor
inc
inc
xchg
inc
iret
test
shl
jmp
mov
decb
cmp
xor
ja
popf
into
popl
mov
jl
xchg
jno
inc
fisubl
mov
scas
add
adc
ss
push
mov
jmp
fwait
or
mov
push
jne
adc
add
add
mov
sub
insl
xchg
sbbb
jg
jge
jae
mov
dec
mov
jns
cmpsb
fdiv
sbb
pop
popf
icebp
in
push
test
push
leave
outsb
cmpsl
sti
fcomps
xchg
stos
push
addr16
fisttpll
cmp
popf
aas
push
lret
scas
adc
mov
insl
ds
test
cmp
cmp
in
sub
dec
or
fwait
shr
ds
add
out
xchg
repz
jnp
repz
stos
arpl
orl
out
fcmovnb
in
jge
addb
cmp
sbb
adc
loopne
sbb
jno
mov
ror
pop
ret
xor
push
pop
test
scas
jbe
jnp
xor
add
push
iret
aam
and
fiadds
out
cmp
arpl
je
bound
loope
out
mov
mov
push
add
xor
xchg
or
icebp
out
stc
adc
xchg
in
mov
xchg
and
cmp
outsl
push
adc
sbb
stos
insb
sti
pusha
loop
es
sub
mov
das
xor
shll
shll
dec
orl
inc
in
pop
jae
or
nop
cmpsl
push
push
out
inc
mov
test
add
stc
mov
pop
mov
jae
out
rcll
lock
add
push
bound
mulb
popa
movsb
hlt
push
sub
test
mov
int
ficompl
imul
imul
mov
push
cmp
inc
mov
nop
mov
cmp
sbb
ret
xchg
inc
popf
gs
or
test
cmp
movb
insb
and
cwtl
dec
jg
jmp
sbb
leave
xchg
mov
outsl
stos
sbb
pop
subb
mov
xlat
xchg
inc
add
adc
es
add
sbb
jmp
jecxz
mov
mov
cmp
outsl
cltd
xchg
daa
pop
loop
adc
hlt
stos
leave
inc
sbb
dec
push
xchg
ljmp
adc
xchg
fmuls
xlat
xchg
and
aad
xor
xor
xchg
mov
imul
test
arpl
pushf
sub
jns
or
push
jge
mov
cmp
add
jb
std
out
mov
lret
xlat
mov
loopne
shl
xchg
and
cmp
jns
jge
add
inc
sbb
aaa
in
mov
stc
cmp
cmpsl
in
add
in
inc
out
sbb
int
push
cmp
and
mov
push
std
arpl
xor
pop
add
dec
jbe
inc
cmp
dec
les
and
into
cmp
lods
shll
sahf
dec
lea
js
test
jno
cwtl
or
inc
out
and
fdivs
sbb
xor
or
insl
cmp
aad
subb
jle
pop
fsubr
inc
ljmp
and
cmp
or
sbb
ds
push
subb
clc
es
imul
ja
mov
mov
lods
aam
push
nop
add
mov
jbe
lods
push
dec
jbe
scas
mov
pusha
pop
out
jg
sahf
push
out
sub
push
add
dec
cs
xor
es
aaa
dec
je
or
inc
push
inc
adc
or
cwtl
push
insb
xor
push
sub
add
in
mov
je
insb
cmp
repnz
imul
inc
fisubrs
mov
xchg
push
imul
mov
sub
lock
xchg
cmp
sbb
inc
adc
dec
xor
bound
adc
jl
lods
add
push
dec
sbb
jbe
fucom
fwait
xor
mov
cmp
sahf
cmovnp
fwait
inc
cmp
loope
sub
roll
jp
inc
movsb
lods
mov
popa
xor
and
inc
jmp
lret
pushf
outsl
imul
repz
lods
arpl
int3
loope
test
aad
test
cmp
xchg
push
inc
das
xchg
insb
out
sbb
jb
mov
cmp
loopne
jp
aam
push
pusha
fsubs
pushf
or
jg
xor
data16
cmp
adc
scas
shlb
cltd
sub
divl
inc
mov
test
stos
mov
leave
aam
sbb
cmp
add
cmpsl
leave
imul
push
nop
rcrb
cmp
jmp
fdivrl
jb
mov
jle
lret
lods
ja
inc
adc
fidivrs
dec
sub
xor
aad
cld
pop
or
and
jg
mov
stc
cli
add
jl
int
sub
int
sbb
xchg
mov
push
and
ret
sbb
fcomi
cmp
fisubl
iret
push
dec
jo
es
movsl
mov
inc
sub
sub
mov
inc
mov
cmp
mov
cmpsl
jecxz
fcmovbe
push
test
stc
orb
fxch
inc
fists
hlt
sbb
lea
mov
daa
aam
and
leave
pop
hlt
ss
addr16
pop
lcall
pop
adc
xor
mov
movsb
mov
mov
mov
ret
and
jecxz
mov
mov
xchg
or
out
in
mov
fnstsw
cmp
call
sub
jg
ss
dec
mov
mov
jmp
mov
dec
into
scas
jge
xchg
imul
xchg
test
test
rol
jg
sarl
or
cmpsb
add
in
mov
xor
mov
push
cwtl
adc
push
mov
jnp
push
or
shr
cmp
mov
icebp
loopne
in
inc
shll
lods
mov
arpl
aad
push
pushf
js
lods
mov
xchg
insl
mov
mov
stos
popa
push
mov
inc
lods
scas
sarb
mov
rep
movsb
loop
addr16
xchg
sub
mov
jge
mov
scas
fidivrl
lahf
jle
popw
jnp
mov
insb
push
daa
sahf
or
pushf
js
sbb
lcall
sar
sbb
out
imul
ss
std
and
out
and
cs
cmp
loopne
mov
into
inc
cmpsl
dec
push
xor
add
or
shlb
paddusb
ret
imul
pop
dec
ret
pop
adc
sti
cmp
rcr
pop
mov
das
xchg
push
jne
push
arpl
fdivrl
mov
push
push
leave
xor
scas
arpl
jp
jmp
pop
aaa
xor
pop
scas
aas
test
std
in
enter
push
aam
push
dec
jns
mov
fimuls
rcr
sbb
and
in
sahf
lahf
outsb
xor
out
pop
push
je
dec
test
jne
mul
std
clc
dec
fiadds
adc
mov
sbb
sub
mov
push
jae
lock
pusha
xor
fstpt
cltd
cld
or
or
cs
push
adc
push
in
jle
push
mov
dec
out
jl
mov
jnp
popf
xor
iret
push
cmpl
mov
aad
xchg
mov
xor
cmp
dec
jmp
pusha
testl
xchg
sub
js
inc
cmp
add
mov
mov
jp
adc
imul
enter
jge
sbbl
mov
jge
in
mov
push
andb
add
inc
cwtl
loope
xchg
test
mov
inc
not
fs
fnstcw
pop
test
cwtl
adc
lea
mov
daa
xchg
lret
mov
and
push
enter
mov
add
addr16
test
ja
adc
jg
enter
imul
adc
pushf
je
inc
mov
ss
in
pop
out
adc
andb
adc
jmp
xor
or
test
loop
and
out
pushf
addr16
cmp
insb
fisubl
aas
sbb
rcl
push
and
imul
inc
and
mov
mov
or
call
loope
add
mov
push
rcll
inc
aaa
inc
loope
fwait
jbe
pop
js
mov
push
pop
mov
negl
ret
pop
cmc
test
das
dec
or
ret
sub
jmp
cmp
xor
jl
push
mov
jmp
xchg
adc
fwait
adc
jns
outsl
push
mov
add
mov
rolb
xor
btr
push
push
divb
sub
fisubrs
and
xchg
push
push
or
sub
aam
outsl
cmpsb
rclb
mov
out
pop
and
inc
sbb
mov
testb
jge
jecxz
inc
xchg
repnz
inc
stos
mov
adc
cmpsl
pusha
push
divb
out
idivb
xchg
sbb
jbe
int3
fmul
inc
dec
adc
int
mov
clc
aam
cmp
and
test
inc
pop
jecxz
xor
lods
push
cmpsl
arpl
mov
and
jmp
adc
popf
pop
adc
in
mov
bound
stos
cmp
imul
not
mov
call
dec
and
mov
lahf
xchg
xchg
aam
pop
mov
aam
in
daa
lahf
cmp
es
fsts
pop
stc
cmp
pop
xchg
mov
cld
jbe
add
xchg
mov
cmp
pop
jns
cmp
mov
push
fiadds
inc
sbb
adc
cmpsb
add
popa
jae
lods
fdivl
push
int
repnz
mov
addr16
ficomps
mov
push
popa
jle
clc
or
insb
cs
out
je
out
sub
mov
jg
jmp
xor
add
pop
fmulp
adc
fbld
push
jmp
and
jle
mov
jbe
or
and
enter
es
mov
add
mov
push
mov
mov
mov
jmp
insb
es
push
xchg
fisttps
xchg
loopne
in
rcl
xor
ljmp
cmp
mov
mov
xchg
gs
dec
inc
lods
test
or
adc
sbb
leave
and
inc
cld
outsl
add
roll
push
jae
mov
stos
shl
outsb
add
dec
fmuls
pop
xor
and
aad
xlat
imul
out
jge
add
dec
test
lret
sbb
xor
shl
enter
std
mov
pop
ror
into
test
xor
inc
shll
out
shlb
sub
es
push
outsl
mov
xlat
sarl
xor
loop
data16
int3
cmp
adc
adc
mov
inc
mov
push
loop
test
jl
lods
cld
pop
pop
jge
add
and
lret
fdivl
clc
lret
dec
test
pop
das
xlat
test
mov
mov
fisttpl
sbb
shrb
inc
xchg
es
fbstp
data16
xor
fisubl
dec
cmc
or
mov
sti
dec
in
push
dec
mov
xchg
add
mov
scas
mov
mov
repz
lcall
pushf
cmp
push
cwtl
mov
xorb
iret
xchg
inc
pop
stos
mov
aaa
lcall
sbb
and
dec
lock
in
shll
mov
inc
mov
sub
push
inc
dec
push
mov
iret
ja
ss
repz
adc
arpl
scas
rcrl
cmp
sub
in
xchg
xchg
dec
enter
rolb
mov
sbb
pop
divps
sbb
pop
sbb
jbe
ss
dec
pop
dec
xchg
aaa
jnp
cmc
jae,pn
popl
dec
sahf
sahf
rorl
pusha
cmp
std
pop
ljmp
stc
mov
stc
cmpsl
daa
out
fwait
xor
rclb
dec
nop
adc
in
push
adc
ljmp
sbb
inc
fneni(8087
popf
xchg
jecxz
sbbb
xor
dec
inc
push
and
dec
mov
daa
jmp
hlt
das
jmp
mov
int
cmc
pop
fcomip
mov
fwait
iret
hlt
scas
jle
or
xor
das
sub
sub
jle
repz
mov
add
adc
adcl
fnstcw
aas
lds
inc
xchg
push
leave
sbb
sub
hlt
adc
les
fucomp
aas
mov
push
subb
jns
es
xor
cmc
jne
mov
mov
ja
aas
pop
aaa
mov
mov
inc
jge
pop
dec
jno
add
inc
std
or
fldenv
rcrb
sbb
lret
mov
out
sub
sbb
jb
subl
out
bound
shll
cmp
jae
sbb
mov
push
cmp
loop
or
aaa
stc
xchg
cld
push
pop
int3
das
xchg
pop
xchg
mov
leave
xor
adc
adc
test
out
ss
pop
mov
movsl
roll
sub
xchg
xchg
inc
icebp
lock
imul
sarl
popf
push
repnz
mov
adc
rorl
cmpsb
jecxz
insl
pop
sub
pop
adcl
das
lds
repz
aaa
out
pop
mov
add
mov
push
sbb
pusha
or
dec
insl
dec
pop
sbb
xchg
fdivl
cmp
enter
int3
imul
movsb
mov
push
repz
mov
negl
mov
insl
xor
ljmp
mov
leave
xor
xchg
xor
jae
push
es
stc
test
inc
and
cli
movsb
xchg
xor
xchg
int3
pop
test
mov
xchg
sub
pop
and
lahf
sub
aad
push
fisttpl
stos
stos
fmulp
mov
lret
lock
pushf
daa
imul
pop
adc
pop
gs
lods
fisubrl
lahf
adc
and
xor
lods
loopne
cmpsb
push
ds
ja
cs
insb
adcl
and
mov
jl
sbb
fdivs
add
inc
push
xchg
pop
aaa
jl
xor
xor
pop
pop
pop
cmp
fistps
lret
in
push
loop
jb
loope
xor
popa
inc
inc
dec
jmp
enter
mov
add
lret
mov
addl
cmp
push
cmp
pop
xchg
cmp
dec
jo
add
sub
adc
or
mov
adc
or
iret
jbe
cmp
icebp
leave
out
sbb
rolb
mov
mov
push
aam
jge
dec
pop
inc
lcall
jno
jge
stos
das
incb
inc
repnz
push
mov
popl
add
and
pop
cmp
xlat
out
into
mov
iret
inc
cmpsl
scas
cltd
dec
out
fimull
sbb
stos
inc
mov
in
cwtl
repz
inc
jne
inc
push
lods
ss
aam
push
prefetchwt1
rclb
int
enter
hlt
push
jae
ss
jecxz
cmp
pop
push
mov
mov
sbb
mov
clc
stc
loop
adc
shl
push
int3
push
cmp
cmc
aas
leave
shl
cmp
in
inc
ja
leave
xor
inc
lock
inc
addl
mov
and
pop
outsl
mov
add
jecxz
xchg
mov
rolb
cmp
aaa
push
shll
faddp
or
leave
cwtl
mov
inc
or
test
movsl
dec
icebp
lods
notl
adc
xchg
shl
adc
mov
ds
outsl
dec
dec
sbb
adc
int
sub
sarb
shll
test
fiaddl
rclb
inc
mov
fcoml
jle
and
adc
push
lods
scas
enter
nop
in
xchg
cli
jecxz
adc
dec
mov
dec
mov
fidivl
fstpl
sti
mov
ret
inc
jns
jp
mov
inc
imul
cld
aaa
dec
jne
jnp
jmp
aaa
xchg
lret
std
mov
les
push
ror
push
iret
adc
inc
jbe
push
jbe
int3
icebp
ss
sub
sha1msg2
fs
dec
xor
jle
cmp
push
stos
mov
xchg
daa
mov
or
pop
sub
aam
inc
jbe
pop
repz
and
pop
sbbb
jns
cld
hlt
inc
jb
push
dec
inc
lock
adc
out
xor
sti
data16
xchg
les
jb
into
add
jae
xor
xchg
push
adc
aam
sbb
daa
jmp
xor
into
insb
repz
mov
test
pushf
xchg
xchg
mov
pop
or
pop
adc
int3
or
inc
inc
mov
push
sbb
pushf
iret
adc
adc
adc
mov
ja
jmp
jae
mov
dec
cld
push
ss
push
adc
les
repz
jnp
pop
mov
cmp
aad
mov
sbb
or
cmpsb
rdmsr
jmp
scas
iret
mov
sub
fisubrl
mov
sub
addr16
aam
das
mov
mov
ljmp
mov
ss
shll
xchg
adc
xor
arpl
cld
out
and
int3
jl
add
fldt
enter
es
jg
push
mov
ret
mov
sbb
xchg
mov
dec
cmpl
aaa
xchg
jns
sbb
sbb
leave
cmp
movsb
xlat
jbe
xchg
sahf
cmc
dec
xchg
mov
adc
jg
push
addr16
add
movsl
bound
das
shrl
lods
xchg
outsl
inc
call
jp
dec
js
testb
mov
xchg
add
repz
sbb
dec
scas
pop
iret
inc
push
and
pop
sarb
stos
cltd
shrb
add
xchg
jnp
std
lahf
push
add
gs
add
loopne
pop
inc
jecxz
fistpl
xor
inc
inc
mov
cmp
adc
pushl
pop
pop
push
adc
and
ja
test
mov
popf
in
mov
rcll
lock
loope
sbb
cs
mov
mov
fidivs
std
inc
mov
sub
adc
lahf
in
roll
pop
xchg
and
mov
sbb
pop
mov
dec
test
push
inc
ds
testl
in
es
popf
mov
pop
lds
jo
andl
or
test
sub
xor
add
push
lret
aas
adc
sub
cmp
leave
jnp
arpl
xlat
adc
cmp
bnd
fmull
xchg
jo
test
in
push
xor
jne
inc
enter
dec
mov
es
adc
add
mov
push
cmpsb
or
mov
adc
movsb
xor
mov
loopne
je
dec
xchg
add
sub
stos
imul
dec
mov
push
jmp
dec
mov
cld
aam
xchg
inc
mov
ret
andb
es
adc
into
test
adc
test
pop
add
ss
pop
add
lret
dec
dec
popf
nop
insb
lcall
in
and
sub
push
hlt
or
adc
aas
jb
vfrczsd
out
pop
lret
pop
jnp
lods
and
ret
data16
cmp
fs
sub
or
out
fnsave
xor
pop
inc
sbb
mov
mov
add
mov
push
out
mov
das
orb
xchg
std
pop
pop
push
mov
cmp
call
inc
mov
jle
pop
repz
xorl
push
add
jecxz
ret
xchg
add
adc
lcall
mov
pop
cmpsb
mov
mov
adcb
lret
out
icebp
imul
insl
shlb
xor
insl
mov
lock
ret
ficompl
add
leave
ss
cmp
lahf
push
cmc
loop
ret
push
imul
daa
jbe
pop
je
in
xor
insb
call
inc
pop
xchg
mov
mov
push
cmp
in
mov
pusha
xor
xchg
pop
hlt
imul
xor
xorl
cwtl
andb
out
push
cmpb
sar
adc
push
insl
mov
cmp
pushf
add
outsl
mov
add
les
cmp
sub
inc
mov
mov
xchg
mov
jnp
insb
loopne
add
sti
xor
imul
cld
push
mov
inc
jg
push
jmp
andl
sti
ds
adc
or
rcll
addr16
gs
or
xlat
add
outsl
fisubl
pop
jecxz
sarl
cmpsl
push
sub
pop
xchg
imul
pop
int
jae
pushf
pushf
jmp
add
push
cmp
mov
mov
mov
adc
xchg
lcall
and
sub
dec
pop
or
das
cmpl
cmc
or
insl
push
adc
ss
ret
mov
aam
dec
lea
shll
jne
adc
leave
cmp
sahf
xor
add
adc
jo
in
inc
xor
aas
push
xchg
mul
adcl
mov
adc
inc
push
or
xchg
xchg
mov
mov
test
pop
mov
push
pop
mov
je
faddl
add
xchg
sub
enter
dec
pop
aas
aas
into
lods
push
insb
lock
pop
xorb
in
push
mov
aaa
cmpsl
and
ror
js
or
push
cld
fadds
or
push
xor
and
inc
loope
jecxz
dec
push
lea
roll
iret
sahf
push
inc
mov
mov
shlb
sub
cmp
cmp
mov
pop
out
mov
aam
xchg
repnz
gs
fdivs
jmp
push
xchg
leave
out
inc
fwait
xor
daa
bound
aaa
sarl
or
jo
push
or
and
in
outsb
scas
stos
dec
push
mov
jo
cmc
mov
mov
push
lar
mov
xor
mov
lods
arpl
cmp
pop
push
mov
jno
jle
imul
cmp
dec
sub
scas
addr16
push
mov
cmpsb
xlat
mov
das
fnsave
pop
lods
js
bound
xor
jecxz
outsl
xchg
pop
icebp
notb
cld
cmp
inc
jno
sbbl
imul
add
jmp
push
icebp
fimuls
xor
les
mov
test
cli
dec
into
push
aas
push
pop
lds
mov
adc
outsl
std
je
stos
mov
ds
xchg
inc
or
sahf
jnp
test
add
sbb
aam
std
icebp
sub
call
test
pop
clc
jp
xchg
adc
out
mov
sti
fwait
sbb
hlt
mov
pextrw
fs
xchg
das
pop
jbe
cmp
mov
shlb
push
push
inc
pushf
dec
std
push
mov
les
pop
pop
push
lretw
jg
xchg
lock
sub
and
xchg
push
int3
pop
cmp
sbb
in
loop
out
loopne
sbb
inc
cmp
adc
ret
xchg
es
mov
push
gs
std
repnz
mov
xchg
xchg
sbb
adc
lods
add
pop
mov
loope
scas
aam
add
fwait
mov
and
popaw
xchg
inc
pop
enter
adc
push
lahf
rcrl
sub
std
jo
xchg
jno
or
popf
mov
xorl
shlb
push
jg
ljmp
xchg
lahf
sbb
pop
lods
jns
out
xor
iret
lret
sub
push
fwait
iret
fldcw
lods
cmpsl
fcmovnb
push
adc
sbb
sbb
fidivl
mov
mov
pop
push
cmp
orb
jp,pn
les
iret
xor
xchg
and
mov
pop
push
mov
push
mov
shl
shlb
jge
sub
mov
pop
subb
sti
add
rorb
cltd
jnp
sub
test
jo
xlat
cltd
pop
push
stos
pop
cmp
cmp
mov
cld
test
cmp
leave
scas
jl
push
xchg
std
xchg
inc
insb
lret
dec
lahf
scas
dec
dec
mov
sub
int3
dec
mov
int3
inc
xor
int3
ret
lret
dec
add
jmp
out
inc
enter
sub
and
cs
pop
pop
pop
addr16
sbb
cmp
or
fidivl
push
add
cmp
or
mov
popa
adc
das
movsl
sbb
dec
adc
ret
mov
cmp
test
cmpsb
sbb
fistps
mov
rorl
xchg
loopne
lcall
or
outsb
sbb
ret
push
xchg
mov
dec
jge
js
shlb
and
xchg
mov
repz
xor
out
and
cmp
leave
jns
movsl
daa
call
negl
sbb
test
or
jno
js
add
or
pop
sbb
cmp
in
push
cwtl
dec
push
jbe
sti
cmp
cmp
jno
je
addr16
aam
movsb
push
adc
mov
inc
lds
dec
mov
fs
pop
fucomp
mov
lcall
mov
sub
out
bswap
lret
movsb
xor
fadds
xchg
xlat
mov
mov
and
xchg
mov
in
push
mov
movsl
push
out
inc
inc
or
jnp
xchg
cltd
cmp
in
xchg
cmp
rdmsr
xchg
shll
pop
lret
and
sahf
mull
sub
xor
arpl
in
xchg
xorl
test
and
out
inc
lret
setne
imul
adc
sbb
and
fmulp
and
fwait
dec
fcmovbe
mov
inc
js
and
subb
in
aaa
mov
dec
fbld
lcall
pusha
int3
mov
jge
addr16
inc
loope
scas
mov
mov
push
sub
js
cmp
inc
pop
das
int
inc
es
mov
jge
fmul
sub
lret
rep
push
adc
int3
sub
mov
sbb
fisubs
jmp
xchg
push
add
add
in
xor
cmp
fs
push
leave
loop
pop
insl
jmp
add
popf
xchg
mov
sarb
mov
mov
pop
mov
lcall
xor
xchg
cli
js
divl
xchg
stos
pop
subb
sbb
roll
dec
pop
cs
mov
jg
jno
mov
hlt
inc
ljmp
pop
stos
jmp
push
insl
lret
cmp
jmp
les
popa
dec
jle
and
cltd
mov
ret
stos
scas
pop
jbe
and
sub
fistpll
lods
fdivrs
repnz
mov
movsb
add
or
icebp
in
lods
scas
in
xlat
inc
push
add
xor
stos
jne
mov
dec
lret
fisubl
add
jg
das
mov
stos
xchg
sti
cmp
fdivr
aam
push
fists
mov
push
js
lea
pop
dec
jp
jmp
mov
cwtl
scas
fdivrl
jecxz
mulb
xor
fld
addb
push
addr16
mov
dec
dec
icebp
int
add
sub
stc
imul
pop
xor
daa
inc
jns
cmp
cmp
adc
outsb
sbb
test
mov
jnp
push
push
adc
xchg
xchg
pop
xor
add
jne
add
ss
das
sarb
mov
pop
sub
push
lret
scas
or
scas
push
mov
mov
lds
inc
lock
sub
shrl
xor
pop
xor
push
scas
inc
call
push
aam
cmp
and
dec
xor
test
add
aas
fisubs
pop
mov
add
jle
ljmp
out
xchg
call
in
inc
aam
jae
pushl
xor
lcall
shr
test
fstpl
xor
fistps
push
and
test
dec
outsb
cmp
bound
mov
lret
mov
in
test
out
mov
fldenv
lcall
in
sbb
movsb
mov
sub
pop
dec
fstps
sub
popf
test
xor
lea
push
insl
add
std
mov
cmp
xchg
pusha
lock
clc
dec
popl
dec
leave
inc
xor
jg
cs
xchg
ret
inc
xlat
push
jae
stos
cmp
pop
mov
xor
mov
mov
adc
inc
jnp
or
jns
jle
nop
test
fisubs
jle
sbb
das
ficompl
pushl
dec
fs
arpl
aaa
mov
std
arpl
jecxz
jae
mov
out
pop
pop
pop
xor
mov
sub
test
stos
pop
and
int
fnstenv
mov
loope
adc
and
mov
in
sub
add
xorl
xor
jns
std
std
in
scas
xor
imul
mulb
dec
mov
fbstp
sbb
sbb
cmp
mov
mov
push
mov
and
jnp
daa
iret
add
push
jp
jp
inc
fisubs
inc
or
addl
into
ret
mov
imul
jbe
test
xor
jp
orb
gs
add
mov
sub
shlb
sub
dec
mov
push
cwtl
xor
imul
and
addr16
mov
fiaddl
bound
xchg
xchg
add
or
pop
jno
sbb
inc
mov
popa
call
dec
jb
shrl
leave
and
and
das
ret
mov
pusha
mov
cmp
enter
jg
add
sub
rcr
in
push
lcall
mov
jge
leave
shr
cmp
ja
sub
cltd
cli
xchg
xchg
dec
pop
xchg
push
dec
hlt
ds
fldt
test
lock
mov
fsubl
js
xchg
fldt
adc
mov
movsl
mov
mov
mov
push
inc
popf
sbb
pop
std
inc
dec
sbb
fs
in
adcl
shll
out
clc
adc
pop
mov
inc
adcl
cli
sub
rcll
mov
scas
das
jecxz
and
mov
dec
mov
sbb
js
and
scas
push
movsb
call
ja
cld
mov
int3
cmc
ss
cmc
jne
adc
lret
push
imul
fwait
mov
inc
mov
mov
inc
dec
push
into
insb
push
mov
push
movsb
out
sarb
loope
mov
adc
xchg
je
push
mov
lret
pop
dec
pop
js
adc
adcl
fildll
xchg
mov
daa
adc
jmp
xchg
rcl
addb
in
in
pusha
outsb
or
cmp
add
scas
xchg
sub
shufps
lahf
repnz
sbb
mov
stos
push
jae
ds
lds
or
daa
add
rorb
addr16
cmp
push
pop
test
sbb
daa
sahf
pop
pop
addb
cltd
sar
mov
insl
xlat
outsl
movsl
imul
ror
mov
es
xor
ljmp
xchg
out
in
add
ss
mov
dec
fs
insb
std
push
bound
das
sarb
out
cltd
push
iret
xor
mov
adc
inc
jge
in
fstpl
or
or
lea
lcall
pop
push
mov
and
push
pushf
add
scas
bound
fnstenv
pop
cwtl
imul
pop
arpl
push
xchg
stc
punpckhbw
xchg
data16
sub
addr16
mov
imul
jecxz
out
fldcw
test
inc
test
ficomps
sbb
push
mov
fdivl
mov
cmpb
cmp
xor
inc
aam
fisubrs
pushf
and
lods
in
push
dec
ret
into
aaa
mov
inc
outsl
xor
push
scas
rcr
in
not
idivl
dec
fnsave
xlat
push
cmp
jb
test
push
cli
mov
inc
sub
nop
pop
fstpt
std
pop
imul
jge
lods
stos
inc
fucomip
ret
sub
pop
fsubl
inc
mov
imul
add
call
push
xchg
adcb
in
gs
mov
xchg
pop
xor
cmp
push
mov
mov
sub
pop
insb
inc
mov
cmc
inc
mov
daa
notb
push
pop
mov
inc
mov
push
pushf
mov
jno
into
xchg
sbbb
lahf
push
pop
fcmovnu
mov
or
cltd
adc
scas
scas
outsb
sub
fidivs
xor
out
scas
ss
popf
ds
sbb
jp
jecxz
sbb
mov
loop
mov
bt
sti
inc
fnstsw
sbb
incl
pop
mov
cs
xchg
lret
les
ret
addr16
fmulp
xchg
mov
push
push
mov
dec
test
ret
jb
mov
pop
insb
sub
inc
push
xchg
jnp
bound
icebp
mov
adc
jge,pt
mov
scas
mov
stos
xchg
cmp
sbb
aad
inc
cmp
sub
xor
lods
cli
jmp
xor
add
bound
pushf
ret
cmp
jne
test
fmuls
mov
out
dec
dec
pushf
pop
jg
dec
jbe
mov
ret
jb
add
lods
shll
scas
and
adc
dec
frstor
xchg
lret
pop
cmp
out
mov
mov
push
cwtl
cli
lret
ficompl
sbb
lds
cltd
imull
mov
xchg
lret
out
push
xor
inc
sbb
inc
mov
xor
push
mov
orb
push
sbb
push
xor
mov
filds
aas
les
add
cwtl
adc
popf
dec
jmp
mov
pop
leave
notl
inc
dec
neg
dec
xchg
mov
jle
dec
int
leave
es
dec
repnz
cmp
loop
lock
or
sahf
push
shlb
ret
repnz
loop
ss
jecxz
and
xor
std
mov
pop
ja
xor
push
leave
in
xchg
sbb
fcoml
iret
hlt
es
sub
push
clc
sbb
nop
popf
jl
sti
push
push
xlat
jg
ss
lgs
fwait
orb
inc
xchg
ja
imul
lret
shlb
addl
ficomps
pop
pop
pusha
cmp
jecxz
cld
jg
shr
rolb
mov
add
mov
imul
xchg
mov
ljmp
sbb
jp
mov
inc
xchg
mov
add
mov
sub
shrb
fdivs
lret
push
ret
mov
jg
hlt
out
xchg
inc
rorb
outsl
sub
adc
jge
xor
push
inc
notl
rorb
jp
xchg
sbbl
cmp
repnz
xorb
in
in
sarl
fisubs
sti
mov
inc
pop
jb
fmul
push
push
xor
aaa
scas
mov
jb,pn
cmpsb
daa
ljmp
pop
and
pop
mov
arpl
or
testl
nop
mov
dec
mov
lods
dec
sub
dec
mov
fwait
sub
jp
mov
iret
cs
mov
xchg
push
sub
xor
mov
inc
enter
lods
cli
add
daa
shr
out
fxam
mov
add
xor
cmc
pusha
pusha
adc
fwait
xchg
inc
inc
psrlw
scas
xchg
xor
dec
add
scas
mov
loop
mov
adc
push
xor
rorl
out
cmp
dec
in
cltd
dec
push
push
int
dec
mov
pop
bound
mov
popf
mov
pop
xor
imulb
ret
insl
ficomps
push
enter
pop
stos
dec
mov
lcall
rcrl
fmuls
xor
xor
pop
in
inc
or
pop
stc
xchg
dec
ds
sbb
pop
ljmp
aam
or
pop
inc
push
nop
outsb
aad
movsl
imul
cltd
jle
cmp
sub
inc
mov
aam
loopne
pop
sub
das
aaa
push
push
pusha
iret
jns
xchg
push
or
or
mov
int
push
add
test
fmuls
xchg
xchg
add
pop
std
push
xor
push
jbe
cld
int3
push
adc
mov
jns
pop
push
lcall
cltd
std
adc
or
inc
mov
dec
mov
push
aam
test
cmp
dec
mov
scas
or
xor
clc
mov
sti
pushf
add
faddl
sub
cmc
rcrl
pop
dec
cmp
int3
xlat
daa
push
lret
xor
mov
sub
dec
in
stos
and
jno
push
jmp
les
clc
daa
test
test
cmp
sbb
testl
je
int
imul
and
dec
int
dec
cmp
or
xchg
jp
nop
xor
cmp
movsl
cmp
xchg
in
dec
xchg
das
dec
pop
paddw
pusha
sbb
pop
jl
add
fdivrs
arpl
pushf
movsb
xchg
ja
mov
mov
popa
inc
pop
scas
ds
inc
inc
jle
fbstp
int
popa
xor
push
mov
popa
std
mov
js
mov
int3
orl
pop
xor
shrl
mov
mov
ja
add
or
jmp
jle
push
cmp
mov
rolb
cmp
mov
lahf
decb
push
pop
aam
outsl
ret
mov
add
adc
int
cli
mov
mov
test
pop
push
enter
outsl
pop
in
jg
out
mov
cltd
subl
mov
sbb
xchg
aad
subl
jo
popl
arpl
jne
insb
fstpl
shlb
sti
xchg
dec
dec
stc
cltd
dec
lods
or
dec
sbb
repz
or
aaa
pusha
bound
jb
sbb
stos
pop
and
nop
imul
dec
scas
xlat
adcb
stos
pop
sub
cmpsb
aaa
repz
popa
xor
sub
rorb
xor
lods
fnsave
in
mov
rclb
cmp
lea
or
dec
int
cmp
cld
push
inc
lret
pop
andb
mov
mov
sbb
ja
mov
popf
add
and
aam
xchg
popf
das
adc
ja
inc
mov
xchg
mov
xor
pop
mov
popa
in
cmp
xor
jns
stos
sbb
leave
dec
mov
cmp
dec
loope
sbb
lcall
arpl
in
xchg
lcall
fsub
leave
push
and
xchg
mov
sahf
add
call
push
push
fisttpl
xor
gs
ljmp
and
push
sub
mov
fnstenv
push
inc
rorb
int
cmpb
xchg
leave
fdivrp
pop
sub
fsubrl
xchg
push
jo
xor
pop
leave
cltd
hlt
mov
sahf
inc
ret
jno
lods
ficoms
lock
scas
jae
or
les
sub
nop
fiadds
pop
dec
sub
lds
or
pop
loop
xor
adcl
adc
stos
ljmp
cltd
push
std
xchg
mov
lret
movb
add
ss
and
gs
aaa
dec
test
aam
shll
test
test
pop
in
sub
cmp
lock
out
inc
shlb
ret
icebp
mov
dec
jle
outsb
mov
xchg
mov
mov
mov
lea
inc
rol
int
push
push
lds
stos
mov
mov
and
sarl
andb
or
mov
loope
cmp
dec
cmp
test
xor
rcrb
jecxz
pop
push
pusha
lea
lods
mov
or
decl
aaa
add
pop
imul
mov
ficoml
cmp
and
lods
lret
cmpsl
scas
sahf
cmp
jge
shr
shrb
inc
mov
sub
scas
mov
insb
push
test
xchg
pop
icebp
sub
hlt
inc
cltd
xchg
cmp
push
mov
inc
pop
and
je
adc
jns
pushf
sbb
add
mov
lcall
arpl
aas
rclb
and
and
nop
jmp
jne
fwait
mov
out
mov
inc
xchg
inc
xor
in
xlat
mov
out
cmc
arpl
fcoml
sbb
or
jle
mov
cmp
into
popa
pop
std
inc
aas
daa
icebp
push
sar
leave
leave
push
lret
xchg
repz
push
arpl
sbb
xchg
pop
push
fiaddl
fmull
fsub
xor
inc
mov
mov
jl
loope
mov
adc
jo
cs
or
rorb
cld
cmp
shll
les
dec
fidivrl
inc
out
roll
add
sbb
out
frstor
push
lods
movsb
pop
inc
jnp
xchg
inc
push
loopne
cmp
pop
out
insb
std
push
mov
mov
cli
jb
push
or
mov
cmp
xchg
sbb
xchg
pop
call
nop
mov
stos
dec
fwait
dec
mov
xchg
sub
add
xchg
adc
iret
or
sub
dec
iret
icebp
sub
pop
cltd
ret
sbb
hlt
inc
repz
sbb
rolb
xorb
jno
dec
inc
das
adc
cltd
pushf
xor
ds
push
mov
mov
inc
nop
jne
pop
pop
lret
stc
in
jecxz
adc
mov
cmpb
mov
cs
daa
jmp
sbb
jle
std
das
roll
inc
test
dec
mov
sub
pop
adc
imul
jecxz
xchg
leave
cmp
stos
sahf
ljmp
jg
fistps
jle
and
dec
dec
stc
ss
and
lret
cs
xchg
mov
xchg
adc
outsb
add
sub
fwait
mov
xor
incl
std
push
int
fstpl
js
or
jge
test
jne
fdivs
sub
in
scas
dec
jp
mov
xor
xor
sbb
adc
xor
push
add
xor
in
jno
mov
xor
pop
jne
mov
bound
xchg
pop
out
cmp
pop
cmc
mov
cmp
xchg
mov
es
mov
dec
dec
jl
das
or
mov
addl
dec
dec
adc
ss
xlat
sbb
in
or
ret
mov
mov
jp
aam
clc
jno
fisttps
out
repnz
xor
aam
jnp
insb
push
mov
dec
mov
es
dec
xor
xor
lea
lcall
push
and
loope
mov
ljmp
cmp
xchg
sub
iret
sub
adc
and
mov
sti
xchg
lds
mov
mov
add
xchg
or
sub
pop
push
lcall
add
popf
mov
pop
xchg
inc
ret
jae
idivl
les
pop
cltd
cmp
fidivrs
scas
pop
pop
in
je
fcmovnb
mov
fidivrs
out
mov
push
scas
aas
daa
pop
add
outsl
push
pop
lods
cli
pop
mov
xchg
into
pushf
jg
cmpsl
mov
or
dec
cli
push
sub
mov
iret
or
iret
sub
mov
jg
inc
xorb
sti
push
adc
pop
sub
adc
sub
sbb
xchg
push
nop
inc
hlt
inc
out
xchg
mov
addr16
sub
pop
push
ljmp
push
test
add
rorl
popf
jg
pop
push
pop
mov
out
dec
and
shll
fsubrp
std
es
xchg
pop
cmpsb
sbb
lods
mov
pushf
fucomp
pushf
jns
push
lds
int
aam
add
enter
test
mull
daa
fldl
mov
negb
fwait
rclb
xchg
lea
xchg
popf
lods
into
cmpsl
dec
int3
push
push
cli
jno
sbb
inc
mov
lock
lret
dec
dec
lcall
mov
push
mov
push
into
cwtl
cmp
adc
cmp
hlt
fistl
je
sar
mov
sbb
mov
outsb
xchg
mov
lret
add
dec
aas
and
mov
inc
ret
dec
test
jle
xchg
or
sbb
bswap
rcll
pop
jmp
jo
pop
mov
cmp
pop
sbb
ficoms
les
int
ret
cmc
xor
mov
sahf
adc
push
les
xor
pop
inc
sub
jecxz
add
cmp
or
and
sarb
or
arpl
or
mov
ss
cwtl
dec
inc
xchg
push
ds
jge
out
adcl
in
pop
mov
cmpsb
dec
mov
jne
cmpsb
int
xor
lret
cmp
sahf
inc
mov
sarb
dec
sub
mov
pop
lret
mov
mov
sbb
lods
and
xchg
lret
mov
mov
push
clc
cld
sub
adc
imul
xchg
and
aas
sbb
aam
movsb
aam
das
mov
sbb
jmp
inc
pop
aas
dec
das
or
jne
enter
mov
fdivrs
push
mov
les
mov
sbb
push
in
xor
cmp
mov
cmpsb
mov
inc
fstl
ret
xor
sbb
cmc
pushf
mov
cmp
popa
jg
cwtl
mov
push
inc
xchg
jmp
int
mov
fs
mov
mov
add
push
cltd
cltd
lahf
nop
sub
das
mov
sub
lods
push
addr16
cmp
mov
andl
idivl
aaa
hlt
sbb
shrl
lahf
testl
lods
dec
or
push
mov
inc
sub
mov
popa
ds
fistpl
movsl
mov
dec
push
pop
push
lret
push
xor
mov
out
push
jae
mov
push
negb
int
xchg
adc
sub
jmp
xor
dec
mov
mov
lods
pop
adc
adc
roll
sub
ja
xchg
insb
stc
xchg
xchg
mov
mov
pusha
inc
std
sti
fst
ljmp
ja
ret
xchg
inc
icebp
xor
ficompl
in
push
imul
loopne
push
outsl
aas
mov
ss
mov
out
fmul
add
scas
cmpsb
pushf
adc
lret
mov
pop
insl
std
cmp
inc
insl
push
out
fiaddl
loopne
jb
icebp
movsb
scas
sbb
mov
lret
popf
aad
push
push
cmpsb
loop
cmp
xor
imul
js,pt
lods
cltd
out
inc
jae
mov
scas
mov
cmpsl
jl
enter
imul
lods
or
mov
das
stc
mov
dec
mov
scas
test
pop
in
pop
nop
jo
cwtl
sbb
scas
and
test
push
lahf
mov
stos
nop
outsb
adc
in
xchg
into
stc
bound
push
std
adc
inc
push
in
jg
mov
jg
dec
jb
mov
or
enter
fstpt
dec
imul
icebp
jno
push
mov
push
sub
pop
lods
ds
pop
mov
imulb
mov
mov
cmp
adc
out
push
in
push
xrstor
inc
idivl
xor
jle
pop
mov
jbe
inc
pop
jp
add
pop
mov
mov
adc
outsl
es
jle
jmp
ret
xlat
jmp
adc
xchg
lods
scas
enter
sub
mov
mov
pop
cmp
mov
nop
imul
lea
jbe
pushf
cmp
mov
icebp
push
sbb
loop
push
xor
inc
sbb
ss
shl
mov
ds
into
repnz
gs
sub
jecxz
data16
in
or
andl
je
stos
mov
push
mov
aam
dec
push
mov
cld
sbbl
jbe
repnz
daa
jmp
or
cmp
jp
pop
xor
xchg
mov
push
call
or
mov
jge
imul
stos
js
mov
inc
scas
jecxz
mov
jle
xchg
fcompl
lods
in
push
scas
jne
js
and
stos
xchg
jbe
aam
adc
call
shl
mov
clc
xlat
add
dec
xchg
cmp
xor
cs
test
in
lods
dec
movsb
mov
data16
pop
inc
add
dec
mov
mov
icebp
cmp
sbb
adc
cwtl
insb
sbb
repnz
loopne
aaa
adc
data16
xor
dec
inc
inc
xchg
rcl
outsl
imul
sub
bound
xlat
in
push
fldenv
ljmp
cmp
push
mov
out
mov
sub
adc
xor
xchg
ret
enter
cwtl
inc
and
lret
xchg
popa
dec
imul
push
sub
out
out
lret
outsl
mov
or
jns
movsl
xor
aas
idivl
mov
arpl
inc
in
xor
mov
jg
sub
mov
in
and
jo
imul
or
pop
dec
sbb
cs
int3
mov
stos
in
stos
mov
lret
ja
ret
push
dec
push
xchg
jp
inc
ss
or
sbb
fs
mov
stos
dec
dec
js
test
addr16
pop
in
sub
adc
out
cmp
mov
cmp
aaa
dec
dec
lock
xlat
mov
aas
loope
imul
xchg
mov
and
jbe
mov
push
xchg
mov
mov
xor
xor
out
fcmovne
das
jnp
ss
out
mov
sti
and
xor
push
sbb
outsb
int3
mov
jl
shl
ret
lcall
xchg
popa
push
lds
movsb
sbb
les
mov
jge
or
jp
push
pop
push
adc
push
and
pop
jmp
push
push
mov
ljmp
out
push
dec
jnp
test
shl
jle
sbbl
jge
mulb
cmp
icebp
xor
lods
movsl
das
pop
cmpb
cmp
into
push
push
cmp
shlb
cmp
cmpsl
or
xchg
arpl
sti
sub
dec
xchg
sub
andb
sub
rcll
adc
cmp
into
xchg
imul
push
push
sbb
pop
iret
push
lcall
push
int3
xchg
pushf
mov
aaa
ss
popl
ja
and
cmp
push
outsl
add
ljmp
in
test
adc
jle
xchg
pushf
repz
push
ret
in
inc
dec
or
xor
fnstsw
pushf
out
lods
imul
jp
test
inc
ret
mov
and
add
cmp
inc
ret
jecxz
push
add
fwait
xor
stos
jle
dec
ret
je
mov
lods
jns
hlt
mov
loope
popf
pop
es
or
lds
stos
aaa
cmp
aam
aad
insb
cmpsl
pop
aad
or
fstps
adc
arpl
lds
inc
popf
sbb
lahf
aaa
mov
mov
lods
dec
mov
push
add
clc
mov
dec
mov
inc
mov
roll
mov
imul
inc
adc
nop
orb
mov
fiadds
inc
push
xor
shll
pop
jo
sbb
jmp
push
dec
pop
enter
mov
adc
cltd
pusha
sarl
fiaddl
int3
dec
add
xchg
inc
xchg
daa
lret
movsb
and
mov
addl
jge
pop
inc
addl
out
ret
fldl2e
xchg
repnz
or
lea
je
into
sbb
cmpsl
mov
outsb
data16
mov
push
iret
mov
test
mov
push
pop
outsl
mov
shll
push
and
div
das
adc
xchg
outsl
add
and
sbb
mov
shlb
outsb
fcmovb
inc
popf
mov
out
mov
inc
lods
lret
sub
sub
mov
ja
in
cwtl
dec
je
mov
mov
add
adc
jl
addb
stos
lret
out
inc
lods
stos
cwtl
repnz
std
mov
cltd
in
inc
xchg
mov
in
in
out
push
popf
mov
add
sub
adc
xor
or
inc
xchg
xor
rorb
sbb
mov
jnp
jae
push
sub
out
sti
dec
jl
dec
inc
addl
lods
jp
mov
mov
and
cmc
mov
jbe
call
jbe
pushf
dec
out
add
cmp
and
and
sbb
ror
jmp
rclb
loopne
push
js
out
jne
mov
and
xor
shll
xor
leave
push
les
clc
shl
loope
enter
mov
dec
arpl
popf
cmp
imul
jmp
push
js
or
subb
or
inc
lahf
popl
mov
aaa
lods
inc
xchg
bound
ret
mov
mov
dec
sub
dec
lcall
imull
popf
cmp
add
xchg
push
ret
cli
insb
addr16
inc
movsb
mov
loope
mov
fwait
fs
in
leave
cltd
addl
mov
into
rcl
or
int
cwtl
daa
lds
dec
ja
out
pop
gs
in
xchg
fiaddl
sbb
mov
std
mov
outsl
loop
jg
mov
lcall
sbb
jmp
cmp
pushf
pop
jnp
xor
xor
fsubrs
daa
fidivs
cmp
cmpsb
cmp
nop
xchg
ja
je
jo
mov
cmp
push
sbb
lcall
stc
xor
pushf
sub
mov
stos
cmc
outsb
rcrl
bound
mov
int
lahf
clc
fcoms
std
jo
cs
jo
fdivrs
inc
test
adc
cld
and
sarl
pusha
push
aaa
xor
xor
mov
ds
mov
adc
es
inc
inc
xorl
inc
sbbb
or
scas
push
adc
ljmp
sub
negl
dec
dec
cmc
aas
inc
ds
push
xchg
int3
mov
dec
sbb
pop
or
xor
dec
std
popa
push
push
and
ret
push
jns
xor
hlt
gs
inc
inc
bound
cmp
addr16
daa
add
add
je
ss
in
xchg
dec
sub
dec
mov
sub
xchg
mov
dec
in
sub
xor
ljmp
jo
sti
fistpl
sub
mov
test
sbb
shlb
sub
cwtl
addl
xchg
aas
out
into
ljmp
nop
cmp
ljmp
cli
orb
xor
push
pop
imul
hlt
fwait
test
test
mov
adc
adc
fdivrs
ret
push
and
popf
push
jg
push
xchg
or
scas
in
loopne
mov
stos
fs
add
nop
mov
icebp
pop
dec
repnz
lea
outsb
gs
aad
arpl
rcr
test
leave
lret
mov
nop
rcl
ds
xchg
mov
in
das
lret
jg
popa
movsl
and
ret
adc
mov
shll
in
pusha
xchg
add
cli
ss
jno
cmpsl
cs
loope
rolb
xchg
mov
leave
or
popa
sub
in
bound
dec
test
cs
sub
mov
outsb
hlt
inc
rclb
sub
jg
out
add
enter
jb
testl
cmp
cmp
popa
ret
mov
adc
xlat
xchg
dec
popa
inc
xchg
inc
inc
fidivrl
adc
mov
loop
rcr
sub
xchg
movsl
push
ret
rolb
cmp
ror
mov
jnp
mov
xor
cs
cmp
sti
dec
sub
mov
cmp
js
push
jae
enter
pop
mov
ret
inc
xchg
in
insb
int
ss
or
cmp
mov
cmp
fdivl
bound
in
cmp
xchg
push
out
xor
les
shl
in
mov
fildl
testl
aaa
pusha
daa
shlb
sub
inc
popa
xor
and
cltd
test
sbb
push
cmp
dec
cmp
dec
mov
xchg
mov
inc
jle
hlt
add
test
push
sub
test
pushf
inc
inc
int3
les
enter
xor
lods
loop
xor
pop
xlat
add
leave
sarl
movsl
push
cmp
push
xor
push
xchg
xchg
cmp
jns
push
mov
add
jge
push
call
enter
cmp
xchg
mov
ret
aad
cwtl
or
lods
cmp
jo
popf
js
push
xchg
ret
and
movsb
push
imul
in
or
clc
jle
xchg
imul
iret
pop
adc
xchg
cmp
or
sbb
scas
imul
pop
mov
icebp
jb
push
add
ljmp
sub
enter
xchg
pop
inc
stc
fildll
sbb
xor
pop
xor
icebp
repz
movsl
addb
or
adc
bound
rcr
in
mov
sahf
nop
push
jle
jle
cwtl
or
sub
mov
mov
pop
stos
jl
push
pop
cmp
push
inc
lret
cmp
adc
add
cs
jmp
mov
push
jb
pop
inc
or
aas
ss
ss
daa
das
push
adc
cli
adc
stc
enter
xor
or
sub
push
push
fdivr
cmpsb
add
sub
xor
push
fnsave
inc
clc
dec
cmp
in
push
stos
xor
mov
dec
inc
std
push
jmp
lea
cmpsb
adc
fdivr
loopne
cs
push
jo
or
mov
lds
clc
sbb
aaa
stc
daa
and
or
add
stos
movsl
fwait
sbb
ret
and
cltd
jae
insb
dec
pusha
jecxz
ja
pusha
nop
leave
push
cmpl
xchg
aas
imul
outsb
cmp
xor
pop
pop
ret
push
jg
shl
test
push
mov
jo
cs
pushl
mov
jle
jg
push
mov
lcall
sbb
push
inc
pop
mov
mov
cltd
jge
stos
in
or
shll
fsubrp
adc
mov
paddsb
insl
ljmp
inc
cmp
cmp
mov
scas
enter
insl
psraw
cmp
in
sbb
test
cmp
xchg
mov
loop
mov
jo
push
add
xor
lcall
add
testb
jecxz
rcrb
sbb
shr
pop
bswap
mov
mov
out
jp
mov
cmp
pop
push
dec
lret
aam
mov
outsl
nop
les
ret
push
jae
sbb
les
push
xlat
sbb
movsl
sub
xor
daa
lret
xchg
inc
in
adc
orb
lock
cmpxchg
lret
sbb
ror
push
push
fistps
in
push
fmul
and
and
sub
push
aaa
adc
xlat
fs
stos
jmp
xor
push
push
fidivs
mov
push
mov
mov
xor
stc
pop
add
lods
inc
and
push
in
mov
push
lds
push
pop
cmpsl
pop
scas
insl
add
mov
xchg
ds
jmp
divb
xchg
not
push
push
repz
ret
xor
ds
fbld
dec
shr
mov
fdivrs
in
pop
mov
sbb
push
stos
dec
inc
pop
stos
adc
outsl
sbb
push
aaa
adc
dec
xchg
push
pop
fdivrs
mov
dec
es
ret
dec
or
or
repnz
add
sbb
insb
jle
sub
stos
or
fnstenv
jmp
or
sub
xor
sub
bound
push
test
loopne
xchg
cwtl
ss
dec
mov
xchg
fwait
jle
mov
xchg
repz
out
push
sub
popa
jecxz
test
loope
jae
mov
mov
xchg
push
adc
pop
std
xor
pop
mov
fidivrl
iret
ja
lock
outsb
ss
jns
xor
lock
mov
ja
add
xor
pop
loope
hlt
aas
int3
ret
mov
dec
fwait
jl
inc
cmc
rep
push
xor
out
test
add
shr
test
je
and
inc
mov
enter
enter
gs
ss
inc
dec
stos
lods
push
push
sbb
jns
cmp
xchg
test
mov
pop
and
aad
pop
mov
popf
lcall
ret
dec
xchg
fidivrl
jle
lods
mov
mov
ret
push
or
cmovnp
rcl
ret
add
sbb
mov
test
xchg
int3
push
mov
jl
mov
sbb
inc
push
js
sti
aad
aam
or
mov
xchg
push
or
mov
pop
roll
or
jl
mov
dec
shll
jne
lret
sub
jns
sahf
stos
scas
xchg
arpl
sub
or
jbe
push
out
push
sub
ror
push
fadds
push
cmpsb
inc
xor
into
inc
sub
fdiv
jmp
push
cmp
xor
ss
push
cmp
push
dec
repnz
jne
jle
sar
jae
or
sub
repnz
insl
mov
sbb
pop
ds
adcb
sbb
push
jg
int3
lock
cmp
mov
lock
adc
lret
fiadds
repz
push
negl
push
inc
pop
mov
ss
push
aad
mov
aas
icebp
lret
scas
and
xchg
into
mov
sbb
iret
rcll
jb
inc
dec
outsl
dec
mov
cmp
rolb
mov
pop
xchg
inc
adc
leave
sub
adcb
xor
inc
lods
dec
and
push
xchg
xor
pusha
inc
jb
xor
add
pop
inc
movsl
nop
dec
es
test
es
inc
scas
push
int3
cltd
mov
out
and
cwtl
push
pop
es
xor
mov
xor
js
sbb
xor
scas
adc
ret
pop
lods
mov
arpl
cmpsl
in
mov
daa
push
mov
add
xor
xchg
into
inc
jl
aaa
cwtl
mov
mov
mov
sbb
das
jbe
adc
jae
outsb
lods
sub
or
enter
int
add
movsl
in
arpl
lcall
popa
jmp
sti
xor
mov
mov
mov
push
jnp
xor
in
into
mov
jecxz
mov
dec
hlt
push
pop
adc
inc
rorl
fcmovnu
jmp
or
sbb
fimull
jmp
push
jb
xor
adc
cli
stos
cmp
push
fbstp
dec
adc
jp
jecxz
push
add
mov
add
xchg
es
xchg
mov
dec
ljmp
pop
mov
scas
pop
pop
mov
out
stc
bound
jmp
bound
xor
mov
sbb
mov
rcll
ljmp
or
push
adc
or
mov
xor
shl
inc
cmp
lret
in
bound
lock
cmp
dec
outsb
cmp
insb
xchg
and
or
inc
jg
cmpsb
adc
pop
mov
es
cmp
sub
ljmp
jns
add
mov
pop
fmull
mov
inc
popl
or
add
mov
or
or
in
ds
cmp
xor
lock
arpl
cmpsb
sbb
cld
movsl
add
jmp
int3
movsl
mov
sbb
mov
push
or
jmp
jne
lods
mov
xor
push
mov
filds
inc
mov
pop
xchg
cmp
cs
in
fldcw
lds
adc
and
pop
je
js
loopne
pop
lods
shll
cwtl
repz
js
add
bound
insb
add
gs
xorb
aaa
xchg
mov
popf
or
adc
iret
js
dec
jns
or
std
shlb
mov
push
inc
stos
push
ja
pop
mov
subb
cmp
fadds
and
aam
sub
cmpsb
push
ret
lds
mov
inc
inc
push
test
and
ja
enter
mov
lret
ret
lcall
push
scas
push
ja
push
ljmp
xchg
testb
mov
mov
pushf
cmc
leave
insl
pop
sub
stos
adc
sub
sub
pop
mov
push
mov
jg
into
jle
js
jp
jl
jmp
jbe
cmp
xchg
jp
cmc
dec
inc
and
mov
mov
aaa
jns
jmp
jecxz
test
lret
inc
push
fcoml
fincstp
and
sbb
aas
pop
stos
mov
leave
into
out
call
push
pop
aad
mov
loopne
pop
imul
loope
mov
pop
sbbb
mov
stos
int3
xchg
sub
repz
mov
jnp
stos
scas
push
rcrl
or
push
and
inc
cs
clc
dec
xchg
xor
push
imul
bound
jle
inc
add
jns
lcall
xchg
shlb
jle
shll
out
push
cmpsb
cs
and
mov
nop
lret
mov
xchg
pusha
test
bound
imul
mov
push
push
daa
daa
mov
xchg
push
lret
out
mov
mov
addb
pop
dec
fs
add
decl
mov
cmp
lea
adc
push
xor
filds
jo
jp
jae
pusha
nop
hlt
movb
lea
andb
or
movsb
push
int
cmpsl
adc
int3
inc
add
sahf
mov
sbb
mov
cld
test
mov
push
push
adc
inc
movsb
fnstcw
mov
fwait
int3
cltd
add
jae
shll
test
xchg
cmc
into
daa
dec
push
mov
pop
iret
insl
adc
cmp
mov
jg
add
jnp
stos
sbb
lock
inc
pop
jo
rclb
xchg
or
outsb
ljmp
imul
popf
negl
cli
pop
sbb
arpl
mov
sbbb
lds
sbb
dec
jg
test
xchg
adc
jecxz
sbb
ret
rcl
push
cmp
in
lcall
jnp
loop
pop
les
into
subb
gs
or
ret
mov
repz
xor
mov
inc
jle
cwtl
int
andl
fisttps
cmp
jne
aas
cmp
sbb
jge
dec
icebp
xor
add
pop
dec
cs
imull
ds
ja
lahf
pop
addr16
mull
sub
test
mov
pop
inc
cmp
pop
out
ss
lods
mov
lret
pop
fadds
lods
mov
sub
adc
jns
fdivs
stos
pop
cmp
mov
enter
and
test
cmc
shrl
cmp
in
push
mov
cmp
add
rcrb
sub
cmp
pop
nop
xor
lahf
xchg
adc
sbb
in
mov
stos
test
mov
lock
add
xchg
loope
cmpsl
pop
out
adc
aam
test
push
sub
std
sub
jecxz
std
sbb
test
or
jne
push
mov
lods
mov
cmpsl
jns
cmp
les
dec
stos
cmp
loop
sbb
ss
mov
ret
cmp
mulb
leave
adc
xchg
std
mov
dec
adcb
add
jecxz
cmp
decb
stos
inc
push
or
not
pop
lds
push
pusha
mov
mov
lods
lret
xchg
xor
xchg
adc
adc
popf
mov
fsubl
add
adc
scas
mov
fs
shll
cmp
mov
cli
jnp
icebp
pminub
lods
ds
cmp
inc
push
aam
shrb
in
sbb
out
pop
inc
int
std
aad
icebp
inc
loopne
test
daa
mov
add
lcall
pop
jae
in
cwtl
rcrb
sti
pushf
mov
fisubrs
pop
adcl
pop
ja
ret
daa
push
mov
data16
shl
leave
or
inc
movsl
push
mov
jge
decl
add
icebp
enter
cld
mov
ret
shll
ds
ja
dec
sarb
jbe
sbb
push
jns
inc
shlb
sbb
or
jno
dec
pop
push
xchg
sbb
ss
addr16
hlt
mov
lret
pop
ds
pop
daa
fcompl
dec
adc
sbb
imul
imulb
jb
sub
rolb
mov
mov
add
push
or
in
cmc
call
xlat
movsl
rcr
js
das
call
and
pop
ficoml
scas
sub
inc
push
aas
divb
or
dec
mov
inc
sub
leave
inc
inc
adc
pop
inc
cli
dec
lods
rcr
xor
cmp
sub
cmp
es
in
pop
das
sbb
inc
mov
dec
jge
lods
jno
shlb
pop
insl
std
test
pop
fwait
ds
fs
add
xchg
jg
sub
jb
pop
insl
stos
cmp
mov
mov
testb
xchg
cwtl
loopne
mov
imul
mov
nop
jb
dec
int3
cmp
int3
aad
push
cmp
sbb
hlt
fidivs
loope
shrb
mov
push
pop
test
mov
sahf
mov
leave
sbb
cld
inc
sub
jle
das
sub
fdiv
arpl
xchg
inc
push
jae
fcoms
jp
add
mov
push
cli
mov
xchg
dec
mov
cmp
xchg
call
dec
xchg
push
inc
jb
nop
out
jbe
and
xchg
xor
mov
popa
lret
mov
dec
outsl
lret
pop
sub
inc
test
es
in
das
pop
or
mov
divb
or
int3
push
scas
push
xchg
stos
mov
aad
repz
and
mov
mov
xchg
pop
addr16
sbb
xchg
add
mov
jge
mov
sbb
fcmove
popf
mov
rcll
sub
es
cmpsl
jns
dec
dec
je
xchg
notb
repnz
mov
xor
mov
lcall
mov
daa
mov
push
add
aam
mov
jo
js
out
push
pushf
not
or
add
cld
scas
fisubrs
cmp
aam
aam
cwtl
jp
pop
xorl
in
aam
cli
cmpsl
xchg
imul
inc
sub
mov
mov
dec
loopne
jae
stos
mov
int
mov
orb
sbb
add
mov
pop
and
jmp
enter
push
inc
dec
mov
icebp
cmc
mov
dec
divb
mov
cmp
and
popa
jecxz
sarb
fldl
mov
dec
xchg
inc
xor
push
push
mov
je
in
adc
and
ret
sub
push
ss
mov
xchg
xchg
fistpll
cmp
jmp
stos
int3
push
cmp
out
inc
push
ja
sub
or
cmp
jno
jp
xchg
cmp
popa
lret
or
add
mov
ss
inc
decb
lret
cld
mov
std
mov
adc
sub
andb
loop
cmc
pop
sub
sub
hlt
mov
test
pop
mov
mov
inc
or
sub
dec
jl
sub
xor
dec
or
xlat
addr16
cmp
iret
pop
sbbl
adcl
mov
xchg
shlb
jb
sbb
mov
insb
outsb
in
pop
int3
xlat
cwtl
jle
and
out
enter
push
jg
fcmovbe
jne
jecxz
sahf
daa
jmp
mov
rcl
inc
addr16
jne
dec
test
mov
push
lret
ret
mov
ljmp
pop
and
inc
inc
sub
cmpl
js
add
leave
adc
out
popa
mov
das
cltd
in
lcall
dec
xchg
jne
and
shl
lret
outsb
adc
dec
sub
popf
out
xchg
push
hlt
add
adc
dec
bound
aam
cmpsl
mov
test
and
fdivr
cmp
cmc
push
mov
js
adc
sub
aam
imul
or
ficomps
cli
jecxz
rcrb
jp
out
sahf
lahf
sbb
sbb
out
add
pusha
cli
sbb
cmp
mov
sub
out
xchg
js
ja
ret
and
mov
stos
jns
mov
ds
pusha
inc
xor
pop
arpl
es
out
pop
mov
rorb
adc
sbb
icebp
sarb
xchg
cltd
inc
push
mov
fidivrs
movsl
xorl
dec
xor
lea
push
dec
push
nop
pusha
loop
xchg
dec
sti
mov
sub
sbb
cmp
mov
and
pop
pop
cltd
out
scas
cmp
mov
gs
xor
adc
mov
scas
sti
jb
or
dec
out
sub
out
add
in
xorb
dec
mov
inc
cmp
add
mov
push
sbb
sbb
sbb
mov
in
push
arpl
adc
repz
fstl
xlat
enter
data16
scas
adc
cmp
and
aam
stc
daa
adc
rcr
cmp
cmp
into
sbb
sub
inc
sbb
sbb
or
xchg
aaa
cwtl
gs
cmp
inc
push
testb
mov
add
nop
int3
loop
push
push
ret
fdivs
std
mov
fimuls
pop
fsubs
leave
jb
test
push
pop
mov
push
iret
mov
pop
xchg
jne
outsl
push
loop
or
js
jns
mov
xlat
cmp
push
mov
mov
push
mov
roll
fistl
insb
lcall
add
pop
push
sbb
fdivl
sbb
pop
lea
mov
ljmp
es
aas
add
push
sub
xor
jle
out
jmp
mov
ror
pusha
adc
mov
std
mov
sbb
cmpsb
inc
mov
cmp
cmp
or
cmp
mov
lret
nop
add
imul
je
cmp
pop
pop
into
dec
gs
sub
outsl
mov
loope
mov
pop
push
mov
add
lds
inc
dec
testl
xchg
sbb
sub
fisttpl
dec
add
sub
rol
mov
fucomp
test
mov
add
mov
xchg
stos
int3
clc
insb
mov
xor
sub
les
dec
std
inc
sub
or
rcrb
std
add
mov
fadd
cld
aam
out
out
mov
mov
jge
mov
push
mov
xchg
cwtl
or
ljmp
jbe
add
push
cmp
clc
and
inc
cmp
into
in
scas
adc
arpl
pop
xor
or
cmp
lret
mov
subb
inc
lock
mov
testl
mov
lock
fnstcw
cmp
test
nop
mov
inc
and
ljmp
jle
popf
test
mov
jns
aad
push
push
dec
mov
inc
hlt
sub
pop
pop
dec
loope
mov
sahf
sbb
pop
pop
notl
lods
xchg
ret
adc
scas
mov
stos
jmp
mov
sbb
in
lret
xor
mov
jo
hlt
mov
push
sub
cmc
inc
rolb
pop
fldt
jno
in
push
js
or
sbb
je
or
mov
mov
fnstenv
rcl
inc
aaa
push
scas
mov
ret
push
sti
sbb
stc
and
mov
mov
out
fdivl
push
pop
fnsave
popa
out
push
push
popa
imul
std
or
out
nop
subl
popf
jno
inc
push
xor
lcall
aad
in
movsl
cmp
aad
dec
cmc
inc
js
adc
add
test
dec
nop
adc
mov
mov
cld
adc
mov
cmp
lcall
mov
mov
pop
test
ss
add
fxch
ret
inc
xor
dec
add
cmp
pop
inc
add
mov
dec
ds
out
cmpb
cmpl
mov
xor
jae
and
movsb
add
jne
hlt
movsb
pop
and
mov
and
mov
xor
push
in
enter
xchg
push
add
sahf
xchg
mov
pop
push
xlat
scas
push
inc
adc
or
jns
push
add
sbb
mov
fs
push
fistpll
jne
ljmp
dec
mov
leave
aad
leave
ds
enter
daa
or
aad
inc
loop
sub
call
cmp
xor
lret
lret
roll
dec
xchg
cwtl
jno
fisubrs
jecxz
pop
cmp
cmc
dec
push
jecxz
push
pop
cmp
dec
dec
rorb
sub
and
push
mov
jae
xchg
fadds
aam
imul
sti
dec
das
pop
aad
mov
stos
mov
imul
add
scas
dec
jnp
out
or
outsb
or
inc
mov
adc
jne
mov
nop
arpl
cmp
enter
dec
jmp
xor
push
push
adc
ret
jne,pt
out
jge
ljmp
scas
add
pop
sbb
mov
pop
and
sub
pop
push
cmp
xchg
jg
std
insb
add
in
add
push
jle
aam
mov
dec
pop
sbb
add
or
lret
gs
leave
int
lea
jae
jge
xchg
jae
dec
xchg
clc
xchg
xor
rcrb
jecxz
rolb
mov
jg
adc
fdivs
push
or
pop
inc
out
pop
fcomps
xchg
jae
mov
add
sub
test
pop
and
aaa
xchg
xchg
mov
rorl
sbb
fdivr
jbe
loope
in
cmp
inc
xchg
cltd
idivl
pop
or
mov
xlat
xchg
addr16
mov
movsl
inc
sar
test
mov
scas
cmp
sub
movsl
test
cwtl
cli
lret
idivb
daa
orb
or
into
jecxz
cmpsl
fidivrl
mov
cmc
jbe,pn
or
in
dec
mov
jae
sbb
mov
enter
or
dec
xorl
shrb
scas
scas
rolb
ret
mov
sub
or
xor
shl
cwtl
add
inc
sub
rcl
subl
cmp
sub
clc
loop
cmpl
push
imul
loope
test
ljmp
xchg
sbb
clc
sub
xchg
xchg
and
mov
mov
loop
pop
xchg
stos
push
mov
and
ret
push
mov
sbb
mov
push
adc
xlat
sahf
dec
jbe
int3
dec
mov
lods
jmp
das
cmpsb
mov
sbb
repnz
enter
clc
xor
mov
jae
mov
lds
out
subb
jg
or
lock
jo
addr16
cmc
inc
outsl
push
cld
jg
inc
cli
sbbl
push
or
movsb
jg
or
scas
and
ror
in
ss
mov
sbb
cmpl
xchg
jmp
imul
add
in
ljmp
push
cli
jl
jno
jae
mov
dec
es
cmc
inc
or
dec
xor
and
loop
sub
int3
hlt
ss
in
pop
add
lcall
adc
inc
dec
inc
addb
sub
push
icebp
add
sbb
aad
lock
adc
add
imul
jbe
sahf
xchg
and
ljmp
jo
adc
pop
mov
movsb
arpl
movsb
mov
out
sub
in
jmp
sti
enter
ficoms
rcrl
mov
cli
mov
sub
or
sub
int3
cmpsl
insl
clc
mov
mov
dec
stos
jns
xchg
mov
dec
sub
test
jle
sub
ljmp
and
push
shl
xchg
mov
jno
out
loope
inc
hlt
leave
repz
inc
lea
jp
je
cmp
imul
mov
cmp
push
out
xchg
cmp
insb
movsb
jp
pushf
add
fcoms
insl
insl
mov
leave
cmp
pop
in
xchg
push
repnz
dec
lea
pop
xor
outsl
dec
jle
ss
cli
repnz
ficoms
xor
lea
movsl
pop
test
xchg
rclb
fs
dec
shll
fadds
sub
dec
and
lock
leave
std
int3
push
test
cmp
das
into
mov
iret
test
mov
push
cmp
inc
fwait
mov
xor
lcall
in
add
add
sbb
inc
imul
int3
imul
jne
in
adc
sbb
dec
mov
xchg
dec
cmp
jg
xchg
jle
xor
addr16
jg
int3
scas
daa
es
mov
adc
out
out
stos
divb
jg
shlb
addr16
call
and
in
cmp
cld
out
mov
or
jg
adc
jnp
loopne
ss
mov
push
pop
js
adc
sub
xchg
cmp
ror
add
stos
clc
repnz
arpl
mov
cmp
test
lods
sarb
xor
movsl
jbe
je
cmp
mov
xchg
andb
inc
sbb
push
jnp
in
insb
inc
cmp
push
cmp
fnstcw
int
stc
pop
cmpsl
fidivrl
popf
jns
cld
push
dec
inc
or
adc
loop
and
mov
fstpl
dec
mov
xchg
mov
pop
sub
outsl
mov
mov
pop
divb
mov
fmull
mov
mov
aaa
pop
sbb
shlb
mov
in
xor
dec
inc
fdivl
cld
sub
ss
shrl
aam
test
sarl
in
sub
push
lret
or
mov
negl
std
pop
into
leave
xor
pusha
mov
mov
pushf
jae
pop
sbb
xor
into
fldl
xor
and
inc
jg
push
xchg
or
outsl
push
mov
dec
push
inc
addr16
ret
out
leave
or
insl
stos
push
dec
mov
adc
sub
pop
xor
out
mov
in
ss
inc
repnz
sbb
jae
pop
mov
aas
les
shlb
xor
cmp
nop
decl
gs
mov
stos
cli
pop
xor
adc
sahf
mov
clc
dec
adc
lahf
test
dec
sarl
sbbl
dec
push
inc
pop
sub
shrb
movsb
bound
cmc
les
mov
xlat
mov
or
cmpsb
dec
into
adc
clc
mov
pop
cmpsl
fwait
dec
cli
pop
xchg
pop
mov
cmpsl
pop
addr16
sahf
jmp
dec
xor
xor
push
lods
jg
bound
roll
adcb
mov
daa
ficoms
sbb
add
sahf
sbb
xor
lea
xchg
sub
shr
sahf
js
popf
push
cmp
ret
rolb
iret
loope
pop
push
movsl
in
xchg
inc
cltd
in
cmpsb
jnp
inc
cmpsb
in
sbb
jmp
or
and
fbstp
fidivrl
dec
dec
imul
std
sub
push
inc
push
push
xchg
and
pop
xor
cmp
dec
jno
dec
sub
inc
loopne
movsb
inc
outsb
rcrl
fldl
es
and
inc
xchg
inc
std
out
dec
mov
dec
mov
lret
dec
in
stc
adc
inc
xor
push
je
mov
mov
xchg
push
daa
jl
lods
inc
mov
mov
and
popa
fs
test
out
out
sub
aam
push
inc
out
fistpl
idivl
pusha
mov
adc
push
in
cmpsl
lock
inc
popa
lcall
insl
mov
jnp
adc
in
dec
pop
or
pop
in
inc
shlb
push
jl
sar
xchg
sbb
mov
push
movsl
xchg
add
cmc
xchg
or
add
enter
in
push
xchg
pop
sub
pop
xor
pop
adc
ret
cmp
ja
jg
out
in
sub
popf
in
mov
jge
jnp
mov
enter
jno
mov
push
fstpt
push
fstpt
push
inc
jo
shl
loop
lods
std
jno
es
inc
xchg
pop
cmp
in
lods
or
les
cmpsl
lods
adc
mov
clc
jae,pt
dec
fisubs
sub
or
add
xchg
aam
icebp
mov
cmpsl
mov
pop
sub
cmp
push
pushf
push
stc
cmpsb
cltd
or
mov
xchg
inc
daa
out
jle
add
fmuls
inc
and
cwtl
incb
pop
sub
inc
pop
shrb
addl
xchg
sarl
ret
pusha
sub
outsb
fidivrl
mov
push
loop
mov
push
lds
fdivs
fisttpl
pop
loopne
mov
in
jmp
dec
and
inc
dec
lahf
test
sar
ds
ficoms
jb
and
adc
aaa
jl
aam
jecxz
push
or
lret
test
fsub
mov
mov
ss
pushf
aaa
outsl
popf
jp
scas
or
mov
add
xchg
mov
data16
pop
scas
mov
pushf
jmp
pop
test
cld
sbb
push
test
jnp
data16
xchg
and
push
nop
imul
pminub
mov
jge
xchg
fsubrs
fwait
in
call
adc
inc
es
jae
xchg
mov
sbb
outsl
xchg
pop
sub
test
and
fs
jnp
adc
in
adc
jno
push
lahf
icebp
mov
mov
push
jo
lods
cwtl
add
mov
mov
xor
arpl
xchg
into
in
cmp
std
sub
xor
pop
addb
sbb
aam
cld
movsb
test
stc
cmc
mov
mov
fidivl
shlb
xor
mov
mov
push
mov
push
push
push
or
leave
jge
xor
out
popf
outsb
sub
loop
fwait
cmpsb
mov
fcos
aam
xlat
inc
push
testb
aaa
mov
adc
mov
and
cmp
les
adc
xchg
dec
subl
shrl
inc
popa
testl
cwtl
xchg
cmpsb
pop
loope
mov
cmp
mov
pop
sbb
add
add
stos
mov
jns
xor
mov
ret
cltd
mov
jno
dec
push
xchg
xchg
and
mov
movsb
jp
addr16
aaa
xchg
rclb
jg
sub
adc
inc
imul
ret
aaa
frstor
rcrb
cmp
popf
insb
mov
idivl
enter
jecxz
mov
xchg
inc
mov
mov
xchg
jmp
push
std
add
jae
arpl
xchg
mov
fs
aas
pop
mov
mov
dec
dec
loope
mov
inc
mov
wbinvd
dec
lods
orb
sbb
hlt
add
call
inc
mov
rclb
dec
rcrl
dec
flds
push
iret
scas
push
std
dec
xor
imul
paddb
hlt
or
loope
pop
xchg
les
scas
arpl
lcall
pop
or
mov
test
cltd
dec
andb
jnp
ja
mov
dec
jle
daa
or
sahf
sti
pop
and
cmp
push
cltd
negl
insb
adc
mov
pop
insb
jo
xchg
mov
insb
cld
ret
out
int3
xchg
push
push
test
hlt
pop
es
in
mov
and
push
xor
mov
ds
daa
fldcw
mov
fwait
test
inc
cltd
adc
mov
popf
push
repz
jne
mov
push
and
xor
jnp
xor
fists
push
ja
mov
es
cmp
subb
repnz
xchg
lea
inc
lret
imul
cwtl
sub
shlb
xor
sbb
dec
cmp
lret
jmp
les
xor
xor
pop
mov
popa
jp
adc
fwait
dec
movsl
sahf
out
xchg
dec
dec
and
or
repnz
push
pop
cli
inc
mov
mov
vmread
mov
int
mov
in
pusha
scas
shr
push
and
xor
scas
dec
clc
mov
std
and
dec
adc
popa
subl
jmp
pushl
fmul
mov
push
imul
dec
dec
sarb
sahf
jg
addr16
dec
pop
test
jmp
pop
cld
aam
std
jp
and
adc
ret
arpl
out
out
imul
ljmp
into
and
in
mov
enter
mov
jae
data16
sub
in
jnp
xor
and
int
cmpsb
pop
cmp
mov
sbb
fisubrl
movsb
pushf
jge
aas
lret
les
daa
inc
addr16
outsb
int3
xchg
inc
push
mov
in
fbstp
push
fwait
inc
inc
aaa
add
xor
pop
xchg
sbb
int
fcmovne
in
or
sub
mov
inc
or
push
xorl
pop
xchg
in
ror
xchg
push
nop
outsl
jnp
insb
jae
push
xor
iret
mov
mov
ret
test
or
mov
dec
push
aad
cmp
xor
mov
or
shll
mov
aas
sub
mov
adc
call
pop
ljmp
jmp
dec
into
xchg
into
cmp
loop
js
sbb
ret
insl
pop
in
sub
adc
shr
jbe
in
mov
sub
xor
pop
in
aaa
ja
push
out
mov
inc
int3
pushf
roll
sbb
andb
ja
push
inc
fimuls
mov
dec
mov
sbb
jb
stos
gs
mov
xlat
call
popa
out
xor
inc
adc
ret
adc
leave
or
enter
mov
daa
cmp
push
xchg
int3
inc
ret
incl
push
mov
dec
pop
jecxz
mov
movb
inc
jb
test
imul
fimull
aam
test
insb
push
out
daa
popf
adc
mov
add
ja
mov
mov
pop
jns
jnp
xchg
mov
or
sub
mov
xor
jae
xor
jo
mov
arpl
add
rcll
out
mov
fwait
inc
popf
inc
divb
repz
sbb
es
popa
cltd
mov
repz
mov
mov
cltd
push
push
ret
popa
mov
inc
icebp
dec
xor
and
xchg
mov
mov
push
xchg
int
pop
jecxz
dec
mov
add
nop
pushf
sub
xchg
sub
int
pop
cmc
int
pop
std
xor
pop
xchg
jp
cld
lea
cmp
mov
pop
pusha
mov
cmp
mov
xchg
dec
and
ss
xlat
aam
cltd
mov
mov
sub
xor
push
or
xor
cmp
xor
ds
out
cmp
xorps
out
int
jg
rcl
xchg
and
jmp
xor
roll
push
mov
sbb
mov
mov
dec
cmp
xchg
xchg
es
mov
or
icebp
cltd
sub
push
iret
stos
shlb
sub
adc
loopne
stc
sub
mov
mov
les
subl
cmp
outsb
inc
ffreep
push
fwait
aam
aad
jo
mov
push
xor
add
push
mov
sub
sub
inc
xchg
loopne
das
ret
enter
jecxz
stc
orb
cmp
jns
xchg
rolb
xchg
sbb
jp
decb
push
xchg
scas
int
popf
cmp
cmp
mov
dec
dec
sbb
jecxz
das
pop
cli
cld
pushf
push
sarl
sbb
loopne
dec
jae
movsb
ud1
aas
and
sub
pop
inc
or
pop
xor
add
sbb
cltd
jns
hlt
push
push
ret
or
call
div
fistpl
mov
cmp
jbe
push
lods
les
or
lahf
adc
js
push
lahf
cmpl
mov
ret
imul
pop
shlb
fmuls
imul
enter
test
inc
push
test
fwait
mov
mov
add
cmc
sti
and
fwait
xor
sahf
push
rcr
popa
pop
aas
sub
push
lret
mov
push
jae
mov
xor
daa
mov
outsb
and
pushf
pop
dec
stc
mov
test
add
mov
add
into
xor
bound
or
shll
adc
sahf
cwtl
pop
mov
xor
sti
add
and
dec
mov
mov
mov
int
inc
ja
add
push
inc
cmp
mov
and
les
push
xor
inc
adc
mov
shll
pop
imul
enter
sub
add
jbe
mov
sbb
xor
adc
jg
jecxz
mov
and
outsl
cwtl
dec
pusha
and
and
push
es
sahf
test
dec
aaa
daa
icebp
dec
inc
pop
inc
pushf
cmp
iret
sbb
cs
repz
xor
cmc
push
dec
mov
lock
mov
jmp
push
arpl
mov
jb
call
lret
inc
and
mov
enter
cmp
inc
out
stos
xchg
lret
xlat
ljmp
test
jle
test
pop
adc
inc
mov
cmp
loopne
jnp
test
adc
mov
inc
les
xchg
xchg
pop
sub
xlat
fiadds
pop
adc
dec
mov
cmp
add
ret
or
or
hlt
aam
ret
dec
push
mov
xor
in
mov
cmp
stos
ror
mov
adcl
pushf
sub
ret
cmp
xchg
push
or
test
sbbl
arpl
sbb
push
imul
je
push
test
inc
testb
mov
dec
mov
add
and
ror
jne
pop
out
sbb
pop
mov
pop
out
incb
jae
loopne
pop
cld
cmp
and
jmp
xor
jg
jbe
xor
sarb
inc
cmp
sub
leave
jno
call
aaa
popf
je
je
jl
xchg
jge
in
xchg
jnp
xchg
xchg
add
ja
push
mov
ret
in
jno
sub
cmpsb
iret
stc
fdivl
cmp
repz
mov
imul
cmp
testl
shr
or
cli
xor
dec
fbstp
cmp
out
sahf
repz
fucomp
pop
ret
in
cmpsb
dec
and
fists
mov
sbb
inc
sbb
and
sbb
insb
inc
sub
test
xor
jno
sub
mov
sbb
pusha
mov
fucom
xor
es
test
sub
pop
cmpsl
mov
add
push
jge
add
or
popf
add
push
lods
mov
sbb
mov
mov
addr16
jmp
inc
pop
push
or
mov
jns
loope
jp
mov
into
cmpsl
cmc
sub
movsl
fs
xchg
rol
leave
ja
ret
int
mov
xlat
sti
fcoms
mov
cmp
adc
pop
es
ja
stos
popf
lahf
pop
pop
jge
sbb
in
xor
inc
fsubs
aas
in
sbb
inc
jnp
pop
xlat
decb
aas
pop
mov
int
fimull
iret
out
xor
call
mov
inc
push
cmp
stos
divb
rclb
xchg
iret
inc
cmp
xor
mov
fisubs
push
mov
adc
lds
mov
int3
push
xor
mov
leave
pop
mov
dec
or
mov
jb
jae
push
sbb
mov
ss
cmp
sub
mov
jle
in
das
jge
int
mov
jnp
pop
xor
inc
xor
adc
pop
movb
adc
push
cmp
pop
jno
xor
push
lods
inc
mov
mov
mov
outsb
xchg
xor
xchg
std
sub
adcb
cmp
outsl
sub
jo
jae
mov
adc
fcmovu
es
cmc
stos
xor
add
and
sbb
cmpsl
xorb
mov
xchg
aad
pop
mov
loop
addl
lock
xchg
dec
add
jle
pop
gs
push
js
push
ret
pop
addr16
adc
stos
rolb
sbb
insb
pop
aam
cmpsb
inc
nop
mov
adc
insb
sbb
gs
mov
push
inc
pop
fdivs
lods
sub
lret
loope
mov
ljmp
shlb
cmp
movsb
xor
dec
imul
and
leave
xchg
add
mov
lds
jecxz
mov
pop
push
jns
xor
xchg
nop
ss
ret
dec
jmp
fimuls
adc
mov
mov
loope
cli
xor
add
dec
into
movsb
fmuls
jl
pop
or
jg
or
lea
cltd
in
push
lret
or
and
bnd
dec
scas
fildl
movsb
mov
pop
push
push
add
ror
mov
imul
test
jp
adc
das
call
aam
xchg
push
jb
jnp
lods
imul
fwait
cltd
test
ss
jge
mov
jne
xchg
int
add
pop
cmp
lods
lds
in
stos
xchg
mov
xor
lahf
push
mov
jmp
xor
mov
bound
jle
scas
decl
jns
cmp
gs
dec
push
cmp
insb
pop
mov
inc
shll
pushf
dec
pop
iret
push
xor
push
lret
leave
cmp
sub
sub
lock
pop
leave
cmp
cltd
mov
jle
dec
inc
push
das
lret
push
mov
clc
mov
add
push
cmp
in
push
in
rorb
pushf
ja
cmpsb
mov
xchg
mov
ja
test
popf
inc
in
hlt
xchg
lcall
out
mov
das
movsb
mov
je
mov
pop
push
imul
mov
test
daa
push
add
pop
movsl
mov
push
fdivl
jo
int
aaa
cmc
xorb
add
pop
add
jno
mov
into
icebp
inc
inc
push
inc
outsb
xorl
push
fwait
in
or
adc
pop
push
mov
daa
fcoms
pop
das
jbe
fs
mov
push
test
pop
cmpsb
es
clc
popf
in
fs
mov
sbbb
sbb
mov
mov
push
ss
xchg
sbb
mov
jle
mov
push
negl
repz
jecxz
xchg
xor
dec
xor
lock
sbb
push
fisttpll
push
push
pop
mov
jmp
fstps
es
repnz
push
aas
leave
xlat
mov
adc
aas
dec
cwtl
jmp
out
rcrb
ret
cmp
in
ret
push
inc
adcb
subb
mov
scas
dec
xor
arpl
xchg
sarb
mov
jmp
xorb
sbb
mov
push
popa
gs
mov
jecxz
dec
mov
or
mov
cmp
inc
sub
fildl
mov
gs
sbb
or
es
mov
pushf
push
dec
sahf
test
sarl
mov
inc
xor
jo
sub
cmpsb
xor
arpl
jmp
cltd
mov
jl
ss
dec
lods
call
pop
or
cld
push
jecxz
lock
shl
ffreep
mov
mov
std
adc
xlat
xchg
out
mov
insb
iret
shr
fwait
adc
pop
xor
xchg
in
lods
hlt
jmp
lods
lods
sarl
sub
jmp
xchg
insb
jge
mov
mov
inc
push
push
cs
inc
add
xchg
jmp
pop
xchg
pop
push
das
cmp
rcll
mov
leave
sbb
cli
inc
cmp
int
fmull
int
push
call
std
xor
push
xlat
sbb
push
mov
test
notb
xchg
mov
mov
repz
lods
sbb
clc
add
jecxz
stc
push
popf
stc
call
in
pop
inc
adc
pop
mov
mov
lahf
into
pop
mov
aam
pop
mov
das
lods
aad
adcb
sub
add
lcall
push
imul
jbe
into
cmpsb
orb
sub
inc
lahf
sub
mov
push
mov
mov
bsf
sub
clc
jge
and
hlt
and
pop
xor
adc
inc
push
sbb
xlat
sub
sarl
je
in
adc
xchg
and
and
in
lcall
inc
outsl
adc
fildll
subb
mov
jecxz
mov
mov
icebp
loope
mov
hlt
aad
sub
les
pop
mov
popa
push
cmp
push
lcall
mov
dec
jge
or
jns
enter
ss
hlt
popa
ja
mov
inc
add
jbe
fildl
andb
ficoms
ret
cmc
enter
test
ds
ja
ret
mov
and
xor
inc
mov
inc
dec
add
add
jae
incl
and
push
loope
lret
imul
push
rorl
shlb
sahf
cmp
mov
jno
fnstenv
xor
hlt
sbb
sub
mov
iret
and
scas
lcall
and
nop
add
stos
lock
inc
mov
push
sbb
repnz
dec
xor
mov
push
fxch
fisubs
inc
inc
or
lea
and
dec
and
shlb
xchg
rcl
mov
mov
xchg
ret
inc
fsubs
or
add
cmc
cmpsl
cld
xor
aad
cmpsl
push
out
ds
shl
fistpll
push
loop
in
mov
add
or
adc
pop
mov
add
xchg
cmp
xchg
loopne
jbe
loope
dec
mov
imul
push
or
cmp
pop
loope
xor
lods
and
fs
mov
ds
imul
cmp
inc
ds
xchg
jb
inc
dec
sub
sbb
insb
dec
xchg
xchg
lcall
dec
fisttpl
push
jecxz
cmp
pop
std
addr16
push
xorb
pop
fists
scas
ds
call
iret
adc
shll
sar
adc
fidivs
sbb
sbb
in
pop
sbb
and
aam
mov
sub
sbb
aad
aaa
fisubrl
rorl
pushf
jp
xor
sbb
xchg
lret
mov
sub
aaa
pop
imul
push
mov
push
cmovs
cld
inc
mov
arpl
sbb
and
in
test
jo
dec
pop
jae
xchg
andb
scas
aaa
cmp
xchg
aad
push
inc
and
fisubl
leave
jo
iret
leave
sbb
push
jge
sbb
mov
cs
int
push
push
imul
sub
pop
fsubrs
dec
add
sub
adc
pop
rol
sub
cs
xor
push
mov
sbb
mov
dec
or
mov
popf
adc
inc
std
mov
jbe
js
and
add
cmp
imul
mov
push
test
dec
ret
clc
mov
jno
pop
mov
icebp
outsb
fistps
and
inc
push
mov
sarb
les
insl
add
lret
jne
cmp
mov
es
addl
sahf
cld
inc
insl
fcoml
sbb
push
or
sub
jmp
orb
sub
xor
jecxz
cltd
lods
pop
clc
mov
or
lds
mov
pop
jecxz
xchg
out
pop
js
inc
xchg
enter
cmpsl
jecxz
repz
mov
ret
dec
add
icebp
or
es
shrl
sub
adc
nop
subb
add
xchg
or
lret
inc
addb
sti
leave
xor
mov
jp
xchg
testb
je
lret
sub
mov
or
int3
mov
or
add
adc
push
push
or
in
std
inc
or
fdivs
fiaddl
jmp
and
push
xchg
jge
mov
mov
inc
ret
cmp
out
push
add
into
mov
mov
add
cli
xor
int
xchg
push
xlat
push
hlt
mov
xchg
in
arpl
pop
cmp
incl
sbb
push
rorb
add
cmp
ret
xchg
ret
jmp
ds
push
push
loope
das
jmp
mov
pop
sbb
jo
cs
pop
inc
adcb
aas
mov
xor
clc
dec
cmp
popa
cmp
pusha
fcoml
loopne
mov
inc
ror
sbb
icebp
xlat
cmp
jne
sub
cmp
xor
cmp
inc
aaa
cli
test
adc
dec
mov
sbb
clc
enter
jns
and
pop
inc
dec
loop
sub
sbb
es
shl
aad
jno
xor
clc
cltd
mov
cli
sbbl
leave
and
js
fldl
mov
or
int
push
movsb
out
rolb
push
xor
insb
pop
int
repnz
sbb
hlt
int
pop
fcmove
hlt
das
push
and
push
mov
cmp
add
mov
clc
pop
mov
stos
inc
pop
cmp
jp
aam
pop
das
inc
clc
shlb
faddl
adc
enter
insl
movsb
call
jg
inc
sti
shrl
into
les
mov
lds
push
je
xor
mov
and
inc
xor
cmp
fsubrs
data16
xor
in
mov
mul
adc
iret
adcb
jae
clc
outsl
push
insl
or
data16
cltd
ss
loop
pop
mov
jp
mov
sbb
daa
sbb
jg
pusha
ret
jg
xor
out
int
cmp
jge
or
sub
inc
fwait
data16
sub
inc
xor
dec
arpl
add
cmp
push
cmp
sub
test
mov
jp
and
nop
mov
pop
dec
imul
fcomps
xlat
cs
xchg
jnp
jl
mov
test
jmp
ss
xlat
ret
jmp
cmp
negb
cmpsb
xchg
hlt
mov
fcmovb
jns
push
ljmp
movsb
cmp
jmp
mov
mov
ss
xchg
jecxz
das
pop
icebp
jge
dec
popf
scas
sbb
cld
xor
adc
cmp
jb
imul
ljmp
rolb
ret
sahf
scas
jmp
or
and
nop
call
mov
and
fstpl
fwait
adc
mov
mov
popa
mov
xor
mov
inc
xorl
cmc
sbb
xlat
or
popf
jecxz
mov
sbb
push
or
mov
adcb
cmpsl
sti
xor
cmp
lret
insb
mull
mul
add
cld
test
aaa
dec
test
ss
inc
les
mov
xchg
outsb
out
inc
lods
mov
jp
xchg
invd
adc
lock
mov
pop
push
pop
or
je
mov
jle
push
hlt
jg
pop
xor
stc
dec
mov
lods
mov
repz
addr16
hlt
dec
test
sub
push
dec
in
push
pop
out
mov
pop
insb
lret
xchg
mov
inc
dec
jle
jmp
pop
push
out
adc
jb
dec
mov
dec
stc
cwtl
cwtl
cmp
outsb
cmpsl
stos
xlat
add
repnz
or
jbe
or
xor
in
es
xor
sahf
jg
gs
mov
pop
mov
cld
fists
add
xor
mov
xchg
xchg
int
addl
push
xchg
test
dec
out
pop
addr16
sub
jae
jp
lock
cli
scas
dec
subl
lret
filds
clc
jl
popa
cmp
dec
jmp
push
dec
sbb
sub
jecxz
jmp
xor
test
outsl
jecxz
or
testl
loope
mov
xchg
mov
adc
xor
inc
fsub
push
out
or
jns
popf
mov
adc
or
imul
xchg
ss
push
int3
js
je
pop
movsb
les
dec
fwait
mov
push
inc
ret
cmp
mov
and
ret
push
inc
xor
lret
test
outsb
inc
call
jno
jmp
mov
ljmp
inc
add
jl
sbb
cmp
and
inc
int3
aaa
das
mov
push
test
movsl
lods
mov
push
clc
sub
cltd
and
scas
outsl
rolb
cmp
push
push
fs
xchg
aas
push
adc
mov
mov
dec
pop
lock
add
push
add
int
pusha
dec
xchg
inc
push
addr16
decl
nop
fdivl
nop
adc
add
jp
clc
lods
aam
loop
out
cmp
scas
jp
in
dec
pop
shl
xchg
fucomip
idiv
add
pop
loope
daa
cmp
mov
int
imul
in
jo
adc
adc
pop
jae
lcall
dec
xor
into
cwtl
scas
mov
lret
aas
xchg
and
cmp
push
lahf
jle
loop
cmp
aam
pushl
push
sub
daa
js
popa
sbb
xchg
lret
in
adc
or
add
jnp
inc
dec
out
and
sub
dec
xchg
fstl
xchg
mov
push
mov
jne
repnz
outsl
xor
xor
divb
std
mov
mov
xor
sub
out
test
jp
xchg
pushf
sti
mov
sbb
stos
popf
dec
hlt
pop
sbb
mov
stc
popa
arpl
jge
lahf
test
dec
xor
mov
stos
lahf
and
adc
popf
aaa
fs
mov
fs
mov
jmp
stos
cltd
sahf
xor
outsb
out
jno
repnz
mov
shl
lret
test
into
push
aam
outsb
cwtl
cmpsb
jge
loopne
sti
scas
enter
imul
dec
jno
arpl
aad
nop
rol
data16
and
or
icebp
and
xor
out
and
pop
mov
jecxz
jns
pop
cmpsb
int
out
xchg
test
pop
xchg
inc
dec
adc
cli
cmpsb
sti
lcall
cmp
inc
pop
mov
daa
adc
decl
les
mov
xchg
sub
or
sahf
xchg
push
push
cs
dec
mov
sub
out
ss
je
arpl
dec
sarb
or
into
cmp
xchg
or
jle
cmpl
sarl
std
jo
popf
sub
or
add
aaa
mov
addl
mov
cmp
popl
push
cld
dec
push
mov
fs
dec
outsb
or
sti
push
xchg
pop
popa
or
call
clc
test
in
or
into
ret
adc
out
lods
lcall
mov
int3
loopne
cmp
jp
mov
add
jmp
jbe
sub
and
jecxz
faddl
scas
mov
adc
mov
mov
add
cmp
cmpb
mov
sbb
arpl
jp
cmp
je
jne
pop
mov
pop
sbb
add
xorb
sbb
mov
inc
add
cs
popa
insl
lock
test
sub
iret
into
mov
adc
mov
mov
outsl
mov
loop
or
mov
add
enter
arpl
inc
movsl
leave
data16
aam
sbb
fstpl
loop
shr
or
push
and
xchg
dec
ficompl
fs
xor
sub
insl
xor
imul
xlat
push
loop
test
add
jnp
dec
scas
pop
jno
push
repz
jnp
ljmp
pop
inc
inc
xor
outsb
mov
mov
mov
loop
bound
iret
lock
cmpsl
subb
daa
cmp
aas
gs
adc
sbb
fsubrl
xchg
ljmp
mov
jp
repnz
dec
xor
loop
insb
mov
mov
mov
push
shll
dec
push
add
aam
jge
mov
sub
xor
ja
and
inc
pop
and
xor
pop
inc
test
aam
jge
mov
in
ret
jle
cmovns
xchg
push
sbb
dec
inc
jb
dec
cmp
dec
outsl
jmp
xor
iret
lahf
inc
dec
sti
pop
mov
sub
mov
xor
xchg
pop
jne
ficomps
aaa
fimull
call
out
daa
cmp
jmp
sbb
mov
jo
cltd
leave
dec
cmovge
pusha
rcrl
add
xchg
not
fdivl
mov
push
adc
mov
push
aas
notl
add
mov
pop
lock
movsl
or
das
push
dec
dec
or
xchg
mov
add
mov
iret
jne
dec
ret
aad
mov
sbb
push
sbb
mov
bnd
fbstp
insl
gs
lods
rcll
pop
sti
into
lahf
add
jb
push
push
lea
cli
push
mov
xchg
loopne,pt
mov
arpl
add
pop
mov
nop
das
inc
pop
lods
fistpl
mov
jl
mov
loopne
int3
test
jp
shl
das
incb
xor
test
pop
paddq
cli
sub
cltd
pop
scas
repz
movsb
into
fldenv
aam
lock
mov
sahf
bound
hlt
sub
lret
pop
out
sahf
movzbl
loope
ficomps
mov
adc
ljmp
mov
xchg
push
mov
cs
dec
shr
push
mov
and
cmc
or
jmp
daa
sub
stc
pop
xchg
mov
add
sbb
aaa
fistpll
lea
movsb
std
add
call
das
and
mov
xor
fnsave
push
sbb
stos
xchg
sbb
mov
lcall
repnz
or
push
push
sarb
shll
mov
cltd
and
push
and
pop
movsb
jno
push
call
sub
push
ret
lea
cmpsl
adc
mov
sub
lcall
cltd
ret
xor
mov
and
jg
push
or
addr16
out
jnp
pop
push
stc
dec
ds
cmp
xchg
xor
sahf
sub
and
inc
scas
mov
xchg
mov
lcall
pop
jns
repnz
loopne
ret
sub
and
mov
addr16
negb
movsb
test
or
das
cmp
out
scas
dec
ret
mul
repz
aad
xchg
sbb
inc
decl
cmpsb
push
and
shll
mov
mov
xor
pop
das
pushf
jmp
mov
and
sbb
incl
xor
leave
addr16
jmp
push
pop
xor
stos
outsb
popa
mov
sub
add
xchg
jl
fistpl
push
sarl
adc
out
out
movsb
xchg
outsl
mov
mov
dec
jb
outsl
inc
jmp
arpl
mov
loope
dec
sahf
pop
push
fildl
das
jno
pop
sti
rol
jnp
mov
jne
aaa
pushf
push
stc
inc
or
pop
idiv
push
loop
hlt
addr16
sub
jle
mov
jp
sbb
sub
and
aad
ljmp
sets
and
lahf
insl
or
psllq
mov
xchg
or
addr16
icebp
int
insl
idivb
xlat
adc
and
scas
sahf
out
adc
ficoml
adcb
sbb
and
imul
aaa
jbe
out
mov
pop
add
mov
dec
addr16
mov
movsb
int3
pop
pop
sarb
iret
jo
cmpsl
imul
cli
pop
es
hlt
addl
sbb
fistpl
and
data16
xor
mov
das
lods
ret
dec
adc
xchg
inc
lods
jle
scas
clc
or
xor
cltd
inc
das
mov
mov
jns
xchg
mov
sbb
test
pop
stc
sbb
aaa
xchg
pusha
in
dec
pop
neg
dec
push
sbb
fildl
repnz
shlb
dec
dec
test
and
outsl
pop
mov
shl
icebp
mov
std
addr16
push
sub
push
movsb
in
in
xchg
xor
inc
inc
shl
and
fcompl
add
fstpl
popf
add
into
pushf
iret
rcrb
push
movsb
loopne
shrb
mov
dec
mov
lahf
push
add
or
movsb
ret
pinsrw
cltd
hlt
leave
and
pop
xchg
and
mov
js
bound
gs
xor
jmp
movsb
push
stos
jl
and
jmp
sbb
jbe
dec
pause
sbb
xlat
inc
loope
pop
jno
push
xlat
and
movsb
xor
sbb
gs
lahf
cld
push
jecxz
mov
aam
pushf
cwtl
outsb
adc
pusha
ret
data16
or
leave
xlat
inc
inc
iret
dec
push
mov
inc
and
inc
xor
nop
pop
lds
mov
add
test
je
xchg
and
dec
adc
adc
addr16
cmp
add
dec
push
not
das
addr16
push
pop
aad
push
xchg
sbb
sbb
xchg
pop
daa
aaa
pushf
rol
fwait
pushf
inc
mov
sub
js
addr16
hlt
mov
movsb
pushf
sub
int3
das
into
repz
push
sbb
roll
lock
cmp
mov
aaa
dec
aas
jmp
kmovw
push
js
es
and
arpl
and
loope
ret
xor
jo
jmp
mov
ret
nop
mov
outsb
xchg
pop
mov
pop
aam
mov
jnp
inc
ljmp
dec
clc
adc
and
cmc
in
idivb
add
jno
addb
iret
inc
xchg
pop
repnz
bound
sbbb
pop
aad
inc
jae
in
push
lods
inc
adc
jno
push
out
sbb
mov
outsl
test
ds
shrl
push
sbb
scas
mov
jecxz
ficompl
xlat
pop
loope
and
push
loopne
imul
or
fsubs
mulb
xchg
xchg
sbb
push
cmpsb
inc
mov
mov
push
push
and
daa
cltd
lcall
jbe
mov
push
jp
mov
jle
mov
pop
leave
imul
xor
mov
aam
pop
pusha
movsl
and
cmp
jecxz
and
mov
mov
pusha
lods
cmp
test
jo
dec
sti
addb
sahf
fists
push
nop
lcall
pushf
lea
faddl
sbb
dec
pop
icebp
imul
mov
or
vmwrite
jecxz
inc
lods
pop
fistl
xchg
cli
or
bsf
adc
add
jnp
and
push
mov
aam
adc
xlat
sub
outsb
inc
inc
mov
rcll
mov
shll
lods
test
pop
sbb
lea
dec
mov
inc
lret
sbb
out
pop
sub
xchg
roll
pop
pushf
or
pop
add
inc
xchg
shrb
xchg
xchg
jecxz,pt
scas
sti
in
cmp
loopne
cltd
rol
scas
xchg
js
out
xchg
pop
cmpsl
clc
les
cmpsb
fisttpll
jge
xor
cmp
pop
fstps
loope
push
mov
inc
arpl
mov
in
ja
outsl
sbbb
or
inc
sahf
cmpsl
lds
mov
js
push
ss
mov
pop
and
pop
imul
leave
mov
call
xor
add
add
mov
out
incb
hlt
test
dec
loop
and
out
sbbb
dec
sbb
push
dec
or
dec
adc
or
mov
popa
sahf
dec
mov
int3
mov
jge
sub
icebp
jnp
mov
into
add
rorl
aaa
inc
aas
outsb
mov
addl
inc
dec
repz
sub
jmp
dec
les
and
pop
loop
cli
xor
dec
mov
in
dec
ficoms
outsb
add
push
dec
sub
jl
pop
jmp
or
inc
in
cltd
fists
fwait
and
fists
insb
rclb
pop
sub
sub
adc
cmp
ja
insl
jns
dec
xchg
ficoms
xor
add
insl
into
pop
in
and
mov
and
and
jl
lret
add
fists
mov
es
jp
and
mov
push
outsb
ret
mov
push
imul
adc
or
inc
mov
cmpsl
pop
into
test
std
jne
inc
rclb
mov
insb
imul
hlt
xchg
or
and
xchg
pop
mov
daa
loop
daa
es
aaa
fldt
into
pop
ds
or
jnp
mov
sub
lcall
lcall
add
jle
push
xchg
insb
outsb
ja
std
in
enter
lcall
push
mov
gs
xorl
xor
xchg
mov
mov
xchg
jns
imul
pop
cmp
aaa
or
cmp
ja
pop
negb
mul
sub
or
push
add
aad
loopne
aas
xor
xor
add
int
dec
loop
sbb
mov
xor
sti
into
sub
arpl
xchg
jl
in
sbbb
mov
dec
jl
jmp
test
cmc
hlt
in
xchg
sub
rcrl
xchg
cmpsl
cmpsb
and
jge
lcall
sbb
pop
cmp
mov
fnstsw
jne
mov
popa
push
mov
mov
sub
lret
inc
cwtl
js
mov
sub
ljmp
outsl
push
dec
xlat
sub
pop
cmp
push
lea
iret
js
pop
dec
xor
pushf
out
cmp
lds
xchg
fistpl
add
xor
imul
dec
or
lea
ds
sbb
ja
int
jbe
sarb
movsl
dec
or
dec
or
inc
or
shll
test
imul
ds
out
cld
sbb
jbe
xchg
in
in
cli
dec
ret
xchg
dec
sarl
pusha
xor
pop
adc
fistpl
xor
out
xor
jge
stos
mov
xchg
jo
push
mov
xor
pop
pop
aas
push
sbb
sbb
leave
insb
inc
test
mov
js
sarl
push
testl
jle
jae
aas
ja
leave
fisubrs
int
insb
push
into
xlat
pusha
pop
clc
in
cmp
ljmp
repnz
insb
idiv
dec
jo
cld
dec
ja
clc
inc
jnp
fisttps
leave
stos
or
cmp
fcoml
sbb
movsl
adc
inc
je
cmp
xchg
aam
insb
into
or
xchg
sub
push
imul
sub
imul
and
inc
jle
std
cltd
push
rclb
dec
outsl
mov
jbe
lds
das
sub
cmp
fistpll
push
pop
mov
push
xchg
add
pushf
dec
dec
cmp
aam
loop
mov
jge
cltd
xorl
sti
mov
and
dec
mov
lahf
stos
mov
jno
mov
data16
dec
xorl
sub
dec
add
stc
shl
out
sub
dec
popa
arpl
xchg
mov
mov
pop
push
ds
pop
divl
sbb
sbb
mov
or
int
insl
aad
out
pushf
bound
jp
ficoml
or
add
imull
xor
cltd
shll
sbb
jecxz
sub
dec
ds
fstpt
jae
jae
push
aad
bnd
fidivrl
rclb
or
or
lds
pop
inc
inc
setp
mulb
outsb
orl
aad
std
les
push
lea
pop
push
jno
mov
cli
out
sti
or
imul
cltd
dec
adc
push
sub
fwait
and
sub
sub
cmp
ret
xchg
xchg
cmp
or
insl
es
cli
fisubrl
in
or
mov
push
or
ret
jmp
mov
or
jp
pop
aaa
add
jmp
jmp
test
lods
mov
xchg
out
ds
mov
xor
jbe
divl
mov
std
jle
push
and
std
adc
cwtl
mov
xchg
nop
sbb
test
aas
xchg
negl
adc
push
cli
loop
data16
fbld
out
insl
add
xlat
insb
inc
mov
and
fwait
dec
cld
outsl
adcl
mov
and
add
jbe
mov
sub
sbb
mov
fbstp
mov
test
test
mov
sub
or
iret
in
mov
fcmovnu
pop
xchg
mov
repnz
mov
push
ja
and
adc
in
lret
lret
into
lods
push
roll
jns
mov
pop
dec
mov
jne
add
aaa
sbb
popf
inc
mov
mov
jno
push
ret
and
mov
push
xchg
or
sarb
mov
and
xchg
add
pusha
int
iret
adc
or
pusha
mov
mov
cmp
mov
cmp
xor
fwait
inc
lcall
push
rol
jb
in
ds
out
rolb
cmp
test
pop
call
sbb
stc
lcall
ret
push
jne
ljmp
ljmp
rorb
dec
lcall
mov
ret
test
movsb
cld
fdivl
sbb
mov
and
jo
fisubrl
and
iret
fwait
pop
mov
das
movsb
mov
cmpsb
jecxz
test
add
int
xor
xor
imul
dec
inc
ds
nop
icebp
lods
sbb
leave
pop
dec
lahf
mov
std
xlat
xchg
push
dec
mov
xchg
and
dec
jbe
leave
xchg
or
adcb
sbb
negl
aas
add
or
cltd
ljmp
xor
adc
stc
mov
lock
out
rcl
mov
jno
cmp
xor
into
pop
jge
mulb
fsubr
lods
mov
push
xchg
mov
repz
or
loop
fwait
mov
aad
into
add
mov
xor
iret
aaa
inc
push
ja
test
sarb
cmp
or
repz
mov
cld
sub
xchg
xorl
pushf
out
cmpsl
push
enter
lret
cltd
fisttpll
call
iret
cltd
in
push
pop
pop
pop
loopne
xchg
jne
lcall
inc
negb
add
sbb
in
lea
inc
adc
dec
and
aad
lcall
inc
call
or
pop
mov
enter
jae
pop
mov
xchg
lret
inc
push
stc
pop
cmp
jge
pushf
pop
shld
jg
xchg
sahf
sarl
aad
cmpsl
aaa
and
mov
or
add
mov
imul
xchg
addr16
cmp
xchg
cmp
and
cltd
or
sti
movsl
jnp
xor
mov
bound
mov
xchg
jle
mov
cmpb
test
sbb
lea
loope
cmp
lock
cwtl
shll
adc
and
nopl
shlb
call
clc
aad
mov
jnp
movsb
mov
xchg
mov
xchg
in
fcoml
jle
out
shll
mov
data16
jnp
fsubs
mov
dec
imul
aas
jmp
mov
mulb
inc
lods
ret
push
notw
or
enter
outsl
pop
pusha
rcr
jnp
hlt
ret
or
icebp
insb
int3
mov
pcmpeqd
lret
lods
cld
imul
pop
add
neg
clc
outsb
fadd
pop
jmp
hlt
shll
cltd
testl
scas
jae
or
xor
cmp
loopne
cmp
xor
fwait
sbb
test
cltd
xchg
fidivrl
insb
fmul
je
out
ljmp
loopne
dec
adc
mov
push
std
js
xlat
aad
loopne
push
scas
pop
or
mov
cld
push
push
push
lock
sub
out
or
in
jb
jp
pop
push
mov
idivl
jnp
add
rclb
stc
add
shl
imul
push
lock
insb
in
pop
ret
icebp
jne
sarl
js
daa
rorl
loopne
push
push
int
pop
sub
mov
ret
xchg
push
pop
leave
out
mov
cld
out
jo
lcall
jle
fidivrl
or
cmp
les
es
dec
add
loope
push
cmc
das
xor
dec
mov
xor
sarl
clc
in
dec
call
inc
js
dec
insl
jns
or
cmp
xlat
mov
dec
sahf
xchg
xor
jg
lcall
and
std
lods
add
cmp
loope
xor
test
lods
scas
stc
or
and
ficompl
dec
lcall
insb
sub
test
sbb
mov
daa
dec
lahf
movsl
out
push
inc
lock
sbb
mov
lcall
into
lcall
in
push
inc
mov
insl
add
jle
adc
mov
sub
xor
jnp
push
pop
mov
xor
add
xor
cmpsl
sbb
rorl
jbe
jae
enter
scas
mov
adc
fwait
shll
stos
add
jae
dec
or
dec
fwait
inc
iret
loopne
or
rorl
lds
roll
push
pop
daa
aam
lds
aas
fcmovnbe
jmp
dec
imull
aam
mov
dec
outsb
nop
test
or
lds
push
mov
aam
pop
aaa
vmovsd
adc
mov
jge
daa
call
mov
inc
push
enter
pop
dec
inc
sub
dec
fs
lds
insl
jb
or
mov
push
rol
mov
fbstp
dec
cmp
inc
loopne
movsl
iret
jae
jnp
mov
mov
adc
test
add
push
ficomps
jno
fadd
lret
out
mov
cmpl
fs
add
shl
popa
int3
lea
ficompl
cli
or
push
fistpll
push
mov
ret
add
popa
cli
lds
push
les
sbb
jp
or
mov
nop
fistpl
js
sahf
xchg
jnp
aam
gs
stc
test
push
or
mov
xlat
dec
repnz
sar
ja
xchg
or
stc
repz
dec
dec
mov
mov
jbe
ds
dec
js
adc
roll
and
push
and
inc
test
sub
or
inc
cmp
into
mov
xchg
or
test
out
push
lret
sbb
jg
ds
and
orb
or
adc
gs
mov
jl
push
js
stc
sbb
lcall
cwtl
popf
push
lret
adc
jp
rcrw
xchg
wbinvd
inc
pcmpeqd
mov
rcl
sarl
sub
pop
test
xchg
leave
shl
call
enter
cmc
test
rcrb
pop
sub
jecxz
popa
dec
pop
int
dec
jno
mov
mov
xor
fistpl
xor
loopne
cmp
and
inc
mov
iret
test
or
pop
out
inc
xchg
pop
inc
stc
pop
xor
or
test
dec
scas
andb
cmp
adc
add
cmp
xor
mov
xor
push
movsl
jmp
push
jp
and
mov
or
into
xchg
loop
fadds
bound
addr16
add
inc
add
push
inc
and
sarb
pop
test
cmp
fwait
shr
xor
arpl
pop
fnstenv
lods
rorl
mov
jge
mov
sub
mov
or
in
jp
mov
cmpsb
nop
sarl
add
inc
sbb
pop
adc
or
cltd
dec
daa
loopne
leave
lret
das
jp
sbb
test
js
arpl
cmpsb
push
punpcklwd
ret
in
aas
dec
iret
inc
fists
push
xchg
fsts
icebp
mov
inc
jns
and
movsl
fildll
mov
imul
push
or
pop
mov
int
flds
subb
dec
scas
push
xchg
test
pop
mov
jecxz
je,pn
into
mov
pushl
inc
add
jno
cmp
cmpsl
adc
add
push
stc
aam
mov
jbe,pn
inc
xlat
mov
jae
push
mov
dec
or
mov
add
cmc
dec
inc
outsb
pop
xchg
repz
aaa
mov
test
out
or
inc
filds
repnz
and
ficomps
bound
xchg
push
rorb
out
les
add
jbe
enter
cwtl
lock
arpl
and
enter
add
jo
xchg
push
insb
incb
mov
push
neg
xchg
add
enter
test
sbb
xchg
loop
jo
or
pusha
clc
lret
cmpl
mov
push
adc
mov
push
popf
sbb
testl
fsubrl
shll
and
mov
push
popa
jmp
mov
dec
sbb
dec
stos
les
insl
stc
fs
rolb
lcall
pop
insb
inc
aad
jns
in
cs
jmp
inc
xchg
mov
pusha
cmp
mov
pushf
and
jmp
dec
dec
hlt
sti
pop
fwait
sbb
push
frstor
test
pop
sbb
jge
jge
mov
sbbb
ficompl
xchg
cmp
xchg
sub
inc
jno
outsb
jge
and
loop
das
adc
outsb
add
aaa
and
in
dec
pop
xchg
xor
xor
sub
out
icebp
xchg
adc
fstpl
aam
in
rclb
mov
push
lret
lahf
mov
or
push
mov
mov
nop
sbb
sub
and
sub
mov
dec
sbbb
or
pushf
adc
mov
icebp
push
or
or
imul
icebp
mov
pop
lods
adc
and
xchg
lret
lahf
mov
or
pop
mov
test
xchg
cmpsl
sub
adc
and
into
fisubrl
mov
jb
mov
mov
vmovd
sbbl
stos
adc
movsl
push
outsb
or
push
subl
shrl
xchg
sub
jge
mov
cltd
mov
sbb
or
dec
mov
mov
sub
test
orb
mov
dec
stc
dec
adc
popf
adc
xchg
jge
and
test
mov
mov
mov
sub
rclb
sti
fcmove
mov
ret
xchg
push
movsl
lods
test
ds
fiadds
or
mov
out
leave
dec
jmp
push
pop
pop
imul
stc
filds
sub
mov
push
leave
dec
leave
dec
movsl
lods
in
dec
pop
inc
sbb
mov
sub
adc
adc
loope
movaps
imul
sub
fisttpl
mov
lahf
jge
fcompl
mov
cmpsb
or
and
imul
hlt
pop
clc
push
out
pop
jnp
mov
sbb
idivl
or
stos
sub
lods
jecxz
test
jp
fbstp
in
dec
push
out
filds
ret
scas
xchg
add
mov
cld
test
jmp
mov
ficompl
push
mov
or
imulb
xor
leave
or
lods
mov
out
adcb
mov
icebp
jp
imul
test
in
xchg
or
test
fbstp
inc
jl
fdivr
hlt
cmc
insl
loopne
xor
push
mov
push
out
loop
push
jnp
pusha
or
jg
test
outsb
pop
inc
icebp
xchg
push
pop
stc
push
mov
pop
jo
mov
and
xor
out
addb
jge
mov
mov
mov
jg
imul
or
pop
cmp
xor
out
or
xor
xchg
mov
fnstsw
xor
jnp
and
cli
dec
mov
js
or
add
or
xor
lods
test
ss
int
lock
cwtl
add
mov
fwait
test
out
mov
xor
stos
rcr
sbb
movsb
xor
fadd
jle
adc
jne
rcr
test
ret
xchg
lods
mov
mov
fisttps
arpl
mov
nop
jne
push
push
and
stos
and
lahf
cltd
sbb
out
jmp
lea
fimuls
movb
pushf
mov
jns
pushf
cmpsb
add
jle
jg
add
inc
loope
cmp
xchg
add
test
decb
or
dec
outsl
inc
repz
jp
cmpsb
dec
xor
out
adc
xlat
push
enter
js
notl
xor
imul
aaa
push
xlat
int3
sub
xor
adc
test
dec
jmp
insb
imul
ds
xlat
addr16
in
add
ret
cmp
dec
xchg
popf
stos
mov
add
mov
xchg
cmc
xlat
dec
inc
xchg
aam
push
jb
lahf
cmp
mov
cmp
jnp
rolb
jno
inc
scas
xchg
in
and
cli
and
pop
in
jle
jmp
sti
or
inc
sahf
gs
cwtl
repz
jecxz
test
mov
adc
dec
int
div
bound
xchg
push
icebp
push
dec
aaa
push
pop
xchg
addr16
inc
mov
sub
push
ds
xchg
push
data16
subb
daa
mov
popf
jle
mov
gs
push
stc
jae
push
mov
cwtl
sbb
int
inc
pop
rcll
mov
daa
mov
lcall
addr16
test
stc
es
sub
add
lret
inc
adc
mov
xor
cmp
fisttps
mov
adc
inc
pusha
xor
xchg
lahf
sub
lcall
test
lea
outsl
pushf
clc
insl
loope
and
addr16
lds
out
icebp
inc
sbb
or
arpl
call
cmp
push
fs
clc
inc
jb
mov
sub
je
sub
test
fidivrs
int3
xor
popa
jb
cmc
bound
lcall
ljmp
btr
adc
shl
xor
jle
ja
clc
std
cmpsw
lock
insl
pop
idiv
pop
outsb
mov
rorb
mov
mov
inc
xlat
shlb
inc
loope
dec
outsb
imulb
std
jmp
xlat
jno
mov
les
dec
fisttps
mov
shrb
aad
call
mov
push
int
bound
rcr
ret
mov
push
addr16
sub
add
adc
je
mov
repnz
mov
sbb
jecxz
mov
or
popa
jge
lock
lds
lds
push
imul
rorb
pop
push
mov
cwtl
leave
xor
xchg
push
test
push
lret
orl
mov
push
lock
iret
loop
mov
stc
cmp
inc
pop
jbe
es
dec
mov
adc
cs
bound
outsb
lret
push
mov
mov
lods
gs
push
add
and
popf
inc
fs
mov
jmp
emms
xchg
adc
pop
pop
inc
pop
sub
lea
xorl
add
jl
sarl
pop
test
inc
cld
push
in
dec
adc
orl
int
or
or
jmp
sbb
pop
jge
je
mov
mov
pop
loopne
mov
cmp
bound
enter
int3
in
stos
insl
pop
xchg
sbb
hlt
decl
loope
mov
sbb
lock
push
jp
mov
insl
inc
xchg
xchg
ljmp
xchg
mov
scas
add
xchg
xchg
lods
xor
insl
std
sti
shr
mov
pop
lcall
pop
adc
mov
pop
mov
lods
cmp
lea
iret
sbb
lret
or
inc
sub
ds
jge
and
repz
fidivrs
icebp
loope
mov
roll
loopne
loope
and
sub
xchg
sub
cmp
xor
push
popa
pop
dec
inc
jb
enter
in
pop
idivl
pop
cmpl
push
sbb
push
lret
pop
mov
push
xor
into
push
enter
mov
shlb
push
mov
das
bound
call
mov
mov
sbb
dec
sahf
fstpt
add
jecxz
push
adc
sub
cmpsl
scas
shll
sarl
test
leave
xchg
inc
mov
popf
gs
jge
adcl
lea
mov
loopne
add
loope
scas
cmp
push
sbb
in
out
xchg
cli
pop
jmp
adc
fsubs
dec
ficoml
subl
cmp
mov
ror
mov
imul
es
jne
in
pop
imul
ret
push
insl
cli
add
mov
ja
jns
out
dec
lock
sarl
mov
std
rorb
fistps
mov
and
xor
stos
pop
inc
jnp
pop
jno
xlat
push
cmp
mov
outsb
std
out
stos
add
adc
xlat
mov
bnd
sti
call
pushf
imul
jne
idivl
push
icebp
adc
sahf
addr16
cmpsl
inc
inc
pop
add
dec
shrl
cmc
mov
and
or
call
outsl
push
repz
push
in
fstps
test
xor
add
std
sbb
ljmp
xlat
cli
mov
mov
dec
sbb
out
in
movsl
jno
xlat
pushf
and
add
loope
dec
mov
xchg
sarb
add
inc
lret
dec
aas
inc
fisttpll
gs
adc
iret
scas
lods
inc
jo
jns
movsl
insl
sub
in
out
mov
int
shll
dec
jl
adc
pusha
mov
cli
jno
loop
mov
jo
sbb
and
push
movsl
sbb
sub
lret
movsb
out
imul
lret
rol
rorl
lret
or
jo
or
subl
mov
cmc
insb
xor
decl
dec
and
jb
lcall
lock
notb
fadds
ret
adcl
outsb
inc
ljmp
dec
lret
into
mov
sub
ljmp
aad
jle
mulb
shrl
ljmp
hlt
imul
outsl
pop
jp
mov
daa
fbld
jg
jmp
jmp
xchg
or
sub
cmp
sub
and
sub
xchg
xchg
fisttps
in
cmp
jno
dec
add
pop
test
divl
or
aam
dec
adc
cli
call
mov
mov
in
dec
cmp
je
aad
fcoml
outsb
jnp
fwait
in
fwait
or
mov
push
icebp
mov
imul
lcall
lds
xor
fists
jno,pn
shl
mov
push
pop
out
sub
lret
dec
hlt
mov
inc
notb
mov
mov
adc
insb
stos
xor
int
inc
lret
sbb
mov
daa
fdivrs
ret
xchg
lret
es
xor
adc
cld
cld
out
insb
test
fisttpl
mov
std
jmp
outsl
push
push
ret
lods
xor
lds
test
or
mov
sti
ljmp
lret
or
pop
incl
std
xchg
fidivs
dec
xchg
imul
insl
aad
lahf
test
mov
fmul
dec
dec
sub
pop
fsubl
leave
popa
fs
adcl
les
shlb
mov
push
mov
enter
mov
inc
out
cmc
jmp
push
cwtl
add
dec
inc
and
jecxz
push
mull
or
pushf
in
xor
and
das
xchg
lock
test
pop
jnp
cmp
addb
ss
insb
push
stos
sbb
stos
add
xchg
ret
pop
jbe
jno
scas
in
leave
push
sbb
in
in
sub
inc
je
outsl
fsubr
dec
lods
pusha
push
jbe
lret
repz
adc
jg
lahf
pop
mov
jmp
and
loopne
iret
pushf
add
mov
lock
mov
jp
rcrl
ret
shl
mov
fmull
sub
shlb
dec
sbb
dec
out
inc
push
pop
cmc
dec
jmp
inc
sub
pushf
into
lcall
pop
jnp
vandnps
fwait
jge
lods
mov
jmp
rorl
fs
push
shl
iret
movsb
push
repz
aam
adc
sbb
cli
pop
jo
cmpsl
sub
shlb
jnp
push
dec
mov
jecxz
movsb
ret
and
pop
jp
sub
mov
ficomps
mov
mov
sbb
jecxz
mov
adc
sbb
mov
pop
push
pop
sbb
inc
xor
test
andl
inc
jo
mov
jle
push
mov
stos
inc
mov
and
andl
push
rcrb
cmp
test
sub
sbb
jmp
or
cli
enter
cmpsl
jne
xor
jae
cmpsb
fistpl
ljmp
test
push
sbb
lea
inc
inc
fcoml
inc
int3
pop
jns
push
aad
ja
push
mov
mov
lds
mov
imul
shlb
add
scas
jp
loop
adc
fldl
push
or
sbb
xor
rcl
fxch
mov
adc
fcompl
js
jne
mov
sbb
xchg
and
lods
dec
jl
mov
adc
sub
sbb
sarb
dec
imul
out
aaa
dec
into
shll
jbe
inc
mov
es
lret
out
shl
ja
or
out
jp
cmpsl
dec
push
jmp
push
sub
sub
test
fucom
sbb
inc
cmpsl
pop
xor
adc
shl
or
jnp
mov
inc
push
jns
inc
sbb
lods
pop
add
inc
and
jb
fcomps
add
les
mov
inc
jmp
test
rolb
mov
push
cmpsb
aad
fnsave
je
fstpl
mov
xchg
mov
rcr
jo
pop
sbb
pop
inc
ficompl
dec
mov
enter
outsl
std
xchg
mov
sarl
jb
loope
or
pushf
mov
imul
pop
xchg
sar
sbbl
jo
and
pop
or
xor
sbb
mov
ss
in
sub
test
push
arpl
stc
inc
xchg
mov
sahf
cs
mov
jne
scas
out
mulb
pop
sbb
jg
fldl
imul
sbb
inc
cmp
xlat
int3
dec
lret
popa
lea
jmp
or
and
mov
negl
sbb
adc
or
imul
sbb
adcb
xchg
inc
jnp
cmpsb
fisubs
xchg
pop
mov
cmpb
dec
arpl
sbb
push
sub
cmc
xchg
hlt
xor
sbb
fsubrl
sub
adcb
data16
repz
dec
call
lods
push
or
hlt
xchg
adc
lret
jno
cs
sub
loopne
sub
insb
mov
lret
mov
mov
std
sub
sbb
fwait
xchg
in
jecxz
inc
mov
sub
lret
ds
or
imul
or
pop
loopne
pop
enter
scas
call
cmpsl
push
test
adc
inc
sbb
fiaddl
pop
dec
mov
lcall
test
jge
pop
mov
xchg
cmp
daa
addl
dec
pop
ja
dec
push
jl
lret
mov
std
add
mov
aam
jle
sti
into
mov
xchg
push
lret
sahf
pop
xchg
aas
mov
sahf
xlat
pop
js
jns
out
cli
adc
adc
ss
xchg
out
repz
insb
adc
mov
mov
lret
sbb
pop
dec
sahf
add
xchg
punpckhbw
test
xchg
jnp
add
sub
addr16
dec
les
fimuls
sti
not
or
out
aaa
xchg
fs
repnz
sub
or
out
bnd
rcll
add
or
lea
jl
out
fs
mov
test
cmp
outsl
shr
or
arpl
dec
and
mov
addr16
jmp
inc
int
je
fsubrl
loop
cltd
adc
enter
mov
cmp
repz
popa
ret
jo
and
gs
in
mov
sub
dec
mov
fistps
insb
adc
dec
loop
jae
mov
jge
dec
shrb
cmpsl
insl
jnp
inc
push
jbe
rcll
and
sub
fildll
mov
lods
push
push
dec
inc
pop
push
test
pop
sub
jno
leave
shrl
mov
ljmp
test
ljmp
cmp
pop
inc
orb
cmpl
dec
push
pop
sbb
xchg
xchg
xor
xchg
fnstenv
fs
stos
mov
scas
adc
out
out
push
xor
data16
or
stos
cmpsl
in
movsb
cmpsl
pop
inc
xchg
in
lods
call
push
adc
mov
xchg
mov
adc
sti
push
idivb
out
ret
daa
lcall
xchg
jbe
jecxz
arpl
popa
mov
push
test
or
aas
test
popf
daa
dec
mov
rolb
mov
jne
xchg
call
mov
mov
cld
bound
mov
ds
ret
aad
mul
mov
xor
xchg
jb
sbb
add
pop
fwait
jne
inc
cmp
in
mov
fdivrs
stc
call
jp
lods
jmp
repz
movsb
and
mov
inc
adc
mov
movsl
ljmp
xchg
dec
jp
mov
adc
lods
out
sub
jae
rcll
cmp
mov
lcall
mov
outsl
jge
jne
xchg
fs
es
jecxz
sub
add
push
xchg
sarb
ret
popa
push
rorl
sbb
mov
sbb
xchg
into
jnp
int3
lret
lret
insb
pop
nop
into
cltd
dec
aad
test
dec
iret
xchg
jle
sub
pop
pop
pop
daa
mov
xchg
fnstenv
adcb
daa
and
cwtl
inc
outsl
jl
push
outsb
jbe
arpl
push
add
rolb
ds
fstpl
fisubs
shlb
jmp
outsl
lods
out
rorb
inc
mov
mov
mov
scas
imul
faddl
pusha
das
pop
lods
ret
push
pop
and
loope
stos
mov
imul
and
addb
out
repz
pusha
stos
inc
pop
sub
pusha
mov
in
xchg
into
je
es
cltd
adc
mov
roll
push
jecxz
adc
lods
inc
cmpb
pop
jo
ss
ja
nop
loop
mov
test
mov
scas
adc
and
adc
inc
xor
lds
movsb
pop
sbb
es
lahf
sub
jle
movsl
xor
mov
sub
sub
rcrb
cmp
xor
leave
xchg
rcrl
cmp
aaa
xchg
xchg
fstpl
mov
pop
imul
lods
gs
fnstenv
cmp
sbb
sbb
jp
scas
call
nop
jns
int3
imul
and
ret
inc
stc
ds
lcall
jp
push
add
cmpsl
mov
adc
repnz
orb
in
addb
or
in
sub
inc
mov
pushf
stc
jbe
scas
cmp
movsb
fisttpl
mov
sub
xorl
jnp
nop
or
or
inc
pusha
stos
mov
pop
lcall
clts
lcall
gs
add
lods
mov
lods
mov
mov
mov
jb
add
popf
call
push
xor
mov
pop
faddl
push
shr
xchg
dec
cwtl
mov
outsb
lcall
int3
lcall
cmpsb
xchg
fldenv
mov
mov
adc
xor
lea
sahf
jmp
push
add
je
lret
mov
or
lret
pop
fs
aaa
xchg
cmp
andl
and
xchg
and
iret
push
cmpsl
xchg
movsl
cmp
xchg
xchg
in
mov
pushl
dec
cwtl
sbb
fiadds
mov
mov
sbb
inc
and
cmpsb
mov
mov
ds
mov
test
xor
xor
roll
fs
fstpl
gs
adc
daa
lock
push
dec
xchg
fstpt
dec
push
xchg
lret
sub
dec
nop
fstl
or
jb
in
jecxz
or
mov
mov
test
and
test
xchg
pop
cmp
fiaddl
cmp
push
int
jnp
rolb
adc
lods
insb
xchg
sub
aam
push
cmpsl
xchg
movsl
cmp
xchg
and
leave
pop
and
dec
pop
cmp
test
sti
cmp
lcall
imul
jle,pt
fdivrl
xchg
mov
adc
or
adc
inc
cmpsl
ret
jb
sahf
popa
popf
out
out
xchg
sahf
pop
pop
repz
jbe
fdivl
add
cmpsb
fcomps
lret
jl
xor
push
dec
and
pop
loopne
mov
fcoms
jp
fmul
insl
out
cld
mov
das
outsb
fisttpll
ror
enter
mov
das
ds
stc
rorb
adc
ret
jb
sahf
popa
dec
in
inc
adc
movsl
andl
pop
outsl
push
out
dec
xchg
out
repnz
out
das
data16
sbb
jg
popa
test
and
inc
leave
mov
mov
call
push
int3
imul
test
ret
inc
shlb
jg
dec
sub
mov
mov
xchg
adc
pop
mov
rcrl
lret
sbb
pop
add
lret
sbb
loopew
pop
and
int3
jae
or
out
dec
lods
fcoml
aad
jbe
fadds
dec
int
mov
out
rcrl
pop
mov
mov
inc
lret
fcomps
jo
fucomip
and
xor
mov
std
dec
xor
sti
push
fs
xlat
or
outsb
inc
sub
das
aad
push
mov
fists
mov
fsubrs
in
std
insb
jbe
lret
fwait
lahf
push
mov
dec
jo
mov
jo
xor
clc
mov
ficoms
pop
and
cld
ror
jmp
push
jno
movsl
dec
movsb
mov
sbb
pop
sub
into
sbb
mov
inc
xchg
sub
add
and
fsubrs
or
in
call
or
ja
subl
add
pop
add
js
dec
xlat
sbb
push
rorb
pop
mov
fcoml
roll
push
inc
les
sub
shlb
sbb
lods
xchg
jecxz
sub
jns
cmpsl
mov
mov
mov
dec
addr16
popa
ficoml
fcmovnb
sub
out
sbb
loopne
es
inc
rcrb
sub
rcrl
rcr
inc
xchg
fldenv
xchg
ss
adc
mov
push
rorb
mov
jp
fdivl
sub
push
scas
jo
daa
movsl
ja
aad
mov
imul
push
ss
push
push
or
lahf
mov
adc
xor
jb
test
inc
stc
pop
sub
cltd
push
push
cmp
xchg
pop
pusha
lock
negb
dec
imul
xor
and
cmpsl
test
pop
jg
and
or
mov
sub
cmp
lds
addr16
push
xor
mov
inc
lret
dec
sub
jb
subl
xor
sub
mov
and
ffree
dec
jmp
pop
imul
mov
xorl
sub
data16
mov
fs
ds
jno
lock
hlt
mov
imul
inc
cmpsl
adc
fisttpl
ja
icebp
xor
mov
push
sub
fwait
popa
inc
adc
push
idivl
jmp
notl
enter
negl
lock
ja
lock
fs
fidivrs
mov
popf
insl
rol
push
lret
jl
cld
lcall
lcall
sub
sahf
jmp
mov
stos
jmp
inc
bnd
sbb
xor
cmp
mov
or
push
pushf
mov
xchg
dec
inc
and
jnp
xor
sub
push
stos
in
rorl
mov
fdivrl
shlb
adc
scas
jne
inc
or
test
call
mov
out
cmp
sarl
jg
push
push
popf
pushf
inc
js
mov
xchg
or
out
sahf
cmp
sub
sbb
or
test
pop
inc
xor
mov
lret
lods
in
push
mov
or
mov
push
add
mov
icebp
sbb
ja
ljmp
mov
mov
dec
ret
loope
in
fistpl
hlt
stos
xchg
mov
sub
xchg
xor
pop
inc
push
out
push
dec
add
and
dec
jp
pop
mov
dec
lret
cld
adc
in
mov
mov
sbb
push
cmp
adc
inc
xchg
jne
ja
loope
sub
adc
dec
add
loope
inc
jbe
mov
imul
repnz
or
inc
stos
scas
mov
fcomp
dec
shll
out
mov
pop
outsb
xor
aad
sub
decl
sbbl
or
or
sbb
push
sbb
xor
sub
sbb
fcoms
cli
sub
movsl
sub
cmp
lahf
cld
xchg
js
out
sete
rcl
rclb
sbb
dec
xor
das
or
sub
icebp
lahf
pop
lea
adc
dec
lcall
adc
mov
popf
sbb
xor
mull
xor
lock
mov
negl
pop
das
imul
jmp
lahf
aad
jecxz
in
pop
mov
das
cs
ret
pop
cmp
andl
push
aas
cmpl
add
lods
add
mov
stos
sub
adc
sbb
stos
mov
pop
xchg
xchg
outsb
sub
stos
sbb
stos
push
adc
mov
xor
mov
pushf
mov
mov
jmp
imul
rcr
lret
pop
xor
cmc
in
lods
jl
pop
out
je
scas
cmp
out
into
mov
in
inc
mov
and
insb
mov
imul
mov
aas
inc
push
icebp
pop
aam
rcrb
in
vminpd
mov
out
imul
insb
out
and
arpl
scas
adc
cli
sbb
mov
lret
or
out
popf
xor
sbb
out
push
mov
stos
sub
xchg
mov
inc
mov
imul
xor
adc
push
sub
in
and
imul
arpl
lock
mov
or
and
in
xlat
jge
push
mov
int
scas
mov
mov
std
pop
add
leave
push
or
shrl
ret
add
out
loopne
lods
std
sbb
rcrl
ljmp
sub
sub
gs
in
pop
xchg
je
pop
mov
cli
lret
or
pop
outsb
push
dec
sti
repz
cli
inc
lahf
insb
mov
arpl
sbb
xor
push
lods
stc
mov
shrb
dec
test
dec
xchg
push
out
das
push
push
cwtl
cmp
mov
enter
mov
sub
fimull
mov
sub
rol
xchg
loop
flds
aas
jecxz
sbbb
not
mov
mov
orl
stos
pop
mov
xchg
imul
sbb
test
rcll
mov
mov
out
test
ja
jp
outsl
lods
dec
daa
sbb
mov
adc
cmp
loop
stos
lods
out
rcl
xchg
mov
jmp
int3
repz
cmp
inc
fwait
mov
mov
add
jecxz
or
adc
xor
sbb
cmp
push
mov
test
mov
icebp
rol
fldt
loop
int3
dec
lock
or
sub
cmp
xor
arpl
gs
or
xchg
add
cli
out
xor
pop
xchg
jge
push
loopne
call
out
inc
imul
cmp
imul
sub
mov
jmp
fadds
dec
in
mov
mov
sti
shlb
outsl
mov
mov
adc
rorl
idivl
dec
push
push
mov
sahf
ret
in
jb
test
mov
sbb
mov
fstpl
xchg
ja
adc
cwtl
push
sub
mov
dec
insl
or
adc
ret
shll
leave
and
fwait
rcr
xchg
pop
loope
mov
adc
sbb
fstp
dec
movsb
insb
in
stc
sbb
push
sarb
and
ljmp
test
xchg
aas
cmpsb
sbb
inc
cmc
pop
adc
fwait
pop
fisubrs
xchg
icebp
lea
stos
push
aaa
sub
aaa
or
iret
lahf
xchg
pop
ret
pop
mov
fsubrl
lcall
xchg
js
out
mov
mov
mov
inc
testl
cmp
inc
mov
lcall
adc
jmp
and
into
adc
xchg
mov
jbe
cs
ja
push
sbb
lret
and
mov
pop
cmpl
int3
dec
cmpsb
test
jo
add
aaa
mov
fwait
xchg
mov
mov
pop
insb
enter
mov
pop
pop
call
push
jmp
mov
sub
and
call
xlat
fcmovbe
mov
imul
cmp
data16
or
ljmp
xor
dec
pusha
outsl
ret
mov
jae
pop
jno
mov
dec
jo
mov
add
ljmp
push
cmp
push
repnz
mov
and
pop
sub
push
shrb
shlb
mov
sub
outsb
out
dec
sub
js
sbb
mov
and
clc
lock
adc
sub
sub
fsubl
notl
jecxz
push
subb
cmpb
pop
pop
dec
sbb
push
lds
and
lods
fsubrl
pop
lods
movsl
das
dec
inc
cmp
int3
fdivl
xlat
test
xchg
dec
shlb
sbb
lcall
leave
lcall
pushf
mov
adc
rorb
dec
jnp
scas
scas
add
sub
pop
pop
or
cmpsb
sub
dec
and
out
nop
push
sub
mov
sub
xchg
fldl
inc
mov
popf
gs
add
inc
addl
test
mov
and
sahf
jmp
sbb
push
sarl
flds
or
dec
mov
jge
cmc
inc
orb
push
cmc
adc
lea
push
mov
and
lret
pop
push
adc
sub
mov
xchg
push
xchg
out
cmc
xchg
and
mov
mov
sbb
dec
mov
push
sub
popf
lods
jg
out
push
sbb
fisttpll
mov
mov
loope
push
xchg
lds
mov
mov
repnz
jo
xor
inc
mov
mov
sbb
jle
sti
jge
roll
pop
test
or
test
lahf
sti
and
cmp
into
mov
push
movsl
adc
push
pop
and
lret
jno
adc
jno
adc
adc
in
push
xor
mov
imull
push
fldl
or
dec
mov
cmp
ljmp
xchg
es
mov
sbb
out
mov
mov
test
mov
lret
leave
out
push
sub
mov
sub
xchg
fisttpll
inc
mov
popf
popa
es
jns
lods
lods
adc
lahf
mov
mov
add
in
push
push
test
sub
cltd
and
lret
mov
pop
mov
mov
xor
cmp
or
pop
std
mov
popf
xchg
es
lods
xchg
adc
mov
mov
mov
pop
sahf
loope
pop
lret
mov
mov
rcrl
dec
fnsave
sub
popf
lret
rol
arpl
mov
push
mov
in
push
jo
stos
imul
lret
and
negb
rcll
pop
aaa
mov
mov
sbb
jbe
out
pop
leave
push
jge
mov
push
sub
popf
scas
int
mov
test
xor
lods
mov
bound
scas
test
mov
lret
in
adc
mov
or
sbb
rcrl
xchg
mov
jg
add
loope
push
push
stc
and
jmp
push
mov
stos
sbb
fldl
mov
mov
sarl
test
mov
jbe
push
popa
adc
stos
add
and
xor
out
inc
stc
mov
mov
in
dec
inc
stc
ret
mov
mov
mov
and
lret
jmp
stos
mov
pop
sbb
out
mov
popf
add
xchg
mov
mov
and
fsts
dec
stos
icebp
dec
and
xchg
and
lret
test
push
mov
cmpsl
sbb
fstpl
mov
rcl
dec
test
mov
push
mov
dec
lds
imul
adc
addb
fsts
sub
add
outsb
mov
push
add
dec
test
sub
popf
scas
sarl
mov
sbb
jmp
pop
rcr
test
mov
push
and
xchg
mov
sbb
fstl
mov
lea
cmp
lods
mov
pop
mov
sbb
es
push
jno
fcompl
or
push
popf
adc
stos
mov
sbb
dec
and
lret
pop
pop
adc
sub
mov
or
lds
jg
loop
pop
sbb
stos
mov
push
dec
adc
stos
popa
dec
aad
jns
lods
push
sbb
sarb
loope
push
lods
stc
in
sub
push
sarl
fldl
add
mov
and
aaa
jge
fnstcw
mov
icebp
es
lods
mov
in
mov
mov
sbb
cs
iret
mov
adc
mov
and
sahf
fstpl
mov
es
xchg
mov
xchg
adc
cmc
dec
pop
push
andl
adc
sub
out
jno
or
sbb
shll
pop
test
mov
push
mov
in
push
dec
stc
push
insl
and
lret
add
adc
mov
add
lock
pop
xchg
jmp
xor
lock
xchg
mov
jno
subb
xchg
loop
imul
push
mov
push
lock
ss
dec
andl
fildll
mov
hlt
inc
pop
je
add
xchg
insb
mov
lods
out
pop
add
add
fbld
jnp
int
jl
int
cmp
lds
shlb
or
popf
and
fbstp
cs
pop
cmpl
aad
imul
sbb
mov
sbb
int
icebp
dec
lret
and
pop
sbb
outsl
xor
rcrb
jmp
int
xor
aas
inc
push
and
movsb
or
movb
loopne
mov
push
pop
and
ss
fdivrl
mov
jae,pt
stos
or
jo
ret
push
scas
xchg
lods
mov
mov
or
fists
adc
popa
fsubrl
imul
mov
jle
push
mov
sbb
iret
cmp
mov
inc
jp
mov
sub
mov
subb
icebp
mov
dec
cmp
fucomi
adc
mov
lret
scas
push
add
adc
xchg
xchg
sbb
sub
pop
int
outsl
out
insb
test
dec
orl
pop
dec
xchg
mov
jbe
lret
push
fidivrl
inc
aam
je
insl
leave
aad
lret
dec
movl
lds
jmp
pushf
push
cmp
pop
insl
push
aaa
enter
mov
bound
lret
push
mov
je
inc
shr
dec
movsb
in
sub
mov
inc
cmpsl
test
mov
jno
idivb
and
stos
aas
imul
or
aam
inc
push
subl
lret
bound
stc
test
and
jnp
jo
clc
mov
stc
rclb
xor
pop
and
and
mov
jmp
add
ret
dec
and
sub
jge
addr16
cs
adc
mov
rorb
rcll
sub
sub
lret
in
pushf
xor
int
push
ret
ret
rcll
mov
or
mov
imul
inc
lret
stos
sbb
stos
les
dec
xor
adc
sbb
jae
sbbl
and
mov
adc
fwait
dec
ret
xchg
adc
repnz
lret
xlat
push
pushw
stos
lahf
out
push
push
mov
mov
and
dec
jle
or
inc
movsb
leave
repnz
sub
addr16
and
xchg
xor
or
ret
xor
mov
push
jo
aas
ret
jne
stos
mov
dec
lret
cmpl
shlb
lahf
lods
xchg
sbb
mov
aam
arpl
cmp
and
or
xchg
push
cmp
xor
sub
out
mov
dec
aam
sbb
fstps
enter
sbb
fucomi
loope
and
adcb
jmp
fidivs
cmpsb
mov
mov
stos
testb
xchg
int3
sub
dec
sub
das
sub
shrb
or
data16
scas
imul
ljmp
and
sbb
mov
dec
xorl
ret
pushf
xchg
fsubrs
sub
fucompp
loop
add
push
sbb
fdivrl
in
adc
mov
leave
cld
xor
iret
add
loopne
fwait
test
testl
adc
imul
cmpsl
sbb
pop
or
mov
pop
sbb
fs
cmp
adc
and
dec
adc
aad
jb
pop
addr16
and
adc
pop
adc
sbb
int
nop
cwtl
mov
dec
in
and
mov
mov
xor
aad
push
fstl
das
xor
sbb
ror
mov
xchg
pop
movsb
jle
stos
scas
ja
test
add
push
lret
xchg
and
pusha
pop
sub
insl
insb
mov
in
jno
std
inc
int3
pop
lahf
inc
fidivrs
lahf
lahf
sub
popl
shll
cmp
sbb
sub
or
or
inc
mov
iret
mov
ret
outsb
pop
jle
test
sbb
mov
imul
fucomp
mov
adc
test
and
sti
test
jl
scas
xchg
and
lret
mov
rcrb
mov
rcl
push
push
scas
int3
sub
xchg
xchg
push
cmp
in
jo
and
js
enter
push
cmp
xor
ret
idivl
fbstp
xchg
mov
xor
ss
int
fcomi
inc
sbb
stc
insl
pop
mov
lahf
fwait
mov
jp
cmpsb
sub
fisttps
sbb
mov
pop
dec
gs
addr16
adc
es
insl
fs
and
mov
cmp
pop
xor
jo
repz
xor
dec
cmp
xchg
fidivl
jp
and
xchg
in
lahf
sbb
movb
test
pop
and
dec
cmp
cltd
mov
and
xchg
scas
js
push
aam
jmp
out
mov
stos
les
scas
inc
or
sarl
push
faddl
xchg
jns
xor
movsb
std
insl
adc
shrb
mov
jne
cvtps2pd
xchg
xchg
lds
imul
ffreep
cmpsl
fwait
hlt
push
adc
cli
and
mov
cmpsl
ljmp
sub
icebp
adc
cmpsl
dec
arpl
jmp
push
push
push
inc
rolb
jge
push
or
dec
into
fcmovnb
fsubp
jns
xchg
iret
cmc
mov
out
or
mov
bound
call
pop
fldcw
pop
in
sub
sarb
andb
cmp
sbbl
scas
cmp
stos
xchg
sub
sti
arpl
out
mov
sbb
or
mov
mov
dec
test
aad
cmp
xor
in
lods
pop
in
push
sarl
in
mov
xchg
push
cld
jns
stos
iret
mov
insb
mov
cs
cmpsb
sbb
test
or
mov
scas
or
mov
mov
pop
mov
int
pushl
es
push
aad
sbb
fadd
xor
push
sbb
adc
xor
lods
xchg
jl
sbb
lahf
cmp
ljmp
pushf
sbb
jbe
or
mov
les
add
in
adc
add
cwtl
inc
xor
push
fidivrl
add
jne
int3
pop
popf
out
enter
mov
nop
sub
imul
sub
inc
out
lock
xlat
pop
xchg
cmp
sub
aas
push
jge
gs
je
pop
pop
pop
or
mov
icebp
fs
lret
aaa
and
xor
movsl
iret
mov
sub
mov
jmp
call
out
popf
sbb
lds
jae
sbb
mov
mov
ffree
pop
push
jle
adc
movsl
sbbl
jne
push
adcb
in
or
sub
xchg
mov
pop
push
xorl
push
es
pusha
cmp
insb
imul
je
lea
outsl
ja
adc
insl
push
pop
cmp
jo
jg
test
push
idivl
jmp
movsb
and
out
cmp
xor
mov
fcomps
movsb
mov
sub
dec
dec
sub
dec
cmp
mov
xchg
scas
pop
mov
or
jns
push
shll
push
cmp
sbb
push
sbb
gs
stos
je
cs
adc
and
mov
insl
mov
aas
dec
mov
fadds
push
fidivl
aaa
xchg
int
jmp
jb
pop
dec
outsl
push
lret
lahf
jecxz
shlb
sub
and
sbb
mov
int
adc
mov
cmp
fwait
inc
mov
lds
lahf
dec
lret
xlat
jmp
and
mov
cmp
sub
leave
or
xor
jne
push
adc
out
lcall
fbstp
dec
xchg
cld
pop
cs
and
aad
jmp
jae
or
sub
xor
mov
rol
int3
dec
sbb
aad
popa
imul
dec
outsl
xor
dec
mov
shrb
rcr
adc
movsl
es
fildl
fs
dec
push
subb
pop
xchg
inc
aam
movsl
or
push
in
out
stos
aad
icebp
cwtl
rol
pop
adc
xchg
js
imul
sub
pop
outsl
and
adc
cmpsl
in
popl
mov
push
movsb
adc
insl
lahf
jmp
pminsw
cmp
mov
and
sbb
jle
sbb
xchg
subb
sub
or
imul
add
and
add
call
jmp
fcmovnu
add
enter
mov
pushf
xchg
xor
stos
icebp
fstps
ret
xchg
lahf
test
mov
imul
rol
inc
add
fdivl
in
icebp
sbb
cmc
cld
cmp
xchg
jle
rcll
imul
dec
or
into
fstpt
or
cmp
push
fstps
and
jp
inc
jnp
adc
imul
ret
adc
leave
add
mov
fldcw
mov
and
jno
jnp
scas
push
rdmsr
adc
cmp
jp
subl
and
movsl
mov
push
scas
add
test
testl
mov
aaa
push
into
cmpsb
adc
mov
jo
lahf
stos
adc
test
shlb
jne
push
int
add
fcmovb
adc
jno
or
arpl
sub
cli
lds
inc
int
sbb
insl
leave
repz
clc
push
sub
sbb
inc
inc
nop
lock
in
xor
sti
xchg
adc
fstpl
sub
loope
dec
pushf
lahf
xor
adc
sbb
out
sub
cli
mov
mov
leave
insl
scas
dec
lret
adc
popf
cs
fcompl
cs
cmp
push
xchg
push
push
and
or
mov
ss
mov
jae
and
movsl
into
xor
sub
fs
cmc
out
dec
sti
ds
pop
test
pop
je
imul
cmpsb
mov
aas
lods
fcoml
sbb
fisttpll
adc
push
cld
fcmovnbe
fisttpll
testb
nop
cs
pop
mov
dec
or
cmp
inc
dec
xchg
mov
in
cmp
sar
xor
dec
fxch
xor
call
and
outsb
inc
mov
pop
pop
pop
clc
push
lret
sbb
adc
lock
cmp
enter
aad
push
jne
imul
fcmovnb
idivl
push
int3
imul
cmc
rorl
loop
shrl
mov
aas
fmuls
stc
out
imul
mov
daa
mov
mov
insb
add
dec
jne
addl
loope
idivb
vmovsldup
xchg
xchg
mov
fmul
push
test
and
fnstsw
lahf
jo
lahf
int3
jae
mov
dec
int
jmp
loop
in
pop
fst
xorl
sub
into
test
fisttpl
addl
add
mov
push
push
adc
mov
sub
cli
add
sahf
sub
xchg
jae
popf
add
push
push
adc
test
je
pop
outsl
les
sbb
cmp
push
cs
mov
jnp
movsl
jp
int
xchg
fldcw
jne
movsl
and
dec
nop
iret
dec
adc
stc
mov
push
mov
out
out
mov
and
fisttpll
sbb
mov
out
sbb
jmp
pop
adc
pop
mov
or
std
lret
sbb
das
ret
jl
mov
inc
out
mov
push
cltd
jnp
lods
jne
inc
fndisi(8087
cmc
push
fnsetpm(287
pop
call
dec
mov
jmp
cmpsb
xchg
sub
fsubl
iret
fistpl
arpl
lds
pop
dec
mov
jb
scas
inc
mov
fcomi
fwait
stos
fisttpl
dec
or
sub
mov
aas
int3
adc
fucom
ja
or
test
xchg
movsb
ret
cmpsl
adc
aam
push
les
mov
ret
cs
dec
jb
dec
bound
dec
ds
xchg
into
lahf
mov
ljmp
fldenv
inc
mov
imul
and
gs
mov
pop
pusha
test
jp
imul
jge
push
and
out
inc
inc
out
sbb
pop
mov
lret
and
mov
stos
es
mov
test
adc
push
movsb
inc
inc
mov
gs
push
imul
mov
inc
sbb
xchg
sbb
push
icebp
rolb
test
out
mov
daa
pusha
shll
lret
jp
imul
test
push
and
inc
inc
stc
jge
sbb
cs
lcall
xchg
aad
push
imul
jg
cmpsl
stc
lds
je
mov
ja
push
stos
inc
inc
mov
pop
sbb
lret
daa
xchg
leave
sub
loope
js
xchg
test
mov
xor
pop
rorl
and
imul
fcmovb
sub
sbb
sub
push
pop
xlat
sub
mov
xchg
loope
mov
pop
xchg
push
sub
fidivrs
push
addr16
xchg
sub
orb
mov
cltd
push
mov
fwait
rorb
mov
popf
pop
mov
aad
dec
popa
mov
ljmp
add
jae
inc
lahf
imul
fbld
add
add
scas
scas
js
test
sub
inc
jecxz
mov
dec
imul
push
or
cmpsl
xchg
mov
incl
push
jge
push
dec
pop
mov
cmc
cmpsl
scas
mov
dec
cmp
dec
xchg
mov
nop
sub
ss
jge
hlt
jae
mov
and
mov
nop
adc
or
loope
mov
add
and
pop
jp
stos
xchg
scas
test
xor
or
cmp
out
stc
idivl
push
ds
inc
sahf
aam
dec
subl
add
stos
aam
xchg
jne
push
xchg
roll
xor
add
sbb
mov
ror
dec
inc
lahf
fwait
lods
cmpsb
call
inc
sbbl
xor
mov
sub
xchg
lret
xchg
or
xor
movsb
jle
sbb
adc
push
push
imul
ret
jge
mov
pop
in
cmp
xor
testb
addl
movsl
fsts
stc
push
jno
ficoml
imul
pop
into
cs
cltd
rcll
ds
mov
mov
cmpsl
andl
mov
cmp
cmp
adc
push
test
jg
adc
notb
sbb
add
jno
rolb
cmpsl
and
push
push
iret
jns
ds
mov
jo
test
sub
icebp
leave
test
dec
jne
popa
cs
fidivrl
xchg
and
push
mov
dec
std
push
gs
lret
jne
adc
jno
or
loopne
adc
mov
pop
repnz
imul
push
sbb
fstpl
mov
stc
es
mov
or
mov
mov
sbb
pop
mov
ret
sub
lret
add
and
fldln2
xor
pop
shl
jnp
repnz
inc
sbb
fnsave
mov
add
test
inc
loope
mov
mov
sbb
pop
mov
push
jge
movsl
stos
or
and
xorl
add
inc
popa
outsl
xor
out
push
sbb
into
mov
or
adc
xchg
mov
negl
jbe
call
stc
popf
popa
es
add
adc
mov
test
mov
and
cmc
sbb
fstl
fmull
ljmp
xchg
inc
cmp
pop
sbb
jle
sti
jge
std
push
pop
push
adc
insl
rep
mov
and
adc
pop
sub
ret
sub
hlt
add
clc
aaa
jge
test
pusha
mov
push
and
push
inc
jge
sub
xor
stos
mov
cmp
push
imul
add
cld
sar
aaa
stos
loop
daa
lcall
mov
stos
pop
cmp
js
sti
loop
mov
xor
jbe
xchg
and
call
popf
lods
push
cmc
xchg
pop
movsb
xchg
inc
and
pop
lea
aam
mov
fnstenv
outsl
mov
scas
outsb
adc
subl
cmpl
inc
xchg
imul
cmpsb
jmp
nopl
pop
sbb
jbe
cmpsl
add
insl
dec
sbb
pop
popa
nop
fdivl
xchg
lcall
push
fldenv
mov
cmp
cmpsb
outsl
jecxz
add
icebp
popf
and
std
sbb
ja
push
jnp
mov
js
ljmp
push
hlt
mov
imul
jmp
push
xor
push
dec
or
std
notb
mov
roll
insb
scas
add
clc
cmp
mov
cs
mov
xor
in
adc
es
xor
stos
in
cmp
or
sbb
pusha
or
orl
fimull
mov
sbb
loopne
or
das
push
cmp
fisttpl
adc
xor
dec
jbe
leave
pop
insb
in
mov
cld
sub
sub
aad
adc
inc
push
inc
cmc
sub
stc
int
leave
pop
xor
loopne
out
push
and
pusha
ljmp
jns
and
sahf
jne
or
push
nop
push
negl
xor
add
xchg
push
jmp
dec
adc
xor
and
lea
or
sarl
std
jnp
pusha
lea
mov
jp
push
pop
mov
rcr
pusha
gs
shll
scas
aaa
stos
out
dec
mov
aaa
lret
cwtl
test
adc
lock
test
dec
cmp
leave
loope
xchg
stos
aad
dec
xchg
cmpsl
pop
notb
bound
aaa
inc
nop
nop
es
ficompl
call
xor
sub
xchg
ja
and
leave
mov
mov
xchg
mov
mov
or
inc
iret
xchg
push
inc
into
sbb
repnz
into
mov
cs
pop
lods
push
sub
call
xlat
fnsave
sti
repnz
sbb
test
cmc
ret
and
movb
push
int3
cmp
xor
inc
pop
or
fcoml
jbe
mov
loopne
scas
repnz
dec
push
xchg
and
jne
jb
test
ficoms
and
rolb
xlat
sti
hlt
lcall
fsubs
jp
add
lods
js
jp
mov
or
adc
pop
sarb
stos
or
dec
hlt
stos
mov
inc
pop
out
xor
lret
out
in
out
pop
popf
cltd
fptan
fs
xor
jbe
sub
aaa
hlt
inc
cli
pop
cmpsl
or
jbe
dec
rclb
or
repz
mov
jecxz
out
call
insb
push
push
adc
adc
xor
test
mov
mov
push
ljmp
test
je
add
stc
dec
mov
adc
gs
sbb
insl
imul
std
das
imul
or
int
pushf
test
or
xor
jo
add
mov
dec
movsb
stos
sbb
fimull
std
loop
cmp
inc
gs
sub
ret
add
push
mov
or
mov
dec
mov
pop
xchg
cli
pop
mov
mov
jae
ja
jne
icebp
jno
jns
mov
adc
ja
repz
dec
mov
gs
xchg
or
cwtl
and
lret
stos
push
or
ss
cmp
movsl
sti
js
enter
mov
faddl
rcrb
dec
xchg
sub
pop
dec
into
lret
subb
and
outsb
lret
mov
std
adc
jns
clc
adc
or
add
jbe
xor
and
outsb
dec
enter
jno
add
mov
sub
fcoml
or
fimull
fmuls
mov
dec
out
xchg
lds
lret
push
testb
sbb
sub
xchg
push
xchg
arpl
lds
daa
leave
mov
xlat
lods
sbb
jbe
ja
jmp
fisttpl
test
fistpl
dec
adc
sbb
roll
mov
shl
inc
xlat
lods
lods
pop
adc
xor
jb
cmpsl
jne
iret
sti
sbb
pusha
jp
sub
ret
push
out
xor
dec
xchg
mov
enter
pop
and
std
hlt
nop
jbe
or
mov
bnd
mov
hlt
jmp
jb
gs
mov
mov
lock
dec
push
pop
pushf
and
aaa
xstore-rng
cmpsl
add
je
dec
mov
ss
call
mull
es
loop
das
cmpsl
subb
push
pop
leave
data16
push
dec
and
nop
pushf
xor
pop
xchg
sub
nop
mov
push
add
sub
inc
push
push
out
in
in
hlt
mov
xorb
adc
sub
push
rcr
lods
push
mull
add
shlb
shll
lock
cmp
in
mov
push
dec
adc
nop
xor
xlat
or
inc
fsubr
dec
jns
stos
adc
inc
out
clc
mov
or
shrb
int
sub
fnsave
fildl
sbb
sub
pusha
movsl
xchg
mov
jge
mov
testl
add
addr16
ret
ja
andps
call
lea
notl
popa
cmc
sbb
cld
repnz
out
outsb
xchg
mov
sbb
ja
loop
mov
imul
add
daa
shrl
add
arpl
stos
jbe
add
decb
and
and
arpl
or
xor
out
arpl
pop
push
faddl
mov
in
adc
push
mov
ss
push
pop
stos
out
sar
imulb
cmp
push
jno
or
rcr
jne
cmc
adc
cwtl
dec
std
cld
add
pop
fidivl
push
mov
insb
lds
js
push
sti
and
pop
outsl
or
jb
scas
mov
sbb
mov
in
arpl
mov
pusha
or
push
xchg
cmp
fdivp
rcl
je
or
cmp
sub
mov
lret
outsl
and
leave
lret
sarl
xchg
int3
insl
sub
lock
cld
cmp
xorl
dec
and
out
sub
xchg
popl
scas
jl
out
dec
test
pop
dec
clc
arpl
cmpsl
std
mov
pop
lock
stos
xor
hlt
fcmovbe
mov
decl
loopne
mov
adc
mov
test
mulb
shr
fdivrs
cmp
pop
cmpsb
int
jnp
lods
icebp
cs
scas
cmp
inc
or
cmpsb
enter
dec
daa
insb
cltd
mov
xchg
and
faddl
dec
or
lods
insb
mov
aad
and
fsubrs
mov
dec
cwtl
inc
cmp
stos
xchg
dec
lods
rcrl
xor
and
std
push
jmp
cmp
push
mov
ss
dec
fwait
xchg
mov
addr16
popf
adc
rorb
adcb
dec
shrl
cmp
xchg
out
inc
xchg
jg
lahf
push
popa
bnd
dec
addr16
rorl
or
ret
in
adc
mov
sbb
and
es
dec
pop
pop
sbb
insl
push
jbe
mov
movsb
xchg
adc
mov
mov
loope
push
aaa
lods
inc
addr16
jle
rolb
push
dec
cmp
cli
data16
test
dec
outsl
aam
add
inc
xchg
dec
pop
xor
mov
enter
cmp
mov
mov
adcb
in
pop
adc
pop
jle
sub
add
ret
mov
aam
pop
push
xchg
adc
lcall
adc
push
push
movsb
and
jmp
xchg
sub
scas
lret
stos
adc
xchg
loop
incb
xor
jne
pop
in
or
mov
repnz
les
arpl
pop
movsl
stos
push
pop
lods
das
cld
or
out
fists
movsb
icebp
and
jecxz
push
mov
or
sub
js
dec
adc
xchg
cmc
popf
inc
lahf
imul
aam
add
xchg
popf
imulb
rol
jmp
fwait
loope
sub
mov
push
jl
pop
cld
dec
ret
xor
push
fimuls
stc
movsb
orl
js
add
fldl
nop
jne
insb
cs
dec
mov
xchg
popf
nop
xor
lods
cmp
mov
fdivr
sbb
fstl
mov
sub
cmp
push
lahf
pop
jecxz
fwait
in
movsl
stc
dec
push
cld
loopne
sub
sbb
idivb
les
mov
mov
adc
pop
fsts
fwait
jno
add
andl
fmull
sub
mov
hlt
mov
fstpl
iret
dec
mov
scas
stc
and
fidivs
inc
rorl
gs
mov
cmp
mov
js
jo
cmc
mov
push
std
fists
ljmp
xor
mov
aaa
mov
inc
fdivl
xchg
fisttps
in
sub
push
mov
aaa
fs
decl
and
pop
in
and
fwait
lret
fidivl
nop
mov
push
inc
adc
adc
mov
stos
scas
pop
stos
pop
lcall
ja
lea
mov
idiv
jl
xor
inc
test
fstps
xor
or
push
leave
xor
lea
xor
insb
push
jecxz
dec
cmp
pop
repnz
push
add
jnp
ja
push
mov
xchg
arpl
scas
push
pop
cmpsb
mov
and
mov
sub
mov
sahf
lahf
cmpsb
push
xlat
lock
popf
lea
pushw
daa
xor
mov
sub
test
outsl
inc
xchg
je
and
dec
roll
xor
clc
dec
inc
cwtl
int
xor
fstp
mov
or
andl
mov
das
icebp
mov
xchg
jo
lret
xchg
in
sub
lahf
xchg
adcl
pushf
dec
roll
in
sub
fidivl
cli
xor
mov
pop
icebp
subl
cld
repz
pop
jg
mov
xchg
sbb
sbb
mov
ret
pop
stos
xor
push
lret
xor
xor
shrl
je
dec
fwait
stos
mov
cmp
push
mov
jmp
test
leave
adc
mov
test
cmp
dec
filds
dec
push
insb
jecxz
das
add
inc
push
ljmp
sbb
lea
imul
xchg
mov
xchg
cmpsb
cmp
sahf
xor
mov
aaa
insl
pop
arpl
sbb
push
add
push
mov
mov
jne
xchg
sub
push
mov
xchg
or
mov
mov
or
jae
add
cmp
lret
xor
lahf
test
sbb
adc
and
push
scas
xchg
mov
mov
pop
movsb
mov
adc
xlat
inc
lods
jbe
cmp
testb
js
push
pop
pop
pop
sbb
movsl
jne
mov
lahf
lds
push
cmp
es
jmp
push
push
shrb
push
repnz
movsb
sti
stos
mov
sbb
stos
and
pop
mov
test
into
cmp
push
or
and
push
sbb
jae
ja
dec
cs
jne
dec
and
jbe
rcrb
jmp
outsl
lahf
push
xchg
lock
xor
lds
mov
aad
push
or
jg
mov
js
out
gs
ds
int3
int3
cmp
enter
sub
jno
dec
loopne
outsb
xor
mov
outsl
and
jbe
fiadds
pop
jbe
outsb
pop
js
test
in
adc
xor
jle
mov
icebp
cs
into
dec
popa
call
movsb
mov
out
sub
rorb
xor
jmp
push
inc
dec
icebp
data16
dec
das
xor
adc
lods
out
sub
into
aad
dec
lcall
jl
addr16
in
add
xchg
push
mov
into
jge
fcmovu
or
jne
cmp
add
adc
cmpsb
add
stos
dec
cs
call
xor
sub
leave
stos
xor
pop
ficoms
rorl
pop
add
xlat
push
xor
stos
push
or
push
adc
push
fcompl
lds
and
adc
rclb
sbb
jne
or
push
bound
movsb
cmp
xchg
roll
jne
mov
pop
xlat
pop
mov
jp
fiadds
loopne
jnp
sub
gs
scas
subl
dec
xchg
js
es
jmp
push
sub
adc
or
cltd
push
cmp
adc
mov
inc
andl
loopne
jno
add
dec
inc
adc
jl
pop
nop
fbstp
shll
jge
xchg
push
cmp
idivb
pop
sbb
fnsave
lea
add
lods
mov
mov
sbb
inc
mov
push
and
dec
lcall
repnz
mov
jmp
xchg
sub
adc
jle
sti
test
mov
push
jge
mov
push
and
mov
cmp
or
in
dec
stos
std
dec
and
xchg
and
add
xchg
jecxz
data16
jne
fstpl
and
and
jge
jge
loope
push
stos
stc
dec
sub
xchg
and
lret
lods
mov
or
cmpb
sbb
fistpll
movsl
popf
or
xchg
subl
aad
jns
loope
dec
icebp
xchg
and
adc
adc
test
mov
push
imul
lods
push
adc
mov
xchg
cmpsb
xor
frstor
inc
lret
in
into
adc
mov
mov
pop
sbb
jmp
popa
xchg
leave
lods
jge
movsl
mov
sbb
or
xor
mov
lret
test
mov
push
mov
sbb
pop
and
lret
imul
cmpsl
jno
or
lds
test
adc
pusha
or
stc
es
xchg
xchg
cmp
cmpxchg
out
rcl
test
mov
push
adc
mov
push
xor
ja
subl
es
loope
dec
lods
icebp
xchg
and
das
mov
mov
sbb
jbe
out
shrl
or
push
mov
lret
shrl
xchg
push
jno
or
fnsave
lea
or
mov
inc
icebp
shll
cmp
mov
jge
xchg
push
cmp
rcr
push
xor
mov
push
lea
xor
test
jp
ljmp
push
out
jno
or
sbb
mov
mov
sub
mov
cwtl
jno
nop
inc
sbb
stos
mov
push
mov
sbb
pop
and
lret
insl
dec
adc
sub
mov
xchg
sbb
faddl
dec
jecxz
lods
xor
fstpl
mov
andl
add
mov
mov
sbb
dec
mov
push
adc
mov
push
xor
gs
in
mov
stc
es
xchg
xchg
cmp
pop
mov
mov
sbb
pop
mov
push
or
mov
push
xor
subl
es
loope
dec
lods
icebp
inc
pop
cmp
sahf
rcrl
test
mov
push
pop
adc
stos
imul
lret
sbb
adc
or
inc
xchg
dec
jno
fldenv
inc
lret
cmc
adc
sub
or
sbb
cmc
popf
pop
es
xchg
mov
mov
push
imulb
push
xor
mov
push
xchg
adc
push
mov
data16
sub
jno
or
and
es
leave
lds
js
xor
or
pop
cmc
mov
test
sub
lods
movsl
inc
or
mov
mov
sbb
push
mov
push
adc
mov
aaa
jge
fnstcw
fldenv
inc
jmp
inc
sub
adc
xchg
push
popa
adc
stos
jno
movsl
push
or
push
adc
or
add
or
in
into
adc
mov
or
sbb
sbb
push
xchg
stc
lods
popa
inc
leave
mov
mov
test
mov
lods
int
std
data16
rcrl
lret
jge
xor
stos
lods
dec
adc
lret
push
data16
sub
jno
or
sbb
add
mov
mov
aad
jno
push
jmp
mov
daa
sub
or
sbb
std
popf
gs
jno
fldcw
mov
mov
addl
addr16
mov
dec
sbb
add
movl
stc
xlat
mov
mov
sbb
xor
push
xor
sbb
fsubs
nop
push
jge
pop
push
adcl
cmp
mov
jp
jecxz
mov
push
or
sbb
mov
and
xchg
rcrl
and
jge
jns
loope
push
stos
std
dec
and
lret
movsl
xchg
adc
sub
or
sbb
fstps
sbb
xorl
insl
stos
aad
jge
loope
push
lret
std
mov
mov
add
sbb
push
mov
popf
gs
jne
mov
mov
adc
push
xchg
xchg
jns
in
inc
push
dec
mov
mov
sbb
xchg
mov
push
push
adc
stos
gs
int
jne
add
adc
jno
or
sbb
jne
fstp
adc
sarb
cmp
stos
fstl
lods
mov
movl
stc
xlat
mov
mov
sbb
sub
push
xor
cmpsl
cmp
mov
push
sbb
fisttpll
mov
mov
sbb
mov
mov
sbb
movb
sub
popa
test
and
push
icebp
adc
orl
lret
mov
jp
jecxz
data16
sbb
ret
jge
movsl
popf
or
xchg
test
sbb
mov
fsts
push
dec
mov
mov
sbb
mov
push
push
adc
stos
popa
dec
leave
push
jno
movsl
lret
or
push
mov
ja
adc
fldl
pop
mov
mov
mov
mov
push
mov
in
dec
dec
cmc
push
pop
and
lret
popa
push
adc
sub
mov
or
xor
es
jnp
out
rcll
mov
push
lea
xor
push
mov
sbb
out
pop
mov
mov
xor
cmpsl
and
lods
pop
rcll
push
sbb
fldl
mov
popf
mov
xor
lods
test
jp
jecxz
rcl
test
mov
push
adc
dec
xchg
push
cmp
and
push
in
adc
test
push
xchg
and
lret
mov
cmpb
sbb
fstpl
sbb
inc
xchg
dec
sbb
mov
push
in
dec
lret
cmc
adc
sub
or
sbb
std
popf
popa
es
jno
movsl
lods
or
fwait
mov
mov
shll
inc
lret
in
into
adc
mov
or
sbb
sbb
pop
xchg
shrl
cmp
xchg
test
mov
nop
cmp
mov
pop
sbb
fnsave
mov
add
test
inc
in
out
bound
test
mov
push
sbb
lea
rcrl
adc
adc
stc
dec
and
mov
xor
cltd
lcall
jno
or
sbb
xlat
jno
fstps
adc
xchg
dec
sbb
test
loope
push
lret
test
mov
repz
jmp
mov
popf
jno
fld
add
test
sbb
test
fldenv
dec
lret
cmc
adc
sub
or
sbb
jmp
popa
xchg
leave
lods
jge
fnstenv
sbb
or
pop
rcrl
sbb
popl
icebp
adc
test
push
xchg
and
pop
sub
or
sbb
loopne
jmp
pop
mov
mov
ja
inc
mov
mull
jmp
imul
and
and
outsl
or
ss
pop
sub
insb
pusha
ja
xchg
xchg
mov
dec
test
fs
xor
js
dec
push
xchg
jo
add
xchg
jbe
jmp
fcmove
ret
scas
sti
xor
push
sbb
ljmp
inc
lods
lahf
push
push
int3
xchg
fwait
leave
imulb
adc
std
sar
and
outsb
lret
adc
adc
ficoml
nop
or
ljmp
push
sbb
fcoms
out
jbe
xchg
rorl
fdivs
mov
test
and
and
in
insb
int3
lods
or
mov
and
hlt
xchg
cli
jmp
sub
adc
dec
scas
mov
adc
jno
dec
xor
fs
pop
xchg
sub
rorl
loopne
je
xor
xor
cld
scas
xchg
mov
jnp
fisttps
fwait
xchg
sbb
jecxz
mov
call
negl
idivl
xchg
shl
sahf
notb
icebp
lahf
inc
loope
out
inc
sub
cmc
outsl
push
sub
push
pusha
jmp
loope
xor
ja
out
test
pop
jmp
dec
and
inc
and
roll
push
test
lcall
and
pop
dec
in
out
and
das
pop
mov
andl
mov
cmpsl
push
mov
mov
adc
stos
cmc
push
mov
add
fnsave
xor
sbb
push
and
cli
sbb
cmpsb
dec
inc
xor
mov
adc
and
dec
push
stc
scas
imul
dec
inc
push
mov
in
inc
ret
push
pop
int3
mov
insl
js
repnz
cmp
lret
data16
push
sub
in
gs
and
xchg
and
pop
sub
lahf
les
sub
ljmp
stos
leave
push
push
out
andl
push
aam
xchg
and
jo
and
shl
xor
mov
push
adc
fwait
daa
addr16
lock
or
cmpsb
xor
jg
int3
xor
imul
adc
es
xchg
push
push
or
dec
ja
pop
dec
rorl
sbb
xor
out
or
out
dec
inc
pop
mov
imul
pop
cmpsb
data16
jnp
adc
out
stos
lods
mov
imul
pop
cmc
cmc
pop
repnz
test
sub
movb
jecxz
outsl
shrd
lret
fs
jno
repz
daa
hlt
adc
jo
leave
mov
mov
xchg
out
stos
lods
lahf
test
insl
nop
adc
pop
add
jnp
pop
adc
dec
stc
les
sahf
les
xor
lahf
cmp
out
mov
lret
mov
in
sbb
mov
xchg
jbe
or
or
insl
testb
sbb
stc
std
dec
bound
lret
dec
mov
inc
lret
xchg
mov
adc
ficompl
jecxz
fidivrl
pop
out
and
sub
xor
xor
push
xchg
jnp
call
and
std
fs
shlb
sbb
sbb
push
xor
xlat
subl
mov
fstps
sarl
mov
fnsave
push
xchg
fisubl
lret
xchg
outsl
flds
inc
sub
out
mov
jmp
dec
iret
ljmp
push
dec
cwtl
adc
fcoms
xchg
fcmovbe
adc
xchg
xchg
mov
cmpsl
data16
or
jmp
popf
mov
or
jbe
dec
movsl
sbb
movsl
xor
int
dec
int
xor
jmp
hlt
adc
stc
pop
xor
lret
xchg
cmp
ret
icebp
icebp
sarb
xor
dec
push
mov
ja
fsub
add
outsl
mov
pop
ss
popa
dec
les
push
loopne
xchg
sub
les
and
sub
popf
dec
pop
mov
sub
lret
jo
ret
stos
lds
idivb
push
inc
dec
adc
lret
mov
xchg
jnp
sub
push
lahf
test
jb
cmp
dec
cmpb
les
xor
mov
adc
inc
fidivs
or
and
jnp
in
push
cmpsb
sub
repz
inc
jno
fldl2t
fnsave
lahf
inc
cltd
add
sub
dec
pushf
pusha
aaa
or
test
pop
xchg
ret
or
inc
push
jno
loopne
mov
sti
lahf
push
rcr
xchg
std
sbb
push
mov
adc
cld
lahf
push
xchg
dec
ljmp
movsl
sbb
outsb
lds
mov
xor
ret
xchg
sahf
gs
scas
test
adc
pop
dec
dec
sbbb
sub
sbb
repz
sub
dec
sbbl
in
daa
push
divb
mov
xchg
clc
cli
jp
sahf
push
sbb
sub
mov
xchg
dec
xchg
xchg
imul
dec
cmp
push
xor
add
lock
mov
jecxz
jp
arpl
or
jmp
xchg
shr
dec
pop
sub
imul
add
mov
mov
fdivrp
xchg
pop
enter
or
push
dec
loopne
loopne
out
sub
or
pop
jecxz
sbb
pop
adc
shlb
adc
in
push
xchg
fiaddl
lds
mov
jmp
es
ljmp
jmp
jl
loop
inc
cmp
sbb
mov
movsb
or
arpl
add
movsb
andl
mov
ds
adc
sub
xchg
adc
ret
push
mov
inc
dec
outsl
cmc
movsb
and
sti
xor
pop
fimuls
cmp
fcmovnbe
push
push
dec
lds
aad
sahf
mulb
repz
pop
jl
das
mov
push
adc
xchg
scas
ja
xchg
cld
stc
insl
xchg
jecxz
jl
incl
fmuls
adcl
ljmp
or
xchg
xchg
pop
xor
xor
ret
flds
jge
inc
dec
xchg
adc
aaa
stos
adc
dec
cmp
push
dec
stos
pop
push
mov
ss
cli
fs
cld
xchg
push
push
ret
xchg
in
sbbb
dec
ja
adc
aaa
sub
xlat
bound
push
xchg
aad
adc
inc
xchg
or
sub
shrb
xchg
notb
add
fcoms
push
mov
mov
add
adc
insb
push
xchg
or
jae
push
test
mov
xchg
daa
cmp
inc
outsl
mov
xor
push
js
or
xchg
loopne
fisubrl
dec
movsl
std
out
inc
adc
sbbl
hlt
aaa
cmpsb
loope
jmp
sarb
adcl
mov
jg
jmp
je
sub
lahf
pop
loopne
fisubrl
or
loopne
jo
les
sub
ret
popa
inc
jle
push
add
pop
es
adc
mov
sahf
pop
loop
hlt
pusha
sbb
dec
lahf
xor
and
out
adc
jne
cmp
fists
mov
inc
adc
test
adc
scas
lret
inc
cmp
cmc
xchg
push
jae
bound
xchg
pop
lcall
adc
jg
enter
add
shll
mov
addr16
mov
sub
test
icebp
mov
xorl
inc
lret
daa
xor
lret
jmp
push
push
sbb
lahf
enter
pushf
jp
insb
pop
imul
test
movsl
cmp
mov
insb
jg
fimull
jecxz
in
pop
pop
mov
inc
sub
fcomps
push
inc
jnp
adc
jle
aaa
mov
lods
insb
mov
mov
sbbw
jle
in
rcrb
and
imul
fwait
loop
xchg
lock
xor
mov
adc
lods
hlt
outsl
mov
sub
push
pop
cmp
sub
popf
fstl
or
push
push
push
xlat
adc
cli
xchg
fdivs
add
mulb
rcrl
lea
sub
ficomps
js
or
ds
popa
jo
xchg
push
aas
fwait
imul
sub
xchg
movsb
pop
into
mov
sahf
lea
push
add
push
cli
dec
push
test
pop
lods
adc
and
sub
jae
std
fwait
push
lods
negl
ja
in
fadds
out
dec
cwtl
nop
pop
outsb
in
fldt
mov
jl
das
or
lods
xor
cmc
rclb
mov
adc
lahf
cmc
pop
int
pop
pop
mov
or
ret
out
push
test
pop
pop
jp
cmpsl
jb
push
stos
push
sbb
cmc
jae
lock
sti
jo
xchg
cmpsl
fcomip
jb
sti
and
nop
js
pop
clc
js
add
dec
xorl
lahf
jne
sbb
xchg
sub
jge
dec
sahf
cwtl
in
adc
xor
cmpl
inc
dec
rorb
push
lods
test
xor
mov
inc
push
or
stc
sbb
xchg
push
xlat
iret
iret
jae
mov
imul
outsl
leave
mov
xor
pop
ljmp
and
push
sti
cld
pop
lea
mov
inc
shlb
and
mov
int
push
xor
mov
movsl
and
divb
dec
xchg
xchg
or
jmp
rorl
jle
gs
scas
jmp
neg
dec
fldcw
popf
push
push
push
stos
xchg
testl
lock
and
xchg
ret
sbb
negl
in
in
hlt
mov
fisubrs
cmp
push
sub
sbb
adc
sub
and
testl
rcll
test
xchg
out
roll
out
cmp
mov
hlt
adc
out
xchg
cli
pop
dec
imul
insb
js
or
inc
jno
xchg
test
sub
gs
adcl
xchg
loop
in
mov
scas
add
adcl
sub
push
ljmp
icebp
es
nop
dec
xchg
fidivs
addr16
dec
and
cmpsb
mov
lcall
jns
cmc
test
cmp
in
xchg
insl
jns
pop
stos
std
lret
push
in
sub
xchg
mov
lea
daa
jnp
mov
push
sahf
mov
repnz
jne
mov
fimuls
in
pop
popf
es
inc
lret
mov
adc
mov
push
adc
push
dec
mov
in
dec
stos
sbb
ret
cmp
mov
nop
mov
jo
and
xor
mov
loop
mov
insb
sbb
sub
cmp
iret
sti
fidivs
sub
fistpl
adc
adc
pop
and
cmc
and
mov
idivb
gs
ljmp
pop
dec
or
xor
jnp
adc
mov
pop
out
push
xchg
xchg
imul
cltd
mov
cltd
mov
clc
cmpsb
pop
xor
xchg
in
cmpsb
es
inc
xchg
mov
mov
imul
mov
mov
jmp
push
je
cmpsl
and
int3
push
fcmovnb
ds
call
es
dec
mov
fsubs
adc
lods
cmp
movsl
push
xor
sbb
push
and
or
sahf
in
push
pop
sub
rcrb
inc
ljmp
adc
sbb
adc
ljmp
xchg
fsubl
mov
mov
xchg
test
mov
xchg
and
test
ret
xlat
les
cli
in
jp
sbb
lods
addl
or
dec
andl
jl
jne
mov
adc
push
and
fs
jp
adc
adc
lahf
popa
sub
not
sub
sbb
lock
inc
push
xor
orb
repz
xchg
icebp
shll
cmp
subb
in
pop
movb
mov
xchg
mov
icebp
movsl
cmp
mov
xchg
sub
pop
daa
add
adc
push
xchg
gs
jp
fdivs
mov
cmpsl
repnz
dec
sub
dec
lahf
inc
xchg
movl
in
test
cld
xor
and
ljmp
in
cmp
sub
jbe
sbbb
sbb
test
cmp
fcmovb
scas
pop
push
cltd
stos
dec
incb
or
stos
adc
mov
popa
dec
ss
jb
sub
and
push
fucomip
xchg
xor
sahf
aam
in
pop
fsubp
enter
cli
fstl
xlat
inc
std
loopne
adc
push
mov
movsb
push
mov
sub
xor
sti
and
pusha
lcall
popa
mov
dec
xchg
add
es
jmp
cmpsl
notb
dec
or
lahf
xor
fcoml
stc
loope
pop
xchg
mov
fs
out
push
in
xchg
jno
dec
stos
cmpsl
sub
test
mov
loopne
mov
push
mov
push
adc
or
jo
mov
lock
pop
mov
lea
dec
sub
leave
add
rcrb
sbbb
mov
cmp
push
cld
inc
mov
loop
sub
shlb
adc
fcomip
out
mov
rcll
xchg
fldenv
jo
mov
push
arpl
sbb
jo
lahf
mov
push
sub
sti
test
mov
mov
xor
or
or
cmc
lock
mov
fs
xchg
jno
xchg
shrl
or
pop
push
sub
push
push
inc
lahf
jo
mov
xor
xchg
stos
xor
push
xchg
lahf
xchg
mov
mov
jbe
mov
rorb
es
cwtl
mov
mov
mov
or
popa
adc
subl
sbb
jnp
mov
jb
std
lret
in
divl
xchg
adc
loop
fdivl
or
out
mov
imul
loop
popa
xor
pop
sub
leave
sub
loopne
imul
xchg
mov
jmp
push
cmp
add
push
lahf
jae
mov
or
xor
jmp
mov
aad
pop
xor
xchg
std
jns
push
xchg
fidivl
test
lods
out
int3
mov
xor
arpl
std
jno
lahf
push
js
xchg
jb
adc
adc
sbb
xchg
lahf
pop
jnp
std
shll
xchg
jno
and
sub
pusha
fdivl
xchg
xchg
scas
sub
xor
sub
in
loope
scas
pop
mov
test
inc
push
jecxz
pop
sub
or
adc
sbb
mov
xchg
mov
xor
push
inc
repnz
adc
cmc
push
push
sbbl
add
jge
mov
shlb
stc
pusha
or
in
popf
xor
adcl
aad
mov
or
sti
add
xor
stc
pop
fs
jle
cmc
jmp
xor
outsb
mov
stos
repz
xor
loopne
and
loop
sub
gs
sub
pop
shrl
sbb
std
call
adc
scas
cmp
andl
ficompl
in
test
scas
push
mov
dec
lret
sbb
pop
cs
lahf
push
xchg
push
cwtl
pop
cs
roll
aam
push
sbb
dec
call
stos
mov
subb
inc
sub
inc
rep
jmp
xchg
inc
xchg
dec
gs
xchg
pop
std
pop
cmp
xchg
inc
mov
ret
push
ror
std
xchg
or
add
mov
add
push
lods
push
cld
lods
insb
ret
int
cwtl
das
add
cmc
xor
out
sub
ret
ljmp
push
mov
push
adc
jmp
push
mov
jmp
dec
pushf
imul
pop
mov
sahf
in
push
mov
lahf
stc
inc
lahf
dec
loop
mov
je
ljmp
jae
sbb
xchg
pop
mov
sub
sbb
adc
mov
sbb
lcall
pusha
dec
bound
loope
aad
cmpsb
or
sbb
push
and
mov
fmuls
cli
xor
and
mov
cs
popa
pusha
lods
push
sahf
mov
inc
js
mov
outsb
lock
jb
ja
ret
jnp
mov
loopne
push
cmp
mov
popa
mov
lret
inc
sti
inc
jmp
dec
ret
mov
dec
add
jnp
cmpsl
xor
adc
sub
push
push
cmp
pushf
in
cmp
push
push
sahf
dec
xchg
fdivl
or
push
inc
hlt
jbe
xchg
stos
xor
xor
incl
push
clc
fwait
add
cmc
mov
cmpsl
mov
bound
loopne
xor
iret
mov
sahf
push
scas
sub
sub
mov
lods
jne
iret
push
fs
iret
adc
adc
in
sbb
stos
inc
push
xchg
jle
mov
jmp
loope
sub
pop
clc
jmp
inc
stos
adc
push
xchg
test
sbb
cmp
xchg
mov
pop
insb
notb
lret
popa
dec
daa
rolb
xchg
js
sub
jo
pop
add
movsl
pop
add
scas
xchg
insl
dec
cwtl
mov
push
jnp
mov
or
fwait
mov
sbb
dec
push
stc
fsubs
gs
rorb
insl
loope
fidivs
mov
imul
mov
sub
lods
lahf
mov
push
mov
ljmp
pop
mov
pop
pop
cmp
jp
xchg
loope
lahf
push
insb
inc
adc
out
jbe
mov
xchg
sbb
into
cmpsl
xor
mov
push
stos
xchg
adc
xor
icebp
shl
hlt
mov
aad
subb
cmp
pop
adc
stos
lcall
push
and
push
adc
jbe
loope
inc
loopne
xorl
pushf
insl
sti
mov
fwait
jne
jmp
orl
push
cwtl
xchg
into
pop
js
xchg
pop
inc
test
pop
lcall
insb
inc
and
pop
sbb
add
mov
pushf
xchg
fcompl
push
jbe
inc
js
int
dec
movsb
xchg
xor
push
mov
andl
fidivl
daa
int
fcoml
mov
or
ret
lahf
icebp
mov
sub
idivb
jecxz
xchg
sub
mov
pop
mov
std
xchg
or
mov
jbe
jmp
call
insb
or
in
xor
add
xchg
xorl
xor
aaa
out
mov
test
pusha
aad
fwait
push
or
in
push
dec
shlb
and
arpl
jns
out
xor
jns
sub
mov
popf
sub
push
lret
dec
sub
insl
mov
add
push
cmpsl
xor
or
push
or
push
push
adc
xchg
or
and
xchg
jmp
jnp
repnz
push
rolb
xchg
mov
push
push
ds
lods
outsl
mov
sbb
loope
or
lahf
adc
xor
mov
or
push
or
xor
xor
sub
pop
gs
jl
pop
rcll
sbb
outsb
jae
xor
xor
mov
dec
add
mov
mov
sti
popf
push
or
sub
jl
sub
sbb
pop
aaa
mov
fmuls
sub
adc
xlat
xchg
push
xor
lahf
dec
push
loopne
pop
adc
ljmp
lea
in
mov
ret
js
fcmovnbe
xchg
xor
mov
and
mov
hlt
fcompl
out
push
out
cmp
rcrb
movsb
mov
mov
imul
xchg
cmpsl
mov
cli
cmc
shl
sbb
and
push
jnp
or
pop
cmc
inc
stos
out
clc
popf
or
pop
adc
fwait
xor
ret
lods
imul
dec
lahf
loop
call
inc
sbb
jo
fsqrt
dec
test
sub
js
out
outsb
pop
test
sub
pop
adc
jmp
cmp
iret
mov
and
push
cmp
add
push
push
and
popf
dec
push
inc
test
sub
test
aad
xchg
adc
xor
call
gs
notl
sti
cmp
or
test
mov
mov
cmp
dec
mov
loop
stc
xchg
xchg
fsubrl
xor
shl
or
cld
mov
sbb
lahf
mov
push
jmp
pop
ds
aam
push
bound
push
xchg
lds
sub
jge
lret
mov
lahf
pop
imul
xchg
fs
addr16
push
lods
fwait
pop
incb
add
orl
aad
mov
pusha
std
jae
cmp
scas
jmp
xchg
sbb
imul
lret
ss
inc
sbb
jmp
jecxz
or
iret
jl
fnstenv
or
leave
jmp
mul
hlt
nop
scas
sub
mov
gs
shr
adc
ss
and
add
lods
leave
jp
mov
adc
es
lret
sbb
adc
add
stos
out
cs
jno
insl
je,pt
mov
sub
aas
pop
daa
sbb
in
shlb
xor
hlt
jb
push
sub
mov
inc
nop
or
jmp
dec
les
pop
stos
xchg
insb
xor
ret
jb
jbe
and
shll
push
or
jmp
loop
and
xor
push
adc
in
adc
lods
fsubs
xchg
dec
dec
mov
repnz
arpl
in
sbb
xchg
daa
inc
int3
push
fstpt
dec
cmp
mov
mov
inc
xchg
ret
adc
adc
push
loopne
pop
fs
stos
sub
and
push
pop
imul
cwtl
lods
or
lahf
push
pop
fstpl
xor
pusha
mov
xlat
sub
sub
inc
jmp
push
fdivl
add
xchg
ds
jo
adc
dec
insb
mov
out
jb
jae
test
jno
test
loop
pusha
push
aam
sahf
lock
test
in
jmp
lods
inc
mov
in
inc
aaa
push
push
xchg
jbe
enter
push
pop
das
mov
fstps
in
sbb
and
sub
mov
sub
sbb
lods
sahf
aaa
xor
xlat
dec
incb
into
popa
cwtl
xchg
mov
insl
nop
and
adc
cmpsl
pusha
jmp
jno
movb
orl
pushl
aaa
andb
rcrb
ds
xor
pop
add
mov
cmp
or
repz
cmp
sarl
push
cmp
mov
fiaddl
loopne
imul
in
xlat
mov
ret
cli
test
dec
jo
aad
jge
clc
into
mov
out
jl
inc
ss
in
ljmp
mov
pop
inc
mov
xchg
rol
fs
or
push
push
mov
dec
jl
test
lret
xchg
push
lret
fdivrp
push
xchg
fisubrl
dec
or
int
stc
sar
push
mov
xchg
mov
jecxz
mov
sub
stos
aas
iret
jae
add
lret
adc
daa
nop
mov
push
or
shrb
imul
dec
fldl
addr16
in
mov
mov
or
push
pusha
sub
push
xchg
cli
int3
imul
mov
lahf
test
xchg
js
mov
mov
repnz
inc
inc
or
in
mov
rcl
and
xor
jns
in
out
mov
dec
lea
xchg
test
xchg
pusha
jne
in
in
ret
and
push
inc
and
scas
dec
test
push
push
sub
sbbl
mov
in
in
out
bound
lock
rorw
test
mov
in
add
aad
ljmp
insb
rcl
imul
jb
int
pop
pop
fwait
mov
cmp
add
inc
aam
sub
sbb
mov
scas
das
mov
hlt
add
jae
mov
mov
rorb
addl
ds
add
roll
sub
add
mov
lods
cs
push
dec
push
cmp
imul
jne
or
xor
repnz
js
push
sub
mov
and
jae
xchg
adc
outsb
ja
mov
in
mov
pop
xor
dec
sbb
pop
push
jne
cmpsb
out
and
mov
aam
cmp
xlat
pop
add
fidivrs
popf
mov
std
aas
mov
mov
fisubrl
xchg
or
cwtl
lahf
sub
inc
xchg
xchg
sub
xchg
sub
lea
and
scas
jge
int
sub
or
sbb
aaa
mov
ss
mov
sub
mov
sbb
popf
test
mov
push
xor
xchg
mov
rcll
shll
mov
fsts
mov
adc
mov
push
sbb
inc
imul
and
aas
lahf
jno
sahf
sub
jge
cwtl
xlat
sub
push
fmuls
jge
test
and
testb
data16
or
sub
jnp
shrl
std
or
push
mov
mov
mull
pop
cmp
seto
xor
mov
int
adc
lea
push
lcall
pop
roll
jge
xchg
push
xor
nop
add
test
add
mov
mov
xchg
sbb
lods
mov
and
push
andl
pop
outsb
stos
xchg
push
les
xlat
cmc
mov
and
add
mov
jne
sbb
sbb
cmpsb
mov
sub
adc
sub
pop
lods
cmpsb
jmp
std
cltd
int3
add
ds
sbb
sbb
loopne
sbb
xchg
or
loop
jae
inc
out
pop
stos
clc
xchg
clc
mov
mov
xchg
mov
shrb
int
imul
sahf
push
ljmp
xchg
or
mov
or
adc
out
or
roll
flds
mov
retw
and
lret
mov
xchg
mov
or
movsl
push
mov
sbb
mov
dec
ret
stc
and
pushf
sbb
fstpt
sub
mov
insl
pusha
cmp
negl
imul
sbb
sbb
pop
ret
and
sbb
sub
jmp
inc
adc
sbb
outsl
inc
mov
lds
icebp
sub
test
sbb
sbb
push
cmp
in
xchg
cmpl
sahf
shrl
dec
js
mov
mov
sbb
mov
and
push
or
int3
rcrb
push
pop
mov
fildll
loop
cld
push
jns
xchg
hlt
xchg
test
xchg
pusha
imul
jnp
xchg
adc
inc
sub
mov
mov
jge
hlt
data16
mov
stc
std
jb
cmp
mov
xor
enter
aam
push
jae
lahf
cltd
add
ds
pop
roll
stos
sahf
xchg
cltd
sub
orb
sbb
mov
mov
es
and
pop
mov
neg
pop
pop
ja
mov
call
stos
xor
pop
lahf
lock
stos
fcompl
pop
xorb
or
jae
pop
lods
inc
lcall
loop
xor
adc
mov
add
std
rclb
incl
jns
rolb
cltd
daa
js
sbb
insb
and
jmp
push
mov
cltd
jbe
stc
jb
xchg
push
fimull
cmc
lock
cmp
mov
mov
ret
in
icebp
in
js
jecxz
cmc
lods
int
ljmp
aaa
das
and
xchg
psubusb
cmc
je
jno
ror
movsl
or
mov
lret
out
mov
in
add
pop
or
mov
jg
and
cmp
fs
out
sbb
adc
xor
cmp
push
xchg
testl
xor
stos
dec
stc
fiaddl
push
popf
mov
stc
cmpsb
incb
dec
sub
jb
ja
pop
cltd
jmp
fst
add
negl
xchg
fistpl
cwtl
mov
push
or
addb
inc
aas
cmp
lcall
loop
mov
add
cmc
or
dec
dec
lcall
clc
cmc
test
aad
fmuls
xor
or
hlt
push
popa
adc
pop
mov
xchg
dec
int
stos
and
test
mov
jbe
push
rorb
adc
rol
aad
popa
push
lahf
xor
inc
shrl
push
call
sbb
xchg
mov
in
jmp
jns
mov
and
clc
mov
aas
sbb
sbb
in
sbb
cltd
mov
mov
mov
aaa
cmp
dec
mov
mov
fiaddl
cmp
pop
or
cmp
sub
mov
sbb
stos
popa
jo
ret
mov
test
sub
add
mov
frstor
adc
mov
ss
fcoml
pop
cltd
mov
stc
jno
lcall
push
cmp
fistpll
sbb
in
les
push
and
xchg
in
stc
pop
inc
adc
rclb
cmp
test
add
negl
jmp
dec
mov
loope
in
data16
lock
jl
mov
out
sarb
mov
scas
cmpsl
inc
sti
ljmp
cwtl
es
scas
fcmovu
pushf
rol
xchg
add
cmp
dec
stos
shl
test
leave
hlt
aas
orl
add
add
or
addb
add
add
add
add
add
add
add
add
add
orl
add
orl
add
addb
add
in
orb
add
add
stc
orb
sbb
or
add
or
and
or
adc
or
push
orl
add
orl
add
or
inc
orb
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
xchg
insb
mov
and
fisubl
out
inc
gs
inc
imul
data16
addl
or
adc
rolb
insl
sbb
and
inc
inc
addl
xchg
mov
and
xor
ja
mov
xor
and
lret
adc
xorb
stc
xchg
sub
adc
lret
dec
dec
add
and
ss
mov
insb
xchg
push
and
mov
or
cmpsb
cmp
jmp
shrb
repnz
jns
mov
inc
mov
pop
add
sbb
test
pop
adcl
rclb
xor
and
lea
push
insl
xor
sbb
jo
imul
shll
ret
in
add
sahf
pop
outsb
xor
lods
add
push
bound
adc
mov
jge
and
or
cmpl
pushf
or
or
mov
push
pop
pushf
test
jno
sub
lret
aaa
sbb
cwtl
add
or
mull
xchg
xchg
pop
or
push
add
push
push
or
imul
push
negl
ret
add
sub
roll
dec
or
mov
orb
push
orl
pop
dec
jecxz
stos
sbb
add
adc
sbb
pop
incb
fildl
or
loopne,pn
testl
mov
mov
jge
std
shlb
push
sub
lret
and
xchg
js
dec
sub
sub
fld
or
dec
insb
add
test
shlb
nop
daa
add
pop
sbb
or
lahf
cmp
sbb
jg
add
xor
mov
xor
xor
pop
push
pushf
add
mov
xor
aam
sbb
push
and
mov
test
sbb
in
jno
add
shrl
mov
cltd
mov
inc
inc
daa
or
dec
add
cmp
lret
shll
inc
jb
cwtl
imul
push
rorb
adc
push
mov
lretw
adc
jp
cmp
add
pop
mov
fsubrl
sbb
jge
fs
testl
shll
shlb
test
mov
scas
shrb
pop
faddl
enter
add
jo
push
fsub
add
icebp
cmovno
pop
dec
inc
push
cwtl
stc
lahf
sub
stos
arpl
and
add
xor
fstpt
sbb
or
mov
or
or
inc
aaa
dec
inc
cmp
push
inc
inc
sahf
inc
dec
testb
xor
enter
push
or
add
mov
and
add
add
in
add
ret
aam
and
and
jecxz
lret
push
jmp
jmp
jnp
and
xor
jmp
add
movsl
incl
sbb
add
add
or
inc
or
or
ret
or
sub
adc
adc
insb
adc
inc
adc
dec
sbb
xchg
and
push
sub
sub
adc
cmp
mov
and
push
or
jns
lcall
mov
add
push
add
xchg
or
xchg
roll
inc
mov
leave
or
ds
add
mov
je
sbb
call
or
dec
or
mov
adc
bound
je
inc
jl
inc
xchg
or
pop
mov
test
inc
aam
inc
stos
shlb
mov
jmp
push
or
dec
sub
movsb
mov
add
inc
jnp
cld
lea
pop
lcall
subb
push
jns
and
test
add
dec
rclb
icebp
cmp
add
mov
nop
mov
mov
cmp
les
addl
add
xchg
or
inc
mov
inc
mov
xchg
xchg
inc
xchg
mov
adc
cltd
add
mov
fldenv
or
call
and
and
and
jmp
pop
in
inc
cmc
add
testb
std
add
add
lret
ds
dec
xor
mov
mov
xchg
sbb
sbb
sbb
js
scas
or
repnz
sub
lret
xor
stc
push
adc
adc
adc
adc
and
xchg
jl
pop
sub
orb
out
jnp
mov
scas
dec
and
and
test
and
push
mov
dec
inc
mov
test
and
dec
xchg
xchg
xlat
and
inc
pop
inc
mov
dec
ss
jbe
sub
pop
and
inc
sbb
lar
in
mull
adc
repnz
push
adc
push
insb
sti
subl
or
mov
stos
jecxz
push
pop
add
insb
sbb
xchg
adc
scas
xor
in
mov
inc
movsb
pusha
int3
test
dec
sbb
add
xor
adc
xlat
les
leave
inc
inc
sub
add
or
and
and
and
pop
and
jo
dec
jb
push
andb
stos
and
inc
out
jno
lods
repz
scas
push
xchg
mov
jmp
inc
adc
les
and
rorl
and
and
in
shlb
xchg
xor
or
insb
xor
pop
mov
add
aas
add
add
adc
movl
sbb
jno
add
aas
adc
lret
cmp
add
sub
cli
lret
scas
idiv
les
add
push
fbstp
and
sbb
shrl
pop
pop
mov
int3
jnp
mov
sub
push
and
add
sbb
movsl
and
cld
and
inc
cli
jecxz
push
pop
inc
xor
cmp
decl
pushf
dec
sti
and
add
mov
pop
add
mov
sub
jae
mov
jmp
mov
dec
push
add
movsb
mov
xor
mov
mov
ret
dec
icebp
xlat
push
fidivrs
sub
fstpl
repnz
mov
pop
jg
lods
add
iret
ds
xor
aad
mov
xchg
arpl
cli
dec
sub
mov
adc
adc
mov
cmpsl
mov
push
mov
fsubr
ljmp
addl
mov
mov
cld
pop
sub
add
movsl
lock
lret
test
ss
dec
cmp
je
mov
dec
adc
je
into
std
jns
adc
repnz
or
imul
inc
pop
push
nop
test
xchg
push
dec
sbb
add
xchg
inc
mov
mov
in
xor
push
mov
gs
out
lahf
or
jo
xchg
add
imul
sub
dec
cmp
push
mov
js
inc
xchg
mov
pop
push
push
int
add
sub
les
xchg
movsl
xchg
inc
pop
adc
jp
add
mov
imul
xor
lods
ret
popf
and
or
and
or
pop
add
test
negl
std
jbe
or
js
loop
cltd
mov
test
or
xchg
pop
andb
inc
orl
shrl
push
mov
jns
dec
mov
push
filds
add
cmp
aad
mov
lock
loopne
faddl
jl
movb
add
or
ret
xchg
add
push
dec
cli
xor
orl
sbb
xchg
and
sub
jnp
into
sahf
push
mov
inc
jo
ss
ljmp
fisubl
repnz
jne
xchg
jns
loopne
mov
jg
add
aad
mov
cs
mov
imul
sbbl
pusha
or
bound
outsl
jb
arpl
jge
sub
push
fwait
add
mov
dec
sub
pop
loope
add
dec
pop
xchg
or
sub
addb
cmc
loop
pop
jg
cwtl
add
pushf
inc
sbb
mov
dec
and
mov
adc
pop
outsl
jmp
add
outsb
push
mov
sbb
push
loop
fs
inc
mov
mov
jne
sar
popf
cmpsl
in
sbb
lret
cmc
xchg
xor
adc
add
or
add
ds
xor
xchg
cmp
dec
xchg
das
and
shrb
mov
js
xchg
inc
mov
test
or
ja
add
pop
xor
adc
das
xor
clc
jo
inc
push
imul
fsubp
addr16
js
ds
cltd
jecxz
jbe
xorl
divl
jecxz
pushf
lods
mov
xor
icebp
or
in
iret
int3
mov
clc
pop
add
mov
cmp
add
pushf
movsl
mov
shrb
adcb
idiv
push
xchg
or
adc
lds
sbb
sub
sub
mov
scas
or
outsl
adc
add
movsl
inc
add
sbbl
add
and
xchg
adc
mov
out
pop
out
cld
clc
sarb
inc
dec
dec
add
xchg
fcomps
push
add
cmp
int
repz
popa
jmp
imul
pop
fidivrs
lods
xchg
mov
sub
adc
lcall
cmp
jl
xor
add
mov
push
xor
cmp
jmp
cmp
stos
add
add
outsb
daa
flds
sbb
icebp
dec
faddl
repnz
or
xchg
pop
mov
mov
cmp
mov
es
int
mov
xchg
mov
rcr
movsb
jl
push
cmp
rclb
xor
add
adc
xor
test
mov
mov
iret
pop
decb
js
stos
fwait
imul
sub
les
cmp
push
pop
jns
mov
or
add
sub
jle
pop
rolb
imull
lahf
mov
stos
mov
pop
js
cmp
or
fdivrl
mov
ja
adc
mov
xlat
add
push
and
or
loopne
imul
lea
hlt
stc
jb
push
imul
fsubrs
loope
les
add
cmp
inc
pop
shlb
sub
repz
and
fiaddl
je
cmp
inc
adc
pop
insb
cli
push
add
and
lea
loopne
mov
aad
cwtl
in
test
or
or
loope
arpl
or
cli
in
push
mov
push
and
adc
push
cltd
xor
adc
inc
mov
inc
mov
inc
testb
cmc
add
inc
lods
dec
cltd
and
sbb
ret
inc
pushf
fmull
in
arpl
sbbl
or
hlt
in
cmp
movsl
and
mov
adc
jecxz
rorb
mov
or
cmc
popa
push
lock
lcall
cwtl
jmp
lcall
dec
imul
dec
gs
pusha
add
int3
sbb
mov
subb
xor
dec
leave
or
scas
cwtl
xor
mov
andl
loope
rcll
ljmp
mov
arpl
repz
in
dec
adc
insl
push
rclb
loop
addl
mov
or
xchg
and
adc
jbe
lcall
ljmp
and
jmp
pusha
mov
inc
jae
dec
mov
xchg
enter
and
sub
fnstcw
ror
pop
pop
test
jge
test
cmpsl
jbe
rorl
sbb
xor
ret
add
pushf
mov
movsb
xchg
sbb
xchg
push
lods
jne
adc
dec
mull
jo
dec
and
inc
add
sbb
icebp
cld
lret
scas
insb
add
xor
es
push
mov
test
push
cli
das
cmpb
jle
pop
mov
cmpsb
jo
inc
cs
and
sub
sbb
stc
jmp
push
ds
in
cld
inc
or
addb
ret
push
sub
inc
adc
and
jno
or
jmp
push
inc
and
mov
popa
inc
cwtl
sarb
je
sbb
enter
or
movsb
sbb
add
test
mov
bound
cwtl
or
das
jns
push
adc
add
inc
adc
add
and
and
mov
or
clc
pop
push
je
pop
jmpw
xor
in
push
call
push
out
push
aaa
out
sbb
icebp
js
aad
or
andl
pop
dec
jo
cmp
mov
cmpsl
jl
mov
repnz
sub
or
fsubl
xchg
xchg
in
pop
daa
add
pop
movsl
dec
out
test
lea
lods
inc
jae
jne
cmp
mov
mov
test
adc
mov
xor
std
mov
inc
ret
sub
jb
daa
or
popf
mov
dec
and
outsb
push
inc
adc
out
lods
add
or
std
sbb
mov
inc
jne
icebp
add
and
or
movsb
sub
ja
inc
mov
sub
mov
inc
jge
sbb
jp
out
or
sbb
mov
add
je
xchg
inc
xor
mov
mov
sarl
xor
mov
mov
or
loop
add
xchg
and
mov
sbb
pushf
adc
dec
sbb
or
stc
loop
pop
shll
or
xchg
sbb
adc
dec
fs
std
xor
dec
test
mov
sub
loopne
lock
xor
xor
or
lret
mov
or
sbb
xor
xchg
sbb
cmpb
cmp
div
sbb
clc
loopne
inc
sbb
adc
orb
in
xor
adcb
jge
loopne
in
movsl
out
mov
add
add
adc
ss
leave
sbbb
xor
add
mov
mov
rcrl
or
sub
scas
andb
incl
rolb
jo
ret
add
push
xchg
ret
cwtl
adc
xor
add
cld
add
not
jmp
cmp
inc
sbb
add
roll
add
cmp
aas
jmp
push
cmp
mov
ret
rclb
sbb
call
or
movsl
xor
dec
shrl
ljmp
ret
push
pop
pop
not
dec
jmp
loope
ja
lahf
inc
xor
push
sahf
outsl
xchg
mov
sub
jno
or
out
test
xchg
add
mov
push
popf
or
pop
leave
adc
pop
adc
jmp
add
lds
adc
mov
sarl
in
hlt
jge
add
jmp
addl
mov
leave
aam
inc
addr16
or
mov
and
arpl
xlat
add
add
lods
sub
adc
mov
sub
pop
inc
inc
out
push
stos
insb
or
cmc
shll
ljmp
scas
push
lds
mov
clc
sub
inc
add
push
add
enter
loope
push
inc
or
aam
repz
push
xor
and
testl
pop
xlat
pop
or
jnp
push
adc
fldl
rol
push
out
add
xor
sbb
add
icebp
adc
insl
scas
dec
stos
dec
add
loope
mov
popf
push
int3
sarb
add
aam
btr
cltd
mov
pop
or
int3
les
inc
push
not
mov
iret
add
pusha
leave
fildl
jecxz
or
adc
inc
sbbb
fwait
push
pop
scas
ss
test
ljmp
add
mov
sub
iret
cli
mov
inc
dec
cmc
adc
pop
pop
xchg
dec
adc
seto
mov
pop
mov
jl
and
sti
js
insb
fadd
aas
and
iret
ret
outsb
lods
push
xor
push
cmp
push
and
or
orb
add
lock
les
cmp
push
jp
addl
insb
inc
or
and
jo
cltd
outsl
or
aaa
jne
push
jp
rclb
adc
mov
fmul
testb
hlt
pop
mov
jo
add
shrb
jp
mov
push
add
filds
mov
std
fsts
add
sbb
fs
loopne
adc
pop
adc
leave
add
inc
inc
xor
add
das
cmp
fcmovb
neg
xchg
aad
xchg
or
push
and
shl
stc
sub
sub
imul
test
mov
push
orb
push
out
add
mov
fcoml
lds
and
xchg
add
sbb
test
not
xchg
arpl
insl
sbb
rolb
cmp
adc
mov
adc
iret
shr
sarb
mov
fs
test
cmp
inc
sbb
add
push
stc
out
sbb
loopne
lods
or
cmpsb
into
add
adc
lods
sbb
lret
and
les
lret
inc
jno
push
pop
pop
cmp
mov
add
repnz
int
inc
mov
dec
ret
jle
hlt
scas
mov
rorl
add
fstp
pop
jp
sub
add
mov
enter
xor
rcr
add
xor
daa
push
adc
push
pusha
loopne
mov
pop
add
ljmp
mov
out
aaa
xorb
sub
bound
xchg
and
xor
inc
in
fisubrs
pop
leave
sbb
add
or
mov
hlt
bound
xor
inc
jle
add
push
sub
leave
sbb
int3
out
inc
test
shrb
adc
mov
mov
or
jge
add
fcomi
and
add
loope
sbb
push
mov
pop
icebp
and
daa
aad
push
push
mov
out
push
pop
pop
not
mov
cli
or
and
ret
mov
push
repz
add
rcl
je
bswap
xchg
xchg
pop
lock
sub
mov
pop
inc
cmp
mov
xor
mov
cmp
cmp
sbb
inc
leave
andl
scas
sub
xchg
cmpsb
add
pop
dec
inc
xor
xchg
add
adc
xor
cmp
xor
dec
adc
not
mov
loopne
les
nop
ds
or
xchg
les
push
popa
mov
es
orb
sub
sub
test
ret
or
pop
mov
das
sbb
adc
stc
mov
cmp
and
lea
and
subb
rclb
ret
in
push
enter
out
cltd
adc
or
jge
sbb
stos
pop
xor
pop
lret
push
nop
out
mov
add
mov
loope
lds
add
fstl
mov
push
pop
sbb
outsb
test
repnz
cmp
mov
mov
pop
ss
push
cld
dec
pusha
mov
mov
stos
or
pusha
xchg
arpl
sub
repz
shl
mov
add
pop
adc
add
ss
mov
mov
fiadds
dec
fcoms
test
call
or
sti
lcall
rorl
mov
addl
xor
dec
pop
cmpsb
cmc
sarb
adc
neg
jo
fsubrl
aam
dec
cmpsb
ret
sub
stos
divl
out
cmp
add
push
nop
mov
inc
stc
shll
cmp
ret
cmpsb
bswap
int3
fwait
xchg
notb
jle
dec
les
loopne
andb
dec
mov
mov
adc
add
stos
in
adc
inc
pop
ret
out
ja
push
or
mov
aas
adc
add
mov
or
mov
pop
pop
push
sarb
mov
mull
sbb
jmp
inc
add
imul
lea
and
push
inc
add
test
js
es
push
and
sbb
jl
wrmsr
pop
mov
jp
lock
xchg
into
pop
orb
xor
mov
inc
mov
adc
cmpb
pusha
sub
fsubrs
test
mov
adc
pop
pop
mull
inc
xor
es
nop
sti
adc
xor
mov
add
xor
out
shll
mov
lock
and
cltd
xchg
jmp
inc
and
lcall
aam
sbb
lahf
sbb
fildll
dec
popf
add
cmpsb
inc
shrl
shl
sbb
push
mov
test
iret
xchg
leave
insl
and
cmp
in
hlt
mov
rorb
sbb
dec
jmp
pushf
mov
jmp
inc
es
adcb
test
jne
push
pop
xor
jae
xchg
test
addr16
add
mov
and
movsl
or
pop
lret
lods
adc
shr
or
add
or
cmp
adc
mov
out
and
into
mov
pop
push
insb
call
jo
stc
or
loop
adc
sub
xor
or
scas
xor
lahf
and
aaa
repnz
inc
pop
dec
cmp
testb
or
sete
movsl
mov
ds
cwtl
out
out
add
sub
cmpsb
adc
adc
adc
jne
adc
lods
addr16
xor
jne
stos
xchg
or
adc
lret
push
stc
rorb
xor
dec
mov
add
jne
cmp
pop
pop
popa
jne
sbbl
sub
inc
mov
test
in
dec
xor
xchg
repnz
test
insb
sub
sbb
pop
int
jb
int3
xlat
xchg
push
mov
repnz
arpl
test
notl
lds
pop
add
subb
xor
pusha
insb
mov
adc
xor
add
or
inc
and
xchg
roll
xor
dec
add
jp
mov
sbb
neg
fcomps
and
add
adc
add
dec
in
lret
xchg
and
and
int
out
mov
ret
push
cwtl
lahf
cmp
pushf
push
pusha
or
repz
push
nop
rolb
adcl
bswap
xchg
out
in
mov
lcall
add
scas
sub
add
jns
jb
sbb
add
mov
daa
push
mov
fs
mov
mov
mov
sarb
xchg
dec
xor
push
pop
pop
add
mov
popf
cmp
push
inc
add
popa
test
rcrl
mov
sbb
and
lods
fcmovb
mov
or
repnz
cmp
inc
addb
dec
push
dec
add
jns
cwtl
sub
push
pop
pop
mov
mov
xor
fbld
movsl
add
ljmp
std
and
rcr
dec
aas
push
in
jecxz
nop
fisubrl
dec
addb
cmpsl
fs
daa
ret
loope
sbb
dec
fiadds
inc
neg
nop
mov
or
cmpsb
clc
add
popf
or
pop
lahf
jmp
mov
adc
sbb
or
sub
mov
shlb
pop
cmp
lds
lds
sbb
push
add
jmp
add
pop
xor
mov
dec
faddp
sbb
pop
aam
xor
stc
add
add
int3
mov
xchg
or
cmpl
insl
dec
sub
imulb
popa
sti
xchg
roll
mov
xchg
ret
and
dec
cltd
cmpsb
adcb
pop
push
xchg
and
push
or
dec
xor
add
xchg
xor
int3
sub
jb
mov
jp
cmp
mov
mov
daa
stc
mov
or
push
or
shrl
orb
add
nop
pop
leave
rclb
mov
movsb
push
adc
inc
aad
mov
add
add
adc
push
sarb
in
xor
adc
cmpsb
movsl
test
gs
push
pop
pop
ja
mov
stc
dec
and
fsubrl
mov
xchg
out
sub
mov
inc
insb
cmp
jae
in
or
push
ljmp
mov
mov
and
inc
cltd
add
test
and
sub
daa
mul
or
mov
cmpsl
and
fwait
xlat
popa
enter
jl
pop
jns
add
lods
bound
fdivs
xchg
movb
imul
imul
aad
mov
jge
push
or
sub
push
cltd
add
cli
mov
not
jb
inc
rclb
out
das
scas
negb
adc
aas
lret
xchg
lret
add
mul
pushf
push
movsb
les
ret
pusha
ret
ljmp
inc
sub
pushf
mov
adcb
movsb
addl
cmp
divl
dec
or
jb
and
and
pushf
rcrb
sbb
nop
cmpsb
sub
ret
call
jbe
sub
push
and
mov
add
jae
jl
sub
inc
cmp
jbe
push
pop
movsl
xchg
mov
adc
push
push
popa
push
test
pushf
sub
test
add
sbb
and
xlat
or
scas
loop
addl
inc
notb
std
subb
dec
stc
dec
faddl
push
push
dec
pop
clc
adc
mov
gs
and
or
ja
dec
subb
mov
pop
pop
mov
int3
xorl
fbstp
aad
sti
call
dec
enter
adc
push
xor
push
mov
dec
fs
neg
push
cmp
mov
movsl
pop
shrl
jae
shlb
imulb
mov
jo
bnd
xchg
mov
loopne
dec
outsb
or
jae
adc
xor
and
das
stos
cli
stc
and
lret
or
mov
nop
int3
xchg
ret
dec
stos
xchg
mov
or
pusha
iret
mov
bound
daa
stc
dec
adc
xchg
add
lcall
aaa
shll
shrl
cmp
test
nop
dec
inc
aas
das
mov
cwtl
repnz
pop
add
pop
jge
aad
jae
bnd
pop
movsl
mov
xchg
movsb
adc
fs
sbb
out
xchg
das
fs
add
mov
push
subb
sti
adc
rclb
jmp
adc
inc
add
xchg
out
xchg
ss
adc
aas
jge
fstpl
add
sti
in
xor
ljmp
pusha
mov
out
sahf
inc
ret
cmp
dec
out
adc
cmp
mov
shlb
lret
add
dec
cmpsl
int3
push
shl
rcll
dec
push
fs
or
cmpsb
notl
mov
dec
dec
aas
add
cmc
and
cmpl
gs
cmp
xchg
push
xor
xor
mov
inc
movsl
push
shr
sbb
pop
dec
and
repz
mov
xchg
and
mov
push
mov
add
sbb
or
push
adc
dec
sub
dec
outsb
orl
add
xor
xor
push
mov
pusha
xlat
sub
lock
push
add
add
fldcw
add
mov
add
push
ljmp
fs
or
daa
cmp
outsb
mov
xchg
jp
and
or
sarl
rcl
cmp
dec
lds
inc
cli
cmp
jo
in
pop
imul
ret
dec
subb
inc
xor
or
cld
mov
sbb
enter
ljmp
sbb
cmc
push
xchg
xchg
into
aas
add
push
dec
pop
pusha
push
dec
fisubrl
shlb
ljmp
sub
pop
test
sbb
add
scas
add
push
repnz
add
lret
xor
push
movsb
pop
add
in
mov
loop
dec
inc
pop
rcrb
bnd
push
cmpsb
pop
fiadds
ret
lods
cmc
push
push
cmp
add
xchg
rcll
loop
add
imul
pop
inc
xor
cmpsb
mov
loope
pusha
inc
hlt
cmpsb
xchg
dec
stos
rol
cmpsl
xchg
cld
mov
repnz
and
add
pop
loopne
push
pop
jo
adc
and
aad
jo
mov
sub
jecxz
pusha
shll
dec
ret
cmpsb
cmp
dec
adc
nop
inc
int3
mov
sbb
bound
or
adc
sub
inc
xor
push
ret
or
outsl
lock
adc
xchg
add
call
lret
ds
orb
imul
incb
xchg
bound
adc
xor
and
xchg
push
pop
adc
subb
and
dec
jae
cmpsb
push
jne
cld
xlat
test
lds
in
addl
mov
in
dec
out
insl
xor
push
jnp
lcall
adc
decb
sahf
cmp
inc
or
mov
pop
add
jge
imul
inc
push
add
clc
mov
pop
sub
fistl
add
cmp
push
ja
test
int
xlat
notb
add
dec
or
sete
and
loop
push
jp
and
dec
cltd
jae
push
adc
xor
add
push
sbb
pop
loope
jbe
fisttpl
xchg
insb
repnz
das
pop
mov
fisubl
rclb
adc
mov
add
jge
pop
add
insl
jmp
sbb
xor
inc
push
dec
addr16
xchg
sbb
hlt
and
mov
pop
stos
jb
fs
pop
add
test
das
mov
mov
lret
and
adc
inc
sbb
shlb
cli
push
xchg
xor
pop
bound
das
sbb
push
addl
push
adc
dec
adc
test
lds
popf
int
testl
sub
pop
notb
jb
xchg
mov
daa
aas
dec
or
mov
dec
add
and
lret
mov
mov
push
std
and
imul
sti
jae
shlb
inc
ret
int3
fcmove
icebp
lret
sub
mov
int
rolb
mov
xchg
pop
push
incb
cmpsb
mov
fs
fs
repz
addl
ds
inc
pop
add
inc
push
xlat
fwait
add
jno
lcall
aas
sbb
inc
xchg
hlt
push
push
inc
mov
mov
addr16
cmp
incl
ljmp
stos
xor
jmp
inc
pop
mov
dec
movl
out
hlt
and
push
jno
dec
nop
adc
es
push
test
inc
pushf
hlt
addl
roll
test
lret
push
pop
xor
dec
inc
insl
add
jle
scas
mov
ss
and
icebp
push
add
hlt
adc
push
xor
les
sbb
test
decb
out
sub
icebp
dec
shll
lahf
shrb
inc
mov
psrlw
orl
or
pop
lcall
push
mov
sahf
push
out
cmp
push
pop
outsl
or
adc
test
dec
sub
loope
dec
cmc
mov
out
ja
out
in
ret
sub
adc
negl
lahf
push
hlt
ljmp
test
lods
mov
add
jg
popa
push
adc
xor
pushf
add
pusha
lds
cmpb
xchg
add
popa
inc
sti
mov
adc
flds
mov
jge
repnz
gs
adc
jg
test
outsl
and
dec
sbbl
pop
or
mov
scas
aad
inc
rorl
lahf
lods
dec
pusha
sub
or
mov
xor
mov
cmpsb
roll
mov
pop
and
xor
test
ja
mov
mov
mov
adc
stc
shlb
dec
ret
lods
cwtl
jge
dec
push
imul
data16
adc
adc
pop
mov
test
inc
xchg
or
mov
test
outsl
push
jecxz
xchg
push
sub
push
mov
add
popf
and
sub
leave
adc
inc
mov
in
inc
push
pop
inc
mov
mov
dec
fiadds
leave
xor
mov
std
mov
push
stc
sub
xlat
movsl
adc
clc
sbb
out
sub
neg
push
aaa
jbe
xchg
mov
and
nop
cwtl
pop
popa
arpl
sub
neg
cwtl
adc
fwait
adc
cld
pminub
adc
push
iret
xchg
movsb
jns
push
cmp
pop
mov
es
push
aad
jno
push
pop
pop
or
addb
stos
adc
mov
pushf
fdivl
add
movl
sub
mov
add
je
lcall
push
xchg
add
pop
push
pusha
xchg
xchg
pop
pop
xor
lcall
push
and
cmp
jl
pusha
pop
and
sub
test
dec
add
mov
mov
or
mov
dec
popf
sub
mov
mov
add
fnstcw
xchg
addb
and
dec
mov
jne
std
imul
cmp
mov
jg
and
pop
popa
push
jge
fists
sbb
es
push
add
scas
and
ss
ret
cmp
cmp
pop
xor
loopne
stc
popa
repz
mov
mov
stc
jno
add
fbld
mov
js
or
lret
imul
scas
test
xchg
sbb
iret
xchg
cmp
fdivs
dec
popl
xchg
adc
rorl
fsubp
outsb
push
popa
sbb
xlat
xor
push
cs
mov
cld
xchg
cmp
aam
aaa
sub
lcall
xchg
aas
jno
int3
imul
cli
pusha
push
cmpsb
movsb
bound
sbbb
aad
pushf
inc
mov
cs
ds
dec
push
push
push
push
sbb
rolb
test
fdivl
mov
leave
decl
popl
sbb
pop
dec
in
push
pop
loop
add
push
inc
jl
sub
push
addb
add
inc
dec
dec
xchg
jae
pusha
mov
sbb
bswap
and
sbb
add
adc
dec
in
test
scas
icebp
add
mov
push
push
mov
in
repnz
nop
cs
mov
outsb
sub
sbb
mov
int3
add
dec
mov
outsl
sbb
rorb
jb
add
decb
mov
addl
ret
in
andb
out
loopne
subl
movsb
or
mov
lds
orb
pop
dec
add
inc
jnp
aam
dec
shlb
rcrb
cltd
les
popa
jge
imul
adc
lods
add
push
or
mov
jle
and
pop
sbb
sbb
addb
jbe
mov
shr
je
jno
and
and
pusha
mov
cmp
mov
inc
in
push
fiadds
push
js
neg
sub
pop
ljmp
aam
add
mov
or
and
aad
jp
fcomp
mov
cmp
push
das
pushf
out
or
imul
roll
shll
stc
or
push
sbb
mov
and
popa
popf
xchg
outsb
dec
test
xchg
sub
pop
pop
js
cs
or
test
mov
xchg
sub
pop
pop
sub
sub
ss
mov
adc
adc
mov
sti
and
inc
jbe
mov
jl
sub
sbb
pop
inc
sub
mov
xchg
add
push
xlat
enter
sub
add
mov
lret
int3
cmpsl
push
mulb
imul
lods
push
xchg
ret
mulb
cltd
sub
pop
dec
and
popf
sbb
mov
int3
cmpsb
lods
pop
addr16
sahf
jge
mov
stos
xor
cs
or
mov
add
in
daa
lcall
int
xor
cmp
inc
mov
add
rep
xchg
leave
push
xlat
and
dec
xorl
sbb
sub
adc
jg
adc
shll
jmp
lods
shrb
push
push
sti
rol
push
xor
jae
in
mov
loop
mov
fwait
jno
cmpsl
xchg
popf
test
xor
lret
stos
mov
repz
and
sub
roll
add
cld
loop
faddp
cmpsb
push
adc
xchg
pop
xchg
movsl
fdivrs
jle
fcomi
out
aad
daa
dec
mov
decl
in
std
rcrl
xor
pop
pop
jg
aaa
lods
leave
mov
mov
mov
mov
xchg
pop
xchg
inc
fisubrs
pop
mov
lret
and
dec
jb
mov
cwtl
addb
pop
mov
dec
jbe
jecxz
aam
es
and
movsl
mov
add
mov
movsb
xchg
and
popa
lret
into
mov
sbb
stos
fcoms
lods
pop
sub
sahf
shll
fstpt
sub
jmp
inc
xchg
xchg
push
icebp
sarl
fldenv
mov
dec
ret
mov
add
test
push
out
mov
outsl
fildl
jnp
push
lahf
idivl
dec
inc
mov
and
pop
jecxz
jo
xchg
repnz
add
mov
sub
ss
fadd
dec
dec
mov
mov
add
jecxz
cmp
inc
fidivl
sti
mov
xor
out
inc
fwait
pop
js
arpl
sbb
sarb
cwtl
bound
jle
int
cmc
xor
xchg
mov
pop
pop
and
jl
and
sub
mov
out
push
pop
ja
scas
add
lahf
cmpsl
clc
out
scas
or
pop
and
mov
popf
sub
push
stos
inc
cmp
clc
mov
pop
repz
iret
dec
xchg
and
dec
sub
js
and
and
ret
xchg
mov
fdivr
mov
test
shlb
cmp
push
pop
cmp
ds
or
neg
aas
pushf
popa
mov
int
mov
fmul
ljmp
pop
addb
xchg
cmp
lods
sub
inc
lret
mov
jo
pushf
and
lods
lret
inc
fidivs
out
movsl
lock
mov
stos
jmp
inc
mov
icebp
aaa
and
pop
xor
imul
dec
xor
in
outsb
push
comiss
mov
jle
inc
ret
mov
inc
mov
in
jae
mov
xchg
dec
dec
pop
xchg
loop
mov
addr16
in
lods
add
out
dec
into
notb
shll
add
hlt
push
jl
pusha
push
push
les
cmp
fldl
rcrb
aaa
mov
mov
cmpsl
sbb
mov
pop
push
mov
mov
cwtl
lahf
rcrb
inc
in
cmp
mov
adc
push
inc
cvtps2pd
inc
cld
cmpsb
sbb
mov
dec
mov
or
xor
lret
fldenv
jbe
xorb
xorb
into
mov
cmp
mov
dec
adc
xor
neg
xchg
xchg
add
mov
es
out
repz
dec
ret
std
test
mov
aaa
stos
mov
shl
mov
and
pop
mov
inc
cltd
mov
add
mov
fsubp
test
ficompl
cmpsl
push
bound
and
aad
js
stos
xor
inc
and
mov
lret
lahf
dec
jecxz
fwait
dec
add
and
aas
push
ret
inc
dec
ror
pop
jno
fdivl
pop
adc
sub
adcl
sbb
sbb
jmp
das
icebp
or
mov
ds
jmp
inc
jno
jns
lret
or
mov
jo
mov
dec
outsb
stos
outsb
jecxz
xor
filds
push
mov
dec
cmp
rolb
stos
mov
imul
xor
jae
div
insb
push
jecxz
push
hlt
mov
repz
movsl
sub
add
inc
leave
subl
jbe
lods
fldenv
push
and
jno
adc
add
or
loopne
repz
outsl
ds
push
mov
dec
mov
xchg
inc
push
mov
jb
loop
sbb
sub
add
pusha
repz
aam
nop
lock
insb
adc
inc
pop
sub
adc
mov
lods
insl
sub
cld
pop
iret
jl
push
loopne
pop
mov
fimull
into
and
cmp
cmpsb
push
sti
adc
jae
popf
sbb
push
cwtl
jge
dec
mov
inc
outsb
mov
inc
out
ret
ss
rcrb
aas
mov
and
add
fildll
stos
xchg
out
jge
mov
in
jns
mov
mov
jecxz
cmp
pop
jnp
cmpsb
pop
data16
mov
push
rep
das
mov
pop
sbb
push
movsl
ret
aas
sub
fcomps
lret
jno
outsl
and
loop
int
mov
xchg
pop
test
ljmp
adc
sbb
jg
out
insl
or
and
cli
pop
jmp
nop
movsb
test
mov
xor
push
gs
rolb
lret
repnz
in
xor
or
and
stos
int
loop
jnp
adc
adc
andl
int3
ror
pop
cmp
mov
xchg
int
pop
xorb
adc
xchg
rcrl
rcrb
daa
mov
or
mov
iret
imul
xchg
shl
xchg
add
fistpl
loop
mov
divl
test
adc
dec
fwait
xchg
icebp
repnz
lock
xchg
adc
out
mov
sbb
pop
push
pop
movsl
popl
stos
cli
mov
xchg
pop
fldenv
cltd
xchg
push
xchg
shlb
jle,pn
enter
lret
push
mov
add
cmp
xchg
outsl
aas
mov
inc
xchg
dec
sbb
movsb
pop
daa
sbb
dec
adc
sub
dec
ret
lods
dec
cmc
es
pop
stc
push
pop
and
mov
ja
out
movsb
cmp
sbb
jno
ret
sub
or
lods
xchg
int3
aaa
insb
mov
dec
into
jg
mov
mov
lods
cwtl
loopne
js
fs
xor
xor
shrb
xchg
movsb
outsl
dec
xrstors
rol
jbe
sahf
add
bnd
std
aam
in
lret
fiaddl
dec
xor
add
and
dec
enter
outsl
pop
lret
repz
mov
leave
xchg
push
stos
mov
pop
popa
push
xchg
in
shll
ret
sbb
int
ret
fldt
stos
fucomp
lret
sti
scas
add
add
pop
into
mov
sub
int
ret
lcall
test
repnz
mov
push
enter
pop
push
mov
pop
mov
shrd
or
fbld
cmp
xor
pop
leave
inc
int3
enter
repnz
cltd
cmpsl
fnsave
pop
mov
cmpsb
dec
cmpsb
or
jbe
adcl
stc
or
mov
notb
mov
hlt
jle
mov
rorl
sbb
stc
into
mov
mov
scas
and
arpl
loope
pop
cmpsl
mov
add
push
pop
or
dec
leave
fidivrl
lods
movsl
inc
and
adc
fdivl
lcall
fdiv
pop
jecxz
jmp
lock
mov
pop
jecxz
add
mov
mov
inc
pop
lods
cld
xchg
push
sub
scas
xchg
out
or
inc
lret
in
aas
aas
xchg
or
daa
test
mov
daa
sbb
xchg
mov
xorl
je
jecxz
dec
and
dec
pop
ret
jg
clc
inc
push
mov
xchg
subb
push
iret
and
in
mov
jno
mov
or
shlb
arpl
cmpsl
pop
das
mov
movsb
sub
fsubrl
mov
ljmp
mov
lock
out
movsl
and
jbe
loop
fsubrp
iret
adc
lods
rol
fucomi
jne
imul
pop
enter
into
out
cltd
xchg
fs
pop
bound
cmc
mov
pop
lret
lea
ret
lahf
pop
and
aad
sbbb
inc
lock
ficompl
or
xchg
adc
mov
daa
andl
xchg
loop
repz
jno
daa
or
fsubr
mov
mov
jo
mov
ret
addr16
fwait
push
mov
adc
int
cmpsl
test
stos
les
arpl
mov
lret
shlb
fsubrl
aam
and
fistpll
inc
sbb
pop
push
inc
xchg
gs
inc
imul
ss
jg
xchg
test
jnp
fnstcw
pop
rcrb
xchg
repnz
idivl
sbb
dec
cmpsb
inc
sbb
mov
push
out
push
pop
and
or
pop
push
adc
into
leave
sub
dec
outsl
or
bound
movb
jp
repnz
dec
stc
sahf
add
sbb
ss
cmpsb
and
jp,pt
out
dec
xor
jns
dec
aad
dec
enter
cmpsb
pcmpgtd
nop
cltd
sahf
ret
adc
fadds
or
fs
add
fistpll
repnz
xor
inc
adc
mov
repnz
popf
scas
xchg
in
mov
push
mov
mov
sub
adc
je
loop
je
movsl
daa
jns
and
mov
icebp
or
mov
mov
fcoml
mov
sbb
jle
cmpsl
jp
pushf
mov
das
lods
inc
mov
arpl
jl
in
imul
lcall
push
leave
inc
bound
add
cmp
jecxz
add
cmp
lods
daa
cmpsl
inc
loop
bswap
frstor
fldl2t
pop
xchg
or
lods
aad
sbb
mov
and
and
out
lock
adc
cmc
mov
cmp
or
sahf
ret
sbb
fcoms
out
mul
jp
sub
lods
popf
sbb
add
push
push
lock
out
sbb
pop
into
mov
mov
mov
fbld
mov
fstp
xlat
lods
std
push
xchg
xor
or
icebp
cmp
and
mov
or
cmp
loopne
and
and
gs
leave
icebp
sbb
daa
jp
inc
push
idivb
daa
mov
cmpb
inc
xchg
imul
mov
inc
fdivr
stos
xchg
dec
add
enter
lock
jae
int3
inc
popf
sub
ret
iret
sub
jecxz
jns
fsubl
mov
and
stos
clc
push
mov
lds
push
jecxz
and
cmp
cld
test
ret
ss
stos
stos
addr16
enter
lahf
ljmp
lds
mov
mov
repz
movsl
cmp
lcall
mov
mov
push
mov
pop
mov
cmp
push
sahf
sbb
mov
pop
fs
scas
cld
pop
roll
rol
es
loope
xchg
sbb
sbb
out
dec
ror
gs
add
inc
out
jbe
dec
adc
xor
xchg
into
sbb
sbb
lahf
icebp
aam
movsl
cmp
push
lcall
xor
movsl
mov
jb
addr16
fisttps
add
pop
mov
and
call
or
pop
test
xchg
pop
mov
aaa
fucomip
mov
int3
addr16
int3
repz
mov
cmp
mov
mov
je
fs
es
enter
mov
mov
inc
mov
adc
xchg
lahf
aaa
pop
outsl
mov
and
jmp
mov
and
mov
testb
xlat
lods
adc
popf
lret
lods
incl
pop
push
mov
and
inc
out
int3
ljmp
fisttps
lret
mov
stc
push
cmp
test
stos
arpl
and
loopne
mov
sub
pop
jo
jnp
cmp
sub
sarb
mov
aaa
mov
es
mov
pop
inc
out
lcall
xchg
jae
sub
mov
cmp
arpl
pop
pop
dec
mull
cmc
xchg
inc
lret
push
cli
hlt
inc
jge
and
hlt
pop
xor
sahf
aas
das
mov
mov
jmp
out
enter
fwait
jecxz
xchg
iret
ret
test
mov
sub
pop
outsb
enter
aaa
ss
pop
fcomi
add
divl
gs
test
mov
sti
stos
or
stos
pop
pop
aam
adc
test
stos
push
leave
shrl
je
sbb
add
sbb
mov
test
mov
push
push
pop
jecxz
aam
push
cmpsl
mov
and
xor
xchg
xchg
xchg
rclb
lods
jae
outsl
neg
pop
pop
mov
mov
mov
aam
xor
xorl
and
test
aam
sbb
add
mov
mov
xlat
and
cwtl
rcr
push
mov
mov
sahf
popf
dec
in
pop
pop
xchg
in
rcrl
inc
mulb
out
xchg
sti
cmp
fidivl
ret
inc
cmp
sti
sub
fs
dec
iret
xchg
int
pop
inc
pop
mov
popl
push
dec
fistl
data16
out
ret
mov
xchg
mov
sahf
adc
cmp
mov
sub
aas
sub
jns
out
pop
cmp
mov
sbb
adc
shll
int3
adc
push
jle
roll
loopne
cmpb
sub
adc
sbb
mov
jne
inc
iret
stos
rolb
ret
xchg
repnz
rorb
or
pop
cli
push
mov
dec
xor
dec
mov
and
adc
orb
ljmp
mov
and
test
inc
add
stos
inc
mov
loop
aas
dec
mov
sbb
push
inc
iret
cwtl
mov
push
in
cs
insl
out
pop
inc
push
out
mov
push
sbb
xchg
xchg
inc
std
sti
sbb
dec
xlat
mov
pop
sub
jns
sub
inc
movsb
lea
fsubs
or
dec
je
addr16
leave
loop
add
fmul
ds
fisubl
sbb
movl
loopne
xor
push
enter
jb
dec
xor
inc
sahf
mov
hlt
es
push
pusha
pop
dec
jno
jbe
ficoml
aad
jl
dec
add
cld
lods
mov
and
fs
sub
sub
push
and
ja
mov
and
ficoml
mov
iret
or
loopne
push
xchg
aaa
cmc
dec
dec
movsl
js
dec
mov
sub
xchg
out
push
xchg
xlat
out
mov
sarb
arpl
mov
ljmp
or
loope
test
dec
jb
lret
mov
mov
adc
aas
addr16
in
xlat
dec
mov
out
xor
mov
xorb
pop
xor
mov
out
push
imul
idivb
sub
clc
cli
imul
aas
xor
and
cli
xchg
dec
cmp
out
dec
push
jmp
push
xchg
xchg
add
lods
xor
bound
movb
mov
mov
scas
push
subl
jp
sti
and
aam
bound
lret
xchg
lret
xor
and
fnclex
out
sub
cwtl
adc
mov
sbb
jbe
cli
in
aaa
out
cmp
aas
rcrl
add
xchg
enter
cltd
mov
jp
xor
shll
pushf
and
pop
fdiv
ror
stc
jge
in
dec
pop
or
mov
jae
aas
adc
popa
int3
faddl
fcmovnbe
sbb
in
xor
ss
sub
pop
cmp
ds
mov
jge
int3
call
cltd
push
gs
dec
push
inc
pop
sub
rcr
or
in
jae
xor
push
or
or
les
or
and
dec
mov
scas
xchg
mov
sub
aad
jge
or
pop
rcll
scas
inc
ss
iret
movups
scas
test
dec
scas
xchg
xor
movsb
lea
sub
push
int3
inc
ret
pop
lret
mov
mov
add
adc
hlt
xchg
frstor
dec
aas
jnp
rorb
inc
jno
and
mov
mov
sbb
inc
loopne
sti
and
pop
repnz
repnz
out
sub
adc
ljmp
cmpsl
xor
and
in
enter
sarl
cld
xchg
stos
test
leave
push
scas
sbb
hlt
and
inc
popa
daa
inc
stos
sbb
inc
sarb
jbe
popf
cmpsb
or
mov
aam
mov
lret
lcallw
mov
int3
jo
fidivrs
pusha
scas
jecxz
jb
cli
xchg
les
push
jns
xorl
lock
fistps
add
cld
pop
outsl
adc
mov
pop
mov
sub
jge
lahf
sub
fistpll
pushf
mov
cmp
or
jecxz
out
in
mov
sub
push
mov
fsubs
mov
lahf
push
mov
mov
lcall
xlat
push
lcall
and
lahf
adc
mov
mov
test
push
xorl
scas
lcall
stos
sub
xor
repnz
mov
rcl
sub
test
fmul
xor
shrb
xchg
xchg
cmp
aaa
fdivs
cmp
cmp
test
in
add
fsubl
adc
mov
pop
fistpl
jge
fcompl
xchg
mov
xchg
cmc
mov
and
push
sub
adc
fsubrs
mov
sub
insb
fisubrs
cld
das
fisttpl
fstl
mov
aaa
cmp
rolb
test
push
adc
jae
imull
push
pop
and
xchg
cmc
xchg
pop
insl
test
push
dec
repnz
into
cmp
fcompl
aas
add
iret
lret
inc
cs
fst
xor
fisttpl
in
push
fadds
outsl
pop
jg
out
cld
sbb
repz
mov
stos
into
lds
negl
gs
adc
inc
cmp
lret
arpl
cmp
mov
xor
aaa
ljmp
mov
lret
mov
adc
xor
rcll
enter
push
mov
leave
or
sub
aad
xchg
pop
leave
sti
stc
sub
xchg
xor
hlt
mov
xor
out
lret
inc
adc
pop
movsl
and
mov
sub
mov
popf
add
mov
pop
mov
es
dec
dec
test
call
data16
cmc
adc
xchg
inc
andl
into
mov
les
out
or
call
lods
xchg
mov
lea
aam
and
into
or
sub
std
mov
jmp
mov
bound
scas
dec
or
stos
mov
scas
aam
repz
xchg
in
add
insl
icebp
mov
xor
insl
lea
mov
pop
cmovnp
sub
mov
ret
jae
aad
das
and
ss
mov
popa
mov
ds
xor
sub
hlt
leave
ds
movsl
xchg
pop
test
xchg
xor
push
dec
add
mov
mov
pop
ds
daa
in
mov
es
je
out
ret
fstl
rolb
js
cmp
push
push
inc
popf
xor
mov
cmpsl
jno
aaa
fcomps
or
outsb
jnp
ja,pn
sub
test
ret
stc
cwtl
movsl
popf
test
mov
cmpsb
je
mov
hlt
out
sub
xor
imul
cmp
shrl
xor
adc
cmp
xor
and
push
mov
mov
inc
and
xchg
push
icebp
sub
fistpl
imul
insb
dec
pop
push
movsb
adc
arpl
add
gs
mov
dec
add
xchg
pop
jp
rcl
sbb
xchg
fidivrs
xchg
mov
push
fcmovu
dec
into
loopne
and
inc
sar
dec
out
fcomps
icebp
out
pop
cmp
orl
mov
sbbb
repz
add
call
push
in
fildl
rorl
jae
call
lds
call
int
adc
xchg
inc
mov
neg
mov
in
push
insl
ret
push
inc
out
orl
or
add
sub
stc
xchg
ja
fcmovnbe
lods
and
xor
push
and
rol
cmp
out
sti
andl
pop
adc
shll
das
sahf
pop
xor
or
imul
sti
dec
arpl
xor
mov
sub
lcall
loop
cld
stos
in
cmpsl
mov
aas
mov
sub
lret
stos
jg
xor
push
js
push
xchg
ret
fisttpll
xlat
lock
dec
inc
fstpt
in
sub
negl
es
pop
clc
jo
stos
pop
jge
sahf
sbb
mov
inc
fists
clc
popf
ljmp
xchg
movsb
mov
push
push
push
cmpsl
icebp
ljmp
xor
jo
and
xchg
in
scas
push
mov
gs
iret
and
sbb
or
ljmp
jmp
sub
fidivs
xchg
cmc
mov
dec
dec
and
push
cmpsl
jmp
mov
out
cltd
std
adc
jbe
mov
cmp
inc
inc
or
ljmp
mov
enter
fbstp
outsl
jl
jg
mov
add
fcoms
loop
dec
cmc
sbb
fdivs
mov
ret
mov
jo
dec
insb
popf
mov
imul
and
lea
fisubs
imul
test
inc
xchg
imul
sbb
lods
push
sub
sarl
lods
daa
es
fidivs
push
pusha
jp
xor
fwait
pop
sbb
je
push
ss
int
or
or
fs
rolb
xor
jp
jle
push
psrlq
and
add
aad
aaa
sbb
scas
ror
mov
fimull
lahf
ret
pop
aad
jns
cwtl
dec
imul
movsb
and
fsubrs
inc
sub
push
int
gs
xchg
popl
pop
shll
xchg
mov
mov
and
outsl
xchg
jp
fs
pop
xor
shll
pop
push
and
cmp
xlat
std
je
cmc
or
pop
xchg
stos
mov
ficoms
loopne
xchg
lahf
jbe
sbb
mov
mov
xchg
or
out
aam
inc
leave
sub
xchg
jg
movsb
cmp
xor
xchg
aas
sub
push
stos
inc
iret
xchg
fstpt
xchg
add
lock
lcall
addb
aam
mov
xor
xorl
iret
out
or
pop
orb
popf
push
lock
jl
enter
out
fcmove
sbb
das
dec
mov
stos
or
emms
mov
inc
xor
mov
sub
pop
lods
dec
int
cmp
xchg
fstpl
test
filds
mov
int3
std
push
and
in
inc
and
add
sub
jmp
int3
xchg
lods
xor
mov
jb
in
mov
xlat
xchg
aas
fwait
jae
loop
mov
enter
ret
push
negb
jmp
jecxz
out
negb
dec
xchg
jbe
mov
xchg
adc
out
xchg
sub
js
fcmovne
mov
pop
movsl
mov
xchg
repz
cmpsl
mov
cmc
and
pop
rcl
adc
dec
xor
cmp
cmp
hlt
xlat
push
and
int3
xchg
xor
aas
sub
jns
sti
hlt
push
push
sub
cmp
or
push
pop
xor
pop
push
xchg
hlt
sbb
inc
movsb
xlat
and
xchg
lock
mov
setno
ficoml
daa
and
gs
pop
inc
xchg
mov
and
hlt
mov
cmc
pop
test
ljmp
xchg
mov
mov
and
mov
cmpsl
das
arpl
sti
sarb
out
sbb
pushf
push
sub
insl
mov
in
cmp
std
and
repz
inc
loope
inc
ja
movsb
gs
xor
std
icebp
mov
outsl
push
aad
imul
lods
sbbl
lret
fbstp
pop
movsb
jbe
jle
inc
test
push
out
add
std
lods
movhlps
jmp
inc
hlt
fdivrl
mov
test
das
fisttpll
enter
mov
or
shll
pop
out
lahf
xchg
dec
ret
jno
in
xchg
lret
lock
mov
push
mov
scas
das
xchg
enter
das
add
push
pop
xor
sub
jmp
insl
mov
subl
out
inc
mov
push
loope
adc
mov
xchg
pop
lahf
and
pop
dec
repz
jg
xchg
mov
mov
and
repz
lret
inc
and
push
jno
inc
or
add
aaa
cltd
jae
repz
push
fsubr
push
in
scas
jp
mov
cld
call
sub
push
jnp
pop
inc
adc
es
jl
sahf
cmp
int
add
lret
outsb
xor
xchg
ret
add
sahf
push
fnstcw
lods
fbstp
leave
imul
sti
stos
lea
xchg
enter
out
fdivs
push
pusha
xchg
adc
call
inc
ret
cmpsb
outsl
xor
sub
pop
xlat
mov
adc
cld
inc
pop
xlat
scas
cmp
ret
cmpsb
xchg
push
je
testl
inc
out
jmp
out
sbb
clc
and
xor
push
les
out
pushf
mov
jg
fisubrs
adc
inc
sbb
stc
jae
mov
xchg
adc
in
and
iret
pop
inc
lret
sarb
in
push
repz
imul
test
mov
push
jle
repz
test
inc
and
icebp
cmp
mov
or
clc
movsl
lret
mov
xor
mov
xchg
cmp
inc
adc
pop
pop
sub
negb
int3
popf
imul
dec
cmp
fnsave
cs
xor
xor
xchg
insb
stc
addr16
push
add
daa
popl
lods
xor
mov
fldt
addb
subb
and
mov
das
out
mov
rolb
xchg
rcr
xor
mov
icebp
add
push
xor
outsl
dec
ret
add
test
fists
dec
xchg
test
mov
loop
jge
ss
lret
pop
inc
xor
sar
int3
movb
ja
sbb
mov
push
addr16
mov
sub
cmc
push
fcmovbe
in
aaa
inc
flds
aas
cmpsb
test
mov
dec
mov
sbb
xchg
scas
inc
add
lahf
leave
out
cmp
in
nop
repnz
mov
data16
in
test
in
cmpb
outsl
gs
into
in
adc
add
xlat
adc
inc
into
inc
subl
mov
decb
andl
imul
int
mov
fwait
dec
inc
mov
lret
inc
mov
inc
xor
lret
xchg
test
sub
mov
sub
mov
sub
mov
sub
jecxz
sub
pop
leave
dec
add
mov
int3
xor
mov
xor
mov
adc
scas
and
in
rcrl
sbb
shlb
jbe
push
mov
cltd
dec
push
xor
sub
xchg
out
cs
jmp
cmp
pop
lds
popa
push
or
addr16
sub
pop
jne
test
and
inc
call
sbb
jmp
fs
adc
fwait
xchg
mov
lret
and
mov
push
sub
popa
mov
dec
pusha
inc
fstl
mov
cmp
pop
or
test
jg
mov
sbb
stos
loop
in
jns
or
or
idivb
mov
cld
clc
stc
ds
mov
fildl
or
mov
sub
stos
ficoml
aam
popf
sbb
sub
lret
mov
cwtl
xor
dec
or
mov
push
and
nop
push
stos
xlat
stos
loop
mov
scas
cmp
aad
fsubrl
es
jmp
jnp
ljmp
xor
cmp
ffreep
mov
into
stos
inc
pusha
pop
mov
jl
or
and
fidivl
pushf
and
mov
test
mov
push
mov
sub
out
cmp
jmp
loope
in
or
xchg
mov
jbe
xchg
outsl
loope
divb
out
outsl
daa
cld
jo
xchg
das
stos
pop
sbb
loop
mov
data16
inc
shll
mov
stc
fwait
xchg
add
enter
mov
xlat
std
dec
jbe
mov
or
cwtl
and
out
jle
xchg
inc
gs
dec
std
addr16
lret
xchg
mov
xlat
dec
loopne
lods
out
fldcw
fidivrs
ret
lret
test
xchg
aam
call
mov
mov
sbb
lret
xchg
leave
in
sbb
inc
xchg
mov
mov
loop
lcall
sbb
inc
lcall
pop
cmc
adc
jae
push
lret
dec
cmp
mov
add
insl
ret
xchg
xchg
xchg
aaa
in
mov
xchg
push
mov
mov
jmp
sub
mov
mov
enter
das
mov
mov
dec
lds
iret
lods
push
and
or
std
out
inc
add
std
xor
bound
sbb
jmp
out
xor
pop
dec
xor
lcall
in
or
mov
int
cmp
rcrl
push
idivb
sub
adc
cmp
in
lret
es
aam
sarb
std
ret
adc
fnstsw
jo
jb
inc
loop
pop
adc
dec
iret
ljmp
jle
mov
sub
and
movsb
xchg
cltd
push
inc
adc
lret
pop
inc
das
xor
push
push
dec
cltd
sarl
mov
into
inc
pushf
add
push
inc
fwait
sbb
fsts
popa
and
add
shlb
pop
fistpl
mov
xchg
xchg
fisttpll
repz
mov
pop
mov
fs
idivb
push
jne
testl
fnstcw
push
ret
scas
repnz
std
call
jge
push
jg
pusha
daa
insb
shlb
adc
fisubrl
push
mov
dec
adc
inc
popf
je
pushf
js
ficomps
jge
push
sbb
push
addr16
fisubl
mov
int3
cmpsb
cmp
aad
movb
lret
mov
ja
jb
insb
lret
lahf
fstpt
mov
cmp
mov
sub
mov
xor
insl
aam
loopne
mov
cmpl
sub
dec
ficoms
out
mov
dec
dec
jmp
bound
dec
in
out
dec
sti
mov
ds
cmpsl
mov
sarl
dec
sbb
enter
pop
sub
inc
mov
into
xor
xchg
inc
xor
mov
sub
mov
mov
out
jb
inc
jmp
sub
jmp
cld
insl
cmp
or
mov
cmpsl
or
cmp
lret
daa
pop
lret
and
in
jne
pop
xchg
sub
pop
cmpsl
mov
adc
jb
fidivs
out
lods
mov
cmpl
mov
inc
sbb
or
hlt
shlb
popa
fdivp
xchg
xor
xchg
adc
leave
push
enter
cltd
into
js
les
stc
clc
adc
xchg
push
ret
sbb
js
sub
adc
pusha
stc
outsl
and
leave
or
rcrb
pop
cmp
cmp
popf
or
pop
jle
adc
je
insl
popf
ret
dec
jg
bound
out
adc
scas
or
frstor
push
icebp
lret
mov
pop
and
mov
movl
aam
mov
inc
and
xchg
mov
or
mov
jno
mov
sti
mov
and
cmpsb
cmp
dec
repnz
lea
ror
adc
xchg
call
icebp
mov
adc
or
lcall
leave
pop
inc
clc
inc
mov
jg
push
mov
xor
push
push
adc
mov
jmp
lret
inc
fs
jl
subb
outsb
jo
out
clc
ret
adc
dec
sarb
cmp
mov
lahf
loope
shrb
lds
and
mov
ja
bound
movsl
scas
pop
inc
in
jne
xlat
out
or
sbb
insl
inc
mov
cmp
arpl
lods
subb
mov
sub
xchg
imul
aad
filds
and
aaa
shll
lods
lods
inc
test
mov
push
int3
adc
sub
call
testb
mov
sti
dec
jmp
push
popf
addr16
fmuls
xchg
int3
cli
and
pop
mov
out
inc
jae
in
inc
sbb
cli
aas
push
outsl
js
jmp
push
adc
out
and
out
cltd
push
xchg
mov
cmp
mov
xchg
into
or
in
decl
daa
xchg
das
mov
push
mov
mov
mov
xchg
inc
lock
sbb
nop
out
ss
lods
dec
push
adc
xor
xchg
cld
xlat
and
std
stos
scas
stos
rorb
imul
les
and
bound
push
mov
mov
pop
xchg
or
fnstenv
push
jp
or
jle
aas
cmpsb
mov
insb
push
or
es
cmc
es
cmpb
fwait
lcall
mov
mov
fisubl
fsubs
cmp
iret
js
jo
not
pop
fcoml
data16
fisubs
mov
sub
mov
daa
jae
xchg
push
jecxz
push
jle
lret
outsb
out
fwait
push
pushf
std
sbb
ds
cmp
in
popf
ficompl
movsl
movsb
sti
mov
fwait
pop
xchg
jo
mov
sub
shll
rcll
pop
mov
out
mov
inc
imul
sbb
pop
jb
scas
and
out
xchg
jmp
ja
int3
inc
add
jae
adc
pop
cltd
leave
divl
bound
int3
mov
cmp
fdivl
out
inc
mov
hlt
out
adc
pop
xor
and
fldcw
xor
or
and
sbb
cmc
cmpsb
mov
adc
add
jnp
stos
xor
lahf
inc
or
inc
aaa
pop
mov
adc
push
adc
stos
inc
jmp
mov
sub
xchg
dec
ljmp
mov
push
cmc
sbb
sahf
xchg
daa
sub
lret
jl
shrb
addl
push
dec
mov
cmp
sbb
adc
pusha
adc
out
push
ljmp
sbbl
daa
pop
pop
rcrl
stc
lret
add
sbb
mov
dec
stos
repnz
ljmp
lods
jne
les
xchg
mov
inc
xor
inc
stos
push
pop
xlat
cmp
adc
lds
pop
mov
lret
ljmp
jae
xchg
xchg
adc
xchg
xchg
ds
pop
and
inc
aaa
lcall
xchg
xchg
inc
lds
jmp
mov
cmpsl
add
mov
cmp
dec
mov
sbb
pop
dec
das
call
ret
imul
data16
or
ds
std
push
cli
aam
cs
push
call
or
fildl
insl
mov
ja
call
movsb
cmp
inc
sbb
setl
fistpll
xchg
mov
push
xor
pusha
xchg
lahf
addr16
daa
mov
jae
mov
mov
sti
cwtl
xlat
xor
sub
enter
xchg
int
push
cmp
mov
out
sub
xchg
or
jmp
add
adc
hlt
mov
xchg
shl
or
repz
push
cmpsl
pop
fs
mov
jbe
sub
lds
pop
inc
jae
mov
shlb
fnsave
or
cwtl
push
call
aam
dec
add
cmp
out
xlat
rclb
sub
aaa
add
push
ss
ficoms
call
and
inc
push
xchg
sbb
or
mov
cld
jp
loop
js
in
lods
jbe
out
ret
je
jae
mov
movsl
add
rcrb
fisttpll
or
cwtl
imul
dec
imul
std
out
xlat
call
pop
pop
adc
add
inc
outsb
xchg
jns
insb
and
cld
sbb
pop
push
das
mov
adc
popa
mov
loop
lock
cld
repz
push
cmpsl
push
addr16
mov
sub
jne
pop
pop
sub
mov
out
dec
iret
sub
and
cmpb
adc
es
adc
xor
lret
mov
movsl
push
xor
jmp
std
pop
cwtl
test
ret
aad
jno
lret
jno
loopne
repz
ud2
ja
cmp
scas
lods
jns
ret
cmpsb
xchg
andl
cli
xchg
fnsave
int3
jmp
pop
adc
movsb
mov
jb
test
fnsave
negl
jne
inc
std
leave
iret
cmp
ret
shr
idivl
ja
dec
xlat
jbe
jge
pop
sti
call
stos
pop
jne
jae
popf
mov
mov
xchg
rolb
pop
movsl
mov
movsl
mov
xor
mov
pusha
pushf
pop
pop
xor
std
stos
pop
mov
clc
cmp
idivl
add
xlat
movsl
test
lods
lods
pop
mov
mov
cld
push
dec
jmp
incb
add
shl
and
sbb
movsb
aas
mull
aam
xlat
divl
pop
sbb
jnp
fistps
xchg
aas
pop
out
xor
scas
jl
cmp
pop
mov
pop
add
pop
cmp
mov
lret
out
cmp
cli
movsl
push
jnp
mov
mov
jnp
lahf
adc
int3
mov
xchg
push
pop
xor
xor
mov
mov
inc
stos
xor
jns
lret
mov
pushf
shlb
and
xor
stos
repz
and
out
test
push
fsubrl
bound
in
mov
sbb
loopne
out
daa
fisttpll
rorb
nop
fwait
xchg
outsl
loopne
out
xchg
stos
push
mov
dec
and
xchg
fdivs
mov
inc
fisttpl
mov
dec
pop
jno
mov
test
and
es
xlat
cmp
mov
cmp
repz
dec
mov
cmpsb
int
fnstcw
insl
lea
shrb
insl
rcr
jo
xchg
lds
dec
fsubl
hlt
aas
adc
ja
xchg
daa
fwait
pop
cwtl
leave
leave
lahf
or
mov
sti
test
mov
xchg
mov
and
fcmovnb
pushf
mov
mov
mov
insl
fidivl
mov
and
rorb
int3
fmulp
leave
cmp
or
ret
sbbl
int
int3
hlt
mov
ljmp
push
mov
ret
loopne
cmp
pop
push
iret
pop
es
ds
iret
lcall
dec
inc
adc
push
aas
xor
movsl
cmp
push
fldcw
fsubrp
not
cmp
fbld
adc
cli
iret
cltd
pop
outsl
orb
data16
mov
out
pop
aaa
fcmovnb
pop
or
in
enter
inc
and
cmc
loop
jmp
and
mov
test
scas
sbb
push
into
mov
xchg
xchg
cmp
lcall
inc
std
xchg
xor
sub
sti
mov
pop
sti
sub
negl
dec
sti
sbb
xor
xchg
out
jle
mov
popf
fidivs
icebp
iret
sarl
dec
cltd
mov
mov
inc
inc
lret
inc
outsl
cmpsl
lcall
inc
lock
mov
mov
ret
xchg
test
pop
and
inc
leave
or
sbb
cld
int3
push
jno
add
and
dec
mov
lds
adcl
aam
fsubrl
ret
jae
xchg
xor
jb
or
pop
testb
sbb
add
xchg
add
xchg
adc
shll
pop
lret
stc
inc
sarb
xchg
lea
es
xor
and
divb
pop
xchg
or
icebp
ret
nop
xlat
mov
pop
cs
xchg
lods
xor
cmp
xorl
push
out
mov
in
push
loopne
pop
les
xor
or
push
sbb
adcb
jne
and
popf
cld
leave
dec
mull
into
pinsrw
sbb
arpl
lea
cmp
or
cmp
jnp
shll
pop
jae
fs
je
mov
mov
cmovo
addr16
dec
das
aaa
xor
mov
mov
lret
icebp
data16
int
aas
mov
gs
in
add
mov
pusha
and
or
mov
popf
or
jb
dec
push
add
pop
adcl
nop
and
leave
dec
lds
mov
in
fldenv
mov
out
adc
ret
or
icebp
outsb
adc
lds
ret
lea
out
filds
and
fwait
and
pop
leave
sub
sub
xchg
cmp
fimull
jp
popa
test
test
icebp
jne
mov
cmpsb
push
fwait
cmpsl
or
fwait
jl
mov
fldenv
push
out
xor
cltd
fstps
loop
mov
bound
dec
fdivl
test
fisubs
pop
cmp
lea
jg
dec
and
in
inc
cmp
pop
cmpsb
outsl
daa
sub
fcoms
mov
and
js
loop
mov
sbb
dec
imul
dec
lds
std
jno
jecxz
or
mov
ficoml
mov
pop
sub
iret
je
sbb
pop
or
movsb
leave
push
inc
out
pushf
mov
or
dec
stos
dec
cwtl
pop
dec
pop
addr16
iret
cmp
or
pop
jp
repz
add
jae
xchg
pop
movlhps
in
jp
xchg
cmp
test
push
mov
out
pop
xor
jl
aaa
cmp
inc
mov
negb
pop
fistpl
stc
jb
hlt
test
adc
sbb
shl
daa
outsb
and
mov
jg
shrb
insb
fwait
lods
es
call
or
xor
ljmp
test
insl
push
dec
sahf
push
fimull
jb
push
mov
loopne
and
in
mov
stos
adc
flds
cmp
fimuls
scas
ret
cmpsl
shrl
rcr
call
mov
addr16
jmp
push
sbb
pop
in
lock
outsl
pop
int
cmp
sub
aaa
rcll
push
call
push
fs
adc
lcall
movsb
mov
cwtl
fidivrs
jg
imul
dec
jns
outsl
mov
not
cmp
cltd
xor
adc
sbb
adc
inc
lock
je
mov
pop
or
ret
xor
push
sbb
fdiv
scas
add
ja
jg
xchg
and
jbe
nop
minps
jge
cmp
bound
frstor
add
sbb
xchg
or
scas
add
adc
fidivrl
aas
sbb
lret
stc
nop
xor
in
cmp
bound
push
inc
xor
stos
stos
out
jae
sbb
or
cld
fs
xor
cmp
out
addr16
cli
repz
inc
pop
cltd
rol
jl
jno
sbbl
add
adc
sarl
out
nop
pop
stc
adc
rcrb
mov
lret
sub
les
shll
sub
sub
sub
mov
cmp
mov
fsubr
pop
ss
dec
sbb
mov
or
fsubr
pop
rolb
mov
and
lret
shl
mov
fistpl
adc
daa
or
dec
pop
subw
cmp
adc
fisttps
pop
imul
cmpsb
hlt
movsl
push
lret
dec
mov
or
clc
fidivl
mov
out
pop
xchg
pop
fwait
loop
cmp
mov
pop
ds
push
jmp
dec
and
shlb
adcb
dec
xor
aad
push
cmp
movsl
add
and
fildll
and
ret
loope
mov
in
xchg
cltd
cmp
ss
sub
push
cwtl
mov
fidivrs
mov
xchg
lret
andb
mov
je
ficompl
and
out
addr16
add
and
cmpsl
repnz
add
enter
jmp
xchg
fdivr
pop
mov
loop
aad
lret
dec
rol
sub
stos
testl
add
mov
insb
ret
inc
push
outsb
and
jmp
cmp
ljmp
lock
in
rolb
js
shlb
mov
xor
pushf
insb
push
push
jae
nop
adc
rcr
mov
out
leave
jb
mov
adc
sub
stos
mov
int
mov
repnz
or
adc
mov
mov
out
es
lea
mov
ja
and
in
mov
jb
or
cmc
and
dec
outsl
mov
insb
in
maxps
or
push
mov
ret
xor
movsl
push
enter
xor
pushf
push
and
mov
push
pop
fwait
mov
dec
stos
dec
in
adc
fidivrs
mov
jge
adc
adc
lods
jg
jns
repnz
imul
idivb
pop
fsub
aaa
mov
cmpsl
dec
call
cmp
lock
mov
out
les
sbb
outsb
rorl
xchg
dec
xchg
test
add
and
sbb
inc
mov
dec
or
xchg
sub
fld
jne
xor
sbb
ror
fstps
out
add
pop
outsb
xor
sub
mov
push
mov
cmpsb
fstps
mov
fisttpll
aaa
jne
sub
outsb
outsl
pop
sbb
sub
cmp
lcall
and
pop
dec
pushf
xlat
pop
or
je
pop
inc
int3
mov
outsl
jle
out
mov
loopne
dec
cmp
icebp
jno
fsts
sub
fbstp
lods
lods
and
dec
lock
shll
mov
lret
mov
mov
xor
adc
jge
xor
push
addr16
fcomip
mov
jecxz
adcb
pop
movsb
iret
inc
dec
je
mov
sbb
push
xor
or
das
push
movsb
xor
xchg
lret
cltd
mov
mov
test
push
push
jmp
jge
loope
or
fsubl
cmp
mov
test
add
in
dec
fnsave
sarl
mov
jp
das
cmc
jle
xchg
inc
sub
ret
pop
adc
lds
sub
dec
fwait
int3
xlat
mov
lods
lahf
pushf
mov
jecxz
fmull
aad
stos
int3
jle
push
lret
aad
cmpb
jg
ljmp
std
outsl
ljmp
aam
sbb
cwtl
and
or
adc
pop
iret
into
inc
loope
xor
xchg
ss
movsl
inc
cld
xchg
outsl
push
ret
inc
xlat
pushf
cli
dec
jge
mov
inc
into
dec
outsb
mov
fbstp
push
sti
inc
ret
stc
push
adc
aam
sarl
push
or
mov
mov
fidivrl
mov
mov
adc
mov
inc
xor
pop
cld
rorb
jecxz
mov
sbb
inc
pop
sbb
movsl
inc
cmp
scas
and
mov
testb
je
add
insl
rcl
adc
out
leave
xchg
mov
sbb
mov
loope
mov
into
jp
xchg
sub
stos
cld
sbb
out
fcoms
or
pop
mov
xchg
ljmp
adc
push
cmp
push
sbbb
iret
fbld
sbb
ds
leave
sbb
int
or
in
es
out
bswap
inc
std
mov
scas
leave
into
aad
and
cs
xchg
enter
lock
leave
cmpsl
notl
sbb
adc
outsl
mov
fstpt
mov
mov
stc
pop
mov
mov
ret
cmp
sti
int3
icebp
and
pop
insb
push
jmp
stos
ljmp
push
scas
adc
aaa
jp
aaa
cmpsb
or
and
xorb
xchg
aam
mov
push
sbb
fucomip
outsl
popa
mov
xlat
int3
cmp
xchg
out
nop
pop
shll
das
mov
rcrb
aam
mov
cmp
mov
es
mov
rep
xchg
push
sub
out
sbb
mov
add
pop
aaa
and
outsb
and
push
pop
and
mov
sbb
test
int
push
mov
sbb
movsl
pop
sub
jmp
loop
xor
cmpsb
xor
test
stos
mov
pusha
mov
mov
pop
jne
sbb
movb
into
nop
sarl
mov
loope
popa
cmp
mov
repnz
cmp
dec
mov
sbbb
pop
orb
scas
mov
jl
mov
mov
jns
hlt
adc
andb
inc
repnz
pop
stos
push
mov
popl
mov
jmp
scas
inc
js
lods
loop
sbb
int3
fcompl
hlt
shrb
add
and
sub
mov
or
lds
adc
jbe
out
mov
pop
adc
pop
mov
call
fsubr
mov
ret
cmp
adc
pop
nop
fistpl
in
adc
xor
mov
insb
jne
sahf
test
out
pop
dec
jge
mov
dec
scas
cltd
cmp
stos
mov
cwtl
das
sbb
or
dec
pop
fcmovnu
fmul
adc
rolb
fucomi
dec
add
jae
fsubs
scas
les
pop
mov
int
and
fcmovnu
push
clc
sub
push
or
in
lea
xchg
out
pop
dec
rcr
addr16
lods
xchg
jp
out
addl
inc
cmc
inc
rsqrtps
pop
cmp
nop
inc
in
fs
inc
lds
les
push
mov
mov
inc
cmp
sub
push
jb
scas
inc
cmp
aaa
pop
neg
adc
daa
inc
hlt
cli
mov
add
dec
shl
pop
stos
mov
sub
js
stos
jb
adc
repz
xchg
pop
cmc
in
je
cmp
fcmovu
xor
xor
jb
gs
cld
loop
push
add
repnz
cmpsl
aas
mov
movsl
enter
mov
xor
out
bound
mov
inc
dec
fisttpll
popf
das
xor
push
insl
cmp
lods
ss
aaa
cmp
lock
js
push
lret
xchg
test
in
lods
pop
loope
scas
pop
cmc
ja
lock
mov
into
nop
repnz
push
dec
leave
push
out
xchg
dec
out
repnz
mov
psubq
es
leave
mov
jge
xchg
sub
frstor
mov
inc
mov
mov
ficomps
cmp
leave
ljmp
push
push
gs
mov
ret
jne
push
fwait
sbb
push
test
xor
or
xor
inc
pushl
popf
outsl
aad
push
mov
into
mov
jecxz
lds
push
cld
jo
push
out
xchg
mov
pop
pop
pusha
or
mov
pop
cmp
adc
xchg
xchg
lret
inc
inc
pop
ret
out
mov
hlt
xor
or
xchg
gs
sahf
jns
fstl
daa
ficompl
test
mov
ss
pop
adc
fildll
out
scas
fdivrp
pop
push
or
mov
call
shl
sbb
jle
leave
pop
dec
adc
sub
mov
aaa
insb
insl
out
test
jo
fstl
outsl
push
or
pop
cmp
stos
mov
out
push
mov
fwait
out
sub
mov
bnd
bound
das
lods
inc
and
push
mov
cmp
sbb
outsb
movsb
xchg
xor
pop
adc
jae
lods
fldcw
outsb
cld
pop
push
push
xchg
inc
jo
movsl
in
xchg
shlb
lret
pop
cmp
aad
mov
maskmovq
testl
scas
mov
and
add
sub
insl
add
test
or
je
xchg
les
ds
adc
push
scas
inc
out
lock
mov
and
fsubrl
xchg
orl
push
inc
jbe
sbb
push
push
ret
cld
lret
stc
aam
inc
xor
enter
adc
fmuls
pop
or
jno
aam
insb
add
js
dec
adc
cwtl
stos
sbb
pop
jns
jne
pop
mov
arpl
je
adc
adc
outsl
movsb
sbb
lods
mov
mov
sbb
movsl
gs
inc
data16
daa
out
mov
loop
movsl
addl
mov
repz
mov
shr
insb
test
pop
int
adc
addr16
ret
call
cmpsl
jne
pop
mov
sbb
ljmp
sbb
popl
pusha
shrl
xchg
add
ja
push
lret
sysret
rcrl
mov
cmp
out
decb
stos
xchg
pop
fsub
inc
mov
xchg
mov
stos
dec
add
cmp
inc
insb
mov
sti
cmp
push
jl
mov
and
mov
test
sub
filds
addr16
dec
into
mov
neg
inc
popf
fcmovnb
pop
test
sti
in
mov
insl
stos
stos
lret
aas
cld
add
inc
xorb
mov
inc
cmp
sbb
ljmp
iret
test
push
xchg
ret
enter
adc
or
lods
or
pause
out
jns
jecxz
push
mov
push
inc
inc
sub
pop
imul
fdivs
adc
test
sub
sbb
and
sub
les
shll
xor
xor
jp
sub
push
jne
lock
mov
push
and
test
test
adc
sbb
mov
adc
push
out
mov
mov
fisttps
lret
xchg
inc
mov
fs
pop
sbb
or
and
mov
in
adc
xchg
mov
xor
xchg
pop
dec
xchg
pop
outsb
jns
loope
or
stos
ficoml
mov
or
cwtl
dec
addr16
test
mov
mov
ja
and
imul
adc
mov
arpl
mov
push
mov
jg
and
repnz
mov
xor
pop
adc
adc
test
popa
decl
stos
aad
jnp
jmp
les
inc
sti
lret
fwait
aas
xchg
cmp
sbb
aam
popa
push
xchg
lods
lret
js
nop
jbe
jle
in
into
and
add
out
lock
mov
cmp
out
mov
jmp
dec
cmpsl
inc
js
mov
jns
jb
dec
jle
mov
test
pop
mov
iret
test
xchg
je
mov
or
push
fstpl
mov
cmpsb
decb
sar
movsl
jns
cmpsl
cltd
adc
mov
sbb
dec
out
aam
mov
out
cwtl
mov
std
testb
jne
jle
cli
hlt
dec
jae
data16
mov
lods
jb
lea
add
dec
and
xchg
aaa
mov
cmp
sti
pop
jo
cmpsb
cltd
push
mov
shrb
fcompl
inc
lret
push
int
xchg
flds
add
mov
lret
enter
mov
jg
rcr
decl
gs
pusha
and
pop
sub
jle
scas
mov
add
ja
pop
mov
cld
pop
sbb
fs
scas
dec
fmulp
fstp
fcomip
iret
xor
mov
inc
push
push
cmpsb
iret
icebp
lret
cmp
mov
inc
sub
inc
xor
xorl
inc
loope
xchg
roll
test
loope
fsts
das
mov
inc
mov
testb
jl
and
mov
push
mov
pop
ja
lods
imul
fcom
pop
ror
out
aas
xchg
aas
das
push
xchg
cmp
sti
xchg
sbb
and
dec
mov
mov
dec
stc
dec
mov
jne
xchg
pushf
stos
jb
mov
mov
adc
xor
and
sqrtps
nop
stos
test
sbb
xor
outsl
mov
sti
jle
sbb
out
mov
jne
and
dec
and
jecxz
push
sub
in
dec
cld
rcrb
xchg
and
movups
xor
sub
mov
lods
insb
scas
xor
stos
ret
xor
test
cmp
cmpsb
shlb
mov
outsl
mov
adc
sbb
mov
jg
jae
jnp
mov
lods
iret
lock
and
jg
and
and
cmpl
daa
push
xchg
or
fdivrs
mov
push
push
idivb
mov
sub
mov
push
xchg
xchg
cmp
pop
cmpsl
jl
lods
enter
loopne
cmp
add
pop
sbb
push
mov
and
shlb
test
push
fwait
imul
cmc
xchg
loope
iret
in
pop
dec
cmc
sbb
cmp
aad
or
addr16
xchg
mov
xchg
fistl
adc
xor
fisttpll
pop
cld
inc
in
movsb
inc
addr16
popf
arpl
dec
cmpsl
cmp
addr16
bound
test
mov
push
adc
insb
xlat
or
in
jns
adc
nopl
dec
sbb
out
mov
and
cmpl
in
aas
stos
adc
xchg
and
js
popf
push
imulb
les
mov
mov
fwait
jmp
repz
out
inc
fbstp
stc
dec
mov
pop
mov
in
idivb
daa
sbb
pop
mov
in
mov
cmp
xor
or
jbe
jl
or
or
sbb
mov
jns
sub
shr
js
movsb
mov
loop
jmp
leave
fisubrs
or
sahf
shl
mov
aad
push
cmp
push
ret
mov
jecxz
ret
lea
xchg
jns
mov
push
inc
xchg
or
xchg
cli
ret
jmp
sbb
sub
rorb
ret
xor
je
mov
repz
ret
addr16
jne
xchg
clc
mov
paddd
scas
mov
adc
out
or
aas
push
pop
rorb
fisttps
mov
sbb
arpl
into
outsl
push
or
pop
xchg
push
fmulp
iret
and
push
inc
in
sahf
rol
std
xchg
movsb
mov
fdiv
cmp
jo
stos
mov
rcr
mov
ds
cmp
frstor
mov
stc
scas
lret
mov
stos
into
jge
xor
scas
xchg
xor
and
test
addr16
cmp
stc
out
sbb
loop
cmp
xchg
push
mov
mov
push
xor
outsb
cwtl
mov
aam
pop
xchg
lods
test
js
out
fldl
scas
jmp
mov
dec
inc
adc
fsubrl
mov
fcmovbe
movsl
jecxz
out
call
dec
sub
dec
lret
or
jmp
or
in
daa
adc
out
int3
in
cmp
adc
fiadds
stos
adc
mov
outsb
lds
xchg
sub
fldenv
ljmp
add
dec
xlat
dec
aas
push
lcall
addr16
inc
xchg
pop
sbb
sbb
pop
pop
xchg
jecxz
jle
in
fldcw
xor
inc
jo
test
loope
pop
fst
ja
ljmp
imul
mov
aam
pushf
xchg
mov
out
mov
out
or
int3
rcr
movsl
jae,pn
xor
mov
arpl
push
rolb
out
ret
jmp
xor
das
xchg
xchg
stc
lret
les
enter
loope
push
sahf
fxtract
fldcw
dec
sub
pusha
out
lea
inc
jp
shlb
xchg
xchg
or
repnz
mov
mov
aad
ret
xchg
test
adc
sbb
lods
les
clc
mov
cmp
xchg
dec
mov
aad
mov
add
xchg
into
test
pop
add
jns
pop
and
ss
negl
lcall
mov
rcpps
mov
sub
jmp
inc
and
testb
xor
jl
int
pop
pushf
jge
loopne
cmc
mov
mov
xor
scas
out
inc
jnp
mov
adc
cld
imul
cltd
mov
push
jle
enter
loopne
les
dec
pop
jg
aaa
sahf
sbb
pop
and
cs
push
adc
mov
gs
push
or
insl
fdiv
or
fistpl
inc
sub
test
out
sarb
fistps
mov
inc
xchg
pop
mov
divl
mov
inc
and
or
jno
jp
pop
mov
jae
mov
mov
call
test
or
pop
inc
or
scas
loopne
ja
notb
xchg
loop
rol
movsb
in
jg
cwtl
std
xchg
mov
mov
daa
jmp
or
lea
add
ffreep
xlat
gs
cmp
out
cltd
push
decb
mov
mov
or
mov
lock
into
ja
or
pop
jno
add
xor
xor
sub
xor
ljmp
xor
ja
andl
jg
pop
int
mov
jle
pop
or
mov
bound
and
push
pop
xor
ret
mov
mov
aaa
dec
out
aaa
xor
ss
into
cmpsb
mov
xchg
outsb
adc
inc
jo
xlat
jne
pushl
iret
cmp
adc
fidivs
mov
mov
inc
ret
mov
xor
gs
pop
fwait
ljmp
nop
mov
ljmp
mov
lds
add
xchg
inc
lds
outsb
aad
jae
mov
mov
fwait
repz
mov
scas
into
test
lcall
fcmovnbe
or
push
cmp
sbb
ljmp
pop
jg
and
into
sbb
mov
pop
fisubrl
pop
push
adc
mov
push
add
subl
mov
cmpl
push
fwait
cs
lods
push
mov
js
mov
cli
jl
lret
fidivl
cli
jo
incl
int
out
sbb
mov
adc
inc
dec
int
pop
out
and
push
pop
cmp
pop
cli
cmp
out
stos
push
sbb
lods
xchg
loop
fiadds
sub
ljmp
shr
sbb
jl
jae
int3
xchg
mov
mov
push
lret
xchg
outsb
push
shll
enter
adc
movups
fisttpll
cli
mov
pop
push
sti
pop
out
fs
mov
jnp
dec
sti
add
ja
push
jmp
jg
inc
push
inc
cld
aaa
and
dec
es
addr16
and
xchg
mov
mov
push
fwait
xchg
pop
es
sti
roll
xchg
mov
addl
xchg
es
js
ret
inc
in
xchg
mov
push
push
xchg
xchg
mov
repz
inc
xchg
mov
mov
ret
lcall
rcl
push
es
sub
cmp
cli
inc
shlb
fs
add
mov
imul
std
jb
lea
ljmp
mov
inc
jmp
mov
cwtl
lahf
mov
out
movsl
xchg
lds
push
popl
push
or
mov
pop
or
test
movsl
mov
mov
mov
daa
pcmpeqd
sahf
out
hlt
mov
push
in
or
orb
inc
mov
sub
jne
fmull
daa
popl
lock
xchg
xchg
aad
jne
jae
adc
and
aas
xchg
dec
lods
insl
nop
mov
scas
lahf
inc
jns
and
xor
fs
sub
adc
mov
mov
lock
dec
or
nop
or
es
fmull
jbe
mov
es
test
out
test
nop
add
adc
dec
fisttpl
xchg
pushf
sbb
out
sbb
lret
xlat
popa
dec
add
out
fistps
xchg
clc
std
notl
add
adc
es
cwtl
sahf
sub
insl
daa
movsb
sub
sbb
lahf
xchg
adc
popf
sti
rcrb
mov
inc
cmp
outsb
and
sub
push
inc
gs
jne
sahf
ja
or
add
or
push
testl
jle
sub
xor
fwait
sbb
out
cmpsb
repnz
lock
mov
or
xchg
jb
fldcw
xor
insl
xor
mov
pushf
addr16
jnp
xchg
adc
inc
repnz
push
test
push
adc
outsb
popf
dec
push
push
mov
enter
or
aas
aaa
sti
push
imul
fmull
push
outsl
and
test
pop
and
cmp
xor
cmc
sti
inc
inc
les
and
sbb
cmp
test
adc
or
inc
rol
out
mov
inc
mov
adc
xor
iret
xchg
es
les
ret
leave
rcrl
jle
mov
fisttps
add
push
mov
fwait
cmp
xchg
pop
xchg
xor
outsb
out
jp
xor
aaa
xlat
and
movsb
mov
cwtl
lret
add
arpl
mov
xlat
or
shlb
sub
xlat
fisubrl
cltd
aad
xor
lods
dec
xchg
in
fnsave
mov
test
aas
gs
pop
lds
sub
mov
mov
mov
lds
rcr
cmp
and
adc
xlat
jbe
mov
movsb
lret
dec
jmp
lret
mov
and
movsb
add
mov
inc
mov
pushf
cld
or
xor
in
mov
sbb
mov
movsl
aas
std
aad
cs
inc
nop
sbb
add
mov
jnp
faddp
pop
adc
aas
mov
mov
repz
inc
lret
inc
or
test
lahf
sti
mov
dec
and
in
mov
xchg
in
or
adc
out
mov
add
pop
mov
xchg
jmp
pushf
test
test
dec
push
fstpl
pop
or
enter
movsl
add
iret
ljmp
mov
mov
xchg
loop
jp
icebp
cltd
sub
in
mov
sub
adc
test
dec
in
cmp
lcall
lcall
mov
in
psadbw
cmp
dec
jbe
ficompl
sbb
fwait
ror
mov
mov
mov
imul
dec
aam
xchg
inc
mov
dec
daa
xchg
fiadds
push
ret
cmpsb
gs
movsl
push
incl
ja
js
jo
sbb
xor
cmp
sub
mov
and
mov
pop
mov
xchg
int
leave
add
jmp
pop
rcrl
in
xchg
xchg
jecxz
pop
insb
mov
mov
push
mov
in
sbb
outsb
mov
call
xchg
outsb
jmp
mov
test
cwtl
dec
inc
and
sub
mov
lret
mov
or
popf
imul
idiv
pop
and
mov
xchg
movsl
cmp
test
lret
add
dec
and
sbb
lahf
mov
jmp
shlb
xlat
xchg
dec
push
stc
cmpsb
xchg
cmp
lahf
sub
push
inc
jbe
mov
mov
xchg
sub
test
adcb
rcrb
mov
mov
lock
lock
pop
and
or
mov
scas
and
fmuls
add
push
xor
data16
in
nop
sti
ss
ss
push
into
mov
lds
data16
mov
repz
test
jo
mov
addr16
sbbl
pop
fs
ss
mov
addr16
mov
gs
and
iret
mov
scas
fcmovnb
push
mov
mov
inc
and
mov
mov
das
inc
lods
repnz
ret
testl
lahf
addr16
fucom
or
cwtl
mov
cmp
dec
ja
in
addr16
rolb
data16
push
subb
aas
adc
sbb
inc
sahf
int3
cmp
inc
cld
adc
and
inc
cmp
rcrl
pop
das
push
lods
div
fs
out
jae
mov
movsl
out
jcxz
call
inc
mov
js
into
push
pop
xchg
adc
cld
pop
or
ja
xchg
mov
stc
std
sbb
out
push
jle
outsb
and
dec
sbb
shrl
inc
xchg
outsl
mov
jne
in
out
adc
jb
fimuls
pop
inc
inc
sti
orl
fcmovu
outsl
testl
adc
test
out
xchg
data16
pusha
pop
sbb
icebp
into
push
in
push
push
push
lods
xor
xor
jae
roll
dec
mov
add
pushf
adc
in
jb
pop
fcmovb
xchg
inc
rorl
mov
aas
push
push
ret
xchg
dec
pop
cmp
and
cld
or
sbb
dec
fwait
lods
sub
icebp
popf
inc
and
mov
lods
arpl
adc
sbb
das
call
clc
fcmovnu
fisttpl
cmp
push
xchg
xor
or
sbb
adc
sub
scas
test
jmp
xor
xchg
enter
push
in
push
lods
mov
inc
cwtl
test
cs
jmp
jb
push
mov
jle
fwait
stos
aam
inc
xchg
sub
xor
shl
adc
xlat
cltd
mov
sarb
xor
in
lret
decb
jo
mov
mov
popf
fidivrl
xor
pop
adc
rolb
push
mov
push
mov
xchg
add
rolb
notl
fildl
xchg
mov
in
cmpsb
mov
inc
mov
fcomps
pushl
iret
fsubr
ds
jl
orl
mov
jge
cld
ljmp
fcmovbe
int
fdivrs
and
add
or
out
and
mul
les
push
mov
dec
pop
and
shlb
data16
stos
sub
rolb
fldenv
pusha
mov
inc
sbb
cmp
icebp
aam
xor
das
inc
xor
mov
push
xor
test
aam
addl
mov
les
stos
test
sti
xor
cld
lret
frstor
je
popf
int3
sbb
push
xlat
popf
mov
daa
test
fnsave
xorl
inc
xchg
rorl
cld
shrl
mov
mov
cld
leave
and
out
js
pop
lcall
fiadds
sub
std
or
fwait
js
push
pop
add
ja
daa
repz
xor
out
mov
fs
cld
subb
mov
std
cmp
sbb
mov
mov
mov
xor
and
mov
lock
stos
movsl
in
dec
push
mov
and
inc
mov
lock
cmc
js
cmp
cmp
mov
jle
inc
cmpsl
xlat
fcmovnb
dec
ret
pushf
iret
inc
inc
lahf
and
jle
mov
sub
cs
out
push
fdecstp
iret
inc
fcmovne
cmc
and
adc
mov
ret
cmp
pop
enter
popf
insl
ja
mov
inc
push
inc
nop
mov
movsb
hlt
pop
and
xchg
pop
jge
adc
pextrw
pop
jecxz
call
push
add
add
mov
imul
sbb
es
sbb
enter
scas
or
or
ja
mov
xchg
leave
in
fildl
jle
int
lret
es
mov
fldenv
iret
sub
cmp
and
ficomps
out
mov
lods
arpl
jmp
mov
and
and
add
adc
inc
cld
pop
pop
mov
mov
mov
cwtl
or
fpatan
jecxz
bswap
pop
dec
rcll
mov
and
daa
fldt
jge
and
cmp
xchg
aas
cmpb
mov
enter
aaa
push
dec
cmp
aam
addb
je
xorl
lret
leave
fstl
ss
insb
dec
daa
fbstp
clc
cmp
out
pop
jbe
or
jmp
mov
out
and
jns
cmp
ret
ljmp
out
push
xor
test
xor
lods
movsb
mov
arpl
cmp
cmp
out
push
loop
stc
insb
iret
sub
mov
pop
xchg
mov
repz
imul
ret
into
dec
jnp
sbb
iret
cmp
xlat
dec
fwait
cld
aaa
sbb
repz
push
call
icebp
pushf
cmpsl
into
bound
or
les
add
mov
shrl
fisttpl
adc
std
mov
and
push
sbb
xor
mov
adc
popf
les
fbstp
jo
mov
sub
xor
push
dec
and
pop
fwait
leave
sub
mov
dec
adc
scas
pop
jb
and
mov
and
sbb
or
push
sub
subb
sbb
push
nop
lret
sbb
sbb
push
and
add
ficoml
dec
les
inc
inc
push
cmp
mov
mov
lret
mov
adcb
or
xor
xorl
aas
mov
hlt
cmpsb
dec
in
repnz
add
imul
mov
sub
repnz
fsubl
imul
je
repnz
lock
dec
lahf
les
mov
imul
pop
rorb
lods
add
or
jno
mov
sbb
dec
push
aad
rorb
mov
dec
aad
icebp
les
stos
dec
cmp
pop
movsb
mov
fmul
fxch
cmc
mov
out
inc
mov
sub
xor
push
push
and
push
dec
out
test
sbb
push
in
cmpsl
stos
cmp
xor
jb
je
cs
aas
pop
push
aad
add
iret
push
inc
ret
cmc
loop
out
in
or
into
add
sub
and
sbb
in
dec
inc
sub
into
aad
orb
movsl
mov
dec
dec
aad
dec
divb
dec
and
test
mov
aas
xor
pop
lahf
and
mov
mov
mov
movsl
xchg
sbb
lahf
sbb
sub
add
push
fisttps
mov
leave
out
popf
scas
and
push
in
movsb
or
daa
std
xchg
sbb
dec
std
pushf
insb
jno
lahf
negb
test
push
mov
fistpl
fisttpll
call
fistpl
dec
repz
push
popa
int3
xchg
imul
or
test
inc
lret
push
dec
arpl
mov
dec
scas
adc
sub
outsl
pop
jl
imul
sub
xor
mov
dec
out
sub
repz
xchg
mov
mov
rcrb
ja
stc
push
xchg
into
cmpsl
popf
jp
pop
or
pop
rcrl
mov
lcall
inc
jge
jecxz
sub
pop
pop
inc
dec
aad
mov
or
xor
pushf
flds
sub
xor
mov
daa
les
xor
in
sarl
and
push
pop
mov
xlat
inc
mov
aas
push
into
cmp
mov
jns
iret
sbbl
outsb
or
xchg
test
scas
mov
jecxz
mov
popa
pop
jmp
push
pop
push
pop
sete
loop
xchg
xor
dec
mov
out
jae
int3
in
cmp
fcoml
pusha
and
and
xchg
lods
dec
scas
movl
jg
loope
sbb
imul
xor
dec
xchg
xchg
cwtl
lds
fldt
stos
insl
and
jns
mov
sahf
test
mov
jecxz
aaa
xor
add
pop
fwait
arpl
xorb
mov
mov
out
fdivs
push
add
add
mov
lret
loopne
leave
jl
sub
int3
lahf
dec
mov
insb
pusha
sub
cmp
xchg
mov
sbb
jae
outsl
ret
stos
xor
stos
je
jmp
sub
push
pop
outsl
dec
jg
loope
sbb
rcl
mov
andl
xadd
fisttps
in
mov
fcoms
jbe
mov
aaa
inc
fsubrl
les
sub
dec
out
leave
imul
ja
fsubrl
aam
lahf
xor
mov
gs
add
getsec
or
cmp
push
push
and
fisubrl
jmp
pcmpgtd
xor
dec
push
add
cmpb
xchg
and
sbb
sbb
in
scas
incl
jmp
in
lret
ja
ljmp
xchg
loop
fs
cwtl
pusha
cli
xor
xchg
jae
mov
shrl
mov
inc
or
enter
into
mov
daa
dec
inc
adc
std
cmp
je
pop
xor
ja
cmp
sub
lahf
xchg
or
push
mov
fistpll
xchg
shr
inc
pop
aaa
adcl
fmul
jns
jo
mov
outsl
neg
fcompl
lret
and
cmp
lea
jno
and
cmp
xor
xor
push
or
inc
outsb
dec
cmp
inc
movsb
mov
shl
mov
adc
jge
scas
cmp
sahf
int
sub
xcrypt-ofb
cmpsl
test
xor
ficompl
jge
cmp
sub
sub
mov
mov
sub
pusha
mov
jno
je
mov
std
insl
jmp
stos
frstor
mov
into
insb
sbb
inc
ret
leave
jo
adcl
iret
test
mov
push
or
inc
mull
mov
gs
test
je
test
add
roll
sub
xchg
mov
cmp
mov
stc
clc
mov
aad
shrb
add
orb
fbstp
les
jnp
lret
inc
into
mov
xchg
imul
inc
hlt
addr16
add
adc
xor
mov
mov
cmp
enter
sarl
mov
adcb
pusha
ret
dec
cmp
push
xor
jb
clc
inc
mov
popl
inc
mov
pop
data16
jl
mov
fsts
xlat
fisubrs
mov
lods
and
cmp
fdiv
mov
stos
outsw
pop
addb
mov
loopne
xchg
mov
aad
mov
inc
xchg
or
cwtl
mov
cwtl
dec
fwait
cmp
cmp
rep
mov
pop
jge
loop
dec
jbe
mov
sbb
and
les
loopne
ljmp
push
sti
xchg
into
test
aad
lods
addr16
jnp
xchg
cmp
stos
insl
mov
push
push
mov
xchg
sbbl
mov
rcr
cmp
cmpsl
iret
sarb
ja
pop
repz
ljmp
jp
pop
cwtl
inc
sbb
roll
add
pop
pop
or
fisubs
fistpll
pop
add
push
lock
int3
dec
jle
mov
dec
sbb
int3
and
pop
lods
sub
call
rorl
ret
mov
inc
ds
jmp
jns
ljmp
repz
push
fmuls
push
xchg
adc
xor
loope
mov
fadd
sub
aam
in
pushf
cmp
roll
or
and
push
adc
out
mov
les
imul
add
or
fwait
ljmp
and
xchg
pusha
cmp
xor
inc
jle
lock
push
xor
ljmp
pop
out
or
jo
mov
fildll
push
std
aad
movsl
mov
movsl
leave
xchg
jmp
and
or
rol
scas
push
mov
pop
jle
mov
loop
cs
out
jns
jp
jae
mov
mov
xor
or
lret
xlat
in
mov
pop
dec
sub
sub
lret
stos
lret
inc
push
add
fcomp
pusha
es
pop
es
shll
lret
popl
das
ja
mov
gs
jge
pop
push
fists
push
lcall
inc
xchg
mov
cmova
jns
add
call
sub
fnstsw
fnstsw
adc
xor
cmp
cmpsl
mov
xlat
decb
sub
dec
es
dec
lahf
xor
fisubs
mov
push
in
pop
pop
mov
out
jne
leave
fisttpl
push
insb
pop
pushf
mov
push
jns
mov
push
std
shl
ja
iret
ret
jno
push
xorl
cmc
jo
iret
xchg
dec
sbb
js
mov
mov
ret
inc
shrb
icebp
fmull
jb
adc
or
mov
xlat
cmp
or
push
das
and
ss
out
cmpsl
jmp
pop
and
cmc
cmp
int3
inc
aaa
xlat
jle
and
stos
lea
xchg
and
xor
push
dec
jb
and
aas
shrl
and
push
out
mov
cmp
xchg
xchg
movsb
sahf
inc
clc
fcompl
pusha
sub
fdivrs
sub
and
and
loope
cmpsb
dec
inc
mov
jp
or
fwait
xor
inc
rorl
int
mov
and
jmp
dec
mov
lret
mov
jae
dec
mov
jp
push
inc
mov
inc
std
inc
pop
adc
sbb
sub
mov
jnp
adc
inc
push
push
mov
jge
sti
sub
and
scas
xchg
fnstcw
inc
and
imul
pop
cmp
pop
xchg
jne
xchg
lahf
nop
push
daa
push
lds
jmp
inc
add
add
mov
inc
mov
call
xchg
dec
and
fsubs
lret
lret
rolb
iret
mov
push
add
xchg
cmp
push
out
ret
test
test
pop
lcall
ffree
jl
mov
mov
add
push
inc
movsb
lret
mov
jnp
loope
xchg
and
push
inc
xchg
jbe
iret
xchg
in
rolb
insb
lea
inc
adc
push
aaa
lock
in
cmp
sti
loope
fwait
mov
into
out
cld
out
mov
mov
push
in
xchg
addps
dec
jae
jmp
jne
inc
jo
nop
jmp
fldt
dec
negb
test
and
mov
inc
adc
xor
mov
daa
insl
push
std
inc
and
cmp
jne
movsb
pop
pusha
lods
imul
mov
sbb
test
shlb
xchg
loopne
mov
daa
jne
repz
out
repz
cmp
sbb
mov
es
sub
mov
jne
nop
pop
mov
lods
push
mov
flds
decl
cltd
xor
jecxz
add
pop
in
stos
es
inc
imul
add
dec
adc
xor
mov
and
test
cmp
sbb
push
sub
mov
dec
pusha
in
pop
cmp
dec
and
jp
xor
push
pop
call
popa
ficomps
xchg
lods
enter
jae
mov
out
jp
clc
ss
scas
inc
mov
add
clc
lds
mov
repnz
cmp
movsl
fsubl
loop
lock
xor
cmpsb
mov
inc
xor
jo
lret
mov
mov
mov
cli
in
pop
cmp
pop
daa
xor
stos
es
mov
or
loope
xchg
popf
add
add
iret
cmp
lock
mov
fistl
push
dec
mov
xchg
dec
inc
and
inc
pop
stos
sub
push
daa
popa
inc
sbb
jmp
inc
add
addr16
ror
popf
push
jmp
or
call
loope
push
cmpsl
lret
out
ret
or
add
and
pop
aas
or
ret
or
les
cmc
cmp
ja
mov
mov
xor
loope
fs
jl
test
jnp
in
insl
pop
out
stos
dec
or
mov
adc
dec
mov
jb
loopne
nop
push
push
leave
mov
fldl2t
mov
out
imul
xor
or
in
mov
lods
js
aaa
push
mov
int3
inc
cltd
in
les
xor
negb
and
pop
jbe
int
rolb
repz
cmpsb
cmp
out
iret
pop
aaa
cmpsl
movsl
jecxz
inc
int3
std
inc
lock
inc
iret
mov
mov
add
aaa
inc
fsubs
jo
loope
pushf
jmp
or
mov
pushf
mov
mov
stos
shlb
push
inc
cmp
lret
mov
jmp
test
in
and
xor
xor
pop
push
ja
and
or
aas
bound
lea
cmp
fwait
push
loopne
addr16
mov
cltd
enter
rolb
aas
jnp
int3
sub
mov
mov
inc
aas
cmp
out
mov
outsl
jno
fldl
fprem1
lcall
mov
int
dec
dec
fsub
sarl
inc
idivl
mov
pop
sub
cs
sub
sub
inc
bswap
xor
push
addr16
push
mov
sub
aam
sbb
es
or
sarl
outsb
aas
add
fldenv
fdivrl
jle
test
fstl
enter
pop
jo
cmp
mov
mov
push
xorl
xor
xor
call
fidivl
mov
rcll
loopne
pop
call
and
in
insl
xchg
loope
add
inc
aas
sbb
mov
ljmp
push
xor
loope
jg
jle
aas
inc
lcall
rorb
sbb
pop
insl
jle
test
mov
aas
push
aad
mov
sahf
adc
ffree
push
inc
bound
inc
ficomps
rcr
xchg
subl
mov
xor
in
cld
sti
stos
inc
ja
int
adc
sbb
stos
mov
mov
and
push
sbb
out
mov
roll
rcrl
mov
push
test
and
or
jns
xchg
dec
popf
lods
mov
and
jmp
fbstp
ds
movsl
outsl
push
das
addr16
add
cmp
mov
in
pop
mov
push
xchg
subb
lock
insb
cwtl
add
and
out
icebp
or
cmpsl
std
push
push
and
lea
mov
in
out
cmpsl
popf
arpl
pop
xchg
and
mov
jno
repz
add
in
mov
mov
adc
cmp
dec
addb
lds
daa
xchg
xchg
adc
adc
lahf
sub
xor
sub
push
lock
ret
push
lret
or
xchg
pushf
cmpsb
fwait
xchg
int
inc
andl
jle
rcrb
push
mov
mov
scas
sub
popa
sub
sbb
push
popl
and
mov
sub
jnp
aaa
pop
pop
scas
push
sub
and
adcl
frstor
add
nop
sbb
sbb
leave
lahf
cli
xchg
cmp
lret
out
mov
fsubs
dec
pop
sub
inc
pop
mov
push
outsl
pop
sub
or
mov
or
push
repnz
jle
add
pop
mov
arpl
jbe
xchg
xchg
mov
jbe
cltd
out
lea
sub
jg
lock
rcrl
leave
hlt
cs
and
lods
sbb
cmp
adc
mov
cmc
xchg
pop
stos
ja
xchg
daa
scas
cli
jns
mov
xchg
pushf
addsd
mov
movsl
xchg
ss
nop
sub
aam
je
mov
mov
push
cmp
pop
jbe
mov
call
lahf
jns
outsb
mov
inc
push
sbb
mov
popf
fcmovu
shl
jp
leave
stos
mov
lcall
mov
pop
jns
js
push
insl
ret
rcr
mov
push
bnd
add
std
xchg
mov
lods
push
in
push
adc
push
mov
inc
in
fidivrl
mov
jnp
adcb
push
addr16
mov
into
dec
add
data16
fs
mov
sub
aaa
jb
mov
divl
ss
aaa
or
ljmp
sbb
movsb
push
xchg
pop
xchg
sbb
inc
ret
divl
add
jbe
xor
pop
inc
or
ja
popf
xor
fcmovnbe
lds
fnstcw
and
and
test
jecxz
cmpsb
in
mov
fidivrl
aaa
cmp
add
xchg
push
leave
sub
insb
mov
dec
call
shl
xchg
nop
shll
loopne
int3
mov
inc
loope
rcll
mov
call
pop
mov
ror
fistps
cli
inc
mov
addr16
popf
jg
push
cli
outsb
cli
pop
cmp
sar
je
pop
push
fnsave
movsl
enter
cwtl
pop
loop
and
and
in
rcl
mov
push
pop
loopne
jmp
sub
addr16
add
addr16
dec
cli
jae
mov
gs
inc
or
mov
add
leave
loop
in
int3
sub
std
lock
lods
xchg
mov
cmpsb
pop
push
rep
xchg
push
mov
and
iret
mov
rorl
cmpsl
andl
sti
lea
add
xchg
outsb
test
mov
rclb
jae
aam
out
arpl
insb
sub
add
lock
mov
in
xchg
shll
mov
mov
pop
xor
xor
arpl
xchg
shrb
mov
cmp
add
faddl
fldenv
addr16
lahf
and
ljmp
dec
xchg
daa
out
addr16
cmp
mov
shll
int3
pmuludq
pop
fildl
in
in
inc
neg
inc
incb
dec
loope
add
push
cmp
insb
and
sbb
out
mov
stc
mov
cmp
int3
xacquire
in
cld
push
jecxz
ja
sub
lcall
adc
and
pop
dec
in
mov
lods
stos
push
fsubl
stos
mov
pop
scas
enter
clc
lret
dec
out
jl
sti
fmuls
mov
cld
aas
mov
ss
adc
add
pop
xor
pop
dec
mov
and
inc
popl
fnstenv
int
xor
out
mov
ljmp
testb
dec
sbb
fldenv
lret
js
cld
fxtract
jae
jne
nop
xor
dec
lret
adc
pop
fmull
imul
mov
xchg
paddsw
cld
jae
cmp
popf
ja
cmp
add
jp
daa
idivb
cld
sbb
loope
cmpsb
xchg
jnp
dec
mov
and
or
fisttpl
sbb
cmp
mov
mov
cltd
pusha
inc
enter
mov
pusha
mov
mov
lcall
mov
pop
in
jg
in
das
lret
ret
xor
push
sahf
sarl
pop
inc
ljmp
lcall
jmp
cmc
adc
mov
daa
mov
call
popf
cmc
xchg
adc
ljmp
mov
scas
and
mov
sbb
lcall
mov
mov
cmpxchg
xor
es
movsb
push
inc
int
sbb
adc
mov
mov
int
call
mov
mov
lock
test
push
adc
sub
incb
adc
pop
mov
or
inc
cltd
jge
pop
sbb
bound
mov
je
clc
add
push
or
xchg
pop
movsl
pop
pop
fidivrl
pushf
push
sbb
or
inc
ja
dec
pop
dec
jge
and
jmp
cmp
pushf
add
idivb
and
add
pop
lock
test
pop
daa
nop
jo
lea
or
jb
out
pop
add
cmp
sbb
pop
sahf
fidivl
icebp
popf
iret
xchg
enter
mov
inc
push
sbbb
dec
lret
out
jnp
loopne
mov
xor
pop
cltd
mov
lahf
testl
mov
push
mov
and
das
call
fldt
dec
xor
stos
pop
data16
and
cmpsl
ret
mov
mov
jg
xchg
dec
clc
add
inc
jl
andl
fsubr
ljmp
std
iret
jne
push
dec
lock
or
mov
push
mov
pusha
dec
out
aas
add
push
test
jge
xor
shrb
mov
and
cli
pop
pop
movsl
ret
inc
test
int
jmp
lea
ljmp
sub
je
push
addl
add
lret
sbb
jne
jg
stos
sbbb
dec
mov
xchg
dec
xchg
adc
jmp
fldt
push
xlat
xchg
pushf
out
fwait
out
dec
mov
aaa
cmp
pop
pop
mov
mov
lret
daa
xlat
ss
movsl
fildl
mov
sub
ss
and
andl
xchg
sti
dec
push
cmp
and
xchg
imul
ficoms
lds
xchg
mov
scas
and
jecxz
ds
fs
cli
mov
and
jnp
inc
jnp
jp
cmpsb
popf
push
cmpsl
rcr
test
jecxz
adc
hlt
cmp
inc
sti
inc
dec
cmpsl
adc
flds
mov
repz
cmpsl
push
lods
mov
jmp
in
and
mov
loope
adc
mov
sarb
sbb
ljmp
mov
aas
fidivl
mov
mov
jbe
fcmovb
ss
add
mov
or
je
mov
or
ds
adc
cmp
outsb
sub
inc
loop
adc
rcr
aas
xor
xchg
testl
and
iret
inc
data16
push
xchg
xor
ja
and
or
sbb
mov
in
pop
add
adc
aam
adc
hlt
lods
test
adc
pop
ja
movsl
mov
sbb
push
sbb
mov
and
clc
xor
or
fwait
movb
dec
out
inc
out
pushf
lahf
adc
pop
jmp
mov
ja
mov
fsubrl
dec
cli
and
mov
clc
rcr
inc
or
out
ljmp
mov
aas
and
enter
ret
es
pop
pop
mov
lahf
adc
movsl
sub
aas
pusha
sbb
data16
orb
dec
shll
inc
int
jo
dec
mov
je
inc
adc
dec
fcmovbe
jp
stc
cwtl
loop
sub
xlat
cmp
mov
call
shll
mov
xor
cmp
out
stc
aad
fcomi
mov
out
int
jne
repz
stos
mov
fcoms
cs
int
sbb
dec
jo
adc
xchg
insl
iret
sar
out
and
cwtl
adc
mov
int3
push
dec
daa
cmp
mov
sub
out
xor
je
lods
enter
sahf
lcall
sti
xor
lret
dec
push
fstl
ret
mov
mov
pop
mov
ljmp
or
insl
stos
rorl
std
pop
cld
sbb
ret
mov
repz
jle
rolb
fimull
add
movsb
dec
aam
std
and
jne
ljmp
leave
mov
mov
std
lcall
pop
jbe
lea
push
xchg
cmc
xor
mov
dec
mov
sbb
mov
mov
dec
sub
lcall
les
xchg
mov
mov
sbbb
adc
pusha
in
mov
pop
push
cwtl
cmovl
or
fs
dec
mov
fidivl
mov
pop
fwait
sbb
shrb
mov
xchg
lock
or
pop
orb
sbb
adc
pop
ss
lock
jnp
pop
movsl
add
cmpsb
in
sub
mov
push
mov
inc
imul
dec
xchg
pop
sub
in
xorl
sbb
repz
xchg
aam
call
movsb
movnti
shr
adc
in
adc
mov
bnd
cmp
dec
and
dec
inc
loop
icebp
dec
int3
in
mov
lcall
or
pop
jecxz
mov
outsb
inc
stos
jp
test
cltd
fcoml
popf
sub
sarl
jp
cmp
mov
int
jecxz
addr16
cmp
movsb
or
call
mov
lcall
mov
push
ficoms
stc
cmpsb
adc
aam
mov
mov
jle
xchg
sbb
loopne
jno
xchg
out
js
inc
cmp
xor
or
jo
icebp
jl
and
popf
sub
push
nop
xchg
sarl
cmpsl
sbb
jo,pt
inc
loopne
sbb
cmpsl
popf
add
aad
sub
push
pop
cltd
jae
into
dec
dec
sub
jo
cs
sarl
gs
dec
push
in
xlat
jnp
lock
cmc
lods
enter
and
les
imulb
inc
imul
pusha
adc
adc
test
mov
push
jmp
lods
imul
push
adc
xchg
das
dec
ja
adc
adc
stos
bound
addr16
sbbb
outsl
jae
adc
adc
cmp
jmp
push
mov
xchg
popf
movsl
push
sub
mov
in
loopne
or
loop
fmull
mov
jae
xchg
jp
cwtl
dec
or
movsb
ja
jge
loopne
insb
cmp
out
cmp
aas
into
mov
fwait
cwtl
and
addr16
popf
in
dec
call
or
inc
aad
ja
popf
negb
mov
jecxz
jg
sub
mov
pop
dec
cmpsb
insb
sub
jmp
mov
mov
fldl
scas
lods
mov
cmpsb
shll
cmpsl
push
test
pop
jecxz
jbe
pop
ss
jp
lret
ficomps
lret
and
out
jecxz
ficoml
adc
lods
les
sbb
cmp
adc
or
mov
mov
jle
sbb
sub
adcb
pop
flds
mov
sbb
inc
xchg
xor
adc
test
or
shl
insb
lea
in
push
leave
insl
or
lret
push
or
dec
ss
xchg
or
das
push
mov
hlt
jb
fdivrl
mov
xchg
fldl
ror
loop
insl
enter
shll
or
loope
pop
loope
out
int
ss
es
das
mov
in
fcmovu
inc
mov
push
inc
es
add
mov
mov
add
xlat
xchg
sub
lret
lods
xchg
and
mov
cmp
bnd
xlat
les
push
add
sub
shl
mov
daa
push
adc
cmpsb
and
mov
daa
leave
in
pop
mov
mov
orl
mov
out
repz
aas
mov
sub
repnz
mov
stos
cmc
sbb
ffree
cmpsb
mov
lcall
pop
cmp
les
dec
mov
push
cli
imul
xchg
cld
cmpsl
test
sub
mov
jle
push
sbb
scas
inc
lods
pop
sti
sub
inc
out
cli
mov
shll
and
mov
xchg
test
push
fldl
js
mov
roll
mov
in
pop
int
or
and
jns
inc
shrb
xor
jnp
cwtl
cmp
cmp
cmp
gs
out
xchg
and
dec
dec
pop
iret
push
inc
jge
subl
cmp
outsl
lahf
mov
int3
das
sub
push
jg
sub
add
add
fcmovu
int3
and
dec
xlat
cmpsb
stos
dec
xchg
stos
jnp
fldl
aas
dec
cmpsb
xchg
test
out
xor
dec
ja
mov
outsb
loopne
test
sti
cmc
and
mov
cmp
stos
xor
sbb
jle
xlat
mov
and
fdivrs
jne
call
mov
ret
or
dec
xor
sbb
fcomip
mov
pop
cmp
loope
into
fwait
xchg
lock
jl
out
cmovle
movsb
jp
nop
or
fisubrl
mov
mov
add
into
adc
pushf
out
jno
sbb
push
push
and
add
cmpsl
loop
lret
jge
mov
leave
add
dec
mov
pop
imul
push
mov
pop
aaa
dec
adcb
ret
xor
out
imulb
dec
dec
orl
and
pop
xor
inc
loope
jnp
mov
and
fsub
test
mov
add
leave
loope
xor
push
sub
mov
lea
fmull
push
std
daa
imul
fistpl
push
jbe
pop
jl
test
pop
outsb
mov
sbb
pavgb
and
rorl
enter
ret
xor
ror
cld
scas
and
into
adc
lea
fnstcw
lods
addb
sub
ja
sahf
mov
xchg
lahf
std
ret
cmpps
sbb
iret
out
aaa
xchg
cmp
aaa
mov
mov
negl
movsl
pop
mov
sahf
gs
push
mov
adc
lret
mov
aam
jg
or
mov
inc
into
dec
add
mov
frstor
jb
fldenv
add
xor
test
xor
cmpsb
cli
and
mov
and
dec
repz
fstl
and
cmp
push
push
adcb
das
es
mov
and
fidivrl
ljmp
and
mov
in
adc
daa
cmpl
sbb
mov
or
and
sub
cmp
fldcw
sti
mov
add
mov
stos
movsl
mov
roll
int
out
movsl
xchg
aaa
pop
stos
std
or
and
insl
cs
inc
popa
stc
and
jmp
fldcw
jae
pop
test
cmp
cwtl
pop
xor
in
xchg
scas
ds
push
jmp
xchg
push
add
mov
imul
ret
call
std
scas
and
sub
ret
aas
dec
mov
in
mov
jecxz
mov
xchg
inc
push
int
out
inc
xchg
aam
mov
es
movsb
dec
es
and
add
xchg
fprem1
sti
addr16
jns
jmp
inc
out
mov
mov
call
movsl
popf
lea
pop
xchg
ret
mov
cmpsl
cmp
dec
cmp
dec
mov
popa
push
push
jae
xchg
divb
cmp
data16
cmpb
pop
frstor
pop
jp
xchg
test
xchg
in
push
jle
push
lock
dec
jbe
ds
loope
and
pop
fdivs
push
xor
das
pop
add
adc
stos
in
inc
in
pop
push
jb
and
pop
mov
outsb
sub
not
sbb
and
fisubrl
pop
in
lods
movsl
xor
stos
adc
adc
in
test
adcb
cmp
bound
inc
loope
xchg
mov
inc
scas
sbb
sar
inc
cmpsb
jo
movsb
fnstcw
in
and
outsb
push
clc
subl
jmp
mov
mov
fbld
lcall
mov
sahf
inc
lcall
fisttpl
mov
in
std
push
in
jmp
push
push
mov
push
sti
mov
cs
mov
sarl
outsb
xchg
fsubp
lahf
es
sub
sti
fstp
loope
andl
push
ficoms
lcall
sub
fldl2e
pop
sub
sti
iret
loope
pop
cmpsl
xchg
imul
out
mov
cmp
and
daa
jnp
xchg
jae
movsl
sbb
ds
loopne
or
test
ss
in
xor
loope
pushf
pop
loope
ficomps
inc
jmp
push
stos
enter
into
mov
inc
pushf
ret
mov
mov
xor
cmp
inc
stos
mov
call
and
dec
cvtdq2ps
mov
sbb
adc
inc
jge
pop
fcompl
subl
pop
xor
cmp
adc
cli
pop
call
lock
xchg
cmp
in
dec
pop
inc
adc
je
sub
outsb
rcr
loope
lret
std
mov
stc
xchg
mov
pushf
mov
push
push
xchg
jge
int
and
dec
mov
dec
mov
shlb
cld
das
fs
sbb
addr16
incl
popf
cmpsl
out
mov
and
mov
popf
cmpsb
lret
cwtl
xchg
fldcw
dec
test
xor
or
vpcmpgtd
mov
scas
roll
inc
cmpsl
orl
dec
mov
fcoms
cmpb
and
jg
outsl
int
loope
test
mov
pop
test
mov
repz
and
fisttpl
shll
dec
pop
sub
mov
mov
or
xchg
jge
xor
arpl
clc
mov
arpl
cmp
mov
cwtl
cmp
xchg
loope
jae
lea
shl
cmp
jmp
and
in
call
fwait
sub
xor
mov
shll
mov
cmp
push
sar
scas
xor
lahf
repnz
cmpsl
jle
xor
add
sbb
adc
sbb
lock
adc
or
enter
popf
ss
jp
nop
inc
cmp
aaa
xchg
insb
das
pusha
pop
dec
stos
out
ret
xchg
aas
or
jl
js
mov
or
arpl
cmp
pop
xchg
cmp
cmp
cmp
mov
not
ss
sbb
nop
aaa
loopne
lret
and
aaa
mov
push
scas
aaa
repz
mov
clc
xchg
jge
idiv
leave
xor
jl
mov
push
mov
sbb
lods
fidivrl
push
mov
fidivrs
unpcklps
data16
std
ret
cmp
clc
xchg
push
jl
jecxz
jle
pop
fidivrl
xor
cmpsl
push
push
js
xchg
loopne
loopne
sbb
sub
gs
dec
pop
dec
and
add
xchg
imul
ret
sti
ljmp
jmp
lret
push
pop
cmp
and
aas
mov
push
repnz
push
repz
in
inc
sbb
shlb
and
jno
aas
mov
mov
rorb
add
call
xchg
adc
xor
sbb
rorb
dec
xchg
xchg
pop
cmp
mov
adc
hlt
gs
js
mov
inc
jle
enter
inc
push
xor
pop
mov
push
adc
adc
mov
and
faddl
or
cld
and
fwait
and
jo
cwtl
and
adc
dec
push
imul
adc
mov
adc
lret
mov
add
mov
fsubl
push
mov
in
fildll
sbbl
iret
idiv
imul
cmpsb
mov
leave
mov
inc
lret
icebp
inc
enter
cmp
sub
and
scas
cmp
mov
pop
in
cmc
push
outsb
cmp
mov
mov
pop
lea
fcmovu
orb
lret
pusha
fiaddl
prefetch
inc
adc
loop
jnp
xchg
or
iret
ffreep
rclb
test
xchg
daa
sub
stc
mov
hlt
lock
stos
adc
jg
aaa
push
outsb
lods
mov
aam
in
adc
shl
lahf
push
rcll
xor
jmp
pop
pop
sbb
inc
jge
xchg
fdivrs
fidivs
fwait
cmp
out
jl
xchg
sub
cmp
lock
mov
scas
and
adc
addr16
cmpsb
dec
sub
ds
cmc
in
xchg
push
je
movsb
and
jo
out
xor
push
sbb
mov
pop
cmp
shll
cmp
inc
push
in
pushf
inc
mov
inc
lcall
adc
mov
and
jl
in
imul
movsl
addr16
lods
mov
fisubrl
stos
popa
imul
ret
cmpsl
shll
push
mov
xchg
jno
loop
ja
fstp
push
mov
lock
pusha
cwtl
dec
inc
repz
cld
test
xor
adc
clc
inc
stos
dec
loope
mov
sub
cli
jbe
xchg
in
mov
dec
mov
or
mov
pop
repnz
pop
sbb
movsl
mov
sbb
xchg
in
movsb
ljmp
sahf
add
lds
les
shrl
dec
jmp
mov
add
jp
xorb
jo
out
mov
into
fmuls
sub
shlb
mov
mov
inc
cmp
pop
dec
push
in
sub
test
cmp
lahf
xchg
cli
inc
lods
std
les
ljmp
aam
loopne
adc
fwait
aaa
mov
add
addl
cltd
or
cmp
push
imul
insl
xchg
cmp
and
js
lock
nop
insb
orb
insb
scas
lea
jle
testl
mov
and
lahf
cmp
mov
pop
daa
cmpsl
daa
leave
iret
sarb
pushf
loopne
or
rorl
cmpsl
adc
xchg
sahf
cmpsl
xor
loope
scas
adc
stos
stos
mov
pusha
cmp
aad
call
and
xlat
mov
lds
icebp
cmp
sbb
xchg
jnp
test
ljmp
ja
cs
or
repnz
jno
sub
test
test
ljmp
loop
sti
ds
xchg
out
xchg
mov
add
aas
mov
inc
out
in
inc
jecxz
jge
dec
daa
fwait
lea
or
fisttpl
jmp
addr16
test
loop
jmp
mov
xchg
mov
or
push
repz
mov
jl
mov
fisttpl
sub
sbb
mov
cli
cmpsl
push
int
cmp
popa
fwait
orl
xlat
inc
jnp
shll
or
mov
add
mov
fists
ljmp
adc
ret
fisttpll
xchg
lret
mov
les
clc
jge
xor
cmpsl
push
nop
xchg
xchg
aad
cmp
out
mov
mov
push
mov
mov
jecxz
jg
sbb
inc
cld
mov
xor
fnstcw
into
mov
int
lea
jecxz
xlat
jge
mov
add
jge
sar
adc
xchg
and
push
jp
sbbb
in
stos
mov
rorl
and
cmp
adc
sub
lods
insb
xchg
cltd
aas
testb
jb
mov
lahf
mov
jmp
pusha
imul
mov
popa
adc
mov
je
imul
daa
add
shll
jno
pop
in
mov
dec
add
sbb
ret
jge
stos
addr16
andl
sahf
push
inc
mov
push
movsl
imull
lods
jmp
dec
and
xor
push
loopne
les
fildl
mov
jno
int
cmp
or
notb
and
push
pop
pop
inc
xchg
call
xor
out
mov
insl
test
inc
leave
pop
cmp
lods
lods
mov
inc
mov
sarb
aam
ljmp
mov
rcl
shrb
mov
and
push
inc
xchg
repz
nop
sub
jnp
aas
pop
cmpsb
loop
loope
mov
stos
movsl
in
repz
mov
mov
jo
mov
or
push
adc
enter
inc
lds
dec
in
dec
jle
repz
ficompl
mov
cli
cwtl
outsb
and
ds
mov
xor
or
rcr
xchg
push
sub
dec
add
add
aas
ds
fwait
dec
fisubrl
in
mov
dec
adc
in
shlb
mov
test
cmpsl
aaa
xor
insb
mov
iret
pop
jns
leave
jmp
les
ret
mov
pop
pop
testb
mov
aam
cmp
fimuls
outsl
or
mov
in
test
jne
mull
xor
es
sbb
xchg
push
frstor
xchg
mov
les
adc
inc
mov
mov
ds
xchg
movsl
xchg
add
fcoms
add
fcom
lar
hlt
aam
popf
and
repnz
dec
pop
adc
mov
dec
mov
jle
pop
frstor
and
mov
jl
xor
fmul
idivb
jecxz
sub
lods
pushf
out
sub
fistpll
leave
adc
aas
fcmovbe
xchg
scas
cld
outsb
daa
xchg
pushf
sbb
out
jae
jge
or
xchg
fstl
test
xchg
arpl
lods
and
outsb
push
flds
sub
mov
mov
mov
in
inc
dec
xchg
cmp
pop
dec
pop
in
pop
mov
sahf
jae
or
sbb
vunpcklps
mov
repz
cltd
neg
jne
test
sub
stos
mov
lret
mov
cmp
sahf
mov
jae
popf
imulb
push
sbb
roll
ja
sub
mov
ljmp
dec
rol
por
mov
iret
ljmp
lea
movsb
add
mov
add
loop
test
movsl
push
xor
push
and
adc
cld
pop
jmp
mov
xchg
mov
jnp
mov
pop
dec
adc
push
fs
mov
add
mov
pop
xor
out
sti
icebp
int
sub
mov
in
movsb
leave
cs
pop
leave
mov
in
rol
cs
or
jne
and
ja
insb
jno
pop
sbb
mov
cltd
ret
mov
sbb
popa
outsl
sti
jns
das
jne
loope
jno
out
aad
scas
mov
sti
pop
jnp
jge
push
lods
in
mov
insb
sar
mov
fimull
and
scas
push
mov
shll
int3
mov
popa
pop
cmpl
sub
jb
mov
es
cmp
stos
fldt
lds
mov
adc
shll
ficomps
adc
ficoml
aam
or
fcmovu
inc
stc
sbb
xchg
sahf
pusha
loop
inc
in
sbb
pop
stos
mov
fdivp
insl
push
sub
pusha
rorl
fisttps
jns
aam
mov
int
stos
aas
mov
mov
outsl
xchg
jns
jo
push
nop
cld
inc
popa
cmp
add
in
push
fidivrl
fs
cld
xchg
ds
xchg
test
sub
cmp
jl
in
cwtl
mov
inc
loope
andb
inc
fwait
ret
mov
xchg
mov
pop
int3
push
sub
xor
lea
imul
jnp
stos
mov
xor
fimull
or
pop
mov
pop
adc
sub
push
cli
cmp
lock
aam
lret
out
mov
jl
lret
push
aas
inc
popa
js
push
jle
incb
mov
or
mov
dec
cmc
mov
jmp
xchg
in
aas
xchg
pushf
mov
hlt
sbb
cmpsl
sbbb
xlat
push
sti
add
cmpsb
jne
push
scas
add
sub
mov
xlat
fisubl
sysret
in
jle
vpunpckhwd
jle
sub
xchg
popf
adc
dec
int
mov
dec
popf
mov
fisubl
testl
in
adc
lds
aas
out
fsubl
out
mov
das
mul
ret
xchg
insb
push
dec
jecxz
outsb
push
nop
loop
rorl
dec
repnz
inc
or
inc
mov
mov
loopne
rclb
adc
ja
or
or
mov
jge
xchg
popf
mov
mov
sarb
int3
jmp
mov
xor
sbb
sub
jg
pop
lret
lcall
mov
pop
jne
xchg
xchg
in
lahf
mov
jns
imul
xchg
lret
mov
jbe
addr16
jmp
iret
inc
add
sti
lcall
fs
cmp
mov
sbb
lcall
dec
adc
decb
xchg
and
add
hlt
mov
or
xchg
lahf
or
xchg
push
add
push
je
das
les
dec
jnp
xchg
add
sbb
nop
cmp
inc
mov
cs
jo
cwtl
sbb
inc
mov
fdivrs
and
shlb
push
dec
clc
iret
clc
nop
cmpsl
xor
negl
cltd
cwtl
icebp
jne
cmc
ja
aas
iret
xchg
sbb
and
lods
xchg
cmp
push
leave
iret
adc
xchg
cmp
mov
push
cmp
sbb
out
repnz
pop
mov
and
xor
sbb
aaa
movsb
cli
ss
dec
cmp
xlat
movsl
stc
jp
and
xor
or
mov
leave
or
movsl
and
sbb
fisttpl
in
data16
xchg
pop
xchg
jno
and
test
pop
stc
mov
sub
fistl
sahf
mov
jo
fwait
out
mov
adc
dec
loope
and
cs
sub
mov
fbstp
or
orl
fcmovu
mov
dec
or
and
inc
movsb
test
and
or
ss
fcomp
and
gs
out
fsubs
sub
sub
dec
lods
xor
inc
loop
paddsb
jmp
sub
iret
outsb
add
jl
seta
mov
call
lods
cmc
jo
ud1
mov
in
scas
xor
into
mov
sti
mov
push
mov
lret
nop
lcall
out
fsubrs
xor
sbb
lahf
jne
movb
scas
sbb
cmc
mov
jb
daa
mov
xchg
lods
jmp
imul
ret
lret
adc
stos
fdivrl
mov
fstpl
mov
daa
jmp
sub
mov
sub
cmp
push
adc
xchg
push
fistps
mov
jmp
cwtl
mov
lods
aam
fsubl
movsb
outsl
adc
adc
daa
aas
push
pop
js
daa
lods
dec
outsb
mov
scas
mov
mov
or
pop
mov
adc
push
in
push
hlt
mov
pop
and
stc
sarl
mov
std
mov
push
in
sbb
xchg
fcmovb
push
mov
stos
ja
repnz
dec
ret
scas
popf
fiaddl
push
mov
fsubs
sub
fs
inc
add
inc
mov
lods
movsl
stos
lret
mov
mov
jb
andl
add
jns
adc
addl
in
icebp
push
adc
push
leave
inc
lods
inc
lahf
out
fstps
lods
ficompl
pop
mov
and
lret
mov
out
pminub
mov
hlt
ret
inc
add
hlt
xchg
add
mov
jns
dec
in
test
mov
add
sbb
push
stos
or
in
repz
nop
divb
xchg
mov
cld
mov
push
inc
test
xchg
arpl
pop
mov
xor
imul
cmp
and
add
sbb
xor
je
adc
fmulp
test
ficoms
pop
pop
push
xor
add
add
mov
fwait
sbb
int
mov
add
cmp
cmc
repnz
fisttps
adc
pop
mov
and
nop
xlat
cmc
lahf
cwtl
orb
leave
xchg
jecxz
mov
insb
mov
imul
fbld
test
adc
and
es
cmp
movsb
in
ja
mov
movsl
lret
daa
or
popf
xlat
sbb
out
daa
iret
add
mov
mov
in
faddl
mov
cmc
mov
aas
and
ss
sti
xchg
rorb
push
dec
ja
daa
xor
popf
popl
iret
pop
add
test
adc
mov
push
push
mov
fdivr
negl
pop
inc
daa
and
cmp
out
or
push
sti
ds
mov
cmp
ret
inc
pusha
aas
mov
mov
dec
add
test
adc
mov
mov
in
das
pop
mov
jnp
jecxz
jnp
ja
mov
packuswb
inc
bt
cltd
cmp
clc
dec
jbe
clc
aaa
test
in
add
jg
outsl
sub
sub
pushf
in
add
push
inc
xchg
jb
xchg
fwait
rcrb
mov
xchg
and
mov
dec
loopne
outsb
sub
pop
ds
sahf
xor
dec
stos
dec
xchg
icebp
mov
jle
repnz
or
leave
jg
xor
imul
leave
sub
mov
ja
mov
out
push
sahf
fcompl
pop
sub
adc
cs
imul
mov
push
xor
lret
lcall
in
pop
jns
lcall
sahf
and
lods
sub
jge
cmpsl
loope
inc
in
pop
cwtl
repnz
mov
jnp
lret
push
rcrb
les
pop
incl
test
and
mov
iret
ficompl
daa
xchg
pop
lret
push
lahf
mov
mov
jb
pop
syscall
push
add
jo
push
xor
repz
movsb
jns
andb
out
lret
daa
lods
pop
jmp
cmp
imulb
lock
xor
mov
nop
ss
movsl
js
xchg
lea
out
std
sbb
pop
jp
aas
pop
xlat
enter
lret
enter
loop
pop
mov
data16
sbbl
lcall
cmp
dec
dec
pop
rcr
inc
cmp
scas
imul
push
stos
fwait
andb
pop
decl
roll
and
cmp
xor
fucomip
pop
mov
pop
and
fdivrs
jbe
push
dec
fmulp
sub
mov
mov
call
or
push
lret
pop
or
sbb
fcmove
or
cmp
pushf
mov
xchg
orl
push
lcall
xor
pop
mov
aam
cwtl
inc
dec
into
outsl
xchg
hlt
cmpl
mov
pop
mov
enter
or
xchg
pop
out
jne
dec
fildll
in
lock
fdivr
imul
push
push
or
push
xchg
std
mov
lcall
je
out
test
push
jne
xor
mov
dec
and
adc
mov
xchg
aas
pop
cmpsl
nop/reserved
add
iret
xorl
jmp
jmp
pop
jae
adc
shll
leave
mov
mov
sub
mov
lock
out
in
jecxz
scas
jne
bound
xchg
fildll
pop
or
sbb
leave
cmp
or
iret
jo
adc
cmpb
xchg
in
xchg
test
pop
ret
dec
mov
or
repz
push
mov
dec
into
mov
ret
ds
roll
mov
stos
lock
push
je
test
arpl
leave
in
popl
mov
push
out
pop
jno
fidivrl
sbb
pop
fldcw
nop
pop
gs
repz
lcall
xchg
fwait
cs
add
cmc
scas
mov
int
dec
repnz
push
dec
xchg
adc
cltd
nop
jae
or
cmp
pop
lods
fstpt
pop
mov
in
pop
adc
push
std
dec
xor
mov
push
mov
xchg
dec
jle
lahf
pop
mov
mov
adc
xchg
inc
test
cmpsl
scas
test
pop
mov
dec
mov
push
xchg
into
test
mov
scas
mov
test
pushf
loop
insb
aaa
out
jae
in
icebp
fimull
stos
mov
icebp
stos
iret
jns
cld
or
jno,pn
adc
incb
mov
cli
rclb
jmp
mov
andb
scas
pop
xchg
jmp
inc
stos
int3
pop
fwait
je
inc
insb
nop
aaa
and
test
jne
mov
sub
mov
stc
jae
pop
dec
inc
or
pushf
pop
jp
fdivrs
pop
mov
xchg
mov
jb
mov
out
fdivp
mov
popf
nop
cltd
idiv
jae
rclb
jae
pop
xchg
les
ljmp
out
sbb
xlat
jmp
test
imul
mov
adc
jae
add
aaa
sbb
jnp
data16
stos
ja
fbstp
push
mov
xchg
pop
nop
and
sub
hlt
jae
lret
mov
fists
ja
je
add
lret
xchg
inc
pop
mov
popa
or
xchg
sti
dec
inc
nop
lahf
and
jae
push
addr16
xchg
scas
lret
es
loopne
mov
orl
jmp
out
rcl
add
pop
fcmovu
cmpl
xchg
sbb
adc
pop
clc
jecxz
lea
imul
sti
jne
faddl
pop
inc
push
xor
cmp
fbld
add
ja
adc
cmp
add
and
pop
push
decl
and
test
sti
mov
popf
mov
push
dec
sub
lahf
stc
ds
jo
push
or
mov
arpl
in
fcmove
mov
or
pop
mov
cld
out
insb
dec
pop
mov
mov
cld
lret
mov
pop
inc
ret
movsb
sarl
and
or
out
clc
out
push
add
or
push
jno
inc
repz
dec
sbb
jns
std
mov
add
faddl
jno
mov
add
xchg
dec
pop
pop
ljmp
adc
out
popa
and
icebp
icebp
xlat
sarl
icebp
cmp
into
out
push
loop
mov
xor
jo
dec
das
jb
sub
out
inc
jp
inc
pop
int
dec
sahf
add
jo
decb
in
pop
mov
pusha
xchg
incb
addr16
stos
xchg
lods
add
lcall
mov
inc
inc
ja
inc
add
mov
stc
iret
faddp
scas
dec
lret
test
lcall
sbb
inc
ret
adcl
or
lds
xchg
pop
ds
icebp
mov
aaa
sub
adc
gs
out
cmc
inc
mov
imul
rcll
mov
pop
shlb
mov
lcall
dec
jge
jne
xchg
inc
hlt
cmpl
or
icebp
filds
lret
icebp
ss
scas
repnz
out
aaa
ret
push
rclb
icebp
mov
rcr
push
mov
jb
lods
mov
pop
fadds
shrl
sub
sti
mov
xlat
sub
popa
lret
or
outsl
xor
dec
idivl
sub
sbb
xchg
jecxz
xchg
fisubl
mov
ljmp
filds
add
out
sahf
lock
in
mov
push
cmp
cmp
fsub
dec
std
mov
imul
out
insb
repnz
jecxz
fisttps
mov
mov
mov
jl
into
cmp
cmpsl
fistpll
aaa
cld
xchg
jge
mov
xchg
fimull
dec
sub
into
and
es
imul
out
arpl
aaa
stos
jle
lods
in
xchg
scas
mov
aad
sti
rorw
cmc
mov
pop
ljmp
out
les
cmp
mov
dec
xchg
fs
add
gs
mov
cmp
fcmovnb
sbb
mov
stos
push
cmc
enter
and
jmp
les
movsb
mov
adc
sbb
mov
ror
por
mov
outsb
xor
loopne
stos
mov
sbb
and
iret
pushf
mov
xor
fst
jo
fdivrs
clc
mov
int
sbb
sbbb
push
xor
mov
lret
fisubrs
adc
shl
push
jle
sub
ret
aaa
mov
std
sub
insl
fwait
xchg
xchg
imul
mov
scas
mov
fistpll
add
push
xchg
xchg
pop
fbstp
in
pop
std
mov
js
mov
jmp
adcl
mov
cmc
sbb
nop
mov
xchg
out
mov
nop
lock
jg
bound
push
pop
fisttpl
jnp
xchg
pusha
ret
mov
jo
fst
int3
mov
inc
rcr
cs
push
jno
stc
jl
lcall
sbb
pop
pop
push
xchg
lods
cmp
loop
enter
loop
mov
dec
jmp
xchg
push
mov
jp
pop
ds
push
adc
and
mov
nop
sbb
mov
into
push
jge
sbb
inc
popf
sbb
cmpsb
les
xchg
push
xchg
iret
testb
xchg
iret
arpl
nop
xor
jbe
aas
mov
jne
jb
dec
fwait
xchg
les
aas
mov
out
cld
fisttpl
dec
jmp
bnd
into
jl
jne
pop
jno
cmpb
xchg
xorb
inc
mov
mov
push
out
push
popf
xchg
pop
lahf
sbb
gs
sbb
sahf
inc
add
popa
push
movsl
cltd
pop
mov
out
inc
iret
cmpsb
push
inc
iret
sub
rcl
rorl
lret
shl
and
jmp
mov
lods
lret
mov
pop
push
loopne
mov
sbb
cmp
dec
push
mov
outsb
jne
aaa
gs
push
jmp
cmpsb
and
daa
mov
movsl
sar
push
jmp
scas
mov
fsubs
push
movsb
es
stos
loopne
into
movsb
xchg
fistl
fcomi
shlb
cmp
addr16
in
addl
mov
out
cmc
cmc
pop
jg
icebp
jo
xchg
add
or
cmp
daa
cmp
cmp
add
mov
or
mov
lret
popf
push
pop
fcom
std
mov
ficomps
push
push
xchg
sbbl
mov
jns,pn
addr16
or
stos
leave
sbb
inc
mov
pushf
lods
out
inc
mov
fcoms
jnp
jle
in
out
inc
cmp
xor
movsb
cmp
cmp
push
stc
rorb
in
jne
inc
ljmp
repnz
sahf
jno
dec
mov
into
leave
lds
push
fstp
repnz
popf
call
and
outsl
daa
mov
jle
outsl
dec
fdiv
sub
push
int
test
mov
cwtl
lret
ror
shl
filds
aam
out
mov
mov
fists
loop
pusha
into
sub
jno
xor
notb
jbe
mov
fdivl
ss
adc
fcomi
pop
outsb
and
jbe
push
fdivs
sahf
cmp
xchg
pop
xchg
mov
xor
mov
rcrl
inc
jne
loopne
push
push
mov
jae
insl
cld
jne
mov
dec
lret
inc
cmp
sbb
cmp
jge
test
dec
sahf
fstpl
inc
push
les
repz
test
add
out
arpl
int3
in
inc
jo
ja
es
flds
xor
lret
movsl
adc
lock
pop
cmp
xchg
pop
adc
call
pushf
outsb
jns
int
gs
repnz
repz
push
sub
lahf
cmp
ret
mov
mov
pop
cld
daa
jne
imul
testl
jnp
mov
or
lock
dec
sbb
sub
or
push
cmc
fiaddl
lahf
dec
mov
out
clc
mov
mov
mov
fldenv
dec
and
arpl
or
out
stos
jl
hlt
iret
shrb
xor
xor
popf
sar
fsub
or
add
bound
aam
push
das
out
dec
aas
push
movsl
xchg
add
scas
mov
dec
jmp
mov
jge
jmp
test
xor
mov
imul
fisubrl
scas
mov
idivl
lret
loope
xor
adc
into
dec
loopne,pt
dec
push
mov
mov
cmpsb
ljmp
mov
into
inc
cmp
jbe
imul
push
sbb
lods
sbbl
stc
jp
enter
mov
push
ss
jbe
stos
mov
mov
scas
repnz
push
mov
sbb
or
shrl
mov
mov
fwait
adc
lret
mov
sub
scas
aad
stos
add
fnstsw
sub
fcmovnu
jns
popa
add
repnz
imul
fdiv
xor
xchg
sbb
stos
mov
mov
in
sbb
lahf
daa
iret
cmp
adc
mov
ret
mov
or
and
jmp
fcoml
jmp
pop
insl
leave
lahf
test
xchg
cmp
mov
dec
in
jg
loop
jle
inc
ljmp
push
pop
xchg
lret
cs
lods
aas
cld
xchg
lret
pop
mulb
repnz
bound
xchg
out
xor
inc
mov
sub
inc
mov
inc
or
fs
push
adc
xchg
or
pop
outsb
leave
xorb
fdivrs
jb
mov
xorl
fucom
test
bound
int
arpl
aam
push
and
addr16
cmp
sbbb
xchg
mov
test
dec
scas
cwtl
mov
mov
enter
aas
pop
pusha
dec
mov
inc
mov
mov
cltd
in
cld
repz
iret
push
in
cmp
push
sbb
adc
push
movsb
xlat
jp
inc
xorl
mov
fsts
in
mov
andb
jmp
cmp
mov
jae
mull
aaa
test
cmpsb
xor
lea
ljmp
imul
mov
scas
cwtl
stc
ljmp
mov
imul
aaa
add
into
adc
mov
mov
jo
push
dec
addl
xlat
lret
out
xchg
rorl
jecxz
daa
cmp
stos
xchg
mov
mov
sub
icebp
aam
or
les
mov
sti
stc
sbb
xor
gs
xor
xchg
ret
daa
dec
cmp
mov
enter
inc
cmp
mov
ret
push
dec
fucomip
mov
inc
movzbl
jecxz
cwtl
mov
jl
ss
lret
cmp
mov
xchg
inc
dec
push
fldt
or
pop
in
add
jne
test
outsl
jge
xchg
repz
xchg
cmp
dec
mov
lret
sti
idivl
aaa
stc
sub
sub
pop
cmpsb
in
into
pop
aaa
fnstsw
jo
add
xchg
cld
inc
cwtl
ret
jmpw
popf
add
shl
lds
mov
xchg
inc
mov
add
test
jle
ds
mov
push
aas
adc
dec
lcall
or
mov
cmp
adc
sti
lcall
fldt
mov
dec
je
lcall
mov
cltd
pop
stc
shlb
gs
mov
jns
in
cmp
pop
jnp
test
lret
xchg
add
popf
pop
divb
inc
cmc
push
or
into
xchg
loopne
rcl
add
xor
shrl
mov
jns
loopne
aad
lcall
inc
xchg
push
std
ret
testb
aad
mov
xchg
pop
fwait
xor
adc
or
push
cmpb
dec
loope
push
popa
xor
out
jp
pop
fnstsw
pop
xchg
shrl
lahf
scas
je
cmp
cli
icebp
shlb
imull
rcll
test
mov
ljmp
mov
jmp
xor
daa
aad
in
popf
lcall
pop
mov
cmp
and
lock
and
repnz
es
out
in
outsl
test
jns
into
dec
and
clc
pusha
fwait
jecxz
jns
mov
mov
out
les
es
add
aaa
mov
and
repz
pop
jno
xchg
or
and
jae
fadds
xchg
xchg
xchg
pop
in
mov
push
in
or
pusha
testl
outsl
pop
jecxz
xchg
xchg
shll
mov
test
cmp
mov
xchg
repz
mov
mov
dec
push
xchg
cld
lret
or
pop
popf
push
and
in
sub
jmp
shlb
movsb
popf
loope
movsb
xchg
mov
xchg
xchg
mov
jge
xchg
xchg
adc
mov
mov
or
jge
mov
sub
ja
jnp
cmpsl
clc
ja
mov
nop
loop
mov
aaa
outsb
lock
xorl
stos
sbb
ds
jl
mov
pop
cmp
sete
mov
cmp
lcall
push
xor
mov
nop
xchg
ljmp
jmp
movsb
fwait
pop
cwtl
or
xchg
ljmp
ljmp
mov
jno
loop
mov
pop
mov
lods
jp
mov
negb
inc
loop
out
fisubl
test
js
cmpb
adc
cmp
fdivrl
fimull
arpl
jbe
ret
sbb
inc
mov
inc
fdivrl
hlt
lea
ret
jae
nop
cmc
negb
adc
or
in
mov
and
mov
mul
add
push
mov
cmp
call
movsl
pop
xor
int
jb
fsubs
outsl
cwtl
rcl
inc
std
jp
xchg
mov
xchg
lea
notb
mov
mov
iret
sbb
ret
jl
sub
inc
inc
std
dec
data16
inc
andb
pop
mov
push
adc
int3
fs
inc
adc
xchg
mov
lods
or
xchg
mov
pop
pushf
and
popf
jge
rcrb
out
cmp
stc
mov
popf
ret
sbb
jmp
or
mov
jle
sbb
jae
dec
lea
mov
dec
jae
xlat
in
negl
pop
jae
push
add
mov
fisubl
inc
orl
xchg
sub
jnp
xchg
in
cwtl
in
cmpsl
in
mov
inc
xchg
repz
and
and
in
inc
pushf
jecxz
fldl
jmp
add
adc
xchg
and
and
push
jge
inc
sbb
xchg
lret
insl
xrelease
iret
ret
mov
mov
adc
cmp
or
push
ret
adc
cs
mov
mov
xchg
ficompl
in
inc
scas
and
addb
xchg
loop
pop
mov
scas
fwait
mov
inc
cld
iret
adc
and
rorl
mov
rcrl
sub
xchg
cmp
pop
lds
outsl
cltd
ret
xor
pop
sar
orb
mov
xchg
xor
in
andl
scas
push
pop
xor
addr16
sti
mov
idivl
lods
scas
xchg
sbb
cmp
jae
addb
pop
cmpsb
mov
int
jno
iret
xor
mov
dec
ficomps
es
loope
les
pusha
bound
push
mov
mov
push
jg
lcall
das
in
push
test
push
cmpsl
and
aas
leave
xchg
ja
add
inc
mov
adc
out
xchg
mov
jns
cmp
inc
js
push
leave
or
and
cmp
test
push
scas
mov
add
mov
fdivr
jns
mov
push
xor
aad
pop
nop
sub
in
imulb
aad
sbb
mov
aad
or
push
pop
fst
sahf
int
jbe,pt
ficoms
cld
and
hlt
pxor
cmpsb
and
popl
testb
pop
ret
test
dec
xchg
mov
adc
pop
iret
add
movsl
gs
mov
pop
and
nop
jg
lcall
addr16
lock
pop
nop
dec
outsl
call
xor
cwtl
std
xchg
outsl
int
inc
pushf
pop
ljmp
inc
scas
pop
add
inc
mov
cmp
pop
pop
pop
fsubs
inc
repz
mov
sub
inc
and
lret
sub
jbe
jno
push
loop
inc
shlb
in
push
mov
push
and
or
jmp
lahf
popf
cld
dec
aad
pushf
sub
repz
xchg
ja
dec
cwtl
outsb
test
lahf
sbb
in
stos
and
mov
pop
jbe
imul
inc
rcrb
mov
cld
mov
fnstenv
popf
adc
filds
insl
pop
push
dec
addl
in
int
jb
mov
cmp
imul
scas
nop
sahf
cmp
sar
nop
into
popf
scas
mov
sahf
sub
and
aam
push
sbb
test
push
mov
mov
daa
jae
fisttps
push
into
mov
repz
jp
xorb
test
enter
popf
ljmp
aad
fsubs
inc
into
mov
sub
fiadds
and
outsb
ret
jb
fdivr
clc
mov
arpl
sbb
clc
repz
jmp
arpl
inc
lods
sub
add
xor
mov
xchg
and
mov
or
int
insb
jmp
pop
dec
test
movl
mov
sub
xor
pop
xchg
xor
sub
mov
popf
and
adc
jp
or
or
mov
daa
lea
mov
outsb
add
testb
mov
pop
jle
inc
adc
cmc
sti
push
pop
movsl
inc
lea
aaa
pop
xchg
sbb
mov
nop
fwait
negb
bound
mov
lret
and
dec
outsb
aad
jb
or
or
adc
mov
out
adc
mov
add
nop
dec
into
and
jno
shlb
mov
add
mov
in
fs
outsb
bound
iret
popa
icebp
push
or
inc
outsl
leave
aam
mov
or
mov
shr
pop
mov
mov
scas
int3
adc
inc
adc
subl
xchg
xor
mov
jb
mov
xor
cmp
dec
push
int
out
dec
popf
inc
or
pusha
aas
pop
iret
repnz
sub
notl
pop
cmpsl
std
imul
repnz
xchg
xchg
sub
push
sti
mov
add
lock
pop
sti
push
aas
stos
xor
xor
dec
mov
icebp
test
dec
xchg
clc
sti
pop
aas
mov
and
icebp
js
add
mov
shll
outsb
push
iret
cmp
pop
int
pop
test
pusha
push
jae
imul
mov
xchg
cmpsl
js
fstpt
add
in
fmul
or
and
jns
jle
xchg
ds
shll
mov
lock
mov
ficompl
ret
pop
mov
cmp
subl
cwtl
pop
pop
daa
cmc
push
sub
fcompl
loop
and
pop
in
cmpsl
lock
icebp
mov
ret
mov
add
mov
repz
mov
dec
push
sarb
jne
sbb
pop
repz
les
sar
xor
xor
fs
popf
cli
test
pop
inc
add
inc
inc
rclb
cmpsb
mov
pop
negb
loope
mov
mov
push
test
push
pop
rcl
dec
or
push
nop
test
rcr
test
lods
mov
mov
mov
cwtl
fiadds
jle
call
push
xchg
inc
or
call
pop
les
mov
stos
out
test
movsb
rol
xor
fwait
ret
sarl
mov
fdivr
jo
xchg
xchg
mov
int
push
sbb
out
xor
dec
pop
mov
sbb
sub
imul
jae
rorb
lret
inc
jl
or
and
mov
dec
push
lods
orb
mov
fildl
lods
xchg
js
repnz
jg
push
mov
push
xor
test
xlat
adc
pop
daa
stc
push
mov
xor
arpl
pop
adc
sub
popf
scas
hlt
outsb
inc
ljmp
push
push
imull
inc
mov
sub
stos
test
mov
fiadds
jbe
pusha
mov
mov
push
mov
stc
ja
xchg
ret
lahf
mov
sub
mov
lock
cmc
pop
add
adc
dec
mov
xchg
cmc
jno
out
adc
hlt
sbb
and
scas
mov
aad
fildl
ret
pop
fimull
jae
mov
xchg
fstpt
pop
stos
dec
mov
push
mov
push
ret
mov
pop
pop
divl
inc
test
cmp
xor
addb
mov
pop
and
aad
xor
cld
mov
xchg
adc
cmpsl
mov
mov
xchg
mov
int
jbe
and
mov
mov
adc
jl
addr16
push
into
inc
pop
cwtl
into
sbb
mov
inc
inc
ljmp
mov
in
lahf
mov
ds
xlat
jle
in
aas
push
fstl
mov
ljmp
mov
shlb
mov
pushf
adc
ja
pop
pop
idivl
inc
test
mov
sub
subl
cmc
inc
xchg
mov
and
jg
loope
xchg
scas
mov
pushf
mov
mov
push
adc
insl
cld
inc
enter
mov
sub
pop
int
add
rorb
sub
inc
loope
xchg
inc
push
push
cmpsb
dec
mov
jl
std
fisubs
adc
mov
pop
cmpsb
int3
ffree
dec
mov
call
outsl
es
xchg
mov
into
xchg
mov
xchg
jecxz
push
lret
test
mov
mov
je
and
mov
insl
mov
xlat
insl
movsl
in
add
dec
cmp
rcll
cs
cmp
aam
mov
inc
xor
cmp
call
iret
add
aam
pop
pop
dec
mov
push
fnstcw
int
dec
ret
push
mov
dec
mov
mov
xchg
mov
xchg
xlat
cld
mov
cmc
mov
inc
inc
pause
mov
dec
insl
and
xchg
aam
pop
or
test
dec
xchg
mov
xor
shl
call
cmp
pushf
jae
fwait
aam
notb
ljmp
jmp
jnp
mov
inc
mov
scas
mov
cli
scas
repz
out
mov
sbb
ja
ja
add
lcall
imul
dec
mov
arpl
pop
dec
fcmovu
add
xchg
icebp
inc
fdivrl
mov
inc
insb
push
aaa
sbb
sub
mov
mov
cmp
mov
jns
data16
cmp
lods
test
mov
test
movsb
aaa
adc
jbe
imul
int3
mov
inc
rcrb
out
stos
mov
mov
inc
leave
aam
mov
cli
mov
repz
mov
imul
lret
sahf
push
inc
mov
mov
movsb
roll
stos
sub
jmp
mov
xchg
xchg
ret
cld
add
mov
mov
inc
aad
call
and
dec
sub
add
idivb
sub
pushf
mov
ja
xor
pop
movsb
fcmovbe
stos
inc
fildl
pop
push
out
les
addl
mov
fdivrl
and
push
sub
ficoml
ljmp
repz
push
out
mov
repnz
imul
in
xchg
mov
ljmp
test
lretw
jnp
xor
cmpsl
popf
das
mov
fmul
cmp
movsl
push
test
imul
lods
xchg
jo
inc
std
lcall
shlb
sti
out
repnz
mov
ror
in
dec
iret
loopne
fisubs
xor
xor
and
push
inc
cli
mov
popa
ljmp
test
mov
pop
sarb
jl
outsb
and
mov
inc
test
jno
mov
or
mov
push
fldl
push
dec
divl
fdivrl
enter
imulb
test
mov
push
xor
lods
mov
es
loop
jo
iret
scas
ficoml
imul
in
fidivrl
pop
sbb
sub
fidivrs
mov
in
or
std
cmpsb
js
data16
jl
add
daa
cmpsb
and
mov
jmp
jnp
movsl
sub
mov
jl
and
jb
lock
push
out
rcrb
imul
mov
and
negb
loope
pop
fwait
mov
mov
iret
or
and
add
xchg
cmp
push
mov
mov
mov
push
mov
mov
dec
add
xchg
gs
cmpsb
cld
int
lods
mov
int
mov
shll
movsb
mov
cld
rcrl
cld
daa
mov
adc
jmp
std
mov
mov
jbe
xlat
pop
push
shrl
xchg
mov
pop
sbbl
frstpm(287
in
inc
mov
mov
std
jge
sbb
inc
int
shlb
arpl
cwtl
fisttpl
dec
mov
xlat
iret
mov
cmpsb
es
cmp
rclb
bound
push
adc
sub
mov
lcall
mov
jl
inc
add
sti
xchg
imul
and
fisttps
out
cltd
jge
or
rclb
call
push
dec
pop
test
stos
mov
dec
jae
fwait
mov
icebp
dec
push
cmp
lods
add
lcall
inc
push
adc
popl
adc
ljmp
jb
or
movsb
cmp
push
jge
jne
les
or
sub
mov
jae
jae
std
jb
xchg
mov
jecxz
xchg
push
push
mov
add
jnp,pn
jg
leave
inc
std
inc
inc
ss
leave
les
or
xor
je
and
and
inc
inc
int
pop
scas
repz
iret
int
cmp
cltd
dec
movsl
sbb
ret
mov
jle
cmpsl
cmpsb
cmpsl
mov
cmpsb
sbb
jbe
lds
push
mov
imul
and
mov
insl
and
fnstsw
push
cmpsb
adc
into
pop
popf
sub
fwait
pop
bsf
aas
out
push
fwait
push
fnstsw
daa
jmp
into
stos
jmp
je
inc
int
push
scas
jg
iret
int3
dec
cmp
decl
jb
pop
arpl
jae
pop
js
mov
in
loopne
mov
cmp
popf
fdivrs
xlat
sarl
shlb
sar
cmpsl
scas
push
sti
xchg
clc
pop
data16
jecxz
scas
push
cli
add
adc
adc
jo
aad
xor
cmpsl
add
daa
xor
outsl
mov
into
mov
jne
sahf
pusha
pop
sub
scas
jae
mov
jmp
mov
sbb
daa
shlb
divb
shrl
inc
and
pop
lcall
pop
xbegin
adc
xchg
loop
into
ret
scas
jl
incl
pop
fbstp
adc
push
movsl
jg
arpl
pop
inc
hlt
int
out
in
ja
aam
inc
leave
lock
and
xlat
cmpsl
pop
and
mov
adc
es
es
lcall
iret
fstps
mov
xor
stos
inc
jae
mov
bound
jmp
rep
sbb
mov
xlat
push
sub
push
imul
pop
mov
fidivrl
pop
outsl
mov
ret
repz
mov
ljmp
outsb
aad
ljmp
pushf
push
out
xor
or
mov
add
movntq
movsl
aas
cmpsb
and
popl
mov
jl
ds
push
out
fnstcw
subl
pop
fbstp
adc
sub
pop
inc
test
pop
out
hlt
xchg
ja
aam
inc
push
das
dec
in
std
and
xchg
adc
mov
out
jno
sbbl
ss
in
stos
and
cmp
pop
xchg
aam
inc
fnstsw
bound
sub
dec
lea
push
lret
scas
lret
stos
into
xor
pop
sarl
cmpsb
sarl
mov
fisubrl
int
fbstp
mov
das
ret
mov
sub
jb
mov
into
adc
pop
xor
sbb
pusha
pop
lods
pop
add
fsub
xor
mov
push
sub
push
pop
mov
xor
pop
aad
inc
popf
inc
out
fsubs
je
jmp
scas
pop
pop
xchg
sbb
mov
xorb
mov
cmp
fildl
mov
lret
inc
pop
adc
xor
jne
fistpll
jb
cmpsb
sbb
rcrb
sbb
int3
outsl
arpl
aad
push
fists
std
mov
test
in
mov
test
loop
xor
fbld
movsl
jno
dec
mov
les
or
mov
fldt
sbb
movsl
xchg
and
aaa
jns
or
xor
fistps
add
or
pusha
cwtl
out
jbe
adc
mov
sbb
leave
into
sbb
sbb
cmp
ja
gs
les
fildll
xchg
xchg
jbe
repnz
inc
sti
orps
xchg
lret
sub
sbb
sahf
jae
xor
sbb
nop
dec
test
mov
sbb
das
mov
xor
loopne
inc
xor
xchg
mov
das
mov
mov
inc
mov
mov
cmp
scas
cmpsl
push
dec
scas
xchg
push
cmp
gs
addr16
fidivs
test
minps
mov
jp
shl
sub
vpcmpeqd
and
inc
jae
push
scas
mov
push
adc
add
int3
jge
jne
inc
push
xchg
scas
pop
iret
xchg
jns
adc
lret
mov
or
outsb
xor
in
mov
push
or
rorb
mov
leave
push
sar
fbld
lods
cltd
movhps
xor
lock
js
add
imull
scas
stos
fwait
ja
lods
in
and
movsb
jne
fisttps
mov
pop
fbld
das
push
fbld
int
icebp
push
std
push
xchg
loop
pop
jg
xorb
and
xchg
js
pop
mov
jbe
push
inc
jge
pusha
xor
pop
out
scas
mov
fwait
test
push
and
mov
xor
inc
int
rclb
lock
dec
xchg
int3
pop
mov
arpl
aad
sti
rorl
xor
cmpsb
pop
adc
roll
scas
les
scas
cmp
mov
lret
arpl
das
mov
sarl
les
lret
sbb
iret
arpl
lea
and
test
and
int
dec
dec
jle
lock
lret
or
pop
adc
cs
clc
ja
jns
int
loopne
std
xchg
out
pop
shlb
das
aad
fs
or
mov
test
mov
pushf
pop
and
xor
and
adc
dec
push
fists
imul
mov
mov
cltd
mov
cwtl
movsb
lret
mov
lock
aaa
mov
lock
xchg
mov
lret
outsb
imul
and
add
fbstp
adc
ret
outsl
outsl
push
scas
xor
mov
push
xor
push
cmpsl
mov
bound
pop
hlt
xor
mov
mov
xor
je
lret
aad
xor
add
test
push
mov
or
mov
add
or
sbb
daa
sbb
xor
rorl
fisttpll
pop
sub
fsubl
test
inc
mov
lret
lret
adc
movsb
lret
scas
push
push
push
gs
daa
jl
pop
xchg
into
push
xor
mov
and
pusha
pop
stos
test
fistps
or
sub
mov
je
inc
mov
sbbl
jns
push
aam
mov
rclb
popf
sbb
jo
add
add
cwtl
inc
cmp
popf
xlat
bound
sti
xor
sbb
xchg
jl
out
xor
cltd
sbb
fildll
adc
in
cld
xorl
das
mov
pop
xor
shl
popa
movsb
jg
shlb
negl
jo
outsb
push
inc
leave
imul
movsl
sahf
sub
test
loop
sbb
leave
dec
leave
cmp
loope
pop
fistpl
push
sbb
mov
pushf
imull
aas
jg
sub
pop
jmp
push
xchg
iret
dec
mov
clc
mov
lods
add
dec
pushf
lds
addl
jae
es
pop
fldl
jae,pt
mov
cmpsl
addr16
and
test
pop
jg
pop
and
xor
cmpsb
mov
pop
inc
leave
cmp
push
out
dec
sbb
out
iret
cmp
iret
ljmp
jmp
or
test
mov
pop
and
mov
lock
addl
mull
mov
fcmovnb
fisubrs
mov
int3
push
push
jne
pop
lock
inc
lahf
das
fdivrs
jno
jno
iret
dec
fsubl
jae
mov
xchg
out
pop
pushf
iret
cmpsl
iret
ret
cld
movsl
rcl
icebp
and
mov
pop
clc
scas
daa
ret
repz
jp
pop
imul
mov
push
xchg
sar
repz
out
les
loope
addr16
xor
out
lret
jb
xor
sub
cmp
in
pop
cli
jl
lahf
push
sub
adc
push
mov
enter
data16
fiaddl
xchg
scas
sub
out
inc
fs
loope
xlat
sarl
shrl
push
dec
bswap
xchg
gs
cld
xchg
fistpl
xchg
loop
in
mov
test
cmpsl
outsl
cld
adc
jae
xchg
sbb
int3
sub
in
scas
add
cmpsb
sar
sub
shll
pushf
pop
and
movsb
into
mov
push
push
xchg
in
shl
add
call
inc
xchg
sub
imul
xlat
imul
cmp
adc
std
fdiv
xor
aas
sbb
stos
and
lods
aaa
fcmovbe
lret
jg
fmul
sub
adc
mov
or
es
cwtl
dec
dec
adc
cmpsl
dec
int
mov
cmp
addr16
loopne
cs
sub
gs
and
mov
xchg
movsl
cmpsl
lea
inc
sbb
out
call
cmp
fsts
push
xchg
fnstcw
iret
sbbl
jmp
mov
aas
sti
lret
mov
pop
cmp
adc
cmp
fwait
pop
or
ljmp
push
xor
imull
in
call
or
scas
aad
rolb
add
adc
adc
cmp
cltd
cld
es
in
sbb
and
cmpsl
mov
inc
jp
and
sub
xchg
mov
sub
out
sbb
xchg
pop
jle
icebp
popl
es
es
ja
adc
sub
sub
jecxz
in
mov
test
jo
add
fisubrs
cmp
mov
cmp
jmp
add
fldcw
orl
jmp
mov
aaa
push
loope
cmp
cmp
mull
xchg
xchg
in
mov
imul
cmp
lahf
inc
sarl
mov
mov
movsl
inc
lea
gs
inc
int
jmp
jl
ds
push
xchg
jmp
pop
push
das
fldenv
dec
arpl
fwait
push
ret
pop
das
pop
ret
sub
jbe
cld
cltd
cmp
fisttps
xchg
dec
sbb
das
mov
fnstsw
pop
jle
icebp
popl
es
es
jge
sbb
sbb
aaa
push
cwtl
and
pop
inc
push
ret
lds
adc
jae
jnp
fcmovb
jns
push
dec
iret
sti
and
stos
data16
mov
push
mov
lock
cld
inc
jecxz
sbb
scas
stos
loop
xchg
mov
cs
popf
mov
mov
sbb
out
imul
mov
mov
dec
les
mov
mov
dec
cmpsl
pushf
xchg
xchg
movsl
push
add
scas
in
clc
lahf
xchg
test
inc
pusha
mov
stos
or
mov
mov
inc
mov
xchg
ret
push
jbe
push
push
nop
cwtl
ja
mov
fwait
add
mov
dec
sahf
and
nop
or
mov
popa
mov
jg
xchg
test
lods
imul
clc
out
xchg
jl
mulb
mov
std
xchg
bound
ret
push
in
nop
clc
in
pushf
out
cmpsl
cmp
or
mov
rcr
or
es
int3
and
lea
or
and
sti
insl
pop
mov
add
jg
add
out
pop
dec
mov
push
pop
pop
inc
jmp
push
shrl
inc
bound
mov
add
rorl
mov
outsb
lret
pop
push
inc
fisttpll
fnstenv
pop
pop
cmp
cmp
jno
mov
lahf
cmpsb
cwtl
dec
lods
mov
fstpt
sti
pop
daa
push
jecxz
push
fstps
fs
mov
jmp
stos
imul
pop
push
xor
dec
gs
cmpsb
pop
call
pop
fsubs
pop
jg
xor
mov
lods
mov
mov
jmp
setp
cmc
pop
pop
aaa
add
push
dec
jge
cs
lret
insl
push
call
popa
fisttps
mov
aad
cmpsb
arpl
fidivs
andb
leave
stos
scas
imul
loopne
jl
and
repz
add
mov
lcall
mov
and
mov
jns
loop
out
dec
pop
sub
gs
je
sahf
sbb
out
mov
loop
addl
pop
subl
and
mov
ja
aaa
dec
xchg
repnz
xchg
jp
push
pop
mov
repnz
adc
int
outsl
jle
jmp
insl
cmpl
dec
inc
pushf
add
pop
ja
sti
xchg
pop
dec
mov
nop
and
jecxz
out
xchg
pop
jl
mov
enter
xchg
cmpsl
pop
sahf
adc
faddp
out
sbb
das
mov
filds
mov
fisubrs
push
mov
push
inc
mov
jo
sti
fildll
rorl
stos
out
fs
push
mov
sbb
xchg
in
push
ret
shl
test
popa
cltd
and
repz
ret
mov
cmp
jno
fbld
dec
mov
dec
jecxz
jo
inc
mov
jmp
mov
std
mov
push
lods
jge
pushf
adc
idivb
jle
shll
sbb
jnp
jge
es
std
mov
pop
loope
mov
cmp
xchg
mov
cmp
sub
ljmp
sbb
sub
push
in
jp
xchg
inc
and
cmpxchg
xor
sub
dec
jns
insl
lods
pop
cmp
adc
jge
sbb
loope
pop
cmpsb
call
das
jge
pop
pushf
jns
out
les
dec
bound
jne
push
cmc
fs
pop
cs
mov
adc
pop
dec
jecxz
js
lea
fists
lea
jl
fimull
lock
jge
cltd
out
add
add
and
sub
arpl
stc
jp
sbb
add
or
or
enter
cmp
cmp
std
out
sub
sar
cmpb
mov
in
mov
lds
sbb
lods
xchg
lret
mov
or
mov
scas
out
sar
push
js
shrl
or
mov
clc
loope
dec
sub
es
cmpsl
or
repz
lahf
inc
mov
cmpsl
pop
lods
lret
mov
push
lods
adc
add
push
inc
sbb
sarl
sbb
not
addl
pushf
movsb
repnz
mov
xor
fldl
dec
xchg
ret
inc
movsl
das
jb
mov
jbe
stos
data16
xchg
lea
mov
xlat
add
xor
test
xor
test
xor
test
xor
test
xor
jge
popa
test
xor
sbb
xor
test
xor
test
xor
mov
sahf
rcll
mov
adc
mov
adc
mov
adc
mov
adc
mov
imul
adc
pop
enter
mov
lods
sub
pusha
ljmp
sub
leave
xchg
cltd
shlb
dec
inc
rorb
push
je
or
sbb
shlb
mov
or
out
pop
and
push
dec
out
pop
jns
cli
pop
push
dec
leave
pop
inc
dec
pop
cmpsl
dec
xor
pop
mov
sti
dec
dec
pop
rorb
int3
dec
mov
das
addr16
das
mov
cmp
sbb
xchg
pushf
rsm
cmp
xchg
adc
cmp
rol
dec
out
shl
dec
icebp
rcrb
dec
xchg
xchg
cmc
push
out
repnz
out
repnz
pop
repnz
shr
hlt
jg
into
test
xchg
popa
test
orl
es
inc
lcall
push
out
repnz
out
jmp
mov
pop
xlat
cmp
push
sbb
pop
jg
mov
imul
out
jne
inc
sbb
sbb
inc
xor
xor
fistpl
sub
xor
dec
xor
sub
adc
adc
mov
add
data16
nop
mov
data16
std
gs
add
cld
bound
mov
ss
sub
cld
dec
call
dec
mov
xor
xchg
or
mov
adc
mov
adc
int
shl
out
push
xchg
orl
sbb
int
inc
mov
mulb
out
repnz
mov
push
xchg
fmull
fimuls
clc
adc
imull
push
cmp
bound
aad
subl
fnstsw
inc
lods
fnstcw
mov
lods
or
mov
push
mov
inc
inc
xor
inc
imul
pop
push
leave
pop
test
cmp
mov
in
addr16
repnz
push
clc
cs
mov
and
cltd
clc
outsb
ljmp
int
test
dec
xchg
push
adc
inc
out
dec
add
cs
test
push
dec
dec
jmp
pusha
ljmp
fstpl
jns
mov
out
repnz
shr
icebp
mov
xchg
adc
adc
cs
std
data16
std
std
data16
repnz
xchg
std
mov
pushaw
std
arpl
sahf
test
std
xor
cld
rcll
pop
lods
xlat
cmpb
xchg
add
or
loope
jp
loope
jp
loope
jp
loope
jp
loope
jp
loope
jp
loope
jp
loope
jp
loope
jp
in
leave
or
cmp
cmpsl
lds
cmpsl
cmc
cmp
cmpsb
in
andl
mov
stos
dec
push
sub
pop
scas
clc
or
in
mov
insl
in
clc
jge
out
clc
dec
out
fimuls
movsb
fstl
rcl
std
dec
loope
in
dec
icebp
rcrb
fstl
inc
lods
fnsave
jge
adc
xchg
out
out
xchg
xor
test
xor
test
xor
test
xor
cmpsb
and
and
cmp
xchg
sti
ds
pop
repnz
in
push
cmpsb
xchg
repnz
out
repnz
out
sbb
and
jge
xor
cmp
jp
xchg
out
repnz
repnz
out
repnz
out
repnz
daa
repnz
out
repnz
out
repnz
pop
mov
lods
addr16
aam
inc
mov
loop
dec
rcl
decl
scas
add
fldl
inc
mov
xlat
repnz
daa
repnz
out
repnz
out
repnz
pop
repnz
out
repnz
ja
aam
inc
jg
jmp
jl
in
cmpsl
pop
and
mov
adc
xchg
dec
xchg
pop
je
pop
pop
fs
fcoms
pushf
clc
sbb
cld
clc
jg
loopne
ja
call
incl
stos
ljmp
popf
xchg
xchg
test
xchg
out
test
mov
insb
mov
push
mov
inc
mov
jg
inc
pushf
dec
add
dec
sbb
dec
outsl
int
jmp
push
jae
ljmp
and
push
je
out
js
jmp
ret
notl
inc
iret
pop
push
xchg
add
nop
clc
pop
in
cwtl
clc
pop
in
cmp
in
mov
outsl
in
in
clc
push
in
jmp
mov
in
sub
mov
adc
shr
fs
imul
push
clc
in
pop
clc
fucomip
inc
clc
xlat
in
mov
clc
sbb
mov
adc
hlt
clc
imul
clc
arpl
in
dec
in
call
mov
in
sub
in
adc
xchg
or
repz
push
clc
in
pop
clc
fucomip
inc
clc
xlat
in
dec
clc
das
in
mov
cmp
cmp
in
hlt
clc
imul
clc
arpl
in
jnp
in
cli
jae
rcll
xlat
sar
dec
out
shl
dec
out
out
aas
lret
dec
scas
shlb
dec
mov
mov
dec
inc
rclb
push
shlb
pop
dec
pop
rorb
dec
pop
rolb
dec
pop
sarb
dec
das
shrb
push
jmp
sti
mov
adc
mov
out
xchg
pop
or
popf
mov
std
pop
dec
std
push
inc
std
dec
pop
std
inc
data16
adc
std
pop
popw
sbb
xchg
das
aaa
aaa
ret
das
sbb
movsb
xlat
xchg
jecxz
xchg
dec
call
out
not
mov
dec
xchg
dec
mov
rorb
push
rolb
imul
dec
arpl
jae
jnp
pop
dec
sub
aaa
mov
add
enter
xor
adc
loope
jp
loope
jp
loope
jp
loope
insl
pop
or
pushf
push
add
test
sbb
mov
xor
test
pop
xlat
or
xor
test
xor
test
xor
test
xor
test
xor
test
cmp
aam
lret
jns
insl
sbb
clc
lods
jg
loopne
push
int3
mov
mov
in
sub
cmp
andl
cmp
cmpsl
pop
cmp
cmpsl
aas
cmp
mov
mov
in
add
sbb
movsb
sahf
lcall
mov
rolb
dec
scas
shlb
dec
mov
rcrb
dec
out
out
iret
cs
jbe
aad
inc
ret
xchg
popf
jne
movntq
outsl
cs
cmc
xchg
hlt
cld
xchg
xchg
mov
rol
cmc
sbb
frstor
jle
in
pop
inc
repz
pusha
sub
popf
fildll
pop
adc
sub
pushf
loope
jecxz
lods
test
xor
gs
rcrb
pop
out
push
test
stc
test
and
mov
ror
mov
push
jp
stc
kmovd
sahf
jp
in
mov
dec
ret
call
push
inc
inc
and
lea
lds
sub
cld
jp
cmp
add
es
jle
loop
lds
xchg
sub
fwait
push
mov
das
jp
cli
das
imul
das
pop
cmp
das
dec
cmp
das
mov
and
movsl
cmp
das
stos
cmp
das
popf
cmp
das
andb
cmc
pushf
push
repnz
and
pop
sbb
mov
mov
mov
cmp
lret
dec
jbe
aad
dec
lods
push
xchg
adcl
dec
fldl
inc
out
xor
fnsave
inc
push
in
cmp
jl
jmp
dec
loope
push
push
inc
or
xor
xor
lret
lcall
lods
icebp
mov
mov
lods
fs
aas
inc
mov
sbb
pop
imul
cmpsb
inc
mull
fstpl
test
incb
jbe
loop
addr16
hlt
test
test
xchg
pop
test
pop
and
hlt
aaa
sub
popf
inc
daa
fnsave
aam
test
and
add
push
mov
cmp
cmpsb
xchg
movsw
pusha
push
testl
push
fiaddl
push
dec
jae
xorb
xor
push
out
xchg
jg
arpl
rclb
sbb
cwtl
pop
call
sub
adc
icebp
xor
in
and
mov
adc
aas
out
adc
idivl
or
mov
and
mov
lock
mov
in
jnp
call
jecxz
imul
ffree
jp
mov
adc
mov
lahf
mov
repnz
out
in
mov
out
repnz
addr16
jb
shl
inc
in
ret
loope
int3
or
mov
adc
mov
sbb
jmp
pop
push
xchg
xor
inc
jp
in
adc
pop
scas
adc
cmp
fidivl
xchg
repz
xlat
mov
inc
xor
inc
or
inc
add
dec
sbb
mov
sbb
addr16
cwtl
xchg
js
jns
xor
test
xor
test
xor
test
xor
test
sub
or
xchg
test
jmp
push
xchg
sbbl
xchg
mov
mov
and
in
xchg
clc
add
in
idiv
gs
out
jne
dec
mov
cmpsl
and
dec
fnop
lds
shl
sbb
test
xor
pop
dec
fstpl
dec
sub
adc
or
mov
lods
jge
out
adcl
sarl
clc
jge
mov
adc
push
repnz
push
push
add
stos
outsl
aad
icebp
xor
jp
pop
mov
loope
pop
cmp
inc
xchg
jns
orl
cmpxchg8b
mov
in
xor
in
mov
incl
lock
sti
jge
repz
push
dec
aam
cmpsb
outsb
cmp
cmpsb
sbb
pop
in
inc
enter
repnz
in
mov
movsl
and
in
mov
fisttpl
aam
arpl
int3
jnp
dec
push
sbb
xchg
pop
daa
fsubrl
dec
jo
filds
std
aaa
hlt
frstor
das
mov
push
inc
out
mov
push
out
inc
cmpsb
loope
hlt
bound
xchg
add
pop
mov
xchg
lods
sbb
hlt
filds
xor
sub
cmp
mov
leave
in
inc
cli
shrb
ficoml
rorb
shrl
jg
insl
test
xor
mov
dec
inc
pop
iret
scas
and
push
sbb
xor
pusha
jbe
or
cmp
out
adc
mov
shlb
xor
pop
inc
push
dec
add
icebp
cmp
jg
xchg
nop
je
or
xchg
xchg
shll
push
sub
mov
in
in
add
andl
jo
add
insl
mov
push
mov
cmp
cmp
xchg
mov
adc
push
cmp
inc
mov
loope
pop
fs
xchg
xchg
enter
xchg
nop
mov
mov
mov
push
daa
arpl
int3
fwait
or
cmpl
sbb
lret
cmp
cmpsb
push
inc
jae
push
jno
sub
fucomp
inc
pop
fldl
dec
fstl
jns
jnp
pusha
loopne
cmp
inc
test
popf
stos
call
pop
xlat
jns
cli
dec
add
popa
cmpsb
insl
inc
jno
push
dec
add
call
loop
cmp
fistl
xlat
fistpll
lret
js
xchg
das
mov
adc
inc
dec
pop
mov
push
out
cmp
mov
insl
jae
rep
dec
mov
and
push
mov
jl
adc
cmpsb
idivl
cmpsb
decl
popf
push
std
jb
or
xchg
jecxz
rcll
in
sar
dec
mov
jmp
into
das
mov
cmp
sub
cs
dec
faddp
cwtl
push
adc
pop
lock
adc
in
scas
ficoml
push
mov
cmp
lahf
sahf
adc
push
cwtl
mov
sbb
sbb
jb
dec
outsl
stc
mov
dec
jne
pop
outsl
sbb
popf
movsb
lret
add
icebp
popl
push
repz
mov
mov
mov
dec
scas
mov
mov
movsb
inc
dec
pop
repz
mov
out
arpl
in
lods
jae
aam
lods
and
sub
popa
inc
ret
data16
mov
das
addb
enter
jmp
push
xchg
xor
daa
mov
mov
jne
daa
idiv
out
out
mov
jg
outsl
out
add
cmpsb
jae
in
mul
repnz
dec
enter
cmc
les
int3
daa
or
or
mov
incl
inc
lahf
loopne
cmp
jecxz
fs
sbb
xchg
mov
dec
xchg
cmpsl
dec
jge
out
pop
movsb
idivl
lcall
ffree
inc
into
neg
mov
adc
mov
test
ret
sbb
cmp
movsb
daa
xchg
mov
sbb
addb
xchg
xlat
scas
or
or
jne
pop
add
out
mov
cmp
and
in
icebp
adc
movsb
inc
std
insb
test
hlt
rorl
je
dec
jle
sarb
xchg
aad
dec
dec
mov
cmp
pop
mov
push
pop
lock
ja
mov
movsb
fstps
jne
sbb
push
shll
movsl
arpl
lea
nop
out
repnz
and
negb
pop
xlat
or
in
insb
xchg
dec
push
jp
loope
jp
loope
ja
nop
fsubl
out
mov
nop
cmp
or
stos
sti
jg
sub
mov
out
rclb
shrl
loop
cmp
ss
jp
ret
mov
or
inc
rcll
inc
xor
xchg
inc
add
pop
sar
addr16
sti
cmp
mov
push
jno
inc
xor
jno
nop
in
cmpsb
or
das
jp
in
roll
cmp
cmpsb
pop
repz
pop
cmp
idiv
mov
sbb
dec
fldenv
int3
push
pop
or
test
or
add
cltd
or
loopne
push
jecxz
out
mov
push
push
js
jp
dec
push
das
xor
xchg
lds
cmc
cmpb
lret
test
fstl
jns
pop
xchg
out
in
stos
pop
cmp
loope
dec
stos
in
je
loope
cmp
jg
jns
xor
sti
mov
adc
daa
pushf
xchg
mov
push
or
sub
fcoml
fldt
mov
inc
dec
das
jnp
gs
sub
cmp
or
out
bnd
testb
cmp
pop
movsl
xchg
outsb
add
in
in
call
mov
xor
out
mov
das
xchg
cmp
das
test
in
clc
je
aaa
xor
repnz
subb
mov
xchg
jp
out
dec
mov
mov
movsl
and
dec
ss
testb
push
cltd
push
jge
cli
push
push
inc
leave
pop
inc
pop
mov
pusha
xor
shlb
andl
cld
jle
sub
jb
cld
subl
imul
data16
rorl
stc
sbb
mov
ss
lods
add
popa
das
loop
dec
add
in
shrl
mov
repnz
add
sub
jno
pusha
cmp
cmp
into
leave
or
lret
pop
xchg
into
xchg
jmp
rcrb
sub
push
loope
aad
dec
add
sub
mov
cmpb
out
js
call
dec
cltd
xor
xchg
popfw
std
mov
dec
push
jg
push
test
push
mov
push
out
push
jp
in
iret
cmp
stc
push
mov
shr
movsb
aad
dec
in
sarl
leave
movsb
jmp
push
popf
in
mov
repz
mov
push
lods
daa
mov
rol
mov
subb
mov
int3
aaa
xor
out
repnz
sti
or
addb
sbb
push
mov
jle
cld
fcoml
pop
adc
lea
xor
andl
out
inc
pop
ret
test
movsl
addr16
inc
pop
xor
mov
shrb
cmp
sbb
pop
jmp
pop
xchg
or
sbb
mov
inc
cltd
frstor
inc
jno
jb
pusha
sub
add
leave
mov
test
xor
jae
into
add
pop
in
fmulp
ret
or
jecxz
icebp
scas
daa
pop
out
fcmovnu
enter
pop
sbb
out
jp
jmp
and
jns
mul
cmp
add
lea
cli
fs
jle
cmpsb
mov
stc
outsb
cmp
das
xchg
inc
test
test
data16
call
pop
scas
cmp
jmp
sub
mov
insb
and
rcll
xorb
nop
or
inc
daa
sbb
shrl
add
jg
stos
mov
iret
sahf
fst
nop
sbb
mov
shll
dec
or
dec
push
pop
xor
mov
das
or
xchg
inc
aam
fs
insl
mov
shl
pop
shlb
cmc
adc
dec
sbb
adc
dec
in
adc
sub
push
xchg
lds
out
jmp
jb
out
in
in
std
sbb
mov
stos
or
sbb
cltd
push
push
mov
xchg
jae
arpl
test
sahf
inc
fdivr
out
test
jge
insl
push
xor
cmpsl
sbb
mov
or
sub
dec
push
jns
mov
push
ret
mov
in
mov
pop
out
sti
dec
pop
rorb
jp
mov
mov
push
iret
or
fcoms
out
lds
loope
subb
jno
push
lods
fildl
cmpsl
pop
cmp
hlt
jle
insl
jmp
popf
lods
adc
mov
scas
cmc
push
pop
mov
repz
dec
test
out
insb
xor
or
push
add
push
jl
jecxz
je
jl
mov
push
lods
inc
pop
push
int
mov
add
dec
in
jae
jae
pop
aam
push
fdivs
xchg
xchg
bound
and
pop
pop
and
cmp
cs
out
mov
repz
mov
dec
loopne
jbe
es
test
fwait
inc
call
pop
xchg
xchg
in
leave
lea
outsl
cmp
aad
std
lret
push
push
inc
ret
xchg
out
aad
btr
out
in
mov
and
pop
ficoml
push
fs
pop
jbe
mov
int3
fisttpll
dec
or
insb
dec
mov
lret
lods
daa
pop
sub
adc
cmpsb
or
push
in
ficoml
aam
test
aas
cmp
das
lods
cmp
pop
xor
cmpsb
stos
jb
mov
add
xor
mov
xchg
push
movb
rcpps
rdpmc
das
test
sub
push
ret
mov
adc
xorb
push
mov
add
push
sub
stos
icebp
mov
and
and
or
mov
test
push
cli
dec
dec
or
fnsave
outsl
or
jbe
hlt
int3
xchg
cmc
std
inc
clc
shr
mov
ficompl
repnz
xchg
fstl
jg
cmpsb
imul
xchg
mov
sti
pusha
test
xchg
bound
mov
pop
and
mov
cmp
je
xor
sbb
stc
repz
and
mov
mov
aam
xor
test
xchg
idivb
add
inc
cmpsl
dec
cmp
push
test
xor
nop
out
jne
das
jnp
lret
das
mov
push
sarl
outsl
mov
inc
cli
lahf
ret
mov
mov
xor
hlt
xacquire
out
xchg
pop
ret
add
and
xchg
push
fst
in
mov
sub
mov
pop
rorb
push
rcr
xchg
stc
sub
orl
insl
test
sbb
aas
testl
mov
adc
dec
push
mov
mov
out
filds
jp
in
cmc
negl
cmp
icebp
sarl
orb
or
fnstsw
jo
fcmovbe
out
daa
jecxz
roll
das
lods
dec
xchg
xchg
loope
jnp
jl
xor
cmpsb
mov
cmc
inc
xchg
out
xchg
mov
mov
xchg
in
mov
outsl
or
cmc
push
scas
repnz
test
inc
std
inc
xlat
scas
cmp
xchg
aad
in
insl
not
xor
add
mov
test
lods
rorl
xlat
sub
dec
clc
shr
mov
sub
sub
mov
sarb
das
imul
cmc
jne
movsb
inc
sbb
and
das
ret
xor
xchg
jge
and
sti
sub
adc
orb
pushf
cmp
cmpsl
insb
cmp
jl,pt
das
xlat
hlt
aas
icebp
int3
imul
mov
jnp
xor
cmpsl
bound
and
mov
xorb
dec
std
inc
aad
vfmadd213sd
ljmp
shlb
push
lea
pop
mov
cmpsl
cltd
push
aad
adc
cmp
push
cld
mov
fldt
ds
iret
add
lret
movsb
mov
sub
inc
dec
insb
lahf
adc
imul
sbb
cmpsb
xchg
psraw
das
jg
ret
xor
inc
push
dec
sub
xchg
in
je
in
jl
dec
pop
mov
push
mov
adc
pop
loope
pop
stos
lds
cli
pop
dec
retw
mov
out
rcrl
out
fdiv
sbb
out
push
xchg
xchg
cmp
adc
imul
add
lret
icebp
rcl
nop
cmpsl
mov
cmpsl
jne
std
mov
iret
iret
insb
mov
pop
push
adc
dec
icebp
xchg
cmpsb
jbe
cli
outsl
call
jle
stos
sub
dec
mov
ja
orb
cmc
subb
scas
mov
ret
sbb
jae
mov
scas
nop
mov
mov
movsb
cmp
test
or
imul
arpl
lock
sub
shl
pop
icebp
leave
outsl
inc
fcoml
pop
das
negl
jo
jecxz
pusha
dec
repz
lock
adc
mov
dec
mov
jnp
adc
push
adc
dec
pop
loopne
push
add
mov
ret
cmp
movsl
frstor
das
mov
out
mov
and
int
movsb
aas
lret
xchg
mov
test
or
jno
daa
mov
push
das
cmpsl
shrb
mov
xchg
pop
leave
and
sbb
stc
sub
imul
test
cmp
pop
mov
cmp
pop
ret
incb
xchg
push
cltd
cmp
stos
test
mov
sar
ret
add
jge
fildll
fstl
out
jecxz
fs
sti
add
andl
stos
pop
ror
fisttps
cmpsl
cmp
xchg
push
sti
repz
mov
bound
nop
aaa
es
aad
lret
add
js
dec
aas
aas
xor
in
mov
outsl
xchg
loop
imul
inc
pop
fstl
inc
aas
xor
xchg
jae
das
les
sub
mov
aad
sti
in
sbb
aad
les
jbe
repz
sbb
je
add
and
out
out
mov
out
inc
fsubr
xchg
pop
sbb
mov
xor
ret
push
je
aad
int3
lds
mov
fisubrl
push
cmp
push
jmp
int3
test
pushl
pop
repz
mov
pusha
push
lcall
sub
in
fwait
mov
das
dec
rorb
ljmp
jle
add
sub
in
sub
cli
dec
sbb
pop
mov
scas
sub
mov
lods
dec
cmp
xchg
xlat
test
insl
inc
or
mov
adc
aas
stc
sub
jecxz
jne
cmpsb
sarb
mov
mov
xchg
sbbb
sub
daa
sub
into
sub
fisubrl
inc
aas
lret
add
cmpsb
cmp
rcr
fisubrl
fxch
mov
inc
push
ret
ficoml
test
push
movsl
or
loop
pop
inc
sti
ljmp
mov
stc
add
push
jae
ss
out
xor
cwtl
inc
iret
xchg
js
rcr
xlat
ss
inc
cmpl
pop
daa
addl
out
loop
jg
pop
inc
xchg
mov
and
and
arpl
mov
sarb
fsin
fisubl
ds
mov
mov
lahf
stos
insl
dec
mov
rcrl
cmpsl
mov
mov
xchg
loop
mov
cwtl
pop
inc
enter
rcl
insb
push
jmp
movsl
sub
dec
cltd
dec
sub
cmpsl
in
repz
cltd
sbb
ss
push
leave
jae
adc
mov
push
test
adc
bound
add
out
dec
cmp
shlb
cltd
or
in
fildl
mov
scas
nop
jmp
pop
loope
mov
jecxz
jns
adcb
subl
out
push
jp,pn
and
cmp
mov
push
xchg
popa
movsl
mov
stos
push
iret
leave
mov
movb
sbbl
int3
insl
mov
std
jecxz
pusha
mov
xchg
cmp
sbb
xchg
xchg
scas
cwtl
mov
jmp
roll
gs
in
lods
loop
push
adc
mov
nop
notb
aad
xchg
xchg
fsts
mov
inc
gs
inc
cmc
inc
ja
jp
pop
pop
push
jl
inc
cmpsl
xchg
mov
xor
aaa
mov
cmp
sub
loop
out
decb
int
pop
dec
mov
shlb
enter
lret
cmp
loop
stos
or
fadds
gs
add
mov
test
or
mov
lahf
pop
push
mov
mov
cwtl
sbb
xchg
flds
ja
loop
pusha
out
adc
stos
inc
out
xchg
mov
add
aas
jns
daa
mov
cli
sbb
js
push
bound
and
and
and
cwtl
iret
sbb
jmp
repz
out
dec
lea
in
rcll
nop
pop
mov
bound
clc
test
mov
les
aas
popf
mov
cwtl
mov
lea
or
mov
xor
std
mov
fwait
sub
ds
ficoms
jbe
sbb
inc
pushf
xor
mov
scas
mov
icebp
mov
jae
stos
test
jns
pop
int3
rcll
in
lahf
popf
cwtl
cli
dec
mov
pop
jmp
rsqrtps
pop
mov
mov
ja
mov
repz
inc
mov
popa
xor
out
sbb
inc
in
push
repz
push
dec
adc
mov
pop
fimuls
repz
mov
filds
dec
pop
and
xor
jecxz
aam
int
inc
cltd
subl
enter
pop
xchg
push
xchg
imul
idiv
adc
ds
add
and
sub
dec
jg
lret
inc
jl
xor
out
mov
push
push
mov
jne
xchg
scas
lahf
xor
xchg
test
pop
out
jbe
mov
xchg
and
cld
sbb
push
lahf
repnz
or
cmc
sbb
loope
out
fwait
jge
push
fnstenv
inc
in
js
aas
mov
pop
sarb
pusha
arpl
imul
mov
mov
mov
sbb
fldcw
push
and
push
frstor
xchg
ss
pop
in
orl
lret
test
hlt
add
xchg
aas
stc
icebp
sub
addr16
lahf
test
mov
cmp
mov
cmp
xchg
lock
stc
frstor
mov
and
or
cmp
mov
xchg
jecxz
loopne
outsb
mov
adc
xchg
mov
std
cwtl
jne
ficoml
xchg
mov
es
insl
xor
cltd
or
pop
jmp
jns
cwtl
adc
daa
test
das
repnz
mov
cld
ljmp
arpl
adc
in
mov
idivb
and
loopne
dec
fists
mov
mov
jo
xchg
outsb
inc
mov
dec
inc
lret
shl
gs
mov
frstor
in
sbb
push
dec
mov
rolb
call
pop
sub
sub
shl
bt
cmp
test
add
xor
add
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
adc
sub
mov
mov
test
not
test
btr
adc
bsf
jmp
lcall
ret
or
test
shl
inc
cmp
cmp
not
bt
bts
bt
jmp
lcall
xor
add
add
pop
xor
xchg
push
bts
xor
mov
xor
cmp
adc
btc
call
lcall
incl
ret
neg
sub
xor
and
bsf
btc
adc
shr
add
jmp
lcall
neg
btr
xor
shl
dec
btc
or
mov
mov
mov
xchg
push
push
xchg
dec
add
add
call
cmp
test
test
sub
shl
cmp
and
shl
add
mov
inc
bt
btc
adc
test
shr
adc
bsf
mov
shl
sub
xchg
mov
mov
sub
neg
test
add
bts
xor
inc
jmp
lcall
ret
or
and
bts
movsbl
sub
or
shr
mov
sub
call
lcall
add
xorl
pop
xor
xchg
push
and
adc
sub
add
shr
add
or
dec
jmp
lcall
stc
add
xchg
ret
neg
sub
btc
bts
sub
add
dec
add
mov
bt
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
shl
movsbl
bts
shl
or
add
add
shr
jmp
lcall
or
call
or
cmp
test
add
adc
shl
add
mov
neg
movsbl
cmp
mov
test
shr
bts
bt
call
lcall
add
cmp
sub
sub
sub
cmp
test
inc
call
lcall
or
bts
shr
and
sub
add
shr
add
mov
cmp
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
and
and
cmp
or
shl
cmp
bt
add
dec
call
lcall
xor
movzbl
and
and
test
adc
shr
and
jmp
lcall
mov
test
xor
cmp
bts
bt
xor
mov
btc
dec
sub
test
neg
sub
movsbl
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bts
shl
cmp
test
xor
cmp
or
push
mov
and
or
and
adc
bsf
not
add
cmp
bts
btc
test
shr
bt
xor
neg
add
mov
add
test
sub
add
not
sub
cmp
mov
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
sub
or
movswl
or
cmp
dec
cmp
cmp
call
lcall
add
inc
add
btc
bt
or
movzwl
btc
add
mov
add
and
shl
or
or
or
sub
test
not
btc
sub
mov
mov
test
bt
neg
cmp
movsbl
cmp
test
shr
call
lcall
mov
bsf
btr
cmp
cmp
bt
movzbl
cmp
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
neg
xor
adc
inc
adc
shr
adc
and
dec
shr
test
inc
and
bsf
xor
btr
mov
shl
jmp
lcall
shr
btr
shl
and
sub
shl
mov
add
add
xor
sub
not
cmp
bsf
add
call
lcall
add
add
neg
shl
and
cmp
movzwl
shl
or
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
inc
sub
bts
bt
xor
cmp
movzwl
xor
bts
sub
mov
or
cmp
and
neg
mov
add
dec
or
bsf
movswl
bsf
btr
btr
test
btr
btc
inc
bts
mov
add
cmp
xor
shr
movsbl
btc
cmp
add
or
dec
lea
inc
cmp
jne
inc
test
bt
and
and
shl
xor
cmp
xor
add
mov
adc
adc
btc
shl
shl
sub
call
lcall
je
adc
adc
sub
shl
and
add
dec
sub
mov
xor
cmp
mov
movzwl
test
sub
cmp
bsf
call
lcall
mov
xor
cmp
btc
movsbl
bsf
mov
bswap
mov
mov
neg
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
shr
not
shr
cmp
or
adc
mov
call
lcall
test
and
test
sub
movswl
dec
xor
xor
add
bt
test
cmp
sub
or
sub
or
jmp
lcall
not
mov
cmp
or
shl
or
inc
bsf
mov
add
mov
movswl
not
bts
xor
and
neg
not
bts
movzbl
call
lcall
add
cmp
cmp
sub
xor
add
cmp
not
mov
push
pop
inc
add
loop
bts
cmp
inc
test
shr
dec
or
shr
adc
push
decl
mov
add
xor
cmp
cmp
add
or
btr
call
lcall
jmp
rorl
adc
bts
cmp
and
and
push
shll
add
inc
add
xor
bt
bts
sub
push
bt
and
bts
cmp
test
and
or
dec
sub
mov
shr
add
add
btc
and
or
xor
cmp
push
push
pop
add
add
call
bts
shr
or
shr
xor
or
shl
xchg
xor
dec
btr
cmp
inc
xor
or
sub
mov
cmp
bt
and
sub
bsf
cmp
adc
not
call
lcall
mov
out
push
sub
mov
btr
test
mov
dec
add
not
movsbl
bt
test
cmp
shr
inc
and
movswl
call
lcall
call
loope
sub
adc
or
xor
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
and
and
mov
adc
not
adc
shr
bsf
sub
sub
shl
btr
mov
bts
bts
cmp
call
lcall
adc
jmp
call
clc
mov
mov
cwtl
loopne
mov
shr
test
bt
adc
and
bts
not
bts
cmp
je
cmp
cmp
cmp
bswap
mov
add
bts
add
adc
bt
sub
test
bsf
neg
adc
test
mov
call
lcall
or
mov
or
bt
btc
test
bt
sub
cmp
shl
sub
xor
inc
not
mov
cmp
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
add
adc
movzwl
mov
sub
inc
shl
xor
inc
push
decl
mov
add
and
bsf
btc
adc
cmp
sub
adc
push
decl
mov
add
bts
add
neg
add
sub
shl
shl
add
add
btc
not
shl
bts
test
bt
not
jmp
bswap
cmp
test
add
or
cmp
xor
mov
bt
adc
xor
btr
sub
test
bswap
add
movswl
mov
movzbl
not
add
sub
adc
add
bsf
movzwl
add
or
add
shr
xor
xor
shl
shl
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
shr
cmp
or
or
cmp
adc
add
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
xor
adc
bswap
add
xor
and
bt
push
push
and
movzwl
test
mov
btr
mov
sub
push
sub
mov
movswl
btr
sub
mov
or
mov
btr
mov
test
mov
xor
test
add
xor
shr
btc
call
lcall
js
mov
push
lret
bswap
or
add
neg
test
bsf
lea
bt
test
add
add
test
xor
cmp
mov
dec
adc
sub
shr
adc
mov
movswl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
shl
add
add
inc
adc
test
btr
bsf
cmp
sub
mov
mov
shl
inc
test
bt
shl
test
cmp
push
test
add
shl
bsf
sub
bsf
neg
or
push
inc
adc
sub
add
and
not
xor
cmp
push
cmp
or
xor
btc
or
mov
call
lcall
mov
mov
cmp
inc
adc
mov
shr
test
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
sub
adc
adc
btc
cmp
mov
call
lcall
sub
cmp
xor
cmp
cmp
bt
cmp
add
movzwl
cmp
xor
dec
not
bts
and
shl
call
lcall
mov
not
sub
test
and
neg
and
dec
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
ja
xor
push
movb
aas
subb
push
and
dec
inc
test
lcall
jg
and
inc
jo
add
dec
call
imul
adc
andb
cmp
and
subb
in
add
xor
mov
cmp
test
fisubrs
jg
xor
aad
into
push
pusha
cltd
ja
pop
add
or
xchg
and
test
add
push
pop
or
pop
hlt
bound
jmp
ss
adc
or
add
repz
sbb
cmp
mov
xor
clc
sti
xor
call
cmp
jge
mov
add
fmul
or
cmpsl
or
pop
adc
imul
pop
push
pop
adc
adc
and
add
add
lahf
invd
imul
xchg
sbb
or
sbb
pop
pop
add
xchg
sbb
fisubs
adc
sbb
push
sub
adc
inc
add
cmp
gs
sbb
or
push
mov
sbb
sahf
add
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
jl
dec
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
jl
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
dec
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
imul
sub
icebp
xor
out
lds
popa
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
clc
test
outsl
fmuls
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
sbbb
push
push
inc
push
inc
pop
xor
fs
jne
es
mov
dec
inc
sahf
add
pusha
