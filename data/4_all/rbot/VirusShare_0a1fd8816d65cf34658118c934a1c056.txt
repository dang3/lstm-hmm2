pop
shll
push
mov
stos
dec
cmp
push
jle
and
and
scas
pop
add
mov
add
int3
lcall
inc
sub
push
aad
mov
stos
int3
stos
scas
rol
push
pop
xor
cmpsb
pop
mov
push
xchg
add
pop
cmp
les
outsb
js
adc
sti
xor
nop
mov
mov
push
out
pop
add
dec
mov
mov
push
xor
fs
xor
ficomps
fisttps
jge
popa
or
sbb
dec
mull
cld
mov
inc
popa
jno
bound
inc
mov
pop
sahf
and
data16
adc
dec
repnz
aaa
dec
stc
push
mov
sub
sbb
insb
cmpsl
cmpsb
lret
outsb
dec
cli
mov
in
lret
inc
mov
out
pusha
icebp
add
xchg
push
jg
jmp
out
lcall
dec
loope
add
jle
std
aaa
mov
shll
lahf
mov
mov
mov
add
testb
mov
dec
mov
sub
fists
fadds
in
sbb
scas
addb
sbb
push
loope
jmp
scas
outsb
rol
and
cmc
cmp
pop
repnz
scas
popf
add
mov
mov
bound
fiaddl
mov
mov
mov
outsb
pop
stc
push
pop
cs
addr16
test
push
mov
mov
rol
pusha
hlt
pop
xor
cli
ss
xlat
inc
outsl
lds
lea
mov
push
loopne
xor
xor
or
jle
in
fadd
test
mov
mov
out
xor
cs
push
movsb
pop
sti
mov
pop
pop
jb
xchg
aas
jmp
mov
xchg
int
in
stc
adc
inc
scas
pop
xchg
xchg
ret
sub
add
test
jno
les
sub
adc
jae
ja
xor
out
ret
repz
dec
dec
pop
lcall
jnp
inc
xchg
inc
inc
lock
lock
pop
pop
push
dec
push
add
ljmp
jg
mulb
loop
icebp
aas
bound
lahf
adc
es
in
sub
pushf
cmp
cmp
lret
test
repz
rol
adc
aas
loopne
mov
out
aad
mov
test
dec
or
jg
add
dec
add
std
lret
and
pop
cs
xchg
lcall
repnz
mov
inc
jne
adc
dec
test
jbe
leave
movsb
fs
push
and
imul
mov
add
dec
pop
mov
push
cld
data16
insb
push
xor
cs
xor
push
pusha
xor
fs
dec
inc
mov
mov
adc
loop
lds
test
arpl
sbb
mov
mov
mov
stos
sbb
sub
adcb
cmp
pop
adc
jle
enter
pop
push
sub
or
jmp
jae
stc
mov
test
mov
sub
xchg
sahf
mov
sub
loope
insl
and
iret
int
mov
jp
xor
aad
ja
jecxz
rorl
mov
rolb
mov
mov
fidivs
mov
hlt
push
mov
sub
repz
fsubl
sub
mov
pop
xchg
jg
xlat
dec
mov
inc
aaa
dec
and
push
into
test
sub
les
push
mov
or
mov
shrl
ljmp
pop
xchg
jbe
repnz
pop
fisubs
push
repz
outsb
mov
jnp
scas
dec
scas
lret
add
jns
testb
and
xchg
dec
pop
mov
mov
mov
mull
mov
pusha
or
jns
test
mov
push
lahf
push
lret
cltd
hlt
lods
inc
iret
pushf
or
mov
pop
dec
sbb
sub
and
dec
dec
call
jp
push
in
ficoml
leave
pop
mov
adc
inc
insb
loopne
mov
dec
and
mov
mov
jo
push
lds
js
test
sub
test
fisttpl
mov
outsl
pop
lods
loopne
pop
mov
inc
adc
lret
enter
test
mov
cmpsl
cmpb
pushf
fists
fcoml
push
lret
inc
int
lds
cmp
aam
scas
loopne
outsb
xor
test
scas
push
add
lods
bswap
jmp
into
jge
push
and
out
push
pop
ret
push
cs
test
popf
adc
rcll
les
mov
lcall
js
xchg
mov
icebp
pushf
add
test
leave
pusha
mov
not
add
or
ficompl
roll
pop
and
andl
pusha
or
cmp
fcmovu
cmp
mov
push
nop
rorl
insb
repz
jg
test
cmp
out
insb
or
mov
imul
xlat
insl
jne
insl
out
push
out
js
xchg
js
lods
push
jmp
test
imul
pop
divb
or
mov
or
mov
dec
cli
adc
mov
xor
push
or
imul
insl
mov
pop
sub
dec
iret
pushw
out
xor
adcb
pop
mov
or
sub
test
jns
imul
push
push
add
sarb
mov
dec
inc
popa
cmp
pop
mov
inc
push
mov
inc
aad
jg
movsl
jb
in
mov
ss
mov
inc
xchg
pop
mov
mov
cmc
mov
or
xchg
loop
push
and
inc
sbb
mov
sub
push
ljmp
and
jno
mov
mov
mov
mov
ficomps
xlat
mov
stos
inc
fiaddl
jge
out
je
pop
xchg
mov
push
andb
mov
fisttps
xlat
lea
cli
cmpl
sbbb
scas
insl
loopne
pop
fistps
daa
lds
lea
insb
pop
push
mov
clc
dec
shll
jns
vpaddq
nop
inc
roll
dec
sahf
sbb
sbb
cli
mov
scas
fmull
push
sub
insl
mov
clc
push
fistl
jg
dec
inc
sub
inc
out
inc
xor
xchg
push
js
rorb
pop
mov
rcll
imul
cmp
les
inc
pop
or
dec
add
fldt
lods
jne
push
fwait
pop
bound
and
pop
sbb
mov
ja
scas
jae
pushf
push
fwait
clc
adc
jbe
rorb
cli
out
jno
mov
dec
loopne
push
mov
cltd
mov
xor
es
fistps
dec
sub
outsb
fnstenv
jmp
insl
in
mov
fdivp
addr16
dec
inc
mov
bnd
add
shlb
decl
outsl
subb
mov
pop
cmp
les
addl
jl
xchg
push
sub
xor
repnz
idivl
mull
dec
addr16
imul
xchg
mov
in
nop
sbb
sub
flds
icebp
cmp
pop
lcall
jns
pop
mov
es
lahf
adc
fiadds
leave
dec
pop
push
adc
or
iret
mov
ret
xor
pop
sbb
xchg
arpl
lock
sti
hlt
or
mov
repnz
outsb
test
dec
cmp
int3
xchg
int
pop
scas
rorb
repnz
push
xchg
clc
arpl
std
and
or
sub
fdivrl
cmpsb
rorb
push
lea
aad
ret
fwait
into
pop
sub
pushf
xor
add
xor
inc
ljmp
pop
dec
fnstenv
pop
xorl
add
push
inc
xchg
outsl
cmpb
push
push
xchg
dec
lods
mov
arpl
xor
pop
pop
sub
sarb
aad
out
pop
adc
rcr
inc
stos
mov
nop
bound
mov
enter
rorl
mov
popf
outsb
in
mov
mov
outsb
ret
ret
imul
sub
cli
xor
js
dec
in
enter
mov
rorw
in
stc
mov
or
in
jae
pop
cwtl
loopne
insl
in
jb
jns
sbb
mov
outsb
lods
decb
jmp
hlt
mov
sahf
dec
pop
add
mov
daa
xchg
imul
dec
ljmp
adc
dec
cltd
xchg
or
sbb
call
inc
jnp
xchg
pop
xchg
insl
dec
scas
sbb
dec
push
and
and
pop
stos
cmp
mov
dec
sarb
adc
out
lret
adc
rolb
loopne
or
dec
push
fnstcw
adc
bound
inc
push
fstpt
fwait
shl
add
and
pop
pop
fistpl
push
push
in
add
pop
cmp
scas
stos
imul
pop
inc
cmpsb
inc
push
les
xor
adc
fcmovne
push
sbb
and
out
aad
ljmp
push
sbb
adc
pop
ja
cld
jle
call
push
jnp
mull
mov
les
xchg
or
je
mov
gs
ljmp
push
das
pushf
mov
ja
imul
add
mov
pop
push
xor
insb
pop
pop
stos
dec
add
mov
push
popl
dec
push
dec
cmpsl
sbb
push
adc
rorb
fldenv
dec
xor
insl
adc
jno
shrl
push
dec
clc
push
sbb
pop
mov
add
adc
loopne
rcrb
adc
and
mov
lret
cmp
fildll
notl
and
jb
daa
cmpsl
push
mov
add
aad
mov
stc
jl
or
push
paddq
cwtl
out
or
inc
rcrl
adc
add
mov
jmp
out
pop
xchg
sar
lods
cmp
sub
pop
push
fdivrp
jle
in
mov
pop
fdivrs
push
xlat
ficompl
jnp
xchg
dec
push
or
or
or
sub
js
pop
cltd
or
jne
jnp
cwtl
dec
mov
pop
test
mov
rcrl
fsubrl
or
inc
es
pop
aaa
pop
aam
stos
mov
inc
outsl
sarl
test
jae
sub
stc
dec
scas
mov
mov
ss
xchg
push
sub
decb
dec
fidivrs
movsb
vmread
lds
cmc
les
iret
lock
mov
in
and
mov
inc
cmpsl
lahf
ja
and
cli
pop
bnd
fistl
int
pop
add
out
sub
out
ffreep
out
sbb
add
fdivl
pop
inc
push
imul
cmp
stos
push
xchg
fildll
lea
jg
ljmp
inc
fwait
pop
xchg
ds
push
jmp
adc
push
pushw
aas
mov
aam
mov
dec
iret
in
out
iret
jns
sub
push
jnp
mov
and
push
addb
push
test
fiaddl
jecxz
or
lcall
enter
rcl
or
imul
xchg
mov
cli
push
cld
pop
scas
adcb
arpl
out
stos
xlat
push
jnp
fwait
pushf
xor
rcr
dec
jae
out
dec
fcmovnb
xor
lret
push
pop
lret
dec
js
sub
fwait
cmc
loopne
xchg
into
pop
sahf
jns
adc
or
pushf
and
lds
dec
js
fcompl
js
sub
push
inc
dec
std
jmp
addl
sbb
push
lcall
rcrb
inc
icebp
push
leave
iret
sub
push
cmp
test
insb
xchg
call
addr16
je
insb
dec
insb
mov
or
inc
xchg
ficompl
stos
fcomi
clc
sub
push
dec
and
pop
mov
aas
js
cld
or
or
mov
xchg
out
xchg
cltd
aaa
rorb
addl
in
addb
pop
imul
cmpl
pop
loop
mov
dec
test
arpl
sbb
in
push
mov
inc
adc
movb
cli
mov
imul
jle
or
inc
cmp
pusha
lahf
pop
add
popa
sbb
out
push
cmpsb
sbb
ja
add
lret
int3
lea
or
mov
jne
sub
push
push
xchg
adc
xchg
push
icebp
lds
div
xchg
outsb
pop
xchg
jno
or
mov
or
orl
xor
or
ds
leave
faddl
or
cmc
mov
ds
movsb
and
jns
addr16
inc
jno
jb
nop
jns
rol
inc
in
je
adc
das
rolb
cmp
out
insl
cld
into
push
cmp
aaa
pop
push
insb
lea
push
pop
push
inc
mov
enter
dec
enter
mov
jecxz
dec
jno
mov
xchg
pop
mov
fwait
enter
pop
loopne
out
pop
jae
rorl
lcall
dec
nop
xlat
jmp
pop
out
rorb
mov
daa
push
adc
xor
ret
sub
mov
jp
dec
stc
leave
push
loop
mov
iret
inc
nop
add
sbb
cli
push
pop
aad
xor
jno
scas
push
orl
pop
and
sub
je
push
decb
adc
lock
adc
lcall
xchg
mov
lcall
scas
mov
jmp
test
dec
cmpsb
pop
mov
daa
cltd
test
rolb
pusha
repnz
nop
sbb
xlat
in
xchg
adc
add
inc
xor
popa
sub
adc
negl
out
pop
sub
pop
cmc
call
xchg
inc
mov
adc
xor
mov
mov
mov
dec
mov
je
or
lods
pop
push
dec
insb
fmul
xchg
cltd
insl
mov
sti
mov
push
push
mov
jmp
psubusw
lea
cmp
int
lret
jns
stc
add
sbb
sub
pop
xorl
adc
sub
maskmovq
testl
jae
cltd
sub
xchg
cli
mov
inc
outsb
mov
iret
lock
pop
lcall
fcmovnu
rcrb
sub
cli
std
sub
xor
cmpsb
stc
jp
jb
enter
stos
outsb
push
xchg
and
fmulp
cmp
shlb
cmp
sbb
in
movb
test
ja
mov
mov
push
pop
in
nop
push
xor
aaa
pop
push
sbb
pop
testb
add
xor
xchg
test
push
incl
les
hlt
add
pop
cmp
inc
daa
sti
cs
xchg
mov
or
fsubrl
pusha
mov
mov
popf
push
push
scas
push
sbbb
adc
cmpsl
and
inc
pop
loopne
pop
pop
mov
inc
jo
test
jmp
lods
inc
inc
mov
pop
jg
or
adcb
addr16
adc
loopne
mov
dec
es
mov
insb
sbb
out
leave
mov
push
fimuls
movntq
sub
dec
sub
loopne
cwtl
nop
test
or
loopne
pusha
into
in
insb
stos
or
es
and
mov
xchg
cli
js
xor
jbe
dec
into
out
inc
dec
mov
jne
popf
pop
mov
lret
dec
xchg
cmp
sti
push
nop
imul
jno
les
jg
cltd
push
cmp
rol
movaps
pop
shll
pop
test
outsb
iret
data16
sub
or
mov
or
fsubrl
mov
push
dec
pop
imul
push
sbb
sbb
fwait
icebp
cmp
dec
loop
icebp
push
jae
adc
fbstp
mov
popa
aas
frstor
jno
dec
fwait
dec
movsb
jno
mov
popa
pop
ljmp
or
fdivrs
mov
test
xchg
push
push
das
mov
gs
test
mov
and
int3
fucomi
rorl
enter
popf
std
repz
dec
jmp
loopne
jle
ret
adc
int
inc
insl
dec
lock
adc
pop
inc
aam
adc
bnd
cwtl
push
scas
bound
in
call
jg
fcoml
and
jp
inc
in
out
jecxz
insb
mov
je
movsl
or
out
push
push
lcall
push
ds
xchg
cwtl
add
and
orl
mov
sti
in
ljmp
cmp
dec
sti
dec
mov
push
jmp
lcall
out
sbb
ret
and
in
sbb
scas
and
leave
jb
test
lret
inc
out
inc
xor
sbb
jb
xor
insl
sbb
pop
or
jns
pop
push
insl
mov
xchg
movsb
pop
pushf
test
xlat
and
sub
push
mov
ds
fisubrs
pop
xchg
or
pop
insb
test
pushf
inc
jg
mov
lret
pushw
pop
stc
inc
xor
mov
or
push
adc
sahf
ss
into
shlb
pushf
dec
mov
js
sub
in
ds
movb
loope
imul
ja
mov
repz
loop
xor
rolb
dec
test
jae
jb
mov
fmuls
mov
lds
dec
pop
inc
pop
dec
pop
mov
xorb
jns
dec
adc
add
ss
mov
mov
mov
mov
ror
pop
out
or
out
das
pushf
add
in
mov
pop
lret
mov
pusha
hlt
mov
sub
test
xchg
lret
pop
inc
cmp
fcoml
cmp
add
outsl
xchg
pop
ror
push
fiaddl
sbb
mov
sbbl
sub
xor
lea
or
cmp
testb
adc
loopne
addr16
add
std
sub
xchg
xorb
fcomi
enter
pop
mov
bound
and
xchg
rorl
sbb
shrb
movsl
or
cmp
fldt
popf
sbb
and
inc
cmpsb
daa
push
xor
jbe
inc
jg
mov
movsb
cmp
and
fnstsw
popf
pop
imulb
fiadds
cmp
xchg
leave
daa
scas
inc
fs
xchg
xor
add
sbb
xchg
dec
dec
pusha
xor
cmpsb
xchg
xchg
push
pop
dec
xchg
jl
add
rorb
icebp
cmpsl
xorb
or
inc
xor
mov
push
sbb
sub
imul
pop
push
cs
clc
shl
jp
pop
std
mov
xor
sub
bound
adc
xlat
mov
sahf
mov
mov
add
sub
imul
push
insb
sbb
leave
fisubs
sbb
arpl
fsubrs
sub
test
sub
fldl
sahf
and
outsb
cmc
mov
add
cmp
stos
cmp
and
into
outsb
data16
insl
push
or
hlt
pop
addl
mov
fcomps
test
test
sahf
rcll
mov
pop
xor
pop
dec
jmp
jne
push
testb
or
mov
test
pusha
xchg
pop
jmp
fs
jo
lcall
fidivrs
add
scas
in
outsl
aaa
pop
pop
stos
jl
addr16
je
sub
or
popf
frstor
add
test
shrb
push
xchg
popf
pop
idivb
and
shlb
mov
dec
je
inc
pushf
or
fistpl
mov
inc
in
sbbb
notb
push
and
adc
repz
mov
cmp
clc
in
cmc
imul
pop
mov
add
mov
cltd
cmp
add
mov
gs
mov
stos
imulb
jno
xor
jecxz
cmp
xor
outsb
das
dec
int3
jnp
ja
test
adc
fwait
ret
xchg
cmp
lock
push
mov
xchg
xor
aaa
dec
mov
dec
push
stc
mov
pop
mov
mov
xor
gs
sbb
and
pop
pop
dec
out
data16
sub
sbb
inc
jecxz
push
mov
mov
jnp
test
rcl
pop
pop
sub
test
cwtl
inc
jmp
cmc
adc
in
ds
push
cltd
dec
stos
inc
push
mov
mov
mov
inc
push
std
ret
addr16
mov
pop
jmp
lcall
shrl
lds
and
dec
xchg
out
dec
pop
loope
sub
sub
int3
js
jb
mov
sahf
or
mov
in
dec
gs
aam
xor
jle
out
pop
mov
jl
push
jmp
inc
mov
clc
adc
pusha
mov
push
jno
mov
orl
ljmp
imulb
lods
push
jg
jl
push
out
xor
loopne
push
jns
sub
shl
out
xor
adc
dec
push
xchg
imul
imul
jnp
repz
roll
inc
push
fmulp
loopne
mov
push
xchg
ret
ljmp
aad
arpl
pushf
fldenv
mov
pop
cmp
daa
ljmp
dec
add
add
shrl
sbb
adc
jae
fsubrs
xor
pop
push
out
test
xchg
and
adc
sbb
bound
cmp
fcomi
loope
lea
lcall
outsl
shll
cli
xorb
mov
jns
and
mov
mov
pop
fs
and
std
mov
xor
jns,pn
pop
je
lock
in
ret
xchg
inc
and
and
pop
push
or
sub
cmpsl
int3
add
shlb
dec
jb
dec
test
ss
rorb
dec
es
push
push
clc
fs
in
stos
mov
lcall
ret
fwait
lret
pop
mov
sub
data16
bound
aas
outsb
xor
aaa
pop
test
inc
cmpsl
std
stos
mov
pop
push
push
lret
jp
dec
je
insb
dec
jae
es
lock
popf
cld
in
lock
xor
xchg
sub
inc
jg
or
inc
insb
dec
mov
mov
inc
fmulp
mov
mov
sbb
pop
insb
xchg
sbb
loop
test
dec
add
loop
sub
pop
ss
dec
pop
jg
xchg
int
repnz
mov
nop
aaa
pminub
fprem1
aam
loope
test
mov
jnp
pop
mov
sbb
mov
inc
pushw
inc
ljmp
sbb
cltd
xchg
mov
adc
pop
das
cmp
pop
shlb
leave
sub
mov
mov
cmp
xchg
inc
aas
mov
cmp
lret
mov
sbb
mov
scas
mov
mov
sub
fwait
xchg
or
add
sahf
lods
addr16
ror
lods
jmp
sbbb
mov
and
scas
in
mov
jnp
and
xchg
pusha
push
xor
mov
sub
cmpsb
pusha
movsl
cltd
jno
stos
test
and
sahf
sbbb
mov
out
arpl
data16
jp
loop
testb
bound
ret
jg
dec
cmpsb
sub
popa
lock
or
test
in
mov
pop
mov
popa
push
pop
ret
lds
pop
mov
dec
dec
jge
mov
ja
cmp
stos
jmp
loopne
mov
clc
shlb
bound
dec
cld
fildl
xchg
and
ss
mov
ljmp
fists
imul
sbb
mov
out
lock
cmp
jecxz
lcall
ljmp
js
mov
rorb
or
ds
push
lret
cmpsl
bound
jle
mov
mov
push
bound
scas
lret
mov
and
jae
and
pop
cmpsb
jns
outsl
stos
repz
pop
test
pop
int
adc
inc
lahf
pop
mov
fwait
or
mov
cmc
dec
clc
das
xorl
cltd
xor
inc
cs
imulb
in
js
leave
sbbb
xchg
fnsave
scas
fstpt
aad
add
imul
out
ret
cmp
aam
roll
rcll
sub
push
inc
mov
subb
jmp
or
push
iret
stos
ds
dec
sub
xor
in
cmpsb
add
jno
xor
addr16
xchg
ret
aam
in
inc
push
push
lock
stos
push
testl
push
clc
test
ret
push
pop
test
mov
xchg
mov
stos
sub
popa
scas
mov
pop
xor
mov
pop
adc
test
push
mov
in
lcall
mov
fiadds
mov
xor
and
cli
mov
mov
stos
pop
lock
lcall
xchg
cmpsb
add
jb
sub
cmpsl
cmp
sahf
into
js
jl
jb
add
notb
cmp
lahf
sbb
maxps
orl
hlt
ret
pop
mov
or
inc
adc
sub
sbb
rep
jmp
xchg
or
in
xor
ret
add
loop
into
cmp
or
fisttpl
lcall
movsb
or
daa
mov
xlat
xor
out
sub
or
jg
negl
jns
fsub
push
lret
into
fiaddl
push
dec
lcall
push
push
push
jle
sbb
push
insl
pop
push
mov
or
outsb
dec
mov
cmp
pop
mov
lods
fwait
sbb
mov
and
lock
pop
ret
sahf
pop
pop
out
rcll
addr16
scas
imul
int3
push
imul
std
into
sub
mov
fwait
push
in
cmp
insb
sti
lret
je
cltd
jno
rcrb
cmpsl
push
xor
xchg
test
lret
repnz
mov
test
mov
jecxz
adc
dec
xlat
nop
popf
out
idivb
jae
popa
lcall
nop
push
shll
push
ficoml
mov
adc
mov
popf
jb
es
push
into
cltd
mov
inc
out
loopne
and
and
xchg
jne
jp
pop
andb
jge
popf
mov
sbb
sub
in
imul
push
lcall
mov
js
jne
mov
iret
and
ss
sbb
mov
imul
or
pop
mov
js
insl
sub
scas
add
xchg
xchg
adc
fs
xchg
sub
pushfw
test
jg
inc
negb
mov
ror
inc
fwait
xchg
xchg
cs
dec
dec
sub
push
test
inc
jmp
mov
cmp
subb
fildll
push
push
xchg
loope
mov
cmp
add
shlb
add
lret
sbb
das
mov
jnp
or
popa
mov
mov
pushf
mov
sub
das
popa
xlat
mov
inc
sub
dec
inc
ljmp
dec
lock
xor
jae
pop
jbe
xchg
iret
push
lock
and
adc
xchg
fiadds
and
ljmp
cmc
dec
ja
lret
rorb
andl
lcall
mov
mov
add
pop
or
je
nop
add
jp
cwtl
push
xor
shll
aad
xchg
out
sbb
insl
cld
fildl
clc
movsb
sub
jmp
data16
mov
dec
xorl
xchg
repnz
mov
or
ljmp
ja
das
push
add
mov
and
cmc
cltd
in
stos
pop
cmp
sub
lahf
bound
mov
push
gs
push
cmpsl
push
jo
outsb
popa
out
scas
aad
pop
ret
ficoml
mov
jbe
xor
movsl
repnz
push
pop
pop
in
jb
cmp
mov
push
push
roll
shl
jne
push
pop
scas
pop
test
pop
jge
shrl
sub
icebp
or
xchg
into
mov
jb
or
pushl
insl
mov
mov
ljmp
imul
xchg
insb
mov
adc
out
aaa
lods
jmp
out
jecxz
pop
aam
mov
and
and
mov
mov
or
dec
add
sbb
pop
push
xchg
push
ret
mov
jae
sub
dec
or
inc
mov
xchg
enter
ljmp
test
mov
jp
push
pop
stos
les
insl
movsb
fdivl
and
mov
push
jmp
loopne
lods
cmp
adc
scas
xor
sub
cmp
mov
xor
pop
sbb
dec
push
mov
ljmp
inc
lea
std
mov
lds
lret
lret
shl
leave
ss
push
and
in
xor
sbb
jae
mov
mov
popf
pop
dec
repnz
lock
lcall
repz
lcall
test
mov
pop
imul
sahf
xchg
out
popa
sub
xor
push
mov
pop
jo
xor
fwait
push
cmp
lret
pop
arpl
sahf
scas
daa
sti
push
xor
mov
dec
ror
test
pop
movsb
or
addl
rcrb
dec
add
fdivl
mov
lods
into
pop
loope
jnp
jle
movb
jge
add
push
cmp
push
sbb
adc
mov
and
jb
push
iret
and
xchg
test
incb
je
pusha
sub
cmp
cmc
int3
cmp
pop
pop
sub
cmpsl
loope
decb
mov
rcr
mov
mov
call
call
subps
rcll
mov
aam
cmp
xorl
or
lds
loope
mov
scas
sub
push
xchg
outsb
ss
pop
push
mov
mov
dec
movsb
dec
fwait
ljmp
pop
sbb
sub
adc
flds
shlb
outsb
cmp
inc
negl
push
inc
mov
mov
xor
dec
shll
aad
inc
mov
jle
shrb
lret
cld
dec
dec
orl
cmpsl
mov
insl
or
push
jo
lcall
gs
push
jp
call
aas
fwait
jo
iret
push
add
mov
inc
mov
mov
add
mov
sub
xor
xchg
outsb
lock
loop
jne
popf
dec
ret
adc
leave
popa
out
mov
das
std
pop
insb
pop
outsb
add
dec
outsb
mov
mov
jns
mov
fidivs
sub
mov
je
bound
push
divl
dec
ja
sub
sbb
nop
pusha
das
jmp
adc
and
scas
icebp
push
loopne
dec
fbld
aad
pop
xchg
push
movsb
pop
xor
jae
mov
fistpll
in
cwtl
mov
cwtl
sti
lods
mov
rolb
dec
mov
ds
pop
jle
ficomps
rcrb
and
mov
sbbl
mov
push
cltd
nop
inc
pop
adc
xor
mov
cmp
push
push
test
stc
jne
dec
fldcw
pop
shll
push
fwait
scas
sub
stc
neg
sahf
into
mov
in
mov
sbb
enter
scas
mov
push
rol
mov
cmp
sti
inc
dec
dec
dec
out
bound
mov
loopne
lahf
jno
push
mov
sti
out
mov
xchg
insb
mov
pushf
push
mov
cli
test
push
push
fnstcw
jp
pop
and
add
test
mov
in
push
fadds
decb
int
movsl
adcb
lods
xlat
ret
mov
insb
push
xlat
inc
pop
fbstp
cli
xor
imul
lret
shlb
jl
mov
and
mov
push
jecxz
pop
inc
push
fisubrs
fs
in
push
sbb
mov
dec
push
jmp
fimuls
cmp
pop
nop
or
mov
dec
test
jns
faddl
insb
xlat
xor
fwait
adc
push
jno
movsl
shll
inc
stc
stc
test
mov
push
mov
xchg
je
add
inc
lea
dec
cmpsl
xchg
into
cltd
imul
stos
into
ret
fs
xchg
sub
pusha
jne
cmp
jp
cmc
fiadds
jno
xchg
dec
jns
sub
and
mov
flds
sub
sub
punpcklbw
fld
je
mov
and
out
pop
pop
add
aaa
mov
into
imul
jmp
mov
icebp
xor
jmp
mov
das
and
pop
lock
push
mov
push
mov
dec
rcrl
dec
subl
add
in
xchg
inc
scas
pop
aas
mov
pusha
jg
push
mov
mov
xrelease
dec
pop
sbb
pop
push
mov
cmp
lahf
sub
xchg
stc
dec
xor
mov
clc
dec
pop
xlat
movsb
adc
loope
inc
aas
cmp
pop
imul
cs
mov
imul
adc
xor
jp
push
ret
pop
jb
shrb
fsubs
or
xchg
sub
xor
cmp
add
push
negb
call
jmp
sub
mov
cmp
fwait
pop
fwait
jl
xor
cwtl
aaa
xor
mov
fistps
dec
push
sahf
push
jb
fwait
lret
xor
icebp
or
test
pop
gs
mov
test
push
push
lret
lret
scas
sbb
and
or
push
adc
out
and
cmc
out
es
cmp
sub
xchg
mov
enter
ja
cmpsl
pusha
push
mov
push
push
fdivs
push
jl
cmpsb
pop
pop
in
lss
enter
data16
fsubp
aam
fcmovne
insl
and
imul
int3
adc
xor
xchg
ja
sarl
shll
push
sbb
in
mov
enter
je
jb
mov
xchg
jl
pusha
mov
test
fldl
dec
mov
mov
cmp
mov
inc
in
pop
int
add
lahf
mov
sbb
pop
call
mov
repnz
movsb
mov
pushf
sub
daa
dec
cmpsl
push
sbb
pop
or
inc
repnz
sub
mov
scas
mov
rcrl
cld
lods
adc
cmp
out
adc
cwtl
sahf
movsb
frstor
cmp
pushf
cmpsl
or
ret
xor
clc
mulb
xchg
pop
pop
lods
cltd
push
mov
xchg
orb
lahf
push
icebp
mov
fsts
sbb
mov
popa
xchg
mov
sbb
unpckhps
sub
pop
call
repnz
cmp
sub
pavgb
xchg
pop
push
stos
push
adc
mov
and
cmp
jae
or
stos
sub
enter
sbb
pop
xchg
push
ljmp
imul
and
inc
stos
cmc
nop
pop
aam
aas
pop
popa
out
sub
call
ja
jg
imul
xchg
rcrb
mov
fwait
jle
ja
insb
push
int
or
insb
pop
and
stos
rdmsr
ds
enter
andb
xchg
pop
inc
cmpl
and
loope
int3
stos
jle
push
rclb
and
sub
ret
lret
ss
sbb
or
and
out
sub
mov
cmp
inc
pushf
or
aad
sbb
lret
dec
adc
sub
sbb
dec
std
jp
pop
out
jmp
sub
into
mov
jmp
cmp
ljmp
pushf
iret
scas
jb
fucomi
fstpl
xchg
shrl
ss
jne
js
out
push
cmc
into
mov
in
repz
test
cmpl
dec
fs
cmp
mov
das
mov
cmp
aas
or
sub
push
rcrl
into
addl
inc
jg
rclb
and
fldenv
fcmovbe
bound
xor
repnz
lods
or
xchg
movl
dec
jbe
orps
cltd
dec
out
pop
int3
mov
or
es
outsb
in
mov
fcoml
pushf
rcl
pop
mov
sbb
in
adc
pusha
scas
into
and
fidivrs
lods
outsb
push
pop
shlb
add
dec
fisubl
rclb
out
sub
jge
adc
or
loopne
mov
leave
cmp
cmp
adc
push
aam
pop
pop
addr16
mov
test
mov
mov
cwtl
in
outsb
push
push
xor
cmpl
inc
push
jle
shlb
notl
dec
outsb
adc
cmpsl
shll
test
push
insb
scas
pop
lahf
fisubrl
pop
mov
push
repnz
imul
sbb
fcmovne
add
jbe
jnp
js
imul
jp
sti
mov
leave
pop
mov
lods
xchg
dec
aaa
fmull
in
ljmp
in
xor
mov
mov
xlat
fcoml
adc
sbb
add
icebp
aas
cmp
xorb
jl
gs
lahf
lds
mov
mov
gs
xor
cmp
inc
adc
and
xchg
inc
out
bound
mov
mov
sbb
inc
xlat
adc
lds
push
mov
shr
pop
imul
dec
stos
in
or
mov
clc
dec
adc
out
pushf
rclb
int3
mov
sub
pop
cmp
shlb
cs
stos
xchg
xchg
gs
dec
pop
rcr
inc
iret
push
js
sti
dec
push
sub
out
push
stos
pop
push
cmpb
add
out
xor
ja
push
dec
push
jbe
mov
or
insb
pop
punpckhdq
ja
jns
negb
shrb
jae
sub
inc
sbb
add
mov
fsubl
push
mov
pusha
jnp
xor
push
cwtl
outsb
pop
add
scas
cli
ret
dec
and
or
aas
test
inc
rorl
lret
call
jb
or
ret
gs
jp
xchg
push
pushf
push
fwait
xchg
or
push
nop
repnz
mov
out
sbb
jb
enter
and
ljmp
je
adc
mov
shrl
mov
jns
jne
jecxz
out
mov
pop
or
mov
aam
into
xor
add
cmp
xor
and
xchg
sub
dec
sub
addb
cmp
shlb
xor
mov
adc
xor
mov
add
dec
dec
dec
aad
push
cmpsb
fsubl
insb
out
rclb
xchg
call
xchg
or
ja
mov
lret
cli
int
pop
mov
mov
or
stc
negl
or
repz
sbb
push
lods
lds
ljmp
scas
push
daa
fwait
leave
jnp
repz
inc
jg
ficoms
fdivrp
dec
jmp
aad
mov
or
mul
ja
cmpsb
mov
negb
adc
sbb
je
test
push
push
jnp
leave
push
adc
push
mov
push
andl
fistl
ja
dec
popa
fsts
jge
xchg
inc
sbb
iret
sub
cmp
loop,pt
je
sbb
movsl
js
mov
pop
scas
mov
pop
sbb
or
xor
outsl
add
sbb
mov
sbb
and
into
jge
cmp
sbb
push
cwtl
mov
pop
jb
lock
mov
sbb
stc
adc
or
lahf
test
lods
rorl
push
cwtl
fisttpl
jbe
pop
sbb
pop
fdivp
sub
inc
nop
dec
mov
stc
or
mov
cmp
decl
or
inc
inc
push
or
out
cld
mov
push
xchg
pop
pop
add
mov
cmc
fldcw
push
das
icebp
ljmp
mov
fdivrs
inc
das
fsubp
ss
cmp
or
gs
frstor
ds
adc
sti
mov
and
cltd
adc
push
subb
lock
mov
dec
xor
popf
outsb
jae
jmp
js
loop
ficoml
pop
lcall
or
xchg
jb
pop
pusha
setno
push
stc
fmuls
in
xchg
push
or
leave
push
in
or
imul
xchg
inc
fcmovnb
std
dec
in
pop
mov
test
mov
adc
pop
negb
sub
xchg
inc
sbb
sbb
sarl
daa
js
add
cmp
fldenv
lcall
jl
pop
pop
arpl
les
mov
push
cmc
xchg
lods
xchg
dec
jg
adcb
jno
mov
push
pop
imul
mov
cmpsb
jp
je
jne
movsb
int3
aaa
scas
xchg
popa
or
push
push
popl
push
cmpsb
inc
jnp
pop
popa
cltd
push
in
cmp
cmpsb
jnp
sub
fbld
lcall
add
xchg
xor
jmp
cmp
xchg
add
sub
shr
push
push
dec
movsl
dec
sbb
jnp
test
in
inc
jno
fidivrs
cmp
adc
sub
shrl
fmuls
mov
or
xchg
rorb
xchg
insl
hlt
mov
lret
and
inc
fistl
mov
pop
ret
call
not
push
mulb
mov
or
stos
divb
cmpsl
ss
lcall
rclb
mov
push
cwtl
mov
adc
int3
inc
inc
das
adc
xchg
fsubl
int
mov
ror
cmp
call
mov
test
cmp
pop
mov
mov
fcmovnu
out
pop
fwait
xchg
push
ficoms
stos
sub
loopne
xor
rcl
mov
push
push
add
iret
je
push
push
jecxz
xchg
mulb
push
cmp
inc
adc
mov
cld
xchg
pusha
jmp
xchg
adc
in
sar
lds
push
mov
cs
push
pop
inc
rcl
cltd
inc
loope
popa
sub
jl
adc
push
fs
jmp
or
jmp
stos
jns
pop
call
push
ss
lods
scas
stc
inc
xlat
imul
mov
lret
andb
fidivl
movd
ja
or
outsl
lret
push
movsl
mov
lahf
mov
sti
loop
shlb
aaa
sahf
int
ljmp
jb
addr16
shll
cmpsb
movb
stos
ror
mov
cli
xchg
push
push
push
xchg
mov
cwtl
in
jecxz
insl
data16
add
push
jb
sbb
or
loopne
xlat
inc
cwtl
xchg
sbb
push
pop
jge
mov
enter
cltd
fmull
push
push
cltd
into
pop
jp
movsb
repnz
and
fsubr
pop
or
loope
dec
pop
inc
das
push
mov
adc
lret
and
pop
push
or
push
out
scas
test
fildl
aad
stos
out
push
mov
js
jecxz
movb
jbe
dec
js
xchg
idivl
xchg
mov
dec
test
cmpsb
push
and
out
cmpsb
cmp
sub
sti
imul
subb
push
sbb
pop
cli
pop
push
ret
fdivp
repnz
notb
stos
mov
out
iret
dec
and
ja
scas
pushf
outsb
out
enter
cltd
adc
lret
out
add
fisttps
cltd
mov
shlb
push
add
mov
repnz
test
push
xchg
push
push
or
testb
xor
scas
jb
es
sbb
cmpsl
lock
cmpsl
mov
dec
into
adc
cli
in
push
inc
xchg
cmp
sub
in
outsb
divl
cmpsb
pop
ljmp
lea
mov
dec
sbb
mov
loopne
push
xchg
xlat
lcall
aaa
sub
loop
mov
shlb
mov
sbbb
rcrl
jecxz
fdivr
scas
mov
mov
mov
cmpsb
cmp
mulb
enter
out
inc
loop
xchg
dec
jo
pop
adc
sub
inc
sub
rolb
sahf
imul
outsb
push
cmpsl
push
mov
lods
and
mov
inc
mul
or
add
mov
mov
jbe
xchg
les
inc
loopne
jp
leave
bound
aaa
jnp
push
in
sahf
push
dec
cmp
mov
lcall
mov
cld
add
scas
mov
push
cmc
sbb
jns
sbb
cld
loop
popa
insb
inc
sahf
mov
jb
in
sbb
je
xchg
insb
mov
sbb
cmp
mov
pop
repnz
out
cld
and
rclb
xchg
or
xchg
jb
jle
fildl
sahf
xorb
out
inc
or
ljmp
pop
in
xchg
pop
scas
fmull
inc
add
mov
lods
ror
push
and
cmp
adc
pushf
sbb
lea
ljmp
dec
push
xchg
fisubrs
std
add
inc
fcompl
incb
aas
jge
mov
popa
xchg
mov
fildl
call
aas
sbb
mov
mov
and
test
data16
push
pop
ret
jae
stos
push
mov
aam
addr16
mov
hlt
fs
push
sub
push
in
fstpl
or
idivb
popa
push
mov
xchg
mov
out
push
mov
and
aam
into
hlt
out
pop
stos
enter
es
test
pop
hlt
nop
and
idiv
test
pop
shrl
test
mov
and
push
test
out
pop
pop
enter
scas
xchg
outsb
cmp
outsb
mov
push
int
ljmp
add
pop
popf
cmpsl
imul
cmp
push
cmpl
addr16
fistpll
bnd
bound
inc
loop
pushf
and
lock
lea
insb
or
xchg
mov
sub
aas
lcall
push
push
out
mov
xchg
cmp
addl
cltd
out
and
cltd
adc
xchg
jbe
xchg
or
ret
xor
mov
es
jnp
test
push
xor
adc
cmp
jp
mov
push
popa
inc
mov
dec
test
cmp
add
inc
push
inc
iret
jnp,pn
sti
adcl
push
rcrl
pop
outsb
stc
fistl
lcall
outsb
sbb
mov
add
int3
fdivl
fwait
ret
and
filds
lret
push
insl
mov
cmc
jnp
push
stos
loopne
js
ja
addr16
sbb
and
inc
xchg
clc
mov
fsubrl
ret
in
pusha
fcomps
dec
xchg
sbb
xchg
arpl
dec
mov
test
or
scas
ret
or
dec
cmp
in
cmpsb
aad
xchg
js
lahf
repz
imul
push
aaa
mov
push
jmp
sub
push
add
dec
fwait
int3
pop
dec
test
repz
insl
into
aad
xor
push
dec
bound
push
stos
mov
cmp
dec
je
mov
push
xor
clc
test
ljmp
ds
out
and
test
dec
lea
xchg
popa
pop
repz
push
test
fcompl
mov
bswap
scas
sub
inc
xchg
mov
dec
pop
mov
sahf
pushf
stos
enter
dec
out
mov
and
mov
fcmovnu
inc
jno
xchg
add
mov
sti
pop
fcoms
dec
imul
jo
xor
jl
les
pop
lods
outsl
xor
mov
inc
jb
mov
int
out
mov
cwtl
or
enter
add
daa
cwtl
in
mov
sub
test
scas
dec
mov
sub
pushf
mov
push
sbbl
stc
in
or
stos
clc
pop
push
jmp
insb
loop
jo
and
pop
in
push
out
and
jg
sbb
push
das
mov
pop
mov
mov
pop
or
idivb
mov
mov
mov
les
cmpsl
fmul
or
ss
pop
inc
mov
lea
mov
testl
xlat
mov
mov
xchg
xor
test
push
adc
jg
out
or
adc
mov
and
int3
cwtl
or
int
loope
cmc
jl
stos
stos
push
inc
adc
mov
inc
test
mov
test
shll
pop
sarl
cmp
xchg
fwait
into
cmp
data16
icebp
scas
adc
test
sarb
push
add
fst
lahf
lods
or
hlt
fidivs
pop
xchg
cmpsb
xor
inc
in
pop
dec
movsl
outsb
fistps
mov
into
outsl
lcall
jl
sbb
mov
mov
cmp
push
adc
xor
sahf
jbe
fldcw
dec
sbb
or
aad
stos
mov
sbb
pop
js
movsb
sub
push
sbb
or
fiaddl
push
ljmp
sub
cmpsb
popa
rolb
sbb
cmp
jg
decl
xchg
out
in
incl
mov
pop
pop
lds
pusha
andl
inc
xchg
and
cltd
popa
or
in
decb
scas
push
dec
xchg
lcall
loopne
cmpsl
or
adc
sub
mov
int
inc
sbb
push
sti
iret
pop
insl
in
aas
shll
xchg
lahf
mov
outsb
cmp
ja
repnz
jae
dec
sbb
lcall
fwait
pop
jbe
mov
cmp
xchg
adc
dec
addr16
cmpsl
fs
jbe
fmul
aaa
es
mov
cmp
mov
movsb
jmp
aaa
pop
and
aas
sub
adc
jge
add
lret
add
sarb
push
jo
xor
rclb
sub
xchg
mov
test
push
shlb
inc
outsb
scas
in
je
mov
push
mov
push
mov
pop
repz
ljmp
adc
and
pop
push
stc
fnstcw
or
add
push
and
pop
adc
movsb
mov
push
pop
int3
jg
test
fistps
shl
xchg
jno
jns
push
ror
push
popa
pusha
cmpsb
orl
pcmpgtb
adc
cmpsl
rorb
mov
movsb
pop
pop
les
int3
movsl
dec
push
sbb
inc
xchg
xchg
sbb
cmp
jns
js
jb
sahf
pop
popa
pop
cmp
push
cmp
pop
nop
sti
mov
jg
xchg
jmp
or
jecxz
cld
push
pop
fdivp
add
pusha
lea
and
lods
imul
nop
jle
push
mov
mov
xor
lret
push
mov
inc
stos
cwtl
push
sbb
repnz
outsb
mov
fldenv
xchg
pop
adc
push
mov
push
xor
data16
push
inc
movsl
sbb
sbb
fsubl
and
pushf
sbb
pop
mov
shll
push
push
outsl
in
sub
push
cli
xor
cmp
mov
sti
push
enter
shll
mov
inc
pop
add
mov
cld
out
stos
mov
mov
filds
mov
sahf
in
jnp
or
adc
dec
jbe
in
xor
pop
cmp
inc
fidivs
push
inc
or
mov
insl
xchg
rclb
adc
lds
cli
pop
idivb
push
incb
cmp
loope
ret
lcall
or
test
aam
mov
movb
imul
movsb
cltd
mov
out
inc
pop
xchg
filds
cmc
push
imul
fildll
lcall
and
inc
sub
lcall
es
jp
out
test
and
inc
mov
mov
sub
jmp
xor
adc
popf
leave
ret
dec
in
enter
and
hlt
pop
movsl
mov
lcall
jmp
insl
push
cmpb
or
stos
or
mov
and
bound
xor
push
sub
repnz
sbb
int3
int3
jp
push
pop
or
loop
cwtl
into
mov
pushf
xchg
bsr
clc
sbb
enter
outsb
jg
push
fidivrl
xor
je,pt
pop
pop
ljmp
ljmp
int
sub
fmul
dec
cmc
iret
cmp
movl
outsb
mov
cmpsb
push
std
pop
sbb
pop
push
lahf
dec
data16
rol
pop
sbb
sbb
cmpsb
cli
mov
dec
ja
cmp
pop
push
xor
mov
cmc
dec
cld
mov
sti
sbb
jae
mov
push
and
scas
loop
pop
int3
test
ja
fisubrl
and
pop
and
out
adc
push
lock
xor
mov
test
and
aas
in
lea
mov
in
and
cmc
lret
xchg
int
mov
xchg
pop
lods
inc
lret
lods
adc
popf
daa
adc
fcmovnbe
adc
clc
jp
jae
sbb
sbb
pushl
js
daa
dec
dec
jl
pusha
add
daa
xor
dec
les
enter
sbb
pop
push
fisubs
and
lock
add
or
es
je
xchg
lahf
cmp
push
das
mov
xchg
xor
mov
mov
subl
dec
inc
jno
dec
push
add
fwait
push
or
dec
cld
cmp
pop
sbb
repnz
das
rcr
fwait
dec
jbe
imul
js
dec
jb
add
lret
rorb
cld
stos
cmpsb
int
cmp
into
shrb
lcall
mov
aas
pop
int
xchg
push
push
adc
stc
push
push
mov
lods
lea
mov
test
inc
mov
push
pop
mov
idiv
stos
mov
lret
repnz
dec
cli
stos
cmp
sub
outsl
into
ljmp
dec
icebp
dec
mov
push
aam
aam
in
scas
ret
ret
js
lods
jle
ljmp
pop
outsl
ss
push
jl
leave
cmp
push
in
push
adc
jb
test
movsb
pshufw
dec
mov
mov
popa
scas
jg
arpl
scas
dec
sbb
mov
push
js
cmp
jmp
loopne
movsl
bound
mov
push
pop
xlat
dec
leave
lcall
jno
lcall
imul
test
mov
mov
jb
sahf
fbld
es
aas
mov
mov
dec
xor
fisttpll
and
mov
push
cli
mov
mov
sub
cmpsl
push
fcoms
mov
ss
cmpl
mov
mov
and
out
stos
pusha
cmp
loope
adc
popf
aad
aas
mov
shlb
ljmp
push
mov
out
cmpl
scas
cmp
pop
shll
ljmp
insl
or
sub
sahf
scas
or
shr
daa
lret
test
repnz
fadd
outsb
scas
in
nop
mov
cmp
jae
pushf
lcall
pushf
dec
xchg
js
pop
sbb
lret
ljmp
adc
or
mov
xchg
pop
and
pushf
je
cmpsl
fsub
mov
movsb
stos
mulb
lea
bound
inc
out
ret
dec
iret
testb
xchg
dec
mov
icebp
dec
sbb
fs
mov
jbe
sbb
push
nop
rclb
outsl
xor
not
sbb
inc
jmp
imul
push
sti
add
mov
mov
mov
fwait
dec
out
or
dec
jmp
inc
nop
inc
stc
push
pop
add
fnstsw
pop
ja
data16
adc
jmp
jl
push
imul
dec
add
pop
out
sahf
lahf
sbb
pop
jo
ficompl
xchg
push
jne
lods
pop
iret
pop
outsb
movsl
les
pop
cmp
dec
or
stos
push
les
sub
pop
push
mov
dec
or
adc
and
into
out
lret
push
push
bound
cmp
sub
hlt
movsb
pop
enter
push
addb
repnz
xchg
lcall
jmp
nop
sahf
jo
out
shlb
outsb
push
xchg
rcl
jbe
pop
inc
jns
mov
js
aad
fadd
enter
push
add
pop
fstps
dec
xchg
mov
lret
cltd
sub
or
shl
dec
testb
add
ret
ja
xchg
sbb
mov
mov
pop
repnz
sub
dec
xchg
inc
and
sahf
fdivrs
mov
rol
imulb
sub
mov
jle
int3
pop
out
pop
pop
scas
or
loopne
int3
test
movb
movsb
enter
mov
cwtl
jecxz
popa
in
adc
cltd
lret
mov
jmp
lods
inc
jnp
and
mov
ljmp
subb
arpl
mov
push
dec
call
aam
mov
cmpsl
add
pushf
icebp
jb
inc
ret
inc
mov
stos
jmp
js
sbb
lahf
clc
pop
leave
pop
dec
sbb
mov
loope
jl
or
mov
test
insb
jo
bound
cmp
and
lea
sbb
lods
loop
jle
dec
lea
and
clc
js
pop
dec
in
ds
mov
cmc
sub
in
push
test
sub
jle
stos
push
push
inc
iret
add
sbb
test
and
ljmp
xchg
sbb
mov
or
nop
cmp
es
fistpl
ljmp
fiaddl
push
popa
scas
out
add
and
sub
hlt
imul
ret
imul
bound
cmp
mov
data16
mov
data16
cwtl
mov
add
fildl
push
mov
outsb
xor
loopne
adc
push
xchg
push
into
dec
jp
xchg
push
ds
jl
add
mov
pop
addr16
ljmp
and
mov
mov
lods
ficomps
dec
lea
xor
rcll
sub
loopne
ficompl
push
pop
lcall
in
mov
jne
popa
pop
push
shrl
xor
lahf
ss
lods
mov
daa
and
aad
aad
into
rorl
into
pushf
jp
jl
rclb
ss
int
push
insb
xor
shr
sarb
bound
sbb
cmp
gs
ss
ds
cmp
sbb
mov
or
shrb
mov
dec
cli
pop
scas
scas
scas
inc
fs
test
jmp
movsb
mov
fidivrs
dec
pop
inc
push
cmpsb
cltd
jno
add
stos
jae
mov
jge
pop
mov
cli
popf
xchg
sti
movsb
stos
dec
dec
in
or
loopne
lods
xlat
dec
leave
adc
push
xchg
scas
cwtl
pop
sbb
mov
mov
push
cli
cmpsb
idivb
popf
jae
inc
pop
sbb
pop
lcall
ss
mov
pop
imull
movsl
aas
mov
xchg
js
mov
in
sub
pop
idiv
inc
adc
loope
pop
fnstenv
and
mov
test
pop
push
sbb
xor
mov
xchg
and
pop
icebp
jno
dec
bound
aam
stc
lea
je
mov
xchg
fwait
sub
mov
adc
mov
les
stos
jle
pop
xchg
jbe
lock
jg
dec
add
call
inc
in
dec
fcoml
int
mov
lret
xchg
shll
js
loopne
jp
or
hlt
test
scas
jmp
or
jmp
outsl
dec
outsb
or
clc
outsl
out
jnp
jo
push
mov
pop
dec
jecxz
lea
fs
push
dec
push
cmp
dec
in
scas
jb
mov
lret
xchg
and
jp
bound
cmc
dec
jle
out
fdivl
pop
fwait
jnp
cmp
lahf
adc
dec
popa
dec
pop
sub
jbe
jnp
xchg
pop
aam
inc
popf
ss
clc
mov
pop
or
pusha
pop
jo
pop
loop
dec
sub
outsl
sub
sti
cmpsb
xchg
loopne
fldt
cs
iret
cld
or
out
outsl
xor
movsb
out
push
stc
jl
test
push
cmp
js
push
xor
cmp
pop
sub
lock
daa
pusha
lahf
clc
mov
cwtl
test
add
sahf
es
lods
fidivrs
jns
fcoms
mov
data16
and
lods
lret
outsl
pushf
push
sub
jmp
mov
pop
rorl
lods
adc
pop
push
cmc
data16
cld
mov
mov
bound
mov
outsw
xor
mov
jno
icebp
mov
jecxz
jbe
outsb
popf
add
js
xchg
dec
jns
mov
dec
jne
jb
fsub
cmp
int
lcall
std
call
mov
rcr
cmpsb
jb
inc
dec
popa
xor
and
fsubr
fdivs
lcall
dec
loope
pop
andb
lret
or
push
es
lods
inc
and
cmp
in
cmpsl
fmul
cmp
stos
mov
jbe
xor
aad
push
push
sbb
lds
pop
sub
adc
lret
pop
fsubp
inc
add
insl
rorb
or
xchg
into
mov
and
orb
jbe
loopne
mov
sbb
add
inc
divl
sbb
xor
iret
inc
inc
sbbb
out
orb
mov
mov
xor
int3
fwait
dec
push
leave
push
mov
push
das
pop
or
mov
cmpsl
dec
orb
clc
adcl
pop
and
push
xor
outsb
ret
cmp
or
pushf
ja
std
neg
lcall
dec
enter
popa
call
push
fsubrl
mov
fincstp
push
and
xchg
adc
push
dec
xor
dec
idivb
ret
cld
inc
jns
sahf
stc
imul
and
sahf
jno
repz
jo
fidivl
mov
dec
adc
notl
push
rcr
js
pop
jecxz
jnp
gs
jne,pt
push
mov
mov
lret
mov
test
sbb
fdivl
jbe
int
sub
test
cmp
hlt
sbb
mov
aam
pop
jle
mov
add
and
gs
mov
jns
pop
enter
imul
mov
sbb
sub
bound
divb
cs
out
cmpsl
jp
jns
mov
xchg
mov
popa
stos
jbe
mov
sbb
cmp
mov
adc
dec
in
imul
and
push
xchg
or
or
xor
inc
add
pop
pusha
fstpl
lea
push
cmp
and
push
xchg
out
jnp
sbb
mov
add
lea
fists
xchg
in
dec
xor
sub
mov
dec
fbstp
jns
inc
add
add
add
clc
pcmpgtw
scas
push
imul
mov
and
mov
scas
imul
pop
mov
xchg
les
sub
test
ss
add
push
mov
movsb
fisttpl
adc
int3
mov
sahf
jecxz
and
loope
sub
push
movsl
jle
push
pop
xor
ds
push
loopne
outsl
jbe
pop
data16
adc
mov
push
cmc
jo
adc
pop
lcall
inc
dec
in
cld
ffreep
dec
cmp
cmp
push
pop
ds
sub
cmp
fnstsw
or
inc
popf
xor
jp
or
fdivr
fucomip
idivl
mov
mov
push
mov
fmuls
inc
xchg
test
xor
cwtl
or
jne
cmp
jle
sbb
push
addr16
cmp
pop
pop
push
mov
dec
cmpsl
mov
inc
ds
ret
mov
das
mov
mov
xor
std
mov
cmp
or
inc
gs
lret
gs
inc
sbb
pop
inc
ret
xchg
xchg
inc
aam
cmp
clc
xchg
pop
insl
xchg
hlt
jmp
movsl
ja
lahf
xor
inc
fidivrs
jl
or
or
scas
pop
pop
aad
out
push
or
data16
lret
mov
mov
jmp
sbb
inc
inc
mov
lea
lods
mov
and
jno
sbb
sbb
imul
add
rcrb
mov
pop
inc
push
sbb
icebp
loopne
add
hlt
sbb
sbb
push
inc
popa
pop
xor
push
mov
fld
fxch
xchg
cs
repnz
ja,pn
mov
push
incl
or
cs
lock
inc
pusha
mov
lahf
sbb
inc
cmp
or
fwait
addb
add
rcrw
push
out
push
xor
ss
test
adc
mov
push
xor
pop
sub
out
push
push
jb
cmp
ret
clc
stos
nopl
xor
fldl
add
pop
jb
ret
and
cmpsb
mov
lods
in
push
dec
mov
push
or
mov
or
xor
repz
sub
scas
hlt
xchg
pop
adc
adcl
inc
and
pop
aam
outsl
out
jo
add
stos
cmp
sub
movups
dec
test
sbb
loop
mov
out
mov
test
repz
push
xchg
in
push
adc
enter
fwait
mov
adc
fwait
enter
push
add
and
fsubrl
push
in
aaa
fisubrl
lahf
xchg
push
pushf
xorl
and
mov
jge
inc
push
movsl
nop
sbb
in
jbe
enter
call
movsb
add
add
loop
mov
and
pop
mov
add
das
pop
push
sbb
clc
push
stc
lods
sarl
cmp
mov
inc
and
sbb
insb
jg
push
loope
mov
cmp
cmp
or
movsl
fmull
ds
clc
add
imul
iret
and
push
adc
lret
leave
mov
push
repz
mov
pop
inc
outsl
mov
inc
aam
xchg
negb
fiaddl
lods
fs
pop
push
int
mov
jno
in
in
ficoms
sbb
imul
loop
les
xor
push
xchg
push
jl
cmp
imul
pop
xlat
ret
jne
loop
out
aas
and
dec
cmp
into
out
xchg
aam
jb
inc
leave
ljmp
mov
fsubr
mov
mov
or
fmull
adc
mov
fdivrs
out
xchg
xchg
cli
dec
jmp
rcrb
pushf
sub
xor
jno
scas
push
outsl
xchg
insb
jle
popa
lcall
rorb
stos
enter
push
pop
and
shll
daa
aam
push
xchg
dec
push
ja
lcall
pop
sahf
add
fcomp
and
and
or
popf
jb
lahf
clc
push
fwait
xor
dec
das
pop
adc
sbb
cmp
ljmp
jl
push
inc
clc
mov
xchg
out
pop
mov
fdivr
push
in
pop
xchg
popf
lea
das
sbb
das
dec
imulb
jg
outsb
cmp
test
and
jl
stos
sbb
adc
dec
sahf
in
jge
pusha
ss
fists
xchg
jo
mov
sub
pop
movsl
lods
fldcw
pushf
int
jnp
xchg
add
cmp
loopne
jno
cld
jno
lock
lea
iret
mov
mov
sahf
js
mov
xor
fs
sbb
stc
push
jo
das
js
adc
loop
jns
sub
mov
mov
ret
jle
cmpl
xchg
dec
adc
nop
cmp
xor
xchg
roll
pop
or
pop
cltd
daa
lahf
pop
mov
push
jbe
jae
jp
outsl
and
pop
xor
adc
inc
out
dec
mov
gs
jb
popa
sub
jge
jecxz
decl
pop
mov
push
scas
pop
loope
sub
test
pop
in
std
jno
inc
repnz
test
dec
jge
dec
sbb
sti
insl
subb
addr16
int
imul
and
out
arpl
and
xor
data16
hlt
pop
in
mov
pop
mov
jp
mov
push
lret
aas
or
lods
into
inc
xor
xor
es
push
dec
jp
out
xchg
adc
push
and
pushf
dec
xchg
sub
sbb
xchg
call
jbe
lcall
mulb
mov
cmpsb
repnz
push
mov
call
inc
cwtl
popf
lock
jo
pop
mov
stc
push
je
cmpsb
sub
shlb
stc
in
inc
out
mov
xchg
sti
cwtl
insw
cmp
test
stos
aam
enter
pop
mov
rsqrtps
mov
or
jmp
outsb
jmp
push
mov
stc
and
stos
shrl
sbb
xchg
mov
aaa
out
or
add
mov
adc
outsl
dec
and
mov
dec
fstpl
out
add
stos
jno
rclb
xchg
xor
lret
outsl
push
jmp
in
xchg
clc
lods
in
loope
xchg
xor
cmp
jae
dec
ret
imul
push
cmp
loop
popf
xchg
and
out
and
push
test
xchg
fcomps
in
pop
sarb
cmp
adc
pop
imul
std
or
je
add
or
arpl
xor
popa
xchg
cli
sahf
xchg
je
arpl
pop
outsl
xchg
lret
or
mov
pop
insb
pusha
cwtl
lcall
les
xchg
aam
jmp
pop
pusha
in
xchg
je
jb
cli
or
cmc
fwait
dec
cmp
roll
push
sub
push
xchg
dec
mov
mov
xor
sub
lahf
addr16
add
cltd
sbb
pop
sub
pop
inc
xchg
mov
add
lea
fldl
mov
jno
xor
xchg
aam
inc
and
ja
fadd
lret
int
push
repz
cld
cltd
mov
mov
ss
sub
sub
mov
jne
pushf
mov
cmpsl
scas
mov
mov
adc
fisttps
int3
pop
repnz
test
push
rcr
xor
cld
inc
jmp
mov
das
mov
xchg
lock
ljmp
scas
push
xor
mov
dec
repnz
jl
popf
mov
cmp
mul
addr16
rorb
sub
repnz
cmpsl
sahf
push
mov
scas
imull
mov
ret
mov
fistpll
and
int3
out
pop
adcb
mov
mov
fists
cmp
fisubs
cs
int3
loope
mov
nop
cmp
lea
aad
aas
sub
sarl
shlb
neg
or
fmuls
xchg
movsl
adc
scas
clc
test
sbb
push
jp
xchg
jae
mov
xchg
enter
sbbb
mov
js
mov
cmp
and
imul
imul
push
mov
loopne
sahf
pop
sbb
dec
inc
push
out
mov
scas
xchg
push
jle
or
les
adc
sub
push
and
popa
fucomp
sahf
js
test
int3
mov
xor
notb
push
xchg
push
xlat
fwait
insb
ja
stc
jle
sbb
mov
pop
inc
int
aad
mov
shrb
sbb
adc
enter
cmp
shlb
mov
fwait
mov
loopne
in
test
fld
decb
or
jmp
ficoml
push
push
inc
cmp
dec
push
jmp
add
enter
push
inc
inc
xor
stos
subl
cmp
iret
stos
or
sub
pop
xchg
cmp
lock
pop
jnp
cltd
xorb
adc
lods
jecxz
cmp
sub
adc
sub
iret
imul
movsb
adc
outsl
imul
ret
faddl
mov
push
adc
loopne
out
sub
movsb
mov
jge
leave
jns
repnz
nop
cmp
fs
imul
mov
test
aas
rorl
imul
inc
sub
cmp
imul
cwtl
clc
repnz
cltd
mov
cmp
xlat
cmpsl
cmc
jl
frstor
push
sbb
and
and
repz
testl
inc
add
or
pop
jno
and
repz
jg
neg
aaa
jnp
icebp
sub
jmp
push
pushf
xor
xchg
testb
inc
xchg
sub
lcall
push
or
sbb
push
test
inc
sbb
dec
push
outsl
mov
push
mov
xlat
xchg
cltd
cmpsb
aaa
push
shll
sub
orb
mov
enter
lret
gs
aad
xchg
cli
loope
jl
pop
and
movsl
cmpsb
ret
push
xlat
test
jmp
pusha
cmpsb
jge
dec
fidivl
insl
xchg
out
ret
decl
mov
out
cmpsl
lcall
adc
inc
std
xchg
rol
cmp
out
adc
xor
das
push
mov
jl
sbb
inc
sub
test
sbb
push
jle
imul
into
jb
into
pop
xchg
shl
jae
pop
xor
push
adc
scas
sbb
cltd
into
xlat
cmpl
lock
movsb
je
push
std
movsb
add
jp
hlt
inc
push
and
aaa
jne
cs
mov
dec
inc
cmpsl
xchg
bnd
or
xchg
push
js
icebp
into
lea
adc
addw
into
out
stos
andb
jns
cmp
xor
cmp
leave
jae
into
jge
das
jbe
lret
outsb
jno
pop
enter
xor
sub
lcall
outsb
insl
aam
test
cmc
andl
jb
inc
movsb
enter
mov
imul
cmpsb
cmpb
fldcw
mov
jge
push
mov
cli
lcall
push
xchg
in
out
inc
pop
pop
nop
xor
pop
je
sti
into
sbb
not
das
fwait
test
cwtl
add
outsb
test
jmp
xor
pop
xchg
int
sub
push
lahf
test
pop
mov
pop
xor
scas
movsl
inc
jle
in
dec
rcl
and
xchg
cmc
pop
mov
xor
pop
jne
imul
clc
push
repz
push
cli
outsl
push
dec
lods
movsb
dec
hlt
mov
or
and
rorb
insb
cmp
or
push
leave
and
mov
ret
mov
or
mov
push
jl
xchg
pop
enter
nop
sbb
dec
cmp
das
rol
jno
pop
out
scas
in
lcall
jbe
push
bound
and
and
imul
insl
mov
arpl
call
pop
lods
cmpsl
sub
jle
mov
jecxz
sub
or
decb
loope
push
scas
xor
pop
imul
xor
mov
pop
push
test
or
mov
sub
push
cmc
cmp
adc
jp
mov
sub
sub
push
push
loop
into
or
cmc
sub
and
xor
aad
out
movsl
call
cmpsb
enter
in
mov
or
rcrl
jge
pop
loope
pop
jns
push
jle
ret
inc
scas
add
jns
les
jmp
stos
cmp
adc
jmp
push
mov
xor
push
aaa
mov
inc
xchg
leave
xchg
adc
xchg
ss
in
roll
sub
jnp
sub
dec
adc
imul
es
aad
sbb
xor
xorl
scas
lea
into
cltd
dec
clc
cmp
pop
out
or
mov
stc
loope
push
lea
fstpt
pop
js
cmp
mov
push
pop
mov
enter
enter
in
iret
loopne
rclb
repnz
push
jle
push
adc
push
ja
mov
inc
or
sbb
ljmp
add
adc
mov
push
xor
mov
cmc
orb
fnstenv
js
jmp
addr16
push
not
lcall
test
and
jp
ja
fcmovu
mov
xchg
xor
dec
cltd
das
jg
mov
pushfw
scas
and
pop
dec
pop
mov
pusha
pop
mov
in
ljmp
or
and
mov
outsl
sub
inc
cwtl
and
fimuls
jnp
adc
cmc
fdivrl
mov
dec
xchg
or
cmp
lret
inc
lret
movsl
inc
mov
jmp
jmp
lahf
sub
jl
xchg
mov
push
xchg
out
loope
repnz
mov
inc
jle
std
frstor
mov
movsb
lock
aam
push
hlt
xor
in
push
jmp
ret
xchg
cld
imul
jnp
cmp
test
dec
std
shlb
ss
sbb
mov
jne
jl
rorl
fldenv
mov
cmc
cmpsb
jno
sbb
lcall
jo
int3
dec
mov
mov
sub
mulb
rcll
test
ss
add
mov
push
shrb
int
ja
fwait
test
and
jo
cmpsl
pop
cwtl
in
xchg
rclb
outsb
lcall
inc
rolb
insb
push
lock
aam
mov
or
add
imull
sub
push
sahf
enter
xlat
push
sbb
stos
pop
push
pop
jae
push
mov
out
xor
mov
pop
dec
pop
push
cmpsl
sub
lcall
std
adc
test
pop
dec
cmpsl
daa
xor
fisttps
and
dec
mov
or
push
cmp
push
mov
pop
cmc
pop
xor
rcll
inc
sub
cs
mov
sbb
clc
rorb
frstpm(287
and
fdivl
cltd
push
outsb
xor
xchg
pop
lret
cmp
mov
jl
sub
pop
scas
iret
lahf
push
imul
ret
xchg
jg
test
out
mov
mov
cld
or
movsl
popa
rcr
and
ret
or
dec
add
pop
cmp
push
pop
mov
pop
in
push
arpl
cmp
mov
cld
shlb
nop
jbe
notb
insl
enter
lret
push
popf
std
dec
pop
mov
cmpsl
clc
pop
loopne
out
imulb
dec
push
lea
add
outsl
pop
lock
sbb
inc
lea
pushf
sbb
ss
scas
and
dec
mov
lods
dec
sub
or
dec
pop
imul
pushf
push
paddusb
pop
aad
dec
loopne
jnp
sub
stos
hlt
iret
popa
gs
pop
jecxz
mov
xlat
shlb
pop
enter
mov
repnz
cmp
cmpsb
rcrl
pushf
inc
aad
jno
mov
mov
xor
sub
mov
jl
mov
test
mov
into
cli
insl
enter
sbb
pop
out
pop
add
shlb
mov
xchg
lcall
xchg
mov
sub
adc
aas
das
pop
or
cmpsb
cwtl
out
stos
push
mov
push
lds
cmpl
cmpsl
cmp
pop
gs
lds
mov
rcr
push
rcll
in
es
loope
pop
mov
test
mov
and
sub
jo
push
push
sub
pop
out
aad
add
loop
fnsave
outsb
lret
dec
mov
mov
mov
push
jmp
mov
stc
ss
int
inc
add
mov
mov
iret
loop
mov
popf
jp
popa
cs
jle
out
mov
inc
popf
outsl
pop
pop
mov
jecxz
or
push
inc
scas
and
insb
outsb
test
sbb
cmpsl
movsb
inc
addb
mov
mov
jne
sbb
iret
lods
stos
test
lret
fwait
pop
out
pop
ljmp
or
lods
cmp
push
scas
inc
out
call
push
cmp
push
xor
dec
mov
push
mov
push
leave
jo
pop
adc
jmp
pop
gs
fwait
fwait
jecxz
out
idivb
cmpsb
stos
aad
into
mov
iret
jo
ja
inc
es
lret
shrl
iret
iret
mov
stos
test
adc
pop
std
lods
jb
js
out
rcrb
add
int3
push
jb
pop
mov
imulb
inc
int
imul
and
mov
cltd
or
jae
icebp
or
ds
movsb
pop
cmp
push
test
pop
rclb
or
push
dec
push
mov
cwtl
leave
add
test
rcrl
xorb
lods
mov
test
lret
adcl
loop
and
and
sahf
stc
fdivl
daa
pushl
push
fmull
xchg
mov
imull
mov
or
decb
mov
dec
repnz
add
xor
jp
inc
icebp
push
dec
inc
enter
sahf
pop
jno
popa
mov
sub
addr16
dec
pop
dec
fidivrl
push
shr
pop
and
not
imul
lret
imul
mov
push
xchg
xchg
insb
lcall
popa
aaa
sub
push
sub
xchg
rol
arpl
push
xchg
jbe
mov
xchg
int3
dec
test
mov
inc
lahf
dec
clc
mov
sub
mov
adc
or
pop
mov
cmpsb
icebp
fs
sbb
adc
add
stos
mov
in
bound
dec
mov
push
push
sub
lcall
xor
outsb
nop
jmp
inc
pop
sub
int
pop
inc
repz
jmp
addr16
sub
cmp
jb
std
out
in
fucom
ret
rclb
or
in
out
pop
fmull
push
push
outsb
fs
data16
jmp
imul
pop
enter
repnz
mov
xchg
push
dec
cmpsb
ljmp
jb
add
cld
mov
pop
mov
or
xchg
sbbb
jne
xchg
mov
repnz
leave
push
sub
repnz
and
sbb
test
mov
ljmp
dec
push
pop
sbb
add
dec
fmuls
push
rcl
dec
mov
cwtl
call
test
dec
or
pop
sbb
out
outsb
cmp
jo
or
cmc
cmpsb
mov
mov
pop
lea
ja
mov
push
repnz
push
gs
push
rcll
bound
push
jg
xchg
push
rclb
out
enter
in
pop
add
ja
mulb
mov
mov
int
sbb
jle
mov
mov
clc
dec
lds
imul
mov
popl
aad
xor
jo
jb
and
cli
fisubrl
xor
call
js
pop
mov
out
mov
cwtl
out
add
sub
aas
andnps
adc
cmpsl
sub
movsb
xlat
popf
ss
popl
mov
add
fcmovb
or
mov
push
inc
lods
enter
shlb
in
dec
js
and
mov
pop
xor
dec
arpl
sarl
iret
inc
sbb
xchg
fsubp
arpl
fs
mov
or
gs
cmp
in
jo
or
push
mov
sbb
inc
popf
xchg
adc
cmpsl
in
jmp
nop
mov
js
xor
mov
out
hlt
fiadds
cld
insb
pushf
dec
nop
rolb
mov
mov
inc
imul
loopne
sub
ret
push
vorps
xor
cwtl
mov
sbb
je
cmp
push
scas
add
push
arpl
push
inc
loope
lods
into
dec
fcomip
scas
loop,pn
dec
pusha
ljmp
lea
ja
dec
or
add
mov
or
out
imul
dec
cmpxchg
push
faddl
jae
jns
test
mov
dec
dec
clc
jle
insl
push
and
lea
lret
cmp
push
xchg
testb
fisubs
xchg
mov
iret
faddl
xchg
xor
dec
dec
int
jp
or
btc
mov
cmc
loope
lret
movsl
mov
adc
loop
lock
jno
outsb
cs
cs
pop
or
sbb
push
lock
dec
and
loope
test
add
jg,pt
mov
filds
jp
jae
mov
sarl
pushf
nop
and
aam
sbb
lcall
xchg
fidivrl
mov
xor
imul
jmp
jp
mov
into
cmc
mov
movsl
cs
and
dec
mov
xor
cmp
js
mov
test
and
mov
jle
sahf
cmp
sbb
pop
orl
and
or
mov
xchg
xchg
outsb
xor
lret
test
scas
andl
jns
jg
xchg
outsb
jns
xorb
outsb
jmp
int
push
push
leave
jo
or
mov
scas
cmpsl
mov
test
dec
ret
icebp
push
mov
lods
mov
call
dec
cwtl
fs
or
dec
jne
sbb
push
imul
out
loop
lret
xor
ds
pcmpgtb
aaa
stos
pop
aaa
sti
xchg
aas
and
ja
neg
mov
pop
ficoml
jl
dec
adc
cwtl
lock
call
sbb
ljmp
imul
cmp
stos
out
jmp
ret
adc
and
cmp
pop
js
std
sbb
imul
popf
jno
iret
loopne
aam
into
rcrb
cmpsl
aam
aas
hlt
xor
fisttpl
sti
or
test
dec
or
lret
adc
pop
push
orb
scas
mov
mov
cli
fs
jns
rcll
shlb
pop
xlat
xor
pop
jbe
test
jl
pushf
cmp
push
lea
imull
mov
xlat
jo
popa
sub
test
mov
je
lods
push
out
jo
or
stos
jb
imul
push
cltd
jp
xlat
xor
enter
sbb
fs
pop
jne
popa
dec
xlat
add
push
push
inc
jbe
or
pop
mov
out
or
pop
xchg
dec
rorb
aad
aam
mov
mov
cmp
lods
push
test
test
adc
mov
adc
and
or
jb
je
push
test
fs
cs
mov
sti
cmc
out
mov
jb
pop
cmpsl
sub
and
out
pushw
add
lock
xchg
jg
sti
mov
jp
ret
xchg
sub
ja
loope
dec
ljmp
ret
cmp
leave
xchg
pop
mov
cmc
push
hlt
jne
mov
bound
mov
pop
sbb
icebp
loopne
cmc
popa
jl
fstpt
sti
pop
mov
xchg
pop
in
aad
adcb
mov
mov
pushf
or
cmp
pop
daa
test
mov
sub
lret
call
loop
rorl
and
push
pop
mov
xchg
jb
scas
imul
mov
loopne
repnz
xor
test
rcrb
xor
test
clc
mov
sub
addr16
inc
loope
mov
adc
int
iret
push
out
jnp
jl
jnp
stos
pop
mov
xor
xor
push
mov
xor
xchg
filds
repnz
xor
jmp
daa
fcom
inc
xor
mov
movsl
jb
clc
out
stc
std
pop
adc
mov
das
pop
sbb
ds
pop
lds
insb
lcall
add
pusha
and
jle
xchg
sbb
outsb
lret
fisttps
push
lods
cmpsb
push
mov
les
out
arpl
xchg
out
repz
gs
gs
or
jnp
push
hlt
nop
les
sbb
mov
and
testb
mov
test
fstpl
mov
ret
int3
jp
fnstsw
je
cmpsb
ret
in
decl
sub
fildll
dec
pop
outsb
mov
cwtl
sub
aam
xor
push
or
mov
cmp
filds
mov
sub
pop
jnp
popa
mov
pop
xor
shrb
cwtl
push
movsl
dec
pop
push
rorb
mov
loopne
push
mov
ljmp
jb
jg
xchg
xor
sahf
imul
aam
push
pop
xchg
cwtl
xor
divl
sbb
push
pop
push
aas
in
jmp
mov
pop
mov
out
xor
or
sbb
mov
imul
clc
ja
cmp
mov
xchg
push
es
push
loope
jmp
xor
imul
out
clc
popf
push
cmc
loope
int
sub
enter
sub
hlt
popa
addr16
movb
cmp
pop
leave
cmc
mov
mov
push
inc
inc
mov
jp
jle
inc
es
inc
filds
mov
pop
mov
addr16
or
shrb
mov
rorb
jp
push
fdivs
fwait
push
inc
jbe
mov
pusha
inc
out
mov
push
data16
and
cmpsl
fstl
outsb
xor
rcl
pop
mov
mov
push
inc
aaa
lcall
pop
insb
mov
dec
in
lcall
ljmp
cmp
aam
pop
lods
lahf
cmp
lock
xor
in
cltd
adc
jns
inc
leave
sbb
in
cmp
xchg
cs
jecxz
hlt
repz
popa
cmpsb
aas
or
and
sub
pop
pop
scas
sarl
mov
dec
and
mov
push
fstpl
in
out
xchg
dec
xor
test
or
scas
and
call
das
inc
push
sub
inc
mov
dec
inc
push
lea
mov
aad
rcl
jecxz
cmpsl
sbb
sbb
repnz
cmc
pop
aas
jmp
pop
xor
aad
frstor
shll
pand
mov
push
rcl
cli
lret
hlt
dec
xlat
stos
popf
fcomp
jg
xchg
icebp
add
xor
cmp
nop
les
mov
jmp
fs
dec
dec
jmp
add
pushf
mov
inc
enter
jne
or
jne
inc
outsl
and
in
flds
cmp
jp
and
dec
cmp
pop
adc
addb
sub
cltd
int3
push
sahf
sbbb
fstps
xor
cltd
int3
mov
das
dec
popf
push
sub
loopne
mull
jp
ljmp
mov
pop
in
imul
inc
add
jmp
xlat
out
ffreep
lea
or
scas
pop
and
lahf
inc
scas
outsb
dec
push
mov
movsl
movsl
inc
fs
pop
movsb
or
sbb
sbbl
xorl
or
sub
adc
pop
inc
dec
leave
jg
addl
fxch
int3
adc
mov
stos
js
test
pusha
inc
fbstp
cmp
out
cmp
stc
mov
ja
rcl
cs
and
sub
add
lret
mov
push
lods
aaa
dec
mov
int
stos
mov
cmpsb
sbb
popf
mov
jns
push
aad
in
push
decb
loop
xchg
inc
rcll
arpl
ljmp
fcmovne
sbb
inc
negb
cld
negl
fsubrp
insb
negb
pop
addr16
test
and
out
mov
imul
negb
ficoms
je
xchg
dec
fisttpl
dec
pop
push
xchg
cmp
mov
test
out
icebp
xorl
fdivrs
sbb
push
or
enter
mov
and
push
cltd
push
xchg
jg
mov
icebp
push
cmpsl
lahf
js
int
push
and
test
shrb
lcall
cmpsl
mov
clc
int
test
out
aas
cs
inc
jns
dec
insl
xchg
aas
cmp
es
arpl
xchg
mov
lods
aam
negl
mov
xlat
ffreep
sub
aaa
scas
bound
out
inc
imul
sub
cmp
xchg
inc
clc
arpl
dec
enter
or
push
add
fdiv
mov
sub
lahf
mov
adc
test
jle
mov
xlat
loop
pop
dec
je
sbb
dec
cli
sbb
xchg
xchg
in
pop
cmp
dec
aas
xchg
push
or
xor
andb
push
into
popf
jno
jl
lock
clc
cmpsl
lcall
mov
lcall
neg
int
ret
inc
xchg
push
pop
mov
test
cmp
dec
xor
and
pop
jle
fwait
imul
test
xchg
in
adc
mov
popa
sbb
notb
std
xchg
fsubrp
inc
add
xchg
sbb
dec
jmp
in
xchg
mov
mov
mov
or
push
sti
push
jmp
inc
ret
out
push
inc
cmp
outsb
pop
lea
and
scas
adc
lock
mov
sbb
outsb
xchg
xchg
leave
add
adc
cwtl
or
add
lcall
fsubrs
xchg
xchg
and
inc
pop
xor
subl
push
mov
repnz
mov
movsl
push
sbbb
sbb
xchg
pop
scas
popa
push
mov
jns
ret
add
sbb
movb
fcmovbe
dec
pop
popa
mov
mov
sbb
fisttpl
leave
cs
in
jno
negb
pusha
cmpb
in
frstor
dec
fwait
rorb
rcrb
lcall
mov
int3
pop
into
jle
sahf
dec
int
push
in
cli
sbb
and
pop
popf
popf
mov
adc
sub
push
pop
imul
ret
divb
int
push
scas
xchg
stos
jae
lea
lret
cmc
mov
adc
sub
popa
nop
testb
xlat
inc
jne
inc
call
ljmp
cltd
xor
pop
lret
xchg
mov
cli
ljmp
popl
adc
shrb
mov
xchg
fdivr
fstpl
fidivrl
jnp
rcr
pusha
cli
leave
jbe
popa
popa
mov
jo
stos
jb
pop
imul
dec
adc
pop
and
xchg
pop
pop
pop
bnd
dec
pusha
fists
push
push
mov
or
pop
add
jl
fdivr
je
or
jmp
dec
fdivs
xchg
sahf
push
loop
bound
jg
aaa
scas
sti
sbb
je
sbb
enter
adc
les
sbb
xor
movsb
cmp
scas
cmp
call
push
sub
lahf
aas
push
enter
mov
ficoms
imul
cmp
cmp
negb
push
jg
stos
jo
mov
pop
adc
arpl
push
sub
cmp
sbb
xchg
sbb
sbb
scas
sbbl
mov
mov
sbb
pop
je
data16
ja
bound
mov
orb
add
pop
ret
daa
add
rorb
lahf
inc
outsb
xchg
hlt
or
fwait
cmp
push
aad
lods
ss
mov
fdivrs
cmpb
inc
sbb
pop
xorl
dec
cli
xchg
xlat
scas
adc
jno,pn
out
mov
or
mov
subl
or
das
pop
jb
mov
pop
mov
dec
fistps
push
cmpsb
sarl
sbb
es
push
push
lret
mov
xchg
aaa
lret
inc
inc
fadds
mov
lcall
lahf
adc
or
js
idiv
mov
jmp
inc
push
mov
mov
mov
les
fnsave
clc
outsb
leave
push
lods
in
mov
jmp
jmp
mov
mov
sub
xchg
jecxz
fsts
mov
pop
ret
xchg
sar
cmp
sbb
xchg
mov
mov
sub
jg
jb
sub
repnz
inc
popa
out
cli
mov
dec
sbb
in
sub
sti
inc
cmpsl
insl
mov
pop
pop
mov
inc
lea
repz
or
pop
cs
insb
pop
shrl
push
adc
xor
jb
mov
iret
push
pop
stos
in
adcl
insb
into
sbb
or
mov
mov
lcall
cld
xchg
shlb
sbb
push
pop
mov
mov
nop
mov
rcl
push
xchg
jns
jmp
out
aas
push
je
les
jb
pop
into
adc
cltd
icebp
out
cmp
insl
cmp
ret
dec
filds
mov
mov
cwtl
push
sub
xchg
push
push
pop
dec
jns
pop
or
sahf
mov
incl
cmp
lea
nop
sbb
adc
xchg
sub
pop
pop
jnp
ss
jle
xor
ds
std
bound
outsb
xchg
shlb
cwtl
xchg
je
push
push
cmp
jno
dec
imul
inc
lret
cltd
lcall
mov
pop
pop
cmp
lcall
jno
pop
cltd
xor
int3
pop
pop
jb
enter
mov
jmp
pop
cld
outsb
xchg
cmc
jb
arpl
pand
das
ja
pushf
jmp
jle
jns
jge
stos
mov
dec
pop
aad
loopne
int
mov
sub
jb
sahf
popa
jle
repnz
cli
lahf
out
sti
push
push
sahf
into
loop
xlat
mov
or
in
icebp
push
mov
imulb
add
mov
scas
sbb
scas
xchg
jbe
vmwrite
lcall
sbb
sub
mov
push
pop
cmp
shrl
mov
loop
jne
loopne
fwait
sbb
adc
cltd
imul
js
push
adc
out
stos
mov
xchg
cmp
fwait
bound
mov
and
xchg
popa
in
pop
adc
movsl
outsl
dec
inc
push
sub
jo
or
jge
mov
std
movsb
pop
xchg
bound
cmc
lds
subb
sbb
clc
push
ss
pop
jl
and
jbe
mov
sbb
add
lock
sub
dec
mov
into
sub
sbb
outsb
insb
cmpsl
mov
adc
sub
call
pop
dec
push
adc
pop
add
jae
hlt
jae
outsb
mov
sahf
lret
call
out
fdivl
cli
jb
stos
les
jbe
jne
fdivrp
imul
jb
int
add
sahf
xchg
mov
jne
or
sahf
in
inc
or
sahf
cld
or
jmp
das
adc
mov
jp
jno
xchg
adc
jbe
lahf
adc
sahf
or
dec
mov
add
jnp
push
dec
xchg
loop
insb
pop
xor
dec
outsl
inc
pop
sbb
fisubrs
xor
inc
ret
mov
inc
or
fdivrl
push
dec
movsb
pop
fwait
mov
js
cmp
push
push
pop
fildll
adc
adc
mov
dec
out
xchg
ljmp
xchg
xlat
ret
jmp
fisubrs
outsl
mov
and
xchg
sub
inc
nop
pop
inc
and
sahf
jmp
out
aam
sbb
andl
popa
and
mov
dec
push
xchg
adc
mov
adc
mov
pop
jge
sub
inc
mov
repz
icebp
lock
jno
mov
pop
test
mov
pop
inc
adc
lock
mov
xchg
mov
idivl
cmp
sbb
mov
lea
xlat
scas
or
or
mov
idivl
pop
in
out
xchg
sahf
jns
pop
inc
pusha
stc
scas
pop
inc
or
mov
call
fwait
bound
lcall
adc
mov
dec
pusha
or
inc
xchg
les
mov
ljmp
mov
sbb
test
fildll
pushf
aad
outsb
in
jno
push
idivl
inc
dec
dec
scas
mov
xchg
mov
sbb
xchg
mov
in
push
and
or
mov
adc
andb
push
cld
ja
int3
pop
ljmp
or
push
cmp
sarb
adc
cmp
stc
push
test
loop
lods
pop
pop
out
or
add
dec
push
xor
insl
shrb
push
xor
int3
sahf
adc
mov
arpl
xchg
cvtps2pd
push
xchg
or
dec
movsb
cmpsl
lret
or
js
pushf
cmp
pop
sar
sub
adc
jle
push
scas
sub
xor
fadds
divl
xchg
pop
aas
push
lcall
push
push
and
jmp
inc
popa
xor
xchg
sti
enter
imul
loope
add
xchg
aas
dec
lds
xchg
outsb
jl
lret
xchg
cwtl
push
out
cmc
sarb
inc
mov
pusha
call
stc
in
enter
imul
lods
mov
dec
or
clc
dec
sbb
cmp
pop
stos
sbb
inc
adc
loop
loop
jle
pushf
mov
adc
lahf
out
mov
aam
pop
xchg
sbb
jg
clc
jp
xchg
inc
movsb
mov
loope
aad
jecxz
rorl
shll
cmpsl
jle
mov
mov
inc
scas
or
push
inc
test
int
xchg
sub
leave
pop
push
mov
mov
ret
dec
sbb
aas
lcall
mov
xor
push
push
adc
xor
mov
mov
inc
pop
test
jle
aam
clc
es
imul
fwait
dec
cmp
adc
inc
mov
ret
xchg
ljmp
loopne
and
hlt
lea
dec
jmp
ja
enter
sub
cwtl
pop
data16
repnz
sub
add
test
sbb
divb
out
pop
sbb
int3
add
xchg
fs
js
lock
jl
ljmp
mov
push
jmp
adc
adc
bound
enter
cmp
fwait
repnz
or
enter
jg
cmp
xor
mov
mov
fdivs
push
pop
lock
jle
and
sbb
jp
bound
inc
cmpsb
add
lds
and
rcrl
fists
mov
cmp
int3
pop
imul
fs
mov
push
aas
inc
sbbb
jo
dec
add
sub
test
testl
mov
jbe
or
ss
test
faddl
jns
rcr
repz
mov
imul
xchg
xchg
jmp
jl
dec
sub
aad
xor
fsave
rcll
adc
ss
sti
sub
cwtl
ja
sub
and
add
scas
imul
mov
cld
jnp
fsub
hlt
cld
mov
cli
push
push
jne
cmp
sub
rcrb
push
mov
mov
push
mov
jmp
cmp
ja
push
test
out
xor
dec
jl
jg
jo
enter
push
jb
notb
and
or
mov
daa
out
ljmp
xchg
iret
clc
ljmp
not
stos
test
xchg
dec
sbb
imul
xchg
ja
dec
pop
das
jge
xchg
cmc
das
es
andl
lret
mov
aaa
xchg
stc
sub
xlat
jbe
enter
mov
outsl
icebp
into
out
inc
cmp
lea
jb
sbb
popa
jl
push
rclb
push
movsb
mov
test
clc
add
add
dec
bound
cmpsb
and
pop
xchg
imul
and
adc
and
sti
or
out
dec
inc
cmp
lods
inc
add
pop
cltd
jo
test
clc
inc
xchg
mov
push
js
ret
out
xchg
push
xlat
es
sahf
fidivl
pusha
insb
iret
xchg
cli
sahf
iret
and
repnz
xchg
ds
jp
pop
scas
mov
outsl
ret
pop
mov
push
pop
imul
jb
rcl
mov
fidivl
scas
or
cld
hlt
pop
mov
mov
js
pusha
sti
pop
jne
outsb
jb
inc
outsl
pop
dec
sub
add
jae
cwtl
jno
lds
mov
dec
inc
xchg
cmp
arpl
and
push
cli
insb
mov
stc
insb
xor
push
sbb
mov
jmp
xor
pop
sub
xchg
mov
lods
imul
xchg
aas
or
cltd
test
fidivrs
jne
call
lret
or
mov
inc
loop
xchg
jp
pop
push
push
inc
outsb
in
cltd
movsl
fwait
lahf
cwtl
mov
add
pop
in
mov
or
sub
pop
xor
icebp
jp
fdivr
push
mov
adcb
pop
pop
push
lods
nop
out
inc
sbb
inc
repnz
pusha
xchg
mov
or
and
test
xchg
mov
loop
cmp
pop
into
mov
push
adc
sub
adc
test
dec
jno
loope
in
push
int
fmuls
mov
repnz
xchg
dec
mov
sub
sbb
outsb
add
mov
outsb
mov
sbbb
out
push
pusha
test
es
nop
inc
cmpsb
out
clc
sub
cmp
insl
jmp
push
bound
fmull
push
xchg
pop
sbb
ficoml
sbb
insl
clc
sub
adc
pop
orb
ja
sub
sarb
cs
dec
push
ss
mov
mov
test
xor
movsb
ret
sub
bound
or
dec
inc
lret
test
js
out
stos
push
test
pop
jmp
fwait
ljmp
xor
jg
imul
out
repnz
mov
jno
sbb
cld
sbb
xor
das
cmpsl
rcrb
fistl
rorl
inc
jle
popl
adc
add
sbb
or
push
jbe
mov
inc
loopne
jne
jb
mov
xor
add
pop
xchg
jno
push
xor
adc
mull
out
adc
sbb
fcoms
push
dec
ljmp
aas
mov
xchg
pop
ret
pop
jmp
mulb
int
pop
lea
jecxz
in
inc
rcll
sub
insb
loope
std
cli
pop
push
rclb
imul
sbb
dec
pushl
cmp
cs
sbb
fistl
addr16
cmp
dec
outsb
sub
enter
inc
push
xor
push
mov
mov
inc
pop
sbb
jb
push
arpl
xchg
push
xchg
mov
cmp
sahf
pop
push
cmp
dec
xor
add
ljmp
fildl
cmpsb
scas
push
stc
arpl
movsl
mov
push
lods
dec
dec
js
fbstp
iret
mov
mov
and
mov
cwtl
lods
gs
popf
ficomps
ret
adc
movsl
ss
cmc
icebp
cld
jnp
xchg
mov
sub
repz
and
add
inc
stc
sub
imul
cmpsl
sub
mov
push
mov
push
mov
cmc
repz
push
push
das
jecxz
add
cli
subb
push
or
push
pop
dec
and
inc
pop
mov
lds
or
lock
jmp
lahf
lock
jnp
lock
lock
pusha
sub
and
xor
pop
mov
push
popf
in
jle
cmp
mov
cmp
and
rcrb
rolb
aad
xor
mov
int3
lret
sarb
fsts
out
and
pop
xchg
mov
xchg
adc
push
add
sub
icebp
jmp
push
leave
adc
mov
addr16
repnz
mov
push
adcb
ret
jg
or
dec
hlt
sbb
mov
dec
mov
or
xchg
inc
mov
icebp
lds
sub
push
hlt
ljmp
popf
movsb
mov
cwtl
paddq
sub
jmp
sahf
xor
bound
add
jg
shll
jae
mov
xchg
or
inc
stos
mov
je
sub
iret
sbbl
stos
in
nop
scas
inc
sub
lods
sbb
mov
pop
shll
aas
jbe
movsl
nop
lock
cmp
inc
cmp
dec
pop
pusha
pop
mov
xor
mov
or
lods
jge
push
mov
mov
pop
jbe
adc
shll
add
in
jo
add
inc
inc
imul
xchg
lret
orl
sub
les
push
jae
subb
jnp
pushf
cwtl
jmp
mov
inc
fcomps
cmc
das
sbb
add
int3
adcl
pop
mov
sbb
or
cwtl
fisubrl
test
pop
fistpll
add
jae
jnp
loope
lods
rcll
jb
into
add
ret
fnstenv
fdivs
add
push
test
fsub
mov
dec
adc
cmpl
add
in
ds
pop
sti
jp
add
push
stc
and
jg
add
cmc
xchg
insl
std
incl
inc
cmpb
inc
aam
or
mov
mov
pop
pop
xchg
xor
ja
adc
dec
inc
xor
cmp
inc
push
or
xor
bound
xor
addb
sub
and
cmp
out
pop
ljmp
fwait
out
movsb
xchg
aaa
sbb
test
lahf
xchg
sbb
dec
in
or
out
scas
mov
or
mov
add
and
mov
ja
mov
std
popa
cltd
push
sub
push
jge
sbb
and
or
jp
rsqrtps
into
out
xchg
cltd
jecxz
or
ja
pop
outsb
flds
mov
sub
xlat
jnp
and
sahf
fstl
jno
xlat
or
jne
and
jbe
dec
fwait
pushf
mov
lods
xchg
scas
je
pop
ret
xlat
inc
xor
jb
or
sbb
repnz
sub
inc
mov
mov
test
or
mov
imul
pushf
sbb
inc
and
add
fsubl
pop
das
dec
pop
pop
mov
sub
pop
aad
xor
movsb
add
sub
lea
dec
jg
imul
aas
push
fsubr
pop
cmpsl
fwait
or
jg
test
mov
jo
pop
cmpsl
xlat
sbb
and
xchg
jp
xchg
mov
and
inc
pop
cmp
cld
mov
cmp
inc
mov
cmp
fdivs
push
xchg
mov
scas
inc
or
lods
pop
adc
jmp
out
sub
inc
iret
lahf
repnz
les
xor
mov
ret
lds
add
shrl
test
xchg
sahf
cwtl
inc
xchg
push
sbb
rorl
sbb
dec
out
jmp
add
iret
push
xchg
dec
mov
push
jne
and
push
push
dec
into
aad
divl
rcrb
and
adc
outsb
icebp
ss
add
mov
jb
cmpb
sub
xor
mov
add
jmp
ja
inc
jp
ja
ds
mov
xchg
xchg
repnz
dec
out
cmp
stos
roll
scas
sbb
call
adc
inc
lcall
push
js
mov
lahf
jno
popf
sub
test
xchg
jg
dec
std
ficoms
lret
add
sahf
dec
aaa
pushw
lods
bswap
stos
mov
lahf
pop
bnd
jl
sub
dec
dec
aam
and
jo
aam
jno
les
out
lods
sub
jns
push
mov
repnz
repz
or
daa
fcoms
fucom
scas
mov
push
pop
in
jne
mov
xchg
ret
add
mulb
ss
fstpt
xor
lods
ds
inc
stos
xor
sbb
stos
xchg
adc
mov
sahf
jae
add
push
push
jae
stos
jecxz
push
inc
xor
sbb
jle
mov
aad
sbb
shl
shll
mov
dec
ss
pop
jb
rol
movsl
pop
xchg
dec
inc
jg
jne
std
mov
les
mov
outsb
popa
mov
repz
sub
mov
mov
mov
incb
pop
sbbb
pop
mov
insb
xchg
and
xchg
dec
outsl
sub
into
push
dec
bound
dec
cld
push
inc
adc
sarb
mov
xchg
test
negl
mov
outsl
pop
sbb
das
adcb
je
sbb
jae
push
je
inc
xchg
add
and
dec
add
jge
xor
dec
dec
lock
cs
es
pop
cli
mov
sub
cmp
or
mov
imul
lcall
mov
cmp
test
xchg
gs
jg
movsl
inc
call
adc
cmp
jne
mov
add
push
jae
xchg
push
dec
inc
loope
cmp
push
out
xor
xlat
les
jnp
pop
jns
xchg
inc
test
or
loope
inc
xabort
ja
jecxz
dec
std
ficomps
sti
out
cmp
jae
nop
mov
and
clc
dec
mov
dec
inc
cld
loope
cmpsb
imul
popf
mov
xor
aas
inc
popa
aaa
adc
push
mov
mov
adc
popf
mov
cmp
xchg
dec
or
rclb
and
pop
std
push
jo
in
mov
lahf
loop
xchg
cmp
pop
mov
mul
in
rcr
add
mov
mov
enter
cmpsb
jo
sbb
pop
loopne
mov
xor
pop
jns
fwait
pop
xchg
inc
inc
inc
push
sbb
dec
and
or
pop
mov
test
insl
pop
shr
xchg
stc
jnp
lcall
cmc
sbb
adc
aas
push
sub
stos
out
jle
xor
sbb
inc
lret
in
xchg
fcomip
scas
inc
mov
rorl
jae
mov
pop
cltd
imul
outsb
fwait
test
sub
out
rclb
dec
repz
push
and
lcall
add
mov
nop
ret
sbb
push
xchg
arpl
stos
cli
test
cmp
dec
decb
int
cmp
clc
test
push
outsb
and
push
cmpb
jle
mov
add
call
mov
jno
stc
fcoml
loopne
dec
mov
add
ss
imul
jp
dec
sub
jne
xor
stc
fs
outsb
or
cwtl
lcall
jecxz
enter
adc
sbb
outsb
ds
leave
fwait
pusha
push
mov
mov
mov
call
inc
shll
scas
shrb
mov
test
pop
pushw
sub
arpl
out
cmp
test
push
scas
fwait
pop
pop
cmpsb
outsl
or
and
gs
cmp
add
mov
iret
aad
jbe
addb
rol
mov
mov
frstor
scas
sti
dec
push
jne
add
out
mov
scas
adc
hlt
data16
stos
dec
cmp
or
pop
add
mov
lret
jl
cmpsb
adc
dec
int3
lret
inc
cmp
jnp
test
cmp
inc
test
jo
aad
push
popa
mov
mov
mov
les
or
dec
jne
inc
push
lods
ror
or
xchg
push
lods
adc
cmpb
sbbb
push
leave
push
push
lea
sbb
sbb
jp
ss
jnp
stc
test
pop
pusha
xchg
leave
enter
jle
pop
sbb
lods
or
adc
dec
int
repnz
div
pop
or
push
arpl
mulb
or
dec
rolb
mov
mov
outsl
dec
iret
es
mov
sbb
or
xor
or
cld
push
pop
shrb
fwait
ja
or
jp
ljmp
aaa
enter
cmpsl
pop
aam
adc
aad
mov
push
mov
and
cmp
xchg
mov
sub
addr16
xor
imul
jbe
jb
cmp
sbb
adc
xchg
test
test
pop
push
pop
sub
pusha
gs
add
dec
jmp
xor
cwtl
insb
xchg
scas
xor
pop
repz
mov
add
hlt
aad
cmpsl
test
pop
pop
mov
sti
mov
cmpsl
mov
push
stos
pop
fimull
jo
arpl
loop
sub
fs
mov
dec
or
pop
adc
or
stos
scas
loopne
xor
dec
cs
lds
pop
pop
mov
mov
add
push
adc
and
xorb
adc
and
push
mov
gs
rol
mov
sbb
cltd
jns
movsl
pop
xor
jae
xor
ja
jne
and
jnp
cwtl
loopne
jge
push
xchg
mov
pop
loopne
adc
fsubr
mov
loopne
dec
xor
cmpsb
cmpsl
stos
addr16
imulb
lret
pop
outsb
ror
pop
mov
aas
outsb
sbb
push
jmp
push
out
mov
aam
insl
scas
xchg
xor
lcall
pop
lahf
loop
inc
and
cmp
push
jae
add
sbb
ljmp
pop
or
xor
xor
xor
jge
mov
nop
out
pop
jno
dec
xor
and
or
leave
rorb
mov
xchg
pop
stos
jne
loopne
and
movsb
xchg
lret
outsl
mov
les
add
lret
sbb
mov
in
fs
cli
pop
adc
shll
push
lcall
int3
call
lret
pop
adc
pop
fisubs
subl
add
gs
fldenv
aam
call
bound
lcall
and
jae
fcmovnb
adc
popa
call
add
out
xchg
mov
mov
inc
xchg
cmp
jnp
mov
inc
in
jmp
mov
aam
scas
nop
add
dec
jg
mov
pop
sub
jmp
and
cwtl
push
pop
xchg
sbb
mov
popf
pop
mov
jle,pt
dec
cmp
loopne
sbb
add
inc
pop
push
mov
push
jne
push
inc
ds
push
ret
mov
mov
xlat
rcll
dec
or
push
fidivl
lock
ss
ds
xorl
pusha
mov
xchg
dec
inc
dec
dec
inc
or
hlt
xchg
jnp
inc
dec
bound
jg
mulb
push
loopne
and
jo
jo
adc
cwtl
loop
xchg
mov
push
out
out
push
or
inc
jmp
pop
sub
pop
adc
cmp
pop
xor
lahf
lcall
fildll
add
lcall
pop
fldt
out
xor
pop
pop
daa
pop
mov
cmpsb
mov
je
push
movsl
adc
jnp
out
icebp
loopne
fimull
xor
mov
test
fbld
movsl
imul
lahf
cmp
mov
sub
scas
daa
shr
mov
outsb
push
cmp
push
int
mov
jecxz
inc
testl
or
add
cmp
out
ss
popf
mov
scas
out
call
addr16
jns
lret
dec
jl
xor
inc
daa
dec
jb
arpl
testl
je
lea
idiv
push
movsl
lahf
xchg
jg
add
or
out
xorb
mov
xchg
or
push
test
imul
mov
mov
aam
mov
adc
ja
pop
lcall
in
mov
js
jp
inc
xor
pop
sbbb
mov
call
add
cmpl
xor
mov
fs
out
mulb
test
gs
xlat
sbb
xchg
adc
inc
mov
xlat
lods
out
jo
lock
ja
xor
add
pop
inc
ret
jmp
fiadds
mov
inc
and
cs
xchg
mov
jbe
push
add
cmovb
outsl
popf
lds
sub
addl
push
cmp
call
cmp
pop
ror
push
pop
popa
fsubp
xchg
shll
ja
and
sub
leave
pop
or
loope
pop
xchg
std
xor
cmpsl
jo
inc
xchg
push
add
cmp
mov
xchg
jns
add
or
jb
dec
jge
je
mov
setp
mov
mov
jle
lods
fimull
dec
insl
jbe
test
mov
and
shlb
push
mov
pop
out
ljmp
mov
jbe
jp
cwtl
cmp
ret
push
dec
and
mov
sub
push
dec
fs
imul
adc
repnz
xor
mov
in
mov
xchg
sahf
in
mov
dec
jmp
aad
mov
ret
xchg
jle
cmp
mov
mov
and
adc
inc
xchg
stc
inc
in
fs
and
hlt
insl
cwtl
sbb
cmpsl
jnp
mov
cmp
mov
lods
nop
popa
nop
rclb
fcompl
xchg
cmp
push
ja
and
mov
fmull
sub
xor
orb
jle
outsb
inc
popf
cmp
jle
xchg
pushf
stc
enter
inc
rcr
ljmp
bound
rorb
and
mov
mov
mov
fs
js
mov
sbb
loop
jl
push
add
sub
sahf
push
adc
xor
xchg
adc
lock
nop
jmp
ljmp
adcb
pop
cmp
push
adc
shll
inc
and
xchg
push
popa
cltd
iret
or
loop
mov
mov
pop
mov
or
inc
test
popa
jp
dec
inc
pop
adc
lcall
pop
divb
push
test
in
adc
xchg
pop
and
sbbb
fwait
mov
mov
xor
jb
add
icebp
insl
decl
push
jle
mov
rcl
aam
orl
push
hlt
mov
lcall
loopne
mov
lret
jmp
xorl
dec
mov
lds
ljmp
sti
mov
cmp
mov
mov
orl
add
cmpsl
arpl
jl
lods
lods
sub
xchg
lods
rorl
xor
ret
dec
sbb
dec
rorl
and
notl
and
clc
sub
inc
xor
and
dec
jl
xor
push
bound
dec
push
in
xchg
cmpsb
sahf
and
scas
int
pop
cmp
sbb
lret
push
cli
ss
and
sub
roll
es
iret
mov
sbb
xchg
inc
sbb
sub
and
cli
and
jo
push
pop
jle
or
mov
xlat
or
pop
push
jnp
repnz
xor
and
rcl
sub
nop
scas
jno
sub
incb
fisubrs
add
mov
hlt
stos
pop
xchg
jns
mov
pop
das
push
add
pop
mov
cmpsb
les
cmpl
scas
cmp
enter
shll
cli
jne
sub
cmovg
les
sar
inc
daa
das
notb
orb
cmp
dec
das
stos
inc
cmpsb
loopne
js
notb
push
fucomp
mov
dec
repz
jae
ljmp
sub
cmp
mov
sub
and
sub
or
dec
enter
clc
lods
dec
push
mov
daa
cwtl
dec
outsb
stos
jnp
ljmp
std
inc
test
adc
into
mov
bound
andl
mov
cltd
out
testl
enter
out
dec
lret
push
shlb
pop
xor
sub
jp
pusha
dec
enter
std
je
nop
mov
imul
adc
in
test
pop
movsb
mov
inc
aad
loop
idivb
lahf
mov
nop
mov
xorb
adc
data16
xlat
sbb
dec
mov
pop
adcb
xor
sbb
imul
inc
shr
dec
dec
sti
mov
push
aaa
cli
adc
fmul
mov
xor
roll
dec
gs
push
mov
outsb
mul
mov
inc
lcall
cmpsb
cwtl
mov
dec
dec
pop
push
jbe
xor
jmp
repnz
sbb
insb
and
repz
xor
push
std
xor
out
test
lcall
std
push
clc
shl
ret
scas
movaps
and
aaa
jns
lcall
xchg
jbe
enter
sub
fisubrl
sub
cmp
mov
fwait
out
mov
add
repnz
and
clc
mov
rol
arpl
inc
sti
mov
sub
test
xlat
bound
js
inc
aas
andb
mov
mov
fistps
sub
rcr
nop
and
mov
sbb
fdivs
fbld
loope
push
sbb
cmp
divl
std
fiaddl
and
cwtl
or
fldcw
in
dec
pop
and
mov
xor
mov
sub
jb
insb
lods
pop
ficompl
gs
aad
rcl
push
aam
xchg
jg
or
dec
mov
fs
sub
andb
cmp
and
in
or
mov
lcall
rcll
outsl
adc
add
ret
sbb
adc
adcl
aad
push
add
mov
shlb
xchg
setno
push
and
test
outsb
fsts
adc
dec
int3
inc
mov
xor
xor
inc
sub
mov
das
mov
aam
add
or
int3
pop
cli
push
out
test
pop
test
fmulp
push
xchg
adc
imul
cmp
cmp
ret
inc
cmp
imul
jge
dec
divl
jb
int3
nop
orl
or
inc
insl
enter
rclb
mov
pop
jne
jne
pop
push
or
in
loope
sahf
push
sub
fwait
sbb
aaa
outsb
pushf
xchg
and
fwait
push
mov
int3
sbb
inc
popa
pop
mov
mov
in
repz
push
lods
jno
scas
cli
jo
lret
adc
movsb
into
pop
push
repnz
or
inc
add
std
xlat
push
inc
lret
pop
jne
stc
add
adc
test
mov
sbb
sub
lods
cwtl
xchg
clc
pop
xchg
ljmp
add
dec
xor
bound
lods
jb
arpl
and
loope
enter
clc
pmaxsw
lock
mov
popa
xor
sub
dec
xchg
push
mov
mov
pop
xor
cld
mov
ror
push
mov
push
jbe
rcrl
popf
lea
or
and
popa
aas
fldt
aas
aam
jo
stos
push
add
xor
cld
leave
jae
mov
xchg
inc
subb
fs
sbb
mov
inc
test
sub
pop
mov
mov
lods
outsl
jne
xchg
dec
cs
push
xchg
push
movsl
pusha
and
out
in
jb
push
or
mov
and
and
aad
mov
or
pop
inc
fwait
arpl
mov
inc
sbb
xchg
ja
xor
mov
fnstsw
imul
xor
pop
add
jmp
or
pop
inc
fimuls
outsb
imul
popl
push
jecxz
arpl
xlat
and
std
fisubrl
push
cli
dec
lret
mov
sbb
shl
mov
out
mov
aam
xor
in
mov
ljmp
jg
data16
lods
jp
ja
jae
stos
and
inc
mov
cmpsb
dec
lret
lods
push
call
test
andb
sub
lods
es
lret
je
pop
fsub
xor
mov
stos
in
cbtw
push
pop
ficompl
mov
in
rcll
push
jno
sahf
loopne
fwait
push
adc
mov
push
popa
xchg
fistl
adc
adc
adc
push
cmp
call
bound
dec
pushf
push
pusha
inc
out
jp
inc
xchg
imul
xor
lock
mov
jae
arpl
and
adc
push
icebp
sub
rcll
mov
jae
aam
mov
push
insl
data16
fmulp
and
adc
mov
aas
adc
or
and
pop
rcll
xchg
add
cli
dec
es
jb
sub
inc
orb
sbb
lcall
into
ljmp
cmpsl
mov
push
inc
inc
imul
mov
sbb
dec
leave
sbb
popa
test
pop
cmp
mov
fwait
push
mov
mov
jmp
sarl
faddp
addr16
cs
test
outsb
jmp
jo
js
mov
sub
cmp
or
dec
fdivrl
sti
xchg
inc
into
xor
mov
gs
loop
enter
mov
cmpsl
sub
sbb
aas
jg
inc
rcrb
out
lea
xchg
call
ret
add
push
sbbb
rorb
or
out
push
mov
mov
leave
fidivrl
dec
mov
fistps
inc
push
and
ljmp
loop
dec
xlat
mov
lcall
imul
push
dec
js
add
mov
dec
iret
pop
sub
xor
cli
ds
push
in
out
adc
xor
jo
je
movsb
test
dec
test
loope
mov
iret
test
inc
xchg
pop
push
mov
cmp
cmpsl
je
shrb
icebp
scas
adc
pop
mov
rolb
inc
sbb
adc
pop
and
xchg
sbb
imul
fbld
xchg
or
pop
rol
mov
xor
jae
mov
cli
fistpl
mov
or
inc
mov
pop
shlb
int
push
sub
iret
jg
and
sti
popf
push
mov
lcall
xchg
adc
test
or
push
xor
test
xchg
shl
and
bound
pop
sub
dec
repz
adc
cmc
ret
sahf
sbb
fwait
adc
mov
int
popa
into
mov
xlat
cmp
push
insl
enter
cltd
push
push
iret
stc
pop
xchg
mov
jae
dec
xchg
ucomiss
xor
push
call
cmp
jg
cmp
loope
mov
jp
addb
ds
sbb
dec
push
sbb
adc
mov
pop
lock
mov
repz
in
leave
idivl
icebp
or
xchg
inc
cmc
jno
add
xlat
dec
sbb
dec
mov
inc
dec
mov
stc
cmpsl
lcall
inc
mov
imul
push
insl
add
iret
dec
mov
repnz
in
push
negl
adc
orl
imul
mov
insb
cmp
dec
mov
push
xor
sub
jbe
adc
push
orl
das
jae
fs
sarb
jmp
push
mov
lahf
ret
push
push
fcmove
dec
lret
or
jb
mov
dec
in
ljmp
push
cli
leave
faddl
cmp
pand
mov
push
inc
jge
xor
lock
call
xchg
call
mov
push
mov
rcrb
push
jg
pop
rolb
cli
jno
xchg
into
rolb
xor
pop
and
nop
xorb
notl
test
mov
popa
mov
scas
ss
fisubs
and
out
pusha
and
dec
xchg
pop
xorb
ss
out
aaa
xor
mov
sbb
rclb
out
scas
cmpsl
sahf
adc
dec
aaa
dec
sub
and
sub
test
aaa
lcall
subb
add
xchg
sbb
movsl
cmp
pop
cmp
arpl
lret
adc
fstl
or
cmpsb
into
dec
dec
aam
push
lods
jo
add
enter
loop
aad
insb
mov
mov
mov
jmp
dec
xchg
movb
mov
cmp
lods
and
lcall
fidivs
mov
xchg
lahf
push
cli
push
in
divb
inc
mov
std
push
mov
xchg
daa
test
mov
dec
jbe
xlat
add
push
sbb
popa
hlt
and
pop
jae
dec
inc
lcall
clc
push
push
fldl
pushf
rcrl
enter
mov
movsl
call
enter
jne
inc
js
adc
push
into
push
push
add
inc
in
sbb
out
imul
pushf
mov
mov
repz
shr
rolb
aam
cwtl
pop
fcmovne
dec
push
push
dec
inc
dec
dec
dec
shll
push
push
lcall
mov
xchg
icebp
push
xchg
addr16
repnz
xor
daa
stos
mov
pop
stos
loopne
loop
in
outsb
movsl
sbbl
int
push
push
xchg
or
mov
lea
inc
addr16
xchg
sub
aas
jb
push
push
pop
xchg
sub
cld
movsl
inc
insl
es
call
mov
add
add
or
pop
push
add
ficoms
cli
pop
outsb
push
stos
dec
pop
or
sbbl
pop
mov
popa
fisubs
popf
cmc
xchg
pop
popf
insl
pop
ljmp
ljmp
dec
loopne
jb
jae
test
repz
xchg
mov
pop
and
pop
pop
or
adc
mov
jno
inc
mov
inc
lock
dec
outsb
cmp
js
pop
inc
sub
push
mov
pop
imulb
dec
loop
and
bound
push
mov
rcr
mov
ds
push
lret
repnz
pop
jle
push
fnstsw
add
inc
pop
out
cmp
jl
ja
sarl
in
pushf
push
aaa
fs
ja
mov
dec
sub
mov
pop
aaa
int3
xor
pop
aad
push
ss
mov
sahf
enter
push
fbld
pop
and
cld
cli
scas
xchg
add
frstor
sub
and
aaa
jo
inc
add
adc
sub
arpl
addb
sub
xchg
lods
mov
das
fdivl
mov
pusha
dec
aaa
inc
push
sub
fsubs
insb
loop
pushf
mov
xchg
out
mov
popf
mov
test
movsb
mov
mov
dec
push
mov
inc
inc
jo
mov
incb
lcall
lahf
mov
add
out
sahf
push
cwtl
jmp
aaa
leave
ret
xchg
pop
iret
and
cwtl
imul
std
ds
jge
add
sub
lret
dec
pop
inc
addr16
sbb
loopne
testl
fsubrs
cld
push
lret
lea
xor
inc
push
add
adc
jno
lods
pop
fbld
jno
and
hlt
loopne
cmp
dec
pop
ret
imul
andl
ljmp
xchg
pop
aas
pop
das
push
imul
loopne
xor
inc
int
adc
enter
xchg
or
and
or
out
data16
mov
rcl
test
inc
outsl
cmp
adc
lock
cld
sub
sub
pop
mov
inc
push
jmp
aaa
les
inc
cmp
xor
add
fwait
es
mov
push
test
test
jb
xor
pop
sub
scas
out
cmp
xor
data16
mov
xchg
addb
push
int
sub
in
xchg
iret
sub
addr16
imul
ret
aaa
cli
xchg
push
enter
mov
popa
mov
cvtsd2ss
test
arpl
aas
out
std
sub
jl
jnp
ret
shr
fidivrs
sub
and
enter
sbb
jge
lret
jmp
mov
gs
mov
inc
adc
jle
mov
jecxz
ljmp
mov
xchg
pop
cmp
jno
mov
add
adc
clc
shlb
xchg
stos
mov
add
jns
xchg
outsl
cmp
es
test
pop
cmp
stos
imul
aas
inc
mov
enter
cmp
xchg
adc
ja
scas
jno
inc
mov
daa
mov
dec
pop
cmp
xchg
mov
mov
aas
adc
sbb
jmp
pop
dec
fisttpl
into
jno
cmp
push
ficoms
mov
inc
mov
push
dec
aaa
call
dec
and
repnz
mov
addr16
pop
mov
adc
jl
incl
repz
jbe
nop
dec
iret
rol
fcoms
sub
jge
out
push
lds
fld
popa
push
and
jno
lcall
fwait
imulb
xchg
int
add
jge
and
and
sti
jp
fiadds
inc
mov
repnz
ret
mov
cwtl
mov
dec
stos
fwait
mov
xor
icebp
add
pop
aad
xchg
jmp
andb
xor
fisubs
jnp
notb
aad
test
push
pop
mov
imul
enter
repz
ret
mov
clc
add
pop
add
dec
or
sbb
cmpsl
mov
pusha
cmovns
cli
pop
inc
cld
dec
mov
fs
ja
arpl
lcall
or
and
out
incb
cmp
dec
aaa
icebp
mov
jmp
xchg
xor
mov
mov
mov
test
or
dec
sub
and
mov
out
add
xchg
dec
inc
fnstsw
dec
fdivrp
pop
orb
jno
mov
xchg
enter
dec
nop
out
imul
push
insl
cmp
ja
jl
add
push
icebp
ljmp
pop
cwtl
sahf
or
mov
dec
insl
sbb
lahf
movsb
outsb
and
mov
and
add
popa
pop
dec
jb
adc
sub
xchg
mov
daa
push
leave
bnd
pop
pop
insl
popa
fwait
mov
mov
add
jb
and
into
ret
cld
into
pop
mov
pop
cwtl
add
les
cmp
pop
pop
xor
pop
mov
mov
mov
pusha
lock
mov
fisubs
fistps
or
push
insb
scas
push
iret
jmp
out
push
cmp
xor
popf
push
loope
lock
push
jo
pop
fcomps
jp
enter
stos
aaa
pop
sub
push
lods
test
and
clc
xchg
test
popa
jge
enter
cmp
mov
and
add
adc
iret
out
jns
jge
cmpsb
pop
ja
push
and
enter
lret
add
inc
xlat
ret
stc
add
inc
test
stc
cli
jg
ret
lock
jnp
jb
ret
fimuls
iret
mov
mov
inc
cmp
push
sahf
mov
pop
imul
ret
or
jmp
cmpsl
bound
aas
or
inc
aas
xor
xchg
mov
mov
inc
stos
dec
inc
ret
xor
inc
xor
lea
push
push
out
add
push
clc
pop
sub
pop
cmp
or
adc
mov
dec
xchg
mov
cmp
dec
nop
inc
test
jmp
fmuls
and
out
sbb
pop
or
pop
sbbb
sbb
jne
inc
xchg
push
sub
out
or
jno
sub
add
mov
outsl
sub
iret
leave
pop
cs
mov
test
orb
out
xor
test
orb
or
sbb
mov
xchg
call
aas
dec
leave
sub
cmp
mov
mov
mov
sub
jae
adc
testb
pop
hlt
push
adc
and
pop
adc
sub
cwtl
cmp
movsb
stos
push
xchg
out
das
out
or
mov
sbb
mov
pop
xor
sub
fistpl
in
dec
pop
cmp
subb
repz
les
out
dec
jecxz
sbb
sbb
leave
mov
dec
push
jmp
imul
push
outsb
repnz
inc
and
scas
jmp
pop
outsl
ljmp
mov
lahf
rcrl
mov
push
dec
aad
leave
jne
xchg
andb
jge
punpckhwd
pop
sahf
fs
jecxz
or
push
xlat
cmp
push
pop
lea
xchg
cmp
daa
dec
mov
or
jp
mov
jl
rolb
cmpsb
cmp
jmp
stc
mov
icebp
add
popa
push
cmp
inc
ror
pop
movsb
mov
cmp
jbe
push
inc
mov
pushf
insl
shll
pusha
dec
loope
add
outsb
adc
out
ret
scas
hlt
cltd
push
in
jl
sahf
jecxz
jg
imul
movsb
jl
or
mov
and
cmp
gs
dec
adc
and
push
pop
jecxz
les
xchg
out
pusha
xchg
sbb
mov
or
push
push
push
dec
hlt
subl
pushf
or
jle
sbb
mov
call
add
jae
inc
xchg
jmp
mov
mov
repz
add
loopne
outsb
xor
mov
jmp
enter
pusha
mov
and
rcr
cmc
jge
sti
stos
std
push
popf
aaa
out
jb
loope
mov
testb
xor
push
mov
xor
push
ret
sbbl
shll
pop
pop
push
out
mov
stos
inc
xchg
movsb
test
push
mov
out
jne
jecxz
bound
cmp
add
sbb
cltd
pop
pop
mov
into
inc
fsts
dec
cmpsb
mov
fsubrl
int
in
movsl
xor
xchg
adc
pop
inc
dec
push
add
push
xor
inc
loopne
mov
movsb
lock
cld
xor
ljmp
push
push
iret
pushf
ror
xchg
in
and
sbb
cmc
push
xchg
cmpsl
add
push
push
push
inc
jle
xchg
test
mov
pop
xchg
xor
jmp
and
lea
imul
jmp
mov
adc
xchg
inc
enter
sbb
loopne
stc
lret
test
push
xchg
or
mov
pushf
ljmp
hlt
or
and
lock
int
jge
pop
push
int3
and
data16
xchg
shrb
ret
shlw
push
sbb
sbb
imul
mov
int
mov
mov
or
xor
jge
out
mov
arpl
dec
adc
jmp
scas
fldenv
ficomps
mov
flds
fwait
xor
xor
xchg
mov
dec
rcl
xor
sti
scas
dec
inc
cmpsb
inc
roll
js
cmpsb
into
xor
arpl
into
add
dec
lods
mov
pop
mov
add
xchg
test
scas
jb
push
cs
filds
repnz
out
mov
fucompp
push
jno
data16
lcall
clc
pop
push
dec
add
cltd
push
dec
fs
pop
xchg
imul
notl
push
pop
jbe
sub
fildll
jnp
add
mov
repnz
nop
dec
jge
jnp
dec
lret
stc
push
ja
push
dec
aas
pop
mov
add
add
xor
insb
dec
scas
testl
int3
sub
inc
dec
sahf
enter
insl
lea
daa
jae
in
ret
ret
lret
rcr
jmp
insb
dec
sub
sahf
pop
pop
jo
in
xor
shr
xor
mov
jmp
mov
stc
and
fcoml
mov
sbb
inc
movb
add
xchg
fidivrl
xchg
and
movl
iret
xchg
into
lret
xor
fisttpl
das
jb
add
mov
add
imulb
test
pop
lahf
dec
ja
mov
xchg
add
ss
out
pop
lods
insb
xchg
inc
sub
pop
sbb
ja
xor
stc
ret
cmp
mov
dec
pop
lahf
jbe
jl
mov
iret
fdivr
data16
aas
jg
adc
dec
fimuls
fsub
inc
inc
icebp
addr16
adc
adc
dec
leave
xor
loop
xor
mulb
pop
push
pusha
aam
and
inc
add
insb
jne,pn
mov
cmp
les
or
sbb
adcb
pop
add
pop
aaa
iret
push
add
pop
cmp
lcall
out
pushf
xchg
lods
fs
push
adc
sub
add
sub
pop
dec
jecxz
sub
adc
pop
lcall
test
imul
pop
daa
sub
jo
pop
push
je
sub
push
fisubl
mov
into
pop
enter
xor
xor
mov
fbld
lret
cli
js
mov
cmp
pop
pop
jecxz
mov
dec
jnp
nop
mov
fwait
popa
sti
inc
pop
add
jno
jns
inc
cmpsb
mov
sbb
mov
and
scas
imul
cs
jle
mov
insl
outsl
ds
or
out
pop
popa
dec
inc
out
dec
sub
fisubl
movsb
imul
fwait
xchg
jne
push
xor
leave
xor
fimuls
ljmp
clc
xchg
jnp
and
int
cmp
mov
pop
std
adc
js
lds
cmp
dec
hlt
js
andb
xchg
xor
cmp
rcr
inc
cmp
mov
and
cltd
dec
outsl
dec
filds
jae
mov
mov
jns
rorb
ss
ja
dec
mov
jge
pop
push
or
testl
xor
lock
inc
frstor
sub
mov
dec
int3
loop
xor
xchg
aam
push
or
aas
cld
es
xchg
cmp
inc
repz
aaa
dec
ja
imulb
xchg
pusha
mov
dec
jns
mov
adc
shl
ror
dec
lds
cltd
dec
insb
push
jle
int
jle
scas
and
fstpt
lcall
pop
rcll
test
pushl
sbb
adc
cmpsl
jne
pop
movsb
notl
repz
add
dec
iret
inc
xor
mov
dec
xlat
in
push
cmpl
ret
xor
adc
xor
call
rcrl
incl
dec
pop
or
jg
xchg
lods
jmp
scas
mov
push
fistpl
push
push
fwait
cli
test
ja
in
xor
int
push
cmp
xchg
mov
cmp
inc
cmp
dec
push
sub
into
cmove
scas
out
mov
mulb
in
or
std
imul
cli
daa
push
movsb
call
pop
int3
addr16
xchg
fwait
insl
pop
cmpsl
and
rorb
outsl
std
pop
lcall
or
cmp
or
pop
mov
stos
pop
xlat
pop
mov
adc
iret
data16
insb
sbb
insb
sbb
fisttpl
jbe
pop
cmp
xor
bound
popa
adc
pop
sbb
in
add
xchg
and
stos
ja
in
daa
hlt
sti
push
sahf
mov
cli
sub
outsb
cmp
aam
inc
cmpsl
push
cmpsb
jmp
or
ror
xor
mov
adcb
ret
mov
cmp
clc
pop
icebp
loopne
sbb
test
jp
mov
mov
scas
jne
xchg
and
scas
or
jl
mov
sub
test
fcomps
rcrb
or
std
and
rorb
hlt
and
repnz
call
cmp
mov
cmp
cs
out
inc
mov
xor
aam
test
mov
pop
inc
aas
leave
hlt
add
in
ret
mov
cmpsb
out
insb
stc
and
cli
dec
call
in
leave
push
mov
cltd
mov
popf
js
aas
pop
adc
int
out
adc
inc
push
mov
sbb
data16
loope
push
jns
data16
jg
loop
fidivrs
iret
and
popf
mov
xchg
jns
sbb
xorl
jl
push
cmpsb
cmp
cmpb
cmpsb
push
aas
push
push
in
rcll
mov
rcl
jge
lret
jg
aaa
pusha
push
cmc
mov
pop
jle
pop
cwtl
lret
sub
rcrb
dec
in
stos
int
sub
data16
mov
pop
push
mov
fsts
push
ljmp
pop
and
push
adc
pop
out
stos
int
inc
lods
cmp
aas
cmp
cs
sub
xor
pop
adc
loop
das
js
aam
push
fsubrp
inc
test
push
jg
lahf
das
hlt
push
jb
jg
push
imull
mov
mov
movlps
push
pop
popf
push
iret
cmp
test
dec
aas
sti
fs
jns
into
cmp
jmp
das
inc
mov
mov
push
lret
andl
push
cmpsl
adc
inc
jbe
and
xor
adc
or
neg
xchg
test
adc
sbb
xchg
push
fistpl
test
xabort
icebp
cmpsb
mov
fbld
inc
sub
hlt
aad
sbb
xlat
push
les
data16
idiv
scas
inc
inc
in
int3
or
push
dec
stc
or
jae
jno
or
lods
lcall
or
dec
imull
pop
enter
lret
inc
pop
inc
inc
xor
adc
jecxz
rcll
lods
lcall
push
into
lds
scas
cmp
adc
repnz
xor
sbb
pop
arpl
shll
std
pop
xor
or
dec
sub
add
shrb
cli
int
cmpl
inc
push
movsb
add
outsb
adc
inc
test
xor
decb
or
inc
jns
lds
or
mov
fsubr
push
into
mov
pusha
or
dec
push
xchg
push
jne
sarb
mov
enter
and
mov
aaa
fsubl
pusha
mov
imul
xor
call
imul
push
or
pushf
scas
sbbb
out
jle
mov
repz
cmpsl
mov
dec
scas
cmp
in
mov
std
dec
subb
shr
dec
xor
dec
xchg
push
and
sbb
xchg
je
jbe
enter
stos
cs
push
mov
aaa
pop
out
aas
pop
out
outsl
pop
sub
mul
leave
stos
lcall
xchg
adc
mov
xchg
push
bound
pop
aaa
cmp
aad
push
aad
jns
mov
test
sbb
cmpsl
sub
push
cltd
push
dec
and
out
pop
cmp
enter
mov
in
push
push
jmp
lds
push
mov
push
jge
idivl
rorl
sub
xor
into
jge
popf
mov
dec
shlb
sub
mov
mov
repnz
and
cld
xsha256
cmpsb
xchg
pop
data16
cmc
mov
dec
xchg
add
dec
and
fistpll
addr16
lret
pushf
out
rorl
jl
sti
jmp
test
cmpsl
or
lcall
mov
jl
or
pusha
mov
shl
cli
sbb
shll
das
xchg
insb
ss
xchg
loopne
and
adcb
and
data16
enter
and
rol
pusha
adc
sbb
lods
pop
xchg
nop
dec
test
jp
mov
or
rolb
aam
inc
dec
push
aaa
jle
out
les
dec
jno
rcrl
cmp
jle
pop
inc
je
nop
jns
cmpsl
mov
and
sbb
dec
fwait
jl
orl
xor
ljmp
mov
std
ret
mov
inc
into
inc
stc
das
in
lock
pushf
sahf
out
or
pop
in
cli
pop
cld
mov
add
fisubl
inc
ljmp
outsb
xlat
rcl
fwait
imul
dec
mov
xlat
cmp
pop
jmp
movsl
sbb
lock
inc
imul
test
push
aad
or
cld
add
sbb
mov
push
daa
cmpl
mov
sub
movsl
dec
mov
or
faddl
mov
outsl
stos
dec
shl
mov
inc
pop
inc
test
jg
lods
xchg
out
popa
xchg
jp
imul
push
lods
popa
ffree
jbe
add
nop
cwtl
add
add
xchg
push
lret
xor
xor
das
into
movsl
add
or
xchg
dec
mov
repz
or
pusha
push
mov
cmpsb
imul
scas
ret
sbb
stos
outsb
jbe
repnz
imul
or
aad
jo
pushf
xor
dec
mov
sarl
stos
push
data16
outsb
push
or
lods
or
movsl
xchg
fs
inc
icebp
fcom
divl
inc
add
lock
push
mov
das
mov
adc
push
xor
xchg
or
into
adc
xchg
aaa
cmp
mull
ret
xchg
in
std
mov
dec
bound
xor
pop
orl
inc
in
shlb
scas
push
lret
pop
cmp
pop
sbb
jb
aas
mov
xchg
add
push
push
rolb
cltd
repnz
clc
lods
push
jle
add
jne
pop
pop
insb
inc
in
push
push
push
xchg
scas
mov
stos
xchg
jne
jmp
clc
sbb
xchg
in
imul
pusha
pop
out
inc
mov
js
out
xor
jne
dec
mov
lret
stos
pusha
xor
sub
dec
call
ror
xchg
dec
dec
fstps
mov
into
push
or
scas
imul
enter
out
ds
mov
mov
dec
inc
flds
pop
inc
lock
inc
outsb
add
xchg
outsb
fwait
add
notl
dec
sbb
xor
xchg
sub
es
jl
inc
ret
and
andb
mov
jl
ficoms
popf
sub
dec
out
inc
in
sub
scas
addr16
popa
out
or
xlat
jmp
mov
mov
outsb
lock
xor
xor
mov
mov
or
push
sub
push
jae
insl
call
int3
dec
jnp
xorl
jmp
jae
iret
je
imul
hlt
inc
imul
mov
inc
lcall
jle
xchg
pushf
clc
leave
imul
fcoml
and
pop
jp
push
xchg
scas
or
aas
xchg
dec
pop
add
shrb
fwait
push
cwtl
test
mov
push
sarl
out
push
mov
mov
xor
mov
xlat
sarb
inc
fnstcw
xchg
and
push
insb
imul
and
lods
push
and
subb
jmp
int3
jmp
subb
mov
dec
addr16
cmp
test
std
xchg
and
cli
out
into
loopne
lods
gs
mov
or
pop
xor
inc
dec
jl
testl
mov
lahf
push
jp
imull
lea
into
in
mov
out
mov
jne
push
jbe
sbb
and
imul
popf
jle
sbb
cmp
xchg
lds
inc
stos
add
jns
in
int3
movsb
sub
mov
xlat
imull
popf
cmp
xchg
pusha
lods
or
aaa
mov
mov
push
in
out
fstps
mov
xorb
enter
inc
pop
inc
std
clc
add
mov
jnp
ljmp
imul
iret
movb
test
or
data16
out
lahf
xchg
dec
daa
decl
jg
cmp
mov
jbe
ret
rorl
je
and
cmp
pop
jo
enter
fimull
lcall
pop
adc
inc
pop
dec
xchg
not
cmc
bound
jecxz
movsb
mov
lods
pop
mov
roll
pop
cmc
rolb
lcall
xchg
mov
adc
pop
mov
jns
and
loope
leave
pop
mov
mov
add
dec
mov
cmp
jmp
mov
popf
mov
subb
aam
mov
adc
ljmp
sti
xchg
int3
pop
xchg
sbb
xchg
adc
adc
dec
push
negl
lahf
sarb
cltd
in
lcall
sub
mov
push
dec
das
arpl
data16
sti
dec
push
lds
mov
leave
scas
cmp
sbb
and
mov
adc
dec
rorl
movsl
jbe
cmp
es
mov
sbb
jae
add
arpl
rcll
int
push
jno
lcall
push
pop
pop
jb
cld
dec
inc
dec
dec
xchg
add
mov
xchg
push
mov
push
das
std
inc
cmp
xchg
mov
sub
pop
es
xor
jo
or
lods
daa
enter
insl
movsb
jb
adc
stos
sbb
sbb
and
dec
push
mov
lret
je
push
jl
stos
js
xor
jne
insb
adc
out
sbb
or
adc
pop
xor
push
rol
xor
rclb
pop
cltd
fbstp
mov
scas
push
xchg
and
shlb
cmpsl
sti
js
sbb
data16
sub
push
imul
sbb
adc
push
jle
mov
mov
shrl
push
mov
or
flds
out
orb
inc
aaa
jmp
lahf
mov
negb
mov
xlat
mov
out
cld
leave
jp
dec
mov
xor
inc
test
mov
sub
js
sarl
les
pop
pop
les
cmp
inc
dec
cmp
xor
nop
dec
in
pusha
std
jne
xor
jns
cmp
or
xor
mov
mov
int
xchg
movsb
shll
cmpsb
mov
dec
test
test
inc
lock
popa
sub
add
lcall
xor
stc
xchg
int
sub
and
dec
inc
addr16
stos
jge
outsl
inc
add
iret
orl
pop
lods
imul
idiv
dec
jne
xchg
cs
or
xchg
and
je
subb
js
xor
cmc
pushf
xchg
dec
ficoms
rorl
add
mov
sub
add
sbbb
sub
pop
orl
xchg
gs
jno
xchg
inc
xchg
cli
lret
aaa
das
dec
fisttpl
pop
sahf
shrl
inc
push
and
pushf
mov
push
insl
shlb
js
inc
sub
hlt
xchg
push
popa
out
test
cmp
or
cmp
dec
mov
xor
imul
ja
cmp
jmp
sbb
or
mov
add
fprem
and
pop
pop
cmpsb
inc
cmpsb
cmp
out
jnp
outsb
inc
call
add
cli
test
push
scas
cmp
or
aad
jns
adc
insb
push
cmp
dec
and
lods
leave
fadd
popf
fsts
xor
xlat
xor
popa
ret
jns
addr16
dec
mov
pop
cld
shlb
mov
cmp
sub
sti
xchg
divb
sti
mov
aaa
jmpw
out
cmp
sbb
jg
mov
xchg
scas
push
les
sbb
pop
mov
sub
icebp
scas
mov
push
add
jo
hlt
push
enter
jns
jno
adc
sbb
push
mov
sub
xor
adc
mov
xlat
xchg
test
or
inc
add
push
pop
adc
and
xchg
xchg
jb
cmp
sbb
jl
loope
xchg
fs
lret
mov
push
push
inc
push
pop
out
adc
adc
js
or
rorl
lret
nop
cs
xorl
xchg
push
xor
and
cs
xor
mov
cmpsb
aad
push
inc
inc
das
scas
jle
jo
out
fildl
or
imul
sub
addl
in
jno
sbb
or
outsb
sbb
movsb
mov
js
lock
or
inc
mov
out
jp
mov
scas
adc
mov
push
xor
pop
divb
rcr
dec
xchg
cmp
cli
xor
push
dec
sbb
movsw
push
movsl
push
les
sbb
xchg
pop
xor
or
jmp
pop
xchg
test
pop
scas
movsb
lcall
jmp
dec
ret
inc
popa
dec
daa
mov
cmpl
sub
cmpsl
das
cmp
pop
cmp
push
adc
push
xor
cmp
pop
testl
lods
ss
push
rol
push
xchg
iret
add
lcall
into
pop
sub
push
and
movsb
adc
pusha
lret
inc
pop
mov
xor
out
ljmp
popf
test
sti
cmp
mov
jno
cld
mov
mov
mov
aam
sbb
mov
mov
mov
pop
imul
mov
add
xor
xor
push
cmp
or
fldln2
dec
mov
adc
mov
add
js
nop
dec
pop
addl
push
pop
jno
cwtl
roll
mov
push
mov
push
data16
fidivrl
cwtl
mov
lret
push
aas
pop
sub
addb
xlat
mov
test
push
loope
jbe
cs
lret
jl
insb
pop
push
xchg
dec
mov
int3
mov
movsl
dec
mov
out
dec
dec
mov
sub
insl
jo
mov
and
adc
mov
aad
cmp
inc
popa
mov
cltd
std
rorl
in
cltd
jge
ficoms
loop
add
rorl
lea
jle
and
mov
pop
call
imul
pushl
jp
loopne,pt
xchg
insb
pop
jmp
jmp
mov
sbb
lret
xor
pop
jg
inc
and
shr
add
or
add
out
dec
imull
cmp
jae
repz
ja
add
dec
adc
push
sbb
pushf
xchg
lret
or
aad
bound
andl
sub
ljmp
cmp
jle
jl
cmp
mov
push
jne
ja
sub
push
jmp
data16
rcrb
ljmp
fildl
mov
mov
mov
mov
mov
inc
mov
cltd
or
cmp
aam
adc
pop
lret
mov
in
js
push
fs
dec
popf
ret
push
push
lret
in
sbb
jnp
popa
fnstsw
push
cmp
sub
std
dec
lea
loop
fwait
xchg
mov
xchg
ret
xchg
cmp
adc
mov
cmp
lods
mov
cmp
dec
insl
inc
imul
jb
dec
jmp
bound
ret
adc
push
fs
movsl
in
pop
out
pop
mov
cltd
pop
mov
mov
jecxz
cs
cltd
mov
ja
pop
push
loop
push
mov
pop
inc
sub
dec
sbb
in
int
or
ljmpw
cmp
jg
test
push
sbb
dec
shll
jno
cmovp
es
jg
sbb
pop
iret
mov
mov
cld
mov
cmp
inc
fsubl
outsl
or
dec
bound
xlat
xor
xchg
mov
mov
or
scas
xchg
push
loopne
int
mov
jo
pop
and
xor
pop
mov
pop
adc
les
jge
xor
movsb
mov
jmp
aam
insb
lret
mov
lret
insb
adc
mov
lcall
push
stos
push
sub
or
movsb
cmp
fidivrs
leave
stos
mov
pop
dec
adc
cmpsb
jp
push
dec
mov
cmp
add
sarb
add
adcl
cmp
push
xor
popf
lldt
push
xchg
subl
cs
insl
inc
add
and
cwtl
into
out
out
fwait
jno
mov
fsubs
or
clc
mov
cs
lret
lock
sub
hlt
cli
push
sbb
iret
mov
dec
xchg
jbe
mov
dec
mov
ss
cmp
arpl
idivb
mov
mov
pop
call
repz
dec
cli
jns
lcall
cmp
mov
or
arpl
test
xchg
xchg
stc
xorl
jbe
flds
inc
pusha
rcl
push
xor
out
fildl
dec
lcall
sbb
xor
xchg
cltd
sbb
rcrl
popf
adc
jne
xchg
mov
dec
icebp
lcall
adc
sub
sbb
jmp
cmp
adc
dec
jno
arpl
cwtl
dec
jae
aaa
in
xchg
cwtl
pop
outsb
fstps
jge
jno
pop
stos
lock
pop
outsb
sti
inc
xchg
jecxz
mov
aam
scas
pusha
stos
sub
mov
negb
jb
fsubrp
aad
and
ljmp
or
lret
imul
dec
inc
dec
std
aam
imul
ffreep
inc
idiv
pop
add
ret
mov
rcr
inc
lds
inc
push
sahf
push
pop
push
sti
push
jge
mov
int
inc
inc
aaa
and
jno
insl
push
test
mov
push
int3
lds
test
std
into
add
cmp
rorl
xor
push
dec
rcll
aas
pop
adc
xor
ja
pop
in
xchg
dec
gs
dec
and
pop
fwait
jge
dec
pop
xorl
push
test
push
push
jno
sbb
mov
sar
mov
jg
iret
jmp
decb
int
movb
sub
xor
pop
std
inc
loop
sbb
or
addr16
or
out
je
sahf
cld
push
in
mov
sub
push
dec
jb
push
mov
in
xor
insb
push
out
adc
fidivrl
das
subb
aam
into
push
xor
fbstp
inc
xchg
sar
cmp
movsb
jle
jmp
outsb
and
cmp
jns
inc
sub
xor
andb
popa
cmp
and
adc
arpl
imul
jg
xchg
sub
xor
dec
ret
or
dec
xchg
mov
scas
test
gs
mov
int3
scas
testb
push
je
jo
jecxz
stos
adc
xchg
xchg
data16
mov
and
mov
mov
mov
jns
and
das
ret
in
push
cmp
push
fisubrl
sahf
lea
xchg
jmp
xchg
mov
mov
push
dec
or
inc
inc
pop
dec
or
rcr
fsts
mov
loop
jns
imul
imul
adc
into
shll
pop
jne
or
xor
aam
inc
mov
add
cmpsl
das
lahf
push
into
outsb
mov
lret
add
outsb
jae
data16
popf
addl
xchg
out
ret
xlat
insl
int
push
mov
jmp
sbb
pop
sub
mov
inc
jno
insl
xor
dec
rorl
inc
lret
out
gs
xchg
int3
xchg
pop
push
pop
fcmove
jp
dec
lret
ret
xchg
pop
icebp
leave
sub
ficoms
cwtl
mov
xor
jge
aaa
pop
int3
or
jbe
ret
push
les
xchg
pop
mov
mov
dec
add
jo
ja
movsb
test
popl
scas
out
jno
bound
ljmp
jne
dec
or
dec
enter
inc
inc
rcrl
dec
inc
or
cmp
pop
push
shll
ss
cltd
cmpsb
jle
cmp
out
mov
adc
pop
push
ja
aaa
dec
xchg
add
xchg
shrb
push
imul
jge
inc
and
push
mov
rorl
incl
push
cmpsl
cmpl
cmp
push
outsb
and
fwait
cmpsl
xchg
xor
mov
pop
push
rep
mov
dec
cmp
es
or
push
insb
add
outsb
dec
repz
clc
xor
test
mov
inc
or
xor
inc
fisttps
add
cwtl
jmp
dec
cmpsb
mov
or
mov
aad
insb
pop
lods
es
mov
xchg
mov
xchg
cwtl
sub
test
les
dec
xlat
out
xor
dec
imul
xor
inc
pop
dec
jmp
outsl
aam
ljmp
cltd
test
data16
fdivs
cmp
sub
fldcw
mov
mov
inc
xchg
adc
xchg
mov
nop
cmp
js
clc
xchg
out
push
sbbb
xchg
dec
call
push
test
xor
dec
add
push
add
les
fidivrs
sub
cmp
insl
or
push
shrl
aam
ds
jl
sbb
xchg
xchg
out
insb
add
pop
sbb
repz
jg
ret
sti
bound
stos
pop
mov
xchg
sub
jecxz
add
dec
mov
fcmovb
sub
jb
clc
das
cmp
jo
push
ror
in
push
sbb
sti
push
dec
loop
mov
in
adc
pop
loope
jle
popa
jo
fmul
push
cmpsl
pop
orl
test
scas
jnp
ljmp
cmp
push
mov
les
sub
cmp
loopne
jne
popf
div
adc
lret
sub
data16
imul
and
cmp
ret
loopne
rol
pop
les
hlt
jne
icebp
mov
sbbl
cmp
test
and
pushf
pop
xchg
cmp
adc
xchg
pop
push
aam
popf
dec
jecxz
fwait
push
xchg
mov
sub
mov
out
loope
je
adcb
sbb
shl
push
xchg
sub
ret
mov
cmp
cmp
pop
ucomiss
add
into
jno
and
sub
imul
jp
ss
shll
hlt
or
pop
push
iret
in
lret
mov
sbb
sahf
andl
lea
mov
ret
repnz
inc
inc
mov
fisttpll
or
jns
sub
rcll
test
push
rep
pushl
loopne
xchg
repnz
dec
inc
fistpl
cmp
cld
inc
adc
xchg
mov
add
xor
loope
inc
clc
pusha
cli
inc
iret
push
imul
push
sub
xor
or
std
add
jle
add
inc
pushl
rorl
sarl
pop
shll
daa
push
mov
pop
test
jle
lods
dec
shll
mov
sub
ficompl
scas
dec
out
jnp
xlat
cmp
adc
pop
push
mov
mov
fildll
jbe
xor
mov
scas
xchg
adc
add
xchg
aam
xor
ds
xor
test
lahf
pop
in
repz
inc
lds
aam
cmc
dec
xchg
cmp
fidivrs
or
add
cmp
jnp
jae
dec
mov
shll
dec
cmp
test
jp
insl
inc
loope
inc
clc
push
cmp
cli
pop
in
adc
imul
xor
fistpll
gs
fucom
fwait
pop
pop
pop
repnz
xchg
add
xchg
mov
jno
xor
pop
jns
test
mov
inc
pop
lods
push
popf
push
xor
inc
popa
inc
sbb
imul
pop
scas
pushf
andb
movsl
adc
ds
adc
push
dec
adcb
xor
pop
xor
imul
stos
xchg
and
add
cltd
mov
pop
insl
test
js
dec
or
jecxz
sbb
add
imul
pop
jnp
add
cltd
push
sarl
cmp
lea
cmp
addr16
call
jmp
xchg
aad
lds
out
ret
mov
cmpb
adc
stos
inc
pusha
push
xchg
lcall
je
cltd
addr16
mov
jb
ficomps
scas
sahf
aad
sti
popa
lds
int3
sub
das
cmp
jae
fcoml
or
dec
mov
inc
std
int
push
ljmp
adc
sbb
stos
push
push
push
shrl
jle
insl
bound
stos
pop
loope
rorl
dec
push
inc
mov
sub
dec
cltd
or
stc
xchg
mov
push
inc
mov
xchg
mov
shlb
push
jno
mov
xor
sub
dec
mov
ret
push
into
imulb
push
clc
mov
call
ljmp
adc
pop
das
jb
mov
sbb
push
push
enter
outsb
xor
mov
lods
sarb
data16
imul
insb
gs
pop
outsl
enter
test
loope
pop
sub
mov
call
and
orl
dec
inc
xchg
popf
movsb
fbld
notl
rorl
aam
in
pop
pop
jno
stos
cmp
test
mov
mov
push
clc
pop
and
pop
rorl
or
mov
outsb
aam
cmp
sub
and
cmpb
imulb
push
mov
repnz
imul
xor
lds
xchg
and
mov
dec
call
xchg
test
call
and
testl
sub
adc
cmc
stc
inc
xor
loopne
sbb
mov
sub
lock
sbbb
movsb
pop
push
bound
pop
jae
aas
pop
jbe
lea
std
mov
push
push
ja
cltd
jae
notl
iret
sub
daa
dec
mov
xor
push
xchg
scas
push
add
les
pushf
cli
push
pop
lea
pusha
out
cmc
jp
test
testb
mov
push
scas
loop
rcll
jge
addl
stos
inc
faddp
pop
lret
add
out
insl
iret
add
mov
lods
test
movsl
call
pop
jge
and
push
push
das
sub
rcrl
fistpl
pop
pop
mov
repz
xchg
mov
stos
mov
adc
mov
push
jl
cwtl
in
fidivrl
add
cmp
out
jne
ds
mov
or
xor
repnz
shll
or
cmc
push
adc
and
dec
and
xor
inc
jmp
mov
mov
adc
jno
je
mov
dec
mov
cmp
inc
scas
jp
adc
mov
addr16
and
subl
or
lret
jmp
inc
cmp
jne
icebp
mov
xor
add
fwait
xlat
ljmp
insb
jno
ja
out
xchg
or
lea
cmp
out
ficomps
repnz
inc
xchg
jle
mov
aam
mov
stos
enter
loope
cmp
or
ret
pop
push
fsts
aas
and
fstpl
cmp
int3
fdivr
xor
dec
inc
nop
dec
into
adc
push
icebp
jge
les
scas
fcoms
xor
sbbb
lea
mov
sbb
imul
add
jle
rclb
adc
subl
pop
inc
or
popf
or
mov
xchg
sahf
push
inc
leave
mov
call
jnp
pop
jmp
cmp
and
lret
mov
jb
ljmp
out
or
cmp
ds
jle
fs
js
ret
loope
int
jmp
inc
into
jecxz
push
stos
in
and
or
lahf
sub
mov
push
aaa
adc
fildll
sub
and
clc
movsl
addr16
xor
add
jecxz
push
xchg
sub
pop
jno
dec
push
and
pop
lock
rol
daa
aam
xor
inc
std
out
jmp
xor
xchg
mov
sub
sub
test
divb
out
xchg
mov
lds
add
xchg
movsb
test
andl
sbb
rcrb
movsl
add
push
jmp
and
imul
mov
and
push
xchg
xchg
cmp
aas
insb
adcb
xor
rcrb
test
lods
push
fwait
rcll
imul
inc
xor
fdiv
test
sbb
into
jecxz
popa
pop
push
cwtl
fcoml
out
add
mov
mov
daa
jle
clc
dec
inc
sbb
sub
adc
mov
addl
repnz
subb
bound
pop
cmc
out
push
pop
flds
jb
add
sub
sbb
xor
cs
push
adc
dec
inc
cmp
ljmp
xchg
daa
repnz
mov
cmp
inc
dec
mov
and
sbb
adc
push
xchg
sub
clc
xchg
js
and
mov
dec
pop
inc
ljmp
lcall
test
imul
out
pusha
xor
push
or
mov
iret
cli
inc
pop
movsl
pusha
cmp
rcrb
ljmp
mov
xor
out
lret
insl
mov
ficomps
cmpsb
mov
iret
jecxz
sbb
sbb
cmp
or
jge
jp
or
inc
mov
xchg
mov
out
xchg
outsb
clc
js
xchg
xchg
ss
or
lds
ss
lret
mov
fninit
dec
pop
inc
data16
pop
enter
lret
subb
icebp
adc
sysret
sahf
pop
stos
scas
je
ret
jge
dec
mov
xchg
mov
xchg
mov
lea
sub
enter
jg
pop
in
insb
mov
or
sbbl
je
dec
dec
inc
in
pop
iret
mov
mov
jmp
push
and
lods
lcall
jecxz
mov
rcr
xchg
jb
push
out
sub
xchg
mov
mov
pop
fsubs
inc
pop
lahf
push
and
or
nop
fimuls
pop
addb
sub
add
lea
xor
push
mov
xor
mov
fnstenv
push
hlt
cmp
jae
aas
fucom
inc
xor
aaa
or
push
ja
ss
push
adc
and
rdpmc
push
out
insl
pop
ljmp
cmp
push
dec
inc
mov
mov
push
pushf
fidivs
daa
xor
cmp
sub
xchg
leave
xor
orb
pop
pop
dec
imul
ds
je
rol
js
pop
mov
pop
hlt
addb
filds
pop
cmp
test
fists
dec
xchg
iret
mov
adc
cwtl
add
rorl
dec
cmp
push
push
std
pop
lea
xchg
push
mov
ljmp
pop
outsb
rcrb
push
cli
adc
xor
dec
cmp
aam
or
cltd
pop
jle
outsl
movsl
and
sbbb
addr16
pcmpgtw
pop
dec
sub
jno
jmp
cmp
loop
gs
enter
inc
jne
out
push
jl
daa
bound
dec
xchg
adc
pop
out
and
and
xchg
cmp
shr
xchg
ret
loopne
jns
dec
lds
jmp
mov
cmp
mov
xchg
mov
mov
push
popf
dec
xor
jne
rclb
sub
mov
and
xchg
orl
mov
mov
jecxz
jae
js
xchg
arpl
insl
mov
mov
inc
push
jo
mov
inc
ret
xor
fnstcw
pop
aad
sub
outsb
lods
push
adcl
jbe
push
lds
ficoml
adc
pop
jge
cli
push
and
pop
and
out
xchg
xchg
sbb
lcall
push
lcall
inc
cs
pop
adc
das
or
repnz
pop
or
inc
inc
fildl
dec
mov
push
inc
fists
mov
enter
add
mov
es
popf
out
cmc
repz
xor
daa
int3
sbb
xchg
js
adc
jne
jmp
push
std
repnz
in
or
or
sbb
bound
jg
into
adc
sub
sbb
icebp
dec
xor
cmpsb
mov
popa
lea
push
fmuls
inc
push
mov
xchg
inc
mov
into
ss
outsl
popa
xchg
lret
fs
bound
mov
push
addr16
cmp
or
dec
push
add
into
scas
sbb
daa
sub
jle
xor
sbbb
and
jp
mov
shl
pusha
loopne
mov
in
shrl
shlb
jns
or
lods
shll
mov
mov
add
cwtl
mov
push
in
inc
push
pop
cmp
popf
mov
out
cmp
daa
setne
mov
decb
lahf
mov
or
cmp
inc
shrl
clc
test
mov
push
imul
mov
popf
cmp
adc
test
sub
imul
insb
out
rclb
or
pop
xchg
xchg
jge
rorl
pop
cmp
nop
and
hlt
push
aas
cli
daa
dec
or
ret
sti
cwtl
inc
sub
add
test
mov
jmp
push
lock
mov
imul
xchg
push
sub
fisttps
fisubl
xor
clc
pop
mov
test
mov
jb
out
leave
push
loope
int
out
pushf
mov
pop
mov
leave
cltd
mov
inc
inc
adc
push
push
cmpsb
int3
rclb
mov
andl
push
aas
push
bound
inc
clc
ss
scas
or
repz
cmpsb
les
loopne
xchg
and
sbb
enter
inc
lods
pop
cld
and
mov
cs
sub
jge
je
cmpsl
imul
mov
or
adc
cs
stos
cmp
jae
pushf
fists
pop
jo
xor
in
xor
push
pop
cmp
gs
mov
xchg
or
dec
dec
xchg
out
sbb
mov
imulb
mov
pop
cmp
ret
lds
fmuls
xchg
into
pop
or
clc
push
mov
fwait
popf
xor
sub
outsl
lcall
jb
sub
mov
addr16
mov
ss
aaa
jns
sbb
lahf
push
push
test
test
shll
push
dec
ljmp
jae
loope
or
lret
push
or
aam
adc
adc
push
push
inc
lret
into
mov
or
sbb
jp
xor
mov
fisttpl
xorb
fadd
xor
dec
call
add
adc
dec
push
testb
xor
xor
xchg
out
aaa
push
aaa
xor
xchg
cs
fwait
pop
jp
sub
or
dec
pusha
mov
mov
jle
ss
js
xor
cltd
imul
subl
gs
inc
inc
gs
insb
shlb
dec
cmp
push
pop
fwait
dec
mov
ret
aaa
js
dec
push
mov
pop
mov
insl
jns
ja
xor
fwait
cli
idivl
pop
pop
shl
pop
xor
rclb
adc
add
xchg
xchg
inc
leave
pop
pop
movsb
xor
push
xor
out
push
xor
int3
pop
xchg
sbb
into
stos
push
push
stos
divl
fdivl
inc
aaa
inc
lds
mov
sbb
pop
add
xorb
push
jge
imul
push
jnp
clc
sbbl
dec
repnz
call
ret
loop
repnz
cmpsl
outsb
jnp
mov
adc
mov
mov
cltd
dec
pushl
and
shrd
xchg
call
jne
fwait
lds
sub
jno
inc
lds
sub
ljmp
rcrl
push
lock
lock
in
dec
pop
cwtl
test
into
es
inc
push
mov
push
or
sub
fsubp
das
xor
scas
fisubs
into
andl
or
xchg
cmp
push
pop
push
mov
scas
insb
mov
sub
iret
pop
mov
pushf
pop
cmc
add
jne
push
sbb
out
out
inc
xchg
mov
out
mov
cmp
loope
xor
addl
enter
les
mov
pop
rclb
lods
adcl
shrb
dec
push
pop
mov
call
orl
jns
test
stos
add
push
clc
push
lock
add
jo
stos
aas
sbb
pop
add
cltd
dec
pop
lods
insb
or
mov
gs
xchg
cwtl
pop
add
push
pop
and
xor
cltd
jno
xchg
xlat
out
cmp
push
iret
add
cld
repnz
icebp
outsb
mov
insl
dec
push
xor
lcall
xchg
mov
push
fimull
xchg
ret
aaa
cmp
emms
loop
jnp
cmp
mov
iret
popa
aaa
mov
xchg
and
dec
addb
loop
mov
jnp
push
xor
push
push
inc
pop
pop
out
jnp
dec
inc
push
xchg
aam
xchg
loopne
jle
ret
mov
mov
push
insl
cmp
in
sub
dec
ss
ret
fbld
icebp
mov
outsl
ds
scas
fcmovbe
sub
mov
adc
jo
add
sub
dec
xchg
out
cmpsl
rorb
pop
ret
mov
jle
jae
cmp
data16
data16
cmp
pop
inc
mov
jl
into
cwtl
add
clc
leave
mov
cwtl
pushf
sub
lea
out
sub
pop
fidivrs
mov
and
inc
sbb
jg
sub
pop
add
mov
sbb
outsl
clc
cmpl
sbb
xor
repz
int
xor
clc
add
mov
sysexit
lock
imul
lret
inc
dec
fdivrp
dec
xlat
xchg
movl
mov
test
fsts
mov
shll
push
mov
out
push
inc
inc
jmp
movsl
sub
add
mov
cmp
push
out
aad
scas
mov
jb
mov
fidivrl
cmp
or
xchg
mov
int
pop
fildll
scas
sarb
fnstcw
pop
aad
mov
data16
cwtl
sahf
ret
fidivs
shr
out
xchg
sbb
xchg
aad
in
adc
orl
jp
lea
fcoml
insl
xor
mov
pop
or
test
push
cld
stos
xchg
stos
jge
pop
icebp
cli
imul
adc
arpl
cmpb
inc
gs
add
mov
xchg
int
mov
mov
mov
inc
jg
push
addr16
dec
adcl
rorl
data16
push
adc
pusha
arpl
push
mov
sub
adc
cmpsb
jnp
je
push
xchg
jl
mov
loop
mov
iret
and
or
bound
repz
inc
gs
mov
mov
mov
out
jo
ror
repz
push
repz
repz
stos
or
shl
jno
int3
aaa
inc
outsb
test
inc
inc
fistps
roll
adc
fnstsw
xchg
push
ss
cltd
imul
sysenter
bound
insl
mov
cmpsb
jno
scas
xlat
inc
add
mov
and
xchg
ljmp
testl
in
inc
push
sub
das
rorb
sub
sbb
nop
push
enter
in
sbb
out
xchg
test
loope
fcomps
mov
or
mov
jmp
adc
mov
and
xchg
mov
lea
enter
pop
push
mov
aad
imul
cli
mov
fsts
cmp
lea
cmp
add
xadd
dec
xchg
fs
pop
orl
cmp
cmp
outsl
inc
jo
rorb
imul
mov
inc
cmpsb
cmp
pushf
jo
mov
mov
mov
mov
movsb
iret
push
in
jl
push
movsb
movsb
cmp
aam
adc
push
pop
movsb
inc
push
out
add
push
les
add
movsb
jnp
adc
push
push
lock
repz
fld
pop
test
das
ja
jl
loope
or
hlt
hlt
add
push
mov
push
lea
insb
add
push
out
inc
repnz
xor
or
int3
xchg
pop
xchg
jo
push
das
fdivrp
push
mov
push
stc
sti
jns
jae
mov
mov
pop
inc
in
mov
cmpsb
push
mov
aad
inc
lret
addr16
iret
inc
out
jmp
or
orb
xor
in
inc
clc
sbb
je
dec
loope
mov
sbb
add
inc
insl
cmpsb
bswap
push
adc
mov
loope
dec
inc
jne
mov
mov
sbb
push
sbbl
ss
pop
sub
mov
cmp
add
cli
jbe
jmp
pop
movsl
mov
cltd
pop
mov
pusha
pop
int
mov
call
inc
pop
push
mov
xchg
rcrb
jmp
shlb
fdivr
int3
dec
mov
mov
shl
xor
outsb
xchg
stc
jae
push
and
jno
mov
mov
repz
cmc
es
cld
pushf
push
dec
inc
pop
scas
xor
daa
loopne
test
or
pop
jle
push
nop
push
jp
mov
fdivr
nop
ds
mov
shrb
leave
sub
jnp
push
mov
xchg
pop
cmpsl
mov
jb
ret
mov
pop
pop
pop
mov
lret
xor
push
dec
pop
push
push
lcall
xchg
fidivl
hlt
jns
shll
test
addb
pop
inc
aad
ss
and
xor
pushf
cltd
enter
nop
sbb
cli
cwtl
std
lea
notb
jecxz
nop
lcall
bound
xchg
dec
cmpsl
fstpt
mov
inc
mov
jnp
aad
cmp
dec
lcall
int3
pop
jae
out
push
mov
jg
add
push
fmulp
shl
lahf
pop
in
pop
mov
rorl
out
dec
inc
and
inc
ds
mov
pop
mov
xchg
push
loop
xor
sbb
pop
popa
arpl
pop
cltd
and
pop
and
sahf
or
sarb
or
pop
aam
arpl
repz
jle
fwait
xchg
inc
xchg
icebp
shl
sub
into
and
out
and
out
pop
inc
data16
lods
pop
add
pop
xchg
jge
rclb
xor
and
mov
jns
pushf
jb
shl
push
mov
push
sbb
pop
insl
out
outsb
pop
mov
pop
lods
add
push
nop
sbb
stc
les
sub
shlb
mov
sub
lcall
inc
std
mov
popa
adc
cs
push
sbb
inc
pop
stos
mov
lahf
loope
mov
push
adc
leave
aad
inc
or
or
das
rolb
int
cmpsl
gs
xchg
adc
fwait
outsl
cmc
call
lods
sub
and
and
outsb
scas
pusha
push
xchg
push
fs
es
shlb
bound
pop
mov
and
inc
xor
jbe
negb
sub
adc
filds
or
addr16
push
sub
push
and
mov
cmp
pop
jecxz
xchg
xlat
clc
fwait
mov
movsl
mov
in
arpl
scas
dec
lcall
loope
loopne
mov
jmp
inc
or
xchg
cmova
dec
data16
and
fstpl
lcall
clc
pop
push
iret
mov
jmp
cli
inc
dec
imul
and
fcmovnb
mov
add
sbb
pusha
lock
ds
pop
or
sahf
inc
cltd
insl
adc
jns
out
push
andb
imul
out
push
stc
das
scas
and
daa
and
aad
fcmovnbe
mov
mov
shlb
lods
mov
fbld
lahf
inc
sub
lods
shll
cmp
sub
mov
testl
sti
pop
popa
dec
mov
sub
mov
lock
in
lock
mov
cli
fwait
xchg
out
jns
mov
jp
xchg
pop
cmp
add
mov
call
jl
add
add
not
push
dec
or
mov
into
outsl
jg
loopne
pop
mov
fndisi(8087
mov
ret
mov
and
mov
push
mov
std
call
mov
or
addb
test
fwait
xchg
lret
sub
ror
pop
mulb
adc
arpl
test
xorb
iret
mov
cmpl
mov
lea
inc
repz
xchg
jnp
mov
jle
mov
bound
pop
bound
inc
lret
push
je
pop
fistl
xor
idivl
sahf
fbstp
cltd
pusha
mov
adc
jg
outsl
cmp
loope
popa
mov
mov
push
fs
insb
xor
pop
pushf
lcall
ss
xor
rorl
inc
jmp
inc
pop
pop
sbb
mov
scas
nop
stos
shlb
test
inc
push
pop
fldcw
jg
mov
fbstp
cmp
cmp
orl
jle
js
sbb
dec
pop
push
jno
sarb
mov
fs
cmpsb
insb
loop
sahf
mov
mov
aam
fistpl
cld
mov
lret
adc
xchg
sub
out
dec
repnz
orl
jnp
push
mov
lock
lea
and
ljmp
mov
out
add
mov
dec
push
cmc
cltd
and
xchg
mov
sub
xor
pop
cltd
mov
push
loop
outsl
push
dec
or
cmp
pop
cmc
mov
mov
xor
lcall
adc
cmc
lds
leave
test
iret
cli
out
mov
cltd
rorl
cmp
push
imul
rolb
inc
scas
imul
cmp
shlb
xchg
xchg
inc
and
popa
push
popa
push
mov
pop
outsl
imul
ja
dec
xchg
decb
shl
flds
into
mov
fsubrs
test
cmp
and
jnp
fistpl
lds
pop
inc
adc
rorl
test
jo
addr16
adcl
jecxz
cmp
mov
cmp
push
dec
int3
or
lds
xchg
mov
add
jl
out
stc
int
sbb
jle
lods
scas
popa
push
clc
in
push
mov
add
outsl
sbb
jp
cmp
movsb
adc
mov
rcl
sub
adcb
aam
inc
sub
mov
cmp
gs
lods
or
repnz
cmp
mov
mov
addr16
sub
cmp
sbb
adc
jp
adc
xchg
or
inc
pop
jmp
pop
enter
cmp
bound
inc
insb
imul
fistpl
jl
mov
inc
fwait
jnp
pop
in
inc
test
jo
mov
cmp
jge
cmp
push
mov
and
inc
aam
mov
xor
repnz
mov
shlb
push
out
mov
pop
pop
fcoms
push
out
loope
iret
inc
cld
iret
scas
add
popa
cmp
lcall
call
pop
dec
aad
push
and
and
nop
ficoms
ret
mov
cmp
jne
cmp
out
insl
sub
mov
xor
mov
dec
lahf
addr16
fdivrl
clc
aas
dec
nop
pop
daa
movsl
lds
lea
int3
out
push
inc
out
mov
add
daa
and
mov
hlt
mov
mov
fnstcw
dec
ret
xchg
rcll
adc
ret
popa
add
stc
ret
pop
adc
cs
and
fnstsw
push
mov
cmp
pop
imul
or
push
or
and
repz
push
sbb
stos
push
mov
clc
xor
mov
inc
imul
call
mov
out
dec
in
pop
in
test
out
xchg
call
and
data16
cmp
xchg
ret
inc
jbe
inc
outsl
jmp
dec
add
sti
xor
jbe
xchg
or
push
fdivp
push
sahf
addr16
out
stos
pop
pop
out
mov
jbe
xchg
shlw
and
mov
add
pop
das
pop
mov
pop
cmp
jno
testb
xor
push
adc
dec
out
mov
test
xor
test
dec
mov
out
dec
inc
mov
mov
dec
rclb
xchg
xor
loopne
lret
push
add
lods
xchg
fwait
pop
hlt
in
addb
cmpsl
cmp
les
mov
mov
sbb
xchg
pop
mov
test
push
pop
cmpsb
inc
popa
mov
out
sub
das
les
pop
or
push
faddl
testl
fdivrl
rcr
insl
xor
lret
jg
mov
adc
aad
mov
mov
int3
movsl
insb
mov
mov
or
cwtl
int3
push
clc
jle
pusha
xchg
dec
push
or
sbb
xchg
push
sbb
adc
outsl
movsb
add
or
xchg
xchg
lods
cmc
jne
xchg
cmp
inc
inc
push
pop
or
pop
and
jmp
inc
adc
mov
xor
sbb
scas
add
cmpsl
scas
dec
iret
dec
push
popf
imulb
push
add
adc
ret
jecxz
movsl
cltd
js
pop
sbb
fs
mov
cmp
cli
cmc
ret
mov
sub
outsl
xchg
inc
aam
jb
push
fsubl
sbb
sub
das
pop
xor
mov
jae
loopne
lea
pushf
mov
lret
push
lods
xchg
pop
dec
mov
mov
out
out
xor
sub
add
mov
cmp
add
out
adc
pop
icebp
fldcw
mov
cmp
xchg
mov
rolb
icebp
das
push
push
pop
lock
shrb
add
inc
test
mov
push
gs
pop
mov
push
loopne
cmp
stc
cld
outsl
jle
mov
std
xor
sbbb
outsb
loopne
or
dec
mov
jno
int3
lret
nop
pop
cltd
xchg
dec
cmpsb
dec
jbe
push
rorb
or
aad
lea
lods
push
cwtl
push
gs
imul
jle
mov
add
cmp
sbb
sbb
sbb
and
mov
inc
movsb
lods
jge
xor
add
mov
gs
sbb
mov
rol
add
stos
xchg
or
mov
fldl
xchg
mov
cld
push
lea
insl
mov
mov
lcall
mov
int
mov
mov
mov
sbb
xchg
or
sahf
rcll
stos
mov
jnp
je
xor
mov
lods
leave
jp
stc
outsb
xor
popa
orb
xor
xor
push
addl
movsb
pop
int3
push
xor
jecxz
or
fs
add
push
mov
sbb
jge
push
mov
imul
sbb
inc
daa
mov
dec
shll
jge
movsb
test
outsl
push
cmpsl
jno
pop
add
movsl
xchg
aam
insb
pop
mov
xchg
push
xchg
repnz
dec
pop
out
push
pop
fmull
mov
cmpsl
push
xchg
gs
jno
ror
mov
fisttpl
jecxz
fstpl
lods
pop
in
fwait
cmp
ror
lret
ds
and
or
pop
js
mov
xlat
adc
imul
test
xchg
ljmp
stc
shl
es
or
mov
testb
into
mov
lret
cmp
sbb
aam
adc
pop
adc
int
es
jns
js
arpl
bound
lods
aad
jnp
in
pop
lahf
ficoms
test
add
xor
int
mov
jnp
clc
xchg
stc
test
incl
jne
push
push
xchg
lds
pop
push
mov
mov
mov
in
lret
add
cmp
inc
test
inc
jo
dec
pop
fsts
lcall
stos
push
or
fs
bound
gs
mov
iret
jbe
pop
out
cmp
jb
or
movsb
push
pop
ds
jbe
bound
nop
fidivl
mov
adc
jnp
or
sub
insl
aaa
mov
xchg
popf
cmpsb
adc
testb
gs
xor
addr16
pushl
xor
push
sbb
mov
mov
aas
pop
cmp
xor
cmp
clc
cmpsb
cs
xchg
mov
mov
es
pop
and
aaa
test
fnstenv
in
cmp
je
push
push
aas
pop
and
arpl
pop
movsl
or
mov
sub
loopne
testl
push
dec
dec
mov
cmc
out
nop
cmp
scas
add
gs
in
scas
test
call
dec
or
dec
fs
cli
mov
mov
rorb
cmp
lret
loope
pop
or
mov
lock
cmc
gs
je
frstor
or
push
out
test
dec
cwtl
call
ljmp
sub
mov
jbe
pop
ds
iret
in
and
pop
xchg
pop
pop
dec
les
push
popf
sub
out
pop
push
dec
mov
jl
adc
xchg
mov
pusha
lods
je
adc
lea
cld
mov
mov
shrl
out
repz
add
in
pop
inc
sub
test
adc
repnz
add
push
mov
fs
scas
xor
ret
stos
add
push
arpl
inc
cmpsl
inc
push
pushl
jmp
ljmp
imul
enter
dec
mov
mov
into
mov
cmp
ja
leave
shll
daa
incb
or
mov
ret
push
les
push
dec
or
cli
sbb
mov
adc
adc
popa
gs
sub
jo
mov
insb
or
aad
add
push
and
mov
pop
out
xchg
jae
adc
inc
mov
fbld
hlt
push
dec
ss
std
sub
into
jmp
dec
leave
daa
lea
shlb
in
xchg
jl
pop
jl
adc
insl
sahf
aaa
or
xor
push
push
dec
xchg
test
jecxz
fdivp
test
pop
inc
and
insb
sbb
rcrl
bound
lea
pop
jae
lcall
inc
dec
mov
scas
movsb
ret
push
jb
adc
mov
mov
push
jle
xchg
mov
in
stc
test
cmpsl
mov
std
imul
cmp
out
lcall
or
cwtl
xchg
cli
dec
push
dec
dec
mov
dec
jecxz
test
cli
push
add
sub
inc
sbb
cmpsl
xor
jle
dec
mov
scas
test
test
xchg
sub
popf
sbb
jmp
mull
int
dec
subl
add
outsl
cs
mov
and
roll
pop
mov
out
jmp
jne
adc
into
pop
adc
pop
lahf
pop
dec
inc
cs
xchg
xor
in
aad
ficompl
repnz
stos
loopne
jge
push
dec
inc
push
lods
mov
sbb
pusha
out
cmc
pop
add
test
out
mov
xchg
mov
scas
mov
stos
insl
or
sahf
test
dec
call
aaa
or
and
cltd
cwtl
mov
push
cmp
and
dec
flds
nop
in
xchg
test
jl
out
jmp
test
nop
loop
stos
scas
gs
xchg
jne
imul
outsl
cmpsb
mov
push
cld
sub
push
inc
inc
gs
inc
sbb
inc
sub
add
jne
xchg
cli
push
pop
sbb
fimuls
in
xor
xchg
add
inc
dec
mov
dec
mov
int
jbe
fcmovb
cmp
ffreep
cmpsb
icebp
dec
scas
outsl
xlat
cmpl
in
sbb
lock
mov
mov
das
sbb
pop
in
into
jno
mov
mov
test
gs
jmp
jbe
pop
push
push
jmp
xor
nop
jne
repz
repz
ret
mov
dec
pusha
aam
cmpsb
leave
popa
mov
mov
pop
enter
mov
mov
imul
ja
xchg
push
lcall
lahf
in
fcomip
in
shl
sub
ja
dec
fistps
sbb
or
push
and
cwtl
jno
inc
mov
sbb
and
cs
rcll
xor
in
fnstenv
out
icebp
scas
fucom
es
xor
mov
lock
mov
inc
dec
repnz
jecxz
mull
adc
cwtl
or
mov
mov
push
test
test
sbb
xor
dec
jae
leave
xchg
ljmp
xor
mov
andb
enter
out
hlt
inc
adc
iret
ret
cmc
imul
mov
aaa
inc
out
into
hlt
or
dec
loopne
xchg
mov
push
mov
ljmp
mov
sbb
loopne
sub
sar
sub
lds
mov
pop
push
inc
adc
xlat
lds
xchg
nop
push
in
jg
insl
sbb
mov
popa
dec
repz
cltd
lea
popa
shll
cmpsl
mov
jp
les
pop
rcrb
leave
imul
mov
imulb
jb
xchg
sub
ret
add
gs
call
jns
outsl
mov
pop
mov
inc
and
sbb
lahf
addl
dec
popf
inc
adcb
es
dec
cmpsb
add
mov
sub
subb
imul
sub
jbe
and
pop
push
pop
jle
ja
jecxz
jecxz
pusha
add
push
jge
sarl
add
imul
jne
std
and
adc
cltd
inc
jo
ret
test
cmc
and
adc
fistpl
inc
and
jp
popf
cli
pop
add
pcmpgtd
inc
popa
jp
cwtl
in
jl
int3
pop
std
lock
mov
fs
rcrb
popf
std
cmpsb
dec
lahf
cs
push
jmp
sub
cmpsl
mov
mov
pop
jge
dec
push
out
inc
push
mov
mov
xlat
enter
movsb
pop
imulb
cs
fsubr
pop
or
pop
jmp
push
in
push
test
and
mov
stos
or
mov
dec
int3
adc
sub
scas
orb
test
lcall
xor
cs
shll
xor
fld
pop
das
frstor
sti
idivl
mov
stc
dec
gs
pop
mov
inc
inc
jnp
test
ret
push
add
push
adc
cmp
sbb
push
das
jg
adc
inc
mov
sti
das
rorb
scas
test
loope
cmc
scas
push
lods
mov
sub
ret
loopne
dec
clc
adc
outsb
cmp
loop
add
pop
pop
not
icebp
das
fldcw
pop
iret
add
mov
xchg
xchg
jbe
mov
fcomip
xchg
mov
lea
pop
add
test
dec
xor
xorl
xchg
mov
lea
xchg
cwtl
or
adc
rorl
sahf
cmpsl
sub
imul
dec
pop
pop
insb
mov
mov
mov
inc
les
inc
dec
xor
push
pusha
shll
out
mov
pop
mov
mov
mov
add
adc
mov
fdivl
inc
les
dec
dec
inc
pop
add
imul
sbb
xchg
rol
scas
andb
mov
mov
ljmp
sbb
jcxz
mov
cltd
xchg
popa
fnsave
sbb
ss
lcall
enter
pop
and
stos
push
cmpsb
cmp
cmp
or
stos
mov
push
jbe
xor
cmpsb
test
out
jl
jno
push
pop
mov
inc
lds
enter
pop
jo
cwtl
sbb
fisttps
jp
stos
lods
mov
je
test
pop
mov
mov
xchg
mov
into
mov
jl
adc
jp
xchg
dec
cwtl
aas
dec
stos
cmp
and
jno
stos
inc
into
cld
mull
add
cmp
enter
add
xor
push
jno
dec
cld
xor
lds
in
stos
cwtl
adc
sbb
jno
dec
test
mov
jle
cmp
add
jl
data16
bound
test
xlat
mov
xchg
inc
push
test
sub
out
xor
movsl
rcrb
xor
test
mov
mov
clc
mov
in
lods
push
dec
push
imul
dec
dec
push
hlt
shll
push
loop
xor
jns
xor
das
dec
pop
sub
jg
dec
movsb
mov
cmpsl
daa
cmp
xchg
push
cmp
in
pop
and
data16
xchg
fwait
mov
cmp
push
js
mov
nop
sub
mov
mov
push
mov
mov
cmp
push
fildl
stos
outsl
sbb
sbb
loope
dec
aad
fs
inc
jge,pn
aas
pop
cmpsb
ficoms
pop
jno
mov
fcoms
lea
filds
dec
ret
fists
push
jb
mov
cs
popf
daa
xor
andl
arpl
idiv
test
out
lea
aaa
das
scas
insb
push
mov
adc
mov
jge
push
adc
mov
stc
loopnew
mov
xchg
int3
inc
xlat
push
xchg
xchg
mov
inc
add
daa
jno
lods
mov
sbb
fistpl
dec
jp
pusha
push
lods
mov
cmp
es
xchg
sbb
out
or
dec
les
popf
cwtl
inc
fstps
outsb
xchg
sbb
pop
sbbb
stos
adc
fistps
jl
test
js
jmp
mov
jb
test
sbb
fldt
sub
outsl
cltd
add
aad
mov
mov
jb
inc
fistps
cmp
pop
lea
mov
jmp
lods
cmp
sub
sub
sbb
lret
xor
ret
clc
mov
sbb
nop
cmp
outsl
cmpsl
gs
cltd
jmp
and
seta
cmpsl
push
bound
addr16
sarl
mov
mov
mov
stos
call
jecxz
pop
cmc
pop
pop
xchg
idivl
jp
rcl
xchg
mov
jbe
and
data16
stos
mov
push
jmp
ret
push
pop
add
in
int
cli
out
enter
in
stos
jl
push
push
mov
stc
leave
data16
test
xor
gs
pop
inc
aas
push
orb
outsb
jmp
push
cmp
pop
mov
cmp
ss
mov
int3
ret
xchg
jge
enter
lret
out
or
and
and
sbbl
adc
mov
ss
sbb
popa
push
jg
mov
add
insb
aam
repz
pushf
jno
or
and
mov
adc
jns
dec
xor
mov
sbb
mov
sahf
imul
lock
push
dec
add
jmp
mov
movsl
inc
cmp
cmp
add
xor
mov
cmp
xchg
mul
aaa
add
outsl
add
and
scas
xchg
xchg
xor
jle
push
push
fwait
mov
fadds
aad
adc
js
push
add
dec
xchg
mov
outsb
sarl
fsts
push
inc
or
or
xor
mov
inc
hlt
jl
jbe
add
and
shr
push
in
sbb
and
js
enter
daa
shrl
push
lret
cmpsl
push
pop
imul
cld
imul
jle
mov
call
sahf
jl
fwait
loopne
push
inc
xchg
inc
test
mov
fdivl
cmp
cmp
popf
pop
imul
pop
rol
jo
lret
iret
push
pop
adc
test
mov
sub
xchg
cmpsl
mov
inc
dec
add
imul
adc
and
popa
and
aam
xchg
jl
push
mov
push
jl
fidivs
repnz
je
sub
mov
fwait
inc
.byte
.byte
dec
