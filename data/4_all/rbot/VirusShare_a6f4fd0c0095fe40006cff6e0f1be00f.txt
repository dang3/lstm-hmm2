sbb
adc
xchg
ffreep
dec
sbb
sarl
stc
pop
mov
push
push
js
jb
rcl
popa
sub
mov
insb
insl
xor
in
addr16
push
loopne
xor
mov
xor
add
imul
loope
cli
lds
push
jecxz
xor
std
cmp
data16
sub
push
roll
inc
rcl
fs
mov
cmpsb
sbb
push
or
or
dec
fistl
push
arpl
sahf
push
mov
mov
pop
aas
test
rcl
mov
aam
push
cltd
mov
xor
pop
call
dec
dec
push
inc
movb
and
or
hlt
lods
into
aad
dec
insb
insl
stc
in
dec
push
repnz
outsb
faddp
gs
push
mov
call
push
out
cwtl
lods
in
sbb
aaa
add
and
jnp
ret
cmp
jae
cld
jl
cmp
rorb
xor
xlat
enter
push
arpl
fmul
dec
cmpsl
mov
rorl
pop
test
in
daa
ficoms
and
or
das
sbb
push
jae
ret
mov
push
dec
in
push
loope
and
add
cmp
rolb
sub
repnz
xchg
cmpsb
imull
scas
xlat
or
sub
push
sub
mov
pop
mov
xor
pop
xor
and
ja
clc
mov
adc
test
icebp
arpl
std
adc
std
push
jo
rcrl
fdiv
push
mov
mov
test
jge
jmp
xchg
dec
addl
stos
fidivrs
enter
shrb
cmp
leave
popa
xchg
and
mov
sub
jge
ljmp
jecxz
and
pop
adc
icebp
mov
adc
imul
shlb
sbb
or
and
adc
fsubl
aaa
dec
shlb
iret
add
lock
push
test
test
pop
cmp
and
dec
xchg
popf
ror
imulb
xchg
jge
push
mov
mov
mov
cli
int3
insl
data16
mov
push
lods
adc
jb
sub
push
xor
aad
xor
jno
nop
jno
imul
mov
mov
movsl
in
into
jo
cmp
mov
les
xchg
insl
inc
adc
aad
lcall
pop
lret
sti
add
inc
xchg
mov
mov
lcall
add
test
cmp
aad
and
outsb
sahf
xchg
add
add
sub
ss
add
inc
stos
lcall
xor
mov
enter
insb
popf
mov
insl
xor
jns
out
into
push
dec
mov
adc
aaa
xor
xor
jo
jns
and
sar
ds
jns
mov
rorl
push
push
lods
lea
scas
pop
into
out
out
scas
mov
fmul
jmp
and
decl
rolb
add
in
xchg
imulb
sub
imul
inc
mov
dec
pusha
pop
fadd
inc
popf
mov
arpl
imul
ret
ret
dec
aad
push
xor
loope
je
or
sti
add
sahf
mov
sub
enter
mov
pop
sti
std
mov
jp
lcall
sub
cwtl
lcall
jp
ror
out
js
push
ds
pop
adc
push
mov
push
fcoml
jae
add
mov
shll
push
sahf
pop
jae
xor
cmp
in
aam
xor
fisubrs
ficoml
dec
scas
and
outsb
js
sahf
jnp
ror
outsb
flds
jnp
xchg
into
arpl
dec
push
mov
sbb
dec
outsb
rcl
scas
add
add
stc
gs
push
jmp
je
sbb
inc
stc
mov
stc
nop
cmpsb
stc
fcmovu
fsts
mov
and
sbb
scas
push
mov
fdivrs
rcrl
in
pop
ds
and
or
push
std
lods
mov
lcall
dec
jns
testl
imul
pop
in
add
loopne
outsb
aas
ret
and
shlb
cmp
add
lea
shlb
les
or
cmp
sbb
std
pop
addr16
mov
xor
fcompl
push
std
call
pop
fstps
les
sub
hlt
mov
ret
fwait
cmpsb
dec
push
xchg
enter
test
jno
test
jno
adcb
or
mov
int3
push
pusha
cmc
mov
js
aas
pop
sahf
cwtl
xor
lock
pop
push
in
in
and
out
add
js
jle
rol
xchg
cld
jnp
and
clc
cmp
push
push
push
push
lea
push
push
push
push
and
je
not
not
or
test
nop
lea
xchg
cmc
rol
mov
jne
lea
jp
jg
xor
push
push
add
pop
pop
add
push
rol
pop
clc
cmc
call
jl
or
push
test
pop
addr16
addr16
nop
mov
inc
inc
inc
inc
push
push
pop
pop
stc
add
and
jns
push
test
pop
loop
jecxz
loop
adc
cmp
fstl
cmp
pop
pop
add
jns
push
or
pop
mov
xchg
push
call
divb
lods
imul
les
lods
lahf
arpl
and
xchg
jnp
pop
add
fcoms
jg
dec
push
or
add
pop
jg
push
mov
pop
push
jns
and
pop
xor
add
jbe
or
push
cmp
pop
jp
push
inc
pop
or
jo
test
push
pop
and
cmp
je
shl
push
mov
add
pop
loop
jecxz
ljmp
xor
gs
push
ret
popf
sahf
sub
xchg
jl
test
push
mov
push
xor
pop
pop
loop
jecxz
xor
cltd
rorl
sub
mov
push
cld
xor
push
daa
and
insb
pop
stc
jb
dec
push
cltd
mov
cmp
movsb
shr
lods
loop
icebp
sti
add
and
push
sar
pop
push
sub
pop
xor
push
push
pop
pop
push
xchg
movsl
xchg
push
and
pop
push
jge
jne
and
pop
cld
clc
shl
push
js
neg
neg
pop
push
pop
lea
nop
nop
push
push
pop
add
pop
jmp
inc
into
ljmp
pushf
mov
iret
pop
cmp
inc
out
loopne
jns
bound
mov
call
jge
imul
repnz
inc
sub
add
ss
lea
xor
add
fxch
pop
pop
inc
dec
push
iret
in
pop
test
dec
jne
push
movzbl
or
stc
loop
pop
jbe
push
jno
jno
add
pop
push
jae
push
push
inc
pop
pop
pop
sub
push
call
dec
or
xor
jecxz
enter
cld
mov
jae
sbb
and
aam
adc
insl
shlb
jecxz
lds
aam
ja
loope
insb
stc
or
notl
in
les
jmp
loop
jecxz
or
jmp
xor
mov
movsl
xchg
loopne
iret
nop
es
pop
rcrb
in
movsb
popa
dec
repz
sbb
push
xchg
xor
enter
or
inc
and
daa
xor
outsl
jp
push
mov
adc
ret
inc
push
dec
pop
cmp
and
jne
jae
push
sub
pop
cld
stc
add
cmc
cld
stc
leave
cmp
push
mov
rclb
bound
les
and
lods
clc
ds
arpl
mov
mov
cmc
jbe
sub
pushf
ljmp
dec
rorb
jl
push
pusha
cmc
gs
fcoms
or
divb
aas
mov
mov
rcl
mov
push
out
mov
arpl
jns
inc
cmp
inc
push
out
inc
test
pop
pop
xchg
xchg
xlat
dec
and
xor
cwtl
pop
fwait
and
mov
sub
bound
repnz
incb
dec
pxor
or
pop
rcll
pop
add
mov
add
mov
jbe
orl
jecxz
xor
popf
cmp
adc
sub
movsb
inc
adc
jl
jle
xor
fs
ret
and
out
iret
adc
ret
jge
js
orb
adc
jecxz
sub
push
push
leave
leave
in
sbbb
pop
adc
mov
cmpsl
lods
dec
push
xor
ss
xchg
out
bound
incb
je
aam
sbb
pop
mov
mov
repnz
or
sbb
test
shl
push
mov
imul
cmp
out
out
xchg
ds
daa
xlat
inc
mov
mov
xor
out
lahf
sub
test
mov
lods
jne
fcompl
test
out
adc
dec
pop
jbe
stos
scas
sahf
mov
pop
inc
mov
cli
lock
or
adc
or
iret
or
rcr
loop
lods
mov
xor
ret
scas
sti
movl
cli
sub
mov
cltd
cmpsl
or
movsl
mov
push
adcb
pop
out
je
in
test
pop
add
in
ret
hlt
fdiv
dec
popf
xor
xchg
sbbl
popa
je
outsb
push
mov
add
xchg
aaa
sub
imul
popa
fildll
mov
stos
testl
sbb
addr16
shll
in
roll
cli
cli
fmuls
les
rorl
nop
sbb
adc
mov
push
cld
pop
nopl
std
xor
xchg
xchg
lret
icebp
out
sbb
sub
mov
aaa
push
arpl
adc
inc
xchg
xchg
sub
ss
xchg
cld
scas
out
into
loope
arpl
enter
cltd
mov
sti
ret
cmp
push
xchg
cwtl
push
data16
ljmp
dec
jl
lods
fcomi
ss
clc
repnz
ss
insb
aaa
and
fsubrl
xchg
pop
add
je
push
mov
xorb
lahf
adc
mov
push
sbb
cmp
cmp
mov
fs
lahf
shll
pop
sbb
cmp
test
xchg
fimuls
inc
mov
in
sub
sub
stos
xor
sub
and
iret
sub
push
and
int
decb
ja
mov
xchg
insb
xchg
cmpsl
clc
mov
pop
dec
pop
lods
dec
repz
fidivrs
cli
aad
xor
xor
nop
mov
jp
int3
xlat
cltd
pop
lea
push
nop
in
and
jns
addr16
add
xor
jo,pt
lret
cmp
xor
mov
mov
ret
adc
and
mov
cld
and
test
movsl
jp
outsl
adcl
inc
cmp
test
xor
movsl
add
rcr
out
shll
pop
push
bound
sti
and
test
icebp
mov
addr16
decb
add
shlb
or
pushl
lds
in
xchg
xchg
xlat
lret
sti
push
shrl
ja
mov
and
and
outsb
icebp
mov
icebp
mov
mov
mov
fdivl
out
imul
les
mov
pushl
or
jne
push
sahf
popa
mov
mov
leave
mov
xor
adc
jle
lret
aam
mov
loope
sub
cmp
pop
mov
sub
out
sub
mov
in
inc
jmp
insl
mov
mov
sub
addb
inc
insb
adc
popf
dec
in
mov
xchg
xchg
sub
fwait
in
dec
jns
mov
cld
mov
push
in
negb
mov
push
cld
arpl
popa
les
mov
fcmovnu
xor
pusha
jae
lock
insb
and
mov
jge
sub
mov
ja
and
in
adc
add
cmp
xchg
mov
pop
imul
ret
jl
out
xor
cmp
sub
and
jmp
shll
inc
js
lret
lock
fcoml
fdivrl
cld
push
popaw
cltd
xor
push
pop
shlb
lods
adc
xchg
fisttpll
push
ljmp
pop
leave
xor
loope
pop
sbb
lret
out
adc
push
scas
jnp
and
insb
lods
mov
mov
jmp
loope
repz
mov
pop
paddsb
mov
in
sub
out
test
jno
cmc
lret
xchg
mov
jo
in
xor
dec
je
aad
mov
pop
jl
xchg
aad
cmpsl
inc
int
cmpsl
jnp
xchg
push
scas
rorb
sbb
sbb
and
xchg
cmpsb
dec
aam
cs
sbb
sbbb
mov
and
ss
or
cltd
sti
lahf
in
fucom
xchg
cld
xchg
mulb
cmp
ds
add
xor
fdivrl
popa
fisubrl
push
ja
clc
int3
test
and
dec
lea
imul
les
in
adc
jb
xor
adc
into
jmp
sub
inc
sbb
lods
ja
imul
movsl
insl
or
mov
in
cmp
jmp
push
jne
xchg
outsb
js
out
int
arpl
cmp
int
lods
sbb
lods
xchg
repnz
jbe
cmpsl
sub
inc
jo
fwait
rcr
jno
push
ljmp
cvtpi2ps
xchg
dec
mov
or
mov
add
mov
sub
push
outsb
xchg
rclb
and
mov
sbb
lcall
cli
sbb
sub
daa
cwtl
lcall
mov
les
pop
arpl
add
sbb
call
dec
push
xchg
jg
adc
movsb
add
shrb
lret
lds
sar
push
xchg
scas
stos
imul
mov
lds
ds
orb
inc
inc
in
cmc
add
cmc
iret
or
arpl
js
or
lods
addr16
aas
jle
jnp
cmpb
cmp
cwtl
sub
insl
icebp
push
lahf
pop
lcall
cli
cmp
or
loopne
lcall
pop
inc
fstps
ss
fdivl
push
out
sti
inc
test
or
jo
xor
inc
cmp
lods
out
stc
cmpsl
or
roll
in
iret
movsl
mov
fninit
adc
pop
dec
push
or
or
add
pushf
scas
int
or
xchg
add
icebp
pop
in
lahf
pop
scas
int3
or
inc
mov
xor
fimuls
mov
xchg
sub
dec
xor
pop
cwtl
push
and
jg
or
add
and
jns
rclb
push
sti
call
and
xlat
cmpsb
sbb
je
dec
xorb
fwait
mov
pop
addr16
ds
mulb
sahf
jno
test
iret
push
inc
cmpsb
ret
and
push
mov
data16
cwtl
xchg
jp
aaa
iret
xchg
loope
xor
pop
jp
inc
push
xor
jo
ds
pop
in
icebp
movsb
insl
and
jp
addl
push
dec
push
mov
sub
jne
jnp
mov
mov
mov
lahf
insb
xchg
cmp
popa
cmpsb
test
dec
js
push
cmc
mov
and
enter
jp
xchg
sbbl
fsubl
mov
roll
lcall
fdivrl
jb
fidivs
xchg
arpl
mov
push
mov
inc
lahf
push
adc
xchg
lods
std
push
aas
pushf
mov
iret
popa
add
lcall
cli
inc
adc
jecxz
fisubl
pop
incl
mov
inc
pop
stos
cmpsb
jmp
in
das
nop
pop
xchg
pop
sti
jne
mov
sub
jb
lds
push
mov
fs
inc
repz
jle
das
xchg
push
aaa
mov
stos
das
jle
dec
sbbb
pop
rclb
and
push
lahf
pop
and
and
hlt
inc
stos
sub
xlat
inc
cld
loope
push
addr16
sbb
and
mov
xchg
popf
push
jmp
pusha
das
adc
inc
jl
push
push
dec
mov
sbb
es
stc
add
add
jecxz
push
sub
add
mov
and
mul
mov
aas
and
mov
adc
clc
add
mov
sub
in
test
inc
mov
scas
fisttpl
popa
sbb
sbb
inc
outsl
inc
mov
and
pop
stos
inc
int
xchg
jb
sub
ret
lds
add
mov
add
and
enter
sbb
mov
jae
ds
sbb
and
cld
xor
adc
and
pop
pop
and
jbe
cmp
push
sub
push
cs
popa
sub
adc
pop
fs
push
in
ds
out
jmp
xchg
lcall
das
mov
add
sbb
xchg
mov
ret
pushf
jb
and
inc
out
sbb
and
fmuls
gs
mov
and
pop
sti
mov
push
xor
jb
push
xchg
sbb
mov
adc
ret
jnp
sbb
pop
pop
call
jg
or
mov
ret
push
pop
cmpsb
hlt
lock
mov
out
nop
out
xchg
cmp
inc
xor
data16
push
sbb
incb
or
daa
push
xchg
and
insb
aaa
test
adc
pop
gs
xchg
xchg
cmp
inc
loopne
push
fcompl
and
nop
sub
or
enter
and
cmpsl
sti
mov
inc
mov
stos
pop
sbb
pop
push
call
adcl
in
inc
bnd
xor
inc
cmp
add
and
add
lret
movl
inc
pop
inc
jecxz
cmp
add
loop
arpl
xor
sarl
push
jle
lahf
movsl
cmc
fcmove
sbb
lock
popa
pushf
cmp
mov
insl
push
mov
ret
xor
dec
xchg
xchg
push
lcall
arpl
std
lock
mov
push
mov
das
scas
aam
mov
loop
dec
adc
in
test
loopne
mov
xchg
ja
scas
imul
sub
mov
mov
xor
mov
pop
xchg
inc
les
js
push
fldenv
pop
xorl
xchg
out
inc
enter
push
dec
xor
add
mov
test
stos
and
jge
pop
inc
cli
mov
pop
mov
sub
sbb
jno
adc
mov
mov
xor
int3
push
mov
inc
add
shll
cmp
mov
cmp
and
orl
out
sub
inc
js
push
or
pop
sbb
push
lds
and
sub
push
mov
xchg
dec
leave
sub
outsb
push
push
push
stos
push
das
and
in
sbb
pop
into
mov
outsl
test
mov
fdivrl
in
inc
and
mov
imul
mov
sahf
jo
sub
sbb
pop
dec
xchg
xor
pusha
pop
out
sub
lods
aad
lock
dec
xor
fwait
pop
in
inc
jmp
hlt
xchg
xor
jle
hlt
scas
mov
mov
jnp
test
jge
hlt
lcall
and
lcall
pop
fwait
out
lret
loop
fmuls
adc
sbb
sbb
and
dec
in
movsl
js
add
adc
ds
xchg
inc
pop
mov
rorb
add
fptan
repz
and
xchg
mov
into
xor
mov
js
ret
push
mov
pushf
xor
test
test
lds
lods
adc
jecxz
fsts
xor
lea
xchg
in
adc
or
insb
xor
enter
int3
pop
jne
aam
fwait
adc
add
dec
lret
and
imul
aaa
lret
stos
sub
pop
mov
or
xor
push
out
nop
mov
iret
add
loopne
iret
add
cmpsb
and
cmpsb
mov
adc
daa
rcrl
nop
jg
or
or
adc
sub
sbb
sti
dec
add
xchg
add
mov
push
les
push
fisubrl
push
cmp
aad
insb
insb
daa
xchg
mov
xchg
bound
push
fdiv
mov
cmpsl
inc
and
popa
lahf
push
js
push
jg
jmp
jmp
ret
mov
shlb
pop
jmp
pop
mov
xor
leave
es
lcall
pop
mov
ja
les
es
dec
push
and
jle
arpl
lods
cwtl
inc
fs
mov
aaa
fisttpl
xor
mov
and
push
dec
jge
cli
jns
ja
cmpsb
imul
push
push
imull
sahf
repnz
out
adc
scas
jecxz
enter
std
mov
dec
mov
jno
fbstp
inc
stos
or
sbb
sbb
das
inc
out
jmp
repnz
dec
mov
hlt
mov
and
repnz
jge
inc
mov
sarl
sbb
mov
mov
lock
xorl
fstpt
xchg
popf
sub
out
loop
push
dec
pusha
xor
dec
mov
aam
cltd
adc
add
pop
loope
mov
xchg
mov
cmp
lea
cmp
jmp
sub
and
ja
push
ret
flds
mov
rcrb
add
ljmp
lea
xchg
stc
aas
xchg
and
pop
inc
lret
fdivl
das
scas
dec
hlt
xchg
andb
xchg
in
dec
xchg
addr16
daa
dec
or
ljmp
jp
shll
mov
jb
jg
shrb
rorb
cmpsl
cli
push
cmpsl
inc
cld
imul
lcall
xlat
mov
pop
scas
pop
pop
dec
dec
add
dec
pop
int
test
sarl
lahf
sub
cwtl
xor
adc
jo
pop
and
adcl
cmp
scas
dec
dec
stos
les
sub
mov
push
orb
rorl
hlt
mov
jmp
into
ret
pop
jo
aaa
inc
cltd
dec
leave
ret
pusha
pop
xchg
mov
test
nop
sti
popa
bound
repnz
adc
subb
clc
pop
push
cmp
pop
jb
jmp
daa
mov
sarb
out
leave
sub
jae
ret
add
sti
lock
xchg
js
adc
test
arpl
arpl
push
add
icebp
cs
rep
push
push
ret
ljmp
xor
mov
in
push
enter
cmp
subb
out
mov
mov
jp
mov
inc
pop
fmull
loope
dec
fmull
inc
push
hlt
inc
fnstcw
decl
cmovnp
xchg
sub
and
cmpb
and
divl
inc
or
add
fnsetpm(287
push
test
cmp
in
adc
cmp
pop
in
aas
das
lods
fisttps
adc
push
cmpsb
scas
mov
lcall
leave
mov
push
fldenv
data16
mov
dec
cwtl
mov
aas
cld
test
fwait
ljmp
xchg
aad
fs
xor
mov
push
cli
xchg
fst
ficompl
ret
adc
mov
dec
sub
jp
mov
repnz
in
adc
push
in
insb
jb
pop
or
fdiv
std
std
lret
add
push
addr16
adc
call
clc
cmp
xlat
or
test
js
or
mov
inc
ret
push
aaa
lahf
xorb
inc
push
cmp
dec
mov
push
ror
js
aaa
rclb
jae
scas
sbb
push
mov
pop
push
stos
ret
sub
xchg
push
dec
testl
data16
lods
jmp
ja
jbe
and
lahf
popa
mov
lret
aas
out
lds
dec
pop
or
faddp
stos
push
scas
sahf
dec
inc
cmp
js
xchg
xchg
pop
add
mov
in
in
hlt
mov
and
repz
cmc
adc
lret
movsb
or
jne
inc
ret
fs
andl
leave
sbb
leave
push
adc
inc
mov
pop
inc
mov
out
ffree
dec
push
adc
int3
sbb
clc
pop
adc
push
roll
je
aad
sub
dec
xchg
outsl
sbb
enter
push
pop
xlat
pop
mov
rcrb
jbe
or
orl
xor
lcall
sbb
sbb
inc
pushf
pop
iret
test
or
pop
fs
mov
or
es
mov
mov
jae
int
pusha
jae
in
jb
daa
mov
aad
push
inc
or
cmpsl
push
jb
lock
push
dec
ficoml
aam
repnz
shlb
dec
dec
out
xor
push
push
jnp
in
pusha
movsb
add
xor
stos
xchg
push
dec
data16
divl
stos
cmc
es
fistpll
out
jno
bound
adc
movsb
adc
or
popa
inc
pushw
push
aaa
xchg
xor
xchg
leave
mov
dec
ds
ds
jmp
ss
sbb
xor
mov
push
add
dec
pop
lret
xor
vpcmpgtw
mov
es
xor
insl
js
stc
dec
sub
scas
adc
add
push
es
or
lahf
xor
jbe
sbb
inc
ss
jmp
pop
leave
pop
iret
jl
xchg
xorl
mov
lret
add
sti
or
pop
mov
lret
divl
push
sbb
inc
mov
and
fsts
or
iret
jp
lret
leave
data16
inc
mov
rorl
add
mov
sbb
cmp
ficomps
cli
std
or
outsb
lcall
add
fisttpll
movsl
nop
cs
imul
add
push
sbb
outsl
pop
jnp
push
lcall
sbb
xchg
inc
xchg
xchg
fwait
shlb
xchg
xor
push
fcomps
ja
in
xor
sub
fstpt
daa
mov
loope
push
push
pop
movsb
adc
add
or
add
or
aas
imul
mov
adc
shl
sti
and
cmp
ss
jns
sahf
lret
lods
loope
insb
gs
add
cmp
mov
jp
or
jne
mov
cmp
push
adc
inc
or
and
xor
les
les
notb
push
pop
ret
xchg
and
cli
push
cmp
mov
out
fistps
jg
imul
mov
in
xor
idivl
xchg
mov
std
aam
pop
xor
ficoms
aaa
sarb
enter
addr16
insb
stc
dec
jle
mull
fisubs
roll
push
out
jecxz
xchg
iret
jmp
xchg
inc
mov
addl
aad
pop
xchg
jb
stos
in
jl
xor
mov
imul
mov
fdivrs
inc
xor
ret
cmp
or
xchg
inc
in
insb
mov
xor
add
or
mov
imul
or
pop
out
mov
sub
jns
mov
gs
add
and
cmp
push
sbb
std
lock
dec
out
lock
xchg
mov
mov
and
push
imul
jl
xchg
xorb
in
and
pop
out
jae
xchg
inc
call
push
repnz
aas
mov
sub
imul
inc
test
dec
sub
es
xor
test
pop
test
xchg
out
mov
xchg
and
mov
hlt
pop
dec
cld
imul
leave
pushf
icebp
mov
rcrb
std
fcmovu
xchg
push
mov
sbb
pop
push
mov
xor
shrb
cmp
movsb
add
mov
and
and
movsl
mov
push
inc
xchg
and
sub
ret
dec
out
mov
rclb
mov
push
pusha
test
mov
lahf
mov
sti
and
out
jecxz
pop
ds
mov
cmp
add
dec
mov
xchg
cmp
sbb
shrl
ret
popf
dec
std
arpl
pop
sub
dec
or
outsb
lea
pop
push
sarb
les
lcall
adc
jecxz
movsl
jo
or
ret
cmp
pop
fldl
inc
xchg
hlt
dec
orb
xor
add
stos
jns
xchg
xchg
mov
mov
mov
mov
adc
xchg
insb
or
and
pop
ss
popa
repz
push
dec
mov
cmpsb
cmp
popf
loop
sub
in
icebp
fistpl
mov
mov
xor
xor
daa
mov
push
in
stc
cmp
or
jmp
mov
aam
xchg
and
inc
dec
jno
mov
sarl
int3
out
cmp
ficoml
rdmsr
pop
or
enter
or
adc
sub
cmp
adc
jl
js
inc
mov
cld
test
mov
mov
mov
sahf
sbb
jae
xchg
push
fldcw
movl
and
cmp
roll
imulb
in
adc
rcr
and
clc
test
mov
jno
push
leave
lret
adc
mov
es
or
imul
jae
cmc
dec
hlt
stos
stc
mov
mov
test
or
cmpsb
mov
xchg
aam
add
mov
mov
inc
add
mov
add
call
mov
push
stos
cmp
inc
movsl
jne
push
jp
lods
jo
je
shrl
mov
add
xchg
repz
sbb
and
cmc
ss
xor
push
ljmp
shll
mov
loope
xchg
ret
sbb
jne
xor
into
mov
mov
rclb
repnz
sbb
push
dec
pop
clc
insl
sbb
sti
sbb
inc
pop
cmc
pop
lcall
fdiv
push
mov
mov
xchg
cmp
xor
and
mov
xchg
dec
imul
ljmp
jl
adc
xchg
or
addl
cwtl
shl
cmp
cld
outsl
add
das
jp
or
subb
test
sub
int3
cmpsl
stc
add
jge
daa
arpl
push
and
dec
jmp
push
popa
int3
pop
xor
inc
dec
ret
jb
mov
mov
shlb
out
jl
fdivs
inc
cmc
sbb
xchg
popa
push
xor
cs
outsb
out
sub
mov
adc
or
pop
sbbl
jle
out
aam
aas
sub
sti
daa
add
mulb
xor
mov
add
jne
sahf
jno
push
sbbl
mulb
push
lea
sbb
int3
je
pop
in
mov
mov
shlb
jle
call
fcmovb
lret
jno
pusha
push
push
and
and
inc
mov
pushf
lods
jae
push
jmp
addr16
shrl
jae
push
and
arpl
out
mov
lds
popa
jne
inc
shrb
sti
pusha
jo
test
stos
cmpsb
mov
bnd
dec
and
mov
pop
cmc
mov
pop
test
orb
mov
fsubrl
repnz
mov
mov
xor
sub
out
out
popa
imul
push
or
rcll
dec
xor
int
inc
mov
xchg
daa
outsb
sub
dec
int
std
insb
jo
fs
push
xor
das
aam
aam
xor
leave
gs
fwait
clc
and
test
repz
in
xchg
repz
shrb
sbbb
jnp
jmp
mov
inc
xor
push
mov
jns
jns
shrb
mov
fs
icebp
pop
jl
rcl
test
sbb
insb
addl
add
jbe
xor
sub
mov
mov
xchg
inc
mov
mov
or
sbb
push
or
in
or
sbbb
cli
out
aaa
ljmp
mov
iret
push
cmc
pop
sub
stos
inc
adc
mov
sub
mov
add
adc
js
sub
xor
repz
add
push
inc
js
or
mov
outsb
cs
dec
adc
out
into
je
lahf
xor
and
mov
cmp
stos
in
iret
adc
arpl
add
xchg
rcll
das
push
aaa
mov
into
out
cmpb
iret
rclb
mov
fdiv
icebp
mov
push
shlb
repnz
mov
sbb
lea
xchg
mov
mov
pop
dec
push
sbb
inc
loop
xor
pop
mov
fs
out
fwait
loopne
pop
dec
popa
es
fstps
clc
fdivrs
jmp
out
dec
cld
repnz
mov
ficoms
out
push
mov
mov
ror
insl
push
aas
popf
cld
lods
sti
mov
sub
pop
daa
jl
sub
gs
sbb
arpl
sbb
xor
test
sub
mov
add
pop
add
sti
pushf
outsl
loop
xor
mov
insl
and
inc
add
sbb
xchg
jo
scas
aam
insb
jne
sub
sub
mov
mov
and
mov
insb
jle
fdivrl
mov
cmp
mov
pop
stos
push
sbb
test
cwtl
pushf
aad
in
mov
inc
test
sub
pop
stc
dec
out
jnp
inc
iret
inc
in
lock
pop
xchg
jecxz
imul
push
xor
xchg
xchg
leave
adc
mov
cmp
jg
bound
outsl
daa
ficomps
sbb
shll
xchg
push
loopne
out
pushf
rep
aaa
das
cmpsl
test
hlt
or
popf
aam
imul
mov
neg
std
ljmp
sub
mov
adc
lret
je
xor
cmp
xchg
xorl
mov
fst
xor
mov
push
cmp
sbb
daa
insl
out
sbb
cmc
jecxz
and
je
xchg
xor
mov
arpl
fidivrl
mov
inc
in
shll
fsub
mov
cmpsb
dec
add
pushf
xchg
ds
andl
inc
jne
lock
stos
push
mov
into
add
or
aaa
aam
test
and
mull
ljmp
lods
pop
add
shlb
dec
sti
pop
aad
lock
out
dec
fs
add
add
xor
xor
sub
jp
or
mov
push
repnz
inc
and
loop
sahf
scas
add
loopne
push
loope
sub
add
inc
sub
pusha
add
flds
into
jp
or
ja
lea
sub
inc
call
pop
lahf
jg
ljmp
data16
movsl
pop
lret
lock
mov
aad
mov
mov
sbb
jle
js
jmp
xlat
loop
and
jno
push
out
sbb
push
mov
and
shlb
xor
out
into
pusha
sub
imul
shrl
pop
hlt
add
aam
xchg
fnstenv
or
fisttpl
std
sub
pop
sub
sub
cmp
sub
ds
outsl
dec
mov
enter
clc
sub
adc
push
std
test
jnp
mov
xchg
pusha
mov
sub
outsl
inc
add
pusha
or
lock
cli
xchg
lahf
inc
and
insb
pop
test
setge
jg
inc
lahf
dec
in
adc
sbb
int
add
or
cmc
ficompl
ljmp
lret
sahf
aas
bound
filds
popf
adc
push
cwtl
js
inc
mov
and
cmp
mov
rcrl
sbb
push
mov
adc
push
mov
adc
cwtl
mov
xchg
out
xchg
fs
add
jg
mov
jecxz
das
cmp
or
dec
fisubl
in
rclb
push
fs
xor
mov
jne
nop
data16
adc
ss
jle
std
stc
mov
mov
adc
outsb
gs
outsl
bound
dec
cmc
or
cmpsb
mov
jle
fidivl
sub
test
ja
fiadds
cli
movsb
stos
cmpsl
inc
faddp
out
pushf
outsb
adc
dec
rclb
imul
adc
aaa
rep
rorb
das
scas
scas
popa
scas
mov
pop
dec
lea
xlat
dec
cmp
push
xchg
xchg
dec
repnz
in
jle
ss
cltd
xchg
mov
rcr
mov
subb
int
sub
in
mov
jne
pop
xor
popl
loop
and
and
mov
mov
filds
and
dec
jb
jne
mov
fcomps
jne
jge
fmull
dec
jnp
add
mov
sbb
sbb
xchg
jo
test
push
inc
mov
pop
mov
jmp
push
test
outsb
add
mov
add
push
test
ficompl
adc
mov
and
xor
in
jle
sub
push
xor
neg
mov
cli
adc
out
mov
mov
or
adc
push
jno
movsb
scas
xor
mov
ljmp
in
mov
and
xchg
mov
cwtl
mov
mov
pop
mov
add
loop
xchg
push
fwait
jo
dec
push
inc
lcall
push
leave
out
sbb
addr16
mov
pop
mov
cwtl
mov
jecxz
mov
mov
ret
stc
sbb
loope
xor
les
xor
sub
xchg
loop
repz
out
adc
std
cld
cmp
push
fsubl
out
adc
in
pop
adc
int3
test
push
xchg
fidivrl
hlt
daa
add
lahf
push
push
mov
lcall
pop
scas
mov
cmp
ja
and
adc
fildll
aam
aam
insb
or
push
mov
data16
xor
inc
or
inc
jns
out
rolb
cld
mov
lea
or
sti
mov
mov
pop
add
popa
es
addb
xchg
lea
xor
push
cmp
mov
shl
pop
xchg
faddl
aas
je
inc
es
mov
ljmp
mov
cmp
add
inc
or
fcomps
mov
out
fwait
xor
aaa
andl
mov
push
lret
lock
and
addb
xor
and
std
scas
ror
jl
mov
pop
adc
sub
inc
pop
xchg
xchg
inc
not
loope
lahf
cmp
daa
nop
in
and
out
fnstcw
pop
xor
insl
in
xchg
lea
xchg
lret
sbb
mov
aad
add
lcall
out
loope
addr16
test
fwait
stos
leave
addr16
test
and
sbb
inc
jmp
add
mov
push
dec
sbb
jns
dec
pop
inc
and
data16
xor
or
xchg
cmp
mov
xor
cmp
je
dec
mov
cs
fstpt
push
mov
cwtl
sbbb
enter
mov
jp
mov
adc
gs
push
sarb
cmp
inc
mov
jmp
cmpsl
pop
imul
cli
and
fisubrs
test
sbb
rolb
sarb
and
add
cmpl
je
ljmp
xchg
push
in
sbb
lock
mov
xlat
ret
in
lcall
and
data16
and
out
cwtl
mov
mov
pop
push
outsb
lret
mov
movsl
cld
sub
xchg
cmp
repz
lock
shll
cmpsb
orl
imul
addr16
ds
pop
adc
pop
dec
mov
xor
dec
mov
and
fs
push
jnp
push
cmp
and
dec
scas
xchg
scas
xor
inc
ret
aaa
dec
xlat
rclb
inc
scas
stos
fnstenv
arpl
add
pop
roll
and
cmp
lds
add
ret
pop
jns
mov
xor
sbb
inc
out
xchg
pop
xchg
gs
sub
int3
push
loopne
testl
nop
inc
fsubr
pop
les
adc
or
adc
push
adc
imul
sub
outsb
je
mov
xchg
test
mov
clc
mov
repnz
mov
rorb
mulb
jae
mov
aam
and
pop
fdivrl
js
add
cmp
sar
and
aas
test
push
ret
push
fidivl
add
ffree
outsl
sbb
mov
adc
lods
push
into
lret
cmp
int
vprotb
jle
mov
fmul
jo
and
data16
shll
and
dec
and
mov
out
stc
pop
sti
aaa
jb
jg
and
pop
dec
cmp
pushf
aad
sbb
jo
xor
sbb
pop
and
xor
xchg
xchg
mov
jecxz
int
mul
mov
inc
or
les
jns
mov
sbbb
lods
xchg
ds
xchg
mov
sbb
negl
aas
inc
clc
sbb
filds
cmp
call
movsb
arpl
mov
push
out
outsb
loope
fs
mov
dec
mov
rolb
xchg
and
mov
jns,pt
je
xor
stos
inc
inc
jnp
imull
xchg
bndldx
push
adc
mov
lret
movsl
fs
jnp
xor
push
dec
frstor
pop
pop
lahf
mov
out
add
cmp
shll
nop
adc
outsl
and
leave
xor
push
xor
sbbb
popf
fdiv
in
push
pop
popf
mov
ficomps
lahf
into
mov
jno
fdivs
mov
push
mov
push
insl
inc
repz
pop
fisubrl
lcall
and
pop
icebp
sbb
or
rclb
shlb
dec
shlb
shll
bound
and
mov
mov
jl
jp
js
cmp
mov
add
push
leave
popa
loop
insl
mov
jle
mov
xchg
pop
fstl
push
pop
fbld
outsl
in
je
std
pushf
int
iret
fsts
fcomps
lahf
add
fsubrp
xchg
add
ss
mov
call
inc
in
adc
ss
arpl
push
mov
add
movsb
inc
test
loopne
in
call
les
popf
ljmp
mov
je
mov
xor
sti
mov
subb
ja
fucomp
inc
pushf
into
subb
or
adc
fdivr
out
mov
movsb
in
xchg
inc
add
mov
imul
aad
mov
outsb
inc
cmpsb
subl
mov
add
adc
loope
fs
adc
mov
mov
xchg
ret
cltd
mov
mov
aaa
fisubrl
aas
lret
mov
imul
aas
xchg
pop
dec
or
stc
jg
sahf
lcall
mov
jle
andb
ret
daa
insl
lret
inc
aaa
mov
jmp
aad
lcall
dec
lahf
pop
xor
mov
or
cs
adc
in
fbld
cmp
call
jle
dec
rcll
out
aas
mov
scas
or
pop
mov
adc
dec
outsb
sahf
mov
lret
pusha
outsb
xchg
stos
dec
sahf
popa
pop
xchg
hlt
shrb
leave
add
lock
loop
js
xor
mov
dec
push
xchg
lret
or
cmp
sub
ret
mov
lahf
or
inc
cmpsb
outsb
std
fildl
push
cmpsl
scas
in
shrb
int3
je
mov
cmp
test
xchg
mov
mov
and
mov
in
push
imul
scas
repz
leave
fld
push
ljmp
adc
das
outsb
push
aad
insb
ds
sbb
inc
psllq
adc
xchg
js
mov
xor
int3
vorpd
or
lahf
dec
in
xchg
arpl
dec
adc
fdivl
lahf
mov
imul
lods
pop
insb
addl
xchg
or
push
mov
cmpsl
inc
mov
mov
addr16
or
inc
cmpsb
add
sub
adc
cmpl
ret
pop
addl
addl
addr16
sub
add
and
xchg
jg
jae
aas
test
jl
dec
cmp
mov
mov
fmuls
dec
mov
iret
add
insl
cmp
mov
dec
es
add
and
push
movsl
push
insb
push
inc
add
or
in
add
pushw
sbbb
push
inc
mov
jg
jae
xchg
lcall
xchg
sbb
dec
mov
sbb
jae
jmp
pop
mov
and
lahf
flds
mov
push
add
mov
leave
and
xchg
mov
sub
arpl
aam
or
sub
test
push
jb
jno
popf
inc
in
paddsw
shlb
out
leave
movsl
and
dec
out
mov
and
sbb
pop
dec
sub
cmpsl
mov
mov
push
repz
lock
mov
adc
adc
cltd
or
pop
movsb
mov
fistpll
adc
cmp
jp
jo
mov
xchg
icebp
or
outsb
inc
std
xchg
mov
adcb
cmpsb
add
mov
bound
clc
sbb
popa
test
jmp
jle
movsb
xchg
inc
arpl
dec
or
adc
stos
push
sub
sbb
mov
fs
jle
das
cli
in
pop
or
dec
in
dec
pop
mov
stos
xchg
loopne
xchg
cmp
test
cmp
jns
push
push
out
push
sar
pop
xlat
ffree
or
rorl
es
fdivl
enter
rcr
lahf
in
xchg
mov
ret
in
int
pop
fucomp
mov
pop
cmp
mov
lds
icebp
lret
daa
mov
jno
and
popf
push
pause
mov
shll
popl
mov
xchg
fwait
inc
in
xchg
mov
cld
inc
pusha
aam
int3
or
jmp
mov
mov
pop
dec
mov
inc
icebp
rcrl
xor
mov
stc
pusha
popf
mov
sub
clc
sub
ror
cmp
add
cmpsb
data16
xlat
and
cmp
cmp
aam
shlb
repnz
call
adc
xor
mov
push
shlb
inc
orb
popa
or
fwait
jecxz
mov
adc
sbb
jb
mov
fmuls
mov
pop
cmp
les
sub
mov
dec
xlat
nop
sub
mov
nop
pop
jbe
inc
outsb
in
in
out
sbb
sub
bswap
into
mov
dec
and
into
push
jne
outsb
cmp
fnsave
lds
lret
aam
jnp
loopne
adcl
ret
fcoml
add
mov
and
call
adc
aad
dec
jle
inc
aas
pop
mov
xorl
addl
add
xchg
jg
mov
or
dec
popa
dec
mov
fildl
and
add
sar
or
pop
and
mov
pop
pop
js
lret
fisubs
jge
ret
mov
pop
mov
sbb
ljmp
addr16
sbb
outsl
mov
or
jp
push
nop
and
das
xchg
sub
test
mov
adc
xor
loop
fiadds
pushw
cmp
movntq
and
or
xor
scas
aam
stos
andb
pop
call
inc
outsl
jae
cmc
roll
xchg
or
outsb
out
testl
jge
stos
repz
mov
sub
jo
pop
jg
pop
into
cmpsl
lret
xchg
cs
and
enter
loope
and
mov
cmp
pop
insb
subb
sbb
add
dec
shrl
lret
add
and
mov
out
pusha
lea
jp
fisttpl
dec
out
xchg
mov
gs
mov
push
add
rcrb
sahf
jmp
fs
hlt
movsb
jo
es
mov
xor
sub
cmpsb
iret
push
xchg
adc
sub
movsl
lods
fwait
imul
cmp
jb
mov
adc
sbb
xlat
filds
dec
loopne
shlb
fs
sbb
xor
stos
dec
ror
mov
fiadds
or
jmp
pusha
cmp
pushf
int3
push
hlt
and
shll
nop
xchg
dec
ret
pushf
in
or
ss
stos
xchg
mov
xchg
mov
add
lds
cmp
das
xorl
mov
loopne
jge
bound
add
lret
or
jae
jns
aaa
mov
xlat
adc
adc
xchg
sbb
xor
or
push
sub
arpl
push
ss
mov
int
scas
pop
inc
xor
inc
lods
outsb
in
mov
dec
fistpll
or
sti
push
mov
stos
fwait
mov
fmull
es
mov
xlat
adc
rclb
xchg
sti
fdivrl
pop
pop
sbb
add
adc
imul
xchg
inc
mov
push
rclb
xchg
push
add
pushf
movsb
and
out
or
es
lea
in
pop
sahf
mov
inc
mov
enter
imul
adc
sbb
sub
movups
das
jae
pop
cmp
add
fwait
xor
jbe
sbb
or
or
shl
mov
sub
or
mov
fcoms
ja
push
mov
mov
push
fsubrl
outsl
stc
mov
xor
icebp
test
lods
std
inc
sub
mulb
add
mov
in
jmp
imul
cmpsl
stos
mov
fidivl
rcrb
out
ret
and
pop
and
test
repz
dec
add
repz
out
out
cld
push
sahf
cmc
dec
inc
mov
xchg
cmp
lods
sbb
mov
iret
or
pop
cmp
sbb
loopne
and
in
mov
movsb
mov
and
es
push
sub
xlat
and
sbb
js
imul
cmp
jbe
sahf
sarb
outsb
sbb
mov
aad
loopne
inc
dec
repz
test
jle
movsb
dec
or
pop
out
xor
adc
xchg
outsl
pop
sarl
fmuls
aam
fildl
add
xchg
fimuls
push
push
mov
xorb
aaa
pop
adc
jo
sub
fisubrs
adc
sti
nop
addr16
in
sbb
mov
aaa
dec
lret
inc
inc
shrb
mov
subl
and
inc
dec
jno
xchg
aam
ja
movsl
movsb
mov
or
jecxz
rcrb
lcall
lcall
sub
adc
jb
out
sub
xor
mov
mov
dec
xchg
or
xor
adc
in
cmp
aas
adc
xor
inc
or
leave
cmc
fcmovnbe
or
xchg
jno
jp
lret
cmp
lock
ds
loopne
mov
ljmp
inc
jle
mov
mov
dec
aad
cmp
xchg
pop
and
xor
cmc
loopne
call
push
outsb
lahf
imulb
lea
and
mov
and
mov
mov
xchg
push
leave
ss
add
mov
jg
mov
jg
lahf
ret
bound
stos
stc
mov
insb
mov
xchg
adc
stos
inc
pop
push
adc
cli
idivl
dec
cmp
std
outsb
xor
adc
add
xor
fcomps
je
out
add
cltd
dec
je
je
xor
mov
dec
aam
test
jg
imul
or
jne
dec
jbe
mov
and
cmp
ret
sub
shl
mov
push
ds
mov
test
add
jns
jnp
add
mov
mov
push
sbb
mov
inc
jle
lock
js
lea
daa
lcall
sbb
cmpsl
mov
mov
inc
xchg
cld
jb
xor
inc
sti
js
jbe
cld
in
pop
and
or
js
sub
mov
aam
stos
and
mov
stos
ds
dec
into
push
popa
in
cltd
addl
cmp
stc
fwait
bnd
scas
add
iret
fistl
lret
xor
cmpsb
test
jb
icebp
out
arpl
popf
push
into
mov
push
iret
lock
cmpsl
add
add
out
add
and
dec
imul
rorb
and
enter
xchg
cmp
in
outsb
xchg
mov
xchg
mov
into
or
push
sub
into
mov
lock
lret
pop
lret
mov
shl
sbb
pop
shlb
sbb
add
fucomi
or
mov
in
sub
inc
adc
movsb
insl
mov
inc
sahf
dec
int3
ret
cltd
scas
jns
pop
xor
xor
and
or
or
sub
inc
lret
popf
jle
xchg
fsub
or
fwait
hlt
test
sahf
lahf
cmp
aas
insl
dec
out
mov
cmp
mov
pop
scas
lahf
inc
and
icebp
add
mov
seto
es
xchg
push
int3
mov
test
dec
test
repz
and
orl
pause
or
mov
add
and
mov
or
fs
fs
mov
insl
fdivs
jne
stc
inc
add
or
add
sti
sbb
xchg
jae
daa
stos
insl
in
jnp
mov
movsb
cs
xlat
aas
bound
orl
lea
pop
mov
lret
enter
mov
movsl
test
lea
pshufw
push
sbb
jb
adcl
jecxz
scas
int
sbb
jnp
rolb
hlt
in
xlat
pop
ret
sub
and
adc
cmc
mov
inc
and
out
inc
push
popl
jb
pusha
pop
pop
in
in
mov
into
mov
mov
inc
jl
cmp
fstp
push
fdivl
outsb
js
imul
repnz
faddp
and
mov
js
mov
adc
ficoms
fistpl
pop
push
rcrb
enter
xor
sti
fistpll
rorb
and
inc
inc
mov
sub
dec
pushf
mov
push
shlb
cmp
dec
test
xchg
pop
scas
mov
xchg
in
pop
push
jl
sub
divb
ret
in
xor
or
pop
fdivl
fdivrs
push
aam
pop
and
call
lcall
ss
in
jl
jg
mov
dec
es
lcall
pop
fistpll
ds
js
push
aad
ljmp
fldl
mov
shrl
mov
push
xor
pop
testb
xchg
push
or
xor
mov
ljmp
out
out
imul
je
cmp
dec
dec
ret
in
cmp
push
and
inc
mov
adc
push
push
shrb
imul
stos
lret
dec
jmp
sub
jmp
mov
xchg
shrb
jae
test
push
or
add
insb
out
decb
mov
fs
std
jecxz
clc
icebp
fmulp
ret
iret
sub
call
push
pop
mov
imul
push
mov
mov
and
outsb
pop
cmp
jo
mov
lds
xor
movsl
lea
int
jmp
xchg
mov
mov
jle
in
ret
test
iret
push
and
mov
int3
sti
test
cwtl
lock
mov
scas
add
mov
push
xchg
out
xor
addr16
push
cmp
pusha
scas
dec
jbe
rcrb
mov
xlat
jle
push
lods
xor
enter
in
sbb
pop
jnp
sub
cs
push
xchg
sbb
and
xchg
fwait
or
sbb
push
dec
int
xor
loopne
rcr
push
clc
jl
dec
adc
outsb
pusha
cmp
push
lret
incb
das
je
ret
mov
xor
push
xchg
xor
pop
mov
ss
ds
jmp
test
mov
pop
jp
mov
test
push
dec
sub
inc
or
pop
in
sub
jp
jo
cmpsb
xor
imul
adc
lret
and
mov
in
pop
sub
outsb
push
jge
push
sub
ljmp
int
push
loopne
inc
inc
je
testl
test
loope
setl
lret
mov
sahf
inc
and
cmp
mov
dec
push
fadd
push
lret
jbe
xor
mov
arpl
int
or
js
pushf
data16
push
sub
das
cmc
push
pop
aas
mov
and
aam
das
jle
rcrl
push
ror
pop
mov
cwtl
test
aaa
xor
pop
fs
sbbb
sbb
into
gs
add
jle
cld
js
pop
dec
inc
std
add
decb
call
mov
addr16
pop
adc
pushf
mov
pop
xchg
push
mov
sub
lahf
decb
paddw
mov
push
into
fisubs
das
das
test
test
dec
pop
sub
push
add
pop
dec
popf
jnp
outsl
mov
pop
xchg
or
pop
jmp
jmp
and
push
shr
dec
repz
push
test
enter
xchg
pusha
cli
jae
or
clc
bound
ds
icebp
sbb
out
ret
roll
movsb
xor
icebp
int
inc
sbb
stos
and
add
xor
push
ja
cmp
sbb
inc
icebp
ficoms
jae
sub
and
mov
jb
xchg
jne
addb
lods
fdivrp
test
cmp
xor
add
xor
ud1
jge
cs
cmpsl
in
inc
fidivs
shr
dec
ds
lcall
cli
add
xchg
daa
sub
xchg
stc
mov
dec
imul
fistpll
in
jb
dec
cmp
jo
pop
or
loope
inc
hlt
es
mov
pop
repnz
sub
call
sarl
jbe
adc
clc
mov
mov
mov
cmp
pop
shrb
fsubs
or
dec
mov
stc
shll
or
in
rolb
mov
push
xchg
stos
push
leave
dec
ret
jge
mov
jb
shll
popa
push
inc
and
rep
popf
bnd
out
repnz
enter
sub
nop
movsb
aas
fsubrl
push
lcall
inc
mov
dec
arpl
mov
mov
ficoms
and
add
pop
dec
je
fistpl
push
fs
push
inc
cld
cmp
ret
mov
jl
fwait
mov
sub
jo
sahf
adc
jmp
lods
outsl
xchg
cmp
incb
mov
cmp
push
flds
or
jnp
gs
xlat
sbb
mov
mov
test
mov
cmc
pop
inc
push
mov
fistpll
icebp
add
in
push
mov
and
cmp
ds
addb
js
cmp
adcl
cs
mov
cltd
sbb
call
icebp
pop
in
xorl
cmp
mov
sub
jg
repz
dec
fstpl
es
movzbl
mov
ffreep
or
cwtl
mov
out
or
and
fldenv
xchg
rcrb
xor
inc
push
lods
jge
loopne
test
add
jnp
mov
ret
out
jmp
test
jecxz
dec
lea
fisubl
lret
mov
ds
lea
cmpsl
clc
xchg
pop
dec
push
ret
add
mov
fisubl
mov
and
sub
adc
sub
roll
shl
dec
mov
jp
push
ds
imul
cmp
fimull
cmp
cmp
ret
lret
pop
cmpb
or
mov
je
push
pop
mov
dec
js
cmc
dec
push
in
dec
and
pop
push
mov
fcomps
out
sbb
xor
sub
push
cwtl
inc
mov
lods
dec
aam
fmull
insl
push
neg
xor
cmc
inc
loopne
push
mov
aam
and
xchg
imul
stos
adc
mov
mov
xor
cmpsb
cmp
push
iret
repz
xor
loope
lret
cmp
push
or
mov
ja
fimuls
repnz
mov
push
sbb
test
cmp
aas
daa
jl
js
add
sbb
je
sbb
clc
jnp
data16
pop
imul
sbb
jno
sahf
xor
dec
adc
adc
in
addr16
sbb
mov
sub
sbb
add
je
mov
fs
movsb
out
push
insb
xchg
cmp
pop
sahf
fwait
push
inc
insl
icebp
and
inc
lret
fs
and
sbb
sub
add
mov
xchg
icebp
int3
insb
pop
xchg
xchg
sarb
std
imul
repnz
add
sti
sahf
xchg
cs
xor
repnz
fs
fcomps
sarb
and
add
dec
or
add
push
adc
mov
ljmp
fistpll
js
test
mov
mov
rolb
push
push
out
jmp
movl
mov
stos
jns
xchg
adc
cmp
das
add
leave
dec
jo
pop
sbb
sub
mov
fisttpll
add
jbe
mov
das
sbb
pop
in
mov
sub
mov
mov
mov
aas
test
movsl
adc
test
aad
aad
mov
xor
mov
popf
xor
popa
and
cmp
aas
in
mov
pop
cmpsl
pop
push
push
fisubrl
jle
cmp
dec
xor
mov
out
and
xor
out
daa
jle
cwtl
xlat
rcl
mov
adc
addl
aam
add
jecxz
repnz
daa
aas
and
pop
aam
int
lods
cwtl
stos
lcall
sbb
test
shll
ret
pop
clc
mov
fadd
and
mov
mov
and
mov
mov
pushf
pop
fnstcw
gs
icebp
mov
cmpsb
lods
pop
idivb
xchg
sbb
mov
dec
ficompl
push
push
pop
ljmp
xchg
sbbl
push
dec
push
es
ss
dec
ret
mov
cmp
mov
xchg
loope
mov
scas
fnstcw
fcomps
lock
inc
adc
cmpsb
mov
movsl
rcl
inc
insb
push
pusha
mov
pop
and
aad
jl
loopne
sbb
pop
clc
sbb
add
bound
fidivrl
rclb
cli
mov
xchg
out
dec
lahf
gs
and
dec
imul
pop
and
sbb
inc
mov
test
jecxz
cmpsb
cli
jle
jb
rorl
je
imul
xchg
push
pop
jge
lods
sbbb
cld
xor
push
stc
xchg
mov
div
addr16
jae,pn
int
and
xor
cmp
jbe
xchg
mov
xor
mov
xchg
inc
pop
mov
xlat
fcompl
cmp
xchg
xchg
push
jns
jmp
mov
sub
push
mov
inc
sub
outsb
pop
xchg
and
int3
addr16
popf
cmp
sbbb
std
xor
in
icebp
jae
ret
dec
adc
dec
shl
inc
movsl
push
mov
adc
fsubs
lds
loopne
push
ret
fadds
jecxz
mov
push
jl
cwtl
dec
jmp
push
jg
aaa
lret
xorl
in
js
incb
in
fucom
mov
lret
jecxz
jbe
stos
xchg
jl
push
mov
push
inc
out
sbb
xor
cmp
loopne
sub
clc
ret
sbb
andl
stc
sbb
stos
lret
iret
ljmp
in
fnstcw
aad
and
push
in
je
or
stos
cmpsl
xchg
cmp
icebp
inc
add
push
lds
add
push
cmpsl
outsl
cmp
jo
sbb
or
adc
jns
or
and
pop
mov
push
testl
in
pop
mov
pushf
mov
sbb
xor
xchg
outsl
shll
push
mov
sub
outsl
cmp
in
lahf
mov
inc
inc
jbe
stos
lret
inc
pop
mov
ficoms
out
jno
fs
dec
mov
jnp
test
shl
cmp
out
add
ficoms
lret
aad
mov
mov
ljmp
inc
add
iret
jge
jmp
or
outsb
inc
jge
mov
in
jp
inc
call
enter
xchg
dec
stos
xchg
pop
fistpll
loop
pusha
dec
xchg
push
hlt
ret
insb
xchg
push
repz
add
push
add
mov
push
mov
pop
aas
out
pop
daa
test
cwtl
adc
sbb
pop
dec
mov
fldl2t
das
cmp
and
in
ja
inc
cmp
mov
stos
out
add
mov
outsb
add
out
ret
xchg
mov
cmp
jae
es
sarb
inc
push
es
ret
jle
mov
sbb
xchg
mov
out
sarb
in
ss
xchg
pop
add
cltd
and
xchg
rolb
push
mov
or
push
and
xor
mov
addr16
push
shr
jnp
xor
jecxz
mov
outsl
scas
imull
outsb
jo
int
or
scas
add
jbe
cmp
enter
inc
inc
pop
jp
mov
add
mov
inc
xor
dec
jl
or
fdivrl
xchg
test
notl
mov
jno
or
xchg
std
das
mov
jp
nop
std
cs
fdivl
lret
adc
insb
mov
pop
cltd
inc
mov
sub
or
push
mov
call
pop
imul
mov
fildl
pop
mov
test
sub
jge
or
sub
inc
add
mov
scas
js
lods
je
into
scas
cwtl
mov
lods
je
or
and
adc
mov
dec
mov
icebp
aas
dec
xchg
mov
pop
and
adc
jne
lds
or
lret
test
sahf
push
cmpsl
inc
outsb
clc
push
pushf
stc
cmpsb
pop
mov
loop
aaa
mov
push
add
cmpsl
jecxz
xchg
adc
xchg
decb
test
push
lret
cmp
inc
jp
mov
mov
outsl
movsb
add
adc
dec
adc
sysret
sti
in
sbb
rolb
push
test
or
ret
xlat
jecxz
push
adc
push
arpl
insl
push
scas
stos
xor
and
outsb
shl
add
jo
lds
push
shrl
imul
sub
jne
sbb
cmpsb
pop
mov
lods
mov
xorl
test
mov
call
push
inc
inc
dec
dec
pop
jl
testb
int
adc
push
lds
adc
movsl
push
jae
sahf
pop
popf
push
mov
jecxz
sub
mov
mov
xchg
inc
mov
or
rolb
mov
jbe
fidivrl
cs
mov
in
mov
jb
fmull
test
sbb
jge
push
mul
daa
and
add
bound
xor
push
lret
lret
lcall
add
adc
dec
aas
fildl
cmp
ss
mov
enter
adc
mov
adc
xchg
movups
scas
leave
xor
dec
xchg
dec
popa
xor
cli
js
into
faddl
divb
lods
jmp
and
shl
cmp
mov
mov
out
sub
into
pop
data16
adc
lahf
inc
dec
inc
pop
js
or
dec
and
dec
push
dec
test
clc
sub
lods
cmp
daa
push
iret
cmp
sbb
xchg
adc
addr16
mov
scas
dec
jmp
lcall
inc
sbb
lret
push
push
lods
popa
pop
cmp
push
jnp
xchg
into
aaa
insl
shl
cs
add
pop
lahf
cmp
movaps
mov
lahf
mov
dec
jge
das
rclb
outsl
mov
adc
mov
jno
ret
dec
mov
or
dec
aaa
and
loope
loopne
sbb
in
pop
imul
cmp
outsb
push
out
add
push
pop
aas
or
sub
mov
cltd
filds
clc
jle
add
push
nop
bnd
jl
ja
fwait
call
add
xchg
test
in
xor
and
scas
push
out
fiadds
test
push
xchg
xchg
sar
cmp
loopne
add
in
and
aas
mov
out
mov
ret
xchg
decb
mov
in
lret
int
sbb
imul
movsl
cs
or
ud1
mov
fcoms
push
xor
xor
arpl
pop
fwait
push
jle
inc
je
sub
xchg
rcll
icebp
cmp
lods
push
shll
adc
sbb
jg
adc
rcr
xchg
lods
scas
add
mov
inc
mov
mov
pusha
out
das
and
push
repz
in
push
xchg
insb
je
js
enter
jbe
xor
fs
pop
test
xchg
popa
movsb
mov
call
imul
ret
sub
and
sub
in
push
xchg
movsb
push
outsl
xchg
daa
push
sbb
cmp
fisubrs
jae
jecxz
fcomps
nop
lods
popa
mov
test
sbb
and
dec
sbb
jns
inc
cmp
pop
xor
gs
aaa
inc
ss
jmp
das
push
dec
pop
cmp
imul
push
pop
inc
xor
mov
outsb
inc
dec
jg
adc
aad
pusha
mov
fnstenv
insl
sarb
xchg
xchg
mov
xchg
mov
push
out
dec
lcall
fsts
aam
cmp
dec
sub
lds
mov
ficomps
xchg
add
cmp
int3
movsb
mov
and
scas
push
repnz
cltd
hlt
ds
jl
jmp
jb
add
lcall
insb
mov
lcall
jne
int3
out
pop
xor
jne
popf
cmp
scas
subl
jnp
fisubrs
out
xor
ror
das
push
xchg
fstl
mov
clc
pop
lret
ret
jl
mov
inc
inc
adcl
or
test
push
lcall
das
popf
pop
ficompl
sub
fs
das
push
insb
jge
dec
mov
ret
xor
sbb
jbe
add
out
sub
inc
push
and
scas
outsl
lcall
add
mov
test
movsb
test
jg
in
loope
iret
xchg
lds
push
and
dec
cwtl
inc
sub
add
out
xlat
sbb
out
push
jo
in
flds
movsb
popf
in
data16
out
fsubrp
testb
out
dec
rolb
push
xlat
mov
inc
fdivr
hlt
sub
subl
lods
lcall
mov
xchg
in
adc
sbb
inc
or
adc
sub
sub
movsl
cmc
push
outsl
mov
sar
xlat
or
or
into
inc
dec
sti
enter
mov
dec
mov
out
fdivs
push
xor
fisubrs
and
scas
cmc
ficomps
cli
cmpsl
mov
daa
mov
int3
fwait
xchg
subb
sbb
adc
sbb
aaa
movsl
test
adc
lods
or
cli
rep
sbb
jno
sbb
cmc
mov
pop
clc
dec
sub
xor
jp
push
sbb
jl
add
jns
jns
bound
popa
push
lret
sbb
mov
xor
jo
hlt
mul
push
mov
scas
mov
inc
stos
gs
jle
ficoml
lods
frstor
nop
out
xor
pop
and
lret
fistl
ss
pop
fnsave
add
mov
dec
inc
adc
in
adc
cmp
lret
int3
cmp
enter
es
movsl
clc
inc
pop
xchg
xchg
jecxz
addr16
aam
dec
in
stos
mov
push
or
xchg
fdivrl
add
cmp
clc
movsb
push
jbe
icebp
jne
insl
mov
sti
push
add
and
in
mov
or
fisubrs
es
aas
test
xchg
sbb
movsl
jle
sahf
xor
icebp
xor
pop
sub
idiv
je
shlb
and
and
clc
sti
adc
int
push
ss
mov
movsb
or
das
cmp
aam
push
into
es
mov
push
imul
cmpsl
lcall
mov
aaa
aaa
mov
inc
xor
test
jae
fiaddl
dec
lahf
in
mov
lea
addr16
filds
clc
cmp
ret
mov
sbb
insl
imul
inc
fsubrl
cmpsl
pushf
rcrl
out
cltd
aam
cld
push
jp
push
enter
add
xlat
cmp
leave
dec
jle
add
movsb
dec
enter
adc
xor
les
lock
mov
fnstenv
push
push
xchg
hlt
stc
inc
mov
pushf
repz
inc
rolb
out
test
cwtl
fists
push
mov
mov
shrb
jge
or
fdiv
or
popl
int3
test
mov
jae
js
psrlq
inc
add
mov
insl
xor
pop
les
jge
mov
cmpsb
adc
shll
rcrb
hlt
pop
dec
and
stos
cwtl
dec
jns
popa
data16
add
jmp
das
xchg
imul
inc
or
stc
mov
ss
xor
lcall
dec
ret
or
pushf
iret
icebp
inc
in
pop
mov
repnz
cmp
or
les
cmp
mov
push
hlt
push
add
push
repnz
sub
or
scas
repnz
xchg
xlat
pop
mov
xor
imul
sub
in
dec
out
inc
aam
push
cmpsl
dec
loope
xor
cmc
mov
add
dec
mov
inc
repz
popf
orl
repnz
cltd
mov
pop
loopne
out
repnz
rorb
push
jnp
movsl
imul
data16
orb
jne
mov
or
xor
out
cmp
mov
push
fistpll
mov
add
fisttpl
adc
pop
cmp
sbb
scas
iret
loop
out
push
jg
jnp
xor
sbb
mov
nop
push
popf
pop
mov
popa
sbb
test
cmp
sub
je
sbb
mov
add
xor
mov
push
jns
cs
dec
push
xor
fs
lret
sub
jae
sbb
ret
add
add
sbb
rcr
outsl
dec
inc
add
jno
jb
and
cmpsb
sahf
lock
push
sbb
xchg
mov
cltd
into
enter
and
sti
inc
mov
aas
lcall
addr16
inc
pop
mov
lea
test
movsb
push
sbb
adc
cmpsl
or
cmc
xchg
cli
add
jo
sbb
xor
pop
insl
add
jne
es
cmpsl
jo
push
ret
xchg
mov
sbb
faddp
sub
xchg
nop
jecxz
repz
push
mov
xor
and
mov
mov
lcall
jg
fstps
cltd
daa
push
push
push
adc
nop
add
xchg
pop
shl
cvtpi2ps
dec
shlb
cmp
mov
in
arpl
sarl
fwait
and
out
and
pusha
jge
xchg
arpl
mov
ficoms
arpl
test
popf
js
mov
in
jp
add
stc
push
lcall
popa
cmp
mov
loope
sub
imul
mov
lock
or
add
xor
addr16
ss
js
into
cmc
sti
outsb
jp
add
mov
xchg
shrl
sub
dec
in
cmp
movsb
dec
lahf
outsl
jg
dec
cmpsb
sbb
adc
and
ret
mov
push
dec
out
pop
mov
outsl
rcr
xor
js
insl
outsl
xchg
mov
in
insl
ret
jo
test
out
clc
jne
fs
add
rcpps
mov
dec
cmp
jo
cmp
and
jae
lea
add
stc
push
ss
push
fimull
sti
lcall
lcall
and
adc
stos
pushf
cmp
stos
inc
mov
cld
add
push
icebp
push
dec
in
inc
mov
stc
daa
xchg
mov
test
xchg
jo
add
xor
mov
or
xor
xor
adcb
adc
lahf
mov
mov
cmp
testl
dec
or
cld
pop
inc
mov
subl
ret
ds
jb
pop
cmp
roll
add
mov
test
lcall
push
and
loope
inc
push
fsubrs
sarb
push
pushf
iret
xchg
cmpsb
fwait
into
cmpsb
in
dec
cmc
mov
mov
jl
mov
mov
loope
mov
ljmp
or
insl
ret
xchg
nop
addr16
faddl
sbb
pop
test
mov
pop
idivl
aad
aas
pop
stos
xchg
and
xor
push
sub
adc
xor
pop
dec
notb
and
imul
mov
enter
aaa
lret
ljmp
mov
mov
jmp
or
psubq
andl
and
push
fildll
jle
lret
jl
push
sub
inc
cmp
cld
mov
sbb
popa
clc
xor
adc
xor
or
clc
movsl
rolb
jo
in
call
fwait
adcl
test
mov
lret
push
adc
mov
or
cmpsl
pop
test
xchg
pop
jmp
cmpsl
add
lock
add
out
xchg
xchg
stos
xchg
je,pt
jge
mov
lret
fisubrs
jb
pop
loopne
mov
pop
push
mov
loopw
pusha
out
cs
cmp
pop
bound
movb
jmp
notl
ljmp
out
dec
mov
dec
mov
cld
addr16
idivl
movsb
in
sub
mov
mov
test
hlt
or
xchg
test
and
xorl
pop
xorl
jb
insb
push
push
popa
push
shrl
into
mov
aad
sub
inc
mov
push
lcall
aaa
xor
test
outsl
sarl
clc
lock
push
and
scas
push
xchg
call
pushf
push
pop
mov
push
jo
dec
in
in
and
cs
jle
loop
popf
lock
mov
push
mov
push
cmpsl
in
lcall
or
aaa
inc
pop
dec
inc
das
push
cmp
arpl
adc
inc
lods
inc
je
lcall
adc
pop
repz
xor
js
cltd
mov
add
in
aam
xchg
pop
lods
sti
inc
jnp
pop
out
scas
pop
push
cli
mov
xchg
leave
stos
inc
lret
jae
dec
test
xor
and
sbb
ffreep
mov
inc
sbb
lods
out
cmc
notb
xchg
pop
sahf
lods
cwtl
dec
mov
les
sub
sub
xor
mov
push
mov
jge
aam
enter
jl
filds
fs
jb
int3
stos
pop
and
repnz
popa
shlb
imul
and
add
stos
or
cli
jne
jnp
imul
lock
ds
scas
jecxz
pusha
scas
mov
mov
sbb
nop
pop
jmp
addr16
pop
out
xor
jno
mov
aas
fidivl
add
pop
and
adc
mov
stos
xor
icebp
dec
cmpsb
jae
adc
or
jo
mov
les
sbb
in
inc
imul
sub
mov
sbb
mov
mov
fsubrs
inc
js
inc
loop
pop
mov
mov
mov
pusha
out
and
fs
icebp
popf
inc
cld
fcmovne
rcrb
lcall
fsubrs
mov
push
bound
xchg
xchg
inc
hlt
push
fstpt
nop
mov
push
out
adc
push
xor
pop
lret
fistpl
pop
movsb
ret
mov
inc
mov
filds
stc
mov
subb
out
xchg
aam
rclb
mov
xlat
dec
test
jg
sub
mov
aaa
inc
xor
cwtl
sbb
inc
loop
xchg
flds
nop
push
push
mov
pop
stc
lods
in
xorl
adc
dec
in
cmp
je
cmp
orb
add
das
in
inc
and
sub
mov
pop
adc
ret
and
cmp
xchg
xchg
mov
arpl
iret
filds
out
inc
xchg
push
imul
jbe
mov
pop
push
dec
jg
movsl
mov
sbb
jmp
inc
add
iret
lds
in
ja
sbb
jmp
test
loopne
sbb
pop
or
sbb
lods
pop
pushf
aad
xchg
popa
fdivrs
mov
pop
jbe
add
xor
in
ffreep
sub
fdivrs
fiadds
pop
and
in
mov
mov
mov
cwtl
arpl
into
mov
mov
jp
shlb
mov
inc
mov
clc
int
fcompl
and
movsl
loope
push
fidivrs
inc
loop
loop
jle
pop
lds
fidivrl
xchg
dec
inc
jp
inc
cmp
outsl
fstl
sbb
xor
inc
shll
mov
dec
push
xchg
pop
xchg
call
xchg
aad
or
mov
jp
rcll
out
mov
and
stos
sbb
mov
xchg
aas
loop
pop
jnp
lods
adc
ret
rcrl
fistps
in
inc
fwait
lret
xchg
out
xchg
outsb
xor
stos
sub
ss
loopne
sbb
in
xchg
daa
aad
mov
jbe
sbb
fcomps
test
arpl
adc
cmp
dec
jbe
outsb
lcall
lods
xor
pop
imul
cmp
cmp
in
cmc
mov
loop
push
ror
cmpsb
xchg
out
jl
adc
out
mov
movsb
jmp
inc
in
add
std
cmpsl
addr16
dec
jle
jmp
lods
pop
push
fwait
mov
adc
push
dec
xchg
das
sahf
jo
cmp
push
insb
lret
int3
adc
mov
lcall
dec
mov
jmp
sbb
jno
add
fmull
sbb
dec
ljmp
lods
or
push
or
sub
xchg
sub
cmp
pushf
mov
push
or
test
cli
gs
xlat
pop
int
outsb
xor
sbb
stc
pmulhw
sbb
xor
mov
xor
subl
cmp
aas
out
addb
adc
aad
and
ja
mov
and
jp
lret
mov
shlb
and
adcl
lahf
xchg
mov
sub
or
out
dec
clc
rcrl
or
jle
and
jne
into
jmp
sub
jp
in
aad
pop
dec
push
pop
inc
int3
or
pop
dec
in
or
or
mov
mov
mov
out
push
inc
ror
cwtl
jne
cmpsb
adc
pop
pop
incb
push
in
xlat
roll
out
fwait
mov
mov
ficompl
aaa
lods
and
sub
or
mov
cmp
ret
inc
fistpll
sub
fldt
pop
mov
jmp
bound
int3
test
or
mov
adc
lcall
lcall
sub
test
or
push
or
cmp
sub
sub
xchg
ds
ss
cmp
ror
int
aas
in
rcr
pop
ficompl
adc
xor
jmp
popf
mov
pusha
mov
cld
pop
inc
and
pop
sbb
xor
int3
jno
xchg
or
addr16
adc
xor
stos
mov
lds
sub
int
sbb
dec
cmp
add
fcmovb
subl
inc
mov
jnp
mov
sbb
enter
cmpsb
dec
mov
jnp
nop
adc
pop
loop
push
add
add
push
adc
jmp
shlb
jmp
sub
pop
pop
ret
icebp
out
cmpsl
sub
orb
xor
in
out
aam
test
jle
jg
add
lahf
cwtl
leave
popa
bsf
sahf
push
add
xor
jle
int3
add
mov
sub
mov
jnp
mov
aaa
lret
and
pop
adc
xchg
loopne
or
sub
je
jl
lcall
dec
lahf
incb
clc
mov
lods
adc
lock
cmpsb
fisttpl
xor
inc
pop
xor
int
pop
gs
shrb
push
pop
push
and
pop
add
jl
pop
sub
mov
jp
js
xchg
lret
mov
push
rcl
fldln2
pushw
cmpl
dec
icebp
add
and
arpl
cmp
mov
adcb
cli
outsl
jo
pop
add
movsb
andb
rcll
sub
dec
add
cmp
and
shrb
sbb
xor
mov
and
cmp
mov
sbb
into
xor
xchg
dec
test
push
enter
jb
add
cs
push
fistpll
lock
sbb
cmp
jns
cmp
sbb
shlb
enter
mov
bound
mov
mov
test
fwait
jns
lret
sbb
pusha
mov
push
or
sbb
insb
enter
cmp
aam
lea
adc
pop
push
lret
sbb
cmp
add
loop
dec
mov
jns
xchg
into
iret
dec
xacquire
mov
pop
std
leave
int3
dec
inc
arpl
pop
mov
aad
mov
ljmp
push
lods
out
rorb
cmp
leave
inc
movsl
mov
sbb
add
nop
xor
mov
jmp
rcl
cmp
push
inc
xor
test
push
sbb
sbb
sub
xchg
popa
and
inc
scas
shl
and
fisubrs
adc
ja
sbb
mov
fsubrl
ds
lahf
frstor
das
out
mov
jmp
sub
cltd
pop
hlt
fdivl
or
sub
ret
sbb
or
lret
jbe
mov
mov
jo
pop
cmp
dec
int3
or
push
hlt
cmp
jo
std
jb
insl
cs
lret
sbb
xchg
ds
and
adc
out
adc
lea
push
rclb
aaa
dec
inc
jb
lock
mov
sbb
xor
pop
or
outsb
aaa
sbb
inc
xor
push
fidivl
xor
mov
dec
nop
jl
jl
and
xor
add
in
xlat
movsb
xchg
cli
mov
jae
hlt
out
xchg
adc
jo
fstps
cmp
jb
inc
and
ret
jns
adc
xchg
jbe
sub
mov
data16
jle
cmp
ret
mov
hlt
xor
nopl
and
cwtl
fdivrl
or
cmpsl
loopne
outsl
pop
add
mov
in
jmp
js
xchg
out
pop
mov
inc
insl
lcall
insl
fsubp
or
or
imul
xor
jg
test
fisttpll
mov
xor
movl
sbb
ss
push
fcomps
jbe
and
mov
or
mov
aam
adc
ret
addl
inc
adc
es
xorb
loopne
mov
add
or
popf
inc
adc
cmp
jp
add
decb
mov
shrl
int3
jge
aaa
mov
push
push
cmpsl
sub
or
mov
pushl
sahf
hlt
repnz
mov
cmpsb
cmp
xor
add
mov
or
cmp
icebp
call
outsl
lcall
fistl
sub
test
lea
mov
jne
inc
nop
mov
xlat
push
xchg
xchg
scas
or
add
xchg
outsb
shll
pop
xor
test
ljmp
sub
daa
sbb
add
adc
pop
xchg
ret
pop
and
bound
popf
xchg
sub
push
adc
lahf
sti
fcomps
lds
mov
or
repz
xor
mov
mov
out
movsb
push
mov
cmpsl
nop
add
xor
sbb
and
sti
outsl
sbb
ficoms
in
and
gs
fmulp
sbb
icebp
mov
add
add
add
sub
ja
js
popa
cs
adcb
pusha
sbb
jg
aam
lods
jnp
lahf
pop
mov
shll
dec
fwait
in
push
xchg
jbe
popf
cmp
cli
or
cwtl
pop
add
lods
dec
or
sbb
mov
hlt
fwait
ljmp
fsubs
xor
push
sub
in
test
out
arpl
loopne
dec
add
das
or
lahf
jo
xchg
cmp
movsl
xor
jbe
xor
insb
iret
jb
xchg
lret
jle
push
xorl
icebp
in
mov
int3
dec
in
mov
dec
and
or
push
inc
in
mov
jne
mov
rclb
scas
pop
push
loop
dec
mov
pushf
into
int3
mov
arpl
sbb
sub
in
sub
out
fld
test
imul
pop
mov
push
and
xor
iret
outsb
fists
test
mov
jnp
pop
dec
dec
fnsaves
fiaddl
sbbl
in
roll
pop
or
adc
dec
jp
loopne
out
push
dec
les
xchg
shll
lea
addr16
push
sub
jle
xor
es
mov
loope
in
inc
sub
repnz
sti
lock
dec
lcall
xor
pop
dec
or
xor
and
ds
imul
sub
jb
sbb
mov
cmpb
movsb
cltd
loop
aaa
xchg
shrl
addr16
jmp
movsl
movsb
and
mov
insl
xor
pushf
mov
pushf
adc
lds
push
cmp
and
jne
sub
mov
call
sbb
ffree
cld
fsubs
push
insl
or
pop
loop
inc
inc
sub
push
add
mov
orl
jp
scas
mov
pop
xchg
out
mov
xor
je
sub
or
or
data16
mov
xchg
cmp
xchg
and
xchg
clc
outsl
mov
hlt
outsl
jae
mov
sub
pop
ret
fs
fsubs
icebp
mov
int
mov
lahf
pop
pop
imul
shrl
push
jne
jp
xchg
dec
push
or
cmpsb
ljmp
ret
pop
xchg
dec
enter
cmp
push
aad
jbe
add
ret
push
mov
xchg
push
adc
insb
in
fabs
sbb
clc
in
jae
inc
scas
xorl
inc
mov
cmpsb
stos
xor
jmp
mov
sub
divl
lret
in
lcall
pop
inc
mov
mov
testb
xor
add
xor
out
std
int3
jb
aaa
cmp
stos
in
jb
and
push
jne
jg
cmc
mov
cwtl
mov
call
push
cmpsl
xchg
lahf
add
or
add
js
mov
in
lcall
mov
aad
cmp
and
stc
pusha
xor
rcrb
mov
sahf
sub
and
push
inc
cltd
in
pushf
in
lret
jg
mov
jbe
mov
jno,pn
inc
sub
fidivl
add
and
push
out
shll
repnz
scas
mov
jnp
sbb
arpl
cld
mov
out
inc
xor
int3
xor
fcmovbe
or
in
stos
push
mov
jge
aas
aas
cmp
and
jnp
dec
mov
ret
mov
sbb
fldcw
pop
cmpsl
push
fs
xor
jecxz
mov
stos
xor
lcall
insb
mov
scas
push
jp
add
ficoml
xor
mov
inc
cli
in
adc
repz
inc
arpl
popf
js
mov
divb
bound
das
fadd
mov
dec
jo
xchg
mov
push
inc
orb
inc
jl
add
xor
inc
in
cltd
inc
and
push
push
jne
xorl
mov
xadd
jno
mov
sub
mov
dec
sarl
push
mov
dec
xchg
test
sbb
mov
xchg
outsb
xor
pop
aaa
push
inc
std
sbb
shrb
shlb
adc
popa
mov
scas
leave
in
and
sbb
int3
stos
enter
mov
loope
mov
loop
fistps
leave
dec
fcomip
jns
inc
cld
stos
jecxz
test
fldt
in
sub
mov
sub
cwtl
sub
add
int3
sahf
sub
notl
int3
ja
gs
push
lods
fidivs
das
push
pusha
sbb
mov
xor
fs
mov
or
pusha
pusha
xlat
pop
popf
fcos
dec
rclb
outsl
lods
repz
aad
in
mov
cmpsb
fwait
mov
mov
jp
popa
sub
pop
ljmp
mov
call
adc
test
aam
pop
je
repz
scas
mov
je
arpl
sub
aas
popa
fs
pop
push
mov
lret
stos
rorl
inc
xor
popa
fsubrl
int3
or
int
lret
mov
js
stc
mov
xchg
and
in
aaa
dec
das
xor
aaa
fs
add
cmp
ret
mov
push
pop
jg
nop
roll
sbb
mov
pop
mov
insb
push
scas
mov
cld
gs
jge
test
scas
mov
inc
adc
sar
add
int3
pop
test
jmp
nop
sub
insb
insl
inc
pusha
shr
testb
mov
icebp
mov
ds
mov
popf
mov
pop
mov
push
cltd
repnz
mov
shrb
scas
xor
test
cmp
mov
or
sub
adc
ficomps
mov
cld
pop
std
out
ss
and
pop
sub
bound
adc
add
xchg
mov
add
and
aas
mov
xchg
xor
test
nop
mov
xchg
mov
lcall
or
pop
pushf
cmp
jle
adc
mov
sarb
inc
mov
inc
stos
inc
inc
push
jb
mov
mov
fldt
sub
jae
add
pop
xor
filds
push
or
fnsave
stos
mov
scas
scas
xchg
int3
and
subl
mov
sub
mov
pop
mov
mov
sub
leave
jmp
cld
mov
movzbl
test
push
je
popa
leave
adc
sahf
push
aas
pop
jns
xchg
cltd
fwait
scas
andb
sub
mov
fstps
pop
or
stos
or
in
cld
jbe
hlt
js
out
cli
mov
and
mov
or
push
adcb
in
sbb
add
or
rcll
stc
cmpsl
jecxz
jb
add
mov
fcoml
mov
add
test
push
outsb
out
fcompl
push
mov
icebp
aad
leave
pushf
aaa
loopne
lcall
sub
into
mov
jnp
jle
mov
js
or
adcb
push
sbb
inc
inc
mulps
sti
push
cmp
loope
add
sub
or
aaa
imul
sub
sti
fldcw
mov
fidivs
mov
pop
dec
daa
pop
es
notl
test
mov
dec
rol
xchg
pop
xchg
or
sbb
imul
or
xchg
pushl
mov
lds
ret
int
mov
in
lock
cmp
mov
adc
shll
pusha
insb
pop
mov
rorl
fiaddl
fsubrs
cmp
add
sbb
push
jne
cmp
push
clc
out
mov
mov
arpl
ret
sarb
add
mov
stos
sub
ret
movsb
es
jnp
sbb
insb
fistpll
js
lahf
mov
jmp
ds
add
out
or
paddq
and
daa
fdivl
sbb
sbb
loope
pop
jnp
cmp
es
lcall
dec
inc
inc
fwait
jecxz
jmp
sbb
mov
mov
xchg
push
mov
inc
addr16
jbe
dec
call
jae
add
hlt
movsb
leave
gs
fisttpl
pop
sbbl
lret
xchg
fs
push
sub
dec
push
pushf
sbb
lods
cmp
adc
mov
mov
mov
pop
shrb
mov
adc
stos
lahf
testl
imul
xor
test
push
push
cmpsl
or
mov
cld
ret
leave
loopne
data16
fsubs
cmp
mov
pop
add
mov
mov
xchg
gs
pop
inc
adc
out
fistl
mov
cmp
pop
cmp
dec
out
sbb
imul
add
dec
mov
mov
leave
ret
sub
dec
subb
push
insb
insl
sub
sub
pop
add
mov
jecxz
jne
mov
mov
mov
xor
sub
in
xchg
mov
xor
mov
pop
je
cli
negb
xor
sbb
push
mov
push
push
inc
cmp
and
aad
xchg
test
pusha
addr16
cltd
xor
adc
jl
jecxz
xor
inc
ficoml
mov
sub
and
sub
mulb
stc
shl
ftst
into
sbb
sbb
ljmp
or
adc
jle
shlb
sub
cs
push
lock
add
lock
lahf
pop
lcall
call
les
ret
loopw
ret
pop
inc
jns
xor
xchg
ficomps
sbb
mov
push
aam
mov
bndstx
rorb
or
fildll
xorb
mov
jmp
xor
lds
mov
push
lock
out
adcl
imul
aad
inc
sub
ljmp
imul
pusha
scas
jae
xchg
leave
loope
inc
pop
insl
int3
push
leave
mov
lret
jno
cmpsb
pop
test
scas
inc
jae
jae
mov
scas
scas
jg
cmp
js
adc
out
or
mov
js
shll
aas
sti
insb
fs
adc
repnz
cmc
fiadds
add
pop
xchg
imul
int
fstps
fiaddl
inc
ljmp
cmc
push
sub
mov
rcrb
cmpsb
jg
push
lret
and
mov
or
sti
sub
cwtl
pop
jl
push
jmp
aaa
mov
xchg
jecxz
jecxz
pop
into
rcr
mov
int3
push
pop
cltd
insl
sahf
push
mov
cmp
xchg
ljmp
shll
cmc
push
adc
pop
xchg
lahf
mov
xchg
stos
bound
scas
push
pusha
add
jns
jb
rorl
lock
adc
cmp
dec
cmpb
or
aaa
adc
sbb
hlt
cmp
adc
or
sub
pop
scas
and
out
shlb
fs
pop
adc
stos
cmp
push
imul
rcr
fstl
scas
fsub
out
out
pop
mov
xchg
cmc
xchg
mov
xchg
js
pop
jp
dec
ss
int3
mov
bound
cli
push
push
aaa
add
sbb
stc
sbb
lods
dec
insl
mov
inc
test
dec
sahf
mov
mov
dec
cli
cld
popa
mov
or
pusha
movsl
test
inc
push
cmpsl
pop
js
or
loope
mov
mov
gs
cmp
mov
push
sub
mov
sub
xchg
mov
orl
rclb
sti
scas
sub
mov
cwtl
xor
pop
lods
or
andb
mov
or
push
cmp
dec
scas
nop
mov
cmp
xchg
rcrl
les
sbb
push
push
sub
pop
pop
imul
inc
dec
cmp
xchg
movsb
mov
shlb
mov
xchg
jmp
ljmp
xor
sti
lods
pop
mov
sub
int
inc
pop
loopne
lcall
sub
jo
push
pop
jmp
lret
stc
dec
test
inc
shrb
imul
add
jae
dec
popf
pop
ds
xor
pop
repnz
lret
pop
cmp
jne
pop
clc
mov
sbb
xchg
aas
into
mov
je
add
pop
xor
stos
mov
je
push
push
push
cltd
repz
mov
out
movsl
adc
adc
cmp
aam
lea
cmpb
push
or
addr16
aas
or
jb
fistps
shll
sub
mov
pop
and
jae
and
jmp
lods
jge
inc
push
push
jmp
rolb
fcomp
xor
in
enter
pop
mov
cmp
jae
cld
pop
arpl
sbb
inc
insb
inc
pop
jle
out
cli
enter
iret
or
loopne
fisubs
fs
jl
stc
popf
xchg
ret
lahf
jge
loop
mov
sbb
in
stos
jp
mov
loopne
mov
pop
xchg
fdivrl
mov
aad
cld
sub
xchg
xlat
xchg
aas
cmc
pop
push
fnstenv
xor
out
sub
cmp
inc
int
dec
dec
lock
jbe
and
jae
loope
inc
orl
xlat
jb
hlt
sub
pusha
out
sbb
nop
cli
pop
test
aam
loop
jl
push
sbb
push
push
fidivrl
push
cli
and
add
cs
movsl
pop
pop
cmp
mov
xchg
push
push
adc
mov
cmpl
sbb
mov
in
sbbb
lods
jne
sub
xor
xchg
jne
cmp
xchg
push
dec
pusha
data16
ret
cltd
lock
fdivs
gs
mov
xor
fnsave
inc
loopne
jns
xor
aaa
and
mov
pop
pushf
ret
mov
push
inc
xchg
sbb
addl
iret
sub
jle
mov
inc
rclb
jmp
lods
mov
adc
mov
rorl
cmp
clc
mov
sahf
scas
stc
cmpsl
dec
sbb
cld
mov
xchg
shlb
cmp
mov
xchg
lock
cltd
loopne
cmp
or
push
xchg
xchg
stos
movsb
jle
cwtl
jbe
and
xor
mov
sbb
push
mov
sbb
dec
mov
nop
lcall
andb
je
pop
dec
or
adc
jnp
xchg
inc
pop
mov
mov
lea
sub
cwtl
mov
movsl
inc
inc
testb
cmpb
test
scas
jo
xchg
mov
imul
sbb
pop
jge
std
outsl
int3
ljmp
xor
jne
pop
mov
insl
and
sbb
ret
inc
sub
mov
inc
mov
loope
or
aad
dec
data16
xor
sbb
push
addl
mov
jle
inc
sbb
mov
push
jge
and
xor
and
int
xlat
mov
subb
cmp
shlb
fisttps
cmp
int
dec
xor
cmpsb
mov
push
jle
ret
cmpsl
fcomi
call
adc
pop
ja
push
js
ret
imul
das
sub
mov
stos
lock
in
sbb
cmp
loop
jo
adc
fidivl
lahf
sub
cmc
shll
mov
xchg
mov
test
pop
mov
call
test
xor
push
add
add
rcll
subb
adc
dec
xor
xchg
push
jno
add
sub
pushl
xchg
inc
jo
jbe
mov
xor
rcrb
mov
gs
mov
filds
push
mov
mov
or
xor
xor
sbb
mov
and
cs
sbb
cmp
push
sub
ds
cmpb
hlt
pop
in
andl
pop
lret
mov
je
xchg
xchg
or
cmp
push
push
cltd
arpl
insb
xchg
or
pop
in
push
repnz
sbb
dec
nop
imul
lods
sub
int
iret
lret
cmp
movsb
cmp
xchg
pop
das
cmc
rcll
dec
popa
cmpsb
dec
repz
jb
xchg
sbb
aam
pop
push
fdivrs
inc
cmp
add
int3
sbb
test
jne
rolb
or
addb
jmp
adc
adcb
popf
xchg
frstor
sbb
loope
cmp
jp
dec
cmp
mov
loop
aad
pop
scas
iret
pop
pop
mov
ror
pop
or
bound
xchg
mov
push
cltd
mov
cmp
inc
je
adc
aas
je
xchg
add
or
gs
repz
pop
cmp
ja
dec
loopne
adc
js
out
cwtl
dec
sub
and
adc
cmp
xor
mov
jbe
dec
xchg
sub
xchg
xchg
jo
jg
outsb
mov
dec
test
lret
movsb
cmp
loopne
int
aaa
jns
out
or
in
or
ss
test
mov
sub
aaa
cmp
movsl
sbb
push
pop
mov
dec
out
inc
and
mov
sbb
xchg
imulb
xchg
mov
xchg
and
xchg
mov
inc
icebp
fidivl
loop
jmp
push
xor
enter
or
or
test
xor
test
mov
dec
je
push
xor
std
adc
inc
pop
xor
add
ljmp
out
das
addr16
lods
sbb
stos
cmp
sub
int
clc
push
or
shl
jge
sahf
push
cmp
sar
loop
scas
cmp
pop
fdivrl
subl
nop
out
movsl
lods
push
push
dec
lods
jmp
arpl
aaa
jbe
xor
rcr
jmp
jecxz
test
xor
and
pop
arpl
pop
push
xor
notb
jmp
xor
outsl
cmp
dec
mov
sbb
xor
xchg
fmull
shrb
xorb
cmpsb
lods
hlt
mov
lret
lock
fucom
test
fcmovne
fs
mov
inc
aas
push
xchg
pop
add
push
mov
pushf
push
ja
xchg
sub
outsl
aad
sbb
pusha
mov
inc
imul
repnz
push
hlt
aas
lea
pop
jnp
jno
aas
fs
aas
push
lea
pop
adc
adc
test
movsb
pusha
sbb
dec
int3
cli
stc
fldcw
pop
loopne
jle
xor
inc
ret
shrb
and
add
push
ret
leave
cmp
popw
pop
das
repnz
and
lds
xchg
inc
cli
sbb
push
or
xchg
fwait
aaa
sbb
es
mov
int
test
adc
pop
pop
inc
xlat
or
js
sbb
shlb
dec
dec
nop
fdivrp
loopne
rcrl
pop
fidivs
adc
cwtl
jae
mov
xor
push
lret
pushf
adc
adcl
in
enter
push
push
imul
pop
pop
push
or
sub
mov
push
or
imul
jns
out
mov
es
movsb
push
insb
lahf
fisttps
adc
shl
mov
mov
mov
jp
lahf
add
sub
dec
lcall
sbb
mov
mov
mov
frstor
adc
incl
inc
xchg
je
and
cmc
mov
cmp
and
stos
xor
jmp
jae
sub
jb
mov
inc
jle
nop
mov
pop
lcall
xlat
je
fmul
ds
mov
adc
test
and
ret
mov
jmp
push
sbb
lcall
mov
and
fbstp
and
mov
in
rol
or
xchg
lret
fs
lods
mov
pop
sub
or
cld
add
adc
out
pop
cli
mov
shrb
or
jl
test
jl
hlt
lret
call
iret
cwtl
mov
loop
xor
or
js
mov
push
insl
cmc
jno
mov
xor
or
or
repnz
incb
cmpb
inc
shl
lahf
sub
sbb
xchg
cmp
test
movsl
dec
mov
int3
pop
icebp
gs
push
cmpsb
jecxz
pop
add
sub
imul
mov
call
sbb
or
push
jns
sbb
adc
mov
sub
test
lea
mov
mov
pusha
mov
mov
jg
xor
in
add
in
adc
les
scas
jnp
loope
add
xlat
scas
hlt
in
push
fadds
adc
aas
imul
repnz
movsl
push
adc
rclb
and
or
push
dec
mov
dec
xchg
inc
push
and
xchg
sti
int
incb
jbe
adc
dec
inc
xchg
push
cs
lock
and
push
push
in
inc
movsb
loop
negl
int
mov
and
inc
fidivs
add
push
loopne
std
pop
ret
hlt
xor
fdivrs
push
inc
push
and
mov
cmpsb
stc
pop
mov
pop
xchg
aaa
popf
mov
inc
mov
xchg
inc
ds
mov
sbb
cmp
or
scas
cli
jl
mov
aas
mov
sbb
icebp
daa
lret
rclb
enter
cmpsb
adc
inc
push
xor
enter
pop
les
or
movsl
cwtl
imul
ret
mov
lods
test
clc
ret
xor
mov
xor
dec
mov
inc
mov
idivb
int3
mov
add
pop
sbb
gs
leave
cwtl
jp
arpl
mov
lcall
cmp
dec
stos
mov
push
imulb
and
xor
mov
pop
out
dec
aaa
imul
mov
pushf
jnp
scas
test
inc
xchg
bound
in
sbb
es
mov
std
in
sbb
dec
jl
cli
mov
mov
xchg
imul
jl
pop
mov
push
leave
pop
lcall
lahf
stos
stc
xchg
dec
adc
xor
iret
and
cmc
test
sub
push
xchg
aas
and
ficompl
pusha
add
cs
outsl
je
add
pop
dec
inc
mov
jbe
loopne
add
push
pop
fstps
scas
push
jg
xchg
loopne
jne
xor
push
pusha
xchg
push
inc
loopne
fwait
ds
loop
ds
and
lods
int3
sub
ret
sahf
rcrb
mov
outsl
sbb
mov
push
icebp
inc
xchg
mov
cmp
sarb
pushf
loope
out
lcall
cwtl
dec
dec
pop
jge
fsubp
loopne
clc
push
or
sbb
test
aam
cli
jbe
popf
insb
and
leave
imul
xchg
jns
mov
push
push
fbstp
in
mov
cwtl
dec
sbb
insb
xchg
sbb
push
fnsave
mov
pop
or
insl
push
push
repnz
add
adc
lea
addb
rclb
mov
xchg
cmc
or
imul
std
call
mov
xor
dec
mov
push
clc
sub
in
mov
cmc
and
lods
int3
mov
mov
hlt
leave
inc
pop
lcall
test
loope
pop
xor
call
jmp
or
inc
cmpsb
popa
or
dec
fsubrs
iret
push
in
add
push
ss
scas
cli
mov
push
cwtl
and
jmp
mov
adc
cmp
mov
inc
repnz
jae
push
mov
inc
outsb
xchg
popa
and
adc
in
imul
sub
pop
xor
ljmp
or
pop
or
and
mull
push
flds
cld
pop
sub
cmp
mov
mov
test
or
nop
fstl
xorl
es
sub
cmpsl
pop
mov
imul
dec
jle
test
mov
iret
lods
shr
and
in
jns
sbb
jmp
popl
movsb
and
pop
mov
push
out
mov
jge
lret
aaa
xor
mov
in
push
jbe
push
insl
add
add
fwait
pop
jmp
cmpsl
jb
je
mov
push
shll
push
or
lcall
test
sub
add
mov
push
mov
cmpsb
repnz
mov
or
xchg
jle
testb
jae
dec
mov
es
cmp
mov
iret
sub
dec
jle
push
cmp
int3
adc
lcall
mov
jle
out
fldt
stos
pop
fcompl
insl
push
scas
sarl
sahf
adc
js
shlb
adc
and
jbe
sbb
stos
cli
or
mov
daa
xchg
cmp
and
mov
mov
sbb
loop
add
shr
or
add
jne
icebp
test
pop
je
lret
xor
mov
mov
pusha
push
pop
inc
imul
test
adc
scas
arpl
imul
dec
jbe
push
adc
mov
shll
adc
push
lods
stos
adc
insb
sub
or
push
scas
out
fdivrl
inc
inc
xchg
sbb
daa
scas
mov
xchg
pop
pop
sahf
jae
push
mov
push
inc
sbb
xchg
mov
fcomps
movsl
jns
mov
shl
arpl
ja
push
xchg
jne
sbb
in
mov
xor
movswl
mov
ret
push
sub
call
fimull
sbb
mov
dec
ljmp
aas
test
insb
mov
inc
imul
loopne
arpl
mov
xor
and
mov
pop
cmpsb
mov
repnz
ds
sbb
mov
arpl
scas
cmc
pop
or
pushf
mov
push
jmp
add
dec
mov
dec
imul
fs
cld
pop
movsb
enter
js
xor
add
cwtl
insl
stc
scas
mov
sbb
xor
bound
loop
jo
dec
push
sbb
push
xor
pop
jp
shl
sbb
ret
push
fnsave
out
andl
push
fs
enter
push
aam
cmovae
jae
push
or
jmp
mov
push
test
xor
push
clc
push
dec
jae
xor
fldcw
or
xchg
mov
pop
gs
inc
jp
mov
lods
lods
mov
mov
outsb
mov
std
and
repz
sbb
mov
mov
in
jo
shll
jae
push
shl
mov
call
and
shlb
mov
shll
sub
push
mov
push
test
mov
xor
pop
push
out
sbb
repnz
imul
scas
shrb
mov
cmc
jecxz
frstor
aam
loop
sbbb
ljmp
push
outsb
inc
add
aam
xchg
lock
pushf
fidivrl
push
mov
push
gs
imul
lds
das
xor
push
inc
psrlw
test
fcompl
jb
fisttps
add
dec
sub
decl
xchg
ss
hlt
push
rol
push
lods
mov
inc
lock
xchg
cmp
aad
add
in
nop
mov
mov
jo
out
cltd
lods
jmp
arpl
add
mov
push
addr16
adc
in
mov
in
xor
inc
mov
shr
push
cmpsl
or
leave
test
xchg
fst
dec
xchg
cmp
sbb
xor
dec
sti
les
jo
pushl
imul
je
inc
jecxz
xchg
add
cmpsb
pop
clc
adc
sub
dec
loopne
test
lret
fstpt
cmp
shrb
sub
cmp
or
in
mov
xor
scas
out
or
out
adc
sbb
and
xor
pop
jae
and
cmp
jle
in
or
das
out
jmp
mov
mov
xor
mov
cmp
fwait
cmpsl
test
int
loopne
std
pop
jo
mov
daa
ljmp
jp
lahf
cmpsb
mov
add
inc
pop
dec
mov
push
mov
mov
dec
push
pop
push
popa
dec
test
mov
test
add
or
fldl
sub
mov
xchg
push
jl
test
mov
add
mov
add
fisttpll
pop
call
sub
fcomps
inc
pushf
or
mov
stc
test
data16
add
test
rorl
jl
adc
push
aaa
push
negb
mov
xor
ds
mov
xor
pushf
outsl
cmp
pop
cmp
inc
mov
and
fs
leave
xor
mov
pop
dec
cmp
insl
mov
shrl
je,pt
dec
sub
xchg
sbb
add
addb
xchg
xchg
das
mov
fisubl
mov
xor
int
push
adc
push
cltd
out
push
lods
js
dec
pop
lods
jns
mov
sub
jmp
aas
jg
lahf
cmpsl
xor
mov
or
jae
cmc
lds
mov
pop
or
neg
mov
out
jbe
add
repnz
pop
pop
or
xor
mov
pop
jl
inc
mov
sub
je,pn
lret
adcl
jb
xor
or
lret
fidivl
stos
dec
lea
andl
adc
jo
aas
mov
adc
pop
pop
cmp
outsl
insb
test
arpl
xor
negb
mov
nop
mov
movb
test
cmp
mov
mov
mov
leave
cltd
xchg
loope,pn
insb
cmpsb
sar
push
frstor
cmpsl
mov
scas
fwait
rclb
sub
mov
sbb
in
lret
mov
fwait
jl
mov
jp
sbb
and
mov
and
std
sarl
bound
lds
hlt
aam
xor
aaa
jp
into
push
into
call
push
repz
xchg
sbb
imul
arpl
punpckldq
add
repz
test
aas
add
inc
jl
inc
daa
das
rcll
ficompl
test
aas
mov
or
xorl
scas
add
fcompl
sarb
decl
xor
out
test
jmp
xchg
gs
popa
cmp
add
in
inc
push
cmp
hlt
cmp
inc
loope
pop
lea
les
dec
mov
jmp
adc
jb
xor
or
and
repz
nop
jmp
sbb
scas
push
ret
das
fdivrl
sar
mov
and
out
dec
lret
adc
sbb
jbe
aaa
punpcklwd
dec
test
cmp
shlb
leave
test
ret
add
xor
mov
jnp
scas
push
push
or
sub
push
or
or
js
lds
mov
movsl
cs
pop
cmp
xor
shrl
mov
aaa
push
add
dec
mov
or
sub
fld
mov
inc
push
rolb
and
cmpsl
outsb
mov
jo
fsubl
sub
insl
xlat
or
mov
fisttpll
lret
push
imul
popa
data16
dec
mov
nop
xchg
fs
push
sub
rol
add
fwait
push
std
outsb
cmp
push
mov
aaa
inc
mov
cmp
popa
xor
cmp
mov
add
or
ret
inc
jle
push
inc
jns
mov
in
cli
jg
push
fildll
div
aad
add
js
cltd
icebp
ljmp
cmp
fldl
mov
das
push
addr16
je
rcll
pop
mov
mov
rorl
roll
xor
inc
cli
test
enter
pusha
inc
pop
hlt
adc
fwait
sbb
ret
mov
sub
xchg
push
sub
lret
jno
pop
roll
into
mov
lcall
and
xor
lar
into
lea
call
and
movsl
cmp
std
fimuls
mov
pop
mov
stos
shll
outsl
cmp
cmp
xor
mov
cwtl
inc
rorl
mov
sub
fldt
and
xchg
cmpsb
cmp
add
test
jmp
pop
xor
mov
and
jmp
add
jbe
scas
outsl
inc
add
bnd
hlt
jo
jg
and
jb
daa
enter
enter
pop
je
outsl
mov
cwtl
das
test
sbb
pusha
adc
push
pusha
scas
pop
andb
or
adc
and
loope
mov
xchg
add
ret
mov
jg
xchg
dec
pop
iret
xor
lods
and
push
arpl
sbb
add
leave
push
pop
in
mov
inc
test
cmp
push
xlat
push
and
dec
addr16
adc
fcompl
jne
mov
and
scas
xor
jo
std
add
aad
out
dec
xchg
leave
mov
aas
pop
lcall
test
mov
insl
sbb
cwtl
rorl
mov
movsl
cmpsb
dec
mov
sar
scas
xor
sub
ret
inc
or
jmp
jo
fs
cmp
pushf
pop
subb
sbb
mov
arpl
dec
adc
ja
fadds
and
lock
sbb
sahf
pop
push
dec
adc
outsb
fnsave
dec
cmp
push
out
icebp
iret
or
fsubrl
xor
test
stc
mov
sbb
out
jo
cmp
xor
sbbl
repz
sbb
jecxz
movsb
addr16
or
mov
cld
out
clc
push
fisttpl
adc
dec
cmp
mov
xchg
fdivs
xorb
dec
and
ret
adc
out
pop
push
xlat
mov
adc
mov
xchg
mov
jp
inc
cwtl
lea
mov
jb
mov
mov
jp
push
xlat
jno
push
pop
add
int3
into
adc
loope
jg
add
cmpb
hlt
add
pop
xlat
or
or
fbstp
mov
push
loope
xchg
out
xor
mov
stos
jge
inc
arpl
pop
pop
fists
sub
pop
adc
test
push
cmpsb
popf
mov
xor
push
nop
ret
xchg
in
jmp
inc
mov
xchg
repnz
aas
jle
jp
xchg
push
enter
test
push
inc
cmp
and
shrl
mul
or
push
or
cmp
cltd
mov
fisubl
loopne
cmc
aas
negb
dec
stos
pop
jo
bound
cmp
test
xchg
mov
leave
add
shll
push
xor
inc
xchg
lahf
and
pushf
adc
stc
adc
cmp
popa
aam
mov
ss
filds
imul
mov
adc
and
call
movsl
lahf
notl
ffreep
movsb
mov
lds
stc
jnp
cmp
and
jnp
mov
jno
push
or
jno
dec
leave
scas
xchg
dec
ja
aaa
pusha
jp
leave
sub
jle
push
out
aas
ss
push
das
dec
sti
dec
fnstenv
popf
decl
push
fists
into
scas
in
mov
pushf
sub
jns
inc
sub
mov
mov
mov
fildll
add
push
jmp
scas
xor
add
hlt
xor
dec
dec
xchg
enter
shl
insb
shl
mov
mov
cmp
or
or
add
mov
sub
loopne
roll
rcrb
test
jmp
xor
jns
dec
jmp
dec
lret
int3
insl
push
mov
rcrl
mov
xchg
dec
or
out
inc
sbb
inc
sbb
hlt
orb
push
pop
adc
in
es
xor
push
sahf
jb
mov
popa
jae
xor
dec
pop
mov
dec
cmp
lods
int3
sbb
mov
push
cli
and
int3
push
cmp
into
jb
ss
xor
sbb
pop
xchg
add
iret
push
enter
mov
cwtl
js
inc
inc
data16
jo
sbb
cmp
jecxz
xchg
push
pop
adc
pop
dec
xchg
js
inc
stos
sub
or
fs
sub
clc
pop
aam
hlt
add
mov
testb
pop
push
sti
push
dec
xchg
stos
and
in
rclb
jbe
sti
xlat
xor
mov
mov
daa
mov
or
int
pushf
xor
mov
sbb
icebp
inc
sahf
popf
ljmp
xchg
in
rclb
ja
or
test
movsl
lock
cmp
sub
fldl
adcl
lods
mov
sub
pop
sbbl
in
and
rol
push
adcl
and
jg
iret
adc
es
sub
mov
lahf
push
pop
test
faddl
and
bswap
jl
mov
pop
divb
mov
int
mov
vpcmpgtd
arpl
push
cld
mov
pop
enterw
sarb
jle
aad
dec
mov
lock
xlat
pop
and
mov
xor
bound
xchg
out
cmp
add
push
pop
mov
push
fistpll
outsb
mov
xchg
push
sub
divl
std
xchg
mov
arpl
dec
imul
popa
xor
sbb
pop
xor
and
mov
xor
sbb
push
pop
add
pop
or
mov
aam
aad
bound
mov
and
inc
sbb
mov
cmp
rol
jb
bnd
rorl
rcrb
pop
fs
sarl
rcll
pop
insb
sub
iret
sub
or
jge
stc
cli
out
or
or
pop
sbb
mov
jecxz
xchg
mov
mov
iret
add
cmp
sub
shrl
fcmovb
mov
repz
inc
sti
imull
mov
pusha
or
out
inc
or
mov
pop
adc
in
xchg
das
repnz
push
xchg
pop
cs
push
jne
movsb
icebp
cmp
call
sub
insb
call
insl
out
lret
jo
and
nop
daa
xchg
xchg
mov
je
dec
jp
and
pop
push
out
pop
mov
out
lea
sbb
mov
imul
push
mov
imul
inc
loop
nop
jno
mov
call
fucomp
pop
pop
xor
sbb
xor
das
cwtl
adc
leave
popa
mov
outsb
xchg
mov
jne
mov
cmpsl
sub
jmp
mov
sub
jecxz
push
lahf
jne
loope
push
sahf
jg
jmp
shlb
out
icebp
gs
add
dec
xchg
scas
stos
ss
xchg
loope
ret
adc
test
sub
push
and
mov
pop
call
outsb
insb
rcl
add
lahf
pop
push
xchg
inc
dec
pop
push
push
jmp
lods
daa
jne
jns
lcall
repz
int3
pop
inc
out
sbb
std
jbe
int
in
dec
mov
daa
ja
jmp
out
and
mov
mov
in
dec
xchg
push
cli
pop
inc
stos
sbb
mov
or
inc
pop
mov
in
shrl
push
stos
mov
adc
pop
push
pop
or
fidivs
ljmp
xlat
insl
cld
lods
mov
jo
ljmp
aaa
push
fcomip
push
and
pop
and
lea
cmp
int3
fistps
or
popf
aam
fs
dec
fsubrp
xchg
flds
in
pop
stc
and
lods
lea
in
inc
cmpsl
sbb
push
mov
fstpl
inc
and
mov
fiaddl
syscall
loope
sub
pop
dec
lcall
xchg
or
xor
stos
pop
daa
in
jne
ljmp
cmp
pop
test
adc
jge
mov
and
aam
hlt
xlat
call
or
inc
adc
push
xchg
and
xor
lods
sbb
fildl
xor
pusha
sbb
ror
loope
hlt
cmpsl
aad
imul
xor
sahf
mov
inc
push
repz
sarl
xchg
cwtl
je
insl
mov
les
fcmovne
add
pushf
in
stos
bound
ret
adc
int
adc
push
mov
mov
jns
inc
out
faddp
xchg
jl
leave
stc
out
int3
outsl
mov
sub
sahf
nop
test
or
movsb
xorl
mov
call
pop
stos
lcall
loope
ljmp
fwait
adc
mov
dec
mov
xchg
faddl
sbb
out
push
outsb
or
shl
sbb
gs
cli
iret
in
or
cld
enter
mov
cmp
stos
mov
fisttps
sbb
dec
flds
mulb
movsl
xchg
testb
xor
loope
es
jge
pop
sub
add
jno
jnp
add
fisubrl
mov
pop
xchg
mov
shll
mov
inc
mov
or
arpl
orb
into
sar
scas
jo
inc
jp
subb
fiaddl
mov
push
push
xor
hlt
scas
dec
or
sub
cmp
sbb
xor
xchg
lds
jns
xor
jo
pop
fwait
jmp
mov
aam
adc
and
dec
mov
jmp
or
mov
or
dec
cltd
lahf
flds
es
mov
sbb
arpl
int3
inc
ds
and
push
push
sub
out
mov
push
imul
xorl
or
cld
fstpt
mov
test
stos
mov
cld
lahf
inc
push
jbe
sbb
sbb
ffreep
push
fldt
jg
sbb
lret
ja
dec
test
mov
iret
sahf
adc
mov
out
xchg
fdivrl
ret
xor
test
in
inc
je
and
ja
xchg
and
lahf
cwtl
and
clc
jl
pop
icebp
jecxz
imul
sbb
xchg
js
daa
jg
mov
inc
mov
mov
mov
sbb
mov
int
and
icebp
lods
movsl
lds
lldt
int
sbb
dec
bound
stc
dec
dec
pop
push
and
cmp
pop
mov
adcb
mov
and
pop
lds
lea
xorl
pusha
sbb
jo
adc
xchg
and
adc
lods
cltd
je
jae
mov
dec
jmp
push
in
incl
sub
push
dec
out
sbb
hlt
and
xchg
mov
test
mov
sarl
and
push
cli
in
or
sub
arpl
scas
cmp
cmp
adc
push
push
call
pop
idivb
lods
out
and
ret
lds
mov
je
scas
lods
and
ret
bound
popf
int
and
xchg
inc
xor
clc
in
or
ja
xchg
sub
addl
imul
mov
fwait
in
inc
mov
jge
scas
into
mov
mov
idivl
pop
popf
and
or
loop
cmpsb
xchg
insb
or
jg
inc
mov
aad
dec
mov
mov
mov
fwait
lock
push
stos
aad
cmp
lahf
test
cmp
inc
sahf
mov
pop
sar
sbb
cld
je
int3
testb
xor
xor
add
mov
js
cld
and
cmp
mov
mov
std
mov
adc
adc
jns
outsl
ljmp
add
imul
inc
movsl
cmp
lea
mov
mov
int
pop
and
sti
push
xor
or
mov
pop
aad
jmp
ljmp
cmp
out
cwtl
inc
mov
ljmp
imul
or
xor
insb
aad
es
sti
xchg
aad
jle
and
test
push
adc
xor
mov
sbb
aad
stc
push
lock
fsubl
call
xchg
jns
pop
jns
es
iret
sbb
cwtl
lea
and
ljmp
fbstp
out
and
cmp
and
or
xor
js
mov
imul
and
mov
andb
or
xchg
dec
test
lea
and
and
or
ja
loope
dec
xchg
imul
pop
or
xor
lret
sarb
adc
ret
jb
xchg
je
call
inc
cmpsb
fistl
pusha
mov
call
mov
sbb
push
imul
mov
jmp
inc
enter
cmp
xlat
jp
fnsave
xchg
mov
test
out
outsl
movsb
pop
loop
cmp
inc
mov
or
mov
lret
insl
movsl
mov
pop
and
cwtl
push
jbe
jnp
mov
pop
movsl
add
xor
insl
sub
out
rcrl
cmc
aad
leave
test
es
aaa
fmuls
cwtl
and
xor
xchg
rol
aas
jp
sbb
lret
sub
imul
cmp
xorb
mov
out
mov
sbb
push
and
mov
shlb
pusha
xchg
mov
jg
dec
mov
insb
push
enter
sub
xor
xchg
stos
inc
dec
icebp
icebp
mov
pusha
and
mov
shl
cmp
pause
inc
cmp
mov
mov
dec
arpl
xor
xchg
andl
push
mov
adc
test
sahf
bound
rep
xor
inc
jae
loope
xchg
pusha
pop
fsubr
sbb
popf
ss
push
jae
fnstcw
add
or
fs
int3
cs
mov
in
add
out
test
mov
pop
mov
or
nop
dec
test
inc
ret
int
rcll
je
dec
and
or
ret
jge
cmp
lds
sub
lods
jle
mov
rcr
int3
scas
in
add
xchg
jb
and
lods
rcll
cmp
mov
stos
adc
add
xchg
fcom
jmp
jae
mov
dec
fsts
cmp
xlat
fneni(8087
mov
mov
push
xor
pop
mov
xchg
mov
mov
jbe
das
shr
pop
mov
jns
and
mov
in
jb
cmp
jge
cltd
cmp
push
jne
sub
andb
imul
mov
aas
push
or
cltd
adc
in
add
es
push
jno
seta
push
dec
dec
or
inc
shrl
and
daa
cmpsl
sahf
pop
adc
jmp
add
mov
push
cmp
mov
rorb
xchg
pop
jns
mov
loopne
je
mov
xchg
mov
inc
jo
imul
adc
mov
out
pop
cmp
sub
divb
lods
aaa
shlb
dec
out
pushf
lcall
lods
jmp
mov
loop
jmp
fsubrs
sar
repz
push
dec
hlt
xchg
out
cmp
lahf
jno
or
ja
jb
jbe
repnz
cmp
stos
in
stc
aad
sti
xor
add
jge
inc
jecxz
jb
popa
invd
or
xorb
icebp
push
push
add
and
push
lret
sub
dec
or
aaa
les
mov
xorl
rcll
scas
inc
and
xlat
outsb
imul
or
cmp
pop
dec
dec
xor
push
mov
es
insb
adc
sbb
adc
rorb
or
clc
sbb
xor
cmpsl
inc
jecxz
jnp
push
push
fsubl
in
xor
add
push
dec
mov
scas
fcom
scas
and
mov
mov
in
xor
sti
jmp
out
xor
jnp
arpl
fisubrs
mov
add
test
sbb
cmp
mov
sbb
out
mov
data16
push
adc
adc
rclb
lds
in
push
inc
inc
xchg
inc
mov
sbb
and
mov
mov
nop
movsb
sub
sub
icebp
cmp
cmpsb
jae
ljmp
xchg
enter
lret
add
ficoml
add
xor
pop
or
out
pop
pop
xor
pop
sarl
outsb
test
mov
rcrb
sahf
out
movsl
mov
mov
mov
arpl
or
mov
push
adcl
jle
pop
sahf
push
push
rcll
cli
mov
or
cmp
sub
push
inc
lods
xchg
jns
mov
mov
cli
pusha
bsf
fadds
data16
xor
arpl
and
je
xchg
cs
roll
push
or
addl
push
add
icebp
sub
cwtl
stc
sbb
and
mov
push
ja
cmp
mov
sub
lret
adc
fs
or
in
lea
aas
mov
iret
xor
add
cmpsl
mov
and
adc
shrl
adc
sbb
pushl
cmc
popa
cltd
lods
jns
imul
cmovs
sbb
inc
dec
mov
test
std
popa
stos
adc
data16
js
push
sbb
xchg
test
popa
data16
push
xchg
mov
lods
or
flds
addr16
iret
mov
xchg
rsqrtps
push
jbe
add
pushf
or
sarl
xor
jae
jmp
shll
iret
push
push
mov
sbb
or
je
popf
andl
aam
test
cmc
mov
mov
mov
push
inc
dec
dec
ret
adc
xlat
jbe
test
loop
xor
insl
rcrb
aad
or
push
mov
lahf
mov
fstpl
mov
or
notl
fxch
mov
test
inc
mov
mov
ret
adc
lahf
mov
adc
xor
mov
fidivl
push
negb
cmp
lret
cli
orl
jmp
mov
es
stc
mov
out
mov
sbb
mov
sbb
mov
imul
lret
push
and
fmull
lahf
je
movsb
mov
pop
inc
xchg
fsubr
xchg
pop
add
push
adc
in
lret
jno
in
ret
lret
in
dec
dec
mov
dec
sub
dec
mov
sub
mov
xchg
aaa
xchg
cmp
dec
call
cmp
adc
xchg
lcall
mov
sbb
jns
jmp
outsl
in
popf
add
rolb
dec
sub
mov
in
std
xor
mov
loop,pn
cmp
mov
incb
rclb
push
je
xor
in
out
je
cmp
icebp
xchg
push
push
outsl
das
fs
movsl
mov
mov
and
adc
lea
sub
cmp
cmp
out
xor
fists
daa
das
xor
les
loopne
leave
mov
fistl
xor
lret
add
test
dec
and
cwtl
dec
xor
clc
int
call
bound
push
or
iret
lock
xchg
inc
add
xchg
repnz
cs
cli
cli
mov
inc
pop
pop
les
mov
sbb
cmp
sub
xchg
xor
xchg
dec
add
mov
mov
enter
cli
loopne
scas
mov
nop
push
sbb
fldl
gs
pop
jecxz
pop
mov
int
push
push
mov
pushf
xchg
or
jae
gs
insb
inc
daa
push
pushf
push
int3
sub
das
push
fdiv
pop
mov
and
pop
test
xchg
pop
loopne
pop
xchg
popf
js
es
jae
test
xor
test
test
sub
insl
repnz
dec
jo
and
sahf
sub
test
xchg
mov
mov
scas
rorl
or
mov
dec
testl
mov
mov
out
jl
xor
and
cmp
cmp
stc
cwtl
lods
insl
movsb
push
or
push
mov
xchg
push
scas
bound
and
das
stc
mov
cltd
ss
test
or
inc
in
jmp
out
inc
je
dec
repz
pop
clc
inc
aad
mov
cld
xlat
stc
pop
daa
adc
jge
out
xor
or
xchg
dec
in
adc
scas
clc
scas
ds
add
rcll
lock
adc
push
stos
dec
push
jnp
int3
cs
xchg
lods
mov
add
repnz
inc
std
enter
rcrl
sti
sbb
mov
fimull
push
ds
les
sbb
lods
xlat
sub
xor
iret
stc
adc
jl
dec
xchg
xchg
mov
out
dec
popa
push
inc
sub
pop
push
inc
cmp
mov
movsb
pop
clc
jmp
repz
in
add
mov
mov
ds
sbbl
cmpsb
jle
mov
mov
sub
ficompl
mov
mov
sbb
adc
mov
jge
cmpl
jb
adc
les
pop
hlt
das
mov
inc
stc
mov
test
xchg
movsb
pop
sbb
dec
int
iret
cmp
and
xchg
ljmp
aas
lods
pop
lahf
cmp
mov
js
push
sbb
out
jp
test
cmpsb
mov
test
adc
or
push
or
roll
add
sub
mov
frstor
inc
inc
cwtl
push
testl
lret
push
into
xor
pop
in
scas
push
mov
nop
ljmp
sbb
mov
adc
jae
pop
and
mov
imul
inc
push
xchg
lahf
mov
cmp
shll
xlat
enter
inc
xlat
pop
lock
mov
into
les
unpcklps
sbb
icebp
std
pop
jnp
cli
pop
push
mull
les
push
sub
scas
pusha
or
jo
xor
cwtl
push
lods
es
xchg
icebp
jecxz
aaa
sbb
jp
lods
insb
xor
mov
fildll
shl
cmp
fstpt
sub
frstor
loop
das
cmp
lds
lahf
aad
iret
jnp
xchg
lods
ss
int
divb
push
mov
mov
mov
sbb
lahf
sub
sub
ljmp
sbb
mov
imul
movb
adc
imul
outsl
xchg
mov
arpl
adc
and
mov
insl
stos
fisttpl
push
aaa
jnp
rorl
mov
nop
mov
test
inc
push
arpl
push
out
add
movl
jle
iret
and
std
imul
ret
sub
aad
cmpsb
mov
mov
and
ret
shl
xor
sbb
nop
dec
jl
nop
filds
cmp
inc
push
lds
xchg
xchg
popa
test
sbb
mov
aas
scas
jns
mov
stos
sbb
dec
sub
int
fwait
add
sbb
mov
loope
jno
sbb
jg
inc
iret
jo
xchg
shlb
lds
bound
xchg
jmp
cmp
dec
inc
es
aaa
repnz
aas
shlb
cmp
adc
fwait
popa
mov
lret
lds
int3
shlb
cli
adc
testb
cli
out
dec
ret
mov
sbb
push
or
fsubl
sbb
and
aas
ljmp
dec
ds
inc
and
mov
adc
lods
hlt
inc
js
imul
fstl
mov
jae
pop
xor
and
and
push
add
cmc
inc
inc
cmpsb
sarb
ds
pop
and
aaa
pop
lahf
enter
ds
sti
sbb
call
les
inc
nop
inc
imul
aas
ja
jns
or
call
cmp
or
or
roll
bound
scas
mov
and
fnstenv
mov
in
jg
sbbb
ljmp
insb
push
mov
rcrb
imul
lods
dec
lret
push
or
sbb
pop
mov
pop
jnp
mov
rcrl
push
sub
out
push
ja
push
jmp
mov
test
ret
push
cmc
call
int
nop
push
sbb
xor
setbe
jmp
push
pusha
addr16
ljmp
lcall
fldcw
xorb
aaa
adc
fbstp
les
inc
mov
gs
xchg
mov
xor
aam
stos
push
jno
stos
jnp
imul
mov
pop
pushf
jno
ret
clc
mov
jbe
mov
pop
mov
daa
pop
pop
inc
jo
fcmove
xchg
xchg
fildll
shl
out
mov
xor
loope
mov
shl
jb
mov
lret
fwait
xor
sub
pop
inc
cwtl
popa
jo
mov
push
or
mov
mov
das
jecxz
inc
sbb
and
mov
jmp
add
mov
cld
mov
cmp
adc
adc
cmp
push
cmpl
leave
pop
xor
and
test
cmp
loopne
push
sub
pop
pushf
dec
aaa
int3
mov
and
push
adc
std
jnp
shl
cmp
mov
xor
sub
bound
and
mov
xchg
push
sbbb
mull
xor
lret
aad
je
adc
lds
mov
int
inc
adc
out
cmpsl
imul
sub
call
leave
popf
inc
es
enter
cli
mov
clc
add
jno
mov
push
jge
mov
sti
data16
fmulp
mov
sub
cmp
adc
imul
jge
xor
mov
mov
dec
jl
dec
setns
pop
jo
shrb
lcall
into
pushf
push
fmull
mov
in
gs
xor
pop
xchg
call
lods
or
imul
mov
popa
sub
adc
adc
ds
mov
push
jnp
fisttpll
popa
mov
jle
insl
movsb
pop
push
xchg
pop
fwait
push
notb
xor
sub
cwtl
adc
scas
inc
rorl
and
stos
fistl
jbe
mov
sub
aas
scas
cmpsl
sahf
pop
mov
std
rcr
add
add
repz
mov
or
gs
iret
jbe
cli
dec
and
xor
insb
arpl
sub
and
pop
sbb
ds
in
mov
cmp
out
and
cmp
jg
pop
sub
ficoms
inc
mov
push
nop
push
push
fwait
repnz
into
mov
mov
out
sbb
arpl
subb
pop
pop
dec
hlt
fidivrs
mov
inc
lret
aam
or
fcmovnu
iret
or
mov
jnp
dec
cmp
sub
sub
mov
jae
xchg
jmp
sti
sub
pop
push
xor
mov
shll
sbb
pop
stos
and
or
mov
subb
int3
push
fcmovnbe
xor
test
lret
leave
test
jae
pop
mov
mov
cltd
mov
fsub
pop
aaa
push
rcl
out
movsb
adc
ja
sbb
mov
outsb
test
push
mov
decb
inc
cmp
cmpsl
enter
inc
jl
jno
pop
xchg
xor
mov
out
mov
outsb
vandps
push
sbb
cmp
sbb
lahf
popa
adc
pop
add
mov
adc
push
cmp
push
fdivrp
adc
mov
out
cmpsb
sbb
sub
cld
jp
pusha
andb
or
jno
add
mov
pushf
xchg
stos
xchg
inc
pop
add
mov
xor
arpl
daa
mov
push
fs
setbe
ret
add
mov
and
jnp
adc
ficomps
dec
inc
inc
repnz
fiadds
and
mov
stos
inc
sbb
addr16
mov
push
xor
mov
jl
mov
add
mov
je
push
push
adc
xchg
inc
ficoml
xchg
repz
push
std
cmp
dec
popa
insb
and
les
mov
sbb
popa
cmp
popf
and
rorl
inc
jno
into
or
push
icebp
jb
or
es
inc
xchg
pop
xchg
addl
jne
adc
test
pop
or
adc
addr16
inc
mov
dec
icebp
rolb
jb
rclb
mov
leave
dec
out
cmp
lea
incl
sbb
aaa
cld
mov
addr16
jmp
repz
sbb
dec
fimull
addb
sbb
fisttpll
cmp
lods
or
loope
int
add
mov
dec
jnp
decl
shrl
out
js
test
out
das
pop
mov
dec
aas
or
daa
in
out
xor
inc
leave
cmp
daa
fldenv
test
sbb
mov
pop
mov
loope
mov
mov
aas
lea
sub
push
fdivl
movsl
repnz
je
scas
dec
mov
fstl
xor
out
sbb
jno
xchg
adc
loop
jae
cmp
cs
daa
mov
push
lods
jp
std
clts
js
cld
adc
pushf
add
in
iret
add
aad
push
mov
aad
lcall
repz
repz
mov
pop
loop
inc
lea
hlt
add
xor
push
dec
out
shrl
inc
mov
stc
dec
mov
cltd
xchg
sub
mov
in
jmp
and
pop
dec
int3
sub
jge
sub
mov
jle
into
mov
lret
pop
lds
pop
mov
push
scas
pop
out
rcl
mov
out
leave
cmc
std
aaa
inc
xchg
insl
cmp
aad
cmp
pop
fadd
into
ja
mov
popa
iret
pop
xor
shl
in
in
sbb
ljmp
outsb
dec
sub
cwtl
push
mov
xor
push
jns
push
subb
andb
sub
loop
mov
out
mov
not
push
or
test
add
and
aam
roll
cmc
lcall
dec
in
sbb
sbb
fsub
ret
mov
mov
xchg
xchg
add
mov
push
std
cmp
call
add
addl
loopne
push
ss
pop
mov
mov
adc
mov
and
fcmovnu
ja
test
add
scas
xchg
data16
nop
xor
std
imul
pusha
add
sub
push
loopne
adc
sub
mov
test
or
inc
jecxz
sub
in
icebp
or
inc
les
loopne
or
xchg
cmp
insl
sbb
lret
lds
outsl
lock
sar
xchg
push
and
mov
sbb
sbb
in
in
bound
mov
pop
xchg
cwtl
push
jb
es
adc
rolb
xchg
sahf
and
test
lahf
add
icebp
sbb
in
rol
out
xchg
cmp
jle
ret
stos
negb
outsl
cli
ret
dec
fs
mov
shlb
fsubs
mov
pop
cs
dec
stos
fs
nop
mov
sbb
stos
add
mov
add
mov
pop
aad
fisubrs
mov
push
push
subb
or
xchg
dec
outsl
ljmp
sbb
movsl
sbb
jp
cld
dec
pop
outsl
icebp
in
jmp
mov
cld
test
mov
jecxz
pop
adc
mov
inc
loop
call
add
bound
ror
dec
jno
outsl
sti
mov
lahf
outsb
in
and
fstl
loop
push
rorb
fbstp
xor
ja
call
popa
test
lock
jle
movsb
nop
pop
call
addr16
das
cmp
inc
outsl
ficompl
cmp
aas
dec
sbb
arpl
test
imul
mov
add
ss
ret
mov
pop
inc
cwtl
out
mov
lock
pop
mov
insb
pop
adc
daa
das
icebp
dec
mov
dec
mov
mov
xchg
and
add
push
xlat
sub
xchg
jmp
adc
lret
push
aaa
cmpsl
dec
sub
and
movsb
incl
std
dec
and
cwtl
loopne
push
out
xchg
mov
movsb
cwtl
xor
pop
test
or
cmc
outsb
imul
pop
cmp
pop
aam
dec
in
jl
sbb
inc
cmpsl
shrl
into
aas
mov
test
mov
adc
aas
mov
cmp
add
fwait
test
xor
or
js
ror
dec
sbbb
pop
call
pop
fsubs
dec
daa
jns
out
adc
sahf
enter
pop
adc
add
jmp
sub
sbb
dec
or
mov
testb
iret
add
orl
sbb
loopne
mov
pop
mov
das
and
sarb
aad
pushf
mov
test
jge
pop
fnstsw
enter
push
sub
pop
cmp
cltd
sub
call
loop
inc
ljmp
push
cmp
mov
inc
dec
jne
out
div
enter
cmp
cmpsl
jns
hlt
xor
scas
aad
push
push
fildll
popf
jg
push
or
inc
out
test
pop
clc
xlat
mov
stc
mov
push
mov
dec
call
inc
out
sbb
xchg
nop
sub
mov
imul
fs
mov
in
xchg
decl
out
pop
rclb
mov
movsl
xchg
ds
jne
inc
cmp
mov
hlt
movsb
push
add
sbb
lret
jg
mov
mov
outsl
inc
enter
dec
aas
daa
pop
xor
std
in
inc
frstor
adc
fs
push
pushf
imul
movsl
outsl
in
dec
pop
and
orl
inc
jecxz
rcll
push
shlb
push
jbe
mov
rorb
lahf
mov
pop
cmpsb
imul
add
cld
mov
pop
dec
sbb
mov
sub
cmpsl
cmp
mov
xchg
mov
sub
sahf
push
pushf
lret
xchg
xor
loop
pop
ja
jno
mov
imulb
sbbb
es
cmp
lock
mov
imul
xchg
xchg
adc
scas
mov
sub
ds
dec
in
mov
xchg
jns
outsl
push
roll
mov
dec
lret
jne
jno
pop
push
xlat
fsub
inc
xlat
jo
add
or
mov
rorb
daa
clc
lret
xchg
pop
fisubrl
sbb
out
divl
lock
dec
mov
cmc
fstps
sbb
out
out
mov
out
lock
xor
cmp
push
mov
mov
divl
xor
pop
and
xchg
cmpsl
insl
mov
or
mov
push
sub
mov
shll
stos
pop
adc
jb
lret
popa
cmpsb
das
ret
xor
fs
imul
push
insl
adc
test
pop
pop
inc
jecxz
and
adc
mov
jecxz
or
mov
out
outsb
inc
aas
mov
out
xchg
lods
stos
cmp
loope
adc
xor
xor
mov
lods
mov
jne
popf
fmull
sbbl
out
test
adc
push
icebp
ret
dec
aad
jle
adc
xor
mov
adc
idivl
andl
push
push
push
dec
adc
das
sub
mov
outsb
push
dec
int
std
leave
mov
insb
mov
cmp
cmc
int3
add
pop
cmc
adc
insb
mov
jl
dec
subl
in
or
mov
std
xor
lds
adc
sub
int3
mov
dec
and
cs
mov
iret
daa
or
loop
dec
and
pusha
aas
add
lret
mov
subb
cmc
sbb
ja
and
xchg
lds
int3
outsl
sub
sarl
and
jbe
sub
adc
dec
dec
test
cmc
xchg
jle
mov
js
mov
xor
or
pusha
xchg
mov
mov
jg
les
negl
dec
mov
pop
and
xor
cli
das
stos
sbb
xor
sahf
add
jns
push
fcomps
sbbb
and
scas
lea
aad
test
and
cmp
scas
ret
push
xchg
sbb
add
ret
daa
jae
xor
sbb
xchg
push
fistpl
test
rorl
adc
mov
js
xlat
mov
mov
movsb
scas
jl
xor
fs
mov
stos
dec
fisttps
xlat
ret
and
sahf
push
sbb
sub
imul
push
sarl
xchg
xchg
adc
mov
nop
push
fbstp
mov
call
and
jnp
inc
jp
dec
cli
in
or
push
icebp
xlat
inc
sub
mov
lahf
jg
pop
xchg
cmp
es
xor
mov
leave
in
loope
inc
test
ficoms
or
fs
and
sbb
pop
testl
cmpsb
dec
jecxz
sub
and
jecxz
cli
out
out
cli
fs
jmp
push
int3
xor
adc
testl
fidivl
xor
clc
add
iret
mov
lds
push
xor
shrb
mov
add
mov
shrl
add
mov
mov
decl
test
sub
shll
out
cmp
in
jbe
ljmp
rolb
jl
stc
adc
pushf
movsb
mov
mov
test
std
mov
scas
pop
aas
inc
int
sub
mov
cmp
rcll
mov
push
pusha
fdivl
mov
jo
cmp
mov
ja
enter
sub
aas
int
inc
pushf
pop
pushf
jo
sbb
sbb
stos
lret
jp
pop
pop
in
jmp
sub
leave
ds
cmp
sub
aas
pop
std
mov
test
sti
push
data16
in
xor
aam
push
push
and
cmp
inc
mov
jge
in
sub
dec
jmp
das
mov
and
imul
insb
insb
sub
jae
clc
scas
jne
ljmp
pop
pusha
bound
mov
outsb
dec
push
incl
mov
push
les
mov
cwtl
fimuls
dec
push
xchg
mov
les
and
lahf
xorb
add
je
pop
pop
xchg
or
xchg
sub
iret
dec
ljmp
sub
xchg
outsb
xorb
pop
mov
ljmp
cmp
or
push
scas
xchg
sbb
enter
cmp
movsl
lahf
div
jbe
outsl
xchg
adc
xor
in
daa
pop
lahf
call
cmc
sti
das
stos
add
mull
mov
push
cmp
mov
mov
aas
daa
into
dec
pop
sbb
fsubp
hlt
ljmp
mov
aam
xchg
xor
testb
add
mov
or
stc
xchg
mov
mov
rolb
xchg
sbb
cs
or
enter
sub
fldl
xchg
add
jmp
mov
lea
out
jno
mov
shll
test
in
mov
insl
or
adc
lds
imul
into
adc
mov
cmp
repnz
or
inc
in
sub
icebp
jmp
sti
sbb
jecxz
cmp
aad
in
pop
mov
xor
xor
ret
jge
sti
sub
test
cmp
dec
pop
mov
roll
test
nop
mov
pop
or
and
rcrl
aam
mov
stc
and
xchg
jmp
and
sbb
adc
xorb
loope
loope
sub
movsl
into
repnz
iret
adc
mov
nop
std
push
jg
scas
mov
outsb
cli
ja
jle
xorl
jle
out
mov
dec
lret
push
pop
and
sub
jecxz
and
jl
and
adc
push
mov
push
add
cmp
repnz
jb
xor
outsl
movsb
scas
and
js
mov
mov
fstps
or
adc
pop
push
test
call
xchg
pop
xor
inc
loope
stos
jle
push
stos
jecxz
cmpsb
loopne
pop
push
dec
inc
xchg
scas
push
fisubrl
and
xchg
fistl
add
inc
pop
add
inc
or
ret
mov
les
repnz
xchg
loopne
stos
cli
mov
js
sub
jmp
cmp
jle
in
xchg
jg
sub
in
andb
jbe
andl
sub
jnp
scas
jecxz
imul
test
lods
xchg
daa
sbb
enter
into
arpl
scas
push
sbb
dec
push
sarb
bound
mov
xor
mov
cltd
and
les
cmp
andb
test
inc
cmp
pushf
xor
cs
jge
xor
addr16
or
mov
bnd
xchg
addb
push
inc
out
xor
dec
mov
xchg
pop
fucomp
bound
cmc
out
mov
xor
or
popa
mov
hlt
xlat
std
lock
ljmp
std
pushw
pop
jbe
out
or
sti
leave
int
cmp
loopne
and
sub
ss
dec
into
addr16
sbbl
rcrl
jnp
sarb
cmp
lahf
loope
or
jno
inc
pop
les
push
test
dec
sti
mov
inc
jge
cmp
imul
pop
jne
mov
jle
aas
and
inc
testl
dec
mov
popa
adcl
ja
push
int
stos
jb
cmp
ret
push
lock
push
add
inc
push
sbb
fmul
stos
adc
add
jge
xchg
dec
add
xchg
adc
mov
daa
data16
cltd
rorl
cmpl
xlat
dec
rolb
js
cmp
insb
icebp
cmp
mov
int3
xor
negb
lcall
icebp
icebp
shll
jns
pop
movsl
aas
in
mov
mov
repnz
fidivl
xchg
dec
loop
pop
stc
pop
fimuls
movsl
adc
cmp
adc
push
dec
ret
inc
sub
add
cmp
ffree
pop
sub
inc
fsubr
aaa
pop
push
xor
cmp
push
pop
mov
pop
xor
mov
mov
mov
xor
mov
and
sti
cmp
aas
clc
mov
lods
adc
xor
mov
inc
test
inc
sub
cmp
xchg
cmp
xchg
mov
mov
pop
ss
rorl
and
in
pop
nop
sbb
or
in
cmpsl
add
inc
out
xor
adc
jmp
push
push
mov
popf
pop
sub
adc
outsl
pop
movd
add
insl
cs
aam
add
orb
arpl
call
cli
ficoms
cld
jno
out
push
push
test
sbb
and
lea
arpl
push
js
xor
xor
in
cmp
jns
mov
rclb
iret
pop
mov
mov
mov
sbbl
ret
pushf
dec
pop
sahf
pop
inc
xchg
inc
loopne
push
jns
fcomps
pop
inc
cld
dec
cmp
divl
mov
sbb
dec
push
inc
outsb
cmp
and
scas
push
icebp
comiss
out
add
pop
push
fsts
jb
cmp
jmp
add
cmc
sub
mov
push
push
mov
shl
enter
out
subl
dec
push
out
fidivrs
adc
sbb
adc
and
in
mov
or
shrb
std
xchg
inc
popf
enter
stos
or
adc
jecxz
inc
push
bound
sbb
pusha
daa
adcl
nop
and
sub
jno
xor
or
decb
dec
dec
mov
rcr
jmp
cli
repz
mov
addr16
sbb
and
add
in
in
mulb
cmp
shll
ss
cld
push
inc
gs
mov
pop
sub
cmpsb
sub
mov
adc
lahf
sbb
movsl
xchg
xchg
pop
cld
popf
fisttpll
and
flds
mov
stc
pop
clc
mov
sahf
ror
sub
gs
xor
cmpsb
pop
xor
mov
movsb
bound
add
mov
dec
xchg
push
es
scas
shlb
or
push
aaa
daa
rcl
shl
and
in
sub
pop
gs
rclb
pop
xchg
or
test
mov
pushl
out
scas
jmp
xchg
mov
imul
jno
movsl
and
fsubl
jmp
pop
dec
jnp
cmp
jp
lock
out
adc
mov
lds
cs
arpl
xor
das
pop
imul
xor
mov
je
mov
in
inc
out
aad
lds
xrelease
into
adc
das
notl
dec
mov
mov
popf
mov
andb
push
out
xor
ja
jg
subb
sbb
xor
mov
xchg
int3
fs
mov
icebp
cmp
cltd
inc
push
xchg
test
adc
mov
aaa
les
sbb
push
fnsave
cmp
pop
scas
int
fdivrl
or
pop
xor
mov
adc
outsl
addr16
push
inc
fbstp
dec
rcl
out
dec
loope
cmp
imul
jmp
jne
or
aam
pop
pop
out
out
jo
mov
pop
hlt
in
call
jbe
pop
pop
or
std
adc
bound
bswap
xchg
sub
cmpsb
ja
xchg
adc
xchg
sbb
adc
pop
inc
add
cmp
xor
push
lds
sahf
push
pop
lods
in
aas
lods
dec
cli
cmp
fsubrs
xchg
lea
lods
dec
jb
mov
jle
inc
in
pusha
inc
xchg
xlat
lret
add
das
test
adc
mov
push
adc
mov
hlt
push
jno
js
mov
das
scas
test
xchg
repnz
movsl
add
hlt
shlb
sbb
lods
pop
movsl
fldenv
mov
push
fistpll
pop
ret
xchg
push
or
shrb
adc
pop
popf
xor
in
inc
and
mov
cmp
push
fs
adc
int
mov
je
xchg
jo
fwait
stc
sub
fdivl
loop
push
jno
int3
pushf
push
add
cmp
leave
loop
or
je
push
fsubrs
rorl
int3
xchg
in
test
fs
movsl
push
sub
les
stos
mov
adc
rclb
add
popa
dec
stc
lret
mov
mov
lcall
iret
pop
mov
inc
es
and
sbbb
sti
inc
inc
cltd
call
inc
loop
adcb
xor
test
imull
mov
repz
xchg
popa
push
lret
and
rcll
and
cmpsb
jmp
ss
mov
mov
mov
sti
sub
adc
jne
pusha
clc
push
das
mov
mull
clc
jbe
gs
lock
data16
int3
pop
pusha
shl
ret
mov
mov
lahf
pop
pop
lcall
push
sbb
hlt
js
xchg
push
int
cld
sub
mov
shll
mov
sbb
fisubrl
fbstp
or
push
adc
gs
add
dec
add
repz
push
push
mov
xor
ja
jle
ss
out
sub
inc
push
lret
stos
push
pusha
pushf
jecxz
pop
pop
cld
mov
xchg
xchg
mov
cmp
sbbl
mov
mov
or
repz
notl
or
and
loopne
fistps
lods
xlat
imul
adc
andb
xor
fst
adc
gs
aaa
xlat
cmc
xor
cmc
mov
inc
daa
pop
add
mov
pop
add
cmpsl
out
pusha
fidivrs
into
mov
jle
mov
std
sbb
jecxz
cmp
js
jg
imul
test
xchg
outsl
out
or
inc
jl
das
mov
or
jp
int
dec
gs
jmp
test
std
aad
imulb
bound
test
jle
cltd
push
addr16
mov
or
push
jl
xor
rcr
aad
scas
in
in
aas
inc
jmp
lret
test
sahf
push
and
movsb
push
fs
xchg
out
movsl
sbb
cld
ljmp
shrl
jnp
mov
mov
test
xor
dec
jmp
shl
dec
jmp
dec
push
arpl
mov
imul
cmpsb
fldl
adc
sub
sarb
test
or
jle
sar
cwtl
mov
mov
std
jle
mov
mov
and
jnp,pn
stos
in
jae
out
out
in
inc
in
cmp
and
imul
and
pop
or
sbb
scas
xchg
ds
sub
adc
in
and
mov
pushf
arpl
cltd
ja
test
int
mov
jl
sub
fidivl
pop
mov
inc
call
jg
js
lods
push
mov
jg
push
sti
int
cld
in
decl
or
in
cmp
xor
mov
lret
scas
mov
xor
lret
push
add
dec
test
inc
pop
cmp
mov
aaa
sbb
adc
cmpsl
imul
sahf
push
dec
sub
inc
push
mov
iret
sahf
adc
inc
mov
mov
mov
pop
or
int
in
mov
inc
adc
leave
mov
int
jnp
cltd
cltd
cmp
push
cld
jne
xchg
ret
popa
jno
movsb
test
jl
test
rcrb
aam
jl
cmp
inc
fs
pushf
loopne
dec
incl
jle
sbb
aam
and
ds
fdivrs
push
adc
add
mov
nop
and
outsb
popf
mov
adc
add
rcr
test
ja
pop
push
xlat
sbb
mov
movsb
or
mov
mov
jae
lea
jmp
lock
cmc
jbe
shll
les
sarl
into
jle
pop
rol
cmp
cli
stos
jle
sub
mov
xchg
in
enter
in
fsubrl
mov
adc
hlt
cmp
jle
js
out
repnz
es
mov
out
xor
mov
repz
roll
add
or
cmp
mov
add
dec
test
adc
test
jbe
push
cli
daa
xor
push
mov
fcomps
insl
xchg
or
xor
in
xchg
mov
dec
pop
inc
out
das
sbbb
lahf
rcll
cmp
out
and
jl
cmpsl
push
lret
fadds
nop
dec
inc
lods
gs
inc
xchg
cmp
xlat
cli
mov
sbb
loopne
test
fs
push
jle
fisttpl
sbb
lret
jecxz
in
inc
sbb
mov
mov
sti
jnp
pop
inc
pop
lds
sahf
insb
adcb
cltd
lods
and
push
sbb
mov
and
fldl
rclb
push
aas
shrb
lea
adc
add
dec
push
popa
inc
in
adc
push
inc
es
fsub
fidivl
pop
pop
lock
sbb
lcall
data16
aad
adcl
rorl
push
pop
fs
int
inc
stos
cmc
mul
adc
das
lods
xchg
xor
dec
out
mov
popa
mov
and
mov
sbb
push
aad
mov
call
leave
sahf
out
not
aam
inc
fimull
adc
jns
push
add
mov
push
adc
fs
pop
addr16
fsubrl
cmp
cli
div
test
outsb
jae
leave
cmpsl
int
mov
lret
adc
mov
inc
jg
aas
int3
sub
and
mov
jge
cmp
sbbl
sbb
mov
les
push
pop
push
push
mov
inc
rolb
inc
insl
xchg
cmp
mov
jns
or
orb
inc
lds
push
xor
mov
lock
jp
xor
loope
test
and
cltd
cwtl
adc
jb
test
fiaddl
repnz
pop
out
or
mov
stos
fbstp
add
frstor
dec
pop
stos
out
mov
pop
inc
insb
cmpsl
aad
and
mov
shlb
movsl
mov
lods
test
push
xchg
das
mov
push
call
mov
xor
sub
jbe
bound
pop
cmp
loope
add
stos
pop
sbb
leave
cmp
or
pop
in
jmp
jmp
loopne
add
jae
push
cmp
jb
xor
cli
loop
movsl
cmp
je
add
and
rorb
out
lods
sub
out
ret
adc
cltd
sahf
inc
push
jl
lods
or
pop
iret
js
mov
push
pusha
ficoml
cmp
repz
ljmp
pop
jl
jge
pop
sbb
add
enter
push
outsb
cmp
ds
fs
out
cmc
or
xchg
dec
sub
mov
clc
xchg
pop
cltd
dec
mov
in
mov
addl
insl
sub
xor
push
xor
mov
dec
sub
jns
mov
inc
int
movl
fistps
aas
cmp
xchg
inc
mov
das
mov
cmc
add
dec
inc
faddl
pop
aad
stos
mov
adc
dec
sbbb
in
xchg
and
sub
into
pop
lret
pushf
jnp
push
fldenv
sbb
inc
and
inc
dec
in
js
push
pop
push
jp
push
sahf
add
enter
testb
leave
push
hlt
mov
mov
mov
cmp
and
sbb
subb
cmp
add
es
cmpsb
sub
cmpsb
jae
fistpl
in
pop
divl
fistl
je
cmc
es
fimull
dec
sbb
xor
push
push
adcb
cld
fsubrs
mov
lods
sahf
mov
repz
adc
push
lret
dec
and
pushf
dec
insb
aad
aad
sbb
or
fdecstp
mov
cmpsl
in
cmp
in
pop
sbb
dec
lret
pop
popl
js
or
cld
mov
fldt
xor
mov
ret
out
orl
cmp
je
sti
dec
and
sbb
bound
setne
mov
adc
repnz
cmp
in
pop
stc
sub
add
lds
fwait
jl
imulb
repnz
iret
inc
mov
jae
sub
dec
clc
xchg
mov
out
fwait
daa
cs
jne
mov
xchg
or
mov
cmp
loope
and
add
mov
jne
push
cmp
out
in
push
ss
andl
movsb
xor
lock
into
gs
adc
jbe
push
sbb
jne
idiv
push
pop
cmp
aaa
mov
pop
push
movsl
sbb
lock
stos
push
push
scas
mov
aaa
pushf
sbb
sub
pop
mull
push
sbb
nop
ret
andb
jno
dec
ja
pop
xchg
dec
add
stc
sahf
mov
adc
jno
and
dec
lods
data16
jo
jo
popa
outsb
push
and
jl
sbb
aaa
push
mov
and
call
popf
sub
pushf
dec
adc
dec
mov
or
add
sarl
sbbl
push
jge
addr16
aaa
mov
push
shll
jg
xchg
stos
mov
adc
push
jecxz
mov
or
ret
clc
jp
imul
dec
in
or
iret
pusha
sub
sbb
adcb
leave
mov
push
sub
pushf
sti
xor
dec
mov
jecxz
adc
pusha
inc
mov
push
das
std
ja
pop
push
fdivrl
inc
fucomp
andb
push
push
loopne
jp
sahf
adc
cltd
cmp
movsl
cmp
lea
sub
dec
xorl
add
ljmp
hlt
pop
sub
mov
adc
xchg
jne
leave
arpl
push
fmull
mov
pop
out
mov
xchg
add
imul
leave
clc
je
and
scas
dec
rcrb
mov
jecxz
dec
push
pop
jbe
sub
sub
lea
das
inc
jp
xor
and
das
pusha
xor
lcall
push
pushf
or
or
in
pop
sahf
dec
mov
xor
insb
stos
popa
jge
adc
mov
or
xchg
ljmp
imul
pop
mov
pop
mov
jne
jmp
ja
imul
jns
inc
lcall
jbe
inc
inc
and
cmc
int3
aad
popa
jae
jmp
out
mov
int3
movsl
jne
sbb
jb
jnp
sbb
int3
dec
xchg
notl
int3
mov
lods
into
mov
insb
fidivl
test
in
cmpsb
shr
subb
push
aam
mov
leave
jmp
inc
out
out
cmp
xor
sahf
mov
inc
test
cmp
pop
aad
arpl
stos
push
popf
shrl
cmpb
call
stc
adc
mov
je
scas
mov
adc
inc
adc
push
test
outsl
mov
xor
jno
cmp
mov
cltd
mov
mov
xchg
scas
xchg
inc
jecxz
psubw
cmp
adc
imul
lock
jle
outsb
out
mov
aaa
hlt
push
lahf
sbb
pop
cwtl
mov
jmp
divb
add
pop
mov
mov
pop
push
psraw
aad
das
clc
test
inc
jno
scas
aaa
xchg
xchg
push
and
cmpsl
fistl
add
leave
jb
mov
push
mov
les
enter
adc
xchg
and
dec
push
mov
imul
sahf
mov
lcall
adcl
inc
push
or
aam
cs
inc
sub
dec
fmuls
push
and
addr16
mov
cmpsb
sbb
mov
push
sar
imul
xchg
imul
cwtl
out
xchg
and
sub
or
cmp
lahf
scas
mov
mov
ja
pop
sbb
sub
or
test
dec
inc
lret
adc
mov
in
push
mov
push
ss
aad
mov
out
enter
or
data16
mov
and
mov
pop
clc
pushf
repnz
fidivrl
adc
inc
enter
add
imul
dec
mov
es
lods
mov
mov
out
xchg
ror
lahf
mov
test
xchg
and
les
jle
and
and
mov
inc
je
or
xchg
xchg
lods
pop
add
inc
dec
cmp
xchg
ss
xor
les
hlt
insb
inc
or
mov
in
int
fnsave
insb
scas
xor
cmpsl
mov
test
inc
roll
push
in
iret
sahf
mov
or
std
add
fimull
or
stc
push
aad
pop
clc
push
call
mov
fcoml
mov
jmp
pop
loope
loopne
sub
cmp
push
aad
add
rclb
test
dec
mov
add
push
fs
int3
js
cmp
hlt
xor
xor
adc
cmc
ret
push
push
cltd
xor
out
aaa
ficoms
rclb
xchg
cmp
mov
es
lcall
mov
jge
or
jmp
dec
push
repz
imul
lcall
roll
cmp
stos
lds
popa
sub
push
mov
push
repnz
mov
jbe
js
sbb
scas
shll
ret
jg
insl
fdivrl
fcmovnu
and
mov
xchg
push
xor
cmc
jecxz
std
xchg
mov
jg
inc
test
and
jo
cmp
or
pushf
sbb
fcomi
sub
fxch
loope
cltd
adc
adc
dec
mov
jecxz
imul
pop
jnp
lcall
push
sbb
pop
sub
repnz
mov
or
push
or
mov
and
mov
pop
mov
sbb
addl
adcb
push
cli
imull
outsb
inc
repnz
aam
outsl
rcrb
je
cmp
mov
cs
mov
pushf
add
fbstp
sbb
sahf
add
jle
into
aas
je
pop
xchg
in
mov
bound
sbb
jnp
pop
mov
imul
mov
inc
popa
rorl
js
ja
adc
les
sub
int
dec
aam
add
inc
adc
icebp
cmp
out
dec
test
stos
jp
test
test
shlb
test
push
adc
jb
fsubrs
enter
xchg
sarl
xor
insb
sbb
call
jae
test
mov
leave
das
mov
ja
sahf
test
mov
mov
and
arpl
arpl
cmp
stos
sbb
xchg
push
xor
insl
xchg
loope
and
mov
adc
mov
cmc
cmp
push
xor
xor
pushf
popf
mov
sbb
xchg
cwtl
je
out
inc
xlat
pushf
xor
scas
insl
outsl
hlt
out
int
mov
fstpt
lods
and
adcl
jnp
lods
test
mov
icebp
pusha
adc
mov
aad
push
dec
insb
fidivrs
jg
jl
sbb
lret
or
mov
stos
sarl
jb
jnp
inc
insb
xchg
mov
pusha
mov
pushf
or
ret
add
mov
jl
dec
or
add
sbb
lods
outsb
jns
dec
cmc
xchg
lcall
and
push
repnz
dec
in
lods
ficoms
dec
cmp
pop
outsl
filds
mov
jo
inc
mov
scas
push
mov
and
pop
mov
jge
hlt
sub
sbb
pusha
jb
sbb
das
mov
pushf
fadds
inc
jnp
xor
sbb
aad
adc
js
lea
les
sbb
fwait
mov
stc
mov
rorb
scas
push
lds
ss
stos
adc
addb
mov
xor
in
test
mov
sbb
aam
fwait
pop
les
imulb
push
adc
ja
enter
pusha
popf
or
imul
add
inc
cli
addr16
jmp
add
xchg
add
mov
mov
mov
push
xchg
push
mov
push
push
repz
es
and
lret
push
fnsave
sub
lret
lods
xor
adc
pop
pop
inc
ds
test
push
pop
adc
mov
fs
inc
xchg
adc
imul
and
cmp
lret
test
xor
mov
xchg
aaa
cltd
dec
popf
xor
ds
imul
jmp
js
adc
pop
icebp
test
dec
aad
xchg
jecxz
mov
cmp
mov
cli
push
sahf
jbe
pop
fcomi
popf
rol
pop
daa
adc
dec
rclb
jge
xchg
gs
add
cmp
mov
dec
xchg
add
ret
jmp
flds
enter
ficoml
sbb
push
aaa
cmp
enter
sbb
jge
push
int3
bswap
gs
xlat
mov
cwtl
jae
test
dec
mov
in
inc
js
sub
fidivl
hlt
sbb
es
test
mov
sub
mov
inc
imul
jmp
mov
in
sub
cwtl
incb
cmp
push
mov
lret
movsl
aas
sahf
mov
xchg
scas
mov
sub
je
aam
shlb
bound
jae
mov
lds
int3
fisttpl
les
adcl
cli
and
or
je
call
push
pop
dec
mov
pop
push
divl
ss
cld
imul
xor
mov
call
or
stos
mov
fildl
cltd
imul
outsb
mov
xchg
xlat
jle
sbb
adc
clc
jo
mov
stos
es
sub
adc
lcall
xchg
ds
inc
or
push
push
adc
imul
movsb
jg
cltd
and
xor
imul
xlat
mov
cmp
cmpsb
jb
xor
test
fildll
sub
cmp
sbb
aas
lahf
add
xchg
pop
sub
mov
inc
ss
inc
xlat
in
flds
inc
out
imul
scas
add
enter
daa
dec
mov
xchg
test
lea
fs
ficoms
push
pop
fidivl
fisubs
cmp
imul
test
jmp
fidivs
and
adc
fmulp
sub
stc
xchg
pop
gs
dec
sbb
mov
dec
out
mov
jmp
or
or
jbe
inc
fcmovnu
xor
inc
stos
mov
stc
push
add
xor
arpl
mov
outsl
add
iret
test
imul
cmp
push
push
js
inc
bnd
ds
inc
jl
jge
scas
jo
jo
and
fs
xchg
sarl
cmp
nop
xor
xchg
pop
leave
cld
insl
xchg
dec
jns
stos
shrl
aad
jecxz
xchg
xchg
aam
stc
outsl
mov
es
pushf
sarl
cmp
xchg
push
mov
lods
inc
mov
aad
dec
ljmp
adc
xor
and
lret
subl
shlb
bound
lods
pop
mov
mov
mov
nop
jne
or
mov
daa
inc
pop
jns
jp
jno
mov
inc
mov
mov
inc
inc
into
jae
xor
adc
mov
jl
mov
pop
sbb
mov
cmp
mov
les
leave
and
jge
leave
adc
cwtl
orl
cmp
cmp
adc
arpl
hlt
or
push
mov
std
jmp
and
fisttpll
dec
cmp
imul
aam
clc
cld
sub
mov
sub
shrl
mov
out
mov
neg
jnp
mov
pop
daa
lods
arpl
cmpsb
icebp
out
cs
rcr
pop
pop
jp
clc
jno
sub
jne
ficomps
push
andl
repz
and
dec
adc
xchg
adc
mov
scas
adc
sub
fistl
rolb
loop
in
js
jg
fdivl
dec
mov
push
aaa
scas
dec
xor
nop
push
jmp
add
dec
jp
dec
outsb
add
imul
icebp
mov
dec
dec
or
enter
outsl
adc
inc
xor
insl
mov
push
rcpps
pop
sbb
push
fistpl
call
xchg
jmp
jb
scas
ja
pop
jge
push
mov
pop
je
mov
ret
add
mov
fldt
loopne
adc
jne
leave
es
mov
aaa
data16
hlt
rorb
sbb
push
add
push
sub
in
jmp
insb
sbb
fmuls
adc
pop
cmp
mov
rolb
jo
mov
xchg
clc
aas
sub
sbb
je
dec
inc
cli
jge
mov
jecxz
std
adc
mov
xchg
xchg
cwtl
ja
sti
addb
hlt
test
jmp
sbb
cli
out
shrb
ss
and
mov
test
pop
mov
xchg
aam
loope
popa
jecxz
lods
fs
jno
jnp
lret
or
fsubs
bound
sub
sub
in
pop
enter
push
test
sub
jne
rorb
lret
lahf
cwtl
aas
sbb
and
jnp
out
push
sbb
movsl
sti
adc
std
mov
data16
mov
mov
xchg
sarb
and
xor
push
subb
lods
popa
dec
pop
mov
fwait
loope
add
sub
mov
mov
arpl
adc
push
rcrb
sahf
mov
into
pop
movsl
lcall
sub
movsl
xorb
or
pop
stos
ret
rcrl
mov
das
ret
test
shlb
daa
cmp
inc
rol
cmp
adc
repnz
std
add
divb
pop
push
pop
repz
sbb
notb
dec
mov
mov
add
cwtl
sbb
out
mov
andb
jo
and
adc
les
popf
inc
negb
jnp
sbb
cmp
dec
andb
sarb
insb
pop
divb
std
in
imul
shrb
mov
mov
call
test
stc
adc
stc
in
jge
mov
aam
scas
cwtl
clc
jecxz
and
dec
mov
das
fs
lods
pushf
and
insb
jmp
daa
and
push
xor
jle
notl
xlat
xchg
enter
push
mov
push
xchg
or
lea
test
xchg
repz
jmp
das
or
imul
int3
push
rclb
pmaddwd
ret
mov
in
aam
xor
rolb
mov
imul
pushf
push
aaa
push
int
idivl
stos
mov
ja
sbb
mov
mov
cs
loope
scas
cmp
outsl
or
mov
pop
pop
mov
scas
xlat
ret
out
int3
sub
lahf
add
scas
rolb
xchg
mov
sbbl
sub
push
ficompl
or
sub
jecxz
test
jo
mov
xchg
sti
mov
sti
inc
in
mov
sarl
shlb
xchg
sub
mov
inc
fimull
mov
adc
movsb
mov
add
jg
jae
movsl
lock
lret
mov
adc
mov
inc
or
jbe
push
adcb
pop
ds
and
ficomps
insl
jle
in
jb
scas
imul
mov
insl
mov
jno
repz
clc
into
imul
out
add
dec
mov
mov
mov
mov
sahf
and
xchg
add
fadds
pop
pop
cmp
cld
sbb
jb
push
mov
stos
adc
cmpsb
inc
jne
cltd
cli
dec
test
jmp
jbe
pop
ljmp
fsubl
xor
add
adcb
adcb
push
adc
hlt
add
andb
fsubl
ja
push
mov
fmull
icebp
leave
cmpsl
push
cmp
cmp
ja
xchg
sub
or
push
jnp
std
cmpsl
inc
sub
repnz
sbb
jae
xchg
sub
mov
cmp
xor
scas
pop
mov
jecxz
cmp
in
xchg
mov
addr16
repnz
xor
out
xor
shl
mov
in
jmp
or
dec
inc
cli
and
sub
rolb
cmpsb
sbb
je
xor
ret
cli
imul
fistl
add
insl
movsl
rorl
hlt
jmp
ss
inc
fstl
jge
std
dec
mov
or
xrelease
mov
cwtl
jmp
outsl
insl
das
fimull
jns
call
pop
out
ljmp
outsb
mov
cmp
imul
imul
mov
rolb
je
cwtl
sub
adc
jb
dec
sbb
scas
xchg
mov
cmp
and
lcall
mov
xor
jle
mov
jbe
das
outsl
fs
xchg
inc
dec
dec
xchg
repnz
fucomi
push
stos
push
mov
sbb
or
push
sub
adc
sub
or
mov
loop
sub
cmpsb
mov
aaa
mov
icebp
xchg
dec
out
fs
jecxz
arpl
out
ss
shr
cwtl
xchg
xor
or
sub
fbld
xchg
imul
adc
scas
mov
ljmp
or
adc
inc
mov
inc
je
lods
sub
adc
negl
inc
neg
in
icebp
popf
mov
cmc
out
mov
out
mov
into
jg
sbb
fcomip
mov
fsubp
jne
cwtl
and
in
dec
inc
sbb
pop
in
mov
inc
push
test
push
xchg
xor
leave
xchg
mov
mov
out
jns
je
ja,pt
dec
inc
adc
aaa
orb
adc
or
adc
jns
pop
pop
movsl
adcb
hlt
and
jp
push
cli
xor
test
pushf
xlat
sbb
cmp
mov
pop
scas
out
mov
stos
sbb
add
cmp
mov
inc
rcr
fmuls
lret
inc
fcomp
xor
adc
and
and
outsl
dec
lcall
cmp
mov
pop
les
divb
add
sub
mov
movb
hlt
cmp
add
push
call
dec
ss
repnz
cmp
mov
cmp
sahf
add
pop
cmp
mov
dec
fld
add
push
ljmp
or
sbb
lcall
jl
out
loope
or
test
adc
sub
dec
fs
and
filds
sbb
mov
add
adc
cmp
ja
adc
fwait
sahf
xor
mov
add
sbb
int3
subl
repnz
or
mov
ja
adc
movsb
mov
push
mov
pushf
mov
lock
cmc
push
popf
scas
stc
mov
cmp
inc
mov
mov
pop
mov
leave
out
add
sbb
mov
cli
mov
mov
and
out
jb
push
popf
imul
and
pop
and
sub
repz
mov
inc
in
mov
outsl
cmp
mov
sub
jmp
push
push
or
mov
xlat
pushf
xchg
les
dec
sub
fisttpl
insl
enter
fnsave
repz
loop
sub
int3
push
fiadds
out
test
je
pop
cmp
add
jg
insl
loop
or
cmp
ja
push
mov
jg
fstps
test
mov
add
mov
xor
mov
icebp
ficoms
jno
xchg
loope
sub
into
pop
leave
mov
shl
inc
jecxz
and
ss
push
andl
hlt
inc
xor
or
addl
lds
lods
inc
or
ds
loop
or
cmp
dec
sub
add
loop
pmaddwd
push
cmp
insl
std
cmp
add
push
lods
xlat
dec
in
cmpsl
repz
mov
movsb
mov
cmp
xchg
mov
sbb
fwait
xchg
push
xor
xor
insl
and
data16
sarl
adc
imul
pop
fdivl
add
push
inc
shrb
clc
fidivs
aaa
jnp
xchg
adcl
lret
xor
adc
loope
fstpt
test
mov
mov
or
push
push
dec
dec
adc
bswap
lret
xor
jmp
xor
movsl
iret
mov
pop
aad
movsl
adc
pushf
fidivrl
add
fcmovb
dec
mov
cmp
cmp
mov
inc
std
xchg
adc
lea
imul
popa
jo
xchg
add
sub
inc
cmpsl
mov
rcrl
repz
scas
xor
imul
xchg
push
les
sub
xchg
outsb
push
call
ret
sar
cmpsb
or
push
mov
jns
jne
add
test
mov
mov
arpl
sbb
arpl
xor
inc
jne
mov
jns
insl
daa
inc
movsb
mov
adc
fstps
dec
dec
fisubl
cli
cmp
stos
mov
repnz
mov
out
sbb
sbb
cmp
filds
loope
sub
subb
xchg
dec
outsb
cmp
or
or
push
xchg
jge
mov
inc
stos
mov
out
cmp
or
dec
jge
sbb
das
test
movl
sbb
cld
ja
fmul
xchg
xchg
sbb
inc
stos
sbb
inc
shl
out
lret
inc
adc
adc
jle
rolb
clc
xor
adc
jne
mov
adc
scas
std
mov
gs
ds
mov
mov
and
pop
sub
sbb
or
popf
cmp
or
loopne,pn
adc
inc
jae
out
xor
dec
or
cmp
ffree
ds
sub
xchg
push
aas
sub
jmp
dec
add
adcl
mov
xlat
add
iret
mov
stos
inc
mov
push
mov
mov
aam
xchg
push
stos
data16
xchg
arpl
jle
cmp
adc
fidivl
rclb
mov
sub
mov
or
or
jge
push
mov
fucom
adc
fidivs
cmp
ja
xchg
xor
inc
mov
repz
arpl
and
xor
ds
lret
icebp
sub
pusha
lahf
scas
push
outsb
push
lea
cmp
testl
iret
xchg
call
dec
mov
std
cmp
adc
js
in
jae
xor
in
push
ja
stos
negl
pop
scas
fwait
xchg
dec
push
or
cltd
xchg
mov
jnp
inc
mov
sbbb
jge
jne
xor
test
call
gs
insb
shlb
in
into
mov
and
mov
cmp
inc
dec
adc
xor
jns
bound
and
inc
std
outsb
or
in
jno
lods
sub
cmp
jle
mov
sti
cmp
sarb
lea
sub
push
sbb
imul
mov
imul
clc
push
lahf
leave
adc
shrl
fldl
cwtl
mov
rclb
sbb
sbb
sub
pusha
xchg
movsb
flds
xchg
adc
and
push
fcomps
sub
iret
cmp
jbe
or
adc
jns
xor
arpl
xchg
push
mov
mov
push
pop
nop
sub
lods
inc
cmp
push
insb
movb
dec
mov
inc
jbe
bound
std
into
xor
xchg
cmp
sbb
es
movsb
and
cli
fsubrl
pop
insl
arpl
push
popa
outsb
cmp
insl
xor
mov
imul
ljmp
pop
cld
mov
in
add
lahf
xchg
in
sub
std
dec
adc
mov
pop
test
lret
jbe
js
xor
arpl
pop
pop
push
sbb
call
or
mov
lcall
inc
call
dec
mov
shlb
insb
xchg
fucomi
add
xor
fsubrl
int
dec
fcomps
xor
dec
subl
dec
hlt
inc
mov
loopne
cwtl
push
cmp
cmp
push
cmpsl
je
pop
ds
fnsave
data16
popf
leave
pusha
insl
sub
pushf
xor
fdiv
loope
ficomps
jp
jb
lcall
sub
fs
lret
out
pop
add
mov
adc
hlt
add
mov
or
and
pop
ljmp
rclb
popa
insb
cmp
push
test
lret
push
lret
xor
xchg
jmp
and
aad
inc
mov
dec
lock
cs
dec
xor
shlb
addr16
jae
aaa
bound
mov
and
ret
insl
mov
push
mov
mov
push
cmpsb
mov
mov
sub
dec
jmp
mov
cmp
mov
cmp
jle
xorl
into
sbb
into
pop
mov
pushf
in
push
jbe
cwtl
xchg
push
pop
adc
pop
push
inc
mov
mov
fstpl
pop
les
mov
sbb
pop
push
pop
in
data16
push
test
popa
add
ror
jbe
sub
dec
or
cmp
icebp
paddsb
test
jl
pop
sub
inc
sub
shll
insl
les
iret
loopne
mov
mov
out
and
rcll
mov
lock
aaa
sbb
je
push
cmpb
jg
in
mov
icebp
cmp
adc
jp
mov
dec
out
mov
adc
push
add
adc
jb
and
push
mov
sub
add
jle
xlat
dec
cmp
in
mov
hlt
inc
pop
test
testb
ja
jmp
shrd
sbb
stc
enter
push
mov
scas
push
jae
push
xchg
test
sub
lret
outsb
and
and
inc
orl
inc
cmp
jo
or
and
sub
mov
test
xchg
js
icebp
jl
mov
cmp
lock
mov
add
push
mov
mov
pop
sub
bound
pop
loopne
hlt
clc
stos
mov
xchg
shrb
xor
movsb
adc
cmp
fisubrs
fwait
loop
mov
enter
out
fs
stos
roll
xchg
fdivrp
jmp
mov
mov
imul
imul
aas
sub
mov
or
adc
adc
test
xor
fists
pop
xchg
push
cmpsl
subl
or
std
inc
pop
in
xchg
sbb
rclb
fsubr
push
or
psubd
mov
jg
xor
inc
sqrtps
sub
adc
xchg
sub
out
dec
loope
push
push
scas
stos
inc
cmp
jae
leave
push
pop
jno
inc
and
js
push
xchg
pushf
outsb
fimuls
inc
inc
mov
test
ja
add
mov
adc
and
stc
push
mov
loopne
jcxz
popf
add
test
sbb
pop
int3
add
int3
int
mov
imul
or
das
mov
jle
sbb
inc
stos
aas
mov
ja
scas
and
xchg
stos
daa
xor
cmp
cmp
lods
pop
dec
shll
pop
int3
orl
imull
cld
or
stos
sub
rol
xchg
in
pusha
inc
cli
sub
dec
mov
xchg
fimull
mov
push
es
mov
cltd
in
in
loop
xchg
ja
or
scas
in
and
neg
jge
push
bound
int
sub
arpl
jp
push
xor
rcll
test
cwtl
out
push
lea
inc
lock
enter
mov
add
inc
xor
pop
or
pushf
cmp
mov
and
sbb
aam
daa
dec
popf
cmp
adc
push
cmc
fistps
adc
adc
in
mov
pop
popa
xchg
psubb
aad
in
mov
fwait
inc
push
int3
ficoml
popa
ljmp
mov
xor
cwtl
test
lret
dec
mov
sbb
mov
lahf
sub
sub
lock
lock
xor
xchg
cltd
add
cmpsb
dec
into
mov
cli
and
xchg
pop
lret
negl
movsb
ds
cld
push
push
and
inc
mov
push
push
and
es
shr
mov
xor
popf
jge
and
push
inc
sub
adc
mov
leave
loopne
clc
adcl
scas
xchg
loope
jno
lods
addr16
data16
sbb
iret
cmp
adcb
mov
add
xor
jnp
out
mov
inc
mov
add
mov
and
cmp
xchg
insl
int
push
sbb
and
fistpll
pop
mov
das
sub
movsb
sbb
dec
sbb
push
inc
aas
cmp
push
or
push
xor
sub
lahf
hlt
mov
data16
add
mov
mov
jecxz
insl
mov
mov
lret
push
inc
mov
cmp
mov
mov
cmpsb
push
sub
xchg
bound
out
ss
mov
xchg
push
sub
or
imul
out
jmp
je
or
jbe
jp
icebp
mov
test
push
cmp
pop
stos
sub
dec
mov
andl
ja
push
pop
cmpsb
cmc
jns
mov
push
add
js
ficoms
mov
in
push
popf
test
je
xor
pop
stos
cmp
lds
push
je
pop
in
popf
mov
out
movsl
shlb
hlt
iret
out
mov
sbb
loop
xchg
mov
cwtl
add
lods
push
pusha
inc
pushw
xor
aad
jl
mov
lods
dec
popf
pop
rcr
or
data16
xchg
or
sbbl
cmp
sbb
fiadds
hlt
mov
jnp
mov
mov
push
adc
bound
jo
es
xchg
ljmp
sub
cmp
mov
inc
stc
or
pop
cmpsb
dec
je
jg
cmpsl
push
outsb
je
out
gs
inc
aam
cmc
sarl
aas
sub
sbb
fcmove
int3
pop
sarl
jbe
lret
dec
or
push
dec
cmp
cmp
dec
rolb
push
push
aaa
push
ret
scas
push
lcall
hlt
sub
cmpb
pop
jo
dec
repz
pop
nop
and
push
repz
add
sahf
movsl
mov
aam
aad
pusha
adc
mov
dec
jl
pop
inc
lret
pop
icebp
test
push
push
pmulhw
jo
mov
pusha
add
aam
and
testb
or
jle
inc
lods
ja
insb
imul
mov
popa
mov
xorl
aaa
adc
jmp
mov
mov
adc
or
sbb
push
shll
icebp
mov
xchg
je
mov
jno
lcall
cmpsb
cli
pop
adc
mov
out
mov
int
adc
and
or
mov
movsl
adc
pop
cld
add
pop
movb
cmp
je
adc
sub
adc
xor
shll
pop
sbb
cli
jl
addr16
push
addr16
xchg
andl
xchg
test
pop
nop
adc
repnz
dec
lea
fldcw
ljmp
mov
rcrl
add
pop
mov
fisubs
loopne
mov
outsl
mov
dec
cs
das
mov
rcrl
or
or
fwait
cmpsl
loope
in
cmp
ljmp
cmp
insb
fbld
cmp
xchg
movsl
cmp
fdiv
push
and
lea
fisttps
mov
mov
lcall
rcll
push
xlat
inc
cs
dec
test
or
xchg
scas
push
dec
adc
loop
mov
lock
fisubl
jb
insb
sbb
dec
int
mov
mov
cltd
xor
jp
stc
test
pop
mov
stos
mov
or
add
aaa
aad
mull
sub
dec
das
imul
das
fiadds
loopne
cs
or
outsl
xchg
xor
jmp
mov
adc
aam
or
xchg
out
andl
pop
pop
add
loope
je
push
adc
mov
scas
adc
or
imul
mov
mov
addr16
test
lods
or
scas
pusha
or
dec
insb
imul
sahf
fucomip
sub
sti
aam
cmp
push
pusha
and
fiadds
mov
adc
sub
dec
fidivs
push
shrb
mov
inc
sub
dec
xchg
mov
dec
iret
popf
add
pop
data16
hlt
std
stos
int
xor
aas
int3
xorl
inc
adc
fdivrs
dec
cmp
leave
hlt
dec
mov
scas
in
pushf
stc
dec
ficoms
and
loop
pop
push
jns
out
imul
pusha
sub
mov
rorl
xlat
fimuls
xor
mov
jnp
or
mov
js
or
fistpll
call
aam
int
fxsave
jl
rol
idivl
add
movsl
push
mov
in
lods
mov
and
mull
pop
les
loop
adc
lret
jle
xchg
or
push
mov
das
push
sbb
push
jmp
mov
pop
pop
jb
incb
decb
out
in
or
push
pushf
les
and
pop
mov
leave
pop
test
ret
loopne
aam
pop
shl
pop
dec
inc
cmp
and
fadds
leavew
insl
repz
mov
mov
mov
sbb
cld
push
mov
movsl
ret
lock
xor
cwtl
mulb
stc
or
fsubrl
outsl
sahf
orb
ret
aam
push
mov
xor
shlb
xchg
xchg
ds
mov
xchg
push
loop
adc
addr16
adc
mov
pop
test
pop
mov
cmpsl
pop
aad
inc
xlat
shll
push
div
inc
cmp
repz
sub
das
movsb
sub
and
outsb
mov
inc
pusha
mov
push
aaa
xor
xor
out
jp
std
and
lea
xor
imul
fimuls
test
divl
test
or
pop
inc
xchg
mov
and
mov
ss
push
fstpt
insl
lahf
stos
lahf
fnstenv
shrl
divl
cmpsb
andl
fdivl
push
aad
cmp
xor
mov
ret
push
cmp
sbb
roll
loope
push
push
jbe
add
jbe
and
adc
sbb
push
sahf
pop
xchg
pop
mov
inc
mov
aaa
insb
out
aas
jmp
popf
lret
dec
test
inc
sub
cltd
xor
sub
xchg
fld
pop
push
aam
addr16
mov
jno
sahf
out
in
sub
push
xor
dec
or
cmp
jns
dec
sub
mov
aad
cmpl
loopne
xchg
loopne
adc
imul
adc
mov
push
push
mov
jo
in
or
or
popa
xor
mov
ja
dec
scas
repnz
adc
lods
adc
call
push
out
das
adc
call
scas
cmc
out
mov
lods
fidivrs
mov
add
repnz
mov
movsb
or
adc
pop
orl
out
les
jl
fildl
xchg
or
clc
les
in
pop
inc
jae
sbb
and
lahf
adc
adc
jmp
and
sbb
add
inc
shll
inc
aaa
mov
mov
push
fst
daa
xchg
dec
push
insb
mov
cli
out
repz
mov
or
push
shll
loopne
rorb
mov
rol
fmull
fisttpll
call
adc
loopne
test
inc
pop
hlt
test
repz
sbb
insl
cmp
int
dec
dec
sub
insl
inc
lret
mov
pop
jo
sub
or
or
into
push
push
mov
xorb
adc
leave
jbe
hlt
xor
jle
add
fprem1
inc
data16
loopne
icebp
movsl
es
lea
sar
sbb
lahf
pop
mov
xlat
cmp
jecxz
lock
pop
or
dec
jp
lds
repnz
and
out
mov
jge
test
jge
aam
cwtl
jle
out
leave
inc
fbstp
add
int3
stos
cmc
push
lret
fdiv
aad
xchg
ds
jo
std
push
and
push
sbb
dec
sbb
pusha
jl
jbe
push
sub
clc
inc
aas
xor
xchg
std
sbb
bound
iret
adc
add
jg
add
add
adc
les
xsave
mov
sbb
arpl
xchg
ficoms
out
stc
xchg
jnp
xchg
in
pushf
and
jno
fwait
inc
jb
jp
inc
pop
fistps
sti
or
out
repz
mov
pop
adc
mov
sub
pop
jb
pop
icebp
in
outsb
mov
mov
pop
jp
scas
jecxz
adc
mov
nop
xor
loopne
lea
stc
push
in
fucomip
push
aad
and
cmp
sti
into
inc
pop
sbb
fwait
and
jns
inc
pop
push
insl
pop
lock
ret
mov
add
nop
test
xchg
or
or
sbb
cwtl
call
ss
seta
dec
sub
dec
mov
mov
cmp
lret
mov
cmpb
iret
or
fsubrl
loope
inc
xchg
mov
shll
mov
clc
stc
pop
call
mov
or
cmp
rorl
or
sub
add
mov
iret
or
or
xor
xlat
dec
pop
cli
ret
and
cwtl
cmp
mulb
in
imul
mov
das
mov
test
lock
stc
mov
sub
jae
push
dec
fstl
call
lahf
dec
adc
or
sub
ret
jae
xchg
push
jmp
push
repnz
push
shl
jecxz
aaa
mov
inc
cmp
pop
mov
dec
pop
pop
cmp
pop
push
adc
sbb
stc
and
in
in
lea
je
cltd
inc
sub
push
jg
fdivrs
jne
test
mov
add
xor
pop
jbe
stos
jno
cmp
scas
dec
ljmp
adc
mov
xor
xchg
call
pop
mov
movsb
and
pop
inc
mov
add
gs
pop
push
and
mov
shr
sbb
dec
and
in
sbb
jp
out
imul
push
outsb
push
or
pop
sub
das
dec
and
aas
xchg
sub
jmp
mov
push
and
aas
jnp
and
aam
mov
fwait
lds
test
je
dec
xor
push
xchg
inc
ljmp
faddl
clc
les
jecxz
push
movsl
int3
test
in
daa
mov
shl
ja
sub
pushf
lret
jmp
cmpsl
push
xchg
jnp
out
lds
and
push
fcomp
and
jne
repz
into
lea
in
stc
or
or
jle
repnz
inc
pushf
sbb
into
pop
pop
mov
repz
sbb
and
xor
jb
sub
popa
pop
sbb
xor
jb
adc
mov
pop
xor
fildll
xchg
stos
loop
mov
mov
xor
pop
loopne
repnz
stos
xchg
insb
or
cmp
xlat
add
hlt
adc
cli
push
fidivrs
jb
and
outsl
inc
aas
icebp
jle
imull
bound
das
jb
inc
fisttpll
xor
push
arpl
pop
and
rcr
jno
mov
sbb
pop
stos
push
dec
sub
cs
xor
clc
or
jnp
mov
pusha
push
jle
rcll
mov
cltd
loopew
lcall
sbb
pop
dec
push
adc
mov
adc
add
sub
push
fldt
jge
ss
outsl
daa
lock
daa
decl
movsl
std
lods
jecxz
mov
sahf
xchg
mov
popl
jecxz
or
lock
adc
xor
inc
fdiv
mov
ret
rcr
insb
scas
add
dec
cmp
and
fs
push
jb
bound
lods
and
and
shll
xchg
rcll
xchg
aad
stos
out
ja
addb
punpcklwd
lods
enter
adc
cmpsb
ds
dec
jl
dec
jae
add
test
shlb
inc
jne
les
call
cmp
arpl
insl
sbb
shl
mov
test
pop
add
cld
rorb
lret
mov
or
jne
iret
sub
jp
pop
and
jecxz
outsl
roll
sti
sbb
mov
les
loop
xchg
mov
addb
mov
imul
sbb
sbb
in
leave
enter
test
mov
xchg
and
bswap
xchg
mov
sbb
cmp
jo
pusha
sbb
and
aas
fidivrl
inc
fildl
in
xor
lea
xchg
push
aad
subl
cmp
and
pop
jmp
add
and
loop
in
push
lock
xor
and
sbb
sahf
jo
lahf
mov
jnp
fidivrs
andb
repnz
xchg
jns
leave
ss
int
daa
lret
cmp
test
or
jmp
aad
mov
add
sbb
idivl
xchg
testl
xor
sahf
push
jb
stc
sbb
jne
mov
std
jno
jae
fistpl
subb
jmp
sbb
xor
xor
cmpb
mov
scas
into
dec
mov
jmp
testl
in
pusha
adc
scas
in
popa
or
out
lret
loope
add
loop
rcl
sub
mov
js
or
xchg
shll
push
jecxz
call
in
dec
or
aad
sub
mov
outsl
add
mov
leave
sub
mov
cmp
inc
inc
cmp
das
stos
inc
jo
jl
adc
rolb
xchg
xor
cmp
aad
nop
imul
insb
cld
aaa
cmp
add
mov
inc
mov
cmpsb
loope
pusha
inc
bnd
xor
int3
ret
mov
or
out
mov
movsl
xor
mov
inc
jle
adc
into
addb
jmp
dec
jbe
movsb
sti
jmp
shll
rcrb
mov
loopne
cwtl
mov
outsl
in
sbb
rcl
out
push
ja
dec
jle
xchg
pushf
adc
pop
pop
pop
repnz
std
and
loope
lods
inc
jl
xchg
push
xorl
rcrl
jl
stc
and
fcomps
pop
cwtl
imul
add
dec
jne
das
clc
cld
add
cli
test
pop
cmp
leave
push
fwait
xchg
mov
or
das
inc
sub
add
xchg
fmull
or
cmc
xor
iret
imull
cmpsb
divb
out
dec
mov
push
addr16
in
pop
cmc
xchg
and
ds
ja
roll
test
lcall
dec
sub
lcall
xchg
mov
int3
xchg
fisubs
xor
and
jnp
insb
fwait
add
cld
mov
xchg
inc
mulb
mov
inc
sbb
sbb
mov
adc
stos
shrb
cmp
xchg
negb
and
adc
lock
pop
fdivrl
lods
jb
sahf
faddl
dec
pushw
in
rorl
shr
and
scas
std
dec
lret
or
adc
pop
scas
int3
pop
or
mov
dec
iret
mov
dec
ret
test
mov
xor
popf
lods
ja
test
scas
and
mov
outsl
add
mov
int
ret
cmp
popa
movsb
fldt
ret
subb
divb
cli
xor
sbb
jno
cmp
cs
les
push
push
sti
mov
or
in
or
fstpt
test
leave
lods
inc
and
lahf
dec
adc
test
adcb
shlb
mov
sub
push
mov
inc
or
mov
add
mov
sbb
dec
imul
cmp
mov
inc
adc
pop
jb
loop
shlb
sbb
push
orl
xchg
push
jb
pop
pop
cmp
repz
xor
pop
lcall
cmpsb
lahf
adc
mov
push
sbb
add
sbb
les
pop
xor
pop
pushf
adc
in
or
scas
mov
jb
mov
int
cmp
add
aad
fdivrs
mov
or
and
push
rcll
lea
fwait
jns
lret
xor
jge
jge
push
iret
addr16
push
inc
outsl
dec
cmpsl
mov
into
mov
hlt
sar
inc
inc
push
xor
movsl
lret
out
xchg
xor
in
sbb
cs
mov
inc
ljmp
jae
faddl
inc
mov
aaa
test
and
sti
ss
mov
jae
or
leave
push
mov
push
mov
aas
pushf
fldenv
rol
cmp
jge
push
subl
in
add
xchg
dec
mov
xor
sbb
lods
sbb
push
mov
sbb
cli
pop
pop
add
adc
sarl
fdivp
or
xchg
pop
fldcw
stos
push
in
mov
clc
lds
cmp
or
ja
jne
shlb
test
mov
mov
sbb
add
push
lret
insb
dec
push
cmp
inc
pushf
pop
insb
xor
in
push
xchg
inc
cmpsb
cmp
xor
pop
stos
pop
movsl
arpl
ss
ja
cmp
int
test
outsb
mov
daa
in
mov
and
mov
push
lds
push
data16
es
pop
or
xchg
sub
inc
out
cltd
repnz
or
or
aas
or
jmp
cmp
shll
fiaddl
push
or
cli
xchg
push
fwait
jnp
pop
lret
dec
std
add
cmp
out
aad
and
les
nop
sub
cmp
sbb
cmp
sbb
ss
fsubp
sbb
andb
xlat
cmp
adc
and
push
bound
cmpsb
lds
das
std
inc
add
lods
int
push
push
inc
fimull
popf
cld
ds
mov
insl
outsl
jns
or
shrl
xchg
movsb
or
popa
cltd
lds
xlat
cmp
sbb
in
sub
mov
xlat
xchg
jns
add
aaa
cmp
frstor
dec
jo
lret
add
fucomip
xchg
adcl
jge
loope
insl
pop
jle
xchg
xor
dec
or
scas
sbb
sub
frstor
loop
sub
and
subl
mov
fsubrl
dec
int
cmp
addl
and
push
pop
sub
pop
pop
xchg
and
out
cld
adc
xor
jl
cmp
popf
out
int
test
xor
jg
push
xor
cs
mov
enter
and
in
stos
push
pushf
adc
mov
je
pop
adc
clc
xchg
call
mov
cmp
testl
ret
out
ja
pusha
mov
fisubrl
xchg
icebp
sub
dec
outsl
jnp
adc
dec
jg
mov
dec
hlt
dec
fcomps
dec
pop
lods
dec
cmp
or
leave
push
cmp
xor
xchg
add
inc
jmp
lcall
cs
xor
andb
sub
test
adc
aaa
jae
push
shll
aas
jno
and
and
in
mov
xchg
popf
jge
and
pushf
or
jb
lods
lcall
or
roll
rolb
popf
mov
hlt
popf
imul
push
in
mov
inc
lock
insb
sbb
mov
in
sbb
adc
pop
es
in
lods
sti
sub
push
push
xchg
or
push
mov
push
jno
xchg
sbb
fs
mov
cs
aaa
pop
add
ret
and
sub
mov
out
data16
lds
sbbb
jno
jle
in
xor
mov
cmpsb
pop
pop
xchg
rcrl
push
out
pop
test
fiadds
mov
jmp
jbe
daa
and
pop
sub
pop
mov
adc
sub
xchg
mov
addr16
pop
or
jbe
lret
lods
dec
out
fcomps
mov
add
fldlg2
cmpsl
adc
pushf
inc
push
pop
or
pop
add
push
stc
cmc
xchg
push
sub
test
stos
adc
addr16
add
dec
ror
orb
sbb
add
popa
jno
and
dec
or
sahf
in
movsl
insl
aam
and
lds
fwait
push
adc
stos
lods
push
mov
les
gs
add
mov
gs
in
ret
xchg
push
fmull
pop
dec
ds
roll
into
gs
ljmp
mov
in
int3
adc
dec
loope
xchg
fdivl
icebp
and
fucomip
push
scas
popf
arpl
cmp
jnp
das
add
cmp
stos
adc
or
pusha
add
nop
or
adc
fucom
daa
iret
jg
test
orl
rcrb
jp
mov
ja
cli
push
lahf
pop
mov
xor
or
in
mov
dec
mov
sbbl
dec
bound
or
mov
push
adc
test
add
adcb
and
sti
lahf
inc
pop
test
jmp
adc
xor
xchg
sub
popf
es
jnp
mov
insb
out
push
mov
mov
shll
dec
xchg
cmp
dec
pop
mov
ret
push
aas
lds
jo
fidivl
inc
xor
xchg
xchg
notl
or
rcll
mov
xlat
sbb
cmp
jp
aad
fcoml
jecxz
pop
movsl
jbe
fstps
xor
xor
sub
jns
or
or
mov
clc
jns
xchg
std
pushf
cmp
cmpb
xchg
xchg
jb
jecxz
and
inc
mov
xchg
enter
insb
lcall
dec
stc
cltd
div
outsb
pusha
or
xor
add
cmpsl
ja
pop
lods
mov
adcl
mov
sub
and
dec
sahf
mov
in
popa
test
scas
sti
inc
call
pop
mov
addr16
faddp
and
and
adc
fwait
dec
int3
jmp
repnz
dec
dec
sbb
pop
pusha
cmp
fisubrl
test
fimuls
mov
sub
mov
loopne
pop
fistl
bound
enter
fld1
inc
repz
xchg
repnz
mov
cwtl
sahf
or
sbb
xor
xchg
xor
pusha
pop
ljmp
push
xor
mov
fdivl
icebp
cmp
ror
jecxz
ss
jb
sub
add
stos
lock
rclb
push
sub
sti
sub
mov
fildll
mov
sub
sbb
cmp
fwait
mov
in
imul
xchg
xchg
sbb
inc
lds
movsb
add
data16
int3
fidivs
and
sub
mov
cmpsl
sbb
dec
and
pop
mov
cmp
sub
push
in
into
sahf
shl
fmulp
ret
testl
cwtl
xor
mov
out
repnz
push
aad
sbb
mov
in
sbb
orb
lcall
jnp
in
pop
mov
pop
loopne
lcall
jb
inc
into
movsb
mov
jne
icebp
add
ret
mov
out
jno
int3
push
pop
jp
cmp
inc
ret
cmp
xchg
cs
push
jne
xchg
aaa
pop
jecxz
dec
sbb
test
aad
cltd
cltd
and
jnp
in
insb
add
enter
xchg
push
push
repnz
or
test
or
les
inc
imul
push
cs
pop
jmp
popf
std
cs
push
out
dec
mov
test
add
cmp
vpsubusb
sub
movsl
fwait
push
push
int
dec
pop
mov
push
pop
lock
ja
cmp
outsl
daa
and
loopew
and
sbb
push
hlt
dec
mov
test
dec
sbb
test
ljmp
leave
mov
fchs
pop
xor
pop
clc
gs
and
pop
mov
fucomip
cmp
push
add
add
loope
cmp
mov
pop
push
aam
cmp
adc
xor
add
pop
mov
add
cwtl
std
xor
dec
arpl
push
push
jge
fnstsw
fdivs
jns
sub
dec
and
push
mov
jb
xor
fnsave
jns
adc
or
jle
es
mov
jg
pop
fnstsw
xchg
sub
mov
fmull
loop
pushf
jo
js
mov
push
js
std
xor
fiadds
adc
inc
ja
fs
test
push
iret
ror
add
inc
dec
icebp
jnp
lahf
scas
sbb
xor
arpl
lods
or
sti
hlt
dec
daa
xchg
leave
add
jl
scas
mov
inc
pop
and
cmp
mov
stc
lahf
mov
fwait
or
clc
lea
imul
lods
xchg
loopne
mov
ror
mov
adc
jg
cmp
sub
xlat
mov
lret
and
sub
mov
pop
and
test
cld
mov
adc
inc
lea
sub
rol
fidivs
aad
lahf
inc
mov
jns
sub
adc
mov
xor
divl
pop
mov
sarl
icebp
sub
inc
test
mov
inc
mov
push
outsb
pusha
inc
lcall
movsl
mov
push
cmp
and
shrb
in
sbb
clc
fnstsw
push
inc
mov
push
rcl
push
dec
iret
inc
or
fldt
or
mov
test
jl
insb
jmp
jle
xor
push
gs
xchg
shr
test
ret
je
cltd
cmpsb
outsb
dec
movb
xchg
cwtl
shrl
sbb
sub
sub
mov
adc
daa
mov
pop
sbbl
mov
in
mov
inc
leave
sub
xchg
and
sub
mov
cmp
push
add
jnp
leave
dec
ss
cmp
aam
adc
xlat
mov
pop
xchg
pushf
movsl
jecxz
addl
jl
pop
mov
imul
std
or
ret
jmp
mov
ss
dec
ds
and
or
inc
inc
shll
out
push
and
lds
add
clc
int3
popf
mov
dec
sub
lret
xchg
mov
adc
aas
int3
ljmp
and
ret
sbb
sarl
stos
shrl
fmuls
cmp
pop
fsubrp
cmp
sti
lea
pop
jae
ret
mov
pop
imul
or
bound
sbb
mov
pop
loope
jl
sbb
fwait
inc
cmpsb
jbe
insb
test
fwait
push
das
xchg
pusha
mov
mov
sub
popa
loop
pop
cmp
xchg
dec
xor
int
in
dec
mov
sub
fistps
add
fdiv
add
mov
adc
dec
dec
and
add
test
pop
cmp
lds
bound
ljmp
cltd
pop
add
in
clc
adc
dec
xchg
sbb
push
into
arpl
sbb
pop
xchg
mov
pop
sarl
cltd
ja
inc
std
mov
xor
stos
dec
scas
mov
jns
das
fcmovb
pop
arpl
pop
sbb
mov
movsb
cwtl
dec
jo
push
cmc
push
xchg
xchg
sub
cmpsl
push
rcl
xor
ss
mov
mov
or
xchg
stc
and
daa
js
dec
mov
push
rcll
push
gs
sub
push
pop
test
mov
inc
fisttpll
jns
mov
jmp
xlat
outsb
and
jge
insl
lret
popa
jno
xor
xchg
inc
lcall
mov
push
mov
mov
pop
push
ss
enter
call
xchg
das
pop
out
testb
in
scas
mov
or
mulb
adc
cwtl
jmp
insl
outsb
or
subl
adc
cs
lcall
xor
stc
jecxz
push
daa
fidivl
sbb
rcrb
and
push
mov
in
jle
jmp
pop
pop
pop
mulb
xchg
aaa
mov
xor
mov
push
cld
arpl
mov
fs
push
jecxz
lock
out
stos
leave
or
cmpsl
ljmp
jbe
mov
xor
insl
pop
and
and
lret
fwait
and
dec
rcl
dec
call
push
pop
fstl
push
pop
pop
inc
lods
push
xchg
std
jge
lea
jne
or
cmp
in
leave
daa
push
jmp
jmp
cmpsb
dec
bound
test
inc
cmp
dec
fiaddl
fmul
push
sbb
mov
dec
int3
fisubl
sub
sbb
pop
push
out
sub
sbb
out
sti
movsb
jmp
loop
sti
cmp
mov
stc
and
rcrl
bound
xchg
out
push
or
xchg
push
ds
insb
fsubr
or
mov
insb
sub
fs
and
fwait
iret
sub
rep
test
sub
cmc
or
sub
or
insb
sbb
pop
cmpb
pop
loope
inc
xchg
and
imull
push
mov
ficompl
jge
jecxz
test
or
mov
push
jae
sub
mov
push
cmp
call
cmpsl
and
call
dec
fbstp
pop
call
dec
and
out
fsubl
push
aad
dec
int3
loope
xchg
mov
sbb
xor
aas
movsb
sarb
jae
lret
add
mov
xchg
xor
inc
push
mov
jbe
pop
jnp
test
mov
aaa
addr16
inc
out
in
jmp
ss
lock
xor
mov
cs
clc
cli
out
aam
sarb
jbe
mov
inc
shrl
cmp
sbb
pushf
imul
pop
bnd
leave
push
mov
or
fucom
int
fisubrl
ror
mov
add
cltd
adc
idivl
call
xchg
or
sti
push
inc
mov
lds
into
scas
movsb
in
jno
cmp
cli
push
clc
dec
fisubrl
pop
pop
add
pop
cmpsl
test
dec
js
nop
movsl
insl
loope
xchg
loop
repz
sarl
std
xchg
in
and
lods
in
lods
fld
sbb
jbe
add
stos
xchg
mov
cmp
mov
ljmp
inc
addb
bound
lea
jae
mov
xor
xor
cmpsl
mov
cmp
fcoms
xchg
cwtl
ret
lock
cwtl
sub
mov
lret
mov
cltd
fiadds
aam
cltd
jg
shlb
sbb
jecxz
push
sbb
cmp
sbb
ljmp
sbb
icebp
jge
cmc
pop
push
cmp
aaa
pop
sub
ret
mov
jmp
in
push
pop
mov
mov
in
insl
and
mov
pop
jb
sbb
mov
xor
scas
movsb
mov
push
mov
int
sub
mov
xor
jmp
sbb
xor
das
mov
sti
adc
xchg
adc
cltd
mov
sub
out
ret
dec
subl
cmc
jmp
mov
mov
mov
ja
lret
mov
mov
and
pop
scas
add
adc
push
out
jns
xor
dec
cs
adc
frstor
or
shll
inc
xchg
loope
and
nop
and
rolb
xlat
jb
adc
push
push
mov
jo
jo
js
cmp
dec
jno
mov
loopne
stos
push
sahf
iret
or
cli
ret
sbb
int
lods
push
push
shl
push
dec
fisttpl
mov
adc
sbb
push
int3
sbb
je
lahf
dec
aam
xor
cmp
jl
dec
xor
loopne
cs
out
pop
push
push
mov
push
out
movsb
daa
aad
mov
sub
inc
xchg
shr
sbb
repnz
pusha
cmpsl
cmp
sahf
aam
out
inc
adc
fwait
leave
aas
sub
mov
xchg
rorb
jns
add
data16
lods
pop
fsubs
out
aas
pop
movsl
insb
jns
lret
xchg
insb
xor
int3
sub
cmpsl
mov
decb
lods
out
cmp
aad
jb
insl
ds
inc
imul
shlb
push
lds
mov
call
push
cmp
cmc
jo
cmp
sbb
cmp
fiadds
push
jle
jmp
jp
pop
xchg
sbb
aad
lds
sbbl
sti
mov
xchg
dec
jp
dec
mov
dec
mov
mov
aas
xor
lock
ja
clc
jb
cli
add
mov
insl
xor
sub
mov
push
es
xchg
mov
xor
loopne
cmc
xchg
cmc
out
div
ja
mov
lret
push
jl
lret
call
and
xlat
in
mov
das
pop
xor
fisubs
cli
xchg
int
pop
pop
add
or
inc
movsl
addr16
stos
jg
pop
sub
mov
xchg
mov
xchg
sub
dec
bound
lock
xchg
or
jbe
not
dec
mov
sbb
cs
and
pop
add
pop
jmp
enter
push
out
or
mov
mov
outsl
movsb
popf
and
adc
jno
jl
nop
jge
loopne
ret
fwait
mov
insl
push
lods
mov
jp
lea
cs
sub
jb
xor
rcrl
sti
mov
idivb
jns
inc
sahf
or
rcrl
inc
insb
imul
inc
push
lret
inc
outsl
cmp
sub
lods
push
fnsave
int3
jno
sbb
adc
int
cli
mov
repz
pop
mov
mov
push
shl
lret
xchg
jae
push
mov
pop
js
jnp
dec
rolb
loop
pop
jbe
jp
cld
movsl
test
pusha
ret
dec
jno
xchg
bound
in
jbe
icebp
sbb
loope
ljmp
out
bound
jecxz
loope
pop
mov
mov
mov
sbb
adc
ja
int3
scas
sbb
mov
mov
mov
ja
sbb
mov
push
test
inc
sbb
fld
mov
imul
xchg
sub
jnp
das
test
and
push
cmp
ljmp
xor
shll
lcall
add
mov
push
int3
popa
fimull
popa
in
fcmovb
mov
xchg
xchg
or
adc
lds
or
jp
pop
jg
out
inc
movsb
mov
movl
lods
add
mov
scas
mov
xchg
sbb
ljmp
fcmove
jbe
lcall
adc
test
adcb
add
lea
mov
jp
into
xchg
ret
mov
and
adc
sahf
mov
cwtl
cmp
jle
pop
sbb
call
dec
push
xchg
mov
sub
add
sub
push
jne
push
pop
sbb
push
mov
lret
adc
cli
dec
std
cmp
sti
dec
cmp
pushf
cmp
sbb
outsb
iret
je
jp
clc
fldenv
mov
cmp
imul
rol
xchg
sub
pushf
pop
popf
roll
ljmp
push
inc
pop
xchg
sbb
fisttpll
iret
xor
jnp
cmp
cmpsb
dec
sub
inc
inc
out
dec
jb
xlat
mov
xchg
mov
dec
jne
cmp
pushf
mov
mov
push
ret
mov
pop
push
add
dec
adcl
xor
test
mov
inc
lods
cmp
mov
icebp
adc
pop
mov
dec
mov
aas
mov
je
adc
sbb
xchg
ljmp
dec
push
int3
push
cmp
ffree
popf
fisttpl
pop
xchg
pop
cmpsb
mov
test
movsb
jp
sub
or
aad
out
or
xor
fidivrs
add
mov
mov
jno
lods
push
jl
mov
cmpsb
jo
adc
mov
adc
in
sbb
pop
ret
test
sub
mov
mov
inc
cmp
stos
clc
mov
scas
sub
dec
test
nop
into
mov
insl
and
dec
sbb
sub
mov
inc
mov
dec
call
into
adc
mov
jnp
xor
push
test
inc
push
cmpsb
lods
adc
adc
xchg
es
fisubrl
pop
mov
out
ljmp
jg
aam
mov
shlb
sbb
mov
sbbl
shrl
mov
std
ret
fistpll
xchg
ss
cmpl
jecxz
pop
add
dec
jb
cmpb
fcompl
add
in
cmp
sahf
xor
mov
out
jmp
push
stc
into
and
add
cmp
adc
adc
pop
insl
lret
xor
loop
outsb
orl
xor
dec
add
aas
punpckldq
data16
jne
jb
inc
sub
or
sbb
in
fsubs
cmp
pop
dec
icebp
pop
das
lea
in
daa
push
jne
jmp
fldl
ret
pop
mov
sarl
push
add
mov
out
mov
ds
xor
adc
jb
sub
pushf
sub
in
lahf
adc
dec
lods
jge
mov
jg
inc
ret
mov
adc
pushf
cmpsl
insb
push
outsb
mov
test
in
or
rclb
in
sub
push
insb
into
lods
bound
adc
filds
pop
cli
sbb
cmpsb
sbb
xor
pop
mov
movsb
jecxz
or
or
mov
stc
aas
push
mov
or
fwait
repz
push
and
cmc
int
aas
in
pop
dec
loope
ficompl
cmp
iret
mov
mov
jl
std
mov
push
push
xor
aaa
or
mov
and
fwait
inc
ror
test
pop
lods
or
and
mov
out
fildll
cld
test
cltd
fwait
mov
ljmp
repnz
sub
lahf
add
adc
cltd
adc
or
push
jle
push
pop
sub
jb
mov
lds
rcrb
dec
jnp
lods
ljmp
inc
cmp
sbb
mov
pop
andl
dec
lods
mov
adc
mov
xor
inc
std
stc
in
cmpsl
nop
pushf
daa
cwtl
push
or
jbe
xor
mov
movsl
rcl
lods
dec
xor
add
aaa
aas
std
jecxz
mov
mov
sti
dec
cmp
jp
jmp
lret
repz
xlat
dec
cmp
xor
xor
int
jl
push
push
jg
inc
pop
sbb
sbb
stc
jge,pn
jmp
aas
adc
cmpsl
out
xchg
cld
xchg
mov
jns
jge
lds
dec
fldcw
lcall
cs
stos
jp
mov
mov
cmpsl
clc
test
cmp
sbb
adc
imul
and
mov
jb
jg
faddl
leave
das
std
or
sub
ljmp
shl
out
lods
lret
cmp
insb
sbb
adc
lods
lods
lds
or
cli
iret
jmp
out
mov
lock
into
xchg
mov
add
xor
test
adc
mov
push
push
test
cs
jle
sbb
jl
rorb
and
out
mov
dec
adcb
inc
test
aas
in
xchg
mov
add
sbb
mov
push
mov
xlat
xchg
push
sahf
test
xor
push
iret
push
push
adc
xchg
push
xchg
daa
arpl
and
push
in
and
sti
lret
pop
std
push
pop
jb
adc
adc
add
andl
stc
jge
divl
cmp
jle
rolb
pop
jo
adc
xchg
scas
xchg
dec
add
jg
fcomps
cmc
jb
xchg
cmp
mov
jns
sub
es
arpl
push
int
clc
fimull
addr16
rorb
fiaddl
xor
mov
and
mov
mov
shrb
cmp
xlat
xor
scas
cmp
in
loopne
lahf
test
loope
nop
adc
inc
testb
xchg
popa
xchg
sub
ret
inc
rorl
mov
jge
push
pop
cmp
pop
mov
xor
xchg
out
arpl
and
add
pop
mov
dec
jo
jno
inc
mov
jp
add
imul
mov
xchg
scas
fs
pusha
pusha
inc
int3
xchg
push
adc
mov
push
adc
sbb
adc
insb
sbb
out
mov
and
adc
dec
in
divb
mov
or
lahf
push
lods
and
add
orl
pop
stos
inc
lods
sub
aaa
cmp
push
pop
push
add
jmp
rcll
and
push
dec
das
mov
fiadds
das
stc
jmp
inc
cmp
loop
sbb
cmpsl
inc
cld
pop
push
das
jecxz
push
add
hlt
adc
adc
jbe
jno
hlt
or
dec
push
xor
add
jecxz
pop
cld
js
jno
pop
jae
inc
cli
cmp
push
xor
lcall
push
sbb
insb
mov
fsubl
push
mov
push
leave
pop
int
popf
add
repnz
icebp
or
mov
stos
mov
xor
loope
pusha
mov
jb
mov
insb
mov
jno
inc
push
fmulp
inc
aas
push
xor
jle
test
pop
iret
loop
push
jle
pop
icebp
mov
dec
cmp
or
pop
adc
mov
push
sub
fistpll
mov
xor
cmp
test
ret
mov
imul
add
and
inc
push
xor
jb
xchg
out
pop
add
lret
cmp
lret
jbe
fdivrs
and
mov
pop
loope
sbb
or
rcrb
out
lea
sarl
iret
jae
aad
cmpsb
faddl
ljmp
aam
jg
mul
mov
jo
fwait
mov
aad
js
mov
add
or
cmp
jb
lds
pusha
icebp
push
lock
mov
mov
movsl
cmp
xlat
sbb
jno
out
int3
push
xchg
sti
test
stc
cmpsb
test
sbb
subb
ret
push
xor
nop
mov
dec
and
xchg
je
mov
ret
pop
cmp
adc
pop
clc
xchg
mov
sub
ljmp
dec
dec
cltd
mull
or
adc
mov
mov
subb
mov
movsb
mov
pop
add
mov
outsb
xchg
inc
push
adcl
cmp
pop
dec
adc
inc
insb
movsl
jb
push
mov
inc
xor
xlat
and
leave
fildll
pop
mov
stos
bound
shlb
lahf
inc
mov
popa
sti
sti
jg
aam
xchg
cld
push
xchg
sub
sub
push
insl
stc
out
or
cmp
inc
out
pop
xchg
and
scas
xlat
scas
mov
mov
imul
rcrl
call
add
aaa
fimull
pop
mov
in
hlt
fnstsw
stos
sbb
fldt
repz
jno
jp
sarb
mov
cltd
cmp
test
jecxz
daa
imul
int3
hlt
lea
cli
out
dec
jmp
popl
or
jae
cld
mov
jbe
jnp
popf
fldl
push
jg
sti
sbb
addr16
push
jp
mov
movsb
sub
mov
xor
add
sub
lret
xor
mov
fldl2e
cmp
sahf
add
push
movsb
mov
in
or
lods
sbb
enter
setl
les
sbb
lods
lods
push
ret
roll
add
lret
jmp
push
roll
cmp
rolb
mov
dec
repnz
lret
cli
rclb
sub
mov
cltd
sbb
mov
ss
rcrb
jecxz
repz
roll
mov
xchg
fsubrs
lea
xor
in
push
sti
mov
movsb
jmp
inc
sbb
sbbl
fwait
jb
xlat
inc
or
and
pusha
into
xor
out
imul
out
test
sub
mov
loop
ret
cltd
mov
xor
sub
sub
or
dec
dec
xor
xchg
and
jnp
mov
aaa
out
dec
cld
add
fwait
push
sub
dec
sbb
adc
jg
mov
push
jo
in
xor
mov
adc
xchg
add
pop
push
test
stos
mov
repz
inc
stos
mov
arpl
push
shll
mov
jne
pop
add
into
daa
sbb
sbb
aad
mov
addl
inc
rcrb
and
pop
dec
dec
adc
jns,pn
xchg
les
movsb
dec
or
testl
cmp
or
xor
adc
nop
and
ret
gs
ja
ret
stos
xorb
insb
daa
pop
xor
mov
mov
adc
inc
pusha
rcrl
cmp
aad
pop
int
sbb
cmp
cmpsl
pop
jnp
imul
cmc
sbb
in
lret
gs
pushf
jae
or
adc
pop
sbb
leave
xor
popa
or
scas
jge
jl
jl
icebp
bound
sbb
pop
movsl
xchg
iret
push
sub
cmp
jo
inc
lods
adc
mov
sbb
pop
jmp
dec
lods
in
add
mov
xor
sub
add
leave
loop
test
dec
inc
xor
lcall
ss
fistpl
mov
cltd
fisubs
decb
out
inc
aam
daa
and
stos
jg
jb
mov
xor
and
and
or
mov
negl
and
pop
mov
xchg
mov
jns
pop
cmpsl
repnz
dec
outsb
sti
mov
mov
ret
push
rcl
leave
loope
push
stos
pop
xor
jp
jns
add
imul
rol
addr16
sahf
jns
mov
xor
mov
rorb
push
push
arpl
mov
fnstenv
cmpsl
in
mov
push
stos
dec
xor
aam
aad
inc
ror
pop
mov
call
pop
sbb
cmp
inc
or
and
mov
adc
pushf
sbb
adc
icebp
push
icebp
repz
xchg
dec
lcall
xor
enter
std
clc
xlat
shlb
jmp
add
mov
inc
clc
pop
stc
pop
in
inc
mov
mov
inc
dec
and
sub
dec
mov
pop
dec
or
mov
jge
js
fcmovb
jmp
jns
incl
jle
into
loopne
mov
add
xor
repnz
adc
dec
pop
rcl
xor
sbb
inc
sahf
sub
cltd
test
mov
lcall
pop
push
test
xchg
dec
jae
and
add
hlt
dec
jnp
sub
mov
cli
jmp
xor
xlat
lods
cmpsb
test
pop
and
xchg
das
mov
lock
lahf
mov
or
call
xor
cltd
mov
jle
jb
stos
call
test
cmp
cmp
in
pop
scas
bnd
loop
out
neg
pop
dec
shrl
push
out
iret
xchg
mov
lret
outsb
daa
lods
xor
fnstcw
push
push
dec
jns
dec
jmp
or
mov
add
sar
inc
aad
fldenv
aam
mov
ret
loope
xchg
xchg
and
ret
jae
les
mov
enter
push
ds
test
out
dec
addl
cltd
gs
xchg
push
lret
adc
adc
popa
sub
enter
incl
add
dec
lcall
and
jge
cwtl
sub
ret
cld
cmp
test
lds
push
adc
nop
add
adc
sub
jnp
iret
mov
jmp
aam
gs
inc
dec
nop
add
in
js
lret
cld
shrb
lods
jbe
ljmp
scas
and
fwait
inc
cwtl
fsts
adc
and
push
push
jl
popa
xlat
push
pop
adc
mov
movsl
jg
bound
jg
inc
sbb
js
inc
dec
sbb
into
pop
mov
and
adc
push
pop
je
out
fmuls
inc
add
cmp
jnp
adc
lea
jp
mov
mov
sbb
jbe
jecxz
loopne
cwtl
inc
sub
jno
dec
xchg
mov
jecxz
push
adc
sbb
repnz
mov
movsl
cld
mov
int
rolb
in
mov
sahf
ret
adc
inc
push
mov
orl
push
mov
push
cmp
adc
mov
and
cmp
jp
shlb
movsb
psrlq
cmp
or
cs
and
mov
and
jmp
cmp
dec
push
outsl
or
outsb
cmp
fsubl
adc
lods
fsubr
or
mov
js
mov
loopne
aaa
rolb
and
das
add
lds
inc
pop
addr16
popa
cmc
inc
jg
mov
jbe
sbb
jecxz
mov
popa
or
mov
push
or
sbb
add
mov
pop
dec
mov
loop
jb
addb
xor
in
rcl
dec
aad
push
scas
inc
popf
loop
test
bound
cmp
push
mov
sar
fs
or
dec
ret
arpl
add
movsb
cmpsb
es
jae
sbb
xor
sub
mov
lods
add
cld
push
fistpl
jge
decl
cmpsb
rcrl
adc
jo
sub
in
mov
fidivrl
sub
shll
cli
sub
mov
push
xchg
dec
inc
lret
sub
push
rcrb
dec
sub
lods
lock
jg
cli
pop
jnp
int
in
std
nop
out
cmp
leave
lods
xchg
mov
adc
sti
jnp
int
sub
pusha
int
add
inc
clc
jae
xchg
jge
inc
and
lret
addb
iret
out
insb
jg
mov
leave
sahf
rorl
mov
inc
pop
dec
daa
jo
fdivl
repz
out
ficompl
inc
mov
pop
jno
xchg
faddl
test
shl
inc
sub
and
mov
aad
mov
popa
mov
bound
loope
xor
push
daa
loopne
in
leave
mov
insb
sub
rorb
popa
jne
div
nop
fwait
push
mov
jl
ficomps
fdivs
and
sbb
pusha
cmp
mov
adc
xlat
dec
dec
or
cmc
popf
cmp
mov
cli
mov
mov
icebp
mov
sbb
repz
push
mov
std
fists
xchg
dec
push
add
mov
iret
push
xor
xor
adc
mov
loop
rcll
mov
arpl
outsb
lahf
ret
sub
adc
push
pop
aaa
mov
mov
test
daa
inc
pop
and
sti
bound
inc
dec
ja
jae
cmp
leave
mov
ret
adc
xchg
nop
ja
aam
mov
push
test
mov
sub
clc
jp
arpl
mov
cmp
test
ficomps
add
fstpt
and
arpl
je
xchg
inc
popf
xchg
mov
dec
roll
mov
dec
sub
jg
push
xchg
sub
pop
aaa
fldenv
add
sbb
jmp
rclb
push
pop
inc
adc
int3
mov
sbb
mov
icebp
jne
loop
imul
and
push
inc
int3
ret
dec
push
inc
xor
scas
fistpll
ror
out
imul
les
jmp
gs
mov
into
cmovae
stos
jmp
aam
mov
imul
lds
push
sub
jmp
push
jle
push
std
inc
fistl
sbb
add
into
aam
pop
xor
or
insl
jns
or
xchg
mov
jp
shl
int
jle
jg
insb
pop
mov
xchg
or
sbb
jb
pop
mov
imul
fisttps
decb
aad
daa
into
loope
outsl
int
std
jo
rol
sbb
jg
movsl
inc
into
push
repnz
dec
inc
jl
push
and
mov
adc
data16
cmp
popl
xchg
lret
dec
mov
les
dec
sub
xchg
out
sti
fs
call
or
xor
push
and
mov
sub
insl
stos
sub
jae
insl
inc
inc
xor
adc
repnz
shl
lea
cmp
jp
lret
cmp
lds
cmpsl
insb
das
dec
push
outsb
mov
push
inc
inc
sti
into
push
xor
fnsave
push
data16
jmp
inc
mov
adc
and
xchg
pop
imul
sub
xchg
scas
les
pop
in
add
cwtl
mov
imul
mov
push
pushf
xor
cmc
ret
shlb
lods
aam
pop
mov
sbb
inc
inc
mov
fwait
sbb
sarl
cli
cmpl
push
adc
mov
rcr
and
fcoms
mov
mov
dec
jne
jo
scas
push
pusha
repnz
pop
pop
sbbl
rcrl
dec
scas
dec
aam
out
test
sub
nop
xor
push
outsl
mov
testl
cwtl
mov
mov
jns
add
fwait
ret
insl
and
jg
int3
dec
lret
leave
addr16
andl
mov
add
movsb
nop
mov
xchg
dec
cmpsl
in
int
gs
and
inc
cmp
dec
xor
hlt
sbb
nop
in
cmp
aam
sti
icebp
fst
pop
jb
lahf
xlat
cs
in
lret
jge
sti
jne
cmpsl
shr
adc
arpl
inc
mov
daa
inc
adc
jns
adc
sbb
dec
loop
mov
add
push
ds
jmp
test
mov
push
xchg
sbb
pop
pop
or
xor
xor
in
cmpsb
jg
pop
aaa
fistpl
jg
in
loop
xchg
aas
cmc
jg
push
pop
es
cmp
adc
mov
xchg
aad
in
push
cmp
pop
mov
leave
cltd
dec
sahf
and
jle
mov
add
mov
sub
shlb
out
dec
mov
insl
xor
add
fs
test
popf
xchg
imul
outsl
aas
jbe
lods
ror
mov
stc
push
cwtl
pop
push
lret
mov
stc
inc
add
add
pop
push
je
int
insb
sub
or
cmc
lods
mov
dec
sbb
repz
mov
fmuls
sbb
push
hlt
dec
fistpl
push
dec
cwtl
in
mov
lock
sub
shll
mulb
scas
shll
jecxz
and
dec
inc
out
cmp
pop
push
inc
mov
adc
xorl
push
test
cmp
mov
xchg
inc
mov
mov
dec
add
and
mov
jecxz
outsb
pop
sahf
pop
mov
add
stos
add
push
insb
dec
mov
mov
jo
push
lret
jns
dec
mov
fadds
ja
and
ret
daa
xor
ja
mov
mov
pop
fcomip
push
hlt
push
jno
jl
mov
das
test
mov
ret
inc
hlt
pop
testl
mov
es
leave
inc
or
push
fildl
orl
hlt
jmp
push
inc
push
cmp
xchg
mov
out
repz
scas
xchg
xchg
enter
and
pop
mov
arpl
mov
cmp
xorl
lea
test
shr
js
cwtl
in
rorl
lahf
mov
xchg
jae
in
outsl
and
adc
aam
test
rcrl
adcl
std
mov
in
lea
shrb
sbb
insl
es
popa
xor
cs
mov
mov
pop
push
pop
fisttpll
lds
mov
mov
or
adc
cwtl
xchg
sbb
sub
test
jo
insb
adc
ds
bound
out
dec
xor
gs
jb
je
ror
push
pop
cmp
jg
xor
lods
adc
or
xor
fstpt
xchg
xor
cmp
add
inc
cwtl
aam
dec
pop
stos
or
or
lds
cltd
cmpl
push
hlt
in
sbb
mov
movsb
pop
xor
sub
int3
add
sbb
lods
mov
daa
popf
andl
mov
mov
pop
stc
out
flds
add
fmul
scas
in
imul
out
add
fildll
adc
add
pusha
stc
call
pop
hlt
or
inc
jnp
and
lcall
stos
jns
xchg
or
jmp
mov
call
jge
outsb
jl
mov
sbb
mov
cmp
push
stos
inc
pop
jecxz
push
cltd
lods
mov
inc
aad
test
cmp
adc
test
out
pop
lods
adc
sub
push
push
adc
mov
enter
mov
xchg
push
dec
js
pusha
or
sbb
xchg
loop
mov
xchg
stos
loopne
xchg
imulb
mov
ficomps
cmc
mov
das
push
add
std
push
dec
and
je
sub
inc
in
aam
inc
les
jne
call
and
mov
lret
aam
cmp
pop
insb
lret
dec
pusha
lahf
adc
mov
cwtl
imul
insl
inc
inc
dec
cmp
addr16
int
std
int
adc
push
arpl
subl
cmc
or
pop
sti
xorb
push
add
add
scas
add
shrl
adc
leave
dec
lcall
test
mov
dec
mov
iret
mov
sub
test
nop
push
leave
mov
mov
outsl
int3
and
add
or
mov
into
pop
sbb
pop
rorl
nop
jle
xor
es
daa
mov
scas
xor
clc
aad
sbb
inc
mov
add
daa
jl
bound
outsb
cmpl
in
mov
pop
enter
adc
mov
mov
push
pop
add
mov
outsb
pushf
clc
mov
sub
scas
addl
pop
call
mov
sti
into
fs
insl
pop
cmpb
lods
faddl
test
ret
insb
jne
and
cmc
mov
push
adc
cld
xor
and
jl
adc
adc
out
inc
aam
rclb
outsl
iret
stos
xlat
push
test
sbb
sbb
imul
cmp
sbb
in
pop
inc
outsb
mov
in
and
or
leave
xor
rorb
xlat
imull
and
int3
pop
scas
mov
dec
mov
in
pop
push
popf
sbb
sub
pop
les
xchg
dec
cmpsb
fcoml
jmp
rcr
cmp
and
call
dec
mov
mov
mov
cmpsl
dec
addl
mov
mov
gs
sbb
ja
sub
int
movsb
xlat
iret
ret
and
xchg
and
shlb
pop
mov
xchg
mov
add
adc
cmp
xchg
cmp
iret
cli
and
daa
movb
cmp
daa
push
cmp
hlt
xor
mov
ljmp
repz
in
inc
leave
pop
repnz
inc
push
leave
mov
jmp
dec
shll
adc
sub
cmp
fldl
cld
adc
cwtl
dec
aam
daa
mov
sti
rcl
sbb
xchg
divl
mov
sbb
pop
sub
push
test
xchg
jp
inc
leave
cld
xor
std
hlt
mov
outsl
mov
cmpsl
outsb
mov
mov
test
hlt
aaa
xchg
insl
mov
sbb
pop
push
std
sbb
pop
xchg
inc
jl
les
or
push
neg
lret
movsb
jmp
rorb
pusha
bound
sar
mov
fcomps
xlat
or
in
nop
sbb
repnz
pop
leave
push
daa
popa
xchg
and
lret
inc
idiv
push
pop
adc
push
lret
cltd
aam
push
mov
fdivl
cmp
dec
mov
sbbl
aaa
cltd
mov
jg
adc
out
sbbl
cwtl
sahf
push
movsb
arpl
cmp
dec
cld
adc
mov
lcall
mov
out
das
rep
jp
int
inc
adc
sbb
stos
mov
jg
add
popa
mov
adc
pusha
adc
fildll
inc
cmp
incl
pushf
arpl
insl
sbb
aaa
clc
inc
nop
push
in
xor
test
sbb
jl
in
loopne
ret
push
popf
xchg
xchg
fldl
mov
push
pop
sub
mov
imul
insb
ret
shrb
movsl
xchg
cmc
aam
lea
ljmp
xlat
test
mov
jo
ss
dec
ljmp
cmc
imul
loope
pop
push
std
mov
xor
bound
pop
repnz
and
sahf
pop
jb
lds
cmp
jno
push
add
ret
adc
in
out
daa
push
and
out
push
movsl
mov
das
inc
jl
out
inc
jmp
cmp
fsubl
xchg
xchg
ret
and
pushf
mulb
push
jge
cli
sbb
push
push
je
adc
ficoms
sbbl
pop
fistpll
jge
push
cwtl
addr16
mov
outsb
mov
push
xchg
jmp
std
daa
rcr
mov
andb
std
adc
jbe
push
xor
fwait
and
fcompl
inc
loop
xchg
dec
lcall
outsl
pop
add
mov
sub
lcall
cmpsb
std
or
inc
jmp
mov
movsl
aam
xchg
sub
fcmovbe
inc
aam
and
and
add
or
fcomps
pushf
in
adc
inc
ljmp
xchg
add
out
aaa
cmp
jmp
and
add
cmpb
or
popa
push
or
fwait
pop
loop
movsb
mov
test
lcall
pusha
mov
imul
xchg
push
repz
std
fsubrl
mul
icebp
adc
add
sub
pushf
aad
das
xor
sbb
mov
adc
sub
cmp
cmpsb
lods
pop
mov
cmp
mov
loopne
outsl
fcoml
iret
cmc
or
daa
dec
fimuls
aaa
aas
xchg
push
fsubs
sub
adc
mov
aaa
jmp
jns
lods
rcrl
cmp
mov
inc
mov
scas
fs
popf
cwtl
cmpsl
sbb
mov
push
aad
repnz
xchg
push
inc
jge
xor
nop
ljmp
call
scas
imul
mov
mov
repz
rorb
arpl
and
cmp
pop
es
inc
push
mov
pusha
stc
aad
xor
xchg
fistpl
xor
iret
dec
sub
test
xchg
mov
dec
in
imul
pop
ret
in
fbld
sub
daa
lea
aam
cmp
sub
clc
nop
mov
fildl
sbb
xlat
lods
fwait
test
fisubrl
aas
or
sub
rorb
push
scas
fnsetpm(287
push
pop
sbb
dec
jle
jb
or
rcrl
inc
clc
lods
ds
les
fnsave
or
xlat
divl
and
cmpsb
aam
mov
dec
and
mov
or
scas
fs
rolb
mov
push
push
cli
jnp
test
jbe
int
jne
out
inc
dec
and
sub
inc
or
mov
jno
jns
dec
adc
test
inc
mov
sarb
mov
push
push
mov
mov
mov
pop
adc
adc
sbb
cs
hlt
sub
xchg
add
xor
sarb
dec
lock
jmp
jne
fwait
mov
sbb
cli
je
int
daa
lds
repz
jo
and
mov
repz
lret
int3
aam
and
jbe
movsl
out
push
fdivl
lahf
xchg
hlt
add
jl
cmc
loope
ret
mov
push
mov
cmpsb
pop
inc
stos
fwait
add
dec
sbb
xchg
ror
lea
sbb
mov
hlt
pop
lods
mov
aaa
mov
fisttps
and
xchg
mov
repnz
aaa
and
sub
push
das
jns
sbbb
je
sbb
mov
test
pop
cmp
mov
inc
out
insb
lcall
fmuls
dec
or
sahf
dec
popf
test
xor
xchg
xchg
pop
xor
insl
add
xor
inc
popf
pusha
ja
push
jne
sti
sub
jo
incl
inc
and
mov
aam
mov
mov
jbe
arpl
cmp
rep
xchg
test
and
test
int
xchg
imul
push
push
inc
imul
lods
inc
inc
out
int3
sub
xlat
jl
fs
push
add
mov
xor
fldcw
loop
movsb
dec
pop
gs
jo
stos
sbb
inc
cltd
xor
cmp
inc
xchg
loopne
leave
jecxz
fistpll
andb
rcll
shrb
out
inc
and
sbb
cs
pusha
sbb
push
xchg
testl
xlat
xor
lods
sub
jns
jae
xchg
loopne
sbb
cmp
add
xor
aad
push
data16
add
mov
not
fistpl
les
cmp
push
hlt
mov
or
js
xor
aad
mov
sub
dec
or
cmpsb
cli
push
push
ja
sarl
cmp
jp
sub
pop
inc
cmpsl
aas
inc
dec
inc
cmpsl
imul
xor
mov
call
xor
jmp
fwait
insb
dec
shrl
xor
sahf
in
mov
pop
inc
out
lods
scas
jecxz
mov
push
fwait
lock
pop
dec
rcrb
or
je
test
jl
pusha
add
les
aas
test
clc
data16
data16
lcall
dec
ret
cwtl
jmp
shll
push
std
aas
out
jmp
push
mov
sub
mov
jl
cmp
or
xchg
mov
cmp
nop
jnp
call
sarl
bound
mov
mov
inc
fstp
mov
fcmovne
rolb
iret
xor
das
xor
bound
shlb
pop
fwait
sub
push
add
mov
xchg
dec
sbb
incl
rcll
mov
leave
std
fwait
fsts
mov
sbb
rorl
test
in
pushf
xchg
cmp
andb
outsl
sub
and
das
jns
xchg
icebp
xchg
xchg
repnz
js
xchg
cli
adc
shr
jmp
push
fnstenv
mov
sarb
add
idivl
cmp
cmp
jns
and
adc
out
mov
dec
fucomi
mov
imul
mov
jns
dec
aaa
adc
jp
inc
jnp
sub
jg
xchg
stc
stc
cs
jne
loopne
inc
mov
add
rorl
jmp
sti
scas
fnstenv
cld
icebp
iret
adc
daa
mov
idivb
mov
data16
pusha
aad
mov
jnp
in
mov
adc
fs
mov
js
ss
scas
or
jo
test
mov
push
in
pop
and
jp
dec
mov
cmpb
insb
nop
lret
ret
jecxz
decl
sbb
sub
jno
xchg
in
out
mov
cmpsl
jne
add
gs
xor
pop
cld
das
jl
xor
mov
mov
ljmp
push
movsl
inc
rcrb
xor
pusha
xchg
aas
lods
jge
add
int3
mov
pop
jnp
inc
cmp
fidivs
add
mov
stos
lahf
lds
fs
js
cmpsb
stc
pop
pop
sub
rclb
fsubp
inc
in
loopne
repz
mov
cmp
add
mov
outsl
pop
pop
js
jae
sti
stos
loope
je
mov
sbb
scas
sub
mov
in
loopne
inc
mov
ss
sub
popfw
push
in
jnp
xchg
lret
mov
add
repnz
test
aam
add
dec
loope
adc
loope
fldl
mov
rorb
sbb
jnp
nop
mov
dec
add
and
shr
aam
add
into
mov
fsub
pop
push
aaa
and
mov
jl
jle
aad
lcall
sbb
int3
frstor
nop
arpl
fiadds
das
jle
inc
jmp
sbb
cmp
andb
loopne
dec
cmpl
cli
fbld
out
fidivl
ret
pop
data16
cmp
push
es
sti
mov
test
loope
pop
icebp
fwait
cmp
loop
fiadds
cmc
add
cmc
mov
push
dec
dec
mov
and
add
nop
movsb
insb
xchg
aaa
add
cwtl
cmc
xchg
andl
popf
xchg
loope
pop
rorb
mov
xchg
xor
adc
aaa
dec
movsl
add
loopne
rcrb
jp
and
jo
popa
outsl
movsl
mov
push
mov
xchg
sti
jo
inc
pusha
mov
shrd
clc
imul
jae
jg
incb
xor
andl
fisubrs
cmp
and
fnstenv
jnp
mov
xor
sbbb
and
shr
cmp
push
cmp
mov
push
in
fs
negl
pop
cwtl
stos
cli
imul
or
sbb
cs
iret
addr16
loopne
dec
jne
arpl
xor
inc
das
divl
mov
mov
push
inc
movsb
pop
push
nop
or
push
xchg
fsubrp
inc
add
add
dec
jae
dec
cmp
imul
insb
jmp
mov
jno
rcrl
sub
and
xorl
out
pop
dec
pop
unpckhps
arpl
lock
enter
mov
addr16
daa
cmp
clc
sub
sti
aas
lahf
mov
mov
jg
fistpl
xchg
sbb
sub
cs
adc
in
dec
or
push
sti
xchg
mov
push
sbb
dec
xsaves
je
or
arpl
out
xor
je
sub
sbb
adc
test
je
in
cmp
jno
adc
add
fstpt
adc
adc
mov
sarb
jmp
aaa
cmpsl
or
int
mov
fs
mov
cmp
outsb
sub
and
xor
add
mov
loope
sbb
inc
pop
xor
pusha
ret
cmp
movsl
in
inc
add
jecxz
add
xchg
jae
push
nop
push
cmpsb
xchg
out
or
lret
xlat
lods
mov
and
fcomip
mov
sub
push
out
shr
xlat
lods
lahf
fistpl
sbb
sbb
pop
cmp
xor
cmp
sahf
popf
and
sti
push
imul
xor
aas
pop
cmpsl
hlt
dec
cmp
scas
iret
movsb
movsl
out
pop
leave
js
icebp
mov
sbb
clc
sti
jbe
sub
ja
push
add
sbb
push
jb
sarb
dec
dec
insb
pop
cltd
les
jo
clc
leave
mov
out
push
cmp
xor
scas
repnz
mov
sub
leave
in
out
scas
dec
sbb
arpl
ret
ljmp
std
sbb
sub
ret
movsb
rcrl
sub
adc
push
or
and
mov
lds
in
inc
nop
imul
mov
inc
mov
and
in
jl
xchg
mov
sub
repz
cmp
in
cwtl
sbb
push
sub
and
xor
scas
pushf
push
inc
dec
sbbb
outsl
and
loope
insb
popf
bound
mov
in
leave
and
popa
ja
ror
inc
or
das
pop
rclb
cmpsb
jg
push
int
lret
sbb
aam
sbb
rorl
or
xor
add
pushf
inc
fcmovnu
jmp
cwtl
aad
addr16
mov
mov
incl
sub
pop
mov
stos
xor
sti
mov
jmp
cmp
xor
lods
shlb
sbb
insb
test
adc
and
rclb
clc
ljmp
sbb
lea
xchg
sahf
sahf
stos
push
call
xlat
cltd
aas
pushf
fistpll
rorb
fwait
scas
mov
inc
jge
aad
add
imul
addr16
jno
rolb
in
fsubrs
sub
outsb
pop
dec
fs
pushl
es
scas
in
sbb
push
inc
xlat
mov
nop
in
jne
pop
test
jns
jo
or
jnp
fadd
lods
rcll
jge
enter
lret
fdivl
cwtl
sub
jmp
inc
test
in
mov
or
insb
push
add
lahf
imul
fdiv
lcall
faddp
push
icebp
mov
enter
test
xor
xchg
imul
ds
xchg
adc
bound
xor
data16
xchg
in
mov
je
repz
jb
xchg
loope
dec
cmp
ljmp
stc
lahf
inc
push
bound
push
clc
lock
xchg
outsb
inc
pop
xor
pop
dec
cmp
fbld
and
lahf
pushf
gs
pop
cs
xor
mov
notb
xor
mov
jns
mov
mov
jne
mov
je
cwtl
cltd
inc
sbb
rcrl
mov
popf
in
xchg
mov
sub
and
xchg
cmpsl
pop
aaa
rcll
push
mov
pushf
icebp
jne
add
pop
or
popw
shll
mov
and
mov
pop
mov
stos
fisttps
pushf
add
shrb
adc
xchg
dec
movsb
fstps
mov
ljmp
pop
xchg
out
pop
adc
sbb
dec
push
or
ds
inc
add
rclb
inc
cmpsl
stos
adc
jl
sahf
test
pushf
inc
inc
out
mov
iret
sarb
pusha
mov
adc
push
xor
lock
mov
pop
xor
mov
stc
fadds
lcall
inc
and
hlt
pop
and
loope
or
outsl
add
sub
fstp
cmp
mov
mov
sbb
push
lcall
adc
lods
sub
jb
xchg
pop
data16
or
std
push
fdivr
xchg
aam
loope
mov
insb
sub
push
insl
movsl
fidivrs
dec
call
aaa
push
fdivp
xor
or
xor
pop
insl
enter
add
push
jns
sub
sub
leave
out
test
sbb
or
aas
jno
inc
fucom
call
mov
cmp
es
sahf
dec
andb
dec
or
dec
lcall
imul
or
pop
fcomp
rol
cs
js
dec
fcomi
test
fidivrl
outsl
and
sbb
cmpsl
iret
sbb
hlt
mov
jae
outsb
mov
lock
cmpsb
or
xchg
fimull
inc
mov
push
ret
adc
lea
insl
movsb
jecxz
push
and
pop
ret
and
fisttpl
xor
and
aad
imul
mov
push
imulb
mov
pusha
cmp
in
or
jno
test
jle
xor
xchg
or
cmpsb
adcl
mov
add
pop
cs
dec
and
aam
mov
incl
push
mov
loop
sub
stos
sub
mov
jae
int3
mov
js
rclb
das
lcall
rclb
cmp
in
inc
das
push
das
mov
les
stos
push
lcall
out
shlb
add
mov
hlt
jp
popf
cltd
in
sar
lea
das
addr16
lcall
add
push
and
mov
call
aaa
insl
std
aaa
pop
repnz
push
mov
push
pop
frstor
out
cmpsl
test
cmp
int3
repnz
fmuls
add
jns
inc
xor
adc
divl
xchg
adc
xchg
test
inc
mov
lret
pop
les
add
jge
sbb
sbb
dec
mov
leave
mov
inc
dec
rcrb
sub
outsb
in
lods
or
jae
ja
mov
add
adc
jle
add
mov
int3
cmpsb
icebp
test
fs
aad
mov
clc
push
dec
stos
andb
adc
pusha
cmp
mov
pop
pop
insb
pop
mulb
mov
mov
cmpsb
inc
mov
sub
adc
sbb
dec
lret
sub
dec
sbb
notl
or
aas
push
popl
mov
xorl
ret
mov
dec
inc
cmp
test
jo
pop
cmp
inc
pusha
in
mov
in
mov
push
and
enter
in
jb
cmp
inc
dec
pop
or
adc
push
push
jo
pusha
movsl
dec
xchg
and
addr16
inc
icebp
lret
sub
je
sub
imul
lret
orl
rcl
ds
mov
xor
sbb
pop
push
push
dec
lret
les
or
inc
je
scas
or
aaa
mov
addr16
jno
in
test
adc
sub
sub
fs
jmp
cmc
sbbl
mov
lahf
inc
dec
or
outsb
mov
inc
jns
mov
jbe
test
sub
push
mov
or
in
xchg
test
mov
xor
das
mov
enter
jne
mov
add
xor
rolb
pop
movsl
bound
pop
jl
ds
sti
out
jg
push
add
adc
cmp
jl
xor
xchg
sub
inc
inc
cmp
sbb
xor
mov
mov
outsl
imulb
cmp
rcl
iret
ret
xor
cmp
pop
lahf
xor
addr16
leave
mov
stos
xchg
nop
lock
out
cld
inc
pop
daa
clc
mov
pop
stos
pop
xchg
cmc
cmp
lret
and
repz
add
mov
aas
or
lock
lods
mov
lock
xchg
outsl
insb
mov
out
inc
push
mov
and
mov
ja
je
xchg
mov
push
xor
or
sbb
mov
sarl
or
dec
ror
cwtl
xchg
insl
cmp
dec
fldcw
sbb
lahf
pop
ror
jb
lea
xchg
stos
nop
sbb
adc
cld
sbb
xchg
test
cmp
lahf
fbld
scas
scas
cmpsb
movsl
mov
mov
pop
sub
stos
imul
sar
xchg
push
fdivs
fcomps
mov
inc
test
mov
xor
in
sbb
fistl
xchg
lahf
fs
sub
mov
adc
clc
mov
leave
cld
adc
pop
inc
sub
mov
sar
enter
sahf
xchg
jg
add
sub
xchg
jne
incl
or
das
ret
dec
add
in
lret
mov
insb
xchg
lret
xor
mov
xor
xchg
dec
cli
xor
xchg
push
std
lcall
or
mov
subb
test
leave
sbb
in
scas
cmc
dec
mov
xor
out
xchg
das
inc
xor
cmp
aaa
push
push
aad
divl
sbb
adc
cltd
jl
or
pop
mov
jecxz
test
sub
mulb
mov
fwait
mov
xchg
lret
jp
push
adc
xor
xlat
adc
bnd
cmp
xor
cmpsl
mov
or
adc
cmp
fildll
daa
popf
cmp
out
mov
cmc
dec
sub
sar
sahf
inc
cmpl
add
mov
stc
mov
inc
xor
repnz
sub
cmpsb
ja
sub
cltd
jno
pop
sahf
lods
and
mov
inc
outsl
adc
push
nop
fwait
adcl
clc
push
inc
jle
and
aad
imul
mov
mov
jmp
test
test
fidivl
mov
sub
jecxz
push
add
xor
pop
pop
das
add
rcrl
mov
and
and
mov
add
shll
pop
sbb
fmuls
ret
adc
push
das
lea
xchg
rcll
mov
in
cld
inc
mov
push
test
lea
cmpsb
pop
cmc
pushf
inc
sub
fprem1
xchg
lret
push
or
lea
adc
jae
cmpsl
mov
cli
push
in
nop
repz
andl
dec
mov
inc
lahf
pop
faddl
pop
or
push
insb
add
push
mov
or
inc
stc
mov
dec
jp
in
mov
scas
cwtl
push
inc
mov
inc
xor
sub
ret
stc
lret
xchg
clc
xchg
mov
mov
xchg
and
icebp
repnz
mov
cwtl
sbb
cmp
leave
stos
aas
rol
xor
and
adc
or
lods
cld
les
sub
mov
jp
nop
int
mov
add
add
mov
push
xchg
jl
filds
clc
mov
mov
adc
cmpsl
stc
ret
mov
mov
insb
sub
mov
aas
push
xor
fwait
cmp
xchg
fiaddl
mov
cmp
push
push
test
inc
add
repz
es
gs
dec
inc
pop
sbb
dec
sti
lods
xchg
push
push
xor
das
pop
sti
outsl
test
adc
sub
add
mov
jl
jno
rol
inc
xchg
jo
out
pop
jo
pop
inc
rcr
iret
shrb
mov
addb
adc
sub
mov
mov
dec
or
test
add
aad
dec
aam
jmp
xor
out
jbe
mov
xchg
cmpsl
aas
mov
fwait
or
push
pop
mov
stos
mov
xchg
fildll
std
push
test
push
leave
jp
dec
dec
xchg
into
emms
jae
lods
rclb
mov
add
push
out
aas
mov
or
shl
lahf
outsl
mov
lcall
gs
and
or
out
cs
jmp
mov
xchg
mov
inc
mov
scas
in
test
in
dec
dec
dec
idivb
in
aad
ljmp
mov
add
or
leave
xchg
stos
lods
jge
imul
popf
ficoms
outsb
in
cmp
fsubl
fs
insl
lds
frstor
mov
push
jle
pop
pusha
inc
and
mov
test
scas
into
dec
mov
lret
adc
sbb
lds
add
mov
sbb
aad
pop
daa
jmp
mov
xchg
xchg
mov
sahf
sbb
sbb
shll
inc
add
je
dec
jnp
adc
xchg
jns
insl
leave
sarb
push
pop
popa
dec
jae
pushf
pop
popf
jbe
mov
outsb
mov
xchg
push
aam
sub
mov
lahf
loopne
and
fcmovnu
repz
fstps
sub
addr16
ss
outsb
cmp
mov
repnz
sbb
cmpsb
jbe
ds
push
mov
jle
xlat
in
fisubs
xor
inc
into
push
or
cli
mov
inc
in
clc
ljmp
das
or
fildl
outsl
push
popa
push
sahf
jmp
mov
jno
and
mov
push
in
cmp
loope
and
adc
and
jg
xor
xchg
outsl
or
jmp
insl
jl
pushf
or
adc
int3
jge
push
pop
cmp
mov
movsl
xchg
mov
dec
std
jns
add
jge
xchg
sbb
fs
aam
jne
push
hlt
xchg
dec
stos
adc
and
add
adc
adc
inc
scas
add
adc
cmpb
jae
test
pusha
test
sub
fsubr
cwtl
xchg
icebp
and
adc
lods
xor
iret
iret
into
cmp
xchg
cmpb
sbb
sti
sub
data16
push
push
dec
mov
cltd
push
adc
cmp
and
cmp
inc
xor
push
rcll
xchg
inc
cmp
dec
push
aas
clc
jmp
inc
nopl
into
decl
sub
push
fidivrs
pop
std
xor
idivl
dec
icebp
ja
xchg
orl
cld
add
dec
aas
mov
aaa
jmp
jmp
iret
int3
fisubl
adc
add
push
movsb
inc
xchg
dec
lret
jle
cs
cmp
pop
in
mov
jae
outsl
inc
fmuls
cs
hlt
arpl
aaa
lret
jno
lcall
out
jg
repz
gs
push
jl
jl
and
jne
orl
stc
push
mov
call
daa
enter
mov
or
std
in
cmp
sub
xchg
push
mov
xor
imul
inc
cmova
repz
mov
sarl
jl
xor
jmp
mov
xor
mov
ds
cwtl
lea
les
mov
cmp
cmp
jmp
pop
mov
pop
add
or
cli
sbb
dec
mov
clc
dec
pop
push
loop
pop
pop
into
in
sub
dec
fldcw
filds
xor
fidivrl
or
std
pop
or
pop
jl
nop
or
mov
sbb
daa
jg
out
loop
add
or
inc
push
or
gs
test
dec
push
out
ljmp
ss
int3
mov
rcrl
std
pushf
setg
std
inc
movsb
lea
mov
test
out
pop
das
repz
imul
lods
jp
daa
dec
jmp
test
sahf
xchg
lock
xor
mov
adc
cmpsl
push
fs
sbb
add
in
mov
adc
push
out
adc
das
jecxz
jae
sbb
sahf
stc
pop
out
mov
popf
pop
mov
or
shrl
cmp
mov
pop
mov
xchg
pushf
jnp
pop
out
mov
and
cld
sbb
ja
mov
sub
jnp
lret
outsb
std
out
xorb
fistl
cltd
mov
pop
add
test
cmpsb
push
push
lds
jno
pop
stos
nop
xor
setb
push
pushf
std
dec
aas
das
mov
mov
xchg
ret
adc
in
sarb
adc
adc
sub
dec
sub
xchg
lock
movsl
dec
lods
xchg
inc
push
ss
and
mov
fnstenv
cmp
adc
bswap
cmpsl
xor
aaa
xor
repnz
or
and
movsl
andb
mov
mov
mov
mov
outsb
or
iret
sbb
es
fidivrl
pop
mov
adc
mov
int3
pop
in
shl
pop
or
into
dec
mov
push
mov
push
data16
shlb
mov
mov
call
jp
xchg
daa
push
xor
scas
ret
icebp
jb
xchg
push
cmpsl
ja
mov
out
inc
pop
xor
jg
dec
outsl
test
je
insb
cld
cltd
sbb
xor
lahf
aam
out
inc
mov
push
std
hlt
cwtl
hlt
pop
add
test
or
sbb
jmp
push
into
push
mov
jb
fldcw
lret
sbb
imul
sbb
fisttpl
jmp
jae
pusha
je
xchg
in
add
mov
pop
sub
add
shlb
pop
push
bound
mov
lods
dec
sbb
xchg
imul
test
jge
les
sti
jb
pop
mov
scas
sbb
mov
mov
pop
push
xchg
push
stos
jbe
push
adc
xchg
xor
mov
inc
sahf
daa
sbb
adc
call
mov
jge
push
adc
sbb
push
inc
lret
pop
loop
cmp
loope
testl
aaa
xchg
sub
mov
push
push
lea
arpl
push
xchg
or
push
test
aam
jns
in
sub
imul
jo
popf
jb
stos
and
das
int
push
sub
jg
mov
es
gs
jg
cmc
adc
jle
std
call
ret
iret
push
adc
mov
inc
sbb
push
outsb
jns
jb
add
add
lcall
loopne
jns
call
xchg
xor
push
lods
lods
mov
btc
aam
or
sub
daa
pop
shl
shrb
push
inc
fcmovbe
and
mov
mov
lahf
imul
or
adc
xorb
pop
adc
push
pop
xor
out
xchg
xor
enter
fldl
xor
js
sub
or
insl
mov
push
fwait
loope
cld
push
mov
popf
xor
int
out
mov
jo
pop
test
cmc
lock
jp
dec
sbb
mov
imul
movsb
pop
add
divl
cld
add
cld
pop
shll
hlt
inc
sbb
ljmp
add
testl
arpl
rcl
loopne
fimull
pop
mov
ret
and
mov
call
or
enter
mul
popa
subb
xor
mov
popf
fmul
xchg
out
ret
xlat
rorb
cltd
xor
mov
outsb
mov
out
out
pop
lods
hlt
mov
ds
dec
jl
int
and
int
jle
sbb
movsl
pop
test
push
pop
add
xchg
gs
push
ja
movsb
pushf
scas
arpl
test
xor
xchg
ret
push
jge
inc
add
rcl
sbb
lods
push
inc
push
lock
mov
mov
add
push
insb
mov
iret
sbb
mov
mov
aaa
lods
fcmovnbe
int3
cmp
add
push
cwtl
popl
adc
les
cmp
dec
xor
lds
pop
push
data16
xor
inc
pop
cltd
jmp
and
fsub
or
inc
stos
cltd
mov
push
stc
ja
pop
add
push
dec
out
push
push
mov
mov
jae
push
adcl
out
xchg
les
sub
popa
pop
aas
idiv
push
xor
and
fdivr
lea
and
dec
inc
fucomip
ja
xchg
inc
pop
leave
push
xchg
out
out
push
outsb
orps
mov
insb
fadds
insb
pop
lret
sub
lods
aas
leave
out
xchg
cmp
cmp
in
push
out
mov
and
cwtl
shrb
movsb
movsb
repnz
jmp
out
push
les
dec
sbb
mov
jb
sbb
adc
or
inc
mov
fldenv
inc
inc
sub
cmp
lahf
loopne
lret
dec
add
xchg
mov
aaa
mov
incl
insl
dec
leave
std
fs
loope
xchg
addr16
xchg
lods
into
cmp
and
fdivrs
movsb
and
xor
or
mov
sbb
jge
orps
xchg
call
fstpt
clc
pop
xchg
sub
xlat
cwtl
add
lods
cmpsb
data16
gs
pop
jmp
ret
lods
inc
or
cmp
fbld
fisttpl
dec
lods
loopne
test
jg
push
lret
cwtl
jle
dec
dec
outsb
xchg
ret
fsub
xor
icebp
jnp
in
or
inc
adc
jae
mov
adc
sahf
xchg
rcl
jge
mov
push
mov
lahf
les
gs
cmp
daa
xorl
inc
xchg
lret
sbbb
dec
sbb
inc
xor
nop
in
jne
cwtl
lret
mov
pop
and
fisubs
scas
push
adc
cs
aas
push
outsl
xchg
repnz
push
sub
xor
cwtl
and
paddb
mov
mov
out
or
xchg
lods
dec
mov
aam
dec
icebp
out
sbb
sbb
out
jae
sbb
scas
loopne
inc
xor
jl
popa
cmp
sub
out
fwait
xchg
es
outsl
pusha
lods
mov
mov
push
pop
addl
test
inc
stc
or
fmul
mov
mov
and
adc
mov
dec
xor
in
rcrl
imul
adc
dec
in
bound
iret
fwait
dec
fnstenv
xchg
out
jns
inc
lods
test
or
out
out
jecxz
push
cmpsb
sbb
mov
popf
cmpsl
inc
in
xor
sub
lock
aad
xor
xchg
in
enter
or
cmp
scas
fnstenv
movsb
cmpsb
and
pop
add
pop
pusha
js
hlt
es
fucomi
mov
leave
nop
adc
das
sbb
jmp
cmp
out
add
int
and
inc
cltd
jae
sub
lods
add
test
adcb
mov
data16
cmp
test
and
mov
adc
mov
in
xor
cmp
test
std
mov
jp
mov
sub
add
sbb
push
into
aas
aad
push
mov
mov
test
mov
mov
mov
mov
insb
arpl
clc
or
jg
mov
insl
or
jle
mov
sti
and
arpl
cld
into
stos
xor
lea
in
xchg
dec
dec
mov
out
scas
mov
stos
mov
aaa
fisttpll
push
sub
push
pop
push
into
ja
xor
pusha
out
loopne
add
cmpsb
mov
pop
mov
aad
push
jo
mov
and
pop
inc
jl
das
xor
sbb
rclb
dec
sti
sub
pop
sub
jae
add
sbb
and
mov
xchg
popf
dec
test
clc
ret
es
cmp
adc
mov
sub
jns
test
fbstp
sub
icebp
pop
mov
jmp
mov
mov
and
fmul
sub
xor
jnp
lret
and
in
inc
mov
add
sbb
fwait
lock
out
in
lcall
sarb
stc
fmull
fildll
fildl
xlat
out
icebp
and
rorb
and
fldcw
xorb
fiadds
pop
jl
sub
mov
mov
mov
pop
sbb
mov
repnz
pop
mov
and
stc
adc
shr
inc
mov
mov
mov
inc
push
data16
scas
mov
lods
sub
popf
push
adc
sahf
sahf
xor
push
lcall
shll
lds
push
out
or
in
jo
mov
in
fiaddl
ror
sahf
inc
or
test
std
loope
mov
sbb
cli
mov
lock
sarl
lret
test
aas
in
fwait
adc
stos
nop
or
ds
movsl
mov
addr16
aad
cli
cmp
xchg
or
stc
cmp
mov
cmova
push
pop
scas
insb
mov
or
mull
sarb
je
v4fmaddps
loop
fcompl
jmp
cmp
imul
sti
mov
adc
jbe
cli
and
or
ds
mov
and
cmpsb
ljmp
mov
insl
leave
xlat
insl
outsb
add
xchg
mov
xrelease
sbb
aad
xor
and
adc
inc
sub
adc
sub
pop
mov
das
push
cmp
mov
ds
cmpsb
cmc
sbb
push
push
xor
adc
pushf
outsb
data16
pop
dec
fidivl
in
pusha
iret
js
mov
roll
icebp
fwait
testb
sbb
fwait
or
mov
mov
lahf
shrb
fisttps
das
les
xor
in
insl
mov
cmp
mov
xchg
and
arpl
stos
je
dec
jbe
xchg
movsl
cmpsl
jp
pop
mov
outsb
in
fndisi(8087
fisubrs
mov
stc
les
dec
mov
fcoml
or
bound
hlt
arpl
in
fstl
ljmp
xchg
xchg
cmc
ljmp
lods
jl
pop
outsl
call
sbb
iret
scas
data16
xlat
xor
and
pop
in
aad
xchg
aaa
sbb
hlt
pop
pop
pop
xor
xor
sub
cmp
clc
popa
jp
lret
adc
ds
ret
push
xchg
int3
cmpsb
fcmovnb
push
mov
xor
lahf
es
test
push
push
cmp
and
jno
test
cli
les
lret
ja
in
inc
cld
adc
mov
jle
ret
lret
sbb
cmpsl
popf
jl
or
add
insb
fs
jp
adc
addr16
fisubrs
clc
repz
jae
sub
adc
mov
repz
test
aam
mov
xchg
xchg
iret
into
add
dec
inc
pop
cli
and
adc
std
rcrb
sub
imul
jo
pop
flds
movsl
inc
cmp
xchg
xchg
mov
or
sub
dec
ja
mov
xchg
xchg
and
ss
shlb
ljmp
inc
mov
xor
lock
sbb
push
inc
sub
dec
ficompl
adc
mov
mov
lcall
jg
roll
dec
push
pop
cmp
sahf
pop
adc
jmp
xchg
loope
and
sbb
dec
jl
rorl
dec
pop
mov
cld
scas
notb
push
add
jge
jbe
add
xor
mov
gs
add
test
cmp
fmulp
inc
push
dec
addr16
mov
cltd
movsb
cmp
mov
mov
fwait
cmpsb
js
cmp
push
fstpt
or
test
jo
cmpsb
ss
leave
xchg
ret
mov
stc
bnd
shrl
popf
movsb
je
movsb
fiaddl
pop
mov
icebp
icebp
jge
push
mov
fdivr
ljmp
into
or
stc
cmp
fs
aad
ds
xlat
sar
jge
repnz
jne
push
pop
aam
inc
sbb
push
jno,pt
and
loop
pop
sbb
dec
imul
xor
inc
rep
iret
inc
lahf
mov
cmp
aas
inc
mov
pop
ss
flds
or
push
dec
daa
sub
lods
push
adc
scas
shll
jo
lret
pop
push
nop
dec
int3
inc
mov
cmp
incb
inc
inc
mov
push
es
adc
and
adc
mov
xor
add
dec
pop
mov
pop
xchg
mov
xor
add
repz
mov
xor
test
repz
out
into
jge
sbb
cmpsl
cmp
inc
aad
jmp
imul
jno
mov
ljmp
or
or
xor
push
fbld
mov
aad
stos
mov
cmpsb
popa
mov
flds
mov
mov
loopne
sub
stc
xchg
or
mov
shr
push
gs
insb
jge
dec
cmpsb
cld
jbe
mov
dec
adc
inc
jmp
jmp
imul
outsb
mov
lret
out
and
xchg
shlb
daa
lods
sub
lret
fstl
pop
fwait
mov
jg
inc
sbb
inc
add
outsb
adc
rol
psubsw
loop
lds
sbb
repnz
sub
sub
xor
ret
xchg
test
cmp
mov
jg
jne
jge
enter
mov
daa
mov
mov
repz
pop
cmpsb
scas
pop
inc
rcll
add
int3
adc
or
leave
jecxz
inc
mov
mov
out
push
sti
mov
filds
sbb
dec
ror
xchg
ror
int3
pop
movsb
movsl
les
sub
mov
lods
xchg
adc
shl
mov
andb
icebp
sub
xchg
pop
mov
inc
mov
pop
insb
sbb
cmp
mov
dec
sti
js
adc
pop
ret
test
cmpsl
js
dec
es
je
addb
scas
dec
mov
movsl
xchg
jmp
out
pushf
jnp
lds
stc
clc
mov
ret
or
lidtl
test
inc
push
leave
push
cmpsl
pop
nop
add
push
jp
gs
cld
hlt
adc
iret
test
add
cmpsl
dec
test
pop
jle
jbe
dec
xchg
push
lret
mov
cmpsb
pop
mov
or
xor
inc
inc
cld
scas
inc
out
jg
pop
lods
mov
or
lods
pop
pop
xchg
cmc
push
je
shlb
lds
fmull
lea
sbb
sub
cmp
jno
jo
push
jb
push
mov
xchg
jge
jb
mov
ljmp
sbb
pusha
movsl
out
imul
dec
cs
xchg
sti
int3
lea
mov
lahf
fnstsw
cmpsl
outsl
scas
jbe
sub
aam
fisubrs
jle
subb
lret
das
mov
mov
or
push
cmc
pushf
and
shlb
loopne
and
fsubrs
or
jl
xchg
mov
xchg
insb
jmp
int3
in
hlt
or
xchg
push
jnp
nop
pop
and
mov
add
push
loopne
or
popa
ds
dec
daa
and
ficoms
dec
lock
das
mov
and
mov
adc
in
push
cld
mov
mov
or
das
mov
jge
cmp
sbb
mov
mov
jne
inc
js
pop
pop
pop
pushf
xor
and
xchg
xor
push
or
add
inc
addr16
dec
sub
xchg
fisubrl
inc
sbb
outsl
js
jne
in
outsl
dec
cld
add
sub
out
dec
push
mov
adcl
jno
movsb
jnp
fcmovne
pop
outsb
pusha
js
sub
idivl
into
inc
sub
adc
pop
inc
gs
mov
sti
inc
ljmp
sbb
cld
pushf
xlat
add
mov
adc
and
or
insb
lods
sbb
sub
push
xchg
lea
mov
mov
outsb
loopne
add
arpl
sahf
and
pop
mov
and
lret
insl
mov
fcmove
cli
fs
jp
sti
lock
ficompl
push
pop
pop
sysenter
idivl
pushf
sub
pushf
int
std
lods
mov
xor
mov
pop
xor
jge
mov
pop
stos
push
dec
aam
push
xchg
test
fwait
js
sub
sub
xor
xrelease
loope
sarb
dec
push
cmp
cmp
fcmovnu
dec
ret
lret
ret
data16
jnp
shrb
sti
xchg
pop
add
pop
push
filds
xlat
fadds
jae
inc
pop
scas
clc
inc
icebp
in
cmp
push
xchg
aam
dec
jl
outsb
adc
sbb
inc
test
std
mov
cmp
mul
lods
inc
jnp
adcl
pop
xor
mov
and
scas
and
cmp
or
aam
loopne
roll
push
iret
fldl
and
out
fistl
lret
shlb
shrb
xchg
pop
mov
fldl
cld
in
cmp
iret
jne
mov
cli
mov
icebp
stc
subb
mov
mov
xor
in
enter
fcomp
sub
jno
test
mov
scas
sbb
ja
pop
inc
push
adc
out
call
adc
loopne
jecxz
sarb
mov
js
movb
add
enter
scas
jae
mulb
mov
jmp
and
imul
das
pushf
repnz
jnp
ret
rcll
xchg
mov
or
inc
mov
adc
jno
xchg
clc
cmpsl
test
sbb
inc
jl
add
popf
pop
leave
inc
jae
and
loope
inc
mov
adc
xchg
mull
gs
jle
and
filds
and
out
xlat
push
pop
mov
mov
xchg
dec
jmp
fwait
stos
int
add
adc
push
mov
jae
lds
cmpb
mov
mov
pop
in
cmp
dec
sub
fcomi
xchg
in
mov
rclb
sub
popa
mov
push
mov
cmc
ret
cmc
es
aam
shll
sbb
stos
push
in
mov
xchg
enter
mov
test
cmp
mov
sub
mov
imul
test
mov
push
iret
lock
test
push
fiaddl
xor
push
pop
std
pop
cmp
gs
sub
repnz
fwait
lds
icebp
push
fnstenv
fistps
mov
and
enter
inc
sub
movsb
cld
cmp
push
popa
out
movsb
mov
aam
frstor
inc
mov
testb
dec
testl
mov
lret
push
cmp
addl
cmpsl
dec
rclb
push
pop
icebp
gs
jl
out
inc
jb
fcoms
into
aaa
jo
sbb
pushf
adc
cmp
imul
or
and
outsl
gs
push
jg
aad
gs
js
push
adc
out
mov
sbb
aaa
cmp
out
mov
aam
dec
lcall
mov
sub
adc
leave
sti
pushf
imul
sbb
iret
sbb
xlat
mov
jl
aaa
call
jb
jmp
arpl
jge,pt
rorb
sub
rorb
mov
pop
sbb
scas
jl,pn
insb
sbb
data16
das
xchg
in
push
shrb
jo
dec
movsb
fwait
or
cmp
cld
cld
loopne
sub
frstor
adcb
mov
inc
es
adc
rclb
mov
leave
mov
pop
and
add
fwait
stos
adc
mov
mov
adc
jmp
inc
cli
cmpsb
mov
fistpll
push
lret
scas
mov
rorb
sub
xchg
push
sub
in
xchg
dec
push
mov
pop
mov
out
xchg
or
popf
xor
inc
scas
test
adc
dec
cmc
rorl
and
lret
inc
outsb
bound
lret
outsl
fstp
push
push
jp
bound
ljmp
push
sub
xor
add
loop
mov
mov
cmp
or
add
mov
lea
sub
mov
js
ret
push
mov
and
xchg
push
cmp
inc
insl
movsl
js
addr16
xchg
pop
inc
aas
cmpsl
adc
adc
insb
push
mov
popa
and
mov
xlat
cmp
xor
enter
shll
sbb
fimull
mov
aam
mov
push
or
outsl
mov
movsb
pop
dec
pushf
ds
aad
xchg
insb
jecxz
in
mov
push
xor
lcall
lret
sbb
xchg
jl
leave
gs
cmp
shlb
mov
mov
pop
repnz
jp
jmp
shll
sbb
mov
shlb
rcrb
imul
dec
sub
inc
adc
adc
scas
jl
aaa
mov
xchg
sti
adc
or
loope
repz
xchg
ret
adc
test
aam
daa
mov
inc
adc
repnz
cltd
out
ss
add
jbe
test
mov
add
std
jbe
push
sarl
gs
cmp
test
push
test
addl
cmc
or
rorl
pop
pop
inc
and
lock
icebp
cmp
inc
fldl
cmpsl
add
out
mov
jns
imul
mov
test
insb
sahf
xchg
cmc
jnp
ret
sbb
sahf
mov
fildll
repz
lods
pop
inc
mov
shrb
mov
or
or
mov
sub
mov
jbe
jns
aad
int3
ret
xor
repz
insb
xchg
push
mov
jb
jno
xchg
push
dec
xchg
lea
test
shr
add
outsb
mov
xchg
pop
test
push
push
fstpt
adc
sub
fiaddl
xchg
out
outsl
cmpsb
cmc
test
iret
fs
fidivrs
jns
pop
inc
movaps
dec
mov
insl
xlat
out
arpl
jle
enter
add
loope
daa
xorl
push
sub
push
adc
mov
fcmovbe
xor
fsubrl
nop
arpl
and
adc
test
mov
push
flds
jl
adc
jl
test
sub
sub
mov
adc
sbb
or
xor
and
arpl
cs
xor
scas
inc
inc
ds
jae
jne
add
mov
add
insl
mov
mov
xchg
shrl
call
push
mov
sub
jno
xor
lcall
cwtl
call
gs
mov
push
scas
ljmp
movsl
psubsw
mov
jmp
cwtl
outsb
push
in
adc
lcall
enter
mov
push
repnz
jae
fwait
enter
fstpl
sbb
or
cmp
push
outsb
push
adc
daa
movsl
sub
xor
mov
lods
shll
push
pop
and
add
sub
movsb
leave
sub
xlat
mov
call
xchg
pop
lds
into
fwait
out
lock
mov
mov
daa
arpl
lfs
icebp
adc
inc
push
mov
jno
mov
sbb
lods
and
pop
ret
rcll
jge
fnstsw
mov
pop
cmpsb
je
clc
xor
clc
lds
jo
push
xchg
bound
ret
ret
andb
stos
sub
stos
cmp
cmp
add
adc
les
jl
subb
fnstenv
jmp
sub
icebp
into
lods
and
cmp
insb
iret
loop
sub
stos
mov
jnp
add
lods
xchg
mov
jl
sub
mov
cmpsb
mov
fmull
inc
data16
or
movsb
pop
ror
cltd
or
mov
cmp
xchg
mov
fwait
repnz
mov
lret
rcl
jg
ret
and
outsb
lret
inc
and
add
or
in
xor
jge
xor
ja
mov
xor
lods
int
xchg
mov
inc
jp
imul
repnz
and
mov
aaa
mov
loope
test
mov
and
jnp
cltd
pop
popf
dec
cmc
in
push
pop
test
lret
in
aas
xor
dec
inc
push
fildl
testb
adc
lahf
xchg
mov
cmpsl
pop
sarb
xchg
xchg
sub
pop
pop
cmp
aaa
clc
fs
in
xchg
xor
xchg
pop
add
fcom
cltd
divb
jmp
popf
inc
push
push
dec
inc
lods
xor
rcll
or
fisubrs
adc
mov
ret
fcompl
stos
mov
jae
add
dec
rclb
pop
xor
push
sbb
stc
out
inc
rcrl
das
pop
rclb
cmp
jnp
daa
scas
push
test
xchg
test
or
rcr
mov
push
sbb
fcoml
lahf
rcrl
sub
aad
iret
sub
jb
jecxz
mov
int
push
mov
and
inc
test
out
mov
iret
cwtl
cmp
aas
pusha
sub
dec
sub
push
dec
mov
call
sbb
out
adc
lods
mov
dec
imul
imul
cmp
cs
push
shlb
push
lret
insb
sbb
fldenv
ffreep
dec
std
fidivl
jp
adc
mov
fadd
out
shlb
or
loopne
dec
or
lahf
repnz
js
add
sti
arpl
jl
jp
jle
or
sarl
aam
loope
je
mov
or
stos
mov
mov
and
mov
add
leave
xorb
ror
inc
or
popf
dec
cmp
inc
pop
xchg
push
jmp
jae
cwtl
jmpw
std
push
mov
lods
sbb
fmulp
divl
sbb
outsl
scas
xor
xlat
int3
add
pop
fiadds
adc
add
add
sbb
jne
or
jge
mov
arpl
add
int3
daa
stc
add
fcoms
mov
xchg
pop
xchg
cli
mov
add
gs
popf
fdivl
pusha
ret
fnsave
sub
mov
mov
and
test
mov
mov
addr16
fistps
xor
xchg
das
pusha
cmp
loope
mov
movsl
dec
and
popa
fxch
xchg
hlt
pop
pop
push
ret
sti
call
push
fsubs
cltd
add
jne
adc
test
cmpsb
std
jb
xchg
cmc
rorb
les
jbe
test
outsb
insl
scas
cmpsl
xor
lret
stc
or
enter
leave
mov
into
outsl
dec
sbb
mov
imull
jmp
in
pop
xor
push
lahf
or
jge
push
jns
pop
pop
push
pop
sbb
mov
or
les
lods
jl
dec
hlt
divb
lahf
test
fldl
enter
gs
pop
and
and
push
xor
push
movsb
test
lcall
hlt
push
test
fcmove
jnp
mov
xor
mov
pop
and
ljmp
xchg
or
xchg
dec
popa
das
xchg
adcl
xchg
jg
lods
cmp
pop
out
pop
and
push
je
adc
dec
sarl
mov
lret
mov
mov
pusha
cmpsb
test
insl
notb
mov
shl
mov
out
sbb
je
mov
pop
iret
cwtl
hlt
stos
or
movups
faddp
push
subl
scas
adc
fadds
rcr
mov
insb
add
push
popf
push
jl
mov
pushf
nop
adc
add
bound
pop
mov
jle
jge
lahf
jbe
rcl
out
add
mov
test
inc
xchg
das
fidivs
mov
adc
cmp
xchg
pushf
and
ret
idivl
adc
pop
and
dec
aaa
dec
mov
pop
rcrb
es
outsl
fldcw
repnz
cs
push
pop
jp
jbe
stos
inc
dec
lock
cltd
adc
adc
lds
fxch
rcl
adc
add
movsb
add
cmp
sbb
pushf
push
mov
gs
inc
mov
es
fstl
add
les
outsb
or
xchg
and
insb
xchg
lahf
cmp
add
pushf
cmp
sbb
xchg
fwait
mov
imul
xor
or
add
hlt
ss
jp
dec
mov
sbb
inc
stos
inc
cmpsl
inc
push
loopne
sub
add
xor
push
daa
ds
mov
stos
sbb
push
notb
adc
inc
add
test
aas
lods
and
cltd
cmp
cli
xchg
mov
jle
pushf
xchg
inc
lds
not
xchg
jecxz
adc
cmp
xchg
les
daa
fs
js
notb
insl
jg
xor
mov
addr16
mov
xchg
in
and
fstps
insb
test
mov
xorb
jle
icebp
rol
inc
mov
push
dec
lcall
ss
adc
jb
xchg
inc
mov
or
scas
std
repnz
lret
xchg
icebp
xchg
xor
mov
ds
adc
data16
es
mov
mov
cmp
es
inc
mov
in
addr16
xor
movsl
mov
mov
xor
packssdw
bound
pushf
xlat
add
jnp
xchg
inc
sub
push
sbb
lock
aas
xchg
loop
push
imul
jmp
push
lea
add
fmull
sbb
stos
pop
pop
ljmp
inc
arpl
shl
pushf
mov
push
push
sub
pop
orl
sub
dec
mov
jle
dec
mov
subb
aaa
fidivl
dec
push
jmp
or
xchg
aam
xchg
es
sbb
push
repz
xchg
or
lret
and
sub
or
lret
cmp
add
stos
movsb
xchg
xor
mov
pop
jle
jle
lcall
filds
test
jge
push
iret
subb
mov
mov
jge
sarb
xchg
js
mov
push
test
dec
mov
int3
push
xchg
jbe
js
cmp
and
lret
jge
adc
add
cs
mov
jmp
notl
ja
mov
or
mov
jmp
xor
lea
jae
rdtsc
adc
movsl
push
test
xorb
mov
rcrb
sub
imul
orb
xchg
faddl
dec
cwtl
in
int
insl
fwait
mov
data16
cmp
incl
enter
gs
mov
dec
push
jne
mov
adc
and
pop
aad
out
stos
and
mov
pop
xor
sbb
mov
lds
xor
gs
mov
arpl
push
mov
test
sub
je
jmp
mov
push
stos
aam
mov
mov
lock
mov
inc
repnz
mov
aad
rcr
out
fnstenv
push
mov
fsub
jge
jnp
jno
lcall
out
inc
inc
mov
inc
cmpsl
outsl
xchg
addr16
xchg
dec
fidivs
pushf
bound
test
popa
mov
sbb
xor
lock
cmp
fldt
mov
or
push
sbb
dec
lods
dec
out
mov
add
or
adc
fdivl
sbb
xchg
push
bnd
out
les
outsb
out
xchg
add
out
xor
xor
mov
stc
and
fcos
sub
pop
adc
inc
repz
fistps
push
pop
mov
lret
stc
lds
rcr
dec
inc
mov
pushf
call
sbb
lods
das
js
fcomi
push
pop
ret
cld
es
xchg
sbb
jno
in
dec
xor
into
loope
inc
sbb
dec
repz
lods
insl
je
pushf
jae
inc
sbb
add
inc
xor
xor
out
pop
mov
dec
jo
cmp
stos
dec
xchg
lds
xorl
sahf
and
inc
dec
aas
sub
lock
xlat
jmp
movl
mov
cmc
sbb
in
xlat
dec
xor
and
lods
mov
add
sahf
cld
adc
gs
into
insl
shll
inc
fildll
push
fdivs
imul
orb
fistpll
clc
and
fistpll
push
add
fists
sub
sbb
inc
gs
sbb
mov
and
test
xchg
lahf
push
fists
cld
popf
andl
jne
filds
cmp
cwtl
ret
cli
stos
push
and
pop
lahf
sarb
test
pop
inc
adc
inc
and
mov
xchg
pushf
ss
je
sub
and
mov
mov
xor
sub
add
pop
call
cwtl
push
ja
faddl
lcall
push
fstps
int
mov
xchg
pop
sub
sub
pop
inc
nop
movsb
and
and
in
dec
outsb
pop
mov
adc
sub
add
push
ljmp
lret
dec
cmc
pop
inc
leave
test
aaa
loopne
cmpsl
es
int3
or
push
lahf
pop
mov
popf
orb
sub
sbb
pushf
cmp
fdivs
out
jp
sub
aam
ds
or
js
push
sbb
xor
mov
dec
aam
dec
mov
mov
loop
mov
pop
cs
adc
fldenv
mov
add
divl
cmp
xor
sbb
imul
xchg
cmp
fxch
lock
in
sbb
popa
je
test
stos
jg
xorl
lods
and
jno
addr16
sub
pop
add
mov
mov
mov
in
int
lds
mov
iret
sub
push
dec
cmp
lret
dec
jp
jae
pop
fcompl
adc
adc
cltd
fs
sub
lock
or
bound
jno
push
pop
js
inc
sbb
insb
cmp
or
mov
jl
std
xchg
shll
insl
push
aam
insb
aad
push
fs
jnp
ljmp
daa
bound
test
es
sub
ds
xchg
loop
insb
das
dec
lret
or
fcmovnbe
mov
xchg
rcl
mov
xor
lods
jmp
lahf
or
enter
add
fmuls
or
cmpsl
neg
rcr
pop
bound
mov
pop
xchg
gs
fimuls
insb
filds
loope
cmp
movsb
je
mov
mov
xchg
lret
adc
in
mov
ljmp
ljmp
xchg
popf
mov
cmc
mov
mov
test
mov
inc
sarl
dec
jbe
push
push
lcall
mov
xor
divl
add
stc
sbb
mov
fsubl
nop
xchg
pop
ds
mov
mov
mov
leave
int3
ja
lret
cmp
jbe
inc
pop
pop
adc
jae
xchg
insl
push
jae
mov
fnstsw
add
repz
and
rcr
push
sub
sbb
mov
lahf
sbb
in
mov
shl
rorl
and
orl
sbb
jmp
xor
lahf
pop
movsb
jg
std
jle
stos
xchg
mov
mov
outsl
sti
dec
cmc
jae
dec
fstl
jmp
test
js
fwait
or
outsl
pop
adc
lret
ds
mov
gs
sti
mov
add
ss
out
jl
ficomps
sub
loope
jbe
aas
movsl
int3
insl
cmp
add
je
mov
xor
add
aas
in
js
mov
add
aam
push
ja
xor
int
pop
pop
inc
lock
push
lret
pusha
pop
jno
and
hlt
cmpl
cmp
xchg
mov
fdivrs
sti
test
insb
test
or
mov
es
xor
jge
jl
into
or
adc
cwtl
sub
dec
pop
jb
movsb
in
fs
sahf
mov
dec
test
fiadds
mov
ljmp
inc
mov
cmp
push
inc
xchg
nop
jle
ja
mov
add
fiaddl
jge
pop
jno
cli
or
add
jbe
mov
xchg
cmpsb
insb
cmp
fisttpl
jno
sub
int3
and
pop
fcomps
fisttps
jo
dec
lea
dec
dec
cwtl
xchg
or
lock
xchg
jl
ds
cmp
into
mov
jb
push
test
inc
stos
add
mov
ljmp
sbb
fisttpll
push
lcall
ljmp
js
movsl
or
or
adc
cmpsb
xchg
pusha
mov
int3
sub
mov
jns
test
or
aaa
scas
scas
push
in
enter
adc
jo
clc
sub
add
repnz
jb
loop
mov
inc
sbb
and
subl
stc
sbb
test
stos
dec
inc
mov
fidivrl
shl
je,pt
mov
dec
fnsave
hlt
sarb
test
mov
imul
cmp
xchg
cmpsl
add
std
hlt
test
in
adc
and
adc
adc
pop
push
or
pop
out
push
inc
loopne
cmp
mov
lds
repnz
int
sbb
aad
out
stos
jae
notl
popa
cltd
mov
mul
sub
rol
test
adc
test
dec
inc
int
jne
repz
mov
pop
mov
frstor
add
mov
sbb
jo
sbb
pop
and
imul
icebp
mov
shl
push
or
popf
or
lods
daa
js
mov
sbb
lret
scas
push
imul
addr16
cmp
lock
jp
in
xchg
gs
jmp
fiadds
jl
jecxz
mov
mov
testl
or
outsl
and
stc
xchg
push
dec
sbb
sbb
xlat
bound
inc
or
mov
rcll
mov
test
adc
sbb
sbb
push
mov
or
inc
out
xchg
mov
or
icebp
addb
repnz
hlt
ret
inc
sahf
xchg
fisttpl
in
movsb
ss
xchg
insb
mov
aas
mov
and
adc
pushf
jo
cmp
pop
push
pop
sbb
stos
push
fsub
test
mov
jmp
cmp
out
mov
fsubs
ficoml
jbe
fcompl
dec
divl
stc
cltd
pop
es
bound
xchg
leave
out
cmc
std
mov
push
inc
dec
dec
adc
jle
int3
shlb
aam
mov
push
push
xchg
das
std
iret
mov
imul
jp
cmc
cmp
or
lcall
cmp
int3
bound
mov
sub
sbb
jnp
loop
loop
mov
insl
aaa
mov
dec
mov
outsl
jmp
popf
hlt
pop
cs
lods
pop
ret
cmp
notl
in
sub
cmp
adc
mov
out
popf
mov
jo
add
data16
xchg
mov
mov
fisttpll
addb
xchg
scas
mov
aad
mulb
pop
sub
push
mov
and
repz
xor
outsb
push
sub
pop
stos
test
cwtl
pop
xchg
nop
sbb
out
mov
and
cmp
cmp
add
lahf
loope
push
nop
addl
fldt
sub
push
inc
inc
in
out
xchg
lds
inc
rclb
mov
and
jmp
shrb
in
sbb
fidivrl
mov
cwtl
cli
lods
js
fadd
push
loope
xchg
repz
and
xchg
leave
xor
jge
daa
lcall
out
push
enter
dec
out
mov
cmp
xchg
test
repnz
adc
inc
in
jecxz,pt
inc
fcomp
xor
out
mov
punpcklwd
push
js
sbb
xchg
hlt
pop
enter
jns
sahf
out
imul
adc
cmp
stos
ror
mov
push
or
imul
or
fsubrl
mov
mov
or
pop
ret
dec
pop
in
mov
scas
test
negb
lods
ds
jecxz
fdivrl
mov
cmp
dec
sbb
add
mov
cmp
jmp
add
pop
pop
or
pop
mov
sahf
fisubrs
out
sbb
lea
jmp
xor
add
out
xor
mov
mov
dec
movsb
push
lods
lret
push
test
add
lahf
shlb
imul
cmpsb
adc
adc
out
aam
cmp
aam
stos
xchg
sbb
xor
cld
shrl
imul
test
jne
out
cwtl
icebp
and
aaa
stos
cs
push
sub
jnp
popa
test
pop
pop
and
test
fstpt
flds
lea
and
jb
pop
mov
or
sbb
and
sbb
jp
pushf
repnz
or
lea
lea
in
rolb
fmull
mov
ja
pop
xchg
sub
inc
inc
je
fsubr
icebp
add
rcrb
xchg
mov
inc
xchg
sbb
fadds
push
fstpt
mov
arpl
ss
pop
add
lret
jb
mov
cltd
pop
push
pop
pop
mov
push
mov
lret
jo
imul
out
inc
push
inc
and
lods
pop
pop
mov
sti
push
je
movsl
dec
xchg
cld
test
ds
add
loope
adc
pop
in
pop
in
inc
xchg
xchg
xlat
push
jb
cmp
add
dec
add
scas
movb
push
and
aas
mov
ja
sub
adc
lods
scas
mov
mov
xchg
add
sub
movsl
pop
ljmp
cmc
lahf
cmp
cmp
adc
shlb
scas
sub
scas
addr16
push
adc
movsl
lcall
jmp
call
xor
cmp
rol
ljmp
and
mov
jne
sub
rcll
sub
les
mov
test
xchg
adc
test
movsb
rcrb
das
ret
jns
sub
jae
mov
fldl
dec
nop
js
shr
lds
test
outsb
arpl
pop
ficompl
les
in
pop
fldcw
or
stos
in
cmp
cltd
push
jbe
loopne
repnz
sbb
fisubl
xchg
mov
scas
dec
add
xchg
jmp
dec
subb
push
mov
mov
mov
ficompl
xor
adc
jne
pop
inc
lahf
inc
push
adc
pop
das
movsb
imul
jae
frstpm(287
les
ss
gs
pop
stc
shlb
sahf
mov
scas
pop
fisttpl
pop
inc
pop
dec
jo
xor
ja
out
cmpsb
lret
roll
pop
sbb
sub
repz
xchg
xchg
ja
mov
pop
sti
pop
add
jbe
adc
jb
mov
hlt
sub
jmp
pop
add
lods
idivb
ja
je
mov
cmc
pusha
pop
sub
clc
cmp
js
test
shr
loop
imul
imul
pop
outsl
pop
iret
jno
adc
stos
cltd
mov
push
jns
pop
jecxz
xchg
jnp
mov
or
call
cmp
ljmpw
adc
adc
fildll
movsl
push
lock
outsb
jns
sbb
push
mov
int3
xchg
or
enter
push
jbe
add
mov
hlt
adc
or
pop
or
adc
sub
aaa
push
push
aas
and
ret
mov
push
insb
test
jecxz
push
push
jnp
cmp
jns
dec
stos
nop
xorl
or
stos
ss
into
shlb
pop
pusha
jecxz
xor
cmp
add
xchg
stc
cs
push
mov
adc
sub
sub
aas
inc
fstpt
mov
adcl
xchg
inc
inc
ss
fwait
addb
xchg
imul
sub
adc
into
mov
out
mov
push
fwait
add
dec
inc
sub
add
vmwrite
loop
xor
rorb
add
mov
fdivl
cmp
fdivrl
push
pop
fcmovb
jl
xor
and
xor
dec
xor
mov
idivb
test
idivl
mov
sbb
pop
imul
jg
lcall
or
pop
mov
mov
xor
arpl
jl
in
testb
cli
std
cmp
xchg
mov
ret
adc
push
inc
dec
jne
dec
testl
ret
and
std
std
or
out
dec
dec
adc
lret
shll
rcrl
inc
gs
xor
insb
pusha
mov
mov
popa
hlt
push
mov
push
cmpsb
dec
nop
mov
sahf
and
sbb
pop
dec
xchg
mov
cmp
or
xor
mov
rolb
fadds
or
inc
inc
pop
cmp
repz
xor
mov
xchg
jmp
orl
pop
ss
push
mov
add
loopne
or
or
ret
insl
add
lret
sbb
sbb
ret
xchg
jns
dec
cmc
into
jle
sbb
js
inc
pop
ljmp
testl
or
mov
call
aas
lds
nop
add
or
das
jno
cmp
xor
scas
fmull
rol
bound
pop
mov
push
inc
mov
lods
es
lret
dec
ljmp
xor
faddl
int3
cwtl
enter
sub
fwait
push
stos
jae
fcmovbe
test
sarb
add
inc
int
lock
push
xlat
loop
popa
jge
or
ja
in
inc
jp
inc
dec
sub
or
les
scas
push
xchg
cwtl
mov
pop
out
shl
mov
sar
aaa
mov
fs
les
nop
push
imul
pop
imul
outsl
jns
dec
dec
orb
xor
imul
test
cmpsl
int
and
jecxz
shrl
jns
out
std
or
lret
mov
inc
inc
fadd
cmp
pop
test
inc
pop
xchg
sbb
mov
pop
call
bound
push
mov
push
jo
cli
xor
popf
fidivs
inc
sub
push
inc
pop
and
add
in
pop
pushf
mov
pop
mov
pop
bound
in
mov
jmp
sub
cmp
ja
out
mov
mov
daa
jp
dec
outsl
jnp
add
cmpsl
cmp
loopne
lcall
insb
lcall
dec
jmp
adc
or
sub
scas
mov
loopne,pt
iret
jae
sahf
iret
in
mov
pop
aas
ret
es
mov
push
mov
or
inc
or
or
movb
or
shll
mov
push
xor
arpl
lret
fcoml
mov
nop
test
jbe
test
in
sub
mov
dec
xchg
nop
fstl
adc
jg
mov
or
and
repnz
sub
mov
mov
pop
arpl
test
dec
testb
idivl
xchg
fbstp
ja
push
xchg
gs
or
pop
je
adc
fdivrs
pusha
icebp
clc
push
sti
fs
xor
icebp
fwait
cmp
cmp
sbb
mov
jecxz
fisttpl
mov
pop
gs
arpl
divb
imull
and
ret
repnz
in
scas
test
test
icebp
jno
jg
sub
mov
push
push
add
jns
xchg
dec
push
add
mov
jge
dec
jns,pt
inc
or
xor
pop
adc
mov
cmp
rcr
pop
push
sub
jns
mov
cwtl
hlt
adc
jno
xchg
mov
xor
or
push
lock
arpl
pop
push
outsl
shlb
les
jge
std
decl
addr16
sbb
xlat
cli
and
lods
fldcw
xor
fldt
loope
sbb
aaa
movsb
xor
pop
out
insl
cmc
mov
rorl
movsb
std
or
in
push
jb
pop
fcmovnbe
mov
mov
inc
mov
adc
div
push
or
movsb
testb
sub
mov
cmp
sub
jbe
lods
mov
sub
cmp
mov
or
stos
sub
pushf
xchg
lock
stos
mov
jb
dec
iret
dec
xchg
mov
push
adc
movsl
inc
insb
pop
pop
fcoml
outsl
dec
add
push
lods
pop
xor
dec
lahf
pop
aam
xlat
popf
fwait
leave
outsb
jmp
jg
sbb
push
ja
pop
pop
and
inc
xlat
pushf
repnz
push
push
dec
cmpl
lret
clc
enter
adc
sbb
jmp
pop
cwtl
jae
jl
xor
inc
test
ljmp
les
add
mov
js
nop
push
jmpw
pushf
imul
xchg
mov
push
into
add
jle
mulb
mov
and
aam
test
sbb
iret
xchg
inc
cli
jl
push
test
fisubl
mov
mov
jg
ret
cmp
or
pop
pusha
push
stc
daa
bound
testb
xor
xchg
cli
cmp
xchg
idivl
loopne
dec
leave
or
sbb
js
sbb
mov
roll
cld
aaa
add
mov
mov
xor
loop
fdivr
push
pop
adc
ljmp
pop
scas
ss
jnp
je
fs
ret
xchg
test
test
ds
daa
fdivrs
sbb
into
aad
adc
sbb
pop
adc
cs
xchg
ficompl
aam
pop
clc
rclb
inc
and
jnp
jg
cli
out
mov
push
icebp
mov
stos
fistps
dec
sub
dec
rorl
shll
add
push
push
and
loop
std
push
stos
mov
add
mov
into
jo
pop
cmp
fisubrl
mov
out
lods
nop
stos
out
das
jl
or
in
in
cmpsl
mov
fisubs
pop
mov
pusha
das
mov
sub
test
add
pop
xchg
int3
sbb
rcrb
rcl
mov
sub
loopne
mov
test
and
mov
mov
in
lods
mov
pop
inc
mov
repnz
fwait
add
in
lret
cli
mov
lret
mov
das
push
jae
mov
mov
bswap
fwait
pusha
inc
sbb
scas
fcompl
lahf
fcom
mov
out
push
dec
icebp
inc
sub
jecxz
fwait
cwtl
mov
jle
add
sarb
xor
push
xor
arpl
pop
in
lahf
xor
push
rcrl
subl
mov
cld
xchg
push
into
jge
xchg
cmp
xchg
jp
daa
add
ficompl
nop
add
loope
push
stos
cmp
pop
push
jae
mov
lahf
xchg
pop
xchg
lods
test
pop
push
sarl
mov
aam
arpl
add
scas
mov
insl
scas
mov
aad
or
xor
adc
test
pop
push
out
insl
ret
idivb
repnz
dec
push
push
jae
inc
out
mov
sub
inc
popa
mov
adc
inc
xchg
js
cmp
jg
outsb
adc
stos
fstpt
cltd
pop
out
subb
fld
ret
jge
in
shrb
xor
imul
or
inc
dec
jmp
dec
les
push
rcll
xchg
xchg
cli
hlt
jne
data16
xor
ja
scas
fs
pusha
mov
cld
ljmp
inc
fldenv
jge
xchg
sti
xor
shlb
inc
mov
nop
lea
xor
pop
jecxz
inc
sub
repz
lahf
adc
adc
pop
dec
push
mov
fidivrs
or
je
scas
sbb
mov
movsl
or
leave
dec
mov
shrl
lock
leave
test
js
call
jne
dec
push
ja
pop
nop
xchg
popa
cmp
adc
adc
adc
mov
ss
push
int
sbb
jne
aaa
xor
mov
out
and
mov
out
inc
sbbb
gs
repz
bound
push
add
aad
cmp
addl
push
cli
int3
sbb
xchg
test
xor
test
mov
jnp
enter
lret
cmp
sbb
rorb
push
fwait
in
fs
xor
mov
pop
lods
add
into
into
leave
lret
fisttps
and
mov
shll
loopne
outsb
xor
insb
leave
mov
pop
mov
mov
aam
push
aas
adc
sbb
mov
mov
stos
ret
lahf
pop
fcom
push
mov
jo
repz
mov
enter
pop
outsb
ljmp
shlb
loope
inc
jb
xlat
cs
das
jae
rcl
dec
rolb
andb
imul
loope
loop
sbb
cmpsl
loope
sub
or
jl
mov
shl
fidivrl
pop
test
call
cmpb
mov
icebp
dec
test
into
imul
aas
shrb
enter
adc
sbb
pop
push
movsl
loopne
insl
bound
mov
popa
lahf
pop
shl
cli
push
pop
nop
pop
cmp
push
dec
rep
cmpsl
push
inc
in
mov
mov
aas
cwtl
filds
enter
jge
movsl
shlb
cmp
pop
rcrb
xor
popa
cmp
je
into
xchg
xor
insl
iret
out
jge
and
dec
js
and
inc
xchg
std
cmp
add
xchg
adc
sbb
imulb
cwtl
jne
rorb
push
mov
adc
aam
movsb
aad
jp
and
mov
xchg
cmpl
sub
jns
shll
jg
jno
xor
jge
xor
xor
dec
stc
add
mov
js
kunpckbw
fnstenv
cmp
cwtl
roll
push
out
pop
adc
fcoml
xor
adc
push
pop
jmp
add
mov
lret
sti
jo
lret
dec
lret
pop
xlat
jl
xchg
or
push
iret
daa
cs
add
ds
mov
imul
add
cli
in
aaa
fildll
data16
sbb
and
loope
ja
adc
cmpsb
sub
sub
or
stos
int3
fwait
pop
out
ja
out
enter
imul
insb
mov
pop
lods
cmc
insl
outsl
insl
xor
nop
iret
dec
daa
xlat
adc
ljmp
mov
in
xchg
xchg
pop
push
inc
mov
inc
cmpsl
or
xor
in
aas
imul
sub
lods
nop
jns
push
sbb
inc
xlat
int3
outsw
insl
shl
leave
js
push
cs
and
out
xlat
pop
iret
xor
call
xchg
cmp
xor
dec
mov
jno
rcrl
test
pop
xchg
add
pop
cmc
mov
int3
sarb
sbb
mov
push
das
adc
in
pop
cmp
pop
adc
push
sbb
add
ret
repz
out
fcmove
add
pusha
mov
f2xm1
push
test
push
xor
or
aas
addl
and
adc
xchg
jle
fldenv
lds
fildl
dec
xchg
cmp
pop
paddusw
or
adc
pushf
xor
cmc
call
fcmovb
int
or
dec
xor
and
and
jle
xor
out
daa
ljmp
sbb
push
insl
das
xor
cmp
dec
xchg
xor
sub
stos
in
jnp
jns
push
in
das
jbe
inc
hlt
dec
shll
or
mov
ss
loope
and
sbb
aad
fwait
push
cs
rorl
cwtl
xchg
fidivrs
loope
out
ljmp
in
cltd
mov
cmp
mov
cmc
xchg
dec
test
jae
icebp
push
bound
push
jbe
pop
test
popa
daa
scas
lods
cmp
mov
lret
mov
adc
inc
mov
dec
adc
sub
call
stos
jne
gs
sbb
psllq
add
push
scas
mov
aad
jno
adc
cmp
call
mov
and
dec
flds
inc
dec
cmp
ljmp
repz
jo
ret
inc
or
popa
xchg
insb
xor
je
clc
aad
fucomi
xor
and
xchg
or
rcr
lret
inc
sub
dec
dec
js
aad
jmp
imul
test
pop
and
jecxz
jno
cmpsl
mov
repz
adc
pushf
lds
jb
test
stos
into
and
data16
mov
pop
jae
adc
popf
in
add
out
mov
popa
mov
sub
leave
outsb
cmp
hlt
xchg
test
pop
hlt
sub
mov
in
jmp
push
mov
xchg
xchg
adc
push
cs
in
jae
mov
mov
push
ljmp
cs
push
test
test
sahf
icebp
push
pusha
push
jo
jg
and
mov
lods
jge
cmp
pop
repnz
call
aam
add
roll
push
fsubrl
ljmp
fwait
mov
jno
sbb
pop
repnz
das
sub
mov
cld
add
xchg
lea
int3
fcoms
rol
out
xor
mov
scas
mov
push
inc
xorb
repz
mov
pop
lahf
push
pop
cmp
arpl
lods
rcrb
mov
imul
outsb
das
jb
je
aad
xchg
push
rorb
sbb
aas
lret
jp
movsl
fs
icebp
add
mulb
mov
or
ss
jne
add
push
mov
pop
inc
sub
jle
je
push
cltd
sahf
enter
cwtl
xchg
xchg
out
cmp
dec
out
dec
inc
push
shl
cwtl
sbb
clc
mov
xchg
mov
repz
test
push
scas
add
jne
roll
sbb
mov
es
sbb
stos
shlb
cld
fwait
adc
shlb
mov
cli
lods
sub
xchg
icebp
nop
addr16
aas
out
add
sbb
cmpsl
push
clc
popa
cmc
mov
cmp
loopne
inc
mov
dec
ja
leave
jae
scas
sarb
nop
adc
cli
sbb
push
mov
or
adc
pop
sub
lret
dec
rcrl
xor
test
adc
xrelease
sbb
jmp
les
dec
and
push
arpl
gs
xor
inc
pop
jne
lock
test
xchg
xchg
bound
imul
lret
stc
jmp
ds
gs
mov
es
lods
fsubrs
xorb
mov
insl
sbb
add
add
shll
sbb
and
sbb
dec
enter
mov
hlt
or
nop
or
cwtl
adc
lods
mov
sub
cmpsb
sahf
jg
out
pop
shr
fadds
loopne
jns
movsb
cmp
lret
pop
gs
xchg
movsb
int
mov
cmp
fists
push
mov
pop
dec
inc
add
mov
or
jmp
std
xor
mov
or
rcr
icebp
push
lods
rol
loope
mov
insl
shlb
cmpsl
std
repnz
push
sub
sbb
mov
jp
xor
cld
xchg
adc
inc
sbb
lods
ljmp
add
hlt
mov
jmp
pop
or
inc
or
xlat
inc
or
dec
clc
ja
mov
in
xor
lods
mov
xor
lds
lret
mov
call
lds
inc
add
xor
jne
inc
fldt
movsl
outsl
and
popa
popa
add
or
cmp
fstl
adc
jp
sub
cmp
hlt
testl
mov
js
leave
test
in
mov
jne
les
pop
or
scas
jo
sahf
hlt
out
loope
xchg
mov
dec
fcomps
mov
pusha
cmpsl
std
mov
and
push
adc
shrb
into
sarl
inc
pop
imul
jecxz
add
sub
and
inc
leave
ja
mov
scas
imulb
int3
loopne
dec
dec
xchg
push
scas
call
mov
mov
and
ja
stos
mov
cmp
and
popl
cmp
add
add
popf
imulb
xchg
bound
fmulp
aam
push
or
ljmp
mov
inc
aam
lcall
jno
data16
loop
jae
test
js
or
sub
xchg
int3
inc
mov
pop
sahf
in
sbb
in
and
out
cs
jnp
ja
mov
lahf
orb
ljmp
mov
and
hlt
adc
inc
pushf
xchg
andl
shl
daa
ss
dec
mov
stos
popaw
mov
shll
jb
ss
sbb
pop
popf
cmpb
insl
jmp
out
push
push
lock
push
scas
test
fstpl
adcl
mov
pop
sti
fsubl
adc
mov
cwtl
inc
sub
js
rorb
sub
fnstsw
xor
push
insl
aad
loope
lret
je
inc
mov
push
pop
cs
shl
jge
mov
in
aad
std
jle
pop
mov
insb
jns
movsl
setnp
dec
jmp
adc
or
jns
jo
ds
cmp
mov
add
popf
rorb
loop
bound
cmpsl
idivl
pop
mov
inc
jo
pop
sbb
jae
dec
dec
push
out
add
inc
jp
jecxz
scas
jle
lret
fnsave
push
daa
insb
aas
cmp
pop
mov
pop
out
push
sti
xchg
scas
sub
fdivrl
lret
pop
dec
out
sub
sahf
test
push
repnz
js
fbstp
test
or
outsl
cmp
and
sti
inc
test
push
rcrb
pop
lret
jg
stc
xor
jp
in
enter
jle
aam
cs
and
cmc
sub
adc
xchg
aaa
push
fildl
mov
mov
dec
xchg
fsubrp
mov
cmp
js
stc
push
cmpsb
and
iret
lcall
lds
lret
sbb
loop
loope
cli
clc
pop
ds
fwait
js
push
xchg
pop
outsb
or
and
test
insb
outsl
popf
push
xchg
sarl
rcl
push
inc
cmp
add
ds
std
sub
data16
aam
push
addl
shlb
enter
pop
xchg
push
push
je
adc
in
xchg
jecxz
popf
jnp
movsl
mov
mov
pusha
lret
or
jno
addr16
aam
dec
cs
scas
xchg
pop
xor
lahf
fs
enter
mov
push
xchg
xor
lock
lock
popf
mov
dec
jns
sub
add
ja
dec
sub
ds
adc
aam
xor
outsb
cmp
repnz
les
repz
cmpsb
ficoml
adcb
adc
pop
xor
push
mov
fwait
push
xor
bound
js
push
push
mov
mov
sti
mov
or
sarb
xor
cmc
dec
stos
cmpsl
inc
sub
push
jno
mov
cwtl
xchg
mov
ljmp
aad
pop
mov
test
push
mov
sbb
enter
push
sbb
imul
cmpb
mov
ja
shr
xchg
addr16
out
and
lock
pop
fwait
in
mov
repnz
imul
lock
mov
xor
outsb
xchg
xchg
outsl
fiaddl
push
adc
pop
ret
loop
bnd
fdivrp
sbb
leave
cmp
inc
inc
push
mov
gs
jge
stos
mov
mov
daa
movb
inc
jge
or
jb
adc
pushf
daa
cmp
cwtl
subl
out
shlb
lahf
or
repnz
sbb
movsb
xor
jne
test
xchg
lret
sbb
mov
add
imul
add
ror
aad
sarl
cmp
cmpps
cwtd
xlat
sub
dec
xor
addr16
insl
sub
xchg
add
pop
mov
clc
jns
pop
mov
push
mov
add
bound
out
ret
cmp
jmp
adc
repz
xor
sbb
gs
jb
push
inc
adc
es
xchg
stos
cmp
iret
jo
push
jecxz
scas
pop
repnz
fld
inc
push
popf
sarl
push
and
mov
or
adc
fwait
lret
pop
add
pop
sbb
or
into
inc
and
je
lcall
or
mov
repnz
xchg
mov
sbb
cmp
jl
call
stc
loope
aas
outsb
sarl
movsb
nop
inc
mov
jb
xor
andl
xor
aam
cmpsb
pop
je
in
lods
push
lds
pop
aaa
inc
dec
add
xlat
cmc
ss
cwtl
jns
jle
mov
repnz
dec
dec
je
out
cmc
fildll
adc
dec
aam
pop
scas
daa
sbb
js
pop
sarb
pop
pop
sbb
mov
cld
dec
fimuls
cli
cmp
ss
cwtl
push
jle
ret
xchg
pop
shll
insb
inc
mov
sbb
jge
insl
mov
data16
addr16
orb
dec
dec
fmuls
xchg
test
xor
and
sbb
dec
adc
rcrl
cltd
mov
cmp
out
out
mov
aas
jmp
jg
addl
or
pop
and
sub
inc
dec
fwait
mov
packssdw
mov
call
ds
and
test
and
mov
addr16
jmp
mov
mov
mov
cmp
sbb
fdivl
int3
lods
push
rorb
xchg
ss
fisubl
inc
adc
add
ret
inc
outsl
and
lcall
xchg
inc
xor
fwait
push
mov
fwait
push
lods
clc
outsl
push
xor
jl
dec
lea
outsb
xor
sbb
sub
mov
shlb
ljmp
pop
inc
add
xchg
pop
dec
cmpsl
loopne
outsl
jl
jnp
es
jge
sarl
pop
and
push
stos
xchg
jne
lods
mov
out
pop
inc
es
ja
mov
int3
xor
xchg
jbe
test
mov
aad
dec
mov
or
andb
mov
push
sbb
sti
xchg
out
xchg
inc
out
xchg
adc
pop
jbe
dec
or
dec
jnp
loopne
into
xchg
xor
push
mov
inc
cld
fisubl
xchg
mov
ja
adc
scas
int
sbb
pop
popf
push
enter
sbbb
adc
in
push
sarb
mov
enter
cmp
pusha
add
lods
into
ret
fisubrl
xor
mov
je
adc
out
jbe
xor
pop
xchg
jge
fwait
pop
xchg
adc
adc
jo
dec
fsub
fldl
cwtl
in
enter
push
pop
lcall
inc
sbb
sub
enter
das
mov
inc
inc
and
leave
aaa
pusha
push
out
pop
ror
fidivrs
or
repnz
mov
pop
dec
clc
into
sbbb
or
jg
or
repnz
or
sbb
fs
ljmp
pop
jno
mov
lods
mov
inc
mov
mov
xor
inc
mov
notl
or
push
lahf
jmp
stos
mov
daa
call
outsb
mov
adc
pop
mov
pop
popa
inc
adc
or
clc
lods
push
mov
insl
out
pop
cmpsb
inc
xor
dec
pop
ds
xchg
arpl
lds
xorl
loop
mov
ljmp
fdivr
add
js
mov
dec
mov
or
shl
lret
sahf
push
pusha
dec
push
dec
sti
push
mov
loop
mov
xchg
insb
cwtl
mov
icebp
inc
negl
push
ret
imul
mul
mov
jnp
xchg
push
ret
stc
int3
or
faddl
xchg
sbbb
test
shrb
adc
enter
xor
test
inc
mov
jmp
mov
mov
mov
ljmp
and
jns
mov
ja
in
lcall
push
dec
repnz
xchg
jmp
push
pop
shll
leave
xchg
cmpsb
lahf
iret
or
mov
in
and
adc
mov
fldcw
inc
mov
dec
sub
xchg
shlb
cmp
adc
jbe
cmp
leave
mov
loope
je
or
and
sub
movsb
je
pop
arpl
test
inc
in
test
cmp
adc
int
aas
sbb
mov
js
scas
std
add
cmc
dec
and
xor
xchg
pop
in
repz
movsb
ret
dec
xor
loop
xchg
lahf
mov
cs
mov
scas
repz
in
movsb
mov
call
pusha
jns
bnd
pop
jb
or
lcall
sbb
xor
or
xchg
rolb
lods
pop
xchg
rorl
xchg
mov
cmp
xor
mov
cmpsb
ret
mov
and
cmp
leave
add
lret
inc
sbb
push
ja
rorl
mov
dec
insl
cmp
sbb
mov
aad
cmp
push
jne
int3
push
and
dec
icebp
xchg
jbe
fisubrl
ljmp
out
insb
addr16
mov
fistl
mov
and
ljmp
pop
enter
insl
push
jnp
roll
mov
sbb
pop
cld
outsb
bound
xchg
sbb
push
imul
xor
or
inc
in
iret
pushf
popf
push
in
nop
mov
push
inc
xor
or
fs
xchg
add
xchg
inc
pop
popf
js
repnz
sub
mov
cltd
int3
cmp
lret
inc
dec
cmp
movsl
or
pop
push
sub
lret
es
nop
add
sbb
orl
je
push
jecxz
and
xor
sbb
lcall
scas
mov
push
add
repz
mov
roll
pushf
mov
xchg
stc
jno
cmp
stos
mov
fyl2xp1
mov
mov
mov
flds
arpl
xor
hlt
fistps
mov
clc
aad
lcall
dec
sub
fs
xor
jbe
lcall
sbb
aaa
or
fwait
sub
call
push
jl
addr16
jge
xchg
arpl
and
pop
clc
jp
jo
pop
mov
jb
sub
jle
pop
imul
or
ficoml
sarb
sti
xchg
mov
nop
popa
inc
mov
sbb
mov
imul
mov
loop
int
sub
jmp
cmpb
scas
pop
popa
mov
or
into
jo
sub
out
mov
jle
push
leave
add
daa
cli
lods
jb
push
mov
mov
cmpsl
pop
sti
push
test
mov
test
imul
adc
inc
lods
mov
xchg
mov
daa
pop
mov
push
roll
mov
pushf
ret
add
popf
and
fcmovne
xchg
or
mov
cwtl
mov
gs
fidivs
or
xor
mov
sbb
mov
cmp
cmp
inc
loopne
sbb
gs
ss
imul
enter
push
lahf
loope
lds
cmp
sub
xorb
mov
cmp
sbb
sbb
adcl
add
and
lret
push
and
das
push
jp
mov
fwait
jb
xlat
push
loopne
sub
icebp
cmp
andb
or
and
xchg
and
push
xchg
pop
jle
loop
outsl
cmpsl
hlt
or
in
loopne
into
inc
fidivs
sub
lret
push
push
pop
inc
pop
inc
mov
jne
mov
test
sbb
ds
fsubrl
rol
es
imul
cmp
sbb
mov
and
test
sbb
cmp
dec
gs
xor
sbb
and
add
rolb
leave
scas
mov
int3
stos
lahf
jge
scas
cmp
sub
data16
gs
inc
lds
arpl
lock
and
xor
pusha
xchg
jnp
pushf
pop
mov
cmp
ljmp
fildl
movsl
iret
std
sbbb
clc
lahf
and
inc
aam
dec
xor
pop
fsub
push
add
mov
dec
push
cli
pop
pusha
jmp
sub
inc
test
hlt
divl
mov
out
loopne
adcl
sub
xor
adc
scas
roll
inc
xor
imul
call
xchg
ss
pop
ds
les
xchg
push
call
lea
adc
or
mov
imul
add
clc
lcall
push
call
bound
xor
jnp
fcmovb
jo
inc
jnp
lea
shr
pusha
jae
xor
fwait
push
ret
push
lcall
outsl
jb
and
pop
and
push
cmp
popa
bound
jnp
mov
pop
out
mov
pushl
adc
in
out
std
outsb
call
xor
sub
dec
mov
pop
dec
push
dec
icebp
inc
negb
dec
test
out
push
stc
int
rorb
loope
cmpsl
mov
adc
sbb
jle
and
mov
pop
bnd
mov
mov
scas
les
dec
cmp
sti
fmull
jo
aad
scas
sub
fisubrs
imul
mov
ret
xor
movsb
mov
cmp
mov
jmp
test
and
fistpll
jg
iret
cmp
dec
sbb
inc
aam
sbb
mov
clc
movsb
js
mov
xor
stos
int
aad
call
add
ljmp
mov
jecxz
fisubrl
jmp
rcrl
sarb
sbb
add
pushw
pusha
adc
and
and
cmp
push
and
outsb
pop
mov
sti
push
or
insb
and
rol
pop
mov
cmp
jb
std
inc
adc
xchg
xchg
jge
lods
cmp
leave
or
movsl
xor
repz
out
cld
dec
add
cltd
bound
daa
jg
movsb
sbb
cmpsb
ljmp
add
push
mov
inc
jmp
push
sub
push
jmp
adc
js
loope
xchg
rorb
mov
mov
xchg
sbb
mov
cs
lret
sub
adc
inc
add
add
adc
dec
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
