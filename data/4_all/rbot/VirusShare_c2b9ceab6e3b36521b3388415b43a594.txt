call
in
sub
test
call
add
add
cld
call
add
xor
jmp
push
add
push
push
push
popa
sbb
jmp
rorb
cmp
je
adc
push
call
push
add
mov
or
adc
sub
loop
mov
add
push
inc
lock
movsb
sub
or
mov
xor
push
push
dec
mov
movb
and
pushf
jo
push
add
ljmp
jle
pop
mov
add
push
push
mov
jle
jns
push
bound
push
lods
je
decl
push
icebp
mov
pushf
push
push
push
push
sbb
inc
pusha
inc
push
inc
cli
pop
push
push
cmp
push
mov
pop
sbb
test
popf
outsb
cmp
enter
xor
add
pushl
pop
mov
lods
push
ficomps
movhps
mov
leave
dec
push
mov
cld
xchg
test
jmp
mov
sbb
loop
cmp
je
cmp
push
mov
incl
sarb
insb
imul
cmp
sbb
add
mov
pushl
loope
inc
sbb
popf
jne
jno
mov
xor
add
push
lds
push
lea
jmp
jmp
mov
pop
pop
pop
leave
ret
mov
cs
pop
nop
sbb
dec
inc
clc
lret
gs
mov
cwtl
or
stc
push
pusha
pushf
xlat
mov
push
aam
in
sbb
lcall
push
pop
and
add
sbb
out
push
mov
push
xor
movsl
nop
imul
ljmp
mov
or
inc
mov
cs
push
in
jmp
decl
insb
jmp
push
push
cmp
push
push
xchg
cmp
popf
mov
cmpsb
ljmp
adc
inc
out
push
adc
sub
ja
imul
out
jl
mov
decl
push
rcrl
jp
not
loopne
xor
imulb
insl
push
std
out
sbb
addr16
sbb
sti
pushl
call
ljmp
mov
add
sub
call
pushl
push
adc
push
je
sub
loopne
and
mov
ss
in
xchg
cld
inc
push
mov
loopne
or
jnp
mov
push
test
mov
loop
aaa
lds
mov
and
push
sbb
aaa
pop
jp
fsub
call
adc
test
lods
inc
mov
decl
imul
adc
ss
insl
inc
icebp
bound
xchg
hlt
jle
mov
jns
jg
mov
adc
daa
cmpsb
sub
adc
cmp
xchg
incl
in
lds
sbb
push
add
inc
rol
sti
mov
mov
into
cmp
icebp
fadds
jmp
iret
das
pop
push
xchg
sti
icebp
jae
decl
call
out
pop
mov
repnz
sbb
mov
imul
jg
movsb
adc
incb
lock
sahf
mov
orl
test
sbbb
or
out
or
jmp
fmul
pop
jmp
push
mov
clc
js
cld
call
mov
call
mov
push
outsb
mov
cvtdq2ps
inc
jb
fdivl
test
mov
push
jg
jle
push
jl,pt
test
add
cmpb
dec
data16
std
call
jmp
popf
push
push
push
and
pop
test
add
call
push
pop
jmp
sbb
add
xor
inc
popa
insl
jmp
jge
les
inc
aam
sbb
mov
pusha
push
pop
daa
mov
add
lret
lods
movsl
add
bsr
jmp
mov
rep
stos
mov
inc
data16
cmp
pop
mov
ds
jg
mov
les
shl
xchg
pushf
test
mov
imul
dec
ljmp
push
into
in
lds
in
jnp
into
jl
add
adc
call
decl
jno
sbb
nop
cmc
mov
ret
add
add
ret
sub
or
cli
sar
sub
je
ret
popa
fsubrp
add
jnp
loope
stos
neg
jbe
ljmp
loop
jbe
out
out
fnstsw
push
push
loope
call
cmc
fcoms
mov
pop
push
sbb
push
xor
sub
push
jne
pop
inc
pop
lock
add
std
pop
mov
and
mov
fbstp
fdivrs
clc
arpl
popa
mov
or
push
mov
pop
xor
jmp
fcmovnb
jo
loopne
push
out
inc
lds
dec
shl
out
and
insb
ds
decl
inc
mov
mov
inc
ficoms
test
ds
and
and
lcall
stc
cmp
add
int3
push
mov
adc
jns
add
loop
pop
clc
adc
ljmp
fldcw
jns
lock
pop
sub
cld
out
loope
pusha
cmp
push
jmp
xchg
jns
rorb
or
jo
movsl
ljmp
push
push
cmp
add
popa
out
loopne
std
pop
jmp
cltd
sub
ret
inc
outsb
add
add
call
and
sti
xor
mov
outsb
into
add
call
in
mov
cmp
mov
mov
push
lea
add
jbe
icebp
sahf
xchg
das
dec
mov
mov
push
push
in
mov
mov
call
mov
cmp
dec
cmp
mov
test
jmp
decl
test
push
imul
addl
cmp
enter
cmp
dec
decl
mov
roll
mov
push
jmp
aad
addr16
mov
push
popa
or
push
sub
cmp
vmulps
lcall
push
fwait
sub
inc
push
xor
cld
repz
movsl
sbb
les
push
clc
je
jmp
mov
in
lock
hlt
lcall
sbb
xor
dec
mov
cli
lcall
cmpl
jge
cmpb
sbb
imul
clc
inc
pop
mov
sub
and
xchg
loope
mov
sbb
push
jnp
lds
push
cmp
cmp
decl
xor
pop
xor
call
jmp
mov
xor
call
and
mov
jp
mov
inc
fdivrl
mov
pop
decl
xchg
lret
fisubrs
repz
or
push
shll
inc
into
jb
inc
push
xrelease
add
jmp
mov
in
popa
jp
add
push
jmp
push
ds
repz
push
pop
je
adc
push
pushf
mov
lock
in
lret
sub
das
dec
hlt
or
daa
add
daa
test
pushl
jge
cmp
out
push
jmp
adc
cmp
std
or
das
notb
dec
rclb
loopne
jne
mov
inc
rorb
cmp
mov
dec
insb
ja
adc
fmull
or
ret
pop
jg
lcall
movb
cli
push
jmp
hlt
dec
jno
cmpsb
movsl
or
incl
icebp
in
gs
into
ljmp
daa
add
in
std
pushl
popa
lods
inc
addr16
mov
or
and
add
lods
jg
decl
dec
xor
sub
ror
mov
fisttpll
inc
and
fsubrl
call
adc
int
dec
fbstp
pusha
ds
lea
xchg
mov
mulb
adc
adc
pushf
fcmovne
das
cmp
add
xor
cmp
decl
jae
mov
inc
jo
mov
arpl
xchg
sub
mov
push
xchg
outsb
std
mov
js,pt
enter
int
test
add
into
sbb
jae
ljmp
or
jmp
je
aas
sub
iret
in
mov
out
add
loop
adc
lcall
jmp
shrb
shll
or
test
or
bswap
cltd
xor
sbb
aam
jmp
jno
fmull
loopne
mov
lods
cmpl
dec
cld
insl
pushf
out
push
mov
push
push
lock
adc
push
mov
jg
pop
pop
or
xor
xor
xchg
bound
scas
push
call
jne
pushf
loop
clc
ret
sub
flds
xchg
stos
sbb
enter
dec
stc
or
adcl
out
or
push
aam
loope
icebp
add
push
push
fnstcw
xchg
negb
fnstcw
dec
push
cltd
popa
mov
jle
sub
add
push
ret
ljmp
cmp
icebp
jbe
out
hlt
pop
jg
in
jmp
ret
add
cwtl
xchg
pop
jb
call
jmp
sbb
out
jecxz
lock
fadd
clc
jl
test
clc
mov
sbb
ret
mov
mov
sub
cmp
mov
mov
xor
inc
insl
ds
popa
popl
clc
hlt
lcall
cld
pop
hlt
loop
or
test
mov
cmp
mov
sti
cwtl
jg
shrb
sbb
orl
sbbb
mov
jl
mov
sub
push
add
jg
pop
hlt
pop
add
pop
in
adc
insb
push
je
mov
adc
jmp
cmp
mov
imul
mov
jl
adc
mov
and
iret
inc
inc
push
jg
imul
and
insl
les
mov
lods
jecxz
jmp
rclb
cmovo
out
test
adc
jne
jae
outsl
leave
sub
mov
cltd
pop
xor
pop
cmp
das
std
push
jmp
lahf
sbb
shrl
push
jae
xlat
aas
xchg
jmp
inc
adc
add
inc
pop
inc
push
pop
inc
add
push
push
mov
or
ljmp
cli
jg
push
xor
cmpsl
jle
mov
cmp
jb
mov
cs
inc
and
pop
loopne
mov
arpl
xor
push
testl
pop
js
in
stc
xor
stos
push
jp
jle
mov
or
cmp
jne
jbe
ret
mov
mov
push
idivb
add
add
dec
inc
outsl
shlb
rcll
jmp
mull
pop
notl
add
pop
add
ljmp
das
inc
push
mov
daa
bnd
fcompl
fnstsw
jg
add
push
cld
lock
popw
mov
sbb
dec
int
call
xor
lock
push
mov
xchg
int
pop
ljmp
jp
mov
mov
mov
pusha
int
dec
fldt
cltd
and
stos
sub
nop
sahf
lods
sbb
movntps
add
pusha
rcll
or
outsl
xor
push
dec
in
inc
pop
xchg
pop
jne
or
shr
and
shl
push
js
mov
add
push
mov
cld
mov
aaa
adc
mov
push
cmp
cmp
lcall
lahf
mov
or
mov
iret
scas
push
fistpll
outsl
das
ja
sub
pusha
xor
test
int3
iret
aas
test
add
pop
sbb
lcall
and
aam
mov
rorl
and
and
mov
rorb
cmp
dec
and
sbb
jecxz
into
jns
repnz
repz
pushl
cmp
cli
mov
cli
xor
add
ret
add
pop
call
lods
adc
xchg
lods
out
xor
mov
popf
ret
hlt
xchg
addr16
outsb
inc
jmp
out
xchg
sarl
jmp
scas
push
out
mov
sahf
cmpsl
adc
lods
mov
in
adc
lods
cmp
scas
idivl
decl
jl
js
cmp
lcall
stos
dec
jbe
cmp
push
mov
pop
push
add
and
into
lcall
insl
aas
inc
sbb
push
xchg
icebp
xchg
les
mov
xchg
sbb
sbb
loope
out
mov
mov
push
rclb
shll
xchg
lcall
mov
daa
es
xchg
sbbb
stos
pushl
inc
call
lock
hlt
pop
pop
shlb
mov
push
inc
jg
xor
pusha
lcall
stos
in
loopne
mov
pushl
jb
push
sbbb
roll
push
jo
sub
out
sub
nop
pop
std
movsl
dec
cmp
sbb
and
push
call
cmpsl
cld
mov
out
cli
jno
add
or
inc
popf
je
jmp
adc
call
xchg
fwait
xchg
mov
cmp
ror
nop
movsb
fisttpl
popa
push
dec
loopne
mov
das
clc
or
jecxz
incb
dec
mov
cltd
lret
jmp
mov
into
sbbl
or
mov
shll
addl
mov
sbb
lahf
nop
not
mov
add
lcall
lahf
fwait
xor
jb
xor
loop
mull
sub
inc
scas
es
pop
test
sar
loope
pop
push
and
push
call
das
and
pop
or
mov
mov
jecxz
das
mov
lds
mov
push
mov
into
and
dec
xor
insb
lahf
pushf
dec
stc
std
lcall
add
divb
sbb
call
mov
andl
sbb
das
lock
ret
push
mov
mov
fcomps
ljmp
test
inc
sbb
sub
mov
js
je
and
mov
mov
dec
std
inc
mov
xchg
ret
leave
loope
pushf
les
or
pop
adc
aad
pushl
imul
inc
pop
divb
sbb
cli
fidivl
push
cld
xor
arpl
adc
push
mov
pop
xor
add
call
pushf
xor
imul
mov
andl
es
cmpsl
loopne
push
mov
inc
add
cmp
xor
jg
setge
lea
add
fabs
push
ja
adc
pop
sti
push
sti
ljmp
mov
inc
add
adc
and
sar
mov
add
xor
lcall
jl
jbe
lcall
xchg
jno
ss
addl
repz
sub
xchg
sub
inc
or
lock
adc
clc
jmp
inc
aad
push
cmp
fisttpll
out
mov
gs
jl
mov
test
testl
xchg
in
adc
jns
mov
dec
jle
ja
out
or
pop
push
aaa
out
xor
lahf
jmp
push
outsl
hlt
sahf
or
daa
or
add
pop
ret
sbb
jmp
in
pusha
fcmovb
jb
sub
pusha
imul
into
push
mov
sbb
movzwl
and
lcall
pop
popa
loope
or
push
in
mov
or
adc
and
enter
sbb
aaa
clc
lea
or
cmpsl
xchg
shl
pop
loopne
xchg
clc
push
mov
call
lds
shl
sbb
fcom
aad
pushf
mov
adc
push
jle
jl
loope
mov
pop
cld
movl
cmp
je
or
cmpsl
mov
loop
push
call
pop
ljmp
scas
or
leave
xor
cmp
add
lods
das
stos
fsubrs
pop
movsl
cmp
inc
push
xchg
inc
leave
hlt
shll
rcll
jge,pn
or
push
das
jae
mov
aam
pop
jns
outsl
inc
push
inc
sub
dec
sbb
mov
push
aad
std
fwait
pop
mov
sub
jo
call
aas
jecxz
xor
or
fnstenv
arpl
imul
in
mov
call
icebp
pushf
and
aas
sarb
les
rolb
lods
lds
sti
mov
sbb
sahf
add
push
dec
add
mov
loop
mov
out
out
out
stc
sbb
fisttpl
add
outsb
hlt
sub
or
xchg
mov
fwait
mov
push
repz
repz
mov
repnz
fsts
jl
ja
jno
fnstcw
dec
and
aad
decl
or
mov
push
mov
pop
mov
add
subb
aas
les
test
xchg
shll
push
mov
cs
or
inc
push
rol
mov
jg
hlt
std
cmp
mov
adc
fadds
push
ret
inc
mov
jle
aaa
clc
pop
cli
add
test
cmp
in
push
pop
in
inc
nop
cmpsl
adc
mov
aad
adc
push
sub
add
fdivr
sub
sbb
sbb
mov
neg
xchg
mov
fs
xlat
mov
push
xchg
pushl
dec
stc
add
outsb
push
xor
pop
test
test
fldt
add
mov
jmp
push
mov
mov
mov
pop
cmp
cmp
push
or
fildll
out
movsb
push
mov
push
sub
pop
mov
mov
cld
pop
jg
inc
lahf
sbb
inc
mov
push
cmp
and
xchg
xchg
push
sub
adc
imul
jno
mov
mov
sub
and
inc
scas
test
add
or
pop
sbb
jne
incl
aas
pop
add
cmpb
jns
imul
js
xchg
or
push
cmpsl
or
adc
loopne
mov
filds
or
xchg
pop
adc
jl
loope
mov
jae
pusha
ret
fstpl
cs
xchg
pushf
sub
ret
dec
mov
push
lcall
jb
mov
pop
movsb
enter
lock
call
insl
xchg
pusha
test
cmp
aam
jae
repnz
std
pushl
test
enter
add
jbe
cltd
addr16
mov
jb
jbe
incl
or
pop
repz
xchg
fsubrs
fcompl
jo
xchg
cmp
clc
call
sahf
sbb
push
mov
add
sbb
adc
add
pop
movsb
fwait
mov
sar
pop
ljmp
and
mov
bound
insb
push
add
mov
pop
or
loop
add
pop
sub
push
jno
jg
fbstp
inc
add
xchg
sbb
jns
sbb
cmp
idivl
cmpsb
in
or
out
jbe
pop
add
or
enter
fiaddl
out
shrl
dec
xor
mov
mov
cmpsb
sbb
inc
lret
add
popa
out
cmp
jmp
add
cmp
cmpb
jne
sbb
and
xchg
mov
inc
fildll
xlat
into
mov
dec
xchg
push
popf
push
sbb
sbb
push
mov
decl
loopne
subb
hlt
pop
push
or
pop
fs
pop
jns
push
inc
xchg
imul
daa
adc
sub
cmp
in
movb
push
jmp
cmp
mov
pop
inc
sbb
rolb
add
sub
add
sbb
pop
call
sahf
clc
adc
pop
pop
popf
cmpsb
pusha
mov
cmp
add
ds
je
call
sub
dec
jle
mov
pop
icebp
cmp
push
incl
sub
icebp
pop
mov
loope
ret
add
sbb
or
jg
sti
addl
inc
and
jne
mov
dec
popf
ds
jno
orl
push
in
test
jp
decb
cld
jne
xchg
adc
cmp
lods
xor
call
test
sub
bound
pop
in
aas
jge
stos
ret
mov
outsl
icebp
ljmp
in
xor
sub
mov
mov
jns
andl
or
sub
mov
hlt
mov
in
add
or
jno
xchg
or
sub
call
stc
cs
or
sub
pop
stc
sbb
add
es
sbb
lods
adc
mov
sbb
lock
cs
in
or
sar
hlt
imul
cli
mov
stos
push
pushf
aas
stc
sub
aad
and
rcr
cltd
lock
mov
decl
ja
add
pop
add
add
mov
push
das
mov
in
or
and
lock
mov
xchg
xchg
xor
iret
or
and
jg
mov
hlt
pop
jne
pushf
or
xor
xchg
pop
faddl
dec
aaa
push
add
pop
fwait
aas
incl
dec
xor
and
shlb
or
xchg
ja
inc
push
lock
sub
jae
adc
cmp
icebp
aam
push
daa
mov
fdivrp
in
popf
jbe
fstpt
jbe
test
cmp
lcall
add
js
jae
cltd
sbb
xor
sbb
mov
mov
mov
fs
mov
call
inc
jmp
lahf
sub
mov
inc
xor
mov
shll
add
imulb
aaa
inc
in
ja
push
mov
insb
and
mov
jl
test
jmp
std
jbe
sahf
bound
sarb
ret
mov
cmp
adc
lret
adc
je
dec
cli
subb
dec
inc
adc
xchg
sbb
pop
push
cmp
je
call
sbb
call
adc
pop
loope
sub
dec
insb
or
pop
pop
loopne
lcall
jge
and
sbb
jbe
add
add
jl
fs
mov
jg
ljmp
andl
pusha
cmp
sub
pop
or
add
or
sbb
mov
data16
mov
mov
push
icebp
aam
xor
push
lret
jmp
pop
call
ret
cli
and
pop
mov
fistps
call
int
sub
inc
jae
fcmovnu
test
jbe
xor
add
pushl
sbb
push
test
push
es
leave
mov
pushl
cmp
icebp
nop
sbb
jno
or
xchg
ret
push
sbb
lcall
insl
imul
adc
popf
lea
icebp
decl
call
pop
or
icebp
and
test
ljmp
inc
add
mov
es
fdivl
popa
sub
scas
cs
call
repz
or
ja
sbb
pusha
andb
sbb
xor
test
xor
xchg
fwait
pop
mov
call
and
sbb
push
sti
mov
xor
filds
testb
add
pop
orb
push
aas
inc
mov
jg
pop
push
ret
lds
pop
push
push
rcrl
push
jmp
or
xchg
decl
imulb
jp
xchg
fcoml
cmp
hlt
jecxz
sub
data16
adcb
cli
pop
mov
push
outsb
jo
jecxz
pop
and
sahf
sbb
loopne
dec
xchg
xor
not
into
aam
sarl
rolb
arpl
clc
call
pop
push
mov
dec
or
push
pushl
xor
hlt
pop
jge
mov
shl
shrl
cltd
pop
xchg
lock
jno
shl
or
lods
xor
add
loopne
xchg
jmp
xchg
add
imul
fisttpl
add
mov
ljmp
cmpl
shll
push
stc
jb
sub
test
adc
decl
pop
push
sub
ss
mov
fsubrl
sub
out
pop
lds
lods
test
lcall
lret
mov
lret
rcl
mov
es
dec
xlat
inc
in
es
pushl
rclb
stc
and
sub
rolb
push
mov
mov
dec
push
rcr
std
sbb
shll
xchg
add
cltd
cmp
ud0
mov
dec
push
clc
and
xor
add
sbb
jno
push
inc
mov
mov
push
idivb
ret
inc
xchg
sbb
mov
shr
ljmp
std
and
adc
hlt
test
repnz
mov
rcrb
call
lods
xchg
mov
je
xchg
das
mov
icebp
out
adc
pop
ss
lock
repz
loope
push
mov
hlt
leave
pushf
and
call
push
lea
add
cmp
lea
negb
mov
test
jmp
pop
inc
das
jne
in
jmp
pop
in
cld
pop
push
pop
into
negl
lret
lret
rolb
inc
xlat
pop
xchg
pop
subl
jecxz
movsl
cmp
push
push
out
and
mov
mov
out
jg
addr16
push
js
mov
outsb
jne
loopne
pushl
jmp
data16
ror
add
into
pushf
lret
cmc
sbb
fistpll
or
pop
push
cmp
xor
inc
jl
clc
in
pop
add
push
lock
ret
hlt
cld
lods
pushf
push
dec
clc
jns
lahf
pop
inc
cmp
lcall
loope
dec
lds
loop
lret
and
int
mov
pop
in
mov
je
push
in
cli
pushl
clc
pushl
lock
fsubrs
adc
xor
data16
popa
mov
jnp
or
pushl
add
test
jecxz
jne
ds
jge
or
fiaddl
sub
movsl
das
ljmp
pop
xor
cmp
sbbl
push
popf
ss
jecxz
std
shlb
das
std
xor
rcrb
jmp
or
jp
mov
cs
inc
div
mov
mov
arpl
adc
pop
xor
jns
add
sti
and
sbb
stos
loopne
mov
cmp
cwtl
pop
mov
push
cmp
lods
call
je
dec
sti
nop
stos
jne
sarl
lret
inc
cmpsl
add
sti
in
sbb
mov
sbb
clc
and
pop
cmp
sbb
decl
inc
jb
push
movsl
dec
iret
or
inc
out
xchg
xor
and
inc
fadds
mov
mov
aam
xchg
decl
push
rolb
pop
call
sahf
and
test
test
jmp
sub
jns
ss
lds
adc
jg
and
mov
sub
jecxz
shlb
mov
call
dec
das
inc
mov
sub
pop
pop
lret
sbb
aam
call
cli
mov
movsl
mov
orb
cs
loop
push
incl
les
xor
inc
les
aas
mov
xor
aaa
jns
or
cs
in
aas
in
jo
adc
popf
sub
das
aad
xchg
hlt
je
xorl
insl
cmp
mov
fcoms
testb
into
clc
jbe
pop
stos
cmp
incl
inc
mov
push
sub
xor
sub
cmp
daa
adc
xlat
jmp
incl
adc
imul
std
lock
lret
cmp
cmp
pop
push
dec
in
inc
std
xchg
mov
in
push
ret
hlt
fnsave
roll
sbb
mov
push
jg
aas
jbe
or
cmp
adc
sbb
ja
nop
ss
push
mov
xchg
or
lock
sub
pop
push
sub
or
arpl
and
nop
ljmp
xor
pop
aad
mov
cs
clc
stos
out
pop
or
lock
mov
outsl
adc
pop
jbe
adc
shr
sbb
test
lods
dec
dec
ss
cmp
jg
pop
push
xchg
fcmovb
lds
clc
out
out
ds
pop
mov
aas
mov
loope
shlb
decl
xchg
fisubrl
mov
stos
and
add
inc
push
push
shll
inc
mov
sub
ljmp
or
xchg
jp
mov
lcall
and
jo
outsl
push
ficoms
or
push
mov
fildl
mov
pop
add
add
aaa
cmc
dec
fucomp
cmp
add
sub
jno
jne
and
ljmp
add
cmpsl
sub
sub
out
adc
icebp
les
and
cmpps
popa
adc
clc
jno
or
sub
mov
aaa
test
push
fcomi
mov
rcll
dec
insb
movsb
xlat
sahf
or
repnz
pushl
mov
pop
pop
lahf
dec
mov
ret
mov
movsl
mov
lcall
fistpl
dec
fbld
cmc
adc
dec
sbb
lret
lret
mov
enter
outsb
pop
mov
pop
ljmp
push
nop
insl
sub
dec
adc
jnp
aaa
jg
inc
in
std
inc
and
in
cmp
push
add
cld
xchg
and
imul
or
or
cmc
icebp
jnp
push
in
dec
cmp
jns
lock
incl
insb
popf
jle
jle
lds
ss
fildl
pop
cmp
dec
mov
dec
cmp
dec
push
jp
xchg
cmpsb
push
mov
xor
jge
pop
xchg
ficomps
adc
fistl
add
mov
sub
fcmovbe
call
cmpsb
mov
mov
mov
adc
pop
aad
xor
mov
inc
xor
cmp
sar
enter
ret
sbb
add
adc
sahf
dec
xor
incl
push
jecxz
jae
cwtl
xchg
jne
rcrb
in
mov
add
push
bound
cld
mov
add
lret
add
inc
scas
add
push
pop
jb
pop
aaa
push
cmp
push
mov
cs
incl
fistl
or
adc
int3
fistpl
scas
xchg
jno
movb
inc
pop
fdivrp
outsl
hlt
lcall
test
pop
adc
cmp
jae
jae
push
jg
fs
jl
ret
daa
sti
add
pop
mov
fistl
dec
cs
lods
ljmp
icebp
test
lods
pop
push
outsl
std
push
stos
nop
lcall
stc
leave
in
fcompl
ds
add
sub
call
jno
icebp
hlt
ficomps
in
imul
lods
mov
test
lcall
inc
cmp
lods
lods
test
lods
mov
ret
stc
hlt
aad
hlt
jno
decl
imul
pop
mov
jbe
push
imul
mov
or
jb
aad
daa
outsl
clc
sub
sub
rcrl
push
push
mov
cmp
push
push
das
jl
pop
aam
insl
push
jns
lods
xchg
sbb
inc
xor
cmp
mov
clc
jmp
aam
mov
lods
aam
add
jge
sub
xchg
xchg
xchg
test
jecxz
cld
jg
lea
mov
enter
bnd
mov
pop
pop
lret
mov
jl
fisubrl
xchg
adc
call
pop
das
pop
adc
adc
idivb
jg
xchg
mov
decl
je
add
sub
sahf
lret
icebp
clc
inc
call
ret
in
pop
mov
addr16
xchg
mov
mov
inc
das
push
or
inc
jne
sti
cmp
mov
call
and
setns
mov
test
incl
js
inc
xchg
inc
ret
scas
and
test
sub
xchg
pop
sbb
adc
lcall
sbb
test
clc
push
mov
sar
mov
pop
push
mov
pop
hlt
imul
push
or
pop
shr
pop
not
push
jmp
push
clc
mov
mov
mov
lcall
ss
and
repnz
mov
pop
lahf
in
or
mov
test
jg
cli
xor
pop
push
cmpsb
pop
mov
mov
aaa
cli
in
push
movsb
mov
in
or
in
inc
pop
push
adc
jle
incl
xor
rcrl
fsubrs
sub
sbb
cmc
pop
scas
sub
xchg
mov
in
or
sub
lock
jg
mov
in
movsl
ss
sub
mov
mov
adc
sbb
mov
adc
or
andl
cmp
dec
cmc
call
rcl
hlt
out
push
and
sub
scas
aaa
sarb
stos
dec
mov
mov
ljmp
cli
sub
add
xor
cmp
push
sbb
pop
jl
sub
cmp
ljmp
mov
in
outsl
imul
imul
addr16
xlat
repnz
out
dec
cltd
sub
cld
xor
push
jmp
sbb
in
dec
mov
mov
or
cmpsl
push
or
mov
and
cld
add
mov
add
jnp
add
mov
push
mov
sub
mov
pop
or
pop
loop
pushl
add
orb
jmp
sub
sbb
sub
dec
sbb
cmp
ja
cli
fbstp
xchg
add
xor
pop
sbb
lds
adc
xorl
lret
sub
or
jnp
bound
leave
adc
mov
sub
xor
sbb
lock
test
call
aaa
sbb
jb
lcall
pop
int
xchg
sub
dec
dec
loop
jmp
mov
pop
pushf
movsl
sbb
sub
mov
sub
pop
push
push
cltd
in
sbb
call
in
mov
dec
cmp
or
add
negb
xchg
testb
cmp
sub
loopne
outsl
cmc
add
lret
lahf
cli
pop
insb
stc
gs
test
fucomip
lcall
dec
mov
add
lret
push
shr
pop
decl
push
outsb
fwait
pop
ds
sbb
xor
add
imul
popa
call
in
cld
xchg
js
mov
repnz
pushl
jp
rol
mov
and
aas
mov
jne
mov
cli
adc
lret
jg
pop
jp
adc
data16
lcall
jg
js
fimuls
mov
daa
jb
and
mov
das
in
and
out
xchg
cs
test
shll
add
jecxz
sbb
dec
mov
add
ds
jo
ljmp
outsl
pop
cltd
mov
jae
test
jbe
stos
cld
into
dec
mov
popf
cmp
inc
mov
fucomip
add
lds
add
push
bound
cli
outsb
xor
pop
call
decl
inc
cwtl
leave
and
xchg
or
xor
incl
mov
mov
cmp
lcall
std
es
mov
sbb
mov
push
adc
pop
loop
pushl
pop
xchg
jp
xchg
cmpsb
shlb
push
lret
xor
jg
dec
mov
mov
lea
ret
jle
stos
inc
and
add
testb
add
das
lock
cmp
add
orl
pop
dec
cmpsl
jg
inc
or
jmp
inc
xor
jne
push
bnd
inc
add
add
jae
or
sub
fucomip
push
mov
xchg
sub
push
xchg
push
sbb
or
add
pop
or
call
iret
scas
adc
loopne
xchg
or
add
je
cmpb
pop
jge
push
mov
cld
mul
mov
loopne
xor
imul
repz
jg
and
dec
das
movsl
cmpsl
jmp
icebp
push
gs
retw
fiadds
ljmp
fbld
sbb
jmp
sarl
dec
in
clc
loope
inc
xor
repnz
mov
fsubrs
daa
faddl
fisttpll
xchg
rcll
fdivrl
push
dec
push
sub
sbb
sub
adc
fidivs
and
cltd
aas
mov
add
incl
out
push
lock
and
push
rclb
xor
inc
mov
jmp
out
sbb
push
bound
push
cmpsb
mov
mov
ljmp
sub
pop
push
xchg
popf
inc
sahf
mov
and
push
int3
sarl
push
nop
std
pop
ljmp
dec
popf
dec
roll
cmc
lahf
add
fucomip
or
cmp
push
xor
imull
jbe
fs
pop
lcall
test
mov
sub
mov
incl
fdivs
fidivl
xchg
inc
pop
pop
lret
lock
mov
sbb
mov
clc
add
pop
pushl
add
call
out
mul
mov
aam
mov
lods
and
pop
or
pop
ds
lcall
xchg
test
idivl
mov
adc
or
xor
out
loop
movsl
fbld
xchg
adc
cmp
mov
stc
jae
call
xlat
push
cwtl
aad
push
add
jg
cmp
adc
cwtl
add
lods
jmp
inc
add
call
adc
jg
insb
xchg
push
or
hlt
andl
mov
pop
or
repz
imul
popf
decb
std
mov
and
faddl
js
push
pushf
js
or
jne
sahf
adc
sbb
mov
cmp
inc
mov
mov
sub
jg
lcall
outsb
rcrb
cmpsb
inc
mov
test
jns
aam
decl
xor
sbb
sbb
test
mov
int
jl
mov
mov
mov
xor
icebp
sbb
incl
lea
imul
test
lods
pop
jnp
push
push
mov
lret
ljmp
into
sahf
adc
or
cmp
das
mov
mov
aas
aam
sub
aaa
mov
call
cmc
es
and
sbb
add
dec
mov
inc
pop
pushl
push
cltd
dec
pop
and
jne
jl
push
jmp
lret
mov
push
push
outsb
popf
pop
fmuls
push
adc
ss
add
push
cli
aaa
pushl
mov
sub
ret
push
fs
cmpsb
or
mov
mov
aam
adc
loope
jle
mov
mov
xchg
cld
or
mov
mov
push
cmp
or
lea
mov
or
sub
call
decl
pop
mov
jo
xchg
je
xor
sahf
or
xchg
sbb
push
es
or
mov
xor
xchg
and
jmp
test
loopne
decl
push
nop
data16
sti
lea
imul
flds
lock
call
pop
mov
rcrl
pop
mov
add
les
pop
or
pop
xchg
hlt
add
clc
lock
inc
cmp
fisubs
hlt
mov
lds
add
movsb
ljmp
ljmp
sbb
cmp
or
aad
mov
or
jno
cld
loope
jne
insb
push
sar
jmp
cmp
dec
pop
hlt
or
sbb
shrb
jl
and
inc
xor
aam
std
mov
bound
aaa
xor
jne
add
cld
repz
cld
cmp
push
flds
push
repz
xor
scas
iret
xor
sub
fwait
lea
mov
sub
movsl
test
fdivs
pop
idivb
dec
cmp
mov
fwait
mov
fidivrs
push
and
mov
pop
pop
aam
movl
push
jp
jb
xchg
mov
pop
imul
sti
xchg
clc
push
cmpl
pop
je
lds
int3
pop
jmp
pop
inc
test
jnp
lea
sub
push
jecxz
je
hlt
xor
pop
cmp
jo
es
mov
incl
enter
inc
push
mov
jg
mov
xchg
push
mov
push
scas
mov
jge
subl
add
push
jne
push
xor
inc
push
pop
ljmp
inc
mov
out
test
out
mov
insb
daa
mov
call
inc
loopne
cmc
fcomps
jno
jge
insl
jecxz
or
mov
movsl
arpl
pop
call
jno
test
xchg
gs
and
cmp
push
jb
movsl
movsl
lds
in
call
mov
test
call
mov
lds
jbe
rorb
lcall
add
ds
fdivr
ljmp
std
cltd
mov
push
lock
dec
xchg
inc
pop
sbb
cmp
imul
xor
decl
cmpsl
adc
jl
dec
arpl
ljmp
cmp
dec
dec
lret
ret
jmp
sbb
dec
pop
xor
clc
pop
mov
pop
cwtl
imul
inc
jmp
popf
xor
icebp
sbb
es
imul
add
mov
pop
in
cltd
xor
pusha
inc
andb
aam
mov
push
mov
jb
sarb
add
ss
jb
mov
repz
data16
movsl
mov
decl
gs
mov
sub
xchg
jmp
mov
push
call
inc
dec
movsb
paddd
cld
xchg
lret
and
ja
fwait
mov
jmp
loope
jmp
sahf
fldt
inc
mov
in
in
or
testl
fsts
mov
mov
jne
xchg
pop
push
out
jnp
mov
rcr
loop
or
dec
jns
fisubl
popf
nop
fwait
call
push
push
push
dec
push
je
rcll
out
bound
scas
add
cmpb
push
push
xchg
mov
push
decl
rcrb
cmp
jmp
jo
push
inc
jg
jb
jmp
sahf
cmp
pop
cmp
lcall
sbb
insl
add
incl
call
insb
lds
jbe
in
xor
mov
xor
sub
jbe
fdivr
decl
pop
xchg
xor
xchg
outsl
pop
sub
outsl
adc
std
dec
test
sahf
push
add
pop
ja
mov
aam
cmp
pop
std
dec
fucom
mov
daa
popa
mov
cmp
adc
inc
incl
push
push
mov
cmp
jge
movzwl
push
loopne
sahf
pusha
pop
push
pop
cli
mov
je
je
sbb
dec
bound
sub
lea
xorb
cmpsl
cmp
movsb
pop
adc
lods
adc
push
adc
push
je
add
and
fildll
lcall
cmp
dec
mov
push
push
add
sbb
dec
jmp
xlat
xchg
jecxz
mov
pop
lods
lret
mov
or
call
or
push
push
frstor
ret
in
inc
loope
sbb
fwait
cmp
push
jo
xor
sub
lea
push
lock
jle
loop
jg
and
pop
mov
mov
fneni(8087
test
jmp
xor
movsl
stos
jg
add
cmpb
imul
cmp
push
jge
shrl
ljmp
and
sbb
jne
adc
ja
and
sub
push
std
jno
pop
jge
xchg
cmpsb
xor
in
and
cmp
mov
and
fwait
pop
call
pop
ljmp
sbb
add
push
cmp
mov
imul
cmp
dec
jg
mov
ss
movl
pop
jmp
jge
mov
cmpsb
aam
cmp
fdivs
test
ret
icebp
push
xchg
clc
movsl
inc
out
or
addb
or
pushl
movsb
cmp
cmc
add
push
xor
es
add
cld
das
icebp
push
cld
and
push
mov
push
xchg
cmp
or
shrl
cmp
pushl
sub
sbb
data16
xchg
sub
mov
pop
fisttpl
lock
cmp
call
filds
test
lds
mov
data16
sbb
fisttps
push
das
hlt
lods
mov
sub
mov
xor
mov
call
pop
cwtl
mov
repnz
adc
push
icebp
sti
loope
adc
add
and
sti
jmp
cmp
and
int3
cltd
and
inc
push
dec
dec
inc
jg
and
add
sti
das
push
sbb
inc
fmuls
das
cmc
decl
scas
jge
ret
mov
sbb
out
into
shl
fildl
jl
lea
sbb
shlb
dec
pop
fcmove
ja
lcall
cld
fcmovnbe
cmpl
rol
loopne
stc
inc
push
rolb
dec
idiv
ljmp
or
push
mov
rclb
sub
add
mov
dec
hlt
ljmp
fs
pusha
enter
inc
push
fisubrl
sub
mov
sub
sub
push
sbb
jbe
mul
sbb
pop
sti
xchg
call
push
lods
cmc
fs
xor
lea
or
ljmp
mov
push
jl
das
jno
mov
pushf
out
outsl
std
pushl
es
in
fwait
stos
xor
js
rolb
leave
cmp
dec
lods
mov
popa
popa
repnz
insl
jle
cmp
and
add
cltd
sbb
ljmp
fisubs
adc
push
ljmp
mov
pop
adc
sarl
incl
or
add
or
mov
xchg
das
add
dec
mov
add
lcall
fldl
outsb
aaa
fildll
adc
xchg
mov
clc
xsha1
cmpsb
or
adc
incl
sbbb
sub
pop
out
js
inc
imul
ljmp
aad
or
inc
push
pop
adc
adc
and
popa
pushl
sub
sub
rorb
push
mov
push
cs
adc
fmul
push
jge
dec
leave
mov
into
or
outsb
mov
xchg
dec
clc
jecxz
mov
jno
and
lret
sti
push
sbb
je
in
sub
sbb
jmp
shrb
dec
push
push
movsb
in
subl
jmp
clc
pop
add
pop
dec
push
hlt
pop
mov
shr
push
in
mov
jg
pushl
into
hlt
in
insb
and
jmp
les
cmp
mov
addr16
push
pop
inc
pop
mov
mov
inc
push
in
ds
lcall
ds
cld
inc
jge
cmpsb
ds
jp
lods
mov
jno
hlt
pop
dec
data16
lea
mov
cmp
fistps
stc
cld
insb
push
fisubl
cmpsl
jbe
lea
adc
std
outsl
cld
das
xchg
sbb
jbe
rorl
out
dec
jns
lcall
ret
push
push
out
sub
daa
mov
or
int3
lock
cld
adc
cld
mov
add
loop
aaa
jmp
jmp
test
pop
inc
nop
and
pop
lahf
clc
mov
mov
mov
aaa
movsl
xchg
inc
sbb
jmp
push
ljmp
and
ljmp
xor
popf
push
mov
jbe
push
pop
scas
ret
adc
adc
sar
call
jp
mov
leave
pop
xlat
jmp
cmp
fisttps
inc
mov
pop
inc
inc
decl
push
jno
xchg
lret
scas
pusha
mov
mov
test
je
inc
out
push
mov
das
cmc
add
movsl
and
fnstenv
ret
roll
sar
mov
cmp
inc
or
out
push
roll
not
pop
ret
es
fldt
push
cli
mov
jbe
cmpsb
xchg
pop
push
xor
gs
inc
inc
dec
loope
fiadds
arpl
shl
movsl
fucomip
lcall
sub
js
inc
mov
neg
dec
imul
or
pushl
rcrl
pop
insb
mov
out
mov
xor
stc
xchg
jp
adc
add
call
sub
adc
pop
sub
mov
or
sbb
call
lcall
sahf
daa
bound
push
and
mov
pop
sbb
imul
incl
imul
mov
jo
popl
jne
adc
and
jae
mov
cmp
sbb
sbb
fstpl
cmc
ss
xchg
outsb
mov
lods
outsb
push
clc
ljmp
outsb
push
adc
dec
mov
or
ljmp
std
gs
pop
sbb
sbb
adc
push
xor
mov
aaa
mov
dec
outsl
ret
das
cmp
add
push
popa
jg
outsl
jecxz
test
push
clc
jae
mov
out
rorl
jg
pushl
push
fsubrl
cmp
xlat
mov
adc
push
out
cwtl
sarb
shrb
lea
sahf
jge
adc
pop
arpl
push
ja
rclb
push
in
push
pop
mov
push
mov
sarb
cmp
adc
fpatan
shlb
loop
clc
mov
push
shlb
xchg
dec
flds
ja
mov
mov
outsl
je
test
out
and
pop
pop
movb
movsbl
mov
adc
stc
ds
inc
sub
xor
push
int3
idivl
lahf
decl
adcb
add
mov
push
push
adc
push
push
sub
ljmp
cmc
call
cld
inc
or
add
in
mov
aam
hlt
cmp
add
cld
push
in
loope
inc
cwtl
adc
dec
inc
cmpsb
adc
cmp
jne
push
push
loop
mov
push
aas
inc
push
mov
or
lea
inc
jg
jns
or
jmp
scas
imul
les
stc
push
mov
stc
push
mov
in
add
nop
lcall
adc
cmp
xchg
mov
cmp
jge
jge
jp
lcall
push
and
int3
pop
jbe
icebp
cmp
push
dec
loopne
je
mov
jno
jmp
adc
xchg
loope
cltd
add
jne
sbb
jns
pop
jecxz
incl
or
sub
aas
xchg
testb
add
mov
add
adc
movsb
loopne
add
or
jne
cmc
xchg
dec
cltd
in
jmp
es
daa
outsl
pop
pop
incl
and
ret
pusha
test
cs
push
and
push
xchg
push
or
mov
jp
sar
or
sbb
cmpsl
mov
mov
inc
push
mov
into
push
filds
or
add
jae
adc
and
cmp
icebp
incl
cmp
cld
inc
sbb
loop
stos
cs
daa
cmp
sub
and
jmp
push
or
push
call
xchg
fsubrs
lods
cmp
fistl
push
pop
xor
je
popf
je
arpl
shrb
jge
pop
jg
call
imul
movsb
dec
ret
lods
cwtl
lock
mov
lret
in
decl
lcall
aam
lods
jmp
and
aam
mov
cmpb
hlt
mov
push
xchg
jnp
push
jp
dec
ds
sub
loopne
test
imul
push
xchg
mov
pop
fwait
cmp
imul
std
push
lcall
nop
add
dec
mov
stos
xchg
mov
hlt
jns
pushl
inc
jecxz
or
ret
jge
xchg
and
jae
aas
insb
fxch
hlt
push
cmp
jg
enter
es
dec
loope
jo
sbb
mov
sbb
xlat
xor
cmp
mov
lds
or
and
faddl
and
push
mov
and
out
jae
stos
in
gs
fsubs
fmuls
push
fsub
push
enter
decl
xor
dec
jne
adc
xchg
test
sbb
sbb
stos
nop
shr
inc
int3
inc
call
adc
into
add
rcrb
rcrb
aam
addb
pop
push
or
mov
fmull
jmp
out
sub
cltd
mov
stc
push
sbb
push
mov
in
repnz
pop
jp
lcall
push
pop
incl
add
push
addr16
mov
cmp
ret
xchg
pop
rcrl
sbb
ljmp
clc
and
mov
fidivrl
inc
rolb
adc
incl
call
fs
xor
repnz
add
in
xchg
pushf
mov
mov
jg
sbb
push
mov
out
add
add
call
decl
pushw
ficomps
pop
mov
ljmp
push
jecxz
mov
das
clc
push
sbb
sbb
clc
pop
or
add
divb
mov
lret
pop
nop
xchg
es
jg
inc
mov
stos
dec
lret
vorps
stc
stc
adc
jo
jmp
into
mov
inc
push
mov
adc
lock
lods
jl
mov
pop
imul
cli
xchg
inc
addr16
sub
cs
or
inc
enter
outsb
inc
push
cmp
jg
adc
in
cld
decl
mov
aaa
jns
pop
inc
mov
mov
adc
std
sti
inc
mov
inc
jo
mov
enter
or
lret
je
cmp
int
lcall
dec
ljmp
or
mov
enter
add
ljmp
inc
cs
outsb
sarl
les
mov
loopne
cltd
idiv
nop
aam
xor
push
and
xor
in
inc
ret
movsb
xor
fdivr
mov
push
lea
decl
incl
adc
pushf
call
mov
orl
sahf
jae
outsl
cmc
dec
sarb
and
push
in
dec
test
sar
mov
rcrb
es
js
cmp
sahf
lahf
xor
push
data16
jecxz
aas
pop
cmp
ljmp
int3
in
mov
or
xchg
cltd
in
adc
imul
jmp
inc
call
mov
je
pop
jo
insb
sbb
pop
fs
mov
ficomps
sahf
push
inc
shlb
pushl
and
push
sub
cmp
jbe
push
pop
push
cmp
add
fiaddl
or
call
pusha
push
les
cmp
ja
mov
rcll
iret
dec
mov
and
insb
stos
add
jge
add
pop
in
add
jecxz
and
or
push
mov
xor
in
xor
add
je
jecxz
je
and
add
push
push
inc
xor
dec
imul
xor
ss
loopne
xchg
cli
sbb
fildll
xchg
sub
enter
or
bound
lcall
loope
or
mov
lea
pop
rorl
push
mov
pop
movsl
in
xchg
add
mov
push
loopne
push
fists
fwait
cmp
add
movsl
or
andb
adc
push
jns
adc
push
jp
ljmp
inc
insl
popa
sbb
add
pop
fs
cmp
ljmp
adc
mov
mov
cmc
mov
push
fisubrl
jg
fdivrl
shr
or
jno
push
pop
sbb
call
shl
push
xlat
adc
fcompl
push
pushl
cld
rclb
ja
sub
mov
and
cltd
adc
ljmp
addr16
mov
movsb
lret
adc
xlat
insl
and
loop
mov
dec
or
loop
ss
mov
cs
xor
pusha
sub
jle
adc
lcall
xor
add
prefetch
push
push
cmpsb
mov
arpl
adcl
xchg
mov
stc
pop
mov
and
in
adc
cmp
movsl
mov
and
push
fs
mov
inc
rclb
test
or
mov
or
shrb
push
mov
pop
shll
shlb
pushl
movb
adc
ret
in
mov
mov
inc
dec
add
jae
sbbb
jg
out
repnz
add
ds
and
dec
je
dec
ret
and
sbb
jno
loopne
movsl
jo
sub
cwtl
popf
loopne
mov
popf
js
or
subl
jg
decl
clc
jno
mov
xor
bound
bound
fcmovnbe
fcmovnu
repz
call
cltd
push
cwtl
add
call
xchg
sub
fdivr
and
xor
out
mov
hlt
addr16
addr16
incl
clc
sbb
dec
jno
mov
repnz
cmp
mov
pop
mov
mov
test
addb
leave
push
insl
xor
mov
lahf
push
push
push
fninit
es
push
dec
fbld
push
ss
push
loope
cs
dec
jae
aaa
clc
xchg
inc
xor
rcrb
push
push
mov
xchg
sbb
std
fnstsw
xchg
pop
push
push
test
pop
mov
sub
rol
cmpsl
adc
or
pop
call
adc
cmp
loop
push
outsb
popf
and
jo
add
sti
pushl
pop
mov
cmp
in
add
mov
das
lock
mov
mov
mov
push
repz
sti
test
andb
mov
testl
imul
nop
adc
imull
jo
pop
inc
fs
cmp
mov
add
loope
push
sbb
sbb
iret
scas
add
cmp
jne
movsl
mov
adcb
mov
and
mov
repz
loopne
test
lods
mov
dec
xorl
pusha
inc
lods
pop
clc
mov
neg
mov
fdivrs
std
jmp
decl
and
pop
js
test
jmp
cmp
fmuls
out
jg
gs
test
rcrl
shlb
rcll
sub
mov
rclb
movl
and
mov
call
out
jmp
add
jl
cld
fs
cwtl
pop
xor
ljmp
pusha
lcall
pop
dec
pop
popf
cli
sbb
pop
mov
ljmp
fs
inc
inc
mov
xor
int3
ss
cmp
ds
jle
stc
and
sub
cli
push
pop
mov
in
ljmp
push
or
sub
movsl
sub
das
sbb
push
dec
lret
orl
mov
in
loop
loopne
push
adc
call
adc
mov
jno
sbb
call
aaa
push
cmpb
cltd
or
mov
cmc
incl
inc
sbb
popa
mov
sbb
les
or
nop
ret
sbb
jg
jns
scas
rorl
bound
out
xor
push
push
lods
inc
push
pop
call
pop
repz
rorl
push
mov
xchg
sbb
aad
sub
pop
imul
ljmp
mov
imul
and
imul
arpl
sub
imul
add
jg
ljmp
pushf
and
shrb
add
adc
je
dec
cld
inc
sub
clc
push
xchg
stos
push
sub
adc
hlt
mov
or
fdivs
fucomp
mov
sub
mov
mov
mov
mov
pop
xchg
cmp
hlt
or
ret
and
incl
js
out
push
mov
adc
xor
addl
andl
sub
add
nop
adc
clc
pop
loop
out
shrb
xor
jmp
ljmp
sbb
in
inc
in
lcall
arpl
and
pop
mov
mov
jo
cwtl
jne
loopne
adc
mov
mov
jnp
cmp
les
pop
inc
and
add
scas
fsubs
adc
mov
arpl
push
push
and
cmpsb
xchg
or
cmp
call
call
push
and
xchg
std
mov
jnp
daa
sar
mov
mov
lea
sbb
pop
push
sbb
push
das
mov
dec
jle
sbb
sarb
mov
push
or
mov
std
rorl
addl
cmpw
add
or
xchg
aad
cmc
ljmp
loope
cmp
mov
daa
push
and
inc
xchg
and
ljmp
dec
or
xor
xorl
sahf
insb
loop
ret
into
jge
lods
js
jbe
lods
mov
mov
lret
stos
ret
cld
xchg
sbb
add
add
inc
mov
xorl
cwtl
out
into
insb
lods
inc
das
push
xchg
lcall
in
and
pop
sbb
and
pushf
cmpsl
outsb
xor
xchg
jg
adc
lcall
xchg
sub
dec
insl
inc
jo
pop
enter
incl
sbb
xchg
fcmove
xor
and
gs
in
in
mov
lods
fnstcw
push
test
jmp
lock
jg
pop
shll
dec
insl
inc
cmpl
shrb
xchg
jo
insb
je
hlt
xchg
pop
clc
incl
sbb
add
mov
mov
enter
mov
test
pop
es
repnz
inc
jae
popa
mov
push
jge
out
gs
jg
lods
mov
shll
cwtl
or
es
push
sbb
pop
fwait
fs
mov
shll
mov
sub
add
roll
jb
daa
jmp
xor
or
lcall
lcall
sbb
fs
inc
mov
and
decl
cmp
sub
xor
mov
cwtl
es
lcall
outsl
inc
sbb
mov
lds
add
jo
mov
das
icebp
lcall
movsl
cwtl
test
pop
or
loop
fisubl
ficomps
push
push
ljmp
andl
out
mov
fwait
ds
rcll
cmp
adc
push
andl
decl
jae
xchg
js
adc
pushl
andb
sarb
adc
jne
insb
add
add
push
cmp
les
call
cmp
push
gs
cmpsl
dec
das
push
inc
pop
loopne
sub
push
hlt
data16
xchg
gs
push
mov
clc
lods
pop
in
loop
lret
pop
add
cmc
xchg
cli
fbstp
pop
mov
clc
xorl
add
ret
sub
xor
cmpsb
add
push
sub
clc
add
pushl
decb
inc
inc
or
xchg
push
or
mov
push
test
cli
decl
ret
cli
orl
call
lcall
sub
leave
push
pushl
push
mov
imul
add
lods
repz
lock
mov
add
test
push
lret
sbb
mov
out
cmc
bnd
sbb
xchg
into
lods
xchg
repz
xchg
push
hlt
xchg
cmc
mov
sbb
jne
mov
lret
jp
test
jl
lcall
ljmp
xor
and
xchg
mov
jbe
lret
sbb
add
adc
mov
push
jne
aad
jecxz
cmp
jmp
xlat
cmpb
jle
xchg
inc
das
std
pushl
into
mov
sbb
push
in
push
xchg
or
inc
xchg
call
inc
popa
pop
jbe
sbbl
jbe
in
adc
loope
enter
sbb
lcall
loop
jge
test
cmp
ds
lods
inc
ja
icebp
decl
add
idivl
rcrb
mov
jmp
aaa
test
loopne
mov
push
dec
push
sbb
mov
dec
mov
loope
sub
cld
in
incl
and
int
subb
and
lcall
iret
sbb
pop
imul
sub
xchg
inc
rcl
pop
mov
test
push
cld
int3
jge
mov
in
stos
lcall
xchg
cmp
lret
xchg
pusha
mov
fcomip
inc
mov
push
inc
xchg
mov
inc
jne
lret
ds
or
ret
je
aaa
pop
out
mov
filds
push
xor
nop
vaddsubpd
xor
dec
mov
arpl
lock
inc
sbb
pop
and
in
lods
call
mov
inc
mov
push
pop
lods
adc
ljmp
adc
mov
and
xchg
mov
cmp
xchg
cmc
pop
ja
pop
out
xor
or
and
mov
decl
rcrb
in
inc
inc
sub
scas
in
dec
mov
pop
xchg
xchg
cld
dec
xchg
and
mov
nop
imul
imul
add
dec
je
fucomip
push
imul
enter
enter
sar
adc
jno
enter
ret
pop
iret
or
pop
clc
cli
decl
cld
adc
mov
outsl
test
loope
inc
lea
adc
ljmp
xchg
sbb
call
shlb
lret
sbb
sarl
cs
xchg
add
clc
fnstcw
jecxz
dec
mov
aam
dec
in
insl
add
aas
popa
xchg
cmp
icebp
test
push
mov
push
xchg
xchg
cltd
pop
pusha
jecxz
adcb
jbe
cmp
add
repnz
cli
jg
add
mov
mov
lcall
sub
xchg
ljmp
rolb
sar
mov
lcall
call
lea
inc
into
jbe
cmp
inc
clc
mov
mov
mov
pop
enter
sub
inc
dec
lcall
out
or
cmp
mov
push
loope
push
rcll
loope
inc
pop
std
or
inc
cmp
mov
jnp
mov
lods
arpl
adc
push
ljmp
out
and
enter
jnp
push
push
jg
mov
ljmp
addr16
mov
jg
aaa
mov
cmpsl
sahf
xor
les
call
movsl
lahf
or
int
or
sarl
adc
xor
sub
decl
fdivrs
cmp
dec
cmp
push
push
movsb
dec
mov
inc
jmp
stc
inc
decl
insb
mov
in
xor
mov
or
xchg
inc
cld
incl
lahf
jg
sbb
dec
inc
std
daa
xchg
pop
dec
mov
idivl
mov
jns
mov
nop
mov
filds
rcll
insb
lock
cs
sub
push
inc
mov
lods
pushl
pop
mov
pushf
shrb
mov
push
adc
lcall
pop
fwait
out
push
pop
and
push
sub
mov
rcrl
or
nop
sub
push
insb
pushf
call
pop
shll
hlt
and
popf
inc
xchg
jge,pn
jg
fildll
rcrb
xor
dec
sti
testl
std
mov
push
push
jmp
arpl
and
pop
mov
adc
idiv
cld
das
hlt
adc
or
test
lret
push
aad
lret
lcall
or
insb
mov
cmp
push
lds
xchg
mov
stos
addr16
xchg
mov
lea
lea
mov
mov
jmp
pop
neg
popa
movsl
mov
nop
ss
sub
imul
lods
loop
pushl
push
inc
and
jge
ret
imul
test
das
adcl
aad
mov
sbb
or
cld
and
lods
decl
and
mov
ret
or
cld
cmp
imul
adc
cli
in
or
xchg
out
inc
push
mov
xor
enter
and
arpl
fimuls
mov
lods
add
xchg
inc
adc
pop
mov
decl
push
add
add
jne
xor
call
pop
add
mov
sbb
mov
out
fadds
xchg
cmpsl
fcmovnu
mov
dec
leave
cmp
dec
aam
mov
dec
or
mov
or
push
loope
test
pop
std
incl
int3
jno
hlt
movzbl
pushf
scas
pusha
mov
jg
mov
in
rorb
lret
jne
sbb
pop
pushl
inc
jns
pop
mov
xchg
pop
rcrl
mov
test
call
lahf
inc
dec
xor
adc
nop
or
push
int3
jg
xor
mov
sbb
add
pop
arpl
ret
popf
pop
stos
ficoms
ja
add
call
mov
sbb
in
dec
xchg
jbe
mov
and
pop
je,pt
xor
pushl
cli
xchg
mov
mov
mov
mov
std
push
aaa
xlat
pop
dec
adc
or
and
mov
das
hlt
fildll
mov
stc
cmp
pop
lock
fdivrp
pushl
lahf
inc
pop
xor
or
fwait
clc
mov
or
incl
aam
mov
loopne
cmp
cmpsl
push
pop
xor
es
das
scas
jo
mov
loopne
iret
xor
cmp
pop
inc
sbbl
scas
jg
das
cld
int
es
mov
xor
dec
call
ss
cmp
fs
jecxz
loope
xchg
in
pop
mov
aad
scas
adc
jg
notl
aad
rcrb
push
jns
addr16
call
cli
mov
mov
leave
testl
sbb
pop
push
lea
mov
dec
xor
je
cmp
ljmp
stc
test
and
test
and
insl
mov
xchg
sub
push
lahf
xchg
inc
dec
pop
pushl
dec
pop
std
lock
in
push
xchg
popf
push
adc
rolb
int3
cwtl
jns
fiadds
in
addr16
pop
pop
xchg
jmp
xor
push
cmp
cwtl
jmp
das
sub
and
fisttpll
cs
jmp
leave
sub
aas
cmc
jl
mov
jg
fcom
jmp
clc
das
push
push
sub
sub
inc
inc
scas
jl
dec
jmp
sar
test
les
jns
lock
xchg
ljmp
xchg
scas
xor
dec
das
push
movl
add
mov
lcall
push
lret
stc
int
inc
jbe
int3
call
sub
loop
mov
cmpb
or
xor
mul
xor
or
sbb
lods
sbb
movb
sbb
arpl
ljmp
push
pop
sbb
pop
or
or
repz
popa
sub
js
mov
ss
xchg
outsb
sub
aam
mov
int
mov
sbb
incl
push
out
xor
lret
mov
add
lcall
add
or
sbb
mov
mov
pop
call
adc
adc
push
pop
jecxz
out
loope
jmp
pop
cld
mov
sahf
std
lcall
les
add
mov
sbb
or
int
mov
xchg
push
data16
loope
ss
pop
xor
pop
mov
inc
push
lcall
dec
pop
ds
jecxz
cmp
xor
xor
nop
dec
mov
decl
push
aam
cmp
mov
mov
fs
mov
add
ljmp
cmp
adc
insb
fisubrl
repnz
jbe
pop
push
adc
incl
lahf
adc
xor
push
add
popa
lock
out
xchg
add
int3
cmp
mov
lret
rcr
addr16
call
push
je
pop
es
xchg
sahf
popa
sbb
pop
pop
or
push
xchg
or
mov
and
inc
add
cld
outsl
std
sbb
xor
aas
ss
mov
mov
std
pushl
jecxz,pn
xor
push
in
pop
push
cmp
xchg
test
movb
push
pop
or
icebp
aad
lahf
sbb
push
addr16
into
cld
ljmp
icebp
cmc
cltd
imul
je
adc
cltd
xor
or
adc
ljmp
cmpb
je
add
jne
inc
push
repz
frstor
dec
or
sub
push
lcall
mov
js
cmp
add
nop
popa
out
in
adc
rorb
and
adc
movsl
popf
movsl
hlt
lcall
adc
lock
js
test
jno
ror
test
decl
sub
or
mov
sbb
andb
jmp
mov
jb
push
xchg
sub
add
dec
repnz
pop
dec
call
cli
call
push
ljmp
fisubl
pop
outsl
sub
insl
cmp
decl
pushf
lcall
pushf
in
jo
sti
push
ret
pop
out
inc
aam
call
lcall
mov
orl
xchg
sahf
jp
mov
std
js
pusha
jne
adc
jne
xchg
jne
pop
ficompl
push
sti
or
push
add
pop
dec
fdivs
fstps
mov
push
fbld
pop
adc
pop
out
cmp
call
pop
cld
hlt
mov
xchg
out
jns
xchg
mov
and
decl
push
les
sahf
mov
mov
icebp
cmp
shll
jne
imulb
mov
mov
dec
out
ja
jecxz
dec
lea
jle
aaa
adc
fiaddl
sbb
push
pop
push
push
jle
sbb
cmpsb
imul
xchg
dec
icebp
sbb
ljmp
mov
or
orl
jp
in
mov
push
call
ljmp
mov
clc
push
je
cltd
data16
leave
xchg
jg
das
sub
call
aam
lret
add
pop
adcb
leave
add
cmp
cli
mov
jp
daa
test
cld
sti
push
outsb
lock
jge
xchg
xor
or
mov
imul
lods
mov
imul
outsl
mov
xchg
test
and
pop
sub
movsb
inc
iret
mov
push
pop
mov
adc
shrl
call
mov
cmp
dec
mov
ljmp
mov
pop
stos
push
lea
fdivrs
push
aaa
test
sbb
fiadds
sub
push
aaa
push
jb
dec
add
movsb
add
outsl
imulb
lock
jg
sbb
fstp
scas
pop
sbb
imul
lock
das
les
push
ljmp
lret
and
outsb
cmp
sahf
add
call
in
adc
out
adc
mov
add
out
loop
jg
and
loopne
mov
rep
mov
add
arpl
cld
icebp
decl
fcomip
aam
mov
fsubr
pop
dec
jno
fdivs
cmp
push
incl
jp
xor
pop
cvtdq2ps
push
or
dec
lods
sub
add
pop
hlt
xchg
pop
mov
cmp
xor
movsb
jne
mov
call
hlt
decl
pop
in
in
push
sub
test
jge
decl
cmc
mov
fadd
add
pop
pshufw
psraw
jg
mov
push
les
orb
je
xchg
or
pop
cli
inc
fadd
jecxz
flds
outsb
or
inc
jnp
sbb
inc
pop
pop
mov
lods
lret
dec
mov
shll
test
stc
mov
mov
push
mov
lock
cli
mov
call
cli
jmp
inc
xchg
pop
popf
data16
mov
adc
mov
push
fsin
ljmp
std
sub
or
inc
xor
sub
shl
icebp
cmp
adc
xchg
cmc
sbb
and
mov
sbb
divl
xchg
out
mov
gs
repz
test
rol
inc
arpl
test
push
movsb
aas
pop
push
sbb
dec
mov
sar
mov
jb
mov
mov
mov
mov
pushf
mov
dec
bound
mov
or
lock
out
push
xchg
mov
lock
in
cwtl
or
std
stc
adc
xchg
aad
pop
clc
jg
stos
jno
sbb
push
xchg
pop
lods
mov
sbb
dec
xor
sti
outsb
fstl
lcall
mov
inc
lds
mov
fldt
ja
inc
push
or
dec
mov
fildl
cwtl
xchg
enter
lcall
insb
sti
push
in
adc
clc
adc
cmpsb
in
sbb
test
pop
mov
movsl
cmp
xor
add
popaw
add
add
jbe
lcall
sub
test
inc
pop
push
daa
mov
and
call
mov
inc
decl
cmp
je
push
lcall
ror
pop
mov
lcall
ret
sub
jno
cld
push
mov
sub
mov
add
cli
mov
or
flds
imul
call
das
lock
jmp
mov
in
jo
test
jns
push
adc
ljmp
pop
mov
add
cmp
jle
adc
movl
jno
test
jp
es
mov
lods
add
jae
lods
adc
in
sbb
sarb
push
xor
or
push
jne
call
mov
and
or
andb
cmp
and
lods
or
mov
incl
ds
add
push
fisttpl
aas
inc
mov
xlat
dec
xchg
xchg
mov
lods
jg
mov
add
add
pop
add
push
sbb
jg
jo
fwait
subl
cmp
add
adc
sbb
decl
mov
xor
or
ret
push
mov
mov
sub
push
ret
incl
aad
pushf
pop
jb
in
std
sbb
nop
mov
jl
pop
inc
mov
mov
mov
loop
push
fldcw
loope
xor
jmp
mov
das
add
push
in
xchg
enter
loope
cmp
in
das
xor
rolb
mov
jl
into
jb
xchg
cli
lods
pushl
pop
mov
cmp
inc
insb
incl
pop
es
lods
xor
cmp
movl
cli
lcall
insb
ss
add
shr
adc
fs
jns
ljmp
xor
xchg
js
push
add
in
insb
cld
sbb
dec
inc
or
pop
gs
jecxz
dec
mov
jecxz
mov
push
mov
fisttpl
pop
dec
mov
out
push
dec
out
popf
push
cmp
je
cmpsl
inc
daa
dec
out
inc
push
pushf
cmp
out
cmp
adc
out
gs
insb
clc
add
test
jmp
inc
jns
and
mov
into
or
mov
popf
pop
sbb
je
pop
test
call
jmp
stc
sub
aam
aam
aad
and
add
mov
adc
movsb
add
ret
nop
mov
enter
jne
je
adc
sarb
mov
pop
jmp
enter
cmp
cmp
into
jo
pusha
add
dec
add
in
xor
mov
sbb
xor
fldl
popf
adc
scas
xchg
add
or
ljmp
hlt
mov
jecxz
in
jecxz
mov
jecxz
mov
stc
test
outsl
mov
lahf
push
clc
call
test
and
or
nop
jb
insl
jbe
add
aaa
fidivs
addb
mov
pusha
add
outsl
lock
nop
ret
dec
das
call
mov
lods
outsl
mov
stos
or
rcr
cmp
decl
ret
hlt
add
or
int
sub
or
inc
pop
enter
mov
mov
popf
push
repnz
sbb
in
mov
inc
aad
lock
call
mov
push
popf
add
faddl
in
rcrl
rolb
sbb
add
shl
movsb
or
xchg
scas
incl
mov
or
icebp
je
and
push
inc
mov
dec
inc
jmp
cmp
cmp
sbb
out
or
push
xor
loopne
sub
pushl
hlt
icebp
es
or
adc
mov
mov
add
pop
loope
incl
mov
in
cmp
decl
icebp
sbb
or
in
mov
xchg
jl
jbe
outsl
add
inc
test
clc
popf
sbb
mov
add
incl
adc
sub
fabs
rcr
aad
jg
cmp
je
pop
inc
or
mov
mov
xor
xchg
in
into
jecxz
mov
lea
subl
jg
cmp
push
imul
pop
ljmp
std
mov
shlb
mov
lcall
rclb
pop
clc
popa
movsb
and
shl
popa
jecxz
mov
test
cltd
cmp
inc
insb
lods
aad
mov
adc
callw
pop
les
jbe
jbe
std
lcall
mov
cltd
lock
ds
fsubrl
mov
push
enter
loope
lcall
imul
mov
pop
loope
xor
sub
mov
ret
std
jg
cmp
loop
xor
pop
and
sbb
lret
push
mov
mov
xor
daa
cwtl
jno
call
call
lcall
movsl
jbe
jle
sub
stc
adc
pop
push
je
adc
sbb
insb
mov
jmp
fcomps
dec
xchg
xor
pop
pop
fdivr
loopne
xchg
fsts
in
call
jle
in
inc
decb
xor
movsb
xchg
inc
jl
adc
lock
cld
std
call
jmp
inc
xor
xchg
std
inc
fsubl
mov
jge
fdivrl
jmp
mov
in
cld
popl
jl
inc
mov
jmp
jg
ja
mov
jle
jmp
iret
js
or
cld
scas
mov
pushf
cmp
xchg
jl
loope
not
int3
mov
aaa
and
mov
dec
cmp
sub
and
into
pop
cltd
xchg
cmpsl
sahf
mov
shrl
shll
clc
clc
cld
call
cld
das
call
jecxz
enter
dec
mov
repnz
inc
ds
pop
or
jecxz
incl
add
cld
mov
pushf
cld
daa
sbb
dec
std
cmp
dec
sbb
xor
repz
insb
mov
jl
inc
jbe
adc
lahf
jp
ljmp
dec
sub
sarb
mov
jns
stos
out
push
pop
adc
sbb
rcl
out
add
call
pop
loop
out
cld
rcl
xlat
sbb
pop
popa
pop
pop
inc
inc
js
add
or
push
jecxz
sub
cmp
shll
pushl
jg
add
loope
push
inc
dec
cmp
push
lcall
jg
xor
incl
push
jle
ja
call
jl
cmp
test
cld
test
in
pop
jle
test
cld
mov
test
cld
pushf
xchg
pop
jle
push
push
test
cld
lods
xor
mov
mov
test
in
cld
mov
out
pop
xchg
leave
push
push
int3
fdivrl
iret
and
cmp
sub
aaa
ljmp
or
cmp
je
dec
out
aam
mov
inc
sub
jno
mov
out
sub
pop
std
decl
fcmovne
cld
mov
sahf
ss
sub
push
sub
dec
clc
sbb
test
xchg
andb
mov
cs
call
mov
loope
add
mov
add
cmp
xchg
jmp
push
mov
in
mov
push
xor
inc
fsts
test
xor
cmp
mov
ss
pop
icebp
dec
cld
movsl
jno
or
jge
or
pop
push
ret
or
mov
adc
mov
orb
or
mov
pop
mov
jl
lds
jle
cmp
sbb
xor
xor
lock
add
sbb
mov
or
cmp
inc
inc
cmp
ljmp
fisubs
xor
je
jb
jge
push
rcr
push
ss
xor
es
ljmp
icebp
movsl
inc
cmpb
lea
or
jl
lds
sbb
mov
mov
call
mov
mov
add
idivl
pop
cmpsb
leave
push
movsbl
push
mov
sub
cmp
add
jp
pop
inc
aas
push
aaa
clc
aad
inc
std
sbb
xorl
fnstsw
lcall
push
push
addr16
and
jmp
ja
ljmp
jl
pop
enter
push
pop
xchg
inc
inc
jo
pop
or
jg
lock
hlt
mov
sub
andb
push
clc
popa
mov
jo
decl
cmp
or
pop
push
inc
daa
sahf
dec
loop
dec
shlb
jne
dec
insb
dec
pop
jg,pn
dec
mov
cmp
mov
lcall
sbb
adc
into
decl
and
mov
cmp
jg
mov
or
xor
and
decl
insl
cmc
dec
lea
pop
imul
jl
icebp
out
adcl
or
pop
xchg
lcall
dec
xchg
push
xorl
popf
je
int
sub
mov
mov
ljmp
addb
sub
or
add
rol
mov
jo
idiv
idiv
mov
test
call
enter
dec
add
add
lcall
in
cmpsl
inc
inc
pusha
hlt
add
add
sbb
jnp
std
fdivs
cmc
das
push
call
inc
push
ja
sub
or
mov
pop
inc
add
dec
repnz
vandps
mov
push
pushl
or
arpl
das
cld
decl
mov
pusha
dec
push
aas
lret
clc
add
je
lds
dec
js
jae
loope,pt
nop
mov
in
xor
xor
push
shll
out
repnz
fs
mov
hlt
push
and
ljmp
ret
fs
nop
rolb
push
cwtl
inc
imul
xorb
out
dec
push
fdivr
outsl
hlt
jmp
cmp
and
lods
push
cmp
jbe
push
inc
jle
icebp
lcall
gs
cmc
sub
and
push
mov
test
les
shrl
push
shlb
icebp
mov
adcb
test
lods
fcom
jge
test
sbb
rclw
mov
fsubrp
outsl
rcr
aam
jne
loop
mov
push
cli
or
enter
lret
adc
lret
dec
pop
popa
mov
mov
leave
incl
call
adc
scas
fdivl
je
xchg
shlb
test
pushf
or
inc
cwtl
fsts
es
outsl
jmp
test
outsl
lea
xor
pop
ljmp
out
push
mov
sub
pop
inc
mov
das
fisubl
mov
jo
mov
lock
adc
decl
idivl
mov
sub
sbb
mov
add
fcoms
pushl
test
xchg
decl
test
aad
movl
or
pop
push
xchg
fsubrs
jne
adc
add
pop
popf
jbe
decl
cs
mov
add
add
mov
jle
mov
push
jg
xor
mov
push
stos
lret
jmp
roll
jbe
pop
loopne
fisttps
test
adc
push
pop
inc
movsl
and
inc
outsl
xchg
jne
rcl
dec
dec
dec
add
adc
je
lcall
aas
bound
cmp
pop
das
add
mov
push
fistpll
and
jne
inc
ffreep
push
xor
sbb
in
in
lods
or
in
sbb
and
or
pop
call
adc
mov
sub
jmp
outsl
cmc
jge
nop
or
mov
pop
mov
ja
mov
mov
sar
xchg
pusha
movzbl
jmp
pop
dec
push
push
cmp
xor
pop
push
jnp
and
push
and
imul
jmp
jp
push
sbb
push
jmp
push
or
inc
adc
xchg
adc
std
ljmp
outsb
sti
movl
in
icebp
add
or
loope
shl
or
add
repnz
push
add
mov
mov
ds
sahf
and
jbe
in
subl
and
inc
inc
jnp
inc
lahf
call
mov
stc
fcoml
outsb
test
push
mov
orl
sti
and
cmp
mov
dec
xor
rdmsr
mov
decb
je
add
xchg
sub
adc
or
mov
lds
lds
jmp
popf
testb
sub
jbe
call
insl
decl
push
mov
loopne
pop
pushl
pushl
cmpsl
mov
push
cmp
adc
adc
mov
pop
clc
mov
cmpb
insb
data16
ljmp
lock
dec
into
inc
inc
add
out
dec
sub
rorb
dec
jne
push
push
push
mov
std
ret
xchg
mov
pusha
cmpb
and
push
pop
jb
xor
mov
pop
sahf
or
ret
call
or
mov
in
push
rol
xor
ja
xchg
xchg
push
mov
push
repz
and
cmp
outsl
call
or
push
adc
push
inc
insb
sarb
sbb
insb
sub
add
xlat
testb
jg
mov
fimull
pop
add
mov
cmp
pusha
xor
add
xchg
clc
xor
pop
lahf
test
call
orb
mov
cmpsb
out
adc
in
int
jg
push
call
inc
or
loope
and
in
xor
mov
cld
add
jmp
in
stos
xchg
and
jmp
fwait
pop
rcll
push
cmp
jmp
pushf
sbb
jo
call
repnz
cltd
add
add
dec
call
or
xchg
inc
jle
cmpsb
pusha
pop
mov
mov
andb
fstl
mov
jmp
jecxz
xor
mov
fwait
dec
sub
loopne
lock
xor
push
sbb
push
xchg
add
ljmp
cmp
xor
cmp
lock
sbb
pop
or
jmp
jb
imul
pop
inc
mov
push
mov
jbe
leave
mov
ljmp
ds
idivb
in
add
add
push
or
fsubrs
mov
sub
sub
jmp
call
push
mov
sub
jae
fcoms
push
xchg
jns
cmpsb
or
push
xchg
call
inc
in
je
mov
xchg
aad
mov
fists
cmp
sbb
and
mov
cmp
test
lds
cs
incl
and
push
sbb
ljmp
inc
sbb
es
push
and
jnp
std
jmp
pop
xor
ljmp
insl
dec
scas
mov
dec
xchg
xchg
mov
in
sbb
lea
fld
adc
or
inc
push
push
push
mov
lcall
ret
std
out
mov
test
js
adc
sub
push
cmpsl
call
lcall
or
gs
push
shll
cld
pop
outsb
imul
and
mov
incl
pushl
movsb
fdivs
adc
ret
mov
lret
mov
insl
push
rclb
clc
call
jmp
or
out
pop
mov
cmp
stc
std
mov
daa
add
ficoms
mov
mov
adc
add
mov
mov
pop
mov
in
mov
adc
pop
int3
movswl
adc
mov
sbb
test
and
cwtl
fstl
sbb
insb
aad
lcall
sbb
pop
push
inc
jne
sub
xor
lahf
xor
and
jle
jg
out
jecxz
push
stos
iret
dec
in
cld
jle
jne
inc
stc
mov
jmp
shl
pop
jmp
fisubrl
pushf
push
js
adc
mov
push
push
or
test
sbb
xor
inc
dec
adc
jg
subb
pushl
sbb
inc
call
xchg
aad
mov
inc
in
or
mov
hlt
je
xchg
xchg
xchg
cmp
jae
gs
or
cld
das
inc
mov
inc
push
xchg
xor
push
iret
push
jbe
std
xchg
cli
or
cmp
dec
pushl
push
inc
mov
loop
decl
pusha
adc
jnp
ret
jmp
popf
pushf
jb
out
pop
sbb
test
repnz
pop
call
add
push
push
out
sbb
pop
push
push
jecxz
cmp
lret
jne
inc
and
pushl
sub
hlt
aam
sbbl
or
mov
jnp
adc
pushl
jmp
or
xor
xor
sbb
push
loopne
in
int3
push
subl
sub
sarl
sub
incl
or
push
leave
push
xchg
adc
adc
jmp
xor
scas
ja
push
call
lods
and
sub
lcall
clc
push
pop
dec
inc
adc
push
jne
addr16
and
push
inc
mov
in
fildll
out
call
sub
pop
xor
call
lcall
sub
inc
adc
sbb
adc
mov
add
cmp
pusha
movsl
std
in
call
mov
test
loop
xor
imul
inc
ljmp
sub
push
sbb
dec
fs
push
add
lcall
fnstcw
mov
cmp
les
push
adc
pop
cli
decl
cwtl
mov
mov
mov
xor
testb
lcall
fs
cs
push
jp
jge
fsubrs
push
dec
nop
sub
int3
inc
mov
movsl
pop
incl
repnz
adc
mov
mov
adc
add
push
sub
push
arpl
xor
ljmp
xlat
jge
shlb
mov
iret
je
adc
invd
pop
xchg
ss
lock
js
push
adc
in
ljmp
lds
and
dec
dec
mov
mov
push
mov
mov
fsubl
pop
push
pop
arpl
add
lea
add
fildll
jmp
add
cmp
jb
add
dec
jl
icebp
stc
pop
sbb
int
ss
call
mov
sub
lds
jmp
xor
lcall
mov
lea
repz
push
push
leave
lmsw
inc
repz
push
out
insb
or
pop
push
add
call
mov
mov
push
add
pop
lea
inc
push
shr
idiv
mov
rcr
lea
mov
add
inc
inc
mov
negb
jmp
jmp
pop
add
mov
and
jmp
sarl
xor
sbb
add
xchg
repz
mov
loopne
test
add
dec
inc
xor
lahf
ljmp
jmp
inc
pop
adc
ret
xchg
addl
pushl
notl
push
push
mov
cmpb
fcoms
or
jg
mov
dec
and
mov
data16
pop
jb
jmp
daa
push
sbb
test
mov
xor
les
jge
jge
or
jg
xchg
cmpsb
ja
das
add
js
jne
mov
jg
clc
pop
mov
jne
jl
insl
push
dec
fnstsw
incl
mov
int3
xchg
sub
mov
les
xor
jno
ljmp
call
push
sbb
fwait
push
pop
pop
adc
dec
repz
hlt
fnsave
mov
and
or
fstpl
int3
addr16
jns
push
jp
pop
cmpsl
pop
mov
dec
xor
sarl
xor
push
sbb
clc
mov
cmp
xor
mov
mov
fcoml
sub
incl
sub
in
fsub
lret
jge
jle
mov
jo
call
mov
xchg
xor
jmp
aam
or
in
lcall
xchg
insb
and
sub
adc
lret
inc
inc
clc
push
insb
pusha
dec
jne,pn
jge
dec
test
jl
jmp
movsl
cmp
ljmp
sbb
popa
xor
push
mov
xchg
jle
adc
in
mov
sub
sub
bswap
ss
jg
xchg
add
jmp
dec
pop
adc
pop
sarl
into
sbb
and
add
pop
fidivrl
adcb
decl
lcall
mov
mov
mov
push
mov
cltd
xchg
pop
loopne
jecxz
lret
bound
or
loopne
push
out
xor
sbb
xchg
push
rcrl
insb
add
je
aad
cli
xchg
outsl
icebp
ljmp
popf
pop
cmp
call
sbb
rolb
and
lcall
pop
push
pop
sub
shll
adc
or
sbb
ss
fdivrp
xchg
jp
sbbb
mov
rorl
push
loopne
fbld
insb
xor
pop
jecxz
cmp
filds
or
inc
icebp
cs
in
mov
mov
fisttpl
movsl
lods
es
sub
loop
sbbl
adc
or
jmp
aas
rcrl
push
pop
adc
and
aam
dec
xor
or
jmp
lods
fisubrl
push
fldl
cs
sub
or
lcall
or
add
rcrl
into
cli
sbb
xor
mov
mov
jl
in
or
stos
popf
pop
mov
lock
leave
popf
scas
and
sbb
rcrl
push
sbb
mov
ret
mov
dec
in
outsb
pop
popf
pop
pop
std
decl
icebp
sahf
test
sub
aam
adc
divl
push
dec
inc
push
mov
jg
call
push
lods
adc
pop
push
and
aam
xchg
jmp
pushl
incl
jecxz
out
pop
add
xchg
push
cmp
dec
pusha
bnd
inc
cltd
xchg
data16
decl
in
mov
shll
popf
in
inc
push
xchg
pop
je
call
mov
in
cmp
mov
std
pushl
dec
js
add
ja
mov
dec
sahf
aam
push
adc
pop
loope
imulb
or
mov
jge
aam
popa
adc
out
test
decl
push
or
sub
push
dec
mov
clc
dec
pop
clc
sbb
push
aaa
mov
mov
stc
incl
decl
fistpl
dec
in
push
jno
loopne
push
pop
push
sbb
sti
lds
push
cld
and
lea
sbb
xchg
mov
adc
pushf
hlt
mov
push
out
sbb
inc
xchg
lret
incl
inc
or
xor
cmp
push
mov
jmp
push
int3
inc
jg
call
clc
add
into
add
or
ret
mov
xchg
and
pusha
push
jp
daa
sbb
call
sub
jnp
flds
pop
hlt
push
jns
pop
xor
mov
dec
lcall
xor
decl
add
xor
mov
sar
mov
incl
lahf
xchg
nop
into
inc
xchg
ret
div
mov
push
iret
adc
jmp
mov
ljmp
sbb
decl
push
xchg
cmp
and
mull
incl
lcall
xlat
sbb
add
pop
mov
jp
mov
fnstcw
test
dec
stos
fxtract
adc
popa
jnp
xor
push
cli
movsl
mov
jg
cmp
gs
mov
repz
mov
inc
test
loopne
cmp
test
aam
arpl
jl
pop
loop
add
push
daa
sub
mov
mov
mov
decb
ljmp
jg
lods
mov
jmp
mov
mov
mov
sub
add
jg
pop
xor
icebp
cmp
cmp
nop
pushl
leave
cmc
fs
mov
and
mov
nop
inc
aaa
hlt
incl
sbb
loop
adc
cwtl
lods
sarl
fs
mov
inc
call
popf
decl
repz
or
jg
adc
mov
in
mov
les
call
mov
dec
xchg
scas
push
pop
jne
sub
cmp
adc
lock
test
insb
das
push
fisubs
cmp
add
mov
sub
leave
jg
xchg
push
push
xchg
jbe
add
pop
ljmp
jae
xor
lods
xor
sub
adc
lea
ljmp
mov
pop
cmp
lods
imul
adc
int
mov
sti
in
mov
pop
mov
repz
insb
sub
cmp
cmp
popf
inc
ljmp
loop
dec
jb
mov
cmp
decl
xchg
push
int
mov
movl
clc
ljmp
mov
insb
dec
cmp
mov
int3
mov
dec
mov
filds
mov
push
test
andl
repz
cs
ljmp
or
into
add
cmpsl
push
push
mov
test
pop
mov
sbb
and
call
add
imul
pop
sub
out
sub
push
xor
test
out
sti
push
shlb
sbb
or
and
cmpsb
std
pushl
cmpsl
daa
push
imul
cmp
je
jp
jge
cmp
pop
mov
cmp
or
imul
cmp
pushf
aad
decl
pop
dec
add
xchg
mov
mov
adc
cmp
nop
add
iret
pop
fnstenv
jb
decl
mov
add
or
jne
and
and
aam
jno
incl
cs
lods
loop
fs
mov
push
jge
inc
int3
mov
add
push
sub
dec
daa
loopne
mov
inc
lods
dec
jne
mov
rorl
std
out
pop
loopne
mov
xor
inc
jmp
mov
mov
ret
or
jns
sarl
loope
mov
pop
sbb
jmp
outsb
add
and
jp
push
int3
mov
push
pop
fs
or
adc
mov
fdivl
icebp
decl
sbb
icebp
sbb
pop
inc
adc
lcall
outsl
fiadds
jge
pop
adc
fidivs
dec
add
scas
bound
call
pop
sbb
mov
pop
fmull
test
xchg
cs
jg
lcall
mov
dec
mov
mov
and
mov
or
pop
call
cmc
fwait
inc
je
mov
xor
jb
jle
into
dec
push
cwtl
xchg
inc
movsl
outsb
std
pushl
and
insb
gs
sbb
sti
je
repz
and
aam
incl
loop
arpl
dec
inc
add
mov
std
mov
sub
add
inc
lret
adcb
adc
outsl
jl
lcall
mov
push
es
pop
pop
jnp
fsubrl
pop
and
loope
test
into
fdivrp
call
cli
dec
lret
sub
add
lock
adc
push
sbb
mov
xchg
jae
repnz
sbb
or
push
aad
jg
je
xor
fisttpll
mov
mov
cli
dec
cmpl
loope
jmp
mov
outsl
std
push
daa
fs
arpl
stc
mov
sbb
adc
lock
test
sbb
ljmp
decl
popf
sub
sbbb
idiv
outsl
insb
je
pop
aad
adc
pusha
cmp
cmpb
sub
popl
cmp
jne
movsbl
mov
scas
shll
add
push
xor
add
adc
lret
cmp
mov
cli
das
cmc
clc
or
dec
shl
ds
data16
cwtl
pop
and
mov
pop
jns
xor
rorb
pop
push
sub
push
and
jg
ss
cmc
inc
inc
insl
cmp
mov
dec
xor
loope
cmp
lcall
out
rorb
mov
push
push
std
fiadds
jg
aas
push
push
mov
out
cmp
cmp
das
mov
inc
lahf
mov
xchg
push
push
mov
inc
dec
inc
sub
and
cmp
cmc
sub
mov
jg
ljmp
addr16
lret
movsb
in
and
test
sbb
pop
stos
out
sub
jmp
daa
ret
shlb
ss
mov
cld
pop
add
add
call
cli
mov
test
movsb
loope
dec
imul
dec
or
push
je
std
adc
ds
mov
das
je
xchg
mov
adc
ljmp
sbb
cli
mov
mov
push
pop
shrl
mov
ljmp
mov
cli
jne
adc
mov
shrl
mov
pop
jle
xlat
lret
aas
jo
lock
aad
and
mov
inc
mov
js
sub
ljmp
push
and
and
and
add
push
bound
inc
push
mov
lret
mov
adc
shlb
mov
sbb
push
pop
clc
out
inc
xchg
cmp
or
jecxz
and
leave
pop
popf
pop
lock
pusha
je
inc
sbbl
jl
jmp
cltd
sar
ljmp
xor
pop
test
dec
test
add
jo
jle
ja
sahf
es
out
sbb
push
or
loope
push
push
push
adc
cs
es
pushl
addr16
hlt
adc
pop
arpl
call
gs
test
adc
enter
outsb
fildll
ficomps
addr16
inc
pop
mov
push
fdivrl
mov
sbb
inc
stos
sarb
les
mov
lcall
mov
cmp
pusha
cltd
imul
mov
mov
in
lcall
outsl
inc
je
in
jne
data16
repz
repnz
ret
cmp
pop
es
jmp
sbb
ret
jo
xchg
or
cmpsb
inc
mov
and
mov
test
rcr
mov
movsb
repz
fcmovnu
clc
movsb
xchg
or
popf
outsl
add
cmpsl
mov
out
pop
xor
pushl
push
mov
xchg
or
cmp
ret
add
and
in
sub
inc
testb
fildl
sub
mov
cmp
sub
aad
cmp
imull
or
and
je
gs
test
push
and
adc
out
loopne
sbb
sarb
out
lretw
mov
loopne
ljmp
dec
pop
inc
out
shlb
adc
fs
popa
shr
jnp
xor
pop
orl
loop
inc
cmp
call
jns
sbb
xchg
jg
notl
enter
outsl
inc
mov
shrb
das
cmp
lcall
push
hlt
lcall
fistpl
or
xchg
call
icebp
sbb
pusha
dec
adc
jmp
or
outsl
ficoms
repnz
enter
les
pop
mov
js
cmpb
pop
popa
mov
jl
xlat
clc
mov
push
push
xchg
aaa
loopne
ljmp
mov
xchg
imul
pushf
shll
jno
or
ret
addr16
adc
aam
pop
jb
lea
cmc
pop
dec
icebp
sbb
xor
fdivrl
insl
sti
inc
push
stc
jge
lcall
decl
pop
inc
test
jnp
leave
gs
push
push
sbb
jne
lea
xor
dec
cmp
mov
mov
leave
inc
test
add
pop
xchg
jmp
mov
sti
and
cmpsb
adc
add
add
jne
cmp
xchg
fidivs
loope
inc
insb
cmp
pushl
push
arpl
aaa
pusha
lds
mov
xor
or
mov
pusha
jp
mov
mov
in
sub
sbb
jmp
int3
sub
test
rcrb
cmp
sub
jl
ret
sbb
in
and
add
jg
jns
pop
aad
pop
or
orb
pop
decl
add
xor
pushf
fstl
fwait
sub
xor
btr
movsl
ljmp
cmp
sub
imul
mov
ljmp
or
pop
xor
inc
hlt
test
dec
pushl
push
shll
xchg
lds
push
mov
add
test
mov
push
lods
aad
test
mov
out
sub
sbb
adc
loope
popl
outsl
hlt
ljmp
lea
adc
fidivs
in
jmp
mov
or
jg
mov
jb
lock
mulb
sbb
lods
rcrl
ljmp
inc
mov
mov
int
push
mov
inc
insb
xor
mov
incl
loop
ficoms
jne
mov
shll
sub
insb
rorl
test
mov
fcomi
xor
jbe
sub
jg
scas
sub
hlt
fs
scas
pop
add
xor
ljmp
adc
push
pop
pusha
mov
xchg
cmp
add
je
das
lock
shrd
mov
fcoms
pusha
adc
ss
in
pop
mov
in
push
lret
push
sub
ja
fisttps
push
imul
mov
sub
call
push
clc
out
call
rcl
mov
mov
sarl
sbb
inc
cmp
and
test
mov
adc
mov
lret
cwtl
mov
into
sub
jge
jecxz
icebp
mov
mov
push
jecxz
push
clc
sub
sbb
outsl
mov
rcr
fdivs
xchg
jge
sbb
sbb
mov
dec
cmovs
mov
dec
jne
cmp
dec
das
add
jmp
jbe
jg
push
pop
dec
sbb
inc
mov
jmp
push
adc
jg
jno
sbb
aas
adc
cmp
fidivs
fsubr
popl
mov
jecxz
dec
mov
fisubrs
mov
mov
cmp
std
dec
jl
or
jl
sub
pop
or
inc
pusha
xchg
popf
pop
sub
sbb
cmp
sbb
push
inc
cmp
mov
lahf
movsb
ffree
in
scas
cmp
das
in
lods
mov
push
addr16
sub
rclb
cmp
std
mov
jb
sbb
jbe
sbb
clc
or
fdivrl
lcall
dec
imul
adc
push
iret
push
jecxz
mov
fistps
dec
or
jnp
mov
mov
repnz
mov
popa
dec
shlb
xor
inc
das
pop
jle
dec
shrb
in
wrmsr
cwtl
dec
sarl
sbb
mov
sub
fisubrs
jne
mov
jo
pop
fucomip
push
es
lcall
xchg
push
cwtl
lahf
sahf
arpl
dec
push
inc
fsubr
inc
dec
sti
add
inc
imul
pop
lods
repz
sub
lock
incl
jmp
ret
inc
call
pop
mov
incl
push
icebp
fnstenv
push
flds
les
cld
pop
jne
cld
pop
clc
adc
pusha
mov
lahf
je
jg
sbb
repz
mov
call
inc
sti
cmp
js
daa
inc
inc
jo
adc
loopne
lret
inc
push
ret
ret
ljmp
insb
add
lret
inc
jg
push
mov
dec
loope
inc
mov
call
inc
cmp
mov
sbb
pop
sbb
lret
inc
adc
push
les
or
dec
jg
adc
cmp
test
incl
mov
mov
rol
aam
and
popa
mov
aam
pushl
cli
ja
mov
rclb
cld
aas
inc
icebp
mov
pop
or
pop
into
sbb
dec
addr16
add
jmp
and
jnp
inc
xor
fnstenv
pop
jmp
cwtl
addr16
arpl
in
jp
cmp
sbb
jne
jl
inc
jmp
mov
testl
adc
push
ret
cmpsb
shrb
lret
gs
leave
push
das
cld
out
fcmovnu
xor
sub
hlt
outsl
sbb
or
push
call
clc
xor
lock
loopne
adc
in
xchg
mov
lods
xor
cmp
clc
mov
mov
mov
sub
sti
cmp
xor
push
cld
fisubrl
loope
pop
fs
arpl
xor
jmp
arpl
xor
fdivrl
lret
shrb
push
sarb
fs
lock
xor
iret
imul
push
movsl
xor
int3
push
loope
xor
inc
outsl
xor
sbb
les
xor
mov
jl
jge
popf
ss
dec
std
pushl
test
shll
movsb
sbb
cs
clc
sbb
cld
clc
mov
xchg
std
aas
xchg
push
mov
gs
mov
rcrl
arpl
sub
test
pushl
inc
iret
js
xor
sub
bound
movsl
dec
mov
lahf
or
sbb
jae
sbb
xchg
cmp
jno
push
and
dec
mov
push
mov
mov
dec
in
ljmp
jne
lret
clc
jmp
in
sti
pop
mov
push
push
inc
fwait
and
dec
sbb
movsb
int3
cltd
pop
out
js
out
push
push
out
test
ljmp
sbb
dec
lcall
mov
mov
push
adc
test
fdecstp
and
add
decl
sahf
or
jns
mov
mov
stos
test
fsts
icebp
xor
pop
inc
jmp
or
popa
shrl
pop
or
jb
mov
lcall
cmp
or
cmp
imul
int3
mov
and
fdivrs
adc
adc
push
cmpsb
lret
mov
fwait
cmpsb
jnp
mov
or
js
lcall
mov
mov
sub
sbb
push
sbb
lcall
pushf
fdivs
cwtl
out
jle
aad
mov
decl
sbb
pop
push
test
pop
adc
push
jmp
inc
pop
mov
or
inc
bound
mov
test
pop
push
push
ret
hlt
mov
jne
mov
xor
mov
or
aaa
clc
pop
pop
xor
rolb
int3
inc
lret
pop
incl
push
insb
mov
mov
pop
xchg
sbb
sbb
lcall
mov
add
test
jmp
cmp
sbb
ds
mov
xorb
cmp
mov
push
push
xchg
daa
sub
aas
sub
pop
jle
add
mov
pop
push
lock
fstl
pushl
fidivl
call
xlat
in
mov
mov
dec
push
xchg
mov
xor
je
pop
push
xchg
jmp
add
add
lcall
jmp
jmp
cmp
cs
int3
xchg
mov
inc
sbb
iret
cmp
pusha
outsl
mov
call
mov
cmp
dec
cmpsl
popa
and
pop
dec
mov
cld
fisttpl
lods
and
or
dec
and
enter
insb
pushl
xlat
lock
sahf
mov
push
mov
neg
cmp
lods
bound
sbb
decl
lret
xchg
and
cs
or
pop
mov
lea
ds
into
daa
iret
and
adc
clc
pop
loopne
scas
push
jg
sbb
add
add
mov
cld
addr16
hlt
lock
call
cmp
or
pushl
pop
in
xchg
sbb
clc
adc
in
fsubrs
sub
int3
test
lcall
cld
mov
xchg
sbb
sbb
sbbl
pop
mov
dec
pop
shlb
mov
push
shr
pop
cwtl
lahf
cmpsb
fldt
daa
or
loopne
fistl
decl
mov
test
adc
cli
jg
rolb
cwtl
sbb
ds
adc
pushl
iret
je
mov
test
fs
cwtl
jg
mov
clc
xchg
push
jg
dec
ret
jbe
mov
xor
cld
push
das
or
scas
jbe
rcr
sbb
push
jns
or
test
dec
je
imul
jmp
sub
xchg
js
into
pusha
add
movsb
fdiv
aad
loopne
jg
leave
add
mov
mov
call
out
fdiv
cmpsl
sbbl
or
inc
popa
movsl
and
outsb
sbb
push
stos
jo
inc
pop
cld
push
jo
xchg
adc
shll
movsb
dec
sbb
jmp
lea
pop
stos
shlb
hlt
mov
das
cmc
inc
adc
xchg
add
mov
ljmp
in
arpl
pushf
lods
or
fs
test
cli
lcall
test
cwtl
fs
mov
scas
inc
popa
push
arpl
call
fs
xorb
and
fwait
in
ljmp
jne
mov
xchg
pop
and
xor
xor
aad
mov
insb
pop
push
ljmp
mov
out
add
mov
add
jecxz
ja
sbb
adc
lahf
pop
test
cli
movsl
inc
enter
loopne
pushl
dec
arpl
mov
cltd
mov
xchg
sbb
inc
mov
call
fcomip
mov
scas
testl
cld
test
rcll
sbb
pop
clc
decl
scas
leave
mov
add
pop
insb
mov
mov
xchg
call
push
jmp
or
mov
lcall
push
mov
jg
cmp
dec
cmp
insl
push
jmp
es
leave
fldt
shlb
clc
pop
mov
sahf
xchg
loop
inc
pop
in
mov
repnz
test
pop
ljmp
push
xchg
out
pop
pop
cmp
xchg
std
xchg
pop
and
xchg
or
xchg
aam
icebp
inc
aam
fucomip
das
cmp
lret
daa
xor
ja
mov
cs
or
sar
test
cmp
xor
iret
cs
cmc
and
pop
and
call
sub
mov
ret
pop
jp
ds
adc
test
aaa
mov
cmpsl
pop
sbb
mov
fcoms
in
cli
mov
jmp
push
push
jmp
sahf
jmp
sub
test
popf
subb
xor
mov
enter
pop
and
call
jg
loop
repz
jmp
bound
sarl
xor
fnsave
sub
nop
jo
mov
dec
mov
loop
add
push
loopne
dec
jg
hlt
stc
fimull
pop
stc
pop
and
mov
push
sub
pushf
inc
jecxz
in
jno
cmp
mov
dec
pop
mov
adc
pop
ljmp
or
loope
shll
jecxz
test
pushl
jmp
filds
jb
aad
lahf
and
mov
sub
ljmp
decl
clc
stc
sbb
sub
sub
mov
fcoml
icebp
shrb
or
call
aaa
lea
jge
push
xor
ljmp
orps
orb
mov
pop
jb
repnz
repnz
hlt
push
mov
mov
push
jne
les
loopne
shrl
shr
push
ljmp
lea
adc
or
pop
mov
add
pop
push
cmp
xor
mov
or
test
push
imul
mov
loope
sti
pop
clc
call
jb
sub
cmc
aad
pop
test
adc
jae
push
js
sbb
filds
jbe
inc
lea
aaa
inc
loope
lcall
sti
sarl
inc
and
adc
mov
test
mov
je
mov
sub
sbb
and
cmp
push
mov
jmp
sbb
mov
arpl
sub
imul
mov
pop
adc
adc
in
incl
mov
sti
adc
add
aas
and
incl
es
fimuls
mov
mov
mov
mov
cmp
jne
pop
ljmp
mov
xchg
shl
sahf
das
mov
call
or
or
fisubs
ret
inc
mov
pusha
movsb
and
incl
xor
add
ror
mov
imul
dec
dec
incl
push
push
push
hlt
pushf
dec
ret
sub
inc
mov
popf
lret
adc
stos
pop
int3
das
test
push
xchg
movb
fsubp
xor
sbb
ljmp
mov
movsbl
dec
das
cmp
jl
insl
ficoml
xchg
in
or
push
repnz
fimull
cmp
insb
jecxz
ficompl
cltd
xor
mov
cmp
adc
adc
inc
ljmp
and
push
or
jne
push
or
fistpll
mov
mov
push
cli
or
repz
call
add
jb
imul
outsl
std
jmp
les
stc
data16
repnz
cwtl
cmpsl
inc
dec
pop
push
rcrl
cmp
shr
inc
jge
sbb
not
movsb
push
mov
cmp
cs
aad
popa
pop
and
enter
iret
pushl
das
push
add
sbb
lods
mov
xor
fstps
int3
sub
push
shrl
and
pop
fldt
push
bswap
test
or
test
rorb
lea
adc
std
push
jne
push
lcall
int
pop
inc
decl
xchg
sub
pop
ja
das
push
hlt
lods
pop
cmp
ljmp
push
mov
sar
push
jle
cmp
rolb
sub
xchg
fcompl
mov
ljmp
push
push
cmc
jecxz
sub
cmp
push
rcll
out
jno
nop
cld
hlt
pop
test
sub
push
mov
out
ror
mov
ds
fcmove
and
mov
sbb
lock
decl
dec
pushf
add
dec
mov
fs
pushf
and
and
in
mov
es
push
inc
mov
pushl
jl
shll
ret
js
sbb
in
idiv
and
call
call
ss
loope
jo
sbb
sti
out
mov
test
js
or
dec
cld
sbb
or
dec
mov
fsqrt
sub
popf
adc
push
das
icebp
incl
cli
pop
sbb
jge
ret
in
shrb
pushl
in
std
lcall
cmp
hlt
push
mov
add
sub
jge
pop
sub
das
lea
adc
lods
lea
or
dec
icebp
ss
jmp
testl
icebp
popf
add
mov
cmp
aam
outsl
mov
adc
jle
xchg
adc
scas
ljmp
rorl
mov
mov
inc
icebp
loopne
rclb
cmp
icebp
dec
push
xchg
inc
push
push
push
inc
fildll
inc
jno
xlat
push
inc
icebp
mov
xor
jecxz
pop
push
xor
inc
in
jg
fimuls
jbe
pop
or
mov
cltd
jb
mov
mov
clc
fdivrs
jecxz
outsl
cld
call
cli
add
add
cmpsb
sub
xor
push
mov
mov
dec
int
mov
ljmp
shl
roll
mov
push
ljmp
fisubs
incl
pop
cmp
lock
addb
int3
in
gs
mov
mov
cld
outsl
cmc
loope
xor
jnp
loop
mov
enter
jg
jg
jmp
addr16
mov
js
push
ljmp
ja
mov
cmpsl
das
dec
ja
xchg
push
cli
mov
mov
cmp
inc
mov
int
push
cmp
jmp
in
mov
ljmp
adc
pop
ss
jmp
decl
es
push
pop
mov
dec
sub
stos
sub
and
pop
ljmp
xchg
lock
sbb
jmp
sbb
inc
loope
jmp
fisubl
jno
sub
fiaddl
aad
ds
cmp
xlat
ficoml
cmp
sbb
xor
adc
push
ds
sbb
in
test
aam
imul
jle
mov
jmp
mov
inc
fsubl
iret
aad
sub
push
dec
cmp
mov
adc
and
push
push
lds
sbb
hlt
pop
jcxz
mov
xor
xchg
fistpl
sbb
xchg
incl
in
or
sub
mov
sbb
adc
push
icebp
std
fsubr
dec
rorl
cmpsb
inc
decl
or
std
in
xchg
dec
jle
stc
jno
inc
and
idiv
pushl
jecxz
in
test
mov
mov
mov
xlat
mov
sbb
insb
outsl
decl
into
mov
subb
push
mov
inc
loopne,pn
das
push
clc
incl
xor
in
mov
adc
jne
subb
js
jmp
loope
testb
lret
mov
mov
xor
sub
inc
push
adc
jmp
into
test
push
push
push
decl
or
adc
mov
pushw
xchg
and
xchg
lods
and
push
enter
inc
aas
or
xor
out
jbe
daa
or
clc
pop
call
in
xor
xchg
shr
mov
jle
popa
push
ds
addr16
ss
filds
daa
cmp
int
lods
jg
jmp
xchg
js
push
push
movsl
jmp
jns
call
or
movsb
int
xor
and
into
pusha
mov
mov
mov
outsl
mov
jl
mov
adc
cld
sub
add
testl
cmc
test
jg
mov
or
add
xor
decl
inc
data16
or
add
pop
inc
jmp
sahf
loope
add
adc
adc
bound
dec
push
mov
inc
push
arpl
jae
mov
cmp
sub
and
sarb
out
jmp
and
mov
add
call
out
pop
add
insb
sbb
push
add
mov
hlt
int3
mov
cmp
incl
adc
int
in
pop
or
mov
pop
adc
and
and
push
xchg
clc
add
icebp
jmp
insb
or
xchg
lea
fmull
jp
cmp
push
mov
push
mov
adc
int3
sahf
lret
fcompl
lret
pop
xchg
clc
ljmp
sar
jl
je
data16
fldl
or
out
lcall
mov
push
fists
andl
aaa
test
push
jnp
jae
imul
stos
insl
nop
mov
repnz
sub
int3
inc
in
or
xor
jmp
bnd
js
pusha
mov
mov
in
mov
jmp
inc
dec
hlt
lret
out
xchg
jecxz
jg
addr16
fsubs
jg
mov
and
adc
aam
inc
pop
lods
push
mov
mov
incl
imul
es
ja
shl
sbb
int
pop
clc
pop
std
pop
jecxz
mov
in
stos
inc
fsts
les
dec
cs
mov
jo
adc
fistpll
nop
or
arpl
and
cmpsl
mov
call
inc
xor
je
push
aas
les
inc
aad
push
std
push
dec
movsl
sbb
pop
add
mov
inc
and
call
mov
jb
and
inc
jb
cmp
loope
lret
das
je
and
pop
nop
call
lea
jne
and
lret
inc
sub
pushf
pop
xor
or
jne
cmpsl
ja
stos
jb
sbb
pushl
or
lret
sar
sbb
lret
sub
into
test
jmp
and
sahf
inc
adc
cmc
or
jp
push
inc
lods
test
ds
in
lcall
js
push
out
adc
fnsave
sub
cwtl
repnz
stos
cmp
pop
ljmp
je
cmp
imul
and
push
call
pop
ret
je
push
les
repz
negl
enter
inc
insl
outsb
push
ljmp
sbb
in
lret
push
lret
jne
js
stos
sbb
mov
lcall
aam
mov
pop
or
mov
fcompp
fs
mov
mov
push
sbbl
and
sbb
mov
cld
les
xchg
iret
push
clc
leave
shl
cli
sbb
adc
addl
sub
call
filds
in
mov
je
es
cld
call
jmp
dec
pop
ljmp
rcrl
jp
mov
push
or
fisubrl
movsl
sbb
cmp
xor
jmp
push
int3
dec
clc
ret
clc
mov
dec
push
mov
pop
in
xchg
fs
aas
dec
xchg
loope
cmp
sbb
mov
fistps
ss
and
int
aad
call
enter
outsb
inc
mov
pushl
fisttpll
and
hlt
xchg
decl
xchg
sub
xor
jl
shrb
mov
pop
out
add
icebp
jg
inc
adc
push
adc
push
out
je
xchg
rorb
xchg
inc
lods
pushl
fs
jmp
je
mov
mov
xchg
push
pop
cmp
ljmp
or
arpl
pop
cmp
jg
ss
push
pop
push
movsl
popf
inc
jge
and
push
add
in
ds
enter
adc
js
lcall
ds
or
or
fidivl
dec
xor
incl
adc
cmp
sbb
or
movsb
jecxz
cmp
imul
mov
test
pop
fwait
add
fildll
leave
push
mov
jns,pn
jne
mov
cli
jns
test
movsb
mov
inc
pushl
add
pop
mov
push
xor
push
test
push
push
jl
adc
cmp
xchg
sub
or
into
or
add
das
pushf
add
lcall
fs
out
pop
xchg
cltd
push
mov
out
popa
in
in
push
sbb
sbb
or
cmp
lock
mov
jbe
es
pushl
inc
mov
and
aad
mov
adc
cmp
push
cmp
inc
lods
call
jo
dec
mov
lret
lods
adc
jns
ljmp
out
pop
sbbb
sbb
xor
push
movsb
jg
lea
sbb
push
pop
cwtl
dec
sbb
cmp
pop
xchg
test
in
pop
cli
jne
dec
sbb
cmp
sbb
or
or
lret
add
insb
xor
lcall
hlt
aam
or
jle
pop
inc
mov
ljmp
add
nop
idivl
ljmp
cmp
jb
mov
int
mov
adc
jge
in
mov
incl
in
adc
mov
int3
adc
lods
lds
repz
jl
popa
mov
sbbb
mov
filds
mov
xchg
lcall
push
addl
or
sbb
int
cmp
jg
pushl
js
pop
sbb
cltd
idivl
add
push
mov
adc
push
cmc
xlat
and
xor
push
push
mov
dec
out
call
das
cmc
lods
mov
pop
mov
mov
jae
ret
sbb
not
lea
pop
jl
mov
nop
ds
decl
xchg
push
dec
cld
push
ja
rclb
icebp
and
stc
dec
ljmp
clc
fucomip
ljmp
fimuls
jmp
and
mov
mov
gs
mov
loopne
jmp
fldenv
insl
adc
add
push
arpl
push
enter
pop
ljmp
out
int
ret
cmp
sbb
push
mov
sahf
insb
loope
sub
and
loope
adc
sbb
xchg
and
jno
mov
shr
sub
cmp
push
mov
sbb
xor
jg
stos
lea
xorl
pop
jge
in
shll
xchg
adc
fucomip
jmp
adc
cvtdq2ps
mov
jns
add
cmc
aam
xor
pop
xor
jmp
stos
popf
pop
fmull
mov
loop
push
and
scas
fdivrs
call
inc
adc
adc
sbb
dec
aaa
push
call
divl
sub
xor
inc
jo
imulb
adc
push
test
decl
loop
pop
mov
movsl
jne
repnz
inc
cmp
sete
int3
and
push
adc
adc
cld
inc
aaa
cli
jg
push
icebp
cmp
and
add
mov
pop
mov
cld
mov
stos
mov
or
add
test
jb
addr16
xor
incl
inc
cwtl
in
jg
push
ljmp
mov
push
mov
jb
xchg
scas
test
fucomip
jg
push
jg
add
jno
and
push
idivl
incl
dec
insl
fdivrl
jno
stos
je
dec
inc
insl
pop
inc
push
mov
mov
and
or
out
ljmp
scas
sbb
sbb
fldenv
mov
stc
push
gs
sub
mov
lock
add
dec
cmp
mov
pop
call
cld
xor
out
xor
xchg
cmp
int3
lods
dec
mov
pop
inc
aam
or
sbb
jecxz
in
pop
rcll
cld
push
test
in
inc
fistpll
xchg
xor
pop
ss
push
in
cld
cmp
mov
dec
das
loop
jns
dec
cmp
loope
pop
jge
inc
sbb
shlb
pop
fadd
jmp
sub
hlt
jg
scas
rcl
push
jmp
ret
add
dec
adc
lock
jmp
push
cltd
aaa
mov
cmp
jecxz
xlat
mov
int
loope
and
mov
and
mov
ret
sub
jge
jmp
inc
add
cltd
add
push
mov
lea
xlat
inc
call
clc
fistps
jp
mov
iret
xorb
mov
addr16
andb
inc
call
push
add
xorl
add
lret
or
add
jp
inc
fidivrl
test
mov
aas
pushf
lds
clc
jmp
loopne
sbb
sub
sub
jnp
ret
xor
decl
pop
or
clc
inc
push
sbb
icebp
pop
int3
or
clc
jb
xor
decl
std
cld
enter
sbb
js
pop
test
pop
or
stc
jle
incl
lcall
clc
lret
insb
jo
inc
in
mov
push
repz
sbb
and
clc
std
leave
adc
lea
jne
pop
call
testb
subl
pop
jg
lods
mov
inc
or
push
sub
add
out
movsb
adc
pop
loopne
seto
mov
popf
push
lret
call
mov
push
daa
jnp
jp
sbb
mov
repz
iret
xor
mov
mov
dec
mov
pop
sbb
icebp
enter
mov
in
call
push
out
mov
arpl
mov
lret
fcomps
es
je
jecxz
out
jecxz
cld
jp
adc
cld
jmp
xor
es
mov
cmp
pop
mov
pop
decl
aaa
pushw
aad
sbb
xor
add
lea
fs
das
mov
idivb
xchg
sub
adcl
lcall
ljmp
or
rclb
cmpsb
pop
loop
add
fwait
xor
icebp
and
aam
sbb
xchg
inc
dec
cmpsl
cld
adc
adc
pop
lds
jg
push
or
das
enter
mov
js
shlb
scas
jns
outsb
mov
sbb
fs
decb
sbb
imul
add
clc
ljmp
pop
rcrl
incl
dec
cld
adc
aad
mov
incl
out
add
sub
fbstp
mov
outsl
cwtl
jp
mov
rorl
xor
test
xor
push
adc
bound
call
insl
fnstcw
jmp
cli
ds
icebp
call
rcll
outsl
hlt
mov
in
loope
push
repz
in
inc
sbb
fidivl
pushl
mov
insb
cmp
mov
cmc
dec
push
sbb
cmc
push
ret
stos
inc
jne
sub
cld
mov
mov
lods
sbb
hlt
lods
mov
add
push
in
insl
rorb
cmp
ss
das
add
add
roll
pop
lea
mov
push
incl
add
xor
xchg
in
or
fcomps
pop
shl
adc
jae
pop
jae,pt
repz
call
xchg
mov
into
mov
test
and
push
push
cmpsl
adc
mov
and
test
sti
cwtl
add
and
test
stos
movsb
outsl
lock
test
in
dec
rorb
mov
fmuls
jae
push
push
mov
and
mov
lcall
push
insb
jecxz
mov
ljmp
or
mov
mov
loopne
push
incl
ficomps
xchg
mov
adc
cmpl
jb
mov
sbb
ljmp
jne
clc
sbb
lcall
roll
push
test
fisttpll
inc
call
add
push
xor
jg
push
stos
sbb
ja
cltd
mov
aaa
jge
push
nop
inc
xor
icebp
push
pop
adc
std
mov
and
inc
in
inc
mov
sbbl
hlt
call
outsb
dec
mov
add
sub
dec
mov
clc
mov
xor
push
xchg
push
dec
adc
jmp
pop
or
les
nop
flds
pop
push
push
call
cwtl
test
in
cltd
sub
ret
xor
add
movsl
ss
daa
mov
adc
shlb
sub
fdivrp
incl
jecxz
jne
push
imul
and
mov
fdivl
lods
enter
lea
std
decl
les
fstl
cmp
repnz
pop
call
enter
cmp
cltd
lret
pop
call
xor
add
lds
or
rorb
inc
call
push
outsl
pusha
dec
pushf
mov
mov
xor
inc
gs
cmp
jmp
sub
xor
mov
fsubrp
add
ljmp
sbb
adc
icebp
xor
aam
jl
unpcklps
cmp
jecxz
jecxz
imul
mov
in
mov
xchg
popf
pop
pop
mov
loopne
mov
incl
in
imul
adc
xchg
xor
loop
shrb
or
int3
lea
lds
inc
inc
lods
push
cs
loopne
push
rclb
clc
decl
inc
dec
rolb
jnp
es
lcall
pop
decl
es
gs
or
adc
mov
add
orb
in
sub
ss
cmpsl
xor
push
push
and
or
ret
out
sub
add
std
movsl
ljmp
jp
jns
mov
xor
fdivrs
ljmp
lods
pop
mov
fs
dec
push
out
adc
ror
lea
pop
lcall
sbb
sub
in
movntq
or
add
lds
cmpsl
inc
mov
inc
add
mov
ret
cld
lds
mov
pop
fimull
xchg
dec
test
lds
repnz
test
dec
and
add
daa
mov
xorb
sbb
ds
and
sbb
mov
xchg
out
or
mov
xchg
add
sbb
add
xchg
xchg
in
fisubl
push
push
adc
sar
sub
popa
xchg
clc
sbb
das
cld
jmp
outsb
push
in
sbb
add
cmpl
mov
insl
shl
inc
popf
mov
les
jbe
mov
je
lahf
cmp
arpl
jb
mov
in
call
clc
cld
out
jge
outsl
je
mov
inc
neg
inc
mov
pop
or
inc
icebp
inc
xchg
jmp
push
hlt
push
mov
inc
adc
push
adc
fdivr
das
adc
loop
and
icebp
cmp
sbb
ljmp
pop
loopne
mov
mov
cmp
loop
xor
loopne
cmc
decl
test
adc
in
pusha
pop
call
mov
imul
push
add
jnp
test
ljmp
adc
jb
aam
cmc
jne
incl
lcall
mov
sbb
xor
add
add
int3
sub
push
sub
ret
dec
pusha
mov
push
out
mov
or
lods
or
ljmp
mov
mov
fsubs
mov
insl
xchg
clc
push
mov
cmp
dec
mov
shl
add
or
mov
add
push
and
inc
dec
fmull
movsl
dec
ret
pop
mov
dec
push
push
and
pop
mov
insb
data16
jmp
jo
push
outsl
cmc
lret
push
mov
adc
fstps
sub
clc
cld
stos
insb
dec
fdivrl
notl
rolb
sub
lcall
insl
ja
pop
and
fistl
std
jg
sbb
in
cltd
jle
inc
jne
je
jno
mov
and
mov
stos
mov
xor
xor
mov
inc
add
js
dec
push
in
sti
dec
mov
or
shr
call
call
pop
push
inc
adc
pushl
inc
xor
idivl
outsb
mov
dec
jno
jne
jbe
test
je
xor
xchg
xchg
mov
andb
jl
adc
nop
cmp
sar
jp
shl
mov
jecxz
decl
adc
mov
es
mov
mov
xchg
mov
and
sub
dec
adc
mov
fldt
mov
test
pop
mov
jmp
test
int
sbb
jns
xor
push
jg
sub
mov
je
add
xor
std
das
andb
pushf
mov
popa
dec
leave
dec
test
je
test
clc
in
enter
test
ljmp
popa
inc
mov
adc
and
in
gs
outsl
incl
xlat
jecxz
loopne
mov
loop
in
loopne
cmp
inc
mov
repz
jmp
pop
rol
push
add
add
inc
sbb
enter
insb
enter
pop
mov
call
sbb
hlt
not
sbb
and
push
jle
je
decl
adc
fwait
ror
pop
pop
xchg
push
rdpmc
in
jb
xor
lcall
decl
ja
mov
test
movsb
mov
lret
lds
addl
push
es
out
mov
lcall
popf
enter
outsl
movsl
mov
dec
push
icebp
lcall
sub
insl
push
dec
fldenv
in
mov
jne
nop
pop
jle
pop
jmp
arpl
mov
lods
dec
cmpsb
insb
ret
jp
outsb
out
push
add
in
add
hlt
das
hlt
xchg
cwtl
out
cmp
push
sbb
push
sub
adc
pushl
fs
pop
int
cmpb
inc
es
and
cmp
push
ficompl
jge
mov
pop
fs
push
inc
mov
out
xlat
xchg
push
pop
in
mov
add
pop
ds
jo
mov
pop
add
push
lods
ss
incl
jnp
add
inc
cmp
jl
mov
cld
jmp
dec
in
add
cld
mov
gs
mov
rorl
aaa
sbb
add
xchg
or
lea
pop
cli
cmc
ja
sbb
xor
jmp
dec
sub
in
dec
imul
cmpsl
sub
fstl
cmp
idiv
decl
xchg
rolb
add
jne
or
arpl
jl
add
and
jmp
loopne
add
cmp
sbb
pop
pop
add
jne
mov
lock
jne
ds
pushl
jne
cs
pushf
sub
and
or
outsl
inc
adc
cmpsb
mov
in
pushl
cmc
movsl
jns
sbb
stos
or
mov
lcall
jg
add
and
in
push
inc
fnstsw
push
cmpsb
push
dec
mov
ljmp
mov
pop
daa
aad
out
pusha
aam
cmpsb
shrl
xchg
add
xchg
sbb
pop
pop
mov
mov
incb
pop
sbbb
or
fisttps
cmp
out
add
inc
adc
roll
pop
add
xor
cmp
pop
iret
aam
xor
dec
out
adc
loopne
add
mov
movsb
mov
inc
into
int3
mov
repnz
stc
imul
decl
inc
mov
daa
inc
sub
rolb
fsubrs
stos
sarl
sbbb
dec
mov
movsb
cld
jmp
insb
dec
dec
lods
xor
into
push
fcmove
add
out
add
mov
repz
fildll
in
sub
xor
ljmp
call
fdivrp
cmpl
imul
loopne
mov
lods
sub
jb
lcall
cwtl
popa
in
ja
and
es
imul
cmp
loope
xchg
mov
pushl
imul
movsb
jg
xchg
sbb
jmp
sub
lock
test
mov
inc
xor
jmp
dec
stos
das
xor
je
or
push
jmp
jecxz
test
imul
mulb
jne
push
negl
dec
or
das
and
mov
into
push
data16
cli
lcall
and
loopne
es
enter
and
sbb
ljmp
orb
xorb
shlb
test
decl
sbb
sbb
stos
std
dec
inc
sub
push
lods
jg
or
flds
mov
repz
push
insl
jb
lahf
lcall
call
and
iret
cwtl
jne
mov
cwtl
aam
push
fs
push
push
sub
lods
sbb
in
add
or
and
push
enter
call
insl
add
jp
shll
mov
repnz
mov
mov
call
push
movsl
cmp
sbb
jo
and
xchg
add
add
mov
cmp
sbb
decl
or
cmpl
sti
rorb
cmp
jmp
mov
jns
icebp
or
mov
jo
sub
cmp
inc
daa
fcmove
adcl
in
clc
aas
in
out
ss
push
mov
and
sub
mov
das
jmp
and
mov
mov
lods
push
jmp
push
cmp
jle
push
loopne
sbb
mov
daa
fistps
loopne
jns
idiv
fistps
inc
ret
fisttps
mov
fnsave
and
add
loopne
pop
int3
aas
aaa
and
pop
imul
jp
js
mov
mov
inc
sub
push
fdiv
out
incl
jp
lock
adc
xchg
shrb
sub
mov
imul
jno
cmp
mov
sti
push
fwait
lcall
pop
jp
mov
int3
xorl
inc
mov
mov
sub
dec
leave
push
ss
xchg
loopne
std
lret
pop
clc
push
jmp
lret
push
add
ret
rcr
mov
inc
inc
mov
cld
dec
xor
pop
mov
mov
mov
lret
push
pusha
pop
mov
fcompl
jmp
movsb
pushl
pop
dec
add
pop
or
sarb
xor
xor
call
fidivl
xchg
aad
shll
mov
sti
incl
idivl
ss
push
hlt
push
mov
pop
xchg
inc
push
adc
jg
inc
bound
inc
test
pop
mov
das
jno
mov
sub
mov
lcall
push
xor
mov
push
into
cmp
adc
pushf
roll
incl
sub
mov
and
or
je
dec
movsl
mov
adc
mov
outsl
hlt
jmp
mov
mov
sbb
pop
xor
push
decl
cmp
mov
sbb
pop
cld
mov
ss
add
jbe
pop
and
adc
leave
mov
jl
adc
shll
inc
nop
clc
xchg
ret
mov
sub
push
mov
jle
push
incl
movsl
xor
mov
gs
sarl
dec
out
dec
into
xchg
inc
adc
or
and
mov
shll
push
fsubrs
stos
cs
pushl
pop
mov
lret
mov
xchg
cld
mov
ss
mov
aas
push
sti
or
jg
sahf
cmp
mov
pushf
filds
popf
ljmp
stc
icebp
pop
inc
es
test
dec
mov
clc
pop
or
inc
pop
adc
add
hlt
mov
mov
xchg
in
rcrl
or
dec
loopne
loop
test
or
outsl
dec
out
and
notl
in
mov
mov
mov
test
ficoml
incl
in
cs
xchg
cmpsb
push
aam
testb
fistps
xor
mov
shll
dec
hlt
rol
lock
sbb
adc
push
push
sub
lahf
into
xor
in
pusha
mov
lcall
and
or
dec
decb
xor
out
cmp
add
mov
es
or
jg
stos
add
test
add
inc
mov
mov
cmp
call
dec
out
cmp
jo
ja
icebp
out
sbb
cmc
call
outsb
aaa
xlat
ret
lcall
cltd
insl
sub
ljmp
sub
jecxz
test
fisubrl
popf
cmp
movsl
out
cltd
xchg
push
pop
lcall
bound
cmp
dec
mov
xlat
add
pusha
bswap
cmp
das
lock
subb
push
cmp
sbb
mov
or
outsb
cmp
jmp
insb
cmp
cld
call
mov
pop
cmp
sti
icebp
cld
or
add
mov
inc
test
cmp
cli
jmp
or
js
or
sbb
dec
inc
sahf
or
jnp
mov
add
ror
out
push
stc
fsts
xchg
inc
or
ss
in
addl
rcl
loopne
lds
mov
sbb
ljmp
jmp
xchg
xor
xchg
gs
leave
dec
jge
push
decl
popl
lcall
pusha
push
pop
dec
rolb
enter
test
mov
mov
jmp
inc
movsl
mov
or
test
fildll
and
popf
sahf
fistpl
fdivrl
fcoms
pop
cmp
clc
aaa
adc
inc
add
mov
add
sub
push
mov
cld
mov
mov
cmp
push
adc
jb
adc
mov
imull
loopne
or
and
les
adc
cmovno
fbld
cmp
or
push
lcall
sbb
call
cli
push
sub
jl
adc
cltd
adc
aam
arpl
icebp
les
xorl
call
xor
iret
mov
pusha
xchg
sbb
out
lods
push
or
decb
inc
dec
ficoml
insl
roll
inc
pop
mov
pop
pop
es
dec
and
test
jne
push
inc
fnstsw
jg
ljmp
cmp
rclb
push
adc
movsl
push
lcall
aaa
sub
add
test
push
mov
decl
add
mov
pop
je
test
sbb
call
call
xlat
rorl
ret
mov
fs
push
mov
movsb
in
adcb
adc
shlb
mov
cmp
ret
dec
fisttps
cmp
pusha
mov
aad
imul
push
push
inc
mov
cli
decl
mov
add
push
iret
pushf
and
mov
fildl
cld
lcall
adcl
sub
loopne
and
xor
decl
into
or
mov
adc
dec
repnz
xor
and
pushf
das
lock
sub
sbb
in
pop
mov
push
xlat
orl
lock
es
mov
out
in
test
cmc
lds
sahf
psubsb
jge
and
jg
les
test
jns
dec
mov
pop
sub
xor
lods
int
mov
cmp
pusha
fdivs
jae
mov
pop
mov
and
jb
lock
cmp
push
xchg
cli
incl
push
divl
sub
es
lds
and
push
cwtl
xchg
xor
adc
rol
xor
hlt
mov
incl
inc
push
add
jae
add
mov
mov
sbb
mov
jg
arpl
mov
xor
repz
clc
dec
push
xor
or
cmp
dec
in
or
xor
sbb
dec
movsl
push
xchg
lret
cmc
xor
lods
das
rol
xor
dec
xor
add
mov
decl
sti
or
adc
mov
push
jmp
mov
push
push
movb
lea
out
icebp
fwait
push
add
jmp
and
and
mov
test
in
cmpsb
xlat
aaa
and
and
rclb
outsl
cmpb
lock
jns
jbe,pt
push
pop
ja
add
fs
lahf
dec
pop
pop
stc
insl
icebp
incl
xor
pop
daa
sbb
push
pusha
inc
jecxz
decl
imul
dec
ret
popf
add
inc
pusha
or
mov
jg
ret
or
xchg
push
jno
dec
xchg
fs
fs
jg
xor
adc
and
insb
sar
push
cli
jnp
je
sub
jg
call
lea
jecxz
mov
xor
mov
ds
jp
pop
je
cmp
or
test
rcrl
sub
sbb
jmp
in
ljmp
and
pop
inc
jge
push
testb
or
mov
jo
fucomip
push
sbb
imul
arpl
push
dec
sbb
sbb
bound
pushl
clc
jmp
rolb
fcompl
test
jecxz
movsl
fildll
out
lods
enter
push
mov
stc
out
push
lcall
mov
cmp
loop
in
out
call
or
jmp
xor
mov
aam
sbb
push
popa
add
add
fimull
fidivs
ljmp
call
push
loope
clc
lods
rorb
adc
mov
pop
test
fsubrl
paddusw
std
lahf
shlb
xchg
sbb
addb
in
jecxz
push
mov
and
dec
daa
mov
loopne
ljmp
gs
lcall
mov
xor
cltd
push
inc
mov
enter
test
ljmp
test
ret
jg
dec
and
cltd
inc
lods
fildl
cmp
in
pushf
push
lret
lret
mov
sub
jmp
sub
pusha
xor
mov
div
mov
mov
test
jno
add
push
lods
adc
xor
call
rorl
in
enter
add
cmp
test
jae
aaa
clc
incl
inc
or
inc
cmpb
jmp
pop
insl
rorl
sub
jg
das
jnp
das
and
loopne
pop
jo
add
jl
out
ret
popf
pop
jg
lcall
jne
roll
inc
cmpxchg
mov
int3
sarl
incl
push
sbb
push
js
lret
fprem
pusha
push
test
ja
xlat
jb
cmp
ja
mov
decl
mov
stos
cmp
addr16
pop
add
pop
jb
popf
jg
jae
push
mov
pop
popa
adc
push
jecxz
mov
sub
decl
cld
lcall
cmp
sbb
or
pushf
je
inc
pop
jp
sbb
add
adc
xchg
decl
add
or
and
cmpsb
les
test
lds
inc
incl
and
adcl
inc
add
cmp
add
decl
mov
int
jo
cmp
or
cmp
ds
pop
fs
mov
adc
into
pop
xchg
imul
pop
mov
sub
jmp
adc
mov
je
jl
out
insb
das
cmp
push
std
lods
daa
cmpsb
dec
lea
sbb
shlb
jae
lcall
ljmp
push
lret
sbb
nop
lahf
inc
fldenv
stos
cmpsb
aaa
cli
in
or
movsb
mov
jmp
lret
cmp
fnstsw
mov
lret
fimull
or
in
nop
xor
adc
test
lods
dec
outsl
jg
sti
push
scas
movsl
or
out
inc
leave
sub
in
adc
hlt
cltd
aas
sbb
negl
push
and
sub
out
fimuls
inc
mov
stc
gs
notl
cwtl
idiv
jmp
ficoms
sar
jecxz
inc
popf
or
insl
pusha
lods
out
push
jp
push
popf
xor
jg
out
imul
sub
add
cmp
cmp
sarl
scas
jmp
adc
sbb
outsl
cs
sarb
outsl
sub
mov
out
roll
or
xchg
out
or
push
clc
adc
scas
movsl
pop
cmp
ja
aaa
out
test
incl
sub
and
lea
jne
adc
adc
push
pushl
notb
imul
sub
es
out
mov
inc
repz
je
dec
xchg
movsl
sbb
sbb
sbb
ljmp
inc
sbb
jg
inc
cmpl
push
fmul
imulb
push
inc
jo
mov
incl
xchg
lret
cmp
ljmp
add
hlt
aaa
sub
xchg
leave
mov
lods
inc
cmpsl
out
mov
popf
pop
call
cmpsl
adc
cmpsb
rol
mov
cmp
loopne
pushl
lods
fs
dec
int3
lahf
mov
test
out
test
aam
jg
fdivl
insb
outsl
insl
pushf
xor
outsl
in
dec
pop
jge
pushf
mov
mov
decl
lret
cmpsb
or
sbb
ljmp
out
xchg
and
mov
ljmp
sbb
cwtl
add
sub
je
fidivs
cmc
lock
or
add
or
mov
loopne
ret
push
mov
mov
jle
pop
or
or
call
pushl
cmp
mov
mov
mov
bound
int3
sub
pop
call
xchg
inc
adc
inc
outsb
jo
rcrl
pop
pop
mov
aam
pop
adc
adc
mov
jp
cmp
loop
xchg
inc
add
inc
leave
fbstp
add
dec
adc
pop
cli
add
mov
mov
ja
cmp
cltd
and
nop
adc
fistpll
lcall
dec
icebp
addr16
push
aam
ja
dec
xchg
fstp
repz
sub
mov
jb
icebp
ds
mov
pop
scas
pushf
xlat
ja
and
mov
std
sub
or
fldln2
les
dec
push
insb
andb
test
ljmp
or
or
stos
jmp
push
push
movsl
es
mov
xor
jo
jg
stos
xorb
adc
jb
nop
ret
nop
inc
sbb
mov
cmp
andl
dec
call
clc
sbb
push
rcll
cs
fldenv
aam
pop
fmull
lcall
outsl
sbb
ret
rolb
pusha
nop
mov
mov
xorb
mov
cwtl
adc
pop
xor
ljmp
fmuls
dec
mov
icebp
mov
jnp
xor
call
adc
fs
stc
and
out
jne
mov
mov
xchg
jmp
or
in
fildl
or
insl
xor
sub
pop
lcall
mov
movl
clc
in
int3
xor
jmp
clc
decl
and
mov
add
jb
mov
mov
mov
mov
sbbl
xchg
or
fisttpll
popf
jo
sbb
mov
add
mov
repnz
js
cmp
call
ljmp
xor
add
xchg
sub
add
inc
xor
ljmp
in
adc
xor
adc
pop
clc
lds
mov
rclb
xchg
mov
and
aaa
mov
sbb
pushf
xchg
jo
imul
adc
xchg
cli
inc
cmp
adc
fucomip
inc
lea
aam
andl
add
xor
or
popa
mov
mov
push
inc
push
pop
std
push
cli
loopne
xor
cmp
clc
lcall
or
repnz
adc
inc
icebp
inc
add
mov
in
xchg
cmp
sub
cmp
shlb
shrb
adc
jmp
or
rorl
orb
ud0
and
mov
dec
add
or
push
stos
sub
fbstp
rorl
dec
push
dec
adc
les
sti
jne
cli
incl
dec
enter
clc
outsl
ss
xor
lcall
test
icebp
lcall
mov
gs
fwait
jb
ror
mov
lcall
mov
push
sarl
push
pop
sahf
sahf
sbb
js
add
push
shl
call
test
mov
out
jmp
push
mov
test
mov
mov
mov
dec
lock
push
jo
pop
and
lock
pushl
andb
pop
mov
jb
and
jg
das
out
jle
inc
mov
mov
mov
and
push
ficoms
mov
add
xor
xor
push
xchg
int
push
shrb
cmc
ljmp
push
out
sub
mov
mov
mov
mov
mov
lea
cmp
popa
jge
cmc
das
lock
js
js
mov
jb
cmp
je
ljmp
inc
mov
adc
mov
add
dec
adc
lods
pop
push
pop
and
mov
out
mov
das
enter
adc
or
stos
loopne
push
pop
mov
lds
lcall
fsub
sub
pusha
cs
sub
inc
clc
mov
adc
movsl
loop
or
dec
sub
call
cld
cmp
xchg
jne
test
gs
adc
je
ds
jg
lds
in
add
iret
fimull
inc
out
dec
sub
add
incl
cmp
fdiv
adc
sbb
popa
jmp
subl
popa
and
sub
xor
mov
je
mov
xorl
cli
xchg
ja
lret
xchg
inc
and
clc
mov
stos
inc
in
mov
cmp
jle
sbb
pop
push
xor
clc
decl
push
cmp
shr
jl
add
xchg
clc
mov
rcrb
pop
push
std
pushl
mov
xchg
mov
scas
popf
mov
lret
push
shlb
push
pop
pop
mov
pop
pop
call
or
sub
mov
lds
sub
jg
dec
adc
aas
ret
loop
xchg
ja
in
cmp
out
out
jmp
push
call
xor
xor
movsl
sbb
hlt
aaa
pop
cli
subb
ret
cmpsb
scas
push
jne
rcr
icebp
incl
dec
cmpb
inc
rcrl
xchg
pop
jmp
inc
lea
std
and
aaa
xor
xchg
stc
pop
test
mov
idivl
cmp
ljmp
jge
xchg
hlt
adc
mov
scas
test
dec
sbb
lods
pop
xchg
cmpsl
or
mov
shr
adc
cmp
call
mov
adc
ss
push
inc
aam
das
pushl
xor
pop
imul
movsb
jl
mov
inc
dec
push
inc
pop
xchg
and
dec
cld
dec
push
jno
hlt
das
inc
ss
or
sbb
aaa
clc
mov
addl
mov
add
cmp
inc
mov
andl
test
shrb
push
adc
push
xchg
fimull
dec
pop
add
rcrb
mov
loopne
push
jmp
rcrb
add
subb
sbb
or
lcall
sub
push
push
bnd
xor
mov
pushl
call
sbb
dec
std
fnstenv
insb
movsb
insb
adc
pop
inc
cli
sbb
push
lret
and
fsubrl
lock
das
fucom
xchg
lods
mov
pop
sub
or
ljmpw
sub
push
xor
pop
lods
jmp
push
cwtl
sbb
mov
call
insb
push
movsb
cmpsl
clc
cmpsl
cmp
mov
fldcw
cld
or
jle
jg
and
add
out
sahf
fsubl
or
cmpsb
add
push
sub
call
test
push
lea
adc
sahf
addr16
and
gs
test
pop
icebp
mov
cld
mov
cmp
xor
in
add
pop
cli
ljmp
sbb
jge
cwtl
iret
xor
sub
push
imul
lea
data16
sbb
test
lahf
repz
inc
gs
cltd
stc
imul
outsl
icebp
ljmp
push
lock
mov
lock
int3
outsl
push
cmp
cmp
jb
adc
call
in
loope
push
sbb
xor
fucomip
sbb
lds
dec
jno
jae
nop
loop
test
push
mov
dec
and
mov
movsl
fs
shl
ljmp
hlt
lret
push
iret
sbb
gs
jmp
jge
popf
dec
mov
arpl
xchg
decl
or
lock
push
int
mov
sub
faddl
jnp
jg
in
fstpt
lret
mov
jmp
push
cmp
decl
adc
sub
mov
aas
je
mov
and
cwtl
push
inc
rcl
lods
add
mov
lcall
cld
sub
adc
imul
inc
and
push
xor
jmp
std
das
std
decl
pop
sub
ds
push
repnz
shlb
jne
mov
lcall
nop
mov
enter
enter
rorb
call
xorb
jno
push
inc
mov
push
mov
add
pop
mov
pushl
cs
cmp
add
mov
mov
cmp
enter
pop
je
decl
pusha
adc
sbb
fnstcw
fdivrs
or
sub
fucomip
adc
and
cwtl
mov
incl
mov
bound
adc
incl
stc
cmp
sahf
pop
daa
push
decl
daa
pop
push
jbe
mov
xchg
decl
jmp
push
mov
cmp
and
add
fmull
push
loop
ud0
les
mov
xchg
loop
add
pop
push
in
sar
inc
sti
icebp
clc
adcb
insb
jb
adc
loop
push
jg
mov
out
dec
push
movsb
push
dec
cmp
fidivs
adc
fucomip
pushl
dec
xchg
push
adc
cmp
mov
add
sbb
mov
lret
push
or
cmp
mov
mov
loop
mov
loopne,pn
mov
sub
ret
or
clc
pushl
in
bound
addl
out
push
enter
daa
test
insl
arpl
add
cmpb
jne
mov
adc
je
int3
in
decl
outsb
enterw
jmp
in
jnp
shl
inc
sbb
xchg
mov
inc
insl
xchg
sub
xchg
clc
das
icebp
add
or
shl
addb
and
aaa
cli
dec
sbb
push
das
out
daa
pop
arpl
stc
cs
jg
lea
arpl
or
xor
iret
out
pop
cmp
je
sbb
je
pop
sub
cmp
jb
sbb
mov
xchg
push
dec
jp
and
and
sbb
hlt
decl
in
add
dec
fwait
lcall
rep
fdivr
outsl
fstpt
sbb
inc
push
sub
mov
clc
call
decl
inc
and
push
xchg
jecxz
adc
pop
sub
stc
and
pop
jno
sbb
insb
xchg
int3
mov
sub
ljmp
icebp
pop
push
es
test
and
cmp
or
test
popa
orb
or
add
call
mov
mov
filds
pop
add
jne
rorb
cmp
shl
inc
ret
or
add
lds
xor
adc
add
test
pop
cmp
rcrl
out
inc
leave
xchg
rorl
jmp
mov
or
incl
pop
mov
cld
stc
addl
add
sub
add
je
sub
mov
decl
xchg
xor
roll
adc
lret
pusha
add
cmc
rep
cmp
aaa
ljmp
push
and
enter
mov
bnd
pop
push
add
lds
decl
jne
push
add
add
mov
into
sbbl
ret
lfs
add
mov
mov
test
pop
sub
sbb
sarb
push
push
sub
ret
or
dec
std
cli
ljmp
subl
ljmp
shrl
mov
adc
cmpb
mov
lret
mov
stc
or
xlat
and
xchg
sub
mov
mov
lret
add
enter
das
popf
inc
and
pop
cmp
push
nop
pop
movsl
outsl
hlt
das
in
cs
add
jl
sub
rorl
jmp
xchg
add
or
pop
popf
int3
bound
jg
push
add
add
icebp
and
and
sbb
jmp
push
or
add
cld
popf
jns
in
out
sahf
fdivl
mov
pop
sahf
call
movsl
in
sahf
lock
hlt
out
sahf
clc
jns
cld
loopne
lea
lock
push
insb
into
imul
inc
add
and
imul
or
ljmp
inc
lea
addr16
cld
lahf
jg
and
or
ja
rcrb
jo
out
aaa
xchg
lods
popl
sub
mov
inc
nop
fsub
or
xchg
lahf
cmp
sar
ljmp
cltd
cmp
outsl
add
pop
dec
mov
dec
pop
sbb
lret
arpl
mov
dec
sub
fisubs
ljmp
inc
pop
mov
std
test
mov
xchg
cmp
movsb
repz
addr16
jg
lcall
mov
sahf
adc
adc
adc
out
sahf
add
add
pushl
add
xlat
mov
out
mov
xchg
and
shl
inc
xor
and
cmp
movsl
jb
int3
jmp
add
add
adc
test
std
decl
loope
add
mov
pop
and
inc
ret
cmpxchg
pop
nop
decl
rcll
addr16
orl
cwtl
ret
and
inc
jmp
cld
decl
xchg
or
mov
jmp
sub
imul
xor
or
or
or
cmp
jo
pop
pusha
adc
shlb
lcall
ret
iret
cmp
inc
arpl
add
xor
lea
nop
dec
pop
int
mov
decl
sbbw
or
inc
pop
dec
cmp
sub
push
push
and
xor
incl
sbb
sbb
shrl
jbe
out
adc
ja
fstpt
jmp
pusha
and
jae
leave
mov
xchg
inc
xchg
call
or
ja
jb
xchg
insl
sbb
push
push
cmp
sar
call
add
test
loopne
adc
fsubl
aas
shl
cmpsl
mov
loop
xor
or
dec
xchg
decl
cld
xchg
and
add
subl
inc
sbbb
sbb
insl
call
mov
jmp
ja
and
ja
push
pop
jp
lcall
inc
dec
sub
lds
mov
ljmp
push
mov
push
je
xchg
inc
pop
lret
popa
cmp
mov
cld
sbb
adc
mov
mov
clc
rcl
shl
lds
lods
decb
jmp
enter
mov
shl
sbbl
dec
sbb
mov
jne
lods
rcl
or
inc
imul
inc
push
call
orl
mov
xchg
lods
inc
call
stos
ret
or
jle
add
sbb
jg
mov
dec
popa
or
or
lcall
mov
outsl
mov
or
lahf
cmp
mov
decl
or
xor
xrelease
pop
pop
push
pushf
adc
pop
adc
or
decl
shrb
pop
push
mov
aas
mov
test
jg
divl
mov
pop
popaw
or
shrb
mov
push
add
sti
push
mov
or
fisubrl
cmp
push
jecxz
pavgw
test
clc
jg
out
push
jo
lcall
add
addr16
and
clc
pop
sbb
fisttps
stos
jmp
adc
loope,pn
pop
xor
daa
jns
insb
sub
jg
jmp
mov
lods
or
pop
jl
mov
addr16
mov
add
add
and
jg
sar
jmp
mov
hlt
rcrl
jne
fisubs
or
inc
push
pop
push
incw
mov
cmp
jne
sbb
and
in
das
lock
inc
and
iret
inc
pop
push
push
aad
cmp
pop
push
ljmp
pop
bound
int
data16
fistps
push
jle
dec
push
pop
cmp
pop
clc
adcb
fnstsw
sahf
ljmp
push
aas
iret
clc
add
test
jne
ja
ds
xchg
notb
push
sbb
or
fisubrl
out
or
pusha
sahf
fnclex
ret
or
mov
add
std
pop
push
fidivs
out
int3
loope
sbb
movsb
jecxz
xchg
into
sbb
cwtl
cmp
mov
aaa
jo
hlt
fwait
add
jge
fwait
or
xchg
clc
rorw
cld
fldcw
fildll
add
pop
adc
fcoml
leave
stos
scas
or
jge
push
or
or
incl
lcall
out
adc
mov
add
xor
sbbl
arpl
xchg
jmp
dec
mov
pop
pop
pop
xchg
and
cli
push
sub
push
fs
mov
popa
mov
push
push
data16
lcall
pushl
xor
inc
mov
inc
add
sub
bound
pop
insb
insb
std
lcall
std
mov
mov
rclb
and
cmp
push
and
adc
push
ljmp
in
pop
das
sub
sub
daa
or
lcall
xchg
adc
test
lds
cli
mov
stc
loopne
scas
adc
insb
push
jmp
dec
inc
lcall
inc
pop
in
test
in
push
clc
insb
jo
jnp
or
lahf
incl
js
xor
jo
fadds
adc
mov
addl
jmp
imul
sahf
sahf
aam
mov
mov
fcomps
inc
in
dec
rclb
in
sbb
adc
cmp
xchg
addr16
rcl
sbb
pushl
fdivs
cli
xor
pop
sar
movsl
decb
push
xor
lcall
xchg
ljmp
push
jmp
lcall
add
mov
jmp
loopne
mov
mov
adcl
jmp
pop
sub
sbb
dec
dec
ror
aam
xchg
mov
and
aaa
cli
or
jne
frndint
sbb
es
jg
dec
pop
mov
and
add
add
cmc
cmp
mov
cs
lret
add
xchg
fldl
add
inc
or
fucomip
ja
cmp
inc
cmp
push
cmpsl
mov
lds
stos
test
stos
leave
jb
xchg
pop
fiaddl
in
dec
notl
popa
cli
inc
and
cmpsb
xor
adc
cltd
cmp
push
pop
lcall
mov
adc
inc
cmp
mov
aam
test
cs
imul
divl
ljmp
lock
movsl
mov
sub
sub
dec
cld
jl
add
adc
add
mov
inc
lcall
call
ret
fs
es
sbb
js
les
shlb
inc
cmpl
das
hlt
jno
sar
cmp
or
in
fwait
rorl
push
xchg
dec
out
push
incb
mov
mov
pushf
enter
push
dec
lds
lcall
or
sti
incl
add
pop
sbb
ljmp
in
push
stos
orb
jg
stos
loope
stos
xlat
out
pop
push
stos
das
fsubl
aas
dec
mov
xor
sub
and
pop
sti
out
inc
xchg
iret
or
mov
or
shll
adc
dec
nop
push
ljmp
mov
sub
sbb
popa
test
adc
inc
das
mov
cld
jg
das
fistpl
inc
lods
mov
mov
aam
out
pop
add
bound
push
dec
int3
aad
or
addl
push
cmp
dec
movsb
inc
add
adc
shl
push
pop
pop
icebp
sub
lods
dec
cmp
pop
jae
push
ficompl
sbb
add
outsb
adc
addr16
mov
ret
cs
inc
sar
lea
lock
fnstsw
notb
mov
sahf
dec
inc
xchg
movb
pop
inc
jbe
jne
clc
xor
push
pushl
and
push
mov
mov
iret
jecxz
jg
pushl
je
loopne
cmp
cli
in
mov
insl
pusha
in
pushl
adc
mov
jmp
xor
sbb
mov
mov
adc
lcall
mov
dec
cmpsb
pusha
cwtl
call
in
sarl
orb
std
mov
adc
divl
std
inc
or
loop
adc
sbb
imul
sbb
sub
loopne
mov
stc
es
stc
enter
push
pushl
rolb
add
ds
xchg
add
or
adc
std
jb
push
loopne
mov
pushl
dec
pushf
pop
or
sub
push
push
mov
je
adc
sarl
inc
out
lahf
in
pop
mov
jno
inc
decl
inc
adc
mov
jne
cmp
lods
daa
sub
add
xchg
and
cmp
mov
loope
incl
loop
repnz
push
mov
icebp
outsb
jb
decl
jge
sbb
ds
repnz
add
fwait
sub
dec
repz
pop
loop
ret
test
repz
push
je
daa
mov
pushl
sbb
data16
jmp
inc
or
add
fistpll
pop
pop
add
pop
mull
iret
roll
call
inc
add
ret
in
insb
sbb
nop
mov
mov
sbb
into
pop
pop
sub
jecxz
out
aad
dec
xor
cmc
pop
mov
add
dec
and
jmp
or
mov
sub
and
sub
shll
and
add
jge
pop
pop
sarl
push
and
imul
and
rolb
pushl
push
dec
or
add
cmp
dec
and
xor
cld
fidivs
adcb
or
ret
or
imul
call
lock
jb
pop
sub
jb
cmc
sahf
adc
mov
lea
mov
popa
add
stos
sub
adc
and
loopne
les
cmp
mov
jg
adc
mov
das
xor
ret
movsb
imul
or
mov
movsl
mov
sti
and
cwtl
add
adc
dec
mov
ljmp
dec
imul
cmp
jg
cld
dec
fstl
mov
xor
pushl
mov
mov
sbb
cwtl
inc
xor
jne
adcb
das
hlt
mov
inc
jp
cmp
jb
jp
mov
call
sbb
push
arpl
or
or
in
leave
lea
cli
jge
daa
jp
jg
jg
or
outsl
lea
stc
cmp
pop
pop
sbb
aam
push
jno
leave
lcall
pushl
xorb
xchg
inc
rcrb
jne
adc
sub
popf
movsb
lock
lcall
jo
das
das
jmp
lods
xchg
or
cmpsb
push
add
into
fimuls
ljmp
scas
adc
je
dec
pop
mov
int3
jg
je
push
cmp
clc
dec
fdivl
fsubrs
add
mov
daa
je
jne
sub
and
call
jecxz
and
outsl
sbb
repz
mov
flds
adc
jne
cmp
mov
jno
cli
pop
dec
fidivrl
scas
push
aas
push
cmp
divl
xchg
std
sahf
or
hlt
mov
rcr
push
into
ficoml
or
dec
pop
mov
jne,pn
mov
ljmp
std
test
aam
dec
mov
sbb
adc
push
fwait
mov
dec
mov
outsl
add
mov
ljmp
pop
mov
pop
push
gs
call
lcall
mov
ret
int
sbb
pop
fdivs
mov
je
mov
fnsave
jg
mov
mov
or
or
push
orl
pop
cli
decl
mov
data16
lret
jo
stc
xor
decl
iret
xor
call
sbb
insb
push
shll
out
or
inc
inc
sbbb
pop
mov
cld
cmp
gs
rcl
ljmp
cmp
je
mov
out
adc
jmp
iret
sub
loopne
fidivs
push
jl
je
mov
lods
xor
sti
jg
ss
decl
add
push
dec
add
or
add
pop
js
pop
lods
lret
sbb
sbb
dec
std
fstpt
daa
push
push
jne
sub
les
iret
stos
lea
in
xor
fisttpl
je
push
lcall
push
ja
and
inc
loopne
xchg
roll
mov
inc
mov
fstl
dec
int3
add
loope
pop
lds
cmp
push
xor
xchg
cli
incl
dec
xor
rol
aad
hlt
cs
dec
jp
inc
xor
xor
cmpsb
add
dec
cld
jno
inc
or
enter
and
mov
repz
mov
call
mov
dec
dec
jl
inc
jne
cmpl
push
inc
mov
and
or
adc
test
popf
or
dec
or
jbe
jns
adcl
jl
mov
insb
lea
imul
push
mov
inc
out
add
sub
or
es
push
push
cld
mov
inc
push
push
shrb
cli
cli
fnstsw
add
mul
push
scas
xor
call
add
inc
xlat
inc
jmp
outsl
sbb
call
incl
xchg
and
les
ds
and
add
jmp
mov
push
cmp
push
jge
sbb
inc
and
dec
sarl
jmp
les
test
mov
mov
mov
cmpsb
sub
and
into
sti
pop
sub
push
inc
pushf
repnz
sub
sub
lcall
incl
jecxz
mov
mov
cmpsb
aaa
ret
sti
sub
sbb
cmp
insl
test
test
ds
sub
mov
dec
cs
lcall
mov
movsl
pop
pop
jg
jns
add
dec
mov
adc
pushf
add
mov
adc
out
dec
imul
incl
in
imull
ret
push
pop
outsb
push
mov
add
ljmp
clc
or
add
pop
sbb
ret
sbb
or
shrb
pop
adc
ret
mov
shr
inc
lret
xlat
pop
pop
sbb
or
jmp
call
mov
or
hlt
div
lods
jns
pop
sbb
and
add
shll
call
add
pop
cmp
jbe
dec
xchg
cltd
jae
xorl
cmpsl
sub
out
push
pushf
xor
sbb
jmp
push
outsb
and
adc
adc
lret
add
imul
push
lcall
sub
mov
adc
test
push
and
lcall
call
sbbl
mov
and
inc
lret
insl
in
sbb
push
sbb
pop
test
jp
aam
pop
sbb
pop
es
adc
push
lock
lcall
shr
ja
mov
dec
icebp
es
sbb
sbb
out
out
icebp
mov
dec
into
mov
rclb
mov
xchg
incl
mov
ret
mov
testb
jl
cmpb
sub
mov
push
sbbl
jne
jmp
xchg
mov
mov
fbld
fsubs
je
bound
mov
push
and
push
fisttpll
fiaddl
ret
decl
lahf
and
lcall
ret
fs
push
mov
lock
call
cmpsb
push
je
test
push
cmp
jne
inc
or
mov
fisttpll
add
outsl
lock
add
in
cmp
cmpsb
push
call
std
in
mov
popa
and
repz
adc
cld
mov
and
decb
push
or
ljmp
jb
xor
xor
pop
clc
jge
les
lret
out
mov
push
adc
cwtl
jecxz
les
loop
jle
int
pop
fs
jae
xchg
idiv
lods
into
dec
push
in
push
pop
cmp
pop
lea
mov
lcall
sub
nop
test
imul
rolb
std
js
jne
add
incl
sub
jmp
adc
and
orl
decl
jp
push
sbb
and
or
je
int3
sbb
or
xor
ljmp
pop
adc
or
mov
jne
mov
push
adc
fistpll
inc
dec
add
arpl
mov
jecxz
pushf
movsl
push
repz
lret
sub
jno
ficoms
push
mov
xchg
cli
decl
sub
add
loope
jg
call
mov
cmp
in
dec
adc
ljmp
pushl
add
jmp
lods
mov
test
mov
jnp
lods
push
call
decl
cld
icebp
test
mov
add
mov
mov
mov
jmp
adc
mov
add
sub
mov
clc
jno
ja
push
jg
pushl
fldt
xchg
jbe
push
mulb
repnz
mov
adc
test
lcall
shrb
fstps
leave
or
flds
enter
pop
adc
add
das
add
lcall
cmp
popa
and
nop
fcoms
in
xchg
or
in
inc
dec
push
out
adc
test
loopne
ljmp
xor
loopne
mov
call
out
cmpsb
mov
mov
mov
lods
incl
jmp
movsb
insl
gs
subb
and
data16
sub
and
incl
pop
stos
fisttps
add
out
push
pop
movsl
inc
aaa
pop
inc
fs
push
mov
mov
mov
push
xor
and
mov
shlb
dec
frstpm(287
jb
lret
sub
call
pop
pop
push
push
clc
setnp
sub
or
and
dec
push
fs
ljmp
push
stos
push
mov
ret
rcrl
or
sub
and
arpl
andb
mov
pop
and
mov
das
std
push
arpl
lcall
inc
lahf
rorl
or
add
je
pop
or
or
or
mov
push
jg
lds
sub
movsl
int3
adcb
test
loopne
dec
jl
ss
sub
or
lcall
mov
pop
add
shlb
push
adc
scas
cld
ljmp
mov
push
cwtl
add
cmp
adc
add
decl
fstpt
cmp
adc
and
push
xor
mov
hlt
jo
mov
cmp
pop
cmp
jno
cmp
or
das
mov
jnp
mov
add
stos
out
inc
jae
pop
push
cld
xor
cmp
mov
test
pop
insl
jne
xor
pushl
rorl
fnstenv
or
std
pop
mov
mov
inc
jbe
pop
movsl
inc
out
adc
inc
inc
out
enter
ret
jmp
es
mov
pop
negl
or
xor
pushl
mov
add
cmp
ja
int3
mov
rorl
mov
xor
outsl
shr
sub
jg
movb
call
or
out
add
pop
xor
sbb
adc
and
in
jmp
fnstsw
adc
and
mov
adc
jns
dec
cld
jmp
ret
push
icebp
xor
jle
cli
loop
sub
push
or
xor
fucomip
hlt
push
sbbb
jmp
push
out
mov
sub
decl
push
sbb
mov
aam
adc
sub
sar
or
loope
or
lods
mov
sarb
cmp
scas
ret
mov
dec
cli
lcall
loope
pop
adc
test
mov
dec
mov
or
xchg
mov
or
incl
add
nop
fwait
and
and
mov
push
adc
mov
out
push
mov
popa
aam
aas
or
lahf
pushf
push
push
lret
jo
add
jno
test
stos
pop
repz
push
push
xor
cmc
sbb
pop
loop
jg
xchg
mov
add
cwtl
call
add
add
or
rcpps
pop
jno
mov
out
and
and
or
rcll
push
jg
fwait
add
xchg
mov
mov
add
clc
jg
dec
lods
sub
addl
mov
daa
mov
jnp
movsb
sbb
ficomps
or
add
ljmp
icebp
decl
icebp
and
jl
pushf
cltd
nop
jne
jo
add
and
aad
xor
adc
pop
jo
or
push
sub
fs
ds
in
sbb
dec
dec
sbb
dec
adc
jle
push
sar
pop
jb
push
sub
jg
or
or
sbb
xchg
inc
pop
push
out
push
clc
jg
popa
mov
lea
add
call
in
arpl
inc
add
mov
push
mov
pushl
cmp
mov
insb
mov
pop
push
cmpl
arpl
addb
sbb
lcall
jbe
dec
jl
dec
stc
inc
pushf
icebp
mov
cmp
cmpb
in
mov
mov
jb
or
and
lods
ds
or
std
push
cmp
push
in
pop
fcoml
mov
adc
popa
mov
mov
cmpb
rorl
pop
fidivrl
out
push
cwtl
add
pop
pusha
adc
incl
inc
cwtl
sbb
int3
movsb
or
push
mov
add
loopne
in
nop
or
cs
call
add
je
mov
push
xchg
cli
cs
dec
pop
dec
inc
or
test
cld
or
daa
mov
jae
sbbb
loopne
sub
jmp
xchg
xchg
adc
mov
popf
lea
inc
xor
push
loopne
daa
mov
call
adc
jmp
in
add
push
adc
push
push
roll
lds
mov
clc
jae
mov
je
insb
mov
xchg
add
dec
mov
push
std
mov
adc
ret
aas
sbb
add
ljmp
inc
inc
jb
xorb
outsb
mov
sbb
mov
xchg
data16
push
sbb
fildl
lcall
jno
push
xor
xor
push
and
clc
addr16
cmp
add
pop
gs
hlt
pushl
repz
pop
dec
loope
js
adc
xchg
cmpsb
pop
cmp
xchg
insb
ljmp
aad
andl
or
jecxz
ror
lods
xchg
or
movsl
incl
sbb
and
sbbl
sub
mov
mov
lahf
jae
push
dec
test
and
or
push
pop
cli
js
inc
inc
and
ret
and
or
mov
jp
xor
iret
jb
push
xor
dec
cld
or
mov
ja
cltd
jecxz,pn
mov
in
mov
adc
pop
dec
mov
xchg
jmp
pusha
rcrl
mov
sbb
sub
dec
jl
call
mov
pop
mov
sub
or
in
pushl
add
je
mov
cmpsb
test
sub
cmp
add
movswl
shr
hlt
lock
lock
adc
mul
and
sub
cmpsl
stc
sbb
cs
sbb
or
mov
lods
jns
pop
lods
aam
lcall
rcrb
jo
dec
mov
push
mov
push
sbb
pop
push
mov
divl
bound
call
sub
xor
and
test
mov
push
ss
test
cmp
cwtl
arpl
sbbb
lods
sbb
jg
and
push
mov
je
push
addb
std
lret
xor
xchg
mov
push
mov
add
aam
icebp
jmp
mov
std
sub
push
mov
push
add
icebp
into
es
decb
fisttpl
mov
xchg
cmpsl
push
jmp
pop
mov
push
xor
add
push
scas
loopne
mov
das
jmp
and
stos
lcall
jg
xor
adc
in
push
mov
cs
cmc
inc
ljmp
aam
pop
inc
mov
imul
cmp
sbb
ljmp
je
and
or
xchg
loop
cltd
jmp
mov
shr
repnz
or
loopne
pop
addr16
sbb
sbb
jecxz
pop
xchg
clc
jl
fwait
sbb
popa
or
add
orl
call
mov
push
mov
pushl
mov
or
jne
or
mov
shl
xor
popa
sub
call
push
sbb
orb
cltd
push
push
push
dec
icebp
jg
vsubss
lcall
cld
fbld
pop
shlb
test
inc
jle
add
jmp
mov
cs
push
jno
jmp
jg
sbb
sbb
pusha
sbb
cmpb
sbb
cs
test
inc
inc
movb
mov
jge
add
test
push
dec
inc
mov
xor
xchg
rorl
sub
or
cmp
je
and
push
rcll
ljmp
jne
lds
hlt
lea
or
js
jmp
and
mov
nop
xor
std
ljmp
mov
ds
xor
ljmp
mov
sti
mov
test
js
ret
inc
loope
pop
loop
enter
push
dec
dec
jle
pop
aam
pop
incl
das
adc
dec
ja
test
sti
push
stc
xchg
mov
repz
pop
mov
sbb
mov
mov
or
test
hlt
sbb
lock
ljmp
jns
push
dec
or
in
incb
adc
jmp
mov
mov
mov
mov
cmpsb
shrl
int3
aaa
pop
orl
jmp
and
sbb
das
imul
xor
mov
jg
popa
xlat
addb
lock
dec
sahf
cmp
es
mov
push
cs
inc
xor
lcall
mov
aas
imul
loop
test
addl
addl
or
incl
hlt
pushl
inc
arpl
sub
mov
mov
outsl
lock
xor
in
push
jmp
out
ja
or
mov
push
int3
mov
movsl
jl
xchg
pushl
adc
mov
xchg
push
inc
shlb
stc
cwtl
jae
mov
add
stos
stos
mov
and
push
movntps
out
add
pop
iret
out
mov
xchg
insb
adc
popa
inc
inc
jmp
mov
jmp
and
out
push
out
add
add
add
lea
addb
jle
push
xor
mov
loopne
cmp
mov
adc
push
cld
mov
push
xchg
loop
pushl
and
popa
lods
jne
movsl
push
push
nop
leave
pop
xchg
jb
adc
sbb
cld
jmp
mov
mov
cmp
mov
cltd
mov
mov
jb
jns
into
cmovne
cltd
addr16
aam
cmp
ljmp
fildll
push
in
push
popf
cli
or
ret
stos
pusha
add
or
push
add
xor
add
cmpsl
cs
mov
hlt
decl
push
test
jne
popf
dec
mov
pushf
mov
std
cld
adc
incl
mov
in
dec
sub
je
int
xchg
jp
mov
icebp
out
dec
sub
outsl
ret
mov
jp
lods
mov
repnz
adc
sbb
insb
stos
mov
lds
hlt
ret
mov
adc
fstps
ss
or
push
mov
outsl
mov
mov
inc
mov
xor
mov
fdivr
call
push
pusha
or
shll
sub
lea
je
sub
mov
jmp
stos
inc
sbb
call
fdivl
jnp
inc
inc
pop
mov
push
push
sbb
xchg
pop
sbb
std
call
xor
jnp
mov
or
dec
daa
out
addr16
mov
decl
test
cmp
rclb
xchg
add
nop
and
sbb
int3
sub
sbb
mov
cmp
jmp
jecxz
mov
pop
add
in
decl
mov
sbb
ljmp
shll
mov
mov
popa
jb
fucomip
decl
ret
push
aam
loope
jmp
jns
mov
cmp
mov
xor
cld
adc
cld
fcmovu
es
mov
adc
pop
push
or
out
sbb
incl
inc
cmp
dec
add
testb
je
inc
inc
sbb
outsl
push
int
dec
dec
insb
adc
in
pop
push
or
jne
jmp
andb
into
jno
sbb
call
jmp
jle
pop
xor
lea
or
dec
shll
fisttpl
mov
stc
push
lock
push
fnstsw
decl
sar
cmp
orb
gs
pop
dec
cld
inc
mov
jg
incl
mov
mov
mov
xchg
jb
cld
push
jg
sbb
addb
and
sub
inc
adc
pushl
ror
xchg
add
imul
inc
andl
es
shlb
lcall
lcall
test
cmp
jmp
dec
sbb
sbb
push
or
add
mov
adc
js
lret
rcll
push
insb
dec
std
ljmp
jb
outsb
arpl
lods
inc
pop
xchg
nop
js
push
or
insl
xor
or
je
cmp
clc
pusha
rolb
cmp
add
add
lds
sub
sidtl
mov
lock
mov
ljmp
lock
mov
xor
pop
fs
xor
cmpsl
adc
add
dec
push
lcall
das
push
inc
and
xor
push
fldenv
incl
mov
sbb
cmp
or
jmp
popa
repnz
dec
shl
lods
mov
movsb
ds
negb
jmp
inc
leave
push
xlat
pop
xchg
js
ret
out
cld
push
pop
dec
xchg
sbb
dec
lds
inc
jno
ljmp
icebp
sete
insb
add
test
push
je
iret
ret
inc
mov
or
push
ret
jmp
inc
loop
iret
xor
sbbb
push
stos
pushl
clc
fdivl
jne
pop
dec
test
or
pushl
pop
mov
or
in
adc
or
dec
das
push
cmp
sub
add
and
pop
fwait
int
mov
shlb
fwait
arpl
inc
adc
cld
sub
jns
shr
mov
imul
xor
cltd
imul
pop
pop
mov
fs
add
mov
mov
or
clc
mov
and
pop
or
jle
cli
and
ljmp
add
add
dec
add
dec
xor
jg
das
mov
lea
add
shll
pop
mov
jne
adcl
mov
outsb
push
mov
mov
addb
xchg
decl
add
add
hlt
mov
mov
repnz
mov
or
and
xchg
sarl
mov
add
hlt
xchg
push
lock
fucomip
test
sbb
fiadds
hlt
incl
sbb
sarl
jo
cmp
xor
mov
decl
jno
insl
sti
cmp
add
shr
not
and
dec
add
jg
push
adc
shr
dec
loopne
push
fstps
jns
rcrl
push
rcrl
cmc
dec
mov
dec
or
jbe
into
pop
or
cmp
adc
imul
icebp
pushf
mov
push
dec
sub
jno
mov
add
pusha
mov
pop
push
inc
pop
add
dec
nop
loopne
and
push
imul
or
fwait
insl
mov
call
cli
inc
lods
add
sbb
data16
mov
insb
mov
or
loopne
push
mov
cld
leave
or
jge
out
inc
fsubl
arpl
sar
call
lods
jo
shl
push
add
adc
push
push
call
jns
push
mov
push
in
cld
cmp
cwtl
movsb
dec
mov
sahf
decb
or
inc
xchg
lock
in
mov
inc
js
adc
jbe
cmpsb
iret
sub
stos
neg
fwait
cmc
sbb
adc
loopne
ret
sub
dec
push
adc
pop
cmc
jg
fwait
or
shrb
cmp
dec
insl
or
fistl
and
cmp
dec
and
pop
mov
gs
stos
adc
pop
and
mov
lock
and
incl
cmp
and
mov
or
lret
xchg
adc
loopne
mov
shr
push
jge
clc
mov
jmp
cmp
mov
or
mov
shlb
mov
and
es
or
adc
movsb
shrl
jb
jo
jne
mov
fidivrl
fsubs
adc
test
jne
lret
call
scas
jnp
ja
adc
mov
or
outsb
das
iret
out
push
mov
cltd
addr16
mov
das
lock
dec
aas
pop
mov
adc
test
cmp
mov
aas
movsl
outsb
adc
aaa
clc
mov
push
push
cli
mov
cld
sub
mov
lods
sar
sub
aaa
mov
adc
push
pushf
fldl
loop
sbb
mov
je
mov
sbb
and
cmp
xlat
jmp
bound
pusha
sarl
dec
push
xchg
into
lahf
cmp
pop
cli
incl
fs
pop
ror
add
jmp
and
push
stc
inc
or
icebp
cwtl
cmpsl
imul
dec
cmp
aas
jle
out
lret
or
and
popa
cmp
test
push
add
iret
sbb
lea
jl
call
repz
add
mov
add
pcmpeqw
inc
sar
in
and
jmp
leave
inc
dec
adc
sub
pop
jl
xchg
dec
sahf
sub
cwtl
sub
jecxz
sarb
mov
add
push
mov
ja
or
sahf
jg
jg
or
dec
test
movsl
cmp
mov
and
add
or
popf
sbb
or
xor
pusha
xchg
or
mov
movsl
fsubrp
pushl
or
or
jl
sub
ljmp
loopne
lea
mov
repnz
push
sub
sbb
call
inc
mov
mov
cld
pop
xor
clc
popa
or
shll
add
adc
cld
popf
lahf
mov
rol
and
cmp
in
xor
mov
aaa
js
mov
mov
lea
inc
dec
mov
fadds
or
mov
or
ds
pop
mov
mov
pop
loope
test
enter
clc
cld
push
aaa
push
ret
or
xor
jo
sbb
decl
shrb
les
add
cmp
and
lret
and
out
mov
push
stos
fs
movsb
stc
sbb
jl
adc
lds
jg
incl
mov
push
stos
and
loopne
fidivl
enter
data16
dec
dec
cmp
jmp
pop
cld
inc
ret
fdivs
imul
xor
bound
lods
fisttpl
push
mov
out
inc
push
and
std
test
call
lock
add
xor
mov
cmp
inc
mov
cld
cli
das
mov
repnz
cld
roll
inc
call
push
out
stos
mov
adc
mov
call
jae
cmpsb
push
lds
sub
push
adc
mov
das
cld
das
rcrl
mov
arpl
sahf
ret
sahf
push
decl
enter
shlb
inc
adc
mov
js
mov
not
and
jb
iret
imul
xchg
ss
xchg
clc
aaa
mov
sub
push
or
mov
pusha
dec
sbb
mov
pop
cmp
pop
jle
dec
xchg
fistpll
add
popa
popl
call
sbb
jbe
incl
sbb
mov
jno
dec
pop
push
jae
pop
push
mov
movsl
mov
icebp
sbb
and
pop
sub
test
loopne
insl
push
mov
or
adc
in
dec
add
adc
xchg
mov
xor
ljmp
dec
inc
pop
xor
inc
cli
insl
stos
mov
sti
cmp
pop
mov
out
add
into
fdivl
or
mov
jne
mov
jmp
adc
push
and
ljmp
adc
cli
ds
jmp
mov
adc
test
mov
fistl
aam
inc
daa
push
jg
inc
inc
jae
pushf
js
fiaddl
mov
imul
adc
sub
inc
lea
cs
lcall
mov
xor
and
xor
mov
xchg
jp
push
cld
mov
xchg
xchg
cmp
push
xor
adc
push
push
sub
jg
incl
aaa
jbe
jbe
jns
ja
in
ja
xor
bound
pop
adc
outsb
call
in
jnp
xchg
push
dec
leave
jo
js
pop
int
insb
push
cmp
or
loop
aas
cmp
mov
je
dec
jns
inc
jp
decl
test
cld
add
clc
sbb
mov
mov
cs
decl
sbb
pop
fiaddl
mov
rorb
sub
test
icebp
mov
dec
mov
stos
push
push
mov
pushf
add
cmp
jne
jno
dec
sbb
mov
dec
mov
mov
sub
cli
adc
sub
pop
pop
cmp
mov
sub
lcall
lea
sbb
adc
jp
xor
rclb
std
jg
mov
dec
and
dec
inc
mov
inc
xchg
adc
std
inc
pop
adc
jecxz
cli
in
dec
std
decl
add
cmp
jae
orb
push
rolb
imul
mov
insl
mov
add
and
fistps
stos
lock
imul
test
push
sbb
cmp
mov
mov
inc
mov
sbb
out
movsl
test
aam
xor
or
ja
fwait
icebp
push
sub
clc
decl
repz
xor
mov
lock
aas
push
aas
mov
xor
les
xchg
pop
lret
fidivrs
push
in
sbb
mov
leave
out
sbb
add
mov
mov
or
fs
pop
add
outsl
fs
das
sub
or
fstpt
shlb
loopne
jbe
ret
dec
jle
xchg
jg
lds
out
dec
inc
push
sbb
xchg
xor
push
push
adc
jg
pop
push
movsb
je
rcl
push
push
mov
xchg
mov
lret
jg
decl
jbe
add
adc
pop
push
cwtl
mov
out
test
xor
call
and
bnd
popf
dec
fmuls
jmp
inc
sub
lock
decb
mov
push
xchg
test
push
jno
sub
push
stc
pop
push
enter
or
mov
aad
push
mov
cmp
dec
movb
call
pop
xchg
je
cltd
roll
mov
enter
dec
cld
das
push
movsl
data16
and
push
push
jle
imul
int
incl
movb
sbbb
stc
xchg
add
xor
cmp
lods
loop
call
gs
push
or
ss
incl
outsb
aaa
les
mov
movsl
mov
ret
cmpsl
jle
pop
aam
test
xor
cmc
lcall
mov
xor
inc
mov
dec
push
es
or
add
jge
jb
dec
call
lock
cmp
or
cmp
xor
pop
jle
aam
mov
ljmp
jo
popa
add
aas
cmp
incl
sbb
call
xchg
testl
pop
mov
jb
jo
jge
popf
xchg
lods
imulb
pushl
xchg
xor
mov
push
push
jbe
cmp
push
push
sbb
rcll
fs
mov
mov
call
sbb
mov
mov
sbb
adc
lods
fdivrp
cld
mov
adc
insl
pushf
insl
mov
lret
imul
out
xor
enter
jae
mov
loop
jmp
lcall
sbb
and
rcrb
adc
sub
pop
sub
xchg
xchg
call
inc
xor
movsb
leave
cmp
sbb
ss
insb
jne
ljmp
rcrl
xor
shrl
or
lea
mov
sbb
push
cmc
sbb
or
pop
cltd
lcall
mov
push
sbbl
jae
pop
or
pop
pop
adc
inc
add
or
push
jg
test
ret
cmp
jno
inc
and
sub
or
add
sbb
mov
add
lods
fstpt
mov
push
add
cmp
ljmp
or
fucomip
cmp
or
cltd
js
ret
sub
push
adc
insb
inc
jne
jae
call
ljmp
jno
push
divl
jp
push
xor
or
pop
inc
mov
call
inc
lea
sub
mov
or
stos
sub
push
ljmp
jno
daa
mov
shll
es
jae
sub
push
jmp
scas
clc
lcall
pop
or
ret
call
mov
fists
push
js
and
pop
jecxz
mov
movsl
mov
inc
sbb
stos
iret
sbb
inc
ljmp
lock
push
sub
shll
xor
loopne
pusha
jae,pn
adc
rolb
lea
mov
push
mov
push
sbb
call
mov
lcall
inc
mov
loopne
mov
cmp
shlb
or
pop
daa
sub
mov
cmp
andl
pop
bound
push
mov
push
cmp
imul
cli
inc
sbb
out
sbb
jl
pop
push
cmp
mov
ret
scas
push
mov
in
adc
insb
or
push
push
and
repnz
aas
aad
jg
adc
fwait
loop
and
adc
add
decb
int3
and
aad
xchg
call
test
test
xchg
pop
jne
jmp
mov
lcall
cltd
xor
pushl
test
mov
xchg
sbb
je
popf
mov
and
mov
mov
or
or
push
in
adc
rcll
xchg
pushl
rol
pop
add
adc
je
xchg
orl
add
hlt
mov
mov
or
or
mov
adc
cmp
push
add
not
and
and
add
outsb
mov
sbb
sbb
incl
sbb
pop
notb
cs
sti
pop
fisubrl
hlt
mov
cmp
add
pop
insl
push
push
and
dec
dec
data16
test
mov
pop
or
mov
cli
pushf
xchg
or
and
cmp
shrb
call
fimull
mov
push
ret
or
decl
or
and
ret
mov
jmp
adc
or
push
sbb
jmp
cld
sbb
add
jecxz
sbb
out
leave
mov
or
in
stos
or
lret
into
shl
mov
cwtl
sub
add
dec
rcrb
fcompl
and
jecxz
jns
lcall
fucom
push
fstpl
insb
push
push
in
push
in
mov
sbb
and
inc
fldl
les
inc
shr
pushl
pop
inc
mov
and
inc
adc
psadbw
inc
test
ljmp
add
into
outsb
sti
cmp
testl
ret
fbld
mov
sbbl
jmp
cmp
add
orb
mov
sub
in
or
add
or
mov
jmp
mov
xor
rcll
lds
fucomp
mov
xor
inc
push
sub
and
jle
mov
add
inc
inc
fstpl
dec
sbb
xchg
cmp
jg
jle
sbb
rcrb
mov
mov
push
test
and
pushf
pushl
imull
xlat
sbb
imulb
add
sbb
mov
rcr
sbb
mov
fwait
mov
call
push
mov
es
sahf
add
inc
xor
dec
nop
stc
fnsave
call
call
clc
roll
add
add
add
or
fstpl
jg
push
rcrl
outsb
outsl
pop
js
or
jl
lcall
std
mov
pop
repz
call
mov
fstpl
fnstcw
adc
jmp
rcr
int
adc
cmp
pushf
int3
lret
test
out
jo
and
fldt
incl
xlat
push
adc
inc
cmpsl
iret
mov
std
jg
cld
sub
sti
add
cmp
adc
data16
ljmp
in
rorb
dec
or
dec
cli
and
enter
lcall
icebp
lcall
adc
hlt
popa
or
add
cld
jg
pop
dec
jne
sbb
cmpsl
mov
fucomip
ljmp
adc
fisubl
mov
fs
mov
fcmovnbe
mov
out
call
ror
pop
pop
adc
and
and
fmul
fsubl
rolb
mov
push
daa
pop
push
lcall
lock
and
lcall
cwtl
and
push
inc
jae
and
xor
int3
push
xchg
mov
adc
mov
inc
pop
cmc
outsl
push
loop
mov
sub
mov
int
int3
adc
add
sbb
sub
xor
fnstsw
decl
int3
pop
xchg
inc
cmp
ret
int
add
lods
mov
add
scas
add
fs
test
fucomip
je
or
pop
add
sbb
ljmp
mov
or
frndint
negb
imul
cmp
sar
xchg
add
cwtl
or
cmpsl
pop
sub
testl
insl
inc
or
stc
shll
dec
mov
es
hlt
jg
adc
jmp
bound
loop
aaa
inc
test
in
xchg
mov
add
lods
xchg
sar
cmp
outsb
push
sub
lahf
fs
iret
popl
std
push
push
inc
gs
dec
mov
mov
imul
lds
mov
adc
xchg
iret
jg
les
andl
rorb
jmp
mov
gs
inc
out
leave
sbb
into
ds
fadd
outsb
mov
sub
insl
push
jecxz
or
dec
incb
movswl
sbbl
and
mov
adc
jge
sbb
iret
ljmp
hlt
mov
fnclex
push
loope
fxtract
loopne
mov
and
cld
decl
xchg
pushf
fsub
cs
or
jl
arpl
sub
lods
scas
or
fldt
pop
or
pop
call
fwait
xlat
adc
fwait
and
repnz
sbb
shr
fcompp
inc
ljmp
icebp
cld
pop
mov
daa
jb
jo
jmp
outsl
pop
std
xor
add
push
or
lret
lock
jg
dec
mov
insl
popa
or
popa
call
data16
push
push
push
out
pop
dec
sub
sub
pushl
pop
adc
xchg
das
rorb
add
ret
mov
mov
fimull
mov
rolb
pop
test
inc
pop
xchg
sbb
dec
mov
mov
nop
loopne
aam
mov
mov
push
inc
aaa
or
lods
into
push
mov
add
incl
cmc
decl
mov
mov
orb
in
hlt
sahf
inc
push
js
mov
stc
gs
inc
mov
call
cli
dec
cmpb
xor
adcb
dec
mov
inc
push
inc
aam
mov
pop
testb
xchg
cli
ljmp
mov
jne
jno
fwait
gs
lcall
std
incl
scas
in
rolb
mov
jp
mov
in
int3
incl
sbb
mov
sbb
ret
imul
xchg
cmp
hlt
mov
inc
xchg
sub
cmpsl
pop
ss
ret
jg
xor
popl
push
and
sub
lret
xor
cmp
inc
cli
rolb
lret
pop
clc
cmp
sbb
add
inc
sbb
ss
ljmp
lea
adc
mov
aaa
push
pop
or
incl
sbb
jns
xchg
fildl
mov
and
pop
cld
sub
es
cmp
dec
jns
neg
bound
sub
pusha
xchg
sti
fs
adc
mov
mull
mov
push
mov
out
or
decl
lock
add
pop
push
popa
xchg
mov
pop
xor
inc
xor
jne
xchg
cmp
je
push
int
rol
xor
lcall
xor
xchg
adc
or
xor
rorb
sub
add
push
call
movb
incl
or
mov
vcvtps2pd
pop
xor
sbb
aam
sbb
adc
jecxz
pop
jp
call
movsl
inc
ljmp
idiv
jno
xor
repz
ja
push
sub
push
lcall
xor
and
lcall
push
mov
icebp
decl
mov
mov
ljmp
push
fidivl
mov
mov
rorl
inc
add
xchg
mov
xchg
jge
ljmp
cld
sbb
repz
stc
and
pusha
push
js
loop
mov
adc
outsb
adc
mov
movb
loopne
andb
in
sub
sbb
test
sbb
adc
inc
xor
jg
mov
sub
push
inc
adc
es
jne
notb
push
jmp
adc
jns
jb
sub
ljmp
mov
jg
pop
xor
push
add
pop
fwait
or
bound
call
sub
mov
add
je
int
pushl
data16
pop
jle
add
outsl
inc
pop
adc
imul
ds
push
push
call
xor
cmp
arpl
loopne
pop
sbb
adc
addr16
mov
incl
push
xor
cmpsl
pop
das
sbb
cs
data16
and
add
add
inc
in
shlb
xor
xchg
push
mov
subb
inc
push
ljmp
mov
lock
add
jns
and
mov
push
jne
dec
aas
jb
jle
pushf
adc
test
mov
shrb
out
jno
mov
lock
xor
je
sbb
sbb
std
pushl
int3
mov
adc
or
mov
pop
jns,pt
rsqrtps
call
push
leave
lea
cltd
jb
inc
fmuls
jmp
subb
cmp
jl
or
add
ja
push
nop
in
inc
xor
sbb
jle
lret
push
test
mov
icebp
clc
jle
sub
es
js
out
loope
imull
pop
test
push
push
jg
or
hlt
pop
test
subl
and
fidivrs
add
movsl
mov
lock
out
mov
cli
in
sbbb
xchg
mov
xchg
mov
jmp
dec
inc
cmp
clc
inc
in
xchg
lds
mov
js
cmp
xchg
and
xor
mov
shll
decl
pop
and
dec
push
cmp
jl
loope
decl
jg
dec
jmp
dec
adc
shll
addb
and
add
icebp
fbld
loopne
push
xchg
mov
adc
ljmp
dec
test
rorb
dec
sbbb
lea
pop
sbb
push
dec
std
pushl
xchg
mov
mov
push
out
xor
pop
and
xor
inc
mov
push
mov
xor
mov
add
lods
xor
mov
fcos
incl
mov
fnsave
mov
mov
je
add
pop
add
and
ja
lcall
cli
popa
and
rclb
pop
and
or
out
sub
adc
faddl
xor
pop
push
jmp
cli
or
cmpsb
mov
call
stos
pushf
mov
js
xchg
stos
mov
lds
inc
je
jl
jmp
cmp
push
sub
cmp
push
decl
loope
mov
jae
outsb
push
insl
or
test
xor
jns
mov
or
das
jecxz
call
dec
mov
enter
pop
or
mov
push
cmc
xchg
xchg
cli
jg
pop
nop
aam
inc
sub
mov
fsubs
in
decl
or
adc
push
mov
jns
push
gs
sbb
rclb
or
and
in
inc
sbb
arpl
std
add
test
xor
ja
iret
into
xchg
mov
cld
lods
mov
or
mov
aas
or
fisubrs
and
adcl
inc
mov
call
lcall
outsb
xlat
pushf
mov
mov
js
xor
or
pop
aaa
es
test
cmp
out
call
cmc
mov
das
std
adc
ss
pop
loopne
fildll
inc
inc
movsb
lods
loopne
sbb
pop
es
xor
adc
lds
movsb
cmp
adc
sub
xchg
sub
adc
mov
icebp
pop
hlt
adc
ss
stc
jns
hlt
cmp
add
jecxz
addr16
adc
mov
movl
add
push
push
testl
out
add
jne
outsl
push
aas
mov
je
fstl
push
pushl
cmp
pushf
pop
push
pop
lods
test
lcall
lret
dec
stc
in
mov
add
pushw
or
pop
push
inc
fisubs
call
mov
lcall
icebp
cmp
xchg
daa
push
in
mov
daa
stos
add
mov
cltd
inc
jl
inc
call
divb
dec
addr16
adc
imul
mov
pop
sub
push
add
inc
inc
mov
or
fistl
pop
or
sarb
pop
xor
cltd
mov
mov
scas
repnz
notl
nop
push
lea
lcall
fbld
push
jg
adc
jmp
sti
push
arpl
mov
pop
pop
test
push
test
or
mov
push
scas
push
shr
dec
pop
sub
jg
movsl
in
cltd
xchg
bound
aad
test
inc
enter
sbb
cli
xchg
xchg
lods
loop
sbb
pusha
inc
push
sbb
lock
inc
cmp
aad
mov
es
mov
cmp
push
mov
pop
ja
jl
cmp
cmp
andl
and
negl
mov
sbb
and
out
lcall
cmp
sbb
ficompl
mov
add
cli
push
mov
repz
add
aad
add
ljmp
les
cmpsl
fmull
call
sbb
or
mov
sbb
and
mov
and
dec
stos
push
sbb
inc
cli
repnz
insb
sbb
call
cmp
pop
outsb
idiv
xor
cmp
das
pop
sub
pushl
leave
inc
or
es
xor
ret
mov
mov
or
fsubs
sbb
cld
ljmp
and
shrb
adc
dec
push
xchg
xor
popa
mov
cmc
dec
mov
test
outsl
test
push
and
push
cmp
push
mov
push
addb
lcall
and
push
xchg
push
lret
pop
pushl
and
jecxz
pusha
lcall
call
shlb
cmp
jle
mov
add
cmp
sub
shl
loopne
jge
xor
adc
push
xchg
js
sbb
outsb
insb
movsb
adc
pop
inc
xorb
adc
lcall
push
jl
cmp
sub
sbb
shlb
sar
das
cmc
testb
inc
or
xchg
jno
rcrb
inc
and
iret
cmp
mov
in
imul
cmpsb
pop
insb
jbe
push
mov
ret
incl
fistps
or
adc
mov
sar
xchg
call
clc
mov
pop
andb
orb
ss
into
jbe
cmp
cli
call
cmpsb
adc
dec
lock
xchg
xchg
or
dec
addr16
scas
pop
xchg
adc
shrl
xchg
xchg
pusha
adc
and
xor
jb
mov
lds
getsec
mov
enter
enter
sbb
and
push
add
mov
or
popa
or
adc
adc
pop
pop
mov
inc
jecxz
hlt
add
xor
cmpsl
sbb
aas
mov
add
out
xor
add
fisttps
sti
and
xor
xchg
mov
stos
add
adc
imul
jmp
xor
insl
push
loope
icebp
imul
add
int
mov
mov
dec
dec
test
idiv
stos
sarb
cmpb
xor
sbbl
sti
mov
lcall
enter
or
add
pusha
mov
cmp
mov
fnstsw
dec
jmp
sub
call
pop
inc
sub
cmp
addr16
mov
loopne
mov
or
pop
jae
jnp
nop
or
call
pushl
cli
sarb
or
aam
sbb
or
sub
jg
inc
into
or
inc
xor
inc
add
cmc
adc
mov
pop
or
mov
inc
dec
das
mov
xchg
ja
mov
cmpsb
in
pop
cs
fucomip
in
je
insb
addr16
cld
pop
sub
inc
jge
mov
push
call
xor
inc
mov
jns
add
decl
sbb
mov
fs
in
mov
add
std
sub
ljmp
mov
mov
pop
mov
ret
or
jmp
adc
push
pop
pop
pusha
lods
pop
push
sub
mov
pushl
push
int
dec
dec
lods
pop
les
mov
cmp
stos
call
jg
jmp
mov
mov
mov
push
jge
movsl
lcall
mov
fs
and
or
decl
addl
sbb
mov
test
xchg
push
jne
mov
mov
cmp
test
sub
fnstenv
push
pop
ljmp
pop
sti
pop
jle
sbb
and
or
or
mov
loopne
push
xchg
sbb
les
cmp
in
xchg
inc
lods
mov
das
hlt
dec
mov
pop
add
sbb
repnz
mov
pushl
clc
push
xchg
fldcw
xchg
mov
jle
push
insb
scas
sti
add
adc
testb
mov
lods
sti
cmp
jl
jmp
aas
mov
jmp
lcall
clc
add
shl
mov
das
mov
iret
push
out
cmp
cmp
jg
lcall
mov
out
mov
push
decl
jnp
outsb
jbe
imul
lcall
call
dec
fwait
ds
mov
mov
and
sti
inc
cmp
xor
sar
adc
sbb
sbb
xchg
xor
adc
xor
jmp
inc
jb
ret
pop
lret
dec
cmp
jbe
xor
imul
test
decl
mov
mov
dec
push
test
add
int3
sbb
or
data16
lcall
bound
mov
imul
ss
push
test
popa
ljmp
cmp
sub
and
and
in
push
mov
call
and
cmpsb
xchg
add
xchg
mov
repz
addr16
add
loop
jg
jmp
or
repz
pop
ja
stos
imul
dec
mov
outsl
inc
xchg
mov
hlt
mul
and
add
gs
add
je
push
sub
in
add
inc
je
mov
into
aad
incl
mov
arpl
inc
cmpb
sub
add
inc
mov
outsl
shll
and
cmp
push
repnz
sti
jmp
sub
push
insb
ss
ja
or
icebp
jmp
cmp
inc
decb
sbb
pushf
or
test
shrb
pop
jne
cmpsb
imul
mov
adc
cmp
jae
sbb
push
push
stos
dec
mulb
bound
add
sbb
xor
ljmp
mov
cltd
or
les
pop
arpl
mov
in
mov
outsl
jmp
je
leave
or
sbb
xchg
loopne
cmp
stos
incl
pop
xor
jg
add
mov
or
jno
mov
orb
std
decl
jle
cmp
cmp
cwtl
lcall
repz
cli
pushl
jne
std
and
fs
mov
cmp
outsb
jg
mov
adc
mov
inc
mov
fucomip
mov
xor
adc
leave
rcl
sub
cmpsl
lds
hlt
pushf
test
xchg
add
jle
popf
lcall
std
fmuls
lods
loop
or
fists
vaddpd
cltd
push
or
incl
inc
stos
pop
or
cmp
data16
pop
and
push
cltd
popf
mov
filds
call
dec
in
int
cmp
gs
mov
incl
and
insl
mov
cmp
das
push
gs
inc
icebp
es
push
jno
and
stos
movq
cmpsb
jns
jl
out
rcrl
mov
testb
add
into
daa
or
mov
xchg
cltd
lods
and
sbb
aam
int3
sarb
outsb
push
and
sbb
jg
mov
aaa
jle
roll
sub
and
call
bound
cmp
push
fsts
sub
cltd
ret
cld
push
inc
mov
popa
adc
add
mov
xchg
call
dec
inc
js
shr
out
popa
dec
and
add
and
int
mov
in
jno
xor
mov
inc
mov
inc
icebp
adc
or
xor
adc
out
jmp
loop
je
roll
je
mov
js
repz
ljmp
pop
pop
push
sti
add
cmp
sub
xor
push
add
inc
inc
lods
js
mov
and
sub
loopne
les
sbb
lds
lcall
pop
inc
sub
cmpsl
and
push
mov
xor
pop
je
pop
inc
cmp
xor
ljmp
les
ss
roll
jmp
add
mov
mov
xor
enter
sub
inc
sub
mov
out
mov
sbb
jb
decl
hlt
inc
dec
jne
mov
lret
and
mov
rorb
mov
fwait
mov
adc
lret
add
dec
jne
xchg
in
dec
mov
xor
jge
lods
jmp
insb
inc
push
fiaddl
sub
mov
jns
pop
push
fs
sub
incl
stc
add
or
xor
test
je
ror
jne
mov
ljmp
cld
nop
test
mov
lods
push
leave
inc
mov
mov
add
sbb
inc
cmp
es
and
decl
push
clc
pop
dec
xchg
xor
cmc
push
test
add
int
mov
in
int
in
loop
repz
data16
mov
and
stos
dec
dec
icebp
leave
jne
aaa
jmp
imul
sbb
jecxz
push
jg
push
mov
test
dec
imul
pushl
lahf
popf
or
movsl
push
cmp
pop
push
fdivr
lcall
mov
jb
sbb
lret
push
js
std
loop
dec
xchg
push
stos
jmp
pop
loop
add
pushl
shll
add
sbb
sub
loope
aaa
add
sbb
movb
or
adc
in
jbe
int
stos
jp
ret
dec
call
mov
jmp
fdivr
mov
pop
sub
rcll
js
popa
jp
loop
push
jl
sub
sar
je
ss
cmp
scas
cmp
or
insb
mov
fucomip
pop
outsl
aas
lea
cmp
shl
cmp
testb
xor
test
incl
lds
rcr
mov
je
neg
mov
pop
pusha
mov
aaa
into
add
adc
xchg
ficoml
je
push
mov
pop
adc
icebp
incb
dec
fcoml
arpl
cs
push
mov
lods
sub
add
pushl
push
andb
decl
data16
imul
ljmp
jecxz
sbb
enter
fcompl
cmpsb
sub
jne
cmp
xor
popf
scas
popa
push
pop
xor
outsb
decl
add
pop
and
push
dec
push
sub
dec
inc
int3
xor
cli
mov
stos
scas
pushf
mov
jne
push
jle
dec
dec
inc
pop
outsl
icebp
call
orl
fs
das
or
add
das
icebp
cmp
decl
add
or
ret
push
add
mov
lcall
dec
mov
pop
mov
add
adc
and
push
pop
sbb
fucomip
jmp
sti
out
push
push
push
or
push
jae
lcall
test
aad
test
push
jnp
xchg
jae
and
cld
decl
sbb
push
push
imull
addr16
test
rcl
or
inc
mov
push
movb
push
fistl
notb
sub
pop
test
push
pop
pop
or
sub
sar
push
dec
fisttps
ror
lea
adc
dec
int3
addr16
sub
dec
jns
or
jecxz
lahf
insb
inc
inc
scas
jl
sarl
jb
mov
jb
dec
sub
cltd
inc
push
nop
nop
shlb
ds
jle
xor
and
mov
mov
cmp
adc
repz
popa
call
sti
lret
jmp
outsb
sub
insl
inc
xchg
mov
push
das
add
iret
pop
imul
add
jg
lods
dec
sbb
pop
xchg
cmp
inc
bound
push
pop
push
push
pushl
mov
mov
push
push
fsubrl
jns
push
dec
fucomi
mov
mov
jge
pop
add
push
insb
adc
mov
add
aam
adc
movsb
sbb
std
cs
sbb
stc
dec
jno
add
mov
push
aaa
cli
jg
mov
and
cs
fs
pop
jnp
push
lcall
push
push
subl
sbb
xor
inc
nop
sbb
fimuls
je
ljmp
dec
in
jle
push
sbb
je
xchg
xchg
je
out
cld
call
mov
hlt
dec
js
sbb
les
divl
pop
std
or
mov
cmpsb
push
mov
cmp
jg
push
pushl
dec
and
lea
pop
movsb
xchg
jns
mov
icebp
faddl
jbe
jne
mov
pop
cli
pushl
je
push
lret
fs
push
std
pushf
out
addr16
or
clc
decl
mov
sub
push
aad
mov
jno
lret
pop
loop
rclb
push
and
rclb
dec
sti
xor
cltd
fidivrl
shl
sbbb
out
push
fucomip
incl
aad
insb
pushf
popa
jbe
jno
cmpsb
imul
xchg
mov
das
std
or
iret
insl
movl
imul
dec
xchg
mov
cmp
out
cld
insb
fimull
int
aad
sub
icebp
jnp
sbb
je
pop
mov
divl
pop
push
jno
aaa
push
adc
push
icebp
lods
test
hlt
pop
gs
sub
jb
cmc
pop
incl
jle
mov
push
sub
add
or
insl
jno
add
out
mov
adc
mov
push
lea
mov
or
inc
push
sub
rcrb
or
mov
add
std
mov
lea
jl
pop
pop
jb
jmp
and
pushl
add
cmp
cmp
imul
fsts
mov
mov
das
into
mov
mov
or
mov
add
pop
js
cmp
test
out
test
lods
js
mov
lock
mov
cmp
outsl
cmp
pop
pop
mov
ret
pusha
lods
aas
mov
or
inc
pushl
jb
orl
pop
and
pop
push
pop
decb
inc
mov
or
sbb
sub
rolb
incl
xchg
cmp
pop
push
fists
adc
aaa
clc
inc
dec
add
xor
xchg
es
aam
andps
mov
push
lods
xor
aaa
lock
dec
cmpsb
push
mov
mov
push
shrb
mov
xor
pop
decb
dec
dec
arpl
xor
shrl
ja
adc
sbb
or
lods
cmpsl
out
pop
sub
push
decl
decl
push
ret
jbe
sub
loop
push
scas
mov
and
fsubrs
fdecstp
ret
incl
mov
faddp
cli
faddl
jecxz
mov
add
call
rorb
jae
fistps
and
clc
adc
js
add
movsl
call
loope
mov
mov
idiv
ljmp
and
rol
and
cmpsl
sub
flds
std
lcall
jo
dec
jo
pop
in
shl
in
inc
pop
dec
pusha
sbb
xor
jg
cli
mov
or
or
cld
mov
adc
lds
decl
ja
xchg
loop
inc
jns
and
inc
sbb
push
inc
mov
inc
sub
cmp
jmp
add
xchg
lds
cmc
or
mov
pop
adc
jge
mov
cltd
ret
and
adc
not
or
mov
or
or
shlb
lcall
lods
cmp
push
call
pushl
lret
lea
sub
mov
mov
mov
or
jne
inc
pop
cli
mov
xchg
jns
inc
shl
dec
lret
mov
mov
pushl
pop
cmp
dec
cmp
pop
aaa
cmp
and
popf
jmp
pop
adc
mov
test
into
jns
fistl
jg
adc
jg
cli
inc
push
xlat
adc
sub
push
or
mov
dec
scas
call
fucomi
push
mov
cmp
icebp
call
je
sahf
jmp
xor
xchg
mov
add
adc
cwtl
orl
mov
fxch
adc
daa
push
fdivrs
addr16
push
mov
repnz
notb
mov
movsb
cmp
adc
and
or
stos
out
imul
mov
push
or
jbe
inc
pusha
or
ja
call
pop
je
sysexit
jmp
mov
lret
pop
xor
sub
mov
ret
je
cmp
je
inc
test
adc
inc
inc
jg
loop
fiaddl
push
sahf
pop
xor
lcall
les
mov
arpl
je
cmp
faddl
mov
aas
addl
ljmp
push
mov
sbb
mov
in
pop
das
icebp
jg
std
pusha
aaa
jne
pop
pop
incl
sbb
mov
incl
incl
mov
sub
push
in
mov
jg
shrl
mov
xchg
sbb
cld
imul
decl
loop
into
fsubrs
out
ret
or
outsl
icebp
mov
xchg
xor
dec
xchg
ret
jmp
sub
xorl
and
mov
adc
in
pushl
jmp
in
cmp
fwait
inc
mov
adc
cli
mov
sbb
pop
stos
xchg
cmp
shlb
clc
mov
inc
inc
or
or
add
xchg
aaa
inc
mov
loope
inc
insb
adc
fistps
mov
xor
sbb
lods
repnz
or
pushl
out
jne
and
sbb
cmp
pushw
fwait
sbb
rsqrtps
into
inc
movsl
sbb
fildll
add
sub
and
inc
mov
or
dec
test
and
sub
rclb
aaa
cli
call
mov
and
jmp
xor
mov
addr16
rorl
mov
inc
movb
inc
mov
dec
jne
repz
mov
cmc
inc
inc
or
cmp
xchg
ljmp
dec
jns
js
setnp
add
nop
es
xor
fisubrs
mov
jg
lods
aas
cmp
pop
fs
mov
push
icebp
shl
add
or
and
decl
icebp
imul
push
ljmp
dec
pop
adc
mov
das
lock
or
jno
ret
cmp
sbb
inc
call
invd
sbb
js
repnz
or
mov
add
icebp
fistpll
adc
mov
adc
or
ljmp
push
push
push
sbb
and
and
mov
bound
cld
in
push
xchg
jmp
ret
movsl
test
mov
cmp
insl
sub
decl
cmp
sti
add
mov
push
xchg
test
ljmp
mov
fprem1
fildl
push
xor
inc
inc
mov
pop
add
imul
sub
sbb
adc
inc
sub
mov
nop
imul
adcb
push
add
sbb
add
lcall
pop
jmp
loope
sbb
pushfw
mov
arpl
inc
jb
mov
lcall
and
fs
adc
cwtl
je
push
cmp
int
push
cs
sub
pop
add
das
adc
mov
dec
or
andb
or
test
ljmp
or
lea
jl
push
dec
jbe
mov
xchg
jle
xor
mov
pushl
mov
pop
imul
or
pop
or
add
clc
test
pop
or
sub
inc
add
or
jg
lahf
push
in
add
repnz
cmp
add
loop
fbstp
mov
push
pop
push
lret
adc
dec
push
call
mov
pop
push
mov
xchg
or
adc
adcb
cli
dec
sbb
ljmp
sar
sar
add
je
jl
jb
jno
cmp
test
lcall
inc
push
inc
xor
pop
inc
xor
imul
push
jbe
sbb
pop
test
dec
call
mov
cmpsb
popf
mov
sbb
mov
and
jnp
xor
sbb
shrb
inc
icebp
push
push
lea
imul
push
or
pop
pop
inc
xchg
or
xor
loope
call
les
cltd
sbb
xor
or
push
pop
loop
ljmp
sbb
lea
xchg
or
js
lcall
jmp
xchg
adc
aas
lret
pop
mov
movsl
sub
push
sub
push
inc
rclb
adc
jg
add
push
mov
xchg
ret
mov
fwait
or
das
cmp
rol
and
sarl
pushf
add
adc
subl
fnstsw
adc
sub
into
movsl
icebp
xor
bound
push
xor
cld
xchg
clc
icebp
push
mov
out
cmp
sbb
and
or
fwait
jo
or
cmp
sbb
add
ljmp
fcoms
lods
imul
pop
stos
clc
pop
pop
adc
rolb
push
out
pop
andb
sub
sbb
cmp
js
or
add
add
push
cmp
mov
cld
push
inc
inc
stc
cmp
fldl
push
iret
adc
in
adc
add
push
add
imul
pop
lea
in
mov
pop
jecxz
hlt
jns
inc
repz
lea
jmp
sarb
int
sub
push
popf
pop
add
mov
adc
decl
cs
adc
notb
imul
out
mov
sar
sbb
mov
jmp
or
xor
sub
add
adc
icebp
incl
mov
pop
adc
pop
xor
shll
mov
sbb
repnz
mov
adc
push
mov
mov
push
jg
add
add
shlb
fs
inc
sbb
ljmp
or
mov
xor
movsl
fucomip
jno
lock
das
pop
cld
das
hlt
decl
mov
pusha
ljmp
xorb
lock
icebp
decl
sbb
mov
sbb
lahf
add
xchg
clc
pop
mov
mov
xor
cmc
mov
ljmp
jmp
add
dec
or
xor
push
xor
loopne
push
sub
cmpsb
pop
aam
xor
js
sbb
lea
mov
es
daa
mov
sbb
js
push
sbb
lcall
popa
pop
push
push
movsl
push
jb
sub
pop
add
imull
sbb
mov
call
pusha
int3
sbb
push
add
inc
xchg
mov
lcall
sbb
push
repnz
add
mov
cmp
pop
sbb
xor
ljmp
jg
repz
inc
and
loopne
lea
pop
lea
enter
mov
mov
stos
lcall
addl
call
or
jg
loopne
into
sbb
push
mov
push
push
lcall
popa
mov
gs
stc
cmc
adc
mov
adc
adc
cld
incl
pop
out
pop
not
and
push
or
or
or
jno
adc
add
bound
outsl
cmc
incl
mov
inc
and
cmp
cmp
inc
xchg
and
push
andb
mov
mov
cwtl
fstps
add
dec
fildll
mov
iret
xchg
push
popa
add
inc
mov
inc
mov
mov
dec
ljmp
fists
adc
cmp
rcrb
or
jmp
or
and
iret
pop
rorl
cmp
clc
sar
sub
dec
cmp
pop
add
pop
mov
cmp
xchg
jg
stos
adc
jmp
jle
jns
adc
call
ja
push
lods
fwait
pop
ret
mov
mov
mov
sbb
rcr
fisttps
clc
cmp
je
adc
bound
roll
jmp
pushf
push
lods
mull
daa
stos
ret
adc
rorl
dec
into
orb
and
ss
shll
xchg
sbb
push
sub
or
push
add
lret
call
loop
xchg
and
not
test
jne
jmp
cmc
adc
call
ljmp
orl
push
test
repnz
ja
ljmp
or
dec
adc
lds
mov
push
pop
pop
fsubrl
push
adc
fwait
icebp
xchg
es
pushl
orb
jmp
sbb
push
sbb
ljmp
push
pusha
lea
fwait
push
pop
cmp
addr16
test
pop
cltd
mov
enter
loop
sub
mov
pop
inc
out
in
fs
loopne
sub
pop
or
fisttps
mov
mov
lcall
movsb
inc
push
push
stc
push
gs
cmp
pop
in
adc
popf
or
xor
cld
ljmp
imul
sbb
dec
stos
cmp
stos
ss
jle
pop
popf
sbb
pop
xor
sbb
call
pop
into
stos
in
int
shll
stc
bnd
nop
shr
or
sub
add
adc
jb
add
jecxz
jg
rorb
mov
not
pop
and
cs
adc
outsl
icebp
call
pop
ja
xor
xchg
cmp
iret
and
insb
mov
dec
hlt
xor
lods
imull
or
cmp
cmp
jl
mov
movsl
out
ficoml
mov
dec
sub
jp
fwait
sub
cmc
lcall
inc
rclb
pusha
jmp
fldcw
pop
add
cmp
andl
pushl
cli
pop
dec
xchg
xorl
mov
pushf
outsl
adc
sti
add
call
cld
call
sahf
enter
repz
push
outsb
test
cmc
and
test
ret
bound
cmpsl
xchg
or
cmp
mov
mov
sar
or
jg
jg
lcall
ret
dec
xor
cmp
ds
cmp
fdivrs
sub
push
sub
iret
pop
mov
xchg
push
or
mov
test
inc
lods
and
idivb
pop
add
sub
inc
mov
lds
sbbl
aaa
lcall
std
ljmp
movsl
cs
jge
lock
imul
mov
add
lcall
xchg
andl
das
or
icebp
or
fnstenv
in
movsl
adcb
add
incl
mov
or
and
ss
aad
clc
incl
mov
adc
push
pop
or
lea
lcall
jbe
lods
sub
sbb
stc
cwtl
aam
jns
xchg
pop
sub
or
mov
pop
call
xor
jle
jmp
clc
fnstsw
xchg
mov
add
pop
mov
mov
inc
mov
cmp
pop
fisubl
add
xor
cmc
incb
sti
das
cmp
inc
add
adc
or
loop
cwtl
iret
ljmp
xor
data16
pop
lea
pop
sbb
call
adc
icebp
loopne
das
insl
mov
push
loope
add
mov
mov
jecxz
sub
jne
lods
lret
add
sbb
out
rclb
call
mov
adc
jmp
fcmove
ss
std
outsb
and
push
loope
iret
stos
and
or
je
cltd
ss
ljmp
daa
mov
fwait
mov
ficomps
gs
test
test
jae
dec
es
or
call
sbb
cwtl
hlt
enter
mov
stc
loope
cmc
xchg
inc
into
shlb
add
movsl
fcmovb
jmp
or
aaa
add
mov
movl
mov
jmp
adc
or
dec
scas
or
insl
xchg
sbb
mov
adc
push
mov
mov
adc
ds
push
or
loope
and
jae
xchg
push
push
xchg
scas
ret
pushl
push
dec
adc
dec
adc
and
mov
mov
xor
push
pop
mov
cmpsl
push
and
sahf
hlt
fucomip
incl
clc
mov
mov
push
pop
and
cltd
mov
xor
lea
pushl
add
sbb
mov
bound
dec
adc
add
clc
sub
lcall
inc
mov
clc
inc
andl
and
inc
inc
add
pop
inc
xor
push
and
pop
add
lcall
popa
jns
loopne
xchg
sub
pop
fmuls
repz
push
call
fadds
ss
pop
enter
push
subl
push
js
incl
add
into
pop
add
testb
sbb
xor
pop
outsl
sbb
xchg
clc
insl
sub
push
outsb
std
cmp
pop
lret
pop
adc
stos
mov
xor
jge
pop
mov
mov
jns
cmp
call
or
adc
sarb
iret
movsl
lcall
mov
popf
adc
mov
dec
adc
pop
roll
je
push
xchg
inc
mov
and
adc
mov
sbb
add
adcb
int
add
outsl
cmc
in
pop
pushf
xchg
or
sti
lcall
mov
or
test
pop
push
cmp
adc
subb
or
pop
and
sbb
rclb
sbb
sbb
loopne
imul
add
dec
add
sbb
sbb
sbb
sbb
orl
or
dec
push
stos
push
lock
mov
loope
and
mov
jg
je
cmp
or
call
xchg
in
rolb
enter
outsb
dec
cmp
aaa
dec
jl
in
stos
jno
cs
cld
mov
add
mov
jno
not
mov
mov
or
clc
incl
test
shll
and
dec
mov
inc
incl
or
push
pop
test
rorl
add
or
xchg
adc
push
cmp
fs
sbb
iret
adc
adc
outsl
ds
into
out
push
xchg
imul
inc
repz
sbb
push
jl
jne
sbb
outsl
ficoml
jg
call
cmc
cmp
int3
mov
or
or
add
xchg
dec
das
cld
incl
test
decl
add
mov
jns
bnd
clc
xor
dec
mov
mov
push
je
pusha
clc
add
dec
mov
in
call
adc
dec
jmp
bound
imul
or
push
mov
push
jne
or
jge
sbb
jbe
xor
lcall
adc
lret
mov
in
mov
dec
cmp
mov
ja
jns
mov
outsl
dec
sbb
push
andb
cmpsb
clc
popa
mov
incl
adc
jmp
aam
sbb
sbb
push
decl
jae
adc
daa
sbb
pop
xor
mov
add
in
xor
cmp
xchg
jle
insb
cmp
push
ret
rorl
push
test
sub
fildll
lds
shrl
add
cmp
push
xchg
xchg
jbe
jmp
mov
mov
rolb
push
cmp
call
lret
push
push
shll
xchg
dec
xchg
add
fistps
mov
lods
jecxz
cmp
jae
ljmp
icebp
sbb
push
shld
push
bound
rol
imul
push
lcall
push
outsl
add
out
push
xor
sub
test
xor
lock
inc
adc
adc
dec
adc
fldl
cmp
jne
mov
sbb
loopne
mov
pushl
mov
ret
les
jmp
in
leave
out
test
ljmp
outsb
rorb
add
out
mov
lock
push
out
incl
cmc
jg
jo
pushf
mov
fnstsw
sbb
xor
inc
adc
inc
in
jae
push
sub
sbb
lcall
mov
adc
mov
or
or
clc
mov
popa
or
movsl
push
adc
incl
sub
mov
pop
adc
jmp
push
cmp
jbe
repz
je
mov
mov
mov
shll
mov
cmp
pusha
loop
mov
cs
push
push
push
mov
sbb
push
push
mov
xchg
loope
cmc
dec
call
cmp
in
mov
dec
das
fcoms
and
pop
fnstsw
cmp
mov
stos
lret
fmul
test
cmp
add
mov
ljmp
xor
pop
es
das
insb
mov
adc
popf
dec
sbb
cmc
mov
sub
jns
lds
fcompl
adcl
ljmp
das
push
ret
sub
fcmovb
arpl
mov
inc
pop
push
call
xor
imul
loop
cwtl
inc
sub
lods
fadds
ljmp
push
cld
add
cmp
jg
popf
mov
cmp
dec
inc
sub
pop
cli
inc
pop
es
mov
sub
daa
rorb
mov
mov
lods
sbb
mov
lods
mov
jb
pop
xor
and
fmuls
cmp
ret
and
icebp
imul
xor
call
insb
push
push
pushf
sub
sub
or
mov
pushf
xor
push
jmp
cmp
cld
pusha
call
pop
repnz
rcll
pop
ror
lock
test
jmp
test
push
mov
ja
mov
out
push
add
imul
push
stc
jo
sub
or
mov
adc
cmpsl
pop
popf
stos
pushl
out
and
hlt
das
mov
jmp
mov
pop
push
push
and
sub
jmp
push
rol
cli
add
push
jge
adc
inc
pushl
or
inc
and
test
sbb
shlb
incl
in
mov
mov
jle
adc
jge
sbb
ret
or
jl
adc
jg
inc
das
je
jp
add
pop
add
and
inc
movsl
mov
cli
and
loope
fisubrl
mov
cld
orl
out
mov
mov
push
dec
mov
shr
or
fnstsw
add
gs
data16
lret
lds
xchg
gs
mov
mov
imul
inc
call
adcl
cli
add
or
cltd
testl
lock
cmp
jg
mov
pop
sub
ret
lea
pop
jne
sbb
outsl
cmpsl
js
shll
aam
adc
ljmp
mov
pop
push
clc
add
and
decl
scas
sbb
inc
mov
sbb
mov
mov
or
add
aam
mov
add
jns
push
sub
cld
ret
mov
dec
std
pushl
add
sub
add
fdivs
je
lret
push
bound
outsl
inc
cltd
in
imul
jmp
pop
mov
cli
dec
out
jl
imul
lods
cltd
and
push
inc
xor
sub
cmpsb
out
call
adc
je
xchg
inc
add
fdivrp
fucomip
je
add
movsl
push
int
push
mov
push
incl
adc
sbb
mov
mov
rolb
cmp
pop
jl
call
push
add
repz
cmpsb
add
jmp
jmp
clc
xor
xchg
xor
sub
decl
inc
ja
inc
jmp
mov
inc
repz
sbb
add
push
ljmp
test
adcl
push
push
or
shrb
aas
hlt
ljmp
inc
clc
cltd
jne
and
push
cmp
ret
sbb
mov
movsl
dec
mov
jmp
mov
cmc
sub
cmp
inc
out
or
testb
sub
cld
push
call
outsl
mov
test
xor
insl
scas
sbb
adc
add
gs
mov
pop
nop
sbb
xlat
xor
call
add
xchg
jae
jo
sbb
pop
sub
xchg
fbstp
fistps
sti
or
pop
test
ficoms
and
call
push
jmp
aaa
mov
or
mov
push
add
add
mov
lea
rclb
clc
sub
and
mov
push
mov
shl
test
sub
cs
repnz
cli
dec
cld
mov
xor
or
ljmp
lock
mov
dec
adc
inc
adc
push
dec
inc
add
jmp
push
add
add
jbe
sub
lock
movsl
inc
push
ret
icebp
push
fiaddl
or
stmxcsr
mov
adc
lcall
dec
and
adc
mov
pop
cmp
enter
push
mov
mov
loopne
out
adc
sub
adc
stos
adc
pushl
jle
jmp
popa
cld
push
mov
xor
out
sbb
jmp
add
sub
data16
pop
clc
call
test
add
inc
movsb
sbb
push
dec
mov
cmp
and
sbb
and
aam
sbb
jno
clc
ret
jno
cmp
cmp
je
sbb
je
mov
adc
xchg
enter
or
and
mov
add
inc
movsl
cli
aas
inc
push
mov
sbb
dec
cld
fldcw
sub
gs
add
sub
jmp
out
pusha
dec
aam
mov
push
icebp
jg
sbb
jmp
dec
jo
lock
add
bound
mov
mov
je
addl
mov
inc
jle
arpl
lret
ljmp
decl
or
mov
jne
pop
pop
or
xchg
ret
sub
jge
lcall
lea
adc
es
pusha
ds
cmpsb
mov
jmp
or
cmp
sbb
mov
jae
xchg
pop
lret
into
jg
or
jmp
decl
mov
or
addr16
out
sub
add
add
jne
or
daa
xchg
repz
mov
sbb
adc
mov
and
cmp
and
addr16
repz
fnsave
mov
es
lea
lcall
inc
sahf
je
pushl
xchg
call
lds
mov
test
xor
ss
mov
vpshlb
mov
inc
push
cmpb
or
fwait
arpl
arpl
cwtl
icebp
je
sub
insb
jg
cmp
sub
adc
sbbb
pop
pop
mov
fistpll
or
or
mov
out
fiadds
adc
mov
mov
and
mov
je
cmp
push
ret
mov
mov
rorb
xor
inc
cld
jg
pop
mov
or
sub
add
jbe
lock
scas
add
inc
mov
dec
and
sub
pop
pop
unpcklps
xor
cmpsb
mov
repnz
add
jge
mov
subl
ljmp
inc
cmc
pop
adc
or
neg
add
cmp
loopne
xchg
jecxz
sbb
ljmp
or
inc
pop
push
dec
mov
mov
add
jecxz
aam
mov
dec
test
sub
fwait
sbbl
jg
mov
xchg
mov
fcomp
jmp
test
inc
jl
jne
pop
push
cmp
mov
ret
jg
inc
pop
lret
jmp
cmp
sahf
testb
or
dec
add
adc
push
idiv
incl
sbb
cwtl
pop
jno
push
mov
ret
or
dec
in
jae
adc
mov
pop
jg
lcall
mov
fcmovnb
ss
lods
js
sub
xchg
cmp
hlt
pop
in
inc
jae
das
icebp
jmp
test
mov
cmpsb
mov
vphaddwd
int3
movl
lcall
jns
call
jns
out
mov
sti
adc
aas
pop
iret
mov
lods
fisubl
mov
pop
inc
lds
or
mov
dec
insb
push
incl
jne
andw
mov
loope
add
ret
add
jo
xor
dec
mov
data16
incl
sbb
jmp
push
jne
mov
notl
rorl
test
push
shlb
jae
mov
sbb
and
push
mov
mov
daa
sbb
lea
fidivl
lcall
push
shrb
sbb
push
fcoms
and
shlb
pop
outsl
lock
aam
mov
rorl
rcrb
lcall
dec
cwtl
pop
push
or
imul
rol
lea
jle
mov
rorb
fdivrs
push
lret
jne
icebp
inc
shlb
jge
jmp
aas
jb
and
inc
test
xor
sub
add
xor
icebp
das
cmp
adc
sub
test
lds
cmp
inc
mov
pop
test
call
ljmp
sbb
adc
leave
sbb
jne
test
and
outsl
sub
sbb
test
bound
repz
xor
pushf
and
cmp
lods
decl
lea
pop
adc
mov
fisttps
xchg
or
cmp
mov
adc
sbb
or
sbb
xor
mov
mov
clc
call
stc
xor
xor
shll
pop
push
ret
dec
jmp
sbb
jmpw
add
jmp
add
addb
call
jns
or
xor
cs
sub
cmc
pusha
add
andb
push
fisttps
mov
cmpps
xor
movb
adc
cmp
mov
xor
call
cwtl
adc
addb
or
dec
mov
mov
mov
mov
cmc
jg
daa
cmp
sub
int3
jo
mov
sbb
mov
dec
cmp
push
sahf
adc
cmp
push
sbb
sbb
sti
jmp
sbb
loope
mov
push
test
xor
sub
pop
cld
mov
add
mov
xchg
lcall
and
cmp
jmp
pop
andl
mov
dec
aaa
inc
jb
push
or
bnd
icebp
ja
popa
add
pop
pushl
mov
test
or
mov
xchg
aaa
fnstenv
push
inc
ret
lds
push
cmp
movsl
adc
cmp
xor
sbb
inc
dec
cmp
xor
in
shl
enter
add
pushl
or
add
outsb
sti
jb
dec
lock
dec
insb
dec
add
sti
inc
jge
xor
shll
xchg
sarl
xor
xchg
clc
in
inc
test
dec
push
stc
xlat
orl
jmp
or
jo
mov
mov
inc
decl
rolb
rcrl
pop
mov
push
lock
ss
adc
mov
out
call
add
hlt
sub
aam
mov
movsb
shr
push
je
gs
push
sbb
call
pushl
or
je
xor
cmp
push
out
sbb
push
jbe
sbb
ds
push
mov
dec
std
xchg
sub
cs
push
pop
jbe
adc
decl
xadd
sbb
ljmp
rcrl
lea
inc
cmp
xchg
rcrb
shlb
or
inc
call
jmp
mov
inc
cli
sub
and
pop
loopne
decl
and
and
jnp
xchg
add
ljmp
in
jg
or
movsl
jl
sbb
mov
pop
data16
scas
push
call
cli
fisttps
insb
inc
pop
adc
cmp
fwait
mov
aaa
das
mov
mov
call
cmp
sub
inc
sbb
adc
xchg
test
loop
aaa
push
or
mov
call
lock
mov
dec
mov
or
sub
or
clc
ljmp
or
xor
rorl
sar
arpl
gs
mov
dec
rol
insl
hlt
add
mov
or
lcall
in
movsl
or
jg
pushf
adcl
and
ljmp
dec
xchg
int
jmp
loop
push
cmp
fmuls
jg
jmp
push
jmp
dec
add
fdivrs
or
mov
test
les
jg
call
bnd
mov
jbe
andl
inc
cmp
and
cmp
cmc
jg
sub
fiadds
icebp
or
add
in
jg
lds
test
les
jmp
dec
sbb
in
mov
jne
mov
addb
xchg
or
mov
ret
push
push
loopne
add
out
icebp
pop
fsubr
pushl
sbb
cltd
lret
cmp
mov
xchg
xor
movsl
lcall
mov
and
sub
dec
insl
adc
arpl
xchg
mov
sub
in
push
call
lods
shr
or
test
and
jle
ret
push
push
fs
add
je
lea
dec
cld
decl
sbbl
sub
push
and
stos
aad
jmp
cmp
jg
ds
ret
mov
jae
push
fdivp
lea
dec
add
or
mov
xor
mov
cmp
add
cld
jg
sbb
xorb
xorb
cmp
mov
or
xchg
rolb
xor
icebp
inc
shl
mov
push
call
insl
pop
ja
mov
dec
sub
cmp
push
mov
les
lcall
mov
dec
pop
shrl
leave
push
sbb
sub
call
jb
push
out
push
mov
xor
fs
jg
mov
push
sbb
call
imulb
int3
dec
ds
or
xor
push
jmp
jmp
push
lahf
xor
out
cwtl
mov
repnz
call
mov
cmp
dec
jmp
mov
cmp
sbbl
sbb
dec
sub
mov
ljmp
inc
jge
add
aad
loopne
adc
pop
stos
mov
lea
dec
ud0
jg
pop
pop
sbb
es
dec
mov
cmp
jecxz
popf
add
pop
std
fildll
push
jmp
bound
cwtl
inc
mov
fdivrs
arpl
decl
mov
test
jle
fidivrl
shl
inc
mov
aad
sarb
push
mull
xchg
sub
addr16
and
add
cmp
sbb
or
test
jne
dec
dec
sahf
add
cmp
jbe
jg
sbb
inc
and
out
cmp
xor
lahf
movsl
lahf
popf
ret
cld
sbb
jbe
jo
adc
loop
jle
in
push
cmp
call
push
or
jae
iret
push
out
mov
leave
cwtl
push
jg
push
ljmp
push
fwait
lcall
incl
loopne
xchg
pop
cltd
inc
out
rcrb
lods
add
pop
push
jno
dec
pop
js
pushl
sarl
cmp
popa
mov
nop
fadds
icebp
xor
sti
je
iret
rorb
ljmp
pop
lock
or
mov
and
push
push
incl
movb
pop
sub
shlb
adc
out
dec
aad
ret
adc
xchg
ret
xchg
fmul
xor
pop
mov
adc
dec
mov
ss
cmp
xchg
and
sarl
test
push
jbe
or
cmp
ret
ficomps
je
jno
sub
cmp
daa
pop
pop
rclb
pop
stc
pop
jl
cmpl
and
decl
sub
xor
lea
push
jmp
sbb
std
sbb
jmp
lock
mov
sbb
movsl
inc
fisubrs
pushl
jmp
sbb
call
mov
cmp
add
outsl
jg
lcall
xor
pop
inc
fldl
mov
popa
mov
rclb
inc
mov
mov
clc
xchg
je
adc
bound
les
cltd
ljmp
inc
lock
mov
fcomi
sbb
and
outsb
mov
ljmp
mov
stos
movsl
mov
aaa
mov
add
mov
stc
jg
outsl
ljmp
add
push
mov
inc
mov
in
add
jg
mov
outsl
ret
outsl
cli
and
leave
test
pop
dec
ret
sbb
movsl
or
mov
mov
aam
dec
sbb
add
cwtl
sti
sub
inc
mov
push
mov
jno
adc
or
sub
mov
jmp
mov
incb
mov
mov
sub
ljmp
adc
inc
cmp
rclb
fcmovne
ss
xor
push
inc
sarb
leave
lcall
inc
cmp
inc
adc
cmp
rolb
or
or
jmp
sarb
jg
test
adc
sub
roll
pop
or
pop
xchg
xchg
xchg
or
fcoml
pop
cli
push
hlt
xchg
jle
out
fsubs
mov
xor
loope
adc
inc
loopne
loope
mov
test
cmpl
ret
test
dec
les
outsl
pop
cmpsl
push
sub
or
xor
adc
into
pop
mov
dec
add
inc
in
icebp
add
lret
stos
xchg
or
pop
pop
rcll
inc
repz
dec
insb
xchg
add
mov
mov
mov
jbe
iret
testb
xchg
into
add
das
icebp
lcall
jge
push
movl
fsubl
xor
inc
adc
push
hlt
inc
mov
adc
imul
sub
lods
mov
pop
lahf
lds
dec
xor
dec
or
pop
sbb
test
mov
pop
test
rcll
and
testb
aam
jle
jg
incl
in
loop
mov
push
fstpl
jg
sub
inc
mov
fndisi(8087
jmp
test
mov
fucomip
outsl
rcr
sbb
repz
mov
inc
mov
in
ljmp
push
add
mov
test
je
out
loop
jmp
lock
loope
jecxz
lods
dec
das
pop
into
push
mov
les
fbstp
mov
outsb
je
push
jmp
mov
popa
xchg
jg
inc
or
cmp
add
js
popf
cmp
mov
decl
int3
or
mov
inc
mov
inc
cmp
les
inc
cmp
sbb
leave
lock
and
roll
loopne
pusha
cmp
je
and
rcrb
push
and
mov
mov
call
sbb
cmp
js
cmp
sub
daa
fdivr
mov
call
mov
clc
pop
ljmp
pop
ja
add
mov
fstpt
add
inc
add
shlb
pop
pop
aaa
sub
cmp
call
into
jmp
inc
fneni(8087
xor
sub
push
mov
popa
sahf
push
jg
pop
inc
push
inc
lret
pop
movsb
into
mov
fcoml
add
ret
sub
pop
ds
mov
fstpl
lock
mov
push
loopne
pushl
or
mov
into
and
mov
icebp
rolb
inc
inc
cmpsb
push
sarl
stos
cmp
xor
cwtl
sub
inc
sub
adc
pop
mov
stc
iret
xor
or
ret
inc
xorb
add
jmp
sbb
call
add
or
jns
aam
ja
dec
and
inc
dec
or
cmp
movsl
repnz
dec
lcall
sbb
dec
fistps
std
lea
cli
mov
ret
pushl
sahf
push
insb
stos
dec
popf
mov
sub
pop
ja
add
stos
das
icebp
incl
rcrl
ja
sbb
mov
inc
decb
data16
sti
pop
call
ret
or
je
popa
sbb
incl
cmpsb
sub
popa
in
testb
xor
push
pop
and
cwtl
out
dec
popa
into
and
and
lcall
in
pushf
adc
mov
xchg
sbb
imul
xchg
sbb
inc
cmp
ja
aaa
cli
and
xor
inc
iret
int
inc
or
mov
lock
push
fs
sbb
push
in
rorl
cld
lcall
pop
insl
cmpsb
xlat
push
cmp
das
mov
push
pop
mov
lcall
xor
cmp
fwait
pop
inc
mov
fdiv
ds
loope
mulb
sbb
cmp
jmp
push
scas
push
pop
pusha
dec
mov
push
xchg
movb
sub
xchg
and
pop
cli
lcall
cmp
dec
mov
xor
and
mov
lcall
push
movups
scas
or
jmp
icebp
rorb
stos
push
xor
cmp
xchg
leave
xor
je,pn
rolb
jb
adc
stc
dec
sub
or
in
push
mov
lods
or
jge
sub
enter
mov
ret
mov
mov
or
push
ss
mov
mov
cli
lcall
stos
fstpl
add
arpl
inc
dec
arpl
addr16
fstpl
lods
sbb
or
sbb
push
inc
fiaddl
leave
sti
scas
gs
push
test
mov
sarb
cmp
jae
mov
inc
push
test
jo
mov
ljmp
add
pop
cltd
pop
in
rorb
mov
fists
fwait
xor
push
test
dec
lea
lea
pop
mov
push
mov
je
mov
ja
sbb
jle
je
pop
ds
and
cmpsl
lods
cltd
pop
js
dec
loopne
hlt
outsl
adc
or
cs
and
incl
mov
fwait
rclb
outsb
jmp
decb
popa
pop
int3
sub
movsl
fnstsw
pop
or
add
fs
add
lahf
outsl
pop
push
add
push
sbb
scas
pop
das
mov
jo
jmp
shlb
sub
daa
loope
jno
in
dec
pop
sbb
pop
lock
inc
add
and
push
push
incl
das
xor
xor
jae
cmp
and
jne
push
jp
je
outsl
pop
mov
outsl
or
gs
sbb
add
push
sbb
jno
add
mov
cmp
pop
cmc
aas
call
pop
ja
popa
push
out
mov
sbb
insl
pop
decl
jo
movsl
arpl
sub
push
movsb
add
icebp
xchg
clc
add
rclb
add
outsl
pop
sub
sbb
cmpsb
repnz
dec
jno
inc
sbb
test
fstp
cli
jmp
hlt
movl
movb
jp
jg
std
in
leave
gs
dec
pop
add
insb
push
add
cmp
or
enter
test
adc
dec
in
pusha
aad
jno
add
inc
aam
add
test
jg
mov
add
insb
cwtl
mov
inc
leave
mov
add
pushl
jne
filds
inc
iret
or
roll
stos
lods
xor
cmp
adcb
popa
stc
call
popa
rolb
mov
and
mov
push
cltd
xchg
mov
sahf
pop
cld
das
hlt
jg
or
js
mov
fidivrs
adc
cs
rcl
add
push
ljmp
add
aad
out
mov
mov
push
movsl
in
lahf
xor
pop
or
mov
add
mov
test
xchg
push
jmp
add
insl
or
mov
arpl
hlt
mov
bound
sbb
mov
ret
incb
insb
jnp
add
shrl
push
les
cmc
movb
mov
push
bound
cmp
mov
icebp
ljmp
jl
ficoml
gs
aam
pop
or
dec
into
subb
add
loop
mov
out
xchg
fdivr
pop
jle
popa
lret
sti
hlt
addr16
fscale
outsb
push
outsb
xor
inc
loope
decl
pusha
fiaddl
jae
add
in
add
jmp
jl
xchg
mov
cli
jg
jno
push
stos
inc
add
add
adc
xchg
leave
add
mov
jmp
test
add
aam
mov
push
stc
ficomps
leave
fldcw
add
cwtl
shlb
add
dec
pop
orl
mov
sarb
mov
pop
lcall
cli
add
inc
aad
scas
ja
rcrb
incl
push
add
jae
or
test
hlt
xchg
ds
or
mov
sahf
jp
iret
push
in
ljmp
daa
scas
add
mov
clc
ljmp
pop
jge
xchg
ror
or
inc
add
imul
jg
pop
std
xorb
sbb
and
jbe
aam
loopne
add
mov
jg
adc
dec
insb
fistpll
mov
mov
mov
call
jle
jg
xchg
inc
les
ret
push
repnz
add
shll
mov
decl
jg
aas
dec
ss
or
sbb
scas
testb
add
pusha
jp
mov
das
cld
fucomi
pusha
dec
push
fbld
out
mov
xor
imul
sbb
mov
mov
sbb
push
movsl
adc
int3
add
mov
mov
add
lds
or
push
inc
cli
fistpll
pop
cmpsl
call
jbe
iret
shlb
sub
scas
ficomps
ret
decl
fmull
arpl
or
or
pushf
aas
ss
jmp
pop
cli
test
add
add
xchg
adc
lret
scas
sub
jnp
sbb
xchg
or
fstpt
and
roll
clc
mov
push
jg
ficompl
int
mov
mov
outsl
ja
inc
mov
out
sarb
jae
lret
pop
or
adc
lcall
clc
or
push
dec
jg
les
loop
mov
sbbl
loope
dec
dec
ret
cmp
bound
xchg
movsl
inc
jb
ds
push
scas
fcompl
fldenv
movsl
add
fnstsw
lock
jmp
cli
xchg
test
jg
jb
jmp
repnz
mov
mov
lret
sti
push
cmpsb
xchg
and
ss
mov
xchg
push
xlat
int
push
ficomps
jp,pn
mov
dec
popa
call
add
dec
pop
xchg
sub
aaa
mov
mov
sbb
add
add
js
mov
and
outsl
push
scas
mov
sbb
adc
add
and
adc
mov
ret
and
add
cmp
pop
or
add
xor
das
cld
pushl
push
push
pop
jae
and
add
or
mov
pop
js
js
mov
push
adc
push
xchg
and
add
or
add
insb
jns
outsb
jne
insb
or
mov
ret
dec
inc
dec
pop
dec
inc
inc
push
pop
mov
push
inc
inc
mov
add
decl
push
inc
push
push
jmp
pop
outsb
add
notl
mov
adc
outsl
pop
xor
jo
adc
add
bound
decl
mov
or
push
loope
insb
outsl
pop
dec
loopne
arpl
insb
mov
popa
push
sub
outsl
sbb
imul
inc
jno
popa
jb
xor
outsl
std
stc
pop
mov
and
dec
and
push
push
pop
iret
aam
pushl
xor
jnp
pop
mov
bound
mov
jle
push
inc
setae
loopne
pushl
outsl
mov
jae
inc
pop
gs
jne
rcrb
test
dec
inc
push
dec
cmpsl
xchg
icebp
incl
sub
push
pop
scas
sbb
imull
pcmpeqb
das
into
call
jnp
add
pop
mov
pop
cli
daa
test
sti
clc
aaa
std
jl
ret
cmp
sti
jle
mov
cld
pop
or
inc
or
add
adc
ljmp
add
addr16
call
and
test
test
jb
mov
push
xchg
cmp
test
push
push
in
insb
fwait
push
push
dec
dec
inc
sbb
call
cli
pop
dec
sti
dec
mov
push
xor
cmp
sub
movsl
insb
inc
sbb
fcmovnbe
push
cmp
loopne
addr16
or
jo
popf
daa
sbb
std
jg
lahf
insb
data16
push
popf
jno
or
add
mov
aaa
lods
or
pop
fs
repz
jbe
fcomps
cld
mov
jmp
pop
arpl
push
insb
sub
pop
pop
fs
or
pop
jmp
popf
pop
bound
cmp
notl
outsl
jo
jle
jmp
jb
adc
cmpsb
ret
ja
cmp
sub
jmp
sbb
aaa
repnz
xor
lods
adc
arpl
jg
aad
das
xchg
repnz
cmp
mov
lret
jne
clc
inc
jg
add
popa
insl
dec
dec
es
ss
xor
call
dec
jb
out
inc
mov
fistpll
mov
popa
add
push
pusha
shrl
ja
mov
mov
adcb
add
bound
fs
jg
xor
incl
adc
stos
inc
inc
sub
and
pushf
test
test
or
push
pop
and
push
mov
in
add
mov
dec
loopne
and
xor
insb
add
jmp
negl
push
mov
dec
pusha
aam
jne
push
test
xchg
pop
jbe
into
push
popa
sbb
ljmp
inc
dec
jo
jns
mov
test
insb
inc
and
call
dec
outsl
es
lahf
je
sub
pop
add
gs
pushl
movb
add
add
fistl
loop
push
jmp
cmp
popa
mov
jmp
sbbb
dec
inc
jae
fwait
pop
inc
or
incl
pop
mov
inc
gs
dec
lahf
inc
mov
test
dec
and
jmp
pop
push
add
push
dec
cmp
dec
les
jg
ljmp
inc
or
add
pop
pop
test
sub
ret
dec
outsb
test
loop
and
pop
xor
jbe
pop
push
jle
mov
sti
ret
js
daa
fcoml
xchg
push
adc
sub
arpl
cmp
push
int3
jg
and
ficoms
data16
mov
test
mov
xchg
push
call
add
xchg
push
ret
iret
xchg
push
lock
inc
rcrb
test
xor
mov
add
mov
pushl
and
lahf
mov
pop
mov
ja
inc
jmp
das
fcoms
out
xchg
mov
mov
adc
sbb
movsl
movsl
cs
cld
xchg
xorb
mov
jmp
mov
jo
fwait
aaa
loop
xor
and
adc
pop
cmp
clc
das
xor
xchg
and
lret
mov
xor
test
cld
and
cmp
fildll
ljmp
sbb
ds
or
lahf
mov
dec
cmp
lcall
repnz
push
lcall
xor
lahf
pop
jecxz
mov
jmp
je
xchg
lahf
xchg
outsl
pop
mov
ljmp
adc
in
jmp
jae
sub
jno
negl
aam
call
mov
nop
mov
repnz
jge
hlt
pop
cli
in
out
mov
push
fcompl
ret
or
call
das
mov
jge
mov
adc
rol
or
in
and
sbb
inc
jo
add
add
insb
dec
popw
es
das
lock
lcall
jl
add
bnd
fsubp
into
sahf
mov
jle
add
out
xchg
clc
cmp
and
xchg
jecxz
iret
cli
fs
iret
or
mov
repz
iret
pop
cmp
js
mov
movsb
mov
loopne
fstpt
outsl
jne
out
sahf
pop
jns
mov
movsb
sahf
mov
shl
loopne
repnz
jbe
repz
in
ja
iretw
jle
jg
lcall
into
cmp
out
gs
push
sahf
sub
dec
out
sahf
jl
xchg
jmp
jns
lock
js
sbb
cmp
inc
iret
pop
cmp
xor
iret
mov
fdivr
das
adc
insb
and
xor
dec
jns
and
sahf
push
xchg
push
out
jge
sub
mov
rep
lods
xor
inc
repz
insb
jl
mov
lcall
aaa
mov
or
jns
adc
outsl
inc
jnp
or
jns
pop
out
sahf
adc
mov
pop
lods
xor
pop
xor
cs
or
dec
outsl
fs
incl
inc
imul
sarl
push
arpl
gs
add
inc
jns
lods
jle
call
push
add
push
popa
cmp
sub
inc
insb
orb
popa
outsb
fs
sbb
cmp
clc
sbb
adc
je
std
call
push
imul
stc
and
push
addr16
inc
push
mov
call
incl
push
imul
sbb
popf
jnp
aam
mov
aam
out
mov
lods
outsl
push
adc
lret
or
hlt
mov
mov
imul
pop
enter
add
lret
inc
decb
push
jo
cmp
clc
mov
adc
jle
mov
inc
imul
jmp
push
jne
sub
cltd
imul
outsb
jg
pushl
repnz
lds
pop
jns
popa
out
negl
roll
nop
insl
stos
clc
or
sbb
decl
mov
jo
jb
mov
lcall
cmpsl
inc
sbb
lret
push
adc
push
clc
push
repz
pop
jb
pop
lds
incl
cmp
dec
dec
push
in
je
ss
jbe
pushl
jae
mov
std
cmp
sbb
in
test
cmp
push
jns
incl
push
fdivr
sub
inc
pop
outsl
mov
mov
int3
mov
decl
dec
xor
dec
inc
xor
daa
je
xchg
lret
inc
or
adc
sbb
and
cmp
push
cmp
jns
jns
fidivl
cmc
jl
in
pop
jl
call
jns
lds
lds
pop
cmp
jo
gs
dec
xor
std
movzwl
cmp
sbb
arpl
lahf
jl
mov
or
nop
mov
lcall
hlt
jae
jno
leave
jno
xor
jo
mov
push
nopl
ret
stos
jne
js
dec
mov
gs
pop
arpl
loopne
pop
mov
ljmp
rolb
mov
das
mov
bound
cmc
pop
call
imul
jbe
xchg
decb
das
mov
sub
jp
inc
dec
mov
jae
aaa
lods
aaa
and
adc
ret
ret
cli
js
jb
mov
sarb
aam
pop
push
sbb
aam
jbe
out
outsb
addr16
incl
jb
sti
out
xlat
jb
mov
fstps
mov
fnsave
in
xchg
xor
loope
sbb
jns
imul
faddl
mov
inc
cmc
mov
cmp
add
jl
stos
jmp
std
pop
call
pop
in
insl
out
dec
pop
iret
shlb
inc
loop
push
ds
or
or
ret
dec
pop
lea
jns
jge
incl
mov
cli
or
xchg
notl
jmp
xor
mov
and
mov
xchg
inc
mov
dec
push
ret
mov
ljmp
jmp
decb
inc
push
pop
mov
fs
inc
popf
xor
je
push
std
jmp
sbb
pop
jbe
push
cmp
scas
lds
ss
fsubp
or
cmpsl
mov
dec
rorb
lcall
mov
inc
push
fistpl
jl
pop
push
jg
inc
insb
insl
push
mov
dec
data16
std
and
iret
imul
das
hlt
das
and
in
adc
xchg
fwait
or
jno
inc
push
or
hlt
das
icebp
sti
push
shrb
push
dec
and
sbb
pop
loope
push
and
pop
sub
nop
jae
push
add
add
sub
sub
aad
jg
mov
add
pusha
adc
add
jae
cmp
mov
sub
mov
xchg
cs
push
push
or
or
les
cltd
ss
xor
pushl
add
sub
ret
imul
stos
pop
cs
adc
leave
add
add
fistps
add
cli
out
call
cwtl
cltd
sarl
and
or
jmp
movsb
adc
aam
mov
cs
loope
std
das
lock
popf
lcall
je
enter
or
xchg
rcrb
pop
jecxz
in
xchg
rol
pop
or
adc
movsl
jg
fbstp
lcall
sbb
adc
filds
idiv
pop
js
push
jae
orb
arpl
outsb
leave
pop
xchg
adc
lcall
in
cltd
mov
xchg
lret
add
ret
test
popf
adc
cs
or
cwtl
repz
mov
imul
sahf
and
rcll
popf
repz
lret
insl
sbb
pop
mov
and
ljmp
add
inc
rcrb
adc
je
mov
fstps
mov
loopne
adc
mov
iret
lret
xor
pop
fimuls
movsl
cli
hlt
std
call
xchg
movsl
cmp
jno
add
enter
adc
shlb
ja
lcall
bound
add
cld
in
leave
jmp
cli
add
std
std
jmp
ljmp
sub
pushl
add
in
lock
aad
paddw
lock
jmp
jmp
loopne
sbb
out
add
stos
stos
stos
cltd
ret
lret
repnz
inc
adc
sti
lock
cmc
das
hlt
push
ljmp
shll
fistps
shll
add
dec
dec
test
je
call
push
and
sbb
jae
clc
sbb
sbb
clc
mov
mov
lds
stc
sbb
pop
dec
pop
stos
je
jg
movsl
fists
stos
clc
fwait
sub
cmp
push
lock
jg
mov
repz
cmpsl
mov
dec
push
xor
call
pop
add
rcrl
cmp
es
imul
outsb
outsb
hlt
outsl
jmp
add
das
in
adc
inc
jbe
je
fiadds
add
inc
shr
std
jmp
ficoml
mov
test
and
lret
add
adc
bound
and
sbb
les
sbb
pcmpgtd
and
dec
sub
jmp
inc
xor
imul
push
push
adc
aas
das
lcall
ret
mov
cs
mov
xor
xor
mov
incl
mov
je
mov
push
and
xchg
and
roll
xor
pushl
add
mov
push
and
lds
mov
adc
push
dec
icebp
lcall
in
sub
add
add
cmp
push
cmpb
rorb
add
data16
call
push
adc
jecxz
inc
mov
mov
sbb
adc
mov
dec
mov
leave
and
dec
and
cmp
inc
add
pop
push
out
lcall
in
xor
std
int3
inc
add
jo
scas
je
inc
shlb
cli
decl
or
in
popf
pop
adc
icebp
icebp
sub
add
cmpsb
push
and
dec
enter
jecxz
inc
xor
lock
lods
mov
push
jg
or
popf
add
dec
inc
pop
add
mov
call
dec
mov
adc
adc
push
daa
inc
enter
pop
fdivr
addr16
outsl
call
les
int
sub
pop
pop
mov
icebp
movsl
jg
aas
cmpsb
iret
pushl
cld
stos
pushl
dec
pop
pause
iret
inc
cmp
js
xor
jle
js
dec
mov
ljmp
decl
dec
mov
popaw
in
or
jnp
sub
std
mov
loope
sbb
fcomps
rclb
test
cmp
daa
cltd
push
jp
mov
fstps
mov
gs
cmc
lods
test
clc
jecxz
lds
pop
add
aad
icebp
decl
push
cltd
in
jle
je
mov
pop
dec
pop
sub
and
or
roll
jg
loope
pop
loopne
outsl
pop
adc
dec
inc
sub
pop
push
sbb
sarl
mov
add
call
aaa
cli
xchg
popf
xor
xor
add
sbb
div
cmpsl
push
xchg
sbb
jnp
ljmp
mov
rcl
dec
add
pop
jne
add
std
pop
cld
dec
jg
cmp
sub
jnp
test
popf
adc
pop
loop
add
jo
cmpsb
cltd
addr16
fldenv
mov
sub
jge
fisttpl
imul
insl
mov
xchg
pop
mov
pop
or
pushl
add
shrl
call
xor
inc
sbbl
fs
cmpl
jb
out
add
loopne
cli
mov
in
lcall
jno
shll
lret
xor
or
test
call
jmp
outsb
pavgb
dec
imul
mov
scas
pop
pop
test
bound
ja
pop
add
jmp
pop
orb
push
dec
push
stos
pop
and
inc
jg
mov
add
popl
pop
clc
inc
arpl
dec
sub
jmp
sub
dec
out
and
add
std
cmp
xchg
subl
pusha
icebp
stos
popf
and
loopne
int
aad
lods
in
jne
cmp
sub
add
sbb
int
icebp
jecxz
insb
sahf
add
add
or
push
pop
out
cwtl
add
add
push
mov
lret
andl
push
add
adc
test
adc
mov
add
mov
add
adc
cs
aaa
mov
js
scas
adc
leave
pop
outsl
aaa
jp
pop
cwtl
inc
cmp
test
data16
outsl
incl
mov
xchg
enter
movsl
adc
mov
lcall
loope
fsubrl
rcr
xor
pop
push
inc
decl
cld
add
fcomps
push
xchg
lcall
incl
in
jle
adc
mov
xchg
rorb
mov
sub
dec
loopne
xor
shrb
loopne
xlat
xchg
jl
ret
jmp
sub
push
jbe
jns
push
pusha
jae
inc
jge
xor
pusha
xor
jle
fildl
es
and
call
out
dec
aas
repz
test
mov
xchg
push
repz
in
mov
in
lock
mov
popf
insl
flds
flds
pop
rcrl
adc
fcos
or
lret
xchg
add
stc
incl
jge
jbe
mov
adc
std
jp
loopne
cmc
call
cli
negb
inc
mov
push
dec
inc
sbb
or
push
enter
ljmp
decb
push
inc
and
push
dec
push
dec
and
add
push
mov
dec
call
dec
inc
dec
icebp
add
sub
and
loopne
push
iret
add
call
orl
daa
dec
ret
pop
adc
cmp
mov
push
cmp
dec
sub
and
icebp
pop
cli
ljmp
xor
pop
xor
movsb
popl
addr16
xchg
push
or
and
add
or
idivb
imul
push
push
push
sbb
xchg
orb
stc
loop,pt
push
add
and
jmp
cmp
xor
test
call
or
testb
dec
repnz
scas
push
or
and
inc
sub
loop
inc
stc
and
out
jg
ljmp
push
add
add
mov
mov
push
pop
push
push
add
dec
sbb
scas
xor
adc
in
sbb
inc
mov
pushl
loope
add
mov
pop
or
popa
mov
push
cmp
sub
lret
aad
in
fs
xchg
pop
mov
add
cli
sbb
add
lahf
incl
mov
inc
mov
add
add
mov
rcl
adc
cli
mov
mov
and
mov
mov
pop
cs
lock
jmp
pop
and
movsl
shll
pop
lea
push
add
mov
js
mov
add
fwait
test
call
jg
dec
fldcw
cmc
stos
pushf
or
cmpsl
icebp
pusha
shlb
ljmp
jns
mov
sbb
add
rep
test
xchg
es
push
ret
inc
stc
ret
add
jg
pushl
mov
stos
pop
cmpsb
jmp
clc
pop
sbb
hlt
call
das
inc
test
jp
cmp
sbb
in
es
call
jg,pn
fists
loope
lods
or
add
das
cld
call
icebp
add
jo
test
scas
jb
aam
pop
xchg
sbb
cmp
incl
add
mov
mov
or
call
or
jp
stos
mov
inc
mov
pop
jne
push
rclb
inc
or
add
adc
cmp
flds
cmp
decl
inc
dec
or
jo
aaa
sarb
jne
popa
mov
jno
push
jbe
rorb
dec
push
insb
mov
int3
cmp
ds
and
test
out
push
scas
jae
inc
mov
push
fs
das
inc
add
mov
add
or
arpl
sub
sbb
pushl
inc
cmc
push
jmp
loop
inc
repz
pop
and
lds
addr16
xchg
adc
dec
testl
add
lods
inc
aam
scas
inc
and
ret
mov
mov
cmp
inc
inc
add
cmc
cmp
mov
mov
push
popa
inc
inc
inc
jo
inc
dec
dec
sub
dec
movsl
add
push
call
test
push
add
push
add
outsl
jo
sarl
mov
jbe
js
jp
xor
into
xor
ss
cmp
jmp
mov
and
ss
mov
call
add
adc
arpl
inc
jg
dec
cld
cmp
int
jbe
imul
sub
call
or
call
cwtl
das
call
fildl
call
add
mov
push
mov
mov
repnz
xor
cld
lods
call
into
lahf
imul
loopne
call
or
pop
jl
lcall
or
addl
push
add
add
push
sarl
cli
rorb
or
stos
and
mov
mov
mov
out
repz
je
inc
jmp
mov
lds
add
lcall
popa
ret
pusha
mov
jo
mov
mov
sar
push
arpl
je
mov
mov
das
in
pop
add
add
mov
mov
incb
das
ss
mov
call
mov
gs
pushf
cmp
insb
and
mov
mov
add
dec
ljmp
ss
dec
mov
outsl
add
add
call
roll
clc
inc
iret
or
jl
and
jne
and
lds
jg
dec
or
out
sub
call
ret
mov
repnz
cld
fnstsw
xlat
cld
call
lock
mov
pop
mov
lods
cs
outsl
icebp
decl
push
lret
mov
aad
popf
and
pop
inc
shr
mov
mov
shlb
sarb
addb
add
xor
sub
cmp
xor
fcoml
or
dec
pusha
jno
cwtl
incb
mov
push
jmp
call
out
movl
movsl
or
pop
ret
jg
mov
sbb
push
fidivrl
mov
das
dec
in
cmp
inc
adc
pushf
ss
sub
push
insb
jbe
movsb
ret
cs
sub
mov
mov
inc
pop
ret
xchg
insl
sub
cmp
cs
cs
pop
mov
jge
cmp
mov
push
pop
daa
pop
in
mov
js
fdivrl
dec
push
inc
push
cmp
mov
add
sar
call
adc
cmp
inc
loope
cmp
insl
push
fadds
cmp
xor
dec
movsl
test
addr16
test
sahf
push
mov
push
data16
or
or
aam
pop
outsb
in
lods
pop
scas
in
cwtl
in
mov
pop
mov
ljmp
arpl
push
ja
test
test
xor
adc
jg
jno
inc
push
sub
xor
push
inc
mov
pop
dec
xor
push
add
das
shr
jmp
push
scas
mov
aaa
pop
les
incl
ljmp
or
mov
inc
cmp
inc
fldenv
js
ljmp
mov
sar
push
sti
aam
jmp
cmp
sbb
jl
push
pop
pop
pop
mov
jge
lods
roll
jp
hlt
aaa
clc
jmp
mov
cmp
sbb
push
push
jg
push
sbb
pop
cmp
xchg
xlat
jbe
pop
xor
xor
pop
fucomip
mov
mov
lods
lods
sub
or
or
popf
inc
rorl
incl
adc
jg
cltd
insb
imul
mov
imul
fs
movsl
and
in
cmp
jg
ljmp
xor
std
ljmp
push
insl
pop
aaa
repz
and
imul
xor
sub
decl
sti
xorl
jno
cmp
pop
in
add
jmp
push
adc
out
mov
cmp
sarl
sub
lods
incl
add
in
or
in
in
out
sti
push
mov
mov
adc
inc
push
pop
sbb
or
rclb
or
adc
sbb
bound
mov
fistl
dec
pusha
and
inc
xor
xor
jbe
aaa
adc
cmp
mov
adc
adc
jb
adc
jecxz
js
movsb
in
pop
push
jg
mov
add
add
push
pop
pusha
fadds
adc
aas
inc
push
adc
inc
sub
rolb
add
shr
rorb
testb
sub
test
incl
adc
or
add
xchg
inc
rolb
mov
daa
gs
mov
shrb
cmp
test
dec
aam
hlt
outsl
add
shl
in
loopne
ljmp
mov
popf
shl
xchg
mov
fistps
sub
out
jns
out
jns
jecxz
sub
fdivrl
mov
dec
cld
fidivrs
ret
sbb
mov
cmp
int3
sub
mov
fdivr
pusha
mov
xor
nop
in
add
movsl
subl
mov
pop
mov
test
jg
fidivrs
jg
pop
cld
mov
notb
out
idiv
cmp
mov
jg
fs
cli
decl
jmp
idivl
hlt
mov
mov
mov
test
xor
mov
mov
jg
je
out
xor
adc
out
sbb
mov
mov
les
shrd
and
and
cmp
cs
sub
dec
push
add
sbb
add
ja
mov
call
int3
mov
jecxz
xchg
into
repz
push
pop
call
or
das
jno
lahf
jns
jecxz
xor
mov
pop
outsb
xchg
fisttpl
inc
rorb
mov
cld
dec
fdivr
push
pusha
ja
sahf
dec
mov
mov
jg
test
decl
add
cld
aas
mov
lock
mov
jmp
clc
sbb
cld
mov
dec
jg
mov
mov
mov
xchg
sar
jmp
in
das
jg
in
clc
fdivs
add
jg
loope
jno
rcr
sub
cmp
mov
incl
push
ret
pusha
mov
lds
mov
sub
arpl
mov
adc
ljmp
jne
movsb
loopne
dec
ja
xor
inc
fbld
out
popa
push
push
jns
incl
imul
xor
xor
xor
cld
xor
cmp
repnz
clc
inc
ja
cmpsl
pop
add
and
push
inc
dec
fiadds
lahf
decl
in
push
jne
dec
sub
mov
jo
xlat
mov
xor
push
loop
mov
jge
out
add
out
add
das
das
xor
xor
out
xor
cmp
in
mov
mov
add
repz
stos
pop
aaa
jae
mov
inc
leave
iret
jae
into
jae
jmp
test
cmc
outsb
cmp
mov
aad
sbb
push
jbe
xor
xor
xchg
out
sbb
jo
notrack
int
out
ds
repz
loop
fists
popf
cmp
shrl
cld
aaa
fistps
stc
xor
xchg
mov
das
adc
mov
mov
push
xor
sub
je
push
jmp
push
scas
data16
int
cmp
cmp
jns
pushl
out
sbb
adc
jmp
aaa
mov
adc
decl
mov
pop
sub
pop
ljmp
dec
dec
mov
inc
push
inc
cmpsl
mov
add
imul
adc
cwtl
xor
inc
ret
clc
jle
pop
add
pop
in
xorl
jae
jbe
cs
add
fnsave
insl
or
call
xchg
xor
mov
push
add
xrelease
bound
mov
inc
out
test
add
inc
ret
xor
call
fisubrl
cmp
adc
jge
pop
pop
dec
sub
or
fldl
roll
inc
mov
add
insb
pop
and
ja
leave
xchg
fs
pop
ja
or
mov
jg
and
stos
push
sub
cmc
push
cmp
popf
stos
cmp
test
shll
imul
dec
dec
push
xor
repz
adc
push
popf
or
cmp
cmp
pushl
pop
aas
cmp
inc
mov
mov
adc
lahf
jno
lods
pop
std
xor
ja
insl
cwtl
xor
outsb
pop
jns
add
std
call
aaa
or
in
mov
pop
lcall
sub
outsb
out
cmp
cmp
cmp
gs
outsl
sar
je
imul
cmp
ret
mov
pushl
hlt
push
push
das
dec
push
cmp
nop
cwtl
jae
daa
nop
inc
sub
pop
pop
mov
mov
test
fmuls
or
cmp
roll
popa
dec
in
dec
or
shl
ret
movsl
pop
fmuls
ffreep
imul
cmp
dec
or
sbb
mov
pop
and
add
bound
icebp
rcpps
ja
sar
ljmp
outsb
push
stc
cmp
int3
daa
inc
dec
or
push
inc
pop
or
sbb
and
or
ljmp
push
or
jb
jecxz
std
mov
popa
push
call
or
and
arpl
mov
push
cmp
sub
lock
outsb
xor
cmc
fisttpl
shlb
jae
pop
loopne
pop
mov
data16
in
test
jmp
xor
js
add
shrb
incl
les
sti
mov
hlt
outsl
hlt
lcall
adc
cmpsl
pop
or
dec
lcall
in
mov
and
pop
push
jo
nop
cmp
hlt
aaa
xchg
insl
test
fcos
call
clc
push
pop
add
fidivrs
or
dec
add
and
call
lahf
mov
cmp
push
ds
das
dec
jge
dec
out
pop
outsl
outsb
push
lret
cmp
ljmp
mov
pop
inc
frstor
sub
popa
mov
pop
push
and
je
insb
pop
pushl
cli
pop
fnstcw
jl
repnz
push
das
imull
sbb
mov
or
push
stos
pop
push
push
sahf
sbb
into
jnp
pop
es
jno
call
stos
roll
fstps
psrad
in
mov
cltd
out
jl
loope
data16
mov
movsl
bound
or
jae
jmp
iretw
rclb
sub
push
movsl
test
imul
push
std
adc
xor
lahf
mov
pop
adc
call
sub
mov
mov
xor
add
add
mov
dec
inc
mov
ljmp
cs
sub
mov
hlt
add
pop
fcoms
dec
pop
xchg
js
std
call
adc
jmp
cs
add
addr16
cmp
push
orb
inc
flds
call
repnz
stos
pusha
add
dec
inc
popa
pop
out
mov
adc
pop
pop
iret
add
js
insb
jb
pop
mov
add
hlt
fdivrp
sbb
fidivrs
enter
cmp
nop
repz
das
lock
cld
xor
popl
fidivrs
lods
fldl
nop
imull
inc
js
ljmp
inc
mov
adc
cld
fsub
rcr
push
or
mov
push
push
sbb
repz
sbb
pop
fisttpl
test
or
repz
lock
out
mov
fimull
and
sub
jl
aas
mov
je
lcall
icebp
hlt
fdivr
mov
and
hlt
xlat
lock
loop
in
mov
pop
dec
pusha
inc
mov
clc
loopne
mov
mov
jl
dec
dec
cld
or
cld
jg
aad
enter
repz
cwtl
cld
sbb
sbb
aam
ret
rcl
clc
mov
aam
pushl
jg
lahf
sub
loope
int3
jp
xchg
mov
rorb
fisubrs
jl
fs
sbb
rcrb
lods
push
pop
inc
lods
rolb
jns
je
jle
jg
lahf
adc
mov
cmp
inc
add
and
addr16
movsl
mov
arpl
inc
xor
ffreep
fucomip
xchg
push
outsb
mov
xchg
jnp
aaa
jge
clc
decl
xchg
shl
dec
cmp
sbb
imul
js
mov
or
in
add
cwtl
call
dec
xor
pop
pop
xchg
pop
xchg
lcall
pop
dec
push
dec
pop
fidivs
je
mov
sub
push
add
leave
xor
pushl
xchg
sub
cmp
cwtl
pop
pop
pop
jae
xor
fs
jg
outsl
insl
and
test
mov
dec
gs
ljmp
and
les
insb
add
dec
lcall
push
dec
addr16
sub
jmp
sbb
fldcw
loop
jae
xor
push
jg
pop
and
push
jmp
test
xchg
xor
sti
scas
mov
dec
jne
bound
das
pop
call
sti
fs
es
sub
sub
pop
xchg
pop
pop
jno
dec
or
cli
jmp
into
pop
adc
je
mov
loop
outsb
cltd
sub
push
arpl
xchg
inc
lds
xchg
std
aaa
fdivs
incl
aas
or
imul
push
push
lcall
insb
adc
push
jmp
popa
or
xlat
mov
lret
jp
lods
loop
jbe
inc
lret
mov
je
push
in
stos
fucomip
dec
scas
sbbl
mov
aaa
ljmp
dec
push
lods
dec
inc
dec
inc
fnstenv
popa
dec
xchg
pop
jb
arpl
daa
inc
mov
jmp
dec
adc
inc
adc
insb
sbb
arpl
in
lods
inc
inc
jle
sahf
or
mov
arpl
and
icebp
xor
das
dec
xor
idivl
lcall
cld
xor
dec
sub
scas
jne
mov
xor
aaa
mull
repz
jp
or
jmp
xlat
incl
lods
inc
xor
inc
or
push
pop
inc
into
inc
out
rolb
outsl
mov
pop
ljmp
push
or
out
or
into
pop
scas
jg
ds
pop
repnz
push
jne
push
imul
cmp
cmc
imul
repnz
iret
adc
inc
mov
pop
outsb
pop
inc
insb
test
aaa
sub
cmc
popa
jne
push
xor
pop
push
imul
dec
testl
push
inc
jb
imul
and
cwtl
jg
ljmp
filds
push
mov
mov
mov
push
jb
xchg
jae
mov
pop
and
dec
mov
sub
pop
insb
pop
pop
mov
dec
int3
test
jnp
jbe
ret
pop
aaa
cmp
ja
imul
inc
out
inc
jl
scas
ret
pop
sbb
fwait
sub
mov
push
repz
inc
insb
sbb
sub
fdivr
gs
jnp
xor
dec
inc
jg
loop
xor
sbb
and
outsb
cmc
jne
shrl
xor
xor
fidivs
dec
je
pop
cld
pushl
daa
jo
dec
pop
or
sarb
mov
push
outsl
xor
xor
mov
sbb
inc
je
ljmp
cmpsb
xlat
pop
cs
or
jg
lcall
arpl
inc
ret
nop
rcll
ret
sti
cmp
dec
inc
dec
xchg
jg
add
push
lods
movsb
push
jbe
xchg
push
sahf
adc
jmp
push
xor
and
lea
sub
movsl
xor
adc
addr16
decl
std
jns
xlat
inc
xchg
mov
push
push
js
add
xchg
xor
scas
add
das
pop
mov
jne
data16
cld
or
das
mov
lcall
pop
bound
dec
dec
data16
sub
imul
push
dec
js,pn
sub
pushl
aas
inc
cmp
notl
sub
inc
je
add
ljmp
cmp
dec
xor
fldt
popa
addr16
jae
jb
aad
outsl
pop
call
xor
add
fs
and
negb
std
decl
ja
das
jo
outsl
jle
outsl
inc
mov
cs
sub
hlt
mov
data16
bound
in
pop
lods
sbb
mov
inc
mov
dec
pushl
insb
push
in
dec
sbb
ja
mov
cltd
mov
popa
lea
outsl
imul
push
std
test
push
jne
cmp
test
in
and
mov
sub
ret
cmp
pop
sub
or
mov
in
sar
outsl
jb
fldl
mov
inc
movsl
mov
pop
push
jbe
cltd
sub
clc
fmulp
jno
outsl
push
mov
arpl
jns
clc
inc
sub
outsb
stos
add
jb
xor
leave
mov
cs
pop
insl
adc
mov
inc
push
push
shrb
or
bound
call
sub
sbb
xchg
imul
adcb
inc
rclb
imul
jo
outsb
daa
mov
cs
jmp
jne
arpl
out
lods
data16
out
loop
scas
jle
mov
movsb
push
popa
sti
jmp
aaa
xlat
jg
pop
mov
dec
pop
push
test
das
icebp
mov
stc
sub
pop
je
pop
gs
or
jg
sti
imul
or
and
insb
inc
mov
pop
insb
std
incl
addr16
pushf
cmp
insb
aam
aam
mov
mov
cli
mov
and
xchg
cmp
push
jae
outsb
pushf
aas
add
lods
decl
inc
lret
ret
push
dec
or
dec
in
pavgw
daa
test
fbld
jl
test
gs
aam
push
call
pushf
test
pop
xor
xor
ret
jmp
push
and
rclb
cs
xchg
xor
das
mov
mov
lcall
and
pop
divb
sbb
inc
xor
sub
aas
adc
xor
adc
and
cmp
or
mov
xchg
sbb
sbb
aaa
ja
pop
cli
mov
mov
lret
or
and
shrb
decl
int3
lret
test
stos
sub
fwait
mov
xor
nop
decl
add
out
ja
xchg
mov
pop
cmpsb
cli
sub
incl
mov
enter
sbb
fmuls
cmp
lock
mov
push
push
je
test
jae
insb
mov
inc
xor
fsubr
ljmp
mov
dec
pop
xor
push
push
push
jae
in
pop
xor
sti
fwait
bound
mov
inc
cmp
fldcw
push
inc
sar
ljmp
sahf
sbb
gs
gs
bound
and
xor
jle
pop
pop
xchg
dec
jo
rol
repnz
or
cld
incl
sub
aad
pop
in
shrb
push
cld
arpl
inc
sub
mov
xor
jl
loope
pop
clc
mov
pop
mov
push
or
inc
jmp
ljmp
add
jmp
add
in
inc
les
add
cmpsl
aas
pop
push
dec
mov
dec
in
or
jns
push
lret
cmp
fstps
cmpsb
push
sbb
sbb
and
ljmp
subb
sbb
mov
outsb
mov
adc
insl
adc
dec
ljmp
lock
jne
mov
dec
cs
add
lea
xchg
add
dec
adc
pop
jne
outsl
or
pop
ljmp
or
pop
inc
xor
mov
js
push
js
sbb
push
push
pushl
dec
sub
filds
cmpsb
repnz
out
cltd
cmp
scas
mov
adc
dec
adc
sub
mov
or
pop
shlb
incl
lret
adc
leave
or
mov
flds
rol
stos
jns
lcall
cld
call
jbe
pushf
xchg
jmp
popa
cltd
xchg
bound
sar
insb
or
or
xor
mov
outsl
into
cmovnp
ret
pop
xor
xor
test
test
pushl
int3
imul
ss
aam
inc
xor
xchg
cmc
push
ljmp
insl
lcall
jg
xlat
stos
jo
ficoml
push
mov
adc
push
jg
arpl
notb
into
outsb
cwtl
rcr
add
sub
add
icebp
mov
movsl
pop
sub
sub
add
movsl
push
out
scas
pop
lock
loopne
sub
push
lcall
sahf
lock
fcmovbe
xchg
push
sbb
jns
sarb
mov
xor
leave
sbb
push
das
mov
repz
xchg
pop
push
ss
jg
das
subl
and
das
and
fs
stos
mov
adc
pushl
mov
sub
cmpsl
addr16
inc
je
in
rcrb
push
pop
inc
pushl
adc
xor
scas
shl
inc
addr16
mov
not
roll
mov
mov
incl
jno
jg
lock
inc
subl
daa
sub
cmpsb
imul
xor
cli
or
add
push
out
cld
gs
incl
call
mov
mov
dec
sbb
dec
sbb
call
insl
or
push
cwtl
xchg
pop
movsl
inc
sub
call
loop
sub
jb
jae
adc
es
js
popa
aad
cmp
in
sub
jo
cmp
fsubl
aaa
scas
inc
in
decl
xor
mov
addr16
inc
jb
jo
int3
push
cld
jmp
pop
xor
adc
sti
das
ret
dec
push
lret
add
out
imul
inc
gs
lret
xor
flds
iret
mov
push
sarl
mov
cmpsl
fcmovnu
bound
xor
fs
test
and
add
call
sahf
add
das
outsl
mov
cmpsl
je
rcr
mov
stos
call
ficomps
js
lret
insl
cwtl
jg
repz
sbb
jle
push
daa
nop
sbb
and
sbb
sub
lcall
imul
or
movsl
lcall
xchg
or
add
dec
mov
addb
and
and
orl
je
pop
das
and
fsubp
jg
inc
inc
sub
dec
inc
pop
fisttpl
andb
lock
aaa
jecxz
xor
add
xchg
outsb
or
les
and
cli
movsb
adc
pop
pop
xor
push
push
scas
xchg
jge
cwtl
xchg
pop
loop
dec
or
xchg
cmp
out
xchg
movsb
push
and
sbb
and
test
mov
pushl
jg
jl
pop
add
and
out
mov
xor
mov
cmp
lahf
out
outsl
mov
lret
cmpsl
fmull
mov
out
mov
or
xlat
jo
cmp
cld
push
mov
push
adc
and
ljmp
sub
inc
or
add
mov
inc
cmp
adc
les
das
add
mov
or
daa
dec
loop
out
cs
mov
jg
cmp
lods
inc
popf
into
mov
sarb
fwait
decl
das
adc
sahf
lods
pop
inc
jb
xchg
adc
loopne
jmp
das
loopne
leave
xor
inc
ds
rclb
sbb
andps
push
lds
cmc
aaa
jp
dec
xor
mov
ds
loope
aas
js
dec
pop
push
and
jge
adc
lret
lock
cmp
pushl
mov
dec
sub
jnp
gs
scas
mov
decb
push
mov
aaa
pop
or
push
mov
xor
mov
ljmp
xchg
mov
adc
and
ret
xchg
sbb
sti
idiv
dec
cmpsb
lret
mov
xor
into
mov
mov
lret
lret
push
movsb
fidivrl
jg
mov
jno
jae
and
mov
add
inc
sbb
ret
sub
test
cmp
outsl
mov
call
push
mov
cltd
idivb
ud0
cld
pushl
add
aam
push
dec
aas
push
jno
sbb
pop
or
inc
popf
inc
pop
pop
push
fmull
adc
and
pushl
jno
or
shl
push
or
add
lods
testb
dec
and
je
cmp
jne
or
shl
push
add
push
call
jbe
into
aaa
lahf
push
mov
je
std
push
lods
daa
or
sub
jns
push
xor
add
jp
xor
xor
das
hlt
add
and
daa
jle
inc
xor
jne
ljmp
jb
xor
hlt
push
cmp
xor
add
lds
test
xor
mov
push
xor
push
inc
pushl
out
pop
push
aaa
out
es
cmp
cmp
sub
out
sub
clc
push
sub
ficompl
lock
or
mov
add
adc
js
loop
aam
mov
outsl
push
or
and
xchg
jnp
push
adc
add
or
rclb
sahf
xchg
mov
jle
je
insl
inc
push
movl
ja
adc
add
or
mov
in
jns
int
pop
sahf
pop
and
mov
dec
in
mov
call
aas
or
add
jnp
inc
fstpl
push
push
call
pop
mov
rcll
add
mov
lcall
pop
inc
int
or
or
addr16
movsb
lcall
or
dec
fimull
push
jno
rorl
add
or
mov
jg
dec
insb
mov
sbb
cmp
add
cmp
add
push
and
pop
pop
jle
iret
lret
jp
movsb
insl
sar
or
inc
sbb
repz
ja
mov
pop
jecxz
test
repnz
fmull
dec
add
or
dec
les
sub
aam
push
jecxz
ds
mov
dec
push
aas
cld
fdiv
pop
loop
aam
adc
adc
cmc
dec
pop
aam
jg
mov
fs
push
cmp
bound
sbb
lahf
dec
mov
pop
mov
push
imul
dec
pop
test
xor
push
pop
jae
repnz
add
lock
dec
dec
enter
xchg
incl
dec
sub
fstpt
push
lahf
jmp
pop
inc
inc
cmpsl
stos
push
call
in
or
jle
fistps
xor
mov
test
int
sbbb
push
pop
clc
outsl
mov
add
pop
repz
push
lock
arpl
push
jle
jge
fwait
mov
push
fiaddl
outsb
in
mov
push
aaa
push
xchg
jnp
cmpsl
mov
insw
loop
test
std
ljmp
pop
xor
cmpsb
ss
mov
lods
call
xor
imul
sti
pop
pop
inc
gs
sbb
or
sbb
testb
outsb
cmpsl
jno
aam
pop
dec
inc
fcmovu
test
xchg
test
and
and
add
repz
sub
fistpll
test
sbb
pop
inc
push
xchg
rcll
push
loope
popa
jo
gs
push
repnz
jb
and
loope
mov
add
fisubrs
mov
cmp
jmp
imul
mov
xorps
lcall
jnp
inc
out
xor
mov
pop
mov
in
out
nop
lds
push
add
mov
dec
mov
stos
push
callw
xchg
push
jne
sarb
std
call
sub
push
xor
inc
sub
outsl
insb
mov
sbb
jns
clc
inc
add
test
incl
or
shrl
jge
call
cmp
jo
dec
in
xor
adc
rcll
pushl
xor
das
push
inc
outsb
jae
fxch
arpl
cmpsl
ret
cmp
pop
mov
mov
pop
loope
pop
xchg
mov
daa
daa
cltd
ja
orb
dec
std
decl
jo
jne
mov
cmp
mov
push
dec
pop
cmc
sub
lods
incl
stc
push
dec
jns
in
push
fadds
bound
sbb
std
ljmp
in
pop
fimuls
jmp
sub
cmpsl
cmpsb
iret
icebp
dec
arpl
cmp
jmp
pop
outsb
popf
jbe
les
andnps
xchg
mov
insb
popa
sub
mov
adc
push
jnp
push
cs
lret
stc
loop
mov
call
mov
mov
or
or
insb
inc
cmp
outsl
jle
sti
adc
daa
or
and
loope
cmp
inc
jns
adc
ljmp
imul
mov
cmp
sbb
cmpsl
ljmp
add
mov
mov
popa
add
and
or
add
mov
loop
fs
dec
movzwl
cmpsl
inc
adc
mov
inc
pop
stos
cltd
pop
pop
sub
jns
pop
ret
push
push
jno
jbe
or
or
xor
dec
je
repz
lods
das
cld
inc
sbb
enter
mov
movd
cmp
das
pop
mov
inc
lea
inc
imul
jnp
inc
lret
jmp
or
ljmp
pop
jnp
cmovns
dec
jnp
pop
pop
rorb
mov
in
sub
test
mov
test
inc
mov
in
test
mov
ljmp
inc
imul
sahf
nop
loope
inc
and
pop
fsubr
mov
daa
dec
call
outsl
push
add
lods
mov
adc
inc
mov
mov
pushl
and
xor
push
stos
dec
pop
loope
in
dec
jns
jne
outsb
adc
xchg
stos
inc
jbe
rorl
jae
mov
inc
dec
sub
push
push
fistl
mov
adc
jle
jmp
push
jl
sub
pop
aaa
push
clc
mov
sbb
call
popa
scas
out
sti
in
outsl
xchg
adc
adc
decl
jns
stos
shr
or
xor
setp
xchg
mov
jmp
outsl
lock
jae
imul
loope
jmp
pop
mov
push
insb
push
lcall
shrl
and
lcall
lods
int
xor
or
mov
in
mov
jb
mov
or
popa
cmp
iret
adc
lcall
lcall
out
icebp
or
ret
and
ljmp
mov
pop
dec
pop
mov
jg
cmpsb
fwait
sbb
jg
fistpll
in
mov
mov
notl
movsw
jno
icebp
decl
sbb
fldt
xchg
adc
sar
movd
mov
and
shlb
outsb
sbb
push
repz
push
ja
inc
call
scas
mov
int3
inc
pop
cmp
js
cs
add
jmp
jg
adc
jg
pushf
xlat
sub
out
sbb
icebp
cmp
mov
sbb
xor
dec
sti
imull
adc
fwait
cltd
push
lods
iret
cld
sbb
mov
jbe
mov
je
jnp
mov
out
add
xchg
jle
dec
jae
outsb
pop
aaa
insl
dec
push
lods
inc
cltd
gs
jecxz
mov
decl
inc
sub
mov
in
mov
inc
aas
and
imul
add
sub
mov
add
imul
jo
sub
and
add
add
imul
mov
inc
outsl
iret
mov
loope
and
or
movsb
pop
test
add
pop
mov
or
insb
sahf
fs
and
dec
add
xchg
inc
pop
cs
push
mov
inc
fimull
mov
mov
dec
in
fs
pop
mov
push
fs
fstpt
or
dec
sbb
das
push
sub
push
adc
pop
add
pop
inc
ficomps
jecxz
push
scas
xchg
mov
push
lahf
mov
mov
and
jg
mov
daa
cmp
lds
shll
inc
sbb
outsb
push
movsl
pop
push
xor
bound
add
nop
xor
ja
je
andl
repz
addr16
adc
clc
popf
lret
dec
jae
pop
ljmp
outsb
test
mov
and
out
pop
test
incl
mov
pop
outsb
sub
arpl
adc
popf
dec
pop
xchg
fbld
xchg
cmpl
ljmp
jle
ljmp
and
jge
lcall
adc
outsl
inc
imul
aaa
int
cmp
and
pop
jbe
test
into
and
and
jae
or
inc
push
mov
arpl
xor
and
aas
jno
popa
ja
sbb
jb
mov
popa
lcall
mov
add
inc
jg
aas
mov
inc
mov
pop
mov
scas
in
dec
arpl
jne
xchg
insl
xor
insl
mov
jne
cli
or
rorb
insl
cmc
daa
lret
imul
icebp
or
push
cmp
rcrl
pop
inc
jo
into
ret
fildll
popa
jae
cmpsb
cmp
mov
dec
jae
imul
in
aaa
sub
lods
and
adc
push
cwtl
mov
lcall
push
cmc
mov
mov
xchg
insl
adc
repz
imul
pop
sub
ljmp
inc
dec
jb
dec
movsl
inc
int
imul
shr
adc
sub
shrb
repnz
or
outsl
xor
ret
stos
jnp
fildll
data16
divl
mov
gs
pop
xor
das
lock
in
or
test
push
sahf
daa
jae
ds
pop
scas
nop
dec
or
jg
inc
adc
ja
xchg
mov
dec
gs
jb
xchg
cltd
lret
aad
ljmp
test
cltd
lods
sbb
and
cmp
add
pushl
xor
cs
add
xor
pop
out
add
pop
gs
jecxz
push
js
cmp
ljmp
jl
xchg
fstpt
fiaddl
jbe
ljmp
repnz
decl
fstpt
mov
lahf
lret
lods
loopne
std
pop
faddl
sahf
inc
addr16
ljmp
dec
enter
push
int3
cltd
pop
imul
dec
popa
js
mov
adc
cmpsb
lds
sub
push
sahf
fwait
add
pop
clc
jmp
and
push
mov
stos
out
jo
push
xor
sar
notb
cs
lcall
call
seta
cwtl
pop
in
ficomps
pop
pop
mov
scas
inc
dec
push
mov
sbb
adc
sahf
add
cli
sbb
decl
es
notl
mov
cmp
aas
popa
push
pop
push
jg
rclb
inc
shlb
jecxz
add
ret
and
aad
pop
mov
add
xchg
clc
push
icebp
add
aaa
dec
fwait
xchg
jbe
arpl
into
or
mov
jmp
mov
and
push
fwait
xchg
cmp
imul
sub
xchg
scas
jle
fwait
imul
inc
stos
jmp
inc
cmp
xchg
mov
jge
push
xchg
decl
hlt
cmc
je
sub
mov
cmc
loope
cmp
mov
sub
or
sub
outsb
data16
xchg
aaa
jg
inc
jg
jo
xchg
aam
sahf
inc
cs
iret
pushl
decl
inc
cmp
xor
jae
jmp
das
xlat
and
pop
outsl
and
sbb
mov
mov
pop
inc
insl
sub
mov
shrl
stc
sbb
int3
xchg
push
mov
rolb
lahf
pop
dec
adc
fstpt
movsl
xchg
xchg
fs
mov
sub
movsl
in
pop
ljmp
lock
add
xor
xchg
mov
and
daa
outsl
adc
jg
cltd
xchg
shr
push
imulb
daa
pop
rorb
mov
mov
pop
cmp
pushl
into
scas
loopne
hlt
xchg
or
xchg
pop
shrl
sbb
or
je
rorw
aaa
jnp
push
mov
decl
std
add
push
sarb
dec
cmp
dec
jp
dec
lcall
std
fs
daa
lahf
fwait
cmp
test
or
arpl
add
push
and
mov
in
sub
push
mov
jns
pop
push
inc
cmc
mov
mov
sbbl
call
repz
dec
int
ja
aas
fistpll
and
pop
push
fucomp
incl
dec
fcomps
add
call
pop
enter
mov
cltd
lods
pushf
push
cmpb
repz
ljmp
inc
cmp
sub
iret
or
cld
jns,pt
call
jle
jns
test
pushf
stos
xchg
fcmovb
out
jbe
out
push
jns
cmpsb
repnz
jg
sahf
and
add
clc
cmp
shl
ror
cmp
inc
test
mov
push
mov
insb
call
mov
push
in
jns
hlt
mov
jns
inc
jo
or
or
sub
or
add
outsl
inc
aam
int3
iret
sarb
repz
stos
test
fs
dec
repz
ljmp
or
hlt
cmp
in
fdivrs
shl
sahf
movsb
jns
andb
sahf
push
inc
sahf
cmp
sbb
dec
pop
or
incl
cmp
cmp
jo
sarb
loope
cmp
mov
push
pushf
cmp
cmp
mov
js
lret
mov
lret
insb
pop
push
inc
xor
cmp
cld
cmp
fwait
into
adc
out
incb
mov
jecxz
jo
jns
mov
clc
pushl
jns
adc
add
clc
aaa
cmp
loopne
enter
sbb
mov
jl
push
cmp
pop
es
xor
lock
nop
out
sahf
mov
mov
je
pusha
push
out
inc
add
mov
jg
clc
xor
loopne
aam
les
mov
insb
out
jo
pusha
inc
loopne
adc
inc
mov
inc
daa
xchg
insb
insl
mov
jo
pop
push
jns
pop
fdivs
xor
add
mov
sbb
mov
clc
xor
in
sahf
loopne
aam
stc
mov
or
push
cmp
xor
pop
js
xor
cmpsl
iret
mov
ja
aas
jl
cmp
arpl
cmp
or
cld
xor
cmp
cmp
test
mov
lods
cmp
repz
cmp
mov
sub
cmp
hlt
fsub
rcrb
jns
cs
jns
pusha
out
sahf
xor
adc
out
jle
sub
enter
pop
repz
jmp
ss
cmp
jno
loopne
aam
enter
in
call
jnp
js
insb
pop
out
sahf
inc
jnp
cltd
cmp
arpl
mov
sub
js
cli
aaa
xchg
pop
or
loopne
sarb
mov
cmp
mov
push
out
mov
jmp
sahf
adc
add
sub
in
iret
loopne
fstpt
insb
pusha
outsl
jge
repz
out
cmp
mov
fsubl
fcomip
sahf
int3
jns
inc
mov
sahf
pop
jns
or
lret
or
mov
test
enter
out
or
jo
push
ret
xor
or
cld
es
hlt
jns
sahf
rclb
or
shl
insb
mov
out
hlt
fdivl
mov
out
into
in
mov
cli
adc
and
lock
in
and
cmp
out
sahf
mov
movsb
adc
and
push
adc
out
hlt
and
rcl
dec
arpl
push
push
repz
jle
ret
push
dec
das
aaa
mov
pop
loopne
rorl
pop
aaa
xor
cmp
popa
sbb
cmp
mov
push
sub
inc
xor
sbb
adc
dec
mov
pop
xor
jns
lret
test
arpl
add
hlt
pop
in
mov
mov
jo
mov
jg
cli
repz
iret
cmp
inc
push
jns
loopne
imul
pop
cld
pushl
xor
mov
imul
fs
imul
or
std
jg
icebp
or
sub
sub
or
mov
dec
outsl
push
outsb
add
mov
inc
shl
mov
push
or
ljmp
icebp
or
sti
fimull
lret
mov
popa
inc
push
push
inc
outsb
call
mov
push
dec
push
cs
pop
and
inc
pop
loop
ljmp
push
push
pop
push
adc
das
das
push
dec
sbb
or
inc
inc
mov
ds
call
mov
inc
dec
inc
pop
push
daa
sahf
pavgb
dec
xor
das
xor
pop
fildll
sub
dec
push
mov
loopne
push
inc
jno
cmp
sbb
jae
push
push
dec
mov
xor
sub
push
pop
ret
scas
push
dec
or
les
inc
repnz
jg,pt
mov
inc
pop
inc
mov
cmp
mov
incl
rorl
icebp
daa
push
push
fistpll
cmp
inc
pop
inc
dec
dec
pop
test
out
pop
cmp
aaa
and
test
push
call
xchg
repz
lahf
or
pushf
movhps
inc
decl
rcpps
repnz
mov
cmp
lahf
pop
dec
das
test
xlat
into
bswap
pop
ret
mov
addr16
fimuls
sub
push
inc
movsl
decl
rol
add
paddq
pop
dec
inc
icebp
fmull
cmp
pop
jg
pop
mov
dec
pop
push
jmp
mov
daa
fstl
push
inc
out
mov
outsb
icebp
out
imul
add
add
mov
mov
das
dec
dec
adcb
inc
cmp
pushl
inc
inc
lret
fwait
sti
ds
jb
xchg
popf
and
jle
jge
mov
xor
outsl
icebp
ljmp
dec
inc
push
dec
sub
push
push
imul
insl
push
setge
ljmp
out
or
dec
mov
sti
mov
fnsave
les
adc
mov
jp
ljmp
sbb
inc
lahf
insl
push
pusha
les
cs
xor
in
xor
or
cli
das
pop
sub
cmp
fsubl
mov
cmp
jmp
incl
lahf
cltd
insb
aam
bnd
lss
mov
inc
sar
imul
sub
outsb
ret
ror
hlt
inc
mov
mov
or
das
inc
fwait
push
dec
cmp
lock
fisttpl
cmpsl
fdivrl
cld
fstpt
jg
les
test
push
mov
jo
fbstp
fwait
push
stos
mov
mov
cld
push
push
mov
push
enter
call
lret
dec
xor
dec
mov
pop
xor
daa
dec
mov
dec
lea
in
dec
int3
repnz
outsl
cld
jmp
aas
out
lods
mov
pop
inc
cmp
cmp
clc
sbb
mov
pop
add
inc
dec
or
lahf
movsl
dec
cmp
xor
pop
std
outsl
lock
or
movsl
sub
push
inc
inc
jle
cs
incl
sbb
scas
fdivrl
push
lods
mov
pop
jle
lcall
xor
push
jg
clc
sti
and
mov
decl
cmp
sbb
lret
mov
mov
int
cmc
cmp
daa
push
fdivrs
fimuls
dec
push
popa
dec
sbb
dec
in
jne
test
xchg
sbb
test
inc
out
jl
out
inc
push
lods
xchg
inc
aam
cmp
push
pop
ljmp
add
insb
out
inc
pop
xor
inc
adc
xor
xor
arpl
setg
mov
adc
inc
lods
and
sbb
pop
test
jg
les
dec
jns
jmp
pop
sbb
aam
and
stc
pop
inc
lea
insl
fwait
movsl
mov
sti
add
pop
ret
cld
lds
push
test
pop
ds
pop
sub
inc
inc
dec
aam
sti
mov
notl
fmull
insl
cmpb
inc
mov
inc
cli
sti
dec
push
dec
push
mov
xor
sbb
push
inc
dec
sarl
repz
mov
pushf
out
in
iret
push
call
out
pop
idivb
mov
cmp
mov
cmp
xor
out
testb
mov
mov
dec
iret
pop
int3
inc
fcompl
popf
dec
mov
decl
imul
or
and
js
lret
mov
xchg
int
bound
std
fisubrl
insb
rdtsc
ss
or
lods
or
test
orl
xchg
push
fucom
mov
xchg
push
movsb
outsl
inc
ret
push
jg
clc
incl
movsl
in
and
add
popf
repnz
inc
lds
in
outsb
xchg
jbe
cld
sbb
jge
add
dec
lahf
sbb
push
inc
cmp
sti
ljmp
dec
test
push
cmp
shrb
iret
adc
mov
daa
cltd
int
jg
push
or
push
rcr
gs
dec
mul
push
lds
cld
jg
loop
add
call
test
jno
insb
mov
mov
call
jmp
call
mov
push
push
dec
andl
jg
icebp
add
sub
inc
mov
imul
dec
mov
cmp
dec
add
aad
ljmp
cmp
inc
jge
lret
out
cmp
cltd
or
mov
push
cwtl
pop
inc
adc
packuswb
je
decl
adc
xor
or
dec
test
xchg
add
mov
pop
jge
add
jbe
mov
cmpsl
add
inc
call
inc
repz
or
lds
mov
ljmp
ljmp
mov
inc
mov
add
sub
call
mov
aaa
pop
jns
mov
dec
les
mov
emms
cmp
pop
pop
loopne
inc
adc
in
cld
getsec
out
insb
test
mov
stos
add
aaa
ss
xor
lea
xor
icebp
pop
lcall
and
fisttps
shl
outsl
fidivs
cvtdq2ps
hlt
mov
cmp
lea
push
mov
arpl
les
inc
lcall
dec
ficompl
cmpsl
or
mov
int
jge
in
mov
jns
mov
pusha
pop
imul
cmp
nop
inc
dec
pop
adc
pop
inc
inc
cmp
ss
push
inc
xor
jp
mov
jmp
lahf
iret
mov
jle
loop
dec
not
sbb
je
call
lret
sbb
in
cmc
ss
jmp
jb
mov
or
imul
ljmp
xchg
mov
cwtl
jl
loopne
or
fists
cli
aad
test
dec
fidivs
cmpsb
incb
push
sahf
sbb
inc
pop
incl
invd
inc
dec
call
js
xor
or
mov
call
testb
xor
inc
dec
jg
arpl
lods
sub
in
push
adc
cs
aaa
outsl
and
lcall
jge
into
or
cmpsl
loop
push
imul
mov
mov
dec
dec
lea
insb
nopl
dec
decl
jnp
cmpsl
pushl
ss
mov
das
rorl
lock
inc
sbb
mov
dec
push
movsl
push
test
add
std
xor
jle
hlt
notl
ja
fwait
inc
sub
sbb
fstpt
in
sahf
imul
enter
mov
mov
and
xor
pop
xor
sbb
aas
push
inc
decl
pop
add
rcrb
mov
cvtps2pi
or
cs
ss
pop
cmpsl
sbb
dec
jae
jg
sub
pop
lcall
jl
sbb
adcl
mov
lds
test
jecxz
decb
or
mov
dec
adc
jecxz
outsl
inc
inc
sti
dec
outsl
fistl
inc
pusha
sub
mov
neg
mov
push
arpl
dec
mov
inc
daa
sti
fstpt
push
lret
fmuls
lret
aaa
pop
sub
js
fwait
repnz
jg
jge
cmp
lock
jo
jmp
or
test
fmuls
hlt
negl
lds
mov
and
inc
sarl
outsl
movsl
mov
sbb
cmp
inc
inc
and
xor
out
or
cs
xor
mov
adc
fisttpll
dec
ret
and
in
in
decl
pushl
mov
stc
or
shll
std
adc
fcompl
add
dec
dec
lock
mov
aas
sbb
or
inc
pushf
add
and
imul
mov
fisubl
jae
movlps
dec
test
lock
aaa
add
push
jo
dec
xchg
jl
dec
pop
cld
mov
xlat
mov
loop
adc
in
dec
mov
addr16
sub
shlb
bound
ud0
call
or
mov
fcompl
aaa
cmpsl
inc
popf
lds
add
hlt
sti
mov
daa
mov
fsubs
xor
xor
jae
ljmp
cli
rcrl
das
xor
dec
pop
and
ljmp
jge
rorb
pop
inc
mov
lcall
add
mov
dec
mov
dec
sbb
lahf
cwtl
dec
in
push
ljmp
hlt
lahf
and
or
dec
call
or
cmpsl
aas
pop
sub
cld
fnstenv
mov
rolb
mov
push
pop
pop
ret
and
lea
sbb
mov
in
ds
cmc
or
mov
imul
inc
out
add
push
jg
lock
popa
pop
loope
aaa
cwtl
inc
imul
call
pop
xlat
xchg
sub
inc
popf
add
cmp
pop
or
sbb
std
ja
lret
push
lea
daa
mov
cmpsl
lea
mov
mov
cmp
mov
add
cltd
rclb
push
jg
pop
mov
insl
in
dec
mov
push
incl
mov
inc
jae
leave
sbbl
cli
decl
sarl
xor
insl
push
aas
ss
add
in
je
in
inc
ret
clc
lods
roll
inc
ljmp
loop
clc
outsl
lock
loop
lds
popa
sahf
or
mov
sub
inc
aam
jmp
imul
xor
inc
pop
imul
adc
fcmovu
ficompl
pop
jnp
fsts
adc
enter
ret
movsl
push
and
ret
stc
dec
dec
es
aas
dec
sbb
les
fisttpll
mov
sbb
jecxz
je
mov
cmp
decl
xor
out
sbb
inc
in
dec
mov
mov
pop
xor
push
out
push
in
xchg
test
lds
pop
xor
in
sbb
outsb
icebp
pushl
inc
ds
icebp
jns
push
je
push
jns
out
or
clc
decl
sub
push
in
pop
shlb
mov
dec
mov
sar
data16
in
pop
das
inc
inc
pop
nop
add
imul
lock
jmp
insl
cmp
mov
cmp
pop
in
movsb
cmp
out
fdivl
ret
rcrb
shrb
dec
mov
scas
arpl
mov
sub
mov
hlt
lahf
pop
mov
es
pop
dec
hlt
dec
jmp
push
aaa
and
dec
pop
sub
mov
and
aad
loopne
inc
pop
mov
adc
pusha
mov
outsl
icebp
mov
dec
push
lret
cmpsb
adc
mov
popa
ja
inc
inc
mov
in
incl
test
cmp
fwait
sub
outsb
add
xor
fisubrs
mov
fbld
pop
fcomi
lret
dec
int
mov
adc
pop
rcrl
jg
out
or
mov
xor
addr16
enter
fidivl
scas
pop
inc
jno
cmc
pop
mov
je
lahf
sbb
inc
arpl
inc
sub
inc
inc
je
lea
fbstp
mov
push
repnz
add
call
lods
repnz
out
das
inc
fistl
pop
sub
ficoms
data16
or
jnp
bound
cli
mov
pop
mov
leave
mov
imul
adc
stc
mov
insb
std
pop
dec
lods
jecxz
jne
inc
out
leave
inc
mov
mov
mov
dec
adc
add
pop
add
inc
loop
ljmp
das
hlt
iret
mov
stos
cmp
rcl
sarl
jae
loop
loop
sbb
cltd
into
sbb
fidivs
xor
inc
pop
into
je
mulb
pop
decl
inc
add
inc
mov
fisubrs
out
lahf
jp
pop
daa
ror
imul
popa
iret
push
cmp
pop
cli
shlb
sbb
bound
mov
xchg
repz
fisttpl
or
or
es
stos
testl
push
ja
cld
push
pop
call
jge
mov
xor
test
add
ficompl
outsl
stos
std
cmp
xlat
mov
dec
push
push
pop
adc
lock
jg
sbb
clc
inc
dec
push
and
mov
add
orl
outsl
jno
test
outsb
shl
lds
outsb
dec
mov
push
push
xor
inc
push
arpl
movzwl
inc
sub
mov
xchg
lock
or
inc
adc
pmaxub
loope
cld
push
and
jecxz
push
loop
xchg
sbb
imul
xchg
inc
xchg
js
dec
iret
xchg
push
push
fnsave
cld
pop
xlat
fwait
in
pop
in
dec
xchg
xor
add
out
sbb
ljmp
sti
cltd
mov
popf
sbb
cld
pop
or
mov
lcall
shlb
sbb
pop
ret
push
mov
add
in
ljmp
add
sarb
push
jmp
push
cmp
add
sub
pushf
add
ret
inc
orl
cmp
ljmp
insb
outsl
xchg
scas
outsl
add
into
and
inc
out
into
and
and
jns
jns
sub
sub
cld
cmp
icebp
jg
pusha
cld
jle
stc
cmc
adc
sbb
inc
push
adc
inc
inc
push
jge
mov
repnz
das
add
jae
imul
mov
push
xchg
push
mov
and
dec
outsl
mov
or
jae
ljmp
mov
int
fdivl
roll
push
inc
pop
sbb
push
inc
mov
add
ds
je
dec
cld
jmp
pop
or
or
add
inc
js
lock
push
fucomip
popa
cs
outsb
jns
cs
add
pushf
mov
sub
jg
addl
out
fsubs
inc
jo
insb
jne
decl
inc
popa
insl
lea
int3
pop
inc
sub
xchg
rcrl
add
js
imul
mov
jo
cli
or
or
fcomps
nop
out
mov
mov
dec
lock
in
mov
add
fdivrs
pop
repz
add
push
loop
call
decl
lret
inc
repz
in
mov
jno
clc
pushl
mov
mov
mov
jo
js
loope
mov
shlb
insb
mov
pushl
aam
imul
pop
sbbl
pop
fbstp
sub
and
and
push
jae
lock
xorb
psllq
xor
mov
adc
cld
xchg
clc
cmp
sub
adc
clc
jno
jae
call
int3
and
incl
mov
repz
mov
mov
add
decl
jle
testl
ja
fs
pusha
mov
pop
push
inc
cmpsb
clc
mov
pop
mov
inc
mov
pop
bound
cld
loopne
mov
in
out
in
std
pushl
mov
shr
addl
sbb
mov
mov
mov
lds
mov
repz
insb
ljmp
mov
and
cmp
clc
jae
mov
call
loopne
idivb
jno
fdivs
mov
les
mov
sbb
mov
pushf
mov
jo
nop
add
loop
push
out
mov
adc
rclb
cmp
cmp
xor
movsl
or
push
sbb
lock
cmp
clc
outsl
ljmp
scas
loop
xor
sahf
enter
out
cmpsl
mov
movsb
adc
cld
pop
fwait
jo
out
sahf
push
jns
in
jns
sub
add
in
fmull
in
in
fdivl
int3
les
rclb
lods
imul
lret
cli
or
fisttps
sbb
es
cs
pop
or
add
add
clc
lods
push
lock
dec
jns
shlb
lock
cli
lods
cmp
lods
scas
movsb
adc
lods
sub
mov
out
mov
sbb
or
fisttps
hlt
pop
fidivl
sarb
mov
mov
mov
lea
pop
pop
inc
dec
mov
insl
sbb
repz
cld
stos
mov
data16
mov
mov
add
out
sahf
mov
insl
push
cmp
repz
or
xor
add
or
cld
stos
cmp
in
repz
or
lock
fdivrl
idivl
daa
insb
inc
or
jecxz
inc
repz
xor
and
daa
in
mov
dec
les
movsb
loop
or
sbb
inc
inc
stc
es
inc
push
mov
mov
xchg
xchg
rorb
push
fmul
cmpsl
xor
fcom
shlb
movsl
pop
xchg
rorb
out
repz
test
cmp
sbb
xchg
jb
inc
test
stos
dec
lds
fwait
sub
cmp
movsl
fwait
xor
imul
call
jecxz
movsb
xor
mov
icebp
insb
add
pop
mov
movsb
mov
push
add
push
sbb
bound
push
xlat
xor
sub
cld
push
sub
sbb
jecxz
enter
sbb
cwtl
pusha
pop
inc
xchg
inc
cmp
rorl
iret
add
mov
ja
xor
hlt
xor
icebp
pop
mov
test
mov
aas
mov
mov
jns
fmul
enter
in
mov
jns
clc
in
aad
adc
or
mov
out
ficoms
out
test
pop
les
bound
push
fiadds
in
dec
ljmp
jnp
sub
inc
shl
push
sahf
dec
jns
sub
call
and
js
hlt
sahf
lret
aam
icebp
mov
pop
sbb
push
rcrl
rcrb
out
mov
sbbb
cmp
icebp
cld
popf
adc
fisubl
into
shlb
inc
mov
pushf
jo
xchg
or
shl
sbb
cmp
call
insb
lods
fwait
mov
outsb
std
sahf
fisubrl
jns
shrd
das
test
movsl
out
sahf
dec
jns
or
sahf
and
out
push
clc
lcall
mov
pop
push
cmp
adc
and
hlt
cmpb
cltd
out
sahf
mov
nop
or
sbb
push
sbb
cmp
cmp
mov
dec
repz
iret
cmp
lret
adc
push
int3
out
lret
or
insb
jns
lret
adc
fbld
xchg
hlt
repz
mov
cmp
fcomp
add
mov
jl
insb
dec
aas
sbb
adc
xchg
fcompl
fs
dec
sahf
inc
or
rclb
pop
or
jb
sbb
gs
test
dec
sbb
or
rcrb
int3
cmp
dec
push
cld
jo
dec
jge
movsl
sbb
adc
xchg
pop
mov
jno
call
jns
movsl
das
imul
inc
mov
xor
inc
movsb
enter
loop
cmp
pop
inc
xchg
push
into
xchg
xor
js
rorl
jb
inc
cwtl
lods
loop
mov
js
cld
mov
iret
in
push
xchg
sbb
xchg
rcr
adc
mov
mov
mov
test
adc
sbbb
daa
sub
and
sbb
scas
jmp
test
and
or
push
les
popf
pusha
mov
push
sbb
jnp
mov
inc
movsb
enter
sahf
push
and
xor
adc
and
in
in
pusha
mov
in
jns
jg
jo
icebp
inc
and
push
xchg
enter
add
imul
push
in
leave
gs
mov
push
inc
jp
cwtl
sbb
in
xchg
or
jl
fnstenv
xchg
lock
aas
cmp
sbb
adcb
fld1
repz
adcl
jg
sub
pop
je
pusha
outsl
cld
or
sbb
test
push
cmp
clc
adcl
jno
enter
mov
dec
lcall
sub
cmpsl
andb
addr16
int3
lods
adc
xchg
stos
cmp
pusha
push
inc
ljmp
call
loope
add
addb
sbb
or
push
sub
out
add
shlb
cltd
push
lds
and
cld
pop
in
cmp
xchg
sbbb
test
decb
and
add
orb
or
xor
xchg
fstl
cwtl
cltd
push
orl
jle
mov
lret
add
enter
xchg
mov
adc
jecxz
mov
nop
cmpsb
mov
dec
mov
or
shl
enter
clc
jl
push
xchg
in
mov
add
add
leave
jl
movsb
pushf
cltd
icebp
fs
sbb
lock
ret
loopne
rolb
inc
add
inc
push
or
jns
sbb
jg
push
lret
pop
dec
jbe
cmp
or
jno
pop
jne
adc
movsb
mov
mov
mov
gs
mov
and
mov
orb
adc
jb
popf
add
pop
jno
js
mov
jb
push
jecxz
dec
xor
je
je
imul
call
aam
fcmovnb
jns
aam
jne
out
pop
jge
inc
mov
clc
jne
addr16
xchg
cmpl
pop
movsb
pop
mov
nop
daa
mov
jle
outsb
sbb
cmpsb
and
dec
mov
dec
pop
jmp
decl
inc
mov
bound
add
addr16
xor
mov
lds
fdivrp
lcall
scas
sub
pop
das
mov
fistpll
ja
mov
repz
scas
je
and
add
stc
adc
stos
incl
jae
jae
call
xchg
jae
daa
sarb
scas
add
jecxz
xchg
cli
and
clc
jb
in
jb
loopne
sbb
jb
shlb
jecxz
pop
lods
data16
pop
mov
dec
es
push
mov
jb
jb
sub
ret
and
sbb
push
adc
sahf
add
jg
cmp
cmp
jno
imul
shlb
int3
jno
dec
jno
shlb
jno
push
jno
jecxz
jno
mov
sub
out
arpl
das
xchg
jno
mov
add
jg
repnz
xchg
jmp
fcomps
sbb
cmp
jo
adc
sbb
movsl
push
hlt
jo
jo
insb
cmp
jo
jo
aam
loope
jo
les
mov
sub
repnz
jo
xchg
mov
je
fs
push
dec
fldcw
lret
inc
cmp
jo
jo
gs
xchg
in
adc
jo
outsl
outsl
gs
pop
xchg
outsl
outsl
outsl
aam
outsl
outsl
in
pop
xchg
outsl
outsl
outsl
outsl
outsl
xchg
outsl
pop
loope
cld
outsl
sub
je
loopne
or
push
jecxz
pusha
sub
dec
inc
call
outsl
add
sub
and
jnp
aaa
add
call
stos
cld
outsb
ret
hlt
sub
in
sbb
outsb
cmp
outsb
pop
mov
inc
jo
mov
loope
outsb
ret
push
mov
sets
outsb
add
js
or
outsb
pop
pop
inc
js
pop
sbb
pushl
cmp
dec
outsb
punpckhdq
mov
ret
cmp
cmp
cli
imulb
outsb
sub
sub
and
sbb
xchg
mov
outsl
or
add
cld
insl
xchg
insl
insl
sbb
insl
cmp
insl
fdivs
mov
ljmp
insl
loope
insl
ret
int3
push
enter
mov
das
lret
insl
test
nop
insl
lret
popa
mov
adcl
mov
cmp
lret
jbe
insl
push
insl
xor
ja
mov
pusha
push
stos
in
sbb
or
xchg
mov
xor
mov
mov
pop
filds
cmpl
inc
inc
lods
pop
daa
int3
imul
hlt
xchg
pop
scas
inc
mov
mov
add
push
fdivs
pop
xchg
inc
ljmp
sarb
sub
jnp
cld
push
jnp
jge
flds
or
rclb
clc
inc
aaa
hlt
shrb
push
push
xchg
push
push
push
push
dec
das
lret
mov
cmp
sub
sbb
call
push
add
imul
ret
rolb
lock
xor
xor
add
pop
jnp
pop
add
add
or
add
xor
push
or
mov
xor
cmp
addl
cmp
mov
jbe
and
xor
cmp
filds
sbb
xor
arpl
jp
xor
das
xor
cmpb
js
arpl
idiv
jmp
popa
popa
jae
jae
add
ja
gs
fimuls
or
mov
jnp
outsl
ljmp
fidivs
xor
cmpsl
sub
dec
dec
cmpsl
pop
dec
jge
jns
jbe
pop
jp
jg
dec
pop
in
add
or
mov
pop
add
sub
add
pop
dec
mov
stc
call
jns
add
add
repz
es
outsl
sub
jae
je
gs
pop
add
stos
dec
stos
push
jae
lret
incb
add
lcall
in
pop
fisttpl
popa
test
add
push
pop
add
cmp
add
mov
push
pop
add
add
outsb
insb
pop
mov
pop
jl
add
add
jg
js
in
add
enter
mov
push
push
pop
repnz
inc
lcall
pop
push
out
pop
or
jp
adc
imul
fstpt
mov
pop
push
mov
and
dec
add
mov
add
mov
bound
push
pushl
cmp
lahf
pop
lahf
add
push
fisubrs
ss
fwait
xchg
sar
or
imul
fistps
fwait
mov
outsb
insl
repz
and
imul
popa
outsb
pushl
pop
xor
push
in
jb
cwtl
faddl
dec
dec
add
pop
xchg
sti
mov
clc
mov
jl
fmul
ja
add
outsl
jo
jns
outsl
hlt
mov
mov
xchg
adc
cmp
outsl
sti
add
add
jle
jbe
in
pusha
mov
dec
movb
push
inc
pop
mov
xchg
xor
sub
jg
jmp
dec
rclb
push
or
push
xchg
into
add
iret
popa
insl
jae
in
mov
mov
push
xor
push
inc
emms
sbb
inc
aaa
ss
jg
xor
lcall
cld
xor
xor
cmpb
icebp
sbb
sub
push
out
cld
ss
adc
cld
xor
push
outsl
pop
cld
xor
cmp
jle
aaa
jle
jle
jle
jle
jle
jle
jl
push
nop
sub
pop
aaa
dec
aas
aaa
add
xor
ds
xchg
pop
fwait
sbb
es
sahf
mov
xor
add
xchg
movsb
jb
push
out
lock
pop
push
into
pop
push
in
pop
jb
daa
in
add
jge
or
pushl
mov
xor
lret
mov
cvtps2pd
je
popf
outsb
xor
fsubrp
out
adc
shlb
ret
xchg
aaa
movsl
mov
in
decb
repz
cmp
jno
decl
mov
add
inc
aaa
lods
add
xlat
jno
lret
mov
in
scas
push
ss
xchg
xor
pop
xor
int3
inc
jge
shll
imul
add
xchg
fsub
dec
xor
dec
aas
push
xor
xor
pop
cli
jmp
add
push
cmp
insb
decl
cmp
test
inc
or
aam
adc
jle
call
pop
dec
mov
mov
jp
and
daa
and
or
sub
cmp
or
dec
int
sub
push
movsl
inc
cmp
sub
add
add
idiv
lcall
or
inc
inc
push
pop
andb
inc
cmpsb
fs
and
push
mov
fcmovnbe
add
inc
popf
invlpg
insl
insl
adc
or
xor
std
jns
aam
nop
pop
pushf
js
jns
add
int3
mov
sbb
ret
adc
outsl
jmp
jb
sub
adc
gs
call
xchg
sbb
push
and
sub
out
dec
mov
inc
sti
call
add
or
sbb
cmpsl
test
outsb
xchg
testl
mov
and
jg
incl
arpl
imul
ss
mov
cmp
or
loopne
pushf
mov
imull
inc
jb
into
and
icebp
pushl
fdiv
mov
mov
mov
adc
test
bt
pushl
push
push
push
outsb
fs
hlt
cmp
insb
pop
jns
insl
stos
sbb
and
push
loop
add
jo
and
add
pop
mov
pop
andb
lods
dec
out
inc
das
adc
cmpsl
sub
inc
loop
aaa
clc
dec
insl
into
push
add
mov
je
loopne
fwait
jae
pop
jb
ljmp
adc
add
outsl
inc
into
mov
jae
adcl
outsl
sub
bound
lock
decl
insb
push
and
mov
push
dec
cmp
pop
call
cmp
push
movsl
mov
gs
mov
in
aad
jg
sbb
in
andl
stc
out
mov
mov
ret
pushl
adc
cmp
sub
addr16
outsl
lock
sub
clc
sub
xor
or
daa
stos
lods
mov
sbb
mov
je
xor
popa
roll
or
dec
fs
shll
jnp
roll
pop
cs
pop
insb
addps
pop
jae
outsl
jno
imul
divl
test
mov
insw
mov
and
pop
and
xchg
lock
scas
xor
lcall
pop
mov
add
mov
pop
xor
pop
sbb
add
dec
jb
adc
fistps
sarb
sti
sbb
or
lods
fimull
ret
imul
insl
mov
add
insl
xor
imul
pop
xor
sub
cmp
imul
push
stos
cmp
mov
jg
outsl
sub
cmp
fstpt
sub
leave
jo
dec
push
lahf
inc
mov
jmp
movsl
popf
lock
dec
aaa
dec
lea
fs
or
mov
jne
in
inc
mov
js
das
dec
lret
xor
inc
sar
sarl
cmc
pop
popf
push
xchg
lcall
movsb
shll
xchg
push
inc
int
mov
cmp
sti
dec
push
scas
sbb
es
clc
pushl
jge
lahf
lea
xor
dec
jp
inc
lock
mov
insl
push
in
sbb
out
fstl
ret
push
out
daa
sbb
les
fucomip
jne
xchg
out
pushf
repnz
jns
jae
popa
xor
cli
mov
pop
sbb
je
xlat
pop
pop
popa
stos
popw
mov
inc
pop
cli
or
iret
push
xlat
int
xchg
outsb
fsub
dec
cmp
pop
loop
lock
push
jno
mov
popf
cmp
dec
fimuls
mov
outsl
gs
into
sahf
or
out
out
in
dec
or
xchg
mov
inc
pop
sbb
pop
daa
aam
pop
call
jmp
test
in
xor
inc
int
rorb
stos
jmp
lret
xchg
mov
fnstenv
xchg
jp
mov
in
stc
jecxz
push
xchg
dec
movsl
pop
mov
lock
js
sbb
sbb
and
and
or
push
fidivs
stc
xchg
test
jns
lcall
lods
sbb
jae
jns
int
icebp
pop
je
adc
dec
ja
sbb
decl
popf
push
fldt
sbb
gs
jns
jnp
enter
pushl
cmp
enter
xchg
leave
mov
jo
push
fistl
xchg
roll
pushf
stc
stc
jae
and
pop
mov
jp
out
loope
popaw
ja
pop
mov
bswap
imul
imul
jbe
cmp
bound
repz
movb
insl
outsl
call
and
std
push
sbb
jbe
out
jne
pop
test
or
in
pop
arpl
ljmp
lds
mov
nop
out
mov
cmp
fldcw
xlat
inc
out
incl
and
mov
in
inc
ret
call
pop
mov
bound
arpl
out
imul
or
imul
popa
mov
jne
call
ljmp
and
sub
ss
aas
popa
and
dec
mov
sahf
and
cmp
pop
pop
adc
pcmpeqw
mov
fistpl
cld
or
inc
fwait
mov
dec
fildll
xor
fadd
pop
mov
cld
add
xchg
in
fcmovne
or
mov
or
dec
inc
mov
push
arpl
xchg
pop
das
imul
testb
xchg
in
repz
rolb
xchg
inc
xor
lods
dec
pop
jae
pop
pop
clc
inc
jmp
sbb
int
cmp
js
sar
jg
xchg
out
rolb
daa
mov
sti
pop
in
mov
cmc
lcall
sti
mov
in
out
insl
imul
enter
mov
fstpl
mov
jno
mov
push
rcll
push
jle,pn
cld
decl
sbb
popa
loop
adc
pop
add
int3
nop
fucomi
mov
scas
std
repz
xor
leave
insl
pop
icebp
adc
xchg
pop
fists
xor
popa
loope
mov
inc
xchg
dec
sub
aaa
incb
jbe
sahf
pushl
mov
enter
xchg
cli
inc
lret
inc
mov
xor
out
jae
das
push
xor
das
cmp
stc
fstpt
xchg
mov
aaa
outsb
into
xchg
mov
mov
xchg
cld
push
jmp
mov
or
jl
jae
insb
cld
jg
outsl
scas
or
repz
lds
jp
ja
mov
andb
pop
push
cmpsb
insl
enter
rcrl
movsl
pop
cmpsb
mov
mov
jbe
repz
dec
jg
dec
cmpsl
fisttpll
lret
daa
adc
imulb
pushf
pop
ret
stc
pop
mov
jg
xchg
cmpsl
dec
pop
dec
and
dec
jmp
pop
mov
push
bound
xor
pop
sub
jne
hlt
scas
cmpsl
ret
push
std
ljmp
dec
int
ret
aam
jle
popa
sahf
jg
aaa
cli
testl
lret
test
and
push
lcall
cld
inc
testl
sbb
jg
sub
imul
sahf
shrb
sti
lret
jmp
daa
in
popf
in
jg
jno
movsb
loop
push
jae
xlat
sbbb
jo
icebp
lcall
jbe
orl
or
inc
mov
bound
enter
jg
sarb
out
jo
push
mov
ret
mov
pushl
mov
sahf
lret
dec
lcall
idivb
out
pop
push
mov
popa
dec
fs
jmp
icebp
mov
repz
test
or
or
imul
cwtl
xor
add
icebp
xchg
jae
leave
mov
jns
outsl
xchg
ljmp
push
imul
insl
enter
mov
aaa
sbb
lahf
outsl
cld
fildll
dec
dec
insb
idivl
and
ret
aas
lcall
pop
out
xlat
dec
pushf
fiaddl
outsl
mov
add
das
js
push
orl
mov
pop
mov
not
jg
jo
xchg
mov
in
or
or
add
pop
add
ljmp
jl
in
mov
jp
xor
sarb
cli
pop
push
outsl
fildl
cltd
mov
icebp
mov
pop
fldcw
cmp
jb
xchg
cli
out
pop
insb
ljmp
subb
popa
sbb
arpl
outsl
cmc
repnz
cmpsb
std
cmpsl
in
nop
dec
shrb
mov
cmp
lock
add
lods
fs
mull
and
or
cmp
jg
ljmp
jae
fsts
roll
mov
mov
imul
insl
clc
add
andl
daa
cmp
pop
loopne
loopne
mov
adc
jnp
ss
pop
pop
fwait
sub
cmpsb
inc
fsts
fildl
sub
leave
popa
idivb
stc
and
addr16
arpl
in
xchg
outsb
xchg
mov
jle
xorb
out
lret
and
jecxz
mov
cld
fbstp
daa
bound
mov
insl
mov
mov
aas
cmp
in
imulb
pop
xchg
sarl
lcall
js
pusha
pop
xchg
rolb
pop
push
sahf
pop
outsb
std
mov
not
or
jns
into
xchg
and
clc
mov
outsl
adc
sbb
mov
repnz
sbb
dec
mov
aas
mov
sbb
fcoms
mov
stc
sub
in
jg
jae
aas
fs
add
jecxz
popf
ror
cmp
cltd
stos
fwait
subb
jae
xchg
xor
scas
outsl
mov
mov
incb
sbb
ss
je
loop
jg
cmc
add
inc
dec
mov
inc
cld
dec
incl
dec
hlt
pop
les
ja
fldt
xor
mov
sbb
or
cmp
inc
call
dec
loopne
mov
xchg
lods
pushf
fisttps
xchg
pop
lds
repnz
test
out
test
decl
sbb
cmp
popf
pop
push
repnz
or
in
fldt
mov
adc
lret
out
into
pop
loopne
inc
sub
xchg
int3
lret
fistpll
rclb
cli
or
gs
jg
or
imul
fistpl
jge
xchg
js
mov
push
jo
outsb
jge
jo
fidivrs
enter
or
iret
das
cld
mov
jae
movsb
dec
xchg
imul
clc
or
arpl
jbe
sbb
sub
sbb
repz
jbe
dec
shrb
inc
jmp
jb
push
or
or
mov
mov
pop
pop
movsl
sbb
fistpl
loopne
je
imul
jb
mov
out
or
insb
sub
mov
mov
and
insb
adc
jne
mov
cmp
loope
push
fwait
out
jns
or
jp
popa
mov
sbb
insb
cs
ja
mov
xor
ret
sti
adc
shll
jle
test
pop
inc
inc
into
mov
pop
js
mov
mov
adc
sti
mov
aas
pop
adcl
popa
push
jle
sbb
loope
inc
jmp
push
mov
add
xor
jo
pop
dec
insl
mov
out
mov
and
test
jmp
ljmp
ds
outsl
push
cmp
sbb
pop
jl
imul
cmpsb
xchg
lea
ljmp
movsb
cltd
xchg
lods
mov
inc
dec
pop
stos
iret
sarb
fwait
in
shlb
test
je
cmc
add
pop
into
test
pop
jl
mov
push
ret
jae
mov
movsb
out
mov
and
insl
insb
jb
clc
test
movsl
fs
shll
xor
jnp
lcall
cmp
mov
outsl
int3
and
pop
outsl
xchg
roll
pop
mov
leave
lds
xchg
mov
cmpsl
ljmp
divb
and
xor
test
xchg
jbe
add
js
fistpll
adc
push
fwait
mov
outsl
pop
es
push
fiaddl
xchg
or
outsb
jns
cmp
xchg
lods
rcr
mov
subb
fsubp
fs
push
dec
xor
movd
dec
pop
adc
cmpsb
lea
mov
outsb
cmp
loop
mov
pop
mov
mov
jns
call
jne
loope
repz
jg
fildl
loop
test
ss
cmp
inc
outsb
jg
rcrb
cld
dec
iret
dec
addr16
div
push
inc
inc
test
inc
adc
aaa
ficomps
lret
xchg
mov
ficoms
jae
sbb
sbb
hlt
imul
and
stc
repz
daa
in
inc
movsl
das
jge
push
addr16
sbb
push
lea
adc
cs
incl
lods
arpl
cli
xor
or
xchg
iret
loope
insl
mov
dec
mov
mov
jp
cld
cmp
idivb
ljmp
pop
sbb
jnp
xchg
inc
cmc
imul
adc
add
das
cmp
mov
mov
pop
test
jge
sub
outsl
push
jmp
jecxz
cmp
inc
insl
stos
inc
iret
int3
mov
das
insb
fistpll
xchg
and
insl
imul
das
fsubr
mov
data16
mov
sub
or
pop
cmpl
or
fs
js
xchg
pusha
imul
pop
stos
add
ret
je
int3
in
cld
pop
push
adc
sbb
imul
jmp
cmp
mov
lret
popa
or
aaa
pop
in
pop
outsb
insl
je
das
mul
sub
imul
faddl
mov
aad
dec
dec
pop
clc
jbe
shr
pop
or
push
cli
dec
nop
in
pop
pushf
adc
mov
pop
adc
or
lea
pop
jg
out
mov
pop
lahf
pop
and
mov
jge
jns
xchg
popa
lcall
mov
pop
fimull
aas
shrb
test
bound
jge
out
dec
outsl
jnp
stos
pop
mov
popa
das
mov
cmc
testl
pushf
in
insl
icebp
jbe
insl
push
loopne
in
repz
insb
scas
xchg
addr16
jmp
arpl
xlat
sarl
lahf
push
pop
outsl
or
mov
movsb
xor
mov
cmp
push
insb
repz
add
ljmp
mov
shlb
in
ss
pop
insb
outsl
jae
fsubs
fwait
dec
lcall
je
pop
outsb
fs
sbb
xor
or
fildl
negl
adc
xchg
mov
insb
fldt
lock
xchg
ds
jmp
out
push
sbb
sub
lods
jmp
pop
xchg
lahf
insb
popa
pop
jo
cwtl
jns
leave
jg
test
les
ljmp
pop
or
inc
xchg
cli
push
sbbb
mov
or
ja
jae
add
dec
insl
mov
les
rcrb
popf
mov
ds
decb
and
adc
sub
dec
dec
rorl
loope
outsb
aaa
int3
cmp
loope
adc
fnstsw
jg
lahf
cmp
mov
push
pop
popa
scas
in
mov
popa
sbb
test
mov
loope
stc
stos
popa
into
addr16
lods
test
mov
shl
jo
push
outsl
or
mov
out
mov
inc
mov
ljmp
pop
pop
test
pop
adc
and
jp
xchg
sub
test
filds
add
outsb
mov
push
ljmp
jns
mov
imul
sbb
aaa
call
or
xlat
xorb
pop
mov
iret
jmp
push
stos
jmp
jle
push
sbb
jbe
int
dec
xchg
bound
mov
jg
daa
int3
iret
je
xlat
dec
popf
mov
sbb
imul
mov
add
add
imul
lock
rorb
es
jmp
les
popf
cltd
jo
aaa
mov
dec
insl
mov
shrb
faddl
adc
or
test
icebp
ja
xchg
jg
popa
mov
mov
dec
fucomi
jnp
mov
imul
xchg
push
in
insb
add
mov
mov
pop
xor
pop
andl
adc
push
xchg
cmp
das
rcr
sub
js
mov
push
gs
cmp
repz
nop
inc
push
test
pusha
loop
jbe
pop
call
dec
sbb
shl
jg
frstor
addr16
gs
add
repz
sub
jne
or
rorb
loopne
pop
push
cvtdq2pd
jae
scas
ret
sbb
imul
add
pop
pushl
jle
jb
iret
pushf
pop
negb
cmp
and
leave
leave
xchg
mov
cmp
movsl
and
push
leave
fs
add
mov
xor
insl
stos
xchg
lcall
add
test
mov
insl
mov
iret
in
lcall
inc
je
je
sub
aas
jns
push
sahf
push
cmp
negl
dec
psrld
cli
insb
xor
fwait
je
shlb
pop
sbb
bound
fwait
repz
iret
mov
lea
mov
adc
mov
ret
mov
pop
xchg
cmp
data16
sti
fbld
jo
xchg
push
jmp
repz
dec
scas
or
mov
sbb
xchg
lcall
or
push
cltd
push
mov
and
mov
leave
pop
mov
adc
jno
movsl
dec
push
pop
adc
loop
std
pop
mov
pop
in
xchg
dec
jae
push
stos
xor
or
scas
in
mov
icebp
pop
bound
dec
int
aad
mov
decl
sbb
shll
inc
out
fisubrs
fidivs
pop
out
xor
cmp
pop
push
das
outsl
sub
xlat
and
mov
mov
aaa
cmp
lea
pop
mov
loop
ss
pop
les
cmp
aad
mov
shrl
push
jecxz
addr16
mov
mov
test
fisttps
and
lds
int3
mov
and
pop
jmp
push
pop
rcrl
or
dec
mov
push
jmp
push
mov
lds
mov
push
leave
cmp
lds
jge
mov
add
sbb
outsl
pop
or
and
sahf
arpl
jmp
xlat
pop
jp
jmp
pop
addr16
insb
jecxz
shl
sub
imul
lahf
mov
addr16
sub
sti
and
sub
dec
mov
into
test
xchg
mov
ljmp
lahf
push
cmp
lfence
inc
adc
jmp
xchg
mov
jmp
addr16
aad
loope
icebp
jge
add
jecxz
add
imul
mov
mov
mov
ja
int3
loope
xchg
mov
addr16
dec
dec
xor
pusha
in
push
pusha
subl
leave
mov
dec
lcall
mov
data16
sub
pop
clc
mov
jne
sub
sbb
aas
sahf
or
push
xchg
das
sbb
and
insl
or
ret
gs
lret
add
push
repnz
fbld
int3
bound
push
cld
jnp
fcos
mov
addr16
aad
jl
data16
add
xor
inc
ljmp
or
push
adc
jl
dec
and
aaa
mov
mov
pop
movsl
enterw
pop
dec
fs
ffreep
aaa
jp
call
xor
sub
and
xabort
xchg
sub
into
lds
ret
jns
pop
push
popa
xor
in
xchg
insl
sbb
mov
cmpb
xchg
das
lock
xor
call
inc
jge
mov
pop
addr16
lahf
mov
insb
jg
outsl
pop
cmp
xchg
push
rcrl
push
sarl
ds
enter
cltd
pop
and
add
int
sub
fistps
mov
sbb
jne
pushl
jns
fwait
inc
arpl
sbb
pop
dec
pop
fsubrs
out
add
cmpsb
cmp
add
sti
sbb
pop
je
rcrb
gs
nop
cmp
aaa
mov
pusha
dec
mov
pop
push
fwait
sbb
movsl
inc
push
lods
iret
cmp
das
lock
fildll
shrl
fwait
clc
xchg
dec
lret
data16
ffree
sub
push
fisttpll
incb
push
outsb
ficoml
add
jns
sbb
and
mov
adc
and
jg
das
cmp
fcmovu
xchg
scas
and
stos
cs
stc
push
mov
jle
fs
jns
and
xor
xchg
sbb
mov
cmp
xchg
addr16
shlb
aam
jb
mov
fs
test
add
pop
loopne
in
xchg
xchg
loop
sub
dec
xor
in
movsl
ficoms
mov
iret
out
adc
test
std
mov
sbb
pop
nop
jns
sti
ficompl
push
adc
clc
dec
mov
push
mov
mov
cmp
cli
cmp
dec
arpl
rorb
gs
and
cld
outsl
cli
imul
sub
sub
sahf
aaa
mov
jne
dec
jnp
mov
in
xor
clc
push
pop
or
jns
adc
pop
icebp
mov
subb
sbb
sub
aaa
mov
aaa
mul
push
jbe
push
aas
ficompl
jo
sbb
jmp
xor
gs
stc
jg
call
dec
push
movswl
out
cmc
je
xor
ja
mov
sti
outsl
fnsave
push
fs
mov
int3
lcall
imul
pop
test
outsl
jns
aad
xchg
mov
mov
stos
out
lcall
outsl
xchg
arpl
filds
shl
sub
aam
xor
push
cltd
add
jae
mov
xchg
cltd
faddl
clc
jg
mov
in
adc
adc
sub
aaa
pmaxsw
insb
and
push
push
jmp
je
push
stos
push
aas
mov
add
or
cltd
mov
call
sti
outsl
mov
icebp
pop
scas
inc
dec
sbb
mov
outsl
jg
ds
xchg
pop
cmp
fcompl
push
arpl
push
push
pop
mov
aas
adc
jb
rcrb
adc
pusha
pop
stc
jae
push
mov
ret
cld
test
cmpsb
sbb
push
pop
bound
aam
out
xor
mov
shrb
fdivrl
ret
aas
outsl
or
sub
sti
add
lcall
das
cld
push
lcall
and
das
xchg
sti
ret
hlt
adc
adc
and
xor
hlt
mov
ljmp
stos
xchg
mov
pop
popa
icebp
imul
pop
arpl
cmp
test
xchg
jae
das
and
pop
cli
jp
mov
mov
inc
push
les
adc
sar
fists
dec
pop
jb
mov
arpl
pop
decl
mov
iret
push
mov
lea
cmc
push
sbb
mov
mov
mov
mov
in
sbb
dec
pop
test
push
out
or
lods
int3
mov
shl
sub
outsl
and
icebp
mov
jg
nop
shll
add
xor
lahf
pop
add
arpl
dec
popa
cmpsb
pop
icebp
xlat
arpl
mov
arpl
bound
jbe
ror
lret
pop
push
fisttps
push
in
sbb
testl
push
sti
sar
or
aam
stc
shrd
cmp
not
in
shlb
mov
adc
jp
xlat
clc
test
rclb
push
mov
mov
lret
mov
repz
and
add
sbb
pop
mov
das
aad
xchg
dec
rol
popf
cmp
cmp
jne
test
sub
fcoms
das
mov
outsl
sbb
dec
gs
xor
adc
scas
xchg
mov
inc
hlt
int
jae
loop
push
xadd
sub
push
fnstenv
mov
add
mov
enter
cmp
pop
outsl
jmp
aaa
stos
in
fs
fdivs
mov
jecxz
vmread
cld
test
jae
add
outsb
lods
cmp
fs
shrb
jg
mov
aas
jmp
bound
jmp
pop
lcall
bound
mov
xor
mov
xor
outsl
insl
vmwrite
adc
int
bound
sbb
loop
aam
scas
xchg
int3
bound
sbb
lea
jp
ljmp
lret
push
dec
dec
in
loop
imul
or
push
leave
ffreep
pop
daa
outsb
jp
xchg
cmp
pop
mov
fnstcw
movsb
mov
pop
rolb
roll
aaa
mov
and
sbb
jo
jmp
les
outsl
out
mov
mov
jno
outsl
mov
pop
rep
jb
xor
ret
aaa
mov
das
adc
or
mov
ret
roll
scas
jmp
pop
add
lea
mov
fs
leave
aam
sti
out
and
pop
jne
daa
bound
cmp
arpl
into
cli
dec
mov
and
pop
outsb
sbb
mov
and
dec
sti
mov
mov
pop
test
shll
shrl
dec
inc
pop
out
cltd
lea
sbb
ljmp
mov
dec
std
xchg
push
jae
rorl
cmp
xchg
add
lcall
aad
add
outsl
mov
push
fcoml
stc
fcompl
lock
xor
sbb
repz
int
or
test
mov
inc
fildll
aaa
add
inc
clc
cwtl
outsb
pop
push
sahf
and
xchg
sub
adc
sub
movsl
mov
mov
push
popa
cmp
pop
ret
cmp
jecxz
clc
pop
sub
je
imul
xor
std
jg
push
popf
and
cltd
mov
push
pand
lret
rorl
cmp
and
jne
xor
mov
xor
pop
cmp
or
push
aaa
clc
aaa
mov
cmpsl
lds
ljmp
dec
lock
gs
lds
pop
inc
mov
jle
jle
ficompl
lods
mov
sub
in
decl
fistpll
je
mov
imul
xchg
stos
push
pop
mov
add
stos
add
cld
pushl
aaa
out
pop
das
arpl
and
mov
mov
push
mov
mov
rcl
iret
mov
or
jne
sub
lock
enter
sahf
addr16
filds
pop
bound
ja
mov
js
ljmp
push
xor
mov
flds
or
mov
sbb
getsec
add
xchg
clc
lods
pop
cld
shl
xor
ja
arpl
pop
mov
clc
xchg
rorb
rcrl
arpl
rclb
fs
std
pushl
adc
jp
mov
popf
es
jb
dec
xor
cmp
jmp
mov
pop
nop
mov
popa
popa
imul
sahf
cld
ffree
rorb
add
cmp
jg
lea
clc
cmpsb
jb
sbb
sub
or
or
dec
lret
in
add
icebp
btc
lea
aaa
aaa
mov
stos
mov
add
or
pop
testl
xchg
int3
pop
lret
sub
fildll
lret
ljmp
inc
imul
mov
shll
jle
and
rolb
es
xlat
or
add
jae
add
roll
ss
pop
push
lock
add
lcall
das
bound
sub
aad
mov
jmp
sti
mov
stos
dec
and
sub
sbb
push
sbb
mov
or
mov
sti
inc
sbbb
dec
ja
sbb
cli
xor
cmp
shlb
incl
cmovb
push
dec
jnp
ss
inc
inc
push
and
add
jp
incb
push
dec
inc
push
mov
push
push
das
daa
add
xchg
and
cld
dec
push
dec
inc
cmp
inc
pop
push
adcb
mov
mov
mov
mov
pop
cmp
xchg
in
sub
push
jae
lds
mov
dec
daa
sub
sbb
int3
idivb
or
lea
in
cmc
push
mov
jmp
ljmp
jmp
cmpl
sbb
je
outsl
int
rcll
pushw
das
incl
and
dec
lds
call
jg
je
sub
dec
push
mov
je
add
dec
sbb
xorb
fists
cli
cs
mov
and
orb
xor
and
sub
in
ljmp
dec
shlb
jns
test
dec
jb
out
test
xor
and
push
push
mov
sbb
dec
adc
xor
cmpb
push
pop
dec
and
fadds
cmp
add
inc
adc
jne
inc
jb
cs
inc
and
je
jecxz
cmp
mov
testb
cmp
jb
das
int3
add
lods
inc
jg
xor
inc
xor
sbb
sbb
mov
pushl
cli
xor
iret
jb
pushf
cmp
adc
cmp
sub
add
das
loop
and
pop
add
inc
pop
jmp
outsl
and
shl
jg
adc
bnd
mov
bound
and
dec
and
push
hlt
pop
jle
bound
mov
lret
adc
mov
push
jbe
sub
pop
popa
mov
imul
ljmp
adc
loop
or
into
or
pop
sbb
iret
in
lea
jmp
add
aaa
xor
hlt
pushf
sub
or
js
inc
icebp
arpl
les
mov
or
jg
sub
cs
fs
mov
pushl
orl
std
push
xor
test
inc
dec
lcall
jo
je
add
sbb
or
leave
push
inc
cli
das
std
testb
pop
jno
jp
dec
fisttps
push
nop
repnz
jne
insb
or
and
push
push
sub
inc
dec
adc
cmpsb
andb
xchg
lcall
pop
std
sub
push
sub
clc
and
sbb
pop
cld
imul
mov
mov
and
fmull
push
inc
incl
lds
mov
xor
mov
push
sbb
xor
das
cmp
decl
xchg
mov
sub
add
arpl
mov
jg
imul
mov
mov
dec
fwait
int3
or
mov
cld
jg
fbld
js
dec
jne
ljmp
ret
aaa
sbb
jb
inc
loope
push
cli
sbb
das
mov
add
sarl
mov
ljmp
mov
xor
push
ss
xchg
cs
inc
gs
jbe
fwait
sarb
xor
je
loopne
call
cs
push
inc
movsl
inc
mov
jbe
es
pop
push
jg
push
popf
xor
stc
push
mov
xor
push
movsl
cmp
push
aaa
xor
mov
negl
das
mov
push
scas
test
cmp
mov
mov
mov
pushf
and
andb
ss
jae
xor
cmp
hlt
sub
fsubrp
pushl
orl
or
cld
push
add
jg
jmp
pop
js
cmp
dec
cmp
in
jb
insl
pop
shlb
inc
cmp
xor
sub
dec
dec
push
lea
pop
movsb
gs
ljmp
push
xor
jo
jecxz
imul
xor
inc
jbe
incl
xchg
xchg
jns,pn
aam
dec
xor
in
out
std
jg
imul
ss
cmpsb
push
cmp
test
ljmp
lahf
pop
mov
add
dec
inc
xor
lahf
dec
jg
and
or
sub
inc
pop
in
sub
and
jg
pushl
add
aaa
jb
mov
fiaddl
push
inc
or
cli
dec
cld
scas
push
sub
sbb
popf
rcll
push
adc
xor
pushf
pop
mov
lcall
cld
xor
xor
xchg
pop
dec
lret
cmpsb
xchg
test
cwtl
gs
cmc
and
rcll
xor
out
jns
lcall
mov
pop
leave
xor
mov
lods
dec
inc
popa
inc
xor
push
cwtl
jbe
call
pop
cmp
test
insb
data16
pop
push
lock
mov
mov
adc
mov
mov
cmp
ret
add
cli
push
jge
sbb
push
and
inc
push
inc
sub
mov
inc
push
pop
inc
mov
icebp
pop
test
push
xor
push
mov
pop
insb
dec
cmc
mov
clc
mov
sub
sub
comiss
add
js
xcrypt-ofb
cmpsl
outsl
clc
call
inc
pop
xor
dec
insl
adc
ret
jae
add
div
iret
sub
sbb
push
popf
call
xor
sbb
bound
ljmp
push
stos
imul
xor
aaa
add
aaa
mov
ljmp
lock
aam
sti
lds
stc
hlt
aaa
xchg
pop
push
jne
cmp
test
jge
ljmp
inc
push
das
inc
push
and
jmp
mov
outsl
aas
out
pop
mov
rcrb
jne
in
jg
and
inc
ucomiss
and
or
icebp
push
ret
xor
mov
lret
out
daa
dec
mov
fadds
push
push
out
test
mov
ljmp
jmp
adc
mov
mov
ljmp
sub
cmp
out
push
pop
and
mov
pop
std
dec
push
mov
jae
scas
dec
popa
dec
sti
and
data16
loopne
outsl
icebp
rol
adc
popf
mov
push
dec
jmp
leave
jle
pop
lcall
push
sub
fcmovb
rcll
out
out
dec
ja
jp
mov
xchg
push
decb
ljmp
jle
sbbb
in
cs
daa
jb
popl
lret
stos
incl
std
pop
push
or
das
adc
or
cmc
pop
xchg
cmp
push
hlt
test
mov
add
leave
mov
cmovs
iret
leave
pop
dec
idiv
inc
leave
push
add
push
xlat
sbb
test
lcall
pop
jb
imul
xor
das
mov
mov
pop
into
pushf
dec
and
pop
and
adc
push
dec
xchg
pop
push
lcall
dec
inc
lock
push
imul
lahf
xor
stos
aaa
inc
dec
mov
addr16
imul
outsl
cmc
sbb
call
movsl
cmp
mov
dec
and
in
decl
fstpt
adc
int3
test
mov
mov
xor
sbb
inc
jg
outsb
aaa
cmc
movsl
hlt
lods
cmc
lds
pop
xchg
adc
sti
cltd
adc
push
mov
cmp
jg
pop
cmp
xlat
mov
das
or
mov
shrl
jle
mov
sbb
jle
jb
jnp
jecxz
mov
outsb
xchg
lahf
jnp
inc
sub
iret
cs
das
cld
mov
repz
movsl
mov
sub
xor
inc
in
cltd
fucomip
inc
push
add
jmp
dec
jl
lea
pop
jge
adc
lcall
aaa
in
and
pop
test
rcrl
setge
ss
es
mov
movsb
fildl
mov
out
stos
popf
mov
nop
push
sar
jmp
test
adc
cld
jg
jne
mov
xor
pop
push
dec
sahf
sub
jmp
jmp
lods
push
pop
push
push
mov
xchg
ja
stc
cltd
add
cli
jne
cmp
fcom
inc
push
fwait
fs
hlt
and
cmp
fidivrs
cli
xor
movsb
scas
mov
ret
mov
je
cmpsl
jae
push
lret
pop
js
sbb
jmp
mov
pop
je
pop
jb
jae
mov
sbb
jge
outsl
cmc
in
and
ds
pop
jb
mov
push
and
and
and
adc
pushl
ds
mov
xor
pop
dec
dec
xchg
mov
rcl
xor
test
aaa
in
inc
jne
cmpsb
ret
xchg
sub
call
cmp
lcall
mov
jns
mov
push
sbb
stc
and
mov
ja
push
dec
push
sub
jmp
roll
outsl
out
push
push
cltd
test
movsb
mov
outsl
cmp
pop
shlb
outsl
jns
repnz
mov
cmp
pop
cmpl
sar
nop
sahf
and
aas
imull
das
sub
push
test
dec
mov
call
pop
enter
ljmp
jp
mov
daa
iret
mov
cmp
addl
scas
lahf
cmp
adc
cli
adc
mov
adc
jnp
jmp
not
fistl
stos
lahf
fists
cwtl
popf
xchg
push
sti
mov
xchg
push
dec
mov
stc
imul
das
test
dec
pop
mov
test
lock
cmc
jmp
sbb
mov
movsb
movsb
hlt
shr
out
mov
xchg
jg
jl
mov
sub
jecxz
dec
sbb
rorl
std
pop
xchg
xor
testb
js
pop
sub
dec
xchg
loop
fldl
sub
push
push
xchg
ficompl
ljmp
jmp
leave
push
ret
daa
insl
jae
leave
jne
inc
inc
insl
mov
les
jns
insb
pop
sbb
xchg
aaa
decl
mov
ret
sub
outsl
and
inc
dec
dec
lcall
mov
pop
popf
cmp
sbb
cmp
inc
repz
pop
clc
pop
mov
jp
out
xchg
in
imul
addr16
pop
loop
les
fadd
jle
jl
adc
xor
fnsave
mov
outsb
daa
aad
mov
sbb
mov
pop
decl
shl
ja
data16
fdivrs
or
lret
xchg
cs
out
and
lahf
test
aaa
das
inc
daa
mov
pop
push
repnz
mov
mov
push
pushf
add
push
cld
rolb
mov
pusha
cs
mull
das
jmp
fnsave
outsb
cmc
mov
dec
xchg
das
adc
and
ljmp
xchg
pop
jge
pop
xchg
push
xchg
xor
idivl
mov
and
jae
sub
fs
xchg
outsl
loop
xchg
popa
mov
jp
cmp
popf
je
dec
mov
decl
scas
sbb
sti
ds
cmpsb
cmp
ljmp
movsb
push
mov
addr16
fistpll
adc
es
cwtl
repz
xor
pop
xchg
pop
test
dec
mov
inc
imul
aaa
int3
jle
popf
aas
loope
push
imul
xor
loop
stos
int
je
adc
imul
cld
mov
test
mov
imul
pop
mov
add
jge
add
mov
loopne
das
mov
sbbl
imul
mov
imul
jecxz
lcall
mov
xor
in
fs
jns
lret
fimull
call
fsubl
loopne
je
and
lret
add
fists
xor
ret
ret
out
sbbl
xchg
aaa
lret
mov
cmp
or
jg
push
mov
xchg
stc
lcall
xchg
dec
inc
and
insb
pop
mov
push
jno
inc
xor
cmpsb
scas
in
add
push
icebp
call
rorb
imul
fisttps
fsubp
in
cmc
push
dec
push
stos
jge
xor
std
mov
sar
test
aas
fbld
xlat
jnp
push
cmp
and
mov
ss
cmpsl
and
out
sub
call
jo
or
sub
bound
cmp
idiv
ljmp
cld
jne
inc
imul
lea
cmpsl
out
aad
ret
push
pop
cmp
or
dec
push
leave
repnz
mov
sbb
or
lret
pop
or
sbb
xor
mov
jo
dec
or
jne
mov
outsb
jmp
cmpsl
mov
or
or
fdivs
add
sub
mov
add
cmc
jmp
popa
or
int
mov
pop
popa
add
lahf
cmp
insl
in
movsl
ss
and
xchg
inc
in
cmpsl
scas
cmpl
xor
add
fldl
imul
out
or
inc
mov
jmp
cld
push
xchg
sub
dec
in
test
mov
fcmovnu
cmpsl
push
arpl
mov
adc
jb
dec
and
and
cmpsl
add
push
cmp
push
xchg
shll
loopne
xchg
sarb
or
sub
add
mov
repz
arpl
imul
mov
sbb
das
push
mov
incl
xchg
cmpsl
inc
mov
inc
out
pop
push
or
dec
insl
clc
dec
inc
scas
lret
mov
loop
jg
dec
jmp
daa
bound
bound
mov
call
sbb
inc
aad
outsl
mov
xchg
jae
xchg
movsb
inc
das
icebp
add
fistl
push
mov
test
call
and
mov
and
clc
call
jmp
stos
adc
cs
lcall
lds
lea
push
cwtl
sub
cmp
cmp
std
inc
xchg
je
push
cmc
jne
jle
call
mov
sub
out
cmp
mov
jae
cmp
or
dec
push
in
dec
dec
mov
add
lcall
pop
xchg
adc
sti
je
mov
and
mov
addr16
dec
insl
incl
imul
jo
roll
push
and
adc
call
incl
cs
pop
jb
inc
in
call
aas
jbe
pop
jno
pop
pushl
cmp
add
jbe
hlt
test
adc
cli
ss
add
jnp
cmc
aaa
sbb
xchg
popf
ja
xchg
fs
fidivrl
xchg
xchg
xor
adc
jg
je
jnp
pop
push
push
repz
ja
sbb
add
pop
ljmp
imul
loopne
inc
add
jg
out
mov
cmpsb
inc
test
cld
mov
arpl
inc
call
or
roll
les
outsl
sbb
sub
xlat
xor
sub
pop
shrl
and
mov
outsl
imul
lss
inc
add
push
fs
xor
lcall
jbe
imul
js
jne
movsl
push
cmpsl
xchg
scas
inc
fs
xor
add
das
inc
cld
xlat
jae
jb
mov
in
lock
mov
fmuls
ljmp
loop
addr16
mov
jae
out
push
stos
mov
movl
fisttps
jmp
or
pop
xchg
mov
pop
sar
outsl
insb
adc
pop
shlb
push
xchg
jns
jae
pop
pop
dec
inc
add
sbb
daa
jnp
jae
test
mov
pop
add
popf
lret
es
mov
insl
lret
mov
xchg
fistps
leave
in
pop
xlat
je
lds
pop
jl
ljmp
lock
xor
outsl
inc
aas
jl
mov
std
adc
pushl
xor
sahf
mov
addr16
and
pop
js
push
push
mov
push
pushl
push
mov
out
dec
jns
imul
inc
repnz
les
xchg
sbb
jl
ret
pop
pop
cwtl
lahf
pop
jae
jg
sbb
adc
dec
push
push
lahf
push
mov
arpl
das
fs
call
clc
jmp
dec
xchg
mov
jns
cli
das
jae
pop
cmp
aam
aam
incl
fst
xchg
xchg
xlat
fwait
rorl
scas
sbbl
or
jne
jno
xor
xor
imul
fcos
das
hlt
lcall
leave
mov
and
mov
and
add
lcall
std
pop
cmp
jae
getsec
fs
das
hlt
das
iret
mov
mov
call
dec
fucomip
cmp
cli
pusha
out
lret
es
sub
movsb
xor
lods
fbstp
imul
jnp
xchg
cmp
add
cmc
decl
push
in
pop
test
call
xchg
lcall
icebp
mov
inc
push
push
adc
xor
push
jmp
mov
or
and
jle
xor
cmp
cmp
rolb
fcomip
or
push
dec
push
push
jge
and
aas
pop
sbb
ljmp
push
loop
dec
push
fimull
sub
bound
das
sti
das
cld
mov
jl
aaa
inc
repnz
cltd
in
imul
dec
out
jnp
cli
in
adc
cld
jg
inc
ljmp
push
stos
pop
rolb
lret
ljmp
jo
mov
lods
leave
dec
push
das
test
lcall
dec
jne
sub
outsl
push
aad
es
lahf
nop
jl
push
mov
xchg
imul
aaa
into
and
std
mov
dec
inc
mov
testb
lcall
push
or
xchg
adc
testb
incl
pop
in
cmp
mov
pop
or
sub
mov
jnp
int3
pop
inc
xor
adc
push
sbb
or
sub
sbb
mov
jne
std
sti
aaa
test
lcall
mov
in
lret
loop
test
je
push
ret
insl
cmpsl
or
jno
cmpl
jmp
push
mov
iret
mov
sub
rolb
push
popa
inc
mov
je
cmp
mov
jge
pop
loop
xor
mov
pop
add
xor
bound
lock
daa
pusha
pop
cmpsl
mov
add
popa
adc
and
fdivrs
add
sub
add
sub
dec
imul
sarb
add
push
cld
sbb
and
fdivrs
les
sub
push
sbb
xchg
add
or
jmp
sbbb
sti
dec
cltd
das
int
pushf
mov
leave
inc
nop
jg
add
add
clc
push
lock
or
fidivs
mov
lock
daa
movsl
popa
cwtl
inc
and
nop
mov
or
loopne
cld
cmp
movsl
pusha
add
lcall
lock
cmp
push
and
test
pusha
ret
adc
mov
or
pop
mov
stos
push
push
jo
cmc
or
addb
outsl
lahf
add
sbb
xor
cmpsb
inc
or
xor
add
and
sub
sbb
push
add
add
rclb
or
lock
clc
pop
hlt
mov
addl
and
xor
and
dec
test
gs
daa
sti
or
jmp
dec
add
pop
xchg
cmp
shrl
lret
and
cld
adc
pusha
fdivs
sahf
movsl
add
dec
cvttps2pi
stos
loop
add
mov
getsec
fcompl
repz
insb
loopne
stos
dec
cmc
dec
les
decl
mov
jno
hlt
out
sub
adc
mov
imul
sbb
adc
adc
push
add
or
pushf
les
adc
mov
and
int3
add
jle
adc
les
cmpsl
gs
mov
imul
mov
push
cltd
and
jae
push
add
fimuls
xor
xor
or
pop
adc
dec
add
imul
and
push
or
in
gs
mov
mov
je
xchg
or
lret
or
mov
aaa
xchg
icebp
gs
or
in
orb
int3
shrb
dec
xchg
jecxz
add
cmp
or
repz
mov
pop
shrd
dec
and
xchg
mov
push
push
xorb
jbe
xor
pop
pop
jmp
mov
push
add
lods
add
nop
sub
or
lret
or
ret
mov
add
mov
nop
arpl
and
lret
add
in
repnz
arpl
xor
add
mov
in
or
pushf
iret
xchg
and
addb
orl
rorb
jo
or
push
adc
or
xor
lret
rcrb
pop
jbe
adcl
daa
mov
test
cmp
jg
sub
pushf
jnp
or
xchg
inc
sbb
cwtl
adc
push
movsl
in
int
jo
les
and
inc
std
push
call
pop
fcmove
jp
lcall
dec
lahf
cld
stos
xor
sbb
jno
pop
inc
shlb
sahf
movsb
dec
movl
ljmp
dec
jnp
mov
cmp
pop
push
mov
bound
pop
mov
sbb
cmp
in
sahf
les
adc
shll
add
pop
add
lcall
outsl
ja
scas
sub
add
imul
mov
pop
adc
adc
ljmp
loope
bound
cmove
daa
dec
add
cmp
push
sahf
sbb
pop
dec
mov
jns
pop
test
pushl
or
inc
or
push
sbbl
or
outsl
add
adc
lcall
gs
nop
loop
jae
lret
dec
pop
cmp
bound
inc
bound
pop
sub
inc
aam
jmp
sahf
inc
pop
shlb
popa
pop
cmp
pushl
dec
pop
sub
xor
jae
sub
popf
bsr
rolb
push
icebp
jmp
in
loop
outsb
dec
ljmp
ror
lea
imul
mov
xorb
lret
lret
push
fstpt
lahf
cli
mov
adc
mov
iret
stos
jmp
mov
ljmp
mov
mov
and
ja
aaa
decl
outsb
push
xchg
xor
mov
ja
xor
pop
pop
mov
imul
pop
popa
mov
adc
pop
push
mov
gs
mov
mov
insb
jns
push
sub
cmpsb
jne
push
xor
loopne
push
imul
dec
sbb
mov
movsb
out
roll
in
jmp
into
pop
pop
or
jne
mov
sbbb
push
bound
add
jg
or
frstor
mov
subb
dec
cmc
aad
push
dec
fldenv
jge
aam
decl
psrlq
popa
jns
jecxz
popa
data16
repz
jno
inc
test
inc
dec
lahf
bound
lret
mov
push
mov
cmp
push
hlt
das
adc
daa
mov
cs
pop
dec
outsb
fwait
call
add
and
packsswb
dec
jne
test
fs
push
pushl
pop
addr16
sahf
jns
bound
jo
and
push
lret
insl
addr16
xor
pop
or
sbb
lcall
ljmp
pop
push
jae
pop
xor
aaa
js
pop
rcr
mov
and
push
push
dec
lds
sbb
fldt
outsl
or
inc
and
or
imul
pushf
imul
je
fistl
ljmp
cmp
adc
gs
das
sbb
cmp
out
mov
sarl
lcall
jae
imul
outsl
jo
jne
outsl
insb
pop
pop
insl
pop
and
mov
out
jecxz
outsl
mov
insl
and
jle
push
call
out
cli
push
rclb
arpl
cs
xor
popf
call
decl
pop
push
daa
jae
jb
or
mull
cmp
loop
gs
call
incl
mov
and
and
inc
shrl
mov
sbb
jno
adc
mov
push
add
mov
insb
xchg
push
adc
lcall
jb
popf
pop
xorb
sarb
jle
fdivrs
bound
out
jne
push
imul
out
pop
sub
mov
shrl
loope
and
ja
pop
pop
call
ss
push
sub
push
pusha
je
fists
fists
imul
pop
ficomps
hlt
pop
test
jb
fcmovnb
xchg
imul
fsubrl
cltd
xor
les
je
add
sti
ljmp
std
ja
pop
pop
lds
push
xorb
ss
sbbb
sub
insb
inc
fs
or
pop
xchg
pushl
pop
xchg
push
out
bound
je
mov
divb
xchg
movsb
jae
pushl
ljmp
jmp
add
pop
das
insl
imul
inc
pop
popf
dec
jb
ss
push
inc
inc
sbb
jmp
cmp
ss
and
negb
push
incl
mov
jo
out
pusha
pop
xchg
xchg
out
jp
setl
fs
mov
mov
jp
adc
pop
outsl
dec
mov
out
leave
pop
mov
push
cmpsl
mov
and
mov
inc
insl
mov
fbstp
out
push
push
pop
push
je
out
lods
jb
test
push
mov
mov
and
call
dec
push
cmc
mov
dec
push
inc
imul
outsl
cld
outsl
leave
xorl
mov
stos
mov
insl
jmp
pop
outsb
clc
outsl
cld
xchg
popa
es
adc
add
mov
fiaddl
outsl
cmc
call
fsubrl
pop
mov
jae
fucomi
mov
or
or
cmp
aam
dec
ja
btsl
call
clc
decl
pushf
and
lcall
or
sub
fdivr
cmp
data16
stos
js
jbe
sbb
insl
mov
pop
sar
sbb
je
pop
aas
leave
add
imul
nop
push
es
lds
jmp
popa
icebp
aas
arpl
xor
out
sub
or
loope
add
ja
out
dec
jb
dec
lock
sbb
jns
inc
stc
mov
jg
jo
outsl
iret
inc
sahf
shrl
mov
packuswb
std
das
lea
iretw
pop
cmp
sbb
or
addr16
mov
xchg
sub
push
iret
pop
cmp
loopne
mov
mov
roll
test
xchg
cvtps2pi
xchg
popa
loop
push
and
and
ja
pop
dec
pop
int
out
sub
inc
push
pop
xor
gs
sbb
inc
jge
inc
jmp
pop
aam
mov
sub
pusha
cmpsb
in
aaa
push
jns
and
fwait
int3
jg
das
shl
lea
fs
cmpsl
das
stos
das
sub
mov
adc
int
out
xchg
pop
aas
cmp
test
test
or
lret
ljmp
add
mov
mov
or
cmp
adc
push
lock
out
lock
xchg
jnp
push
cwtl
push
lods
cmp
sbb
outsl
ljmp
call
test
xchg
push
push
xor
sbb
jno
lcall
andl
cmp
or
subl
pusha
shrb
push
and
push
and
in
xchg
outsb
or
imul
add
push
bound
add
loope
add
aaa
mov
jns
xchg
lret
insl
in
imul
incl
mov
fistl
and
arpl
mov
or
jbe
jecxz
pop
inc
daa
sbb
call
mov
pop
fildl
pushf
pop
mov
cmp
lds
or
call
decl
es
mov
sub
insb
or
insb
adc
aas
cs
dec
je
xor
cs
punpckhwd
xor
arpl
mov
sbb
sub
jne
or
dec
psubw
stos
sub
mov
mov
stos
ds
pop
fisttpll
cmp
push
subb
pop
es
pop
mov
push
cmp
cmp
pop
or
or
xor
stos
or
divl
pop
les
les
ja
cmp
jmp
pop
sbb
mov
inc
imul
mov
or
lods
cmc
cmpsl
sbb
sub
iret
jb
imul
loop
lods
mov
mov
jo
imul
mov
jmp
in
xorl
ljmp
cs
gs
ljmp
push
dec
jne
je
and
call
incl
fwait
mov
dec
data16
pop
test
or
inc
dec
mov
sub
pop
in
dec
push
xchg
dec
jo
mov
popa
mov
sti
in
emms
inc
and
lret
call
cmp
mov
inc
lahf
cmp
rcll
mov
push
jecxz
dec
lcall
in
addr16
in
and
lds
xchg
loopne
dec
outsl
or
call
push
xchg
inc
test
dec
xor
pop
popf
or
pusha
dec
lret
in
test
rol
decl
xor
rol
mov
jne
adc
ret
stc
dec
repnz
dec
dec
xor
jne,pn
out
xchg
mov
in
das
and
mov
mov
jp
xchg
mov
mov
orb
repz
and
cltd
inc
mov
push
jg
xchg
inc
push
clc
push
mov
cmp
lret
fistpll
in
adc
je
add
fldl
pop
push
jg
push
das
jo
mov
push
imul
popa
sbb
dec
int
int
addb
push
fistpl
lock
fisttps
idivb
dec
fcmovne
xchg
out
xchg
jp
mov
mov
loope
jb
bound
es
std
adc
jecxz
inc
xchg
popa
add
stos
aaa
mov
dec
jg,pt
out
std
outsl
cld
pop
lret
lret
data16
insb
cmp
xchg
sub
mov
or
pop
dec
sbb
fsubs
mov
jl
insb
mov
testb
sti
mov
xor
sub
push
mov
enter
pop
jb
les
mov
jns
mov
and
inc
cmp
mov
adc
mov
sbb
int
decl
cld
mov
or
jbe
inc
add
aas
daa
and
out
cmpsb
adc
pop
jp
flds
in
jns
adc
fmul
pop
mov
incl
stc
pop
movsl
or
xchg
xchg
dec
fsubrl
fisubl
cmp
out
fadds
ljmp
fisttpl
jle
xor
imul
sub
cmp
mov
xchg
in
sbb
adc
aas
push
mov
pop
lea
aam
hlt
or
cmp
or
mov
shlb
jns
xlat
into
addr16
lcall
jmp
frstor
data16
mull
and
jg
or
repz
hlt
jno
add
rcrl
fnstsw
movsl
cmp
mov
jns
sbb
jl
inc
jmp
dec
popa
insl
sar
sarl
imul
push
mov
jno
and
cmp
mov
shll
pop
and
movsl
test
jmp
inc
dec
mov
push
mov
arpl
jg
negl
cmc
dec
jbe
es
adc
mov
adc
mov
mov
push
lcall
add
xor
jmp
push
movsb
arpl
inc
mov
inc
push
xchg
outsl
push
mov
dec
jo
shrl
dec
inc
rcrl
or
incb
pop
testb
add
popf
outsb
icebp
decl
cmpsl
je
insl
mov
gs
outsb
sbb
enter
roll
mov
push
repnz
std
es
ja
or
hlt
jbe
push
mov
imul
aaa
sub
cld
mov
jle
pop
lret
xor
mov
add
outsb
mov
xchg
mov
pop
stos
sub
std
adc
and
dec
popa
ja
in
insl
imul
aad
cmpsl
dec
inc
jmp
ja
mov
mov
or
push
repnz
insb
push
gs
cmpsl
nop
addl
mov
jae
out
push
out
mov
sub
pop
ja
sub
int3
or
xchg
pop
xlat
test
clc
inc
jge
dec
mov
sbb
jle
lret
jg
mov
pop
dec
popf
adc
sbb
fmuls
inc
sub
mov
jle
dec
mov
dec
sbb
ret
pop
mov
pop
clc
jmp
dec
aam
subb
push
push
and
fsubr
xchg
inc
cmc
call
repnz
daa
xchg
xor
mov
lock
repz
mov
jmp
rcrl
outsl
std
in
push
xchg
es
dec
stos
push
cwtl
or
fistps
out
fs
sbb
rol
lods
pop
mov
push
insl
fisttpll
mov
stc
jg
js
jg
iret
bnd
mov
xchg
inc
cmp
dec
loop
dec
pop
lret
adc
gs
insl
mov
outsb
xchg
cmpsl
mov
ljmp
stos
sbb
jmp
cli
or
mov
mov
sbb
jbe
inc
jns
out
lea
dec
shll
test
sbb
xlat
jmp
mov
pushf
xor
mov
adc
insl
sub
fisubrl
sar
dec
push
insb
mov
incl
dec
movsl
ss
dec
dec
ret
stc
sbb
mov
cwtl
adc
ds
mov
add
pop
and
adc
xchg
and
ret
in
sbb
pop
adc
ret
push
rorb
test
or
xlat
jp
inc
addr16
bound
call
cmp
cmpsb
jg
outsb
or
daa
dec
jns
mov
xor
in
mov
cmpsl
sbb
jns
test
mov
gs
cwtl
rclb
test
outsl
icebp
mov
lds
movsb
imul
call
push
outsb
lods
loop
or
lea
dec
cmpsb
sbb
aaa
pop
mov
loope
add
cmp
out
jns
mov
ljmp
cmp
leave
lods
call
sar
dec
imul
imul
inc
popf
int
sbb
test
in
inc
lcall
aad
sub
test
lcall
xchg
ss
ljmp
pop
or
in
pop
add
std
or
mov
sti
popa
cli
jae
loopne
jmp
push
mov
mov
ret
dec
inc
lcall
xchg
mov
dec
lea
cmpsb
pop
push
cltd
cmc
pop
jmp
mov
jp
lcall
bound
dec
sub
mov
mov
rcll
das
lods
xor
inc
clc
or
sub
sub
xchg
jo
stc
adc
or
or
sbb
push
inc
dec
outsl
add
out
and
push
sub
cmp
repz
rorb
pop
imul
das
inc
movsl
fbstp
mov
adc
mov
incb
movsb
repz
sub
mov
pop
nop
jb
test
xchg
in
popa
mov
movsb
mov
das
jl
or
stos
bound
cwtl
dec
in
outsl
test
lea
lea
cmpsb
sbb
jmp
lds
out
or
jl
orl
inc
jne
mov
mov
push
lcall
mov
imulb
jg
bound
xor
mov
ret
pop
out
nop
inc
lret
aad
jnp
pop
das
ret
sub
pop
inc
imul
fcmovnbe
movq
fcomp
loop
imul
sbb
adc
movb
jns
in
pop
sbb
pop
mov
inc
pop
cmpb
stos
andl
inc
or
ss
push
fwait
inc
jns
fistpl
xchg
cmpsb
cltd
inc
pop
ret
mov
inc
addr16
ret
dec
clc
fstpt
aas
xchg
mov
inc
ret
push
cmp
sbb
test
sbb
xor
fsubl
fstps
outsl
push
loop
inc
pop
stos
jl
inc
lcall
jns
add
sub
cmp
out
into
add
or
sub
cs
sub
inc
jb
addr16
test
jmp
movsl
ljmp
cmpl
or
or
dec
int3
pusha
stos
sbb
jmp
inc
popa
adc
icebp
movd
imul
dec
add
packsswb
xor
jns
mov
pop
clc
inc
inc
jg
test
pop
mov
fisttpll
adc
insb
imul
stc
pushl
cmpsb
xchg
push
mov
cmp
jl,pn
dec
aaa
pop
js
sti
sbb
into
push
adc
pushf
adc
pusha
cmp
push
out
inc
xlat
sub
gs
pop
pushl
xchg
in
xchg
repnz
jae
repnz
mov
push
pop
lock
incl
leave
inc
cmp
inc
inc
xor
pop
daa
rsqrtps
mov
jns
aam
or
clc
jg
jmp
sub
out
mov
testl
les
mov
out
sbb
lea
mov
divb
jl
jmp
inc
jae
adc
push
lock
mov
scas
aaa
mov
xor
popl
push
call
clc
xchg
and
arpl
inc
cmp
shrb
mov
clc
cltd
add
sbb
fdivr
jg
push
pop
inc
pop
adc
outsb
lock
and
out
pop
xor
or
sub
inc
and
insl
outsl
cmp
ja
sbb
call
js
inc
xchg
xchg
test
jp
into
inc
aad
inc
inc
fldenv
ds
leave
addr16
loopne
jno
jl
mov
lds
out
lods
inc
or
mov
mov
mov
push
cmp
jb
pop
mov
imul
hlt
push
das
adc
push
imul
out
adc
push
das
std
data16
xchg
sahf
daa
aad
mov
mov
lea
stos
in
or
adc
out
pop
mov
mov
sub
rcll
xor
jb
pop
loopne
pop
test
pop
jp
push
jae
sti
dec
or
inc
sub
inc
mov
jno
popa
and
jg
lcall
lods
mov
shll
xchg
arpl
pop
orb
cmpsb
xor
dec
nop
imul
test
das
jne
fisttps
sbb
xlat
ja
xlat
insl
fists
fs
fnstenv
lea
push
addr16
dec
scas
cmc
ljmp
push
jmp
adc
nop
inc
in
movsl
push
imul
incl
scas
lret
in
out
in
popa
mov
push
loopne
repz
inc
test
pop
jge
jmp
rol
inc
jne
mov
outsb
inc
pop
in
mov
cltd
adc
sar
push
ljmp
mov
or
in
add
je
movsb
sub
pop
jae
mov
inc
test
adc
xor
push
jecxz
outsl
ljmp
fucomp
jno
push
std
sbb
test
mov
inc
rorb
aaa
mov
clc
in
mov
sbb
jb
movsb
and
insb
dec
xchg
faddl
ss
ss
clc
push
push
pop
test
ja
je
clc
incl
pushl
jb
leave
inc
push
nop
pushf
xor
sub
inc
ljmp
cld
mulb
lcall
xchg
xchg
inc
sub
jle
lods
mov
mov
add
fptan
inc
lods
cmp
and
mov
xchg
mov
popa
pop
mov
xchg
adc
das
pop
loopne
push
int3
cmp
mov
or
fildl
stos
iret
pop
aas
repnz
mov
dec
fucomip
and
lret
inc
pop
jo
clc
outsl
flds
jg
into
jmp
jae
xchg
cmp
iret
sub
pushf
scas
inc
pop
jne,pn
xchg
add
in
rcl
jmp
cmp
js
test
aaa
loop
scas
les
pop
sub
jnp
pcmpeqb
movsl
lea
jle
jne
mov
outsb
notb
inc
lcall
mov
sub
cmpsb
mov
arpl
sbb
decl
notl
dec
lcall
push
dec
das
pop
cmp
std
int
cltd
inc
insb
or
aaa
inc
lahf
cld
orb
outsl
shlb
mov
adc
xchg
out
mov
dec
out
out
cmpsl
js
dec
jp
mov
mov
and
xchg
push
sbb
leave
lock
pop
call
stos
dec
push
dec
add
aaa
cs
mov
mov
inc
mov
adc
mov
in
dec
dec
push
nop
sbbl
fdivrp
xchg
outsb
filds
popa
fs
mov
mov
ljmp
pop
sbb
sbb
insl
int3
add
fcomi
cmpsb
sti
jg
sbb
lcall
dec
imul
push
out
push
das
sbb
fdivs
lea
jbe
std
inc
fistl
xchg
sub
addr16
call
nop
outsl
push
aam
in
sub
xlat
or
lret
cmpsl
les
push
rcr
fmull
adc
das
mov
mov
sub
add
adc
out
ljmp
xor
inc
lods
das
std
fistpll
shr
pop
or
push
inc
ss
outsb
cmpsb
mov
jmp
rcrl
cmp
shr
and
or
ss
mov
sub
outsl
rolb
clc
mov
and
mov
inc
sub
add
jg
or
pop
lret
shlb
bound
cmp
lods
mov
inc
bound
fdiv
fisttps
dec
jb
loop
mov
pop
dec
xlat
lea
ds
sbb
push
sbb
decl
jae
or
jnp
int
outsl
cmpsb
pop
rorl
popf
mov
pop
xchg
push
add
lock
inc
loop
je
sbb
cmp
mov
fistpl
jbe
and
outsb
enter
test
mov
icebp
xchg
jmp
fistpl
insl
nopl
repz
mov
inc
sub
fmuls
xor
push
out
cmpsb
add
pop
fstpt
rcrl
jns
sar
xchg
xchg
ja
cltd
lahf
push
adc
clc
dec
dec
adc
insl
dec
and
jle
sbb
loop
sub
int
mov
imul
pop
adc
jae
or
dec
adc
jg
jl
adc
mov
clc
dec
mov
imul
jns
imul
imul
ljmp
pop
jns
pop
aas
jne
pop
push
lret
mov
inc
jp
push
jmp
xor
iret
sbb
inc
js
cmp
mov
xchg
or
mov
inc
ds
int3
outsl
je
call
pushl
sbb
ds
sub
lret
jp
insl
sbb
fs
sbb
push
mov
inc
xorb
push
or
int3
adc
push
pop
xor
mov
mov
aas
ja
or
jmp
mov
sbb
mov
pop
and
ficoms
incl
lcall
pushf
es
bound
xchg
data16
shrb
and
rcrl
js
inc
test
adc
adc
and
push
sbbl
or
push
movsb
sbb
jno
jecxz
pop
cli
movsl
jle
mov
les
mov
inc
mov
sbb
or
shlb
popa
and
sub
jg
cs
pop
jl
movsb
or
pop
xor
add
cmp
adc
insb
dec
push
mov
jg
and
pop
and
fsubs
sub
xchg
pop
in
pusha
rcl
mov
fildll
add
xor
xchg
and
fcompl
xchg
dec
std
mov
cmp
orl
in
sahf
in
lcall
lret
and
enter
sub
jae
rol
movsl
adc
outsl
ljmp
and
and
add
inc
ljmp
aam
jecxz
inc
mov
pop
nop
pop
jnp
cmp
int3
xor
call
inc
popf
jne
out
and
inc
cmp
inc
xchg
push
mov
fsubl
jb
jg
dec
decl
stos
outsl
daa
fnsave
cmpsl
mov
push
and
lcall
push
stc
and
in
inc
and
adc
iret
aaa
outsb
cld
fists
sbb
arpl
add
and
mov
pop
ljmp
dec
in
cli
dec
call
cld
jb
pop
lods
dec
lock
lcall
cmp
pop
pop
jb
inc
pop
pop
jg
fistps
call
comiss
mov
popf
fs
adc
dec
inc
jae
cmp
pop
cltd
add
in
and
mov
call
mov
fnstsw
fwait
mov
dec
and
das
jno
insb
daa
cwtl
in
call
or
dec
cltd
leave
jp
insb
inc
addl
test
ret
add
pop
xor
cli
inc
jmp
rolb
loop
pop
mov
out
dec
and
std
outsl
adc
sub
sub
or
incl
add
add
add
add
add
add
shlb
add
outsl
adc
jne
lea
or
pop
lahf
call
clc
jg
or
inc
xor
ret
push
add
inc
pushl
add
add
push
call
sbb
xchg
testb
decl
adc
ret
call
jne
test
cltd
jg
pop
pop
pop
push
sub
mov
lea
dec
inc
mov
rep
mov
add
call
push
push
push
pop
push
rolb
add
test
ret
add
pushl
hlt
or
aas
out
aaa
in
add
cmp
cwtl
dec
push
jle
dec
mov
mov
mov
imul
leave
mov
sub
cld
stos
add
shl
jg
mov
xchg
outsb
dec
xchg
push
repz
ljmp
popf
and
xlat
into
xor
sub
shrb
cmp
push
pop
or
push
and
jne
dec
jp
xor
add
incl
test
sbb
sbb
push
fisubrl
loopne
dec
out
orb
icebp
inc
rolb
jl
fsubl
push
jns
sbb
repnz
pushf
les
out
add
adc
dec
pop
mov
lock
int
in
sahf
add
inc
push
incl
imul
jl
mul
xchg
cmp
insb
testb
inc
xorb
fsubrs
add
adc
sbb
inc
mov
stos
je
add
add
pop
bound
adc
xchg
inc
jmp
mov
dec
in
sbb
sub
xor
xlat
push
push
jae
mov
call
xor
add
imul
js
daa
inc
dec
shrb
aad
xchg
lea
add
and
aas
insb
pop
dec
repz
in
inc
ljmp
nop
test
cld
add
pop
pop
loop
sub
mov
rorb
jg
mov
nop
dec
pop
test
mov
adc
repz
enter
es
adc
jmp
mov
outsl
lret
inc
mov
ds
mov
and
call
pop
dec
lret
add
jp
and
push
lahf
adc
outsb
imul
cmp
push
cmp
ja
pop
xchg
scas
pushl
mov
sub
sub
shl
ljmp
aaa
add
call
insl
insb
dec
vmwrite
cmp
incl
aas
cmpsb
mov
mov
and
and
push
cmp
sar
inc
jno
rorb
dec
mov
stos
fcmovnbe
push
jae,pn
repnz
lret
les
dec
movsl
push
lahf
or
pop
push
test
xchg
add
and
test
sub
push
adc
hlt
and
add
jg
cwtl
mov
fucomip
mov
scas
fdivrp
add
sbb
les
add
iret
or
add
add
add
add
pop
dec
adc
pusha
sub
jns
sbbb
mov
loopne
call
adc
test
add
mov
filds
cmp
inc
fstpt
aaa
lcall
or
in
sbb
jmp
add
add
ficompl
sbb
jmp
sbb
loopne
das
xor
sub
int3
add
mov
stos
ret
mov
decl
adc
cmp
cmp
cld
adc
cmp
adc
stos
add
mov
popf
pop
adc
or
add
dec
sti
inc
pusha
in
repnz
loop
icebp
add
add
int
sbb
lods
addl
jae
outsl
add
lods
iret
sbb
pop
cmp
adc
clc
add
or
mov
add
push
test
fstpl
cmp
adc
orb
cwtl
inc
xchg
or
or
das
xchg
cli
test
mov
inc
adc
pop
pop
add
pop
jb
sbb
jl
dec
repz
outsl
adc
lock
nop
clc
push
std
das
out
push
ds
inc
incl
bound
mov
inc
adc
add
cmpsl
sub
sti
sub
add
dec
fwait
mov
add
add
add
mov
mov
mov
bound
inc
adc
bound
adc
sbb
or
js
push
cmp
jmp
push
xchg
xorps
adc
out
xchg
adc
fstl
pop
and
iret
inc
lret
push
xor
push
repnz
push
outsl
cld
call
mov
pop
pop
mov
and
sti
xchg
in
ljmp
jb
xchg
push
das
lret
xorb
cmp
jl
xchg
xchg
sub
lcall
in
rep
cmpsl
repnz
lahf
into
jl
xlat
cld
sbb
decl
sub
cli
test
push
rorb
or
jns
out
out
decl
xchg
out
jns
fimuls
cmpsl
mov
loop
or
mov
imul
cmp
rorl
loopne
push
mov
adc
icebp
ljmp
pop
cmp
push
pop
sbb
push
ret
fsubrs
pushl
and
inc
imul
lret
xor
dec
jns
inc
push
incl
icebp
fimuls
push
mov
pop
inc
add
outsl
mov
cld
adc
xchg
add
inc
jg
jmp
es
mov
mov
inc
shll
fs
insb
aas
subl
cmp
sbb
lret
jg
add
push
xchg
mov
incl
incl
fistpll
push
aas
inc
push
in
sbb
pop
in
addl
daa
pop
testl
push
call
fistps
mov
repz
xor
dec
sahf
insl
fcmovnb
lods
ljmp
mov
out
xchg
adc
cs
mov
dec
insb
sbb
jmp
fimuls
loope
or
sbb
push
ret
ud0
hlt
adc
xchg
cwtl
push
out
mov
mov
decl
int3
into
sbb
roll
dec
inc
and
sahf
mov
sub
test
lds
add
and
lcall
mov
jmp
addl
xlat
xchg
inc
push
add
inc
stc
mov
adcl
mov
cmp
cmpsb
iret
call
dec
pop
js
add
loopne
jmp
mov
test
imul
divl
add
fisttpll
sti
jmp
stos
push
inc
mov
out
jbe
int3
repnz
test
es
sub
clc
scas
call
cli
inc
jmp
add
repz
loope
jp
add
inc
gs
xchg
push
cmpsb
sbb
call
mov
pop
or
addl
lcall
in
xchg
cmp
cmp
dec
xor
pop
cmp
lcall
jg
cmpsb
lock
mov
popa
sar
test
or
stc
xchg
clc
repz
shlb
pop
fldt
inc
fwait
popf
mov
push
pusha
les
sbb
pushl
int3
in
sti
add
or
mov
add
pop
fs
dec
lea
ljmp
xor
ret
shrl
sbb
pop
pop
mov
icebp
sbb
mov
inc
repnz
lcall
inc
add
cmpsb
mov
imul
xor
fstpt
xchg
int
mov
std
or
int3
stos
in
das
in
mov
dec
les
xchg
les
cmp
int
mov
fisubs
xchg
cmp
add
mov
xchg
aas
and
movb
mov
mov
push
add
sarl
jl
mov
idiv
inc
decl
adc
movsl
add
ljmp
daa
cld
call
in
fs
inc
rcr
push
arpl
add
and
call
cmp
cmp
jp
and
lods
cmp
mov
add
addb
mov
xlat
sbb
mov
cmpsb
mov
inc
jecxz
test
mov
mov
dec
fcmovnb
cmp
jno
sar
in
jmp
add
dec
nop
pop
cmp
fisubl
add
loop
mov
cmpsl
push
push
outsl
and
pop
mov
sub
fldt
jg
ljmp
pop
add
faddp
add
call
mov
pop
push
call
loop
cmp
and
add
dec
jbe
std
orl
das
std
xchg
jge
subb
add
cmpsb
fmuls
fistpl
jg
outsl
lock
cs
and
ds
pop
inc
inc
in
movsb
inc
out
pop
push
inc
dec
mov
jmp
insb
cmpsb
jns
and
pop
shlb
outsl
push
pop
sbb
mov
hlt
jg
xchg
mov
pop
mov
and
inc
inc
xchg
add
sbb
mov
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
mov
cmp
or
or
jbe
add
mov
and
scas
dec
and
cltd
push
ret
ss
inc
mov
into
xor
push
inc
jp
popf
ja
cmp
or
add
incl
push
push
push
mov
sarl
loope
loopne
cld
cli
sbb
test
je
addb
mov
incl
add
add
mov
jne
add
jo
out
sti
adc
subl
jle
mov
in
mov
lea
in
jmp
fbld
pop
cmp
call
adc
sub
adc
mov
leave
pop
or
ljmp
movsb
sbb
lcall
add
mov
loopne
mov
inc
xor
mov
cmp
fcos
lock
incl
adc
jmp
ja
mov
pop
ret
push
push
sub
xor
ret
decl
xchg
dec
jl
faddl
and
or
and
aaa
nop
inc
sub
std
jg
fdiv
pop
js
push
add
add
decl
xor
scas
dec
inc
adc
loope
arpl
or
add
or
sbb
pop
pushl
sbb
sbb
mov
mov
loope
push
shll
sbb
lods
dec
and
pushl
xchg
xchg
call
or
push
push
push
push
push
call
in
cmp
mov
decl
mov
add
nop
sbb
push
popa
or
sbb
ret
mov
and
inc
lret
and
iret
enter
and
cmpl
je
add
test
fmull
mov
arpl
roll
icebp
jnp
aad
and
lea
call
dec
sub
popa
nop
shrb
ret
inc
push
inc
mov
mov
call
psubw
pop
fisubrs
and
leave
xor
push
lds
pop
incl
add
je
mov
lea
inc
jne
or
lahf
adc
jmp
test
push
call
dec
loope
add
lea
push
xor
adc
xchg
mov
es
enter
call
or
cmp
loop
repz
mov
sti
inc
cli
push
jne
cmovae
dec
lcall
xorb
jae
movb
add
pusha
lret
mov
add
add
orb
dec
jg
inc
xor
fnstcw
sti
xor
sbb
pop
ret
sub
pop
ficompl
incl
bound
mov
sbb
outsb
je
push
jns
push
outsl
imul
or
jne
fs
call
jecxz
jb
arpl
lret
jo
and
aas
insb
fs
int
bound
jmp
cmp
popa
out
dec
sti
cmp
jge
in
jecxz
insl
jecxz
data16
aas
bound
jne
cs
das
cld
stc
lea
popa
insb
pop
mov
inc
pop
xchg
outsb
xchg
pop
test
mov
jne
jae
add
pop
jecxz
dec
jmp
call
popa
addr16
inc
outsl
js
inc
jnp
mov
adc
imul
insb
and
inc
js
je
movsb
fsubp
fcoml
dec
mov
mov
cld
dec
push
aam
call
jmp
adc
addr16
jg
add
lret
push
call
xchg
cmp
inc
add
push
add
shll
jle
sti
xor
daa
sbb
mov
or
xor
stos
pop
add
jmp
mov
xchg
jne
pushl
dec
mov
add
and
adc
jge
movb
pop
cmpl
je
jmp
ja
xor
push
cmp
repz
fmuls
fninit
fisubrl
cmp
jmp
in
movw
sahf
lods
or
add
add
mov
aas
and
cmpsb
bswap
lahf
sti
xchg
call
loopne
mov
add
pop
dec
stc
adc
jmp
js
sbb
repnz
decl
lds
dec
cmp
adc
inc
into
shlb
fwait
sbb
incl
and
or
push
xor
out
leave
pop
mov
pop
adc
adc
jge
out
cmp
incl
cmp
je
cmp
or
in
call
jne
sub
mov
cmp
sbbl
pop
jp
push
push
cmpsl
repz
rclb
dec
pop
bound
sbbl
scas
pop
js
xor
push
push
out
add
add
push
cld
call
out
pushf
sbb
adc
jmp
aad
pusha
and
data16
dec
mov
das
pop
pushl
sbb
hlt
popa
ds
lds
out
ja
pop
push
dec
dec
xor
adc
icebp
mov
incl
xchg
or
test
repz
mov
push
pop
cld
lret
aaa
pop
dec
into
and
pop
incl
lea
jno
ss
inc
lret
adc
jb
cmp
adc
add
jmp
or
lcall
push
mov
dec
js
and
shl
pop
add
movsl
pop
inc
and
or
fldenv
cmp
adc
sbb
mov
lea
add
mov
xor
in
jmp
dec
adc
xor
push
fisubrl
int3
dec
push
test
pop
pop
cmpsb
lea
xor
insb
mov
test
inc
cld
sub
or
adc
lea
mov
push
call
pop
jl,pn
lcall
jb
pop
lcall
push
xor
and
push
add
adc
decb
push
jae
sub
pop
decl
lcall
icebp
stos
repnz
adc
cmp
inc
daa
xchg
and
loop
ss
lcall
inc
add
mov
in
sbb
mov
wbinvd
adc
sub
arpl
mov
call
fstpt
inc
leave
push
out
push
je
fldln2
xor
inc
aam
sbb
in
jle
stc
jmp
cwtl
sbb
push
push
push
push
call
movsb
dec
sub
adc
leave
outsb
sbb
mov
sbb
call
inc
or
dec
sbbl
and
imul
shlb
xchg
xor
push
ud0
dec
add
repnz
inc
inc
rol
cmp
adc
popf
dec
push
movsb
dec
dec
test
adc
dec
jmp
jmp
les
cli
add
jo
ret
pop
sub
adc
call
push
leave
add
add
dec
lret
out
les
int
enter
lock
andb
mov
mov
cld
xor
cmp
outsl
jb
sbb
mov
insl
lds
xor
call
shr
and
inc
mov
cmp
or
shlb
aas
stos
jmp
cmp
fcmovne
jne
inc
jmp
lods
shr
je
imul
mov
call
jge
or
loopne
outsl
jo
jae
clc
jg
inc
inc
xchg
mov
mov
sbb
js
mov
pop
jmp
fcmovnu
ja
imul
rol
je
call
jl
push
jb
ret
call
mov
jle
aam
outsb
mov
outsb
add
or
loopne
or
sub
fdivs
lods
sub
sbb
and
and
mov
fildll
lea
inc
add
or
movb
pop
add
test
dec
cld
iret
ret
mov
popl
jg
add
pop
lea
sbb
xlat
add
insl
pushl
push
mov
add
mov
push
mov
push
mov
inc
and
or
pop
mov
or
repnz
mov
push
in
adc
xor
lret
push
push
push
call
pop
add
aaa
lock
outsl
ja
xrelease
push
mov
xor
push
mov
call
mov
and
dec
sbb
push
call
sti
add
pop
jmp
add
enter
inc
push
add
mov
test
sbb
mov
add
sub
adc
add
dec
outsl
popa
fs
imul
popa
jb
inc
inc
gs
jb
arpl
fs
jae
orps
je
fwait
lods
std
jne
insb
inc
insb
insb
adc
inc
sbb
add
add
dec
addb
incl
add
add
dec
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
